EMERGENCY Released IVM*2*171 SEQ #142
Extracted from mail message
**KIDS**:IVM*2.0*171^

**INSTALL NAME**
IVM*2.0*171
"BLD",10232,0)
IVM*2.0*171^INCOME VERIFICATION MATCH^0^3180430^y
"BLD",10232,1,0)
^^2^2^3180430^^
"BLD",10232,1,1,0)
Please see the IVM*2.0*171 patch description for detailed information
"BLD",10232,1,2,0)
regarding this patch.
"BLD",10232,4,0)
^9.64PA^^
"BLD",10232,6.3)
3
"BLD",10232,"INID")
n^n^n
"BLD",10232,"KRN",0)
^9.67PA^779.2^20
"BLD",10232,"KRN",.4,0)
.4
"BLD",10232,"KRN",.401,0)
.401
"BLD",10232,"KRN",.402,0)
.402
"BLD",10232,"KRN",.403,0)
.403
"BLD",10232,"KRN",.5,0)
.5
"BLD",10232,"KRN",.84,0)
.84
"BLD",10232,"KRN",3.6,0)
3.6
"BLD",10232,"KRN",3.8,0)
3.8
"BLD",10232,"KRN",9.2,0)
9.2
"BLD",10232,"KRN",9.8,0)
9.8
"BLD",10232,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",10232,"KRN",9.8,"NM",1,0)
IVMPREC6^^0^B155993541
"BLD",10232,"KRN",9.8,"NM",2,0)
IVMPREC8^^0^B259327625
"BLD",10232,"KRN",9.8,"NM","B","IVMPREC6",1)

"BLD",10232,"KRN",9.8,"NM","B","IVMPREC8",2)

"BLD",10232,"KRN",19,0)
19
"BLD",10232,"KRN",19.1,0)
19.1
"BLD",10232,"KRN",101,0)
101
"BLD",10232,"KRN",409.61,0)
409.61
"BLD",10232,"KRN",771,0)
771
"BLD",10232,"KRN",779.2,0)
779.2
"BLD",10232,"KRN",870,0)
870
"BLD",10232,"KRN",8989.51,0)
8989.51
"BLD",10232,"KRN",8989.52,0)
8989.52
"BLD",10232,"KRN",8994,0)
8994
"BLD",10232,"KRN","B",.4,.4)

"BLD",10232,"KRN","B",.401,.401)

"BLD",10232,"KRN","B",.402,.402)

"BLD",10232,"KRN","B",.403,.403)

"BLD",10232,"KRN","B",.5,.5)

"BLD",10232,"KRN","B",.84,.84)

"BLD",10232,"KRN","B",3.6,3.6)

"BLD",10232,"KRN","B",3.8,3.8)

"BLD",10232,"KRN","B",9.2,9.2)

"BLD",10232,"KRN","B",9.8,9.8)

"BLD",10232,"KRN","B",19,19)

"BLD",10232,"KRN","B",19.1,19.1)

"BLD",10232,"KRN","B",101,101)

"BLD",10232,"KRN","B",409.61,409.61)

"BLD",10232,"KRN","B",771,771)

"BLD",10232,"KRN","B",779.2,779.2)

"BLD",10232,"KRN","B",870,870)

"BLD",10232,"KRN","B",8989.51,8989.51)

"BLD",10232,"KRN","B",8989.52,8989.52)

"BLD",10232,"KRN","B",8994,8994)

"BLD",10232,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10232,"QUES",0)
^9.62^^
"BLD",10232,"REQB",0)
^9.611^1^1
"BLD",10232,"REQB",1,0)
IVM*2.0*167^1
"BLD",10232,"REQB","B","IVM*2.0*167",1)

"MBREQ")
0
"PKG",120,-1)
1^1
"PKG",120,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",120,20,0)
^9.402P^^
"PKG",120,22,0)
^9.49I^1^1
"PKG",120,22,1,0)
2.0^2941021^2960823
"PKG",120,22,1,"PAH",1,0)
171^3180430
"PKG",120,22,1,"PAH",1,1,0)
^^2^2^3180430
"PKG",120,22,1,"PAH",1,1,1,0)
Please see the IVM*2.0*171 patch description for detailed information
"PKG",120,22,1,"PAH",1,1,2,0)
regarding this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVMPREC6")
0^1^B155993541^B155161380
"RTN","IVMPREC6",1,0)
IVMPREC6 ;ALB/KCL,BRM,CKN,TDM,PWC,LBD,KUM - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES ;04-27-2017 8:06AM
"RTN","IVMPREC6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**3,4,12,17,34,58,79,102,115,140,144,121,151,152,165,167,171**;21-OCT-94;Build 3
"RTN","IVMPREC6",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IVMPREC6",4,0)
 ;
"RTN","IVMPREC6",5,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC6",6,0)
 ; messages received from the IVM center.  Format of HL7 batch message:
"RTN","IVMPREC6",7,0)
 ;
"RTN","IVMPREC6",8,0)
 ;       BHS
"RTN","IVMPREC6",9,0)
 ;       {MSH
"RTN","IVMPREC6",10,0)
 ;        PID
"RTN","IVMPREC6",11,0)
 ;        ZPD
"RTN","IVMPREC6",12,0)
 ;        ZTA
"RTN","IVMPREC6",13,0)
 ;        ZGD
"RTN","IVMPREC6",14,0)
 ;        ZCT (1 episode required, multiple possible)
"RTN","IVMPREC6",15,0)
 ;        ZEM (Veteran)
"RTN","IVMPREC6",16,0)
 ;        ZEM (Spouse - Optional)
"RTN","IVMPREC6",17,0)
 ;        RF1 (optional, multiple possible)
"RTN","IVMPREC6",18,0)
 ;       }
"RTN","IVMPREC6",19,0)
 ;       BTS
"RTN","IVMPREC6",20,0)
 ;
"RTN","IVMPREC6",21,0)
 ;
"RTN","IVMPREC6",22,0)
EN ; - entry point to process HL7 patient demographic message 
"RTN","IVMPREC6",23,0)
 ;
"RTN","IVMPREC6",24,0)
 N DGENUPLD,VAFCA08,DGRUGA08,COMP,DODSEG,GUARSEG
"RTN","IVMPREC6",25,0)
 ;N MULTDONE,XREP
"RTN","IVMPREC6",26,0)
 N XIVMA,IVMALADT,MULTIDONE
"RTN","IVMPREC6",27,0)
 N IVMPHDFG S IVMPHDFG=0 ; IVM*2*171 - add new variable IVMPHDFG to check for PHH deletion
"RTN","IVMPREC6",28,0)
 ;
"RTN","IVMPREC6",29,0)
 ; Setup array to hold all the Allowed Address Types
"RTN","IVMPREC6",30,0)
 ;F XIVMA="N","P","VAB1","VAB2","VAB3","VAB4" S IVMALADT(XIVMA)=""
"RTN","IVMPREC6",31,0)
 F XIVMA="P","VAB1","VAB2","VAB3","VAB4" S IVMALADT(XIVMA)=""
"RTN","IVMPREC6",32,0)
 ; Define the Confidential Address Categories
"RTN","IVMPREC6",33,0)
 ;S IVMALADT("VACAE")="CA^1"      ; ELIGIBILITY/ENROLLMENT
"RTN","IVMPREC6",34,0)
 ;S IVMALADT("VACAA")="CA^2"      ; APPOINTMENT/SCHEDULING
"RTN","IVMPREC6",35,0)
 ;S IVMALADT("VACAC")="CA^3"      ; COPAYMENTS/VETERAN BILLING
"RTN","IVMPREC6",36,0)
 ;S IVMALADT("VACAM")="CA^4"      ; MEDICAL RECORDS
"RTN","IVMPREC6",37,0)
 ;S IVMALADT("VACAO")="CA^5"      ; ALL OTHERS
"RTN","IVMPREC6",38,0)
 ; prevent a return Z07 when uploading a Z05 (Patient file triggers)
"RTN","IVMPREC6",39,0)
 S DGENUPLD="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS"
"RTN","IVMPREC6",40,0)
 ;
"RTN","IVMPREC6",41,0)
 ; prevent MPI A08 message when uploading Z05 (Patient file triggers)
"RTN","IVMPREC6",42,0)
 S VAFCA08=1  ;MPI/CIRN A08 suppression flag
"RTN","IVMPREC6",43,0)
 ;
"RTN","IVMPREC6",44,0)
 S IVMFLG=0,IVMADFLG=0
"RTN","IVMPREC6",45,0)
 ; - get incoming HL7 message from HL7 Transmission (#772) file
"RTN","IVMPREC6",46,0)
 F IVMDA=0:0 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  S IVMSEG=$G(^(IVMDA,0)) I $E(IVMSEG,1,3)="MSH" D
"RTN","IVMPREC6",47,0)
 .K HLERR,ZEMADRUP
"RTN","IVMPREC6",48,0)
 .S IVMTSTPT=""                          ;Initialize Temp Addr County
"RTN","IVMPREC6",49,0)
 .;
"RTN","IVMPREC6",50,0)
 .; - message control id from MSH segment
"RTN","IVMPREC6",51,0)
 .S MSGID=$P(IVMSEG,HLFS,10),HLMID=MSGID
"RTN","IVMPREC6",52,0)
 .;
"RTN","IVMPREC6",53,0)
 .; - perform demographics message consistency check
"RTN","IVMPREC6",54,0)
 .D EN^IVMPRECA Q:$D(HLERR)
"RTN","IVMPREC6",55,0)
 .;
"RTN","IVMPREC6",56,0)
 .;Set array of Email, Cell, Pager fields
"RTN","IVMPREC6",57,0)
 .D EPCFLDS(.EPCFARY,.EPCDEL)
"RTN","IVMPREC6",58,0)
 .D AUPBLD(.AUPFARY,.UPDAUPG)
"RTN","IVMPREC6",59,0)
 .; - get next msg segment
"RTN","IVMPREC6",60,0)
 .D NEXT I $E(IVMSEG,1,3)'="PID" D  Q
"RTN","IVMPREC6",61,0)
 ..S HLERR="Missing PID segment" D ACK^IVMPREC
"RTN","IVMPREC6",62,0)
 .;
"RTN","IVMPREC6",63,0)
 .F I=1:1 D NEXT Q:$E(IVMSEG,1,4)="ZPD^"  ;Go through all PID
"RTN","IVMPREC6",64,0)
 .; - patient IEN (DFN) from PID segment
"RTN","IVMPREC6",65,0)
 .;Use IVMPID array created in IVMPRECA while performing consistency
"RTN","IVMPREC6",66,0)
 .;to process PID segment
"RTN","IVMPREC6",67,0)
 .;
"RTN","IVMPREC6",68,0)
 .;I '$G(IVMDFN) S HLERR="Invalid DFN" D ACK^IVMPREC  Q
"RTN","IVMPREC6",69,0)
 .S DFN=$G(IVMDFN)
"RTN","IVMPREC6",70,0)
 .;I ('DFN!(DFN'=+DFN)!('$D(^DPT(+DFN,0)))) D  Q
"RTN","IVMPREC6",71,0)
 .;.S HLERR="Invalid DFN" D ACK^IVMPREC
"RTN","IVMPREC6",72,0)
 .;I IVMPID(19)'=$P(^DPT(DFN,0),"^",9) D  Q
"RTN","IVMPREC6",73,0)
 .;.S HLERR="Couldn't match HEC SSN with DHCP SSN" D ACK^IVMPREC
"RTN","IVMPREC6",74,0)
 .;
"RTN","IVMPREC6",75,0)
 .; - check for entry in IVM PATIENT file, otherwise create stub entry
"RTN","IVMPREC6",76,0)
 .S IVM3015=$O(^IVM(301.5,"B",DFN,0))
"RTN","IVMPREC6",77,0)
 .I 'IVM3015 S DGENUPLD="",IVM3015=$$LOG^IVMPLOG(DFN,DT),DGENUPLD="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS" ;IVM*2.0*165
"RTN","IVMPREC6",78,0)
 .I 'IVM3015 D  Q
"RTN","IVMPREC6",79,0)
 ..S HLERR="Failed to create entry in IVM PATIENT file"
"RTN","IVMPREC6",80,0)
 ..D ACK^IVMPREC
"RTN","IVMPREC6",81,0)
 .;
"RTN","IVMPREC6",82,0)
 .; - compare PID segment fields with DHCP fields
"RTN","IVMPREC6",83,0)
 .S IVMSEG="PID"  ;Setting IVMSEG to PID before it calls COMPARE
"RTN","IVMPREC6",84,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG) Q:$D(HLERR)
"RTN","IVMPREC6",85,0)
 .;
"RTN","IVMPREC6",86,0)
 .; - get next msg segment -decrement the counter so it can pickup ZPD
"RTN","IVMPREC6",87,0)
 .S IVMDA=IVMDA-1 D NEXT I $E(IVMSEG,1,3)'="ZPD" D  Q
"RTN","IVMPREC6",88,0)
 ..S HLERR="Missing ZPD segment" D ACK^IVMPREC
"RTN","IVMPREC6",89,0)
 .;Convert "" to null in ZPD segment except seq. 8,9, 31 and 32
"RTN","IVMPREC6",90,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",9,10,32,33,")
"RTN","IVMPREC6",91,0)
 .;
"RTN","IVMPREC6",92,0)
 .; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC6",93,0)
 .D COMPARE(IVMSEG)
"RTN","IVMPREC6",94,0)
 .;
"RTN","IVMPREC6",95,0)
 .; - get next msg segment
"RTN","IVMPREC6",96,0)
 .D NEXT I $E(IVMSEG,1,3)="ZEL" D  Q
"RTN","IVMPREC6",97,0)
 ..S HLERR="ZEL segment should not be sent in Z05 message" D ACK^IVMPREC
"RTN","IVMPREC6",98,0)
 .;
"RTN","IVMPREC6",99,0)
 .I $E(IVMSEG,1,3)'="ZTA" D  Q
"RTN","IVMPREC6",100,0)
 ..S HLERR="Missing ZTA segment" D ACK^IVMPREC
"RTN","IVMPREC6",101,0)
 .;Convert "" to null in ZTA segment seq. 7
"RTN","IVMPREC6",102,0)
 .I $P(IVMSEG,HLFS,8)=HLQ S $P(IVMSEG,HLFS,8)=""
"RTN","IVMPREC6",103,0)
 .;
"RTN","IVMPREC6",104,0)
 .; - compare ZTA segment fields with DHCP fields
"RTN","IVMPREC6",105,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",106,0)
 .D NEXT
"RTN","IVMPREC6",107,0)
 .;
"RTN","IVMPREC6",108,0)
 .; - get next msg segment
"RTN","IVMPREC6",109,0)
 .I $E(IVMSEG,1,3)'="ZGD" D  Q
"RTN","IVMPREC6",110,0)
 ..S HLERR="Missing ZGD segment" D ACK^IVMPREC
"RTN","IVMPREC6",111,0)
 .;
"RTN","IVMPREC6",112,0)
 .; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC6",113,0)
 .; convert "" to null for ZGD segment
"RTN","IVMPREC6",114,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",7,") ;ignore seq. 6
"RTN","IVMPREC6",115,0)
 .; convert seq. 6 separately
"RTN","IVMPREC6",116,0)
 .S $P(IVMSEG,HLFS,7)=$$CLEARF^IVMPRECA($P(IVMSEG,HLFS,7),$E(HLECH))
"RTN","IVMPREC6",117,0)
 .D COMPARE(IVMSEG)
"RTN","IVMPREC6",118,0)
 .;S IVMFLG=0
"RTN","IVMPREC6",119,0)
 .;
"RTN","IVMPREC6",120,0)
 .;S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Skip ZCT & ZEM -coming later
"RTN","IVMPREC6",121,0)
 .;.D NEXT
"RTN","IVMPREC6",122,0)
 .;.I ($E(IVMSEG,1,3)'="ZCT")&($E(IVMSEG,1,3)'="ZEM") S MULTDONE=1 Q
"RTN","IVMPREC6",123,0)
 .;S IVMDA=IVMDA-1
"RTN","IVMPREC6",124,0)
 .;
"RTN","IVMPREC6",125,0)
 .; - get next msg segment
"RTN","IVMPREC6",126,0)
 .D NEXT
"RTN","IVMPREC6",127,0)
 .I $E(IVMSEG,1,3)'="ZCT" D  Q
"RTN","IVMPREC6",128,0)
 ..S HLERR="Missing ZCT segment" D ACK^IVMPREC
"RTN","IVMPREC6",129,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC6",130,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)   ;Process 1st ZCT
"RTN","IVMPREC6",131,0)
 .S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Handle possible mult ZCTs
"RTN","IVMPREC6",132,0)
 ..D NEXT I $E(IVMSEG,1,3)'="ZCT" S MULTDONE=1 Q
"RTN","IVMPREC6",133,0)
 ..S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC6",134,0)
 ..I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",135,0)
 .;
"RTN","IVMPREC6",136,0)
 .S IVMDA=IVMDA-1 D NEXT
"RTN","IVMPREC6",137,0)
 .I $E(IVMSEG,1,3)'="ZEM" D  Q
"RTN","IVMPREC6",138,0)
 ..S HLERR="Missing ZEM segment" D ACK^IVMPREC
"RTN","IVMPREC6",139,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)   ;Process 1st ZEM
"RTN","IVMPREC6",140,0)
 .S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Handle possible mult ZEMs
"RTN","IVMPREC6",141,0)
 ..D NEXT I $E(IVMSEG,1,3)'="ZEM" S MULTDONE=1 Q
"RTN","IVMPREC6",142,0)
 ..I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",143,0)
 .S IVMDA=IVMDA-1
"RTN","IVMPREC6",144,0)
 .;
"RTN","IVMPREC6",145,0)
 .; - check for RF1 segment and get segment if it exists
"RTN","IVMPREC6",146,0)
 .;     This process will automatically update patient address data
"RTN","IVMPREC6",147,0)
 .;     in the Patient (#2) file if the incoming address is more
"RTN","IVMPREC6",148,0)
 .;     recent than the existing one.
"RTN","IVMPREC6",149,0)
 .;Modified code to handle multiple RF1 segment - IVM*2*115
"RTN","IVMPREC6",150,0)
 .S (UPDEPC("SAD"),UPDEPC("CPH"),UPDEPC("PNO"),UPDEPC("EAD"),UPDEPC("PHH"))=0
"RTN","IVMPREC6",151,0)
 .S QFLG=0 I $$RF1CHK(IVMRTN,IVMDA) F I=1:1 D  Q:QFLG
"RTN","IVMPREC6",152,0)
 ..D NEXT
"RTN","IVMPREC6",153,0)
 ..S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",7,") ;ignore seq. 6
"RTN","IVMPREC6",154,0)
 ..S $P(IVMSEG,HLFS,7)=$$CLEARF^IVMPRECA($P(IVMSEG,HLFS,7),$E(HLECH))
"RTN","IVMPREC6",155,0)
 ..I $P(IVMSEG,HLFS,4)="" S QFLG=1 Q  ;Quit if RF1 is blank
"RTN","IVMPREC6",156,0)
 ..D COMPARE(IVMSEG)
"RTN","IVMPREC6",157,0)
 ..I '$$RF1CHK(IVMRTN,IVMDA) S QFLG=1
"RTN","IVMPREC6",158,0)
 .D AUTOAUP^IVMPREC9(DFN,.UPDAUP,.UPDAUPG)
"RTN","IVMPREC6",159,0)
 .S IVMFLG=0
"RTN","IVMPREC6",160,0)
 ;
"RTN","IVMPREC6",161,0)
 ; - send mail message if necessary
"RTN","IVMPREC6",162,0)
 ; This bulletin has been disabled.  IVM*2*140
"RTN","IVMPREC6",163,0)
 ;I IVMCNTR D MAIL^IVMUFNC()
"RTN","IVMPREC6",164,0)
 ; Cleanup variables if no msg necessary
"RTN","IVMPREC6",165,0)
 I 'IVMCNTR K IVMTEXT,XMSUB
"RTN","IVMPREC6",166,0)
 ;
"RTN","IVMPREC6",167,0)
ENQ ; - cleanup variables
"RTN","IVMPREC6",168,0)
 K DA,DFN,IVMADDR,IVMADFLG,IVMDA,IVMDHCP,IVMFLAG,IVMFLD,IVMPHDFG,IVMPIECE,IVMSEG,IVMSTART,IVMXREF,DGENUPLD,IVMPID,PIDSTR,ADDRESS,TELECOM,UPDEPC,EPCFARY,IVMDFN,DODSEG,EPCDEL,GUARSEG,UPDAUP,IVMRACE,IVMTSTPT
"RTN","IVMPREC6",169,0)
 Q
"RTN","IVMPREC6",170,0)
 ;
"RTN","IVMPREC6",171,0)
 ;
"RTN","IVMPREC6",172,0)
NEXT ; - get the next HL7 segment in the message from HL7 Transmission (#772) file
"RTN","IVMPREC6",173,0)
 ;
"RTN","IVMPREC6",174,0)
 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)),IVMSEG=$G(^(+IVMDA,0))
"RTN","IVMPREC6",175,0)
 Q
"RTN","IVMPREC6",176,0)
 ;
"RTN","IVMPREC6",177,0)
 ;
"RTN","IVMPREC6",178,0)
COMPARE(IVMSEG) ; - compare incoming HL7 segment/fields with DHCP fields
"RTN","IVMPREC6",179,0)
 ;
"RTN","IVMPREC6",180,0)
 ;  Input:  IVMSEG  --  as the text of the incoming HL7 message
"RTN","IVMPREC6",181,0)
 ;
"RTN","IVMPREC6",182,0)
 ; Output:  None
"RTN","IVMPREC6",183,0)
 ;
"RTN","IVMPREC6",184,0)
 ; - get 3 letter HL7 segment name
"RTN","IVMPREC6",185,0)
 S IVMXREF=$P(IVMSEG,HLFS,1),IVMSTART=IVMXREF
"RTN","IVMPREC6",186,0)
 ;
"RTN","IVMPREC6",187,0)
 ; - strip off HL7 segment name
"RTN","IVMPREC6",188,0)
 S IVMSEG=$P(IVMSEG,HLFS,2,99)
"RTN","IVMPREC6",189,0)
 ;
"RTN","IVMPREC6",190,0)
 ; - roll through "C" x-ref in IVM Demographic Upload Fields (#301.92) file
"RTN","IVMPREC6",191,0)
 F  S IVMXREF=$O(^IVM(301.92,"C",IVMXREF)) Q:IVMXREF']""  D
"RTN","IVMPREC6",192,0)
 .S IVMDEMDA=$O(^IVM(301.92,"C",IVMXREF,"")) Q:IVMDEMDA']""
"RTN","IVMPREC6",193,0)
 .I $$INACTIVE(IVMDEMDA) Q
"RTN","IVMPREC6",194,0)
 .;
"RTN","IVMPREC6",195,0)
 .; - compare incoming HL7 segment fields with DHCP fields
"RTN","IVMPREC6",196,0)
 .I IVMXREF["PID",(IVMSTART["PID") D PID^IVMPREC8
"RTN","IVMPREC6",197,0)
 .I IVMXREF["ZPD",(IVMSTART["ZPD") D ZPD^IVMPREC8
"RTN","IVMPREC6",198,0)
 .I IVMXREF["ZTA",(IVMSTART["ZTA") D ZTA^IVMPREC8
"RTN","IVMPREC6",199,0)
 .I IVMXREF["ZGD",(IVMSTART["ZGD") D ZGD^IVMPREC8
"RTN","IVMPREC6",200,0)
 .I IVMXREF["ZCT",(IVMSTART["ZCT") D ZCT^IVMPREC8
"RTN","IVMPREC6",201,0)
 .I IVMXREF["ZEM",(IVMSTART["ZEM") D ZEM^IVMPREC8
"RTN","IVMPREC6",202,0)
 .I IVMXREF["RF1",(IVMSTART["RF1") D RF1^IVMPREC8
"RTN","IVMPREC6",203,0)
 Q
"RTN","IVMPREC6",204,0)
 ;
"RTN","IVMPREC6",205,0)
 ;
"RTN","IVMPREC6",206,0)
DEMBULL ; -  build mail message for transmission to IVM mail group notifying
"RTN","IVMPREC6",207,0)
 ;    them that patients with updated demographic data has been received
"RTN","IVMPREC6",208,0)
 ;    from the IVM Center and may now be uploaded into DHCP.
"RTN","IVMPREC6",209,0)
 ;
"RTN","IVMPREC6",210,0)
 ; If record is auto uploaded, don't add veteran to bulletin
"RTN","IVMPREC6",211,0)
 I $$CKAUTO Q
"RTN","IVMPREC6",212,0)
 ;
"RTN","IVMPREC6",213,0)
 S IVMPTID=$$PT^IVMUFNC4(DFN)
"RTN","IVMPREC6",214,0)
 S XMSUB="IVM - DEMOGRAPHIC UPLOAD for "_$P($P(IVMPTID,"^"),",")_" ("_$P(IVMPTID,"^",3)_")"
"RTN","IVMPREC6",215,0)
 S IVMTEXT(1)="Updated demographic information has been received from the"
"RTN","IVMPREC6",216,0)
 S IVMTEXT(2)="Health Eligibilty Center.  Please select the 'Demographic Upload'"
"RTN","IVMPREC6",217,0)
 S IVMTEXT(3)="option from the IVM Upload Menu in order to take action on this"
"RTN","IVMPREC6",218,0)
 S IVMTEXT(4)="demographic information.  If you have any questions concerning the"
"RTN","IVMPREC6",219,0)
 S IVMTEXT(5)="information received, please contact the Health Eligibility Center."
"RTN","IVMPREC6",220,0)
 S IVMTEXT(7)=""
"RTN","IVMPREC6",221,0)
 S IVMTEXT(8)="The Health Eligibilty Center has identified the following"
"RTN","IVMPREC6",222,0)
 S IVMTEXT(9)="patients as having updated demographic information:"
"RTN","IVMPREC6",223,0)
 S IVMTEXT(10)=""
"RTN","IVMPREC6",224,0)
 S IVMCNTR=IVMCNTR+1
"RTN","IVMPREC6",225,0)
 S IVMTEXT(IVMCNTR+10)=$J(IVMCNTR_")",5)_"  "_$P(IVMPTID,"^")_" ("_$P(IVMPTID,"^",3)_")"
"RTN","IVMPREC6",226,0)
 Q
"RTN","IVMPREC6",227,0)
 ;
"RTN","IVMPREC6",228,0)
INACTIVE(IVMDEMDA) ;Check if field is inactive in Demographic Upload
"RTN","IVMPREC6",229,0)
 ; Input  -- IVMDEMDA IVM Demographic Upload Fields IEN
"RTN","IVMPREC6",230,0)
 ; Output -- 1=Yes and 0=No
"RTN","IVMPREC6",231,0)
 Q +$P($G(^IVM(301.92,IVMDEMDA,0)),U,9)
"RTN","IVMPREC6",232,0)
 ;
"RTN","IVMPREC6",233,0)
RF1CHK(IVMRTN,IVMDA) ;does an RF1 segment exist in this message?
"RTN","IVMPREC6",234,0)
 N RF1
"RTN","IVMPREC6",235,0)
 S RF1=$O(^TMP($J,IVMRTN,IVMDA))
"RTN","IVMPREC6",236,0)
 I $E($G(^(+RF1,0)),1,3)'="RF1" Q 0
"RTN","IVMPREC6",237,0)
 Q 1
"RTN","IVMPREC6",238,0)
 ;
"RTN","IVMPREC6",239,0)
CKAUTO() ;
"RTN","IVMPREC6",240,0)
 ; Chect if message qualifies for an auto upload.
"RTN","IVMPREC6",241,0)
 N AUTO,IVMI,DOD
"RTN","IVMPREC6",242,0)
 S AUTO=0,IVMI=$O(^IVM(301.92,"C","ZPD09",""))
"RTN","IVMPREC6",243,0)
 I IVMI=IVMDEMDA  D
"RTN","IVMPREC6",244,0)
 .I +IVMFLD'>0 S AUTO=1 Q
"RTN","IVMPREC6",245,0)
 .S DOD=$P($G(^DPT(DFN,.35)),U)
"RTN","IVMPREC6",246,0)
 .I DOD=IVMFLD S AUTO=1 Q
"RTN","IVMPREC6",247,0)
 ;
"RTN","IVMPREC6",248,0)
 Q AUTO
"RTN","IVMPREC6",249,0)
BLDPID(PIDTMP,IVMPID) ;Build IVMPID subscripted by sequence number
"RTN","IVMPREC6",250,0)
 N STR,X1,X2,N,TEXT,C,L
"RTN","IVMPREC6",251,0)
 S STR="",X1=1,(N,X2)=0
"RTN","IVMPREC6",252,0)
 F  S N=$O(PIDTMP(N)) Q:N=""  S TEXT=PIDTMP(N) F L=1:1:$L(TEXT) S C=$E(TEXT,L) D
"RTN","IVMPREC6",253,0)
 . I C="^" D  Q
"RTN","IVMPREC6",254,0)
 . . I X2 S X2=X2+1,IVMPID(X1,X2)=STR
"RTN","IVMPREC6",255,0)
 . . E  S IVMPID(X1)=STR
"RTN","IVMPREC6",256,0)
 . . S STR="",X1=X1+1,X2=0
"RTN","IVMPREC6",257,0)
 . I C="|" D  Q
"RTN","IVMPREC6",258,0)
 . . S X2=X2+1,IVMPID(X1,X2)=STR,STR=""
"RTN","IVMPREC6",259,0)
 . S STR=STR_C
"RTN","IVMPREC6",260,0)
 I $G(C)'="",$G(C)'="^",$G(C)'="|" D
"RTN","IVMPREC6",261,0)
 . I X2 S X2=X2+1,IVMPID(X1,X2)=STR Q
"RTN","IVMPREC6",262,0)
 . S IVMPID(X1)=STR
"RTN","IVMPREC6",263,0)
 Q
"RTN","IVMPREC6",264,0)
ADDRCHNG(DFN) ;Store Address Change Date/time, Source and site if necessary
"RTN","IVMPREC6",265,0)
 ;Store Residence Number Change Date/Time, Source and Site (IVM*2*152)
"RTN","IVMPREC6",266,0)
 N IVMVALUE,IVMFIELD
"RTN","IVMPREC6",267,0)
 I '$D(^TMP($J,"CHANGE UPDATE")) Q
"RTN","IVMPREC6",268,0)
 S IVMFIELD=0 F  S IVMFIELD=$O(^TMP($J,"CHANGE UPDATE",IVMFIELD)) Q:IVMFIELD=""  D
"RTN","IVMPREC6",269,0)
 . S IVMVALUE=$G(^TMP($J,"CHANGE UPDATE",IVMFIELD))
"RTN","IVMPREC6",270,0)
 . S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"////^S X=IVMVALUE"
"RTN","IVMPREC6",271,0)
 . D ^DIE K DA,DIE,DR
"RTN","IVMPREC6",272,0)
 .; - delete inaccurate Addr Change Site data if Source is not VAMC
"RTN","IVMPREC6",273,0)
 . I IVMFIELD=.119,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.12)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMPREC6",274,0)
 .; - delete inaccurate Residence Number Change Site data if Source
"RTN","IVMPREC6",275,0)
 .;   is not VAMC (IVM*2*152)
"RTN","IVMPREC6",276,0)
 . I IVMFIELD=.1322,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.1323)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMPREC6",277,0)
 K ^TMP($J,"CHANGE UPDATE")
"RTN","IVMPREC6",278,0)
 Q
"RTN","IVMPREC6",279,0)
EPCFLDS(EPCFARY,EPCDEL) ;
"RTN","IVMPREC6",280,0)
 ;EPCFARY - Contains IENs of Pager, email, Cell phone and Home phone records in 301.92 File - Passed by reference
"RTN","IVMPREC6",281,0)
 ;EPCDEL - Contains field # of Pager, Email, Cell phone and Home phone fields in Patient(#2) file. - Passed by reference
"RTN","IVMPREC6",282,0)
 I (DODSEG)!(GUARSEG) Q
"RTN","IVMPREC6",283,0)
 S EPCFARY("PNO")=$O(^IVM(301.92,"B","PAGER NUMBER",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE SOURCE",0))
"RTN","IVMPREC6",284,0)
 S EPCFARY("CPH")=$O(^IVM(301.92,"B","CELLULAR NUMBER",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE SOURCE",0))
"RTN","IVMPREC6",285,0)
 S EPCFARY("EAD")=$O(^IVM(301.92,"B","EMAIL ADDRESS",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE SOURCE",0))
"RTN","IVMPREC6",286,0)
 ; IVM*2.0*167 - Make Home phone records auto-upload to Patient File
"RTN","IVMPREC6",287,0)
 S EPCFARY("PHH")=$O(^IVM(301.92,"B","PHONE NUMBER [RESIDENCE]",0))_"^"_$O(^IVM(301.92,"B","RESIDENCE NUMBER CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","RESIDENCE NUMBER CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","RESIDENCE NUMBER CHANGE SOURCE",0))
"RTN","IVMPREC6",288,0)
 S EPCDEL("PNO")=".135^.1312^.1313^.1314"
"RTN","IVMPREC6",289,0)
 S EPCDEL("CPH")=".134^.139^.1311^.13111"
"RTN","IVMPREC6",290,0)
 S EPCDEL("EAD")=".133^.136^.137^.138"
"RTN","IVMPREC6",291,0)
 ; IVM*2.0*167 - Make Home phone records auto-upload to Patient File
"RTN","IVMPREC6",292,0)
 ; IVM*2.0*171 - Comment out line to fix the home phone deletion issue
"RTN","IVMPREC6",293,0)
 ;S EPCDEL("PHH")=".131^.1321^.1322^.1323" 
"RTN","IVMPREC6",294,0)
 Q
"RTN","IVMPREC6",295,0)
 ;
"RTN","IVMPREC6",296,0)
AUPBLD(AUPFARY,UPDAUPG) ; Set up array containing fields for auto upload.
"RTN","IVMPREC6",297,0)
 ;AUPFARY - Contains fields in 301.92 File-Passed by reference
"RTN","IVMPREC6",298,0)
 ;UPDAUPG - Contains all groups initialized to '0'
"RTN","IVMPREC6",299,0)
 N AUPSTR,AUPGRP,AUPFLST,AUPPCE,AUPSGSQ,AUPDA
"RTN","IVMPREC6",300,0)
 F I=3:1 S AUPSTR=$P($T(AUPLST+I),";;",2,3) Q:$P(AUPSTR,";")="QUIT"  D
"RTN","IVMPREC6",301,0)
 .S AUPGRP=$P(AUPSTR,";"),AUPFLST=$P(AUPSTR,";",2)
"RTN","IVMPREC6",302,0)
 .F AUPPCE=1:1:$L(AUPFLST,"^") D
"RTN","IVMPREC6",303,0)
 ..S AUPSGSQ=$P(AUPFLST,"^",AUPPCE) Q:AUPSGSQ=""
"RTN","IVMPREC6",304,0)
 ..S AUPDA=$O(^IVM(301.92,"C",AUPSGSQ,0)) Q:AUPDA=""
"RTN","IVMPREC6",305,0)
 ..S AUPFARY(AUPDA)=AUPGRP
"RTN","IVMPREC6",306,0)
 ..S:AUPGRP'="" UPDAUPG(AUPGRP)=0  ; Default group update flags to '0'
"RTN","IVMPREC6",307,0)
 Q
"RTN","IVMPREC6",308,0)
 ;
"RTN","IVMPREC6",309,0)
AUPLST ; P1;P2
"RTN","IVMPREC6",310,0)
 ; P1 = Group Name (treat all entries as this group if present)
"RTN","IVMPREC6",311,0)
 ; P2 = .01 field(s) from 301.92 seperated by '^'
"RTN","IVMPREC6",312,0)
 ;;D1;ZCT03D1^ZCT04D1^ZCT051D1^ZCT052D1^ZCT053D1^ZCT054D1^ZCT055D1^ZCT06D1^ZCT07D1^ZCT10D1
"RTN","IVMPREC6",313,0)
 ;;E1;ZCT03E1^ZCT04E1^ZCT051E1^ZCT052E1^ZCT053E1^ZCT054E1^ZCT055E1^ZCT06E1^ZCT07E1^ZCT10E1
"RTN","IVMPREC6",314,0)
 ;;E2;ZCT03E2^ZCT04E2^ZCT051E2^ZCT052E2^ZCT053E2^ZCT054E2^ZCT055E2^ZCT06E2^ZCT07E2^ZCT10E2
"RTN","IVMPREC6",315,0)
 ;;K1;ZCT03K1^ZCT04K1^ZCT051K1^ZCT052K1^ZCT053K1^ZCT054K1^ZCT055K1^ZCT06K1^ZCT07K1^ZCT10K1
"RTN","IVMPREC6",316,0)
 ;;K2;ZCT03K2^ZCT04K2^ZCT051K2^ZCT052K2^ZCT053K2^ZCT054K2^ZCT055K2^ZCT06K2^ZCT07K2^ZCT10K2
"RTN","IVMPREC6",317,0)
 ;;TA;ZTA02^ZTA03^ZTA04^ZTA051^ZTA052^ZTA053^ZTA054^ZTA055^ZTA056^ZTA058^ZTA059^ZTA07^ZTA08^ZTA09^ZTA054F^ZTA055F
"RTN","IVMPREC6",318,0)
 ;;;ZEM03^ZEM04^ZEM05^ZEM061^ZEM062^ZEM063^ZEM064^ZEM065^ZEM068^ZEM07^ZEM09
"RTN","IVMPREC6",319,0)
 ;;;ZEM03S^ZEM04S^ZEM05S^ZEM061S^ZEM062S^ZEM063S^ZEM064S^ZEM065S^ZEM068S^ZEM07S^ZEM09S
"RTN","IVMPREC6",320,0)
 ;;;PID06^PID10^PID16^PID17^PID22^ZPD30^ZPD06^ZPD07
"RTN","IVMPREC6",321,0)
 ;;QUIT
"RTN","IVMPREC6",322,0)
 ;;
"RTN","IVMPREC6",323,0)
 ;;The following have been disabled until further notice
"RTN","IVMPREC6",324,0)
 ;;;PID113N^PID114N^PID24^PID13W
"RTN","IVMPREC6",325,0)
 ;;CA;PID111C^PID112C^PID113C^PID114C^PID114CF^PID115C^PID115CF^PID116C^PID117C^PID118C^PID119C^PID1112C1^PID1112C2^PID13CA^RF161CA^RF171CA
"RTN","IVMPREC8")
0^2^B259327625^B242938145
"RTN","IVMPREC8",1,0)
IVMPREC8 ;ALB/KCL,BRM,PJR,CKN,TDM,PWC,LBD,DPR,KUM - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES (CON'T) ;04 April 2017  8:56 AM
"RTN","IVMPREC8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**5,6,12,58,73,79,102,115,121,148,151,152,168,167,171**;21-OCT-94;Build 3
"RTN","IVMPREC8",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IVMPREC8",4,0)
 ;
"RTN","IVMPREC8",5,0)
 ; This routine is called from IVMPREC6.
"RTN","IVMPREC8",6,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC8",7,0)
 ; messages received from the IVM center.
"RTN","IVMPREC8",8,0)
 ;
"RTN","IVMPREC8",9,0)
 ;
"RTN","IVMPREC8",10,0)
 ;
"RTN","IVMPREC8",11,0)
PID ; - compare PID segment fields with DHCP fields
"RTN","IVMPREC8",12,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",13,0)
 ;
"RTN","IVMPREC8",14,0)
 S IVMFLD=""
"RTN","IVMPREC8",15,0)
 ; - strip off segment name
"RTN","IVMPREC8",16,0)
 S IVMPIECE=$E(IVMXREF,4,9)
"RTN","IVMPREC8",17,0)
 ;Only process if value exist - also handles multiple address
"RTN","IVMPREC8",18,0)
 I $G(IVMPID(+$E(IVMPIECE,1,2)))'=""!($O(IVMPID(+$E(IVMPIECE,1,2),""))) D
"RTN","IVMPREC8",19,0)
 .;
"RTN","IVMPREC8",20,0)
 .; - if PID field is the address field - parse address
"RTN","IVMPREC8",21,0)
 .S IVMADFLG=0
"RTN","IVMPREC8",22,0)
 .I IVMXREF["PID11",'$G(DODSEG) D  Q:IVMFLD=""
"RTN","IVMPREC8",23,0)
 ..;
"RTN","IVMPREC8",24,0)
 ..; - Process Place of Birth City & State
"RTN","IVMPREC8",25,0)
 ..;I (IVMXREF="PID113N")!(IVMXREF="PID114N") D  Q
"RTN","IVMPREC8",26,0)
 ..;.Q:'$D(ADDRESS("N"))
"RTN","IVMPREC8",27,0)
 ..;.S IVMADDR=ADDRESS("N")
"RTN","IVMPREC8",28,0)
 ..;.S IVMPIECE=$E(IVMPIECE,3,4),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",29,0)
 ..;.Q:IVMFLD=""
"RTN","IVMPREC8",30,0)
 ..;.I IVMPIECE="4N" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",31,0)
 ..;
"RTN","IVMPREC8",32,0)
 ..; - get PID address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",33,0)
 ..;I $G(AUPFARY(IVMDEMDA))="CA" S IVMADDR=$G(ADDRESS("CA")) ;Conf Addr
"RTN","IVMPREC8",34,0)
 ..I $G(AUPFARY(IVMDEMDA))'="CA" D
"RTN","IVMPREC8",35,0)
 ...S IVMADDR=$S($D(ADDRESS("P")):ADDRESS("P"),$D(ADDRESS("VAB1")):ADDRESS("VAB1"),$D(ADDRESS("VAB2")):ADDRESS("VAB2"),$D(ADDRESS("VAB3")):ADDRESS("VAB3"),$D(ADDRESS("VAB4")):ADDRESS("VAB4"),1:"")
"RTN","IVMPREC8",36,0)
 ..I IVMADDR="" Q
"RTN","IVMPREC8",37,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",38,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",39,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",40,0)
 ..S IVMPIECE=$E(IVMPIECE,3,6),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",41,0)
 ..;I (IVMPIECE="2C")!(IVMPIECE="8C") S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",42,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",43,0)
 ..; - convert state abbrev. to pointer
"RTN","IVMPREC8",44,0)
 ..I (IVMPIECE=4)!(IVMPIECE="4C") D
"RTN","IVMPREC8",45,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",46,0)
 ...I IVMFLD'="" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",47,0)
 ..I (IVMPIECE=5)!(IVMPIECE="5C") D
"RTN","IVMPREC8",48,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",49,0)
 ...I IVMFLD'="" S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=X
"RTN","IVMPREC8",50,0)
 ..I (IVMPIECE="4F")!(IVMPIECE="4CF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;PROVINCE
"RTN","IVMPREC8",51,0)
 ..I (IVMPIECE="5F")!(IVMPIECE="5CF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;POSTAL CODE
"RTN","IVMPREC8",52,0)
 ..I (IVMPIECE=6)!(IVMPIECE="6C") S IVMFLD=$$CNTRCONV(COUNTRY) ;COUNTRY
"RTN","IVMPREC8",53,0)
 ..I IVMPIECE=7 S IVMFLD=$$BAICONV(IVMFLD) ;Bad Address Indicator
"RTN","IVMPREC8",54,0)
 ..I IVMPIECE="7C" S IVMFLD=CONFADCT  ;CONFADCT set in PID11^IVMPRECA
"RTN","IVMPREC8",55,0)
 ..I IVMPIECE="9C" D
"RTN","IVMPREC8",56,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",57,0)
 ...S IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMFLD,0))  ;CONF ADDR COUNTY
"RTN","IVMPREC8",58,0)
 ..I $E(IVMPIECE,1,3)="12C" S IVMFLD=$$FMDATE^HLFNC($P(IVMFLD,$E(HLECH,4),$E(IVMPIECE,4)))
"RTN","IVMPREC8",59,0)
 ..S IVMADFLG=1
"RTN","IVMPREC8",60,0)
 .;
"RTN","IVMPREC8",61,0)
 .I IVMXREF["PID12",'$G(DODSEG) D
"RTN","IVMPREC8",62,0)
 ..I 'FORADDR S IVMADFLG=1,IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMPID(12),0))  ;Process county only if not foreign address
"RTN","IVMPREC8",63,0)
 .; line remove so that the phone number is compared 
"RTN","IVMPREC8",64,0)
 .; before saving to 301.5.
"RTN","IVMPREC8",65,0)
 .I IVMXREF["PID13",$D(TELECOM),'$G(DODSEG) D
"RTN","IVMPREC8",66,0)
 ..;Confidential Phone Number
"RTN","IVMPREC8",67,0)
 ..;I IVMXREF="PID13CA",$D(TELECOM("VACPN")) D
"RTN","IVMPREC8",68,0)
 ..;.S IVMFLD=$$CONVPH($P($G(TELECOM("VACPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",69,0)
 ..;Phone Number [Work]
"RTN","IVMPREC8",70,0)
 ..;I IVMXREF="PID13W",$D(TELECOM("WPN")) D
"RTN","IVMPREC8",71,0)
 ..;.S IVMFLD=$$CONVPH($P($G(TELECOM("WPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",72,0)
 ..;Pager Number
"RTN","IVMPREC8",73,0)
 ..I IVMXREF="PID13B",$D(TELECOM("BPN")) D
"RTN","IVMPREC8",74,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("BPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",75,0)
 ..;Cell Phone Number
"RTN","IVMPREC8",76,0)
 ..I IVMXREF="PID13C",$D(TELECOM("ORN")) D
"RTN","IVMPREC8",77,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("ORN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",78,0)
 ..;Email Address
"RTN","IVMPREC8",79,0)
 ..I IVMXREF="PID13E",$D(TELECOM("NET")) D
"RTN","IVMPREC8",80,0)
 ...S IVMFLD=$P($G(TELECOM("NET")),$E(HLECH),4)
"RTN","IVMPREC8",81,0)
 ...S IVMFLD=$S($$CHKEMAIL(IVMFLD):IVMFLD,1:""),IVMADFLG=1
"RTN","IVMPREC8",82,0)
 .; - file address fields and quit
"RTN","IVMPREC8",83,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",84,0)
 .;
"RTN","IVMPREC8",85,0)
 .; - otherwise, set IVMFLD to field rec'd from IVM
"RTN","IVMPREC8",86,0)
 .;   for comparison with DHCP field
"RTN","IVMPREC8",87,0)
 .;I (IVMXREF'="PID113N")&(IVMXREF'="PID114N")&($E(IVMXREF,1,5)'="PID13") S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",88,0)
 .I $E(IVMXREF,1,5)'="PID13" S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",89,0)
 .;
"RTN","IVMPREC8",90,0)
 .; - if HL7 date convert to FM date and set IVMFLD
"RTN","IVMPREC8",91,0)
 .I IVMXREF["PID07" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",92,0)
 .;
"RTN","IVMPREC8",93,0)
 .; - if HL7 code convert to VistA and set IVMFLD
"RTN","IVMPREC8",94,0)
 .I IVMXREF["PID16" D  ;Marital Status
"RTN","IVMPREC8",95,0)
 ..S IVMFLD=$S(IVMFLD="D":"DIVORCED",IVMFLD="M":"MARRIED",IVMFLD="W":"WIDOWED",IVMFLD="A":"SEPARATED",IVMFLD="S":"NEVER MARRIED",IVMFLD="U":"UNKNOWN")
"RTN","IVMPREC8",96,0)
 ..S IVMFLD=$O(^DIC(11,"B",IVMFLD,0))
"RTN","IVMPREC8",97,0)
 .;
"RTN","IVMPREC8",98,0)
 .I IVMXREF["PID17" S IVMFLD=$O(^DIC(13,"C",IVMFLD,0))  ;Religion
"RTN","IVMPREC8",99,0)
 .;
"RTN","IVMPREC8",100,0)
 .I IVMXREF["PID22" D  ;Ethnicity
"RTN","IVMPREC8",101,0)
 ..S IVMFLD=$$CODE2PTR^DGUTL4($P($G(IVMPID(22)),$E(HLECH),4),2,2)
"RTN","IVMPREC8",102,0)
 .;
"RTN","IVMPREC8",103,0)
 .I IVMXREF="PID10",'$G(DODSEG),$D(IVMRACE) D  Q
"RTN","IVMPREC8",104,0)
 ..N XVAL,IVMLST,DHCPLST
"RTN","IVMPREC8",105,0)
 ..S (XVAL,IVMLST,DHCPLST)=""
"RTN","IVMPREC8",106,0)
 ..F  S XVAL=$O(^DPT(DFN,.02,"B",XVAL)) Q:XVAL=""  S IVMLST=IVMLST_XVAL_U
"RTN","IVMPREC8",107,0)
 ..S XVAL="" F  S XVAL=$O(IVMRACE(2,XVAL)) Q:XVAL=""  S DHCPLST=DHCPLST_XVAL_U
"RTN","IVMPREC8",108,0)
 ..Q:IVMLST=DHCPLST
"RTN","IVMPREC8",109,0)
 ..F XVAL=1:1:($L(DHCPLST,U)-1) S IVMFLD=$P(DHCPLST,U,XVAL) D
"RTN","IVMPREC8",110,0)
 ...D STORE^IVMPREC9
"RTN","IVMPREC8",111,0)
 .;
"RTN","IVMPREC8",112,0)
 .; - call VADPT routine to return DHCP demographics
"RTN","IVMPREC8",113,0)
 .D DEM^VADPT,ADD^VADPT,OPD^VADPT
"RTN","IVMPREC8",114,0)
 .;
"RTN","IVMPREC8",115,0)
 .; - execute code on the 1 node and get DHCP field for comparison
"RTN","IVMPREC8",116,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",117,0)
 .;
"RTN","IVMPREC8",118,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",119,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",120,0)
 .;
"RTN","IVMPREC8",121,0)
 .I IVMXREF="PID13",$D(TELECOM("PRN")),'$G(DODSEG) D  Q
"RTN","IVMPREC8",122,0)
 ..S IVMFLD=$P($G(TELECOM("PRN")),$E(HLECH))
"RTN","IVMPREC8",123,0)
 ..I IVMFLD]"" D
"RTN","IVMPREC8",124,0)
 ...K UPPHN
"RTN","IVMPREC8",125,0)
 ...S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",126,0)
 ...I COMPPH1'=COMPPH2 D STORE^IVMPREC9 S UPPHN=1
"RTN","IVMPREC8",127,0)
 .;
"RTN","IVMPREC8",128,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",129,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",130,0)
 Q
"RTN","IVMPREC8",131,0)
 ;
"RTN","IVMPREC8",132,0)
 ;
"RTN","IVMPREC8",133,0)
ZPD ; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC8",134,0)
 N STFLG
"RTN","IVMPREC8",135,0)
 S STFLG=0
"RTN","IVMPREC8",136,0)
 S IVMPIECE=$E(IVMXREF,4,5)
"RTN","IVMPREC8",137,0)
 I IVMXREF="ZPD09"!(IVMXREF="ZPD31")!(IVMXREF="ZPD32") Q:$$DODCK(DFN)
"RTN","IVMPREC8",138,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",139,0)
 .;
"RTN","IVMPREC8",140,0)
 .; - set var to HL7 field
"RTN","IVMPREC8",141,0)
 .S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",142,0)
 .;
"RTN","IVMPREC8",143,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",144,0)
 .I (IVMXREF["ZPD06")!(IVMXREF["ZPD07") S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",145,0)
 .;
"RTN","IVMPREC8",146,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",147,0)
 .I IVMXREF["ZPD09"!(IVMXREF["ZPD13")!(IVMXREF["ZPD32") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",148,0)
 .;
"RTN","IVMPREC8",149,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",150,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",151,0)
 .;
"RTN","IVMPREC8",152,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",153,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) S STFLG=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",154,0)
 .I $P(IVMSEG,"^",IVMPIECE)'="""""" D
"RTN","IVMPREC8",155,0)
 ..I IVMXREF["ZPD09" D STORE^IVMPREC9
"RTN","IVMPREC8",156,0)
 ..;I IVMXREF["ZPD09"!(IVMXREF["ZPD31")!(IVMXREF["ZPD32") D STORE^IVMPREC9
"RTN","IVMPREC8",157,0)
 I IVMXREF["ZPD08",STFLG,$$AUTORINC^IVMPREC9(DFN) Q
"RTN","IVMPREC8",158,0)
 I IVMXREF["ZPD32",$$AUTODOD^IVMLDEMD(DFN)
"RTN","IVMPREC8",159,0)
 Q
"RTN","IVMPREC8",160,0)
 ;
"RTN","IVMPREC8",161,0)
 ;
"RTN","IVMPREC8",162,0)
DODCK(DFN) ;this will check if Date of Death information needs to be uploaded or not.
"RTN","IVMPREC8",163,0)
 ;2 requirements are:
"RTN","IVMPREC8",164,0)
 ;  1. When the DOD is received from ESR with a Source of Death Notification equal to "Death Certificate on file and the
"RTN","IVMPREC8",165,0)
 ;     VistA DOD is null or empty then VistA will upload the Date of Death from ESR
"RTN","IVMPREC8",166,0)
 ;  2. When DOD is Received from ESR and VistA DOD is already populated then Vista will ignore the DOD from ESR and VistA
"RTN","IVMPREC8",167,0)
 ;     will not create an entry in the IVM demographic upload option.
"RTN","IVMPREC8",168,0)
 ;
"RTN","IVMPREC8",169,0)
 ; Inputs: DFN for ^DPT
"RTN","IVMPREC8",170,0)
 ;         IVMXREF (must be ZPD09, ZPD31 and ZPD32)
"RTN","IVMPREC8",171,0)
 ;         IVMSEG (the ZPD data)
"RTN","IVMPREC8",172,0)
 ;         IVMFLD (the field number in ^DPT(DFN)
"RTN","IVMPREC8",173,0)
 ;         IVMPIECE (the piece number of IVMSEG)
"RTN","IVMPREC8",174,0)
 ;         IVMDHCP (the data from ^DPT(DFN)
"RTN","IVMPREC8",175,0)
 ;
"RTN","IVMPREC8",176,0)
 ;
"RTN","IVMPREC8",177,0)
 N DODARRAY,QUIT
"RTN","IVMPREC8",178,0)
 ;
"RTN","IVMPREC8",179,0)
 S (CKDEL,QUIT)=0
"RTN","IVMPREC8",180,0)
 ;
"RTN","IVMPREC8",181,0)
 I $P(IVMSEG,"^",9)="""""" Q 0
"RTN","IVMPREC8",182,0)
 D GETS^DIQ(2,DFN,".351:.355","","DODARRAY")
"RTN","IVMPREC8",183,0)
 S DOD=DODARRAY(2,DFN_",",.351)
"RTN","IVMPREC8",184,0)
 I DOD'="" Q 1
"RTN","IVMPREC8",185,0)
 I $P(IVMSEG,"^",31)=3,DOD="" S QUIT=0    ;Death Certificate not on File
"RTN","IVMPREC8",186,0)
 I $P(IVMSEG,"^",31)=3,DOD'="" S QUIT=1
"RTN","IVMPREC8",187,0)
 ;
"RTN","IVMPREC8",188,0)
 Q QUIT ;
"RTN","IVMPREC8",189,0)
 ;
"RTN","IVMPREC8",190,0)
ZTA ; - compare ZTA segment fields with DHCP fields
"RTN","IVMPREC8",191,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",192,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",193,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",194,0)
 .;
"RTN","IVMPREC8",195,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",196,0)
 .S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",197,0)
 .;
"RTN","IVMPREC8",198,0)
 .; - ZTA05 as the ZTA address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",199,0)
 .I IVMXREF["ZTA05" D
"RTN","IVMPREC8",200,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)) Q:IVMADDR=""
"RTN","IVMPREC8",201,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",202,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",203,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",204,0)
 ..S IVMPIECE=$E(IVMPIECE,3,4)
"RTN","IVMPREC8",205,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",206,0)
 ..I (IVMPIECE=2)!(IVMPIECE=8) S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",207,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",208,0)
 ..I (IVMPIECE=4)!(IVMPIECE=5)!(IVMPIECE=9) S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",209,0)
 ..I IVMPIECE=4 S (IVMTSTPT,IVMFLD)=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",210,0)
 ..I IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",211,0)
 ..I IVMPIECE="4F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;PROVINCE
"RTN","IVMPREC8",212,0)
 ..I IVMPIECE="5F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;POSTAL CODE
"RTN","IVMPREC8",213,0)
 ..I IVMPIECE=6 S IVMFLD=$$CNTRCONV(COUNTRY)         ;COUNTRY
"RTN","IVMPREC8",214,0)
 ..I IVMPIECE=9 S IVMFLD=+$O(^DIC(5,+IVMTSTPT,1,"C",IVMFLD,0))  ;COUNTY
"RTN","IVMPREC8",215,0)
 .Q:IVMFLD=""
"RTN","IVMPREC8",216,0)
 .;
"RTN","IVMPREC8",217,0)
 .; - if HL7 data convert to Y/N value
"RTN","IVMPREC8",218,0)
 .I IVMXREF["ZTA02" S IVMFLD=$S(IVMFLD=0:"N",IVMFLD=1:"Y",1:"")
"RTN","IVMPREC8",219,0)
 .;
"RTN","IVMPREC8",220,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",221,0)
 .I (IVMXREF["ZTA03")!(IVMXREF["ZTA04")!(IVMXREF["ZTA08") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",222,0)
 .;
"RTN","IVMPREC8",223,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",224,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",225,0)
 .;
"RTN","IVMPREC8",226,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",227,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",228,0)
 .I IVMXREF["ZTA07" D  Q
"RTN","IVMPREC8",229,0)
 ..S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",230,0)
 ..I COMPPH1'=COMPPH2 D STORE^IVMPREC9
"RTN","IVMPREC8",231,0)
 .;
"RTN","IVMPREC8",232,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",233,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",234,0)
 .;
"RTN","IVMPREC8",235,0)
 .I IVMXREF["ZTA08" D
"RTN","IVMPREC8",236,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("TA")=1
"RTN","IVMPREC8",237,0)
 Q
"RTN","IVMPREC8",238,0)
 ;
"RTN","IVMPREC8",239,0)
ZGD ; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC8",240,0)
 S IVMADFLG=0
"RTN","IVMPREC8",241,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",242,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",243,0)
 .;
"RTN","IVMPREC8",244,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",245,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",246,0)
 .;
"RTN","IVMPREC8",247,0)
 .; - ZGD06 as the ZGD address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",248,0)
 .I IVMXREF["ZGD06" D
"RTN","IVMPREC8",249,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",250,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",251,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",252,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",253,0)
 .;
"RTN","IVMPREC8",254,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",255,0)
 .I IVMXREF["ZGD08" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",256,0)
 .;
"RTN","IVMPREC8",257,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",258,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",259,0)
 .;
"RTN","IVMPREC8",260,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",261,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",262,0)
 Q
"RTN","IVMPREC8",263,0)
 ;
"RTN","IVMPREC8",264,0)
ZCT ; - compare ZCT segment fields with DHCP fields
"RTN","IVMPREC8",265,0)
 N ZCTTYP
"RTN","IVMPREC8",266,0)
 S IVMADFLG=0
"RTN","IVMPREC8",267,0)
 S IVMPIECE=$E(IVMXREF,4,8)
"RTN","IVMPREC8",268,0)
 S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",269,0)
 S ZCTTYP=$E(IVMPIECE,$L(IVMPIECE)-1,$L(IVMPIECE))
"RTN","IVMPREC8",270,0)
 Q:$P(IVMSEG,HLFS,2)'=$S(ZCTTYP="K1":1,ZCTTYP="K2":2,ZCTTYP="E1":3,ZCTTYP="E2":4,ZCTTYP="D1":5,1:"")
"RTN","IVMPREC8",271,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",272,0)
 .;
"RTN","IVMPREC8",273,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",274,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",275,0)
 .;
"RTN","IVMPREC8",276,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",277,0)
 .I IVMXREF["ZCT03" S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",278,0)
 .;
"RTN","IVMPREC8",279,0)
 .; - ZCT05 as the ZCT address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",280,0)
 .I IVMXREF["ZCT05" D
"RTN","IVMPREC8",281,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",282,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",283,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",284,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",285,0)
 .;
"RTN","IVMPREC8",286,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",287,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",288,0)
 .I IVMXREF["ZCT10" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",289,0)
 .;
"RTN","IVMPREC8",290,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",291,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",292,0)
 .;
"RTN","IVMPREC8",293,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",294,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",295,0)
 .;
"RTN","IVMPREC8",296,0)
 .I IVMXREF["ZCT10" D
"RTN","IVMPREC8",297,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG(ZCTTYP)=1
"RTN","IVMPREC8",298,0)
 Q
"RTN","IVMPREC8",299,0)
 ;
"RTN","IVMPREC8",300,0)
ZEM ; - compare ZEM segment fields with DHCP fields
"RTN","IVMPREC8",301,0)
 S IVMADFLG=0
"RTN","IVMPREC8",302,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",303,0)
 S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",304,0)
 Q:$P(IVMSEG,HLFS,2)'=$S($E(IVMXREF,$L(IVMXREF))="S":2,1:1)
"RTN","IVMPREC8",305,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",306,0)
 .;
"RTN","IVMPREC8",307,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",308,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",309,0)
 .;
"RTN","IVMPREC8",310,0)
 .; - ZEM06 as the ZEM address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",311,0)
 .I IVMXREF["ZEM06" D
"RTN","IVMPREC8",312,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",313,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)    ;,IVMADFLG=1
"RTN","IVMPREC8",314,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",315,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",316,0)
 .;
"RTN","IVMPREC8",317,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",318,0)
 .I IVMXREF["ZEM09" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",319,0)
 .;
"RTN","IVMPREC8",320,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",321,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",322,0)
 .;
"RTN","IVMPREC8",323,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",324,0)
 .I $E(IVMXREF,1,6)="ZEM062",IVMFLD'=IVMDHCP S ZEMADRUP(IVMXREF)=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",325,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",326,0)
 Q
"RTN","IVMPREC8",327,0)
 ;
"RTN","IVMPREC8",328,0)
RF1 ; - compare RF1 segment fields with DHCP fields
"RTN","IVMPREC8",329,0)
 S IVMPIECE=$E(IVMXREF,4),IVMADFLG=1,RF1TYPE=$P(IVMSEG,HLFS,3)
"RTN","IVMPREC8",330,0)
 ;As per requirements, delete the communication data (Email, Cell and Pager) if it is not received in Z05.
"RTN","IVMPREC8",331,0)
 ;Hence, remove it from EPCDEL (deletion array) if Data exist in Z05. Comm. fields contained in EPCDEL will be deleted after updating all incoming communication data.
"RTN","IVMPREC8",332,0)
 K EPCDEL(RF1TYPE)
"RTN","IVMPREC8",333,0)
 ;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",334,0)
 I RF1TYPE="SAD",((IVMXREF="RF161")!(IVMXREF="RF162")!(IVMXREF="RF171")) D RF1PROC
"RTN","IVMPREC8",335,0)
 ;I RF1TYPE="CAD",((IVMXREF="RF161CA")!(IVMXREF="RF171CA")) D RF1PROC
"RTN","IVMPREC8",336,0)
 I RF1TYPE="CPH",((IVMXREF="RF161C")!(IVMXREF="RF162C")!(IVMXREF="RF171C")) D RF1PROC
"RTN","IVMPREC8",337,0)
 I RF1TYPE="PNO",((IVMXREF="RF161B")!(IVMXREF="RF162B")!(IVMXREF="RF171B")) D RF1PROC
"RTN","IVMPREC8",338,0)
 I RF1TYPE="EAD",((IVMXREF="RF161E")!(IVMXREF="RF162E")!(IVMXREF="RF171E")) D RF1PROC
"RTN","IVMPREC8",339,0)
 I RF1TYPE="PHH",((IVMXREF="RF161P")!(IVMXREF="RF162P")!(IVMXREF="RF171P")) D RF1PROC     ;Added for IVM*2*152
"RTN","IVMPREC8",340,0)
 I '$$RF1CHK^IVMPREC6(IVMRTN,IVMDA),IVMXREF="RF171P" D  ;Last RF1
"RTN","IVMPREC8",341,0)
 . I $$AUTOEPC^IVMPREC9(DFN,.UPDEPC)
"RTN","IVMPREC8",342,0)
 . N NOUPDT,NOPHUP S (NOUPDT,NOPHUP)=0   ;Added for IVM*2*152
"RTN","IVMPREC8",343,0)
 . I 'UPDEPC("SAD") S NOUPDT=1
"RTN","IVMPREC8",344,0)
 . ;Set the NOPHUP flag = 1 if Home Phone Change Dt/Tm not more recent, or
"RTN","IVMPREC8",345,0)
 . ;if Home Phone Change Dt/Tm more recent, but phone # the same
"RTN","IVMPREC8",346,0)
 . ;Added for IVM*2*152
"RTN","IVMPREC8",347,0)
 . ; IVM*2.0*167 - Make Home phone records auto-upload to Patient File
"RTN","IVMPREC8",348,0)
 . ; Always keep NOPHUP = 0 so Home phone number data is not handled here    
"RTN","IVMPREC8",349,0)
 . ;I 'UPDEPC("PHH") S NOPHUP=1
"RTN","IVMPREC8",350,0)
 . ;I UPDEPC("PHH"),'$G(UPPHN) S NOPHUP=1
"RTN","IVMPREC8",351,0)
 . K UPPHN
"RTN","IVMPREC8",352,0)
 . I $$AUTOADDR^IVMLDEM6(DFN,1,NOUPDT,NOPHUP)
"RTN","IVMPREC8",353,0)
 Q
"RTN","IVMPREC8",354,0)
 ;
"RTN","IVMPREC8",355,0)
RF1PROC ;
"RTN","IVMPREC8",356,0)
 N IVMEPC
"RTN","IVMPREC8",357,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",358,0)
 .;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",359,0)
 .I IVMXREF["RF16" D  Q
"RTN","IVMPREC8",360,0)
 ..;- get data containing 4 pieces seperated by HLECH (~)
"RTN","IVMPREC8",361,0)
 ..S IVMRFDAT=$P(IVMSEG,HLFS,6)
"RTN","IVMPREC8",362,0)
 ..S IVMPIECE=$E(IVMXREF,5),IVMFLD=$P(IVMRFDAT,"~",IVMPIECE)
"RTN","IVMPREC8",363,0)
 ..;get 6th character of IVMXREF to determine if value is for Address
"RTN","IVMPREC8",364,0)
 ..;OR Email, Cell and Pager
"RTN","IVMPREC8",365,0)
 ..S IVMEPC=$E(IVMXREF,6)
"RTN","IVMPREC8",366,0)
 ..;Convert Change Source for Address, Email, Cell and Pager
"RTN","IVMPREC8",367,0)
 ..I IVMPIECE=2 S IVMFLD=$S(IVMEPC'="":$$EPCSRCC(IVMFLD),1:$$ADDRCNV(IVMFLD))
"RTN","IVMPREC8",368,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",369,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",370,0)
 .I IVMXREF["RF17" D  Q
"RTN","IVMPREC8",371,0)
 ..;get address/telecomm change date/tm field
"RTN","IVMPREC8",372,0)
 ..S IVMFLD=$$FMDATE^HLFNC($P(IVMSEG,HLFS,7))
"RTN","IVMPREC8",373,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",374,0)
 ..;
"RTN","IVMPREC8",375,0)
 ..; IVM*2*171 - If RF1 type is PHH,home phone is null in PID (IVMPHDFG)
"RTN","IVMPREC8",376,0)
 ..; and RESIDENCE NUMBER CHANGE DT/TM in Patient record exists then SET EPCDEL(PHH) for phone number 
"RTN","IVMPREC8",377,0)
 ..; deletion IF incoming number change dt/tm is greater than the change dt/tm in Patient record
"RTN","IVMPREC8",378,0)
 ..; Check if PID13 home phone number is null
"RTN","IVMPREC8",379,0)
 ..S:$P($G(TELECOM("PRN")),"~",1)="" IVMPHDFG=1
"RTN","IVMPREC8",380,0)
 ..I RF1TYPE="PHH",+IVMPHDFG,+$$GET1^DIQ(2,DFN_",",.1321,"I") D
"RTN","IVMPREC8",381,0)
 ...S:+$$GET1^DIQ(2,DFN_",",.1321,"I")<IVMFLD EPCDEL("PHH")=".131^.1321^.1322^.1323"
"RTN","IVMPREC8",382,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",383,0)
 ..;
"RTN","IVMPREC8",384,0)
 ..;I RF1TYPE="CAD",$P($G(ADDRESS("CA")),HLFS)]"" D  Q
"RTN","IVMPREC8",385,0)
 ..;.; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",386,0)
 ..;.S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",387,0)
 ..;.I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("CA")=1
"RTN","IVMPREC8",388,0)
 ..;
"RTN","IVMPREC8",389,0)
 ..; check for auto-upload
"RTN","IVMPREC8",390,0)
 ..S IVMDHCP=$S(RF1TYPE="SAD":$P($G(^DPT(DFN,.11)),HLFS,13),RF1TYPE="CPH":$P($G(^DPT(DFN,.13)),HLFS,9),RF1TYPE="PNO":$P($G(^DPT(DFN,.13)),HLFS,12),RF1TYPE="EAD":$P($G(^DPT(DFN,.13)),HLFS,6),1:"")
"RTN","IVMPREC8",391,0)
 ..I IVMDHCP="" S IVMDHCP=$S(RF1TYPE="PHH":$P($G(^DPT(DFN,.132)),HLFS,1),1:"")     ;Added for IVM*2*152
"RTN","IVMPREC8",392,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) D
"RTN","IVMPREC8",393,0)
 ...S UPDEPC(RF1TYPE)=$G(EPCFARY(RF1TYPE))
"RTN","IVMPREC8",394,0)
 ...I RF1TYPE="SAD" S UPDEPC("SAD")=1
"RTN","IVMPREC8",395,0)
 ...; IVM*2.0*167 - Make Home phone records auto-upload to Patient File
"RTN","IVMPREC8",396,0)
 ...; Keep UPDEPC("PHH") value as Home phone record IENs of #301.92 file
"RTN","IVMPREC8",397,0)
 ...;I RF1TYPE="PHH" S UPDEPC("PHH")=1   ; Added for IVM*2*152
"RTN","IVMPREC8",398,0)
 Q
"RTN","IVMPREC8",399,0)
ADDRCNV(ADDRSRC) ;convert Address Source from HL7 to DHCP format
"RTN","IVMPREC8",400,0)
 ;
"RTN","IVMPREC8",401,0)
 Q:$G(ADDRSRC)']"" ""
"RTN","IVMPREC8",402,0)
 Q:ADDRSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",403,0)
 Q:ADDRSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",404,0)
 Q:ADDRSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",405,0)
 Q:ADDRSRC="USNCOA" "NCOA"
"RTN","IVMPREC8",406,0)
 Q:ADDRSRC="USVABVA" "BVA"
"RTN","IVMPREC8",407,0)
 Q:ADDRSRC="USVAINS" "VAINS"
"RTN","IVMPREC8",408,0)
 Q:ADDRSRC="USPS" "USPS"
"RTN","IVMPREC8",409,0)
 Q:ADDRSRC="LACS" "LACS"
"RTN","IVMPREC8",410,0)
 Q:ADDRSRC="USVOA" "VOA"
"RTN","IVMPREC8",411,0)
 Q ""
"RTN","IVMPREC8",412,0)
EPCSRCC(EPCSRC) ;Convert Email, Cell, Pager Change Source from HL7 to DHCP
"RTN","IVMPREC8",413,0)
 ;
"RTN","IVMPREC8",414,0)
 Q:$G(EPCSRC)']"" ""
"RTN","IVMPREC8",415,0)
 Q:EPCSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",416,0)
 Q:EPCSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",417,0)
 Q:EPCSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",418,0)
 Q ""
"RTN","IVMPREC8",419,0)
BAICONV(BAISRC) ;Convert Bad address source from HL7 to DHCP format
"RTN","IVMPREC8",420,0)
 Q:$G(BAISRC)']"" ""
"RTN","IVMPREC8",421,0)
 Q:BAISRC="VAB1" 1
"RTN","IVMPREC8",422,0)
 Q:BAISRC="VAB2" 2
"RTN","IVMPREC8",423,0)
 Q:BAISRC="VAB3" 3
"RTN","IVMPREC8",424,0)
 Q:BAISRC="VAB4" 4
"RTN","IVMPREC8",425,0)
 Q ""
"RTN","IVMPREC8",426,0)
CONVPH(PH) ;remove special chars/spaces from Phone number
"RTN","IVMPREC8",427,0)
 ;*168 Check format, quit if OK else strip and return if not 10 numeric
"RTN","IVMPREC8",428,0)
 ;Format if 10 numeric.
"RTN","IVMPREC8",429,0)
 Q:PH?1"(".3N.1")".3N.1"-".4N PH
"RTN","IVMPREC8",430,0)
 S PH=$TR(PH," )(/#\-","")
"RTN","IVMPREC8",431,0)
 Q:PH'?10N PH
"RTN","IVMPREC8",432,0)
 Q "("_$E(PH,1,3)_")"_$E(PH,4,6)_"-"_$E(PH,7,10)
"RTN","IVMPREC8",433,0)
 ;
"RTN","IVMPREC8",434,0)
CNTRCONV(COUNTRY) ;Check if valid country
"RTN","IVMPREC8",435,0)
 I COUNTRY="" Q 0
"RTN","IVMPREC8",436,0)
 Q $O(^HL(779.004,"B",COUNTRY,""))
"RTN","IVMPREC8",437,0)
CHKEMAIL(EMAIL) ;Check for Valid Email
"RTN","IVMPREC8",438,0)
 I $G(EMAIL)="" Q 0
"RTN","IVMPREC8",439,0)
 I '(EMAIL?1.E1"@"1.E1"."1.E) Q 0
"RTN","IVMPREC8",440,0)
 Q 1
"VER")
8.0^22.2
"BLD",10232,6)
^142
**END**
**END**

