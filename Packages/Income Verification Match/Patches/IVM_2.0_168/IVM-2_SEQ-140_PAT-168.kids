Released IVM*2*168 SEQ #140
Extracted from mail message
**KIDS**:IVM*2.0*168^

**INSTALL NAME**
IVM*2.0*168
"BLD",10707,0)
IVM*2.0*168^INCOME VERIFICATION MATCH^0^3171027^y
"BLD",10707,1,0)
^^4^4^3171027^
"BLD",10707,1,1,0)
This patch will allow for processing of an imprecise retirement date being
"BLD",10707,1,2,0)
passed back to the Enrollment System (ES) now that the ES is capable of
"BLD",10707,1,3,0)
accepting this value. It will also improve formatting for the 
"BLD",10707,1,4,0)
patients cell phone and pager numbers stored when processing a Z05.
"BLD",10707,4,0)
^9.64PA^^
"BLD",10707,6.3)
6
"BLD",10707,"ABPKG")
n
"BLD",10707,"KRN",0)
^9.67PA^779.2^20
"BLD",10707,"KRN",.4,0)
.4
"BLD",10707,"KRN",.401,0)
.401
"BLD",10707,"KRN",.402,0)
.402
"BLD",10707,"KRN",.403,0)
.403
"BLD",10707,"KRN",.5,0)
.5
"BLD",10707,"KRN",.84,0)
.84
"BLD",10707,"KRN",3.6,0)
3.6
"BLD",10707,"KRN",3.8,0)
3.8
"BLD",10707,"KRN",9.2,0)
9.2
"BLD",10707,"KRN",9.8,0)
9.8
"BLD",10707,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",10707,"KRN",9.8,"NM",1,0)
IVMPTRN8^^0^B79090653
"BLD",10707,"KRN",9.8,"NM",2,0)
IVMPREC8^^0^B233047174
"BLD",10707,"KRN",9.8,"NM","B","IVMPREC8",2)

"BLD",10707,"KRN",9.8,"NM","B","IVMPTRN8",1)

"BLD",10707,"KRN",19,0)
19
"BLD",10707,"KRN",19.1,0)
19.1
"BLD",10707,"KRN",101,0)
101
"BLD",10707,"KRN",409.61,0)
409.61
"BLD",10707,"KRN",771,0)
771
"BLD",10707,"KRN",779.2,0)
779.2
"BLD",10707,"KRN",870,0)
870
"BLD",10707,"KRN",8989.51,0)
8989.51
"BLD",10707,"KRN",8989.52,0)
8989.52
"BLD",10707,"KRN",8994,0)
8994
"BLD",10707,"KRN","B",.4,.4)

"BLD",10707,"KRN","B",.401,.401)

"BLD",10707,"KRN","B",.402,.402)

"BLD",10707,"KRN","B",.403,.403)

"BLD",10707,"KRN","B",.5,.5)

"BLD",10707,"KRN","B",.84,.84)

"BLD",10707,"KRN","B",3.6,3.6)

"BLD",10707,"KRN","B",3.8,3.8)

"BLD",10707,"KRN","B",9.2,9.2)

"BLD",10707,"KRN","B",9.8,9.8)

"BLD",10707,"KRN","B",19,19)

"BLD",10707,"KRN","B",19.1,19.1)

"BLD",10707,"KRN","B",101,101)

"BLD",10707,"KRN","B",409.61,409.61)

"BLD",10707,"KRN","B",771,771)

"BLD",10707,"KRN","B",779.2,779.2)

"BLD",10707,"KRN","B",870,870)

"BLD",10707,"KRN","B",8989.51,8989.51)

"BLD",10707,"KRN","B",8989.52,8989.52)

"BLD",10707,"KRN","B",8994,8994)

"BLD",10707,"QUES",0)
^9.62^^
"BLD",10707,"REQB",0)
^9.611^2^2
"BLD",10707,"REQB",1,0)
IVM*2.0*161^2
"BLD",10707,"REQB",2,0)
IVM*2.0*152^2
"BLD",10707,"REQB","B","IVM*2.0*152",2)

"BLD",10707,"REQB","B","IVM*2.0*161",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
168^3171027
"PKG",220,22,1,"PAH",1,1,0)
^^4^4^3171027
"PKG",220,22,1,"PAH",1,1,1,0)
This patch will allow for processing of an imprecise retirement date being
"PKG",220,22,1,"PAH",1,1,2,0)
passed back to the Enrollment System (ES) now that the ES is capable of
"PKG",220,22,1,"PAH",1,1,3,0)
accepting this value. It will also improve formatting for the 
"PKG",220,22,1,"PAH",1,1,4,0)
patients cell phone and pager numbers stored when processing a Z05.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVMPREC8")
0^2^B233047174^B230918624
"RTN","IVMPREC8",1,0)
IVMPREC8 ;ALB/KCL/BRM/PJR/CKN,TDM,PWC,LBD,DRP - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES (CON'T) ; 10/16/12 4:14pm
"RTN","IVMPREC8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**5,6,12,58,73,79,102,115,121,148,151,152,168**;21-OCT-94;Build 6
"RTN","IVMPREC8",3,0)
 ; ;Per VA Directive 6402, this routine should not be modified.
"RTN","IVMPREC8",4,0)
 ;
"RTN","IVMPREC8",5,0)
 ; This routine is called from IVMPREC6.
"RTN","IVMPREC8",6,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC8",7,0)
 ; messages received from the IVM center.
"RTN","IVMPREC8",8,0)
 ;
"RTN","IVMPREC8",9,0)
 ;
"RTN","IVMPREC8",10,0)
 ;
"RTN","IVMPREC8",11,0)
PID ; - compare PID segment fields with DHCP fields
"RTN","IVMPREC8",12,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",13,0)
 ;
"RTN","IVMPREC8",14,0)
 S IVMFLD=""
"RTN","IVMPREC8",15,0)
 ; - strip off segment name
"RTN","IVMPREC8",16,0)
 S IVMPIECE=$E(IVMXREF,4,9)
"RTN","IVMPREC8",17,0)
 ;Only process if value exist - also handles multiple address
"RTN","IVMPREC8",18,0)
 I $G(IVMPID(+$E(IVMPIECE,1,2)))'=""!($O(IVMPID(+$E(IVMPIECE,1,2),""))) D
"RTN","IVMPREC8",19,0)
 .;
"RTN","IVMPREC8",20,0)
 .; - if PID field is the address field - parse address
"RTN","IVMPREC8",21,0)
 .S IVMADFLG=0
"RTN","IVMPREC8",22,0)
 .I IVMXREF["PID11",'$G(DODSEG) D  Q:IVMFLD=""
"RTN","IVMPREC8",23,0)
 ..;
"RTN","IVMPREC8",24,0)
 ..; - Process Place of Birth City & State
"RTN","IVMPREC8",25,0)
 ..;I (IVMXREF="PID113N")!(IVMXREF="PID114N") D  Q
"RTN","IVMPREC8",26,0)
 ..;.Q:'$D(ADDRESS("N"))
"RTN","IVMPREC8",27,0)
 ..;.S IVMADDR=ADDRESS("N")
"RTN","IVMPREC8",28,0)
 ..;.S IVMPIECE=$E(IVMPIECE,3,4),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",29,0)
 ..;.Q:IVMFLD=""
"RTN","IVMPREC8",30,0)
 ..;.I IVMPIECE="4N" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",31,0)
 ..;
"RTN","IVMPREC8",32,0)
 ..; - get PID address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",33,0)
 ..;I $G(AUPFARY(IVMDEMDA))="CA" S IVMADDR=$G(ADDRESS("CA")) ;Conf Addr
"RTN","IVMPREC8",34,0)
 ..I $G(AUPFARY(IVMDEMDA))'="CA" D
"RTN","IVMPREC8",35,0)
 ...S IVMADDR=$S($D(ADDRESS("P")):ADDRESS("P"),$D(ADDRESS("VAB1")):ADDRESS("VAB1"),$D(ADDRESS("VAB2")):ADDRESS("VAB2"),$D(ADDRESS("VAB3")):ADDRESS("VAB3"),$D(ADDRESS("VAB4")):ADDRESS("VAB4"),1:"")
"RTN","IVMPREC8",36,0)
 ..I IVMADDR="" Q
"RTN","IVMPREC8",37,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",38,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",39,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",40,0)
 ..S IVMPIECE=$E(IVMPIECE,3,6),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",41,0)
 ..;I (IVMPIECE="2C")!(IVMPIECE="8C") S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",42,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",43,0)
 ..; - convert state abbrev. to pointer
"RTN","IVMPREC8",44,0)
 ..I (IVMPIECE=4)!(IVMPIECE="4C") D
"RTN","IVMPREC8",45,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",46,0)
 ...I IVMFLD'="" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",47,0)
 ..I (IVMPIECE=5)!(IVMPIECE="5C") D
"RTN","IVMPREC8",48,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",49,0)
 ...I IVMFLD'="" S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=X
"RTN","IVMPREC8",50,0)
 ..I (IVMPIECE="4F")!(IVMPIECE="4CF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;PROVINCE
"RTN","IVMPREC8",51,0)
 ..I (IVMPIECE="5F")!(IVMPIECE="5CF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;POSTAL CODE
"RTN","IVMPREC8",52,0)
 ..I (IVMPIECE=6)!(IVMPIECE="6C") S IVMFLD=$$CNTRCONV(COUNTRY) ;COUNTRY
"RTN","IVMPREC8",53,0)
 ..I IVMPIECE=7 S IVMFLD=$$BAICONV(IVMFLD) ;Bad Address Indicator
"RTN","IVMPREC8",54,0)
 ..I IVMPIECE="7C" S IVMFLD=CONFADCT  ;CONFADCT set in PID11^IVMPRECA
"RTN","IVMPREC8",55,0)
 ..I IVMPIECE="9C" D
"RTN","IVMPREC8",56,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",57,0)
 ...S IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMFLD,0))  ;CONF ADDR COUNTY
"RTN","IVMPREC8",58,0)
 ..I $E(IVMPIECE,1,3)="12C" S IVMFLD=$$FMDATE^HLFNC($P(IVMFLD,$E(HLECH,4),$E(IVMPIECE,4)))
"RTN","IVMPREC8",59,0)
 ..S IVMADFLG=1
"RTN","IVMPREC8",60,0)
 .;
"RTN","IVMPREC8",61,0)
 .I IVMXREF["PID12",'$G(DODSEG) D
"RTN","IVMPREC8",62,0)
 ..I 'FORADDR S IVMADFLG=1,IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMPID(12),0))  ;Process county only if not foreign address
"RTN","IVMPREC8",63,0)
 .; line remove so that the phone number is compared 
"RTN","IVMPREC8",64,0)
 .; before saving to 301.5.
"RTN","IVMPREC8",65,0)
 .I IVMXREF["PID13",$D(TELECOM),'$G(DODSEG) D
"RTN","IVMPREC8",66,0)
 ..;Confidential Phone Number
"RTN","IVMPREC8",67,0)
 ..;I IVMXREF="PID13CA",$D(TELECOM("VACPN")) D
"RTN","IVMPREC8",68,0)
 ..;.S IVMFLD=$$CONVPH($P($G(TELECOM("VACPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",69,0)
 ..;Phone Number [Work]
"RTN","IVMPREC8",70,0)
 ..;I IVMXREF="PID13W",$D(TELECOM("WPN")) D
"RTN","IVMPREC8",71,0)
 ..;.S IVMFLD=$$CONVPH($P($G(TELECOM("WPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",72,0)
 ..;Pager Number
"RTN","IVMPREC8",73,0)
 ..I IVMXREF="PID13B",$D(TELECOM("BPN")) D
"RTN","IVMPREC8",74,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("BPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",75,0)
 ..;Cell Phone Number
"RTN","IVMPREC8",76,0)
 ..I IVMXREF="PID13C",$D(TELECOM("ORN")) D
"RTN","IVMPREC8",77,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("ORN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",78,0)
 ..;Email Address
"RTN","IVMPREC8",79,0)
 ..I IVMXREF="PID13E",$D(TELECOM("NET")) D
"RTN","IVMPREC8",80,0)
 ...S IVMFLD=$P($G(TELECOM("NET")),$E(HLECH),4)
"RTN","IVMPREC8",81,0)
 ...S IVMFLD=$S($$CHKEMAIL(IVMFLD):IVMFLD,1:""),IVMADFLG=1
"RTN","IVMPREC8",82,0)
 .; - file address fields and quit
"RTN","IVMPREC8",83,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",84,0)
 .;
"RTN","IVMPREC8",85,0)
 .; - otherwise, set IVMFLD to field rec'd from IVM
"RTN","IVMPREC8",86,0)
 .;   for comparison with DHCP field
"RTN","IVMPREC8",87,0)
 .;I (IVMXREF'="PID113N")&(IVMXREF'="PID114N")&($E(IVMXREF,1,5)'="PID13") S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",88,0)
 .I $E(IVMXREF,1,5)'="PID13" S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",89,0)
 .;
"RTN","IVMPREC8",90,0)
 .; - if HL7 date convert to FM date and set IVMFLD
"RTN","IVMPREC8",91,0)
 .I IVMXREF["PID07" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",92,0)
 .;
"RTN","IVMPREC8",93,0)
 .; - if HL7 code convert to VistA and set IVMFLD
"RTN","IVMPREC8",94,0)
 .I IVMXREF["PID16" D  ;Marital Status
"RTN","IVMPREC8",95,0)
 ..S IVMFLD=$S(IVMFLD="D":"DIVORCED",IVMFLD="M":"MARRIED",IVMFLD="W":"WIDOWED",IVMFLD="A":"SEPARATED",IVMFLD="S":"NEVER MARRIED",IVMFLD="U":"UNKNOWN")
"RTN","IVMPREC8",96,0)
 ..S IVMFLD=$O(^DIC(11,"B",IVMFLD,0))
"RTN","IVMPREC8",97,0)
 .;
"RTN","IVMPREC8",98,0)
 .I IVMXREF["PID17" S IVMFLD=$O(^DIC(13,"C",IVMFLD,0))  ;Religion
"RTN","IVMPREC8",99,0)
 .;
"RTN","IVMPREC8",100,0)
 .I IVMXREF["PID22" D  ;Ethnicity
"RTN","IVMPREC8",101,0)
 ..S IVMFLD=$$CODE2PTR^DGUTL4($P($G(IVMPID(22)),$E(HLECH),4),2,2)
"RTN","IVMPREC8",102,0)
 .;
"RTN","IVMPREC8",103,0)
 .I IVMXREF="PID10",'$G(DODSEG),$D(IVMRACE) D  Q
"RTN","IVMPREC8",104,0)
 ..N XVAL,IVMLST,DHCPLST
"RTN","IVMPREC8",105,0)
 ..S (XVAL,IVMLST,DHCPLST)=""
"RTN","IVMPREC8",106,0)
 ..F  S XVAL=$O(^DPT(DFN,.02,"B",XVAL)) Q:XVAL=""  S IVMLST=IVMLST_XVAL_U
"RTN","IVMPREC8",107,0)
 ..S XVAL="" F  S XVAL=$O(IVMRACE(2,XVAL)) Q:XVAL=""  S DHCPLST=DHCPLST_XVAL_U
"RTN","IVMPREC8",108,0)
 ..Q:IVMLST=DHCPLST
"RTN","IVMPREC8",109,0)
 ..F XVAL=1:1:($L(DHCPLST,U)-1) S IVMFLD=$P(DHCPLST,U,XVAL) D
"RTN","IVMPREC8",110,0)
 ...D STORE^IVMPREC9
"RTN","IVMPREC8",111,0)
 .;
"RTN","IVMPREC8",112,0)
 .; - call VADPT routine to return DHCP demographics
"RTN","IVMPREC8",113,0)
 .D DEM^VADPT,ADD^VADPT,OPD^VADPT
"RTN","IVMPREC8",114,0)
 .;
"RTN","IVMPREC8",115,0)
 .; - execute code on the 1 node and get DHCP field for comparison
"RTN","IVMPREC8",116,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",117,0)
 .;
"RTN","IVMPREC8",118,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",119,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",120,0)
 .;
"RTN","IVMPREC8",121,0)
 .I IVMXREF="PID13",$D(TELECOM("PRN")),'$G(DODSEG) D  Q
"RTN","IVMPREC8",122,0)
 ..S IVMFLD=$P($G(TELECOM("PRN")),$E(HLECH))
"RTN","IVMPREC8",123,0)
 ..I IVMFLD]"" D
"RTN","IVMPREC8",124,0)
 ...K UPPHN
"RTN","IVMPREC8",125,0)
 ...S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",126,0)
 ...I COMPPH1'=COMPPH2 D STORE^IVMPREC9 S UPPHN=1
"RTN","IVMPREC8",127,0)
 .;
"RTN","IVMPREC8",128,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",129,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",130,0)
 Q
"RTN","IVMPREC8",131,0)
 ;
"RTN","IVMPREC8",132,0)
 ;
"RTN","IVMPREC8",133,0)
ZPD ; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC8",134,0)
 N STFLG
"RTN","IVMPREC8",135,0)
 S STFLG=0
"RTN","IVMPREC8",136,0)
 S IVMPIECE=$E(IVMXREF,4,5)
"RTN","IVMPREC8",137,0)
 I IVMXREF="ZPD09"!(IVMXREF="ZPD31")!(IVMXREF="ZPD32") Q:$$DODCK(DFN)
"RTN","IVMPREC8",138,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",139,0)
 .;
"RTN","IVMPREC8",140,0)
 .; - set var to HL7 field
"RTN","IVMPREC8",141,0)
 .S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",142,0)
 .;
"RTN","IVMPREC8",143,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",144,0)
 .I (IVMXREF["ZPD06")!(IVMXREF["ZPD07") S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",145,0)
 .;
"RTN","IVMPREC8",146,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",147,0)
 .I IVMXREF["ZPD09"!(IVMXREF["ZPD13")!(IVMXREF["ZPD32") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",148,0)
 .;
"RTN","IVMPREC8",149,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",150,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",151,0)
 .;
"RTN","IVMPREC8",152,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",153,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) S STFLG=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",154,0)
 .I $P(IVMSEG,"^",IVMPIECE)'="""""" D
"RTN","IVMPREC8",155,0)
 ..I IVMXREF["ZPD09" D STORE^IVMPREC9
"RTN","IVMPREC8",156,0)
 ..;I IVMXREF["ZPD09"!(IVMXREF["ZPD31")!(IVMXREF["ZPD32") D STORE^IVMPREC9
"RTN","IVMPREC8",157,0)
 I IVMXREF["ZPD08",STFLG,$$AUTORINC^IVMPREC9(DFN) Q
"RTN","IVMPREC8",158,0)
 I IVMXREF["ZPD32",$$AUTODOD^IVMLDEMD(DFN)
"RTN","IVMPREC8",159,0)
 Q
"RTN","IVMPREC8",160,0)
 ;
"RTN","IVMPREC8",161,0)
 ;
"RTN","IVMPREC8",162,0)
DODCK(DFN) ;this will check if Date of Death information needs to be uploaded or not.
"RTN","IVMPREC8",163,0)
 ;2 requirements are:
"RTN","IVMPREC8",164,0)
 ;  1. When the DOD is received from ESR with a Source of Death Notification equal to "Death Certificate on file and the
"RTN","IVMPREC8",165,0)
 ;     VistA DOD is null or empty then VistA will upload the Date of Death from ESR
"RTN","IVMPREC8",166,0)
 ;  2. When DOD is Received from ESR and VistA DOD is already populated then Vista will ignore the DOD from ESR and VistA
"RTN","IVMPREC8",167,0)
 ;     will not create an entry in the IVM demographic upload option.
"RTN","IVMPREC8",168,0)
 ;
"RTN","IVMPREC8",169,0)
 ; Inputs: DFN for ^DPT
"RTN","IVMPREC8",170,0)
 ;         IVMXREF (must be ZPD09, ZPD31 and ZPD32)
"RTN","IVMPREC8",171,0)
 ;         IVMSEG (the ZPD data)
"RTN","IVMPREC8",172,0)
 ;         IVMFLD (the field number in ^DPT(DFN)
"RTN","IVMPREC8",173,0)
 ;         IVMPIECE (the piece number of IVMSEG)
"RTN","IVMPREC8",174,0)
 ;         IVMDHCP (the data from ^DPT(DFN)
"RTN","IVMPREC8",175,0)
 ;
"RTN","IVMPREC8",176,0)
 ;
"RTN","IVMPREC8",177,0)
 N DODARRAY,QUIT
"RTN","IVMPREC8",178,0)
 ;
"RTN","IVMPREC8",179,0)
 S (CKDEL,QUIT)=0
"RTN","IVMPREC8",180,0)
 ;
"RTN","IVMPREC8",181,0)
 I $P(IVMSEG,"^",9)="""""" Q 0
"RTN","IVMPREC8",182,0)
 D GETS^DIQ(2,DFN,".351:.355","","DODARRAY")
"RTN","IVMPREC8",183,0)
 S DOD=DODARRAY(2,DFN_",",.351)
"RTN","IVMPREC8",184,0)
 I DOD'="" Q 1
"RTN","IVMPREC8",185,0)
 I $P(IVMSEG,"^",31)=3,DOD="" S QUIT=0    ;Death Certificate not on File
"RTN","IVMPREC8",186,0)
 I $P(IVMSEG,"^",31)=3,DOD'="" S QUIT=1
"RTN","IVMPREC8",187,0)
 ;
"RTN","IVMPREC8",188,0)
 Q QUIT ;
"RTN","IVMPREC8",189,0)
 ;
"RTN","IVMPREC8",190,0)
ZTA ; - compare ZTA segment fields with DHCP fields
"RTN","IVMPREC8",191,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",192,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",193,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",194,0)
 .;
"RTN","IVMPREC8",195,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",196,0)
 .S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",197,0)
 .;
"RTN","IVMPREC8",198,0)
 .; - ZTA05 as the ZTA address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",199,0)
 .I IVMXREF["ZTA05" D
"RTN","IVMPREC8",200,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)) Q:IVMADDR=""
"RTN","IVMPREC8",201,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",202,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",203,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",204,0)
 ..S IVMPIECE=$E(IVMPIECE,3,4)
"RTN","IVMPREC8",205,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",206,0)
 ..I (IVMPIECE=2)!(IVMPIECE=8) S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",207,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",208,0)
 ..I (IVMPIECE=4)!(IVMPIECE=5)!(IVMPIECE=9) S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",209,0)
 ..I IVMPIECE=4 S (IVMTSTPT,IVMFLD)=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",210,0)
 ..I IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",211,0)
 ..I IVMPIECE="4F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;PROVINCE
"RTN","IVMPREC8",212,0)
 ..I IVMPIECE="5F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;POSTAL CODE
"RTN","IVMPREC8",213,0)
 ..I IVMPIECE=6 S IVMFLD=$$CNTRCONV(COUNTRY)         ;COUNTRY
"RTN","IVMPREC8",214,0)
 ..I IVMPIECE=9 S IVMFLD=+$O(^DIC(5,+IVMTSTPT,1,"C",IVMFLD,0))  ;COUNTY
"RTN","IVMPREC8",215,0)
 .Q:IVMFLD=""
"RTN","IVMPREC8",216,0)
 .;
"RTN","IVMPREC8",217,0)
 .; - if HL7 data convert to Y/N value
"RTN","IVMPREC8",218,0)
 .I IVMXREF["ZTA02" S IVMFLD=$S(IVMFLD=0:"N",IVMFLD=1:"Y",1:"")
"RTN","IVMPREC8",219,0)
 .;
"RTN","IVMPREC8",220,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",221,0)
 .I (IVMXREF["ZTA03")!(IVMXREF["ZTA04")!(IVMXREF["ZTA08") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",222,0)
 .;
"RTN","IVMPREC8",223,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",224,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",225,0)
 .;
"RTN","IVMPREC8",226,0)
 .; - special logic for phone number processing
"RTN","IVMPREC8",227,0)
 .; - if different, then store the actual value received, then quit
"RTN","IVMPREC8",228,0)
 .I IVMXREF["ZTA07" D  Q
"RTN","IVMPREC8",229,0)
 ..S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",230,0)
 ..I COMPPH1'=COMPPH2 D STORE^IVMPREC9
"RTN","IVMPREC8",231,0)
 .;
"RTN","IVMPREC8",232,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",233,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",234,0)
 .;
"RTN","IVMPREC8",235,0)
 .I IVMXREF["ZTA08" D
"RTN","IVMPREC8",236,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("TA")=1
"RTN","IVMPREC8",237,0)
 Q
"RTN","IVMPREC8",238,0)
 ;
"RTN","IVMPREC8",239,0)
ZGD ; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC8",240,0)
 S IVMADFLG=0
"RTN","IVMPREC8",241,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",242,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",243,0)
 .;
"RTN","IVMPREC8",244,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",245,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",246,0)
 .;
"RTN","IVMPREC8",247,0)
 .; - ZGD06 as the ZGD address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",248,0)
 .I IVMXREF["ZGD06" D
"RTN","IVMPREC8",249,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",250,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",251,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",252,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",253,0)
 .;
"RTN","IVMPREC8",254,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",255,0)
 .I IVMXREF["ZGD08" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",256,0)
 .;
"RTN","IVMPREC8",257,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",258,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",259,0)
 .;
"RTN","IVMPREC8",260,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",261,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",262,0)
 Q
"RTN","IVMPREC8",263,0)
 ;
"RTN","IVMPREC8",264,0)
ZCT ; - compare ZCT segment fields with DHCP fields
"RTN","IVMPREC8",265,0)
 N ZCTTYP
"RTN","IVMPREC8",266,0)
 S IVMADFLG=0
"RTN","IVMPREC8",267,0)
 S IVMPIECE=$E(IVMXREF,4,8)
"RTN","IVMPREC8",268,0)
 S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",269,0)
 S ZCTTYP=$E(IVMPIECE,$L(IVMPIECE)-1,$L(IVMPIECE))
"RTN","IVMPREC8",270,0)
 Q:$P(IVMSEG,HLFS,2)'=$S(ZCTTYP="K1":1,ZCTTYP="K2":2,ZCTTYP="E1":3,ZCTTYP="E2":4,ZCTTYP="D1":5,1:"")
"RTN","IVMPREC8",271,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",272,0)
 .;
"RTN","IVMPREC8",273,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",274,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",275,0)
 .;
"RTN","IVMPREC8",276,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",277,0)
 .I IVMXREF["ZCT03" S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",278,0)
 .;
"RTN","IVMPREC8",279,0)
 .; - ZCT05 as the ZCT address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",280,0)
 .I IVMXREF["ZCT05" D
"RTN","IVMPREC8",281,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",282,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",283,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",284,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",285,0)
 .;
"RTN","IVMPREC8",286,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",287,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",288,0)
 .I IVMXREF["ZCT10" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",289,0)
 .;
"RTN","IVMPREC8",290,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",291,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",292,0)
 .;
"RTN","IVMPREC8",293,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",294,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",295,0)
 .;
"RTN","IVMPREC8",296,0)
 .I IVMXREF["ZCT10" D
"RTN","IVMPREC8",297,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG(ZCTTYP)=1
"RTN","IVMPREC8",298,0)
 Q
"RTN","IVMPREC8",299,0)
 ;
"RTN","IVMPREC8",300,0)
ZEM ; - compare ZEM segment fields with DHCP fields
"RTN","IVMPREC8",301,0)
 S IVMADFLG=0
"RTN","IVMPREC8",302,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",303,0)
 S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",304,0)
 Q:$P(IVMSEG,HLFS,2)'=$S($E(IVMXREF,$L(IVMXREF))="S":2,1:1)
"RTN","IVMPREC8",305,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",306,0)
 .;
"RTN","IVMPREC8",307,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",308,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",309,0)
 .;
"RTN","IVMPREC8",310,0)
 .; - ZEM06 as the ZEM address field containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",311,0)
 .I IVMXREF["ZEM06" D
"RTN","IVMPREC8",312,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",313,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)    ;,IVMADFLG=1
"RTN","IVMPREC8",314,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",315,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",316,0)
 .;
"RTN","IVMPREC8",317,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",318,0)
 .I IVMXREF["ZEM09" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",319,0)
 .;
"RTN","IVMPREC8",320,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",321,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",322,0)
 .;
"RTN","IVMPREC8",323,0)
 .; if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",324,0)
 .I $E(IVMXREF,1,6)="ZEM062",IVMFLD'=IVMDHCP S ZEMADRUP(IVMXREF)=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",325,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",326,0)
 Q
"RTN","IVMPREC8",327,0)
 ;
"RTN","IVMPREC8",328,0)
RF1 ; - compare RF1 segment fields with DHCP fields
"RTN","IVMPREC8",329,0)
 S IVMPIECE=$E(IVMXREF,4),IVMADFLG=1,RF1TYPE=$P(IVMSEG,HLFS,3)
"RTN","IVMPREC8",330,0)
 ;As per requirements, delete the communication data (Email, Cell and Pager) if it is not received in Z05.
"RTN","IVMPREC8",331,0)
 ;Hence, remove it from EPCDEL (deletion array) if Data exist in Z05. Comm. fields contained in EPCDEL will be deleted after updating all incoming communication data.
"RTN","IVMPREC8",332,0)
 K EPCDEL(RF1TYPE)
"RTN","IVMPREC8",333,0)
 ;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",334,0)
 I RF1TYPE="SAD",((IVMXREF="RF161")!(IVMXREF="RF162")!(IVMXREF="RF171")) D RF1PROC
"RTN","IVMPREC8",335,0)
 ;I RF1TYPE="CAD",((IVMXREF="RF161CA")!(IVMXREF="RF171CA")) D RF1PROC
"RTN","IVMPREC8",336,0)
 I RF1TYPE="CPH",((IVMXREF="RF161C")!(IVMXREF="RF162C")!(IVMXREF="RF171C")) D RF1PROC
"RTN","IVMPREC8",337,0)
 I RF1TYPE="PNO",((IVMXREF="RF161B")!(IVMXREF="RF162B")!(IVMXREF="RF171B")) D RF1PROC
"RTN","IVMPREC8",338,0)
 I RF1TYPE="EAD",((IVMXREF="RF161E")!(IVMXREF="RF162E")!(IVMXREF="RF171E")) D RF1PROC
"RTN","IVMPREC8",339,0)
 I RF1TYPE="PHH",((IVMXREF="RF161P")!(IVMXREF="RF162P")!(IVMXREF="RF171P")) D RF1PROC     ;Added for IVM*2*152
"RTN","IVMPREC8",340,0)
 I '$$RF1CHK^IVMPREC6(IVMRTN,IVMDA),IVMXREF="RF171P" D  ;Last RF1
"RTN","IVMPREC8",341,0)
 . I $$AUTOEPC^IVMPREC9(DFN,.UPDEPC)
"RTN","IVMPREC8",342,0)
 . N NOUPDT,NOPHUP S (NOUPDT,NOPHUP)=0   ;Added for IVM*2*152
"RTN","IVMPREC8",343,0)
 . I 'UPDEPC("SAD") S NOUPDT=1
"RTN","IVMPREC8",344,0)
 . ;Set the NOPHUP flag = 1 if Home Phone Change Dt/Tm not more recent, or
"RTN","IVMPREC8",345,0)
 . ;if Home Phone Change Dt/Tm more recent, but phone # the same
"RTN","IVMPREC8",346,0)
 . ;Added for IVM*2*152
"RTN","IVMPREC8",347,0)
 . I 'UPDEPC("PHH") S NOPHUP=1
"RTN","IVMPREC8",348,0)
 . I UPDEPC("PHH"),'$G(UPPHN) S NOPHUP=1
"RTN","IVMPREC8",349,0)
 . K UPPHN
"RTN","IVMPREC8",350,0)
 . I $$AUTOADDR^IVMLDEM6(DFN,1,NOUPDT,NOPHUP)
"RTN","IVMPREC8",351,0)
 Q
"RTN","IVMPREC8",352,0)
 ;
"RTN","IVMPREC8",353,0)
RF1PROC ;
"RTN","IVMPREC8",354,0)
 N IVMEPC
"RTN","IVMPREC8",355,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",356,0)
 .;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",357,0)
 .I IVMXREF["RF16" D  Q
"RTN","IVMPREC8",358,0)
 ..;- get data containing 4 pieces seperated by HLECH (~)
"RTN","IVMPREC8",359,0)
 ..S IVMRFDAT=$P(IVMSEG,HLFS,6)
"RTN","IVMPREC8",360,0)
 ..S IVMPIECE=$E(IVMXREF,5),IVMFLD=$P(IVMRFDAT,"~",IVMPIECE)
"RTN","IVMPREC8",361,0)
 ..;get 6th character of IVMXREF to determine if value is for Address
"RTN","IVMPREC8",362,0)
 ..;OR Email, Cell and Pager
"RTN","IVMPREC8",363,0)
 ..S IVMEPC=$E(IVMXREF,6)
"RTN","IVMPREC8",364,0)
 ..;Convert Change Source for Address, Email, Cell and Pager
"RTN","IVMPREC8",365,0)
 ..I IVMPIECE=2 S IVMFLD=$S(IVMEPC'="":$$EPCSRCC(IVMFLD),1:$$ADDRCNV(IVMFLD))
"RTN","IVMPREC8",366,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",367,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",368,0)
 .I IVMXREF["RF17" D  Q
"RTN","IVMPREC8",369,0)
 ..;get address/telecomm change date/tm field
"RTN","IVMPREC8",370,0)
 ..S IVMFLD=$$FMDATE^HLFNC($P(IVMSEG,HLFS,7))
"RTN","IVMPREC8",371,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",372,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",373,0)
 ..;
"RTN","IVMPREC8",374,0)
 ..;I RF1TYPE="CAD",$P($G(ADDRESS("CA")),HLFS)]"" D  Q
"RTN","IVMPREC8",375,0)
 ..;.; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",376,0)
 ..;.S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",377,0)
 ..;.I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("CA")=1
"RTN","IVMPREC8",378,0)
 ..;
"RTN","IVMPREC8",379,0)
 ..; check for auto-upload
"RTN","IVMPREC8",380,0)
 ..S IVMDHCP=$S(RF1TYPE="SAD":$P($G(^DPT(DFN,.11)),HLFS,13),RF1TYPE="CPH":$P($G(^DPT(DFN,.13)),HLFS,9),RF1TYPE="PNO":$P($G(^DPT(DFN,.13)),HLFS,12),RF1TYPE="EAD":$P($G(^DPT(DFN,.13)),HLFS,6),1:"")
"RTN","IVMPREC8",381,0)
 ..I IVMDHCP="" S IVMDHCP=$S(RF1TYPE="PHH":$P($G(^DPT(DFN,.132)),HLFS,1),1:"")     ;Added for IVM*2*152
"RTN","IVMPREC8",382,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) D
"RTN","IVMPREC8",383,0)
 ...S UPDEPC(RF1TYPE)=$G(EPCFARY(RF1TYPE))
"RTN","IVMPREC8",384,0)
 ...I RF1TYPE="SAD" S UPDEPC("SAD")=1
"RTN","IVMPREC8",385,0)
 ...I RF1TYPE="PHH" S UPDEPC("PHH")=1   ;Added for IVM*2*152
"RTN","IVMPREC8",386,0)
 Q
"RTN","IVMPREC8",387,0)
ADDRCNV(ADDRSRC) ;convert Address Source from HL7 to DHCP format
"RTN","IVMPREC8",388,0)
 ;
"RTN","IVMPREC8",389,0)
 Q:$G(ADDRSRC)']"" ""
"RTN","IVMPREC8",390,0)
 Q:ADDRSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",391,0)
 Q:ADDRSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",392,0)
 Q:ADDRSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",393,0)
 Q:ADDRSRC="USNCOA" "NCOA"
"RTN","IVMPREC8",394,0)
 Q:ADDRSRC="USVABVA" "BVA"
"RTN","IVMPREC8",395,0)
 Q:ADDRSRC="USVAINS" "VAINS"
"RTN","IVMPREC8",396,0)
 Q:ADDRSRC="USPS" "USPS"
"RTN","IVMPREC8",397,0)
 Q:ADDRSRC="LACS" "LACS"
"RTN","IVMPREC8",398,0)
 Q:ADDRSRC="USVOA" "VOA"
"RTN","IVMPREC8",399,0)
 Q ""
"RTN","IVMPREC8",400,0)
EPCSRCC(EPCSRC) ;Convert Email, Cell, Pager Change Source from HL7 to DHCP
"RTN","IVMPREC8",401,0)
 ;
"RTN","IVMPREC8",402,0)
 Q:$G(EPCSRC)']"" ""
"RTN","IVMPREC8",403,0)
 Q:EPCSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",404,0)
 Q:EPCSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",405,0)
 Q:EPCSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",406,0)
 Q ""
"RTN","IVMPREC8",407,0)
BAICONV(BAISRC) ;Convert Bad address source from HL7 to DHCP format
"RTN","IVMPREC8",408,0)
 Q:$G(BAISRC)']"" ""
"RTN","IVMPREC8",409,0)
 Q:BAISRC="VAB1" 1
"RTN","IVMPREC8",410,0)
 Q:BAISRC="VAB2" 2
"RTN","IVMPREC8",411,0)
 Q:BAISRC="VAB3" 3
"RTN","IVMPREC8",412,0)
 Q:BAISRC="VAB4" 4
"RTN","IVMPREC8",413,0)
 Q ""
"RTN","IVMPREC8",414,0)
CONVPH(PH) ;remove special chars/spaces from Phone number
"RTN","IVMPREC8",415,0)
 ;*168 Check format, quit if OK else strip and return if not 10 numeric
"RTN","IVMPREC8",416,0)
 ;Format if 10 numeric.
"RTN","IVMPREC8",417,0)
 Q:PH?1"(".3N.1")".3N.1"-".4N PH
"RTN","IVMPREC8",418,0)
 S PH=$TR(PH," )(/#\-","")
"RTN","IVMPREC8",419,0)
 Q:PH'?10N PH
"RTN","IVMPREC8",420,0)
 Q "("_$E(PH,1,3)_")"_$E(PH,4,6)_"-"_$E(PH,7,10)
"RTN","IVMPREC8",421,0)
 ;
"RTN","IVMPREC8",422,0)
CNTRCONV(COUNTRY) ;Check if valid country
"RTN","IVMPREC8",423,0)
 I COUNTRY="" Q 0
"RTN","IVMPREC8",424,0)
 Q $O(^HL(779.004,"B",COUNTRY,""))
"RTN","IVMPREC8",425,0)
CHKEMAIL(EMAIL) ;Check for Valid Email
"RTN","IVMPREC8",426,0)
 I $G(EMAIL)="" Q 0
"RTN","IVMPREC8",427,0)
 I '(EMAIL?1.E1"@"1.E1"."1.E) Q 0
"RTN","IVMPREC8",428,0)
 Q 1
"RTN","IVMPTRN8")
0^1^B79090653^B78004542
"RTN","IVMPTRN8",1,0)
IVMPTRN8 ;ALB/RKS/PDJ/BRM,TDM,PJH,TDM,PWC,LBD,DRP - HL7 FULL DATA TRANSMISSION (Z07) BUILDER ; 8/11/11 5:27pm
"RTN","IVMPTRN8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,24,36,37,47,48,42,34,77,76,75,79,85,89,98,56,97,104,113,109,114,105,115,121,151,141,150,160,161,168**; 21-OCT-94;Build 6
"RTN","IVMPTRN8",3,0)
 ;
"RTN","IVMPTRN8",4,0)
 ;
"RTN","IVMPTRN8",5,0)
BUILD(DFN,IVMMTDT,IVMCT,IVMQUERY) ; --
"RTN","IVMPTRN8",6,0)
 ;  Description: This entry point will be used to create an HL7 
"RTN","IVMPTRN8",7,0)
 ;  "Full Data Transmission" message for a patient.
"RTN","IVMPTRN8",8,0)
 ;
"RTN","IVMPTRN8",9,0)
 ;  Input:
"RTN","IVMPTRN8",10,0)
 ;        DFN - Patient IEN
"RTN","IVMPTRN8",11,0)
 ;    IVMMTDT - date of the patient's Means Test or Copay Test
"RTN","IVMPTRN8",12,0)
 ;      IVMCT - count of hl7 segments transmitted, pass by reference
"RTN","IVMPTRN8",13,0)
 ;   IVMQUERY - array passed in by reference where
"RTN","IVMPTRN8",14,0)
 ;    IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",15,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",16,0)
 ;                last treatment date
"RTN","IVMPTRN8",17,0)
 ;    IVMQUERY("OVIS") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",18,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",19,0)
 ;                finding outpatient visits
"RTN","IVMPTRN8",20,0)
 ;
"RTN","IVMPTRN8",21,0)
 ;  HL7 variables as defined by call to INIT^IVMUFNC:
"RTN","IVMPTRN8",22,0)
 ;      HLEVN - HL7 message event counter 
"RTN","IVMPTRN8",23,0)
 ;      HLSDT - a flag that indicates that the data to be sent is
"RTN","IVMPTRN8",24,0)
 ;              stored in the ^TMP("HLS") global array.
"RTN","IVMPTRN8",25,0)
 ;
"RTN","IVMPTRN8",26,0)
 ;  The following variables returned by the INIT^HLTRANS entry point:
"RTN","IVMPTRN8",27,0)
 ;    HLNDAP - Non-DHCP Application Pointer from file 770
"RTN","IVMPTRN8",28,0)
 ;   HLNDAP0 - Zero node from file 770 corresponding to HLNDAP
"RTN","IVMPTRN8",29,0)
 ;     HLDAP - DHCP Application Pointer from file 771
"RTN","IVMPTRN8",30,0)
 ;     HLDAN - The DHCP Application Name (.01 field, file 771) for HLDAP
"RTN","IVMPTRN8",31,0)
 ;     HLPID - HL7 processing ID from file 770
"RTN","IVMPTRN8",32,0)
 ;     HLVER - HL7 version number from file 770
"RTN","IVMPTRN8",33,0)
 ;      HLFS - HL7 Field Separator from the 'FS' node of file 771
"RTN","IVMPTRN8",34,0)
 ;     HLECH - HL7 Encoding Characters from the 'EC' node of file 771
"RTN","IVMPTRN8",35,0)
 ;       HLQ - Double quotes ("") for use in building HL7 segments
"RTN","IVMPTRN8",36,0)
 ;     HLERR - if an error is encountered, an error message is returned
"RTN","IVMPTRN8",37,0)
 ;             in the HLERR variable.
"RTN","IVMPTRN8",38,0)
 ;      HLDA - the internal entry number for the entry created in
"RTN","IVMPTRN8",39,0)
 ;             file #772.
"RTN","IVMPTRN8",40,0)
 ;      HLDT - transmission date/time (associated with the entry in file
"RTN","IVMPTRN8",41,0)
 ;             #772 identified by HLDA) in internal VA FileMan format.
"RTN","IVMPTRN8",42,0)
 ;     HLDT1 - the same transmission date/time as the HLDT variable, 
"RTN","IVMPTRN8",43,0)
 ;             only in HL7 format.
"RTN","IVMPTRN8",44,0)
 ;
"RTN","IVMPTRN8",45,0)
 ; Output:
"RTN","IVMPTRN8",46,0)
 ;  ^TMP("HLS",$J,IVMCT) - global array containing all segments of the HL7 message that the VistA application wishes to send.  The HLSDT variable is defined above and the IVMCT variable is a sequential number incremented by 1.
"RTN","IVMPTRN8",47,0)
 ;
"RTN","IVMPTRN8",48,0)
 ;
"RTN","IVMPTRN8",49,0)
 N DGINC,DGIR,DGREL,I,IVMNTE,IVMPID,IVMSUB,IVMZRD,VAFPID,VAFZEL,FBZFE,IVMZCD,DELETE,NODE,IVMPIEN,TEST,IVMPNODE,TESTTYPE,SEQS,TESTCODE,HARDSHIP,ACTVIEN,IVMZMH,IVMSEQ
"RTN","IVMPTRN8",50,0)
 N EDBMTZ06,ZMHSQ,SETID,OBXCNT,OBXTMP,DGSEC,SEGOCC,ZIOSEG,N101015,RF1SEG,ZCTTYP,ZCTARY,ZCTSQ,VAFPID,CAFLG
"RTN","IVMPTRN8",51,0)
 ;
"RTN","IVMPTRN8",52,0)
 ; create (PID) Patient Identification segment
"RTN","IVMPTRN8",53,0)
 ; **** Add ICN to 2nd piece PID segment for MPI@HEC.
"RTN","IVMPTRN8",54,0)
 S IVMCMOR="1,2",IVMSEQ=1
"RTN","IVMPTRN8",55,0)
 ; check to see if site is a legacy site.  If not add ICN to PID segment.
"RTN","IVMPTRN8",56,0)
 I '$D(^PPP(1020.128,"AC",$P($$SITE^VASITE,"^",3))) D
"RTN","IVMPTRN8",57,0)
 . I +$$GETICN^MPIF001(DFN)>0,($$IFLOCAL^MPIF001(DFN)=0) S IVMSEQ=IVMSEQ_",2",IVMCMOR="1,2,3"  ;add SEQ 1 and 2 for PID
"RTN","IVMPTRN8",58,0)
 ;
"RTN","IVMPTRN8",59,0)
 ; send SSN indicating pseudo
"RTN","IVMPTRN8",60,0)
 ; I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1  ; strip 'P' from pseudo SSNs
"RTN","IVMPTRN8",61,0)
 S IVMSEQ=IVMSEQ_",3,5,6,7,8,10,11,12,13,14,16,17,19,22,24"
"RTN","IVMPTRN8",62,0)
 K IVMPID D BLDPID^VAFCQRY1(DFN,1,IVMSEQ,.IVMPID,.HL,.ERROR)
"RTN","IVMPTRN8",63,0)
 K VAFPID D STRIP11
"RTN","IVMPTRN8",64,0)
 S SEGOCC="" F  S SEGOCC=$O(VAFPID(SEGOCC)) Q:SEGOCC=""  D
"RTN","IVMPTRN8",65,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=VAFPID(SEGOCC)
"RTN","IVMPTRN8",66,0)
 ;
"RTN","IVMPTRN8",67,0)
 ; **** create (PD1) Patient CMOR segment for MPI@HEC.
"RTN","IVMPTRN8",68,0)
 S:'$D(HL("FS")) HL("FS")=HLFS
"RTN","IVMPTRN8",69,0)
 S:'$D(HL("ECH")) HL("ECH")=HLECH
"RTN","IVMPTRN8",70,0)
 S:'$D(HL("Q")) HL("Q")=HLQ
"RTN","IVMPTRN8",71,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,IVMCMOR)
"RTN","IVMPTRN8",72,0)
 ;
"RTN","IVMPTRN8",73,0)
 ; create (ZPD) Patient Dependent Info. segment
"RTN","IVMPTRN8",74,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN1^VAFHLZPD(DFN,"1,6,7,8,9,11,12,13,17,19,30,31,32,33,34,35,40"),IVMINS=$P(^(IVMCT),HLFS,12)
"RTN","IVMPTRN8",75,0)
 I $D(VAFZPD(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=VAFZPD(1) K VAFZPD(1)
"RTN","IVMPTRN8",76,0)
 ;
"RTN","IVMPTRN8",77,0)
 ; create (ZTA) Temporary Address segment
"RTN","IVMPTRN8",78,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZTA(DFN,"1,2,3,4,5,6,7,8,9",,.HL)
"RTN","IVMPTRN8",79,0)
 ;
"RTN","IVMPTRN8",80,0)
 ; create (ZIE) Ineligible segment
"RTN","IVMPTRN8",81,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIE(DFN,"1,2,3",1)
"RTN","IVMPTRN8",82,0)
 ;
"RTN","IVMPTRN8",83,0)
 ; create (ZEL) Eligibility segment(s) 
"RTN","IVMPTRN8",84,0)
 ; **** Add 5th piece to ZEL to correct consistency check
"RTN","IVMPTRN8",85,0)
 ; added 41-44 for CLV IVM*2.0*161
"RTN","IVMPTRN8",86,0)
 D EN1^VAFHLZEL(DFN,"1,2,5,6,7,8,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,29,34,35,37,38,39,40,41,42,43,44",2,.VAFZEL)
"RTN","IVMPTRN8",87,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(1))  ; Primary Eligibility
"RTN","IVMPTRN8",88,0)
 I $D(VAFZEL(1,1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(1,1))
"RTN","IVMPTRN8",89,0)
 ; - other entitled eligibilities
"RTN","IVMPTRN8",90,0)
 F IVMSUB=1:0 S IVMSUB=+$O(VAFZEL(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",91,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(+IVMSUB))
"RTN","IVMPTRN8",92,0)
 ;
"RTN","IVMPTRN8",93,0)
 ; create ZE2 segment (Optional)
"RTN","IVMPTRN8",94,0)
 I $P($G(^DPT(DFN,.385)),U)'="" S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZE2(DFN,"1,2")
"RTN","IVMPTRN8",95,0)
 ;
"RTN","IVMPTRN8",96,0)
 ; create (ZEN) Enrollment segment
"RTN","IVMPTRN8",97,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEN(DFN)
"RTN","IVMPTRN8",98,0)
 ;
"RTN","IVMPTRN8",99,0)
 ; create (ZCD) Catastrophic Disability segment(s)
"RTN","IVMPTRN8",100,0)
 D BUILD^VAFHLZCD(.IVMZCD,DFN,,HLQ,HLFS)
"RTN","IVMPTRN8",101,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZCD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",102,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZCD(+IVMSUB))
"RTN","IVMPTRN8",103,0)
 ;
"RTN","IVMPTRN8",104,0)
 ; Optionally create (ZMH) Military History segments
"RTN","IVMPTRN8",105,0)
 ; Pass "*" as parameter to send unlimited MSEs in Z07 (IVM*2*141)
"RTN","IVMPTRN8",106,0)
 D ENTER^VAFHLZMH(DFN,"IVMZMH","*")
"RTN","IVMPTRN8",107,0)
 S (ZMHSQ,SETID)=0
"RTN","IVMPTRN8",108,0)
 I $D(IVMZMH) F  S ZMHSQ=$O(IVMZMH(ZMHSQ)) Q:ZMHSQ=""  D
"RTN","IVMPTRN8",109,0)
 . Q:$TR($P(IVMZMH(ZMHSQ,0),HLFS,4,5),"""^~")=""
"RTN","IVMPTRN8",110,0)
 . S SETID=SETID+1,IVMCT=IVMCT+1
"RTN","IVMPTRN8",111,0)
 . S ^TMP("HLS",$J,IVMCT)="ZMH"_HLFS_SETID_HLFS_$P(IVMZMH(ZMHSQ,0),HLFS,3,6)
"RTN","IVMPTRN8",112,0)
 ;
"RTN","IVMPTRN8",113,0)
 ; create (ZRD) Rated Disabilities segment(s)
"RTN","IVMPTRN8",114,0)
 D EN^VAFHLZRD(DFN,"1,2,3,4,12,13,14,",HLQ,HLFS,"IVMZRD")
"RTN","IVMPTRN8",115,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZRD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",116,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZRD(+IVMSUB,0))
"RTN","IVMPTRN8",117,0)
 ;
"RTN","IVMPTRN8",118,0)
 ; create (ZCT) Emergency Contact segment
"RTN","IVMPTRN8",119,0)
 ;S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7,10","",1,1)
"RTN","IVMPTRN8",120,0)
 K ZCTARY F ZCTTYP=1:1:5 D   ;Create Optional ZCT Segments
"RTN","IVMPTRN8",121,0)
 . S ZCTARY(ZCTTYP)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7,10","",ZCTTYP,1)
"RTN","IVMPTRN8",122,0)
 S (ZCTTYP,ZCTSQ)=0
"RTN","IVMPTRN8",123,0)
 I $D(ZCTARY) F  S ZCTTYP=$O(ZCTARY(ZCTTYP)) Q:ZCTTYP=""  D
"RTN","IVMPTRN8",124,0)
 . Q:$P(ZCTARY(ZCTTYP),HLFS,11)=HLQ
"RTN","IVMPTRN8",125,0)
 . S ZCTSQ=ZCTSQ+1,$P(ZCTARY(ZCTTYP),HLFS,2)=ZCTSQ
"RTN","IVMPTRN8",126,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=ZCTARY(ZCTTYP)
"RTN","IVMPTRN8",127,0)
 I ZCTSQ=0 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=ZCTARY(1)
"RTN","IVMPTRN8",128,0)
 ;
"RTN","IVMPTRN8",129,0)
 ; create (ZEM) Employment Info. segment for (1) Patient & (2) Spouse
"RTN","IVMPTRN8",130,0)
 ;*168 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",131,0)
 ;*168 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3,4,5,6,7",2,2)
"RTN","IVMPTRN8",132,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3,4,5,6,7,9") ;re-enable imprecise date.
"RTN","IVMPTRN8",133,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3,4,5,6,7,9",2,2)
"RTN","IVMPTRN8",134,0)
 ;
"RTN","IVMPTRN8",135,0)
 ; create (ZGD) Guardian segment for (1) VA & (2) Civil 
"RTN","IVMPTRN8",136,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",1)
"RTN","IVMPTRN8",137,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",2)
"RTN","IVMPTRN8",138,0)
 ;
"RTN","IVMPTRN8",139,0)
 ; Income Year requiring transmission from IVM Patient File (301.5)
"RTN","IVMPTRN8",140,0)
 S IVMIY=$S($D(IVMIY):IVMIY,1:(IVMMTDT-10000))
"RTN","IVMPTRN8",141,0)
 N MTINFO S MTINFO=$$FUT^DGMTU(DFN)
"RTN","IVMPTRN8",142,0)
 I ($E(IVMIY,1,3)+1)=$E($P(MTINFO,U,2),1,3) S IVMMTDT=$P(MTINFO,U,2)
"RTN","IVMPTRN8",143,0)
 ;get the primary test for the income year
"RTN","IVMPTRN8",144,0)
 S TESTTYPE=$$GETTYPE^IVMPTRN9(DFN,IVMMTDT,.TESTCODE,.HARDSHIP,.ACTVIEN)
"RTN","IVMPTRN8",145,0)
 ;
"RTN","IVMPTRN8",146,0)
 ; The following function call returns:
"RTN","IVMPTRN8",147,0)
 ;   - Patient Relation IEN array in DGREL
"RTN","IVMPTRN8",148,0)
 ;   - Individual Annual Income IEN array in DGINC
"RTN","IVMPTRN8",149,0)
 ;   - Income Relation IEN array in DGINR
"RTN","IVMPTRN8",150,0)
 D ALL^DGMTU21(DFN,"VSC",IVMMTDT,"IPR",ACTVIEN)
"RTN","IVMPTRN8",151,0)
 ;
"RTN","IVMPTRN8",152,0)
 S EDBMTZ06=0 I $$VERZ06^EASPTRN1(DFN) S EDBMTZ06=1
"RTN","IVMPTRN8",153,0)
 ; create (ZIC) Income segment for veteran
"RTN","IVMPTRN8",154,0)
 S IVMCT=IVMCT+1
"RTN","IVMPTRN8",155,0)
 ;IVM*2.0*115 -- Check for Means Test Version Indicator
"RTN","IVMPTRN8",156,0)
 N MTVERS S MTVERS=$S(+$G(ACTVIEN):+$P($G(^DGMT(408.31,ACTVIEN,2)),"^",11),1:0)
"RTN","IVMPTRN8",157,0)
 I MTVERS=0 D  I 1
"RTN","IVMPTRN8",158,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20")
"RTN","IVMPTRN8",159,0)
 E  D
"RTN","IVMPTRN8",160,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,9,12,13,14,15,16,18,19")
"RTN","IVMPTRN8",161,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",162,0)
 ;use IVMIY not IVMMTDT. For LTC copay exemption, IVMMTDT is not correct
"RTN","IVMPTRN8",163,0)
 S $P(^TMP("HLS",$J,IVMCT),"^",3)=$$HLDATE^HLFNC(IVMIY)
"RTN","IVMPTRN8",164,0)
 ;
"RTN","IVMPTRN8",165,0)
 ; create (ZIR) Income Relation segment for veteran
"RTN","IVMPTRN8",166,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("V")),"1,2,3,4,5,10,15")  ;IVM * 2.0 *160
"RTN","IVMPTRN8",167,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^1"
"RTN","IVMPTRN8",168,0)
 ;
"RTN","IVMPTRN8",169,0)
 ; create (ZDP) Patient Dependent Info. segment for spouse
"RTN","IVMPTRN8",170,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("S")),"1,2,3,4,5,6,7,8,9,10,13,14")
"RTN","IVMPTRN8",171,0)
 I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",172,0)
 . ; - pass non-existent SSNs as 0s
"RTN","IVMPTRN8",173,0)
 . S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",174,0)
 ;
"RTN","IVMPTRN8",175,0)
 ; create (ZIC) Income segment for spouse
"RTN","IVMPTRN8",176,0)
 S IVMCT=IVMCT+1
"RTN","IVMPTRN8",177,0)
 ;IVM*2.0*115
"RTN","IVMPTRN8",178,0)
 I MTVERS=0 D  I 1
"RTN","IVMPTRN8",179,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20")
"RTN","IVMPTRN8",180,0)
 E  D
"RTN","IVMPTRN8",181,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,9,12,16,18,19")
"RTN","IVMPTRN8",182,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",183,0)
 ;
"RTN","IVMPTRN8",184,0)
 ; create (ZIR) Income Relation segment for spouse
"RTN","IVMPTRN8",185,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("S")),"1,2,3")
"RTN","IVMPTRN8",186,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",187,0)
 ;
"RTN","IVMPTRN8",188,0)
 ;
"RTN","IVMPTRN8",189,0)
 ; create ZDP, ZIC, and ZIR segments for all Means Test dependents
"RTN","IVMPTRN8",190,0)
 F IVMSUB=0:0 S IVMSUB=$O(DGREL("C",IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",191,0)
 . ;
"RTN","IVMPTRN8",192,0)
 . ; - create (ZDP) Dependent Info. segment for dependent child
"RTN","IVMPTRN8",193,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("C",IVMSUB)),"1,2,3,4,5,6,7,9,10")
"RTN","IVMPTRN8",194,0)
 . I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",195,0)
 . . ; - pass non-existent SSNs as 0s
"RTN","IVMPTRN8",196,0)
 . . S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",197,0)
 . ;
"RTN","IVMPTRN8",198,0)
 . ; - create (ZIC) Income segment for dependent child
"RTN","IVMPTRN8",199,0)
 . S IVMCT=IVMCT+1
"RTN","IVMPTRN8",200,0)
 . ;IVM*2.0*115
"RTN","IVMPTRN8",201,0)
 . I MTVERS=0 D  I 1
"RTN","IVMPTRN8",202,0)
 . . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,4,5,6,7,8,9,10,11,12,15")
"RTN","IVMPTRN8",203,0)
 . E  D
"RTN","IVMPTRN8",204,0)
 . . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,9,12,15,16,18,19")
"RTN","IVMPTRN8",205,0)
 . I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",206,0)
 . ;
"RTN","IVMPTRN8",207,0)
 . ; - create (ZIR) Income Relation segment for dependent child
"RTN","IVMPTRN8",208,0)
 . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("C",IVMSUB)),"1,2,3,4,6,7,8,9,14,15")  ;IVM * 2.0 *160
"RTN","IVMPTRN8",209,0)
 . I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",210,0)
 . ;
"RTN","IVMPTRN8",211,0)
 ; Send INACTIVE spouse/dependents.
"RTN","IVMPTRN8",212,0)
 D GETINACD^DGMTU11(DFN,.DGREL)
"RTN","IVMPTRN8",213,0)
 F I="S","C" D
"RTN","IVMPTRN8",214,0)
 . F IVMSUB=0:0 S IVMSUB=$O(DGIREL(I,IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",215,0)
 . . S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGIREL(I,IVMSUB)),"1,2,3,4,5,6,7,9,10,11",,,$P(DGIREL(I,IVMSUB),U,3))
"RTN","IVMPTRN8",216,0)
 ;
"RTN","IVMPTRN8",217,0)
 D GOTO^IVMPTRN9
"RTN","IVMPTRN8",218,0)
 Q
"RTN","IVMPTRN8",219,0)
 ;
"RTN","IVMPTRN8",220,0)
STRIP11 N APID,ZPID,ASQ,ATYP,SSQ
"RTN","IVMPTRN8",221,0)
 ;Extract PID segment
"RTN","IVMPTRN8",222,0)
 S IVMPID(1)=$E(IVMPID(1),5,$L(IVMPID(1)))
"RTN","IVMPTRN8",223,0)
 D BLDPID^IVMPREC6(.IVMPID,.APID)
"RTN","IVMPTRN8",224,0)
 ;
"RTN","IVMPTRN8",225,0)
 S CAFLG=0
"RTN","IVMPTRN8",226,0)
 I $D(APID(11)) D
"RTN","IVMPTRN8",227,0)
 .I $O(APID(11,"")) D  Q
"RTN","IVMPTRN8",228,0)
 ..M ZPID(11)=APID(11) K APID(11)
"RTN","IVMPTRN8",229,0)
 ..S (ASQ,SSQ)=0 F  S ASQ=$O(ZPID(11,ASQ)) Q:ASQ=""  D
"RTN","IVMPTRN8",230,0)
 ...S ATYP=$P($G(ZPID(11,ASQ)),$E(HLECH),7) Q:ATYP=""
"RTN","IVMPTRN8",231,0)
 ...I (ATYP="VACAA")!(ATYP="VACAC")!(ATYP="VACAM")!(ATYP="VACAO") Q
"RTN","IVMPTRN8",232,0)
 ...I ATYP="VACAE" S CAFLG=1
"RTN","IVMPTRN8",233,0)
 ...S SSQ=SSQ+1,APID(11,SSQ)=ZPID(11,ASQ)
"RTN","IVMPTRN8",234,0)
 .Q:$G(APID(11))=""
"RTN","IVMPTRN8",235,0)
 .S ATYP=$P($G(APID(11)),$E(HLECH),7) Q:ATYP=""
"RTN","IVMPTRN8",236,0)
 .I ATYP="VACAE" S CAFLG=1 Q
"RTN","IVMPTRN8",237,0)
 .I (ATYP="VACAA")!(ATYP="VACAC")!(ATYP="VACAM")!(ATYP="VACAO") K APID(11)
"RTN","IVMPTRN8",238,0)
 ;
"RTN","IVMPTRN8",239,0)
 I 'CAFLG,$D(APID(13)) D
"RTN","IVMPTRN8",240,0)
 .I $O(APID(13,"")) D  Q
"RTN","IVMPTRN8",241,0)
 ..S ASQ=0 F  S ASQ=$O(APID(13,ASQ)) Q:ASQ=""  D
"RTN","IVMPTRN8",242,0)
 ...Q:$G(APID(13,ASQ))=""
"RTN","IVMPTRN8",243,0)
 ...S ATYP=$P($G(APID(13,ASQ)),$E(HLECH),2) Q:ATYP=""
"RTN","IVMPTRN8",244,0)
 ...I ATYP="VACPN" K APID(13,ASQ) Q
"RTN","IVMPTRN8",245,0)
 .Q:$G(APID(13))=""
"RTN","IVMPTRN8",246,0)
 .S ATYP=$P($G(APID(13)),$E(HLECH),2) Q:ATYP=""
"RTN","IVMPTRN8",247,0)
 .I ATYP="VACPN" K APID(13) Q
"RTN","IVMPTRN8",248,0)
 ;
"RTN","IVMPTRN8",249,0)
 ;Rebuild PID
"RTN","IVMPTRN8",250,0)
 D KVA^VADPT
"RTN","IVMPTRN8",251,0)
 D MAKEIT^VAFHLU("PID",.APID,.VAFPID,.VAFPID)
"RTN","IVMPTRN8",252,0)
 S VAFPID(0)=VAFPID
"RTN","IVMPTRN8",253,0)
 Q
"VER")
8.0^22.2
"BLD",10707,6)
^140
**END**
**END**

