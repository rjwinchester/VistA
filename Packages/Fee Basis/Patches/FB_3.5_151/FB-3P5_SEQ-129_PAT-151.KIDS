Released FB*3.5*151 SEQ #129
Extracted from mail message
**KIDS**:FB*3.5*151^

**INSTALL NAME**
FB*3.5*151
"BLD",9502,0)
FB*3.5*151^FEE BASIS^0^3140519^y
"BLD",9502,1,0)
^^5^5^3140323^^
"BLD",9502,1,1,0)
This patch is the first of two patches that enhance the Fee Basis package
"BLD",9502,1,2,0)
per the requirements of the VistA Fee Separation of Duties project.  This
"BLD",9502,1,3,0)
patch makes the following changes to Fee Basis:
"BLD",9502,1,4,0)
 o Retain historical data for unauthorized claims
"BLD",9502,1,5,0)
 o Retain historical data for authorizations
"BLD",9502,4,0)
^9.64PA^162.7^2
"BLD",9502,4,161,0)
161
"BLD",9502,4,161,2,0)
^9.641^161.01^2
"BLD",9502,4,161,2,161.01,0)
AUTHORIZATION  (sub-file)
"BLD",9502,4,161,2,161.01,1,0)
^9.6411^.095^5
"BLD",9502,4,161,2,161.01,1,.01,0)
FROM DATE
"BLD",9502,4,161,2,161.01,1,.02,0)
TO DATE
"BLD",9502,4,161,2,161.01,1,.06,0)
DISCHARGE TYPE
"BLD",9502,4,161,2,161.01,1,.07,0)
PURPOSE OF VISIT CODE
"BLD",9502,4,161,2,161.01,1,.095,0)
TREATMENT TYPE CODE
"BLD",9502,4,161,2,161.193,0)
DATA AUDIT  (sub-file)
"BLD",9502,4,161,2,161.193,1,0)
^9.6411^^
"BLD",9502,4,161,222)
y^y^p^^^^n^^n
"BLD",9502,4,161,224)

"BLD",9502,4,162.7,0)
162.7
"BLD",9502,4,162.7,2,0)
^9.641^162.793^2
"BLD",9502,4,162.7,2,162.7,0)
FEE BASIS UNAUTHORIZED CLAIMS  (File-top level)
"BLD",9502,4,162.7,2,162.7,1,0)
^9.6411^55^14
"BLD",9502,4,162.7,2,162.7,1,.01,0)
DATE CLAIM RECEIVED
"BLD",9502,4,162.7,2,162.7,1,7,0)
DATE VALID CLAIM RECEIVED
"BLD",9502,4,162.7,2,162.7,1,10,0)
DISPOSITION
"BLD",9502,4,162.7,2,162.7,1,11,0)
DATE OF DISPOSITION
"BLD",9502,4,162.7,2,162.7,1,19.5,0)
DATE LETTER SENT
"BLD",9502,4,162.7,2,162.7,1,19.6,0)
DATE REQ INFO SENT
"BLD",9502,4,162.7,2,162.7,1,21,0)
REOPEN CLAIM DATE
"BLD",9502,4,162.7,2,162.7,1,24,0)
STATUS
"BLD",9502,4,162.7,2,162.7,1,50,0)
NOTICE OF DISAGREEMENT RECV'D
"BLD",9502,4,162.7,2,162.7,1,51,0)
STATEMENT OF THE CASE ISSUED
"BLD",9502,4,162.7,2,162.7,1,52,0)
DATE SUBSTANTIVE APPEAL RECV'D
"BLD",9502,4,162.7,2,162.7,1,53,0)
DATE APPEAL DISPOSITIONED
"BLD",9502,4,162.7,2,162.7,1,54,0)
DATE APPEALED TO COVA
"BLD",9502,4,162.7,2,162.7,1,55,0)
DATE COVA APPEAL DISPOSITIONED
"BLD",9502,4,162.7,2,162.793,0)
DATA AUDIT  (sub-file)
"BLD",9502,4,162.7,2,162.793,1,0)
^9.6411^^
"BLD",9502,4,162.7,222)
y^y^p^^^^n^^n
"BLD",9502,4,162.7,224)

"BLD",9502,4,"APDD",161,161.01)

"BLD",9502,4,"APDD",161,161.01,.01)

"BLD",9502,4,"APDD",161,161.01,.02)

"BLD",9502,4,"APDD",161,161.01,.06)

"BLD",9502,4,"APDD",161,161.01,.07)

"BLD",9502,4,"APDD",161,161.01,.095)

"BLD",9502,4,"APDD",161,161.193)

"BLD",9502,4,"APDD",162.7,162.7)

"BLD",9502,4,"APDD",162.7,162.7,.01)

"BLD",9502,4,"APDD",162.7,162.7,7)

"BLD",9502,4,"APDD",162.7,162.7,10)

"BLD",9502,4,"APDD",162.7,162.7,11)

"BLD",9502,4,"APDD",162.7,162.7,19.5)

"BLD",9502,4,"APDD",162.7,162.7,19.6)

"BLD",9502,4,"APDD",162.7,162.7,21)

"BLD",9502,4,"APDD",162.7,162.7,24)

"BLD",9502,4,"APDD",162.7,162.7,50)

"BLD",9502,4,"APDD",162.7,162.7,51)

"BLD",9502,4,"APDD",162.7,162.7,52)

"BLD",9502,4,"APDD",162.7,162.7,53)

"BLD",9502,4,"APDD",162.7,162.7,54)

"BLD",9502,4,"APDD",162.7,162.7,55)

"BLD",9502,4,"APDD",162.7,162.793)

"BLD",9502,4,"B",161,161)

"BLD",9502,4,"B",162.7,162.7)

"BLD",9502,6.3)
14
"BLD",9502,"INID")
^n
"BLD",9502,"INIT")
PS^FBXIP151
"BLD",9502,"KRN",0)
^9.67PA^779.2^20
"BLD",9502,"KRN",.4,0)
.4
"BLD",9502,"KRN",.401,0)
.401
"BLD",9502,"KRN",.402,0)
.402
"BLD",9502,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",9502,"KRN",.403,0)
.403
"BLD",9502,"KRN",.5,0)
.5
"BLD",9502,"KRN",.84,0)
.84
"BLD",9502,"KRN",3.6,0)
3.6
"BLD",9502,"KRN",3.8,0)
3.8
"BLD",9502,"KRN",9.2,0)
9.2
"BLD",9502,"KRN",9.8,0)
9.8
"BLD",9502,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",9502,"KRN",9.8,"NM",1,0)
FBAAAUD^^0^B5207373
"BLD",9502,"KRN",9.8,"NM",2,0)
FBAAAUDR^^0^B6423644
"BLD",9502,"KRN",9.8,"NM",3,0)
FBUCAUD^^0^B6338424
"BLD",9502,"KRN",9.8,"NM",4,0)
FBUCDIS^^0^B20964227
"BLD",9502,"KRN",9.8,"NM",5,0)
FBXIP151^^0^B1135179
"BLD",9502,"KRN",9.8,"NM",6,0)
FBSHAUT^^0^B76425162
"BLD",9502,"KRN",9.8,"NM","B","FBAAAUD",1)

"BLD",9502,"KRN",9.8,"NM","B","FBAAAUDR",2)

"BLD",9502,"KRN",9.8,"NM","B","FBSHAUT",6)

"BLD",9502,"KRN",9.8,"NM","B","FBUCAUD",3)

"BLD",9502,"KRN",9.8,"NM","B","FBUCDIS",4)

"BLD",9502,"KRN",9.8,"NM","B","FBXIP151",5)

"BLD",9502,"KRN",19,0)
19
"BLD",9502,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",9502,"KRN",19,"NM",1,0)
FBAA AUTH DATA AUDIT RPT^^0
"BLD",9502,"KRN",19,"NM",2,0)
FBAA OUTPUTS MENU^^2
"BLD",9502,"KRN",19,"NM","B","FBAA AUTH DATA AUDIT RPT",1)

"BLD",9502,"KRN",19,"NM","B","FBAA OUTPUTS MENU",2)

"BLD",9502,"KRN",19.1,0)
19.1
"BLD",9502,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",9502,"KRN",101,0)
101
"BLD",9502,"KRN",409.61,0)
409.61
"BLD",9502,"KRN",771,0)
771
"BLD",9502,"KRN",779.2,0)
779.2
"BLD",9502,"KRN",870,0)
870
"BLD",9502,"KRN",8989.51,0)
8989.51
"BLD",9502,"KRN",8989.52,0)
8989.52
"BLD",9502,"KRN",8994,0)
8994
"BLD",9502,"KRN","B",.4,.4)

"BLD",9502,"KRN","B",.401,.401)

"BLD",9502,"KRN","B",.402,.402)

"BLD",9502,"KRN","B",.403,.403)

"BLD",9502,"KRN","B",.5,.5)

"BLD",9502,"KRN","B",.84,.84)

"BLD",9502,"KRN","B",3.6,3.6)

"BLD",9502,"KRN","B",3.8,3.8)

"BLD",9502,"KRN","B",9.2,9.2)

"BLD",9502,"KRN","B",9.8,9.8)

"BLD",9502,"KRN","B",19,19)

"BLD",9502,"KRN","B",19.1,19.1)

"BLD",9502,"KRN","B",101,101)

"BLD",9502,"KRN","B",409.61,409.61)

"BLD",9502,"KRN","B",771,771)

"BLD",9502,"KRN","B",779.2,779.2)

"BLD",9502,"KRN","B",870,870)

"BLD",9502,"KRN","B",8989.51,8989.51)

"BLD",9502,"KRN","B",8989.52,8989.52)

"BLD",9502,"KRN","B",8994,8994)

"BLD",9502,"QUES",0)
^9.62^^
"BLD",9502,"REQB",0)
^9.611^^
"FIA",161)
FEE BASIS PATIENT
"FIA",161,0)
^FBAAA(
"FIA",161,0,0)
161P
"FIA",161,0,1)
y^y^p^^^^n^^n
"FIA",161,0,10)

"FIA",161,0,11)

"FIA",161,0,"RLRO")

"FIA",161,0,"VR")
3.5^FB
"FIA",161,161)
1
"FIA",161,161,1)

"FIA",161,161.01)
1
"FIA",161,161.01,.01)

"FIA",161,161.01,.02)

"FIA",161,161.01,.06)

"FIA",161,161.01,.07)

"FIA",161,161.01,.095)

"FIA",161,161.01,293)

"FIA",161,161.193)
0
"FIA",162.7)
FEE BASIS UNAUTHORIZED CLAIMS
"FIA",162.7,0)
^FB583(
"FIA",162.7,0,0)
162.7ID
"FIA",162.7,0,1)
y^y^p^^^^n^^n
"FIA",162.7,0,10)

"FIA",162.7,0,11)

"FIA",162.7,0,"RLRO")

"FIA",162.7,0,"VR")
3.5^FB
"FIA",162.7,162.7)
1
"FIA",162.7,162.7,.01)

"FIA",162.7,162.7,7)

"FIA",162.7,162.7,10)

"FIA",162.7,162.7,11)

"FIA",162.7,162.7,19.5)

"FIA",162.7,162.7,19.6)

"FIA",162.7,162.7,21)

"FIA",162.7,162.7,24)

"FIA",162.7,162.7,50)

"FIA",162.7,162.7,51)

"FIA",162.7,162.7,52)

"FIA",162.7,162.7,53)

"FIA",162.7,162.7,54)

"FIA",162.7,162.7,55)

"FIA",162.7,162.7,293)

"FIA",162.7,162.793)
0
"INIT")
PS^FBXIP151
"IX",161,161.01,"AUD",0)
161.01^AUD^This index populates the DATA AUDIT multiple.^MU^^R^^I^161.01^^^^^A
"IX",161,161.01,"AUD",.1,0)
^^3^3^3140203^
"IX",161,161.01,"AUD",.1,1,0)
This cross reference audits selected fields.  The DATA AUDIT multiple is
"IX",161,161.01,"AUD",.1,2,0)
populated by this cross reference.  Routine FBAAAUD must be updated if 
"IX",161,161.01,"AUD",.1,3,0)
the list of fields in this cross-reference is modified.
"IX",161,161.01,"AUD",1)
D AUD^FBAAAUD(1)
"IX",161,161.01,"AUD",2)
D AUD^FBAAAUD(0)
"IX",161,161.01,"AUD",11.1,0)
^.114IA^5^5
"IX",161,161.01,"AUD",11.1,1,0)
1^F^161.01^.01^^^F
"IX",161,161.01,"AUD",11.1,2,0)
2^F^161.01^.02^^^F
"IX",161,161.01,"AUD",11.1,3,0)
3^F^161.01^.06^^^F
"IX",161,161.01,"AUD",11.1,4,0)
4^F^161.01^.07^^^F
"IX",161,161.01,"AUD",11.1,5,0)
5^F^161.01^.095^^^F
"IX",162.7,162.7,"AILT",0)
162.7^AILT^Trigger letter date for request information letter.^MU^^F^^I^162.7^^^^^A
"IX",162.7,162.7,"AILT",.1,0)
^^6^6^3140224^
"IX",162.7,162.7,"AILT",.1,1,0)
This cross-reference copies the new value of the DATE LETTER SENT field to
"IX",162.7,162.7,"AILT",.1,2,0)
the DATE REQ INFO SENT field when the status of the claim is INCOMPLETE
"IX",162.7,162.7,"AILT",.1,3,0)
UNAUTHORIZED CLAIM.  The DATE LETTER SENT field contains the date for both
"IX",162.7,162.7,"AILT",.1,4,0)
the request for information letter and the disposition letter.  This
"IX",162.7,162.7,"AILT",.1,5,0)
trigger populates the DATE REQ INFO SENT field so the date of the request
"IX",162.7,162.7,"AILT",.1,6,0)
for information letter is retained.
"IX",162.7,162.7,"AILT",1)
D LTRDT^FBUCAUD(1)
"IX",162.7,162.7,"AILT",1.4)
S X=$S(X1(1)=X2(1):0,1:1)
"IX",162.7,162.7,"AILT",2)
D LTRDT^FBUCAUD(0)
"IX",162.7,162.7,"AILT",2.4)
S X=$S(X1(1)=X2(1):0,1:1)
"IX",162.7,162.7,"AILT",11.1,0)
^.114IA^1^1
"IX",162.7,162.7,"AILT",11.1,1,0)
1^F^162.7^19.5^^^F
"IX",162.7,162.7,"AUD",0)
162.7^AUD^This index populates the DATA AUDIT multiple.^MU^^R^^I^162.7^^^^^A
"IX",162.7,162.7,"AUD",.1,0)
^^3^3^3140224^^
"IX",162.7,162.7,"AUD",.1,1,0)
This cross reference audits selected fields. The DATA AUDIT multiple is
"IX",162.7,162.7,"AUD",.1,2,0)
populated by this cross reference. Routine FBUCAUD must be updated if the
"IX",162.7,162.7,"AUD",.1,3,0)
list of fields in this cross-reference is modified.
"IX",162.7,162.7,"AUD",1)
D AUD^FBUCAUD(1)
"IX",162.7,162.7,"AUD",2)
D AUD^FBUCAUD(0)
"IX",162.7,162.7,"AUD",11.1,0)
^.114IA^13^13
"IX",162.7,162.7,"AUD",11.1,1,0)
1^F^162.7^24^^^F
"IX",162.7,162.7,"AUD",11.1,2,0)
2^F^162.7^10^^^F
"IX",162.7,162.7,"AUD",11.1,3,0)
3^F^162.7^.01^^^F
"IX",162.7,162.7,"AUD",11.1,4,0)
4^F^162.7^19.6^^^F
"IX",162.7,162.7,"AUD",11.1,5,0)
5^F^162.7^7^^^F
"IX",162.7,162.7,"AUD",11.1,6,0)
6^F^162.7^11^^^F
"IX",162.7,162.7,"AUD",11.1,7,0)
7^F^162.7^21^^^F
"IX",162.7,162.7,"AUD",11.1,8,0)
8^F^162.7^50^^^F
"IX",162.7,162.7,"AUD",11.1,9,0)
9^F^162.7^51^^^F
"IX",162.7,162.7,"AUD",11.1,10,0)
10^F^162.7^52^^^F
"IX",162.7,162.7,"AUD",11.1,11,0)
11^F^162.7^53^^^F
"IX",162.7,162.7,"AUD",11.1,12,0)
12^F^162.7^54^^^F
"IX",162.7,162.7,"AUD",11.1,13,0)
13^F^162.7^55^^^F
"KRN",19,624,-1)
2^2
"KRN",19,624,0)
FBAA OUTPUTS MENU^Outputs Main Menu^^M^.5^^^^^^^
"KRN",19,624,10,0)
^19.01IP^24^24
"KRN",19,624,10,24,0)
13958
"KRN",19,624,10,24,"^")
FBAA AUTH DATA AUDIT RPT
"KRN",19,624,"U")
OUTPUTS MAIN MENU
"KRN",19,13958,-1)
0^1
"KRN",19,13958,0)
FBAA AUTH DATA AUDIT RPT^Historical Authorization Data Report^^R^^^^^^^^FEE BASIS
"KRN",19,13958,1,0)
^^1^1^3140220^
"KRN",19,13958,1,1,0)
This option displays historical data for an authorization.
"KRN",19,13958,25)
FBAAAUDR
"KRN",19,13958,"U")
HISTORICAL AUTHORIZATION DATA 
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",60,20,0)
^9.402P^2^1
"PKG",60,20,2,0)
2^^FBPMRG
"PKG",60,20,"B",2,2)

"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5^2950130^2950313
"PKG",60,22,1,"PAH",1,0)
151^3140519
"PKG",60,22,1,"PAH",1,1,0)
^^5^5^3140519
"PKG",60,22,1,"PAH",1,1,1,0)
This patch is the first of two patches that enhance the Fee Basis package
"PKG",60,22,1,"PAH",1,1,2,0)
per the requirements of the VistA Fee Separation of Duties project.  This
"PKG",60,22,1,"PAH",1,1,3,0)
patch makes the following changes to Fee Basis:
"PKG",60,22,1,"PAH",1,1,4,0)
 o Retain historical data for unauthorized claims
"PKG",60,22,1,"PAH",1,1,5,0)
 o Retain historical data for authorizations
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","FBAAAUD")
0^1^B5207373^n/a
"RTN","FBAAAUD",1,0)
FBAAAUD ;WCIOFO/SAB - FEE BASIS FILE 161.01 DATA AUDIT ;3/26/2014
"RTN","FBAAAUD",2,0)
 ;;3.5;FEE BASIS;**151**;JAN 30, 1995;Build 14
"RTN","FBAAAUD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAAUD",4,0)
 Q
"RTN","FBAAAUD",5,0)
 ;
"RTN","FBAAAUD",6,0)
AUD(FBSET) ; audit of selected fields in sub-file 161.01
"RTN","FBAAAUD",7,0)
 ; called by set and kill logic of AUD mumps x-ref on sub-file 161.01
"RTN","FBAAAUD",8,0)
 ; input
"RTN","FBAAAUD",9,0)
 ;   FBSET = 0 or 1, =true if set logic and =false if kill logic
"RTN","FBAAAUD",10,0)
 ;   also variables from FileMan x-ref
"RTN","FBAAAUD",11,0)
 ;     DA(1) = IEN of record in file 161
"RTN","FBAAAUD",12,0)
 ;     DA = IEN of record in sub-file 161.01
"RTN","FBAAAUD",13,0)
 ;     X1(#) = old values of cross-referenced fields
"RTN","FBAAAUD",14,0)
 ;     X2(#) = new values of cross-referenced fields
"RTN","FBAAAUD",15,0)
 N FBDT,FBI,FBFDA,FBFIELDL
"RTN","FBAAAUD",16,0)
 ; list of cross-referenced fields in order number
"RTN","FBAAAUD",17,0)
 S FBFIELDL=".01^.02^.06^.07^.095"
"RTN","FBAAAUD",18,0)
 S FBDT=$$NOW^XLFDT()
"RTN","FBAAAUD",19,0)
 ;
"RTN","FBAAAUD",20,0)
 ; if kill logic and new value of .01 field null then record was deleted
"RTN","FBAAAUD",21,0)
 ;   and no need to proceed since audit multiple is stored in record
"RTN","FBAAAUD",22,0)
 I 'FBSET,X2(1)="" Q
"RTN","FBAAAUD",23,0)
 ;
"RTN","FBAAAUD",24,0)
 ; if old and new field values are different then save change in audit
"RTN","FBAAAUD",25,0)
 ; loop thru audited fields
"RTN","FBAAAUD",26,0)
 F FBI=1:1:5 D
"RTN","FBAAAUD",27,0)
 . ; if kill logic and value was deleted then save audit
"RTN","FBAAAUD",28,0)
 . I 'FBSET,X1(FBI)'=X2(FBI),X2(FBI)="" D SAVE
"RTN","FBAAAUD",29,0)
 . ; if set logic and value was entered or changed then save audit
"RTN","FBAAAUD",30,0)
 . I FBSET,X1(FBI)'=X2(FBI),X2(FBI)'="" D SAVE
"RTN","FBAAAUD",31,0)
 Q
"RTN","FBAAAUD",32,0)
 ;
"RTN","FBAAAUD",33,0)
SAVE ;
"RTN","FBAAAUD",34,0)
 N FBFDA,FBIENS
"RTN","FBAAAUD",35,0)
 S FBIENS="+1,"_DA_","_DA(1)_","
"RTN","FBAAAUD",36,0)
 S FBFDA(161.193,FBIENS,.01)=FBDT ; CHANGED DATE/TIME
"RTN","FBAAAUD",37,0)
 S FBFDA(161.193,FBIENS,1)=$P(FBFIELDL,"^",FBI) ; FIELD
"RTN","FBAAAUD",38,0)
 S FBFDA(161.193,FBIENS,2)=X1(FBI) ; OLD VALUE
"RTN","FBAAAUD",39,0)
 S FBFDA(161.193,FBIENS,3)=X2(FBI) ; NEW VALUE
"RTN","FBAAAUD",40,0)
 S FBFDA(161.193,FBIENS,4)=DUZ ; CHANGED BY
"RTN","FBAAAUD",41,0)
 D UPDATE^DIE("","FBFDA")
"RTN","FBAAAUD",42,0)
 Q
"RTN","FBAAAUD",43,0)
 ;
"RTN","FBAAAUD",44,0)
OUTX ; output transform
"RTN","FBAAAUD",45,0)
 ; called by OLD VALUE and NEW VALUE fields in the DATA AUDIT multiple
"RTN","FBAAAUD",46,0)
 ; in the AUTHORIZATION multiple of the FEE BASIS PATIENT (#161) file.
"RTN","FBAAAUD",47,0)
 ; input
"RTN","FBAAAUD",48,0)
 ;   Y   = value to transform
"RTN","FBAAAUD",49,0)
 ;   D0  = required internal entry number, top level
"RTN","FBAAAUD",50,0)
 ;   D1  = optional internal entry number, one level below
"RTN","FBAAAUD",51,0)
 ;   D2  = optional internal entry number, two levels below
"RTN","FBAAAUD",52,0)
 ;   DIC = optional file/sub-file root
"RTN","FBAAAUD",53,0)
 ; output
"RTN","FBAAAUD",54,0)
 ;   Y   = external value for Y when available, else the input value
"RTN","FBAAAUD",55,0)
 ;
"RTN","FBAAAUD",56,0)
 Q:'$G(D0)  ; must have at least one IEN
"RTN","FBAAAUD",57,0)
 Q:$G(Y)=""  ; must have internal value to transform
"RTN","FBAAAUD",58,0)
 ;
"RTN","FBAAAUD",59,0)
 N FBFLD,FBNODE,FBY
"RTN","FBAAAUD",60,0)
 ;
"RTN","FBAAAUD",61,0)
 ; determine 0-node of entry in DATA AUDIT
"RTN","FBAAAUD",62,0)
 S FBNODE=""
"RTN","FBAAAUD",63,0)
 I $G(D2),$G(D1) S FBNODE="^FBAAA("_D0_",1,"_D1_",""LOG2"","_D2_",0)"
"RTN","FBAAAUD",64,0)
 I '$G(D2),$G(D1),$E($G(DIC))="^" S FBNODE=DIC_D0_",""LOG2"","_D1_",0)"
"RTN","FBAAAUD",65,0)
 I '$G(D2),'$G(D1),$E($G(DIC))="^" S FBNODE=DIC_D0_",0)"
"RTN","FBAAAUD",66,0)
 Q:FBNODE=""
"RTN","FBAAAUD",67,0)
 ;
"RTN","FBAAAUD",68,0)
 ; obtain value of FIELD
"RTN","FBAAAUD",69,0)
 S FBFLD=$P($G(@FBNODE),"^",2)
"RTN","FBAAAUD",70,0)
 Q:FBFLD=""
"RTN","FBAAAUD",71,0)
 ;
"RTN","FBAAAUD",72,0)
 ; obtain external value of Y for the field
"RTN","FBAAAUD",73,0)
 S FBY=$$EXTERNAL^DILFD(161.01,FBFLD,"",Y)
"RTN","FBAAAUD",74,0)
 S:FBY]"" Y=FBY ; return external value in Y
"RTN","FBAAAUD",75,0)
 Q
"RTN","FBAAAUD",76,0)
 ;
"RTN","FBAAAUD",77,0)
 ;FBAAAUD
"RTN","FBAAAUDR")
0^2^B6423644^n/a
"RTN","FBAAAUDR",1,0)
FBAAAUDR ;WIOFO/SAB - AUTHORIZATION DATA AUDIT REPORT ;3/27/2014
"RTN","FBAAAUDR",2,0)
 ;;3.5;FEE BASIS;**151**;JAN 30, 1995;Build 14
"RTN","FBAAAUDR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAAUDR",4,0)
 ;
"RTN","FBAAAUDR",5,0)
 ; IAs
"RTN","FBAAAUDR",6,0)
 ;  #10003  DD^%DT
"RTN","FBAAAUDR",7,0)
 ;  #10000  NOW^%DTC
"RTN","FBAAAUDR",8,0)
 ;  #10086  %ZIS, HOME^%ZIS
"RTN","FBAAAUDR",9,0)
 ;  #10089  %ZISC
"RTN","FBAAAUDR",10,0)
 ;  #10063  %ZTLOAD
"RTN","FBAAAUDR",11,0)
 ;  #2056   $$GET1^DIQ
"RTN","FBAAAUDR",12,0)
 ;  #10004  EN^DIQ
"RTN","FBAAAUDR",13,0)
 ;  #10026  DIR
"RTN","FBAAAUDR",14,0)
 ;
"RTN","FBAAAUDR",15,0)
 N DFN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FTP,%ZIS,POP,X,Y
"RTN","FBAAAUDR",16,0)
 ;
"RTN","FBAAAUDR",17,0)
 ; ask patient
"RTN","FBAAAUDR",18,0)
 S DFN=$$ASKVET^FBAAUTL1()
"RTN","FBAAAUDR",19,0)
 G:'DFN EXIT
"RTN","FBAAAUDR",20,0)
 ;
"RTN","FBAAAUDR",21,0)
 ; ask authorization
"RTN","FBAAAUDR",22,0)
 D GETAUTH^FBAAUTL1
"RTN","FBAAAUDR",23,0)
 G:$G(FTP)="" EXIT
"RTN","FBAAAUDR",24,0)
 ;
"RTN","FBAAAUDR",25,0)
 ; ask device
"RTN","FBAAAUDR",26,0)
 S %ZIS="Q" D ^%ZIS G:POP EXIT
"RTN","FBAAAUDR",27,0)
 I $D(IO("Q")) D  G EXIT
"RTN","FBAAAUDR",28,0)
 . N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","FBAAAUDR",29,0)
 . S ZTRTN="QEN^FBAAAUDR",ZTDESC="Historical Authorization Data Report"
"RTN","FBAAAUDR",30,0)
 . F FBX="DFN","FTP" S ZTSAVE(FBX)=""
"RTN","FBAAAUDR",31,0)
 . D ^%ZTLOAD,HOME^%ZIS
"RTN","FBAAAUDR",32,0)
 ;
"RTN","FBAAAUDR",33,0)
QEN ; queued entry point
"RTN","FBAAAUDR",34,0)
 N %
"RTN","FBAAAUDR",35,0)
 ;
"RTN","FBAAAUDR",36,0)
 U IO
"RTN","FBAAAUDR",37,0)
 ;
"RTN","FBAAAUDR",38,0)
 S FBQUIT=0
"RTN","FBAAAUDR",39,0)
 D NOW^%DTC S Y=% D DD^%DT S FBDTR=Y
"RTN","FBAAAUDR",40,0)
 ;
"RTN","FBAAAUDR",41,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","FBAAAUDR",42,0)
 W !,"Historical Authorization Data Report",?49,FBDTR
"RTN","FBAAAUDR",43,0)
 ;
"RTN","FBAAAUDR",44,0)
 ; display patient
"RTN","FBAAAUDR",45,0)
 W !,"Patient: ",$$GET1^DIQ(161,DFN_",",.01)
"RTN","FBAAAUDR",46,0)
 W "   Pt.ID: ",$$SSN^FBAAUTL(DFN),!
"RTN","FBAAAUDR",47,0)
 ;
"RTN","FBAAAUDR",48,0)
 ; display current authorization data
"RTN","FBAAAUDR",49,0)
 W !,"Current Authorization Data: "
"RTN","FBAAAUDR",50,0)
 S DIC="^FBAAA("_DFN_",1,",DA(1)=DFN,DA=FTP,DR="0:LOG"
"RTN","FBAAAUDR",51,0)
 D EN^DIQ
"RTN","FBAAAUDR",52,0)
 ;
"RTN","FBAAAUDR",53,0)
 I $E(IOST,1,2)="C-",IOSL<($Y+18) S DIR(0)="E" D ^DIR K DIR I 'Y S FBQUIT=1
"RTN","FBAAAUDR",54,0)
 ;
"RTN","FBAAAUDR",55,0)
 ; display historical data
"RTN","FBAAAUDR",56,0)
 I 'FBQUIT D
"RTN","FBAAAUDR",57,0)
 . W !,"Historical Audit Data (since patch FB*3.5*151): "
"RTN","FBAAAUDR",58,0)
 . W:'$O(^FBAAA(DA(1),1,DA,"LOG2",0)) !,"  No historical audit data on file."
"RTN","FBAAAUDR",59,0)
 . S DIC="^FBAAA("_DFN_",1,",DA(1)=DFN,DA=FTP,DR="LOG2"
"RTN","FBAAAUDR",60,0)
 . D EN^DIQ
"RTN","FBAAAUDR",61,0)
 . I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S FBQUIT=1
"RTN","FBAAAUDR",62,0)
 ;
"RTN","FBAAAUDR",63,0)
 ; close device
"RTN","FBAAAUDR",64,0)
 D ^%ZISC
"RTN","FBAAAUDR",65,0)
 ;
"RTN","FBAAAUDR",66,0)
EXIT ; exit
"RTN","FBAAAUDR",67,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","FBAAAUDR",68,0)
 K DA,DIC,DIR,DR,DIROUT,DTOUT,DUOUT,X,Y
"RTN","FBAAAUDR",69,0)
 K FB583,FB7078,FBAABDT,FBAAEDT,FBASSOC,FBDMRA,FBDTR,FBPOV,FBPROG,FBPSA
"RTN","FBAAAUDR",70,0)
 K FBPT,FBQUIT,FBTT,FBTYPE,FBVEN,FBX,FTP,TA
"RTN","FBAAAUDR",71,0)
 D GETAUTHK^FBAAUTL1
"RTN","FBAAAUDR",72,0)
 K FBAAOUT,FBAUD,CNT,DFN,PI
"RTN","FBAAAUDR",73,0)
 Q
"RTN","FBAAAUDR",74,0)
 ;
"RTN","FBAAAUDR",75,0)
 ;FBAAAUDR
"RTN","FBSHAUT")
0^6^B76425162^B73848186
"RTN","FBSHAUT",1,0)
FBSHAUT ;WCIOFO/SAB - ENTER/EDIT STATE HOME AUTHORIZATION ;5/19/2014
"RTN","FBSHAUT",2,0)
 ;;3.5;FEE BASIS;**13,108,151**;JAN 30, 1995;Build 14
"RTN","FBSHAUT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBSHAUT",4,0)
 ;
"RTN","FBSHAUT",5,0)
ADD ; Enter new authorization
"RTN","FBSHAUT",6,0)
 ; Called from option FBSH ENTER AUTH
"RTN","FBSHAUT",7,0)
 D SETUP
"RTN","FBSHAUT",8,0)
 I 'FBPOP F  D  Q:'$G(DFN)
"RTN","FBSHAUT",9,0)
 . ; select patient
"RTN","FBSHAUT",10,0)
 . D PAT Q:'$G(DFN)
"RTN","FBSHAUT",11,0)
 . ; show patient demographics
"RTN","FBSHAUT",12,0)
 . S FBPROG(0)=FBPROG
"RTN","FBSHAUT",13,0)
 . S FBPROG="I $P(^(0),U,3)=FBPROG(0)"
"RTN","FBSHAUT",14,0)
 . D ^FBAADEM
"RTN","FBSHAUT",15,0)
 . S FBPROG=FBPROG(0)
"RTN","FBSHAUT",16,0)
 . ; get dates
"RTN","FBSHAUT",17,0)
 . D BDATES
"RTN","FBSHAUT",18,0)
 . ; get POV
"RTN","FBSHAUT",19,0)
 . D POV
"RTN","FBSHAUT",20,0)
 . I FBBEGDT]"",FBPOV D
"RTN","FBSHAUT",21,0)
 . . ; add/edit authorization
"RTN","FBSHAUT",22,0)
 . . S DA(1)=DFN,X=FBBEGDT
"RTN","FBSHAUT",23,0)
 . . S DIC="^FBAAA("_DA(1)_",1,",DIC(0)="LQ",DLAYGO=161
"RTN","FBSHAUT",24,0)
 . . S DIC("P")=$P(^DD(161,1,0),U,2)
"RTN","FBSHAUT",25,0)
 . . K DD,DO D FILE^DICN K DIC,DLAYGO
"RTN","FBSHAUT",26,0)
 . . I Y'>0 W $C(7),!,"AUTH. NOT ADDED" Q
"RTN","FBSHAUT",27,0)
 . . S (DA,FBAAADA)=+Y
"RTN","FBSHAUT",28,0)
 . . ; stuff required fields and edit remaining fields
"RTN","FBSHAUT",29,0)
 . . S DIE="^FBAAA("_DA(1)_",1,"
"RTN","FBSHAUT",30,0)
 . . S DR=".02////^S X=FBENDDT;.03////^S X=FBPROG;.07////^S X=FBPOV;.095////^S X=4;100////^S X=DUZ;.04;.021"
"RTN","FBSHAUT",31,0)
 . . D ^DIE K DIE
"RTN","FBSHAUT",32,0)
 . . ; queue MRA
"RTN","FBSHAUT",33,0)
 . . S FBX=$$QMRA(DFN,FBAAADA,"A")
"RTN","FBSHAUT",34,0)
 . ;
"RTN","FBSHAUT",35,0)
 . ; unlock patient
"RTN","FBSHAUT",36,0)
 . L -^FBAAA(DFN,FBPROG)
"RTN","FBSHAUT",37,0)
 D WRAPUP
"RTN","FBSHAUT",38,0)
 Q
"RTN","FBSHAUT",39,0)
 ;
"RTN","FBSHAUT",40,0)
CHANGE ; Change existing authorization
"RTN","FBSHAUT",41,0)
 ; Called from option FBSH CHANGE AUTH
"RTN","FBSHAUT",42,0)
 D SETUP
"RTN","FBSHAUT",43,0)
 I 'FBPOP F  D  Q:'$G(DFN)
"RTN","FBSHAUT",44,0)
 . ; select patient
"RTN","FBSHAUT",45,0)
 . D PAT Q:'$G(DFN)
"RTN","FBSHAUT",46,0)
 . ; select existing authorization
"RTN","FBSHAUT",47,0)
 . S FBPROG(0)=FBPROG
"RTN","FBSHAUT",48,0)
 . S FBPROG="I $P(^(0),U,3)=FBPROG(0)"
"RTN","FBSHAUT",49,0)
 . D GETAUTH^FBAAUTL1 S FBPROG=FBPROG(0)
"RTN","FBSHAUT",50,0)
 . I FTP'="" D
"RTN","FBSHAUT",51,0)
 . . S (DA,FBAAADA)=FTP,DA(1)=DFN
"RTN","FBSHAUT",52,0)
 . . I $P($G(FBDMRA),U) W $C(7),!,"AUTH IS AUSTIN DELETED. USE THE REINSTATE OPTION TO CHANGE IT." Q
"RTN","FBSHAUT",53,0)
 . . ; save current data
"RTN","FBSHAUT",54,0)
 . . S FBAOLD=$G(^FBAAA(DA(1),1,DA,0)),FBANEW=""
"RTN","FBSHAUT",55,0)
 . . S FBBEGDT=$P(FBAOLD,U),FBENDDT=$P(FBAOLD,U,2)
"RTN","FBSHAUT",56,0)
 . . ; display current data
"RTN","FBSHAUT",57,0)
 . . W !!,"FROM DATE: ",$$FMTE^XLFDT(FBBEGDT)," (No Editing)"
"RTN","FBSHAUT",58,0)
 . . ; edit TO DATE and check for conflicts
"RTN","FBSHAUT",59,0)
 . . D TDATE Q:FBENDDT=""
"RTN","FBSHAUT",60,0)
 . . ; update/edit fields
"RTN","FBSHAUT",61,0)
 . . S DIE="^FBAAA("_DA(1)_",1,"
"RTN","FBSHAUT",62,0)
 . . S DR=".02////^S X=FBENDDT;100////^S X=DUZ;S FBTYPE=FBPROG;.07;.04;.021"
"RTN","FBSHAUT",63,0)
 . . D ^DIE K DIE
"RTN","FBSHAUT",64,0)
 . . ; if TO DATE or PURPOSE OF VISIT changed then queue MRA
"RTN","FBSHAUT",65,0)
 . . S FBANEW=$G(^FBAAA(DA(1),1,DA,0))
"RTN","FBSHAUT",66,0)
 . . I $P(FBANEW,U,2)'=$P(FBAOLD,U,2)!($P(FBANEW,U,7)'=$P(FBAOLD,U,7)) D
"RTN","FBSHAUT",67,0)
 . . . ; queue MRA
"RTN","FBSHAUT",68,0)
 . . . S FBX=$$QMRA(DFN,FBAAADA,"C")
"RTN","FBSHAUT",69,0)
 . ;
"RTN","FBSHAUT",70,0)
 . ; unlock patient
"RTN","FBSHAUT",71,0)
 . L -^FBAAA(DFN,FBPROG)
"RTN","FBSHAUT",72,0)
 D WRAPUP
"RTN","FBSHAUT",73,0)
 Q
"RTN","FBSHAUT",74,0)
 ;
"RTN","FBSHAUT",75,0)
DELETE ; Delete existing authorization
"RTN","FBSHAUT",76,0)
 ; Called from option FBSH DELETE AUTH
"RTN","FBSHAUT",77,0)
 D SETUP
"RTN","FBSHAUT",78,0)
 I 'FBPOP F  D  Q:'$G(DFN)
"RTN","FBSHAUT",79,0)
 . ; select patient
"RTN","FBSHAUT",80,0)
 . D PAT Q:'$G(DFN)
"RTN","FBSHAUT",81,0)
 . ; select existing authorization
"RTN","FBSHAUT",82,0)
 . S FBPROG(0)=FBPROG
"RTN","FBSHAUT",83,0)
 . S FBPROG="I $P(^(0),U,3)=FBPROG(0)"
"RTN","FBSHAUT",84,0)
 . D GETAUTH^FBAAUTL1 S FBPROG=FBPROG(0)
"RTN","FBSHAUT",85,0)
 . I FTP'="" D
"RTN","FBSHAUT",86,0)
 . . N FBY
"RTN","FBSHAUT",87,0)
 . . S (DA,FBAAADA)=FTP,DA(1)=DFN
"RTN","FBSHAUT",88,0)
 . . ; confirm
"RTN","FBSHAUT",89,0)
 . . S FBY=$G(^FBAAA(DFN,1,FTP,0))
"RTN","FBSHAUT",90,0)
 . . S DIR(0)="Y",DIR("A")="OK to DELETE the "_$$FMTE^XLFDT($P(FBY,U),2)_"-"_$$FMTE^XLFDT($P(FBY,U,2),2)_" authorization"
"RTN","FBSHAUT",91,0)
 . . D ^DIR K DIR Q:'Y
"RTN","FBSHAUT",92,0)
 . . ; queue MRA, update ADEL node
"RTN","FBSHAUT",93,0)
 . . S FBX=$$QMRA(DFN,FBAAADA,"D")
"RTN","FBSHAUT",94,0)
 . . S $P(^FBAAA(DFN,1,FBAAADA,"ADEL"),U,1,2)="1^"_DT
"RTN","FBSHAUT",95,0)
 . ;
"RTN","FBSHAUT",96,0)
 . ; unlock patient
"RTN","FBSHAUT",97,0)
 . L -^FBAAA(DFN,FBPROG)
"RTN","FBSHAUT",98,0)
 D WRAPUP
"RTN","FBSHAUT",99,0)
 Q
"RTN","FBSHAUT",100,0)
 ;
"RTN","FBSHAUT",101,0)
REINSTA ; Reinstate deleted authorization
"RTN","FBSHAUT",102,0)
 ; Called from option FBSH REINSTATE AUTH
"RTN","FBSHAUT",103,0)
 D SETUP
"RTN","FBSHAUT",104,0)
 I 'FBPOP F  D  Q:'$G(DFN)
"RTN","FBSHAUT",105,0)
 . ; select patient
"RTN","FBSHAUT",106,0)
 . D PAT Q:'$G(DFN)
"RTN","FBSHAUT",107,0)
 . ; select existing deleted authorization
"RTN","FBSHAUT",108,0)
 . S FBPROG(0)=FBPROG
"RTN","FBSHAUT",109,0)
 . S FBPROG="I $P(^(0),U,3)=FBPROG(0),$P($G(^(""ADEL"")),U)"
"RTN","FBSHAUT",110,0)
 . D GETAUTH^FBAAUTL1 S FBPROG=FBPROG(0)
"RTN","FBSHAUT",111,0)
 . I FTP'="" D
"RTN","FBSHAUT",112,0)
 . . S (DA,FBAAADA)=FTP,DA(1)=DFN
"RTN","FBSHAUT",113,0)
 . . ; confirm
"RTN","FBSHAUT",114,0)
 . . ; save current data
"RTN","FBSHAUT",115,0)
 . . S FBAOLD=$G(^FBAAA(DA(1),1,DA,0)),FBANEW=""
"RTN","FBSHAUT",116,0)
 . . S FBBEGDT=$P(FBAOLD,U),FBENDDT=$P(FBAOLD,U,2)
"RTN","FBSHAUT",117,0)
 . . ; display current data
"RTN","FBSHAUT",118,0)
 . . W !!,"FROM DATE: ",$$FMTE^XLFDT(FBBEGDT)," (No Editing)"
"RTN","FBSHAUT",119,0)
 . . ; edit TO DATE and check for conflicts
"RTN","FBSHAUT",120,0)
 . . D TDATE Q:FBENDDT=""
"RTN","FBSHAUT",121,0)
 . . ; update/edit fields
"RTN","FBSHAUT",122,0)
 . . S DIE="^FBAAA("_DA(1)_",1,"
"RTN","FBSHAUT",123,0)
 . . S DR=".02////^S X=FBENDDT;100////^S X=DUZ;S FBTYPE=FBPROG;.07;.04;.021"
"RTN","FBSHAUT",124,0)
 . . D ^DIE K DIE
"RTN","FBSHAUT",125,0)
 . . ; queue MRA, clear ADEL node
"RTN","FBSHAUT",126,0)
 . . S FBX=$$QMRA(DFN,FBAAADA,"R")
"RTN","FBSHAUT",127,0)
 . . K ^FBAAA(DFN,1,FBAAADA,"ADEL")
"RTN","FBSHAUT",128,0)
 . ;
"RTN","FBSHAUT",129,0)
 . ; unlock patient
"RTN","FBSHAUT",130,0)
 . L -^FBAAA(DFN,FBPROG)
"RTN","FBSHAUT",131,0)
 D WRAPUP
"RTN","FBSHAUT",132,0)
 Q
"RTN","FBSHAUT",133,0)
 ;
"RTN","FBSHAUT",134,0)
SETUP ; initial setup - returns FBPOP = 1 when problem
"RTN","FBSHAUT",135,0)
 D SITEP^FBAAUTL Q:FBPOP
"RTN","FBSHAUT",136,0)
 S FBAADDYS=+$P(FBSITE(0),"^",13),FBAAASKV=$P(FBSITE(1),"^",1)
"RTN","FBSHAUT",137,0)
 ;
"RTN","FBSHAUT",138,0)
 S FBPROG=$O(^FBAA(161.8,"B","STATE HOME",0))
"RTN","FBSHAUT",139,0)
 I 'FBPROG D  Q
"RTN","FBSHAUT",140,0)
 . W $C(7)
"RTN","FBSHAUT",141,0)
 . W !,"ERROR. STATE HOME not found in FEE BASIS PROGRAM (#161.8) file."
"RTN","FBSHAUT",142,0)
 . W !,"Unable to process State Home authorization. Please contact IRM."
"RTN","FBSHAUT",143,0)
 . S FBPOP=1
"RTN","FBSHAUT",144,0)
 Q
"RTN","FBSHAUT",145,0)
 ;
"RTN","FBSHAUT",146,0)
PAT ; select patient
"RTN","FBSHAUT",147,0)
 ; returns DFN as patient ien (or undef if not selected)
"RTN","FBSHAUT",148,0)
 K DFN
"RTN","FBSHAUT",149,0)
 W ! S DIC="^DPT(",DIC(0)="QEAZM" D ^DIC Q:Y'>0  S DFN=+Y
"RTN","FBSHAUT",150,0)
 I $P($G(^DPT(DFN,.361)),"^")="" W !!,"ELIGIBILITY HAS NOT BEEN DETERMINED NOR PENDING, CANNOT ENTER AN AUTHORIZATION." G PAT
"RTN","FBSHAUT",151,0)
 I $P($G(^DPT(DFN,.32)),"^",4)=2 W !!?4,"VETERAN HAS A DISHONORABLE DISCHARGE, " S X=$P($G(^(.321)),"^") W $S(X="Y":"ONLY ELIGIBLE FOR AGENT ORANGE EXAM.",1:"NOT ELIGIBLE FOR BENEFITS.")
"RTN","FBSHAUT",152,0)
 I "N"[$E(X) W ! S DIR("A")="Do you want to continue",DIR(0)="Y",DIR("B")="No" D ^DIR K DIR G PAT:$S($D(DIRUT):1,'Y:1,1:0)
"RTN","FBSHAUT",153,0)
 ; if patient not in file #161 then add
"RTN","FBSHAUT",154,0)
 I '$D(^FBAAA(DFN,0)) D   I Y'>0 W $C(7),!,"ERROR ADDING TO #161" K DFN Q
"RTN","FBSHAUT",155,0)
 . S DA=DFN
"RTN","FBSHAUT",156,0)
 . L +^FBAAA(DA):5 I '$T S Y="" Q
"RTN","FBSHAUT",157,0)
 . K DD,DO S (X,DINUM)=DA
"RTN","FBSHAUT",158,0)
 . S DIC="^FBAAA(",DIC(0)="LM",DLAYGO=161
"RTN","FBSHAUT",159,0)
 . D FILE^DICN K DIC,DINUM
"RTN","FBSHAUT",160,0)
 . L -^FBAAA(DFN)
"RTN","FBSHAUT",161,0)
 ; lock patient/program
"RTN","FBSHAUT",162,0)
 L +^FBAAA(DFN,FBPROG):5 I '$T D  G PAT
"RTN","FBSHAUT",163,0)
 . W $C(7),!,"ANOTHER USER IS EDITING THIS PATIENT & PROGRAM. PLEASE TRY AGAIN LATER."
"RTN","FBSHAUT",164,0)
 Q
"RTN","FBSHAUT",165,0)
 ;
"RTN","FBSHAUT",166,0)
WRAPUP ; clean-up
"RTN","FBSHAUT",167,0)
 K DFN,FB,FBAAADA,FBAAASKV,FBAADDYS,FBANEW,FBAOLD,FBBEGDT
"RTN","FBSHAUT",168,0)
 K FBDMRA,FBENDDT,FBOPT,FBPOP,FBPOV,FBPROG,FBSITE,FTP,FBTYPE,FBX
"RTN","FBSHAUT",169,0)
 K DA,DIC,DIE,DIR,DIROUT,DIRUT,DR,DTOUT,DUOUT,X,Y
"RTN","FBSHAUT",170,0)
 D GETAUTHK^FBAAUTL1
"RTN","FBSHAUT",171,0)
 Q
"RTN","FBSHAUT",172,0)
 ;
"RTN","FBSHAUT",173,0)
BDATES ; get both from and to dates of new authorization
"RTN","FBSHAUT",174,0)
 ; input
"RTN","FBSHAUT",175,0)
 ;   DFN     patient ien in file 161
"RTN","FBSHAUT",176,0)
 ;   FBPROG  program ien in file 
"RTN","FBSHAUT",177,0)
 ; output
"RTN","FBSHAUT",178,0)
 ;   FBBEGDT From Date, FileMan format, null if dates not selected
"RTN","FBSHAUT",179,0)
 ;   FBENDDT To Date, FileMan format, null if dates not selected
"RTN","FBSHAUT",180,0)
 ;
"RTN","FBSHAUT",181,0)
 S %DT("A")="Enter FROM DATE: ",%DT="AEX"
"RTN","FBSHAUT",182,0)
 D ^%DT K %DT I Y'>0 S (FBBEGDT,FBENDDT)="" Q
"RTN","FBSHAUT",183,0)
 S FBBEGDT=Y
"RTN","FBSHAUT",184,0)
 ;
"RTN","FBSHAUT",185,0)
 S %DT("A")="Enter TO DATE: ",%DT="AEX",%DT(0)=FBBEGDT
"RTN","FBSHAUT",186,0)
 D ^%DT K %DT I Y'>0 S (FBBEGDT,FBENDDT)="" Q
"RTN","FBSHAUT",187,0)
 S FBENDDT=Y
"RTN","FBSHAUT",188,0)
 ; ensure dates do not conflict with existing authorization
"RTN","FBSHAUT",189,0)
 S FBX=$$CONFLICT(DFN,FBPROG,FBBEGDT,FBENDDT,1)
"RTN","FBSHAUT",190,0)
 I FBX D RCON(DFN,FBX) G BDATES
"RTN","FBSHAUT",191,0)
 Q
"RTN","FBSHAUT",192,0)
 ;
"RTN","FBSHAUT",193,0)
TDATE ; get to date for existing authorization
"RTN","FBSHAUT",194,0)
 ; input
"RTN","FBSHAUT",195,0)
 ;   DFN     patient ien in file 161
"RTN","FBSHAUT",196,0)
 ;   FBPROG  program ien in file
"RTN","FBSHAUT",197,0)
 ;   FBBEGDT From Date, FileMan format
"RTN","FBSHAUT",198,0)
 ;   FBENDDT (optional) current value of To Date
"RTN","FBSHAUT",199,0)
 ; output
"RTN","FBSHAUT",200,0)
 ;   FBENDDT To Date, FileMan format, null if date not selected
"RTN","FBSHAUT",201,0)
 ;
"RTN","FBSHAUT",202,0)
 S %DT("A")="Enter TO DATE: ",%DT="AEX",%DT(0)=FBBEGDT
"RTN","FBSHAUT",203,0)
 I $G(FBENDDT)]"" S %DT("B")=$$FMTE^XLFDT(FBENDDT)
"RTN","FBSHAUT",204,0)
 D ^%DT K %DT I Y'>0 S FBENDDT="" Q
"RTN","FBSHAUT",205,0)
 S FBENDDT=Y
"RTN","FBSHAUT",206,0)
 ;
"RTN","FBSHAUT",207,0)
 S FBX=$$CONFLICT(DFN,FBPROG,FBBEGDT,FBENDDT,0)
"RTN","FBSHAUT",208,0)
 I FBX D RCON(DFN,FBX) G TDATE
"RTN","FBSHAUT",209,0)
 Q
"RTN","FBSHAUT",210,0)
 ;
"RTN","FBSHAUT",211,0)
CONFLICT(DFN,PRG,FDT,TDT,NEWAUT) ; check for conflict with existing auth.
"RTN","FBSHAUT",212,0)
 ; input
"RTN","FBSHAUT",213,0)
 ;   DFN     - patient ien
"RTN","FBSHAUT",214,0)
 ;   PRG     - program ien
"RTN","FBSHAUT",215,0)
 ;   FDT     - from date in fileman format
"RTN","FBSHAUT",216,0)
 ;   TDT     - to date in fileman format
"RTN","FBSHAUT",217,0)
 ;   NEWAUT  - optional flag, true if dates for a new authorization
"RTN","FBSHAUT",218,0)
 ; returns string with value =
"RTN","FBSHAUT",219,0)
 ;   list of authorization iens (delimited by ^) that conflict OR
"RTN","FBSHAUT",220,0)
 ;   null when no conflict found
"RTN","FBSHAUT",221,0)
 ;
"RTN","FBSHAUT",222,0)
 ; A conflict exists if
"RTN","FBSHAUT",223,0)
 ;   1) the from date of a new authorization has already been used as
"RTN","FBSHAUT",224,0)
 ;      the from date for an existing authorization (including deleted)
"RTN","FBSHAUT",225,0)
 ;      for the same FEE program.
"RTN","FBSHAUT",226,0)
 ;   OR
"RTN","FBSHAUT",227,0)
 ;   2) the date range (FROM-TO) of this authorization overlaps the
"RTN","FBSHAUT",228,0)
 ;      date range of a different, active (does not include deleted)
"RTN","FBSHAUT",229,0)
 ;      authorization for the same FEE program. Note that the from date
"RTN","FBSHAUT",230,0)
 ;      of one authorization can equal the to date of a different
"RTN","FBSHAUT",231,0)
 ;      authorization and would not be in conflict.
"RTN","FBSHAUT",232,0)
 ;
"RTN","FBSHAUT",233,0)
 N FBI,FBRET,FBY
"RTN","FBSHAUT",234,0)
 S FBRET=""
"RTN","FBSHAUT",235,0)
 ; loop thru authorizations
"RTN","FBSHAUT",236,0)
 S FBI=0 F  S FBI=$O(^FBAAA(DFN,1,FBI)) Q:'FBI  D
"RTN","FBSHAUT",237,0)
 . S FBY=$G(^FBAAA(DFN,1,FBI,0))
"RTN","FBSHAUT",238,0)
 . Q:$P(FBY,U,3)'=PRG  ; not program of interest
"RTN","FBSHAUT",239,0)
 . Q:$P(FBY,U)=""!($P(FBY,U,2)="")  ; date missing - invalid
"RTN","FBSHAUT",240,0)
 . ; if same from date and not new then must be the selected auth.
"RTN","FBSHAUT",241,0)
 . ; and wouldn't conflict with self. if new then conflict found.
"RTN","FBSHAUT",242,0)
 . I $P(FBY,U)=FDT S:NEWAUT FBRET=FBRET_FBI_U Q  ; same from date
"RTN","FBSHAUT",243,0)
 . Q:$P($G(^FBAAA(DFN,1,FBI,"ADEL")),U)  ; austin deleted
"RTN","FBSHAUT",244,0)
 . I FDT<$P(FBY,U,2),TDT>$P(FBY,U) S FBRET=FBRET_FBI_U  ; conflict
"RTN","FBSHAUT",245,0)
 Q FBRET
"RTN","FBSHAUT",246,0)
 ;
"RTN","FBSHAUT",247,0)
RCON(DFN,LIST) ; Report Conflicts
"RTN","FBSHAUT",248,0)
 N CNT,FBA,FBFD,FBI,FBIEN,FBP
"RTN","FBSHAUT",249,0)
 S CNT=$L(LIST,U)-1
"RTN","FBSHAUT",250,0)
 W $C(7)
"RTN","FBSHAUT",251,0)
 W !!,"The specified dates conflict with other authorization(s)."
"RTN","FBSHAUT",252,0)
 W !,"Please specify different dates for this authorization or"
"RTN","FBSHAUT",253,0)
 W !,"remove the conflict by first editing the other authorization(s)."
"RTN","FBSHAUT",254,0)
 W !!,"Conflict with  FROM DATE",?30,"TO DATE",?45,"PURPOSE OF VISIT"
"RTN","FBSHAUT",255,0)
 F FBP=1:1 S FBI=$P(LIST,U,FBP) Q:FBI=""  D
"RTN","FBSHAUT",256,0)
 . S FBFD=$P($G(^FBAAA(DFN,1,FBI,0)),U)
"RTN","FBSHAUT",257,0)
 . Q:FBFD=""
"RTN","FBSHAUT",258,0)
 . S FBA(FBFD)=FBI
"RTN","FBSHAUT",259,0)
 S FBFD="" F  S FBFD=$O(FBA(FBFD)) Q:FBFD=""  D
"RTN","FBSHAUT",260,0)
 . S FBI=FBA(FBFD)
"RTN","FBSHAUT",261,0)
 . S FBIEN=FBI_","_DFN_","
"RTN","FBSHAUT",262,0)
 . W !
"RTN","FBSHAUT",263,0)
 . I $P($G(^FBAAA(DFN,1,FBI,"ADEL")),U)]"" D
"RTN","FBSHAUT",264,0)
 . . W !,?2,"**Austin Deleted** - Use Reinstate to reuse this From Date"
"RTN","FBSHAUT",265,0)
 . W ?15,$$GET1^DIQ(161.01,FBIEN,.01)
"RTN","FBSHAUT",266,0)
 . W ?30,$$GET1^DIQ(161.01,FBIEN,.02)
"RTN","FBSHAUT",267,0)
 . W ?45,$$GET1^DIQ(161.01,FBIEN,.07)
"RTN","FBSHAUT",268,0)
 W !
"RTN","FBSHAUT",269,0)
 Q
"RTN","FBSHAUT",270,0)
 ;
"RTN","FBSHAUT",271,0)
QMRA(DFN,AUT,TYP) ; Queue MRA for transmission to Austin
"RTN","FBSHAUT",272,0)
 ; input
"RTN","FBSHAUT",273,0)
 ;   DFN - patient ien (file 2)
"RTN","FBSHAUT",274,0)
 ;   AUT - authorization ien (file 161.01)
"RTN","FBSHAUT",275,0)
 ;   TYP - type of MRA (A, C, D, or R)
"RTN","FBSHAUT",276,0)
 ; returns ien of MRA (file 161.26)
"RTN","FBSHAUT",277,0)
 N DD,DO,DIC,DLAYGO
"RTN","FBSHAUT",278,0)
 S DIC="^FBAA(161.26,",DIC(0)="L",DLAYGO=161.26,X=DFN
"RTN","FBSHAUT",279,0)
 S DIC("DR")="1///^S X=""P"";2///^S X=AUT;3///^S X=TYP"
"RTN","FBSHAUT",280,0)
 K DD,DO D FILE^DICN K DIC,DLAYGO
"RTN","FBSHAUT",281,0)
 Q +Y
"RTN","FBSHAUT",282,0)
 ;
"RTN","FBSHAUT",283,0)
POV ; get purpose of visit
"RTN","FBSHAUT",284,0)
 N DIR,DA,FBTYPE
"RTN","FBSHAUT",285,0)
 S FBPOV=""
"RTN","FBSHAUT",286,0)
 S FBTYPE=FBPROG
"RTN","FBSHAUT",287,0)
 S DIR(0)="161.01,.07"
"RTN","FBSHAUT",288,0)
 D ^DIR Q:$D(DIRUT)
"RTN","FBSHAUT",289,0)
 S FBPOV=Y
"RTN","FBSHAUT",290,0)
 Q
"RTN","FBSHAUT",291,0)
 ;
"RTN","FBSHAUT",292,0)
 ;FBSHAUT
"RTN","FBUCAUD")
0^3^B6338424^n/a
"RTN","FBUCAUD",1,0)
FBUCAUD ;WCIOFO/SAB - FEE BASIS 162.7 DATA AUDIT ;5/19/2014
"RTN","FBUCAUD",2,0)
 ;;3.5;FEE BASIS;**151**;JAN 30, 1995;Build 14
"RTN","FBUCAUD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBUCAUD",4,0)
 Q
"RTN","FBUCAUD",5,0)
 ;
"RTN","FBUCAUD",6,0)
AUD(FBSET) ; audit of selected fields in file 162.7
"RTN","FBUCAUD",7,0)
 ;called by set and kill logic of AUD mumps x-ref on file 162.7
"RTN","FBUCAUD",8,0)
 ; input
"RTN","FBUCAUD",9,0)
 ;   FBSET = 0 or 1, =true if set logic and =false if kill logic
"RTN","FBUCAUD",10,0)
 ;   also variables from FileMan x-ref
"RTN","FBUCAUD",11,0)
 ;     DA = IEN of record in file 162.7
"RTN","FBUCAUD",12,0)
 ;     X1(#) = old values of cross-referenced fields
"RTN","FBUCAUD",13,0)
 ;     X2(#) = new values of cross-referenced fields
"RTN","FBUCAUD",14,0)
 N FBDT,FBI,FBFDA,FBFIELDL
"RTN","FBUCAUD",15,0)
 ; list of cross-referenced fields in order number
"RTN","FBUCAUD",16,0)
 S FBFIELDL="24^10^.01^19.6^7^11^21^50^51^52^53^54^55"
"RTN","FBUCAUD",17,0)
 S FBDT=$$NOW^XLFDT()
"RTN","FBUCAUD",18,0)
 ;
"RTN","FBUCAUD",19,0)
 ; if kill logic and new value of .01 field null then record was deleted
"RTN","FBUCAUD",20,0)
 ;   and no need to proceed since audit multiple is stored in record
"RTN","FBUCAUD",21,0)
 I 'FBSET,X2(3)="" Q
"RTN","FBUCAUD",22,0)
 ;
"RTN","FBUCAUD",23,0)
 ; if old and new field values are different then save change in audit
"RTN","FBUCAUD",24,0)
 ; loop thru audited fields
"RTN","FBUCAUD",25,0)
 F FBI=1:1:13 D
"RTN","FBUCAUD",26,0)
 . ; if kill logic and value was deleted then save audit
"RTN","FBUCAUD",27,0)
 . I 'FBSET,X1(FBI)'=X2(FBI),X2(FBI)="" D SAVE
"RTN","FBUCAUD",28,0)
 . ; if set logic and value was entered or changed then save audit
"RTN","FBUCAUD",29,0)
 . I FBSET,X1(FBI)'=X2(FBI),X2(FBI)'="" D SAVE
"RTN","FBUCAUD",30,0)
 Q
"RTN","FBUCAUD",31,0)
 ;
"RTN","FBUCAUD",32,0)
SAVE ;
"RTN","FBUCAUD",33,0)
 N FBFDA,FBIENS
"RTN","FBUCAUD",34,0)
 S FBIENS="+1,"_DA_","
"RTN","FBUCAUD",35,0)
 S FBFDA(162.793,FBIENS,.01)=FBDT ; CHANGED DATE/TIME
"RTN","FBUCAUD",36,0)
 S FBFDA(162.793,FBIENS,1)=$P(FBFIELDL,"^",FBI) ; FIELD
"RTN","FBUCAUD",37,0)
 S FBFDA(162.793,FBIENS,2)=X1(FBI) ; OLD VALUE
"RTN","FBUCAUD",38,0)
 S FBFDA(162.793,FBIENS,3)=X2(FBI) ; NEW VALUE
"RTN","FBUCAUD",39,0)
 S FBFDA(162.793,FBIENS,4)=DUZ ; CHANGED BY
"RTN","FBUCAUD",40,0)
 D UPDATE^DIE("","FBFDA")
"RTN","FBUCAUD",41,0)
 Q
"RTN","FBUCAUD",42,0)
 ;
"RTN","FBUCAUD",43,0)
OUTX ; output transform
"RTN","FBUCAUD",44,0)
 ; called by OLD VALUE and NEW VALUE fields in the DATA AUDIT multiple
"RTN","FBUCAUD",45,0)
 ; of the FEE BASIS UNAUTHORIZED CLAIMS (#162.7) file.
"RTN","FBUCAUD",46,0)
 ; input
"RTN","FBUCAUD",47,0)
 ;   Y   = value to transform
"RTN","FBUCAUD",48,0)
 ;   D0  = required internal entry number, top level
"RTN","FBUCAUD",49,0)
 ;   D1  = optional internal entry number, one level below
"RTN","FBUCAUD",50,0)
 ;   DIC = optional file/sub-file root
"RTN","FBUCAUD",51,0)
 ; output
"RTN","FBUCAUD",52,0)
 ;   Y   = external value for Y when available, else the input value
"RTN","FBUCAUD",53,0)
 ;
"RTN","FBUCAUD",54,0)
 Q:'$G(D0)  ; must have at least one IEN
"RTN","FBUCAUD",55,0)
 Q:$G(Y)=""  ; must have internal value to transform
"RTN","FBUCAUD",56,0)
 ;
"RTN","FBUCAUD",57,0)
 N FBFLD,FBNODE,FBY
"RTN","FBUCAUD",58,0)
 ;
"RTN","FBUCAUD",59,0)
 ; determine 0-node of entry in DATA AUDIT
"RTN","FBUCAUD",60,0)
 S FBNODE=""
"RTN","FBUCAUD",61,0)
 I $G(D1) S FBNODE="^FB583("_D0_",""LOG2"","_D1_",0)"
"RTN","FBUCAUD",62,0)
 I '$G(D1),$E($G(DIC))="^" S FBNODE=DIC_D0_",0)"
"RTN","FBUCAUD",63,0)
 Q:FBNODE=""
"RTN","FBUCAUD",64,0)
 ;
"RTN","FBUCAUD",65,0)
 ; obtain value of FIELD
"RTN","FBUCAUD",66,0)
 S FBFLD=$P($G(@FBNODE),"^",2)
"RTN","FBUCAUD",67,0)
 Q:FBFLD=""
"RTN","FBUCAUD",68,0)
 ;
"RTN","FBUCAUD",69,0)
 ; obtain external value of Y for the field
"RTN","FBUCAUD",70,0)
 S FBY=$$EXTERNAL^DILFD(162.7,FBFLD,"",Y)
"RTN","FBUCAUD",71,0)
 S:FBY]"" Y=FBY ; return external value in Y
"RTN","FBUCAUD",72,0)
 Q
"RTN","FBUCAUD",73,0)
 ;
"RTN","FBUCAUD",74,0)
LTRDT(FBSET) ; trigger on DATE LETTER SENT field in file 162.7
"RTN","FBUCAUD",75,0)
 ; called by set and kill logic on AILT cross-reference
"RTN","FBUCAUD",76,0)
 ; populates DATE REQ INFO SENT field when status order is 10
"RTN","FBUCAUD",77,0)
 ; input
"RTN","FBUCAUD",78,0)
 ;   FBSET = 0 or 1, =true if set logic and =false if kill logic
"RTN","FBUCAUD",79,0)
 ;   also variables from FileMan x-ref
"RTN","FBUCAUD",80,0)
 ;     DA = IEN of record in file 162.7
"RTN","FBUCAUD",81,0)
 ;     X1(1) = old values of cross-referenced field
"RTN","FBUCAUD",82,0)
 ;     X2(1) = new values of cross-referenced field
"RTN","FBUCAUD",83,0)
 ;
"RTN","FBUCAUD",84,0)
 N FBFDA,FBVAL
"RTN","FBUCAUD",85,0)
 ; quit if status order not 10 (i.e. not incomplete unauthorized claim)
"RTN","FBUCAUD",86,0)
 Q:$$ORDER^FBUCUTL($P($G(^FB583(DA,0)),"^",24))'=10
"RTN","FBUCAUD",87,0)
 ;
"RTN","FBUCAUD",88,0)
 S FBVAL=""
"RTN","FBUCAUD",89,0)
 ; if kill logic and value was deleted then delete value
"RTN","FBUCAUD",90,0)
 I 'FBSET,X1(1)'=X2(1),X2(1)="" S FBVAL="@"
"RTN","FBUCAUD",91,0)
 ; if set logic and value was entered or changed then copy date
"RTN","FBUCAUD",92,0)
 I FBSET,X1(1)'=X2(1),X2(1)'="" S FBVAL=X2(1)
"RTN","FBUCAUD",93,0)
 ;
"RTN","FBUCAUD",94,0)
 I FBVAL]"" D
"RTN","FBUCAUD",95,0)
 . S FBFDA(162.7,DA_",",19.6)=FBVAL ; DATE REQ INFO SENT
"RTN","FBUCAUD",96,0)
 . D FILE^DIE("","FBFDA")
"RTN","FBUCAUD",97,0)
 ;
"RTN","FBUCAUD",98,0)
 Q
"RTN","FBUCAUD",99,0)
 ;FBUCAUD
"RTN","FBUCDIS")
0^4^B20964227^B16705793
"RTN","FBUCDIS",1,0)
FBUCDIS ;AISC/TET - DISPLAY UNAUTHORIZED CLAIM(583) ;4/18/2014
"RTN","FBUCDIS",2,0)
 ;;3.5;FEE BASIS;**32,151**;JAN 30, 1995;Build 14
"RTN","FBUCDIS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBUCDIS",4,0)
EN D HOME^%ZIS N FBCRT,FBHIST,FBOUT,FBPG,FBX S FBOUT=0,FBCRT=$S($E(IOST,1,2)="C-":1,1:0),FBPG=0
"RTN","FBUCDIS",5,0)
 W !! D IEN^FBUCUTL3 G:'FBIEN END ;select claim
"RTN","FBUCDIS",6,0)
 ; ask if list for just mill-bill (1725) or just non-mill bill claims
"RTN","FBUCDIS",7,0)
 S FB1725R=$$ASKMB^FBUCUTL9 I FB1725R="" G END
"RTN","FBUCDIS",8,0)
 D DISP7^FBUCUTL5(FBIX,FBIEN,0,FB1725R) ;set array of claims
"RTN","FBUCDIS",9,0)
 D DISPX^FBUCUTL1(0) ;display claims
"RTN","FBUCDIS",10,0)
 S FBAR=$G(^TMP("FBAR",$J,"FBAR")) I 'FBAR G END ;W !!,"No data on file." G EN
"RTN","FBUCDIS",11,0)
 S FBOUT=0,DIR("??")="^D DISPX^FBUCUTL1(0)",DIR(0)="N^1:"_+FBAR_":0",DIR("A")="Select the claim which you would like to display" D ^DIR K DIR S:$D(DIRUT) FBOUT=1 G END:+$G(FBOUT),EN:'+Y
"RTN","FBUCDIS",12,0)
 S FBDA=+$G(^TMP("FBAR",$J,+Y))
"RTN","FBUCDIS",13,0)
 ;
"RTN","FBUCDIS",14,0)
 ; conditionally ask if historical audit data should be shown
"RTN","FBUCDIS",15,0)
 S FBHIST=$O(^FB583(FBDA,"LOG2",0))
"RTN","FBUCDIS",16,0)
 I 'FBHIST D  G:$G(FBOUT) END
"RTN","FBUCDIS",17,0)
 . W !!,"Note: Historical audit data not available for this claim."
"RTN","FBUCDIS",18,0)
 . D CR
"RTN","FBUCDIS",19,0)
 I FBHIST D  G:$G(FBOUT) END
"RTN","FBUCDIS",20,0)
 . S DIR(0)="Y",DIR("A")="Show historical audit data",DIR("B")="NO"
"RTN","FBUCDIS",21,0)
 . D ^DIR K DIR S:$D(DIRUT) FBOUT=1 Q:$G(FBOUT)  S FBHIST=Y
"RTN","FBUCDIS",22,0)
 ;
"RTN","FBUCDIS",23,0)
DIS ;display claim
"RTN","FBUCDIS",24,0)
 D PAGE
"RTN","FBUCDIS",25,0)
 S DA=FBDA,DR="0:LOG",DIQ(0)="C",DIC="^FB583(" D EN^DIQ K DIQ
"RTN","FBUCDIS",26,0)
 K FBAR,^TMP("FBAR",$J)
"RTN","FBUCDIS",27,0)
 ;
"RTN","FBUCDIS",28,0)
HIST ; display historical audit data if requested
"RTN","FBUCDIS",29,0)
 I FBHIST D
"RTN","FBUCDIS",30,0)
 . I IOSL<($Y+20) D PAGE Q:FBOUT
"RTN","FBUCDIS",31,0)
 . S FBX="< HISTORICAL AUDIT DATA (since patch FB*3.5*151) >"
"RTN","FBUCDIS",32,0)
 . W !!?(IOM-$L(FBX)/2),FBX,!
"RTN","FBUCDIS",33,0)
 . S DIC="^FB583(",DA=FBDA,DR="LOG2" D EN^DIQ
"RTN","FBUCDIS",34,0)
 G:FBOUT END
"RTN","FBUCDIS",35,0)
 ;
"RTN","FBUCDIS",36,0)
PEND ;display incomplete items if information pending
"RTN","FBUCDIS",37,0)
 I $$PEND^FBUCUTL(FBDA) D
"RTN","FBUCDIS",38,0)
 . I IOSL<($Y+10) D PAGE Q:FBOUT
"RTN","FBUCDIS",39,0)
 . S FBX="< PENDING INFORMATION >" W !!?(IOM-$L(FBX)/2),FBX,!
"RTN","FBUCDIS",40,0)
 . D DISP8^FBUCUTL5(FBDA),DISPX^FBUCUTL1(0) K FBAR,^TMP("FBAR",$J)
"RTN","FBUCDIS",41,0)
 G:FBOUT END
"RTN","FBUCDIS",42,0)
 ;
"RTN","FBUCDIS",43,0)
PAY ;check if any payments
"RTN","FBUCDIS",44,0)
 I $$PAY^FBUCUTL(FBDA,"FB583(") D
"RTN","FBUCDIS",45,0)
 . I IOSL<($Y+5) D PAGE Q:FBOUT
"RTN","FBUCDIS",46,0)
 . S FBX="< PAYMENTS ON FILE >" W !!?(IOM-$L(FBX)/2),FBX,!
"RTN","FBUCDIS",47,0)
 G:FBOUT END
"RTN","FBUCDIS",48,0)
 ;
"RTN","FBUCDIS",49,0)
LINK ;check for associates
"RTN","FBUCDIS",50,0)
 I $$LINK^FBUCLNK1(FBDA,FBIX,1) D
"RTN","FBUCDIS",51,0)
 . I IOSL<($Y+10) D PAGE Q:FBOUT
"RTN","FBUCDIS",52,0)
 . S FBX="< ASSOCIATED CLAIMS >" W !!?(IOM-$L(FBX)/2),FBX,!
"RTN","FBUCDIS",53,0)
 . D DISPX^FBUCUTL1(0)
"RTN","FBUCDIS",54,0)
 G:FBOUT END
"RTN","FBUCDIS",55,0)
 ;
"RTN","FBUCDIS",56,0)
END ;kill and quit
"RTN","FBUCDIS",57,0)
 K DA,DR,DFN,DIC,DIRUT,DTOUT,DUOUT,FB,FBAAOUT,FBDA,FBDX,FBI,FBIEN,FBIN,FBIX,FBLISTC,FBVEN,FBVID,J,K,Q,S,VA,VADM,X,Y,ZZ,FBPROC,L,VAERR,FBINODE,FBNODE,FBPRGNAM,FBPROG,FB1725R D KILL^FBPAY
"RTN","FBUCDIS",58,0)
 K FBARY,^TMP("FBARY",$J),^TMP("FBAR",$J) Q
"RTN","FBUCDIS",59,0)
PAGE ;write new page
"RTN","FBUCDIS",60,0)
 D:FBCRT&(FBPG>0) CR Q:FBOUT
"RTN","FBUCDIS",61,0)
HDR W:FBCRT!(FBPG>0) @IOF S FBPG=FBPG+1
"RTN","FBUCDIS",62,0)
 ;W !,FBHDR,!?70,"Page: ",FBPG,!,$S(FBIX="AVMS":"Veteran",1:"Vendor"),?34,"Fee Program",?53,"Status",?75,"Code",!,FBDASH
"RTN","FBUCDIS",63,0)
 Q
"RTN","FBUCDIS",64,0)
CR ;ask end of page prompt
"RTN","FBUCDIS",65,0)
 ;OUTPUT: FBOUT is set if time out or up arrow out
"RTN","FBUCDIS",66,0)
 W ! S DIR(0)="E" D ^DIR S:$D(DTOUT)!($D(DUOUT)) FBOUT=1
"RTN","FBUCDIS",67,0)
 Q
"RTN","FBUCDIS",68,0)
 S FBDA=FBDA_";FB583(",FBLISTC=1,FBOUT=0,FBAAOUT="",Q="",$P(Q,"-",80)="-",FB("PD")=0
"RTN","FBUCDIS",69,0)
 F FBI=0:0 S FBI=$O(^FBAAI("E",FBDA,FBI)) Q:FBI'>0!(FBAAOUT)  S FBNODE=$G(^FBAAI(FBI,0)) I FBNODE]"" S FB("PD")=FB("PD")+$P(FBNODE,U,9) D VET^FBCHDI S FB("DFN")=DFN D EN^FBCHDI Q:$G(FBOUT)
"RTN","FBUCDIS",70,0)
 D END G EN
"RTN","FBUCDIS",71,0)
HED W !?25,"ASSOCIATED INVOICES",!,?24,$E(Q,1,21),!
"RTN","FBUCDIS",72,0)
 Q
"RTN","FBUCDIS",73,0)
OPT I $O(^FBAAC("AM",FBDA,0)) F II=0:0 S II=$O(^FBAAC("AM",FBDA,FB("DFN"),II)) Q:'II  F JJ=0:0 S JJ=$O(^FBAAC("AM",FBDA,FB("DFN"),II,JJ)) Q:'JJ  F KK=0:0 S KK=$O(^FBAAC("AM",FBDA,FB("DFN"),II,JJ,KK)) Q:'KK  D GETPD
"RTN","FBUCDIS",74,0)
 K II,JJ,KK Q
"RTN","FBUCDIS",75,0)
GETPD I $D(^FBAAC(FB("DFN"),1,II,1,JJ,1,KK,0)) S FB("PD")=FB("PD")+$P(^(0),"^",3) Q
"RTN","FBUCDIS",76,0)
 ;
"RTN","FBUCDIS",77,0)
RETURN ;return address display/edit
"RTN","FBUCDIS",78,0)
 N FBCT,FBCRT,FBDIS,FBED,FBI,FBOUT,FBPG,FBSADD,FBX D HOME^%ZIS S FBOUT=0,FBCRT=$S($E(IOST,1,2)="C-":1,1:0),FBPG=0 G:'FBCRT END
"RTN","FBUCDIS",79,0)
 ;display return address
"RTN","FBUCDIS",80,0)
RETDIS D STATADD^FBUCUTL2 ;get station address
"RTN","FBUCDIS",81,0)
 D PAGE
"RTN","FBUCDIS",82,0)
 S (FBCT,FBI)=0 F  S FBI=$O(FBSADD(FBI)) Q:'FBI  S FBX=FBSADD(FBI) W !?(IOM-$L(FBX)/2),FBX S FBCT=FBCT+1
"RTN","FBUCDIS",83,0)
 ;edit return address
"RTN","FBUCDIS",84,0)
 W !!! S DIR("A")="Do you wish to edit",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR G END:$D(DIRUT) S FBED=+Y,FBDIS=0
"RTN","FBUCDIS",85,0)
 G:'FBED END
"RTN","FBUCDIS",86,0)
 S DIE="^FBAA(161.4,",DA=1,DR="35.6;1;2;16;3;4;5" D LOCK^FBUCUTL(DIE,DA) I FBLOCK D ^DIE L -^FBAA(161.4,DA)
"RTN","FBUCDIS",87,0)
 K DA,DIE,DR,FBLOCK
"RTN","FBUCDIS",88,0)
 W !! S DIR("A")="Do you wish to display return address",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G END:$D(DIRUT) S FBDIS=+Y,FBED=0
"RTN","FBUCDIS",89,0)
 G END:'FBDIS G END:FBOUT K FBSADD G RETDIS
"RTN","FBXIP151")
0^5^B1135179^n/a
"RTN","FBXIP151",1,0)
FBXIP151 ;WOIFO/SAB - PATCH INSTALL ROUTINE ;4/3/2014
"RTN","FBXIP151",2,0)
 ;;3.5;FEE BASIS;**151**;JAN 30, 1995;Build 14
"RTN","FBXIP151",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBXIP151",4,0)
 Q
"RTN","FBXIP151",5,0)
 ; 
"RTN","FBXIP151",6,0)
 ; ICRs
"RTN","FBXIP151",7,0)
 ;  #10141  BMES^XPDUTL, MES^XPDUTL, $$NEWCP^XPDUTL, $$PATCH^XPDUTL
"RTN","FBXIP151",8,0)
 ;  #3352   DIEZ^DIKCUTL3
"RTN","FBXIP151",9,0)
 ;
"RTN","FBXIP151",10,0)
PS ; post-install entry point
"RTN","FBXIP151",11,0)
 ; create KIDS checkpoints with call backs
"RTN","FBXIP151",12,0)
 N FBX,Y
"RTN","FBXIP151",13,0)
 F FBX="RCIT" D
"RTN","FBXIP151",14,0)
 . S Y=$$NEWCP^XPDUTL(FBX,FBX_"^FBXIP151")
"RTN","FBXIP151",15,0)
 . I 'Y D BMES^XPDUTL("ERROR Creating "_FBX_" Checkpoint.")
"RTN","FBXIP151",16,0)
 Q
"RTN","FBXIP151",17,0)
 ;
"RTN","FBXIP151",18,0)
RCIT ; Recompile Input Templates
"RTN","FBXIP151",19,0)
 ; need to include new cross-reference logic in complied templates
"RTN","FBXIP151",20,0)
 N FBFLD,FBLIST
"RTN","FBXIP151",21,0)
 D BMES^XPDUTL("    Recompiling Input Templates for File 161...")
"RTN","FBXIP151",22,0)
 ;
"RTN","FBXIP151",23,0)
 F FBFLD=.01,.02,.06,.07,.095 S FBLIST(161.01,FBFLD)=""
"RTN","FBXIP151",24,0)
 D DIEZ^DIKCUTL3(161,.FBLIST)
"RTN","FBXIP151",25,0)
 ;
"RTN","FBXIP151",26,0)
 D MES^XPDUTL("    Done.")
"RTN","FBXIP151",27,0)
 Q
"RTN","FBXIP151",28,0)
 ;
"RTN","FBXIP151",29,0)
 ;FBXIP151
"UP",161,161.01,-1)
161^1
"UP",161,161.01,0)
161.01
"UP",161,161.193,-2)
161^1
"UP",161,161.193,-1)
161.01^LOG2
"UP",161,161.193,0)
161.193
"UP",162.7,162.793,-1)
162.7^LOG2
"UP",162.7,162.793,0)
162.793
"VER")
8.0^22.0
"^DD",161,161,1,0)
AUTHORIZATION^161.01ID^^1;0
"^DD",161,161,1,21,0)
^^2^2^2930603^^^^
"^DD",161,161,1,21,1,0)
This data is related to specific validity periods where the veteran
"^DD",161,161,1,21,2,0)
is authorized to obtain Fee services and the VA will reimburse.
"^DD",161,161,1,"DT")
2930603
"^DD",161,161.01,0)
AUTHORIZATION SUB-FIELD^NL^292^27
"^DD",161,161.01,0,"NM","AUTHORIZATION")

"^DD",161,161.01,.01,0)
FROM DATE^DX^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",161,161.01,.01,1,0)
^.1
"^DD",161,161.01,.01,1,1,0)
161^AIC1^MUMPS
"^DD",161,161.01,.01,1,1,1)
S:$P(^FBAAA(DA(1),1,DA,0),U,20)]"" ^FBAAA("AIC",DA(1),-X,$P(^FBAAA(DA(1),1,DA,0),U,20),DA)=""
"^DD",161,161.01,.01,1,1,2)
K:$P(^FBAAA(DA(1),1,DA,0),U,20)]"" ^FBAAA("AIC",DA(1),-X,$P(^FBAAA(DA(1),1,DA,0),U,20),DA)
"^DD",161,161.01,.01,1,1,"%D",0)
2^^2^2^2930514^^^
"^DD",161,161.01,.01,1,1,"%D",1,0)
Cross-reference used to identify potential billables using inverse date.
"^DD",161,161.01,.01,1,1,"%D",2,0)
Used to set "AIC" cross-reference on field .097, POTENTIAL COST RECOVERY CASE.
"^DD",161,161.01,.01,1,1,"DT")
2930326
"^DD",161,161.01,.01,1,2,0)
161^ATST
"^DD",161,161.01,.01,1,2,1)
S ^FBAAA("ATST",$E(X,1,30),DA(1),DA)=""
"^DD",161,161.01,.01,1,2,2)
K ^FBAAA("ATST",$E(X,1,30),DA(1),DA)
"^DD",161,161.01,.01,1,2,"DT")
2921014
"^DD",161,161.01,.01,1,3,0)
161.01^B
"^DD",161,161.01,.01,1,3,1)
S ^FBAAA(DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",161,161.01,.01,1,3,2)
K ^FBAAA(DA(1),1,"B",$E(X,1,30),DA)
"^DD",161,161.01,.01,1,3,"DT")
2980929
"^DD",161,161.01,.01,1,4,0)
161^AENR01^MUMPS
"^DD",161,161.01,.01,1,4,1)
D:'$D(DIU(0)) EVENT^IVMPLOG(DA(1))
"^DD",161,161.01,.01,1,4,2)
D:'$D(DIU(0)) EVENT^IVMPLOG(DA(1))
"^DD",161,161.01,.01,1,4,"%D",0)
^^1^1^2980723^^
"^DD",161,161.01,.01,1,4,"%D",1,0)
Notify HEC of changes to FEE Authorization.
"^DD",161,161.01,.01,1,4,"DT")
2980723
"^DD",161,161.01,.01,21,0)
^^4^4^2930603^^^^
"^DD",161,161.01,.01,21,1,0)
The beginning date for which the patient is authorized to obtain services
"^DD",161,161.01,.01,21,2,0)
from private vendors. For every claim made by a vendor for this patient,
"^DD",161,161.01,.01,21,3,0)
this date will be checked to insure that the date the service was provided
"^DD",161,161.01,.01,21,4,0)
was on or after this date.
"^DD",161,161.01,.01,"DEL",.01,0)
I $$DELA^FBUCDD1(.DA,1)
"^DD",161,161.01,.01,"DT")
3140204
"^DD",161,161.01,.02,0)
TO DATE^RDX^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X),$P(^FBAAA(DA(1),1,DA,0),U,1)>X K X W !!,"To Date cannot be earlier than From Date!",!
"^DD",161,161.01,.02,1,0)
^.1
"^DD",161,161.01,.02,1,1,0)
161^AENR02^MUMPS
"^DD",161,161.01,.02,1,1,1)
D:'$D(DIU(0)) EVENT^IVMPLOG(DA(1)),ENRLLMNT^FBGMT2(DA(1))
"^DD",161,161.01,.02,1,1,2)
Q
"^DD",161,161.01,.02,1,1,"%D",0)
^.101^1^1^3030305^^^^
"^DD",161,161.01,.02,1,1,"%D",1,0)
Notify HEC and Enrollment of changes to FEE Authorization.
"^DD",161,161.01,.02,1,1,"DT")
3030228
"^DD",161,161.01,.02,21,0)
^^4^4^2930603^^^^
"^DD",161,161.01,.02,21,1,0)
The date through which the veteran may obtain services from private vendors,
"^DD",161,161.01,.02,21,2,0)
and which the VA will reimburse. For every claim submitted by a vendor,
"^DD",161,161.01,.02,21,3,0)
this date is compared with the date the service was provided, and 
"^DD",161,161.01,.02,21,4,0)
service date must be on or before this date.
"^DD",161,161.01,.02,"DT")
3140204
"^DD",161,161.01,.06,0)
DISCHARGE TYPE^S^1:TRANSFER TO VA;2:DEATH WITH AUTOPSY;3:DEATH WITHOUT AUTOPSY;4:DISCHARGE;^0;15^Q
"^DD",161,161.01,.06,21,0)
^^2^2^2890131^
"^DD",161,161.01,.06,21,1,0)
This field is filled in as part of the disposition process
"^DD",161,161.01,.06,21,2,0)
in contract hospital.
"^DD",161,161.01,.06,"DT")
3140204
"^DD",161,161.01,.07,0)
PURPOSE OF VISIT CODE^R*P161.82'^FBAA(161.82,^0;7^S DIC("S")="I $S('$G(^(""I"")):1,DT'>^(""I""):1,1:0),$S('$D(FBTYPE):1,$P(^(0),U,2)=FBTYPE:1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",161,161.01,.07,12)
Allows selection of POV related to FEE Program being used...disallows selection of an inactive POV Code.
"^DD",161,161.01,.07,12.1)
S DIC("S")="I $S('$G(^(""I"")):1,DT'>^(""I""):1,1:0),$S('$D(FBTYPE):1,$P(^(0),U,2)=FBTYPE:1,1:0)"
"^DD",161,161.01,.07,21,0)
^^4^4^2930204^^^
"^DD",161,161.01,.07,21,1,0)
Used to indicate the purpose for the visit to the provider. Selection
"^DD",161,161.01,.07,21,2,0)
of these are screened based on the Fee program entered earlier. For 
"^DD",161,161.01,.07,21,3,0)
example, if Outpatient Medical Fee Program is selected Purpose of visit
"^DD",161,161.01,.07,21,4,0)
of 'Authorized Contract Hospitalization' could not be selected.
"^DD",161,161.01,.07,"DT")
3140204
"^DD",161,161.01,.095,0)
TREATMENT TYPE CODE^R*S^1:SHORT TERM FEE STATUS;2:HOME NURSING SERVICES;3:I.D. CARD STATUS;4:STATE HOME;^0;13^Q
"^DD",161,161.01,.095,1,0)
^.1
"^DD",161,161.01,.095,1,1,0)
161^AENR095^MUMPS
"^DD",161,161.01,.095,1,1,1)
D:'$D(DIU(0)) EVENT^IVMPLOG(DA(1))
"^DD",161,161.01,.095,1,1,2)
Q
"^DD",161,161.01,.095,1,1,"%D",0)
^^1^1^2980723^^
"^DD",161,161.01,.095,1,1,"%D",1,0)
Notify HEC of changes to FEE Authorization.
"^DD",161,161.01,.095,1,1,"DT")
2980723
"^DD",161,161.01,.095,12)
Select a value appropriate for the FEE program.
"^DD",161,161.01,.095,12.1)
S DIC("S")="I Y'=4"
"^DD",161,161.01,.095,21,0)
^^2^2^2980929^^^
"^DD",161,161.01,.095,21,1,0)
Indicates what the type of treatment this authorization is related to.
"^DD",161,161.01,.095,21,2,0)
See M-1, Part 1, Chapter 18, for valid entries.
"^DD",161,161.01,.095,"DT")
3140204
"^DD",161,161.01,293,0)
DATA AUDIT^161.193D^^LOG2;0
"^DD",161,161.01,293,21,0)
^^1^1^3140124^
"^DD",161,161.01,293,21,1,0)
The data audit multiple stores historical information for selected fields.
"^DD",161,161.01,293,23,0)
^^3^3^3140124^
"^DD",161,161.01,293,23,1,0)
The AUD index tracks changes to selected fields and populates the DATA
"^DD",161,161.01,293,23,2,0)
AUDIT multiple. The multiple was added by patch FB*3.5*151 and does not
"^DD",161,161.01,293,23,3,0)
reflect actions taken prior to patch installation.
"^DD",161,161.193,0)
DATA AUDIT SUB-FIELD^^4^5
"^DD",161,161.193,0,"DT")
3140124
"^DD",161,161.193,0,"IX","B",161.193,.01)

"^DD",161,161.193,0,"NM","DATA AUDIT")

"^DD",161,161.193,0,"UP")
161.01
"^DD",161,161.193,.01,0)
CHANGED DATE/TIME^DI^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",161,161.193,.01,1,0)
^.1
"^DD",161,161.193,.01,1,1,0)
161.193^B
"^DD",161,161.193,.01,1,1,1)
S ^FBAAA(DA(2),1,DA(1),"LOG2","B",$E(X,1,30),DA)=""
"^DD",161,161.193,.01,1,1,2)
K ^FBAAA(DA(2),1,DA(1),"LOG2","B",$E(X,1,30),DA)
"^DD",161,161.193,.01,3)
Enter the date and time the field value was changed.
"^DD",161,161.193,.01,21,0)
^^1^1^3140124^
"^DD",161,161.193,.01,21,1,0)
This field is automatically populated by the software.
"^DD",161,161.193,.01,"DT")
3140124
"^DD",161,161.193,1,0)
FIELD^FOI^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",161,161.193,1,2)
S Y(0)=Y S Y=$$GET1^DID(161.01,Y,,"LABEL")
"^DD",161,161.193,1,2.1)
S Y=$$GET1^DID(161.01,Y,,"LABEL")
"^DD",161,161.193,1,3)
Enter field number of changed field.
"^DD",161,161.193,1,21,0)
^^1^1^3140124^^
"^DD",161,161.193,1,21,1,0)
This field is automatically populated by the software.
"^DD",161,161.193,1,"DT")
3140204
"^DD",161,161.193,2,0)
OLD VALUE^FOI^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",161,161.193,2,2)
S Y(0)=Y D OUTX^FBAAAUD
"^DD",161,161.193,2,2.1)
D OUTX^FBAAAUD
"^DD",161,161.193,2,3)
Enter old value of field.
"^DD",161,161.193,2,21,0)
^^1^1^3140124^
"^DD",161,161.193,2,21,1,0)
This field is automatically populated by the software.
"^DD",161,161.193,2,"DT")
3140124
"^DD",161,161.193,3,0)
NEW VALUE^FOI^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",161,161.193,3,2)
S Y(0)=Y D OUTX^FBAAAUD
"^DD",161,161.193,3,2.1)
D OUTX^FBAAAUD
"^DD",161,161.193,3,3)
Enter new value of field.
"^DD",161,161.193,3,21,0)
^^1^1^3140124^
"^DD",161,161.193,3,21,1,0)
This field is automatically populated by the software.
"^DD",161,161.193,3,"DT")
3140124
"^DD",161,161.193,4,0)
CHANGED BY^P200'I^VA(200,^0;5^Q
"^DD",161,161.193,4,3)
Enter person that changed the field value.
"^DD",161,161.193,4,21,0)
^^1^1^3140124^
"^DD",161,161.193,4,21,1,0)
This field is automatically populated by the software.
"^DD",161,161.193,4,"DT")
3140124
"^DD",162.7,162.7,.01,0)
DATE CLAIM RECEIVED^RDX^^0;1^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,.01,1,0)
^.1
"^DD",162.7,162.7,.01,1,1,0)
162.7^B
"^DD",162.7,162.7,.01,1,1,1)
S ^FB583("B",$E(X,1,30),DA)=""
"^DD",162.7,162.7,.01,1,1,2)
K ^FB583("B",$E(X,1,30),DA)
"^DD",162.7,162.7,.01,1,2,0)
162.7^AID^MUMPS
"^DD",162.7,162.7,.01,1,2,1)
S ^FB583("AID",-X,DA)=""
"^DD",162.7,162.7,.01,1,2,2)
K ^FB583("AID",-X,DA)
"^DD",162.7,162.7,.01,1,2,"%D",0)
^^1^1^2930301^
"^DD",162.7,162.7,.01,1,2,"%D",1,0)
Sort entries by inverse date unauthorized claim received.
"^DD",162.7,162.7,.01,1,2,"DT")
2930301
"^DD",162.7,162.7,.01,3)
Enter when an Unauthorized Claim, complete or incomplete, is received.
"^DD",162.7,162.7,.01,21,0)
^^2^2^2930511^^^^
"^DD",162.7,162.7,.01,21,1,0)
This is the Date that the valid 583 was accepted for
"^DD",162.7,162.7,.01,21,2,0)
processing. Usually the date the claim is being entered.
"^DD",162.7,162.7,.01,"DEL",.01,0)
D DEL^FBUCDD1(DA)
"^DD",162.7,162.7,.01,"DT")
3140227
"^DD",162.7,162.7,7,0)
DATE VALID CLAIM RECEIVED^DX^^0;8^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y S FBZZ=7 K:$$INPUT^FBUCDD(DA,X,Y,FBZZ) X K FBZZ
"^DD",162.7,162.7,7,1,0)
^.1^^0
"^DD",162.7,162.7,7,3)
Enter date valid claim was received.  Valid claim includes all supporting information/documentation.
"^DD",162.7,162.7,7,21,0)
^^1^1^2930304^^
"^DD",162.7,162.7,7,21,1,0)
Date complete (valid) unauthorized claim received for medical review.
"^DD",162.7,162.7,7,23,0)
^^1^1^2930403^
"^DD",162.7,162.7,7,23,1,0)
This field is automatically updated in the update routine.
"^DD",162.7,162.7,7,"DT")
3140227
"^DD",162.7,162.7,10,0)
DISPOSITION^*P162.91'X^FB(162.91,^0;11^S DIC("S")="I $P(^(0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y S FBZZ=10 K:$$INPUT^FBUCDD(DA,X,Y,FBZZ) X K FBZZ
"^DD",162.7,162.7,10,1,0)
^.1^^-1
"^DD",162.7,162.7,10,1,1,0)
162.7^AC^MUMPS
"^DD",162.7,162.7,10,1,1,1)
S ^FB583("AC",$E(X,1,30),DA)=""
"^DD",162.7,162.7,10,1,1,2)
K ^FB583("AC",$E(X,1,30),DA)
"^DD",162.7,162.7,10,3)
Select the appropriate disposition reason.  An approved, approved to stabilization or disapproved disposition requires a Complete status.
"^DD",162.7,162.7,10,12)
Allow selection of active dispositions.
"^DD",162.7,162.7,10,12.1)
S DIC("S")="I $P(^(0),U,2)"
"^DD",162.7,162.7,10,21,0)
^^5^5^2930916^^^^
"^DD",162.7,162.7,10,21,1,0)
Only active dispositions can be selected.  If the disposition has been 
"^DD",162.7,162.7,10,21,2,0)
approved, or approved to stabilization and payments made, then the
"^DD",162.7,162.7,10,21,3,0)
disposition can not be changed unless the FBAASUPERVISOR key is held.
"^DD",162.7,162.7,10,21,4,0)
An approved, approved to stabilization, or disapproved disposition requires
"^DD",162.7,162.7,10,21,5,0)
a Complete status.
"^DD",162.7,162.7,10,23,0)
^^9^9^2930916^^^^
"^DD",162.7,162.7,10,23,1,0)
If date valid claim received is null, then only reason for disposition 
"^DD",162.7,162.7,10,23,2,0)
 should be for cancelled/withdrawn or abandoned. <INPUT TRANSFORM>
"^DD",162.7,162.7,10,23,3,0)
If a disposition is not approved, and there are payments made against
"^DD",162.7,162.7,10,23,4,0)
 the claim, the user may change the value only if s/he holds the 
"^DD",162.7,162.7,10,23,5,0)
 supervisor security key.  <INPUT TRANSFORM>
"^DD",162.7,162.7,10,23,6,0)
  
"^DD",162.7,162.7,10,23,7,0)
When the status or disposition changes, a letter needs to be printed.
"^DD",162.7,162.7,10,23,8,0)
Once printed, the expiration date is calculated.  The number of days is
"^DD",162.7,162.7,10,23,9,0)
derived from the status.
"^DD",162.7,162.7,10,"DT")
3140227
"^DD",162.7,162.7,11,0)
DATE OF DISPOSITION^DX^^0;12^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,11,3)
Enter date claim dispositioned.
"^DD",162.7,162.7,11,21,0)
^^1^1^2930511^
"^DD",162.7,162.7,11,21,1,0)
The date the claim was dispositioned.
"^DD",162.7,162.7,11,"DT")
3140227
"^DD",162.7,162.7,19.5,0)
DATE LETTER SENT^DX^^0;19^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,19.5,1,0)
^.1^^-1
"^DD",162.7,162.7,19.5,1,1,0)
162.7^ALP
"^DD",162.7,162.7,19.5,1,1,1)
S ^FB583("ALP",$E(X,1,30),DA)=""
"^DD",162.7,162.7,19.5,1,1,2)
K ^FB583("ALP",$E(X,1,30),DA)
"^DD",162.7,162.7,19.5,1,1,"%D",0)
^^2^2^2930403^
"^DD",162.7,162.7,19.5,1,1,"%D",1,0)
Cross-reference is used to determine if a letter has been printed.
"^DD",162.7,162.7,19.5,1,1,"%D",2,0)
It may be used to reprint letters.
"^DD",162.7,162.7,19.5,1,1,"DT")
2930403
"^DD",162.7,162.7,19.5,3)
Enter the date the follow-up or disposition letter was sent to submitter.  Date can not be in the future.
"^DD",162.7,162.7,19.5,21,0)
^^1^1^2930403^
"^DD",162.7,162.7,19.5,21,1,0)
Date letter sent to submitter.
"^DD",162.7,162.7,19.5,23,0)
^^4^4^2930403^
"^DD",162.7,162.7,19.5,23,1,0)
When the status or disposition changes, a letter needs to be printed.
"^DD",162.7,162.7,19.5,23,2,0)
Once printed, the expiration date is calculated.  The number of days is
"^DD",162.7,162.7,19.5,23,3,0)
derived from the status.
"^DD",162.7,162.7,19.5,23,4,0)
This field is automatically updated.
"^DD",162.7,162.7,19.5,"DT")
3140204
"^DD",162.7,162.7,19.6,0)
DATE REQ INFO SENT^DI^^6;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",162.7,162.7,19.6,3)
Enter date a request for additional information letter was sent.
"^DD",162.7,162.7,19.6,9)
^
"^DD",162.7,162.7,19.6,21,0)
^^3^3^3140203^
"^DD",162.7,162.7,19.6,21,1,0)
This field contains the most recent date a request for additional 
"^DD",162.7,162.7,19.6,21,2,0)
information letter was sent for the claim. This field is automatically
"^DD",162.7,162.7,19.6,21,3,0)
populated by the software.
"^DD",162.7,162.7,19.6,23,0)
^^2^2^3140203^^
"^DD",162.7,162.7,19.6,23,1,0)
The DATE REQ INFO LETTER field was added by patch FB*3.5*151 and does not
"^DD",162.7,162.7,19.6,23,2,0)
reflect actions taken prior to patch installation
"^DD",162.7,162.7,19.6,"DT")
3140227
"^DD",162.7,162.7,21,0)
REOPEN CLAIM DATE^D^^0;21^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",162.7,162.7,21,3)
Enter date dispositioned claim reopened (not appealed) for review.
"^DD",162.7,162.7,21,12)
Reopen those claims which do not have a disposition of APPROVED.
"^DD",162.7,162.7,21,12.1)
S DIC("S")="S FBZ=^FB583(DA,0) I $P(^FB583(+Y,0),U,4)=$P(FBZ,U,4),+$P(^(0),U,11)>1 K FBZ"
"^DD",162.7,162.7,21,21,0)
^^1^1^2930315^
"^DD",162.7,162.7,21,21,1,0)
Date dispositioned claim reopended for review.
"^DD",162.7,162.7,21,23,0)
^^2^2^2930403^
"^DD",162.7,162.7,21,23,1,0)
Automatically updated when claim is reopened.
"^DD",162.7,162.7,21,23,2,0)
 (Edit template will stuff if action type is REOpen.)
"^DD",162.7,162.7,21,"DT")
3140227
"^DD",162.7,162.7,24,0)
STATUS^R*P162.92'X^FB(162.92,^0;24^S DIC("S")="I $P(^(0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y S FBZZ=24 K:$$INPUT^FBUCDD(DA,X,Y,FBZZ) X K FBZZ
"^DD",162.7,162.7,24,1,0)
^.1
"^DD",162.7,162.7,24,1,1,0)
162.7^ASD^MUMPS
"^DD",162.7,162.7,24,1,1,1)
S:$P(^FB583(DA,0),U,25) ^FB583("ASD",X,$P(^(0),U,25),DA)=""
"^DD",162.7,162.7,24,1,1,2)
K:$P(^FB583(DA,0),U,25) ^FB583("ASD",X,$P(^(0),U,25),DA)
"^DD",162.7,162.7,24,1,1,"%D",0)
^^1^1^2930301^
"^DD",162.7,162.7,24,1,1,"%D",1,0)
Cross reference by status, status date and record number.
"^DD",162.7,162.7,24,1,1,"DT")
2930301
"^DD",162.7,162.7,24,1,2,0)
162.7^APMS2^MUMPS
"^DD",162.7,162.7,24,1,2,1)
D MSIX^FBUCDD(X,DA,24,1,"APMS")
"^DD",162.7,162.7,24,1,2,2)
D MSIX^FBUCDD(X,DA,24,2,"APMS")
"^DD",162.7,162.7,24,1,2,"%D",0)
^^5^5^2930518^^
"^DD",162.7,162.7,24,1,2,"%D",1,0)
This cross-reference sets/kill the 'APMS' cross-reference.  It is used to
"^DD",162.7,162.7,24,1,2,"%D",2,0)
display the relationship between primary/secondary claims.
"^DD",162.7,162.7,24,1,2,"%D",3,0)
Fields involved are:  Patient, Master Claim and Status, having the
"^DD",162.7,162.7,24,1,2,"%D",4,0)
respective index of 'APMS', 'APMS1' or 'APMS2'.  In order to re-set the
"^DD",162.7,162.7,24,1,2,"%D",5,0)
'APMS' index you only need to re-index ONE of these fields.
"^DD",162.7,162.7,24,1,2,"DT")
2930518
"^DD",162.7,162.7,24,1,3,0)
162.7^AES^MUMPS
"^DD",162.7,162.7,24,1,3,1)
N FBZ S FBZ=$$FBZ^FBUCUTL(DA) S:$P(FBZ,U,26) ^FB583("AES",$$ORDER^FBUCUTL(+X),-$P(FBZ,U,26),DA)="" K FBZ
"^DD",162.7,162.7,24,1,3,2)
N FBZ S FBZ=$$FBZ^FBUCUTL(DA) K:$P(FBZ,U,26) ^FB583("AES",$$ORDER^FBUCUTL(+X),-$P(FBZ,U,26),DA) K FBZ
"^DD",162.7,162.7,24,1,3,"%D",0)
^^1^1^2930706^^^^
"^DD",162.7,162.7,24,1,3,"%D",1,0)
Cross-reference by status order and inverse expiration date.
"^DD",162.7,162.7,24,1,3,"DT")
2930706
"^DD",162.7,162.7,24,1,4,0)
162.7^APS1^MUMPS
"^DD",162.7,162.7,24,1,4,1)
N FBZ S FBZ=$$FBZ^FBUCUTL(DA) S:$P(FBZ,U,4) ^FB583("APS",$P(FBZ,U,4),X,DA)="" K FBZ
"^DD",162.7,162.7,24,1,4,2)
N FBZ S FBZ=$$FBZ^FBUCUTL(DA) K:$P(FBZ,U,4) ^FB583("APS",$P(FBZ,U,4),X,DA) K FBZ
"^DD",162.7,162.7,24,1,4,"%D",0)
^^1^1^2930517^^^^
"^DD",162.7,162.7,24,1,4,"%D",1,0)
Cross-reference used to group claims by veteran (patient) and status.
"^DD",162.7,162.7,24,1,4,"DT")
2930702
"^DD",162.7,162.7,24,1,5,0)
162.7^AVS1^MUMPS
"^DD",162.7,162.7,24,1,5,1)
N FBZ S FBZ=$$FBZ^FBUCUTL(DA) S:$P(FBZ,U,3) ^FB583("AVS",$P(FBZ,U,3),X,DA)="" K FBZ
"^DD",162.7,162.7,24,1,5,2)
N FBZ S FBZ=$$FBZ^FBUCUTL(DA) K:$P(FBZ,U,3) ^FB583("AVS",$P(FBZ,U,3),X,DA) K FBZ
"^DD",162.7,162.7,24,1,5,"%D",0)
^^1^1^2930319^
"^DD",162.7,162.7,24,1,5,"%D",1,0)
Cross-reference used to group claims by vendor and status.
"^DD",162.7,162.7,24,1,5,"DT")
2930702
"^DD",162.7,162.7,24,1,6,0)
162.7^AS
"^DD",162.7,162.7,24,1,6,1)
S ^FB583("AS",$E(X,1,30),DA)=""
"^DD",162.7,162.7,24,1,6,2)
K ^FB583("AS",$E(X,1,30),DA)
"^DD",162.7,162.7,24,1,6,"%D",0)
^^1^1^2930319^
"^DD",162.7,162.7,24,1,6,"%D",1,0)
Cross-refernece claims by status.
"^DD",162.7,162.7,24,1,6,"DT")
2930319
"^DD",162.7,162.7,24,1,7,0)
162.7^AOS^MUMPS
"^DD",162.7,162.7,24,1,7,1)
N FBZ S FBZ=$$FBZ^FBUCUTL(DA) S:$P(FBZ,U,23)["VA(200" ^FB583("AOS",+$P(FBZ,U,23),X,DA)="" K FBZ
"^DD",162.7,162.7,24,1,7,2)
N FBZ S FBZ=$$FBZ^FBUCUTL(DA) K:$P(FBZ,U,23)["VA(200" ^FB583("AOS",+$P(FBZ,U,23),X,DA) K FBZ
"^DD",162.7,162.7,24,1,7,"%D",0)
^^2^2^2930422^
"^DD",162.7,162.7,24,1,7,"%D",1,0)
Cross-reference used to group claims by other party (new persons) and
"^DD",162.7,162.7,24,1,7,"%D",2,0)
status.
"^DD",162.7,162.7,24,1,7,"DT")
2930702
"^DD",162.7,162.7,24,1,8,0)
162.7^AVMS2^MUMPS
"^DD",162.7,162.7,24,1,8,1)
D MSIX^FBUCDD(X,DA,24,1,"AVMS")
"^DD",162.7,162.7,24,1,8,2)
D MSIX^FBUCDD(X,DA,24,2,"AVMS")
"^DD",162.7,162.7,24,1,8,"%D",0)
^^5^5^2930518^^
"^DD",162.7,162.7,24,1,8,"%D",1,0)
This cross-reference sets/kill the 'AVMS' cross-reference.  It is used to
"^DD",162.7,162.7,24,1,8,"%D",2,0)
display the relationship between primary/secondary claims.
"^DD",162.7,162.7,24,1,8,"%D",3,0)
Fields involved are:  Vendor, Master Claim and Status, having the
"^DD",162.7,162.7,24,1,8,"%D",4,0)
respective index of 'AVMS', 'AVMS1' or 'AVMS2'.  In order to re-set the
"^DD",162.7,162.7,24,1,8,"%D",5,0)
'AVMS' index you only need to re-index ONE of these fields.
"^DD",162.7,162.7,24,1,8,"DT")
2930518
"^DD",162.7,162.7,24,1,9,0)
162.7^AOMS2^MUMPS
"^DD",162.7,162.7,24,1,9,1)
D MSIX^FBUCDD(X,DA,24,1,"AOMS")
"^DD",162.7,162.7,24,1,9,2)
D MSIX^FBUCDD(X,DA,24,2,"AOMS")
"^DD",162.7,162.7,24,1,9,"%D",0)
^^5^5^2930518^
"^DD",162.7,162.7,24,1,9,"%D",1,0)
This cross-reference sets/kill the 'AOMS' cross-reference.  It is used to
"^DD",162.7,162.7,24,1,9,"%D",2,0)
display the relationship between primary/secondary claims.
"^DD",162.7,162.7,24,1,9,"%D",3,0)
Fields involved are:  Submitter, Master Claim and Status, having the
"^DD",162.7,162.7,24,1,9,"%D",4,0)
respective index of 'AOMS', 'AOMS1' or 'AOMS2'.  In order to re-set the
"^DD",162.7,162.7,24,1,9,"%D",5,0)
'AOMS' index you only need to re-index ONE of these fields.
"^DD",162.7,162.7,24,1,9,"DT")
2930518
"^DD",162.7,162.7,24,3)
Select an active status for this unauthorized claim.
"^DD",162.7,162.7,24,12)
Allow selection of active status.
"^DD",162.7,162.7,24,12.1)
S DIC("S")="I $P(^(0),U,2)"
"^DD",162.7,162.7,24,21,0)
^^2^2^2930317^^
"^DD",162.7,162.7,24,21,1,0)
Select the appropriate status from FEE BASIS UNAUTHORIZED CLAIMS STATUS file.
"^DD",162.7,162.7,24,21,2,0)
Status is automatically determined and stuffed, it should not be edited.
"^DD",162.7,162.7,24,23,0)
5^^10^10^2930403^
"^DD",162.7,162.7,24,23,1,0)
Only active status' can be selected. <SCREEN>
"^DD",162.7,162.7,24,23,2,0)
If valid claim received, status should be greater than informal or returned.
"^DD",162.7,162.7,24,23,3,0)
If claim is dipositioned, status should only be dispositioned.
"^DD",162.7,162.7,24,23,4,0)
If claim has not been dispositioned, status should not be dispositioned.
"^DD",162.7,162.7,24,23,5,0)
  <INPUT TRANSFORM>
"^DD",162.7,162.7,24,23,6,0)
Status is automatically determined, based on the status order field in 162.92.
"^DD",162.7,162.7,24,23,7,0)
When the status or disposition changes, a letter needs to be printed.
"^DD",162.7,162.7,24,23,8,0)
Once printed, the expiration date is calculated.  The number of days is
"^DD",162.7,162.7,24,23,9,0)
derived from the status.
"^DD",162.7,162.7,24,23,10,0)
This field is automatically updated.
"^DD",162.7,162.7,24,"DT")
3140227
"^DD",162.7,162.7,50,0)
NOTICE OF DISAGREEMENT RECV'D^DX^^A;1^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,50,.1)
DATE NOTICE OF DISAGREEMENT RECV'D
"^DD",162.7,162.7,50,3)
Enter date Notice of Agreement (VAF 21-4138) was received.
"^DD",162.7,162.7,50,21,0)
^^1^1^2930315^
"^DD",162.7,162.7,50,21,1,0)
Date Notice of Agreement (VAF 21-4138) received.
"^DD",162.7,162.7,50,"DT")
3140227
"^DD",162.7,162.7,51,0)
STATEMENT OF THE CASE ISSUED^DX^^A;2^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,51,.1)
DATE STATEMENT OF THE CASE ISSUED
"^DD",162.7,162.7,51,3)
Enter date Statement of the Case was issued.
"^DD",162.7,162.7,51,21,0)
^^1^1^2930315^
"^DD",162.7,162.7,51,21,1,0)
Date Statement of the Case was issued.
"^DD",162.7,162.7,51,"DT")
3140227
"^DD",162.7,162.7,52,0)
DATE SUBSTANTIVE APPEAL RECV'D^DX^^A;3^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,52,3)
Enter date Substantive Appeal (VAF 1-9) was received.
"^DD",162.7,162.7,52,21,0)
^^1^1^2930315^
"^DD",162.7,162.7,52,21,1,0)
Date Substantive Appeal was received.
"^DD",162.7,162.7,52,"DT")
3140227
"^DD",162.7,162.7,53,0)
DATE APPEAL DISPOSITIONED^DX^^A;4^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,53,3)
Enter date BVA decided appeal.
"^DD",162.7,162.7,53,21,0)
^^1^1^2930319^^^
"^DD",162.7,162.7,53,21,1,0)
Date appeal decision rendered by Board of Veterans Appeal (BVA).
"^DD",162.7,162.7,53,"DT")
3140227
"^DD",162.7,162.7,54,0)
DATE APPEALED TO COVA^DX^^A;5^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,54,3)
Enter date BVA decision was appealed to Court of Veteran Affairs (COVA).
"^DD",162.7,162.7,54,21,0)
^^2^2^2931008^^
"^DD",162.7,162.7,54,21,1,0)
Date Board of Veterans Appeal decision was appealed to Court of Veteran Affairs (COVA).
"^DD",162.7,162.7,54,21,2,0)
A timely appeal must be within 120 days of the BVA decision.
"^DD",162.7,162.7,54,"DT")
3140227
"^DD",162.7,162.7,55,0)
DATE COVA APPEAL DISPOSITIONED^DX^^A;6^S %DT="EX",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X
"^DD",162.7,162.7,55,3)
Enter date a dispositon to a COVA appeal made.
"^DD",162.7,162.7,55,21,0)
^^1^1^2931008^^
"^DD",162.7,162.7,55,21,1,0)
Date a decision to a COVA appeal rendered.
"^DD",162.7,162.7,55,"DT")
3140227
"^DD",162.7,162.7,293,0)
DATA AUDIT^162.793D^^LOG2;0
"^DD",162.7,162.7,293,21,0)
^^1^1^3140123^
"^DD",162.7,162.7,293,21,1,0)
The data audit multiple stores historical information for selected fields.
"^DD",162.7,162.7,293,23,0)
^^3^3^3140123^
"^DD",162.7,162.7,293,23,1,0)
The AUD index tracks changes to selected fields and populates the DATA 
"^DD",162.7,162.7,293,23,2,0)
AUDIT multiple. The multiple was added by patch FB*3.5*151 and does not
"^DD",162.7,162.7,293,23,3,0)
reflect actions taken prior to patch installation.
"^DD",162.7,162.793,0)
DATA AUDIT SUB-FIELD^^4^5
"^DD",162.7,162.793,0,"DT")
3140124
"^DD",162.7,162.793,0,"IX","B",162.793,.01)

"^DD",162.7,162.793,0,"NM","DATA AUDIT")

"^DD",162.7,162.793,0,"UP")
162.7
"^DD",162.7,162.793,.01,0)
CHANGED DATE/TIME^DI^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",162.7,162.793,.01,1,0)
^.1
"^DD",162.7,162.793,.01,1,1,0)
162.793^B
"^DD",162.7,162.793,.01,1,1,1)
S ^FB583(DA(1),"LOG2","B",$E(X,1,30),DA)=""
"^DD",162.7,162.793,.01,1,1,2)
K ^FB583(DA(1),"LOG2","B",$E(X,1,30),DA)
"^DD",162.7,162.793,.01,3)
Enter the date and time the field value was changed.
"^DD",162.7,162.793,.01,21,0)
^^1^1^3140123^
"^DD",162.7,162.793,.01,21,1,0)
This field is automatically populated by the software.
"^DD",162.7,162.793,.01,"DT")
3140123
"^DD",162.7,162.793,1,0)
FIELD^FO^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",162.7,162.793,1,2)
S Y(0)=Y S Y=$$GET1^DID(162.7,Y,,"LABEL")
"^DD",162.7,162.793,1,2.1)
S Y=$$GET1^DID(162.7,Y,,"LABEL")
"^DD",162.7,162.793,1,3)
Enter field number of changed field.
"^DD",162.7,162.793,1,21,0)
^^1^1^3140123^
"^DD",162.7,162.793,1,21,1,0)
This field is automatically populated by the software.
"^DD",162.7,162.793,1,"DT")
3140124
"^DD",162.7,162.793,2,0)
OLD VALUE^FOI^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",162.7,162.793,2,2)
S Y(0)=Y D OUTX^FBUCAUD
"^DD",162.7,162.793,2,2.1)
D OUTX^FBUCAUD
"^DD",162.7,162.793,2,3)
Enter old value of field.
"^DD",162.7,162.793,2,21,0)
^^1^1^3140123^
"^DD",162.7,162.793,2,21,1,0)
This field is automatically populated by the software.
"^DD",162.7,162.793,2,"DT")
3140123
"^DD",162.7,162.793,3,0)
NEW VALUE^FOI^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",162.7,162.793,3,2)
S Y(0)=Y D OUTX^FBUCAUD
"^DD",162.7,162.793,3,2.1)
D OUTX^FBUCAUD
"^DD",162.7,162.793,3,3)
Enter new value of field.
"^DD",162.7,162.793,3,21,0)
^^1^1^3140123^
"^DD",162.7,162.793,3,21,1,0)
This field is automatically populated by the software.
"^DD",162.7,162.793,3,"DT")
3140123
"^DD",162.7,162.793,4,0)
CHANGED BY^P200'I^VA(200,^0;5^Q
"^DD",162.7,162.793,4,3)
Enter person that changed the field value.
"^DD",162.7,162.793,4,21,0)
^^1^1^3140123^
"^DD",162.7,162.793,4,21,1,0)
This field is automatically populated by the software.
"^DD",162.7,162.793,4,"DT")
3140123
"BLD",9502,6)
^129
**END**
**END**

