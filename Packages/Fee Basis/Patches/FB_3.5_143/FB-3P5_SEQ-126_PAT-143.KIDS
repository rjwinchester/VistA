Released FB*3.5*143 SEQ #126
Extracted from mail message
**KIDS**:FB*3.5*143^

**INSTALL NAME**
FB*3.5*143
"BLD",9721,0)
FB*3.5*143^FEE BASIS^0^3140812^y
"BLD",9721,1,0)
^^9^9^3130201^
"BLD",9721,1,1,0)
This patch addresses the following:
"BLD",9721,1,2,0)
- Modifies logic when applying the "Mill-Bill" claims 70% reduction when 
"BLD",9721,1,3,0)
  local fee schedule (75th percentile) rates are used.
"BLD",9721,1,4,0)
- Changes the fee program for ancillary payments entered using [FBCH
"BLD",9721,1,5,0)
   MULTIPLE PAYMENTS] option from "outpatient" to "civil hospital"
"BLD",9721,1,6,0)
- Modifies the sort and print routines for Veteran Payment History report
"BLD",9721,1,7,0)
   to display the '#' symbol for voided payments.
"BLD",9721,1,8,0)
- Modifies the Fee Basis payment system to allow users holding the   
"BLD",9721,1,9,0)
   "FBAASUPERVISOR" key to exceed the amount of billed charges.
"BLD",9721,4,0)
^9.64PA^162^1
"BLD",9721,4,162,0)
162
"BLD",9721,4,162,2,0)
^9.641^162.03^1
"BLD",9721,4,162,2,162.03,0)
SERVICE PROVIDED  (sub-file)
"BLD",9721,4,162,2,162.03,1,0)
^9.6411^2^1
"BLD",9721,4,162,2,162.03,1,2,0)
AMOUNT PAID
"BLD",9721,4,162,222)
y^y^p^^^^n^^n
"BLD",9721,4,162,224)

"BLD",9721,4,"APDD",162,162.03)

"BLD",9721,4,"APDD",162,162.03,2)

"BLD",9721,4,"B",162,162)

"BLD",9721,6)
7^
"BLD",9721,6.3)
20
"BLD",9721,"ABPKG")
n
"BLD",9721,"KRN",0)
^9.67PA^779.2^20
"BLD",9721,"KRN",.4,0)
.4
"BLD",9721,"KRN",.401,0)
.401
"BLD",9721,"KRN",.402,0)
.402
"BLD",9721,"KRN",.402,"NM",0)
^9.68A^^
"BLD",9721,"KRN",.403,0)
.403
"BLD",9721,"KRN",.5,0)
.5
"BLD",9721,"KRN",.84,0)
.84
"BLD",9721,"KRN",3.6,0)
3.6
"BLD",9721,"KRN",3.8,0)
3.8
"BLD",9721,"KRN",9.2,0)
9.2
"BLD",9721,"KRN",9.8,0)
9.8
"BLD",9721,"KRN",9.8,"NM",0)
^9.68A^10^8
"BLD",9721,"KRN",9.8,"NM",1,0)
FBAACO0^^0^B34388675
"BLD",9721,"KRN",9.8,"NM",2,0)
FBAACO3^^0^B55803171
"BLD",9721,"KRN",9.8,"NM",4,0)
FBAAMP^^0^B64651581
"BLD",9721,"KRN",9.8,"NM",6,0)
FBPAY21^^0^B16369927
"BLD",9721,"KRN",9.8,"NM",7,0)
FBPAY67^^0^B41631569
"BLD",9721,"KRN",9.8,"NM",8,0)
FBAAUTL2^^0^B19718250
"BLD",9721,"KRN",9.8,"NM",9,0)
FBAACP^^0^B47546031
"BLD",9721,"KRN",9.8,"NM",10,0)
FBAAFS^^0^B29211943
"BLD",9721,"KRN",9.8,"NM","B","FBAACO0",1)

"BLD",9721,"KRN",9.8,"NM","B","FBAACO3",2)

"BLD",9721,"KRN",9.8,"NM","B","FBAACP",9)

"BLD",9721,"KRN",9.8,"NM","B","FBAAFS",10)

"BLD",9721,"KRN",9.8,"NM","B","FBAAMP",4)

"BLD",9721,"KRN",9.8,"NM","B","FBAAUTL2",8)

"BLD",9721,"KRN",9.8,"NM","B","FBPAY21",6)

"BLD",9721,"KRN",9.8,"NM","B","FBPAY67",7)

"BLD",9721,"KRN",19,0)
19
"BLD",9721,"KRN",19.1,0)
19.1
"BLD",9721,"KRN",101,0)
101
"BLD",9721,"KRN",409.61,0)
409.61
"BLD",9721,"KRN",771,0)
771
"BLD",9721,"KRN",779.2,0)
779.2
"BLD",9721,"KRN",870,0)
870
"BLD",9721,"KRN",8989.51,0)
8989.51
"BLD",9721,"KRN",8989.52,0)
8989.52
"BLD",9721,"KRN",8994,0)
8994
"BLD",9721,"KRN","B",.4,.4)

"BLD",9721,"KRN","B",.401,.401)

"BLD",9721,"KRN","B",.402,.402)

"BLD",9721,"KRN","B",.403,.403)

"BLD",9721,"KRN","B",.5,.5)

"BLD",9721,"KRN","B",.84,.84)

"BLD",9721,"KRN","B",3.6,3.6)

"BLD",9721,"KRN","B",3.8,3.8)

"BLD",9721,"KRN","B",9.2,9.2)

"BLD",9721,"KRN","B",9.8,9.8)

"BLD",9721,"KRN","B",19,19)

"BLD",9721,"KRN","B",19.1,19.1)

"BLD",9721,"KRN","B",101,101)

"BLD",9721,"KRN","B",409.61,409.61)

"BLD",9721,"KRN","B",771,771)

"BLD",9721,"KRN","B",779.2,779.2)

"BLD",9721,"KRN","B",870,870)

"BLD",9721,"KRN","B",8989.51,8989.51)

"BLD",9721,"KRN","B",8989.52,8989.52)

"BLD",9721,"KRN","B",8994,8994)

"BLD",9721,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",9721,"QUES",0)
^9.62^^
"BLD",9721,"REQB",0)
^9.611^5^5
"BLD",9721,"REQB",1,0)
FB*3.5*8^2
"BLD",9721,"REQB",2,0)
FB*3.5*124^2
"BLD",9721,"REQB",3,0)
FB*3.5*70^2
"BLD",9721,"REQB",4,0)
FB*3.5*101^2
"BLD",9721,"REQB",5,0)
FB*3.5*115^2
"BLD",9721,"REQB","B","FB*3.5*101",4)

"BLD",9721,"REQB","B","FB*3.5*115",5)

"BLD",9721,"REQB","B","FB*3.5*124",2)

"BLD",9721,"REQB","B","FB*3.5*70",3)

"BLD",9721,"REQB","B","FB*3.5*8",1)

"FIA",162)
FEE BASIS PAYMENT
"FIA",162,0)
^FBAAC(
"FIA",162,0,0)
162P
"FIA",162,0,1)
y^y^p^^^^n^^n
"FIA",162,0,10)

"FIA",162,0,11)

"FIA",162,0,"RLRO")

"FIA",162,0,"VR")
3.5^FB
"FIA",162,162)
1
"FIA",162,162.03)
1
"FIA",162,162.03,2)

"MBREQ")
0
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",60,20,0)
^9.402P^^0
"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5^2950130^2950313
"PKG",60,22,1,"PAH",1,0)
143^3140812^12222
"PKG",60,22,1,"PAH",1,1,0)
^^9^9^3140812
"PKG",60,22,1,"PAH",1,1,1,0)
This patch addresses the following:
"PKG",60,22,1,"PAH",1,1,2,0)
- Modifies logic when applying the "Mill-Bill" claims 70% reduction when 
"PKG",60,22,1,"PAH",1,1,3,0)
  local fee schedule (75th percentile) rates are used.
"PKG",60,22,1,"PAH",1,1,4,0)
- Changes the fee program for ancillary payments entered using [FBCH
"PKG",60,22,1,"PAH",1,1,5,0)
   MULTIPLE PAYMENTS] option from "outpatient" to "civil hospital"
"PKG",60,22,1,"PAH",1,1,6,0)
- Modifies the sort and print routines for Veteran Payment History report
"PKG",60,22,1,"PAH",1,1,7,0)
   to display the '#' symbol for voided payments.
"PKG",60,22,1,"PAH",1,1,8,0)
- Modifies the Fee Basis payment system to allow users holding the   
"PKG",60,22,1,"PAH",1,1,9,0)
   "FBAASUPERVISOR" key to exceed the amount of billed charges.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","FBAACO0")
0^1^B34388675^B32636065
"RTN","FBAACO0",1,0)
FBAACO0 ;AISC/GRR-DISPLAY PATIENT ADDRESS DATA AND EDIT ; 10/31/12 2:58pm
"RTN","FBAACO0",2,0)
 ;;3.5;FEE BASIS;**4,38,52,57,61,75,70,143**;JAN 30, 1995;Build 20
"RTN","FBAACO0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAACO0",4,0)
 S FBMST=$S(FBTT=1:"Y",1:""),FBTTYPE="A",FBFDC=""
"RTN","FBAACO0",5,0)
 N FBEDPTAD S (FBEDPTAD(1),FBEDPTAD(2))=0
"RTN","FBAACO0",6,0)
 W @IOF,"Patient:  ",$P(^DPT(DFN,0),"^") S (Y(0),HY(0))=$G(^DPT(DFN,.11)) I Y(0)="" W !,*7,"No Address information for this patient!" G EDIT
"RTN","FBAACO0",7,0)
 S VAPA("P")="" D ADD^VADPT
"RTN","FBAACO0",8,0)
 S FBEDPTAD(1)=$$ISCCADR()
"RTN","FBAACO0",9,0)
 S FBEDPTAD(2)="N"
"RTN","FBAACO0",10,0)
 I $$CCADR(2)
"RTN","FBAACO0",11,0)
 W !!,"Patient's Permanent address:"
"RTN","FBAACO0",12,0)
 F Z=1:1:3 I VAPA(Z)]"" W !?2,"Address Line ",Z,":",?18,VAPA(Z)
"RTN","FBAACO0",13,0)
 W !?2,"City:",?18,VAPA(4),!?2,"State:",?18,$P(VAPA(5),U,2)
"RTN","FBAACO0",14,0)
 W !?2,"Zip:",?18,$S(+$G(VAPA(11)):$P(VAPA(11),U,2),1:VAPA(6)),!?2,"County",?18,$P(VAPA(7),U,2)
"RTN","FBAACO0",15,0)
 K VAPA,VAERR
"RTN","FBAACO0",16,0)
RD W ! S DIR("A")="Want to edit Permanent Address data",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR  S:Y&('$D(DIRUT)) FBEDPTAD(2)="Y" G EDIT
"RTN","FBAACO0",17,0)
 Q
"RTN","FBAACO0",18,0)
EDIT I $G(FBEDPTAD(2))'="N" W !! S HY(0)=$G(^DPT(DFN,.11)) D EN^DGREGAED(DFN)
"RTN","FBAACO0",19,0)
 I $$EDTCCADR()=0 I FBTT'=1 I FBEDPTAD(2)="N" Q
"RTN","FBAACO0",20,0)
MRA I FBTT=1!($G(^DPT(DFN,.11))'=$G(HY(0))) S FBD1=FTP D ENT^FBAAAUT K FBD1
"RTN","FBAACO0",21,0)
 Q
"RTN","FBAACO0",22,0)
FEE ;calculates amount paid based on fee schedule
"RTN","FBAACO0",23,0)
 N FB1725
"RTN","FBAACO0",24,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAACO0",25,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAACO0",26,0)
 S FBFY=FY-1
"RTN","FBAACO0",27,0)
 S (FBFSAMT,FBFSUSD)="",FBAMTPD=$S($G(FBAMTPD)>0:FBAMTPD,1:"")
"RTN","FBAACO0",28,0)
 ; if amount not passed then use fee schedule
"RTN","FBAACO0",29,0)
 I '$G(FBAMTPD) D
"RTN","FBAACO0",30,0)
 . N FBX
"RTN","FBAACO0",31,0)
 .; FB*3.5*143 Adding FB1725 as a parameter to prevent incorrect
"RTN","FBAACO0",32,0)
 .; reductions in local fee schedule pricing.
"RTN","FBAACO0",33,0)
 . S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME),$G(FB1725))
"RTN","FBAACO0",34,0)
 . ;
"RTN","FBAACO0",35,0)
 . I '$G(FBAAMM1) D
"RTN","FBAACO0",36,0)
 . . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACO0",37,0)
 . E  W !?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACO0",38,0)
 . ;
"RTN","FBAACO0",39,0)
 . I $P($G(FBX),U)]"" D
"RTN","FBAACO0",40,0)
 . . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACO0",41,0)
 . . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACO0",42,0)
 . . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACO0",43,0)
 . . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACO0",44,0)
 . E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAACO0",45,0)
 . ;
"RTN","FBAACO0",46,0)
 . ; FB*3.5*143 - Preventing 70% reduction of 75th percentile rates
"RTN","FBAACO0",47,0)
 . I FB1725,FBFSUSD'="F" D
"RTN","FBAACO0",48,0)
 . . W !!?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAACO0",49,0)
 . . I FBFSAMT D
"RTN","FBAACO0",50,0)
 . . . S FBFSAMT=$J(FBFSAMT*.7,0,2)
"RTN","FBAACO0",51,0)
 . . . W !?2,"  Therefore, fee schedule amount reduced to $",FBFSAMT," (70%)."
"RTN","FBAACO0",52,0)
 . ;
"RTN","FBAACO0",53,0)
 . I $G(FBUNITS)>1 D
"RTN","FBAACO0",54,0)
 . . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAACO0",55,0)
 . . Q:FBFSAMT'>0
"RTN","FBAACO0",56,0)
 . . N FBFSUNIT
"RTN","FBAACO0",57,0)
 . . ; determine if fee schedule can be multiplied by units
"RTN","FBAACO0",58,0)
 . . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBAADT>3040930):1,1:0)
"RTN","FBAACO0",59,0)
 . . I FBFSUNIT D
"RTN","FBAACO0",60,0)
 . . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAACO0",61,0)
 . . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAACO0",62,0)
 . . E  D
"RTN","FBAACO0",63,0)
 . . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted for units."
"RTN","FBAACO0",64,0)
 . ;
"RTN","FBAACO0",65,0)
 . I '$G(FBAAMM1) D
"RTN","FBAACO0",66,0)
 . . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAACO0",67,0)
 . . S FBAMTPD=$S(FBFSAMT>J:J,FBFSAMT>0:FBFSAMT,1:"")
"RTN","FBAACO0",68,0)
 . ;
"RTN","FBAACO0",69,0)
 . W !
"RTN","FBAACO0",70,0)
 ;
"RTN","FBAACO0",71,0)
AMTPD W !,"AMOUNT PAID: "_$S(FBAMTPD]"":FBAMTPD_"//",1:"") R X:DTIME S:X="" X=FBAMTPD G KILL:$E(X)="^",HELP1:$E(X)="?" S:X["$" X=$P(X,"$",2) I +X'=X&(X'?.N.1".".2N)!(+X<0) G HELPPD
"RTN","FBAACO0",72,0)
 I FBAMTPD]"",X>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) D  G AMTPD
"RTN","FBAACO0",73,0)
 .W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' key to",!,"exceed the Fee Schedule. Entering an up-arrow ('^') will",!,"delete the payment or you can accept the default.",!
"RTN","FBAACO0",74,0)
 S FBAMTPD=X Q
"RTN","FBAACO0",75,0)
KILL W !!,*7,"Entering an '^' will delete this payment!" R !,?5,"Do you want to delete? No//",X:DTIME S:X="" X="N" D VALCK^FBAAUTL1 G KILL:'VAL,AMTPD:"Nn"[$E(X)
"RTN","FBAACO0",76,0)
 S DIK="^FBAAC("_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1," D WAIT^DICD,^DIK W !,?3,"<DELETED>" K DA,J,K,DIC,DIK,FBAACP,FBAADT,FBX S Y=0,FBDL=1 Q
"RTN","FBAACO0",77,0)
HELP1 W !!,"Enter a dollar amount that does not exceed the amount claimed.",!,"Entering an '^' will delete the payment.",!
"RTN","FBAACO0",78,0)
 I FBAMTPD>0 W !,"Only the holder of the 'FBAASUPERVISOR' key may exceed the",!,"Fee Schedule.",!
"RTN","FBAACO0",79,0)
 G AMTPD
"RTN","FBAACO0",80,0)
HELPPD W !!,*7,"Enter a dollar amount that does not exceed the amount claimed.",! G AMTPD
"RTN","FBAACO0",81,0)
 Q
"RTN","FBAACO0",82,0)
 ;print Confidential Communication address
"RTN","FBAACO0",83,0)
 ;ADD^VADPT must be invoked before this call
"RTN","FBAACO0",84,0)
 ;FBDFN -patient's DFN
"RTN","FBAACO0",85,0)
 ;FBSTPOS - position to start print
"RTN","FBAACO0",86,0)
 ;returns 0 if there is no active CC address
"RTN","FBAACO0",87,0)
 ;returns 1 if active
"RTN","FBAACO0",88,0)
CCADR(FBSTPOS) ;
"RTN","FBAACO0",89,0)
 N FBACT
"RTN","FBAACO0",90,0)
 S FBACT=0
"RTN","FBAACO0",91,0)
 I '$D(VAPA(12)) Q 0  ;if D ADD^VADPT was not invoked before
"RTN","FBAACO0",92,0)
 I 'VAERR D
"RTN","FBAACO0",93,0)
 . S FBACT=$$ACTIVECC()
"RTN","FBAACO0",94,0)
 . Q:'FBACT
"RTN","FBAACO0",95,0)
 . W !!,"Confidential Communication address until: "_$P($G(VAPA(21)),U,2)
"RTN","FBAACO0",96,0)
 . I $G(VAPA(13))]"" W !?FBSTPOS,"Line 1: ",$G(VAPA(13))
"RTN","FBAACO0",97,0)
 . I $G(VAPA(14))]"" W " Line 2: ",$G(VAPA(14))
"RTN","FBAACO0",98,0)
 . I $G(VAPA(15))]"" W !?FBSTPOS,"Line 3: ",$G(VAPA(15))
"RTN","FBAACO0",99,0)
 . W !?FBSTPOS,"City:",?9,$S($G(VAPA(16))]"":$G(VAPA(16)),1:"     ")
"RTN","FBAACO0",100,0)
 . W ?40,"State:",?47,$S($P($G(VAPA(17)),U,2)]"":$P($G(VAPA(17)),U,2),1:"  ")
"RTN","FBAACO0",101,0)
 . W !?FBSTPOS,"Zip:",?9,$P($G(VAPA(18)),U,2)
"RTN","FBAACO0",102,0)
 . W ?20,"County:",?28,$P($G(VAPA(19)),U,2)
"RTN","FBAACO0",103,0)
 Q $G(FBACT)
"RTN","FBAACO0",104,0)
 ;
"RTN","FBAACO0",105,0)
 ;is called after ADD^VADPT to verify whether confidential address is 
"RTN","FBAACO0",106,0)
 ;active or not to encapsulate the logic related to status of CC address
"RTN","FBAACO0",107,0)
 ;input:  VAPA
"RTN","FBAACO0",108,0)
ACTIVECC() ;
"RTN","FBAACO0",109,0)
 Q (+$G(VAPA(12))=1)&($P($G(VAPA(22,3)),"^",3)="Y")
"RTN","FBAACO0",110,0)
 ;
"RTN","FBAACO0",111,0)
 ;edit confidential address
"RTN","FBAACO0",112,0)
 ;returns 1 if CC address has been edited
"RTN","FBAACO0",113,0)
 ;otherwise - 0
"RTN","FBAACO0",114,0)
EDTCCADR() ;
"RTN","FBAACO0",115,0)
 Q:'$G(DFN) 0
"RTN","FBAACO0",116,0)
 I FBEDPTAD(1)=0 D
"RTN","FBAACO0",117,0)
 . N VAPA S VAPA("P")="" D ADD^VADPT S FBEDPTAD(1)=$$ISCCADR()
"RTN","FBAACO0",118,0)
 I FBEDPTAD(1)'="N" D
"RTN","FBAACO0",119,0)
 . W:FBEDPTAD(1)'="B" !!,"WARNING: The Confidential address is NOT active for the Billing Category."
"RTN","FBAACO0",120,0)
 . S DIR("A")="Want to edit Confidential Address data"
"RTN","FBAACO0",121,0)
 E  S DIR("A")="Want to add Confidential Address data"
"RTN","FBAACO0",122,0)
 W ! S DIR("B")="No",DIR(0)="Y"
"RTN","FBAACO0",123,0)
 D ^DIR K DIR
"RTN","FBAACO0",124,0)
 Q:($D(DIRUT)) 0
"RTN","FBAACO0",125,0)
 ;Registration API
"RTN","FBAACO0",126,0)
 I Y D QUES^DGRPU1(+DFN,"ADD4") Q 1
"RTN","FBAACO0",127,0)
 Q 0
"RTN","FBAACO0",128,0)
 ;
"RTN","FBAACO0",129,0)
 ;returns "B" if patient has any (active or inactive) CC address and billing category
"RTN","FBAACO0",130,0)
 ;returns "Y" if patient has any (active or inactive) CC address with another category
"RTN","FBAACO0",131,0)
 ;otherwise returns "N"
"RTN","FBAACO0",132,0)
ISCCADR() ;
"RTN","FBAACO0",133,0)
 Q:($P($G(VAPA(22,3)),"^",3)="Y") "B"
"RTN","FBAACO0",134,0)
 Q:'$O(VAPA(22,0)) "N"
"RTN","FBAACO0",135,0)
 Q "Y"
"RTN","FBAACO0",136,0)
 ;
"RTN","FBAACO0",137,0)
 ;FBAACO0
"RTN","FBAACO3")
0^2^B55803171^B55394363
"RTN","FBAACO3",1,0)
FBAACO3 ;AISC/GRR-ENTER PAYMENT CONTINUED ; 10/31/12 2:56pm
"RTN","FBAACO3",2,0)
 ;;3.5;FEE BASIS;**4,38,55,61,116,122,133,108,124,143**;JAN 30, 1995;Build 20
"RTN","FBAACO3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAACO3",4,0)
DOEDIT ;
"RTN","FBAACO3",5,0)
 N FB1725,FBFPPSC
"RTN","FBAACO3",6,0)
 W ! S FBAACP(0)=FBAACP
"RTN","FBAACO3",7,0)
 S DIC="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAACO3",8,0)
 S DIC(0)="EQMZ",DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI
"RTN","FBAACO3",9,0)
 S X=$$CPT^FBAAUTL4(FBAACP)
"RTN","FBAACO3",10,0)
 D ^DIC I Y<0 S FBAAOUT=1 Q
"RTN","FBAACO3",11,0)
 S (DA,FBAACPI)=+Y,K=$P(Y(0),U,3),FBZBN=$P(Y(0),U,8),FBZBS=$S(FBZBN]"":$P($G(^FBAA(161.7,FBZBN,"ST")),U),1:""),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBAACO3",12,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBAACO3",13,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBAACO3",14,0)
 S FBAAMM1=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,2)),U,2)
"RTN","FBAACO3",15,0)
 S FBCNTRP=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,3)),U,8)
"RTN","FBAACO3",16,0)
 S FBFSAMT(0)=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,2)),U,12)
"RTN","FBAACO3",17,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBAACO3",18,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBAACO3",19,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"_FBAACPI_",""M"")")
"RTN","FBAACO3",20,0)
 ; load current adjustment data
"RTN","FBAACO3",21,0)
 D LOADADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO3",22,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAACO3",23,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAACO3",24,0)
 ; load current remittance remark data
"RTN","FBAACO3",25,0)
 D LOADRR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO3",26,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAACO3",27,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAACO3",28,0)
 ; load FPPS data
"RTN","FBAACO3",29,0)
 S FBFPPSC=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,3)),U)
"RTN","FBAACO3",30,0)
 S FBFPPSL=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,3)),U,2)
"RTN","FBAACO3",31,0)
 I FBZBS=""!(FBZBS="V") D NOGO S FBAAOUT=1 Q
"RTN","FBAACO3",32,0)
 ; first edit CPT code and modifiers
"RTN","FBAACO3",33,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) S FBAAOUT=1 Q
"RTN","FBAACO3",34,0)
 ; if CPT was changed then update file
"RTN","FBAACO3",35,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" S FBAAOUT=1 Q
"RTN","FBAACO3",36,0)
 . N FBIENS,FBFDA
"RTN","FBAACO3",37,0)
 . S FBIENS=FBAACPI_","_FBSDI_","_FBV_","_DFN_","
"RTN","FBAACO3",38,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBAACO3",39,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAACO3",40,0)
 ; if modifiers changed then update file
"RTN","FBAACO3",41,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(DFN,FBV,FBSDI,FBAACPI)
"RTN","FBAACO3",42,0)
 ; now edit remaining fields
"RTN","FBAACO3",43,0)
 D SETO K DR
"RTN","FBAACO3",44,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBAACO3",45,0)
 ; fb*3.5*116 remove edit of interest indicator (162.03,34) to prevent different interest indicator values at line item level; interest indicator set at invoice level only
"RTN","FBAACO3",46,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1,FBCNTRP,1);34///@;34////^S X=FBAAMM1;54///@;54////^S X=FBCNTRP;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAACO3",47,0)
 ;S DR(1,162.03,1)="30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAACO3",48,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBAACO3",49,0)
 ;S DR(1,162.03,3)="3//^S X=$S(J-K:J-K,1:"""");4;S:X'=4 Y=6;22;6////^S X=DUZ;13;33"
"RTN","FBAACO3",50,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBAACO3",51,0)
 S DR(1,162.03,4)="S:FBFPPSC="""" Y=13;W !,""FPPS CLAIM ID: ""_FBFPPSC;S FBX=$$FPPSL^FBUTL5(FBFPPSL,,1);51///^S X=FBX;S FBFPPSL=X;@13;13;I $$BADDATE^FBAACO3(FBAADT,X) S Y=""@13"";33"
"RTN","FBAACO3",52,0)
 S DR(1,162.03,5)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S Y=$S('$D(FB7078):28,FB7078]"""":31,1:28);@5;28R;S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@5"";31;32R;S Y=""@7"";@1;28;I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@1"";31"
"RTN","FBAACO3",53,0)
 S DR(1,162.03,6)="@7;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBAACO3",54,0)
 S DR(1,162.03,7)="73;74;75;58;59;60;61;62;63;64;65;66;67;76;77;78;79;68;69"
"RTN","FBAACO3",55,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DIE("NO^")="",FBOT=1
"RTN","FBAACO3",56,0)
 D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI) I 'FBLOCK S FBAAOUT=1 Q
"RTN","FBAACO3",57,0)
 D ^DIE
"RTN","FBAACO3",58,0)
 ; if adjustment data changed then file
"RTN","FBAACO3",59,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO3",60,0)
 ; if remit remark data changed then file
"RTN","FBAACO3",61,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO3",62,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI) K FBOT,DIE,DR,DA
"RTN","FBAACO3",63,0)
 Q:$D(FBDL)
"RTN","FBAACO3",64,0)
 I $G(FBAAIN) S FBINTOT=0 D CALC
"RTN","FBAACO3",65,0)
 Q
"RTN","FBAACO3",66,0)
 ;
"RTN","FBAACO3",67,0)
BADDATE(FBDOS,INVRCVDT) ;Reject entry if InvRcvDt is Prior to the Date of Service on the Invoice
"RTN","FBAACO3",68,0)
 I INVRCVDT<FBDOS D  Q 1 ;Reject entry
"RTN","FBAACO3",69,0)
 .N SHOWDOS  S SHOWDOS=$E(FBDOS,4,5)_"/"_$E(FBDOS,6,7)_"/"_$E(FBDOS,2,3) ;Convert FBDOS into display format for error message
"RTN","FBAACO3",70,0)
 .W *7,!!?5,"*** Invoice Received Date cannot be prior to the",!?8," Date of Service ("_SHOWDOS_") !!!"
"RTN","FBAACO3",71,0)
 Q 0 ;Accept entry
"RTN","FBAACO3",72,0)
 ;
"RTN","FBAACO3",73,0)
SETO S FY=$E(FBAADT,1,3)+1700+$S($E(FBAADT,4,5)>9:1,1:0)
"RTN","FBAACO3",74,0)
 Q
"RTN","FBAACO3",75,0)
OUT ;
"RTN","FBAACO3",76,0)
 ; FB*3.5*116 count line items that have 0.00 amount paid
"RTN","FBAACO3",77,0)
 ;I K>0 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1,FBINTOT=FBINTOT+K
"RTN","FBAACO3",78,0)
 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1,FBINTOT=FBINTOT+K
"RTN","FBAACO3",79,0)
 Q
"RTN","FBAACO3",80,0)
CKMAX S (FBAOT,A)=0,O="" F Z=S-.1:0 S Z=$O(^FBAAC(DFN,"AB",Z)) Q:Z'>0!(Z>R)  F Q=0:0 S Q=$O(^FBAAC(DFN,"AB",Z,Q)) Q:Q'>0  S W=$O(^FBAAC(DFN,"AB",Z,Q,0)) I $D(^FBAAC(DFN,1,Q,1,W,0)) D SMORE
"RTN","FBAACO3",81,0)
 I A>$P(FBSITE(1),"^",9) G NO
"RTN","FBAACO3",82,0)
 Q
"RTN","FBAACO3",83,0)
SMORE N FBA,FBB S FBB=$P($G(^FBAAC(+DFN,1,+Q,1,+W,0)),U,4),E=0
"RTN","FBAACO3",84,0)
 F  S E=$O(^FBAAC(DFN,1,Q,1,W,1,E)) Q:'E  S FBA=$G(^(E,0)) I $P(FBA,"^",9)=2,$P(FBA,"^",18)'=1 D
"RTN","FBAACO3",85,0)
 .I $$IDCHK^FBAAUTL3(DFN,FBB) S A=A+$P(FBA,"^",3) Q
"RTN","FBAACO3",86,0)
 .S FBAOT=FBAOT+$P(FBA,U,3)
"RTN","FBAACO3",87,0)
 Q
"RTN","FBAACO3",88,0)
NO W !!,*7,"Warning Patient already at maximum allowed for month of service",! Q
"RTN","FBAACO3",89,0)
WARN W !!,*7,"You have reached the maximum number of payments for a Batch!",!,"You must select another Batch for entering Payments!"
"RTN","FBAACO3",90,0)
CALC ;Calculate Current Invoice Total
"RTN","FBAACO3",91,0)
 F J=0:0 S J=$O(^FBAAC("C",FBAAIN,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("C",FBAAIN,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("C",FBAAIN,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("C",FBAAIN,J,K,L,M)) Q:M'>0  D CALC1
"RTN","FBAACO3",92,0)
 K J,K,L,M,FZNODE Q
"RTN","FBAACO3",93,0)
CALC1 S FZNODE=^FBAAC(J,1,K,1,L,1,M,0),A2=$P(FZNODE,"^",3),FBINTOT=FBINTOT+A2,FBAAID=$P(FZNODE,"^",15),FBAAVID=$P($G(^FBAAC(J,1,K,1,L,1,M,2)),"^")
"RTN","FBAACO3",94,0)
 Q
"RTN","FBAACO3",95,0)
FEEDT ;
"RTN","FBAACO3",96,0)
 ;FB*3.5*143 Adding FB1725 as a parameter to prevent incorrect
"RTN","FBAACO3",97,0)
 ; reductions in local fee schedule pricing.
"RTN","FBAACO3",98,0)
 ; input FB1725 - true (=1) when edited payment is for a Mill Bill claim.
"RTN","FBAACO3",99,0)
 N FBX
"RTN","FBAACO3",100,0)
 D SETO:'$G(FY) S FBFY=FY-1
"RTN","FBAACO3",101,0)
 S (FBFSAMT,FBFSUSD)="",FBAMTPD=$G(FBAMTPD)
"RTN","FBAACO3",102,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME),$G(FB1725))
"RTN","FBAACO3",103,0)
 I '$G(FBAAMM1) D
"RTN","FBAACO3",104,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACO3",105,0)
 E  D
"RTN","FBAACO3",106,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACO3",107,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAACO3",108,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACO3",109,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACO3",110,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACO3",111,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACO3",112,0)
 E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAACO3",113,0)
 ;
"RTN","FBAACO3",114,0)
 I FB1725 D
"RTN","FBAACO3",115,0)
 . W !!?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAACO3",116,0)
 . I FBFSAMT D
"RTN","FBAACO3",117,0)
 . . S FBFSAMT=$J(FBFSAMT*.7,0,2)
"RTN","FBAACO3",118,0)
 . . W !?2,"  Therefore, fee schedule amount reduced to $",FBFSAMT," (70%)."
"RTN","FBAACO3",119,0)
 ;
"RTN","FBAACO3",120,0)
 I $G(FBUNITS)>1 D
"RTN","FBAACO3",121,0)
 . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAACO3",122,0)
 . Q:FBFSAMT'>0
"RTN","FBAACO3",123,0)
 . N FBFSUNIT
"RTN","FBAACO3",124,0)
 . ; determine if fee schedule can be multiplied by units
"RTN","FBAACO3",125,0)
 . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBAADT>3040930):1,1:0)
"RTN","FBAACO3",126,0)
 . I FBFSUNIT D
"RTN","FBAACO3",127,0)
 . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAACO3",128,0)
 . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAACO3",129,0)
 . E  D
"RTN","FBAACO3",130,0)
 . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted by units."
"RTN","FBAACO3",131,0)
 ;
"RTN","FBAACO3",132,0)
 I '$G(FBAAMM1) D
"RTN","FBAACO3",133,0)
 . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAACO3",134,0)
 . S FBAMTPD=$S(FBFSAMT'>0:J,FBFSAMT>J:J,1:FBFSAMT)
"RTN","FBAACO3",135,0)
 W !
"RTN","FBAACO3",136,0)
 Q
"RTN","FBAACO3",137,0)
CHKIT I X>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,"You must be a holder of the 'FBAASUPERVISOR' security key in order to",!,"exceed the Fee Schedule.",! S $P(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,0),"^",3)=K,Y=2 Q
"RTN","FBAACO3",138,0)
 Q
"RTN","FBAACO3",139,0)
NOGO W !!,*7,"This payment CANNOT be edited.  The batch the payment is in",!,"has been Vouchered.  You may void the payment with the Void Payment option.",!
"RTN","FBAACO3",140,0)
 Q
"RTN","FBAACO3",141,0)
 ;
"RTN","FBAACO3",142,0)
SC W *7,!?4,"Suspense code is required!",! S Y="@4" Q
"RTN","FBAACO3",143,0)
 ;
"RTN","FBAACO3",144,0)
DEL ;delete date of service if no service provided entered
"RTN","FBAACO3",145,0)
 I '$O(^FBAAC(DFN,1,FBV,1,FBSDI,1,0)) D
"RTN","FBAACO3",146,0)
 .S DIK="^FBAAC(DFN,1,FBV,1,",DA(2)=DFN,DA(1)=FBV,DA=FBSDI D ^DIK W !!?5,*7,"Incomplete payment entry deleted.",!
"RTN","FBAACO3",147,0)
 K DIK,DA Q
"RTN","FBAACP")
0^9^B47546031^B46974663
"RTN","FBAACP",1,0)
FBAACP ;AISC/CMR - C&P PAYMENT DRIVER ; 10/31/12 3:08pm
"RTN","FBAACP",2,0)
 ;;3.5;FEE BASIS;**4,38,55,61,77,108,143**;JAN 30, 1995;Build 20
"RTN","FBAACP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAACP",4,0)
 K FBAAOUT,FBPOP S FBCNP=1 ;C&P flag
"RTN","FBAACP",5,0)
 D SITE^FBAACO G Q:$G(FBPOP) D BT^FBAACO G Q:$G(FBAAOUT)
"RTN","FBAACP",6,0)
1 K FBAR,FBAAOUT,FBDL,FBAAMM D GETVEN1^FBAACO1:$D(FB583),GETVEN^FBAACO1:'$D(FB583) G CLN:$G(FBAAOUT)
"RTN","FBAACP",7,0)
 D GETINV^FBAACO1 G CLN:$G(FBAAOUT)
"RTN","FBAACP",8,0)
 D GETINDT^FBAACO1 G CLN:$G(FBAAOUT)
"RTN","FBAACP",9,0)
 D MMPPT^FBAACP G CLN:$G(FBAAOUT)
"RTN","FBAACP",10,0)
SVDT W !! S %DT="AEXP",%DT("A")="Date of Service: " D ^%DT I X="^" G CLN
"RTN","FBAACP",11,0)
 I Y<0!(Y>FBAAID) W *7,!!,"Enter the date the Vendor provided the service to the Patient.",!,"The date must be prior to the date the invoice is received.",! G SVDT
"RTN","FBAACP",12,0)
 S FBAADT=Y D SETO^FBAACO3,CPTM^FBAALU(FBAADT) I 'FBGOT G CLN
"RTN","FBAACP",13,0)
 ; prompt revenue code
"RTN","FBAACP",14,0)
 S FBAARC=$$ASKREVC^FBUTL5() I FBAARC="^" S FBAAOUT=1 G CLN
"RTN","FBAACP",15,0)
 ; prompt units paid
"RTN","FBAACP",16,0)
 S FBUNITS=$$ASKUNITS^FBUTL5() I FBUNITS="^" S FBAAOUT=1 G CLN
"RTN","FBAACP",17,0)
 D ASKZIP^FBAAFS($G(FBV),$G(FBAADT)) I $G(FBAAOUT)!($G(FBZIP)']"") G CLN
"RTN","FBAACP",18,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) D ASKTIME^FBAAFS I $G(FBAAOUT)!('$G(FBTIME)) G CLN
"RTN","FBAACP",19,0)
 D HCFA G CLN:$G(FBAAOUT)
"RTN","FBAACP",20,0)
 S FBAAAMT=0 D AMTPD I $G(FBAAOUT)!('$G(FBAAAMT)) G CLN
"RTN","FBAACP",21,0)
 ; prompt for remittance remarks
"RTN","FBAACP",22,0)
 I $$RR^FBUTL4(.FBRRMK,2)=0 S FBAAOUT=1 G CLN
"RTN","FBAACP",23,0)
MULT ;begin unique patient entry
"RTN","FBAACP",24,0)
 W:FBINTOT>0 !,"Invoice: "_FBAAIN_" Totals: $ "_FBINTOT
"RTN","FBAACP",25,0)
 K FBAAOUT,FBDL S (DFN,FTP)="" D SITE^FBAACO G Q:$G(FBPOP) W !!
"RTN","FBAACP",26,0)
 I '$D(FB583) K FBDL D GETVET^FBAAUTL1 G CLN:'DFN K FBDMRA D GETAUTH^FBAAUTL1 G MULT:FTP']""
"RTN","FBAACP",27,0)
 ; check contract
"RTN","FBAACP",28,0)
 I $G(FBAAPTC)'="R",'$D(FB583),$$UCFA^FBUTL7($G(FBV),$G(FBVEN),$G(FBCNTRA)),FBCNTRP'=FBCNTRA D  G MULT
"RTN","FBAACP",29,0)
 . W !,"ERROR: Contract specified for payments (",$S(FBCNTRP:$P($G(^FBAA(161.43,FBCNTRP,0)),U),1:""),") doesn't"
"RTN","FBAACP",30,0)
 . W !,"match contract specified by this authorization (",$S(FBCNTRA:$P($G(^FBAA(161.43,FBCNTRA,0)),U),1:""),")."
"RTN","FBAACP",31,0)
 K FBAAOUT D  G Q:$G(FBAAOUT)
"RTN","FBAACP",32,0)
 . N ICDVDT S ICDVDT=$G(FBAADT)
"RTN","FBAACP",33,0)
 . F  D  Q:$G(FBAAOUT)  Q:($$INPICD9^FBCSV1(+$G(Y),"",$G(FBAADT))=0)
"RTN","FBAACP",34,0)
 . . S I=28,DIR(0)="PO^80:EMQZ",DIR("A")="PRIMARY DIAGNOSIS" D DIR
"RTN","FBAACP",35,0)
 D PAT^FBAACO W !! D FILEV^FBAACO5(DFN,FBV) I $G(FBAAOUT) G Q:$D(FB583),CLN
"RTN","FBAACP",36,0)
 ;check for payments against all linked vendors
"RTN","FBAACP",37,0)
 S DA=+Y D CHK^FBAACO4 K FBAACK1,FBAAOUT,DA,X,Y
"RTN","FBAACP",38,0)
 W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,0,FBAADT) I $G(FBAAOUT) D AUTHQ^FBAACO G MULT
"RTN","FBAACP",39,0)
 D SETO^FBAACO3,CHK2^FBAACO4 I FBJ']"" G SVPR
"RTN","FBAACP",40,0)
CHKE ;determines what action to take on duplicate services entered
"RTN","FBAACP",41,0)
 K FBAAOUT W !!,*7,"Service selected for that date already in system."
"RTN","FBAACP",42,0)
 S DIR(0)="Y",DIR("A")="Do you want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G SVPR:Y I $D(DIRUT) D DEL^FBAACO3 G Q
"RTN","FBAACP",43,0)
 W !!,*7,"You must use the 'EDIT PAYMENT' option to edit the service previously",!,"entered for that date." D DEL^FBAACO3
"RTN","FBAACP",44,0)
 G MULT
"RTN","FBAACP",45,0)
SVPR K FBAAOUT D SVCPR^FBAACO1 G CHKE:$G(FBAAOUT)
"RTN","FBAACP",46,0)
 D FILE^FBAACP1 I Z1>(FBAAMPI-1) W !!,*7,"You have reached the maximum number of payments for a batch!",!,"You must select another Batch for entering Payments!" G CLN
"RTN","FBAACP",47,0)
 G MULT
"RTN","FBAACP",48,0)
Q ;kill variables and exit
"RTN","FBAACP",49,0)
 D Q^FBAACO
"RTN","FBAACP",50,0)
 Q
"RTN","FBAACP",51,0)
AMTPD ;get amount paid
"RTN","FBAACP",52,0)
 ; FB*3.5*143 - Added FB1725 as a parameter, to prevent inaccurate
"RTN","FBAACP",53,0)
 ; pricing of "Mill-Bill" claims with 75th percentile rates.
"RTN","FBAACP",54,0)
 N FBX
"RTN","FBAACP",55,0)
 S FBFY=FY-1
"RTN","FBAACP",56,0)
 S (FBAMTPD,FBFSAMT,FBFSUSD)=""
"RTN","FBAACP",57,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME),$G(FB1725))
"RTN","FBAACP",58,0)
 ;
"RTN","FBAACP",59,0)
 I '$G(FBAAMM1) D
"RTN","FBAACP",60,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACP",61,0)
 E  D
"RTN","FBAACP",62,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACP",63,0)
 ;
"RTN","FBAACP",64,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAACP",65,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACP",66,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACP",67,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACP",68,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACP",69,0)
 E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAACP",70,0)
 ;
"RTN","FBAACP",71,0)
 I $G(FBUNITS)>1 D
"RTN","FBAACP",72,0)
 . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAACP",73,0)
 . Q:FBFSAMT'>0
"RTN","FBAACP",74,0)
 . N FBFSUNIT
"RTN","FBAACP",75,0)
 . ; determine if fee schedule can be multiplied by units
"RTN","FBAACP",76,0)
 . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBAADT>3040930):1,1:0)
"RTN","FBAACP",77,0)
 . I FBFSUNIT D
"RTN","FBAACP",78,0)
 . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAACP",79,0)
 . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAACP",80,0)
 . E  D
"RTN","FBAACP",81,0)
 . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted by units."
"RTN","FBAACP",82,0)
 ;
"RTN","FBAACP",83,0)
 I '$G(FBAAMM1) S FBAMTPD=FBFSAMT
"RTN","FBAACP",84,0)
 ;
"RTN","FBAACP",85,0)
 I FBAMTPD=0 D  Q:$G(FBAAOUT)
"RTN","FBAACP",86,0)
 . ;if fee schedule = 0 write message and quit
"RTN","FBAACP",87,0)
 . W !,"You must use the Enter Payment option for CPT codes that have a",!,"Fee Schedule set equal to zero."
"RTN","FBAACP",88,0)
 . S FBAAOUT=1
"RTN","FBAACP",89,0)
 W !
"RTN","FBAACP",90,0)
 S DIR(0)="162.03,1",DIR("A")="Enter Amount Paid:  $",DIR("?")="Enter a dollar amount that does not exceed the FEE Schedule" S:FBAMTPD'="" DIR("B")=FBAMTPD D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACP",91,0)
 I $G(FBAMTPD),+Y>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' security key to",!,"exceed the FEE Schedule.  Enter an '^' to quit or accept the default.",! G AMTPD
"RTN","FBAACP",92,0)
 S FBAAAMT=+Y
"RTN","FBAACP",93,0)
 Q
"RTN","FBAACP",94,0)
HCFA ;get HCFA fields
"RTN","FBAACP",95,0)
 F I=28,30,31 S FBHCFA(I)=""
"RTN","FBAACP",96,0)
 W ! F I=30,31 S DIR(0)="P"_$S(I=30:"^353.1",I=31:"O^353.2")_":EMQZ" D DIR Q:$G(FBAAOUT)
"RTN","FBAACP",97,0)
 K DIR Q
"RTN","FBAACP",98,0)
DIR ;generic DIR call for HCFA
"RTN","FBAACP",99,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S FBAAOUT=1 Q
"RTN","FBAACP",100,0)
 S:Y'=-1 FBHCFA(I)=$P(Y,"^")
"RTN","FBAACP",101,0)
 Q
"RTN","FBAACP",102,0)
CLN G Q:$D(FB583)
"RTN","FBAACP",103,0)
 D Q G FBAACP
"RTN","FBAACP",104,0)
 Q
"RTN","FBAACP",105,0)
MMPPT ;money management/prompt pay type for multiple payment entry
"RTN","FBAACP",106,0)
 ; input
"RTN","FBAACP",107,0)
 ;   FBAAPTC = payment type code, "R" when patient reimbursement
"RTN","FBAACP",108,0)
 ;   FBV     = vendor being paid (ien)
"RTN","FBAACP",109,0)
 ;   when called from FBAAMP additional variables will be available
"RTN","FBAACP",110,0)
 ;     FBCNTRA = contract ien from authorization
"RTN","FBAACP",111,0)
 ;     FBVEN   = vendor from authorization
"RTN","FBAACP",112,0)
 ;     FB583   = defined when unauthorized claim
"RTN","FBAACP",113,0)
 ; output
"RTN","FBAACP",114,0)
 ;   FBAAMM  = prompt payment, =1 to ask
"RTN","FBAACP",115,0)
 ;   FBAAMM1 = prompt payment type for line
"RTN","FBAACP",116,0)
 ;   FBAAOUT = (optional), = 1 to quit
"RTN","FBAACP",117,0)
 ;   FBCNTRP = contract for line item (ien)
"RTN","FBAACP",118,0)
 ;
"RTN","FBAACP",119,0)
 S (FBAAMM,FBAAMM1,FBCNTRP)=""
"RTN","FBAACP",120,0)
 I $G(FBAAPTC)'="R",'$D(FB583) D
"RTN","FBAACP",121,0)
 . ;
"RTN","FBAACP",122,0)
 . ; check if contract required by authorization
"RTN","FBAACP",123,0)
 . I '$D(FB583),$$UCFA^FBUTL7($G(FBV),$G(FBVEN),$G(FBCNTRA)) D  Q
"RTN","FBAACP",124,0)
 . . W !,"All lines items on this invoice will be considered as contracted services"
"RTN","FBAACP",125,0)
 . . W !,"under Contract ",$P($G(^FBAA(161.43,FBCNTRA,0)),U)," from the authorization."
"RTN","FBAACP",126,0)
 . . S (FBAAMM,FBAAMM1)=1
"RTN","FBAACP",127,0)
 . . S FBCNTRP=FBCNTRA
"RTN","FBAACP",128,0)
 . ;
"RTN","FBAACP",129,0)
 . ; when not forced by authorization ask if contracted service
"RTN","FBAACP",130,0)
 . W !,"The answer to the following will apply to all payments entered via this option."
"RTN","FBAACP",131,0)
 . S DIR(0)="Y"
"RTN","FBAACP",132,0)
 . S DIR("A")="Are payments for contracted services"
"RTN","FBAACP",133,0)
 . S DIR("B")="No"
"RTN","FBAACP",134,0)
 . S DIR("?",1)="Answering no indicates interest will not be paid for any line items."
"RTN","FBAACP",135,0)
 . S DIR("?",2)="Answering yes indicates interest will be paid."
"RTN","FBAACP",136,0)
 . S DIR("?",3)="A fee schedule is not used for contracted services."
"RTN","FBAACP",137,0)
 . S DIR("?")="Enter either 'Y' or 'N'."
"RTN","FBAACP",138,0)
 . D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACP",139,0)
 . S (FBAAMM,FBAAMM1)=$S(Y:1,1:"")
"RTN","FBAACP",140,0)
 . Q:FBAAMM1=""
"RTN","FBAACP",141,0)
 . ;
"RTN","FBAACP",142,0)
 . ; if contracted service, ask contract
"RTN","FBAACP",143,0)
 . S DIR(0)="PO^161.43:AQEM"
"RTN","FBAACP",144,0)
 . S DIR("A")="CONTRACT"
"RTN","FBAACP",145,0)
 . S DIR("?",1)="If the line item is under a contract then select it."
"RTN","FBAACP",146,0)
 . S DIR("?")="Contract must be active and applicable for the vendor."
"RTN","FBAACP",147,0)
 . S DIR("S")="I $P($G(^(0)),""^"",2)'=""I"",$$VCNTR^FBUTL7($G(FBV),+Y)"
"RTN","FBAACP",148,0)
 . D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S FBAAOUT=1 Q
"RTN","FBAACP",149,0)
 . S:Y>0 FBCNTRP=+Y
"RTN","FBAACP",150,0)
 Q
"RTN","FBAAFS")
0^10^B29211943^B28501893
"RTN","FBAAFS",1,0)
FBAAFS ;WCIOFO/dmk,SAB-OUTPATIENT FEE SCHEDULE ; 10/31/12 3:04pm
"RTN","FBAAFS",2,0)
 ;;3.5;FEE BASIS;**4,53,71,92,99,111,115,143**;JAN 30, 1995;Build 20
"RTN","FBAAFS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAFS",4,0)
LOOKUP ; Entry point for option to get fee schedule amount
"RTN","FBAAFS",5,0)
 ; without having to enter in a payment
"RTN","FBAAFS",6,0)
 ;
"RTN","FBAAFS",7,0)
 W !!
"RTN","FBAAFS",8,0)
 ;
"RTN","FBAAFS",9,0)
 ; ask date of service - required
"RTN","FBAAFS",10,0)
 S DIR(0)="D^::EX",DIR("A")="Enter date of service"
"RTN","FBAAFS",11,0)
 S DIR("B")=$$FMTE^XLFDT($S($G(FBDATE):FBDATE,1:DT))
"RTN","FBAAFS",12,0)
 D ^DIR K DIR I $D(DIRUT) G LOOKUPX
"RTN","FBAAFS",13,0)
 S FBDATE=+Y
"RTN","FBAAFS",14,0)
 I FBDATE<2990901 W !,"Note: Date is prior to VA implementation of RBRVS fee schedule (9/1/99).",!
"RTN","FBAAFS",15,0)
 ;
"RTN","FBAAFS",16,0)
 D CPTM^FBAALU(FBDATE) I 'FBGOT G LOOKUPX
"RTN","FBAAFS",17,0)
 S FBCPT=FBX
"RTN","FBAAFS",18,0)
 S FBMODLE=$$MODL^FBAAUTL4("FBMODA","E")
"RTN","FBAAFS",19,0)
 ;
"RTN","FBAAFS",20,0)
 ; ask vendor - optional
"RTN","FBAAFS",21,0)
 S DIR(0)="PO^161.2:EM",DIR("A")="Enter Fee Basis Vendor [optional]"
"RTN","FBAAFS",22,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) G LOOKUPX
"RTN","FBAAFS",23,0)
 S FBVEN=$P(Y,U)
"RTN","FBAAFS",24,0)
 ;
"RTN","FBAAFS",25,0)
 ; ask zip - required
"RTN","FBAAFS",26,0)
 D ASKZIP(FBVEN,FBDATE) I FBZIP="" G LOOKUPX
"RTN","FBAAFS",27,0)
 ;
"RTN","FBAAFS",28,0)
 ; ask place of service OR facility
"RTN","FBAAFS",29,0)
 ;S DIR(0)="SA^0:NON-FACILITY;1:FACILITY",DIR("A")="Place of Service: "
"RTN","FBAAFS",30,0)
 ;S DIR("B")="NON-FACILITY"
"RTN","FBAAFS",31,0)
 ;D ^DIR K DIR I $D(DIRUT) G LOOKUPX
"RTN","FBAAFS",32,0)
 ;S FBFAC=Y
"RTN","FBAAFS",33,0)
 D POS^FBAACO1 I '$G(FBHCFA(30)) G LOOKUPX
"RTN","FBAAFS",34,0)
 S FBFAC=$$FAC(FBHCFA(30))
"RTN","FBAAFS",35,0)
 I FBFAC="" W $C(7),!,"Error: Can't determine if facility or non-facility setting" G LOOKUPX
"RTN","FBAAFS",36,0)
 ;
"RTN","FBAAFS",37,0)
 ; report schedule amount
"RTN","FBAAFS",38,0)
 S FBRSLT=$$GET^FBAAFS(FBCPT,FBMODLE,FBDATE,FBZIP,FBFAC)
"RTN","FBAAFS",39,0)
 I $P($G(FBRSLT),U)]"" D
"RTN","FBAAFS",40,0)
 . W !?5,"Amount to Pay: $ ",$P(FBRSLT,U),"   from the "
"RTN","FBAAFS",41,0)
 . W:$P(FBRSLT,U,3)]"" $P(FBRSLT,U,3)," " ; year if returned
"RTN","FBAAFS",42,0)
 . W:$P(FBRSLT,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBRSLT,U,2))
"RTN","FBAAFS",43,0)
 I $P($G(FBRSLT),U)']"" D
"RTN","FBAAFS",44,0)
 . W !?5,"Unable to determine a FEE schedule amount.",!
"RTN","FBAAFS",45,0)
 . I $D(FBERR) D DERR
"RTN","FBAAFS",46,0)
 ;
"RTN","FBAAFS",47,0)
 G LOOKUP
"RTN","FBAAFS",48,0)
 ;
"RTN","FBAAFS",49,0)
LOOKUPX ; exit for lookup
"RTN","FBAAFS",50,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBAAFS",51,0)
 K FBAACP,FBAAOUT,FBCPT,FBDATE,FBERR,FBFAC,FBGOT,FBMOD,FBMODLE,FBMODS
"RTN","FBAAFS",52,0)
 K FBRSLT,FBVEN,FBX,FBZIP
"RTN","FBAAFS",53,0)
 Q
"RTN","FBAAFS",54,0)
 ;
"RTN","FBAAFS",55,0)
GET(CPT,MODL,DOS,ZIP,FAC,TIME,FB1725) ; call to calculate Fee Schedule amount
"RTN","FBAAFS",56,0)
 ; Input
"RTN","FBAAFS",57,0)
 ;   CPT    - CPT/HCPCS code, external value, required
"RTN","FBAAFS",58,0)
 ;   MODL   - list of optional CPT/HCPCS modifiers, external values
"RTN","FBAAFS",59,0)
 ;            delimited by commas
"RTN","FBAAFS",60,0)
 ;   DOS    - date of service, fileman format, required
"RTN","FBAAFS",61,0)
 ;   ZIP    - zip code, 5 digit, required
"RTN","FBAAFS",62,0)
 ;   FAC    - facility flag, 0 or 1, required
"RTN","FBAAFS",63,0)
 ;            indicates if procedure was performed in facility (1)
"RTN","FBAAFS",64,0)
 ;            or non-facility (0)
"RTN","FBAAFS",65,0)
 ;   TIME   - anesthesia time (minutes), reserved for future use
"RTN","FBAAFS",66,0)
 ;   FB1725 - Boolean, if Mill-Bill (1), or not Mill-Bill (0)
"RTN","FBAAFS",67,0)
 ; Returns string
"RTN","FBAAFS",68,0)
 ;   dollar amount^schedule used^schedule year (only when RBRVS)
"RTN","FBAAFS",69,0)
 ;
"RTN","FBAAFS",70,0)
 N FBAMT,FBERR,FBSCH,FBSCHYR
"RTN","FBAAFS",71,0)
 ; initialization
"RTN","FBAAFS",72,0)
 S (FBAMT,FBSCH,FBSCHYR)=""
"RTN","FBAAFS",73,0)
 K FBERR
"RTN","FBAAFS",74,0)
 S CPT=$G(CPT)
"RTN","FBAAFS",75,0)
 S DOS=$G(DOS)
"RTN","FBAAFS",76,0)
 S ZIP=$G(ZIP)
"RTN","FBAAFS",77,0)
 S FAC=$G(FAC)
"RTN","FBAAFS",78,0)
 S TIME=$G(TIME)
"RTN","FBAAFS",79,0)
 S FB1725=$G(FB1725)
"RTN","FBAAFS",80,0)
 ;
"RTN","FBAAFS",81,0)
 ; validate input parameters
"RTN","FBAAFS",82,0)
 I CPT="" D ERR("Missing CPT")
"RTN","FBAAFS",83,0)
 I DOS'?7N D ERR("Invalid Date of Service")
"RTN","FBAAFS",84,0)
 ;
"RTN","FBAAFS",85,0)
 ; try RBRVS schedule
"RTN","FBAAFS",86,0)
 I '$D(FBERR) D
"RTN","FBAAFS",87,0)
 . S FBX=$$RBRVS^FBAAFSR(CPT,MODL,DOS,ZIP,FAC,TIME)
"RTN","FBAAFS",88,0)
 . S:$P(FBX,U)]"" FBAMT=$P(FBX,U),FBSCH="R",FBSCHYR=$P(FBX,U,2)
"RTN","FBAAFS",89,0)
 . K FBERR
"RTN","FBAAFS",90,0)
 ;
"RTN","FBAAFS",91,0)
 ; If claim is not "Mill-Bill" and is not on the RBRVS schedule
"RTN","FBAAFS",92,0)
 ; try 75th percentile schedule. If claim is "Mill-Bill" then
"RTN","FBAAFS",93,0)
 ; quit and allow user to enter Amount Claimed.
"RTN","FBAAFS",94,0)
 I '$D(FBERR),FB1725'=1,FBAMT']"" D
"RTN","FBAAFS",95,0)
 . S FBAMT=$$PRCTL^FBAAFSF(CPT,MODL,DOS)
"RTN","FBAAFS",96,0)
 . S:FBAMT]"" FBSCH="F",FBSCHYR=""
"RTN","FBAAFS",97,0)
 . K FBERR
"RTN","FBAAFS",98,0)
 ;
"RTN","FBAAFS",99,0)
 ; return result
"RTN","FBAAFS",100,0)
 K FBERR
"RTN","FBAAFS",101,0)
 Q $S(FBAMT]"":FBAMT_U_FBSCH_U_FBSCHYR,1:"")
"RTN","FBAAFS",102,0)
 ;
"RTN","FBAAFS",103,0)
ERR(MSG) ; add error message to array
"RTN","FBAAFS",104,0)
 S FBERR=$G(FBERR)+1
"RTN","FBAAFS",105,0)
 S FBERR(FBERR)=MSG
"RTN","FBAAFS",106,0)
 Q
"RTN","FBAAFS",107,0)
 ;
"RTN","FBAAFS",108,0)
DERR ; display error messages
"RTN","FBAAFS",109,0)
 N FBI
"RTN","FBAAFS",110,0)
 F FBI=0 F  S FBI=$O(FBERR(FBI)) Q:'FBI  W !,FBERR(FBI)
"RTN","FBAAFS",111,0)
 Q
"RTN","FBAAFS",112,0)
 ;
"RTN","FBAAFS",113,0)
ASKZIP(FBVEN,FBDOS) ;called from payment routines to ask user the
"RTN","FBAAFS",114,0)
 ;site of service zip code.
"RTN","FBAAFS",115,0)
 ; input
"RTN","FBAAFS",116,0)
 ;   FBVEN - (optional) internal entry number of vendor (#161.2)
"RTN","FBAAFS",117,0)
 ;           used to determine a default zip code
"RTN","FBAAFS",118,0)
 ;   FBDOS - (optional) date of service
"RTN","FBAAFS",119,0)
 ;           used to determine if GPCIs are available for the zip code
"RTN","FBAAFS",120,0)
 ; output
"RTN","FBAAFS",121,0)
 ;   FBZIP - zip code, 5 digit
"RTN","FBAAFS",122,0)
 ;   FBAAOUT if user '^' out without answering
"RTN","FBAAFS",123,0)
 N DIR,DUOUT,DIRUT,DTOUT,X,Y
"RTN","FBAAFS",124,0)
 N FBCY,FBGPCIY0
"RTN","FBAAFS",125,0)
ASKZIP1 ;
"RTN","FBAAFS",126,0)
 S FBZIP=""
"RTN","FBAAFS",127,0)
 S DIR(0)="162.03,42"
"RTN","FBAAFS",128,0)
 ; set default zip code if vendor available
"RTN","FBAAFS",129,0)
 I $G(FBVEN) D
"RTN","FBAAFS",130,0)
 . S X=$P($P($G(^FBAAV(FBVEN,0)),U,6),"-")
"RTN","FBAAFS",131,0)
 . I X]"" S DIR("B")=X
"RTN","FBAAFS",132,0)
 D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAFS",133,0)
 S FBZIP=Y
"RTN","FBAAFS",134,0)
 ;
"RTN","FBAAFS",135,0)
 ; if date after VA implementation then check for GPCIs
"RTN","FBAAFS",136,0)
 I $G(FBDOS)]"",FBDOS>2990900 D  I Y D ASKZIP1
"RTN","FBAAFS",137,0)
 . S FBCY=$E(FBDOS,1,3)+1700
"RTN","FBAAFS",138,0)
 . ; if year after most recent RBRVS schedule then use prior year sched
"RTN","FBAAFS",139,0)
 . I FBCY>$$LASTCY^FBAAFSR() S FBCY=FBCY-1
"RTN","FBAAFS",140,0)
 . D ZIP^FBAAFSR(FBCY,FBZIP)
"RTN","FBAAFS",141,0)
 . S Y=0 I FBGPCIY0="" D
"RTN","FBAAFS",142,0)
 . . W $C(7),!,"Warning: ",FBCY," GPCIs are not on file for this zip code."
"RTN","FBAAFS",143,0)
 . . S DIR(0)="Y",DIR("A")="Do you want to enter a different zip code"
"RTN","FBAAFS",144,0)
 . . S DIR("B")="YES"
"RTN","FBAAFS",145,0)
 . . S DIR("?",1)="Geographic Practice Cost Index (GPCI) values are"
"RTN","FBAAFS",146,0)
 . . S DIR("?",2)="needed for calculation of the RBRVS physician fee"
"RTN","FBAAFS",147,0)
 . . S DIR("?",3)="schedule amount. There are not any GPCI values on"
"RTN","FBAAFS",148,0)
 . . S DIR("?",4)="file for the specified year and zip code."
"RTN","FBAAFS",149,0)
 . . S DIR("?")="Answer YES to enter a different zip code."
"RTN","FBAAFS",150,0)
 . . D ^DIR K DIR
"RTN","FBAAFS",151,0)
 Q
"RTN","FBAAFS",152,0)
 ;
"RTN","FBAAFS",153,0)
ASKTIME ;called to ask time in minutes if the service provided
"RTN","FBAAFS",154,0)
 ;is an anesthesia service (00100-01999)
"RTN","FBAAFS",155,0)
 ;return FBTIME equal to # of minutes or zero if '^'/timeout
"RTN","FBAAFS",156,0)
 ;return FBAAOUT if user does not answer
"RTN","FBAAFS",157,0)
 S FBTIME=0
"RTN","FBAAFS",158,0)
 S DIR(0)="162.03,43" D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S FBAAOUT=1 Q
"RTN","FBAAFS",159,0)
 S FBTIME=+Y
"RTN","FBAAFS",160,0)
 I '$G(FBTIME) D  G ASKTIME
"RTN","FBAAFS",161,0)
 . W !,$C(7),"Time entry is required!",!
"RTN","FBAAFS",162,0)
 Q
"RTN","FBAAFS",163,0)
 ;
"RTN","FBAAFS",164,0)
ANES(CPT) ; call to determine if the CPT code has a major category
"RTN","FBAAFS",165,0)
 ;of anesthesia.
"RTN","FBAAFS",166,0)
 ; CPT = 5 digit CPT code (EXTERNAL)
"RTN","FBAAFS",167,0)
 ; returns 1 if CPT is an anesthesia code else return 0.
"RTN","FBAAFS",168,0)
 ;
"RTN","FBAAFS",169,0)
 N FBCAT,FBMCAT
"RTN","FBAAFS",170,0)
 S CPT=$G(CPT)
"RTN","FBAAFS",171,0)
 S FBCAT=$P($$CPT^ICPTCOD(CPT),U,4)
"RTN","FBAAFS",172,0)
 S FBMCAT=$P($$CAT^ICPTAPIU(FBCAT),U,4)
"RTN","FBAAFS",173,0)
 Q $S(FBMCAT="ANESTHESIA":1,1:0)
"RTN","FBAAFS",174,0)
 ;
"RTN","FBAAFS",175,0)
FAC(POS) ; call to determine if the place of service is a facility
"RTN","FBAAFS",176,0)
 ; Input
"RTN","FBAAFS",177,0)
 ;   POS - place of service, internal, pointer to #353.1
"RTN","FBAAFS",178,0)
 ; Returns 0 or 1 or null
"RTN","FBAAFS",179,0)
 ;   = 0 if place of service is non-facility setting
"RTN","FBAAFS",180,0)
 ;   = 1 if place of service is facility setting
"RTN","FBAAFS",181,0)
 ;   = null value if type of setting could not be determined
"RTN","FBAAFS",182,0)
 N CODE,RET
"RTN","FBAAFS",183,0)
 S (CODE,RET)=""
"RTN","FBAAFS",184,0)
 I $G(POS)]"" S CODE=$$GET1^DIQ(353.1,POS,.01)
"RTN","FBAAFS",185,0)
 ; list of codes considered as facility settings
"RTN","FBAAFS",186,0)
 S FCODE="^05^06^07^08^21^22^23^24^26^31^34^41^42^51^52^53^56^61^"
"RTN","FBAAFS",187,0)
 ; list of codes considered as non-facility settings
"RTN","FBAAFS",188,0)
 S NFCODE="^01^03^04^09^11^12^13^14^15^16^17^20^25^32^33^49^50^54^55^57^60^62^65^71^72^81^99^"
"RTN","FBAAFS",189,0)
 I FCODE[(U_CODE_U) S RET=1
"RTN","FBAAFS",190,0)
 I NFCODE[(U_CODE_U) S RET=0
"RTN","FBAAFS",191,0)
 Q RET
"RTN","FBAAFS",192,0)
 ;
"RTN","FBAAFS",193,0)
 ;FBAAFS
"RTN","FBAAMP")
0^4^B64651581^B64599378
"RTN","FBAAMP",1,0)
FBAAMP ;AISC/CMR-MULTIPLE PAYMENT ENTRY ; 11/21/12 4:12pm
"RTN","FBAAMP",2,0)
 ;;3.5;FEE BASIS;**4,21,38,55,61,67,116,108,143**;JAN 30, 1995;Build 20
"RTN","FBAAMP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAMP",4,0)
 S FBMP=1 ;multiple payment flag
"RTN","FBAAMP",5,0)
 G ^FBAACO
"RTN","FBAAMP",6,0)
1 ;return from FBAACO
"RTN","FBAAMP",7,0)
 D MMPPT^FBAACP G:$G(FBAAOUT) Q1
"RTN","FBAAMP",8,0)
 D MPDT I 'FBMPDT G Q1
"RTN","FBAAMP",9,0)
 K FBAAOUT W ! D CPTM^FBAALU(FBMPDT,DFN) I 'FBGOT G Q1
"RTN","FBAAMP",10,0)
 ; prompt revenue code
"RTN","FBAAMP",11,0)
 S FBAARC=$$ASKREVC^FBUTL5() I FBAARC="^" S FBAAOUT=1 G Q1
"RTN","FBAAMP",12,0)
 ; prompt units paid
"RTN","FBAAMP",13,0)
 S FBUNITS=$$ASKUNITS^FBUTL5() I FBUNITS="^" S FBAAOUT=1 G Q1
"RTN","FBAAMP",14,0)
 S FY=$E(DT,1,3)+1700+$S($E(DT,4,5)>9:1,1:0)
"RTN","FBAAMP",15,0)
 D ASKZIP^FBAAFS($G(FBV)) I $G(FBAAOUT)!($G(FBZIP)']"") G Q1
"RTN","FBAAMP",16,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) D ASKTIME^FBAAFS I $G(FBAAOUT)!('$G(FBTIME)) G Q1
"RTN","FBAAMP",17,0)
 D HCFA^FBAAMP1 G Q1:$G(FBAAOUT)
"RTN","FBAAMP",18,0)
AMTCL S DIR(0)="162.03,1",DIR("A")="Amount Claimed:  $",DIR("?")="Enter the amount being claimed by the vendor" D ^DIR K DIR G Q:$D(DIRUT) S FBJ=+Y
"RTN","FBAAMP",19,0)
 W ! S DIR("A")="Is $"_FBJ_" correct for Amount Claimed",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q:$D(DIRUT),AMTCL:'Y
"RTN","FBAAMP",20,0)
RDAP D FEE G Q:$G(FBAAOUT) S FBK=FBAMTPD W ! S DIR("A")="Is $"_FBK_" correct for Amount Paid",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q:$D(DIRUT),RDAP:'Y
"RTN","FBAAMP",21,0)
 S FBAAAS=0 K FBADJ I FBJ-FBK D SUSP^FBAAMP1 I $G(FBAAOUT) G Q:$D(DUOUT),Q1
"RTN","FBAAMP",22,0)
 S FBJ=+FBJ,FBK=+FBK,FBAAAS=+FBAAAS
"RTN","FBAAMP",23,0)
 ; prompt for remittance remarks
"RTN","FBAAMP",24,0)
 I $$RR^FBUTL4(.FBRRMK,2)=0 S FBAAOUT=1 G Q1
"RTN","FBAAMP",25,0)
MULT W:FBINTOT>0 !,"Invoice: "_FBAAIN_" Totals: $ "_FBINTOT
"RTN","FBAAMP",26,0)
 W !! S %DT("A")="Date of Service: ",%DT="AEPX" D ^%DT G Q1:X=""!(X="^")
"RTN","FBAAMP",27,0)
 D DATCK^FBAAUTL G MULT:'$D(X)!(Y<0)
"RTN","FBAAMP",28,0)
 S FBDT=Y
"RTN","FBAAMP",29,0)
 I '$$CHKCPT() W !,$C(7),"Invalid Date of Service." G MULT
"RTN","FBAAMP",30,0)
 I $$CHKICD9^FBCSV1(+$G(FBHCFA(28)),$G(FBDT))="" G MULT
"RTN","FBAAMP",31,0)
 I '$G(FBAAMM1),'$$CHKFS() W !,$C(7),"Invalid Date of Service." G MULT
"RTN","FBAAMP",32,0)
 S DIR(0)="Y",DIR("A")="Is "_($$DATX^FBAAUTL(FBDT))_" correct",DIR("B")="Yes" D ^DIR K DIR G MULT:$D(DIRUT)!('Y)
"RTN","FBAAMP",33,0)
 S FBAADT=FBDT
"RTN","FBAAMP",34,0)
 S FBMODL=$$MODL^FBAAUTL4("FBMODA","I")
"RTN","FBAAMP",35,0)
 I $D(^FBAAC("AE",DFN,FBV,FBAADT,FBAACP_$S($G(FBMODL)]"":"-"_FBMODL,1:""))) S DIR(0)="Y",DIR("A")="Code already exists for that date!  Want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G MULT:$D(DIRUT)!('Y)
"RTN","FBAAMP",36,0)
 I FBFPPSC]"" S FBFPPSL=$$FPPSL^FBUTL5() I FBFPPSL=-1 G Q1
"RTN","FBAAMP",37,0)
 W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,0,FBAADT) G Q:$G(FBAAOUT)
"RTN","FBAAMP",38,0)
 D SETO^FBAACO3,SVCPR^FBAACO1 G Q:$G(FBAAOUT)
"RTN","FBAAMP",39,0)
FILE S TP="",DR="1///^S X=FBJ;Q;2///^S X=FBK;47///^S X=FBUNITS"
"RTN","FBAAMP",40,0)
 I FBCSID]"" S DR=DR_";49///^S X=FBCSID"
"RTN","FBAAMP",41,0)
 I FBFPPSC]"" S DR=DR_";50///^S X=FBFPPSC;51///^S X=FBFPPSL"
"RTN","FBAAMP",42,0)
 I FBAARC]"" S DR=DR_";48////^S X=FBAARC"
"RTN","FBAAMP",43,0)
 ;S DR=DR_$S(FBJ-FBK:";3///^S X=FBAAAS;3.5////^S X=DT;4////^S X=FBAASC;D DESC^FBAAMP1",1:"")
"RTN","FBAAMP",44,0)
 S DR(1,162.03,1)="6////^S X=DUZ;7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;15///^S X=FBPT;16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=FBTYPE;26////^S X=FBPSA"
"RTN","FBAAMP",45,0)
 S DR(1,162.03,2)="34///^S X=$G(FBAAMM1);54////^S X=$G(FBCNTRP);28////^S X=FBHCFA(28);30////^S X=FBHCFA(30);31////^S X=FBHCFA(31);32////^S X=FBHCFA(32);33///^S X=FBAAVID;44///^S X=FBFSAMT;45////^S X=FBFSUSD"
"RTN","FBAAMP",46,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAAMP",47,0)
 S DA=FBAACPI,DA(1)=FBSDI,DA(2)=FBV,DA(3)=DFN
"RTN","FBAAMP",48,0)
 D LOCK^FBUCUTL(DIE,FBAACPI,1)
"RTN","FBAAMP",49,0)
 D ^DIE
"RTN","FBAAMP",50,0)
 D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAAMP",51,0)
 D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAAMP",52,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)
"RTN","FBAAMP",53,0)
 S FBINTOT=FBINTOT+FBK
"RTN","FBAAMP",54,0)
 W " ....OK, DONE...."
"RTN","FBAAMP",55,0)
 ; HIPAA 5010 - count line items that have 0.00 amount paid
"RTN","FBAAMP",56,0)
 ;I FBK>0 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1
"RTN","FBAAMP",57,0)
 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1
"RTN","FBAAMP",58,0)
 W:Z1>(FBAAMPI-20) !,*7,"Warning, you can only enter ",(FBAAMPI-Z1)," more line items!" I Z1>(FBAAMPI-1) D  S FBMAX=1 G Q1
"RTN","FBAAMP",59,0)
 .W !!,*7,"You have reached the maximum number of payments for a Batch!",!,"You must select another Batch for entering Payments!"
"RTN","FBAAMP",60,0)
 G MULT
"RTN","FBAAMP",61,0)
Q1 K FBADJ,FBAADT,FBX,FBAACP,DIC,DIE,X,Y,DIRUT,DUOUT,DTOUT,FBOUT,FBSI,FBMPDT G ^FBAACO:$D(FBMAX),1^FBAACO
"RTN","FBAAMP",62,0)
 ;
"RTN","FBAAMP",63,0)
Q ;kill variables and exit
"RTN","FBAAMP",64,0)
 D Q^FBAACO
"RTN","FBAAMP",65,0)
 Q
"RTN","FBAAMP",66,0)
 ;
"RTN","FBAAMP",67,0)
MPDT ;
"RTN","FBAAMP",68,0)
 S FBMPDT=""
"RTN","FBAAMP",69,0)
 S DIR(0)="D^::EX"
"RTN","FBAAMP",70,0)
 S DIR("A")="Enter date to use for CPT/ICD checks and fee schedule calc"
"RTN","FBAAMP",71,0)
 S DIR("B")="TODAY"
"RTN","FBAAMP",72,0)
 S DIR("?",1)="Enter a date. This date will be used when checking for"
"RTN","FBAAMP",73,0)
 S DIR("?",2)="an active CPT/Modifier/ICD code. Also, the fee schedule"
"RTN","FBAAMP",74,0)
 S DIR("?",3)="amount will be computed based on this date."
"RTN","FBAAMP",75,0)
 S DIR("?")="Enter '^' to exit."
"RTN","FBAAMP",76,0)
 W !
"RTN","FBAAMP",77,0)
 D ^DIR K DIR S:'$D(DIRUT) FBMPDT=Y
"RTN","FBAAMP",78,0)
 Q
"RTN","FBAAMP",79,0)
 ;
"RTN","FBAAMP",80,0)
FEE N FBX,FB1725
"RTN","FBAAMP",81,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",82,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",83,0)
 S FBFY=FY-1
"RTN","FBAAMP",84,0)
 S (FBFSAMT,FBFSUSD,FBAMFS)=""
"RTN","FBAAMP",85,0)
 ; FB*3.5*143 Adding FB1725 as a parameter to prevent reduction 
"RTN","FBAAMP",86,0)
 ; of local fee schedule payments
"RTN","FBAAMP",87,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBMPDT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME),$G(FB1725))
"RTN","FBAAMP",88,0)
 ;
"RTN","FBAAMP",89,0)
 I '$G(FBAAMM1) D
"RTN","FBAAMP",90,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAAMP",91,0)
 E  D
"RTN","FBAAMP",92,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAAMP",93,0)
 ;
"RTN","FBAAMP",94,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAAMP",95,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAAMP",96,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAAMP",97,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAAMP",98,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAAMP",99,0)
 E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAAMP",100,0)
 ;
"RTN","FBAAMP",101,0)
 ; FB*3.5*143 - Preventing 70% reduction of 75th percentile rates
"RTN","FBAAMP",102,0)
 I FB1725,FBFSUSD'="F" D
"RTN","FBAAMP",103,0)
 . W !!?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAAMP",104,0)
 . I FBFSAMT D
"RTN","FBAAMP",105,0)
 . . S FBFSAMT=$J(FBFSAMT*.7,0,2)
"RTN","FBAAMP",106,0)
 . . W !?2,"  Therefore, fee schedule amount reduced to $",FBFSAMT," (70%)."
"RTN","FBAAMP",107,0)
 ;
"RTN","FBAAMP",108,0)
 I $G(FBUNITS)>1 D
"RTN","FBAAMP",109,0)
 . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAAMP",110,0)
 . Q:FBFSAMT'>0
"RTN","FBAAMP",111,0)
 . N FBFSUNIT
"RTN","FBAAMP",112,0)
 . ; determine if fee schedule can be multiplied by units
"RTN","FBAAMP",113,0)
 . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBMPDT>3040930):1,1:0)
"RTN","FBAAMP",114,0)
 . I FBFSUNIT D
"RTN","FBAAMP",115,0)
 . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAAMP",116,0)
 . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAAMP",117,0)
 . E  D
"RTN","FBAAMP",118,0)
 . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted by units."
"RTN","FBAAMP",119,0)
 ;
"RTN","FBAAMP",120,0)
 I '$G(FBAAMM1) D
"RTN","FBAAMP",121,0)
 . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAAMP",122,0)
 . S FBAMFS=$S(FBFSAMT>$G(FBJ):$G(FBJ),1:FBFSAMT)
"RTN","FBAAMP",123,0)
 ;
"RTN","FBAAMP",124,0)
 W !
"RTN","FBAAMP",125,0)
 ;
"RTN","FBAAMP",126,0)
AMTPD S DIR(0)="162.5,9",DIR("A")="Amount Paid: $",DIR("B")=$G(FBAMFS),DIR("?")="^D HELP1^FBAAMP" K:$G(FBAMFS)="" DIR("B") D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAMP",127,0)
 ;I +Y>FBJ W !!,*7,"Amount paid cannot be greater than the amount claimed." G AMTPD ; Removed in patch FB*143 as overpayment may be allowed per Medicare & Medicaid Services (CMS) reimbursement methodology
"RTN","FBAAMP",128,0)
 I FBAMFS]"" I +Y>FBAMFS&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' key in order to",!,"exceed the Fee Schedule.",! G AMTPD
"RTN","FBAAMP",129,0)
 S FBAMTPD=+Y K FBAMFS Q
"RTN","FBAAMP",130,0)
HELP1 W !!,"Enter a dollar amount that does not exceed the amount claimed.",!
"RTN","FBAAMP",131,0)
 I FBAMFS>0 W "Only the holder of the 'FBAASUPERVISOR' key may exceed the",!,"Fee Schedule.",!
"RTN","FBAAMP",132,0)
 Q
"RTN","FBAAMP",133,0)
 ;
"RTN","FBAAMP",134,0)
CHKCPT() ; check if CPT/Modifer active on date of service
"RTN","FBAAMP",135,0)
 N FBCPTX,FBI,FBMOD,FBMODX,FBRET
"RTN","FBAAMP",136,0)
 S FBRET=1
"RTN","FBAAMP",137,0)
 S FBCPTX=$$CPT^ICPTCOD(FBAACP,FBDT,1)
"RTN","FBAAMP",138,0)
 I '$P(FBCPTX,U,7) S FBRET=0 W !,"  CPT Code ",$P(FBCPTX,U,2)," inactive on date of service."
"RTN","FBAAMP",139,0)
 I $O(FBMODA(0)) D
"RTN","FBAAMP",140,0)
 . S FBI=0 F  S FBI=$O(FBMODA(FBI)) Q:'FBI  D
"RTN","FBAAMP",141,0)
 . . S FBMODX=$$MOD^ICPTMOD(FBMODA(FBI),"I",FBDT,1)
"RTN","FBAAMP",142,0)
 . . I '$P(FBMODX,U,7) S FBRET=0 W !,"  CPT Modifier ",$P(FBMODX,U,2)," inactive on date of service."
"RTN","FBAAMP",143,0)
 Q FBRET
"RTN","FBAAMP",144,0)
 ;
"RTN","FBAAMP",145,0)
CHKFS() ; check if fee schedule amount is different on date of service
"RTN","FBAAMP",146,0)
 N FBX,FBRET,FB1725
"RTN","FBAAMP",147,0)
 S FBRET=1 ; return value - true if date of service allowed
"RTN","FBAAMP",148,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",149,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",150,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBDT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME),$G(FB1725))
"RTN","FBAAMP",151,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",152,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",153,0)
 ; adjust amount if mill bill
"RTN","FBAAMP",154,0)
 I FB1725 S $P(FBX,U)=$J($P(FBX,U)*.7,0,2)
"RTN","FBAAMP",155,0)
 ; adjust amount if units > 1
"RTN","FBAAMP",156,0)
 I $G(FBUNITS) D
"RTN","FBAAMP",157,0)
 . N FBFSUNIT
"RTN","FBAAMP",158,0)
 . ; determine if fee schedule can be multipled by units
"RTN","FBAAMP",159,0)
 . S FBFSUNIT=$S($P(FBX,U,2)="R":1,$P(FBX,U,2)="F"&(FBDT>3040930):1,1:0)
"RTN","FBAAMP",160,0)
 . I FBFSUNIT S $P(FBX,U)=$J($P(FBX,U)*FBUNITS,0,2)
"RTN","FBAAMP",161,0)
 ; issue warning if lesser of claim and fee schedule amount different
"RTN","FBAAMP",162,0)
 I +$S($P(FBX,U)>$G(FBJ):$G(FBJ),1:$P(FBX,U))'=+$S(FBFSAMT>$G(FBJ):$G(FBJ),1:FBFSAMT) D
"RTN","FBAAMP",163,0)
 . W !,"  Warning: The fee schedule amount (",$P(FBX,U),") for this date of service "
"RTN","FBAAMP",164,0)
 . W !,"  differs from the initial fee schedule amount (",FBFSAMT,")."
"RTN","FBAAMP",165,0)
 . I $P(FBX,U)>0,FBK>$P(FBX,U) D
"RTN","FBAAMP",166,0)
 . . W !,"  Amount paid (",FBK,") exceeds the fee schedule amount."
"RTN","FBAAMP",167,0)
 . . I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D
"RTN","FBAAMP",168,0)
 . . . W !,"  You must be a holder of the 'FBAASUPERVISOR' key in order"
"RTN","FBAAMP",169,0)
 . . . W !,"  to exceed the Fee Schedule."
"RTN","FBAAMP",170,0)
 . . . S FBRET=0
"RTN","FBAAMP",171,0)
 . W:FBRET !,"  You may want to separately process this date of service."
"RTN","FBAAMP",172,0)
 Q FBRET
"RTN","FBAAMP",173,0)
 ;
"RTN","FBAAMP",174,0)
ANCIL ;ENTRY POINT FOR mutiple ancillary payment option
"RTN","FBAAMP",175,0)
 S FBCHCO=1 D ^FBAAMP
"RTN","FBAAMP",176,0)
 K FBCHCO Q
"RTN","FBAAUTL2")
0^8^B19718250^B18208320
"RTN","FBAAUTL2",1,0)
FBAAUTL2 ;AISC/GRR-FEE UTILITY ROUTINE ; 11/8/12 2:31pm
"RTN","FBAAUTL2",2,0)
 ;;3.5;FEE BASIS;**8,143**;JAN 30, 1995;Build 20
"RTN","FBAAUTL2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAUTL2",4,0)
CONDAT ;called from input transform in 161.21,.02-.03
"RTN","FBAAUTL2",5,0)
 S (FBOUT,Z)=0
"RTN","FBAAUTL2",6,0)
 F  S Z=$O(^FBAA(161.21,"C",+$G(FBVIEN),Z)) Q:'Z  I $P($G(^FBAA(161.21,Z,0)),U,2) S Z(0)=^(0),FBVCON($P(Z(0),U,2))=$P(Z(0),U,3)
"RTN","FBAAUTL2",7,0)
 K FBVCON(+$P(^FBAA(161.21,DA,0),U,2))
"RTN","FBAAUTL2",8,0)
 S Z=0 F  S Z=$O(FBVCON(Z)) Q:Z'>0!(FBOUT)  I X'<Z&(X'>FBVCON(Z)) S FBOUT=1 W !,*7,"Date entered overlaps existing contract dates!",! K X,Z,FBVCON Q
"RTN","FBAAUTL2",9,0)
 K Z,FBVCON
"RTN","FBAAUTL2",10,0)
 Q
"RTN","FBAAUTL2",11,0)
DATES ;ASK FROM AND TO DATES AND ENSURE THEY DO NOT OVERLAP PRIOR AUTHORIZATIONS
"RTN","FBAAUTL2",12,0)
 ;variables FBO and FB1 are set in FBNHEDAT as default dates
"RTN","FBAAUTL2",13,0)
 S FBFLAG=1 K FBAUT
"RTN","FBAAUTL2",14,0)
FDAT S (FBBEGDT,FBENDDT)="",%DT("A")="Select FROM DATE: ",%DT="AEX" S:$S($G(FBO):1,1:0) %DT("B")=$$FMTE^XLFDT(FBO,1) D ^%DT G:Y'>0 END S FBBEGDT=Y
"RTN","FBAAUTL2",15,0)
 G:FBFLAG=2 EN1
"RTN","FBAAUTL2",16,0)
EDAT S FBOUT=0,%DT("A")="Select TO DATE: ",%DT="AEX",%DT(0)=FBBEGDT S:$S($G(FB1):1,1:0) %DT("B")=$$FMTE^XLFDT(FB1,1) D ^%DT K %DT(0) G:Y'>0 END S FBENDDT=Y
"RTN","FBAAUTL2",17,0)
EN1 ;CHECK WHETHER AUTHORIZATION FROM DATE OVERLAPS PREVIOUS ENTRIES
"RTN","FBAAUTL2",18,0)
 S (FBOUT,FBLG)=0 F Z=0:0 S Z=$O(^FBAAA(DFN,1,Z)) Q:Z'>0  I $D(^(Z,0)) S Z(0)=^(0) I $P(Z(0),"^",3)=FBPROG S FBAUT($P(Z(0),"^"))=$P(Z(0),"^",2)
"RTN","FBAAUTL2",19,0)
 I $G(FBO),($G(FB1)),($G(FBAUT(FBO))=FB1) K FBAUT(FBO)
"RTN","FBAAUTL2",20,0)
 F Z=0:0 S Z=$O(FBAUT(Z)) Q:Z'>0!(FBOUT)  D CHKDT:FBFLAG=1,CHKBO:FBFLAG=2,ERRD:FBLG>0
"RTN","FBAAUTL2",21,0)
 I FBOUT S FBOUT=0 G:FBLG>0&(FBFLAG=1) FDAT
"RTN","FBAAUTL2",22,0)
 Q
"RTN","FBAAUTL2",23,0)
END S (FBBEGDT,FBENDDT)="" K Z,FBAUT,FBOUT,FBLG Q
"RTN","FBAAUTL2",24,0)
CHKDT I FBBEGDT<Z&(FBENDDT<Z) S FBLG=0,FBOUT=1 Q
"RTN","FBAAUTL2",25,0)
 I FBBEGDT<Z&(FBENDDT'<Z) S FBLG=2,FBOUT=1 Q
"RTN","FBAAUTL2",26,0)
 I FBPROG=7,FBAUT(Z)>DT S FBLG=0,FBOUT=1,FBBEGDT="" K FBAUT W !!?5,"There already is an active CNH authorization on file.",!?5,"Use the 'Edit CNH Authorization' option.",! Q
"RTN","FBAAUTL2",27,0)
 I FBPROG=7,FBBEGDT=FBAUT(Z) Q
"RTN","FBAAUTL2",28,0)
CHKBO I FBBEGDT'<Z&(FBBEGDT'>FBAUT(Z)) S FBLG=1,FBOUT=1 Q
"RTN","FBAAUTL2",29,0)
 Q
"RTN","FBAAUTL2",30,0)
ERRD W !,*7,$S(FBLG=1:"FROM ",1:"TO "),"DATE entered overlaps a previous Authorization!",!
"RTN","FBAAUTL2",31,0)
 Q
"RTN","FBAAUTL2",32,0)
 ;
"RTN","FBAAUTL2",33,0)
UPDT ;UPDATE BATCH STATUS
"RTN","FBAAUTL2",34,0)
 S DA=J,(DIC,DIE)="^FBAA(161.7,",DR="11////^S X=FBSTAT;12////^S X=DT" D ^DIE Q
"RTN","FBAAUTL2",35,0)
 Q
"RTN","FBAAUTL2",36,0)
 ;
"RTN","FBAAUTL2",37,0)
PAT S FBSSN=$P(Y(0),"^",9) S:$L(FBSSN)=9 FBSSN=FBSSN_" " S FBSEX=$P(Y(0),"^",2),FBSEX=$S(FBSEX="F":FBSEX,1:"M")
"RTN","FBAAUTL2",38,0)
 S FBDOB=$P(Y(0),"^",3),FBDOB=$S(FBDOB="":"        ",1:$E(FBDOB,4,7)_($E(FBDOB,1,3)+1700))
"RTN","FBAAUTL2",39,0)
 S FBNAME=$P(Y(0),"^",1),FBLNAM=$E($P(FBNAME,",",1),1,5),FBFLNAM=$E($P(FBNAME,",",1),1,21),FBFLNAM=FBFLNAM_$E(PAD,$L(FBFLNAM)+1,21)
"RTN","FBAAUTL2",40,0)
 S:$L(FBLNAM)<5 FBLNAM=FBLNAM_$E("     ",$L(FBLNAM)+1,5)
"RTN","FBAAUTL2",41,0)
 S FBFI=$E($P(FBNAME,",",2),1),FBMI=$P(FBNAME,",",2),A=$F(FBMI," "),FBMI=$S(A<1:" ",1:$E(FBMI,A)),FBMI=$S(FBMI="":" ",1:FBMI)
"RTN","FBAAUTL2",42,0)
 Q
"RTN","FBAAUTL2",43,0)
 ;
"RTN","FBAAUTL2",44,0)
ASKVOK S DIR(0)="Y",DIR("A")="Is this the correct vendor",DIR("B")="YES" D ^DIR K DIR G:$D(DIRUT) VENOUT S:'Y FBVENO=1
"RTN","FBAAUTL2",45,0)
 Q
"RTN","FBAAUTL2",46,0)
VENOUT S FBVENOT=1 K DIRUT Q
"RTN","FBAAUTL2",47,0)
 ;
"RTN","FBAAUTL2",48,0)
FBPH W ! S DIR("A")="Want to review fee pharmacy payment history",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR
"RTN","FBAAUTL2",49,0)
 I Y,$D(DFN),$D(^DPT(+DFN,0)) S N=$P(^(0),"^"),FBHDFN=DFN N FBAAOUT D LIST^FBAAPPH S DFN=FBHDFN K FBHDFN
"RTN","FBAAUTL2",50,0)
 Q
"RTN","FBAAUTL2",51,0)
PRPRDT D NOW^%DTC S Y=% X ^DD("DD") W ?60,Y
"RTN","FBAAUTL2",52,0)
 Q
"RTN","FBAAUTL2",53,0)
IFCAP S PRCF("X")="S" D ^PRCFSITE S PRC("SITE")=$S($D(PRC("SITE")):PRC("SITE"),1:"") I PRC("SITE")="" S FBERR(1)=1 Q
"RTN","FBAAUTL2",54,0)
 S FB("SITE")=PRC("SITE")
"RTN","FBAAUTL2",55,0)
 Q
"RTN","FBAAUTL2",56,0)
POV ;GET POV/TREATMENT TYPE FROM 161 FOR TRANSMISSION OF PAYMENTS
"RTN","FBAAUTL2",57,0)
 S (FBTT,POV)="" Q:'$D(^FBAAC(K,1,L,1,M,0))  S POV(0)=$P(^(0),"^",4) Q:POV(0)=""
"RTN","FBAAUTL2",58,0)
 Q:'$D(^FBAAA(K,1,POV(0),0))  S POV=$P(^(0),"^",7),FBTT=$P(^(0),"^",13)
"RTN","FBAAUTL2",59,0)
 Q
"RTN","FBAAUTL2",60,0)
XREF ;SET X-REF FOR PRINT AUTHORIZATION FIELD (161.01,1)
"RTN","FBAAUTL2",61,0)
 Q:'$D(^FBAAA(DA(1),1,DA,0))  N FBZZ S FBZZ(0)=^(0),FBZZ(1)=$P(FBZZ(0),"^",3)
"RTN","FBAAUTL2",62,0)
 S FBZZ(2)=$S(FBZZ(1)=2:"",FBZZ(1)=3:"",FBZZ(1)=11:"",1:1) I FBZZ(2) S ZZZ="" Q
"RTN","FBAAUTL2",63,0)
 S ZZZ=$P(FBZZ(0),"^",13),ZZZ=$S(ZZZ=1:$P(FBZZ(0),"^"),ZZZ=2:$P(FBZZ(0),"^"),ZZZ=3:$S($D(^FBAAA(DA(1),4)):$P(^(4),"^",2),1:""),1:"")
"RTN","FBAAUTL2",64,0)
 Q
"RTN","FBAAUTL2",65,0)
ADD S ZZZ="" D XREF Q:ZZZ=""  S ^FBAAA("AF",$P(^FBAAA(DA(1),1,DA,0),"^",3),ZZZ,DA(1),DA)=""
"RTN","FBAAUTL2",66,0)
 Q
"RTN","FBAAUTL2",67,0)
KILL S ZZZ="" D XREF Q:ZZZ=""  K ^FBAAA("AF",$P(^FBAAA(DA(1),1,DA,0),"^",3),ZZZ,DA(1),DA)
"RTN","FBAAUTL2",68,0)
 Q
"RTN","FBAAUTL2",69,0)
OPPS ;FB*3.5*143 Adds support for OPPS payment model to input transform of
"RTN","FBAAUTL2",70,0)
 ; Amount Paid field of the Fee Basis Payment (#162).
"RTN","FBAAUTL2",71,0)
 I $D(^XUSEC("FBAASUPERVISOR",DUZ)) Q
"RTN","FBAAUTL2",72,0)
 I $P(^FBAAC(DA(3),1,DA(2),1,DA(1),1,DA,0),"^",2)<X D EN^DDIOL("Amount Paid cannot be greater than Amount Claimed!","","$C(7),!") K X
"RTN","FBAAUTL2",73,0)
 Q
"RTN","FBAAUTL2",74,0)
 ;
"RTN","FBAAUTL2",75,0)
VER(X) ;determine version of a file based on DD node
"RTN","FBAAUTL2",76,0)
 ;X= file number
"RTN","FBAAUTL2",77,0)
 Q $S('X:0,1:+$P($G(^DD(X,0,"VR")),U))
"RTN","FBPAY21")
0^6^B16369927^B16167791
"RTN","FBPAY21",1,0)
FBPAY21 ;AISC/CMR-OUTPATIENT PAYMENT HISTORY SORT/PRINT ; 9/13/12 10:30am
"RTN","FBPAY21",2,0)
 ;;3.5;FEE BASIS;**4,32,69,101,143**;JAN 30, 1995;Build 20
"RTN","FBPAY21",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBPAY21",4,0)
PRINT ;write output
"RTN","FBPAY21",5,0)
 S FBOUT=0 D:FBCRT&(FBPG) CR Q:FBOUT
"RTN","FBPAY21",6,0)
 D HDR I FBSORT S FBPAT=FBPNAME I $D(^TMP($J,"FBTR")) S FBTRCK=1 D TRAV^FBPAY671
"RTN","FBPAY21",7,0)
 S FBVI="" F  S FBVI=$O(^TMP($J,"FB",FBPI,FBVI)) Q:FBVI']""!(FBOUT)  D:FBSORT SH Q:FBOUT  S FBPT="" D  Q:FBOUT
"RTN","FBPAY21",8,0)
 .F  S FBPT=$O(^TMP($J,"FB",FBPI,FBVI,FBPT)) Q:FBPT']""!(FBOUT)  D:'FBSORT SH,SH1 Q:FBOUT  S FBDT=0 F  S FBDT=$O(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT)) Q:'FBDT!(FBOUT)  D
"RTN","FBPAY21",9,0)
 ..S L=0 F  S L=$O(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,L)) Q:'L!(FBOUT)  S M=0 F  S M=$O(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,L,M)) Q:'M!(FBOUT)  D
"RTN","FBPAY21",10,0)
 ...I ($Y+6)>IOSL D PAGE Q:FBOUT
"RTN","FBPAY21",11,0)
 ...S FBDATA=^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,L,M)
"RTN","FBPAY21",12,0)
 ...S FBCKIN=$G(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,L,M,"FBCK")) D EFBCK(FBCKIN)
"RTN","FBPAY21",13,0)
 ...S FBADJ=$G(^TMP($J,"FB",FBPI,FBVI,FBPT,FBDT,L,M,"FBADJ"))
"RTN","FBPAY21",14,0)
 ...W !,$S($G(FBCAN)]"":"+",1:"")
"RTN","FBPAY21",15,0)
 ...W !,$S($P(FBDATA,U,12)="VP":"#",1:"")
"RTN","FBPAY21",16,0)
 ...W ?1,$P(FBDATA,U,1)
"RTN","FBPAY21",17,0)
 ...W ?11,$P($P(FBDATA,U,2),",")
"RTN","FBPAY21",18,0)
 ...W ?22,$P(FBADJ,U,9)
"RTN","FBPAY21",19,0)
 ...W ?31,$J($P(FBADJ,U,2),10)
"RTN","FBPAY21",20,0)
 ...W ?43,$P(FBDATA,U,6)
"RTN","FBPAY21",21,0)
 ...W ?54,$P(FBDATA,U,7)
"RTN","FBPAY21",22,0)
 ...W ?64,$P(FBDATA,U,8)
"RTN","FBPAY21",23,0)
 ...I $P($P(FBDATA,U,2),",",2)]"" D  Q:FBOUT
"RTN","FBPAY21",24,0)
 ....N FBI,FBMOD
"RTN","FBPAY21",25,0)
 ....F FBI=2:1 S FBMOD=$P($P(FBDATA,U,2),",",FBI) Q:FBMOD=""  D  Q:FBOUT
"RTN","FBPAY21",26,0)
 .....I $Y+7>IOSL D PAGE Q:FBOUT  W !,"  (continued)"
"RTN","FBPAY21",27,0)
 .....W !?16,"-",FBMOD
"RTN","FBPAY21",28,0)
 ...W !,$P(FBDATA,U,3)
"RTN","FBPAY21",29,0)
 ...W ?13,$P(FBDATA,U,4)
"RTN","FBPAY21",30,0)
 ...W ?23,$S($P(FBADJ,U,3)]"":$P(FBADJ,U,3),1:$P(FBDATA,U,5))
"RTN","FBPAY21",31,0)
 ...W ?33,$J($S($P(FBADJ,U,4)]"":$J($P(FBADJ,U,4),14),1:$P(FBADJ,U,1)),14)
"RTN","FBPAY21",32,0)
 ...W ?48,$P(FBADJ,U,5)
"RTN","FBPAY21",33,0)
 ...W ?60,$P(FBADJ,U,6)
"RTN","FBPAY21",34,0)
 ...I $P(FBADJ,U,7)]"" W !?5,"FPPS Claim ID: ",$P(FBADJ,U,7),"     FPPS Line Item: ",$P(FBADJ,U,8)
"RTN","FBPAY21",35,0)
 ...S A2=$$EXTRL^FBMRASVR($P(FBDATA,U,4))
"RTN","FBPAY21",36,0)
 ...W !?4,"Primary Dx: ",$P(FBDATA,U,10),?40,"S/C Condition? ",$P(FBDATA,U,9) W ?63,"Obl.#: ",$P(FBDATA,U,11)
"RTN","FBPAY21",37,0)
 ...D PMNT^FBAACCB2 K A2
"RTN","FBPAY21",38,0)
 Q
"RTN","FBPAY21",39,0)
HDR ;main header
"RTN","FBPAY21",40,0)
 I FBPG>0!FBCRT W @IOF
"RTN","FBPAY21",41,0)
 S FBPG=FBPG+1
"RTN","FBPAY21",42,0)
 W !?25,$S($G(FBSORT):"VETERAN",1:"VENDOR")," PAYMENT HISTORY"
"RTN","FBPAY21",43,0)
 I $G(FB1725R)]"",FB1725R'="A" W " ",$S(FB1725R="M":"for 38 U.S.C. 1725 Claims",1:"excluding 38 U.S.C. 1725 Claims")
"RTN","FBPAY21",44,0)
 W !?24,$E(FBDASH,1,24),?71,"Page: ",FBPG,!
"RTN","FBPAY21",45,0)
 W:FBSORT "Patient: ",FBPNAME,?41,"Patient ID: ",FBPID W:'FBSORT "Vendor: ",FBVNAME,?41,"Vendor ID: ",FBVID
"RTN","FBPAY21",46,0)
 ;W ?71,"Page: ",FBPG
"RTN","FBPAY21",47,0)
 W !?(IOM-(13+$L(FBPROG(+FBPI)))/2),"FEE PROGRAM: ",FBPROG(+FBPI)
"RTN","FBPAY21",48,0)
 W !,?3,"('*' Reimb. to Patient   '+' Cancel. Activity   '#' Voided Payment)"
"RTN","FBPAY21",49,0)
 W !,?3,"(paid symbol: 'R' RBRVS  'F' 75th percentile  'C' contract  'M' Mill Bill"
"RTN","FBPAY21",50,0)
 W !,?3,"              'U' U&C)"
"RTN","FBPAY21",51,0)
 W !,?1,"Svc Date",?11,"CPT-MOD ",?21,"Rev Code",?31,"Units Paid",?43,"Batch No.",?54,"Inv No.",?64,"Voucher Date"
"RTN","FBPAY21",52,0)
 W !,"Amt Claimed",?13,"Amt Paid",?23,"Adj Code",?36,"Adj Amounts",?48,"Remit Remark",?61,"Patient Account No",!,FBDASH
"RTN","FBPAY21",53,0)
 Q
"RTN","FBPAY21",54,0)
SH ;subheader - vendor if fbsort; patient if 'fbsort, prints when name changed
"RTN","FBPAY21",55,0)
 I ($Y+8)>IOSL D:FBCRT CR Q:FBOUT  D HDR
"RTN","FBPAY21",56,0)
 I FBSORT W !!,"Vendor: ",$P(FBVI,";"),?41,"Vendor ID: ",$P(FBVI,";",2)
"RTN","FBPAY21",57,0)
 I 'FBSORT W !!,"Patient: ",$P(FBPT,";"),?41,"Patient ID: ",$$SSNL4^FBAAUTL($$SSN^FBAAUTL($P(FBPT,";",2)))
"RTN","FBPAY21",58,0)
 Q
"RTN","FBPAY21",59,0)
SH1 S FBPAT=$P(FBPT,";") I $D(^TMP($J,"FBTR",FBPAT)) S FBTRCK=1 D TRAV^FBPAY671
"RTN","FBPAY21",60,0)
 Q
"RTN","FBPAY21",61,0)
CR ;read for display
"RTN","FBPAY21",62,0)
 S DIR(0)="E" W ! D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1
"RTN","FBPAY21",63,0)
 Q
"RTN","FBPAY21",64,0)
PAGE ;new page
"RTN","FBPAY21",65,0)
 I FBCRT D CR Q:FBOUT
"RTN","FBPAY21",66,0)
 D HDR,SH
"RTN","FBPAY21",67,0)
 Q
"RTN","FBPAY21",68,0)
EFBCK(FBCKIN) ;extract check information from ^TMP
"RTN","FBPAY21",69,0)
 I $G(FBCKIN)']"" S (FBCK,FBCKDT,FBCANDT,FBCANR,FBCAN,FBDIS,FBCKINT)="" Q
"RTN","FBPAY21",70,0)
 S U="^",FBCK=$P(FBCKIN,U,2),FBCKDT=$P(FBCKIN,U,3),FBCANDT=$P(FBCKIN,U,4),FBCANR=$P(FBCKIN,U,5),FBCAN=$P(FBCKIN,U,6),FBDIS=$P(FBCKIN,U,7),FBCKINT=$P(FBCKIN,U,8)
"RTN","FBPAY21",71,0)
 K FBCKIN
"RTN","FBPAY21",72,0)
 Q
"RTN","FBPAY21",73,0)
 ;
"RTN","FBPAY21",74,0)
EN ;entry from fbpay67 to set '*' if ancillary payment is
"RTN","FBPAY21",75,0)
 ;a reimbursement.  returns FBRP=to '*' or " "
"RTN","FBPAY21",76,0)
 ;'Y' passed in equal to zero node of 162.03 look at $P(Y,U,20)
"RTN","FBPAY21",77,0)
 ;
"RTN","FBPAY21",78,0)
 S FBR=$P($G(Y),U,20),FBR=$S(FBR="R":"*",1:" ")
"RTN","FBPAY21",79,0)
 Q
"RTN","FBPAY67")
0^7^B41631569^B41443321
"RTN","FBPAY67",1,0)
FBPAY67 ;AISC/DMK,TET,BPOIFO/MEC - CH/CNH PAYMENT HISTORY SORT ; 9/13/12 10:29am
"RTN","FBPAY67",2,0)
 ;;3.5;FEE BASIS;**4,32,55,69,108,143**;JAN 30, 1995;Build 20
"RTN","FBPAY67",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBPAY67",4,0)
EN ;entry to sort
"RTN","FBPAY67",5,0)
 I FBSORT S DFN=FBIEN,FBPID=FBID,FBPNAME=FBNAME
"RTN","FBPAY67",6,0)
 I 'FBSORT S FBVI=FBIEN,FBVID=FBID,FBVNAME=$E(FBNAME,1,23)
"RTN","FBPAY67",7,0)
FBAAC ;check ^fbaac("an" (file 162)
"RTN","FBPAY67",8,0)
 S FBOUT=0 I $D(^FBAAC("AN",FBPI)) D AN  I $G(FBPIFLG) S FBPI=7 D AN S FBPI=6
"RTN","FBPAY67",9,0)
 S I=FBBEG,FBIX=$S(FBSORT:"AG",1:"AF")
"RTN","FBPAY67",10,0)
SORT ;sort programs 6 & 7 (civil hos & cnh)
"RTN","FBPAY67",11,0)
 F FBM=FBBEG-.1:0 S FBM=$O(^FBAAI(FBIX,FBIEN,FBM)) Q:FBM'>0!(FBM>FBEND)  F FBI=0:0 S FBI=$O(^FBAAI(FBIX,FBIEN,FBM,FBI)) Q:FBI'>0  I $G(^FBAAI(FBI,"FBREJ"))']"" D SET S FBPI=FBPISV
"RTN","FBPAY67",12,0)
KILL ;kill variables set in routine and in FBPAY2, sort/set sections
"RTN","FBPAY67",13,0)
 K A1,A2,A3,D,D2,FBAACPTC,FBBN,FBCNT,FBCP,FBDT,FBDT1,FBDX,FBDX1,FBI,FBIN,FBIX,FBM,FBOB,FBPDX,FBPISV,FBPROC,FBPROC1,FBSC,FBTA,FBVEN,FBVENID,FBVP,I,J,K,L,M,Y,FBDT2,FBPROA,FBPOA,FBADMTDX
"RTN","FBPAY67",14,0)
 K:FBSORT FBVNAME,FBVID K:'FBSORT FBPNAME,FBPID
"RTN","FBPAY67",15,0)
 D KILL^FBPAY2
"RTN","FBPAY67",16,0)
 Q
"RTN","FBPAY67",17,0)
SET ;set string, also called by fbchdi (fblistc or fbaanq set if called by fbchdi)
"RTN","FBPAY67",18,0)
 N FBY2,FBY3,FBY5,FBCDAYS,FBCSID,FBFPPSC,FBFPPSL,FBX,FBADJLR,FBADJLA,FBRRMKL,FBAARCE,FBX,FBADMTDX,P2,FBPOA
"RTN","FBPAY67",19,0)
 S FBPISV=$G(FBPI),FBIN=$G(^FBAAI(FBI,0)) Q:FBIN']""  S FBPI=+$P(FBIN,U,12)
"RTN","FBPAY67",20,0)
 I 'FBPROG,'$D(FBPROG(+$P(FBIN,U,12))) Q
"RTN","FBPAY67",21,0)
 I '$D(FBPIFLG) Q:+$P(FBIN,U,12)'=FBPI
"RTN","FBPAY67",22,0)
 I $D(FBPIFLG),'FBPROG Q:'$D(FBPROG(+$P(FBIN,U,12)))
"RTN","FBPAY67",23,0)
 S FBY2=$G(^FBAAI(FBI,2))
"RTN","FBPAY67",24,0)
 S FBY3=$G(^FBAAI(FBI,3))
"RTN","FBPAY67",25,0)
 S FBY5=$G(^FBAAI(FBI,5))
"RTN","FBPAY67",26,0)
 ; if user wants just mill bill or just non-mill bill then check payment
"RTN","FBPAY67",27,0)
 ;   and skip if associated with an mill bill claim
"RTN","FBPAY67",28,0)
 I "^M^N^"[(U_$G(FB1725R)_U) S FB1725=$S($P(FBIN,U,5)["FB583":+$P($G(^FB583(+$P(FBIN,U,5),0)),U,28),1:0) I $S(FB1725R="M"&'FB1725:1,FB1725R="N"&FB1725:1,1:0) Q
"RTN","FBPAY67",29,0)
 F J=1,2,3,6,7,8,9,10,11,13,14 S FBIN(J)=$P(FBIN,"^",J)
"RTN","FBPAY67",30,0)
 S:FBSORT FBIN(5)=$P(FBIN,U,5) I 'FBSORT S FBIN(4)=$P(FBIN,U,4),DFN=FBIN(4) Q:DFN']""  S FBPID=$$SSN^FBAAUTL(DFN),FBPNAME=$P($G(^DPT(+DFN,0)),U)
"RTN","FBPAY67",31,0)
 I FBSORT S FBVNAME=$G(^FBAAV(FBIN(3),0)) Q:FBVNAME']""  S FBVID=$P(FBVNAME,U,2),FBVNAME=$E($P(FBVNAME,U),1,23)
"RTN","FBPAY67",32,0)
 S FBIN(2)=$$DATX^FBAAUTL(FBIN(2)),FBVEN=FBVNAME_";"_FBVID,FBPAT=FBPNAME_";"_DFN
"RTN","FBPAY67",33,0)
 S FBIN(6)=$$DATX^FBAAUTL(FBIN(6)),FBIN(7)=$$DATX^FBAAUTL(FBIN(7))
"RTN","FBPAY67",34,0)
 D FBCKI^FBAACCB1(FBI)
"RTN","FBPAY67",35,0)
SETTMP S ^TMP($J,"FB",+$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI)=FBIN(2)_U_$J(FBIN(8),8,2)_U_$J(FBIN(9),8,2)_U_FBIN(11)_U_$J(FBIN(1),8)_U_FBIN(6)_U_FBIN(7)_U_FBIN(13)_U_FBIN(14)_U_FBIN(10)
"RTN","FBPAY67",36,0)
 S ^TMP($J,"FB",+$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI,"FBCK")="^"_FBCK_"^"_FBCKDT_"^"_FBCANDT_"^"_FBCANR_"^"_FBCAN_"^"_FBDIS_"^"_FBCKINT
"RTN","FBPAY67",37,0)
 S FBCDAYS=$P(FBY2,U,10) ; covered days
"RTN","FBPAY67",38,0)
 S FBCSID=$P(FBY2,U,11) ; patient control number
"RTN","FBPAY67",39,0)
 S FBFPPSC=$P(FBY3,U) ; fpps claim id
"RTN","FBPAY67",40,0)
 S FBFPPSL=$P(FBY3,U,2) ; fpps line item
"RTN","FBPAY67",41,0)
 S FBX=$$ADJLRA^FBCHFA(FBI_",")
"RTN","FBPAY67",42,0)
 S FBADJLR=$P(FBX,U) ;adjustment reason
"RTN","FBPAY67",43,0)
 S FBADJLA=$P(FBX,U,2) ;adjustment amount
"RTN","FBPAY67",44,0)
 S FBRRMKL=$$RRL^FBCHFR(FBI_",") ;remittance remarks
"RTN","FBPAY67",45,0)
 S FBADMTDX=$$ICD9^FBCSV1($P(FBY5,"^",9)) ; admitting diagnosis
"RTN","FBPAY67",46,0)
 S ^TMP($J,"FB",+$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI,"FBINV")=FBCDAYS_"^"_FBCSID_"^"_FBFPPSC_"^"_FBFPPSL_"^"_FBADJLR_"^"_FBADJLA_"^"_FBRRMKL_"^"_FBADMTDX
"RTN","FBPAY67",47,0)
 S FBDX=$G(^FBAAI(FBI,"DX"))
"RTN","FBPAY67",48,0)
 S FBPOA=$G(^FBAAI(FBI,"POA"))
"RTN","FBPAY67",49,0)
 I FBDX]"" S FBDX1="" F I=1:1:25 D
"RTN","FBPAY67",50,0)
 .N FBPOA1
"RTN","FBPAY67",51,0)
 .Q:$P(FBDX,U,I)=""
"RTN","FBPAY67",52,0)
 .S FBPOA1=$P(FBPOA,U,I)
"RTN","FBPAY67",53,0)
 .S FBDX1=FBDX1_$$ICD9^FBCSV1($P(FBDX,U,I),+$P($G(FBIN),U,6))_"/"
"RTN","FBPAY67",54,0)
 .S FBDX1=FBDX1_$S(FBPOA1:$P($G(^FB(161.94,FBPOA1,0)),"^"),1:"")_U
"RTN","FBPAY67",55,0)
 .Q
"RTN","FBPAY67",56,0)
 I FBDX]"" S FBDX1=$P(FBDX1,U,1,($L(FBDX1,U)-1)),^TMP($J,"FB",$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI,"DX")=FBDX1
"RTN","FBPAY67",57,0)
 S FBPROC=$G(^FBAAI(FBI,"PROC")) I FBPROC]"" S FBPROC1="" F I=1:1:25 S:$P(FBPROC,U,I) FBPROC1=FBPROC1_$$ICD0^FBCSV1($P(FBPROC,U,I),+$P($G(FBIN),U,6))_U
"RTN","FBPAY67",58,0)
 I FBPROC]"" S FBPROC1=$P(FBPROC1,U,1,($L(FBPROC1,U)-1)),^TMP($J,"FB",$P(FBIN,U,12),FBVEN,FBPAT,FBM,FBI,"PROC")=FBPROC1
"RTN","FBPAY67",59,0)
 D ANC(FBM,FBI):FBSORT&($D(^TMP($J,"FB",FBPI,FBVEN,FBPAT,FBM,FBI)))
"RTN","FBPAY67",60,0)
 Q
"RTN","FBPAY67",61,0)
AN ;get data from an xref - called at tag fbaac in pay3 & pay67
"RTN","FBPAY67",62,0)
 I FBSORT G AN1
"RTN","FBPAY67",63,0)
 S FBVEN=FBVNAME_";"_FBVID,DFN=0 F  S DFN=$O(^FBAAC("AN",FBPI,DFN)) Q:'DFN  S FBPAT=$G(^DPT(DFN,0)),FBPNAME=$P(FBPAT,U),FBPID=$$SSN^FBAAUTL(DFN),FBPAT=FBPNAME_";"_DFN D OTH
"RTN","FBPAY67",64,0)
 Q
"RTN","FBPAY67",65,0)
AN1 S FBPAT=FBPNAME_";"_FBPID,FBVI=0 F  S FBVI=$O(^FBAAC("AN",FBPI,DFN,FBVI)) Q:'FBVI  S FBVNAME=$E($$VNAME^FBNHEXP(FBVI),1,23),FBVID=$$VID^FBNHEXP(FBVI),FBVEN=FBVNAME_";"_FBVID D OTH
"RTN","FBPAY67",66,0)
 Q
"RTN","FBPAY67",67,0)
OTH ;other fee programs - if 'fbsort (by vendor)
"RTN","FBPAY67",68,0)
 Q:'$O(^FBAAC("AN",FBPI,DFN,FBVI,0))
"RTN","FBPAY67",69,0)
 N J,K,L,M,Y,FBDT1 S J=DFN,K=FBVI
"RTN","FBPAY67",70,0)
 S L=0 F  S L=$O(^FBAAC("AN",FBPI,J,K,L)) Q:'L  S FBDT1=$P($G(^FBAAC(J,1,K,1,L,0)),U) I FBDT1]""&(FBDT1'<FBBDATE&(FBDT1'>FBEDATE)) D  S:FBOUT FBOUT=0
"RTN","FBPAY67",71,0)
 .S M=0 F  S M=$O(^FBAAC("AN",FBPI,J,K,L,M)) Q:'M  S Y=$G(^FBAAC(J,1,K,1,L,1,M,0)) I Y]"" D
"RTN","FBPAY67",72,0)
 ..S FBOUT=0 D EN1^FBPAY2 Q:FBOUT  D EN^FBPAY21
"RTN","FBPAY67",73,0)
 ..S ^TMP($J,"FB",FBPI_"O",FBVEN,FBPAT,(9999999.9999-FBDT1),L,M)=$G(FBR)_$$DATX^FBAAUTL(FBDT1)_U_FBAACPTC_FBCP_$S($G(FBMODLE)]"":"-"_FBMODLE,1:"")_U_A1_U_A2_U_T_U_FBBN_U_FBIN_U_D2_U_FBSC_U_FBPDX_U_FBOB_U_$G(FBVP)
"RTN","FBPAY67",74,0)
 ..S ^TMP($J,"FB",FBPI_"O",FBVEN,FBPAT,(9999999.9999-FBDT1),L,M,"FBCK")="^"_FBCK_"^"_FBCKDT_"^"_FBCANDT_"^"_FBCANR_"^"_FBCAN_"^"_FBDIS_"^"_FBCKINT
"RTN","FBPAY67",75,0)
 ..S ^TMP($J,"FB",FBPI_"O",FBVEN,FBPAT,(9999999.9999-FBDT1),L,M,"FBADJ")=TAMT_U_FBUNITS_U_FBADJLR_U_FBADJLA_U_FBRRMKL_U_FBCSID_U_FBFPPSC_U_FBFPPSL_U_FBAARCE
"RTN","FBPAY67",76,0)
 Q
"RTN","FBPAY67",77,0)
ANC(FBM,FBI) ;ancillary payments - if fbsort (by patient)
"RTN","FBPAY67",78,0)
 N J,K,L,M,Y,FBDT1,FBVID
"RTN","FBPAY67",79,0)
 N FBCSID,FBADJLA,FBADJLR,FBRRMKL,FBUNITS,TAMT,T,FBADJ,FBFPPSC,FBFPPSL,FBAARCE
"RTN","FBPAY67",80,0)
 S J=FBIEN,FBCNT=0 I J,+FBIN(5),$D(^FBAAC("AM",FBIN(5),J)) D
"RTN","FBPAY67",81,0)
 .F K=0:0 S K=$O(^FBAAC("AM",FBIN(5),J,K)) Q:'K  S L=0 F  S L=$O(^FBAAC("AM",FBIN(5),J,K,L)) Q:'L  D
"RTN","FBPAY67",82,0)
 ..N FBOUT
"RTN","FBPAY67",83,0)
 ..S FBDT1=$P($G(^FBAAC(J,1,K,1,L,0)),U) I FBDT1]"" S FBDT2=(9999999.9999-FBDT1),FBDT1=$$DATX^FBAAUTL(FBDT1)
"RTN","FBPAY67",84,0)
 ..S M=0 F  S M=$O(^FBAAC("AM",FBIN(5),J,K,L,M)) Q:'M  S Y=$G(^FBAAC(J,1,K,1,L,1,M,0)) I Y]"" D
"RTN","FBPAY67",85,0)
 ...D EN1^FBPAY2 Q:'$D(FBAACPTC)!($G(FBOUT))  S FBCNT=FBCNT+1 D EN^FBPAY21
"RTN","FBPAY67",86,0)
 ...S ^TMP($J,"FB",FBPI,FBVEN,FBPAT,"A",K,L,M)=$G(FBR)_FBDT1_U_FBAACPTC_FBCP_$S($G(FBMODLE)]"":"-"_FBMODLE,1:"")_U_A1_U_A2_U_T_U_FBBN_U_FBIN_U_D2_U_FBSC_U_FBPDX_U_FBOB_U_FBVNAME_U_FBVID
"RTN","FBPAY67",87,0)
 ...S ^TMP($J,"FB",FBPI,FBVEN,FBPAT,"A",K,L,M,"FBCK")="^"_FBCK_"^"_FBCKDT_"^"_FBCANDT_"^"_FBCANR_"^"_FBCAN_"^"_FBDIS_"^"_FBCKINT
"RTN","FBPAY67",88,0)
 ...S ^TMP($J,"FB",FBPI,FBVEN,FBPAT,"A",K,L,M,"FBADJ")=TAMT_U_FBUNITS_U_FBADJLR_U_FBADJLA_U_FBRRMKL_U_FBCSID_U_FBFPPSC_U_FBFPPSL_U_FBAARCE
"RTN","FBPAY67",89,0)
 ...I $D(^TMP($J,"FB",FBPI_"O",FBVNAME_";"_FBVID,$P(FBPAT,";")_";"_$$SSN^FBAAUTL($P(FBPAT,";",2)),FBDT2)) K ^TMP($J,"FB",FBPI_"O",FBVNAME_";"_FBVID,$P(FBPAT,";")_";"_$$SSN^FBAAUTL($P(FBPAT,";",2)),FBDT2)
"RTN","FBPAY67",90,0)
 Q
"UP",162,162.03,-3)
162^1
"UP",162,162.03,-2)
162.01^1
"UP",162,162.03,-1)
162.02^1
"UP",162,162.03,0)
162.03
"VER")
8.0^22.0
"^DD",162,162.03,2,0)
AMOUNT PAID^RNJ9,2X^^0;3^S X=$TR(X,"$") K:+X'=X&(X'?.N.1".".2N)!(X>999999)!(X<0) X I $D(X) D OPPS^FBAAUTL2
"^DD",162,162.03,2,1,0)
^.1^^0
"^DD",162,162.03,2,3)
Type a number between 0 and 999999.
"^DD",162,162.03,2,21,0)
^^3^3^3140812^
"^DD",162,162.03,2,21,1,0)
The amount that the VA is going to pay for this service provided, not to 
"^DD",162,162.03,2,21,2,0)
exceed the amount entered in the AMOUNT CLAIMED (#1) field. Users holding 
"^DD",162,162.03,2,21,3,0)
the "FBAASUPERVISOR" key may override this limit.  
"^DD",162,162.03,2,"DT")
3140812
"BLD",9721,6)
^126
**END**
**END**

