Released FB*3.5*123 SEQ #130
Extracted from mail message
**KIDS**:FB*3.5*123^

**INSTALL NAME**
FB*3.5*123
"BLD",9098,0)
FB*3.5*123^FEE BASIS^0^3141120^y
"BLD",9098,1,0)
^^1^1^3140224^
"BLD",9098,1,1,0)
VA/DoD VistA Fee-IPAC Interface Enhancement
"BLD",9098,4,0)
^9.64PA^161.99^7
"BLD",9098,4,161.4,0)
161.4
"BLD",9098,4,161.4,2,0)
^9.641^161.4^1
"BLD",9098,4,161.4,2,161.4,0)
FEE BASIS SITE PARAMETERS  (File-top level)
"BLD",9098,4,161.4,2,161.4,1,0)
^9.6411^80^1
"BLD",9098,4,161.4,2,161.4,1,80,0)
LAST IPAC NUMBER
"BLD",9098,4,161.4,222)
y^n^p^^^^n^^n
"BLD",9098,4,161.4,224)

"BLD",9098,4,161.95,0)
161.95
"BLD",9098,4,161.95,222)
y^y^f^^^^n
"BLD",9098,4,161.96,0)
161.96
"BLD",9098,4,161.96,222)
y^y^f^^^^n
"BLD",9098,4,161.99,0)
161.99
"BLD",9098,4,161.99,222)
n^n^f^^n^^y^o^n
"BLD",9098,4,161.99,224)
N CD S CD=$P($G(^FBAA(161.99,Y,0)),U,1) I CD?1"C3"2N!(CD?1"I"3N)!(CD?1"D"3N)!(CD?1"F"3N)
"BLD",9098,4,162,0)
162
"BLD",9098,4,162,2,0)
^9.641^162.03^1
"BLD",9098,4,162,2,162.03,0)
SERVICE PROVIDED  (sub-file)
"BLD",9098,4,162,2,162.03,1,0)
^9.6411^.055^2
"BLD",9098,4,162,2,162.03,1,.05,0)
IPAC AGREEMENT
"BLD",9098,4,162,2,162.03,1,.055,0)
DoD INVOICE NUMBER
"BLD",9098,4,162,222)
y^n^p^^^^n^^n
"BLD",9098,4,162,224)

"BLD",9098,4,162.1,0)
162.1
"BLD",9098,4,162.1,2,0)
^9.641^162.11^2
"BLD",9098,4,162.1,2,162.1,0)
FEE BASIS PHARMACY INVOICE  (File-top level)
"BLD",9098,4,162.1,2,162.1,1,0)
^9.6411^14^1
"BLD",9098,4,162.1,2,162.1,1,14,0)
IPAC VENDOR AGREEMENT
"BLD",9098,4,162.1,2,162.11,0)
PRESCRIPTION NUMBER  (sub-file)
"BLD",9098,4,162.1,2,162.11,1,0)
^9.6411^39^1
"BLD",9098,4,162.1,2,162.11,1,39,0)
DoD INVOICE NUMBER
"BLD",9098,4,162.1,222)
y^n^p^^^^n^^n
"BLD",9098,4,162.1,224)

"BLD",9098,4,162.5,0)
162.5
"BLD",9098,4,162.5,2,0)
^9.641^162.5^1
"BLD",9098,4,162.5,2,162.5,0)
FEE BASIS INVOICE  (File-top level)
"BLD",9098,4,162.5,2,162.5,1,0)
^9.6411^87^2
"BLD",9098,4,162.5,2,162.5,1,86,0)
DoD INVOICE NUMBER
"BLD",9098,4,162.5,2,162.5,1,87,0)
IPAC VENDOR AGREEMENT
"BLD",9098,4,162.5,222)
y^n^p^^^^n^^n
"BLD",9098,4,162.5,224)

"BLD",9098,4,"APDD",161.4,161.4)

"BLD",9098,4,"APDD",161.4,161.4,80)

"BLD",9098,4,"APDD",162,162.03)

"BLD",9098,4,"APDD",162,162.03,.05)

"BLD",9098,4,"APDD",162,162.03,.055)

"BLD",9098,4,"APDD",162.1,162.1)

"BLD",9098,4,"APDD",162.1,162.1,14)

"BLD",9098,4,"APDD",162.1,162.11)

"BLD",9098,4,"APDD",162.1,162.11,39)

"BLD",9098,4,"APDD",162.5,162.5)

"BLD",9098,4,"APDD",162.5,162.5,86)

"BLD",9098,4,"APDD",162.5,162.5,87)

"BLD",9098,4,"B",161.4,161.4)

"BLD",9098,4,"B",161.95,161.95)

"BLD",9098,4,"B",161.96,161.96)

"BLD",9098,4,"B",161.99,161.99)

"BLD",9098,4,"B",162,162)

"BLD",9098,4,"B",162.1,162.1)

"BLD",9098,4,"B",162.5,162.5)

"BLD",9098,6)
26^
"BLD",9098,6.3)
51
"BLD",9098,"ABPKG")
n
"BLD",9098,"KRN",0)
^9.67PA^779.2^20
"BLD",9098,"KRN",.4,0)
.4
"BLD",9098,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9098,"KRN",.401,0)
.401
"BLD",9098,"KRN",.402,0)
.402
"BLD",9098,"KRN",.402,"NM",0)
^9.68A^4^4
"BLD",9098,"KRN",.402,"NM",1,0)
FBCH ENTER PAYMENT    FILE #162.5^162.5^0
"BLD",9098,"KRN",.402,"NM",2,0)
FBCH EDIT PAYMENT    FILE #162.5^162.5^0
"BLD",9098,"KRN",.402,"NM",3,0)
FBAA INVOICE EDIT    FILE #162.1^162.1^1^
"BLD",9098,"KRN",.402,"NM",4,0)
FB ADD RX    FILE #162.1^162.1^0
"BLD",9098,"KRN",.402,"NM","B","FB ADD RX    FILE #162.1",4)

"BLD",9098,"KRN",.402,"NM","B","FBAA INVOICE EDIT    FILE #162.1",3)

"BLD",9098,"KRN",.402,"NM","B","FBCH EDIT PAYMENT    FILE #162.5",2)

"BLD",9098,"KRN",.402,"NM","B","FBCH ENTER PAYMENT    FILE #162.5",1)

"BLD",9098,"KRN",.403,0)
.403
"BLD",9098,"KRN",.5,0)
.5
"BLD",9098,"KRN",.84,0)
.84
"BLD",9098,"KRN",3.6,0)
3.6
"BLD",9098,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",9098,"KRN",3.6,"NM",1,0)
FBAA PURGE TRANSMITTED MRA'S^^0
"BLD",9098,"KRN",3.6,"NM","B","FBAA PURGE TRANSMITTED MRA'S",1)

"BLD",9098,"KRN",3.8,0)
3.8
"BLD",9098,"KRN",9.2,0)
9.2
"BLD",9098,"KRN",9.8,0)
9.8
"BLD",9098,"KRN",9.8,"NM",0)
^9.68A^47^37
"BLD",9098,"KRN",9.8,"NM",2,0)
FBAAIAD^^0^B14523385
"BLD",9098,"KRN",9.8,"NM",3,0)
FBAAIAE^^0^B52924225
"BLD",9098,"KRN",9.8,"NM",4,0)
FBAAIAQ^^0^B54819266
"BLD",9098,"KRN",9.8,"NM",5,0)
FBAAIAV^^0^B3188216
"BLD",9098,"KRN",9.8,"NM",6,0)
FBAAV8^^0^B119931377
"BLD",9098,"KRN",9.8,"NM",7,0)
FBAAV0^^0^B56393278
"BLD",9098,"KRN",9.8,"NM",10,0)
FBAARMRA^^0^B11284064
"BLD",9098,"KRN",9.8,"NM",11,0)
FBCHEP^^0^B37636915
"BLD",9098,"KRN",9.8,"NM",12,0)
FBCHEP1^^0^B47429330
"BLD",9098,"KRN",9.8,"NM",13,0)
FBAAEPI^^0^B27520800
"BLD",9098,"KRN",9.8,"NM",14,0)
FBCHPET^^0^B40858494
"BLD",9098,"KRN",9.8,"NM",15,0)
FBAAMP^^0^B145435703
"BLD",9098,"KRN",9.8,"NM",16,0)
FBAAMPG1^^0^B6611500
"BLD",9098,"KRN",9.8,"NM",17,0)
FBAAMPRG^^0^B8621277
"BLD",9098,"KRN",9.8,"NM",18,0)
FBAACP^^1^
"BLD",9098,"KRN",9.8,"NM",19,0)
FBAACO^^0^B48482031
"BLD",9098,"KRN",9.8,"NM",20,0)
FBAAV01^^0^B27989531
"BLD",9098,"KRN",9.8,"NM",21,0)
FBAAV2^^0^B17032694
"BLD",9098,"KRN",9.8,"NM",22,0)
FBAAV5^^0^B101588501
"BLD",9098,"KRN",9.8,"NM",23,0)
FBAAPIN^^0^B39786989
"BLD",9098,"KRN",9.8,"NM",25,0)
FBCHVH^^0^B38454495
"BLD",9098,"KRN",9.8,"NM",32,0)
FBAAPET^^0^B48467737
"BLD",9098,"KRN",9.8,"NM",33,0)
FBAAPIE^^0^B25905815
"BLD",9098,"KRN",9.8,"NM",34,0)
FBAAPP^^0^B25732813
"BLD",9098,"KRN",9.8,"NM",35,0)
FBAACO2^^0^B30248280
"BLD",9098,"KRN",9.8,"NM",36,0)
FBAAPET1^^0^B56662432
"BLD",9098,"KRN",9.8,"NM",37,0)
FBCHRR^^0^B13548321
"BLD",9098,"KRN",9.8,"NM",38,0)
FBAAIAU^^0^B136125248
"BLD",9098,"KRN",9.8,"NM",39,0)
FBAAIAR^^0^B210368193
"BLD",9098,"KRN",9.8,"NM",40,0)
FBAAIARA^^0^B89421506
"BLD",9098,"KRN",9.8,"NM",41,0)
FBAACP1^^1^
"BLD",9098,"KRN",9.8,"NM",42,0)
FBAAIAR1^^0^B134256276
"BLD",9098,"KRN",9.8,"NM",43,0)
FBAAIAR2^^0^B60901930
"BLD",9098,"KRN",9.8,"NM",44,0)
FBAAIARB^^0^B65763537
"BLD",9098,"KRN",9.8,"NM",45,0)
FBAAIARC^^0^B156464417
"BLD",9098,"KRN",9.8,"NM",46,0)
FBAAIARD^^0^B110671934
"BLD",9098,"KRN",9.8,"NM",47,0)
FBPAID1^^0^B24215121
"BLD",9098,"KRN",9.8,"NM","B","FBAACO",19)

"BLD",9098,"KRN",9.8,"NM","B","FBAACO2",35)

"BLD",9098,"KRN",9.8,"NM","B","FBAACP",18)

"BLD",9098,"KRN",9.8,"NM","B","FBAACP1",41)

"BLD",9098,"KRN",9.8,"NM","B","FBAAEPI",13)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIAD",2)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIAE",3)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIAQ",4)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIAR",39)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIAR1",42)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIAR2",43)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIARA",40)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIARB",44)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIARC",45)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIARD",46)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIAU",38)

"BLD",9098,"KRN",9.8,"NM","B","FBAAIAV",5)

"BLD",9098,"KRN",9.8,"NM","B","FBAAMP",15)

"BLD",9098,"KRN",9.8,"NM","B","FBAAMPG1",16)

"BLD",9098,"KRN",9.8,"NM","B","FBAAMPRG",17)

"BLD",9098,"KRN",9.8,"NM","B","FBAAPET",32)

"BLD",9098,"KRN",9.8,"NM","B","FBAAPET1",36)

"BLD",9098,"KRN",9.8,"NM","B","FBAAPIE",33)

"BLD",9098,"KRN",9.8,"NM","B","FBAAPIN",23)

"BLD",9098,"KRN",9.8,"NM","B","FBAAPP",34)

"BLD",9098,"KRN",9.8,"NM","B","FBAARMRA",10)

"BLD",9098,"KRN",9.8,"NM","B","FBAAV0",7)

"BLD",9098,"KRN",9.8,"NM","B","FBAAV01",20)

"BLD",9098,"KRN",9.8,"NM","B","FBAAV2",21)

"BLD",9098,"KRN",9.8,"NM","B","FBAAV5",22)

"BLD",9098,"KRN",9.8,"NM","B","FBAAV8",6)

"BLD",9098,"KRN",9.8,"NM","B","FBCHEP",11)

"BLD",9098,"KRN",9.8,"NM","B","FBCHEP1",12)

"BLD",9098,"KRN",9.8,"NM","B","FBCHPET",14)

"BLD",9098,"KRN",9.8,"NM","B","FBCHRR",37)

"BLD",9098,"KRN",9.8,"NM","B","FBCHVH",25)

"BLD",9098,"KRN",9.8,"NM","B","FBPAID1",47)

"BLD",9098,"KRN",19,0)
19
"BLD",9098,"KRN",19,"NM",0)
^9.68A^27^19
"BLD",9098,"KRN",19,"NM",3,0)
FBAA IPAC AGREEMENT DELETE^^0^
"BLD",9098,"KRN",19,"NM",4,0)
FBAA IPAC AGREEMENT VIEW^^0^
"BLD",9098,"KRN",19,"NM",5,0)
FBAA IPAC AGREEMENT MENU^^0^
"BLD",9098,"KRN",19,"NM",9,0)
FBAA MRA IPAC DELETE TYPE^^0^
"BLD",9098,"KRN",19,"NM",10,0)
FBAA IPAC AGREEMENT MRA MENU^^0^
"BLD",9098,"KRN",19,"NM",11,0)
FBAA MRA IPAC CHANGE TYPE^^0^
"BLD",9098,"KRN",19,"NM",12,0)
FBAA MRA IPAC ADD TYPE^^0^
"BLD",9098,"KRN",19,"NM",13,0)
FBAA VENDOR OPTIONS^^2
"BLD",9098,"KRN",19,"NM",14,0)
FB MRA MAIN MENU^^2
"BLD",9098,"KRN",19,"NM",15,0)
FBCH OUTPUT MENU^^2
"BLD",9098,"KRN",19,"NM",16,0)
FBAA REQUEUE MRA^^0
"BLD",9098,"KRN",19,"NM",17,0)
FBAA OUTPUTS MENU^^2
"BLD",9098,"KRN",19,"NM",18,0)
FB PHONE MENU^^2
"BLD",9098,"KRN",19,"NM",22,0)
FBAA IPAC AGREEMENT ENTER/EDIT^^0
"BLD",9098,"KRN",19,"NM",23,0)
FBAA IPAC VENDOR REPORT MENU^^0
"BLD",9098,"KRN",19,"NM",24,0)
FBAA IPAC DoD INVOICE INQUIRY^^0
"BLD",9098,"KRN",19,"NM",25,0)
FBAA IPAC DoD INVOICE RPT^^0
"BLD",9098,"KRN",19,"NM",26,0)
FBAA IPAC VENDOR PAYMENT RPT^^0
"BLD",9098,"KRN",19,"NM",27,0)
FBAA C&P ENTER PAYMENT^^1^
"BLD",9098,"KRN",19,"NM","B","FB MRA MAIN MENU",14)

"BLD",9098,"KRN",19,"NM","B","FB PHONE MENU",18)

"BLD",9098,"KRN",19,"NM","B","FBAA C&P ENTER PAYMENT",27)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC AGREEMENT DELETE",3)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC AGREEMENT ENTER/EDIT",22)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC AGREEMENT MENU",5)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC AGREEMENT MRA MENU",10)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC AGREEMENT VIEW",4)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC DoD INVOICE INQUIRY",24)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC DoD INVOICE RPT",25)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC VENDOR PAYMENT RPT",26)

"BLD",9098,"KRN",19,"NM","B","FBAA IPAC VENDOR REPORT MENU",23)

"BLD",9098,"KRN",19,"NM","B","FBAA MRA IPAC ADD TYPE",12)

"BLD",9098,"KRN",19,"NM","B","FBAA MRA IPAC CHANGE TYPE",11)

"BLD",9098,"KRN",19,"NM","B","FBAA MRA IPAC DELETE TYPE",9)

"BLD",9098,"KRN",19,"NM","B","FBAA OUTPUTS MENU",17)

"BLD",9098,"KRN",19,"NM","B","FBAA REQUEUE MRA",16)

"BLD",9098,"KRN",19,"NM","B","FBAA VENDOR OPTIONS",13)

"BLD",9098,"KRN",19,"NM","B","FBCH OUTPUT MENU",15)

"BLD",9098,"KRN",19.1,0)
19.1
"BLD",9098,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",9098,"KRN",19.1,"NM",1,0)
FB IPAC VENDOR^^0
"BLD",9098,"KRN",19.1,"NM","B","FB IPAC VENDOR",1)

"BLD",9098,"KRN",101,0)
101
"BLD",9098,"KRN",101,"NM",0)
^9.68A^^
"BLD",9098,"KRN",409.61,0)
409.61
"BLD",9098,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9098,"KRN",771,0)
771
"BLD",9098,"KRN",771,"NM",0)
^9.68A^^
"BLD",9098,"KRN",779.2,0)
779.2
"BLD",9098,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",9098,"KRN",870,0)
870
"BLD",9098,"KRN",870,"NM",0)
^9.68A^^
"BLD",9098,"KRN",8989.51,0)
8989.51
"BLD",9098,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",9098,"KRN",8989.52,0)
8989.52
"BLD",9098,"KRN",8994,0)
8994
"BLD",9098,"KRN","B",.4,.4)

"BLD",9098,"KRN","B",.401,.401)

"BLD",9098,"KRN","B",.402,.402)

"BLD",9098,"KRN","B",.403,.403)

"BLD",9098,"KRN","B",.5,.5)

"BLD",9098,"KRN","B",.84,.84)

"BLD",9098,"KRN","B",3.6,3.6)

"BLD",9098,"KRN","B",3.8,3.8)

"BLD",9098,"KRN","B",9.2,9.2)

"BLD",9098,"KRN","B",9.8,9.8)

"BLD",9098,"KRN","B",19,19)

"BLD",9098,"KRN","B",19.1,19.1)

"BLD",9098,"KRN","B",101,101)

"BLD",9098,"KRN","B",409.61,409.61)

"BLD",9098,"KRN","B",771,771)

"BLD",9098,"KRN","B",779.2,779.2)

"BLD",9098,"KRN","B",870,870)

"BLD",9098,"KRN","B",8989.51,8989.51)

"BLD",9098,"KRN","B",8989.52,8989.52)

"BLD",9098,"KRN","B",8994,8994)

"BLD",9098,"QDEF")
^^^^^^^^
"BLD",9098,"QUES",0)
^9.62^^
"BLD",9098,"REQB",0)
^9.611^6^5
"BLD",9098,"REQB",1,0)
FB*3.5*18^2
"BLD",9098,"REQB",3,0)
FB*3.5*144^2
"BLD",9098,"REQB",4,0)
FB*3.5*91^2
"BLD",9098,"REQB",5,0)
FB*3.5*139^2
"BLD",9098,"REQB",6,0)
FB*3.5*143^2
"BLD",9098,"REQB","B","FB*3.5*139",5)

"BLD",9098,"REQB","B","FB*3.5*143",6)

"BLD",9098,"REQB","B","FB*3.5*144",3)

"BLD",9098,"REQB","B","FB*3.5*18",1)

"BLD",9098,"REQB","B","FB*3.5*91",4)

"DATA",161.99,122,0)
C301
"DATA",161.99,122,1,0)
^161.991^1^1^3140423^^^^
"DATA",161.99,122,1,1,0)
IPAC Agreement record status is not Active.
"DATA",161.99,123,0)
C302
"DATA",161.99,123,1,0)
^161.991^1^1^3140423^^^^
"DATA",161.99,123,1,1,0)
IPAC Agreement record cannot be found.
"DATA",161.99,124,0)
C303
"DATA",161.99,124,1,0)
^^1^1^3140423^
"DATA",161.99,124,1,1,0)
DoD Invoice Number field is all spaces.
"DATA",161.99,125,0)
C304
"DATA",161.99,125,1,0)
^161.991^2^2^3140423^^^
"DATA",161.99,125,1,1,0)
DoD Invoice Number field is not all spaces and IPAC Agreement ID field
"DATA",161.99,125,1,2,0)
is all spaces.
"DATA",161.99,126,0)
C305
"DATA",161.99,126,1,0)
^161.991^1^1^3140423^^^^
"DATA",161.99,126,1,1,0)
IPAC Vendor Type value is not 'F' for Federal Vendor.
"DATA",161.99,127,0)
C306
"DATA",161.99,127,1,0)
^161.991^1^1^3140423^^^^
"DATA",161.99,127,1,1,0)
IPAC Agreement ID field or DoD Invoice# field is all '9's.
"DATA",161.99,128,0)
D001
"DATA",161.99,128,1,0)
^^2^2^3140310^
"DATA",161.99,128,1,1,0)
No Line of Accounting (LOA) and/or Fiscal Station Number 
"DATA",161.99,128,1,2,0)
(FSN).  ALC has more than 240 Stations.
"DATA",161.99,129,0)
D002
"DATA",161.99,129,1,0)
^^1^1^3140310^
"DATA",161.99,129,1,1,0)
Unable to identify.  Need original IPAC Number and accomplish date.
"DATA",161.99,130,0)
D003
"DATA",161.99,130,1,0)
^^2^2^3140310^
"DATA",161.99,130,1,1,0)
No Obligating Doc # (MIPR #). Needs to be resubmitted with the 
"DATA",161.99,130,1,2,0)
correct DCN.
"DATA",161.99,131,0)
D004
"DATA",161.99,131,1,0)
^161.991^1^1^3140311^^
"DATA",161.99,131,1,1,0)
The FSN you have entered is not a valid station number for this ALC.
"DATA",161.99,132,0)
F001
"DATA",161.99,132,1,0)
^^1^1^3140310^
"DATA",161.99,132,1,1,0)
Invalid Header(H) transaction record length.
"DATA",161.99,133,0)
F002
"DATA",161.99,133,1,0)
^^1^1^3140310^
"DATA",161.99,133,1,1,0)
Total Transaction Amount is not numeric or zero.
"DATA",161.99,134,0)
F003
"DATA",161.99,134,1,0)
^^1^1^3140310^
"DATA",161.99,134,1,1,0)
Invalid or missing ALC code.
"DATA",161.99,135,0)
F004
"DATA",161.99,135,1,0)
^^1^1^3140310^
"DATA",161.99,135,1,1,0)
Missing Sender DO Symbol.
"DATA",161.99,136,0)
F005
"DATA",161.99,136,1,0)
^^1^1^3140310^
"DATA",161.99,136,1,1,0)
Invalid or missing Transaction Type.
"DATA",161.99,137,0)
F006
"DATA",161.99,137,1,0)
^^1^1^3140310^
"DATA",161.99,137,1,1,0)
Missing Vendor Code.
"DATA",161.99,138,0)
F007
"DATA",161.99,138,1,0)
^161.991^1^1^3140310^^
"DATA",161.99,138,1,1,0)
Invalid Vendor Code.
"DATA",161.99,139,0)
F008
"DATA",161.99,139,1,0)
^161.991^1^1^3140310^^
"DATA",161.99,139,1,1,0)
Invalid or missing Station.
"DATA",161.99,140,0)
F009
"DATA",161.99,140,1,0)
^^1^1^3140310^
"DATA",161.99,140,1,1,0)
Invalid FMS Document Type.
"DATA",161.99,141,0)
F010
"DATA",161.99,141,1,0)
^^1^1^3140310^
"DATA",161.99,141,1,1,0)
Missing Agency Record Id.
"DATA",161.99,142,0)
F011
"DATA",161.99,142,1,0)
^^1^1^3140310^
"DATA",161.99,142,1,1,0)
Duplicate Agency Record Id.
"DATA",161.99,143,0)
F012
"DATA",161.99,143,1,0)
^^1^1^3140310^
"DATA",161.99,143,1,1,0)
Invalid Detail(D) transaction record length.
"DATA",161.99,144,0)
F013
"DATA",161.99,144,1,0)
^^2^2^3140311^
"DATA",161.99,144,1,1,0)
Detail Amount is not numeric or zero or distinct to the Total 
"DATA",161.99,144,1,2,0)
Transaction Amount.
"DATA",161.99,145,0)
F014
"DATA",161.99,145,1,0)
^^1^1^3140310^
"DATA",161.99,145,1,1,0)
Missing Contact Name
"DATA",161.99,146,0)
F015
"DATA",161.99,146,1,0)
^^1^1^3140310^
"DATA",161.99,146,1,1,0)
Invalid or Missing Contact Email Address.
"DATA",161.99,147,0)
F016
"DATA",161.99,147,1,0)
^^1^1^3140310^
"DATA",161.99,147,1,1,0)
Invalid or Missing Contact Phone Number.
"DATA",161.99,148,0)
F017
"DATA",161.99,148,1,0)
^^1^1^3140310^
"DATA",161.99,148,1,1,0)
Missing Description.
"DATA",161.99,149,0)
F018
"DATA",161.99,149,1,0)
^^1^1^3140310^
"DATA",161.99,149,1,1,0)
Invalid or Missing Fiscal Station Number.
"DATA",161.99,150,0)
F019
"DATA",161.99,150,1,0)
^^1^1^3140310^
"DATA",161.99,150,1,1,0)
Missing Invoice Number.
"DATA",161.99,151,0)
F020
"DATA",161.99,151,1,0)
^^1^1^3140310^
"DATA",161.99,151,1,1,0)
Missing Obligating Document Number.
"DATA",161.99,152,0)
F021
"DATA",161.99,152,1,0)
^^1^1^3140310^
"DATA",161.99,152,1,1,0)
Invalid or Missing Pay Flag.
"DATA",161.99,153,0)
F022
"DATA",161.99,153,1,0)
^^1^1^3140310^
"DATA",161.99,153,1,1,0)
Missing Purchase Order Number
"DATA",161.99,154,0)
F023
"DATA",161.99,154,1,0)
^^1^1^3140310^
"DATA",161.99,154,1,1,0)
Invalid or Missing Quantity.
"DATA",161.99,155,0)
F024
"DATA",161.99,155,1,0)
^^1^1^3140310^
"DATA",161.99,155,1,1,0)
Missing Receiver Treasury Account Symbol.
"DATA",161.99,156,0)
F025
"DATA",161.99,156,1,0)
^^1^1^3140310^
"DATA",161.99,156,1,1,0)
Missing Receiver Business Event Type Code.
"DATA",161.99,157,0)
F026
"DATA",161.99,157,1,0)
^^1^1^3140310^
"DATA",161.99,157,1,1,0)
Missing Sender Treasury Account Symbol
"DATA",161.99,158,0)
F027
"DATA",161.99,158,1,0)
^^1^1^3140310^
"DATA",161.99,158,1,1,0)
Missing Sender Business Event Type Code.
"DATA",161.99,159,0)
F028
"DATA",161.99,159,1,0)
^^1^1^3140310^
"DATA",161.99,159,1,1,0)
Invalid or Missing Unit of Issue.
"DATA",161.99,160,0)
F029
"DATA",161.99,160,1,0)
^161.991^1^1^3140310^^
"DATA",161.99,160,1,1,0)
Invalid or Missing Unit Price.
"DATA",161.99,161,0)
I001
"DATA",161.99,161,1,0)
^^1^1^3140310^
"DATA",161.99,161,1,1,0)
A required field is missing - Accounting Classification Code (ACL/CD).
"DATA",161.99,162,0)
I002
"DATA",161.99,162,1,0)
^^1^1^3140310^
"DATA",161.99,162,1,1,0)
A required field is missing - Contract Number.
"DATA",161.99,163,0)
I003
"DATA",161.99,163,1,0)
^^1^1^3140310^
"DATA",161.99,163,1,1,0)
A required field is missing - Invoice Number.
"DATA",161.99,164,0)
I004
"DATA",161.99,164,1,0)
^^1^1^3140310^
"DATA",161.99,164,1,1,0)
A required field is missing - Job Number.
"DATA",161.99,165,0)
I005
"DATA",161.99,165,1,0)
^^1^1^3140310^
"DATA",161.99,165,1,1,0)
A required field is missing - Miscellaneous Information.
"DATA",161.99,166,0)
I006
"DATA",161.99,166,1,0)
^^1^1^3140310^
"DATA",161.99,166,1,1,0)
A required field is missing - Obligating Document Number.
"DATA",161.99,167,0)
I007
"DATA",161.99,167,1,0)
^^1^1^3140310^
"DATA",161.99,167,1,1,0)
A required field is missing - Purchase Order Number.
"DATA",161.99,168,0)
I008
"DATA",161.99,168,1,0)
^^1^1^3140310^
"DATA",161.99,168,1,1,0)
A required field is missing - Receiver BETC.
"DATA",161.99,169,0)
I009
"DATA",161.99,169,1,0)
^^1^1^3140310^
"DATA",161.99,169,1,1,0)
A required field is missing - Receiver Treasury Account Symbol.
"DATA",161.99,170,0)
I010
"DATA",161.99,170,1,0)
^^1^1^3140310^
"DATA",161.99,170,1,1,0)
A required field is missing - Requisition Number.
"DATA",161.99,171,0)
I011
"DATA",161.99,171,1,0)
^^1^1^3140310^
"DATA",161.99,171,1,1,0)
A required field is missing - Sender BETC.
"DATA",161.99,172,0)
I012
"DATA",161.99,172,1,0)
^^1^1^3140310^
"DATA",161.99,172,1,1,0)
A required field is missing - Sender Treasury Account Symbol.
"DATA",161.99,173,0)
I013
"DATA",161.99,173,1,0)
^^1^1^3140310^
"DATA",161.99,173,1,1,0)
A required field is missing - Transaction Description.
"DATA",161.99,174,0)
I014
"DATA",161.99,174,1,0)
^^1^1^3140310^
"DATA",161.99,174,1,1,0)
ALC/BPN combination is invalid.
"DATA",161.99,175,0)
I015
"DATA",161.99,175,1,0)
^^1^1^3140311^
"DATA",161.99,175,1,1,0)
Detail Amount should be equal to Quantity * Unit Price.
"DATA",161.99,176,0)
I016
"DATA",161.99,176,1,0)
^^1^1^3140310^
"DATA",161.99,176,1,1,0)
Duplicate Document Reference Number Found.
"DATA",161.99,177,0)
I017
"DATA",161.99,177,1,0)
^^1^1^3140310^
"DATA",161.99,177,1,1,0)
Invalid Department Code.
"DATA",161.99,178,0)
I018
"DATA",161.99,178,1,0)
^^1^1^3140310^
"DATA",161.99,178,1,1,0)
Invalid Format Of Batch Record Type.
"DATA",161.99,179,0)
I019
"DATA",161.99,179,1,0)
^^1^1^3140310^
"DATA",161.99,179,1,1,0)
Invalid Length Of Description.
"DATA",161.99,180,0)
I020
"DATA",161.99,180,1,0)
^^1^1^3140310^
"DATA",161.99,180,1,1,0)
Quantity Is Invalid.
"DATA",161.99,181,0)
I021
"DATA",161.99,181,1,0)
^^1^1^3140310^
"DATA",161.99,181,1,1,0)
Receiver BETC invalid for Blank Receiver TAS.
"DATA",161.99,182,0)
I022
"DATA",161.99,182,1,0)
^^1^1^3140310^
"DATA",161.99,182,1,1,0)
Receiver TAS-BETC Pair Does Not Exist.
"DATA",161.99,183,0)
I023
"DATA",161.99,183,1,0)
^^1^1^3140310^
"DATA",161.99,183,1,1,0)
Receiver Treasury Account Symbol Does Not Exist.
"DATA",161.99,184,0)
I024
"DATA",161.99,184,1,0)
^161.991^1^1^3140311^^
"DATA",161.99,184,1,1,0)
Sender TAS-BETC pair does not exist.
"DATA",161.99,185,0)
I025
"DATA",161.99,185,1,0)
^^1^1^3140310^
"DATA",161.99,185,1,1,0)
Sender treasury Account Symbol does not exist.
"DATA",161.99,186,0)
I026
"DATA",161.99,186,1,0)
^^1^1^3140310^
"DATA",161.99,186,1,1,0)
Station Contact Phone Number Missing.
"DATA",161.99,187,0)
C325
"DATA",161.99,187,1,0)
^^1^1^3140506^
"DATA",161.99,187,1,1,0)
IPAC Payment to DFAS Vendor without IPAC Agreement data not allowed.
"DATA",161.99,188,0)
C307
"DATA",161.99,188,1,0)
^161.991^1^1^3140423^^^
"DATA",161.99,188,1,1,0)
Station Number field is invalid
"DATA",161.99,190,0)
C310
"DATA",161.99,190,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,190,1,1,0)
Description field is all spaces
"DATA",161.99,191,0)
C311
"DATA",161.99,191,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,191,1,1,0)
Status field is all spaces
"DATA",161.99,192,0)
C312
"DATA",161.99,192,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,192,1,1,0)
Date field is all spaces
"DATA",161.99,193,0)
C313
"DATA",161.99,193,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,193,1,1,0)
Customer ALC field is all spaces
"DATA",161.99,194,0)
C314
"DATA",161.99,194,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,194,1,1,0)
Receiver TAS field is all spaces
"DATA",161.99,195,0)
C315
"DATA",161.99,195,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,195,1,1,0)
Agency Field Station Number field is all spaces
"DATA",161.99,196,0)
C316
"DATA",161.99,196,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,196,1,1,0)
Obligation Document Number field is all spaces
"DATA",161.99,197,0)
C317
"DATA",161.99,197,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,197,1,1,0)
Station Contact Name field is all spaces
"DATA",161.99,198,0)
C318
"DATA",161.99,198,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,198,1,1,0)
Station Contact Phone field is all spaces
"DATA",161.99,199,0)
C319
"DATA",161.99,199,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,199,1,1,0)
Station Contact Email field is all spaces
"DATA",161.99,200,0)
C320
"DATA",161.99,200,1,0)
^^1^1^3140423^
"DATA",161.99,200,1,1,0)
Complete Line of Accounting field is all spaces
"DATA",161.99,201,0)
C321
"DATA",161.99,201,1,0)
^^1^1^3140423^
"DATA",161.99,201,1,1,0)
Goods and Services field is all spaces
"DATA",161.99,202,0)
C322
"DATA",161.99,202,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,202,1,1,0)
Sender TAS field is all spaces
"DATA",161.99,203,0)
C324
"DATA",161.99,203,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,203,1,1,0)
C8 Action code is not valid, must be 'A', 'C', or 'D'
"DATA",161.99,204,0)
C326
"DATA",161.99,204,1,0)
^161.991^1^1^3140423^^
"DATA",161.99,204,1,1,0)
Station or Vendor not found
"DATA",161.99,205,0)
C308
"DATA",161.99,205,1,0)
^161.991^1^1^3140423^^^^
"DATA",161.99,205,1,1,0)
Fiscal Year field is all spaces
"DATA",161.99,206,0)
F030
"DATA",161.99,206,1,0)
^^1^1^3141027^
"DATA",161.99,206,1,1,0)
Invalid or missing VA Obligation
"FIA",161.4)
FEE BASIS SITE PARAMETERS
"FIA",161.4,0)
^FBAA(161.4,
"FIA",161.4,0,0)
161.4
"FIA",161.4,0,1)
y^n^p^^^^n^^n
"FIA",161.4,0,10)

"FIA",161.4,0,11)

"FIA",161.4,0,"RLRO")

"FIA",161.4,0,"VR")
3.5^FB
"FIA",161.4,161.4)
1
"FIA",161.4,161.4,80)

"FIA",161.95)
IPAC VENDOR AGREEMENT FILE
"FIA",161.95,0)
^FBAA(161.95,
"FIA",161.95,0,0)
161.95I
"FIA",161.95,0,1)
y^y^f^^^^n
"FIA",161.95,0,10)

"FIA",161.95,0,11)

"FIA",161.95,0,"RLRO")

"FIA",161.95,0,"VR")
3.5^FB
"FIA",161.95,161.95)
0
"FIA",161.96)
IPAC VENDOR AGREEMENT MRA
"FIA",161.96,0)
^FBAA(161.96,
"FIA",161.96,0,0)
161.96
"FIA",161.96,0,1)
y^y^f^^^^n
"FIA",161.96,0,10)

"FIA",161.96,0,11)

"FIA",161.96,0,"RLRO")

"FIA",161.96,0,"VR")
3.5^FB
"FIA",161.96,161.96)
0
"FIA",161.99)
FEE BASIS PAYMENT REJECT CODE
"FIA",161.99,0)
^FBAA(161.99,
"FIA",161.99,0,0)
161.99
"FIA",161.99,0,1)
n^n^f^^n^^y^o^n
"FIA",161.99,0,10)

"FIA",161.99,0,11)
N CD S CD=$P($G(^FBAA(161.99,Y,0)),U,1) I CD?1"C3"2N!(CD?1"I"3N)!(CD?1"D"3N)!(CD?1"F"3N)
"FIA",161.99,0,"RLRO")

"FIA",161.99,0,"VR")
3.5^FB
"FIA",161.99,161.99)
0
"FIA",161.99,161.991)
0
"FIA",162)
FEE BASIS PAYMENT
"FIA",162,0)
^FBAAC(
"FIA",162,0,0)
162P
"FIA",162,0,1)
y^n^p^^^^n^^n
"FIA",162,0,10)

"FIA",162,0,11)

"FIA",162,0,"RLRO")

"FIA",162,0,"VR")
3.5^FB
"FIA",162,162)
1
"FIA",162,162.03)
1
"FIA",162,162.03,.05)

"FIA",162,162.03,.055)

"FIA",162.1)
FEE BASIS PHARMACY INVOICE
"FIA",162.1,0)
^FBAA(162.1,
"FIA",162.1,0,0)
162.1
"FIA",162.1,0,1)
y^n^p^^^^n^^n
"FIA",162.1,0,10)

"FIA",162.1,0,11)

"FIA",162.1,0,"RLRO")

"FIA",162.1,0,"VR")
3.5^FB
"FIA",162.1,162.1)
1
"FIA",162.1,162.1,14)

"FIA",162.1,162.11)
1
"FIA",162.1,162.11,39)

"FIA",162.5)
FEE BASIS INVOICE
"FIA",162.5,0)
^FBAAI(
"FIA",162.5,0,0)
162.5
"FIA",162.5,0,1)
y^n^p^^^^n^^n
"FIA",162.5,0,10)

"FIA",162.5,0,11)

"FIA",162.5,0,"RLRO")

"FIA",162.5,0,"VR")
3.5^FB
"FIA",162.5,162.5)
1
"FIA",162.5,162.5,86)

"FIA",162.5,162.5,87)

"IX",161.95,161.95,"AVA",0)
161.95^AVA^Index by vendor and status^R^^R^IR^I^161.95^^^^^S
"IX",161.95,161.95,"AVA",.1,0)
^^1^1^3130906^
"IX",161.95,161.95,"AVA",.1,1,0)
This is an index by vendor and by status.
"IX",161.95,161.95,"AVA",1)
S ^FBAA(161.95,"AVA",$E(X(1),1,30),$E(X(2),1,1),DA)=""
"IX",161.95,161.95,"AVA",2)
K ^FBAA(161.95,"AVA",$E(X(1),1,30),$E(X(2),1,1),DA)
"IX",161.95,161.95,"AVA",2.5)
K ^FBAA(161.95,"AVA")
"IX",161.95,161.95,"AVA",11.1,0)
^.114IA^2^2
"IX",161.95,161.95,"AVA",11.1,1,0)
1^F^161.95^1^30^1^F
"IX",161.95,161.95,"AVA",11.1,1,3)

"IX",161.95,161.95,"AVA",11.1,2,0)
2^F^161.95^3^1^2^F
"IX",161.95,161.95,"AVA",11.1,2,3)

"KRN",.402,1025,-1)
0^1
"KRN",.402,1025,0)
FBCH ENTER PAYMENT^3140805.2247^^162.5^^^3120530
"KRN",.402,1025,"DIAB",1,0,162.5,11)
36.22;REQ
"KRN",.402,1025,"DIAB",1,0,162.5,22)
35.72;REQ
"KRN",.402,1025,"DIAB",1,0,162.5,24)
36.02;REQ
"KRN",.402,1025,"DIAB",1,0,162.5,26)
36.32;REQ
"KRN",.402,1025,"DIAB",1,0,162.5,28)
36.62;REQ
"KRN",.402,1025,"DIAB",1,0,162.5,30)
36.92;REQ
"KRN",.402,1025,"DIAB",2,0,162.5,9)
35.72;REQ
"KRN",.402,1025,"DIAB",2,0,162.5,12)
36.52;REQ
"KRN",.402,1025,"DIAB",3,0,162.5,5)
31.02;REQ
"KRN",.402,1025,"DIAB",3,0,162.5,6)
34.02;REQ
"KRN",.402,1025,"DIAB",3,0,162.5,7)
35.22;REQ
"KRN",.402,1025,"DIAB",3,0,162.5,10)
36.02;REQ
"KRN",.402,1025,"DIAB",3,0,162.5,13)
36.82;REQ
"KRN",.402,1025,"DIAB",3,0,162.5,14)
30.02;REQ
"KRN",.402,1025,"DIAB",3,0,162.5,16)
33.02;REQ
"KRN",.402,1025,"DIAB",4,0,162.5,8)
35.52;REQ
"KRN",.402,1025,"DIAB",4,0,162.5,17)
35.02;REQ
"KRN",.402,1025,"DIAB",4,0,162.5,19)
35.32;REQ
"KRN",.402,1025,"DIAB",4,0,162.5,21)
35.62;REQ
"KRN",.402,1025,"DIAB",4,0,162.5,23)
35.92;REQ
"KRN",.402,1025,"DIAB",4,0,162.5,25)
36.22;REQ
"KRN",.402,1025,"DIAB",4,0,162.5,27)
36.52;REQ
"KRN",.402,1025,"DIAB",4,0,162.5,29)
36.82;REQ
"KRN",.402,1025,"DIAB",5,0,162.5,11)
36.32;REQ
"KRN",.402,1025,"DIAB",5,0,162.5,15)
32.02;REQ
"KRN",.402,1025,"DIAB",6,0,162.5,9)
35.82;REQ
"KRN",.402,1025,"DIAB",6,0,162.5,12)
36.62;REQ
"KRN",.402,1025,"DIAB",6,0,162.5,18)
35.22;REQ
"KRN",.402,1025,"DIAB",7,0,162.5,5)
32.02;REQ
"KRN",.402,1025,"DIAB",7,0,162.5,6)
35.02;REQ
"KRN",.402,1025,"DIAB",7,0,162.5,7)
35.32;REQ
"KRN",.402,1025,"DIAB",7,0,162.5,10)
36.12;REQ
"KRN",.402,1025,"DIAB",7,0,162.5,13)
36.92;REQ
"KRN",.402,1025,"DIAB",7,0,162.5,20)
35.52;REQ
"KRN",.402,1025,"DIAB",8,0,162.5,8)
35.62;REQ
"KRN",.402,1025,"DIAB",8,0,162.5,22)
35.82;REQ
"KRN",.402,1025,"DIAB",8,0,162.5,24)
36.12;REQ
"KRN",.402,1025,"DIAB",8,0,162.5,26)
36.42;REQ
"KRN",.402,1025,"DIAB",8,0,162.5,28)
36.72;REQ
"KRN",.402,1025,"DIAB",9,0,162.5,11)
36.42;REQ
"KRN",.402,1025,"DIAB",10,0,162.5,9)
35.92;REQ
"KRN",.402,1025,"DIAB",10,0,162.5,12)
36.72;REQ
"KRN",.402,1025,"DIAB",10,0,162.5,14)
31.02;REQ
"KRN",.402,1025,"DIAB",10,0,162.5,16)
34.02;REQ
"KRN",.402,1025,"DIAB",11,0,162.5,4)
30.02;REQ
"KRN",.402,1025,"DIAB",11,0,162.5,5)
33.02;REQ
"KRN",.402,1025,"DIAB",11,0,162.5,6)
35.12;REQ
"KRN",.402,1025,"DIAB",11,0,162.5,7)
35.42;REQ
"KRN",.402,1025,"DIAB",11,0,162.5,17)
35.12;REQ
"KRN",.402,1025,"DIAB",11,0,162.5,19)
35.42;REQ
"KRN",.402,1025,"DR",1,162.5)
1////^S X=FBAAID;46////^S X=FBAAVID;55///^S X=FBCSID;56///^S X=$G(FBFPPSC);85///^S X=$G(FBUCI135);57///^S X=$G(FBFPPSL);47////^S X=FBAAMM1;2////^S X=FBVEN;3////^S X=FBVET;60////^S X=$G(FBCNTRP);87////^S X=$G(FBIA);
"KRN",.402,1025,"DR",1,162.5,1)
86////^S X=$G(FBDODINV);4////^S X=FBI7078;5////^S X=FBAABDT;6////^S X=FBAAEDT;23////^S X=FBPSA;21////^S X=FBPOV;22////^S X=FBPT;11////^S X=FBTYPE;12////^S X=FBAAPTC;20////^S X=FBAABE;W !;6.5;54//^S X=$G(FBCDAYS);6.6;I 1;7;
"KRN",.402,1025,"DR",1,162.5,2)
S FBAMTC=X;I $G(FBEXMPT)'="Y" S Y="@25";S:FBI7078'["FB583" Y=8;S:'$P($G(^FB583(+FBI7078,0)),U,28) Y=8;W !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725.";8;S FBAMTP=X;I FBAMTC=FBAMTP S Y="@25";
"KRN",.402,1025,"DR",1,162.5,3)
S FBX=$$ADJ^FBUTL2(FBAMTC-FBAMTP,.FBADJ,1,,,1);@20;I $G(FBEXMPT)="Y" S Y="@25";@26;24;I $$INPICD^FBCSV1(X,$G(DA),FBAABDT) S Y="@26";@25;6.7;I 1;64;65;66;67;68;69;70;71;72;73;80;81;82;83;74;75;
"KRN",.402,1025,"DR",1,162.5,4)
S ICDSYS=10,IMPDATE=$$IMPDATE^FBCSV1("10D");S EDATE=ICDVDT;S EDATEH=EDATE;S:EDATE<IMPDATE ICDSYS=9;S:ICDSYS=9 Y="@30";S XSP="ICD";S ICDDATE=EDATE;@120;S XX1=$$ASKICD10^FBASF(XSP,1) S:XX1<0 Y="@120";30////^S X=XX1;30.02R~;@121;
"KRN",.402,1025,"DR",1,162.5,5)
S XX2=$$ASKICD10^FBASF(XSP,2) S:XX2<0 Y="@59";31////^S X=XX2;31.02R~;@122;S XX3=$$ASKICD10^FBASF(XSP,3) S:XX3<0 Y="@59";32////^S X=XX3;32.02R~;@123;S XX4=$$ASKICD10^FBASF(XSP,4) S:XX4<0 Y="@59";33////^S X=XX4;33.02R~;@124;
"KRN",.402,1025,"DR",1,162.5,6)
S XX5=$$ASKICD10^FBASF(XSP,5) S:XX5<0 Y="@59";34////^S X=XX5;34.02R~;@125;S XX6=$$ASKICD10^FBASF(XSP,6) S:XX6<0 Y="@59";35////^S X=XX6;35.02R~;@126;S XX7=$$ASKICD10^FBASF(XSP,7) S:XX7<0 Y="@59";35.1////^S X=XX7;35.12R~;@127;
"KRN",.402,1025,"DR",1,162.5,7)
S XX8=$$ASKICD10^FBASF(XSP,8) S:XX8<0 Y="@59";35.2////^S X=XX8;35.22R~;@128;S XX9=$$ASKICD10^FBASF(XSP,9) S:XX9<0 Y="@59";35.3////^S X=XX9;35.32R~;@129;S XX10=$$ASKICD10^FBASF(XSP,10) S:XX10<0 Y="@59";35.4////^S X=XX10;35.42R~;
"KRN",.402,1025,"DR",1,162.5,8)
@130;S XX11=$$ASKICD10^FBASF(XSP,11) S:XX11<0 Y="@59";35.5////^S X=XX11;35.52R~;@131;S XX12=$$ASKICD10^FBASF(XSP,12) S:XX12<0 Y="@59";35.6////^S X=XX12;35.62R~;@132;S XX13=$$ASKICD10^FBASF(XSP,13) S:XX13<0 Y="@59";
"KRN",.402,1025,"DR",1,162.5,9)
35.7////^S X=XX13;35.72R~;@133;S XX14=$$ASKICD10^FBASF(XSP,14) S:XX14<0 Y="@59";35.8////^S X=XX14;35.82R~;@134;S XX15=$$ASKICD10^FBASF(XSP,15) S:XX15<0 Y="@59";35.9////^S X=XX15;35.92R~;@135;
"KRN",.402,1025,"DR",1,162.5,10)
S XX16=$$ASKICD10^FBASF(XSP,16) S:XX16<0 Y="@59";36////^S X=XX16;36.02R~;@136;S XX17=$$ASKICD10^FBASF(XSP,17) S:XX17<0 Y="@59";36.1////^S X=XX17;36.12R~;@137;S XX18=$$ASKICD10^FBASF(XSP,18) S:XX18<0 Y="@59";36.2////^S X=XX18;
"KRN",.402,1025,"DR",1,162.5,11)
36.22R~;@138;S XX19=$$ASKICD10^FBASF(XSP,19) S:XX19<0 Y="@59";36.3////^S X=XX19;36.32R~;@139;S XX20=$$ASKICD10^FBASF(XSP,20) S:XX20<0 Y="@59";36.4////^S X=XX20;36.42R~;@140;S XX21=$$ASKICD10^FBASF(XSP,21) S:XX21<0 Y="@59";
"KRN",.402,1025,"DR",1,162.5,12)
36.5////^S X=XX21;36.52R~;@141;S XX22=$$ASKICD10^FBASF(XSP,22) S:XX22<0 Y="@59";36.6////^S X=XX22;36.62R~;@142;S XX23=$$ASKICD10^FBASF(XSP,23) S:XX23<0 Y="@59";36.7////^S X=XX23;36.72R~;@143;
"KRN",.402,1025,"DR",1,162.5,13)
S XX24=$$ASKICD10^FBASF(XSP,24) S:XX24<0 Y="@59";36.8////^S X=XX24;36.82R~;@144;S XX25=$$ASKICD10^FBASF(XSP,25) S:XX25<0 Y="@59";36.9////^S X=XX25;36.92R~;S Y="@57";@30;S XSP="ICD1";
"KRN",.402,1025,"DR",1,162.5,14)
S XX1=$$ENICD9^FBICD9(EDATE,XSP,"N") S:XX1<0 Y="@30";30////^S X=+XX1;30.02R~;@31;S XSP="ICD2";S XX2=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX2<0,$P(XX2,"^",2)["inactive" S Y="@31";S:XX2<0 Y="@57";31////^S X=+XX2;31.02R~;@32;S XSP="ICD3";
"KRN",.402,1025,"DR",1,162.5,15)
S XX3=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX3<0,$P(XX3,"^",2)["inactive" S Y="@32";S:XX3<0 Y="@57";32////^S X=+XX3;32.02R~;@33;S XSP="ICD4";S XX4=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX4<0,$P(XX4,"^",2)["inactive" S Y="@33";
"KRN",.402,1025,"DR",1,162.5,16)
S:XX4<0 Y="@57";33////^S X=+XX4;33.02R~;@34;S XSP="ICD5";S XX5=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX5<0,$P(XX5,"^",2)["inactive" S Y="@34";S:XX5<0 Y="@57";34////^S X=+XX5;34.02R~;@35;S XSP="ICD6";S XX6=$$ENICD9^FBICD9(EDATE,XSP,"N");
"KRN",.402,1025,"DR",1,162.5,17)
I XX6<0,$P(XX6,"^",2)["inactive" S Y="@35";S:XX6<0 Y="@57";35////^S X=+XX6;35.02R~;@36;S XSP="ICD7";S XX7=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX7<0,$P(XX7,"^",2)["inactive" S Y="@36";S:XX7<0 Y="@57";35.1////^S X=+XX7;35.12R~;@37;
"KRN",.402,1025,"DR",1,162.5,18)
S XSP="ICD8";S XX8=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX8<0,$P(XX8,"^",2)["inactive" S Y="@37";S:XX8<0 Y="@57";35.2////^S X=+XX8;35.22R~;@38;S XSP="ICD9";S XX9=$$ENICD9^FBICD9(EDATE,XSP,"N");
"KRN",.402,1025,"DR",1,162.5,19)
I XX9<0,$P(XX9,"^",2)["inactive" S Y="@38";S:XX9<0 Y="@57";35.3////^S X=+XX9;35.32R~;@39;S XSP="ICD10";S XX10=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX10<0,$P(XX10,"^",2)["inactive" S Y="@39";S:XX10<0 Y="@57";35.4////^S X=+XX10;35.42R~;
"KRN",.402,1025,"DR",1,162.5,20)
@40;S XSP="ICD11";S XX11=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX11<0,$P(XX11,"^",2)["inactive" S Y="@40";S:XX11<0 Y="@57";35.5////^S X=+XX11;35.52R~;@41;S XSP="ICD12";S XX12=$$ENICD9^FBICD9(EDATE,XSP,"N");
"KRN",.402,1025,"DR",1,162.5,21)
I XX12<0,$P(XX12,"^",2)["inactive" S Y="@41";S:XX12<0 Y="@57";35.6////^S X=+XX12;35.62R~;@42;S XSP="ICD13";S XX13=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX13<0,$P(XX13,"^",2)["inactive" S Y="@42";S:XX13<0 Y="@57";35.7////^S X=+XX13;
"KRN",.402,1025,"DR",1,162.5,22)
35.72R~;@43;S XSP="ICD14";S XX14=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX14<0,$P(XX14,"^",2)["inactive" S Y="@43";S:XX14<0 Y="@57";35.8////^S X=+XX14;35.82R~;@44;S XSP="ICD15";S XX15=$$ENICD9^FBICD9(EDATE,XSP,"N");
"KRN",.402,1025,"DR",1,162.5,23)
I XX15<0,$P(XX15,"^",2)["inactive" S Y="@44";S:XX15<0 Y="@57";35.9////^S X=+XX15;35.92R~;@45;S XSP="ICD16";S XX16=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX16<0,$P(XX16,"^",2)["inactive" S Y="@45";S:XX16<0 Y="@57";36////^S X=+XX16;
"KRN",.402,1025,"DR",1,162.5,24)
36.02R~;@46;S XSP="ICD17";S XX17=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX17<0,$P(XX17,"^",2)["inactive" S Y="@46";S:XX17<0 Y="@57";36.1////^S X=+XX17;36.12R~;@47;S XSP="ICD18";S XX18=$$ENICD9^FBICD9(EDATE,XSP,"N");
"KRN",.402,1025,"DR",1,162.5,25)
I XX18<0,$P(XX18,"^",2)["inactive" S Y="@47";S:XX18<0 Y="@57";36.2////^S X=+XX18;36.22R~;@48;S XSP="ICD19";S XX19=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX19<0,$P(XX19,"^",2)["inactive" S Y="@48";S:XX19<0 Y="@57";36.3////^S X=+XX19;
"KRN",.402,1025,"DR",1,162.5,26)
36.32R~;@49;S XSP="ICD20";S XX20=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX20<0,$P(XX20,"^",2)["inactive" S Y="@49";S:XX20<0 Y="@57";36.4////^S X=+XX20;36.42R~;@50;S XSP="ICD21";S XX21=$$ENICD9^FBICD9(EDATE,XSP,"N");
"KRN",.402,1025,"DR",1,162.5,27)
I XX21<0,$P(XX21,"^",2)["inactive" S Y="@50";S:XX21<0 Y="@57";36.5////^S X=+XX21;36.52R~;@51;S XSP="ICD22";S XX22=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX22<0,$P(XX22,"^",2)["inactive" S Y="@51";S:XX22<0 Y="@57";36.6////^S X=+XX22;
"KRN",.402,1025,"DR",1,162.5,28)
36.62R~;@52;S XSP="ICD23";S XX23=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX23<0,$P(XX23,"^",2)["inactive" S Y="@52";S:XX23<0 Y="@57";36.7////^S X=+XX23;36.72R~;@53;S XSP="ICD24";S XX24=$$ENICD9^FBICD9(EDATE,XSP,"N");
"KRN",.402,1025,"DR",1,162.5,29)
I XX24<0,$P(XX24,"^",2)["inactive" S Y="@53";S:XX24<0 Y="@57";36.8////^S X=+XX24;36.82R~;@54;S XSP="ICD25";S XX25=$$ENICD9^FBICD9(EDATE,XSP,"N");I XX25<0,$P(XX25,"^",2)["inactive" S Y="@54";S:XX25<0 Y="@57";36.9////^S X=+XX25;
"KRN",.402,1025,"DR",1,162.5,30)
36.92R~;@57;S EDATE=$$FRDTINV^FBCSV1(DA);I EDATE<$$IMPDATE^FBCSV1("10D") S Y="@58";S EDATE=EDATEH,Y="@59";@58;S XSP="ADMITTING DIAGNOSIS";S XXAD=$$ENICD9^FBICD9(EDATE,XSP,"N") S:XXAD<0 Y="@58";39////^S X=+XXAD;S EDATE=EDATEH;
"KRN",.402,1025,"DR",1,162.5,31)
S Y="@60";@59;S XAD=-1 S XAD=$$ASKICD10^FBASF("ADMITTING DIAGNOSIS","");S:XAD<0 Y="@59";39////^S X=XAD;@60;S XSP="PROC1";S XX1=$$ENICD9^FBICDP(EDATE,XSP);I XX1<0,$P(XX1,"^",2)["inactive" S Y="@60";S:XX1<0 Y="@99";40////^S X=+XX1;
"KRN",.402,1025,"DR",1,162.5,32)
@61;S XSP="PROC2";S XX2=$$ENICD9^FBICDP(EDATE,XSP);I XX2<0,$P(XX2,"^",2)["inactive" S Y="@61";S:XX2<0 Y="@99";41////^S X=+XX2;@62;S XSP="PROC3";S XX3=$$ENICD9^FBICDP(EDATE,XSP);I XX3<0,$P(XX3,"^",2)["inactive" S Y="@62";
"KRN",.402,1025,"DR",1,162.5,33)
S:XX3<0 Y="@99";42////^S X=+XX3;@63;S XSP="PROC4";S XX4=$$ENICD9^FBICDP(EDATE,XSP);I XX4<0,$P(XX4,"^",2)["inactive" S Y="@63";S:XX4<0 Y="@99";43////^S X=+XX4;@64;S XSP="PROC5";S XX5=$$ENICD9^FBICDP(EDATE,XSP);
"KRN",.402,1025,"DR",1,162.5,34)
I XX5<0,$P(XX5,"^",2)["inactive" S Y="@64";S:XX5<0 Y="@99";44////^S X=+XX5;@65;S XSP="PROC6";S XX6=$$ENICD9^FBICDP(EDATE,XSP);I XX6<0,$P(XX6,"^",2)["inactive" S Y="@65";S:XX6<0 Y="@99";44.06////^S X=+XX6;@66;S XSP="PROC7";
"KRN",.402,1025,"DR",1,162.5,35)
S XX7=$$ENICD9^FBICDP(EDATE,XSP);I XX7<0,$P(XX7,"^",2)["inactive" S Y="@66";S:XX7<0 Y="@99";44.07////^S X=+XX7;@67;S XSP="PROC8";S XX8=$$ENICD9^FBICDP(EDATE,XSP);I XX8<0,$P(XX8,"^",2)["inactive" S Y="@67";S:XX8<0 Y="@99";
"KRN",.402,1025,"DR",1,162.5,36)
44.08////^S X=+XX8;@68;S XSP="PROC9";S XX9=$$ENICD9^FBICDP(EDATE,XSP);I XX9<0,$P(XX9,"^",2)["inactive" S Y="@68";S:XX9<0 Y="@99";44.09////^S X=+XX9;@69;S XSP="PROC10";S XX10=$$ENICD9^FBICDP(EDATE,XSP);
"KRN",.402,1025,"DR",1,162.5,37)
I XX10<0,$P(XX10,"^",2)["inactive" S Y="@69";S:XX10<0 Y="@99";44.1////^S X=+XX10;@70;S XSP="PROC11";S XX11=$$ENICD9^FBICDP(EDATE,XSP);I XX11<0,$P(XX11,"^",2)["inactive" S Y="@70";S:XX11<0 Y="@99";44.11////^S X=+XX11;@71;
"KRN",.402,1025,"DR",1,162.5,38)
S XSP="PROC12";S XX12=$$ENICD9^FBICDP(EDATE,XSP);I XX12<0,$P(XX12,"^",2)["inactive" S Y="@71";S:XX12<0 Y="@99";44.12////^S X=+XX12;@72;S XSP="PROC13";S XX13=$$ENICD9^FBICDP(EDATE,XSP);I XX13<0,$P(XX13,"^",2)["inactive" S Y="@72";
"KRN",.402,1025,"DR",1,162.5,39)
S:XX13<0 Y="@99";44.13////^S X=+XX13;@73;S XSP="PROC14";S XX14=$$ENICD9^FBICDP(EDATE,XSP);I XX14<0,$P(XX14,"^",2)["inactive" S Y="@73";S:XX14<0 Y="@99";44.14////^S X=+XX14;@74;S XSP="PROC15";S XX15=$$ENICD9^FBICDP(EDATE,XSP);
"KRN",.402,1025,"DR",1,162.5,40)
I XX15<0,$P(XX15,"^",2)["inactive" S Y="@74";S:XX15<0 Y="@99";44.15////^S X=+XX15;@75;S XSP="PROC16";S XX16=$$ENICD9^FBICDP(EDATE,XSP);I XX16<0,$P(XX16,"^",2)["inactive" S Y="@75";S:XX16<0 Y="@99";44.16////^S X=+XX16;@76;
"KRN",.402,1025,"DR",1,162.5,41)
S XSP="PROC17";S XX17=$$ENICD9^FBICDP(EDATE,XSP);I XX17<0,$P(XX17,"^",2)["inactive" S Y="@76";S:XX17<0 Y="@99";44.17////^S X=+XX17;@77;S XSP="PROC18";S XX18=$$ENICD9^FBICDP(EDATE,XSP);I XX18<0,$P(XX18,"^",2)["inactive" S Y="@77";
"KRN",.402,1025,"DR",1,162.5,42)
S:XX18<0 Y="@99";44.18////^S X=+XX18;@78;S XSP="PROC19";S XX19=$$ENICD9^FBICDP(EDATE,XSP);I XX19<0,$P(XX19,"^",2)["inactive" S Y="@78";S:XX19<0 Y="@99";44.19////^S X=+XX19;@79;S XSP="PROC20";S XX20=$$ENICD9^FBICDP(EDATE,XSP);
"KRN",.402,1025,"DR",1,162.5,43)
I XX20<0,$P(XX20,"^",2)["inactive" S Y="@79";S:XX20<0 Y="@99";44.2////^S X=+XX20;@80;S XSP="PROC21";S XX21=$$ENICD9^FBICDP(EDATE,XSP);I XX21<0,$P(XX21,"^",2)["inactive" S Y="@80";S:XX21<0 Y="@99";44.21////^S X=+XX21;@81;
"KRN",.402,1025,"DR",1,162.5,44)
S XSP="PROC22";S XX22=$$ENICD9^FBICDP(EDATE,XSP);I XX22<0,$P(XX22,"^",2)["inactive" S Y="@81";S:XX22<0 Y="@99";44.22////^S X=+XX22;@82;S XSP="PROC23";S XX23=$$ENICD9^FBICDP(EDATE,XSP);I XX23<0,$P(XX23,"^",2)["inactive" S Y="@82";
"KRN",.402,1025,"DR",1,162.5,45)
S:XX23<0 Y="@99";44.23////^S X=+XX23;@83;S XSP="PROC24";S XX24=$$ENICD9^FBICDP(EDATE,XSP);I XX24<0,$P(XX24,"^",2)["inactive" S Y="@83";S:XX24<0 Y="@99";44.24////^S X=+XX24;@84;S XSP="PROC25";S XX25=$$ENICD9^FBICDP(EDATE,XSP);
"KRN",.402,1025,"DR",1,162.5,46)
I XX25<0,$P(XX25,"^",2)["inactive" S Y="@84";S:XX25<0 Y="@99";44.25////^S X=+XX25;@99;I $D(^FBAAI(DA,"DX")),$P(^("DX"),U)="" W !!,*7,"The 'ICD1' field is a mandatory field!",! S Y="@30";S FBX=$$RPROV^FBUTL8(.FBPROV,.FBPROVD);
"KRN",.402,1025,"DR",1,162.5,47)
I $G(FBEXMPT)'="Y" S Y="@992";S FBX=$$RR^FBUTL4(.FBRRMK,2);@992;25////^S X=FBRESUB;@999;
"KRN",.402,1026,-1)
0^2
"KRN",.402,1026,0)
FBCH EDIT PAYMENT^3140805.2242^^162.5^^^3120531
"KRN",.402,1026,"DIAB",1,0,162.5,19)
35.42;REQ
"KRN",.402,1026,"DIAB",2,0,162.5,5)
24.5;REQ
"KRN",.402,1026,"DIAB",2,0,162.5,22)
35.62;REQ
"KRN",.402,1026,"DIAB",2,0,162.5,25)
35.82;REQ
"KRN",.402,1026,"DIAB",2,0,162.5,28)
36.02;REQ
"KRN",.402,1026,"DIAB",2,0,162.5,31)
36.22;REQ
"KRN",.402,1026,"DIAB",2,0,162.5,34)
36.42;REQ
"KRN",.402,1026,"DIAB",2,0,162.5,37)
36.62;REQ
"KRN",.402,1026,"DIAB",2,0,162.5,40)
36.82;REQ
"KRN",.402,1026,"DIAB",3,0,162.5,9)
32.02;REQ
"KRN",.402,1026,"DIAB",3,0,162.5,16)
35.22;REQ
"KRN",.402,1026,"DIAB",3,0,162.5,43)
30.02;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,45)
33.02;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,46)
34.02;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,47)
35.02;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,48)
35.12;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,49)
35.22;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,50)
35.32;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,51)
35.42;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,52)
35.52;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,53)
35.62;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,54)
35.72;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,55)
35.82;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,56)
35.92;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,57)
36.02;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,58)
36.12;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,59)
36.22;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,60)
36.32;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,61)
36.42;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,62)
36.52;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,63)
36.62;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,64)
36.72;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,65)
36.82;REQ
"KRN",.402,1026,"DIAB",4,0,162.5,66)
36.92;REQ
"KRN",.402,1026,"DIAB",5,0,162.5,6)
30.02;REQ
"KRN",.402,1026,"DIAB",5,0,162.5,13)
35.02;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,10)
33.02;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,17)
35.32;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,20)
35.52;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,23)
35.72;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,26)
35.92;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,29)
36.12;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,32)
36.32;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,35)
36.52;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,38)
36.72;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,41)
36.92;REQ
"KRN",.402,1026,"DIAB",6,0,162.5,44)
32.02;REQ
"KRN",.402,1026,"DIAB",7,0,162.5,7)
31.02;REQ
"KRN",.402,1026,"DIAB",7,0,162.5,14)
35.12;REQ
"KRN",.402,1026,"DIAB",8,0,162.5,11)
34.02;REQ
"KRN",.402,1026,"DIAB",8,0,162.5,43)
31.02;REQ
"KRN",.402,1026,"DIAB",10,0,162.5,4)
24;REQ
"KRN",.402,1026,"DR",1,162.5)
@1;1;I 1;I $$BADDATE^FBCHEP1(X,DA) S Y="@1";46;I '$$IPACREQD^FBAAMP($P($G(^FBAAI(DA,0)),U,3)) S Y="@123";87////^S X=$G(FBIA);86////^S X=$G(FBDODINV);@123;55;S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);D EDINPAT^FBUTL136($G(FBX),$G(FBI));
"KRN",.402,1026,"DR",1,162.5,1)
S:FBX=-1 Y=0;S:FBX="" Y="@10";56///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL,1);S:FBX=-1 Y=0;57///^S X=FBX;S FBFPPSL=X;S Y="@14";@10;56///@;S FBFPPSC="";57///@;S FBFPPSL="";@14;S FBV=$P($G(^FBAAI(DA,0)),U,3);
"KRN",.402,1026,"DR",1,162.5,2)
S FBAAMM=$S($G(FBAAPTC)="R":"",$D(FB583):"",1:1);D PPT^FBAACO1($G(FBAAMM1),$G(FBCNTRP));47////@;47///^S X=FBAAMM1;60///@;60////^S X=$G(FBCNTRP);6.5;54;6.6;I 1;6.7;64;65;66;67;68;69;70;71;72;73;80;81;82;83;74;75;
"KRN",.402,1026,"DR",1,162.5,3)
S DIE("NO^")="NO QUIT";7;S:$D(FBPRICE) Y="@19";S FBJJ=X;I $G(FBEXMPT)="Y" S Y="@16";26;S FBPAMT=X;@16;W:FB1725 !?2,"**Payment is for emergency treatment under 38 U.S.C. 1725.";
"KRN",.402,1026,"DR",1,162.5,4)
W:FB1725&($G(FBPAMT)>0) !?2,"  70% of Pricer Amount = "_$J(.7*FBPAMT,0,2);8;S FBKK=X;K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(FBJJ-FBKK,.FBADJ,1,,.FBADJD,1);K FBADJD;I $G(FBEXMPT)="Y" S Y="@19";@18;24R~;
"KRN",.402,1026,"DR",1,162.5,5)
I $$INPICD^FBCSV1(X,$G(DA)) S Y="@18";24.5R~;@19;S ICDSYS=10,IMPDATE=$$IMPDATE^FBCSV1("10D");S EDATE=ICDVDT;S:EDATE<IMPDATE ICDSYS=9;S EDATEH=EDATE;S:ICDSYS=10 Y="@210";@20;S XXE1=$P($G(^FBAAI(DA,"DX")),"^",1);S XSP="ICD1";
"KRN",.402,1026,"DR",1,162.5,6)
S XX1=$$ENICD9^FBICD9(EDATE,XSP,"N","N","Y",XXE1);I XX1<0,$P(XX1,"^",2)["inactive" S Y="@20";S:XX1<0 XX1=XXE1;30////^S X=+XX1;30.02R~;@22;S XSP="ICD2";S XXE2=$P($G(^FBAAI(DA,"DX")),"^",2);
"KRN",.402,1026,"DR",1,162.5,7)
S XX2=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE2);I XX2<0,$P(XX2,"^",2)["inactive" S Y="@22";I XX2<0,XXE2'?1N.N S Y="@70";S:XX2<0 XX2=XXE2;31////^S X=+XX2;I XX2="@" S Y="@23";31.02R~;S:$G(LASTDX)<2 LASTDX=2;S Y="@24";@23;31.02///@;
"KRN",.402,1026,"DR",1,162.5,8)
S:$G(LASTDX)'>2 Y="@70";@24;S XSP="ICD3";S XXE3=$P($G(^FBAAI(DA,"DX")),"^",3);S XX3=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE3);I XX3<0,$P(XX3,"^",2)["inactive" S Y="@24";I XX3<0,XXE3'?1N.N S Y="@70";I XX3<0 S XX3=XXE3;
"KRN",.402,1026,"DR",1,162.5,9)
32////^S X=+XX3;I XX3="@" S Y="@25";32.02R~;S:$G(LASTDX)<3 LASTDX=3;S Y="@26";@25;32.02///@;S:$G(LASTDX)'>3 Y="@70";@26;S XSP="ICD4";S XXE4=$P($G(^FBAAI(DA,"DX")),"^",4);S XX4=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE4);
"KRN",.402,1026,"DR",1,162.5,10)
I XX4<0,$P(XX4,"^",2)["inactive" S Y="@26";I XX4<0,XXE4'?1N.N S Y="@70";S:XX4<0 XX4=XXE4;33////^S X=+XX4;I XX4="@" S Y="@27";33.02R~;S:$G(LASTDX)<4 LASTDX=4;S Y="@28";@27;33.02///@;S:$G(LASTDX)'>4 Y="@70";@28;S XSP="ICD5";
"KRN",.402,1026,"DR",1,162.5,11)
S XXE5=$P($G(^FBAAI(DA,"DX")),"^",5);S XX5=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE5);I XX5<0,$P(XX5,"^",2)["inactive" S Y="@28";I XX5<0,XXE5'?1N.N S Y="@70";S:XX5<0 XX5=XXE5;34////^S X=+XX5;I XX5="@" S Y="@29";34.02R~;
"KRN",.402,1026,"DR",1,162.5,12)
S:$G(LASTDX)<5 LASTDX=5;S Y="@30";@29;34.02///@;S:$G(LASTDX)'>5 Y="@70";@30;S XSP="ICD6";S XXE6=$P($G(^FBAAI(DA,"DX")),"^",6);S XX6=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE6);I XX6<0,$P(XX6,"^",2)["inactive" S Y="@30";
"KRN",.402,1026,"DR",1,162.5,13)
I XX6<0,XXE6'?1N.N S Y="@70";S:XX6<0 XX6=XXE6;35////^S X=+XX6;I XX6="@" S Y="@31";35.02R~;S:$G(LASTDX)<6 LASTDX=6;S Y="@32";@31;35.02///@;S:$G(LASTDX)'>6 Y="@70";@32;S XSP="ICD7";S XXE7=$P($G(^FBAAI(DA,"DX")),"^",7);
"KRN",.402,1026,"DR",1,162.5,14)
S XX7=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE7);I XX7<0,$P(XX7,"^",2)["inactive" S Y="@32";I XX7<0,XXE7'?1N.N S Y="@70";S:XX7<0 XX7=XXE7;35.1////^S X=+XX7;I XX7="@" S Y="@33";35.12R~;S:$G(LASTDX)<7 LASTDX=7;S Y="@34";@33;
"KRN",.402,1026,"DR",1,162.5,15)
35.12///@;S:$G(LASTDX)'>7 Y="@70";@34;S XSP="ICD8";S XXE8=$P($G(^FBAAI(DA,"DX")),"^",8);S XX8=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE8);I XX8<0,$P(XX8,"^",2)["inactive" S Y="@34";I XX8<0,XXE8'?1N.N S Y="@70";S:XX8<0 XX8=XXE8;
"KRN",.402,1026,"DR",1,162.5,16)
35.2////^S X=+XX8;I XX8="@" S Y="@35";35.22R~;S:$G(LASTDX)<8 LASTDX=8;S Y="@36";@35;35.22///@;S:$G(LASTDX)'>8 Y="@70";@36;S XSP="ICD9";S XXE9=$P($G(^FBAAI(DA,"DX")),"^",9);S XX9=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE9);
"KRN",.402,1026,"DR",1,162.5,17)
I XX9<0,$P(XX9,"^",2)["inactive" S Y="@36";I XX9<0,XXE9'?1N.N S Y="@70";S:XX9<0 XX9=XXE9;35.3////^S X=+XX9;I XX9="@" S Y="@37";35.32R~;S:$G(LASTDX)<9 LASTDX=9;S Y="@38";@37;35.32///@;S:$G(LASTDX)'>9 Y="@70";@38;S XSP="ICD10";
"KRN",.402,1026,"DR",1,162.5,18)
S XXE10=$P($G(^FBAAI(DA,"DX")),"^",10);S XX10=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE10);I XX10<0,$P(XX10,"^",2)["inactive" S Y="@38";I XX10<0,XXE10'?1N.N S Y="@70";S:XX10<0 XX10=XXE10;35.4////^S X=+XX10;I XX10="@" S Y="@39";
"KRN",.402,1026,"DR",1,162.5,19)
35.42R~;S:$G(LASTDX)<10 LASTDX=10;S Y="@40";@39;35.42///@;S:$G(LASTDX)'>10 Y="@70";@40;S XSP="ICD11";S XXE11=$P($G(^FBAAI(DA,"DX")),"^",11);S XX11=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE11);
"KRN",.402,1026,"DR",1,162.5,20)
I XX11<0,$P(XX11,"^",2)["inactive" S Y="@40";I XX11<0,XXE11'?1N.N S Y="@70";S:XX11<0 XX11=XXE11;35.5////^S X=+XX11;I XX11="@" S Y="@41";35.52R~;S:$G(LASTDX)<11 LASTDX=11;S Y="@42";@41;35.52///@;S:$G(LASTDX)'>11 Y="@70";@42;
"KRN",.402,1026,"DR",1,162.5,21)
S XSP="ICD12";S XXE12=$P($G(^FBAAI(DA,"DX")),"^",12);S XX12=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE12);I XX12<0,$P(XX12,"^",2)["inactive" S Y="@42";I XX12<0,XXE12'?1N.N S Y="@70";S:XX12<0 XX12=XXE12;35.6////^S X=+XX12;
"KRN",.402,1026,"DR",1,162.5,22)
I XX12="@" S Y="@43";35.62R~;S:$G(LASTDX)<12 LASTDX=12;S Y="@44";@43;35.62///@;S:$G(LASTDX)'>12 Y="@70";@44;S XSP="ICD13";S XXE13=$P($G(^FBAAI(DA,"DX")),"^",13);S XX13=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE13);
"KRN",.402,1026,"DR",1,162.5,23)
I XX13<0,$P(XX13,"^",2)["inactive" S Y="@44";I XX13<0,XXE13'?1N.N S Y="@70";S:XX13<0 XX13=XXE13;35.7////^S X=+XX13;I XX13="@" S Y="@45";35.72R~;S:$G(LASTDX)<13 LASTDX=13;S Y="@46";@45;35.72///@;S:$G(LASTDX)'>13 Y="@70";@46;
"KRN",.402,1026,"DR",1,162.5,24)
S XSP="ICD14";S XXE14=$P($G(^FBAAI(DA,"DX")),"^",14);S XX14=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE14);I XX14<0,$P(XX14,"^",2)["inactive" S Y="@46";I XX14<0,XXE14'?1N.N S Y="@70";S:XX14<0 XX14=XXE14;35.8////^S X=+XX14;
"KRN",.402,1026,"DR",1,162.5,25)
I XX14="@" S Y="@47";35.82R~;S:$G(LASTDX)<14 LASTDX=14;S Y="@48";@47;35.82///@;S:$G(LASTDX)'>14 Y="@70";@48;S XSP="ICD15";S XXE15=$P($G(^FBAAI(DA,"DX")),"^",15);S XX15=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE15);
"KRN",.402,1026,"DR",1,162.5,26)
I XX15<0,$P(XX15,"^",2)["inactive" S Y="@48";I XX15<0,XXE15'?1N.N S Y="@70";S:XX15<0 XX15=XXE15;35.9////^S X=+XX15;I XX15="@" S Y="@49";35.92R~;S:$G(LASTDX)<15 LASTDX=15;S Y="@50";@49;35.92///@;S:$G(LASTDX)'>15 Y="@70";@50;
"KRN",.402,1026,"DR",1,162.5,27)
S XSP="ICD16";S XXE16=$P($G(^FBAAI(DA,"DX")),"^",16);S XX16=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE16);I XX16<0,$P(XX16,"^",2)["inactive" S Y="@50";I XX16<0,XXE16'?1N.N S Y="@70";S:XX16<0 XX16=XXE16;36////^S X=+XX16;
"KRN",.402,1026,"DR",1,162.5,28)
I XX16="@" S Y="@51";36.02R~;S:$G(LASTDX)<16 LASTDX=16;S Y="@52";@51;36.02///@;S:$G(LASTDX)'>16 Y="@70";@52;S XSP="ICD17";S XXE17=$P($G(^FBAAI(DA,"DX")),"^",17);S XX17=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE17);
"KRN",.402,1026,"DR",1,162.5,29)
I XX17<0,$P(XX17,"^",2)["inactive" S Y="@52";I XX17<0,XXE17'?1N.N S Y="@70";S:XX17<0 XX17=XXE17;36.1////^S X=+XX17;I XX17="@" S Y="@53";36.12R~;S:$G(LASTDX)<17 LASTDX=17;S Y="@54";@53;36.12///@;S:$G(LASTDX)'>17 Y="@70";@54;
"KRN",.402,1026,"DR",1,162.5,30)
S XSP="ICD18";S XXE18=$P($G(^FBAAI(DA,"DX")),"^",18);S XX18=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE18);I XX18<0,$P(XX18,"^",2)["inactive" S Y="@54";I XX18<0,XXE18'?1N.N S Y="@70";S:XX18<0 XX18=XXE18;36.2////^S X=+XX18;
"KRN",.402,1026,"DR",1,162.5,31)
I XX18="@" S Y="@55";36.22R~;S:$G(LASTDX)<18 LASTDX=18;S Y="@56";@55;36.22///@;S:$G(LASTDX)'>18 Y="@70";@56;S XSP="ICD19";S XXE19=$P($G(^FBAAI(DA,"DX")),"^",19);S XX19=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE19);
"KRN",.402,1026,"DR",1,162.5,32)
I XX19<0,$P(XX19,"^",2)["inactive" S Y="@56";I XX19<0,XXE19'?1N.N S Y="@70";S:XX19<0 XX19=XXE19;36.3////^S X=+XX19;I XX19="@" S Y="@57";36.32R~;S:$G(LASTDX)<19 LASTDX=19;S Y="@58";@57;36.32///@;S:$G(LASTDX)'>19 Y="@70";@58;
"KRN",.402,1026,"DR",1,162.5,33)
S XSP="ICD20";S XXE20=$P($G(^FBAAI(DA,"DX")),"^",20);S XX20=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE20);I XX20<0,$P(XX20,"^",2)["inactive" S Y="@58";I XX20<0,XXE20'?1N.N S Y="@70";S:XX20<0 XX20=XXE20;36.4////^S X=+XX20;
"KRN",.402,1026,"DR",1,162.5,34)
I XX20="@" S Y="@59";36.42R~;S:$G(LASTDX)<20 LASTDX=20;S Y="@60";@59;36.42///@;S:$G(LASTDX)'>20 Y="@70";@60;S XSP="ICD21";S XXE21=$P($G(^FBAAI(DA,"DX")),"^",21);S XX21=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE21);
"KRN",.402,1026,"DR",1,162.5,35)
I XX21<0,$P(XX21,"^",2)["inactive" S Y="@60";I XX21<0,XXE21'?1N.N S Y="@70";S:XX21<0 XX21=XXE21;36.5////^S X=+XX21;I XX21="@" S Y="@61";36.52R~;S:$G(LASTDX)<21 LASTDX=21;S Y="@62";@61;36.52///@;S:$G(LASTDX)'>21 Y="@70";@62;
"KRN",.402,1026,"DR",1,162.5,36)
S XSP="ICD22";S XXE22=$P($G(^FBAAI(DA,"DX")),"^",22);S XX22=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE22);I XX22<0,$P(XX22,"^",2)["inactive" S Y="@62";I XX22<0,XXE22'?1N.N S Y="@70";S:XX22<0 XX22=XXE22;36.6////^S X=+XX22;
"KRN",.402,1026,"DR",1,162.5,37)
I XX22="@" S Y="@63";36.62R~;S:$G(LASTDX)<22 LASTDX=22;S Y="@64";@63;36.62///@;S:$G(LASTDX)'>22 Y="@70";@64;S XSP="ICD23";S XXE23=$P($G(^FBAAI(DA,"DX")),"^",23);S XX23=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE23);
"KRN",.402,1026,"DR",1,162.5,38)
I XX23<0,$P(XX23,"^",2)["inactive" S Y="@64";I XX23<0,XXE23'?1N.N S Y="@70";S:XX23<0 XX23=XXE23;36.7////^S X=+XX23;I XX23="@" S Y="@65";36.72R~;S:$G(LASTDX)<23 LASTDX=23;S Y="@66";@65;36.72///@;S:$G(LASTDX)'>23 Y="@70";@66;
"KRN",.402,1026,"DR",1,162.5,39)
S XSP="ICD24";S XXE24=$P($G(^FBAAI(DA,"DX")),"^",24);S XX24=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE24);I XX24<0,$P(XX24,"^",2)["inactive" S Y="@66";I XX24<0,XXE24'?1N.N S Y="@70";S:XX24<0 XX24=XXE24;36.8////^S X=+XX24;
"KRN",.402,1026,"DR",1,162.5,40)
I XX24="@" S Y="@67";36.82R~;S:$G(LASTDX)<24 LASTDX=24;S Y="@68";@67;36.82///@;S:$G(LASTDX)'>24 Y="@70";@68;S XSP="ICD25";S XXE25=$P($G(^FBAAI(DA,"DX")),"^",25);S XX25=$$ENICD9^FBICD9(EDATE,XSP,"N","Y","N",XXE25);
"KRN",.402,1026,"DR",1,162.5,41)
I XX25<0,$P(XX25,"^",2)["inactive" S Y="@68";I XX25<0,XXE25'?1N.N S Y="@70";S:XX25<0 XX25=XXE25;36.9////^S X=+XX25;I XX25="@" S Y="@69";36.92R~;S:$G(LASTDX)<25 LASTDX=25;S Y="@70";@69;36.92///@;@70;S XSP="ADMITTING DIAGNOSIS";
"KRN",.402,1026,"DR",1,162.5,42)
S XXEAD=$P($G(^FBAAI(DA,5)),"^",9);S XXAD=$$ENICD9^FBICD9(EDATE,XSP,"N","N","Y",XXEAD);I XXAD<0,$P(XXAD,"^",2)["inactive" S Y="@70";I XXAD<0,XXEAD'?1N.N S Y="@70";S:XXAD<0 XXAD=XXEAD;39////^S X=+XXAD;S Y="@320";@210;S XSP="ICD";
"KRN",.402,1026,"DR",1,162.5,43)
S XX1=$$ASKICD10^FBASF(XSP,1) S:XX1<0 Y="@210";30////^S X=XX1;30.02R~;@211;S XX2=$$ASKICD10^FBASF(XSP,2,"","Y") S:XX2<0 Y="@300";31////^S X=XX2;I XX2="@" S Y="@212";31.02R~;S:$G(LASTDX)<2 LASTDX=2;S Y="@213";@212;31.02///@;
"KRN",.402,1026,"DR",1,162.5,44)
S:$G(LASTDX)'>2 Y="@300";@213;S XX3=$$ASKICD10^FBASF(XSP,3,"","Y") S:XX3<0 Y="@300";32////^S X=XX3;I XX3="@" S Y="@214";32.02R~;S:$G(LASTDX)<3 LASTDX=3;S Y="@215";@214;32.02///@;S:$G(LASTDX)'>3 Y="@300";@215;
"KRN",.402,1026,"DR",1,162.5,45)
S XX4=$$ASKICD10^FBASF(XSP,4,"","Y") S:XX4<0 Y="@300";33////^S X=XX4;I XX4="@" S Y="@216";33.02R~;S:$G(LASTDX)<4 LASTDX=4;S Y="@217";@216;33.02///@;S:$G(LASTDX)'>4 Y="@300";@217;
"KRN",.402,1026,"DR",1,162.5,46)
S XX5=$$ASKICD10^FBASF(XSP,5,"","Y") S:XX5<0 Y="@300";34////^S X=XX5;I XX5="@" S Y="@218";34.02R~;S:$G(LASTDX)<5 LASTDX=5;S Y="@219";@218;34.02///@;S:$G(LASTDX)'>5 Y="@300";@219;
"KRN",.402,1026,"DR",1,162.5,47)
S XX6=$$ASKICD10^FBASF(XSP,6,"","Y") S:XX6<0 Y="@300";35////^S X=XX6;I XX6="@" S Y="@220";35.02R~;S:$G(LASTDX)<6 LASTDX=6;S Y="@221";@220;35.02///@;S:$G(LASTDX)'>6 Y="@300";@221;
"KRN",.402,1026,"DR",1,162.5,48)
S XX7=$$ASKICD10^FBASF(XSP,7,"","Y") S:XX7<0 Y="@300";35.1////^S X=XX7;I XX7="@" S Y="@222";35.12R~;S:$G(LASTDX)<7 LASTDX=7;S Y="@223";@222;35.12///@;S:$G(LASTDX)'>7 Y="@300";@223;
"KRN",.402,1026,"DR",1,162.5,49)
S XX8=$$ASKICD10^FBASF(XSP,8,"","Y") S:XX8<0 Y="@300";35.2////^S X=XX8;I XX8="@" S Y="@224";35.22R~;S:$G(LASTDX)<8 LASTDX=8;S Y="@225";@224;35.22///@;S:$G(LASTDX)'>8 Y="@300";@225;
"KRN",.402,1026,"DR",1,162.5,50)
S XX9=$$ASKICD10^FBASF(XSP,9,"","Y") S:XX9<0 Y="@300";35.3////^S X=XX9;I XX9="@" S Y="@226";35.32R~;S:$G(LASTDX)<9 LASTDX=9;S Y="@227";@226;35.32///@;S:$G(LASTDX)'>9 Y="@300";@227;
"KRN",.402,1026,"DR",1,162.5,51)
S XX10=$$ASKICD10^FBASF(XSP,10,"","Y") S:XX10<0 Y="@300";35.4////^S X=XX10;I XX10="@" S Y="@228";35.42R~;S:$G(LASTDX)<10 LASTDX=10;S Y="@229";@228;35.42///@;S:$G(LASTDX)'>10 Y="@300";@229;
"KRN",.402,1026,"DR",1,162.5,52)
S XX11=$$ASKICD10^FBASF(XSP,11,"","Y") S:XX11<0 Y="@300";35.5////^S X=XX11;I XX11="@" S Y="@230";35.52R~;S:$G(LASTDX)<11 LASTDX=11;S Y="@231";@230;35.52///@;S:$G(LASTDX)'>11 Y="@300";@231;
"KRN",.402,1026,"DR",1,162.5,53)
S XX12=$$ASKICD10^FBASF(XSP,12,"","Y") S:XX12<0 Y="@300";35.6////^S X=XX12;I XX12="@" S Y="@232";35.62R~;S:$G(LASTDX)<12 LASTDX=12;S Y="@233";@232;35.62///@;S:$G(LASTDX)'>12 Y="@300";@233;
"KRN",.402,1026,"DR",1,162.5,54)
S XX13=$$ASKICD10^FBASF(XSP,13,"","Y") S:XX13<0 Y="@300";35.7////^S X=XX13;I XX13="@" S Y="@234";35.72R~;S:$G(LASTDX)<13 LASTDX=13;S Y="@235";@234;35.72///@;S:$G(LASTDX)'>13 Y="@300";@235;
"KRN",.402,1026,"DR",1,162.5,55)
S XX14=$$ASKICD10^FBASF(XSP,14,"","Y") S:XX14<0 Y="@300";35.8////^S X=XX14;I XX14="@" S Y="@236";35.82R~;S:$G(LASTDX)<14 LASTDX=14;S Y="@237";@236;35.82///@;S:$G(LASTDX)'>14 Y="@300";@237;
"KRN",.402,1026,"DR",1,162.5,56)
S XX15=$$ASKICD10^FBASF(XSP,15,"","Y") S:XX15<0 Y="@300";35.9////^S X=XX15;I XX15="@" S Y="@238";35.92R~;S:$G(LASTDX)<15 LASTDX=15;S Y="@239";@238;35.92///@;S:$G(LASTDX)'>15 Y="@300";@239;
"KRN",.402,1026,"DR",1,162.5,57)
S XX16=$$ASKICD10^FBASF(XSP,16,"","Y") S:XX16<0 Y="@300";36////^S X=XX16;I XX16="@" S Y="@240";36.02R~;S:$G(LASTDX)<16 LASTDX=16;S Y="@241";@240;36.02///@;S:$G(LASTDX)'>16 Y="@300";@241;
"KRN",.402,1026,"DR",1,162.5,58)
S XX17=$$ASKICD10^FBASF(XSP,17,"","Y") S:XX17<0 Y="@300";36.1////^S X=XX17;I XX17="@" S Y="@242";36.12R~;S:$G(LASTDX)<17 LASTDX=17;S Y="@243";@242;36.12///@;S:$G(LASTDX)'>17 Y="@300";@243;
"KRN",.402,1026,"DR",1,162.5,59)
S XX18=$$ASKICD10^FBASF(XSP,18,"","Y") S:XX18<0 Y="@300";36.2////^S X=XX18;I XX18="@" S Y="@244";36.22R~;S:$G(LASTDX)<18 LASTDX=18;S Y="@245";@244;36.22///@;S:$G(LASTDX)'>18 Y="@300";@245;
"KRN",.402,1026,"DR",1,162.5,60)
S XX19=$$ASKICD10^FBASF(XSP,19,"","Y") S:XX19<0 Y="@300";36.3////^S X=XX19;I XX19="@" S Y="@246";36.32R~;S:$G(LASTDX)<19 LASTDX=19;S Y="@247";@246;36.32///@;S:$G(LASTDX)'>19 Y="@300";@247;
"KRN",.402,1026,"DR",1,162.5,61)
S XX20=$$ASKICD10^FBASF(XSP,20,"","Y") S:XX20<0 Y="@300";36.4////^S X=XX20;I XX20="@" S Y="@248";36.42R~;S:$G(LASTDX)<20 LASTDX=20;S Y="@249";@248;36.42///@;S:$G(LASTDX)'>20 Y="@300";@249;
"KRN",.402,1026,"DR",1,162.5,62)
S XX21=$$ASKICD10^FBASF(XSP,21,"","Y") S:XX21<0 Y="@300";36.5////^S X=XX21;I XX21="@" S Y="@250";36.52R~;S:$G(LASTDX)<21 LASTDX=21;S Y="@251";@250;36.52///@;S:$G(LASTDX)'>21 Y="@300";@251;
"KRN",.402,1026,"DR",1,162.5,63)
S XX22=$$ASKICD10^FBASF(XSP,22,"","Y") S:XX22<0 Y="@300";36.6////^S X=XX22;I XX22="@" S Y="@252";36.62R~;S:$G(LASTDX)<22 LASTDX=22;S Y="@253";@252;36.62///@;S:$G(LASTDX)'>22 Y="@300";@253;
"KRN",.402,1026,"DR",1,162.5,64)
S XX23=$$ASKICD10^FBASF(XSP,23,"","Y") S:XX23<0 Y="@300";36.7////^S X=XX23;I XX23="@" S Y="@254";36.72R~;S:$G(LASTDX)<23 LASTDX=23;S Y="@255";@254;36.72///@;S:$G(LASTDX)'>23 Y="@300";@255;
"KRN",.402,1026,"DR",1,162.5,65)
S XX24=$$ASKICD10^FBASF(XSP,24,"","Y") S:XX24<0 Y="@300";36.8////^S X=XX24;I XX24="@" S Y="@256";36.82R~;S:$G(LASTDX)<24 LASTDX=24;S Y="@257";@256;36.82///@;S:$G(LASTDX)'>24 Y="@300";@257;
"KRN",.402,1026,"DR",1,162.5,66)
S XX25=$$ASKICD10^FBASF(XSP,25,"","Y") S:XX25<0 Y="@300";36.9////^S X=XX25;I XX25="@" S Y="@258";36.92R~;S:$G(LASTDX)<25 LASTDX=25;S Y="@300";@258;36.92///@;@300;S EDATE=$$FRDTINV^FBCSV1(DA);
"KRN",.402,1026,"DR",1,162.5,67)
I EDATE<$$IMPDATE^FBCSV1("10D") S Y="@305";S EDATE=EDATEH,Y="@310";@305;39;S:$$INPICD9^FBCSV1(X,$G(DA)) Y="@305";S EDATE=EDATEH,Y="@320";@310;S XAD=-1 S XAD=$$ASKICD10^FBASF("ADMITTING DIAGNOSIS","");S:XAD<0 Y="@310";
"KRN",.402,1026,"DR",1,162.5,68)
39////^S X=XAD;@320;S ICDCD=31,IMPDATE=$$IMPDATE^FBCSV1("10D");S:EDATE<IMPDATE ICDCD=2;S XSP="PROC1";S XXE1=$P($G(^FBAAI(DA,"PROC")),"^",1);S XX1=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE1);
"KRN",.402,1026,"DR",1,162.5,69)
I XX1<0,$P(XX1,"^",2)["inactive" S Y="@320";I XX1<0,XXE1'?1N.N S Y="@99";S:XX1<0 XX1=XXE1;40////^S X=+XX1;@325;S XSP="PROC2";S XXE2=$P($G(^FBAAI(DA,"PROC")),"^",2);S XX2=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE2);
"KRN",.402,1026,"DR",1,162.5,70)
I XX2<0,$P(XX2,"^",2)["inactive" S Y="@325";I XX2<0,XXE2'?1N.N S Y="@99";S:XX2<0 XX2=XXE2;41////^S X=+XX2;@326;S XSP="PROC3";S XXE3=$P($G(^FBAAI(DA,"PROC")),"^",3);S XX3=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE3);
"KRN",.402,1026,"DR",1,162.5,71)
I XX3<0,$P(XX3,"^",2)["inactive" S Y="@326";I XX3<0,XXE3'?1N.N S Y="@99";S:XX3<0 XX3=XXE3;42////^S X=+XX3;@327;S XSP="PROC4";S XXE4=$P($G(^FBAAI(DA,"PROC")),"^",4);S XX4=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE4);
"KRN",.402,1026,"DR",1,162.5,72)
I XX4<0,$P(XX4,"^",2)["inactive" S Y="@327";I XX4<0,XXE4'?1N.N S Y="@99";S:XX4<0 XX4=XXE4;43////^S X=+XX4;@328;S XSP="PROC5";S XXE5=$P($G(^FBAAI(DA,"PROC")),"^",5);S XX5=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE5);
"KRN",.402,1026,"DR",1,162.5,73)
I XX5<0,$P(XX5,"^",2)["inactive" S Y="@328";I XX5<0,XXE5'?1N.N S Y="@99";S:XX5<0 XX5=XXE5;44////^S X=+XX5;@329;S XSP="PROC6";S XXE6=$P($G(^FBAAI(DA,"PROC")),"^",6);S XX6=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE6);
"KRN",.402,1026,"DR",1,162.5,74)
I XX6<0,$P(XX6,"^",2)["inactive" S Y="@329";I XX6<0,XXE6'?1N.N S Y="@99";S:XX6<0 XX6=XXE6;44.06////^S X=+XX6;@330;S XSP="PROC7";S XXE7=$P($G(^FBAAI(DA,"PROC")),"^",7);S XX7=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE7);
"KRN",.402,1026,"DR",1,162.5,75)
I XX7<0,$P(XX7,"^",2)["inactive" S Y="@330";I XX7<0,XXE7'?1N.N S Y="@99";S:XX7<0 XX7=XXE7;44.07////^S X=+XX7;@331;S XSP="PROC8";S XXE8=$P($G(^FBAAI(DA,"PROC")),"^",8);S XX8=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE8);
"KRN",.402,1026,"DR",1,162.5,76)
I XX8<0,$P(XX8,"^",2)["inactive" S Y="@331";I XX8<0,XXE8'?1N.N S Y="@99";S:XX8<0 XX8=XXE8;44.08////^S X=+XX8;@332;S XSP="PROC9";S XXE9=$P($G(^FBAAI(DA,"PROC")),"^",9);S XX9=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE9);
"KRN",.402,1026,"DR",1,162.5,77)
I XX9<0,$P(XX9,"^",2)["inactive" S Y="@332";I XX9<0,XXE9'?1N.N S Y="@99";S:XX9<0 XX9=XXE9;44.09////^S X=+XX9;@333;S XSP="PROC10";S XXE10=$P($G(^FBAAI(DA,"PROC")),"^",10);S XX10=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE10);
"KRN",.402,1026,"DR",1,162.5,78)
I XX10<0,$P(XX10,"^",2)["inactive" S Y="@333";I XX10<0,XXE10'?1N.N S Y="@99";S:XX10<0 XX10=XXE10;44.1////^S X=+XX10;@334;S XSP="PROC11";S XXE11=$P($G(^FBAAI(DA,"PROC")),"^",11);S XX11=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE11);
"KRN",.402,1026,"DR",1,162.5,79)
I XX11<0,$P(XX11,"^",2)["inactive" S Y="@334";I XX11<0,XXE11'?1N.N S Y="@99";S:XX11<0 XX11=XXE11;44.11////^S X=+XX11;@335;S XSP="PROC12";S XXE12=$P($G(^FBAAI(DA,"PROC")),"^",12);S XX12=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE12);
"KRN",.402,1026,"DR",1,162.5,80)
I XX12<0,$P(XX12,"^",2)["inactive" S Y="@335";I XX12<0,XXE12'?1N.N S Y="@99";S:XX12<0 XX12=XXE12;44.12////^S X=+XX12;@336;S XSP="PROC13";S XXE13=$P($G(^FBAAI(DA,"PROC")),"^",13);S XX13=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE13);
"KRN",.402,1026,"DR",1,162.5,81)
I XX13<0,$P(XX13,"^",2)["inactive" S Y="@336";I XX13<0,XXE13'?1N.N S Y="@99";S:XX13<0 XX13=XXE13;44.13////^S X=+XX13;@337;S XSP="PROC14";S XXE14=$P($G(^FBAAI(DA,"PROC")),"^",14);S XX14=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE14);
"KRN",.402,1026,"DR",1,162.5,82)
I XX14<0,$P(XX14,"^",2)["inactive" S Y="@337";I XX14<0,XXE14'?1N.N S Y="@99";S:XX14<0 XX14=XXE14;44.14////^S X=+XX14;@338;S XSP="PROC15";S XXE15=$P($G(^FBAAI(DA,"PROC")),"^",15);S XX15=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE15);
"KRN",.402,1026,"DR",1,162.5,83)
I XX15<0,$P(XX15,"^",2)["inactive" S Y="@338";I XX15<0,XXE15'?1N.N S Y="@99";S:XX15<0 XX15=XXE15;44.15////^S X=+XX15;@339;S XSP="PROC16";S XXE16=$P($G(^FBAAI(DA,"PROC")),"^",16);S XX16=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE16);
"KRN",.402,1026,"DR",1,162.5,84)
I XX16<0,$P(XX16,"^",2)["inactive" S Y="@339";I XX16<0,XXE16'?1N.N S Y="@99";S:XX16<0 XX16=XXE16;44.16////^S X=+XX16;@340;S XSP="PROC17";S XXE17=$P($G(^FBAAI(DA,"PROC")),"^",17);S XX17=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE17);
"KRN",.402,1026,"DR",1,162.5,85)
I XX17<0,$P(XX17,"^",2)["inactive" S Y="@340";I XX17<0,XXE17'?1N.N S Y="@99";S:XX17<0 XX17=XXE17;44.17////^S X=+XX17;@341;S XSP="PROC18";S XXE18=$P($G(^FBAAI(DA,"PROC")),"^",18);S XX18=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE18);
"KRN",.402,1026,"DR",1,162.5,86)
I XX18<0,$P(XX18,"^",2)["inactive" S Y="@341";I XX18<0,XXE18'?1N.N S Y="@99";S:XX18<0 XX18=XXE18;44.18////^S X=+XX18;@342;S XSP="PROC19";S XXE19=$P($G(^FBAAI(DA,"PROC")),"^",19);S XX19=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE19);
"KRN",.402,1026,"DR",1,162.5,87)
I XX19<0,$P(XX19,"^",2)["inactive" S Y="@342";I XX19<0,XXE19'?1N.N S Y="@99";S:XX19<0 XX19=XXE19;44.19////^S X=+XX19;@343;S XSP="PROC20";S XXE20=$P($G(^FBAAI(DA,"PROC")),"^",20);S XX20=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE20);
"KRN",.402,1026,"DR",1,162.5,88)
I XX20<0,$P(XX20,"^",2)["inactive" S Y="@343";I XX20<0,XXE20'?1N.N S Y="@99";S:XX20<0 XX20=XXE20;44.2////^S X=+XX20;@344;S XSP="PROC21";S XXE21=$P($G(^FBAAI(DA,"PROC")),"^",21);S XX21=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE21);
"KRN",.402,1026,"DR",1,162.5,89)
I XX21<0,$P(XX21,"^",2)["inactive" S Y="@344";I XX21<0,XXE21'?1N.N S Y="@99";S:XX21<0 XX21=XXE21;44.21////^S X=+XX21;@345;S XSP="PROC22";S XXE22=$P($G(^FBAAI(DA,"PROC")),"^",22);S XX22=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE22);
"KRN",.402,1026,"DR",1,162.5,90)
I XX22<0,$P(XX22,"^",2)["inactive" S Y="@345";I XX22<0,XXE22'?1N.N S Y="@99";S:XX22<0 XX22=XXE22;44.22////^S X=+XX22;@346;S XSP="PROC23";S XXE23=$P($G(^FBAAI(DA,"PROC")),"^",23);S XX23=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE23);
"KRN",.402,1026,"DR",1,162.5,91)
I XX23<0,$P(XX23,"^",2)["inactive" S Y="@346";I XX23<0,XXE23'?1N.N S Y="@99";S:XX23<0 XX23=XXE23;44.23////^S X=+XX23;@347;S XSP="PROC24";S XXE24=$P($G(^FBAAI(DA,"PROC")),"^",24);S XX24=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE24);
"KRN",.402,1026,"DR",1,162.5,92)
I XX24<0,$P(XX24,"^",2)["inactive" S Y="@347";I XX24<0,XXE24'?1N.N S Y="@99";S:XX24<0 XX24=XXE24;44.24////^S X=+XX24;@348;S XSP="PROC25";S XXE25=$P($G(^FBAAI(DA,"PROC")),"^",25);S XX25=$$ENICD9^FBICDP(EDATE,XSP,"N","Y","N",XXE25);
"KRN",.402,1026,"DR",1,162.5,93)
I XX25<0,$P(XX25,"^",2)["inactive" S Y="@348";I XX25<0,XXE25'?1N.N S Y="@99";S:XX25<0 XX25=XXE25;44.25////^S X=+XX25;@99;K FBPROVD;M FBPROVD=FBPROV;S FBX=$$RPROV^FBUTL8(.FBPROV,.FBPROVD);K FBPROVD;S:$D(FBPRICE) Y="@992";K FBRRMKD;
"KRN",.402,1026,"DR",1,162.5,94)
M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD);K FBRRMKD;@992;K FBJJ,FBKK,DIE("NO^"),FBX;
"KRN",.402,1056,-1)
0^4
"KRN",.402,1056,0)
FB ADD RX^3131210.1212^^162.1^^^3030827
"KRN",.402,1056,"%D",0)
^^1^1^3131210^
"KRN",.402,1056,"%D",1,0)
Add pharmacy prescription
"KRN",.402,1056,"DR",1,162.1)
S:'$D(FBDA)!('$D(DATEF))!('$D(DFN))!('$D(FBPSA))!('$D(FB7078))!('$D(FBASSOC))!('$D(FBAAPTC)) Y="";K FBUP;4///^S X="`"_+FBDA;@99;
"KRN",.402,1056,"DR",2,162.11)
S:$G(FBFPPSL)="" Y="@20";36///^S X=FBFPPSL;@20;S:$G(FBDODINV)="" Y="@10";39///^S X=FBDODINV;@10;2///^S X=DATEF;4////^S X=DFN;25////^S X=FBPSA;S Y=$S($D(FBV583):"@1",1:"@2");@1;S:FBV583']"" Y="@3";26////^S X=FBV583;S Y="@3";@2;
"KRN",.402,1056,"DR",2,162.11,1)
S:FB7078']"" Y="@3";26////^S X=FB7078;@3;27///^S X=FBASSOC;16///^S X=FBAAPTC;3;S AC=X;1;1.4;1.5;1.6;8///^S X=1;S FBUP=1;
"KRN",.402,1796,-1)
1^3
"KRN",.402,1796,0)
FBAA INVOICE EDIT    FILE #162.1
"KRN",3.6,73,-1)
0^1
"KRN",3.6,73,0)
FBAA PURGE TRANSMITTED MRA'S^PURGE OF TRANSMITTED MRA'S
"KRN",3.6,73,1,0)
^3.61A^5^5^3130829^^^
"KRN",3.6,73,1,1,0)
The purge of transmitted MRA's has completed.
"KRN",3.6,73,1,2,0)
 
"KRN",3.6,73,1,3,0)
Total Veteran MRA's deleted: |1|.
"KRN",3.6,73,1,4,0)
Total Vendor MRA's deleted: |2|.
"KRN",3.6,73,1,5,0)
Total IPAC Vendor Agreement MRA's deleted: |3|.
"KRN",3.6,73,3,0)
2^3.63^2^2^3130829^^^
"KRN",3.6,73,3,1,0)
Bulletin is triggered upon completion of the 'Purge Transmitted MRA's'
"KRN",3.6,73,3,2,0)
option.
"KRN",3.6,73,4,0)
^3.64A^3^3
"KRN",3.6,73,4,1,0)
1
"KRN",3.6,73,4,1,1,0)
^3.65^1^1^3130829^^^
"KRN",3.6,73,4,1,1,1,0)
A numeric count of the total Veteran MRA's deleted.
"KRN",3.6,73,4,2,0)
2
"KRN",3.6,73,4,2,1,0)
^3.65^1^1^3130829^^^
"KRN",3.6,73,4,2,1,1,0)
A numeric count of the total Vendor MRA's deleted.
"KRN",3.6,73,4,3,0)
3
"KRN",3.6,73,4,3,1,0)
^3.65^1^1^3130829^^^^
"KRN",3.6,73,4,3,1,1,0)
A numeric count of the total IPAC Vendor Agreement MRA's deleted.
"KRN",19,5064,-1)
2^13
"KRN",19,5064,0)
FBAA VENDOR OPTIONS^Vendor Menu^^M^.5^^^^^^^
"KRN",19,5064,10,0)
^19.01PI^7^7
"KRN",19,5064,10,7,0)
11458^IPAC
"KRN",19,5064,10,7,"^")
FBAA IPAC AGREEMENT MENU
"KRN",19,5064,"U")
VENDOR MENU
"KRN",19,5087,-1)
2^17
"KRN",19,5087,0)
FBAA OUTPUTS MENU^Outputs Main Menu^^M^.5^^^^^^^
"KRN",19,5087,10,0)
^19.01IP^24^24
"KRN",19,5087,10,24,0)
11475
"KRN",19,5087,10,24,"^")
FBAA IPAC VENDOR REPORT MENU
"KRN",19,5087,"U")
OUTPUTS MAIN MENU
"KRN",19,5146,-1)
2^15
"KRN",19,5146,0)
FBCH OUTPUT MENU^Output Menu^^M^.5^^^^^^^
"KRN",19,5146,10,0)
^19.01IP^22^22
"KRN",19,5146,10,22,0)
11475
"KRN",19,5146,10,22,"^")
FBAA IPAC VENDOR REPORT MENU
"KRN",19,5146,"U")
OUTPUT MENU
"KRN",19,5165,-1)
0^16
"KRN",19,5165,0)
FBAA REQUEUE MRA^Re-Transmit MRA's^^R^^FBAASUPERVISOR^^^^^^FEE BASIS
"KRN",19,5165,1,0)
^^4^4^3130926^
"KRN",19,5165,1,1,0)
This option can be used to retransmit already transmitted MRAs for a
"KRN",19,5165,1,2,0)
specific date. All types of MRAs are kept on file until one of the purge
"KRN",19,5165,1,3,0)
options is used to delete the MRAs. This option would be used in instances
"KRN",19,5165,1,4,0)
when for some reason Austin did not receive the transmission.
"KRN",19,5165,25)
FBAARMRA
"KRN",19,5165,"U")
RE-TRANSMIT MRA'S
"KRN",19,5167,-1)
2^14
"KRN",19,5167,0)
FB MRA MAIN MENU^MRA Main Menu^^M^.5^^^^^^^
"KRN",19,5167,10,0)
^19.01PI^5^5
"KRN",19,5167,10,3,0)
5165^^3
"KRN",19,5167,10,3,"^")
FBAA REQUEUE MRA
"KRN",19,5167,10,5,0)
11460^IPAC
"KRN",19,5167,10,5,"^")
FBAA IPAC AGREEMENT MRA MENU
"KRN",19,5167,"U")
MRA MAIN MENU
"KRN",19,5284,-1)
2^18
"KRN",19,5284,0)
FB PHONE MENU^Telephone Inquiry Menu^^M^.5^^^^^^^^^^
"KRN",19,5284,10,0)
^19.01IP^5^5
"KRN",19,5284,10,5,0)
11475
"KRN",19,5284,10,5,"^")
FBAA IPAC VENDOR REPORT MENU
"KRN",19,5284,"U")
TELEPHONE INQUIRY MENU
"KRN",19,11456,-1)
0^3
"KRN",19,11456,0)
FBAA IPAC AGREEMENT DELETE^Delete an IPAC agreement^^R^^FB IPAC VENDOR^^^^^^FEE BASIS
"KRN",19,11456,1,0)
^^2^2^3110921^
"KRN",19,11456,1,1,0)
This option will allow an authorized user to delete an IPAC agreement if
"KRN",19,11456,1,2,0)
there are no payments associated with this agreement
"KRN",19,11456,25)
FBAAIAD
"KRN",19,11456,"U")
DELETE AN IPAC AGREEMENT
"KRN",19,11457,-1)
0^22
"KRN",19,11457,0)
FBAA IPAC AGREEMENT ENTER/EDIT^Enter/Edit a new IPAC Agreement^^R^^FB IPAC VENDOR^^^^^^FEE BASIS
"KRN",19,11457,1,0)
^^2^2^3131219^
"KRN",19,11457,1,1,0)
This option is used to enter or edit a new IPAC agreement with a federal
"KRN",19,11457,1,2,0)
vendor.
"KRN",19,11457,25)
FBAAIAE
"KRN",19,11457,"U")
ENTER/EDIT A NEW IPAC AGREEMEN
"KRN",19,11458,-1)
0^5
"KRN",19,11458,0)
FBAA IPAC AGREEMENT MENU^IPAC Vendor Agreement Menu^^M^^^^^^^^FEE BASIS
"KRN",19,11458,1,0)
^^1^1^3131219^
"KRN",19,11458,1,1,0)
This is the main IPAC Vendor Agreement Menu.
"KRN",19,11458,10,0)
^19.01IP^4^3
"KRN",19,11458,10,1,0)
11457^^1
"KRN",19,11458,10,1,"^")
FBAA IPAC AGREEMENT ENTER/EDIT
"KRN",19,11458,10,3,0)
11456^^3
"KRN",19,11458,10,3,"^")
FBAA IPAC AGREEMENT DELETE
"KRN",19,11458,10,4,0)
11459^^4
"KRN",19,11458,10,4,"^")
FBAA IPAC AGREEMENT VIEW
"KRN",19,11458,99)
63175,37813
"KRN",19,11458,"U")
IPAC VENDOR AGREEMENT MENU
"KRN",19,11459,-1)
0^4
"KRN",19,11459,0)
FBAA IPAC AGREEMENT VIEW^View IPAC Vendor Agreement^^R^^^^^^^^FEE BASIS
"KRN",19,11459,1,0)
^^1^1^3130930^
"KRN",19,11459,1,1,0)
This option displays an IPAC agreement.
"KRN",19,11459,25)
FBAAIAV
"KRN",19,11459,"U")
VIEW IPAC VENDOR AGREEMENT
"KRN",19,11460,-1)
0^10
"KRN",19,11460,0)
FBAA IPAC AGREEMENT MRA MENU^IPAC Agreement MRA Main Menu^^M^^^^^^^^FEE BASIS
"KRN",19,11460,1,0)
^19.06^1^1^3110921^^^
"KRN",19,11460,1,1,0)
This is the main menu for adding, changing and deleting MRA's for IPAC
"KRN",19,11460,10,0)
^19.01IP^3^3
"KRN",19,11460,10,1,0)
11461^^1
"KRN",19,11460,10,1,"^")
FBAA MRA IPAC ADD TYPE
"KRN",19,11460,10,2,0)
11462^^2
"KRN",19,11460,10,2,"^")
FBAA MRA IPAC CHANGE TYPE
"KRN",19,11460,10,3,0)
11463^^3
"KRN",19,11460,10,3,"^")
FBAA MRA IPAC DELETE TYPE
"KRN",19,11460,99)
63091,61814
"KRN",19,11460,"U")
IPAC AGREEMENT MRA MAIN MENU
"KRN",19,11461,-1)
0^12
"KRN",19,11461,0)
FBAA MRA IPAC ADD TYPE^Add Type IPAC Agreement MRA^^R^^^^^^^^FEE BASIS
"KRN",19,11461,1,0)
^^1^1^3110921^
"KRN",19,11461,1,1,0)
This option is used to add an add type MRA for IPAC
"KRN",19,11461,25)
AA^FBAAIAQ
"KRN",19,11461,"U")
ADD TYPE IPAC AGREEMENT MRA
"KRN",19,11462,-1)
0^11
"KRN",19,11462,0)
FBAA MRA IPAC CHANGE TYPE^Change Type IPAC Agreement MRA^^R^^^^^^^^FEE BASIS
"KRN",19,11462,1,0)
^^1^1^3110921^
"KRN",19,11462,1,1,0)
This option adds a change type MRA for IPAC
"KRN",19,11462,25)
CC^FBAAIAQ
"KRN",19,11462,"U")
CHANGE TYPE IPAC AGREEMENT MRA
"KRN",19,11463,-1)
0^9
"KRN",19,11463,0)
FBAA MRA IPAC DELETE TYPE^Delete Type IPAC Agreement MRA^^R^^^^^^^^FEE BASIS
"KRN",19,11463,1,0)
^19.06^1^1^3130926^^
"KRN",19,11463,1,1,0)
This option adds a delete type IPAC MRA
"KRN",19,11463,25)
DD^FBAAIAQ
"KRN",19,11463,"U")
DELETE TYPE IPAC AGREEMENT MRA
"KRN",19,11474,-1)
0^25
"KRN",19,11474,0)
FBAA IPAC DoD INVOICE RPT^IPAC Vendor DoD Invoice Report (Summary)^^R^^^^^^^^FEE BASIS
"KRN",19,11474,1,0)
^^3^3^3140204^
"KRN",19,11474,1,1,0)
This report will display summary information on all of the DoD 
"KRN",19,11474,1,2,0)
invoices for the selected IPAC vendors, within the selected date 
"KRN",19,11474,1,3,0)
range, and for the selected payment types.
"KRN",19,11474,25)
EN^FBAAIAR
"KRN",19,11474,"U")
IPAC VENDOR DOD INVOICE REPORT
"KRN",19,11475,-1)
0^23
"KRN",19,11475,0)
FBAA IPAC VENDOR REPORT MENU^IPAC Vendor Reports^^M^^^^^^^^FEE BASIS
"KRN",19,11475,1,0)
^19.06^1^1^3140128^^^^
"KRN",19,11475,1,1,0)
This is the parent menu containing all of the Fee IPAC Vendor reports.
"KRN",19,11475,10,0)
^19.01IP^3^3
"KRN",19,11475,10,1,0)
11474^2
"KRN",19,11475,10,1,"^")
FBAA IPAC DoD INVOICE RPT
"KRN",19,11475,10,2,0)
11477^1
"KRN",19,11475,10,2,"^")
FBAA IPAC DoD INVOICE INQUIRY
"KRN",19,11475,10,3,0)
11476^3
"KRN",19,11475,10,3,"^")
FBAA IPAC VENDOR PAYMENT RPT
"KRN",19,11475,99)
63222,51264
"KRN",19,11475,"U")
IPAC VENDOR REPORTS
"KRN",19,11476,-1)
0^26
"KRN",19,11476,0)
FBAA IPAC VENDOR PAYMENT RPT^IPAC Vendor Payment Report (Detail)^^R^^^^^^^^FEE BASIS
"KRN",19,11476,1,0)
^^2^2^3140204^
"KRN",19,11476,1,1,0)
This report will display detail information on paid line items by the
"KRN",19,11476,1,2,0)
invoice type, DoD invoice number, and date of service.
"KRN",19,11476,25)
EN^FBAAIARB
"KRN",19,11476,"U")
IPAC VENDOR PAYMENT REPORT (DE
"KRN",19,11477,-1)
0^24
"KRN",19,11477,0)
FBAA IPAC DoD INVOICE INQUIRY^DoD Invoice Number Inquiry^^R^^^^^^^^FEE BASIS
"KRN",19,11477,1,0)
^^2^2^3140127^
"KRN",19,11477,1,1,0)
This report displays a list of all VistA Fee invoices with a specified 
"KRN",19,11477,1,2,0)
DoD invoice number.
"KRN",19,11477,25)
EN^FBAAIAR1
"KRN",19,11477,"U")
DOD INVOICE NUMBER INQUIRY
"KRN",19,11575,-1)
1^27
"KRN",19,11575,0)
FBAA C&P ENTER PAYMENT
"KRN",19.1,567,-1)
0^1
"KRN",19.1,567,0)
FB IPAC VENDOR
"KRN",19.1,567,1,0)
^^2^2^3110810^
"KRN",19.1,567,1,1,0)
Holders of this key are allowed to change data in the IPAC VENDOR
"KRN",19.1,567,1,2,0)
AGREEMENT (#161.95) file.
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",114,-1)
1^1
"PKG",114,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",114,20,0)
^9.402P^1^1
"PKG",114,20,1,0)
2^^FBPMRG
"PKG",114,20,1,1)

"PKG",114,20,"B",2,1)

"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
3.5^2950130^2960822
"PKG",114,22,1,"PAH",1,0)
123^3141120^123456995
"PKG",114,22,1,"PAH",1,1,0)
^^1^1^3141120
"PKG",114,22,1,"PAH",1,1,1,0)
VA/DoD VistA Fee-IPAC Interface Enhancement
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
37
"RTN","FBAACO")
0^19^B48482031^B30906889
"RTN","FBAACO",1,0)
FBAACO ;AISC/GRR - ENTER MEDICAL PAYMENT ;7/13/2003
"RTN","FBAACO",2,0)
 ;;3.5;FEE BASIS;**4,61,79,116,122,133,108,135,123**;JAN 30, 1995;Build 51
"RTN","FBAACO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAACO",4,0)
EN583 ;driver for opt payments (entry point for uc)
"RTN","FBAACO",5,0)
 K FBAAOUT,FBPOP
"RTN","FBAACO",6,0)
 D SITE G Q:$G(FBPOP) D BT G Q:$G(FBAAOUT)
"RTN","FBAACO",7,0)
1 K FBAAID,FBAAVID,FBAAOUT,FBDL,FBAAMM D SITE G Q:$G(FBPOP) S FBINTOT=0 W !!
"RTN","FBAACO",8,0)
 I '$D(FB583) K FBDL,FBAR D GETVET^FBAAUTL1 G EN583:'DFN K FBAAOUT,FBDMRA D GETAUTH^FBAAUTL1 G 1:FTP']""
"RTN","FBAACO",9,0)
 K FBAAOUT
"RTN","FBAACO",10,0)
 I $G(FBCHCO) S FB7078=$S($G(FB7078):FB7078_";FB7078(",$D(FB583):FB583_";FB583(",1:"")
"RTN","FBAACO",11,0)
 D:FBAAPTC="R" ^FBAACO0
"RTN","FBAACO",12,0)
 D ^FBAAEAR:$P(FBSITE(1),"^",4)="Y"
"RTN","FBAACO",13,0)
 D PAT,GETVEN1^FBAACO1:$D(FB583),GETVEN^FBAACO1:'$D(FB583) I $G(FBAAOUT) G Q:$D(FB583),1
"RTN","FBAACO",14,0)
 W !! D FILEV^FBAACO5(DFN,FBV) I $G(FBAAOUT) G Q:$D(FB583),1
"RTN","FBAACO",15,0)
 ;check for payments against all linked vendors
"RTN","FBAACO",16,0)
 S DA=+Y D CHK^FBAACO4 K FBAACK1,FBAAOUT,DA,X,Y
"RTN","FBAACO",17,0)
 K FBAAID,FBAAVID D GETINV^FBAACO1 I $G(FBAAOUT) Q:$D(FBCHCO)  G Q:$D(FB583),1
"RTN","FBAACO",18,0)
 I '$D(FBAAID)!('$D(FBAAVID)) D GETINDT^FBAACO1 I $G(FBAAOUT) D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",19,0)
 ;
"RTN","FBAACO",20,0)
 ; FB*3.5*123 - check for IPAC agreement for Federal vendor and capture DoD invoice number (both req'd if IPAC)
"RTN","FBAACO",21,0)
 S FBDODINV=""
"RTN","FBAACO",22,0)
 S FBIA=$$IPAC^FBAAMP(FBV) I FBIA=-1 S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",23,0)
 I FBIA,'$$IPACINV^FBAAMP(.FBDODINV) S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",24,0)
 ;
"RTN","FBAACO",25,0)
 ; ask patient account number
"RTN","FBAACO",26,0)
 S FBCSID=$$ASKPAN^FBUTL5() I FBCSID="^" K FBCSID S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",27,0)
 ; if U/C then get FPPS Claim ID else ask user
"RTN","FBAACO",28,0)
 I $D(FB583) S FBFPPSC=$P($G(^FB583(FB583,5)),U) W !,"FPPS CLAIM ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBAACO",29,0)
 E  S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 K FBFPPSC S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q
"RTN","FBAACO",30,0)
 ;
"RTN","FBAACO",31,0)
 S FBUCI135=$$ENTROUTP^FBUTL136(DFN,FBV,FBAAVID,FBFPPSC)                   ; Enter UCID FB3.5*135
"RTN","FBAACO",32,0)
 I FBUCI135<1 K FBFPPSC S FBAAOUT=1 D OUT G Q:$D(FB583),1:'$D(FBCHCO) Q    ; Enter UCID FB3.5*135
"RTN","FBAACO",33,0)
 ;
"RTN","FBAACO",34,0)
 G 1^FBAAMP:$G(FBMP) D MM G Q:$G(FBAAOUT)
"RTN","FBAACO",35,0)
SVDT K FBAAOUT,HOLDY W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,1) I $G(FBAAOUT) K FBAADT,FBX,FBAACP W:FBINTOT>0 !!,"Invoice: "_FBAAIN_" Totals $ "_$J(FBINTOT,1,2) G Q:$D(FB583)!($G(FBCHCO)),1
"RTN","FBAACO",36,0)
 D SETO^FBAACO3,DISPINV^FBAACO1
"RTN","FBAACO",37,0)
 W ! D ASKZIP^FBAAFS($G(FBV),$G(FBAADT))
"RTN","FBAACO",38,0)
 I $G(FBAAOUT)!(FBZIP']"") D DEL^FBAACO3 G SVDT
"RTN","FBAACO",39,0)
CPT K FBAAOUT W !
"RTN","FBAACO",40,0)
 D CPTM^FBAALU($G(FBAADT),$G(DFN)) I 'FBGOT D DEL^FBAACO3 G SVDT
"RTN","FBAACO",41,0)
 D CHK2^FBAACO4 I FBJ']"" G SVPR
"RTN","FBAACO",42,0)
CHKE ;determines what action to take on duplicate services entered
"RTN","FBAACO",43,0)
 K FBAAOUT W !!,*7,"Service selected for that date already in system."
"RTN","FBAACO",44,0)
 S DIR(0)="Y",DIR("A")="Do you want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G Q:$D(DIRUT),SVPR:Y
"RTN","FBAACO",45,0)
 I FBJ]"",FBJ'=FBV W !!,*7,"You must use the 'EDIT PAYMENT' option to edit the service previously",!,"entered for that date." D DEL^FBAACO3 G SVDT
"RTN","FBAACO",46,0)
 S DIR(0)="Y",DIR("A")="Want to edit it",DIR("B")="No" D ^DIR K DIR G Q:$D(DIRUT) I Y D DOEDIT^FBAACO3 G SVDT:'$D(FBDL)!($G(FBAAOUT)),Q:$D(FB583),1
"RTN","FBAACO",47,0)
 D ^FBAACO2 G CPT:'$G(FBDEN)
"RTN","FBAACO",48,0)
SVPR K FBAAOUT
"RTN","FBAACO",49,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4($G(FBAACP))) D ASKTIME^FBAAFS I $G(FBAAOUT)!'$G(FBTIME) G CPT
"RTN","FBAACO",50,0)
 D SVCPR^FBAACO1 G CPT:$G(FBAAOUT)
"RTN","FBAACO",51,0)
 S FBAMTPD=0 D FILE^FBAACO2 I $D(FBAAOUT) G Q:$D(FB583),1:$D(FBDL),Q ;FB*3.5*133 removed provider field save
"RTN","FBAACO",52,0)
 D OUT^FBAACO3 W:Z1>(FBAAMPI-20) !,*7,"Warning, you can only enter ",(FBAAMPI-Z1)," more line(s)!" G CPT:Z1'>(FBAAMPI-1) D WARN^FBAACO3 G EN583
"RTN","FBAACO",53,0)
 G 1
"RTN","FBAACO",54,0)
 ;
"RTN","FBAACO",55,0)
Q ;exit point for outpatient payment routines
"RTN","FBAACO",56,0)
 K FBAAPTC,DIC,Y,A,I,DFN,BO,DA,DI,DQ,DR,E,FBAABDT,FBAABE,FBFY,FBDL,FBAAID,FBAAIN,FBAAMPI,FBAAOPA,FBAAPN,FBCONT,FBDX,FBGOT,FBPOV,FBPT,DLAYGO,FBPSA,FBASSOC,FBZBN,FBZBS,FBDEN,FBV,FBSDI,FBAACPI,FBAACP,FBX,FBLOCK
"RTN","FBAACO",57,0)
 K FBSP,FBTPD,FBTT,FBTYPE,FTP,FBDEL,FY,FBINTOT,G,H,MAJN,NO,PI,Q,R,SUB,SUBN,TA,TP,UL,W,X1,Z,Z1,ZZ,FBAADT,K,L,J,FBTOV,FBPARCD,FBT,FEEO,Z2,FBSITE,FBAUT,T,FBLOC,FBSSN,FBVEN,FBD1,Z0,FB583
"RTN","FBAACO",58,0)
 K A1,A2,B1,B2,DAT,DIE,FBAACPT,FBAMTPD,FBAAEDT,FBAAOUT,FBAAPD,FBI,FBIN,FBPROG,FBRR,FBXX,PTYPE,S,VAL,X,V,ZS,FB7078,FBFDC,FBCOUNTY,FBMST,FBTTYPE,FBTV,HY,FBDMRA,DIRUT,FBPOP,FBJ,FBAACK1,FBAR,FBDA,FBST
"RTN","FBAACO",59,0)
 K FBMP,FBK,FBAAAS,%DT,FBDT,FBMAX,FBAMFS,FBAASC,FBHCFA,FBSI,FBCNP,FBAAAMT,FBAAVID,FBAAMM,FBAAMM1,VAPA,FBZX,FBTST,HOLDY,FBAOT
"RTN","FBAACO",60,0)
 K FBCSID,FBFPPSC,FBFPPSL,FBADJ,FBADJD,FBADJL,FBRRMK,FBRRMKD,FBRRMKL,FBUNITS,FBCNTRP,FBUCI135,FBIA,FBDODINV
"RTN","FBAACO",61,0)
AUTHQ K DIC,DFN,CNT,FB7078,FBAABDT,FBAAEDT,FBAAOUT,FBASSOC,FBAUT,FBPOV,FBPROG,FBPSA,FBPT,FBTT,FBTYPE,FBVEN,FBTP,PI,TA,FBMOD,FBMODA,FBZIP,FBTIME,FBFSAMT,FBFSUSD
"RTN","FBAACO",62,0)
 D GETAUTHK^FBAAUTL1
"RTN","FBAACO",63,0)
 Q
"RTN","FBAACO",64,0)
 ;
"RTN","FBAACO",65,0)
SITE ;set up site variables
"RTN","FBAACO",66,0)
 D:'$D(FBSITE(0)) SITEP^FBAAUTL Q:$G(FBPOP)  I '$G(FBPROG) D
"RTN","FBAACO",67,0)
 .I $G(FBCHCO) S FBPROG="I ($P(^(0),""^"",3)=6!($P(^(0),""^"",3)=7))&($P(^(0),U,9)'[""FB583"")" Q
"RTN","FBAACO",68,0)
 .S FBPROG=$S($P(FBSITE(1),"^",6)="":"I $P(^(0),""^"",9)'[""FB583""",1:"I $P(^(0),""^"",3)=2,($P(^(0),""^"",9)'[""FB583"")")
"RTN","FBAACO",69,0)
 S:'$D(FBAAPTC) FBAAPTC="V"
"RTN","FBAACO",70,0)
 S FBAAMPI=$P($G(^FBAA(161.4,1,"FBNUM")),"^",3),FBAAMPI=$S(FBAAMPI]"":FBAAMPI,1:100)
"RTN","FBAACO",71,0)
 Q
"RTN","FBAACO",72,0)
 ;
"RTN","FBAACO",73,0)
BT ;select batch
"RTN","FBAACO",74,0)
 S DIC="^FBAA(161.7,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U,3)=""B3""&($G(^(""ST""))=""O"")&(($P(^(0),U,5)=DUZ)!($D(^XUSEC(""FBAASUPERVISOR"",DUZ))))",DIC("W")="W !,""  Obligation #: "",$P(^(0),U,2)" W !! D ^DIC K DIC I X["^"!(X="") S FBAAOUT=1 Q
"RTN","FBAACO",75,0)
 G BT:Y<0 S (DA,FBAABE)=+Y,Y(0)=^FBAA(161.7,DA,0)
"RTN","FBAACO",76,0)
 I $P(Y(0),"^",11)>(FBAAMPI-1) W !!,"This Batch already has the maximum number of Payments!" G BT
"RTN","FBAACO",77,0)
 S Z1=$P(Y(0),"^",11),FB7078="",BO=$P(^FBAA(161.7,DA,0),"^",2)
"RTN","FBAACO",78,0)
 Q
"RTN","FBAACO",79,0)
PAT ;set up patient in patient file
"RTN","FBAACO",80,0)
 ;required input variable DFN
"RTN","FBAACO",81,0)
 I '$D(^FBAAC(DFN,0)) K DD,DO S (X,DINUM)=DFN,DIC(0)="L",DLAYGO=162,DIC="^FBAAC(" D FILE^DICN K DLAYGO,DIC,DINUM,DD,DO,DA
"RTN","FBAACO",82,0)
 Q
"RTN","FBAACO",83,0)
MM ;check for money management of entire invoice
"RTN","FBAACO",84,0)
 ; fb*3.5*116
"RTN","FBAACO",85,0)
 D MMPPT
"RTN","FBAACO",86,0)
 Q
"RTN","FBAACO",87,0)
OUT K FBAADT,FBX,FBAACP W:FBINTOT>0 !!,"Invoice: "_FBAAIN_" Totals $ "_$J(FBINTOT,1,2) Q
"RTN","FBAACO",88,0)
 ;
"RTN","FBAACO",89,0)
MMPPT ;money management/prompt pay type for multiple payment entry
"RTN","FBAACO",90,0)
 ; input
"RTN","FBAACO",91,0)
 ;   FBAAPTC = payment type code, "R" when patient reimbursement
"RTN","FBAACO",92,0)
 ;   FBV     = vendor being paid (ien)
"RTN","FBAACO",93,0)
 ;   when called from FBAAMP additional variables will be available
"RTN","FBAACO",94,0)
 ;     FBCNTRA = contract ien from authorization
"RTN","FBAACO",95,0)
 ;     FBVEN   = vendor from authorization
"RTN","FBAACO",96,0)
 ;     FB583   = defined when unauthorized claim
"RTN","FBAACO",97,0)
 ; output
"RTN","FBAACO",98,0)
 ;   FBAAMM  = prompt payment, =1 to ask
"RTN","FBAACO",99,0)
 ;   FBAAMM1 = prompt payment type for line
"RTN","FBAACO",100,0)
 ;   FBAAOUT = (optional), = 1 to quit
"RTN","FBAACO",101,0)
 ;   FBCNTRP = contract for line item (ien)
"RTN","FBAACO",102,0)
 ;
"RTN","FBAACO",103,0)
 S (FBAAMM,FBAAMM1,FBCNTRP)=""
"RTN","FBAACO",104,0)
 I $G(FBAAPTC)'="R",'$D(FB583) D
"RTN","FBAACO",105,0)
 . ;
"RTN","FBAACO",106,0)
 . ; check if contract required by authorization
"RTN","FBAACO",107,0)
 . I '$D(FB583),$$UCFA^FBUTL7($G(FBV),$G(FBVEN),$G(FBCNTRA)) D  Q
"RTN","FBAACO",108,0)
 . . W !,"All lines items on this invoice will be considered as contracted services"
"RTN","FBAACO",109,0)
 . . W !,"under Contract ",$P($G(^FBAA(161.43,FBCNTRA,0)),U)," from the authorization."
"RTN","FBAACO",110,0)
 . . S (FBAAMM,FBAAMM1)=1
"RTN","FBAACO",111,0)
 . . S FBCNTRP=FBCNTRA
"RTN","FBAACO",112,0)
 . ;
"RTN","FBAACO",113,0)
 . ; when not forced by authorization ask if contracted service
"RTN","FBAACO",114,0)
 . W !,"The answer to the following will apply to all payments entered via this option."
"RTN","FBAACO",115,0)
 . S DIR(0)="Y"
"RTN","FBAACO",116,0)
 . S DIR("A")="Are payments for contracted services"
"RTN","FBAACO",117,0)
 . S DIR("B")="No"
"RTN","FBAACO",118,0)
 . S DIR("?",1)="Answering no indicates interest will not be paid for any line items."
"RTN","FBAACO",119,0)
 . S DIR("?",2)="Answering yes indicates interest will be paid."
"RTN","FBAACO",120,0)
 . S DIR("?",3)="A fee schedule is not used for contracted services."
"RTN","FBAACO",121,0)
 . S DIR("?")="Enter either 'Y' or 'N'."
"RTN","FBAACO",122,0)
 . D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAACO",123,0)
 . S (FBAAMM,FBAAMM1)=$S(Y:1,1:"")
"RTN","FBAACO",124,0)
 . Q:FBAAMM1=""
"RTN","FBAACO",125,0)
 . ;
"RTN","FBAACO",126,0)
 . ; if contracted service, ask contract
"RTN","FBAACO",127,0)
 . S DIR(0)="PO^161.43:AQEM"
"RTN","FBAACO",128,0)
 . S DIR("A")="CONTRACT"
"RTN","FBAACO",129,0)
 . S DIR("?",1)="If the line item is under a contract then select it."
"RTN","FBAACO",130,0)
 . S DIR("?")="Contract must be active and applicable for the vendor."
"RTN","FBAACO",131,0)
 . S DIR("S")="I $P($G(^(0)),""^"",2)'=""I"",$$VCNTR^FBUTL7($G(FBV),+Y)"
"RTN","FBAACO",132,0)
 . D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S FBAAOUT=1 Q
"RTN","FBAACO",133,0)
 . S:Y>0 FBCNTRP=+Y
"RTN","FBAACO",134,0)
 Q
"RTN","FBAACO",135,0)
 ;
"RTN","FBAACO2")
0^35^B30248280^B29842500
"RTN","FBAACO2",1,0)
FBAACO2 ;AISC/GRR - PAYMENT PROCESS FOR DUPLICATE ;7/13/2003
"RTN","FBAACO2",2,0)
 ;;3.5;FEE BASIS;**4,55,61,77,116,122,133,108,135,139,123**;JAN 30, 1995;Build 51
"RTN","FBAACO2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAACO2",4,0)
RD S DIR(0)="Y",DIR("A")="Want this payment stored as a Medical Denial",DIR("B")="YES",DIR("?")="Enter 'Yes' to store payment entry as a denial and send a Suspension letter.  Enter 'No' to have nothing happen." D ^DIR K DIR Q:$D(DIRUT)!('Y)
"RTN","FBAACO2",5,0)
 S FBDEN=1 Q
"RTN","FBAACO2",6,0)
FILE ;files sp multiple entry
"RTN","FBAACO2",7,0)
 K DR S TP="" I $G(FBDEN) S FBAMTPD=0
"RTN","FBAACO2",8,0)
 ; FB*3.5*123 - set IPAC fields .05 and .055 on the next line
"RTN","FBAACO2",9,0)
 S DR="49///^S X=$G(FBCSID);50///^S X=$G(FBFPPSC);81///^S X=$G(FBUCI135);.05////^S X=$G(FBIA);.055///^S X=$G(FBDODINV);I $G(FBDEN) S Y=1;48;47//1;S FBUNITS=X;S:$G(FBFPPSC)="""" Y=""@11"";S FBX=$$FPPSL^FBUTL5();S:FBX=-1 Y=0;51///^S X=FBX;@11"
"RTN","FBAACO2",10,0)
 ; fb*3.5*116 do not enable different interest indicator values at line item level; interest indicator set at invoice level
"RTN","FBAACO2",11,0)
 S DR(1,162.03,1)="34///^S X=$G(FBAAMM);D POS^FBAACO1;S:'$G(FBHCFA(30)) Y=0;1;S J=X;I $G(FBDEN) S Y=2;D FEE^FBAACO0;44////^S X=FBFSAMT;45///^S X=FBFSUSD;2///^S X=FBAMTPD;S K=X"
"RTN","FBAACO2",12,0)
 S DR(1,162.03,2)="S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2);S:FBX=0 Y=0;6////^S X=DUZ"
"RTN","FBAACO2",13,0)
 S DR(1,162.03,3)="7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;33///^S X=FBAAVID;I $G(FBDEN) S FBTST=1"
"RTN","FBAACO2",14,0)
 I '$G(FBDEN) D
"RTN","FBAACO2",15,0)
 . ; FB*3.5*139-JLG/JAS-ICD10 REMEDIATION - Made modifications to DR strings for ICD-10, added FBDXCHK1 and FBDXCHK2 for this
"RTN","FBAACO2",16,0)
 .N FBCSVSTR S FBCSVSTR="I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@30"";"
"RTN","FBAACO2",17,0)
 .N FBDXCHK1 S FBDXCHK1=";@20;S XX1=-1 S XX1=$$FBDXCHK^FBAACO2(FBAADT) S:XX1<0 Y=""@20"";28///^S X=XX1;S Y=""@6"";"
"RTN","FBAACO2",18,0)
 .N FBDXCHK2 S FBDXCHK2=";@25;S XX1=-1 S XX1=$$FBDXCHK^FBAACO2(FBAADT) S:XX1<0 Y=""@25"";28///^S X=XX1;S Y=""@35"";@30;"
"RTN","FBAACO2",19,0)
 .S DR(1,162.03,4)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S:FB7078]""""!($D(FB583)) Y=30"_FBDXCHK1_"@6;30////^S X=FBHCFA(30);"
"RTN","FBAACO2",20,0)
 .S DR(1,162.03,5)="31;32R;S Y=15;@1"_FBDXCHK2_FBCSVSTR_"@35;30////^S X=FBHCFA(30);31;15///^S X=FBPT;S FBX=$$RR^FBUTL4(.FBRRMK,2);S:FBX=0 Y=0"
"RTN","FBAACO2",21,0)
 . ;end 139
"RTN","FBAACO2",22,0)
 .S DR(1,162.03,6)="16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=FBTYPE;26////^S X=FBPSA;S:$D(FBV583) Y=""@2"";27////^S X=FB7078;S Y=""@99"";@2;27////^S X=FBV583;@99;S FBTST=1;54////^S X=FBCNTRP"
"RTN","FBAACO2",23,0)
 .S DR(1,162.03,7)="73;74;75;58;59;60;61;62;63;64;65;66;67;76;77;78;79;68;69" ;FB*3.5*122 Line Item Provider information ;FB*3.5*133 Provider Information
"RTN","FBAACO2",24,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAACO2",25,0)
 S DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI,DA=FBAACPI
"RTN","FBAACO2",26,0)
 D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI,1)
"RTN","FBAACO2",27,0)
 D
"RTN","FBAACO2",28,0)
 . N ICDVDT S ICDVDT=$G(FBAADT) D ^DIE
"RTN","FBAACO2",29,0)
 I '$D(DTOUT),$G(FBTST) D
"RTN","FBAACO2",30,0)
 . D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO2",31,0)
 . D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO2",32,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)
"RTN","FBAACO2",33,0)
 I $D(DTOUT) D KILL Q
"RTN","FBAACO2",34,0)
 I '$G(FBTST),$G(DA) S DIR(0)="YA",DIR("A")="Entering an '^' will delete "_$S($G(FBDEN):"denial",1:"payment")_".  Are you sure you want to delete? ",DIR("B")="No" D ^DIR K DIR G FILE:'$D(DIRUT)&('Y) D KILL Q
"RTN","FBAACO2",35,0)
 K FBTST,FBDEN,DIE,DR,DA,FBX
"RTN","FBAACO2",36,0)
 I $D(FBDL) S FBAAOUT=1 Q
"RTN","FBAACO2",37,0)
 Q
"RTN","FBAACO2",38,0)
 ;
"RTN","FBAACO2",39,0)
FBDXCHK(FBAADT) ;DEM;139 Call to ASF if ICD-10.
"RTN","FBAACO2",40,0)
 ;
"RTN","FBAACO2",41,0)
 ; This call checks if the payment diagnosis date to
"RTN","FBAACO2",42,0)
 ; determine if diagnosis code is ICD-9 or ICD-10.
"RTN","FBAACO2",43,0)
 ; If ICD-9, then call ICD-9 code enhanced for inactive code checks.
"RTN","FBAACO2",44,0)
 ; Else, call Advanced Search Functionality (ASF).
"RTN","FBAACO2",45,0)
 ; If user enters "^" to exit, then quit and send calling
"RTN","FBAACO2",46,0)
 ; routine 999 for exit.
"RTN","FBAACO2",47,0)
 ;
"RTN","FBAACO2",48,0)
 ; If no ICD-10 data found, then send calling routine -1 
"RTN","FBAACO2",49,0)
 ; to indicate no data found.
"RTN","FBAACO2",50,0)
 ; If data found, then stuff diagnosis into ICD DIAGNOSIS
"RTN","FBAACO2",51,0)
 ; field, and quit and send the calling routine 10 for ICD-10 code.
"RTN","FBAACO2",52,0)
 ;
"RTN","FBAACO2",53,0)
 ; Input:
"RTN","FBAACO2",54,0)
 ; FBAADT = Date of Interest for FB payments.
"RTN","FBAACO2",55,0)
 ;
"RTN","FBAACO2",56,0)
 ; Output:
"RTN","FBAACO2",57,0)
 ; FB9 = ICD-9 diagnosis
"RTN","FBAACO2",58,0)
 ; FB99 = User entered "^" to exit payment edit.
"RTN","FBAACO2",59,0)
 ; -1 = No ICD-10 data found
"RTN","FBAACO2",60,0)
 ; FB10 = ICD-10 diagnosis 
"RTN","FBAACO2",61,0)
 ;
"RTN","FBAACO2",62,0)
 N ICDSYS,IMPDATE,XX1
"RTN","FBAACO2",63,0)
 S ICDSYS=10,IMPDATE=$$IMPDATE^LEXU("10D")
"RTN","FBAACO2",64,0)
 S:FBAADT<IMPDATE ICDSYS=9
"RTN","FBAACO2",65,0)
 S XX1=-1
"RTN","FBAACO2",66,0)
 I ICDSYS=9 S XX1=$$ASKICD9^FBAACO2(FBAADT) Q XX1  ;ICD-9
"RTN","FBAACO2",67,0)
 S XX1=$$ASKICD10^FBAACO2(FBAADT) Q XX1  ;ICD-10 IEN CODE
"RTN","FBAACO2",68,0)
 ;
"RTN","FBAACO2",69,0)
 ; retrieves existing value in db if exists and prompts user for ICD-9 primary diagnosis 
"RTN","FBAACO2",70,0)
ASKICD9(INDT,FBFREQ) ;FB*3.5*139-JAS-ICD10 REMEDIATION
"RTN","FBAACO2",71,0)
 N DPRMPT,FBDX
"RTN","FBAACO2",72,0)
 S EDATE=INDT  ; edate is the date of interest for ICD10 diagnosis code lookup
"RTN","FBAACO2",73,0)
 I $G(FBFREQ)="" S FBFREQ="N"  ; force field to be required flag
"RTN","FBAACO2",74,0)
 N FBDXIEN
"RTN","FBAACO2",75,0)
 S DPRMPT="PRIMARY DIAGNOSIS"
"RTN","FBAACO2",76,0)
 S FBDXIEN=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,0)),U,23) ; retrieve existing DX ien 
"RTN","FBAACO2",77,0)
 ;S:FBDXIEN>0 DPRMPT=DPRMPT_": "_$$ICD9^FBCSV1(FBDXIEN,EDATE)_"// "  ;obtain current diagnosis and set as default
"RTN","FBAACO2",78,0)
 S FBDX=-1 S FBDX=$$ENICD9^FBICD9(EDATE,DPRMPT,"Y","","Y",FBDXIEN)
"RTN","FBAACO2",79,0)
 I FBDXIEN>0,FBDX=-1 S FBDX=FBDXIEN W $$ICD9^FBCSV1(FBDXIEN,EDATE) ; return default value if spaces entered
"RTN","FBAACO2",80,0)
 K EDATE,INDT
"RTN","FBAACO2",81,0)
 S FBDX=+FBDX
"RTN","FBAACO2",82,0)
 Q FBDX
"RTN","FBAACO2",83,0)
 ;
"RTN","FBAACO2",84,0)
 ; retrieves existing value in db if exists and prompts user for ICD-10 primary diagnosis 
"RTN","FBAACO2",85,0)
ASKICD10(INDT,FBFREQ) ;FB*3.5*139-JLG-ICD10 REMEDIATION
"RTN","FBAACO2",86,0)
 N DP,DPRMPT,FBDCDA,FBDX
"RTN","FBAACO2",87,0)
 S EDATE=INDT  ; edate is the date of interest for ICD10 diagnosis code lookup
"RTN","FBAACO2",88,0)
 I $G(FBFREQ)="" S FBFREQ="N"  ; force field to be required flag
"RTN","FBAACO2",89,0)
 S DP=162.03   ; file number used to check if diagnosis field is required
"RTN","FBAACO2",90,0)
 S FBDCDA=DA   ; DA equals FBAACPI
"RTN","FBAACO2",91,0)
 N FBDXIEN
"RTN","FBAACO2",92,0)
 S DPRMPT="PRIMARY DIAGNOSIS"
"RTN","FBAACO2",93,0)
 S FBDXIEN=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,0)),U,23) ; retrieve existing DX ien 
"RTN","FBAACO2",94,0)
 S:FBDXIEN>0 DPRMPT=DPRMPT_": "_$$ICD9^FBCSV1(FBDXIEN,EDATE)_"// "  ;obtain current diagnosis and set as default
"RTN","FBAACO2",95,0)
 S FBDX=-1 S FBDX=$$ASKICD10^FBASF(DPRMPT,"","","",FBFREQ) ; returns -1 or ien of icd10 diagnosis code
"RTN","FBAACO2",96,0)
 I FBDXIEN>0,FBDX=-1 S FBDX=FBDXIEN W $$ICD9^FBCSV1(FBDXIEN,EDATE) ; return default value if spaces entered
"RTN","FBAACO2",97,0)
 K EDATE,INDT
"RTN","FBAACO2",98,0)
 Q FBDX
"RTN","FBAACO2",99,0)
 ;
"RTN","FBAACO2",100,0)
KILL S DIK=DIE D ^DIK K DIE,DIK I '$G(FBCNP) D Q^FBAACO S FBAAOUT=1
"RTN","FBAACO2",101,0)
 W !,"Deleted" Q
"RTN","FBAACP")
1^18^^B55546360
"RTN","FBAACP1")
1^41^^B6956346
"RTN","FBAAEPI")
0^13^B27520800^B20120074
"RTN","FBAAEPI",1,0)
FBAAEPI ;AISC/GRR - EDIT PREVIOUSLY ENTERED PHARMACY INVOICE ;7/16/2003
"RTN","FBAAEPI",2,0)
 ;;3.5;FEE BASIS;**38,61,124,132,123**;JAN 30, 1995;Build 51
"RTN","FBAAEPI",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAEPI",4,0)
RD W ! S DIC="^FBAA(162.1,",DIC(0)="AEQM",DIC("A")="Select Invoice #: ",DIC("S")="I $P(^(0),U,5)'=4!($P(^(0),U,5)=4&$D(^XUSEC(""FBAASUPERVISOR"",DUZ)))" D ^DIC K DIC("S") G END:X=""!(X="^"),RD:Y<0
"RTN","FBAAEPI",5,0)
 S (DA,FBDA)=+Y,DIE=DIC
"RTN","FBAAEPI",6,0)
 ; save FPPS data prior to edit session
"RTN","FBAAEPI",7,0)
 S (FBFPPSC,FBFPPSC(0))=$P($G(^FBAA(162.1,FBDA,0)),U,13)
"RTN","FBAAEPI",8,0)
 D LASTRXDT ;Look up last RX FILL DATE in selected invoice, for use in validating Invoice Received Date if it is edited.
"RTN","FBAAEPI",9,0)
 S DR="@1;1;I $$BADDATE^FBAAEPI(LASTRXDT,X) S Y=""@1"";Q;12;S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@10"";13///^S X=FBX;S FBFPPSC=X;S Y=""@15"";@10;13///@;S FBFPPSC="""";@15;3;5"
"RTN","FBAAEPI",10,0)
 D ^DIE K DIC
"RTN","FBAAEPI",11,0)
 ; if FPPS CLAIM ID changed, then update Rx's
"RTN","FBAAEPI",12,0)
 I FBFPPSC'=FBFPPSC(0) D CKINVEDI^FBAAEPI1(FBFPPSC(0),FBFPPSC,FBDA)
"RTN","FBAAEPI",13,0)
 S DIC="^FBAA(162.1,DA,""RX"",",DIC(0)="AEQM",DIC("W")="W ?30,""DATE RX FILLED: "",$E($P(^(0),U,3),4,5)_""/""_$E($P(^(0),U,3),6,7)_""/""_$E($P(^(0),U,3),2,3)" D ^DIC G END:X=""!(X="^"),RD:Y<0 W !
"RTN","FBAAEPI",14,0)
 S (FBJ,FBK)=0
"RTN","FBAAEPI",15,0)
 ;check status of batch rx is in.
"RTN","FBAAEPI",16,0)
 S DA=+Y,DA(1)=FBDA S FBSTAT=$P($G(^FBAA(161.7,+$P($G(^FBAA(162.1,+FBDA,"RX",+DA,0)),U,17),"ST")),U) I FBSTAT]"" D
"RTN","FBAAEPI",17,0)
 .I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D
"RTN","FBAAEPI",18,0)
 .. I $S(FBSTAT="O":0,FBSTAT="C":0,1:1) D
"RTN","FBAAEPI",19,0)
 ... W !,*7,"You cannot edit a payment once released by a supervisor.",! S FBOUT=1 Q
"RTN","FBAAEPI",20,0)
 .I $S(FBSTAT="T":1,FBSTAT="F":1,FBSTAT="V":1,1:0) D
"RTN","FBAAEPI",21,0)
 .. W !,*7,"You cannot edit an invoice when the batch has been sent to Austin",! S FBOUT=1
"RTN","FBAAEPI",22,0)
 I $G(FBOUT) D END G FBAAEPI
"RTN","FBAAEPI",23,0)
 ;
"RTN","FBAAEPI",24,0)
 ; FB*3.5*123 - Edit pharmacy IPAC data for Federal Vendors
"RTN","FBAAEPI",25,0)
 I '$$IPACEDIT^FBAAPET1(162.1,.DA) D END G FBAAEPI
"RTN","FBAAEPI",26,0)
 ;
"RTN","FBAAEPI",27,0)
 S DIE="^FBAA(162.1,FBDA,""RX"","
"RTN","FBAAEPI",28,0)
 ; get current value of FPPS LINE ITEM to use as default
"RTN","FBAAEPI",29,0)
 S FBFPPSL=$P($G(^FBAA(162.1,FBDA,"RX",DA,3)),U)
"RTN","FBAAEPI",30,0)
 ; load current adjustment data
"RTN","FBAAEPI",31,0)
 D LOADADJ^FBRXFA(DA_","_FBDA_",",.FBADJ)
"RTN","FBAAEPI",32,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAAEPI",33,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAAEPI",34,0)
 ; load current remittance remark data
"RTN","FBAAEPI",35,0)
 D LOADRR^FBRXFR(DA_","_FBDA_",",.FBRRMK)
"RTN","FBAAEPI",36,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAAEPI",37,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAAEPI",38,0)
 S DR=".01;S:FBFPPSC="""" Y=1;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;36///^S X=FBX;S FBFPPSL=X;1;1.5;1.6;3;S FBJ=X;I $P(^FBAA(162.1,DA(1),""RX"",DA,0),U,9)=1 S Y="""";I 1;5"
"RTN","FBAAEPI",39,0)
 S DR(1,162.11,1)="S FBA=$P($G(^FBAA(162.1,DA(1),""RX"",DA,2)),U,6);S FB1725=$S(FBA[""FB583"":+$P($G(^FB583(+FBA,0)),U,28),1:0);W:FB1725 !?2,""**Payment is for emergency treatment under 38 U.S.C. 1725."""
"RTN","FBAAEPI",40,0)
 S DR(1,162.11,2)="@12;S FBHAP=$P(^FBAA(162.1,DA(1),""RX"",DA,0),U,16);6.5;S FBK=X;S:FBK]"""" Y=""@20"";K FBADJ,FBRRMK;S Y=8"
"RTN","FBAAEPI",41,0)
 S DR(1,162.11,3)="@20;I FBK>FBJ S $P(^FBAA(162.1,DA(1),""RX"",DA,0),U,16)=FBHAP W !,*7,""Amount Paid cannot be greater than the Amount Claimed"" S Y=""@12"""
"RTN","FBAAEPI",42,0)
 ;S DR(1,162.11,4)="S:FBJ=FBK Y=""@5"";6////^S X=FBJ-FBK;Q;6R;7R;S:X'=4 Y=""@6"";20;S Y=""@6"";@5;6///@;7///@;20///@;@6;8"
"RTN","FBAAEPI",43,0)
 S DR(1,162.11,4)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(FBJ-FBK,.FBADJ,2,,.FBADJD,1);K FBADJD"
"RTN","FBAAEPI",44,0)
 S DR(1,162.11,5)="K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD);K FBRRMKD;S:FBX=-1 Y=0;8"
"RTN","FBAAEPI",45,0)
 D ^DIE
"RTN","FBAAEPI",46,0)
 ; if adjustment data changed then file
"RTN","FBAAEPI",47,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBRXFA(DA_","_FBDA_",",.FBADJ)
"RTN","FBAAEPI",48,0)
 ; if remit remark data changed then file
"RTN","FBAAEPI",49,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBRXFR(DA_","_FBDA_",",.FBRRMK)
"RTN","FBAAEPI",50,0)
 ;
"RTN","FBAAEPI",51,0)
LASTRXDT ;Look up last RX FILL DATE in selected invoice, for use in validating Invoice Received Date if it is edited.
"RTN","FBAAEPI",52,0)
 ;DA contains the selected INV#
"RTN","FBAAEPI",53,0)
 N I
"RTN","FBAAEPI",54,0)
 S LASTRXDT=0
"RTN","FBAAEPI",55,0)
 F I=1:1 Q:'$D(^FBAA(162.1,DA,"RX",I))  D
"RTN","FBAAEPI",56,0)
 .N RXDT S RXDT=$P(^FBAA(162.1,DA,"RX",I,0),"^",3)
"RTN","FBAAEPI",57,0)
 .I RXDT>LASTRXDT S LASTRXDT=RXDT,RXNUM=$P(^FBAA(162.1,DA,"RX",I,0),"^",1)
"RTN","FBAAEPI",58,0)
 Q
"RTN","FBAAEPI",59,0)
 ;
"RTN","FBAAEPI",60,0)
BADDATE(LASTRXDT,INVRCVDT) ;Reject entry if InvRcvDt is Prior to the last Rx Fill Date on the Invoice
"RTN","FBAAEPI",61,0)
 I INVRCVDT<LASTRXDT D  Q 1 ;Reject entry
"RTN","FBAAEPI",62,0)
 .N SHOWRXDT  S SHOWRXDT=$E(LASTRXDT,4,5)_"/"_$E(LASTRXDT,6,7)_"/"_$E(LASTRXDT,2,3) ;Convert RXDT into display format for error message
"RTN","FBAAEPI",63,0)
 .W *7,!!?5,"*** Invoice Received Date cannot be prior to the last",!?8," Prescription Filled Date on the Invoice ("_SHOWRXDT_" for RX# "_RXNUM_") !!!"
"RTN","FBAAEPI",64,0)
 Q 0 ;Accept entry
"RTN","FBAAEPI",65,0)
 ;
"RTN","FBAAEPI",66,0)
END K D,DA,DIC,DIE,DR,FBJ,FBK,FBDA,FBOUT,FBSTAT,FBHAP,X,Y,FBA,FB1725
"RTN","FBAAEPI",67,0)
 K FBADJ,FBADJD,FBADJL,FBFPPSC,FBFPPSL,FBRRMK,FBRRMKD,FBRRMKL,LASTRXDT,RXNUM
"RTN","FBAAEPI",68,0)
 Q
"RTN","FBAAEPI",69,0)
 ;
"RTN","FBAAEPI",70,0)
GETIPAC(FBDA,FBVEN,FBIA,FBDODINV) ; Get vendor/IPAC data for Pharmacy (FB*3.5*123)
"RTN","FBAAEPI",71,0)
 ; All parameters required and assumed to exist
"RTN","FBAAEPI",72,0)
 ; Called by $$IPACEDIT^FBAAPET1
"RTN","FBAAEPI",73,0)
 S FBVEN=+$P($G(^FBAA(162.1,FBDA(1),0)),U,4)               ; vendor ien
"RTN","FBAAEPI",74,0)
 S FBIA=+$P($G(^FBAA(162.1,FBDA(1),0)),U,23)               ; IPAC agreement ien
"RTN","FBAAEPI",75,0)
 S FBDODINV=$P($G(^FBAA(162.1,FBDA(1),"RX",FBDA,6)),U,1)   ; DoD invoice#
"RTN","FBAAEPI",76,0)
 Q
"RTN","FBAAEPI",77,0)
 ;
"RTN","FBAAEPI",78,0)
DELIPAC(FBDA) ; Delete all IPAC data on file for Pharmacy (FB*3.5*123)
"RTN","FBAAEPI",79,0)
 ; Called by $$IPACEDIT^FBAAPET1
"RTN","FBAAEPI",80,0)
 N FBIENS,FBIAFDA,DIE,DA,DR,DIC
"RTN","FBAAEPI",81,0)
 S FBIENS=FBDA_","_FBDA(1)_","
"RTN","FBAAEPI",82,0)
 S FBIAFDA(162.11,FBIENS,39)=""       ; remove DoD invoice# from subfile 162.11
"RTN","FBAAEPI",83,0)
 D FILE^DIE("","FBIAFDA")
"RTN","FBAAEPI",84,0)
 S DIE=162.1,DA=FBDA(1),DR="14///@" D ^DIE  ; remove IPAC ptr from file top level 162.1
"RTN","FBAAEPI",85,0)
 Q
"RTN","FBAAEPI",86,0)
 ;
"RTN","FBAAEPI",87,0)
SAVEIPAC(FBDA,FBIA,FBDODINV,WHICH) ; Store IPAC data into the database for Pharmacy (FB*3.5*123)
"RTN","FBAAEPI",88,0)
 ; Called by $$IPACEDIT^FBAAPET1
"RTN","FBAAEPI",89,0)
 N FBIENS,FBIAFDA,DIE,DA,DR,DIC
"RTN","FBAAEPI",90,0)
 S:'$D(WHICH) WHICH=""
"RTN","FBAAEPI",91,0)
 S FBIENS=FBDA_","_FBDA(1)_","
"RTN","FBAAEPI",92,0)
 I WHICH'=1 D
"RTN","FBAAEPI",93,0)
 . S FBIAFDA(162.11,FBIENS,39)=FBDODINV       ; store DoD invoice# in subfile 162.11
"RTN","FBAAEPI",94,0)
 . D FILE^DIE("","FBIAFDA")
"RTN","FBAAEPI",95,0)
 I WHICH'=2 D
"RTN","FBAAEPI",96,0)
 . S DIE=162.1,DA=FBDA(1),DR="14////^S X=FBIA" D ^DIE    ; store IPAC pointer ien in file top level 162.1
"RTN","FBAAEPI",97,0)
 Q
"RTN","FBAAEPI",98,0)
 ;
"RTN","FBAAIAD")
0^2^B14523385^n/a
"RTN","FBAAIAD",1,0)
FBAAIAD ;ALB/FA - DELETE AN IPAC AGREEMENT ;03 Dec 2013  2:10 PM
"RTN","FBAAIAD",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIAD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIAD",4,0)
 ;
"RTN","FBAAIAD",5,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAD",6,0)
 ;                           Entry Points
"RTN","FBAAIAD",7,0)
 ; ISEL     - Delete the specified IPAC Vendor Agreement
"RTN","FBAAIAD",8,0)
 ;            NOTE: (actually called from first line of routine)
"RTN","FBAAIAD",9,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAD",10,0)
 ;                         
"RTN","FBAAIAD",11,0)
ISEL ;EP
"RTN","FBAAIAD",12,0)
 ; Delete the specified IPAC Vendor Agreement
"RTN","FBAAIAD",13,0)
 ; Input:       None
"RTN","FBAAIAD",14,0)
 ; Output:      IPAC Vendor agreement deleted (potentially)
"RTN","FBAAIAD",15,0)
 ; Called From: Menu - FBAA IPAC AGREEMENT Delete an IPAC agreement
"RTN","FBAAIAD",16,0)
 N XX
"RTN","FBAAIAD",17,0)
 F  S XX=$$ISEL1() Q:XX=1
"RTN","FBAAIAD",18,0)
 Q
"RTN","FBAAIAD",19,0)
 ;
"RTN","FBAAIAD",20,0)
ISEL1() ;
"RTN","FBAAIAD",21,0)
 ; Input:       None
"RTN","FBAAIAD",22,0)
 ; Returns:     1 - User timed out or typed '^' to exit, 0 otherwise
"RTN","FBAAIAD",23,0)
 ; Called From: ISEL
"RTN","FBAAIAD",24,0)
 N EOUT,FLINE,STEXT,VAIEN,XX
"RTN","FBAAIAD",25,0)
 S FLINE="The following IPAC Agreements are currently on file:"
"RTN","FBAAIAD",26,0)
 S STEXT="Please select the IPAC agreement to delete"
"RTN","FBAAIAD",27,0)
 S VAIEN=$$SELVA^FBAAIAU(FLINE,STEXT,0,"")      ; Select an IPAC Agreement
"RTN","FBAAIAD",28,0)
 I VAIEN="" Q 1                                 ; User exit
"RTN","FBAAIAD",29,0)
 ;
"RTN","FBAAIAD",30,0)
 ; Check for current invoices for the selected agreement
"RTN","FBAAIAD",31,0)
 I $D(^FBAAC("IPAC",VAIEN))!($D(^FBAA(162.1,"IPAC",VAIEN))!($D(^FBAAI("IPAC",VAIEN)))) D  Q EOUT
"RTN","FBAAIAD",32,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBAAIAD",33,0)
 . W !!,"This IPAC agreement has invoice activity associated with it"
"RTN","FBAAIAD",34,0)
 . W !,"and cannot be deleted.",!
"RTN","FBAAIAD",35,0)
 . S EOUT=0
"RTN","FBAAIAD",36,0)
 . S DIR(0)="E"
"RTN","FBAAIAD",37,0)
 . D ^DIR
"RTN","FBAAIAD",38,0)
 . S:$D(DTOUT)!$D(DUOUT) EOUT=1                 ; User timed out or pressed '^'
"RTN","FBAAIAD",39,0)
 ;
"RTN","FBAAIAD",40,0)
 S XX=$$ASKDISP(VAIEN)                          ; Ask to display the agreement
"RTN","FBAAIAD",41,0)
 I XX=-1 Q 1                                    ; User timeout or '^'
"RTN","FBAAIAD",42,0)
 I XX D                                         ; Display the agreement
"RTN","FBAAIAD",43,0)
 . W !!
"RTN","FBAAIAD",44,0)
 . D VADISP^FBAAIAU(VAIEN,1)
"RTN","FBAAIAD",45,0)
 . W !
"RTN","FBAAIAD",46,0)
 S XX=$$ASKSURE(VAIEN)                          ; Final verification before delete attempt
"RTN","FBAAIAD",47,0)
 I XX=-1 Q 1                                    ; User timeout or '^'
"RTN","FBAAIAD",48,0)
 Q:'XX 0                                        ; User chose not to delete
"RTN","FBAAIAD",49,0)
 Q:'$$LOCKVA^FBAAIAU(VAIEN) 0                   ; Attempt to lock the Vendor Agreement
"RTN","FBAAIAD",50,0)
 D DEL(VAIEN)                                   ; Perform the actual deletion
"RTN","FBAAIAD",51,0)
 D UNLOCKVA^FBAAIAU(VAIEN)                      ; Unlock the deleted agreement
"RTN","FBAAIAD",52,0)
 Q 0
"RTN","FBAAIAD",53,0)
 ;
"RTN","FBAAIAD",54,0)
ASKDISP(VAIEN)  ; Ask the user if they want to see the agreement details
"RTN","FBAAIAD",55,0)
 ; Input:       VAIEN       - IEN of the selected Vendor agreement
"RTN","FBAAIAD",56,0)
 ; Output:      User is prompted to display the agreement
"RTN","FBAAIAD",57,0)
 ; Returns:     1 - User wants to display the agreement
"RTN","FBAAIAD",58,0)
 ;              0 - User doesn't want to display the agreement
"RTN","FBAAIAD",59,0)
 ;             -1 - User timed out or typed '^'
"RTN","FBAAIAD",60,0)
 ; Called From: ISEL
"RTN","FBAAIAD",61,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBAAIAD",62,0)
 S DIR(0)="Y",DIR("A")="Display this IPAC Vendor Agreement",DIR("B")="No"
"RTN","FBAAIAD",63,0)
 D ^DIR
"RTN","FBAAIAD",64,0)
 I $D(DTOUT)!$D(DUOUT) Q -1                     ; User timed out or pressed '^'
"RTN","FBAAIAD",65,0)
 Q:Y'>0 0
"RTN","FBAAIAD",66,0)
 Q Y
"RTN","FBAAIAD",67,0)
 ;
"RTN","FBAAIAD",68,0)
ASKSURE(VAIEN)  ; Make sure the user selected the correct Vendor agreement
"RTN","FBAAIAD",69,0)
 ; Input:       VAIEN       - IEN of the selected vendor agreement
"RTN","FBAAIAD",70,0)
 ; Output:      User is prompted again
"RTN","FBAAIAD",71,0)
 ; Returns:     1 - User verifies deletion
"RTN","FBAAIAD",72,0)
 ;              0 - User chose not to delete
"RTN","FBAAIAD",73,0)
 ;             -1 - User timed out or typed '^'
"RTN","FBAAIAD",74,0)
 ; Called From: ISEL
"RTN","FBAAIAD",75,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBAAIAD",76,0)
 S DIR(0)="Y",DIR("A")="Delete this IPAC Vendor Agreement",DIR("B")="No"
"RTN","FBAAIAD",77,0)
 D ^DIR
"RTN","FBAAIAD",78,0)
 I $D(DTOUT)!$D(DUOUT) Q -1                     ; User timed out or pressed '^'
"RTN","FBAAIAD",79,0)
 Q:Y'>0 0
"RTN","FBAAIAD",80,0)
 Q Y
"RTN","FBAAIAD",81,0)
 ;
"RTN","FBAAIAD",82,0)
DEL(VAIEN) ; Perform the actual Vendor agreement deletion
"RTN","FBAAIAD",83,0)
 ; Input:       VAIEN       - IEN of the selected vendor agreement
"RTN","FBAAIAD",84,0)
 ; Output:      Selected Vendor Agreement and its Master Record Adjustment are deleted
"RTN","FBAAIAD",85,0)
 ; Called From: ISEL
"RTN","FBAAIAD",86,0)
 N DA,DIK,VAID,VASTAT
"RTN","FBAAIAD",87,0)
 S DA=VAIEN,DIK="^FBAA(161.95,"
"RTN","FBAAIAD",88,0)
 S VASTAT=$P(^FBAA(161.95,VAIEN,0),U,4)         ; Current Agreement Status
"RTN","FBAAIAD",89,0)
 ;
"RTN","FBAAIAD",90,0)
 S VAID=$P(^FBAA(161.95,VAIEN,0),U,1)           ; Vendor Agreement ID
"RTN","FBAAIAD",91,0)
 D ^DIK                                         ; Delete the Vendor Agreement
"RTN","FBAAIAD",92,0)
 Q:(VASTAT="N")!(VASTAT="")                     ; No MRA to delete
"RTN","FBAAIAD",93,0)
 D D^FBAAIAQ(VAID)                              ; Create a Delete MRA record
"RTN","FBAAIAD",94,0)
 Q
"RTN","FBAAIAE")
0^3^B52924225^n/a
"RTN","FBAAIAE",1,0)
FBAAIAE ;ALB/FA - ADD/EDIT AN IPAC VENDOR AGREEMENT ;04 Dec 2013 07:27 AM
"RTN","FBAAIAE",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIAE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIAE",4,0)
 ;
"RTN","FBAAIAE",5,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAE",6,0)
 ;                           Entry Points
"RTN","FBAAIAE",7,0)
 ; ADDEDIT  - Add/Edit an IPAC Vendor Agreement
"RTN","FBAAIAE",8,0)
 ;            NOTE: (actually called from first line of routine)
"RTN","FBAAIAE",9,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAE",10,0)
 ;
"RTN","FBAAIAE",11,0)
ADDEDIT ;EP
"RTN","FBAAIAE",12,0)
 ; Add/Edit an IPAC Vendor Agreement
"RTN","FBAAIAE",13,0)
 ; Called From: Menu - FBAA IPAC AGREEMENT Add/Edit an IPAC agreement
"RTN","FBAAIAE",14,0)
 N XX
"RTN","FBAAIAE",15,0)
 F  S XX=$$ADDEDIT1() Q:XX=1
"RTN","FBAAIAE",16,0)
 Q
"RTN","FBAAIAE",17,0)
 ;
"RTN","FBAAIAE",18,0)
ADDEDIT1()  ; Used to loop
"RTN","FBAAIAE",19,0)
 ; Input:       None
"RTN","FBAAIAE",20,0)
 ; Returns:     1 - User timed out or typed '^' to exit, 0 otherwise
"RTN","FBAAIAE",21,0)
 ; Called From: ADDEDT
"RTN","FBAAIAE",22,0)
 N IX,FLINE,MODE,STEXT,VAEDITED,VAIEN,VASTAT,VASTATO
"RTN","FBAAIAE",23,0)
 S FLINE="The following IPAC Agreements are currently on file:"
"RTN","FBAAIAE",24,0)
 S STEXT="Please select the IPAC agreement to edit or type NEW to create a new entry"
"RTN","FBAAIAE",25,0)
 S MODE=$$SELVA^FBAAIAU(FLINE,STEXT,1,"")       ; Select an IPAC Agreement
"RTN","FBAAIAE",26,0)
 I MODE="" Q 1                                  ; User exit
"RTN","FBAAIAE",27,0)
 I MODE=0 D ADDVA Q 0                           ; Add a new IPAC Agreement
"RTN","FBAAIAE",28,0)
 S VAIEN=MODE,MODE=1                            ; Edit IPAC agreement
"RTN","FBAAIAE",29,0)
 ;
"RTN","FBAAIAE",30,0)
 ; Attempt to lock the IPAC Vendor Agreement file
"RTN","FBAAIAE",31,0)
 Q:'$$LOCKVA^FBAAIAU(VAIEN) 0                   ; Attempt to lock the Vendor Agreement
"RTN","FBAAIAE",32,0)
 ;
"RTN","FBAAIAE",33,0)
 ; Warn the user if the selected agreement is incomplete
"RTN","FBAAIAE",34,0)
 S VASTATO=$P(^FBAA(161.95,VAIEN,0),U,4)        ; Current Agreement status
"RTN","FBAAIAE",35,0)
 I VASTATO="N" D                                ; Incomplete Vendor Agreement warning
"RTN","FBAAIAE",36,0)
 . W !!,"This IPAC Vendor Agreement is not complete. Complete it using this option"
"RTN","FBAAIAE",37,0)
 . W !,"or use the IPAC Vendor Agreement delete option to delete it."
"RTN","FBAAIAE",38,0)
 ;
"RTN","FBAAIAE",39,0)
 ; Store current Vendor agreement field values
"RTN","FBAAIAE",40,0)
 K ^TMP($J,"FBAAIAC")
"RTN","FBAAIAE",41,0)
 F IX=0:1:6 S ^TMP($J,"FBAAIAC",IX)=$G(^FBAA(161.95,VAIEN,IX))
"RTN","FBAAIAE",42,0)
 D EDITVA1(VAIEN)                               ; Edit the IPAC Agreement
"RTN","FBAAIAE",43,0)
 S VASTAT=$P(^FBAA(161.95,VAIEN,0),U,4)         ; Current Agreement status
"RTN","FBAAIAE",44,0)
 ;
"RTN","FBAAIAE",45,0)
 ; IPAC Agreement is still incomplete - unlock it and quit
"RTN","FBAAIAE",46,0)
 I VASTAT="N" D  Q 0
"RTN","FBAAIAE",47,0)
 . D UNLOCKVA^FBAAIAU(VAIEN)                    ; Unlock the Vendor Agreement
"RTN","FBAAIAE",48,0)
 . K ^TMP($J,"FBAAIAC")
"RTN","FBAAIAE",49,0)
 ;
"RTN","FBAAIAE",50,0)
 ; Check if the status went from N to A - First time agreement is complete
"RTN","FBAAIAE",51,0)
 I VASTATO="N",VASTAT="A" D  Q 0                ; Send ADD MRA
"RTN","FBAAIAE",52,0)
 . D A^FBAAIAQ(VAIEN)                           ; Create an ADD MRA record
"RTN","FBAAIAE",53,0)
 . D UNLOCKVA^FBAAIAU(VAIEN)                    ; Unlock the Vendor Agreement
"RTN","FBAAIAE",54,0)
 . K ^TMP($J,"FBAAIAC")
"RTN","FBAAIAE",55,0)
 ;
"RTN","FBAAIAE",56,0)
 ; Check to see if any of the field values were changed 
"RTN","FBAAIAE",57,0)
 S VAEDITED=0
"RTN","FBAAIAE",58,0)
 F IX=0:1:6 D  Q:VAEDITED
"RTN","FBAAIAE",59,0)
 . I $G(^FBAA(161.95,VAIEN,IX))'=$G(^TMP($J,"FBAAIAC",IX)) S VAEDITED=1
"RTN","FBAAIAE",60,0)
 ;
"RTN","FBAAIAE",61,0)
 ; Agreement was edited, create a MRA record for the changes
"RTN","FBAAIAE",62,0)
 D:VAEDITED=1 C^FBAAIAQ(VAIEN)                  ; Send Change MRA
"RTN","FBAAIAE",63,0)
 D UNLOCKVA^FBAAIAU(VAIEN)                      ; Unlock the Vendor Agreement
"RTN","FBAAIAE",64,0)
 K ^TMP($J,"FBAAIAC")
"RTN","FBAAIAE",65,0)
 Q 0
"RTN","FBAAIAE",66,0)
 ;
"RTN","FBAAIAE",67,0)
ADDVA ;
"RTN","FBAAIAE",68,0)
 ; Add a new IPAC Vendor Agreement
"RTN","FBAAIAE",69,0)
 ; Called From: ADDEDIT
"RTN","FBAAIAE",70,0)
 N FYR,VAIEN,VASTAT,VENIEN,XX
"RTN","FBAAIAE",71,0)
 S VENIEN=$$VENDSEL()                           ; Select a Vendor
"RTN","FBAAIAE",72,0)
 Q:VENIEN=""                                    ; No Vendor selected
"RTN","FBAAIAE",73,0)
 ;
"RTN","FBAAIAE",74,0)
 ; Display any active or new agreements for the selected vendor
"RTN","FBAAIAE",75,0)
 Q:'$$DISPVA(VENIEN)
"RTN","FBAAIAE",76,0)
 S FYR=$$FYR()                                  ; Ask fiscal year via DIR
"RTN","FBAAIAE",77,0)
 ;
"RTN","FBAAIAE",78,0)
 ; Add an IPAC Vendor Agreement for the selected vendor
"RTN","FBAAIAE",79,0)
 Q:'$$ADDVA1(VENIEN,FYR,.VAIEN)
"RTN","FBAAIAE",80,0)
 S VASTAT=$P(^FBAA(161.95,VAIEN,0),U,4)         ; Current Agreement status
"RTN","FBAAIAE",81,0)
 D:VASTAT'="N" A^FBAAIAQ(VAIEN)                 ; Create an ADD MRA record
"RTN","FBAAIAE",82,0)
 Q
"RTN","FBAAIAE",83,0)
 ;
"RTN","FBAAIAE",84,0)
VENDSEL()   ; Selects a Vendor to add an agreement for
"RTN","FBAAIAE",85,0)
 ; Input:       None
"RTN","FBAAIAE",86,0)
 ; Output:      None
"RTN","FBAAIAE",87,0)
 ; Returns:     VENIEN          - IEN of the selected Vendor or "" if not selected
"RTN","FBAAIAE",88,0)
 ; Called From: ADDVA
"RTN","FBAAIAE",89,0)
 N DA,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,QUIT,VENIEN,X,Y
"RTN","FBAAIAE",90,0)
 S DIC="^FBAAV(",DIC(0)="AEQM"
"RTN","FBAAIAE",91,0)
 S DIC("A")="Select a Vendor: "
"RTN","FBAAIAE",92,0)
 S DIC("S")="I $P($G(^(""AMS"")),""^"",4)=""F"""    ; Only Show Federal Vendors
"RTN","FBAAIAE",93,0)
 D ^DIC
"RTN","FBAAIAE",94,0)
 I Y'>0 Q ""                                        ; No selected Vendor
"RTN","FBAAIAE",95,0)
 S VENIEN=+Y,QUIT=0
"RTN","FBAAIAE",96,0)
 I $P($G(^FBAAV(VENIEN,"ADEL")),U,1)="Y" D          ; Deleted Vendor
"RTN","FBAAIAE",97,0)
 . S DIR(0)="Y"
"RTN","FBAAIAE",98,0)
 . W !!,"This vendor has been deleted from the Austin vendor database"
"RTN","FBAAIAE",99,0)
 . S DIR("A")="Do you wish to continue",DIR("B")="No"
"RTN","FBAAIAE",100,0)
 . D ^DIR
"RTN","FBAAIAE",101,0)
 . S:Y'>0 QUIT=1
"RTN","FBAAIAE",102,0)
 Q:QUIT ""
"RTN","FBAAIAE",103,0)
 Q VENIEN
"RTN","FBAAIAE",104,0)
 ;
"RTN","FBAAIAE",105,0)
FYR() ; Prompt the user for the Fiscal year of the agreement
"RTN","FBAAIAE",106,0)
 ; Input:       None
"RTN","FBAAIAE",107,0)
 ; Output:      None
"RTN","FBAAIAE",108,0)
 ; Returns:     FYR     - IEN of the selected Vendor or "" if not selected
"RTN","FBAAIAE",109,0)
 ; Called From: ADDVA
"RTN","FBAAIAE",110,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y,FBCURR,FBMON,FBYR
"RTN","FBAAIAE",111,0)
 S DIR(0)="161.95,2"
"RTN","FBAAIAE",112,0)
 S FBCURR=$$FMTE^XLFDT(DT,"7D")    ; current date
"RTN","FBAAIAE",113,0)
 S FBMON=$P(FBCURR,"/",2)          ; current month
"RTN","FBAAIAE",114,0)
 S FBYR=$P(FBCURR,"/",1)           ; current year
"RTN","FBAAIAE",115,0)
 I FBMON'<10 S FBYR=FBYR+1         ; for Oct-Dec, Fiscal year is Calendar year+1
"RTN","FBAAIAE",116,0)
 S DIR("B")=FBYR
"RTN","FBAAIAE",117,0)
 D ^DIR
"RTN","FBAAIAE",118,0)
 Q Y
"RTN","FBAAIAE",119,0)
 ;
"RTN","FBAAIAE",120,0)
DISPVA(VENIEN) ; Display any active or new agreements on file for this vendor
"RTN","FBAAIAE",121,0)
 ; Input:       VENIEN      - Selected Vendor IEN
"RTN","FBAAIAE",122,0)
 ; Output:      New/Active agreements for vendor are displayed
"RTN","FBAAIAE",123,0)
 ; Returns:     Selected Vendor or "" if no vendor was de-selected
"RTN","FBAAIAE",124,0)
 ; Called From: ADDVA
"RTN","FBAAIAE",125,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FLINE,VAIEN,VASTAT,X,Y
"RTN","FBAAIAE",126,0)
 ;
"RTN","FBAAIAE",127,0)
 ; Selected Vendor doesn't have any new or active agreements
"RTN","FBAAIAE",128,0)
 I '$D(^FBAA(161.95,"AVA",VENIEN,"A")),'$D(^FBAA(161.95,"AVA",VENIEN,"N")) Q VENIEN
"RTN","FBAAIAE",129,0)
 S FLINE="This vendor has the following active IPAC agreement(s) on file:"
"RTN","FBAAIAE",130,0)
 D SELVA^FBAAIAU(FLINE,"",0,VENIEN)
"RTN","FBAAIAE",131,0)
 W !
"RTN","FBAAIAE",132,0)
 S DIR(0)="Y",DIR("A")="Do you wish to continue with this vendor",DIR("B")="No"
"RTN","FBAAIAE",133,0)
 D ^DIR
"RTN","FBAAIAE",134,0)
 Q:Y'>0 ""                                      ; De-select the vendor
"RTN","FBAAIAE",135,0)
 Q VENIEN
"RTN","FBAAIAE",136,0)
 ;
"RTN","FBAAIAE",137,0)
ADDVA1(VENIEN,FYR,VAIEN) ; Add a new IPAC Vendor agreement for the selected vendor
"RTN","FBAAIAE",138,0)
 ; Input:       VENIEN      - Selected Vendor IEN
"RTN","FBAAIAE",139,0)
 ;              FYR         - Fiscal Year of the new IPAC agreement
"RTN","FBAAIAE",140,0)
 ; Output:      VAIEN       - IEN of the added/edited Vendor agreement
"RTN","FBAAIAE",141,0)
 ;              Vendor agreement is filed for the selected vendor
"RTN","FBAAIAE",142,0)
 ; Returns:     0 if New entry couldn't be added 1 otherwise
"RTN","FBAAIAE",143,0)
 ; Called From: ADDVA
"RTN","FBAAIAE",144,0)
 N DA,DIC,DIE,DO,DR,DTOUT,VAID,X,Y
"RTN","FBAAIAE",145,0)
 Q:'$$LOCKVA 0                                  ; Lock IPAC Agreement file
"RTN","FBAAIAE",146,0)
 S VAID=$$NEXTVAID()                            ; Last IPAC ID number
"RTN","FBAAIAE",147,0)
 D UNLOCKVA                                     ; Unlock Vendor Agreement file            
"RTN","FBAAIAE",148,0)
 ;
"RTN","FBAAIAE",149,0)
 ; Add a new entry to the IPAC Vendor Agreement file with Identity fields only
"RTN","FBAAIAE",150,0)
 ; NOTE: if not all the identity fields are added, no agreement is filed
"RTN","FBAAIAE",151,0)
 S X=VAID,DIC=161.95
"RTN","FBAAIAE",152,0)
 S DIC(0)="Z",DIC("DR")="1////^S X=VENIEN;2///^S X=FYR;3////N"
"RTN","FBAAIAE",153,0)
 D FILE^DICN
"RTN","FBAAIAE",154,0)
 I (+Y'>0)!($P(Y,U,3)'=1) D  Q 0
"RTN","FBAAIAE",155,0)
 . W !!," A new IPAC Agreement cannot be filed at this time."
"RTN","FBAAIAE",156,0)
 S VAIEN=+Y
"RTN","FBAAIAE",157,0)
 S DIE=161.95,DA=VAIEN
"RTN","FBAAIAE",158,0)
 S DR="4:16"
"RTN","FBAAIAE",159,0)
 D ^DIE
"RTN","FBAAIAE",160,0)
 D CHKREQ^FBAAIAU(VAIEN)                        ; Check the status
"RTN","FBAAIAE",161,0)
 Q 1
"RTN","FBAAIAE",162,0)
 ;
"RTN","FBAAIAE",163,0)
NEXTVAID()  ; Increments the last IPAC ID number in the parameter file
"RTN","FBAAIAE",164,0)
 ; and returns the new value
"RTN","FBAAIAE",165,0)
 ; Input:       None
"RTN","FBAAIAE",166,0)
 ; Output:      Sets the Last IPAC ID number parameter
"RTN","FBAAIAE",167,0)
 ; Returns:     Next Available IPAC ID number
"RTN","FBAAIAE",168,0)
 N DA,DR,DIE,DTOUT,VAID
"RTN","FBAAIAE",169,0)
 I '$D(^FBAA(161.4,1,"IPAC"))!'$D(^FBAA(161.95)) S VAID=100
"RTN","FBAAIAE",170,0)
 E  S VAID=^FBAA(161.4,1,"IPAC")
"RTN","FBAAIAE",171,0)
 ;
"RTN","FBAAIAE",172,0)
 ; Make sure this is truly the last number and if not, find the last one
"RTN","FBAAIAE",173,0)
 S:$D(^FBAA(161.95,"B",VAID)) VAID=$O(^FBAA(161.95,"B",""),-1)
"RTN","FBAAIAE",174,0)
 S VAID=VAID+1                                  ; Get the new 'LAST' ID
"RTN","FBAAIAE",175,0)
 S DIE=161.4,DA=1,DR="80///^S X=VAID"
"RTN","FBAAIAE",176,0)
 D ^DIE                                         ; File the new last number
"RTN","FBAAIAE",177,0)
 Q VAID
"RTN","FBAAIAE",178,0)
 ; 
"RTN","FBAAIAE",179,0)
EDITVA1(VAIEN) ; Edit the selected IPAC Vendor agreement
"RTN","FBAAIAE",180,0)
 ; Input:       VAIEN       - IEN of the IPAC Vendor agreement to edit
"RTN","FBAAIAE",181,0)
 ; Called From: ADDVA
"RTN","FBAAIAE",182,0)
 N DA,DIE,DR,DTOUT,INV,VASTAT
"RTN","FBAAIAE",183,0)
 S DIE=161.95,DA=VAIEN
"RTN","FBAAIAE",184,0)
 S VASTAT=$P(^FBAA(161.95,VAIEN,0),U,4),INV=0
"RTN","FBAAIAE",185,0)
 ;
"RTN","FBAAIAE",186,0)
 ; Check for current invoices for the selected agreement
"RTN","FBAAIAE",187,0)
 S:$D(^FBAAC("IPAC",VAIEN))!($D(^FBAA(162.1,"IPAC",VAIEN))!($D(^FBAAI("IPAC",VAIEN)))) INV=1
"RTN","FBAAIAE",188,0)
 ;
"RTN","FBAAIAE",189,0)
 ; Display Vendor and Fiscal Year but don't allow edit if invoices exist
"RTN","FBAAIAE",190,0)
 I INV D
"RTN","FBAAIAE",191,0)
 . N FYR,VENDOR
"RTN","FBAAIAE",192,0)
 . S VENDOR=$P(^FBAA(161.95,VAIEN,0),"^",2)
"RTN","FBAAIAE",193,0)
 . S VENDOR=$E($P(^FBAAV(VENDOR,0),"^",1),1,36)
"RTN","FBAAIAE",194,0)
 . S FYR=$P(^FBAA(161.95,VAIEN,0),"^",3)
"RTN","FBAAIAE",195,0)
 . W !!,"The IPAC Agreement you have selected has been used on one or more payment "
"RTN","FBAAIAE",196,0)
 . W !,"records.  Because of this the Vendor and the Fiscal Year are not editable."
"RTN","FBAAIAE",197,0)
 . W !!,"     VENDOR: ",$$LJ^XLFSTR(VENDOR,38),"(No editing allowed)"
"RTN","FBAAIAE",198,0)
 . W !,"FISCAL YEAR: ",$$LJ^XLFSTR(FYR,38),"(No editing allowed)",!
"RTN","FBAAIAE",199,0)
 S DR=$S('INV:"1:2;",1:"")
"RTN","FBAAIAE",200,0)
 S DR=DR_$S(VASTAT'="N":"3:16",1:"4:16")
"RTN","FBAAIAE",201,0)
 D ^DIE
"RTN","FBAAIAE",202,0)
 D CHKREQ^FBAAIAU(VAIEN)                        ; Check the status
"RTN","FBAAIAE",203,0)
 Q
"RTN","FBAAIAE",204,0)
 ;
"RTN","FBAAIAE",205,0)
LOCKVA() ; Attempt to lock the Vendor agreement file to add a new agreement
"RTN","FBAAIAE",206,0)
 ; Input:   None
"RTN","FBAAIAE",207,0)
 ; Output:  Vendor agreement file locked or error message displayed
"RTN","FBAAIAE",208,0)
 ; Returns: 1 - Vendor agreement file locked, 0 otherwise
"RTN","FBAAIAE",209,0)
 L +^FBAA(161.95,0):0
"RTN","FBAAIAE",210,0)
 I '$T D  Q 0
"RTN","FBAAIAE",211,0)
 . W !!,"Someone is editing the IPAC Agreement file.  Cannot enter a new IPAC agreement"
"RTN","FBAAIAE",212,0)
 . W !,"file at this time.  Try again at a later time."
"RTN","FBAAIAE",213,0)
 Q 1
"RTN","FBAAIAE",214,0)
 ;
"RTN","FBAAIAE",215,0)
UNLOCKVA() ; Unlock Vendor agreement file
"RTN","FBAAIAE",216,0)
 ; Input:   None
"RTN","FBAAIAE",217,0)
 ; Output:  Vendor agreement file unlocked
"RTN","FBAAIAE",218,0)
 L -^FBAA(161.95,0)
"RTN","FBAAIAE",219,0)
 Q
"RTN","FBAAIAE",220,0)
 ;
"RTN","FBAAIAQ")
0^4^B54819266^n/a
"RTN","FBAAIAQ",1,0)
FBAAIAQ ;ALB/FA - Managing IPAC Agreement MRAs ;04 Dec 2013  7:36 AM
"RTN","FBAAIAQ",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIAQ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIAQ",4,0)
 ;
"RTN","FBAAIAQ",5,0)
 ; Contains methods for creating add/edit/delete Master Record Adjustments for a
"RTN","FBAAIAQ",6,0)
 ; selected IPAC Vendor Agreement
"RTN","FBAAIAQ",7,0)
 ;
"RTN","FBAAIAQ",8,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAQ",9,0)
 ;                           Entry Points
"RTN","FBAAIAQ",10,0)
 ; A            - Create an Add Master Record Adjustment for a newly created IPAC
"RTN","FBAAIAQ",11,0)
 ;                Vendor Agreement
"RTN","FBAAIAQ",12,0)
 ; AA           - Create an Add Master Record Adjustment for a specified IPAC Vendor 
"RTN","FBAAIAQ",13,0)
 ;                Agreement without changing existing data. Called from
"RTN","FBAAIAQ",14,0)
 ;                FBAA IPAC AGREEMENT MRA MENU/FBAA MRA IPAC ADD TYPE
"RTN","FBAAIAQ",15,0)
 ; C            - Create an Edit Master Record Adjustment for an edited IPAC Vendor
"RTN","FBAAIAQ",16,0)
 ;                agreement   
"RTN","FBAAIAQ",17,0)
 ; CC           - Create an Edit Master Record Adjustment for a specified Vendor 
"RTN","FBAAIAQ",18,0)
 ;                Agreement without changing existing data. Called from
"RTN","FBAAIAQ",19,0)
 ;                FBAA IPAC AGREEMENT MRA MENU/FBAA MRA IPAC CHANGE TYPE
"RTN","FBAAIAQ",20,0)
 ; D            - Create a Delete Master Record Adjustment record
"RTN","FBAAIAQ",21,0)
 ; DD           - Create a delete Master Record Adjustment record for a specified 
"RTN","FBAAIAQ",22,0)
 ;                Vendor Agreement without changing existing data. Called from
"RTN","FBAAIAQ",23,0)
 ;                FBAA IPAC AGREEMENT MRA MENU/FBAA MRA IPAC DELETE TYPE
"RTN","FBAAIAQ",24,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAQ",25,0)
 ;
"RTN","FBAAIAQ",26,0)
A(VAIEN) ;EP
"RTN","FBAAIAQ",27,0)
 ; Create an IPAC Vendor Agreement Add MRA record. Only called when adding
"RTN","FBAAIAQ",28,0)
 ; a new Vendor agreement
"RTN","FBAAIAQ",29,0)
 ; Input:       VAIEN       - Vendor Agreement IEN to create an ADD MRA
"RTN","FBAAIAQ",30,0)
 ;                            record for
"RTN","FBAAIAQ",31,0)
 ; Output:
"RTN","FBAAIAQ",32,0)
 ; Called From: FBAAIAE@ADDVA
"RTN","FBAAIAQ",33,0)
 N VAID
"RTN","FBAAIAQ",34,0)
 S VAID=$P(^FBAA(161.95,VAIEN,0),U,1)
"RTN","FBAAIAQ",35,0)
 D NEWMRA(VAIEN,VAID,"A")
"RTN","FBAAIAQ",36,0)
 Q
"RTN","FBAAIAQ",37,0)
 ;
"RTN","FBAAIAQ",38,0)
C(VAIEN) ;EP
"RTN","FBAAIAQ",39,0)
 ; Create a Change MRA record for the edited Vendor Agreement
"RTN","FBAAIAQ",40,0)
 ; Input:       VAIEN               - Vendor Agreement IEN
"RTN","FBAAIAQ",41,0)
 ;              ^TMP($J,"FBAAIAC")  - Vendor Agreement values prior to being
"RTN","FBAAIAQ",42,0)
 ;                                    being edited. Used to detect changes.
"RTN","FBAAIAQ",43,0)
 ; Called From: FBAAIAC@EDITF
"RTN","FBAAIAQ",44,0)
 N MRAACT,VAID
"RTN","FBAAIAQ",45,0)
 S VAID=$P(^FBAA(161.95,VAIEN,0),U,1)
"RTN","FBAAIAQ",46,0)
 ;
"RTN","FBAAIAQ",47,0)
 ; If a pending MRA record already exists for this agreement quit now
"RTN","FBAAIAQ",48,0)
 Q:$$PENDMRA(VAID,.MRAACT)
"RTN","FBAAIAQ",49,0)
 D NEWMRA(VAIEN,VAID,"C")
"RTN","FBAAIAQ",50,0)
 Q
"RTN","FBAAIAQ",51,0)
 ;
"RTN","FBAAIAQ",52,0)
D(VAID) ;EP
"RTN","FBAAIAQ",53,0)
 ; Create a Delete MRA record for the selected Vendor Agreement
"RTN","FBAAIAQ",54,0)
 ; Input:       VAID        - ID of the Selected Vendor Agreement
"RTN","FBAAIAQ",55,0)
 ; Output:      Delete Master Record Adjustment record created (potentially)
"RTN","FBAAIAQ",56,0)
 ; Called From: DEL@FBAAIAD
"RTN","FBAAIAQ",57,0)
 N MRAACT,MRAIEN
"RTN","FBAAIAQ",58,0)
 S MRAIEN=$$PENDMRA(VAID,.MRAACT)
"RTN","FBAAIAQ",59,0)
 ;
"RTN","FBAAIAQ",60,0)
 ; If a pending MRA record for the Vendor agreement exists, it must be either an
"RTN","FBAAIAQ",61,0)
 ; ADD or a CHANGE record. It cannot be a DELETE record because before a DELETE
"RTN","FBAAIAQ",62,0)
 ; MRA record is filed for a Vendor agreement, the agreement is deleted from the
"RTN","FBAAIAQ",63,0)
 ; file making it impossible to be deleted again. If a pending MRA record is an 
"RTN","FBAAIAQ",64,0)
 ; ADD action we just need to delete it because the user deleted the Vendor
"RTN","FBAAIAQ",65,0)
 ; agreement before it was ever transmitted. If it is a CHANGE action we need to
"RTN","FBAAIAQ",66,0)
 ; edit it and change the action to DELETE and re-file it rather than file a new one.
"RTN","FBAAIAQ",67,0)
 I MRAIEN>0 D  Q
"RTN","FBAAIAQ",68,0)
 . I MRAACT="A" D DELMRA(MRAIEN) Q
"RTN","FBAAIAQ",69,0)
 . N DA,DIE,DR,DTOUT
"RTN","FBAAIAQ",70,0)
 . S DIE=161.96,DA=MRAIEN
"RTN","FBAAIAQ",71,0)
 . S DR="1////@;3////D"
"RTN","FBAAIAQ",72,0)
 . D ^DIE
"RTN","FBAAIAQ",73,0)
 D NEWMRA("",VAID,"D")                          ; Create a DELETE MRA record
"RTN","FBAAIAQ",74,0)
 Q
"RTN","FBAAIAQ",75,0)
 ;
"RTN","FBAAIAQ",76,0)
PENDMRA(VAID,MRASTAT)  ; Checks to see if an MRA record in a pending status already
"RTN","FBAAIAQ",77,0)
 ; exists for the specified IPAC Vendor Agreement
"RTN","FBAAIAQ",78,0)
 ; Input:       VAID    - ID of the selected IPAC Vendor Agreement
"RTN","FBAAIAQ",79,0)
 ; Output:      MRAACT  - Action of the pending MRA record
"RTN","FBAAIAQ",80,0)
 ;                        "" if no pending MRA record exists
"RTN","FBAAIAQ",81,0)
 ; Returns:     IEN of the pending MRA record if one exists, 0 otherwise
"RTN","FBAAIAQ",82,0)
 ; Called From: AA,C,CC,D
"RTN","FBAAIAQ",83,0)
 N MRAIEN,STOP
"RTN","FBAAIAQ",84,0)
 S MRASTAT="",MRAIEN="",STOP=0
"RTN","FBAAIAQ",85,0)
 F  D  Q:MRAIEN=""  Q:STOP
"RTN","FBAAIAQ",86,0)
 . S MRAIEN=$O(^FBAA(161.96,"AS","P",MRAIEN))
"RTN","FBAAIAQ",87,0)
 . Q:MRAIEN=""
"RTN","FBAAIAQ",88,0)
 . ;
"RTN","FBAAIAQ",89,0)
 . ; Quit if the MRA is not for the selected Vendor Agreement
"RTN","FBAAIAQ",90,0)
 . Q:$P(^FBAA(161.96,MRAIEN,0),U,3)'=VAID
"RTN","FBAAIAQ",91,0)
 . S STOP=1
"RTN","FBAAIAQ",92,0)
 S:STOP MRASTAT=$P(^FBAA(161.96,MRAIEN,0),U,4)
"RTN","FBAAIAQ",93,0)
 Q:STOP MRAIEN
"RTN","FBAAIAQ",94,0)
 Q 0
"RTN","FBAAIAQ",95,0)
 ;
"RTN","FBAAIAQ",96,0)
AA ;EP
"RTN","FBAAIAQ",97,0)
 ; Create and ADD Master Record Adjustment for a specified Vendor Agreement without
"RTN","FBAAIAQ",98,0)
 ; changing existing data
"RTN","FBAAIAQ",99,0)
 ; Input:       None
"RTN","FBAAIAQ",100,0)
 ; Called From: Menu - FBAA IPAC AGREEMENT MRA MENU/FBAA MRA IPAC ADD TYPE 
"RTN","FBAAIAQ",101,0)
 N DIC,DTOUT,DUOUT,MRAACT,MRAIEN,MRASTAT,VAID,VAIEN,X,Y
"RTN","FBAAIAQ",102,0)
 S DIC=161.95,DIC(0)="AEQMZ"
"RTN","FBAAIAQ",103,0)
 S DIC("A")="Select an IPAC Vendor Agreement: "
"RTN","FBAAIAQ",104,0)
 D ^DIC                                         ; Select an agreement
"RTN","FBAAIAQ",105,0)
 Q:Y'>0
"RTN","FBAAIAQ",106,0)
 S VAIEN=+Y                                     ; Selected Vendor Agreement EIN
"RTN","FBAAIAQ",107,0)
 Q:VAIEN'>0                                     ; No selected agreement
"RTN","FBAAIAQ",108,0)
 I $P(^FBAA(161.95,VAIEN,0),U,4)="N" D  Q
"RTN","FBAAIAQ",109,0)
 . W !!,"IPAC Vendor Agreement Status is NEW."
"RTN","FBAAIAQ",110,0)
 . W !,"First edit the Vendor Agreement and complete it."
"RTN","FBAAIAQ",111,0)
 S VAID=$P(^FBAA(161.95,VAIEN,0),U,1)
"RTN","FBAAIAQ",112,0)
 ;
"RTN","FBAAIAQ",113,0)
 ; Check to see if the selected Vendor Agreement already has a pending MRA record
"RTN","FBAAIAQ",114,0)
 S MRAIEN=$$PENDMRA(VAID,.MRAACT)
"RTN","FBAAIAQ",115,0)
 ;
"RTN","FBAAIAQ",116,0)
 ; No pending record exists, attempt to add a pending MRA add record for the selected
"RTN","FBAAIAQ",117,0)
 ; Vendor agreement
"RTN","FBAAIAQ",118,0)
 I MRAIEN=0 D  Q
"RTN","FBAAIAQ",119,0)
 . I '$$LOCKVA^FBAAIAU(VAIEN,0) D  Q
"RTN","FBAAIAQ",120,0)
 . . W !!,"Someone else is editing this agreement. "
"RTN","FBAAIAQ",121,0)
 . . W !,"An ADD MRA cannot be created at this time."
"RTN","FBAAIAQ",122,0)
 . . W !,"Try again later."
"RTN","FBAAIAQ",123,0)
 . D NEWMRA(VAIEN,VAID,"A")
"RTN","FBAAIAQ",124,0)
 . D UNLOCKVA^FBAAIAU(VAIEN)
"RTN","FBAAIAQ",125,0)
 . W !!,"ADD MRA created and ready for transmission.",!!
"RTN","FBAAIAQ",126,0)
 ;
"RTN","FBAAIAQ",127,0)
 S MRASTAT=$P(^FBAA(161.96,MRAIEN,0),U,5)
"RTN","FBAAIAQ",128,0)
 I MRASTAT="P",MRAACT="A" W !!,"ADD MRA already exists." Q
"RTN","FBAAIAQ",129,0)
 ;
"RTN","FBAAIAQ",130,0)
 ; Prompt the user to ask if we should change a pending CHANGE MRA record to a 
"RTN","FBAAIAQ",131,0)
 ; pending Add MRA record
"RTN","FBAAIAQ",132,0)
 I MRASTAT="P",MRAACT="C" D
"RTN","FBAAIAQ",133,0)
 . I '$$LOCKVA^FBAAIAU(VAIEN,0) D  Q
"RTN","FBAAIAQ",134,0)
 . . W !!,"Someone else is editing this agreement. "
"RTN","FBAAIAQ",135,0)
 . . W !,"An ADD MRA cannot be created at this time."
"RTN","FBAAIAQ",136,0)
 . . W !,"Try again later."
"RTN","FBAAIAQ",137,0)
 . W !,"An MRA is with a status of CHANGE is currently Pending."
"RTN","FBAAIAQ",138,0)
 . N DA,DIE,DIR,DIROUT,DIRUT,DR,DTOUT,DUOUT,Y
"RTN","FBAAIAQ",139,0)
 . S DIR(0)="Y",DIR("A")="Do you want to change the type to ADD?"
"RTN","FBAAIAQ",140,0)
 . S DIR("B")="No"
"RTN","FBAAIAQ",141,0)
 . D ^DIR
"RTN","FBAAIAQ",142,0)
 . I +Y=0 D UNLOCKVA^FBAAIAU(VAIEN) Q
"RTN","FBAAIAQ",143,0)
 . S DIE=161.96,DA=MRAIEN
"RTN","FBAAIAQ",144,0)
 . S DR="3////A;4////P"
"RTN","FBAAIAQ",145,0)
 . D ^DIE
"RTN","FBAAIAQ",146,0)
 . D UNLOCKVA^FBAAIAU(VAIEN)
"RTN","FBAAIAQ",147,0)
 . W !!,"ADD MRA created from a CHANGE MRA and ready for transmission.",!!
"RTN","FBAAIAQ",148,0)
 Q
"RTN","FBAAIAQ",149,0)
 ;
"RTN","FBAAIAQ",150,0)
CC ;EP
"RTN","FBAAIAQ",151,0)
 ; Change a Master Record Adjustment for a specified Vendor agreement without
"RTN","FBAAIAQ",152,0)
 ; changing existing data
"RTN","FBAAIAQ",153,0)
 ; Input:       None
"RTN","FBAAIAQ",154,0)
 ; Called From: Menu - FBAA IPAC AGREEMENT MRA MENU/FBAA MRA IPAC CHANGE TYPE 
"RTN","FBAAIAQ",155,0)
 N DIC,DTOUT,DUOUT,MRAACT,MRAIEN,MRASTAT,VAID,VAIEN,X,Y
"RTN","FBAAIAQ",156,0)
 S DIC=161.95,DIC(0)="AEQMZ"
"RTN","FBAAIAQ",157,0)
 S DIC("A")="Select an IPAC Vendor Agreement: "
"RTN","FBAAIAQ",158,0)
 D ^DIC                                         ; Select an agreement
"RTN","FBAAIAQ",159,0)
 Q:Y'>0
"RTN","FBAAIAQ",160,0)
 S VAIEN=+Y                                     ; Selected Vendor Agreement EIN
"RTN","FBAAIAQ",161,0)
 Q:VAIEN'>0                                     ; No selected agreement
"RTN","FBAAIAQ",162,0)
 ;
"RTN","FBAAIAQ",163,0)
 I $P(^FBAA(161.95,VAIEN,0),U,4)="N" D  Q
"RTN","FBAAIAQ",164,0)
 . W !!,"IPAC Vendor Agreement Status is NEW."
"RTN","FBAAIAQ",165,0)
 . W !,"First edit the Vendor Agreement and complete it."
"RTN","FBAAIAQ",166,0)
 S VAID=$P(^FBAA(161.95,VAIEN,0),U,1)
"RTN","FBAAIAQ",167,0)
 ;
"RTN","FBAAIAQ",168,0)
 ; Check to see if the selected Vendor Agreement already has a pending MRA record
"RTN","FBAAIAQ",169,0)
 S MRAIEN=$$PENDMRA(VAID,.MRAACT)
"RTN","FBAAIAQ",170,0)
 ;
"RTN","FBAAIAQ",171,0)
 ; No pending record exists, attempt to add a pending MRA change record for the selected
"RTN","FBAAIAQ",172,0)
 ; Vendor agreement
"RTN","FBAAIAQ",173,0)
 I MRAIEN=0 D  Q
"RTN","FBAAIAQ",174,0)
 . I '$$LOCKVA^FBAAIAU(VAIEN,0) D  Q
"RTN","FBAAIAQ",175,0)
 . . W !!,"Someone else is editing this agreement. "
"RTN","FBAAIAQ",176,0)
 . . W !,"A CHANGE MRA cannot be created at this time."
"RTN","FBAAIAQ",177,0)
 . . W !,"Try again later."
"RTN","FBAAIAQ",178,0)
 . D NEWMRA(VAIEN,VAID,"C")
"RTN","FBAAIAQ",179,0)
 . D UNLOCKVA^FBAAIAU(VAIEN)
"RTN","FBAAIAQ",180,0)
 . W !!,"CHANGE MRA created and ready for transmission.",!!
"RTN","FBAAIAQ",181,0)
 ;
"RTN","FBAAIAQ",182,0)
 S MRASTAT=$P(^FBAA(161.96,MRAIEN,0),U,5)
"RTN","FBAAIAQ",183,0)
 I MRASTAT="P",MRAACT="C" W !!,"CHANGE MRA already exists." Q
"RTN","FBAAIAQ",184,0)
 ;
"RTN","FBAAIAQ",185,0)
 ; Prompt the user to ask if we should change a pending Add MRA record to a 
"RTN","FBAAIAQ",186,0)
 ; pending Add MRA record
"RTN","FBAAIAQ",187,0)
 I MRASTAT="P",MRAACT="A" D
"RTN","FBAAIAQ",188,0)
 . I '$$LOCKVA^FBAAIAU(VAIEN,0) D  Q
"RTN","FBAAIAQ",189,0)
 . . W !!,"Someone else is editing this agreement. "
"RTN","FBAAIAQ",190,0)
 . . W !,"A CHANGE MRA cannot be created at this time."
"RTN","FBAAIAQ",191,0)
 . . W !,"Try again later."
"RTN","FBAAIAQ",192,0)
 . W !,"An MRA is with a status of ADD is currently Pending."
"RTN","FBAAIAQ",193,0)
 . N DA,DIE,DIR,DIROUT,DIRUT,DR,DTOUT,DUOUT,Y
"RTN","FBAAIAQ",194,0)
 . S DIR(0)="Y",DIR("A")="Do you want to change the type to CHANGE?"
"RTN","FBAAIAQ",195,0)
 . S DIR("B")="No"
"RTN","FBAAIAQ",196,0)
 . D ^DIR
"RTN","FBAAIAQ",197,0)
 . I +Y=0 D UNLOCKVA^FBAAIAU(VAIEN) Q
"RTN","FBAAIAQ",198,0)
 . S DIE=161.96,DA=MRAIEN
"RTN","FBAAIAQ",199,0)
 . S DR="3////C;4///P"
"RTN","FBAAIAQ",200,0)
 . D ^DIE
"RTN","FBAAIAQ",201,0)
 . D UNLOCKVA^FBAAIAU(VAIEN)
"RTN","FBAAIAQ",202,0)
 . W !!,"CHANGE MRA created from an ADD MRA and ready for transmission.",!!
"RTN","FBAAIAQ",203,0)
 Q
"RTN","FBAAIAQ",204,0)
 ;
"RTN","FBAAIAQ",205,0)
DD ;EP
"RTN","FBAAIAQ",206,0)
 ; Create a delete Master Record Adjustment record for a specified Vendor Agreement
"RTN","FBAAIAQ",207,0)
 ; without changing actual data
"RTN","FBAAIAQ",208,0)
 ; Called From: Menu - FBAA IPAC AGREEMENT MRA MENU/FBAA MRA IPAC DELETE TYPE 
"RTN","FBAAIAQ",209,0)
 N DA,DIE,DR,DIR,FLINE,STEXT,MRAIEN,X,Y
"RTN","FBAAIAQ",210,0)
 S FLINE="The following Transmitted DELETE MRA Records are currently on file:"
"RTN","FBAAIAQ",211,0)
 S STEXT="Please select the DELETE MRA Record to re-transmit"
"RTN","FBAAIAQ",212,0)
 ;
"RTN","FBAAIAQ",213,0)
 ; Display a list of Transmitted Deleted MRA Records for selection
"RTN","FBAAIAQ",214,0)
 S MRAIEN=$$SELMRA^FBAAIAU(FLINE,STEXT,"T","D")
"RTN","FBAAIAQ",215,0)
 Q:MRAIEN=""                                    ; No MRA record selected
"RTN","FBAAIAQ",216,0)
 ;
"RTN","FBAAIAQ",217,0)
 ; Change the status and remove the transmit date of the selected transmitted
"RTN","FBAAIAQ",218,0)
 ; record and refile it.
"RTN","FBAAIAQ",219,0)
 S DIE="^FBAA(161.96,",DA=MRAIEN
"RTN","FBAAIAQ",220,0)
 S DR="3///^S X="_"""DELETE"""
"RTN","FBAAIAQ",221,0)
 S DR=DR_";4////P;5////@"
"RTN","FBAAIAQ",222,0)
 D ^DIE
"RTN","FBAAIAQ",223,0)
 W !!,"DELETE MRA processing completed."
"RTN","FBAAIAQ",224,0)
 Q
"RTN","FBAAIAQ",225,0)
 ;
"RTN","FBAAIAQ",226,0)
NEWMRA(VAIEN,VAID,ACTION) ; Create an IPAC Vendor Agreement MRA record of 
"RTN","FBAAIAQ",227,0)
 ; specified ACTION for the specified Vendor Agreement
"RTN","FBAAIAQ",228,0)
 ; a new Vendor agreement
"RTN","FBAAIAQ",229,0)
 ; Input:       VAIEN       - Vendor Agreement IEN to create an MRA
"RTN","FBAAIAQ",230,0)
 ;                            record for. "" if creating a DELETE MRA
"RTN","FBAAIAQ",231,0)
 ;              VAID        - Vendor Agreement ID to create and MRA record for
"RTN","FBAAIAQ",232,0)
 ;              ACTION      - MRA Action ('A','C' or 'D')
"RTN","FBAAIAQ",233,0)
 ; Output:      New MRA record is filed
"RTN","FBAAIAQ",234,0)
 ; Called From: A,AA,C,CC,D,DD
"RTN","FBAAIAQ",235,0)
 N DA,DIC,DO,DR,DTOUT,DUOUT,X,Y
"RTN","FBAAIAQ",236,0)
 S DIC=161.96,DIC(0)="EZ"
"RTN","FBAAIAQ",237,0)
 S X=$P($G(^FBAA(161.96,0)),U,4)+1
"RTN","FBAAIAQ",238,0)
 S DIC("DR")="1///^S X=VAIEN;2///^S X=VAID;3///^S X=ACTION;4///P"
"RTN","FBAAIAQ",239,0)
 D FILE^DICN
"RTN","FBAAIAQ",240,0)
 Q
"RTN","FBAAIAQ",241,0)
 ;
"RTN","FBAAIAQ",242,0)
DELMRA(MRAIEN) ; Delete an existing MRA record
"RTN","FBAAIAQ",243,0)
 ; Input:       MRAIEN      - IEN of the MRA record to be deleted
"RTN","FBAAIAQ",244,0)
 ; Output:      Specified MRA record is deleted
"RTN","FBAAIAQ",245,0)
 ; Called From: A,C,D
"RTN","FBAAIAQ",246,0)
 N DA,DIK
"RTN","FBAAIAQ",247,0)
 S DIK="^FBAA(161.96,"
"RTN","FBAAIAQ",248,0)
 S DA=MRAIEN
"RTN","FBAAIAQ",249,0)
 D ^DIK
"RTN","FBAAIAQ",250,0)
 Q
"RTN","FBAAIAQ",251,0)
 ;
"RTN","FBAAIAR")
0^39^B210368193^n/a
"RTN","FBAAIAR",1,0)
FBAAIAR ;ALB/ESG - FEE IPAC Vendor DoD Invoice (Summary) Report ;1/16/2014
"RTN","FBAAIAR",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIAR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIAR",4,0)
 ;
"RTN","FBAAIAR",5,0)
 Q
"RTN","FBAAIAR",6,0)
 ;
"RTN","FBAAIAR",7,0)
EN ; main report entry point
"RTN","FBAAIAR",8,0)
 ;
"RTN","FBAAIAR",9,0)
 N FBIAVEN,FBIABEG,FBIAEND,FBIATYPE,FBIAEXCEL
"RTN","FBAAIAR",10,0)
P1 I '$$VENDSEL(.FBIAVEN) G EX
"RTN","FBAAIAR",11,0)
P2 I '$$DATES(.FBIABEG,.FBIAEND) G EX:$$STOP,P1
"RTN","FBAAIAR",12,0)
P3 I '$$TYPESEL(.FBIATYPE) G EX:$$STOP,P2
"RTN","FBAAIAR",13,0)
P4 I '$$FORMAT(.FBIAEXCEL) G EX:$$STOP,P3
"RTN","FBAAIAR",14,0)
P5 I '$$DEVICE() G EX:$$STOP,P4
"RTN","FBAAIAR",15,0)
 ;
"RTN","FBAAIAR",16,0)
EX ; main report exit point
"RTN","FBAAIAR",17,0)
 Q
"RTN","FBAAIAR",18,0)
 ;
"RTN","FBAAIAR",19,0)
STOP() ; Determine if user wants to exit out of the option entirely
"RTN","FBAAIAR",20,0)
 ; 1=yes, get out entirely
"RTN","FBAAIAR",21,0)
 ; 0=no, just go back to the previous question
"RTN","FBAAIAR",22,0)
 ;
"RTN","FBAAIAR",23,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAIAR",24,0)
 ;
"RTN","FBAAIAR",25,0)
 S DIR(0)="Y"
"RTN","FBAAIAR",26,0)
 S DIR("A")="Do you want to exit out of this option entirely"
"RTN","FBAAIAR",27,0)
 S DIR("B")="YES"
"RTN","FBAAIAR",28,0)
 S DIR("?",1)="  Enter YES to immediately exit out of this option."
"RTN","FBAAIAR",29,0)
 S DIR("?")="  Enter NO to return to the previous question."
"RTN","FBAAIAR",30,0)
 W ! D ^DIR K DIR
"RTN","FBAAIAR",31,0)
 I $D(DIRUT) S Y=1
"RTN","FBAAIAR",32,0)
 Q Y
"RTN","FBAAIAR",33,0)
 ;
"RTN","FBAAIAR",34,0)
VENDSEL(FBIAVEN) ; user selection function for IPAC vendors
"RTN","FBAAIAR",35,0)
 ; FBIAVEN is an output array, pass by reference
"RTN","FBAAIAR",36,0)
 ; FBIAVEN(vendor ien) = vendor name selected
"RTN","FBAAIAR",37,0)
 ; Function value is 1 if at least 1 vendor was selected, 0 otherwise
"RTN","FBAAIAR",38,0)
 ;
"RTN","FBAAIAR",39,0)
 N DIC,RET,VAUTSTR,VAUTNI,VAUTVB,V,X,Y
"RTN","FBAAIAR",40,0)
 K FBIAVEN
"RTN","FBAAIAR",41,0)
 S RET=1    ; default to 1 indicating all OK
"RTN","FBAAIAR",42,0)
 ;
"RTN","FBAAIAR",43,0)
 W @IOF,!,"IPAC Vendor DoD Invoice Report"
"RTN","FBAAIAR",44,0)
 W !!,"This report will display summary information on all of the DoD invoices"
"RTN","FBAAIAR",45,0)
 W !,"for the selected IPAC vendors, within the selected date range, and for"
"RTN","FBAAIAR",46,0)
 W !,"the selected payment types."
"RTN","FBAAIAR",47,0)
 W !
"RTN","FBAAIAR",48,0)
 ;
"RTN","FBAAIAR",49,0)
 S DIC="^FBAAV("
"RTN","FBAAIAR",50,0)
 S DIC("S")="I +$O(^FBAA(161.95,""V"",Y,0))"
"RTN","FBAAIAR",51,0)
 S VAUTSTR="IPAC Vendor",VAUTNI=2,VAUTVB="FBIAVEN"
"RTN","FBAAIAR",52,0)
 D FIRST^VAUTOMA     ; DBIA# 4398
"RTN","FBAAIAR",53,0)
 I FBIAVEN S V=0 F  S V=$O(^FBAA(161.95,"V",V)) Q:'V  S FBIAVEN(V)=$P($G(^FBAAV(V,0)),U,1)   ; all IPAC vendors selected
"RTN","FBAAIAR",54,0)
 I '$O(FBIAVEN(0)) S RET=0 W $C(7)        ; no vendors found/selected
"RTN","FBAAIAR",55,0)
 Q RET
"RTN","FBAAIAR",56,0)
 ;
"RTN","FBAAIAR",57,0)
DATES(FBIABEG,FBIAEND) ; capture the start date and end date from the user
"RTN","FBAAIAR",58,0)
 ; both are output parameters, pass by reference
"RTN","FBAAIAR",59,0)
 ; function value is 0/1 indicating if valid dates were selected
"RTN","FBAAIAR",60,0)
 ;
"RTN","FBAAIAR",61,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAIAR",62,0)
 S RET=1
"RTN","FBAAIAR",63,0)
 S (FBIABEG,FBIAEND)=""
"RTN","FBAAIAR",64,0)
 ;
"RTN","FBAAIAR",65,0)
 S DIR(0)="D^:DT:EX"
"RTN","FBAAIAR",66,0)
 S DIR("A")="Enter the Start Date"
"RTN","FBAAIAR",67,0)
 S DIR("B")=$$FMTE^XLFDT($$FMADD^XLFDT(DT,-30),"5DZ")   ; default date is T-30
"RTN","FBAAIAR",68,0)
 S DIR("?",1)="The start and end dates for this report refer to the date that the"
"RTN","FBAAIAR",69,0)
 S DIR("?",2)="associated batch and payment line items are finalized (certified)"
"RTN","FBAAIAR",70,0)
 S DIR("?")="in VistA Fee through the ""Finalize a Batch"" menu option."
"RTN","FBAAIAR",71,0)
 W ! D ^DIR K DIR
"RTN","FBAAIAR",72,0)
 I $D(DIRUT)!'Y S RET=0 W $C(7) G DATEX
"RTN","FBAAIAR",73,0)
 S FBIABEG=Y
"RTN","FBAAIAR",74,0)
 ;
"RTN","FBAAIAR",75,0)
 S DIR(0)="D^"_FBIABEG_":DT:EX"
"RTN","FBAAIAR",76,0)
 S DIR("A")="Enter the End Date"
"RTN","FBAAIAR",77,0)
 S DIR("B")=$$FMTE^XLFDT(DT,"5DZ")   ; default date is Today
"RTN","FBAAIAR",78,0)
 S DIR("?",1)="The start and end dates for this report refer to the date that the"
"RTN","FBAAIAR",79,0)
 S DIR("?",2)="associated batch and payment line items are finalized (certified)"
"RTN","FBAAIAR",80,0)
 S DIR("?")="in VistA Fee through the ""Finalize a Batch"" menu option."
"RTN","FBAAIAR",81,0)
 W ! D ^DIR K DIR
"RTN","FBAAIAR",82,0)
 I $D(DIRUT)!'Y S RET=0 W $C(7) G DATEX
"RTN","FBAAIAR",83,0)
 S FBIAEND=Y
"RTN","FBAAIAR",84,0)
DATEX ;
"RTN","FBAAIAR",85,0)
 Q RET
"RTN","FBAAIAR",86,0)
 ;
"RTN","FBAAIAR",87,0)
TYPESEL(FBIATYPE) ; function for user selection of the types of invoices to search
"RTN","FBAAIAR",88,0)
 ; FBIATYPE is an output array, pass by reference
"RTN","FBAAIAR",89,0)
 ; FBIATYPE(type)="" where type can be OUT,RX,INP,ANC
"RTN","FBAAIAR",90,0)
 ; Function value is 1 if at least 1 invoice type was selected, 0 otherwise
"RTN","FBAAIAR",91,0)
 ;
"RTN","FBAAIAR",92,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,FD,G
"RTN","FBAAIAR",93,0)
 K FBIATYPE
"RTN","FBAAIAR",94,0)
 S RET=1    ; default to 1 indicating all OK
"RTN","FBAAIAR",95,0)
 ;
"RTN","FBAAIAR",96,0)
 F  D  Q:Y="ALL"!$D(DIRUT)!(Y="")
"RTN","FBAAIAR",97,0)
 . S DIR(0)="SO"
"RTN","FBAAIAR",98,0)
 . S FD="OUT:"_$$LJ^XLFSTR("Outpatient",27)_$S($D(FBIATYPE("OUT")):"SELECTED",1:"")
"RTN","FBAAIAR",99,0)
 . S FD=FD_";RX:"_$$LJ^XLFSTR("Pharmacy",27)_$S($D(FBIATYPE("RX")):"SELECTED",1:"")
"RTN","FBAAIAR",100,0)
 . S FD=FD_";INP:"_$$LJ^XLFSTR("Civil Hospital",27)_$S($D(FBIATYPE("INP")):"SELECTED",1:"")
"RTN","FBAAIAR",101,0)
 . S FD=FD_";ANC:"_$$LJ^XLFSTR("Civil Hospital Ancillary",27)_$S($D(FBIATYPE("ANC")):"SELECTED",1:"")
"RTN","FBAAIAR",102,0)
 . S FD=FD_";ALL:All"
"RTN","FBAAIAR",103,0)
 . S $P(DIR(0),U,2)=FD
"RTN","FBAAIAR",104,0)
 . ;
"RTN","FBAAIAR",105,0)
 . I '$D(FBIATYPE) S DIR("A")="Select an Invoice Type",DIR("B")="ALL"
"RTN","FBAAIAR",106,0)
 . E  S DIR("A")="Select Another Invoice Type" K DIR("B")
"RTN","FBAAIAR",107,0)
 . W ! D ^DIR K DIR
"RTN","FBAAIAR",108,0)
 . ;
"RTN","FBAAIAR",109,0)
 . I Y="ALL" D  Q     ; user selected all types, so set them and get out
"RTN","FBAAIAR",110,0)
 .. F G="OUT","RX","INP","ANC" S FBIATYPE(G)=""
"RTN","FBAAIAR",111,0)
 . ;
"RTN","FBAAIAR",112,0)
 . I $D(DIRUT)!(Y="") Q
"RTN","FBAAIAR",113,0)
 . I $D(FBIATYPE(Y)) K FBIATYPE(Y) Q     ; if already selected, toggle the selection off then quit
"RTN","FBAAIAR",114,0)
 . S FBIATYPE(Y)=""                      ; toggle selection on
"RTN","FBAAIAR",115,0)
 . Q
"RTN","FBAAIAR",116,0)
 ;
"RTN","FBAAIAR",117,0)
 I $D(DUOUT)!$D(DTOUT) S RET=0           ; exit via up-arrow or time-out should get out
"RTN","FBAAIAR",118,0)
 I '$D(FBIATYPE) S RET=0 W $C(7)
"RTN","FBAAIAR",119,0)
 Q RET
"RTN","FBAAIAR",120,0)
 ;
"RTN","FBAAIAR",121,0)
FORMAT(FBIAEXCEL) ; capture the report format from the user (normal or CSV output)
"RTN","FBAAIAR",122,0)
 ; FBIAEXCEL=0 for normal output
"RTN","FBAAIAR",123,0)
 ; FBIAEXCEL=1 for CSV (comma separated values) for Excel output
"RTN","FBAAIAR",124,0)
 ; pass parameter by reference
"RTN","FBAAIAR",125,0)
 ;
"RTN","FBAAIAR",126,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAIAR",127,0)
 S FBIAEXCEL=0,RET=1
"RTN","FBAAIAR",128,0)
 S DIR(0)="Y"
"RTN","FBAAIAR",129,0)
 S DIR("A")="Do you want to capture the output in a CSV format"
"RTN","FBAAIAR",130,0)
 S DIR("B")="NO"
"RTN","FBAAIAR",131,0)
 S DIR("?",1)="If you want to capture the output from this report in a comma-separated"
"RTN","FBAAIAR",132,0)
 S DIR("?",2)="values (CSV) format, then answer YES here.  A CSV format is something that"
"RTN","FBAAIAR",133,0)
 S DIR("?",3)="could be easily imported into a spreadsheet program like Excel."
"RTN","FBAAIAR",134,0)
 S DIR("?",4)=" "
"RTN","FBAAIAR",135,0)
 S DIR("?")="If you just want a normal report output, then answer NO here."
"RTN","FBAAIAR",136,0)
 W ! D ^DIR K DIR
"RTN","FBAAIAR",137,0)
 I $D(DIRUT) S RET=0 W $C(7)
"RTN","FBAAIAR",138,0)
 S FBIAEXCEL=Y
"RTN","FBAAIAR",139,0)
 Q RET
"RTN","FBAAIAR",140,0)
 ;
"RTN","FBAAIAR",141,0)
DEVICE() ; Device Selection
"RTN","FBAAIAR",142,0)
 N ZTRTN,ZTDESC,ZTSAVE,POP,RET,ZTSK,DIR,X,Y
"RTN","FBAAIAR",143,0)
 S RET=1
"RTN","FBAAIAR",144,0)
 I 'FBIAEXCEL W !!,"This report is 132 characters wide.  Please choose an appropriate device.",!
"RTN","FBAAIAR",145,0)
 I FBIAEXCEL D
"RTN","FBAAIAR",146,0)
 . W !!,"For CSV output, turn logging or capture on now."
"RTN","FBAAIAR",147,0)
 . W !,"To avoid undesired wrapping of the data saved to the file,"
"RTN","FBAAIAR",148,0)
 . W !,"please enter ""0;256;99999"" at the ""DEVICE:"" prompt.",!
"RTN","FBAAIAR",149,0)
 ;
"RTN","FBAAIAR",150,0)
 S ZTRTN="COMPILE^FBAAIAR"
"RTN","FBAAIAR",151,0)
 S ZTDESC="Fee Basis IPAC Vendor DoD Invoice Report"
"RTN","FBAAIAR",152,0)
 S ZTSAVE("FBIAVEN(")=""
"RTN","FBAAIAR",153,0)
 S ZTSAVE("FBIABEG")=""
"RTN","FBAAIAR",154,0)
 S ZTSAVE("FBIAEND")=""
"RTN","FBAAIAR",155,0)
 S ZTSAVE("FBIATYPE(")=""
"RTN","FBAAIAR",156,0)
 S ZTSAVE("FBIAEXCEL")=""
"RTN","FBAAIAR",157,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM",1)
"RTN","FBAAIAR",158,0)
 I POP S RET=0
"RTN","FBAAIAR",159,0)
 I $G(ZTSK) W !!,"Report compilation has started with task# ",ZTSK,".",! S DIR(0)="E" D ^DIR
"RTN","FBAAIAR",160,0)
 Q RET
"RTN","FBAAIAR",161,0)
 ;
"RTN","FBAAIAR",162,0)
COMPILE ; entry point for the compile to build the scratch global
"RTN","FBAAIAR",163,0)
 ; may be background task if job queued
"RTN","FBAAIAR",164,0)
 ;
"RTN","FBAAIAR",165,0)
 K ^TMP("FBAAIAR",$J)
"RTN","FBAAIAR",166,0)
 I '$D(ZTQUEUED) W !!,"Compiling IPAC Vendor DoD Invoice Report.  Please wait ... "
"RTN","FBAAIAR",167,0)
 I $D(FBIATYPE("OUT"))!$D(FBIATYPE("ANC")) D COMPOUT
"RTN","FBAAIAR",168,0)
 I $D(FBIATYPE("INP")) D COMPIN
"RTN","FBAAIAR",169,0)
 I $D(FBIATYPE("RX")) D COMPRX^FBAAIARA
"RTN","FBAAIAR",170,0)
 ;
"RTN","FBAAIAR",171,0)
 D PRINT^FBAAIARA                 ; print report
"RTN","FBAAIAR",172,0)
 D ^%ZISC                         ; close the device
"RTN","FBAAIAR",173,0)
 K ^TMP("FBAAIAR",$J)             ; kill scratch
"RTN","FBAAIAR",174,0)
 I $D(ZTQUEUED) S ZTREQ="@"       ; purge the task
"RTN","FBAAIAR",175,0)
COMPILX ;
"RTN","FBAAIAR",176,0)
 Q
"RTN","FBAAIAR",177,0)
 ;
"RTN","FBAAIAR",178,0)
COMPOUT ; compile Outpatient and Ancillary data
"RTN","FBAAIAR",179,0)
 ;
"RTN","FBAAIAR",180,0)
 N DATA,FBDODINV,FBDT,FBJ,FBK,FBL,FBM,FBVENAME,FBVENID,FBY0,FBY2,FBY3,FEEPROG,FBYREJ
"RTN","FBAAIAR",181,0)
 S FBDT=$O(^FBAAC("AK",FBIABEG),-1)
"RTN","FBAAIAR",182,0)
 F  S FBDT=$O(^FBAAC("AK",FBDT)) Q:'FBDT!(FBDT>FBIAEND)  D
"RTN","FBAAIAR",183,0)
 . S FBJ=0 F  S FBJ=$O(^FBAAC("AK",FBDT,FBJ)) Q:'FBJ  D
"RTN","FBAAIAR",184,0)
 .. S FBK=0 F  S FBK=$O(^FBAAC("AK",FBDT,FBJ,FBK)) Q:'FBK  D       ; FBK=vendor ien
"RTN","FBAAIAR",185,0)
 ... I '$D(FBIAVEN(FBK)) Q                  ; make sure vendor is among the selected vendors for the report
"RTN","FBAAIAR",186,0)
 ... S FBVENAME=$P($G(^FBAAV(FBK,0)),U,1)   ; vendor name
"RTN","FBAAIAR",187,0)
 ... S FBVENID=$P($G(^FBAAV(FBK,0)),U,2)    ; vendor external ID
"RTN","FBAAIAR",188,0)
 ... S FBL=0 F  S FBL=$O(^FBAAC("AK",FBDT,FBJ,FBK,FBL)) Q:'FBL  D
"RTN","FBAAIAR",189,0)
 .... S FBM=0 F  S FBM=$O(^FBAAC("AK",FBDT,FBJ,FBK,FBL,FBM)) Q:'FBM  D
"RTN","FBAAIAR",190,0)
 ..... S FBY0=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,0))
"RTN","FBAAIAR",191,0)
 ..... S FEEPROG=+$P(FBY0,U,9)   ; Fee Program ptr
"RTN","FBAAIAR",192,0)
 ..... I FEEPROG=2,'$D(FBIATYPE("OUT")) Q          ; Outpatient not a chosen type for report
"RTN","FBAAIAR",193,0)
 ..... I FEEPROG'=2,'$D(FBIATYPE("ANC")) Q         ; Civil Hosp Ancillary not a chosen type for report
"RTN","FBAAIAR",194,0)
 ..... S FBY2=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,2))
"RTN","FBAAIAR",195,0)
 ..... S FBY3=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,3))
"RTN","FBAAIAR",196,0)
 ..... S FBYREJ=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,"FBREJ"))
"RTN","FBAAIAR",197,0)
 ..... S FBDODINV=$P(FBY3,U,7) I FBDODINV="" Q        ; DoD invoice# must be present
"RTN","FBAAIAR",198,0)
 ..... I $D(^TMP("FBAAIAR",$J,FBVENAME,FBDODINV)) Q   ; DoD invoice# data already exists
"RTN","FBAAIAR",199,0)
 ..... I $P(FBY2,U,4) Q                               ; cancellation date exists
"RTN","FBAAIAR",200,0)
 ..... I $P(FBY0,U,21)'="" Q                          ; line has been voided
"RTN","FBAAIAR",201,0)
 ..... I $P(FBYREJ,U,1)'="" Q                         ; line has been rejected
"RTN","FBAAIAR",202,0)
 ..... ;
"RTN","FBAAIAR",203,0)
 ..... S DATA=FBK_U_FBVENID_U_FBDT
"RTN","FBAAIAR",204,0)
 ..... S $P(DATA,U,7)=$P(FBY0,U,16)                               ; fee invoice number
"RTN","FBAAIAR",205,0)
 ..... S $P(DATA,U,9)=$P($G(^FBAA(161.7,+$P(FBY0,U,8),0)),U,1)    ; external batch#
"RTN","FBAAIAR",206,0)
 ..... S $P(DATA,U,11)=$P($G(^FBAA(161.7,+$P(FBY0,U,8),0)),U,2)   ; obligation# from the batch file
"RTN","FBAAIAR",207,0)
 ..... S $P(DATA,U,13)=$P(FBY0,U,14)                              ; Date Paid
"RTN","FBAAIAR",208,0)
 ..... S $P(DATA,U,16)=$P(FBY2,U,3)                               ; check number
"RTN","FBAAIAR",209,0)
 ..... S ^TMP("FBAAIAR",$J,FBVENAME,FBDODINV)=DATA                ; store new data for this DoD invoice#
"RTN","FBAAIAR",210,0)
 ..... D GET(FBVENAME,FBDODINV)                                   ; gather totals for DoD invoice#
"RTN","FBAAIAR",211,0)
 ..... Q
"RTN","FBAAIAR",212,0)
 .... Q
"RTN","FBAAIAR",213,0)
 ... Q
"RTN","FBAAIAR",214,0)
 .. Q
"RTN","FBAAIAR",215,0)
 . Q
"RTN","FBAAIAR",216,0)
COMPOUTX ;
"RTN","FBAAIAR",217,0)
 Q
"RTN","FBAAIAR",218,0)
 ;
"RTN","FBAAIAR",219,0)
COMPIN ; compile Inpatient data
"RTN","FBAAIAR",220,0)
 ;
"RTN","FBAAIAR",221,0)
 N DATA,FBDODINV,FBDT,FBJ,FBV,FBVENAME,FBVENID,FBY0,FBY2,FBY5,FBYREJ
"RTN","FBAAIAR",222,0)
 S FBDT=$O(^FBAAI("AD",FBIABEG),-1)
"RTN","FBAAIAR",223,0)
 F  S FBDT=$O(^FBAAI("AD",FBDT)) Q:'FBDT!(FBDT>FBIAEND)  S FBJ=0 F  S FBJ=$O(^FBAAI("AD",FBDT,FBJ)) Q:'FBJ  D
"RTN","FBAAIAR",224,0)
 . S FBY0=$G(^FBAAI(FBJ,0))
"RTN","FBAAIAR",225,0)
 . S FBY2=$G(^FBAAI(FBJ,2))
"RTN","FBAAIAR",226,0)
 . S FBY5=$G(^FBAAI(FBJ,5))
"RTN","FBAAIAR",227,0)
 . S FBYREJ=$G(^FBAAI(FBJ,"FBREJ"))
"RTN","FBAAIAR",228,0)
 . S FBDODINV=$P(FBY5,U,7) I FBDODINV="" Q        ; DoD invoice# must be present
"RTN","FBAAIAR",229,0)
 . S FBV=+$P(FBY0,U,3)      ; vendor ien
"RTN","FBAAIAR",230,0)
 . I '$D(FBIAVEN(FBV)) Q    ; vendor is not among the selected vendors for the report
"RTN","FBAAIAR",231,0)
 . S FBVENAME=$P($G(^FBAAV(FBV,0)),U,1)           ; vendor name
"RTN","FBAAIAR",232,0)
 . S FBVENID=$P($G(^FBAAV(FBV,0)),U,2)            ; vendor external ID
"RTN","FBAAIAR",233,0)
 . I $D(^TMP("FBAAIAR",$J,FBVENAME,FBDODINV)) Q   ; DoD invoice# data already exists
"RTN","FBAAIAR",234,0)
 . I $P(FBY2,U,5) Q                               ; cancelled
"RTN","FBAAIAR",235,0)
 . I $P(FBY0,U,14)'="" Q                          ; voided
"RTN","FBAAIAR",236,0)
 . I $P(FBYREJ,U,1)'="" Q                         ; rejected
"RTN","FBAAIAR",237,0)
 . ;
"RTN","FBAAIAR",238,0)
 . S DATA=FBV_U_FBVENID_U_FBDT
"RTN","FBAAIAR",239,0)
 . S $P(DATA,U,7)=$P(FBY0,U,1)                                 ; fee invoice number
"RTN","FBAAIAR",240,0)
 . S $P(DATA,U,9)=$P($G(^FBAA(161.7,+$P(FBY0,U,17),0)),U,1)    ; external batch#
"RTN","FBAAIAR",241,0)
 . S $P(DATA,U,11)=$P($G(^FBAA(161.7,+$P(FBY0,U,17),0)),U,2)   ; obligation# from the batch file
"RTN","FBAAIAR",242,0)
 . S $P(DATA,U,13)=$P(FBY2,U,1)                                ; Date Paid
"RTN","FBAAIAR",243,0)
 . S $P(DATA,U,16)=$P(FBY2,U,4)                                ; check number
"RTN","FBAAIAR",244,0)
 . S ^TMP("FBAAIAR",$J,FBVENAME,FBDODINV)=DATA                 ; store new data for this DoD invoice#
"RTN","FBAAIAR",245,0)
 . D GET(FBVENAME,FBDODINV)                                    ; gather totals for DoD invoice#
"RTN","FBAAIAR",246,0)
 . Q
"RTN","FBAAIAR",247,0)
COMPINX ;
"RTN","FBAAIAR",248,0)
 Q
"RTN","FBAAIAR",249,0)
 ;
"RTN","FBAAIAR",250,0)
GET(FBVENAME,FBDODINV) ; gather totals and other data for all Fee line items for the given vendor and DoD invoice#
"RTN","FBAAIAR",251,0)
 ; update the established scratch global with information
"RTN","FBAAIAR",252,0)
 ;
"RTN","FBAAIAR",253,0)
 N ADJTOT,CLAIMED,DISBURSED,FBDISGD,FBG0,FBG2,FBGREJ,K,L,M,N,P,PAID,FBTT
"RTN","FBAAIAR",254,0)
 ;
"RTN","FBAAIAR",255,0)
 I $G(FBVENAME)="" G GETX
"RTN","FBAAIAR",256,0)
 I $G(FBDODINV)="" G GETX
"RTN","FBAAIAR",257,0)
 ;
"RTN","FBAAIAR",258,0)
 S (CLAIMED,PAID,ADJTOT,DISBURSED)=0                   ; initialize dollar totals to 0
"RTN","FBAAIAR",259,0)
 S FBDISGD=$G(^TMP("FBAAIAR",$J,FBVENAME,FBDODINV))    ; current contents of scratch global data
"RTN","FBAAIAR",260,0)
 S FBTT=$G(^TMP("FBAAIAR",$J,FBVENAME))                ; current vendor totals
"RTN","FBAAIAR",261,0)
 ;
"RTN","FBAAIAR",262,0)
 ; gather outpatient/ancillary totals for this DoD invoice#
"RTN","FBAAIAR",263,0)
 S K=0 F  S K=$O(^FBAAC("DODI",FBDODINV,K)) Q:'K  S L=0 F  S L=$O(^FBAAC("DODI",FBDODINV,K,L)) Q:'L  S M=0 F  S M=$O(^FBAAC("DODI",FBDODINV,K,L,M)) Q:'M  S N=0 F  S N=$O(^FBAAC("DODI",FBDODINV,K,L,M,N)) Q:'N  D
"RTN","FBAAIAR",264,0)
 . S FBG0=$G(^FBAAC(K,1,L,1,M,1,N,0))
"RTN","FBAAIAR",265,0)
 . S FBG2=$G(^FBAAC(K,1,L,1,M,1,N,2))
"RTN","FBAAIAR",266,0)
 . S FBGREJ=$G(^FBAAC(K,1,L,1,M,1,N,"FBREJ"))
"RTN","FBAAIAR",267,0)
 . I $P(FBG2,U,4) Q           ; cancelled
"RTN","FBAAIAR",268,0)
 . I $P(FBG0,U,21)'="" Q      ; voided
"RTN","FBAAIAR",269,0)
 . I $P(FBGREJ,U,1)'="" Q     ; rejected
"RTN","FBAAIAR",270,0)
 . S CLAIMED=CLAIMED+$P(FBG0,U,2)
"RTN","FBAAIAR",271,0)
 . S PAID=PAID+$P(FBG0,U,3)
"RTN","FBAAIAR",272,0)
 . S DISBURSED=DISBURSED+$P(FBG2,U,8)
"RTN","FBAAIAR",273,0)
 . S P=0 F  S P=$O(^FBAAC(K,1,L,1,M,1,N,7,P)) Q:'P  S ADJTOT=ADJTOT+$P($G(^FBAAC(K,1,L,1,M,1,N,7,P,0)),U,3)
"RTN","FBAAIAR",274,0)
 . ;
"RTN","FBAAIAR",275,0)
 . ; check for certain fields that may have multiple values or missing values for the same DoD invoice number
"RTN","FBAAIAR",276,0)
 . ; across all VistA line items for all payment types.
"RTN","FBAAIAR",277,0)
 . D CKMLT($P(FBG0,U,16),7,8)                               ; fee invoice number
"RTN","FBAAIAR",278,0)
 . D CKMLT($P($G(^FBAA(161.7,+$P(FBG0,U,8),0)),U,1),9,10)   ; external batch#
"RTN","FBAAIAR",279,0)
 . D CKMLT($P($G(^FBAA(161.7,+$P(FBG0,U,8),0)),U,2),11,12)  ; obligation# (taken from the batch)
"RTN","FBAAIAR",280,0)
 . D CKMLT($P(FBG0,U,14),13,14,15)                          ; date paid (also check for missing values)
"RTN","FBAAIAR",281,0)
 . D CKMLT($P(FBG2,U,3),16,17,18)                           ; check number (also check for missing values)
"RTN","FBAAIAR",282,0)
 . Q
"RTN","FBAAIAR",283,0)
 ;
"RTN","FBAAIAR",284,0)
 ; gather inpatient totals for this DoD invoice#
"RTN","FBAAIAR",285,0)
 S K=0 F  S K=$O(^FBAAI("DODI",FBDODINV,K)) Q:'K  D
"RTN","FBAAIAR",286,0)
 . S FBG0=$G(^FBAAI(K,0))
"RTN","FBAAIAR",287,0)
 . S FBG2=$G(^FBAAI(K,2))
"RTN","FBAAIAR",288,0)
 . S FBGREJ=$G(^FBAAI(K,"FBREJ"))
"RTN","FBAAIAR",289,0)
 . I $P(FBG2,U,5) Q            ; cancelled
"RTN","FBAAIAR",290,0)
 . I $P(FBG0,U,14)'="" Q       ; voided
"RTN","FBAAIAR",291,0)
 . I $P(FBGREJ,U,1)'="" Q      ; rejected
"RTN","FBAAIAR",292,0)
 . S CLAIMED=CLAIMED+$P(FBG0,U,8)
"RTN","FBAAIAR",293,0)
 . S PAID=PAID+$P(FBG0,U,9)
"RTN","FBAAIAR",294,0)
 . S DISBURSED=DISBURSED+$P(FBG2,U,8)
"RTN","FBAAIAR",295,0)
 . S P=0 F  S P=$O(^FBAAI(K,8,P)) Q:'P  S ADJTOT=ADJTOT+$P($G(^FBAAI(K,8,P,0)),U,3)
"RTN","FBAAIAR",296,0)
 . ;
"RTN","FBAAIAR",297,0)
 . ; check for certain fields that may have multiple values or missing values for the same DoD invoice number
"RTN","FBAAIAR",298,0)
 . ; across all VistA line items for all payment types.
"RTN","FBAAIAR",299,0)
 . D CKMLT($P(FBG0,U,1),7,8)                                ; fee invoice number
"RTN","FBAAIAR",300,0)
 . D CKMLT($P($G(^FBAA(161.7,+$P(FBG0,U,17),0)),U,1),9,10)  ; external batch#
"RTN","FBAAIAR",301,0)
 . D CKMLT($P($G(^FBAA(161.7,+$P(FBG0,U,17),0)),U,2),11,12) ; obligation# (taken from the batch)
"RTN","FBAAIAR",302,0)
 . D CKMLT($P(FBG2,U,1),13,14,15)                           ; date paid (also check for missing values)
"RTN","FBAAIAR",303,0)
 . D CKMLT($P(FBG2,U,4),16,17,18)                           ; check number (also check for missing values)
"RTN","FBAAIAR",304,0)
 . Q
"RTN","FBAAIAR",305,0)
 ;
"RTN","FBAAIAR",306,0)
 ; gather pharmacy totals for this DoD invoice#
"RTN","FBAAIAR",307,0)
 S K=0 F  S K=$O(^FBAA(162.1,"DODI",FBDODINV,K)) Q:'K  S L=0 F  S L=$O(^FBAA(162.1,"DODI",FBDODINV,K,L)) Q:'L  D
"RTN","FBAAIAR",308,0)
 . S FBG0=$G(^FBAA(162.1,K,"RX",L,0))
"RTN","FBAAIAR",309,0)
 . S FBG2=$G(^FBAA(162.1,K,"RX",L,2))
"RTN","FBAAIAR",310,0)
 . S FBGREJ=$G(^FBAA(162.1,K,"RX",L,"FBREJ"))
"RTN","FBAAIAR",311,0)
 . I $P(FBG2,U,11) Q          ; cancelled
"RTN","FBAAIAR",312,0)
 . I $P(FBG2,U,3)'="" Q       ; voided
"RTN","FBAAIAR",313,0)
 . I $P(FBGREJ,U,1)'="" Q     ; rejected
"RTN","FBAAIAR",314,0)
 . S CLAIMED=CLAIMED+$P(FBG0,U,4)
"RTN","FBAAIAR",315,0)
 . S PAID=PAID+$P(FBG0,U,16)
"RTN","FBAAIAR",316,0)
 . S DISBURSED=DISBURSED+$P(FBG2,U,14)
"RTN","FBAAIAR",317,0)
 . S P=0 F  S P=$O(^FBAA(162.1,K,"RX",L,4,P)) Q:'P  S ADJTOT=ADJTOT+$P($G(^FBAA(162.1,K,"RX",L,4,P,0)),U,3)
"RTN","FBAAIAR",318,0)
 . ;
"RTN","FBAAIAR",319,0)
 . ; check for certain fields that may have multiple values or missing values for the same DoD invoice number
"RTN","FBAAIAR",320,0)
 . ; across all VistA line items for all payment types.
"RTN","FBAAIAR",321,0)
 . D CKMLT(K,7,8)                                           ; fee invoice number (K is DINUM'd with the .01 field)
"RTN","FBAAIAR",322,0)
 . D CKMLT($P($G(^FBAA(161.7,+$P(FBG0,U,17),0)),U,1),9,10)  ; external batch#
"RTN","FBAAIAR",323,0)
 . D CKMLT($P($G(^FBAA(161.7,+$P(FBG0,U,17),0)),U,2),11,12) ; obligation# (taken from the batch)
"RTN","FBAAIAR",324,0)
 . D CKMLT($P(FBG2,U,8),13,14,15)                           ; date paid (also check for missing values)
"RTN","FBAAIAR",325,0)
 . D CKMLT($P(FBG2,U,10),16,17,18)                          ; check number (also check for missing values)
"RTN","FBAAIAR",326,0)
 . Q
"RTN","FBAAIAR",327,0)
 ;
"RTN","FBAAIAR",328,0)
 ; update scratch global
"RTN","FBAAIAR",329,0)
 S $P(FBDISGD,U,4)=CLAIMED      ; total amount claimed
"RTN","FBAAIAR",330,0)
 S $P(FBDISGD,U,5)=PAID         ; total amount paid
"RTN","FBAAIAR",331,0)
 S $P(FBDISGD,U,6)=ADJTOT       ; total adjustment amount
"RTN","FBAAIAR",332,0)
 S $P(FBDISGD,U,19)=DISBURSED   ; total disbursed amount
"RTN","FBAAIAR",333,0)
 S ^TMP("FBAAIAR",$J,FBVENAME,FBDODINV)=FBDISGD
"RTN","FBAAIAR",334,0)
 ;
"RTN","FBAAIAR",335,0)
 ; also update vendor totals
"RTN","FBAAIAR",336,0)
 S $P(FBTT,U,1)=$P(FBTT,U,1)+1          ; count
"RTN","FBAAIAR",337,0)
 S $P(FBTT,U,4)=$P(FBTT,U,4)+CLAIMED
"RTN","FBAAIAR",338,0)
 S $P(FBTT,U,5)=$P(FBTT,U,5)+PAID
"RTN","FBAAIAR",339,0)
 S $P(FBTT,U,6)=$P(FBTT,U,6)+ADJTOT
"RTN","FBAAIAR",340,0)
 S $P(FBTT,U,19)=$P(FBTT,U,19)+DISBURSED
"RTN","FBAAIAR",341,0)
 S ^TMP("FBAAIAR",$J,FBVENAME)=FBTT
"RTN","FBAAIAR",342,0)
 ;
"RTN","FBAAIAR",343,0)
GETX ;
"RTN","FBAAIAR",344,0)
 Q
"RTN","FBAAIAR",345,0)
 ;
"RTN","FBAAIAR",346,0)
CKMLT(VAL,VALPCE,MLTPCE,NOVPCE) ; check for multiple/missing data values
"RTN","FBAAIAR",347,0)
 ;    Variable FBDISGD is assumed to contain the contents of the scratch global
"RTN","FBAAIAR",348,0)
 ;    VAL - value from the payment file to check
"RTN","FBAAIAR",349,0)
 ; VALPCE - piece# from the scratch global to check for multiple values
"RTN","FBAAIAR",350,0)
 ; MLTPCE - piece# of the scratch global to set if multiple values found
"RTN","FBAAIAR",351,0)
 ; NOVPCE - piece# of the scratch global to set if no data exists in VAL (optional)
"RTN","FBAAIAR",352,0)
 ;
"RTN","FBAAIAR",353,0)
 I VAL'="",$P(FBDISGD,U,VALPCE)'="",VAL'=$P(FBDISGD,U,VALPCE) S $P(FBDISGD,U,MLTPCE)=1
"RTN","FBAAIAR",354,0)
 I $G(NOVPCE),VAL="" S $P(FBDISGD,U,NOVPCE)=1
"RTN","FBAAIAR",355,0)
 Q
"RTN","FBAAIAR",356,0)
 ;
"RTN","FBAAIAR1")
0^42^B134256276^n/a
"RTN","FBAAIAR1",1,0)
FBAAIAR1  ;ALB/FA - FEE IPAC Vendor DoD Invoice Number Inquiry Report ;1/16/2014
"RTN","FBAAIAR1",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIAR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIAR1",4,0)
 ;
"RTN","FBAAIAR1",5,0)
 ;
"RTN","FBAAIAR1",6,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAR1",7,0)
 ;                           Entry Points
"RTN","FBAAIAR1",8,0)
 ; EN  - DoD Invoice Inquiry Report - Run report
"RTN","FBAAIAR1",9,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAR1",10,0)
 ;
"RTN","FBAAIAR1",11,0)
 Q
"RTN","FBAAIAR1",12,0)
 ;
"RTN","FBAAIAR1",13,0)
EN ;EP
"RTN","FBAAIAR1",14,0)
 ; Main report entry point
"RTN","FBAAIAR1",15,0)
 N FBDODINV,FBFORMAT
"RTN","FBAAIAR1",16,0)
 Q:'$$DODISEL(.FBDODINV)                        ; Select DoD Invoice number
"RTN","FBAAIAR1",17,0)
 Q:'$$FORMAT(.FBFORMAT)                         ; Select Report Format
"RTN","FBAAIAR1",18,0)
 Q:$$DEVICE(FBDODINV,FBFORMAT)                  ; Select Device and compile report
"RTN","FBAAIAR1",19,0)
 Q
"RTN","FBAAIAR1",20,0)
 ;
"RTN","FBAAIAR1",21,0)
DODISEL(FBDODINV) ; Ask for the DoD Invoice
"RTN","FBAAIAR1",22,0)
 ; Input:       None
"RTN","FBAAIAR1",23,0)
 ; Output:      FBDODINV    - Selected DoD Invoice Number
"RTN","FBAAIAR1",24,0)
 ; Returns:     1 - User quit out, 0 otherwise
"RTN","FBAAIAR1",25,0)
 ; Called From: EN
"RTN","FBAAIAR1",26,0)
 ;
"RTN","FBAAIAR1",27,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,RET,X,Y
"RTN","FBAAIAR1",28,0)
 S RET=1                                        ; Assume DoD Invoice Selection
"RTN","FBAAIAR1",29,0)
 W @IOF,!,"IPAC Vendor DoD Invoice Number Inquiry Report"
"RTN","FBAAIAR1",30,0)
 W !!,"This report will display all of the VistA invoices for the "
"RTN","FBAAIAR1",31,0)
 W !,"selected DoD Invoice Number."
"RTN","FBAAIAR1",32,0)
 W !
"RTN","FBAAIAR1",33,0)
 S DIR(0)="F^3:22"
"RTN","FBAAIAR1",34,0)
 S DIR("A")="DoD Invoice Number"
"RTN","FBAAIAR1",35,0)
 S DIR("?",1)="All of the associated VistA invoices will be displayed for the"
"RTN","FBAAIAR1",36,0)
 S DIR("?",2)="selected DoD invoice number"
"RTN","FBAAIAR1",37,0)
 W ! D ^DIR K DIR
"RTN","FBAAIAR1",38,0)
 I $D(DIRUT)!(Y="") D
"RTN","FBAAIAR1",39,0)
 . S RET=0                                      ; User wants to exit
"RTN","FBAAIAR1",40,0)
 . W *7
"RTN","FBAAIAR1",41,0)
 S FBDODINV=Y                                   ; Selected DoD Invoice number
"RTN","FBAAIAR1",42,0)
 Q RET
"RTN","FBAAIAR1",43,0)
 ;
"RTN","FBAAIAR1",44,0)
FORMAT(FBFORMAT) ; Capture the report format from the user (normal or CSV output)
"RTN","FBAAIAR1",45,0)
 ; Input:       None
"RTN","FBAAIAR1",46,0)
 ; Output:      FBFORMAT        - 1 - CSV Format, 0 otherwise
"RTN","FBAAIAR1",47,0)
 ; Returns:     0 - User quit out, 1 otherwise
"RTN","FBAAIAR1",48,0)
 ; Called From: EN
"RTN","FBAAIAR1",49,0)
 ;
"RTN","FBAAIAR1",50,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,RET,X,Y
"RTN","FBAAIAR1",51,0)
 S RET=1
"RTN","FBAAIAR1",52,0)
 S DIR(0)="Y"
"RTN","FBAAIAR1",53,0)
 S DIR("A")="Do you want to capture the output in a CSV format"
"RTN","FBAAIAR1",54,0)
 S DIR("B")="NO"
"RTN","FBAAIAR1",55,0)
 S DIR("?",1)="If you want to capture the output from this report in a comma-separated"
"RTN","FBAAIAR1",56,0)
 S DIR("?",2)="values (CSV) format, then answer YES here.  A CSV format is something that"
"RTN","FBAAIAR1",57,0)
 S DIR("?",3)="could be easily imported into a spreadsheet program like Excel."
"RTN","FBAAIAR1",58,0)
 S DIR("?",4)=" "
"RTN","FBAAIAR1",59,0)
 S DIR("?")="If you just want a normal report output, then answer NO here."
"RTN","FBAAIAR1",60,0)
 W ! D ^DIR K DIR
"RTN","FBAAIAR1",61,0)
 I $D(DIRUT) D
"RTN","FBAAIAR1",62,0)
 . S RET=0                                      ; User wants to exit
"RTN","FBAAIAR1",63,0)
 . W *7
"RTN","FBAAIAR1",64,0)
 S FBFORMAT=Y
"RTN","FBAAIAR1",65,0)
 Q RET
"RTN","FBAAIAR1",66,0)
 ;
"RTN","FBAAIAR1",67,0)
DEVICE(FBDODINV,FBFORMAT) ; Device Selection and Report compilation
"RTN","FBAAIAR1",68,0)
 ; Input:       FBDODINV    - DoD invoice number to compile VistA invoices for
"RTN","FBAAIAR1",69,0)
 ;              FBFORMAT    - 1 - CSV Format, 0 otherwise
"RTN","FBAAIAR1",70,0)
 ; Output:      Report is compiled if a device is selected
"RTN","FBAAIAR1",71,0)
 ; Returns:     1 - User quit out, 0 otherwise
"RTN","FBAAIAR1",72,0)
 ; Called From: EN
"RTN","FBAAIAR1",73,0)
 N DIR,POP,RET,X,Y,ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","FBAAIAR1",74,0)
 S RET=1
"RTN","FBAAIAR1",75,0)
 I 'FBFORMAT D
"RTN","FBAAIAR1",76,0)
 . W !!,"This report is 80 characters wide.  Please choose an appropriate device.",!
"RTN","FBAAIAR1",77,0)
 E  D
"RTN","FBAAIAR1",78,0)
 . W !!,"For CSV output, turn logging or capture on now."
"RTN","FBAAIAR1",79,0)
 . W !,"To avoid undesired wrapping of the data saved to the file,"
"RTN","FBAAIAR1",80,0)
 . W !,"please enter ""0;256;99999"" at the ""DEVICE:"" prompt.",!
"RTN","FBAAIAR1",81,0)
 ;
"RTN","FBAAIAR1",82,0)
 S ZTRTN="COMPILE^FBAAIAR1"
"RTN","FBAAIAR1",83,0)
 S ZTDESC="Fee Basis IPAC Vendor DoD Invoice Inquiry Report"
"RTN","FBAAIAR1",84,0)
 S ZTSAVE("FBDODINV")=""
"RTN","FBAAIAR1",85,0)
 S ZTSAVE("FBFORMAT")=""
"RTN","FBAAIAR1",86,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM",1)
"RTN","FBAAIAR1",87,0)
 S:POP RET=0
"RTN","FBAAIAR1",88,0)
 I $G(ZTSK) D
"RTN","FBAAIAR1",89,0)
 . W !!,"Report compilation has started with task# ",ZTSK,".",!
"RTN","FBAAIAR1",90,0)
 . S DIR(0)="E"
"RTN","FBAAIAR1",91,0)
 . D ^DIR
"RTN","FBAAIAR1",92,0)
 Q RET
"RTN","FBAAIAR1",93,0)
 ;
"RTN","FBAAIAR1",94,0)
COMPILE ; Entry point for the compile to build the scratch global
"RTN","FBAAIAR1",95,0)
 ; may be background task if job queued
"RTN","FBAAIAR1",96,0)
 ; Input:       FBDODINV    - DoD Invoice number to use for selection
"RTN","FBAAIAR1",97,0)
 ;              FBFORMAT    - 1 - CSV format, 0 otherwise
"RTN","FBAAIAR1",98,0)
 ; Output:      Report is compiled and output
"RTN","FBAAIAR1",99,0)
 ; Called From: Report processing
"RTN","FBAAIAR1",100,0)
 ;
"RTN","FBAAIAR1",101,0)
 K ^TMP("FBAAIAR1",$J)
"RTN","FBAAIAR1",102,0)
 I '$D(ZTQUEUED) W !!,"Compiling IPAC Vendor DoD Invoice Inquiry Report.  Please wait ... "
"RTN","FBAAIAR1",103,0)
 D COMPOUT(FBDODINV)                            ; Compile Outpatient invoices       
"RTN","FBAAIAR1",104,0)
 D COMPIN(FBDODINV)                             ; Compile Inpatient invoices
"RTN","FBAAIAR1",105,0)
 D COMPRX(FBDODINV)                             ; Compile Pharmacy invoices
"RTN","FBAAIAR1",106,0)
 ;
"RTN","FBAAIAR1",107,0)
 D PRINT^FBAAIAR2(FBDODINV,FBFORMAT)            ; Print report
"RTN","FBAAIAR1",108,0)
 D ^%ZISC                                       ; Close the device
"RTN","FBAAIAR1",109,0)
 K ^TMP("FBAAIAR1",$J)                          ; Kill scratch global
"RTN","FBAAIAR1",110,0)
 S:$D(ZTQUEUED) ZTREQ="@"                       ; Purge the task
"RTN","FBAAIAR1",111,0)
 Q
"RTN","FBAAIAR1",112,0)
 ;
"RTN","FBAAIAR1",113,0)
COMPOUT(FBDODINV)  ; Compile Outpatient and Inpatient Ancillary Invoice data
"RTN","FBAAIAR1",114,0)
 ; Input:       FBDODINV    - DoD Invoice number to use for selection
"RTN","FBAAIAR1",115,0)
 ; Output:      VistA invoices for the selected DoD invoice number are
"RTN","FBAAIAR1",116,0)
 ;              added to the temporary global
"RTN","FBAAIAR1",117,0)
 ; Called From: COMPILE
"RTN","FBAAIAR1",118,0)
 ;
"RTN","FBAAIAR1",119,0)
 N DATA,IDTIEN,PATIEN,SVCIEN,VENIEN,VNAME
"RTN","FBAAIAR1",120,0)
 S PATIEN=""
"RTN","FBAAIAR1",121,0)
 F  D  Q:PATIEN=""                              ; Patient IEN
"RTN","FBAAIAR1",122,0)
 . S PATIEN=$O(^FBAAC("DODI",FBDODINV,PATIEN))
"RTN","FBAAIAR1",123,0)
 . Q:PATIEN=""
"RTN","FBAAIAR1",124,0)
 . S VENIEN=""
"RTN","FBAAIAR1",125,0)
 . F  D  Q:VENIEN=""                            ; Vendor IEN
"RTN","FBAAIAR1",126,0)
 . . S VENIEN=$O(^FBAAC("DODI",FBDODINV,PATIEN,VENIEN))
"RTN","FBAAIAR1",127,0)
 . . Q:VENIEN=""
"RTN","FBAAIAR1",128,0)
 . . S VNAME=$P($G(^FBAAV(VENIEN,0)),U,1)       ; Vendor Name
"RTN","FBAAIAR1",129,0)
 . . S IDTIEN=""
"RTN","FBAAIAR1",130,0)
 . . F  D  Q:IDTIEN=""                          ; Initial Service Date IEN
"RTN","FBAAIAR1",131,0)
 . . . S IDTIEN=$O(^FBAAC("DODI",FBDODINV,PATIEN,VENIEN,IDTIEN))
"RTN","FBAAIAR1",132,0)
 . . . Q:IDTIEN=""
"RTN","FBAAIAR1",133,0)
 . . . S SVCIEN=""
"RTN","FBAAIAR1",134,0)
 . . . F  D  Q:SVCIEN=""                        ; Service Provided IEN
"RTN","FBAAIAR1",135,0)
 . . . . S SVCIEN=$O(^FBAAC("DODI",FBDODINV,PATIEN,VENIEN,IDTIEN,SVCIEN))
"RTN","FBAAIAR1",136,0)
 . . . . Q:SVCIEN=""
"RTN","FBAAIAR1",137,0)
 . . . . ;
"RTN","FBAAIAR1",138,0)
 . . . . ; Store the row data for the invoice into the temporary global
"RTN","FBAAIAR1",139,0)
 . . . . D ROWDATAO(VNAME,PATIEN,VENIEN,IDTIEN,SVCIEN)
"RTN","FBAAIAR1",140,0)
 Q
"RTN","FBAAIAR1",141,0)
 ;
"RTN","FBAAIAR1",142,0)
ROWDATAO(VNAME,PATIEN,VENIEN,IDTIEN,SVCIEN)   ;
"RTN","FBAAIAR1",143,0)
 ; Retrieves the information needed to display the VistA invoice row for an
"RTN","FBAAIAR1",144,0)
 ; outpatient invoice or an Inpatient Ancillary invoice.
"RTN","FBAAIAR1",145,0)
 ; Input:       VNAME                   - Vendor Name of the Invoice
"RTN","FBAAIAR1",146,0)
 ;              PATIEN                  - Patient IEN
"RTN","FBAAIAR1",147,0)
 ;              VENIEN                  - Vendor IEN of the invoice
"RTN","FBAAIAR1",148,0)
 ;              IDTIEN                  - Internal Initial Treatment Date IEN
"RTN","FBAAIAR1",149,0)
 ;              SVCIEN                  - Invoice IEN        
"RTN","FBAAIAR1",150,0)
 ;              ^TMP("FAAIAR1",$J)      - Current temporary file
"RTN","FBAAIAR1",151,0)
 ; Output:      ^TMP("FAAIAR1",$J)      - Updated with VistA Invoice data
"RTN","FBAAIAR1",152,0)
 ; Called From: COMPOUT
"RTN","FBAAIAR1",153,0)
 ;
"RTN","FBAAIAR1",154,0)
 N DATA,INV0,INV2,INV3,INVNUM,TYPE,XX
"RTN","FBAAIAR1",155,0)
 S INV0=$G(^FBAAC(PATIEN,1,VENIEN,1,IDTIEN,1,SVCIEN,0)) ; Outpatient Invoice 0 Node
"RTN","FBAAIAR1",156,0)
 S INV2=$G(^FBAAC(PATIEN,1,VENIEN,1,IDTIEN,1,SVCIEN,2)) ; Outpatient Invoice 2 Node
"RTN","FBAAIAR1",157,0)
 S INV3=$G(^FBAAC(PATIEN,1,VENIEN,1,IDTIEN,1,SVCIEN,3)) ; Outpatient Invoice 3 Node
"RTN","FBAAIAR1",158,0)
 S INVNUM=$P(INV0,U,16)                                 ; VistA Invoice #
"RTN","FBAAIAR1",159,0)
 S ITYPE=+$P(INV0,U,9)                                  ; Fee Program ptr
"RTN","FBAAIAR1",160,0)
 S ITYPE=$S(ITYPE=2:0,1:1)                              ; 0 - Outpatient, 1: Inpatient Ancillary
"RTN","FBAAIAR1",161,0)
 S TYPE=$S('ITYPE:"OUT",1:"ANC")
"RTN","FBAAIAR1",162,0)
 S DATA=$$GETTYPEO(PATIEN,VENIEN,IDTIEN,SVCIEN,INV0,INV2) ; Void/Purge/Cancel flags
"RTN","FBAAIAR1",163,0)
 S $P(DATA,U,2)=$P(INV0,U,14)                           ; Date Paid
"RTN","FBAAIAR1",164,0)
 S $P(DATA,U,3)=$P(INV0,U,2)                            ; Amount Claimed
"RTN","FBAAIAR1",165,0)
 S $P(DATA,U,4)=$P(INV0,U,3)                            ; Amount Paid
"RTN","FBAAIAR1",166,0)
 S $P(DATA,U,5)=$P(INV0,U,4)                            ; Amount Adjusted
"RTN","FBAAIAR1",167,0)
 S XX=IDTIEN_"-"_SVCIEN
"RTN","FBAAIAR1",168,0)
 S ^TMP("FBAAIAR1",$J,VNAME,TYPE,INVNUM,XX)=DATA         ; VistA invoice data for the invoice
"RTN","FBAAIAR1",169,0)
 D TOTS(VNAME,TYPE,INVNUM,DATA)                         ; Gather totals for invoice
"RTN","FBAAIAR1",170,0)
 Q
"RTN","FBAAIAR1",171,0)
 ;
"RTN","FBAAIAR1",172,0)
GETTYPEO(PATIEN,VENIEN,IDTIEN,SVCIEN,INV0,INV2) ; Determines if the invoice has been
"RTN","FBAAIAR1",173,0)
 ; cancelled, rejected, purged or voided or some combination
"RTN","FBAAIAR1",174,0)
 ; Input:       PATIEN  - Patient IEN
"RTN","FBAAIAR1",175,0)
 ;              VENIEN  - Vendor IEN
"RTN","FBAAIAR1",176,0)
 ;              IDTIEN  - Initial Treatment Date IEN
"RTN","FBAAIAR1",177,0)
 ;              SVCIEN  - Service Provided IEN
"RTN","FBAAIAR1",178,0)
 ;              INV0    - 0 node of the outpatient invoice
"RTN","FBAAIAR1",179,0)
 ;              INV2    - 2 node of the outpatient invoice
"RTN","FBAAIAR1",180,0)
 ; Returns:     V       - Voided
"RTN","FBAAIAR1",181,0)
 ;              C       - Cancelled
"RTN","FBAAIAR1",182,0)
 ;              R       - Rejected
"RTN","FBAAIAR1",183,0)
 ;              P       - Purged
"RTN","FBAAIAR1",184,0)
 ;              ""      - Otherwise
"RTN","FBAAIAR1",185,0)
 ;              or any combination of C/V/R/P
"RTN","FBAAIAR1",186,0)
 ; Called From: ROWDATAO
"RTN","FBAAIAR1",187,0)
 N VAL
"RTN","FBAAIAR1",188,0)
 S VAL=""
"RTN","FBAAIAR1",189,0)
 S:$D(^FBAAC(PATIEN,1,VENIEN,1,IDTIEN,1,SVCIEN,"FBREJC")) VAL="R"    ; Rejected
"RTN","FBAAIAR1",190,0)
 S:$D(^FBAAC(PATIEN,"PURGE",VENIEN,0)) VAL=VAL_"P"      ; Purged
"RTN","FBAAIAR1",191,0)
 S:$P(INV2,U,4)'="" VAL=VAL_"C"                         ; Cancelled
"RTN","FBAAIAR1",192,0)
 S:$P(INV0,U,21)'="" VAL=VAL_"V"                        ; Voided
"RTN","FBAAIAR1",193,0)
 Q VAL
"RTN","FBAAIAR1",194,0)
 ;
"RTN","FBAAIAR1",195,0)
COMPIN(FBDODINV)    ; Compile Inpatient Invoice data
"RTN","FBAAIAR1",196,0)
 ; Input:       FBDODINV                - DoD Invoice number to use for selection
"RTN","FBAAIAR1",197,0)
 ;              ^TMP("FAAIAR1",$J)      - Current temporary file
"RTN","FBAAIAR1",198,0)
 ; Output:      ^TMP("FAAIAR1",$J)      - Updated with VistA Invoice data
"RTN","FBAAIAR1",199,0)
 ; Called From: COMPILE
"RTN","FBAAIAR1",200,0)
 ;
"RTN","FBAAIAR1",201,0)
 N DATA,INIEN,INVNUM,INV0,INV2,INV5,ITYPE,VNAME,XX
"RTN","FBAAIAR1",202,0)
 S INIEN=""
"RTN","FBAAIAR1",203,0)
 F  D  Q:INIEN=""                                       ; Inpatient Invoice by DoD Invoice #
"RTN","FBAAIAR1",204,0)
 . S INIEN=$O(^FBAAI("DODI",FBDODINV,INIEN))
"RTN","FBAAIAR1",205,0)
 . Q:INIEN=""
"RTN","FBAAIAR1",206,0)
 . S INV0=$G(^FBAAI(INIEN,0))
"RTN","FBAAIAR1",207,0)
 . S INV2=$G(^FBAAI(INIEN,2))
"RTN","FBAAIAR1",208,0)
 . S INV5=$G(^FBAAI(INIEN,5))
"RTN","FBAAIAR1",209,0)
 . S XX=+$P(INV0,U,3)                                   ; Vendor IEN
"RTN","FBAAIAR1",210,0)
 . S VNAME=$P($G(^FBAAV(XX,0)),U,1)                     ; Vendor Name
"RTN","FBAAIAR1",211,0)
 . S INVNUM=$P(INV0,U,1)                                ; VistA Invoice #
"RTN","FBAAIAR1",212,0)
 . S DATA=$$GETTYPEI(INIEN,INV0,INV2)                   ; Type of Record
"RTN","FBAAIAR1",213,0)
 . S $P(DATA,U,2)=$P(INV2,U,1)                          ; Date Paid
"RTN","FBAAIAR1",214,0)
 . S $P(DATA,U,3)=$P(INV0,U,8)                          ; Amount Claimed
"RTN","FBAAIAR1",215,0)
 . S $P(DATA,U,4)=$P(INV0,U,9)                          ; Amount Paid
"RTN","FBAAIAR1",216,0)
 . S $P(DATA,U,5)=$P(INV0,U,10)                         ; Amount Adjusted
"RTN","FBAAIAR1",217,0)
 . S ^TMP("FBAAIAR1",$J,VNAME,"INP",INVNUM,0)=DATA      ; VistA invoice data for invoice
"RTN","FBAAIAR1",218,0)
 . D TOTS(VNAME,"INP",INVNUM,DATA)                      ; Gather totals for invoice
"RTN","FBAAIAR1",219,0)
 Q
"RTN","FBAAIAR1",220,0)
 ;
"RTN","FBAAIAR1",221,0)
GETTYPEI(INVIEN,INV0,INV2) ; Determines if the inpatient invoice has been
"RTN","FBAAIAR1",222,0)
 ; cancelled, rejected or voided or some combination
"RTN","FBAAIAR1",223,0)
 ; Input:       INVIEN  - IEN of the inpatient invoice
"RTN","FBAAIAR1",224,0)
 ;              INV0    - 0 node of the inpatient invoice
"RTN","FBAAIAR1",225,0)
 ;              INV2    - 2 node of the inpatient invoice
"RTN","FBAAIAR1",226,0)
 ;              INV5    - 5 node of the inpatient invoice
"RTN","FBAAIAR1",227,0)
 ; Returns:     V       - Voided
"RTN","FBAAIAR1",228,0)
 ;              C       - Cancelled
"RTN","FBAAIAR1",229,0)
 ;              R       - Rejected
"RTN","FBAAIAR1",230,0)
 ;              ""      - Otherwise
"RTN","FBAAIAR1",231,0)
 ;              or any combination of C/V/R
"RTN","FBAAIAR1",232,0)
 ; Called From: COMPIN
"RTN","FBAAIAR1",233,0)
 N VAL
"RTN","FBAAIAR1",234,0)
 S VAL=""
"RTN","FBAAIAR1",235,0)
 S:$D(^FBAAI(INVIEN,"FBREJ")) VAL="R"                   ; Rejected
"RTN","FBAAIAR1",236,0)
 S:$P(INV2,U,5)'="" VAL=VAL_"C"                         ; Cancelled
"RTN","FBAAIAR1",237,0)
 S:$P(INV0,U,14)'="" VAL=VAL_"V"                        ; Voided
"RTN","FBAAIAR1",238,0)
 Q VAL
"RTN","FBAAIAR1",239,0)
 ;
"RTN","FBAAIAR1",240,0)
COMPRX(FBDODINV)    ; Compile Pharmacy invoice data
"RTN","FBAAIAR1",241,0)
 ; Input:       FBDODINV                - DoD Invoice number to use for selection
"RTN","FBAAIAR1",242,0)
 ;              ^TMP("FAAIAR1",$J)      - Current temporary file
"RTN","FBAAIAR1",243,0)
 ; Output:      ^TMP("FAAIAR1",$J)      - Updated with VistA Invoice data
"RTN","FBAAIAR1",244,0)
 ; Called From: COMPILE
"RTN","FBAAIAR1",245,0)
 ;
"RTN","FBAAIAR1",246,0)
 N AMTA,AMTC,AMTP,DATA,DATEP,INVNUM,INV0,INV2,ITYPE,ITYPE2
"RTN","FBAAIAR1",247,0)
 N PHIEN,RXIEN,RXINV,VNAME,XX
"RTN","FBAAIAR1",248,0)
 S PHIEN="",DATEP="",ITYPE2=""
"RTN","FBAAIAR1",249,0)
 F  D  Q:PHIEN=""                                       ; Pharmacy Invoice by DoD Invoice #
"RTN","FBAAIAR1",250,0)
 . S PHIEN=$O(^FBAA(162.1,"DODI",FBDODINV,PHIEN))
"RTN","FBAAIAR1",251,0)
 . Q:PHIEN=""
"RTN","FBAAIAR1",252,0)
 . S (AMTA,AMTC,AMTP)=0                                 ; Init amount tots for invoice
"RTN","FBAAIAR1",253,0)
 . S RXINV=$G(^FBAA(162.1,PHIEN,0))                     ; Invoice level data
"RTN","FBAAIAR1",254,0)
 . S XX=+$P(RXINV,U,4)                                  ; Vendor IEN
"RTN","FBAAIAR1",255,0)
 . S VNAME=$P($G(^FBAAV(XX,0)),U,1)                     ; Vendor name
"RTN","FBAAIAR1",256,0)
 . S INVNUM=$P(RXINV,U,1)                               ; VistA Invoice #
"RTN","FBAAIAR1",257,0)
 . S RXIEN=""
"RTN","FBAAIAR1",258,0)
 . F  D  Q:RXIEN=""                                     ; Prescription level
"RTN","FBAAIAR1",259,0)
 . . S RXIEN=$O(^FBAA(162.1,"DODI",FBDODINV,PHIEN,RXIEN))
"RTN","FBAAIAR1",260,0)
 . . Q:RXIEN=""
"RTN","FBAAIAR1",261,0)
 . . S INV0=$G(^FBAA(162.1,PHIEN,"RX",RXIEN,0))         ; Prescription 0 Node
"RTN","FBAAIAR1",262,0)
 . . S INV2=$G(^FBAA(162.1,PHIEN,"RX",RXIEN,2))         ; Prescription 2 Node
"RTN","FBAAIAR1",263,0)
 . . D GETTYPEP(PHIEN,RXIEN,INV2,.ITYPE2)               ; Type of Pharmacy Record
"RTN","FBAAIAR1",264,0)
 . . S XX=$P(INV2,U,8)                                  ; Date Paid
"RTN","FBAAIAR1",265,0)
 . . S DATEP=$S(DATEP="":XX,XX<DATEP:XX,1:DATEP)        ; Find the lowest date paid
"RTN","FBAAIAR1",266,0)
 . . S AMTC=AMTC+$P(INV0,U,4)                           ; Amount Claimed
"RTN","FBAAIAR1",267,0)
 . . S AMTP=AMTP+$P(INV0,U,16)                          ; Amount Paid
"RTN","FBAAIAR1",268,0)
 . . S AMTA=AMTA+$P(INV0,U,7)                           ; Amount Adjusted
"RTN","FBAAIAR1",269,0)
 . S DATA=ITYPE2                                        ; Pharmacy Invoice Void/Cancel/Reject
"RTN","FBAAIAR1",270,0)
 . S $P(DATA,U,2)=DATEP                                 ; Lowest date paid
"RTN","FBAAIAR1",271,0)
 . S $P(DATA,U,3)=AMTC                                  ; Total Amount claimed for Invoice
"RTN","FBAAIAR1",272,0)
 . S $P(DATA,U,4)=AMTP                                  ; Total Amount paid for Invoice
"RTN","FBAAIAR1",273,0)
 . S $P(DATA,U,5)=AMTA                                  ; Total Amount adjusted for Invoice
"RTN","FBAAIAR1",274,0)
 . S ^TMP("FBAAIAR1",$J,VNAME,"RX",INVNUM,0)=DATA       ; VistA invoice data for invoice
"RTN","FBAAIAR1",275,0)
 . D TOTS(VNAME,"RX",INVNUM,DATA)                       ; Gather totals for DoD invoice#
"RTN","FBAAIAR1",276,0)
 Q
"RTN","FBAAIAR1",277,0)
 ;
"RTN","FBAAIAR1",278,0)
GETTYPEP(PHIEN,RXIEN,INV2,ITYPE) ; Determines if the pharmacy invoice has any
"RTN","FBAAIAR1",279,0)
 ; cancelled, rejected or voided prescriptions.
"RTN","FBAAIAR1",280,0)
 ; Input:       PHIEN   - IEN of the pharmacy invoice
"RTN","FBAAIAR1",281,0)
 ;              RXIEN   - Prescription IEN
"RTN","FBAAIAR1",282,0)
 ;              INV2    - 2 node of the pharmacy prescription invoice
"RTN","FBAAIAR1",283,0)
 ;              ITYPE   - Current value for the pharmacy invoice
"RTN","FBAAIAR1",284,0)
 ; Output:      ITYPE   - Updated value for the pharmacy invoice
"RTN","FBAAIAR1",285,0)
 ; Called From: COMPRX
"RTN","FBAAIAR1",286,0)
 I $D(^FBAA(162.1,PHIEN,"RX",RXIEN,"FBREJ")) D          ; Rejected
"RTN","FBAAIAR1",287,0)
 . S ITYPE=$S(ITYPE'["R":ITYPE_"R",1:ITYPE)
"RTN","FBAAIAR1",288,0)
 I $P(INV2,U,11)'="" D  Q                               ; Cancelled
"RTN","FBAAIAR1",289,0)
 . S ITYPE=$S(ITYPE'["C":ITYPE_"C",1:ITYPE)
"RTN","FBAAIAR1",290,0)
 I $P(INV2,U,3)'="" D  Q                                ; Voided
"RTN","FBAAIAR1",291,0)
 . S ITYPE=$S(ITYPE'["V":ITYPE_"V",1:ITYPE)
"RTN","FBAAIAR1",292,0)
 Q
"RTN","FBAAIAR1",293,0)
 ;
"RTN","FBAAIAR1",294,0)
TOTS(VNAME,TYPE,INVNUM,DATA) ; Gather totals and other data for all invoices for
"RTN","FBAAIAR1",295,0)
 ; the specified DoD invoice#. Update the scratch global with information
"RTN","FBAAIAR1",296,0)
 ; Input:       VNAME                               - Vendor Name
"RTN","FBAAIAR1",297,0)
 ;              TYPE                                - "OUT" - Outpatient Invoice
"RTN","FBAAIAR1",298,0)
 ;                                                    "ANC" - Inpatient Ancillary Invoice
"RTN","FBAAIAR1",299,0)
 ;                                                    "INP" - Inpatient Invoice
"RTN","FBAAIAR1",300,0)
 ;                                                    "RX"  - Pharmacy Invoice
"RTN","FBAAIAR1",301,0)
 ;              INVNUM                              - VistA Invoice Number
"RTN","FBAAIAR1",302,0)
 ;              DATA                                - ^TMP("FBAAIAR1",$J,VNAME,TYPE,INVNUM)
"RTN","FBAAIAR1",303,0)
 ;              ^TMP("FBAAIAR1",$J,VNAME)           - Current DoD Invoice Vendor totals
"RTN","FBAAIAR1",304,0)
 ;              ^TMP("FBAAIAR1",$J,VNAME,TYPE)      - Current Type totals
"RTN","FBAAIAR1",305,0)
 ; Output:      ^TMP("FBAAIAR1",$J,VNAME)           - Updated DoD Invoice Vendor totals
"RTN","FBAAIAR1",306,0)
 ;              ^TMP("FBAAIAR1",$J,VNAME,TYPE)      - Updated Type totals
"RTN","FBAAIAR1",307,0)
 ; Called From: COMPIN, COMPOUT, COMPRX
"RTN","FBAAIAR1",308,0)
 ;
"RTN","FBAAIAR1",309,0)
 N CURTOT
"RTN","FBAAIAR1",310,0)
 S CURTOT=$G(^TMP("FBAAIAR1",$J,VNAME))                 ; Current DoD Invoice Vendor totals
"RTN","FBAAIAR1",311,0)
 S $P(CURTOT,U,1)=$P(DATA,U,3)+$P(CURTOT,U,1)           ; New Claimed Total
"RTN","FBAAIAR1",312,0)
 S $P(CURTOT,U,2)=$P(DATA,U,4)+$P(CURTOT,U,2)           ; New Paid Total
"RTN","FBAAIAR1",313,0)
 S $P(CURTOT,U,3)=$P(DATA,U,5)+$P(CURTOT,U,3)           ; New Adjustment Total
"RTN","FBAAIAR1",314,0)
 S $P(CURTOT,U,4)=$P(CURTOT,U,4)+1                      ; New Invoice count
"RTN","FBAAIAR1",315,0)
 S ^TMP("FBAAIAR1",$J,VNAME)=CURTOT
"RTN","FBAAIAR1",316,0)
 S CURTOT=$G(^TMP("FBAAIAR1",$J,VNAME,TYPE))            ; Current DoD Invoice Vendor totals by type
"RTN","FBAAIAR1",317,0)
 S $P(CURTOT,U,1)=$P(DATA,U,3)+$P(CURTOT,U,1)           ; New Claimed Total
"RTN","FBAAIAR1",318,0)
 S $P(CURTOT,U,2)=$P(DATA,U,4)+$P(CURTOT,U,2)           ; New Paid Total
"RTN","FBAAIAR1",319,0)
 S $P(CURTOT,U,3)=$P(DATA,U,5)+$P(CURTOT,U,3)           ; New Adjustment Total
"RTN","FBAAIAR1",320,0)
 S $P(CURTOT,U,4)=$P(CURTOT,U,4)+1                      ; New Invoice count by type
"RTN","FBAAIAR1",321,0)
 S ^TMP("FBAAIAR1",$J,VNAME,TYPE)=CURTOT
"RTN","FBAAIAR1",322,0)
 Q
"RTN","FBAAIAR1",323,0)
 ;
"RTN","FBAAIAR2")
0^43^B60901930^n/a
"RTN","FBAAIAR2",1,0)
FBAAIAR2 ;ALB/FA - Fee IPAC Vendor DoD Invoice Inquiry Report Print ;1/16/2014
"RTN","FBAAIAR2",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIAR2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIAR2",4,0)
 ;
"RTN","FBAAIAR2",5,0)
 ; Scratch global built by FBAAIAR.
"RTN","FBAAIAR2",6,0)
 ; Type  - 'O'utpatient,'I'npatient,Inpatient 'A'ncillary, 'P'harmacy
"RTN","FBAAIAR2",7,0)
 ; XX    - Unique identifier to allow for multiple Outpatient/Ancillary payments on the
"RTN","FBAAIAR2",8,0)
 ;         same invoice. 0 for Inpatient or Pharmacy
"RTN","FBAAIAR2",9,0)
 ; ^TMP("FBAAIAR1",$J, Vendor Name,Type,VistA Invoice#) = A1^A2^A3^...^A5 Where:
"RTN","FBAAIAR2",10,0)
 ;         A1 - Type of Record (Cancelled, Void, Reject, Purge, "", or some combination)
"RTN","FBAAIAR2",11,0)
 ;         A2 - Date Paid  (Fileman format)
"RTN","FBAAIAR2",12,0)
 ;         A3 - Total amount claimed
"RTN","FBAAIAR2",13,0)
 ;         A4 - Total amount paid
"RTN","FBAAIAR2",14,0)
 ;         A5 - Total adjustment amount
"RTN","FBAAIAR2",15,0)
 ; ^TMP("FBAAIAR1",$J,Vendor Name) = A1^A2^...^A4 Where:
"RTN","FBAAIAR2",16,0)
 ;         A1 - Total amount claimed for DoD Invoice Vendor
"RTN","FBAAIAR2",17,0)
 ;         A2 - Total amount paid for DoD Invoice Vendor
"RTN","FBAAIAR2",18,0)
 ;         A3 - Total adjustment amount DoD Invoice Vendor
"RTN","FBAAIAR2",19,0)
 ;         A4 - Total number of invoices for the DoD Invoice Vendor
"RTN","FBAAIAR2",20,0)
 ; ^TMP("FBAAIAR1",$J,Vendor Name, Type) = A1^A2^...^A4 Where:
"RTN","FBAAIAR2",21,0)
 ;         A1 - Total amount claimed for DoD Invoice Vendor by type
"RTN","FBAAIAR2",22,0)
 ;         A2 - Total amount paid for DoD Invoice Vendor by type
"RTN","FBAAIAR2",23,0)
 ;         A3 - Total adjustment amount DoD Invoice Vendor by type
"RTN","FBAAIAR2",24,0)
 ;         A4 - Total number of invoices for the DoD Invoice Vendor by type
"RTN","FBAAIAR2",25,0)
 ;
"RTN","FBAAIAR2",26,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAR2",27,0)
 ;                           Entry Points
"RTN","FBAAIAR2",28,0)
 ; PRINT  - DoD Invoice Inquiry Report - PRINT report
"RTN","FBAAIAR2",29,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAR2",30,0)
 ;
"RTN","FBAAIAR2",31,0)
 Q
"RTN","FBAAIAR2",32,0)
 ;
"RTN","FBAAIAR2",33,0)
PRINT(FBDODINV,FBFORMAT)    ;EP
"RTN","FBAAIAR2",34,0)
 ; Entry point for printing the report
"RTN","FBAAIAR2",35,0)
 ; Input:       FBDODINV            - Selected DoD Invoice number
"RTN","FBAAIAR2",36,0)
 ;              FBFORMAT            - 1 - CSV format, 0 otherwise
"RTN","FBAAIAR2",37,0)
 ;              ZTQUEUE             - Defined if report was queued
"RTN","FBAAIAR2",38,0)
 ;                                    undefined otherwise
"RTN","FBAAIAR2",39,0)
 ;              ZSTOP               - Defined and 1 if compilation was stopped
"RTN","FBAAIAR2",40,0)
 ;                                    0 or undefined otherwise
"RTN","FBAAIAR2",41,0)
 ;              ^TMP("FBAAIAR1",$J) - Described in full above
"RTN","FBAAIAR2",42,0)
 ; Output:      Report is printed
"RTN","FBAAIAR2",43,0)
 ; Called From: COMPILE@FBAAIAR1
"RTN","FBAAIAR2",44,0)
 ;
"RTN","FBAAIAR2",45,0)
 N CRT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,INVDOD,FBIASTOP,IDATA,ITYPE,INVNUM
"RTN","FBAAIAR2",46,0)
 N LVNAME,PAGE,SEPLINE,VNAME,X,XX,Y
"RTN","FBAAIAR2",47,0)
 S LVNAME="",VNAME=""
"RTN","FBAAIAR2",48,0)
 S CRT=$S(IOST["C-":1,1:0)                      ; 1 - Print to Screen, 0 - Otherwise
"RTN","FBAAIAR2",49,0)
 S:FBFORMAT IOSL=999999                         ; Long screen length for Excel output
"RTN","FBAAIAR2",50,0)
 S PAGE=0,FBIASTOP=0,$P(SEPLINE,"-",81)=""
"RTN","FBAAIAR2",51,0)
 I '$D(^TMP("FBAAIAR1",$J)) D  Q                ; No data was compiled
"RTN","FBAAIAR2",52,0)
 . D HDR(FBDODINV,VNAME,CRT,.PAGE,.FBIASTOP)
"RTN","FBAAIAR2",53,0)
 . W !!?5,"No data found for this report."
"RTN","FBAAIAR2",54,0)
 . I CRT,'$D(ZTQUEUED) D
"RTN","FBAAIAR2",55,0)
 . . S DIR(0)="E"
"RTN","FBAAIAR2",56,0)
 . . D ^DIR
"RTN","FBAAIAR2",57,0)
 ;
"RTN","FBAAIAR2",58,0)
 I $G(ZTSTOP) D  Q                              ; Compilation was halted
"RTN","FBAAIAR2",59,0)
 . D HDR(FBDODINV,VNAME,CRT,.PAGE,.FBIASTOP)
"RTN","FBAAIAR2",60,0)
 . W !!?5,"This report was halted during compilation by TaskManager Request."
"RTN","FBAAIAR2",61,0)
 . I CRT,'$D(ZTQUEUED) D
"RTN","FBAAIAR2",62,0)
 . . S DIR(0)="E"
"RTN","FBAAIAR2",63,0)
 . . D ^DIR
"RTN","FBAAIAR2",64,0)
 ;
"RTN","FBAAIAR2",65,0)
 ; Gather headers for excel spreadsheet
"RTN","FBAAIAR2",66,0)
 D:FBFORMAT HDR(FBDODINV,"",CRT,.PAGE,.FBIASTOP)
"RTN","FBAAIAR2",67,0)
 Q:FBIASTOP
"RTN","FBAAIAR2",68,0)
 ;
"RTN","FBAAIAR2",69,0)
 S VNAME=""
"RTN","FBAAIAR2",70,0)
 F  D  Q:(VNAME="")!(FBIASTOP)
"RTN","FBAAIAR2",71,0)
 . S VNAME=$O(^TMP("FBAAIAR1",$J,VNAME))
"RTN","FBAAIAR2",72,0)
 . Q:VNAME=""
"RTN","FBAAIAR2",73,0)
 . S LVNAME=VNAME
"RTN","FBAAIAR2",74,0)
 . ;
"RTN","FBAAIAR2",75,0)
 . ; Display header if not in CSV format
"RTN","FBAAIAR2",76,0)
 . D:'FBFORMAT HDR(FBDODINV,VNAME,CRT,.PAGE,.FBIASTOP)
"RTN","FBAAIAR2",77,0)
 . S ITYPE=""
"RTN","FBAAIAR2",78,0)
 . F  D  Q:(ITYPE="")!(FBIASTOP)
"RTN","FBAAIAR2",79,0)
 . . S ITYPE=$O(^TMP("FBAAIAR1",$J,VNAME,ITYPE))
"RTN","FBAAIAR2",80,0)
 . . Q:(ITYPE="")!FBIASTOP
"RTN","FBAAIAR2",81,0)
 . . S INVNUM=""
"RTN","FBAAIAR2",82,0)
 . . F  D  Q:(INVNUM="")!(FBIASTOP)
"RTN","FBAAIAR2",83,0)
 . . . S INVNUM=$O(^TMP("FBAAIAR1",$J,VNAME,ITYPE,INVNUM))
"RTN","FBAAIAR2",84,0)
 . . . Q:(INVNUM="")!FBIASTOP
"RTN","FBAAIAR2",85,0)
 . . . S XX=""
"RTN","FBAAIAR2",86,0)
 . . . F  D  Q:(XX="")!(FBIASTOP)
"RTN","FBAAIAR2",87,0)
 . . . . S XX=$O(^TMP("FBAAIAR1",$J,VNAME,ITYPE,INVNUM,XX))
"RTN","FBAAIAR2",88,0)
 . . . . Q:XX=""
"RTN","FBAAIAR2",89,0)
 . . . . S IDATA=$G(^TMP("FBAAIAR1",$J,VNAME,ITYPE,INVNUM,XX))
"RTN","FBAAIAR2",90,0)
 . . . . ;
"RTN","FBAAIAR2",91,0)
 . . . . ; Excel output - Print a CSV format record
"RTN","FBAAIAR2",92,0)
 . . . . I FBFORMAT D EXCELN(ITYPE,INVNUM,IDATA) Q
"RTN","FBAAIAR2",93,0)
 . . . . ;
"RTN","FBAAIAR2",94,0)
 . . . . I $Y+4>IOSL,'FBFORMAT D  Q:FBIASTOP                      ; Page break check
"RTN","FBAAIAR2",95,0)
 . . . . . D HDR(FBDODINV,VNAME,CRT,.PAGE,.FBIASTOP)
"RTN","FBAAIAR2",96,0)
 . . . . W !,$$LJ^XLFSTR(INVNUM,22)                               ; VistA Invoice#
"RTN","FBAAIAR2",97,0)
 . . . . W ?25,$$RJ^XLFSTR(ITYPE,4)                               ; Record Type
"RTN","FBAAIAR2",98,0)
 . . . . W ?32,$P(IDATA,U,1)                                      ; C/V/R
"RTN","FBAAIAR2",99,0)
 . . . . W ?40,$$LJ^XLFSTR($$FMTE^XLFDT($P(IDATA,U,2),"2DZ"),10)  ; Paid Date
"RTN","FBAAIAR2",100,0)
 . . . . W ?50,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,3),"",0),8)         ; Amount Claimed
"RTN","FBAAIAR2",101,0)
 . . . . W ?60,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,4),"",0),8)         ; Amount Paid
"RTN","FBAAIAR2",102,0)
 . . . . W ?70,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,5),"",0),8)         ; Adjustment Amount
"RTN","FBAAIAR2",103,0)
 . . ;
"RTN","FBAAIAR2",104,0)
 . . Q:FBIASTOP
"RTN","FBAAIAR2",105,0)
 . . D:'FBFORMAT TYPETOT(FBDODINV,VNAME,FBFORMAT,ITYPE,.PAGE,.FBIASTOP) ; Totals by record type
"RTN","FBAAIAR2",106,0)
 . ;
"RTN","FBAAIAR2",107,0)
 . Q:FBIASTOP
"RTN","FBAAIAR2",108,0)
 . D:'FBFORMAT VTOT(FBDODINV,VNAME,FBFORMAT,.PAGE,.FBIASTOP)    ; Totals by DoD Invoice
"RTN","FBAAIAR2",109,0)
 Q:FBIASTOP
"RTN","FBAAIAR2",110,0)
 ;
"RTN","FBAAIAR2",111,0)
 I $Y+1>IOSL,'FBFORMAT D  Q:FBIASTOP                            ; Page break check
"RTN","FBAAIAR2",112,0)
 . D HDR(FBDODINV,LVNAME,CRT,.PAGE,.FBIASTOP)
"RTN","FBAAIAR2",113,0)
 W !!?5,"*** End of Report ***"
"RTN","FBAAIAR2",114,0)
 ;
"RTN","FBAAIAR2",115,0)
 I CRT,'$D(ZTQUEUED) D
"RTN","FBAAIAR2",116,0)
 . S DIR(0)="E"
"RTN","FBAAIAR2",117,0)
 . D ^DIR
"RTN","FBAAIAR2",118,0)
 Q
"RTN","FBAAIAR2",119,0)
 ;
"RTN","FBAAIAR2",120,0)
VTOT(FBDODINV,VNAME,FBFORMAT,PAGE,FBIASTOP) ; Print the totals by Dod Invoice Vendor
"RTN","FBAAIAR2",121,0)
 ; Input:       FBDODINV            - DoD Invoice report was compiled for
"RTN","FBAAIAR2",122,0)
 ;              VNAME               - Name of the 
"RTN","FBAAIAR2",123,0)
 ;              FBFORMAT            - 0 - CSV format (for Excel), 0 otherwise
"RTN","FBAAIAR2",124,0)
 ;              PAGE                - Current page number
"RTN","FBAAIAR2",125,0)
 ;              FBIASTOP            - Stop flag
"RTN","FBAAIAR2",126,0)
 ;              ^TMP("FBAAIAR1",$J) - Compiled report data
"RTN","FBAAIAR2",127,0)
 ; Output:      FBIASTOP            - 1 - user stopped printing, 0 otherwise
"RTN","FBAAIAR2",128,0)
 ;              DoD Invoice Type Totals are printed
"RTN","FBAAIAR2",129,0)
 ; Called From: PRINT
"RTN","FBAAIAR2",130,0)
 N IDATA
"RTN","FBAAIAR2",131,0)
 I $Y+5>IOSL,'FBFORMAT D  Q:FBIASTOP                ; Page break check
"RTN","FBAAIAR2",132,0)
 . D HDR(FBDODINV,VNAME,CRT,.PAGE,.FBIASTOP)
"RTN","FBAAIAR2",133,0)
 S IDATA=^TMP("FBAAIAR1",$J,VNAME)                  ; DoD Invoice Type Totals
"RTN","FBAAIAR2",134,0)
 W !?1,"$Totals for Vendor: ",VNAME
"RTN","FBAAIAR2",135,0)
 W !,"---------",?50,"--------  --------  --------"
"RTN","FBAAIAR2",136,0)
 W !,"# ",$$RJ^XLFSTR($P(IDATA,U,4),7)              ; Total Number of Invoices
"RTN","FBAAIAR2",137,0)
 W ?50,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,1),"",0),8)   ; Total Amount Claimed
"RTN","FBAAIAR2",138,0)
 W ?60,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,2),"",0),8)   ; Total Amount Paid
"RTN","FBAAIAR2",139,0)
 W ?70,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,3),"",0),8)   ; Total Adjustment Amount
"RTN","FBAAIAR2",140,0)
 Q
"RTN","FBAAIAR2",141,0)
 ;
"RTN","FBAAIAR2",142,0)
TYPETOT(FBDODINV,VNAME,FBFORMAT,ITYPE,PAGE,FBIASTOP) ; Print the totals by Invoice type
"RTN","FBAAIAR2",143,0)
 ; Input:       FBDODINV            - DoD Invoice report was compiled for
"RTN","FBAAIAR2",144,0)
 ;              VNAME               - Name of the 
"RTN","FBAAIAR2",145,0)
 ;              FBFORMAT            - 0 - CSV format (for Excel), 0 otherwise
"RTN","FBAAIAR2",146,0)
 ;              ITYPE               - Invoice Type to print totals for
"RTN","FBAAIAR2",147,0)
 ;              PAGE                - Current page number
"RTN","FBAAIAR2",148,0)
 ;              IASTOP              - Stop flag
"RTN","FBAAIAR2",149,0)
 ;              ^TMP($J,"FBAAIAR1") - Compiled report data
"RTN","FBAAIAR2",150,0)
 ; Output:      IASTOP              - 1 - user stopped printing, 0 otherwise
"RTN","FBAAIAR2",151,0)
 ;              Invoice Type Totals are printed
"RTN","FBAAIAR2",152,0)
 ; Called From: PRINT
"RTN","FBAAIAR2",153,0)
 N ETYPE,IDATA
"RTN","FBAAIAR2",154,0)
 I $Y+5>IOSL,'FBFORMAT D  Q:FBIASTOP                ; Page break check
"RTN","FBAAIAR2",155,0)
 . D HDR(FBDODINV,CRT,.PAGE,.FBIASTOP)
"RTN","FBAAIAR2",156,0)
 S ETYPE=$S(ITYPE="ANC":"Inpatient Ancillary",ITYPE="INP":"Inpatient",ITYPE="OUT":"Outpatient",1:"Pharmacy")
"RTN","FBAAIAR2",157,0)
 S IDATA=^TMP("FBAAIAR1",$J,VNAME,ITYPE)            ; Invoice Type Totals
"RTN","FBAAIAR2",158,0)
 W !?1,"$Totals for DoD Invoice # by Type: ",ETYPE
"RTN","FBAAIAR2",159,0)
 W !?25,"----  ",?50,"--------  --------  --------"
"RTN","FBAAIAR2",160,0)
 W !?20,"Tot# ",$$RJ^XLFSTR($P(IDATA,U,4),4)        ; Total Number of Invoices by Type
"RTN","FBAAIAR2",161,0)
 W ?50,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,1),"",0),8)   ; Total Amount Claimed
"RTN","FBAAIAR2",162,0)
 W ?60,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,2),"",0),8)   ; Total Amount Paid
"RTN","FBAAIAR2",163,0)
 W ?70,$$RJ^XLFSTR("$"_$FN($P(IDATA,U,3),"",0),8)   ; Total Adjustment Amount
"RTN","FBAAIAR2",164,0)
 W !
"RTN","FBAAIAR2",165,0)
 Q
"RTN","FBAAIAR2",166,0)
 ;
"RTN","FBAAIAR2",167,0)
EXCELN(ITYPE,INVNUM,DATA) ; Output one Excel line
"RTN","FBAAIAR2",168,0)
 ; Input:       ITYPE       - Invoice record type
"RTN","FBAAIAR2",169,0)
 ;              INVNUM      - VistA Invoice number
"RTN","FBAAIAR2",170,0)
 ;              DATA        - Invoice data
"RTN","FBAAIAR2",171,0)
 ; Output:      One line of invoice data is output in excel format
"RTN","FBAAIAR2",172,0)
 ; Called From: PRINT
"RTN","FBAAIAR2",173,0)
 N FBZ
"RTN","FBAAIAR2",174,0)
 S FBZ=$$CSV("",INVNUM)                             ; VistA Invoice Number
"RTN","FBAAIAR2",175,0)
 S FBZ=$$CSV(FBZ,ITYPE)                             ; Invoice Record Type
"RTN","FBAAIAR2",176,0)
 S FBZ=$$CSV(FBZ,$P(DATA,U,1))                      ; C/V/R
"RTN","FBAAIAR2",177,0)
 S FBZ=$$CSV(FBZ,$$FMTE^XLFDT($P(DATA,U,2),"2DZ"))  ; Date Paid
"RTN","FBAAIAR2",178,0)
 S FBZ=$$CSV(FBZ,$FN($P(DATA,U,3),"",0))            ; Amount Claimed
"RTN","FBAAIAR2",179,0)
 S FBZ=$$CSV(FBZ,$FN($P(DATA,U,4),"",0))            ; Amount Paid
"RTN","FBAAIAR2",180,0)
 S FBZ=$$CSV(FBZ,$FN($P(DATA,U,5),"",0))            ; Adjustment Amount
"RTN","FBAAIAR2",181,0)
 W !,FBZ
"RTN","FBAAIAR2",182,0)
 Q
"RTN","FBAAIAR2",183,0)
 ;
"RTN","FBAAIAR2",184,0)
HDR(FBDODINV,VNAME,CRT,PAGE,IASTOP)  ; Print the Report Header
"RTN","FBAAIAR2",185,0)
 ; Input:       FBDODINV    - DoD Invoice Number
"RTN","FBAAIAR2",186,0)
 ;              VNAME       - Name of the Vendor associated with the DoD Invoice
"RTN","FBAAIAR2",187,0)
 ;              CRT         - 1 - Print to screen, 0 otherwise
"RTN","FBAAIAR2",188,0)
 ;              PAGE        - Current page count
"RTN","FBAAIAR2",189,0)
 ;              IASTOP      - Stop flag
"RTN","FBAAIAR2",190,0)
 ;              ZTQUEUED    - Defined if report was queued
"RTN","FBAAIAR2",191,0)
 ;                            undefined otherwise
"RTN","FBAAIAR2",192,0)
 ; Output:      PAGE        - Updated page count
"RTN","FBAAIAR2",193,0)
 ;              IASTOP      - 1 - user stopped printing, 0 otherwise
"RTN","FBAAIAR2",194,0)
 ;              ZSTOP       - Defined and 1 if a task manager stop was received
"RTN","FBAAIAR2",195,0)
 ;                            0 or undefined otherwise
"RTN","FBAAIAR2",196,0)
 ;
"RTN","FBAAIAR2",197,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,VENID,X,Y,Z
"RTN","FBAAIAR2",198,0)
 ;
"RTN","FBAAIAR2",199,0)
 ; Do an end of page reader call if page# exists and device is the screen
"RTN","FBAAIAR2",200,0)
 I PAGE,CRT D  Q:FBIASTOP
"RTN","FBAAIAR2",201,0)
 . S DIR(0)="E"
"RTN","FBAAIAR2",202,0)
 . D ^DIR K DIR
"RTN","FBAAIAR2",203,0)
 . S:'Y FBIASTOP=1
"RTN","FBAAIAR2",204,0)
 ;
"RTN","FBAAIAR2",205,0)
 ; If screen output or page# exists, do a form feed and left margin reset
"RTN","FBAAIAR2",206,0)
 I PAGE!CRT D
"RTN","FBAAIAR2",207,0)
 . W @IOF,$C(13)
"RTN","FBAAIAR2",208,0)
 ;
"RTN","FBAAIAR2",209,0)
 S PAGE=PAGE+1                                  ; Increment Page #
"RTN","FBAAIAR2",210,0)
 ;
"RTN","FBAAIAR2",211,0)
 ; For Excel CSV format, display the column headers only
"RTN","FBAAIAR2",212,0)
 I FBFORMAT D EXCELHD Q
"RTN","FBAAIAR2",213,0)
 ;
"RTN","FBAAIAR2",214,0)
 ; Display the report headers
"RTN","FBAAIAR2",215,0)
 W ?20,"IPAC Vendor DoD Invoice Inquiry Report"
"RTN","FBAAIAR2",216,0)
 W !,?1,"For DoD Invoice # ",FBDODINV
"RTN","FBAAIAR2",217,0)
 W ?48,$$FMTE^XLFDT($$NOW^XLFDT),?71,"Page: ",PAGE
"RTN","FBAAIAR2",218,0)
 W !,?1,"For Vendor:       ",VNAME
"RTN","FBAAIAR2",219,0)
 ;
"RTN","FBAAIAR2",220,0)
 ; Display the column headers
"RTN","FBAAIAR2",221,0)
 W !?42,"Date",?52,"Amount",?63,"Amount",?72,"Amount"
"RTN","FBAAIAR2",222,0)
 W !,"Invoice #",?25,"Type",?31,"C/V/R",?42,"Paid",?52,"Claimed",?63,"Paid",?72,"Adjusted"
"RTN","FBAAIAR2",223,0)
 W !,SEPLINE
"RTN","FBAAIAR2",224,0)
 ;
"RTN","FBAAIAR2",225,0)
 ; Check for a TaskManager stop request
"RTN","FBAAIAR2",226,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  Q
"RTN","FBAAIAR2",227,0)
 . S (ZTSTOP,FBIASTOP)=1
"RTN","FBAAIAR2",228,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","FBAAIAR2",229,0)
 Q
"RTN","FBAAIAR2",230,0)
 ;
"RTN","FBAAIAR2",231,0)
EXCELHD ; Print an Excel CSV header record 
"RTN","FBAAIAR2",232,0)
 ; (only 1 Excel CSV header should print for the entire report)
"RTN","FBAAIAR2",233,0)
 ; Input:       None
"RTN","FBAAIAR2",234,0)
 ; Output:      Header line printed for CSV format (excel)
"RTN","FBAAIAR2",235,0)
 ; Called From:
"RTN","FBAAIAR2",236,0)
 N FBH
"RTN","FBAAIAR2",237,0)
 S FBH=$$CSV("","VistA Invoice#")
"RTN","FBAAIAR2",238,0)
 S FBH=$$CSV(FBH,"Type")
"RTN","FBAAIAR2",239,0)
 S FBH=$$CSV(FBH,"C/V/R")
"RTN","FBAAIAR2",240,0)
 S FBH=$$CSV(FBH,"Date Paid")
"RTN","FBAAIAR2",241,0)
 S FBH=$$CSV(FBH,"Amount Claimed")
"RTN","FBAAIAR2",242,0)
 S FBH=$$CSV(FBH,"Amount Paid")
"RTN","FBAAIAR2",243,0)
 S FBH=$$CSV(FBH,"Adjustment Amount")
"RTN","FBAAIAR2",244,0)
 W FBH
"RTN","FBAAIAR2",245,0)
 Q
"RTN","FBAAIAR2",246,0)
 ;
"RTN","FBAAIAR2",247,0)
CSV(STRING,DATA) ; Build the Excel data string for CSV format
"RTN","FBAAIAR2",248,0)
 ; Input:       STRING      - Current string being built or ""
"RTN","FBAAIAR2",249,0)
 ;              DATA        - New data to be added to the string
"RTN","FBAAIAR2",250,0)
 ; Returns:     STRING      - Updated string with DATA added
"RTN","FBAAIAR2",251,0)
 ; Called From: EXCELHD,EXCELN
"RTN","FBAAIAR2",252,0)
 S DATA=$C(34)_$TR(DATA,$C(34),$C(39))_$C(34)
"RTN","FBAAIAR2",253,0)
 S STRING=$S(STRING="":DATA,1:STRING_","_DATA)
"RTN","FBAAIAR2",254,0)
 Q STRING
"RTN","FBAAIAR2",255,0)
 ;
"RTN","FBAAIARA")
0^40^B89421506^n/a
"RTN","FBAAIARA",1,0)
FBAAIARA ;ALB/ESG - Fee IPAC Vendor DoD Invoice (Summary) Report Print ;1/16/2014
"RTN","FBAAIARA",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIARA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIARA",4,0)
 ;
"RTN","FBAAIARA",5,0)
 ; Scratch global built by FBAAIAR.
"RTN","FBAAIARA",6,0)
 ; ^TMP("FBAAIAR",$J,VENDOR NAME, DOD INVOICE#) = 
"RTN","FBAAIARA",7,0)
 ;         [1] vendor ien
"RTN","FBAAIARA",8,0)
 ;         [2] vendor external ID#
"RTN","FBAAIARA",9,0)
 ;         [3] date finalized (date that made this record eligible for report)
"RTN","FBAAIARA",10,0)
 ;         [4] total amount claimed
"RTN","FBAAIARA",11,0)
 ;         [5] total amount paid
"RTN","FBAAIARA",12,0)
 ;         [6] total adjustment amount
"RTN","FBAAIARA",13,0)
 ;         [7] Fee Invoice#
"RTN","FBAAIARA",14,0)
 ;         [8] Fee Invoice# "+" flag if additional values exist
"RTN","FBAAIARA",15,0)
 ;         [9] Batch#
"RTN","FBAAIARA",16,0)
 ;        [10] Batch# "+" flag if additional values exist
"RTN","FBAAIARA",17,0)
 ;        [11] Obligation#
"RTN","FBAAIARA",18,0)
 ;        [12] Obligation# "+" flag if additional values exist
"RTN","FBAAIARA",19,0)
 ;        [13] date paid
"RTN","FBAAIARA",20,0)
 ;        [14] date paid "+" flag if additional values exist
"RTN","FBAAIARA",21,0)
 ;        [15] date paid "*" flag is not all lines have a date paid value
"RTN","FBAAIARA",22,0)
 ;        [16] check number
"RTN","FBAAIARA",23,0)
 ;        [17] check number "+" flag if additional values exist
"RTN","FBAAIARA",24,0)
 ;        [18] check number "*" flag if not all lines have a check#
"RTN","FBAAIARA",25,0)
 ;        [19] total disbursed amount
"RTN","FBAAIARA",26,0)
 ;
"RTN","FBAAIARA",27,0)
 ; ^TMP("FBAAIAR",$J,VENDOR NAME) = 
"RTN","FBAAIARA",28,0)
 ;         [1] total number of DoD invoices for vendor
"RTN","FBAAIARA",29,0)
 ;         [4] total amount claimed for vendor
"RTN","FBAAIARA",30,0)
 ;         [5] total amount paid for vendor
"RTN","FBAAIARA",31,0)
 ;         [6] total adjustment amount for vendor
"RTN","FBAAIARA",32,0)
 ;        [19] total disbursed amount for vendor
"RTN","FBAAIARA",33,0)
 ;
"RTN","FBAAIARA",34,0)
 Q
"RTN","FBAAIARA",35,0)
 ;
"RTN","FBAAIARA",36,0)
PRINT ; entry point for printing the report
"RTN","FBAAIARA",37,0)
 ; Variables assumed to exist from FBAAIAR:  FBIAVEN, FBIABEG, FBIAEND, FBIATYPE, FBIAEXCEL
"RTN","FBAAIARA",38,0)
 ;
"RTN","FBAAIARA",39,0)
 N CRT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FBDODINV,FBIASTOP,FBVENAME,ITSTR,PAGE,RPTG,RPTT,SEPLINE,X,Y
"RTN","FBAAIARA",40,0)
 S CRT=$S(IOST["C-":1,1:0)
"RTN","FBAAIARA",41,0)
 I FBIAEXCEL S IOSL=999999    ; long screen length for Excel output
"RTN","FBAAIARA",42,0)
 S PAGE=0,FBIASTOP=0,$P(SEPLINE,"-",131)="",ITSTR=$$ITSTR(.FBIATYPE)
"RTN","FBAAIARA",43,0)
 I '$D(^TMP("FBAAIAR",$J)) D HDR W !!?5,"No data found for this report." G PX
"RTN","FBAAIARA",44,0)
 I $G(ZTSTOP) D HDR W !!?5,"This report was halted during compilation by TaskManager Request." G PX
"RTN","FBAAIARA",45,0)
 ;
"RTN","FBAAIARA",46,0)
 I FBIAEXCEL D HDR I FBIASTOP G PRINTX   ; for Excel CSV, display the header line first before looping
"RTN","FBAAIARA",47,0)
 ;
"RTN","FBAAIARA",48,0)
 S FBVENAME="" F  S FBVENAME=$O(^TMP("FBAAIAR",$J,FBVENAME)) Q:FBVENAME=""!FBIASTOP  D
"RTN","FBAAIARA",49,0)
 . K RPTG
"RTN","FBAAIARA",50,0)
 . I 'FBIAEXCEL D HDR Q:FBIASTOP       ; page break with each new vendor (not for Excel output)
"RTN","FBAAIARA",51,0)
 . S FBDODINV="" F  S FBDODINV=$O(^TMP("FBAAIAR",$J,FBVENAME,FBDODINV)) Q:FBDODINV=""!FBIASTOP  D
"RTN","FBAAIARA",52,0)
 .. S RPTG=$G(^TMP("FBAAIAR",$J,FBVENAME,FBDODINV))
"RTN","FBAAIARA",53,0)
 .. ;
"RTN","FBAAIARA",54,0)
 .. I FBIAEXCEL D EXCELN(FBVENAME,FBDODINV,RPTG) Q   ; for Excel output, print a CSV format record
"RTN","FBAAIARA",55,0)
 .. ;
"RTN","FBAAIARA",56,0)
 .. I $Y+4>IOSL D HDR Q:FBIASTOP      ; check for page break
"RTN","FBAAIARA",57,0)
 .. W !,$$LJ^XLFSTR(FBDODINV,22)                                    ; DoD invoice#
"RTN","FBAAIARA",58,0)
 .. W $$RJ^XLFSTR("$"_$FN($P(RPTG,U,4),"",2),13)                    ; total amount claimed
"RTN","FBAAIARA",59,0)
 .. W $$RJ^XLFSTR("$"_$FN($P(RPTG,U,5),"",2),13)                    ; total amount paid
"RTN","FBAAIARA",60,0)
 .. W $$RJ^XLFSTR("$"_$FN($P(RPTG,U,6),"",2),13)                    ; total adjustment amount
"RTN","FBAAIARA",61,0)
 .. W ?64,$$LJ^XLFSTR($P(RPTG,U,7)_$S($P(RPTG,U,8):"+",1:""),10)    ; VA fee invoice#
"RTN","FBAAIARA",62,0)
 .. W ?76,$$LJ^XLFSTR($P(RPTG,U,9)_$S($P(RPTG,U,10):"+",1:""),6)    ; batch#
"RTN","FBAAIARA",63,0)
 .. W ?84,$$LJ^XLFSTR($P(RPTG,U,11)_$S($P(RPTG,U,12):"+",1:""),7)   ; obligation#
"RTN","FBAAIARA",64,0)
 .. W ?93,$$LJ^XLFSTR($$FMTE^XLFDT($P(RPTG,U,13),"2DZ")_$S($P(RPTG,U,14):"+",1:"")_$S($P(RPTG,U,15):"*",1:""),10) ; dt paid
"RTN","FBAAIARA",65,0)
 .. W ?105,$$LJ^XLFSTR($P(RPTG,U,16)_$S($P(RPTG,U,17):"+",1:"")_$S($P(RPTG,U,18):"*",1:""),10)   ; check#
"RTN","FBAAIARA",66,0)
 .. W $$RJ^XLFSTR("$"_$FN($P(RPTG,U,19),"",2),13)                   ; total amount disbursed
"RTN","FBAAIARA",67,0)
 .. Q
"RTN","FBAAIARA",68,0)
 . ;
"RTN","FBAAIARA",69,0)
 . Q:FBIASTOP!FBIAEXCEL
"RTN","FBAAIARA",70,0)
 . ;
"RTN","FBAAIARA",71,0)
 . S RPTT=$G(^TMP("FBAAIAR",$J,FBVENAME))    ; totals for vendor
"RTN","FBAAIARA",72,0)
 . ;
"RTN","FBAAIARA",73,0)
 . ; display dollar totals for vendor
"RTN","FBAAIARA",74,0)
 . I $Y+5>IOSL D HDR Q:FBIASTOP      ; check for page break
"RTN","FBAAIARA",75,0)
 . W !?24,"-----------  -----------  -----------",?117,"-----------"
"RTN","FBAAIARA",76,0)
 . W !?1,"$Totals for Vendor   "
"RTN","FBAAIARA",77,0)
 . W $$RJ^XLFSTR("$"_$FN($P(RPTT,U,4),"",2),13)                    ; total amount claimed
"RTN","FBAAIARA",78,0)
 . W $$RJ^XLFSTR("$"_$FN($P(RPTT,U,5),"",2),13)                    ; total amount paid
"RTN","FBAAIARA",79,0)
 . W $$RJ^XLFSTR("$"_$FN($P(RPTT,U,6),"",2),13)                    ; total adjustment amount
"RTN","FBAAIARA",80,0)
 . W ?115,$$RJ^XLFSTR("$"_$FN($P(RPTT,U,19),"",2),13)              ; total amount disbursed
"RTN","FBAAIARA",81,0)
 . ;
"RTN","FBAAIARA",82,0)
 . ; display total number of DoD invoices for vendor
"RTN","FBAAIARA",83,0)
 . I $Y+5>IOSL D HDR Q:FBIASTOP      ; check for page break
"RTN","FBAAIARA",84,0)
 . W !!,"Total Number of DoD Invoices for Vendor: ",$P(RPTT,U,1)
"RTN","FBAAIARA",85,0)
 . Q
"RTN","FBAAIARA",86,0)
 ;
"RTN","FBAAIARA",87,0)
 I FBIASTOP G PRINTX    ; get out right away if stop flag is set
"RTN","FBAAIARA",88,0)
 ;
"RTN","FBAAIARA",89,0)
 I $Y+5>IOSL D HDR I FBIASTOP G PRINTX
"RTN","FBAAIARA",90,0)
 W !!?5,"*** End of Report ***"
"RTN","FBAAIARA",91,0)
 ;
"RTN","FBAAIARA",92,0)
PX ;
"RTN","FBAAIARA",93,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","FBAAIARA",94,0)
PRINTX ;
"RTN","FBAAIARA",95,0)
 Q
"RTN","FBAAIARA",96,0)
 ;
"RTN","FBAAIARA",97,0)
EXCELN(FBVENAME,FBDODINV,RPTG) ; output one Excel line
"RTN","FBAAIARA",98,0)
 ; FBVENAME - vendor name
"RTN","FBAAIARA",99,0)
 ; FBDODINV - DoD invoice#
"RTN","FBAAIARA",100,0)
 ;     RPTG - scratch global data string
"RTN","FBAAIARA",101,0)
 N FBZ
"RTN","FBAAIARA",102,0)
 S FBZ=$$CSV("",FBVENAME)                        ; vendor name
"RTN","FBAAIARA",103,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,2))                   ; vendor ID#
"RTN","FBAAIARA",104,0)
 S FBZ=$$CSV(FBZ,FBDODINV)                       ; DoD invoice#
"RTN","FBAAIARA",105,0)
 S FBZ=$$CSV(FBZ,$FN($P(RPTG,U,4),"",2))         ; total amount claimed
"RTN","FBAAIARA",106,0)
 S FBZ=$$CSV(FBZ,$FN($P(RPTG,U,5),"",2))         ; total amount paid
"RTN","FBAAIARA",107,0)
 S FBZ=$$CSV(FBZ,$FN($P(RPTG,U,6),"",2))         ; total adjustment amount
"RTN","FBAAIARA",108,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,7)_$S($P(RPTG,U,8):"+",1:""))     ; VA fee invoice#
"RTN","FBAAIARA",109,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,9)_$S($P(RPTG,U,10):"+",1:""))    ; batch#
"RTN","FBAAIARA",110,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,11)_$S($P(RPTG,U,12):"+",1:""))   ; obligation#
"RTN","FBAAIARA",111,0)
 S FBZ=$$CSV(FBZ,$$FMTE^XLFDT($P(RPTG,U,13),"2DZ")_$S($P(RPTG,U,14):"+",1:"")_$S($P(RPTG,U,15):"*",1:""))   ; date paid
"RTN","FBAAIARA",112,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,16)_$S($P(RPTG,U,17):"+",1:"")_$S($P(RPTG,U,18):"*",1:""))   ; check#
"RTN","FBAAIARA",113,0)
 S FBZ=$$CSV(FBZ,$FN($P(RPTG,U,19),"",2))        ; total amount disbursed
"RTN","FBAAIARA",114,0)
 W !,FBZ
"RTN","FBAAIARA",115,0)
 Q
"RTN","FBAAIARA",116,0)
 ;
"RTN","FBAAIARA",117,0)
HDR ; report header
"RTN","FBAAIARA",118,0)
 ;
"RTN","FBAAIARA",119,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,VENID,X,Y,Z
"RTN","FBAAIARA",120,0)
 ;
"RTN","FBAAIARA",121,0)
 ; Do an end of page reader call if page# exists and device is the screen
"RTN","FBAAIARA",122,0)
 I PAGE,CRT S DIR(0)="E" D ^DIR K DIR I 'Y S FBIASTOP=1 G HDRX
"RTN","FBAAIARA",123,0)
 ;
"RTN","FBAAIARA",124,0)
 ; If screen output or page# exists, do a form feed
"RTN","FBAAIARA",125,0)
 I PAGE!CRT W @IOF
"RTN","FBAAIARA",126,0)
 ;
"RTN","FBAAIARA",127,0)
 ; First printer/file page - do a left margin reset
"RTN","FBAAIARA",128,0)
 I 'PAGE,'CRT W $C(13)
"RTN","FBAAIARA",129,0)
 ;
"RTN","FBAAIARA",130,0)
 S PAGE=PAGE+1    ; increment page#
"RTN","FBAAIARA",131,0)
 ;
"RTN","FBAAIARA",132,0)
 ; For Excel CSV format, display the column headers only
"RTN","FBAAIARA",133,0)
 I FBIAEXCEL D EXCELHD G HDRX
"RTN","FBAAIARA",134,0)
 ;
"RTN","FBAAIARA",135,0)
 ; Display the report headers
"RTN","FBAAIARA",136,0)
 W "IPAC Vendor DoD Invoice Report"
"RTN","FBAAIARA",137,0)
 W ?44,"For Date Range ",$$FMTE^XLFDT(FBIABEG,"5DZ")," - ",$$FMTE^XLFDT(FBIAEND,"5DZ")
"RTN","FBAAIARA",138,0)
 W ?96,$$FMTE^XLFDT($$NOW^XLFDT),?120,"Page: ",PAGE
"RTN","FBAAIARA",139,0)
 W !?3,"Selected Invoice Types: ",ITSTR
"RTN","FBAAIARA",140,0)
 ;
"RTN","FBAAIARA",141,0)
 ; display vendor name and ID if these things are known
"RTN","FBAAIARA",142,0)
 I $G(FBVENAME)'="" D
"RTN","FBAAIARA",143,0)
 . W !?14,"Vendor Name: ",FBVENAME
"RTN","FBAAIARA",144,0)
 . S VENID=$P($G(RPTG),U,2)
"RTN","FBAAIARA",145,0)
 . I VENID="" S Z=$O(^TMP("FBAAIAR",$J,FBVENAME,"")) I Z'="" S VENID=$P($G(^TMP("FBAAIAR",$J,FBVENAME,Z)),U,2)
"RTN","FBAAIARA",146,0)
 . I VENID'="" W "  (ID# ",VENID,")"
"RTN","FBAAIARA",147,0)
 . Q
"RTN","FBAAIARA",148,0)
 ;
"RTN","FBAAIARA",149,0)
 ; now display the column headers
"RTN","FBAAIARA",150,0)
 W !?26,"Total Amt",?39,"Total Amt",?52,"Total Amt",?64,"Fee Basis",?119,"Total Amt"
"RTN","FBAAIARA",151,0)
 W !,"DoD Invoice Number",?28,"Claimed",?44,"Paid",?53,"Adjusted",?64,"Invoice#",?76,"Batch#",?84,"Oblig#",?93,"Date Paid",?105,"Check#",?119,"Disbursed"
"RTN","FBAAIARA",152,0)
 W !,SEPLINE
"RTN","FBAAIARA",153,0)
 ;
"RTN","FBAAIARA",154,0)
 ; check for a TaskManager stop request
"RTN","FBAAIARA",155,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HDRX
"RTN","FBAAIARA",156,0)
 . S (ZTSTOP,FBIASTOP)=1
"RTN","FBAAIARA",157,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","FBAAIARA",158,0)
 . Q
"RTN","FBAAIARA",159,0)
HDRX ;
"RTN","FBAAIARA",160,0)
 Q
"RTN","FBAAIARA",161,0)
 ;
"RTN","FBAAIARA",162,0)
EXCELHD ; print an Excel CSV header record (only 1 Excel CSV header should print for the whole report)
"RTN","FBAAIARA",163,0)
 N FBH
"RTN","FBAAIARA",164,0)
 S FBH=$$CSV("","Vendor Name")
"RTN","FBAAIARA",165,0)
 S FBH=$$CSV(FBH,"Vendor ID")
"RTN","FBAAIARA",166,0)
 S FBH=$$CSV(FBH,"DoD Invoice#")
"RTN","FBAAIARA",167,0)
 S FBH=$$CSV(FBH,"Total Amount Claimed")
"RTN","FBAAIARA",168,0)
 S FBH=$$CSV(FBH,"Total Amount Paid")
"RTN","FBAAIARA",169,0)
 S FBH=$$CSV(FBH,"Total Adjustment Amount")
"RTN","FBAAIARA",170,0)
 S FBH=$$CSV(FBH,"Fee Basis Invoice#")
"RTN","FBAAIARA",171,0)
 S FBH=$$CSV(FBH,"Batch Number")
"RTN","FBAAIARA",172,0)
 S FBH=$$CSV(FBH,"Obligation Number")
"RTN","FBAAIARA",173,0)
 S FBH=$$CSV(FBH,"Date Paid")
"RTN","FBAAIARA",174,0)
 S FBH=$$CSV(FBH,"Check Number")
"RTN","FBAAIARA",175,0)
 S FBH=$$CSV(FBH,"Total Amount Disbursed")
"RTN","FBAAIARA",176,0)
 W FBH
"RTN","FBAAIARA",177,0)
 Q
"RTN","FBAAIARA",178,0)
 ;
"RTN","FBAAIARA",179,0)
CSV(STRING,DATA) ; build the Excel data string for CSV format
"RTN","FBAAIARA",180,0)
 S DATA=$C(34)_$TR(DATA,$C(34),$C(39))_$C(34)
"RTN","FBAAIARA",181,0)
 S STRING=$S(STRING="":DATA,1:STRING_","_DATA)
"RTN","FBAAIARA",182,0)
 Q STRING
"RTN","FBAAIARA",183,0)
 ;
"RTN","FBAAIARA",184,0)
ITSTR(FBIATYPE) ; convert array of selected invoice types into a string for the report header
"RTN","FBAAIARA",185,0)
 ;
"RTN","FBAAIARA",186,0)
 N ITSTR,ITX,TXT
"RTN","FBAAIARA",187,0)
 S ITSTR=""
"RTN","FBAAIARA",188,0)
 I $D(FBIATYPE("OUT")),$D(FBIATYPE("RX")),$D(FBIATYPE("INP")),$D(FBIATYPE("ANC")) S ITSTR="ALL" G ITSTRX
"RTN","FBAAIARA",189,0)
 ;
"RTN","FBAAIARA",190,0)
 F ITX="OUT","RX","INP","ANC" I $D(FBIATYPE(ITX)) D
"RTN","FBAAIARA",191,0)
 . S TXT=$S(ITX="OUT":"Outpatient",ITX="RX":"Pharmacy",ITX="INP":"Civil Hospital",ITX="ANC":"Civil Hospital Ancillary",1:"")
"RTN","FBAAIARA",192,0)
 . S ITSTR=$S(ITSTR="":TXT,1:ITSTR_", "_TXT)
"RTN","FBAAIARA",193,0)
 . Q
"RTN","FBAAIARA",194,0)
ITSTRX ;
"RTN","FBAAIARA",195,0)
 Q ITSTR
"RTN","FBAAIARA",196,0)
 ;
"RTN","FBAAIARA",197,0)
COMPRX ; compile Pharmacy data (moved to this routine for space reasons)
"RTN","FBAAIARA",198,0)
 ;
"RTN","FBAAIARA",199,0)
 N BCH,DATA,FBDODINV,FBDT,FBIA,FBINVN,FBJ,FBK,FBRXINV,FBVEN,FBVENAME,FBVENID,FBY0,FBY2,FBY6,FBYREJ
"RTN","FBAAIARA",200,0)
 ; loop thru batch file by date finalized for specified date range
"RTN","FBAAIARA",201,0)
 S FBDT=$O(^FBAA(161.7,"AF",FBIABEG),-1)
"RTN","FBAAIARA",202,0)
 F  S FBDT=$O(^FBAA(161.7,"AF",FBDT)) Q:'FBDT!(FBDT>FBIAEND)  D
"RTN","FBAAIARA",203,0)
 . S BCH=0 F  S BCH=$O(^FBAA(161.7,"AF",FBDT,BCH)) Q:'BCH  D
"RTN","FBAAIARA",204,0)
 .. ;
"RTN","FBAAIARA",205,0)
 .. ; loop thru the pharmacy (B5) payments for a batch
"RTN","FBAAIARA",206,0)
 .. S FBJ=0 F  S FBJ=$O(^FBAA(162.1,"AE",BCH,FBJ)) Q:'FBJ  D
"RTN","FBAAIARA",207,0)
 ... S FBRXINV=$G(^FBAA(162.1,FBJ,0))   ; rx invoice level data
"RTN","FBAAIARA",208,0)
 ... S FBVEN=+$P(FBRXINV,U,4)   ; vendor ien
"RTN","FBAAIARA",209,0)
 ... I '$D(FBIAVEN(FBVEN)) Q    ; vendor is not among the selected vendors for report
"RTN","FBAAIARA",210,0)
 ... S FBIA=+$P(FBRXINV,U,23)   ; ipac ptr
"RTN","FBAAIARA",211,0)
 ... I 'FBIA Q                  ; ipac ptr must exist to be included on this report
"RTN","FBAAIARA",212,0)
 ... S FBINVN=$P(FBRXINV,U,1)   ; Rx invoice#
"RTN","FBAAIARA",213,0)
 ... S FBVENAME=$P($G(^FBAAV(FBVEN,0)),U,1)     ; vendor name
"RTN","FBAAIARA",214,0)
 ... S FBVENID=$P($G(^FBAAV(FBVEN,0)),U,2)      ; vendor external ID
"RTN","FBAAIARA",215,0)
 ... ;
"RTN","FBAAIARA",216,0)
 ... S FBK=0 F  S FBK=$O(^FBAA(162.1,"AE",BCH,FBJ,FBK)) Q:'FBK  D
"RTN","FBAAIARA",217,0)
 .... S FBY0=$G(^FBAA(162.1,FBJ,"RX",FBK,0))
"RTN","FBAAIARA",218,0)
 .... S FBY2=$G(^FBAA(162.1,FBJ,"RX",FBK,2))
"RTN","FBAAIARA",219,0)
 .... S FBY6=$G(^FBAA(162.1,FBJ,"RX",FBK,6))
"RTN","FBAAIARA",220,0)
 .... S FBYREJ=$G(^FBAA(162.1,FBJ,"RX",FBK,"FBREJ"))
"RTN","FBAAIARA",221,0)
 .... S FBDODINV=$P(FBY6,U,1) I FBDODINV="" Q          ; DoD invoice# must be present
"RTN","FBAAIARA",222,0)
 .... I $D(^TMP("FBAAIAR",$J,FBVENAME,FBDODINV)) Q     ; DoD invoice# data already exists
"RTN","FBAAIARA",223,0)
 .... I $P(FBY2,U,11) Q                                ; cancelled
"RTN","FBAAIARA",224,0)
 .... I $P(FBY2,U,3)'="" Q                             ; voided
"RTN","FBAAIARA",225,0)
 .... I $P(FBYREJ,U,1)'="" Q                           ; rejected
"RTN","FBAAIARA",226,0)
 .... ;
"RTN","FBAAIARA",227,0)
 .... S DATA=FBVEN_U_FBVENID_U_FBDT
"RTN","FBAAIARA",228,0)
 .... S $P(DATA,U,7)=FBINVN                            ; fee invoice number
"RTN","FBAAIARA",229,0)
 .... S $P(DATA,U,9)=$P($G(^FBAA(161.7,BCH,0)),U,1)    ; external batch#
"RTN","FBAAIARA",230,0)
 .... S $P(DATA,U,11)=$P($G(^FBAA(161.7,BCH,0)),U,2)   ; obligation# from the batch file
"RTN","FBAAIARA",231,0)
 .... S $P(DATA,U,13)=$P(FBY2,U,8)                     ; Date Paid
"RTN","FBAAIARA",232,0)
 .... S $P(DATA,U,16)=$P(FBY2,U,10)                    ; check number
"RTN","FBAAIARA",233,0)
 .... S ^TMP("FBAAIAR",$J,FBVENAME,FBDODINV)=DATA      ; store new data for this DoD invoice#
"RTN","FBAAIARA",234,0)
 .... D GET^FBAAIAR(FBVENAME,FBDODINV)                 ; gather totals for DoD invoice#
"RTN","FBAAIARA",235,0)
 .... Q
"RTN","FBAAIARA",236,0)
 ... Q
"RTN","FBAAIARA",237,0)
 .. Q
"RTN","FBAAIARA",238,0)
 . Q
"RTN","FBAAIARA",239,0)
COMPRXX ;
"RTN","FBAAIARA",240,0)
 Q
"RTN","FBAAIARA",241,0)
 ;
"RTN","FBAAIARB")
0^44^B65763537^n/a
"RTN","FBAAIARB",1,0)
FBAAIARB ;ALB/ESG - FEE IPAC Vendor Payment Report (Detail) ;2/4/2014
"RTN","FBAAIARB",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIARB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIARB",4,0)
 ;
"RTN","FBAAIARB",5,0)
 Q
"RTN","FBAAIARB",6,0)
 ;
"RTN","FBAAIARB",7,0)
EN ; main report entry point
"RTN","FBAAIARB",8,0)
 ;
"RTN","FBAAIARB",9,0)
 N FBIAVEN,FBIABEG,FBIAEND,FBIATYPE,FBIAEXCEL,FBIAADJ,FBIAIGNORE
"RTN","FBAAIARB",10,0)
P1 I '$$VENDSEL(.FBIAVEN) G EX                         ; vendor
"RTN","FBAAIARB",11,0)
P2 I '$$DATES(.FBIABEG,.FBIAEND) G EX:$$STOP,P1        ; begin and end dates
"RTN","FBAAIARB",12,0)
P3 I '$$TYPESEL(.FBIATYPE) G EX:$$STOP,P2              ; type of invoice
"RTN","FBAAIARB",13,0)
P4 I '$$SUSPADJ(.FBIAADJ) G EX:$$STOP,P3               ; only include suspended/adjusted payments?
"RTN","FBAAIARB",14,0)
P5 I '$$IGNCV(.FBIAIGNORE) G EX:$$STOP,P4              ; ignore cancelled/voided payment lines?
"RTN","FBAAIARB",15,0)
P6 I '$$FORMAT(.FBIAEXCEL) G EX:$$STOP,P5              ; format (standard or CSV)
"RTN","FBAAIARB",16,0)
P7 I '$$DEVICE() G EX:$$STOP,P6                        ; device
"RTN","FBAAIARB",17,0)
 ;
"RTN","FBAAIARB",18,0)
EX ; main report exit point
"RTN","FBAAIARB",19,0)
 Q
"RTN","FBAAIARB",20,0)
 ;
"RTN","FBAAIARB",21,0)
STOP() ; Determine if user wants to exit out of the option entirely
"RTN","FBAAIARB",22,0)
 ; 1=yes, get out entirely
"RTN","FBAAIARB",23,0)
 ; 0=no, just go back to the previous question
"RTN","FBAAIARB",24,0)
 ;
"RTN","FBAAIARB",25,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAIARB",26,0)
 ;
"RTN","FBAAIARB",27,0)
 S DIR(0)="Y"
"RTN","FBAAIARB",28,0)
 S DIR("A")="Do you want to exit out of this option entirely"
"RTN","FBAAIARB",29,0)
 S DIR("B")="YES"
"RTN","FBAAIARB",30,0)
 S DIR("?",1)="  Enter YES to immediately exit out of this option."
"RTN","FBAAIARB",31,0)
 S DIR("?")="  Enter NO to return to the previous question."
"RTN","FBAAIARB",32,0)
 W ! D ^DIR K DIR
"RTN","FBAAIARB",33,0)
 I $D(DIRUT) S Y=1
"RTN","FBAAIARB",34,0)
 Q Y
"RTN","FBAAIARB",35,0)
 ;
"RTN","FBAAIARB",36,0)
VENDSEL(FBIAVEN) ; user selection function for IPAC vendors
"RTN","FBAAIARB",37,0)
 ; FBIAVEN is an output array, pass by reference
"RTN","FBAAIARB",38,0)
 ; FBIAVEN(vendor ien) = vendor name selected
"RTN","FBAAIARB",39,0)
 ; Function value is 1 if at least 1 vendor was selected, 0 otherwise
"RTN","FBAAIARB",40,0)
 ;
"RTN","FBAAIARB",41,0)
 N DIC,RET,VAUTSTR,VAUTNI,VAUTVB,V,X,Y
"RTN","FBAAIARB",42,0)
 K FBIAVEN
"RTN","FBAAIARB",43,0)
 S RET=1    ; default to 1 indicating all OK
"RTN","FBAAIARB",44,0)
 ;
"RTN","FBAAIARB",45,0)
 W @IOF,!,"IPAC Vendor Payment Report"
"RTN","FBAAIARB",46,0)
 W !!,"This report will display detail information on paid line items by the"
"RTN","FBAAIARB",47,0)
 W !,"invoice type, DoD invoice number, and date of service."
"RTN","FBAAIARB",48,0)
 W !
"RTN","FBAAIARB",49,0)
 ;
"RTN","FBAAIARB",50,0)
 S DIC="^FBAAV("
"RTN","FBAAIARB",51,0)
 S DIC("S")="I +$O(^FBAA(161.95,""V"",Y,0))"
"RTN","FBAAIARB",52,0)
 S VAUTSTR="IPAC Vendor",VAUTNI=2,VAUTVB="FBIAVEN"
"RTN","FBAAIARB",53,0)
 D FIRST^VAUTOMA     ; DBIA# 4398
"RTN","FBAAIARB",54,0)
 I FBIAVEN S V=0 F  S V=$O(^FBAA(161.95,"V",V)) Q:'V  S FBIAVEN(V)=$P($G(^FBAAV(V,0)),U,1)   ; all IPAC vendors selected
"RTN","FBAAIARB",55,0)
 I '$O(FBIAVEN(0)) S RET=0 W $C(7)        ; no vendors found/selected
"RTN","FBAAIARB",56,0)
 Q RET
"RTN","FBAAIARB",57,0)
 ;
"RTN","FBAAIARB",58,0)
DATES(FBIABEG,FBIAEND) ; capture the start date and end date from the user
"RTN","FBAAIARB",59,0)
 ; both are output parameters, pass by reference
"RTN","FBAAIARB",60,0)
 ; function value is 0/1 indicating if valid dates were selected
"RTN","FBAAIARB",61,0)
 ;
"RTN","FBAAIARB",62,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAIARB",63,0)
 S RET=1
"RTN","FBAAIARB",64,0)
 S (FBIABEG,FBIAEND)=""
"RTN","FBAAIARB",65,0)
 ;
"RTN","FBAAIARB",66,0)
 S DIR(0)="D^:DT:EX"
"RTN","FBAAIARB",67,0)
 S DIR("A")="Enter the Start Date"
"RTN","FBAAIARB",68,0)
 S DIR("B")=$$FMTE^XLFDT($$FMADD^XLFDT(DT,-30),"5DZ")   ; default date is T-30
"RTN","FBAAIARB",69,0)
 S DIR("?",1)="The start and end dates for this report refer to the date that the"
"RTN","FBAAIARB",70,0)
 S DIR("?",2)="associated batch and payment line items are finalized (certified)"
"RTN","FBAAIARB",71,0)
 S DIR("?")="in VistA Fee through the ""Finalize a Batch"" menu option."
"RTN","FBAAIARB",72,0)
 W ! D ^DIR K DIR
"RTN","FBAAIARB",73,0)
 I $D(DIRUT)!'Y S RET=0 W $C(7) G DATEX
"RTN","FBAAIARB",74,0)
 S FBIABEG=Y
"RTN","FBAAIARB",75,0)
 ;
"RTN","FBAAIARB",76,0)
 S DIR(0)="D^"_FBIABEG_":DT:EX"
"RTN","FBAAIARB",77,0)
 S DIR("A")="Enter the End Date"
"RTN","FBAAIARB",78,0)
 S DIR("B")=$$FMTE^XLFDT(DT,"5DZ")   ; default date is Today
"RTN","FBAAIARB",79,0)
 S DIR("?",1)="The start and end dates for this report refer to the date that the"
"RTN","FBAAIARB",80,0)
 S DIR("?",2)="associated batch and payment line items are finalized (certified)"
"RTN","FBAAIARB",81,0)
 S DIR("?")="in VistA Fee through the ""Finalize a Batch"" menu option."
"RTN","FBAAIARB",82,0)
 W ! D ^DIR K DIR
"RTN","FBAAIARB",83,0)
 I $D(DIRUT)!'Y S RET=0 W $C(7) G DATEX
"RTN","FBAAIARB",84,0)
 S FBIAEND=Y
"RTN","FBAAIARB",85,0)
DATEX ;
"RTN","FBAAIARB",86,0)
 Q RET
"RTN","FBAAIARB",87,0)
 ;
"RTN","FBAAIARB",88,0)
TYPESEL(FBIATYPE) ; function for user selection of the types of invoices to search
"RTN","FBAAIARB",89,0)
 ; FBIATYPE is an output array, pass by reference
"RTN","FBAAIARB",90,0)
 ; FBIATYPE(type)="" where type can be OUT,RX,INP,ANC
"RTN","FBAAIARB",91,0)
 ; Function value is 1 if at least 1 invoice type was selected, 0 otherwise
"RTN","FBAAIARB",92,0)
 ;
"RTN","FBAAIARB",93,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,FD,G
"RTN","FBAAIARB",94,0)
 K FBIATYPE
"RTN","FBAAIARB",95,0)
 S RET=1    ; default to 1 indicating all OK
"RTN","FBAAIARB",96,0)
 ;
"RTN","FBAAIARB",97,0)
 F  D  Q:Y="ALL"!$D(DIRUT)!(Y="")
"RTN","FBAAIARB",98,0)
 . S DIR(0)="SO"
"RTN","FBAAIARB",99,0)
 . S FD="OUT:"_$$LJ^XLFSTR("Outpatient",27)_$S($D(FBIATYPE("OUT")):"SELECTED",1:"")
"RTN","FBAAIARB",100,0)
 . S FD=FD_";RX:"_$$LJ^XLFSTR("Pharmacy",27)_$S($D(FBIATYPE("RX")):"SELECTED",1:"")
"RTN","FBAAIARB",101,0)
 . S FD=FD_";INP:"_$$LJ^XLFSTR("Civil Hospital",27)_$S($D(FBIATYPE("INP")):"SELECTED",1:"")
"RTN","FBAAIARB",102,0)
 . S FD=FD_";ANC:"_$$LJ^XLFSTR("Civil Hospital Ancillary",27)_$S($D(FBIATYPE("ANC")):"SELECTED",1:"")
"RTN","FBAAIARB",103,0)
 . S FD=FD_";ALL:All"
"RTN","FBAAIARB",104,0)
 . S $P(DIR(0),U,2)=FD
"RTN","FBAAIARB",105,0)
 . ;
"RTN","FBAAIARB",106,0)
 . I '$D(FBIATYPE) S DIR("A")="Select an Invoice Type",DIR("B")="ALL"
"RTN","FBAAIARB",107,0)
 . E  S DIR("A")="Select Another Invoice Type" K DIR("B")
"RTN","FBAAIARB",108,0)
 . W ! D ^DIR K DIR
"RTN","FBAAIARB",109,0)
 . ;
"RTN","FBAAIARB",110,0)
 . I Y="ALL" D  Q     ; user selected all types, so set them and get out
"RTN","FBAAIARB",111,0)
 .. F G="OUT","RX","INP","ANC" S FBIATYPE(G)=""
"RTN","FBAAIARB",112,0)
 . ;
"RTN","FBAAIARB",113,0)
 . I $D(DIRUT)!(Y="") Q
"RTN","FBAAIARB",114,0)
 . I $D(FBIATYPE(Y)) K FBIATYPE(Y) Q     ; if already selected, toggle the selection off then quit
"RTN","FBAAIARB",115,0)
 . S FBIATYPE(Y)=""                      ; toggle selection on
"RTN","FBAAIARB",116,0)
 . Q
"RTN","FBAAIARB",117,0)
 ;
"RTN","FBAAIARB",118,0)
 I $D(DUOUT)!$D(DTOUT) S RET=0           ; exit via up-arrow or time-out should get out
"RTN","FBAAIARB",119,0)
 I '$D(FBIATYPE) S RET=0 W $C(7)
"RTN","FBAAIARB",120,0)
 Q RET
"RTN","FBAAIARB",121,0)
 ;
"RTN","FBAAIARB",122,0)
SUSPADJ(FBIAADJ) ; capture only suspended payments?
"RTN","FBAAIARB",123,0)
 ; FBIAADJ=0 meaning NO user wants to include all payment lines
"RTN","FBAAIARB",124,0)
 ; FBIAADJ=1 meaning YES only include payments where Amount Paid is less than Amount Claimed
"RTN","FBAAIARB",125,0)
 ; pass parameter by reference
"RTN","FBAAIARB",126,0)
 ;
"RTN","FBAAIARB",127,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAIARB",128,0)
 S FBIAADJ=0,RET=1
"RTN","FBAAIARB",129,0)
 S DIR(0)="Y"
"RTN","FBAAIARB",130,0)
 S DIR("A")="Only Include Suspended Payments (not paid in full)"
"RTN","FBAAIARB",131,0)
 S DIR("B")="NO"
"RTN","FBAAIARB",132,0)
 S DIR("?",1)="Enter NO if you want to include all payment lines regardless of amount"
"RTN","FBAAIARB",133,0)
 S DIR("?",2)="claimed, paid, or suspended/adjusted."
"RTN","FBAAIARB",134,0)
 S DIR("?",3)=" "
"RTN","FBAAIARB",135,0)
 S DIR("?",4)="Enter YES if you only want to include payments that are not paid in full."
"RTN","FBAAIARB",136,0)
 S DIR("?",5)="This means that the amount the VA paid is less than the vendor's claimed"
"RTN","FBAAIARB",137,0)
 S DIR("?")="amount. The remaining balance has been suspended or adjusted."
"RTN","FBAAIARB",138,0)
 W ! D ^DIR K DIR
"RTN","FBAAIARB",139,0)
 I $D(DIRUT) S RET=0 W $C(7)
"RTN","FBAAIARB",140,0)
 S FBIAADJ=Y
"RTN","FBAAIARB",141,0)
 Q RET
"RTN","FBAAIARB",142,0)
 ;
"RTN","FBAAIARB",143,0)
FORMAT(FBIAEXCEL) ; capture the report format from the user (normal or CSV output)
"RTN","FBAAIARB",144,0)
 ; FBIAEXCEL=0 for normal output
"RTN","FBAAIARB",145,0)
 ; FBIAEXCEL=1 for CSV (comma separated values) for Excel output
"RTN","FBAAIARB",146,0)
 ; pass parameter by reference
"RTN","FBAAIARB",147,0)
 ;
"RTN","FBAAIARB",148,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAIARB",149,0)
 S FBIAEXCEL=0,RET=1
"RTN","FBAAIARB",150,0)
 S DIR(0)="Y"
"RTN","FBAAIARB",151,0)
 S DIR("A")="Do you want to capture the output in a CSV format"
"RTN","FBAAIARB",152,0)
 S DIR("B")="NO"
"RTN","FBAAIARB",153,0)
 S DIR("?",1)="If you want to capture the output from this report in a comma-separated"
"RTN","FBAAIARB",154,0)
 S DIR("?",2)="values (CSV) format, then answer YES here.  A CSV format is something that"
"RTN","FBAAIARB",155,0)
 S DIR("?",3)="could be easily imported into a spreadsheet program like Excel."
"RTN","FBAAIARB",156,0)
 S DIR("?",4)=" "
"RTN","FBAAIARB",157,0)
 S DIR("?")="If you just want a normal report output, then answer NO here."
"RTN","FBAAIARB",158,0)
 W ! D ^DIR K DIR
"RTN","FBAAIARB",159,0)
 I $D(DIRUT) S RET=0 W $C(7)
"RTN","FBAAIARB",160,0)
 S FBIAEXCEL=Y
"RTN","FBAAIARB",161,0)
 Q RET
"RTN","FBAAIARB",162,0)
 ;
"RTN","FBAAIARB",163,0)
IGNCV(FBIAIGNORE) ; should we ignore cancelled, voided, or rejected line items?
"RTN","FBAAIARB",164,0)
 ; FBIAIGNORE=0 means don't ignore, include everything
"RTN","FBAAIARB",165,0)
 ; FBIAIGNORE=1 means yes ignore cancelled/voided/rejected line items
"RTN","FBAAIARB",166,0)
 ; pass parameter by reference
"RTN","FBAAIARB",167,0)
 ;
"RTN","FBAAIARB",168,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAIARB",169,0)
 S FBIAIGNORE=1,RET=1
"RTN","FBAAIARB",170,0)
 S DIR(0)="Y"
"RTN","FBAAIARB",171,0)
 S DIR("A")="Ignore Cancelled or Voided Payments"
"RTN","FBAAIARB",172,0)
 S DIR("B")="YES"
"RTN","FBAAIARB",173,0)
 S DIR("?",1)="Enter YES if you want to ignore any payment line items that have been"
"RTN","FBAAIARB",174,0)
 S DIR("?",2)="cancelled, voided, or rejected so these items will not show up on the report."
"RTN","FBAAIARB",175,0)
 S DIR("?",3)=" "
"RTN","FBAAIARB",176,0)
 S DIR("?",4)="Enter NO if you would like to include cancelled, voided, or rejected line"
"RTN","FBAAIARB",177,0)
 S DIR("?",5)="items so they will show up on the report. For such payment line items, an"
"RTN","FBAAIARB",178,0)
 S DIR("?")="indicator will be displayed on the report."
"RTN","FBAAIARB",179,0)
 W ! D ^DIR K DIR
"RTN","FBAAIARB",180,0)
 I $D(DIRUT) S RET=0 W $C(7)
"RTN","FBAAIARB",181,0)
 S FBIAIGNORE=Y
"RTN","FBAAIARB",182,0)
 Q RET
"RTN","FBAAIARB",183,0)
 ;
"RTN","FBAAIARB",184,0)
DEVICE() ; Device Selection
"RTN","FBAAIARB",185,0)
 N ZTRTN,ZTDESC,ZTSAVE,POP,RET,ZTSK,DIR,X,Y
"RTN","FBAAIARB",186,0)
 S RET=1
"RTN","FBAAIARB",187,0)
 I 'FBIAEXCEL W !!,"This report is 132 characters wide.  Please choose an appropriate device.",!
"RTN","FBAAIARB",188,0)
 I FBIAEXCEL D
"RTN","FBAAIARB",189,0)
 . W !!,"For CSV output, turn logging or capture on now."
"RTN","FBAAIARB",190,0)
 . W !,"To avoid undesired wrapping of the data saved to the file,"
"RTN","FBAAIARB",191,0)
 . W !,"please enter ""0;256;99999"" at the ""DEVICE:"" prompt.",!
"RTN","FBAAIARB",192,0)
 ;
"RTN","FBAAIARB",193,0)
 S ZTRTN="COMPILE^FBAAIARC"
"RTN","FBAAIARB",194,0)
 S ZTDESC="Fee Basis IPAC Vendor Payment Report"
"RTN","FBAAIARB",195,0)
 S ZTSAVE("FBIAVEN(")=""
"RTN","FBAAIARB",196,0)
 S ZTSAVE("FBIABEG")=""
"RTN","FBAAIARB",197,0)
 S ZTSAVE("FBIAEND")=""
"RTN","FBAAIARB",198,0)
 S ZTSAVE("FBIATYPE(")=""
"RTN","FBAAIARB",199,0)
 S ZTSAVE("FBIAADJ")=""
"RTN","FBAAIARB",200,0)
 S ZTSAVE("FBIAEXCEL")=""
"RTN","FBAAIARB",201,0)
 S ZTSAVE("FBIAIGNORE")=""
"RTN","FBAAIARB",202,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM",1)
"RTN","FBAAIARB",203,0)
 I POP S RET=0
"RTN","FBAAIARB",204,0)
 I $G(ZTSK) W !!,"Report compilation has started with task# ",ZTSK,".",! S DIR(0)="E" D ^DIR
"RTN","FBAAIARB",205,0)
 Q RET
"RTN","FBAAIARB",206,0)
 ;
"RTN","FBAAIARC")
0^45^B156464417^n/a
"RTN","FBAAIARC",1,0)
FBAAIARC ;ALB/ESG - FEE IPAC Vendor Payment Report (Detail) Compile continued ;2/4/2014
"RTN","FBAAIARC",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIARC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIARC",4,0)
 ;
"RTN","FBAAIARC",5,0)
 Q
"RTN","FBAAIARC",6,0)
 ;
"RTN","FBAAIARC",7,0)
COMPILE ; entry point for the compile to build the scratch global
"RTN","FBAAIARC",8,0)
 ; may be background task if job queued
"RTN","FBAAIARC",9,0)
 ;
"RTN","FBAAIARC",10,0)
 K ^TMP("FBAAIARB",$J)
"RTN","FBAAIARC",11,0)
 I '$D(ZTQUEUED) W !!,"Compiling IPAC Vendor Payment Report.  Please wait ... "
"RTN","FBAAIARC",12,0)
 I $D(FBIATYPE("OUT"))!$D(FBIATYPE("ANC")) D COMPOUT   ; outpatient/ancillary
"RTN","FBAAIARC",13,0)
 I $D(FBIATYPE("INP")) D COMPIN                        ; inpatient
"RTN","FBAAIARC",14,0)
 I $D(FBIATYPE("RX")) D COMPRX                         ; prescription
"RTN","FBAAIARC",15,0)
 ;
"RTN","FBAAIARC",16,0)
 D PRINT^FBAAIARD                 ; print report
"RTN","FBAAIARC",17,0)
 D ^%ZISC                         ; close the device
"RTN","FBAAIARC",18,0)
 K ^TMP("FBAAIARB",$J)            ; kill scratch
"RTN","FBAAIARC",19,0)
 I $D(ZTQUEUED) S ZTREQ="@"       ; purge the task
"RTN","FBAAIARC",20,0)
COMPILX ;
"RTN","FBAAIARC",21,0)
 Q
"RTN","FBAAIARC",22,0)
 ;
"RTN","FBAAIARC",23,0)
COMPOUT ; compile Outpatient and Ancillary data
"RTN","FBAAIARC",24,0)
 ;
"RTN","FBAAIARC",25,0)
 N DATA,FBDODINV,FBDT,FBJ,FBK,FBL,FBM,FBPTSSN,FBVENAME,FBVENID
"RTN","FBAAIARC",26,0)
 N FBY0,FBY2,FBY3,FBYREJ,FBZADJ,FBZDOS,FBZIENS,FBZPTNM,FBZTYPE,FEEPROG
"RTN","FBAAIARC",27,0)
 S FBDT=$O(^FBAAC("AK",FBIABEG),-1)
"RTN","FBAAIARC",28,0)
 F  S FBDT=$O(^FBAAC("AK",FBDT)) Q:'FBDT!(FBDT>FBIAEND)  D
"RTN","FBAAIARC",29,0)
 . S FBJ=0 F  S FBJ=$O(^FBAAC("AK",FBDT,FBJ)) Q:'FBJ  D    ; FBJ=patient DFN
"RTN","FBAAIARC",30,0)
 .. S FBZPTNM=$P($G(^DPT(FBJ,0)),U,1) Q:FBZPTNM=""         ; patient name for scratch global
"RTN","FBAAIARC",31,0)
 .. S FBPTSSN=$P($G(^DPT(FBJ,0)),U,9)                      ; full patient SSN
"RTN","FBAAIARC",32,0)
 .. S FBK=0 F  S FBK=$O(^FBAAC("AK",FBDT,FBJ,FBK)) Q:'FBK  D       ; FBK=vendor ien
"RTN","FBAAIARC",33,0)
 ... I '$D(FBIAVEN(FBK)) Q                  ; make sure vendor is among the selected vendors for the report
"RTN","FBAAIARC",34,0)
 ... S FBVENAME=$P($G(^FBAAV(FBK,0)),U,1)   ; vendor name
"RTN","FBAAIARC",35,0)
 ... I FBVENAME="" S FBVENAME="~unk"
"RTN","FBAAIARC",36,0)
 ... S FBVENID=$P($G(^FBAAV(FBK,0)),U,2)    ; vendor external ID
"RTN","FBAAIARC",37,0)
 ... S FBL=0 F  S FBL=$O(^FBAAC("AK",FBDT,FBJ,FBK,FBL)) Q:'FBL  D
"RTN","FBAAIARC",38,0)
 .... S FBZDOS=+$P($G(^FBAAC(FBJ,1,FBK,1,FBL,0)),U,1) Q:'FBZDOS     ; initial treatment date (DOS) for scratch global
"RTN","FBAAIARC",39,0)
 .... S FBM=0 F  S FBM=$O(^FBAAC("AK",FBDT,FBJ,FBK,FBL,FBM)) Q:'FBM  D
"RTN","FBAAIARC",40,0)
 ..... S FBY0=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,0))
"RTN","FBAAIARC",41,0)
 ..... S FEEPROG=+$P(FBY0,U,9)   ; Fee Program ptr
"RTN","FBAAIARC",42,0)
 ..... I FEEPROG=2,'$D(FBIATYPE("OUT")) Q               ; Outpatient not a chosen type for report
"RTN","FBAAIARC",43,0)
 ..... I FEEPROG'=2,'$D(FBIATYPE("ANC")) Q              ; Civil Hosp Ancillary not a chosen type for report
"RTN","FBAAIARC",44,0)
 ..... S FBZTYPE=$S(FEEPROG=2:"1-OUTPAT",1:"4-ANCIL")   ; type subscript for scratch global
"RTN","FBAAIARC",45,0)
 ..... S FBY2=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,2))
"RTN","FBAAIARC",46,0)
 ..... S FBY3=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,3))
"RTN","FBAAIARC",47,0)
 ..... S FBYREJ=$G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,"FBREJ"))
"RTN","FBAAIARC",48,0)
 ..... S FBDODINV=$P(FBY3,U,7) I FBDODINV="" Q        ; DoD invoice# must be present
"RTN","FBAAIARC",49,0)
 ..... I FBIAIGNORE,$P(FBY2,U,4) Q                    ; cancellation date exists
"RTN","FBAAIARC",50,0)
 ..... I FBIAIGNORE,$P(FBY0,U,21)'="" Q               ; line has been voided
"RTN","FBAAIARC",51,0)
 ..... I FBIAIGNORE,$P(FBYREJ,U,1)'="" Q              ; line has been rejected
"RTN","FBAAIARC",52,0)
 ..... I FBIAADJ,$P(FBY0,U,3)'<$P(FBY0,U,2) Q         ; skip paid in full line items
"RTN","FBAAIARC",53,0)
 ..... ;
"RTN","FBAAIARC",54,0)
 ..... S FBZIENS=FBM_","_FBL_","_FBK_","_FBJ_","      ; iens
"RTN","FBAAIARC",55,0)
 ..... S FBZADJ=$$ADJ(1)
"RTN","FBAAIARC",56,0)
 ..... S DATA=FBK
"RTN","FBAAIARC",57,0)
 ..... S $P(DATA,U,2)=FBVENID
"RTN","FBAAIARC",58,0)
 ..... S $P(DATA,U,3)=FBDT
"RTN","FBAAIARC",59,0)
 ..... S $P(DATA,U,4)=FBPTSSN
"RTN","FBAAIARC",60,0)
 ..... S $P(DATA,U,5)=$P($$CPT^ICPTCOD(+$P(FBY0,U,1),FBZDOS),U,2)    ; CPT procedure code
"RTN","FBAAIARC",61,0)
 ..... S $P(DATA,U,6)=$$MODS                                         ; comma-delimited list of CPT modifiers
"RTN","FBAAIARC",62,0)
 ..... S $P(DATA,U,7)=$$GET1^DIQ(162.03,FBZIENS,48)                  ; external 3 digit revenue code
"RTN","FBAAIARC",63,0)
 ..... S $P(DATA,U,8)=""
"RTN","FBAAIARC",64,0)
 ..... S $P(DATA,U,9)=""
"RTN","FBAAIARC",65,0)
 ..... S $P(DATA,U,10)=""               ; these are Inpatient or Pharmacy fields
"RTN","FBAAIARC",66,0)
 ..... S $P(DATA,U,11)=""
"RTN","FBAAIARC",67,0)
 ..... S $P(DATA,U,12)=""
"RTN","FBAAIARC",68,0)
 ..... S $P(DATA,U,13)=""
"RTN","FBAAIARC",69,0)
 ..... S $P(DATA,U,14)=$P(FBY0,U,2)     ; amount claimed
"RTN","FBAAIARC",70,0)
 ..... S $P(DATA,U,15)=$P(FBY0,U,3)     ; amount paid
"RTN","FBAAIARC",71,0)
 ..... S $P(DATA,U,16)=$P(FBZADJ,U,1)   ; adjustment amount #1
"RTN","FBAAIARC",72,0)
 ..... S $P(DATA,U,17)=$P(FBZADJ,U,2)   ; adjustment group code-reason code #1
"RTN","FBAAIARC",73,0)
 ..... S $P(DATA,U,18)=$P(FBZADJ,U,3)   ; adjustment amount #2
"RTN","FBAAIARC",74,0)
 ..... S $P(DATA,U,19)=$P(FBZADJ,U,4)   ; adjustment group code-reason code #2
"RTN","FBAAIARC",75,0)
 ..... S $P(DATA,U,20)=$P(FBY0,U,16)    ; fee invoice#
"RTN","FBAAIARC",76,0)
 ..... S $P(DATA,U,21)=$P($G(^FBAA(161.7,+$P(FBY0,U,8),0)),U,1)    ; external batch#
"RTN","FBAAIARC",77,0)
 ..... S $P(DATA,U,22)=$P($G(^FBAA(161.7,+$P(FBY0,U,8),0)),U,2)    ; obligation# from the batch file
"RTN","FBAAIARC",78,0)
 ..... S $P(DATA,U,23)=$P(FBY0,U,14)    ; date paid
"RTN","FBAAIARC",79,0)
 ..... S $P(DATA,U,24)=$P(FBY2,U,3)     ; check number
"RTN","FBAAIARC",80,0)
 ..... S $P(DATA,U,25)=$P(FBY2,U,8)     ; disbursed amount
"RTN","FBAAIARC",81,0)
 ..... S $P(DATA,U,26)=$P(FBY2,U,4)     ; cancellation date
"RTN","FBAAIARC",82,0)
 ..... S $P(DATA,U,27)=$S($P(FBY0,U,21)'="":1,1:0)     ; voided payment flag
"RTN","FBAAIARC",83,0)
 ..... S $P(DATA,U,28)=$$GET1^DIQ(162.03,FBZIENS,19)   ; reject status external value
"RTN","FBAAIARC",84,0)
 ..... ;
"RTN","FBAAIARC",85,0)
 ..... S ^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE,FBDODINV,FBZDOS,FBZPTNM,FBZIENS)=DATA        ; store data outpat/ancil
"RTN","FBAAIARC",86,0)
 ..... S ^TMP("FBAAIARB",$J,FBVENAME)=FBVENID
"RTN","FBAAIARC",87,0)
 ..... Q
"RTN","FBAAIARC",88,0)
 .... Q
"RTN","FBAAIARC",89,0)
 ... Q
"RTN","FBAAIARC",90,0)
 .. Q
"RTN","FBAAIARC",91,0)
 . Q
"RTN","FBAAIARC",92,0)
COMPOUTX ;
"RTN","FBAAIARC",93,0)
 Q
"RTN","FBAAIARC",94,0)
 ;
"RTN","FBAAIARC",95,0)
MODS() ; Build a list of CPT modifiers for subfile 162.03
"RTN","FBAAIARC",96,0)
 ; Assumes all variables are set from above
"RTN","FBAAIARC",97,0)
 N RET,FBN,MODIEN,MOD
"RTN","FBAAIARC",98,0)
 S RET=""
"RTN","FBAAIARC",99,0)
 S FBN=0 F  S FBN=$O(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,"M",FBN)) Q:'FBN  D
"RTN","FBAAIARC",100,0)
 . S MODIEN=+$P($G(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,"M",FBN,0)),U,1) Q:'MODIEN
"RTN","FBAAIARC",101,0)
 . S MOD=$P($$MOD^ICPTMOD(MODIEN,"I",FBZDOS),U,2) Q:MOD=""
"RTN","FBAAIARC",102,0)
 . S RET=$S(RET="":MOD,1:RET_","_MOD)
"RTN","FBAAIARC",103,0)
 . Q
"RTN","FBAAIARC",104,0)
MODSX ;
"RTN","FBAAIARC",105,0)
 Q RET
"RTN","FBAAIARC",106,0)
 ;
"RTN","FBAAIARC",107,0)
ADJ(TYPE) ; Builds a string of Adjustment amounts and group-reason codes
"RTN","FBAAIARC",108,0)
 ; TYPE indicates which payment file to look at to obtain adjustment information
"RTN","FBAAIARC",109,0)
 ; TYPE=1: 162.03  Outpatient/Ancillary
"RTN","FBAAIARC",110,0)
 ; TYPE=2: 162.5   Inpatient
"RTN","FBAAIARC",111,0)
 ; TYPE=3: 162.11  Pharmacy
"RTN","FBAAIARC",112,0)
 ;
"RTN","FBAAIARC",113,0)
 ; Returns a string:
"RTN","FBAAIARC",114,0)
 ;     [1] adjustment amount #1
"RTN","FBAAIARC",115,0)
 ;     [2] adjustment group code-reason code #1
"RTN","FBAAIARC",116,0)
 ;     [3] adjustment amount #2
"RTN","FBAAIARC",117,0)
 ;     [4] adjustment group code-reason code #2
"RTN","FBAAIARC",118,0)
 ;
"RTN","FBAAIARC",119,0)
 N RET,GLO,STOP,Z,G,AMT,GRP,RSN,X
"RTN","FBAAIARC",120,0)
 S RET="",GLO="",STOP=0
"RTN","FBAAIARC",121,0)
 I TYPE=1 S GLO=$NA(^FBAAC(FBJ,1,FBK,1,FBL,1,FBM,7))
"RTN","FBAAIARC",122,0)
 I TYPE=2 S GLO=$NA(^FBAAI(FBJ,8))
"RTN","FBAAIARC",123,0)
 I TYPE=3 S GLO=$NA(^FBAA(162.1,FBJ,"RX",FBK,4))
"RTN","FBAAIARC",124,0)
 I GLO="" G ADJX
"RTN","FBAAIARC",125,0)
 ;
"RTN","FBAAIARC",126,0)
 S Z=0 F  S Z=$O(@GLO@(Z)) Q:'Z!STOP  S G=$G(@GLO@(Z,0)) D
"RTN","FBAAIARC",127,0)
 . S AMT=$P(G,U,3)                               ; adj amount
"RTN","FBAAIARC",128,0)
 . S GRP=$P($G(^FB(161.92,+$P(G,U,2),0)),U,1)    ; adj group code
"RTN","FBAAIARC",129,0)
 . S RSN=$P($G(^FB(161.91,+$P(G,U,1),0)),U,1)    ; adj reason code
"RTN","FBAAIARC",130,0)
 . S X=GRP_"-"_RSN
"RTN","FBAAIARC",131,0)
 . I RET="" S RET=AMT_U_X Q       ; 1st adjustment data pair
"RTN","FBAAIARC",132,0)
 . S $P(RET,U,3)=AMT
"RTN","FBAAIARC",133,0)
 . S $P(RET,U,4)=X
"RTN","FBAAIARC",134,0)
 . S STOP=1
"RTN","FBAAIARC",135,0)
 . Q
"RTN","FBAAIARC",136,0)
ADJX ;
"RTN","FBAAIARC",137,0)
 Q RET
"RTN","FBAAIARC",138,0)
 ;
"RTN","FBAAIARC",139,0)
COMPIN ; compile Inpatient data
"RTN","FBAAIARC",140,0)
 ;
"RTN","FBAAIARC",141,0)
 N DATA,DFN,FBDODINV,FBDT,FBJ,FBPTSSN,FBV,FBVENAME,FBVENID,FBY0,FBY2,FBY5,FBYREJ,FBZADJ,FBZDOS,FBZIENS,FBZPTNM,FBZTYPE
"RTN","FBAAIARC",142,0)
 S FBDT=$O(^FBAAI("AD",FBIABEG),-1)
"RTN","FBAAIARC",143,0)
 F  S FBDT=$O(^FBAAI("AD",FBDT)) Q:'FBDT!(FBDT>FBIAEND)  S FBJ=0 F  S FBJ=$O(^FBAAI("AD",FBDT,FBJ)) Q:'FBJ  D
"RTN","FBAAIARC",144,0)
 . S FBY0=$G(^FBAAI(FBJ,0))
"RTN","FBAAIARC",145,0)
 . S FBY2=$G(^FBAAI(FBJ,2))
"RTN","FBAAIARC",146,0)
 . S FBY5=$G(^FBAAI(FBJ,5))
"RTN","FBAAIARC",147,0)
 . S FBYREJ=$G(^FBAAI(FBJ,"FBREJ"))
"RTN","FBAAIARC",148,0)
 . S FBDODINV=$P(FBY5,U,7) I FBDODINV="" Q        ; DoD invoice# must be present
"RTN","FBAAIARC",149,0)
 . S FBV=+$P(FBY0,U,3)      ; vendor ien
"RTN","FBAAIARC",150,0)
 . I '$D(FBIAVEN(FBV)) Q    ; vendor is not among the selected vendors for the report
"RTN","FBAAIARC",151,0)
 . S FBVENAME=$P($G(^FBAAV(FBV,0)),U,1)           ; vendor name
"RTN","FBAAIARC",152,0)
 . I FBVENAME="" S FBVENAME="~unk"
"RTN","FBAAIARC",153,0)
 . S FBVENID=$P($G(^FBAAV(FBV,0)),U,2)            ; vendor external ID
"RTN","FBAAIARC",154,0)
 . S DFN=+$P(FBY0,U,4) Q:'DFN
"RTN","FBAAIARC",155,0)
 . S FBZPTNM=$P($G(^DPT(DFN,0)),U,1) Q:FBZPTNM=""   ; patient name
"RTN","FBAAIARC",156,0)
 . S FBPTSSN=$P($G(^DPT(DFN,0)),U,9)              ; full patient SSN
"RTN","FBAAIARC",157,0)
 . S FBZIENS=FBJ_","                              ; iens
"RTN","FBAAIARC",158,0)
 . S FBZDOS=$$B9ADMIT^FBAAV5(FBZIENS)             ; admission date
"RTN","FBAAIARC",159,0)
 . I 'FBZDOS S FBZDOS=+$P(FBY0,U,6)               ; treatment from date
"RTN","FBAAIARC",160,0)
 . I 'FBZDOS Q                                    ; need to have a date of service
"RTN","FBAAIARC",161,0)
 . I FBIAIGNORE,$P(FBY2,U,5) Q                    ; cancelled
"RTN","FBAAIARC",162,0)
 . I FBIAIGNORE,$P(FBY0,U,14)'="" Q               ; voided
"RTN","FBAAIARC",163,0)
 . I FBIAIGNORE,$P(FBYREJ,U,1)'="" Q              ; rejected
"RTN","FBAAIARC",164,0)
 . I FBIAADJ,$P(FBY0,U,9)'<$P(FBY0,U,8) Q         ; skip paid in full line items
"RTN","FBAAIARC",165,0)
 . ;
"RTN","FBAAIARC",166,0)
 . S FBZTYPE="2-INPAT"
"RTN","FBAAIARC",167,0)
 . S FBZADJ=$$ADJ(2)
"RTN","FBAAIARC",168,0)
 . S DATA=FBV
"RTN","FBAAIARC",169,0)
 . S $P(DATA,U,2)=FBVENID
"RTN","FBAAIARC",170,0)
 . S $P(DATA,U,3)=FBDT
"RTN","FBAAIARC",171,0)
 . S $P(DATA,U,4)=FBPTSSN
"RTN","FBAAIARC",172,0)
 . S $P(DATA,U,5)=""
"RTN","FBAAIARC",173,0)
 . S $P(DATA,U,6)=""
"RTN","FBAAIARC",174,0)
 . S $P(DATA,U,7)=""
"RTN","FBAAIARC",175,0)
 . S $P(DATA,U,8)=$P($$B9DISCHG^FBAAV5(FBZIENS),U,1)                  ; discharge date
"RTN","FBAAIARC",176,0)
 . S $P(DATA,U,9)=$$DIAG                                              ; list of up to 25 Dx & POA codes
"RTN","FBAAIARC",177,0)
 . S $P(DATA,U,10)=$$ICD9^FBCSV1(+$P(FBY5,U,9),FBZDOS)                ; admitting dx
"RTN","FBAAIARC",178,0)
 . S $P(DATA,U,11)=$$PROC                                             ; list of up to 25 proc codes
"RTN","FBAAIARC",179,0)
 . S $P(DATA,U,12)=""
"RTN","FBAAIARC",180,0)
 . S $P(DATA,U,13)=""
"RTN","FBAAIARC",181,0)
 . S $P(DATA,U,14)=$P(FBY0,U,8)     ; amount claimed
"RTN","FBAAIARC",182,0)
 . S $P(DATA,U,15)=$P(FBY0,U,9)     ; amount paid
"RTN","FBAAIARC",183,0)
 . S $P(DATA,U,16)=$P(FBZADJ,U,1)   ; adjustment amount #1
"RTN","FBAAIARC",184,0)
 . S $P(DATA,U,17)=$P(FBZADJ,U,2)   ; adjustment group code-reason code #1
"RTN","FBAAIARC",185,0)
 . S $P(DATA,U,18)=""               ; only 1 adj for inpatient
"RTN","FBAAIARC",186,0)
 . S $P(DATA,U,19)=""
"RTN","FBAAIARC",187,0)
 . S $P(DATA,U,20)=$P(FBY0,U,1)                                 ; fee invoice number
"RTN","FBAAIARC",188,0)
 . S $P(DATA,U,21)=$P($G(^FBAA(161.7,+$P(FBY0,U,17),0)),U,1)    ; external batch#
"RTN","FBAAIARC",189,0)
 . S $P(DATA,U,22)=$P($G(^FBAA(161.7,+$P(FBY0,U,17),0)),U,2)    ; obligation# from the batch file
"RTN","FBAAIARC",190,0)
 . S $P(DATA,U,23)=$P(FBY2,U,1)                                 ; Date Paid
"RTN","FBAAIARC",191,0)
 . S $P(DATA,U,24)=$P(FBY2,U,4)                                 ; check number
"RTN","FBAAIARC",192,0)
 . S $P(DATA,U,25)=$P(FBY2,U,8)                                 ; disbursed amount
"RTN","FBAAIARC",193,0)
 . S $P(DATA,U,26)=$P(FBY2,U,5)                                 ; cancellation date
"RTN","FBAAIARC",194,0)
 . S $P(DATA,U,27)=$S($P(FBY0,U,14)'="":1,1:0)                  ; voided payment flag
"RTN","FBAAIARC",195,0)
 . S $P(DATA,U,28)=$$GET1^DIQ(162.5,FBZIENS,13)                 ; reject status external value
"RTN","FBAAIARC",196,0)
 . ;
"RTN","FBAAIARC",197,0)
 . S ^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE,FBDODINV,FBZDOS,FBZPTNM,FBZIENS)=DATA                ; store data inpatient
"RTN","FBAAIARC",198,0)
 . S ^TMP("FBAAIARB",$J,FBVENAME)=FBVENID
"RTN","FBAAIARC",199,0)
 . Q
"RTN","FBAAIARC",200,0)
COMPINX ;
"RTN","FBAAIARC",201,0)
 Q
"RTN","FBAAIARC",202,0)
 ;
"RTN","FBAAIARC",203,0)
DIAG() ; capture and format Dx codes and POA codes in a string
"RTN","FBAAIARC",204,0)
 N RET,P1,P2,PCE,DXN,POAN,DX,POA,Z
"RTN","FBAAIARC",205,0)
 S P1=$G(^FBAAI(FBJ,"DX")),P2=$G(^FBAAI(FBJ,"POA"))
"RTN","FBAAIARC",206,0)
 S RET=""
"RTN","FBAAIARC",207,0)
 F PCE=1:1:25 D
"RTN","FBAAIARC",208,0)
 . S DXN=+$P(P1,U,PCE),POAN=+$P(P2,U,PCE) Q:'DXN
"RTN","FBAAIARC",209,0)
 . S DX=$$ICD9^FBCSV1(DXN,FBZDOS) Q:DX=""    ; external diag code
"RTN","FBAAIARC",210,0)
 . S POA=$P($G(^FB(161.94,POAN,0)),U,1)      ; external POA indicator
"RTN","FBAAIARC",211,0)
 . S Z=DX
"RTN","FBAAIARC",212,0)
 . I POA'="" S Z=Z_"("_POA_")"
"RTN","FBAAIARC",213,0)
 . S RET=$S(RET="":Z,1:RET_", "_Z)
"RTN","FBAAIARC",214,0)
 . Q
"RTN","FBAAIARC",215,0)
 Q RET
"RTN","FBAAIARC",216,0)
 ;
"RTN","FBAAIARC",217,0)
PROC() ; capture and format procedure codes into a string
"RTN","FBAAIARC",218,0)
 N RET,P1,PCE,PROCN,PROC
"RTN","FBAAIARC",219,0)
 S P1=$G(^FBAAI(FBJ,"PROC"))
"RTN","FBAAIARC",220,0)
 S RET=""
"RTN","FBAAIARC",221,0)
 F PCE=1:1:25 D
"RTN","FBAAIARC",222,0)
 . S PROCN=+$P(P1,U,PCE) Q:'PROCN                   ; ptr ien to file 80.1
"RTN","FBAAIARC",223,0)
 . S PROC=$$ICD0^FBCSV1(PROCN,FBZDOS) Q:PROC=""     ; external procedure code
"RTN","FBAAIARC",224,0)
 . S RET=$S(RET="":PROC,1:RET_", "_PROC)
"RTN","FBAAIARC",225,0)
 . Q
"RTN","FBAAIARC",226,0)
 Q RET
"RTN","FBAAIARC",227,0)
 ;
"RTN","FBAAIARC",228,0)
COMPRX ; compile Pharmacy data
"RTN","FBAAIARC",229,0)
 ;
"RTN","FBAAIARC",230,0)
 N BCH,DATA,DFN,FBDODINV,FBDT,FBIA,FBINVN,FBJ,FBK,FBPTSSN,FBRXINV,FBVEN,FBVENAME,FBVENID
"RTN","FBAAIARC",231,0)
 N FBY0,FBY2,FBY6,FBYREJ,FBZADJ,FBZDOS,FBZIENS,FBZPTNM,FBZTYPE
"RTN","FBAAIARC",232,0)
 ; loop thru batch file by date finalized for specified date range
"RTN","FBAAIARC",233,0)
 S FBDT=$O(^FBAA(161.7,"AF",FBIABEG),-1)
"RTN","FBAAIARC",234,0)
 F  S FBDT=$O(^FBAA(161.7,"AF",FBDT)) Q:'FBDT!(FBDT>FBIAEND)  D
"RTN","FBAAIARC",235,0)
 . S BCH=0 F  S BCH=$O(^FBAA(161.7,"AF",FBDT,BCH)) Q:'BCH  D
"RTN","FBAAIARC",236,0)
 .. ;
"RTN","FBAAIARC",237,0)
 .. ; loop thru the pharmacy (B5) payments for a batch
"RTN","FBAAIARC",238,0)
 .. S FBJ=0 F  S FBJ=$O(^FBAA(162.1,"AE",BCH,FBJ)) Q:'FBJ  D
"RTN","FBAAIARC",239,0)
 ... S FBRXINV=$G(^FBAA(162.1,FBJ,0))   ; rx invoice level data
"RTN","FBAAIARC",240,0)
 ... S FBVEN=+$P(FBRXINV,U,4)   ; vendor ien
"RTN","FBAAIARC",241,0)
 ... I '$D(FBIAVEN(FBVEN)) Q    ; vendor is not among the selected vendors for report
"RTN","FBAAIARC",242,0)
 ... S FBIA=+$P(FBRXINV,U,23)   ; ipac ptr
"RTN","FBAAIARC",243,0)
 ... I 'FBIA Q                  ; ipac ptr must exist to be included on this report
"RTN","FBAAIARC",244,0)
 ... S FBINVN=$P(FBRXINV,U,1)   ; Rx invoice#
"RTN","FBAAIARC",245,0)
 ... S FBVENAME=$P($G(^FBAAV(FBVEN,0)),U,1)     ; vendor name
"RTN","FBAAIARC",246,0)
 ... I FBVENAME="" S FBVENAME="~unk"
"RTN","FBAAIARC",247,0)
 ... S FBVENID=$P($G(^FBAAV(FBVEN,0)),U,2)      ; vendor external ID
"RTN","FBAAIARC",248,0)
 ... ;
"RTN","FBAAIARC",249,0)
 ... S FBK=0 F  S FBK=$O(^FBAA(162.1,"AE",BCH,FBJ,FBK)) Q:'FBK  D
"RTN","FBAAIARC",250,0)
 .... S FBY0=$G(^FBAA(162.1,FBJ,"RX",FBK,0))
"RTN","FBAAIARC",251,0)
 .... S FBY2=$G(^FBAA(162.1,FBJ,"RX",FBK,2))
"RTN","FBAAIARC",252,0)
 .... S FBY6=$G(^FBAA(162.1,FBJ,"RX",FBK,6))
"RTN","FBAAIARC",253,0)
 .... S FBYREJ=$G(^FBAA(162.1,FBJ,"RX",FBK,"FBREJ"))
"RTN","FBAAIARC",254,0)
 .... S FBDODINV=$P(FBY6,U,1) I FBDODINV="" Q          ; DoD invoice# must be present
"RTN","FBAAIARC",255,0)
 .... I FBIAIGNORE,$P(FBY2,U,11) Q                     ; cancelled
"RTN","FBAAIARC",256,0)
 .... I FBIAIGNORE,$P(FBY2,U,3)'="" Q                  ; voided
"RTN","FBAAIARC",257,0)
 .... I FBIAIGNORE,$P(FBYREJ,U,1)'="" Q                ; rejected
"RTN","FBAAIARC",258,0)
 .... I FBIAADJ,$P(FBY0,U,16)'<$P(FBY0,U,4) Q          ; skip paid in full line items
"RTN","FBAAIARC",259,0)
 .... S DFN=+$P(FBY0,U,5) Q:'DFN                       ; patient ien
"RTN","FBAAIARC",260,0)
 .... S FBZPTNM=$P($G(^DPT(DFN,0)),U,1) Q:FBZPTNM=""   ; patient name
"RTN","FBAAIARC",261,0)
 .... S FBPTSSN=$P($G(^DPT(DFN,0)),U,9)                ; full patient SSN
"RTN","FBAAIARC",262,0)
 .... S FBZIENS=FBK_","_FBJ_","                        ; iens
"RTN","FBAAIARC",263,0)
 .... S FBZDOS=+$P(FBY0,U,3) Q:'FBZDOS                 ; date prescription filled is DOS
"RTN","FBAAIARC",264,0)
 .... ;
"RTN","FBAAIARC",265,0)
 .... S FBZTYPE="3-RX"
"RTN","FBAAIARC",266,0)
 .... S FBZADJ=$$ADJ(3)
"RTN","FBAAIARC",267,0)
 .... S DATA=FBVEN
"RTN","FBAAIARC",268,0)
 .... S $P(DATA,U,2)=FBVENID
"RTN","FBAAIARC",269,0)
 .... S $P(DATA,U,3)=FBDT
"RTN","FBAAIARC",270,0)
 .... S $P(DATA,U,4)=FBPTSSN
"RTN","FBAAIARC",271,0)
 .... S $P(DATA,U,5)=""
"RTN","FBAAIARC",272,0)
 .... S $P(DATA,U,6)=""
"RTN","FBAAIARC",273,0)
 .... S $P(DATA,U,7)=""
"RTN","FBAAIARC",274,0)
 .... S $P(DATA,U,8)=""
"RTN","FBAAIARC",275,0)
 .... S $P(DATA,U,9)=""
"RTN","FBAAIARC",276,0)
 .... S $P(DATA,U,10)=""
"RTN","FBAAIARC",277,0)
 .... S $P(DATA,U,11)=""
"RTN","FBAAIARC",278,0)
 .... S $P(DATA,U,12)=$P(FBY0,U,1)     ; prescription#
"RTN","FBAAIARC",279,0)
 .... S $P(DATA,U,13)=$P(FBY0,U,2)     ; drug name
"RTN","FBAAIARC",280,0)
 .... S $P(DATA,U,14)=$P(FBY0,U,4)     ; amount claimed
"RTN","FBAAIARC",281,0)
 .... S $P(DATA,U,15)=$P(FBY0,U,16)    ; amount paid
"RTN","FBAAIARC",282,0)
 .... S $P(DATA,U,16)=$P(FBZADJ,U,1)   ; adjustment amount #1
"RTN","FBAAIARC",283,0)
 .... S $P(DATA,U,17)=$P(FBZADJ,U,2)   ; adjustment group code-reason code #1
"RTN","FBAAIARC",284,0)
 .... S $P(DATA,U,18)=$P(FBZADJ,U,3)   ; adjustment amount #2
"RTN","FBAAIARC",285,0)
 .... S $P(DATA,U,19)=$P(FBZADJ,U,4)   ; adjustment group code-reason code #2
"RTN","FBAAIARC",286,0)
 .... S $P(DATA,U,20)=FBINVN                                       ; fee invoice number
"RTN","FBAAIARC",287,0)
 .... S $P(DATA,U,21)=$P($G(^FBAA(161.7,+$P(FBY0,U,17),0)),U,1)    ; external batch#
"RTN","FBAAIARC",288,0)
 .... S $P(DATA,U,22)=$P($G(^FBAA(161.7,+$P(FBY0,U,17),0)),U,2)    ; obligation# from the batch file
"RTN","FBAAIARC",289,0)
 .... S $P(DATA,U,23)=$P(FBY2,U,8)                                 ; Date Paid
"RTN","FBAAIARC",290,0)
 .... S $P(DATA,U,24)=$P(FBY2,U,10)                                ; check number
"RTN","FBAAIARC",291,0)
 .... S $P(DATA,U,25)=$P(FBY2,U,14)                                ; disbursed amount
"RTN","FBAAIARC",292,0)
 .... S $P(DATA,U,26)=$P(FBY2,U,11)                                ; cancellation date
"RTN","FBAAIARC",293,0)
 .... S $P(DATA,U,27)=$S($P(FBY2,U,3)'="":1,1:0)                   ; voided payment flag
"RTN","FBAAIARC",294,0)
 .... S $P(DATA,U,28)=$$GET1^DIQ(162.11,FBZIENS,17)                ; reject status external value
"RTN","FBAAIARC",295,0)
 .... ;
"RTN","FBAAIARC",296,0)
 .... S ^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE,FBDODINV,FBZDOS,FBZPTNM,FBZIENS)=DATA                ; store data pharmacy
"RTN","FBAAIARC",297,0)
 .... S ^TMP("FBAAIARB",$J,FBVENAME)=FBVENID
"RTN","FBAAIARC",298,0)
 .... ;
"RTN","FBAAIARC",299,0)
 .... Q
"RTN","FBAAIARC",300,0)
 ... Q
"RTN","FBAAIARC",301,0)
 .. Q
"RTN","FBAAIARC",302,0)
 . Q
"RTN","FBAAIARC",303,0)
COMPRXX ;
"RTN","FBAAIARC",304,0)
 Q
"RTN","FBAAIARC",305,0)
 ;
"RTN","FBAAIARD")
0^46^B110671934^n/a
"RTN","FBAAIARD",1,0)
FBAAIARD ;ALB/ESG - Fee IPAC Vendor Payment Report (Detail) Print ;2/17/2014
"RTN","FBAAIARD",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIARD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIARD",4,0)
 ;
"RTN","FBAAIARD",5,0)
 ; Scratch global built by FBAAIARB (Detail report)
"RTN","FBAAIARD",6,0)
 ;  ^TMP("FBAAIARB",$J,Vendor_Name,Payment_Type,DoD_Invoice#,Date_Of_Service,Pt_Name,IENS) = DATA
"RTN","FBAAIARD",7,0)
 ;
"RTN","FBAAIARD",8,0)
 Q
"RTN","FBAAIARD",9,0)
 ;
"RTN","FBAAIARD",10,0)
PRINT ; entry point for printing the report
"RTN","FBAAIARD",11,0)
 ; Variables assumed to exist from FBAAIARB:  FBIAVEN, FBIABEG, FBIAEND, FBIATYPE, FBIAEXCEL, FBIAADJ, FBIAIGNORE
"RTN","FBAAIARD",12,0)
 ;
"RTN","FBAAIARD",13,0)
 N CRT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FBDODINV,FBIASTOP,FBVENAME,FBZDOS,FBZIENS,FBZPTNM,FBZTYPE,ITSTR,PAGE,RPTG,SEPLINE,X,Y
"RTN","FBAAIARD",14,0)
 S CRT=$S(IOST["C-":1,1:0)
"RTN","FBAAIARD",15,0)
 I FBIAEXCEL S IOSL=999999     ; long screen length for Excel output
"RTN","FBAAIARD",16,0)
 S PAGE=0,FBIASTOP=0,$P(SEPLINE,"-",133)="",ITSTR=$$ITSTR^FBAAIARA(.FBIATYPE)
"RTN","FBAAIARD",17,0)
 ;
"RTN","FBAAIARD",18,0)
 I '$D(^TMP("FBAAIARB",$J)) D HDR W !!?5,"No data found for this report." G PX
"RTN","FBAAIARD",19,0)
 I $G(ZTSTOP) D HDR W !!?5,"This report was halted during compilation by TaskManager Request." G PX
"RTN","FBAAIARD",20,0)
 ;
"RTN","FBAAIARD",21,0)
 I FBIAEXCEL D HDR I FBIASTOP G PRINTX    ; for Excel CSV output, print the Header row first of all
"RTN","FBAAIARD",22,0)
 ;
"RTN","FBAAIARD",23,0)
 S FBVENAME="" F  S FBVENAME=$O(^TMP("FBAAIARB",$J,FBVENAME)) Q:FBVENAME=""!FBIASTOP  D
"RTN","FBAAIARD",24,0)
 . S FBZTYPE="" F  S FBZTYPE=$O(^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE)) Q:FBZTYPE=""!FBIASTOP  D
"RTN","FBAAIARD",25,0)
 .. K RPTG
"RTN","FBAAIARD",26,0)
 .. I 'FBIAEXCEL D HDR Q:FBIASTOP   ; page break on type since the column headings change (n/a for Excel)
"RTN","FBAAIARD",27,0)
 .. ;
"RTN","FBAAIARD",28,0)
 .. S FBDODINV="" F  S FBDODINV=$O(^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE,FBDODINV)) Q:FBDODINV=""!FBIASTOP  D
"RTN","FBAAIARD",29,0)
 ... S FBZDOS=0 F  S FBZDOS=$O(^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE,FBDODINV,FBZDOS)) Q:'FBZDOS!FBIASTOP  D
"RTN","FBAAIARD",30,0)
 .... S FBZPTNM="" F  S FBZPTNM=$O(^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE,FBDODINV,FBZDOS,FBZPTNM)) Q:FBZPTNM=""!FBIASTOP  D
"RTN","FBAAIARD",31,0)
 ..... S FBZIENS="" F  S FBZIENS=$O(^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE,FBDODINV,FBZDOS,FBZPTNM,FBZIENS)) Q:FBZIENS=""!FBIASTOP  D
"RTN","FBAAIARD",32,0)
 ...... D RPTLN
"RTN","FBAAIARD",33,0)
 ...... Q
"RTN","FBAAIARD",34,0)
 ..... Q
"RTN","FBAAIARD",35,0)
 .... Q
"RTN","FBAAIARD",36,0)
 ... Q
"RTN","FBAAIARD",37,0)
 .. Q
"RTN","FBAAIARD",38,0)
 . Q
"RTN","FBAAIARD",39,0)
 ;
"RTN","FBAAIARD",40,0)
 I FBIASTOP G PRINTX      ; get out right away if stop flag is set
"RTN","FBAAIARD",41,0)
 ;
"RTN","FBAAIARD",42,0)
 I $Y+5>IOSL D HDR I FBIASTOP G PRINTX
"RTN","FBAAIARD",43,0)
 W !!?5,"*** End of Report ***"
"RTN","FBAAIARD",44,0)
 ;
"RTN","FBAAIARD",45,0)
PX ;
"RTN","FBAAIARD",46,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","FBAAIARD",47,0)
PRINTX ;
"RTN","FBAAIARD",48,0)
 Q
"RTN","FBAAIARD",49,0)
 ;
"RTN","FBAAIARD",50,0)
RPTLN ; display one payment line item detail
"RTN","FBAAIARD",51,0)
 S RPTG=$G(^TMP("FBAAIARB",$J,FBVENAME,FBZTYPE,FBDODINV,FBZDOS,FBZPTNM,FBZIENS))
"RTN","FBAAIARD",52,0)
 ;
"RTN","FBAAIARD",53,0)
 ; for Excel output, print a CSV line and get out
"RTN","FBAAIARD",54,0)
 I FBIAEXCEL D EXCELN(RPTG) Q
"RTN","FBAAIARD",55,0)
 ;
"RTN","FBAAIARD",56,0)
 I $Y+5>IOSL D HDR Q:FBIASTOP                                    ; check for page break
"RTN","FBAAIARD",57,0)
 W !,$$LJ^XLFSTR(FBDODINV,20)                                    ; DoD invoice#
"RTN","FBAAIARD",58,0)
 W ?21,$$LJ^XLFSTR(FBZPTNM,"16T")                                ; patient name
"RTN","FBAAIARD",59,0)
 W ?38,$E($P(RPTG,U,4),6,10)                                     ; patient ID - last4 (10th digit for "P"seudo SSN)
"RTN","FBAAIARD",60,0)
 W ?44,$$FMTE^XLFDT(FBZDOS,"2Z")                                 ; date of service
"RTN","FBAAIARD",61,0)
 ;
"RTN","FBAAIARD",62,0)
 I +FBZTYPE=1!(+FBZTYPE=4) W ?54,$P(RPTG,U,5),?61,$P(RPTG,U,7)   ; outpat/ancil procedure code/revenue code
"RTN","FBAAIARD",63,0)
 I +FBZTYPE=2,$P(RPTG,U,8) W ?54,$$FMTE^XLFDT($P(RPTG,U,8),"2Z") ; inpatient discharge date
"RTN","FBAAIARD",64,0)
 I +FBZTYPE=3 W ?54,$P(RPTG,U,12)                                ; pharmacy prescription number
"RTN","FBAAIARD",65,0)
 ;
"RTN","FBAAIARD",66,0)
 W ?64,$$RJ^XLFSTR($FN($P(RPTG,U,14),"",2),10)                   ; amount claimed
"RTN","FBAAIARD",67,0)
 W $$RJ^XLFSTR($FN($P(RPTG,U,15),"",2),10)                       ; amount paid
"RTN","FBAAIARD",68,0)
 W $$RJ^XLFSTR($FN($P(RPTG,U,16),"",2),10)                       ; amount adjusted #1
"RTN","FBAAIARD",69,0)
 W ?95,$E($P(RPTG,U,17),1,6)                                     ; adjustment group code-reason code #1
"RTN","FBAAIARD",70,0)
 W ?103,$$FMTE^XLFDT($P(RPTG,U,23),"2Z")                         ; date paid
"RTN","FBAAIARD",71,0)
 W ?113,$E($P(RPTG,U,24),1,8)                                    ; check number
"RTN","FBAAIARD",72,0)
 W ?122,$$RJ^XLFSTR($FN($P(RPTG,U,25),"",2),"10T")               ; disbursed amount
"RTN","FBAAIARD",73,0)
 ;
"RTN","FBAAIARD",74,0)
 ; line 2 data
"RTN","FBAAIARD",75,0)
 W !?3,$P(RPTG,U,20)                                             ; Fee invoice#
"RTN","FBAAIARD",76,0)
 W ?14,$P(RPTG,U,21)                                             ; batch#
"RTN","FBAAIARD",77,0)
 W ?21,$P(RPTG,U,22)                                             ; obligation#
"RTN","FBAAIARD",78,0)
 W ?29,$S($P(RPTG,U,27):"**VOIDED**",1:"")                       ; voided payment indicator
"RTN","FBAAIARD",79,0)
 ;
"RTN","FBAAIARD",80,0)
 I +FBZTYPE'=2,$P(RPTG,U,28)'="" W ?40,"**REJECTED**"            ; rejected payment indicator (not inpat)
"RTN","FBAAIARD",81,0)
 I +FBZTYPE=2 W ?46,$P(RPTG,U,10)                                ; inpatient admitting diagnosis code
"RTN","FBAAIARD",82,0)
 I +FBZTYPE=1!(+FBZTYPE=4) W ?54,$P(RPTG,U,6)                    ; outpat/ancil list of proc modifiers
"RTN","FBAAIARD",83,0)
 I +FBZTYPE=3 W ?54,$E($P(RPTG,U,13),1,29)                       ; pharmacy drug name
"RTN","FBAAIARD",84,0)
 I +FBZTYPE=2,$P(RPTG,U,28)'="" W ?61,"**REJECTED**"             ; rejected payment indicator (inpat)
"RTN","FBAAIARD",85,0)
 ;
"RTN","FBAAIARD",86,0)
 I $P(RPTG,U,18) W ?84,$$RJ^XLFSTR($FN($P(RPTG,U,18),"",2),10)   ; amount adjusted #2
"RTN","FBAAIARD",87,0)
 W ?95,$E($P(RPTG,U,19),1,6)                                     ; adjustment group code-reason code #2
"RTN","FBAAIARD",88,0)
 ;
"RTN","FBAAIARD",89,0)
 I $P(RPTG,U,26) W ?106,"**CANCELLED ",$$FMTE^XLFDT($P(RPTG,U,26),"2Z"),"**"
"RTN","FBAAIARD",90,0)
 ;
"RTN","FBAAIARD",91,0)
 I +FBZTYPE'=2 Q    ; no more data for anything except inpatient
"RTN","FBAAIARD",92,0)
 ;
"RTN","FBAAIARD",93,0)
 ; Inpatient display of up to 25 diagnosis/poa and 25 procedure codes
"RTN","FBAAIARD",94,0)
 I $P(RPTG,U,9)'="" D DIAGDISP($P(RPTG,U,9)) Q:FBIASTOP
"RTN","FBAAIARD",95,0)
 I $P(RPTG,U,11)'="" D PROCDISP($P(RPTG,U,11)) Q:FBIASTOP
"RTN","FBAAIARD",96,0)
 ;
"RTN","FBAAIARD",97,0)
RPTLNX ;
"RTN","FBAAIARD",98,0)
 Q
"RTN","FBAAIARD",99,0)
 ;
"RTN","FBAAIARD",100,0)
DIAGDISP(Z) ; For inpatient, display diagnosis codes and POA codes
"RTN","FBAAIARD",101,0)
 N DELIM,P,DXP
"RTN","FBAAIARD",102,0)
 I $Y+4>IOSL D HDR Q:FBIASTOP     ; check for page break
"RTN","FBAAIARD",103,0)
 S DELIM=", "
"RTN","FBAAIARD",104,0)
 W !?3,"DX(POA): "
"RTN","FBAAIARD",105,0)
 F P=1:1:$L(Z,DELIM) D
"RTN","FBAAIARD",106,0)
 . S DXP=$P(Z,DELIM,P) Q:DXP=""
"RTN","FBAAIARD",107,0)
 . I $X+$L(DXP)+4>IOM W !?12
"RTN","FBAAIARD",108,0)
 . W DXP
"RTN","FBAAIARD",109,0)
 . I $P(Z,DELIM,P+1)'="" W DELIM
"RTN","FBAAIARD",110,0)
 . Q
"RTN","FBAAIARD",111,0)
 Q
"RTN","FBAAIARD",112,0)
 ;
"RTN","FBAAIARD",113,0)
PROCDISP(Z) ; For inpatient, display procedure codes
"RTN","FBAAIARD",114,0)
 N DELIM,P,PRC
"RTN","FBAAIARD",115,0)
 I $Y+4>IOSL D HDR Q:FBIASTOP     ; check for page break
"RTN","FBAAIARD",116,0)
 S DELIM=", "
"RTN","FBAAIARD",117,0)
 W !?6,"PROC: "
"RTN","FBAAIARD",118,0)
 F P=1:1:$L(Z,DELIM) D
"RTN","FBAAIARD",119,0)
 . S PRC=$P(Z,DELIM,P) Q:PRC=""
"RTN","FBAAIARD",120,0)
 . I $X+$L(PRC)+4>IOM W !?12
"RTN","FBAAIARD",121,0)
 . W PRC
"RTN","FBAAIARD",122,0)
 . I $P(Z,DELIM,P+1)'="" W DELIM
"RTN","FBAAIARD",123,0)
 . Q
"RTN","FBAAIARD",124,0)
 Q
"RTN","FBAAIARD",125,0)
 ;
"RTN","FBAAIARD",126,0)
HDR ; report header
"RTN","FBAAIARD",127,0)
 ;
"RTN","FBAAIARD",128,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,HTYP,VENID,X,Y
"RTN","FBAAIARD",129,0)
 ;
"RTN","FBAAIARD",130,0)
 ; Do an end of page reader call if page# exists and device is the screen
"RTN","FBAAIARD",131,0)
 I PAGE,CRT S DIR(0)="E" D ^DIR K DIR I 'Y S FBIASTOP=1 G HDRX
"RTN","FBAAIARD",132,0)
 ;
"RTN","FBAAIARD",133,0)
 ; If screen output or page# exists, do a form feed
"RTN","FBAAIARD",134,0)
 I PAGE!CRT W @IOF
"RTN","FBAAIARD",135,0)
 ;
"RTN","FBAAIARD",136,0)
 ; First printer/file page - do a left margin reset
"RTN","FBAAIARD",137,0)
 I 'PAGE,'CRT W $C(13)
"RTN","FBAAIARD",138,0)
 ;
"RTN","FBAAIARD",139,0)
 S PAGE=PAGE+1    ; increment page#
"RTN","FBAAIARD",140,0)
 ;
"RTN","FBAAIARD",141,0)
 ; For Excel CSV format, display the column headers only
"RTN","FBAAIARD",142,0)
 I FBIAEXCEL D EXCELHD G HDRX
"RTN","FBAAIARD",143,0)
 ;
"RTN","FBAAIARD",144,0)
 S HTYP=$G(FBZTYPE)   ; current type being displayed on this page (may not exist)
"RTN","FBAAIARD",145,0)
 ;
"RTN","FBAAIARD",146,0)
 ; Display the report headers
"RTN","FBAAIARD",147,0)
 W "IPAC Vendor Payment Report"
"RTN","FBAAIARD",148,0)
 W ?44,"For Date Range ",$$FMTE^XLFDT(FBIABEG,"5DZ")," - ",$$FMTE^XLFDT(FBIAEND,"5DZ")
"RTN","FBAAIARD",149,0)
 W ?96,$$FMTE^XLFDT($$NOW^XLFDT),?120,"Page: ",PAGE
"RTN","FBAAIARD",150,0)
 W !?3,"Selected Invoice Types: ",ITSTR
"RTN","FBAAIARD",151,0)
 I FBIAADJ W ?102,"**Suspended Payments Only**"
"RTN","FBAAIARD",152,0)
 ;
"RTN","FBAAIARD",153,0)
 I $G(FBVENAME)'="" D
"RTN","FBAAIARD",154,0)
 . W !?3,"Vendor Name: ",FBVENAME
"RTN","FBAAIARD",155,0)
 . S VENID=$P($G(RPTG),U,2)
"RTN","FBAAIARD",156,0)
 . I VENID="" S VENID=$P($G(^TMP("FBAAIARB",$J,FBVENAME)),U,1)
"RTN","FBAAIARD",157,0)
 . I VENID'="" W "  (ID# ",VENID,")"
"RTN","FBAAIARD",158,0)
 . I HTYP="" Q
"RTN","FBAAIARD",159,0)
 . W ?81,"Invoice Type: "
"RTN","FBAAIARD",160,0)
 . I +HTYP=1!(+HTYP=4) W "Outpatient/Civil Hospital Ancillary"
"RTN","FBAAIARD",161,0)
 . I +HTYP=2 W "Civil Hospital Inpatient"
"RTN","FBAAIARD",162,0)
 . I +HTYP=3 W "Pharmacy"
"RTN","FBAAIARD",163,0)
 . Q
"RTN","FBAAIARD",164,0)
 ;
"RTN","FBAAIARD",165,0)
 ; now display the column headers
"RTN","FBAAIARD",166,0)
 W !,"DoD Invoice Number",?21,"Patient Name",?38,"SSN"
"RTN","FBAAIARD",167,0)
 I +HTYP=1!(+HTYP=4) W ?44,"Svc Dt    Proc   Rev"
"RTN","FBAAIARD",168,0)
 I +HTYP=2 W ?44,"Admit Dt  Disch Dt"
"RTN","FBAAIARD",169,0)
 I +HTYP=3 W ?44,"Fill Dt   Rx#"
"RTN","FBAAIARD",170,0)
 W ?66,"Claimed",?79,"Paid",?90,"Adj  Reason",?103,"Dt Paid",?113,"Check#",?123,"Disbursed"
"RTN","FBAAIARD",171,0)
 W !?3,"Fee Inv#",?14,"Bch#",?21,"Oblig#"
"RTN","FBAAIARD",172,0)
 I +HTYP=1!(+HTYP=4) W ?54,"Modifiers"
"RTN","FBAAIARD",173,0)
 I +HTYP=2 W ?46,"Adm Dx"
"RTN","FBAAIARD",174,0)
 I +HTYP=3 W ?54,"Drug Name"
"RTN","FBAAIARD",175,0)
 W !,SEPLINE
"RTN","FBAAIARD",176,0)
 ;
"RTN","FBAAIARD",177,0)
 ; check for a TaskManager stop request
"RTN","FBAAIARD",178,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HDRX
"RTN","FBAAIARD",179,0)
 . S (ZTSTOP,FBIASTOP)=1
"RTN","FBAAIARD",180,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","FBAAIARD",181,0)
 . Q
"RTN","FBAAIARD",182,0)
HDRX ;
"RTN","FBAAIARD",183,0)
 Q
"RTN","FBAAIARD",184,0)
 ;
"RTN","FBAAIARD",185,0)
EXCELHD ; print an Excel CSV header record (only 1 Excel CSV header should print for the whole report)
"RTN","FBAAIARD",186,0)
 N FBH
"RTN","FBAAIARD",187,0)
 S FBH=$$CSV("","Vendor Name")
"RTN","FBAAIARD",188,0)
 S FBH=$$CSV(FBH,"Vendor ID")
"RTN","FBAAIARD",189,0)
 S FBH=$$CSV(FBH,"Payment Type")
"RTN","FBAAIARD",190,0)
 S FBH=$$CSV(FBH,"DoD Invoice#")
"RTN","FBAAIARD",191,0)
 S FBH=$$CSV(FBH,"Date of Service/Fill Date/Admit Date")
"RTN","FBAAIARD",192,0)
 S FBH=$$CSV(FBH,"Patient Name")
"RTN","FBAAIARD",193,0)
 S FBH=$$CSV(FBH,"Date Finalized")
"RTN","FBAAIARD",194,0)
 S FBH=$$CSV(FBH,"Patient SSN")
"RTN","FBAAIARD",195,0)
 S FBH=$$CSV(FBH,"CPT Procedure Code")
"RTN","FBAAIARD",196,0)
 S FBH=$$CSV(FBH,"CPT Procedure Modifiers")
"RTN","FBAAIARD",197,0)
 S FBH=$$CSV(FBH,"Revenue Code")
"RTN","FBAAIARD",198,0)
 S FBH=$$CSV(FBH,"Discharge Date")
"RTN","FBAAIARD",199,0)
 S FBH=$$CSV(FBH,"Diagnosis/POA Codes")
"RTN","FBAAIARD",200,0)
 S FBH=$$CSV(FBH,"Admitting Diagnosis")
"RTN","FBAAIARD",201,0)
 S FBH=$$CSV(FBH,"Procedure Codes Inpatient")
"RTN","FBAAIARD",202,0)
 S FBH=$$CSV(FBH,"Prescription#")
"RTN","FBAAIARD",203,0)
 S FBH=$$CSV(FBH,"Drug Name")
"RTN","FBAAIARD",204,0)
 S FBH=$$CSV(FBH,"Amount Claimed")
"RTN","FBAAIARD",205,0)
 S FBH=$$CSV(FBH,"Amount Paid")
"RTN","FBAAIARD",206,0)
 S FBH=$$CSV(FBH,"Adjustment Amount #1")
"RTN","FBAAIARD",207,0)
 S FBH=$$CSV(FBH,"Adjustment Reason #1")
"RTN","FBAAIARD",208,0)
 S FBH=$$CSV(FBH,"Adjustment Amount #2")
"RTN","FBAAIARD",209,0)
 S FBH=$$CSV(FBH,"Adjustment Reason #2")
"RTN","FBAAIARD",210,0)
 S FBH=$$CSV(FBH,"Fee Invoice#")
"RTN","FBAAIARD",211,0)
 S FBH=$$CSV(FBH,"Batch#")
"RTN","FBAAIARD",212,0)
 S FBH=$$CSV(FBH,"Obligation#")
"RTN","FBAAIARD",213,0)
 S FBH=$$CSV(FBH,"Date Paid")
"RTN","FBAAIARD",214,0)
 S FBH=$$CSV(FBH,"Check#")
"RTN","FBAAIARD",215,0)
 S FBH=$$CSV(FBH,"Disbursed Amount")
"RTN","FBAAIARD",216,0)
 S FBH=$$CSV(FBH,"Cancellation Date")
"RTN","FBAAIARD",217,0)
 S FBH=$$CSV(FBH,"Voided Payment Flag")
"RTN","FBAAIARD",218,0)
 S FBH=$$CSV(FBH,"Reject Status")
"RTN","FBAAIARD",219,0)
 W FBH
"RTN","FBAAIARD",220,0)
 Q
"RTN","FBAAIARD",221,0)
 ;
"RTN","FBAAIARD",222,0)
EXCELN(RPTG) ; write a line of CSV data
"RTN","FBAAIARD",223,0)
 N FBZ,X,Y
"RTN","FBAAIARD",224,0)
 S X=FBZTYPE
"RTN","FBAAIARD",225,0)
 S Y=$S(+X=1:"Outpatient",+X=2:"Inpatient",+X=3:"Pharmacy",1:"Ancillary")
"RTN","FBAAIARD",226,0)
 ;
"RTN","FBAAIARD",227,0)
 S FBZ=$$CSV("",FBVENAME)                           ; vendor name
"RTN","FBAAIARD",228,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,2))                      ; vendor ID
"RTN","FBAAIARD",229,0)
 S FBZ=$$CSV(FBZ,Y)                                 ; invoice/payment type
"RTN","FBAAIARD",230,0)
 S FBZ=$$CSV(FBZ,FBDODINV)                          ; DoD invoice#
"RTN","FBAAIARD",231,0)
 S FBZ=$$CSV(FBZ,$$FMTE^XLFDT(FBZDOS,"2Z"))         ; date of service/fill date/admit date
"RTN","FBAAIARD",232,0)
 S FBZ=$$CSV(FBZ,FBZPTNM)                           ; pt name
"RTN","FBAAIARD",233,0)
 S FBZ=$$CSV(FBZ,$$FMTE^XLFDT($P(RPTG,U,3),"2Z"))   ; Date line item finalized within the date range of this report
"RTN","FBAAIARD",234,0)
 S FBZ=$$CSV(FBZ,$E($P(RPTG,U,4),6,10))             ; pt ssn last 4
"RTN","FBAAIARD",235,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,5))                      ; cpt procedure code
"RTN","FBAAIARD",236,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,6))                      ; CPT modifiers
"RTN","FBAAIARD",237,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,7))                      ; revenue code
"RTN","FBAAIARD",238,0)
 S FBZ=$$CSV(FBZ,$$FMTE^XLFDT($P(RPTG,U,8),"2Z"))   ; discharge date
"RTN","FBAAIARD",239,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,9))                      ; list of Diag/poa codes
"RTN","FBAAIARD",240,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,10))                     ; admitting dx
"RTN","FBAAIARD",241,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,11))                     ; list of inpatient procedure codes
"RTN","FBAAIARD",242,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,12))                     ; prescription#
"RTN","FBAAIARD",243,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,13))                     ; drug name
"RTN","FBAAIARD",244,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,14))                     ; amt claimed
"RTN","FBAAIARD",245,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,15))                     ; amt paid
"RTN","FBAAIARD",246,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,16))                     ; adjustment amt#1
"RTN","FBAAIARD",247,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,17))                     ; adjustment reason#1
"RTN","FBAAIARD",248,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,18))                     ; adjustment amt#2
"RTN","FBAAIARD",249,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,19))                     ; adjustment reason#2
"RTN","FBAAIARD",250,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,20))                     ; fee basis invoice#
"RTN","FBAAIARD",251,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,21))                     ; batch#
"RTN","FBAAIARD",252,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,22))                     ; obligation#
"RTN","FBAAIARD",253,0)
 S FBZ=$$CSV(FBZ,$$FMTE^XLFDT($P(RPTG,U,23),"2Z"))  ; date paid
"RTN","FBAAIARD",254,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,24))                     ; check#
"RTN","FBAAIARD",255,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,25))                     ; disbursed amt
"RTN","FBAAIARD",256,0)
 S FBZ=$$CSV(FBZ,$$FMTE^XLFDT($P(RPTG,U,26),"2Z"))  ; cancellation date
"RTN","FBAAIARD",257,0)
 S FBZ=$$CSV(FBZ,$S($P(RPTG,U,27):"VOID",1:""))     ; voided payment flag
"RTN","FBAAIARD",258,0)
 S FBZ=$$CSV(FBZ,$P(RPTG,U,28))                     ; reject status
"RTN","FBAAIARD",259,0)
 W !,FBZ
"RTN","FBAAIARD",260,0)
 Q
"RTN","FBAAIARD",261,0)
 ;
"RTN","FBAAIARD",262,0)
CSV(STRING,DATA) ; build the Excel data string for CSV format
"RTN","FBAAIARD",263,0)
 S DATA=$C(34)_$TR(DATA,$C(34),$C(39))_$C(34)
"RTN","FBAAIARD",264,0)
 S STRING=$S(STRING="":DATA,1:STRING_","_DATA)
"RTN","FBAAIARD",265,0)
 Q STRING
"RTN","FBAAIARD",266,0)
 ;
"RTN","FBAAIAU")
0^38^B136125248^n/a
"RTN","FBAAIAU",1,0)
FBAAIAU ;ALB/FA - BUILD C8 MESSAGE ;03 Dec 2013  9:34 AM
"RTN","FBAAIAU",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIAU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIAU",4,0)
 ;
"RTN","FBAAIAU",5,0)
 ; Contains utility functions for IPAC Vendor Agreement Management
"RTN","FBAAIAU",6,0)
 ;
"RTN","FBAAIAU",7,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAU",8,0)
 ;                           Methods
"RTN","FBAAIAU",9,0)
 ; CHKREQ       - Makes sure that all the required fields of the IPAC Vendor
"RTN","FBAAIAU",10,0)
 ;                agreement have values and if they do, changes the status of
"RTN","FBAAIAU",11,0)
 ;                the agreement to 'A'
"RTN","FBAAIAU",12,0)
 ; DELALL       - Delete all Vendor Agreements (161.95) and MRAs (161.96)
"RTN","FBAAIAU",13,0)
 ; LOCKVA       - Attempts to lock a specified IPAC Vendor Agreement
"RTN","FBAAIAU",14,0)
 ; SELMRA       - Displays a list of all the current MRA records and allows the
"RTN","FBAAIAU",15,0)
 ;                user to select one
"RTN","FBAAIAU",16,0)
 ; SELVA        - Displays a list of all the current IPAC Vendor Agreements and
"RTN","FBAAIAU",17,0)
 ;                allows the user to either select one to be edited or type 'NEW'
"RTN","FBAAIAU",18,0)
 ;                to enter a new one
"RTN","FBAAIAU",19,0)
 ; VADISP       - Returns the IPAC Vendor Agreement Display Layout for a 
"RTN","FBAAIAU",20,0)
 ;                specified vendor agreement
"RTN","FBAAIAU",21,0)
 ; VALOAD       - Returns an array of external field values for a specified
"RTN","FBAAIAU",22,0)
 ;                Vendor Agreement
"RTN","FBAAIAU",23,0)
 ; UNLOCKVA     - Unlocks a specified IPAC Vendor Agreement
"RTN","FBAAIAU",24,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAU",25,0)
 ;
"RTN","FBAAIAU",26,0)
CHKREQ(VAIEN)   ;EP
"RTN","FBAAIAU",27,0)
 ; Checks to see if all of the required fields of the IPAC vendor agreement have
"RTN","FBAAIAU",28,0)
 ; been entered and if so, change the status of the agreement to 'A' 
"RTN","FBAAIAU",29,0)
 ; Input:       VAIEN       - IEN of the IPAC Vendor agreement to be checked
"RTN","FBAAIAU",30,0)
 ; Called From: FBAAIAE, FBAAIAC
"RTN","FBAAIAU",31,0)
 ; NOTE:        Quits if the current status of the agreement is not 'N' without
"RTN","FBAAIAU",32,0)
 ;              doing anything. Also, the fields of the Vendor agreement are
"RTN","FBAAIAU",33,0)
 ;              HARD CODED in this method - if a new required field is added this
"RTN","FBAAIAU",34,0)
 ;              method must be modified
"RTN","FBAAIAU",35,0)
 N ARR,ERR,DA,DIE,DR,DTOUT,FLD,FLDINFO,NDE,PCE,STOP
"RTN","FBAAIAU",36,0)
 Q:'$D(^FBAA(161.95,VAIEN,0))                       ; Invalid IPAC agreement IEN
"RTN","FBAAIAU",37,0)
 Q:$P(^FBAA(161.95,VAIEN,0),U,4)'="N"               ; Status isn't 'N'
"RTN","FBAAIAU",38,0)
 ;
"RTN","FBAAIAU",39,0)
 ; First get a list of all the required fields
"RTN","FBAAIAU",40,0)
 F FLD=1:1:16,7.5 D                                 ; NOTE: HARD CODED field list
"RTN","FBAAIAU",41,0)
 . D FIELD^DID(161.95,FLD,,"GLOBAL SUBSCRIPT LOCATION;SPECIFIER","ARR","ERR")
"RTN","FBAAIAU",42,0)
 . Q:$E(ARR("SPECIFIER"),1)'="R"                    ; Not a required field
"RTN","FBAAIAU",43,0)
 . S FLDINFO(FLD)=ARR("GLOBAL SUBSCRIPT LOCATION")  ; Node;Piece 
"RTN","FBAAIAU",44,0)
 ;
"RTN","FBAAIAU",45,0)
 ; Now loop Through all of the required fields and check for data
"RTN","FBAAIAU",46,0)
 S FLD=0,STOP=0
"RTN","FBAAIAU",47,0)
 F  D  Q:FLD=""  Q:STOP
"RTN","FBAAIAU",48,0)
 . S FLD=$O(FLDINFO(FLD))
"RTN","FBAAIAU",49,0)
 . Q:FLD=""
"RTN","FBAAIAU",50,0)
 . S NDE=$P(FLDINFO(FLD),";",1),PCE=$P(FLDINFO(FLD),";",2)
"RTN","FBAAIAU",51,0)
 . S:$P($G(^FBAA(161.95,VAIEN,NDE)),U,PCE)="" STOP=1    ; Missing required field
"RTN","FBAAIAU",52,0)
 Q:STOP
"RTN","FBAAIAU",53,0)
 ;
"RTN","FBAAIAU",54,0)
 S DIE=161.95,DA=VAIEN
"RTN","FBAAIAU",55,0)
 S DR="3////A"
"RTN","FBAAIAU",56,0)
 D ^DIE
"RTN","FBAAIAU",57,0)
 Q
"RTN","FBAAIAU",58,0)
 ;
"RTN","FBAAIAU",59,0)
DELALL ;EP
"RTN","FBAAIAU",60,0)
 ; Clean-up utility to delete all existing Vendor agreements and MRA records
"RTN","FBAAIAU",61,0)
 ; Input:    None
"RTN","FBAAIAU",62,0)
 ; Output:   ^FBAA(161.95) AND ^FBAA(161.96) are cleared
"RTN","FBAAIAU",63,0)
 N DA,DIE,DIK,DR,DTOUT
"RTN","FBAAIAU",64,0)
 S DIK="^FBAA(161.95,"
"RTN","FBAAIAU",65,0)
 S DA=0
"RTN","FBAAIAU",66,0)
 F  D  Q:DA=""
"RTN","FBAAIAU",67,0)
 . S DA=$O(^FBAA(161.95,DA))
"RTN","FBAAIAU",68,0)
 . Q:DA=""
"RTN","FBAAIAU",69,0)
 . D ^DIK
"RTN","FBAAIAU",70,0)
 ;
"RTN","FBAAIAU",71,0)
 S DIK="^FBAA(161.96,"
"RTN","FBAAIAU",72,0)
 S DA=0
"RTN","FBAAIAU",73,0)
 F  D  Q:DA=""
"RTN","FBAAIAU",74,0)
 . S DA=$O(^FBAA(161.96,DA))
"RTN","FBAAIAU",75,0)
 . Q:DA=""
"RTN","FBAAIAU",76,0)
 . D ^DIK
"RTN","FBAAIAU",77,0)
 ;
"RTN","FBAAIAU",78,0)
 ; Reset the Last IPAC number
"RTN","FBAAIAU",79,0)
 S DIE=161.4,DA=1,DR="80///100"
"RTN","FBAAIAU",80,0)
 D ^DIE                                         ; File the new last number
"RTN","FBAAIAU",81,0)
 Q
"RTN","FBAAIAU",82,0)
 ;
"RTN","FBAAIAU",83,0)
SELVA(FLINE,STEXT,NEW,SVENIEN) ;EP
"RTN","FBAAIAU",84,0)
 ; Displays all of the currently filed IPAC Vendor agreements and allows the user
"RTN","FBAAIAU",85,0)
 ; to select one to edit or type 'NEW' to enter a new one
"RTN","FBAAIAU",86,0)
 ; Input:   FLINE       - Text of the first line to be displayed
"RTN","FBAAIAU",87,0)
 ;          STEXT       - User Selection prompt to be displayed
"RTN","FBAAIAU",88,0)
 ;                        NOTE: "" is allowed here.  If null, this becomes a 
"RTN","FBAAIAU",89,0)
 ;                              display only method with no ability select a Vendor
"RTN","FBAAIAU",90,0)
 ;                              OR to type NEW to enter a new one
"RTN","FBAAIAU",91,0)
 ;          NEW         - 1 to allow NEW as a valid selection, 0 otherwise
"RTN","FBAAIAU",92,0)
 ;          SVENIEN     - IEN of a specified vendor
"RTN","FBAAIAU",93,0)
 ;                        Optional, if specified, only IPAC agreements for the
"RTN","FBAAIAU",94,0)
 ;                        specified vendor will be displayed
"RTN","FBAAIAU",95,0)
 ; Output:  Current IPAC Vendor agreements displayed to the screen, if there are none,
"RTN","FBAAIAU",96,0)
 ;          a message is displayed
"RTN","FBAAIAU",97,0)
 ; Returns: VAIEN       - IEN of the selected IPAC Agreement
"RTN","FBAAIAU",98,0)
 ;                        0  - User wants/needs to enter a new agreement
"RTN","FBAAIAU",99,0)
 ;                        "" - No IPAC Vendor Agreement was selected
"RTN","FBAAIAU",100,0)
 N CNT,LN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,IX,OUT,VADATA,VAIEN,VENIEN,X,XX,Y
"RTN","FBAAIAU",101,0)
 S:'$D(SVENIEN) SVENIEN=""
"RTN","FBAAIAU",102,0)
 ;
"RTN","FBAAIAU",103,0)
 ; First create and array of all current IPAC Vendor Agreement data to display
"RTN","FBAAIAU",104,0)
 S CNT=0,VAIEN=0
"RTN","FBAAIAU",105,0)
 F  D  Q:+VAIEN=0
"RTN","FBAAIAU",106,0)
 . S VAIEN=$O(^FBAA(161.95,VAIEN))
"RTN","FBAAIAU",107,0)
 . Q:+VAIEN=0
"RTN","FBAAIAU",108,0)
 . S VENIEN=$P(^FBAA(161.95,VAIEN,0),U,2)                       ; Vendor IEN
"RTN","FBAAIAU",109,0)
 . Q:(SVENIEN'="")&(SVENIEN'=VENIEN)                            ; Not the selected Vendor
"RTN","FBAAIAU",110,0)
 . S CNT=CNT+1
"RTN","FBAAIAU",111,0)
 . S XX=$$LJ^XLFSTR(CNT,3)                                      ; Selection #
"RTN","FBAAIAU",112,0)
 . S XX=XX_$$LJ^XLFSTR($P(^FBAA(161.95,VAIEN,0),U,1),11)        ; ID
"RTN","FBAAIAU",113,0)
 . S XX=XX_$$LJ^XLFSTR($P(^FBAA(161.95,VAIEN,0),U,3),5)         ; Fiscal Year
"RTN","FBAAIAU",114,0)
 . S XX=XX_$$LJ^XLFSTR($$GET1^DIQ(161.2,VENIEN_",",.01),"29T")  ; Vendor Name
"RTN","FBAAIAU",115,0)
 . S XX=XX_"  "
"RTN","FBAAIAU",116,0)
 . S XX=XX_$P(^FBAA(161.95,VAIEN,0),U,4)_" "                    ; Status
"RTN","FBAAIAU",117,0)
 . S XX=XX_$$LJ^XLFSTR($P(^FBAA(161.95,VAIEN,0),U,5),"26T")     ; Description
"RTN","FBAAIAU",118,0)
 . S VADATA(CNT)=VAIEN_U_XX
"RTN","FBAAIAU",119,0)
 ;
"RTN","FBAAIAU",120,0)
 I 'CNT D  Q OUT
"RTN","FBAAIAU",121,0)
 . S OUT=""
"RTN","FBAAIAU",122,0)
 . Q:STEXT=""
"RTN","FBAAIAU",123,0)
 . W !!,"No IPAC Agreements are currently on file."
"RTN","FBAAIAU",124,0)
 . H:'NEW 1
"RTN","FBAAIAU",125,0)
 . Q:'NEW
"RTN","FBAAIAU",126,0)
 . S DIR("A")="Enter a new agreement"
"RTN","FBAAIAU",127,0)
 . S DIR(0)="Y"
"RTN","FBAAIAU",128,0)
 . D ^DIR
"RTN","FBAAIAU",129,0)
 . S:+Y=1 OUT=0
"RTN","FBAAIAU",130,0)
 ;
"RTN","FBAAIAU",131,0)
 ; Next display all of the current IPAC Vendor Agreements
"RTN","FBAAIAU",132,0)
 S DIR(0)="FO",LN=0
"RTN","FBAAIAU",133,0)
 S:NEW DIR("B")="NEW"
"RTN","FBAAIAU",134,0)
 S LN=LN+1,DIR("A",LN)=FLINE
"RTN","FBAAIAU",135,0)
 S LN=LN+1,DIR("A",LN)=" "
"RTN","FBAAIAU",136,0)
 S LN=LN+1,DIR("A",LN)="#  ID         FY   Vendor                         S Description"
"RTN","FBAAIAU",137,0)
 S LN=LN+1,DIR("A",LN)="-- ---------- ---- ------------------------------ - -------------------------"
"RTN","FBAAIAU",138,0)
 S IX=""
"RTN","FBAAIAU",139,0)
 F  D  Q:IX=""
"RTN","FBAAIAU",140,0)
 . S IX=$O(VADATA(IX))
"RTN","FBAAIAU",141,0)
 . Q:IX=""
"RTN","FBAAIAU",142,0)
 . S LN=LN+1,DIR("A",LN)=$P(VADATA(IX),U,2)
"RTN","FBAAIAU",143,0)
 I STEXT="" D  Q ""                                             ; Just display, no selection
"RTN","FBAAIAU",144,0)
 . W !!
"RTN","FBAAIAU",145,0)
 . S LN=""
"RTN","FBAAIAU",146,0)
 . F  D  Q:LN=""
"RTN","FBAAIAU",147,0)
 . . S LN=$O(DIR("A",LN))
"RTN","FBAAIAU",148,0)
 . . Q:LN=""
"RTN","FBAAIAU",149,0)
 . . W !,DIR("A",LN)
"RTN","FBAAIAU",150,0)
 S LN=LN+1,DIR("A",LN)=" "
"RTN","FBAAIAU",151,0)
 S LN=LN+1,DIR("A",LN)=STEXT
"RTN","FBAAIAU",152,0)
 S DIR("A")="Selection #"
"RTN","FBAAIAU",153,0)
SELVA1 ; Looping tag
"RTN","FBAAIAU",154,0)
 W !!
"RTN","FBAAIAU",155,0)
 K X,Y
"RTN","FBAAIAU",156,0)
 D ^DIR
"RTN","FBAAIAU",157,0)
 I $D(DTOUT)!$D(DUOUT) Q ""                                     ; User timed out or pressed ^
"RTN","FBAAIAU",158,0)
 S XX=$$UP^XLFSTR(Y)
"RTN","FBAAIAU",159,0)
 I NEW Q:(XX="NEW")!(XX="N")!(XX="NE")!(XX="") 0                ; Creating a new one
"RTN","FBAAIAU",160,0)
 I 'NEW Q:XX="" ""                                              ; User quitting
"RTN","FBAAIAU",161,0)
 I XX>0,XX'>CNT,XX?.N Q $P(VADATA(XX),U,1)                      ; Selected IEN
"RTN","FBAAIAU",162,0)
 ;
"RTN","FBAAIAU",163,0)
 W !!,*7,"Enter a number from 1-"_CNT
"RTN","FBAAIAU",164,0)
 W:NEW " or Type 'NEW'"
"RTN","FBAAIAU",165,0)
 H 1
"RTN","FBAAIAU",166,0)
 G SELVA1
"RTN","FBAAIAU",167,0)
 ;
"RTN","FBAAIAU",168,0)
SELMRA(FLINE,STEXT,STATUS,ACTION) ;EP
"RTN","FBAAIAU",169,0)
 ; Displays all of the currently filed MRA records with a status of 'T' and
"RTN","FBAAIAU",170,0)
 ; allows the user to select one
"RTN","FBAAIAU",171,0)
 ; Input:   FLINE       - Text of the first line to be displayed
"RTN","FBAAIAU",172,0)
 ;          STEXT       - User Selection prompt to be displayed
"RTN","FBAAIAU",173,0)
 ;          STATUS      - 'P'   - Display pending MRA Records
"RTN","FBAAIAU",174,0)
 ;                        'T'   - Display transmitted MRA records
"RTN","FBAAIAU",175,0)
 ;                        ''    - Display both pending and transmitted records
"RTN","FBAAIAU",176,0)
 ;          ACTION      - 'A'   - Display Add MRA records
"RTN","FBAAIAU",177,0)
 ;                        'C'   - Display Change MRA records
"RTN","FBAAIAU",178,0)
 ;                        'D'   - Display Deleted MRA records
"RTN","FBAAIAU",179,0)
 ;                        ''    - Display MRA records with any type of action
"RTN","FBAAIAU",180,0)
 ; Output:  MRA Records that match the specified criteria are displayed to the screen.
"RTN","FBAAIAU",181,0)
 ;          If there are none, a message is displayed
"RTN","FBAAIAU",182,0)
 ; Returns: MRAIEN      - IEN of the selected MRA Record
"RTN","FBAAIAU",183,0)
 ;                        "" - No MRA record was selected
"RTN","FBAAIAU",184,0)
 N CNT,LN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,IX,MRAACT,MRADATA,MRAIEN,MRASTAT
"RTN","FBAAIAU",185,0)
 N OUT,TDT,VAIEN,VENIEN,X,XX,Y,ZZ
"RTN","FBAAIAU",186,0)
 ;
"RTN","FBAAIAU",187,0)
 ; First create and array of all current MRA records that match the selection criteria
"RTN","FBAAIAU",188,0)
 S CNT=0,MRAIEN=0
"RTN","FBAAIAU",189,0)
 F  D  Q:+MRAIEN=0
"RTN","FBAAIAU",190,0)
 . S MRAIEN=$O(^FBAA(161.96,MRAIEN))
"RTN","FBAAIAU",191,0)
 . Q:+MRAIEN=0
"RTN","FBAAIAU",192,0)
 . S ZZ=^FBAA(161.96,MRAIEN,0)
"RTN","FBAAIAU",193,0)
 . S MRAACT=$P(ZZ,U,4)                                          ; Action of the MRA Record
"RTN","FBAAIAU",194,0)
 . S MRASTAT=$P(ZZ,U,5)                                         ; Status of the MRA Record
"RTN","FBAAIAU",195,0)
 . I STATUS'="",STATUS'=MRASTAT Q                               ; Not the specified status
"RTN","FBAAIAU",196,0)
 . I ACTION'="",ACTION'=MRAACT Q                                ; Not the specified action
"RTN","FBAAIAU",197,0)
 . S CNT=CNT+1
"RTN","FBAAIAU",198,0)
 . S XX=$$LJ^XLFSTR(CNT,3)                                      ; Selection #
"RTN","FBAAIAU",199,0)
 . S XX=XX_$$LJ^XLFSTR($P(ZZ,U,3),11)                           ; IPAC Agreement ID
"RTN","FBAAIAU",200,0)
 . S XX=XX_$$LJ^XLFSTR(MRASTAT,2)                               ; Status
"RTN","FBAAIAU",201,0)
 . S XX=XX_$$LJ^XLFSTR(MRAACT,2)                                ; Action
"RTN","FBAAIAU",202,0)
 . I (STATUS="")!(STATUS="T") D                                 ; Transmit Date
"RTN","FBAAIAU",203,0)
 . . S TDT=$P(ZZ,U,6)
"RTN","FBAAIAU",204,0)
 . . S:TDT'="" TDT=$$FMTE^XLFDT(TDT,2)                          ; Converted to external
"RTN","FBAAIAU",205,0)
 . . S XX=XX_$$LJ^XLFSTR(TDT,9)
"RTN","FBAAIAU",206,0)
 . ;
"RTN","FBAAIAU",207,0)
 . ; Only displaying MRA records with an action of DELETE - no more columns to display
"RTN","FBAAIAU",208,0)
 . I ACTION="D" S MRADATA(CNT)=MRAIEN_U_XX Q
"RTN","FBAAIAU",209,0)
 . S VAIEN=$P(ZZ,U,2)                                           ; IPAC Agreement IEN
"RTN","FBAAIAU",210,0)
 . S VENIEN=$P($G(^FBAA(161.95,VAIEN,0)),U,2)                   ; Vendor IEN
"RTN","FBAAIAU",211,0)
 . S XX=XX_$$LJ^XLFSTR($$GET1^DIQ(161.2,VENIEN_",",.01),"30T")_" "  ; Vendor Name
"RTN","FBAAIAU",212,0)
 . S XX=XX_$$LJ^XLFSTR($P(^FBAA(161.95,VAIEN,0),U,5),"23T")     ; Description
"RTN","FBAAIAU",213,0)
 . S MRADATA(CNT)=MRAIEN_U_XX
"RTN","FBAAIAU",214,0)
 ;
"RTN","FBAAIAU",215,0)
 I 'CNT D  Q OUT
"RTN","FBAAIAU",216,0)
 . S OUT=""
"RTN","FBAAIAU",217,0)
 . Q:STEXT=""
"RTN","FBAAIAU",218,0)
 . W !!,"No MRA records that match the specified criteria are currently on file."
"RTN","FBAAIAU",219,0)
 ;
"RTN","FBAAIAU",220,0)
 ; Next display all of the found MRA Records
"RTN","FBAAIAU",221,0)
 S DIR(0)="FO",LN=0
"RTN","FBAAIAU",222,0)
 S LN=LN+1,DIR("A",LN)=FLINE
"RTN","FBAAIAU",223,0)
 S LN=LN+1,DIR("A",LN)=" "
"RTN","FBAAIAU",224,0)
 S LN=LN+1,DIR("A",LN)="#  ID         A "
"RTN","FBAAIAU",225,0)
 I (STATUS="")!(STATUS="T") D
"RTN","FBAAIAU",226,0)
 . S DIR("A",LN)=DIR("A",LN)_"S Trans Dt "
"RTN","FBAAIAU",227,0)
 I (ACTION'="D") D
"RTN","FBAAIAU",228,0)
 . S DIR("A",LN)=DIR("A",LN)_"Vendor                         Description"
"RTN","FBAAIAU",229,0)
 S LN=LN+1,DIR("A",LN)="-- ---------- - "
"RTN","FBAAIAU",230,0)
 I (STATUS="")!(STATUS="T") D
"RTN","FBAAIAU",231,0)
 . S DIR("A",LN)=DIR("A",LN)_"- -------- "
"RTN","FBAAIAU",232,0)
 I (ACTION'="D") D
"RTN","FBAAIAU",233,0)
 . S DIR("A",LN)=DIR("A",LN)_"------------------------------ ----------------------"
"RTN","FBAAIAU",234,0)
 S IX=""
"RTN","FBAAIAU",235,0)
 F  D  Q:IX=""
"RTN","FBAAIAU",236,0)
 . S IX=$O(MRADATA(IX))
"RTN","FBAAIAU",237,0)
 . Q:IX=""
"RTN","FBAAIAU",238,0)
 . S LN=LN+1,DIR("A",LN)=$P(MRADATA(IX),U,2)
"RTN","FBAAIAU",239,0)
 S LN=LN+1,DIR("A",LN)=" "
"RTN","FBAAIAU",240,0)
 S LN=LN+1,DIR("A",LN)=STEXT
"RTN","FBAAIAU",241,0)
 S DIR("A")="Selection #"
"RTN","FBAAIAU",242,0)
SELMRA1 ; Looping tag
"RTN","FBAAIAU",243,0)
 W !!
"RTN","FBAAIAU",244,0)
 K X,Y
"RTN","FBAAIAU",245,0)
 D ^DIR
"RTN","FBAAIAU",246,0)
 I $D(DTOUT)!$D(DUOUT) Q ""                                     ; User timed out or pressed ^
"RTN","FBAAIAU",247,0)
 S XX=$$UP^XLFSTR(Y)
"RTN","FBAAIAU",248,0)
 Q:XX="" ""                                                     ; User quitting
"RTN","FBAAIAU",249,0)
 I XX>0,XX'>CNT,XX?.N Q $P(MRADATA(XX),U,1)                     ; Selected IEN
"RTN","FBAAIAU",250,0)
 ;
"RTN","FBAAIAU",251,0)
 W !!,*7,"Enter a number from 1-"_CNT
"RTN","FBAAIAU",252,0)
 H 1
"RTN","FBAAIAU",253,0)
 G SELMRA1
"RTN","FBAAIAU",254,0)
 ;
"RTN","FBAAIAU",255,0)
VADISP(VAIEN,TOSCREEN,VAOUT)   ;EP
"RTN","FBAAIAU",256,0)
 ; Returns the IPAC Vendor Agreement Display Layout for a specified vendor 
"RTN","FBAAIAU",257,0)
 ; agreement
"RTN","FBAAIAU",258,0)
 ; Input:   VAIEN   - Vendor Agreement IEN to build display layout for
"RTN","FBAAIAU",259,0)
 ;          TOSCREEN    - 1 - Display the Vendor Agreement to the screen, don't return VAOUT
"RTN","FBAAIAU",260,0)
 ;                        0 - Don't display it, return array VAOUT instead
"RTN","FBAAIAU",261,0)
 ; Output:  VAOUT       - Array of IPAC Vendor Agreement Display Layout lines
"RTN","FBAAIAU",262,0)
 ;                        Only returned if TOSCREEN=0
"RTN","FBAAIAU",263,0)
 ;
"RTN","FBAAIAU",264,0)
 N LN,VADATA,XX
"RTN","FBAAIAU",265,0)
 K VAOUT
"RTN","FBAAIAU",266,0)
 ; Invalid Vendor Agreement
"RTN","FBAAIAU",267,0)
 Q:'$D(^FBAA(161.95,VAIEN))
"RTN","FBAAIAU",268,0)
 ;
"RTN","FBAAIAU",269,0)
 D VALOAD(VAIEN,.VADATA)
"RTN","FBAAIAU",270,0)
 S XX=VADATA("ID"),VAOUT(1)="IPAC Vendor Agreement ID: "_$$LJ^XLFSTR(XX,12)
"RTN","FBAAIAU",271,0)
 S XX=VADATA("STAT"),VAOUT(1)=VAOUT(1)_"Status: "_$$LJ^XLFSTR(XX,10)
"RTN","FBAAIAU",272,0)
 S XX=VADATA("FY"),VAOUT(1)=VAOUT(1)_"FY: "_$$LJ^XLFSTR(XX,1,6)
"RTN","FBAAIAU",273,0)
 S XX=VADATA("VENDOR"),VAOUT(2)="Vendor: "_$$LJ^XLFSTR(XX,48)
"RTN","FBAAIAU",274,0)
 S XX=VADATA("DESC"),VAOUT(3)="  Desc: "_$$LJ^XLFSTR(XX,62)
"RTN","FBAAIAU",275,0)
 S XX=VADATA("SHAN"),VAOUT(4)="     Sharing Agreement #: "_$$LJ^XLFSTR(XX,"15T")
"RTN","FBAAIAU",276,0)
 S XX=VADATA("CALC"),VAOUT(5)="Customer ALC: "_$$LJ^XLFSTR(XX,10)
"RTN","FBAAIAU",277,0)
 S XX=VADATA("RTAS"),VAOUT(5)=VAOUT(5)_"Receiver TAS: "_$$LJ^XLFSTR(XX,"29T")
"RTN","FBAAIAU",278,0)
 S XX=VADATA("STAS"),VAOUT(6)=$$LJ^XLFSTR("",24," ")_"  Sender TAS: "_$$LJ^XLFSTR(XX,"29T")
"RTN","FBAAIAU",279,0)
 S XX=VADATA("ASN"),VAOUT(7)="Agency Field Station #: "_$$LJ^XLFSTR(XX,"10T")
"RTN","FBAAIAU",280,0)
 S XX=VADATA("OB"),VAOUT(7)=VAOUT(7)_"Obligating Document #: "_$$LJ^XLFSTR(XX,"19T")
"RTN","FBAAIAU",281,0)
 S VAOUT(8)="Station Contact: "
"RTN","FBAAIAU",282,0)
 S XX=VADATA("CON"),VAOUT(9)="    Name: "_$$LJ^XLFSTR(XX,62)
"RTN","FBAAIAU",283,0)
 S XX=VADATA("CONPHN"),VAOUT(10)="   Phone: "_$$LJ^XLFSTR(XX,"17T")
"RTN","FBAAIAU",284,0)
 S XX=VADATA("CONEM"),VAOUT(10)=VAOUT(10)_" Email: "_$$LJ^XLFSTR(XX,"40T") ; 1st 40 chars or email
"RTN","FBAAIAU",285,0)
 S VAOUT(11)=$S($L(XX)'>40:"",1:"   "_$E(XX,41,$L(XX)))         ; Remaining chars of email
"RTN","FBAAIAU",286,0)
 S VAOUT(12)="Complete Line of Accounting: "
"RTN","FBAAIAU",287,0)
 S XX=VADATA("LOA"),VAOUT(13)="   "_$$LJ^XLFSTR(XX,62)
"RTN","FBAAIAU",288,0)
 S VAOUT(14)="Description of Goods & Services: "
"RTN","FBAAIAU",289,0)
 S XX=VADATA("GOOD"),VAOUT(15)="   "_$$LJ^XLFSTR(XX,"70T")
"RTN","FBAAIAU",290,0)
 S VAOUT(16)=$S($L(XX)'>70:"",1:"   "_$E(XX,71,140))            ; Next 70 chars
"RTN","FBAAIAU",291,0)
 S VAOUT(17)=$S($L(XX)'>140:"",1:"   "_$E(XX,141,$L(XX)))       ; Remaining chars
"RTN","FBAAIAU",292,0)
 S VAOUT(18)="Miscellaneous Info: "
"RTN","FBAAIAU",293,0)
 S XX=VADATA("MISC1"),VAOUT(19)="1) "_$$LJ^XLFSTR(XX,"75T")
"RTN","FBAAIAU",294,0)
 S VAOUT(20)=$S($L(XX)'>75:"",1:"   "_$E(XX,76,150))            ; Next 75 chars
"RTN","FBAAIAU",295,0)
 S VAOUT(21)=$S($L(XX)'>150:"",1:"   "_$E(XX,151,$L(XX)))       ; Remaining chars
"RTN","FBAAIAU",296,0)
 S XX=VADATA("MISC2"),VAOUT(22)="2) "_$$LJ^XLFSTR(XX,"75T")
"RTN","FBAAIAU",297,0)
 S VAOUT(23)=$S($L(XX)'>75:"",1:"   "_$E(XX,76,$L(XX)))         ; Remaining chars
"RTN","FBAAIAU",298,0)
 Q:'TOSCREEN
"RTN","FBAAIAU",299,0)
 ;
"RTN","FBAAIAU",300,0)
 S LN=""
"RTN","FBAAIAU",301,0)
 F  D  Q:LN=""
"RTN","FBAAIAU",302,0)
 . S LN=$O(VAOUT(LN))
"RTN","FBAAIAU",303,0)
 . Q:LN=""
"RTN","FBAAIAU",304,0)
 . I VAOUT(LN)="***" W ! Q
"RTN","FBAAIAU",305,0)
 . W:$TR(VAOUT(LN)," ","")'="" !,VAOUT(LN)
"RTN","FBAAIAU",306,0)
 K VAOUT
"RTN","FBAAIAU",307,0)
 Q
"RTN","FBAAIAU",308,0)
 ;
"RTN","FBAAIAU",309,0)
VALOAD(VAIEN,VADATA) ;EP
"RTN","FBAAIAU",310,0)
 ; Returns an array of external field values for a specified Vendor Agreement
"RTN","FBAAIAU",311,0)
 ; Input:   VAIEN           - Vendor Agreement IEN
"RTN","FBAAIAU",312,0)
 ; Output:  VADATA("ASN")   - Agency Field Station Number
"RTN","FBAAIAU",313,0)
 ;          VADATA("CALC")  - Customer ALC
"RTN","FBAAIAU",314,0)
 ;          VADATA("CON")   - Station Contact Name
"RTN","FBAAIAU",315,0)
 ;          VADATA("CONEM") - Station Contact Email
"RTN","FBAAIAU",316,0)
 ;          VADATA("CONPHN")- Station Contact Phone
"RTN","FBAAIAU",317,0)
 ;          VADATA("DESC")  - Vendor Agreement Description
"RTN","FBAAIAU",318,0)
 ;          VADATA("FY")    - Fiscal Year
"RTN","FBAAIAU",319,0)
 ;          VADATA("GOOD")  - Description of Goods and Services
"RTN","FBAAIAU",320,0)
 ;          VADATA("ID")    - Vendor Agreement ID
"RTN","FBAAIAU",321,0)
 ;          VADATA("LOA")   - Complete line of Accounting
"RTN","FBAAIAU",322,0)
 ;          VADATA("OB")    - Obligating document number
"RTN","FBAAIAU",323,0)
 ;          VADATA("MISC1") - Miscellaneous Info 1
"RTN","FBAAIAU",324,0)
 ;          VADATA("MISC2") - Miscellaneous Info 2
"RTN","FBAAIAU",325,0)
 ;          VADATA("RTAS")  - Receiver TAS
"RTN","FBAAIAU",326,0)
 ;          VADATA("SHAN")  - Sharing Agreement Number
"RTN","FBAAIAU",327,0)
 ;          VADATA("STAS")  - Sender TAS
"RTN","FBAAIAU",328,0)
 ;          VADATA("STAT")  - Vendor Agreement Status
"RTN","FBAAIAU",329,0)
 ;          VADATA("VENDOR")- External Vendor name
"RTN","FBAAIAU",330,0)
 ;         
"RTN","FBAAIAU",331,0)
 ;
"RTN","FBAAIAU",332,0)
 N IPAC
"RTN","FBAAIAU",333,0)
 D GETS^DIQ(161.95,VAIEN_",","**","E","IPAC")
"RTN","FBAAIAU",334,0)
 S VADATA("ID")=IPAC(161.95,VAIEN_",",".01","E")
"RTN","FBAAIAU",335,0)
 ;
"RTN","FBAAIAU",336,0)
 S VADATA("VENDOR")=IPAC(161.95,VAIEN_",",1,"E")
"RTN","FBAAIAU",337,0)
 S VADATA("FY")=IPAC(161.95,VAIEN_",",2,"E")
"RTN","FBAAIAU",338,0)
 S VADATA("STAT")=IPAC(161.95,VAIEN_",",3,"E")
"RTN","FBAAIAU",339,0)
 S VADATA("DESC")=IPAC(161.95,VAIEN_",",4,"E")
"RTN","FBAAIAU",340,0)
 S VADATA("SHAN")=IPAC(161.95,VAIEN_",",5,"E")
"RTN","FBAAIAU",341,0)
 S VADATA("CALC")=IPAC(161.95,VAIEN_",",6,"E")
"RTN","FBAAIAU",342,0)
 S VADATA("RTAS")=IPAC(161.95,VAIEN_",",7,"E")
"RTN","FBAAIAU",343,0)
 S VADATA("STAS")=IPAC(161.95,VAIEN_",",7.5,"E")
"RTN","FBAAIAU",344,0)
 S VADATA("ASN")=IPAC(161.95,VAIEN_",",8,"E")
"RTN","FBAAIAU",345,0)
 S VADATA("OB")=IPAC(161.95,VAIEN_",",9,"E")
"RTN","FBAAIAU",346,0)
 S VADATA("CON")=IPAC(161.95,VAIEN_",",10,"E")
"RTN","FBAAIAU",347,0)
 S VADATA("CONPHN")=IPAC(161.95,VAIEN_",",11,"E")
"RTN","FBAAIAU",348,0)
 S VADATA("CONEM")=IPAC(161.95,VAIEN_",",12,"E")
"RTN","FBAAIAU",349,0)
 S VADATA("LOA")=IPAC(161.95,VAIEN_",",13,"E")
"RTN","FBAAIAU",350,0)
 S VADATA("GOOD")=IPAC(161.95,VAIEN_",",14,"E")
"RTN","FBAAIAU",351,0)
 S VADATA("MISC1")=IPAC(161.95,VAIEN_",",15,"E")
"RTN","FBAAIAU",352,0)
 S VADATA("MISC2")=IPAC(161.95,VAIEN_",",16,"E")
"RTN","FBAAIAU",353,0)
 Q
"RTN","FBAAIAU",354,0)
 ;
"RTN","FBAAIAU",355,0)
LOCKVA(VAIEN,DMSG) ;EP
"RTN","FBAAIAU",356,0)
 ; Attempt to lock IPAC Vendor Agreement
"RTN","FBAAIAU",357,0)
 ; Input:   VAIEN    - IPAC Vendor Agreement to be locked
"RTN","FBAAIAU",358,0)
 ;          DMSG     - 1 - Display locked message
"RTN","FBAAIAU",359,0)
 ;                     0 - Don't display locked message
"RTN","FBAAIAU",360,0)
 ;                     Optional, defaults to 1
"RTN","FBAAIAU",361,0)
 ; Returns: 1 - IPAC Vendor Agreement locked, 0 otherwise
"RTN","FBAAIAU",362,0)
 ;
"RTN","FBAAIAU",363,0)
 S:'$D(DMSG) DMSG=1
"RTN","FBAAIAU",364,0)
 L +^FBAA(161.95,VAIEN):0
"RTN","FBAAIAU",365,0)
 I '$T D  Q 0
"RTN","FBAAIAU",366,0)
 . W:DMSG !!,"Somebody is already editing this agreement.  Try again later."
"RTN","FBAAIAU",367,0)
 . H 1
"RTN","FBAAIAU",368,0)
 Q 1
"RTN","FBAAIAU",369,0)
 ;
"RTN","FBAAIAU",370,0)
UNLOCKVA(VAIEN)    ;EP
"RTN","FBAAIAU",371,0)
 ; Unlock the IPAC Vendor Agreement
"RTN","FBAAIAU",372,0)
 ; Input:   VAIEN    - Vendor Agreement to be locked
"RTN","FBAAIAU",373,0)
 ; Output:  IPAC Vendor Agreement is unlocked
"RTN","FBAAIAU",374,0)
 L -^FBAA(161.95,VAIEN)
"RTN","FBAAIAU",375,0)
 Q
"RTN","FBAAIAU",376,0)
 ;
"RTN","FBAAIAV")
0^5^B3188216^n/a
"RTN","FBAAIAV",1,0)
FBAAIAV ;ALB/FA - VIEW AN IPAC AGREEMENT ;03 Dec 2013  2:11 PM
"RTN","FBAAIAV",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAIAV",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAIAV",4,0)
 ;
"RTN","FBAAIAV",5,0)
 ;
"RTN","FBAAIAV",6,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAV",7,0)
 ;                           Entry Points
"RTN","FBAAIAV",8,0)
 ; ISEL     - Select and View a specified IPAC Vendor Agreement
"RTN","FBAAIAV",9,0)
 ;            NOTE: (actually called from first line of routine)
"RTN","FBAAIAV",10,0)
 ; VIEW1    - View the specified IPAC Vendor Agreement
"RTN","FBAAIAV",11,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAIAV",12,0)
 ;                         
"RTN","FBAAIAV",13,0)
ISEL ;EP
"RTN","FBAAIAV",14,0)
 ; Select and View a specified IPAC Vendor Agreement
"RTN","FBAAIAV",15,0)
 N XX,YY
"RTN","FBAAIAV",16,0)
 F  D  Q:XX=""
"RTN","FBAAIAV",17,0)
 . S XX=$$ISEL1()
"RTN","FBAAIAV",18,0)
 . Q:XX=""
"RTN","FBAAIAV",19,0)
 . R !,"Press any key to continue: ",YY:DTIME
"RTN","FBAAIAV",20,0)
 Q
"RTN","FBAAIAV",21,0)
 ;
"RTN","FBAAIAV",22,0)
ISEL1() ;
"RTN","FBAAIAV",23,0)
 ; Input:       None
"RTN","FBAAIAV",24,0)
 ; Returns:     1 - User timed out or typed '^' to exit, 0 otherwise
"RTN","FBAAIAV",25,0)
 ; Called From: ISEL
"RTN","FBAAIAV",26,0)
 N FLINE,STEXT,VAIEN
"RTN","FBAAIAV",27,0)
 S FLINE="The following IPAC Agreements are currently on file:"
"RTN","FBAAIAV",28,0)
 S STEXT="Please select the IPAC agreement to view/print"
"RTN","FBAAIAV",29,0)
 S VAIEN=$$SELVA^FBAAIAU(FLINE,STEXT,0,"")        ; Select an IPAC Agreement
"RTN","FBAAIAV",30,0)
 I VAIEN="" Q ""                                  ; User exit
"RTN","FBAAIAV",31,0)
 D VIEW(VAIEN)
"RTN","FBAAIAV",32,0)
 Q 0
"RTN","FBAAIAV",33,0)
 ;
"RTN","FBAAIAV",34,0)
VIEW(VAIEN) ; Select a display device and display the specified
"RTN","FBAAIAV",35,0)
 ; IPAC Vendor Agreement
"RTN","FBAAIAV",36,0)
 ; Input:   VAIEN       - IPAC Vendor Agreement IEN of agreement to be displayed
"RTN","FBAAIAV",37,0)
 ; Output:  IPAC Vendor Agreement displayed to the selected device
"RTN","FBAAIAV",38,0)
 D DEVSEL(VAIEN)                                ; Device Selection
"RTN","FBAAIAV",39,0)
 Q
"RTN","FBAAIAV",40,0)
 ;
"RTN","FBAAIAV",41,0)
DEVSEL(VAIEN) ; Device selection and queuing
"RTN","FBAAIAV",42,0)
 ; Input:       VAIEN       - IPAC Vendor Agreement IEN of agreement to be viewed
"RTN","FBAAIAV",43,0)
 ; Returns:     1 - Device selected, 
"RTN","FBAAIAV",44,0)
 ;              0 - No device selected or queued task
"RTN","FBAAIAV",45,0)
 N POP,ZTDESC,ZTRTN,ZTSAVE
"RTN","FBAAIAV",46,0)
 W !!,"This report is 80 characters wide.",!
"RTN","FBAAIAV",47,0)
 S ZTRTN="VIEW1^FBAAIAV"
"RTN","FBAAIAV",48,0)
 S ZTDESC="View/Print IPAC Vendor Agreement"
"RTN","FBAAIAV",49,0)
 S ZTSAVE("VAIEN")=""
"RTN","FBAAIAV",50,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM")
"RTN","FBAAIAV",51,0)
 Q
"RTN","FBAAIAV",52,0)
 ;
"RTN","FBAAIAV",53,0)
VIEW1 ;EP
"RTN","FBAAIAV",54,0)
 ; Displays the selected IPAC Vendor Agreement
"RTN","FBAAIAV",55,0)
 ; Input:   VAIEN       - IPAC Vendor Agreement IEN of agreement to be displayed
"RTN","FBAAIAV",56,0)
 ; Output:  IPAC Vendor Agreement displayed to screen or print device
"RTN","FBAAIAV",57,0)
 D VADISP^FBAAIAU(VAIEN,1)
"RTN","FBAAIAV",58,0)
 Q
"RTN","FBAAMP")
0^15^B145435703^B64651581
"RTN","FBAAMP",1,0)
FBAAMP ;AISC/CMR-MULTIPLE PAYMENT ENTRY ; 11/21/12 4:12pm
"RTN","FBAAMP",2,0)
 ;;3.5;FEE BASIS;**4,21,38,55,61,67,116,108,143,123**;JAN 30, 1995;Build 51
"RTN","FBAAMP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAMP",4,0)
 S FBMP=1 ;multiple payment flag
"RTN","FBAAMP",5,0)
 G ^FBAACO
"RTN","FBAAMP",6,0)
1 ;return from FBAACO
"RTN","FBAAMP",7,0)
 D MMPPT^FBAACO G:$G(FBAAOUT) Q1
"RTN","FBAAMP",8,0)
 D MPDT I 'FBMPDT G Q1
"RTN","FBAAMP",9,0)
 K FBAAOUT W ! D CPTM^FBAALU(FBMPDT,DFN) I 'FBGOT G Q1
"RTN","FBAAMP",10,0)
 ; prompt revenue code
"RTN","FBAAMP",11,0)
 S FBAARC=$$ASKREVC^FBUTL5() I FBAARC="^" S FBAAOUT=1 G Q1
"RTN","FBAAMP",12,0)
 ; prompt units paid
"RTN","FBAAMP",13,0)
 S FBUNITS=$$ASKUNITS^FBUTL5() I FBUNITS="^" S FBAAOUT=1 G Q1
"RTN","FBAAMP",14,0)
 S FY=$E(DT,1,3)+1700+$S($E(DT,4,5)>9:1,1:0)
"RTN","FBAAMP",15,0)
 D ASKZIP^FBAAFS($G(FBV)) I $G(FBAAOUT)!($G(FBZIP)']"") G Q1
"RTN","FBAAMP",16,0)
 I $$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) D ASKTIME^FBAAFS I $G(FBAAOUT)!('$G(FBTIME)) G Q1
"RTN","FBAAMP",17,0)
 D HCFA^FBAAMP1 G Q1:$G(FBAAOUT)
"RTN","FBAAMP",18,0)
AMTCL S DIR(0)="162.03,1",DIR("A")="Amount Claimed:  $",DIR("?")="Enter the amount being claimed by the vendor" D ^DIR K DIR G Q:$D(DIRUT) S FBJ=+Y
"RTN","FBAAMP",19,0)
 W ! S DIR("A")="Is $"_FBJ_" correct for Amount Claimed",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q:$D(DIRUT),AMTCL:'Y
"RTN","FBAAMP",20,0)
RDAP D FEE G Q:$G(FBAAOUT) S FBK=FBAMTPD W ! S DIR("A")="Is $"_FBK_" correct for Amount Paid",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q:$D(DIRUT),RDAP:'Y
"RTN","FBAAMP",21,0)
 S FBAAAS=0 K FBADJ I FBJ-FBK D SUSP^FBAAMP1 I $G(FBAAOUT) G Q:$D(DUOUT),Q1
"RTN","FBAAMP",22,0)
 S FBJ=+FBJ,FBK=+FBK,FBAAAS=+FBAAAS
"RTN","FBAAMP",23,0)
 ; prompt for remittance remarks
"RTN","FBAAMP",24,0)
 I $$RR^FBUTL4(.FBRRMK,2)=0 S FBAAOUT=1 G Q1
"RTN","FBAAMP",25,0)
MULT W:FBINTOT>0 !,"Invoice: "_FBAAIN_" Totals: $ "_FBINTOT
"RTN","FBAAMP",26,0)
 W !! S %DT("A")="Date of Service: ",%DT="AEPX" D ^%DT G Q1:X=""!(X="^")
"RTN","FBAAMP",27,0)
 D DATCK^FBAAUTL G MULT:'$D(X)!(Y<0)
"RTN","FBAAMP",28,0)
 S FBDT=Y
"RTN","FBAAMP",29,0)
 I '$$CHKCPT() W !,$C(7),"Invalid Date of Service." G MULT
"RTN","FBAAMP",30,0)
 I $$CHKICD9^FBCSV1(+$G(FBHCFA(28)),$G(FBDT))="" G MULT
"RTN","FBAAMP",31,0)
 I '$G(FBAAMM1),'$$CHKFS() W !,$C(7),"Invalid Date of Service." G MULT
"RTN","FBAAMP",32,0)
 S DIR(0)="Y",DIR("A")="Is "_($$DATX^FBAAUTL(FBDT))_" correct",DIR("B")="Yes" D ^DIR K DIR G MULT:$D(DIRUT)!('Y)
"RTN","FBAAMP",33,0)
 S FBAADT=FBDT
"RTN","FBAAMP",34,0)
 S FBMODL=$$MODL^FBAAUTL4("FBMODA","I")
"RTN","FBAAMP",35,0)
 I $D(^FBAAC("AE",DFN,FBV,FBAADT,FBAACP_$S($G(FBMODL)]"":"-"_FBMODL,1:""))) S DIR(0)="Y",DIR("A")="Code already exists for that date!  Want to add another service for the SAME DATE",DIR("B")="No" D ^DIR K DIR G MULT:$D(DIRUT)!('Y)
"RTN","FBAAMP",36,0)
 I FBFPPSC]"" S FBFPPSL=$$FPPSL^FBUTL5() I FBFPPSL=-1 G Q1
"RTN","FBAAMP",37,0)
 W !! D GETSVDT^FBAACO5(DFN,FBV,FBASSOC,0,FBAADT) G Q:$G(FBAAOUT)
"RTN","FBAAMP",38,0)
 D SETO^FBAACO3,SVCPR^FBAACO1 G Q:$G(FBAAOUT)
"RTN","FBAAMP",39,0)
FILE S TP="",DR="1///^S X=FBJ;Q;2///^S X=FBK;47///^S X=FBUNITS"
"RTN","FBAAMP",40,0)
 I FBCSID]"" S DR=DR_";49///^S X=FBCSID"
"RTN","FBAAMP",41,0)
 I FBFPPSC]"" S DR=DR_";50///^S X=FBFPPSC;51///^S X=FBFPPSL"
"RTN","FBAAMP",42,0)
 I FBAARC]"" S DR=DR_";48////^S X=FBAARC"
"RTN","FBAAMP",43,0)
 S DR(1,162.03,1)="6////^S X=DUZ;7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;15///^S X=FBPT;16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=FBTYPE;26////^S X=FBPSA"
"RTN","FBAAMP",44,0)
 S DR(1,162.03,2)="34///^S X=$G(FBAAMM1);54////^S X=$G(FBCNTRP);28////^S X=FBHCFA(28);30////^S X=FBHCFA(30);31////^S X=FBHCFA(31);32////^S X=FBHCFA(32);33///^S X=FBAAVID;44///^S X=FBFSAMT;45////^S X=FBFSUSD"
"RTN","FBAAMP",45,0)
 S DR(1,162.03,3)=".05////^S X=$G(FBIA);.055///^S X=$G(FBDODINV)"         ; FB*3.5*123
"RTN","FBAAMP",46,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAAMP",47,0)
 S DA=FBAACPI,DA(1)=FBSDI,DA(2)=FBV,DA(3)=DFN
"RTN","FBAAMP",48,0)
 D LOCK^FBUCUTL(DIE,FBAACPI,1)
"RTN","FBAAMP",49,0)
 D ^DIE
"RTN","FBAAMP",50,0)
 D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAAMP",51,0)
 D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAAMP",52,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)
"RTN","FBAAMP",53,0)
 S FBINTOT=FBINTOT+FBK
"RTN","FBAAMP",54,0)
 W " ....OK, DONE...."
"RTN","FBAAMP",55,0)
 ; HIPAA 5010 - count line items that have 0.00 amount paid
"RTN","FBAAMP",56,0)
 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1
"RTN","FBAAMP",57,0)
 W:Z1>(FBAAMPI-20) !,*7,"Warning, you can only enter ",(FBAAMPI-Z1)," more line items!" I Z1>(FBAAMPI-1) D  S FBMAX=1 G Q1
"RTN","FBAAMP",58,0)
 .W !!,*7,"You have reached the maximum number of payments for a Batch!",!,"You must select another Batch for entering Payments!"
"RTN","FBAAMP",59,0)
 G MULT
"RTN","FBAAMP",60,0)
Q1 K FBADJ,FBAADT,FBX,FBAACP,DIC,DIE,X,Y,DIRUT,DUOUT,DTOUT,FBOUT,FBSI,FBMPDT,FBIA,FBDODINV G ^FBAACO:$D(FBMAX),1^FBAACO
"RTN","FBAAMP",61,0)
 ;
"RTN","FBAAMP",62,0)
Q ;kill variables and exit
"RTN","FBAAMP",63,0)
 D Q^FBAACO
"RTN","FBAAMP",64,0)
 Q
"RTN","FBAAMP",65,0)
 ;
"RTN","FBAAMP",66,0)
MPDT ;
"RTN","FBAAMP",67,0)
 S FBMPDT=""
"RTN","FBAAMP",68,0)
 S DIR(0)="D^::EX"
"RTN","FBAAMP",69,0)
 S DIR("A")="Enter date to use for CPT/ICD checks and fee schedule calc"
"RTN","FBAAMP",70,0)
 S DIR("B")="TODAY"
"RTN","FBAAMP",71,0)
 S DIR("?",1)="Enter a date. This date will be used when checking for"
"RTN","FBAAMP",72,0)
 S DIR("?",2)="an active CPT/Modifier/ICD code. Also, the fee schedule"
"RTN","FBAAMP",73,0)
 S DIR("?",3)="amount will be computed based on this date."
"RTN","FBAAMP",74,0)
 S DIR("?")="Enter '^' to exit."
"RTN","FBAAMP",75,0)
 W !
"RTN","FBAAMP",76,0)
 D ^DIR K DIR S:'$D(DIRUT) FBMPDT=Y
"RTN","FBAAMP",77,0)
 Q
"RTN","FBAAMP",78,0)
 ;
"RTN","FBAAMP",79,0)
FEE N FBX,FB1725
"RTN","FBAAMP",80,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",81,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",82,0)
 S FBFY=FY-1
"RTN","FBAAMP",83,0)
 S (FBFSAMT,FBFSUSD,FBAMFS)=""
"RTN","FBAAMP",84,0)
 ; FB*3.5*143 Adding FB1725 as a parameter to prevent reduction 
"RTN","FBAAMP",85,0)
 ; of local fee schedule payments
"RTN","FBAAMP",86,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBMPDT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME),$G(FB1725))
"RTN","FBAAMP",87,0)
 ;
"RTN","FBAAMP",88,0)
 I '$G(FBAAMM1) D
"RTN","FBAAMP",89,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAAMP",90,0)
 E  D
"RTN","FBAAMP",91,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAAMP",92,0)
 ;
"RTN","FBAAMP",93,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAAMP",94,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAAMP",95,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAAMP",96,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAAMP",97,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAAMP",98,0)
 E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAAMP",99,0)
 ;
"RTN","FBAAMP",100,0)
 ; FB*3.5*143 - Preventing 70% reduction of 75th percentile rates
"RTN","FBAAMP",101,0)
 I FB1725,FBFSUSD'="F" D
"RTN","FBAAMP",102,0)
 . W !!?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAAMP",103,0)
 . I FBFSAMT D
"RTN","FBAAMP",104,0)
 . . S FBFSAMT=$J(FBFSAMT*.7,0,2)
"RTN","FBAAMP",105,0)
 . . W !?2,"  Therefore, fee schedule amount reduced to $",FBFSAMT," (70%)."
"RTN","FBAAMP",106,0)
 ;
"RTN","FBAAMP",107,0)
 I $G(FBUNITS)>1 D
"RTN","FBAAMP",108,0)
 . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAAMP",109,0)
 . Q:FBFSAMT'>0
"RTN","FBAAMP",110,0)
 . N FBFSUNIT
"RTN","FBAAMP",111,0)
 . ; determine if fee schedule can be multiplied by units
"RTN","FBAAMP",112,0)
 . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBMPDT>3040930):1,1:0)
"RTN","FBAAMP",113,0)
 . I FBFSUNIT D
"RTN","FBAAMP",114,0)
 . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAAMP",115,0)
 . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAAMP",116,0)
 . E  D
"RTN","FBAAMP",117,0)
 . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted by units."
"RTN","FBAAMP",118,0)
 ;
"RTN","FBAAMP",119,0)
 I '$G(FBAAMM1) D
"RTN","FBAAMP",120,0)
 . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAAMP",121,0)
 . S FBAMFS=$S(FBFSAMT>$G(FBJ):$G(FBJ),1:FBFSAMT)
"RTN","FBAAMP",122,0)
 ;
"RTN","FBAAMP",123,0)
 W !
"RTN","FBAAMP",124,0)
 ;
"RTN","FBAAMP",125,0)
AMTPD S DIR(0)="162.5,9",DIR("A")="Amount Paid: $",DIR("B")=$G(FBAMFS),DIR("?")="^D HELP1^FBAAMP" K:$G(FBAMFS)="" DIR("B") D ^DIR K DIR I $D(DIRUT) S FBAAOUT=1 Q
"RTN","FBAAMP",126,0)
 ;I +Y>FBJ W !!,*7,"Amount paid cannot be greater than the amount claimed." G AMTPD ; Removed in patch FB*143 as overpayment may be allowed per Medicare & Medicaid Services (CMS) reimbursement methodology
"RTN","FBAAMP",127,0)
 I FBAMFS]"" I +Y>FBAMFS&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"You must be a holder of the 'FBAASUPERVISOR' key in order to",!,"exceed the Fee Schedule.",! G AMTPD
"RTN","FBAAMP",128,0)
 S FBAMTPD=+Y K FBAMFS Q
"RTN","FBAAMP",129,0)
HELP1 W !!,"Enter a dollar amount that does not exceed the amount claimed.",!
"RTN","FBAAMP",130,0)
 I FBAMFS>0 W "Only the holder of the 'FBAASUPERVISOR' key may exceed the",!,"Fee Schedule.",!
"RTN","FBAAMP",131,0)
 Q
"RTN","FBAAMP",132,0)
 ;
"RTN","FBAAMP",133,0)
CHKCPT() ; check if CPT/Modifier active on date of service
"RTN","FBAAMP",134,0)
 N FBCPTX,FBI,FBMOD,FBMODX,FBRET
"RTN","FBAAMP",135,0)
 S FBRET=1
"RTN","FBAAMP",136,0)
 S FBCPTX=$$CPT^ICPTCOD(FBAACP,FBDT,1)
"RTN","FBAAMP",137,0)
 I '$P(FBCPTX,U,7) S FBRET=0 W !,"  CPT Code ",$P(FBCPTX,U,2)," inactive on date of service."
"RTN","FBAAMP",138,0)
 I $O(FBMODA(0)) D
"RTN","FBAAMP",139,0)
 . S FBI=0 F  S FBI=$O(FBMODA(FBI)) Q:'FBI  D
"RTN","FBAAMP",140,0)
 . . S FBMODX=$$MOD^ICPTMOD(FBMODA(FBI),"I",FBDT,1)
"RTN","FBAAMP",141,0)
 . . I '$P(FBMODX,U,7) S FBRET=0 W !,"  CPT Modifier ",$P(FBMODX,U,2)," inactive on date of service."
"RTN","FBAAMP",142,0)
 Q FBRET
"RTN","FBAAMP",143,0)
 ;
"RTN","FBAAMP",144,0)
CHKFS() ; check if fee schedule amount is different on date of service
"RTN","FBAAMP",145,0)
 N FBX,FBRET,FB1725
"RTN","FBAAMP",146,0)
 S FBRET=1 ; return value - true if date of service allowed
"RTN","FBAAMP",147,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",148,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",149,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBDT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME),$G(FB1725))
"RTN","FBAAMP",150,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBAAMP",151,0)
 S FB1725=$S($G(FB583):+$P($G(^FB583(+FB583,0)),U,28),1:0)
"RTN","FBAAMP",152,0)
 ; adjust amount if mill bill
"RTN","FBAAMP",153,0)
 I FB1725 S $P(FBX,U)=$J($P(FBX,U)*.7,0,2)
"RTN","FBAAMP",154,0)
 ; adjust amount if units > 1
"RTN","FBAAMP",155,0)
 I $G(FBUNITS) D
"RTN","FBAAMP",156,0)
 . N FBFSUNIT
"RTN","FBAAMP",157,0)
 . ; determine if fee schedule can be multiplied by units
"RTN","FBAAMP",158,0)
 . S FBFSUNIT=$S($P(FBX,U,2)="R":1,$P(FBX,U,2)="F"&(FBDT>3040930):1,1:0)
"RTN","FBAAMP",159,0)
 . I FBFSUNIT S $P(FBX,U)=$J($P(FBX,U)*FBUNITS,0,2)
"RTN","FBAAMP",160,0)
 ; issue warning if lesser of claim and fee schedule amount different
"RTN","FBAAMP",161,0)
 I +$S($P(FBX,U)>$G(FBJ):$G(FBJ),1:$P(FBX,U))'=+$S(FBFSAMT>$G(FBJ):$G(FBJ),1:FBFSAMT) D
"RTN","FBAAMP",162,0)
 . W !,"  Warning: The fee schedule amount (",$P(FBX,U),") for this date of service "
"RTN","FBAAMP",163,0)
 . W !,"  differs from the initial fee schedule amount (",FBFSAMT,")."
"RTN","FBAAMP",164,0)
 . I $P(FBX,U)>0,FBK>$P(FBX,U) D
"RTN","FBAAMP",165,0)
 . . W !,"  Amount paid (",FBK,") exceeds the fee schedule amount."
"RTN","FBAAMP",166,0)
 . . I '$D(^XUSEC("FBAASUPERVISOR",DUZ)) D
"RTN","FBAAMP",167,0)
 . . . W !,"  You must be a holder of the 'FBAASUPERVISOR' key in order"
"RTN","FBAAMP",168,0)
 . . . W !,"  to exceed the Fee Schedule."
"RTN","FBAAMP",169,0)
 . . . S FBRET=0
"RTN","FBAAMP",170,0)
 . W:FBRET !,"  You may want to separately process this date of service."
"RTN","FBAAMP",171,0)
 Q FBRET
"RTN","FBAAMP",172,0)
 ;
"RTN","FBAAMP",173,0)
IPACID(FBVEN,FBIPIEN) ; function to return IPAC agreement ID# if exactly 1 active IPAC on file for vendor (FB*3.5*123)
"RTN","FBAAMP",174,0)
 ; No user interface allowed with this function.  Called by background, Austin transmission process.
"RTN","FBAAMP",175,0)
 ;
"RTN","FBAAMP",176,0)
 ; Input:
"RTN","FBAAMP",177,0)
 ;   FBVEN - Vendor ien (ptr to file 161.2)
"RTN","FBAAMP",178,0)
 ;
"RTN","FBAAMP",179,0)
 ; Output:
"RTN","FBAAMP",180,0)
 ;   Function value = if exactly 1 active IPAC agreement is on file, then this returns the external agreement ID#
"RTN","FBAAMP",181,0)
 ;                    otherwise, this returns ""
"RTN","FBAAMP",182,0)
 ;   FBIPIEN (pass by reference) - internal entry ien of the active IPAC agreement on file
"RTN","FBAAMP",183,0)
 ;
"RTN","FBAAMP",184,0)
 N X1,X2,RET
"RTN","FBAAMP",185,0)
 S RET=""       ; default value
"RTN","FBAAMP",186,0)
 S FBIPIEN=""   ; initialize
"RTN","FBAAMP",187,0)
 S FBVEN=+$G(FBVEN)
"RTN","FBAAMP",188,0)
 I '$$IPACREQD(FBVEN) G IPACIDX                            ; IPAC not required
"RTN","FBAAMP",189,0)
 S X1=+$O(^FBAA(161.95,"AVA",FBVEN,"A",""))                ; first active IPAC entry
"RTN","FBAAMP",190,0)
 I 'X1 G IPACIDX                                           ; no IPAC data found for vendor so get out
"RTN","FBAAMP",191,0)
 S X2=+$O(^FBAA(161.95,"AVA",FBVEN,"A",""),-1)             ; last active IPAC entry
"RTN","FBAAMP",192,0)
 ;
"RTN","FBAAMP",193,0)
 ; only 1 IPAC on file - retrieve the ID# in this case only
"RTN","FBAAMP",194,0)
 I X1=X2 S RET=$P($G(^FBAA(161.95,X1,0)),U,1),FBIPIEN=X1   ; IPAC external agreement ID#
"RTN","FBAAMP",195,0)
 ;
"RTN","FBAAMP",196,0)
IPACIDX ;
"RTN","FBAAMP",197,0)
 Q RET
"RTN","FBAAMP",198,0)
 ;
"RTN","FBAAMP",199,0)
IPAC(FBVEN) ; Determine if active IPAC agreement data exists for vendor (FB*3.5*123)
"RTN","FBAAMP",200,0)
 ; Input:
"RTN","FBAAMP",201,0)
 ;   FBVEN - Vendor ien (ptr to file 161.2)
"RTN","FBAAMP",202,0)
 ;
"RTN","FBAAMP",203,0)
 ; Output:
"RTN","FBAAMP",204,0)
 ;   Function value = -1 if active IPAC records exist, but none were selected (this is an error condition)
"RTN","FBAAMP",205,0)
 ;                  = ien of IPAC entry in file 161.95 (if only 1 exists, or user selected it)
"RTN","FBAAMP",206,0)
 ;                  = "" if no IPAC data found or if IPAC not required
"RTN","FBAAMP",207,0)
 ;
"RTN","FBAAMP",208,0)
 N FBIA,X1,X2,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","FBAAMP",209,0)
 S FBIA=""
"RTN","FBAAMP",210,0)
 S FBVEN=+$G(FBVEN)
"RTN","FBAAMP",211,0)
 I '$$IPACREQD(FBVEN) G IPACX                          ; IPAC not required
"RTN","FBAAMP",212,0)
 S X1=+$O(^FBAA(161.95,"AVA",FBVEN,"A",""))            ; first active IPAC entry
"RTN","FBAAMP",213,0)
 I 'X1 G IPACX                                         ; no IPAC data found for vendor, get out with FBIA=""
"RTN","FBAAMP",214,0)
 W !!,"This is a Federal Vendor. IPAC payment information is required."
"RTN","FBAAMP",215,0)
 S X2=+$O(^FBAA(161.95,"AVA",FBVEN,"A",""),-1)         ; last active IPAC entry
"RTN","FBAAMP",216,0)
 ;
"RTN","FBAAMP",217,0)
 ; only 1 IPAC on file - select it automatically
"RTN","FBAAMP",218,0)
 I X1=X2 S FBIA=X1 D
"RTN","FBAAMP",219,0)
 . W !,"  - Required IPAC agreement information has been found."
"RTN","FBAAMP",220,0)
 . Q
"RTN","FBAAMP",221,0)
 ;
"RTN","FBAAMP",222,0)
 I X1'=X2 S FBIA=$$MULTIPAC(FBVEN)                     ; multiple IPAC selection for vendor
"RTN","FBAAMP",223,0)
 I FBIA'>0 G IPACX                                     ; get out if user failed to select one
"RTN","FBAAMP",224,0)
 ;
"RTN","FBAAMP",225,0)
 S DIR(0)="Y",DIR("A")="Would you like to display the detailed IPAC agreement information"
"RTN","FBAAMP",226,0)
 S DIR("B")="No"
"RTN","FBAAMP",227,0)
 W ! D ^DIR K DIR
"RTN","FBAAMP",228,0)
 I $D(DIRUT) W "  Not displaying detail ... "
"RTN","FBAAMP",229,0)
 I 'Y G IPACX   ; exit without displaying the data by user choice
"RTN","FBAAMP",230,0)
 ;
"RTN","FBAAMP",231,0)
 ; Display the IPAC data
"RTN","FBAAMP",232,0)
 W !
"RTN","FBAAMP",233,0)
 D VADISP^FBAAIAU(FBIA,1)
"RTN","FBAAMP",234,0)
 S DIR(0)="E" D ^DIR K DIR    ; press return to continue
"RTN","FBAAMP",235,0)
IPACX ;
"RTN","FBAAMP",236,0)
 Q FBIA
"RTN","FBAAMP",237,0)
 ;
"RTN","FBAAMP",238,0)
MULTIPAC(FBVEN) ; multiple IPAC agreement display, lister, selection
"RTN","FBAAMP",239,0)
 ; same input and output parameters as IPAC above
"RTN","FBAAMP",240,0)
 ;
"RTN","FBAAMP",241,0)
 N FBIA,Z,CNT,FBLN,FBG,ID,FY,DESC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y,LN,T,W
"RTN","FBAAMP",242,0)
 S FBVEN=+$G(FBVEN)
"RTN","FBAAMP",243,0)
 S FBIA=""
"RTN","FBAAMP",244,0)
 S Z=0,CNT=0 K FBLN
"RTN","FBAAMP",245,0)
 F  S Z=$O(^FBAA(161.95,"AVA",FBVEN,"A",Z)) Q:'Z  D
"RTN","FBAAMP",246,0)
 . S FBG=$G(^FBAA(161.95,Z,0)) I FBG="" Q
"RTN","FBAAMP",247,0)
 . S ID=$P(FBG,U,1)
"RTN","FBAAMP",248,0)
 . S FY=$P(FBG,U,3)
"RTN","FBAAMP",249,0)
 . S DESC=$P(FBG,U,5)
"RTN","FBAAMP",250,0)
 . S CNT=CNT+1,FBLN(CNT)=Z_U_ID_U_FY_U_DESC
"RTN","FBAAMP",251,0)
 . Q
"RTN","FBAAMP",252,0)
 ;
"RTN","FBAAMP",253,0)
 I 'CNT G MULIPACX    ; get out if nothing found (should not happen)
"RTN","FBAAMP",254,0)
 I CNT=1 S FBIA=$P(FBLN(1),U,1) G MULIPACX       ; only 1 found (also should not happen)
"RTN","FBAAMP",255,0)
 ;
"RTN","FBAAMP",256,0)
 ; Multiple found. Build list.
"RTN","FBAAMP",257,0)
 S DIR(0)="N"_U_"1:"_CNT,LN=0
"RTN","FBAAMP",258,0)
 S LN=LN+1,DIR("A",LN)=$$GET1^DIQ(161.2,FBVEN_",",.01)_" is a Federal Vendor with"
"RTN","FBAAMP",259,0)
 S LN=LN+1,DIR("A",LN)=CNT_" active IPAC agreements on file:"
"RTN","FBAAMP",260,0)
 S LN=LN+1,DIR("A",LN)=" "
"RTN","FBAAMP",261,0)
 S LN=LN+1,DIR("A",LN)="#   ID          FY   Description"
"RTN","FBAAMP",262,0)
 S LN=LN+1,DIR("A",LN)="-- ----------  ----  -----------"
"RTN","FBAAMP",263,0)
 S T=0 F  S T=$O(FBLN(T)) Q:'T  S W=FBLN(T) D
"RTN","FBAAMP",264,0)
 . S LN=LN+1,DIR("A",LN)=$$LJ^XLFSTR(T,3)_$$LJ^XLFSTR($P(W,U,2),12)_$$LJ^XLFSTR($P(W,U,3),6)_$E($P(W,U,4),1,58)
"RTN","FBAAMP",265,0)
 . Q
"RTN","FBAAMP",266,0)
 S LN=LN+1,DIR("A",LN)=" "
"RTN","FBAAMP",267,0)
 S LN=LN+1,DIR("A",LN)="Please select the IPAC agreement to be used with this invoice."
"RTN","FBAAMP",268,0)
 S LN=LN+1,DIR("A",LN)="This information is required."
"RTN","FBAAMP",269,0)
 S DIR("A")="Selection#"
"RTN","FBAAMP",270,0)
 W ! D ^DIR K DIR
"RTN","FBAAMP",271,0)
 I Y>0 S FBIA=$P($G(FBLN(Y)),U,1) G MULIPACX    ; user selection is good so set FBIA and get out
"RTN","FBAAMP",272,0)
 ;
"RTN","FBAAMP",273,0)
 ; in all other cases, user failed to make a selection so set FBIA=-1
"RTN","FBAAMP",274,0)
 S FBIA=-1
"RTN","FBAAMP",275,0)
 W !!,$C(7),"IPAC Agreement Selection is required for this vendor."
"RTN","FBAAMP",276,0)
 ;
"RTN","FBAAMP",277,0)
MULIPACX ;
"RTN","FBAAMP",278,0)
 Q FBIA
"RTN","FBAAMP",279,0)
 ;
"RTN","FBAAMP",280,0)
IPACINV(FBDODINV,FBDEF) ; function to get the DoD invoice number for IPAC (FB*3.5*123)
"RTN","FBAAMP",281,0)
 ; Function value is 1 if the DoD invoice number was obtained.
"RTN","FBAAMP",282,0)
 ; Function value is 0 if not.
"RTN","FBAAMP",283,0)
 ; FBDODINV - pass by reference. This is set to the DoD invoice number.
"RTN","FBAAMP",284,0)
 ; FBDEF is an optional default value
"RTN","FBAAMP",285,0)
 ;
"RTN","FBAAMP",286,0)
 N RET,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","FBAAMP",287,0)
 S FBDODINV="",RET=0   ; initialize
"RTN","FBAAMP",288,0)
 S DIR(0)="Fr^3:22",DIR("A")="Enter the DoD Invoice Number"
"RTN","FBAAMP",289,0)
 I $G(FBDEF)'="" S DIR("B")=FBDEF
"RTN","FBAAMP",290,0)
 S DIR("?",1)="If invoice is a UB-04 look in block 3a."
"RTN","FBAAMP",291,0)
 S DIR("?",2)="If invoice is a CMS-1500 look in block 26."
"RTN","FBAAMP",292,0)
 S DIR("?")="You must enter between 3-22 characters."
"RTN","FBAAMP",293,0)
 W ! D ^DIR K DIR
"RTN","FBAAMP",294,0)
 I $D(DIRUT),$G(FBDEF)'="" S Y=FBDEF K DIRUT
"RTN","FBAAMP",295,0)
 I '$D(DIRUT),Y'="" S FBDODINV=Y,RET=1 G IPINVX
"RTN","FBAAMP",296,0)
 W !!,$C(7),"The DoD Invoice Number is required for IPAC processing."
"RTN","FBAAMP",297,0)
IPINVX ;
"RTN","FBAAMP",298,0)
 W !
"RTN","FBAAMP",299,0)
 Q RET
"RTN","FBAAMP",300,0)
 ;
"RTN","FBAAMP",301,0)
IPACREQD(FBVEN) ; Is IPAC data required for vendor?  (FB*3.5*123)
"RTN","FBAAMP",302,0)
 I $G(FBAAPTC)="R" Q 0      ; IPAC is not applicable for Patient/Veteran reimbursements
"RTN","FBAAMP",303,0)
 I +$O(^FBAA(161.95,"AVA",+$G(FBVEN),"A","")) Q 1
"RTN","FBAAMP",304,0)
 Q 0
"RTN","FBAAMP",305,0)
 ;
"RTN","FBAAMP",306,0)
IPACDISP(FBIA,FBDODINV) ; Quick display of IPAC data currently on file for this invoice  (FB*3.5*123)
"RTN","FBAAMP",307,0)
 N G
"RTN","FBAAMP",308,0)
 S FBIA=+$G(FBIA)
"RTN","FBAAMP",309,0)
 S G=$G(^FBAA(161.95,FBIA,0))
"RTN","FBAAMP",310,0)
 I G="",$G(FBDODINV)="" G IDISPX
"RTN","FBAAMP",311,0)
 W !!,"IPAC Agreement Information on file for this Invoice/Payment"
"RTN","FBAAMP",312,0)
 W !,"-----------------------------------------------------------"
"RTN","FBAAMP",313,0)
 W !,"IPAC Agreement ID: ",$P(G,U,1),"  (",$$GET1^DIQ(161.95,FBIA,3),")"
"RTN","FBAAMP",314,0)
 W !?11,"Vendor: ",$$GET1^DIQ(161.95,FBIA,1)
"RTN","FBAAMP",315,0)
 W !?6,"Fiscal Year: ",$P(G,U,3)
"RTN","FBAAMP",316,0)
 W !,"Short Description: ",$P(G,U,5)
"RTN","FBAAMP",317,0)
 W !?5,"DoD Invoice#: ",$G(FBDODINV)
"RTN","FBAAMP",318,0)
IDISPX ;
"RTN","FBAAMP",319,0)
 Q
"RTN","FBAAMP",320,0)
 ;
"RTN","FBAAMP",321,0)
ANCIL ;ENTRY POINT FOR multiple ancillary payment option
"RTN","FBAAMP",322,0)
 S FBCHCO=1 D ^FBAAMP
"RTN","FBAAMP",323,0)
 K FBCHCO Q
"RTN","FBAAMPG1")
0^16^B6611500^B5155968
"RTN","FBAAMPG1",1,0)
FBAAMPG1 ;AISC/DMK/CMR-PURGE TRANSMITTED MRA'S ;5/24/1999
"RTN","FBAAMPG1",2,0)
 ;;3.5;FEE BASIS;**18,123**;JAN 30, 1995;Build 51
"RTN","FBAAMPG1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAMPG1",4,0)
 S:'$D(DTIME) DTIME=999 I '$D(DT) S %DT="",X=T D ^%DT S DT=Y K X,Y
"RTN","FBAAMPG1",5,0)
 I '$D(^FBAA(161.25,"AD")),'$D(^FBAA(161.26,"AD")),'$D(^FBAA(161.96,"AD")) G END
"RTN","FBAAMPG1",6,0)
 S (CNT,MCNT,ICNT)=0
"RTN","FBAAMPG1",7,0)
 F I=0:0 S I=$O(^FBAA(161.26,"AD",I)) Q:I'>0!(I>DT)  F J=0:0 S J=$O(^FBAA(161.26,"AD",I,J)) Q:J'>0  I $D(^FBAA(161.26,J,0)) S DA=J D DELVET S CNT=CNT+1
"RTN","FBAAMPG1",8,0)
 F I=0:0 S I=$O(^FBAA(161.96,"AD",I)) Q:I'>0!(I>DT)  F J=0:0 S J=$O(^FBAA(161.96,"AD",I,J)) Q:J'>0  I $D(^FBAA(161.96,J,0)) S DA=J D DELIA S ICNT=ICNT+1
"RTN","FBAAMPG1",9,0)
 F I=0:0 S I=$O(^FBAA(161.25,"AD",I)) Q:I'>0!(I>DT)  F J="O","P" F K=0:0 S K=$O(^FBAA(161.25,"AD",I,J,K)) Q:K'>0  I $D(^FBAA(161.25,K,0)),($S($P(^(0),"^",3)="C":0,$P(^(0),"^",2)="C":0,$P(^(0),"^",3)="N":0,$P(^(0),"^",2)="N":0,1:1)) D
"RTN","FBAAMPG1",10,0)
 .S DA=K D DELVEN S MCNT=MCNT+1
"RTN","FBAAMPG1",11,0)
 F I="O","P" F J=0:0 S J=$O(^FBAA(161.25,"AE",I,J)) Q:'J  I $D(^FBAA(161.25,J,0)),'$D(^FBAAV(J,0)) S DA=J D DELVEN S MCNT=MCNT+1
"RTN","FBAAMPG1",12,0)
 F I=0:0 S I=$O(^FBAA(161.26,"AC","P",I)) Q:'I  I $D(^FBAA(161.26,I,0)) S J=+$P(^(0),"^",3) I '$D(^FBAAA(+^FBAA(161.26,I,0),1,J,0)) S DA=I D DELVET S CNT=CNT+1
"RTN","FBAAMPG1",13,0)
 ;
"RTN","FBAAMPG1",14,0)
 ; check pending IPAC MRAs and remove any records that have bad IPAC vendor agreement pointers
"RTN","FBAAMPG1",15,0)
 F I=0:0 S I=$O(^FBAA(161.96,"AS","P",I)) Q:'I  D
"RTN","FBAAMPG1",16,0)
 . N IVA
"RTN","FBAAMPG1",17,0)
 . S IVA=+$P($G(^FBAA(161.96,I,0)),U,2)   ; IPAC vendor agreement ptr
"RTN","FBAAMPG1",18,0)
 . I $D(^FBAA(161.95,IVA,0)) Q            ; its OK so quit
"RTN","FBAAMPG1",19,0)
 . S DA=I D DELIA S ICNT=ICNT+1           ; kill it
"RTN","FBAAMPG1",20,0)
 . Q
"RTN","FBAAMPG1",21,0)
 ;
"RTN","FBAAMPG1",22,0)
BULLET S XMB(1)=CNT,XMB(2)=MCNT,XMB(3)=ICNT,XMB="FBAA PURGE TRANSMITTED MRA'S",XMDUZ=$S($G(DUZ):DUZ,1:.5) D ^XMB
"RTN","FBAAMPG1",23,0)
END K F,I,J,K,CNT,MCNT,FBAAPD,X,Y,ICNT Q
"RTN","FBAAMPG1",24,0)
 ;
"RTN","FBAAMPG1",25,0)
DELVET S DIK="^FBAA(161.26," D ^DIK Q
"RTN","FBAAMPG1",26,0)
DELVEN S DIK="^FBAA(161.25," D ^DIK Q
"RTN","FBAAMPG1",27,0)
DELIA S DIK="^FBAA(161.96," D ^DIK Q
"RTN","FBAAMPRG")
0^17^B8621277^B5836016
"RTN","FBAAMPRG",1,0)
FBAAMPRG ;AISC/DMK-PURGE TRANSMITTED MRA'S ;5/24/1999
"RTN","FBAAMPRG",2,0)
 ;;3.5;FEE BASIS;**18,123**;JAN 30, 1995;Build 51
"RTN","FBAAMPRG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAMPRG",4,0)
ASK W !! S %DT("A")="Purge Veteran, IPAC and Vendor MRA's transmitted PRIOR to: ",%DT="AEXP",%DT(0)=-DT D ^%DT K %DT G END:X="^"!(X=""),ASK:Y<0 S FBAAPD=Y
"RTN","FBAAMPRG",5,0)
 N DA,DIK
"RTN","FBAAMPRG",6,0)
 I '$D(^FBAA(161.25,"AD")),'$D(^FBAA(161.26,"AD")),'$D(^FBAA(161.96,"AD")) W !!,*7,"No transmitted MRA's currently on file!",! G END
"RTN","FBAAMPRG",7,0)
 S (CNT,MCNT,ICNT)=0 W !,?25,"Deleting....",!
"RTN","FBAAMPRG",8,0)
 F I=0:0 S I=$O(^FBAA(161.26,"AD",I)) Q:I'>0!(I>FBAAPD)  F J=0:0 S J=$O(^FBAA(161.26,"AD",I,J)) Q:J'>0  I $D(^FBAA(161.26,J,0)) S DA=J D DELVET S CNT=CNT+1
"RTN","FBAAMPRG",9,0)
 F I=0:0 S I=$O(^FBAA(161.96,"AD",I)) Q:I'>0!(I>FBAAPD)  F J=0:0 S J=$O(^FBAA(161.96,"AD",I,J)) Q:J'>0  I $D(^FBAA(161.96,J,0)) S DA=J D DELIPAC S ICNT=ICNT+1
"RTN","FBAAMPRG",10,0)
 F I=0:0 S I=$O(^FBAA(161.25,"AD",I)) Q:I'>0!(I>FBAAPD)  F J="O","P" F K=0:0 S K=$O(^FBAA(161.25,"AD",I,J,K)) Q:K'>0  I $D(^FBAA(161.25,K,0)),($S($P(^(0),"^",3)="C":0,$P(^(0),"^",2)="C":0,$P(^(0),"^",3)="N":0,$P(^(0),"^",2)="N":0,1:1)) D
"RTN","FBAAMPRG",11,0)
 .S DA=K D DELVEN S MCNT=MCNT+1
"RTN","FBAAMPRG",12,0)
 F I="O","P" F J=0:0 S J=$O(^FBAA(161.25,"AE",I,J)) Q:'J  I $D(^FBAA(161.25,J,0)),'$D(^FBAAV(J,0)) S DA=J D DELVEN S MCNT=MCNT+1
"RTN","FBAAMPRG",13,0)
 F I=0:0 S I=$O(^FBAA(161.26,"AC","P",I)) Q:'I  I $D(^FBAA(161.26,I,0)) S J=+$P(^(0),"^",3) I '$D(^FBAAA(+^FBAA(161.26,I,0),1,J,0)) S DA=I D DELVET S CNT=CNT+1
"RTN","FBAAMPRG",14,0)
 ;
"RTN","FBAAMPRG",15,0)
 ; check pending IPAC MRAs and remove any records that have bad IPAC vendor agreement pointers
"RTN","FBAAMPRG",16,0)
 F I=0:0 S I=$O(^FBAA(161.96,"AS","P",I)) Q:'I  D
"RTN","FBAAMPRG",17,0)
 . N IVA
"RTN","FBAAMPRG",18,0)
 . S IVA=$P($G(^FBAA(161.96,I,0)),U,2)          ; IPAC vendor agreement ptr
"RTN","FBAAMPRG",19,0)
 . Q:IVA=""                                     ; MRA record for a delete
"RTN","FBAAMPRG",20,0)
 . I $D(^FBAA(161.95,IVA,0)) Q            ; its OK so quit
"RTN","FBAAMPRG",21,0)
 . S DA=I D DELIPAC S ICNT=ICNT+1         ; kill it
"RTN","FBAAMPRG",22,0)
 . Q
"RTN","FBAAMPRG",23,0)
 ;
"RTN","FBAAMPRG",24,0)
 W !!,?16,"Total Veteran MRA's deleted: ",CNT,!,?16,"Total Vendor MRA's deleted: ",MCNT,!,?16,"Total IPAC MRA's deleted: ",ICNT,!
"RTN","FBAAMPRG",25,0)
END K F,I,J,K,CNT,MCNT,FBAAPD,X,Y,ICNT Q
"RTN","FBAAMPRG",26,0)
 ;
"RTN","FBAAMPRG",27,0)
DELVET S DIK="^FBAA(161.26," D ^DIK Q
"RTN","FBAAMPRG",28,0)
DELVEN S DIK="^FBAA(161.25," D ^DIK Q
"RTN","FBAAMPRG",29,0)
DELIPAC S DIK="^FBAA(161.96," D ^DIK Q
"RTN","FBAAPET")
0^32^B48467737^B47597707
"RTN","FBAAPET",1,0)
FBAAPET ;AISC/DMK - EDIT PAYMENT ;5/16/12 12:44pm
"RTN","FBAAPET",2,0)
 ;;3.5;FEE BASIS;**4,38,55,61,77,116,122,133,108,124,132,139,123**;JAN 30, 1995;Build 51
"RTN","FBAAPET",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAPET",4,0)
 S FBOT=1
"RTN","FBAAPET",5,0)
GETPT I $G(BAT) D
"RTN","FBAAPET",6,0)
 .I '$D(^FBAAC("AC",+BAT)) F I=9,10,11 S $P(^FBAA(161.7,+BAT,0),U,I)=""
"RTN","FBAAPET",7,0)
 .I $D(^FBAAC("AC",+BAT)) D  S $P(^FBAA(161.7,+BAT,0),U,11)=I,$P(^(0),U,9)=$G(FBTOT) K I,FBTOT
"RTN","FBAAPET",8,0)
 ..N J,K,L,M S (I,J,K,L,M,FBTOT)=0
"RTN","FBAAPET",9,0)
 ..F  S J=$O(^FBAAC("AC",+BAT,J)) Q:'J  F  S K=$O(^FBAAC("AC",+BAT,J,K)) Q:'K  F  S L=$O(^FBAAC("AC",+BAT,J,K,L)) Q:'L  F  S M=$O(^FBAAC("AC",+BAT,J,K,L,M)) Q:'M  I $D(^FBAAC(J,1,K,1,L,1,M,0)) S I=I+1,FBTOT=FBTOT+$P(^(0),U,3)
"RTN","FBAAPET",10,0)
 W !! S DIC="^FBAAC(",DIC(0)="AEQM" D ^DIC G END:X="^"!(X=""),GETPT:Y<0 S (DFN,FBDA(3))=+Y
"RTN","FBAAPET",11,0)
 S:'$D(^FBAAC(DFN,1,0)) ^FBAAC(DFN,1,0)="^162.01P^0^0"
"RTN","FBAAPET",12,0)
 S DIC=DIC_DFN_",1,"
"RTN","FBAAPET",13,0)
GETVD W !! S DIC(0)="AEQM" D ^DIC G GETPT:X="^"!(X=""),GETVD:Y<0 S (FBV,FBVD,FBDA(2))=+Y
"RTN","FBAAPET",14,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,0)) ^FBAAC(DFN,1,FBDA(2),1,0)="^162.02DA^0^0"
"RTN","FBAAPET",15,0)
 S DIC=DIC_FBVD_",1,"
"RTN","FBAAPET",16,0)
GETDT S DIC(0)="AEQM",DIC("A")="Date of Service: " D ^DIC K DIC("A") G GETPT:X="^"!(X=""),GETDT:Y<0 S (FBSD,FBSDI,FBDA(1))=+Y,FBAADT=$P(Y,U,2)
"RTN","FBAAPET",17,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)) ^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)="^162.03A^0^0"
"RTN","FBAAPET",18,0)
 S FBZ=DIC_FBSD_",1,"
"RTN","FBAAPET",19,0)
SERV S DA(3)=FBDA(3),DA(2)=FBDA(2),DA(1)=FBDA(1)
"RTN","FBAAPET",20,0)
 S DIC("W")="N FBX S FBX=$$MODL^FBAAUTL4(""^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,+Y,""""M"""")"",""E"") W:FBX]"""" ""    CPT Modifier(s): "",FBX Q"
"RTN","FBAAPET",21,0)
 S DIC=FBZ,DIC(0)="AEQMZ"
"RTN","FBAAPET",22,0)
 D
"RTN","FBAAPET",23,0)
 . N ICPTVDT S ICPTVDT=$G(FBAADT) D ^DIC
"RTN","FBAAPET",24,0)
 G GETPT:X="^"!(X=""),SERV:Y<0 S (FBSV,FBAACPI,FBDA)=+Y,BAT=$P(Y(0),U,8),FBDUZ=$P(Y(0),U,7),(FBAACP,FBAACP(0))=$P(Y,U,2),K=$P(Y(0),U,3),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBAAPET",25,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBAAPET",26,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBAAPET",27,0)
 I FBDUZ'=DUZ&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry,only the clerk who entered the payment ",!," or a supervisor can edit this payment." G GETPT
"RTN","FBAAPET",28,0)
 ;S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBAAPET",29,0)
 S FBFSAMT(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,12)
"RTN","FBAAPET",30,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBAAPET",31,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBAAPET",32,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"_FBDA(1)_",1,"_FBDA_",""M"")")
"RTN","FBAAPET",33,0)
 ; load current adjustment data
"RTN","FBAAPET",34,0)
 D LOADADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBAAPET",35,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAAPET",36,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAAPET",37,0)
 ; load current remittance remark data
"RTN","FBAAPET",38,0)
 D LOADRR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBAAPET",39,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAAPET",40,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAAPET",41,0)
 ; save FPPS data prior to edit session
"RTN","FBAAPET",42,0)
 S FBFPPSC(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U)
"RTN","FBAAPET",43,0)
 S FBFPPSC=FBFPPSC(0)
"RTN","FBAAPET",44,0)
 S FBFPPSL(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,2)
"RTN","FBAAPET",45,0)
 S FBFPPSL=FBFPPSL(0)
"RTN","FBAAPET",46,0)
 G:BAT']"" EDIT
"RTN","FBAAPET",47,0)
 ; check batch status
"RTN","FBAAPET",48,0)
 S FBSTAT=$P($G(^FBAA(161.7,BAT,"ST")),U) ; batch status
"RTN","FBAAPET",49,0)
 I FBSTAT="S",'$D(^XUSEC("FBAASUPERVISOR",DUZ)) W !!,*7,"Sorry, only the Supervisor can edit a payment once the batch has been released." G GETPT
"RTN","FBAAPET",50,0)
 I "^T^F^V^"[(U_FBSTAT_U) W !!,*7,"Sorry, you cannot edit a payment when the batch has been sent to Austin." G GETPT
"RTN","FBAAPET",51,0)
 K FBSTAT
"RTN","FBAAPET",52,0)
 ;
"RTN","FBAAPET",53,0)
EDIT S DA=FBSV
"RTN","FBAAPET",54,0)
 ;
"RTN","FBAAPET",55,0)
 ; first edit CPT code and modifiers
"RTN","FBAAPET",56,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) G GETPT
"RTN","FBAAPET",57,0)
 ; if CPT was changed then update file
"RTN","FBAAPET",58,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" G GETPT
"RTN","FBAAPET",59,0)
 . N FBIENS,FBFDA
"RTN","FBAAPET",60,0)
 . S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBAAPET",61,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBAAPET",62,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAPET",63,0)
 ; if modifiers changed then update file
"RTN","FBAAPET",64,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(FBDA(3),FBDA(2),FBDA(1),FBDA)
"RTN","FBAAPET",65,0)
 ;
"RTN","FBAAPET",66,0)
 ; Check for IPAC data requirements for Federal Vendors (FB*3.5*123)
"RTN","FBAAPET",67,0)
 I '$$IPACEDIT^FBAAPET1(162.03,.FBDA) G SERV
"RTN","FBAAPET",68,0)
 ;
"RTN","FBAAPET",69,0)
 ; now edit remaining fields
"RTN","FBAAPET",70,0)
 S DIE("NO^")=""
"RTN","FBAAPET",71,0)
 ; FB*3.5*139-JLG-ICD10 REMEDIATION -added FBDXCHK1 and FBDXCHK2
"RTN","FBAAPET",72,0)
 N FBDXCHK1 S FBDXCHK1="S:FBAADT<$$IMPDATE^FBCSV1(""10D"") Y=""@7"";@60;S XX1=-1 S XX1=$$ASKICD10^FBAACO2(FBAADT,""Y"") S:XX1<0 Y=""@60"";28////^S X=XX1;S Y=31;"
"RTN","FBAAPET",73,0)
 N FBDXCHK2 S FBDXCHK2="S:FBAADT<$$IMPDATE^FBCSV1(""10D"") Y=""@8"";@15;S XX1=-1 S XX1=$$ASKICD10^FBAACO2(FBAADT) S:XX1<0 Y=""@15"";28////^S X=XX1;S Y=31;"
"RTN","FBAAPET",74,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBAAPET",75,0)
 ; fb*3.5*116 remove edit of interest indicator (162.03,34) to prevent different interest indicator values at line item level; interest indicator set at invoice level only; 
"RTN","FBAAPET",76,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1,FBCNTRP,1);54///@;54////^S X=FBCNTRP;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAAPET",77,0)
 ;S DR(1,162.03,1)="30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAAPET",78,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBAAPET",79,0)
 ;S DR(1,162.03,3)="3////^S X=$S(J-K:J-K,1:"""");I X S Y=""@11"";4////@;S Y=""@5"";@11;3R;4R;S:X'=4 Y=""@5"";22"
"RTN","FBAAPET",80,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBAAPET",81,0)
 S DR(1,162.03,4)="S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@5"";50///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;51///^S X=FBX;S FBFPPCL=X;S Y=""@55"";@5;50///@;S FBFPPSC="""";51///@;S FBFPPSL="""";@55"
"RTN","FBAAPET",82,0)
 S DR(1,162.03,5)="K DIE(""NO^"");W !,""Exit ('^') allowed now"";26;S PRC(""SITE"")=X;8;@13;13;I $$BADDATE^FBAAPET(FBAADT,X) S Y=""@13"";Q;33;49"
"RTN","FBAAPET",83,0)
 ;JAS - 09/11/13 - PATCH 139 - Modified next two lines (previously one line) for ICD-10
"RTN","FBAAPET",84,0)
 S DR(1,162.03,6)="15;17;16;S:X=1 Y=""@1"";@6;"_FBDXCHK1_"@7;S FBI9=$$ASKICD9^FBAACO2(FBAADT,""Y"") S:+FBI9<0 Y=""@7"";28////^S X=+FBI9;31;32R;S Y=""@9"";"
"RTN","FBAAPET",85,0)
 S DR(1,162.03,7)="@1;"_FBDXCHK2_"@8;S FBI9=$$ASKICD9^FBAACO2(FBAADT) S:+FBI9<0 Y=""@8"";28////^S X=+FBI9;31"
"RTN","FBAAPET",86,0)
 S DR(1,162.03,8)="@9;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBAAPET",87,0)
 S DR(1,162.03,9)="73;74;75;58;59;60;61;62;63;64;65;66;67;76;77;78;79;68;69" ;FB*3.5*122,FB*3.5*133 edit line item provider fields
"RTN","FBAAPET",88,0)
 S DR(1,162.03,10)="@999;K FBDXCHK1,FBDXCHK2,XX1"  ;DEM;139 ICD-10 ASF
"RTN","FBAAPET",89,0)
 S DIE=FBZ
"RTN","FBAAPET",90,0)
 D
"RTN","FBAAPET",91,0)
 . N ICPTVDT,ICDVDT,FB583,FBAAMM,FBAAMM1,FBCNTRA,FBCNTRP,FBVEN,FTP
"RTN","FBAAPET",92,0)
 . S (ICPTVDT,ICDVDT)=$G(FBAADT)
"RTN","FBAAPET",93,0)
 . ; set variables for call to PPT^FBAACO1
"RTN","FBAAPET",94,0)
 . S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBAAPET",95,0)
 . S FBCNTRP=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,8)
"RTN","FBAAPET",96,0)
 . S X=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,0)),U,13)
"RTN","FBAAPET",97,0)
 . S:X[";FB583(" FB583=+X
"RTN","FBAAPET",98,0)
 . S FTP=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),0)),U,4)
"RTN","FBAAPET",99,0)
 . S FBVEN=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,4),1:"")
"RTN","FBAAPET",100,0)
 . S FBCNTRA=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,22),1:"")
"RTN","FBAAPET",101,0)
 . D ^DIE
"RTN","FBAAPET",102,0)
 ; if adjustment data changed then file
"RTN","FBAAPET",103,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBAAPET",104,0)
 ; if remit remark data changed then file
"RTN","FBAAPET",105,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBAAPET",106,0)
 ; if FPPS CLAIM ID changed, update other line items on invoice
"RTN","FBAAPET",107,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBAAPET",108,0)
 . N FBAAIN
"RTN","FBAAPET",109,0)
 . S FBAAIN=$$GET1^DIQ(162.03,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",14)
"RTN","FBAAPET",110,0)
 . D CKINVEDI^FBAAPET1(FBFPPSC(0),FBFPPSC,FBAAIN,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",")
"RTN","FBAAPET",111,0)
 K FBSV W !! G SERV
"RTN","FBAAPET",112,0)
 ;
"RTN","FBAAPET",113,0)
BADDATE(FBDOS,INVRCVDT) ;Reject entry if InvRcvDt is Prior to the Date of Service on the Invoice
"RTN","FBAAPET",114,0)
 I INVRCVDT<FBDOS D  Q 1 ;Reject entry
"RTN","FBAAPET",115,0)
 .N SHOWDOS S SHOWDOS=$E(FBDOS,4,5)_"/"_$E(FBDOS,6,7)_"/"_$E(FBDOS,2,3) ;Convert FBDOS into display format for error message
"RTN","FBAAPET",116,0)
 .W *7,!!?5,"*** Invoice Received Date cannot be prior to the",!?8,"Date of Service ("_SHOWDOS_") !!!"
"RTN","FBAAPET",117,0)
 Q 0 ;Accept entry
"RTN","FBAAPET",118,0)
 ;
"RTN","FBAAPET",119,0)
END K DR,DIC,DIE,X,DFN,FBOT,FBVD,FBSD,BAT,FBAADT,FBSV,DA,FBDA,FBZ,FBDUZ,FBAACP,FBFY,FY,FBAMTPD,J,K,Y,ZZ,PRC,FBHOLDX,FBV,FBSDI,FBAACPI
"RTN","FBAAPET",120,0)
 K FBFSAMT,FBFSUSD,FBMODA,FBZIP,FBTIME,FBHCFA(30),FBAAPTC,FB1725,FBADJ,FBADJD,FBADJL(0),FBRRMK,FBRRMKD,FBRRMKL(0),FBX,FBUNITS
"RTN","FBAAPET",121,0)
 Q
"RTN","FBAAPET1")
0^36^B56662432^B9459481
"RTN","FBAAPET1",1,0)
FBAAPET1 ;WOIFO/SAB-EDIT PAYMENT ;7/10/2003
"RTN","FBAAPET1",2,0)
 ;;3.5;FEE BASIS;**61,123**;JAN 30, 1995;Build 51
"RTN","FBAAPET1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAPET1",4,0)
CKINVEDI(FBFPPSC0,FBFPPSC1,FBAAIN,FBIENSE) ; Check Invoice for EDI
"RTN","FBAAPET1",5,0)
 ; Input
"RTN","FBAAPET1",6,0)
 ;  FBFPPSC0 - old FPPS CLAIM ID
"RTN","FBAAPET1",7,0)
 ;  FBFPPSC1 - new FPPS CLAIM ID
"RTN","FBAAPET1",8,0)
 ;  FBAAIN   - invoice number
"RTN","FBAAPET1",9,0)
 ;  FBIENSE   - optional, iens of line on invoice that was already edited
"RTN","FBAAPET1",10,0)
 ; Result
"RTN","FBAAPET1",11,0)
 ;  Lines on invoice may be updated (FPPS CLAIM ID, FPPS LINE ITEM)
"RTN","FBAAPET1",12,0)
 ;
"RTN","FBAAPET1",13,0)
 ; If FBFPPSC0]"",FBFPPSC1="" then EDI changed from YES to NO
"RTN","FBAAPET1",14,0)
 ;   need to delete FPPS CLAIM ID and FPPS LINE ITEM
"RTN","FBAAPET1",15,0)
 ; If FBFPPSC0="",FBFPPSC1]"" then EDI changed from NO to YES
"RTN","FBAAPET1",16,0)
 ;   need to update FPPS CLAIM ID and prompt FPPS LINE ITEM
"RTN","FBAAPET1",17,0)
 ; If FBFPPSC0]"",FBFPPSC1]"",FBFPPSC0'=FBFPPSC1 then
"RTN","FBAAPET1",18,0)
 ;   EDI stayed YES, but FPPS CLAIM ID was changed
"RTN","FBAAPET1",19,0)
 ;   need to update FPPS CLAIM ID
"RTN","FBAAPET1",20,0)
 ;
"RTN","FBAAPET1",21,0)
 N FBASKLN,FBFDA,FBFPPSC,FBFPPSL,FBI,FBIENS,FBMILL,FBUPDLN
"RTN","FBAAPET1",22,0)
 ;
"RTN","FBAAPET1",23,0)
 S FBIENSE=$G(FBIENSE)
"RTN","FBAAPET1",24,0)
 ;
"RTN","FBAAPET1",25,0)
 I FBFPPSC0=FBFPPSC1 Q  ; FPPS CLAIM ID was not changed
"RTN","FBAAPET1",26,0)
 ; 
"RTN","FBAAPET1",27,0)
 ; Get Lines on Invoice
"RTN","FBAAPET1",28,0)
 D MILL(FBAAIN,.FBMILL)
"RTN","FBAAPET1",29,0)
 ;
"RTN","FBAAPET1",30,0)
 I FBIENSE]"",FBMILL(0)=1 Q  ; only 1 line and it has been updated
"RTN","FBAAPET1",31,0)
 ;
"RTN","FBAAPET1",32,0)
 S (FBASKLN,FBUPDLN)=0
"RTN","FBAAPET1",33,0)
 I FBFPPSC0]"",FBFPPSC1="" S (FBFPPSC,FBFPPSL)="@",FBUPDLN=1
"RTN","FBAAPET1",34,0)
 I FBFPPSC0="",FBFPPSC1]"" S FBFPPSC=FBFPPSC1,(FBASKLN,FBUPDLN)=1
"RTN","FBAAPET1",35,0)
 I FBFPPSC0]"",FBFPPSC1]"" S FBFPPSC=FBFPPSC1
"RTN","FBAAPET1",36,0)
 ;
"RTN","FBAAPET1",37,0)
 W !,"FPPS CLAIM ID was changed.  Updating lines on invoice..."
"RTN","FBAAPET1",38,0)
 I FBASKLN D
"RTN","FBAAPET1",39,0)
 . W !,"Since EDI Claim from FPPS was changed from NO to YES, the"
"RTN","FBAAPET1",40,0)
 . W !,"FPPS LINE ITEM must be entered for each line on the invoice."
"RTN","FBAAPET1",41,0)
 ;
"RTN","FBAAPET1",42,0)
 ; loop thru lines
"RTN","FBAAPET1",43,0)
 S FBI=0 F  S FBI=$O(FBMILL(FBI)) Q:'FBI  D
"RTN","FBAAPET1",44,0)
 . S FBIENS=FBMILL(FBI)
"RTN","FBAAPET1",45,0)
 . I FBIENS=FBIENSE Q  ; already updated
"RTN","FBAAPET1",46,0)
 . S FBFDA(162.03,FBIENS,50)=FBFPPSC
"RTN","FBAAPET1",47,0)
 . I FBASKLN D DSPLIL S FBFPPSL=$$FPPSL^FBUTL5(,,1)
"RTN","FBAAPET1",48,0)
 . I FBUPDLN,$G(FBFPPSL)]"" S FBFDA(162.03,FBIENS,51)=FBFPPSL
"RTN","FBAAPET1",49,0)
 I $D(FBFDA) D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAAPET1",50,0)
 ; 
"RTN","FBAAPET1",51,0)
 Q
"RTN","FBAAPET1",52,0)
 ;
"RTN","FBAAPET1",53,0)
MILL(FBAAIN,FBMILL) ; Medical Invoice Line List
"RTN","FBAAPET1",54,0)
 ; Input
"RTN","FBAAPET1",55,0)
 ;   FBAAIN - invoice #
"RTN","FBAAPET1",56,0)
 ;   FBMILL - array, passed by reference
"RTN","FBAAPET1",57,0)
 ; Result
"RTN","FBAAPET1",58,0)
 ;   
"RTN","FBAAPET1",59,0)
 ; Output
"RTN","FBAAPET1",60,0)
 ;   FBMILL - input array will be updated to contain
"RTN","FBAAPET1",61,0)
 ;     FBMILL(0)=FBC
"RTN","FBAAPET1",62,0)
 ;     FBMILL(FBI)=FBIENS
"RTN","FBAAPET1",63,0)
 ;   Where
"RTN","FBAAPET1",64,0)
 ;     FBC = number of lines on invoice
"RTN","FBAAPET1",65,0)
 ;     FBI = integer number
"RTN","FBAAPET1",66,0)
 ;     FBIENS = internal entry number of line item (subfile 162.03),
"RTN","FBAAPET1",67,0)
 ;              fileman DBS format
"RTN","FBAAPET1",68,0)
 ;   
"RTN","FBAAPET1",69,0)
 N DA,FBC
"RTN","FBAAPET1",70,0)
 ; initialize
"RTN","FBAAPET1",71,0)
 K FBMILL
"RTN","FBAAPET1",72,0)
 S FBC=0 ; count
"RTN","FBAAPET1",73,0)
 ; loop thru x-ref
"RTN","FBAAPET1",74,0)
 S DA(3)=0
"RTN","FBAAPET1",75,0)
 F  S DA(3)=$O(^FBAAC("C",FBAAIN,DA(3))) Q:'DA(3)  D
"RTN","FBAAPET1",76,0)
 .S DA(2)=0
"RTN","FBAAPET1",77,0)
 .F  S DA(2)=$O(^FBAAC("C",FBAAIN,DA(3),DA(2))) Q:'DA(2)  D
"RTN","FBAAPET1",78,0)
 ..S DA(1)=0
"RTN","FBAAPET1",79,0)
 ..F  S DA(1)=$O(^FBAAC("C",FBAAIN,DA(3),DA(2),DA(1))) Q:'DA(1)  D
"RTN","FBAAPET1",80,0)
 ...S DA=0
"RTN","FBAAPET1",81,0)
 ...F  S DA=$O(^FBAAC("C",FBAAIN,DA(3),DA(2),DA(1),DA)) Q:'DA  D
"RTN","FBAAPET1",82,0)
 ....S FBC=FBC+1
"RTN","FBAAPET1",83,0)
 ....S FBMILL(FBC)=DA_","_DA(1)_","_DA(2)_","_DA(3)_","
"RTN","FBAAPET1",84,0)
 ; save count of lines
"RTN","FBAAPET1",85,0)
 S FBMILL(0)=FBC
"RTN","FBAAPET1",86,0)
 Q
"RTN","FBAAPET1",87,0)
 ;
"RTN","FBAAPET1",88,0)
DSPLIL ; Display Invoice Line
"RTN","FBAAPET1",89,0)
 ; Input
"RTN","FBAAPET1",90,0)
 ;   FBIENS - iens of line to display
"RTN","FBAAPET1",91,0)
 N DA,FBMODA,FBMODL
"RTN","FBAAPET1",92,0)
 D DA^DILF(FBIENS,.DA)
"RTN","FBAAPET1",93,0)
 D MODDATA^FBAAUTL4(DA(3),DA(2),DA(1),DA)
"RTN","FBAAPET1",94,0)
 S FBMODL=$$MODL^FBAAUTL4("FBMODA","E")
"RTN","FBAAPET1",95,0)
 W !!
"RTN","FBAAPET1",96,0)
 W "SVC DATE: ",$$GET1^DIQ(162.02,DA(1)_","_DA(2)_","_DA(3)_",",.01)
"RTN","FBAAPET1",97,0)
 W ?23,"CPT-MOD: ",$$GET1^DIQ(162.03,FBIENS,.01)
"RTN","FBAAPET1",98,0)
 I FBMODL]"" W "-",FBMODL
"RTN","FBAAPET1",99,0)
 W ?43,"REV. CODE: ",$$GET1^DIQ(162.03,FBIENS,48)
"RTN","FBAAPET1",100,0)
 W ?63,"AMT CLAIMED: ",$$GET1^DIQ(162.03,FBIENS,1)
"RTN","FBAAPET1",101,0)
 Q
"RTN","FBAAPET1",102,0)
 ;
"RTN","FBAAPET1",103,0)
IPACEDIT(FBDD,FBDA,FBIA,FBDODINV,WHICH) ; Enter/Edit IPAC information for all payment types  (FB*3.5*123)
"RTN","FBAAPET1",104,0)
 ; FBDD - required input. Either 162.03 for Outpatient/Ancillary, or 162.1 for Pharmacy, or 162.5 for Inpatient
"RTN","FBAAPET1",105,0)
 ; FBDA - required input. This is the DA(n) array specifying the record to be edited. Note in the case of Inpatient
"RTN","FBAAPET1",106,0)
 ;                        invoices, there is no array but rather the ien to file 162.5.
"RTN","FBAAPET1",107,0)
 ; WHICH- Optional input. Null to ask both IPAC Agreement and DOD Invoice Number
"RTN","FBAAPET1",108,0)
 ;        1 - Just ask for IPAC Agreement
"RTN","FBAAPET1",109,0)
 ;        2 - Just ask for DOD Invoice #
"RTN","FBAAPET1",110,0)
 ; Output
"RTN","FBAAPET1",111,0)
 ; FBIA - ien to file 161.95 - IPAC agreement ien. Pass by reference to get this value back if needed. Note the FBIA
"RTN","FBAAPET1",112,0)
 ;                             value will be retrieved from the database in this subroutine.
"RTN","FBAAPET1",113,0)
 ; FBDODINV - DoD invoice#. Pass by reference to get this value back if needed. Note the FBDODINV value will be 
"RTN","FBAAPET1",114,0)
 ;                             retrieved from the database in this subroutine.
"RTN","FBAAPET1",115,0)
 ;
"RTN","FBAAPET1",116,0)
 ; Function Value is 0/1.  1 means all is good, OK to continue editing
"RTN","FBAAPET1",117,0)
 ;                         0 means IPAC data is required, but some of it is missing. Error message is displayed.
"RTN","FBAAPET1",118,0)
 ;
"RTN","FBAAPET1",119,0)
 N FBRET,FBVEN,FBIAEDIT,FBINVDEF,FBZ
"RTN","FBAAPET1",120,0)
 S FBRET=1    ; assume function value is true - OK to continue
"RTN","FBAAPET1",121,0)
 S:'$D(WHICH) WHICH=""
"RTN","FBAAPET1",122,0)
 ;
"RTN","FBAAPET1",123,0)
 I FBDD=162.03 D GETIPAC(.FBDA,.FBVEN,.FBIA,.FBDODINV)            ; get Outpatient vendor/IPAC data
"RTN","FBAAPET1",124,0)
 I FBDD=162.1 D GETIPAC^FBAAEPI(.FBDA,.FBVEN,.FBIA,.FBDODINV)     ; get Pharmacy vendor/IPAC data
"RTN","FBAAPET1",125,0)
 I FBDD=162.5 D GETIPAC^FBCHEP1(FBDA,.FBVEN,.FBIA,.FBDODINV)      ; get Inpatient vendor/IPAC data
"RTN","FBAAPET1",126,0)
 ;
"RTN","FBAAPET1",127,0)
 S FBINVDEF=FBDODINV                                              ; to be used as the default value
"RTN","FBAAPET1",128,0)
 I 'FBVEN G IPEDITX                                               ; get out if no vendor found
"RTN","FBAAPET1",129,0)
 ;
"RTN","FBAAPET1",130,0)
 ; if any IPAC data exists display it
"RTN","FBAAPET1",131,0)
 S FBIAEDIT=0      ; flag indicating if IPAC data in database already
"RTN","FBAAPET1",132,0)
 I FBIA!(FBDODINV'="") D
"RTN","FBAAPET1",133,0)
 . S FBIAEDIT=1    ; edit to existing data
"RTN","FBAAPET1",134,0)
 . D IPACDISP^FBAAMP(FBIA,FBDODINV)   ; quick display what is on file now
"RTN","FBAAPET1",135,0)
 . Q
"RTN","FBAAPET1",136,0)
 ;
"RTN","FBAAPET1",137,0)
 ; IPAC data is not required. If it exists ask to remove it, then get out
"RTN","FBAAPET1",138,0)
 I '$$IPACREQD^FBAAMP(FBVEN) D  G IPEDITX
"RTN","FBAAPET1",139,0)
 . I 'FBIAEDIT Q                   ; no IPAC data on file, immediately get out (normal case)
"RTN","FBAAPET1",140,0)
 . I '$$ASKQUES("DEL") Q           ; there is some IPAC data, but user doesn't want to delete it
"RTN","FBAAPET1",141,0)
 . ;
"RTN","FBAAPET1",142,0)
 . I FBDD=162.03 D DELIPAC(.FBDA)          ; remove Outpatient IPAC data
"RTN","FBAAPET1",143,0)
 . I FBDD=162.1 D DELIPAC^FBAAEPI(.FBDA)   ; remove Pharmacy IPAC data
"RTN","FBAAPET1",144,0)
 . I FBDD=162.5 D DELIPAC^FBCHEP1(FBDA)    ; remove Inpatient IPAC data
"RTN","FBAAPET1",145,0)
 . W !,"IPAC Data has been removed.",!
"RTN","FBAAPET1",146,0)
 . S (FBIA,FBDODINV)=""                    ; make variables nil to indicate they have been deleted
"RTN","FBAAPET1",147,0)
 . Q
"RTN","FBAAPET1",148,0)
 ;
"RTN","FBAAPET1",149,0)
 ; IPAC data is required at this point
"RTN","FBAAPET1",150,0)
 ;
"RTN","FBAAPET1",151,0)
 I FBIAEDIT,'$$ASKQUES("CHANGE") G IE1       ; skip edits if user doesn't want to change it
"RTN","FBAAPET1",152,0)
 ;
"RTN","FBAAPET1",153,0)
 I WHICH'=2 D
"RTN","FBAAPET1",154,0)
 . S FBIA=$$IPAC^FBAAMP(FBVEN)                ; get IPAC pointer ien
"RTN","FBAAPET1",155,0)
 I WHICH'=1 D
"RTN","FBAAPET1",156,0)
 . S FBZ=$$IPACINV^FBAAMP(.FBDODINV,FBINVDEF) ; get DoD Invoice Number
"RTN","FBAAPET1",157,0)
 ;
"RTN","FBAAPET1",158,0)
IE1 ; make sure data is there for filing
"RTN","FBAAPET1",159,0)
 I WHICH'=2,FBIA'>0 S FBRET=0 G IPEDITX
"RTN","FBAAPET1",160,0)
 I WHICH'=1,FBDODINV="" S FBRET=0 G IPEDITX
"RTN","FBAAPET1",161,0)
 ;
"RTN","FBAAPET1",162,0)
 I FBDD=162.03 D SAVEIPAC(.FBDA,FBIA,FBDODINV,WHICH)   ; Store Outpatient IPAC data
"RTN","FBAAPET1",163,0)
 I FBDD=162.1 D SAVEIPAC^FBAAEPI(.FBDA,FBIA,FBDODINV,WHICH)  ; Store Pharmacy IPAC data
"RTN","FBAAPET1",164,0)
 I FBDD=162.5                                          ; n/a for Inpatient. Variables FBIA and FBDODINV set and returned to
"RTN","FBAAPET1",165,0)
 ;                                                       calling application for use by template [FBCH EDIT PAYMENT]
"RTN","FBAAPET1",166,0)
IPEDITX ;
"RTN","FBAAPET1",167,0)
 I 'FBRET W !!,$C(7),"Required IPAC data is missing. Editing halted for this "_$S(FBDD=162.03:"line item",1:"invoice")_".",!
"RTN","FBAAPET1",168,0)
 Q FBRET
"RTN","FBAAPET1",169,0)
 ;
"RTN","FBAAPET1",170,0)
ASKQUES(Z) ; Ask user a Yes/No question related to IPAC processing
"RTN","FBAAPET1",171,0)
 ; Function value is 1 if the answer is Yes, 0 Otherwise
"RTN","FBAAPET1",172,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,RET
"RTN","FBAAPET1",173,0)
 S DIR(0)="Y"
"RTN","FBAAPET1",174,0)
 I Z="CHANGE" S DIR("A")="Do you want to modify the IPAC data",DIR("B")="No"
"RTN","FBAAPET1",175,0)
 I Z="DEL" S DIR("A",1)="IPAC data is not applicable for this vendor.",DIR("A")="Do you want to delete the IPAC data",DIR("B")="Yes"
"RTN","FBAAPET1",176,0)
 W ! D ^DIR K DIR
"RTN","FBAAPET1",177,0)
 I $D(DIRUT) W "    Not "_$S(Z="CHANGE":"modifying",1:"deleting")_" the IPAC data ... "
"RTN","FBAAPET1",178,0)
 I Y S RET=1
"RTN","FBAAPET1",179,0)
 E  S RET=0
"RTN","FBAAPET1",180,0)
 W !
"RTN","FBAAPET1",181,0)
 Q RET
"RTN","FBAAPET1",182,0)
 ;
"RTN","FBAAPET1",183,0)
GETIPAC(FBDA,FBVEN,FBIA,FBDODINV) ; Get vendor/IPAC data for Outpatient
"RTN","FBAAPET1",184,0)
 ; All parameters required and assumed to exist
"RTN","FBAAPET1",185,0)
 N GX3
"RTN","FBAAPET1",186,0)
 S FBVEN=FBDA(2)                                            ; vendor ien
"RTN","FBAAPET1",187,0)
 S GX3=$G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3))     ; 3 node of file 162.03
"RTN","FBAAPET1",188,0)
 S FBIA=+$P(GX3,U,6)                                        ; IPAC agreement ien
"RTN","FBAAPET1",189,0)
 S FBDODINV=$P(GX3,U,7)                                     ; DoD invoice#
"RTN","FBAAPET1",190,0)
 Q
"RTN","FBAAPET1",191,0)
 ;
"RTN","FBAAPET1",192,0)
DELIPAC(FBDA) ; Delete all IPAC data on file for Outpatient
"RTN","FBAAPET1",193,0)
 N FBIENS,FBIAFDA
"RTN","FBAAPET1",194,0)
 S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBAAPET1",195,0)
 S FBIAFDA(162.03,FBIENS,.05)=""       ; IPAC agreement ien
"RTN","FBAAPET1",196,0)
 S FBIAFDA(162.03,FBIENS,.055)=""      ; DoD invoice#
"RTN","FBAAPET1",197,0)
 D FILE^DIE("","FBIAFDA")              ; remove them
"RTN","FBAAPET1",198,0)
 Q
"RTN","FBAAPET1",199,0)
 ;
"RTN","FBAAPET1",200,0)
SAVEIPAC(FBDA,FBIA,FBDODINV,WHICH) ; Store IPAC data into the database for Outpatient
"RTN","FBAAPET1",201,0)
 N FBIENS,FBIAFDA
"RTN","FBAAPET1",202,0)
 S:'$D(WHICH) WHICH=""
"RTN","FBAAPET1",203,0)
 S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBAAPET1",204,0)
 S:WHICH'=2 FBIAFDA(162.03,FBIENS,.05)=FBIA          ; IPAC agreement ien
"RTN","FBAAPET1",205,0)
 S:WHICH'=1 FBIAFDA(162.03,FBIENS,.055)=FBDODINV     ; DoD invoice#
"RTN","FBAAPET1",206,0)
 D FILE^DIE("","FBIAFDA")                            ; File the data
"RTN","FBAAPET1",207,0)
 Q
"RTN","FBAAPET1",208,0)
 ;
"RTN","FBAAPET1",209,0)
 ;FBAAPET1
"RTN","FBAAPIE")
0^33^B25905815^B23308857
"RTN","FBAAPIE",1,0)
FBAAPIE ;AISC/GRR-ENTER FEE PHARMACY INVOICE ;7/8/2003
"RTN","FBAAPIE",2,0)
 ;;3.5;FEE BASIS;**61,124,123**;JAN 30, 1995;Build 51
"RTN","FBAAPIE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAPIE",4,0)
 D SITEP^FBAAUTL W:FBPOP !!,*7,"Fee site parameters must be initialized!!" Q:FBPOP  S FBMDF=$P(FBSITE(0),"^",10),FBAAPTC=$S($D(FBAAPTC):FBAAPTC,1:"V")
"RTN","FBAAPIE",5,0)
 N FBIA,FBDODINV
"RTN","FBAAPIE",6,0)
RD1 W ! S DIR("A")="Are you sure you want to enter a new invoice",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G Q^FBAAPIE1:$D(DIRUT),RDM^FBAAPIE1:'Y
"RTN","FBAAPIE",7,0)
ENTER S (LCNT,TAC,FBINTOT)=0,STAT(0)="",FBAAOUT=1 K FBTOUT
"RTN","FBAAPIE",8,0)
 D GETNXI^FBAAUTL S X=FBAAIN
"RTN","FBAAPIE",9,0)
 S DLAYGO=162.1,DIC="^FBAA(162.1,",DIC(0)="LQ" D ^DIC K DLAYGO G:Y<0 PROB^FBAAPIE1 W !!,"Invoice # assigned is: ",X S IN=X,DA(1)=IN
"RTN","FBAAPIE",10,0)
RDV I '$D(FB583) W !! S DLAYGO=161.2,(DIE,DIC)="^FBAAV(",DIC(0)="AEQLM" D ^DIC K DLAYGO G CHK:Y<0 S DA=+Y D NEW^FBAAVD:$P(Y,"^",3)=1
"RTN","FBAAPIE",11,0)
 I $D(FB583) S DA=FBVEN
"RTN","FBAAPIE",12,0)
 I $D(^FBAAV(DA,0)),$P($G(^("ADEL")),"^")="Y" W !!,"Vendor is flagged for Austin deletion!" G RDV:'$D(FB583),Q^FBAAPIE1
"RTN","FBAAPIE",13,0)
 D EN1^FBAAVD:$P(FBSITE(0),"^",12)="Y" S VIN=DA
"RTN","FBAAPIE",14,0)
RDV1 I $D(^XUSEC("FBAA ESTABLISH VENDOR",DUZ)) W ! S DIR("A")="Want to edit Vendor data",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR G CHK:$D(DIRUT) D:Y EDITV^FBAAVD S VIN=DA
"RTN","FBAAPIE",15,0)
 S FBAR(DA)="" D ^FBAACO4
"RTN","FBAAPIE",16,0)
 ;
"RTN","FBAAPIE",17,0)
 ; FB*3.5*123 - check for IPAC agreement for Federal Vendor
"RTN","FBAAPIE",18,0)
 S FBIA=$$IPAC^FBAAMP($G(VIN)) I FBIA=-1 G CHK
"RTN","FBAAPIE",19,0)
 ;
"RTN","FBAAPIE",20,0)
 W !! S %DT="AEQXP",%DT(0)=-DT,%DT("A")="Date Correct Invoice Received: " D ^%DT K %DT(0),%DT("A") G CHK:Y<0 S INVDATE=Y
"RTN","FBAAPIE",21,0)
 W !! S %DT="AEQXP",%DT(0)=-INVDATE,%DT("A")="Vendor Invoice Date:  " D ^%DT K %DT(0),%DT("A") G CHK:Y<0 S FBVINVDT=Y
"RTN","FBAAPIE",22,0)
 ; if U/C then get FPPS Claim ID else ask user
"RTN","FBAAPIE",23,0)
 I $D(FB583) S FBFPPSC=$P($G(^FB583(FB583,5)),U) W !,"FPPS CLAIM ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBAAPIE",24,0)
 E  S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 K FBFPPSC G CHK
"RTN","FBAAPIE",25,0)
 S (DIE,DIC)="^FBAA(162.1,",DA=IN
"RTN","FBAAPIE",26,0)
 S DR="1////^S X=INVDATE;1.5////^S X=DT;2////^S X=DUZ;3////^S X=VIN;5////^S X=1;12////^S X=FBVINVDT;13///^S X=FBFPPSC"
"RTN","FBAAPIE",27,0)
 I $G(FBIA) S DR=DR_";14////^S X=FBIA"    ; FB*3.5*123 file IPAC agreement ptr if it exists
"RTN","FBAAPIE",28,0)
 D ^DIE
"RTN","FBAAPIE",29,0)
 I '$D(^FBAA(162.1,IN,"RX",0)) S ^FBAA(162.1,IN,"RX",0)="^162.11A^^"
"RTN","FBAAPIE",30,0)
RDP S FBPHARM=1 W:FBINTOT>0 !,?15,"Pharmacy Invoice #: "_IN_"  Totals: $ "_$J(FBINTOT,1,2)
"RTN","FBAAPIE",31,0)
 ; if EDI then ask FPPS Line Item
"RTN","FBAAPIE",32,0)
 I FBFPPSC]"" W !!! S FBFPPSL=$$FPPSL^FBUTL5() I FBFPPSL=-1 K FBFPPSL G CHK
"RTN","FBAAPIE",33,0)
 D ^FBAASAP K FBPHARM I 'DFN K DFN G CHK
"RTN","FBAAPIE",34,0)
 I FBTT=1 S FBMST="Y",FBTTYPE="A",FBFDC="",FBD1=FTP D ENT^FBAAAUT
"RTN","FBAAPIE",35,0)
 D HOME^%ZIS,FBPH^FBAAUTL2 I $D(DIRUT),$D(FB583) G CHK
"RTN","FBAAPIE",36,0)
RDD W !! S %DT(0)=-DT,%DT="AEXP",%DT("A")="DATE PRESCRIPTION FILLED: " D ^%DT K %DT G:X["^"!(X="") RDP G RDD:Y<0 S DATEF=Y
"RTN","FBAAPIE",37,0)
 I DATEF<FBAABDT!(DATEF>FBAAEDT) W !!,*7,"Date Prescription Filled is ",$S(DATEF<FBAABDT:" prior to ",1:"later than "),"authorization period!!" G RDD
"RTN","FBAAPIE",38,0)
 I INVDATE]"",DATEF>INVDATE D  G RDD
"RTN","FBAAPIE",39,0)
 .N SHOINVDT S SHOINVDT=$E(INVDATE,4,5)_"/"_$E(INVDATE,6,7)_"/"_$E(INVDATE,2,3)
"RTN","FBAAPIE",40,0)
 .W !!,*7,?5,"*** Date Prescription Filled cannot be later than",!?8," Invoice Received Date (",SHOINVDT,") !!!"
"RTN","FBAAPIE",41,0)
 ;
"RTN","FBAAPIE",42,0)
 ; FB*3.5*123 - for IPAC capture the DoD Invoice number
"RTN","FBAAPIE",43,0)
 I $G(FBIA),'$$IPACINV^FBAAMP(.FBDODINV) G RDD
"RTN","FBAAPIE",44,0)
 I '$G(FBIA) S FBDODINV=""
"RTN","FBAAPIE",45,0)
 ;
"RTN","FBAAPIE",46,0)
 I '$D(^FBAA(162.1,IN,"RX",0)) S ^FBAA(162.1,IN,"RX",0)="^162.11A^^"
"RTN","FBAAPIE",47,0)
RDRX S DIR(0)="162.11,.01",DIR("A")="Select PRESCRIPTION NUMBER" D ^DIR K DIR G CHK:Y="^"!(Y="") S PSRX=Y,AC=0
"RTN","FBAAPIE",48,0)
 I $D(^FBAA(162.1,IN,"RX","B",PSRX)) G RX2^FBAAPIE1
"RTN","FBAAPIE",49,0)
 D CHK2^FBAAPIE1 I FBJ]"" K FBJ G CHKK^FBAAPIE1
"RTN","FBAAPIE",50,0)
RXADD K DA S DLAYGO=162.1,DA(1)=IN,DIC="^FBAA(162.1,"_IN_",""RX"",",DIC(0)="EQL",X=""""_PSRX_"""" D ^DIC K DLAYGO G:Y<0 RDRX S FBDA=+Y
"RTN","FBAAPIE",51,0)
 S DIE="^FBAA(162.1,",DA=IN,DR="[FB ADD RX]" D ^DIE I $D(DTOUT)!('$G(FBUP)) G DELRX
"RTN","FBAAPIE",52,0)
 S LCNT=LCNT+1,TAC=TAC+AC K FBUP
"RTN","FBAAPIE",53,0)
RDDER W !!,*7,"Prescription referred to Pharmacy Service for determination.",! S X="Y"
"RTN","FBAAPIE",54,0)
 S STAT(1)="" G RDP:'$D(FB583),Q^FBAAPIE1
"RTN","FBAAPIE",55,0)
 S $P(^FBAA(162.1,IN,"RX",DA,2),"^")="P",^FBAA(162.1,"AH","P",IN,DA)="",$P(^FBAA(162.1,IN,0),"^",10)="P"
"RTN","FBAAPIE",56,0)
 S DA(1)=IN,DIE=DIC
"RTN","FBAAPIE",57,0)
HERE S:$D(FBAP) FBINTOT=FBINTOT+FBAP S:$D(DTOUT) FBTOUT="" G OVR:$D(DTOUT),RDD
"RTN","FBAAPIE",58,0)
CHK I LCNT'>0 W !!,"Since you didn't enter any line items",!,"Invoice # ",IN," has been Deleted!!",*7 D KILL G Q^FBAAPIE1:$D(FBTOUT),MORE:'$D(FB583),Q^FBAAPIE1
"RTN","FBAAPIE",59,0)
OVR K DTOUT,DR,DQ,DG
"RTN","FBAAPIE",60,0)
 K STAT(2)
"RTN","FBAAPIE",61,0)
 S (DIE,DIC)="^FBAA(162.1,",DA=IN,STAT=$O(STAT(0)),DR="5////^S X=STAT;6///^S X=TAC;7///^S X=FBINTOT;8///^S X=LCNT" D ^DIE G:$D(FBTOUT) Q^FBAAPIE1 W !!,"Invoice No.: ",IN," Completed!" W:FBINTOT>0 ?45,"Invoice Total: $ ",$J(FBINTOT,1,2)
"RTN","FBAAPIE",62,0)
MORE K STAT,FBHX W ! S DIR("A")="Want to enter another Invoice",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR G Q^FBAAPIE1:$D(DIRUT)!('Y),ENTER
"RTN","FBAAPIE",63,0)
 Q
"RTN","FBAAPIE",64,0)
KILL S DIK="^FBAA(162.1,",DA=IN D ^DIK K DIK Q
"RTN","FBAAPIE",65,0)
DELRX S DIK="^FBAA(162.1,"_DA(1)_",""RX"",",DA=FBDA D ^DIK K DTOUT,DQ,DR,DG S FBTOUT="" W !,"Incomplete prescription entry.  Deleted.",! G CHK
"RTN","FBAAPIN")
0^23^B39786989^B36889806
"RTN","FBAAPIN",1,0)
FBAAPIN ;AISC/GRR - INVOICE DISPLAY ;7/17/2003
"RTN","FBAAPIN",2,0)
 ;;3.5;FEE BASIS;**4,61,122,133,108,135,123**;JAN 30, 1995;Build 51
"RTN","FBAAPIN",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAPIN",4,0)
 D DT^DICRW
"RTN","FBAAPIN",5,0)
RD1 W ! S (FBHDONE,FBAAOUT,FBINTOT)=0,FBSW=0 K FBHED S DIR(0)="NO",DIR("A")="Select Invoice Number",DIR("?")="^D HELP^FBAAPIN1" D ^DIR K DIR G Q:$D(DIRUT)!'Y
"RTN","FBAAPIN",6,0)
 I '$D(^FBAAC("C",X)) W !,*7,"Invalid selection.",! G RD1
"RTN","FBAAPIN",7,0)
 S HX=X,FBAAIN=X D LIST S X=HX G RD1
"RTN","FBAAPIN",8,0)
LIST S Q="",$P(Q,"=",80)="="
"RTN","FBAAPIN",9,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBAAPIN",10,0)
 F J=0:0 S J=$O(^FBAAC("C",FBAAIN,J)) Q:J'>0!(FBAAOUT)  D MMORE
"RTN","FBAAPIN",11,0)
 Q
"RTN","FBAAPIN",12,0)
SET S FBFILE="^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",1,",D=$P($G(^FBAAC(J,1,K,1,L,0)),"^",1),FBYY=$G(^FBAAC(J,1,K,1,L,1,M,0)),FBYY("REJ")=$S($D(^FBAAC(J,1,K,1,L,1,M,"FBREJ")):^("FBREJ"),1:""),FBY=$G(^FBAAC(J,1,K,1,L,1,M,2))
"RTN","FBAAPIN",13,0)
 S FBY3=$G(^FBAAC(J,1,K,1,L,1,M,3))
"RTN","FBAAPIN",14,0)
 S FBAARCE=$$GET1^DIQ(162.03,M_","_L_","_K_","_J_",",48)
"RTN","FBAAPIN",15,0)
 D SET2
"RTN","FBAAPIN",16,0)
 Q
"RTN","FBAAPIN",17,0)
SET2 ;
"RTN","FBAAPIN",18,0)
 N FBX,FBIA,FBDODINV
"RTN","FBAAPIN",19,0)
 S N=$S($D(^DPT(J,0)):$P(^(0),"^",1),1:""),S=$S(N]"":$P(^DPT(J,0),"^",9),1:""),V=$S($D(^FBAAV(K,0)):$P(^FBAAV(K,0),"^",1),1:"")
"RTN","FBAAPIN",20,0)
 S T=$P(FBYY,"^",5),D2=$P(FBYY,"^",6),ZS=$P(FBYY,"^",20),VP=$P(FBYY,"^",21)
"RTN","FBAAPIN",21,0)
 S T=$P($G(^FBAA(161.27,+T,0)),U)
"RTN","FBAAPIN",22,0)
 S TAMT=$FN($P(FBYY,U,4),"",2)
"RTN","FBAAPIN",23,0)
 S FBAACPT=$P(FBYY,"^",1) I FBAACPT]"" S FBAACPT=$$CPT^FBAAUTL4(FBAACPT)
"RTN","FBAAPIN",24,0)
 S FBMODLE=$$MODL^FBAAUTL4("^FBAAC("_J_",1,"_K_",1,"_L_",1,"_M_",""M"")","E")
"RTN","FBAAPIN",25,0)
 S FBUNITS=$P(FBY,U,14)
"RTN","FBAAPIN",26,0)
 S FBFPPSL=$P(FBY3,U,2)
"RTN","FBAAPIN",27,0)
 S FBX=$$ADJLRA^FBAAFA(M_","_L_","_K_","_J_",")
"RTN","FBAAPIN",28,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBAAPIN",29,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBAAPIN",30,0)
 S FBRRMKL=$$RRL^FBAAFR(M_","_L_","_K_","_J_",")
"RTN","FBAAPIN",31,0)
 S FBCNTRN=$S($P(FBY3,U,8):$P($G(^FBAA(161.43,$P(FBY3,U,8),0)),U),1:"")
"RTN","FBAAPIN",32,0)
 S FBIA=+$P($G(^FBAAC(J,1,K,1,L,1,M,3)),U,6)              ; IPAC agreement pointer (*123)
"RTN","FBAAPIN",33,0)
 S FBIA=$S(FBIA:$P($G(^FBAA(161.95,FBIA,0)),U,1),1:"")    ; IPAC vendor agreement ID (*123)
"RTN","FBAAPIN",34,0)
 S FBDODINV=$P($G(^FBAAC(J,1,K,1,L,1,M,3)),U,7)           ; DoD invoice number (*123)
"RTN","FBAAPIN",35,0)
 S A1=$P(FBYY,"^",2)+.0001,A2=$P(FBYY,"^",3)+.0001,A3=$P(FBYY,"^",12)+.0001,A1=$P(A1,".",1)_"."_$E($P(A1,".",2),1,2),A2=$P(A2,".",1)_"."_$E($P(A2,".",2),1,2),A3=$P(A3,".",1)_"."_$E($P(A3,".",2),1,2),FBINTOT=FBINTOT+A2+.0001
"RTN","FBAAPIN",36,0)
 S FBINTOT=$P(FBINTOT,".")_"."_$E($P(FBINTOT,".",2),1,2)
"RTN","FBAAPIN",37,0)
 S FBBN=$S($P(FBYY,"^",8)]"":$S($D(^FBAA(161.7,$P(FBYY,"^",8),0)):$P(^(0),"^",1),1:""),$P(FBYY("REJ"),"^",3)]"":$S($D(^FBAA(161.7,$P(FBYY("REJ"),"^",3),0)):$P(^(0),"^",1),1:""),1:"")
"RTN","FBAAPIN",38,0)
 D FBCKO^FBAACCB2(J,K,L,M)
"RTN","FBAAPIN",39,0)
 I $D(^FBAAC(J,1,K,1,L,1,M,4))!($D(^FBAAC(J,1,K,1,L,1,M,5))) D PROV
"RTN","FBAAPIN",40,0)
 I '$D(FBHED) D HED
"RTN","FBAAPIN",41,0)
 D WRT S FBHED=1
"RTN","FBAAPIN",42,0)
 Q
"RTN","FBAAPIN",43,0)
WRT I ($Y+5)>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  D HED
"RTN","FBAAPIN",44,0)
 W !!,N,?33,$$DATX^FBAAUTL(D),?43,FBAACPT_$S($G(FBMODLE)]"":"-"_$P(FBMODLE,","),1:"")
"RTN","FBAAPIN",45,0)
 I FBAARCE]"" W ?51,"/",FBAARCE
"RTN","FBAAPIN",46,0)
 W ?57,FBBN,?67,$S(FBYY("REJ")]"":"Rejected",1:$$DATX^FBAAUTL(D2))
"RTN","FBAAPIN",47,0)
 I $P($G(FBMODLE),",",2)]"" D  Q:FBAAOUT
"RTN","FBAAPIN",48,0)
 . N FBI
"RTN","FBAAPIN",49,0)
 . F FBI=2:1 S FBMOD=$P(FBMODLE,",",FBI) Q:FBMOD=""  D  Q:FBAAOUT
"RTN","FBAAPIN",50,0)
 . . I $Y+5>IOSL D  Q:FBAAOUT  W !,"(continued)"
"RTN","FBAAPIN",51,0)
 . . . S DIR(0)="E" D ^DIR K DIR S:'Y FBAAOUT=1 Q:FBAAOUT  D HED
"RTN","FBAAPIN",52,0)
 . . W !,?48,"-",FBMOD
"RTN","FBAAPIN",53,0)
 W !,$S(ZS="R":"*",1:""),$S(VP="VP":"#",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBAAPIN",54,0)
 W ?3,FBFPPSL,?14,"$",$J(A1,8),?26,"$",$J(A2,8),?37,FBUNITS
"RTN","FBAAPIN",55,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBAAPIN",56,0)
 W ?43,$S(FBADJLR]"":FBADJLR,1:T)
"RTN","FBAAPIN",57,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBAAPIN",58,0)
 W ?53,"$",$S(FBADJLA]"":FBADJLA,1:TAMT)
"RTN","FBAAPIN",59,0)
 W ?69,FBRRMKL
"RTN","FBAAPIN",60,0)
 ; if adjustment reasons null and suspend code = other then write desc.
"RTN","FBAAPIN",61,0)
 I FBADJLR="",T=4 D ^FBAAPIN1
"RTN","FBAAPIN",62,0)
 I FBCNTRN]"" W !!,?2,"Contract Number: ",FBCNTRN
"RTN","FBAAPIN",63,0)
 I FBIA'=""!(FBDODINV'="") W !!?5,"IPAC Number: ",FBIA,?30,"DoD Invoice Number: ",FBDODINV
"RTN","FBAAPIN",64,0)
 D PMNT^FBAACCB2
"RTN","FBAAPIN",65,0)
 ; Display LI Rendering Provider data
"RTN","FBAAPIN",66,0)
 N FBLIPRV S FBLIPRV=$G(^FBAAC(J,1,K,1,L,1,M,3))  ; FB*3.5*135
"RTN","FBAAPIN",67,0)
 I $L($P(FBLIPRV,U,3)) D
"RTN","FBAAPIN",68,0)
 . W !?3,"RENDERING PROV NAME (LI): "_$P(FBLIPRV,U,3)
"RTN","FBAAPIN",69,0)
 . I $L($P(FBLIPRV,U,4,5))>1 W !?7,"NPI: "_$P(FBLIPRV,U,4),?29,"TAXONOMY CODE: "_$P(FBLIPRV,U,5)
"RTN","FBAAPIN",70,0)
 Q
"RTN","FBAAPIN",71,0)
HED W @IOF,!,"Invoice Number: ",FBAAIN,?30,"Vendor Name: ",V,!,?2,"Date Received: ",FBINDAT
"RTN","FBAAPIN",72,0)
 I +$G(FBY) W ?33,"Invoice Date: ",$$DATX^FBAAUTL(+FBY)
"RTN","FBAAPIN",73,0)
 W !?2,"FPPS Claim ID: ",$S(FBFPPSC]"":FBFPPSC,1:"N/A")
"RTN","FBAAPIN",74,0)
 W ?33,"Patient Account #: ",FBCSID
"RTN","FBAAPIN",75,0)
 W !?10,"('*' Reimb. to Patient  '+' Cancel. Activity  '#' Voided Payment)"
"RTN","FBAAPIN",76,0)
 ;W !,"SVC DATE"," CPT-MOD ","   AMT CLAIMED",?35,"AMT PAID",?47,"CODE",?57,"BATCH NO.",?67,"VOUCHER DATE",!,?5,"Other Suspension Description",!,$$REPEAT^XLFSTR("=",79),!
"RTN","FBAAPIN",77,0)
 W !,"PATIENT",?33,"SVC DATE",?43,"CPT-MOD",?51,"/REV",?57,"BATCH NO.",?67,"VOUCHER DATE"
"RTN","FBAAPIN",78,0)
 W !,?3,"FPPS LINE",?14,"AMT CLAIMED",?26,"AMT PAID",?36,"UNITS",?43,"ADJ CODE",?53,"ADJ AMT",?69,"REMIT RMK"
"RTN","FBAAPIN",79,0)
 W !,$$REPEAT^XLFSTR("=",79)
"RTN","FBAAPIN",80,0)
 Q
"RTN","FBAAPIN",81,0)
Q K D,N,V,D2,J,K,L,M,DIC,T,FBYY,Q,I,A1,A2,A3,C,DIYS,FBAACPT,FBAAIN,FBAAOUT,FBBN,FBINTOT,FBINDAT,FBSW,FBHDONE,HX,S,VP,Z,ZS,FBHED,FBFILE,DIRUT,FBY,FBMOD
"RTN","FBAAPIN",82,0)
 K FBMODLE
"RTN","FBAAPIN",83,0)
 K FBAARCE,FBADJLA,FBADJLR,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBUNITS,TAMT
"RTN","FBAAPIN",84,0)
 Q
"RTN","FBAAPIN",85,0)
ERR W !,*7,"Please enter a whole number! Alpha characters and puctuation are invalid" G RD1
"RTN","FBAAPIN",86,0)
SETHD S V=$S($D(^FBAAV(K,0)):$P(^(0),"^",1),1:"") D INDAT:FBSW S FBHDONE=1 Q
"RTN","FBAAPIN",87,0)
MMORE S FBSW=1 F K=0:0 S K=$O(^FBAAC("C",FBAAIN,J,K)) Q:K=""!(FBAAOUT)  D SETHD F L=0:0 S L=$O(^FBAAC("C",FBAAIN,J,K,L)) Q:L=""!(FBAAOUT)  F M=0:0 S M=$O(^FBAAC("C",FBAAIN,J,K,L,M)) Q:M'>0  D SET Q:FBAAOUT
"RTN","FBAAPIN",88,0)
 Q
"RTN","FBAAPIN",89,0)
INDAT S L=$O(^FBAAC("C",FBAAIN,J,K,"")),M=$O(^FBAAC("C",FBAAIN,J,K,L,""))
"RTN","FBAAPIN",90,0)
 S FBINDAT=$P($G(^FBAAC(J,1,K,1,L,1,M,0)),"^",15)
"RTN","FBAAPIN",91,0)
 S FBINDAT=$S(FBINDAT="":"Unknown",1:$E(FBINDAT,4,5)_"/"_$E(FBINDAT,6,7)_"/"_$E(FBINDAT,2,3))
"RTN","FBAAPIN",92,0)
 S FBFPPSC=$P($G(^FBAAC(J,1,K,1,L,1,M,3)),U,1)
"RTN","FBAAPIN",93,0)
 S FBCSID=$P($G(^FBAAC(J,1,K,1,L,1,M,2)),U,16)
"RTN","FBAAPIN",94,0)
 S FBSW=0 K L,M Q
"RTN","FBAAPIN",95,0)
 Q
"RTN","FBAAPIN",96,0)
PROV ;Display Invoice Provider information before invoice details FB*3.5*122
"RTN","FBAAPIN",97,0)
 N FBPRI,FBSRVF S FBPRI=$G(^FBAAC(J,1,K,1,L,1,M,4)),FBSRVF=$G(^FBAAC(J,1,K,1,L,1,M,5)),$P(FBSRVF,U,3)=$$GET1^DIQ(5,$P(FBSRVF,U,3)_",",1)
"RTN","FBAAPIN",98,0)
 W @IOF,!?30,"INVOICE DISPLAY",!?30,"===============",!?28,"PROVIDER INFORMATION",!
"RTN","FBAAPIN",99,0)
 I $L($P(FBPRI,U,1,3))>3 W !?3,"ATTENDING PROV NAME: "_$P(FBPRI,U),!?3,"ATTENDING PROV NPI: "_$P(FBPRI,U,2),?35,"ATTENDING PROV TAXONOMY CODE: "_$P(FBPRI,U,3)
"RTN","FBAAPIN",100,0)
 I $L($P(FBPRI,U,4,5))>2 W !!?3,"OPERATING PROV NAME: "_$P(FBPRI,U,4),!?3,"OPERATING PROV NPI: "_$P(FBPRI,U,5)
"RTN","FBAAPIN",101,0)
 I $L($P(FBPRI,U,6,8))>3 W !!?3,"RENDERING PROV NAME: "_$P(FBPRI,U,6),!?3,"RENDERING PROV NPI: "_$P(FBPRI,U,7),?35,"RENDERING PROV TAXONOMY CODE: "_$P(FBPRI,U,8)
"RTN","FBAAPIN",102,0)
 I $L($P(FBPRI,U,9,10))>2 W !!?3,"SERVICING PROV NAME: "_$P(FBPRI,U,9),!?3,"SERVICING PROV NPI: "_$P(FBPRI,U,10)
"RTN","FBAAPIN",103,0)
 I $L($P(FBSRVF,U,1,4))>4 W !?3,"SERVICING FACILITY ADDRESS: ",!?5,$P(FBSRVF,U),!?5,$P(FBSRVF,U,2) I $P(FBSRVF,U,2)'="" W ", "
"RTN","FBAAPIN",104,0)
 W $P(FBSRVF,U,3)_" "_$P(FBSRVF,U,4)
"RTN","FBAAPIN",105,0)
 I $L($P(FBPRI,U,11,12))>2 W !!?3,"REFERRING PROV NAME: "_$P(FBPRI,U,11),!?3,"REFERRING PROV NPI: "_$P(FBPRI,U,12),!!
"RTN","FBAAPIN",106,0)
 I '$D(FBHED) S DIR(0)="E" D ^DIR
"RTN","FBAAPIN",107,0)
 Q
"RTN","FBAAPP")
0^34^B25732813^B24856042
"RTN","FBAAPP",1,0)
FBAAPP ;AISC/GRR-ENTER FEE PHARMACY DETERMINATION ;5/10/2005
"RTN","FBAAPP",2,0)
 ;;3.5;FEE BASIS;**61,80,91,123**;JAN 30, 1995;Build 51
"RTN","FBAAPP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAPP",4,0)
 N FBADJ,FBRRMK
"RTN","FBAAPP",5,0)
 D HOME^%ZIS S FBAAOUT=0 K ^TMP($J,"FBWP") D DT^DICRW
"RTN","FBAAPP",6,0)
 I '$D(^FBAA(162.1,"AC",1)) W !!,"There are no Fee Basis prescriptions Pending Pharmacy review" G END
"RTN","FBAAPP",7,0)
 D WAIT^DICD S (CNT,L,M)=0 F  S L=$O(^FBAA(162.1,"AC",1,L)) Q:L'>0  I $D(^FBAA(162.1,L,"RX","AC",1)) F  S M=$O(^FBAA(162.1,L,"RX","AC",1,M)) Q:M'>0  S CNT=CNT+1
"RTN","FBAAPP",8,0)
 W !!,*7,"There are ",CNT," Fee Prescription(s) Pending Pharmacy review"
"RTN","FBAAPP",9,0)
ASKRV Q:CNT'>0  W ! S DIR("A")="Want to review some now",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR G END:$D(DIRUT)!('Y)
"RTN","FBAAPP",10,0)
RDIN W ! S FBAAOUT=0,DIC="^FBAA(162.1,",DIC(0)="AEQ",DIC("S")="S ZZ=^(0) I $P(ZZ,U,5)=1&($D(^FBAA(162.1,+ZZ,""RX"",""AC"",1))) K ZZ" D ^DIC K DIC G END:X=""!(X="^"),HELPI^FBAAPP0:X["?" S FBJ=+Y
"RTN","FBAAPP",11,0)
 L +^FBAA(162.1,"AC",1,FBJ):1 G:'$T ALRDY^FBAAPP0 I $D(^FBAA(162.1,FBJ,"RX","AC",1)) S FBK=0 F  S FBK=$O(^FBAA(162.1,FBJ,"RX","AC",1,FBK)) Q:FBK'>0!(FBAAOUT)  I $D(^FBAA(162.1,FBJ,"RX",FBK,0)) S FBY(0)=^(0) D GOT,CHK:$D(^FBAA(162.1,"AC",1))
"RTN","FBAAPP",12,0)
 L -^FBAA(162.1,"AC",1,FBJ) I '$D(^FBAA(162.1,"AC",1)) W !,*7,"No more prescriptions pending review!" G END
"RTN","FBAAPP",13,0)
 G RDIN
"RTN","FBAAPP",14,0)
END K DFN,FBJ,FBK,Y,X,FBAAOUT,L,CNT,STAT,DA,DAT,DIC,FBAAGP,FBAAPR,FBDX,FDT,SSN,HY,I,T,VIFN,Z,ZZ,VAL,FBAASC,M,W,FBY,FBASSOC,FB583,FB7078,FBPROG,FBTYPE,FBDMRA,FBAUT,^TMP($J,"FBWP")
"RTN","FBAAPP",15,0)
 K FBNO1,FBNO2,FBDA,FBDRUG,PI,DIRUT,DTOUT,DUOUT
"RTN","FBAAPP",16,0)
 Q
"RTN","FBAAPP",17,0)
GOT S STAT=2,DFN=$P(FBY(0),"^",5) Q:'$D(^DPT(+DFN,0))
"RTN","FBAAPP",18,0)
 S FBPROG=$P($G(^FBAA(162.1,FBJ,"RX",FBK,2)),"^",7),FBPROG=$S(FBPROG:"I FBI="_FBPROG,1:"")
"RTN","FBAAPP",19,0)
 S HY=Y,PI="" D ^FBAADEM
"RTN","FBAAPP",20,0)
 D FBPH^FBAAUTL2 W ! F X=1:1:IOM-1 W "-"
"RTN","FBAAPP",21,0)
 I $Y+5>IOSL,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF
"RTN","FBAAPP",22,0)
 S Y=HY,VIFN=$P(^FBAA(162.1,FBJ,0),"^",4)
"RTN","FBAAPP",23,0)
 W !!,"Vendor: ",$P($G(^FBAAV(+VIFN,0)),"^"),!
"RTN","FBAAPP",24,0)
 I $P(FBY(0),"^",20)="R" W *7,!?20,">> PATIENT REIMBURSEMENT <<",!
"RTN","FBAAPP",25,0)
 S FDT=$P(FBY(0),"^",3) W !,"Prescription #: ",$P(FBY(0),"^"),"    Drug: ",$P(FBY(0),"^",2),!!,"Fill Date: ",$E(FDT,4,5),"/",$E(FDT,6,7),"/",$E(FDT,2,3),"    Strength: ",$P(FBY(0),"^",12)
"RTN","FBAAPP",26,0)
 W "  Qty: ",$P(FBY(0),"^",13)
"RTN","FBAAPP",27,0)
DIR ; DISPLAY FOR PHARMACY EDIT
"RTN","FBAAPP",28,0)
 S (FBAAGP,FBAAPR,FBDA,FBDRUG,FBNO1,FBNO2)="" K FBADJ,FBRRMK
"RTN","FBAAPP",29,0)
 I '$D(IOM) D HOME^%ZIS
"RTN","FBAAPP",30,0)
DIR1 S DIR("A")="Is Prescription for an Authorized Condition"
"RTN","FBAAPP",31,0)
 S DIR("B")=$S(FBNO1'="":FBNO1,1:"Yes")
"RTN","FBAAPP",32,0)
 S DIR(0)="Y",DIR("?")="A 'No' answer will deny payment."
"RTN","FBAAPP",33,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBAAPP",34,0)
 I Y S FBNO1="Yes"
"RTN","FBAAPP",35,0)
 I 'Y S FBNO1="No" D   D NO1^FBAAPP0 Q:'$D(FBADJ)  G REVIEW
"RTN","FBAAPP",36,0)
 . S (FBAAGP,FBDA,FBDRUG,FBNO2)=""
"RTN","FBAAPP",37,0)
 ;
"RTN","FBAAPP",38,0)
 S DIR("A")="Was a Generic Drug issued to patient"
"RTN","FBAAPP",39,0)
 S DIR("B")=$S(FBAAGP'="":FBAAGP,1:"Yes")
"RTN","FBAAPP",40,0)
 S DIR(0)="Y"
"RTN","FBAAPP",41,0)
 S DIR("?")="A 'No' answer alerts FEE to pay the generic equivalent, if one exists."
"RTN","FBAAPP",42,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBAAPP",43,0)
 S FBAAGP=$S(Y:"Yes",1:"No")
"RTN","FBAAPP",44,0)
 ;
"RTN","FBAAPP",45,0)
 S DIR("A")="Enter VA Generic Drug equivalent"
"RTN","FBAAPP",46,0)
 I FBDRUG'="" S DIR("B")=FBDRUG
"RTN","FBAAPP",47,0)
 S DIR("?")="Match the drug entered by FEE to an entry in the VA Drug file."
"RTN","FBAAPP",48,0)
 S DIR(0)="Pr^50:EM"
"RTN","FBAAPP",49,0)
 D ^DIR K DIR Q:$D(DIRUT)!('Y)
"RTN","FBAAPP",50,0)
 S FBDA=+Y,FBDRUG=$P(Y,"^",2)
"RTN","FBAAPP",51,0)
 ;
"RTN","FBAAPP",52,0)
 ; FB*3.5*123 - Edit pharmacy IPAC data for Federal Vendors
"RTN","FBAAPP",53,0)
 ;              Added line to skip the asking of emergency medication
"RTN","FBAAPP",54,0)
 ;              if the vendor requires an IPAC Agreement
"RTN","FBAAPP",55,0)
 I $$IPACREQD^FBAAMP(VIFN) S FBNO2="N/A (IPAC Payment)" G REVIEW
"RTN","FBAAPP",56,0)
 ;
"RTN","FBAAPP",57,0)
 S DIR("A")="Is this an emergency medication"
"RTN","FBAAPP",58,0)
 S DIR("B")=$S(FBNO2'="":FBNO2,1:"Yes")
"RTN","FBAAPP",59,0)
 S DIR("?")="A 'No' answer will DENY payment."
"RTN","FBAAPP",60,0)
 S DIR(0)="Y"
"RTN","FBAAPP",61,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","FBAAPP",62,0)
 I Y S FBNO2="Yes" K FBADJ,FBRRMK
"RTN","FBAAPP",63,0)
 I 'Y S FBNO2="No" D NO1^FBAAPP0 Q:'$D(FBADJ)
"RTN","FBAAPP",64,0)
 ;
"RTN","FBAAPP",65,0)
REVIEW W !
"RTN","FBAAPP",66,0)
 S DIR("A")="Optional Pharmacy Remarks "
"RTN","FBAAPP",67,0)
 S:FBAAPR]"" DIR("B")=FBAAPR
"RTN","FBAAPP",68,0)
 S DIR(0)="162.11,22"
"RTN","FBAAPP",69,0)
 K DA
"RTN","FBAAPP",70,0)
 D ^DIR K DIR Q:$D(DUOUT)!($D(DTOUT))
"RTN","FBAAPP",71,0)
 S FBAAPR=Y
"RTN","FBAAPP",72,0)
 ;
"RTN","FBAAPP",73,0)
 W ! F I=1:1:IOM-2 W "-"
"RTN","FBAAPP",74,0)
 W !!?22,">>>  PRESCRIPTION REVIEW  <<<",!
"RTN","FBAAPP",75,0)
 W !,"Rx for Authorized condition: ",FBNO1
"RTN","FBAAPP",76,0)
 W ?36,"Emergency Medication: ",FBNO2
"RTN","FBAAPP",77,0)
 W !,"Generic Drug Issued: ",FBAAGP
"RTN","FBAAPP",78,0)
 W ?36,"Generic Drug Name: ",$E(FBDRUG,1,25)
"RTN","FBAAPP",79,0)
 I $D(FBADJ) D
"RTN","FBAAPP",80,0)
 . N FBI
"RTN","FBAAPP",81,0)
 . W !!,"Current list of Adjustments: "
"RTN","FBAAPP",82,0)
 . I '$O(FBADJ(0)) W "none"
"RTN","FBAAPP",83,0)
 . S FBI=0 F  S FBI=$O(FBADJ(FBI)) Q:'FBI  D
"RTN","FBAAPP",84,0)
 . . W ?30,"Code: "
"RTN","FBAAPP",85,0)
 . . W:$P(FBADJ(FBI),U)]"" $P($G(^FB(161.91,$P(FBADJ(FBI),U),0)),U)
"RTN","FBAAPP",86,0)
 . . W ?44,"Group: "
"RTN","FBAAPP",87,0)
 . . W:$P(FBADJ(FBI),U,2)]"" $P($G(^FB(161.92,$P(FBADJ(FBI),U,2),0)),U)
"RTN","FBAAPP",88,0)
 . . W ?56,"Amount: "
"RTN","FBAAPP",89,0)
 . . W "$",$FN($P(FBADJ(FBI),U,3),"",2),!
"RTN","FBAAPP",90,0)
 . W !!,"Current list of Remittance Remarks: "
"RTN","FBAAPP",91,0)
 . I '$O(FBRRMK(0)) W "none"
"RTN","FBAAPP",92,0)
 . S FBI=0 F  S FBI=$O(FBRRMK(FBI)) Q:'FBI  D
"RTN","FBAAPP",93,0)
 . . W:$P(FBRRMK(FBI),U)]"" $P($G(^FB(161.93,$P(FBRRMK(FBI),U),0)),U),", "
"RTN","FBAAPP",94,0)
 W !!,"Optional Pharmacy Remarks: ",FBAAPR
"RTN","FBAAPP",95,0)
 ;
"RTN","FBAAPP",96,0)
 W !
"RTN","FBAAPP",97,0)
 S DIR("A")="Want to edit prior to release"
"RTN","FBAAPP",98,0)
 S DIR(0)="Y",DIR("B")="No"
"RTN","FBAAPP",99,0)
 D ^DIR K DIR Q:$D(DIRUT)  G DIR1:Y
"RTN","FBAAPP",100,0)
 ;
"RTN","FBAAPP",101,0)
 I $D(FBADJ) G GOON^FBAAPP0
"RTN","FBAAPP",102,0)
 S $P(FBY(0),"^",10)=FBDA
"RTN","FBAAPP",103,0)
 S $P(FBY(0),"^",11)=1
"RTN","FBAAPP",104,0)
 S $P(FBY(0),"^",14)=DUZ
"RTN","FBAAPP",105,0)
 S $P(FBY(0),"^",15)=DT
"RTN","FBAAPP",106,0)
 S $P(FBY(0),"^",9)=2
"RTN","FBAAPP",107,0)
 G RSET^FBAAPP0
"RTN","FBAAPP",108,0)
 ;
"RTN","FBAAPP",109,0)
CHK S FBAAOUT=0 W ! S DIR("A")="Want to review another Prescription",DIR("B")="Yes",DIR(0)="Y" D ^DIR K DIR S:'Y FBAAOUT=1 K ^TMP($J,"FBWP"),FBDRUG
"RTN","FBAAPP",110,0)
 Q
"RTN","FBAARMRA")
0^10^B11284064^B4173513
"RTN","FBAARMRA",1,0)
FBAARMRA ;AISC/DMK-RETRANSMIT MRA's FOR A DATE ;25OCT89
"RTN","FBAARMRA",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAARMRA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAARMRA",4,0)
 ;
"RTN","FBAARMRA",5,0)
ASK W !! S %DT("A")="Re-transmit MRA's for which date: ",%DT="AEXP",%DT(0)=-DT D ^%DT K %DT(0),%DT("A") G END:X="^"!(X=""),ASK:Y<0 S FBAATD=Y
"RTN","FBAARMRA",6,0)
 I '$D(^FBAA(161.25,"AD",FBAATD)),'$D(^FBAA(161.26,"AD",FBAATD)),'$D(^FBAA(161.96,"AD",FBAATD)) W !!,*7,"No MRA's were transmitted on that date!" G ASK
"RTN","FBAARMRA",7,0)
 ;
"RTN","FBAARMRA",8,0)
 D VEND:$D(^FBAA(161.25,"AD",FBAATD)),VET:$D(^FBAA(161.26,"AD",FBAATD))
"RTN","FBAARMRA",9,0)
 ;
"RTN","FBAARMRA",10,0)
 D:$D(^FBAA(161.96,"AD",FBAATD)) IA(FBAATD) ; prepare IPAC MRAs for retransmission (FB*3.5*123)
"RTN","FBAARMRA",11,0)
 ;
"RTN","FBAARMRA",12,0)
 D RTRAN^FBAAV0
"RTN","FBAARMRA",13,0)
END K D0,FBAATD,OCTD,J,K,XCNP,VAT Q
"RTN","FBAARMRA",14,0)
 ;
"RTN","FBAARMRA",15,0)
VEND F J="O","P" F K=0:0 S K=$O(^FBAA(161.25,"AD",FBAATD,J,K)) Q:K'>0  I $D(^FBAA(161.25,K)) S $P(^(K,0),"^",5)="",^FBAA(161.25,"AE",J,K)="" K ^FBAA(161.25,"AD",FBAATD,J,K)
"RTN","FBAARMRA",16,0)
 Q
"RTN","FBAARMRA",17,0)
VET W !!,?20,"Re-Transmitting",! F K=0:0 S K=$O(^FBAA(161.26,"AD",FBAATD,K)) Q:K'>0  I $D(^FBAA(161.26,K)) S $P(^(K,0),"^",5)="",$P(^(0),"^",2)="P",^FBAA(161.26,"AC","P",K)="" K ^FBAA(161.26,"AD",FBAATD,K),^FBAA(161.26,"AC","T",K)
"RTN","FBAARMRA",18,0)
 Q
"RTN","FBAARMRA",19,0)
 ;
"RTN","FBAARMRA",20,0)
IA(XMITDT)    ; Prepare IPAC Agreement MRAs for re-transmission
"RTN","FBAARMRA",21,0)
 ; Input:       XMITDT  - Internal date to re-transmit IPAC Agreement MRAs for
"RTN","FBAARMRA",22,0)
 ; Output:      IPAC Agreement MRAs for the selected date are prepared for re-transmission
"RTN","FBAARMRA",23,0)
 ; Called From: ASK
"RTN","FBAARMRA",24,0)
 N DIE,DA,DR,DTOUT,MRAACT,MRAIEN,K,TACT,VAID,VAIEN
"RTN","FBAARMRA",25,0)
 ;
"RTN","FBAARMRA",26,0)
 ; Loop through every transmitted Patient MRA record for the specified date and
"RTN","FBAARMRA",27,0)
 ; remove the transmitted date
"RTN","FBAARMRA",28,0)
 S K=0
"RTN","FBAARMRA",29,0)
 F  D  Q:K'>0
"RTN","FBAARMRA",30,0)
 . S K=$O(^FBAA(161.96,"AD",XMITDT,K))
"RTN","FBAARMRA",31,0)
 . Q:'K
"RTN","FBAARMRA",32,0)
 . ;
"RTN","FBAARMRA",33,0)
 . ; IPAC vendor agreement IEN in file 161.95 for this transmitted MRA
"RTN","FBAARMRA",34,0)
 . S VAIEN=$P($G(^FBAA(161.96,K,0)),U,2),MRAIEN=""
"RTN","FBAARMRA",35,0)
 . S VAID=$P($G(^FBAA(161.96,K,0)),U,3)
"RTN","FBAARMRA",36,0)
 . ;
"RTN","FBAARMRA",37,0)
 . ; This must be an Add or a change MRA record for an Agreement that was
"RTN","FBAARMRA",38,0)
 . ; later deleted - Skip it
"RTN","FBAARMRA",39,0)
 . I VAIEN'="",'$D(^FBAA(161.95,VAIEN)) Q
"RTN","FBAARMRA",40,0)
 . I VAIEN S MRAIEN=$$PENDMRA^FBAAIAQ(VAID,.MRAACT)
"RTN","FBAARMRA",41,0)
 . ;
"RTN","FBAARMRA",42,0)
 . ; if there is an existing Pending MRA, then we'll use it and get out
"RTN","FBAARMRA",43,0)
 . I MRAIEN>0 D  Q
"RTN","FBAARMRA",44,0)
 . . S TACT=$P($G(^FBAA(161.96,K,0)),U,4)       ; Action value of transmitted MRA
"RTN","FBAARMRA",45,0)
 . . I TACT="A",MRAACT="C" D                    ; Change pending action to add action
"RTN","FBAARMRA",46,0)
 . . . S DIE=161.96,DA=MRAIEN,DR="3////A"
"RTN","FBAARMRA",47,0)
 . . . D ^DIE
"RTN","FBAARMRA",48,0)
 . ;
"RTN","FBAARMRA",49,0)
 . ; Otherwise, change the status of this MRA back to Pending and remove the Date Transmitted field
"RTN","FBAARMRA",50,0)
 . I $D(^FBAA(161.96,K)) D
"RTN","FBAARMRA",51,0)
 . . S DIE=161.96,DA=K
"RTN","FBAARMRA",52,0)
 . . S DR="4////P"                              ; Set the status back to Pending
"RTN","FBAARMRA",53,0)
 . . S DR=DR_";5////@"                          ; Remove the transmitted date from the record
"RTN","FBAARMRA",54,0)
 . . D ^DIE
"RTN","FBAARMRA",55,0)
 Q
"RTN","FBAARMRA",56,0)
 ;
"RTN","FBAAV0")
0^7^B56393278^B46795465
"RTN","FBAAV0",1,0)
FBAAV0 ;AISC/GRR - ELECTRONICALLY TRANSMIT FEE DATA ;3/22/2012
"RTN","FBAAV0",2,0)
 ;;3.5;FEE BASIS;**3,4,55,89,98,116,108,132,139,123**;JAN 30, 1995;Build 51
"RTN","FBAAV0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAV0",4,0)
 ;
"RTN","FBAAV0",5,0)
 ; References to API $$CODEABA^ICDEX supported by ICR #5747
"RTN","FBAAV0",6,0)
 ;
"RTN","FBAAV0",7,0)
 K ^TMP($J,"FBAABATCH"),^TMP($J,"FBVADAT") D DT^DICRW
"RTN","FBAAV0",8,0)
 ;
"RTN","FBAAV0",9,0)
 N FBTRT S FBTRT=0   ; Flag indicating if any transactions are found that need to be transmitted
"RTN","FBAAV0",10,0)
 I $D(^FBAA(161.7,"AC","S")) S FBTRT=1       ; supervisor closed batch
"RTN","FBAAV0",11,0)
 I $D(^FBAA(161.7,"AC","R")) S FBTRT=1       ; reviewed after pricer batch
"RTN","FBAAV0",12,0)
 I $D(^FBAA(161.25,"AE")) S FBTRT=1          ; vendor correction
"RTN","FBAAV0",13,0)
 I +$O(^FBAA(161.26,"AC","P",0)) S FBTRT=1   ; FB patient master record changes
"RTN","FBAAV0",14,0)
 I +$O(^FBAA(161.96,"AS","P",0)) S FBTRT=1   ; ipac vendor agreement MRA changes (FB*3.5*123)
"RTN","FBAAV0",15,0)
 I 'FBTRT W !,*7,"There are no transactions requiring transmission",*7 Q
"RTN","FBAAV0",16,0)
 ;
"RTN","FBAAV0",17,0)
 W !!,"This option will transmit all Batches and MRA's ready to be transmitted",!,"to Austin"
"RTN","FBAAV0",18,0)
RD W !! S DIR(0)="Y",DIR("A")="Are you sure you want to continue",DIR("B")="No" D ^DIR K DIR G END:'Y
"RTN","FBAAV0",19,0)
 L +^FBAA(161.7,"AC"):0 G:'$T LOCK^FBAAUTL1
"RTN","FBAAV0",20,0)
 W !!,"The following Batches will be transmitted: " F FBSTAT="S","R" F J=0:0 S J=$O(^FBAA(161.7,"AC",FBSTAT,J)) Q:J'>0  S FBATCH=$G(^FBAA(161.7,J,0)) D
"RTN","FBAAV0",21,0)
 .Q:'+FBATCH
"RTN","FBAAV0",22,0)
 .I (FBSTAT="S"&($P(FBATCH,U,15)="Y"))!(+$P(FBATCH,U,9)) S ^TMP($J,"FBAABATCH",J)="" W !,+FBATCH
"RTN","FBAAV0",23,0)
RTRAN ;Entry from Re-transmit MRA routine
"RTN","FBAAV0",24,0)
 D ADDRESS^FBAAV01 G END:VATERR K VAT
"RTN","FBAAV0",25,0)
 D WAIT^DICD,STATION^FBAAUTL,HD^FBAAUTL I $D(FB("ERROR")) G END
"RTN","FBAAV0",26,0)
 S TOTSTR=0,$P(PAD," ",200)=" "
"RTN","FBAAV0",27,0)
 D ^FBAAV1:$D(^FBAA(161.25,"AE"))         ; Vendor MRA
"RTN","FBAAV0",28,0)
 D ^FBAAV4:$D(^FBAA(161.26,"AC","P"))     ; Patient MRA
"RTN","FBAAV0",29,0)
 D ^FBAAV8:$D(^FBAA(161.96,"AS","P"))     ; IPAC agreement MRA (FB*3.5*123)
"RTN","FBAAV0",30,0)
 ;
"RTN","FBAAV0",31,0)
 F J=0:0 S J=$O(^TMP($J,"FBAABATCH",J)) Q:J'>0  I $D(^FBAA(161.7,J,0)) S Y(0)=^(0) D SET1,DET:FBAABT="B3",DETP^FBAAV2:FBAABT="B5",DETT^FBAAV3:FBAABT="B2",^FBAAV5:FBAABT="B9"
"RTN","FBAAV0",32,0)
END L -^FBAA(161.7,"AC") D KILL^FBAAV1 Q
"RTN","FBAAV0",33,0)
SET1 ; build the payment batch header string (used by all four formats)
"RTN","FBAAV0",34,0)
 S FBAABN=$P(Y(0),"^",1),FBAABN=$E("00000",$L(FBAABN)+1,5)_FBAABN
"RTN","FBAAV0",35,0)
 S FBAAON=$E($P(Y(0),"^",2),3,6)
"RTN","FBAAV0",36,0)
 S FBAACD=$$AUSDT^FBAAV3(DT)
"RTN","FBAAV0",37,0)
 S FBAACP=$E($P(Y(0),"^",2),1,2)
"RTN","FBAAV0",38,0)
 S FBAABT=$P(Y(0),"^",3)
"RTN","FBAAV0",39,0)
 S FBAAAP=$$AUSAMT^FBAAV3($P(Y(0),"^",9),11)
"RTN","FBAAV0",40,0)
 S FBSTAT=$P(^FBAA(161.7,J,"ST"),"^")
"RTN","FBAAV0",41,0)
 S FBCHB=$P(Y(0),"^",15)
"RTN","FBAAV0",42,0)
 S FBEXMPT=$P(Y(0),"^",18)
"RTN","FBAAV0",43,0)
 S X=$$SUB^FBAAUTL5(+$P(Y(0),U,8)_"-"_$P(Y(0),U,2))
"RTN","FBAAV0",44,0)
 S FBAASN=$$LJ^XLFSTR($S(X]"":X,1:FBAASN),6," ")
"RTN","FBAAV0",45,0)
 I FBSTAT="R"!(FBSTAT="S"&(FBCHB'["Y"))!(FBSTAT="S"&($G(FBEXMPT)="Y")) S FBSTR=FBHD_$S(FBAABT="B2":"BT",1:FBAABT)_FBAACD_FBAASN_FBAABN_" "_FBAAAP_FBAACP_" $"
"RTN","FBAAV0",46,0)
 Q
"RTN","FBAAV0",47,0)
DET ;entry point to process B3 (outpatient/ancillary) batch
"RTN","FBAAV0",48,0)
 ; input (partial list)
"RTN","FBAAV0",49,0)
 ;   J      - Batch IEN in file 161.7
"RTN","FBAAV0",50,0)
 ;   FBAAON - last 4 of obligation number
"RTN","FBAAV0",51,0)
 ;   FBAASN - station number (formatted)
"RTN","FBAAV0",52,0)
 S FBTXT=0
"RTN","FBAAV0",53,0)
 D CKB3V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV0",54,0)
 ; HIPAA 5010 - line items that have 0.00 amount paid are now required to go to Central Fee
"RTN","FBAAV0",55,0)
 F K=0:0 S K=$O(^FBAAC("AC",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("AC",J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("AC",J,K,L,M)) Q:M'>0  F N=0:0 S N=$O(^FBAAC("AC",J,K,L,M,N)) Q:N'>0  S Y(0)=$G(^FBAAC(K,1,L,1,M,1,N,0)) I Y(0)]"" D
"RTN","FBAAV0",56,0)
 .N FBDTSR1,FBPICN
"RTN","FBAAV0",57,0)
 .S FBDTSR1=+$G(^FBAAC(K,1,L,1,M,0))
"RTN","FBAAV0",58,0)
 .S FBPICN=K_U_L_U_M_U_N
"RTN","FBAAV0",59,0)
 .S FBPICN=$$ORGICN^FBAAVR5(162.03,FBPICN)
"RTN","FBAAV0",60,0)
 .S FBY=$G(^FBAAC(K,1,L,1,M,1,N,2))
"RTN","FBAAV0",61,0)
 .S FBY3=$G(^FBAAC(K,1,L,1,M,1,N,3))
"RTN","FBAAV0",62,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD
"RTN","FBAAV0",63,0)
 .D GOT
"RTN","FBAAV0",64,0)
 ;
"RTN","FBAAV0",65,0)
 D:FBTXT XMIT^FBAAV01
"RTN","FBAAV0",66,0)
 Q
"RTN","FBAAV0",67,0)
 ;
"RTN","FBAAV0",68,0)
GOT ; process a B3 line item
"RTN","FBAAV0",69,0)
 ;
"RTN","FBAAV0",70,0)
 N DFN,FBADJ,FBADJA1,FBADJA2,FBADJR1,FBADJR2,FBADMIT,FBAUTHF,FBIENS
"RTN","FBAAV0",71,0)
 N FBMOD1,FBMOD2,FBMOD3,FBMOD4,FBPNAMX,FBUNITS,FBX,FBNPI
"RTN","FBAAV0",72,0)
 N FBCSID,FBEDIF,FBCNTRN
"RTN","FBAAV0",73,0)
 N FBIA,FBDODINV
"RTN","FBAAV0",74,0)
 ;
"RTN","FBAAV0",75,0)
 S FBIENS=N_","_M_","_L_","_K_","
"RTN","FBAAV0",76,0)
 ;
"RTN","FBAAV0",77,0)
 S FBEDIF=$S($P($G(^FBAAC(K,1,L,1,M,1,N,3)),"^")]"":"Y",1:" ") ;EDI flag
"RTN","FBAAV0",78,0)
 ; get CPT modifiers
"RTN","FBAAV0",79,0)
 D
"RTN","FBAAV0",80,0)
 . N FBMODA,FBMODL
"RTN","FBAAV0",81,0)
 . D MODDATA^FBAAUTL4(K,L,M,N)
"RTN","FBAAV0",82,0)
 . S FBMODL=$$MODL^FBAAUTL4("FBMODA","E")
"RTN","FBAAV0",83,0)
 . S FBMOD1=$$RJ^XLFSTR($P(FBMODL,",",1),5," ")
"RTN","FBAAV0",84,0)
 . S FBMOD2=$$RJ^XLFSTR($P(FBMODL,",",2),5," ")
"RTN","FBAAV0",85,0)
 . S FBMOD3=$$RJ^XLFSTR($P(FBMODL,",",3),5," ")
"RTN","FBAAV0",86,0)
 . S FBMOD4=$$RJ^XLFSTR($P(FBMODL,",",4),5," ")
"RTN","FBAAV0",87,0)
 ;
"RTN","FBAAV0",88,0)
 S FBPAYT=$P(Y(0),"^",20),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V")
"RTN","FBAAV0",89,0)
 ;
"RTN","FBAAV0",90,0)
 S FBVID=$P($G(^FBAAV(L,0)),U,2)
"RTN","FBAAV0",91,0)
 S FBVID=FBVID_$E(PAD,$L(FBVID)+1,11)
"RTN","FBAAV0",92,0)
 ;
"RTN","FBAAV0",93,0)
 ; FB*3.5*123 - get IPAC variables
"RTN","FBAAV0",94,0)
 S FBIA=+$P(FBY3,U,6)                                            ; IPAC agreement ptr
"RTN","FBAAV0",95,0)
 S FBIA=$S(FBIA:$P($G(^FBAA(161.95,FBIA,0)),U,1),1:"")           ; IPAC external agreement id# or ""
"RTN","FBAAV0",96,0)
 S FBIA=$$LJ^XLFSTR(FBIA,"10T")                                  ; format to 10 characters
"RTN","FBAAV0",97,0)
 S FBDODINV=$P(FBY3,U,7),FBDODINV=$$LJ^XLFSTR(FBDODINV,"22T")    ; DoD invoice# formatted to 22 characters
"RTN","FBAAV0",98,0)
 ;
"RTN","FBAAV0",99,0)
 S:FBPAYT="R" FBVID=$E(PAD,1,11)
"RTN","FBAAV0",100,0)
 S FBNPI=$$EN^FBNPILK(L)  ;SET THE NPI TO BE PASSED TO FBAAV01,FBAAV2,FBAAV5
"RTN","FBAAV0",101,0)
 ;
"RTN","FBAAV0",102,0)
 D POV^FBAAUTL2
"RTN","FBAAV0",103,0)
 S POV=$S(POV']"":"",POV="A":6,POV="B":7,POV="C":8,POV="D":9,POV="E":10,1:POV)
"RTN","FBAAV0",104,0)
 S POV=$S(POV']"":99,$D(^FBAA(161.82,POV,0)):$P(^(0),"^",3),1:99)
"RTN","FBAAV0",105,0)
 S FBPOV=POV
"RTN","FBAAV0",106,0)
 S FBTT=$S(FBTT]"":FBTT,1:1)
"RTN","FBAAV0",107,0)
 S FBCPT=$$CPT^FBAAUTL4($P(Y(0),"^")),FBCPT=$S($L(FBCPT)=5:FBCPT,1:"     ")
"RTN","FBAAV0",108,0)
 S FBPSA=$$PSA^FBAAV5(+$P(Y(0),U,12),+FBAASN) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV0",109,0)
 S FBPATT=$P(Y(0),"^",17),FBPATT=$S(FBPATT]"":FBPATT,1:10)
"RTN","FBAAV0",110,0)
 S FBTD=$$AUSDT^FBAAV3(FBDTSR1) ; formatted treatment date
"RTN","FBAAV0",111,0)
 S FBSUSP=$P(Y(0),"^",5),FBSUSP=$S(FBSUSP]"":FBSUSP,1:" ")
"RTN","FBAAV0",112,0)
 S FBSUSP=$S(FBSUSP=" ":" ",$D(^FBAA(161.27,+FBSUSP,0)):$P(^(0),"^"),1:" ")
"RTN","FBAAV0",113,0)
 S FBAP=$$AUSAMT^FBAAV3($P(Y(0),"^",3),8) ; amount paid
"RTN","FBAAV0",114,0)
 S FBPOS=+$P(Y(0),"^",25),FBPOS=$S(FBPOS:$P(^IBE(353.1,FBPOS,0),"^"),1:"  ")
"RTN","FBAAV0",115,0)
 S FBHCFA=+$P(Y(0),"^",26),FBHCFA=$S(FBHCFA:$P(^IBE(353.2,FBHCFA,0),"^"),1:""),FBHCFA=$E(PAD,$L(FBHCFA)+1,2)_FBHCFA
"RTN","FBAAV0",116,0)
 S FBVTOS=+$P(Y(0),"^",24),FBVTOS=$S(FBVTOS:$P(^FBAA(163.85,FBVTOS,0),"^",2),1:"  ")
"RTN","FBAAV0",117,0)
 ; FB*3.5*139-DEM-Modifications for ICD-10 remediation
"RTN","FBAAV0",118,0)
 S FBPD=+$P(Y(0),"^",23)
"RTN","FBAAV0",119,0)
 S FBPD=$S(FBPD:$$ICD9^FBCSV1(FBPD,$G(FBDTSR1)),1:"")
"RTN","FBAAV0",120,0)
 ; decimal is stripped only from ICD-10 diagnosis codes.
"RTN","FBAAV0",121,0)
 I FBPD'="",$$CODEABA^ICDEX(FBPD,80,30)>0 S:FBPD["." FBPD=$P(FBPD,".",1)_$P(FBPD,".",2)
"RTN","FBAAV0",122,0)
 S FBPD=$E(PAD,$L(FBPD)+1,7)_FBPD
"RTN","FBAAV0",123,0)
 ; End 139
"RTN","FBAAV0",124,0)
 S FBINVN=$P(Y(0),"^",16)
"RTN","FBAAV0",125,0)
 S FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN
"RTN","FBAAV0",126,0)
 S FBAUTHF=$S($P(Y(0),U,13)["FB583":"U",1:"A") ; auth/unauth flag
"RTN","FBAAV0",127,0)
 S FBDIN=$$AUSDT^FBAAV3($P(Y(0),"^",15)) ; invoice date rec'd
"RTN","FBAAV0",128,0)
 S FBADMIT=$$AUSDT^FBAAV3($$B3ADMIT(FBIENS)) ; formatted admission date
"RTN","FBAAV0",129,0)
 ;
"RTN","FBAAV0",130,0)
 S VAPA("P")=""
"RTN","FBAAV0",131,0)
 S DFN=K
"RTN","FBAAV0",132,0)
 ; Note - before this point Y(0) was the 0 node of subfile #162.03
"RTN","FBAAV0",133,0)
 ;      - after this point Y(0) will be the 0 node of file #2
"RTN","FBAAV0",134,0)
 S Y(0)=$G(^DPT(+K,0)) Q:Y(0)']""
"RTN","FBAAV0",135,0)
 D PAT^FBAAUTL2
"RTN","FBAAV0",136,0)
 ; obtain date of birth, must follow call to PAT^FBAAUTL2 to overwrite 
"RTN","FBAAV0",137,0)
 ; the value returned from it
"RTN","FBAAV0",138,0)
 S FBDOB=$$AUSDT^FBAAV3($P(Y(0),"^",3)) ; date of birth
"RTN","FBAAV0",139,0)
 D ADD^VADPT
"RTN","FBAAV0",140,0)
 S FBPNAMX=$$HL7NAME^FBAAV2(DFN) ; patient name
"RTN","FBAAV0",141,0)
 S FBUNITS=$P(FBY,U,14)
"RTN","FBAAV0",142,0)
 S:FBUNITS<1 FBUNITS=1
"RTN","FBAAV0",143,0)
 S FBUNITS=$$RJ^XLFSTR(FBUNITS,5,0) ; volume indicator (units paid)
"RTN","FBAAV0",144,0)
 S FBCSID=$$LJ^XLFSTR($P(FBY,"^",16),20," ") ; patient acct #
"RTN","FBAAV0",145,0)
 D
"RTN","FBAAV0",146,0)
 . N FBCNTRP
"RTN","FBAAV0",147,0)
 . S FBCNTRP=$P(FBY3,"^",8)
"RTN","FBAAV0",148,0)
 . S FBCNTRN=$S(FBCNTRP:$P($G(^FBAA(161.43,FBCNTRP,0)),"^"),1:"")
"RTN","FBAAV0",149,0)
 . S FBCNTRN=$$LJ^XLFSTR(FBCNTRN,20," ") ; contract number
"RTN","FBAAV0",150,0)
 ;
"RTN","FBAAV0",151,0)
 ; get and format adjustment reason codes and amounts (if any)
"RTN","FBAAV0",152,0)
 D LOADADJ^FBAAFA(FBIENS,.FBADJ)
"RTN","FBAAV0",153,0)
 S FBX=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBAAV0",154,0)
 S FBADJR1=$$RJ^XLFSTR($P(FBX,U,1),5," ")
"RTN","FBAAV0",155,0)
 S FBADJA1=$$AUSAMT^FBAAV3($P(FBX,U,3),9,1)
"RTN","FBAAV0",156,0)
 S FBADJR2=$$RJ^XLFSTR($P(FBX,U,4),5," ")
"RTN","FBAAV0",157,0)
 S FBADJA2=$$AUSAMT^FBAAV3($P(FBX,U,6),9,1)
"RTN","FBAAV0",158,0)
 K FBADJ,FBX
"RTN","FBAAV0",159,0)
 ;
"RTN","FBAAV0",160,0)
 S FBST=$S($P(VAPA(5),"^")="":"  ",$D(^DIC(5,$P(VAPA(5),"^"),0)):$P(^(0),"^",2),1:"  ")
"RTN","FBAAV0",161,0)
 I $L(FBST)>2 S FBST="**"
"RTN","FBAAV0",162,0)
 S:$L(FBST)'=2 FBST=$E(PAD,$L(FBST)+1,2)_FBST
"RTN","FBAAV0",163,0)
 S FBCTY=$S($P(VAPA(7),"^",1)="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^"),1,$P(VAPA(7),"^"),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV0",164,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV0",165,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV0",166,0)
 D STRING^FBAAV01
"RTN","FBAAV0",167,0)
 Q
"RTN","FBAAV0",168,0)
 ;
"RTN","FBAAV0",169,0)
UPD ; update the batch file
"RTN","FBAAV0",170,0)
 N Y
"RTN","FBAAV0",171,0)
 S DA=J,(DIC,DIE)="^FBAA(161.7,"
"RTN","FBAAV0",172,0)
 S DR="11////^S X=""T"";12////^S X=DT"
"RTN","FBAAV0",173,0)
 D ^DIE
"RTN","FBAAV0",174,0)
 Q
"RTN","FBAAV0",175,0)
 ;
"RTN","FBAAV0",176,0)
STORE D STORE^FBAAV01 Q
"RTN","FBAAV0",177,0)
 ;
"RTN","FBAAV0",178,0)
B3ADMIT(FBIENS) ; Determine Admission Date for a B3 payment line item
"RTN","FBAAV0",179,0)
 ; input
"RTN","FBAAV0",180,0)
 ;   FBIENS - IENS (FileMan format) for subfile 162.03 entry
"RTN","FBAAV0",181,0)
 ; returns admission date in internal FileMan format or null value
"RTN","FBAAV0",182,0)
 ;
"RTN","FBAAV0",183,0)
 N FB7078,FBRET
"RTN","FBAAV0",184,0)
 S FBRET=""
"RTN","FBAAV0",185,0)
 S FB7078=$$GET1^DIQ(162.03,FBIENS,27,"I") ; associated 7078/583
"RTN","FBAAV0",186,0)
 ; (the unauthorized ancillary claims will have the treatment date
"RTN","FBAAV0",187,0)
 ;  instead of the inpatient admission date so nothing is sent to
"RTN","FBAAV0",188,0)
 ;  Austin for them)
"RTN","FBAAV0",189,0)
 ;
"RTN","FBAAV0",190,0)
 ; if line items points to a 7078 authorization then return a date
"RTN","FBAAV0",191,0)
 I $P(FB7078,";",2)="FB7078(" D
"RTN","FBAAV0",192,0)
 . N FBY
"RTN","FBAAV0",193,0)
 . S FBY=$G(^FB7078(+FB7078,0))
"RTN","FBAAV0",194,0)
 . ; if fee program is civil hospital then return 7078 date of admission
"RTN","FBAAV0",195,0)
 . I $P(FBY,U,11)=6 S FBRET=$P(FBY,U,15)
"RTN","FBAAV0",196,0)
 . ; if fee program is CNH then return 7078 authorized from date
"RTN","FBAAV0",197,0)
 . I $P(FBY,U,11)=7 S FBRET=$P(FBY,U,4)
"RTN","FBAAV0",198,0)
 ;
"RTN","FBAAV0",199,0)
 Q FBRET
"RTN","FBAAV01")
0^20^B27989531^B12667626
"RTN","FBAAV01",1,0)
FBAAV01 ;AISC/GRR - ELECTRONICALLY TRANSMIT FEE DATA CONTINUED ;6/15/2009
"RTN","FBAAV01",2,0)
 ;;3.5;FEE BASIS;**89,98,108,123**;JAN 30, 1995;Build 51
"RTN","FBAAV01",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAV01",4,0)
NEWMSG ;get new message number, reset line counter
"RTN","FBAAV01",5,0)
 ;FBLN=line counter, FBFEE=FEE message counter, FBNVP=NVP message counter
"RTN","FBAAV01",6,0)
 ;FBOKTX=1 if message pending, 0 otherwise
"RTN","FBAAV01",7,0)
 S FBXMZ=0,FBJ=$G(J),FBK=$G(K) S:'$D(FBFEE) FBFEE=1 S:'$D(FBNVP) FBNVP=1
"RTN","FBAAV01",8,0)
 S XMSUB=$S('$D(FBFLAG):"FEE BASIS MESSAGE # "_FBFEE,1:"FEE NON-VA HOSP TO PRICER MESSAGE # "_FBNVP),XMDUZ=DUZ
"RTN","FBAAV01",9,0)
 S FBOKTX=0
"RTN","FBAAV01",10,0)
 D XMZ^XMA2
"RTN","FBAAV01",11,0)
 I '$D(XMZ)!(XMZ'>0) G NEWMSG
"RTN","FBAAV01",12,0)
 S FBXMZ=XMZ,FBLN=0,FBOKTX=1,J=FBJ,K=FBK K XMZ
"RTN","FBAAV01",13,0)
 Q
"RTN","FBAAV01",14,0)
 ;
"RTN","FBAAV01",15,0)
XMIT ;send message, increment message counter
"RTN","FBAAV01",16,0)
 ;FBLN=line counter, FBFEE=FEE message counter, FBNVP=NVP message counter
"RTN","FBAAV01",17,0)
 ;FBXMFEE(=FEE recipient array, FBXMNVP(=NVP recipient array
"RTN","FBAAV01",18,0)
 S FBJ=J,FBK=K K XMY D ROUT
"RTN","FBAAV01",19,0)
 S XMZ=FBXMZ,^XMB(3.9,XMZ,2,0)="^3.92A^"_FBLN_"^"_FBLN_"^"_DT
"RTN","FBAAV01",20,0)
 S XMDUN=$P(^VA(200,DUZ,0),U) D ENT1^XMD
"RTN","FBAAV01",21,0)
 S FBLN=0,FBOKTX=0
"RTN","FBAAV01",22,0)
 D INCRM ;increment message counter
"RTN","FBAAV01",23,0)
 S J=FBJ,K=FBK
"RTN","FBAAV01",24,0)
 Q
"RTN","FBAAV01",25,0)
 ;
"RTN","FBAAV01",26,0)
ROUT ;set up recipients for message
"RTN","FBAAV01",27,0)
 I $D(FBFLAG) S FBI=0 F  S FBI=$O(FBXMNVP(FBI)) Q:'FBI  S X=FBXMNVP(FBI),XMN=0,XMDF="" D INST^XMA21 K XMN,XMDF
"RTN","FBAAV01",28,0)
 I '$D(FBFLAG) S FBI=0 F  S FBI=$O(FBXMFEE(FBI)) Q:'FBI  S X=FBXMFEE(FBI),XMN=0,XMDF="" D INST^XMA21 K XMN,XMDF
"RTN","FBAAV01",29,0)
 S XMY(DUZ)="",XMDUZ=DUZ Q
"RTN","FBAAV01",30,0)
 ;
"RTN","FBAAV01",31,0)
INCRM ;increment message counter
"RTN","FBAAV01",32,0)
 I $D(FBFLAG) S FBNVP=FBNVP+1
"RTN","FBAAV01",33,0)
 E  S FBFEE=FBFEE+1
"RTN","FBAAV01",34,0)
 Q
"RTN","FBAAV01",35,0)
 ;
"RTN","FBAAV01",36,0)
INCRL ;increment line counter
"RTN","FBAAV01",37,0)
 S FBLN=FBLN+1 Q
"RTN","FBAAV01",38,0)
 ;
"RTN","FBAAV01",39,0)
STORE ;set message string
"RTN","FBAAV01",40,0)
 D INCRL S ^XMB(3.9,FBXMZ,2,FBLN,0)=FBSTR
"RTN","FBAAV01",41,0)
 Q
"RTN","FBAAV01",42,0)
 ;
"RTN","FBAAV01",43,0)
ADDRESS ;set up recipient array, FBXMFEE( for FEE router, FBXMNVP( for NVP router
"RTN","FBAAV01",44,0)
 F VATNAME="FEE","NVP" D ^VATRAN G:VATERR ADDQ S FBI=0 F  S FBI=$O(VAT(FBI)) Q:'FBI  S FBVAR="FBXM"_VATNAME_"("_FBI_")" S @FBVAR=VAT(FBI)
"RTN","FBAAV01",45,0)
ADDQ Q
"RTN","FBAAV01",46,0)
 ;Following checks for Austin Name Field in Vendor file in order to continue transmitting that batch.
"RTN","FBAAV01",47,0)
CKB3V F FB1=0:0 S FB1=$O(^FBAAC("AC",J,FB1)) Q:'FB1!($G(FBERR))  F FB2=0:0 S FB2=$O(^FBAAC("AC",J,FB1,FB2)) Q:FB2'>0!($G(FBERR))  D CHKV
"RTN","FBAAV01",48,0)
 Q
"RTN","FBAAV01",49,0)
CKB5V F FB1=0:0 S FB1=$O(^FBAA(162.1,"AE",J,FB1)) Q:'FB1!($G(FBERR))  I $G(^FBAA(162.1,FB1,0)) S FB2=+$P(^(0),"^",4) D CHKV
"RTN","FBAAV01",50,0)
 Q
"RTN","FBAAV01",51,0)
CKB9V F FB1=0:0 S FB1=$O(^FBAAI("AC",J,FB1)) Q:'FB1!($G(FBERR))  I $G(^FBAAI(FB1,0)) S FB2=+$P(^(0),"^",3) D CHKV
"RTN","FBAAV01",52,0)
 Q
"RTN","FBAAV01",53,0)
CHKV I $$CKVEN^FBAADV(FB2) W !!,*7,"VENDOR: ",$$VNAME^FBNHEXP(FB2)," Not approved in Austin yet.",!,"Batch # ",FBAABN," CANNOT BE TRANSMITTED!!!" S FBERR=1
"RTN","FBAAV01",54,0)
 Q
"RTN","FBAAV01",55,0)
 ;
"RTN","FBAAV01",56,0)
STRING ; called from FBAAV0 to build 'B3' payment record; also called by DSIFPAY5 (FBCS) with DBIA# 5093
"RTN","FBAAV01",57,0)
 ;
"RTN","FBAAV01",58,0)
 S FBPICN=$$PADZ(FBPICN,30)
"RTN","FBAAV01",59,0)
 ;
"RTN","FBAAV01",60,0)
 ; build 1st line
"RTN","FBAAV01",61,0)
 S FBSTR=3_FBAASN_FBSSN_FBPAYT_FBPNAMX_FBVID_"  "_FBAP_FBAAON_FBSUSP
"RTN","FBAAV01",62,0)
 S FBSTR=FBSTR_FBPOV_FBPATT_FBTD_FBTT_FBDIN_FBINVN
"RTN","FBAAV01",63,0)
 S FBSTR=FBSTR_$E(PAD,1,33)_FBST_FBCTY_FBZIP ; reserved for foreign addr
"RTN","FBAAV01",64,0)
 S FBSTR=FBSTR_$E(FBPSA,1,3)_FBCPT_FBPOS_FBHCFA_FBVTOS_FBPD
"RTN","FBAAV01",65,0)
 S FBSTR=FBSTR_+$P($G(FBY),U,2)_$E(PAD,1,8)_FBPICN
"RTN","FBAAV01",66,0)
 S FBSTR=FBSTR_$S(+FBY:$$AUSDT^FBAAV3(+FBY),1:FBDIN)_FBADMIT_FBDOB_"~"
"RTN","FBAAV01",67,0)
 D STORE
"RTN","FBAAV01",68,0)
 ;
"RTN","FBAAV01",69,0)
 ; build 2nd line
"RTN","FBAAV01",70,0)
 S FBSTR=FBUNITS_FBAUTHF_FBMOD1_FBMOD2_FBMOD3_FBMOD4_FBADJR1_FBADJR2
"RTN","FBAAV01",71,0)
 S FBSTR=FBSTR_FBADJA1_FBADJA2_FBNPI_FBCSID_FBEDIF_FBCNTRN
"RTN","FBAAV01",72,0)
 ;
"RTN","FBAAV01",73,0)
 ; FB*3.5*123 - esg - Check to make sure IPAC variables are defined
"RTN","FBAAV01",74,0)
 I '$D(FBIA)!'$D(FBDODINV) D IPAC(K,L,M,N,.FBIA,.FBDODINV)    ; set and format the IPAC variables if coming from FBCS
"RTN","FBAAV01",75,0)
 ;
"RTN","FBAAV01",76,0)
 S FBSTR=FBSTR_FBIA_FBDODINV_"~$"          ; FB*3.5*123 - IPAC data formatted in FBAAV0 or below in IPAC
"RTN","FBAAV01",77,0)
 D STORE
"RTN","FBAAV01",78,0)
 ;
"RTN","FBAAV01",79,0)
 K FBPICN,FBY
"RTN","FBAAV01",80,0)
 K FBIA,FBDODINV      ; FB*3.5*123 kill IPAC variables after using them. They will get rebuilt by the next claim.
"RTN","FBAAV01",81,0)
 Q
"RTN","FBAAV01",82,0)
 ;
"RTN","FBAAV01",83,0)
PADZ(X,Y) ;call to pad 'X' with leading zeros' to a field length of 'Y'
"RTN","FBAAV01",84,0)
 ;
"RTN","FBAAV01",85,0)
 I $S('$L(X):1,'Y:1,Y<$L(X):1,1:0) Q ""
"RTN","FBAAV01",86,0)
 N Z S Z=0,$P(Z,0,Y)=0
"RTN","FBAAV01",87,0)
 Q $E(Z,$L(X)+1,Y)_X
"RTN","FBAAV01",88,0)
 ;
"RTN","FBAAV01",89,0)
IPAC(K,L,M,N,FBIA,FBDODINV) ; set IPAC variables if being called from FBCS
"RTN","FBAAV01",90,0)
 ;        K - 162.03 subscript#1 - DFN
"RTN","FBAAV01",91,0)
 ;        L - 162.03 subscript#2 - vendor ien
"RTN","FBAAV01",92,0)
 ;        M - 162.03 subscript#3 - treatment date subfile ien
"RTN","FBAAV01",93,0)
 ;        N - 162.03 subscript#4 - service provided subfile ien
"RTN","FBAAV01",94,0)
 ; Output:
"RTN","FBAAV01",95,0)
 ;     FBIA - formatted IPAC agreement ID# (pass by reference) - will be 10 characters in length
"RTN","FBAAV01",96,0)
 ; FBDODINV - formatted DoD invoice# (pass by reference) - will be 22 characters in length
"RTN","FBAAV01",97,0)
 ;
"RTN","FBAAV01",98,0)
 N FBY2,FBY3,FBIPIEN
"RTN","FBAAV01",99,0)
 S (FBIA,FBDODINV)=""
"RTN","FBAAV01",100,0)
 I '$$IPACREQD^FBAAMP(L) G IPACX    ; IPAC data is not required so get out
"RTN","FBAAV01",101,0)
 ;
"RTN","FBAAV01",102,0)
 S FBY2=$G(^FBAAC(K,1,L,1,M,1,N,2))   ; 2 node of file 162.03
"RTN","FBAAV01",103,0)
 S FBY3=$G(^FBAAC(K,1,L,1,M,1,N,3))   ; 3 node of file 162.03
"RTN","FBAAV01",104,0)
 S FBIA=+$P(FBY3,U,6)      ; .05 field IPAC agreement ien
"RTN","FBAAV01",105,0)
 S FBIA=$S(FBIA:$P($G(^FBAA(161.95,FBIA,0)),U,1),1:"")    ; IPAC agreement ID# or ""
"RTN","FBAAV01",106,0)
 S FBDODINV=$P(FBY3,U,7)   ; IPAC DoD invoice#
"RTN","FBAAV01",107,0)
 ;
"RTN","FBAAV01",108,0)
 ; if IPAC agreement is not on file, but there is only one active IPAC on file for the vendor, then save it/use it
"RTN","FBAAV01",109,0)
 I FBIA="" S FBIA=$$IPACID^FBAAMP(L,.FBIPIEN) I FBIA'="",FBIPIEN D
"RTN","FBAAV01",110,0)
 . N FBIENS,FBIAFDA
"RTN","FBAAV01",111,0)
 . S FBIENS=N_","_M_","_L_","_K_","
"RTN","FBAAV01",112,0)
 . S FBIAFDA(162.03,FBIENS,.05)=FBIPIEN    ; ipac agreement ien
"RTN","FBAAV01",113,0)
 . D FILE^DIE("","FBIAFDA")                ; update the database
"RTN","FBAAV01",114,0)
 . Q
"RTN","FBAAV01",115,0)
 ;
"RTN","FBAAV01",116,0)
 ; if IPAC agreement is still not found, then report an error condition to Central Fee
"RTN","FBAAV01",117,0)
 I FBIA="" S FBIA="9999999999"        ; error value to be sent to Central Fee so they reject it back to VistA
"RTN","FBAAV01",118,0)
 ;
"RTN","FBAAV01",119,0)
 ; if DoD invoice# is not on file, then attempt to use field# 49 PATIENT ACCOUNT NUMBER. use it/save it if it exists
"RTN","FBAAV01",120,0)
 I FBDODINV="" S FBDODINV=$P(FBY2,U,16) I FBDODINV'="" D
"RTN","FBAAV01",121,0)
 . N FBIENS,FBIAFDA
"RTN","FBAAV01",122,0)
 . S FBIENS=N_","_M_","_L_","_K_","
"RTN","FBAAV01",123,0)
 . S FBIAFDA(162.03,FBIENS,.055)=FBDODINV     ; DoD invoice#
"RTN","FBAAV01",124,0)
 . D FILE^DIE("","FBIAFDA")                   ; update the database
"RTN","FBAAV01",125,0)
 . Q
"RTN","FBAAV01",126,0)
 ;
"RTN","FBAAV01",127,0)
 ; if DoD invoice# is still not found, then report an error condition to Central Fee
"RTN","FBAAV01",128,0)
 I FBDODINV="" S FBDODINV="9999999999999999999999"  ; error value to be sent to Central Fee
"RTN","FBAAV01",129,0)
 ;
"RTN","FBAAV01",130,0)
IPACX ;
"RTN","FBAAV01",131,0)
 S FBIA=$$LJ^XLFSTR(FBIA,"10T")           ; IPAC agreement id#
"RTN","FBAAV01",132,0)
 S FBDODINV=$$LJ^XLFSTR(FBDODINV,"22T")   ; DoD invoice#
"RTN","FBAAV01",133,0)
 Q
"RTN","FBAAV01",134,0)
 ;
"RTN","FBAAV2")
0^21^B17032694^B14009472
"RTN","FBAAV2",1,0)
FBAAV2 ;AISC/GRR-ELECTRONICALLY TRANSMIT PHARMACY PAYMENTS ;11 Apr 2006  2:52 PM
"RTN","FBAAV2",2,0)
 ;;3.5;FEE BASIS;**3,89,98,116,108,123**;JAN 30, 1995;Build 51
"RTN","FBAAV2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAV2",4,0)
DETP ; ENTRY FROM FBAAV0
"RTN","FBAAV2",5,0)
 S FBTXT=0
"RTN","FBAAV2",6,0)
 D CKB5V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV2",7,0)
 ; HIPAA 5010 - line items that have 0.00 amount paid are now required togo to Central Fee
"RTN","FBAAV2",8,0)
 F K=0:0 S K=$O(^FBAA(162.1,"AE",J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAA(162.1,"AE",J,K,L)) Q:L'>0  S Y(0)=$G(^FBAA(162.1,K,"RX",L,0)),Y(2)=$G(^(2)),Y=$G(^FBAA(162.1,K,0)) I Y(0)]"",Y]"" D
"RTN","FBAAV2",9,0)
 .S Y(6)=$G(^FBAA(162.1,K,"RX",L,6))       ; FB*3.5*123
"RTN","FBAAV2",10,0)
 .N FBPICN,FBY
"RTN","FBAAV2",11,0)
 .S FBPICN=K_U_L
"RTN","FBAAV2",12,0)
 .S FBY=$S($P(Y,U,12):$P(Y,U,12),1:$P(Y,U,2))_U_+$P(Y(2),U,9)
"RTN","FBAAV2",13,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD^FBAAV0
"RTN","FBAAV2",14,0)
 .D GOTP
"RTN","FBAAV2",15,0)
 D:FBTXT XMIT^FBAAV01
"RTN","FBAAV2",16,0)
 Q
"RTN","FBAAV2",17,0)
 ;
"RTN","FBAAV2",18,0)
GOTP ; process a B5 line item
"RTN","FBAAV2",19,0)
 N DFN,FBADJ,FBADJA1,FBADJA2,FBADJR1,FBADJR2,FBIENS,FBPNAMX,FBVY0,FBX
"RTN","FBAAV2",20,0)
 N FBNPI,FBEDIF,FBIA,FBDODINV
"RTN","FBAAV2",21,0)
 ;
"RTN","FBAAV2",22,0)
 S FBIENS=$P(FBPICN,U,2)_","_$P(FBPICN,U,1)_","
"RTN","FBAAV2",23,0)
 S FBPAYT=$P(Y(0),"^",20),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V")
"RTN","FBAAV2",24,0)
 S FBINVN=$P(Y,"^"),FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN
"RTN","FBAAV2",25,0)
 S FBEDIF=$S($P(Y,"^",13)]"":"Y",1:" ") ; EDI flag
"RTN","FBAAV2",26,0)
 S FBDIN=$$AUSDT^FBAAV3($P(Y,"^",2))
"RTN","FBAAV2",27,0)
 ;
"RTN","FBAAV2",28,0)
 S FBVFN=$P(Y,"^",4)
"RTN","FBAAV2",29,0)
 S FBNPI=$$EN^FBNPILK(FBVFN)
"RTN","FBAAV2",30,0)
 S FBVY0=$G(^FBAAV(FBVFN,0)) ; vendor 0 node
"RTN","FBAAV2",31,0)
 ;
"RTN","FBAAV2",32,0)
 S FBIA=+$P(Y,U,23)                                      ; IPAC agreement ptr
"RTN","FBAAV2",33,0)
 S FBIA=$S(FBIA:$P($G(^FBAA(161.95,FBIA,0)),U,1),1:"")   ; IPAC external agreement ID# or ""
"RTN","FBAAV2",34,0)
 S FBIA=$$LJ^XLFSTR(FBIA,"10T")                          ; format to 10 characters
"RTN","FBAAV2",35,0)
 S FBDODINV=$P(Y(6),U,1)                                 ; DoD invoice#
"RTN","FBAAV2",36,0)
 S FBDODINV=$$LJ^XLFSTR(FBDODINV,"22T")                  ; format to 22 characters
"RTN","FBAAV2",37,0)
 ;
"RTN","FBAAV2",38,0)
 S FBVID=$P(FBVY0,U,2),FBVID=$E(FBVID,1,9)_$E(PAD,$L(FBVID)+1,9)
"RTN","FBAAV2",39,0)
 S FBCSN=$S($P(FBVY0,U,2)]"":$P(FBVY0,U,10),1:"")
"RTN","FBAAV2",40,0)
 S FBCSN=$E("0000",$L(FBCSN)+1,4)_FBCSN
"RTN","FBAAV2",41,0)
 I FBPAYT="R" S FBVID=$E(PAD,1,9),FBCSN=$E(PAD,1,4)
"RTN","FBAAV2",42,0)
 K FBVY0
"RTN","FBAAV2",43,0)
 ;
"RTN","FBAAV2",44,0)
 S FBRX=$P(Y(0),"^",1),FBRX=$E("00000000",$L(FBRX)+1,8)_FBRX
"RTN","FBAAV2",45,0)
 I '$L($G(FBAASN)) D STATION^FBAAUTL
"RTN","FBAAV2",46,0)
 S FBPSA=$$PSA^FBAAV5(+$P(Y(2),U,5),+FBAASN) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV2",47,0)
 S FBTD=$$AUSDT^FBAAV3($P(Y(0),"^",3))
"RTN","FBAAV2",48,0)
 S FBSUSP=$P(Y(0),"^",8),FBSUSP=$S(FBSUSP="":" ",$D(^FBAA(161.27,+FBSUSP,0)):$P(^(0),"^"),1:" ")
"RTN","FBAAV2",49,0)
 S FBAC=$$AUSAMT^FBAAV3($P(Y(0),"^",4),8)
"RTN","FBAAV2",50,0)
 S FBAP=$$AUSAMT^FBAAV3($P(Y(0),"^",16),8)
"RTN","FBAAV2",51,0)
 I FBAC=FBAP S FBAP="        "
"RTN","FBAAV2",52,0)
 S DFN=$P(Y(0),"^",5)
"RTN","FBAAV2",53,0)
 Q:'DFN
"RTN","FBAAV2",54,0)
 Q:'$D(^DPT(DFN,0))
"RTN","FBAAV2",55,0)
 ; Note: Prior to the following line Y(0) = the 0 node of subfile 161.11
"RTN","FBAAV2",56,0)
 ;After the line Y(0) will be the 0 node of file #2
"RTN","FBAAV2",57,0)
 S VAPA("P")="",Y(0)=^DPT(DFN,0) D PAT^FBAAUTL2,ADD^VADPT
"RTN","FBAAV2",58,0)
 S FBPNAMX=$$HL7NAME^FBAAV2(DFN)
"RTN","FBAAV2",59,0)
 S FBST=$S($P(VAPA(5),"^")="":"  ",$D(^DIC(5,$P(VAPA(5),"^"),0)):$P(^(0),"^",2),1:"  ")
"RTN","FBAAV2",60,0)
 I $L(FBST)>2 S FBST="**"
"RTN","FBAAV2",61,0)
 S:$L(FBST)'=2 FBST=$E(PAD,$L(FBST)+1,2)_FBST
"RTN","FBAAV2",62,0)
 S FBCTY=$S($P(VAPA(7),"^")="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^"),1,$P(VAPA(7),"^"),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV2",63,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV2",64,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV2",65,0)
 ;
"RTN","FBAAV2",66,0)
 ; get and format adjustment reason codes and amounts (if any)
"RTN","FBAAV2",67,0)
 D LOADADJ^FBRXFA(FBIENS,.FBADJ)
"RTN","FBAAV2",68,0)
 S FBX=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBAAV2",69,0)
 S FBADJR1=$$RJ^XLFSTR($P(FBX,U,1),5," ")
"RTN","FBAAV2",70,0)
 S FBADJA1=$$AUSAMT^FBAAV3($P(FBX,U,3),9,1)
"RTN","FBAAV2",71,0)
 S FBADJR2=$$RJ^XLFSTR($P(FBX,U,4),5," ")
"RTN","FBAAV2",72,0)
 S FBADJA2=$$AUSAMT^FBAAV3($P(FBX,U,6),9,1)
"RTN","FBAAV2",73,0)
 K FBADJ,FBX
"RTN","FBAAV2",74,0)
 ;
"RTN","FBAAV2",75,0)
 ; build 1st line
"RTN","FBAAV2",76,0)
 S FBSTR=5_FBAASN_FBSSN_FBPAYT_FBPNAMX_FBVID_FBCSN_FBAC_FBAP_FBAAON
"RTN","FBAAV2",77,0)
 S FBSTR=FBSTR_FBSUSP_FBTD_FBRX_FBDIN_FBINVN
"RTN","FBAAV2",78,0)
 S FBSTR=FBSTR_$E(PAD,1,33)_FBST_FBCTY_FBZIP ; reserved for foreign addr
"RTN","FBAAV2",79,0)
 S FBSTR=FBSTR_$E(FBPSA,1,3)_$P(FBY,U,2)_$E(PAD,1,8)
"RTN","FBAAV2",80,0)
 S FBSTR=FBSTR_$$PADZ^FBAAV01(FBPICN,30)_$$AUSDT^FBAAV3(+FBY)_"~"
"RTN","FBAAV2",81,0)
 D STORE^FBAAV01
"RTN","FBAAV2",82,0)
 ;
"RTN","FBAAV2",83,0)
 ; build 2nd line
"RTN","FBAAV2",84,0)
 S FBSTR=FBADJR1_FBADJR2_FBADJA1_FBADJA2_FBNPI_FBEDIF
"RTN","FBAAV2",85,0)
 S FBSTR=FBSTR_FBIA_FBDODINV_"~$"                          ; IPAC data from FB*3.5*123
"RTN","FBAAV2",86,0)
 D STORE^FBAAV01
"RTN","FBAAV2",87,0)
 Q
"RTN","FBAAV2",88,0)
 ;
"RTN","FBAAV2",89,0)
HL7NAME(FBDFN) ; return patient name formatted in a 35 character length string
"RTN","FBAAV2",90,0)
 N FBAR,FBNM
"RTN","FBAAV2",91,0)
 S FBAR("FILE")=2,FBAR("IENS")=FBDFN,FBAR("FIELD")=.01
"RTN","FBAAV2",92,0)
 S FBNM=$$HLNAME^XLFNAME(.FBAR,"L35","|")
"RTN","FBAAV2",93,0)
 Q $$LRJ^FBAAV4(FBNM,35)
"RTN","FBAAV5")
0^22^B101588501^B80128865
"RTN","FBAAV5",1,0)
FBAAV5 ;AISC/GRR - CREATE TRANSACTIONS FOR CH/CNH PAYMENTS ;11 Apr 2006  2:54 PM
"RTN","FBAAV5",2,0)
 ;;3.5;FEE BASIS;**3,55,89,98,116,108,139,123**;JAN 30, 1995;Build 51
"RTN","FBAAV5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAV5",4,0)
 ;
"RTN","FBAAV5",5,0)
 ; Reference to API $$CODEABA^ICDEX supported by ICR #5747
"RTN","FBAAV5",6,0)
 ;
"RTN","FBAAV5",7,0)
 D CKB9V^FBAAV01 I $G(FBERR) K FBERR Q
"RTN","FBAAV5",8,0)
 G:FBSTAT="S"&(FBCHB="Y")&($P(Y(0),"^",18)'="Y") ^FBAAV6
"RTN","FBAAV5",9,0)
DETCH S FBTXT=0
"RTN","FBAAV5",10,0)
 ; HIPAA 5010 - line items that have 0.00 amount paid are now required to go to Central Fee
"RTN","FBAAV5",11,0)
 F K=0:0 S K=$O(^FBAAI("AC",J,K)) Q:K'>0  S Y(0)=$G(^FBAAI(K,0)),Y(2)=$G(^(2)),Y(5)=$G(^(5)) I Y(0)]"" D
"RTN","FBAAV5",12,0)
 .N FBPICN,FBY
"RTN","FBAAV5",13,0)
 .S FBPICN=K
"RTN","FBAAV5",14,0)
 .S FBY=$S($P(Y(2),U,2):$P(Y(2),U,2),1:$P(Y(0),U,2))_U_+$P(Y(2),U,3)
"RTN","FBAAV5",15,0)
 .I 'FBTXT S FBTXT=1 D NEWMSG^FBAAV01,STORE^FBAAV01,UPD^FBAAV0
"RTN","FBAAV5",16,0)
 .D GOT
"RTN","FBAAV5",17,0)
 D:FBTXT XMIT^FBAAV01 Q
"RTN","FBAAV5",18,0)
GOT ; process an inpatient invoice
"RTN","FBAAV5",19,0)
 N DFN,FBADJ,FBADJA,FBADJR,FBADMIT,FBAUTHF,FBCDAYS,FBDISDT,FBDISTY,FBNPI
"RTN","FBAAV5",20,0)
 N FBDRG,FBIENS,FBPA,FBPNAMX,FBVMID,FBX
"RTN","FBAAV5",21,0)
 N FB4LN,FBADMTDX,FBCSVDT,FBCSID,FBEDIF,FBCNTRN
"RTN","FBAAV5",22,0)
 N FBIA,FBDODINV
"RTN","FBAAV5",23,0)
 S FBIENS=K_","
"RTN","FBAAV5",24,0)
 S FBCSVDT=$$FRDTINV^FBCSV1(K)
"RTN","FBAAV5",25,0)
 I '$L($G(FBAASN)) D STATION^FBAAUTL
"RTN","FBAAV5",26,0)
 S FBPSA=$$PSA(+$P(Y(0),U,20),+$G(FBAASN)) I $L(+FBPSA)'=3 S FBPSA=999
"RTN","FBAAV5",27,0)
 S FBPAYT=$P(Y(0),"^",13),FBPAYT=$S(FBPAYT]"":FBPAYT,1:"V")
"RTN","FBAAV5",28,0)
 S L=$P(Y(0),"^",3)
"RTN","FBAAV5",29,0)
 S FBVID=$S($D(^FBAAV(L,0)):$P(^(0),"^",2),1:"")
"RTN","FBAAV5",30,0)
 ;
"RTN","FBAAV5",31,0)
 ; FB*3.5*123 - gather and format IPAC agreement ID and DoD invoice# for federal vendors
"RTN","FBAAV5",32,0)
 S FBIA=+$P(Y(5),U,10)                                   ; IPAC vendor agreement pointer (FB*3.5*123)
"RTN","FBAAV5",33,0)
 S FBIA=$S(FBIA:$P($G(^FBAA(161.95,FBIA,0)),U,1),1:"")   ; IPAC external agreement ID# or ""
"RTN","FBAAV5",34,0)
 S FBDODINV=$P(Y(5),U,7)                                 ; DoD invoice#
"RTN","FBAAV5",35,0)
 I $$IPACREQD^FBAAMP(L) D
"RTN","FBAAV5",36,0)
 . N FBIPIEN
"RTN","FBAAV5",37,0)
 . ;
"RTN","FBAAV5",38,0)
 . ; If IPAC is required, but IPAC ID is not on file, and only 1 active IPAC agreement exists, then save it/use it
"RTN","FBAAV5",39,0)
 . I FBIA="" S FBIA=$$IPACID^FBAAMP(L,.FBIPIEN) I FBIA'="",FBIPIEN D
"RTN","FBAAV5",40,0)
 .. N FBIAFDA
"RTN","FBAAV5",41,0)
 .. S FBIAFDA(162.5,FBIENS,87)=FBIPIEN    ; ipac vendor agreement ien
"RTN","FBAAV5",42,0)
 .. D FILE^DIE("","FBIAFDA")              ; update the database
"RTN","FBAAV5",43,0)
 .. Q
"RTN","FBAAV5",44,0)
 . I FBIA="" S FBIA="9999999999"          ; if still not found, send error condition to Central Fee
"RTN","FBAAV5",45,0)
 . ;
"RTN","FBAAV5",46,0)
 . ; if IPAC is required, but DoD invoice# is not on file, then attempt to use PATIENT CONTROL NUMBER (field# 55)
"RTN","FBAAV5",47,0)
 . I FBDODINV="" S FBDODINV=$P(Y(2),U,11) I FBDODINV'="" D
"RTN","FBAAV5",48,0)
 .. N FBIAFDA
"RTN","FBAAV5",49,0)
 .. S FBIAFDA(162.5,FBIENS,86)=FBDODINV   ; DoD invoice# field
"RTN","FBAAV5",50,0)
 .. D FILE^DIE("","FBIAFDA")              ; update the database
"RTN","FBAAV5",51,0)
 .. Q
"RTN","FBAAV5",52,0)
 . I FBDODINV="" S FBDODINV="9999999999999999999999"  ; if still not found, send error condition to Central Fee
"RTN","FBAAV5",53,0)
 . Q
"RTN","FBAAV5",54,0)
 ;
"RTN","FBAAV5",55,0)
 S FBIA=$$LJ^XLFSTR(FBIA,"10T")                          ; format IPAC agreement ID to 10 characters
"RTN","FBAAV5",56,0)
 S FBDODINV=$$LJ^XLFSTR(FBDODINV,"22T")                  ; format DoD invoice# to 22 characters
"RTN","FBAAV5",57,0)
 ;
"RTN","FBAAV5",58,0)
 S FBNPI=$$EN^FBNPILK(L)
"RTN","FBAAV5",59,0)
 S FBVID=FBVID_$E(PAD,$L(FBVID)+1,11)
"RTN","FBAAV5",60,0)
 S:FBPAYT="R" FBVID=$E(PAD,1,11)
"RTN","FBAAV5",61,0)
 S FBVMID=$S($D(^FBAAV(L,0)):$P(^(0),"^",17),1:"")
"RTN","FBAAV5",62,0)
 S FBVMID=$E(PAD,$L(FBVMID)+1,6)_FBVMID
"RTN","FBAAV5",63,0)
 S POV=$P(Y(0),"^",18)
"RTN","FBAAV5",64,0)
 S POV=$S(POV']"":"",POV="A":6,POV="B":7,POV="C":8,POV="D":9,POV="E":10,1:POV),POV=$S(POV']"":40,$D(^FBAA(161.82,POV,0)):$P(^(0),"^",3),1:40),FBPOV=POV
"RTN","FBAAV5",65,0)
 S FBPATT=$P(Y(0),"^",19),FBPATT=$S(FBPATT]"":FBPATT,1:10)
"RTN","FBAAV5",66,0)
 S FBFTD=$$AUSDT^FBAAV3($P(Y(0),"^",6)) ; from treatment date
"RTN","FBAAV5",67,0)
 S FBTTD=$$AUSDT^FBAAV3($P(Y(0),"^",7)) ; to treatment date
"RTN","FBAAV5",68,0)
 S FBSUSP=$P(Y(0),"^",11),FBSUSP=$S(FBSUSP="":" ",$D(^FBAA(161.27,FBSUSP,0)):$P(^(0),"^",1),1:" ")
"RTN","FBAAV5",69,0)
 S FBINVN=$P(Y(0),"^",1)
"RTN","FBAAV5",70,0)
 S FBINVN=$E("000000000",$L(FBINVN)+1,9)_FBINVN
"RTN","FBAAV5",71,0)
 S FBDIN=$$AUSDT^FBAAV3($P(Y(0),"^",2)) ; invoice date rec'd
"RTN","FBAAV5",72,0)
 S FBAP=$$AUSAMT^FBAAV3($P(Y(0),"^",9),9)
"RTN","FBAAV5",73,0)
 S FBAC=$$AUSAMT^FBAAV3($P(Y(0),"^",8),9)
"RTN","FBAAV5",74,0)
 S FBPA=$$AUSAMT^FBAAV3($P(Y(0),"^",26),9)
"RTN","FBAAV5",75,0)
 S FBDRG=$P(Y(0),"^",24),FBDRG=$E(PAD,$L(FBDRG)+1,4)_FBDRG
"RTN","FBAAV5",76,0)
 S FBAUTHF=$S($P(Y(0),U,5)["FB583":"U",1:"A") ; auth/unauth flag
"RTN","FBAAV5",77,0)
 S FBCSID=$$LJ^XLFSTR($P(Y(2),"^",11),20," ") ; patient acct #
"RTN","FBAAV5",78,0)
 S FBADMTDX=$P(Y(5),"^",9) ; admitting Dx pointer
"RTN","FBAAV5",79,0)
 D
"RTN","FBAAV5",80,0)
 . N FBCNTRP
"RTN","FBAAV5",81,0)
 . S FBCNTRP=$P(Y(5),"^",8)
"RTN","FBAAV5",82,0)
 . S FBCNTRN=$S(FBCNTRP:$P($G(^FBAA(161.43,FBCNTRP,0)),"^"),1:"")
"RTN","FBAAV5",83,0)
 . S FBCNTRN=$$LJ^XLFSTR(FBCNTRN,20," ") ; contract number
"RTN","FBAAV5",84,0)
 S FBEDIF=$S($P($G(^FBAAI(K,3)),"^")]"":"Y",1:" ") ;EDI flag
"RTN","FBAAV5",85,0)
 ;
"RTN","FBAAV5",86,0)
 K FBDX
"RTN","FBAAV5",87,0)
 S FBDX(0)="       " ; initialize admitting Dx transmitted value to 7 spaces
"RTN","FBAAV5",88,0)
 F M=1:1:25 S FBDX(M)="        "  ;8 spaces
"RTN","FBAAV5",89,0)
 I FBADMTDX D
"RTN","FBAAV5",90,0)
 . N FBX
"RTN","FBAAV5",91,0)
 . S FBX=$$ICD9^FBCSV1(FBADMTDX,FBCSVDT)
"RTN","FBAAV5",92,0)
 . Q:FBX=""
"RTN","FBAAV5",93,0)
 . ;DEM;139 ICD-10 Project - decimal is stripped only from ICD-10 diagnosis codes and not ICD-9 diagnosis codes.
"RTN","FBAAV5",94,0)
 . I $$CODEABA^ICDEX(FBX,80,30)>0 S:FBX["." FBX=$P(FBX,".",1)_$P(FBX,".",2)  ;DEM;139 ICD-10 Project
"RTN","FBAAV5",95,0)
 . S FBDX(0)=FBX_$E("       ",$L(FBX)+1,7)
"RTN","FBAAV5",96,0)
 S FBYDX=$G(^FBAAI(K,"DX")),FBYPOA=$G(^FBAAI(K,"POA"))
"RTN","FBAAV5",97,0)
 F M=1:1:25 Q:$P(FBYDX,"^",M)=""  D
"RTN","FBAAV5",98,0)
 . S FBDX(M)=$$DX($P(FBYDX,"^",M),FBCSVDT,$P(FBYPOA,"^",M))
"RTN","FBAAV5",99,0)
 K FBYDX,FBYPOA
"RTN","FBAAV5",100,0)
 ;
"RTN","FBAAV5",101,0)
 K FBPRC
"RTN","FBAAV5",102,0)
 F M=1:1:25 S FBPRC(M)="       "  ;7 SPACES
"RTN","FBAAV5",103,0)
 S FBYPROC=$G(^FBAAI(K,"PROC"))
"RTN","FBAAV5",104,0)
 F M=1:1:25 Q:$P(FBYPROC,"^",M)=""  D
"RTN","FBAAV5",105,0)
 . S FBPRC(M)=$$PROC($P(FBYPROC,"^",M),FBCSVDT)
"RTN","FBAAV5",106,0)
 K FBYPROC
"RTN","FBAAV5",107,0)
 ;
"RTN","FBAAV5",108,0)
 S DFN=$P(Y(0),"^",4)
"RTN","FBAAV5",109,0)
 ; Note: Prior to the following line Y(0) = the 0 node of file 162.5
"RTN","FBAAV5",110,0)
 ;After the line Y(0) will equal the 0 node of file #2
"RTN","FBAAV5",111,0)
 S VAPA("P")="",Y(0)=$S($D(^DPT(DFN,0)):^(0),1:"")
"RTN","FBAAV5",112,0)
 D PAT^FBAAUTL2
"RTN","FBAAV5",113,0)
 ; obtain date of birth, must follow call to PAT^FBAAUTL2 to overwrite 
"RTN","FBAAV5",114,0)
 ; the value returned from it
"RTN","FBAAV5",115,0)
 S FBDOB=$$AUSDT^FBAAV3($P(Y(0),"^",3))
"RTN","FBAAV5",116,0)
 D ADD^VADPT
"RTN","FBAAV5",117,0)
 S FBPNAMX=$$HL7NAME^FBAAV2(DFN) ; patient name
"RTN","FBAAV5",118,0)
 S FBST=$S($P(VAPA(5),"^",1)="":"  ",$D(^DIC(5,$P(VAPA(5),"^",1),0)):$P(^(0),"^",2),1:"  ")
"RTN","FBAAV5",119,0)
 I $L(FBST)>2 S FBST="**"
"RTN","FBAAV5",120,0)
 S:$L(FBST)'=2 FBST=$E(PAD,$L(FBST)+1,2)_FBST
"RTN","FBAAV5",121,0)
 S FBCTY=$S($P(VAPA(7),"^",1)="":"   ",FBST="  ":"   ",$D(^DIC(5,$P(VAPA(5),"^",1),1,$P(VAPA(7),"^",1),0)):$P(^(0),"^",3),1:"   ")
"RTN","FBAAV5",122,0)
 I $L(FBCTY)'=3 S FBCTY=$E("000",$L(FBCTY)+1,3)_FBCTY
"RTN","FBAAV5",123,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),U),1:VAPA(6)),FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV5",124,0)
 S FBADMIT=$$AUSDT^FBAAV3($P($$B9ADMIT(FBIENS),".")) ; admission date
"RTN","FBAAV5",125,0)
 ; get and format discharge date and type
"RTN","FBAAV5",126,0)
 S FBX=$$B9DISCHG(FBIENS)
"RTN","FBAAV5",127,0)
 S FBDISDT=$$AUSDT^FBAAV3($P($P(FBX,U),".")) ; discharge date
"RTN","FBAAV5",128,0)
 S FBDISTY=$$RJ^XLFSTR($P(FBX,U,2),3,0) ; discharge type
"RTN","FBAAV5",129,0)
 K FBX
"RTN","FBAAV5",130,0)
 ; get volume indicator (covered days)
"RTN","FBAAV5",131,0)
 S FBCDAYS=$$RJ^XLFSTR($$GET1^DIQ(162.5,FBIENS,54),5,"0")
"RTN","FBAAV5",132,0)
 ; obtain and format the adjustment codes and amounts
"RTN","FBAAV5",133,0)
 ; get and format adjustment reason codes and amounts (if any)
"RTN","FBAAV5",134,0)
 D LOADADJ^FBCHFA(FBIENS,.FBADJ)
"RTN","FBAAV5",135,0)
 S FBX=$$ADJL^FBUTL2(.FBADJ)
"RTN","FBAAV5",136,0)
 S FBADJR=$$RJ^XLFSTR($P(FBX,U,1),5," ")
"RTN","FBAAV5",137,0)
 S FBADJA=$$AUSAMT^FBAAV3($P(FBX,U,3),10,1)
"RTN","FBAAV5",138,0)
 K FBADJ,FBX
"RTN","FBAAV5",139,0)
 ;
"RTN","FBAAV5",140,0)
 ; determine if 4th line needed (set FB4LN =1 when true)
"RTN","FBAAV5",141,0)
 S FB4LN=1 I FBDX(11)="        ",FBPRC(11)="       " S FB4LN=0
"RTN","FBAAV5",142,0)
 ;
"RTN","FBAAV5",143,0)
 ; build 1st line
"RTN","FBAAV5",144,0)
 S FBSTR=9_FBAASN_FBSSN_FBPAYT_FBPNAMX_FBVID_"  "_FBAP_FBAAON_FBSUSP
"RTN","FBAAV5",145,0)
 S FBSTR=FBSTR_FBPOV_FBPATT_FBFTD_FBTTD_FBDIN_FBINVN_FBVMID
"RTN","FBAAV5",146,0)
 S FBSTR=FBSTR_$E(PAD,1,33)_FBST_FBCTY_FBZIP ; reserved for foreign addr
"RTN","FBAAV5",147,0)
 S FBSTR=FBSTR_FBPSA_$P(FBY,U,2)_$E(PAD,1,14)
"RTN","FBAAV5",148,0)
 F I=1:1:5 S FBSTR=FBSTR_FBDX(I)
"RTN","FBAAV5",149,0)
 S FBSTR=FBSTR_"~"
"RTN","FBAAV5",150,0)
 D STORE^FBAAV01
"RTN","FBAAV5",151,0)
 ;
"RTN","FBAAV5",152,0)
 ; build 2nd line
"RTN","FBAAV5",153,0)
 S FBSTR=$$PADZ^FBAAV01(FBPICN,23)_$$AUSDT^FBAAV3(+FBY)
"RTN","FBAAV5",154,0)
 F I=1:1:5 S FBSTR=FBSTR_FBPRC(I)
"RTN","FBAAV5",155,0)
 S FBSTR=FBSTR_FBAC_FBPA_FBDRG_" "_FBADMIT_FBDISDT_FBDOB_FBDISTY_FBCDAYS_FBAUTHF_FBADJR_FBADJA_FBNPI_FBDX(0)_FBCSID_FBEDIF_FBCNTRN
"RTN","FBAAV5",156,0)
 S FBSTR=FBSTR_FBIA_FBDODINV_"~"                          ; IPAC data from FB*3.5*123
"RTN","FBAAV5",157,0)
 D STORE^FBAAV01
"RTN","FBAAV5",158,0)
 ;
"RTN","FBAAV5",159,0)
 ; build 3rd line
"RTN","FBAAV5",160,0)
 S FBSTR=""
"RTN","FBAAV5",161,0)
 F I=6:1:10 S FBSTR=FBSTR_FBDX(I)
"RTN","FBAAV5",162,0)
 F I=6:1:10 S FBSTR=FBSTR_FBPRC(I)
"RTN","FBAAV5",163,0)
 S FBSTR=FBSTR_"~"
"RTN","FBAAV5",164,0)
 S:'FB4LN FBSTR=FBSTR_"$"
"RTN","FBAAV5",165,0)
 D STORE^FBAAV01
"RTN","FBAAV5",166,0)
 ;
"RTN","FBAAV5",167,0)
 ; build 4th line (if needed)
"RTN","FBAAV5",168,0)
 I FB4LN D
"RTN","FBAAV5",169,0)
 . S FBSTR=""
"RTN","FBAAV5",170,0)
 . F I=11:1:25 S FBSTR=FBSTR_FBDX(I)
"RTN","FBAAV5",171,0)
 . F I=11:1:25 S FBSTR=FBSTR_FBPRC(I)
"RTN","FBAAV5",172,0)
 . S FBSTR=FBSTR_"~$"
"RTN","FBAAV5",173,0)
 . D STORE^FBAAV01
"RTN","FBAAV5",174,0)
 Q
"RTN","FBAAV5",175,0)
 ;
"RTN","FBAAV5",176,0)
PSA(X,Y) ;call to set default Primary Service Area (PSA)
"RTN","FBAAV5",177,0)
 ;to send to Austin.
"RTN","FBAAV5",178,0)
 ;X = pointer to the institution file
"RTN","FBAAV5",179,0)
 ;Y = default if unable to determine station number in file 4
"RTN","FBAAV5",180,0)
 ;call returns the 3 digit station number only
"RTN","FBAAV5",181,0)
 ;if Y undef return '0'
"RTN","FBAAV5",182,0)
 I '$G(Y) S Y=0
"RTN","FBAAV5",183,0)
 Q $S('X:+Y,$E($P($G(^DIC(4,+X,99)),U),1,3)'?3N:+Y,1:$E($P($G(^(99)),U),1,3))
"RTN","FBAAV5",184,0)
 ;
"RTN","FBAAV5",185,0)
B9ADMIT(FBIENS) ; Determine Admission Date for a B9 payment
"RTN","FBAAV5",186,0)
 ; input
"RTN","FBAAV5",187,0)
 ;   FBIENS
"RTN","FBAAV5",188,0)
 ; returns admission date in internal FileMan format or null value
"RTN","FBAAV5",189,0)
 N FB7078,FBRET
"RTN","FBAAV5",190,0)
 S FBRET=""  ;NULL
"RTN","FBAAV5",191,0)
 ;
"RTN","FBAAV5",192,0)
 S FB7078=$$GET1^DIQ(162.5,FBIENS,4,"I") ; associated 7078/583
"RTN","FBAAV5",193,0)
 ;
"RTN","FBAAV5",194,0)
 ; if invoice points to a 7078 authorization then get date from the 7078
"RTN","FBAAV5",195,0)
 I $P(FB7078,";",2)="FB7078(" D
"RTN","FBAAV5",196,0)
 . N FBY
"RTN","FBAAV5",197,0)
 . S FBY=$G(^FB7078(+FB7078,0))
"RTN","FBAAV5",198,0)
 . ; if fee program is civil hospital then return 7078 date of admission
"RTN","FBAAV5",199,0)
 . I $P(FBY,U,11)=6 S FBRET=$P(FBY,U,15)
"RTN","FBAAV5",200,0)
 . ; if fee program is CNH then return 7078 authorized from date
"RTN","FBAAV5",201,0)
 . I $P(FBY,U,11)=7 S FBRET=$P(FBY,U,4)
"RTN","FBAAV5",202,0)
 ;
"RTN","FBAAV5",203,0)
 ; if invoice points to an unauthorized claim then use the treatment from
"RTN","FBAAV5",204,0)
 ;   date on the unauthorized claim
"RTN","FBAAV5",205,0)
 I $P(FB7078,";",2)="FB583(" D
"RTN","FBAAV5",206,0)
 . N FBY
"RTN","FBAAV5",207,0)
 . S FBY=$G(^FB583(+FB7078,0))
"RTN","FBAAV5",208,0)
 . S FBRET=$P(FBY,U,5)
"RTN","FBAAV5",209,0)
 ;
"RTN","FBAAV5",210,0)
 ; return the result
"RTN","FBAAV5",211,0)
 Q FBRET
"RTN","FBAAV5",212,0)
 ;
"RTN","FBAAV5",213,0)
B9DISCHG(FBIENS) ; Determine Discharge Date and Type for a B9 payment
"RTN","FBAAV5",214,0)
 ; input
"RTN","FBAAV5",215,0)
 ;   FBIENS - Invoice IEN (file 162.5) with trailing comma
"RTN","FBAAV5",216,0)
 ; returns discharge date in internal FileMan format or null value and
"RTN","FBAAV5",217,0)
 ; discharge type or null value
"RTN","FBAAV5",218,0)
 N FB7078,FBDISDT,FBDISTY
"RTN","FBAAV5",219,0)
 S (FBDISDT,FBDISTY)=""
"RTN","FBAAV5",220,0)
 ;
"RTN","FBAAV5",221,0)
 S FB7078=$$GET1^DIQ(162.5,FBIENS,4,"I") ; associated 7078/583
"RTN","FBAAV5",222,0)
 ;
"RTN","FBAAV5",223,0)
 ; if invoice points to an unauthorized claim then use the treatment to
"RTN","FBAAV5",224,0)
 ;   date on the unauthorized claim
"RTN","FBAAV5",225,0)
 I $P(FB7078,";",2)="FB583(" D
"RTN","FBAAV5",226,0)
 . N FBY
"RTN","FBAAV5",227,0)
 . S FBY=$G(^FB583(+FB7078,0))
"RTN","FBAAV5",228,0)
 . S FBDISDT=$P(FBY,U,6)
"RTN","FBAAV5",229,0)
 . S FBDISTY=$$GET1^DIQ(162.5,FBIENS,"6.5:1") ; discharge type
"RTN","FBAAV5",230,0)
 ;
"RTN","FBAAV5",231,0)
 ; if invoice points to a 7078 authorization then get date from the 7078
"RTN","FBAAV5",232,0)
 I $P(FB7078,";",2)="FB7078(" D
"RTN","FBAAV5",233,0)
 . N FBY
"RTN","FBAAV5",234,0)
 . S FBY=$G(^FB7078(+FB7078,0))
"RTN","FBAAV5",235,0)
 . ;
"RTN","FBAAV5",236,0)
 . ; if fee program is civil hospital then return 7078 date of discharge
"RTN","FBAAV5",237,0)
 . I $P(FBY,U,11)=6 D
"RTN","FBAAV5",238,0)
 . . S FBDISDT=$P(FBY,U,16) ; discharge date
"RTN","FBAAV5",239,0)
 . . S FBDISTY=$$GET1^DIQ(162.5,FBIENS,"6.5:1") ; discharge type
"RTN","FBAAV5",240,0)
 . ;
"RTN","FBAAV5",241,0)
 . ; if fee program is CNH then get date & type from CNH activity file
"RTN","FBAAV5",242,0)
 . I $P(FBY,U,11)=7 D
"RTN","FBAAV5",243,0)
 . . N DFN,FBADMIT,FBADMITR,FBACTA,FBAUTHP,FBDA,FBDTR
"RTN","FBAAV5",244,0)
 . . S DFN=$P(FBY,U,3) ; patient IEN
"RTN","FBAAV5",245,0)
 . . S FBADMIT=$P($P(FBY,U,4),".") ; CNH admission date
"RTN","FBAAV5",246,0)
 . . S FBAUTHP=+$O(^FBAAA("AG",FB7078,DFN,0)) ; authorization 'pointer'
"RTN","FBAAV5",247,0)
 . . ;
"RTN","FBAAV5",248,0)
 . . ; find the admission entry in CNH ACTIVITY file   
"RTN","FBAAV5",249,0)
 . . S FBACTA=0 ; init the admission activity ien
"RTN","FBAAV5",250,0)
 . . S FBADMITR=9999999-FBADMIT ; reverse admission date
"RTN","FBAAV5",251,0)
 . . S FBDTR=9999999-$$FMADD^XLFDT(FBADMIT,1) ; start loop
"RTN","FBAAV5",252,0)
 . . F  S FBDTR=$O(^FBAACNH("AF",DFN,FBDTR)) Q:'FBDTR!($P(FBDTR,".")>FBADMITR)  D  Q:FBACTA
"RTN","FBAAV5",253,0)
 . . . S FBDA=0 F  S FBDA=$O(^FBAACNH("AF",DFN,FBDTR,FBDA)) Q:'FBDA  D
"RTN","FBAAV5",254,0)
 . . . . S FBY=$G(^FBAACNH(FBDA,0))
"RTN","FBAAV5",255,0)
 . . . . I $P(FBY,U,3)="A",$P(FBY,U,10)=FBAUTHP S FBACTA=FBDA ; found it
"RTN","FBAAV5",256,0)
 . . Q:'FBACTA  ; could not find the admission activity
"RTN","FBAAV5",257,0)
 . . ;
"RTN","FBAAV5",258,0)
 . . ; get date from associated discharge (if any) in CNH ACTIVITY file
"RTN","FBAAV5",259,0)
 . . S FBDA=" "
"RTN","FBAAV5",260,0)
 . . F  S FBDA=$O(^FBAACNH("AC",FBACTA,FBDA),-1) Q:FBDA'>0  D  Q:FBDISDT
"RTN","FBAAV5",261,0)
 . . . S FBY=$G(^FBAACNH(FBDA,0))
"RTN","FBAAV5",262,0)
 . . . I $P(FBY,U,3)="D" D
"RTN","FBAAV5",263,0)
 . . . . S FBDISDT=$P($P(FBY,U),".")
"RTN","FBAAV5",264,0)
 . . . . S FBDISTY=$P(FBY,U,8)
"RTN","FBAAV5",265,0)
 . . . . I FBDISTY'="" S FBDISTY=FBDISTY+100
"RTN","FBAAV5",266,0)
 ;
"RTN","FBAAV5",267,0)
 ; return the result
"RTN","FBAAV5",268,0)
 Q FBDISDT_"^"_FBDISTY
"RTN","FBAAV5",269,0)
 ;
"RTN","FBAAV5",270,0)
DX(FBDX,FBDATE,FBPOA) ; format diagnosis & POA for B9
"RTN","FBAAV5",271,0)
 ; Input
"RTN","FBAAV5",272,0)
 ;   FBDX   = pointer to file 80 (ICD diagnosis)
"RTN","FBAAV5",273,0)
 ;   FBDATE = fileman date
"RTN","FBAAV5",274,0)
 ;   FBPOA  = (optional) poiner to file 161.94 (present on admission)
"RTN","FBAAV5",275,0)
 ; Returns formatted string of 8 characters
"RTN","FBAAV5",276,0)
 N FBRET,FBX,FBX2
"RTN","FBAAV5",277,0)
 S FBRET="        "
"RTN","FBAAV5",278,0)
 I FBDX D
"RTN","FBAAV5",279,0)
 . S FBX=$$ICD9^FBCSV1(FBDX,FBDATE)
"RTN","FBAAV5",280,0)
 . Q:FBX=""
"RTN","FBAAV5",281,0)
 . ;DEM;139 ICD-10 Project - decimal is stripped only from ICD-10 diagnosis codes and not ICD-9 diagnosis codes.
"RTN","FBAAV5",282,0)
 . I $$CODEABA^ICDEX(FBX,80,30)>0 S:FBX["." FBX=$P(FBX,".",1)_$P(FBX,".",2)  ;DEM;139 ICD-10 Project
"RTN","FBAAV5",283,0)
 . S FBX=FBX_$E("       ",$L(FBX)+1,7)
"RTN","FBAAV5",284,0)
 . S FBX2=$S($G(FBPOA):$P($G(^FB(161.94,FBPOA,0)),"^"),1:"")
"RTN","FBAAV5",285,0)
 . S:FBX2="" FBX2=" "
"RTN","FBAAV5",286,0)
 . S FBRET=FBX_FBX2
"RTN","FBAAV5",287,0)
 Q FBRET
"RTN","FBAAV5",288,0)
 ;
"RTN","FBAAV5",289,0)
PROC(FBPROC,FBDATE) ; format procedure for B9
"RTN","FBAAV5",290,0)
 ; Input
"RTN","FBAAV5",291,0)
 ;   FBPROC = pointer to file 80.1 (ICD operation/procedure)
"RTN","FBAAV5",292,0)
 ;   FBDATE = fileman date
"RTN","FBAAV5",293,0)
 ; Returns formatted string of 7 characters
"RTN","FBAAV5",294,0)
 N FBRET,FBX
"RTN","FBAAV5",295,0)
 S FBRET="       "
"RTN","FBAAV5",296,0)
 I FBPROC D
"RTN","FBAAV5",297,0)
 . S FBX=$$ICD0^FBCSV1(FBPROC,FBDATE)
"RTN","FBAAV5",298,0)
 . Q:FBX=""
"RTN","FBAAV5",299,0)
 . S FBX=FBX_$E("       ",$L(FBX)+1,7)
"RTN","FBAAV5",300,0)
 . S FBRET=FBX
"RTN","FBAAV5",301,0)
 Q FBRET
"RTN","FBAAV5",302,0)
 ;
"RTN","FBAAV5",303,0)
 ;FBAAV5
"RTN","FBAAV8")
0^6^B119931377^n/a
"RTN","FBAAV8",1,0)
FBAAV8 ;ALB/FA - BUILD IPAC MRA MESSAGE ;18 Dec 2013 10:04 AM
"RTN","FBAAV8",2,0)
 ;;3.5;FEE BASIS;**123**;JAN 30, 1995;Build 51
"RTN","FBAAV8",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAAV8",4,0)
 ;
"RTN","FBAAV8",5,0)
 ;
"RTN","FBAAV8",6,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAV8",7,0)
 ;                           Entry Points
"RTN","FBAAV8",8,0)
 ; EN  - Transmit IPAC MRA Messages
"RTN","FBAAV8",9,0)
 ;       NOTE: (actually called from first line of routine)
"RTN","FBAAV8",10,0)
 ;-----------------------------------------------------------------------------
"RTN","FBAAV8",11,0)
 ;
"RTN","FBAAV8",12,0)
EN ;EP
"RTN","FBAAV8",13,0)
 ; Transmit IPAC MRA messages
"RTN","FBAAV8",14,0)
 ; Input:       FBFEE       - Current # of FEE messages
"RTN","FBAAV8",15,0)
 ; Output:      IPAC MRA messages Transmitted
"RTN","FBAAV8",16,0)
 ;              FBFEE       - Updated # of FEE messages
"RTN","FBAAV8",17,0)
 ;              FBNVP       - 1 (if its not already set)
"RTN","FBAAV8",18,0)
 ;              FBSITE      - Array Fee Basis Site Parameters (161.4)
"RTN","FBAAV8",19,0)
 ;                            (if not already passed in)
"RTN","FBAAV8",20,0)
 ; Called From: RTRAN@FBAAV0
"RTN","FBAAV8",21,0)
 N FBMSG,FBLN,FBSN,FBTXT,FBXMZ,MARIEN,X,ZMCNT
"RTN","FBAAV8",22,0)
 S ZMCNT=0,FBTXT=0,FBLN=0
"RTN","FBAAV8",23,0)
 S MRAIEN=""
"RTN","FBAAV8",24,0)
 F  D  Q:MRAIEN=""
"RTN","FBAAV8",25,0)
 . S MRAIEN=$O(^FBAA(161.96,"AS","P",MRAIEN))
"RTN","FBAAV8",26,0)
 . Q:MRAIEN=""
"RTN","FBAAV8",27,0)
 . Q:'$$EN1(MRAIEN,.FBMSG,.FBTXT,.FBLN,.FBSN,.FBXMZ,.ZMCNT)  ; Build Message
"RTN","FBAAV8",28,0)
 ;
"RTN","FBAAV8",29,0)
 Q:'$D(FBMSG)                                   ; No more records to transmit
"RTN","FBAAV8",30,0)
 D XMIT^FBAAV01                                 ; Transmit data remaining records
"RTN","FBAAV8",31,0)
 D MRAUPDT(.FBMSG)                              ; Update MRA records with transmission date
"RTN","FBAAV8",32,0)
 Q
"RTN","FBAAV8",33,0)
 ;
"RTN","FBAAV8",34,0)
EN1(MRAIEN,FBMSG,FBTXT,FBLN,FBSN,FBXMZ,ZMCNT) ; Build the message lines for the specified
"RTN","FBAAV8",35,0)
 ; MRA Record.
"RTN","FBAAV8",36,0)
 ; Input:       MRAIEN  - IEN of the IPAC MRA record being sent
"RTN","FBAAV8",37,0)
 ;              FBMSG   - Current Array of the MRA records that have currently been built
"RTN","FBAAV8",38,0)
 ;                        for transmission, sorted by message number
"RTN","FBAAV8",39,0)
 ;              FBTXT   - 0 - Header message not yet built
"RTN","FBAAV8",40,0)
 ;                        1 - Header message already built
"RTN","FBAAV8",41,0)
 ;              FBLN    - Current Line count
"RTN","FBAAV8",42,0)
 ;              FBSN    - 6 character (blank padded) station number or "" if not yet set
"RTN","FBAAV8",43,0)
 ;              FBXMZ   - Current Message Number, "" if no header has been built yet
"RTN","FBAAV8",44,0)
 ;              ZMCNT   - Current total line count
"RTN","FBAAV8",45,0)
 ; Output:      FBMSG   - Updated Array of the MRA records that have currently been built
"RTN","FBAAV8",46,0)
 ;                        for transmission, sorted by message number
"RTN","FBAAV8",47,0)
 ;              FBTXT   - Updated to 1 if it was initially 0 to indicate that the
"RTN","FBAAV8",48,0)
 ;                        IPAC MRA message header line was built
"RTN","FBAAV8",49,0)
 ;              FBLN    - Updated Line count
"RTN","FBAAV8",50,0)
 ;              FBSN    - 6 character (blank padded) station number
"RTN","FBAAV8",51,0)
 ;              FBXMZ   - Updated Message Number (only updated if HEAD is called)
"RTN","FBAAV8",52,0)
 ;              ZMCNT   - Updated total line count
"RTN","FBAAV8",53,0)
 ; Returns:     1 - Message is built for the specified MRA record, 0 otherwise
"RTN","FBAAV8",54,0)
 ; Called From: EN
"RTN","FBAAV8",55,0)
 N IX1,VAIEN
"RTN","FBAAV8",56,0)
 S VAIEN=$P(^FBAA(161.96,MRAIEN,0),U,2)                 ; IEN of the selected IPAC agreement
"RTN","FBAAV8",57,0)
 I VAIEN'="",'$D(^FBAA(161.95,VAIEN)) Q 0               ; Invalid IPAC Agreement IEN
"RTN","FBAAV8",58,0)
 S FBMSG(MRAIEN)=""                                     ; Log the MRA record to be transmitted
"RTN","FBAAV8",59,0)
 D LNBLD(VAIEN,MRAIEN,.FBMSG,.FBXMZ,.FBLN,.FBSN,.FBTXT,.ZMCNT) ; Build message to be transmitted
"RTN","FBAAV8",60,0)
 Q 1
"RTN","FBAAV8",61,0)
 ;
"RTN","FBAAV8",62,0)
LNBLD(VAIEN,MRAIEN,FBMSG,FBXMZ,FBLN,FBSN,FBTXT,ZMCNT) ; Build the message
"RTN","FBAAV8",63,0)
 ; Input:       VAIEN   - IEN of the IPAC Agreement of selected MRA record
"RTN","FBAAV8",64,0)
 ;              MRAIEN  - IEN of the selected MRA record
"RTN","FBAAV8",65,0)
 ;              FBMSG   - Array of the MRA records that have currently been built for 
"RTN","FBAAV8",66,0)
 ;                        transmission, sorted by message number
"RTN","FBAAV8",67,0)
 ;              FBXMZ   - Current Message number
"RTN","FBAAV8",68,0)
 ;              FBLN    - Current Line count
"RTN","FBAAV8",69,0)
 ;              FBSN    - 6 character (blank padded) station number or "" if not yet set
"RTN","FBAAV8",70,0)
 ;              FBTXT   - 0 - Header message not yet built
"RTN","FBAAV8",71,0)
 ;                        1 - Header message already built
"RTN","FBAAV8",72,0)
 ;              ZMCNT   - Current total line count
"RTN","FBAAV8",73,0)
 ; Output:      FBXMZ   - Updated Message number
"RTN","FBAAV8",74,0)
 ;              FBLN    - Updated line count
"RTN","FBAAV8",75,0)
 ;              FBSN    - 6 character (blank padded) station number
"RTN","FBAAV8",76,0)
 ;              FBTXT   - Updated to 1 if it was initially 0 to indicate that the
"RTN","FBAAV8",77,0)
 ;                        IPAC MRA message header line was built
"RTN","FBAAV8",78,0)
 ;              ZMCNT   - Updated total line count
"RTN","FBAAV8",79,0)
 ;
"RTN","FBAAV8",80,0)
 N ACT,FBSTR,IX1,VADATA,VAID,XX
"RTN","FBAAV8",81,0)
 S ACT=$P(^FBAA(161.96,MRAIEN,0),U,4)           ; MRA Record Action
"RTN","FBAAV8",82,0)
 S VAID=$P(^FBAA(161.96,MRAIEN,0),U,3)          ; Agreement ID
"RTN","FBAAV8",83,0)
 I ACT'="D" D                                   ; Not a delete record
"RTN","FBAAV8",84,0)
 . F IX1=0:1:6 D
"RTN","FBAAV8",85,0)
 . . S VADATA(IX1)=$G(^FBAA(161.95,VAIEN,IX1))  ; Array of IPAC Vendor Agreement data
"RTN","FBAAV8",86,0)
 E  D
"RTN","FBAAV8",87,0)
 . S VADATA(0)=VAID
"RTN","FBAAV8",88,0)
 ;
"RTN","FBAAV8",89,0)
 I 'FBTXT D                                     ; No header yet, build it now
"RTN","FBAAV8",90,0)
 . S FBTXT=1,ZMCNT=1,FBLN=0
"RTN","FBAAV8",91,0)
 . D HEAD(.FBLN,.FBXMZ,.FBSN)
"RTN","FBAAV8",92,0)
 ;
"RTN","FBAAV8",93,0)
 S FBSTR=$$LINE1(MRAIEN,FBSN,.VADATA)           ; 1st line of data for the MRA record
"RTN","FBAAV8",94,0)
 D STORE^FBAAV01
"RTN","FBAAV8",95,0)
 S ZMCNT=ZMCNT+1
"RTN","FBAAV8",96,0)
 I ACT'="D" D                                   ; If we're not transmitting a delete record
"RTN","FBAAV8",97,0)
 . S FBSTR=$$LINE2(.VADATA)                     ; 2nd line of data for the MRA record
"RTN","FBAAV8",98,0)
 . D STORE^FBAAV01
"RTN","FBAAV8",99,0)
 . S FBSTR=$$LINE3(.VADATA)                     ; 3rd line of data for the MRA record
"RTN","FBAAV8",100,0)
 . D STORE^FBAAV01
"RTN","FBAAV8",101,0)
 . S FBSTR=$$LINE4(.VADATA)                     ; 4th line of data for the MRA record
"RTN","FBAAV8",102,0)
 . D STORE^FBAAV01
"RTN","FBAAV8",103,0)
 . S FBSTR=$$LINE5(.VADATA)                     ; 5th line of data for the MRA record
"RTN","FBAAV8",104,0)
 . D STORE^FBAAV01
"RTN","FBAAV8",105,0)
 . S FBSTR=$$LINE6(.VADATA)                     ; 6th line of data for the MRA record
"RTN","FBAAV8",106,0)
 . D STORE^FBAAV01
"RTN","FBAAV8",107,0)
 . S FBSTR=$$LINE7(.VADATA)                     ; 7th line of data for the MRA record
"RTN","FBAAV8",108,0)
 . D STORE^FBAAV01
"RTN","FBAAV8",109,0)
 . S ZMCNT=ZMCNT+6                              ; Increment total line count
"RTN","FBAAV8",110,0)
 ;
"RTN","FBAAV8",111,0)
 ; Maximum total line count reached, transmit current lines
"RTN","FBAAV8",112,0)
 I ZMCNT>27 D
"RTN","FBAAV8",113,0)
 . D XMIT^FBAAV01                               ; Transmit the current data
"RTN","FBAAV8",114,0)
 . D MRAUPDT(.FBMSG)                            ; Update MRA records with transmission date
"RTN","FBAAV8",115,0)
 . S ZMCNT=0,FBLN=0,FBTXT=0                     ; Reset total line count, line count, header flag
"RTN","FBAAV8",116,0)
 Q
"RTN","FBAAV8",117,0)
 ;
"RTN","FBAAV8",118,0)
HEAD(FBLN,FBXMZ,FBSN)    ; Create header line for IPAC MRA Message
"RTN","FBAAV8",119,0)
 ; Input:       FBLN    - Current Line count of the message
"RTN","FBAAV8",120,0)
 ;              FBXMZ   - Current Message number
"RTN","FBAAV8",121,0)
 ; Output:      FBLN    - Updated Line count
"RTN","FBAAV8",122,0)
 ;              FBSN    - Agency Station Number
"RTN","FBAAV8",123,0)
 ;              FBXMZ   - Updated Message Number
"RTN","FBAAV8",124,0)
 ;
"RTN","FBAAV8",125,0)
 N FB,FBAASN,FBBN,FBHD,FBJ,FBSTR
"RTN","FBAAV8",126,0)
 D NEWMSG^FBAAV01                               ; FBOKTX,XMSUB,XMDUZ
"RTN","FBAAV8",127,0)
 S FBHD=$$HDR^FBAAUTL3()                        ; 'FEE' - first piece of batch header
"RTN","FBAAV8",128,0)
 D STATION^FBAAUTL                              ; Returns FBSN,FBAASN (and maybe FBSITE)
"RTN","FBAAV8",129,0)
 S FBSN=$$LJ^XLFSTR(FBSN,6)                     ; Station number padded with trailing spaces
"RTN","FBAAV8",130,0)
 D GETNXB^FBAAUTL                               ; Next Fee Basis Batch Number (FBBN)
"RTN","FBAAV8",131,0)
 S FBBN=$$RJ^XLFSTR(FBBN,5,"0")                 ; Padded with leading 0s to 5 digits as necessary
"RTN","FBAAV8",132,0)
 ;
"RTN","FBAAV8",133,0)
 ; Build header line for IPAC MRA Messages
"RTN","FBAAV8",134,0)
 S FBSTR=FBHD_"C8"_$TR($$FMTE^XLFDT(DT,"5DZ"),"/","")_FBSN_FBBN_"$"
"RTN","FBAAV8",135,0)
 D STORE^FBAAV01
"RTN","FBAAV8",136,0)
 Q
"RTN","FBAAV8",137,0)
 ;
"RTN","FBAAV8",138,0)
LINE1(MRAIEN,FBSN,VADATA)  ; Create 1st message line for an MRA record
"RTN","FBAAV8",139,0)
 ; Input:       MRAIEN      - IEN of the IPAC MRA record being transmitted
"RTN","FBAAV8",140,0)
 ;              FBSN        - Agency Station # (6 chars padded with trailing spaces)
"RTN","FBAAV8",141,0)
 ;              VADATA      - Array of IPAC Agreement data
"RTN","FBAAV8",142,0)
 ; Returns:     1st line of data for the MRA record
"RTN","FBAAV8",143,0)
 ; Called From: LNBLD 
"RTN","FBAAV8",144,0)
 N FBSTR,VID,XX
"RTN","FBAAV8",145,0)
 ;
"RTN","FBAAV8",146,0)
 ; Build Line 1 of the Message for the selected MRA record
"RTN","FBAAV8",147,0)
 S FBSTR=8                                      ; 1st char, 1st line of IPAC Agreement data
"RTN","FBAAV8",148,0)
 S FBSTR=FBSTR_$P(^FBAA(161.96,MRAIEN,0),U,4)   ; 2nd char - IPAC MRA Action type (A,C,D)
"RTN","FBAAV8",149,0)
 S FBSTR=FBSTR_FBSN                             ; 3-8 char - Agency Station Number
"RTN","FBAAV8",150,0)
 S XX=$P(VADATA(0),U,1)                         ; IPAC Agreement ID
"RTN","FBAAV8",151,0)
 S XX=$$LJ^XLFSTR(XX,10)                        ; IPAC Agreement ID padded with trailing spaces
"RTN","FBAAV8",152,0)
 S FBSTR=FBSTR_XX                               ; 9-18 char - IPAC Agreement ID
"RTN","FBAAV8",153,0)
 I '$D(VADATA(1)) Q FBSTR_"~$"                  ; Delete action being transmitted, quit now
"RTN","FBAAV8",154,0)
 S VID=$P(VADATA(0),U,2)                        ; IEN of the IPAC Agreement Vendor, "" for deleted
"RTN","FBAAV8",155,0)
 S XX=$P(^FBAAV(VID,0),U,2)                     ; Vendor ID number
"RTN","FBAAV8",156,0)
 S XX=$$LJ^XLFSTR(XX,11)                        ; Vendor ID # left justified, padded with trailing spaces
"RTN","FBAAV8",157,0)
 I $P(^FBAAV(VID,0),U,7)="3" D                  ; Pharmacy Vendor
"RTN","FBAAV8",158,0)
 . N CHAIN
"RTN","FBAAV8",159,0)
 . S CHAIN=$P(^FBAAV(VID,0),U,10)               ; Pharmacy chain #
"RTN","FBAAV8",160,0)
 . S CHAIN=$$RJ^XLFSTR(CHAIN,4,"0")             ; Chain padded with leading 0's
"RTN","FBAAV8",161,0)
 . S XX=$E(XX,1,9)_CHAIN                        ; Chain appended to the Vendor ID for pharmacy
"RTN","FBAAV8",162,0)
 E  S XX=XX_"  "                                ; Non-Pharmacy Vendor
"RTN","FBAAV8",163,0)
 S FBSTR=FBSTR_XX                               ; 19-31 char - Vendor ID
"RTN","FBAAV8",164,0)
 S FBSTR=FBSTR_$P(VADATA(0),U,3)                ; 32-35 - IPAC Agreement Fiscal Year
"RTN","FBAAV8",165,0)
 S XX=$P(VADATA(0),U,5)                         ; IPAC Agreement Description
"RTN","FBAAV8",166,0)
 S XX=$$LJ^XLFSTR(XX,60)                        ; Description with trailing spaces
"RTN","FBAAV8",167,0)
 S FBSTR=FBSTR_XX                               ; 36-95 char - IPAC Agreement Description
"RTN","FBAAV8",168,0)
 S XX=$P(VADATA(0),U,6)                         ; IPAC Agreement Sharing #
"RTN","FBAAV8",169,0)
 S XX=$$LJ^XLFSTR(XX,13)                        ; Sharing Agreement padded with trailing spaces
"RTN","FBAAV8",170,0)
 S FBSTR=FBSTR_XX                               ; 96-108 char - Sharing Agreement #
"RTN","FBAAV8",171,0)
 S FBSTR=FBSTR_$P(VADATA(0),U,4)_"~"            ; 109 char - IPAC Agreement Status ('A' or 'I') 
"RTN","FBAAV8",172,0)
 Q FBSTR
"RTN","FBAAV8",173,0)
 ;
"RTN","FBAAV8",174,0)
LINE2(VADATA)  ; Create 2nd message line for an MRA record
"RTN","FBAAV8",175,0)
 ; Input:       VADATA      - Array of IPAC Agreement data
"RTN","FBAAV8",176,0)
 ; Returns:     2nd line of data for the MRA record
"RTN","FBAAV8",177,0)
 ; Called From: LNBLD 
"RTN","FBAAV8",178,0)
 N FBSTR,XX
"RTN","FBAAV8",179,0)
 S XX=$P(VADATA(1),U,1)                         ; IPAC Agreement Customer ALC
"RTN","FBAAV8",180,0)
 S XX=$$LJ^XLFSTR(XX,8)                         ; Customer ALC with trailing spaces
"RTN","FBAAV8",181,0)
 S FBSTR=XX                                     ; 1-8 Char - Customer ALC
"RTN","FBAAV8",182,0)
 S XX=$P(VADATA(1),U,2)                         ; IPAC Agreement Receiver TAS
"RTN","FBAAV8",183,0)
 S XX=$$LJ^XLFSTR(XX,27)                        ; Receiver TAS with trailing spaces
"RTN","FBAAV8",184,0)
 S FBSTR=FBSTR_XX                               ; 9-35 Char - Receiver TAS
"RTN","FBAAV8",185,0)
 S XX=$P(VADATA(1),U,5)                         ; IPAC Agreement Sender TAS
"RTN","FBAAV8",186,0)
 S XX=$$LJ^XLFSTR(XX,27)                        ; Sender TAS with trailing spaces
"RTN","FBAAV8",187,0)
 S FBSTR=FBSTR_XX                               ; 36-62 Char - Receiver TAS
"RTN","FBAAV8",188,0)
 S XX=$P(VADATA(1),U,3)                         ; IPAC Agreement Agency Field Station Number
"RTN","FBAAV8",189,0)
 S XX=$$LJ^XLFSTR(XX,8)                         ; Agency Field Station Number with trailing spaces
"RTN","FBAAV8",190,0)
 S FBSTR=FBSTR_XX                               ; 63-70 Char - Agency Field Station Number
"RTN","FBAAV8",191,0)
 S XX=$P(VADATA(1),U,4)                         ; IPAC Agreement Obligating Document #
"RTN","FBAAV8",192,0)
 S XX=$$LJ^XLFSTR(XX,17)                        ; Obligating Document # with trailing spaces
"RTN","FBAAV8",193,0)
 S FBSTR=FBSTR_XX_"~"                           ; 71-87 Char - Obligating Document #
"RTN","FBAAV8",194,0)
 Q FBSTR
"RTN","FBAAV8",195,0)
LINE3(VADATA)  ; Create 3rd message line for an MRA record
"RTN","FBAAV8",196,0)
 ; Input:       VADATA      - Array of IPAC Agreement data
"RTN","FBAAV8",197,0)
 ; Returns:     3rd line of data for the MRA record
"RTN","FBAAV8",198,0)
 ; Called From: LNBLD 
"RTN","FBAAV8",199,0)
 N FBSTR,XX
"RTN","FBAAV8",200,0)
 S XX=$P(VADATA(2),U,1)                         ; IPAC Agreement Station Contact Name
"RTN","FBAAV8",201,0)
 S XX=$$LJ^XLFSTR(XX,60)                        ; Station Contact Name with trailing spaces
"RTN","FBAAV8",202,0)
 S FBSTR=XX                                     ; 1-60 char - Station Contact Name
"RTN","FBAAV8",203,0)
 S XX=$P(VADATA(2),U,2)                         ; IPAC Agreement Station Contact Phone
"RTN","FBAAV8",204,0)
 S XX=$$LJ^XLFSTR(XX,17)                        ; Station Contact Phone with trailing spaces
"RTN","FBAAV8",205,0)
 S FBSTR=FBSTR_XX                               ; 61-77 char - Station Contact Phone
"RTN","FBAAV8",206,0)
 S XX=$P(VADATA(2),U,3)                         ; IPAC Agreement Station Contact Email
"RTN","FBAAV8",207,0)
 S XX=$$LJ^XLFSTR(XX,100)                       ; Station Contact Email with trailing spaces
"RTN","FBAAV8",208,0)
 S FBSTR=FBSTR_XX_"~"                           ; 78-177 char - Station Contact Phone
"RTN","FBAAV8",209,0)
 Q FBSTR
"RTN","FBAAV8",210,0)
 ; 
"RTN","FBAAV8",211,0)
LINE4(VADATA)  ; Create 4th message line for an MRA record
"RTN","FBAAV8",212,0)
 ; Input:       VADATA      - Array of IPAC Agreement data
"RTN","FBAAV8",213,0)
 ; Returns:     4th line of data for the MRA record
"RTN","FBAAV8",214,0)
 ; Called From: LNBLD 
"RTN","FBAAV8",215,0)
 N FBSTR,XX
"RTN","FBAAV8",216,0)
 S XX=$P(VADATA(3),U,1)                         ; IPAC Agreement Station Complete line of Accounting
"RTN","FBAAV8",217,0)
 S XX=$$LJ^XLFSTR(XX,60)                        ; Complete line of accounting with trailing spaces
"RTN","FBAAV8",218,0)
 S FBSTR=XX_"~"                                 ; 1-60 char - Complete line of Accounting
"RTN","FBAAV8",219,0)
 Q FBSTR
"RTN","FBAAV8",220,0)
 ; 
"RTN","FBAAV8",221,0)
LINE5(VADATA)  ; Create 5th message line for an MRA record
"RTN","FBAAV8",222,0)
 ; Input:       VADATA      - Array of IPAC Agreement data
"RTN","FBAAV8",223,0)
 ; Returns:     5th line of data for the MRA record
"RTN","FBAAV8",224,0)
 ; Called From: LNBLD 
"RTN","FBAAV8",225,0)
 N FBSTR,XX
"RTN","FBAAV8",226,0)
 S XX=$P(VADATA(4),U,1)                         ; IPAC Agreement Station Goods & Services
"RTN","FBAAV8",227,0)
 S XX=$$LJ^XLFSTR(XX,200)                       ; Goods & Services with trailing spaces
"RTN","FBAAV8",228,0)
 S FBSTR=XX_"~"                                 ; 1-200 char - Goods & Services
"RTN","FBAAV8",229,0)
 Q FBSTR
"RTN","FBAAV8",230,0)
 ;
"RTN","FBAAV8",231,0)
LINE6(VADATA)  ; Create 6th message line for an MRA record
"RTN","FBAAV8",232,0)
 ; Input:       VADATA      - Array of IPAC Agreement data
"RTN","FBAAV8",233,0)
 ; Returns:     6th line of data for the MRA record
"RTN","FBAAV8",234,0)
 ; Called From: LNBLD 
"RTN","FBAAV8",235,0)
 N FBSTR,XX
"RTN","FBAAV8",236,0)
 S XX=$P(VADATA(5),U,1)                         ; IPAC Agreement Miscellaneous Line 1
"RTN","FBAAV8",237,0)
 S XX=$$LJ^XLFSTR(XX,220)                       ; Miscellaneous Line 1 with trailing spaces
"RTN","FBAAV8",238,0)
 S FBSTR=XX_"~"                                 ; 1-220 char - Miscellaneous Line 1
"RTN","FBAAV8",239,0)
 Q FBSTR
"RTN","FBAAV8",240,0)
 ;
"RTN","FBAAV8",241,0)
LINE7(VADATA)  ; Create 7th message line for an MRA record
"RTN","FBAAV8",242,0)
 ; Input:       VADATA      - Array of IPAC Agreement data
"RTN","FBAAV8",243,0)
 ; Returns:     7tht line of data for the MRA record
"RTN","FBAAV8",244,0)
 ; Called From: LNBLD 
"RTN","FBAAV8",245,0)
 N FBSTR,XX
"RTN","FBAAV8",246,0)
 S XX=$P(VADATA(6),U,1)                         ; IPAC Agreement Miscellaneous Line 2
"RTN","FBAAV8",247,0)
 S XX=$$LJ^XLFSTR(XX,100)                       ; Miscellaneous Line 2 with trailing spaces
"RTN","FBAAV8",248,0)
 S FBSTR=XX_"~$"                                ; 1-100 char - Miscellaneous Line 2
"RTN","FBAAV8",249,0)
 Q FBSTR
"RTN","FBAAV8",250,0)
 Q
"RTN","FBAAV8",251,0)
 ;
"RTN","FBAAV8",252,0)
MRAUPDT(FBMSG)   ; Update MRA records with transmit status and date
"RTN","FBAAV8",253,0)
 ; Input:       FBMSG()         - Array of MRA IENs that were transmitted
"RTN","FBAAV8",254,0)
 ; Output:      MRA records updated with transmit status and date
"RTN","FBAAV8",255,0)
 ; Called From: EN, LNBLD
"RTN","FBAAV8",256,0)
 N DA,DIE,DR,MRAIEN,X
"RTN","FBAAV8",257,0)
 S MRAIEN=""
"RTN","FBAAV8",258,0)
 F  D  Q:MRAIEN=""
"RTN","FBAAV8",259,0)
 . S MRAIEN=$O(FBMSG(MRAIEN))
"RTN","FBAAV8",260,0)
 . Q:MRAIEN=""
"RTN","FBAAV8",261,0)
 . S DIE="^FBAA(161.96,",DA=MRAIEN
"RTN","FBAAV8",262,0)
 . S DR="4///^S X="_"""TRANSMITTED"""
"RTN","FBAAV8",263,0)
 . S DR=DR_";5///TODAY"
"RTN","FBAAV8",264,0)
 . D ^DIE
"RTN","FBAAV8",265,0)
 . K FBMSG(MRAIEN)
"RTN","FBAAV8",266,0)
 Q
"RTN","FBAAV8",267,0)
 ;
"RTN","FBCHEP")
0^11^B37636915^B36009923
"RTN","FBCHEP",1,0)
FBCHEP ;AISC/DMK - ENTER PAYMENT FOR CONTRACT HOSPITAL ;8/18/2004
"RTN","FBCHEP",2,0)
 ;;3.5;FEE BASIS;**4,61,77,82,122,108,124,135,139,123**;JAN 30, 1995;Build 51
"RTN","FBCHEP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBCHEP",4,0)
 S FBAAPTC="V",FBAAOUT=0
"RTN","FBCHEP",5,0)
RD K FBAAID,FBAAVID S FBRESUB="" D GETVET^FBAAUTL1 G:DFN']"" Q
"RTN","FBCHEP",6,0)
 S FBPROG="I $P(^(0),U,3)=6,($P(^(0),U,9)'[""FB583"")" D GETAUTH^FBAAUTL1 G RD:$D(DUOUT),RD:FTP']""
"RTN","FBCHEP",7,0)
 ;W !!,?25,"<  ASSOCIATED 7078  >",!!
"RTN","FBCHEP",8,0)
 ;S DIC="^FB7078(",DA=FB7078,DR="0;1" D EN^DIQ
"RTN","FBCHEP",9,0)
 I FB7078="" W !,*7,"No 7078 on file for this authorization." G RD
"RTN","FBCHEP",10,0)
 S FBI7078=FB7078_";FB7078("
"RTN","FBCHEP",11,0)
 I $D(^FBAAI("E",FBI7078)) S FBAAIN=$O(^FBAAI("E",FBI7078,0)) G OUT
"RTN","FBCHEP",12,0)
SETINV S FBZ(0)=^FB7078(FB7078,0),FBVET=$P(FBZ(0),"^",3),FBVEN=$P(FBZ(0),"^",2),FBVEN=$P(FBVEN,";",1)
"RTN","FBCHEP",13,0)
 ;
"RTN","FBCHEP",14,0)
EN583 ;Entry from 583 enter payment
"RTN","FBCHEP",15,0)
 I FBAAPTC="R" D ^FBAACO0
"RTN","FBCHEP",16,0)
 S DA=FBVEN D EN1^FBAAVD
"RTN","FBCHEP",17,0)
 I $P($G(^FBAAV(FBVEN,"ADEL")),U)="Y" W !!,*7,"Vendor is flagged for Austin deletion!" G Q
"RTN","FBCHEP",18,0)
 D SITEP^FBAAUTL G Q:FBPOP
"RTN","FBCHEP",19,0)
 S FBAAMPI=$P(FBSITE("FBNUM"),U,4)
"RTN","FBCHEP",20,0)
 ;
"RTN","FBCHEP",21,0)
RDV S FBVE="" S:$D(^FBAAV(FBVEN,"AMS")) FBVE=$P(^("AMS"),"^",2) S:$G(FBVE)'="Y" FBVE="N"
"RTN","FBCHEP",22,0)
 I FBVE="Y" W *7,!!,"Vendor is listed as 'exempt from the pricer'." S DIR(0)="Y",DIR("A")="Do you wish to keep this invoice exempt from the pricer",DIR("B")="Yes" D ^DIR K DIR G Q:$D(DIRUT) S FBVE=$S(Y=1:"Y",1:"N")
"RTN","FBCHEP",23,0)
 I $G(FBVE)'="Y",($P($G(^FBAAV(FBVEN,0)),"^",17)']"") W !!,*7,"Medicare ID Number is needed for this Vendor!" S DIE="^FBAAV(",DR=22 D ^DIE K DIE G Q:$D(DTOUT)!('$L(X))
"RTN","FBCHEP",24,0)
 ;
"RTN","FBCHEP",25,0)
BAT S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)=""B9""&($P(^(0),U,5)=DUZ)&($P(^(0),U,15)=""Y"")&($G(^(""ST""))=""O"")&(FBAAMPI>$P(^(0),U,10))" W ! D ^DIC K DIC
"RTN","FBCHEP",26,0)
 G Q:X="^"!(X=""),BAT:Y<0 S FBAABE=+Y,FBY(0)=Y(0),Z1=$P(FBY(0),"^",11),BO=$P(FBY(0),"^",2),Z2=$P(FBY(0),"^",10),FBSTN=$P(FBY(0),"^",8),FBCHOB=FBSTN_"-"_$P(FBY(0),"^",2),FBEXMPT=$P(FBY(0),"^",18) S FBAAOUT=0 D CHK I FBAAOUT K Y,Y(0),FBAABE G BAT
"RTN","FBCHEP",27,0)
 I FBI7078["FB7078(",BO'=$P($P(FBZ(0),U),".") W !,*7,"Obligation number on batch does not match 1358.",!,"Obligation number on batch must be ",$P($P(FBZ(0),U),"."),".",! G BAT
"RTN","FBCHEP",28,0)
 S FBINC=$S($P(FBY(0),"^",10)="":0,1:$P(FBY(0),"^",10)),FBLN=$S($P(FBY(0),"^",11)="":0,1:$P(FBY(0),"^",11))
"RTN","FBCHEP",29,0)
GETNXI D GETNXI^FBAAUTL
"RTN","FBCHEP",30,0)
 W !!,"Invoice # ",FBAAIN," assigned to this Invoice"
"RTN","FBCHEP",31,0)
RIN S CALLERID="FBCHEP" D GETINDT^FBAACO1 K CALLERID G Q:$G(FBAAOUT)
"RTN","FBCHEP",32,0)
 ;
"RTN","FBCHEP",33,0)
 ; FB*3.5*123 - check for IPAC agreement for Federal vendor and capture DoD invoice number (both req'd if IPAC)
"RTN","FBCHEP",34,0)
 S FBDODINV=""
"RTN","FBCHEP",35,0)
 S FBIA=$$IPAC^FBAAMP($G(FBVEN)) I FBIA=-1 G Q
"RTN","FBCHEP",36,0)
 I FBIA,'$$IPACINV^FBAAMP(.FBDODINV) G Q
"RTN","FBCHEP",37,0)
 ;
"RTN","FBCHEP",38,0)
 ; ask patient control number
"RTN","FBCHEP",39,0)
 S FBCSID=$$ASKPCN^FBUTL5() I FBCSID="^" G Q
"RTN","FBCHEP",40,0)
 ; if U/C then get FPPS Claim ID else ask user
"RTN","FBCHEP",41,0)
 I $D(FB583) S FBFPPSC=$P($G(^FB583(FB583,5)),U) W !,"FPPS CLAIM ID: ",$S(FBFPPSC="":"N/A",1:FBFPPSC)
"RTN","FBCHEP",42,0)
 E  S FBFPPSC=$$FPPSC^FBUTL5() I FBFPPSC=-1 G Q
"RTN","FBCHEP",43,0)
 ; Get Unique Claim ID  ; FB*3.5*135
"RTN","FBCHEP",44,0)
 S FBUCI135=$$ENTINPAT^FBUTL136($G(FBSTN),1,,"I",$G(FBFPPSC),$G(FBVEN)) I FBUCI135<1 G Q
"RTN","FBCHEP",45,0)
 ; if EDI claim then ask FPPS line item
"RTN","FBCHEP",46,0)
 I FBFPPSC]"" S FBFPPSL=$$FPPSL^FBUTL5(,1) I FBFPPSL=-1 G Q
"RTN","FBCHEP",47,0)
 ; compute default Covered Days
"RTN","FBCHEP",48,0)
 S FBCDAYS=$$FMDIFF^XLFDT(FBAAEDT,FBAABDT)
"RTN","FBCHEP",49,0)
 I FBCDAYS=0 S FBCDAYS=1
"RTN","FBCHEP",50,0)
 S FBAAMM=$S(FBAAPTC="R":"",$D(FB583):"",1:1) D PPT^FBAACO1()
"RTN","FBCHEP",51,0)
DIC S DIC="^FBAAI(",DIC(0)="LQ",DLAYGO=162.5,X=FBAAIN D ^DIC G Q:Y<0
"RTN","FBCHEP",52,0)
 S DA=+Y,DIE=DIC,DR="[FBCH ENTER PAYMENT]",DIE("NO^")=""
"RTN","FBCHEP",53,0)
 D
"RTN","FBCHEP",54,0)
 . ; JAS - 12/18/13 - PATCH 139 - Modified original code for ICD-10--date of interest must be Auth. To date, if available.
"RTN","FBCHEP",55,0)
 . N ICDVDT S ICDVDT=$G(FBAAEDT)
"RTN","FBCHEP",56,0)
 . I ICDVDT="" S ICDVDT=$G(FBAABDT)
"RTN","FBCHEP",57,0)
 . D ^DIE
"RTN","FBCHEP",58,0)
 . ; End 139
"RTN","FBCHEP",59,0)
 ; file adjustment reasons
"RTN","FBCHEP",60,0)
 D FILEADJ^FBCHFA(DA_",",.FBADJ)
"RTN","FBCHEP",61,0)
 ; file remittance remarks
"RTN","FBCHEP",62,0)
 D FILERR^FBCHFR(DA_",",.FBRRMK)
"RTN","FBCHEP",63,0)
 ; file Line Item Rendering providers
"RTN","FBCHEP",64,0)
 D FILERP^FBUTL8(DA_",",.FBPROV) ;FB*3.5*122
"RTN","FBCHEP",65,0)
 K DIE,DIC,D,DA,DR
"RTN","FBCHEP",66,0)
 S $P(FBY(0),"^",10)=FBINC+1,$P(FBY(0),"^",11)=FBLN+1,$P(FBY(0),"^",18)=FBEXMPT,^FBAA(161.7,FBAABE,0)=FBY(0) ;D:'$D(FBNOPTF) PTF G Q:$D(FB583),RD
"RTN","FBCHEP",67,0)
 D
"RTN","FBCHEP",68,0)
 . N FBX
"RTN","FBCHEP",69,0)
 . S FBX=FBAAMPI-(FBINC+1)
"RTN","FBCHEP",70,0)
 . I FBX<6 W !,$C(7),"Warning, you can only enter ",FBX," more invoices in this batch!",!
"RTN","FBCHEP",71,0)
 D:'$D(FBNOPTF) PTF
"RTN","FBCHEP",72,0)
 G Q:$D(FB583),RD
"RTN","FBCHEP",73,0)
OUT W !!,*7,?3,"Invoice number ",FBAAIN," has already been entered for this authorization.",!,?3,"Use the Contract Hospital 'Invoice Edit' option if needed.",!
"RTN","FBCHEP",74,0)
 ;check if user wants to add a second invoice for this 7078
"RTN","FBCHEP",75,0)
 W ! S DIR("A")="Want to add another invoice for this episode of care",DIR("B")="No",DIR(0)="Y" D ^DIR K DIR I Y S (FBNOPTF,FBRESUB)=1 G SETINV
"RTN","FBCHEP",76,0)
Q K BO,CNT,D,DA,DAT,DIC,DIE,DLAYGO,DR,FB7078,FBAABDT,FBAABE,FBAAEDT,FBAAID,FBAAIN,FBAAOUT,FBAAPTC,FBDX,FBTT,FBTYPE,FBVEN,FBVET,FBXX,FTP,I,J,FBK,PI,FBPOP,PTYPE,S,FBZ,Z1,FBI,FBPROG,FBRR,FBSW,FBPOV,FBPT,FBY,T,Y,Z1,Z2,ZZ,FBPSA,A,FBI7078
"RTN","FBCHEP",77,0)
 K FBCHOB,FBAUT,FBSEQ,X,FBSITE,F,FBSTN,FBASSOC,FBLOC,DUOUT,PSA,FBCOUNTY,DFN,FBNOPTF,DIRUT,FBVE,FBAAOUT,FBEXMPT,FBAAPN,FBAMTC,FBDEL,FBINC,FBLN,FBRESUB
"RTN","FBCHEP",78,0)
 K FBD1,FBFDC,FBMST,FBTTYPE,FB583,FBUCI135
"RTN","FBCHEP",79,0)
 K FBCSID,FBFPPSC,FBFPPSL,FBCDAYS,FBAMTP,FBADJ,FBRRMK,FBAAMPI,FBV,FBIA,FBDODINV
"RTN","FBCHEP",80,0)
 D GETAUTHK^FBAAUTL1
"RTN","FBCHEP",81,0)
 Q
"RTN","FBCHEP",82,0)
PTF I $G(FBVET),$G(FBI7078)["FB583" S:'$G(DFN) DFN=FBVET D PTFC^FBUTL6(DFN,$P(FBZ(0),"^",4))
"RTN","FBCHEP",83,0)
 Q
"RTN","FBCHEP",84,0)
PRBT ;Entry point for patient reimbursement option
"RTN","FBCHEP",85,0)
 ;
"RTN","FBCHEP",86,0)
 S FBAAPTC="R"
"RTN","FBCHEP",87,0)
 G RD
"RTN","FBCHEP",88,0)
CHK ;Check for vendor and batch being exempt from pricer
"RTN","FBCHEP",89,0)
 I $G(FBVE)'="Y"&($G(FBVE)'="N") S FBVE="N"
"RTN","FBCHEP",90,0)
 I $G(FBEXMPT)="Y" Q:FBVE="Y"  G OPEN:FBVE="N"
"RTN","FBCHEP",91,0)
 I $G(FBEXMPT)="N" Q:FBVE="N"  G OPEN:FBVE="Y"
"RTN","FBCHEP",92,0)
 I '$G(FBEXMPT)&($G(Z2)'>0) S FBEXMPT=FBVE Q
"RTN","FBCHEP",93,0)
 I '$G(FBEXMPT)&($G(Z2)>0) S $P(^FBAA(161.7,FBAABE,0),"^",18)="N",FBEXMPT="N" G CHK
"RTN","FBCHEP",94,0)
 Q
"RTN","FBCHEP",95,0)
OPEN W *7,!!,"This Invoice may not be added to Batch # ",+FBY(0),".",!,"***You may not add a ",$S(FBVE="Y":"pricer exempt",1:"non-exempt")," invoice to a ",$S(FBVE="Y":"non-exempt",1:"pricer exempt")," batch.***"
"RTN","FBCHEP",96,0)
 S DIR(0)="Y",DIR("A")="Do you want to open a new batch at this time",DIR("B")="Y" D ^DIR K DIR S:$D(DIRUT)!('Y) FBAAOUT=1 Q:FBAAOUT  D RCHOP^FBAAOB S FBEXMPT=FBVE D
"RTN","FBCHEP",97,0)
 .S FBY(0)=$G(^FBAA(161.7,FBAABE,0)),Z1=$P(FBY(0),"^",11),BO=$P(FBY(0),"^",2),Z2=$P(FBY(0),"^",10),FBSTN=$P(FBY(0),"^",8),FBCHOB=FBSTN_"-"_$P(FBY(0),"^",2)
"RTN","FBCHEP",98,0)
 Q
"RTN","FBCHEP1")
0^12^B47429330^B42453076
"RTN","FBCHEP1",1,0)
FBCHEP1 ;AISC/DMK - EDIT PAYMENT FOR CONTRACT HOSPITAL ;5/16/12 3:31pm
"RTN","FBCHEP1",2,0)
 ;;3.5;FEE BASIS;**38,61,122,133,108,124,132,139,123**;JAN 30, 1995;Build 51
"RTN","FBCHEP1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBCHEP1",4,0)
EDIT ;ENTRY POINT TO EDIT PAYMENT
"RTN","FBCHEP1",5,0)
 N LASTDX,LASTPROC
"RTN","FBCHEP1",6,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","FBCHEP1",7,0)
BT W ! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)=""B9""&($P(^(0),U,15)=""Y"")",DIC("S")=$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):DIC("S"),1:DIC("S")_"&($P(^(0),U,5)=DUZ)") D ^DIC
"RTN","FBCHEP1",8,0)
 G END:X=""!(X="^"),BT:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBCHEP1",9,0)
 S FBEXMPT=$P(FBN(0),"^",18)
"RTN","FBCHEP1",10,0)
 S FBSTAT=^FBAA(161.7,FBN,"ST"),FBBAMT=$S($P(FBN(0),"^",9)="":0,1:$P(FBN(0),"^",9))
"RTN","FBCHEP1",11,0)
 I FBSTAT="C"&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must Reopen the batch prior to editing the invoice.",! G END
"RTN","FBCHEP1",12,0)
 I FBSTAT="S"!(FBSTAT="P")!(FBSTAT="R")&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,?3,"You must be a holder of the 'FBAASUPERVISOR' security key",!,?3,"to edit this invoice.",! G END
"RTN","FBCHEP1",13,0)
 I FBSTAT="T"!(FBSTAT="F")!(FBSTAT="V") W !!,?3,"Batch has already been sent to Austin for payment.",! G END
"RTN","FBCHEP1",14,0)
INV W ! S DIC="^FBAAI(",DIC(0)="AEQZ",DIC("S")="I $P(^(0),U,17)=FBN" D ^DIC K DIC("S") G BT:X=""!(X="^"),INV:Y<0 S FBI=+Y
"RTN","FBCHEP1",15,0)
 ;
"RTN","FBCHEP1",16,0)
 ; FB*3.5*123 - edit inpatient invoice - check for IPAC data for Federal Vendors
"RTN","FBCHEP1",17,0)
 I '$$IPACEDIT^FBAAPET1(162.5,FBI,.FBIA,.FBDODINV) G INV
"RTN","FBCHEP1",18,0)
 ;
"RTN","FBCHEP1",19,0)
 S FBK=$S($P(^FBAAI(FBI,0),"^",9)="":0,1:$P(^(0),"^",9))
"RTN","FBCHEP1",20,0)
 S FBLISTC="",FBAAI=FBI W @IOF D START^FBCHDI2 S FBI=FBAAI I $P(^FBAAI(FBI,0),"^",9)="" S FBPRICE=""
"RTN","FBCHEP1",21,0)
 ; set FB1725 flag = true if payment for a 38 U.S.C. 1725 claim
"RTN","FBCHEP1",22,0)
 D
"RTN","FBCHEP1",23,0)
 . N FBY
"RTN","FBCHEP1",24,0)
 . S FBY=$G(^FBAAI(FBI,0))
"RTN","FBCHEP1",25,0)
 . S FB1725=$S($P(FBY,U,5)["FB583":+$P($G(^FB583(+$P(FBY,U,5),0)),U,28),1:0)
"RTN","FBCHEP1",26,0)
 ; get values of FPPS Claim ID and Line Item
"RTN","FBCHEP1",27,0)
 S FBFPPSC=$P($G(^FBAAI(FBI,3)),U)
"RTN","FBCHEP1",28,0)
 S FBFPPSL=$P($G(^FBAAI(FBI,3)),U,2)
"RTN","FBCHEP1",29,0)
 ; load current adjustment data
"RTN","FBCHEP1",30,0)
 D LOADADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHEP1",31,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBCHEP1",32,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBCHEP1",33,0)
 ; load current remittance remark data
"RTN","FBCHEP1",34,0)
 D LOADRR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHEP1",35,0)
 ; load Item level Rendering provider data
"RTN","FBCHEP1",36,0)
 D LOADRP^FBUTL8(FBI_",",.FBPROV) ;FB*3.5*122
"RTN","FBCHEP1",37,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBCHEP1",38,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHEP1",39,0)
 S LASTDX=$$LAST(FBI,"DX"),LASTPROC=$$LAST(FBI,"PROC")
"RTN","FBCHEP1",40,0)
 S (DIE,DIC)="^FBAAI(",DIC(0)="AEQM",DA=FBI,DR="[FBCH EDIT PAYMENT]" W !
"RTN","FBCHEP1",41,0)
 D
"RTN","FBCHEP1",42,0)
 . N ICDVDT,DFN,FB583,FBAAMM1,FBAAPTC,FBCNTRA,FBCNTRP,FBV,FBVEN,FTP
"RTN","FBCHEP1",43,0)
 . S ICDVDT=$$FRDTINV^FBCSV1(DA) ;date for files 80 and 80.1 identifier
"RTN","FBCHEP1",44,0)
 . ;get variables for call to PPT^FBAACO1
"RTN","FBCHEP1",45,0)
 . S FBAAMM1=$P($G(^FBAAI(DA,2)),U,3)
"RTN","FBCHEP1",46,0)
 . S FBCNTRP=$P($G(^FBAAI(DA,5)),U,8)
"RTN","FBCHEP1",47,0)
 . S FBV=$P($G(^FBAAI(DA,0)),U,3)
"RTN","FBCHEP1",48,0)
 . S DFN=$P($G(^FBAAI(DA,0)),U,4)
"RTN","FBCHEP1",49,0)
 . S FBAAPTC=$P($G(^FBAAI(DA,0)),U,13)
"RTN","FBCHEP1",50,0)
 . S X=$P($G(^FBAAI(DA,0)),U,5)
"RTN","FBCHEP1",51,0)
 . S:X[";FB583(" FB583=+X
"RTN","FBCHEP1",52,0)
 . S FTP=$S(X]"":+$O(^FBAAA("AG",X,DFN,0)),1:"")
"RTN","FBCHEP1",53,0)
 . S FBVEN=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,4),1:"")
"RTN","FBCHEP1",54,0)
 . S FBCNTRA=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,22),1:"")
"RTN","FBCHEP1",55,0)
 . D ^DIE
"RTN","FBCHEP1",56,0)
 ; if adjustment data changed then file
"RTN","FBCHEP1",57,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHEP1",58,0)
 ; if remit remark data changed then file
"RTN","FBCHEP1",59,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHEP1",60,0)
 ; remove any gaps in codes
"RTN","FBCHEP1",61,0)
 D RMVGAP(FBI,1)
"RTN","FBCHEP1",62,0)
 ; if line item rendering providers exist then file FB*3.5*133
"RTN","FBCHEP1",63,0)
 I $D(FBPROV) D FILERP^FBUTL8(FBI_",",.FBPROV)
"RTN","FBCHEP1",64,0)
 K FBAAMM,FBAAMM1
"RTN","FBCHEP1",65,0)
 S FBNK=$P(^FBAAI(FBI,0),"^",9)
"RTN","FBCHEP1",66,0)
 I FBNK-FBK S $P(^FBAA(161.7,FBN,0),"^",9)=FBBAMT+(FBNK-FBK)
"RTN","FBCHEP1",67,0)
END K DA,DFN,DIC,DIE,DR,FBAAOUT,FBDX,FBI,FBIN,FBLISTC,FBN,FBPROC,FBSTAT,FBVEN,FBVID,J,K,L,POP,Q,VA,VADM,X,FBIFN,Y,FBPRICE,FBK,FBNK,FB583,FBAAPN,FBASSOC,FBDEL,FBLOC,DAT
"RTN","FBCHEP1",68,0)
 K CNT,D0,FB7078,FBAABDT,FBAAEDT,FBASSOC,FBAUT,FBLOC,FBPROG,FBPSA,FBPT,FBRR,FBTT,FBTYPE,FBXX,FTP,PI,PTYPE,T,Z,ZZ,F,FBPOV,I,TA,VAL,DUOUT,FBVET,FBBAMT,FBAAI,FBEXMPT,FB1725,FBPAMT
"RTN","FBCHEP1",69,0)
 K FBFPPSC,FBFPPSL,FBADJ,FBADJD,FBRRMK,FBRRMKD,FBIA,FBDODINV
"RTN","FBCHEP1",70,0)
 D END^FBCHDI
"RTN","FBCHEP1",71,0)
 Q
"RTN","FBCHEP1",72,0)
 ;
"RTN","FBCHEP1",73,0)
BADDATE(INVRCVDT,TEMPDA) ;Compare edited Invoice Received Date to Treatment Date, reject if before. Called from [FBCH EDIT PAYMENT] template. 
"RTN","FBCHEP1",74,0)
 I INVRCVDT="" Q 0 ;Inv Date not changed, no check necessary
"RTN","FBCHEP1",75,0)
 N TDAT,SHODAT S TDAT=$$GET1^DIQ(162.5,TEMPDA_",",6,"I") I TDAT]"" S SHODAT="TO"
"RTN","FBCHEP1",76,0)
 I TDAT="" S TDAT=$$GET1^DIQ(162.5,TEMPDA_",",5,"I"),SHODAT="FROM"
"RTN","FBCHEP1",77,0)
 I INVRCVDT<TDAT D  Q 1 ;Reject entered date
"RTN","FBCHEP1",78,0)
 .N SHOTDAT S SHOTDAT=$E(TDAT,4,5)_"/"_$E(TDAT,6,7)_"/"_$E(TDAT,2,3) ;Convert TDAT into display format for error message.
"RTN","FBCHEP1",79,0)
 .N MSG1,MSG2 S MSG1="*** Invoice Received Date cannot be before",MSG2=" Treatment "_SHODAT_" Date ("_SHOTDAT_") !!!"
"RTN","FBCHEP1",80,0)
 .W !!?5,*7,MSG1,!?8,MSG2
"RTN","FBCHEP1",81,0)
 Q 0 ;Date entered is OK
"RTN","FBCHEP1",82,0)
 ;
"RTN","FBCHEP1",83,0)
LAST(FBDA,FBNODE) ; Returns number (0-25) of last code in node for invoice
"RTN","FBCHEP1",84,0)
 D RMVGAP(FBDA,0)  ;Insure that gaps were not created outside normal processes
"RTN","FBCHEP1",85,0)
 N FBI,FBRET,FBX
"RTN","FBCHEP1",86,0)
 S FBRET=0
"RTN","FBCHEP1",87,0)
 I FBDA,"^DX^PROC^"[(U_FBNODE_U) D
"RTN","FBCHEP1",88,0)
 . S FBX=$G(^FBAAI(FBDA,FBNODE))
"RTN","FBCHEP1",89,0)
 . F FBI=25:-1:1 I $P(FBX,"^",FBI)'="" S FBRET=FBI Q
"RTN","FBCHEP1",90,0)
 Q FBRET
"RTN","FBCHEP1",91,0)
 ;
"RTN","FBCHEP1",92,0)
RMVGAP(FBDA,FBWRT) ;  Remove gaps in ICD diagnosis and procedure codes
"RTN","FBCHEP1",93,0)
 ; input
"RTN","FBCHEP1",94,0)
 ;   FBDA  IEN of invoice
"RTN","FBCHEP1",95,0)
 ;   FBWRT (optional) =1 if messages can be written to the screen
"RTN","FBCHEP1",96,0)
 ; remove any gaps
"RTN","FBCHEP1",97,0)
 N DXFLD,FBDX,FBFDA,FBI,FBMOVED,FBN,FBPOA,FBPROC,POAFLD,PROCFLD
"RTN","FBCHEP1",98,0)
 D FLDLIST ; get list of field numbers
"RTN","FBCHEP1",99,0)
 ; check diagnosis and POA codes
"RTN","FBCHEP1",100,0)
 S FBDX=$G(^FBAAI(FBDA,"DX"))
"RTN","FBCHEP1",101,0)
 S FBPOA=$G(^FBAAI(FBDA,"POA"))
"RTN","FBCHEP1",102,0)
 S FBMOVED=0
"RTN","FBCHEP1",103,0)
 S FBN=0
"RTN","FBCHEP1",104,0)
 F FBI=1:1:25 D
"RTN","FBCHEP1",105,0)
 . ; JAS - 03/05/14 - Patch 139 (ICD-10 Project) - Modified next line to also quit if 0
"RTN","FBCHEP1",106,0)
 . Q:(($P(FBDX,U,FBI)="")!($P(FBDX,U,FBI)=0))
"RTN","FBCHEP1",107,0)
 . S FBN=FBN+1 ; increment number of diagnosis codes
"RTN","FBCHEP1",108,0)
 . Q:FBI=FBN  ; no gap
"RTN","FBCHEP1",109,0)
 . ; move diagnosis and POA from slot FBI to slot FBN
"RTN","FBCHEP1",110,0)
 . S FBMOVED=1 ; set flag for message
"RTN","FBCHEP1",111,0)
 . K FBFDA
"RTN","FBCHEP1",112,0)
 . S FBFDA(162.5,FBDA_",",$P(DXFLD,U,FBN))=$P(FBDX,U,FBI)
"RTN","FBCHEP1",113,0)
 . S FBFDA(162.5,FBDA_",",$P(POAFLD,U,FBN))=$P(FBPOA,U,FBI)
"RTN","FBCHEP1",114,0)
 . S FBFDA(162.5,FBDA_",",$P(DXFLD,U,FBI))="@"
"RTN","FBCHEP1",115,0)
 . S FBFDA(162.5,FBDA_",",$P(POAFLD,U,FBI))="@"
"RTN","FBCHEP1",116,0)
 . D FILE^DIE("","FBFDA") D:$G(FBWRT) MSG^DIALOG()
"RTN","FBCHEP1",117,0)
 . S $P(FBDX,U,FBN)=$P(FBDX,U,FBI)
"RTN","FBCHEP1",118,0)
 . S $P(FBPOA,U,FBN)=$P(FBPOA,U,FBI)
"RTN","FBCHEP1",119,0)
 . S $P(FBDX,U,FBI)=""
"RTN","FBCHEP1",120,0)
 . S $P(FBPOA,U,FBI)=""
"RTN","FBCHEP1",121,0)
 I $G(FBWRT),FBMOVED W !,"Diagnosis codes were moved to remove gaps"
"RTN","FBCHEP1",122,0)
 ;
"RTN","FBCHEP1",123,0)
 S FBPROC=$G(^FBAAI(FBDA,"PROC"))
"RTN","FBCHEP1",124,0)
 S FBMOVED=0
"RTN","FBCHEP1",125,0)
 S FBN=0
"RTN","FBCHEP1",126,0)
 F FBI=1:1:25 D
"RTN","FBCHEP1",127,0)
 . ; JAS - 03/05/14 - Patch 139 (ICD-10 Project) - Modified next line to also quit if 0
"RTN","FBCHEP1",128,0)
 . Q:(($P(FBPROC,U,FBI)="")!($P(FBPROC,U,FBI)=0))
"RTN","FBCHEP1",129,0)
 . S FBN=FBN+1 ; increment number of procedure codes
"RTN","FBCHEP1",130,0)
 . Q:FBI=FBN  ; no gap
"RTN","FBCHEP1",131,0)
 . ; move procedure from slot FBI to slot FBN
"RTN","FBCHEP1",132,0)
 . S FBMOVED=1
"RTN","FBCHEP1",133,0)
 . K FBFDA
"RTN","FBCHEP1",134,0)
 . S FBFDA(162.5,FBDA_",",$P(PROCFLD,U,FBN))=$P(FBPROC,U,FBI)
"RTN","FBCHEP1",135,0)
 . S FBFDA(162.5,FBDA_",",$P(PROCFLD,U,FBI))="@"
"RTN","FBCHEP1",136,0)
 . D FILE^DIE("","FBFDA") D:$G(FBWRT) MSG^DIALOG()
"RTN","FBCHEP1",137,0)
 . S $P(FBPROC,U,FBN)=$P(FBPROC,U,FBI)
"RTN","FBCHEP1",138,0)
 . S $P(FBPROC,U,FBI)=""
"RTN","FBCHEP1",139,0)
 I $G(FBWRT),FBMOVED W !,"Procedure codes were moved to remove gaps"
"RTN","FBCHEP1",140,0)
 Q
"RTN","FBCHEP1",141,0)
 ;
"RTN","FBCHEP1",142,0)
FLDLIST ; Provide list of fields for diagnosis, POA, and procedures
"RTN","FBCHEP1",143,0)
 S DXFLD="30^31^32^33^34^35^35.1^35.2^35.3^35.4^35.5^35.6^35.7^35.8^35.9^36^36.1^36.2^36.3^36.4^36.5^36.6^36.7^36.8^36.9"
"RTN","FBCHEP1",144,0)
 S POAFLD="30.02^31.02^32.02^33.02^34.02^35.02^35.12^35.22^35.32^35.42^35.52^35.62^35.72^35.82^35.92^36.02^36.12^36.22^36.32^36.42^36.52^36.62^36.72^26.82^36.92"
"RTN","FBCHEP1",145,0)
 S PROCFLD="40^41^42^43^44^44.06^44.07^44.08^44.09^44.1^44.11^44.12^44.13^44.14^44.15^44.16^44.17^44.18^44.19^44.2^44.21^44.22^44.23^44.24^44.25"
"RTN","FBCHEP1",146,0)
 Q
"RTN","FBCHEP1",147,0)
 ;
"RTN","FBCHEP1",148,0)
GETIPAC(FBDA,FBVEN,FBIA,FBDODINV) ; Get vendor/IPAC data for Inpatient (FB*3.5*123)
"RTN","FBCHEP1",149,0)
 ; All parameters required and assumed to exist
"RTN","FBCHEP1",150,0)
 ; Called by $$IPACEDIT^FBAAPET1
"RTN","FBCHEP1",151,0)
 N GX5
"RTN","FBCHEP1",152,0)
 S FBVEN=+$P($G(^FBAAI(FBDA,0)),U,3)    ; vendor ien
"RTN","FBCHEP1",153,0)
 S GX5=$G(^FBAAI(FBDA,5))
"RTN","FBCHEP1",154,0)
 S FBIA=+$P(GX5,U,10)                   ; ipac agreement ien
"RTN","FBCHEP1",155,0)
 S FBDODINV=$P(GX5,U,7)                 ; ipac DoD invoice#
"RTN","FBCHEP1",156,0)
 Q
"RTN","FBCHEP1",157,0)
 ;
"RTN","FBCHEP1",158,0)
DELIPAC(FBDA) ; Delete all IPAC data on file for Inpatient (FB*3.5*123)
"RTN","FBCHEP1",159,0)
 ; Called by $$IPACEDIT^FBAAPET1
"RTN","FBCHEP1",160,0)
 N DIE,DA,DR,DIC
"RTN","FBCHEP1",161,0)
 S DIE=162.5,DA=FBDA,DR="86///@;87///@" D ^DIE
"RTN","FBCHEP1",162,0)
 Q
"RTN","FBCHEP1",163,0)
 ;
"RTN","FBCHPET")
0^14^B40858494^B40150841
"RTN","FBCHPET",1,0)
FBCHPET ;AISC/DMK - EDIT ANCILLARY PAYMENT ;7/13/2003
"RTN","FBCHPET",2,0)
 ;;3.5;FEE BASIS;**4,38,61,77,116,108,124,132,123**;JAN 30, 1995;Build 51
"RTN","FBCHPET",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBCHPET",4,0)
 S FY=$E(DT,1,3)+1700+$S($E(4,5)>9:1,1:0)
"RTN","FBCHPET",5,0)
GETPT I $G(BAT) D
"RTN","FBCHPET",6,0)
 .I '$D(^FBAAC("AC",+BAT)) F I=9,10,11 S $P(^FBAA(161.7,+BAT,0),U,I)=""
"RTN","FBCHPET",7,0)
 .I $D(^FBAAC("AC",+BAT)) D  S $P(^FBAA(161.7,+BAT,0),U,11)=I,$P(^(0),U,9)=$G(FBTOT) K I,FBTOT
"RTN","FBCHPET",8,0)
 ..N J,K,L,M S (I,J,K,L,M,FBTOT)=0
"RTN","FBCHPET",9,0)
 ..F  S J=$O(^FBAAC("AC",+BAT,J)) Q:'J  F  S K=$O(^FBAAC("AC",+BAT,J,K)) Q:'K  F  S L=$O(^FBAAC("AC",+BAT,J,K,L)) Q:'L  F  S M=$O(^FBAAC("AC",+BAT,J,K,L,M)) Q:'M  I $D(^FBAAC(J,1,K,1,L,1,M,0)) S I=I+1,FBTOT=FBTOT+$P(^(0),U,3)
"RTN","FBCHPET",10,0)
 W !! S DIC="^FBAAC(",DIC(0)="AEQM" D ^DIC G END:X="^"!(X=""),GETPT:Y<0 S (DFN,FBDA(3))=+Y
"RTN","FBCHPET",11,0)
 S:'$D(^FBAAC(DFN,1,0)) ^FBAAC(DFN,1,0)="^162.01P^0^0"
"RTN","FBCHPET",12,0)
 S DIC=DIC_DFN_",1,"
"RTN","FBCHPET",13,0)
GETVD W !! S DIC(0)="AEQM" D ^DIC G GETPT:X="^"!(X=""),GETVD:Y<0 S (FBV,FBVD,FBDA(2))=+Y
"RTN","FBCHPET",14,0)
 S:'$D(^FBAAC(DFN,1,FBDA(2),1,0)) ^FBAAC(DFN,1,FBDA(2),1,0)="^162.02DA^0^0"
"RTN","FBCHPET",15,0)
 S DIC=DIC_FBVD_",1,"
"RTN","FBCHPET",16,0)
GETDT S DIC(0)="AEQM",DIC("A")="Date of Service: " D ^DIC K DIC("A") G GETPT:X="^"!(X=""),GETDT:Y<0 S (FBSD,FBSDI,FBDA(1))=+Y,FBAADT=$P(Y,U,2) S:'$D(^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)) ^FBAAC(DFN,1,FBDA(2),1,FBDA(1),1,0)="^162.03A^0^0"
"RTN","FBCHPET",17,0)
 S FBZ=DIC_FBSD_",1,"
"RTN","FBCHPET",18,0)
SERV S DA(3)=FBDA(3),DA(2)=FBDA(2),DA(1)=FBDA(1)
"RTN","FBCHPET",19,0)
 S DIC("W")="N FBX S FBX=$$MODL^FBAAUTL4(""^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,+Y,""""M"""")"",""E"") W:FBX]"""" ""    CPT Modifier(s): "",FBX Q"
"RTN","FBCHPET",20,0)
 S DIC=FBZ,DIC(0)="AEQMZ"
"RTN","FBCHPET",21,0)
 D
"RTN","FBCHPET",22,0)
 . N ICPTVDT S ICPTVDT=$G(FBAADT) D ^DIC
"RTN","FBCHPET",23,0)
 G GETPT:X="^"!(X=""),SERV:Y<0 S (FBSV,FBAACPI,FBDA)=+Y,BAT=$P(Y(0),U,8),FBDUZ=$P(Y(0),U,7),(FBAACP,FBAACP(0))=$P(Y,U,2),K=$P(Y(0),U,3),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBCHPET",24,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBCHPET",25,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBCHPET",26,0)
 I FBDUZ'=DUZ&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,*7,"Sorry,only the clerk who entered the payment ",!," or a supervisor can edit this payment." G GETPT
"RTN","FBCHPET",27,0)
 ;S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBCHPET",28,0)
 S FBFSAMT(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,12)
"RTN","FBCHPET",29,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBCHPET",30,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBCHPET",31,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_FBDA(3)_",1,"_FBDA(2)_",1,"_FBDA(1)_",1,"_FBDA_",""M"")")
"RTN","FBCHPET",32,0)
 ; load current adjustment data
"RTN","FBCHPET",33,0)
 D LOADADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBCHPET",34,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBCHPET",35,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBCHPET",36,0)
 ; load current remittance remark data
"RTN","FBCHPET",37,0)
 D LOADRR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBCHPET",38,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBCHPET",39,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHPET",40,0)
 S FBFPPSC(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U)
"RTN","FBCHPET",41,0)
 S FBFPPSC=FBFPPSC(0)
"RTN","FBCHPET",42,0)
 S FBFPPSL(0)=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,2)
"RTN","FBCHPET",43,0)
 S FBFPPSL=FBFPPSL(0)
"RTN","FBCHPET",44,0)
 G:BAT']"" EDIT
"RTN","FBCHPET",45,0)
 ; check batch status
"RTN","FBCHPET",46,0)
 S FBSTAT=$P($G(^FBAA(161.7,BAT,"ST")),U) ; batch status
"RTN","FBCHPET",47,0)
 I FBSTAT="S",'$D(^XUSEC("FBAASUPERVISOR",DUZ)) W !!,*7,"Sorry, only the Supervisor can edit a payment once the batch has been released." G GETPT
"RTN","FBCHPET",48,0)
 I "^T^F^V^"[(U_FBSTAT_U) W !!,*7,"Sorry, you cannot edit a payment when the batch has been sent to Austin." G GETPT
"RTN","FBCHPET",49,0)
 K FBSTAT
"RTN","FBCHPET",50,0)
EDIT S DA=FBSV
"RTN","FBCHPET",51,0)
 ;
"RTN","FBCHPET",52,0)
 ; first edit CPT code and modifiers
"RTN","FBCHPET",53,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) G GETPT
"RTN","FBCHPET",54,0)
 ; if CPT was changed then update file
"RTN","FBCHPET",55,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" G GETPT
"RTN","FBCHPET",56,0)
 . N FBIENS,FBFDA
"RTN","FBCHPET",57,0)
 . S FBIENS=FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_","
"RTN","FBCHPET",58,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBCHPET",59,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBCHPET",60,0)
 ; if modifiers changed then update file
"RTN","FBCHPET",61,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(FBDA(3),FBDA(2),FBDA(1),FBDA)
"RTN","FBCHPET",62,0)
 ;
"RTN","FBCHPET",63,0)
 ; Check for IPAC data requirements for Federal Vendors (FB*3.5*123)
"RTN","FBCHPET",64,0)
 I '$$IPACEDIT^FBAAPET1(162.03,.FBDA) G SERV
"RTN","FBCHPET",65,0)
 ;
"RTN","FBCHPET",66,0)
 ; now edit remaining fields
"RTN","FBCHPET",67,0)
 S DIE("NO^")=""
"RTN","FBCHPET",68,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBCHPET",69,0)
 ; fb*3.5*116 remove edit of interest indicator (162.03,34) to prevent different interest indicator values at line item level; interest indicator set at invoice level only;
"RTN","FBCHPET",70,0)
 ;S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1);30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBCHPET",71,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",$D(FB583):"""",1:1);D PPT^FBAACO1(FBAAMM1,FBCNTRP,1);54///@;54////^S X=$G(FBCNTRP);30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBCHPET",72,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBCHPET",73,0)
 ;S DR(1,162.03,3)="3////^S X=$S(J-K:J-K,1:"""");I X S Y=""@11"";4////@;S Y=""@5"";@11;3R;4R;S:X'=4 Y=""@5"";22;K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBCHPET",74,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBCHPET",75,0)
 S DR(1,162.03,4)="S FBX=$$FPPSC^FBUTL5(1,FBFPPSC);S:FBX=-1 Y=0;S:FBX="""" Y=""@5"";50///^S X=FBX;S FBFPPSC=X;S FBX=$$FPPSL^FBUTL5(FBFPPSL);S:FBX=-1 Y=0;51///^S X=FBX;S FBFPPCL=X;S Y=""@55"";@5;50///@;S FBFPPSC="""";51///@;S FBFPPCL="""";@55"
"RTN","FBCHPET",76,0)
 S DR(1,162.03,5)="@5;K DIE(""NO^"");W !,""Exit ('^') allowed now"";26;S PRC(""SITE"")=X;8;@13;13;I $$BADDATE^FBCHPET(FBAADT,X) S Y=""@13"";Q;33;49"
"RTN","FBCHPET",77,0)
 S DR(1,162.03,6)="15;16;17////^S X=1"
"RTN","FBCHPET",78,0)
 S DR(1,162.03,7)="@7;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBCHPET",79,0)
 S DIE=FBZ
"RTN","FBCHPET",80,0)
 D
"RTN","FBCHPET",81,0)
 . N ICPTVDT,ICDVDT,FB583,FBAAMM,FBAAMM1,FBCNTRA,FBCNTRP,FBVEN,FTP
"RTN","FBCHPET",82,0)
 . S (ICPTVDT,ICDVDT)=$G(FBAADT)
"RTN","FBCHPET",83,0)
 . ; set variables for call to PPT^FBAACO1
"RTN","FBCHPET",84,0)
 . S FBAAMM1=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,2)),U,2)
"RTN","FBCHPET",85,0)
 . S FBCNTRP=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,3)),U,8)
"RTN","FBCHPET",86,0)
 . S X=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),1,FBDA,0)),U,13)
"RTN","FBCHPET",87,0)
 . S:X[";FB583(" FB583=+X
"RTN","FBCHPET",88,0)
 . S FTP=$P($G(^FBAAC(FBDA(3),1,FBDA(2),1,FBDA(1),0)),U,4)
"RTN","FBCHPET",89,0)
 . S FBVEN=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,4),1:"")
"RTN","FBCHPET",90,0)
 . S FBCNTRA=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,22),1:"")
"RTN","FBCHPET",91,0)
 . D ^DIE
"RTN","FBCHPET",92,0)
 ; if adjustment data changed then file
"RTN","FBCHPET",93,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBADJ)
"RTN","FBCHPET",94,0)
 ; if remit remark data changed then file
"RTN","FBCHPET",95,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",.FBRRMK)
"RTN","FBCHPET",96,0)
 ; if FPPS CLAIM ID changed, update other line items on invoice
"RTN","FBCHPET",97,0)
 I FBFPPSC'=FBFPPSC(0) D
"RTN","FBCHPET",98,0)
 . N FBAAIN
"RTN","FBCHPET",99,0)
 . S FBAAIN=$$GET1^DIQ(162.03,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",",14)
"RTN","FBCHPET",100,0)
 . D CKINVEDI^FBAAPET1(FBFPPSC(0),FBFPPSC,FBAAIN,FBDA_","_FBDA(1)_","_FBDA(2)_","_FBDA(3)_",")
"RTN","FBCHPET",101,0)
 K FBSV W !! G SERV
"RTN","FBCHPET",102,0)
 ;
"RTN","FBCHPET",103,0)
BADDATE(FBDOS,INVRCVDT) ;Reject entry if InvRcvDt is Prior to the Date of Service on the Invoice
"RTN","FBCHPET",104,0)
 I INVRCVDT<FBDOS D  Q 1 ;Reject entry
"RTN","FBCHPET",105,0)
 .N SHOWDOS S SHOWDOS=$E(FBDOS,4,5)_"/"_$E(FBDOS,6,7)_"/"_$E(FBDOS,2,3) ;Convert FBDOS into display format for error message
"RTN","FBCHPET",106,0)
 .W *7,!!?5,"*** Invoice Received Date cannot be prior to the",!?8,"Date of Service ("_SHOWDOS_") !!!"
"RTN","FBCHPET",107,0)
 Q 0 ;Accept entry
"RTN","FBCHPET",108,0)
 ;
"RTN","FBCHPET",109,0)
END K DR,DIC,DIE,X,DFN,FBVD,FBSD,BAT,FBSV,DA,FBDA,FBZ,FBDUZ,FBAACP,FBFY,FY,FBAMTPD,J,K,Y,PRC,FBHOLDX,ZZ,FBAADT,FBV,FBSDI,FBAACPI
"RTN","FBCHPET",110,0)
 K FBAAMM,FBAAMM1,FBFSAMT,FBFSUSD,FBMODA,FBZIP,FBTIME,FBHCFA(30)
"RTN","FBCHPET",111,0)
 K FBAAPTC,FB1725
"RTN","FBCHPET",112,0)
 K FBADJ,FBADJD,FBADJL,FBRRMK,FBRRMKD,FBRRMKL,FBX,FBUNITS
"RTN","FBCHPET",113,0)
 Q
"RTN","FBCHRR")
0^37^B13548321^B12984210
"RTN","FBCHRR",1,0)
FBCHRR ;AISC/DMK - RE-INITIATE REJECTS FROM PRICER ;6/30/2009
"RTN","FBCHRR",2,0)
 ;;3.5;FEE BASIS;**61,108,123**;JAN 30, 1995;Build 51
"RTN","FBCHRR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBCHRR",4,0)
DIC S FBTYPE="B9"
"RTN","FBCHRR",5,0)
 W ! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,15)=""Y""&($P(^(0),U,17)]"""")"_$S($D(^XUSEC("FBAASUPERVISOR",DUZ)):"",1:"&($P(^(0),U,5)=DUZ)"),DIC("A")="Select Batch with Pricer Rejects: " D ^DIC
"RTN","FBCHRR",6,0)
 G END:X="^"!(X=""),DIC:Y<0 S FBN=+Y,FBN(0)=Y(0)
"RTN","FBCHRR",7,0)
 I '$D(^FBAAI("AH",FBN)) W !!,*7,"No items rejected for this batch!",! G DIC
"RTN","FBCHRR",8,0)
DIC1 W !! S DIC="^FBAA(161.7,",DIC(0)="AEQMZ",DIC("A")="Select New Batch Number: ",DIC("S")="I $P(^(0),U,3)=FBTYPE&($P(^(0),U,5)=DUZ)&($P(^(0),U,15)=""Y"")&($G(^(""ST""))=""O"")&($P(^(0),U,18)'[""Y"")"
"RTN","FBCHRR",9,0)
 D ^DIC K DIC G DIC:$E(X)="^"!(X=""),DIC1:Y<0 S FBNB=+Y,FBNB(0)=Y(0)
"RTN","FBCHRR",10,0)
DIC2 W ! S DIC="^FBAAI(",DIC(0)="AEQMZ",DIC("A")="Select Patient: ",D="D",DIC("S")="I $D(^(""FBREJ"")),$P(^(""FBREJ""),U,3)=FBN" D IX^DIC G DIC:$E(X)="^"!(X=""),DIC2:Y<0 S FBI=+Y,FBI(0)=Y(0) G END:'$D(^FBAAI(FBI,0))
"RTN","FBCHRR",11,0)
 S FBLISTC="" D HOME^%ZIS,START^FBCHDI2
"RTN","FBCHRR",12,0)
ASK S DIR(0)="Y",DIR("A")="Want to re-initiate this payment",DIR("B")="NO" D ^DIR K DIR G END:$D(DIRUT),DIC:'Y
"RTN","FBCHRR",13,0)
 S (DIC,DIE)="^FBAAI(",DIC(0)="AEQM",DA=FBI,DR="20////^S X=FBNB" D ^DIE
"RTN","FBCHRR",14,0)
 K ^FBAAI(FBI,"FBREJ"),^FBAAI("AH",FBN,FBI) S $P(FBNB(0),"^",10)=$P(FBNB(0),"^",10)+1,$P(FBNB(0),"^",11)=$P(FBNB(0),"^",11)+1,$P(FBNB(0),"^",18)="N",^FBAA(161.7,FBNB,0)=FBNB(0)
"RTN","FBCHRR",15,0)
 I '$D(^FBAAI("AH",FBN)) S $P(FBN(0),"^",17)="",^FBAA(161.7,FBN,0)=FBN(0)
"RTN","FBCHRR",16,0)
 I $D(^FBAAI("AH",FBN)) G DIC2
"RTN","FBCHRR",17,0)
EDIT S DIR(0)="Y",DIR("A")="Want to edit payment now",DIR("B")="YES" D ^DIR K DIR G END:$D(DIRUT)!'Y
"RTN","FBCHRR",18,0)
 S FBPRICE=""
"RTN","FBCHRR",19,0)
 ;
"RTN","FBCHRR",20,0)
 ; FB*3.5*123 - edit inpatient invoice - check for IPAC data for Federal Vendors
"RTN","FBCHRR",21,0)
 I '$$IPACEDIT^FBAAPET1(162.5,FBI,.FBIA,.FBDODINV) G DIC2
"RTN","FBCHRR",22,0)
 ;
"RTN","FBCHRR",23,0)
 ; get values of FPPS Claim ID and Line Item
"RTN","FBCHRR",24,0)
 S FBFPPSC=$P($G(^FBAAI(FBI,3)),U)
"RTN","FBCHRR",25,0)
 S FBFPPSL=$P($G(^FBAAI(FBI,3)),U,2)
"RTN","FBCHRR",26,0)
 ; load current adjustment data
"RTN","FBCHRR",27,0)
 D LOADADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHRR",28,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBCHRR",29,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBCHRR",30,0)
 ; load current remittance remark data
"RTN","FBCHRR",31,0)
 D LOADRR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHRR",32,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBCHRR",33,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBCHRR",34,0)
 S LASTDX=$$LAST^FBCHEP1(FBI,"DX"),LASTPROC=$$LAST^FBCHEP1(FBI,"PROC")
"RTN","FBCHRR",35,0)
 S (DIC,DIE)="^FBAAI(",DA=FBI,DR="[FBCH EDIT PAYMENT]"
"RTN","FBCHRR",36,0)
 D  G H^XUS:$D(DTOUT)
"RTN","FBCHRR",37,0)
 . N ICDVDT,DFN,FB583,FBAAMM1,FBAAPTC,FBCNTRA,FBCNTRP,FBV,FBVEN,FTP
"RTN","FBCHRR",38,0)
 . S ICDVDT=$$FRDTINV^FBCSV1(DA) ; date for files 80 and 80.1 identifier
"RTN","FBCHRR",39,0)
 . ; get variables for call to PPT^FBAACO1
"RTN","FBCHRR",40,0)
 . S FBAAMM1=$P($G(^FBAAI(DA,2)),U,3)
"RTN","FBCHRR",41,0)
 . S FBCNTRP=$P($G(^FBAAI(DA,5)),U,8)
"RTN","FBCHRR",42,0)
 . S FBV=$P($G(^FBAAI(DA,0)),U,3)
"RTN","FBCHRR",43,0)
 . S DFN=$P($G(^FBAAI(DA,0)),U,4)
"RTN","FBCHRR",44,0)
 . S FBAAPTC=$P($G(^FBAAI(DA,0)),U,13)
"RTN","FBCHRR",45,0)
 . S X=$P($G(^FBAAI(DA,0)),U,5)
"RTN","FBCHRR",46,0)
 . S:X[";FB583(" FB583=+X
"RTN","FBCHRR",47,0)
 . S FTP=$S(X]"":+$O(^FBAAA("AG",X,DFN,0)),1:"")
"RTN","FBCHRR",48,0)
 . S FBVEN=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,4),1:"")
"RTN","FBCHRR",49,0)
 . S FBCNTRA=$S(FTP:$P($G(^FBAAA(DFN,1,FTP,0)),U,22),1:"")
"RTN","FBCHRR",50,0)
 . D ^DIE
"RTN","FBCHRR",51,0)
 ; if adjustment data changed then file
"RTN","FBCHRR",52,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBCHFA(FBI_",",.FBADJ)
"RTN","FBCHRR",53,0)
 ; if remit remark data changed then file
"RTN","FBCHRR",54,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBCHFR(FBI_",",.FBRRMK)
"RTN","FBCHRR",55,0)
 ; remove any gaps in codes
"RTN","FBCHRR",56,0)
 D RMVGAP^FBCHEP1(FBI,1)
"RTN","FBCHRR",57,0)
END K DIC,D,DA,DIRUT,DR,DTOUT,DUOUT,FBPRICE,VAL,DIE,FBI,FBN,FBNB,FBTYPE,I,POP,X,Y,FBLISTC
"RTN","FBCHRR",58,0)
 K FBFPPSC,FBFPPSL,FBADJ,FBADJL,FBRRMK,FBRRMKL
"RTN","FBCHRR",59,0)
 K LASTDX,LASTPROC,FBIA,FBDODINV
"RTN","FBCHRR",60,0)
 D END^FBCHDI
"RTN","FBCHRR",61,0)
 Q
"RTN","FBCHVH")
0^25^B38454495^B37233286
"RTN","FBCHVH",1,0)
FBCHVH ;AISC/DMK - VENDOR PAYMENT HISTORY ;7/17/2003
"RTN","FBCHVH",2,0)
 ;;3.5;FEE BASIS;**55,61,122,108,135,144,123**;JAN 30, 1995;Build 51
"RTN","FBCHVH",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBCHVH",4,0)
GETVEN K FBAANQ D GETVEN^FBAAUTL1 G END:IFN']""
"RTN","FBCHVH",5,0)
 D DATE^FBAAUTL G:FBPOP GETVEN S ZZ=9999999.9999,FBBEG=ZZ-ENDDATE,FBEND=ZZ-BEGDATE
"RTN","FBCHVH",6,0)
 I '$D(^FBAAI("AF",IFN)) W !,*7,"No invoices on line for this vendor." G GETVEN
"RTN","FBCHVH",7,0)
 S VAR="IFN^FBBEG^FBEND^BEGDATE^ENDDATE"_$S($D(FBPROG):"^FBPROG",1:""),VAL=IFN_"^"_FBBEG_"^"_FBEND_"^"_BEGDATE_"^"_ENDDATE_$S($D(FBPROG):"^"_FBPROG,1:""),PGM="START^FBCHVH" D ZIS^FBAAUTL G:FBPOP END S:IO=IO(0) FBAANQ=1
"RTN","FBCHVH",8,0)
START S:'$D(FBPROG) FBPROG=6 S FBHEAD="VENDOR",Q="",$P(Q,"=",80)="=",FBAAOUT=0 U IO D GETDAT S:$E(IOST,1,2)'["C-" FBPG=1 D HEDC
"RTN","FBCHVH",9,0)
 F FBM=FBBEG-.1:0 S FBM=$O(^FBAAI("AF",IFN,FBM)) Q:FBM'>0!(FBM>FBEND)  F FBI=0:0 S FBI=$O(^FBAAI("AF",IFN,FBM,FBI)) Q:FBI'>0!(FBAAOUT)  I $D(^FBAAI(FBI,0)),$P(^(0),"^",12)=FBPROG,'$D(^("FBREJ")) D GETINV
"RTN","FBCHVH",10,0)
 G:$D(FBAANQ) GETVEN
"RTN","FBCHVH",11,0)
END K DA,BEGDATE,ENDDATE,FBBEG,FBEND,DIC,FBAANQ,FBAAOUT,FBDX,FBI,FBIN,FBPROC,FBVEN,FBVID,IFN,J,K,L,PGM,Q,VADM,VAERR,VAL,VAR,X,Y,VA,ZZ,FBM,FBHEAD,FBPROG,FBPG,FBVINDT
"RTN","FBCHVH",12,0)
 D CLOSE^FBAAUTL Q
"RTN","FBCHVH",13,0)
GETINV ;
"RTN","FBCHVH",14,0)
 N FBADJLA,FBADJLR,FBCDAYS,FBCSID,FBFPPSC,FBFPPSL,FBRRMKL,FBY2,FBY3,FBY5,FBADMTDX,FBPOA,FBCNTRN,B
"RTN","FBCHVH",15,0)
 S FBIN=^FBAAI(FBI,0)
"RTN","FBCHVH",16,0)
 S FBY2=$G(^FBAAI(FBI,2))
"RTN","FBCHVH",17,0)
 S FBY3=$G(^FBAAI(FBI,3))
"RTN","FBCHVH",18,0)
 S FBY5=$G(^FBAAI(FBI,5))
"RTN","FBCHVH",19,0)
 F J=1,2,3,4,6,7,8,9,10,11,13,14 S FBIN(J)=$P(FBIN,"^",J)
"RTN","FBCHVH",20,0)
 S FBVINDT=$P(FBY2,"^",2) D FBCKI^FBAACCB1(FBI)
"RTN","FBCHVH",21,0)
 S FBVEN=$S($D(^FBAAV(+FBIN(3),0)):$P(^(0),"^",1),1:"") I FBVEN]"" S FBVID=$P(^(0),"^",2)
"RTN","FBCHVH",22,0)
 S DFN=FBIN(4) Q:'DFN  D DEM^VADPT
"RTN","FBCHVH",23,0)
 S Y=FBIN(2) D CDAT S FBIN(2)=Y
"RTN","FBCHVH",24,0)
 S Y=FBIN(6) D CDAT S FBIN(6)=Y,Y=FBIN(7) D CDAT S FBIN(7)=Y
"RTN","FBCHVH",25,0)
 S FBCDAYS=$P(FBY2,U,10) ; covered days
"RTN","FBCHVH",26,0)
 S FBCSID=$P(FBY2,U,11) ; patient control number
"RTN","FBCHVH",27,0)
 S FBFPPSC=$P(FBY3,U) ; fpps claim id
"RTN","FBCHVH",28,0)
 S FBFPPSL=$P(FBY3,U,2) ; fpps line item
"RTN","FBCHVH",29,0)
 S FBX=$$ADJLRA^FBCHFA(FBI_",")
"RTN","FBCHVH",30,0)
 S FBADJLR=$P(FBX,U)
"RTN","FBCHVH",31,0)
 S FBADJLA=$P(FBX,U,2)
"RTN","FBCHVH",32,0)
 S FBRRMKL=$$RRL^FBCHFR(FBI_",")
"RTN","FBCHVH",33,0)
WRT I $Y+6>IOSL D HANG^FBAAUTL1:$E(IOST,1,2)["C-" Q:FBAAOUT  I $D(^FBAAI(FBI,4)) D HEDC
"RTN","FBCHVH",34,0)
 W !,$S('$D(FBIN(13)):"",FBIN(13)="R":"*",1:""),$S($G(FBCAN)]"":"+",1:"")
"RTN","FBCHVH",35,0)
 W VADM(1)_"  "_$P(VADM(2),"^",2),?48,FBCSID
"RTN","FBCHVH",36,0)
 W !,?4,FBVEN,?45,FBVID,?62,FBIN(1)
"RTN","FBCHVH",37,0)
 W !,$S(FBIN(13)["R":"*",1:""),$S(FBIN(14)]"":"#",1:"")
"RTN","FBCHVH",38,0)
 W ?4,FBFPPSC,?18,FBFPPSL,?35,FBIN(2),?46,$$DATX^FBAAUTL(FBVINDT),?57,FBIN(6),?68,FBIN(7)
"RTN","FBCHVH",39,0)
 W !?4,$J(FBIN(8),1,2),?17,$J(FBIN(9),1,2),?29,FBCDAYS
"RTN","FBCHVH",40,0)
 ; write adjustment reasons, if null then write suspend code
"RTN","FBCHVH",41,0)
 W ?39,$S(FBADJLR]"":FBADJLR,1:FBIN(11))
"RTN","FBCHVH",42,0)
 ; write adjustment amounts, if null then write amount suspended
"RTN","FBCHVH",43,0)
 W ?49,$S(FBADJLA]"":FBADJLA,1:$J(FBIN(10),1,2))
"RTN","FBCHVH",44,0)
 W ?64,FBRRMKL
"RTN","FBCHVH",45,0)
 ;IPAC agreement data from patch FB*3.5*123
"RTN","FBCHVH",46,0)
 I +$P(FBY5,U,10) W !!?5,"IPAC Number: ",$P($G(^FBAA(161.95,+$P(FBY5,U,10),0)),U,1),?30,"DoD Invoice Number: ",$P(FBY5,U,7)
"RTN","FBCHVH",47,0)
 ;write admitting diagnosis
"RTN","FBCHVH",48,0)
 S FBADMTDX=$P(FBY5,"^",9) I FBADMTDX]"" W !?2,"Admit Dx: ",$$ICD9^FBCSV1((FBADMTDX),$P($G(FBIN),"^",6))
"RTN","FBCHVH",49,0)
 ;write contract number
"RTN","FBCHVH",50,0)
 S FBCNTRN=$S($P(FBY5,U,8):$P($G(^FBAA(161.43,$P(FBY5,U,8),0)),U),1:"")
"RTN","FBCHVH",51,0)
 I FBCNTRN]"" W ?25,"Contract Number: ",FBCNTRN
"RTN","FBCHVH",52,0)
 ;set diagnosis code and present on admission code
"RTN","FBCHVH",53,0)
 N P1,P2
"RTN","FBCHVH",54,0)
 S P1=$G(^FBAAI(FBI,"DX"))
"RTN","FBCHVH",55,0)
 S P2=$G(^FBAAI(FBI,"POA"))
"RTN","FBCHVH",56,0)
 F K=1:1:25 D WRTDX
"RTN","FBCHVH",57,0)
 ;display procedure code with line item prov data - FB*3.5*135
"RTN","FBCHVH",58,0)
 N DIR,DUOUT,DTOUT,FBOUT,F135,L,P3,P5,RPROV,STRLEN,WRTPC
"RTN","FBCHVH",59,0)
 S P5=$G(^FBAAI(FBI,"PROC"))   ; Procedure codes
"RTN","FBCHVH",60,0)
 M RPROV=^FBAAI(FBI,"RPROV")   ; LI Provider array
"RTN","FBCHVH",61,0)
 S F135=24,FBOUT=0,STRLEN=66
"RTN","FBCHVH",62,0)
 F L=1:1:25 S WRTPC=$$WRTPC I WRTPC]"" D  Q:FBOUT
"RTN","FBCHVH",63,0)
 . S P3=$O(RPROV("B",L,0))
"RTN","FBCHVH",64,0)
 . I P3 D    ; display LI Provider and NPI/TAXONOMY data if present
"RTN","FBCHVH",65,0)
 .. W !,?4,"PROC: "_WRTPC,?17,"RENDERING PROV NAME (LI): "_$P(RPROV(P3,0),U,2) S F135=1+F135,STRLEN=66
"RTN","FBCHVH",66,0)
 .. I '$L($P(RPROV(P3,0),U,3)),'$L($P(RPROV(P3,0),U,4)) Q
"RTN","FBCHVH",67,0)
 .. W !,?22,"NPI: "_$P(RPROV(P3,0),U,3),?43,"TAXONOMY CODE: "_$P(RPROV(P3,0),U,4) S F135=1+F135
"RTN","FBCHVH",68,0)
 . E  D  Q   ; only display procedure code
"RTN","FBCHVH",69,0)
 .. I STRLEN>65 W !,?4,"PROC: " S STRLEN=0    ; start new line
"RTN","FBCHVH",70,0)
 .. W WRTPC_" " S STRLEN=1+STRLEN+$L(WRTPC)
"RTN","FBCHVH",71,0)
 . I F135>22 S F135=0,STRLEN=66,DIR(0)="E" W ! D ^DIR K DIR S:$D(DUOUT)!($D(DTOUT)) FBOUT=1   ; pagination
"RTN","FBCHVH",72,0)
 N A2 S A2=FBIN(9) W ! D PMNT^FBAACCB2
"RTN","FBCHVH",73,0)
 Q
"RTN","FBCHVH",74,0)
WRTDX ;write dianosis code and present on admission code
"RTN","FBCHVH",75,0)
 N P3,P4
"RTN","FBCHVH",76,0)
 S FBDX=$P(P1,"^",K)
"RTN","FBCHVH",77,0)
 S FBPOA=$P(P2,"^",K)
"RTN","FBCHVH",78,0)
 Q:FBDX=""
"RTN","FBCHVH",79,0)
 S P3=$$ICD9^FBCSV1((FBDX),$P($G(FBIN),"^",6))_"/"
"RTN","FBCHVH",80,0)
 S P4=P3_$S(FBPOA:$P($G(^FB(161.94,FBPOA,0)),"^"),1:"")_" "
"RTN","FBCHVH",81,0)
 I K=1!($X+$L(P4)+2>IOM) W !,?4,"DX/POA: "
"RTN","FBCHVH",82,0)
 W P4,""
"RTN","FBCHVH",83,0)
 Q
"RTN","FBCHVH",84,0)
WRTPC() ;write procedure code (if present)    ; FB*3.5*135
"RTN","FBCHVH",85,0)
 N P6
"RTN","FBCHVH",86,0)
 S FBPROC=$P(P5,"^",L)
"RTN","FBCHVH",87,0)
 Q:FBPROC="" ""
"RTN","FBCHVH",88,0)
 S P6=$$ICD0^FBCSV1((FBPROC),$P($G(FBIN),"^",6))_" "
"RTN","FBCHVH",89,0)
 Q P6
"RTN","FBCHVH",90,0)
HEDC I $D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W ?25,FBHEAD_" PAYMENT HISTORY",!,?24,$E(Q,1,24),!?48,"Date Range: ",BEGDATE_" to "_ENDDATE
"RTN","FBCHVH",91,0)
 I '$D(FBHEAD) W:'$G(FBPG) @IOF K:$G(FBPG) FBPG W !?32,"INVOICE DISPLAY",!,?31,$E(Q,1,17),!
"RTN","FBCHVH",92,0)
 W !,"Veteran's Name",?48,"Patient Control Number"
"RTN","FBCHVH",93,0)
 W !,"('*'Reimbursement to Veteran   '+' Cancellation Activity)   '#' Voided Payment)"
"RTN","FBCHVH",94,0)
 W !,?4,"Vendor Name",?45,"Vendor ID",?59,"Invoice #"
"RTN","FBCHVH",95,0)
 ;W !,?3,"Fr Date",?14,"To Date  Claimed   Paid",?41,"Sus Code",?59,"Dt. Rec.",?69,"Inv. Date"
"RTN","FBCHVH",96,0)
 W !,?4,"FPPS Claim ID",?18,"FPPS Line Item",?35,"Date Rec.",?46,"Inv. Date",?57,"Fr Date",?68,"To Date"
"RTN","FBCHVH",97,0)
 W !,?4,"Amt Claimed",?17,"Amt Paid",?29,"Cov.Days",?39,"Adj Code",?49,"Adj Amount",?64,"Remit Remark"
"RTN","FBCHVH",98,0)
 W !,Q,!
"RTN","FBCHVH",99,0)
 Q
"RTN","FBCHVH",100,0)
CDAT S Y=$E(Y,4,5)_"/"_$S($E(Y,6,7)="00":$E(Y,2,3),1:$E(Y,6,7)_"/"_$E(Y,2,3)) Q
"RTN","FBCHVH",101,0)
GETDAT S Y=BEGDATE D PDF^FBAAUTL S BEGDATE=Y,Y=ENDDATE D PDF^FBAAUTL S ENDDATE=Y
"RTN","FBCHVH",102,0)
 Q
"RTN","FBCHVH",103,0)
PRVD ;DISPLAY PROVIDER INFORMATION BEFORE INVOICE DISPLAY FB*3.5*122
"RTN","FBCHVH",104,0)
 N FBPRI,FBSRVF,FBST
"RTN","FBCHVH",105,0)
 S FBPRI=$G(^FBAAI(FBI,4)),FBSRVF=$G(^FBAAI(FBI,5)),$P(FBSRVF,U,3)=$$GET1^DIQ(5,$P(FBSRVF,U,3)_",",1)
"RTN","FBCHVH",106,0)
 W @IOF,!?30,"INVOICE DISPLAY",!?30,"===============",!?28,"PROVIDER INFORMATION",!
"RTN","FBCHVH",107,0)
 I $L($P(FBPRI,U,1,3))>3 W !?3,"ATTENDING PROV NAME: "_$P(FBPRI,U),!?3,"ATTENDING PROV NPI: "_$P(FBPRI,U,2),?35,"ATTENDING PROV TAXONOMY CODE: "_$P(FBPRI,U,3)
"RTN","FBCHVH",108,0)
 I $L($P(FBPRI,U,4,5))>2 W !!?3,"OPERATING PROV NAME: "_$P(FBPRI,U,4),!?3,"OPERATING PROV NPI: "_$P(FBPRI,U,5)
"RTN","FBCHVH",109,0)
 I $L($P(FBPRI,U,6,8))>3 W !!?3,"RENDERING PROV NAME: "_$P(FBPRI,U,6),!?3,"RENDERING PROV NPI: "_$P(FBPRI,U,7),?35,"RENDERING PROV TAXONOMY CODE: "_$P(FBPRI,U,8)
"RTN","FBCHVH",110,0)
 I $L($P(FBPRI,U,9,10))>2 W !!?3,"SERVICING PROV NAME: "_$P(FBPRI,U,9),!?3,"SERVICING PROV NPI: "_$P(FBPRI,U,10)
"RTN","FBCHVH",111,0)
 I $L($P(FBSRVF,U,1,4))>4 W !?3,"SERVICING FACILITY ADDRESS: ",!?5,$P(FBSRVF,U),!?5,$P(FBSRVF,U,2) I $P(FBSRVF,U,2)'="" W ", "
"RTN","FBCHVH",112,0)
 W $P(FBSRVF,U,3)_" "_$P(FBSRVF,U,4)
"RTN","FBCHVH",113,0)
 I $L($P(FBPRI,U,11,12))>2 W !!?3,"REFERRING PROV NAME: "_$P(FBPRI,U,11),!?3,"REFERRING PROV NPI: "_$P(FBPRI,U,12),!!
"RTN","FBCHVH",114,0)
 S DIR(0)="E" D ^DIR
"RTN","FBCHVH",115,0)
 Q
"RTN","FBPAID1")
0^47^B24215121^B17574969
"RTN","FBPAID1",1,0)
FBPAID1 ;WOIFO/SAB - SERVER ROUTINE TO UPDATE PAYMENTS CON'T ;1/11/2012
"RTN","FBPAID1",2,0)
 ;;3.5;FEE BASIS;**19,107,121,132,123**;JAN 30, 1995;Build 51
"RTN","FBPAID1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBPAID1",4,0)
PARSE ;set-up variables for payment record called from FBPAID
"RTN","FBPAID1",5,0)
 ;  FBPROG = 3 for Outpatient (file 162)
"RTN","FBPAID1",6,0)
 ;         = T for Travel (file 162)
"RTN","FBPAID1",7,0)
 ;         = 5 for Pharmacy (file 162.1)
"RTN","FBPAID1",8,0)
 ;         = 9 for Inpatient (file 162.5)
"RTN","FBPAID1",9,0)
 ;         = $E(XMRG,7)      fee program and effected file
"RTN","FBPAID1",10,0)
 ;  FBACT  = $E(XMRG,8)      type of activity                
"RTN","FBPAID1",11,0)
 ;  FBIEN(x)=$E(XMRG,9,38)   IEN for payment record to update
"RTN","FBPAID1",12,0)
 ;  FBCKNUM= $E(XMRG,39,46)  check number
"RTN","FBPAID1",13,0)
 ;  old format (when total length = 77)
"RTN","FBPAID1",14,0)
 ;  FBCKDT = $E(XMRG,47,52)  check date
"RTN","FBPAID1",15,0)
 ;  FBINAMT= $E(XMRG,53,60)  interest amount
"RTN","FBPAID1",16,0)
 ;  FBXDT  = $E(XMRG,61,66)  cancel date
"RTN","FBPAID1",17,0)
 ;  FBRCOD = $E(XMRG,67)     reason code
"RTN","FBPAID1",18,0)
 ;  FBXCOD = $E(XMRG,68)     cancel code
"RTN","FBPAID1",19,0)
 ;  FBDAMT = $E(XMRG,69,76)  disbursed amount
"RTN","FBPAID1",20,0)
 ;  new format (when total length = 82)
"RTN","FBPAID1",21,0)
 ;  FBCKDT = $E(XMRG,47,54)  check date
"RTN","FBPAID1",22,0)
 ;  FBINAMT= $E(XMRG,55,62)  interest amount
"RTN","FBPAID1",23,0)
 ;  FBXDT  = $E(XMRG,63,70)  cancel date
"RTN","FBPAID1",24,0)
 ;  FBRCOD = $E(XMRG,71)     reason code
"RTN","FBPAID1",25,0)
 ;  FBXCOD = $E(XMRG,72)     cancel code
"RTN","FBPAID1",26,0)
 ;  FBDAMT = $E(XMRG,73,81)  disbursed amount
"RTN","FBPAID1",27,0)
 ;  FBBRTG = $E(XMRG,82,90)  bank routing number ;HIPAA 5010 P121
"RTN","FBPAID1",28,0)
 ;  FBBACC = $E(XMRG,91,107) bank account number ;HIPAA 5010 P121
"RTN","FBPAID1",29,0)
 ;  FBBNAM = $E(XMRG,108,138)bank name           ;HIPAA 5010 P121
"RTN","FBPAID1",30,0)
 ;  FBAMT  = Amount paid out of payment record
"RTN","FBPAID1",31,0)
 Q:$G(FBERR)
"RTN","FBPAID1",32,0)
 S FBPROG=$E(XMRG,7) I $S(FBPROG=3:0,FBPROG=5:0,FBPROG=9:0,FBPROG="T":0,1:1) S FBERR=1 Q
"RTN","FBPAID1",33,0)
 S FBACT=$E(XMRG,8) I $S(FBACT="C":0,FBACT="B":0,FBACT="X":0,1:1) S FBERR=1 Q
"RTN","FBPAID1",34,0)
 S FBIEN=$E(XMRG,9,38) D  Q:$G(FBERR)
"RTN","FBPAID1",35,0)
 . I FBPROG=3 D  Q:$G(FBERR)
"RTN","FBPAID1",36,0)
 ..S FBIEN(3)=+$P(FBIEN,U),FBIEN(2)=+$P(FBIEN,U,2),FBIEN(1)=+$P(FBIEN,U,3),FBIEN=+$P(FBIEN,U,4)
"RTN","FBPAID1",37,0)
 ..I '$D(^FBAAC(FBIEN(3),1,FBIEN(2),1,FBIEN(1),1,FBIEN,0)) D CHKMOVE
"RTN","FBPAID1",38,0)
 ..I '$D(^FBAAC(FBIEN(3),1,FBIEN(2),1,FBIEN(1),1,FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",39,0)
 . ;
"RTN","FBPAID1",40,0)
 . I FBPROG=5 D  Q:$G(FBERR)
"RTN","FBPAID1",41,0)
 ..S FBIEN(1)=+$P(FBIEN,U),FBIEN=+$P(FBIEN,U,2)
"RTN","FBPAID1",42,0)
 ..I '$D(^FBAA(162.1,FBIEN(1),"RX",FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",43,0)
 . ;
"RTN","FBPAID1",44,0)
 . I FBPROG=9 D  Q:$G(FBERR)
"RTN","FBPAID1",45,0)
 ..S FBIEN=+FBIEN I '$D(^FBAAI(FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",46,0)
 . ;
"RTN","FBPAID1",47,0)
 . I FBPROG="T" D  Q:$G(FBERR)
"RTN","FBPAID1",48,0)
 ..S FBIEN(1)=+$P(FBIEN,U),FBIEN=+$P(FBIEN,U,2)
"RTN","FBPAID1",49,0)
 ..I '$D(^FBAAC(FBIEN(1),3,FBIEN,0)) D CHKMOVE
"RTN","FBPAID1",50,0)
 ..I '$D(^FBAAC(FBIEN(1),3,FBIEN,0)) S FBERR=1,^TMP("FBERR",$J,3,I)=""
"RTN","FBPAID1",51,0)
 ;
"RTN","FBPAID1",52,0)
 ; esg - FB*3.5*123 - for IPAC payments, the check# is the IPAC document reference#. Don't strip leading zeros for IPAC.
"RTN","FBPAID1",53,0)
 S FBCKNUM=$E(XMRG,39,46)
"RTN","FBPAID1",54,0)
 I '$$IPACCHK(FBPROG,.FBIEN) S FBCKNUM=$$EXTRL^FBMRASVR(FBCKNUM,1)
"RTN","FBPAID1",55,0)
 ;
"RTN","FBPAID1",56,0)
 S FBCKDT=$$DATE4^FBPAID1($E(XMRG,47,54))
"RTN","FBPAID1",57,0)
 S FBINAMT=$S(+$E(XMRG,55,62):+$E(XMRG,55,60)_"."_$E(XMRG,61,62),1:0)
"RTN","FBPAID1",58,0)
 S FBINAMT=$S(FBINAMT=0:0,$P(FBINAMT,".",2)'>0:$P(FBINAMT,"."),1:+FBINAMT)
"RTN","FBPAID1",59,0)
 S FBXDT=$$DATE4^FBPAID1($E(XMRG,63,70))
"RTN","FBPAID1",60,0)
 S FBRCOD=$E(XMRG,71),FBXCOD=$E(XMRG,72)
"RTN","FBPAID1",61,0)
 S FBRCOD=$O(^FB(162.95,"C",FBRCOD,0))
"RTN","FBPAID1",62,0)
 S FBDAMT=$S(+$E(XMRG,73,81):+$E(XMRG,73,79)_"."_$E(XMRG,80,81),1:0)
"RTN","FBPAID1",63,0)
 S FBDAMT=$S(FBDAMT=0:0,$P(FBDAMT,".",2)'>0:$P(FBDAMT,"."),1:+FBDAMT)
"RTN","FBPAID1",64,0)
 I $L(XMRG)=138 D  ; process new format with bank fields HIPAA 5010 P121
"RTN","FBPAID1",65,0)
 . S FBBRTG=$$TRIM^XLFSTR($E(XMRG,82,90),"LR") ;bank routing number
"RTN","FBPAID1",66,0)
 . S FBBACC=$$TRIM^XLFSTR($E(XMRG,91,107),"LR") ;bank account number
"RTN","FBPAID1",67,0)
 . S FBBNAM=$$TRIM^XLFSTR($E(XMRG,108,137),"LR") ;bank name
"RTN","FBPAID1",68,0)
 Q
"RTN","FBPAID1",69,0)
 ;
"RTN","FBPAID1",70,0)
BUL ;create server bulletin message
"RTN","FBPAID1",71,0)
 S ^TMP("FBPAID",$J,0)=FBMCNT
"RTN","FBPAID1",72,0)
 Q
"RTN","FBPAID1",73,0)
DATE(X) ;pass in 'X'=date in yymmdd format and return date in
"RTN","FBPAID1",74,0)
 ;fileman format.
"RTN","FBPAID1",75,0)
 N Y I '$G(X) Q ""
"RTN","FBPAID1",76,0)
 S %DT="",X=$E(X,3,7)_$E(X,1,2) D ^%DT K %DT
"RTN","FBPAID1",77,0)
 Q $S(Y=-1:"",1:Y)
"RTN","FBPAID1",78,0)
DATE4(X) ;pass in 'X'=date in yyyymmdd format and return date in
"RTN","FBPAID1",79,0)
 ;fileman format.
"RTN","FBPAID1",80,0)
 N Y I '$G(X) Q ""
"RTN","FBPAID1",81,0)
 S %DT="",X=$E(X,5,6)_"/"_$E(X,7,8)_"/"_$E(X,1,4) D ^%DT K %DT
"RTN","FBPAID1",82,0)
 Q $S(Y=-1:"",1:Y)
"RTN","FBPAID1",83,0)
CHKMOVE ;check if payment line item was moved by patient merge process
"RTN","FBPAID1",84,0)
 ; input
"RTN","FBPAID1",85,0)
 ;   FBPROG - fee program (3 or "T")
"RTN","FBPAID1",86,0)
 ;   FBIEN - ien of payment (from austin)
"RTN","FBPAID1",87,0)
 ;   FBIEN() - ien(s) of higher level entries (1 for next higher, etc.)
"RTN","FBPAID1",88,0)
 ; output
"RTN","FBPAID1",89,0)
 ;   FBIEN   may be changed to reflect current value
"RTN","FBPAID1",90,0)
 ;   FBIEN() may be changed to reflect current value
"RTN","FBPAID1",91,0)
 N FBDA,FBFILE,FBNIENS,FBCIENS,FBSIENS
"RTN","FBPAID1",92,0)
 ;
"RTN","FBPAID1",93,0)
 ; determine file
"RTN","FBPAID1",94,0)
 S FBFILE=$S(FBPROG=3:162.03,FBPROG="T":162.04,1:"")
"RTN","FBPAID1",95,0)
 Q:FBFILE=""
"RTN","FBPAID1",96,0)
 ;
"RTN","FBPAID1",97,0)
 ; determine starting IEN string
"RTN","FBPAID1",98,0)
 I FBPROG="3" S FBSIENS=FBIEN_","_FBIEN(1)_","_FBIEN(2)_","_FBIEN(3)_","
"RTN","FBPAID1",99,0)
 I FBPROG="T" S FBSIENS=FBIEN_","_FBIEN(1)_","
"RTN","FBPAID1",100,0)
 Q:FBSIENS=""
"RTN","FBPAID1",101,0)
 ;
"RTN","FBPAID1",102,0)
 S FBCIENS=FBSIENS ; init current IEN string as starting IEN string
"RTN","FBPAID1",103,0)
 ;
"RTN","FBPAID1",104,0)
 ; loop thru moves for current IENs until no more moves are found
"RTN","FBPAID1",105,0)
 F  D  Q:FBNIENS=""
"RTN","FBPAID1",106,0)
 . S FBNIENS="" ; init new IENs value for a move
"RTN","FBPAID1",107,0)
 . S FBDA=$O(^FBAA(161.45,"C",FBFILE,FBCIENS,0))
"RTN","FBPAID1",108,0)
 . Q:'FBDA  ; no more moves
"RTN","FBPAID1",109,0)
 . S FBNIENS=$P($G(^FBAA(161.45,FBDA,0)),U,3) ; new IENs
"RTN","FBPAID1",110,0)
 . ; if new IEN is same as starting IEN, break out of the endless loop
"RTN","FBPAID1",111,0)
 . I FBNIENS=FBSIENS S FBNIENS="" Q
"RTN","FBPAID1",112,0)
 . ; set current IENs to the new value
"RTN","FBPAID1",113,0)
 . S:FBNIENS'="" FBCIENS=FBNIENS
"RTN","FBPAID1",114,0)
 ;
"RTN","FBPAID1",115,0)
 ; if current IENs is different from starting IENs update outputs
"RTN","FBPAID1",116,0)
 I FBCIENS'=FBSIENS D
"RTN","FBPAID1",117,0)
 . I FBPROG="3" D
"RTN","FBPAID1",118,0)
 . . S FBIEN=$P(FBCIENS,",",1)
"RTN","FBPAID1",119,0)
 . . S FBIEN(1)=$P(FBCIENS,",",2)
"RTN","FBPAID1",120,0)
 . . S FBIEN(2)=$P(FBCIENS,",",3)
"RTN","FBPAID1",121,0)
 . . S FBIEN(3)=$P(FBCIENS,",",4)
"RTN","FBPAID1",122,0)
 . I FBPROG="T" D
"RTN","FBPAID1",123,0)
 . . S FBIEN=$P(FBCIENS,",",1)
"RTN","FBPAID1",124,0)
 . . S FBIEN(1)=$P(FBCIENS,",",2)
"RTN","FBPAID1",125,0)
 Q
"RTN","FBPAID1",126,0)
 ;
"RTN","FBPAID1",127,0)
IPACCHK(FBPROG,FBIEN) ; check if payment is an IPAC payment (FB*3.5*123)
"RTN","FBPAID1",128,0)
 ; Function value is 1 if the payment is an IPAC payment, 0 otherwise
"RTN","FBPAID1",129,0)
 ; This is determined by the existence of a pointer value to file 161.95.
"RTN","FBPAID1",130,0)
 ;
"RTN","FBPAID1",131,0)
 N RES,FBFILE,FBSIENS,FBFIELD
"RTN","FBPAID1",132,0)
 S RES=0
"RTN","FBPAID1",133,0)
 I '$F(".3.5.9.","."_+$G(FBPROG)_".") G IPACKX
"RTN","FBPAID1",134,0)
 ;
"RTN","FBPAID1",135,0)
 ; get variables by type
"RTN","FBPAID1",136,0)
 I FBPROG=3 S FBFILE=162.03,FBSIENS=FBIEN_","_FBIEN(1)_","_FBIEN(2)_","_FBIEN(3)_",",FBFIELD=.05   ; outpat/ancil
"RTN","FBPAID1",137,0)
 I FBPROG=5 S FBFILE=162.1,FBSIENS=FBIEN(1)_",",FBFIELD=14                                         ; pharmacy (top level)
"RTN","FBPAID1",138,0)
 I FBPROG=9 S FBFILE=162.5,FBSIENS=FBIEN_",",FBFIELD=87                                            ; inpatient
"RTN","FBPAID1",139,0)
 ;
"RTN","FBPAID1",140,0)
 I +$$GET1^DIQ(FBFILE,FBSIENS,FBFIELD,"I") S RES=1     ; IPAC payment found
"RTN","FBPAID1",141,0)
IPACKX ;
"RTN","FBPAID1",142,0)
 Q RES
"RTN","FBPAID1",143,0)
 ;
"SEC","^DIC",161.95,161.95,0,"AUDIT")
#
"SEC","^DIC",161.95,161.95,0,"DD")
@
"SEC","^DIC",161.95,161.95,0,"DEL")
#
"SEC","^DIC",161.95,161.95,0,"LAYGO")
#
"SEC","^DIC",161.95,161.95,0,"RD")
#
"SEC","^DIC",161.95,161.95,0,"WR")
#
"SEC","^DIC",161.96,161.96,0,"AUDIT")
#
"SEC","^DIC",161.96,161.96,0,"DD")
@
"SEC","^DIC",161.96,161.96,0,"DEL")
#
"SEC","^DIC",161.96,161.96,0,"LAYGO")
#
"SEC","^DIC",161.96,161.96,0,"RD")
#
"SEC","^DIC",161.96,161.96,0,"WR")
#
"UP",162,162.03,-3)
162^1
"UP",162,162.03,-2)
162.01^1
"UP",162,162.03,-1)
162.02^1
"UP",162,162.03,0)
162.03
"UP",162.1,162.11,-1)
162.1^RX
"UP",162.1,162.11,0)
162.11
"VER")
8.0^22.0
"^DD",161.4,161.4,80,0)
LAST IPAC NUMBER^NJ9,0^^IPAC;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",161.4,161.4,80,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",161.4,161.4,80,21,0)
^^3^3^3130925^
"^DD",161.4,161.4,80,21,1,0)
This is the last number used to create the ID# field in the IPAC VENDOR
"^DD",161.4,161.4,80,21,2,0)
AGREEMENT file (#161.95).  This number is automatically incremented for 
"^DD",161.4,161.4,80,21,3,0)
each new IPAC vendor agreement that is created.
"^DD",161.4,161.4,80,"DT")
3130925
"^DD",161.95,161.95,0)
FIELD^^7.5^18
"^DD",161.95,161.95,0,"DDA")
N
"^DD",161.95,161.95,0,"DT")
3141023
"^DD",161.95,161.95,0,"ID",1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^FBAAV(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(161.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",161.95,161.95,0,"ID",2)
W "   ",$P(^(0),U,3)
"^DD",161.95,161.95,0,"ID",3)
W "   ",@("$P($P($C(59)_$S($D(^DD(161.95,3,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
"^DD",161.95,161.95,0,"ID",4)
W "   ",$P(^(0),U,5)
"^DD",161.95,161.95,0,"IX","B",161.95,.01)

"^DD",161.95,161.95,0,"IX","V",161.95,1)

"^DD",161.95,161.95,0,"NM","IPAC VENDOR AGREEMENT FILE")

"^DD",161.95,161.95,0,"PT",161.96,1)

"^DD",161.95,161.95,0,"PT",162.03,.05)

"^DD",161.95,161.95,0,"PT",162.1,14)

"^DD",161.95,161.95,0,"PT",162.5,87)

"^DD",161.95,161.95,0,"VRPK")
FB
"^DD",161.95,161.95,.01,0)
ID^RF^^0;1^K:$L(X)>10!($L(X)<3)!'(X'?1P.E) X
"^DD",161.95,161.95,.01,1,0)
^.1
"^DD",161.95,161.95,.01,1,1,0)
161.95^B
"^DD",161.95,161.95,.01,1,1,1)
S ^FBAA(161.95,"B",$E(X,1,30),DA)=""
"^DD",161.95,161.95,.01,1,1,2)
K ^FBAA(161.95,"B",$E(X,1,30),DA)
"^DD",161.95,161.95,.01,3)
Answer must be 3-10 characters in length.
"^DD",161.95,161.95,.01,21,0)
^^2^2^3140305^
"^DD",161.95,161.95,.01,21,1,0)
The ID is automatically generated by the software when a new 
"^DD",161.95,161.95,.01,21,2,0)
record is created.
"^DD",161.95,161.95,.01,"DT")
3140305
"^DD",161.95,161.95,1,0)
VENDOR^R*P161.2'^FBAAV(^0;2^S DIC("S")="I $P($G(^(""AMS"")),""^"",4)=""F""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",161.95,161.95,1,1,0)
^.1
"^DD",161.95,161.95,1,1,1,0)
161.95^V
"^DD",161.95,161.95,1,1,1,1)
S ^FBAA(161.95,"V",$E(X,1,30),DA)=""
"^DD",161.95,161.95,1,1,1,2)
K ^FBAA(161.95,"V",$E(X,1,30),DA)
"^DD",161.95,161.95,1,1,1,"DT")
3110810
"^DD",161.95,161.95,1,3)
Enter a vendor associated with this agreement.  It must be a federal vendor.
"^DD",161.95,161.95,1,12)
The vendor must have a FMS VENDOR TYPE equal to F (federal)
"^DD",161.95,161.95,1,12.1)
S DIC("S")="I $P($G(^(""AMS"")),""^"",4)=""F"""
"^DD",161.95,161.95,1,21,0)
^^3^3^3140305^
"^DD",161.95,161.95,1,21,1,0)
The federal vendor associated with the agreement.  If a vendor
"^DD",161.95,161.95,1,21,2,0)
has an active agreement on file, the system will force all
"^DD",161.95,161.95,1,21,3,0)
payments to that vendor to be made via IPAC.
"^DD",161.95,161.95,1,"DT")
3140305
"^DD",161.95,161.95,2,0)
FISCAL YEAR^RNJ4,0^^0;3^K:+X'=X!(X>9999)!(X<2000)!(X?.E1"."1N.N) X
"^DD",161.95,161.95,2,3)
Enter a four digit fiscal year (e.g. 2010).
"^DD",161.95,161.95,2,21,0)
^^3^3^3140305^
"^DD",161.95,161.95,2,21,1,0)
The fiscal year is used to identify the applicable period for 
"^DD",161.95,161.95,2,21,2,0)
an agreement record.  It is displayed as an identifier to
"^DD",161.95,161.95,2,21,3,0)
assist in selection of the appropriate record.
"^DD",161.95,161.95,2,"DT")
3140305
"^DD",161.95,161.95,3,0)
STATUS^R*S^N:NEW;A:ACTIVE;I:INACTIVE;^0;4^Q
"^DD",161.95,161.95,3,3)
Please select a code from the list.
"^DD",161.95,161.95,3,12)
The NEW status is automatically set by the system.
"^DD",161.95,161.95,3,12.1)
S DIC("S")="I Y'=""N"""
"^DD",161.95,161.95,3,21,0)
^^4^4^3140305^
"^DD",161.95,161.95,3,21,1,0)
Status of the record.  The NEW status is only set by the 
"^DD",161.95,161.95,3,21,2,0)
system and it indicates a record that is partially entered and
"^DD",161.95,161.95,3,21,3,0)
is missing some required fields. Once all required fields have
"^DD",161.95,161.95,3,21,4,0)
been filed, the status is automatically changed to ACTIVE.
"^DD",161.95,161.95,3,23,0)
^^6^6^3140305^
"^DD",161.95,161.95,3,23,1,0)
The status of NEW will be automatically set when the record is 
"^DD",161.95,161.95,3,23,2,0)
created.  The users may specify ACTIVE or INACTIVE with the 
"^DD",161.95,161.95,3,23,3,0)
application software if they are editing an agreement has data 
"^DD",161.95,161.95,3,23,4,0)
for all of its required fields. If the user is editing an
"^DD",161.95,161.95,3,23,5,0)
agreement that has no data for one or more required fields, the
"^DD",161.95,161.95,3,23,6,0)
Status field is not editable.
"^DD",161.95,161.95,3,"DT")
3140305
"^DD",161.95,161.95,4,0)
DESCRIPTION^RF^^0;5^K:$L(X)>60!($L(X)<3) X
"^DD",161.95,161.95,4,3)
Answer must be 3-60 characters in length.
"^DD",161.95,161.95,4,21,0)
^^3^3^3140305^
"^DD",161.95,161.95,4,21,1,0)
The description is an identifier.  It is displayed during 
"^DD",161.95,161.95,4,21,2,0)
selection of an agreement to assist the user to make an
"^DD",161.95,161.95,4,21,3,0)
appropriate choice.
"^DD",161.95,161.95,4,"DT")
3140305
"^DD",161.95,161.95,5,0)
SHARING AGREEMENT NO.^F^^0;6^K:$L(X)>13!($L(X)<1) X
"^DD",161.95,161.95,5,3)
Answer must be 1-13 characters in length.
"^DD",161.95,161.95,5,21,0)
^^2^2^3140305^
"^DD",161.95,161.95,5,21,1,0)
The sharing agreement number that is related to the IPAC vendor 
"^DD",161.95,161.95,5,21,2,0)
agreement.
"^DD",161.95,161.95,5,"DT")
3140305
"^DD",161.95,161.95,6,0)
CUSTOMER ALC^RF^^1;1^K:$L(X)>8!($L(X)<1) X
"^DD",161.95,161.95,6,3)
Answer must be 1-8 characters in length.
"^DD",161.95,161.95,6,21,0)
^^2^2^3140305^
"^DD",161.95,161.95,6,21,1,0)
The customer ALC is the agency location code (ALC) of the 
"^DD",161.95,161.95,6,21,2,0)
government agency that will be paid.
"^DD",161.95,161.95,6,"DT")
3140305
"^DD",161.95,161.95,7,0)
RECEIVER TAS^RF^^1;2^K:$L(X)>27!($L(X)<27) X
"^DD",161.95,161.95,7,3)
Answer must be 27 characters in length.
"^DD",161.95,161.95,7,21,0)
^^20^20^3141008^
"^DD",161.95,161.95,7,21,1,0)
The Treasury Account Symbol (TAS) for the government agency that 
"^DD",161.95,161.95,7,21,2,0)
will receive the IPAC transaction. This is a composite field which
"^DD",161.95,161.95,7,21,3,0)
contains 9 different component fields. Each part of the TAS must
"^DD",161.95,161.95,7,21,4,0)
be specified according to the following character position layout.
"^DD",161.95,161.95,7,21,5,0)
 
"^DD",161.95,161.95,7,21,6,0)
  Pos#  Field Name
"^DD",161.95,161.95,7,21,7,0)
 -----  ----------
"^DD",161.95,161.95,7,21,8,0)
  1-2   Sub-level Prefix (SP): "  " 2 spaces
"^DD",161.95,161.95,7,21,9,0)
  3-5   Allocation Transfer Agency ID (ATA): "   " 3 spaces
"^DD",161.95,161.95,7,21,10,0)
  6-8   Agency Identifier (AID): "097" is for DoD/DFAS
"^DD",161.95,161.95,7,21,11,0)
  9-12  Beginning Period of Availability (BPOA): FY
"^DD",161.95,161.95,7,21,12,0)
 13-16  Ending Period of Availability (EPOA): FY
"^DD",161.95,161.95,7,21,13,0)
 17-17  Availability Type Code (A): " " or "X" (see below)
"^DD",161.95,161.95,7,21,14,0)
 18-21  Main Account Code (MAIN): "0130"
"^DD",161.95,161.95,7,21,15,0)
 22-24  Sub-Account Code (SUB): "000"
"^DD",161.95,161.95,7,21,16,0)
 25-27  CGAC Component TAS indicator: "  C" 2 spaces + "C"
"^DD",161.95,161.95,7,21,17,0)
 
"^DD",161.95,161.95,7,21,18,0)
The Availability Type Code is a blank space if using the BPOA/EPOA
"^DD",161.95,161.95,7,21,19,0)
FY Funds. For No-Year Funds, the Availability Type Code is "X" and
"^DD",161.95,161.95,7,21,20,0)
the BPOA and EPOA values should both be 4 blank spaces.
"^DD",161.95,161.95,7,"DT")
3141008
"^DD",161.95,161.95,7.5,0)
SENDER TAS^RF^^1;5^K:$L(X)>27!($L(X)<1) X
"^DD",161.95,161.95,7.5,.1)

"^DD",161.95,161.95,7.5,3)
Answer must be 1-27 characters in length.
"^DD",161.95,161.95,7.5,21,0)
^^5^5^3141008^
"^DD",161.95,161.95,7.5,21,1,0)
The Treasury Account Symbol (TAS) for the government agency that 
"^DD",161.95,161.95,7.5,21,2,0)
will send the IPAC transaction. Please enter '036' as the Agency
"^DD",161.95,161.95,7.5,21,3,0)
ID Number for the VA. Central Fee will construct the full Sender
"^DD",161.95,161.95,7.5,21,4,0)
TAS based on the Obligation Number received in the payment batch
"^DD",161.95,161.95,7.5,21,5,0)
transmission.
"^DD",161.95,161.95,7.5,"DT")
3141008
"^DD",161.95,161.95,8,0)
AGENCY FIELD STATION NUMBER^RF^^1;3^K:$L(X)>8!($L(X)<1) X
"^DD",161.95,161.95,8,3)
Answer must be 1-8 characters in length.
"^DD",161.95,161.95,8,21,0)
^^3^3^3141027^
"^DD",161.95,161.95,8,21,1,0)
Please enter the DoD Fiscal Station Number. This station number 
"^DD",161.95,161.95,8,21,2,0)
will be used in the IPAC field called 'FSN/AAA/ADSN'.
"^DD",161.95,161.95,8,21,3,0)
Do NOT enter the VA station number here.
"^DD",161.95,161.95,8,"DT")
3141027
"^DD",161.95,161.95,9,0)
OBLIGATING DOCUMENT NO.^RF^^1;4^K:$L(X)>17!($L(X)<1) X
"^DD",161.95,161.95,9,3)
Answer must be 1-17 characters in length.
"^DD",161.95,161.95,9,21,0)
^^2^2^3141027^
"^DD",161.95,161.95,9,21,1,0)
Please enter the DoD Obligating Document Number. This is the 
"^DD",161.95,161.95,9,21,2,0)
internal accounting document number of the billing agency.
"^DD",161.95,161.95,9,"DT")
3141027
"^DD",161.95,161.95,10,0)
STATION CONTACT NAME^RF^^2;1^K:$L(X)>60!($L(X)<1) X
"^DD",161.95,161.95,10,3)
Answer must be 1-60 characters in length.
"^DD",161.95,161.95,10,21,0)
^^3^3^3140305^
"^DD",161.95,161.95,10,21,1,0)
Name of VA employee that should be contacted if there are 
"^DD",161.95,161.95,10,21,2,0)
questions about the IPAC transaction.  This value will be
"^DD",161.95,161.95,10,21,3,0)
included in the IPAC transaction.
"^DD",161.95,161.95,10,"DT")
3140305
"^DD",161.95,161.95,11,0)
STATION CONTACT PHONE^RF^^2;2^K:$L(X)>17!($L(X)<1) X
"^DD",161.95,161.95,11,3)
Answer must be 1-17 characters in length.
"^DD",161.95,161.95,11,21,0)
^^1^1^3140305^
"^DD",161.95,161.95,11,21,1,0)
Phone number for the station contact name.
"^DD",161.95,161.95,11,"DT")
3140305
"^DD",161.95,161.95,12,0)
STATION CONTACT EMAIL^RF^^2;3^K:$L(X)>100!($L(X)<1) X
"^DD",161.95,161.95,12,3)
Answer must be 1-100 characters in length.
"^DD",161.95,161.95,12,21,0)
^^1^1^3140305^
"^DD",161.95,161.95,12,21,1,0)
E-mail address for the VA employee who is the station contact.
"^DD",161.95,161.95,12,"DT")
3140305
"^DD",161.95,161.95,13,0)
COMPLETE LINE OF ACCOUNTING^RF^^3;1^K:$L(X)>60!($L(X)<1) X
"^DD",161.95,161.95,13,3)
Answer must be 1-60 characters in length.
"^DD",161.95,161.95,13,21,0)
^^3^3^3141027^
"^DD",161.95,161.95,13,21,1,0)
Please enter '097' as the Agency ID Number for the DoD/DFAS. 
"^DD",161.95,161.95,13,21,2,0)
The actual Complete Line of Accounting will be entered into
"^DD",161.95,161.95,13,21,3,0)
the DESC. OF GOODS & SERVICES field.
"^DD",161.95,161.95,13,"DT")
3141027
"^DD",161.95,161.95,14,0)
DESC. OF GOODS & SERVICES^RF^^4;1^K:$L(X)>200!($L(X)<1) X
"^DD",161.95,161.95,14,3)
Answer must be 1-200 characters in length.
"^DD",161.95,161.95,14,21,0)
^^4^4^3141027^
"^DD",161.95,161.95,14,21,1,0)
This is a 200 character free text field. Please enter the full and 
"^DD",161.95,161.95,14,21,2,0)
complete Line of Accounting (LOA) including the FSN and the DoD 
"^DD",161.95,161.95,14,21,3,0)
Obligating Document number and any other information required by 
"^DD",161.95,161.95,14,21,4,0)
DFAS in the Transaction Description field on the IPAC transaction.
"^DD",161.95,161.95,14,"DT")
3141027
"^DD",161.95,161.95,15,0)
MISCELLANEOUS INFO (1)^F^^5;1^K:$L(X)>220!($L(X)<1) X
"^DD",161.95,161.95,15,3)
Answer must be 1-220 characters in length.
"^DD",161.95,161.95,15,21,0)
^^5^5^3140305^
"^DD",161.95,161.95,15,21,1,0)
The text (if any) in MISCELLANEOUS INFO (1) will be included in 
"^DD",161.95,161.95,15,21,2,0)
the Miscellaneous Information block of the IPAC transaction.  
"^DD",161.95,161.95,15,21,3,0)
Miscellaneous Information may be used to specify the address of
"^DD",161.95,161.95,15,21,4,0)
the military treatment facility that is being paid and/or a point
"^DD",161.95,161.95,15,21,5,0)
of contact at DFAS.
"^DD",161.95,161.95,15,"DT")
3141027
"^DD",161.95,161.95,16,0)
MISCELLANEOUS INFO (2)^F^^6;1^K:$L(X)>80!($L(X)<1) X
"^DD",161.95,161.95,16,3)
Answer must be 1-80 characters in length.
"^DD",161.95,161.95,16,21,0)
^^6^6^3141023^
"^DD",161.95,161.95,16,21,1,0)
The text (if any) in MISCELLANEOUS INFO (2) will be included in 
"^DD",161.95,161.95,16,21,2,0)
the Miscellaneous Information block of the IPAC transaction
"^DD",161.95,161.95,16,21,3,0)
immediately after the text from MISCELLANEOUS INFO (1).  
"^DD",161.95,161.95,16,21,4,0)
Miscellaneous Information may be used to specify the address of
"^DD",161.95,161.95,16,21,5,0)
the military treatment facility that is being paid and/or a point
"^DD",161.95,161.95,16,21,6,0)
of contact at DFAS.
"^DD",161.95,161.95,16,"DT")
3141027
"^DD",161.96,161.96,0)
FIELD^^5^6
"^DD",161.96,161.96,0,"DDA")
N
"^DD",161.96,161.96,0,"DT")
3140305
"^DD",161.96,161.96,0,"IX","AD",161.96,5)

"^DD",161.96,161.96,0,"IX","AS",161.96,4)

"^DD",161.96,161.96,0,"IX","B",161.96,.01)

"^DD",161.96,161.96,0,"NM","IPAC VENDOR AGREEMENT MRA")

"^DD",161.96,161.96,0,"VRPK")
FB
"^DD",161.96,161.96,.01,0)
SEQUENCE NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X I $D(X) S DINUM=X
"^DD",161.96,161.96,.01,1,0)
^.1
"^DD",161.96,161.96,.01,1,1,0)
161.96^B
"^DD",161.96,161.96,.01,1,1,1)
S ^FBAA(161.96,"B",$E(X,1,30),DA)=""
"^DD",161.96,161.96,.01,1,1,2)
K ^FBAA(161.96,"B",$E(X,1,30),DA)
"^DD",161.96,161.96,.01,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",161.96,161.96,.01,21,0)
^^2^2^3140128^
"^DD",161.96,161.96,.01,21,1,0)
Sequence number is the same as the internal entry number (IEN) of the 
"^DD",161.96,161.96,.01,21,2,0)
record.
"^DD",161.96,161.96,.01,"DT")
3140128
"^DD",161.96,161.96,1,0)
IPAC VENDOR AGREEMENT^P161.95'^FBAA(161.95,^0;2^Q
"^DD",161.96,161.96,1,3)
Enter the IPAC agreement associated with this MRA.
"^DD",161.96,161.96,1,21,0)
^^4^4^3140128^
"^DD",161.96,161.96,1,21,1,0)
The IPAC VENDOR AGREEMENT that requires a master record adjustment (MRA)
"^DD",161.96,161.96,1,21,2,0)
transaction to be sent to Central Fee. This field is null when the action
"^DD",161.96,161.96,1,21,3,0)
of the (MRA) transaction is DELETE. This is because the IPAC agreement has
"^DD",161.96,161.96,1,21,4,0)
been removed from the database.
"^DD",161.96,161.96,1,"DT")
3140305
"^DD",161.96,161.96,2,0)
IPAC VENDOR AGREEMENT ID^F^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",161.96,161.96,2,3)
Answer must be 1-10 characters in length.
"^DD",161.96,161.96,2,21,0)
^^3^3^3110810^
"^DD",161.96,161.96,2,21,1,0)
The ID of the IPAC VENDOR AGREEMENT (#161.95).  This value is used when
"^DD",161.96,161.96,2,21,2,0)
generating delete MRAs since the IPAC VENDOR AGREEMENT will have already
"^DD",161.96,161.96,2,21,3,0)
been deleted from file 161.95.
"^DD",161.96,161.96,2,"DT")
3110810
"^DD",161.96,161.96,3,0)
ACTION^S^A:ADD;C:CHANGE;D:DELETE;^0;4^Q
"^DD",161.96,161.96,3,3)
Please select a code from the list.
"^DD",161.96,161.96,3,21,0)
^^1^1^3110810^
"^DD",161.96,161.96,3,21,1,0)
The type of master record adjustment (MRA).
"^DD",161.96,161.96,3,"DT")
3140305
"^DD",161.96,161.96,4,0)
STATUS^S^P:PENDING;T:TRANSMITTED;^0;5^Q
"^DD",161.96,161.96,4,1,0)
^.1
"^DD",161.96,161.96,4,1,1,0)
161.96^AS
"^DD",161.96,161.96,4,1,1,1)
S ^FBAA(161.96,"AS",$E(X,1,30),DA)=""
"^DD",161.96,161.96,4,1,1,2)
K ^FBAA(161.96,"AS",$E(X,1,30),DA)
"^DD",161.96,161.96,4,1,1,"%D",0)
^^2^2^3110810^
"^DD",161.96,161.96,4,1,1,"%D",1,0)
This cross-reference is used to select the MRAs that are pending
"^DD",161.96,161.96,4,1,1,"%D",2,0)
transmission to Central Fee.
"^DD",161.96,161.96,4,1,1,"DT")
3110810
"^DD",161.96,161.96,4,3)
Please select a code from the list.
"^DD",161.96,161.96,4,21,0)
^.001^3^3^3110926^^^^
"^DD",161.96,161.96,4,21,1,0)
The status of the master record adjustment.  There should not be more than
"^DD",161.96,161.96,4,21,2,0)
one master record adjustment with a pending status for a given
"^DD",161.96,161.96,4,21,3,0)
IPAC VENDOR AGREEMENT.
"^DD",161.96,161.96,4,"DT")
3140305
"^DD",161.96,161.96,5,0)
DATE TRANSMITTED^D^^0;6^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",161.96,161.96,5,1,0)
^.1
"^DD",161.96,161.96,5,1,1,0)
161.96^AD
"^DD",161.96,161.96,5,1,1,1)
S ^FBAA(161.96,"AD",$E(X,1,30),DA)=""
"^DD",161.96,161.96,5,1,1,2)
K ^FBAA(161.96,"AD",$E(X,1,30),DA)
"^DD",161.96,161.96,5,1,1,"%D",0)
^^1^1^3110810^
"^DD",161.96,161.96,5,1,1,"%D",1,0)
This cross-reference is used for purging and retransmissions.
"^DD",161.96,161.96,5,1,1,"DT")
3110810
"^DD",161.96,161.96,5,3)
Enter the date the MRA was transmitted to Central Fee.
"^DD",161.96,161.96,5,21,0)
^^1^1^3110810^
"^DD",161.96,161.96,5,21,1,0)
The date that the MRA was transmitted to Central Fee.
"^DD",161.96,161.96,5,"DT")
3140305
"^DD",161.99,161.99,0)
FIELD^^1^2
"^DD",161.99,161.99,0,"DDA")
N
"^DD",161.99,161.99,0,"DT")
3111213
"^DD",161.99,161.99,0,"IX","B",161.99,.01)

"^DD",161.99,161.99,0,"NM","FEE BASIS PAYMENT REJECT CODE")

"^DD",161.99,161.99,0,"VRPK")
FB
"^DD",161.99,161.99,.01,0)
CODE^RF^^0;1^K:$L(X)>4!($L(X)<1)!'(X'?1P.E) X
"^DD",161.99,161.99,.01,1,0)
^.1
"^DD",161.99,161.99,.01,1,1,0)
161.99^B
"^DD",161.99,161.99,.01,1,1,1)
S ^FBAA(161.99,"B",$E(X,1,30),DA)=""
"^DD",161.99,161.99,.01,1,1,2)
K ^FBAA(161.99,"B",$E(X,1,30),DA)
"^DD",161.99,161.99,.01,3)
Answer must be 1-4 characters in length.
"^DD",161.99,161.99,.01,21,0)
^^1^1^3111213^
"^DD",161.99,161.99,.01,21,1,0)
The field contains a reject reason code.
"^DD",161.99,161.99,.01,"DT")
3111213
"^DD",161.99,161.99,1,0)
DESCRIPTION^161.991^^1;0
"^DD",161.99,161.99,1,21,0)
^^1^1^3111214^
"^DD",161.99,161.99,1,21,1,0)
This field contains a description of the reject reason code.
"^DD",161.99,161.991,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",161.99,161.991,0,"DT")
3111213
"^DD",161.99,161.991,0,"NM","DESCRIPTION")

"^DD",161.99,161.991,0,"UP")
161.99
"^DD",161.99,161.991,.01,0)
DESCRIPTION^Wx^^0;1^Q
"^DD",161.99,161.991,.01,3)
Enter a description for the code.
"^DD",161.99,161.991,.01,21,0)
^^1^1^3111214^^
"^DD",161.99,161.991,.01,21,1,0)
This field contains a description of the reject reason code.
"^DD",161.99,161.991,.01,"DT")
3111214
"^DD",162,162.03,.05,0)
IPAC AGREEMENT^P161.95'^FBAA(161.95,^3;6^Q
"^DD",162,162.03,.05,1,0)
^.1
"^DD",162,162.03,.05,1,1,0)
162^IPAC
"^DD",162,162.03,.05,1,1,1)
S ^FBAAC("IPAC",$E(X,1,30),DA(3),DA(2),DA(1),DA)=""
"^DD",162,162.03,.05,1,1,2)
K ^FBAAC("IPAC",$E(X,1,30),DA(3),DA(2),DA(1),DA)
"^DD",162,162.03,.05,1,1,"%D",0)
^^2^2^3110812^
"^DD",162,162.03,.05,1,1,"%D",1,0)
This cross reference is used to identify any invoices that are associated
"^DD",162,162.03,.05,1,1,"%D",2,0)
with IPAC.
"^DD",162,162.03,.05,1,1,"DT")
3110812
"^DD",162,162.03,.05,3)
Enter the IPAC agreement associated with this invoice.
"^DD",162,162.03,.05,21,0)
^^2^2^3140130^
"^DD",162,162.03,.05,21,1,0)
This is the pointer to the IPAC Agreement file that is associated with 
"^DD",162,162.03,.05,21,2,0)
the invoice.
"^DD",162,162.03,.05,"DT")
3140130
"^DD",162,162.03,.055,0)
DoD INVOICE NUMBER^F^^3;7^K:$L(X)>22!($L(X)<3) X
"^DD",162,162.03,.055,1,0)
^.1
"^DD",162,162.03,.055,1,1,0)
162^DODI
"^DD",162,162.03,.055,1,1,1)
S ^FBAAC("DODI",$E(X,1,30),DA(3),DA(2),DA(1),DA)=""
"^DD",162,162.03,.055,1,1,2)
K ^FBAAC("DODI",$E(X,1,30),DA(3),DA(2),DA(1),DA)
"^DD",162,162.03,.055,1,1,"%D",0)
^.101^1^1^3140131^^
"^DD",162,162.03,.055,1,1,"%D",1,0)
DoD invoice number cross reference
"^DD",162,162.03,.055,1,1,"DT")
3110920
"^DD",162,162.03,.055,3)
Answer must be 3-22 characters in length.
"^DD",162,162.03,.055,21,0)
^^2^2^3140130^
"^DD",162,162.03,.055,21,1,0)
The DoD invoice number that is associated with this VistA invoice. Note 
"^DD",162,162.03,.055,21,2,0)
that one DoD invoice number may have more than one VistA invoice.
"^DD",162,162.03,.055,"DT")
3140130
"^DD",162.1,162.1,14,0)
IPAC VENDOR AGREEMENT^P161.95'^FBAA(161.95,^0;23^Q
"^DD",162.1,162.1,14,1,0)
^.1
"^DD",162.1,162.1,14,1,1,0)
162.1^IPAC
"^DD",162.1,162.1,14,1,1,1)
S ^FBAA(162.1,"IPAC",$E(X,1,30),DA)=""
"^DD",162.1,162.1,14,1,1,2)
K ^FBAA(162.1,"IPAC",$E(X,1,30),DA)
"^DD",162.1,162.1,14,1,1,"%D",0)
^^1^1^3110812^
"^DD",162.1,162.1,14,1,1,"%D",1,0)
This cross reference is used to identify invoices associated with IPAC.
"^DD",162.1,162.1,14,1,1,"DT")
3110812
"^DD",162.1,162.1,14,3)
Enter the Active IPAC vendor agreement ID.
"^DD",162.1,162.1,14,21,0)
^^3^3^3140130^
"^DD",162.1,162.1,14,21,1,0)
The IPAC Vendor Agreement that is associated with the pharmacy invoice. 
"^DD",162.1,162.1,14,21,2,0)
Note that if the pharmacy invoice is not for a federal vendor this field 
"^DD",162.1,162.1,14,21,3,0)
is null.
"^DD",162.1,162.1,14,"DT")
3140305
"^DD",162.1,162.11,39,0)
DoD INVOICE NUMBER^F^^6;1^K:$L(X)>22!($L(X)<3) X
"^DD",162.1,162.11,39,1,0)
^.1
"^DD",162.1,162.11,39,1,1,0)
162.1^DODI
"^DD",162.1,162.11,39,1,1,1)
S ^FBAA(162.1,"DODI",$E(X,1,30),DA(1),DA)=""
"^DD",162.1,162.11,39,1,1,2)
K ^FBAA(162.1,"DODI",$E(X,1,30),DA(1),DA)
"^DD",162.1,162.11,39,1,1,"%D",0)
^^1^1^3110920^
"^DD",162.1,162.11,39,1,1,"%D",1,0)
This is the DoD invoice number cross reference
"^DD",162.1,162.11,39,1,1,"DT")
3110920
"^DD",162.1,162.11,39,3)
Answer must be 3-22 characters in length.
"^DD",162.1,162.11,39,21,0)
^^2^2^3140130^
"^DD",162.1,162.11,39,21,1,0)
This is the DoD invoice number that is found in box 3a on the UB04 form or
"^DD",162.1,162.11,39,21,2,0)
box 26 on the CMS 1500 form.
"^DD",162.1,162.11,39,"DT")
3140130
"^DD",162.5,162.5,86,0)
DoD INVOICE NUMBER^F^^5;7^K:$L(X)>22!($L(X)<3) X
"^DD",162.5,162.5,86,1,0)
^.1
"^DD",162.5,162.5,86,1,1,0)
162.5^DODI
"^DD",162.5,162.5,86,1,1,1)
S ^FBAAI("DODI",$E(X,1,30),DA)=""
"^DD",162.5,162.5,86,1,1,2)
K ^FBAAI("DODI",$E(X,1,30),DA)
"^DD",162.5,162.5,86,1,1,"%D",0)
^^1^1^3110920^
"^DD",162.5,162.5,86,1,1,"%D",1,0)
This is the cross reference for the DoD invoice number
"^DD",162.5,162.5,86,1,1,"DT")
3110920
"^DD",162.5,162.5,86,3)
Answer must be 3-22 characters in length.
"^DD",162.5,162.5,86,21,0)
^^2^2^3140130^
"^DD",162.5,162.5,86,21,1,0)
The DoD invoice number that is associated with the invoice. Note that if
"^DD",162.5,162.5,86,21,2,0)
the invoice vendor is not a federal vendor then this field is null.
"^DD",162.5,162.5,86,"DT")
3140130
"^DD",162.5,162.5,87,0)
IPAC VENDOR AGREEMENT^P161.95'^FBAA(161.95,^5;10^Q
"^DD",162.5,162.5,87,1,0)
^.1
"^DD",162.5,162.5,87,1,1,0)
162.5^IPAC
"^DD",162.5,162.5,87,1,1,1)
S ^FBAAI("IPAC",$E(X,1,30),DA)=""
"^DD",162.5,162.5,87,1,1,2)
K ^FBAAI("IPAC",$E(X,1,30),DA)
"^DD",162.5,162.5,87,1,1,"%D",0)
^^1^1^3130823^
"^DD",162.5,162.5,87,1,1,"%D",1,0)
This cross reference is used to identify invoices associated with IPAC.
"^DD",162.5,162.5,87,1,1,"DT")
3130823
"^DD",162.5,162.5,87,3)
Enter the IPAC agreement associated with this invoice.
"^DD",162.5,162.5,87,21,0)
^^2^2^3140130^
"^DD",162.5,162.5,87,21,1,0)
The IPAC Agreement record that is associated with this invoice. Note that 
"^DD",162.5,162.5,87,21,2,0)
if the invoice vendor is not a federal vendor this is field is null.
"^DD",162.5,162.5,87,"DT")
3140305
"^DIC",161.95,161.95,0)
IPAC VENDOR AGREEMENT FILE^161.95
"^DIC",161.95,161.95,0,"GL")
^FBAA(161.95,
"^DIC",161.95,161.95,"%",0)
^1.005^^
"^DIC",161.95,161.95,"%D",0)
^^11^11^3130903^
"^DIC",161.95,161.95,"%D",1,0)
This file contains Intra-governmental Payment and Collection System (IPAC)
"^DIC",161.95,161.95,"%D",2,0)
vendor agreement data that is applicable to Fee Basis invoices.  Each
"^DIC",161.95,161.95,"%D",3,0)
record in this file is for a specific vendor and fiscal year.  More than
"^DIC",161.95,161.95,"%D",4,0)
one record can be entered for the same vendor.
"^DIC",161.95,161.95,"%D",5,0)
 
"^DIC",161.95,161.95,"%D",6,0)
When Fee invoices are entered, if the vendor being paid has an active IPAC
"^DIC",161.95,161.95,"%D",7,0)
vendor agreement on file the system will require the payment to be made
"^DIC",161.95,161.95,"%D",8,0)
via the IPAC system. This Department of Treasury system is used to
"^DIC",161.95,161.95,"%D",9,0)
transfer funds between government agencies.
"^DIC",161.95,161.95,"%D",10,0)
 
"^DIC",161.95,161.95,"%D",11,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",161.95,"B","IPAC VENDOR AGREEMENT FILE",161.95)

"^DIC",161.96,161.96,0)
IPAC VENDOR AGREEMENT MRA^161.96
"^DIC",161.96,161.96,0,"GL")
^FBAA(161.96,
"^DIC",161.96,161.96,"%",0)
^1.005^^
"^DIC",161.96,161.96,"%D",0)
^^8^8^3130903^
"^DIC",161.96,161.96,"%D",1,0)
This file contains Master Record Adjustment entries for the 
"^DIC",161.96,161.96,"%D",2,0)
Intra-Governmental Payment and Collection (IPAC) Vendor Agreements.
"^DIC",161.96,161.96,"%D",3,0)
 
"^DIC",161.96,161.96,"%D",4,0)
When IPAC Vendor Agreement information is added, edited, or deleted, this 
"^DIC",161.96,161.96,"%D",5,0)
updated information is sent to the Central Fee system in Austin so the 
"^DIC",161.96,161.96,"%D",6,0)
Central Fee master record data can have the same updates applied.
"^DIC",161.96,161.96,"%D",7,0)
 
"^DIC",161.96,161.96,"%D",8,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",161.96,"B","IPAC VENDOR AGREEMENT MRA",161.96)

"^DIC",161.99,161.99,0)
FEE BASIS PAYMENT REJECT CODE^161.99
"^DIC",161.99,161.99,0,"GL")
^FBAA(161.99,
"^DIC",161.99,161.99,"%",0)
^1.005^^0
"^DIC",161.99,161.99,"%D",0)
^^23^23^3120201^
"^DIC",161.99,161.99,"%D",1,0)
This file holds reject codes that are applicable to payment line items.  
"^DIC",161.99,161.99,"%D",2,0)
This file will be exported with data.  The data must not be locally
"^DIC",161.99,161.99,"%D",3,0)
modified.
"^DIC",161.99,161.99,"%D",4,0)
 
"^DIC",161.99,161.99,"%D",5,0)
VistA Fee Basis has four logical files/sub-files that contain payment line
"^DIC",161.99,161.99,"%D",6,0)
items:
"^DIC",161.99,161.99,"%D",7,0)
 1. SERVICE PROVIDED (#162.03) multiple within the FEE BASIS PAYMENT
"^DIC",161.99,161.99,"%D",8,0)
    (#162) file.
"^DIC",161.99,161.99,"%D",9,0)
 2. TRAVEL PAYMENT DATE (#162.04) multiple within the FEE BASIS PAYMENT
"^DIC",161.99,161.99,"%D",10,0)
    (#162) file.
"^DIC",161.99,161.99,"%D",11,0)
 3. PRESCRIPTION NUMBER (#162.11) multiple within the FEE BASIS PHARMACY
"^DIC",161.99,161.99,"%D",12,0)
    INVOICE (#162.1) file.
"^DIC",161.99,161.99,"%D",13,0)
 4. FEE BASIS INVOICE (#162.5) file.
"^DIC",161.99,161.99,"%D",14,0)
 
"^DIC",161.99,161.99,"%D",15,0)
Each of these four logical files has a free-text REJECT CODE field within
"^DIC",161.99,161.99,"%D",16,0)
a REJECT CODE multiple. The value stored in the REJECT CODE field is 
"^DIC",161.99,161.99,"%D",17,0)
normally expected to have a matching record in the FEE BASIS PAYMENT
"^DIC",161.99,161.99,"%D",18,0)
REJECT CODE file so a description of the reject code can be displayed on
"^DIC",161.99,161.99,"%D",19,0)
appropriate outputs.  In the event the FEE BASIS PAYMENT REJECT CODE file
"^DIC",161.99,161.99,"%D",20,0)
data is out-of-date and does not contain a code that is stored with a
"^DIC",161.99,161.99,"%D",21,0)
payment, a description similar to "Reject reason code not currently
"^DIC",161.99,161.99,"%D",22,0)
defined in list" will be used as the code description until the code 
"^DIC",161.99,161.99,"%D",23,0)
is added to file #161.99 by a patch.
"^DIC",161.99,"B","FEE BASIS PAYMENT REJECT CODE",161.99)

"BLD",9098,6)
^130
**END**
**END**

