Released FB*3.5*127 SEQ #125
Extracted from mail message
**KIDS**:FB*3.5*127^

**INSTALL NAME**
FB*3.5*127
"BLD",9387,0)
FB*3.5*127^FEE BASIS^0^3140130^y
"BLD",9387,1,0)
^^5^5^3130503^^
"BLD",9387,1,1,0)
This patch addresses the following:
"BLD",9387,1,2,0)
 
"BLD",9387,1,3,0)
- Blank MRAs are being transmitted to Central Fee
"BLD",9387,1,4,0)
- The low batch warning message is being triggered too late.
"BLD",9387,1,5,0)
- The calculation for batches remaining is incorrect.
"BLD",9387,4,0)
^9.64PA^^
"BLD",9387,6.3)
9
"BLD",9387,"INI")
POST^FBXIP127
"BLD",9387,"INID")
^^n
"BLD",9387,"KRN",0)
^9.67PA^779.2^20
"BLD",9387,"KRN",.4,0)
.4
"BLD",9387,"KRN",.401,0)
.401
"BLD",9387,"KRN",.402,0)
.402
"BLD",9387,"KRN",.403,0)
.403
"BLD",9387,"KRN",.5,0)
.5
"BLD",9387,"KRN",.84,0)
.84
"BLD",9387,"KRN",3.6,0)
3.6
"BLD",9387,"KRN",3.8,0)
3.8
"BLD",9387,"KRN",9.2,0)
9.2
"BLD",9387,"KRN",9.8,0)
9.8
"BLD",9387,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",9387,"KRN",9.8,"NM",2,0)
FBAAV4^^0^B35214888
"BLD",9387,"KRN",9.8,"NM",3,0)
FBUCDD1^^0^B14731515
"BLD",9387,"KRN",9.8,"NM",4,0)
FBAAUTL^^0^B26368074
"BLD",9387,"KRN",9.8,"NM","B","FBAAUTL",4)

"BLD",9387,"KRN",9.8,"NM","B","FBAAV4",2)

"BLD",9387,"KRN",9.8,"NM","B","FBUCDD1",3)

"BLD",9387,"KRN",19,0)
19
"BLD",9387,"KRN",19.1,0)
19.1
"BLD",9387,"KRN",101,0)
101
"BLD",9387,"KRN",409.61,0)
409.61
"BLD",9387,"KRN",771,0)
771
"BLD",9387,"KRN",779.2,0)
779.2
"BLD",9387,"KRN",870,0)
870
"BLD",9387,"KRN",8989.51,0)
8989.51
"BLD",9387,"KRN",8989.52,0)
8989.52
"BLD",9387,"KRN",8994,0)
8994
"BLD",9387,"KRN","B",.4,.4)

"BLD",9387,"KRN","B",.401,.401)

"BLD",9387,"KRN","B",.402,.402)

"BLD",9387,"KRN","B",.403,.403)

"BLD",9387,"KRN","B",.5,.5)

"BLD",9387,"KRN","B",.84,.84)

"BLD",9387,"KRN","B",3.6,3.6)

"BLD",9387,"KRN","B",3.8,3.8)

"BLD",9387,"KRN","B",9.2,9.2)

"BLD",9387,"KRN","B",9.8,9.8)

"BLD",9387,"KRN","B",19,19)

"BLD",9387,"KRN","B",19.1,19.1)

"BLD",9387,"KRN","B",101,101)

"BLD",9387,"KRN","B",409.61,409.61)

"BLD",9387,"KRN","B",771,771)

"BLD",9387,"KRN","B",779.2,779.2)

"BLD",9387,"KRN","B",870,870)

"BLD",9387,"KRN","B",8989.51,8989.51)

"BLD",9387,"KRN","B",8989.52,8989.52)

"BLD",9387,"KRN","B",8994,8994)

"BLD",9387,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",9387,"QUES",0)
^9.62^^
"BLD",9387,"REQB",0)
^9.611^3^3
"BLD",9387,"REQB",1,0)
FB*3.5*146^2
"BLD",9387,"REQB",2,0)
FB*3.5*124^2
"BLD",9387,"REQB",3,0)
FB*3.5*72^2
"BLD",9387,"REQB","B","FB*3.5*124",2)

"BLD",9387,"REQB","B","FB*3.5*146",1)

"BLD",9387,"REQB","B","FB*3.5*72",3)

"INI")
POST^FBXIP127
"MBREQ")
0
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^Used to pay private vendors
"PKG",60,20,0)
^9.402P^1^1
"PKG",60,20,1,0)
2^^FBPMRG
"PKG",60,20,1,1)

"PKG",60,20,"B",2,1)

"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5^2950130^2950313
"PKG",60,22,1,"PAH",1,0)
127^3140130
"PKG",60,22,1,"PAH",1,1,0)
^^5^5^3140130
"PKG",60,22,1,"PAH",1,1,1,0)
This patch addresses the following:
"PKG",60,22,1,"PAH",1,1,2,0)
 
"PKG",60,22,1,"PAH",1,1,3,0)
- Blank MRAs are being transmitted to Central Fee
"PKG",60,22,1,"PAH",1,1,4,0)
- The low batch warning message is being triggered too late.
"PKG",60,22,1,"PAH",1,1,5,0)
- The calculation for batches remaining is incorrect.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","FBAAUTL")
0^4^B26368074^B25814851
"RTN","FBAAUTL",1,0)
FBAAUTL ;AISC/GRR,SBW-Fee Basis Utility Routine ; 4/23/10 3:06pm
"RTN","FBAAUTL",2,0)
 ;;3.5;FEE BASIS;**101,114,108,124,127**;JAN 30, 1995;Build 9
"RTN","FBAAUTL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","FBAAUTL",4,0)
DATE N FBDT S FBPOP=0 K BEGDATE,ENDDATE K:$G(%DT)'["A" %DT W !!,"**** Date Range Selection ****"
"RTN","FBAAUTL",5,0)
 S FBDT=$S($D(%DT):1,1:0) W ! S %DT=$S(FBDT:%DT,1:"APEX"),%DT("A")="   Beginning DATE : " D ^%DT S:Y<0 FBPOP=1 Q:Y<0  S (%DT(0),BEGDATE)=Y
"RTN","FBAAUTL",6,0)
 W ! S %DT=$S(FBDT:%DT,1:"AEX"),%DT("A")="   Ending    DATE : " D ^%DT K %DT S:Y<0 FBPOP=1 Q:Y<0  W ! S ENDDATE=Y
"RTN","FBAAUTL",7,0)
 Q
"RTN","FBAAUTL",8,0)
 ;
"RTN","FBAAUTL",9,0)
ZIS S ZTRTN=PGM,ZTSAVE="",FBPOP=0 F I=1:1 Q:$P(VAR,"^",I)']""  S ZTSAVE($P(VAR,"^",I))=""
"RTN","FBAAUTL",10,0)
 I '$D(ZTDESC) S ZTDESC=$S($D(PGM):PGM,1:"UNKNOWN OPTION")
"RTN","FBAAUTL",11,0)
 W ! S %ZIS="QMP" D ^%ZIS S:POP FBPOP=1 Q:POP  I $D(IO("Q")) K IO("Q"),ZTIO D ^%ZTLOAD W:$D(ZTSK) !,*7,"REQUEST QUEUED",!,"Task #: ",$G(ZTSK) K I,ZTSK,ZTIO,ZTSAVE,ZTRTN D HOME^%ZIS S FBPOP=1 Q
"RTN","FBAAUTL",12,0)
 Q
"RTN","FBAAUTL",13,0)
 ;
"RTN","FBAAUTL",14,0)
CLOSE I '$D(ZTQUEUED) D ^%ZISC
"RTN","FBAAUTL",15,0)
 K IOP,ZTDESC,ZTRTN,ZTSAVE,ZTDTH,VAR,VAL,PGM,FBPOP,POP Q
"RTN","FBAAUTL",16,0)
 ;
"RTN","FBAAUTL",17,0)
D S Y=$P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC","^",$E(Y,4,5))_" "_$S(Y#100:$J(Y#100\1,2)_",",1:"")_(Y\10000+1700)_$S(Y#1:"  "_$E(Y_0,9,10)_":"_$E(Y_"000",11,12),1:"") Q
"RTN","FBAAUTL",18,0)
SITEP ;SET FBSITE(0),FBSITE(1) VARIABLE TO FEE SITE PARAMETERS
"RTN","FBAAUTL",19,0)
 S FBPOP=0,FBSITE(0)=$G(^FBAA(161.4,1,0)) S:FBSITE(0)']"" FBPOP=1
"RTN","FBAAUTL",20,0)
 S FBSITE(1)=$G(^FBAA(161.4,1,1)) S:FBSITE(1)']"" FBPOP=1
"RTN","FBAAUTL",21,0)
 S FBSITE("FBNUM")=$G(^FBAA(161.4,1,"FBNUM")) S:FBSITE("FBNUM")']"" FBPOP=1
"RTN","FBAAUTL",22,0)
 W:FBPOP !,*7,"Fee Basis Site Parameters must be entered to proceed",!
"RTN","FBAAUTL",23,0)
 Q
"RTN","FBAAUTL",24,0)
TM S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M" Q
"RTN","FBAAUTL",25,0)
PDF S:Y Y=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3) Q
"RTN","FBAAUTL",26,0)
GETNXB ;GET NEXT AVAILABLE BATCH NUMBER
"RTN","FBAAUTL",27,0)
 L +^FBAA(161.4):$G(DILOCKTM,3) I '$T D  G GETNXB
"RTN","FBAAUTL",28,0)
 .W !,"Another user is opening a batch.  Trying again.",!
"RTN","FBAAUTL",29,0)
 I '$D(^FBAA(161.4,1,"FBNUM")) S ^FBAA(161.4,1,"FBNUM")="1^1"
"RTN","FBAAUTL",30,0)
 I '$P($G(^FBAA(161.4,1,"FBNUM")),"^") S $P(^("FBNUM"),"^")=1
"RTN","FBAAUTL",31,0)
 S FBBN=$P(^FBAA(161.4,1,"FBNUM"),"^")
"RTN","FBAAUTL",32,0)
 ;I FBBN>99899,$S('$D(^FBAA(161.4,1,"PURGE")):1,$P(^FBAA(161.4,1,"PURGE"),"^",1)'>0:1,1:"") D WARNBT
"RTN","FBAAUTL",33,0)
 N FBBATLT ;Batches Left *127
"RTN","FBAAUTL",34,0)
 S FBBATLT=$P($G(^FBAA(161.7,0)),U,4)
"RTN","FBAAUTL",35,0)
 I FBBATLT>99499 D WARNBT ;*114,127
"RTN","FBAAUTL",36,0)
 S $P(^FBAA(161.4,1,"FBNUM"),"^",1)=$S(FBBN+1>99999:1,1:FBBN+1) I '$$CHKBI^FBAAUTL4(FBBN,1) L -^FBAA(161.4) G GETNXB
"RTN","FBAAUTL",37,0)
 L -^FBAA(161.4) Q
"RTN","FBAAUTL",38,0)
WARNBT W !,*7,"There are ",99999-FBBATLT," batches left before the BATCH PURGE routine",!,"needs to be run. Contact your IRM Service!",!!
"RTN","FBAAUTL",39,0)
 Q
"RTN","FBAAUTL",40,0)
GETNXI ;GET NEXT AVAILABLE INVOICE NUMBER 
"RTN","FBAAUTL",41,0)
 L +^FBAA(161.4):$G(DILOCKTM,3) I '$T D  G GETNXI
"RTN","FBAAUTL",42,0)
 .W !,"Another user is obtaining an invoice number.  Trying again.",!
"RTN","FBAAUTL",43,0)
 I '$D(^FBAA(161.4,1,"FBNUM")) S ^FBAA(161.4,1,"FBNUM")="1^1"
"RTN","FBAAUTL",44,0)
 I '$P($G(^FBAA(161.4,1,"FBNUM")),U,2) S $P(^("FBNUM"),U,2)=1
"RTN","FBAAUTL",45,0)
 S FBAAIN=$P(^FBAA(161.4,1,"FBNUM"),"^",2),$P(^("FBNUM"),"^",2)=$S(FBAAIN+1>9999999:1,1:FBAAIN+1) I '$$CHKBI^FBAAUTL4(FBAAIN) L -^FBAA(161.4) G GETNXI
"RTN","FBAAUTL",46,0)
 L -^FBAA(161.4) Q
"RTN","FBAAUTL",47,0)
PDATE S FBPDT=$P("January^February^March^April^May^June^July^August^September^October^November^December","^",$E(Y,4,5))_" "_$S(Y#100:$J(Y#100\1,2)_", ",1:"")_(Y\10000+1700)_$S(Y#1:"  "_$E(Y_0,9,10)_":"_$E(Y_"000",11,12),1:"") Q
"RTN","FBAAUTL",48,0)
DATCK S HOLDY=Y,HOLDY=$S($P(HOLDY,"^",2):$P(HOLDY,"^",2),1:HOLDY)
"RTN","FBAAUTL",49,0)
 I $D(FBAAID),Y>FBAAID D  K X Q
"RTN","FBAAUTL",50,0)
 .N SHODAT S SHODAT=$E(FBAAID,4,5)_"/"_$E(FBAAID,6,7)_"/"_$E(FBAAID,2,3)
"RTN","FBAAUTL",51,0)
 .W !!,*7,?5,"*** Date of Service cannot be later than",!?8," Invoice Received Date ("_SHODAT_") !!!",!
"RTN","FBAAUTL",52,0)
 I $D(FBAABDT),$D(FBAAEDT),(Y<FBAABDT!(Y>FBAAEDT)) D  K X
"RTN","FBAAUTL",53,0)
 .N PRIORLAT,AUTHDAT,SHODAT
"RTN","FBAAUTL",54,0)
 .S PRIORLAT=$S($P(Y,"^",2)<FBAABDT:"prior to ",1:"later than ")
"RTN","FBAAUTL",55,0)
 .S AUTHDAT=$S($P(Y,"^",2)<FBAABDT:FBAABDT,1:FBAAEDT)
"RTN","FBAAUTL",56,0)
 .S SHODAT=$E(AUTHDAT,4,5)_"/"_$E(AUTHDAT,6,7)_"/"_$E(AUTHDAT,2,3)
"RTN","FBAAUTL",57,0)
 .W !!,*7,?5,"*** Date of Service cannot be ",PRIORLAT
"RTN","FBAAUTL",58,0)
 .W !?8," Authorization period ("_SHODAT_") !!!",!
"RTN","FBAAUTL",59,0)
 S Y=HOLDY Q
"RTN","FBAAUTL",60,0)
 ;
"RTN","FBAAUTL",61,0)
DATX(X) ;external output function for date format
"RTN","FBAAUTL",62,0)
 ;INPUT = FM internal date format (time optional)
"RTN","FBAAUTL",63,0)
 ;OUTPUT = date/time with slashes
"RTN","FBAAUTL",64,0)
 Q $$FMTE^XLFDT(X,2)
"RTN","FBAAUTL",65,0)
 ;
"RTN","FBAAUTL",66,0)
STATION ;GET STATION NUMBER FROM INSTITUTION FILE
"RTN","FBAAUTL",67,0)
 I '$D(FBSITE(1)) D SITEP
"RTN","FBAAUTL",68,0)
 I $S('$D(FBSITE(1)):1,$P(FBSITE(1),"^",3)="":1,'$D(^DIC(4,$P(FBSITE(1),"^",3),0)):1,'$D(^DIC(4,$P(FBSITE(1),"^",3),99)):1,'+$P(^DIC(4,$P(FBSITE(1),"^",3),99),"^"):1,1:0) G NOSTA
"RTN","FBAAUTL",69,0)
 S (FBSN,FBAASN)=$S($D(^DIC(4,$P(FBSITE(1),"^",3),99)):$E(^(99),1,3),1:999)
"RTN","FBAAUTL",70,0)
 Q
"RTN","FBAAUTL",71,0)
NOSTA S FB("ERROR")=1 I '$D(ZTQUEUED) W !!,*7,"Unable to determine Station Number. Check Fee Site Parameters or Station Number in the Institution File.",!!
"RTN","FBAAUTL",72,0)
 Q
"RTN","FBAAUTL",73,0)
 ;
"RTN","FBAAUTL",74,0)
HD ;set transmission header
"RTN","FBAAUTL",75,0)
 I '$D(FBSITE(1)) S FBSITE(1)=$G(^FBAA(161.4,1,1))
"RTN","FBAAUTL",76,0)
 S FBHD=$$HDR^FBAAUTL3() I FBHD']"" S FB("ERROR")=1 W !,"Transmission header must exist in FEE BASIS SITE PARAMETER file",!,"before you can proceed.",*7,!
"RTN","FBAAUTL",77,0)
 Q
"RTN","FBAAUTL",78,0)
 ;
"RTN","FBAAUTL",79,0)
SSN(PID,BID,DOD) ;
"RTN","FBAAUTL",80,0)
 ;PID = DFN of Patient. If this is all that is past,
"RTN","FBAAUTL",81,0)
 ;full Pt.ID (000-00-0000) will be returned.
"RTN","FBAAUTL",82,0)
 ;If BID = 1 the call will return last 4 of Pt.ID only.
"RTN","FBAAUTL",83,0)
 ;If DOD is defined to internal entry # of eligibility the appropriate
"RTN","FBAAUTL",84,0)
 ;Pt.ID will be returned.
"RTN","FBAAUTL",85,0)
 N DFN,FBSSN
"RTN","FBAAUTL",86,0)
 S DFN=PID
"RTN","FBAAUTL",87,0)
 I 'DFN Q "Unknown"
"RTN","FBAAUTL",88,0)
 S:'$D(BID) BID="" S:$D(DOD) VAPTYP=DOD
"RTN","FBAAUTL",89,0)
 D PID^VADPT6 I VAERR K VAERR Q "Unknown"
"RTN","FBAAUTL",90,0)
 S FBSSN=$S(BID:VA("BID"),1:VA("PID"))
"RTN","FBAAUTL",91,0)
 K VA("BID"),VA("PID"),VAERR,VAPTYP
"RTN","FBAAUTL",92,0)
 Q FBSSN
"RTN","FBAAUTL",93,0)
 ;
"RTN","FBAAUTL",94,0)
SSNL4(SSN) ;Convert 1st 5 digits of SSN to X (Only print last 4 digits of SSN)
"RTN","FBAAUTL",95,0)
 ;Input:
"RTN","FBAAUTL",96,0)
 ;   SSN - SSN in 9 digit or ###-##-#### format
"RTN","FBAAUTL",97,0)
 ;     Pseudo SSN is also allowed as input
"RTN","FBAAUTL",98,0)
 ;Output
"RTN","FBAAUTL",99,0)
 ;   SSN - SSN in XXXXX#### or XXX-XX-#### format
"RTN","FBAAUTL",100,0)
 ;     Pseudo SSN will be changed as above with passed "P" at end
"RTN","FBAAUTL",101,0)
 ; X represent actual X and # represent digit
"RTN","FBAAUTL",102,0)
 ;
"RTN","FBAAUTL",103,0)
 S SSN=$G(SSN)
"RTN","FBAAUTL",104,0)
 ;Change SSN ######### to XXXXX####
"RTN","FBAAUTL",105,0)
 S:SSN?9N0.1"P" $E(SSN,1,5)="XXXXX"
"RTN","FBAAUTL",106,0)
 ;Change SSN ###-##-#### to XXX-XX-####
"RTN","FBAAUTL",107,0)
 S:SSN?3N1"-"2N1"-"4N0.1"P" $E(SSN,1,7)="XXX-XX-"
"RTN","FBAAUTL",108,0)
 Q SSN
"RTN","FBAAV4")
0^2^B35214888^B34466301
"RTN","FBAAV4",1,0)
FBAAV4 ;AISC/GRR-ELECTRONICALLY TRANSMIT PATIENT MRA'S ;12/16/2003
"RTN","FBAAV4",2,0)
 ;;3.5;FEE BASIS;**13,34,37,70,146,127**;JAN 30, 1995;Build 9
"RTN","FBAAV4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBAAV4",4,0)
 ;D STATION^FBAAUTL,HD^FBAAUTL Q:$D(FB("ERROR"))
"RTN","FBAAV4",5,0)
 S FBTXT=0,ZMCNT=1 ;FBTXT , ZMCNT 
"RTN","FBAAV4",6,0)
GO S J=0 F  S J=$O(^FBAA(161.26,"AC","P",J)) Q:J'>0  S FB0=$G(^FBAA(161.26,J,0)) I $P(FB0,U) S Y(0)=$G(^DPT($P(FB0,U),0)) I Y(0)]"" S FBTYPE=$S($P(FB0,U,4)]"":$P(FB0,U,4),1:"A"),FBFDC=$P(FB0,U,6),FBMST=$P(FB0,U,7) D
"RTN","FBAAV4",7,0)
 .; GETBT-prepare header 
"RTN","FBAAV4",8,0)
 .; NEWMSG^FBAAV01-get new message number, reset line counter, set subject line 
"RTN","FBAAV4",9,0)
 .; STORE^FBAAV01- increment line counter and store in ^XMB
"RTN","FBAAV4",10,0)
 .; FBLN -line counter; FBFEE- "FEE message" counter; FBOKTX=1 if message pending, 0 otherwise
"RTN","FBAAV4",11,0)
 .I 'FBTXT S FBTXT=1 D GETBT,NEWMSG^FBAAV01,STORE^FBAAV01
"RTN","FBAAV4",12,0)
 .; prepare and store patient MRA portion (can be more than 1)
"RTN","FBAAV4",13,0)
 .D GOT
"RTN","FBAAV4",14,0)
 D:+$G(FBOKTX) XMIT^FBAAV01
"RTN","FBAAV4",15,0)
 Q
"RTN","FBAAV4",16,0)
 ;GETBT - prepare the "header" of the message 
"RTN","FBAAV4",17,0)
GETBT D GETNXB^FBAAUTL ;get next batch # in FBBN
"RTN","FBAAV4",18,0)
 S FBZBN=$E("00000",$L(FBBN)+1,5)_FBBN,FBSN=FBSN_$E("      ",$L(FBSN)+1,6)
"RTN","FBAAV4",19,0)
 S FBSTR=FBHD_"C2"_$E(DT,4,7)_$E(DT,2,3)_FBSN_FBZBN_"$"
"RTN","FBAAV4",20,0)
 Q
"RTN","FBAAV4",21,0)
 ; 
"RTN","FBAAV4",22,0)
GOT ;patient MRA portion of the message
"RTN","FBAAV4",23,0)
 N FBCCFLG,FBPATICN,FB2NDSTR
"RTN","FBAAV4",24,0)
 ; patient info;input:Y(0);output:FBDOB,FBFI,FBFLNAM,FBLNAM,FBMI,FBNAME,FBSEX,FBSSN
"RTN","FBAAV4",25,0)
 D PAT^FBAAUTL2
"RTN","FBAAV4",26,0)
 S DFN=$P(FB0,U)
"RTN","FBAAV4",27,0)
 S FBFLNAM=$$HL7NAME(DFN),FBFI="",FBMI="" ;name (FBFI,FBMI - obsolete)
"RTN","FBAAV4",28,0)
 ; demographic info, output:VADM
"RTN","FBAAV4",29,0)
 D DEM^VADPT Q:$G(VAERR)
"RTN","FBAAV4",30,0)
 S FBBD=$P(VADM(3),"^"),FBBD=$E(FBBD,4,7)_$E(FBBD,2,3) ;DOB
"RTN","FBAAV4",31,0)
 S FBBD=$S(FBBD="":"      ",1:FBBD),FBSEX=$P(VADM(5),"^"),FBSEX=$S(FBSEX="F":2,1:1)
"RTN","FBAAV4",32,0)
 S DOD=$P($P(VADM(6),"^"),".") ;DOD
"RTN","FBAAV4",33,0)
 K VADM,VAERR
"RTN","FBAAV4",34,0)
 ;S Y(0)=$S($D(^DPT(DFN,.11)):^(.11),1:"") Q:Y(0)']""
"RTN","FBAAV4",35,0)
 ;S FBADD=$E($P(Y(0),"^",1),1,21),FBADD=FBADD_$E(PAD,$L(FBADD)+1,21),FBCITY=$E($P(Y(0),"^",4),1,13),FBCITY=FBCITY_$E(PAD,$L(FBCITY)+1,13),FBSTAT="  "
"RTN","FBAAV4",36,0)
 ;S STCD=$P(Y(0),"^",5) I STCD]"" S FBSTAT=$S($D(^DIC(5,STCD,0)):$P(^(0),"^",2),1:"  ")
"RTN","FBAAV4",37,0)
 ;
"RTN","FBAAV4",38,0)
 ;address info, output: VAPA()
"RTN","FBAAV4",39,0)
 S VAPA("P")="" D ADD^VADPT Q:$G(VAERR)
"RTN","FBAAV4",40,0)
 S FBADD=$$LRJ($G(VAPA(1)),35)_$$LRJ($G(VAPA(2)),35)_$$LRJ($G(VAPA(3)),35) ;street address
"RTN","FBAAV4",41,0)
 S FBCITY=$$LRJ($G(VAPA(4)),30) ;city
"RTN","FBAAV4",42,0)
 S STCD=+VAPA(5) I STCD S FBSTAT=$S($D(^DIC(5,STCD,0)):$P(^(0),"^",2),1:"  ") ;state
"RTN","FBAAV4",43,0)
 S FBZIP=$S('+$G(VAPA(11)):VAPA(6),+VAPA(11):$P(VAPA(11),"^"),1:VAPA(6)) ;zip
"RTN","FBAAV4",44,0)
 ;check for Confidential Communication (CC) address
"RTN","FBAAV4",45,0)
 S FBCCFLG=0 I 'VAERR S FBCCFLG=$$SENDCC()
"RTN","FBAAV4",46,0)
 S FB2NDSTR=$$SECLINE()
"RTN","FBAAV4",47,0)
 S FBZIP=$TR(FBZIP,"-","")_$E("000000000",$L(FBZIP)+1,9)
"RTN","FBAAV4",48,0)
 S STCC=+VAPA(7),FBCC="000" I STCC,STCD S FBCC=$S($D(^DIC(5,STCD,1,STCC,0)):$P(^(0),"^",3),1:"000") ;county code
"RTN","FBAAV4",49,0)
 K VAPA,VAERR
"RTN","FBAAV4",50,0)
 ;
"RTN","FBAAV4",51,0)
 ; eligibility, output:VAEL()
"RTN","FBAAV4",52,0)
 D ELIG^VADPT
"RTN","FBAAV4",53,0)
 S POS=$S(+VAEL(2):+VAEL(2),1:"") ;PERIOD OF SERVICE
"RTN","FBAAV4",54,0)
 K VAEL,VAERR
"RTN","FBAAV4",55,0)
 S POS=$S(POS="":8,$D(^DIC(21,POS,0)):$P(^(0),"^",3),1:8) ;default: 8 (POST-VIETNAM)
"RTN","FBAAV4",56,0)
 S DOD=$S(DOD="":"000000",1:$E(DOD,4,7)_$E(DOD,2,3))
"RTN","FBAAV4",57,0)
 ;
"RTN","FBAAV4",58,0)
 ; service information
"RTN","FBAAV4",59,0)
 D SVC^VADPT
"RTN","FBAAV4",60,0)
 S POW=$S(+VASV(4):+VASV(4),1:""),POW=$S(POW="":2,POW=1:1,1:2) ;if prisoner of war
"RTN","FBAAV4",61,0)
 ;
"RTN","FBAAV4",62,0)
 ; remove all variables defined by VADPT
"RTN","FBAAV4",63,0)
 D KVAR^VADPT
"RTN","FBAAV4",64,0)
 ;
"RTN","FBAAV4",65,0)
 ;using pointer FEE BASIS PATIENT MRA file retrieve info from 
"RTN","FBAAV4",66,0)
 ;FEE BASIS PATIENT file#161, from its authorization multiple ^FBAAA(DA(1),1,DA
"RTN","FBAAV4",67,0)
 ;S FBAUTH=$P(^FBAA(161.26,J,0),"^",3) Q:FBAUTH']""  Q:'$D(^FBAAA(DFN,1,FBAUTH,0))  S Y(0)=^(0) ;Removed line to modify code - FB*3.5*127
"RTN","FBAAV4",68,0)
 S FBAUTH=$P(^FBAA(161.26,J,0),"^",3) I FBAUTH']"" S FBOKTX=0 Q  ;FB*3.5*127
"RTN","FBAAV4",69,0)
 I '$D(^FBAAA(DFN,1,FBAUTH,0)) S FBOKTX=0 Q  ;FB*3.5*127
"RTN","FBAAV4",70,0)
 S Y(0)=^(0) ;FB*3.5*127
"RTN","FBAAV4",71,0)
 ;authorisation FROM
"RTN","FBAAV4",72,0)
 S FBFR=$P(Y(0),"^")
"RTN","FBAAV4",73,0)
 ;authorisation TO
"RTN","FBAAV4",74,0)
 S FBTO=$P(Y(0),"^",2)
"RTN","FBAAV4",75,0)
 ;PURPOSE OF VISIT
"RTN","FBAAV4",76,0)
 S POV=$P(Y(0),"^",7),POV=$S(POV="":"",$D(^FBAA(161.82,POV,0)):$P(^(0),"^",3),1:""),POV=$S(POV]"":POV,1:"05")
"RTN","FBAAV4",77,0)
 ;TREATMENT TYPE CODE (SHORT TERM,HOME NURSING,I.D. CARD,STATE HOME)
"RTN","FBAAV4",78,0)
 S FBTT=$P(Y(0),"^",13),FBTT=$S(FBTT]"":FBTT,1:1)
"RTN","FBAAV4",79,0)
 ;
"RTN","FBAAV4",80,0)
 S FBRECT=$S(FBTT=4:"7",FBTT=2:"S",$G(POV)>28&($G(POV)<50):"C",1:2)
"RTN","FBAAV4",81,0)
 ;formatting FORM and TO dates
"RTN","FBAAV4",82,0)
 S FBFR=$E(FBFR,4,7)_$E(FBFR,2,3),FBTO=$E(FBTO,4,7)_$E(FBTO,2,3)
"RTN","FBAAV4",83,0)
 ;flag that the authorization From Date is being changed by this 
"RTN","FBAAV4",84,0)
 ;master record adjustment (see file #161.26, field #5)
"RTN","FBAAV4",85,0)
 I FBTYPE="C" S FBTO=$S(FBFDC=1:"      ",1:FBTO)
"RTN","FBAAV4",86,0)
 ;
"RTN","FBAAV4",87,0)
 I FBTT=2,"^70^71^74^"'[(U_POV_U) S POV=71
"RTN","FBAAV4",88,0)
 ;if 
"RTN","FBAAV4",89,0)
 S ZMCNT=ZMCNT+1 I ZMCNT>100 D GETBT,STORE S ZMCNT=ZMCNT+1
"RTN","FBAAV4",90,0)
 ; patch FB*3.5*13 changed format of delete MRAs to include the From Date
"RTN","FBAAV4",91,0)
 I FBTYPE="D" D  Q
"RTN","FBAAV4",92,0)
 . S FBRECT=$S(FBTT=4:"7",FBTT=2:"S",$G(POV)=31:"C",1:2)
"RTN","FBAAV4",93,0)
 . S FBSTR=FBRECT_FBTYPE_FBSN_FBSSN_FBFR_"$"
"RTN","FBAAV4",94,0)
 . D ZAP
"RTN","FBAAV4",95,0)
 I FBTYPE="R" D
"RTN","FBAAV4",96,0)
 . S FBRECT=$S(FBTT=4:"7",FBTT=2:"S",$G(POV)=31:"C",1:2)
"RTN","FBAAV4",97,0)
 . ; If Re-Instate for a State Home record type then switch to Add
"RTN","FBAAV4",98,0)
 . ;   because Central FEE does not retain deleted State Home auth.
"RTN","FBAAV4",99,0)
 . I FBRECT=7 S FBTYPE="A" Q
"RTN","FBAAV4",100,0)
 . ; For all other record types send a Re-Instate followed by a Change
"RTN","FBAAV4",101,0)
 . S FBSTR=FBRECT_FBTYPE_FBSN_FBSSN_"$"
"RTN","FBAAV4",102,0)
 . D ZAP
"RTN","FBAAV4",103,0)
 . S FBTYPE="C"
"RTN","FBAAV4",104,0)
 ; construct Add and Change record types
"RTN","FBAAV4",105,0)
 S FBTT=$S(FBMST="Y":0,1:FBTT)
"RTN","FBAAV4",106,0)
 S FBPATICN=$$ICN(DFN) ;get patient's ICN
"RTN","FBAAV4",107,0)
 S FBSTR=FBRECT_FBTYPE_FBSN_FBSSN_FBFI_FBMI_FBFLNAM_FBADD_FBCITY_FBSTAT_FBZIP_FBFR_FBTO_FBCC_FBBD_POV_" "_FBTT_FBSEX_POW_DOD_" "_POS_FBPATICN_"~"
"RTN","FBAAV4",108,0)
 ;if no CC address then send only 1st line of Add and Change record
"RTN","FBAAV4",109,0)
 I FBCCFLG=0 S FBSTR=FBSTR_"$" D ZAP Q
"RTN","FBAAV4",110,0)
 ;save 1st line of Add and Change record
"RTN","FBAAV4",111,0)
 D STORE
"RTN","FBAAV4",112,0)
 ;create 2nd line for CC address
"RTN","FBAAV4",113,0)
 S FBSTR=FB2NDSTR
"RTN","FBAAV4",114,0)
 D ZAP
"RTN","FBAAV4",115,0)
 Q
"RTN","FBAAV4",116,0)
 ;place in XMB for transmission and update FBAA(161.26
"RTN","FBAAV4",117,0)
ZAP D STORE
"RTN","FBAAV4",118,0)
 S DA=J,(DIC,DIE)="^FBAA(161.26,",T="T",DR="1///^S X=T;4///^S X=DT" D ^DIE
"RTN","FBAAV4",119,0)
 Q
"RTN","FBAAV4",120,0)
SKIP S FBRECT=$S(FBTT=2:"S",1:2),FBSTR=FBRECT_FBTYPE_FBSN_FBSSN_"$" G ZAP
"RTN","FBAAV4",121,0)
STORE I ZMCNT>100 D XMIT^FBAAV01,NEWMSG^FBAAV01 S ZMCNT=1
"RTN","FBAAV4",122,0)
 D STORE^FBAAV01
"RTN","FBAAV4",123,0)
 Q
"RTN","FBAAV4",124,0)
 ;---
"RTN","FBAAV4",125,0)
 ;Patient's INTEGRATION CONTROL NUMBER
"RTN","FBAAV4",126,0)
 ;to be implemented in future
"RTN","FBAAV4",127,0)
 ;meanwhile returns 17 spaces
"RTN","FBAAV4",128,0)
ICN(FBDFN) ;
"RTN","FBAAV4",129,0)
 Q $$LRJ("",17)
"RTN","FBAAV4",130,0)
 ;---
"RTN","FBAAV4",131,0)
 ;adds spaces on right/left or truncates to make return string FBLEN characters long
"RTN","FBAAV4",132,0)
 ;FBST- original string
"RTN","FBAAV4",133,0)
 ;FBLEN - desired length
"RTN","FBAAV4",134,0)
 ;FBCHR -character (default = SPACE)
"RTN","FBAAV4",135,0)
 ;FBSIDE - on which side to add characters (default = RIGHT)
"RTN","FBAAV4",136,0)
LRJ(FBST,FBLEN,FBCHR,FBSIDE) ;
"RTN","FBAAV4",137,0)
 N Y S $P(Y,$S($L($G(FBCHR)):FBCHR,1:" "),$S(FBLEN-$L(FBST)<0:1,1:FBLEN-$L(FBST)+1))=""
"RTN","FBAAV4",138,0)
 Q $E($S($G(FBSIDE)="L":Y_FBST,1:FBST_Y),1,FBLEN)
"RTN","FBAAV4",139,0)
 ;---
"RTN","FBAAV4",140,0)
 ;parse name components
"RTN","FBAAV4",141,0)
HL7NAME(FBDFN) ;
"RTN","FBAAV4",142,0)
 N FBAR,FBNM
"RTN","FBAAV4",143,0)
 S FBAR("FILE")=2,FBAR("IENS")=FBDFN,FBAR("FIELD")=.01
"RTN","FBAAV4",144,0)
 S FBNM=$$HLNAME^XLFNAME(.FBAR,"L30","|")
"RTN","FBAAV4",145,0)
 Q $$LRJ(FBNM,30)
"RTN","FBAAV4",146,0)
 ;
"RTN","FBAAV4",147,0)
 ;create 2nd line for CC address
"RTN","FBAAV4",148,0)
 ;VAPA should be determined
"RTN","FBAAV4",149,0)
SECLINE() ;
"RTN","FBAAV4",150,0)
 N FBSTR1
"RTN","FBAAV4",151,0)
 S FBSTR1=$$LRJ($G(VAPA(13)),35)_$$LRJ($G(VAPA(14)),35)_$$LRJ($G(VAPA(15)),35)_$$LRJ($G(VAPA(16)),30) ;street address
"RTN","FBAAV4",152,0)
 S FBSTR1=FBSTR1_$$LRJ($S(+$G(VAPA(17)):$P($G(^DIC(5,+$G(VAPA(17)),0)),"^",2),1:""),2) ;state
"RTN","FBAAV4",153,0)
 S FBSTR1=FBSTR1_$$LRJ($TR($P($G(VAPA(18)),"^",1),"-",""),9,"0") ;zip
"RTN","FBAAV4",154,0)
 S FBSTR1=FBSTR1_$$LRJ($E(+$G(VAPA(20)),4,5)_$E(+$G(VAPA(20)),6,7)_$E(+$G(VAPA(20)),2,3),6)
"RTN","FBAAV4",155,0)
 S FBSTR1=FBSTR1_$$LRJ($E(+$G(VAPA(21)),4,5)_$E(+$G(VAPA(21)),6,7)_$E(+$G(VAPA(21)),2,3),6)
"RTN","FBAAV4",156,0)
 S FBSTR1=FBSTR1_$$LRJ($P($G(^DIC(5,+$G(VAPA(17)),1,+$G(VAPA(19)),0)),"^",3),3,"0","L") ;county code
"RTN","FBAAV4",157,0)
 S FBSTR1=FBSTR1_"~$"
"RTN","FBAAV4",158,0)
 Q FBSTR1
"RTN","FBAAV4",159,0)
 ;------
"RTN","FBAAV4",160,0)
 ;SENDCC
"RTN","FBAAV4",161,0)
 ;returns 1 if CC address needs to be sent, otherwise - 0
"RTN","FBAAV4",162,0)
 ;is called after ADD^VADPT, i.e. VAPA should be defined
"RTN","FBAAV4",163,0)
SENDCC() ;
"RTN","FBAAV4",164,0)
 ;if it is currrently active
"RTN","FBAAV4",165,0)
 I $$ACTIVECC^FBAACO0() Q 1
"RTN","FBAAV4",166,0)
 N X D NOW^%DTC ;set X to TODAY
"RTN","FBAAV4",167,0)
 I ($P($G(VAPA(22,3)),"^",3)="Y"),+$G(VAPA(20))>X Q 1
"RTN","FBAAV4",168,0)
 Q 0
"RTN","FBAAV4",169,0)
 ;
"RTN","FBUCDD1")
0^3^B14731515^B12506085
"RTN","FBUCDD1",1,0)
FBUCDD1 ;ALBISC/TET - DD UTILITY (cont'd.) ;5/27/93
"RTN","FBUCDD1",2,0)
 ;;3.5;FEE BASIS;**60,72,127**;JAN 30, 1995;Build 9
"RTN","FBUCDD1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBUCDD1",4,0)
DEL(DA) ;del node on .01 field of 162.7, unauthorized claim file
"RTN","FBUCDD1",5,0)
 ;INPUT:  DA = ien of 162.7
"RTN","FBUCDD1",6,0)
 I 1 N FBORDER,FBZ S FBZ=$$FBZ^FBUCUTL(DA) S FBORDER=$$ORDER^FBUCUTL(+$P(FBZ,U,24)) W ! W:FBORDER'<40 "Disposition to Cancel/Withdrawn." W:FBORDER<40 "Use the Delete Unauthorized Claim option." W !
"RTN","FBUCDD1",7,0)
 Q
"RTN","FBUCDD1",8,0)
DEV(X) ;input transform on field 33, UNAUTHORIZED CLAIM PRINTER, file 161.4
"RTN","FBUCDD1",9,0)
 ;check x, and if x is a device, with subtype beginning with p(rinter)
"RTN","FBUCDD1",10,0)
 ;INPUT:  X - FM variable, input
"RTN","FBUCDD1",11,0)
 ;OUTPUT: 1 to kill x (invalid entry), otherwise 0
"RTN","FBUCDD1",12,0)
 Q $S('$D(X):1,'$$DEVICE(X):1,1:0)
"RTN","FBUCDD1",13,0)
 ;
"RTN","FBUCDD1",14,0)
SUBTYPE(X) ;extrinsic call for subtype check
"RTN","FBUCDD1",15,0)
 ;INPUT:  X = internal entry of device
"RTN","FBUCDD1",16,0)
 ;OUTPUT: 1 if subtype is a printer
"RTN","FBUCDD1",17,0)
 N Z1,Z2 S Z1=$S('$D(X):0,'+X:0,1:X),Z2=0 S Z2=+$G(^%ZIS(1,X,"SUBTYPE")),Z2=$P($G(^%ZIS(2,Z2,0)),U)
"RTN","FBUCDD1",18,0)
 Q $S(Z2']"":0,$E(Z2,1)="P":1,1:0)
"RTN","FBUCDD1",19,0)
 ;
"RTN","FBUCDD1",20,0)
DEVICE(X) ;extrinsic call for device ien
"RTN","FBUCDD1",21,0)
 ;INPUT:  X = name
"RTN","FBUCDD1",22,0)
 ;OUTPUT: 1 if device with printer subtype
"RTN","FBUCDD1",23,0)
 N Z1 S Z1=0,Z1=+$O(^%ZIS(1,"B",X,0))
"RTN","FBUCDD1",24,0)
 Q $S('Z1:0,'$$SUBTYPE(Z1):0,1:1)
"RTN","FBUCDD1",25,0)
 ;
"RTN","FBUCDD1",26,0)
XHELP ;executable help from field 33, UNAUTHORIZED CLAIM PRINTER, file 161.4
"RTN","FBUCDD1",27,0)
 ;displays printer selection
"RTN","FBUCDD1",28,0)
 D HOME^%ZIS H 1 W @IOF,!,"Select a printer device name.",!,"NOTE:  This is not a pointer field, the exact name must be entered."
"RTN","FBUCDD1",29,0)
 W !!,?5,"Printer name:",?40,"Location:",!,?5,"-------------",?40,"---------"
"RTN","FBUCDD1",30,0)
 N FBX,FBXZ,FBX1 S FBX=0 F  S FBX=$O(^%ZIS(1,FBX)) Q:'FBX  I $$SUBTYPE(FBX) S FBXZ=$G(^%ZIS(1,FBX,0)),FBX1=$G(^(1)) D  G:$D(DTOUT)!($D(DUOUT)) XHELPQ
"RTN","FBUCDD1",31,0)
 .I ($Y+5)>IOSL S DIR(0)="E" D ^DIR K DIR Q:$D(DTOUT)!($D(DUOUT))  W @IOF,!!,?5,"Printer name:",?40,"Location:",!,?5,"-------------",?40,"---------"
"RTN","FBUCDD1",32,0)
 .W !?5,$P(FBXZ,U),?40,$P(FBX1,U)
"RTN","FBUCDD1",33,0)
XHELPQ W ! K DIR,DTOUT,DUOUT Q
"RTN","FBUCDD1",34,0)
ID(Y) ;display identifiers
"RTN","FBUCDD1",35,0)
 N FBZ S FBZ=$$FBZ^FBUCUTL(+Y)  Q:Y']""  W ?15,$E($$VET^FBUCUTL(+$P(FBZ,U,4)),1,20),?38,$E($$VEN^FBUCUTL(+$P(FBZ,U,3)),1,20)
"RTN","FBUCDD1",36,0)
 W ?61,$E($$PROG^FBUCUTL(+$P(FBZ,U,2)),1,14),!,$E($P($$PTR^FBUCUTL("^FB(162.92,",+$P(FBZ,U,24)),U),1,16)
"RTN","FBUCDD1",37,0)
 W ?19,"TREATMENT FROM: ",$$DATX^FBAAUTL(+$P(FBZ,U,5)),?44,"TREATMENT TO: ",$$DATX^FBAAUTL(+$P(FBZ,U,6))
"RTN","FBUCDD1",38,0)
 W ! Q
"RTN","FBUCDD1",39,0)
 ;
"RTN","FBUCDD1",40,0)
DELA(DA,M) ;delete authorization node
"RTN","FBUCDD1",41,0)
 ;INPUT:  DA = ien of authorization (161.01)
"RTN","FBUCDD1",42,0)
 ;        DA(1)= ien of patient (161)
"RTN","FBUCDD1",43,0)
 ;        M=message (optional) 1 to print;0 to not print
"RTN","FBUCDD1",44,0)
 ;VAR:  M, 2nd piece = message to print:  1 for payments, 2 for 7078/583
"RTN","FBUCDD1",45,0)
 ;OUTPUT: 1 if ok to delete; 0 if should not delete
"RTN","FBUCDD1",46,0)
 ;        message may write explaining why cannot delete
"RTN","FBUCDD1",47,0)
 I $S('$G(DA):1,'$G(DA(1)):1,1:0) G DELAQ
"RTN","FBUCDD1",48,0)
 S:'$G(M) M=0
"RTN","FBUCDD1",49,0)
 N FBI,FBV,FBVAR
"RTN","FBUCDD1",50,0)
 S FBVAR=$P($G(^FBAAA(DA(1),1,DA,0)),U,9),FBV=+$P($G(^FBAAA(DA(1),1,DA,0)),U,4)
"RTN","FBUCDD1",51,0)
 I 'FBV="0" S FBV=FBV-1
"RTN","FBUCDD1",52,0)
 F  S FBV=$O(^FBAAC(DA(1),1,FBV)) Q:'FBV!($P(M,U,2))  D
"RTN","FBUCDD1",53,0)
 .S FBI=0
"RTN","FBUCDD1",54,0)
 .F  S FBI=$O(^FBAAC(DA(1),1,FBV,1,FBI)) Q:'FBI!($P(M,U,2))  S FBI(0)=$G(^FBAAC(DA(1),1,FBV,1,FBI,0)) I $P(FBI(0),U,4)=DA,$O(^FBAAC(DA(1),1,FBV,1,FBI,1,1,0)) S $P(M,U,2)=1
"RTN","FBUCDD1",55,0)
 I FBVAR]"",$$PAY^FBUCUTL($P(FBVAR,";"),$P(FBVAR,";",2)) S $P(M,U,2)=1
"RTN","FBUCDD1",56,0)
 I $P(^FBAAA(DA(1),1,DA,0),U,13)=2!($P(^FBAAA(DA(1),1,DA,0),U,13)=3) S $P(M,U,2)=3
"RTN","FBUCDD1",57,0)
 I $P(^FBAAA(DA(1),1,DA,0),U,13)=1,$D(FBAA(161.26,"B",DA(1))) D
"RTN","FBUCDD1",58,0)
 . N FBCROSS,FBDA,DIK,DA
"RTN","FBUCDD1",59,0)
 . S FBCROSS=$Q(^FB(161.26,"B",DA(1)))
"RTN","FBUCDD1",60,0)
 . S FBDA=$QS(FBCROSS,4)
"RTN","FBUCDD1",61,0)
 . S DIK="^FBAA(161.26,",DA=FBDA D ^DIK
"RTN","FBUCDD1",62,0)
 I '$P(M,U,2),FBVAR]"" S $P(M,U,2)=2
"RTN","FBUCDD1",63,0)
 I +M,$P(M,U,2) W !! D  W !
"RTN","FBUCDD1",64,0)
 .W:$P(M,U,2)=1 "Cannot delete Authorization because payments already exist!"
"RTN","FBUCDD1",65,0)
 .W:$P(M,U,2)=2 "Cannot delete Authorization because a 7078/583 entry has already been established!"
"RTN","FBUCDD1",66,0)
 .W:$P(M,U,2)=3 "Cannot delete Authorization, please create a Delete type Veteran MRA!"
"RTN","FBUCDD1",67,0)
DELAQ Q $S('+$P($G(M),U,2):0,$P(M,U,2):1,1:0)
"RTN","FBXIP127")
0^^B1557361^n/a
"RTN","FBXIP127",1,0)
FBXIP127 ;ALB/DEP-Pre-Install Routine for FB*3.5*127 ; 5/3/13 11:31am
"RTN","FBXIP127",2,0)
 ;;3.5;FEE BASIS;**127**;JAN 30, 1995;Build 9
"RTN","FBXIP127",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","FBXIP127",4,0)
 Q
"RTN","FBXIP127",5,0)
POST ; Enrty point for routine
"RTN","FBXIP127",6,0)
 N DA,DFN,DIK,FB0,FBAUTH,FBFDC,FBMST,FBTYPE,FBJ,Y
"RTN","FBXIP127",7,0)
 S ^XTMP("FB127",0)=$$FMADD^XLFDT(DT,+90)_"^"_DT
"RTN","FBXIP127",8,0)
 S $P(^XTMP("FB127",0),"^",3)="MRA transactions pointing to deleted Authorizations."
"RTN","FBXIP127",9,0)
GO ; Sort through "Pending" MRA entries. 
"RTN","FBXIP127",10,0)
 S FBJ=0 F  S FBJ=$O(^FBAA(161.26,"AC","P",FBJ)) Q:FBJ'>0  S FB0=$G(^FBAA(161.26,FBJ,0)) D
"RTN","FBXIP127",11,0)
 .D CHECK
"RTN","FBXIP127",12,0)
 Q
"RTN","FBXIP127",13,0)
CHECK ;Checking Pt. info for valid authorizations.
"RTN","FBXIP127",14,0)
 ; patient info;input:Y(0);output:FBDOB,FBFI,FBFLNAM,FBLNAM,FBMI,FBNAME,FBSEX,FBSSN
"RTN","FBXIP127",15,0)
 S DFN=$P(FB0,U)
"RTN","FBXIP127",16,0)
 S FBAUTH=$P(^FBAA(161.26,FBJ,0),"^",3) I FBAUTH']"" D DELMRA
"RTN","FBXIP127",17,0)
 I '$D(^FBAAA(DFN,1,FBAUTH,0)) D DELMRA
"RTN","FBXIP127",18,0)
 Q
"RTN","FBXIP127",19,0)
DELMRA ; Deletes MRA entry that points to non-existent authorization.
"RTN","FBXIP127",20,0)
 S ^XTMP("FB127",FBJ)=^FBAA(161.26,FBJ,0)
"RTN","FBXIP127",21,0)
 S DIK="^FBAA(161.26,",DA=FBJ
"RTN","FBXIP127",22,0)
 D ^DIK
"RTN","FBXIP127",23,0)
 Q
"VER")
8.0^22.0
"BLD",9387,6)
^125
**END**
**END**

