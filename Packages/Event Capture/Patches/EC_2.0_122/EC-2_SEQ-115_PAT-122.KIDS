Released EC*2*122 SEQ #115
Extracted from mail message
**KIDS**:EC*2.0*122^

**INSTALL NAME**
EC*2.0*122
"BLD",9036,0)
EC*2.0*122^EVENT CAPTURE^0^3140207^y
"BLD",9036,4,0)
^9.64PA^725^1
"BLD",9036,4,725,0)
725
"BLD",9036,4,725,2,0)
^9.641^725^1
"BLD",9036,4,725,2,725,0)
EC NATIONAL PROCEDURE  (File-top level)
"BLD",9036,4,725,2,725,1,0)
^9.6411^2^1
"BLD",9036,4,725,2,725,1,2,0)
INACTIVE DATE
"BLD",9036,4,725,222)
y^n^p^^^^n^^n
"BLD",9036,4,725,224)

"BLD",9036,4,"APDD",725,725)

"BLD",9036,4,"APDD",725,725,2)

"BLD",9036,4,"B",725,725)

"BLD",9036,6.3)
2
"BLD",9036,"ABPKG")
n
"BLD",9036,"INIT")
POST^EC2P122
"BLD",9036,"KRN",0)
^9.67PA^779.2^20
"BLD",9036,"KRN",.4,0)
.4
"BLD",9036,"KRN",.401,0)
.401
"BLD",9036,"KRN",.402,0)
.402
"BLD",9036,"KRN",.403,0)
.403
"BLD",9036,"KRN",.5,0)
.5
"BLD",9036,"KRN",.84,0)
.84
"BLD",9036,"KRN",3.6,0)
3.6
"BLD",9036,"KRN",3.8,0)
3.8
"BLD",9036,"KRN",9.2,0)
9.2
"BLD",9036,"KRN",9.8,0)
9.8
"BLD",9036,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",9036,"KRN",9.8,"NM",1,0)
EC2P122^^0^B14652862
"BLD",9036,"KRN",9.8,"NM",2,0)
ECRRPT^^0^B57156527
"BLD",9036,"KRN",9.8,"NM",3,0)
ECUTL1^^0^B59402875
"BLD",9036,"KRN",9.8,"NM",4,0)
ECSUM^^0^B15633396
"BLD",9036,"KRN",9.8,"NM",5,0)
ECSUM1^^0^B23374855
"BLD",9036,"KRN",9.8,"NM",6,0)
ECUTL3^^0^B19735136
"BLD",9036,"KRN",9.8,"NM",7,0)
ECRECER^^0^B34592121
"BLD",9036,"KRN",9.8,"NM","B","EC2P122",1)

"BLD",9036,"KRN",9.8,"NM","B","ECRECER",7)

"BLD",9036,"KRN",9.8,"NM","B","ECRRPT",2)

"BLD",9036,"KRN",9.8,"NM","B","ECSUM",4)

"BLD",9036,"KRN",9.8,"NM","B","ECSUM1",5)

"BLD",9036,"KRN",9.8,"NM","B","ECUTL1",3)

"BLD",9036,"KRN",9.8,"NM","B","ECUTL3",6)

"BLD",9036,"KRN",19,0)
19
"BLD",9036,"KRN",19.1,0)
19.1
"BLD",9036,"KRN",101,0)
101
"BLD",9036,"KRN",409.61,0)
409.61
"BLD",9036,"KRN",771,0)
771
"BLD",9036,"KRN",779.2,0)
779.2
"BLD",9036,"KRN",870,0)
870
"BLD",9036,"KRN",8989.51,0)
8989.51
"BLD",9036,"KRN",8989.52,0)
8989.52
"BLD",9036,"KRN",8994,0)
8994
"BLD",9036,"KRN","B",.4,.4)

"BLD",9036,"KRN","B",.401,.401)

"BLD",9036,"KRN","B",.402,.402)

"BLD",9036,"KRN","B",.403,.403)

"BLD",9036,"KRN","B",.5,.5)

"BLD",9036,"KRN","B",.84,.84)

"BLD",9036,"KRN","B",3.6,3.6)

"BLD",9036,"KRN","B",3.8,3.8)

"BLD",9036,"KRN","B",9.2,9.2)

"BLD",9036,"KRN","B",9.8,9.8)

"BLD",9036,"KRN","B",19,19)

"BLD",9036,"KRN","B",19.1,19.1)

"BLD",9036,"KRN","B",101,101)

"BLD",9036,"KRN","B",409.61,409.61)

"BLD",9036,"KRN","B",771,771)

"BLD",9036,"KRN","B",779.2,779.2)

"BLD",9036,"KRN","B",870,870)

"BLD",9036,"KRN","B",8989.51,8989.51)

"BLD",9036,"KRN","B",8989.52,8989.52)

"BLD",9036,"KRN","B",8994,8994)

"BLD",9036,"QUES",0)
^9.62^^
"BLD",9036,"REQB",0)
^9.611^2^2
"BLD",9036,"REQB",1,0)
EC*2.0*107^2
"BLD",9036,"REQB",2,0)
EC*2.0*119^2
"BLD",9036,"REQB","B","EC*2.0*107",1)

"BLD",9036,"REQB","B","EC*2.0*119",2)

"FIA",725)
EC NATIONAL PROCEDURE
"FIA",725,0)
^EC(725,
"FIA",725,0,0)
725I
"FIA",725,0,1)
y^n^p^^^^n^^n
"FIA",725,0,10)

"FIA",725,0,11)

"FIA",725,0,"RLRO")

"FIA",725,0,"VR")
2.0^EC
"FIA",725,725)
1
"FIA",725,725,2)

"INIT")
POST^EC2P122
"MBREQ")
0
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
122^3140207
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","EC2P122")
0^1^B14652862^n/a
"RTN","EC2P122",1,0)
EC2P122 ;ALB/DAN Post-install events for Event Capture patch 122 ;2/5/14  16:42
"RTN","EC2P122",2,0)
 ;;2.0;EVENT CAPTURE;**122**;8 May 96;Build 2
"RTN","EC2P122",3,0)
 ;
"RTN","EC2P122",4,0)
POST ;Come here for post-install actions
"RTN","EC2P122",5,0)
 D ADDNEW ;Add new procedure reasons to the procedure reasons file
"RTN","EC2P122",6,0)
 D INACT ;Inactivate event code screens with inactive procedure codes
"RTN","EC2P122",7,0)
 Q
"RTN","EC2P122",8,0)
 ;
"RTN","EC2P122",9,0)
ADDNEW ;Add new entry to file 720.4
"RTN","EC2P122",10,0)
 ;
"RTN","EC2P122",11,0)
 N ECXFDA,ECXERR,ECREAS,I
"RTN","EC2P122",12,0)
 ;
"RTN","EC2P122",13,0)
 ;-get procedure reason
"RTN","EC2P122",14,0)
 F I=1:1 S ECREAS=$P($T(ADDREAS+I),";;",2) Q:ECREAS="QUIT"  D
"RTN","EC2P122",15,0)
 .;
"RTN","EC2P122",16,0)
 .;-quit w/error message if entry already exists in file #720.4
"RTN","EC2P122",17,0)
 .I $$FIND1^DIC(720.4,"","X",ECREAS) D  Q
"RTN","EC2P122",18,0)
 ..D BMES^XPDUTL(">>>..."_ECREAS_" not added, entry already exists.")
"RTN","EC2P122",19,0)
 .;
"RTN","EC2P122",20,0)
 .;Setup field values of new entry
"RTN","EC2P122",21,0)
 .S ECXFDA(720.4,"+1,",.01)=ECREAS
"RTN","EC2P122",22,0)
 .S ECXFDA(720.4,"+1,",.02)=1 ;Set "ACTIVE?" field to 1 (active)
"RTN","EC2P122",23,0)
 .;
"RTN","EC2P122",24,0)
 .;-add new entry to file #720.4
"RTN","EC2P122",25,0)
 .D UPDATE^DIE("E","ECXFDA","","ECXERR")
"RTN","EC2P122",26,0)
 .;
"RTN","EC2P122",27,0)
 .I '$D(ECXERR) D BMES^XPDUTL(">>>...."_ECREAS_" added to file.")
"RTN","EC2P122",28,0)
 .I $D(ECXERR) D BMES^XPDUTL(">>>....Unable to add "_ECREAS_" to file.")
"RTN","EC2P122",29,0)
 ;
"RTN","EC2P122",30,0)
 Q
"RTN","EC2P122",31,0)
 ;
"RTN","EC2P122",32,0)
INACT ;Find inactive event code screens with inactive procedure codes
"RTN","EC2P122",33,0)
 N DAYS,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSK
"RTN","EC2P122",34,0)
 S DAYS=$S($$PROD^XUPROD:30,1:3) ;Event code screen clean up happens in 3 days if installed in test, 30 days if in production
"RTN","EC2P122",35,0)
 D BMES^XPDUTL("Identifying event code screens with inactive EC Procedure Codes.") D MES^XPDUTL("A list of findings will be emailed to holders of the ECMGR key.")
"RTN","EC2P122",36,0)
 D INACTSCR^ECUTL3(0) ;Start scanning event code screens in "report only" mode
"RTN","EC2P122",37,0)
 D BMES^XPDUTL("Any event code screens with inactive EC Procedure Codes will be") D MES^XPDUTL("automatically inactivated "_DAYS_" days from now.  Creating background task") D MES^XPDUTL("for this process.")
"RTN","EC2P122",38,0)
 S ZTRTN="INACTSCR^ECUTL3(1)",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,DAYS),ZTIO="",ZTDESC="Inactivation of event code screens with inactive EC Procedure Codes" D ^%ZTLOAD
"RTN","EC2P122",39,0)
 I $G(ZTSK) D BMES^XPDUTL("Task #"_ZTSK_" created.  An email will be sent to holders of the ECMGR") D MES^XPDUTL("key upon completion.")
"RTN","EC2P122",40,0)
 I '$G(ZTSK) D MES^XPDUTL("Task not created!  Contact customer support for assistance!")
"RTN","EC2P122",41,0)
 Q
"RTN","EC2P122",42,0)
ADDREAS ;List of new procedure reasons
"RTN","EC2P122",43,0)
 ;;CHAP ACUTE/SUBACUTE MH
"RTN","EC2P122",44,0)
 ;;CHAP CBOC
"RTN","EC2P122",45,0)
 ;;CHAP CLC
"RTN","EC2P122",46,0)
 ;;CHAP CONSULTS
"RTN","EC2P122",47,0)
 ;;CHAP CRITICAL CARE
"RTN","EC2P122",48,0)
 ;;CHAP ETHICS
"RTN","EC2P122",49,0)
 ;;CHAP GERO PSYCH
"RTN","EC2P122",50,0)
 ;;CHAP GRAND ROUNDS
"RTN","EC2P122",51,0)
 ;;CHAP HEM/ONC
"RTN","EC2P122",52,0)
 ;;CHAP HOME BASED PRIMARY CARE
"RTN","EC2P122",53,0)
 ;;CHAP HOMELESS
"RTN","EC2P122",54,0)
 ;;CHAP HOSPICE
"RTN","EC2P122",55,0)
 ;;CHAP IDT MEETING
"RTN","EC2P122",56,0)
 ;;CHAP MED/SURG UNIT[S]
"RTN","EC2P122",57,0)
 ;;CHAP MHICM
"RTN","EC2P122",58,0)
 ;;CHAP OIF/OEF/OND
"RTN","EC2P122",59,0)
 ;;CHAP PALLIATIVE
"RTN","EC2P122",60,0)
 ;;CHAP POLYTRAUMA
"RTN","EC2P122",61,0)
 ;;CHAP PRRP
"RTN","EC2P122",62,0)
 ;;CHAP PTSD
"RTN","EC2P122",63,0)
 ;;CHAP REHABILITATION
"RTN","EC2P122",64,0)
 ;;CHAP SAME DAY SURG
"RTN","EC2P122",65,0)
 ;;CHAP SPINAL CORD INJURY
"RTN","EC2P122",66,0)
 ;;CHAP SUBSTANCE USE DISORDER
"RTN","EC2P122",67,0)
 ;;CHAP TBI
"RTN","EC2P122",68,0)
 ;;CHAP TEAM ROUNDS
"RTN","EC2P122",69,0)
 ;;CHAP TELEHEALTH
"RTN","EC2P122",70,0)
 ;;CHAP WOMEN'S HEALTH CLINIC
"RTN","EC2P122",71,0)
 ;;CHAP INTERN
"RTN","EC2P122",72,0)
 ;;CHAP RESIDENT
"RTN","EC2P122",73,0)
 ;;CHAP FELLOW
"RTN","EC2P122",74,0)
 ;;CHAP SPVR TRNG
"RTN","EC2P122",75,0)
 ;;QUIT
"RTN","ECRECER")
0^7^B34592121^B26467658
"RTN","ECRECER",1,0)
ECRECER ;ALB/DAN-Event Capture Encounter Report ;1/22/14  15:20
"RTN","ECRECER",2,0)
 ;;2.0;EVENT CAPTURE;**112,122**;8 May 96;Build 2
"RTN","ECRECER",3,0)
 ;
"RTN","ECRECER",4,0)
STRPT ;
"RTN","ECRECER",5,0)
 K ^TMP("ECRECER",$J),^TMP($J,"ECRPT")
"RTN","ECRECER",6,0)
 D GETREC
"RTN","ECRECER",7,0)
 I ECPTYP="E" D EXPORT Q
"RTN","ECRECER",8,0)
 U IO
"RTN","ECRECER",9,0)
 D PRINT
"RTN","ECRECER",10,0)
 Q
"RTN","ECRECER",11,0)
 ;
"RTN","ECRECER",12,0)
GETREC ;Find records to put on report
"RTN","ECRECER",13,0)
 N ECLI,ECDFN,ECD,ECDT,ECIEN,ECPROV,ECPATN,ECSSN,ECVOL,UNI,ECARR,ECIO,CLNODE ;122
"RTN","ECRECER",14,0)
 S ECLI=0 F  S ECLI=$O(ECLOC1(ECLI)) Q:'+ECLI  D
"RTN","ECRECER",15,0)
 .S ECDFN=0 K UNI
"RTN","ECRECER",16,0)
 .F  S ECDFN=+$O(^ECH("ADT",ECLI,ECDFN)) Q:'ECDFN  D
"RTN","ECRECER",17,0)
 ..S ECD=0
"RTN","ECRECER",18,0)
 ..F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  D
"RTN","ECRECER",19,0)
 ...S ECDT=ECSD-.1
"RTN","ECRECER",20,0)
 ...F  S ECDT=+$O(^ECH("ADT",ECLI,ECDFN,ECD,ECDT)) Q:'ECDT!(ECDT>(ECED_.24))  D
"RTN","ECRECER",21,0)
 ....S ECIEN=0
"RTN","ECRECER",22,0)
 ....F  S ECIEN=+$O(^ECH("ADT",ECLI,ECDFN,ECD,ECDT,ECIEN)) Q:'ECIEN  D
"RTN","ECRECER",23,0)
 .....S ECPROV=$$GETPROV^ECRDSSA(ECIEN)
"RTN","ECRECER",24,0)
 .....Q:$D(UNI(ECDFN,ECDT,ECD))  S UNI(ECDFN,ECDT,ECD)="" ;don't count if already counted
"RTN","ECRECER",25,0)
 .....K ECARR D GETS^DIQ(721,ECIEN,"1;9;26;29","IE","ECARR","ECERROR") ;122 Add associated clinic (26) to list of fields returned
"RTN","ECRECER",26,0)
 .....S ECPATN=ECARR(721,ECIEN_",",1,"E")_"~"_ECDFN
"RTN","ECRECER",27,0)
 .....S ECSSN=$$GETSSN^ECRDSSA(ECIEN)
"RTN","ECRECER",28,0)
 .....S ECVOL=ECARR(721,ECIEN_",",9,"E"),ECIO=ECARR(721,ECIEN_",",29,"I")
"RTN","ECRECER",29,0)
 .....S CLNODE=$G(^ECX(728.44,+$G(ECARR(721,ECIEN_",",26,"I")),0)) ;122
"RTN","ECRECER",30,0)
 .....I $G(ECSORT)="P" D
"RTN","ECRECER",31,0)
 ......S ^TMP("ECRECER",$J,ECLOC1(ECLI),ECPATN,ECPROV,ECIEN)=ECIO_U_ECDT_U_ECD_U_ECVOL_U_ECSSN_U_$G(ECARR(721,ECIEN_",",26,"E"))_U_$P(CLNODE,U,2)_U_$P(CLNODE,U,3)_U_$P($G(^ECX(728.441,+$P(CLNODE,U,8),0)),U) ;122
"RTN","ECRECER",32,0)
 .....I $G(ECSORT)="D" D
"RTN","ECRECER",33,0)
 ......S ^TMP("ECRECER",$J,ECLOC1(ECLI),ECPROV,ECPATN,ECIEN)=ECIO_U_ECDT_U_ECD_U_ECVOL_U_ECSSN_U_$G(ECARR(721,ECIEN_",",26,"E"))_U_$P(CLNODE,U,2)_U_$P(CLNODE,U,3)_U_$P($G(^ECX(728.441,+$P(CLNODE,U,8),0)),U) ;122
"RTN","ECRECER",34,0)
 Q
"RTN","ECRECER",35,0)
 ;
"RTN","ECRECER",36,0)
EXPORT ;Put in delimited format for exporting
"RTN","ECRECER",37,0)
 N CNT,LOC,PATN,PROV,IEN,DATA
"RTN","ECRECER",38,0)
 Q:'$D(^TMP("ECRECER",$J))
"RTN","ECRECER",39,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="LOCATION^PATIENT^SSN^I/O^DATE/TIME^PROVIDER #1^DSS UNIT^VOLUME^CLINIC^STOP CODE^CREDIT STOP CODE^CHAR4 CODE" ;122
"RTN","ECRECER",40,0)
 I ECSORT="P" D
"RTN","ECRECER",41,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D
"RTN","ECRECER",42,0)
 ..S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PATN)) Q:PATN=""  D
"RTN","ECRECER",43,0)
 ...S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PATN,PROV)) Q:PROV=""  D
"RTN","ECRECER",44,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PATN,PROV,IEN)) Q:'+IEN  D
"RTN","ECRECER",45,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",46,0)
 .....S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=LOC_U_$P(PATN,"~")_U_$P(DATA,U,5)_U_$P(DATA,U,1)_U_$$FMTE^XLFDT($P(DATA,U,2),2)_U_PROV_U_ECDSSU($P(DATA,U,3))_U_$P(DATA,U,4)_U_$P(DATA,U,6)_U_$P(DATA,U,7)_U_$P(DATA,U,8)_U_$P(DATA,U,9) ;122
"RTN","ECRECER",47,0)
 I ECSORT="D" D
"RTN","ECRECER",48,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D
"RTN","ECRECER",49,0)
 ..S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PROV)) Q:PROV=""  D
"RTN","ECRECER",50,0)
 ...S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN)) Q:PATN=""  D
"RTN","ECRECER",51,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN,IEN)) Q:'+IEN  D
"RTN","ECRECER",52,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",53,0)
 .....S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=LOC_U_$P(PATN,"~")_U_$P(DATA,U,5)_U_$P(DATA,U,1)_U_$$FMTE^XLFDT($P(DATA,U,2),2)_U_PROV_U_ECDSSU($P(DATA,U,3))_U_$P(DATA,U,4)_U_$P(DATA,U,6)_U_$P(DATA,U,7)_U_$P(DATA,U,8)_U_$P(DATA,U,9) ;122
"RTN","ECRECER",54,0)
 Q
"RTN","ECRECER",55,0)
 ;
"RTN","ECRECER",56,0)
PRINT ;Display results
"RTN","ECRECER",57,0)
 N LOC,PATN,PROV,IEN,DATA,PAGE,PTOT,PROTOT
"RTN","ECRECER",58,0)
 I '$D(^TMP("ECRECER",$J)) S LOC="NONE" D HDR W !,"No data found"
"RTN","ECRECER",59,0)
 S PAGE=0
"RTN","ECRECER",60,0)
 I ECSORT="P" D
"RTN","ECRECER",61,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D HDR D
"RTN","ECRECER",62,0)
 ..S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PATN)) Q:PATN=""  K PTOT,PROTOT D  D SUB
"RTN","ECRECER",63,0)
 ...S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PATN,PROV)) Q:PROV=""  D
"RTN","ECRECER",64,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PATN,PROV,IEN)) Q:'+IEN  D
"RTN","ECRECER",65,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",66,0)
 .....W !,$P(PATN,"~"),?32,$P(DATA,U,5),?38,$P(DATA,U,1),?43,$$FMTE^XLFDT($P(DATA,U,2),2),?59,PROV,?91,ECDSSU($P(DATA,U,3)),?123,$P(DATA,U,4)
"RTN","ECRECER",67,0)
 .....W !,?4,$P(DATA,U,6),?36,$P(DATA,U,7),?47,$P(DATA,U,8),?60,$P(DATA,U,9) ;122
"RTN","ECRECER",68,0)
 .....S PTOT=+$G(PTOT)+1,PROTOT(PROV)=+$G(PROTOT(PROV))+1
"RTN","ECRECER",69,0)
 I ECSORT="D" D
"RTN","ECRECER",70,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D HDR D
"RTN","ECRECER",71,0)
 ..S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PROV)) Q:PROV=""  K PROTOT,PTOT D  D SUB
"RTN","ECRECER",72,0)
 ...S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN)) Q:PATN=""  D
"RTN","ECRECER",73,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN,IEN)) Q:'+IEN  D
"RTN","ECRECER",74,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",75,0)
 .....W !,$P(PATN,"~"),?32,$P(DATA,U,5),?38,$P(DATA,U,1),?43,$$FMTE^XLFDT($P(DATA,U,2),2),?59,PROV,?91,ECDSSU($P(DATA,U,3)),?123,$P(DATA,U,4)
"RTN","ECRECER",76,0)
 .....W !,?4,$P(DATA,U,6),?36,$P(DATA,U,7),?47,$P(DATA,U,8),?60,$P(DATA,U,9) ;122
"RTN","ECRECER",77,0)
 .....S PTOT(PATN)=+$G(PTOT(PATN))+1,PROTOT=+$G(PROTOT)+1
"RTN","ECRECER",78,0)
 Q
"RTN","ECRECER",79,0)
HDR ;Print Header
"RTN","ECRECER",80,0)
 N SORT
"RTN","ECRECER",81,0)
 W @IOF
"RTN","ECRECER",82,0)
 S PAGE=+$G(PAGE)+1
"RTN","ECRECER",83,0)
 W ?51,"Event Capture Encounters Report",?123,"Page: ",PAGE
"RTN","ECRECER",84,0)
 W !,?(132-(12+$L(LOC))\2),"For Location ",LOC
"RTN","ECRECER",85,0)
 W !,?47,"From ",$$FMTE^XLFDT(ECSD)," through ",$$FMTE^XLFDT(ECED)
"RTN","ECRECER",86,0)
 S SORT=$S(ECSORT="P":"Patient Name",1:"Provider")
"RTN","ECRECER",87,0)
 W !,?(132-(9+$L(SORT))\2),"Sorted by ",SORT,!
"RTN","ECRECER",88,0)
 W !,"Patient",?32,"SSN",?38,"I/O",?43,"Date/Time",?59,"Provider #1",?91,"DSS Unit",?123,"Vol"
"RTN","ECRECER",89,0)
 W !,?4,"Clinic",?36,"Stop Code",?47,"Credit Stop",?60,"CHAR4" ;122
"RTN","ECRECER",90,0)
 W !,$$REPEAT^XLFSTR("-",132)
"RTN","ECRECER",91,0)
 Q
"RTN","ECRECER",92,0)
SUB ;Print totals
"RTN","ECRECER",93,0)
 N ARR,DISP
"RTN","ECRECER",94,0)
 I ECSORT="P" D
"RTN","ECRECER",95,0)
 .W !
"RTN","ECRECER",96,0)
 .S ARR="" F  S ARR=$O(PROTOT(ARR)) Q:ARR=""  S DISP="Subtotal for provider "_ARR W !,$J(DISP,128),$J(PROTOT(ARR),4)
"RTN","ECRECER",97,0)
 .W !,?128,"===="
"RTN","ECRECER",98,0)
 .S DISP="Total for patient "_$P(PATN,"~") W !,$J(DISP,128),$J(PTOT,4),!
"RTN","ECRECER",99,0)
 I ECSORT="D" D
"RTN","ECRECER",100,0)
 .W !
"RTN","ECRECER",101,0)
 .S ARR="" F  S ARR=$O(PTOT(ARR)) Q:ARR=""  S DISP="Subtotal for patient "_$P(ARR,"~") W !,$J(DISP,128),$J(PTOT(ARR),4)
"RTN","ECRECER",102,0)
 .W !,?128,"===="
"RTN","ECRECER",103,0)
 .S DISP="Total for provider "_PROV W !,$J(DISP,128),$J(PROTOT,4),!
"RTN","ECRECER",104,0)
 Q
"RTN","ECRRPT")
0^2^B57156527^B57156527
"RTN","ECRRPT",1,0)
ECRRPT ;ALB/JAM - Event Capture Report RPC Broker ;12/9/13  12:48
"RTN","ECRRPT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,41,56,61,82,94,95,108,112,119,122**;8 May 96;Build 2
"RTN","ECRRPT",3,0)
 ;
"RTN","ECRRPT",4,0)
 ;119 For patch 119, added comment regarding ECPTYP being set to "E" when exporting, for those reports that are now exportable.
"RTN","ECRRPT",5,0)
REQCHK(ECV) ;Required data check
"RTN","ECRRPT",6,0)
 N I,C
"RTN","ECRRPT",7,0)
 S C=1
"RTN","ECRRPT",8,0)
 F I=1:1:$L(ECV,U) I '$D(@$P(ECV,U,I)) D
"RTN","ECRRPT",9,0)
 . S ^TMP("ECMSG",$J,C)="0^Required data missing "_$P(ECV,U,I)
"RTN","ECRRPT",10,0)
 . S C=C+1,ECERR=1
"RTN","ECRRPT",11,0)
 Q
"RTN","ECRRPT",12,0)
DATECHK(ECSD,ECED) ;Check human format date and converts to FileMan format
"RTN","ECRRPT",13,0)
 ;    Input  ECSD  - Start Date (ex. 10/9/01)
"RTN","ECRRPT",14,0)
 ;           ECED  - End Date
"RTN","ECRRPT",15,0)
 N ECI,X,Y
"RTN","ECRRPT",16,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECRRPT",17,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD),ECED=$S(ECED=-1:DT,1:ECED)
"RTN","ECRRPT",18,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED)
"RTN","ECRRPT",19,0)
 Q
"RTN","ECRRPT",20,0)
QUEUE ;Queues report to printer
"RTN","ECRRPT",21,0)
 N ZTIO,ZTDESC,ZTRTN,ZTDTH,ZTSAVE,%ZIS,I,IOP,POP
"RTN","ECRRPT",22,0)
 S IOP="Q;`"_ECDEV,%ZIS="Q" D ^%ZIS I POP D  Q
"RTN","ECRRPT",23,0)
 . S ^TMP("ECMSG",$J,1)="0^Device selection unsuccessful"
"RTN","ECRRPT",24,0)
 S ZTIO=ION,ZTDESC=ECDESC,ZTRTN=ECROU
"RTN","ECRRPT",25,0)
 S ZTDTH=$$FMTH^XLFDT(ECQDT)
"RTN","ECRRPT",26,0)
 ;D NOW^%DTC S ZTDTH=$S(%'<ECQDT:%+.0002,1:ECQDT)
"RTN","ECRRPT",27,0)
 F I=1:1:$L(ECV,U) I $D(@$P(ECV,U,I)) S ZTSAVE($P(ECV,U,I))=""
"RTN","ECRRPT",28,0)
 M ZTSAVE=ECSAVE
"RTN","ECRRPT",29,0)
 D ^%ZTLOAD,HOME^%ZIS,^%ZISC ;K IO("Q")
"RTN","ECRRPT",30,0)
 I $D(ZTSK) S ^TMP("ECMSG",$J)="1^Report queued. Task #"_ZTSK Q
"RTN","ECRRPT",31,0)
 S ^TMP("ECMSG",$J)="0^Task Rejected"
"RTN","ECRRPT",32,0)
 Q
"RTN","ECRRPT",33,0)
 ;
"RTN","ECRRPT",34,0)
ECPAT ;Patient Summary Report for RPC Call
"RTN","ECRRPT",35,0)
 ;     Variables passed in
"RTN","ECRRPT",36,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",37,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",38,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",39,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",40,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",41,0)
 ;                or (E)xport
"RTN","ECRRPT",42,0)
 ;
"RTN","ECRRPT",43,0)
 ;     Variable return
"RTN","ECRRPT",44,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",45,0)
 N ECDATE,ECPAT,ECV,DIC,X,Y,ECROU,ECDESC
"RTN","ECRRPT",46,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",47,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",48,0)
 ;EC*2.0*108 - Convert Date/Time to Date only
"RTN","ECRRPT",49,0)
 S ECSD=$P(ECSD,"."),ECED=$P(ECED,".")
"RTN","ECRRPT",50,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",51,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",52,0)
 I $E($G(ECRY))'="Y" K ECRY
"RTN","ECRRPT",53,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",54,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED^ECRY",ECROU="SUM^ECPAT"
"RTN","ECRRPT",55,0)
 . S ECDESC="EVENT CAPTURE PATIENT SUMMARY"
"RTN","ECRRPT",56,0)
 . D QUEUE
"RTN","ECRRPT",57,0)
 D SUM^ECPAT
"RTN","ECRRPT",58,0)
 Q
"RTN","ECRRPT",59,0)
ECRDSSU ;DSS Unit Workload Summary Report
"RTN","ECRRPT",60,0)
 ;     Variables passed in
"RTN","ECRRPT",61,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",62,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",63,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",64,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",65,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",66,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",67,0)
 ;                or (E)xport
"RTN","ECRRPT",68,0)
 ;
"RTN","ECRRPT",69,0)
 ;     Variable return
"RTN","ECRRPT",70,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",71,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",72,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",73,0)
 S ECV="ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",74,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",75,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",76,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",77,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",78,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",79,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",80,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",81,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",82,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",83,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",84,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",85,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",86,0)
 . S ECV="ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSU"
"RTN","ECRRPT",87,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",88,0)
 . S ECDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRRPT",89,0)
 . D QUEUE
"RTN","ECRRPT",90,0)
 D STRPT^ECRDSSU
"RTN","ECRRPT",91,0)
 Q
"RTN","ECRRPT",92,0)
PROSUM ;Provider (1-7) Summary Report for RPC Call 119-Updated comment to reflect 7 instead of 3
"RTN","ECRRPT",93,0)
 ;     Variables passed in
"RTN","ECRRPT",94,0)
 ;       ECU    - Provider IEN for file #200
"RTN","ECRRPT",95,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",96,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",97,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",98,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",99,0)
 ;                or (E)xport
"RTN","ECRRPT",100,0)
 ;
"RTN","ECRRPT",101,0)
 ;     Variable return
"RTN","ECRRPT",102,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",103,0)
 N ECV,ECDATE,ECUN,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",104,0)
 S ECV="ECU^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",105,0)
 S DIC=200,DIC(0)="QNZX",X=ECU D ^DIC D:Y<0  Q:Y<0  S ECUN=$P(Y,U,2)
"RTN","ECRRPT",106,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",107,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",108,0)
 I ECRY'="Y" K ECRY
"RTN","ECRRPT",109,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",110,0)
 . S ECV="ECU^ECUN^ECDATE^ECSD^ECED^ECRY"
"RTN","ECRRPT",111,0)
 . S ECROU="EN^ECPRSUM1",ECDESC="Event Capture Provider Summary"
"RTN","ECRRPT",112,0)
 . D QUEUE
"RTN","ECRRPT",113,0)
 D EN^ECPRSUM1
"RTN","ECRRPT",114,0)
 Q
"RTN","ECRRPT",115,0)
ECPROV ;Provider Summary Report for RPC Call
"RTN","ECRRPT",116,0)
 ;     Variables passed in
"RTN","ECRRPT",117,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",118,0)
 ;       ECD    - DSS Unit to report (1 or ALL)
"RTN","ECRRPT",119,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",120,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",121,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",122,0)
 ;       ECDUZ  - User DUZ (ien in #200)
"RTN","ECRRPT",123,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",124,0)
 ;                or (E)xport
"RTN","ECRRPT",125,0)
 ;
"RTN","ECRRPT",126,0)
 ;     Variable return
"RTN","ECRRPT",127,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",128,0)
 N ECV,ECDN,ECDATE,ECLN,ECSAVE,ECDESC,ECROU,DIC,X,Y,CNT,UNIT
"RTN","ECRRPT",129,0)
 S ECDN="ALL",ECV="ECL^ECD^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",130,0)
 I ECL'="ALL" D  I ECERR Q
"RTN","ECRRPT",131,0)
 . ;The line below was changed by VMP for NOIS ANN-1003-42305
"RTN","ECRRPT",132,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC D:Y<0  Q:Y<0  S ECLN=$P(Y,U,2)
"RTN","ECRRPT",133,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",134,0)
 I ECD'="ALL" K DIC D  I ECERR Q
"RTN","ECRRPT",135,0)
 . S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC D:Y<0  Q:Y<0  S ECDN=$P(Y,U,2)
"RTN","ECRRPT",136,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",137,0)
 I ECD="ALL",'$D(^XUSEC("ECALLU",ECDUZ)) D
"RTN","ECRRPT",138,0)
 . S (ECD,ECDN)="SOME",(X,CNT)=0
"RTN","ECRRPT",139,0)
 . F  S X=$O(^VA(200,ECDUZ,"EC",X)) Q:'X  D
"RTN","ECRRPT",140,0)
 . . S CNT=CNT+1,UNIT=$P(^VA(200,ECDUZ,"EC",X,0),"^")
"RTN","ECRRPT",141,0)
 . . S UNIT(CNT)=UNIT_"^"_$P(^ECD(UNIT,0),"^")
"RTN","ECRRPT",142,0)
 ;I $E($G(ECRY))'="Y" K ECRY ;112 Removed check for ECRY as reasons always print - remove comment and next line to restore reason check
"RTN","ECRRPT",143,0)
 S ECRY="Y" ;112 Reasons always print
"RTN","ECRRPT",144,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",145,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999 S:'$D(UNIT) UNIT=""
"RTN","ECRRPT",146,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",147,0)
 . S ECV="ECDATE^ECSD^ECED^ECRY",ECROU="START^ECPROV2"
"RTN","ECRRPT",148,0)
 . S (ECSAVE("ECL*"),ECSAVE("ECD*"),ECSAVE("UNIT*"))=""
"RTN","ECRRPT",149,0)
 . S ECDESC="EVENT CAPTURE PROVIDER SUMMARY"
"RTN","ECRRPT",150,0)
 . D QUEUE
"RTN","ECRRPT",151,0)
 U IO D START^ECPROV2
"RTN","ECRRPT",152,0)
 Q
"RTN","ECRRPT",153,0)
ECOSSUM ;Ordering Section Summary Report for RPC Call
"RTN","ECRRPT",154,0)
 ;     Variables passed in
"RTN","ECRRPT",155,0)
 ;       ECOS   - Ordering Section
"RTN","ECRRPT",156,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",157,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",158,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",159,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",160,0)
 ;       ECDUZ  - User ien (#200)
"RTN","ECRRPT",161,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",162,0)
 ;                or (E)xport
"RTN","ECRRPT",163,0)
 ;
"RTN","ECRRPT",164,0)
 ;     Variable return
"RTN","ECRRPT",165,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",166,0)
 N ECV,ECI,ECOSN,ECLOC,ECDSSU,ECDATE,ECNT,ECSAVE,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",167,0)
 S ECV="ECOS^ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",168,0)
 S DIC=723,DIC(0)="QNMZX",X=ECOS D ^DIC D:Y<0  Q:Y<0  S ECOSN=$P(Y,U,2)
"RTN","ECRRPT",169,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Ordering Section.",ECERR=1
"RTN","ECRRPT",170,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1 Q
"RTN","ECRRPT",171,0)
 . K DIC I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",172,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",173,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",174,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",175,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",176,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",177,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",178,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",179,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",180,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",181,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",182,0)
 . S ECV="ECOS^ECSD^ECED^ECOSN",ECROU="START^ECOSSUM"
"RTN","ECRRPT",183,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",184,0)
 . S ECDESC="EC Ordering Section Summary"
"RTN","ECRRPT",185,0)
 . D QUEUE
"RTN","ECRRPT",186,0)
 D START^ECOSSUM
"RTN","ECRRPT",187,0)
 Q
"RTN","ECRRPT",188,0)
ECPCER ;PCE Data Summary Report for RPC Call
"RTN","ECRRPT",189,0)
 ;     Variables passed in
"RTN","ECRRPT",190,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",191,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",192,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",193,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",194,0)
 ;                or (E)xport
"RTN","ECRRPT",195,0)
 ;
"RTN","ECRRPT",196,0)
 ;     Variable return
"RTN","ECRRPT",197,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",198,0)
 N ECV,ECDATE,ECPAT,ECROU,ECDESC,X,DIC,Y
"RTN","ECRRPT",199,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",200,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC D:Y<0  Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",201,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",202,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",203,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",204,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",205,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED",ECROU="SUM^ECPCER"
"RTN","ECRRPT",206,0)
 . S ECDESC="ECS/PCE PATIENT SUMMARY"
"RTN","ECRRPT",207,0)
 . D QUEUE
"RTN","ECRRPT",208,0)
 D SUM^ECPCER
"RTN","ECRRPT",209,0)
 Q
"RTN","ECRRPT",210,0)
ECRDSSA ;DSS Unit Activity Report
"RTN","ECRRPT",211,0)
 ;     Variables passed in
"RTN","ECRRPT",212,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",213,0)
 ;       ECD0   - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",214,0)
 ;       ECSORT  - Sort type(P,S or R)
"RTN","ECRRPT",215,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",216,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",217,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",218,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",219,0)
 ;                or (E)xport
"RTN","ECRRPT",220,0)
 ;
"RTN","ECRRPT",221,0)
 ;     Variable return
"RTN","ECRRPT",222,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",223,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",224,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",225,0)
 S ECV="ECL^ECD0^ECSORT^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",226,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",227,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",228,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",229,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",230,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",231,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",232,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",233,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",234,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",235,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",236,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",237,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",238,0)
 . S ECV="ECSORT^ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSA"
"RTN","ECRRPT",239,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",240,0)
 . S ECDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRRPT",241,0)
 . D QUEUE
"RTN","ECRRPT",242,0)
 D STRPT^ECRDSSA
"RTN","ECRRPT",243,0)
 Q
"RTN","ECSUM")
0^4^B15633396^B13236696
"RTN","ECSUM",1,0)
ECSUM ;BIR/JLP,RHK-Category and Procedure Summary ;1/21/14  16:34
"RTN","ECSUM",2,0)
 ;;2.0;EVENT CAPTURE;**4,19,33,47,95,119,122**;8 May 96;Build 2
"RTN","ECSUM",3,0)
LOC K ECL S EC1=0 D ^ECL S:$D(LOC(2)) EC1=1 K LOC I '$D(ECL) S ECOUT=1 G END
"RTN","ECSUM",4,0)
UNIT ;set var and sel dss unit
"RTN","ECSUM",5,0)
 S ECJLP=0
"RTN","ECSUM",6,0)
 S (ECOUT,ECALL)=0,ECPG=1
"RTN","ECSUM",7,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSUM",8,0)
 .W !!,"Do you want to list all DSS Units for "_ECLN S %=1 D YN^DICN Q:%
"RTN","ECSUM",9,0)
 .W !!?5,"Enter <RET> to list all your DSS Units for this location, or"
"RTN","ECSUM",10,0)
 .W !?11,"NO to select a specific DSS Unit"
"RTN","ECSUM",11,0)
 G:%<0 END I %=1 S ECALL=1 G ECSCN
"RTN","ECSUM",12,0)
 W @IOF,! K DIC S DIC=724,DIC(0)="QEAMZ",DIC("A")="Select DSS Unit: "
"RTN","ECSUM",13,0)
 S:ECL DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))"
"RTN","ECSUM",14,0)
 D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2)
"RTN","ECSUM",15,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSUM",16,0)
 S ECS=+$P(^ECD(ECD,0),"^",2),ECJLP=+$P(^(0),"^",11)
"RTN","ECSUM",17,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECSUM",18,0)
SEL ;
"RTN","ECSUM",19,0)
 I 'ECJLP S ECC=0,ECCN="None" G ECSCN
"RTN","ECSUM",20,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSUM",21,0)
 .W !!,"Do you want to list all categories for "_ECDN S %=1 D YN^DICN Q:%
"RTN","ECSUM",22,0)
 .W !!,"Enter <RET> if you would like to list all categories for this "
"RTN","ECSUM",23,0)
 .W "DSS Unit,",!," or NO to select a specific category"
"RTN","ECSUM",24,0)
 G:%<0 END I %=1 S ECC="ALL" G ECSCN
"RTN","ECSUM",25,0)
 W @IOF,! K DIC S DIC=726,DIC(0)="QEAMZ",DIC("A")="Select Category for "
"RTN","ECSUM",26,0)
 S DIC("A")=DIC("A")_ECDN_" DSS Unit:  "
"RTN","ECSUM",27,0)
 S:ECD DIC("S")="I $D(^ECJ(""AP"",ECL,ECD,+Y))"
"RTN","ECSUM",28,0)
 D ^DIC K DIC G:Y<0 END S ECC=+Y,ECCN=$P(Y,"^",2)
"RTN","ECSUM",29,0)
ECSCN ;Event Codes Screens to display, ALB/JAM-10/16/01
"RTN","ECSUM",30,0)
 K DIR
"RTN","ECSUM",31,0)
 S DIR(0)="SO^A:Active Event Code Screens;I:Inactive Event Code Screens"
"RTN","ECSUM",32,0)
 S DIR(0)=DIR(0)_";B:Both",DIR("B")="A"
"RTN","ECSUM",33,0)
 S DIR("A")="Event Code Screen to display"
"RTN","ECSUM",34,0)
 S DIR("?",1)="Enter an A for Active Event Code Screens, I for Inactive "
"RTN","ECSUM",35,0)
 S DIR("?",1)=DIR("?",1)_"Code Screens,"
"RTN","ECSUM",36,0)
 S DIR("?")="B for a consolidated report of all Event Code Screens, or "
"RTN","ECSUM",37,0)
 S DIR("?")=DIR("?")_"^ to quit."
"RTN","ECSUM",38,0)
 S DIR("??")="ECSUM^"
"RTN","ECSUM",39,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECSUM",40,0)
 S ECSCN=Y
"RTN","ECSUM",41,0)
DEV W !! K IOP,POP,IO("Q"),%ZIS,ZTSK
"RTN","ECSUM",42,0)
 S %ZIS="QM",%ZIS("A")="Select Device:  " D ^%ZIS I POP S ECOUT=1 G END
"RTN","ECSUM",43,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECSUM",44,0)
 .S ZTDESC="CATEGORY AND PROCEDURE SUMMARY",ZTRTN="START^ECSUM",ZTIO=ION
"RTN","ECSUM",45,0)
 .D SAVE,^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECSUM",46,0)
 U IO
"RTN","ECSUM",47,0)
START ;
"RTN","ECSUM",48,0)
 N ECI  ;generic index
"RTN","ECSUM",49,0)
 N ECL  ;location IEN
"RTN","ECSUM",50,0)
 N ECLN  ;location name
"RTN","ECSUM",51,0)
 N CNT ;122 Subscript for export
"RTN","ECSUM",52,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="ECSCREEN STATUS^LOCATION^SERVICE^DSS UNIT^DSS UNIT INACTIVE^CATEGORY^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^CLINIC^STOP CODE^CREDIT STOP CODE^CHAR4 CODE" ;122
"RTN","ECSUM",53,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECSUM",54,0)
 S ECOUT=0,ECPG=1
"RTN","ECSUM",55,0)
 S ECI=0
"RTN","ECSUM",56,0)
 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  D
"RTN","ECSUM",57,0)
 . S ECL=$P(ECLOC(ECI),U),ECLN=$P(ECLOC(ECI),U,2)
"RTN","ECSUM",58,0)
 . I ECALL D ^ECSUM1 Q  ;122
"RTN","ECSUM",59,0)
 . D SUM2^ECSUM1 ;122 Selected DSS units
"RTN","ECSUM",60,0)
CLEAR I $E(IOST,1,2)'="C-" G END
"RTN","ECSUM",61,0)
 G:ECOUT END
"RTN","ECSUM",62,0)
 I ECPG W !!!!!,"Press <RET> to continue  " R X:DTIME I '$T!(X="^") S ECOUT=1 G END
"RTN","ECSUM",63,0)
 G:ECALL END
"RTN","ECSUM",64,0)
ASK ;
"RTN","ECSUM",65,0)
 W @IOF F Q=0:0 D  I % Q
"RTN","ECSUM",66,0)
 .W !!,"Would you like to list another DSS Unit for this Location"
"RTN","ECSUM",67,0)
 .S %=2 D YN^DICN I % Q
"RTN","ECSUM",68,0)
 .W !!,"Enter YES to list another DSS Unit or <RET> to continue"
"RTN","ECSUM",69,0)
 G:%<0 END I %=1 D  G UNIT
"RTN","ECSUM",70,0)
 .K EC4,ECD,ECDN,ECC,ECCN,ECP,ECPN,ECSY,ECSYN,NATN,ECS,ECSN,ECFILE,ECSCN
"RTN","ECSUM",71,0)
 K EC4,ECD,ECDN,ECC,ECCN,ECP,ECPN,ECSY,ECSYN,NATN,ECS,ECSN,ECFILE,ECSCN
"RTN","ECSUM",72,0)
 I EC1 G LOC
"RTN","ECSUM",73,0)
END ;
"RTN","ECSUM",74,0)
 D ^ECKILL Q:$D(ECGUI)!($G(ECPTYP)="E")  W @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" ;119
"RTN","ECSUM",75,0)
 Q
"RTN","ECSUM",76,0)
SAVE ;
"RTN","ECSUM",77,0)
 S (ZTSAVE("ECA*"),ZTSAVE("ECJLP"),ZTSAVE("ECC*"),ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECM*"),ZTSAVE("ECP*"),ZTSAVE("ECS*"),ZTSAVE("EC4"))=""
"RTN","ECSUM",78,0)
 Q
"RTN","ECSUM1")
0^5^B23374855^B19398599
"RTN","ECSUM1",1,0)
ECSUM1 ;BIR/JLP,RHK-Category and Procedure Summary (cont'd) ;1/22/14  16:47
"RTN","ECSUM1",2,0)
 ;;2.0;EVENT CAPTURE;**4,19,23,33,47,95,100,119,122**;8 May 96;Build 2
"RTN","ECSUM1",3,0)
ALLU ;
"RTN","ECSUM1",4,0)
 N UCNT,ECDO,ECCO,ECNT,ECD,ECMORE,ECEDN,ECEDNST,ECCPT ;119,122
"RTN","ECSUM1",5,0)
 S (ECD,ECMORE,ECNT,ECDO,ECCO)=0,ECPG=$G(ECPG,1),ECSCN=$G(ECSCN,"B")
"RTN","ECSUM1",6,0)
 F  S ECD=$O(^ECJ("AP",ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECSUM1",7,0)
 .D SET,CATS I $G(ECPTYP)'="E" D PAGE:'ECOUT&UCNT ;119
"RTN","ECSUM1",8,0)
END Q:$G(ECPTYP)="E"  I 'ECNT N ECNOCNT S ECNOCNT=1 D HEADER W !!!,"Nothing Found." ;119
"RTN","ECSUM1",9,0)
 S ECPG=$G(ECPG,1)
"RTN","ECSUM1",10,0)
 Q
"RTN","ECSUM1",11,0)
SUM2 ;Prints Categories and Procedures for a DSS Unit
"RTN","ECSUM1",12,0)
 N UCNT,ECDO,ECCO,ECNT,ECMORE,ECEDN,ECEDNST,ECCPT ;119,122
"RTN","ECSUM1",13,0)
 S (ECDO,ECMORE,UCNT,ECNT,ECCO)=0,ECPG=$G(ECPG,1),ECSCN=$G(ECSCN,"B")
"RTN","ECSUM1",14,0)
 I ECC="ALL" D CATS G END
"RTN","ECSUM1",15,0)
 I 'ECJLP S ECC=0,ECCN="None",ECCO=999
"RTN","ECSUM1",16,0)
 D PROC
"RTN","ECSUM1",17,0)
 D END
"RTN","ECSUM1",18,0)
 Q
"RTN","ECSUM1",19,0)
SET ;set var
"RTN","ECSUM1",20,0)
 S (ECDN,ECEDN)=$S($P($G(^ECD(+ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),UCNT=0 ;119
"RTN","ECSUM1",21,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSUM1",22,0)
 S ECEDNST=$S($P($G(^ECD(+ECD,0)),U,6):"INACTIVE",1:"") ;119
"RTN","ECSUM1",23,0)
 S ECS=+$P($G(^ECD(+ECD,0)),"^",2)
"RTN","ECSUM1",24,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECSUM1",25,0)
 Q
"RTN","ECSUM1",26,0)
SETC ;set cats
"RTN","ECSUM1",27,0)
 I ECC=0 S ECCN="None" Q
"RTN","ECSUM1",28,0)
 S ECCN=$S($P($G(^EC(726,+ECC,0)),"^")]"":$P(^(0),"^"),1:"ZZ #"_ECC_" MISSING DATA")
"RTN","ECSUM1",29,0)
 S ECCN=ECCN_$S($P($G(^EC(726,+ECC,0)),"^",3):" **Inactive**",1:"")
"RTN","ECSUM1",30,0)
 S ECMORE=1
"RTN","ECSUM1",31,0)
 Q
"RTN","ECSUM1",32,0)
HEADER ;
"RTN","ECSUM1",33,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECSUM1",34,0)
 W !!,?25,"CATEGORY AND PROCEDURE SUMMARY",?70,"Page: ",ECPG,!
"RTN","ECSUM1",35,0)
 W ?27,$S(ECSCN="I":"INACTIVE",ECSCN="A":"ACTIVE",1:" ALL")_" EVENT CODE"
"RTN","ECSUM1",36,0)
 W " SCREENS",!?25,"Run Date : ",ECRDT,!?25,"LOCATION:  "_ECLN
"RTN","ECSUM1",37,0)
 I $G(ECNOCNT) W ! S ECPG=ECPG+1
"RTN","ECSUM1",38,0)
 I '$G(ECNOCNT) W !,?25,"SERVICE:   ",ECSN,!?25,"DSS UNIT:  "_ECDN,! S ECPG=ECPG+1
"RTN","ECSUM1",39,0)
 F I=1:1:80 W "-"
"RTN","ECSUM1",40,0)
 Q
"RTN","ECSUM1",41,0)
CATS ;
"RTN","ECSUM1",42,0)
 S ECC="",ECCO=0
"RTN","ECSUM1",43,0)
 F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  D SETC,PROC Q:ECOUT
"RTN","ECSUM1",44,0)
 S ECMORE=0
"RTN","ECSUM1",45,0)
 Q
"RTN","ECSUM1",46,0)
PROC ;
"RTN","ECSUM1",47,0)
 S ECP=""
"RTN","ECSUM1",48,0)
 F  S ECP=$O(^ECJ("AP",ECL,ECD,ECC,ECP)) Q:ECP=""  D SETP Q:ECOUT
"RTN","ECSUM1",49,0)
 S ECMORE=0
"RTN","ECSUM1",50,0)
 Q
"RTN","ECSUM1",51,0)
SETP ;set procs
"RTN","ECSUM1",52,0)
 N ECSC,ECSSC,EC4CHAR,NODE0 ;122
"RTN","ECSUM1",53,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECSUM1",54,0)
 S ECINDT=$P($G(^ECJ(ECPSY,0)),"^",2)
"RTN","ECSUM1",55,0)
 I ECSCN="A",ECINDT'="" Q
"RTN","ECSUM1",56,0)
 I ECSCN="I",ECINDT="" Q
"RTN","ECSUM1",57,0)
 I ECD'=ECDO D:$G(ECPTYP)'="E" HEADER S ECDO=ECD ;119
"RTN","ECSUM1",58,0)
 I ECC'=ECCO D  S ECCO=ECC I ECOUT Q
"RTN","ECSUM1",59,0)
 .I $G(ECPTYP)="E" Q  ;119
"RTN","ECSUM1",60,0)
 .W !!,"Category:  "_ECCN D:$Y+4>IOSL PAGE,HEADER:ECPG,MORE:$D(ECCN) ;122 Removed white space from front of line
"RTN","ECSUM1",61,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),EC4=+$P($G(^("PRO")),"^",4)
"RTN","ECSUM1",62,0)
 S EC2="" I EC4 S EC2=$S($P($G(^SC(EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC")
"RTN","ECSUM1",63,0)
 S (ECSC,ECSSC,EC4CHAR)="" ;122
"RTN","ECSUM1",64,0)
 I EC4 S NODE0=$G(^ECX(728.44,EC4,0)),ECSC=$P(NODE0,U,2),ECSSC=$S($P(NODE0,U,3)'="":$P(NODE0,U,3),$G(ECPTYP)="E":"",1:"000"),EC4CHAR=$P($G(^ECX(728.441,+$P(NODE0,U,8),0)),U) ;122 Get stop code, credit stop code, char4 code
"RTN","ECSUM1",65,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECSUM1",66,0)
 I ECFILE="UNKNOWN" S ECPN="UNKNOWN",NATN="UNKNOWN"
"RTN","ECSUM1",67,0)
 I ECFILE=81 S ECPI=$$CPT^ICPTCOD(+ECP) D
"RTN","ECSUM1",68,0)
 .S ECPN=$S($P(ECPI,"^",3)]"":$P(ECPI,"^",3),1:"UNKNOWN"),NATN=$S($P(ECPI,"^",2)]"":$P(ECPI,"^",2),1:"NOT LISTED") K ECPI
"RTN","ECSUM1",69,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),NATN=$S($P($G(^EC(725,+ECP,0)),"^",2)]"":$P(^(0),"^",2),1:"NOT LISTED")
"RTN","ECSUM1",70,0)
 I ECFILE=725 S ECCPT=$$CPT^ICPTCOD(+$P($G(^EC(725,+ECP,0)),U,5)),ECCPT=$S($P(ECCPT,U)=-1:"",1:$P(ECCPT,U,2)) ;119
"RTN","ECSUM1",71,0)
 S ECPN=$S(ECPSYN]"":ECPSYN,1:ECPN),ECNT=ECNT+1,UCNT=UCNT+1
"RTN","ECSUM1",72,0)
 I $G(ECPTYP)="E" D  Q  ;119
"RTN","ECSUM1",73,0)
 .D SET ; SET THE DSS UNIT AND UNIT STATUS VARIABLES 119
"RTN","ECSUM1",74,0)
 .S CNT=CNT+1 ;119
"RTN","ECSUM1",75,0)
 .S ^TMP($J,"ECRPT",CNT)=$S($P($G(^ECJ(+ECPSY,0)),U,2):"INACTIVE",1:"ACTIVE")_U_ECLN_U_ECSN_U_ECEDN_U_ECEDNST_U_ECCN_U_$S(ECFILE=81:NATN_U,1:ECCPT_U_NATN)_U_ECPN_U_EC2_U_ECSC_U_ECSSC_U_EC4CHAR ;119,122
"RTN","ECSUM1",76,0)
 W !,"Procedure: ",$E(ECPN,1,30),"   (",$S(ECFILE=81:"CPT",1:"EC"),")",?52,"Nat'l No.: ",NATN ;122 Removed white space from beginning of line
"RTN","ECSUM1",77,0)
 W:EC2]"" !,?2,"Clinic/Stop Code/Credit Stop/CHAR4: "_EC2_"/"_ECSC_"/"_ECSSC_"/"_EC4CHAR_"" ;122
"RTN","ECSUM1",78,0)
 I $P($G(^ECJ(+ECPSY,0)),"^",2),ECSCN="B" W ?70,"*INACTIVE*"
"RTN","ECSUM1",79,0)
 D:($Y+3)>IOSL PAGE,HEADER:ECPG,MORE:$D(ECCN) Q:ECOUT
"RTN","ECSUM1",80,0)
 Q
"RTN","ECSUM1",81,0)
PAGE ;
"RTN","ECSUM1",82,0)
 N SS,JJ
"RTN","ECSUM1",83,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECSUM1",84,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECSUM1",85,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECSUM1",86,0)
 Q
"RTN","ECSUM1",87,0)
MORE I ECMORE W !!,"Category:  "_ECCN ;122 Removed white space from front of line
"RTN","ECSUM1",88,0)
 Q
"RTN","ECUTL1")
0^3^B59402875^B55734083
"RTN","ECUTL1",1,0)
ECUTL1 ;ALB/ESD - Event Capture Classification Utilities ;2/6/14  15:01
"RTN","ECUTL1",2,0)
 ;;2.0;EVENT CAPTURE;**10,13,17,42,54,76,107,122**;8 May 96;Build 2
"RTN","ECUTL1",3,0)
 ;
"RTN","ECUTL1",4,0)
ASKCLASS(DFN,ECANS,ERR,ECTOPCE,ECPATST,ECHDA) ;  Ask classification questions
"RTN","ECUTL1",5,0)
 ; (Agent Orange, Ionizing Radiation, Environmental Contaminants/South 
"RTN","ECUTL1",6,0)
 ; West Asia Conditions, Service Connected, Military Sexual Trauma, 
"RTN","ECUTL1",7,0)
 ; Head/Neck Cancer, Combat Veteran, Project 112/SHAD)
"RTN","ECUTL1",8,0)
 ;
"RTN","ECUTL1",9,0)
 ;   Input:
"RTN","ECUTL1",10,0)
 ;      DFN     - IEN of Patient file (#2)
"RTN","ECUTL1",11,0)
 ;      ECTOPCE - Variable which indicates if DSS Unit is sending to PCE
"RTN","ECUTL1",12,0)
 ;      ECPATST - Inpatient/outpatient status
"RTN","ECUTL1",13,0)
 ;      ECHDA   - IEN in file #721 if editing existing record [optional]
"RTN","ECUTL1",14,0)
 ;
"RTN","ECUTL1",15,0)
 ;  Output:
"RTN","ECUTL1",16,0)
 ;      ECANS - array subscripted by classification abbreviation
"RTN","ECUTL1",17,0)
 ;              (i.e. ECANS("AO")) and passed by reference containing:
"RTN","ECUTL1",18,0)
 ;                 field # of class from EC Patient file (#721)^answer
"RTN","ECUTL1",19,0)
 ;      ERR   - Error indicator if user uparrows or times out (set to 1)
"RTN","ECUTL1",20,0)
 ;
"RTN","ECUTL1",21,0)
 ;      Function value - 1 if successful, 0 otherwise
"RTN","ECUTL1",22,0)
 ;
"RTN","ECUTL1",23,0)
 N ANS,DIR,ECCL,ECCLFLD,SUCCESS,ECVST,ECVSTDT,ECPXB,PXBDATA,ECNT,ECOLD,ECPIECE,ECXX
"RTN","ECUTL1",24,0)
 S (ECANS,ECCL)=""
"RTN","ECUTL1",25,0)
 S ERR=0
"RTN","ECUTL1",26,0)
 S SUCCESS=1
"RTN","ECUTL1",27,0)
 S DFN=+$G(DFN)
"RTN","ECUTL1",28,0)
 S ECTOPCE=$G(ECTOPCE)
"RTN","ECUTL1",29,0)
 I ECTOPCE["~" S ECTOPCE=$P(ECTOPCE,"~",2)
"RTN","ECUTL1",30,0)
 S ECPATST=$G(ECPATST)
"RTN","ECUTL1",31,0)
 ;- Drop out if invalid condition found OR if DSS Unit not sending to
"RTN","ECUTL1",32,0)
 ;  PCE or patient is an inpatient
"RTN","ECUTL1",33,0)
 I ('DFN)!(ECTOPCE="")!(ECPATST="")!(ECTOPCE="N")!(ECPATST="I") S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",34,0)
 D NOW^%DTC S ECVSTDT=$S(+$G(ECDT):ECDT,1:%),ECVST="" ;modified to use event date;JAM/11/24/03
"RTN","ECUTL1",35,0)
 ;- If editing an existing record, get visit data & display classification
"RTN","ECUTL1",36,0)
 I $G(ECHDA) D
"RTN","ECUTL1",37,0)
 .S ECVSTDT=$P($G(^ECH(ECHDA,0)),U,3)
"RTN","ECUTL1",38,0)
 .S ECVST=$P($G(^ECH(ECHDA,0)),U,21)
"RTN","ECUTL1",39,0)
 .F ECCL="AO","IR","EC","SC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",40,0)
 ..S ECPIECE=$S(ECCL="AO":3,ECCL="IR":4,ECCL="EC":5,ECCL="SC":6,ECCL="MST":9,ECCL="HNC":10,ECCL="CV":11,1:12)
"RTN","ECUTL1",41,0)
 ..S ECCLFLD=$P("^^Agent Orange^Ionizing Radiation^South West Asia Conditions^Service Connected^^^Military Sexual Trauma^Head/Neck Cancer^Combat Veteran^Project 112/SHAD","^",ECPIECE)
"RTN","ECUTL1",42,0)
 ..S ECXX=$P($G(^ECH(ECHDA,"P")),U,ECPIECE),ECXX=$S(ECXX="Y":"YES",ECXX="N":"NO",1:"")
"RTN","ECUTL1",43,0)
 ..I ECXX]"" S ECOLD(ECCL)=ECCLFLD_": "_ECXX
"RTN","ECUTL1",44,0)
 .I $D(ECOLD) D
"RTN","ECUTL1",45,0)
 ..W !,"*** Current encounter classification ***",!
"RTN","ECUTL1",46,0)
 ..F ECCL="SC","CV","AO","IR","EC","MST","HNC","SHAD" D
"RTN","ECUTL1",47,0)
 ...I $D(ECOLD(ECCL)) W !?4,ECOLD(ECCL)
"RTN","ECUTL1",48,0)
 ;- Ask user classification question
"RTN","ECUTL1",49,0)
 D CLASS^PXBAPI21("",DFN,ECVSTDT,1,ECVST) W !
"RTN","ECUTL1",50,0)
 ;- Check error; exit if error condition
"RTN","ECUTL1",51,0)
 I $D(PXBDATA("ERR")) D  I ERR S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",52,0)
 .F ECPXB=1:1:4 I $D(PXBDATA("ERR",ECPXB)) D
"RTN","ECUTL1",53,0)
 ..I (PXBDATA("ERR",ECPXB)=1)!(PXBDATA("ERR",ECPXB)=4) S ERR=1
"RTN","ECUTL1",54,0)
 ;- Otherwise, continue to setup ecans array, i.e., new classification data
"RTN","ECUTL1",55,0)
 F ECCL="AO","IR","SC","EC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",56,0)
 .S ECCLFLD=$S(ECCL="AO":21,ECCL="IR":22,ECCL="EC":23,ECCL="SC":24,ECCL="MST":35,ECCL="HNC":39,ECCL="CV":40,1:41)
"RTN","ECUTL1",57,0)
 .S ECPXB=$S(ECCL="AO":1,ECCL="IR":2,ECCL="EC":4,ECCL="SC":3,ECCL="MST":5,ECCL="CV":7,ECCL="SHAD":8,1:6)
"RTN","ECUTL1",58,0)
 .S ANS=$P($G(PXBDATA(ECPXB)),U,2),ANS=$S(ANS=1:"Y",ANS=0:"N",1:"")
"RTN","ECUTL1",59,0)
 .S ECANS(ECCL)=ECCLFLD_"^"_ANS
"RTN","ECUTL1",60,0)
 ;- Delete old data if it exists
"RTN","ECUTL1",61,0)
 I $G(ECHDA) D DELCLASS(ECHDA)
"RTN","ECUTL1",62,0)
 Q SUCCESS
"RTN","ECUTL1",63,0)
 ;
"RTN","ECUTL1",64,0)
 ;
"RTN","ECUTL1",65,0)
EDCLASS(ECIEN,ECANS) ;  Edit classifications fields in EC Patient
"RTN","ECUTL1",66,0)
 ;                  file (#721)
"RTN","ECUTL1",67,0)
 ;
"RTN","ECUTL1",68,0)
 ;   Input:
"RTN","ECUTL1",69,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",70,0)
 ;      ECANS - Array of answers to classification questions asked
"RTN","ECUTL1",71,0)
 ;
"RTN","ECUTL1",72,0)
 ;  Output:
"RTN","ECUTL1",73,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 edited in file #721
"RTN","ECUTL1",74,0)
 ;
"RTN","ECUTL1",75,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",76,0)
 S (DR,ECCL)=""
"RTN","ECUTL1",77,0)
 ;
"RTN","ECUTL1",78,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",79,0)
 D
"RTN","ECUTL1",80,0)
 . I '$G(ECIEN)!('$D(ECANS)) Q
"RTN","ECUTL1",81,0)
 . ;
"RTN","ECUTL1",82,0)
 . ;- Lock main node
"RTN","ECUTL1",83,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",84,0)
 . S DA=ECIEN
"RTN","ECUTL1",85,0)
 . S DIE="^ECH("
"RTN","ECUTL1",86,0)
 . ;
"RTN","ECUTL1",87,0)
 . ;- Edit classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",88,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  S DR=DR_+$P($G(ECANS(ECCL)),"^")_"////"_$P($G(ECANS(ECCL)),"^",2)_";"
"RTN","ECUTL1",89,0)
 . ;
"RTN","ECUTL1",90,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",91,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",92,0)
 . D ^DIE
"RTN","ECUTL1",93,0)
 ;
"RTN","ECUTL1",94,0)
 ;- Unlock main node
"RTN","ECUTL1",95,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",96,0)
 ;
"RTN","ECUTL1",97,0)
 Q
"RTN","ECUTL1",98,0)
 ;
"RTN","ECUTL1",99,0)
 ;
"RTN","ECUTL1",100,0)
SETCLASS(ECANS) ;  Set answers to classification questions in EC variables
"RTN","ECUTL1",101,0)
 ;          (used in EC data entry options when filing EC Patient record)
"RTN","ECUTL1",102,0)
 ;
"RTN","ECUTL1",103,0)
 ;   Input:
"RTN","ECUTL1",104,0)
 ;      ECANS - array of answers to class questions asked containing:
"RTN","ECUTL1",105,0)
 ;                 field number of class ques from file #721^answer
"RTN","ECUTL1",106,0)
 ;
"RTN","ECUTL1",107,0)
 ;  Output:
"RTN","ECUTL1",108,0)
 ;      EC classification var - ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,
"RTN","ECUTL1",109,0)
 ;                              ECSHAD
"RTN","ECUTL1",110,0)
 ;
"RTN","ECUTL1",111,0)
 N ECCL,ECCLFLD
"RTN","ECUTL1",112,0)
 S (ECCL,ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,ECSHAD)=""
"RTN","ECUTL1",113,0)
 ;
"RTN","ECUTL1",114,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",115,0)
 D
"RTN","ECUTL1",116,0)
 . ;
"RTN","ECUTL1",117,0)
 . ;- If array containing class flds^answers is not created, exit
"RTN","ECUTL1",118,0)
 . I '$D(ECANS) Q
"RTN","ECUTL1",119,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  D
"RTN","ECUTL1",120,0)
 .. ;
"RTN","ECUTL1",121,0)
 .. ;- Get field number of classification
"RTN","ECUTL1",122,0)
 .. S ECCLFLD=+$P($G(ECANS(ECCL)),"^")
"RTN","ECUTL1",123,0)
 .. ;
"RTN","ECUTL1",124,0)
 .. ;- Agent Orange variable
"RTN","ECUTL1",125,0)
 .. S:ECCLFLD=21 ECAO=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",126,0)
 .. ;
"RTN","ECUTL1",127,0)
 .. ;- Ionizing Radiation variable
"RTN","ECUTL1",128,0)
 .. S:ECCLFLD=22 ECIR=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",129,0)
 .. ;
"RTN","ECUTL1",130,0)
 .. ;- Environmental Contaminants/South West Asia Conditions variable
"RTN","ECUTL1",131,0)
 .. S:ECCLFLD=23 ECZEC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",132,0)
 .. ;
"RTN","ECUTL1",133,0)
 .. ;- Service Connected variable
"RTN","ECUTL1",134,0)
 .. S:ECCLFLD=24 ECSC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",135,0)
 .. ;
"RTN","ECUTL1",136,0)
 .. ;- Military Sexual Trauma variable
"RTN","ECUTL1",137,0)
 .. S:ECCLFLD=35 ECMST=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",138,0)
 .. ;
"RTN","ECUTL1",139,0)
 .. ;- Head/Neck Cancer
"RTN","ECUTL1",140,0)
 .. S:ECCLFLD=39 ECHNC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",141,0)
 .. ;
"RTN","ECUTL1",142,0)
 .. ;- Combat Veteran
"RTN","ECUTL1",143,0)
 .. S:ECCLFLD=40 ECCV=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",144,0)
 .. ;
"RTN","ECUTL1",145,0)
 .. ;- Project 112/SHAD (Shipboard Hazard and Defense)
"RTN","ECUTL1",146,0)
 .. S:ECCLFLD=41 ECSHAD=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",147,0)
 Q
"RTN","ECUTL1",148,0)
 ;
"RTN","ECUTL1",149,0)
 ;
"RTN","ECUTL1",150,0)
DELCLASS(ECIEN) ;  Delete classification fields in EC Patient file (#721)
"RTN","ECUTL1",151,0)
 ;
"RTN","ECUTL1",152,0)
 ;   Input:
"RTN","ECUTL1",153,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",154,0)
 ;
"RTN","ECUTL1",155,0)
 ;  Output:
"RTN","ECUTL1",156,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 deleted in file#721
"RTN","ECUTL1",157,0)
 ;
"RTN","ECUTL1",158,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",159,0)
 S DR=""
"RTN","ECUTL1",160,0)
 ;
"RTN","ECUTL1",161,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",162,0)
 D
"RTN","ECUTL1",163,0)
 . I '$G(ECIEN) Q
"RTN","ECUTL1",164,0)
 . ;
"RTN","ECUTL1",165,0)
 . ;- Lock main node
"RTN","ECUTL1",166,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",167,0)
 . S DA=ECIEN
"RTN","ECUTL1",168,0)
 . S DIE="^ECH("
"RTN","ECUTL1",169,0)
 . ;
"RTN","ECUTL1",170,0)
 . ;- Delete classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",171,0)
 . F ECCL=21:1:24,35,39,40,41 S DR=DR_ECCL_"////@;"
"RTN","ECUTL1",172,0)
 . ;
"RTN","ECUTL1",173,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",174,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",175,0)
 . D ^DIE
"RTN","ECUTL1",176,0)
 ;
"RTN","ECUTL1",177,0)
 ;- Unlock main node
"RTN","ECUTL1",178,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",179,0)
 ;
"RTN","ECUTL1",180,0)
 Q
"RTN","ECUTL1",181,0)
 ;
"RTN","ECUTL1",182,0)
 ;
"RTN","ECUTL1",183,0)
LOCK(ECIEN) ;  Lock EC Patient record
"RTN","ECUTL1",184,0)
 ;
"RTN","ECUTL1",185,0)
 ;   Input:
"RTN","ECUTL1",186,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",187,0)
 ;
"RTN","ECUTL1",188,0)
 ;  Output:
"RTN","ECUTL1",189,0)
 ;      Function Value - 1 if record can be locked, 0 otherwise
"RTN","ECUTL1",190,0)
 ;
"RTN","ECUTL1",191,0)
 I $G(ECIEN) L +^ECH(ECIEN):5
"RTN","ECUTL1",192,0)
 Q $T
"RTN","ECUTL1",193,0)
 ;
"RTN","ECUTL1",194,0)
 ;
"RTN","ECUTL1",195,0)
UNLOCK(ECIEN) ;  Unlock EC Patient record
"RTN","ECUTL1",196,0)
 ;
"RTN","ECUTL1",197,0)
 ;   Input:
"RTN","ECUTL1",198,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",199,0)
 ;
"RTN","ECUTL1",200,0)
 ;  Output:
"RTN","ECUTL1",201,0)
 ;      EC Patient record unlocked
"RTN","ECUTL1",202,0)
 ;
"RTN","ECUTL1",203,0)
 I $G(ECIEN) L -^ECH(ECIEN)
"RTN","ECUTL1",204,0)
 Q
"RTN","ECUTL1",205,0)
RCNTVST(RESULT,DFN) ;
"RTN","ECUTL1",206,0)
 ;
"RTN","ECUTL1",207,0)
 ;This call uses the Patient and Visit file to return a list of recent
"RTN","ECUTL1",208,0)
 ;visits. It returns the most recent 20 visits using both files but does 
"RTN","ECUTL1",209,0)
 ;not return future visits from the Patient file.  It also filters out 
"RTN","ECUTL1",210,0)
 ;canceled, rescheduled or no-show appts.  For the Patient file it uses 
"RTN","ECUTL1",211,0)
 ;a start date of "" and an end date of "NOW". For the selected visit
"RTN","ECUTL1",212,0)
 ;call, it only passes in and uses the DFN.
"RTN","ECUTL1",213,0)
 ;
"RTN","ECUTL1",214,0)
 ;API 1905
"RTN","ECUTL1",215,0)
 ;Calls    
"RTN","ECUTL1",216,0)
 ;  SELECTED^VSIT(DFN,SDT,EDT,HOSLOC,ENCTPE,NNCTPE,SRVCAT,NSRVCAT,LASTN) 
"RTN","ECUTL1",217,0)
 ;  See API for detailed documentation
"RTN","ECUTL1",218,0)
 ;
"RTN","ECUTL1",219,0)
 ;API 3859
"RTN","ECUTL1",220,0)
 ;Calls    GETAPPT^SDAMA201(DFN,SDFIELDS,SDAPSTAT,SDT,EDT,SDCNT)
"RTN","ECUTL1",221,0)
 ;         See API for detailed documentation
"RTN","ECUTL1",222,0)
 ;
"RTN","ECUTL1",223,0)
 ;IA 10040 - This is a supported IA and is used to filter/screen
"RTN","ECUTL1",224,0)
 ;           non clinics visits from being included in API 1905
"RTN","ECUTL1",225,0)
 ;           not needed in 3859 as it contains a filter for clinics
"RTN","ECUTL1",226,0)
 ;
"RTN","ECUTL1",227,0)
 N ARR,CNT,DATE,NUM,PARAMS,P1,P1DT,P2,PDT,VDT,VIEN,X,X1,X2,Y,SDRESULT ;122 Changed SDRESULTS to SDRESULT
"RTN","ECUTL1",228,0)
 D NOW^%DTC S DATE=%,Y=DATE
"RTN","ECUTL1",229,0)
 S VDT=3050101
"RTN","ECUTL1",230,0)
 S X1=DT,X2=(-15) D C^%DTC S PDT=X    ;get appts within last 15 days
"RTN","ECUTL1",231,0)
 S RESULT(0)=0
"RTN","ECUTL1",232,0)
 I '$G(DFN) Q
"RTN","ECUTL1",233,0)
 K ^TMP("VSIT",$J)
"RTN","ECUTL1",234,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","ECUTL1",235,0)
 D SELECTED^VSIT(DFN,VDT,"","","","","","",30)
"RTN","ECUTL1",236,0)
 D GETAPPT^SDAMA201(DFN,"1;2","R;NT",PDT,DATE,.SDRESULT)
"RTN","ECUTL1",237,0)
 S VIEN=0
"RTN","ECUTL1",238,0)
 F  S VIEN=$O(^TMP("VSIT",$J,VIEN)) Q:VIEN=""  S NUM=0 D
"RTN","ECUTL1",239,0)
 .F  S NUM=$O(^TMP("VSIT",$J,VIEN,NUM)) Q:NUM=""  D
"RTN","ECUTL1",240,0)
 ..S PARAMS=$G(^TMP("VSIT",$J,VIEN,NUM))
"RTN","ECUTL1",241,0)
 ..;make sure location is a clinic
"RTN","ECUTL1",242,0)
 ..I $P(PARAMS,U,3)="H" Q
"RTN","ECUTL1",243,0)
 ..I $P(PARAMS,U,3)="E" Q  ;122 Don't include historical visits (marked as "E" for event) in list of recent visits
"RTN","ECUTL1",244,0)
 ..I $$GET1^DIQ(44,$P($P(PARAMS,U,2),";"),2,"I")'="C" Q
"RTN","ECUTL1",245,0)
 ..S P1DT=$P(PARAMS,U,1),P1=$$FMTE^XLFDT(P1DT,"9M"),P2=$P($P(PARAMS,U,2),";",2)
"RTN","ECUTL1",246,0)
 ..I '$G(P1DT)!($G(P2)="") Q
"RTN","ECUTL1",247,0)
 ..I $D(ARR(P1DT,P2))=1 Q
"RTN","ECUTL1",248,0)
 ..;;cntrl array, filter visits from PT file
"RTN","ECUTL1",249,0)
 ..S ARR(P1DT,P2)=P1DT_U_$$LJ^XLFSTR(P1,25)_$$LJ^XLFSTR(P2,30)_U_P1_U_P2_U
"RTN","ECUTL1",250,0)
 S VIEN=0
"RTN","ECUTL1",251,0)
 F  S VIEN=$O(^TMP($J,"SDAMA201","GETAPPT",VIEN)) Q:VIEN=""  D
"RTN","ECUTL1",252,0)
 .I $D(^TMP($J,"SDAMA201","GETAPPT","ERROR")) Q
"RTN","ECUTL1",253,0)
 .S P1DT=$G(^TMP($J,"SDAMA201","GETAPPT",VIEN,1))
"RTN","ECUTL1",254,0)
 .S P1=$$FMTE^XLFDT(P1DT,"9M")
"RTN","ECUTL1",255,0)
 .S P2=$P($G(^TMP($J,"SDAMA201","GETAPPT",VIEN,2)),U,2)
"RTN","ECUTL1",256,0)
 .I '$G(P1DT)!($G(P2)="") Q
"RTN","ECUTL1",257,0)
 .I $D(ARR(P1DT,P2))=1 Q
"RTN","ECUTL1",258,0)
 .;;cntrl array, filter visits from PT file
"RTN","ECUTL1",259,0)
 .S ARR(P1DT,P2)=P1DT_U_$$LJ^XLFSTR(P1,25)_$$LJ^XLFSTR(P2,30)_U_P1_U_P2_U
"RTN","ECUTL1",260,0)
 S VIEN=9999999999,CNT=1
"RTN","ECUTL1",261,0)
 F  S VIEN=$O(ARR(VIEN),-1) Q:((VIEN="")!(CNT>20))  D
"RTN","ECUTL1",262,0)
 .S NUM=0 F  S NUM=$O(ARR(VIEN,NUM)) Q:NUM=""  D
"RTN","ECUTL1",263,0)
 ..S RESULT(CNT)=ARR(VIEN,NUM),CNT=CNT+1
"RTN","ECUTL1",264,0)
 I $D(ARR) S RESULT(0)=CNT
"RTN","ECUTL1",265,0)
 K ^TMP("VSIT",$J)
"RTN","ECUTL1",266,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","ECUTL1",267,0)
 Q
"RTN","ECUTL3")
0^6^B19735136^n/a
"RTN","ECUTL3",1,0)
ECUTL3 ;ALB/DAN - Event capture utilities (cont) ;2/6/14  10:06
"RTN","ECUTL3",2,0)
 ;;2.0;EVENT CAPTURE;**122**;8 May 96;Build 2
"RTN","ECUTL3",3,0)
INACTSCR(ACTION) ;Inactivate event code screens associated with inactive national procedure codes
"RTN","ECUTL3",4,0)
 ;
"RTN","ECUTL3",5,0)
 ;ACTION - optional
"RTN","ECUTL3",6,0)
 ;         0 - Don't inactivate, test what would happen
"RTN","ECUTL3",7,0)
 ;         1 - Inactivate identified event code screens
"RTN","ECUTL3",8,0)
 ;
"RTN","ECUTL3",9,0)
 N SCREEN,LOC,DSSU,ECIEN,DA,DIE,DR,ECSCR,ECPTR,ECDATA,ECFILE
"RTN","ECUTL3",10,0)
 S:'$D(ACTION) ACTION=0 ;If not sent in, assume testing
"RTN","ECUTL3",11,0)
 S ECSCR=0
"RTN","ECUTL3",12,0)
 F  S ECSCR=$O(^ECJ("B",ECSCR)) Q:+ECSCR=0  D
"RTN","ECUTL3",13,0)
 .S ECPTR=$P(ECSCR,"-",4),ECIEN=$O(^ECJ("B",ECSCR,0))
"RTN","ECUTL3",14,0)
 .Q:'$D(^ECJ(ECIEN,0))  ;Screen doesn't exist
"RTN","ECUTL3",15,0)
 .Q:+$P(^ECJ(ECIEN,0),"^",2)  ;Skip if event code screen is already inactive
"RTN","ECUTL3",16,0)
 .S ECFILE=$P(ECPTR,";",2)
"RTN","ECUTL3",17,0)
 .;ec screens pointing to file #725
"RTN","ECUTL3",18,0)
 .I ECFILE["EC(725" S ECDATA=$G(^EC(725,$P(ECPTR,";",1),0)) D
"RTN","ECUTL3",19,0)
 ..Q:$P(ECDATA,U,3)=""  ;Skip if national procedure code is active
"RTN","ECUTL3",20,0)
 ..I $P(ECDATA,U,3)>DT,ACTION Q  ;If inactivation date is in the future and we're inactivating event code screens, skip it as we don't want to inactivate screen until procedure is inactive
"RTN","ECUTL3",21,0)
 ..S DSSU=$P(ECSCR,"-",2) Q:DSSU=""  ;If no DSS unit, quit
"RTN","ECUTL3",22,0)
 ..S SCREEN(DSSU,ECIEN)="" ;put on list to inactivate if not already inactive
"RTN","ECUTL3",23,0)
 I $G(ACTION) S DSSU=0 F  S DSSU=$O(SCREEN(DSSU)) Q:'+DSSU  S ECIEN=0 F  S ECIEN=$O(SCREEN(DSSU,ECIEN)) Q:'+ECIEN  D
"RTN","ECUTL3",24,0)
 .S DA=ECIEN,DIE="^ECJ(",DR="1////"_$$DT^XLFDT D ^DIE ;Set inactivation date to today
"RTN","ECUTL3",25,0)
 ;
"RTN","ECUTL3",26,0)
MAIL ;Send email to group showing action taken
"RTN","ECUTL3",27,0)
 N XMSUB,ECTEXT,XMDUZ,XMY,XMZ,XMTEXT,KIEN,DIFROM,LOC,PRO,CNT,PX,CAT,CPT,ACLIN
"RTN","ECUTL3",28,0)
 S XMDUZ="Event Capture Package"
"RTN","ECUTL3",29,0)
 S XMY($G(DUZ,.5))="" ;Set recipient to installer or postmaster
"RTN","ECUTL3",30,0)
 S KIEN=0 F  S KIEN=$O(^XUSEC("ECMGR",KIEN)) Q:'+KIEN  S XMY(KIEN)="" ;Holders of ECMGR included in email, XUSEC read allowed by DBIA #10076
"RTN","ECUTL3",31,0)
 S XMSUB="Inactivation of Event Code Screens from inactive procedure codes"
"RTN","ECUTL3",32,0)
 S XMTEXT="ECTEXT("
"RTN","ECUTL3",33,0)
 S CNT=1
"RTN","ECUTL3",34,0)
 I '$D(SCREEN) D
"RTN","ECUTL3",35,0)
 .S ECTEXT(CNT)="No Event Code Screens were inactivated, as no inactive",CNT=CNT+1,ECTEXT(CNT)="EC Procedure Codes were found in use.",CNT=CNT+1
"RTN","ECUTL3",36,0)
 I $D(SCREEN) D
"RTN","ECUTL3",37,0)
 .S ECTEXT(CNT)="The following event code screens "_$S($G(ACTION):"",1:"would ")_"have been inactivated",CNT=CNT+1
"RTN","ECUTL3",38,0)
 .S ECTEXT(CNT)="because these Event Code Screens were associated",CNT=CNT+1
"RTN","ECUTL3",39,0)
 .S ECTEXT(CNT)="with inactive EC Procedure Codes.",CNT=CNT+1
"RTN","ECUTL3",40,0)
 I '$G(ACTION),$D(SCREEN) S ECTEXT(CNT)=" ",CNT=CNT+1 D
"RTN","ECUTL3",41,0)
 .S ECTEXT(CNT)="Inactivations have not yet occurred; this list represents event code",CNT=CNT+1,ECTEXT(CNT)="screens that will be inactivated automatically "_$S($G(DAYS):DAYS_" days ",1:"")_"in the future.",CNT=CNT+1
"RTN","ECUTL3",42,0)
 S ECTEXT(CNT)=" ",CNT=CNT+1
"RTN","ECUTL3",43,0)
 S DSSU=0 F  S DSSU=$O(SCREEN(DSSU)) Q:'+DSSU  D
"RTN","ECUTL3",44,0)
 .S ECTEXT(CNT)="DSS UNIT: "_$$GET1^DIQ(724,DSSU,.01,"E")_" ("_DSSU_")",CNT=CNT+1
"RTN","ECUTL3",45,0)
 .S ECIEN=0 F  S ECIEN=$O(SCREEN(DSSU,ECIEN)) Q:'+ECIEN  D
"RTN","ECUTL3",46,0)
 ..S LOC=$$GET1^DIQ(4,$P($P(^ECJ(ECIEN,0),U),"-"),.01,"E"),PRO=$G(^EC(725,+$P($P(^ECJ(ECIEN,0),U),"-",4),0)),PX=$P(PRO,U,2)_" "_$P(PRO,U)
"RTN","ECUTL3",47,0)
 ..S ECTEXT(CNT)="  LOC: "_LOC_$$REPEAT^XLFSTR(" ",(27-$L(LOC)))_"PROC: "_PX,CNT=CNT+1
"RTN","ECUTL3",48,0)
 ..S CAT=$P($P(^ECJ(ECIEN,0),U),"-",3),CAT=$S(CAT:$P($G(^EC(726,CAT,0)),U),1:""),CPT=$$GET1^DIQ(81,+$P(PRO,U,5),.01,"E")
"RTN","ECUTL3",49,0)
 ..S ECTEXT(CNT)="  CAT: "_CAT_$$REPEAT^XLFSTR(" ",(27-$L(CAT)))_"CPT: "_CPT,CNT=CNT+1
"RTN","ECUTL3",50,0)
 ..S ACLIN=$$GET1^DIQ(44,+$P(^ECJ(ECIEN,"PRO"),U,4),.01,"E"),ECTEXT(CNT)="  DEFAULT ASSOCIATED CLINIC: "_ACLIN,CNT=CNT+1
"RTN","ECUTL3",51,0)
 ..S ECTEXT(CNT)=" ",CNT=CNT+1
"RTN","ECUTL3",52,0)
 D ^XMD ;Send email
"RTN","ECUTL3",53,0)
 Q
"RTN","ECUTL3",54,0)
 ;
"RTN","ECUTL3",55,0)
QINACT ;Queue the inactivation of event code screens to happen
"RTN","ECUTL3",56,0)
 ;in the background.  Comes from "AC" cross reference of the
"RTN","ECUTL3",57,0)
 ;INACTIVE DATE (#2) field of file 725
"RTN","ECUTL3",58,0)
 N ZTRTN,ZTDTH,ZTDESC,ZTIO,ZTSK
"RTN","ECUTL3",59,0)
 S ZTRTN="INACTSCR^ECUTL3(1)",ZTDTH=$H,ZTDESC="Inactivate event code screens with inactive procedure codes",ZTIO="" D ^%ZTLOAD
"RTN","ECUTL3",60,0)
 Q
"VER")
8.0^22.0
"^DD",725,725,2,0)
INACTIVE DATE^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",725,725,2,1,0)
^.1
"^DD",725,725,2,1,1,0)
725^AC^MUMPS
"^DD",725,725,2,1,1,1)
I DA>90000 D QINACT^ECUTL3
"^DD",725,725,2,1,1,2)
Q
"^DD",725,725,2,1,1,3)
DO NOT DELETE
"^DD",725,725,2,1,1,"%D",0)
^^4^4^3140206^
"^DD",725,725,2,1,1,"%D",1,0)
If inactivation date is set for a locally defined national procedure code
"^DD",725,725,2,1,1,"%D",2,0)
(IEN greater than 90,000), identify any event code screens in the EC EVENT
"^DD",725,725,2,1,1,"%D",3,0)
CODE SCREENS file (#720.3) that are associated with the national procedure
"^DD",725,725,2,1,1,"%D",4,0)
code and inactivate them.
"^DD",725,725,2,1,1,"DT")
3140203
"^DD",725,725,2,3)
Enter date this procedure was inactivated.
"^DD",725,725,2,21,0)
^^13^13^2960401^^^
"^DD",725,725,2,21,1,0)
This field contains the inactive date for this procedure.
"^DD",725,725,2,21,2,0)
 
"^DD",725,725,2,21,3,0)
National procedures will be determined inactive by the
"^DD",725,725,2,21,4,0)
Decision Support System (DSS) Program Office and updated
"^DD",725,725,2,21,5,0)
with subsequent releases of the Event Capture software.
"^DD",725,725,2,21,6,0)
 
"^DD",725,725,2,21,7,0)
Options within the Event Capture Management Menu
"^DD",725,725,2,21,8,0)
provide users the ability to inactivate any locally
"^DD",725,725,2,21,9,0)
defined procedures. These local inactive procedures
"^DD",725,725,2,21,10,0)
may be reactivated for use in the Event Capture
"^DD",725,725,2,21,11,0)
software. You can reactivate an inactive procedure by
"^DD",725,725,2,21,12,0)
entering an "@" at the date prompt using the
"^DD",725,725,2,21,13,0)
Activate/Inactivate Local Procedures option.
"^DD",725,725,2,23,0)
^^2^2^2960401^
"^DD",725,725,2,23,1,0)
Date field that represents the inactive date for this
"^DD",725,725,2,23,2,0)
procedure.
"^DD",725,725,2,"DT")
3140203
"BLD",9036,6)
^115
**END**
**END**

