EMERGENCY Released EC*2*130 SEQ #122
Extracted from mail message
**KIDS**:EC*2.0*130^

**INSTALL NAME**
EC*2.0*130
"BLD",9640,0)
EC*2.0*130^EVENT CAPTURE^0^3150731^y
"BLD",9640,4,0)
^9.64PA^^
"BLD",9640,6.3)
1
"BLD",9640,"ABPKG")
n
"BLD",9640,"KRN",0)
^9.67PA^779.2^20
"BLD",9640,"KRN",.4,0)
.4
"BLD",9640,"KRN",.401,0)
.401
"BLD",9640,"KRN",.402,0)
.402
"BLD",9640,"KRN",.403,0)
.403
"BLD",9640,"KRN",.5,0)
.5
"BLD",9640,"KRN",.84,0)
.84
"BLD",9640,"KRN",3.6,0)
3.6
"BLD",9640,"KRN",3.8,0)
3.8
"BLD",9640,"KRN",9.2,0)
9.2
"BLD",9640,"KRN",9.8,0)
9.8
"BLD",9640,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9640,"KRN",9.8,"NM",1,0)
ECUTL1^^0^B67581197
"BLD",9640,"KRN",9.8,"NM",2,0)
ECUMRPC1^^0^B101055937
"BLD",9640,"KRN",9.8,"NM","B","ECUMRPC1",2)

"BLD",9640,"KRN",9.8,"NM","B","ECUTL1",1)

"BLD",9640,"KRN",19,0)
19
"BLD",9640,"KRN",19.1,0)
19.1
"BLD",9640,"KRN",101,0)
101
"BLD",9640,"KRN",409.61,0)
409.61
"BLD",9640,"KRN",771,0)
771
"BLD",9640,"KRN",779.2,0)
779.2
"BLD",9640,"KRN",870,0)
870
"BLD",9640,"KRN",8989.51,0)
8989.51
"BLD",9640,"KRN",8989.52,0)
8989.52
"BLD",9640,"KRN",8994,0)
8994
"BLD",9640,"KRN","B",.4,.4)

"BLD",9640,"KRN","B",.401,.401)

"BLD",9640,"KRN","B",.402,.402)

"BLD",9640,"KRN","B",.403,.403)

"BLD",9640,"KRN","B",.5,.5)

"BLD",9640,"KRN","B",.84,.84)

"BLD",9640,"KRN","B",3.6,3.6)

"BLD",9640,"KRN","B",3.8,3.8)

"BLD",9640,"KRN","B",9.2,9.2)

"BLD",9640,"KRN","B",9.8,9.8)

"BLD",9640,"KRN","B",19,19)

"BLD",9640,"KRN","B",19.1,19.1)

"BLD",9640,"KRN","B",101,101)

"BLD",9640,"KRN","B",409.61,409.61)

"BLD",9640,"KRN","B",771,771)

"BLD",9640,"KRN","B",779.2,779.2)

"BLD",9640,"KRN","B",870,870)

"BLD",9640,"KRN","B",8989.51,8989.51)

"BLD",9640,"KRN","B",8989.52,8989.52)

"BLD",9640,"KRN","B",8994,8994)

"BLD",9640,"QUES",0)
^9.62^^
"BLD",9640,"REQB",0)
^9.611^1^1
"BLD",9640,"REQB",1,0)
EC*2.0*126^1
"BLD",9640,"REQB","B","EC*2.0*126",1)

"MBREQ")
0
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
130^3150731
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","ECUMRPC1")
0^2^B101055937^B100564674
"RTN","ECUMRPC1",1,0)
ECUMRPC1 ;ALB/JAM-Event Capture Management Broker Utilities ;7/30/15  15:43
"RTN","ECUMRPC1",2,0)
 ;;2.0;EVENT CAPTURE;**25,30,33,72,94,95,105,100,107,110,112,126,130**;8 May 96;Build 1
"RTN","ECUMRPC1",3,0)
 ;
"RTN","ECUMRPC1",4,0)
DSSUNT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",5,0)
 ;
"RTN","ECUMRPC1",6,0)
 ;This broker entry point returns DSS units from file 724
"RTN","ECUMRPC1",7,0)
 ;        RPC: EC GETDSSUNIT
"RTN","ECUMRPC1",8,0)
 ;INPUTS         ECARY -Contains the following subscripted elements
"RTN","ECUMRPC1",9,0)
 ;               P1 =   optional field to return DSS Units
"RTN","ECUMRPC1",10,0)
 ;                      STAT; 'A'ctive (default), 'I'nactive, 'B'oth
"RTN","ECUMRPC1",11,0)
 ;               P2 =   optional field to filter based on the DSS Name
"RTN","ECUMRPC1",12,0)
 ;               P3 =   optional field to return 1 DSS unit by IEN, if used
"RTN","ECUMRPC1",13,0)
 ;                      no other filters evaluated
"RTN","ECUMRPC1",14,0)
 ;               P4 =   optional field to filter based on the DSS Unit Number (DSS Dept)
"RTN","ECUMRPC1",15,0)
 ;               
"RTN","ECUMRPC1",16,0)
 ;               if data is passed into the other fields then all criteria
"RTN","ECUMRPC1",17,0)
 ;               must be met for data on a unit to be returned
"RTN","ECUMRPC1",18,0)
 ;
"RTN","ECUMRPC1",19,0)
 ;OUTPUTS        RESULTS - Array of DSS units. Data pieces as follows:-
"RTN","ECUMRPC1",20,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",21,0)
 ;                 1     IEN of DSS Unit 
"RTN","ECUMRPC1",22,0)
 ;                 2     Name of DSS Unit
"RTN","ECUMRPC1",23,0)
 ;                 3     IEN of DSS Unit
"RTN","ECUMRPC1",24,0)
 ;                 4     Inactive flag
"RTN","ECUMRPC1",25,0)
 ;                 5     Send to PCE   
"RTN","ECUMRPC1",26,0)
 ;                 6     Unit Number
"RTN","ECUMRPC1",27,0)
 ;                 7     Service
"RTN","ECUMRPC1",28,0)
 ;                 8     Medical Specialty
"RTN","ECUMRPC1",29,0)
 ;                 9     Cost Center
"RTN","ECUMRPC1",30,0)
 ;                 10    Associated Stop code (if not sending to PCE)
"RTN","ECUMRPC1",31,0)
 ;                 11    Category flag
"RTN","ECUMRPC1",32,0)
 ;                 12    Default date entry
"RTN","ECUMRPC1",33,0)
 ;                 13    Credit Stop Code (only available when SEND TO PCE is set to "no records"
"RTN","ECUMRPC1",34,0)
 ;                 14    CHAR4 code (only available when SEND TO PCE is set to "no records"
"RTN","ECUMRPC1",35,0)
 ;
"RTN","ECUMRPC1",36,0)
 N UNT,STAT,CNT,CAT,NODE,ECS,STR,SRV,MED,CST,UNO,INACT,ASC,PCE,ACT,NODE
"RTN","ECUMRPC1",37,0)
 N DFD,DIEN,DNM,DUNIT,GET1,CSC,CHAR4 ;126
"RTN","ECUMRPC1",38,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",39,0)
 K ^TMP($J,"ECDSSUNT")
"RTN","ECUMRPC1",40,0)
 S DNM=$P($G(ECARY),U,2),DIEN=$P($G(ECARY),U,3),DUNIT=$P($G(ECARY),U,4)
"RTN","ECUMRPC1",41,0)
 S:DNM'="" DNM=$$UP^XLFSTR(DNM)
"RTN","ECUMRPC1",42,0)
 S:DUNIT'="" DUNIT=$$UP^XLFSTR(DUNIT)
"RTN","ECUMRPC1",43,0)
 S STAT=$P($G(ECARY),U),(CNT,UNT,GET1)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",44,0)
 ; if IEN passed in - use that, then quit, GET1 used as control to stop
"RTN","ECUMRPC1",45,0)
 I $G(DIEN) S UNT=DIEN-.001,GET1=1
"RTN","ECUMRPC1",46,0)
 F  S UNT=$O(^ECD(UNT)) Q:'UNT!((UNT>DIEN&(GET1)))  S NODE=$G(^ECD(UNT,0)) I NODE'="" D
"RTN","ECUMRPC1",47,0)
 . S ECS=$P(NODE,U,8),ACT=$P(NODE,U,6),ACT=$S(ACT:1,1:0)
"RTN","ECUMRPC1",48,0)
 . Q:('ECS)
"RTN","ECUMRPC1",49,0)
 . I '$G(DIEN),$S(STAT="A"&(ACT):1,STAT="I"&('ACT):1,1:0) Q
"RTN","ECUMRPC1",50,0)
 . ; execute new filters
"RTN","ECUMRPC1",51,0)
 . I DNM'="",$$UP^XLFSTR($P(NODE,U))'[DNM Q
"RTN","ECUMRPC1",52,0)
 . I DUNIT'="",$$UP^XLFSTR($P(NODE,U,5))'[DUNIT Q
"RTN","ECUMRPC1",53,0)
 . I DIEN'="",$$UP^XLFSTR(UNT)'[DIEN Q
"RTN","ECUMRPC1",54,0)
 . S CNT=CNT+1,CAT=$P(NODE,U,11),CAT=$S(CAT:"Y",1:"N"),UNO=$P(NODE,U,5)
"RTN","ECUMRPC1",55,0)
 . S SRV=$$GET1^DIQ(49,$P(NODE,U,2),.01,"I")
"RTN","ECUMRPC1",56,0)
 . S MED=$$GET1^DIQ(723,$P(NODE,U,3),.01,"I")
"RTN","ECUMRPC1",57,0)
 . S CST=$$GET1^DIQ(420.1,$P(NODE,U,4),.01,"I")
"RTN","ECUMRPC1",58,0)
 . S INACT=$P(NODE,U,6),INACT=$S(INACT:"I",1:"A"),ASC=$P(NODE,U,10),CSC=$P(NODE,U,13),CHAR4=$P(NODE,U,15) ;126
"RTN","ECUMRPC1",59,0)
 . S:ASC ASC=$$GET1^DIQ(40.7,ASC,.01,"I")
"RTN","ECUMRPC1",60,0)
 . S:CSC CSC=$$GET1^DIQ(40.7,CSC,.01) ;126
"RTN","ECUMRPC1",61,0)
 . S:CHAR4 CHAR4=$$GET1^DIQ(728.441,CHAR4,.01) ;126
"RTN","ECUMRPC1",62,0)
 . S DFD=$S($P(NODE,U,12)="N":"N",1:"X"),PCE=$P(NODE,U,14)
"RTN","ECUMRPC1",63,0)
 . S PCE=$S(PCE="A":PCE,PCE="O":PCE,1:"N")
"RTN","ECUMRPC1",64,0)
 . S STR=UNT_U_$P(NODE,U)_U_UNT_U_INACT_U_PCE_U_UNO_U_SRV_U_MED_U_CST
"RTN","ECUMRPC1",65,0)
 . S STR=STR_U_ASC_U_CAT_U_DFD_U_CSC_U_CHAR4,^TMP($J,"ECDSSUNT",CNT)=STR ;126
"RTN","ECUMRPC1",66,0)
 S RESULTS=$NA(^TMP($J,"ECDSSUNT"))
"RTN","ECUMRPC1",67,0)
 Q
"RTN","ECUMRPC1",68,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",69,0)
 ;
"RTN","ECUMRPC1",70,0)
 ;This broker entry point returns a list of categories from file 726
"RTN","ECUMRPC1",71,0)
 ;        RPC: EC GETCAT
"RTN","ECUMRPC1",72,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC1",73,0)
 ;                STAT - Active or inactive category (optional)
"RTN","ECUMRPC1",74,0)
 ;                A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC1",75,0)
 ;
"RTN","ECUMRPC1",76,0)
 ;OUTPUTS        RESULTS - Array of category. Data pieces as follows:-
"RTN","ECUMRPC1",77,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",78,0)
 ;                 1     IEN of Category
"RTN","ECUMRPC1",79,0)
 ;                 2     Name of Category
"RTN","ECUMRPC1",80,0)
 ;                 3     Creation Date
"RTN","ECUMRPC1",81,0)
 ;                 4     Inactive Date
"RTN","ECUMRPC1",82,0)
 ;
"RTN","ECUMRPC1",83,0)
 N STAT,CNT,CAT,NODE,ECDT,INDT,CRDT
"RTN","ECUMRPC1",84,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",85,0)
 K ^TMP($J,"ECCAT")
"RTN","ECUMRPC1",86,0)
 S STAT=$P($G(ECARY),U),(CNT,CAT)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",87,0)
 F  S CAT=$O(^EC(726,CAT)) Q:'CAT  S NODE=$G(^EC(726,CAT,0)) I NODE'="" D
"RTN","ECUMRPC1",88,0)
 . S ECDT=$P(NODE,U,3)
"RTN","ECUMRPC1",89,0)
 . I STAT="A",ECDT'="",ECDT'>DT Q
"RTN","ECUMRPC1",90,0)
 . I STAT="I",ECDT="" Q
"RTN","ECUMRPC1",91,0)
 . S CRDT=$$FMTE^XLFDT($P(NODE,U,2),"2F")
"RTN","ECUMRPC1",92,0)
 . S INDT=$$FMTE^XLFDT($P(NODE,U,3),"2F")
"RTN","ECUMRPC1",93,0)
 . ;S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_CRDT_U_INDT
"RTN","ECUMRPC1",94,0)
 . S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_$P(CRDT,"@",1)_U_$P(INDT,"@",1)
"RTN","ECUMRPC1",95,0)
 S RESULTS=$NA(^TMP($J,"ECCAT"))
"RTN","ECUMRPC1",96,0)
 Q
"RTN","ECUMRPC1",97,0)
 ;
"RTN","ECUMRPC1",98,0)
CATCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",99,0)
 ;
"RTN","ECUMRPC1",100,0)
 ;Broker call checks whether category is used in an Event Code Screen.
"RTN","ECUMRPC1",101,0)
 ;        RPC: EC DSSCATCHECK
"RTN","ECUMRPC1",102,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",103,0)
 ;          ECDA  - DSS Unit ien (file #724)
"RTN","ECUMRPC1",104,0)
 ;
"RTN","ECUMRPC1",105,0)
 ;OUTPUTS  RESULTS - Category used in Event Code Screen, 1-Yes or 0-No
"RTN","ECUMRPC1",106,0)
 ;
"RTN","ECUMRPC1",107,0)
 N ECDA,ECFLG,ECX
"RTN","ECUMRPC1",108,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",109,0)
 S ECDA=$P(ECARY,U) I ECDA="" Q
"RTN","ECUMRPC1",110,0)
 S (ECFLG,ECX)=0
"RTN","ECUMRPC1",111,0)
 F  S ECX=$O(^ECJ("AP",ECX)) Q:'ECX!(ECFLG)  D
"RTN","ECUMRPC1",112,0)
 . I $D(^ECJ("AP",ECX,ECDA)) S ECFLG=1
"RTN","ECUMRPC1",113,0)
 S RESULTS=ECFLG
"RTN","ECUMRPC1",114,0)
 Q
"RTN","ECUMRPC1",115,0)
PXCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",116,0)
 ;
"RTN","ECUMRPC1",117,0)
 ;Checks whether procedure description or national number exist
"RTN","ECUMRPC1",118,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",119,0)
 ;          ECP - Procedure description
"RTN","ECUMRPC1",120,0)
 ;          ECN - EC National Number
"RTN","ECUMRPC1",121,0)
 ;
"RTN","ECUMRPC1",122,0)
 ;OUTPUTS  RESULTS - Px used^National # used, 1-Yes or 0-No ex. 1^0
"RTN","ECUMRPC1",123,0)
 ;
"RTN","ECUMRPC1",124,0)
 N ECX,ECP,ECN
"RTN","ECUMRPC1",125,0)
 Q:$G(ECARY)
"RTN","ECUMRPC1",126,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",127,0)
 S ECP=$P(ECARY,U),ECN=$P(ECARY,U,2),RESULTS="0^0"
"RTN","ECUMRPC1",128,0)
 I ECP'="",$D(^EC(725,"B",ECP)) S $P(RESULTS,U)=1
"RTN","ECUMRPC1",129,0)
 I ECN'="" F ECX="E","D","DL" D  I $P(RESULTS,U,2) Q
"RTN","ECUMRPC1",130,0)
 . I $D(^EC(725,ECX,ECN)) S $P(RESULTS,U,2)=1
"RTN","ECUMRPC1",131,0)
 Q
"RTN","ECUMRPC1",132,0)
SRCLST(RESULTS,ECARY) ;
"RTN","ECUMRPC1",133,0)
 ;
"RTN","ECUMRPC1",134,0)
 ;This broker entry returns an array of codes from a file based on a 
"RTN","ECUMRPC1",135,0)
 ;search string.
"RTN","ECUMRPC1",136,0)
 ;        RPC: EC GETLIST
"RTN","ECUMRPC1",137,0)
 ;
"RTN","ECUMRPC1",138,0)
 ;INPUTS    ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC1",139,0)
 ;          ECFIL   - File to search
"RTN","ECUMRPC1",140,0)
 ;          ECSTR   - Search string
"RTN","ECUMRPC1",141,0)
 ;          ECDIR   - Search order
"RTN","ECUMRPC1",142,0)
 ;          ECNUM   - (Optional) # records to return [default=44]
"RTN","ECUMRPC1",143,0)
 ;          ECADT   - (Optional) date to determine clinic inactivity
"RTN","ECUMRPC1",144,0)
 ;          ECLOC   - (Optional) location to filter associated clinics
"RTN","ECUMRPC1",145,0)
 ;          ECTYPE  - (Optional) primary or secondary stop codes desired
"RTN","ECUMRPC1",146,0)
 ;OUTPUTS   RESULTS - Array of values based on the search criteria.
"RTN","ECUMRPC1",147,0)
 ;
"RTN","ECUMRPC1",148,0)
 N ECNT,DIC,ECSTR,ECFIL,ECORD,ECER,ECDI,ECNUM,ECDIR,ECADT,ECLOC,ECTYPE ;112,126
"RTN","ECUMRPC1",149,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",150,0)
 S ECNT=0,ECFIL=$P(ECARY,U),ECSTR=$P(ECARY,U,2),ECDIR=$P(ECARY,U,3)
"RTN","ECUMRPC1",151,0)
 S ECORD=$S(ECDIR=-1:"B",1:"I")
"RTN","ECUMRPC1",152,0)
 K ^TMP($J,"ECFIND"),^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",153,0)
 I ECFIL="" Q
"RTN","ECUMRPC1",154,0)
 S ECNUM=$S(+$P(ECARY,U,4)>0:$P(ECARY,U,4),1:44)
"RTN","ECUMRPC1",155,0)
 S ECADT=$S(+$P(ECARY,U,5):$P(ECARY,U,5),1:DT) ;112
"RTN","ECUMRPC1",156,0)
 S ECLOC=$P(ECARY,U,6) ;126 IEN of location if filtering.  Null if no filtering
"RTN","ECUMRPC1",157,0)
 S ECTYPE=$P(ECARY,U,7) ;126 Null if primary, not null for secondary
"RTN","ECUMRPC1",158,0)
 I ECFIL=420.1 D CSTCTR            ;Cost Center search
"RTN","ECUMRPC1",159,0)
 I ECFIL=49 D SERVC                ;Service search
"RTN","ECUMRPC1",160,0)
 I ECFIL=723 D MEDSPC              ;Medical specialty
"RTN","ECUMRPC1",161,0)
 I ECFIL=40.7 D STPCDE G EXIT      ;Associated stop code
"RTN","ECUMRPC1",162,0)
 I ECFIL=724 D DUNT G EXIT         ;DSS Unit
"RTN","ECUMRPC1",163,0)
 I ECFIL=726 D ECAT                ;Category
"RTN","ECUMRPC1",164,0)
 I ECFIL=4 D LOC                   ;Location
"RTN","ECUMRPC1",165,0)
 I ECFIL=44 D ASCLN G EXIT         ;Associated clinic
"RTN","ECUMRPC1",166,0)
 I ECFIL=757.01 D LEX^ECUMRPC2 G EXIT  ;Lex ICD code
"RTN","ECUMRPC1",167,0)
 I ECFIL=200 D PROV^ECUMRPC2(ECNUM)      ;Providers
"RTN","ECUMRPC1",168,0)
 I ECFIL=728.441 D CHAR4                 ;126 National Clinic code (CHAR4)
"RTN","ECUMRPC1",169,0)
 I $D(ECER) S ^TMP($J,"ECFIND",1)="0^Error occurred during search" G EXIT
"RTN","ECUMRPC1",170,0)
 D SORT
"RTN","ECUMRPC1",171,0)
EXIT K ^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",172,0)
 S RESULTS=$NA(^TMP($J,"ECFIND"))
"RTN","ECUMRPC1",173,0)
 Q
"RTN","ECUMRPC1",174,0)
ASCLN ;Search for active associated clinics (file #44)
"RTN","ECUMRPC1",175,0)
 N CLN,CNT,NOD,ECDT,INACT,REACT,ERR,ECNOD ;126
"RTN","ECUMRPC1",176,0)
 S CNT=0,ECDT=ECADT ;112
"RTN","ECUMRPC1",177,0)
 I (ECDIR'=1)&(ECDIR'=-1) S ECDIR=1
"RTN","ECUMRPC1",178,0)
 ;the next 2 lines of code compensate for the M collating sequence & how the
"RTN","ECUMRPC1",179,0)
 ;clinic code is passed in from a CPRS RPC, in a unique situation. If the
"RTN","ECUMRPC1",180,0)
 ;code is numeric, ending in 0 and there is a similar code ending with a
"RTN","ECUMRPC1",181,0)
 ;letter, the correct clinic is not returned. EX: 2 clinics, 3010 and "3010A"
"RTN","ECUMRPC1",182,0)
 ;exist, the code is written to return 3010, yet 3010A is incorrectly returned. 
"RTN","ECUMRPC1",183,0)
 ;This code puts the 0 back on and subtracts 1 to the clinic code
"RTN","ECUMRPC1",184,0)
 I $E(ECSTR,$L(ECSTR)-1)="/",$E(ECSTR,1,($L(ECSTR)-2))?.N D
"RTN","ECUMRPC1",185,0)
 .S ECSTR=$E(ECSTR,1,($L(ECSTR)-2))_0,ECSTR=ECSTR-1
"RTN","ECUMRPC1",186,0)
 F  Q:CNT=ECNUM  S ECSTR=$O(^SC("B",ECSTR),ECDIR) Q:ECSTR=""  S CLN="" D
"RTN","ECUMRPC1",187,0)
 .F  S CLN=$O(^SC("B",ECSTR,CLN),ECDIR) Q:CLN=""  S NOD=$G(^SC(CLN,0)) D
"RTN","ECUMRPC1",188,0)
 ..Q:NOD=""  Q:$P(NOD,U,3)'="C"  ;Q:+$G(^SC(CLN,"OOS"))
"RTN","ECUMRPC1",189,0)
 ..I $G(ECLOC) I ECLOC'=$$GET1^DIQ(44,CLN,"3.5:.07","I") Q  ;126,130 Clinic must be assoicated with the selected location, if one was selected
"RTN","ECUMRPC1",190,0)
 ..S ERR=0 I $D(^SC(CLN,"I")) D  I ERR Q
"RTN","ECUMRPC1",191,0)
 ...S INACT=$P(^SC(CLN,"I"),U),REACT=$P(^SC(CLN,"I"),U,2)
"RTN","ECUMRPC1",192,0)
 ...I INACT D  I ERR Q
"RTN","ECUMRPC1",193,0)
 ....I REACT="" S:ECDT'<INACT ERR=1 Q
"RTN","ECUMRPC1",194,0)
 ....I ECDT'<INACT,ECDT<REACT S ERR=1 Q
"RTN","ECUMRPC1",195,0)
 ...;I REACT,ECDT<REACT S ERR=1  removed in EC*110 - BGP
"RTN","ECUMRPC1",196,0)
 ..S ECNOD=$G(^ECX(728.44,CLN,0)) ;126 Get clinic and stop code zero node for selected clinic
"RTN","ECUMRPC1",197,0)
 ..S CNT=CNT+1,^TMP($J,"ECFIND",CNT)=CLN_U_$P(NOD,U)_U_$P(ECNOD,U,2)_U_$P(ECNOD,U,3)_U_$P($G(^ECX(728.441,+$P(ECNOD,U,8),0)),U) ;126 Add stop code, credit stop, and char4 code
"RTN","ECUMRPC1",198,0)
 Q
"RTN","ECUMRPC1",199,0)
CSTCTR ;Search for cost centers (File #420.1)
"RTN","ECUMRPC1",200,0)
 N ECNULL,INDX,STR,NSTR,I
"RTN","ECUMRPC1",201,0)
 S $P(ECNULL," ",7)=" ",INDX="B"
"RTN","ECUMRPC1",202,0)
 I $E(ECSTR)?.N,$L(ECSTR)<7 S ECSTR=ECSTR_$E(ECNULL,1,7-$L(ECSTR))
"RTN","ECUMRPC1",203,0)
 I $L($P(ECSTR," "))=6,$P(ECSTR," ",2)?.A D   ;truncate for x-ref
"RTN","ECUMRPC1",204,0)
 . S ECSTR=$P(ECSTR," ")_" "_$E($P(ECSTR," ",2,999),1,22)
"RTN","ECUMRPC1",205,0)
 I $E(ECSTR)?.A S INDX="C",(STR,NSTR)="" D  S ECSTR=NSTR
"RTN","ECUMRPC1",206,0)
 .F I=1:1 S STR=$P(ECSTR," ",I) Q:STR=""  D
"RTN","ECUMRPC1",207,0)
 ..S STR=$E(STR)_$TR($E(STR,2,9999),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","ECUMRPC1",208,0)
 ..S NSTR=NSTR_STR
"RTN","ECUMRPC1",209,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"",INDX,"I '$P(^(0),U,2)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",210,0)
 Q
"RTN","ECUMRPC1",211,0)
SERVC ;Search for services (File #49)
"RTN","ECUMRPC1",212,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",213,0)
 Q
"RTN","ECUMRPC1",214,0)
MEDSPC ;Search for medical specialty (File #723)
"RTN","ECUMRPC1",215,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",216,0)
 Q
"RTN","ECUMRPC1",217,0)
STPCDE ;Search for associated stop code (File #40.7)
"RTN","ECUMRPC1",218,0)
 N ECNT,INDX,ECNUL,STR,IEN
"RTN","ECUMRPC1",219,0)
 S $P(ECNUL,"  ",30)=" ",INDX="B",ECNT=0,ECSTR=$P(ECSTR,"~")
"RTN","ECUMRPC1",220,0)
 I +ECSTR,+ECSTR?.N S INDX="C",IEN=0 D  Q
"RTN","ECUMRPC1",221,0)
 .S ECSTR=$O(^DIC(40.7,INDX,+ECSTR)) I ECSTR="" Q
"RTN","ECUMRPC1",222,0)
 .F  S IEN=$O(^DIC(40.7,INDX,ECSTR,IEN)) Q:'IEN  D  I ECNT>(ECNUM-1) Q
"RTN","ECUMRPC1",223,0)
 ..;07/27/09 llh added checks on piece 2 and 6
"RTN","ECUMRPC1",224,0)
 ..S STR=$G(^DIC(40.7,IEN,0)) I ($P(STR,U,3)'=""&($P(STR,U,3)'>DT))!($P(STR,U,6)=$S($G(ECTYPE)="":"S",1:"P"))!($P(STR,U,6)="")!($L($P(STR,U,2))'=3) Q  ;126 allow for searches for primary or secondary
"RTN","ECUMRPC1",225,0)
 ..S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)_U_IEN
"RTN","ECUMRPC1",226,0)
 ..S ECNT=ECNT+1,^TMP($J,"ECFIND",ECNT)=STR
"RTN","ECUMRPC1",227,0)
 ;added validation checks here as well
"RTN","ECUMRPC1",228,0)
 ;D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)&($P(^(0),U,6)'=""S"")","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",229,0)
 D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)&($L($P(^(0),U,2))=3)&(($P(^(0),U,6)=$S($G(ECTYPE)="""":""P"",1:""S""))!($P(^(0),U,6)=""E""))","","^TMP(""ECSRCH"",$J)","ECER") ;126
"RTN","ECUMRPC1",230,0)
 S ECNT=0
"RTN","ECUMRPC1",231,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",232,0)
 .S STR=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_$G(^(1))
"RTN","ECUMRPC1",233,0)
 .S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)
"RTN","ECUMRPC1",234,0)
 .S ^TMP($J,"ECFIND",ECNT)=STR_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",235,0)
 Q
"RTN","ECUMRPC1",236,0)
DUNT ;Search for DSS unit (File #724)
"RTN","ECUMRPC1",237,0)
 N ECNT,SNDPCE
"RTN","ECUMRPC1",238,0)
 D LISTDIC(ECFIL,"",".01;10;13",ECORD,ECNUM,ECSTR,"","","I '$P(^(0),""^"",6),$P(^(0),U,8)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",239,0)
 S ECNT=0
"RTN","ECUMRPC1",240,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",241,0)
 .S SNDPCE=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,13))
"RTN","ECUMRPC1",242,0)
 .S SNDPCE=$S(SNDPCE="O":1,SNDPCE="A":1,1:0)
"RTN","ECUMRPC1",243,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)_U_$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,10))_U_SNDPCE
"RTN","ECUMRPC1",244,0)
 Q
"RTN","ECUMRPC1",245,0)
ECAT ;Search for Category (File #726)
"RTN","ECUMRPC1",246,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $P(^(0),""^"",3)=""""!($P(^(0),U,3)>DT)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",247,0)
 Q
"RTN","ECUMRPC1",248,0)
LOC ;Search for Location (File #4)
"RTN","ECUMRPC1",249,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $G(^(""EC""))","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",250,0)
 Q
"RTN","ECUMRPC1",251,0)
LISTDIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER) ;
"RTN","ECUMRPC1",252,0)
 ;Produces a list of records in a file base on search string
"RTN","ECUMRPC1",253,0)
 N DIC
"RTN","ECUMRPC1",254,0)
 D LIST^DIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER)
"RTN","ECUMRPC1",255,0)
 K ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECID
"RTN","ECUMRPC1",256,0)
 Q
"RTN","ECUMRPC1",257,0)
SORT ;Extracts data to be returned to broker
"RTN","ECUMRPC1",258,0)
 N ECNT,STR
"RTN","ECUMRPC1",259,0)
 S ECNT=0
"RTN","ECUMRPC1",260,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",261,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",262,0)
 Q
"RTN","ECUMRPC1",263,0)
 ;
"RTN","ECUMRPC1",264,0)
CHAR4 ;126, returns list of CHAR4 codes from the NATIONAL CLINIC file (#728.441)
"RTN","ECUMRPC1",265,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $P($G(^(2)),""^"")=""""!($P($G(^(2)),""^"")>DT)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",266,0)
 Q
"RTN","ECUTL1")
0^1^B67581197^B66986146
"RTN","ECUTL1",1,0)
ECUTL1 ;ALB/ESD - Event Capture Classification Utilities ;7/30/15  15:44
"RTN","ECUTL1",2,0)
 ;;2.0;EVENT CAPTURE;**10,13,17,42,54,76,107,122,126,130**;8 May 96;Build 1
"RTN","ECUTL1",3,0)
 ;
"RTN","ECUTL1",4,0)
ASKCLASS(DFN,ECANS,ERR,ECTOPCE,ECPATST,ECHDA) ;  Ask classification questions
"RTN","ECUTL1",5,0)
 ; (Agent Orange, Ionizing Radiation, Environmental Contaminants/South 
"RTN","ECUTL1",6,0)
 ; West Asia Conditions, Service Connected, Military Sexual Trauma, 
"RTN","ECUTL1",7,0)
 ; Head/Neck Cancer, Combat Veteran, Project 112/SHAD)
"RTN","ECUTL1",8,0)
 ;
"RTN","ECUTL1",9,0)
 ;   Input:
"RTN","ECUTL1",10,0)
 ;      DFN     - IEN of Patient file (#2)
"RTN","ECUTL1",11,0)
 ;      ECTOPCE - Variable which indicates if DSS Unit is sending to PCE
"RTN","ECUTL1",12,0)
 ;      ECPATST - Inpatient/outpatient status
"RTN","ECUTL1",13,0)
 ;      ECHDA   - IEN in file #721 if editing existing record [optional]
"RTN","ECUTL1",14,0)
 ;
"RTN","ECUTL1",15,0)
 ;  Output:
"RTN","ECUTL1",16,0)
 ;      ECANS - array subscripted by classification abbreviation
"RTN","ECUTL1",17,0)
 ;              (i.e. ECANS("AO")) and passed by reference containing:
"RTN","ECUTL1",18,0)
 ;                 field # of class from EC Patient file (#721)^answer
"RTN","ECUTL1",19,0)
 ;      ERR   - Error indicator if user uparrows or times out (set to 1)
"RTN","ECUTL1",20,0)
 ;
"RTN","ECUTL1",21,0)
 ;      Function value - 1 if successful, 0 otherwise
"RTN","ECUTL1",22,0)
 ;
"RTN","ECUTL1",23,0)
 N ANS,DIR,ECCL,ECCLFLD,SUCCESS,ECVST,ECVSTDT,ECPXB,PXBDATA,ECNT,ECOLD,ECPIECE,ECXX
"RTN","ECUTL1",24,0)
 S (ECANS,ECCL)=""
"RTN","ECUTL1",25,0)
 S ERR=0
"RTN","ECUTL1",26,0)
 S SUCCESS=1
"RTN","ECUTL1",27,0)
 S DFN=+$G(DFN)
"RTN","ECUTL1",28,0)
 S ECTOPCE=$G(ECTOPCE)
"RTN","ECUTL1",29,0)
 I ECTOPCE["~" S ECTOPCE=$P(ECTOPCE,"~",2)
"RTN","ECUTL1",30,0)
 S ECPATST=$G(ECPATST)
"RTN","ECUTL1",31,0)
 ;- Drop out if invalid condition found OR if DSS Unit not sending to
"RTN","ECUTL1",32,0)
 ;  PCE or patient is an inpatient
"RTN","ECUTL1",33,0)
 I ('DFN)!(ECTOPCE="")!(ECPATST="")!(ECTOPCE="N")!(ECPATST="I") S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",34,0)
 D NOW^%DTC S ECVSTDT=$S(+$G(ECDT):ECDT,1:%),ECVST="" ;modified to use event date;JAM/11/24/03
"RTN","ECUTL1",35,0)
 ;- If editing an existing record, get visit data & display classification
"RTN","ECUTL1",36,0)
 I $G(ECHDA) D
"RTN","ECUTL1",37,0)
 .S ECVSTDT=$P($G(^ECH(ECHDA,0)),U,3)
"RTN","ECUTL1",38,0)
 .S ECVST=$P($G(^ECH(ECHDA,0)),U,21)
"RTN","ECUTL1",39,0)
 .F ECCL="AO","IR","EC","SC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",40,0)
 ..S ECPIECE=$S(ECCL="AO":3,ECCL="IR":4,ECCL="EC":5,ECCL="SC":6,ECCL="MST":9,ECCL="HNC":10,ECCL="CV":11,1:12)
"RTN","ECUTL1",41,0)
 ..S ECCLFLD=$P("^^Agent Orange^Ionizing Radiation^South West Asia Conditions^Service Connected^^^Military Sexual Trauma^Head/Neck Cancer^Combat Veteran^Project 112/SHAD","^",ECPIECE)
"RTN","ECUTL1",42,0)
 ..S ECXX=$P($G(^ECH(ECHDA,"P")),U,ECPIECE),ECXX=$S(ECXX="Y":"YES",ECXX="N":"NO",1:"")
"RTN","ECUTL1",43,0)
 ..I ECXX]"" S ECOLD(ECCL)=ECCLFLD_": "_ECXX
"RTN","ECUTL1",44,0)
 .I $D(ECOLD) D
"RTN","ECUTL1",45,0)
 ..W !,"*** Current encounter classification ***",!
"RTN","ECUTL1",46,0)
 ..F ECCL="SC","CV","AO","IR","EC","MST","HNC","SHAD" D
"RTN","ECUTL1",47,0)
 ...I $D(ECOLD(ECCL)) W !?4,ECOLD(ECCL)
"RTN","ECUTL1",48,0)
 ;- Ask user classification question
"RTN","ECUTL1",49,0)
 D CLASS^PXBAPI21("",DFN,ECVSTDT,1,ECVST) W !
"RTN","ECUTL1",50,0)
 ;- Check error; exit if error condition
"RTN","ECUTL1",51,0)
 I $D(PXBDATA("ERR")) D  I ERR S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",52,0)
 .F ECPXB=1:1:4 I $D(PXBDATA("ERR",ECPXB)) D
"RTN","ECUTL1",53,0)
 ..I (PXBDATA("ERR",ECPXB)=1)!(PXBDATA("ERR",ECPXB)=4) S ERR=1
"RTN","ECUTL1",54,0)
 ;- Otherwise, continue to setup ecans array, i.e., new classification data
"RTN","ECUTL1",55,0)
 F ECCL="AO","IR","SC","EC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",56,0)
 .S ECCLFLD=$S(ECCL="AO":21,ECCL="IR":22,ECCL="EC":23,ECCL="SC":24,ECCL="MST":35,ECCL="HNC":39,ECCL="CV":40,1:41)
"RTN","ECUTL1",57,0)
 .S ECPXB=$S(ECCL="AO":1,ECCL="IR":2,ECCL="EC":4,ECCL="SC":3,ECCL="MST":5,ECCL="CV":7,ECCL="SHAD":8,1:6)
"RTN","ECUTL1",58,0)
 .S ANS=$P($G(PXBDATA(ECPXB)),U,2),ANS=$S(ANS=1:"Y",ANS=0:"N",1:"")
"RTN","ECUTL1",59,0)
 .S ECANS(ECCL)=ECCLFLD_"^"_ANS
"RTN","ECUTL1",60,0)
 ;- Delete old data if it exists
"RTN","ECUTL1",61,0)
 I $G(ECHDA) D DELCLASS(ECHDA)
"RTN","ECUTL1",62,0)
 Q SUCCESS
"RTN","ECUTL1",63,0)
 ;
"RTN","ECUTL1",64,0)
 ;
"RTN","ECUTL1",65,0)
EDCLASS(ECIEN,ECANS) ;  Edit classifications fields in EC Patient
"RTN","ECUTL1",66,0)
 ;                  file (#721)
"RTN","ECUTL1",67,0)
 ;
"RTN","ECUTL1",68,0)
 ;   Input:
"RTN","ECUTL1",69,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",70,0)
 ;      ECANS - Array of answers to classification questions asked
"RTN","ECUTL1",71,0)
 ;
"RTN","ECUTL1",72,0)
 ;  Output:
"RTN","ECUTL1",73,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 edited in file #721
"RTN","ECUTL1",74,0)
 ;
"RTN","ECUTL1",75,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",76,0)
 S (DR,ECCL)=""
"RTN","ECUTL1",77,0)
 ;
"RTN","ECUTL1",78,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",79,0)
 D
"RTN","ECUTL1",80,0)
 . I '$G(ECIEN)!('$D(ECANS)) Q
"RTN","ECUTL1",81,0)
 . ;
"RTN","ECUTL1",82,0)
 . ;- Lock main node
"RTN","ECUTL1",83,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",84,0)
 . S DA=ECIEN
"RTN","ECUTL1",85,0)
 . S DIE="^ECH("
"RTN","ECUTL1",86,0)
 . ;
"RTN","ECUTL1",87,0)
 . ;- Edit classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",88,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  S DR=DR_+$P($G(ECANS(ECCL)),"^")_"////"_$P($G(ECANS(ECCL)),"^",2)_";"
"RTN","ECUTL1",89,0)
 . ;
"RTN","ECUTL1",90,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",91,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",92,0)
 . D ^DIE
"RTN","ECUTL1",93,0)
 ;
"RTN","ECUTL1",94,0)
 ;- Unlock main node
"RTN","ECUTL1",95,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",96,0)
 ;
"RTN","ECUTL1",97,0)
 Q
"RTN","ECUTL1",98,0)
 ;
"RTN","ECUTL1",99,0)
 ;
"RTN","ECUTL1",100,0)
SETCLASS(ECANS) ;  Set answers to classification questions in EC variables
"RTN","ECUTL1",101,0)
 ;          (used in EC data entry options when filing EC Patient record)
"RTN","ECUTL1",102,0)
 ;
"RTN","ECUTL1",103,0)
 ;   Input:
"RTN","ECUTL1",104,0)
 ;      ECANS - array of answers to class questions asked containing:
"RTN","ECUTL1",105,0)
 ;                 field number of class ques from file #721^answer
"RTN","ECUTL1",106,0)
 ;
"RTN","ECUTL1",107,0)
 ;  Output:
"RTN","ECUTL1",108,0)
 ;      EC classification var - ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,
"RTN","ECUTL1",109,0)
 ;                              ECSHAD
"RTN","ECUTL1",110,0)
 ;
"RTN","ECUTL1",111,0)
 N ECCL,ECCLFLD
"RTN","ECUTL1",112,0)
 S (ECCL,ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,ECSHAD)=""
"RTN","ECUTL1",113,0)
 ;
"RTN","ECUTL1",114,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",115,0)
 D
"RTN","ECUTL1",116,0)
 . ;
"RTN","ECUTL1",117,0)
 . ;- If array containing class flds^answers is not created, exit
"RTN","ECUTL1",118,0)
 . I '$D(ECANS) Q
"RTN","ECUTL1",119,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  D
"RTN","ECUTL1",120,0)
 .. ;
"RTN","ECUTL1",121,0)
 .. ;- Get field number of classification
"RTN","ECUTL1",122,0)
 .. S ECCLFLD=+$P($G(ECANS(ECCL)),"^")
"RTN","ECUTL1",123,0)
 .. ;
"RTN","ECUTL1",124,0)
 .. ;- Agent Orange variable
"RTN","ECUTL1",125,0)
 .. S:ECCLFLD=21 ECAO=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",126,0)
 .. ;
"RTN","ECUTL1",127,0)
 .. ;- Ionizing Radiation variable
"RTN","ECUTL1",128,0)
 .. S:ECCLFLD=22 ECIR=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",129,0)
 .. ;
"RTN","ECUTL1",130,0)
 .. ;- Environmental Contaminants/South West Asia Conditions variable
"RTN","ECUTL1",131,0)
 .. S:ECCLFLD=23 ECZEC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",132,0)
 .. ;
"RTN","ECUTL1",133,0)
 .. ;- Service Connected variable
"RTN","ECUTL1",134,0)
 .. S:ECCLFLD=24 ECSC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",135,0)
 .. ;
"RTN","ECUTL1",136,0)
 .. ;- Military Sexual Trauma variable
"RTN","ECUTL1",137,0)
 .. S:ECCLFLD=35 ECMST=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",138,0)
 .. ;
"RTN","ECUTL1",139,0)
 .. ;- Head/Neck Cancer
"RTN","ECUTL1",140,0)
 .. S:ECCLFLD=39 ECHNC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",141,0)
 .. ;
"RTN","ECUTL1",142,0)
 .. ;- Combat Veteran
"RTN","ECUTL1",143,0)
 .. S:ECCLFLD=40 ECCV=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",144,0)
 .. ;
"RTN","ECUTL1",145,0)
 .. ;- Project 112/SHAD (Shipboard Hazard and Defense)
"RTN","ECUTL1",146,0)
 .. S:ECCLFLD=41 ECSHAD=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",147,0)
 Q
"RTN","ECUTL1",148,0)
 ;
"RTN","ECUTL1",149,0)
 ;
"RTN","ECUTL1",150,0)
DELCLASS(ECIEN) ;  Delete classification fields in EC Patient file (#721)
"RTN","ECUTL1",151,0)
 ;
"RTN","ECUTL1",152,0)
 ;   Input:
"RTN","ECUTL1",153,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",154,0)
 ;
"RTN","ECUTL1",155,0)
 ;  Output:
"RTN","ECUTL1",156,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 deleted in file#721
"RTN","ECUTL1",157,0)
 ;
"RTN","ECUTL1",158,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",159,0)
 S DR=""
"RTN","ECUTL1",160,0)
 ;
"RTN","ECUTL1",161,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",162,0)
 D
"RTN","ECUTL1",163,0)
 . I '$G(ECIEN) Q
"RTN","ECUTL1",164,0)
 . ;
"RTN","ECUTL1",165,0)
 . ;- Lock main node
"RTN","ECUTL1",166,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",167,0)
 . S DA=ECIEN
"RTN","ECUTL1",168,0)
 . S DIE="^ECH("
"RTN","ECUTL1",169,0)
 . ;
"RTN","ECUTL1",170,0)
 . ;- Delete classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",171,0)
 . F ECCL=21:1:24,35,39,40,41 S DR=DR_ECCL_"////@;"
"RTN","ECUTL1",172,0)
 . ;
"RTN","ECUTL1",173,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",174,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",175,0)
 . D ^DIE
"RTN","ECUTL1",176,0)
 ;
"RTN","ECUTL1",177,0)
 ;- Unlock main node
"RTN","ECUTL1",178,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",179,0)
 ;
"RTN","ECUTL1",180,0)
 Q
"RTN","ECUTL1",181,0)
 ;
"RTN","ECUTL1",182,0)
 ;
"RTN","ECUTL1",183,0)
LOCK(ECIEN) ;  Lock EC Patient record
"RTN","ECUTL1",184,0)
 ;
"RTN","ECUTL1",185,0)
 ;   Input:
"RTN","ECUTL1",186,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",187,0)
 ;
"RTN","ECUTL1",188,0)
 ;  Output:
"RTN","ECUTL1",189,0)
 ;      Function Value - 1 if record can be locked, 0 otherwise
"RTN","ECUTL1",190,0)
 ;
"RTN","ECUTL1",191,0)
 I $G(ECIEN) L +^ECH(ECIEN):5
"RTN","ECUTL1",192,0)
 Q $T
"RTN","ECUTL1",193,0)
 ;
"RTN","ECUTL1",194,0)
 ;
"RTN","ECUTL1",195,0)
UNLOCK(ECIEN) ;  Unlock EC Patient record
"RTN","ECUTL1",196,0)
 ;
"RTN","ECUTL1",197,0)
 ;   Input:
"RTN","ECUTL1",198,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",199,0)
 ;
"RTN","ECUTL1",200,0)
 ;  Output:
"RTN","ECUTL1",201,0)
 ;      EC Patient record unlocked
"RTN","ECUTL1",202,0)
 ;
"RTN","ECUTL1",203,0)
 I $G(ECIEN) L -^ECH(ECIEN)
"RTN","ECUTL1",204,0)
 Q
"RTN","ECUTL1",205,0)
RCNTVST(RESULT,ECARY) ;126 Changed parameter name from DFN to ECARY
"RTN","ECUTL1",206,0)
 ;
"RTN","ECUTL1",207,0)
 ;This call uses the Patient and Visit file to return a list of recent
"RTN","ECUTL1",208,0)
 ;visits. It returns the most recent 20 visits using both files but does 
"RTN","ECUTL1",209,0)
 ;not return future visits from the Patient file.  It also filters out 
"RTN","ECUTL1",210,0)
 ;canceled, rescheduled or no-show appts.  For the Patient file it uses 
"RTN","ECUTL1",211,0)
 ;a start date of "" and an end date of "NOW". For the selected visit
"RTN","ECUTL1",212,0)
 ;call, it only passes in and uses the DFN.
"RTN","ECUTL1",213,0)
 ;
"RTN","ECUTL1",214,0)
 ;126 Updated code so that it filters visit by selected location.
"RTN","ECUTL1",215,0)
 ;Only visits/appts with clinics in the location will be shown.
"RTN","ECUTL1",216,0)
 ;API 1905
"RTN","ECUTL1",217,0)
 ;Calls    
"RTN","ECUTL1",218,0)
 ;  SELECTED^VSIT(DFN,SDT,EDT,HOSLOC,ENCTPE,NNCTPE,SRVCAT,NSRVCAT,LASTN) 
"RTN","ECUTL1",219,0)
 ;  See API for detailed documentation
"RTN","ECUTL1",220,0)
 ;
"RTN","ECUTL1",221,0)
 ;API 3859
"RTN","ECUTL1",222,0)
 ;Calls    GETAPPT^SDAMA201(DFN,SDFIELDS,SDAPSTAT,SDT,EDT,SDCNT)
"RTN","ECUTL1",223,0)
 ;         See API for detailed documentation
"RTN","ECUTL1",224,0)
 ;
"RTN","ECUTL1",225,0)
 ;IA 10040 - This is a supported IA and is used to filter/screen
"RTN","ECUTL1",226,0)
 ;           non clinics visits from being included in API 1905
"RTN","ECUTL1",227,0)
 ;           not needed in 3859 as it contains a filter for clinics
"RTN","ECUTL1",228,0)
 ;
"RTN","ECUTL1",229,0)
 N ARR,CNT,DATE,NUM,PARAMS,P1,P1DT,P2,PDT,VDT,VIEN,X,X1,X2,Y,SDRESULT,DFN,LOC ;122,126
"RTN","ECUTL1",230,0)
 S DFN=$P(ECARY,U),LOC=$P(ECARY,U,2) ;126
"RTN","ECUTL1",231,0)
 D NOW^%DTC S DATE=%,Y=DATE
"RTN","ECUTL1",232,0)
 S VDT=3050101
"RTN","ECUTL1",233,0)
 S X1=DT,X2=(-15) D C^%DTC S PDT=X    ;get appts within last 15 days
"RTN","ECUTL1",234,0)
 S RESULT(0)=0
"RTN","ECUTL1",235,0)
 I '$G(DFN) Q
"RTN","ECUTL1",236,0)
 K ^TMP("VSIT",$J)
"RTN","ECUTL1",237,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","ECUTL1",238,0)
 D SELECTED^VSIT(DFN,VDT,"","","","","","HE",30) ;126 Changed call to filter out hospitalization and event (historical) categories
"RTN","ECUTL1",239,0)
 D GETAPPT^SDAMA201(DFN,"1;2","R;NT",PDT,DATE,.SDRESULT)
"RTN","ECUTL1",240,0)
 S VIEN=0
"RTN","ECUTL1",241,0)
 F  S VIEN=$O(^TMP("VSIT",$J,VIEN)) Q:VIEN=""  S NUM=0 D
"RTN","ECUTL1",242,0)
 .F  S NUM=$O(^TMP("VSIT",$J,VIEN,NUM)) Q:NUM=""  D
"RTN","ECUTL1",243,0)
 ..S PARAMS=$G(^TMP("VSIT",$J,VIEN,NUM))
"RTN","ECUTL1",244,0)
 ..;make sure location is a clinic
"RTN","ECUTL1",245,0)
 ..I $$GET1^DIQ(44,$P($P(PARAMS,U,2),";"),2,"I")'="C" Q
"RTN","ECUTL1",246,0)
 ..I $G(LOC) I LOC'=$$GET1^DIQ(44,$P($P(PARAMS,U,2),";"),"3.5:.07","I") Q  ;126,130 If location sent, filter out any visits whose clinic isn't in the location
"RTN","ECUTL1",247,0)
 ..S P1DT=$P(PARAMS,U,1),P1=$$FMTE^XLFDT(P1DT,"9M"),P2=$P($P(PARAMS,U,2),";",2)
"RTN","ECUTL1",248,0)
 ..I '$G(P1DT)!($G(P2)="") Q
"RTN","ECUTL1",249,0)
 ..I $D(ARR(P1DT,P2))=1 Q
"RTN","ECUTL1",250,0)
 ..;;cntrl array, filter visits from PT file
"RTN","ECUTL1",251,0)
 ..S ARR(P1DT,P2)=P1DT_U_$$LJ^XLFSTR(P1,25)_$$LJ^XLFSTR(P2,30)_U_P1_U_P2_U
"RTN","ECUTL1",252,0)
 S VIEN=0
"RTN","ECUTL1",253,0)
 F  S VIEN=$O(^TMP($J,"SDAMA201","GETAPPT",VIEN)) Q:VIEN=""  D
"RTN","ECUTL1",254,0)
 .I $D(^TMP($J,"SDAMA201","GETAPPT","ERROR")) Q
"RTN","ECUTL1",255,0)
 .S P1DT=$G(^TMP($J,"SDAMA201","GETAPPT",VIEN,1))
"RTN","ECUTL1",256,0)
 .S P1=$$FMTE^XLFDT(P1DT,"9M")
"RTN","ECUTL1",257,0)
 .S P2=$P($G(^TMP($J,"SDAMA201","GETAPPT",VIEN,2)),U,2)
"RTN","ECUTL1",258,0)
 .I $G(LOC) I LOC'=$$GET1^DIQ(44,$P($G(^TMP($J,"SDAMA201","GETAPPT",VIEN,2)),U),"3.5:.07","I") Q  ;126,130 If location sent, filter out any appts whose clinic isn't in the location
"RTN","ECUTL1",259,0)
 .I '$G(P1DT)!($G(P2)="") Q
"RTN","ECUTL1",260,0)
 .I $D(ARR(P1DT,P2))=1 Q
"RTN","ECUTL1",261,0)
 .;;cntrl array, filter visits from PT file
"RTN","ECUTL1",262,0)
 .S ARR(P1DT,P2)=P1DT_U_$$LJ^XLFSTR(P1,25)_$$LJ^XLFSTR(P2,30)_U_P1_U_P2_U
"RTN","ECUTL1",263,0)
 S VIEN=9999999999,CNT=1
"RTN","ECUTL1",264,0)
 F  S VIEN=$O(ARR(VIEN),-1) Q:((VIEN="")!(CNT>20))  D
"RTN","ECUTL1",265,0)
 .S NUM=0 F  S NUM=$O(ARR(VIEN,NUM)) Q:NUM=""  D
"RTN","ECUTL1",266,0)
 ..S RESULT(CNT)=ARR(VIEN,NUM),CNT=CNT+1
"RTN","ECUTL1",267,0)
 I $D(ARR) S RESULT(0)=CNT
"RTN","ECUTL1",268,0)
 K ^TMP("VSIT",$J)
"RTN","ECUTL1",269,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","ECUTL1",270,0)
 Q
"VER")
8.0^22.0
"BLD",9640,6)
^122
**END**
**END**

