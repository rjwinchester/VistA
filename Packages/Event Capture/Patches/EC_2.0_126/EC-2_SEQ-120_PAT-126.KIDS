Released EC*2*126 SEQ #120
Extracted from mail message
**KIDS**:EC*2.0*126^

**INSTALL NAME**
EC*2.0*126
"BLD",9470,0)
EC*2.0*126^EVENT CAPTURE^0^3150409^y
"BLD",9470,4,0)
^9.64PA^724^2
"BLD",9470,4,721,0)
721
"BLD",9470,4,721,2,0)
^9.641^721^1
"BLD",9470,4,721,2,721,0)
EVENT CAPTURE PATIENT  (File-top level)
"BLD",9470,4,721,2,721,1,0)
^9.6411^9^1
"BLD",9470,4,721,2,721,1,9,0)
VOLUME
"BLD",9470,4,721,222)
y^y^p^^^^n^^n
"BLD",9470,4,721,224)

"BLD",9470,4,724,0)
724
"BLD",9470,4,724,2,0)
^9.641^724^1
"BLD",9470,4,724,2,724,0)
DSS UNIT  (File-top level)
"BLD",9470,4,724,2,724,1,0)
^9.6411^15^2
"BLD",9470,4,724,2,724,1,14,0)
CREDIT STOP
"BLD",9470,4,724,2,724,1,15,0)
CHAR4
"BLD",9470,4,724,222)
y^y^p^^^^n^^n
"BLD",9470,4,724,224)

"BLD",9470,4,"APDD",721,721)

"BLD",9470,4,"APDD",721,721,9)

"BLD",9470,4,"APDD",724,724)

"BLD",9470,4,"APDD",724,724,14)

"BLD",9470,4,"APDD",724,724,15)

"BLD",9470,4,"B",721,721)

"BLD",9470,4,"B",724,724)

"BLD",9470,6.3)
8
"BLD",9470,"ABPKG")
n
"BLD",9470,"INIT")
POST^EC2P126
"BLD",9470,"KRN",0)
^9.67PA^779.2^20
"BLD",9470,"KRN",.4,0)
.4
"BLD",9470,"KRN",.401,0)
.401
"BLD",9470,"KRN",.402,0)
.402
"BLD",9470,"KRN",.403,0)
.403
"BLD",9470,"KRN",.5,0)
.5
"BLD",9470,"KRN",.84,0)
.84
"BLD",9470,"KRN",3.6,0)
3.6
"BLD",9470,"KRN",3.8,0)
3.8
"BLD",9470,"KRN",9.2,0)
9.2
"BLD",9470,"KRN",9.2,"NM",0)
^9.68A^5^5
"BLD",9470,"KRN",9.2,"NM",1,0)
ECPAT0^^0
"BLD",9470,"KRN",9.2,"NM",2,0)
ECPAT^^0
"BLD",9470,"KRN",9.2,"NM",3,0)
ECBATCH PROC^^0
"BLD",9470,"KRN",9.2,"NM",4,0)
ECMULT PROC^^0
"BLD",9470,"KRN",9.2,"NM",5,0)
ECSECT^^0
"BLD",9470,"KRN",9.2,"NM","B","ECBATCH PROC",3)

"BLD",9470,"KRN",9.2,"NM","B","ECMULT PROC",4)

"BLD",9470,"KRN",9.2,"NM","B","ECPAT",2)

"BLD",9470,"KRN",9.2,"NM","B","ECPAT0",1)

"BLD",9470,"KRN",9.2,"NM","B","ECSECT",5)

"BLD",9470,"KRN",9.8,0)
9.8
"BLD",9470,"KRN",9.8,"NM",0)
^9.68A^16^16
"BLD",9470,"KRN",9.8,"NM",1,0)
ECEFPAT^^0^B76799411
"BLD",9470,"KRN",9.8,"NM",2,0)
ECRECER^^0^B34819903
"BLD",9470,"KRN",9.8,"NM",3,0)
EC2P126^^0^B4636432
"BLD",9470,"KRN",9.8,"NM",4,0)
ECRDSSA^^0^B123826239
"BLD",9470,"KRN",9.8,"NM",5,0)
ECOSSUM^^0^B100421948
"BLD",9470,"KRN",9.8,"NM",6,0)
ECPCER^^0^B35285752
"BLD",9470,"KRN",9.8,"NM",7,0)
ECRPRSN2^^0^B26258090
"BLD",9470,"KRN",9.8,"NM",8,0)
ECSUM^^0^B16478678
"BLD",9470,"KRN",9.8,"NM",9,0)
ECSUM1^^0^B25603267
"BLD",9470,"KRN",9.8,"NM",10,0)
ECRRPT^^0^B61480819
"BLD",9470,"KRN",9.8,"NM",11,0)
ECPRSUM1^^0^B70115901
"BLD",9470,"KRN",9.8,"NM",12,0)
ECUMRPC1^^0^B100564674
"BLD",9470,"KRN",9.8,"NM",13,0)
ECUTL1^^0^B66986146
"BLD",9470,"KRN",9.8,"NM",14,0)
ECMFDSSU^^0^B36202160
"BLD",9470,"KRN",9.8,"NM",15,0)
ECUERPC^^0^B57953932
"BLD",9470,"KRN",9.8,"NM",16,0)
ECHECK1^^0^B10754345
"BLD",9470,"KRN",9.8,"NM","B","EC2P126",3)

"BLD",9470,"KRN",9.8,"NM","B","ECEFPAT",1)

"BLD",9470,"KRN",9.8,"NM","B","ECHECK1",16)

"BLD",9470,"KRN",9.8,"NM","B","ECMFDSSU",14)

"BLD",9470,"KRN",9.8,"NM","B","ECOSSUM",5)

"BLD",9470,"KRN",9.8,"NM","B","ECPCER",6)

"BLD",9470,"KRN",9.8,"NM","B","ECPRSUM1",11)

"BLD",9470,"KRN",9.8,"NM","B","ECRDSSA",4)

"BLD",9470,"KRN",9.8,"NM","B","ECRECER",2)

"BLD",9470,"KRN",9.8,"NM","B","ECRPRSN2",7)

"BLD",9470,"KRN",9.8,"NM","B","ECRRPT",10)

"BLD",9470,"KRN",9.8,"NM","B","ECSUM",8)

"BLD",9470,"KRN",9.8,"NM","B","ECSUM1",9)

"BLD",9470,"KRN",9.8,"NM","B","ECUERPC",15)

"BLD",9470,"KRN",9.8,"NM","B","ECUMRPC1",12)

"BLD",9470,"KRN",9.8,"NM","B","ECUTL1",13)

"BLD",9470,"KRN",19,0)
19
"BLD",9470,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9470,"KRN",19,"NM",1,0)
EC GUI CONTEXT^^0
"BLD",9470,"KRN",19,"NM","B","EC GUI CONTEXT",1)

"BLD",9470,"KRN",19.1,0)
19.1
"BLD",9470,"KRN",101,0)
101
"BLD",9470,"KRN",409.61,0)
409.61
"BLD",9470,"KRN",771,0)
771
"BLD",9470,"KRN",779.2,0)
779.2
"BLD",9470,"KRN",870,0)
870
"BLD",9470,"KRN",8989.51,0)
8989.51
"BLD",9470,"KRN",8989.52,0)
8989.52
"BLD",9470,"KRN",8994,0)
8994
"BLD",9470,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",9470,"KRN",8994,"NM",1,0)
EC GETLIST^^0
"BLD",9470,"KRN",8994,"NM",2,0)
EC RECENT VISITS^^0
"BLD",9470,"KRN",8994,"NM","B","EC GETLIST",1)

"BLD",9470,"KRN",8994,"NM","B","EC RECENT VISITS",2)

"BLD",9470,"KRN","B",.4,.4)

"BLD",9470,"KRN","B",.401,.401)

"BLD",9470,"KRN","B",.402,.402)

"BLD",9470,"KRN","B",.403,.403)

"BLD",9470,"KRN","B",.5,.5)

"BLD",9470,"KRN","B",.84,.84)

"BLD",9470,"KRN","B",3.6,3.6)

"BLD",9470,"KRN","B",3.8,3.8)

"BLD",9470,"KRN","B",9.2,9.2)

"BLD",9470,"KRN","B",9.8,9.8)

"BLD",9470,"KRN","B",19,19)

"BLD",9470,"KRN","B",19.1,19.1)

"BLD",9470,"KRN","B",101,101)

"BLD",9470,"KRN","B",409.61,409.61)

"BLD",9470,"KRN","B",771,771)

"BLD",9470,"KRN","B",779.2,779.2)

"BLD",9470,"KRN","B",870,870)

"BLD",9470,"KRN","B",8989.51,8989.51)

"BLD",9470,"KRN","B",8989.52,8989.52)

"BLD",9470,"KRN","B",8994,8994)

"BLD",9470,"QUES",0)
^9.62^^
"BLD",9470,"REQB",0)
^9.611^2^2
"BLD",9470,"REQB",1,0)
EC*2.0*122^2
"BLD",9470,"REQB",2,0)
EC*2.0*114^2
"BLD",9470,"REQB","B","EC*2.0*114",2)

"BLD",9470,"REQB","B","EC*2.0*122",1)

"FIA",721)
EVENT CAPTURE PATIENT
"FIA",721,0)
^ECH(
"FIA",721,0,0)
721A
"FIA",721,0,1)
y^y^p^^^^n^^n
"FIA",721,0,10)

"FIA",721,0,11)

"FIA",721,0,"RLRO")

"FIA",721,0,"VR")
2.0^EC
"FIA",721,721)
1
"FIA",721,721,9)

"FIA",724)
DSS UNIT
"FIA",724,0)
^ECD(
"FIA",724,0,0)
724I
"FIA",724,0,1)
y^y^p^^^^n^^n
"FIA",724,0,10)

"FIA",724,0,11)

"FIA",724,0,"RLRO")

"FIA",724,0,"VR")
2.0^EC
"FIA",724,724)
1
"FIA",724,724,14)

"FIA",724,724,15)

"INIT")
POST^EC2P126
"KRN",9.2,938,-1)
0^5
"KRN",9.2,938,0)
ECSECT^DSS Units for Event Capture (Enter/Edit)^2970326.0923^
"KRN",9.2,938,1,0)
^9.21^35^35^3150406^^
"KRN",9.2,938,1,1,0)
** You must define your DSS Units with this option for subsequent options 
"KRN",9.2,938,1,2,0)
in the Event Capture Software to work. **
"KRN",9.2,938,1,3,0)
 
"KRN",9.2,938,1,4,0)
This option allows you to ENTER and EDIT, but NOT DELETE, DSS Units for 
"KRN",9.2,938,1,5,0)
use with Event Capture.  DSS Units typically represent the smallest 
"KRN",9.2,938,1,6,0)
identifiable work unit in a clinical service at the medical center and 
"KRN",9.2,938,1,7,0)
are defined by the VAMCs.  A DSS Unit can represent any of the following:
"KRN",9.2,938,1,8,0)
 
"KRN",9.2,938,1,9,0)
 - An entire service
"KRN",9.2,938,1,10,0)
 - A section of a service 
"KRN",9.2,938,1,11,0)
 - A small section within a section 
"KRN",9.2,938,1,12,0)
 - A medical equipment item used in patient procedures
"KRN",9.2,938,1,13,0)
 
"KRN",9.2,938,1,14,0)
When creating or editing DSS Units, you can choose what (if any) data 
"KRN",9.2,938,1,15,0)
is sent to PCE, and the method used to send it:  
"KRN",9.2,938,1,16,0)
 
"KRN",9.2,938,1,17,0)
 A - Send All Records 
"KRN",9.2,938,1,18,0)
 O - Send Outpatient Only 
"KRN",9.2,938,1,19,0)
 N - Send No Records
"KRN",9.2,938,1,20,0)
 
"KRN",9.2,938,1,21,0)
The advantage of using Event Capture to send data to PCE is that it 
"KRN",9.2,938,1,22,0)
eliminates the duplicate effort of entering the same workload data in the 
"KRN",9.2,938,1,23,0)
Scheduling software, then transmitting to PCE.    
"KRN",9.2,938,1,24,0)
 
"KRN",9.2,938,1,25,0)
If a DSS Unit is set up NOT to send to PCE (No records), then:
"KRN",9.2,938,1,26,0)
 
"KRN",9.2,938,1,27,0)
 1.) An Associated Stop Code is required to be entered for the DSS Unit
"KRN",9.2,938,1,28,0)
      during setup. 
"KRN",9.2,938,1,29,0)
 2.) A Credit Stop Code may be added. 
"KRN",9.2,938,1,30,0)
 3.) A CHAR4 Code may be added.
"KRN",9.2,938,1,31,0)
  
"KRN",9.2,938,1,32,0)
When creating DSS Units, your response to the "Category (Y/N):" prompt 
"KRN",9.2,938,1,33,0)
determines whether or not procedures are grouped by categories during 
"KRN",9.2,938,1,34,0)
data entry.  When editing DSS Units, the "Category (Y/N):" prompt will
"KRN",9.2,938,1,35,0)
not appear if you have Event Code Screens defined.
"KRN",9.2,938,10.2)
W @IOF
"KRN",9.2,947,-1)
0^2
"KRN",9.2,947,0)
ECPAT^Enter/Edit Patient Procedures^2970326.0928^
"KRN",9.2,947,1,0)
^9.21^55^55^3150406^^^
"KRN",9.2,947,1,1,0)
** If only one or no Category is defined for the specified DSS Unit, you 
"KRN",9.2,947,1,2,0)
cannot edit Category.**
"KRN",9.2,947,1,3,0)
 
"KRN",9.2,947,1,4,0)
** If only one Procedure is defined in the DSS Unit, the Procedure field 
"KRN",9.2,947,1,5,0)
will be populated. **
"KRN",9.2,947,1,6,0)
 
"KRN",9.2,947,1,7,0)
** You must answer exposure and service-connected indicators if fields 
"KRN",9.2,947,1,8,0)
are not disabled.** 
"KRN",9.2,947,1,9,0)
 
"KRN",9.2,947,1,10,0)
** Procedures being passed to PCE must have an active Associated
"KRN",9.2,947,1,11,0)
Clinic. **
"KRN",9.2,947,1,12,0)
 
"KRN",9.2,947,1,13,0)
This option allows you to enter patient procedures performed on an 
"KRN",9.2,947,1,14,0)
individual patient.  You should use it when you have an individual 
"KRN",9.2,947,1,15,0)
patient record to add, update, or delete. 
"KRN",9.2,947,1,16,0)
 
"KRN",9.2,947,1,17,0)
After selecting a Procedure, enter the Volume. 
"KRN",9.2,947,1,18,0)
 
"KRN",9.2,947,1,19,0)
***The ECS volume field DOES NOT capture the number of patients seen by 
"KRN",9.2,947,1,20,0)
ECS providers.***
"KRN",9.2,947,1,21,0)
 
"KRN",9.2,947,1,22,0)
Volume is usually associated with the number of procedures performed.
"KRN",9.2,947,1,23,0)
The volume field can be used to record and track 3 different values:
"KRN",9.2,947,1,24,0)
 
"KRN",9.2,947,1,25,0)
1. Number of Procedures: When a selected procedure code CONTAINS inherent
"KRN",9.2,947,1,26,0)
time elements (such as "30M Massage Therapy") then a volume of one is
"KRN",9.2,947,1,27,0)
usually entered, meaning 1 of this specific procedure/service was
"KRN",9.2,947,1,28,0)
provided.
"KRN",9.2,947,1,29,0)
 
"KRN",9.2,947,1,30,0)
     OR
"KRN",9.2,947,1,31,0)
 
"KRN",9.2,947,1,32,0)
2. Time: Amount of time shown in increments of minutes (M). When a 
"KRN",9.2,947,1,33,0)
selected procedure code DOES NOT have inherent time elements THEN the
"KRN",9.2,947,1,34,0)
volume field is used to capture the time spent completing the
"KRN",9.2,947,1,35,0)
procedure/service: 1 = 15M, 2 = 30M, 3= 45M
"KRN",9.2,947,1,36,0)
 
"KRN",9.2,947,1,37,0)
     OR
"KRN",9.2,947,1,38,0)
 
"KRN",9.2,947,1,39,0)
3. Days: Number of days patient was in VA paid facilities such as State 
"KRN",9.2,947,1,40,0)
Home, DOM, or a Nursing Home. When entering workload for a patient in a 
"KRN",9.2,947,1,41,0)
VA-Paid facility, volume of 1 means 1 day, 2 means 2 days, etc.
"KRN",9.2,947,1,42,0)
 
"KRN",9.2,947,1,43,0)
NOTE: It is imperative to understand and keep track of the values you are 
"KRN",9.2,947,1,44,0)
entering in the volume field and what they represent for the patients you 
"KRN",9.2,947,1,45,0)
are treating.
"KRN",9.2,947,1,46,0)
 
"KRN",9.2,947,1,47,0)
You can enter one procedure per patient. Once all fields have been 
"KRN",9.2,947,1,48,0)
entered, you can select the appropriate button to:
"KRN",9.2,947,1,49,0)
 
"KRN",9.2,947,1,50,0)
 - add a new patient procedure.
"KRN",9.2,947,1,51,0)
 - update an existing patient procedure.
"KRN",9.2,947,1,52,0)
 - delete an existing procedure.
"KRN",9.2,947,1,53,0)
 - exit this option.
"KRN",9.2,947,1,54,0)
 
"KRN",9.2,947,1,55,0)
See User Manual for details on all features such as Recent Visits.
"KRN",9.2,947,10.2)
W @IOF
"KRN",9.2,956,-1)
0^3
"KRN",9.2,956,0)
ECBATCH PROC^Data Entry (Batch) by Procedure^2970326.0929^^
"KRN",9.2,956,1,0)
^^51^51^3150406^
"KRN",9.2,956,1,1,0)
This option allows you to enter a single procedure for multiple patients 
"KRN",9.2,956,1,2,0)
as a batch entry.
"KRN",9.2,956,1,3,0)
 
"KRN",9.2,956,1,4,0)
** If only one or no Category is defined for the specified DSS Unit, you 
"KRN",9.2,956,1,5,0)
cannot edit Category.**
"KRN",9.2,956,1,6,0)
 
"KRN",9.2,956,1,7,0)
** If only one Procedure is defined in the DSS Unit, the Procedure field 
"KRN",9.2,956,1,8,0)
will be populated. **
"KRN",9.2,956,1,9,0)
 
"KRN",9.2,956,1,10,0)
** Procedures being passed to PCE must have an active Associated
"KRN",9.2,956,1,11,0)
Clinic.**
"KRN",9.2,956,1,12,0)
 
"KRN",9.2,956,1,13,0)
After selecting a Procedure, enter the Volume. 
"KRN",9.2,956,1,14,0)
 
"KRN",9.2,956,1,15,0)
***The ECS volume field DOES NOT capture the number of patients seen by 
"KRN",9.2,956,1,16,0)
ECS providers.***
"KRN",9.2,956,1,17,0)
 
"KRN",9.2,956,1,18,0)
Volume is usually associated with the number of procedures performed.
"KRN",9.2,956,1,19,0)
The volume field can be used to record and track 3 different values:
"KRN",9.2,956,1,20,0)
 
"KRN",9.2,956,1,21,0)
1. Number of Procedures: When a selected procedure code CONTAINS inherent
"KRN",9.2,956,1,22,0)
time elements (such as "30M Massage Therapy") then a volume of one is
"KRN",9.2,956,1,23,0)
usually entered, meaning 1 of this specific procedure/service was
"KRN",9.2,956,1,24,0)
provided.
"KRN",9.2,956,1,25,0)
 
"KRN",9.2,956,1,26,0)
     OR
"KRN",9.2,956,1,27,0)
 
"KRN",9.2,956,1,28,0)
2. Time: Amount of time shown in increments of minutes (M). When a 
"KRN",9.2,956,1,29,0)
selected procedure code DOES NOT have inherent time elements THEN the
"KRN",9.2,956,1,30,0)
volume field is used to capture the time spent completing the
"KRN",9.2,956,1,31,0)
procedure/service: 1 = 15M, 2 = 30M, 3= 45M
"KRN",9.2,956,1,32,0)
 
"KRN",9.2,956,1,33,0)
     OR
"KRN",9.2,956,1,34,0)
 
"KRN",9.2,956,1,35,0)
3. Days: Number of days patient was in VA paid facilities such as State 
"KRN",9.2,956,1,36,0)
Home, DOM, or a Nursing Home. When entering workload for a patient in a 
"KRN",9.2,956,1,37,0)
VA-Paid facility, volume of 1 means 1 day, 2 means 2 days, etc.
"KRN",9.2,956,1,38,0)
 
"KRN",9.2,956,1,39,0)
NOTE: It is imperative to understand and keep track of the values you are 
"KRN",9.2,956,1,40,0)
entering in the volume field and what they represent for the patients you 
"KRN",9.2,956,1,41,0)
are treating.
"KRN",9.2,956,1,42,0)
 
"KRN",9.2,956,1,43,0)
After you verify that the procedure information is correct, enter the 
"KRN",9.2,956,1,44,0)
first Patient.  When you finish entering data for the first patient, 
"KRN",9.2,956,1,45,0)
click the Add button and repeat until all Patients are entered.
"KRN",9.2,956,1,46,0)
 
"KRN",9.2,956,1,47,0)
** You must answer exposure and service-connected indicators if fields 
"KRN",9.2,956,1,48,0)
are not disabled.** 
"KRN",9.2,956,1,49,0)
 
"KRN",9.2,956,1,50,0)
Use the View button to ensure all data has been entered before completing 
"KRN",9.2,956,1,51,0)
the entry by clicking the OK button.
"KRN",9.2,956,2,0)
^9.22A^^0
"KRN",9.2,960,-1)
0^4
"KRN",9.2,960,0)
ECMULT PROC^Multiple Dates/Multiple Procedures Data Entry^2970826.134949^
"KRN",9.2,960,1,0)
^^44^44^3150406^
"KRN",9.2,960,1,1,0)
This option allows entry of multiple procedures on multiple dates for one 
"KRN",9.2,960,1,2,0)
or more patient(s).  This option does not require the user to exit the 
"KRN",9.2,960,1,3,0)
option to change dates or procedures for data entry.
"KRN",9.2,960,1,4,0)
 
"KRN",9.2,960,1,5,0)
You may enter any number of procedure dates and then any number of 
"KRN",9.2,960,1,6,0)
procedures. 
"KRN",9.2,960,1,7,0)
 
"KRN",9.2,960,1,8,0)
After selecting a Procedure, enter the Volume. 
"KRN",9.2,960,1,9,0)
 
"KRN",9.2,960,1,10,0)
***The ECS volume field DOES NOT capture the number of patients seen by 
"KRN",9.2,960,1,11,0)
ECS providers.***
"KRN",9.2,960,1,12,0)
 
"KRN",9.2,960,1,13,0)
Volume is usually associated with the number of procedures performed.
"KRN",9.2,960,1,14,0)
The volume field can be used to record and track 3 different values:
"KRN",9.2,960,1,15,0)
 
"KRN",9.2,960,1,16,0)
1. Number of Procedures: When a selected procedure code CONTAINS inherent
"KRN",9.2,960,1,17,0)
time elements (such as "30M Massage Therapy") then a volume of one is
"KRN",9.2,960,1,18,0)
usually entered, meaning 1 of this specific procedure/service was
"KRN",9.2,960,1,19,0)
provided.
"KRN",9.2,960,1,20,0)
 
"KRN",9.2,960,1,21,0)
     OR
"KRN",9.2,960,1,22,0)
 
"KRN",9.2,960,1,23,0)
2. Time: Amount of time shown in increments of minutes (M). When a 
"KRN",9.2,960,1,24,0)
selected procedure code DOES NOT have inherent time elements THEN the
"KRN",9.2,960,1,25,0)
volume field is used to capture the time spent completing the
"KRN",9.2,960,1,26,0)
procedure/service: 1 = 15M, 2 = 30M, 3= 45M
"KRN",9.2,960,1,27,0)
 
"KRN",9.2,960,1,28,0)
     OR
"KRN",9.2,960,1,29,0)
 
"KRN",9.2,960,1,30,0)
3. Days: Number of days patient was in VA paid facilities such as State 
"KRN",9.2,960,1,31,0)
Home, DOM, or a Nursing Home. When entering workload for a patient in a 
"KRN",9.2,960,1,32,0)
VA-Paid facility, volume of 1 means 1 day, 2 means 2 days, etc.
"KRN",9.2,960,1,33,0)
 
"KRN",9.2,960,1,34,0)
NOTE: It is imperative to understand and keep track of the values you are 
"KRN",9.2,960,1,35,0)
entering in the volume field and what they represent for the patients you 
"KRN",9.2,960,1,36,0)
are treating.
"KRN",9.2,960,1,37,0)
 
"KRN",9.2,960,1,38,0)
Then enter patients and information specific to each patient (I.E. 
"KRN",9.2,960,1,39,0)
Ordering Section, Agent Orange, Associated Clinic, etc.).
"KRN",9.2,960,1,40,0)
 
"KRN",9.2,960,1,41,0)
** You must answer exposure and service-connected indicators if fields 
"KRN",9.2,960,1,42,0)
are not disabled.** 
"KRN",9.2,960,1,43,0)
 
"KRN",9.2,960,1,44,0)
See User Manual for further details.
"KRN",9.2,960,10.2)
W @IOF
"KRN",9.2,1505,-1)
0^1
"KRN",9.2,1505,0)
ECPAT0^Enter/Edit Patient Procedures Selection^3010628.092336^
"KRN",9.2,1505,1,0)
^9.21^13^13^3150406^^^^
"KRN",9.2,1505,1,1,0)
This screen allows you to select a patient to either add, update or 
"KRN",9.2,1505,1,2,0)
delete procedures performed.
"KRN",9.2,1505,1,3,0)
 
"KRN",9.2,1505,1,4,0)
You must first select a Location, then a DSS Unit within that Location.
"KRN",9.2,1505,1,5,0)
 
"KRN",9.2,1505,1,6,0)
The system defaults to the current date as the Date Range. You can change 
"KRN",9.2,1505,1,7,0)
the date range if desired by entering dates for Procedures From and 
"KRN",9.2,1505,1,8,0)
Procedures Through. 
"KRN",9.2,1505,1,9,0)
 
"KRN",9.2,1505,1,10,0)
Next, select a patient.  If there were procedures done within the date 
"KRN",9.2,1505,1,11,0)
range specified a list of those procedures will be displayed.
"KRN",9.2,1505,1,12,0)
 
"KRN",9.2,1505,1,13,0)
Click Add or Update to proceed.
"KRN",9.2,1505,10.2)
W @IOF
"KRN",19,11187,-1)
0^1
"KRN",19,11187,0)
EC GUI CONTEXT^EC GUI Context version 2.2.0.0^^B^^^^^^^^EVENT CAPTURE
"KRN",19,11187,1,0)
^19.06^1^1^3150406^^^^
"KRN",19,11187,1,1,0)
This is the Broker Client/Server type option for the Event Capture GUI option
"KRN",19,11187,99)
58583,58456
"KRN",19,11187,99.1)
62872,41516
"KRN",19,11187,"RPC",0)
^19.05P^57^57
"KRN",19,11187,"RPC",1,0)
EC DSSCATCHECK
"KRN",19,11187,"RPC",2,0)
EC FILER
"KRN",19,11187,"RPC",3,0)
EC GETBATPROCS
"KRN",19,11187,"RPC",4,0)
EC GETCAT
"KRN",19,11187,"RPC",5,0)
EC GETCPTLST
"KRN",19,11187,"RPC",6,0)
EC GETDSSECS
"KRN",19,11187,"RPC",7,0)
EC GETDSSUNIT
"KRN",19,11187,"RPC",8,0)
EC GETDSSUNITUSRS
"KRN",19,11187,"RPC",9,0)
EC GETECLOC
"KRN",19,11187,"RPC",10,0)
EC GETECSCATS
"KRN",19,11187,"RPC",11,0)
EC GETECSCREEN
"KRN",19,11187,"RPC",12,0)
EC GETECSDETAIL
"KRN",19,11187,"RPC",13,0)
EC GETECSPROCS
"KRN",19,11187,"RPC",14,0)
EC GETENCDXS
"KRN",19,11187,"RPC",15,0)
EC GETIEN
"KRN",19,11187,"RPC",16,0)
EC GETLIST
"KRN",19,11187,"RPC",17,0)
EC GETLOC
"KRN",19,11187,"RPC",18,0)
EC GETNATPX
"KRN",19,11187,"RPC",19,0)
EC GETPATCLASTAT
"KRN",19,11187,"RPC",20,0)
EC GETPATELIG
"KRN",19,11187,"RPC",21,0)
EC GETPATINFO
"KRN",19,11187,"RPC",22,0)
EC GETPATPROCS
"KRN",19,11187,"RPC",23,0)
EC GETPRODEFS
"KRN",19,11187,"RPC",24,0)
EC GETPROVIDER
"KRN",19,11187,"RPC",25,0)
EC GETPXLST
"KRN",19,11187,"RPC",26,0)
EC GETPXMODIFIER
"KRN",19,11187,"RPC",27,0)
EC GETPXREASON
"KRN",19,11187,"RPC",28,0)
EC GETSCNHELP
"KRN",19,11187,"RPC",29,0)
EC GETUSRDSSUNIT
"KRN",19,11187,"RPC",30,0)
EC REPORTS
"KRN",19,11187,"RPC",31,0)
EC VALIDATE SPREADSHEET DATA
"KRN",19,11187,"RPC",32,0)
ORWU USERINFO
"KRN",19,11187,"RPC",33,0)
ORWU HASKEY
"KRN",19,11187,"RPC",34,0)
ORWU DEVICE
"KRN",19,11187,"RPC",35,0)
SC PATIENT LOOKUP
"KRN",19,11187,"RPC",36,0)
ORWU NEWPERS
"KRN",19,11187,"RPC",37,0)
DDR GET DD HELP
"KRN",19,11187,"RPC",38,0)
DDR FINDER
"KRN",19,11187,"RPC",39,0)
DDR FIND1
"KRN",19,11187,"RPC",40,0)
DDR LISTER
"KRN",19,11187,"RPC",41,0)
EC GETDATE
"KRN",19,11187,"RPC",42,0)
EC CLASHELP
"KRN",19,11187,"RPC",43,0)
DDR GETS ENTRY DATA
"KRN",19,11187,"RPC",44,0)
DG CHK BS5 XREF Y/N
"KRN",19,11187,"RPC",45,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11187,"RPC",46,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,11187,"RPC",47,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,11187,"RPC",48,0)
EC SPACEBAR
"KRN",19,11187,"RPC",49,0)
EC DIEDON
"KRN",19,11187,"RPC",50,0)
EC GETPATCH
"KRN",19,11187,"RPC",51,0)
EC GETVISITINFO
"KRN",19,11187,"RPC",52,0)
EC GETVERSION
"KRN",19,11187,"RPC",53,0)
ORWU DT
"KRN",19,11187,"RPC",54,0)
ECOB METHOD
"KRN",19,11187,"RPC",55,0)
ECOB FACTORY
"KRN",19,11187,"RPC",56,0)
EC RECENT VISITS
"KRN",19,11187,"RPC",57,0)
EC ICD10IMPLEMENTATIONDATE
"KRN",19,11187,"U")
EC GUI CONTEXT VERSION 2.2.0.0
"KRN",8994,843,-1)
0^1
"KRN",8994,843,0)
EC GETLIST^SRCLST^ECUMRPC1^4^R^^^1
"KRN",8994,843,1,0)
^8994.01^1^1^3150406^^^^
"KRN",8994,843,1,1,0)
This call is used to perform a search on a file based on a search string.
"KRN",8994,843,2,0)
^8994.02A^1^1
"KRN",8994,843,2,1,0)
ECARY^1^^1
"KRN",8994,843,2,1,1,0)
^8994.021^7^7^3150406^^
"KRN",8994,843,2,1,1,1,0)
The input string ECARY contains six pieces separated by "^"
"KRN",8994,843,2,1,1,2,0)
     ECFIL  - File to search
"KRN",8994,843,2,1,1,3,0)
     ECSTR  - Search string
"KRN",8994,843,2,1,1,4,0)
     ECDIR  - Search order
"KRN",8994,843,2,1,1,5,0)
     ECNUM  - (Optional) Number of records to return [DEFAULT: 44]
"KRN",8994,843,2,1,1,6,0)
     ECADT  - (Optional) date to determine clinic status (active/inactive)
"KRN",8994,843,2,1,1,7,0)
     ECLOC  - (Optional) location (IEN) to filter associated clinic list
"KRN",8994,843,2,"B","ECARY",1)

"KRN",8994,843,3,0)
^8994.03^1^1^3150406^^^^
"KRN",8994,843,3,1,0)
Returns a list of values based on the search criteria.
"KRN",8994,2291,-1)
0^2
"KRN",8994,2291,0)
EC RECENT VISITS^RCNTVST^ECUTL1^2
"KRN",8994,2291,1,0)
^8994.01^2^2^3141205^^
"KRN",8994,2291,1,1,0)
Returns the 20 most recent visits/appointments for a selected patient
"KRN",8994,2291,1,2,0)
for the selected location.
"KRN",8994,2291,2,0)
^8994.02A^1^1
"KRN",8994,2291,2,1,0)
ECARY^1
"KRN",8994,2291,2,1,1,0)
^^4^4^3141205^
"KRN",8994,2291,2,1,1,1,0)
ECARY will be sent with two delimited pieces of information.
"KRN",8994,2291,2,1,1,2,0)
 
"KRN",8994,2291,2,1,1,3,0)
    DFN    - patient's IEN
"KRN",8994,2291,2,1,1,4,0)
    LOC    - (optional) IEN of the location to filter visits/appts
"KRN",8994,2291,2,"B","ECARY",1)

"KRN",8994,2291,3,0)
^8994.03^3^3^3141205^^
"KRN",8994,2291,3,1,0)
Return parameter is an array containing:
"KRN",8994,2291,3,2,0)
  Piece 1 - Date of visit, internal fileman date
"KRN",8994,2291,3,3,0)
  Piece 2 - Date of Visit  Clinic Name (location)
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
126^3150409
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","EC2P126")
0^3^B4636432^n/a
"RTN","EC2P126",1,0)
EC2P126 ;ALB/DAN Post-install events for Event Capture patch 126 ;11/18/14  15:38
"RTN","EC2P126",2,0)
 ;;2.0;EVENT CAPTURE;**126**;8 May 96;Build 8
"RTN","EC2P126",3,0)
 ;
"RTN","EC2P126",4,0)
POST ;Come here for post-install actions
"RTN","EC2P126",5,0)
 D REASON ;Update procedure reason file
"RTN","EC2P126",6,0)
 Q
"RTN","EC2P126",7,0)
 ;
"RTN","EC2P126",8,0)
REASON ;Modify entries in file 720.4
"RTN","EC2P126",9,0)
 ;
"RTN","EC2P126",10,0)
 N ECXFDA,ECXERR,ECREAS,I,DONE,IEN,FDA
"RTN","EC2P126",11,0)
 ;
"RTN","EC2P126",12,0)
 ;-add procedure reason
"RTN","EC2P126",13,0)
 F I=1:1 S ECREAS=$P($T(ADDREAS+I),";;",2) Q:ECREAS="QUIT"  D
"RTN","EC2P126",14,0)
 .;
"RTN","EC2P126",15,0)
 .;-quit w/error message if entry already exists in file #720.4
"RTN","EC2P126",16,0)
 .I $$FIND1^DIC(720.4,"","X",ECREAS) D  Q
"RTN","EC2P126",17,0)
 ..D BMES^XPDUTL(">>>..."_ECREAS_" not added, entry already exists.")
"RTN","EC2P126",18,0)
 .;
"RTN","EC2P126",19,0)
 .;Setup field values of new entry
"RTN","EC2P126",20,0)
 .S ECXFDA(720.4,"+1,",.01)=ECREAS
"RTN","EC2P126",21,0)
 .S ECXFDA(720.4,"+1,",.02)=1 ;Set "ACTIVE?" field to 1 (active)
"RTN","EC2P126",22,0)
 .;
"RTN","EC2P126",23,0)
 .;-add new entry to file #720.4
"RTN","EC2P126",24,0)
 .D UPDATE^DIE("E","ECXFDA","","ECXERR")
"RTN","EC2P126",25,0)
 .;
"RTN","EC2P126",26,0)
 .I '$D(ECXERR) D BMES^XPDUTL(">>>..."_ECREAS_" added to file.")
"RTN","EC2P126",27,0)
 .I $D(ECXERR) D BMES^XPDUTL(">>>...Unable to add "_ECREAS_" to file.")
"RTN","EC2P126",28,0)
 ;
"RTN","EC2P126",29,0)
 ;update procedure reason
"RTN","EC2P126",30,0)
 F I=1:1 S ECREAS=$P($T(CHGREAS+I),";;",2) Q:ECREAS="QUIT"  D
"RTN","EC2P126",31,0)
 .S IEN=$$FIND1^DIC(720.4,"","X",$P(ECREAS,";"))
"RTN","EC2P126",32,0)
 .I '+IEN D  Q
"RTN","EC2P126",33,0)
 ..I $$FIND1^DIC(720.4,"","X",$P(ECREAS,";",2)) D BMES^XPDUTL(">>>..."_$P(ECREAS,";")_" already updated.") Q
"RTN","EC2P126",34,0)
 ..D BMES^XPDUTL(">>>...unable to change "_$P(ECREAS,";")_" - Entry not found!")
"RTN","EC2P126",35,0)
 .S FDA(720.4,IEN_",",".01")=$P(ECREAS,";",2)
"RTN","EC2P126",36,0)
 .D FILE^DIE("","FDA")
"RTN","EC2P126",37,0)
 .D BMES^XPDUTL(">>>..."_$P(ECREAS,";")_" updated to "_$P(ECREAS,";",2))
"RTN","EC2P126",38,0)
 Q
"RTN","EC2P126",39,0)
 ;
"RTN","EC2P126",40,0)
ADDREAS ;List of new procedure reasons
"RTN","EC2P126",41,0)
 ;;CHAP MIL SEXUAL TRAUMA
"RTN","EC2P126",42,0)
 ;;CHAP DOM/TREATMENT CENTERS
"RTN","EC2P126",43,0)
 ;;QUIT
"RTN","EC2P126",44,0)
 ;
"RTN","EC2P126",45,0)
CHGREAS ;List of procedure reasons to be updated
"RTN","EC2P126",46,0)
 ;;CHAP PRRP;CHAP PRRP/PRTP INP/OUT
"RTN","EC2P126",47,0)
 ;;QUIT
"RTN","ECEFPAT")
0^1^B76799411^B75867358
"RTN","ECEFPAT",1,0)
ECEFPAT ;ALB/JAM-Enter Event Capture Data Patient Filer ;9/29/14  12:50
"RTN","ECEFPAT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,39,42,47,49,54,65,72,95,76,112,119,114,126**;8 May 96;Build 8
"RTN","ECEFPAT",3,0)
 ;
"RTN","ECEFPAT",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECEFPAT",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","ECEFPAT",6,0)
 ; 
"RTN","ECEFPAT",7,0)
FILE ;Used by the RPC broker to file patient encounter in file #721
"RTN","ECEFPAT",8,0)
 ;  Uses Supported IA 1995 - allow access to $$CPT^ICPTCOD
"RTN","ECEFPAT",9,0)
 ;
"RTN","ECEFPAT",10,0)
 ;     Variables passed in
"RTN","ECEFPAT",11,0)
 ;       ECIEN   - IEN of #721, if editing
"RTN","ECEFPAT",12,0)
 ;       ECDEL   - Delete record. 1- YES; 0- 0, null or undefine for NO.
"RTN","ECEFPAT",13,0)
 ;       ECDFN   - Patient IEN for file #2
"RTN","ECEFPAT",14,0)
 ;       ECDT    - Date and time of procedure
"RTN","ECEFPAT",15,0)
 ;       ECL     - Location
"RTN","ECEFPAT",16,0)
 ;       ECD     - DSS Unit
"RTN","ECEFPAT",17,0)
 ;       ECC     - Category
"RTN","ECEFPAT",18,0)
 ;       ECP     - Procedure
"RTN","ECEFPAT",19,0)
 ;       ECVOL   - Volume
"RTN","ECEFPAT",20,0)
 ;       ECU1..n - Provider (1 thru n), Prov 1 is required,other optional
"RTN","ECEFPAT",21,0)
 ;       ECMN    - Ordering Section
"RTN","ECEFPAT",22,0)
 ;       ECDUZ   - Entered/Edited by, pointer to #200
"RTN","ECEFPAT",23,0)
 ;       ECDX    - Primary Diagnosis
"RTN","ECEFPAT",24,0)
 ;       ECDXS   - Secondary Diagnosis; multiple, optional
"RTN","ECEFPAT",25,0)
 ;       EC4     - Associated Clinic, required if sending data to PCE
"RTN","ECEFPAT",26,0)
 ;       ECPTSTAT- Patient Status
"RTN","ECEFPAT",27,0)
 ;       ECPXREAS- Procedure reason, optional
"RTN","ECEFPAT",28,0)
 ;       ECPXREA2- Procedure reason #2, optional ;112
"RTN","ECEFPAT",29,0)
 ;       ECPXREA3- Procedure reason #3, optional ;112
"RTN","ECEFPAT",30,0)
 ;       ECMOD   - CPT modifiers, optional
"RTN","ECEFPAT",31,0)
 ;       ECLASS  - Classification, optional
"RTN","ECEFPAT",32,0)
 ;       ECELIG  - Eligibility, optional
"RTN","ECEFPAT",33,0)
 ;
"RTN","ECEFPAT",34,0)
 ;     Variable return
"RTN","ECEFPAT",35,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #721^Message
"RTN","ECEFPAT",36,0)
 ;
"RTN","ECEFPAT",37,0)
 N NODE,ECS,ECM,ECID,ECCPT,ECINT,ECPCE,ECX,ECERR,ECOUT,ECFLG,ECRES
"RTN","ECEFPAT",38,0)
 N ECFIL,ECPRV,ECCS
"RTN","ECEFPAT",39,0)
 ; Determine Active Coding System based on Date of Interest
"RTN","ECEFPAT",40,0)
 S ECCS=$S($G(ECDT)'="":ECDT,1:DT)
"RTN","ECEFPAT",41,0)
 S ECCS=$$SINFO^ICDEX("DIAG",ECCS) ; Supported by ICR 5747
"RTN","ECEFPAT",42,0)
 ;
"RTN","ECEFPAT",43,0)
 S ECFLG=1,ECERR=0 D CHKDT(1) I ECERR Q
"RTN","ECEFPAT",44,0)
 F ECX=1:1 Q:'$D(@("ECU"_ECX))  D  I ECERR Q
"RTN","ECEFPAT",45,0)
 .I @("ECU"_ECX)="" Q
"RTN","ECEFPAT",46,0)
 .S NODE=$$GET^XUA4A72(@("ECU"_ECX),ECDT) I +NODE'>0 S ECERR=1 D  Q
"RTN","ECEFPAT",47,0)
 ..S ^TMP($J,"ECMSG",1)="0^Provider doesn't have an active Person class"
"RTN","ECEFPAT",48,0)
 .S ECPRV(ECX)=@("ECU"_ECX)_"^^"_$S(ECX=1:"P",1:"S")
"RTN","ECEFPAT",49,0)
 I $G(ECIEN)'="" S ECFLG=0 D  I ECERR Q
"RTN","ECEFPAT",50,0)
 . I '$D(^ECH(ECIEN)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Pat IEN Not Found"
"RTN","ECEFPAT",51,0)
 I $G(ECDEL) K ^TMP($J,"ECMSG") D  Q
"RTN","ECEFPAT",52,0)
 .S ECVST=$P($G(^ECH(ECIEN,0)),"^",21) I ECVST D
"RTN","ECEFPAT",53,0)
 ..;* Resend all EC records with same Visit file entry to PCE
"RTN","ECEFPAT",54,0)
 ..;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECEFPAT",55,0)
 ..K EC2PCE S ECVAR1=$$FNDVST^ECUTL(ECVST,,.EC2PCE) K ECVAR1
"RTN","ECEFPAT",56,0)
 ..;Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECEFPAT",57,0)
 ..N ECPKG,ECSOU
"RTN","ECEFPAT",58,0)
 ..S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECSOU="EVENT CAPTURE DATA"
"RTN","ECEFPAT",59,0)
 ..S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST,ECPKG,ECSOU) K ECVST,VALQUIET
"RTN","ECEFPAT",60,0)
 ..;- Send to PCE task
"RTN","ECEFPAT",61,0)
 ..D PCETASK^ECPCEU(.EC2PCE) K EC2PCE
"RTN","ECEFPAT",62,0)
 .S DA=ECIEN,DIK="^ECH(" D ^DIK K DA,DIK,ECVV
"RTN","ECEFPAT",63,0)
 .S ^TMP($J,"ECMSG",1)="1^Procedure Deleted"
"RTN","ECEFPAT",64,0)
 I '$D(ECPRV) S ^TMP($J,"ECMSG",1)="0^No provider present" Q
"RTN","ECEFPAT",65,0)
 S ECDT=+ECDT,NODE=$G(^ECD(ECD,0)) I NODE="" D MSG Q
"RTN","ECEFPAT",66,0)
 S ECFN=$G(ECIEN),ECVOL=$G(ECVOL,1),ECS=$P(NODE,U,2),ECM=$P(NODE,U,3)
"RTN","ECEFPAT",67,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECEFPAT",68,0)
 ;S ECPTSTAT=$$INOUTPT^ECUTL0(ECDFN,+ECDT) ;pat stat may not need
"RTN","ECEFPAT",69,0)
 I $G(EC4)="" D GETCLN^ECEDF
"RTN","ECEFPAT",70,0)
 S ECID=$S(+EC4:$P($G(^SC(+EC4,0)),"^",7),1:""),ECINP=ECPTSTAT
"RTN","ECEFPAT",71,0)
 I $S($P(ECPCE,"~",2)="N":0,$P(ECPCE,"~",2)="O"&(ECINP'="O"):0,1:1) D
"RTN","ECEFPAT",72,0)
 .D CHKDT(2)
"RTN","ECEFPAT",73,0)
 I +EC4 S ECRES=$$CLNCK^SDUTL2(+EC4,0) I 'ECRES D  S ECERR=1
"RTN","ECEFPAT",74,0)
 .S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECEFPAT",75,0)
 Q:ECERR  I ECFLG D NEWIEN
"RTN","ECEFPAT",76,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEFPAT",77,0)
 ;validate CPT value and handle HCPCS name to IEN conversion (HD223010)
"RTN","ECEFPAT",78,0)
 S ECCPT=+$$CPT^ICPTCOD(ECCPT)
"RTN","ECEFPAT",79,0)
 S ECCPT=$S(+ECCPT>0:ECCPT,1:0)
"RTN","ECEFPAT",80,0)
 K DA,DR,DIE S DIE="^ECH(",(DA,ECFN)=ECIEN K ECIEN
"RTN","ECEFPAT",81,0)
 S DR=".01////"_ECFN_";1////"_ECDFN_";3////"_ECL_";4////"_ECS
"RTN","ECEFPAT",82,0)
 S DR=DR_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL
"RTN","ECEFPAT",83,0)
 S $P(^ECH(ECFN,0),"^",9)=ECP
"RTN","ECEFPAT",84,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",85,0)
 S DA=ECFN,DR="11////"_ECMN_";13////"_ECDUZ_";2////"_ECDT
"RTN","ECEFPAT",86,0)
 ;S ECPXREAS=$G(ECPXREAS) ;112
"RTN","ECEFPAT",87,0)
 D CVTREAS Q:$G(ECERR)  ;119 Convert reasons from entries in 720.4 to entries in 720.5 before storing.
"RTN","ECEFPAT",88,0)
 S DR=DR_";19////"_$S(+ECCPT:ECCPT,1:"@")_";20////"_ECDX
"RTN","ECEFPAT",89,0)
 S DR=DR_";26////"_$S($G(EC4):EC4,1:"")_";27////"_$G(ECID)_";29////"_ECPTSTAT ;126 allow EC4 to be null if no associated clinic
"RTN","ECEFPAT",90,0)
 S DR=DR_";34////"_$S($G(ECPXREAS)="":"@",1:ECPXREAS) ;112
"RTN","ECEFPAT",91,0)
 S DR=DR_";43////"_$S($G(ECPXREA2)="":"@",1:ECPXREA2) ;112
"RTN","ECEFPAT",92,0)
 S DR=DR_";44////"_$S($G(ECPXREA3)="":"@",1:ECPXREA3) ;112
"RTN","ECEFPAT",93,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",94,0)
 I ECDX S ^DISV(DUZ,"^ICD9(")=ECDX  ;last ICD9 code
"RTN","ECEFPAT",95,0)
 S ECX=$O(ECPRV("A"),-1) I ECX'="" S ^DISV(DUZ,"^VA(200,")=+ECPRV(ECX)
"RTN","ECEFPAT",96,0)
 ;Remove Old CPT modifiers
"RTN","ECEFPAT",97,0)
 I 'ECFLG D
"RTN","ECEFPAT",98,0)
 . K OLDMOD S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECEFPAT",99,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  S OLDMOD(DA)="" D ^DIK
"RTN","ECEFPAT",100,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"MOD")
"RTN","ECEFPAT",101,0)
 .;Remove old secondary diagnosis codes
"RTN","ECEFPAT",102,0)
 . K OLDDXS S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECEFPAT",103,0)
 . F  S DA=$O(^ECH(ECDA,"DX",DA)) Q:'DA  S OLDDXS(DA)="" D ^DIK
"RTN","ECEFPAT",104,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"DX")
"RTN","ECEFPAT",105,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",106,0)
 ;File multiple providers
"RTN","ECEFPAT",107,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRV,.ECOUT) K ECOUT
"RTN","ECEFPAT",108,0)
 I 'ECFIL D RECDEL,MSG Q
"RTN","ECEFPAT",109,0)
 ;File CPT modifiers
"RTN","ECEFPAT",110,0)
 I $G(ECMOD)'="" D
"RTN","ECEFPAT",111,0)
 . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",112,0)
 . S DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECEFPAT",113,0)
 . F ECX=1:1:$L(ECMOD,"^") S MODIEN=$P(ECMOD,U,ECX) I +MODIEN>0 D
"RTN","ECEFPAT",114,0)
 . . K DD,DO S X=MODIEN D FILE^DICN
"RTN","ECEFPAT",115,0)
 . K MODIEN,DIC
"RTN","ECEFPAT",116,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",117,0)
 ; File multiple secondary diagnosis codes
"RTN","ECEFPAT",118,0)
 I $G(ECDXS)'="" D
"RTN","ECEFPAT",119,0)
 . S DXS="",DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",120,0)
 . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECDXY=ECDX K ECDXX
"RTN","ECEFPAT",121,0)
 . F ECX=1:1:$L(ECDXS,"^") S DXSIEN=$P(ECDXS,U,ECX) I +DXSIEN>0 D
"RTN","ECEFPAT",122,0)
 . . ; Retrieve ICD data - Supported by ICR 5747
"RTN","ECEFPAT",123,0)
 . . S DXCDE=$$ICDDX^ICDEX(DXSIEN,ECDT,+ECCS,"I") Q:+DXCDE<0  I '$P(DXCDE,U,10) Q
"RTN","ECEFPAT",124,0)
 . . K DD,DO S X=DXSIEN D FILE^DICN
"RTN","ECEFPAT",125,0)
 . . S DXCDE=$P(DXCDE,U,2),ECDXX(DXCDE)=DXSIEN
"RTN","ECEFPAT",126,0)
 . . S ^DISV(DUZ,"^ICD9(")=DXSIEN  ;last ICD9 code
"RTN","ECEFPAT",127,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEFPAT",128,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEFPAT",129,0)
 . K PXUPD,ECDXY,ECDXX,DXS,DXSIEN,DIC,DXCDE,DA,DD,DO
"RTN","ECEFPAT",130,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",131,0)
 S DA=ECFN
"RTN","ECEFPAT",132,0)
 ;File classification AO^IR^SC^EC^MST^HNC^CV^SHAD
"RTN","ECEFPAT",133,0)
 I $G(ECLASS)'="" D
"RTN","ECEFPAT",134,0)
 . S CLSTR="21^22^24^23^35^39^40^41",DR=""
"RTN","ECEFPAT",135,0)
 . F ECX=1:1:$L(CLSTR,"^") D
"RTN","ECEFPAT",136,0)
 . . S DR=DR_$P(CLSTR,U,ECX)_"////"_$P(ECLASS,U,ECX)_";"
"RTN","ECEFPAT",137,0)
 . S DR=$E(DR,1,($L(DR)-1)) D ^DIE
"RTN","ECEFPAT",138,0)
 . K CLSTR,DR,DIE
"RTN","ECEFPAT",139,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",140,0)
 ;
"RTN","ECEFPAT",141,0)
PCE ; format PCE data to send
"RTN","ECEFPAT",142,0)
 I ($P(ECPCE,"~",2)="N")!($P(ECPCE,"~",2)="O"&(ECINP'="O")) D  Q
"RTN","ECEFPAT",143,0)
 .S ^TMP($J,"ECMSG",1)="1^Record Filed"
"RTN","ECEFPAT",144,0)
 D:ECFLG PCE^ECBEN2U I 'ECFLG S EC(0)=^ECH(ECFN,0) D PCEE^ECBEN2U K EC
"RTN","ECEFPAT",145,0)
 I $G(ECOUT)!(ECERR) D  Q
"RTN","ECEFPAT",146,0)
 . D RECDEL S STR=$S($G(^ECH(ECFN,"R")):^("R"),1:" PCE Data Missing")
"RTN","ECEFPAT",147,0)
 . S ^TMP($J,"ECMSG",1)="0^Record Not Filed, "_STR K STR
"RTN","ECEFPAT",148,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_$G(ECIEN)
"RTN","ECEFPAT",149,0)
 Q
"RTN","ECEFPAT",150,0)
 ;
"RTN","ECEFPAT",151,0)
NEWIEN ;Create new IEN in file #721
"RTN","ECEFPAT",152,0)
 N DIC,DA,DD,DO,ECRN
"RTN","ECEFPAT",153,0)
RLCK L +^ECH(0):60 S ECRN=$P(^ECH(0),"^",3)+1
"RTN","ECEFPAT",154,0)
 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G RLCK
"RTN","ECEFPAT",155,0)
 L -^ECH(0) S DIC(0)="L",DIC="^ECH(",X=ECRN
"RTN","ECEFPAT",156,0)
 D FILE^DICN S ECIEN=+Y
"RTN","ECEFPAT",157,0)
 Q
"RTN","ECEFPAT",158,0)
RECDEL ; Delete record
"RTN","ECEFPAT",159,0)
 ;restore old data
"RTN","ECEFPAT",160,0)
 I 'ECFLG D  Q
"RTN","ECEFPAT",161,0)
 . I $O(OLDMOD("")) D
"RTN","ECEFPAT",162,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",163,0)
 . . S DIC="^ECH("_DA(1)_","_"""MOD"""_",",ECX=0
"RTN","ECEFPAT",164,0)
 . . F  S ECX=$O(OLDMOD(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",165,0)
 . I $O(OLDDXS("")) D
"RTN","ECEFPAT",166,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",167,0)
 . . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECX=0
"RTN","ECEFPAT",168,0)
 . . F  S ECX=$O(OLDDXS(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",169,0)
 . K DIC,DA,DD,DO,OLDMOD,OLDDXS,ECX
"RTN","ECEFPAT",170,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK K DA,DIK
"RTN","ECEFPAT",171,0)
 Q
"RTN","ECEFPAT",172,0)
MSG ;Record not filed
"RTN","ECEFPAT",173,0)
 S ^TMP($J,"ECMSG",1)="0^Record not Filed"
"RTN","ECEFPAT",174,0)
 Q
"RTN","ECEFPAT",175,0)
CHKDT(FLG) ;Required Data Check
"RTN","ECEFPAT",176,0)
 N I,C
"RTN","ECEFPAT",177,0)
 S C=1
"RTN","ECEFPAT",178,0)
 I FLG=1 D  Q
"RTN","ECEFPAT",179,0)
 .F I="ECD","ECC","ECL","ECDT","ECP","ECDFN","ECMN","ECDUZ","ECPTSTAT" D
"RTN","ECEFPAT",180,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",181,0)
 .I $G(ECDEL),$D(ECIEN) K ^TMP($J,"ECMSG") S ECERR=0
"RTN","ECEFPAT",182,0)
 ;check PCE data
"RTN","ECEFPAT",183,0)
 I FLG=2 D  Q
"RTN","ECEFPAT",184,0)
 .F I="EC4","ECDX" D  Q
"RTN","ECEFPAT",185,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key PCE data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",186,0)
 Q
"RTN","ECEFPAT",187,0)
VALDATA ;validate data
"RTN","ECEFPAT",188,0)
 N ECRRX
"RTN","ECEFPAT",189,0)
 D CHK^DIE(721,1,,"`"_ECDFN,.ECRRX) I ECRRX'=ECDFN D  Q
"RTN","ECEFPAT",190,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Patient"
"RTN","ECEFPAT",191,0)
 D CHK^DIE(721,2,,ECDT,.ECRRX) I ECRRX'=ECDT D  Q
"RTN","ECEFPAT",192,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure Date"
"RTN","ECEFPAT",193,0)
 D CHK^DIE(721,3,,"`"_ECL,.ECRRX) I ECRRX'=ECL D  Q
"RTN","ECEFPAT",194,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECEFPAT",195,0)
 D CHK^DIE(721,6,,"`"_ECD,.ECRRX) I ECRRX'=ECD D  Q
"RTN","ECEFPAT",196,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECEFPAT",197,0)
 D CHK^DIE(721,7,,"`"_ECC,.ECRRX) I ECRRX'=ECC D  Q
"RTN","ECEFPAT",198,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECEFPAT",199,0)
 D  I ECERR Q
"RTN","ECEFPAT",200,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP,ECDT) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECEFPAT",201,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECEFPAT",202,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECEFPAT",203,0)
 D CHK^DIE(721,11,,"`"_ECMN,.ECRRX) I ECRRX'=ECMN D  Q
"RTN","ECEFPAT",204,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Ordering Section"
"RTN","ECEFPAT",205,0)
 D CHK^DIE(721,20,,"`"_ECDX,.ECRRX) I ECRRX'=ECDX D  Q
"RTN","ECEFPAT",206,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Primary Diagnosis"
"RTN","ECEFPAT",207,0)
 I $G(EC4)'="" D CHK^DIE(721,26,,"`"_EC4,.ECRRX) I ECRRX'=EC4 D  Q
"RTN","ECEFPAT",208,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECEFPAT",209,0)
 Q
"RTN","ECEFPAT",210,0)
 ;
"RTN","ECEFPAT",211,0)
CVTREAS ;119 Section added to convert procedure reason IEN in 720.4 to EC Code Screen/Procedure reason link in file 720.5.
"RTN","ECEFPAT",212,0)
 N SCREEN,SCREENID,I
"RTN","ECEFPAT",213,0)
 S SCREEN=ECL_"-"_ECD_"-"_+$G(ECC,0)_"-"_ECP ;creates event code screen
"RTN","ECEFPAT",214,0)
 S SCREENID=$O(^ECJ("B",SCREEN,0)) I '+SCREENID S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Event Code Screen" Q  ;event code screen doesn't exist
"RTN","ECEFPAT",215,0)
 F I="ECPXREAS","ECPXREA2","ECPXREA3" I $G(@I) S @I=$$GETVAL(SCREENID,@I)
"RTN","ECEFPAT",216,0)
 Q
"RTN","ECEFPAT",217,0)
GETVAL(SCREENO,REASNO) ;119 section added to get link from 720.5 or add it if necessary
"RTN","ECEFPAT",218,0)
 N LINK,DIC,X,Y
"RTN","ECEFPAT",219,0)
 S LINK=$O(^ECL("AD",SCREENO,REASNO,0))
"RTN","ECEFPAT",220,0)
 I $G(LINK) Q LINK  ;Entry in 720.5 exists, return IEN
"RTN","ECEFPAT",221,0)
 S DIC="^ECL(",DIC(0)="",X=REASNO,DIC("DR")=".02////"_SCREENO
"RTN","ECEFPAT",222,0)
 K DD,DO D FILE^DICN
"RTN","ECEFPAT",223,0)
 S LINK=$S(+Y:+Y,1:"") ;New IEN or null if not added
"RTN","ECEFPAT",224,0)
 Q LINK
"RTN","ECHECK1")
0^16^B10754345^B9903536
"RTN","ECHECK1",1,0)
ECHECK1 ;BIR/MAM,JPW-Categories and Procedures Check ;12/17/14  15:10
"RTN","ECHECK1",2,0)
 ;;2.0;EVENT CAPTURE ;**4,33,47,55,63,126**;8 May 96;Build 8
"RTN","ECHECK1",3,0)
CATS ; check number of categories
"RTN","ECHECK1",4,0)
 K ECBUD,EC1,EC23 S CNT=0,ECAT=""
"RTN","ECHECK1",5,0)
 F  S ECAT=$O(^ECJ("AP",ECL,ECD,ECAT)) Q:ECAT=""  D
"RTN","ECHECK1",6,0)
 .S EC2="" F  S EC2=$O(^ECJ("AP",ECL,ECD,ECAT,EC2)) Q:EC2=""  D
"RTN","ECHECK1",7,0)
 ..S EC23=+$O(^ECJ("AP",ECL,ECD,ECAT,EC2,0))
"RTN","ECHECK1",8,0)
 ..I $G(ECCSTA)="",$P($G(^ECJ(+EC23,0)),"^",2) Q
"RTN","ECHECK1",9,0)
 ..S ECBUD(ECAT)=+ECAT_"^"_$S($P($G(^EC(726,+ECAT,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECHECK1",10,0)
 S ECAT=0 F  S ECAT=$O(ECBUD(ECAT)) Q:'ECAT  S CNT=CNT+1,ECC(CNT)=ECBUD(ECAT)
"RTN","ECHECK1",11,0)
 I '$D(ECC) S ECC(CNT)="0^No Categories"
"RTN","ECHECK1",12,0)
 K EC2,EC23,ECBUD
"RTN","ECHECK1",13,0)
 Q
"RTN","ECHECK1",14,0)
PROS ; check number of procedures
"RTN","ECHECK1",15,0)
 K ^TMP("ECPRO",$J) S CNT=0,ECPROS=""
"RTN","ECHECK1",16,0)
 I ECC F  S ECPROS=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS)) Q:ECPROS=""  D SET
"RTN","ECHECK1",17,0)
 I 'ECC S ECC="" F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  F  S ECPROS=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS)) Q:ECPROS=""  D SET
"RTN","ECHECK1",18,0)
ALL ;set info for all proc
"RTN","ECHECK1",19,0)
 S CNT=0 F CNT=0:0 S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT  D
"RTN","ECHECK1",20,0)
 .S ECPROF=$P(^TMP("ECPRO",$J,CNT),"^"),ECPIEN=$P(^(CNT),"^",2),ECPROPP=+ECPROF,ECPROF=$S(ECPROF["EC":725,ECPROF["ICPT":81,1:"UNKNOWN"),OK=0
"RTN","ECHECK1",21,0)
 .I ECPROF=725 S NODE1=$G(^EC(725,ECPROPP,0)),ECPRONAM=$S($P($G(NODE1),"^")]"":$P(NODE1,"^"),1:"UNKNOWN"),NATN=$P(NODE1,"^",2),OK=1
"RTN","ECHECK1",22,0)
 .I ECPROF=81 S NODE1=$$CPT^ICPTCOD(ECPROPP,$G(ECDT)),ECPRONAM=$S($P($G(NODE1),"^",3)]"":$P(NODE1,"^",3),1:"UNKNOWN"),NATN=$S($P(NODE1,"^",2)]"":$P(NODE1,"^",2),1:"NOT DEFINED"),OK=1
"RTN","ECHECK1",23,0)
 .S:'OK ECPRONAM="UNKNOWN"
"RTN","ECHECK1",24,0)
 .S NODE1=$G(^ECJ(ECPIEN,0)),ECTEMP=$P(NODE1,"^",2)
"RTN","ECHECK1",25,0)
 .;The ECACTIV variable allows users to select inactivate
"RTN","ECHECK1",26,0)
 .;procedures from the Inactivate Event Code Screen option.
"RTN","ECHECK1",27,0)
 .I '$G(ECACTIV)  I ECTEMP,ECTEMP'>DT K ECPIEN,ECPROF,ECPROPP,ECPRONAM,ECTEMP,NODE1,NOD2,SYN,NATN,VOL Q
"RTN","ECHECK1",28,0)
 .S NODE2=$G(^ECJ(ECPIEN,"PRO")),SYN=$S($P(NODE2,"^",2)]"":$P(NODE2,"^",2),1:"NOT DEFINED"),VOL=$P(NODE2,"^",3)
"RTN","ECHECK1",29,0)
 .S ^TMP("ECPRO",$J,CNT)=^TMP("ECPRO",$J,CNT)_"^"_SYN_"^"_ECPRONAM_"^"_NATN_"^"_VOL_"^"_ECPROF_"^"_ECPROPP_"^"_ECTEMP
"RTN","ECHECK1",30,0)
 .S ^TMP("ECPRO",$J,"B",ECPRONAM,CNT)="",^TMP("ECPRO",$J,"SYN",SYN,CNT)="",^TMP("ECPRO",$J,"N",NATN,CNT)="",^TMP("ECPRO",$J,"N2",NATN_" ",CNT)="" ;126 N2 is expected sort order
"RTN","ECHECK1",31,0)
 K ECPIEN,ECPROF,ECPROPP,ECPRONAM,ECTEMP,NODE1,NODE2,SYN,NATN,VOL
"RTN","ECHECK1",32,0)
 Q
"RTN","ECHECK1",33,0)
SET ;set proc in ^tmp
"RTN","ECHECK1",34,0)
 S ECPIEN=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS,0))
"RTN","ECHECK1",35,0)
 ;The ECACTIV variable allows users to select inactive.
"RTN","ECHECK1",36,0)
 ;procedures from the Inactivate Event Code Screen option.
"RTN","ECHECK1",37,0)
 I '$G(ECACTIV)  I $P($G(^ECJ(ECPIEN,0)),"^",2),$P($G(^ECJ(ECPIEN,0)),"^",2)'>DT Q
"RTN","ECHECK1",38,0)
 ;remove inactive procedures
"RTN","ECHECK1",39,0)
 S NODE1=$S(ECPROS[";ICPT(":+ECPROS,1:$P($G(^EC(725,+ECPROS,0)),U,5))
"RTN","ECHECK1",40,0)
 ; ATG-1003-32110 : By VMP
"RTN","ECHECK1",41,0)
 I NODE1'="" S NODE1=$$CPT^ICPTCOD(NODE1,$G(ECDT)) Q:+NODE1<0  I '$P(NODE1,U,7),'$G(ECACTIV) Q
"RTN","ECHECK1",42,0)
 S CNT=CNT+1
"RTN","ECHECK1",43,0)
 S ^TMP("ECPRO",$J,CNT)=ECPROS_"^"_ECPIEN
"RTN","ECHECK1",44,0)
 Q
"RTN","ECMFDSSU")
0^14^B36202160^B30002870
"RTN","ECMFDSSU",1,0)
ECMFDSSU ;ALB/JAM-Event Capture Management Filer DSS Unit ;12/16/14  16:51
"RTN","ECMFDSSU",2,0)
 ;;2.0;EVENT CAPTURE ;**25,30,33,126**;8 May 96;Build 8
"RTN","ECMFDSSU",3,0)
 ;
"RTN","ECMFDSSU",4,0)
FILE ;Used by the RPC broker to file DSS Units in file #724
"RTN","ECMFDSSU",5,0)
 ;     Variables passed in
"RTN","ECMFDSSU",6,0)
 ;       ECIEN  - IEN of #724, if editing
"RTN","ECMFDSSU",7,0)
 ;       ECDUNM - DSS Unit Name
"RTN","ECMFDSSU",8,0)
 ;       ECS    - Service
"RTN","ECMFDSSU",9,0)
 ;       ECM    - Medical Speciality
"RTN","ECMFDSSU",10,0)
 ;       ECTR   - Cost Center
"RTN","ECMFDSSU",11,0)
 ;       ECUN   - Unit Number
"RTN","ECMFDSSU",12,0)
 ;       ECST   - Status Flag (Active/Inactive)
"RTN","ECMFDSSU",13,0)
 ;       ECASC  - Associated Stop Code
"RTN","ECMFDSSU",14,0)
 ;       ECC    - Category
"RTN","ECMFDSSU",15,0)
 ;       ECDFDT - Default Data Entry Date
"RTN","ECMFDSSU",16,0)
 ;       ECPCE  - Send to PCE
"RTN","ECMFDSSU",17,0)
 ;       ECSCN  - Event Code Screens status
"RTN","ECMFDSSU",18,0)
 ;       ECCSC  - Credit stop code, can be used when PCE status is "no records"
"RTN","ECMFDSSU",19,0)
 ;       ECHAR4 - CHAR4 code, can be used when PCE status is "no records"
"RTN","ECMFDSSU",20,0)
 ;
"RTN","ECMFDSSU",21,0)
 ;     Variable return
"RTN","ECMFDSSU",22,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #724^Message
"RTN","ECMFDSSU",23,0)
 ;
"RTN","ECMFDSSU",24,0)
 N ECERR,ECX,ECFLG,ECRES,ECONAM
"RTN","ECMFDSSU",25,0)
 S ECERR=0 D CHKDT I ECERR Q
"RTN","ECMFDSSU",26,0)
 D VALDATA I ECERR Q
"RTN","ECMFDSSU",27,0)
 S ECIEN=$G(ECIEN),ECFLG=1,ECONAM="",ECC=$S(ECC="Y":1,1:0)
"RTN","ECMFDSSU",28,0)
 I ECIEN'="" S ECFLG=0 D  I ECERR D END Q
"RTN","ECMFDSSU",29,0)
 . I '$D(^ECD(ECIEN,0)) D  Q
"RTN","ECMFDSSU",30,0)
 . . S ECERR=1,^TMP($J,"ECMSG",1)="0^DSS Unit Not on File" Q
"RTN","ECMFDSSU",31,0)
 . D CATCHK^ECUMRPC1(.ECRES,ECIEN) I ECRES,ECC'=$P(^ECD(ECIEN,0),U,11) D 
"RTN","ECMFDSSU",32,0)
 . . S ECERR=1,^TMP($J,"ECMSG",1)="0^Category Changed, EC Screen exist"
"RTN","ECMFDSSU",33,0)
 . S ECONAM=$P($G(^ECD(ECIEN,0)),U)
"RTN","ECMFDSSU",34,0)
 D  I ECERR D END Q   ;Check name
"RTN","ECMFDSSU",35,0)
 . I (ECFLG)!((ECONAM'="")&(ECONAM'=ECDUNM)),$D(^ECD("B",ECDUNM)) D  Q
"RTN","ECMFDSSU",36,0)
 . . S ECERR=1,^TMP($J,"ECMSG",1)="0^DSS Unit Name already exist"
"RTN","ECMFDSSU",37,0)
 . I 'ECFLG K DIE S DIE="^ECD(",DA=ECIEN,DR=".01////"_ECDUNM D ^DIE
"RTN","ECMFDSSU",38,0)
 S ECPCE=$S(ECPCE="A":"A",ECPCE="O":"O",1:"N")
"RTN","ECMFDSSU",39,0)
 I ECPCE="N",$G(ECASC)="" D  D END Q
"RTN","ECMFDSSU",40,0)
 . S ECERR=1,^TMP($J,"ECMSG",1)="0^No associated stop code, Send to PCE=N" ;126 Corrected error message
"RTN","ECMFDSSU",41,0)
 I ECIEN="" D NEWIEN
"RTN","ECMFDSSU",42,0)
 K DA,DR,DIE
"RTN","ECMFDSSU",43,0)
 S ECST=$E($G(ECST)),ECST=$S(ECST="I":1,1:0),ECDFDT=$E($G(ECDFDT))
"RTN","ECMFDSSU",44,0)
 S ECDFDT=$S(ECDFDT="N":"N",1:"X"),DIE="^ECD(",DA=ECIEN
"RTN","ECMFDSSU",45,0)
 S DR="1////"_ECS_";2////"_ECM_";3////"_ECTR_";4////"_$G(ECUN)
"RTN","ECMFDSSU",46,0)
 S DR=DR_";5////"_ECST_";7////1;9////"_$S(ECPCE'="N":"@",1:$G(ECASC))
"RTN","ECMFDSSU",47,0)
 S DR=DR_";10////"_ECC_";11////"_ECDFDT_";13////"_ECPCE
"RTN","ECMFDSSU",48,0)
 S DR=DR_";14////"_$S(ECPCE'="N":"@",$G(ECCSC)="":"@",1:$G(ECCSC))_";15////"_$S(ECPCE'="N":"@",$G(ECHAR4)="":"@",1:$G(ECHAR4)) ;126 Add credit stop and char4 fields
"RTN","ECMFDSSU",49,0)
 D ^DIE I $D(DTOUT) D RECDEL D  D END Q
"RTN","ECMFDSSU",50,0)
 . S ^TMP($J,"ECMSG",1)="0^DSS Unit Record not Filed"
"RTN","ECMFDSSU",51,0)
 I 'ECFLG D ECSCRNS
"RTN","ECMFDSSU",52,0)
 S ^TMP($J,"ECMSG",1)="1^DSS Unit Record Filed"_U_ECIEN
"RTN","ECMFDSSU",53,0)
END K DIE,DIC,DR,DA,DO,ECIEN
"RTN","ECMFDSSU",54,0)
 Q
"RTN","ECMFDSSU",55,0)
VALDATA ;validate data
"RTN","ECMFDSSU",56,0)
 N ECRRX
"RTN","ECMFDSSU",57,0)
 D CHK^DIE(724,.01,"E",ECDUNM,.ECRRX) I ECRRX'=ECDUNM D  Q
"RTN","ECMFDSSU",58,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit Name"
"RTN","ECMFDSSU",59,0)
 D CHK^DIE(724,1,"E","`"_ECS,.ECRRX) I ECRRX'=ECS D  Q
"RTN","ECMFDSSU",60,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Service"
"RTN","ECMFDSSU",61,0)
 D CHK^DIE(724,2,"E","`"_ECM,.ECRRX) I ECRRX'=ECM D  Q
"RTN","ECMFDSSU",62,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Medical Speciality"
"RTN","ECMFDSSU",63,0)
 D CHK^DIE(724,3,"E","`"_ECTR,.ECRRX) I ECRRX'=ECTR D  Q
"RTN","ECMFDSSU",64,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Cost Center"
"RTN","ECMFDSSU",65,0)
 I $G(ECUN)'="" D CHK^DIE(724,4,"E",ECUN,.ECRRX) I ECRRX'=ECUN D  Q
"RTN","ECMFDSSU",66,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Unit Number"
"RTN","ECMFDSSU",67,0)
 I $G(ECASC)'="" D CHK^DIE(724,9,"E","`"_ECASC,.ECRRX) I ECRRX'=ECASC D  Q
"RTN","ECMFDSSU",68,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Stop Code" ;126 Corrected error message
"RTN","ECMFDSSU",69,0)
 I $G(ECCSC)'="" D CHK^DIE(724,14,"E","`"_ECCSC,.ECRRX) I ECRRX'=ECCSC S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Credit Stop Code" Q  ;126
"RTN","ECMFDSSU",70,0)
 I $G(ECHAR4)'="" D CHK^DIE(724,15,"E","`"_ECHAR4,.ECRRX) I ECRRX'=ECHAR4 S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid CHAR4 Code" Q  ;126
"RTN","ECMFDSSU",71,0)
 Q
"RTN","ECMFDSSU",72,0)
ECSCRNS ;Determine if event codes should be updated based on change of DSS Unit
"RTN","ECMFDSSU",73,0)
 ;status
"RTN","ECMFDSSU",74,0)
 ;  DSS Unit status changed from Active to Inactive, if EC screen status
"RTN","ECMFDSSU",75,0)
 ;      A - retain, do nothing,  B - inactiviate
"RTN","ECMFDSSU",76,0)
 ;  DSS Unit status changed from Inactive to Active, if EC screen status
"RTN","ECMFDSSU",77,0)
 ;      C - reactiviate,         D - remain inactive
"RTN","ECMFDSSU",78,0)
 ;
"RTN","ECMFDSSU",79,0)
 N ECD,ECINC,ZTDESC,ZTSAVE,ZTIO,ZTRTN,ZTDTH
"RTN","ECMFDSSU",80,0)
 I ($G(ECSCN)="")!(ECSCN="A")!(ECSCN="D") Q
"RTN","ECMFDSSU",81,0)
 I "^B^C^"']"^"_ECSCN_"^" Q
"RTN","ECMFDSSU",82,0)
 S ECD=ECIEN,ECINC=DT
"RTN","ECMFDSSU",83,0)
 I ECSCN="B" D
"RTN","ECMFDSSU",84,0)
 .S ZTDESC="DEALLOCATE DSS UNIT & INACTIVATE EVENT CODE SCREENS"
"RTN","ECMFDSSU",85,0)
 I ECSCN="C" D
"RTN","ECMFDSSU",86,0)
 .S ZTDESC="REACTIVIATE EVENT CODE SCREENS",ECINC="@"
"RTN","ECMFDSSU",87,0)
 S ZTRTN=$S(ECSCN="B":"DIK",1:"INSCRN")_"^ECDEAL",ZTDTH=$H
"RTN","ECMFDSSU",88,0)
 N ECSCN
"RTN","ECMFDSSU",89,0)
 S ECSCN=1,(ZTSAVE("ECD"),ZTSAVE("ECSCN"),ZTSAVE("ECINC"))="",ZTIO=""
"RTN","ECMFDSSU",90,0)
 D ^%ZTLOAD K ZTSK Q
"RTN","ECMFDSSU",91,0)
 D @ZTRTN
"RTN","ECMFDSSU",92,0)
 Q
"RTN","ECMFDSSU",93,0)
 ;
"RTN","ECMFDSSU",94,0)
RECDEL ; Delete record
"RTN","ECMFDSSU",95,0)
 I ECFLG S DA=ECIEN,DIK="^ECD(" D ^DIK K DA,DIK
"RTN","ECMFDSSU",96,0)
 Q
"RTN","ECMFDSSU",97,0)
NEWIEN ;Create new IEN in file #724
"RTN","ECMFDSSU",98,0)
 N DIC,DA,DD,DO
"RTN","ECMFDSSU",99,0)
 L +^ECD(0):3 ;126 Added lock time out as required by standard
"RTN","ECMFDSSU",100,0)
 S DIC=724,DIC(0)="L",X=ECDUNM
"RTN","ECMFDSSU",101,0)
 D FILE^DICN
"RTN","ECMFDSSU",102,0)
 L -^ECD(0)
"RTN","ECMFDSSU",103,0)
 S ECIEN=+Y
"RTN","ECMFDSSU",104,0)
 Q
"RTN","ECMFDSSU",105,0)
CHKDT ;Required Data Check
"RTN","ECMFDSSU",106,0)
 N I,C
"RTN","ECMFDSSU",107,0)
 S C=1
"RTN","ECMFDSSU",108,0)
 F I="ECDUNM","ECS","ECM","ECTR","ECC" D
"RTN","ECMFDSSU",109,0)
 .I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECMFDSSU",110,0)
 Q
"RTN","ECMFDSSU",111,0)
USER ;Used by the RPC broker to allocate or de-allocate users for DSS Units
"RTN","ECMFDSSU",112,0)
 ;in file #200
"RTN","ECMFDSSU",113,0)
 ;     Variables passed in
"RTN","ECMFDSSU",114,0)
 ;       ECIEN      - IEN of DSS Unit in file #724
"RTN","ECMFDSSU",115,0)
 ;       ECUSR0..n  - Users to allocate/deallocate to DSS Unit
"RTN","ECMFDSSU",116,0)
 ;
"RTN","ECMFDSSU",117,0)
 ;     Variable return
"RTN","ECMFDSSU",118,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #724^Message
"RTN","ECMFDSSU",119,0)
 ;
"RTN","ECMFDSSU",120,0)
 N EDUZ,ECERR,ECI,ECX,USER,DIC,DIK,X,Y,DA
"RTN","ECMFDSSU",121,0)
 S (EDUZ,ECERR)=0,ECIEN=$G(ECIEN)
"RTN","ECMFDSSU",122,0)
 I ECIEN="" S ^TMP($J,"ECMSG",1)="0^DSS Unit missing" Q
"RTN","ECMFDSSU",123,0)
 D  I ECERR Q
"RTN","ECMFDSSU",124,0)
 . I '$D(^ECD(ECIEN,0)) D
"RTN","ECMFDSSU",125,0)
 . . S ECERR=1,^TMP($J,"ECMSG",1)="0^DSS Unit Not on File"
"RTN","ECMFDSSU",126,0)
 F ECI=0:1 S ECX="ECUSR"_ECI Q:'$D(@ECX)  S:@ECX'="" USER(@ECX)=""
"RTN","ECMFDSSU",127,0)
 F  S EDUZ=$O(^VA(200,EDUZ)) Q:'EDUZ  I $D(^VA(200,EDUZ,"EC",ECIEN,0)) D
"RTN","ECMFDSSU",128,0)
 . I $D(USER(EDUZ)) K USER(EDUZ) Q
"RTN","ECMFDSSU",129,0)
 . K DA,DIK S DA(1)=EDUZ,DA=ECIEN,DIK="^VA(200,"_DA(1)_",""EC"","
"RTN","ECMFDSSU",130,0)
 . D ^DIK K USER(EDUZ)
"RTN","ECMFDSSU",131,0)
 ;add users for DSS Unit
"RTN","ECMFDSSU",132,0)
 S EDUZ=0 F  S EDUZ=$O(USER(EDUZ)) Q:'EDUZ  D
"RTN","ECMFDSSU",133,0)
 . K DIC,DD,DO S DIC=200,DIC(0)="QNMX",X=EDUZ D ^DIC I Y<0 Q
"RTN","ECMFDSSU",134,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=EDUZ,DIC("P")=$P(^DD(200,720,0),U,2)
"RTN","ECMFDSSU",135,0)
 . S DINUM=ECIEN,DIC="^VA(200,"_DA(1)_",""EC"",",X=ECIEN
"RTN","ECMFDSSU",136,0)
 . D FILE^DICN
"RTN","ECMFDSSU",137,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_ECIEN K DINUM
"RTN","ECMFDSSU",138,0)
 Q
"RTN","ECMFDSSU",139,0)
DSSU ;Used by the RPC broker to allocate or de-allocate DSS Units for a user
"RTN","ECMFDSSU",140,0)
 ;in file #200
"RTN","ECMFDSSU",141,0)
 ;     Variables passed in
"RTN","ECMFDSSU",142,0)
 ;       ECIEN   - User IEN in file #200
"RTN","ECMFDSSU",143,0)
 ;       ECD0..n - IEN of DSS Unit in file #724 to allocate/deallocate
"RTN","ECMFDSSU",144,0)
 ;       
"RTN","ECMFDSSU",145,0)
 ;
"RTN","ECMFDSSU",146,0)
 ;     Variable return
"RTN","ECMFDSSU",147,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #200^Message
"RTN","ECMFDSSU",148,0)
 ;
"RTN","ECMFDSSU",149,0)
 N EDU,ECERR,ECI,ECX,ECDSSU,DIC,DIK,DA,X,Y
"RTN","ECMFDSSU",150,0)
 S (EDU,ECERR)=0,ECIEN=$G(ECIEN)
"RTN","ECMFDSSU",151,0)
 I ECIEN="" S ^TMP($J,"ECMSG",1)="0^User missing" Q
"RTN","ECMFDSSU",152,0)
 D  I ECERR Q
"RTN","ECMFDSSU",153,0)
 . S DIC=200,DIC(0)="QNX",X=ECIEN D ^DIC D:Y<0
"RTN","ECMFDSSU",154,0)
 . . S ECERR=1,^TMP($J,"ECMSG",1)="0^User Not on File"
"RTN","ECMFDSSU",155,0)
 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  S:@ECX'="" ECDSSU(@ECX)=""
"RTN","ECMFDSSU",156,0)
 F  S EDU=$O(^VA(200,ECIEN,"EC",EDU)) Q:'EDU  D
"RTN","ECMFDSSU",157,0)
 . I $D(ECDSSU(EDU)) K ECDSSU(EDU) Q
"RTN","ECMFDSSU",158,0)
 . K DA,DIK S DA(1)=ECIEN,DA=EDU,DIK="^VA(200,"_DA(1)_",""EC"","
"RTN","ECMFDSSU",159,0)
 . D ^DIK
"RTN","ECMFDSSU",160,0)
 ;add DSS Units for user
"RTN","ECMFDSSU",161,0)
 S EDU=0 F  S EDU=$O(ECDSSU(EDU)) Q:'EDU  D
"RTN","ECMFDSSU",162,0)
 . I '$D(^ECD(EDU,0)) Q
"RTN","ECMFDSSU",163,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(200,720,0),U,2)
"RTN","ECMFDSSU",164,0)
 . S DINUM=EDU,DIC="^VA(200,"_DA(1)_",""EC"",",X=EDU
"RTN","ECMFDSSU",165,0)
 . D FILE^DICN
"RTN","ECMFDSSU",166,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_ECIEN
"RTN","ECMFDSSU",167,0)
 Q
"RTN","ECOSSUM")
0^5^B100421948^B96916049
"RTN","ECOSSUM",1,0)
ECOSSUM ;BIR/DMA,RHK,JPW - Ordering Section Summary ;11/18/14  16:03
"RTN","ECOSSUM",2,0)
 ;;2.0;EVENT CAPTURE;**5,8,18,47,72,95,119,126**;8 May 96;Build 8
"RTN","ECOSSUM",3,0)
EN ;entry point from menu option
"RTN","ECOSSUM",4,0)
 W !
"RTN","ECOSSUM",5,0)
 K DIC S DIC=723,DIC(0)="AQEMZ",DIC("A")="Select Ordering Section: " D ^DIC K DIC
"RTN","ECOSSUM",6,0)
 I Y<0 G EXIT
"RTN","ECOSSUM",7,0)
 S ECOS=+Y,ECOSN=$P(Y,"^",2)
"RTN","ECOSSUM",8,0)
 D RANGE
"RTN","ECOSSUM",9,0)
 I '$G(ECLOOP)!'$G(ECSD)!'$G(ECED) G EXIT
"RTN","ECOSSUM",10,0)
 W !
"RTN","ECOSSUM",11,0)
 S JJ=$$ASKLOC^ECRUTL
"RTN","ECOSSUM",12,0)
 I 'JJ G EXIT
"RTN","ECOSSUM",13,0)
 W !
"RTN","ECOSSUM",14,0)
 S JJ=$$ASKDSS^ECRUTL
"RTN","ECOSSUM",15,0)
 I 'JJ G EXIT
"RTN","ECOSSUM",16,0)
 W !
"RTN","ECOSSUM",17,0)
 D DEVICE
"RTN","ECOSSUM",18,0)
 I POP G EXIT
"RTN","ECOSSUM",19,0)
 I $G(ZTSK) G EXIT
"RTN","ECOSSUM",20,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECOSSUM",21,0)
 D START
"RTN","ECOSSUM",22,0)
 D HOME^%ZIS
"RTN","ECOSSUM",23,0)
 G EXIT
"RTN","ECOSSUM",24,0)
 Q
"RTN","ECOSSUM",25,0)
 ;
"RTN","ECOSSUM",26,0)
START ;queued entry point or continuation
"RTN","ECOSSUM",27,0)
 D PROCESS
"RTN","ECOSSUM",28,0)
 I $G(ECPTYP)="E" D EXPORT,EXIT Q  ;119
"RTN","ECOSSUM",29,0)
 U IO D PRINT
"RTN","ECOSSUM",30,0)
 I $D(ECGUI) D EXIT Q
"RTN","ECOSSUM",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECOSSUM",32,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECOSSUM",33,0)
 Q
"RTN","ECOSSUM",34,0)
 ;
"RTN","ECOSSUM",35,0)
RANGE ;get any date range
"RTN","ECOSSUM",36,0)
 N ECSTDT,ECENDDT
"RTN","ECOSSUM",37,0)
 W !!,?5,"Enter a Begin Date and End Date for the Event Capture "
"RTN","ECOSSUM",38,0)
 W !,?5,"Ordering Section report.",!
"RTN","ECOSSUM",39,0)
 S (ECSD,ECED)=0
"RTN","ECOSSUM",40,0)
 F  D  Q:ECSD>0  Q:'$G(ECLOOP)
"RTN","ECOSSUM",41,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECOSSUM",42,0)
 .S ECSD=ECSTDT
"RTN","ECOSSUM",43,0)
 Q:'$G(ECLOOP)!'$G(ECSD)
"RTN","ECOSSUM",44,0)
 F  D  Q:ECED>0  Q:'$G(ECLOOP)
"RTN","ECOSSUM",45,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECOSSUM",46,0)
 .S ECED=ECENDDT
"RTN","ECOSSUM",47,0)
 .I ECED>(DT+1) D
"RTN","ECOSSUM",48,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECOSSUM",49,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECOSSUM",50,0)
 ..S ECED=0
"RTN","ECOSSUM",51,0)
 Q 
"RTN","ECOSSUM",52,0)
 ;
"RTN","ECOSSUM",53,0)
DEVICE ;select output device
"RTN","ECOSSUM",54,0)
 W !,"This report is formatted for 132 column output.",!
"RTN","ECOSSUM",55,0)
 K IOP S %ZIS="QM" D ^%ZIS
"RTN","ECOSSUM",56,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECOSSUM",57,0)
 I $D(IO("Q")) D
"RTN","ECOSSUM",58,0)
 .S ZTRTN="START^ECOSSUM",ZTDESC="EC Ordering Section Summary"
"RTN","ECOSSUM",59,0)
 .S ZTSAVE("ECSD")="",ZTSAVE("ECED")="",ZTSAVE("ECOS")="",ZTSAVE("ECOSN")=""
"RTN","ECOSSUM",60,0)
 .S ZTSAVE("ECLOC(")="",ZTSAVE("ECDSSU(")=""
"RTN","ECOSSUM",61,0)
 .D ^%ZTLOAD
"RTN","ECOSSUM",62,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECOSSUM",63,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECOSSUM",64,0)
 Q
"RTN","ECOSSUM",65,0)
 ;
"RTN","ECOSSUM",66,0)
PROCESS ;get data to print
"RTN","ECOSSUM",67,0)
 N EC,ECD,ECDA,ECPA,ECPATN,ECSS,ECSSN,ECP,ECPN,ECLOCA,ECUNIT,ECCAT,ECFILE,ECPSY,ECPSYN,ECPRV,ECPRVN,EC725,ECLOCN,ECUNITN,ECEPN,ECEPC ;119
"RTN","ECOSSUM",68,0)
 N NLOC,NUNIT,JJ,ECPXD
"RTN","ECOSSUM",69,0)
 K ^TMP("ECOS",$J)
"RTN","ECOSSUM",70,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECOSSUM",71,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",72,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECOSSUM",73,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",74,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECOSSUM",75,0)
 S ECD=ECSD
"RTN","ECOSSUM",76,0)
 F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECOSSUM",77,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0)) I $P(EC,"^",12)=ECOS D
"RTN","ECOSSUM",78,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECOSSUM",79,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECOSSUM",80,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECOSSUM",81,0)
 ..S ECLOCN=$G(NLOC(ECLOCA)),ECUNITN=$G(NUNIT(ECUNIT)) ;119 Get location and unit names
"RTN","ECOSSUM",82,0)
 ..S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECOSSUM",83,0)
 ..S ECCAT=+$P(EC,U,8)
"RTN","ECOSSUM",84,0)
 ..S ECPSY=+$O(^ECJ("AP",ECLOCA,ECUNIT,ECCAT,ECP,""))
"RTN","ECOSSUM",85,0)
 ..S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECOSSUM",86,0)
 ..S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECOSSUM",87,0)
 ..I ECFILE="UNKNOWN" S (ECPN,ECEPN)="UNKNOWN" ;119
"RTN","ECOSSUM",88,0)
 ..S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD="",ECEPC="" ;119
"RTN","ECOSSUM",89,0)
 ..I ECCPT'="" D
"RTN","ECOSSUM",90,0)
 ...S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(EC,"^",3)),ECCPT=$P(ECPXD,"^",2)
"RTN","ECOSSUM",91,0)
 ..I ECFILE=81 S (ECPN,ECEPN)=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN") ;119
"RTN","ECOSSUM",92,0)
 ..I ECFILE=725 D
"RTN","ECOSSUM",93,0)
 ...S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^"),ECEPN=$P(EC725,U),ECEPC=$P(EC725,U,2) ;119
"RTN","ECOSSUM",94,0)
 ..S ECPN=ECPN_"~"_ECCPT ;119,126
"RTN","ECOSSUM",95,0)
 ..;ALB/JAM - Get Procedure CPT modifiers
"RTN","ECOSSUM",96,0)
 ..S ECMODF=0 I $O(^ECH(ECDA,"MOD",0))'="" D
"RTN","ECOSSUM",97,0)
 ...K ECMOD S ECMODF=$$MOD^ECUTL(ECDA,"E",.ECMOD)
"RTN","ECOSSUM",98,0)
 ..S (ECPA,ECPATN,ECSS)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECOSSUM",99,0)
 ..S ECPATN=$P(ECPA,"^",1),ECSS=$P(ECPA,"^",9)
"RTN","ECOSSUM",100,0)
 ..S:+ECSS ECSSN=$E(ECSS,6,10) S:ECSS="" ECSSN="UNKN"
"RTN","ECOSSUM",101,0)
 ..S:ECPATN="" ECPATN="UNKNOWN" S ECPATN=ECPATN_"^"_ECSSN
"RTN","ECOSSUM",102,0)
 ..S ECV=+$P(EC,"^",10)
"RTN","ECOSSUM",103,0)
 ..K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(ECDA,.ECPRV) I 'ECPRV D  K ECPRV
"RTN","ECOSSUM",104,0)
 ...M ^TMP("ECOS",$J,$S($G(ECPTYP)="E":ECLOCN,1:ECLOCA),$S($G(ECPTYP)="E":ECUNITN,1:ECUNIT),ECPATN,ECDA,"PRV")=ECPRV ;119 Use names rather than numbers if exporting
"RTN","ECOSSUM",105,0)
 ..I $G(ECPTYP)'="E" S ^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA)=ECSSN_"^"_ECPN_"^"_ECPSYN_"^"_ECV ;119,126
"RTN","ECOSSUM",106,0)
 ..S:$G(ECPTYP)="E" ^TMP("ECOS",$J,ECLOCN,ECUNITN,ECPATN,ECDA)=ECSSN_U_ECCPT_U_ECEPC_U_ECEPN_U_ECPSYN_U_ECV ;119,126
"RTN","ECOSSUM",107,0)
 ..I ECMODF D
"RTN","ECOSSUM",108,0)
 ...M ^TMP("ECOS",$J,$S($G(ECPTYP)="E":ECLOCN,1:ECLOCA),$S($G(ECPTYP)="E":ECUNITN,1:ECUNIT),ECPATN,ECDA,"MOD")=ECMOD ;119 use names rather than numbers when exporting
"RTN","ECOSSUM",109,0)
 Q
"RTN","ECOSSUM",110,0)
 ;
"RTN","ECOSSUM",111,0)
PRINT ;output report
"RTN","ECOSSUM",112,0)
 N ECDA,ECLOCA,ECUNIT,ECPATN,ECSSN,ECPN,ECV,ECPSYN ;126
"RTN","ECOSSUM",113,0)
 N PAGE,QFLAG,DASH,DASH2,PRNTDT,JJ,SS,ALOC,AUNIT,LOC,UNNAME,UNIT,DATA,PTNAME,PROV,PROVN,V,X,Y
"RTN","ECOSSUM",114,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",130)="",$P(DASH2,"-",64)=""
"RTN","ECOSSUM",115,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD=Y S Y=$P(ECED,".",1) D DD^%DT S ECED=Y
"RTN","ECOSSUM",116,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECOSSUM",117,0)
 S ECV("L")=0,ECV("O")=0,ECV("P")=0,ECV("U")=0
"RTN","ECOSSUM",118,0)
 ;if no data exists then print the header and quit
"RTN","ECOSSUM",119,0)
 I '$D(^TMP("ECOS",$J)) D  Q
"RTN","ECOSSUM",120,0)
 .S LOC="" D HEAD
"RTN","ECOSSUM",121,0)
 .W !!,?26,"No data for this Ordering Section for the date range specified.",!!
"RTN","ECOSSUM",122,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECOSSUM",123,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",124,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECOSSUM",125,0)
 ;if there's data in ^TMP then need to present the data alphabetically;
"RTN","ECOSSUM",126,0)
 ;put locations and units in alpha ordered array
"RTN","ECOSSUM",127,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",128,0)
 .S ALOC($P(ECLOC(JJ),"^",2))=$P(ECLOC(JJ),"^",1)
"RTN","ECOSSUM",129,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",130,0)
 .S AUNIT($P(ECDSSU(JJ),"^",2))=$P(ECDSSU(JJ),"^",1)
"RTN","ECOSSUM",131,0)
 ;process the ^TMP global data in alpha order for location and unit
"RTN","ECOSSUM",132,0)
 S LOC="" F  S LOC=$O(ALOC(LOC)) Q:LOC=""  S ECLOCA=ALOC(LOC),ECV("L")=0 D  Q:QFLAG
"RTN","ECOSSUM",133,0)
 .D HEAD Q:QFLAG  ;always start a new location at top of page
"RTN","ECOSSUM",134,0)
 .S UNIT="" F  S UNIT=$O(AUNIT(UNIT)) Q:UNIT=""  S ECUNIT=AUNIT(UNIT),ECV("U")=0 D  Q:QFLAG
"RTN","ECOSSUM",135,0)
 ..I '$D(^TMP("ECOS",$J,ECLOCA,ECUNIT)) Q
"RTN","ECOSSUM",136,0)
 ..S UNNAME=$E(UNIT,1,20)
"RTN","ECOSSUM",137,0)
 ..D:($Y+6>IOSL) HEAD Q:QFLAG  W !,UNNAME ;126 Removed excess linefeed
"RTN","ECOSSUM",138,0)
 ..S ECPATN="" F  S ECPATN=$O(^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN)) Q:ECPATN=""  S ECV("P")=0 D  Q:QFLAG
"RTN","ECOSSUM",139,0)
 ...S PTNAME=$P(ECPATN,"^",1),PTNAME=$E(PTNAME,1,22),ECSSN=$P(ECPATN,"^",2)
"RTN","ECOSSUM",140,0)
 ...W ?24,PTNAME,?48,ECSSN
"RTN","ECOSSUM",141,0)
 ...S ECDA="" F  S ECDA=$O(^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA)) Q:ECDA=""  S DATA=^(ECDA) D  Q:QFLAG
"RTN","ECOSSUM",142,0)
 ....S ECPN=$P(DATA,"^",2),ECPN=$S($P(ECPN,"~",2)'="":$J($P(ECPN,"~",2)_" ",6),1:"")_$P(ECPN,"~") ;126
"RTN","ECOSSUM",143,0)
 ....S ECV=$P(DATA,"^",4),ECV=ECV\1,ECPSYN=$P(DATA,U,3) D  ;126
"RTN","ECOSSUM",144,0)
 .....F V="L","O","P","U" S ECV(V)=ECV(V)+ECV
"RTN","ECOSSUM",145,0)
 .....S:+ECV>9999 ECV="9999+" S ECV=$$RJ^XLFSTR(ECV,5," ") ;unusually high individual volume figure
"RTN","ECOSSUM",146,0)
 ....K PROV M PROV=^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"PRV")
"RTN","ECOSSUM",147,0)
 ....K ECMOD M ECMOD=^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"MOD")
"RTN","ECOSSUM",148,0)
 ....W ?54,ECPN,?112,ECV,!,?25,$P($G(PROV(1)),"^",2),?60,ECPSYN K PROV(1) ;126
"RTN","ECOSSUM",149,0)
 ....D:($Y+6>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",150,0)
 ....;ALB/JAM - write cpt procedure modifiers on same line with providers
"RTN","ECOSSUM",151,0)
 ....S MOD=0,PROVN=1 F  S MOD=$O(ECMOD(MOD)),PROVN=$O(PROV(PROVN)) Q:(MOD="")&(PROVN="")  D  I QFLAG Q
"RTN","ECOSSUM",152,0)
 .....I ($Y+6>IOSL) D HEAD Q:QFLAG  W !?54,ECPN
"RTN","ECOSSUM",153,0)
 .....W !
"RTN","ECOSSUM",154,0)
 .....I PROVN'="" W ?25,$P($G(PROV(PROVN)),"^",2) K PROV(PROVN) ;126
"RTN","ECOSSUM",155,0)
 .....I MOD'="" W ?60,"- ",MOD," ",$P(ECMOD(MOD),U,3) K ECMOD(MOD) ;126
"RTN","ECOSSUM",156,0)
 ....W ! ;start a new line
"RTN","ECOSSUM",157,0)
 ...;write subtotal for patient
"RTN","ECOSSUM",158,0)
 ...Q:QFLAG  D:($Y+6>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",159,0)
 ...W ?54,DASH2,!
"RTN","ECOSSUM",160,0)
 ...W ?24,"Subtotal for "_$P(ECPATN,"^",1)_":",?112,$$RJ^XLFSTR(ECV("P"),5," "),!! ;126
"RTN","ECOSSUM",161,0)
 ..;write total for unit
"RTN","ECOSSUM",162,0)
 ..Q:QFLAG  D:($Y+6>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",163,0)
 ..W !,"Subtotal for DSS Unit "_UNIT_":",?111,$$RJ^XLFSTR(ECV("U"),6," "),! ;126
"RTN","ECOSSUM",164,0)
 .;write the total for the location
"RTN","ECOSSUM",165,0)
 .Q:QFLAG  D:($Y+6>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",166,0)
 .W !!,"Total for Location "_LOC_":",?111,$$RJ^XLFSTR(ECV("L"),6," "),! ;126
"RTN","ECOSSUM",167,0)
 ;write the ordering section grandtotal
"RTN","ECOSSUM",168,0)
 Q:QFLAG  D:($Y+8>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",169,0)
 W !!!,"Grand Total for Ordering Section "_ECOSN_":",?111,$$RJ^XLFSTR(ECV("O"),6," "),! ;126
"RTN","ECOSSUM",170,0)
 ;all done
"RTN","ECOSSUM",171,0)
 D FOOTER  ;print footer on last page
"RTN","ECOSSUM",172,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECOSSUM",173,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",174,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECOSSUM",175,0)
 Q
"RTN","ECOSSUM",176,0)
HEAD ;header
"RTN","ECOSSUM",177,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",178,0)
 I PAGE>0 D FOOTER
"RTN","ECOSSUM",179,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECOSSUM",180,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECOSSUM",181,0)
 S PAGE=PAGE+1
"RTN","ECOSSUM",182,0)
 W !,?26,"Event Capture Ordering Section Summary for ",ECOSN,?105,"Page: ",PAGE
"RTN","ECOSSUM",183,0)
 W !,?26,"for the Date Range ",$$FMTE^XLFDT(ECSD)," to ",$$FMTE^XLFDT(ECED),?102,"Printed: "_PRNTDT
"RTN","ECOSSUM",184,0)
 W !,?26,"Location: ",LOC,!
"RTN","ECOSSUM",185,0)
 W !,"DSS Unit",?24,"Patient",?48,"SSN",?54,"Procedure",?114,"Vol." ;126
"RTN","ECOSSUM",186,0)
 W !,?25,"Provider(s)",?60,"Synonym",!,?60,"- Modifier(s)" ;126
"RTN","ECOSSUM",187,0)
 W !,DASH ;126 Removed extra line feed
"RTN","ECOSSUM",188,0)
 Q
"RTN","ECOSSUM",189,0)
 ;
"RTN","ECOSSUM",190,0)
FOOTER ;print page footer
"RTN","ECOSSUM",191,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECOSSUM",192,0)
 W !?4,"and/or a combination of these."
"RTN","ECOSSUM",193,0)
 Q
"RTN","ECOSSUM",194,0)
 ;
"RTN","ECOSSUM",195,0)
EXIT ;common exit point
"RTN","ECOSSUM",196,0)
 D ^ECKILL
"RTN","ECOSSUM",197,0)
 D:'$D(ECGUI) ^%ZISC
"RTN","ECOSSUM",198,0)
 K ^TMP("ECOS",$J)
"RTN","ECOSSUM",199,0)
 K JJ,X,Y,ZTSK,IO("Q"),DIR,DIRUT,DTOUT,DUOUT,ECOS,ECOSN,ECSD,ECED,ECLOOP,ECLOC,ECDSSU
"RTN","ECOSSUM",200,0)
 Q
"RTN","ECOSSUM",201,0)
 ;
"RTN","ECOSSUM",202,0)
EXPORT ;119 Section added for exporting data to excel
"RTN","ECOSSUM",203,0)
 N CNT,LOC,UNIT,PAT,IEN,DATA,SUB,MODCNT,PRCNT
"RTN","ECOSSUM",204,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="ORDERING SECTION^LOCATION^DSS UNIT^PATIENT^SSN^CPT CODE^PROCEDURE CODE^PROCEDURE NAME (DESCRIPTION)^SYNONYM^VOLUME" ;126
"RTN","ECOSSUM",205,0)
 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_"^CPT MOD #1^CPT MOD #2^CPT MOD #3^PROVIDER #1^PROVIDER #2^PROVIDER #3^PROVIDER #4^PROVIDER #5^PROVIDER #6^PROVIDER #7" ;126
"RTN","ECOSSUM",206,0)
 I '$D(^TMP("ECOS",$J)) Q  ;Nothing to report
"RTN","ECOSSUM",207,0)
 S LOC="" F  S LOC=$O(^TMP("ECOS",$J,LOC)) Q:LOC=""  D
"RTN","ECOSSUM",208,0)
 .S UNIT="" F  S UNIT=$O(^TMP("ECOS",$J,LOC,UNIT)) Q:UNIT=""  D
"RTN","ECOSSUM",209,0)
 ..S PAT="" F  S PAT=$O(^TMP("ECOS",$J,LOC,UNIT,PAT)) Q:PAT=""  D
"RTN","ECOSSUM",210,0)
 ...S IEN=0 F  S IEN=$O(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN)) Q:'+IEN  D
"RTN","ECOSSUM",211,0)
 ....S DATA=^TMP("ECOS",$J,LOC,UNIT,PAT,IEN)
"RTN","ECOSSUM",212,0)
 ....S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=ECOSN_U_LOC_U_UNIT_U_$P(PAT,U)_U_$P(DATA,U)_U_$P(DATA,U,2)_U_$P(DATA,U,3)_U_$P(DATA,U,4)_U_$P(DATA,U,5)_U_$P(DATA,U,6) ;126
"RTN","ECOSSUM",213,0)
 ....S SUB=0,MODCNT=0 F  S:SUB'="" SUB=$O(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN,"MOD",SUB)) Q:MODCNT=3  S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$S(SUB'="":SUB_" "_$P($G(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN,"MOD",SUB)),U,3),1:""),MODCNT=MODCNT+1
"RTN","ECOSSUM",214,0)
 ....S SUB=0,PRCNT=0 F  S:SUB'="" SUB=$O(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN,"PRV",SUB)) Q:PRCNT=7  S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$S(SUB="":"",1:$P($G(^TMP("ECOS",$J,LOC,UNIT,PAT,IEN,"PRV",SUB)),U,2)) S PRCNT=PRCNT+1
"RTN","ECOSSUM",215,0)
 Q
"RTN","ECPCER")
0^6^B35285752^B35305594
"RTN","ECPCER",1,0)
ECPCER ;BIR/JPW - Event Capture PCE Data Summary ;10/9/14  16:43
"RTN","ECPCER",2,0)
 ;;2.0;EVENT CAPTURE;**4,18,23,47,72,95,119,114,126**;8 May 96;Build 8
"RTN","ECPCER",3,0)
 ;
"RTN","ECPCER",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECPCER",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","ECPCER",6,0)
 ;
"RTN","ECPCER",7,0)
EN ; entry point
"RTN","ECPCER",8,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPCER",9,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPCER",10,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPCER",11,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPCER",12,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="ECS/PCE PATIENT SUMMARY",ZTRTN="SUM^ECPCER",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPCER",13,0)
SUM ; entry when queued
"RTN","ECPCER",14,0)
 N ECEPN,ECPCODE,ECEXDS,ECEI ;119
"RTN","ECPCER",15,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL Q  ;119
"RTN","ECPCER",16,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPCER",17,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPCER",18,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D HDR1
"RTN","ECPCER",19,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F  S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F  S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPCER",20,0)
 D FOOTER  ;print footer on last page
"RTN","ECPCER",21,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPCER",22,0)
 W ! I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPCER",23,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPCER",24,0)
 Q
"RTN","ECPCER",25,0)
PAGE ; end of page
"RTN","ECPCER",26,0)
 I $G(X)'["?" D FOOTER
"RTN","ECPCER",27,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPCER",28,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPCER",29,0)
 D HDR1
"RTN","ECPCER",30,0)
 Q
"RTN","ECPCER",31,0)
HDR1 ; print heading without categories
"RTN","ECPCER",32,0)
 W:$Y @IOF
"RTN","ECPCER",33,0)
 ;W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"CPT CODE (DIAGNOSIS)",!?78,"PROCEDURE (CPT) MODIFIER"
"RTN","ECPCER",34,0)
 W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"PROVIDER"
"RTN","ECPCER",35,0)
 W !,"LOCATION",?25,"CLINIC (STOP CODE)",?78,"CPT CODE" ;126
"RTN","ECPCER",36,0)
 W !,?25,"DIAGNOSIS",?78,"PROCEDURE (CPT) MODIFIER",!
"RTN","ECPCER",37,0)
 F LINE=1:1:132 W "-"
"RTN","ECPCER",38,0)
 W !
"RTN","ECPCER",39,0)
 Q
"RTN","ECPCER",40,0)
FOOTER ;print page footer
"RTN","ECPCER",41,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECPCER",42,0)
 W !?4,"and/or a combination of these."
"RTN","ECPCER",43,0)
 Q
"RTN","ECPCER",44,0)
 ;
"RTN","ECPCER",45,0)
SET ; set data
"RTN","ECPCER",46,0)
 I $G(ECPTYP)'="E" I $Y+10>IOSL D PAGE I ECOUT Q  ;119
"RTN","ECPCER",47,0)
 Q:'$D(^ECH(ECFN,"PCE"))  S ECEC=$G(^ECH(ECFN,"PCE"))
"RTN","ECPCER",48,0)
 I '$P($G(^ECH(ECFN,"P")),"^",7) Q
"RTN","ECPCER",49,0)
 S ECL=+$P(ECEC,"~",4),ECCPT=+$P(ECEC,"~",10),ECD=+$P(ECEC,"~",3),ECV=+$P(ECEC,"~",9),ECDX=+$P(ECEC,"~",11),ECID=$P(ECEC,"~",5),ECDT=+$P(ECEC,"~")
"RTN","ECPCER",50,0)
 S ECDN=$S($P($G(^SC(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",51,0)
 S ECPS=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"~")),ECCPT=$S(+ECPS>0:$P(ECPS,"^",2),1:""),ECEPN=$S(+ECPS>0:$P(ECPS,U,3),1:""),ECPS=$S(+ECPS>0:$P(ECPS,"^",2)_" "_$P(ECPS,"^",3),1:"CPT NAME UNKNOWN") ;119
"RTN","ECPCER",52,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",53,0)
 S ECID=$S($P($G(^DIC(40.7,ECID,0)),"^",2)]"":$P(^(0),"^",2),1:"DSS ID UNKNOWN")
"RTN","ECPCER",54,0)
 ; Changes for ICD10
"RTN","ECPCER",55,0)
 N ECCS
"RTN","ECPCER",56,0)
 S ECCS=$$SINFO^ICDEX("DIAG",$P(ECEC,"~")) ; Supported by ICR 5747
"RTN","ECPCER",57,0)
 S ECDXN=$$ICDDX^ICDEX(ECDX,$P(ECEC,"~"),+ECCS,"I") ; Supported by ICR 5747
"RTN","ECPCER",58,0)
 S ECDXN=$S($P(ECDXN,U,1)=-1:"UNKNOWN",1:$P(ECDXN,U,2))
"RTN","ECPCER",59,0)
 S ECPN=$S($P(ECEC,"~",16)]"":$P(ECEC,"~",16),1:ECPS)
"RTN","ECPCER",60,0)
 S ECPCODE="" ;119
"RTN","ECPCER",61,0)
 I $P(^ECH(ECFN,0),U,9)["EC" S:$P(ECEC,"~",16)]"" ECEPN=$$GET1^DIQ(721,ECFN,8) S ECPCODE=$P($P(ECEC,"~",16)," ") ;119
"RTN","ECPCER",62,0)
 S ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPCER",63,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPCER",64,0)
 S ECDT=$$FMTE^XLFDT(ECDT)
"RTN","ECPCER",65,0)
 ;get secondary diagnosis codes, ALB/JAM
"RTN","ECPCER",66,0)
 S DXS=0,ECI=2,ECEI=1 F  S DXS=$O(^ECH(ECFN,"DX",DXS)) Q:'DXS  D  ;119
"RTN","ECPCER",67,0)
 . S DXSIEN=+$G(^ECH(ECFN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECPCER",68,0)
 . S ECDXSN=$$ICDDX^ICDEX(DXSIEN,$P(ECEC,"~"),+ECCS,"I")
"RTN","ECPCER",69,0)
 . S ECDXSN=$S($P(ECDXSN,U,1)=-1:"UNKNOWN",1:$P(ECDXSN,U,2))
"RTN","ECPCER",70,0)
 . I $L($G(ECDXS(ECI)))+$L(ECDXSN)>52 S ECI=ECI+1
"RTN","ECPCER",71,0)
 . I $G(ECDXS(ECI))="" S ECDXS(ECI)="Secondary Dx: "
"RTN","ECPCER",72,0)
 . S ECDXS(ECI)=ECDXS(ECI)_$S($L(ECDXS(ECI))=14:"",1:", ")_ECDXSN
"RTN","ECPCER",73,0)
 . S ECEXDS(ECEI)=ECDXSN,ECEI=ECEI+1 ;119
"RTN","ECPCER",74,0)
 S ECMOD="" I $D(^ECH(ECFN,"PCE1")) S ECMOD=^("PCE1")
"RTN","ECPCER",75,0)
 I $G(ECPTYP)="E" Q  ;119
"RTN","ECPCER",76,0)
PRT W !,ECDT,?25,ECPN_" ("_ECV_")",?78,ECUN,!
"RTN","ECPCER",77,0)
 W $E(ECLN,1,22),?25,ECDN_" ("_ECID_")",?78,ECCPT,!
"RTN","ECPCER",78,0)
 W ?25,"Primary DX: ",ECDXN
"RTN","ECPCER",79,0)
 ;ALB/JAM print CPT modifiers and secondary diagnosis code
"RTN","ECPCER",80,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D  I ECOUT Q
"RTN","ECPCER",81,0)
 . S MODESC=$$MODP^ICPTMOD(ECCPT,MOD,"E",$P(ECEC,"~")) I +MODESC'>0 Q
"RTN","ECPCER",82,0)
 . W ?25,$S(I>1:$G(ECDXS(I)),1:""),?79,"- ",MOD," ",$P(MODESC,"^",2),!
"RTN","ECPCER",83,0)
 . K ECDXS(I) I ($Y+6)>IOSL D PAGE I ECOUT Q
"RTN","ECPCER",84,0)
 W:ECMOD="" ! S DXS=""
"RTN","ECPCER",85,0)
 F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  W ?25,ECDXS(DXS),!
"RTN","ECPCER",86,0)
 K I,MOD,MODESC,ECI,DXS,DXSIEN,ECDXS,ECDXN,ECDXSN
"RTN","ECPCER",87,0)
 Q
"RTN","ECPCER",88,0)
EXPORT ;Produce exportable version, added in patch 119
"RTN","ECPCER",89,0)
 N CNT,DATE,ECFN,I,MOD,MODESC
"RTN","ECPCER",90,0)
 S CNT=1
"RTN","ECPCER",91,0)
 S ^TMP($J,"ECRPT",CNT)="PATIENT^PROCEDURE DATE/TIME^LOCATION^CLINIC^STOP CODE^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^PROCEDURE VOLUME^CPT MOD 1^CPT MOD 2^CPT MOD 3^PROVIDER^PRIMARY DIAGNOSIS^2ND DIAG 1^2ND DIAG 2^2ND DIAG 3^2ND DIAG 4" ;126
"RTN","ECPCER",92,0)
 S DATE=ECSD F  S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'+DATE!(DATE>ECED)  S ECFN=0 F  S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'+ECFN  D
"RTN","ECPCER",93,0)
 .Q:'$D(^ECH(ECFN,"PCE"))
"RTN","ECPCER",94,0)
 .I '$P($G(^ECH(ECFN,"P")),U,7) Q
"RTN","ECPCER",95,0)
 .K ECEXDS D SET
"RTN","ECPCER",96,0)
 .S CNT=CNT+1
"RTN","ECPCER",97,0)
 .S ^TMP($J,"ECRPT",CNT)=ECPAT_U_ECDT_U_ECLN_U_ECDN_U_ECID_U_ECCPT_U_ECPCODE_U_ECEPN_U_ECV
"RTN","ECPCER",98,0)
 .F I=1:1:3 D
"RTN","ECPCER",99,0)
 ..S MOD=$P(ECMOD,";",I),MODESC="" I MOD'="" S MODESC=$$MODP^ICPTMOD(ECCPT,MOD,"E",$P(ECEC,"~")) S MODESC=$S(+MODESC>0:MOD_" "_$P(MODESC,U,2),1:"")
"RTN","ECPCER",100,0)
 ..S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_MODESC
"RTN","ECPCER",101,0)
 .S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_ECUN_U_ECDXN
"RTN","ECPCER",102,0)
 .F I=1:1:4 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$G(ECEXDS(I))
"RTN","ECPCER",103,0)
 Q
"RTN","ECPRSUM1")
0^11^B70115901^B45928925
"RTN","ECPRSUM1",1,0)
ECPRSUM1 ;BIR/DMA,RHK,JPW - Provider Summary (1 to 7) ;12/2/14  11:09
"RTN","ECPRSUM1",2,0)
 ;;2.0;EVENT CAPTURE;**5,18,33,47,62,63,61,72,88,95,112,119,126**;8 May 96;Build 8
"RTN","ECPRSUM1",3,0)
 ;In patch 119, temporary data storage for the report was moved from
"RTN","ECPRSUM1",4,0)
 ;^TMP($J to ^TMP("ECTMP",$J so that the exportable version of the
"RTN","ECPRSUM1",5,0)
 ;report, which is returned in ^TMP($J,"ECRPT", wouldn't be deleted upon
"RTN","ECPRSUM1",6,0)
 ;completion. That change occurred in many lines in this routine.
"RTN","ECPRSUM1",7,0)
 ;
"RTN","ECPRSUM1",8,0)
 S DIC=200,DIC(0)="AQEMZ",DIC("A")="Select Provider: "
"RTN","ECPRSUM1",9,0)
 D ^DIC K DIC G END:Y<0 S ECU=+Y,ECUN=$P(Y,"^",2)
"RTN","ECPRSUM1",10,0)
 ;D REASON^ECRUTL ;* Prompt to include Procedure Reasons. 112, Remove reasons from report
"RTN","ECPRSUM1",11,0)
 I ($D(DIRUT))!($D(DUOUT)) G END
"RTN","ECPRSUM1",12,0)
BDATE K %DT S %DT="AEX",%DT("A")="Starting with Date: "
"RTN","ECPRSUM1",13,0)
 D ^%DT G:Y<0 END S ECSD=Y
"RTN","ECPRSUM1",14,0)
EDATE K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT G:Y<0 END
"RTN","ECPRSUM1",15,0)
 I Y<ECSD D  G EDATE
"RTN","ECPRSUM1",16,0)
 .W !!,"The ending date cannot be earlier than the starting date.  "
"RTN","ECPRSUM1",17,0)
 .W "Please re-enter",!,"the ending date.",!
"RTN","ECPRSUM1",18,0)
 S ECED=Y,ECDATE=ECSD_"^"_ECED
"RTN","ECPRSUM1",19,0)
DEV ;dev call
"RTN","ECPRSUM1",20,0)
 W !!,"This report is formatted for 132 column output.",!!
"RTN","ECPRSUM1",21,0)
 S %ZIS="Q",%ZIS("A")="Select Device: " D ^%ZIS G END:POP
"RTN","ECPRSUM1",22,0)
 I $D(IO("Q")) K ZTSAVE S (ZTSAVE("ECRY"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECU"),ZTSAVE("ECUN"))="",ZTDESC="Event Capture Provider Summary",ZTRTN="EN^ECPRSUM1" D ^%ZTLOAD,HOME^%ZIS K ZTSK G END
"RTN","ECPRSUM1",23,0)
 ;
"RTN","ECPRSUM1",24,0)
EN ;QUEUED ENTRY POINT
"RTN","ECPRSUM1",25,0)
 N ECPG,ECGT,EC,ECCAT,ECPXD,MODI,ECI,ECPRV,RK,A,ECX,EC725,ECEPN,ECLOCN,ECUNITN ;119,126
"RTN","ECPRSUM1",26,0)
 I $G(ECPTYP)'="E" U IO ;119 Only need IO if not exporting
"RTN","ECPRSUM1",27,0)
 S (ECOUT,ECPG)=0 F ECI=1:1:7 S ECGT(ECI)=0,A(ECI)=0
"RTN","ECPRSUM1",28,0)
 K ^TMP("ECTMP",$J) S ECOUT=0,ECSD=ECSD-.1,ECED=ECED+.3
"RTN","ECPRSUM1",29,0)
 F ECD=ECSD:0 S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  F DA=0:0 S DA=$O(^ECH("AC",ECD,DA)) Q:'DA  I $D(^ECH("APRV",ECU,DA)) S EC=$G(^ECH(DA,0)) D 
"RTN","ECPRSUM1",30,0)
 .K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(DA,.ECPRV),ECX=0 I ECPRV Q
"RTN","ECPRSUM1",31,0)
 .F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",32,0)
 .F ECI=1:1:7 S ECX=$O(ECPRV(ECX)) Q:'ECX  D
"RTN","ECPRSUM1",33,0)
 ..S A(ECI)=$P(ECPRV(ECX),U)=ECU
"RTN","ECPRSUM1",34,0)
 .S ECX=A(1)=A(2)=A(3)=A(4)=A(5)=A(6)=A(7) I 'ECX Q
"RTN","ECPRSUM1",35,0)
 .S ECPAT=+$P(EC,"^",2),PA=$G(^DPT(ECPAT,0)),SS=$P(PA,"^",9)
"RTN","ECPRSUM1",36,0)
 .S PA=$S($P(PA,"^")]"":$P(PA,"^"),1:"UNKNOWN"),ECP=$P(EC,"^",9)
"RTN","ECPRSUM1",37,0)
 .Q:ECP']""
"RTN","ECPRSUM1",38,0)
 .S ECLOC=+$P(EC,U,4),ECUNIT=+$P(EC,U,7),ECCAT=+$P(EC,U,8)
"RTN","ECPRSUM1",39,0)
 .I $G(ECSLOC)'="ALL"&('$D(ECSLOC(ECLOC))) Q  ;126 Location check
"RTN","ECPRSUM1",40,0)
 .I $G(ECSUNIT)'="ALL"&('$D(ECSUNIT(ECUNIT))) Q  ;126 DSS Unit check
"RTN","ECPRSUM1",41,0)
 .S ECLOCN=$$GET1^DIQ(4,ECLOC,.01) ;126 Get location name
"RTN","ECPRSUM1",42,0)
 .S ECUNITN=$$GET1^DIQ(724,ECUNIT,.01) ;126 Get DSS Unit name
"RTN","ECPRSUM1",43,0)
 .S ECPSY=+$O(^ECJ("AP",ECLOC,ECUNIT,ECCAT,ECP,""))
"RTN","ECPRSUM1",44,0)
 .S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPRSUM1",45,0)
 .S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPRSUM1",46,0)
 .I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECPRSUM1",47,0)
 .S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPRSUM1",48,0)
 .I ECCPT'="" D
"RTN","ECPRSUM1",49,0)
 ..S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPXD,"^",2)_" "
"RTN","ECPRSUM1",50,0)
 .I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPRSUM1",51,0)
 .I ECFILE=725 S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECPRSUM1",52,0)
 .S ECEPN=$S(ECFILE=81:ECPN,1:$P(EC725,U))_$S(ECPSYN]"":" ["_ECPSYN_"]",1:"") ;119
"RTN","ECPRSUM1",53,0)
 .S ECPTDS=ECCPT_ECPN_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPRSUM1",54,0)
 .;Get Procedure CPT modifiers
"RTN","ECPRSUM1",55,0)
 . K ECMOD S ECMODF=0 I $O(^ECH(DA,"MOD",0))'="" D
"RTN","ECPRSUM1",56,0)
 ..S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",57,0)
 ..;K ECMOD S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",58,0)
 .;
"RTN","ECPRSUM1",59,0)
 .;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPRSUM1",60,0)
 .S ECPRSN="",ECLNK=+$P(EC,"^",23)
"RTN","ECPRSUM1",61,0)
 .I +ECLNK>0 DO
"RTN","ECPRSUM1",62,0)
 ..S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPRSUM1",63,0)
 ..S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",64,0)
 ..S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPRSUM1",65,0)
 .S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",66,0)
 .I '$D(ECRY) S ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",67,0)
 .;
"RTN","ECPRSUM1",68,0)
 .;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPRSUM1",69,0)
 .S PRO=ECCPT_ECPN I PRO]"" S V=+$P(EC,"^",10) D
"RTN","ECPRSUM1",70,0)
 ..F J=1:1:7 I A(J) S ^(J)=$G(^TMP("ECTMP",$J,ECLOCN,ECUNITN,PRO,ECPRSN,PA_"^"_SS,J))+V D  ;126
"RTN","ECPRSUM1",71,0)
 ...I $G(^TMP("ECTMP",$J,ECLOCN,ECUNITN,PRO))="" S ^TMP("ECTMP",$J,ECLOCN,ECUNITN,PRO)=ECPTDS ;126
"RTN","ECPRSUM1",72,0)
 ..;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPRSUM1",73,0)
 ..S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPRSUM1",74,0)
 ...S ^TMP("ECTMP",$J,ECLOCN,ECUNITN,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD)=$G(^TMP("ECTMP",$J,ECLOCN,ECUNITN,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD))+V ;126
"RTN","ECPRSUM1",75,0)
 .I $G(ECPTYP)="E" S ^TMP("ECTMP",$J,ECLOCN,ECUNITN,PRO,ECPRSN,PA_U_SS,"EXPORT")=$P($G(ECCPT)," ")_U_$S(ECFILE=725:$P(EC725,U,2),1:"")_U_$G(ECEPN) ;119,126 additional information needed for export
"RTN","ECPRSUM1",76,0)
 K ECLNK,MOD,ECPTDS
"RTN","ECPRSUM1",77,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL K ^TMP("ECTMP",$J) Q  ;119 If exporting, process and then quit
"RTN","ECPRSUM1",78,0)
 ;
"RTN","ECPRSUM1",79,0)
PRINT ;print report
"RTN","ECPRSUM1",80,0)
 S ECSD=$P(ECDATE,"^"),ECED=$P(ECDATE,"^",2)
"RTN","ECPRSUM1",81,0)
 I '$D(^TMP("ECTMP",$J)) S (ECLOC,ECUNIT)="" D HDR W !!,?12,"No Event Capture Provider Summary for "_ECUN_" to report for the date range selected.",!! D PAGE G END ;126
"RTN","ECPRSUM1",82,0)
 S ECLOC="" F  S ECLOC=$O(^TMP("ECTMP",$J,ECLOC)) Q:ECLOC=""  D  ;126
"RTN","ECPRSUM1",83,0)
 .S ECUNIT="" F  S ECUNIT=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT)) Q:ECUNIT=""  D  ;126
"RTN","ECPRSUM1",84,0)
 ..;126 Code below modified for dot structure and correct array reference
"RTN","ECPRSUM1",85,0)
 ..D HDR ;126 need header for each section
"RTN","ECPRSUM1",86,0)
 ..F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",87,0)
 ..S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",88,0)
 ..F  S PR=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR)),PA="" Q:PR=""  D  Q:ECOUT
"RTN","ECPRSUM1",89,0)
 ...W !,^TMP("ECTMP",$J,ECLOC,ECUNIT,PR)
"RTN","ECPRSUM1",90,0)
 ...F  S ECREAS=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS)) Q:ECREAS=""  D  Q:ECOUT
"RTN","ECPRSUM1",91,0)
 ....F  S PA=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA)) D:PA="" TOT Q:PA=""  D  Q:ECOUT
"RTN","ECPRSUM1",92,0)
 .....S A=$G(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA,0))
"RTN","ECPRSUM1",93,0)
 .....W ! W:$D(ECRY) $E(ECREAS,1,23)
"RTN","ECPRSUM1",94,0)
 .....W ?25,$E($P(PA,"^"),1,24),?52,$E($P(PA,"^",2),6,9) ;112 only print last 4
"RTN","ECPRSUM1",95,0)
 .....F J=1:1:7 S A=$G(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA,J)),A(J)=A(J)+A W ?10*J+50,$J(A,5,0) I J=7 I $Y+8>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",96,0)
 .....;print CPT procedure modifiers
"RTN","ECPRSUM1",97,0)
 .....Q:ECOUT  S IEN=""
"RTN","ECPRSUM1",98,0)
 .....F  S IEN=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPRSUM1",99,0)
 ......S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPRSUM1",100,0)
 ......S MOD=$P(MODI,U,2) I MOD="" Q
"RTN","ECPRSUM1",101,0)
 ......S MODESC=$P(MODI,U,3)  I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPRSUM1",102,0)
 ......S MODAMT=^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA,"MOD",IEN)
"RTN","ECPRSUM1",103,0)
 ......W !?5,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPRSUM1",104,0)
 ......I ($Y+7)>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",105,0)
 .....K MODESC,MOD,MODAMT
"RTN","ECPRSUM1",106,0)
 W !!,?60 F RK=61:1:IOM W "*"
"RTN","ECPRSUM1",107,0)
 W !,?35,"GRAND TOTAL - PROCEDURES"
"RTN","ECPRSUM1",108,0)
 F J=1:1:7 W ?10*J+50,$J(ECGT(J),5,0)
"RTN","ECPRSUM1",109,0)
 D:'ECOUT PAGE G END
"RTN","ECPRSUM1",110,0)
 ;
"RTN","ECPRSUM1",111,0)
PAGE ; end of page
"RTN","ECPRSUM1",112,0)
 D FOOTER
"RTN","ECPRSUM1",113,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECPRSUM1",114,0)
 Q
"RTN","ECPRSUM1",115,0)
HDR ;
"RTN","ECPRSUM1",116,0)
 W:$Y @IOF S ECPG=ECPG+1
"RTN","ECPRSUM1",117,0)
 W !!?33,"EVENT CAPTURE PROVIDER (1-7) SUMMARY FOR ",ECUN,?118,"Page: ",ECPG,!,?33,"LOCATION: ",$G(ECLOC),!,?33,"DSS UNIT: ",$G(ECUNIT) ;112,126
"RTN","ECPRSUM1",118,0)
 W !,?33,"FOR THE DATE RANGE ",$$FMTE^XLFDT(ECSD)," TO ",$$FMTE^XLFDT(ECED),!!,"PROCEDURE",?85,"TOTALS AS PROVIDER #",! ;112,126
"RTN","ECPRSUM1",119,0)
 W:$D(ECRY) "PROCEDURE REASON" W ?25,"PATIENT",?52,"SSN",?64,1,?74,2,?84,3,?94,4,?104,5,?114,6,?124,7
"RTN","ECPRSUM1",120,0)
 W !,?5,"CPT MODIFIER (Volume of modifiers used)",! ;126 fixed spelling error
"RTN","ECPRSUM1",121,0)
 F RK=1:1:IOM W "-"
"RTN","ECPRSUM1",122,0)
 W !
"RTN","ECPRSUM1",123,0)
 Q
"RTN","ECPRSUM1",124,0)
 ;
"RTN","ECPRSUM1",125,0)
TOT W !,?60 F RK=61:1:IOM W "-"
"RTN","ECPRSUM1",126,0)
 W !?35,"TOTAL PROCEDURES"
"RTN","ECPRSUM1",127,0)
 F J=1:1:7 W ?10*J+50,$J(A(J),5,0) S ECGT(J)=ECGT(J)+A(J)
"RTN","ECPRSUM1",128,0)
 W ! F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",129,0)
 Q
"RTN","ECPRSUM1",130,0)
 ;
"RTN","ECPRSUM1",131,0)
FOOTER ;print page footer
"RTN","ECPRSUM1",132,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECPRSUM1",133,0)
 W " and/or a combination of these." ;126 Combined lines for report
"RTN","ECPRSUM1",134,0)
 Q
"RTN","ECPRSUM1",135,0)
 ;
"RTN","ECPRSUM1",136,0)
END D ^ECKILL K ^TMP("ECTMP",$J),ZTSK W @IOF
"RTN","ECPRSUM1",137,0)
 K ^TMP("ECTMP",$J) Q:$D(ECGUI)
"RTN","ECPRSUM1",138,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECPRSUM1",139,0)
 D ^%ZISC
"RTN","ECPRSUM1",140,0)
 Q
"RTN","ECPRSUM1",141,0)
 ;
"RTN","ECPRSUM1",142,0)
EXPORT ;Section added in 119
"RTN","ECPRSUM1",143,0)
 N CNT,ECI,A,PA,PR,ECREAS,EXPORT,SUB,MODCNT,MODI,MOD,MODESC,MODAMT,ECLOC,ECUNIT ;126
"RTN","ECPRSUM1",144,0)
 S CNT=1
"RTN","ECPRSUM1",145,0)
 S ^TMP($J,"ECRPT",CNT)="PROVIDER NAME^LOCATION^DSS UNIT^CPT CODE^CPT MOD #1 (VOL)^CPT MOD #2 (VOL)^CPT MOD #3 (VOL)^PROCEDURE CODE^PROCEDURE NAME^PATIENT^SSN" ;126
"RTN","ECPRSUM1",146,0)
 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_"^TOTAL AS PROV #1^TOTAL AS PROV #2^TOTAL AS PROV #3^TOTAL AS PROV #4^TOTAL AS PROV #5^TOTAL AS PROV #6^TOTAL AS PROV #7" ;126
"RTN","ECPRSUM1",147,0)
 S ECLOC="" F  S ECLOC=$O(^TMP("ECTMP",$J,ECLOC)) Q:ECLOC=""  D  ;126
"RTN","ECPRSUM1",148,0)
 .S ECUNIT="" F  S ECUNIT=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT)) Q:ECUNIT=""  D  ;126
"RTN","ECPRSUM1",149,0)
 ..;126 Section modified for dot structure and array levels
"RTN","ECPRSUM1",150,0)
 ..S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",151,0)
 ..F  S PR=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR)),PA="" Q:PR=""  D
"RTN","ECPRSUM1",152,0)
 ...F  S ECREAS=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS)) Q:ECREAS=""  D
"RTN","ECPRSUM1",153,0)
 ....F  S PA=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA)) Q:PA=""  D
"RTN","ECPRSUM1",154,0)
 .....S EXPORT=^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA,"EXPORT")
"RTN","ECPRSUM1",155,0)
 .....S CNT=CNT+1
"RTN","ECPRSUM1",156,0)
 .....S ^TMP($J,"ECRPT",CNT)=ECUN_U_ECLOC_U_ECUNIT_U_$P(EXPORT,U) ;126
"RTN","ECPRSUM1",157,0)
 .....S SUB=0,MODCNT=0 F  S:SUB'="" SUB=$O(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA,"MOD",SUB)) Q:MODCNT=3  D  S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_MOD,MODCNT=MODCNT+1 ;126
"RTN","ECPRSUM1",158,0)
 ......S MOD="" I SUB="" Q  ;126
"RTN","ECPRSUM1",159,0)
 ......S MODI=$$MOD^ICPTMOD(SUB,"I",$P(ECED,".")) S MOD=$P(MODI,U,2) Q:MOD=""  S MODESC=$S($P(MODI,U,3)="":"UNKNOWN",1:$P(MODI,U,3)),MODAMT=^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA,"MOD",SUB) ;126
"RTN","ECPRSUM1",160,0)
 ......S MOD=MOD_" "_MODESC_" ("_MODAMT_")" ;126
"RTN","ECPRSUM1",161,0)
 .....S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$P(EXPORT,U,2)_U_$P(EXPORT,U,3)_U_$P(PA,U)_U_$E($P(PA,U,2),6,9) ;126
"RTN","ECPRSUM1",162,0)
 .....F J=1:1:7 S $P(^TMP($J,"ECRPT",CNT),U,(J+11))=+$G(^TMP("ECTMP",$J,ECLOC,ECUNIT,PR,ECREAS,PA,J)) ;126
"RTN","ECPRSUM1",163,0)
 Q
"RTN","ECRDSSA")
0^4^B123826239^B116122411
"RTN","ECRDSSA",1,0)
ECRDSSA ;ALB/RPM - DSS Unit Activity Report ;11/12/14  14:22
"RTN","ECRDSSA",2,0)
 ;;2.0;EVENT CAPTURE;**95,104,112,119,126**;8 May 96;Build 8
"RTN","ECRDSSA",3,0)
 ;
"RTN","ECRDSSA",4,0)
EN ;Get location(s), DSS Unit(s), sort type, start & end dates, device
"RTN","ECRDSSA",5,0)
 ;
"RTN","ECRDSSA",6,0)
 N ECLOC,ECDSSU,ECSORT,ECSTDT,ECENDDT ;112
"RTN","ECRDSSA",7,0)
 I '$$ASKLOC^ECRUTL G ENQ
"RTN","ECRDSSA",8,0)
 I '$$ASKDSS^ECRUTL G ENQ
"RTN","ECRDSSA",9,0)
 I '$$ASKSRT(.ECSORT) G ENQ
"RTN","ECRDSSA",10,0)
 I '$$STDT^ECRUTL G ENQ
"RTN","ECRDSSA",11,0)
 I '$$ENDDT^ECRUTL(ECSTDT) G ENQ
"RTN","ECRDSSA",12,0)
 I $$ASKDEV D STRPT^ECRDSSA
"RTN","ECRDSSA",13,0)
ENQ Q
"RTN","ECRDSSA",14,0)
 ;
"RTN","ECRDSSA",15,0)
STRPT ;Main entry point
"RTN","ECRDSSA",16,0)
 N ECCRT  ;is CRT?
"RTN","ECRDSSA",17,0)
 N ECPAGE  ;page cnt
"RTN","ECRDSSA",18,0)
 S ECPAGE=0
"RTN","ECRDSSA",19,0)
 S ECCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","ECRDSSA",20,0)
 I $G(ECPTYP)'="E" U IO ;119 open device if not exporting
"RTN","ECRDSSA",21,0)
 K ^TMP("ECRPT",$J)
"RTN","ECRDSSA",22,0)
 D FNDREC(ECSORT)
"RTN","ECRDSSA",23,0)
 D PRINT(ECSORT)
"RTN","ECRDSSA",24,0)
 K ^TMP("ECRPT",$J) D ^ECKILL ;119
"RTN","ECRDSSA",25,0)
 Q
"RTN","ECRDSSA",26,0)
 ;
"RTN","ECRDSSA",27,0)
FNDREC(ECSRT) ;Loop through "ADT" xref of EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",28,0)
 ;  Input:
"RTN","ECRDSSA",29,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",30,0)
 ;
"RTN","ECRDSSA",31,0)
 ;  Output: none
"RTN","ECRDSSA",32,0)
 ;
"RTN","ECRDSSA",33,0)
 N ECNT   ;record cnt
"RTN","ECRDSSA",34,0)
 N ECL     ;location cnt
"RTN","ECRDSSA",35,0)
 N ECD     ;DSS unit cnt
"RTN","ECRDSSA",36,0)
 N ECDFN   ;DFN
"RTN","ECRDSSA",37,0)
 N ECLOCF  ;Location IEN
"RTN","ECRDSSA",38,0)
 N ECDSSF  ;DSS unit IEN
"RTN","ECRDSSA",39,0)
 N ECDT    ;date index
"RTN","ECRDSSA",40,0)
 N ECREC   ;"0" node
"RTN","ECRDSSA",41,0)
 N ECIEN   ;IEN of file 721 ;patch 119
"RTN","ECRDSSA",42,0)
 S ECNT=0
"RTN","ECRDSSA",43,0)
 ;
"RTN","ECRDSSA",44,0)
 S ECL=0
"RTN","ECRDSSA",45,0)
 F  S ECL=$O(ECLOC(ECL)) Q:'ECL  S ECLOCF=+$P(ECLOC(ECL),U) D
"RTN","ECRDSSA",46,0)
 . S ^TMP("ECRPT",$J,ECLOCF)=0  ;initialize location counter
"RTN","ECRDSSA",47,0)
 . S ECD=0
"RTN","ECRDSSA",48,0)
 . F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  S ECDSSF=+$P(ECDSSU(ECD),U) D
"RTN","ECRDSSA",49,0)
 . . S ^TMP("ECRPT",$J,ECLOCF,ECDSSF)=0  ;initialize DSS Unit counter
"RTN","ECRDSSA",50,0)
 . S ECDFN=0
"RTN","ECRDSSA",51,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECLOCF,ECDFN)) Q:'ECDFN  D
"RTN","ECRDSSA",52,0)
 . . S ECD=0
"RTN","ECRDSSA",53,0)
 . . F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  S ECDSSF=+$P(ECDSSU(ECD),U) D
"RTN","ECRDSSA",54,0)
 . . . S ECDT=ECSTDT
"RTN","ECRDSSA",55,0)
 . . . F  S ECDT=+$O(^ECH("ADT",ECLOCF,ECDFN,ECDSSF,ECDT)) Q:'ECDT!(ECDT>ECENDDT)  D
"RTN","ECRDSSA",56,0)
 . . . . S ECIEN=0
"RTN","ECRDSSA",57,0)
 . . . . F  S ECIEN=+$O(^ECH("ADT",ECLOCF,ECDFN,ECDSSF,ECDT,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSA",58,0)
 . . . . . I $P($G(^ECH(ECIEN,0)),U,7)=ECDSSF D BLDTMP(ECIEN,ECSRT,.ECNT)
"RTN","ECRDSSA",59,0)
 Q
"RTN","ECRDSSA",60,0)
 ;
"RTN","ECRDSSA",61,0)
BLDTMP(ECIEN,ECSRT,ECCNT) ;add record to list
"RTN","ECRDSSA",62,0)
 ;  Input:
"RTN","ECRDSSA",63,0)
 ;    ECIEN - pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",64,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",65,0)
 ;    ECCNT - record counter
"RTN","ECRDSSA",66,0)
 ;
"RTN","ECRDSSA",67,0)
 ;  Output:
"RTN","ECRDSSA",68,0)
 ;    ^TMP("ECRPT",$J,location,DSS unit,sort key1,sort key2,count)
"RTN","ECRDSSA",69,0)
 ;
"RTN","ECRDSSA",70,0)
 N ECLOCA  ;location
"RTN","ECRDSSA",71,0)
 N ECDSS  ;DSS unit
"RTN","ECRDSSA",72,0)
 N ECIENS  ;IENS
"RTN","ECRDSSA",73,0)
 N ECKEY  ;sort key array
"RTN","ECRDSSA",74,0)
 N ECREC  ;record string
"RTN","ECRDSSA",75,0)
 N ECERR  ;FM error
"RTN","ECRDSSA",76,0)
 N ECDT  ;date
"RTN","ECRDSSA",77,0)
 I +$G(ECIEN)>0,$$GETKEYS(ECSRT,ECIEN,.ECKEY) D
"RTN","ECRDSSA",78,0)
 . S ECCNT=+$G(ECCNT)+1
"RTN","ECRDSSA",79,0)
 . S ECIENS=ECIEN_","
"RTN","ECRDSSA",80,0)
 . S ECREC=""
"RTN","ECRDSSA",81,0)
 . D GETS^DIQ(721,ECIENS,"1;2;3;6;7;8;9;10;20;29","IE","ECREC","ECERR") ;126 Added field 7, category, to list of data
"RTN","ECRDSSA",82,0)
 . S ECLOCA=+$G(ECREC(721,ECIENS,3,"I"))
"RTN","ECRDSSA",83,0)
 . S ECDSS=+$G(ECREC(721,ECIENS,6,"I"))
"RTN","ECRDSSA",84,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,1,"E")),1,30)_"^"  ;pt name
"RTN","ECRDSSA",85,0)
 . S ECREC=ECREC_$E($$GETSSN(ECIEN),1,10)_"^"              ;ssn
"RTN","ECRDSSA",86,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,29,"I")),1)_"^"    ;in/out
"RTN","ECRDSSA",87,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,2,"I")),1,13)_"^"  ;dt/tm
"RTN","ECRDSSA",88,0)
 . S ECDT=$P($G(ECREC(721,ECIENS,2,"I")),".",1)
"RTN","ECRDSSA",89,0)
 . S ECREC=ECREC_$E($$GETPROC($G(ECREC(721,ECIENS,8,"I"))),1,5)_"^"   ;proc code
"RTN","ECRDSSA",90,0)
 . S ECREC=ECREC_$$GETPRNM($G(ECREC(721,ECIENS,8,"I")),ECDT)_"^"  ;126, get full proc name
"RTN","ECRDSSA",91,0)
 . S ECREC=ECREC_$$GETPSYN(ECLOCA,ECDSS,+$G(ECREC(721,ECIENS,7,"I")),$G(ECREC(721,ECIENS,8,"I")))_"^" ;126 Get procedure synonym
"RTN","ECRDSSA",92,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,9,"I")),1,2)_"^"   ;vol
"RTN","ECRDSSA",93,0)
 . S ECREC=ECREC_$E($$GETPROV(ECIEN),1,30)_"^"  ;provider
"RTN","ECRDSSA",94,0)
 . S ECREC=ECREC_$E($G(ECREC(721,ECIENS,20,"E")),1,7)      ;dx
"RTN","ECRDSSA",95,0)
 . S ^TMP("ECRPT",$J,ECLOCA,ECDSS,ECKEY(1),ECKEY(2),ECNT)=ECREC
"RTN","ECRDSSA",96,0)
 . S ^TMP("ECRPT",$J,ECLOCA)=$G(^TMP("ECRPT",$J,ECLOCA))+1
"RTN","ECRDSSA",97,0)
 . S ^TMP("ECRPT",$J,ECLOCA,ECDSS)=$G(^TMP("ECRPT",$J,ECLOCA,ECDSS))+1
"RTN","ECRDSSA",98,0)
 Q
"RTN","ECRDSSA",99,0)
 ;
"RTN","ECRDSSA",100,0)
PRINT(ECSRT) ;loop results array and format output
"RTN","ECRDSSA",101,0)
 ;  Input:
"RTN","ECRDSSA",102,0)
 ;    ECSRT - sort type
"RTN","ECRDSSA",103,0)
 ;
"RTN","ECRDSSA",104,0)
 ;  Output: none
"RTN","ECRDSSA",105,0)
 ;
"RTN","ECRDSSA",106,0)
 N ECCLOC  ;current location
"RTN","ECRDSSA",107,0)
 N ECPLOC  ;previous location
"RTN","ECRDSSA",108,0)
 N ECLOCNM  ;location name
"RTN","ECRDSSA",109,0)
 N ECCDSS  ;current DSS unit
"RTN","ECRDSSA",110,0)
 N ECPDSS  ;previous DSS unit
"RTN","ECRDSSA",111,0)
 N ECDSSNM  ;DSS unit name
"RTN","ECRDSSA",112,0)
 N ECCNT   ;record count
"RTN","ECRDSSA",113,0)
 N ECDAT   ;procedure date/time
"RTN","ECRDSSA",114,0)
 N ECRDT   ;run date
"RTN","ECRDSSA",115,0)
 N ECFDT   ;from date
"RTN","ECRDSSA",116,0)
 N ECTDT   ;to date
"RTN","ECRDSSA",117,0)
 N ECKEY1  ;sort key 1
"RTN","ECRDSSA",118,0)
 N ECKEY2  ;sort key 2
"RTN","ECRDSSA",119,0)
 N ECSRTBY  ;sort type text
"RTN","ECRDSSA",120,0)
 N ECQUIT  ;user quit indicator
"RTN","ECRDSSA",121,0)
 N ECREC   ;tmp record data
"RTN","ECRDSSA",122,0)
 N CNT,PIECE ;119 array count for data, record piece
"RTN","ECRDSSA",123,0)
 I $G(ECPTYP)="E" S ^TMP($J,"ECRPT",1)="LOCATION^DSS UNIT (IEN #)^PATIENT^SSN^I/O^DATE/TIME^PROCEDURE CODE^PROCEDURE NAME^SYNONYM^VOLUME^PRIMARY PROVIDER^DIAGNOSIS",CNT=1 ;119,126 Export header
"RTN","ECRDSSA",124,0)
 I '$D(^TMP("ECRPT",$J)) G PRINTQ
"RTN","ECRDSSA",125,0)
 S ECRDT=$$FMTE^XLFDT($$NOW^XLFDT,"5DZ")
"RTN","ECRDSSA",126,0)
 S ECFDT=$$FMTE^XLFDT($P(ECSTDT+.0001,"."),"5DZ")
"RTN","ECRDSSA",127,0)
 S ECTDT=$$FMTE^XLFDT($P(ECENDDT,"."),"5DZ")
"RTN","ECRDSSA",128,0)
 S ECSRTBY=$S(ECSRT="P":"Patient Name",ECSRT="R":"Provider Name",ECSRT="S":"Patient SSN",1:"")
"RTN","ECRDSSA",129,0)
 S (ECCLOC,ECPLOC,ECQUIT)=0
"RTN","ECRDSSA",130,0)
 F  S ECCLOC=$O(^TMP("ECRPT",$J,ECCLOC)) Q:'ECCLOC!(ECQUIT)  D
"RTN","ECRDSSA",131,0)
 . I ECCLOC'=ECPLOC D  ;location changed
"RTN","ECRDSSA",132,0)
 . . S ECPLOC=ECCLOC
"RTN","ECRDSSA",133,0)
 . . S ECLOCNM=$$GETLOCN(ECCLOC,.ECLOC)
"RTN","ECRDSSA",134,0)
 . . I $G(ECPTYP)'="E" I $O(^TMP("ECRPT",$J,ECCLOC,0))>0 D:ECPAGE>0 PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY) ;119
"RTN","ECRDSSA",135,0)
 . I $G(ECPTYP)'="E" I $G(^TMP("ECRPT",$J,ECCLOC))=0 D  Q  ;119
"RTN","ECRDSSA",136,0)
 . . W !!,"    ** No records found on Location that match selection criteria"
"RTN","ECRDSSA",137,0)
 . S (ECCDSS,ECPDSS)=0
"RTN","ECRDSSA",138,0)
 . F  S ECCDSS=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS)) Q:'ECCDSS!(ECQUIT)  D
"RTN","ECRDSSA",139,0)
 . . I ECCDSS'=ECPDSS D  Q:ECQUIT  ;dss unit changed
"RTN","ECRDSSA",140,0)
 . . . S ECPDSS=ECCDSS
"RTN","ECRDSSA",141,0)
 . . . S ECDSSNM=$$GETDSSN(ECCDSS,.ECDSSU)
"RTN","ECRDSSA",142,0)
 . . . I $G(ECPTYP)'="E" I $Y>(IOSL-10) D PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY) ;119
"RTN","ECRDSSA",143,0)
 . . . I $G(ECPTYP)'="E" D DSSHDR(ECCDSS,ECDSSNM) ;119
"RTN","ECRDSSA",144,0)
 . . I $G(ECPTYP)'="E" I $G(^TMP("ECRPT",$J,ECCLOC,ECCDSS))=0 D  Q  ;119
"RTN","ECRDSSA",145,0)
 . . . W !,"** No records found on DSS Unit that match selection criteria"
"RTN","ECRDSSA",146,0)
 . . S ECKEY1=""
"RTN","ECRDSSA",147,0)
 . . F  S ECKEY1=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1)) Q:ECKEY1=""!(ECQUIT)  D
"RTN","ECRDSSA",148,0)
 . . . S ECKEY2=""
"RTN","ECRDSSA",149,0)
 . . . F  S ECKEY2=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2)) Q:ECKEY2=""!(ECQUIT)  D
"RTN","ECRDSSA",150,0)
 . . . . S ECCNT=0
"RTN","ECRDSSA",151,0)
 . . . . F  S ECCNT=$O(^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2,ECCNT)) Q:'ECCNT!(ECQUIT)  D
"RTN","ECRDSSA",152,0)
 . . . . . I $G(ECPTYP)'="E" I $Y>(IOSL-7) D PAUSE Q:ECQUIT  D HDR(ECLOCNM,ECRDT,ECFDT,ECTDT,ECSRTBY),DSSHDR(ECCDSS,ECDSSNM) W " (cont'd)" ;119
"RTN","ECRDSSA",153,0)
 . . . . . S ECREC=^TMP("ECRPT",$J,ECCLOC,ECCDSS,ECKEY1,ECKEY2,ECCNT)
"RTN","ECRDSSA",154,0)
 . . . . . I $G(ECPTYP)="E" S CNT=CNT+1 S ^TMP($J,"ECRPT",CNT)=ECLOCNM_U_ECDSSNM_"(IEN #"_ECCDSS_")" D  Q  ;119
"RTN","ECRDSSA",155,0)
 . . . . . . F PIECE=1:1:10 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$S(PIECE'=4:$P(ECREC,U,PIECE),1:$$FMTE^XLFDT($P(ECREC,U,PIECE),"2MZ")) ;119,126
"RTN","ECRDSSA",156,0)
 . . . . . W !,$P(ECREC,U,1)  ;name
"RTN","ECRDSSA",157,0)
 . . . . . W ?27,$P(ECREC,U,2)  ;126 ssn
"RTN","ECRDSSA",158,0)
 . . . . . W ?36,$P(ECREC,U,3)  ;126 inpt/outpt
"RTN","ECRDSSA",159,0)
 . . . . . S ECDAT=$$FMTE^XLFDT($P(ECREC,U,4),"2MZ")
"RTN","ECRDSSA",160,0)
 . . . . . W ?40,$P(ECDAT,":")_$P(ECDAT,":",2)  ;126 dt/tm
"RTN","ECRDSSA",161,0)
 . . . . . W ?54,$P(ECREC,U,5)  ;126 proc code
"RTN","ECRDSSA",162,0)
 . . . . . W ?60,$P(ECREC,U,6)  ;126 proc name
"RTN","ECRDSSA",163,0)
 . . . . . W ?112,$P(ECREC,U,8)  ;119,126 vol
"RTN","ECRDSSA",164,0)
 . . . . . W ?118,$P(ECREC,U,10)  ;126 dx
"RTN","ECRDSSA",165,0)
 . . . . . W !?4,$P(ECREC,U,9) ;126 Provider
"RTN","ECRDSSA",166,0)
 . . . . . W ?60,$P(ECREC,U,7) ;126 Synonym
"RTN","ECRDSSA",167,0)
 I $G(ECPTYP)'="E" I 'ECQUIT D PAUSE ;119
"RTN","ECRDSSA",168,0)
PRINTQ Q
"RTN","ECRDSSA",169,0)
 ;
"RTN","ECRDSSA",170,0)
HDR(ECLOCN,ECRDT,ECFDT,ECTDT,ECSRT) ;Report header
"RTN","ECRDSSA",171,0)
 ;  Input:
"RTN","ECRDSSA",172,0)
 ;    ECLOCN - location name
"RTN","ECRDSSA",173,0)
 ;    ECRDT - run date
"RTN","ECRDSSA",174,0)
 ;    EDFDT - from date
"RTN","ECRDSSA",175,0)
 ;    EDTDT - to date
"RTN","ECRDSSA",176,0)
 ;    ECSRT - sort text
"RTN","ECRDSSA",177,0)
 ;
"RTN","ECRDSSA",178,0)
 ;  Output:  none
"RTN","ECRDSSA",179,0)
 ;
"RTN","ECRDSSA",180,0)
 I ECCRT!(ECPAGE) W @IOF
"RTN","ECRDSSA",181,0)
 S ECPAGE=ECPAGE+1
"RTN","ECRDSSA",182,0)
 W !,?11,"EVENT CAPTURE DSS UNIT ACTIVITY REPORT"
"RTN","ECRDSSA",183,0)
 W ?58,"Run Date: ",ECRDT
"RTN","ECRDSSA",184,0)
 W ?109,"Page: ",ECPAGE
"RTN","ECRDSSA",185,0)
 W !!,?13,"For Location ",ECLOCN
"RTN","ECRDSSA",186,0)
 W !,?13,"From "_ECFDT_" through "_ECTDT
"RTN","ECRDSSA",187,0)
 W !,?13,"Sorted by ",ECSRT
"RTN","ECRDSSA",188,0)
 W !!,"Patient",?27,"SSN",?36,"I/O",?40,"Date/Time",?54,"Procedure",?112,"Vol",?118,"Primary" ;126
"RTN","ECRDSSA",189,0)
 W !?54,"Code",?60,"Name",?118,"Diagnosis" ;126
"RTN","ECRDSSA",190,0)
 W !?4,"Primary Provider",?60,"Synonym",!,$$REPEAT^XLFSTR("-",132) ;126
"RTN","ECRDSSA",191,0)
 Q
"RTN","ECRDSSA",192,0)
 ;
"RTN","ECRDSSA",193,0)
DSSHDR(ECDSS,ECDSSNM) ;DSS header
"RTN","ECRDSSA",194,0)
 ;  Input:
"RTN","ECRDSSA",195,0)
 ;    ECDSS - DSS unit
"RTN","ECRDSSA",196,0)
 ;    ECDSSNM - DSS unit name
"RTN","ECRDSSA",197,0)
 ;
"RTN","ECRDSSA",198,0)
 ;  Output:  none
"RTN","ECRDSSA",199,0)
 ;
"RTN","ECRDSSA",200,0)
 W !!,"DSS Unit: ",ECDSSNM," (IEN #",ECDSS,")"
"RTN","ECRDSSA",201,0)
 Q
"RTN","ECRDSSA",202,0)
 ;
"RTN","ECRDSSA",203,0)
PAUSE ;page break
"RTN","ECRDSSA",204,0)
 N DIR,DIRUT,DUOUT
"RTN","ECRDSSA",205,0)
 D FOOTER
"RTN","ECRDSSA",206,0)
 Q:'ECCRT
"RTN","ECRDSSA",207,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-7)
"RTN","ECRDSSA",208,0)
 W !
"RTN","ECRDSSA",209,0)
 S DIR(0)="E"
"RTN","ECRDSSA",210,0)
 D ^DIR
"RTN","ECRDSSA",211,0)
 I $D(DIRUT)!($D(DUOUT)) S ECQUIT=1
"RTN","ECRDSSA",212,0)
 Q
"RTN","ECRDSSA",213,0)
 ;
"RTN","ECRDSSA",214,0)
FOOTER ;page footer
"RTN","ECRDSSA",215,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECRDSSA",216,0)
 W " and/or a combination of these." ;149
"RTN","ECRDSSA",217,0)
 Q
"RTN","ECRDSSA",218,0)
 ;
"RTN","ECRDSSA",219,0)
GETLOCN(ECLOCA,ECLOC) ;get location name
"RTN","ECRDSSA",220,0)
 ;  Input:
"RTN","ECRDSSA",221,0)
 ;    ECLOCA - location
"RTN","ECRDSSA",222,0)
 ;    ECLOC - array of selected locations
"RTN","ECRDSSA",223,0)
 ;
"RTN","ECRDSSA",224,0)
 ;  Output:
"RTN","ECRDSSA",225,0)
 ;   Function value - returns location name on success; "" on failure
"RTN","ECRDSSA",226,0)
 ;
"RTN","ECRDSSA",227,0)
 N ECI
"RTN","ECRDSSA",228,0)
 N ECLOCNM
"RTN","ECRDSSA",229,0)
 S ECLOCNM=""
"RTN","ECRDSSA",230,0)
 I +$G(ECLOCA)>0 D
"RTN","ECRDSSA",231,0)
 . S ECI=0
"RTN","ECRDSSA",232,0)
 . F  S ECI=$O(ECLOC(ECI)) Q:'ECI!(ECLOCNM'="")  D
"RTN","ECRDSSA",233,0)
 . . I $P(ECLOC(ECI),U)=ECLOCA S ECLOCNM=$P(ECLOC(ECI),U,2)
"RTN","ECRDSSA",234,0)
 Q ECLOCNM
"RTN","ECRDSSA",235,0)
 ;
"RTN","ECRDSSA",236,0)
GETDSSN(ECDSS,ECDSSU) ;-get DSS unit name
"RTN","ECRDSSA",237,0)
 ;  Input:
"RTN","ECRDSSA",238,0)
 ;    ECDSS - DSS unit
"RTN","ECRDSSA",239,0)
 ;    ECDSSU - array of selected DSS units
"RTN","ECRDSSA",240,0)
 ;
"RTN","ECRDSSA",241,0)
 ;  Output:
"RTN","ECRDSSA",242,0)
 ;   Function value - returns DSS unit name on success; "" on failure
"RTN","ECRDSSA",243,0)
 ;
"RTN","ECRDSSA",244,0)
 N ECI
"RTN","ECRDSSA",245,0)
 N ECDSSNM
"RTN","ECRDSSA",246,0)
 S ECDSSNM=""
"RTN","ECRDSSA",247,0)
 I +$G(ECDSS)>0 D
"RTN","ECRDSSA",248,0)
 . S ECI=0
"RTN","ECRDSSA",249,0)
 . F  S ECI=$O(ECDSSU(ECI)) Q:'ECI!(ECDSSNM'="")  D
"RTN","ECRDSSA",250,0)
 . . I $P(ECDSSU(ECI),U)=ECDSS S ECDSSNM=$P(ECDSSU(ECI),U,2)
"RTN","ECRDSSA",251,0)
 Q ECDSSNM
"RTN","ECRDSSA",252,0)
 ;
"RTN","ECRDSSA",253,0)
GETKEYS(ECSRT,ECIEN,ECKEYS) ;get sort keys based on sort type
"RTN","ECRDSSA",254,0)
 ;  Input:
"RTN","ECRDSSA",255,0)
 ;    ECSRT - (required) sort type indicator (P, S, R)
"RTN","ECRDSSA",256,0)
 ;    ECIEN - (required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",257,0)
 ;    
"RTN","ECRDSSA",258,0)
 ;  Output:
"RTN","ECRDSSA",259,0)
 ;    ECKEYS - (pass by reference) array of sort keys
"RTN","ECRDSSA",260,0)
 ;    Function value - returns 1 on success;0 on failure
"RTN","ECRDSSA",261,0)
 ;
"RTN","ECRDSSA",262,0)
 N ECRSLT  ;function value
"RTN","ECRDSSA",263,0)
 S ECRSLT=0
"RTN","ECRDSSA",264,0)
 S (ECKEYS(1),ECKEYS(2))=""
"RTN","ECRDSSA",265,0)
 I $G(ECSRT)'="",+$G(ECIEN)>0 D
"RTN","ECRDSSA",266,0)
 . I ECSRT="P" D
"RTN","ECRDSSA",267,0)
 . . S ECKEYS(1)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",268,0)
 . . S ECKEYS(2)=$E($$GETSSN(ECIEN),1,9)  ;ssn
"RTN","ECRDSSA",269,0)
 . I ECSRT="R" D
"RTN","ECRDSSA",270,0)
 . . S ECKEYS(1)=$$GETPROV(ECIEN)  ;provider
"RTN","ECRDSSA",271,0)
 . . I ECKEYS(1)="" S ECKEYS(1)=" "  ;missing provider sorts to top
"RTN","ECRDSSA",272,0)
 . . S ECKEYS(2)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",273,0)
 . I ECSRT="S" D
"RTN","ECRDSSA",274,0)
 . . S ECKEYS(1)=$E($$GETSSN(ECIEN),1,9)  ;ssn
"RTN","ECRDSSA",275,0)
 . . S ECKEYS(2)=$$GET1^DIQ(721,ECIEN_",",1)  ;name
"RTN","ECRDSSA",276,0)
 . I ECKEYS(1)'="",ECKEYS(2)'="" S ECRSLT=1
"RTN","ECRDSSA",277,0)
 Q ECRSLT
"RTN","ECRDSSA",278,0)
 ;
"RTN","ECRDSSA",279,0)
GETSSN(ECIEN) ;get patient SSN
"RTN","ECRDSSA",280,0)
 ;  Input:
"RTN","ECRDSSA",281,0)
 ;    ECIEN - (required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",282,0)
 ;    
"RTN","ECRDSSA",283,0)
 ;  Output:
"RTN","ECRDSSA",284,0)
 ;    Function value - returns patient's SSN on success; "" on failure
"RTN","ECRDSSA",285,0)
 ;
"RTN","ECRDSSA",286,0)
 N DFN,VADM,VAERR  ;VADPT variables
"RTN","ECRDSSA",287,0)
 I +$G(ECIEN)>0 D
"RTN","ECRDSSA",288,0)
 . S DFN=$$GET1^DIQ(721,ECIEN_",",1,"I")
"RTN","ECRDSSA",289,0)
 . D DEM^VADPT
"RTN","ECRDSSA",290,0)
 I $G(ECPTYP)="E" Q $P($G(VADM(2)),U)  ;119 full SSN on export
"RTN","ECRDSSA",291,0)
 Q $E($P($G(VADM(2)),U),6,9)  ;112, only get last 4 SSN
"RTN","ECRDSSA",292,0)
 ;
"RTN","ECRDSSA",293,0)
GETPROV(ECIEN) ;get primary provider
"RTN","ECRDSSA",294,0)
 ;This function retrieves the primary provider for a given Event
"RTN","ECRDSSA",295,0)
 ;Capture record.  Searches the PROVIDER MULTIPLE (#42) field first
"RTN","ECRDSSA",296,0)
 ;and falls back to the PROVIDER (#10) field.
"RTN","ECRDSSA",297,0)
 ;  Input:
"RTN","ECRDSSA",298,0)
 ;    ECIEN -(required) pointer to EVENT CAPTURE PATIENT (#721) file
"RTN","ECRDSSA",299,0)
 ;
"RTN","ECRDSSA",300,0)
 ;  Output:
"RTN","ECRDSSA",301,0)
 ;   Function value - returns provider's name on success; "" on failure
"RTN","ECRDSSA",302,0)
 ;
"RTN","ECRDSSA",303,0)
 N ECPROV  ;provider name
"RTN","ECRDSSA",304,0)
 S ECPROV=""
"RTN","ECRDSSA",305,0)
 I $G(ECIEN)'="",$D(^ECH(ECIEN)) D
"RTN","ECRDSSA",306,0)
 . ;try PROVIDER MULTIPLE
"RTN","ECRDSSA",307,0)
 . I '$$GETPPRV^ECPRVMUT(ECIEN,.ECPROV) D  ;api returns "0" on success
"RTN","ECRDSSA",308,0)
 . . S ECPROV=$P(ECPROV,U,2)
"RTN","ECRDSSA",309,0)
 . E  D  ;try PROVIDER
"RTN","ECRDSSA",310,0)
 . . S ECPROV=$$GET1^DIQ(721,ECIEN_",",10)
"RTN","ECRDSSA",311,0)
 Q ECPROV
"RTN","ECRDSSA",312,0)
 ;
"RTN","ECRDSSA",313,0)
GETPRNM(ECVIEN,ECDT) ;get procedure name
"RTN","ECRDSSA",314,0)
 ;  Input:
"RTN","ECRDSSA",315,0)
 ;    ECVIEN - variable pointer to CPT (#81) file or EC PROC file
"RTN","ECRDSSA",316,0)
 ;    
"RTN","ECRDSSA",317,0)
 ;  Output:
"RTN","ECRDSSA",318,0)
 ;    Function value - returns procedure name on success; "" on failure
"RTN","ECRDSSA",319,0)
 ;
"RTN","ECRDSSA",320,0)
 N ECIEN   ;IEN part of variable pointer
"RTN","ECRDSSA",321,0)
 N ECFILE  ;file part of variable pointer
"RTN","ECRDSSA",322,0)
 S ECIEN=$P(ECVIEN,";",1)
"RTN","ECRDSSA",323,0)
 S ECFILE=$P(ECVIEN,";",2)
"RTN","ECRDSSA",324,0)
 Q $S(ECFILE["ICPT(":$P($$CPT^ICPTCOD(ECIEN,ECDT),U,3),ECFILE["EC(725":$$GET1^DIQ(725,ECIEN_",",.01),1:"")
"RTN","ECRDSSA",325,0)
 ;
"RTN","ECRDSSA",326,0)
GETPROC(ECVIEN) ;get procedure code
"RTN","ECRDSSA",327,0)
 ;  Input:
"RTN","ECRDSSA",328,0)
 ;    ECVIEN - variable pointer to CPT (#81) file or EC PROC file
"RTN","ECRDSSA",329,0)
 ;
"RTN","ECRDSSA",330,0)
 ;  Output:
"RTN","ECRDSSA",331,0)
 ;   Function value - returns procedure code on success; "" on failure
"RTN","ECRDSSA",332,0)
 ;
"RTN","ECRDSSA",333,0)
 N ECIEN  ;IEN part of variable pointer
"RTN","ECRDSSA",334,0)
 N ECFILE  ;file part of variable pointer
"RTN","ECRDSSA",335,0)
 S ECIEN=$P(ECVIEN,";",1)
"RTN","ECRDSSA",336,0)
 S ECFILE=$P(ECVIEN,";",2)
"RTN","ECRDSSA",337,0)
 Q $S(ECFILE["ICPT(":$$GET1^DIQ(81,ECIEN_",",.01),ECFILE["EC(725":$$GET1^DIQ(725,ECIEN_",",1),1:"")
"RTN","ECRDSSA",338,0)
 ;
"RTN","ECRDSSA",339,0)
GETPSYN(LOC,UNIT,CAT,PROC) ;API added in 126, gets synonym for EC screen
"RTN","ECRDSSA",340,0)
 N SYN,IEN
"RTN","ECRDSSA",341,0)
 S SYN=""
"RTN","ECRDSSA",342,0)
 I PROC="" Q SYN
"RTN","ECRDSSA",343,0)
 S IEN=$O(^ECJ("AP",LOC,UNIT,CAT,PROC,0))
"RTN","ECRDSSA",344,0)
 I IEN="" Q SYN
"RTN","ECRDSSA",345,0)
 Q $P($G(^ECJ(IEN,"PRO")),U,2)
"RTN","ECRDSSA",346,0)
 ;
"RTN","ECRDSSA",347,0)
ASKSRT(ECTYP) ;Ask report sort type
"RTN","ECRDSSA",348,0)
 ;  Input:  none
"RTN","ECRDSSA",349,0)
 ;  
"RTN","ECRDSSA",350,0)
 ;  Output:
"RTN","ECRDSSA",351,0)
 ;    ECTYP - (pass by reference) Sort type
"RTN","ECRDSSA",352,0)
 ;            (P: Patient Name,S: SSN,R: Provider Name)
"RTN","ECRDSSA",353,0)
 ;    Function value - returns 1 on success; 0 on failure
"RTN","ECRDSSA",354,0)
 ;
"RTN","ECRDSSA",355,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y  ;^DIR variables
"RTN","ECRDSSA",356,0)
 S DIR(0)="SA^P:PATIENT NAME;S:SSN;R:PROVIDER NAME"
"RTN","ECRDSSA",357,0)
 S DIR("A")="Sort within each DSS Unit by: "
"RTN","ECRDSSA",358,0)
 S DIR("B")="SSN"
"RTN","ECRDSSA",359,0)
 D ^DIR
"RTN","ECRDSSA",360,0)
 S ECTYP=$P(Y,U)
"RTN","ECRDSSA",361,0)
 Q $S($D(DUOUT):0,$D(DTOUT):0,$D(DIROUT):0,1:1)
"RTN","ECRDSSA",362,0)
 ;
"RTN","ECRDSSA",363,0)
ASKDEV() ;Ask output device
"RTN","ECRDSSA",364,0)
 ;  Input:  none
"RTN","ECRDSSA",365,0)
 ;
"RTN","ECRDSSA",366,0)
 ; Output:  1 if report is printed
"RTN","ECRDSSA",367,0)
 ;          0 if report is queued (or exited)
"RTN","ECRDSSA",368,0)
 ;
"RTN","ECRDSSA",369,0)
 N ECX,ZTDESC,ZTRTN,ZTSAVE
"RTN","ECRDSSA",370,0)
 S ECX=1
"RTN","ECRDSSA",371,0)
 K %ZIS S %ZIS="QMP"
"RTN","ECRDSSA",372,0)
 D ^%ZIS
"RTN","ECRDSSA",373,0)
 S:POP ECX=0
"RTN","ECRDSSA",374,0)
 I ECX&($D(IO("Q"))) D
"RTN","ECRDSSA",375,0)
 . S ZTRTN="STRPT^ECRDSSA",ZTDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRDSSA",376,0)
 . S (ZTSAVE("ECLOC("),ZTSAVE("ECDSSU("),ZTSAVE("ECSRT"))=""
"RTN","ECRDSSA",377,0)
 . S (ZTSAVE("ECSTDT"),ZTSAVE("ECENDDT"))=""
"RTN","ECRDSSA",378,0)
 . D ^%ZTLOAD
"RTN","ECRDSSA",379,0)
 . D HOME^%ZIS
"RTN","ECRDSSA",380,0)
 . S ECX=0
"RTN","ECRDSSA",381,0)
 Q ECX
"RTN","ECRECER")
0^2^B34819903^B34592121
"RTN","ECRECER",1,0)
ECRECER ;ALB/DAN-Event Capture Encounter Report ;9/30/14  10:49
"RTN","ECRECER",2,0)
 ;;2.0;EVENT CAPTURE;**112,122,126**;8 May 96;Build 8
"RTN","ECRECER",3,0)
 ;
"RTN","ECRECER",4,0)
STRPT ;
"RTN","ECRECER",5,0)
 K ^TMP("ECRECER",$J),^TMP($J,"ECRPT")
"RTN","ECRECER",6,0)
 D GETREC
"RTN","ECRECER",7,0)
 I ECPTYP="E" D EXPORT Q
"RTN","ECRECER",8,0)
 U IO
"RTN","ECRECER",9,0)
 D PRINT
"RTN","ECRECER",10,0)
 Q
"RTN","ECRECER",11,0)
 ;
"RTN","ECRECER",12,0)
GETREC ;Find records to put on report
"RTN","ECRECER",13,0)
 N ECLI,ECDFN,ECD,ECDT,ECIEN,ECPROV,ECPATN,ECSSN,ECVOL,ECARR,ECIO,CLNODE ;122,126
"RTN","ECRECER",14,0)
 S ECLI=0 F  S ECLI=$O(ECLOC1(ECLI)) Q:'+ECLI  D
"RTN","ECRECER",15,0)
 .S ECDFN=0 K ^TMP("UNI",$J) ;126
"RTN","ECRECER",16,0)
 .F  S ECDFN=+$O(^ECH("ADT",ECLI,ECDFN)) Q:'ECDFN  D
"RTN","ECRECER",17,0)
 ..S ECD=0
"RTN","ECRECER",18,0)
 ..F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  D
"RTN","ECRECER",19,0)
 ...S ECDT=ECSD-.1
"RTN","ECRECER",20,0)
 ...F  S ECDT=+$O(^ECH("ADT",ECLI,ECDFN,ECD,ECDT)) Q:'ECDT!(ECDT>(ECED_.24))  D
"RTN","ECRECER",21,0)
 ....S ECIEN=0
"RTN","ECRECER",22,0)
 ....F  S ECIEN=+$O(^ECH("ADT",ECLI,ECDFN,ECD,ECDT,ECIEN)) Q:'ECIEN  D
"RTN","ECRECER",23,0)
 .....S ECPROV=$$GETPROV^ECRDSSA(ECIEN)
"RTN","ECRECER",24,0)
 .....Q:$D(^TMP("UNI",$J,ECDFN,ECDT,ECD))  S ^TMP("UNI",$J,ECDFN,ECDT,ECD)="" ;126 don't count if already counted
"RTN","ECRECER",25,0)
 .....K ECARR D GETS^DIQ(721,ECIEN,"1;9;26;29","IE","ECARR","ECERROR") ;122 Add associated clinic (26) to list of fields returned
"RTN","ECRECER",26,0)
 .....S ECPATN=ECARR(721,ECIEN_",",1,"E")_"~"_ECDFN
"RTN","ECRECER",27,0)
 .....S ECSSN=$$GETSSN^ECRDSSA(ECIEN)
"RTN","ECRECER",28,0)
 .....S ECVOL=ECARR(721,ECIEN_",",9,"E"),ECIO=ECARR(721,ECIEN_",",29,"I")
"RTN","ECRECER",29,0)
 .....S CLNODE=$G(^ECX(728.44,+$G(ECARR(721,ECIEN_",",26,"I")),0)) ;122
"RTN","ECRECER",30,0)
 .....I $G(ECSORT)="P" D
"RTN","ECRECER",31,0)
 ......S ^TMP("ECRECER",$J,ECLOC1(ECLI),ECPATN,ECPROV,ECIEN)=ECIO_U_ECDT_U_ECD_U_ECVOL_U_ECSSN_U_$G(ECARR(721,ECIEN_",",26,"E"))_U_$P(CLNODE,U,2)_U_$P(CLNODE,U,3)_U_$P($G(^ECX(728.441,+$P(CLNODE,U,8),0)),U) ;122
"RTN","ECRECER",32,0)
 .....I $G(ECSORT)="D" D
"RTN","ECRECER",33,0)
 ......S ^TMP("ECRECER",$J,ECLOC1(ECLI),ECPROV,ECPATN,ECIEN)=ECIO_U_ECDT_U_ECD_U_ECVOL_U_ECSSN_U_$G(ECARR(721,ECIEN_",",26,"E"))_U_$P(CLNODE,U,2)_U_$P(CLNODE,U,3)_U_$P($G(^ECX(728.441,+$P(CLNODE,U,8),0)),U) ;122
"RTN","ECRECER",34,0)
 Q
"RTN","ECRECER",35,0)
 ;
"RTN","ECRECER",36,0)
EXPORT ;Put in delimited format for exporting
"RTN","ECRECER",37,0)
 N CNT,LOC,PATN,PROV,IEN,DATA
"RTN","ECRECER",38,0)
 Q:'$D(^TMP("ECRECER",$J))
"RTN","ECRECER",39,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="LOCATION^PATIENT^SSN^I/O^DATE/TIME^PROVIDER #1^DSS UNIT^VOLUME^CLINIC^STOP CODE^CREDIT STOP CODE^CHAR4 CODE" ;122
"RTN","ECRECER",40,0)
 I ECSORT="P" D
"RTN","ECRECER",41,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D
"RTN","ECRECER",42,0)
 ..S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PATN)) Q:PATN=""  D
"RTN","ECRECER",43,0)
 ...S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PATN,PROV)) Q:PROV=""  D
"RTN","ECRECER",44,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PATN,PROV,IEN)) Q:'+IEN  D
"RTN","ECRECER",45,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",46,0)
 .....S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=LOC_U_$P(PATN,"~")_U_$P(DATA,U,5)_U_$P(DATA,U,1)_U_$$FMTE^XLFDT($P(DATA,U,2),2)_U_PROV_U_ECDSSU($P(DATA,U,3))_U_$P(DATA,U,4)_U_$P(DATA,U,6)_U_$P(DATA,U,7)_U_$P(DATA,U,8)_U_$P(DATA,U,9) ;122
"RTN","ECRECER",47,0)
 I ECSORT="D" D
"RTN","ECRECER",48,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D
"RTN","ECRECER",49,0)
 ..S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PROV)) Q:PROV=""  D
"RTN","ECRECER",50,0)
 ...S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN)) Q:PATN=""  D
"RTN","ECRECER",51,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN,IEN)) Q:'+IEN  D
"RTN","ECRECER",52,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",53,0)
 .....S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=LOC_U_$P(PATN,"~")_U_$P(DATA,U,5)_U_$P(DATA,U,1)_U_$$FMTE^XLFDT($P(DATA,U,2),2)_U_PROV_U_ECDSSU($P(DATA,U,3))_U_$P(DATA,U,4)_U_$P(DATA,U,6)_U_$P(DATA,U,7)_U_$P(DATA,U,8)_U_$P(DATA,U,9) ;122
"RTN","ECRECER",54,0)
 Q
"RTN","ECRECER",55,0)
 ;
"RTN","ECRECER",56,0)
PRINT ;Display results
"RTN","ECRECER",57,0)
 N LOC,PATN,PROV,IEN,DATA,PAGE,PTOT,PROTOT
"RTN","ECRECER",58,0)
 I '$D(^TMP("ECRECER",$J)) S LOC="NONE" D HDR W !,"No data found"
"RTN","ECRECER",59,0)
 S PAGE=0
"RTN","ECRECER",60,0)
 I ECSORT="P" D
"RTN","ECRECER",61,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D HDR D
"RTN","ECRECER",62,0)
 ..S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PATN)) Q:PATN=""  K PTOT,PROTOT D  D SUB
"RTN","ECRECER",63,0)
 ...S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PATN,PROV)) Q:PROV=""  D
"RTN","ECRECER",64,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PATN,PROV,IEN)) Q:'+IEN  D
"RTN","ECRECER",65,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",66,0)
 .....W !,$P(PATN,"~"),?32,$P(DATA,U,5),?38,$P(DATA,U,1),?43,$$FMTE^XLFDT($P(DATA,U,2),2),?59,PROV,?91,ECDSSU($P(DATA,U,3)),?123,$P(DATA,U,4)
"RTN","ECRECER",67,0)
 .....W !,?4,$P(DATA,U,6),?36,$P(DATA,U,7),?47,$P(DATA,U,8),?60,$P(DATA,U,9) ;122
"RTN","ECRECER",68,0)
 .....S PTOT=+$G(PTOT)+1,PROTOT(PROV)=+$G(PROTOT(PROV))+1
"RTN","ECRECER",69,0)
 I ECSORT="D" D
"RTN","ECRECER",70,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D HDR D
"RTN","ECRECER",71,0)
 ..S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PROV)) Q:PROV=""  K PROTOT,PTOT D  D SUB
"RTN","ECRECER",72,0)
 ...S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN)) Q:PATN=""  D
"RTN","ECRECER",73,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN,IEN)) Q:'+IEN  D
"RTN","ECRECER",74,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",75,0)
 .....W !,$P(PATN,"~"),?32,$P(DATA,U,5),?38,$P(DATA,U,1),?43,$$FMTE^XLFDT($P(DATA,U,2),2),?59,PROV,?91,ECDSSU($P(DATA,U,3)),?123,$P(DATA,U,4)
"RTN","ECRECER",76,0)
 .....W !,?4,$P(DATA,U,6),?36,$P(DATA,U,7),?47,$P(DATA,U,8),?60,$P(DATA,U,9) ;122
"RTN","ECRECER",77,0)
 .....S PTOT(PATN)=+$G(PTOT(PATN))+1,PROTOT=+$G(PROTOT)+1
"RTN","ECRECER",78,0)
 Q
"RTN","ECRECER",79,0)
HDR ;Print Header
"RTN","ECRECER",80,0)
 N SORT
"RTN","ECRECER",81,0)
 W @IOF
"RTN","ECRECER",82,0)
 S PAGE=+$G(PAGE)+1
"RTN","ECRECER",83,0)
 W ?51,"Event Capture Encounters Report",?123,"Page: ",PAGE
"RTN","ECRECER",84,0)
 W !,?(132-(12+$L(LOC))\2),"For Location ",LOC
"RTN","ECRECER",85,0)
 W !,?47,"From ",$$FMTE^XLFDT(ECSD)," through ",$$FMTE^XLFDT(ECED)
"RTN","ECRECER",86,0)
 S SORT=$S(ECSORT="P":"Patient Name",1:"Provider")
"RTN","ECRECER",87,0)
 W !,?(132-(9+$L(SORT))\2),"Sorted by ",SORT,!
"RTN","ECRECER",88,0)
 W !,"Patient",?32,"SSN",?38,"I/O",?43,"Date/Time",?59,"Provider #1",?91,"DSS Unit",?123,"Vol"
"RTN","ECRECER",89,0)
 W !,?4,"Clinic",?36,"Stop Code",?47,"Credit Stop",?60,"CHAR4" ;122
"RTN","ECRECER",90,0)
 W !,$$REPEAT^XLFSTR("-",132)
"RTN","ECRECER",91,0)
 Q
"RTN","ECRECER",92,0)
SUB ;Print totals
"RTN","ECRECER",93,0)
 N ARR,DISP
"RTN","ECRECER",94,0)
 I ECSORT="P" D
"RTN","ECRECER",95,0)
 .W !
"RTN","ECRECER",96,0)
 .S ARR="" F  S ARR=$O(PROTOT(ARR)) Q:ARR=""  S DISP="Subtotal for provider "_ARR W !,$J(DISP,128),$J(PROTOT(ARR),4)
"RTN","ECRECER",97,0)
 .W !,?128,"===="
"RTN","ECRECER",98,0)
 .S DISP="Total for patient "_$P(PATN,"~") W !,$J(DISP,128),$J(PTOT,4),!
"RTN","ECRECER",99,0)
 I ECSORT="D" D
"RTN","ECRECER",100,0)
 .W !
"RTN","ECRECER",101,0)
 .S ARR="" F  S ARR=$O(PTOT(ARR)) Q:ARR=""  S DISP="Subtotal for patient "_$P(ARR,"~") W !,$J(DISP,128),$J(PTOT(ARR),4)
"RTN","ECRECER",102,0)
 .W !,?128,"===="
"RTN","ECRECER",103,0)
 .S DISP="Total for provider "_PROV W !,$J(DISP,128),$J(PROTOT,4),!
"RTN","ECRECER",104,0)
 Q
"RTN","ECRPRSN2")
0^7^B26258090^B23756227
"RTN","ECRPRSN2",1,0)
ECRPRSN2 ;ALB/DAN - Updated Procedure Reasons Report;24 JAN 07 ;9/30/14  17:18
"RTN","ECRPRSN2",2,0)
 ;;2.0;EVENT CAPTURE;**112,126**;8 May 96;Build 8
"RTN","ECRPRSN2",3,0)
STRPT ;queued entry point or continuation
"RTN","ECRPRSN2",4,0)
 D PROCESS
"RTN","ECRPRSN2",5,0)
 I ECPTYP="E" D EXPORT D EXIT Q
"RTN","ECRPRSN2",6,0)
 U IO D PRINT Q:$D(ECGUI)
"RTN","ECRPRSN2",7,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECRPRSN2",8,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECRPRSN2",9,0)
 D EXIT
"RTN","ECRPRSN2",10,0)
 Q
"RTN","ECRPRSN2",11,0)
PROCESS ;get data to print
"RTN","ECRPRSN2",12,0)
 N EC,ECD,ECDA,ECPA,ECR,ECRL,ECRN,ECPATN,ECSSN,ECP,ECLOCA
"RTN","ECRPRSN2",13,0)
 N ECUNIT,ECFILE,ECPRV,ECPRVN,ECDFN,ECCPT
"RTN","ECRPRSN2",14,0)
 N NLOC,NUNIT,JJ,REAS,ECRSNUM,ECPI,ECPROCNM ;126
"RTN","ECRPRSN2",15,0)
 K ^TMP("ECREAS",$J)
"RTN","ECRPRSN2",16,0)
 ;if ecreas array doesn't exist, quit
"RTN","ECRPRSN2",17,0)
 I $D(ECLINK)<10 Q
"RTN","ECRPRSN2",18,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECRPRSN2",19,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN2",20,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECRPRSN2",21,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECRPRSN2",22,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECRPRSN2",23,0)
 S ECD=ECSD F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECRPRSN2",24,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0))  I $P(EC,"^",23)'="" D
"RTN","ECRPRSN2",25,0)
 ..S ECDFN=$P(EC,"^")
"RTN","ECRPRSN2",26,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECRPRSN2",27,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECRPRSN2",28,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECRPRSN2",29,0)
 ..F REAS=34,43,44 S ECRL=$$GET1^DIQ(721,ECDA,REAS,"I") I +ECRL I $D(ECLINK(ECRL))  S ECR=ECLINK(ECRL),ECRN=$P($G(^ECR(ECR,0)),"^") I ECRN'="" S ECRSNUM=$S(REAS=34:1,REAS=43:2,1:3) D
"RTN","ECRPRSN2",30,0)
 ...S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECRPRSN2",31,0)
 ...S ECPROCNM=$$GETPRNM^ECRDSSA(ECP,ECD) ;126 Get procedure name from file entry
"RTN","ECRPRSN2",32,0)
 ...S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECRPRSN2",33,0)
 ...S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",2))
"RTN","ECRPRSN2",34,0)
 ...I ECCPT'=""&(ECFILE=81) D
"RTN","ECRPRSN2",35,0)
 ....S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")) I +ECPI>1 S ECCPT=$P(ECPI,"^",2)
"RTN","ECRPRSN2",36,0)
 ...S (ECPA,ECPATN)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECRPRSN2",37,0)
 ...S ECPATN=$P(ECPA,"^",1),ECSSN=$E($P(ECPA,"^",9),6,9)
"RTN","ECRPRSN2",38,0)
 ...S:ECPATN="" ECPATN="UNKNOWN"
"RTN","ECRPRSN2",39,0)
 ...S (ECPRV,ECPRVN)="",ECPRV=$$GETPPRV^ECPRVMUT(ECDA,.ECPRVN),ECPRVN=$S(ECPRV:"UNKNOWN",1:ECPRVN)
"RTN","ECRPRSN2",40,0)
 ...S ^TMP("ECREAS",$J,NLOC(ECLOCA),NUNIT(ECUNIT)_"~"_ECUNIT,ECRN,ECPATN,ECD)=ECRSNUM_"^"_$P(ECPRVN,U,2)_"^"_ECSSN_"^"_ECCPT_"^"_ECPROCNM ;126
"RTN","ECRPRSN2",41,0)
 Q
"RTN","ECRPRSN2",42,0)
PRINT ;output report
"RTN","ECRPRSN2",43,0)
 N ECED2,ECSD2,Y,DSSU,REAS,PAT,DATE,DATA,PAGE,QFLAG,DASH,PRNTDT,LOC,%
"RTN","ECRPRSN2",44,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",132)=""
"RTN","ECRPRSN2",45,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD2=Y S Y=$P(ECED,".",1) D DD^%DT S ECED2=Y
"RTN","ECRPRSN2",46,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECRPRSN2",47,0)
 ;if no data exists then print the header and quit
"RTN","ECRPRSN2",48,0)
 I '$D(^TMP("ECREAS",$J)) D  Q
"RTN","ECRPRSN2",49,0)
 .S LOC="" D HEAD
"RTN","ECRPRSN2",50,0)
 .W !!,?6,"No data for the date range specified.",!!
"RTN","ECRPRSN2",51,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPRSN2",52,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN2",53,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECRPRSN2",54,0)
 S LOC="" F  S LOC=$O(^TMP("ECREAS",$J,LOC)) Q:LOC=""  D HEAD  S DSSU="" F  S DSSU=$O(^TMP("ECREAS",$J,LOC,DSSU)) Q:DSSU=""  W !,"DSS Unit: ",$P(DSSU,"~",1)_" (IEN "_$P(DSSU,"~",2)_")"  D  W !
"RTN","ECRPRSN2",55,0)
 .S REAS="" F  S REAS=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS)) Q:REAS=""  D
"RTN","ECRPRSN2",56,0)
 ..S PAT="" F  S PAT=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT)) Q:PAT=""  S DATE="" F  S DATE=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT,DATE)) Q:'+DATE  D
"RTN","ECRPRSN2",57,0)
 ...S DATA=^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT,DATE)
"RTN","ECRPRSN2",58,0)
 ...W !,?3,REAS,?37,$P(DATA,U),?41,$P(DATA,U,4),?52,$P(DATA,U,5),?118,$$FMTE^XLFDT(DATE,2),!,?43,PAT,?75,$P(DATA,U,3),?81,$P(DATA,U,2) ;126
"RTN","ECRPRSN2",59,0)
 ...I $Y>(IOSL-4) D HEAD
"RTN","ECRPRSN2",60,0)
 Q
"RTN","ECRPRSN2",61,0)
HEAD ;header
"RTN","ECRPRSN2",62,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN2",63,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECRPRSN2",64,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECRPRSN2",65,0)
 S PAGE=PAGE+1
"RTN","ECRPRSN2",66,0)
 W !,?47,"Event Capture Procedure Reasons Report",?123,"Page: ",PAGE
"RTN","ECRPRSN2",67,0)
 W !,?43,"for the Date Range ",$$FMTE^XLFDT(ECSD2)," to ",$$FMTE^XLFDT(ECED2),!,?53,"Printed: "_PRNTDT,!
"RTN","ECRPRSN2",68,0)
 W !,"Location: ",LOC,!
"RTN","ECRPRSN2",69,0)
 W ?3,"PROCEDURE REASON",?35,"RSN#",?41,"PROC CODE",?52,"PROCEDURE NAME",?118,"DATE/TIME",!,?43,"PATIENT",?75,"SSN",?81,"PROVIDER" ;126
"RTN","ECRPRSN2",70,0)
 W !,DASH
"RTN","ECRPRSN2",71,0)
 Q
"RTN","ECRPRSN2",72,0)
EXIT ;common exit point
"RTN","ECRPRSN2",73,0)
 D:'$D(ECGUI) ^%ZISC
"RTN","ECRPRSN2",74,0)
 K ^TMP("ECREAS",$J)
"RTN","ECRPRSN2",75,0)
 Q
"RTN","ECRPRSN2",76,0)
 ;
"RTN","ECRPRSN2",77,0)
EXPORT ;Convert data to exportable format
"RTN","ECRPRSN2",78,0)
 N LOC,DSSU,REAS,PAT,DATE,CNT,DATA
"RTN","ECRPRSN2",79,0)
 K ^TMP($J,"ECRPT") ;make sure there isn't anything here before it's populated
"RTN","ECRPRSN2",80,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="LOCATION^DSS UNIT^DSS UNIT IEN^REASON TEXT^REASON #^PROC CODE^PROCEDURE NAME^SSN^PATIENT^DATE/TIME^PROVIDER" ;126
"RTN","ECRPRSN2",81,0)
 S LOC="" F  S LOC=$O(^TMP("ECREAS",$J,LOC)) Q:LOC=""  S DSSU="" F  S DSSU=$O(^TMP("ECREAS",$J,LOC,DSSU)) Q:DSSU=""  S REAS="" F  S REAS=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS)) Q:REAS=""  D
"RTN","ECRPRSN2",82,0)
 .S PAT="" F  S PAT=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT)) Q:PAT=""  S DATE="" F  S DATE=$O(^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT,DATE)) Q:'+DATE  D
"RTN","ECRPRSN2",83,0)
 ..S DATA=^TMP("ECREAS",$J,LOC,DSSU,REAS,PAT,DATE)
"RTN","ECRPRSN2",84,0)
 ..S CNT=CNT+1,^TMP($J,"ECRPT",CNT)=LOC_U_$P(DSSU,"~",1)_U_$P(DSSU,"~",2)_U_REAS_U_$P(DATA,U,1)_U_$P(DATA,U,4)_U_$P(DATA,U,5)_U_$P(DATA,U,3)_U_PAT_U_$$FMTE^XLFDT(DATE,2)_U_$P(DATA,U,2) ;126
"RTN","ECRPRSN2",85,0)
 Q
"RTN","ECRRPT")
0^10^B61480819^B57156527
"RTN","ECRRPT",1,0)
ECRRPT ;ALB/JAM - Event Capture Report RPC Broker ;12/2/14  10:40
"RTN","ECRRPT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,41,56,61,82,94,95,108,112,119,122,126**;8 May 96;Build 8
"RTN","ECRRPT",3,0)
 ;
"RTN","ECRRPT",4,0)
 ;119 For patch 119, added comment regarding ECPTYP being set to "E" when exporting, for those reports that are now exportable.
"RTN","ECRRPT",5,0)
REQCHK(ECV) ;Required data check
"RTN","ECRRPT",6,0)
 N I,C
"RTN","ECRRPT",7,0)
 S C=1
"RTN","ECRRPT",8,0)
 F I=1:1:$L(ECV,U) I '$D(@$P(ECV,U,I)) D
"RTN","ECRRPT",9,0)
 . S ^TMP("ECMSG",$J,C)="0^Required data missing "_$P(ECV,U,I)
"RTN","ECRRPT",10,0)
 . S C=C+1,ECERR=1
"RTN","ECRRPT",11,0)
 Q
"RTN","ECRRPT",12,0)
DATECHK(ECSD,ECED) ;Check human format date and converts to FileMan format
"RTN","ECRRPT",13,0)
 ;    Input  ECSD  - Start Date (ex. 10/9/01)
"RTN","ECRRPT",14,0)
 ;           ECED  - End Date
"RTN","ECRRPT",15,0)
 N ECI,X,Y
"RTN","ECRRPT",16,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECRRPT",17,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD),ECED=$S(ECED=-1:DT,1:ECED)
"RTN","ECRRPT",18,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED)
"RTN","ECRRPT",19,0)
 Q
"RTN","ECRRPT",20,0)
QUEUE ;Queues report to printer
"RTN","ECRRPT",21,0)
 N ZTIO,ZTDESC,ZTRTN,ZTDTH,ZTSAVE,%ZIS,I,IOP,POP
"RTN","ECRRPT",22,0)
 S IOP="Q;`"_ECDEV,%ZIS="Q" D ^%ZIS I POP D  Q
"RTN","ECRRPT",23,0)
 . S ^TMP("ECMSG",$J,1)="0^Device selection unsuccessful"
"RTN","ECRRPT",24,0)
 S ZTIO=ION,ZTDESC=ECDESC,ZTRTN=ECROU
"RTN","ECRRPT",25,0)
 S ZTDTH=$$FMTH^XLFDT(ECQDT)
"RTN","ECRRPT",26,0)
 ;D NOW^%DTC S ZTDTH=$S(%'<ECQDT:%+.0002,1:ECQDT)
"RTN","ECRRPT",27,0)
 F I=1:1:$L(ECV,U) I $D(@$P(ECV,U,I)) S ZTSAVE($P(ECV,U,I))=""
"RTN","ECRRPT",28,0)
 M ZTSAVE=ECSAVE
"RTN","ECRRPT",29,0)
 D ^%ZTLOAD,HOME^%ZIS,^%ZISC ;K IO("Q")
"RTN","ECRRPT",30,0)
 I $D(ZTSK) S ^TMP("ECMSG",$J)="1^Report queued. Task #"_ZTSK Q
"RTN","ECRRPT",31,0)
 S ^TMP("ECMSG",$J)="0^Task Rejected"
"RTN","ECRRPT",32,0)
 Q
"RTN","ECRRPT",33,0)
 ;
"RTN","ECRRPT",34,0)
ECPAT ;Patient Summary Report for RPC Call
"RTN","ECRRPT",35,0)
 ;     Variables passed in
"RTN","ECRRPT",36,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",37,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",38,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",39,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",40,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",41,0)
 ;                or (E)xport
"RTN","ECRRPT",42,0)
 ;
"RTN","ECRRPT",43,0)
 ;     Variable return
"RTN","ECRRPT",44,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",45,0)
 N ECDATE,ECPAT,ECV,DIC,X,Y,ECROU,ECDESC
"RTN","ECRRPT",46,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",47,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",48,0)
 ;EC*2.0*108 - Convert Date/Time to Date only
"RTN","ECRRPT",49,0)
 S ECSD=$P(ECSD,"."),ECED=$P(ECED,".")
"RTN","ECRRPT",50,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",51,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",52,0)
 I $E($G(ECRY))'="Y" K ECRY
"RTN","ECRRPT",53,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",54,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED^ECRY",ECROU="SUM^ECPAT"
"RTN","ECRRPT",55,0)
 . S ECDESC="EVENT CAPTURE PATIENT SUMMARY"
"RTN","ECRRPT",56,0)
 . D QUEUE
"RTN","ECRRPT",57,0)
 D SUM^ECPAT
"RTN","ECRRPT",58,0)
 Q
"RTN","ECRRPT",59,0)
ECRDSSU ;DSS Unit Workload Summary Report
"RTN","ECRRPT",60,0)
 ;     Variables passed in
"RTN","ECRRPT",61,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",62,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",63,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",64,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",65,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",66,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",67,0)
 ;                or (E)xport
"RTN","ECRRPT",68,0)
 ;
"RTN","ECRRPT",69,0)
 ;     Variable return
"RTN","ECRRPT",70,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",71,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",72,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",73,0)
 S ECV="ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",74,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",75,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",76,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",77,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",78,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",79,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",80,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",81,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",82,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",83,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",84,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",85,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",86,0)
 . S ECV="ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSU"
"RTN","ECRRPT",87,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",88,0)
 . S ECDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRRPT",89,0)
 . D QUEUE
"RTN","ECRRPT",90,0)
 D STRPT^ECRDSSU
"RTN","ECRRPT",91,0)
 Q
"RTN","ECRRPT",92,0)
PROSUM ;Provider (1-7) Summary Report for RPC Call 119-Updated comment to reflect 7 instead of 3
"RTN","ECRRPT",93,0)
 ;     Variables passed in
"RTN","ECRRPT",94,0)
 ;       ECU    - Provider IEN for file #200
"RTN","ECRRPT",95,0)
 ;       ECL0   - All, 1, or many locations
"RTN","ECRRPT",96,0)
 ;       ECD0   - All, 1, or many DSS units
"RTN","ECRRPT",97,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",98,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",99,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",100,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",101,0)
 ;                or (E)xport
"RTN","ECRRPT",102,0)
 ;
"RTN","ECRRPT",103,0)
 ;     Variable return
"RTN","ECRRPT",104,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",105,0)
 N ECV,ECDATE,ECUN,ECROU,ECDESC,DIC,X,Y,ECSAVE,ECSLOC,ECSUNIT,NUM ;126
"RTN","ECRRPT",106,0)
 S ECV="ECU^ECSD^ECED^ECL0^ECD0" D REQCHK(ECV) I ECERR Q  ;126
"RTN","ECRRPT",107,0)
 S DIC=200,DIC(0)="QNZX",X=ECU D ^DIC D:Y<0  Q:Y<0  S ECUN=$P(Y,U,2)
"RTN","ECRRPT",108,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",109,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",110,0)
 I ECL0="ALL" S ECSLOC="ALL" ;126
"RTN","ECRRPT",111,0)
 I ECL0'="ALL" F NUM=0:1 Q:'$D(@("ECL"_NUM))  S ECSLOC(@("ECL"_NUM))="" ;126
"RTN","ECRRPT",112,0)
 I ECD0="ALL" S ECSUNIT="ALL" ;126
"RTN","ECRRPT",113,0)
 I ECD0'="ALL" F NUM=0:1 Q:'$D(@("ECD"_NUM))  S ECSUNIT(@("ECD"_NUM))="" ;126
"RTN","ECRRPT",114,0)
 I ECRY'="Y" K ECRY
"RTN","ECRRPT",115,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",116,0)
 . S ECV="ECU^ECUN^ECDATE^ECSD^ECED^ECRY"
"RTN","ECRRPT",117,0)
 . S ECSAVE("ECSLOC*")="",ECSAVE("ECSUNIT*")="" ;126
"RTN","ECRRPT",118,0)
 . S ECROU="EN^ECPRSUM1",ECDESC="Event Capture Provider Summary"
"RTN","ECRRPT",119,0)
 . D QUEUE
"RTN","ECRRPT",120,0)
 D EN^ECPRSUM1
"RTN","ECRRPT",121,0)
 Q
"RTN","ECRRPT",122,0)
ECPROV ;Provider Summary Report for RPC Call
"RTN","ECRRPT",123,0)
 ;     Variables passed in
"RTN","ECRRPT",124,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",125,0)
 ;       ECD    - DSS Unit to report (1 or ALL)
"RTN","ECRRPT",126,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",127,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",128,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",129,0)
 ;       ECDUZ  - User DUZ (ien in #200)
"RTN","ECRRPT",130,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",131,0)
 ;                or (E)xport
"RTN","ECRRPT",132,0)
 ;
"RTN","ECRRPT",133,0)
 ;     Variable return
"RTN","ECRRPT",134,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",135,0)
 N ECV,ECDN,ECDATE,ECLN,ECSAVE,ECDESC,ECROU,DIC,X,Y,CNT,UNIT
"RTN","ECRRPT",136,0)
 S ECDN="ALL",ECV="ECL^ECD^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",137,0)
 I ECL'="ALL" D  I ECERR Q
"RTN","ECRRPT",138,0)
 . ;The line below was changed by VMP for NOIS ANN-1003-42305
"RTN","ECRRPT",139,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC D:Y<0  Q:Y<0  S ECLN=$P(Y,U,2)
"RTN","ECRRPT",140,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",141,0)
 I ECD'="ALL" K DIC D  I ECERR Q
"RTN","ECRRPT",142,0)
 . S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC D:Y<0  Q:Y<0  S ECDN=$P(Y,U,2)
"RTN","ECRRPT",143,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",144,0)
 I ECD="ALL",'$D(^XUSEC("ECALLU",ECDUZ)) D
"RTN","ECRRPT",145,0)
 . S (ECD,ECDN)="SOME",(X,CNT)=0
"RTN","ECRRPT",146,0)
 . F  S X=$O(^VA(200,ECDUZ,"EC",X)) Q:'X  D
"RTN","ECRRPT",147,0)
 . . S CNT=CNT+1,UNIT=$P(^VA(200,ECDUZ,"EC",X,0),"^")
"RTN","ECRRPT",148,0)
 . . S UNIT(CNT)=UNIT_"^"_$P(^ECD(UNIT,0),"^")
"RTN","ECRRPT",149,0)
 ;I $E($G(ECRY))'="Y" K ECRY ;112 Removed check for ECRY as reasons always print - remove comment and next line to restore reason check
"RTN","ECRRPT",150,0)
 S ECRY="Y" ;112 Reasons always print
"RTN","ECRRPT",151,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",152,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999 S:'$D(UNIT) UNIT=""
"RTN","ECRRPT",153,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",154,0)
 . S ECV="ECDATE^ECSD^ECED^ECRY",ECROU="START^ECPROV2"
"RTN","ECRRPT",155,0)
 . S (ECSAVE("ECL*"),ECSAVE("ECD*"),ECSAVE("UNIT*"))=""
"RTN","ECRRPT",156,0)
 . S ECDESC="EVENT CAPTURE PROVIDER SUMMARY"
"RTN","ECRRPT",157,0)
 . D QUEUE
"RTN","ECRRPT",158,0)
 U IO D START^ECPROV2
"RTN","ECRRPT",159,0)
 Q
"RTN","ECRRPT",160,0)
ECOSSUM ;Ordering Section Summary Report for RPC Call
"RTN","ECRRPT",161,0)
 ;     Variables passed in
"RTN","ECRRPT",162,0)
 ;       ECOS   - Ordering Section
"RTN","ECRRPT",163,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",164,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",165,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",166,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",167,0)
 ;       ECDUZ  - User ien (#200)
"RTN","ECRRPT",168,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",169,0)
 ;                or (E)xport
"RTN","ECRRPT",170,0)
 ;
"RTN","ECRRPT",171,0)
 ;     Variable return
"RTN","ECRRPT",172,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",173,0)
 N ECV,ECI,ECOSN,ECLOC,ECDSSU,ECDATE,ECNT,ECSAVE,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",174,0)
 S ECV="ECOS^ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",175,0)
 S DIC=723,DIC(0)="QNMZX",X=ECOS D ^DIC D:Y<0  Q:Y<0  S ECOSN=$P(Y,U,2)
"RTN","ECRRPT",176,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Ordering Section.",ECERR=1
"RTN","ECRRPT",177,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1 Q
"RTN","ECRRPT",178,0)
 . K DIC I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",179,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",180,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",181,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",182,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",183,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",184,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",185,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",186,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",187,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",188,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",189,0)
 . S ECV="ECOS^ECSD^ECED^ECOSN",ECROU="START^ECOSSUM"
"RTN","ECRRPT",190,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",191,0)
 . S ECDESC="EC Ordering Section Summary"
"RTN","ECRRPT",192,0)
 . D QUEUE
"RTN","ECRRPT",193,0)
 D START^ECOSSUM
"RTN","ECRRPT",194,0)
 Q
"RTN","ECRRPT",195,0)
ECPCER ;PCE Data Summary Report for RPC Call
"RTN","ECRRPT",196,0)
 ;     Variables passed in
"RTN","ECRRPT",197,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",198,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",199,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",200,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",201,0)
 ;                or (E)xport
"RTN","ECRRPT",202,0)
 ;
"RTN","ECRRPT",203,0)
 ;     Variable return
"RTN","ECRRPT",204,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",205,0)
 N ECV,ECDATE,ECPAT,ECROU,ECDESC,X,DIC,Y
"RTN","ECRRPT",206,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",207,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC D:Y<0  Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",208,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",209,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",210,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",211,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",212,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED",ECROU="SUM^ECPCER"
"RTN","ECRRPT",213,0)
 . S ECDESC="ECS/PCE PATIENT SUMMARY"
"RTN","ECRRPT",214,0)
 . D QUEUE
"RTN","ECRRPT",215,0)
 D SUM^ECPCER
"RTN","ECRRPT",216,0)
 Q
"RTN","ECRRPT",217,0)
ECRDSSA ;DSS Unit Activity Report
"RTN","ECRRPT",218,0)
 ;     Variables passed in
"RTN","ECRRPT",219,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",220,0)
 ;       ECD0   - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",221,0)
 ;       ECSORT  - Sort type(P,S or R)
"RTN","ECRRPT",222,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",223,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",224,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",225,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",226,0)
 ;                or (E)xport
"RTN","ECRRPT",227,0)
 ;
"RTN","ECRRPT",228,0)
 ;     Variable return
"RTN","ECRRPT",229,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",230,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",231,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",232,0)
 S ECV="ECL^ECD0^ECSORT^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",233,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",234,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",235,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",236,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",237,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",238,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",239,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",240,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",241,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",242,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",243,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",244,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",245,0)
 . S ECV="ECSORT^ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSA"
"RTN","ECRRPT",246,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",247,0)
 . S ECDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRRPT",248,0)
 . D QUEUE
"RTN","ECRRPT",249,0)
 D STRPT^ECRDSSA
"RTN","ECRRPT",250,0)
 Q
"RTN","ECSUM")
0^8^B16478678^B15633396
"RTN","ECSUM",1,0)
ECSUM ;BIR/JLP,RHK-Category and Procedure Summary ;11/26/14  10:21
"RTN","ECSUM",2,0)
 ;;2.0;EVENT CAPTURE;**4,19,33,47,95,119,122,126**;8 May 96;Build 8
"RTN","ECSUM",3,0)
LOC K ECL S EC1=0 D ^ECL S:$D(LOC(2)) EC1=1 K LOC I '$D(ECL) S ECOUT=1 G END
"RTN","ECSUM",4,0)
UNIT ;set var and sel dss unit
"RTN","ECSUM",5,0)
 S ECJLP=0
"RTN","ECSUM",6,0)
 S (ECOUT,ECALL)=0,ECPG=1
"RTN","ECSUM",7,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSUM",8,0)
 .W !!,"Do you want to list all DSS Units for "_ECLN S %=1 D YN^DICN Q:%
"RTN","ECSUM",9,0)
 .W !!?5,"Enter <RET> to list all your DSS Units for this location, or"
"RTN","ECSUM",10,0)
 .W !?11,"NO to select a specific DSS Unit"
"RTN","ECSUM",11,0)
 G:%<0 END I %=1 S ECALL=1 G ECSCN
"RTN","ECSUM",12,0)
 W @IOF,! K DIC S DIC=724,DIC(0)="QEAMZ",DIC("A")="Select DSS Unit: "
"RTN","ECSUM",13,0)
 S:ECL DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))"
"RTN","ECSUM",14,0)
 D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2)
"RTN","ECSUM",15,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSUM",16,0)
 S ECS=+$P(^ECD(ECD,0),"^",2),ECJLP=+$P(^(0),"^",11)
"RTN","ECSUM",17,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECSUM",18,0)
SEL ;
"RTN","ECSUM",19,0)
 I 'ECJLP S ECC=0,ECCN="None" G ECSCN
"RTN","ECSUM",20,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSUM",21,0)
 .W !!,"Do you want to list all categories for "_ECDN S %=1 D YN^DICN Q:%
"RTN","ECSUM",22,0)
 .W !!,"Enter <RET> if you would like to list all categories for this "
"RTN","ECSUM",23,0)
 .W "DSS Unit,",!," or NO to select a specific category"
"RTN","ECSUM",24,0)
 G:%<0 END I %=1 S ECC="ALL" G ECSCN
"RTN","ECSUM",25,0)
 W @IOF,! K DIC S DIC=726,DIC(0)="QEAMZ",DIC("A")="Select Category for "
"RTN","ECSUM",26,0)
 S DIC("A")=DIC("A")_ECDN_" DSS Unit:  "
"RTN","ECSUM",27,0)
 S:ECD DIC("S")="I $D(^ECJ(""AP"",ECL,ECD,+Y))"
"RTN","ECSUM",28,0)
 D ^DIC K DIC G:Y<0 END S ECC=+Y,ECCN=$P(Y,"^",2)
"RTN","ECSUM",29,0)
ECSCN ;Event Codes Screens to display, ALB/JAM-10/16/01
"RTN","ECSUM",30,0)
 K DIR
"RTN","ECSUM",31,0)
 S DIR(0)="SO^A:Active Event Code Screens;I:Inactive Event Code Screens"
"RTN","ECSUM",32,0)
 S DIR(0)=DIR(0)_";B:Both",DIR("B")="A"
"RTN","ECSUM",33,0)
 S DIR("A")="Event Code Screen to display"
"RTN","ECSUM",34,0)
 S DIR("?",1)="Enter an A for Active Event Code Screens, I for Inactive "
"RTN","ECSUM",35,0)
 S DIR("?",1)=DIR("?",1)_"Code Screens,"
"RTN","ECSUM",36,0)
 S DIR("?")="B for a consolidated report of all Event Code Screens, or "
"RTN","ECSUM",37,0)
 S DIR("?")=DIR("?")_"^ to quit."
"RTN","ECSUM",38,0)
 S DIR("??")="ECSUM^"
"RTN","ECSUM",39,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECSUM",40,0)
 S ECSCN=Y
"RTN","ECSUM",41,0)
DEV W !! K IOP,POP,IO("Q"),%ZIS,ZTSK
"RTN","ECSUM",42,0)
 S %ZIS="QM",%ZIS("A")="Select Device:  " D ^%ZIS I POP S ECOUT=1 G END
"RTN","ECSUM",43,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECSUM",44,0)
 .S ZTDESC="CATEGORY AND PROCEDURE SUMMARY",ZTRTN="START^ECSUM",ZTIO=ION
"RTN","ECSUM",45,0)
 .D SAVE,^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECSUM",46,0)
 U IO
"RTN","ECSUM",47,0)
START ;
"RTN","ECSUM",48,0)
 N ECI  ;generic index
"RTN","ECSUM",49,0)
 N ECL  ;location IEN
"RTN","ECSUM",50,0)
 N ECLN  ;location name
"RTN","ECSUM",51,0)
 N CNT ;122 Subscript for export
"RTN","ECSUM",52,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="EC SCREEN STATUS^LOCATION^SERVICE^DSS UNIT^DSS DEPT^SEND STATUS^DSS UNIT INACTIVE^CATEGORY^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^SYNONYM^CLINIC IEN^CLINIC^STOP CODE^CREDIT STOP CODE^CHAR4 CODE" ;122,126
"RTN","ECSUM",53,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECSUM",54,0)
 S ECOUT=0,ECPG=1
"RTN","ECSUM",55,0)
 S ECI=0
"RTN","ECSUM",56,0)
 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  D
"RTN","ECSUM",57,0)
 . S ECL=$P(ECLOC(ECI),U),ECLN=$P(ECLOC(ECI),U,2)
"RTN","ECSUM",58,0)
 . I ECALL D ^ECSUM1 Q  ;122
"RTN","ECSUM",59,0)
 . D SUM2^ECSUM1 ;122 Selected DSS units
"RTN","ECSUM",60,0)
CLEAR I $E(IOST,1,2)'="C-" G END
"RTN","ECSUM",61,0)
 G:ECOUT END
"RTN","ECSUM",62,0)
 I ECPG W !!!!!,"Press <RET> to continue  " R X:DTIME I '$T!(X="^") S ECOUT=1 G END
"RTN","ECSUM",63,0)
 G:ECALL END
"RTN","ECSUM",64,0)
ASK ;
"RTN","ECSUM",65,0)
 W @IOF F Q=0:0 D  I % Q
"RTN","ECSUM",66,0)
 .W !!,"Would you like to list another DSS Unit for this Location"
"RTN","ECSUM",67,0)
 .S %=2 D YN^DICN I % Q
"RTN","ECSUM",68,0)
 .W !!,"Enter YES to list another DSS Unit or <RET> to continue"
"RTN","ECSUM",69,0)
 G:%<0 END I %=1 D  G UNIT
"RTN","ECSUM",70,0)
 .K EC4,ECD,ECDN,ECC,ECCN,ECP,ECPN,ECSY,ECSYN,NATN,ECS,ECSN,ECFILE,ECSCN
"RTN","ECSUM",71,0)
 K EC4,ECD,ECDN,ECC,ECCN,ECP,ECPN,ECSY,ECSYN,NATN,ECS,ECSN,ECFILE,ECSCN
"RTN","ECSUM",72,0)
 I EC1 G LOC
"RTN","ECSUM",73,0)
END ;
"RTN","ECSUM",74,0)
 D ^ECKILL Q:$D(ECGUI)!($G(ECPTYP)="E")  W @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" ;119
"RTN","ECSUM",75,0)
 Q
"RTN","ECSUM",76,0)
SAVE ;
"RTN","ECSUM",77,0)
 S (ZTSAVE("ECA*"),ZTSAVE("ECJLP"),ZTSAVE("ECC*"),ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECM*"),ZTSAVE("ECP*"),ZTSAVE("ECS*"),ZTSAVE("EC4"))=""
"RTN","ECSUM",78,0)
 Q
"RTN","ECSUM1")
0^9^B25603267^B23374855
"RTN","ECSUM1",1,0)
ECSUM1 ;BIR/JLP,RHK-Category and Procedure Summary (cont'd) ;12/11/14  12:03
"RTN","ECSUM1",2,0)
 ;;2.0;EVENT CAPTURE;**4,19,23,33,47,95,100,119,122,126**;8 May 96;Build 8
"RTN","ECSUM1",3,0)
ALLU ;
"RTN","ECSUM1",4,0)
 N UCNT,ECDO,ECCO,ECNT,ECD,ECMORE,ECEDN,ECEDNST,ECCPT,ECDNPCE,ECDNDEPT ;119,122,126
"RTN","ECSUM1",5,0)
 S (ECD,ECMORE,ECNT,ECDO,ECCO)=0,ECPG=$G(ECPG,1),ECSCN=$G(ECSCN,"B")
"RTN","ECSUM1",6,0)
 F  S ECD=$O(^ECJ("AP",ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECSUM1",7,0)
 .D SET,CATS I $G(ECPTYP)'="E" D PAGE:'ECOUT&UCNT ;119
"RTN","ECSUM1",8,0)
END Q:$G(ECPTYP)="E"  I 'ECNT N ECNOCNT S ECNOCNT=1 D HEADER W !!!,"Nothing Found." ;119
"RTN","ECSUM1",9,0)
 S ECPG=$G(ECPG,1)
"RTN","ECSUM1",10,0)
 Q
"RTN","ECSUM1",11,0)
SUM2 ;Prints Categories and Procedures for a DSS Unit
"RTN","ECSUM1",12,0)
 N UCNT,ECDO,ECCO,ECNT,ECMORE,ECEDN,ECEDNST,ECCPT,ECDNPCE,ECDNDEPT ;119,122,126
"RTN","ECSUM1",13,0)
 S (ECDO,ECMORE,UCNT,ECNT,ECCO)=0,ECPG=$G(ECPG,1),ECSCN=$G(ECSCN,"B")
"RTN","ECSUM1",14,0)
 D SET ;126
"RTN","ECSUM1",15,0)
 I ECC="ALL" D CATS G END
"RTN","ECSUM1",16,0)
 I 'ECJLP S ECC=0,ECCN="None",ECCO=999
"RTN","ECSUM1",17,0)
 D PROC
"RTN","ECSUM1",18,0)
 D END
"RTN","ECSUM1",19,0)
 Q
"RTN","ECSUM1",20,0)
SET ;set var
"RTN","ECSUM1",21,0)
 S (ECDN,ECEDN)=$S($P($G(^ECD(+ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),UCNT=0 ;119
"RTN","ECSUM1",22,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSUM1",23,0)
 S ECEDNST=$S($P($G(^ECD(+ECD,0)),U,6):"INACTIVE",1:"") ;119
"RTN","ECSUM1",24,0)
 S ECDNPCE=$$GET1^DIQ(724,+ECD,13,"E") ;126 send to pce
"RTN","ECSUM1",25,0)
 S ECDNDEPT=$$GET1^DIQ(724,+ECD,4,"E") ;126 DSS Dept
"RTN","ECSUM1",26,0)
 S ECS=+$P($G(^ECD(+ECD,0)),"^",2)
"RTN","ECSUM1",27,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECSUM1",28,0)
 Q
"RTN","ECSUM1",29,0)
SETC ;set cats
"RTN","ECSUM1",30,0)
 I ECC=0 S ECCN="None" Q
"RTN","ECSUM1",31,0)
 S ECCN=$S($P($G(^EC(726,+ECC,0)),"^")]"":$P(^(0),"^"),1:"ZZ #"_ECC_" MISSING DATA")
"RTN","ECSUM1",32,0)
 S ECCN=ECCN_$S($P($G(^EC(726,+ECC,0)),"^",3):" **Inactive**",1:"")
"RTN","ECSUM1",33,0)
 S ECMORE=1
"RTN","ECSUM1",34,0)
 Q
"RTN","ECSUM1",35,0)
HEADER ;
"RTN","ECSUM1",36,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECSUM1",37,0)
 W !!,?25,"CATEGORY AND PROCEDURE SUMMARY",?70,"Page: ",ECPG,!
"RTN","ECSUM1",38,0)
 W ?27,$S(ECSCN="I":"INACTIVE",ECSCN="A":"ACTIVE",1:" ALL")_" EVENT CODE"
"RTN","ECSUM1",39,0)
 W " SCREENS",!?25,"Run Date:    ",ECRDT,!?25,"LOCATION:    "_ECLN ;126
"RTN","ECSUM1",40,0)
 I $G(ECNOCNT) W ! S ECPG=ECPG+1
"RTN","ECSUM1",41,0)
 I '$G(ECNOCNT) D  ;126
"RTN","ECSUM1",42,0)
 .W !,?25,"SERVICE:     ",ECSN,!?25,"DSS UNIT:    "_ECDN,!,?25,"SEND STATUS: ",ECDNPCE,!,?25,"DSS DEPT:    ",ECDNDEPT ;126
"RTN","ECSUM1",43,0)
 .W !!,"PROC",?7,"PROCEDURE NAME",!,"CODE",?7,"SYNONYM",!,?9,"CLINIC IEN/CLINIC/STOP CODE/CREDIT STOP/CHAR4",! S ECPG=ECPG+1 ;126
"RTN","ECSUM1",44,0)
 F I=1:1:80 W "-"
"RTN","ECSUM1",45,0)
 Q
"RTN","ECSUM1",46,0)
CATS ;
"RTN","ECSUM1",47,0)
 S ECC="",ECCO=0
"RTN","ECSUM1",48,0)
 F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  D SETC,PROC Q:ECOUT
"RTN","ECSUM1",49,0)
 S ECMORE=0
"RTN","ECSUM1",50,0)
 Q
"RTN","ECSUM1",51,0)
PROC ;
"RTN","ECSUM1",52,0)
 S ECP=""
"RTN","ECSUM1",53,0)
 F  S ECP=$O(^ECJ("AP",ECL,ECD,ECC,ECP)) Q:ECP=""  D SETP Q:ECOUT
"RTN","ECSUM1",54,0)
 S ECMORE=0
"RTN","ECSUM1",55,0)
 Q
"RTN","ECSUM1",56,0)
SETP ;set procs
"RTN","ECSUM1",57,0)
 N ECSC,ECSSC,EC4CHAR,NODE0,ECINDT ;122,126
"RTN","ECSUM1",58,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECSUM1",59,0)
 S ECINDT=$P($G(^ECJ(ECPSY,0)),"^",2)
"RTN","ECSUM1",60,0)
 I ECSCN="A",ECINDT'="" Q
"RTN","ECSUM1",61,0)
 I ECSCN="I",ECINDT="" Q
"RTN","ECSUM1",62,0)
 I ECD'=ECDO D:$G(ECPTYP)'="E" HEADER S ECDO=ECD ;119
"RTN","ECSUM1",63,0)
 I ECC'=ECCO D  S ECCO=ECC I ECOUT Q
"RTN","ECSUM1",64,0)
 .I $G(ECPTYP)="E" Q  ;119
"RTN","ECSUM1",65,0)
 .W !!,"Category:  "_ECCN D:$Y+4>IOSL PAGE,HEADER:ECPG,MORE:$D(ECCN) ;122 Removed white space from front of line
"RTN","ECSUM1",66,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),EC4=+$P($G(^("PRO")),"^",4)
"RTN","ECSUM1",67,0)
 S EC2="" I EC4 S EC2=$S($P($G(^SC(EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC")
"RTN","ECSUM1",68,0)
 S (ECSC,ECSSC,EC4CHAR)="" ;122
"RTN","ECSUM1",69,0)
 I EC4 S NODE0=$G(^ECX(728.44,EC4,0)),ECSC=$P(NODE0,U,2),ECSSC=$S($P(NODE0,U,3)'="":$P(NODE0,U,3),$G(ECPTYP)="E":"",1:"000"),EC4CHAR=$P($G(^ECX(728.441,+$P(NODE0,U,8),0)),U) ;122 Get stop code, credit stop code, char4 code
"RTN","ECSUM1",70,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECSUM1",71,0)
 I ECFILE="UNKNOWN" S ECPN="UNKNOWN",NATN="UNKNOWN"
"RTN","ECSUM1",72,0)
 I ECFILE=81 S ECPI=$$CPT^ICPTCOD(+ECP) D
"RTN","ECSUM1",73,0)
 .S ECPN=$S($P(ECPI,"^",3)]"":$P(ECPI,"^",3),1:"UNKNOWN"),NATN=$S($P(ECPI,"^",2)]"":$P(ECPI,"^",2),1:"NOT LISTED") K ECPI
"RTN","ECSUM1",74,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),NATN=$S($P($G(^EC(725,+ECP,0)),"^",2)]"":$P(^(0),"^",2),1:"NOT LISTED")
"RTN","ECSUM1",75,0)
 I ECFILE=725 S ECCPT=$$CPT^ICPTCOD(+$P($G(^EC(725,+ECP,0)),U,5)),ECCPT=$S($P(ECCPT,U)=-1:"",1:$P(ECCPT,U,2)) ;119
"RTN","ECSUM1",76,0)
 S ECNT=ECNT+1,UCNT=UCNT+1 ;126
"RTN","ECSUM1",77,0)
 I $G(ECPTYP)="E" D  Q  ;119
"RTN","ECSUM1",78,0)
 .D SET ; SET THE DSS UNIT AND UNIT STATUS VARIABLES 119
"RTN","ECSUM1",79,0)
 .S CNT=CNT+1 ;119
"RTN","ECSUM1",80,0)
 .S ^TMP($J,"ECRPT",CNT)=$S($P($G(^ECJ(+ECPSY,0)),U,2):"INACTIVE",1:"ACTIVE")_U_ECLN_U_ECSN_U_ECEDN_U_ECDNDEPT ;119,122,126
"RTN","ECSUM1",81,0)
 .S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_ECDNPCE_U_ECEDNST_U_ECCN_U_$S(ECFILE=81:NATN_U,1:ECCPT_U_NATN)_U_ECPN_U_ECPSYN_U_$S(EC4:EC4,1:"")_U_EC2_U_ECSC_U_ECSSC_U_EC4CHAR ;119,122,126
"RTN","ECSUM1",82,0)
 W !,NATN,?7,ECPN,"  (",$S(ECFILE=81:"CPT",1:"EC"),")" W:ECPSYN'="" !,?7,ECPSYN ;122,126
"RTN","ECSUM1",83,0)
 W:EC2]"" !,?9,EC4_"/"_EC2_"/"_ECSC_"/"_ECSSC_"/"_EC4CHAR_"" ;122,126
"RTN","ECSUM1",84,0)
 I $P($G(^ECJ(+ECPSY,0)),"^",2),ECSCN="B" W ?70,"*INACTIVE*"
"RTN","ECSUM1",85,0)
 D:($Y+3)>IOSL PAGE,HEADER:ECPG,MORE:$D(ECCN) Q:ECOUT
"RTN","ECSUM1",86,0)
 Q
"RTN","ECSUM1",87,0)
PAGE ;
"RTN","ECSUM1",88,0)
 N SS,JJ
"RTN","ECSUM1",89,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECSUM1",90,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECSUM1",91,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECSUM1",92,0)
 Q
"RTN","ECSUM1",93,0)
MORE I ECMORE W !!,"Category:  "_ECCN ;122 Removed white space from front of line
"RTN","ECSUM1",94,0)
 Q
"RTN","ECUERPC")
0^15^B57953932^B57028774
"RTN","ECUERPC",1,0)
ECUERPC ;ALB/JAM - Event Capture Data Entry Broker Utilities ;12/17/14  14:34
"RTN","ECUERPC",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,33,46,47,59,72,95,114,126**;8 May 96;Build 8
"RTN","ECUERPC",3,0)
 ;
"RTN","ECUERPC",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECUERPC",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR5747
"RTN","ECUERPC",6,0)
 ;
"RTN","ECUERPC",7,0)
USRUNT(RESULTS,ECARY) ;
"RTN","ECUERPC",8,0)
 ;This broker call returns an array of DSS units for a user & location
"RTN","ECUERPC",9,0)
 ;        RPC: EC GETUSRDSSUNIT
"RTN","ECUERPC",10,0)
 ;INPUTS     ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",11,0)
 ;            1. ECL   - Location IEN (if define gives User's DSS 
"RTN","ECUERPC",12,0)
 ;                       units for a location)
"RTN","ECUERPC",13,0)
 ;            2. ECDUZ - New Person IEN (if define gives list of 
"RTN","ECUERPC",14,0)
 ;                       DSS Units available to user)
"RTN","ECUERPC",15,0)
 ;
"RTN","ECUERPC",16,0)
 ;OUTPUTS     RESULTS - Array of DSS Units. Data pieces as follows:-
"RTN","ECUERPC",17,0)
 ;            PIECE - Description
"RTN","ECUERPC",18,0)
 ;              1     IEN of file 724
"RTN","ECUERPC",19,0)
 ;              2     Name of DSS Unit
"RTN","ECUERPC",20,0)
 ;              3     Send to PCE Flag
"RTN","ECUERPC",21,0)
 ;              4     Data Entry Date/Time Default
"RTN","ECUERPC",22,0)
 N ECL,ECDUZ,CNT,STR,DPT,IEN
"RTN","ECUERPC",23,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",24,0)
 S ECL=$P(ECARY,U),ECDUZ=$P(ECARY,U,2) I ECL="",ECDUZ="" Q
"RTN","ECUERPC",25,0)
 ;S ECDUZ=$G(DUZ,U),ECL=$P(ECARY,U) I (ECDUZ="")!(ECL="") Q
"RTN","ECUERPC",26,0)
 K ^TMP($J,"ECUSRUNT") S (DPT,CNT)=0
"RTN","ECUERPC",27,0)
 I ECL'="",ECDUZ="" S ECDUZ=$G(DUZ,U) I ECDUZ="" Q
"RTN","ECUERPC",28,0)
 I $D(^XUSEC("ECALLU",ECDUZ)) S DPT="" D
"RTN","ECUERPC",29,0)
 .I ECL="" S ^TMP($J,"ECUSRUNT",CNT+1)="ALL^ALL" Q
"RTN","ECUERPC",30,0)
 .I ECL="ALL" S ECL=""
"RTN","ECUERPC",31,0)
 .F  S DPT=$O(^ECD("B",DPT))  Q:DPT=""  S IEN=0 D
"RTN","ECUERPC",32,0)
 ..F  S IEN=$O(^ECD("B",DPT,IEN)) Q:'IEN  D UNTCHK
"RTN","ECUERPC",33,0)
 E  D
"RTN","ECUERPC",34,0)
 .I ECL="ALL" S ECL=""
"RTN","ECUERPC",35,0)
 .F  S DPT=$O(^VA(200,ECDUZ,"EC",DPT)) Q:'DPT  S IEN=DPT D UNTCHK
"RTN","ECUERPC",36,0)
 S RESULTS=$NA(^TMP($J,"ECUSRUNT"))
"RTN","ECUERPC",37,0)
 Q
"RTN","ECUERPC",38,0)
UNTCHK ;Check if DSS unit exist as event code screen and if active
"RTN","ECUERPC",39,0)
 N DSSF,DFD
"RTN","ECUERPC",40,0)
 ;I '$D(^ECJ("AP",ECL,IEN))!($P($G(^ECD(IEN,0)),U,6)) Q
"RTN","ECUERPC",41,0)
 I ECL'="",'$D(^ECJ("AP",ECL,IEN)) Q
"RTN","ECUERPC",42,0)
 I ($P($G(^ECD(IEN,0)),U,6))!('$P($G(^ECD(IEN,0)),U,8)) Q
"RTN","ECUERPC",43,0)
 S DSSF=$P(^ECD(IEN,0),"^",14) S:DSSF="" DSSF="N"
"RTN","ECUERPC",44,0)
 S DFD=$S($P(^ECD(IEN,0),"^",12)="N":"N",1:"X") ; added by VMP
"RTN","ECUERPC",45,0)
 S CNT=CNT+1,STR=IEN_"^"_$P(^ECD(IEN,0),"^")_U_DSSF_"^"_DFD
"RTN","ECUERPC",46,0)
 S ^TMP($J,"ECUSRUNT",CNT)=STR
"RTN","ECUERPC",47,0)
 Q
"RTN","ECUERPC",48,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUERPC",49,0)
 ;This broker entry point returns an array of categories for an Event 
"RTN","ECUERPC",50,0)
 ;Code screen based on location and DSS unit.
"RTN","ECUERPC",51,0)
 ;        RPC: EC GETECSCATS
"RTN","ECUERPC",52,0)
 ;INPUTS     ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",53,0)
 ;            ECL  - Location IEN
"RTN","ECUERPC",54,0)
 ;            ECD  - DSS Unit IEN
"RTN","ECUERPC",55,0)
 ;            ECCSTA-Active or inactive category
"RTN","ECUERPC",56,0)
 ;                   A-ctive (default), I-nactive, B-oth
"RTN","ECUERPC",57,0)
 ;
"RTN","ECUERPC",58,0)
 ;OUTPUTS     RESULTS - Array of categories. Data pieces as follows:-
"RTN","ECUERPC",59,0)
 ;            PIECE - Description
"RTN","ECUERPC",60,0)
 ;              1 - Category IEN
"RTN","ECUERPC",61,0)
 ;              2 - Category description
"RTN","ECUERPC",62,0)
 ;
"RTN","ECUERPC",63,0)
 N ECL,ECD,ECC,CNT,DATA,ECCSTA
"RTN","ECUERPC",64,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",65,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2) I (ECL="")!(ECD="") Q
"RTN","ECUERPC",66,0)
 S ECCSTA=$P(ECARY,U,3)
"RTN","ECUERPC",67,0)
 K ^TMP($J,"ECSCATS")
"RTN","ECUERPC",68,0)
 D CATS^ECHECK1
"RTN","ECUERPC",69,0)
 M ^TMP($J,"ECSCATS")=ECC
"RTN","ECUERPC",70,0)
 S RESULTS=$NA(^TMP($J,"ECSCATS"))
"RTN","ECUERPC",71,0)
 Q
"RTN","ECUERPC",72,0)
PROC(RESULTS,ECARY) ;
"RTN","ECUERPC",73,0)
 ;This broker entry point returns an array of procedures for an Event 
"RTN","ECUERPC",74,0)
 ;Code screen (file #720.3) based on location, DSS unit, and Category
"RTN","ECUERPC",75,0)
 ;        RPC: EC GETECSPROCS
"RTN","ECUERPC",76,0)
 ;INPUTS     ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",77,0)
 ;            ECL  - Location IEN
"RTN","ECUERPC",78,0)
 ;            ECD  - DSS Unit IEN
"RTN","ECUERPC",79,0)
 ;            ECC  - Category IEN
"RTN","ECUERPC",80,0)
 ;            ECDT - Procedure Date
"RTN","ECUERPC",81,0)
 ;
"RTN","ECUERPC",82,0)
 ;OUTPUTS     RESULTS - Array of procedures. Data pieces as follows:-
"RTN","ECUERPC",83,0)
 ;            PIECE - Description
"RTN","ECUERPC",84,0)
 ;              1  - EC National Number SPACE Procedure Name SPACE
"RTN","ECUERPC",85,0)
 ;                - [Synonym]
"RTN","ECUERPC",86,0)
 ;              2  - Procedure Code
"RTN","ECUERPC",87,0)
 ;              3  - CPT Code
"RTN","ECUERPC",88,0)
 ;              4  - Default volume (1 if no default volume)
"RTN","ECUERPC",89,0)
 ;              5  - Event code screen IEN
"RTN","ECUERPC",90,0)
 ;
"RTN","ECUERPC",91,0)
 N ECL,ECD,ECC,CNT,DATA,STR,ECCPT,PX,NAME,NUM ;126
"RTN","ECUERPC",92,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",93,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2),ECC=$P(ECARY,U,3) S:ECC="" ECC=0
"RTN","ECUERPC",94,0)
 I (ECL="")!(ECD="") Q
"RTN","ECUERPC",95,0)
 S ECDT=$P(ECARY,U,4)
"RTN","ECUERPC",96,0)
 K ^TMP($J,"ECPRO")
"RTN","ECUERPC",97,0)
 D PROS^ECHECK1
"RTN","ECUERPC",98,0)
 S CNT=1,NAME="" F  S NAME=$O(^TMP("ECPRO",$J,"N2",NAME)) Q:NAME=""  S NUM=$O(^TMP("ECPRO",$J,"N2",NAME,0)) D  ;126
"RTN","ECUERPC",99,0)
 .S DATA=^TMP("ECPRO",$J,NUM),PX=$P(DATA,U) ;126
"RTN","ECUERPC",100,0)
 .S ECCPT=$S(PX["EC":$P($G(^EC(725,+PX,0)),"^",5),1:+PX)
"RTN","ECUERPC",101,0)
 .S STR=$P(DATA,U,5)_" "_$P(DATA,U,4)_" ["_$P(DATA,U,3)_"]"_U_PX
"RTN","ECUERPC",102,0)
 .S STR=STR_U_ECCPT_U_$S($P(DATA,U,6):+$P(DATA,U,6),1:1)_U_$P(DATA,U,2)
"RTN","ECUERPC",103,0)
 .S ^TMP($J,"ECPRO",CNT)=STR,CNT=CNT+1 ;126
"RTN","ECUERPC",104,0)
 S RESULTS=$NA(^TMP($J,"ECPRO"))
"RTN","ECUERPC",105,0)
 K ^TMP("ECPRO",$J)
"RTN","ECUERPC",106,0)
 Q
"RTN","ECUERPC",107,0)
ECPXMOD(RESULTS,ECARY) ;
"RTN","ECUERPC",108,0)
 ;Broker call returns modifier entries for a CPT Procedure
"RTN","ECUERPC",109,0)
 ;        RPC: EC GETPXMODIFIER
"RTN","ECUERPC",110,0)
 ;INPUTS   ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",111,0)
 ;          ECCPT - CPT code ien (file #81)
"RTN","ECUERPC",112,0)
 ;          ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC",113,0)
 ;
"RTN","ECUERPC",114,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC",115,0)
 ;          2-character modifier^modifer name^modifier ien #81.3
"RTN","ECUERPC",116,0)
 ;
"RTN","ECUERPC",117,0)
 N CNT,SUB,ECCPT,ECDT,DATA,ECMOD
"RTN","ECUERPC",118,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",119,0)
 S ECCPT=$P(ECARY,U),ECDT=$P(ECARY,U,2) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC",120,0)
 I ECCPT="" Q
"RTN","ECUERPC",121,0)
 K ^TMP($J,"ECPXMODS") S (SUB,CNT)=0
"RTN","ECUERPC",122,0)
 S DATA=$$CODM^ICPTCOD(ECCPT,"ECMOD","",ECDT) I +DATA<0 Q
"RTN","ECUERPC",123,0)
 F  S SUB=$O(ECMOD(SUB)) Q:SUB=""  I $P(ECMOD(SUB),U,2)'="" D
"RTN","ECUERPC",124,0)
 . I +$$MODP^ICPTMOD(ECCPT,$P(ECMOD(SUB),U,2),"I",ECDT)>0 D
"RTN","ECUERPC",125,0)
 . . S CNT=CNT+1,^TMP($J,"ECPXMODS",CNT)=SUB_U_ECMOD(SUB)
"RTN","ECUERPC",126,0)
 S RESULTS=$NA(^TMP($J,"ECPXMODS"))
"RTN","ECUERPC",127,0)
 Q
"RTN","ECUERPC",128,0)
PRVDER(RESULTS,ECARY) ;
"RTN","ECUERPC",129,0)
 ;remove this rpc before release;JAM 6/4/01
"RTN","ECUERPC",130,0)
 ;This broker entry point returns an array of valid providers
"RTN","ECUERPC",131,0)
 ;        RPC: EC GETPROVIDER
"RTN","ECUERPC",132,0)
 ;INPUTS     ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",133,0)
 ;            ECDT  - Procedure date
"RTN","ECUERPC",134,0)
 ;
"RTN","ECUERPC",135,0)
 ;OUTPUTS     RESULTS - Array of providers. Data pieces as follows:-
"RTN","ECUERPC",136,0)
 ;            PIECE - Description
"RTN","ECUERPC",137,0)
 ;             IEN of file 200^Provider Name^occupation^specialty^
"RTN","ECUERPC",138,0)
 ;             subspecialty
"RTN","ECUERPC",139,0)
 ;
"RTN","ECUERPC",140,0)
 N IEN,CNT,ECUTN,KEY,USR
"RTN","ECUERPC",141,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",142,0)
 S ECDT=$P($G(ECARY),U),ECDT=$S(ECDT="":DT,1:ECDT)
"RTN","ECUERPC",143,0)
 K ^TMP($J,"ECPRVDRS") S CNT=0
"RTN","ECUERPC",144,0)
 F KEY="PROVIDER" S IEN=0 D
"RTN","ECUERPC",145,0)
 .F  S IEN=$O(^XUSEC(KEY,IEN)) Q:'IEN  S USR=$G(^VA(200,IEN,0)) D:USR'=""
"RTN","ECUERPC",146,0)
 ..S ECUTN=$$GET^XUA4A72(IEN,ECDT) I +ECUTN'>0 Q
"RTN","ECUERPC",147,0)
 ..S CNT=CNT+1,^TMP($J,"ECPRVDRS",CNT)=IEN_U_$P(USR,U)_U_$P(ECUTN,2,4)
"RTN","ECUERPC",148,0)
 S RESULTS=$NA(^TMP($J,"ECPRVDRS"))
"RTN","ECUERPC",149,0)
 Q
"RTN","ECUERPC",150,0)
 ;
"RTN","ECUERPC",151,0)
ELIG(RESULTS,ECARY) ;
"RTN","ECUERPC",152,0)
 ;
"RTN","ECUERPC",153,0)
 ;Broker call returns a list of patient eligibilities
"RTN","ECUERPC",154,0)
 ;        RPC: EC GETPATELIG
"RTN","ECUERPC",155,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",156,0)
 ;          DFN - Patient ien (file #2)
"RTN","ECUERPC",157,0)
 ;
"RTN","ECUERPC",158,0)
 ;OUTPUTS  RESULTS - Array of eligibilities
"RTN","ECUERPC",159,0)
 ;          primary/secondary elig flag^elig ien^elig description
"RTN","ECUERPC",160,0)
 ;
"RTN","ECUERPC",161,0)
 N CNT,SUB,DFN,VAEL
"RTN","ECUERPC",162,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",163,0)
 S DFN=$P(ECARY,U) I DFN="" Q
"RTN","ECUERPC",164,0)
 K ^TMP($J,"ECPATELIG")
"RTN","ECUERPC",165,0)
 D ELIG^VADPT I $G(VAEL(1))="" Q
"RTN","ECUERPC",166,0)
 S ^TMP($J,"ECPATELIG",1)="1^"_VAEL(1),SUB=0,CNT=1
"RTN","ECUERPC",167,0)
 F  S SUB=$O(VAEL(1,SUB)) Q:SUB=""  D
"RTN","ECUERPC",168,0)
 . S CNT=CNT+1,^TMP($J,"ECPATELIG",CNT)="0^"_VAEL(1,SUB)
"RTN","ECUERPC",169,0)
 S RESULTS=$NA(^TMP($J,"ECPATELIG"))
"RTN","ECUERPC",170,0)
 Q
"RTN","ECUERPC",171,0)
PRDEFS(RESULTS,ECARY) ;
"RTN","ECUERPC",172,0)
 ;This broker entry point returns the defaults for procedure data entry
"RTN","ECUERPC",173,0)
 ;        RPC: EC GETPRODEFS
"RTN","ECUERPC",174,0)
 ;INPUTS     ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",175,0)
 ;            ECL  - Location IEN
"RTN","ECUERPC",176,0)
 ;            ECD  - DSS Unit IEN
"RTN","ECUERPC",177,0)
 ;            ECC  - Category IEN
"RTN","ECUERPC",178,0)
 ;
"RTN","ECUERPC",179,0)
 ;OUTPUTS    RESULTS - Data pieces as follows:-
"RTN","ECUERPC",180,0)
 ;           PIECE - Description
"RTN","ECUERPC",181,0)
 ;             1 - Associated Clinic IEN
"RTN","ECUERPC",182,0)
 ;             2 - Associated Clinic
"RTN","ECUERPC",183,0)
 ;             3 - Medical Specialty IEN
"RTN","ECUERPC",184,0)
 ;             4 - Medical Specialty
"RTN","ECUERPC",185,0)
 ;
"RTN","ECUERPC",186,0)
 N ECL,ECD,ECC,ECP,IEN,ASC,ASCNM,MEDSP,MEDSPNM,ECCH
"RTN","ECUERPC",187,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",188,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2),ECC=$P(ECARY,U,3),ECP=$P(ECARY,U,4)
"RTN","ECUERPC",189,0)
 S:ECC="" ECC=0 I (ECL="")!(ECD="") Q
"RTN","ECUERPC",190,0)
 S (ASCNM,MEDSPNM)="",ECCH=ECL_"-"_ECD_"-"_ECC_"-"_ECP
"RTN","ECUERPC",191,0)
 I '$D(^ECJ("B",ECCH)) Q
"RTN","ECUERPC",192,0)
 S IEN=$O(^ECJ("B",ECCH,0)) I IEN="" Q
"RTN","ECUERPC",193,0)
 S ASC=$P($G(^ECJ(IEN,"PRO")),U,4) I ASC D
"RTN","ECUERPC",194,0)
 .S ASCNM=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC",195,0)
 S MEDSP=$P($G(^ECD(ECD,0)),U,3) I MEDSP D 
"RTN","ECUERPC",196,0)
 .S MEDSPNM=$$GET1^DIQ(723,MEDSP,.01,"I")
"RTN","ECUERPC",197,0)
 S RESULTS=ASC_U_ASCNM_U_MEDSP_U_MEDSPNM
"RTN","ECUERPC",198,0)
 Q
"RTN","ECUERPC",199,0)
PATPROC(RESULTS,ECARY) ;
"RTN","ECUERPC",200,0)
 ;
"RTN","ECUERPC",201,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC",202,0)
 ;
"RTN","ECUERPC",203,0)
 ;RPC: EC GETPATPROCS
"RTN","ECUERPC",204,0)
 ;
"RTN","ECUERPC",205,0)
 ;INPUTS   ECARY - Contains the following values separated by "^"
"RTN","ECUERPC",206,0)
 ;         ECLOC - Location ien
"RTN","ECUERPC",207,0)
 ;         ECPAT - Patient DFN ien
"RTN","ECUERPC",208,0)
 ;         ECUNT - DSS unit ien
"RTN","ECUERPC",209,0)
 ;         ECSD  - Start Date
"RTN","ECUERPC",210,0)
 ;         ECED  - End Date
"RTN","ECUERPC",211,0)
 ;                                                                         
"RTN","ECUERPC",212,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient entries contain
"RTN","ECUERPC",213,0)
 ;          721 IEN^Procedure date/time^Category^Procedure^Volume^
"RTN","ECUERPC",214,0)
 ;          Provider^ordering section^associated clinic^
"RTN","ECUERPC",215,0)
 ;          (ICD Coding system) primary dx code primary dx code description
"RTN","ECUERPC",216,0)
 ;          ^Provider IEN
"RTN","ECUERPC",217,0)
 ;
"RTN","ECUERPC",218,0)
 N IEN,CNT,ECCS,ECV,ECLOC,ECUNT,ECPAT,PX,NODE,DATA,PDT,PDX,PND,PDXD,CAT,ECI
"RTN","ECUERPC",219,0)
 N ORS,PRV,PRO,PROV,ECU
"RTN","ECUERPC",220,0)
 D SETENV^ECUMRPC ;set environment variables for RPC broker
"RTN","ECUERPC",221,0)
 S ECV="ECLOC^ECPAT^ECUNT^ECSD^ECED"
"RTN","ECUERPC",222,0)
 D PARSE(ECV,ECARY) I (ECLOC="")!(ECPAT="")!(ECUNT="") Q
"RTN","ECUERPC",223,0)
 K ^TMP($J,"ECPATPX")
"RTN","ECUERPC",224,0)
 S ECSD=$G(ECSD,DT),ECED=$G(ECED,DT)
"RTN","ECUERPC",225,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC",226,0)
 K X,Y
"RTN","ECUERPC",227,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC",228,0)
 Q:ECED'>ECSD  S PDT=ECSD,CNT=0
"RTN","ECUERPC",229,0)
 F  S PDT=$O(^ECH("ADT",ECLOC,ECPAT,ECUNT,PDT)) Q:'PDT!(PDT>ECED)  D
"RTN","ECUERPC",230,0)
 . S IEN=0 F  S IEN=$O(^ECH("ADT",ECLOC,ECPAT,ECUNT,PDT,IEN)) Q:'IEN  D
"RTN","ECUERPC",231,0)
 . . S NODE=$G(^ECH(IEN,0)),PND=$G(^ECH(IEN,"P")),PX=$P(NODE,U,9)
"RTN","ECUERPC",232,0)
 . . Q:NODE=""  S (PRV,CAT,ORS,ASC,PDXD)="",PDX=$P(PND,U,2)
"RTN","ECUERPC",233,0)
 . . I PX["EC" D
"RTN","ECUERPC",234,0)
 . . . S PRO=$G(^EC(725,$P(PX,";"),0)),PX=$P(PRO,U,2)_" "_$P(PRO,U)
"RTN","ECUERPC",235,0)
 . . E  S PRO=$$CPT^ICPTCOD($P(PX,";"),PDT) S PX=$P(PRO,U,2)_" "_$P(PRO,U,3)
"RTN","ECUERPC",236,0)
 . . S:$P(NODE,U,8) CAT=$$GET1^DIQ(726,$P(NODE,U,8),.01,"I")
"RTN","ECUERPC",237,0)
 . . K PROV S ECU=$$GETPPRV^ECPRVMUT(IEN,.PROV),PRV=$S(ECU:"UNKNOWN",1:$P(PROV,"^",2)),ECU=$S('ECU:+PROV,1:"")
"RTN","ECUERPC",238,0)
 . . S:$P(NODE,U,12) ORS=$$GET1^DIQ(723,$P(NODE,U,12),.01,"I")
"RTN","ECUERPC",239,0)
 . . S:$P(NODE,U,19) ASC=$$GET1^DIQ(44,$P(NODE,U,19),.01,"I")
"RTN","ECUERPC",240,0)
 . . I PDX D
"RTN","ECUERPC",241,0)
 . . . ; ICD10 Changes
"RTN","ECUERPC",242,0)
 . . . S ECCS=$$SINFO^ICDEX("DIAG",PDT) ; Supported by ICR 5747
"RTN","ECUERPC",243,0)
 . . . S PDXD=$$ICDDX^ICDEX(PDX,PDT,+ECCS,"I") ; Supported by ICR 5747
"RTN","ECUERPC",244,0)
 . . . S ECCS=$P(ECCS,U,2),ECCS=" ("_$P(ECCS,"-",1)_$P(ECCS,"-",2)_")"
"RTN","ECUERPC",245,0)
 . . . S PDXD=$P(PDXD,U,2)_" "_$P(PDXD,U,4)_ECCS
"RTN","ECUERPC",246,0)
 . . S DATA=$P(NODE,U)_U_$$FMTE^XLFDT($P(NODE,U,3),"2F")_U_CAT_U_PX
"RTN","ECUERPC",247,0)
 . . S DATA=DATA_U_$P(NODE,U,10)_U_PRV_U_ORS_U_ASC_U_PDXD_U_ECU
"RTN","ECUERPC",248,0)
 . . S CNT=CNT+1,^TMP($J,"ECPATPX",CNT)=DATA
"RTN","ECUERPC",249,0)
 S RESULTS=$NA(^TMP($J,"ECPATPX"))
"RTN","ECUERPC",250,0)
 Q
"RTN","ECUERPC",251,0)
PARSE(ECV,ECARY) ;Parse Variable
"RTN","ECUERPC",252,0)
 N I
"RTN","ECUERPC",253,0)
 F I=1:1:$L(ECARY,U) S @$P(ECV,U,I)=$P(ECARY,U,I)
"RTN","ECUERPC",254,0)
 Q
"RTN","ECUMRPC1")
0^12^B100564674^B80221872
"RTN","ECUMRPC1",1,0)
ECUMRPC1 ;ALB/JAM-Event Capture Management Broker Utilities ;4/9/15  17:02
"RTN","ECUMRPC1",2,0)
 ;;2.0;EVENT CAPTURE;**25,30,33,72,94,95,105,100,107,110,112,126**;8 May 96;Build 8
"RTN","ECUMRPC1",3,0)
 ;
"RTN","ECUMRPC1",4,0)
DSSUNT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",5,0)
 ;
"RTN","ECUMRPC1",6,0)
 ;This broker entry point returns DSS units from file 724
"RTN","ECUMRPC1",7,0)
 ;        RPC: EC GETDSSUNIT
"RTN","ECUMRPC1",8,0)
 ;INPUTS         ECARY -Contains the following subscripted elements
"RTN","ECUMRPC1",9,0)
 ;               P1 =   optional field to return DSS Units
"RTN","ECUMRPC1",10,0)
 ;                      STAT; 'A'ctive (default), 'I'nactive, 'B'oth
"RTN","ECUMRPC1",11,0)
 ;               P2 =   optional field to filter based on the DSS Name
"RTN","ECUMRPC1",12,0)
 ;               P3 =   optional field to return 1 DSS unit by IEN, if used
"RTN","ECUMRPC1",13,0)
 ;                      no other filters evaluated
"RTN","ECUMRPC1",14,0)
 ;               P4 =   optional field to filter based on the DSS Unit Number (DSS Dept)
"RTN","ECUMRPC1",15,0)
 ;               
"RTN","ECUMRPC1",16,0)
 ;               if data is passed into the other fields then all criteria
"RTN","ECUMRPC1",17,0)
 ;               must be met for data on a unit to be returned
"RTN","ECUMRPC1",18,0)
 ;
"RTN","ECUMRPC1",19,0)
 ;OUTPUTS        RESULTS - Array of DSS units. Data pieces as follows:-
"RTN","ECUMRPC1",20,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",21,0)
 ;                 1     IEN of DSS Unit 
"RTN","ECUMRPC1",22,0)
 ;                 2     Name of DSS Unit
"RTN","ECUMRPC1",23,0)
 ;                 3     IEN of DSS Unit
"RTN","ECUMRPC1",24,0)
 ;                 4     Inactive flag
"RTN","ECUMRPC1",25,0)
 ;                 5     Send to PCE   
"RTN","ECUMRPC1",26,0)
 ;                 6     Unit Number
"RTN","ECUMRPC1",27,0)
 ;                 7     Service
"RTN","ECUMRPC1",28,0)
 ;                 8     Medical Specialty
"RTN","ECUMRPC1",29,0)
 ;                 9     Cost Center
"RTN","ECUMRPC1",30,0)
 ;                 10    Associated Stop code (if not sending to PCE)
"RTN","ECUMRPC1",31,0)
 ;                 11    Category flag
"RTN","ECUMRPC1",32,0)
 ;                 12    Default date entry
"RTN","ECUMRPC1",33,0)
 ;                 13    Credit Stop Code (only available when SEND TO PCE is set to "no records"
"RTN","ECUMRPC1",34,0)
 ;                 14    CHAR4 code (only available when SEND TO PCE is set to "no records"
"RTN","ECUMRPC1",35,0)
 ;
"RTN","ECUMRPC1",36,0)
 N UNT,STAT,CNT,CAT,NODE,ECS,STR,SRV,MED,CST,UNO,INACT,ASC,PCE,ACT,NODE
"RTN","ECUMRPC1",37,0)
 N DFD,DIEN,DNM,DUNIT,GET1,CSC,CHAR4 ;126
"RTN","ECUMRPC1",38,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",39,0)
 K ^TMP($J,"ECDSSUNT")
"RTN","ECUMRPC1",40,0)
 S DNM=$P($G(ECARY),U,2),DIEN=$P($G(ECARY),U,3),DUNIT=$P($G(ECARY),U,4)
"RTN","ECUMRPC1",41,0)
 S:DNM'="" DNM=$$UP^XLFSTR(DNM)
"RTN","ECUMRPC1",42,0)
 S:DUNIT'="" DUNIT=$$UP^XLFSTR(DUNIT)
"RTN","ECUMRPC1",43,0)
 S STAT=$P($G(ECARY),U),(CNT,UNT,GET1)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",44,0)
 ; if IEN passed in - use that, then quit, GET1 used as control to stop
"RTN","ECUMRPC1",45,0)
 I $G(DIEN) S UNT=DIEN-.001,GET1=1
"RTN","ECUMRPC1",46,0)
 F  S UNT=$O(^ECD(UNT)) Q:'UNT!((UNT>DIEN&(GET1)))  S NODE=$G(^ECD(UNT,0)) I NODE'="" D
"RTN","ECUMRPC1",47,0)
 . S ECS=$P(NODE,U,8),ACT=$P(NODE,U,6),ACT=$S(ACT:1,1:0)
"RTN","ECUMRPC1",48,0)
 . Q:('ECS)
"RTN","ECUMRPC1",49,0)
 . I '$G(DIEN),$S(STAT="A"&(ACT):1,STAT="I"&('ACT):1,1:0) Q
"RTN","ECUMRPC1",50,0)
 . ; execute new filters
"RTN","ECUMRPC1",51,0)
 . I DNM'="",$$UP^XLFSTR($P(NODE,U))'[DNM Q
"RTN","ECUMRPC1",52,0)
 . I DUNIT'="",$$UP^XLFSTR($P(NODE,U,5))'[DUNIT Q
"RTN","ECUMRPC1",53,0)
 . I DIEN'="",$$UP^XLFSTR(UNT)'[DIEN Q
"RTN","ECUMRPC1",54,0)
 . S CNT=CNT+1,CAT=$P(NODE,U,11),CAT=$S(CAT:"Y",1:"N"),UNO=$P(NODE,U,5)
"RTN","ECUMRPC1",55,0)
 . S SRV=$$GET1^DIQ(49,$P(NODE,U,2),.01,"I")
"RTN","ECUMRPC1",56,0)
 . S MED=$$GET1^DIQ(723,$P(NODE,U,3),.01,"I")
"RTN","ECUMRPC1",57,0)
 . S CST=$$GET1^DIQ(420.1,$P(NODE,U,4),.01,"I")
"RTN","ECUMRPC1",58,0)
 . S INACT=$P(NODE,U,6),INACT=$S(INACT:"I",1:"A"),ASC=$P(NODE,U,10),CSC=$P(NODE,U,13),CHAR4=$P(NODE,U,15) ;126
"RTN","ECUMRPC1",59,0)
 . S:ASC ASC=$$GET1^DIQ(40.7,ASC,.01,"I")
"RTN","ECUMRPC1",60,0)
 . S:CSC CSC=$$GET1^DIQ(40.7,CSC,.01) ;126
"RTN","ECUMRPC1",61,0)
 . S:CHAR4 CHAR4=$$GET1^DIQ(728.441,CHAR4,.01) ;126
"RTN","ECUMRPC1",62,0)
 . S DFD=$S($P(NODE,U,12)="N":"N",1:"X"),PCE=$P(NODE,U,14)
"RTN","ECUMRPC1",63,0)
 . S PCE=$S(PCE="A":PCE,PCE="O":PCE,1:"N")
"RTN","ECUMRPC1",64,0)
 . S STR=UNT_U_$P(NODE,U)_U_UNT_U_INACT_U_PCE_U_UNO_U_SRV_U_MED_U_CST
"RTN","ECUMRPC1",65,0)
 . S STR=STR_U_ASC_U_CAT_U_DFD_U_CSC_U_CHAR4,^TMP($J,"ECDSSUNT",CNT)=STR ;126
"RTN","ECUMRPC1",66,0)
 S RESULTS=$NA(^TMP($J,"ECDSSUNT"))
"RTN","ECUMRPC1",67,0)
 Q
"RTN","ECUMRPC1",68,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",69,0)
 ;
"RTN","ECUMRPC1",70,0)
 ;This broker entry point returns a list of categories from file 726
"RTN","ECUMRPC1",71,0)
 ;        RPC: EC GETCAT
"RTN","ECUMRPC1",72,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC1",73,0)
 ;                STAT - Active or inactive category (optional)
"RTN","ECUMRPC1",74,0)
 ;                A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC1",75,0)
 ;
"RTN","ECUMRPC1",76,0)
 ;OUTPUTS        RESULTS - Array of category. Data pieces as follows:-
"RTN","ECUMRPC1",77,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",78,0)
 ;                 1     IEN of Category
"RTN","ECUMRPC1",79,0)
 ;                 2     Name of Category
"RTN","ECUMRPC1",80,0)
 ;                 3     Creation Date
"RTN","ECUMRPC1",81,0)
 ;                 4     Inactive Date
"RTN","ECUMRPC1",82,0)
 ;
"RTN","ECUMRPC1",83,0)
 N STAT,CNT,CAT,NODE,ECDT,INDT,CRDT
"RTN","ECUMRPC1",84,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",85,0)
 K ^TMP($J,"ECCAT")
"RTN","ECUMRPC1",86,0)
 S STAT=$P($G(ECARY),U),(CNT,CAT)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",87,0)
 F  S CAT=$O(^EC(726,CAT)) Q:'CAT  S NODE=$G(^EC(726,CAT,0)) I NODE'="" D
"RTN","ECUMRPC1",88,0)
 . S ECDT=$P(NODE,U,3)
"RTN","ECUMRPC1",89,0)
 . I STAT="A",ECDT'="",ECDT'>DT Q
"RTN","ECUMRPC1",90,0)
 . I STAT="I",ECDT="" Q
"RTN","ECUMRPC1",91,0)
 . S CRDT=$$FMTE^XLFDT($P(NODE,U,2),"2F")
"RTN","ECUMRPC1",92,0)
 . S INDT=$$FMTE^XLFDT($P(NODE,U,3),"2F")
"RTN","ECUMRPC1",93,0)
 . ;S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_CRDT_U_INDT
"RTN","ECUMRPC1",94,0)
 . S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_$P(CRDT,"@",1)_U_$P(INDT,"@",1)
"RTN","ECUMRPC1",95,0)
 S RESULTS=$NA(^TMP($J,"ECCAT"))
"RTN","ECUMRPC1",96,0)
 Q
"RTN","ECUMRPC1",97,0)
 ;
"RTN","ECUMRPC1",98,0)
CATCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",99,0)
 ;
"RTN","ECUMRPC1",100,0)
 ;Broker call checks whether category is used in an Event Code Screen.
"RTN","ECUMRPC1",101,0)
 ;        RPC: EC DSSCATCHECK
"RTN","ECUMRPC1",102,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",103,0)
 ;          ECDA  - DSS Unit ien (file #724)
"RTN","ECUMRPC1",104,0)
 ;
"RTN","ECUMRPC1",105,0)
 ;OUTPUTS  RESULTS - Category used in Event Code Screen, 1-Yes or 0-No
"RTN","ECUMRPC1",106,0)
 ;
"RTN","ECUMRPC1",107,0)
 N ECDA,ECFLG,ECX
"RTN","ECUMRPC1",108,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",109,0)
 S ECDA=$P(ECARY,U) I ECDA="" Q
"RTN","ECUMRPC1",110,0)
 S (ECFLG,ECX)=0
"RTN","ECUMRPC1",111,0)
 F  S ECX=$O(^ECJ("AP",ECX)) Q:'ECX!(ECFLG)  D
"RTN","ECUMRPC1",112,0)
 . I $D(^ECJ("AP",ECX,ECDA)) S ECFLG=1
"RTN","ECUMRPC1",113,0)
 S RESULTS=ECFLG
"RTN","ECUMRPC1",114,0)
 Q
"RTN","ECUMRPC1",115,0)
PXCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",116,0)
 ;
"RTN","ECUMRPC1",117,0)
 ;Checks whether procedure description or national number exist
"RTN","ECUMRPC1",118,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",119,0)
 ;          ECP - Procedure description
"RTN","ECUMRPC1",120,0)
 ;          ECN - EC National Number
"RTN","ECUMRPC1",121,0)
 ;
"RTN","ECUMRPC1",122,0)
 ;OUTPUTS  RESULTS - Px used^National # used, 1-Yes or 0-No ex. 1^0
"RTN","ECUMRPC1",123,0)
 ;
"RTN","ECUMRPC1",124,0)
 N ECX,ECP,ECN
"RTN","ECUMRPC1",125,0)
 Q:$G(ECARY)
"RTN","ECUMRPC1",126,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",127,0)
 S ECP=$P(ECARY,U),ECN=$P(ECARY,U,2),RESULTS="0^0"
"RTN","ECUMRPC1",128,0)
 I ECP'="",$D(^EC(725,"B",ECP)) S $P(RESULTS,U)=1
"RTN","ECUMRPC1",129,0)
 I ECN'="" F ECX="E","D","DL" D  I $P(RESULTS,U,2) Q
"RTN","ECUMRPC1",130,0)
 . I $D(^EC(725,ECX,ECN)) S $P(RESULTS,U,2)=1
"RTN","ECUMRPC1",131,0)
 Q
"RTN","ECUMRPC1",132,0)
SRCLST(RESULTS,ECARY) ;
"RTN","ECUMRPC1",133,0)
 ;
"RTN","ECUMRPC1",134,0)
 ;This broker entry returns an array of codes from a file based on a 
"RTN","ECUMRPC1",135,0)
 ;search string.
"RTN","ECUMRPC1",136,0)
 ;        RPC: EC GETLIST
"RTN","ECUMRPC1",137,0)
 ;
"RTN","ECUMRPC1",138,0)
 ;INPUTS    ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC1",139,0)
 ;          ECFIL   - File to search
"RTN","ECUMRPC1",140,0)
 ;          ECSTR   - Search string
"RTN","ECUMRPC1",141,0)
 ;          ECDIR   - Search order
"RTN","ECUMRPC1",142,0)
 ;          ECNUM   - (Optional) # records to return [default=44]
"RTN","ECUMRPC1",143,0)
 ;          ECADT   - (Optional) date to determine clinic inactivity
"RTN","ECUMRPC1",144,0)
 ;          ECLOC   - (Optional) location to filter associated clinics
"RTN","ECUMRPC1",145,0)
 ;          ECTYPE  - (Optional) primary or secondary stop codes desired
"RTN","ECUMRPC1",146,0)
 ;OUTPUTS   RESULTS - Array of values based on the search criteria.
"RTN","ECUMRPC1",147,0)
 ;
"RTN","ECUMRPC1",148,0)
 N ECNT,DIC,ECSTR,ECFIL,ECORD,ECER,ECDI,ECNUM,ECDIR,ECADT,ECLOC,ECTYPE ;112,126
"RTN","ECUMRPC1",149,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",150,0)
 S ECNT=0,ECFIL=$P(ECARY,U),ECSTR=$P(ECARY,U,2),ECDIR=$P(ECARY,U,3)
"RTN","ECUMRPC1",151,0)
 S ECORD=$S(ECDIR=-1:"B",1:"I")
"RTN","ECUMRPC1",152,0)
 K ^TMP($J,"ECFIND"),^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",153,0)
 I ECFIL="" Q
"RTN","ECUMRPC1",154,0)
 S ECNUM=$S(+$P(ECARY,U,4)>0:$P(ECARY,U,4),1:44)
"RTN","ECUMRPC1",155,0)
 S ECADT=$S(+$P(ECARY,U,5):$P(ECARY,U,5),1:DT) ;112
"RTN","ECUMRPC1",156,0)
 S ECLOC=$P(ECARY,U,6) ;126 IEN of location if filtering.  Null if no filtering
"RTN","ECUMRPC1",157,0)
 S ECTYPE=$P(ECARY,U,7) ;126 Null if primary, not null for secondary
"RTN","ECUMRPC1",158,0)
 I ECFIL=420.1 D CSTCTR            ;Cost Center search
"RTN","ECUMRPC1",159,0)
 I ECFIL=49 D SERVC                ;Service search
"RTN","ECUMRPC1",160,0)
 I ECFIL=723 D MEDSPC              ;Medical specialty
"RTN","ECUMRPC1",161,0)
 I ECFIL=40.7 D STPCDE G EXIT      ;Associated stop code
"RTN","ECUMRPC1",162,0)
 I ECFIL=724 D DUNT G EXIT         ;DSS Unit
"RTN","ECUMRPC1",163,0)
 I ECFIL=726 D ECAT                ;Category
"RTN","ECUMRPC1",164,0)
 I ECFIL=4 D LOC                   ;Location
"RTN","ECUMRPC1",165,0)
 I ECFIL=44 D ASCLN G EXIT         ;Associated clinic
"RTN","ECUMRPC1",166,0)
 I ECFIL=757.01 D LEX^ECUMRPC2 G EXIT  ;Lex ICD code
"RTN","ECUMRPC1",167,0)
 I ECFIL=200 D PROV^ECUMRPC2(ECNUM)      ;Providers
"RTN","ECUMRPC1",168,0)
 I ECFIL=728.441 D CHAR4                 ;126 National Clinic code (CHAR4)
"RTN","ECUMRPC1",169,0)
 I $D(ECER) S ^TMP($J,"ECFIND",1)="0^Error occurred during search" G EXIT
"RTN","ECUMRPC1",170,0)
 D SORT
"RTN","ECUMRPC1",171,0)
EXIT K ^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",172,0)
 S RESULTS=$NA(^TMP($J,"ECFIND"))
"RTN","ECUMRPC1",173,0)
 Q
"RTN","ECUMRPC1",174,0)
ASCLN ;Search for active associated clinics (file #44)
"RTN","ECUMRPC1",175,0)
 N CLN,CNT,NOD,ECDT,INACT,REACT,ERR,ECNOD ;126
"RTN","ECUMRPC1",176,0)
 S CNT=0,ECDT=ECADT ;112
"RTN","ECUMRPC1",177,0)
 I (ECDIR'=1)&(ECDIR'=-1) S ECDIR=1
"RTN","ECUMRPC1",178,0)
 ;the next 2 lines of code compensate for the M collating sequence & how the
"RTN","ECUMRPC1",179,0)
 ;clinic code is passed in from a CPRS RPC, in a unique situation. If the
"RTN","ECUMRPC1",180,0)
 ;code is numeric, ending in 0 and there is a similar code ending with a
"RTN","ECUMRPC1",181,0)
 ;letter, the correct clinic is not returned. EX: 2 clinics, 3010 and "3010A"
"RTN","ECUMRPC1",182,0)
 ;exist, the code is written to return 3010, yet 3010A is incorrectly returned. 
"RTN","ECUMRPC1",183,0)
 ;This code puts the 0 back on and subtracts 1 to the clinic code
"RTN","ECUMRPC1",184,0)
 I $E(ECSTR,$L(ECSTR)-1)="/",$E(ECSTR,1,($L(ECSTR)-2))?.N D
"RTN","ECUMRPC1",185,0)
 .S ECSTR=$E(ECSTR,1,($L(ECSTR)-2))_0,ECSTR=ECSTR-1
"RTN","ECUMRPC1",186,0)
 F  Q:CNT=ECNUM  S ECSTR=$O(^SC("B",ECSTR),ECDIR) Q:ECSTR=""  S CLN="" D
"RTN","ECUMRPC1",187,0)
 .F  S CLN=$O(^SC("B",ECSTR,CLN),ECDIR) Q:CLN=""  S NOD=$G(^SC(CLN,0)) D
"RTN","ECUMRPC1",188,0)
 ..Q:NOD=""  Q:$P(NOD,U,3)'="C"  ;Q:+$G(^SC(CLN,"OOS"))
"RTN","ECUMRPC1",189,0)
 ..I $G(ECLOC) I ECLOC'=$P(NOD,U,4) Q  ;126 Clinic must be assoicated with the selected location, if one was selected
"RTN","ECUMRPC1",190,0)
 ..S ERR=0 I $D(^SC(CLN,"I")) D  I ERR Q
"RTN","ECUMRPC1",191,0)
 ...S INACT=$P(^SC(CLN,"I"),U),REACT=$P(^SC(CLN,"I"),U,2)
"RTN","ECUMRPC1",192,0)
 ...I INACT D  I ERR Q
"RTN","ECUMRPC1",193,0)
 ....I REACT="" S:ECDT'<INACT ERR=1 Q
"RTN","ECUMRPC1",194,0)
 ....I ECDT'<INACT,ECDT<REACT S ERR=1 Q
"RTN","ECUMRPC1",195,0)
 ...;I REACT,ECDT<REACT S ERR=1  removed in EC*110 - BGP
"RTN","ECUMRPC1",196,0)
 ..S ECNOD=$G(^ECX(728.44,CLN,0)) ;126 Get clinic and stop code zero node for selected clinic
"RTN","ECUMRPC1",197,0)
 ..S CNT=CNT+1,^TMP($J,"ECFIND",CNT)=CLN_U_$P(NOD,U)_U_$P(ECNOD,U,2)_U_$P(ECNOD,U,3)_U_$P($G(^ECX(728.441,+$P(ECNOD,U,8),0)),U) ;126 Add stop code, credit stop, and char4 code
"RTN","ECUMRPC1",198,0)
 Q
"RTN","ECUMRPC1",199,0)
CSTCTR ;Search for cost centers (File #420.1)
"RTN","ECUMRPC1",200,0)
 N ECNULL,INDX,STR,NSTR,I
"RTN","ECUMRPC1",201,0)
 S $P(ECNULL," ",7)=" ",INDX="B"
"RTN","ECUMRPC1",202,0)
 I $E(ECSTR)?.N,$L(ECSTR)<7 S ECSTR=ECSTR_$E(ECNULL,1,7-$L(ECSTR))
"RTN","ECUMRPC1",203,0)
 I $L($P(ECSTR," "))=6,$P(ECSTR," ",2)?.A D   ;truncate for x-ref
"RTN","ECUMRPC1",204,0)
 . S ECSTR=$P(ECSTR," ")_" "_$E($P(ECSTR," ",2,999),1,22)
"RTN","ECUMRPC1",205,0)
 I $E(ECSTR)?.A S INDX="C",(STR,NSTR)="" D  S ECSTR=NSTR
"RTN","ECUMRPC1",206,0)
 .F I=1:1 S STR=$P(ECSTR," ",I) Q:STR=""  D
"RTN","ECUMRPC1",207,0)
 ..S STR=$E(STR)_$TR($E(STR,2,9999),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","ECUMRPC1",208,0)
 ..S NSTR=NSTR_STR
"RTN","ECUMRPC1",209,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"",INDX,"I '$P(^(0),U,2)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",210,0)
 Q
"RTN","ECUMRPC1",211,0)
SERVC ;Search for services (File #49)
"RTN","ECUMRPC1",212,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",213,0)
 Q
"RTN","ECUMRPC1",214,0)
MEDSPC ;Search for medical specialty (File #723)
"RTN","ECUMRPC1",215,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",216,0)
 Q
"RTN","ECUMRPC1",217,0)
STPCDE ;Search for associated stop code (File #40.7)
"RTN","ECUMRPC1",218,0)
 N ECNT,INDX,ECNUL,STR,IEN
"RTN","ECUMRPC1",219,0)
 S $P(ECNUL,"  ",30)=" ",INDX="B",ECNT=0,ECSTR=$P(ECSTR,"~")
"RTN","ECUMRPC1",220,0)
 I +ECSTR,+ECSTR?.N S INDX="C",IEN=0 D  Q
"RTN","ECUMRPC1",221,0)
 .S ECSTR=$O(^DIC(40.7,INDX,+ECSTR)) I ECSTR="" Q
"RTN","ECUMRPC1",222,0)
 .F  S IEN=$O(^DIC(40.7,INDX,ECSTR,IEN)) Q:'IEN  D  I ECNT>(ECNUM-1) Q
"RTN","ECUMRPC1",223,0)
 ..;07/27/09 llh added checks on piece 2 and 6
"RTN","ECUMRPC1",224,0)
 ..S STR=$G(^DIC(40.7,IEN,0)) I ($P(STR,U,3)'=""&($P(STR,U,3)'>DT))!($P(STR,U,6)=$S($G(ECTYPE)="":"S",1:"P"))!($P(STR,U,6)="")!($L($P(STR,U,2))'=3) Q  ;126 allow for searches for primary or secondary
"RTN","ECUMRPC1",225,0)
 ..S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)_U_IEN
"RTN","ECUMRPC1",226,0)
 ..S ECNT=ECNT+1,^TMP($J,"ECFIND",ECNT)=STR
"RTN","ECUMRPC1",227,0)
 ;added validation checks here as well
"RTN","ECUMRPC1",228,0)
 ;D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)&($P(^(0),U,6)'=""S"")","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",229,0)
 D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)&($L($P(^(0),U,2))=3)&(($P(^(0),U,6)=$S($G(ECTYPE)="""":""P"",1:""S""))!($P(^(0),U,6)=""E""))","","^TMP(""ECSRCH"",$J)","ECER") ;126
"RTN","ECUMRPC1",230,0)
 S ECNT=0
"RTN","ECUMRPC1",231,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",232,0)
 .S STR=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_$G(^(1))
"RTN","ECUMRPC1",233,0)
 .S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)
"RTN","ECUMRPC1",234,0)
 .S ^TMP($J,"ECFIND",ECNT)=STR_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",235,0)
 Q
"RTN","ECUMRPC1",236,0)
DUNT ;Search for DSS unit (File #724)
"RTN","ECUMRPC1",237,0)
 N ECNT,SNDPCE
"RTN","ECUMRPC1",238,0)
 D LISTDIC(ECFIL,"",".01;10;13",ECORD,ECNUM,ECSTR,"","","I '$P(^(0),""^"",6),$P(^(0),U,8)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",239,0)
 S ECNT=0
"RTN","ECUMRPC1",240,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",241,0)
 .S SNDPCE=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,13))
"RTN","ECUMRPC1",242,0)
 .S SNDPCE=$S(SNDPCE="O":1,SNDPCE="A":1,1:0)
"RTN","ECUMRPC1",243,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)_U_$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,10))_U_SNDPCE
"RTN","ECUMRPC1",244,0)
 Q
"RTN","ECUMRPC1",245,0)
ECAT ;Search for Category (File #726)
"RTN","ECUMRPC1",246,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $P(^(0),""^"",3)=""""!($P(^(0),U,3)>DT)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",247,0)
 Q
"RTN","ECUMRPC1",248,0)
LOC ;Search for Location (File #4)
"RTN","ECUMRPC1",249,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $G(^(""EC""))","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",250,0)
 Q
"RTN","ECUMRPC1",251,0)
LISTDIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER) ;
"RTN","ECUMRPC1",252,0)
 ;Produces a list of records in a file base on search string
"RTN","ECUMRPC1",253,0)
 N DIC
"RTN","ECUMRPC1",254,0)
 D LIST^DIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER)
"RTN","ECUMRPC1",255,0)
 K ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECID
"RTN","ECUMRPC1",256,0)
 Q
"RTN","ECUMRPC1",257,0)
SORT ;Extracts data to be returned to broker
"RTN","ECUMRPC1",258,0)
 N ECNT,STR
"RTN","ECUMRPC1",259,0)
 S ECNT=0
"RTN","ECUMRPC1",260,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",261,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",262,0)
 Q
"RTN","ECUMRPC1",263,0)
 ;
"RTN","ECUMRPC1",264,0)
CHAR4 ;126, returns list of CHAR4 codes from the NATIONAL CLINIC file (#728.441)
"RTN","ECUMRPC1",265,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $P($G(^(2)),""^"")=""""!($P($G(^(2)),""^"")>DT)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",266,0)
 Q
"RTN","ECUTL1")
0^13^B66986146^B59402875
"RTN","ECUTL1",1,0)
ECUTL1 ;ALB/ESD - Event Capture Classification Utilities ;12/5/14  16:23
"RTN","ECUTL1",2,0)
 ;;2.0;EVENT CAPTURE;**10,13,17,42,54,76,107,122,126**;8 May 96;Build 8
"RTN","ECUTL1",3,0)
 ;
"RTN","ECUTL1",4,0)
ASKCLASS(DFN,ECANS,ERR,ECTOPCE,ECPATST,ECHDA) ;  Ask classification questions
"RTN","ECUTL1",5,0)
 ; (Agent Orange, Ionizing Radiation, Environmental Contaminants/South 
"RTN","ECUTL1",6,0)
 ; West Asia Conditions, Service Connected, Military Sexual Trauma, 
"RTN","ECUTL1",7,0)
 ; Head/Neck Cancer, Combat Veteran, Project 112/SHAD)
"RTN","ECUTL1",8,0)
 ;
"RTN","ECUTL1",9,0)
 ;   Input:
"RTN","ECUTL1",10,0)
 ;      DFN     - IEN of Patient file (#2)
"RTN","ECUTL1",11,0)
 ;      ECTOPCE - Variable which indicates if DSS Unit is sending to PCE
"RTN","ECUTL1",12,0)
 ;      ECPATST - Inpatient/outpatient status
"RTN","ECUTL1",13,0)
 ;      ECHDA   - IEN in file #721 if editing existing record [optional]
"RTN","ECUTL1",14,0)
 ;
"RTN","ECUTL1",15,0)
 ;  Output:
"RTN","ECUTL1",16,0)
 ;      ECANS - array subscripted by classification abbreviation
"RTN","ECUTL1",17,0)
 ;              (i.e. ECANS("AO")) and passed by reference containing:
"RTN","ECUTL1",18,0)
 ;                 field # of class from EC Patient file (#721)^answer
"RTN","ECUTL1",19,0)
 ;      ERR   - Error indicator if user uparrows or times out (set to 1)
"RTN","ECUTL1",20,0)
 ;
"RTN","ECUTL1",21,0)
 ;      Function value - 1 if successful, 0 otherwise
"RTN","ECUTL1",22,0)
 ;
"RTN","ECUTL1",23,0)
 N ANS,DIR,ECCL,ECCLFLD,SUCCESS,ECVST,ECVSTDT,ECPXB,PXBDATA,ECNT,ECOLD,ECPIECE,ECXX
"RTN","ECUTL1",24,0)
 S (ECANS,ECCL)=""
"RTN","ECUTL1",25,0)
 S ERR=0
"RTN","ECUTL1",26,0)
 S SUCCESS=1
"RTN","ECUTL1",27,0)
 S DFN=+$G(DFN)
"RTN","ECUTL1",28,0)
 S ECTOPCE=$G(ECTOPCE)
"RTN","ECUTL1",29,0)
 I ECTOPCE["~" S ECTOPCE=$P(ECTOPCE,"~",2)
"RTN","ECUTL1",30,0)
 S ECPATST=$G(ECPATST)
"RTN","ECUTL1",31,0)
 ;- Drop out if invalid condition found OR if DSS Unit not sending to
"RTN","ECUTL1",32,0)
 ;  PCE or patient is an inpatient
"RTN","ECUTL1",33,0)
 I ('DFN)!(ECTOPCE="")!(ECPATST="")!(ECTOPCE="N")!(ECPATST="I") S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",34,0)
 D NOW^%DTC S ECVSTDT=$S(+$G(ECDT):ECDT,1:%),ECVST="" ;modified to use event date;JAM/11/24/03
"RTN","ECUTL1",35,0)
 ;- If editing an existing record, get visit data & display classification
"RTN","ECUTL1",36,0)
 I $G(ECHDA) D
"RTN","ECUTL1",37,0)
 .S ECVSTDT=$P($G(^ECH(ECHDA,0)),U,3)
"RTN","ECUTL1",38,0)
 .S ECVST=$P($G(^ECH(ECHDA,0)),U,21)
"RTN","ECUTL1",39,0)
 .F ECCL="AO","IR","EC","SC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",40,0)
 ..S ECPIECE=$S(ECCL="AO":3,ECCL="IR":4,ECCL="EC":5,ECCL="SC":6,ECCL="MST":9,ECCL="HNC":10,ECCL="CV":11,1:12)
"RTN","ECUTL1",41,0)
 ..S ECCLFLD=$P("^^Agent Orange^Ionizing Radiation^South West Asia Conditions^Service Connected^^^Military Sexual Trauma^Head/Neck Cancer^Combat Veteran^Project 112/SHAD","^",ECPIECE)
"RTN","ECUTL1",42,0)
 ..S ECXX=$P($G(^ECH(ECHDA,"P")),U,ECPIECE),ECXX=$S(ECXX="Y":"YES",ECXX="N":"NO",1:"")
"RTN","ECUTL1",43,0)
 ..I ECXX]"" S ECOLD(ECCL)=ECCLFLD_": "_ECXX
"RTN","ECUTL1",44,0)
 .I $D(ECOLD) D
"RTN","ECUTL1",45,0)
 ..W !,"*** Current encounter classification ***",!
"RTN","ECUTL1",46,0)
 ..F ECCL="SC","CV","AO","IR","EC","MST","HNC","SHAD" D
"RTN","ECUTL1",47,0)
 ...I $D(ECOLD(ECCL)) W !?4,ECOLD(ECCL)
"RTN","ECUTL1",48,0)
 ;- Ask user classification question
"RTN","ECUTL1",49,0)
 D CLASS^PXBAPI21("",DFN,ECVSTDT,1,ECVST) W !
"RTN","ECUTL1",50,0)
 ;- Check error; exit if error condition
"RTN","ECUTL1",51,0)
 I $D(PXBDATA("ERR")) D  I ERR S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",52,0)
 .F ECPXB=1:1:4 I $D(PXBDATA("ERR",ECPXB)) D
"RTN","ECUTL1",53,0)
 ..I (PXBDATA("ERR",ECPXB)=1)!(PXBDATA("ERR",ECPXB)=4) S ERR=1
"RTN","ECUTL1",54,0)
 ;- Otherwise, continue to setup ecans array, i.e., new classification data
"RTN","ECUTL1",55,0)
 F ECCL="AO","IR","SC","EC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",56,0)
 .S ECCLFLD=$S(ECCL="AO":21,ECCL="IR":22,ECCL="EC":23,ECCL="SC":24,ECCL="MST":35,ECCL="HNC":39,ECCL="CV":40,1:41)
"RTN","ECUTL1",57,0)
 .S ECPXB=$S(ECCL="AO":1,ECCL="IR":2,ECCL="EC":4,ECCL="SC":3,ECCL="MST":5,ECCL="CV":7,ECCL="SHAD":8,1:6)
"RTN","ECUTL1",58,0)
 .S ANS=$P($G(PXBDATA(ECPXB)),U,2),ANS=$S(ANS=1:"Y",ANS=0:"N",1:"")
"RTN","ECUTL1",59,0)
 .S ECANS(ECCL)=ECCLFLD_"^"_ANS
"RTN","ECUTL1",60,0)
 ;- Delete old data if it exists
"RTN","ECUTL1",61,0)
 I $G(ECHDA) D DELCLASS(ECHDA)
"RTN","ECUTL1",62,0)
 Q SUCCESS
"RTN","ECUTL1",63,0)
 ;
"RTN","ECUTL1",64,0)
 ;
"RTN","ECUTL1",65,0)
EDCLASS(ECIEN,ECANS) ;  Edit classifications fields in EC Patient
"RTN","ECUTL1",66,0)
 ;                  file (#721)
"RTN","ECUTL1",67,0)
 ;
"RTN","ECUTL1",68,0)
 ;   Input:
"RTN","ECUTL1",69,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",70,0)
 ;      ECANS - Array of answers to classification questions asked
"RTN","ECUTL1",71,0)
 ;
"RTN","ECUTL1",72,0)
 ;  Output:
"RTN","ECUTL1",73,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 edited in file #721
"RTN","ECUTL1",74,0)
 ;
"RTN","ECUTL1",75,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",76,0)
 S (DR,ECCL)=""
"RTN","ECUTL1",77,0)
 ;
"RTN","ECUTL1",78,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",79,0)
 D
"RTN","ECUTL1",80,0)
 . I '$G(ECIEN)!('$D(ECANS)) Q
"RTN","ECUTL1",81,0)
 . ;
"RTN","ECUTL1",82,0)
 . ;- Lock main node
"RTN","ECUTL1",83,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",84,0)
 . S DA=ECIEN
"RTN","ECUTL1",85,0)
 . S DIE="^ECH("
"RTN","ECUTL1",86,0)
 . ;
"RTN","ECUTL1",87,0)
 . ;- Edit classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",88,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  S DR=DR_+$P($G(ECANS(ECCL)),"^")_"////"_$P($G(ECANS(ECCL)),"^",2)_";"
"RTN","ECUTL1",89,0)
 . ;
"RTN","ECUTL1",90,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",91,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",92,0)
 . D ^DIE
"RTN","ECUTL1",93,0)
 ;
"RTN","ECUTL1",94,0)
 ;- Unlock main node
"RTN","ECUTL1",95,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",96,0)
 ;
"RTN","ECUTL1",97,0)
 Q
"RTN","ECUTL1",98,0)
 ;
"RTN","ECUTL1",99,0)
 ;
"RTN","ECUTL1",100,0)
SETCLASS(ECANS) ;  Set answers to classification questions in EC variables
"RTN","ECUTL1",101,0)
 ;          (used in EC data entry options when filing EC Patient record)
"RTN","ECUTL1",102,0)
 ;
"RTN","ECUTL1",103,0)
 ;   Input:
"RTN","ECUTL1",104,0)
 ;      ECANS - array of answers to class questions asked containing:
"RTN","ECUTL1",105,0)
 ;                 field number of class ques from file #721^answer
"RTN","ECUTL1",106,0)
 ;
"RTN","ECUTL1",107,0)
 ;  Output:
"RTN","ECUTL1",108,0)
 ;      EC classification var - ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,
"RTN","ECUTL1",109,0)
 ;                              ECSHAD
"RTN","ECUTL1",110,0)
 ;
"RTN","ECUTL1",111,0)
 N ECCL,ECCLFLD
"RTN","ECUTL1",112,0)
 S (ECCL,ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,ECSHAD)=""
"RTN","ECUTL1",113,0)
 ;
"RTN","ECUTL1",114,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",115,0)
 D
"RTN","ECUTL1",116,0)
 . ;
"RTN","ECUTL1",117,0)
 . ;- If array containing class flds^answers is not created, exit
"RTN","ECUTL1",118,0)
 . I '$D(ECANS) Q
"RTN","ECUTL1",119,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  D
"RTN","ECUTL1",120,0)
 .. ;
"RTN","ECUTL1",121,0)
 .. ;- Get field number of classification
"RTN","ECUTL1",122,0)
 .. S ECCLFLD=+$P($G(ECANS(ECCL)),"^")
"RTN","ECUTL1",123,0)
 .. ;
"RTN","ECUTL1",124,0)
 .. ;- Agent Orange variable
"RTN","ECUTL1",125,0)
 .. S:ECCLFLD=21 ECAO=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",126,0)
 .. ;
"RTN","ECUTL1",127,0)
 .. ;- Ionizing Radiation variable
"RTN","ECUTL1",128,0)
 .. S:ECCLFLD=22 ECIR=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",129,0)
 .. ;
"RTN","ECUTL1",130,0)
 .. ;- Environmental Contaminants/South West Asia Conditions variable
"RTN","ECUTL1",131,0)
 .. S:ECCLFLD=23 ECZEC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",132,0)
 .. ;
"RTN","ECUTL1",133,0)
 .. ;- Service Connected variable
"RTN","ECUTL1",134,0)
 .. S:ECCLFLD=24 ECSC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",135,0)
 .. ;
"RTN","ECUTL1",136,0)
 .. ;- Military Sexual Trauma variable
"RTN","ECUTL1",137,0)
 .. S:ECCLFLD=35 ECMST=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",138,0)
 .. ;
"RTN","ECUTL1",139,0)
 .. ;- Head/Neck Cancer
"RTN","ECUTL1",140,0)
 .. S:ECCLFLD=39 ECHNC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",141,0)
 .. ;
"RTN","ECUTL1",142,0)
 .. ;- Combat Veteran
"RTN","ECUTL1",143,0)
 .. S:ECCLFLD=40 ECCV=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",144,0)
 .. ;
"RTN","ECUTL1",145,0)
 .. ;- Project 112/SHAD (Shipboard Hazard and Defense)
"RTN","ECUTL1",146,0)
 .. S:ECCLFLD=41 ECSHAD=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",147,0)
 Q
"RTN","ECUTL1",148,0)
 ;
"RTN","ECUTL1",149,0)
 ;
"RTN","ECUTL1",150,0)
DELCLASS(ECIEN) ;  Delete classification fields in EC Patient file (#721)
"RTN","ECUTL1",151,0)
 ;
"RTN","ECUTL1",152,0)
 ;   Input:
"RTN","ECUTL1",153,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",154,0)
 ;
"RTN","ECUTL1",155,0)
 ;  Output:
"RTN","ECUTL1",156,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 deleted in file#721
"RTN","ECUTL1",157,0)
 ;
"RTN","ECUTL1",158,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",159,0)
 S DR=""
"RTN","ECUTL1",160,0)
 ;
"RTN","ECUTL1",161,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",162,0)
 D
"RTN","ECUTL1",163,0)
 . I '$G(ECIEN) Q
"RTN","ECUTL1",164,0)
 . ;
"RTN","ECUTL1",165,0)
 . ;- Lock main node
"RTN","ECUTL1",166,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",167,0)
 . S DA=ECIEN
"RTN","ECUTL1",168,0)
 . S DIE="^ECH("
"RTN","ECUTL1",169,0)
 . ;
"RTN","ECUTL1",170,0)
 . ;- Delete classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",171,0)
 . F ECCL=21:1:24,35,39,40,41 S DR=DR_ECCL_"////@;"
"RTN","ECUTL1",172,0)
 . ;
"RTN","ECUTL1",173,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",174,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",175,0)
 . D ^DIE
"RTN","ECUTL1",176,0)
 ;
"RTN","ECUTL1",177,0)
 ;- Unlock main node
"RTN","ECUTL1",178,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",179,0)
 ;
"RTN","ECUTL1",180,0)
 Q
"RTN","ECUTL1",181,0)
 ;
"RTN","ECUTL1",182,0)
 ;
"RTN","ECUTL1",183,0)
LOCK(ECIEN) ;  Lock EC Patient record
"RTN","ECUTL1",184,0)
 ;
"RTN","ECUTL1",185,0)
 ;   Input:
"RTN","ECUTL1",186,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",187,0)
 ;
"RTN","ECUTL1",188,0)
 ;  Output:
"RTN","ECUTL1",189,0)
 ;      Function Value - 1 if record can be locked, 0 otherwise
"RTN","ECUTL1",190,0)
 ;
"RTN","ECUTL1",191,0)
 I $G(ECIEN) L +^ECH(ECIEN):5
"RTN","ECUTL1",192,0)
 Q $T
"RTN","ECUTL1",193,0)
 ;
"RTN","ECUTL1",194,0)
 ;
"RTN","ECUTL1",195,0)
UNLOCK(ECIEN) ;  Unlock EC Patient record
"RTN","ECUTL1",196,0)
 ;
"RTN","ECUTL1",197,0)
 ;   Input:
"RTN","ECUTL1",198,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",199,0)
 ;
"RTN","ECUTL1",200,0)
 ;  Output:
"RTN","ECUTL1",201,0)
 ;      EC Patient record unlocked
"RTN","ECUTL1",202,0)
 ;
"RTN","ECUTL1",203,0)
 I $G(ECIEN) L -^ECH(ECIEN)
"RTN","ECUTL1",204,0)
 Q
"RTN","ECUTL1",205,0)
RCNTVST(RESULT,ECARY) ;126 Changed parameter name from DFN to ECARY
"RTN","ECUTL1",206,0)
 ;
"RTN","ECUTL1",207,0)
 ;This call uses the Patient and Visit file to return a list of recent
"RTN","ECUTL1",208,0)
 ;visits. It returns the most recent 20 visits using both files but does 
"RTN","ECUTL1",209,0)
 ;not return future visits from the Patient file.  It also filters out 
"RTN","ECUTL1",210,0)
 ;canceled, rescheduled or no-show appts.  For the Patient file it uses 
"RTN","ECUTL1",211,0)
 ;a start date of "" and an end date of "NOW". For the selected visit
"RTN","ECUTL1",212,0)
 ;call, it only passes in and uses the DFN.
"RTN","ECUTL1",213,0)
 ;
"RTN","ECUTL1",214,0)
 ;126 Updated code so that it filters visit by selected location.
"RTN","ECUTL1",215,0)
 ;Only visits/appts with clinics in the location will be shown.
"RTN","ECUTL1",216,0)
 ;API 1905
"RTN","ECUTL1",217,0)
 ;Calls    
"RTN","ECUTL1",218,0)
 ;  SELECTED^VSIT(DFN,SDT,EDT,HOSLOC,ENCTPE,NNCTPE,SRVCAT,NSRVCAT,LASTN) 
"RTN","ECUTL1",219,0)
 ;  See API for detailed documentation
"RTN","ECUTL1",220,0)
 ;
"RTN","ECUTL1",221,0)
 ;API 3859
"RTN","ECUTL1",222,0)
 ;Calls    GETAPPT^SDAMA201(DFN,SDFIELDS,SDAPSTAT,SDT,EDT,SDCNT)
"RTN","ECUTL1",223,0)
 ;         See API for detailed documentation
"RTN","ECUTL1",224,0)
 ;
"RTN","ECUTL1",225,0)
 ;IA 10040 - This is a supported IA and is used to filter/screen
"RTN","ECUTL1",226,0)
 ;           non clinics visits from being included in API 1905
"RTN","ECUTL1",227,0)
 ;           not needed in 3859 as it contains a filter for clinics
"RTN","ECUTL1",228,0)
 ;
"RTN","ECUTL1",229,0)
 N ARR,CNT,DATE,NUM,PARAMS,P1,P1DT,P2,PDT,VDT,VIEN,X,X1,X2,Y,SDRESULT,DFN,LOC ;122,126
"RTN","ECUTL1",230,0)
 S DFN=$P(ECARY,U),LOC=$P(ECARY,U,2) ;126
"RTN","ECUTL1",231,0)
 D NOW^%DTC S DATE=%,Y=DATE
"RTN","ECUTL1",232,0)
 S VDT=3050101
"RTN","ECUTL1",233,0)
 S X1=DT,X2=(-15) D C^%DTC S PDT=X    ;get appts within last 15 days
"RTN","ECUTL1",234,0)
 S RESULT(0)=0
"RTN","ECUTL1",235,0)
 I '$G(DFN) Q
"RTN","ECUTL1",236,0)
 K ^TMP("VSIT",$J)
"RTN","ECUTL1",237,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","ECUTL1",238,0)
 D SELECTED^VSIT(DFN,VDT,"","","","","","HE",30) ;126 Changed call to filter out hospitalization and event (historical) categories
"RTN","ECUTL1",239,0)
 D GETAPPT^SDAMA201(DFN,"1;2","R;NT",PDT,DATE,.SDRESULT)
"RTN","ECUTL1",240,0)
 S VIEN=0
"RTN","ECUTL1",241,0)
 F  S VIEN=$O(^TMP("VSIT",$J,VIEN)) Q:VIEN=""  S NUM=0 D
"RTN","ECUTL1",242,0)
 .F  S NUM=$O(^TMP("VSIT",$J,VIEN,NUM)) Q:NUM=""  D
"RTN","ECUTL1",243,0)
 ..S PARAMS=$G(^TMP("VSIT",$J,VIEN,NUM))
"RTN","ECUTL1",244,0)
 ..;make sure location is a clinic
"RTN","ECUTL1",245,0)
 ..I $$GET1^DIQ(44,$P($P(PARAMS,U,2),";"),2,"I")'="C" Q
"RTN","ECUTL1",246,0)
 ..I $G(LOC) I LOC'=$$GET1^DIQ(44,$P($P(PARAMS,U,2),";"),3,"I") Q  ;126 If location sent, filter out any visits whose clinic isn't in the location
"RTN","ECUTL1",247,0)
 ..S P1DT=$P(PARAMS,U,1),P1=$$FMTE^XLFDT(P1DT,"9M"),P2=$P($P(PARAMS,U,2),";",2)
"RTN","ECUTL1",248,0)
 ..I '$G(P1DT)!($G(P2)="") Q
"RTN","ECUTL1",249,0)
 ..I $D(ARR(P1DT,P2))=1 Q
"RTN","ECUTL1",250,0)
 ..;;cntrl array, filter visits from PT file
"RTN","ECUTL1",251,0)
 ..S ARR(P1DT,P2)=P1DT_U_$$LJ^XLFSTR(P1,25)_$$LJ^XLFSTR(P2,30)_U_P1_U_P2_U
"RTN","ECUTL1",252,0)
 S VIEN=0
"RTN","ECUTL1",253,0)
 F  S VIEN=$O(^TMP($J,"SDAMA201","GETAPPT",VIEN)) Q:VIEN=""  D
"RTN","ECUTL1",254,0)
 .I $D(^TMP($J,"SDAMA201","GETAPPT","ERROR")) Q
"RTN","ECUTL1",255,0)
 .S P1DT=$G(^TMP($J,"SDAMA201","GETAPPT",VIEN,1))
"RTN","ECUTL1",256,0)
 .S P1=$$FMTE^XLFDT(P1DT,"9M")
"RTN","ECUTL1",257,0)
 .S P2=$P($G(^TMP($J,"SDAMA201","GETAPPT",VIEN,2)),U,2)
"RTN","ECUTL1",258,0)
 .I $G(LOC) I LOC'=$$GET1^DIQ(44,$P($G(^TMP($J,"SDAMA201","GETAPPT",VIEN,2)),U),3,"I") Q  ;126 If location sent, filter out any appts whos clinic isn't in the location
"RTN","ECUTL1",259,0)
 .I '$G(P1DT)!($G(P2)="") Q
"RTN","ECUTL1",260,0)
 .I $D(ARR(P1DT,P2))=1 Q
"RTN","ECUTL1",261,0)
 .;;cntrl array, filter visits from PT file
"RTN","ECUTL1",262,0)
 .S ARR(P1DT,P2)=P1DT_U_$$LJ^XLFSTR(P1,25)_$$LJ^XLFSTR(P2,30)_U_P1_U_P2_U
"RTN","ECUTL1",263,0)
 S VIEN=9999999999,CNT=1
"RTN","ECUTL1",264,0)
 F  S VIEN=$O(ARR(VIEN),-1) Q:((VIEN="")!(CNT>20))  D
"RTN","ECUTL1",265,0)
 .S NUM=0 F  S NUM=$O(ARR(VIEN,NUM)) Q:NUM=""  D
"RTN","ECUTL1",266,0)
 ..S RESULT(CNT)=ARR(VIEN,NUM),CNT=CNT+1
"RTN","ECUTL1",267,0)
 I $D(ARR) S RESULT(0)=CNT
"RTN","ECUTL1",268,0)
 K ^TMP("VSIT",$J)
"RTN","ECUTL1",269,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","ECUTL1",270,0)
 Q
"VER")
8.0^22.0
"^DD",721,721,9,0)
VOLUME^RNJ4,0^^0;10^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",721,721,9,.1)
Volume
"^DD",721,721,9,3)
Type a Number between 1 and 9999, 0 Decimal Digits.
"^DD",721,721,9,21,0)
^.001^28^28^3150406^^^
"^DD",721,721,9,21,1,0)
The ECS volume field DOES NOT capture the number of 
"^DD",721,721,9,21,2,0)
patients seen by ECS providers. Volume is usually
"^DD",721,721,9,21,3,0)
associated with the number of procedures performed.
"^DD",721,721,9,21,4,0)
 
"^DD",721,721,9,21,5,0)
The volume field can be used to record and track 3 
"^DD",721,721,9,21,6,0)
different values:
"^DD",721,721,9,21,7,0)
 
"^DD",721,721,9,21,8,0)
1. Number of Procedures: When a selected procedure code CONTAINS inherent
"^DD",721,721,9,21,9,0)
time elements (such as "30M Massage Therapy") then a volume of one is
"^DD",721,721,9,21,10,0)
usually entered, meaning 1 of this specific procedure/service was
"^DD",721,721,9,21,11,0)
provided.  
"^DD",721,721,9,21,12,0)
  
"^DD",721,721,9,21,13,0)
      OR 
"^DD",721,721,9,21,14,0)
  
"^DD",721,721,9,21,15,0)
2. Time: Amount of time shown in increments of minutes (M). When a 
"^DD",721,721,9,21,16,0)
selected procedure code DOES NOT have inherent time elements THEN the
"^DD",721,721,9,21,17,0)
volume field is used to capture the time spent completing the 
"^DD",721,721,9,21,18,0)
procedure/service: 1 = 15M, 2 = 30M, 3= 45M, etc.
"^DD",721,721,9,21,19,0)
 
"^DD",721,721,9,21,20,0)
      OR
"^DD",721,721,9,21,21,0)
 
"^DD",721,721,9,21,22,0)
3. Days: Number of days patient was in VA paid facilities such as State 
"^DD",721,721,9,21,23,0)
Home, DOM, or a Nursing Home. When entering workload for a patient in a
"^DD",721,721,9,21,24,0)
VA-Paid facility, volume of 1 means 1 day, 2 means 2 days, etc.
"^DD",721,721,9,21,25,0)
 
"^DD",721,721,9,21,26,0)
NOTE: It is imperative to understand and keep track of 
"^DD",721,721,9,21,27,0)
the values you are entering in the volume field and what
"^DD",721,721,9,21,28,0)
they represent for the patients you are treating.
"^DD",721,721,9,23,0)
^.001^1^1^3150406^^^^
"^DD",721,721,9,23,1,0)
A numeric volume for this procedure.
"^DD",721,721,9,"DT")
2950516
"^DD",724,724,14,0)
CREDIT STOP^*P40.7'^DIC(40.7,^0;13^S DIC("S")="I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",724,724,14,3)
Enter the credit stop code associated with this DSS Unit.
"^DD",724,724,14,12)
Cannot select inactive entries.
"^DD",724,724,14,12.1)
S DIC("S")="I $P(^(0),U,3)=""""!($P(^(0),U,3)'<DT)"
"^DD",724,724,14,21,0)
^.001^1^1^3150406^^^^
"^DD",724,724,14,21,1,0)
Credit stop code associated with this DSS Unit.
"^DD",724,724,14,23,0)
^.001^6^6^3150406^^
"^DD",724,724,14,23,1,0)
For DSS Units that have a SEND TO PCE status of "send no records" a credit
"^DD",724,724,14,23,2,0)
stop code can be associated with this unit.
"^DD",724,724,14,23,3,0)
 
"^DD",724,724,14,23,4,0)
Must have restriction type of E (Either) or S (Secondary), and may not be 
"^DD",724,724,14,23,5,0)
the same value as the Associated Stop Code (i.e. the Primary Stop 
"^DD",724,724,14,23,6,0)
Code) selected for the DSS Unit.
"^DD",724,724,14,"DT")
3141209
"^DD",724,724,15,0)
CHAR4^*P728.441'^ECX(728.441,^0;15^S DIC("S")="I $P($G(^(2)),U)=""""!($P($G(^(2)),U)'<DT)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",724,724,15,3)
Enter the CHAR4 code associated with this DSS Unit.
"^DD",724,724,15,12)
Cannot select inactive entries.
"^DD",724,724,15,12.1)
S DIC("S")="I $P($G(^(2)),U)=""""!($P($G(^(2)),U)'<DT)"
"^DD",724,724,15,21,0)
^.001^1^1^3150406^^^^
"^DD",724,724,15,21,1,0)
The CHAR4 code associated with this DSS Unit.
"^DD",724,724,15,23,0)
^.001^2^2^3150406^^
"^DD",724,724,15,23,1,0)
For DSS Units that have a SEND TO PCE status of "send no records" a
"^DD",724,724,15,23,2,0)
CHAR4 code can be associated with this unit.
"^DD",724,724,15,"DT")
3141209
"BLD",9470,6)
^120
**END**
**END**

