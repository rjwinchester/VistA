Released EC*2*145 SEQ #139
Extracted from mail message
**KIDS**:EC*2.0*145^

**INSTALL NAME**
EC*2.0*145
"BLD",10353,0)
EC*2.0*145^EVENT CAPTURE^0^3190307^y
"BLD",10353,4,0)
^9.64PA^^
"BLD",10353,6.3)
6
"BLD",10353,"ABPKG")
n
"BLD",10353,"INIT")
POST^EC2P145
"BLD",10353,"KRN",0)
^9.67PA^779.2^20
"BLD",10353,"KRN",.4,0)
.4
"BLD",10353,"KRN",.401,0)
.401
"BLD",10353,"KRN",.402,0)
.402
"BLD",10353,"KRN",.403,0)
.403
"BLD",10353,"KRN",.5,0)
.5
"BLD",10353,"KRN",.84,0)
.84
"BLD",10353,"KRN",3.6,0)
3.6
"BLD",10353,"KRN",3.8,0)
3.8
"BLD",10353,"KRN",9.2,0)
9.2
"BLD",10353,"KRN",9.2,"NM",0)
^9.68A^2^2
"BLD",10353,"KRN",9.2,"NM",1,0)
ECSCPT^^0
"BLD",10353,"KRN",9.2,"NM",2,0)
ECRECER^^0
"BLD",10353,"KRN",9.2,"NM","B","ECRECER",2)

"BLD",10353,"KRN",9.2,"NM","B","ECSCPT",1)

"BLD",10353,"KRN",9.8,0)
9.8
"BLD",10353,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",10353,"KRN",9.8,"NM",1,0)
EC2P145^^0^B43388452
"BLD",10353,"KRN",9.8,"NM",2,0)
ECSCPT^^0^B15400710
"BLD",10353,"KRN",9.8,"NM",3,0)
ECSCPT1^^0^B18251454
"BLD",10353,"KRN",9.8,"NM",4,0)
ECRECER^^0^B40589127
"BLD",10353,"KRN",9.8,"NM",5,0)
ECRRPT^^0^B61567239
"BLD",10353,"KRN",9.8,"NM",6,0)
ECRRPT1^^0^B61512971
"BLD",10353,"KRN",9.8,"NM",7,0)
ECUURPC^^0^B7313644
"BLD",10353,"KRN",9.8,"NM",8,0)
ECUTL1^^0^B72494106
"BLD",10353,"KRN",9.8,"NM","B","EC2P145",1)

"BLD",10353,"KRN",9.8,"NM","B","ECRECER",4)

"BLD",10353,"KRN",9.8,"NM","B","ECRRPT",5)

"BLD",10353,"KRN",9.8,"NM","B","ECRRPT1",6)

"BLD",10353,"KRN",9.8,"NM","B","ECSCPT",2)

"BLD",10353,"KRN",9.8,"NM","B","ECSCPT1",3)

"BLD",10353,"KRN",9.8,"NM","B","ECUTL1",8)

"BLD",10353,"KRN",9.8,"NM","B","ECUURPC",7)

"BLD",10353,"KRN",19,0)
19
"BLD",10353,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",10353,"KRN",19,"NM",1,0)
EC GUI CONTEXT^^0
"BLD",10353,"KRN",19,"NM","B","EC GUI CONTEXT",1)

"BLD",10353,"KRN",19.1,0)
19.1
"BLD",10353,"KRN",101,0)
101
"BLD",10353,"KRN",409.61,0)
409.61
"BLD",10353,"KRN",771,0)
771
"BLD",10353,"KRN",779.2,0)
779.2
"BLD",10353,"KRN",870,0)
870
"BLD",10353,"KRN",8989.51,0)
8989.51
"BLD",10353,"KRN",8989.52,0)
8989.52
"BLD",10353,"KRN",8994,0)
8994
"BLD",10353,"KRN","B",.4,.4)

"BLD",10353,"KRN","B",.401,.401)

"BLD",10353,"KRN","B",.402,.402)

"BLD",10353,"KRN","B",.403,.403)

"BLD",10353,"KRN","B",.5,.5)

"BLD",10353,"KRN","B",.84,.84)

"BLD",10353,"KRN","B",3.6,3.6)

"BLD",10353,"KRN","B",3.8,3.8)

"BLD",10353,"KRN","B",9.2,9.2)

"BLD",10353,"KRN","B",9.8,9.8)

"BLD",10353,"KRN","B",19,19)

"BLD",10353,"KRN","B",19.1,19.1)

"BLD",10353,"KRN","B",101,101)

"BLD",10353,"KRN","B",409.61,409.61)

"BLD",10353,"KRN","B",771,771)

"BLD",10353,"KRN","B",779.2,779.2)

"BLD",10353,"KRN","B",870,870)

"BLD",10353,"KRN","B",8989.51,8989.51)

"BLD",10353,"KRN","B",8989.52,8989.52)

"BLD",10353,"KRN","B",8994,8994)

"BLD",10353,"QUES",0)
^9.62^^
"BLD",10353,"REQB",0)
^9.611^2^2
"BLD",10353,"REQB",1,0)
EC*2.0*139^1
"BLD",10353,"REQB",2,0)
EC*2.0*130^1
"BLD",10353,"REQB","B","EC*2.0*130",2)

"BLD",10353,"REQB","B","EC*2.0*139",1)

"INIT")
POST^EC2P145
"KRN",9.2,1549,-1)
0^1
"KRN",9.2,1549,0)
ECSCPT^Event Code Screens with CPT Codes^3050824.162938^
"KRN",9.2,1549,1,0)
^^19^19^3180917^
"KRN",9.2,1549,1,1,0)
This option allows you to print/display event code screens 
"KRN",9.2,1549,1,2,0)
with active/inactive/both CPT codes for all or a specific DSS
"KRN",9.2,1549,1,3,0)
Unit. The output includes:
"KRN",9.2,1549,1,4,0)
 
"KRN",9.2,1549,1,5,0)
 - Run Date and Time
"KRN",9.2,1549,1,6,0)
 - Location
"KRN",9.2,1549,1,7,0)
 - DSS Unit
"KRN",9.2,1549,1,8,0)
 - Category (if applicable)
"KRN",9.2,1549,1,9,0)
 - Procedure Name
"KRN",9.2,1549,1,10,0)
 - National Number
"KRN",9.2,1549,1,11,0)
 - CPT Code 
"KRN",9.2,1549,1,12,0)
   (Inactive CPT codes are flagged with an *I* when printing 
"KRN",9.2,1549,1,13,0)
    both active and inactive codes)
"KRN",9.2,1549,1,14,0)
 - Event Code Screen Synonym
"KRN",9.2,1549,1,15,0)
 - Associated Clinic
"KRN",9.2,1549,1,16,0)
 - Stop Code
"KRN",9.2,1549,1,17,0)
 - Credit Stop Code
"KRN",9.2,1549,1,18,0)
 - CHAR4 Code
"KRN",9.2,1549,1,19,0)
 - MCA Labor Code
"KRN",9.2,1549,10.2)
W @IOF
"KRN",9.2,1554,-1)
0^2
"KRN",9.2,1554,0)
ECRECER^Event Capture Encounters Report^3111220.153224^
"KRN",9.2,1554,1,0)
^^20^20^3180924^
"KRN",9.2,1554,1,1,0)
** This report is formatted for a 132-column device. **
"KRN",9.2,1554,1,2,0)
 
"KRN",9.2,1554,1,3,0)
This option allows you to print/display/export Event Capture encounter
"KRN",9.2,1554,1,4,0)
data within a specified date range for selected locations and DSS units.
"KRN",9.2,1554,1,5,0)
The report can be sorted by patient or provider.
"KRN",9.2,1554,1,6,0)
 
"KRN",9.2,1554,1,7,0)
The output includes:
"KRN",9.2,1554,1,8,0)
 
"KRN",9.2,1554,1,9,0)
 - Patient name 
"KRN",9.2,1554,1,10,0)
 - Last four digits of patient SSN
"KRN",9.2,1554,1,11,0)
 - Inpatient/Outpatient Indicator
"KRN",9.2,1554,1,12,0)
 - Procedure Date and Time
"KRN",9.2,1554,1,13,0)
 - Primary provider
"KRN",9.2,1554,1,14,0)
 - DSS unit
"KRN",9.2,1554,1,15,0)
 - Total Procedure Volume (all procedures on same D/T and in same DSS unit)
"KRN",9.2,1554,1,16,0)
 - Clinic
"KRN",9.2,1554,1,17,0)
 - Stop Code
"KRN",9.2,1554,1,18,0)
 - Credit Stop Code
"KRN",9.2,1554,1,19,0)
 - CHAR4
"KRN",9.2,1554,1,20,0)
 - MCA Labor Code
"KRN",19,11187,-1)
0^1
"KRN",19,11187,0)
EC GUI CONTEXT^EC GUI Context version 2.6.0.0^^B^^^^^^^^EVENT CAPTURE
"KRN",19,11187,1,0)
^19.06^1^1^3180628^^^^
"KRN",19,11187,1,1,0)
This is the Broker Client/Server type option for the Event Capture GUI option
"KRN",19,11187,99)
58583,58456
"KRN",19,11187,99.1)
62872,41516
"KRN",19,11187,"RPC",0)
^19.05P^59^59
"KRN",19,11187,"RPC",1,0)
EC DSSCATCHECK
"KRN",19,11187,"RPC",2,0)
EC FILER
"KRN",19,11187,"RPC",3,0)
EC GETBATPROCS
"KRN",19,11187,"RPC",4,0)
EC GETCAT
"KRN",19,11187,"RPC",5,0)
EC GETCPTLST
"KRN",19,11187,"RPC",6,0)
EC GETDSSECS
"KRN",19,11187,"RPC",7,0)
EC GETDSSUNIT
"KRN",19,11187,"RPC",8,0)
EC GETDSSUNITUSRS
"KRN",19,11187,"RPC",9,0)
EC GETECLOC
"KRN",19,11187,"RPC",10,0)
EC GETECSCATS
"KRN",19,11187,"RPC",11,0)
EC GETECSCREEN
"KRN",19,11187,"RPC",12,0)
EC GETECSDETAIL
"KRN",19,11187,"RPC",13,0)
EC GETECSPROCS
"KRN",19,11187,"RPC",14,0)
EC GETENCDXS
"KRN",19,11187,"RPC",15,0)
EC GETIEN
"KRN",19,11187,"RPC",16,0)
EC GETLIST
"KRN",19,11187,"RPC",17,0)
EC GETLOC
"KRN",19,11187,"RPC",18,0)
EC GETNATPX
"KRN",19,11187,"RPC",19,0)
EC GETPATCLASTAT
"KRN",19,11187,"RPC",20,0)
EC GETPATELIG
"KRN",19,11187,"RPC",21,0)
EC GETPATINFO
"KRN",19,11187,"RPC",22,0)
EC GETPATPROCS
"KRN",19,11187,"RPC",23,0)
EC GETPRODEFS
"KRN",19,11187,"RPC",24,0)
EC GETPROVIDER
"KRN",19,11187,"RPC",25,0)
EC GETPXLST
"KRN",19,11187,"RPC",26,0)
EC GETPXMODIFIER
"KRN",19,11187,"RPC",27,0)
EC GETPXREASON
"KRN",19,11187,"RPC",28,0)
EC GETSCNHELP
"KRN",19,11187,"RPC",29,0)
EC GETUSRDSSUNIT
"KRN",19,11187,"RPC",30,0)
EC REPORTS
"KRN",19,11187,"RPC",31,0)
EC VALIDATE SPREADSHEET DATA
"KRN",19,11187,"RPC",32,0)
ORWU USERINFO
"KRN",19,11187,"RPC",33,0)
ORWU HASKEY
"KRN",19,11187,"RPC",34,0)
ORWU DEVICE
"KRN",19,11187,"RPC",35,0)
SC PATIENT LOOKUP
"KRN",19,11187,"RPC",36,0)
ORWU NEWPERS
"KRN",19,11187,"RPC",37,0)
DDR GET DD HELP
"KRN",19,11187,"RPC",38,0)
DDR FINDER
"KRN",19,11187,"RPC",39,0)
DDR FIND1
"KRN",19,11187,"RPC",40,0)
DDR LISTER
"KRN",19,11187,"RPC",41,0)
EC GETDATE
"KRN",19,11187,"RPC",42,0)
EC CLASHELP
"KRN",19,11187,"RPC",43,0)
DDR GETS ENTRY DATA
"KRN",19,11187,"RPC",44,0)
DG CHK BS5 XREF Y/N
"KRN",19,11187,"RPC",45,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11187,"RPC",46,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,11187,"RPC",47,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,11187,"RPC",48,0)
EC SPACEBAR
"KRN",19,11187,"RPC",49,0)
EC DIEDON
"KRN",19,11187,"RPC",50,0)
EC GETPATCH
"KRN",19,11187,"RPC",51,0)
EC GETVISITINFO
"KRN",19,11187,"RPC",52,0)
EC GETVERSION
"KRN",19,11187,"RPC",53,0)
ORWU DT
"KRN",19,11187,"RPC",54,0)
ECOB METHOD
"KRN",19,11187,"RPC",55,0)
ECOB FACTORY
"KRN",19,11187,"RPC",56,0)
EC RECENT VISITS
"KRN",19,11187,"RPC",57,0)
EC ICD10IMPLEMENTATIONDATE
"KRN",19,11187,"RPC",58,0)
EC GET DEFAULT PROVIDER
"KRN",19,11187,"RPC",59,0)
EC DELETE TEST PATIENT DATA
"KRN",19,11187,"U")
EC GUI CONTEXT VERSION 2.6.0.0
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",486,-1)
1^1
"PKG",486,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",486,20,0)
^9.402P^^
"PKG",486,22,0)
^9.49I^1^1
"PKG",486,22,1,0)
2.0^2960508^2981027^66481
"PKG",486,22,1,"PAH",1,0)
145^3190307^101077
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","EC2P145")
0^1^B43388452^n/a
"RTN","EC2P145",1,0)
EC2P145 ;ALB/DAN - Installation activities ;9/18/18  15:20
"RTN","EC2P145",2,0)
 ;;2.0;EVENT CAPTURE;**145**;8 May 96;Build 6
"RTN","EC2P145",3,0)
 ;
"RTN","EC2P145",4,0)
POST ;Post-install activities
"RTN","EC2P145",5,0)
 D SERUPD ;Add medical specialty/service
"RTN","EC2P145",6,0)
 D CHKLOC ;Check location names to see if they're correct
"RTN","EC2P145",7,0)
 D DELLOC ;Del "LOC" xref and then rebuild so it uses current names
"RTN","EC2P145",8,0)
 D GHOST ;Identify "ghost" DSS units (missing status)
"RTN","EC2P145",9,0)
 Q
"RTN","EC2P145",10,0)
 ;
"RTN","EC2P145",11,0)
SERUPD ;Section will add new values to the Medical Specialty file
"RTN","EC2P145",12,0)
 N NAME,CODE,OFF,NUM,DO,DIC,X,Y
"RTN","EC2P145",13,0)
 D BMES^XPDUTL("Checking Medical Specialty file..."),MES^XPDUTL("")
"RTN","EC2P145",14,0)
 F OFF=1:1 S CODE=$P($T(SERVICE+OFF),";;",2) Q:CODE="DONE"  D
"RTN","EC2P145",15,0)
 .S NAME=$P(CODE,U)
"RTN","EC2P145",16,0)
 .S NUM=$$FIND1^DIC(723,,"X",NAME,"B")
"RTN","EC2P145",17,0)
 .I NUM D MES^XPDUTL("Medical Specialty: "_NAME_" already exists.") Q
"RTN","EC2P145",18,0)
 .K DO
"RTN","EC2P145",19,0)
 .S DIC="^ECC(723,"
"RTN","EC2P145",20,0)
 .S DIC(0)=""
"RTN","EC2P145",21,0)
 .S X=NAME
"RTN","EC2P145",22,0)
 .D FILE^DICN
"RTN","EC2P145",23,0)
 .D MES^XPDUTL("Medical Specialty: "_NAME_" was "_$S(Y:"",1:"NOT ")_"added.")
"RTN","EC2P145",24,0)
 .Q
"RTN","EC2P145",25,0)
 Q
"RTN","EC2P145",26,0)
 ;
"RTN","EC2P145",27,0)
CHKLOC ;Check "LOC" index against actual names and report differences
"RTN","EC2P145",28,0)
 N NAME,REC,CHG,DEL,NEWNM
"RTN","EC2P145",29,0)
 S NAME="" F  S NAME=$O(^DIC(4,"LOC",NAME)) Q:NAME=""  D
"RTN","EC2P145",30,0)
 .S REC=0 F  S REC=$O(^DIC(4,"LOC",NAME,REC)) Q:'+REC  D
"RTN","EC2P145",31,0)
 ..I '$D(^DIC(4,REC)) S DEL(NAME,REC)="" Q
"RTN","EC2P145",32,0)
 ..S NEWNM=$P($G(^DIC(4,REC,0)),U) ;Current name of location
"RTN","EC2P145",33,0)
 ..I NEWNM'=NAME S CHG(NAME,REC)=NEWNM ;Note name change
"RTN","EC2P145",34,0)
 D MAIL
"RTN","EC2P145",35,0)
 Q
"RTN","EC2P145",36,0)
 ;
"RTN","EC2P145",37,0)
DELLOC ;Fix "LOC" table in file 4
"RTN","EC2P145",38,0)
 N DIK
"RTN","EC2P145",39,0)
 D BMES^XPDUTL("Deleting 'LOC' cross-reference in file 4...")
"RTN","EC2P145",40,0)
 K ^DIC(4,"LOC") ;One-time IA 6723 allows for this deletion
"RTN","EC2P145",41,0)
 D MES^XPDUTL("Done")
"RTN","EC2P145",42,0)
 D BMES^XPDUTL("Rebuilding 'LOC' cross-reference in file 4")
"RTN","EC2P145",43,0)
 S DIK="^DIC(4,",DIK(1)=720 D ENALL^DIK
"RTN","EC2P145",44,0)
 D MES^XPDUTL("Done")
"RTN","EC2P145",45,0)
 Q
"RTN","EC2P145",46,0)
 ;
"RTN","EC2P145",47,0)
GHOST ;Finds DSS units that are missing their status.  Missing status causes unit to appear in some lists, but not others, like a "ghost"
"RTN","EC2P145",48,0)
 N NODE,GHOST,DSSIEN
"RTN","EC2P145",49,0)
 D BMES^XPDUTL("Checking DSS Units for correct setup...")
"RTN","EC2P145",50,0)
 S DSSIEN=0 F  S DSSIEN=$O(^ECD(DSSIEN)) Q:'+DSSIEN  D
"RTN","EC2P145",51,0)
 .S NODE=$G(^ECD(DSSIEN,0)) Q:NODE=""
"RTN","EC2P145",52,0)
 .I $P(NODE,U,6)=""&($P(NODE,U,8)="") D
"RTN","EC2P145",53,0)
 ..I $P(NODE,U)=$$GET1^DIQ(509850.8,"1,",727.8251)!($P(NODE,U)=$$GET1^DIQ(509850.8,"1,",727.8252)) Q  ;Don't update audiology and speech pathology DSS units
"RTN","EC2P145",54,0)
 ..S GHOST($P(NODE,U))=DSSIEN
"RTN","EC2P145",55,0)
 ..S $P(^ECD(DSSIEN,0),U,6)=1 ;Set status to inactive
"RTN","EC2P145",56,0)
 ..S $P(^ECD(DSSIEN,0),U,8)=1 ;Set 'use in event capture' to 1 (yes)
"RTN","EC2P145",57,0)
 ..Q
"RTN","EC2P145",58,0)
 .Q
"RTN","EC2P145",59,0)
 D BMES^XPDUTL("Done")
"RTN","EC2P145",60,0)
 D MAIL2
"RTN","EC2P145",61,0)
 Q
"RTN","EC2P145",62,0)
 ;
"RTN","EC2P145",63,0)
MAIL ;Send email with results to holders of the ECMGR key
"RTN","EC2P145",64,0)
 N XMSUB,XMTEXT,XMDUZ,XMY,XMZ,CNT,DIFROM,ECTEXT,NUM,NAME
"RTN","EC2P145",65,0)
 S XMDUZ="PATCH EC*2*145 POST-INSTALL"
"RTN","EC2P145",66,0)
 D GETXMY("ECMGR",.XMY)
"RTN","EC2P145",67,0)
 S CNT=1
"RTN","EC2P145",68,0)
 S ECTEXT(CNT)="A review of Event Capture Location names has completed.",CNT=CNT+1,ECTEXT(CNT)="Event Capture Location names were checked to make sure they are using the",CNT=CNT+1
"RTN","EC2P145",69,0)
 S ECTEXT(CNT)="correct name as found in the INSTITUTION file (#4).",CNT=CNT+1
"RTN","EC2P145",70,0)
 S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",71,0)
 I '$D(CHG),'$D(DEL) S ECTEXT(CNT)="No differences were found between your Event Capture Locations and the",CNT=CNT+1,ECTEXT(CNT)="INSTITUTION file.  No further action is required.",CNT=CNT+1
"RTN","EC2P145",72,0)
 I $D(CHG)!($D(DEL)) D
"RTN","EC2P145",73,0)
 .S ECTEXT(CNT)="Changes to your Event Capture Location names were required.",CNT=CNT+1
"RTN","EC2P145",74,0)
 .S ECTEXT(CNT)="Entries are identified by NAME(IEN), where IEN is the record number in the",CNT=CNT+1
"RTN","EC2P145",75,0)
 .S ECTEXT(CNT)="INSTITUTION file (file #4).",CNT=CNT+1
"RTN","EC2P145",76,0)
 .S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",77,0)
 I $D(CHG) D  S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",78,0)
 .S ECTEXT(CNT)="The following locations had their name updated:",CNT=CNT+1,ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",79,0)
 .S NAME="" F  S NAME=$O(CHG(NAME)) Q:NAME=""  S NUM=0 F  S NUM=$O(CHG(NAME,NUM)) Q:'+NUM  D
"RTN","EC2P145",80,0)
 ..S ECTEXT(CNT)=NAME_" ("_NUM_") is now "_$G(CHG(NAME,NUM)),CNT=CNT+1
"RTN","EC2P145",81,0)
 I $D(DEL) D  S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",82,0)
 .S ECTEXT(CNT)="The following locations are no longer available:",CNT=CNT+1,ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",83,0)
 .S NAME="" F  S NAME=$O(DEL(NAME)) Q:NAME=""  S NUM=0 F  S NUM=$O(DEL(NAME,NUM)) Q:'+NUM  S ECTEXT(CNT)=NAME_" ("_NUM_") is no longer available.",CNT=CNT+1
"RTN","EC2P145",84,0)
 I $D(CHG)!($D(DEL)) D
"RTN","EC2P145",85,0)
 .S ECTEXT(CNT)="These updates were done to get your Event Capture Location names",CNT=CNT+1,ECTEXT(CNT)="back in sync with the INSTITUTION file.  You should review your Event",CNT=CNT+1
"RTN","EC2P145",86,0)
 .S ECTEXT(CNT)="Capture Locations to make sure that locations identified for use in Event",CNT=CNT+1,ECTEXT(CNT)="Capture are correct.  No other action is required."
"RTN","EC2P145",87,0)
 S XMTEXT="ECTEXT(",XMSUB="Event Capture Location review"
"RTN","EC2P145",88,0)
 D ^XMD
"RTN","EC2P145",89,0)
 Q
"RTN","EC2P145",90,0)
 ;
"RTN","EC2P145",91,0)
MAIL2 ;Send email with results of DSS unit review to ECMGR key holders
"RTN","EC2P145",92,0)
 N XMSUB,XMTEXT,XMDUZ,XMY,XMZ,CNT,DIFROM,ECTEXT,NAME
"RTN","EC2P145",93,0)
 S XMDUZ="PATCH EC*2*145 POST-INSTALL"
"RTN","EC2P145",94,0)
 D GETXMY("ECMGR",.XMY)
"RTN","EC2P145",95,0)
 S CNT=1
"RTN","EC2P145",96,0)
 S ECTEXT(CNT)="A review of Event Capture DSS Units has completed.",CNT=CNT+1,ECTEXT(CNT)="DSS units were reviewed to ensure they're correctly set up for use",CNT=CNT+1
"RTN","EC2P145",97,0)
 S ECTEXT(CNT)="in the Event Capture program.",CNT=CNT+1
"RTN","EC2P145",98,0)
 S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",99,0)
 I '$D(GHOST) S ECTEXT(CNT)="All DSS units are correctly set up.",CNT=CNT+1,ECTEXT(CNT)="",CNT=CNT+1,ECTEXT(CNT)="No further action is required.",CNT=CNT+1
"RTN","EC2P145",100,0)
 I $D(GHOST) D
"RTN","EC2P145",101,0)
 .S ECTEXT(CNT)="Changes to your DSS Units were required.",CNT=CNT+1,ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",102,0)
 .S ECTEXT(CNT)="Entries are identified by NAME(IEN), where IEN is the record number in the",CNT=CNT+1
"RTN","EC2P145",103,0)
 .S ECTEXT(CNT)="DSS UNIT file (#724).",CNT=CNT+1
"RTN","EC2P145",104,0)
 .S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",105,0)
 .S ECTEXT(CNT)="The following DSS units were updated:",CNT=CNT+1,ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",106,0)
 .S NAME="" F  S NAME=$O(GHOST(NAME)) Q:NAME=""  S ECTEXT(CNT)=NAME_" ("_GHOST(NAME)_")",CNT=CNT+1
"RTN","EC2P145",107,0)
 .S ECTEXT(CNT)="",CNT=CNT+1
"RTN","EC2P145",108,0)
 .S ECTEXT(CNT)="Please review the DSS units listed above to ensure they're now inactive."
"RTN","EC2P145",109,0)
 S XMTEXT="ECTEXT(",XMSUB="DSS Unit review"
"RTN","EC2P145",110,0)
 D ^XMD
"RTN","EC2P145",111,0)
 Q
"RTN","EC2P145",112,0)
 ;
"RTN","EC2P145",113,0)
GETXMY(KEY,XMY) ;Put holders of the KEY into the XMY array to be recipients of the email
"RTN","EC2P145",114,0)
 I $G(KEY)'="" M XMY=^XUSEC(KEY)
"RTN","EC2P145",115,0)
 S:$G(DUZ) XMY(DUZ)="" ;Make sure there's at least one recipient
"RTN","EC2P145",116,0)
 Q
"RTN","EC2P145",117,0)
 ;
"RTN","EC2P145",118,0)
SERVICE ;List of new entries for the Medical Specialty file
"RTN","EC2P145",119,0)
 ;;VOCATIONAL REHABILITATION
"RTN","EC2P145",120,0)
 ;;DONE
"RTN","ECRECER")
0^4^B40589127^B38346891
"RTN","ECRECER",1,0)
ECRECER ;ALB/DAN-Event Capture Encounter Report ;9/26/18  13:24
"RTN","ECRECER",2,0)
 ;;2.0;EVENT CAPTURE;**112,122,126,139,145**;8 May 96;Build 6
"RTN","ECRECER",3,0)
 ;
"RTN","ECRECER",4,0)
STRPT ;
"RTN","ECRECER",5,0)
 K ^TMP("ECRECER",$J),^TMP($J,"ECRPT")
"RTN","ECRECER",6,0)
 D GETREC
"RTN","ECRECER",7,0)
 I ECPTYP="E" D EXPORT Q
"RTN","ECRECER",8,0)
 U IO
"RTN","ECRECER",9,0)
 D PRINT
"RTN","ECRECER",10,0)
 Q
"RTN","ECRECER",11,0)
 ;
"RTN","ECRECER",12,0)
GETREC ;Find records to put on report
"RTN","ECRECER",13,0)
 N ECLI,ECDFN,ECD,ECDT,ECIEN,ECPROV,ECPATN,ECSSN,ECVOL,ECARR,ECIO,CLNODE ;122,126
"RTN","ECRECER",14,0)
 S ECLI=0 F  S ECLI=$O(ECLOC1(ECLI)) Q:'+ECLI  D
"RTN","ECRECER",15,0)
 .S ECDFN=0 K ^TMP("UNI",$J) ;126
"RTN","ECRECER",16,0)
 .F  S ECDFN=+$O(^ECH("ADT",ECLI,ECDFN)) Q:'ECDFN  D
"RTN","ECRECER",17,0)
 ..S ECD=0
"RTN","ECRECER",18,0)
 ..F  S ECD=$O(ECDSSU(ECD)) Q:'ECD  D
"RTN","ECRECER",19,0)
 ...S ECDT=ECSD-.1
"RTN","ECRECER",20,0)
 ...F  S ECDT=+$O(^ECH("ADT",ECLI,ECDFN,ECD,ECDT)) Q:'ECDT!(ECDT>(ECED_.24))  D
"RTN","ECRECER",21,0)
 ....S ECIEN=0,ECVOL=0 ;145 Reset volume total
"RTN","ECRECER",22,0)
 ....F  S ECIEN=+$O(^ECH("ADT",ECLI,ECDFN,ECD,ECDT,ECIEN)) Q:'ECIEN  D
"RTN","ECRECER",23,0)
 .....I '+$G(^TMP("UNI",$J,ECDFN,ECDT,ECD)) S ^TMP("UNI",$J,ECDFN,ECDT,ECD)=ECIEN ;145 Store 1st IEN in this group
"RTN","ECRECER",24,0)
 .....S ECVOL=ECVOL+$$GET1^DIQ(721,ECIEN,9) ;145 add to total procedure volume
"RTN","ECRECER",25,0)
 ....S ECIEN=^TMP("UNI",$J,ECDFN,ECDT,ECD) ;145 Retrieve 1st record in group
"RTN","ECRECER",26,0)
 ....S ECPROV=$$GETPROV^ECRDSSA(ECIEN)
"RTN","ECRECER",27,0)
 ....K ECARR D GETS^DIQ(721,ECIEN,"1;26;29","IE","ECARR","ECERROR") ;122,145
"RTN","ECRECER",28,0)
 ....S ECIO=ECARR(721,ECIEN_",",29,"I")
"RTN","ECRECER",29,0)
 ....S ECPATN=ECARR(721,ECIEN_",",1,"E")_"~"_ECDFN
"RTN","ECRECER",30,0)
 ....S ECSSN=$$GETSSN^ECRDSSA(ECIEN)
"RTN","ECRECER",31,0)
 ....S CLNODE=$G(^ECX(728.44,+$G(ECARR(721,ECIEN_",",26,"I")),0)) ;122
"RTN","ECRECER",32,0)
 ....I $G(ECSORT)="P" D
"RTN","ECRECER",33,0)
 .....S ^TMP("ECRECER",$J,ECLOC1(ECLI),ECPATN,ECPROV,ECIEN)=ECIO_U_ECDT_U_ECD_U_ECVOL_U_ECSSN_U_$G(ECARR(721,ECIEN_",",26,"E"))_U_$P(CLNODE,U,2)_U_$P(CLNODE,U,3)_U_$P($G(^ECX(728.441,+$P(CLNODE,U,8),0)),U)_U_$P(CLNODE,U,14) ;122,139
"RTN","ECRECER",34,0)
 ....I $G(ECSORT)="D" D
"RTN","ECRECER",35,0)
 .....S ^TMP("ECRECER",$J,ECLOC1(ECLI),ECPROV,ECPATN,ECIEN)=ECIO_U_ECDT_U_ECD_U_ECVOL_U_ECSSN_U_$G(ECARR(721,ECIEN_",",26,"E"))_U_$P(CLNODE,U,2)_U_$P(CLNODE,U,3)_U_$P($G(^ECX(728.441,+$P(CLNODE,U,8),0)),U)_U_$P(CLNODE,U,14) ;122,139
"RTN","ECRECER",36,0)
 Q
"RTN","ECRECER",37,0)
 ;
"RTN","ECRECER",38,0)
EXPORT ;Put in delimited format for exporting
"RTN","ECRECER",39,0)
 N CNT,LOC,PATN,PROV,IEN,DATA,MCA ;139
"RTN","ECRECER",40,0)
 Q:'$D(^TMP("ECRECER",$J))
"RTN","ECRECER",41,0)
 S CNT=1,^TMP($J,"ECRPT",CNT)="LOCATION^PATIENT^SSN^I/O^DATE/TIME^PROVIDER #1^DSS UNIT^TOTAL PROCEDURE VOLUME^CLINIC^STOP CODE^CREDIT STOP CODE^CHAR4 CODE^MCA LABOR CODE" ;122,139,145
"RTN","ECRECER",42,0)
 I ECSORT="P" D
"RTN","ECRECER",43,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D
"RTN","ECRECER",44,0)
 ..S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PATN)) Q:PATN=""  D
"RTN","ECRECER",45,0)
 ...S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PATN,PROV)) Q:PROV=""  D
"RTN","ECRECER",46,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PATN,PROV,IEN)) Q:'+IEN  D
"RTN","ECRECER",47,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",48,0)
 .....S MCA=$$GET1^DIQ(728.442,$P(DATA,U,10),.01) ;139
"RTN","ECRECER",49,0)
 .....S CNT=CNT+1 ;139
"RTN","ECRECER",50,0)
 .....S ^TMP($J,"ECRPT",CNT)=LOC_U_$P(PATN,"~")_U_$P(DATA,U,5)_U_$P(DATA,U,1)_U_$$FMTE^XLFDT($P(DATA,U,2),2)_U_PROV_U_ECDSSU($P(DATA,U,3))_U_$P(DATA,U,4)_U_$P(DATA,U,6)_U_$P(DATA,U,7)_U_$P(DATA,U,8)_U_$P(DATA,U,9)_U_MCA ;122,139
"RTN","ECRECER",51,0)
 I ECSORT="D" D
"RTN","ECRECER",52,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D
"RTN","ECRECER",53,0)
 ..S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PROV)) Q:PROV=""  D
"RTN","ECRECER",54,0)
 ...S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN)) Q:PATN=""  D
"RTN","ECRECER",55,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN,IEN)) Q:'+IEN  D
"RTN","ECRECER",56,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",57,0)
 .....S MCA=$$GET1^DIQ(728.442,$P(DATA,U,10),.01) ;139
"RTN","ECRECER",58,0)
 .....S CNT=CNT+1 ;139
"RTN","ECRECER",59,0)
 .....S ^TMP($J,"ECRPT",CNT)=LOC_U_$P(PATN,"~")_U_$P(DATA,U,5)_U_$P(DATA,U,1)_U_$$FMTE^XLFDT($P(DATA,U,2),2)_U_PROV_U_ECDSSU($P(DATA,U,3))_U_$P(DATA,U,4)_U_$P(DATA,U,6)_U_$P(DATA,U,7)_U_$P(DATA,U,8)_U_$P(DATA,U,9)_U_MCA ;122,139
"RTN","ECRECER",60,0)
 Q
"RTN","ECRECER",61,0)
 ;
"RTN","ECRECER",62,0)
PRINT ;Display results
"RTN","ECRECER",63,0)
 N LOC,PATN,PROV,IEN,DATA,PAGE,PTOT,PROTOT
"RTN","ECRECER",64,0)
 I '$D(^TMP("ECRECER",$J)) S LOC="NONE" D HDR W !,"No data found"
"RTN","ECRECER",65,0)
 S PAGE=0
"RTN","ECRECER",66,0)
 I ECSORT="P" D
"RTN","ECRECER",67,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D HDR D
"RTN","ECRECER",68,0)
 ..S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PATN)) Q:PATN=""  K PTOT,PROTOT D  D SUB
"RTN","ECRECER",69,0)
 ...S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PATN,PROV)) Q:PROV=""  D
"RTN","ECRECER",70,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PATN,PROV,IEN)) Q:'+IEN  D
"RTN","ECRECER",71,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",72,0)
 .....W !,$P(PATN,"~"),?32,$P(DATA,U,5),?38,$P(DATA,U,1),?43,$$FMTE^XLFDT($P(DATA,U,2),2),?59,PROV,?91,ECDSSU($P(DATA,U,3)),?123,$P(DATA,U,4)
"RTN","ECRECER",73,0)
 .....W !,?4,$P(DATA,U,6),?36,$P(DATA,U,7),?47,$P(DATA,U,8),?60,$P(DATA,U,9),?68,$$GET1^DIQ(728.442,$P(DATA,U,10),.01) ;122,139
"RTN","ECRECER",74,0)
 .....S PTOT=+$G(PTOT)+1,PROTOT(PROV)=+$G(PROTOT(PROV))+1
"RTN","ECRECER",75,0)
 I ECSORT="D" D
"RTN","ECRECER",76,0)
 .S LOC="" F  S LOC=$O(^TMP("ECRECER",$J,LOC)) Q:LOC=""  D HDR D
"RTN","ECRECER",77,0)
 ..S PROV="" F  S PROV=$O(^TMP("ECRECER",$J,LOC,PROV)) Q:PROV=""  K PROTOT,PTOT D  D SUB
"RTN","ECRECER",78,0)
 ...S PATN="" F  S PATN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN)) Q:PATN=""  D
"RTN","ECRECER",79,0)
 ....S IEN=0 F  S IEN=$O(^TMP("ECRECER",$J,LOC,PROV,PATN,IEN)) Q:'+IEN  D
"RTN","ECRECER",80,0)
 .....S DATA=^(IEN) ;Naked reference to above line
"RTN","ECRECER",81,0)
 .....W !,$P(PATN,"~"),?32,$P(DATA,U,5),?38,$P(DATA,U,1),?43,$$FMTE^XLFDT($P(DATA,U,2),2),?59,PROV,?91,ECDSSU($P(DATA,U,3)),?123,$P(DATA,U,4)
"RTN","ECRECER",82,0)
 .....W !,?4,$P(DATA,U,6),?36,$P(DATA,U,7),?47,$P(DATA,U,8),?60,$P(DATA,U,9),?68,$$GET1^DIQ(728.442,$P(DATA,U,10),.01) ;122,139
"RTN","ECRECER",83,0)
 .....S PTOT(PATN)=+$G(PTOT(PATN))+1,PROTOT=+$G(PROTOT)+1
"RTN","ECRECER",84,0)
 Q
"RTN","ECRECER",85,0)
HDR ;Print Header
"RTN","ECRECER",86,0)
 N SORT
"RTN","ECRECER",87,0)
 W @IOF
"RTN","ECRECER",88,0)
 S PAGE=+$G(PAGE)+1
"RTN","ECRECER",89,0)
 W ?51,"Event Capture Encounters Report",?123,"Page: ",PAGE
"RTN","ECRECER",90,0)
 W !,?(132-(12+$L(LOC))\2),"For Location ",LOC
"RTN","ECRECER",91,0)
 W !,?47,"From ",$$FMTE^XLFDT(ECSD)," through ",$$FMTE^XLFDT(ECED)
"RTN","ECRECER",92,0)
 S SORT=$S(ECSORT="P":"Patient Name",1:"Provider")
"RTN","ECRECER",93,0)
 W !,?(132-(9+$L(SORT))\2),"Sorted by ",SORT,!
"RTN","ECRECER",94,0)
 W !,"Patient",?32,"SSN",?38,"I/O",?43,"Date/Time",?59,"Provider #1",?91,"DSS Unit",?123,"Total" ;145
"RTN","ECRECER",95,0)
 W !,?4,"Clinic",?36,"Stop Code",?47,"Credit Stop",?60,"CHAR4",?68,"MCA Labor Code",?123,"Proc Vol" ;122,139,145
"RTN","ECRECER",96,0)
 W !,$$REPEAT^XLFSTR("-",132)
"RTN","ECRECER",97,0)
 Q
"RTN","ECRECER",98,0)
SUB ;Print totals
"RTN","ECRECER",99,0)
 N ARR,DISP
"RTN","ECRECER",100,0)
 I ECSORT="P" D
"RTN","ECRECER",101,0)
 .W !
"RTN","ECRECER",102,0)
 .S ARR="" F  S ARR=$O(PROTOT(ARR)) Q:ARR=""  S DISP="Encounter subtotal for provider "_ARR W !,$J(DISP,128),$J(PROTOT(ARR),4) ;145
"RTN","ECRECER",103,0)
 .W !,?128,"===="
"RTN","ECRECER",104,0)
 .S DISP="Encounter total for patient "_$P(PATN,"~") W !,$J(DISP,128),$J(PTOT,4),! ;145
"RTN","ECRECER",105,0)
 I ECSORT="D" D
"RTN","ECRECER",106,0)
 .W !
"RTN","ECRECER",107,0)
 .S ARR="" F  S ARR=$O(PTOT(ARR)) Q:ARR=""  S DISP="Encounter subtotal for patient "_$P(ARR,"~") W !,$J(DISP,128),$J(PTOT(ARR),4) ;145
"RTN","ECRECER",108,0)
 .W !,?128,"===="
"RTN","ECRECER",109,0)
 .S DISP="Encounter total for provider "_PROV W !,$J(DISP,128),$J(PROTOT,4),! ;145
"RTN","ECRECER",110,0)
 Q
"RTN","ECRRPT")
0^5^B61567239^B61480819
"RTN","ECRRPT",1,0)
ECRRPT ;ALB/JAM - Event Capture Report RPC Broker ;10/22/18  15:17
"RTN","ECRRPT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,41,56,61,82,94,95,108,112,119,122,126,145**;8 May 96;Build 6
"RTN","ECRRPT",3,0)
 ;
"RTN","ECRRPT",4,0)
 ;119 For patch 119, added comment regarding ECPTYP being set to "E" when exporting, for those reports that are now exportable.
"RTN","ECRRPT",5,0)
REQCHK(ECV) ;Required data check
"RTN","ECRRPT",6,0)
 N I,C
"RTN","ECRRPT",7,0)
 S C=1
"RTN","ECRRPT",8,0)
 F I=1:1:$L(ECV,U) I '$D(@$P(ECV,U,I)) D
"RTN","ECRRPT",9,0)
 . S ^TMP("ECMSG",$J,C)="0^Required data missing "_$P(ECV,U,I)
"RTN","ECRRPT",10,0)
 . S C=C+1,ECERR=1
"RTN","ECRRPT",11,0)
 Q
"RTN","ECRRPT",12,0)
DATECHK(ECSD,ECED) ;Check human format date and converts to FileMan format
"RTN","ECRRPT",13,0)
 ;    Input  ECSD  - Start Date (ex. 10/9/01)
"RTN","ECRRPT",14,0)
 ;           ECED  - End Date
"RTN","ECRRPT",15,0)
 N ECI,X,Y
"RTN","ECRRPT",16,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECRRPT",17,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD),ECED=$S(ECED=-1:DT,1:ECED)
"RTN","ECRRPT",18,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED)
"RTN","ECRRPT",19,0)
 Q
"RTN","ECRRPT",20,0)
QUEUE ;Queues report to printer
"RTN","ECRRPT",21,0)
 N ZTIO,ZTDESC,ZTRTN,ZTDTH,ZTSAVE,%ZIS,I,IOP,POP
"RTN","ECRRPT",22,0)
 S IOP="Q;`"_ECDEV,%ZIS="Q" D ^%ZIS I POP D  Q
"RTN","ECRRPT",23,0)
 . S ^TMP("ECMSG",$J,1)="0^Device selection unsuccessful"
"RTN","ECRRPT",24,0)
 S ZTIO=ION,ZTDESC=ECDESC,ZTRTN=ECROU
"RTN","ECRRPT",25,0)
 S ZTDTH=$$FMTH^XLFDT(ECQDT)
"RTN","ECRRPT",26,0)
 ;D NOW^%DTC S ZTDTH=$S(%'<ECQDT:%+.0002,1:ECQDT)
"RTN","ECRRPT",27,0)
 F I=1:1:$L(ECV,U) I $D(@$P(ECV,U,I)) S ZTSAVE($P(ECV,U,I))=""
"RTN","ECRRPT",28,0)
 M ZTSAVE=ECSAVE
"RTN","ECRRPT",29,0)
 D ^%ZTLOAD,HOME^%ZIS,^%ZISC ;K IO("Q")
"RTN","ECRRPT",30,0)
 I $D(ZTSK) S ^TMP("ECMSG",$J)="1^Report queued. Task #"_ZTSK Q
"RTN","ECRRPT",31,0)
 S ^TMP("ECMSG",$J)="0^Task Rejected"
"RTN","ECRRPT",32,0)
 Q
"RTN","ECRRPT",33,0)
 ;
"RTN","ECRRPT",34,0)
ECPAT ;Patient Summary Report for RPC Call
"RTN","ECRRPT",35,0)
 ;     Variables passed in
"RTN","ECRRPT",36,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",37,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",38,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",39,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",40,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",41,0)
 ;                or (E)xport
"RTN","ECRRPT",42,0)
 ;
"RTN","ECRRPT",43,0)
 ;     Variable return
"RTN","ECRRPT",44,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",45,0)
 N ECDATE,ECPAT,ECV,DIC,X,Y,ECROU,ECDESC
"RTN","ECRRPT",46,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",47,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",48,0)
 ;EC*2.0*108 - Convert Date/Time to Date only
"RTN","ECRRPT",49,0)
 S ECSD=$P(ECSD,"."),ECED=$P(ECED,".")
"RTN","ECRRPT",50,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",51,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",52,0)
 I $E($G(ECRY))'="Y" K ECRY
"RTN","ECRRPT",53,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",54,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED^ECRY",ECROU="SUM^ECPAT"
"RTN","ECRRPT",55,0)
 . S ECDESC="EVENT CAPTURE PATIENT SUMMARY"
"RTN","ECRRPT",56,0)
 . D QUEUE
"RTN","ECRRPT",57,0)
 D SUM^ECPAT
"RTN","ECRRPT",58,0)
 Q
"RTN","ECRRPT",59,0)
ECRDSSU ;DSS Unit Workload Summary Report
"RTN","ECRRPT",60,0)
 ;     Variables passed in
"RTN","ECRRPT",61,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",62,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",63,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",64,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",65,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",66,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",67,0)
 ;                or (E)xport
"RTN","ECRRPT",68,0)
 ;
"RTN","ECRRPT",69,0)
 ;     Variable return
"RTN","ECRRPT",70,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",71,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",72,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",73,0)
 S ECV="ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",74,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",75,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",76,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",77,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",78,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",79,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",80,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",81,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",82,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",83,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",84,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",85,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",86,0)
 . S ECV="ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSU"
"RTN","ECRRPT",87,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",88,0)
 . S ECDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRRPT",89,0)
 . D QUEUE
"RTN","ECRRPT",90,0)
 D STRPT^ECRDSSU
"RTN","ECRRPT",91,0)
 Q
"RTN","ECRRPT",92,0)
PROSUM ;Provider (1-7) Summary Report for RPC Call 119-Updated comment to reflect 7 instead of 3
"RTN","ECRRPT",93,0)
 ;     Variables passed in
"RTN","ECRRPT",94,0)
 ;       ECU    - Provider IEN for file #200
"RTN","ECRRPT",95,0)
 ;       ECL0   - All, 1, or many locations
"RTN","ECRRPT",96,0)
 ;       ECD0   - All, 1, or many DSS units
"RTN","ECRRPT",97,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",98,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",99,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",100,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",101,0)
 ;                or (E)xport
"RTN","ECRRPT",102,0)
 ;
"RTN","ECRRPT",103,0)
 ;     Variable return
"RTN","ECRRPT",104,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",105,0)
 N ECV,ECDATE,ECUN,ECROU,ECDESC,DIC,X,Y,ECSAVE,ECSLOC,ECSUNIT,NUM ;126
"RTN","ECRRPT",106,0)
 S ECV="ECU^ECSD^ECED^ECL0^ECD0" D REQCHK(ECV) I ECERR Q  ;126
"RTN","ECRRPT",107,0)
 S DIC=200,DIC(0)="QNZX",X=ECU D ^DIC D:Y<0  Q:Y<0  S ECUN=$P(Y,U,2)
"RTN","ECRRPT",108,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",109,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",110,0)
 I ECL0="ALL" S ECSLOC="ALL" ;126
"RTN","ECRRPT",111,0)
 I ECL0'="ALL" F NUM=0:1 Q:'$D(@("ECL"_NUM))  S ECSLOC(@("ECL"_NUM))="" ;126
"RTN","ECRRPT",112,0)
 I ECD0="ALL" S ECSUNIT="ALL" ;126
"RTN","ECRRPT",113,0)
 I ECD0'="ALL" F NUM=0:1 Q:'$D(@("ECD"_NUM))  S ECSUNIT(@("ECD"_NUM))="" ;126
"RTN","ECRRPT",114,0)
 I ECRY'="Y" K ECRY
"RTN","ECRRPT",115,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",116,0)
 . S ECV="ECU^ECUN^ECDATE^ECSD^ECED^ECRY"
"RTN","ECRRPT",117,0)
 . S ECSAVE("ECSLOC*")="",ECSAVE("ECSUNIT*")="" ;126
"RTN","ECRRPT",118,0)
 . S ECROU="EN^ECPRSUM1",ECDESC="Event Capture Provider Summary"
"RTN","ECRRPT",119,0)
 . D QUEUE
"RTN","ECRRPT",120,0)
 D EN^ECPRSUM1
"RTN","ECRRPT",121,0)
 Q
"RTN","ECRRPT",122,0)
ECPROV ;Provider Summary Report for RPC Call
"RTN","ECRRPT",123,0)
 ;     Variables passed in
"RTN","ECRRPT",124,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",125,0)
 ;       ECD    - DSS Unit to report (1 or ALL)
"RTN","ECRRPT",126,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",127,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",128,0)
 ;       ECRY   - Print Procedure Reason (optional)
"RTN","ECRRPT",129,0)
 ;       ECDUZ  - User DUZ (ien in #200)
"RTN","ECRRPT",130,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",131,0)
 ;                or (E)xport
"RTN","ECRRPT",132,0)
 ;
"RTN","ECRRPT",133,0)
 ;     Variable return
"RTN","ECRRPT",134,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",135,0)
 N ECV,ECDN,ECDATE,ECLN,ECSAVE,ECDESC,ECROU,DIC,X,Y,CNT,UNIT
"RTN","ECRRPT",136,0)
 S ECDN="ALL",ECV="ECL^ECD^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",137,0)
 I ECL'="ALL" D  I ECERR Q
"RTN","ECRRPT",138,0)
 . ;The line below was changed by VMP for NOIS ANN-1003-42305
"RTN","ECRRPT",139,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC D:Y<0  Q:Y<0  S ECLN=$P(Y,U,2)
"RTN","ECRRPT",140,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",141,0)
 I ECD'="ALL" K DIC D  I ECERR Q
"RTN","ECRRPT",142,0)
 . S DIC=724,DIC(0)="QNZX",X=ECD D ^DIC D:Y<0  Q:Y<0  S ECDN=$P(Y,U,2) ;145
"RTN","ECRRPT",143,0)
 . . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT",144,0)
 I ECD="ALL",'$D(^XUSEC("ECALLU",ECDUZ)) D
"RTN","ECRRPT",145,0)
 . S (ECD,ECDN)="SOME",(X,CNT)=0
"RTN","ECRRPT",146,0)
 . F  S X=$O(^VA(200,ECDUZ,"EC",X)) Q:'X  D
"RTN","ECRRPT",147,0)
 . . S CNT=CNT+1,UNIT=$P(^VA(200,ECDUZ,"EC",X,0),"^")
"RTN","ECRRPT",148,0)
 . . S UNIT(CNT)=UNIT_"^"_$P(^ECD(UNIT,0),"^")
"RTN","ECRRPT",149,0)
 ;I $E($G(ECRY))'="Y" K ECRY ;112 Removed check for ECRY as reasons always print - remove comment and next line to restore reason check
"RTN","ECRRPT",150,0)
 S ECRY="Y" ;112 Reasons always print
"RTN","ECRRPT",151,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",152,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999 S:'$D(UNIT) UNIT=""
"RTN","ECRRPT",153,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",154,0)
 . S ECV="ECDATE^ECSD^ECED^ECRY",ECROU="START^ECPROV2"
"RTN","ECRRPT",155,0)
 . S (ECSAVE("ECL*"),ECSAVE("ECD*"),ECSAVE("UNIT*"))=""
"RTN","ECRRPT",156,0)
 . S ECDESC="EVENT CAPTURE PROVIDER SUMMARY"
"RTN","ECRRPT",157,0)
 . D QUEUE
"RTN","ECRRPT",158,0)
 U IO D START^ECPROV2
"RTN","ECRRPT",159,0)
 Q
"RTN","ECRRPT",160,0)
ECOSSUM ;Ordering Section Summary Report for RPC Call
"RTN","ECRRPT",161,0)
 ;     Variables passed in
"RTN","ECRRPT",162,0)
 ;       ECOS   - Ordering Section
"RTN","ECRRPT",163,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",164,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",165,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",166,0)
 ;       ECD    - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",167,0)
 ;       ECDUZ  - User ien (#200)
"RTN","ECRRPT",168,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",169,0)
 ;                or (E)xport
"RTN","ECRRPT",170,0)
 ;
"RTN","ECRRPT",171,0)
 ;     Variable return
"RTN","ECRRPT",172,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",173,0)
 N ECV,ECI,ECOSN,ECLOC,ECDSSU,ECDATE,ECNT,ECSAVE,ECROU,ECDESC,DIC,X,Y
"RTN","ECRRPT",174,0)
 S ECV="ECOS^ECL^ECD0^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",175,0)
 S DIC=723,DIC(0)="QNMZX",X=ECOS D ^DIC D:Y<0  Q:Y<0  S ECOSN=$P(Y,U,2)
"RTN","ECRRPT",176,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Ordering Section.",ECERR=1
"RTN","ECRRPT",177,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1 Q
"RTN","ECRRPT",178,0)
 . K DIC I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",179,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",180,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",181,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",182,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",183,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",184,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q  ;145
"RTN","ECRRPT",185,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",186,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",187,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",188,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",189,0)
 . S ECV="ECOS^ECSD^ECED^ECOSN",ECROU="START^ECOSSUM"
"RTN","ECRRPT",190,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",191,0)
 . S ECDESC="EC Ordering Section Summary"
"RTN","ECRRPT",192,0)
 . D QUEUE
"RTN","ECRRPT",193,0)
 D START^ECOSSUM
"RTN","ECRRPT",194,0)
 Q
"RTN","ECRRPT",195,0)
ECPCER ;PCE Data Summary Report for RPC Call
"RTN","ECRRPT",196,0)
 ;     Variables passed in
"RTN","ECRRPT",197,0)
 ;       ECDFN  - Patient IEN for file #2
"RTN","ECRRPT",198,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",199,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",200,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",201,0)
 ;                or (E)xport
"RTN","ECRRPT",202,0)
 ;
"RTN","ECRRPT",203,0)
 ;     Variable return
"RTN","ECRRPT",204,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",205,0)
 N ECV,ECDATE,ECPAT,ECROU,ECDESC,X,DIC,Y
"RTN","ECRRPT",206,0)
 S ECV="ECDFN^ECSD^ECED" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",207,0)
 S DIC=2,DIC(0)="QNMZX",X=ECDFN D ^DIC D:Y<0  Q:Y<0  S ECPAT=$P(Y,U,2)
"RTN","ECRRPT",208,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Provider."
"RTN","ECRRPT",209,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",210,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT",211,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",212,0)
 . S ECV="ECDFN^ECPAT^ECDATE^ECSD^ECED",ECROU="SUM^ECPCER"
"RTN","ECRRPT",213,0)
 . S ECDESC="ECS/PCE PATIENT SUMMARY"
"RTN","ECRRPT",214,0)
 . D QUEUE
"RTN","ECRRPT",215,0)
 D SUM^ECPCER
"RTN","ECRRPT",216,0)
 Q
"RTN","ECRRPT",217,0)
ECRDSSA ;DSS Unit Activity Report
"RTN","ECRRPT",218,0)
 ;     Variables passed in
"RTN","ECRRPT",219,0)
 ;       ECL    - Location to report (1 or ALL)
"RTN","ECRRPT",220,0)
 ;       ECD0   - DSS Unit to report (1, some or ALL)
"RTN","ECRRPT",221,0)
 ;       ECSORT  - Sort type(P,S or R)
"RTN","ECRRPT",222,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT",223,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT",224,0)
 ;       ECDUZ  - User IEN from file (#200)
"RTN","ECRRPT",225,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT",226,0)
 ;                or (E)xport
"RTN","ECRRPT",227,0)
 ;
"RTN","ECRRPT",228,0)
 ;     Variable return
"RTN","ECRRPT",229,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT",230,0)
 N ECLOC,ECDSSU,ECV,ECI,ECSTDT,ECENDDT,ECKEY,ECROU,ECSAVE,ECDESC,ECNT
"RTN","ECRRPT",231,0)
 N ECDATE,ECX,DIC,X,Y
"RTN","ECRRPT",232,0)
 S ECV="ECL^ECD0^ECSORT^ECSD^ECED^ECDUZ" D REQCHK(ECV) I ECERR Q
"RTN","ECRRPT",233,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT",234,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT",235,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT",236,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT",237,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT",238,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT",239,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT",240,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT",241,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT",242,0)
 D DATECHK(.ECSD,.ECED)
"RTN","ECRRPT",243,0)
 S ECSTDT=ECSD-.0001,ECENDDT=ECED+.9999
"RTN","ECRRPT",244,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT",245,0)
 . S ECV="ECSORT^ECDATE^ECSTDT^ECENDDT",ECROU="STRPT^ECRDSSA"
"RTN","ECRRPT",246,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("))=""
"RTN","ECRRPT",247,0)
 . S ECDESC="DSS UNIT ACTIVITY REPORT"
"RTN","ECRRPT",248,0)
 . D QUEUE
"RTN","ECRRPT",249,0)
 D STRPT^ECRDSSA
"RTN","ECRRPT",250,0)
 Q
"RTN","ECRRPT1")
0^6^B61512971^B60357464
"RTN","ECRRPT1",1,0)
ECRRPT1 ;ALB/JAM;Event Capture Report RPC Broker ;3/7/19  14:22
"RTN","ECRRPT1",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,33,61,78,72,90,95,100,107,112,119,139,145**;8 May 96;Build 6
"RTN","ECRRPT1",3,0)
 ;
"RTN","ECRRPT1",4,0)
 ;119 Updated comments for reports to include (E)xport as a value for ECPTYP
"RTN","ECRRPT1",5,0)
ECRPRSN ;Procedure Reason Report for RPC Call
"RTN","ECRRPT1",6,0)
 ;     Variables passed in
"RTN","ECRRPT1",7,0)
 ;       ECSD     - Start Date or Report
"RTN","ECRRPT1",8,0)
 ;       ECED     - End Date or Report
"RTN","ECRRPT1",9,0)
 ;       ECL0..n  - Location to report (1,some or ALL)
"RTN","ECRRPT1",10,0)
 ;       ECD0..n  - DSS Unit to report (1,some or ALL)
"RTN","ECRRPT1",11,0)
 ;       ECRY0..n - Procedure reason (some or ALL)
"RTN","ECRRPT1",12,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",13,0)
 ;                  or (E)xport
"RTN","ECRRPT1",14,0)
 ;
"RTN","ECRRPT1",15,0)
 ;     Variable return
"RTN","ECRRPT1",16,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",17,0)
 N ECV,ECI,ECLOC,ECDSSU,ECDN,ECDATE,ECUN,ECNT,ECKEY,ECX,ECLINK,ECZ
"RTN","ECRRPT1",18,0)
 N ECROU,ECSAVE,ECDESC,ECW,DIC,X,Y,I,LIEN,ECJ
"RTN","ECRRPT1",19,0)
 S ECV="ECL0^ECD0^ECSD^ECED^ECRY0" D REQCHK^ECRRPT(ECV) I ECERR Q  ;112
"RTN","ECRRPT1",20,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",21,0)
 . D LOCARRY^ECRUTL I ECL0="ALL" Q  ;112
"RTN","ECRRPT1",22,0)
 . K ECLOC F I=0:1 S LIEN=$G(@("ECL"_I)) Q:'+LIEN  I $D(ECLOC1(LIEN)) S ECLOC(I+1)=LIEN_"^"_ECLOC1(LIEN) ;112
"RTN","ECRRPT1",23,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",24,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT1",25,0)
 . . I '$D(ECDUZ) Q
"RTN","ECRRPT1",26,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0) D ALLU^ECRUTL
"RTN","ECRRPT1",27,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT1",28,0)
 . . K DIC S DIC=724,DIC(0)="QNZX",X=@ECX D ^DIC I Y<0 Q  ;145
"RTN","ECRRPT1",29,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT1",30,0)
 S ECX=0 D
"RTN","ECRRPT1",31,0)
 .I ECRY0="ALL" D PXREAS Q
"RTN","ECRRPT1",32,0)
 .N TLOC,TDSS,ECY
"RTN","ECRRPT1",33,0)
 .S ECI=0 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  S TLOC(+ECLOC(ECI))=""
"RTN","ECRRPT1",34,0)
 .S ECI=0 F  S ECI=$O(ECDSSU(ECI)) Q:'ECI  S TDSS(+ECDSSU(ECI))=""
"RTN","ECRRPT1",35,0)
 .S ECI=0 F ECI=0:1 S ECZ="ECRY"_ECI Q:'$D(@ECZ)  D
"RTN","ECRRPT1",36,0)
 ..S ECW=0 F  S ECW=$O(^ECL("B",@ECZ,ECW)) Q:'ECW  D
"RTN","ECRRPT1",37,0)
 ...S ECY=$P($G(^ECL(ECW,0)),U,2) Q:ECY=""  S ECJ=$P($G(^ECJ(ECY,0)),U)
"RTN","ECRRPT1",38,0)
 ...Q:ECJ=""  Q:'$D(TLOC($P(ECJ,"-")))  Q:'$D(TDSS($P(ECJ,"-",2)))
"RTN","ECRRPT1",39,0)
 ...S ECLINK(ECW)=$P($G(^ECL(ECW,0)),U)
"RTN","ECRRPT1",40,0)
 D DATECHK^ECRRPT(.ECSD,.ECED) S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",41,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",42,0)
 . S ECV="ECSD^ECED^ECPTYP",ECROU="STRPT^ECRPRSN2"
"RTN","ECRRPT1",43,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("),ECSAVE("ECLINK("))=""
"RTN","ECRRPT1",44,0)
 . S ECDESC="EC Procedure Reason Report"
"RTN","ECRRPT1",45,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",46,0)
 D STRPT^ECRPRSN2 ;112
"RTN","ECRRPT1",47,0)
 Q
"RTN","ECRRPT1",48,0)
PXREAS ;Procedure reason link
"RTN","ECRRPT1",49,0)
 N ECZ,ECX,ECY,ECV
"RTN","ECRRPT1",50,0)
 S ECX=0 F  S ECX=$O(ECLOC(ECX)) Q:'ECX  S ECY=0 D
"RTN","ECRRPT1",51,0)
 . F  S ECY=$O(ECDSSU(ECY)) Q:'ECY  S ECV=+ECLOC(ECX)_"-"_+ECDSSU(ECY) D
"RTN","ECRRPT1",52,0)
 . . S ECZ=ECV_"-0-0"
"RTN","ECRRPT1",53,0)
 . . F  S ECZ=$O(^ECJ("B",ECZ)) Q:('ECZ)!($P(ECZ,"-",1,2)'=ECV)  D
"RTN","ECRRPT1",54,0)
 . . . S ECW=$O(^ECJ("B",ECZ,"")) Q:ECW=""  D REALNK
"RTN","ECRRPT1",55,0)
 Q
"RTN","ECRRPT1",56,0)
REALNK ;Reason link
"RTN","ECRRPT1",57,0)
 N XX,YY,ZZ
"RTN","ECRRPT1",58,0)
 S XX=0 F  S XX=$O(^ECL("AD",ECW,XX)) Q:'XX  S YY=0 D
"RTN","ECRRPT1",59,0)
 . F  S YY=$O(^ECL("AD",ECW,XX,YY)) Q:'YY  D
"RTN","ECRRPT1",60,0)
 . . Q:$G(^ECL(YY,0))=""  S ECLINK(YY)=XX
"RTN","ECRRPT1",61,0)
 Q
"RTN","ECRRPT1",62,0)
ECRPERS ;Inactive Person Class Report for RPC Call
"RTN","ECRRPT1",63,0)
 ;     Variables passed in
"RTN","ECRRPT1",64,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",65,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",66,0)
 ;       ECSORT - Sort by Patient (P) or Provider (R)
"RTN","ECRRPT1",67,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",68,0)
 ;                or (E)xport
"RTN","ECRRPT1",69,0)
 ;
"RTN","ECRRPT1",70,0)
 ;     Variable return
"RTN","ECRRPT1",71,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",72,0)
 N ECV,ECDATE,ECBEGIN,ECEND,ECROU,ECDESC
"RTN","ECRRPT1",73,0)
 S ECV="ECSD^ECED^ECSORT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",74,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",75,0)
 S ECBEGIN=ECSD-.0001,ECEND=ECED+.9999
"RTN","ECRRPT1",76,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",77,0)
 . S ECV="ECBEGIN^ECEND^ECSORT",ECROU="START^ECRPCLS"
"RTN","ECRRPT1",78,0)
 . S ECDESC="EC Invalid Provider Report"
"RTN","ECRRPT1",79,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",80,0)
 D START^ECRPCLS
"RTN","ECRRPT1",81,0)
 Q
"RTN","ECRRPT1",82,0)
ECDSS1 ;National/Local Procedure Reports for RPC Call
"RTN","ECRRPT1",83,0)
 ;     Variables passed in
"RTN","ECRRPT1",84,0)
 ;       ECRTN    - Procedure Report (A-active or I-inactive)
"RTN","ECRRPT1",85,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",86,0)
 ;                  or (E)xport
"RTN","ECRRPT1",87,0)
 ;    If ECRTN=A, also
"RTN","ECRRPT1",88,0)
 ;       ECRN     - Preferred Report (N-ational, L-ocal or Both)
"RTN","ECRRPT1",89,0)
 ;       ECRD     - Sort Method (P-rocedure Name, N-ational Number)
"RTN","ECRRPT1",90,0)
 ;
"RTN","ECRRPT1",91,0)
 ;     Variable return
"RTN","ECRRPT1",92,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",93,0)
 N ECV,ECDESC,ECROU,DQTIME
"RTN","ECRRPT1",94,0)
 S ECV=$S($G(ECRTN)="A":"ECRTN^ECRN^ECRD",1:"ECRTN")
"RTN","ECRRPT1",95,0)
 D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",96,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",97,0)
 I $G(ECPTYP)="E" D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1") Q  ;119
"RTN","ECRRPT1",98,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",99,0)
 . S ECV="ECRTN^ECRN^ECRD",ECROU=$S(ECRTN="I":"LISTI",1:"PRT")_"^ECDSS1"
"RTN","ECRRPT1",100,0)
 . S ECDESC="Event Capture National Procedure Report",ECDIP=1
"RTN","ECRRPT1",101,0)
 . ;S ECSAVE("IO*")=""
"RTN","ECRRPT1",102,0)
 .D QUEDIP D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",103,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",104,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"_";132" ;145 Add right margin width
"RTN","ECRRPT1",105,0)
 D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",106,0)
 Q
"RTN","ECRRPT1",107,0)
ECDSS3 ;Category Reports for RPC Call
"RTN","ECRRPT1",108,0)
 ;     Variables passed in
"RTN","ECRRPT1",109,0)
 ;       ECRTN    - Category Procedure Report 
"RTN","ECRRPT1",110,0)
 ;                  (A-active, I-inactive or B-oth)
"RTN","ECRRPT1",111,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",112,0)
 ;                  or (E)xport
"RTN","ECRRPT1",113,0)
 ;
"RTN","ECRRPT1",114,0)
 ;     Variable return
"RTN","ECRRPT1",115,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",116,0)
 N ECV,ECDIP,DQTIME
"RTN","ECRRPT1",117,0)
 S ECV="ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",118,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",119,0)
 I $G(ECPTYP)="E" D PRINT^ECDSS3 Q  ;119
"RTN","ECRRPT1",120,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",121,0)
 . S ECV="ECRTN",ECROU="PRINT^ECDSS3"
"RTN","ECRRPT1",122,0)
 . S ECDESC="Event Capture Category Reports"
"RTN","ECRRPT1",123,0)
 . D QUEDIP D PRINT^ECDSS3
"RTN","ECRRPT1",124,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",125,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"_";132" ;145 Add right margin width
"RTN","ECRRPT1",126,0)
 D PRINT^ECDSS3
"RTN","ECRRPT1",127,0)
 Q
"RTN","ECRRPT1",128,0)
QUEDIP ;Queue when using DIP
"RTN","ECRRPT1",129,0)
 N DIC,X,Y
"RTN","ECRRPT1",130,0)
 D  I Y=-1 S ECERR=1 Q
"RTN","ECRRPT1",131,0)
 . S DIC(0)="MN",X=ECDEV,DIC="^%ZIS(1," D ^DIC
"RTN","ECRRPT1",132,0)
 . S:+Y>0 IOP="Q;"_$P(Y,U,2)
"RTN","ECRRPT1",133,0)
 . S Y=ECQDT X ^DD("DD") S DQTIME=Y
"RTN","ECRRPT1",134,0)
 Q
"RTN","ECRRPT1",135,0)
ECSUM ;Print Category and Procedure Summary (Report) for RPC Call
"RTN","ECRRPT1",136,0)
 ;     Variables passed in
"RTN","ECRRPT1",137,0)
 ;       ECL      - Location to report (1 or ALL)
"RTN","ECRRPT1",138,0)
 ;       ECD0...n - DSS Unit to report (ECD0, first unit, ECD1, second 
"RTN","ECRRPT1",139,0)
 ;                  unit, etc.)
"RTN","ECRRPT1",140,0)
 ;       ECC      - Category (defaults to ALL, even if sent) (optional)
"RTN","ECRRPT1",141,0)
 ;       ECRTN    - Event Code Screen (Active, Inactive or Both)
"RTN","ECRRPT1",142,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",143,0)
 ;                  or (E)xport
"RTN","ECRRPT1",144,0)
 ;
"RTN","ECRRPT1",145,0)
 ;     Variable return
"RTN","ECRRPT1",146,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",147,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLOC,ECS,ECJLP,ECSN,ECALL,DIC,X,Y
"RTN","ECRRPT1",148,0)
 N ECSCN,ECUNITS,ECNUM ;139
"RTN","ECRRPT1",149,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD0^ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q  ;139
"RTN","ECRRPT1",150,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",151,0)
 . D LOCARRY^ECRUTL I ECL="ALL" Q
"RTN","ECRRPT1",152,0)
 . K ECLOC I $D(ECLOC1(ECL)) S ECLOC(1)=ECL_"^"_ECLOC1(ECL)
"RTN","ECRRPT1",153,0)
 S ECSCN=ECRTN,ECD="ALL",ECALL=1 ;139
"RTN","ECRRPT1",154,0)
 F ECNUM=0:1 Q:'$D(@("ECD"_ECNUM))  S ECUNITS(@("ECD"_ECNUM))="" K @("ECD"_ECNUM) ;139 Convert DSS units to array of units
"RTN","ECRRPT1",155,0)
 I ECALL D PXRUN Q
"RTN","ECRRPT1",156,0)
PXRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",157,0)
 . S ECV="ECALL^ECSCN",ECROU="START^ECSUM"
"RTN","ECRRPT1",158,0)
 . S ECSAVE("ECLOC(")=""
"RTN","ECRRPT1",159,0)
 . S ECSAVE("ECUNITS(")="" ;139 Save units for queued report
"RTN","ECRRPT1",160,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECSN^ECDN^ECJLP^ECCN^ECSCN"
"RTN","ECRRPT1",161,0)
 . S ECDESC="EC Print Category and Procedure Summary"
"RTN","ECRRPT1",162,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",163,0)
 U IO D START^ECSUM
"RTN","ECRRPT1",164,0)
 Q
"RTN","ECRRPT1",165,0)
ECNTPCE ;ECS Records Failing Transmission to PCE
"RTN","ECRRPT1",166,0)
 ;     Variables passed in
"RTN","ECRRPT1",167,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",168,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",169,0)
 ;       ECPTYP - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",170,0)
 ;                or (E)xport
"RTN","ECRRPT1",171,0)
 ;
"RTN","ECRRPT1",172,0)
 ;     Variable return
"RTN","ECRRPT1",173,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",174,0)
 N ECV,ECDATE,ECROU,ECDESC
"RTN","ECRRPT1",175,0)
 S ECV="ECSD^ECED" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",176,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",177,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",178,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",179,0)
 . S ECV="ECSD^ECED^ECDATE",ECROU="START^ECNTPCE"
"RTN","ECRRPT1",180,0)
 . S ECDESC="ECS Records Failing Transmission to PCE Report"
"RTN","ECRRPT1",181,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",182,0)
 D START^ECNTPCE
"RTN","ECRRPT1",183,0)
 Q
"RTN","ECRRPT1",184,0)
ECSCPT ;Event Code Screens with CPT Codes
"RTN","ECRRPT1",185,0)
 ;     Variables passed in
"RTN","ECRRPT1",186,0)
 ;       ECL      - Location to report (1 or ALL)
"RTN","ECRRPT1",187,0)
 ;       ECD      - DSS Unit to report (1 or ALL), If ECD'="ALL" then ECC
"RTN","ECRRPT1",188,0)
 ;       ECC      - Category (1 or ALL) (optional)
"RTN","ECRRPT1",189,0)
 ;       ECCPT    - CPT Codes to Display (Active, Inactive or Both)
"RTN","ECRRPT1",190,0)
 ;       ECPTYP   - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",191,0)
 ;                  or (E)xport
"RTN","ECRRPT1",192,0)
 ;
"RTN","ECRRPT1",193,0)
 ;     Variable return
"RTN","ECRRPT1",194,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",195,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLOC,ECS,ECJLP,ECALL,DIC,X,Y
"RTN","ECRRPT1",196,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD^ECCPT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",197,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",198,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT1",199,0)
 . S DIC=4,DIC(0)="QNZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_U_$P(Y,U,2)
"RTN","ECRRPT1",200,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",201,0)
 . I ECD="ALL" S ECALL=1 Q
"RTN","ECRRPT1",202,0)
 . K DIC S DIC=724,DIC(0)="QNZX",X=ECD D ^DIC I Y<0 S ECERR=1 Q  ;145
"RTN","ECRRPT1",203,0)
 . S ECDN=$P(Y,U,2)_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECRRPT1",204,0)
 . S ECJLP=+$P(^ECD(ECD,0),"^",11)
"RTN","ECRRPT1",205,0)
 . I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECRRPT1",206,0)
 I ECALL D CPTRUN Q
"RTN","ECRRPT1",207,0)
 S ECV="ECC" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",208,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid Category." Q
"RTN","ECRRPT1",209,0)
 . I (ECC="ALL")!(ECC=0) Q
"RTN","ECRRPT1",210,0)
 . K DIC S DIC=726,DIC(0)="QNMZX",X=ECC D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",211,0)
 . S ECCN=$P(Y,U,2)
"RTN","ECRRPT1",212,0)
CPTRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",213,0)
 . S ECV="ECALL^ECCPT",ECROU="START^ECSCPT"
"RTN","ECRRPT1",214,0)
 . S ECSAVE("ECLOC(")=""
"RTN","ECRRPT1",215,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECDN^ECJLP^ECCN"
"RTN","ECRRPT1",216,0)
 . S ECDESC="Event Code Screens with CPT Codes"
"RTN","ECRRPT1",217,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",218,0)
 U IO D START^ECSCPT
"RTN","ECRRPT1",219,0)
 Q
"RTN","ECRRPT1",220,0)
ECINCPT ;National/Local Procedure Codes with Inactive CPT Reports for RPC Call
"RTN","ECRRPT1",221,0)
 ;     Variables passed in
"RTN","ECRRPT1",222,0)
 ;       ECPTYP  - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",223,0)
 ;                 or (E)xport
"RTN","ECRRPT1",224,0)
 ;
"RTN","ECRRPT1",225,0)
 ;     Variable return
"RTN","ECRRPT1",226,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",227,0)
 N ECV,ECL,ECDESC,ECROU,DQTIME,ECPG
"RTN","ECRRPT1",228,0)
 S ECPG=1
"RTN","ECRRPT1",229,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",230,0)
 . S ECROU="START^ECINCPT",ECV="ECL",ECL=""
"RTN","ECRRPT1",231,0)
 . S ECDESC="National/Local Procedure Codes with Inactive CPT"
"RTN","ECRRPT1",232,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",233,0)
 U IO D START^ECINCPT
"RTN","ECRRPT1",234,0)
 Q
"RTN","ECRRPT1",235,0)
ECGTP ;ECS Generic Table Printer
"RTN","ECRRPT1",236,0)
 ;     Variables passed in
"RTN","ECRRPT1",237,0)
 ;       ECOBHNDL   - Handle to generic table print obj
"RTN","ECRRPT1",238,0)
 ;       ECPTYP     - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",239,0)
 ;
"RTN","ECRRPT1",240,0)
 ;     Variable return
"RTN","ECRRPT1",241,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",242,0)
 N ECV,ECROU,ECDESC
"RTN","ECRRPT1",243,0)
 S ECV="ECOBHNDL" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",244,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",245,0)
 . S ECV="ECOBHNDL",ECROU="START^ECGTP"
"RTN","ECRRPT1",246,0)
 . S ECDESC="ECS Generic Table Printer"
"RTN","ECRRPT1",247,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",248,0)
 D START^ECGTP
"RTN","ECRRPT1",249,0)
 Q
"RTN","ECRRPT1",250,0)
ECSTPCD ;DSS Units with Associated Stop Code Error REPORT
"RTN","ECRRPT1",251,0)
 ;  EC*2*107 - added to GUI reports
"RTN","ECRRPT1",252,0)
 ;     Variables passed in
"RTN","ECRRPT1",253,0)
 ;       ECPTYP  - Where to send output (P)rinter, (D)evice or screen
"RTN","ECRRPT1",254,0)
 ;                 or (E)xport
"RTN","ECRRPT1",255,0)
 ;
"RTN","ECRRPT1",256,0)
 ;     Variable return
"RTN","ECRRPT1",257,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",258,0)
 N ECV,ECL,ECDESC,ECROU,DQTIME,ECPG
"RTN","ECRRPT1",259,0)
 S ECPG=1
"RTN","ECRRPT1",260,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",261,0)
 . S ECROU="STRTGUI^ECUNTRPT",ECV="ECL",ECL=""
"RTN","ECRRPT1",262,0)
 . S ECDESC="DSS Units with Associated Stop Code Error"
"RTN","ECRRPT1",263,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",264,0)
 U IO D STRTGUI^ECUNTRPT
"RTN","ECRRPT1",265,0)
 Q 
"RTN","ECSCPT")
0^2^B15400710^B14113911
"RTN","ECSCPT",1,0)
ECSCPT ;ALB/JAM - Event Code Screen With CPT Codes ;9/6/18  14:31
"RTN","ECSCPT",2,0)
 ;;2.0;EVENT CAPTURE;**72,92,95,119,139,145**;8 May 96;Build 6
"RTN","ECSCPT",3,0)
LOC K ECL S EC1=0 D ^ECL S:$D(LOC(2)) EC1=1 K LOC I '$D(ECL) S ECOUT=1 G END
"RTN","ECSCPT",4,0)
UNIT ;set var and sel dss unit
"RTN","ECSCPT",5,0)
 S ECJLP=0
"RTN","ECSCPT",6,0)
 S (ECOUT,ECALL)=0,ECPG=1
"RTN","ECSCPT",7,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSCPT",8,0)
 .W !!,"Do you want to list all DSS Units for "_ECLN S %=1 D YN^DICN Q:%
"RTN","ECSCPT",9,0)
 .W !!?5,"Enter <RET> to list all your DSS Units for this location, or"
"RTN","ECSCPT",10,0)
 .W !?11,"NO to select a specific DSS Unit"
"RTN","ECSCPT",11,0)
 G:%<0 END I %=1 S ECALL=1 G ECCPT
"RTN","ECSCPT",12,0)
 W @IOF,! K DIC S DIC=724,DIC(0)="QEAMZ",DIC("A")="Select DSS Unit: "
"RTN","ECSCPT",13,0)
 S:ECL DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))"
"RTN","ECSCPT",14,0)
 D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2)
"RTN","ECSCPT",15,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSCPT",16,0)
 S ECJLP=+$P(^ECD(ECD,0),"^",11)
"RTN","ECSCPT",17,0)
SEL ;
"RTN","ECSCPT",18,0)
 I 'ECJLP S ECC=0,ECCN="None" G ECCPT
"RTN","ECSCPT",19,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSCPT",20,0)
 .W !!,"Do you want to list all categories for "_ECDN S %=1 D YN^DICN Q:%
"RTN","ECSCPT",21,0)
 .W !!,"Enter <RET> if you would like to list all categories for this "
"RTN","ECSCPT",22,0)
 .W "DSS Unit,",!," or NO to select a specific category"
"RTN","ECSCPT",23,0)
 G:%<0 END I %=1 S ECC="ALL" G ECCPT
"RTN","ECSCPT",24,0)
 W @IOF,! K DIC S DIC=726,DIC(0)="QEAMZ",DIC("A")="Select Category for "
"RTN","ECSCPT",25,0)
 S DIC("A")=DIC("A")_ECDN_" DSS Unit:  "
"RTN","ECSCPT",26,0)
 S:ECD DIC("S")="I $D(^ECJ(""AP"",ECL,ECD,+Y))"
"RTN","ECSCPT",27,0)
 D ^DIC K DIC G:Y<0 END S ECC=+Y,ECCN=$P(Y,"^",2)
"RTN","ECSCPT",28,0)
ECCPT ;CPT Codes to display
"RTN","ECSCPT",29,0)
 K DIR
"RTN","ECSCPT",30,0)
 S DIR(0)="SO^A:Active CPT Codes;I:Inactive CPT Codes;B:Both"
"RTN","ECSCPT",31,0)
 S DIR("B")="I",DIR("A")="CPT Codes to display"
"RTN","ECSCPT",32,0)
 S DIR("?",1)="Enter an A for Event Code screens with Active CPT Codes,"
"RTN","ECSCPT",33,0)
 S DIR("?",1)=DIR("?",1)_" I for Inactive Codes,"
"RTN","ECSCPT",34,0)
 S DIR("?")="B for a consolidated report of CPT codes, or ^ to quit."
"RTN","ECSCPT",35,0)
 S DIR("??")="ECSCPT^"
"RTN","ECSCPT",36,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECSCPT",37,0)
 S ECCPT=Y
"RTN","ECSCPT",38,0)
DEV W !! K IOP,POP,IO("Q"),%ZIS,ZTSK
"RTN","ECSCPT",39,0)
 S %ZIS="QM",%ZIS("A")="Select Device:  " D ^%ZIS I POP S ECOUT=1 G END
"RTN","ECSCPT",40,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECSCPT",41,0)
 .S ZTDESC="CATEGORY AND PROCEDURE SUMMARY",ZTRTN="START^ECSCPT",ZTIO=ION
"RTN","ECSCPT",42,0)
 .D SAVE,^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECSCPT",43,0)
 U IO
"RTN","ECSCPT",44,0)
START ;
"RTN","ECSCPT",45,0)
 N ECI  ;generic index
"RTN","ECSCPT",46,0)
 N ECL  ;location IEN
"RTN","ECSCPT",47,0)
 N ECLN  ;location name
"RTN","ECSCPT",48,0)
 N CNT  ;119 Subscript for exported data
"RTN","ECSCPT",49,0)
 N ECAC ;139 Associated Clinic name
"RTN","ECSCPT",50,0)
 N ECACIEN ;139 Associated Clinic IEN
"RTN","ECSCPT",51,0)
 N ECMCA ;139 MCA Labor Code
"RTN","ECSCPT",52,0)
 N ECSC,ECCSC,ECCHAR,NODE ;145 Stop code, credit stop code, 4char code, zero node of 728.44
"RTN","ECSCPT",53,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECSCPT",54,0)
 S ECOUT=0,ECPG=1
"RTN","ECSCPT",55,0)
 I $G(ECPTYP)="E" S CNT=1 S ^TMP($J,"ECRPT",CNT)="LOCATION^DSS UNIT^CATEGORY^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^SYNONYM^ASSOCIATED CLINIC^STOP CODE^CREDIT STOP^CHAR4^MCA LABOR CODE" ;119,139,145
"RTN","ECSCPT",56,0)
 S ECI=0
"RTN","ECSCPT",57,0)
 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  D
"RTN","ECSCPT",58,0)
 . S ECL=$P(ECLOC(ECI),U),ECLN=$P(ECLOC(ECI),U,2)
"RTN","ECSCPT",59,0)
 . D ^ECSCPT1
"RTN","ECSCPT",60,0)
 I $G(ECPTYP)="E" D ^ECKILL Q  ;119 Nothing to write if exporting
"RTN","ECSCPT",61,0)
CLEAR I $E(IOST,1,2)'="C-" G END
"RTN","ECSCPT",62,0)
 G:ECOUT END
"RTN","ECSCPT",63,0)
 I ECPG W !!!!!,"Press <RET> to continue  " R X:DTIME I '$T!(X="^") S ECOUT=1 G END
"RTN","ECSCPT",64,0)
 G:ECALL END
"RTN","ECSCPT",65,0)
ASK ;
"RTN","ECSCPT",66,0)
 W @IOF F Q=0:0 D  I % Q
"RTN","ECSCPT",67,0)
 .W !!,"Would you like to list another DSS Unit for this Location"
"RTN","ECSCPT",68,0)
 .S %=2 D YN^DICN I % Q
"RTN","ECSCPT",69,0)
 .W !!,"Enter YES to list another DSS Unit or <RET> to continue"
"RTN","ECSCPT",70,0)
 G:%<0 END I %=1 D  G UNIT
"RTN","ECSCPT",71,0)
 .K ECD,ECDN,ECC,ECCN,ECP,ECPN,NATN,ECFILE,ECCPT
"RTN","ECSCPT",72,0)
 K ECD,ECDN,ECC,ECCN,ECP,ECPN,NATN,ECFILE,ECCPT
"RTN","ECSCPT",73,0)
 I EC1 G LOC
"RTN","ECSCPT",74,0)
END ;
"RTN","ECSCPT",75,0)
 D ^ECKILL Q:$D(ECGUI)  W @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECSCPT",76,0)
 Q
"RTN","ECSCPT",77,0)
SAVE ;
"RTN","ECSCPT",78,0)
 S (ZTSAVE("ECALL"),ZTSAVE("ECJLP"),ZTSAVE("ECC*"),ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECP*"))=""
"RTN","ECSCPT",79,0)
 Q
"RTN","ECSCPT1")
0^3^B18251454^B15662403
"RTN","ECSCPT1",1,0)
ECSCPT1 ;ALB/JAM - Event Code Screens with CPT Codes ;9/18/18  15:12
"RTN","ECSCPT1",2,0)
 ;;2.0;EVENT CAPTURE;**72,95,119,131,139,145**;8 May 96;Build 6
"RTN","ECSCPT1",3,0)
EN ;entry point
"RTN","ECSCPT1",4,0)
 N UCNT,ECDO,ECCO,ECNT,ECINDT,ECP0
"RTN","ECSCPT1",5,0)
 S (ECMORE,ECNT,ECDO,ECCO)=0,ECPG=$G(ECPG,1),ECCPT=$G(ECCPT,"B")
"RTN","ECSCPT1",6,0)
 ;Process all DSS Units
"RTN","ECSCPT1",7,0)
 I ECALL S ECD=0 D  G END
"RTN","ECSCPT1",8,0)
 .F  S ECD=$O(^ECJ("AP",ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECSCPT1",9,0)
 ..D SET,CATS,PAGE:'ECOUT&UCNT
"RTN","ECSCPT1",10,0)
 ;Process a specific DSS Unit
"RTN","ECSCPT1",11,0)
 S UCNT=0 D
"RTN","ECSCPT1",12,0)
 .I ECC="ALL" D CATS Q
"RTN","ECSCPT1",13,0)
 .I 'ECJLP S ECC=0,ECCN="None",ECCO=999
"RTN","ECSCPT1",14,0)
 .D PROC
"RTN","ECSCPT1",15,0)
END I 'ECNT,$G(ECPTYP)'="E" W !!!,"Nothing Found." ;119 Nothing to write if exporting
"RTN","ECSCPT1",16,0)
 S ECPG=$G(ECPG,1)
"RTN","ECSCPT1",17,0)
 Q
"RTN","ECSCPT1",18,0)
SET ;set var
"RTN","ECSCPT1",19,0)
 S ECDN=$S($P($G(^ECD(+ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),UCNT=0
"RTN","ECSCPT1",20,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSCPT1",21,0)
 Q
"RTN","ECSCPT1",22,0)
SETC ;set cats
"RTN","ECSCPT1",23,0)
 I ECC=0 S ECCN="None" Q
"RTN","ECSCPT1",24,0)
 S ECCN=$S($P($G(^EC(726,+ECC,0)),"^")]"":$P(^(0),"^"),1:"ZZ #"_ECC_" MISSING DATA")
"RTN","ECSCPT1",25,0)
 S ECMORE=1
"RTN","ECSCPT1",26,0)
 Q
"RTN","ECSCPT1",27,0)
HEADER ;
"RTN","ECSCPT1",28,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECSCPT1",29,0)
 W !!,?24,"EVENT CODE SCREENS WITH"
"RTN","ECSCPT1",30,0)
 W $S(ECCPT="I":" INACTIVE",ECCPT="A":" ACTIVE",1:"")_" CPT CODES"
"RTN","ECSCPT1",31,0)
 W ?70,"Page: ",ECPG,!?25,"Run Date: ",ECRDT,!?25,"LOCATION:  "_ECLN
"RTN","ECSCPT1",32,0)
 W !?25,"DSS UNIT:  "_ECDN,! S ECPG=ECPG+1
"RTN","ECSCPT1",33,0)
 F I=1:1:80 W "-"
"RTN","ECSCPT1",34,0)
 Q
"RTN","ECSCPT1",35,0)
CATS ;
"RTN","ECSCPT1",36,0)
 S ECC="",ECCO=0
"RTN","ECSCPT1",37,0)
 F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  D  Q:ECOUT  ;131 Moved calls to dot structure
"RTN","ECSCPT1",38,0)
 .I ECC,'$P(^ECD(ECD,0),U,11) Q  ;131 Don't include categories if unit is set to "no categories"
"RTN","ECSCPT1",39,0)
 .D SETC,PROC ;131 Moved from for loop
"RTN","ECSCPT1",40,0)
 S ECMORE=0
"RTN","ECSCPT1",41,0)
 Q
"RTN","ECSCPT1",42,0)
PROC ;
"RTN","ECSCPT1",43,0)
 S ECP=""
"RTN","ECSCPT1",44,0)
 F  S ECP=$O(^ECJ("AP",ECL,ECD,ECC,ECP)) Q:ECP=""  D SETP Q:ECOUT
"RTN","ECSCPT1",45,0)
 S ECMORE=0
"RTN","ECSCPT1",46,0)
 Q
"RTN","ECSCPT1",47,0)
SETP ;set procs
"RTN","ECSCPT1",48,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,"")),ECPI=""
"RTN","ECSCPT1",49,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),ECFILE=$P(ECP,";",2)
"RTN","ECSCPT1",50,0)
 S ECACIEN=+$P($G(^ECJ(ECPSY,"PRO")),U,4) ;Get clinic IEN
"RTN","ECSCPT1",51,0)
 S ECAC=$$GET1^DIQ(44,ECACIEN,.01) ;139 Get associated clinic
"RTN","ECSCPT1",52,0)
 S NODE=$G(^ECX(728.44,+ECACIEN,0)) ;145
"RTN","ECSCPT1",53,0)
 S ECSC=$P(NODE,U,2) ;145 Stop Code
"RTN","ECSCPT1",54,0)
 S ECCSC=$P(NODE,U,3) ;145 Credit Stop Code
"RTN","ECSCPT1",55,0)
 S ECCHAR=$$GET1^DIQ(728.441,$P(NODE,U,8),.01) ;145 Char 4 code
"RTN","ECSCPT1",56,0)
 S ECMCA=$$GET1^DIQ(728.442,$P(NODE,U,14),.01) ;139,145 Get MCA Labor Code for associated clinic
"RTN","ECSCPT1",57,0)
 S ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"")
"RTN","ECSCPT1",58,0)
 I ECFILE="" Q
"RTN","ECSCPT1",59,0)
 S (ECPN,ECPT,NATN)="",ECPI=0
"RTN","ECSCPT1",60,0)
 I ECFILE=81 S ECPI=$$CPT^ICPTCOD(+ECP) I +ECPI>0 D
"RTN","ECSCPT1",61,0)
 .S ECPN=$P(ECPI,"^",3),ECPT=$P(ECPI,"^",2),ECINDT=$P(ECPI,"^",7)
"RTN","ECSCPT1",62,0)
 I ECFILE=725 D
"RTN","ECSCPT1",63,0)
 .S ECP0=$G(^EC(725,+ECP,0)),ECPT="",ECPN=$P(ECP0,"^")
"RTN","ECSCPT1",64,0)
 .S NATN=$P(ECP0,"^",2)
"RTN","ECSCPT1",65,0)
 .I $P(ECP0,"^",5)'="" S ECPI=$$CPT^ICPTCOD($P(ECP0,"^",5)) I +ECPI>0 D 
"RTN","ECSCPT1",66,0)
 ..S ECPT=$P(ECPI,"^",2),ECINDT=$P(ECPI,"^",7)
"RTN","ECSCPT1",67,0)
 I +ECPI<1 Q
"RTN","ECSCPT1",68,0)
 I ECCPT="A",'ECINDT Q
"RTN","ECSCPT1",69,0)
 I ECCPT="I",ECINDT Q
"RTN","ECSCPT1",70,0)
 I $G(ECPTYP)="E" D EXPORT Q  ;119 Nothing to write if exporting
"RTN","ECSCPT1",71,0)
 I ECD'=ECDO D HEADER S ECDO=ECD
"RTN","ECSCPT1",72,0)
 I ECC'=ECCO D  S ECCO=ECC I ECOUT Q
"RTN","ECSCPT1",73,0)
 .W !!,"Category:  "_ECCN D:$Y+4>IOSL CONTD
"RTN","ECSCPT1",74,0)
 S ECNT=ECNT+1,UCNT=UCNT+1 ;139
"RTN","ECSCPT1",75,0)
 W !,"Procedure: ",$E(ECPN,1,30)," (",$S(ECFILE=81:"CPT",1:"EC"),")",?48,"Nat'l #: ",NATN,?64,"CPT: ",ECPT
"RTN","ECSCPT1",76,0)
 I ECCPT="B",'ECINDT W ?70," *I*"
"RTN","ECSCPT1",77,0)
 I $G(ECPSYN)'="" W !,"  Synonym: ",ECPSYN ;139
"RTN","ECSCPT1",78,0)
 I $G(ECAC)'="" W !,"  Associated Clinic: ",ECAC,!,"  Stop Code: ",ECSC,?19,"Credit Stop: ",ECCSC,?38,"CHAR4: ",ECCHAR,?52,"MCA Labor Code: ",ECMCA ;139,145
"RTN","ECSCPT1",79,0)
 D:($Y+3)>IOSL CONTD I ECOUT Q
"RTN","ECSCPT1",80,0)
 Q
"RTN","ECSCPT1",81,0)
CONTD ;Check whether to continue or exit
"RTN","ECSCPT1",82,0)
 D PAGE I ECOUT Q
"RTN","ECSCPT1",83,0)
 D HEADER:ECPG,MORE:$D(ECCN)
"RTN","ECSCPT1",84,0)
 Q
"RTN","ECSCPT1",85,0)
 ;
"RTN","ECSCPT1",86,0)
PAGE ;
"RTN","ECSCPT1",87,0)
 N SS,JJ
"RTN","ECSCPT1",88,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECSCPT1",89,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECSCPT1",90,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECSCPT1",91,0)
 Q
"RTN","ECSCPT1",92,0)
MORE I ECMORE W !!,"Category:  "_ECCN
"RTN","ECSCPT1",93,0)
 Q
"RTN","ECSCPT1",94,0)
 ;
"RTN","ECSCPT1",95,0)
EXPORT ;Section added in patch 119
"RTN","ECSCPT1",96,0)
 S CNT=CNT+1
"RTN","ECSCPT1",97,0)
 S ^TMP($J,"ECRPT",CNT)=ECLN_U_ECDN_U_ECCN_U_ECPT_$S('ECINDT:" **Inactive**",1:"")_U_NATN_U_ECPN_" ("_$S(ECFILE=81:"CPT",1:"EC")_")"_U_ECPSYN_U_ECAC_U_ECSC_U_ECCSC_U_ECCHAR_U_ECMCA ;139,145
"RTN","ECSCPT1",98,0)
 Q
"RTN","ECUTL1")
0^8^B72494106^B67581197
"RTN","ECUTL1",1,0)
ECUTL1 ;ALB/ESD - Event Capture Classification Utilities ;11/5/18  12:35
"RTN","ECUTL1",2,0)
 ;;2.0;EVENT CAPTURE;**10,13,17,42,54,76,107,122,126,130,145**;8 May 96;Build 6
"RTN","ECUTL1",3,0)
 ;
"RTN","ECUTL1",4,0)
ASKCLASS(DFN,ECANS,ERR,ECTOPCE,ECPATST,ECHDA) ;  Ask classification questions
"RTN","ECUTL1",5,0)
 ; (Agent Orange, Ionizing Radiation, Environmental Contaminants/South 
"RTN","ECUTL1",6,0)
 ; West Asia Conditions, Service Connected, Military Sexual Trauma, 
"RTN","ECUTL1",7,0)
 ; Head/Neck Cancer, Combat Veteran, Project 112/SHAD)
"RTN","ECUTL1",8,0)
 ;
"RTN","ECUTL1",9,0)
 ;   Input:
"RTN","ECUTL1",10,0)
 ;      DFN     - IEN of Patient file (#2)
"RTN","ECUTL1",11,0)
 ;      ECTOPCE - Variable which indicates if DSS Unit is sending to PCE
"RTN","ECUTL1",12,0)
 ;      ECPATST - Inpatient/outpatient status
"RTN","ECUTL1",13,0)
 ;      ECHDA   - IEN in file #721 if editing existing record [optional]
"RTN","ECUTL1",14,0)
 ;
"RTN","ECUTL1",15,0)
 ;  Output:
"RTN","ECUTL1",16,0)
 ;      ECANS - array subscripted by classification abbreviation
"RTN","ECUTL1",17,0)
 ;              (i.e. ECANS("AO")) and passed by reference containing:
"RTN","ECUTL1",18,0)
 ;                 field # of class from EC Patient file (#721)^answer
"RTN","ECUTL1",19,0)
 ;      ERR   - Error indicator if user uparrows or times out (set to 1)
"RTN","ECUTL1",20,0)
 ;
"RTN","ECUTL1",21,0)
 ;      Function value - 1 if successful, 0 otherwise
"RTN","ECUTL1",22,0)
 ;
"RTN","ECUTL1",23,0)
 N ANS,DIR,ECCL,ECCLFLD,SUCCESS,ECVST,ECVSTDT,ECPXB,PXBDATA,ECNT,ECOLD,ECPIECE,ECXX
"RTN","ECUTL1",24,0)
 S (ECANS,ECCL)=""
"RTN","ECUTL1",25,0)
 S ERR=0
"RTN","ECUTL1",26,0)
 S SUCCESS=1
"RTN","ECUTL1",27,0)
 S DFN=+$G(DFN)
"RTN","ECUTL1",28,0)
 S ECTOPCE=$G(ECTOPCE)
"RTN","ECUTL1",29,0)
 I ECTOPCE["~" S ECTOPCE=$P(ECTOPCE,"~",2)
"RTN","ECUTL1",30,0)
 S ECPATST=$G(ECPATST)
"RTN","ECUTL1",31,0)
 ;- Drop out if invalid condition found OR if DSS Unit not sending to
"RTN","ECUTL1",32,0)
 ;  PCE or patient is an inpatient
"RTN","ECUTL1",33,0)
 I ('DFN)!(ECTOPCE="")!(ECPATST="")!(ECTOPCE="N")!(ECPATST="I") S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",34,0)
 D NOW^%DTC S ECVSTDT=$S(+$G(ECDT):ECDT,1:%),ECVST="" ;modified to use event date;JAM/11/24/03
"RTN","ECUTL1",35,0)
 ;- If editing an existing record, get visit data & display classification
"RTN","ECUTL1",36,0)
 I $G(ECHDA) D
"RTN","ECUTL1",37,0)
 .S ECVSTDT=$P($G(^ECH(ECHDA,0)),U,3)
"RTN","ECUTL1",38,0)
 .S ECVST=$P($G(^ECH(ECHDA,0)),U,21)
"RTN","ECUTL1",39,0)
 .F ECCL="AO","IR","EC","SC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",40,0)
 ..S ECPIECE=$S(ECCL="AO":3,ECCL="IR":4,ECCL="EC":5,ECCL="SC":6,ECCL="MST":9,ECCL="HNC":10,ECCL="CV":11,1:12)
"RTN","ECUTL1",41,0)
 ..S ECCLFLD=$P("^^Agent Orange^Ionizing Radiation^South West Asia Conditions^Service Connected^^^Military Sexual Trauma^Head/Neck Cancer^Combat Veteran^Project 112/SHAD","^",ECPIECE)
"RTN","ECUTL1",42,0)
 ..S ECXX=$P($G(^ECH(ECHDA,"P")),U,ECPIECE),ECXX=$S(ECXX="Y":"YES",ECXX="N":"NO",1:"")
"RTN","ECUTL1",43,0)
 ..I ECXX]"" S ECOLD(ECCL)=ECCLFLD_": "_ECXX
"RTN","ECUTL1",44,0)
 .I $D(ECOLD) D
"RTN","ECUTL1",45,0)
 ..W !,"*** Current encounter classification ***",!
"RTN","ECUTL1",46,0)
 ..F ECCL="SC","CV","AO","IR","EC","MST","HNC","SHAD" D
"RTN","ECUTL1",47,0)
 ...I $D(ECOLD(ECCL)) W !?4,ECOLD(ECCL)
"RTN","ECUTL1",48,0)
 ;- Ask user classification question
"RTN","ECUTL1",49,0)
 D CLASS^PXBAPI21("",DFN,ECVSTDT,1,ECVST) W !
"RTN","ECUTL1",50,0)
 ;- Check error; exit if error condition
"RTN","ECUTL1",51,0)
 I $D(PXBDATA("ERR")) D  I ERR S SUCCESS=0 Q SUCCESS
"RTN","ECUTL1",52,0)
 .F ECPXB=1:1:4 I $D(PXBDATA("ERR",ECPXB)) D
"RTN","ECUTL1",53,0)
 ..I (PXBDATA("ERR",ECPXB)=1)!(PXBDATA("ERR",ECPXB)=4) S ERR=1
"RTN","ECUTL1",54,0)
 ;- Otherwise, continue to setup ecans array, i.e., new classification data
"RTN","ECUTL1",55,0)
 F ECCL="AO","IR","SC","EC","MST","HNC","CV","SHAD" D
"RTN","ECUTL1",56,0)
 .S ECCLFLD=$S(ECCL="AO":21,ECCL="IR":22,ECCL="EC":23,ECCL="SC":24,ECCL="MST":35,ECCL="HNC":39,ECCL="CV":40,1:41)
"RTN","ECUTL1",57,0)
 .S ECPXB=$S(ECCL="AO":1,ECCL="IR":2,ECCL="EC":4,ECCL="SC":3,ECCL="MST":5,ECCL="CV":7,ECCL="SHAD":8,1:6)
"RTN","ECUTL1",58,0)
 .S ANS=$P($G(PXBDATA(ECPXB)),U,2),ANS=$S(ANS=1:"Y",ANS=0:"N",1:"")
"RTN","ECUTL1",59,0)
 .S ECANS(ECCL)=ECCLFLD_"^"_ANS
"RTN","ECUTL1",60,0)
 ;- Delete old data if it exists
"RTN","ECUTL1",61,0)
 I $G(ECHDA) D DELCLASS(ECHDA)
"RTN","ECUTL1",62,0)
 Q SUCCESS
"RTN","ECUTL1",63,0)
 ;
"RTN","ECUTL1",64,0)
 ;
"RTN","ECUTL1",65,0)
EDCLASS(ECIEN,ECANS) ;  Edit classifications fields in EC Patient
"RTN","ECUTL1",66,0)
 ;                  file (#721)
"RTN","ECUTL1",67,0)
 ;
"RTN","ECUTL1",68,0)
 ;   Input:
"RTN","ECUTL1",69,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",70,0)
 ;      ECANS - Array of answers to classification questions asked
"RTN","ECUTL1",71,0)
 ;
"RTN","ECUTL1",72,0)
 ;  Output:
"RTN","ECUTL1",73,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 edited in file #721
"RTN","ECUTL1",74,0)
 ;
"RTN","ECUTL1",75,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",76,0)
 S (DR,ECCL)=""
"RTN","ECUTL1",77,0)
 ;
"RTN","ECUTL1",78,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",79,0)
 D
"RTN","ECUTL1",80,0)
 . I '$G(ECIEN)!('$D(ECANS)) Q
"RTN","ECUTL1",81,0)
 . ;
"RTN","ECUTL1",82,0)
 . ;- Lock main node
"RTN","ECUTL1",83,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",84,0)
 . S DA=ECIEN
"RTN","ECUTL1",85,0)
 . S DIE="^ECH("
"RTN","ECUTL1",86,0)
 . ;
"RTN","ECUTL1",87,0)
 . ;- Edit classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",88,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  S DR=DR_+$P($G(ECANS(ECCL)),"^")_"////"_$P($G(ECANS(ECCL)),"^",2)_";"
"RTN","ECUTL1",89,0)
 . ;
"RTN","ECUTL1",90,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",91,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",92,0)
 . D ^DIE
"RTN","ECUTL1",93,0)
 ;
"RTN","ECUTL1",94,0)
 ;- Unlock main node
"RTN","ECUTL1",95,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",96,0)
 ;
"RTN","ECUTL1",97,0)
 Q
"RTN","ECUTL1",98,0)
 ;
"RTN","ECUTL1",99,0)
 ;
"RTN","ECUTL1",100,0)
SETCLASS(ECANS) ;  Set answers to classification questions in EC variables
"RTN","ECUTL1",101,0)
 ;          (used in EC data entry options when filing EC Patient record)
"RTN","ECUTL1",102,0)
 ;
"RTN","ECUTL1",103,0)
 ;   Input:
"RTN","ECUTL1",104,0)
 ;      ECANS - array of answers to class questions asked containing:
"RTN","ECUTL1",105,0)
 ;                 field number of class ques from file #721^answer
"RTN","ECUTL1",106,0)
 ;
"RTN","ECUTL1",107,0)
 ;  Output:
"RTN","ECUTL1",108,0)
 ;      EC classification var - ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,
"RTN","ECUTL1",109,0)
 ;                              ECSHAD
"RTN","ECUTL1",110,0)
 ;
"RTN","ECUTL1",111,0)
 N ECCL,ECCLFLD
"RTN","ECUTL1",112,0)
 S (ECCL,ECAO,ECIR,ECZEC,ECSC,ECMST,ECHNC,ECCV,ECSHAD)=""
"RTN","ECUTL1",113,0)
 ;
"RTN","ECUTL1",114,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",115,0)
 D
"RTN","ECUTL1",116,0)
 . ;
"RTN","ECUTL1",117,0)
 . ;- If array containing class flds^answers is not created, exit
"RTN","ECUTL1",118,0)
 . I '$D(ECANS) Q
"RTN","ECUTL1",119,0)
 . F  S ECCL=$O(ECANS(ECCL)) Q:ECCL=""  D
"RTN","ECUTL1",120,0)
 .. ;
"RTN","ECUTL1",121,0)
 .. ;- Get field number of classification
"RTN","ECUTL1",122,0)
 .. S ECCLFLD=+$P($G(ECANS(ECCL)),"^")
"RTN","ECUTL1",123,0)
 .. ;
"RTN","ECUTL1",124,0)
 .. ;- Agent Orange variable
"RTN","ECUTL1",125,0)
 .. S:ECCLFLD=21 ECAO=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",126,0)
 .. ;
"RTN","ECUTL1",127,0)
 .. ;- Ionizing Radiation variable
"RTN","ECUTL1",128,0)
 .. S:ECCLFLD=22 ECIR=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",129,0)
 .. ;
"RTN","ECUTL1",130,0)
 .. ;- Environmental Contaminants/South West Asia Conditions variable
"RTN","ECUTL1",131,0)
 .. S:ECCLFLD=23 ECZEC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",132,0)
 .. ;
"RTN","ECUTL1",133,0)
 .. ;- Service Connected variable
"RTN","ECUTL1",134,0)
 .. S:ECCLFLD=24 ECSC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",135,0)
 .. ;
"RTN","ECUTL1",136,0)
 .. ;- Military Sexual Trauma variable
"RTN","ECUTL1",137,0)
 .. S:ECCLFLD=35 ECMST=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",138,0)
 .. ;
"RTN","ECUTL1",139,0)
 .. ;- Head/Neck Cancer
"RTN","ECUTL1",140,0)
 .. S:ECCLFLD=39 ECHNC=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",141,0)
 .. ;
"RTN","ECUTL1",142,0)
 .. ;- Combat Veteran
"RTN","ECUTL1",143,0)
 .. S:ECCLFLD=40 ECCV=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",144,0)
 .. ;
"RTN","ECUTL1",145,0)
 .. ;- Project 112/SHAD (Shipboard Hazard and Defense)
"RTN","ECUTL1",146,0)
 .. S:ECCLFLD=41 ECSHAD=$P(ECANS(ECCL),"^",2)
"RTN","ECUTL1",147,0)
 Q
"RTN","ECUTL1",148,0)
 ;
"RTN","ECUTL1",149,0)
 ;
"RTN","ECUTL1",150,0)
DELCLASS(ECIEN) ;  Delete classification fields in EC Patient file (#721)
"RTN","ECUTL1",151,0)
 ;
"RTN","ECUTL1",152,0)
 ;   Input:
"RTN","ECUTL1",153,0)
 ;      ECIEN - EC Patient record (#721) IEN
"RTN","ECUTL1",154,0)
 ;
"RTN","ECUTL1",155,0)
 ;  Output:
"RTN","ECUTL1",156,0)
 ;      Classification fields 21,22,23,24,35,39,40,41 deleted in file#721
"RTN","ECUTL1",157,0)
 ;
"RTN","ECUTL1",158,0)
 N DA,DIE,DR,ECCL
"RTN","ECUTL1",159,0)
 S DR=""
"RTN","ECUTL1",160,0)
 ;
"RTN","ECUTL1",161,0)
 ;- Drops out if invalid condition found
"RTN","ECUTL1",162,0)
 D
"RTN","ECUTL1",163,0)
 . I '$G(ECIEN) Q
"RTN","ECUTL1",164,0)
 . ;
"RTN","ECUTL1",165,0)
 . ;- Lock main node
"RTN","ECUTL1",166,0)
 . I '$$LOCK(ECIEN) Q
"RTN","ECUTL1",167,0)
 . S DA=ECIEN
"RTN","ECUTL1",168,0)
 . S DIE="^ECH("
"RTN","ECUTL1",169,0)
 . ;
"RTN","ECUTL1",170,0)
 . ;- Delete classification fields (AO, IR, EC, SC, MST, HNC, CV, SHAD)
"RTN","ECUTL1",171,0)
 . F ECCL=21:1:24,35,39,40,41 S DR=DR_ECCL_"////@;"
"RTN","ECUTL1",172,0)
 . ;
"RTN","ECUTL1",173,0)
 . ;- Remove last ";" from DR string before editing
"RTN","ECUTL1",174,0)
 . S DR=$E(DR,1,($L(DR)-1))
"RTN","ECUTL1",175,0)
 . D ^DIE
"RTN","ECUTL1",176,0)
 ;
"RTN","ECUTL1",177,0)
 ;- Unlock main node
"RTN","ECUTL1",178,0)
 D UNLOCK(ECIEN)
"RTN","ECUTL1",179,0)
 ;
"RTN","ECUTL1",180,0)
 Q
"RTN","ECUTL1",181,0)
 ;
"RTN","ECUTL1",182,0)
 ;
"RTN","ECUTL1",183,0)
LOCK(ECIEN) ;  Lock EC Patient record
"RTN","ECUTL1",184,0)
 ;
"RTN","ECUTL1",185,0)
 ;   Input:
"RTN","ECUTL1",186,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",187,0)
 ;
"RTN","ECUTL1",188,0)
 ;  Output:
"RTN","ECUTL1",189,0)
 ;      Function Value - 1 if record can be locked, 0 otherwise
"RTN","ECUTL1",190,0)
 ;
"RTN","ECUTL1",191,0)
 I $G(ECIEN) L +^ECH(ECIEN):5
"RTN","ECUTL1",192,0)
 Q $T
"RTN","ECUTL1",193,0)
 ;
"RTN","ECUTL1",194,0)
 ;
"RTN","ECUTL1",195,0)
UNLOCK(ECIEN) ;  Unlock EC Patient record
"RTN","ECUTL1",196,0)
 ;
"RTN","ECUTL1",197,0)
 ;   Input:
"RTN","ECUTL1",198,0)
 ;      ECIEN - EC Patient record IEN
"RTN","ECUTL1",199,0)
 ;
"RTN","ECUTL1",200,0)
 ;  Output:
"RTN","ECUTL1",201,0)
 ;      EC Patient record unlocked
"RTN","ECUTL1",202,0)
 ;
"RTN","ECUTL1",203,0)
 I $G(ECIEN) L -^ECH(ECIEN)
"RTN","ECUTL1",204,0)
 Q
"RTN","ECUTL1",205,0)
RCNTVST(RESULT,ECARY) ;126 Changed parameter name from DFN to ECARY
"RTN","ECUTL1",206,0)
 ;
"RTN","ECUTL1",207,0)
 ;   Input: RESULT - return array of appt/visits
"RTN","ECUTL1",208,0)
 ;          ECARY  - DFN^LOCATION (optional if list should be filtered)
"RTN","ECUTL1",209,0)
 ;
"RTN","ECUTL1",210,0)
 ;   Output: FM date/time^readable d/t and clinic name^readable d/t
"RTN","ECUTL1",211,0)
 ;           ^clinic name
"RTN","ECUTL1",212,0)
 ;
"RTN","ECUTL1",213,0)
 ;This call uses the Patient and Visit files to return a list of recent
"RTN","ECUTL1",214,0)
 ;visits. It returns the most recent 40 visits using both files through 
"RTN","ECUTL1",215,0)
 ;midnight of the current day.  It also filters out canceled,
"RTN","ECUTL1",216,0)
 ;rescheduled or no-show appts.  
"RTN","ECUTL1",217,0)
 ;
"RTN","ECUTL1",218,0)
 ;126 Updated code so that it filters visit by selected location.
"RTN","ECUTL1",219,0)
 ;Only visits/appts with clinics in the location will be shown.
"RTN","ECUTL1",220,0)
 ;
"RTN","ECUTL1",221,0)
 ;API 1905
"RTN","ECUTL1",222,0)
 ;Calls    
"RTN","ECUTL1",223,0)
 ; SELECTED^VSIT(DFN,SDT,EDT,HOSLOC,ENCTPE,NNCTPE,SRVCAT,NSRVCAT,LASTN) 
"RTN","ECUTL1",224,0)
 ; See API for detailed documentation
"RTN","ECUTL1",225,0)
 ;
"RTN","ECUTL1",226,0)
 ;API 3859
"RTN","ECUTL1",227,0)
 ;Calls    GETAPPT^SDAMA201(DFN,SDFIELDS,SDAPSTAT,SDT,EDT,SDCNT)
"RTN","ECUTL1",228,0)
 ;         See API for detailed documentation
"RTN","ECUTL1",229,0)
 ;
"RTN","ECUTL1",230,0)
 ;IA 10040 - This is a supported IA and is used to filter/screen
"RTN","ECUTL1",231,0)
 ;           non clinics visits from being included in API 1905
"RTN","ECUTL1",232,0)
 ;           not needed in 3859 as it contains a filter for clinics
"RTN","ECUTL1",233,0)
 ;
"RTN","ECUTL1",234,0)
 N ARR,CNT,DATE,NUM,PARAMS,P1,P1DT,P2,PDT,VDT,VIEN,X,X1,X2,SDRESULT,DFN,LOC ;122,126,145
"RTN","ECUTL1",235,0)
 S DFN=$P(ECARY,U),LOC=$P(ECARY,U,2) ;126
"RTN","ECUTL1",236,0)
 S DATE=$$DT^XLFDT_.24 ;145 Set latest date/time for search
"RTN","ECUTL1",237,0)
 S VDT=3050101
"RTN","ECUTL1",238,0)
 S X1=DT,X2=(-30) D C^%DTC S PDT=X ;145 get appts within last 30 days
"RTN","ECUTL1",239,0)
 S RESULT(0)=0
"RTN","ECUTL1",240,0)
 I '$G(DFN) Q
"RTN","ECUTL1",241,0)
 K ^TMP("VSIT",$J)
"RTN","ECUTL1",242,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","ECUTL1",243,0)
 D SELECTED^VSIT(DFN,VDT,DATE,"","","","","HE",60) ;126,145 Changed call to filter out hospitalization and event (historical) categories, 145 added ending date range and increased records returned to 60
"RTN","ECUTL1",244,0)
 D GETAPPT^SDAMA201(DFN,"1;2","R;NT",PDT,DATE,.SDRESULT)
"RTN","ECUTL1",245,0)
 S VIEN=0
"RTN","ECUTL1",246,0)
 F  S VIEN=$O(^TMP("VSIT",$J,VIEN)) Q:VIEN=""  S NUM=0 D
"RTN","ECUTL1",247,0)
 .F  S NUM=$O(^TMP("VSIT",$J,VIEN,NUM)) Q:NUM=""  D
"RTN","ECUTL1",248,0)
 ..S PARAMS=$G(^TMP("VSIT",$J,VIEN,NUM))
"RTN","ECUTL1",249,0)
 ..;make sure location is a clinic
"RTN","ECUTL1",250,0)
 ..I $$GET1^DIQ(44,$P($P(PARAMS,U,2),";"),2,"I")'="C" Q
"RTN","ECUTL1",251,0)
 ..I $G(LOC) I LOC'=$$GET1^DIQ(44,$P($P(PARAMS,U,2),";"),"3.5:.07","I") Q  ;126,130 If location sent, filter out any visits whose clinic isn't in the location
"RTN","ECUTL1",252,0)
 ..S P1DT=$P(PARAMS,U,1),P1=$$FMTE^XLFDT(P1DT,"9M"),P2=$P($P(PARAMS,U,2),";",2)
"RTN","ECUTL1",253,0)
 ..I '$G(P1DT)!($G(P2)="") Q
"RTN","ECUTL1",254,0)
 ..I $D(ARR(P1DT,P2))=1 Q
"RTN","ECUTL1",255,0)
 ..;;cntrl array, filter visits from PT file
"RTN","ECUTL1",256,0)
 ..S ARR(P1DT,P2)=P1DT_U_$$LJ^XLFSTR(P1,25)_$$LJ^XLFSTR(P2,30)_U_P1_U_P2_U
"RTN","ECUTL1",257,0)
 S VIEN=0
"RTN","ECUTL1",258,0)
 F  S VIEN=$O(^TMP($J,"SDAMA201","GETAPPT",VIEN)) Q:VIEN=""  D
"RTN","ECUTL1",259,0)
 .I $D(^TMP($J,"SDAMA201","GETAPPT","ERROR")) Q
"RTN","ECUTL1",260,0)
 .S P1DT=$G(^TMP($J,"SDAMA201","GETAPPT",VIEN,1))
"RTN","ECUTL1",261,0)
 .S P1=$$FMTE^XLFDT(P1DT,"9M")
"RTN","ECUTL1",262,0)
 .S P2=$P($G(^TMP($J,"SDAMA201","GETAPPT",VIEN,2)),U,2)
"RTN","ECUTL1",263,0)
 .I $G(LOC) I LOC'=$$GET1^DIQ(44,$P($G(^TMP($J,"SDAMA201","GETAPPT",VIEN,2)),U),"3.5:.07","I") Q  ;126,130 If location sent, filter out any appts whose clinic isn't in the location
"RTN","ECUTL1",264,0)
 .I '$G(P1DT)!($G(P2)="") Q
"RTN","ECUTL1",265,0)
 .I $D(ARR(P1DT,P2))=1 Q
"RTN","ECUTL1",266,0)
 .;;cntrl array, filter visits from PT file
"RTN","ECUTL1",267,0)
 .S ARR(P1DT,P2)=P1DT_U_$$LJ^XLFSTR(P1,25)_$$LJ^XLFSTR(P2,30)_U_P1_U_P2_U
"RTN","ECUTL1",268,0)
 S VIEN=9999999999,CNT=1
"RTN","ECUTL1",269,0)
 F  S VIEN=$O(ARR(VIEN),-1) Q:((VIEN="")!(CNT>40))  D  ;145 upped limit from 20 to 40
"RTN","ECUTL1",270,0)
 .S NUM=0 F  S NUM=$O(ARR(VIEN,NUM)) Q:NUM=""  D
"RTN","ECUTL1",271,0)
 ..S RESULT(CNT)=ARR(VIEN,NUM),CNT=CNT+1
"RTN","ECUTL1",272,0)
 I $D(ARR) S RESULT(0)=CNT
"RTN","ECUTL1",273,0)
 K ^TMP("VSIT",$J)
"RTN","ECUTL1",274,0)
 K ^TMP($J,"SDAMA201","GETAPPT")
"RTN","ECUTL1",275,0)
 Q
"RTN","ECUURPC")
0^7^B7313644^B6184913
"RTN","ECUURPC",1,0)
ECUURPC ;ALB/JAM - Event Capture Data Entry Broker Utilities ;1/30/19  13:46
"RTN","ECUURPC",2,0)
 ;;2.0;EVENT CAPTURE;**25,42,49,94,95,76,104,124,139,145**;8 May 96;Build 6
"RTN","ECUURPC",3,0)
 ;
"RTN","ECUURPC",4,0)
 ; Reference to $$CODEN^ICDEX supported by ICR #5747
"RTN","ECUURPC",5,0)
 ;
"RTN","ECUURPC",6,0)
ECHELP(RESULTS,ECARY) ;
"RTN","ECUURPC",7,0)
 ;
"RTN","ECUURPC",8,0)
 ;Broker call returns the entries from HELP FILE #9.2
"RTN","ECUURPC",9,0)
 ;        RPC: EC GETSCNHELP
"RTN","ECUURPC",10,0)
 ;INPUTS   ECARY - Contains the following elements
"RTN","ECUURPC",11,0)
 ;          HLPDA  - Help Frame Name
"RTN","ECUURPC",12,0)
 ;
"RTN","ECUURPC",13,0)
 ;OUTPUTS  RESULTS - Array of help text in the HELP FRAM File (#9.2)
"RTN","ECUURPC",14,0)
 ;
"RTN","ECUURPC",15,0)
 N HLPDA,DIC,X,Y
"RTN","ECUURPC",16,0)
 S HLPDA=$G(ECARY) I HLPDA="" Q
"RTN","ECUURPC",17,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECHELP")
"RTN","ECUURPC",18,0)
 S DIC="^DIC(9.2,",DIC(0)="MN",X=HLPDA
"RTN","ECUURPC",19,0)
 D ^DIC M ^TMP($J,"ECHELP")=^DIC(9.2,+Y,1)
"RTN","ECUURPC",20,0)
 I $D(^TMP($J,"ECHELP")) D
"RTN","ECUURPC",21,0)
 . S $P(^TMP($J,"ECHELP",0),U)=$P(^DIC(9.2,+Y,0),U,2)
"RTN","ECUURPC",22,0)
 S RESULTS=$NA(^TMP($J,"ECHELP"))
"RTN","ECUURPC",23,0)
 Q
"RTN","ECUURPC",24,0)
FNDIEN(RESULTS,ECARY) ;find IEN
"RTN","ECUURPC",25,0)
 ;Broker call returns the IEN from a file
"RTN","ECUURPC",26,0)
 ;        RPC: EC GETIEN
"RTN","ECUURPC",27,0)
 ;INPUTS   ECARY - Contains the following data elements
"RTN","ECUURPC",28,0)
 ;          FIL  - File number
"RTN","ECUURPC",29,0)
 ;          TXT  - .01 description
"RTN","ECUURPC",30,0)
 ;
"RTN","ECUURPC",31,0)
 ;OUTPUTS  RESULTS - File IEN
"RTN","ECUURPC",32,0)
 ;
"RTN","ECUURPC",33,0)
 N TXT,FIL,DIC,X,Y
"RTN","ECUURPC",34,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",35,0)
 S FIL=$P(ECARY,U),TXT=$P(ECARY,U,2) I TXT=""!(FIL="") Q
"RTN","ECUURPC",36,0)
 ; For lookups on #80, use approved API
"RTN","ECUURPC",37,0)
 I FIL=80 S RESULTS=+$$CODEN^ICDEX(TXT,80) Q
"RTN","ECUURPC",38,0)
 ;
"RTN","ECUURPC",39,0)
 S DIC=FIL,DIC(0)="MN",X=TXT
"RTN","ECUURPC",40,0)
 I FIL=81.3 S DIC("S")="I +$P($$MOD^ICPTMOD(Y,""I""),U,7)=1"
"RTN","ECUURPC",41,0)
 D ^DIC I Y=-1 Q
"RTN","ECUURPC",42,0)
 S RESULTS=+Y
"RTN","ECUURPC",43,0)
 Q
"RTN","ECUURPC",44,0)
ECDATE(RESULTS,ECARY) ;
"RTN","ECUURPC",45,0)
 ;
"RTN","ECUURPC",46,0)
 ;Broker call returns an Fileman internal date
"RTN","ECUURPC",47,0)
 ;        RPC: EC GETDATE
"RTN","ECUURPC",48,0)
 ;INPUTS   ECARY - Contains the following elements
"RTN","ECUURPC",49,0)
 ;          DTSTR  - Date String
"RTN","ECUURPC",50,0)
 ;          FLG    - Date Flag (optional) Set to R if time is required
"RTN","ECUURPC",51,0)
 ;          FUT    - Future Flag (optional) Set to F to allow date/times through
"RTN","ECUURPC",52,0)
 ;                   midnight today
"RTN","ECUURPC",53,0)
 ;
"RTN","ECUURPC",54,0)
 ;OUTPUTS  RESULTS - A valid Fileman date format^External format
"RTN","ECUURPC",55,0)
 ;
"RTN","ECUURPC",56,0)
 N ECDTSTR,DIC,X,Y,DTSTR,FLG,FUT ;145
"RTN","ECUURPC",57,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",58,0)
 S DTSTR=$P(ECARY,U),FLG=$P(ECARY,U,2),FUT=$P(ECARY,U,3) I DTSTR="" Q  ;145
"RTN","ECUURPC",59,0)
 S X=DTSTR,%DT="XT"_$S(FLG="R":"R",1:""),%DT(0)=$S(FUT="F":"-"_$$DT^XLFDT_.24,1:"-NOW") D ^%DT ;145 Set latest date/time allowed
"RTN","ECUURPC",60,0)
 I +Y<1 S RESULTS="0^Invalid Date/Time" Q
"RTN","ECUURPC",61,0)
 S RESULTS=Y D D^DIQ
"RTN","ECUURPC",62,0)
 S RESULTS=RESULTS_U_Y
"RTN","ECUURPC",63,0)
 Q
"RTN","ECUURPC",64,0)
PATCH(RESULTS,ECARY)    ;
"RTN","ECUURPC",65,0)
 ;
"RTN","ECUURPC",66,0)
 ;Broker call returns 1 if patch X is installed
"RTN","ECUURPC",67,0)
 ;        RPC: EC GETPATCH
"RTN","ECUURPC",68,0)
 ;INPUTS   ECARY - contains the patch number
"RTN","ECUURPC",69,0)
 ;
"RTN","ECUURPC",70,0)
 ;OUTPUTS  RESULTS 1 OR 0
"RTN","ECUURPC",71,0)
 ;
"RTN","ECUURPC",72,0)
 I ECARY="" Q
"RTN","ECUURPC",73,0)
 D SETENV^ECUMRPC
"RTN","ECUURPC",74,0)
 S RESULTS=$$PATCH^XPDUTL(ECARY)
"RTN","ECUURPC",75,0)
 Q
"RTN","ECUURPC",76,0)
VERSRV(RESULTS,ECARY,VERSION)   ; Return server version of option name and 
"RTN","ECUURPC",77,0)
 ; minimum GUI client version.
"RTN","ECUURPC",78,0)
 ;
"RTN","ECUURPC",79,0)
 ;Server/client version consist of 4 pieces, namely
"RTN","ECUURPC",80,0)
 ;    major version.minor version.release.build  (ex. 2.0.10.1)
"RTN","ECUURPC",81,0)
 ;
"RTN","ECUURPC",82,0)
 ;Broker call returns server version of option name
"RTN","ECUURPC",83,0)
 ;        RPC: EC GETVERSION
"RTN","ECUURPC",84,0)
 ;INPUTS   ECARY - contains the option name
"RTN","ECUURPC",85,0)
 ;         VERSION - EC GUI client version ;stay in partition for session
"RTN","ECUURPC",86,0)
 ;
"RTN","ECUURPC",87,0)
 ;OUTPUTS  RESULTS version number OR null ("")
"RTN","ECUURPC",88,0)
 ;           current server version^minimum client version
"RTN","ECUURPC",89,0)
 ;
"RTN","ECUURPC",90,0)
 S ECCLVER=$G(VERSION)
"RTN","ECUURPC",91,0)
 I $G(ECARY)="" Q
"RTN","ECUURPC",92,0)
 N ECLST,ECMINV
"RTN","ECUURPC",93,0)
 S ECMINV="2.6.0.0"  ;139,145, Minimum version of EC GUI client
"RTN","ECUURPC",94,0)
 D FIND^DIC(19,"",1,"X",ECARY,1,,,,"ECLST")
"RTN","ECUURPC",95,0)
 I 'ECLST("DILIST",0) S RESULTS="" Q
"RTN","ECUURPC",96,0)
 S RESULTS=ECLST("DILIST","ID",1,1)
"RTN","ECUURPC",97,0)
 S RESULTS=$P(RESULTS,"version ",2)_U_ECMINV
"RTN","ECUURPC",98,0)
 Q
"VER")
8.0^22.2
"BLD",10353,6)
^139
**END**
**END**

