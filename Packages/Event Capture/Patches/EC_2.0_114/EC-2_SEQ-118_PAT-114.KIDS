Released EC*2*114 SEQ #118
Extracted from mail message
**KIDS**:EC*2.0*114^

**INSTALL NAME**
EC*2.0*114
"BLD",8961,0)
EC*2.0*114^EVENT CAPTURE^0^3140310^y
"BLD",8961,4,0)
^9.64PA^721^1
"BLD",8961,4,721,0)
721
"BLD",8961,4,721,2,0)
^9.641^721.038^2
"BLD",8961,4,721,2,721,0)
EVENT CAPTURE PATIENT  (File-top level)
"BLD",8961,4,721,2,721,1,0)
^9.6411^20^1
"BLD",8961,4,721,2,721,1,20,0)
PRIMARY ICD CODE
"BLD",8961,4,721,2,721.038,0)
SECONDARY ICD CODE  (sub-file)
"BLD",8961,4,721,2,721.038,1,0)
^9.6411^.01^1
"BLD",8961,4,721,2,721.038,1,.01,0)
SECONDARY ICD CODE
"BLD",8961,4,721,222)
y^y^p^^^^n^^n
"BLD",8961,4,721,224)

"BLD",8961,4,"APDD",721,721)

"BLD",8961,4,"APDD",721,721,20)

"BLD",8961,4,"APDD",721,721.038)

"BLD",8961,4,"APDD",721,721.038,.01)

"BLD",8961,4,"B",721,721)

"BLD",8961,6.3)
20
"BLD",8961,"ABPKG")
n
"BLD",8961,"INI")
DEL38^EC2P114
"BLD",8961,"INID")
^^n
"BLD",8961,"KRN",0)
^9.67PA^779.2^20
"BLD",8961,"KRN",.4,0)
.4
"BLD",8961,"KRN",.401,0)
.401
"BLD",8961,"KRN",.402,0)
.402
"BLD",8961,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",8961,"KRN",.403,0)
.403
"BLD",8961,"KRN",.5,0)
.5
"BLD",8961,"KRN",.84,0)
.84
"BLD",8961,"KRN",3.6,0)
3.6
"BLD",8961,"KRN",3.8,0)
3.8
"BLD",8961,"KRN",9.2,0)
9.2
"BLD",8961,"KRN",9.8,0)
9.8
"BLD",8961,"KRN",9.8,"NM",0)
^9.68A^15^8
"BLD",8961,"KRN",9.8,"NM",1,0)
ECUERPC^^0^B57028774
"BLD",8961,"KRN",9.8,"NM",2,0)
ECUERPC1^^0^B67385088
"BLD",8961,"KRN",9.8,"NM",8,0)
ECUTL2^^0^B39326217
"BLD",8961,"KRN",9.8,"NM",9,0)
ECV5RPC^^0^B14145200
"BLD",8961,"KRN",9.8,"NM",10,0)
ECPCER^^0^B35305594
"BLD",8961,"KRN",9.8,"NM",13,0)
ECUMRPC2^^0^B37122855
"BLD",8961,"KRN",9.8,"NM",14,0)
ECEFPAT^^0^B75867358
"BLD",8961,"KRN",9.8,"NM",15,0)
ECVICDDT^^0^B925988
"BLD",8961,"KRN",9.8,"NM","B","ECEFPAT",14)

"BLD",8961,"KRN",9.8,"NM","B","ECPCER",10)

"BLD",8961,"KRN",9.8,"NM","B","ECUERPC",1)

"BLD",8961,"KRN",9.8,"NM","B","ECUERPC1",2)

"BLD",8961,"KRN",9.8,"NM","B","ECUMRPC2",13)

"BLD",8961,"KRN",9.8,"NM","B","ECUTL2",8)

"BLD",8961,"KRN",9.8,"NM","B","ECV5RPC",9)

"BLD",8961,"KRN",9.8,"NM","B","ECVICDDT",15)

"BLD",8961,"KRN",19,0)
19
"BLD",8961,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",8961,"KRN",19,"NM",1,0)
EC GUI CONTEXT^^0
"BLD",8961,"KRN",19,"NM","B","EC GUI CONTEXT",1)

"BLD",8961,"KRN",19.1,0)
19.1
"BLD",8961,"KRN",101,0)
101
"BLD",8961,"KRN",409.61,0)
409.61
"BLD",8961,"KRN",771,0)
771
"BLD",8961,"KRN",779.2,0)
779.2
"BLD",8961,"KRN",870,0)
870
"BLD",8961,"KRN",8989.51,0)
8989.51
"BLD",8961,"KRN",8989.52,0)
8989.52
"BLD",8961,"KRN",8994,0)
8994
"BLD",8961,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",8961,"KRN",8994,"NM",1,0)
EC ICD10IMPLEMENTATIONDATE^^0
"BLD",8961,"KRN",8994,"NM","B","EC ICD10IMPLEMENTATIONDATE",1)

"BLD",8961,"KRN","B",.4,.4)

"BLD",8961,"KRN","B",.401,.401)

"BLD",8961,"KRN","B",.402,.402)

"BLD",8961,"KRN","B",.403,.403)

"BLD",8961,"KRN","B",.5,.5)

"BLD",8961,"KRN","B",.84,.84)

"BLD",8961,"KRN","B",3.6,3.6)

"BLD",8961,"KRN","B",3.8,3.8)

"BLD",8961,"KRN","B",9.2,9.2)

"BLD",8961,"KRN","B",9.8,9.8)

"BLD",8961,"KRN","B",19,19)

"BLD",8961,"KRN","B",19.1,19.1)

"BLD",8961,"KRN","B",101,101)

"BLD",8961,"KRN","B",409.61,409.61)

"BLD",8961,"KRN","B",771,771)

"BLD",8961,"KRN","B",779.2,779.2)

"BLD",8961,"KRN","B",870,870)

"BLD",8961,"KRN","B",8989.51,8989.51)

"BLD",8961,"KRN","B",8989.52,8989.52)

"BLD",8961,"KRN","B",8994,8994)

"BLD",8961,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8961,"QUES",0)
^9.62^^
"BLD",8961,"REQB",0)
^9.611^7^7
"BLD",8961,"REQB",1,0)
LEX*2.0*80^1
"BLD",8961,"REQB",2,0)
ICD*18.0*57^1
"BLD",8961,"REQB",3,0)
EC*2.0*112^1
"BLD",8961,"REQB",4,0)
EC*2.0*95^1
"BLD",8961,"REQB",5,0)
EC*2.0*47^1
"BLD",8961,"REQB",6,0)
PX*1.0*199^1
"BLD",8961,"REQB",7,0)
EC*2.0*119^1
"BLD",8961,"REQB","B","EC*2.0*112",3)

"BLD",8961,"REQB","B","EC*2.0*119",7)

"BLD",8961,"REQB","B","EC*2.0*47",5)

"BLD",8961,"REQB","B","EC*2.0*95",4)

"BLD",8961,"REQB","B","ICD*18.0*57",2)

"BLD",8961,"REQB","B","LEX*2.0*80",1)

"BLD",8961,"REQB","B","PX*1.0*199",6)

"FIA",721)
EVENT CAPTURE PATIENT
"FIA",721,0)
^ECH(
"FIA",721,0,0)
721
"FIA",721,0,1)
y^y^p^^^^n^^n
"FIA",721,0,10)

"FIA",721,0,11)

"FIA",721,0,"RLRO")

"FIA",721,0,"VR")
2.0^EC
"FIA",721,721)
1
"FIA",721,721,20)

"FIA",721,721,38)

"FIA",721,721.038)
1
"FIA",721,721.038,.01)

"INI")
DEL38^EC2P114
"KRN",19,9214,-1)
0^1
"KRN",19,9214,0)
EC GUI CONTEXT^EC GUI Context version 2.1.3.9^^B^^^^^^^^EVENT CAPTURE
"KRN",19,9214,1,0)
^19.06^1^1^3140123^^^^
"KRN",19,9214,1,1,0)
This is the Broker Client/Server type option for the Event Capture GUI option
"KRN",19,9214,99)
58583,58456
"KRN",19,9214,99.1)
62872,41516
"KRN",19,9214,"RPC",0)
^19.05P^57^57
"KRN",19,9214,"RPC",1,0)
EC DSSCATCHECK
"KRN",19,9214,"RPC",2,0)
EC FILER
"KRN",19,9214,"RPC",3,0)
EC GETBATPROCS
"KRN",19,9214,"RPC",4,0)
EC GETCAT
"KRN",19,9214,"RPC",5,0)
EC GETCPTLST
"KRN",19,9214,"RPC",6,0)
EC GETDSSECS
"KRN",19,9214,"RPC",7,0)
EC GETDSSUNIT
"KRN",19,9214,"RPC",8,0)
EC GETDSSUNITUSRS
"KRN",19,9214,"RPC",9,0)
EC GETECLOC
"KRN",19,9214,"RPC",10,0)
EC GETECSCATS
"KRN",19,9214,"RPC",11,0)
EC GETECSCREEN
"KRN",19,9214,"RPC",12,0)
EC GETECSDETAIL
"KRN",19,9214,"RPC",13,0)
EC GETECSPROCS
"KRN",19,9214,"RPC",14,0)
EC GETENCDXS
"KRN",19,9214,"RPC",15,0)
EC GETIEN
"KRN",19,9214,"RPC",16,0)
EC GETLIST
"KRN",19,9214,"RPC",17,0)
EC GETLOC
"KRN",19,9214,"RPC",18,0)
EC GETNATPX
"KRN",19,9214,"RPC",19,0)
EC GETPATCLASTAT
"KRN",19,9214,"RPC",20,0)
EC GETPATELIG
"KRN",19,9214,"RPC",21,0)
EC GETPATINFO
"KRN",19,9214,"RPC",22,0)
EC GETPATPROCS
"KRN",19,9214,"RPC",23,0)
EC GETPRODEFS
"KRN",19,9214,"RPC",24,0)
EC GETPROVIDER
"KRN",19,9214,"RPC",25,0)
EC GETPXLST
"KRN",19,9214,"RPC",26,0)
EC GETPXMODIFIER
"KRN",19,9214,"RPC",27,0)
EC GETPXREASON
"KRN",19,9214,"RPC",28,0)
EC GETSCNHELP
"KRN",19,9214,"RPC",29,0)
EC GETUSRDSSUNIT
"KRN",19,9214,"RPC",30,0)
EC REPORTS
"KRN",19,9214,"RPC",31,0)
EC VALIDATE SPREADSHEET DATA
"KRN",19,9214,"RPC",32,0)
ORWU USERINFO
"KRN",19,9214,"RPC",33,0)
ORWU HASKEY
"KRN",19,9214,"RPC",34,0)
ORWU DEVICE
"KRN",19,9214,"RPC",35,0)
SC PATIENT LOOKUP
"KRN",19,9214,"RPC",36,0)
ORWU NEWPERS
"KRN",19,9214,"RPC",37,0)
DDR GET DD HELP
"KRN",19,9214,"RPC",38,0)
DDR FINDER
"KRN",19,9214,"RPC",39,0)
DDR FIND1
"KRN",19,9214,"RPC",40,0)
DDR LISTER
"KRN",19,9214,"RPC",41,0)
EC GETDATE
"KRN",19,9214,"RPC",42,0)
EC CLASHELP
"KRN",19,9214,"RPC",43,0)
DDR GETS ENTRY DATA
"KRN",19,9214,"RPC",44,0)
DG CHK BS5 XREF Y/N
"KRN",19,9214,"RPC",45,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,9214,"RPC",46,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,9214,"RPC",47,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,9214,"RPC",48,0)
EC SPACEBAR
"KRN",19,9214,"RPC",49,0)
EC DIEDON
"KRN",19,9214,"RPC",50,0)
EC GETPATCH
"KRN",19,9214,"RPC",51,0)
EC GETVISITINFO
"KRN",19,9214,"RPC",52,0)
EC GETVERSION
"KRN",19,9214,"RPC",53,0)
ORWU DT
"KRN",19,9214,"RPC",54,0)
ECOB METHOD
"KRN",19,9214,"RPC",55,0)
ECOB FACTORY
"KRN",19,9214,"RPC",56,0)
EC RECENT VISITS
"KRN",19,9214,"RPC",57,0)
EC ICD10IMPLEMENTATIONDATE
"KRN",19,9214,"U")
EC GUI CONTEXT VERSION 2.1.3.9
"KRN",8994,2920,-1)
0^1
"KRN",8994,2920,0)
EC ICD10IMPLEMENTATIONDATE^ICD10^ECVICDDT^4^R^0^^1
"KRN",8994,2920,1,0)
^8994.01^2^2^3140124^^^
"KRN",8994,2920,1,1,0)
The EC ICD10IMPLEMENTATIONDATE RPC returns the Implementation Date of
"KRN",8994,2920,1,2,0)
ICD-10 Code Set in MM/DD/YYYY format OR  -1^Error Message.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",151,-1)
1^1
"PKG",151,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",151,20,0)
^9.402P^^
"PKG",151,22,0)
^9.49I^1^1
"PKG",151,22,1,0)
2.0^2960508^2960926^1
"PKG",151,22,1,"PAH",1,0)
114^3140310
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","EC2P114")
0^^B349693^n/a
"RTN","EC2P114",1,0)
EC2P114 ;ALB/MGD - EC ICD10 CLASS I REMEDIATION PRE-INSTALL ;1 Jul 2008
"RTN","EC2P114",2,0)
 ;;2.0;EVENT CAPTURE;**114**;8 May 96;Build 20
"RTN","EC2P114",3,0)
 ;
"RTN","EC2P114",4,0)
 Q
"RTN","EC2P114",5,0)
 ;
"RTN","EC2P114",6,0)
DEL38 ; Delete SECONDARY ICD-9 CODE (#38) Screen nodes from the EVENT CAPTURE PATIENT file (#721)
"RTN","EC2P114",7,0)
 D BMES^XPDUTL("Deleting old SECONDARY ICD-9 Screen nodes.")
"RTN","EC2P114",8,0)
 K ^DD(721,38,12) ; Delete the EXPLANATION
"RTN","EC2P114",9,0)
 K ^DD(721,38,12.1) ; Delete the SCREEN
"RTN","EC2P114",10,0)
 Q
"RTN","EC2P114",11,0)
 ; End of EC114
"RTN","ECEFPAT")
0^14^B75867358^B71296249
"RTN","ECEFPAT",1,0)
ECEFPAT ;ALB/JAM-Enter Event Capture Data Patient Filer ;11/21/12  16:29
"RTN","ECEFPAT",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,39,42,47,49,54,65,72,95,76,112,119,114**;8 May 96;Build 20
"RTN","ECEFPAT",3,0)
 ;
"RTN","ECEFPAT",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECEFPAT",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","ECEFPAT",6,0)
 ; 
"RTN","ECEFPAT",7,0)
FILE ;Used by the RPC broker to file patient encounter in file #721
"RTN","ECEFPAT",8,0)
 ;  Uses Supported IA 1995 - allow access to $$CPT^ICPTCOD
"RTN","ECEFPAT",9,0)
 ;
"RTN","ECEFPAT",10,0)
 ;     Variables passed in
"RTN","ECEFPAT",11,0)
 ;       ECIEN   - IEN of #721, if editing
"RTN","ECEFPAT",12,0)
 ;       ECDEL   - Delete record. 1- YES; 0- 0, null or undefine for NO.
"RTN","ECEFPAT",13,0)
 ;       ECDFN   - Patient IEN for file #2
"RTN","ECEFPAT",14,0)
 ;       ECDT    - Date and time of procedure
"RTN","ECEFPAT",15,0)
 ;       ECL     - Location
"RTN","ECEFPAT",16,0)
 ;       ECD     - DSS Unit
"RTN","ECEFPAT",17,0)
 ;       ECC     - Category
"RTN","ECEFPAT",18,0)
 ;       ECP     - Procedure
"RTN","ECEFPAT",19,0)
 ;       ECVOL   - Volume
"RTN","ECEFPAT",20,0)
 ;       ECU1..n - Provider (1 thru n), Prov 1 is required,other optional
"RTN","ECEFPAT",21,0)
 ;       ECMN    - Ordering Section
"RTN","ECEFPAT",22,0)
 ;       ECDUZ   - Entered/Edited by, pointer to #200
"RTN","ECEFPAT",23,0)
 ;       ECDX    - Primary Diagnosis
"RTN","ECEFPAT",24,0)
 ;       ECDXS   - Secondary Diagnosis; multiple, optional
"RTN","ECEFPAT",25,0)
 ;       EC4     - Associated Clinic, required if sending data to PCE
"RTN","ECEFPAT",26,0)
 ;       ECPTSTAT- Patient Status
"RTN","ECEFPAT",27,0)
 ;       ECPXREAS- Procedure reason, optional
"RTN","ECEFPAT",28,0)
 ;       ECPXREA2- Procedure reason #2, optional ;112
"RTN","ECEFPAT",29,0)
 ;       ECPXREA3- Procedure reason #3, optional ;112
"RTN","ECEFPAT",30,0)
 ;       ECMOD   - CPT modifiers, optional
"RTN","ECEFPAT",31,0)
 ;       ECLASS  - Classification, optional
"RTN","ECEFPAT",32,0)
 ;       ECELIG  - Eligibility, optional
"RTN","ECEFPAT",33,0)
 ;
"RTN","ECEFPAT",34,0)
 ;     Variable return
"RTN","ECEFPAT",35,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #721^Message
"RTN","ECEFPAT",36,0)
 ;
"RTN","ECEFPAT",37,0)
 N NODE,ECS,ECM,ECID,ECCPT,ECINT,ECPCE,ECX,ECERR,ECOUT,ECFLG,ECRES
"RTN","ECEFPAT",38,0)
 N ECFIL,ECPRV,ECCS
"RTN","ECEFPAT",39,0)
 ; Determine Active Coding System based on Date of Interest
"RTN","ECEFPAT",40,0)
 S ECCS=$S($G(ECDT)'="":ECDT,1:DT)
"RTN","ECEFPAT",41,0)
 S ECCS=$$SINFO^ICDEX("DIAG",ECCS) ; Supported by ICR 5747
"RTN","ECEFPAT",42,0)
 ;
"RTN","ECEFPAT",43,0)
 S ECFLG=1,ECERR=0 D CHKDT(1) I ECERR Q
"RTN","ECEFPAT",44,0)
 F ECX=1:1 Q:'$D(@("ECU"_ECX))  D  I ECERR Q
"RTN","ECEFPAT",45,0)
 .I @("ECU"_ECX)="" Q
"RTN","ECEFPAT",46,0)
 .S NODE=$$GET^XUA4A72(@("ECU"_ECX),ECDT) I +NODE'>0 S ECERR=1 D  Q
"RTN","ECEFPAT",47,0)
 ..S ^TMP($J,"ECMSG",1)="0^Provider doesn't have an active Person class"
"RTN","ECEFPAT",48,0)
 .S ECPRV(ECX)=@("ECU"_ECX)_"^^"_$S(ECX=1:"P",1:"S")
"RTN","ECEFPAT",49,0)
 I $G(ECIEN)'="" S ECFLG=0 D  I ECERR Q
"RTN","ECEFPAT",50,0)
 . I '$D(^ECH(ECIEN)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Pat IEN Not Found"
"RTN","ECEFPAT",51,0)
 I $G(ECDEL) K ^TMP($J,"ECMSG") D  Q
"RTN","ECEFPAT",52,0)
 .S ECVST=$P($G(^ECH(ECIEN,0)),"^",21) I ECVST D
"RTN","ECEFPAT",53,0)
 ..;* Resend all EC records with same Visit file entry to PCE
"RTN","ECEFPAT",54,0)
 ..;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECEFPAT",55,0)
 ..K EC2PCE S ECVAR1=$$FNDVST^ECUTL(ECVST,,.EC2PCE) K ECVAR1
"RTN","ECEFPAT",56,0)
 ..;Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECEFPAT",57,0)
 ..N ECPKG,ECSOU
"RTN","ECEFPAT",58,0)
 ..S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECSOU="EVENT CAPTURE DATA"
"RTN","ECEFPAT",59,0)
 ..S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST,ECPKG,ECSOU) K ECVST,VALQUIET
"RTN","ECEFPAT",60,0)
 ..;- Send to PCE task
"RTN","ECEFPAT",61,0)
 ..D PCETASK^ECPCEU(.EC2PCE) K EC2PCE
"RTN","ECEFPAT",62,0)
 .S DA=ECIEN,DIK="^ECH(" D ^DIK K DA,DIK,ECVV
"RTN","ECEFPAT",63,0)
 .S ^TMP($J,"ECMSG",1)="1^Procedure Deleted"
"RTN","ECEFPAT",64,0)
 I '$D(ECPRV) S ^TMP($J,"ECMSG",1)="0^No provider present" Q
"RTN","ECEFPAT",65,0)
 S ECDT=+ECDT,NODE=$G(^ECD(ECD,0)) I NODE="" D MSG Q
"RTN","ECEFPAT",66,0)
 S ECFN=$G(ECIEN),ECVOL=$G(ECVOL,1),ECS=$P(NODE,U,2),ECM=$P(NODE,U,3)
"RTN","ECEFPAT",67,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECEFPAT",68,0)
 ;S ECPTSTAT=$$INOUTPT^ECUTL0(ECDFN,+ECDT) ;pat stat may not need
"RTN","ECEFPAT",69,0)
 I $G(EC4)="" D GETCLN^ECEDF
"RTN","ECEFPAT",70,0)
 S ECID=$S(+EC4:$P($G(^SC(+EC4,0)),"^",7),1:""),ECINP=ECPTSTAT
"RTN","ECEFPAT",71,0)
 I $S($P(ECPCE,"~",2)="N":0,$P(ECPCE,"~",2)="O"&(ECINP'="O"):0,1:1) D
"RTN","ECEFPAT",72,0)
 .D CHKDT(2)
"RTN","ECEFPAT",73,0)
 I +EC4 S ECRES=$$CLNCK^SDUTL2(+EC4,0) I 'ECRES D  S ECERR=1
"RTN","ECEFPAT",74,0)
 .S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECEFPAT",75,0)
 Q:ECERR  I ECFLG D NEWIEN
"RTN","ECEFPAT",76,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEFPAT",77,0)
 ;validate CPT value and handle HCPCS name to IEN conversion (HD223010)
"RTN","ECEFPAT",78,0)
 S ECCPT=+$$CPT^ICPTCOD(ECCPT)
"RTN","ECEFPAT",79,0)
 S ECCPT=$S(+ECCPT>0:ECCPT,1:0)
"RTN","ECEFPAT",80,0)
 K DA,DR,DIE S DIE="^ECH(",(DA,ECFN)=ECIEN K ECIEN
"RTN","ECEFPAT",81,0)
 S DR=".01////"_ECFN_";1////"_ECDFN_";3////"_ECL_";4////"_ECS
"RTN","ECEFPAT",82,0)
 S DR=DR_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL
"RTN","ECEFPAT",83,0)
 S $P(^ECH(ECFN,0),"^",9)=ECP
"RTN","ECEFPAT",84,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",85,0)
 S DA=ECFN,DR="11////"_ECMN_";13////"_ECDUZ_";2////"_ECDT
"RTN","ECEFPAT",86,0)
 ;S ECPXREAS=$G(ECPXREAS) ;112
"RTN","ECEFPAT",87,0)
 D CVTREAS Q:$G(ECERR)  ;119 Convert reasons from entries in 720.4 to entries in 720.5 before storing.
"RTN","ECEFPAT",88,0)
 S DR=DR_";19////"_$S(+ECCPT:ECCPT,1:"@")_";20////"_ECDX
"RTN","ECEFPAT",89,0)
 S DR=DR_";26////"_$G(EC4)_";27////"_$G(ECID)_";29////"_ECPTSTAT
"RTN","ECEFPAT",90,0)
 S DR=DR_";34////"_$S($G(ECPXREAS)="":"@",1:ECPXREAS) ;112
"RTN","ECEFPAT",91,0)
 S DR=DR_";43////"_$S($G(ECPXREA2)="":"@",1:ECPXREA2) ;112
"RTN","ECEFPAT",92,0)
 S DR=DR_";44////"_$S($G(ECPXREA3)="":"@",1:ECPXREA3) ;112
"RTN","ECEFPAT",93,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",94,0)
 I ECDX S ^DISV(DUZ,"^ICD9(")=ECDX  ;last ICD9 code
"RTN","ECEFPAT",95,0)
 S ECX=$O(ECPRV("A"),-1) I ECX'="" S ^DISV(DUZ,"^VA(200,")=+ECPRV(ECX)
"RTN","ECEFPAT",96,0)
 ;Remove Old CPT modifiers
"RTN","ECEFPAT",97,0)
 I 'ECFLG D
"RTN","ECEFPAT",98,0)
 . K OLDMOD S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECEFPAT",99,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  S OLDMOD(DA)="" D ^DIK
"RTN","ECEFPAT",100,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"MOD")
"RTN","ECEFPAT",101,0)
 .;Remove old secondary diagnosis codes
"RTN","ECEFPAT",102,0)
 . K OLDDXS S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECEFPAT",103,0)
 . F  S DA=$O(^ECH(ECDA,"DX",DA)) Q:'DA  S OLDDXS(DA)="" D ^DIK
"RTN","ECEFPAT",104,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"DX")
"RTN","ECEFPAT",105,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",106,0)
 ;File multiple providers
"RTN","ECEFPAT",107,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRV,.ECOUT) K ECOUT
"RTN","ECEFPAT",108,0)
 I 'ECFIL D RECDEL,MSG Q
"RTN","ECEFPAT",109,0)
 ;File CPT modifiers
"RTN","ECEFPAT",110,0)
 I $G(ECMOD)'="" D
"RTN","ECEFPAT",111,0)
 . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",112,0)
 . S DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECEFPAT",113,0)
 . F ECX=1:1:$L(ECMOD,"^") S MODIEN=$P(ECMOD,U,ECX) I +MODIEN>0 D
"RTN","ECEFPAT",114,0)
 . . K DD,DO S X=MODIEN D FILE^DICN
"RTN","ECEFPAT",115,0)
 . K MODIEN,DIC
"RTN","ECEFPAT",116,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",117,0)
 ; File multiple secondary diagnosis codes
"RTN","ECEFPAT",118,0)
 I $G(ECDXS)'="" D
"RTN","ECEFPAT",119,0)
 . S DXS="",DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",120,0)
 . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECDXY=ECDX K ECDXX
"RTN","ECEFPAT",121,0)
 . F ECX=1:1:$L(ECDXS,"^") S DXSIEN=$P(ECDXS,U,ECX) I +DXSIEN>0 D
"RTN","ECEFPAT",122,0)
 . . ; Retrieve ICD data - Supported by ICR 5747
"RTN","ECEFPAT",123,0)
 . . S DXCDE=$$ICDDX^ICDEX(DXSIEN,ECDT,+ECCS,"I") Q:+DXCDE<0  I '$P(DXCDE,U,10) Q
"RTN","ECEFPAT",124,0)
 . . K DD,DO S X=DXSIEN D FILE^DICN
"RTN","ECEFPAT",125,0)
 . . S DXCDE=$P(DXCDE,U,2),ECDXX(DXCDE)=DXSIEN
"RTN","ECEFPAT",126,0)
 . . S ^DISV(DUZ,"^ICD9(")=DXSIEN  ;last ICD9 code
"RTN","ECEFPAT",127,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEFPAT",128,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEFPAT",129,0)
 . K PXUPD,ECDXY,ECDXX,DXS,DXSIEN,DIC,DXCDE,DA,DD,DO
"RTN","ECEFPAT",130,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",131,0)
 S DA=ECFN
"RTN","ECEFPAT",132,0)
 ;File classification AO^IR^SC^EC^MST^HNC^CV^SHAD
"RTN","ECEFPAT",133,0)
 I $G(ECLASS)'="" D
"RTN","ECEFPAT",134,0)
 . S CLSTR="21^22^24^23^35^39^40^41",DR=""
"RTN","ECEFPAT",135,0)
 . F ECX=1:1:$L(CLSTR,"^") D
"RTN","ECEFPAT",136,0)
 . . S DR=DR_$P(CLSTR,U,ECX)_"////"_$P(ECLASS,U,ECX)_";"
"RTN","ECEFPAT",137,0)
 . S DR=$E(DR,1,($L(DR)-1)) D ^DIE
"RTN","ECEFPAT",138,0)
 . K CLSTR,DR,DIE
"RTN","ECEFPAT",139,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",140,0)
 ;
"RTN","ECEFPAT",141,0)
PCE ; format PCE data to send
"RTN","ECEFPAT",142,0)
 I ($P(ECPCE,"~",2)="N")!($P(ECPCE,"~",2)="O"&(ECINP'="O")) D  Q
"RTN","ECEFPAT",143,0)
 .S ^TMP($J,"ECMSG",1)="1^Record Filed"
"RTN","ECEFPAT",144,0)
 D:ECFLG PCE^ECBEN2U I 'ECFLG S EC(0)=^ECH(ECFN,0) D PCEE^ECBEN2U K EC
"RTN","ECEFPAT",145,0)
 I $G(ECOUT)!(ECERR) D  Q
"RTN","ECEFPAT",146,0)
 . D RECDEL S STR=$S($G(^ECH(ECFN,"R")):^("R"),1:" PCE Data Missing")
"RTN","ECEFPAT",147,0)
 . S ^TMP($J,"ECMSG",1)="0^Record Not Filed, "_STR K STR
"RTN","ECEFPAT",148,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_$G(ECIEN)
"RTN","ECEFPAT",149,0)
 Q
"RTN","ECEFPAT",150,0)
 ;
"RTN","ECEFPAT",151,0)
NEWIEN ;Create new IEN in file #721
"RTN","ECEFPAT",152,0)
 N DIC,DA,DD,DO,ECRN
"RTN","ECEFPAT",153,0)
RLCK L +^ECH(0):60 S ECRN=$P(^ECH(0),"^",3)+1
"RTN","ECEFPAT",154,0)
 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G RLCK
"RTN","ECEFPAT",155,0)
 L -^ECH(0) S DIC(0)="L",DIC="^ECH(",X=ECRN
"RTN","ECEFPAT",156,0)
 D FILE^DICN S ECIEN=+Y
"RTN","ECEFPAT",157,0)
 Q
"RTN","ECEFPAT",158,0)
RECDEL ; Delete record
"RTN","ECEFPAT",159,0)
 ;restore old data
"RTN","ECEFPAT",160,0)
 I 'ECFLG D  Q
"RTN","ECEFPAT",161,0)
 . I $O(OLDMOD("")) D
"RTN","ECEFPAT",162,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",163,0)
 . . S DIC="^ECH("_DA(1)_","_"""MOD"""_",",ECX=0
"RTN","ECEFPAT",164,0)
 . . F  S ECX=$O(OLDMOD(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",165,0)
 . I $O(OLDDXS("")) D
"RTN","ECEFPAT",166,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",167,0)
 . . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECX=0
"RTN","ECEFPAT",168,0)
 . . F  S ECX=$O(OLDDXS(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",169,0)
 . K DIC,DA,DD,DO,OLDMOD,OLDDXS,ECX
"RTN","ECEFPAT",170,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK K DA,DIK
"RTN","ECEFPAT",171,0)
 Q
"RTN","ECEFPAT",172,0)
MSG ;Record not filed
"RTN","ECEFPAT",173,0)
 S ^TMP($J,"ECMSG",1)="0^Record not Filed"
"RTN","ECEFPAT",174,0)
 Q
"RTN","ECEFPAT",175,0)
CHKDT(FLG) ;Required Data Check
"RTN","ECEFPAT",176,0)
 N I,C
"RTN","ECEFPAT",177,0)
 S C=1
"RTN","ECEFPAT",178,0)
 I FLG=1 D  Q
"RTN","ECEFPAT",179,0)
 .F I="ECD","ECC","ECL","ECDT","ECP","ECDFN","ECMN","ECDUZ","ECPTSTAT" D
"RTN","ECEFPAT",180,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",181,0)
 .I $G(ECDEL),$D(ECIEN) K ^TMP($J,"ECMSG") S ECERR=0
"RTN","ECEFPAT",182,0)
 ;check PCE data
"RTN","ECEFPAT",183,0)
 I FLG=2 D  Q
"RTN","ECEFPAT",184,0)
 .F I="EC4","ECDX" D  Q
"RTN","ECEFPAT",185,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key PCE data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",186,0)
 Q
"RTN","ECEFPAT",187,0)
VALDATA ;validate data
"RTN","ECEFPAT",188,0)
 N ECRRX
"RTN","ECEFPAT",189,0)
 D CHK^DIE(721,1,,"`"_ECDFN,.ECRRX) I ECRRX'=ECDFN D  Q
"RTN","ECEFPAT",190,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Patient"
"RTN","ECEFPAT",191,0)
 D CHK^DIE(721,2,,ECDT,.ECRRX) I ECRRX'=ECDT D  Q
"RTN","ECEFPAT",192,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure Date"
"RTN","ECEFPAT",193,0)
 D CHK^DIE(721,3,,"`"_ECL,.ECRRX) I ECRRX'=ECL D  Q
"RTN","ECEFPAT",194,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECEFPAT",195,0)
 D CHK^DIE(721,6,,"`"_ECD,.ECRRX) I ECRRX'=ECD D  Q
"RTN","ECEFPAT",196,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECEFPAT",197,0)
 D CHK^DIE(721,7,,"`"_ECC,.ECRRX) I ECRRX'=ECC D  Q
"RTN","ECEFPAT",198,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECEFPAT",199,0)
 D  I ECERR Q
"RTN","ECEFPAT",200,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP,ECDT) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECEFPAT",201,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECEFPAT",202,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECEFPAT",203,0)
 D CHK^DIE(721,11,,"`"_ECMN,.ECRRX) I ECRRX'=ECMN D  Q
"RTN","ECEFPAT",204,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Ordering Section"
"RTN","ECEFPAT",205,0)
 D CHK^DIE(721,20,,"`"_ECDX,.ECRRX) I ECRRX'=ECDX D  Q
"RTN","ECEFPAT",206,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Primary Diagnosis"
"RTN","ECEFPAT",207,0)
 I $G(EC4)'="" D CHK^DIE(721,26,,"`"_EC4,.ECRRX) I ECRRX'=EC4 D  Q
"RTN","ECEFPAT",208,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECEFPAT",209,0)
 Q
"RTN","ECEFPAT",210,0)
 ;
"RTN","ECEFPAT",211,0)
CVTREAS ;119 Section added to convert procedure reason IEN in 720.4 to EC Code Screen/Procedure reason link in file 720.5.
"RTN","ECEFPAT",212,0)
 N SCREEN,SCREENID,I
"RTN","ECEFPAT",213,0)
 S SCREEN=ECL_"-"_ECD_"-"_+$G(ECC,0)_"-"_ECP ;creates event code screen
"RTN","ECEFPAT",214,0)
 S SCREENID=$O(^ECJ("B",SCREEN,0)) I '+SCREENID S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Event Code Screen" Q  ;event code screen doesn't exist
"RTN","ECEFPAT",215,0)
 F I="ECPXREAS","ECPXREA2","ECPXREA3" I $G(@I) S @I=$$GETVAL(SCREENID,@I)
"RTN","ECEFPAT",216,0)
 Q
"RTN","ECEFPAT",217,0)
GETVAL(SCREENO,REASNO) ;119 section added to get link from 720.5 or add it if necessary
"RTN","ECEFPAT",218,0)
 N LINK,DIC,X,Y
"RTN","ECEFPAT",219,0)
 S LINK=$O(^ECL("AD",SCREENO,REASNO,0))
"RTN","ECEFPAT",220,0)
 I $G(LINK) Q LINK  ;Entry in 720.5 exists, return IEN
"RTN","ECEFPAT",221,0)
 S DIC="^ECL(",DIC(0)="",X=REASNO,DIC("DR")=".02////"_SCREENO
"RTN","ECEFPAT",222,0)
 K DD,DO D FILE^DICN
"RTN","ECEFPAT",223,0)
 S LINK=$S(+Y:+Y,1:"") ;New IEN or null if not added
"RTN","ECEFPAT",224,0)
 Q LINK
"RTN","ECPCER")
0^10^B35305594^B32347801
"RTN","ECPCER",1,0)
ECPCER ;BIR/JPW - Event Capture PCE Data Summary ;11/7/12  11:42
"RTN","ECPCER",2,0)
 ;;2.0;EVENT CAPTURE;**4,18,23,47,72,95,119,114**;8 May 96;Build 20
"RTN","ECPCER",3,0)
 ;
"RTN","ECPCER",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECPCER",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","ECPCER",6,0)
 ;
"RTN","ECPCER",7,0)
EN ; entry point
"RTN","ECPCER",8,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPCER",9,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPCER",10,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPCER",11,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPCER",12,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="ECS/PCE PATIENT SUMMARY",ZTRTN="SUM^ECPCER",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPCER",13,0)
SUM ; entry when queued
"RTN","ECPCER",14,0)
 N ECEPN,ECPCODE,ECEXDS,ECEI ;119
"RTN","ECPCER",15,0)
 I $G(ECPTYP)="E" D EXPORT,^ECKILL Q  ;119
"RTN","ECPCER",16,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPCER",17,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPCER",18,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D HDR1
"RTN","ECPCER",19,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F  S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F  S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPCER",20,0)
 D FOOTER  ;print footer on last page
"RTN","ECPCER",21,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPCER",22,0)
 W ! I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPCER",23,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPCER",24,0)
 Q
"RTN","ECPCER",25,0)
PAGE ; end of page
"RTN","ECPCER",26,0)
 I $G(X)'["?" D FOOTER
"RTN","ECPCER",27,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPCER",28,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPCER",29,0)
 D HDR1
"RTN","ECPCER",30,0)
 Q
"RTN","ECPCER",31,0)
HDR1 ; print heading without categories
"RTN","ECPCER",32,0)
 W:$Y @IOF
"RTN","ECPCER",33,0)
 ;W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"CPT CODE (DIAGNOSIS)",!?78,"PROCEDURE (CPT) MODIFIER"
"RTN","ECPCER",34,0)
 W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"PROVIDER"
"RTN","ECPCER",35,0)
 ;W !,"LOCATION",?25,"CLINIC (DSS ID)",?78,"PROVIDER",!
"RTN","ECPCER",36,0)
 W !,"LOCATION",?25,"CLINIC (DSS ID)",?78,"CPT CODE"
"RTN","ECPCER",37,0)
 W !,?25,"DIAGNOSIS",?78,"PROCEDURE (CPT) MODIFIER",!
"RTN","ECPCER",38,0)
 F LINE=1:1:132 W "-"
"RTN","ECPCER",39,0)
 W !
"RTN","ECPCER",40,0)
 Q
"RTN","ECPCER",41,0)
FOOTER ;print page footer
"RTN","ECPCER",42,0)
 W !!?4,"Volume totals may represent days, minutes, numbers of procedures"
"RTN","ECPCER",43,0)
 W !?4,"and/or a combination of these."
"RTN","ECPCER",44,0)
 Q
"RTN","ECPCER",45,0)
 ;
"RTN","ECPCER",46,0)
SET ; set data
"RTN","ECPCER",47,0)
 I $G(ECPTYP)'="E" I $Y+10>IOSL D PAGE I ECOUT Q  ;119
"RTN","ECPCER",48,0)
 Q:'$D(^ECH(ECFN,"PCE"))  S ECEC=$G(^ECH(ECFN,"PCE"))
"RTN","ECPCER",49,0)
 I '$P($G(^ECH(ECFN,"P")),"^",7) Q
"RTN","ECPCER",50,0)
 S ECL=+$P(ECEC,"~",4),ECCPT=+$P(ECEC,"~",10),ECD=+$P(ECEC,"~",3),ECV=+$P(ECEC,"~",9),ECDX=+$P(ECEC,"~",11),ECID=$P(ECEC,"~",5),ECDT=+$P(ECEC,"~")
"RTN","ECPCER",51,0)
 S ECDN=$S($P($G(^SC(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",52,0)
 S ECPS=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"~")),ECCPT=$S(+ECPS>0:$P(ECPS,"^",2),1:""),ECEPN=$S(+ECPS>0:$P(ECPS,U,3),1:""),ECPS=$S(+ECPS>0:$P(ECPS,"^",2)_" "_$P(ECPS,"^",3),1:"CPT NAME UNKNOWN") ;119
"RTN","ECPCER",53,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",54,0)
 S ECID=$S($P($G(^DIC(40.7,ECID,0)),"^",2)]"":$P(^(0),"^",2),1:"DSS ID UNKNOWN")
"RTN","ECPCER",55,0)
 ; Changes for ICD10
"RTN","ECPCER",56,0)
 N ECCS
"RTN","ECPCER",57,0)
 S ECCS=$$SINFO^ICDEX("DIAG",$P(ECEC,"~")) ; Supported by ICR 5747
"RTN","ECPCER",58,0)
 S ECDXN=$$ICDDX^ICDEX(ECDX,$P(ECEC,"~"),+ECCS,"I") ; Supported by ICR 5747
"RTN","ECPCER",59,0)
 S ECDXN=$S($P(ECDXN,U,1)=-1:"UNKNOWN",1:$P(ECDXN,U,2))
"RTN","ECPCER",60,0)
 S ECPN=$S($P(ECEC,"~",16)]"":$P(ECEC,"~",16),1:ECPS)
"RTN","ECPCER",61,0)
 S ECPCODE="" ;119
"RTN","ECPCER",62,0)
 I $P(^ECH(ECFN,0),U,9)["EC" S:$P(ECEC,"~",16)]"" ECEPN=$$GET1^DIQ(721,ECFN,8) S ECPCODE=$P($P(ECEC,"~",16)," ") ;119
"RTN","ECPCER",63,0)
 S ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPCER",64,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPCER",65,0)
 S ECDT=$$FMTE^XLFDT(ECDT)
"RTN","ECPCER",66,0)
 ;get secondary diagnosis codes, ALB/JAM
"RTN","ECPCER",67,0)
 S DXS=0,ECI=2,ECEI=1 F  S DXS=$O(^ECH(ECFN,"DX",DXS)) Q:'DXS  D  ;119
"RTN","ECPCER",68,0)
 . S DXSIEN=+$G(^ECH(ECFN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECPCER",69,0)
 . S ECDXSN=$$ICDDX^ICDEX(DXSIEN,$P(ECEC,"~"),+ECCS,"I")
"RTN","ECPCER",70,0)
 . S ECDXSN=$S($P(ECDXSN,U,1)=-1:"UNKNOWN",1:$P(ECDXSN,U,2))
"RTN","ECPCER",71,0)
 . I $L($G(ECDXS(ECI)))+$L(ECDXSN)>52 S ECI=ECI+1
"RTN","ECPCER",72,0)
 . I $G(ECDXS(ECI))="" S ECDXS(ECI)="Secondary Dx: "
"RTN","ECPCER",73,0)
 . S ECDXS(ECI)=ECDXS(ECI)_$S($L(ECDXS(ECI))=14:"",1:", ")_ECDXSN
"RTN","ECPCER",74,0)
 . S ECEXDS(ECEI)=ECDXSN,ECEI=ECEI+1 ;119
"RTN","ECPCER",75,0)
 S ECMOD="" I $D(^ECH(ECFN,"PCE1")) S ECMOD=^("PCE1")
"RTN","ECPCER",76,0)
 I $G(ECPTYP)="E" Q  ;119
"RTN","ECPCER",77,0)
PRT W !,ECDT,?25,ECPN_" ("_ECV_")",?78,ECUN,!
"RTN","ECPCER",78,0)
 W $E(ECLN,1,22),?25,ECDN_" ("_ECID_")",?78,ECCPT,!
"RTN","ECPCER",79,0)
 W ?25,"Primary DX: ",ECDXN
"RTN","ECPCER",80,0)
 ;ALB/JAM print CPT modifiers and secondary diagnosis code
"RTN","ECPCER",81,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D  I ECOUT Q
"RTN","ECPCER",82,0)
 . S MODESC=$$MODP^ICPTMOD(ECCPT,MOD,"E",$P(ECEC,"~")) I +MODESC'>0 Q
"RTN","ECPCER",83,0)
 . W ?25,$S(I>1:$G(ECDXS(I)),1:""),?79,"- ",MOD," ",$P(MODESC,"^",2),!
"RTN","ECPCER",84,0)
 . K ECDXS(I) I ($Y+6)>IOSL D PAGE I ECOUT Q
"RTN","ECPCER",85,0)
 W:ECMOD="" ! S DXS=""
"RTN","ECPCER",86,0)
 F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  W ?25,ECDXS(DXS),!
"RTN","ECPCER",87,0)
 K I,MOD,MODESC,ECI,DXS,DXSIEN,ECDXS,ECDXN,ECDXSN
"RTN","ECPCER",88,0)
 Q
"RTN","ECPCER",89,0)
EXPORT ;Produce exportable version, added in patch 119
"RTN","ECPCER",90,0)
 N CNT,DATE,ECFN,I,MOD,MODESC
"RTN","ECPCER",91,0)
 S CNT=1
"RTN","ECPCER",92,0)
 S ^TMP($J,"ECRPT",CNT)="PATIENT^PROCEDURE DATE/TIME^LOCATION^CLINIC^DSS ID^CPT CODE^PROCEDURE CODE^PROCEDURE NAME^PROCEDURE VOLUME^CPT MOD 1^CPT MOD 2^CPT MOD 3^PROVIDER^PRIMARY DIAGNOSIS^2ND DIAG 1^2ND DIAG 2^2ND DIAG 3^2ND DIAG 4"
"RTN","ECPCER",93,0)
 S DATE=ECSD F  S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'+DATE!(DATE>ECED)  S ECFN=0 F  S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'+ECFN  D
"RTN","ECPCER",94,0)
 .Q:'$D(^ECH(ECFN,"PCE"))
"RTN","ECPCER",95,0)
 .I '$P($G(^ECH(ECFN,"P")),U,7) Q
"RTN","ECPCER",96,0)
 .K ECEXDS D SET
"RTN","ECPCER",97,0)
 .S CNT=CNT+1
"RTN","ECPCER",98,0)
 .S ^TMP($J,"ECRPT",CNT)=ECPAT_U_ECDT_U_ECLN_U_ECDN_U_ECID_U_ECCPT_U_ECPCODE_U_ECEPN_U_ECV
"RTN","ECPCER",99,0)
 .F I=1:1:3 D
"RTN","ECPCER",100,0)
 ..S MOD=$P(ECMOD,";",I),MODESC="" I MOD'="" S MODESC=$$MODP^ICPTMOD(ECCPT,MOD,"E",$P(ECEC,"~")) S MODESC=$S(+MODESC>0:MOD_" "_$P(MODESC,U,2),1:"")
"RTN","ECPCER",101,0)
 ..S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_MODESC
"RTN","ECPCER",102,0)
 .S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_ECUN_U_ECDXN
"RTN","ECPCER",103,0)
 .F I=1:1:4 S ^TMP($J,"ECRPT",CNT)=^TMP($J,"ECRPT",CNT)_U_$G(ECEXDS(I))
"RTN","ECPCER",104,0)
 Q
"RTN","ECUERPC")
0^1^B57028774^B51135256
"RTN","ECUERPC",1,0)
ECUERPC ;ALB/JAM - Event Capture Data Entry Broker Utilities ;29 Oct 07
"RTN","ECUERPC",2,0)
 ;;2.0;EVENT CAPTURE;**25,32,33,46,47,59,72,95,114**;8 May 96;Build 20
"RTN","ECUERPC",3,0)
 ;
"RTN","ECUERPC",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECUERPC",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR5747
"RTN","ECUERPC",6,0)
 ;
"RTN","ECUERPC",7,0)
USRUNT(RESULTS,ECARY) ;
"RTN","ECUERPC",8,0)
 ;This broker call returns an array of DSS units for a user & location
"RTN","ECUERPC",9,0)
 ;        RPC: EC GETUSRDSSUNIT
"RTN","ECUERPC",10,0)
 ;INPUTS     ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",11,0)
 ;            1. ECL   - Location IEN (if define gives User's DSS 
"RTN","ECUERPC",12,0)
 ;                       units for a location)
"RTN","ECUERPC",13,0)
 ;            2. ECDUZ - New Person IEN (if define gives list of 
"RTN","ECUERPC",14,0)
 ;                       DSS Units available to user)
"RTN","ECUERPC",15,0)
 ;
"RTN","ECUERPC",16,0)
 ;OUTPUTS     RESULTS - Array of DSS Units. Data pieces as follows:-
"RTN","ECUERPC",17,0)
 ;            PIECE - Description
"RTN","ECUERPC",18,0)
 ;              1     IEN of file 724
"RTN","ECUERPC",19,0)
 ;              2     Name of DSS Unit
"RTN","ECUERPC",20,0)
 ;              3     Send to PCE Flag
"RTN","ECUERPC",21,0)
 ;              4     Data Entry Date/Time Default
"RTN","ECUERPC",22,0)
 N ECL,ECDUZ,CNT,STR,DPT,IEN
"RTN","ECUERPC",23,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",24,0)
 S ECL=$P(ECARY,U),ECDUZ=$P(ECARY,U,2) I ECL="",ECDUZ="" Q
"RTN","ECUERPC",25,0)
 ;S ECDUZ=$G(DUZ,U),ECL=$P(ECARY,U) I (ECDUZ="")!(ECL="") Q
"RTN","ECUERPC",26,0)
 K ^TMP($J,"ECUSRUNT") S (DPT,CNT)=0
"RTN","ECUERPC",27,0)
 I ECL'="",ECDUZ="" S ECDUZ=$G(DUZ,U) I ECDUZ="" Q
"RTN","ECUERPC",28,0)
 I $D(^XUSEC("ECALLU",ECDUZ)) S DPT="" D
"RTN","ECUERPC",29,0)
 .I ECL="" S ^TMP($J,"ECUSRUNT",CNT+1)="ALL^ALL" Q
"RTN","ECUERPC",30,0)
 .I ECL="ALL" S ECL=""
"RTN","ECUERPC",31,0)
 .F  S DPT=$O(^ECD("B",DPT))  Q:DPT=""  S IEN=0 D
"RTN","ECUERPC",32,0)
 ..F  S IEN=$O(^ECD("B",DPT,IEN)) Q:'IEN  D UNTCHK
"RTN","ECUERPC",33,0)
 E  D
"RTN","ECUERPC",34,0)
 .I ECL="ALL" S ECL=""
"RTN","ECUERPC",35,0)
 .F  S DPT=$O(^VA(200,ECDUZ,"EC",DPT)) Q:'DPT  S IEN=DPT D UNTCHK
"RTN","ECUERPC",36,0)
 S RESULTS=$NA(^TMP($J,"ECUSRUNT"))
"RTN","ECUERPC",37,0)
 Q
"RTN","ECUERPC",38,0)
UNTCHK ;Check if DSS unit exist as event code screen and if active
"RTN","ECUERPC",39,0)
 N DSSF,DFD
"RTN","ECUERPC",40,0)
 ;I '$D(^ECJ("AP",ECL,IEN))!($P($G(^ECD(IEN,0)),U,6)) Q
"RTN","ECUERPC",41,0)
 I ECL'="",'$D(^ECJ("AP",ECL,IEN)) Q
"RTN","ECUERPC",42,0)
 I ($P($G(^ECD(IEN,0)),U,6))!('$P($G(^ECD(IEN,0)),U,8)) Q
"RTN","ECUERPC",43,0)
 S DSSF=$P(^ECD(IEN,0),"^",14) S:DSSF="" DSSF="N"
"RTN","ECUERPC",44,0)
 S DFD=$S($P(^ECD(IEN,0),"^",12)="N":"N",1:"X") ; added by VMP
"RTN","ECUERPC",45,0)
 S CNT=CNT+1,STR=IEN_"^"_$P(^ECD(IEN,0),"^")_U_DSSF_"^"_DFD
"RTN","ECUERPC",46,0)
 S ^TMP($J,"ECUSRUNT",CNT)=STR
"RTN","ECUERPC",47,0)
 Q
"RTN","ECUERPC",48,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUERPC",49,0)
 ;This broker entry point returns an array of categories for an Event 
"RTN","ECUERPC",50,0)
 ;Code screen based on location and DSS unit.
"RTN","ECUERPC",51,0)
 ;        RPC: EC GETECSCATS
"RTN","ECUERPC",52,0)
 ;INPUTS     ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",53,0)
 ;            ECL  - Location IEN
"RTN","ECUERPC",54,0)
 ;            ECD  - DSS Unit IEN
"RTN","ECUERPC",55,0)
 ;            ECCSTA-Active or inactive category
"RTN","ECUERPC",56,0)
 ;                   A-ctive (default), I-nactive, B-oth
"RTN","ECUERPC",57,0)
 ;
"RTN","ECUERPC",58,0)
 ;OUTPUTS     RESULTS - Array of categories. Data pieces as follows:-
"RTN","ECUERPC",59,0)
 ;            PIECE - Description
"RTN","ECUERPC",60,0)
 ;              1 - Category IEN
"RTN","ECUERPC",61,0)
 ;              2 - Category description
"RTN","ECUERPC",62,0)
 ;
"RTN","ECUERPC",63,0)
 N ECL,ECD,ECC,CNT,DATA,ECCSTA
"RTN","ECUERPC",64,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",65,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2) I (ECL="")!(ECD="") Q
"RTN","ECUERPC",66,0)
 S ECCSTA=$P(ECARY,U,3)
"RTN","ECUERPC",67,0)
 K ^TMP($J,"ECSCATS")
"RTN","ECUERPC",68,0)
 D CATS^ECHECK1
"RTN","ECUERPC",69,0)
 M ^TMP($J,"ECSCATS")=ECC
"RTN","ECUERPC",70,0)
 S RESULTS=$NA(^TMP($J,"ECSCATS"))
"RTN","ECUERPC",71,0)
 Q
"RTN","ECUERPC",72,0)
PROC(RESULTS,ECARY) ;
"RTN","ECUERPC",73,0)
 ;This broker entry point returns an array of procedures for an Event 
"RTN","ECUERPC",74,0)
 ;Code screen (file #720.3) based on location, DSS unit, and Category
"RTN","ECUERPC",75,0)
 ;        RPC: EC GETECSPROCS
"RTN","ECUERPC",76,0)
 ;INPUTS     ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",77,0)
 ;            ECL  - Location IEN
"RTN","ECUERPC",78,0)
 ;            ECD  - DSS Unit IEN
"RTN","ECUERPC",79,0)
 ;            ECC  - Category IEN
"RTN","ECUERPC",80,0)
 ;            ECDT - Procedure Date
"RTN","ECUERPC",81,0)
 ;
"RTN","ECUERPC",82,0)
 ;OUTPUTS     RESULTS - Array of procedures. Data pieces as follows:-
"RTN","ECUERPC",83,0)
 ;            PIECE - Description
"RTN","ECUERPC",84,0)
 ;              1  - EC National Number SPACE Procedure Name SPACE
"RTN","ECUERPC",85,0)
 ;                - [Synonym]
"RTN","ECUERPC",86,0)
 ;              2  - Procedure Code
"RTN","ECUERPC",87,0)
 ;              3  - CPT Code
"RTN","ECUERPC",88,0)
 ;              4  - Default volume (1 if no default volume)
"RTN","ECUERPC",89,0)
 ;              5  - Event code screen IEN
"RTN","ECUERPC",90,0)
 ;
"RTN","ECUERPC",91,0)
 N ECL,ECD,ECC,CNT,DATA,STR,ECCPT,PX
"RTN","ECUERPC",92,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",93,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2),ECC=$P(ECARY,U,3) S:ECC="" ECC=0
"RTN","ECUERPC",94,0)
 I (ECL="")!(ECD="") Q
"RTN","ECUERPC",95,0)
 S ECDT=$P(ECARY,U,4)
"RTN","ECUERPC",96,0)
 K ^TMP($J,"ECPRO")
"RTN","ECUERPC",97,0)
 D PROS^ECHECK1
"RTN","ECUERPC",98,0)
 S CNT=0 F  S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT  D
"RTN","ECUERPC",99,0)
 .S DATA=^TMP("ECPRO",$J,CNT),PX=$P(DATA,U)
"RTN","ECUERPC",100,0)
 .S ECCPT=$S(PX["EC":$P($G(^EC(725,+PX,0)),"^",5),1:+PX)
"RTN","ECUERPC",101,0)
 .S STR=$P(DATA,U,5)_" "_$P(DATA,U,4)_" ["_$P(DATA,U,3)_"]"_U_PX
"RTN","ECUERPC",102,0)
 .S STR=STR_U_ECCPT_U_$S($P(DATA,U,6):+$P(DATA,U,6),1:1)_U_$P(DATA,U,2)
"RTN","ECUERPC",103,0)
 .S ^TMP($J,"ECPRO",CNT)=STR
"RTN","ECUERPC",104,0)
 S RESULTS=$NA(^TMP($J,"ECPRO"))
"RTN","ECUERPC",105,0)
 K ^TMP("ECPRO",$J)
"RTN","ECUERPC",106,0)
 Q
"RTN","ECUERPC",107,0)
ECPXMOD(RESULTS,ECARY) ;
"RTN","ECUERPC",108,0)
 ;Broker call returns modifier entries for a CPT Procedure
"RTN","ECUERPC",109,0)
 ;        RPC: EC GETPXMODIFIER
"RTN","ECUERPC",110,0)
 ;INPUTS   ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",111,0)
 ;          ECCPT - CPT code ien (file #81)
"RTN","ECUERPC",112,0)
 ;          ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC",113,0)
 ;
"RTN","ECUERPC",114,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC",115,0)
 ;          2-character modifier^modifer name^modifier ien #81.3
"RTN","ECUERPC",116,0)
 ;
"RTN","ECUERPC",117,0)
 N CNT,SUB,ECCPT,ECDT,DATA,ECMOD
"RTN","ECUERPC",118,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",119,0)
 S ECCPT=$P(ECARY,U),ECDT=$P(ECARY,U,2) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC",120,0)
 I ECCPT="" Q
"RTN","ECUERPC",121,0)
 K ^TMP($J,"ECPXMODS") S (SUB,CNT)=0
"RTN","ECUERPC",122,0)
 S DATA=$$CODM^ICPTCOD(ECCPT,"ECMOD","",ECDT) I +DATA<0 Q
"RTN","ECUERPC",123,0)
 F  S SUB=$O(ECMOD(SUB)) Q:SUB=""  I $P(ECMOD(SUB),U,2)'="" D
"RTN","ECUERPC",124,0)
 . I +$$MODP^ICPTMOD(ECCPT,$P(ECMOD(SUB),U,2),"I",ECDT)>0 D
"RTN","ECUERPC",125,0)
 . . S CNT=CNT+1,^TMP($J,"ECPXMODS",CNT)=SUB_U_ECMOD(SUB)
"RTN","ECUERPC",126,0)
 S RESULTS=$NA(^TMP($J,"ECPXMODS"))
"RTN","ECUERPC",127,0)
 Q
"RTN","ECUERPC",128,0)
PRVDER(RESULTS,ECARY) ;
"RTN","ECUERPC",129,0)
 ;remove this rpc before release;JAM 6/4/01
"RTN","ECUERPC",130,0)
 ;This broker entry point returns an array of valid providers
"RTN","ECUERPC",131,0)
 ;        RPC: EC GETPROVIDER
"RTN","ECUERPC",132,0)
 ;INPUTS     ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",133,0)
 ;            ECDT  - Procedure date
"RTN","ECUERPC",134,0)
 ;
"RTN","ECUERPC",135,0)
 ;OUTPUTS     RESULTS - Array of providers. Data pieces as follows:-
"RTN","ECUERPC",136,0)
 ;            PIECE - Description
"RTN","ECUERPC",137,0)
 ;             IEN of file 200^Provider Name^occupation^specialty^
"RTN","ECUERPC",138,0)
 ;             subspecialty
"RTN","ECUERPC",139,0)
 ;
"RTN","ECUERPC",140,0)
 N IEN,CNT,ECUTN,KEY,USR
"RTN","ECUERPC",141,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",142,0)
 S ECDT=$P($G(ECARY),U),ECDT=$S(ECDT="":DT,1:ECDT)
"RTN","ECUERPC",143,0)
 K ^TMP($J,"ECPRVDRS") S CNT=0
"RTN","ECUERPC",144,0)
 F KEY="PROVIDER" S IEN=0 D
"RTN","ECUERPC",145,0)
 .F  S IEN=$O(^XUSEC(KEY,IEN)) Q:'IEN  S USR=$G(^VA(200,IEN,0)) D:USR'=""
"RTN","ECUERPC",146,0)
 ..S ECUTN=$$GET^XUA4A72(IEN,ECDT) I +ECUTN'>0 Q
"RTN","ECUERPC",147,0)
 ..S CNT=CNT+1,^TMP($J,"ECPRVDRS",CNT)=IEN_U_$P(USR,U)_U_$P(ECUTN,2,4)
"RTN","ECUERPC",148,0)
 S RESULTS=$NA(^TMP($J,"ECPRVDRS"))
"RTN","ECUERPC",149,0)
 Q
"RTN","ECUERPC",150,0)
 ;
"RTN","ECUERPC",151,0)
ELIG(RESULTS,ECARY) ;
"RTN","ECUERPC",152,0)
 ;
"RTN","ECUERPC",153,0)
 ;Broker call returns a list of patient eligibilities
"RTN","ECUERPC",154,0)
 ;        RPC: EC GETPATELIG
"RTN","ECUERPC",155,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",156,0)
 ;          DFN - Patient ien (file #2)
"RTN","ECUERPC",157,0)
 ;
"RTN","ECUERPC",158,0)
 ;OUTPUTS  RESULTS - Array of eligibilities
"RTN","ECUERPC",159,0)
 ;          primary/secondary elig flag^elig ien^elig description
"RTN","ECUERPC",160,0)
 ;
"RTN","ECUERPC",161,0)
 N CNT,SUB,DFN,VAEL
"RTN","ECUERPC",162,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",163,0)
 S DFN=$P(ECARY,U) I DFN="" Q
"RTN","ECUERPC",164,0)
 K ^TMP($J,"ECPATELIG")
"RTN","ECUERPC",165,0)
 D ELIG^VADPT I $G(VAEL(1))="" Q
"RTN","ECUERPC",166,0)
 S ^TMP($J,"ECPATELIG",1)="1^"_VAEL(1),SUB=0,CNT=1
"RTN","ECUERPC",167,0)
 F  S SUB=$O(VAEL(1,SUB)) Q:SUB=""  D
"RTN","ECUERPC",168,0)
 . S CNT=CNT+1,^TMP($J,"ECPATELIG",CNT)="0^"_VAEL(1,SUB)
"RTN","ECUERPC",169,0)
 S RESULTS=$NA(^TMP($J,"ECPATELIG"))
"RTN","ECUERPC",170,0)
 Q
"RTN","ECUERPC",171,0)
PRDEFS(RESULTS,ECARY) ;
"RTN","ECUERPC",172,0)
 ;This broker entry point returns the defaults for procedure data entry
"RTN","ECUERPC",173,0)
 ;        RPC: EC GETPRODEFS
"RTN","ECUERPC",174,0)
 ;INPUTS     ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",175,0)
 ;            ECL  - Location IEN
"RTN","ECUERPC",176,0)
 ;            ECD  - DSS Unit IEN
"RTN","ECUERPC",177,0)
 ;            ECC  - Category IEN
"RTN","ECUERPC",178,0)
 ;
"RTN","ECUERPC",179,0)
 ;OUTPUTS    RESULTS - Data pieces as follows:-
"RTN","ECUERPC",180,0)
 ;           PIECE - Description
"RTN","ECUERPC",181,0)
 ;             1 - Associated Clinic IEN
"RTN","ECUERPC",182,0)
 ;             2 - Associated Clinic
"RTN","ECUERPC",183,0)
 ;             3 - Medical Specialty IEN
"RTN","ECUERPC",184,0)
 ;             4 - Medical Specialty
"RTN","ECUERPC",185,0)
 ;
"RTN","ECUERPC",186,0)
 N ECL,ECD,ECC,ECP,IEN,ASC,ASCNM,MEDSP,MEDSPNM,ECCH
"RTN","ECUERPC",187,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",188,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2),ECC=$P(ECARY,U,3),ECP=$P(ECARY,U,4)
"RTN","ECUERPC",189,0)
 S:ECC="" ECC=0 I (ECL="")!(ECD="") Q
"RTN","ECUERPC",190,0)
 S (ASCNM,MEDSPNM)="",ECCH=ECL_"-"_ECD_"-"_ECC_"-"_ECP
"RTN","ECUERPC",191,0)
 I '$D(^ECJ("B",ECCH)) Q
"RTN","ECUERPC",192,0)
 S IEN=$O(^ECJ("B",ECCH,0)) I IEN="" Q
"RTN","ECUERPC",193,0)
 S ASC=$P($G(^ECJ(IEN,"PRO")),U,4) I ASC D
"RTN","ECUERPC",194,0)
 .S ASCNM=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC",195,0)
 S MEDSP=$P($G(^ECD(ECD,0)),U,3) I MEDSP D 
"RTN","ECUERPC",196,0)
 .S MEDSPNM=$$GET1^DIQ(723,MEDSP,.01,"I")
"RTN","ECUERPC",197,0)
 S RESULTS=ASC_U_ASCNM_U_MEDSP_U_MEDSPNM
"RTN","ECUERPC",198,0)
 Q
"RTN","ECUERPC",199,0)
PATPROC(RESULTS,ECARY) ;
"RTN","ECUERPC",200,0)
 ;
"RTN","ECUERPC",201,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC",202,0)
 ;
"RTN","ECUERPC",203,0)
 ;RPC: EC GETPATPROCS
"RTN","ECUERPC",204,0)
 ;
"RTN","ECUERPC",205,0)
 ;INPUTS   ECARY - Contains the following values separated by "^"
"RTN","ECUERPC",206,0)
 ;         ECLOC - Location ien
"RTN","ECUERPC",207,0)
 ;         ECPAT - Patient DFN ien
"RTN","ECUERPC",208,0)
 ;         ECUNT - DSS unit ien
"RTN","ECUERPC",209,0)
 ;         ECSD  - Start Date
"RTN","ECUERPC",210,0)
 ;         ECED  - End Date
"RTN","ECUERPC",211,0)
 ;                                                                         
"RTN","ECUERPC",212,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient entries contain
"RTN","ECUERPC",213,0)
 ;          721 IEN^Procedure date/time^Category^Procedure^Volume^
"RTN","ECUERPC",214,0)
 ;          Provider^ordering section^associated clinic^
"RTN","ECUERPC",215,0)
 ;          (ICD Coding system) primary dx code primary dx code description
"RTN","ECUERPC",216,0)
 ;          ^Provider IEN
"RTN","ECUERPC",217,0)
 ;
"RTN","ECUERPC",218,0)
 N IEN,CNT,ECCS,ECV,ECLOC,ECUNT,ECPAT,PX,NODE,DATA,PDT,PDX,PND,PDXD,CAT,ECI
"RTN","ECUERPC",219,0)
 N ORS,PRV,PRO,PROV,ECU
"RTN","ECUERPC",220,0)
 D SETENV^ECUMRPC ;set environment variables for RPC broker
"RTN","ECUERPC",221,0)
 S ECV="ECLOC^ECPAT^ECUNT^ECSD^ECED"
"RTN","ECUERPC",222,0)
 D PARSE(ECV,ECARY) I (ECLOC="")!(ECPAT="")!(ECUNT="") Q
"RTN","ECUERPC",223,0)
 K ^TMP($J,"ECPATPX")
"RTN","ECUERPC",224,0)
 S ECSD=$G(ECSD,DT),ECED=$G(ECED,DT)
"RTN","ECUERPC",225,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC",226,0)
 K X,Y
"RTN","ECUERPC",227,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC",228,0)
 Q:ECED'>ECSD  S PDT=ECSD,CNT=0
"RTN","ECUERPC",229,0)
 F  S PDT=$O(^ECH("ADT",ECLOC,ECPAT,ECUNT,PDT)) Q:'PDT!(PDT>ECED)  D
"RTN","ECUERPC",230,0)
 . S IEN=0 F  S IEN=$O(^ECH("ADT",ECLOC,ECPAT,ECUNT,PDT,IEN)) Q:'IEN  D
"RTN","ECUERPC",231,0)
 . . S NODE=$G(^ECH(IEN,0)),PND=$G(^ECH(IEN,"P")),PX=$P(NODE,U,9)
"RTN","ECUERPC",232,0)
 . . Q:NODE=""  S (PRV,CAT,ORS,ASC,PDXD)="",PDX=$P(PND,U,2)
"RTN","ECUERPC",233,0)
 . . I PX["EC" D
"RTN","ECUERPC",234,0)
 . . . S PRO=$G(^EC(725,$P(PX,";"),0)),PX=$P(PRO,U,2)_" "_$P(PRO,U)
"RTN","ECUERPC",235,0)
 . . E  S PRO=$$CPT^ICPTCOD($P(PX,";"),PDT) S PX=$P(PRO,U,2)_" "_$P(PRO,U,3)
"RTN","ECUERPC",236,0)
 . . S:$P(NODE,U,8) CAT=$$GET1^DIQ(726,$P(NODE,U,8),.01,"I")
"RTN","ECUERPC",237,0)
 . . K PROV S ECU=$$GETPPRV^ECPRVMUT(IEN,.PROV),PRV=$S(ECU:"UNKNOWN",1:$P(PROV,"^",2)),ECU=$S('ECU:+PROV,1:"")
"RTN","ECUERPC",238,0)
 . . S:$P(NODE,U,12) ORS=$$GET1^DIQ(723,$P(NODE,U,12),.01,"I")
"RTN","ECUERPC",239,0)
 . . S:$P(NODE,U,19) ASC=$$GET1^DIQ(44,$P(NODE,U,19),.01,"I")
"RTN","ECUERPC",240,0)
 . . I PDX D
"RTN","ECUERPC",241,0)
 . . . ; ICD10 Changes
"RTN","ECUERPC",242,0)
 . . . S ECCS=$$SINFO^ICDEX("DIAG",PDT) ; Supported by ICR 5747
"RTN","ECUERPC",243,0)
 . . . S PDXD=$$ICDDX^ICDEX(PDX,PDT,+ECCS,"I") ; Supported by ICR 5747
"RTN","ECUERPC",244,0)
 . . . S ECCS=$P(ECCS,U,2),ECCS=" ("_$P(ECCS,"-",1)_$P(ECCS,"-",2)_")"
"RTN","ECUERPC",245,0)
 . . . S PDXD=$P(PDXD,U,2)_" "_$P(PDXD,U,4)_ECCS
"RTN","ECUERPC",246,0)
 . . S DATA=$P(NODE,U)_U_$$FMTE^XLFDT($P(NODE,U,3),"2F")_U_CAT_U_PX
"RTN","ECUERPC",247,0)
 . . S DATA=DATA_U_$P(NODE,U,10)_U_PRV_U_ORS_U_ASC_U_PDXD_U_ECU
"RTN","ECUERPC",248,0)
 . . S CNT=CNT+1,^TMP($J,"ECPATPX",CNT)=DATA
"RTN","ECUERPC",249,0)
 S RESULTS=$NA(^TMP($J,"ECPATPX"))
"RTN","ECUERPC",250,0)
 Q
"RTN","ECUERPC",251,0)
PARSE(ECV,ECARY) ;Parse Variable
"RTN","ECUERPC",252,0)
 N I
"RTN","ECUERPC",253,0)
 F I=1:1:$L(ECARY,U) S @$P(ECV,U,I)=$P(ECARY,U,I)
"RTN","ECUERPC",254,0)
 Q
"RTN","ECUERPC1")
0^2^B67385088^B53869940
"RTN","ECUERPC1",1,0)
ECUERPC1 ;ALB/JAM - Event Capture Data Entry Broker Util ;1/24/12  16:19
"RTN","ECUERPC1",2,0)
 ;;2.0;EVENT CAPTURE;**25,33,42,46,47,54,72,76,110,112,114**;8 May 96;Build 20
"RTN","ECUERPC1",3,0)
 ;
"RTN","ECUERPC1",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECUERPC1",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR5747
"RTN","ECUERPC1",6,0)
 ;
"RTN","ECUERPC1",7,0)
PATINF(RESULTS,ECARY) ;
"RTN","ECUERPC1",8,0)
 ;Broker entry point to get various types of data from EVENT CAPTURE 
"RTN","ECUERPC1",9,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",10,0)
 ;        RPC: EC GETPATINFO
"RTN","ECUERPC1",11,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC1",12,0)
 ;          ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",13,0)
 ;          ECTYP - Data type to return
"RTN","ECUERPC1",14,0)
 ;
"RTN","ECUERPC1",15,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data
"RTN","ECUERPC1",16,0)
 ;
"RTN","ECUERPC1",17,0)
 N ECTYP,ECIEN
"RTN","ECUERPC1",18,0)
 S ECARY=$G(ECARY),ECIEN=$P(ECARY,U),ECTYP=$P(ECARY,U,2) I ECIEN="" Q
"RTN","ECUERPC1",19,0)
 I '$D(^ECH(ECIEN)) Q
"RTN","ECUERPC1",20,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",21,0)
 I ECTYP="DXS" D PATDXS(ECIEN) Q
"RTN","ECUERPC1",22,0)
 I ECTYP="MOD" D PATMOD(ECIEN) Q
"RTN","ECUERPC1",23,0)
 I ECTYP="CLASS" D PATCLASS(ECIEN) Q
"RTN","ECUERPC1",24,0)
 I ECTYP="OTH" D PATOTH(ECIEN) Q
"RTN","ECUERPC1",25,0)
 I ECTYP="PRV" D PATPRV^ECUERPC2(ECIEN) Q
"RTN","ECUERPC1",26,0)
 Q
"RTN","ECUERPC1",27,0)
PATDXS(ECIEN) ;
"RTN","ECUERPC1",28,0)
 ;Returns to broker a patient secondary DXs entries from EVENT 
"RTN","ECUERPC1",29,0)
 ;CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",30,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",31,0)
 ;
"RTN","ECUERPC1",32,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient file contains
"RTN","ECUERPC1",33,0)
 ;          721 IEN^secondary dx ien #80^secondary dx code^dx description (ICD Code Set)
"RTN","ECUERPC1",34,0)
 ;
"RTN","ECUERPC1",35,0)
 N CNT,DXS,DXSIEN,DXSD,ECCS,ECDT
"RTN","ECUERPC1",36,0)
 I '$D(^ECH(ECIEN,"DX")) Q
"RTN","ECUERPC1",37,0)
 K ^TMP($J,"ECDXS")
"RTN","ECUERPC1",38,0)
 S (CNT,DXS)=0 F  S DXS=$O(^ECH(ECIEN,"DX",DXS)) Q:'DXS  D
"RTN","ECUERPC1",39,0)
 . S DXSIEN=$G(^ECH(ECIEN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECUERPC1",40,0)
 . ; ICD10 Changes
"RTN","ECUERPC1",41,0)
 . S ECDT=$P($G(^ECH(ECIEN,0)),U,3) ; DATE/TIME OF PROCEDURE field (#2)
"RTN","ECUERPC1",42,0)
 . ; Determine Active Coding System Based on Date of Interest
"RTN","ECUERPC1",43,0)
 . S ECCS=$$SINFO^ICDEX("DIAG",ECDT)
"RTN","ECUERPC1",44,0)
 . ; Load the ICD code info
"RTN","ECUERPC1",45,0)
 . S DXSD=$$ICDDX^ICDEX(DXSIEN,ECDT,+ECCS,"I") ; Supported by ICR 5747
"RTN","ECUERPC1",46,0)
 . S ECCS=$P(ECCS,U,2),ECCS=" ("_$P(ECCS,"-",1)_$P(ECCS,"-",2)_")"
"RTN","ECUERPC1",47,0)
 . S DXSD=$P(DXSD,U,2)_" "_$P(DXSD,U,4)_ECCS
"RTN","ECUERPC1",48,0)
 . S CNT=CNT+1,^TMP($J,"ECDXS",CNT)=ECIEN_U_DXSIEN_U_DXSD
"RTN","ECUERPC1",49,0)
 S RESULTS=$NA(^TMP($J,"ECDXS"))
"RTN","ECUERPC1",50,0)
 Q
"RTN","ECUERPC1",51,0)
PATMOD(ECIEN) ;
"RTN","ECUERPC1",52,0)
 ;Returns to broker a patient procedure modifier from EVENT CAPTURE
"RTN","ECUERPC1",53,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",54,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",55,0)
 ;
"RTN","ECUERPC1",56,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",57,0)
 ;          721 IEN^modifier ien #81.3^modifier^modifier name
"RTN","ECUERPC1",58,0)
 ;
"RTN","ECUERPC1",59,0)
 N MOD,MODIEN,CNT,MODS
"RTN","ECUERPC1",60,0)
 I '$D(^ECH(ECIEN,"MOD")) Q
"RTN","ECUERPC1",61,0)
 K ^TMP($J,"ECMOD")
"RTN","ECUERPC1",62,0)
 S (CNT,MOD)=0 F  S MOD=$O(^ECH(ECIEN,"MOD",MOD)) Q:'MOD  D
"RTN","ECUERPC1",63,0)
 . S MODIEN=$G(^ECH(ECIEN,"MOD",MOD,0)) I MODIEN="" Q
"RTN","ECUERPC1",64,0)
 . S MODS=$$MOD^ICPTMOD(MODIEN,"I",$P($G(^ECH(ECIEN,0)),U,3)) I +MODS<0 Q
"RTN","ECUERPC1",65,0)
 . S CNT=CNT+1
"RTN","ECUERPC1",66,0)
 . S ^TMP($J,"ECMOD",CNT)=ECIEN_U_$P(MODS,U,1,2)_"  "_$P(MODS,U,3)
"RTN","ECUERPC1",67,0)
 S RESULTS=$NA(^TMP($J,"ECMOD"))
"RTN","ECUERPC1",68,0)
 Q
"RTN","ECUERPC1",69,0)
PATCLASS(ECIEN) ;
"RTN","ECUERPC1",70,0)
 ;Returns to broker a patient classification & eligibility data from
"RTN","ECUERPC1",71,0)
 ;EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",72,0)
 ; INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",73,0)
 ; OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",74,0)
 ;  721 IEN^agent orange^radiation exposure^service connect^environmental
"RTN","ECUERPC1",75,0)
 ;  contaminants/SWAC^military sexual trauma^eligibility code #8^
"RTN","ECUERPC1",76,0)
 ;  eligibility description^head/neck cancer^combat veteran^P112/SHAD
"RTN","ECUERPC1",77,0)
 ;
"RTN","ECUERPC1",78,0)
 N CLA,ELIG,ELCOD,ECAO,ECIR,ECEC,ECSC,ECMST,STR,ECHNC,ECCV,ECSHAD
"RTN","ECUERPC1",79,0)
 I '$D(^ECH(ECIEN,"P")),'$D(^ECH(ECIEN,"PCE")) Q
"RTN","ECUERPC1",80,0)
 K ^TMP($J,"ECLASS")
"RTN","ECUERPC1",81,0)
 S ELIG=$P($G(^ECH(ECIEN,"PCE")),"~",17),ELCOD="",CLA=$G(^ECH(ECIEN,"P"))
"RTN","ECUERPC1",82,0)
 S:ELIG'="" ELCOD=$P($G(^DIC(8,ELIG,0)),U)
"RTN","ECUERPC1",83,0)
 S ECAO=$P(CLA,U,3),ECIR=$P(CLA,U,4),ECEC=$P(CLA,U,5),ECSC=$P(CLA,U,6)
"RTN","ECUERPC1",84,0)
 S ECMST=$P(CLA,U,9),ECHNC=$P(CLA,U,10),ECCV=$P(CLA,U,11),ECSHAD=$P(CLA,U,12)
"RTN","ECUERPC1",85,0)
 S STR=ECIEN_U_ECAO_U_ECIR_U_ECSC_U_ECEC_U_ECMST
"RTN","ECUERPC1",86,0)
 S STR=STR_U_ELIG_U_ELCOD_U_ECHNC_U_ECCV_U_ECSHAD,^TMP($J,"ECLASS",1)=STR
"RTN","ECUERPC1",87,0)
 S RESULTS=$NA(^TMP($J,"ECLASS"))
"RTN","ECUERPC1",88,0)
 Q
"RTN","ECUERPC1",89,0)
PATOTH(ECIEN) ;
"RTN","ECUERPC1",90,0)
 ;Returns to broker a patient remaining data from EVENT CAPTURE
"RTN","ECUERPC1",91,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",92,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",93,0)
 ;
"RTN","ECUERPC1",94,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",95,0)
 ;          721 IEN^procedure reason
"RTN","ECUERPC1",96,0)
 ;
"RTN","ECUERPC1",97,0)
 N REAS,ECX
"RTN","ECUERPC1",98,0)
 K ^TMP($J,"ECOTH")
"RTN","ECUERPC1",99,0)
 S ECX=^ECH(ECIEN,0)
"RTN","ECUERPC1",100,0)
 D GETS^DIQ(721,ECIEN_",","34;43;44","E","REAS") ;112
"RTN","ECUERPC1",101,0)
 S ^TMP($J,"ECOTH",1)=$G(REAS(721,ECIEN_",",34,"E"))_"^"_$G(REAS(721,ECIEN_",",43,"E"))_"^"_$G(REAS(721,ECIEN_",",44,"E")) ;112
"RTN","ECUERPC1",102,0)
 S RESULTS=$NA(^TMP($J,"ECOTH"))
"RTN","ECUERPC1",103,0)
 Q
"RTN","ECUERPC1",104,0)
PATCLAST(RESULTS,ECARY) ;
"RTN","ECUERPC1",105,0)
 ;Returns to broker a patient status (in/out) and classification
"RTN","ECUERPC1",106,0)
 ;     RPC: EC GETPATCLASTAT
"RTN","ECUERPC1",107,0)
 ;INPUTS  ECARY  - Contains the following subscripted elements  
"RTN","ECUERPC1",108,0)
 ;         ECDFN - Patient ien (#2)
"RTN","ECUERPC1",109,0)
 ;         ECD   - DSS Unit ien (#724)
"RTN","ECUERPC1",110,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",111,0)
 ;OUTPUTS  RESULTS - Patient status and classifications delimited by (^)
"RTN","ECUERPC1",112,0)
 ;         Patient Status: I for inpatient or O for outpatient
"RTN","ECUERPC1",113,0)
 ;         Classification: 2- Agent Orange, 3- Ionizing Radiation
"RTN","ECUERPC1",114,0)
 ;          4- SC Condition, 5- Environment Contaminants/SWAC 6- Military
"RTN","ECUERPC1",115,0)
 ;          Sexual Trauma    7- Head/Neck Cancer 8- Combat Veteran
"RTN","ECUERPC1",116,0)
 ;          9- Project 112/SHAD
"RTN","ECUERPC1",117,0)
 ;         Data after the '~' refers to those class. that must be asked 
"RTN","ECUERPC1",118,0)
 ;         by Delphi appl. when the answer to SC=No.
"RTN","ECUERPC1",119,0)
 ;         Data after "~"  1- Agent Orange  2- Ionizing Radi. 3- Env Cont/SWAC
"RTN","ECUERPC1",120,0)
 N ECDFN,ECDT,ECX,I,ECCLARY,SCDAT,PATSTAT,% ;112
"RTN","ECUERPC1",121,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",122,0)
 S ECDFN=$P(ECARY,U),ECD=$P(ECARY,U,2),ECDT=$P(ECARY,U,3) Q:ECDFN=""
"RTN","ECUERPC1",123,0)
 I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",124,0)
 S PATSTAT=$$INOUTPT^ECUTL0(ECDFN,ECDT),RESULTS="^^^^^^",SCDAT=";;;"
"RTN","ECUERPC1",125,0)
 ;
"RTN","ECUERPC1",126,0)
 ; Removed in EC*110 so inpatient data can be answered for transmission to Austin
"RTN","ECUERPC1",127,0)
 ; This was to be consistent with VHA Directive 2009-002
"RTN","ECUERPC1",128,0)
 ;
"RTN","ECUERPC1",129,0)
 ; I PATSTAT="I" D  Q
"RTN","ECUERPC1",130,0)
 ; .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"") 
"RTN","ECUERPC1",131,0)
 I '$$CHKDSS^ECUTL0(+$G(ECD),PATSTAT) D  Q
"RTN","ECUERPC1",132,0)
 .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",133,0)
 D CL^SDCO21(ECDFN,ECDT,"",.ECCLARY) F ECX=3,1,2,4,5,6,7,8 D
"RTN","ECUERPC1",134,0)
 .I ECX=1,$P($G(^DPT(ECDFN,.321)),"^",2)'="Y" Q
"RTN","ECUERPC1",135,0)
 .I ECX=2,$P($G(^DPT(ECDFN,.321)),"^",3)'="Y" Q
"RTN","ECUERPC1",136,0)
 .I ECX=4,$P($G(^DPT(ECDFN,.322)),"^",13)'="Y",'$$EC^SDCO22(ECDFN,"") Q
"RTN","ECUERPC1",137,0)
 .I ECX=3,$D(ECCLARY(ECX)) F I=1,2,4 S ECCLARY(I)="SC"
"RTN","ECUERPC1",138,0)
 .I '$D(ECCLARY(ECX)) Q
"RTN","ECUERPC1",139,0)
 .;Check SC, if answer to SC is NO then these questions will be asked
"RTN","ECUERPC1",140,0)
 .I ECCLARY(ECX)="SC" S $P(SCDAT,";",ECX)="E"
"RTN","ECUERPC1",141,0)
 .E  S $P(RESULTS,"^",ECX)="E"
"RTN","ECUERPC1",142,0)
 S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",143,0)
 Q
"RTN","ECUERPC1",144,0)
ENCDXS(RESULTS,ECARY) ;
"RTN","ECUERPC1",145,0)
 ;Broker call returns a patient encounter primary & secondary dx (#721)
"RTN","ECUERPC1",146,0)
 ;     RPC: EC GETENCDXS
"RTN","ECUERPC1",147,0)
 ;INPUTS   ECDFN - Patient ien (#2)
"RTN","ECUERPC1",148,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",149,0)
 ;         ECL   - Location ien
"RTN","ECUERPC1",150,0)
 ;         EC4   - Clinic ien
"RTN","ECUERPC1",151,0)
 ;
"RTN","ECUERPC1",152,0)
 ;OUTPUTS  RESULTS - array of patient encounter diagnosis
"RTN","ECUERPC1",153,0)
 ;         primary/secondary flag^(ICD Code Set) DX ien^DX code  DX description.
"RTN","ECUERPC1",154,0)
 ;
"RTN","ECUERPC1",155,0)
 N ECDFN,ECDT,ECL,EC4,ECPDX,ECDX,ECDXN,ECDXS,CNT,STR,ECPDX,SDXCNT,% ;112
"RTN","ECUERPC1",156,0)
 N ECCS,ECICD
"RTN","ECUERPC1",157,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",158,0)
 K ^TMP($J,"ECENCDXS")
"RTN","ECUERPC1",159,0)
 S ECDFN=$P(ECARY,U),ECDT=+$P(ECARY,U,2),ECL=$P(ECARY,U,3)
"RTN","ECUERPC1",160,0)
 S EC4=$P(ECARY,U,4) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",161,0)
 I ECDFN=""!(ECL="")!(EC4="") Q
"RTN","ECUERPC1",162,0)
 S (ECDX,ECDXN)="",ECPDX=$$PDXCK^ECUTL2(ECDFN,ECDT,ECL,EC4) I ECDX="" Q
"RTN","ECUERPC1",163,0)
 ; Changes for ICD10
"RTN","ECUERPC1",164,0)
 ; Determine Active Coding System Based on Date of Interest
"RTN","ECUERPC1",165,0)
 S ECCS=$$SINFO^ICDEX("DIAG",ECDT) ; Supported by ICR 5747
"RTN","ECUERPC1",166,0)
 ; Load the ICD code info
"RTN","ECUERPC1",167,0)
 S ECICD=$$ICDDX^ICDEX(ECDX,ECDT,+ECCS,"I") ; Supported by ICR 5747
"RTN","ECUERPC1",168,0)
 S ECCS=$P(ECCS,U,2),ECCS=" ("_$P(ECCS,"-",1)_$P(ECCS,"-",2)_")"
"RTN","ECUERPC1",169,0)
 S IEN="",STR=1_U_ECDX_U_ECDXN_" "_$P(ECICD,U,4)_ECCS
"RTN","ECUERPC1",170,0)
 S CNT=1,^TMP($J,"ECENCDXS",CNT)=STR
"RTN","ECUERPC1",171,0)
 ;*ACS concat description to 2nd diag code, in the order entered by the user
"RTN","ECUERPC1",172,0)
 F  S IEN=$O(ECDXS(IEN)) Q:IEN=""  D
"RTN","ECUERPC1",173,0)
 . S ECICD=$$ICDDX^ICDEX(ECDXS(IEN),ECDT,+ECCS,"I") ; Supported by ICR 5747
"RTN","ECUERPC1",174,0)
 . S CNT=CNT+1,^TMP($J,"ECENCDXS",CNT)=0_U_ECDXS(IEN)_U_IEN_" "_$P(ECICD,U,4)_ECCS
"RTN","ECUERPC1",175,0)
 S RESULTS=$NA(^TMP($J,"ECENCDXS"))
"RTN","ECUERPC1",176,0)
 Q
"RTN","ECUERPC1",177,0)
 ;
"RTN","ECUERPC1",178,0)
PROCBAT(RESULTS,ECARY) ;
"RTN","ECUERPC1",179,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",180,0)
 ;for patients for a specific procedure
"RTN","ECUERPC1",181,0)
 ;        RPC: EC GETBATPROCS
"RTN","ECUERPC1",182,0)
 ;INPUTS   ECARY - Contains the following subscripted elements
"RTN","ECUERPC1",183,0)
 ;          ECLOC - Location ien
"RTN","ECUERPC1",184,0)
 ;          ECUNT - DSS unit ien
"RTN","ECUERPC1",185,0)
 ;          ECC   - Category ien
"RTN","ECUERPC1",186,0)
 ;          ECP   - Procedure ien
"RTN","ECUERPC1",187,0)
 ;          ECSD  - Start Date
"RTN","ECUERPC1",188,0)
 ;          ECED  - End Date
"RTN","ECUERPC1",189,0)
 ;
"RTN","ECUERPC1",190,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data containing:-
"RTN","ECUERPC1",191,0)
 ;          721 IEN^Patient name^Procedure Date/Time^(Primary Dx Code set) Primary Dx
"RTN","ECUERPC1",192,0)
 ;          ^Ordering Section^Associated Clinic
"RTN","ECUERPC1",193,0)
 ;          ^SSN^DOB^Procedure Date and Time
"RTN","ECUERPC1",194,0)
 ;
"RTN","ECUERPC1",195,0)
 N IEN,CNT,ECCS,ECLOC,ECUNT,NODE,DATA,PXDT,ECV,ECC,ECP,ECSD,ECED,DATE,DFN
"RTN","ECUERPC1",196,0)
 N CAT,ECI,VADM,ORC,ASC,ECDX
"RTN","ECUERPC1",197,0)
 S ECV="ECLOC^ECUNT^ECC^ECP^ECSD^ECED"
"RTN","ECUERPC1",198,0)
 D PARSE^ECUERPC(ECV,ECARY)
"RTN","ECUERPC1",199,0)
 I (ECLOC="")!(ECUNT="")!(ECC="")!(ECP="") Q
"RTN","ECUERPC1",200,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECBATPX") S CNT=0
"RTN","ECUERPC1",201,0)
 S %DT="STX" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC1",202,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC1",203,0)
 Q:ECED'>ECSD  S DATE=ECSD
"RTN","ECUERPC1",204,0)
 F  S DATE=$O(^ECH("AC1",ECLOC,DATE)) Q:'DATE!(DATE>ECED)  S IEN=0 D
"RTN","ECUERPC1",205,0)
 . F  S IEN=$O(^ECH("AC1",ECLOC,DATE,IEN)) Q:'IEN  D
"RTN","ECUERPC1",206,0)
 . . S NODE=$G(^ECH(IEN,0))  Q:NODE=""  Q:$P(NODE,U,7)'=ECUNT
"RTN","ECUERPC1",207,0)
 . . Q:$P(NODE,U,8)'=ECC  Q:$P(NODE,U,9)'=ECP
"RTN","ECUERPC1",208,0)
 . . S ECDX=$P($G(^ECH(IEN,"P")),U,2) I ECDX'="" D
"RTN","ECUERPC1",209,0)
 . . . ; Updates for ICD10
"RTN","ECUERPC1",210,0)
 . . . ; Load the ICD code info
"RTN","ECUERPC1",211,0)
 . . . S ECCS=$$SINFO^ICDEX("DIAG",DATE) ; Supported by ICR 5747
"RTN","ECUERPC1",212,0)
 . . . ; Load the ICD code info
"RTN","ECUERPC1",213,0)
 . . . S ECDX=$$ICDDX^ICDEX(ECDX,DATE,+ECCS,"I") ; Supported by ICR 5747
"RTN","ECUERPC1",214,0)
 . . . S ECCS=$P(ECCS,U,2),ECCS=" ("_$P(ECCS,"-",1)_$P(ECCS,"-",2)_")"
"RTN","ECUERPC1",215,0)
 . . . S ECDX=$P(ECDX,U,2)_" "_$P(ECDX,U,4)_ECCS
"RTN","ECUERPC1",216,0)
 . . S ASC=$P(NODE,U,19) S:ASC'="" ASC=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC1",217,0)
 . . S ORC=$P(NODE,U,12) S:ORC'="" ORC=$$GET1^DIQ(723,ORC,.01,"I")
"RTN","ECUERPC1",218,0)
 . . S Y=DATE X ^DD("DD") S PXDT=Y,DFN=$P(NODE,U,2) D DEM^VADPT
"RTN","ECUERPC1",219,0)
 . . S DATA=$E(VADM(1),1,30)_U_PXDT_U_ECDX_U_ORC_U_ASC
"RTN","ECUERPC1",220,0)
 . . S CNT=CNT+1,^TMP($J,"ECBATPX",CNT)=IEN_U_DATA
"RTN","ECUERPC1",221,0)
 S RESULTS=$NA(^TMP($J,"ECBATPX"))
"RTN","ECUERPC1",222,0)
 Q
"RTN","ECUERPC1",223,0)
 ;
"RTN","ECUERPC1",224,0)
CLHLP(RESULTS,ECARY) ;RPC Broker entry point for classification help
"RTN","ECUERPC1",225,0)
 ;        RPC: EC CLASHELP
"RTN","ECUERPC1",226,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",227,0)
 ;          ECDFN  - Patient DFN from file (#2)
"RTN","ECUERPC1",228,0)
 ;          ECKY   - Key to provide help on
"RTN","ECUERPC1",229,0)
 ;
"RTN","ECUERPC1",230,0)
 ;OUTPUTS  RESULTS - Array of help text for classification
"RTN","ECUERPC1",231,0)
 ;
"RTN","ECUERPC1",232,0)
 N ECFILER,ECERR,ECDIRY,ECUFILE,ECDFN,ECKY,ECHNDL
"RTN","ECUERPC1",233,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",234,0)
 K ^TMP("ECMSG",$J)
"RTN","ECUERPC1",235,0)
 S ECERR=0,ECDFN=$P(ECARY,U),ECKY=$P(ECARY,U,2) D  I ECERR D CLEND Q
"RTN","ECUERPC1",236,0)
 .I ECDFN="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not defined" Q
"RTN","ECUERPC1",237,0)
 .I ECKY="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Help Key not defined" Q
"RTN","ECUERPC1",238,0)
 .S DIC=2,DIC(0)="NMZX",X=ECDFN D ^DIC I Y<0 D
"RTN","ECUERPC1",239,0)
 ..S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not found"
"RTN","ECUERPC1",240,0)
 S ECHNDL="ECLASHLP" D HFSOPEN^ECRRPC(ECHNDL) I ECERR D CLEND Q
"RTN","ECUERPC1",241,0)
 U IO
"RTN","ECUERPC1",242,0)
 I ECKY="SC" D SC^SDCO23(ECDFN)
"RTN","ECUERPC1",243,0)
 D HFSCLOSE^ECRRPC(ECFILER)
"RTN","ECUERPC1",244,0)
CLEND ;
"RTN","ECUERPC1",245,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECUERPC1",246,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECUERPC1",247,0)
 Q
"RTN","ECUERPC1",248,0)
ECDEF(RESULTS,ECARY) ;RPC Broker entry point to get a default for space bar
"RTN","ECUERPC1",249,0)
 ;        RPC: EC SPACEBAR
"RTN","ECUERPC1",250,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",251,0)
 ;          ECFILE - File to obtain value from
"RTN","ECUERPC1",252,0)
 ;
"RTN","ECUERPC1",253,0)
 ;OUTPUTS  RESULTS - IEN^Description of Text
"RTN","ECUERPC1",254,0)
 ;
"RTN","ECUERPC1",255,0)
 N DIC,ECFILE,X,Y
"RTN","ECUERPC1",256,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",257,0)
 S ECFILE=$P(ECARY,U)
"RTN","ECUERPC1",258,0)
 I ECFILE="" S ECERR=1,RESULTS="0^File not defined" Q
"RTN","ECUERPC1",259,0)
 S X=" ",DIC(0)="MZX",DIC=ECFILE D ^DIC I Y<0 D  I ECERR Q
"RTN","ECUERPC1",260,0)
 . S ECERR=1,RESULTS="0^Nothing found"
"RTN","ECUERPC1",261,0)
 S RESULTS=Y
"RTN","ECUERPC1",262,0)
 Q
"RTN","ECUMRPC2")
0^13^B37122855^B30358856
"RTN","ECUMRPC2",1,0)
ECUMRPC2 ;ALB/JAM - Event Capture Management Broker Utils ;23 Jul 2008
"RTN","ECUMRPC2",2,0)
 ;;2.0;EVENT CAPTURE;**25,30,42,46,47,49,75,72,95,114**;8 May 96;Build 20
"RTN","ECUMRPC2",3,0)
 ;
"RTN","ECUMRPC2",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECUMRPC2",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","ECUMRPC2",6,0)
 ;
"RTN","ECUMRPC2",7,0)
GLOC(RESULTS,ECARY) ;
"RTN","ECUMRPC2",8,0)
 ;
"RTN","ECUMRPC2",9,0)
 ;This broker entry point returns all active Event Capture locations
"RTN","ECUMRPC2",10,0)
 ;        RPC: EC GETLOC
"RTN","ECUMRPC2",11,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC2",12,0)
 ;               STAT   - Active or inactive locations (optional)
"RTN","ECUMRPC2",13,0)
 ;               A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC2",14,0)
 ;
"RTN","ECUMRPC2",15,0)
 ;OUTPUTS        RESULTS - The array of active Event Capture locations.
"RTN","ECUMRPC2",16,0)
 ;               PIECE - Description
"RTN","ECUMRPC2",17,0)
 ;                 1     Location IEN
"RTN","ECUMRPC2",18,0)
 ;                 2     LOC description
"RTN","ECUMRPC2",19,0)
 ;                 3     State Abbreviation
"RTN","ECUMRPC2",20,0)
 ;                 4     Current Location Flag
"RTN","ECUMRPC2",21,0)
 ;                 5     Facility Type
"RTN","ECUMRPC2",22,0)
 ;                 6     Station Number
"RTN","ECUMRPC2",23,0)
 N LOC,STAT,CNT,CLOC,ST,NODE,ACT,ECLOC,ELOC,ECFT,ECSN
"RTN","ECUMRPC2",24,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",25,0)
 K ^TMP($J,"ECLOCATION")
"RTN","ECUMRPC2",26,0)
 S STAT=$P($G(ECARY),U),(CNT,LOC)=0,ACT=0 S:STAT="" STAT="A"
"RTN","ECUMRPC2",27,0)
 D GETLOC^ECL(.ECLOC)
"RTN","ECUMRPC2",28,0)
 F  S LOC=$O(ECLOC(LOC)) Q:'LOC  S ELOC($P(ECLOC(LOC),U,2))=""
"RTN","ECUMRPC2",29,0)
 S LOC=0
"RTN","ECUMRPC2",30,0)
 F  S LOC=$O(^DIC(4,LOC)) Q:'LOC  S NODE=$G(^DIC(4,LOC,0)) I NODE'="" D
"RTN","ECUMRPC2",31,0)
 . I $P(NODE,U)="" Q
"RTN","ECUMRPC2",32,0)
 . I ($P(NODE,U,11)="I")!($P($G(^DIC(4,LOC,99)),U,4)) S ACT=1
"RTN","ECUMRPC2",33,0)
 . I $S(STAT="A"&(ACT):1,STAT="I"&('ACT):1,1:0) Q
"RTN","ECUMRPC2",34,0)
 . S CLOC=$D(ELOC(LOC)),CLOC=$S(CLOC:"YES",1:"")
"RTN","ECUMRPC2",35,0)
 . S CNT=CNT+1,ST=$P(NODE,U,2) S:ST'="" ST=$$GET1^DIQ(5,ST,1,"I")
"RTN","ECUMRPC2",36,0)
 . S ECFT=$P($G(^DIC(4.1,+$G(^DIC(4,LOC,3)),0)),U)
"RTN","ECUMRPC2",37,0)
 . S ECSN=$P($G(^DIC(4,LOC,99)),U)
"RTN","ECUMRPC2",38,0)
 . S ^TMP($J,"ECLOCATION",CNT)=LOC_U_$P(NODE,U)_U_ST_U_CLOC_U_ECFT_U_ECSN
"RTN","ECUMRPC2",39,0)
 S RESULTS=$NA(^TMP($J,"ECLOCATION"))
"RTN","ECUMRPC2",40,0)
 Q
"RTN","ECUMRPC2",41,0)
CPTFND(RESULTS,ECARY) ;
"RTN","ECUMRPC2",42,0)
 ;
"RTN","ECUMRPC2",43,0)
 ;This broker entry point does a search on a CPT string and returns
"RTN","ECUMRPC2",44,0)
 ;a list of matches from file #81
"RTN","ECUMRPC2",45,0)
 ;        RPC: EC GETCPTLST
"RTN","ECUMRPC2",46,0)
 ;INPUTS      ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC2",47,0)
 ;             CPTSTR - CPT search string
"RTN","ECUMRPC2",48,0)
 ;
"RTN","ECUMRPC2",49,0)
 ;OUTPUTS     RESULTS - The array of cpt codes. Data pieces as follows:-
"RTN","ECUMRPC2",50,0)
 ;             CPT ien^CPT code^Name
"RTN","ECUMRPC2",51,0)
 ;
"RTN","ECUMRPC2",52,0)
 N CPTSTR,ECNT,DIC,ECTG,ECER
"RTN","ECUMRPC2",53,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",54,0)
 S CPTSTR=$P(ECARY,U),ECNT=0 I CPTSTR="" Q
"RTN","ECUMRPC2",55,0)
 K ^TMP($J,"ECPTSRCH"),^TMP("ECCPT",$J)
"RTN","ECUMRPC2",56,0)
 D CPTSRH(81,CPTSTR)
"RTN","ECUMRPC2",57,0)
 F  S ECNT=$O(^TMP("ECCPT",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",58,0)
 .S ^TMP($J,"ECPTSRCH",ECNT)=$G(^TMP("ECCPT",$J,"DILIST",2,ECNT))_U_^TMP("ECCPT",$J,"DILIST","ID",ECNT,.01)_U_^TMP("ECCPT",$J,"DILIST","ID",ECNT,2)
"RTN","ECUMRPC2",59,0)
 K ^TMP("ECCPT",$J)
"RTN","ECUMRPC2",60,0)
 S RESULTS=$NA(^TMP($J,"ECPTSRCH"))
"RTN","ECUMRPC2",61,0)
 Q
"RTN","ECUMRPC2",62,0)
 ;
"RTN","ECUMRPC2",63,0)
PXFND(RESULTS,ECARY) ;
"RTN","ECUMRPC2",64,0)
 ;
"RTN","ECUMRPC2",65,0)
 ;This broker entry point does a search on a procedure string and returns
"RTN","ECUMRPC2",66,0)
 ;a list of matches from file #81 and/or #725
"RTN","ECUMRPC2",67,0)
 ;        RPC: EC GETPXLST
"RTN","ECUMRPC2",68,0)
 ;INPUTS      ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC2",69,0)
 ;             PXSTR -  Procedure search string
"RTN","ECUMRPC2",70,0)
 ;
"RTN","ECUMRPC2",71,0)
 ;OUTPUTS     RESULTS - The array of procedures. Data pieces as follows:-
"RTN","ECUMRPC2",72,0)
 ;             Procedure ien^Procedure code  Procedure Name
"RTN","ECUMRPC2",73,0)
 ;
"RTN","ECUMRPC2",74,0)
 N CPTSTR,ECNT,DIC,ECX,CNT,ECTG,ECER,PXSTR,ECSTR
"RTN","ECUMRPC2",75,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",76,0)
 S PXSTR=$P(ECARY,U),ECNT=0 I PXSTR="" Q
"RTN","ECUMRPC2",77,0)
 K ^TMP($J,"ECPXSRCH"),^TMP("ECCPT",$J),^TMP("ECCPT1",$J)
"RTN","ECUMRPC2",78,0)
 D 
"RTN","ECUMRPC2",79,0)
 . I $P(PXSTR,".")="A" D CPTSRH(81,$P(PXSTR,".",2)) Q
"RTN","ECUMRPC2",80,0)
 . I $P(PXSTR,".")="B" D CPTSRH(725,$P(PXSTR,".",2)) Q
"RTN","ECUMRPC2",81,0)
 . F ECX=81,725 D CPTSRH(ECX,PXSTR)
"RTN","ECUMRPC2",82,0)
 F  S ECNT=$O(^TMP("ECCPT",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",83,0)
 .S ECID=$G(^TMP("ECCPT",$J,"DILIST",2,ECNT))_";ICPT("
"RTN","ECUMRPC2",84,0)
 .S ECSTR=^TMP("ECCPT",$J,"DILIST","ID",ECNT,.01)_"  "_^(2)
"RTN","ECUMRPC2",85,0)
 .S ^TMP($J,"ECPXSRCH",ECNT)=ECID_U_ECSTR
"RTN","ECUMRPC2",86,0)
 S ECNT=0,CNT=+$O(^TMP($J,"ECPXSRCH","A"),-1)
"RTN","ECUMRPC2",87,0)
 F  S ECNT=$O(^TMP("ECCPT1",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",88,0)
 .S CNT=CNT+1,ECID=$G(^TMP("ECCPT1",$J,"DILIST",2,ECNT))_";EC(725,"
"RTN","ECUMRPC2",89,0)
 .S ECSTR=^TMP("ECCPT1",$J,"DILIST","ID",ECNT,1)_"  "_^(.01)
"RTN","ECUMRPC2",90,0)
 .S ^TMP($J,"ECPXSRCH",CNT)=ECID_U_ECSTR
"RTN","ECUMRPC2",91,0)
 K ^TMP("ECCPT",$J),^TMP("ECCPT1",$J)
"RTN","ECUMRPC2",92,0)
 S RESULTS=$NA(^TMP($J,"ECPXSRCH"))
"RTN","ECUMRPC2",93,0)
 Q
"RTN","ECUMRPC2",94,0)
CPTSRH(FILE,CPTSTR) ;Searches either file 81 or 725 for a CPT string
"RTN","ECUMRPC2",95,0)
 I FILE=81 D
"RTN","ECUMRPC2",96,0)
 .D FINDIC(81,"",".01;2","M",CPTSTR,100,"","I $P($$CPT^ICPTCOD(+Y),""^"",7)","","^TMP(""ECCPT"",$J)")
"RTN","ECUMRPC2",97,0)
 I FILE=725 D
"RTN","ECUMRPC2",98,0)
 .D FINDIC(725,"",".01;1","M",CPTSTR,100,"","I '$P(^(0),""^"",3)","","^TMP(""ECCPT1"",$J)")
"RTN","ECUMRPC2",99,0)
 Q
"RTN","ECUMRPC2",100,0)
FINDIC(ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID,ECTG,ECER) ;
"RTN","ECUMRPC2",101,0)
 ;Find records in a file base on search string
"RTN","ECUMRPC2",102,0)
 S ECER=$G(ECER)
"RTN","ECUMRPC2",103,0)
 D FIND^DIC(ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID,ECTG,ECER)
"RTN","ECUMRPC2",104,0)
 K ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID
"RTN","ECUMRPC2",105,0)
 Q
"RTN","ECUMRPC2",106,0)
PROV(ECNUM) ;Return a set of providers from the NEW PERSON file
"RTN","ECUMRPC2",107,0)
 ;Input Variables:-
"RTN","ECUMRPC2",108,0)
 ;  ECNUM  - # of records to return
"RTN","ECUMRPC2",109,0)
 ;  FROM   - text to $O from
"RTN","ECUMRPC2",110,0)
 ;  DATE   - checks for an active person class on this date (optional)
"RTN","ECUMRPC2",111,0)
 ;  ECDIR  - $O direction
"RTN","ECUMRPC2",112,0)
 ;  KEY    - screen users by security key (optional)
"RTN","ECUMRPC2",113,0)
 ;
"RTN","ECUMRPC2",114,0)
 ;Output Variables:-
"RTN","ECUMRPC2",115,0)
 ;  ^TMP($J,"ECFIND",1..n - returned array
"RTN","ECUMRPC2",116,0)
 ;     IEN of file 200^Provider Name^occupation^specialty^subspecialty
"RTN","ECUMRPC2",117,0)
 ;
"RTN","ECUMRPC2",118,0)
 N I,IEN,CNT,FROM,DATE,ECUTN S I=0,CNT=$S(+$G(ECNUM)>0:ECNUM,1:44)  ;KEY="PROVIDER"
"RTN","ECUMRPC2",119,0)
 ;S FROM=$P(ECSTR,"|"),DATE=$P(ECSTR,"|",2)
"RTN","ECUMRPC2",120,0)
 S FROM=$P(ECSTR,"|"),DATE=$P(ECSTR,"|",2),REPORT=$P(ECSTR,"|",3)
"RTN","ECUMRPC2",121,0)
 F  Q:I'<CNT  S FROM=$O(^VA(200,"B",FROM),ECDIR) Q:FROM=""  D
"RTN","ECUMRPC2",122,0)
 . S IEN="" F  S IEN=$O(^VA(200,"B",FROM,IEN),ECDIR) Q:'IEN  D 
"RTN","ECUMRPC2",123,0)
 . . ;I $L(KEY),'$D(^XUSEC(KEY,+IEN)) Q
"RTN","ECUMRPC2",124,0)
 . . ;I +$G(ALLUSERS)=0,'$$ACTIVE^XUSER(IEN) Q  ; terminated user
"RTN","ECUMRPC2",125,0)
 . . I REPORT="R" S I=I+1,^TMP($J,"ECFIND",I)=IEN_"^"_FROM_"^" Q
"RTN","ECUMRPC2",126,0)
 . . S ECUTN=$$GET^XUA4A72(IEN,DATE)
"RTN","ECUMRPC2",127,0)
 . . I DATE>0,ECUTN<1 Q
"RTN","ECUMRPC2",128,0)
 . . S I=I+1,^TMP($J,"ECFIND",I)=IEN_"^"_FROM_"^"_$P(ECUTN,"^",2,4)
"RTN","ECUMRPC2",129,0)
 Q
"RTN","ECUMRPC2",130,0)
LEX ; returns a list of ICD code from lexicon lookup; called from ECUMRPC1
"RTN","ECUMRPC2",131,0)
 ;Input Variables:-
"RTN","ECUMRPC2",132,0)
 ;  ECSTR  - APP|ECX|ECDT
"RTN","ECUMRPC2",133,0)
 ;           application|Search string|procedure date
"RTN","ECUMRPC2",134,0)
 ;
"RTN","ECUMRPC2",135,0)
 ;Output Variables:-
"RTN","ECUMRPC2",136,0)
 ;  ^TMP($J,"ECFIND",1..n - returned array
"RTN","ECUMRPC2",137,0)
 ;     ICD Code^LEX description^IEN of file 80^IEN of file 757.01
"RTN","ECUMRPC2",138,0)
 ;
"RTN","ECUMRPC2",139,0)
 N LEX,ILST,I,IEN,ECX,APP,ECDT,ICD,ICDIEN,DIC,ECCS,ECCD,IMP
"RTN","ECUMRPC2",140,0)
 S ECX=$P(ECSTR,"|",2),ECDT=$P(ECSTR,"|",3)
"RTN","ECUMRPC2",141,0)
 S ECDT=$G(ECDT,DT),DIC="^ICD9("
"RTN","ECUMRPC2",142,0)
 ; Determine Active Coding System based on Date Of Interest 
"RTN","ECUMRPC2",143,0)
 S ECCS=$$SINFO^ICDEX("DIAG",ECDT) ; Supported by ICR #5747
"RTN","ECUMRPC2",144,0)
 ;spacebar default for DUZ
"RTN","ECUMRPC2",145,0)
 I ECX=" ",+($G(DUZ))>0 S IEN=$G(^DISV(DUZ,DIC)) I +IEN D
"RTN","ECUMRPC2",146,0)
 .; Load the ICD code info - Supported by ICR 5747
"RTN","ECUMRPC2",147,0)
 .S ECCD=$$ICDDX^ICDEX(IEN,ECDT,+ECCS,"I") S:+ECCD>0 ECX=$P(ECCD,U,2)
"RTN","ECUMRPC2",148,0)
 S IMP=$$IMPDATE^LEXU("10D"),APP=$S(ECDT<IMP:"ICD",1:"10D") ; Supported by ICR 5679
"RTN","ECUMRPC2",149,0)
 K ^TMP("LEXSCH",$J)
"RTN","ECUMRPC2",150,0)
 D CONFIG^LEXSET(APP,APP,ECDT)    ;LEX DBIA1577
"RTN","ECUMRPC2",151,0)
 D LOOK^LEXA(ECX,APP,1,"",ECDT)   ;LEX DBIA2950
"RTN","ECUMRPC2",152,0)
 I '$D(LEX("LIST",1)) S ^TMP($J,"ECFIND",1)="0^No matches found." Q
"RTN","ECUMRPC2",153,0)
 ;LEX DBIA1573
"RTN","ECUMRPC2",154,0)
 S ILST=1,IEN=+LEX("LIST",1)
"RTN","ECUMRPC2",155,0)
 D ICD I ICDIEN<0 S ^TMP($J,"ECFIND",1)="0^No matches found." Q
"RTN","ECUMRPC2",156,0)
 S ^TMP($J,"ECFIND",ILST)=ICD_U_$P(LEX("LIST",1),U,2)_U_ICDIEN_U_LEX("LIST",1),I=""
"RTN","ECUMRPC2",157,0)
 ; ICD10 Changed to maximum of 101 entries
"RTN","ECUMRPC2",158,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I'<0!(ILST=101)  D
"RTN","ECUMRPC2",159,0)
 .; Loop through all the ICD codes
"RTN","ECUMRPC2",160,0)
 .S IEN=""
"RTN","ECUMRPC2",161,0)
 .F  S IEN=$O(^TMP("LEXFND",$J,I,IEN)) Q:'IEN  D
"RTN","ECUMRPC2",162,0)
 ..D ICD I ICDIEN<0 Q
"RTN","ECUMRPC2",163,0)
 ..S ILST=ILST+1
"RTN","ECUMRPC2",164,0)
 ..S ^TMP($J,"ECFIND",ILST)=ICD_U_^TMP("LEXFND",$J,I,IEN)_U_ICDIEN_U_IEN
"RTN","ECUMRPC2",165,0)
 I $O(^TMP($J,"ECFIND",0))="" S ^TMP($J,"ECFIND",1)="0^No matches found."
"RTN","ECUMRPC2",166,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","ECUMRPC2",167,0)
 Q
"RTN","ECUMRPC2",168,0)
 ;
"RTN","ECUMRPC2",169,0)
ICD ;ICD code
"RTN","ECUMRPC2",170,0)
 S ICD=$$ONE^LEXU(IEN,ECDT,APP) ; Supported by ICR 5679, ICD-9 and ICD-10
"RTN","ECUMRPC2",171,0)
 S ECCS=$$SINFO^ICDEX("DIAG",ECDT) ; Supported by ICR #5747
"RTN","ECUMRPC2",172,0)
 S ICDIEN=+$$ICDDX^ICDEX(ICD,ECDT,+ECCS,"E") ; Supported by ICR #5747
"RTN","ECUMRPC2",173,0)
 Q
"RTN","ECUTL2")
0^8^B39326217^B28978680
"RTN","ECUTL2",1,0)
ECUTL2 ;ALB/JAM - Event Capture Diagnosis Code Selection ;23 Aug 2007
"RTN","ECUTL2",2,0)
 ;;2.0;EVENT CAPTURE;**23,33,47,63,72,95,114**;8 May 96;Build 20
"RTN","ECUTL2",3,0)
 ;
"RTN","ECUTL2",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECUTL2",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR5747
"RTN","ECUTL2",6,0)
 ;
"RTN","ECUTL2",7,0)
DIAG ;ask dx question (primary and multiple secondary) 
"RTN","ECUTL2",8,0)
 ;check for primary dx and display message
"RTN","ECUTL2",9,0)
 D PDXMSG
"RTN","ECUTL2",10,0)
 ;ask for primary dx
"RTN","ECUTL2",11,0)
 D PDX I ECOUT Q
"RTN","ECUTL2",12,0)
 ;ask for secondary dx
"RTN","ECUTL2",13,0)
 D SDX I ECOUT Q
"RTN","ECUTL2",14,0)
 I $D(DTOUT)!$D(DUOUT) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without a diagnosis.",!!
"RTN","ECUTL2",15,0)
 Q
"RTN","ECUTL2",16,0)
PDXMSG ; Check for existence of primary diagnoses and display message
"RTN","ECUTL2",17,0)
 N TXT,ECPDX
"RTN","ECUTL2",18,0)
 S (ECDX,ECDXN,ECDXO)="" K ECDXS
"RTN","ECUTL2",19,0)
 ;Check if primary dx exist in file #721
"RTN","ECUTL2",20,0)
 S ECPDX=$$PDXCK(ECDFN,ECDT,ECL,EC4)
"RTN","ECUTL2",21,0)
 I +ECPDX W ! D 
"RTN","ECUTL2",22,0)
 . W !?5,"WARNING: Primary Diagnoses already on File for this encounter."
"RTN","ECUTL2",23,0)
 . W !?5,"If changed, all procedures will be updated. ("_ECDXN_")"
"RTN","ECUTL2",24,0)
 . S ECDXO=ECDX
"RTN","ECUTL2",25,0)
 I $P(ECPDX,U,2) D
"RTN","ECUTL2",26,0)
 . S TXT="WARNING: Primary diagnoses already sent to PCE. If changed,"
"RTN","ECUTL2",27,0)
 . S TXT=TXT_" all procedures"
"RTN","ECUTL2",28,0)
 . W !!?5,TXT
"RTN","ECUTL2",29,0)
 . S TXT="associated with this encounter will be updated and resent "
"RTN","ECUTL2",30,0)
 . S TXT=TXT_"to PCE."
"RTN","ECUTL2",31,0)
 . W !?5,TXT
"RTN","ECUTL2",32,0)
 Q
"RTN","ECUTL2",33,0)
PDXCK(ECDFN,ECDTX,ECLX,EC4X) ;Get primary dx frm file #721 for pat encounter
"RTN","ECUTL2",34,0)
 ;   Input:   ECDFN     = Patient ien
"RTN","ECUTL2",35,0)
 ;            ECDTX     = Date/time of procedure
"RTN","ECUTL2",36,0)
 ;            ECLX      = Location ien
"RTN","ECUTL2",37,0)
 ;            EC4X      = Clinic ien
"RTN","ECUTL2",38,0)
 ;
"RTN","ECUTL2",39,0)
 ;   Output:  PDXF^PCEF = primary dx flag (1/0)^dx sent to PCE flag (1/0)
"RTN","ECUTL2",40,0)
 ;            ECDX      = Primary diagnoses ien
"RTN","ECUTL2",41,0)
 ;            ECDXN     = Primary diagnoses code
"RTN","ECUTL2",42,0)
 ;            ECDXIEN   = Array of encounter IENs w primary dx
"RTN","ECUTL2",43,0)
 ;
"RTN","ECUTL2",44,0)
 N PDXF,PCEF,DA,DXIEN,DXS,DXN,ECCS
"RTN","ECUTL2",45,0)
 S (PDXF,PCEF)=0,DA="" K ECDXIEN
"RTN","ECUTL2",46,0)
 I $G(ECDFN)=""!($G(ECDTX)="")!($G(ECLX)="")!($G(EC4X)="") Q PDXF_U_PCEF
"RTN","ECUTL2",47,0)
 I $O(^ECH("APAT",ECDFN,ECDTX,""))="" Q PDXF_U_PCEF
"RTN","ECUTL2",48,0)
 F  S DA=$O(^ECH("APAT",ECDFN,ECDTX,DA)) Q:DA=""  D
"RTN","ECUTL2",49,0)
 .I EC4X'=$P($G(^ECH(DA,0)),U,19) Q
"RTN","ECUTL2",50,0)
 .S ECDX=$P($G(^ECH(DA,"P")),U,2) I ECDX="" Q
"RTN","ECUTL2",51,0)
 .; Determine Active Coding System Based on Date of Interest
"RTN","ECUTL2",52,0)
 .S ECCS=$$SINFO^ICDEX("DIAG",ECDTX) ; Supported by ICR 5747
"RTN","ECUTL2",53,0)
 .; Retrieve ICD info - Supported by ICR 5747
"RTN","ECUTL2",54,0)
 .S ECDXN=$P($$ICDDX^ICDEX(ECDX,ECDTX,+ECCS,"I"),U,2)
"RTN","ECUTL2",55,0)
 .S ECDXIEN(DA)=ECDXN_U_ECDX,PDXF=1
"RTN","ECUTL2",56,0)
 .I $D(^ECH(DA,"SEND")),^("SEND")="" S PCEF=1
"RTN","ECUTL2",57,0)
 .I $D(^ECH(DA,"DX")) D
"RTN","ECUTL2",58,0)
 ..S DXS=0 F  S DXS=$O(^ECH(DA,"DX",DXS)) Q:'DXS  D
"RTN","ECUTL2",59,0)
 ...S DXIEN=$P($G(^ECH(DA,"DX",DXS,0)),U)
"RTN","ECUTL2",60,0)
 ...; Retrieve ICD info - Supported by ICR 5747
"RTN","ECUTL2",61,0)
 ...S DXN=$P($$ICDDX^ICDEX(DXIEN,ECDTX,+ECCS,"I"),U,2) S:DXN'="" ECDXS(DXN)=DXIEN
"RTN","ECUTL2",62,0)
 Q PDXF_U_PCEF
"RTN","ECUTL2",63,0)
PDX ;Ask primary diagnoses code
"RTN","ECUTL2",64,0)
 ;   Variables:   ECDX    = Primary diagnoses ien
"RTN","ECUTL2",65,0)
 ;                ECDXN   = Primary diagnoses code, default if define
"RTN","ECUTL2",66,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECUTL2",67,0)
 ;   
"RTN","ECUTL2",68,0)
 N DIC,X,Y,DTOUT,DUOUT,DEFX,ECODE,PROMPT,ECCS
"RTN","ECUTL2",69,0)
 S ECDX=$G(ECDX),ECDXN=$G(ECDXN),PROMPT="Primary ICD Code: "
"RTN","ECUTL2",70,0)
 S:ECDXN'="" DEFX=ECDXN
"RTN","ECUTL2",71,0)
 F  D LEX Q:$G(ECOUT)  D  I $D(ECODE) Q
"RTN","ECUTL2",72,0)
 .I X="" W !,"This is a required response. Enter '^' to exit" Q
"RTN","ECUTL2",73,0)
 .S ECDXN=ECODE
"RTN","ECUTL2",74,0)
 .S ECCS=$$SINFO^ICDEX("DIAG",$G(ECDT)) ; Supported by ICR 5747 
"RTN","ECUTL2",75,0)
 .S ECDX=$$ICDDX^ICDEX(ECODE,$G(ECDT),+ECCS,"E") ; Supported by ICR 5747
"RTN","ECUTL2",76,0)
 Q
"RTN","ECUTL2",77,0)
SDX ;Ask secondary diagnoses code
"RTN","ECUTL2",78,0)
 ;   Variables:   ECDX    = Primary diagnoses ien, default if define
"RTN","ECUTL2",79,0)
 ;                ECDXN   = Primary diagnoses code
"RTN","ECUTL2",80,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECUTL2",81,0)
 ;                ECDXS   = Array with secondary diagnosis code
"RTN","ECUTL2",82,0)
 ;                          subscript=dx code and set equal to dx ien
"RTN","ECUTL2",83,0)
 ;
"RTN","ECUTL2",84,0)
 N Y,X,DEFX,DIC,DTOUT,DUOUT,ECODE,ECCS
"RTN","ECUTL2",85,0)
 S ECOUT=$G(ECOUT),PROMPT="Secondary ICD Code: "
"RTN","ECUTL2",86,0)
 F  D LSTDXS,LEX Q:Y<0  D  I ECOUT Q
"RTN","ECUTL2",87,0)
 .I ECODE="" Q
"RTN","ECUTL2",88,0)
 .I ECODE=$G(ECDXN) W "  Already exist as primary dx." Q
"RTN","ECUTL2",89,0)
 .I $D(ECDXS(ECODE)) D DELDUP Q
"RTN","ECUTL2",90,0)
 .; Determine Active Coding System Based on Date of Interest
"RTN","ECUTL2",91,0)
 .S ECCS=$$SINFO^ICDEX("DIAG",$G(ECDT)) ; Supported by ICR 5747
"RTN","ECUTL2",92,0)
 .S ECDXS(ECODE)=+$$ICDDX^ICDEX(ECODE,$G(ECDT),+ECCS,"E") ; Supported by ICR 5747
"RTN","ECUTL2",93,0)
 Q
"RTN","ECUTL2",94,0)
DELDUP ;Delete secondary diagnosis code from list
"RTN","ECUTL2",95,0)
 N DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","ECUTL2",96,0)
 S DIR("A")="Delete "_ECODE_" Code from List"
"RTN","ECUTL2",97,0)
 S DIR(0)="Y"
"RTN","ECUTL2",98,0)
 D ^DIR
"RTN","ECUTL2",99,0)
 I $D(DIRUT)!($D(DIROUT)) S ECOUT=1 Q
"RTN","ECUTL2",100,0)
 I Y K ECDXS(ECODE)
"RTN","ECUTL2",101,0)
 Q
"RTN","ECUTL2",102,0)
 ;
"RTN","ECUTL2",103,0)
LEX ;ICD code from LEX database
"RTN","ECUTL2",104,0)
 ;K X,Y
"RTN","ECUTL2",105,0)
 N IMP,APP,ECX
"RTN","ECUTL2",106,0)
 S (ECX,X)=$G(DEFX)
"RTN","ECUTL2",107,0)
 ;LEX DBIA1577
"RTN","ECUTL2",108,0)
 S IMP=$$IMPDATE^LEXU("10D"),APP=$S(ECDT<IMP:"ICD",1:"10D") ; Supported by ICR 5679
"RTN","ECUTL2",109,0)
 D CONFIG^LEXSET(APP,APP,$G(ECDT))
"RTN","ECUTL2",110,0)
 D LOOK^LEXA(ECX,APP,1,"",ECDT)   ;LEX DBIA2950
"RTN","ECUTL2",111,0)
 S DIC="757.01",DIC(0)=$S('$L($G(X)):"A",1:"")_"EQM",DIC("A")=PROMPT
"RTN","ECUTL2",112,0)
 D ^DIC
"RTN","ECUTL2",113,0)
 I $D(DTOUT)!$D(DUOUT) S ECOUT=1 Q
"RTN","ECUTL2",114,0)
 I X="" Q
"RTN","ECUTL2",115,0)
 I Y<0 S ECOUT=1 Q
"RTN","ECUTL2",116,0)
 S ECODE=$G(Y(1))
"RTN","ECUTL2",117,0)
 Q 
"RTN","ECUTL2",118,0)
 ;
"RTN","ECUTL2",119,0)
LSTDXS ;list ICD code
"RTN","ECUTL2",120,0)
 N DXS,ECCS
"RTN","ECUTL2",121,0)
 I $D(ECDXS) D
"RTN","ECUTL2",122,0)
 . W !?1,"Secondary ICD code entered:"
"RTN","ECUTL2",123,0)
 . S DXS=""
"RTN","ECUTL2",124,0)
 . F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  D
"RTN","ECUTL2",125,0)
 . . ; Determine Active Coding System Based on Date of Interest
"RTN","ECUTL2",126,0)
 . . S ECCS=$$SINFO^ICDEX("DIAG",$G(ECDT)) ; Supported by ICR 5747
"RTN","ECUTL2",127,0)
 . . W !,?4,DXS,?15,$P($$ICDDX^ICDEX(DXS,$G(ECDT),+ECCS,"E"),"^",4) ; Supported by ICR 5747
"RTN","ECUTL2",128,0)
 Q
"RTN","ECUTL2",129,0)
PXUPD(ECDFN,ECDT,ECL,EC4,ECDXP,ECDXX,ECXIEN) ; Update all associated
"RTN","ECUTL2",130,0)
 ; procedures for an EC Patient encounter with the same primary and 
"RTN","ECUTL2",131,0)
 ; secondary dx codes
"RTN","ECUTL2",132,0)
 ;
"RTN","ECUTL2",133,0)
 ;   Input:   ECDFN     = Patient ien
"RTN","ECUTL2",134,0)
 ;            ECDT      = Date/time of procedure
"RTN","ECUTL2",135,0)
 ;            ECL       = Location ien
"RTN","ECUTL2",136,0)
 ;            EC4       = Clinic ien
"RTN","ECUTL2",137,0)
 ;            ECDXP     = Primary diagnoses code
"RTN","ECUTL2",138,0)
 ;            ECDXX     = Array of secondary diagnoses codes
"RTN","ECUTL2",139,0)
 ;            ECXIEN    = 721 ien, if define don't process
"RTN","ECUTL2",140,0)
 ;
"RTN","ECUTL2",141,0)
 ;  Output: ECERR  0 - Process completed
"RTN","ECUTL2",142,0)
 ;
"RTN","ECUTL2",143,0)
 N ECIEN,ECERR,DIE,DR,DA,DTOUT,DIROUT,ECDXIEN,ECPDX,ECDX,ECDXN,DIC,X
"RTN","ECUTL2",144,0)
 N ECVST,ECVAR1,VALQUIET,DXN,DXSIEN,DIK,ECDXS
"RTN","ECUTL2",145,0)
 S ECERR=0
"RTN","ECUTL2",146,0)
 I $D(ECDXP)="" Q ECERR
"RTN","ECUTL2",147,0)
 S ECPDX=$$PDXCK(ECDFN,ECDT,ECL,EC4)
"RTN","ECUTL2",148,0)
 I '$D(ECDXIEN) Q ECERR
"RTN","ECUTL2",149,0)
 S ECIEN="",DIE="^ECH("
"RTN","ECUTL2",150,0)
 F  S ECIEN=$O(ECDXIEN(ECIEN)) Q:ECIEN=""  D
"RTN","ECUTL2",151,0)
 . I $G(ECXIEN)'="",ECXIEN=ECIEN Q
"RTN","ECUTL2",152,0)
 . S ECNODE=$G(^ECH(ECIEN,"P")) I ECNODE="" Q
"RTN","ECUTL2",153,0)
 . I ECDXP'=$P(ECNODE,U,2) D
"RTN","ECUTL2",154,0)
 . . S DA=ECIEN,DR="20////"_ECDXP D ^DIE
"RTN","ECUTL2",155,0)
 . . S $P(^ECH(ECIEN,"PCE"),"~",11)=ECDXP
"RTN","ECUTL2",156,0)
 . ;delete all secondary diagnosis codes
"RTN","ECUTL2",157,0)
 . S DA(1)=ECIEN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECUTL2",158,0)
 . F  S DA=$O(^ECH(ECIEN,"DX",DA)) Q:'DA  D ^DIK
"RTN","ECUTL2",159,0)
 . I $D(^ECH(ECIEN,"DX")) K ^ECH(ECIEN,"DX")
"RTN","ECUTL2",160,0)
 . ;update secondary diagnosis codes on procedure
"RTN","ECUTL2",161,0)
 . S DXN="" F  S DXN=$O(ECDXX(DXN)) Q:DXN=""  D
"RTN","ECUTL2",162,0)
 . . S DXSIEN=$P(ECDXX(DXN),U) I DXSIEN<0 Q
"RTN","ECUTL2",163,0)
 . . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECUTL2",164,0)
 . . S X=DXSIEN,DIC="^ECH("_DA(1)_","_"""DX"""_"," D FILE^DICN
"RTN","ECUTL2",165,0)
 . ;delete visit and resend to PCE
"RTN","ECUTL2",166,0)
 . S ECVST=+$P($G(^ECH(ECIEN,0)),"^",21) I 'ECVST Q
"RTN","ECUTL2",167,0)
 . ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECUTL2",168,0)
 . K EC2PCE S ECVAR1=$$FNDVST^ECUTL(ECVST,,.EC2PCE)
"RTN","ECUTL2",169,0)
 . ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECUTL2",170,0)
 . N ECPKG,ECSOU
"RTN","ECUTL2",171,0)
 . S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECSOU="EVENT CAPTURE DATA"
"RTN","ECUTL2",172,0)
 . S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST,ECPKG,ECSOU)
"RTN","ECUTL2",173,0)
 . ;- Send to PCE task
"RTN","ECUTL2",174,0)
 . D PCETASK^ECPCEU(.EC2PCE) K EC2PCE
"RTN","ECUTL2",175,0)
 Q ECERR
"RTN","ECV5RPC")
0^9^B14145200^B12908234
"RTN","ECV5RPC",1,0)
ECV5RPC ;ALB/ACS - Event Capture Spreadsheet Data Validation ;07 Aug 01
"RTN","ECV5RPC",2,0)
 ;;2.0;EVENT CAPTURE;**25,30,36,47,114**;8 May 96;Build 20
"RTN","ECV5RPC",3,0)
 ;
"RTN","ECV5RPC",4,0)
 ; Reference to $$SINFO^ICDEX supported by ICR #5747
"RTN","ECV5RPC",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","ECV5RPC",6,0)
 ;
"RTN","ECV5RPC",7,0)
 ;-----------------------------------------------------------------------
"RTN","ECV5RPC",8,0)
 ;  Validates the following Event Capture Spreadsheet Upload fields for
"RTN","ECV5RPC",9,0)
 ;  records sent to PCE:
"RTN","ECV5RPC",10,0)
 ;    1. DIAGNOSIS CODE
"RTN","ECV5RPC",11,0)
 ;    2. ASSOCIATED CLINIC
"RTN","ECV5RPC",12,0)
 ;-----------------------------------------------------------------------
"RTN","ECV5RPC",13,0)
 ;=======================================================================
"RTN","ECV5RPC",14,0)
 ;MODIFICATIONS
"RTN","ECV5RPC",15,0)
 ;08/2001    EC*2.0*30   Updated the Diagnosis validation logic
"RTN","ECV5RPC",16,0)
 ;=======================================================================
"RTN","ECV5RPC",17,0)
 ;
"RTN","ECV5RPC",18,0)
VALDIAG ;Validate Diagnosis Code.  Make sure it exists on the ICD9 file
"RTN","ECV5RPC",19,0)
 N ECDT,ECCS
"RTN","ECV5RPC",20,0)
 S %DT="XST",X=$G(ECENCV,"NOW") D ^%DT S ECDT=+Y
"RTN","ECV5RPC",21,0)
 I ECDXV="" D
"RTN","ECV5RPC",22,0)
 . ; Spreadsheet is missing diagnosis code
"RTN","ECV5RPC",23,0)
 . S ECERRMSG=$P($T(DIAG1^ECV5RPC),";;",2)
"RTN","ECV5RPC",24,0)
 . S ECCOLERR=ECDXPC
"RTN","ECV5RPC",25,0)
 . D ERROR
"RTN","ECV5RPC",26,0)
 ;if diag invalid, send error message
"RTN","ECV5RPC",27,0)
 I ECDXV'="" S (ECDXIEN,ECSFOUND)=0 D
"RTN","ECV5RPC",28,0)
 . ; Updates for ICD10
"RTN","ECV5RPC",29,0)
 . S ECCS=$$SINFO^ICDEX("DIAG",ECDT) ; Supported by ICR 5747
"RTN","ECV5RPC",30,0)
 . S ECDXIEN=$$ICDDX^ICDEX(ECDXV,ECDT,+ECCS,"E") ; Supported by ICR 5747
"RTN","ECV5RPC",31,0)
 . I +ECDXIEN>0,$P(ECDXIEN,"^",10) S ECDXIEN=+ECDXIEN,ECSFOUND=1 Q
"RTN","ECV5RPC",32,0)
 . I 'ECSFOUND D
"RTN","ECV5RPC",33,0)
 . . ; Invalid Diagnosis code
"RTN","ECV5RPC",34,0)
 . . S ECERRMSG=$P($T(DIAG2^ECV5RPC),";;",2)
"RTN","ECV5RPC",35,0)
 . . S ECCOLERR=ECDXPC
"RTN","ECV5RPC",36,0)
 . . D ERROR
"RTN","ECV5RPC",37,0)
 . . Q
"RTN","ECV5RPC",38,0)
 . Q
"RTN","ECV5RPC",39,0)
 Q
"RTN","ECV5RPC",40,0)
 ;
"RTN","ECV5RPC",41,0)
VALCLIN ;Validate Associated Clinic.  Make sure the clinic is active for
"RTN","ECV5RPC",42,0)
 ;the date of the encounter
"RTN","ECV5RPC",43,0)
 S ECERRFLG=0
"RTN","ECV5RPC",44,0)
 I ECCLNV="" D
"RTN","ECV5RPC",45,0)
 . ; Spreadsheet is missing the associated clinic
"RTN","ECV5RPC",46,0)
 . S ECERRMSG=$P($T(CLIN1^ECV5RPC),";;",2)
"RTN","ECV5RPC",47,0)
 . S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",48,0)
 . D ERROR
"RTN","ECV5RPC",49,0)
 . Q
"RTN","ECV5RPC",50,0)
 I 'ECERRFLG,'$D(^SC("B",ECCLNV)) D
"RTN","ECV5RPC",51,0)
 . ; No B x-ref on file
"RTN","ECV5RPC",52,0)
 . S ECERRMSG=$P($T(CLIN2^ECV5RPC),";;",2)
"RTN","ECV5RPC",53,0)
 . S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",54,0)
 . D ERROR
"RTN","ECV5RPC",55,0)
 . Q
"RTN","ECV5RPC",56,0)
 I 'ECERRFLG,$D(^SC("B",ECCLNV)) D
"RTN","ECV5RPC",57,0)
 . ;get associated clinic ien
"RTN","ECV5RPC",58,0)
 . S ECCLNIEN=$O(^SC("B",ECCLNV,0))
"RTN","ECV5RPC",59,0)
 . I '$D(^SC(ECCLNIEN,0)) D
"RTN","ECV5RPC",60,0)
 . . ; Associated clinic ien not on file
"RTN","ECV5RPC",61,0)
 . . S ECERRMSG=$P($T(CLIN3^ECV5RPC),";;",2)
"RTN","ECV5RPC",62,0)
 . . S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",63,0)
 . . D ERROR
"RTN","ECV5RPC",64,0)
 . . Q
"RTN","ECV5RPC",65,0)
 . I 'ECERRFLG D
"RTN","ECV5RPC",66,0)
 . . ;make sure it is of type 'clinic'
"RTN","ECV5RPC",67,0)
 . . N CLINDATA
"RTN","ECV5RPC",68,0)
 . . S CLINDATA=$G(^SC(ECCLNIEN,0))
"RTN","ECV5RPC",69,0)
 . . I $P(CLINDATA,U,3)'="C" D
"RTN","ECV5RPC",70,0)
 . . . S ECERRMSG=$P($T(CLIN4^ECV5RPC),";;",2)
"RTN","ECV5RPC",71,0)
 . . . S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",72,0)
 . . . D ERROR
"RTN","ECV5RPC",73,0)
 . . . Q
"RTN","ECV5RPC",74,0)
 . . Q
"RTN","ECV5RPC",75,0)
 . ;
"RTN","ECV5RPC",76,0)
 . ;check for inactivate and reactivate dates
"RTN","ECV5RPC",77,0)
 . I 'ECERRFLG,$D(^SC(ECCLNIEN,"I")) D
"RTN","ECV5RPC",78,0)
 . . ;get inactivated and reactivated dates
"RTN","ECV5RPC",79,0)
 . . N INACT,REACT
"RTN","ECV5RPC",80,0)
 . . S INACT=$P(^SC(ECCLNIEN,"I"),U,1),REACT=$P(^SC(ECCLNIEN,"I"),U,2)
"RTN","ECV5RPC",81,0)
 . . I INACT'="" D
"RTN","ECV5RPC",82,0)
 . . . I REACT="",ECENCV'<INACT D CLINERR^ECV5RPC
"RTN","ECV5RPC",83,0)
 . . . I REACT,ECENCV'<INACT,ECENCV<REACT D CLINERR^ECV5RPC
"RTN","ECV5RPC",84,0)
 . . . Q
"RTN","ECV5RPC",85,0)
 . . Q
"RTN","ECV5RPC",86,0)
 . Q
"RTN","ECV5RPC",87,0)
 Q
"RTN","ECV5RPC",88,0)
 ;;
"RTN","ECV5RPC",89,0)
CLINERR ;Clinic inactive for this encounter date
"RTN","ECV5RPC",90,0)
 S ECERRMSG=$P($T(CLIN5^ECV5RPC),";;",2)
"RTN","ECV5RPC",91,0)
 S ECCOLERR=ECCLNPC
"RTN","ECV5RPC",92,0)
 D ERROR
"RTN","ECV5RPC",93,0)
 Q
"RTN","ECV5RPC",94,0)
 ;;
"RTN","ECV5RPC",95,0)
ERROR ;--Set up array entry to contain the following:
"RTN","ECV5RPC",96,0)
 ;1. record number
"RTN","ECV5RPC",97,0)
 ;2. column number on spreadsheet containing the record number
"RTN","ECV5RPC",98,0)
 ;3. column number on spreadsheet containing the data in error
"RTN","ECV5RPC",99,0)
 ;4. error message
"RTN","ECV5RPC",100,0)
 ;
"RTN","ECV5RPC",101,0)
 S ECINDEX=ECINDEX+1
"RTN","ECV5RPC",102,0)
 S RESULTS(ECINDEX)=ECRECV_"^"_ECRECPC_"^"_ECCOLERR_"^"_ECERRMSG_"^"
"RTN","ECV5RPC",103,0)
 S ECERRFLG=1
"RTN","ECV5RPC",104,0)
 Q
"RTN","ECV5RPC",105,0)
 ;
"RTN","ECV5RPC",106,0)
 ;Error messages:
"RTN","ECV5RPC",107,0)
 ;
"RTN","ECV5RPC",108,0)
DIAG1 ;;Diagnosis code is required for this DSS Unit
"RTN","ECV5RPC",109,0)
DIAG2 ;;Invalid Diagnosis code
"RTN","ECV5RPC",110,0)
CLIN1 ;;Associated Clinic is required for this DSS Unit
"RTN","ECV5RPC",111,0)
CLIN2 ;;Assoc Clinic "B" x-ref not found on Hosp Location File(#44)
"RTN","ECV5RPC",112,0)
CLIN3 ;;Assoc Clinic not found on Hosp Location File(#44)
"RTN","ECV5RPC",113,0)
CLIN4 ;;Assoc Clinic must be of type "C" (clinic)
"RTN","ECV5RPC",114,0)
CLIN5 ;;Assoc Clinic inactive for this encounter date
"RTN","ECVICDDT")
0^15^B925988^n/a
"RTN","ECVICDDT",1,0)
ECVICDDT ;ALB/MGD - Event Capture ICD-10 Implementation Date ;07 Aug 01
"RTN","ECVICDDT",2,0)
 ;;2.0;EVENT CAPTURE;**114**;8 May 96;Build 20
"RTN","ECVICDDT",3,0)
 ;
"RTN","ECVICDDT",4,0)
 ; RPC: EC ICD10IMPLEMENTATIONDATE 
"RTN","ECVICDDT",5,0)
 ;
"RTN","ECVICDDT",6,0)
 ; Reference to $$IMPDATE^LEXU supported by ICR #5679
"RTN","ECVICDDT",7,0)
 ; Reference to DD^%DT supported 
"RTN","ECVICDDT",8,0)
 ;
"RTN","ECVICDDT",9,0)
 ;  Input: Nothing
"RTN","ECVICDDT",10,0)
 ; Output: Implementation Date of ICD-10 Code Set in MM/DD/YYYY format
"RTN","ECVICDDT",11,0)
 ;         OR -1^Error Message
"RTN","ECVICDDT",12,0)
 ;
"RTN","ECVICDDT",13,0)
ICD10(RESULTS) ; Return the ICD-10 Code Set Implementation Date
"RTN","ECVICDDT",14,0)
 N ECICD10,ECICDDY,ECICDMO,ECICDYR,Y
"RTN","ECVICDDT",15,0)
 K ^TMP($J,"ECICD10")
"RTN","ECVICDDT",16,0)
 ; Call to retrieve ICD-10 Implementation Date
"RTN","ECVICDDT",17,0)
 S ECICD10=$$IMPDATE^LEXU("10D")
"RTN","ECVICDDT",18,0)
 ; Return error if lookup failed
"RTN","ECVICDDT",19,0)
 I +ECICD10<0 S ^TMP($J,"ECICD10",1)=ECICD10 Q
"RTN","ECVICDDT",20,0)
 ; Parse out Month and Date info prior to external call
"RTN","ECVICDDT",21,0)
 S ECICDMO=$E(ECICD10,4,5)
"RTN","ECVICDDT",22,0)
 S ECICDDY=$E(ECICD10,6,7)
"RTN","ECVICDDT",23,0)
 ; Call to get external format of year
"RTN","ECVICDDT",24,0)
 S Y=ECICD10
"RTN","ECVICDDT",25,0)
 D DD^%DT
"RTN","ECVICDDT",26,0)
 ; Load year from return value
"RTN","ECVICDDT",27,0)
 S ECICDYR=$P(Y,",",2),ECICDYR=$E(ECICDYR,2,5)
"RTN","ECVICDDT",28,0)
 ; Parse together MM/DD/YYYY
"RTN","ECVICDDT",29,0)
 S ECICD10=ECICDMO_"/"_ECICDDY_"/"_ECICDYR
"RTN","ECVICDDT",30,0)
 S ^TMP($J,"ECICD10",1)=ECICD10
"RTN","ECVICDDT",31,0)
 S RESULTS=$NA(^TMP($J,"ECICD10"))
"RTN","ECVICDDT",32,0)
 Q
"UP",721,721.038,-1)
721^DX
"UP",721,721.038,0)
721.038
"VER")
8.0^22.0
"^DD",721,721,20,0)
PRIMARY ICD CODE^R*P80'X^ICD9(^P;2^S DIC("S")="I $P($$LS^ICDEX(80,+Y,$G(ECDT)),U,1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",721,721,20,.1)
Primary ICD Code (Diagnosis)
"^DD",721,721,20,3)
Enter the Primary ICD diagnosis code for this encounter.
"^DD",721,721,20,12)
Allows selection of active codes only.
"^DD",721,721,20,12.1)
S DIC("S")="I $P($$LS^ICDEX(80,+Y,$G(ECDT)),U,1)"
"^DD",721,721,20,21,0)
^.001^1^1^3120509^^
"^DD",721,721,20,21,1,0)
The Primary ICD diagnosis code for this encounter.
"^DD",721,721,20,23,0)
^.001^1^1^3120509^^^^
"^DD",721,721,20,23,1,0)
Primary ICD code is derived from the ICD DIAGNOSIS file (#80).
"^DD",721,721,20,"DT")
3120507
"^DD",721,721,38,0)
SECONDARY ICD CODE^721.038PA^^DX;0
"^DD",721,721,38,21,0)
^.001^1^1^3120509^^^
"^DD",721,721,38,21,1,0)
The secondary ICD diagnosis code for the procedure performed.
"^DD",721,721,38,"DT")
3120507
"^DD",721,721.038,0)
SECONDARY ICD CODE SUB-FIELD^^.01^1
"^DD",721,721.038,0,"NM","SECONDARY ICD CODE")

"^DD",721,721.038,.01,0)
SECONDARY ICD CODE^M*P80'X^ICD9(^0;1^S DIC("S")="I $P($$LS^ICDEX(80,+Y,$G(ECDT)),U,1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",721,721.038,.01,1,0)
^.1
"^DD",721,721.038,.01,1,1,0)
721.038^B
"^DD",721,721.038,.01,1,1,1)
S ^ECH(DA(1),"DX","B",$E(X,1,30),DA)=""
"^DD",721,721.038,.01,1,1,2)
K ^ECH(DA(1),"DX","B",$E(X,1,30),DA)
"^DD",721,721.038,.01,3)
Enter the secondary ICD diagnosis code for this procedure.
"^DD",721,721.038,.01,12)
Allows selection of active codes only.
"^DD",721,721.038,.01,12.1)
S DIC("S")="I $P($$LS^ICDEX(80,+Y,$G(ECDT)),U,1)"
"^DD",721,721.038,.01,21,0)
^.001^1^1^3120509^^^
"^DD",721,721.038,.01,21,1,0)
The secondary ICD diagnosis code for the procedure performed.
"^DD",721,721.038,.01,"DT")
3120507
"BLD",8961,6)
^118
**END**
**END**

