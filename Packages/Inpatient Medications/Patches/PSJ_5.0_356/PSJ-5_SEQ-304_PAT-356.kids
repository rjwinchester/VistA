Released PSJ*5*356 SEQ #304
Extracted from mail message
**KIDS**:PSJ*5.0*356^

**INSTALL NAME**
PSJ*5.0*356
"BLD",10781,0)
PSJ*5.0*356^INPATIENT MEDICATIONS^0^3180322^y
"BLD",10781,1,0)
^^3^3^3180104^
"BLD",10781,1,1,0)
This patch will resolve the following issue.
"BLD",10781,1,2,0)
 
"BLD",10781,1,3,0)
I17870223FY18 - FRAMESTACK error
"BLD",10781,4,0)
^9.64PA^^
"BLD",10781,6.3)
7
"BLD",10781,"KRN",0)
^9.67PA^779.2^20
"BLD",10781,"KRN",.4,0)
.4
"BLD",10781,"KRN",.401,0)
.401
"BLD",10781,"KRN",.402,0)
.402
"BLD",10781,"KRN",.403,0)
.403
"BLD",10781,"KRN",.5,0)
.5
"BLD",10781,"KRN",.84,0)
.84
"BLD",10781,"KRN",3.6,0)
3.6
"BLD",10781,"KRN",3.8,0)
3.8
"BLD",10781,"KRN",9.2,0)
9.2
"BLD",10781,"KRN",9.8,0)
9.8
"BLD",10781,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",10781,"KRN",9.8,"NM",1,0)
PSJPADIT^^0^B210594395
"BLD",10781,"KRN",9.8,"NM",2,0)
PSJPADIU^^0^B4945715
"BLD",10781,"KRN",9.8,"NM",3,0)
PSJPAD70^^0^B196235756
"BLD",10781,"KRN",9.8,"NM",4,0)
PSJPAD7I^^0^B94307166
"BLD",10781,"KRN",9.8,"NM","B","PSJPAD70",3)

"BLD",10781,"KRN",9.8,"NM","B","PSJPAD7I",4)

"BLD",10781,"KRN",9.8,"NM","B","PSJPADIT",1)

"BLD",10781,"KRN",9.8,"NM","B","PSJPADIU",2)

"BLD",10781,"KRN",19,0)
19
"BLD",10781,"KRN",19.1,0)
19.1
"BLD",10781,"KRN",101,0)
101
"BLD",10781,"KRN",409.61,0)
409.61
"BLD",10781,"KRN",771,0)
771
"BLD",10781,"KRN",779.2,0)
779.2
"BLD",10781,"KRN",870,0)
870
"BLD",10781,"KRN",8989.51,0)
8989.51
"BLD",10781,"KRN",8989.52,0)
8989.52
"BLD",10781,"KRN",8994,0)
8994
"BLD",10781,"KRN","B",.4,.4)

"BLD",10781,"KRN","B",.401,.401)

"BLD",10781,"KRN","B",.402,.402)

"BLD",10781,"KRN","B",.403,.403)

"BLD",10781,"KRN","B",.5,.5)

"BLD",10781,"KRN","B",.84,.84)

"BLD",10781,"KRN","B",3.6,3.6)

"BLD",10781,"KRN","B",3.8,3.8)

"BLD",10781,"KRN","B",9.2,9.2)

"BLD",10781,"KRN","B",9.8,9.8)

"BLD",10781,"KRN","B",19,19)

"BLD",10781,"KRN","B",19.1,19.1)

"BLD",10781,"KRN","B",101,101)

"BLD",10781,"KRN","B",409.61,409.61)

"BLD",10781,"KRN","B",771,771)

"BLD",10781,"KRN","B",779.2,779.2)

"BLD",10781,"KRN","B",870,870)

"BLD",10781,"KRN","B",8989.51,8989.51)

"BLD",10781,"KRN","B",8989.52,8989.52)

"BLD",10781,"KRN","B",8994,8994)

"BLD",10781,"QDEF")
^^^^NO^^^^^^NO
"BLD",10781,"QUES",0)
^9.62^^
"BLD",10781,"REQB",0)
^9.611^1^1
"BLD",10781,"REQB",1,0)
PSJ*5.0*317^2
"BLD",10781,"REQB","B","PSJ*5.0*317",1)

"MBREQ")
0
"PKG",471,-1)
1^1
"PKG",471,0)
INPATIENT MEDICATIONS^PSJ^UNIT DOSE AND IVS
"PKG",471,20,0)
^9.402P^^
"PKG",471,22,0)
^9.49I^1^1
"PKG",471,22,1,0)
5.0^2971215^2990325^66481
"PKG",471,22,1,"PAH",1,0)
356^3180322
"PKG",471,22,1,"PAH",1,1,0)
^^3^3^3180322
"PKG",471,22,1,"PAH",1,1,1,0)
This patch will resolve the following issue.
"PKG",471,22,1,"PAH",1,1,2,0)
 
"PKG",471,22,1,"PAH",1,1,3,0)
I17870223FY18 - FRAMESTACK error
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","PSJPAD70")
0^3^B196235756^B193106268
"RTN","PSJPAD70",1,0)
PSJPAD70 ;BIR/JCH-HL7 UTILITY FOR PADE INBOUND POCKET ACTIVITY ;01/06/16 1:34  PM
"RTN","PSJPAD70",2,0)
 ;;5.0;INPATIENT MEDICATIONS ;**317,356**;16 DEC 97;Build 7
"RTN","PSJPAD70",3,0)
 ;
"RTN","PSJPAD70",4,0)
 ; Reference to $$HLDATE^HLFNC is supported by DBIA 10106
"RTN","PSJPAD70",5,0)
 ; Reference to ^XMD is supported by DBIA 10070
"RTN","PSJPAD70",6,0)
 ; Reference to ^XLFDT is supported by DBIA# 10103.
"RTN","PSJPAD70",7,0)
 ;
"RTN","PSJPAD70",8,0)
 Q
"RTN","PSJPAD70",9,0)
 ;
"RTN","PSJPAD70",10,0)
DWO(PSJOMS) ; Send Dispensed Without Order (DWO) Alert
"RTN","PSJPAD70",11,0)
 N GROUPS
"RTN","PSJPAD70",12,0)
 S GROUPS=""
"RTN","PSJPAD70",13,0)
 Q:'$$ACTDWO(.PSJOMS)
"RTN","PSJPAD70",14,0)
 D GETGRPS(.PSJOMS,.GROUPS)
"RTN","PSJPAD70",15,0)
 D DWOSEND(.PSJOMS,.GROUPS)
"RTN","PSJPAD70",16,0)
 Q
"RTN","PSJPAD70",17,0)
 ;
"RTN","PSJPAD70",18,0)
ACTDWO(PSJOMS)  ; Check if dispensing device (cabinet) is active for DWO messages
"RTN","PSJPAD70",19,0)
 N CABNAME,CABIEN,RESULT,ERROR,PSJPSYS
"RTN","PSJPAD70",20,0)
 ; Get PADE Inbound System name
"RTN","PSJPAD70",21,0)
 S PSJPSYS=$G(PSJOMS("DISPSYS")) Q:(PSJPSYS="") 0
"RTN","PSJPAD70",22,0)
 S PSJPSYS=$$FIND1^DIC(58.601,"","",PSJPSYS) K DIERR Q:'PSJPSYS ""  ;*356
"RTN","PSJPAD70",23,0)
 ; Get Cabinet name
"RTN","PSJPAD70",24,0)
 S CABNAME=$G(PSJOMS("CABID")) Q:(CABNAME="") 0
"RTN","PSJPAD70",25,0)
 K DIERR S CABIEN=$$FIND1^DIC(58.63,"","",CABNAME) K DIERR Q:'CABIEN ""  ;*356
"RTN","PSJPAD70",26,0)
 ; Get value in SEND DWO MESSAGES field (#3) in PADE DISPENSING DEVICE file (#58.63)
"RTN","PSJPAD70",27,0)
 K DIERR D GETS^DIQ(58.63,CABIEN_",",3,"I","RESULT","ERROR") K DIERR  ;*356
"RTN","PSJPAD70",28,0)
 Q +$G(RESULT(58.63,CABIEN_",",3,"I"))
"RTN","PSJPAD70",29,0)
 ;
"RTN","PSJPAD70",30,0)
GETGRPS(PSJOMS,GROUPS)  ; Find Entity mail group in mail group variable pointer field
"RTN","PSJPAD70",31,0)
 ;                       DWO MAIL GROUP (#3) in the PADE INVENTORY SYSTEM file (58.601)
"RTN","PSJPAD70",32,0)
 ;
"RTN","PSJPAD70",33,0)
 ;  Input: PSJOMS("DISPSYS") = Inbound Dispensing System name.
"RTN","PSJPAD70",34,0)
 ;         PSJOMS("CABID")    = PADE cabinet name.
"RTN","PSJPAD70",35,0)
 ;
"RTN","PSJPAD70",36,0)
 ; Output: GROUPS(EntityPointer,Count)=MailGroupName
"RTN","PSJPAD70",37,0)
 ;
"RTN","PSJPAD70",38,0)
 ;  Dispensed Without Orders (DWO) mail groups may be associated with up to seven entities. 
"RTN","PSJPAD70",39,0)
 ;  Each entity is associated with a precedence level, creating a hierarchy such that only mail groups
"RTN","PSJPAD70",40,0)
 ;  associated with the entity(ies) with the highest precedence will receive a DWO message.
"RTN","PSJPAD70",41,0)
 ;  
"RTN","PSJPAD70",42,0)
 ;  If two entities have the same precedence, and both have DWO mail groups defined, both will receive
"RTN","PSJPAD70",43,0)
 ;  a DWO message. For example, if an incoming PADE inventory HL7 message is associated with a cabinet
"RTN","PSJPAD70",44,0)
 ;  that does not have a DWO mail group defined, but the cabinet is associated with a ward and a clinic,
"RTN","PSJPAD70",45,0)
 ;  each of which DOES have a DWO mail group defined, the DWO message will go the both the ward mail
"RTN","PSJPAD70",46,0)
 ;  group and the clinic mail group, because the ward and the clinic have the same precedence.
"RTN","PSJPAD70",47,0)
 ;
"RTN","PSJPAD70",48,0)
 ;  If none of the entities associated with an incoming PADE inventory HL7 message is associated with
"RTN","PSJPAD70",49,0)
 ;  a DWO mail group, no DWO message is sent.
"RTN","PSJPAD70",50,0)
 ;
"RTN","PSJPAD70",51,0)
 ; PADE DWO message entities, in  order of precedence
"RTN","PSJPAD70",52,0)
 ;   1)PADE CABINET : PADE DISPENSING DEVICE file (#58.63)
"RTN","PSJPAD70",53,0)
 ;   2)........WARD : WARD LOCATION file (#42)
"RTN","PSJPAD70",54,0)
 ;   ........CLINIC : HOSPITAL LOCATION file (#44)
"RTN","PSJPAD70",55,0)
 ;   3)..WARD GROUP : WARD GROUP file (#57.5)
"RTN","PSJPAD70",56,0)
 ;   ..CLINIC GROUP : CLINIC GROUP file (#57.8)
"RTN","PSJPAD70",57,0)
 ;   4).PADE SYSTEM : PADE INVENTORY SYSTEM file (#58.601)
"RTN","PSJPAD70",58,0)
 ;   ......DIVISION : DIVISION file (#40.8)
"RTN","PSJPAD70",59,0)
 ;    
"RTN","PSJPAD70",60,0)
 N PSJPSYS,PSJECNT,PSJMCT,PSJDWINS,PSJDWMG,PSJRSLT,PSJRSLT1,PSJDWENT,PRIO,TEMPGRP,PSJHI,NEXT
"RTN","PSJPAD70",61,0)
 K GROUPS N PSJCL,PSJCLGRP,PSJWRD,PSJWGRP,PSJCAB,PSJDIV,PSJFICHK,PSJENTYP
"RTN","PSJPAD70",62,0)
 ; Get PADE Inbound System pointer to file 58.601, store in "FICHK" node
"RTN","PSJPAD70",63,0)
 S PSJPSYS=$G(PSJOMS("DISPSYS")) Q:(PSJPSYS="") 0
"RTN","PSJPAD70",64,0)
 K DIERR S PSJPSYS=$$FIND1^DIC(58.601,"","",PSJPSYS) K DIERR Q:'PSJPSYS 0  ;*356
"RTN","PSJPAD70",65,0)
 S PSJPSYS("FICHK",PSJPSYS)=PSJOMS("DISPSYS")
"RTN","PSJPAD70",66,0)
 ; Get PADE Cabinet pointer to file 58.63, store in "FICHK" node
"RTN","PSJPAD70",67,0)
 K DIERR S PSJCAB=+$$FIND1^DIC(58.63,,,PSJOMS("CABID")),PSJCAB("FICHK",PSJCAB)=PSJOMS("CABID") K DIERR  ;*356
"RTN","PSJPAD70",68,0)
 K DIERR D GETS^DIQ(58.63,PSJCAB,2,"IE","PSJDIV") K DIERR  ;*356
"RTN","PSJPAD70",69,0)
 ; Get PADE device Division pointer to file 40.8, store in "FICHK" node
"RTN","PSJPAD70",70,0)
 S PSJDIV("FICHK",+$G(PSJDIV(58.63,PSJCAB_",",2,"I")))=$G(PSJDIV(58.63,PSJCAB_",",2,"E"))
"RTN","PSJPAD70",71,0)
 ; Get PADE device Clinic pointer to file 44, store in "FICHK" node
"RTN","PSJPAD70",72,0)
 D LIST^DIC(58.638,","_PSJCAB_",",".01IE","P",,,,,,,"PSJCL") N CL,CC S CC=0 F  S CC=$O(PSJCL("DILIST",CC)) Q:'CC  D
"RTN","PSJPAD70",73,0)
 .S CL=$P($G(PSJCL("DILIST",CC,0)),"^",3) I CL S PSJCL("FICHK",+CL)=$P(PSJCL("DILIST",CC,0),"^",2)
"RTN","PSJPAD70",74,0)
 K PSJCL("DILIST")
"RTN","PSJPAD70",75,0)
 ; Get PADE device Clinic Group pointer to file 57.8, store in "FICHK" node
"RTN","PSJPAD70",76,0)
 D LIST^DIC(58.637,","_PSJCAB_",",".01IE","P",,,,,,,"PSJCLGRP") N CG,CC S CC=0 F  S CC=$O(PSJCLGRP("DILIST",CC)) Q:'CC  D
"RTN","PSJPAD70",77,0)
 .S CG=$P($G(PSJCLGRP("DILIST",CC,0)),"^",3) I CG S PSJCLGRP("FICHK",+CG)=$P(PSJCLGRP("DILIST",CC,0),"^",2)
"RTN","PSJPAD70",78,0)
 K PSJCLGRP("DILIST")
"RTN","PSJPAD70",79,0)
 ; Get PADE device Ward pointer to file 42, store in "FICHK" node
"RTN","PSJPAD70",80,0)
 D LIST^DIC(58.636,","_PSJCAB_",",".01IE","P",,,,,,,"PSJWRD") N WD,WC S WC=0 F  S WC=$O(PSJWRD("DILIST",WC)) Q:'WC  D
"RTN","PSJPAD70",81,0)
 .S WD=$P($G(PSJWRD("DILIST",WC,0)),"^",3) I WD S PSJWRD("FICHK",+WD)=$P(PSJWRD("DILIST",WC,0),"^",2)
"RTN","PSJPAD70",82,0)
 K PSJWRD("DILIST")
"RTN","PSJPAD70",83,0)
 ; Get PADE Ward Group pointer to file 57.5, store in "FICHK" node
"RTN","PSJPAD70",84,0)
 D LIST^DIC(58.635,","_PSJCAB_",",".01IE","P",,,,,,,"PSJWGRP") N WG,WC S WC=0 F  S WC=$O(PSJWGRP("DILIST",WC)) Q:'WC  D
"RTN","PSJPAD70",85,0)
 .S WG=$P($G(PSJWGRP("DILIST",WC,0)),"^",3) I WG S PSJWGRP("FICHK",+WG)=$P(PSJWGRP("DILIST",WC,0),"^",2)
"RTN","PSJPAD70",86,0)
 K PSJWGRP("DILIST")
"RTN","PSJPAD70",87,0)
 ; Get list of DWO MESSAGE ENTITY values for PADE system in PSJRSLT
"RTN","PSJPAD70",88,0)
 D LIST^DIC(58.6014,","_+PSJPSYS_",",.01,"P",,,,,,,"PSJRSLT","PSJROOT")
"RTN","PSJPAD70",89,0)
 ;
"RTN","PSJPAD70",90,0)
 ; Go through each DWO MESSAGE ENTITY, determine if the entity applies to this cabinet/device
"RTN","PSJPAD70",91,0)
 ; by comparing each DWO MESSAGE ENTITY to the list of entities defined for the cabinet. 
"RTN","PSJPAD70",92,0)
 ;
"RTN","PSJPAD70",93,0)
 S PSJECNT=0 F  S PSJECNT=$O(PSJRSLT("DILIST",PSJECNT)) Q:'PSJECNT  D
"RTN","PSJPAD70",94,0)
 .; Find the source file pointed to by the variable pointer DWO MESSAGE ENTITY field (#4) in the PADE INVENTORY SYSTEM file (#58.601)
"RTN","PSJPAD70",95,0)
 .S PSJDWINS=+$G(PSJRSLT("DILIST",PSJECNT,0))
"RTN","PSJPAD70",96,0)
 .; Get list of mail groups associated with this entity
"RTN","PSJPAD70",97,0)
 .D LIST^DIC(58.60141,","_+PSJDWINS_","_+PSJPSYS_",",.01,"P",,,,,,,"PSJRSLT1")
"RTN","PSJPAD70",98,0)
 .S PSJDWENT=$G(^PS(58.601,PSJPSYS,2,PSJDWINS,0))
"RTN","PSJPAD70",99,0)
 .; Define priority for this entity
"RTN","PSJPAD70",100,0)
 .S PSJENTYP=$S(PSJDWENT["PS(58.63":"1^PSJCAB",PSJDWENT["DG(40.8":"4^PSJDIV",PSJDWENT["PS(58.601":"4^PSJPSYS",PSJDWENT["DIC(42":"2^PSJWRD",PSJDWENT["PS(57.8":"3^PSJCLGRP",PSJDWENT["PS(57.5":"3^PSJWGRP",PSJDWENT["SC(":"2^PSJCL",1:99)
"RTN","PSJPAD70",101,0)
 .S PRIO=+PSJENTYP ;S PRIO=$S((PSJDWENT[58.63):1,(PSJDWENT["DIC(42,")!(PSJDWENT["SC("):2,(PSJDWENT[57.5)!(PSJDWENT[57.8):3,(PSJDWENT[58.601)!(PSJDWENT[40.8):4,1:99)
"RTN","PSJPAD70",102,0)
 .; Quit if this DWO MESSAGE ENTITY from PADE INVENTORY SYSTEM (#58.601) is not applicable to this PADE DISPENSING DEVICE (#58.63)
"RTN","PSJPAD70",103,0)
 .S PSJFICHK=$P(PSJENTYP,"^",2)_"(""FICHK"","_+PSJDWENT_")" Q:'$D(@PSJFICHK)
"RTN","PSJPAD70",104,0)
 .; Go through mail groups, set into TMPGRP by priority
"RTN","PSJPAD70",105,0)
 .S PSJMCT=0 F  S PSJMCT=$O(PSJRSLT1("DILIST",PSJMCT)) Q:'PSJMCT  D
"RTN","PSJPAD70",106,0)
 ..S PSJDWMG=$G(PSJRSLT1("DILIST",PSJMCT,0)) Q:'PSJDWMG
"RTN","PSJPAD70",107,0)
 ..S NEXT=+$O(TEMPGRP(PRIO,PSJDWENT,999),-1)+1
"RTN","PSJPAD70",108,0)
 ..S TEMPGRP(PRIO,PSJDWENT,NEXT)=$P(PSJDWMG,"^",2)
"RTN","PSJPAD70",109,0)
 ;
"RTN","PSJPAD70",110,0)
 ; Move highest priority entity mail groups into GROUPS
"RTN","PSJPAD70",111,0)
 S PSJHI=$O(TEMPGRP("")) I PSJHI]"" M GROUPS=TEMPGRP(PSJHI)
"RTN","PSJPAD70",112,0)
 Q
"RTN","PSJPAD70",113,0)
 ;
"RTN","PSJPAD70",114,0)
DWOSEND(PSJOMS,GROUPS) ;This routine will generate a mailman message when an order is dispensed without an order, and a DWO mail group is defined
"RTN","PSJPAD70",115,0)
 ;
"RTN","PSJPAD70",116,0)
 ;Input:  PSJOMS - Array generated from incoming OMS^O05 HL7 PADE pocket activity message
"RTN","PSJPAD70",117,0)
 ;        GROUPS - VistA Mail Groups to send the DWO message
"RTN","PSJPAD70",118,0)
 ;
"RTN","PSJPAD70",119,0)
 N MSGTEXT,XMTEXT,XMSUB,XMY,XMZ,XMDUZ,MSGTYPE,MSHREC,ENTITY,MAILGRP
"RTN","PSJPAD70",120,0)
 N HLFS,HLCS,MTXTLN,MGCNT,DRGFILNM
"RTN","PSJPAD70",121,0)
 S DRGFILNM="" I $G(PSJOMS("DRGITM")) S:PSJOMS("DRGITM")=+PSJOMS("DRGITM") DRGFILNM=$P($G(^PSDRUG(PSJOMS("DRGITM"),0)),"^")
"RTN","PSJPAD70",122,0)
 I DRGFILNM="" S DRGFILNM=$G(PSJOMS("DRGTXT"))
"RTN","PSJPAD70",123,0)
 S:'$G(PSJOMS("PSJDT")) PSJOMS("PSJDT")=$P($$FMTHL7^XLFDT($$NOW^XLFDT()),"-")
"RTN","PSJPAD70",124,0)
 Q:'($G(PSJOMS("TTYPE"))["V")
"RTN","PSJPAD70",125,0)
 S MTXTLN=0
"RTN","PSJPAD70",126,0)
 S MSGTEXT(MTXTLN)=" ",MTXTLN=MTXTLN+1
"RTN","PSJPAD70",127,0)
 S MSGTEXT(MTXTLN)="A medication was dispensed from a PADE device without an order",MTXTLN=MTXTLN+1
"RTN","PSJPAD70",128,0)
 S MSGTEXT(MTXTLN)=" ",MTXTLN=MTXTLN+1
"RTN","PSJPAD70",129,0)
 S MSGTEXT(MTXTLN)="PADE Device:    "_$G(PSJOMS("CABID")),MTXTLN=MTXTLN+1
"RTN","PSJPAD70",130,0)
 S MSGTEXT(MTXTLN)="",MTXTLN=MTXTLN+1
"RTN","PSJPAD70",131,0)
 S MSGTEXT(MTXTLN)="Date:           "_$$FMTE^XLFDT($$FMDATE^HLFNC(PSJOMS("PSJDT"))),MTXTLN=MTXTLN+1
"RTN","PSJPAD70",132,0)
 S MSGTEXT(MTXTLN)="",MTXTLN=MTXTLN+1
"RTN","PSJPAD70",133,0)
 S MSGTEXT(MTXTLN)="Drug:           "_DRGFILNM,MTXTLN=MTXTLN+1
"RTN","PSJPAD70",134,0)
 S MSGTEXT(MTXTLN)="",MTXTLN=MTXTLN+1
"RTN","PSJPAD70",135,0)
 S MSGTEXT(MTXTLN)="Patient:        "_$G(PSJOMS("PTNAMA"))_","_$G(PSJOMS("PTNAMB"))_" "_$G(PSJOMS("PTNAMC")) D
"RTN","PSJPAD70",136,0)
 .S MSGTEXT(MTXTLN)=MSGTEXT(MTXTLN)_"  "_$S($G(PSJOMS("SSN")):" ("_$G(PSJOMS("SSN"))_")",$G(PSJOMS("PTID"))]"":"(Unknown ID: "_$G(PSJOMS("PTID"))_")",1:" ()"),MTXTLN=MTXTLN+1
"RTN","PSJPAD70",137,0)
 S MSGTEXT(MTXTLN)="",MTXTLN=MTXTLN+1
"RTN","PSJPAD70",138,0)
 S MSGTEXT(MTXTLN)="User:           "_$G(PSJOMS("NUR1B"))_$S($G(PSJOMS("NUR1C"))]"":","_PSJOMS("NUR1C"),1:"")_"  - ID: "_$G(PSJOMS("NUR1A")),MTXTLN=MTXTLN+1
"RTN","PSJPAD70",139,0)
 ; Send message to mail groups
"RTN","PSJPAD70",140,0)
 S XMSUB="PADE DWO:"_$G(PSJOMS("CABID"))_"-"_DRGFILNM
"RTN","PSJPAD70",141,0)
 S XMTEXT="MSGTEXT("
"RTN","PSJPAD70",142,0)
 I $D(GROUPS)>1 S ENTITY="" F  S ENTITY=$O(GROUPS(ENTITY)) Q:ENTITY=""  D
"RTN","PSJPAD70",143,0)
 .S MGCNT=0 F  S MGCNT=$O(GROUPS(ENTITY,MGCNT)) Q:'MGCNT  D
"RTN","PSJPAD70",144,0)
 ..S MAILGRP=GROUPS(ENTITY,MGCNT) Q:MAILGRP=""
"RTN","PSJPAD70",145,0)
 ..S XMY("G."_MAILGRP)=""
"RTN","PSJPAD70",146,0)
 I $D(XMY)<10 D GETPDMGR^PSJPAD7I(.XMY)
"RTN","PSJPAD70",147,0)
 Q:$D(XMY)<10
"RTN","PSJPAD70",148,0)
 S XMDUZ="PADE"
"RTN","PSJPAD70",149,0)
 D ^XMD
"RTN","PSJPAD70",150,0)
 Q
"RTN","PSJPAD70",151,0)
 ;
"RTN","PSJPAD70",152,0)
UNLOAD(PSJPSYS,PADIEN,DRWIEN,DRGIEN,DRGDEV,PCKIEN) ; Unload (delete) a drug from pocket and drawer for device DEV and system SYS
"RTN","PSJPAD70",153,0)
 ; INPUT
"RTN","PSJPAD70",154,0)
 ;    PSJPSYS - Inventory System entry from file 58.601
"RTN","PSJPAD70",155,0)
 ;    PADIEN - Dispensing Device (#1) field (subfile 58.6011) from file 58.601
"RTN","PSJPAD70",156,0)
 ;    DRWIEN - Drawer (#2) field (subfile 58.60112) from dispensing device subfile (#58.60111) in file 58.601
"RTN","PSJPAD70",157,0)
 ;    DRGIEN - Drug (Drawer) (#1) field (subfile 58.601121) from drawer subfile (#58.60112) in file 58.61
"RTN","PSJPAD70",158,0)
 ;    DRGDEV - Drug (Device) (#2) field (subfile 58.60111) from dispensing device subfile (#58.6011) in file 58.601
"RTN","PSJPAD70",159,0)
 ;    PCKIEN - Pocket/Subdrawer (#2) field (subfile 58.601122) from drawer subfile (58.60112) in file 58.601
"RTN","PSJPAD70",160,0)
 ;
"RTN","PSJPAD70",161,0)
 N DIK,DA,PSERR
"RTN","PSJPAD70",162,0)
 ; If the unique location in the device, 
"RTN","PSJPAD70",163,0)
 I $G(PSJPSYS)&$G(PADIEN)&$G(DRWIEN) I $D(^PS(58.601,+PSJPSYS,"DEVICE",+PADIEN,"DRAWER",+DRWIEN)) D
"RTN","PSJPAD70",164,0)
 .S DIK="^PS(58.601,"_+PSJPSYS_",""DEVICE"","_+PADIEN_",""DRAWER"","_+DRWIEN_",""SUB"","
"RTN","PSJPAD70",165,0)
 .S DA(3)=+PSJPSYS,DA(2)=+PADIEN,DA(1)=DRWIEN,DA=PCKIEN D ^DIK
"RTN","PSJPAD70",166,0)
 .S DIK="^PS(58.601,"_+PSJPSYS_",""DEVICE"","_+PADIEN_",""DRAWER"","_+DRWIEN_",""DRUG"","
"RTN","PSJPAD70",167,0)
 .S DA(3)=+PSJPSYS,DA(2)=+PADIEN,DA(1)=DRWIEN,DA=DRGIEN D ^DIK
"RTN","PSJPAD70",168,0)
 ;
"RTN","PSJPAD70",169,0)
 ; Kill Drug (DEVICE) only if balance is less than 1
"RTN","PSJPAD70",170,0)
 N DA,DIK,DEVBAL
"RTN","PSJPAD70",171,0)
 S DEVBAL=$P($G(^PS(58.601,+$G(PSJPSYS),"DEVICE",+$G(PADIEN),"DRUG",+$G(DRGDEV),0)),"^",3)
"RTN","PSJPAD70",172,0)
 Q:DEVBAL>0                     ; Don't delete drug from device/cabinet/station if there it's stocked somewhere else
"RTN","PSJPAD70",173,0)
 S DIK="^PS(58.601,"_+PSJPSYS_",""DEVICE"","_+PADIEN_",""DRUG"","
"RTN","PSJPAD70",174,0)
 S DA(2)=+PSJPSYS,DA(1)=+PADIEN,DA=DRGDEV D ^DIK
"RTN","PSJPAD70",175,0)
 Q
"RTN","PSJPAD70",176,0)
 ;
"RTN","PSJPAD70",177,0)
MANUN(PADEV) ; Manually unload one drug at a time from PADE INVENTORY SYSTEM (#58.601) file for device PADEV pointer to DISPENSING DEVICE (#58.63) file
"RTN","PSJPAD70",178,0)
 ; Input : PADEV - Pointer to PADE DISPENSING DEVICE (#58.63) file
"RTN","PSJPAD70",179,0)
 ;
"RTN","PSJPAD70",180,0)
 N DIR,X,Y
"RTN","PSJPAD70",181,0)
 S DIR(0)="Y",DIR("A")="DELETE SINGLE DRUG FROM PADE CABINET"
"RTN","PSJPAD70",182,0)
 S DIR("?")="^D UNLHLP^PSJPAD70"
"RTN","PSJPAD70",183,0)
 S DIR("B")="N" D ^DIR
"RTN","PSJPAD70",184,0)
 Q:'Y
"RTN","PSJPAD70",185,0)
 ; User wants to go through with removing drug from device
"RTN","PSJPAD70",186,0)
 N PSJSTOP S PSJSTOP=0
"RTN","PSJPAD70",187,0)
 F  Q:$G(PSJSTOP)  D UNLDONE(PADEV)
"RTN","PSJPAD70",188,0)
 Q
"RTN","PSJPAD70",189,0)
 ;
"RTN","PSJPAD70",190,0)
UNLDONE(PADEV) ; Manually unload a drug from a pocket
"RTN","PSJPAD70",191,0)
 ; Input :  PADIEN = PADE Dispensing Device IEN (required)
"RTN","PSJPAD70",192,0)
 ;
"RTN","PSJPAD70",193,0)
 N PSJINP,PSDRG,PSJCSUB,SCHLST,PADIEN,DRWIEN,DRGIEN,DRGDEV,PCKIEN,DRWPCK,DRGDEV,PSJDRC,DRUG
"RTN","PSJPAD70",194,0)
 S PSJSTOP=0,DRWPCK="",DRWIEN="",DRGIEN="",PCKIEN=""
"RTN","PSJPAD70",195,0)
 Q:'$G(PADEV)  ; Quit if device IEN not passed in
"RTN","PSJPAD70",196,0)
 S PSJPSYS=$P($G(^PS(58.63,+PADEV,0)),"^",2)
"RTN","PSJPAD70",197,0)
 Q:'$G(PSJPSYS)  ; Quit if device not in inventory file 
"RTN","PSJPAD70",198,0)
 ; Get internal pointer to device from inventory file
"RTN","PSJPAD70",199,0)
 S PADIEN=$O(^PS(58.601,+PSJPSYS,"DEVICE","B",+PADEV,""))
"RTN","PSJPAD70",200,0)
 S PSJINP("PADEV",PADEV)="",PSJINP("PADEV")=PADEV
"RTN","PSJPAD70",201,0)
 S PSJINP("PSJPSYS")=PSJPSYS
"RTN","PSJPAD70",202,0)
 ; Find drugs stocked in device, all CS schedules
"RTN","PSJPAD70",203,0)
 S SCHLST="1:Schedule I;2:Schedule II;2n:Schedule II Non-Narcotics;3:Schedule III;3n:Schedule III Non-Narcotics;4:Schedule IV;5:Schedule V"
"RTN","PSJPAD70",204,0)
 S PSJCSUB="ALL" D ALLSCHED^PSJPDRIP(.PSJCSUB,SCHLST) S PSJCSUB="ALL" M PSJINP("PSJCSUB")=PSJCSUB
"RTN","PSJPAD70",205,0)
 S PSJINP("PSJCSUB",0)="Unscheduled"
"RTN","PSJPAD70",206,0)
 S PSJINP("MANUNLOD")=1
"RTN","PSJPAD70",207,0)
 D DRCAB^PSJPDRIN(.PSJINP,.PSJDRC)
"RTN","PSJPAD70",208,0)
 ; Prompt user to select drug
"RTN","PSJPAD70",209,0)
 D DRUGSEL^PSJPDRTR(.PSJINP,.PSJDRC,.DRUG,.DRWPCK,.PSJSTOP) ; Prompt for drug items
"RTN","PSJPAD70",210,0)
 I $G(DRWPCK)="" S PSJSTOP=1
"RTN","PSJPAD70",211,0)
 Q:$G(PSJSTOP)  ; nothing selected
"RTN","PSJPAD70",212,0)
 ; If ALL drugs selected, reset device and quit
"RTN","PSJPAD70",213,0)
 I DRWPCK="ALL" S PSJINP("PSDRG")="ALL" D ASKRESET^PSJPADPT(PADEV) Q
"RTN","PSJPAD70",214,0)
 N PCKSTR,SELCNT,PCKCNT,PSJSELY,PCKSEL,DIR
"RTN","PSJPAD70",215,0)
 S PCKSTR="",PCKCNT=0
"RTN","PSJPAD70",216,0)
 ; If specific drugs selected, find pockets containing drug, display for selection
"RTN","PSJPAD70",217,0)
 I DRWPCK'="ALL" S PSJINP("PSDRG")=DRWPCK D
"RTN","PSJPAD70",218,0)
 .N POCKET
"RTN","PSJPAD70",219,0)
 .S DRWIEN=0 F  S DRWIEN=$O(DRWPCK(DRWPCK,DRWIEN)) Q:'DRWIEN  D
"RTN","PSJPAD70",220,0)
 ..S POCKET=0 F  S POCKET=$O(DRWPCK(DRWPCK,DRWIEN,POCKET)) Q:'POCKET  D
"RTN","PSJPAD70",221,0)
 ...N PCKNAME,DRGDRW,SUBID
"RTN","PSJPAD70",222,0)
 ...S PCKNAME=$P($G(DRWPCK(DRWPCK,DRWIEN,POCKET)),"^")
"RTN","PSJPAD70",223,0)
 ...S DRGDRW=$P($G(DRWPCK(DRWPCK,DRWIEN,POCKET)),"^",2)
"RTN","PSJPAD70",224,0)
 ...S SUBID=$P($P($G(DRWPCK(DRWPCK,DRWIEN,POCKET)),"^",4),"~~") S:SUBID="" SUBID="-"
"RTN","PSJPAD70",225,0)
 ...S PCKSEL=PCKCNT+1_":"_PCKNAME
"RTN","PSJPAD70",226,0)
 ...S PCKSEL(PCKCNT+1)=DRWPCK_"^"_DRWIEN_"^"_POCKET_"^"_PCKNAME_"^"_DRGDRW_$S($L(SUBID):"^"_SUBID,1:"")
"RTN","PSJPAD70",227,0)
 ...I PCKCNT=0 S PCKSTR=PCKSEL,PCKCNT=PCKCNT+1 Q
"RTN","PSJPAD70",228,0)
 ...S PCKSTR=$G(PCKSTR)_";"_PCKSEL
"RTN","PSJPAD70",229,0)
 ...S PCKCNT=PCKCNT+1
"RTN","PSJPAD70",230,0)
 .Q:'PCKCNT
"RTN","PSJPAD70",231,0)
 .S DIR(0)="SA^"_PCKSTR,DIR("A")="Select Pocket: "
"RTN","PSJPAD70",232,0)
 .F SELCNT=1:1:$L(PCKSTR,";") Q:$P(PCKSTR,";",SELCNT)=""  D
"RTN","PSJPAD70",233,0)
 ..N SUBID S SUBID=$P($G(PCKSEL(SELCNT)),"^",6)
"RTN","PSJPAD70",234,0)
 ..S DIR("A",SELCNT)="   "_$P($P(PCKSTR,";",SELCNT),":")_"   - Drawer "_$P($P($P(PCKSTR,";",SELCNT),":",2),"_")_"  Pocket "_$P($P($P(PCKSTR,";",SELCNT),":",2),"_",2)_$S($L(SUBID):"  Subdrawer: "_SUBID,1:"")
"RTN","PSJPAD70",235,0)
 .D ^DIR I Y'>0 S PSJSTOP=1 Q
"RTN","PSJPAD70",236,0)
 .S PSJSELY=$G(PCKSEL(+Y))
"RTN","PSJPAD70",237,0)
 ; Get sub-file pointers to drawer and pocket selected by user
"RTN","PSJPAD70",238,0)
 Q:$G(PSJSTOP)
"RTN","PSJPAD70",239,0)
 S DRWIEN=$P($G(PSJSELY),"^",2)
"RTN","PSJPAD70",240,0)
 S PCKIEN=$P($G(PSJSELY),"^",3)
"RTN","PSJPAD70",241,0)
 S DRGDRW=$P($G(PSJSELY),"^",5)
"RTN","PSJPAD70",242,0)
 S DRGDEV=$G(DRWPCK(DRWPCK,"DRGDEV"))
"RTN","PSJPAD70",243,0)
 ; If the drug is not stocked in more than one pocket, set the device balance to zero so the UNLOAD removes it completely from device
"RTN","PSJPAD70",244,0)
 I '(PCKCNT>1) D
"RTN","PSJPAD70",245,0)
 .S DEVBAL=$P($G(^PS(58.601,+$G(PSJPSYS),"DEVICE",+$G(PADIEN),"DRUG",+$G(DRGDEV),0)),"^",3)
"RTN","PSJPAD70",246,0)
 .I DEVBAL S $P(^PS(58.601,+$G(PSJPSYS),"DEVICE",+$G(PADIEN),"DRUG",+$G(DRGDEV),0),"^",3)=0
"RTN","PSJPAD70",247,0)
 D UNLOAD(PSJPSYS,PADIEN,DRWIEN,DRGDRW,DRGDEV,PCKIEN)
"RTN","PSJPAD70",248,0)
 W "    ...Done."
"RTN","PSJPAD70",249,0)
 N DIR,X,Y S DIR(0)="Y"
"RTN","PSJPAD70",250,0)
 S DIR("A")="Delete another drug"
"RTN","PSJPAD70",251,0)
 D ^DIR
"RTN","PSJPAD70",252,0)
 I '$G(Y) S PSJSTOP=1
"RTN","PSJPAD70",253,0)
 Q
"RTN","PSJPAD70",254,0)
 ;
"RTN","PSJPAD70",255,0)
UNLHLP  ; Display help text explaining PADE manual unload
"RTN","PSJPAD70",256,0)
 N HELPAR
"RTN","PSJPAD70",257,0)
 S HELPAR(1)="This action removes one drug item from a specific pocket from this"
"RTN","PSJPAD70",258,0)
 S HELPAR(2)="PADE dispensing device in VistA. Manually deleting a drug item does"
"RTN","PSJPAD70",259,0)
 S HELPAR(3)="not affect the PADE vendor, and does not trigger any HL7 messages to"
"RTN","PSJPAD70",260,0)
 S HELPAR(4)="the PADE vendor system. Manually deleting a drug item reduces the"
"RTN","PSJPAD70",261,0)
 S HELPAR(5)="quantity of the drug that displays as available in VistA when running"
"RTN","PSJPAD70",262,0)
 S HELPAR(6)="the PADE INVENTORY REPORT, and also removes the drug from balances"
"RTN","PSJPAD70",263,0)
 S HELPAR(7)="displayed in Inpatient Order Entry."
"RTN","PSJPAD70",264,0)
 S HELPAR(8)="After a drug is deleted, the drug may be added back to the cabinet's"
"RTN","PSJPAD70",265,0)
 S HELPAR(9)="inventory as new HL7 messages are received from the vendor."
"RTN","PSJPAD70",266,0)
 D EN^DDIOL(.HELPAR)
"RTN","PSJPAD70",267,0)
 Q
"RTN","PSJPAD70",268,0)
 ;
"RTN","PSJPAD70",269,0)
OLDPKUP(TMPADATA,ERRMSG,PS586IEN)  ; Return 1 if data in TMPADATA indicates this pocket was updated more recently than the current transaction's date/time
"RTN","PSJPAD70",270,0)
 N POCKSUB  ;   POCKET_SUBDRAWER concatenated
"RTN","PSJPAD70",271,0)
 N PSPRVDT  ;   The last transaction date/time (date/time of the activity at the cabinet) this pocket was updated
"RTN","PSJPAD70",272,0)
 N PSPRVDIE  ;  The IEN of the last transaction date/time in the "PKUPDT" multiple
"RTN","PSJPAD70",273,0)
 N FDA,PSJPSYS,PSJSCR,PSJSCR
"RTN","PSJPAD70",274,0)
 ;
"RTN","PSJPAD70",275,0)
 K DIERR,ERR S TMPADATA("SYS IEN")=$$FIND1^DIC(58.601,"","MX",$G(TMPADATA(1)),,,"ERR") K DIERR  ;*356
"RTN","PSJPAD70",276,0)
 I '$G(TMPADATA("SYS IEN")) Q 0
"RTN","PSJPAD70",277,0)
 ; 
"RTN","PSJPAD70",278,0)
 I '($G(TMPADATA(2))]"") Q 0
"RTN","PSJPAD70",279,0)
 I $G(PSJPSYS),$G(^PS(58.601,+PSJPSYS,0))]"" S TMPADATA("SYS IEN")=PSJPSYS
"RTN","PSJPAD70",280,0)
 S PSJPSYS=TMPADATA("SYS IEN"),PSJSCR="I $S('$G(PSJPSYS):1,1:PSJPSYS=$P(^(0),U,2))"
"RTN","PSJPAD70",281,0)
 I ($G(TMPADATA(1))=""&$G(PSJPSYS)) S TMPADATA(1)=$P(^PS(58.601,PSJPSYS,0),"^")
"RTN","PSJPAD70",282,0)
 K ERR,DIERR S TMPADATA("DEVICE IEN")=$$FIND1^DIC(58.63,,"BX",TMPADATA(2),,PSJSCR,"ERR") K DIERR ;*356
"RTN","PSJPAD70",283,0)
 Q:'$G(TMPADATA("DEVICE IEN")) 0
"RTN","PSJPAD70",284,0)
 S TMPADATA("DEVICE IEN")=$O(^PS(58.601,+$G(TMPADATA("SYS IEN")),"DEVICE","B",TMPADATA("DEVICE IEN"),0))
"RTN","PSJPAD70",285,0)
 Q:'$G(TMPADATA("DEVICE IEN")) 0
"RTN","PSJPAD70",286,0)
 ;
"RTN","PSJPAD70",287,0)
 I $G(TMPADATA(3))="" S TMPADATA(3)="zz"
"RTN","PSJPAD70",288,0)
 S TMPADATA("DRAWER IEN")=$O(^PS(58.601,+$G(TMPADATA("SYS IEN")),"DEVICE",+$G(TMPADATA("DEVICE IEN")),"DRAWER","B",$G(TMPADATA(3)),0))
"RTN","PSJPAD70",289,0)
 I '$G(TMPADATA("DRAWER IEN")) Q 0
"RTN","PSJPAD70",290,0)
 ;
"RTN","PSJPAD70",291,0)
 N DRUG,DEVIEN,SYSIEN
"RTN","PSJPAD70",292,0)
 S DRUG=$G(TMPADATA(4))                          ; Drug
"RTN","PSJPAD70",293,0)
 S DEVIEN=$G(TMPADATA("DEVICE IEN"))             ; Dispensing Device IEN
"RTN","PSJPAD70",294,0)
 S SYSIEN=$G(TMPADATA("SYS IEN"))                ; PADE System IEN
"RTN","PSJPAD70",295,0)
 I '(DRUG]"") Q 0                                ; No drug, no go
"RTN","PSJPAD70",296,0)
 I '$D(^PSDRUG(DRUG,0)) Q 0                      ; No valid drug
"RTN","PSJPAD70",297,0)
 ; Must have PADE system and Dispensing Device
"RTN","PSJPAD70",298,0)
 I '$G(DEVIEN) Q 0
"RTN","PSJPAD70",299,0)
 I '$G(SYSIEN) Q 0
"RTN","PSJPAD70",300,0)
 ;
"RTN","PSJPAD70",301,0)
 N DA,FDA,X,Y,DIC,DIE,DR,D0,ERR,D,DD,DICR,DICRS,DO
"RTN","PSJPAD70",302,0)
 S TMPADATA("DRUG DEV IEN")=$$FIND1^DIC(58.60111,","_DEVIEN_","_SYSIEN_",","MXQ",DRUG,,,"ERR") K DIERR ;*356
"RTN","PSJPAD70",303,0)
 ;
"RTN","PSJPAD70",304,0)
 S TMPADATA(10)=$TR(TMPADATA(10),"~~")_"~~"_+$G(TMPADATA(4))   ; Append subdrawer unique drug IEN suffix to handle different drugs in same subdr-pocket combo
"RTN","PSJPAD70",305,0)
 S:$G(TMPADATA(10))="" TMPADATA(10)=$P($G(^PS(58.6,+$G(PS586IEN),0)),"^",12) S:TMPADATA(10)="" TMPADATA(10)="~~"_+$G(TMPADATA(4))
"RTN","PSJPAD70",306,0)
 S POCKSUB=$G(TMPADATA(7))_"_"_$G(TMPADATA(10))  ;  "POCKET_SUBDRAWER" storage location
"RTN","PSJPAD70",307,0)
 K ERR,DIERR S TMPADATA("POCK/SUB IEN")=$$FIND1^DIC(58.601122,","_TMPADATA("DRAWER IEN")_","_TMPADATA("DEVICE IEN")_","_TMPADATA("SYS IEN")_",","MX",POCKSUB,,,"ERR") K DIERR  ;*356
"RTN","PSJPAD70",308,0)
 ; Get the last date/time this drawer/subdrawer~drug/pocket was updated
"RTN","PSJPAD70",309,0)
 S PSPRVDIE=$O(^PS(58.601,+$G(TMPADATA("SYS IEN")),"DEVICE",+$G(TMPADATA("DEVICE IEN")),"DRAWER",+$G(TMPADATA("DRAWER IEN")),"PKUPDT","B",POCKSUB,""))
"RTN","PSJPAD70",310,0)
 ;
"RTN","PSJPAD70",311,0)
 S PSPRVDT=$P($G(^PS(58.601,+$G(TMPADATA("SYS IEN")),"DEVICE",+$G(TMPADATA("DEVICE IEN")),"DRAWER",+$G(TMPADATA("DRAWER IEN")),"PKUPDT",+$G(PSPRVDIE),0)),"^",2)
"RTN","PSJPAD70",312,0)
 ; If this current update contains a transaction date/time (i.e., activity date/time) older than the last update, don't update inventory
"RTN","PSJPAD70",313,0)
 I $G(PSPRVDT)&$G(TMPADATA(9)) I TMPADATA(9)<PSPRVDT D  Q 1
"RTN","PSJPAD70",314,0)
 .S ERRMSG="- OUTDATED TRANSACTION - "_$G(TMPADATA(1))_"."_$G(TMPADATA(2))_".DRUG="_$P($G(^PSDRUG(+$G(TMPADATA(4)),0)),"^")_"("_$G(TMPADATA(4))_").POCKET="_$G(TMPADATA(7))
"RTN","PSJPAD70",315,0)
 .S ERRMSG=ERRMSG_".LAST UPDATED="_PSPRVDT_".TRANS DT="_TMPADATA(9)
"RTN","PSJPAD70",316,0)
 Q 0
"RTN","PSJPAD7I")
0^4^B94307166^B91877682
"RTN","PSJPAD7I",1,0)
PSJPAD7I ;BIR/JCH-HL7 RECEIVER FOR OMH PADE POCKET ACTIVITY ;9/3/15 1:34  PM
"RTN","PSJPAD7I",2,0)
 ;;5.0;INPATIENT MEDICATIONS ;**317,356**;16 DEC 97;Build 7
"RTN","PSJPAD7I",3,0)
 ;
"RTN","PSJPAD7I",4,0)
 ; Reference to $$HLDATE^HLFNC is supported by DBIA 10106
"RTN","PSJPAD7I",5,0)
 ; Reference to ^XMD is supported by DBIA 10070
"RTN","PSJPAD7I",6,0)
 ; Reference to ^XLFDT is supported by DBIA# 10103.
"RTN","PSJPAD7I",7,0)
 ;
"RTN","PSJPAD7I",8,0)
 Q
"RTN","PSJPAD7I",9,0)
 ;
"RTN","PSJPAD7I",10,0)
OMS(PSJMSH,PSJSEG) ;Process OMS^O05 messages from the PSJ PADE OMS_O05 SUB subscriber protocol
"RTN","PSJPAD7I",11,0)
 ;
"RTN","PSJPAD7I",12,0)
 ; This routine and subroutines assume that all VistA HL7 environment
"RTN","PSJPAD7I",13,0)
 ; variables are properly initialized.
"RTN","PSJPAD7I",14,0)
 ;
"RTN","PSJPAD7I",15,0)
 ; The message will be checked to see if it is valid;
"RTN","PSJPAD7I",16,0)
 ;
"RTN","PSJPAD7I",17,0)
 ;  Input:   HL7 environment variables
"RTN","PSJPAD7I",18,0)
 ; Output:   Processed message or negative acknowledgement
"RTN","PSJPAD7I",19,0)
 ;
"RTN","PSJPAD7I",20,0)
 N PSJERR,PSJHL,PSJOMS,PSJDT
"RTN","PSJPAD7I",21,0)
 S PSJERR="",PSJDT=$$NOW^XLFDT
"RTN","PSJPAD7I",22,0)
 ;
"RTN","PSJPAD7I",23,0)
 D LOADMSG^PSJPAD7U(.PSJOMS,PSJMSH,.PSJERR)   ;Load inbound HL7 message
"RTN","PSJPAD7I",24,0)
 ;
"RTN","PSJPAD7I",25,0)
 Q:'$$VALIDMSG(.PSJOMS,.PSJHL,.PSJERR)
"RTN","PSJPAD7I",26,0)
 ;
"RTN","PSJPAD7I",27,0)
 D FILETRAN(.PSJOMS)
"RTN","PSJPAD7I",28,0)
 Q
"RTN","PSJPAD7I",29,0)
 ;
"RTN","PSJPAD7I",30,0)
VALIDMSG(PSJOMS,XMT,PSJERR)   ;Validate message
"RTN","PSJPAD7I",31,0)
 ;
"RTN","PSJPAD7I",32,0)
 ;  Messages handled: OMS^O05
"RTN","PSJPAD7I",33,0)
 ;
"RTN","PSJPAD7I",34,0)
 ;  OMS messages must contain RQD,ORC,and ZPM segments                                    
"RTN","PSJPAD7I",35,0)
 ;  NTE comments segment will be processed if received
"RTN","PSJPAD7I",36,0)
 ;  PID and PV1 segments are conditional: Transaction Type of V or R in ZPM.1
"RTN","PSJPAD7I",37,0)
 ;  Any additional segments are ignored
"RTN","PSJPAD7I",38,0)
 ;
"RTN","PSJPAD7I",39,0)
 ;  Input:
"RTN","PSJPAD7I",40,0)
 ;    MSGROOT - Root of array holding message
"RTN","PSJPAD7I",41,0)
 ;        XMT - Transmission parameters
"RTN","PSJPAD7I",42,0)
 ;
"RTN","PSJPAD7I",43,0)
 ; Output:
"RTN","PSJPAD7I",44,0)
 ;        XMT - Transmission parameters
"RTN","PSJPAD7I",45,0)
 ;        ERR - segment^sequence^field^code^ACK type^error text
"RTN","PSJPAD7I",46,0)
 ;
"RTN","PSJPAD7I",47,0)
 N MSH,PID,PV1,RQD,ORC,ZPM,NTE,PSJERR,PSJMUMPS,PSJIEN,DIC,DR,PSJHLIDS,I,PSJERR2,PSJERR3
"RTN","PSJPAD7I",48,0)
 S PSJERR="",PSJERR2="",PSJERR3=""
"RTN","PSJPAD7I",49,0)
 ;
"RTN","PSJPAD7I",50,0)
 ; Validate message is a well-formed OMS^O05 message type
"RTN","PSJPAD7I",51,0)
 ;-----------------------------------------------------------
"RTN","PSJPAD7I",52,0)
 ; All messages must have MSH, followed by ZPM
"RTN","PSJPAD7I",53,0)
 ; PID, RQD, ORC, and PV1 are conditional: Transaction Type = V or R ; ZPM.1
"RTN","PSJPAD7I",54,0)
 ; NTE segment is optional.  
"RTN","PSJPAD7I",55,0)
 ; All other segments are ignored.
"RTN","PSJPAD7I",56,0)
 ; Start with CONFIG errors
"RTN","PSJPAD7I",57,0)
 I '$D(PSJOMS("RQD")) D  I $G(PSJERR)]"" Q 0
"RTN","PSJPAD7I",58,0)
 .I $$PATRANS(.PSJOMS)  S PSJERR="Missing RQD segment. " D ERROR^PSJPAD7U(PSJERR,1)
"RTN","PSJPAD7I",59,0)
 I '$D(PSJOMS("ORC")) D  I $G(PSJERR)]"" Q 0
"RTN","PSJPAD7I",60,0)
 .I $$PATRANS(.PSJOMS)  S PSJERR="Missing ORC segment. " D ERROR^PSJPAD7U(PSJERR,1)
"RTN","PSJPAD7I",61,0)
 I '$D(PSJOMS("ZPM")) S PSJERR="Missing ZPM segment. " D ERROR^PSJPAD7U(PSJERR,1) Q 0
"RTN","PSJPAD7I",62,0)
 I $$PATRANS(.PSJOMS) F I="PID","PV1" Q:PSJERR'=""  D
"RTN","PSJPAD7I",63,0)
 .I '$D(PSJOMS(I)) S PSJERR=I_" - Missing segment" D ERROR^PSJPAD7U(PSJERR,1)
"RTN","PSJPAD7I",64,0)
 ;
"RTN","PSJPAD7I",65,0)
 ; Validate required fields
"RTN","PSJPAD7I",66,0)
 ;------------------------------------------------------
"RTN","PSJPAD7I",67,0)
 ; Check for missing/invalid required DATA fields
"RTN","PSJPAD7I",68,0)
 ; Missing PADE system is CONFIG issue
"RTN","PSJPAD7I",69,0)
 S PSJMUMPS="'$$FINDIENS^PSJPAD7U(58.601,PSJOMS(""DISPSYS""))"
"RTN","PSJPAD7I",70,0)
 S PSJERR=$$CHKFLD^PSJPAD7U(PSJOMS("DISPSYS"),,,PSJMUMPS,"PADE SYSTEM -ZPM.2") I $G(PSJERR)]"" D ERROR^PSJPAD7U(PSJERR,1)
"RTN","PSJPAD7I",71,0)
 ; End of CONFIG errors, begin DATA errors
"RTN","PSJPAD7I",72,0)
 S PSJERR=$$CHKFLD^PSJPAD7U(PSJOMS("STYP"),,,"","TRANS CODE -ZPM.1") I $G(PSJERR)]"" D ERROR^PSJPAD7U(PSJERR,1)
"RTN","PSJPAD7I",73,0)
 I $G(PSJOMS("DFN")) S PSJMUMPS="$G(PSJOMS(""DFN""))&$G(PSJOMS(""SSN""))&($P($G(^DPT(+$G(PSJOMS(""DFN"")),0)),""^"",9)'=$G(PSJOMS(""SSN"")))" D
"RTN","PSJPAD7I",74,0)
 .S PSJERR=$$CHKFLD^PSJPAD7U(PSJOMS("DFN"),,,PSJMUMPS,"MISMATCHED PATIENT SSN -PID.3") I $G(PSJERR)]"" D ERROR^PSJPAD7U(PSJERR)
"RTN","PSJPAD7I",75,0)
 S PSJMUMPS="$G(PSJOMS(""TTYPE""))=""V""&($G(PSJOMS(""TRNSAMT"")))&($G(PSJOMS(""VAORD""))="""")"
"RTN","PSJPAD7I",76,0)
 S PSJERR=$$CHKFLD^PSJPAD7U(PSJOMS("TTYPE"),,,PSJMUMPS,"TRANSACTION TYPE -ZPM.1") I $G(PSJERR)]"" D DWO(.PSJOMS)
"RTN","PSJPAD7I",77,0)
 S PSJERR=$$CHKFLD^PSJPAD7U(PSJOMS("NUR1A"),,,"","USER ID -ZPM.11.1") I $G(PSJERR)]"" D ERROR^PSJPAD7U(PSJERR)
"RTN","PSJPAD7I",78,0)
 S PSJERR2=$$CHKFLD^PSJPAD7U(PSJOMS("NUR1B"),,,"","USER ID -ZPM.11.2")
"RTN","PSJPAD7I",79,0)
 S PSJERR3=$$CHKFLD^PSJPAD7U(PSJOMS("NUR1C"),,,"","USER ID -ZPM.11.3")
"RTN","PSJPAD7I",80,0)
 I $G(PSJERR2)]""&($G(PSJERR3)]"") S PSJERR=PSJERR2_" "_PSJERR3 D ERROR^PSJPAD7U(PSJERR)
"RTN","PSJPAD7I",81,0)
 S PSJMUMPS="'$G(PSJOMS(""PSJDT""))?12N.14N&($$HL7TFM^XLFDT($G(PSJOMS(""PSJDT"")))'?7N1"".""1.N)"
"RTN","PSJPAD7I",82,0)
 S PSJERR=$$CHKFLD^PSJPAD7U(PSJOMS("PSJDT"),,,PSJMUMPS,"DATE/TIME -ZPM.19") I $G(PSJERR)]"" D ERROR^PSJPAD7U(PSJERR)
"RTN","PSJPAD7I",83,0)
 ; Check "SEND 'PATIENT NOT ON FILE' MSG" parameter
"RTN","PSJPAD7I",84,0)
 I $$NOPTMSG(.PSJOMS) D
"RTN","PSJPAD7I",85,0)
 .S PSJMUMPS="("",W,V,R,""[("",""_$G(PSJOMS(""TTYPE""))_"",""))&'$G(PSJOMS(""DFN""))"
"RTN","PSJPAD7I",86,0)
 .S PSJERR=$$CHKFLD^PSJPAD7U(+$G(PSJOMS("DFN")),,,PSJMUMPS,"PATIENT NOT ON FILE -PID.3/PID.19")
"RTN","PSJPAD7I",87,0)
 .Q:$G(PSJERR)=""
"RTN","PSJPAD7I",88,0)
 .I PSJERR[">0<" S PSJERR=$P(PSJERR,">0<") D
"RTN","PSJPAD7I",89,0)
 ..S PSJERR=PSJERR_">"_$S($L($G(PSJOMS("SSN"))):$G(PSJOMS("SSN")),$L($G(PSJOMS("PTID"))):$G(PSJOMS("PTID")),1:"")_"<"
"RTN","PSJPAD7I",90,0)
 .D ERROR^PSJPAD7U(PSJERR)
"RTN","PSJPAD7I",91,0)
 ;
"RTN","PSJPAD7I",92,0)
 Q 1
"RTN","PSJPAD7I",93,0)
 ;
"RTN","PSJPAD7I",94,0)
FILETRAN(PSJOMS) ; File into PADE INBOUND TRANSACTION file
"RTN","PSJPAD7I",95,0)
 ; Input - PSJOMS() - All input into PADE INBOUND TRANSACTIONS (#58.6) fields
"RTN","PSJPAD7I",96,0)
 N FDA,PSJDIERR,PSJMSG,PARRAY,TSIGN,PSJ7DT,PSJNOW,PCKBAL
"RTN","PSJPAD7I",97,0)
 S PSJNOW=$$NOW^XLFDT
"RTN","PSJPAD7I",98,0)
 ; Transaction Date/Time
"RTN","PSJPAD7I",99,0)
 S PSJ7DT=$$HL7TFM^XLFDT($E($G(PSJOMS("PSJDT")),1,14))
"RTN","PSJPAD7I",100,0)
 I '$G(PSJ7DT)!($L(PSJ7DT)<7) S PSJ7DT=PSJNOW
"RTN","PSJPAD7I",101,0)
 I PSJ7DT>PSJNOW S PSJ7DT=PSJNOW
"RTN","PSJPAD7I",102,0)
 S FDA(58.6,"+1,",.01)=PSJ7DT
"RTN","PSJPAD7I",103,0)
 ; Dispensing System (console for Integrated Facility)
"RTN","PSJPAD7I",104,0)
 S FDA(58.6,"+1,",1.1)=PSJOMS("DISPSYS")                              ; Dispensing System
"RTN","PSJPAD7I",105,0)
 S FDA(58.6,"+1,",1.2)=$S(PSJOMS("DRWR")]"":PSJOMS("DRWR"),1:"~~")    ; PADE Drawer
"RTN","PSJPAD7I",106,0)
 S FDA(58.6,"+1,",1)=PSJOMS("CABID")                                  ; Cabinet ID / Dispensing Device
"RTN","PSJPAD7I",107,0)
 I $L($G(PSJOMS("DRGITM"))) D                                         ; Drug ID
"RTN","PSJPAD7I",108,0)
 .I $D(^PSDRUG(PSJOMS("DRGITM"),2)) S FDA(58.6,"+1,",2)=PSJOMS("DRGITM") Q
"RTN","PSJPAD7I",109,0)
 .I '$D(^PSDRUG(PSJOMS("DRGITM"),2)) D
"RTN","PSJPAD7I",110,0)
 ..S FDA(58.6,"+1,",18)=PSJOMS("DRGTXT")
"RTN","PSJPAD7I",111,0)
 ..S FDA(58.6,"+1,",19)=PSJOMS("DRGITM")
"RTN","PSJPAD7I",112,0)
 ..S PSJOMS("DRGETXT")=PSJOMS("DRGTXT")
"RTN","PSJPAD7I",113,0)
 ..S PSJOMS("DRGEID")=PSJOMS("DRGITM")
"RTN","PSJPAD7I",114,0)
 S FDA(58.6,"+1,",3)=PSJOMS("TRNSAMT")                                ; Transaction Amount (Quantity)
"RTN","PSJPAD7I",115,0)
 S FDA(58.6,"+1,",4)=PSJOMS("TTYPE")                                  ; Transaction Type
"RTN","PSJPAD7I",116,0)
 S:$L($G(PSJOMS("NUR1A"))) FDA(58.6,"+1,",5)=$G(PSJOMS("DRGUNIT"))    ; Drug Unit
"RTN","PSJPAD7I",117,0)
 S:$L($G(PSJOMS("NUR1A"))) FDA(58.6,"+1,",6.1)=PSJOMS("NUR1A")        ; PADE User
"RTN","PSJPAD7I",118,0)
 S:$L($G(PSJOMS("NUR1B"))) FDA(58.6,"+1,",6.2)=PSJOMS("NUR1B")_","_$G(PSJOMS("NUR1C"))    ; PADE Witness
"RTN","PSJPAD7I",119,0)
 S:$L($G(PSJOMS("NUR2A"))) FDA(58.6,"+1,",7.1)=PSJOMS("NUR2A")
"RTN","PSJPAD7I",120,0)
 S:$L($G(PSJOMS("NUR2B"))) FDA(58.6,"+1,",7.2)=PSJOMS("NUR2B")_","_$G(PSJOMS("NUR2C"))
"RTN","PSJPAD7I",121,0)
 ; If User ID is pointer to NEW PERSON file (#200), update USER field (#6)
"RTN","PSJPAD7I",122,0)
 I $G(PSJOMS("NUR1")) S FDA(58.6,"+1,",6)=PSJOMS("NUR1")
"RTN","PSJPAD7I",123,0)
 ; If Witness ID is pointer to NEW PERSON file (#200), update WITNESS field (#7)
"RTN","PSJPAD7I",124,0)
 I $G(PSJOMS("NUR2")) S FDA(58.6,"+1,",7)=PSJOMS("NUR2")
"RTN","PSJPAD7I",125,0)
 S FDA(58.6,"+1,",10)=$S(PSJOMS("PKT")]"":PSJOMS("PKT"),1:"~~")      ; PADE Pocket
"RTN","PSJPAD7I",126,0)
 S FDA(58.6,"+1,",11)=PSJOMS("SBDRWR")                               ; PADE Subdrawer
"RTN","PSJPAD7I",127,0)
 S FDA(58.6,"+1,",12)=PSJOMS("EXBCNT")                               ; Expected Begin Count
"RTN","PSJPAD7I",128,0)
 S FDA(58.6,"+1,",13)=PSJOMS("ACBCNT")                               ; Actual Begin Count
"RTN","PSJPAD7I",129,0)
 ; Patient Data
"RTN","PSJPAD7I",130,0)
 N POCKET,PTRNSTYP S POCKET=$G(PSJOMS("PKT"))
"RTN","PSJPAD7I",131,0)
 ;I (PSJOMS("TTYPE")="V"!(PSJOMS("TTYPE")="R")!($E(PSJOMS("TTYPE"))="W")!($E(PSJOMS("TTYPE"))="N")!($E(PSJOMS("TTYPE")="A"))!($E(POCKET,$L(POCKET)-2,$L(POCKET))="PSB"))
"RTN","PSJPAD7I",132,0)
 S PTRNSTYP=$$PTRNSTYP(PSJOMS("TTYPE"),$G(POCKET))
"RTN","PSJPAD7I",133,0)
 I PTRNSTYP D SETPAT(.PSJOMS)
"RTN","PSJPAD7I",134,0)
 I (PSJOMS("TTYPE")="L")!(PSJOMS("TTYPE")="U")!(PSJOMS("TTYPE")="C") D
"RTN","PSJPAD7I",135,0)
 .N POCKBIN S POCKBIN=$G(PSJOMS("PKT"))
"RTN","PSJPAD7I",136,0)
 .I $E(POCKBIN,$L(POCKBIN)-2,$L(POCKBIN))="PSB"&($G(PSJOMS("COMMENT"))["PATIENT SPECIFIC BIN") D
"RTN","PSJPAD7I",137,0)
 ..D SETPAT(.PSJOMS)
"RTN","PSJPAD7I",138,0)
 S:$L($G(PSJOMS("VAORD"))) FDA(58.6,"+1,",15)=PSJOMS("VAORD")        ; Pharmacy Order
"RTN","PSJPAD7I",139,0)
 S PARRAY(5)=$G(PSJOMS("TTYPE")),PARRAY(6)=$G(PSJOMS("TRNSAMT"))
"RTN","PSJPAD7I",140,0)
 S TSIGN=$$TSIGN^PSJPADIT(.PARRAY)
"RTN","PSJPAD7I",141,0)
 S PSJOMS("TRNSAMT")=TSIGN_PSJOMS("PSDQ")
"RTN","PSJPAD7I",142,0)
 ; Pocket Balance Forward - If COUNT transaction, Actual Begin Count = Balance Forward (no change)
"RTN","PSJPAD7I",143,0)
 S PCKBAL=$S($E(PSJOMS("TTYPE"))="C":PSJOMS("ACBCNT"),$E(PSJOMS("TTYPE"))="A":PSJOMS("ACBCNT"),1:PSJOMS("EXBCNT")+PSJOMS("TRNSAMT"))
"RTN","PSJPAD7I",144,0)
 S PCKBAL=$S(PCKBAL<0:0,1:PCKBAL)
"RTN","PSJPAD7I",145,0)
 S FDA(58.6,"+1,",16)=PCKBAL
"RTN","PSJPAD7I",146,0)
 I $G(PSJOMS("TOTITMS"))]"" S FDA(58.6,"+1,",17)=PSJOMS("TOTITMS")   ; Total count of this drug in Cabinet
"RTN","PSJPAD7I",147,0)
 I ($G(PSJOMS("TOTITMS"))="") D
"RTN","PSJPAD7I",148,0)
 .S FDA(58.6,"+1,",17)=PSJOMS("ACBCNT")+PSJOMS("TRNSAMT")             ; Device balance not in ZPM.13, try to calculate
"RTN","PSJPAD7I",149,0)
 I $G(PSJOMS("TTYPE"))="B" K FDA(58.6,"+1,",17)
"RTN","PSJPAD7I",150,0)
 I '$L($G(FDA(58.6,"+1,",18))) S:$L($G(PSJOMS("DRGETXT"))) FDA(58.6,"+1,",18)=PSJOMS("DRGETXT") ; Drug Name
"RTN","PSJPAD7I",151,0)
 I '$L($G(FDA(58.6,"+1,",19))) S:$L($G(PSJOMS("DRGEID"))) FDA(58.6,"+1,",19)=PSJOMS("DRGEID")   ; Drug alternate ID
"RTN","PSJPAD7I",152,0)
 I $G(PSJOMS("LOTNUM"))?1.11ANP S FDA(58.6,"+1,",20)=PSJOMS("LOTNUM")  ; Drug Lot Number
"RTN","PSJPAD7I",153,0)
 S:$L($G(PSJOMS("COMMENT"))) FDA(58.6,"+1,",21)=PSJOMS("COMMENT")      ; Comment
"RTN","PSJPAD7I",154,0)
 I $G(PSJOMS("POREORD"))?1.4N S FDA(58.6,"+1,",23)=PSJOMS("POREORD")   ; Reorder level (PAR Qty)
"RTN","PSJPAD7I",155,0)
 I $G(PSJOMS("DRGEID"))?1.30ANP S FDA(58.6,"+1,",19)=PSJOMS("DRGEID")
"RTN","PSJPAD7I",156,0)
 I $G(PSJOMS("DRGETXT"))?1.40ANP S FDA(58.6,"+1,",18)=PSJOMS("DRGETXT")
"RTN","PSJPAD7I",157,0)
 ;
"RTN","PSJPAD7I",158,0)
 ; Set status to Pending
"RTN","PSJPAD7I",159,0)
 S FDA(58.6,"+1,",22)="P"
"RTN","PSJPAD7I",160,0)
 K PSJDIERR,DIERR D UPDATE^DIE(,"FDA","","PSJDIERR") K DIERR ;*356
"RTN","PSJPAD7I",161,0)
 S PSJDIERR=$G(PSJDIERR("DIERR")) I PSJDIERR D
"RTN","PSJPAD7I",162,0)
 .N PSJDIER2,PSJMSG S PSJDIER2=$P(PSJDIERR,"^",2)
"RTN","PSJPAD7I",163,0)
 .S PSJMSG=$G(PSJDIERR("DIERR",+PSJDIERR,"TEXT",$S(PSJDIER2:PSJDIER2,1:1)))
"RTN","PSJPAD7I",164,0)
 .S PSJMSG="FILEMAN ERROR: "_$G(PSJMSG)_"^"_" SYSTEM="_$G(PSJOMS("DISPSYS"))_" CABINET="_$G(PSJOMS("CABID"))
"RTN","PSJPAD7I",165,0)
 .D ERROR^PSJPAD7U(.PSJMSG)
"RTN","PSJPAD7I",166,0)
 Q
"RTN","PSJPAD7I",167,0)
 ;
"RTN","PSJPAD7I",168,0)
SETPAT(PSJOMS) ; Set patient data
"RTN","PSJPAD7I",169,0)
 N PSJMNAME ; Patient Missing from PATIENT (#2) file
"RTN","PSJPAD7I",170,0)
 S:$G(PSJOMS("DFN")) FDA(58.6,"+1,",14)=+$G(PSJOMS("DFN"))
"RTN","PSJPAD7I",171,0)
 S:$G(PSJOMS("PTNAMA"))]"" FDA(58.6,"+1,",14.1)=PSJOMS("PTNAMA")
"RTN","PSJPAD7I",172,0)
 S:$G(PSJOMS("PTNAMB"))]"" FDA(58.6,"+1,",14.2)=PSJOMS("PTNAMB")
"RTN","PSJPAD7I",173,0)
 S:$G(PSJOMS("PTID"))]"" FDA(58.6,"+1,",14.3)=PSJOMS("PTID")
"RTN","PSJPAD7I",174,0)
 S:$G(PSJOMS("VAORD"))]"" FDA(58.6,"+1,",15)=PSJOMS("VAORD")
"RTN","PSJPAD7I",175,0)
 S:$G(PSJOMS("MDFN"))]"" FDA(58.6,"+1,",24)=PSJOMS("MDFN")
"RTN","PSJPAD7I",176,0)
 I $G(PSJOMS("MPTNAMA"))]"" S FDA(58.6,"+1,",25)=PSJOMS("MPTNAMA")
"RTN","PSJPAD7I",177,0)
 I $G(PSJOMS("MPTNAMB"))]"" S FDA(58.6,"+1,",25)=$G(FDA(58.6,"+1,",25))_$S($G(FDA(58.6,"+1,",25))]"":",",1:"")_$G(PSJOMS("MPTNAMB"))
"RTN","PSJPAD7I",178,0)
 Q
"RTN","PSJPAD7I",179,0)
 ;
"RTN","PSJPAD7I",180,0)
DWO(PSJOMS) ; Send Dispensed Without Order (DWO) Alert
"RTN","PSJPAD7I",181,0)
 N GROUPS
"RTN","PSJPAD7I",182,0)
 S GROUPS=""
"RTN","PSJPAD7I",183,0)
 Q:'$$ACTDWO^PSJPAD70(.PSJOMS)
"RTN","PSJPAD7I",184,0)
 D GETGRPS^PSJPAD70(.PSJOMS,.GROUPS)
"RTN","PSJPAD7I",185,0)
 D DWOSEND^PSJPAD70(.PSJOMS,.GROUPS)
"RTN","PSJPAD7I",186,0)
 Q
"RTN","PSJPAD7I",187,0)
 ;
"RTN","PSJPAD7I",188,0)
NOPTMSG(PSJOMS)  ; Check "SEND 'NO PATIENT ON FILE' MSG' Parameter.
"RTN","PSJPAD7I",189,0)
 ; Input : PSJOMS("DISPSYS")        ; Dispensing System, ZPM-2, filed into Field #11 in PADE DISPENSING DEVICE (#58.63) file
"RTN","PSJPAD7I",190,0)
 ;         PSJOMS("PSJOMS("CABID")
"RTN","PSJPAD7I",191,0)
 N PADEVIEN,PSJPSYS,PSJERR2,PADPTMSG
"RTN","PSJPAD7I",192,0)
 S PADPTMSG=0
"RTN","PSJPAD7I",193,0)
 K DIERR,PSJERR2 S PSJPSYS=$$FIND1^DIC(58.601,,"BX",$G(PSJOMS("DISPSYS")),,,"PSJERR2") K DIERR  ;*356
"RTN","PSJPAD7I",194,0)
 I '$G(PSJERR2("DIERR")) K DIERR,PSJERR2 S PADEVIEN=$$FIND1^DIC(58.63,,"BX",$G(PSJOMS("CABID")),,,"PSJERR2") K DIERR  ;*356
"RTN","PSJPAD7I",195,0)
 I '$G(PSJERR2("DIERR")),$G(PADEVIEN) S PADPTMSG=+$G(^PS(58.63,+PADEVIEN,8))
"RTN","PSJPAD7I",196,0)
 Q $S($G(PADPTMSG):1,1:0)
"RTN","PSJPAD7I",197,0)
 ;
"RTN","PSJPAD7I",198,0)
GETDIV(PSJOMS) ; Get Division from DISPENSING CABINET file (#58.63)
"RTN","PSJPAD7I",199,0)
 N CABNAME,CABIEN,RESULT,PSJPSYS,PSJDIV
"RTN","PSJPAD7I",200,0)
 S CABNAME=$G(PSJOMS("CABID")) Q:(CABNAME="") ""
"RTN","PSJPAD7I",201,0)
 S PSJPSYS=$G(PSJOMS("DISPSYS")) Q:(PSJPSYS="") ""
"RTN","PSJPAD7I",202,0)
 K DIERR S PSJPSYS=$$FIND1^DIC(58.601,"","",PSJPSYS) K DIERR Q:'PSJPSYS ""  ;*356
"RTN","PSJPAD7I",203,0)
 K DIERR S CABIEN=$$FIND1^DIC(58.63,,,CABNAME,,,"RESULT") K DIERR Q:'CABIEN ""  ;*356
"RTN","PSJPAD7I",204,0)
 K RESULT
"RTN","PSJPAD7I",205,0)
 K DIERR D GETS^DIQ(58.63,CABIEN,2,"I","RESULT") K DIERR ;*356
"RTN","PSJPAD7I",206,0)
 S PSJDIV=$G(RESULT(58.63,CABIEN_",",2,"I"))
"RTN","PSJPAD7I",207,0)
 Q PSJDIV
"RTN","PSJPAD7I",208,0)
 ;
"RTN","PSJPAD7I",209,0)
PATRANS(PSJOMS) ; Return flag indicating whether or not transaction type REQUIRES PID and PV1 segments
"RTN","PSJPAD7I",210,0)
 I ($G(PSJOMS("TTYPE"))="V") Q 1
"RTN","PSJPAD7I",211,0)
 I ($G(PSJOMS("TTYPE"))="R") Q 1
"RTN","PSJPAD7I",212,0)
 Q 0
"RTN","PSJPAD7I",213,0)
 ;
"RTN","PSJPAD7I",214,0)
DRGXREF(DA,PSJOMS) ; Return Drug file (#50) IEN, if present in PSJOMS("DRGITM"). If no Drug IEN, return 0.
"RTN","PSJPAD7I",215,0)
 ; Called from 'AC' cross reference in PADE INBOUND TRANSACTION (#58.6) file
"RTN","PSJPAD7I",216,0)
 N DRUGIEN
"RTN","PSJPAD7I",217,0)
 S DRUGIEN=+$G(PSJOMS("DRGITM"))
"RTN","PSJPAD7I",218,0)
 ; If the drug id is not purely numeric, it's not an IEN
"RTN","PSJPAD7I",219,0)
 I DRUGIEN'=$G(PSJOMS("DRGITM")) S DRUGIEN=0
"RTN","PSJPAD7I",220,0)
 Q +$G(DRUGIEN)
"RTN","PSJPAD7I",221,0)
 ;
"RTN","PSJPAD7I",222,0)
GETPDMGR(XMY)  ; Return all users with PSJ PADE MGR key in XMY array
"RTN","PSJPAD7I",223,0)
 N X,PADMGR
"RTN","PSJPAD7I",224,0)
 D LIST^DIC(200,,.01,"PI",,,,,"I $D(^XUSEC(""PSJ PADE MGR"",+$G(Y)))",,"PADMGR")
"RTN","PSJPAD7I",225,0)
 S X=0 F  S X=$O(PADMGR("DILIST",X)) Q:'X  S PADMGR=+$G(PADMGR("DILIST",X,0)) I PADMGR S XMY(PADMGR)=""
"RTN","PSJPAD7I",226,0)
 Q
"RTN","PSJPAD7I",227,0)
 ;
"RTN","PSJPAD7I",228,0)
PTRNSTYP(TTYPE,POCKET) ; Return 1 if TTYPE is a patient transaction type, return zero if TTYPE is NOT patient transaction type
"RTN","PSJPAD7I",229,0)
 N PTRNSTYP,PADEPCK
"RTN","PSJPAD7I",230,0)
 S PADEPCK=$G(POCKET)
"RTN","PSJPAD7I",231,0)
 ; 
"RTN","PSJPAD7I",232,0)
 ; Vend, Return, and Waste are always patient transactions
"RTN","PSJPAD7I",233,0)
 ; Null and Discrepancy may be patient transactions
"RTN","PSJPAD7I",234,0)
 S PTRNSTYP=$S(TTYPE="":0,",V,R,W,N,A,"[(","_TTYPE_","):1,($E(PADEPCK,$L(PADEPCK)-2,$L(PADEPCK))="PSB"):1,1:0)
"RTN","PSJPAD7I",235,0)
 Q PTRNSTYP
"RTN","PSJPADIT")
0^1^B210594395^B218833371
"RTN","PSJPADIT",1,0)
PSJPADIT ;BIR/JCH-INPATIENT PADE INVENTORY FILE UTILITIES ;25 SEP 97 / 7:41 AM
"RTN","PSJPADIT",2,0)
 ;;5.0;INPATIENT MEDICATIONS ;**317,356**;16 DEC 97;Build 7
"RTN","PSJPADIT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSJPADIT",4,0)
 ;
"RTN","PSJPADIT",5,0)
 ; Reference to ^XLFDT is supported by DBIA 10103.
"RTN","PSJPADIT",6,0)
 ; Reference to ^PSDRUG is supported by DBIA 2192.
"RTN","PSJPADIT",7,0)
 ;
"RTN","PSJPADIT",8,0)
FIL58601(PADATA,PSJOMS) ; File PADE data into PADE INVENTORY file #58.601
"RTN","PSJPADIT",9,0)
 ; PADE HL7 messages filed into the PADE IN TRANSACTION (#58.6) trigger new-style 'AC' action cross reference, entering here.
"RTN","PSJPADIT",10,0)
 ;
"RTN","PSJPADIT",11,0)
 ;INPUT:PADATA array - Passed in X(n) array from ACTION cross reference on PADE INBOUND TRANSACTIONS (#58.6) file.
"RTN","PSJPADIT",12,0)
 ;        Array Node   File#   Field#    Field Name              Description
"RTN","PSJPADIT",13,0)
 ;        ----------   ------  ------    ------------------      -------------   
"RTN","PSJPADIT",14,0)
 ;        PADATA(1)   58.6       1.1    PADE VENDOR             IEN of PADE system from file 58.7
"RTN","PSJPADIT",15,0)
 ;        PADATA(2)   58.6         1    DISPENSING DEVICE       Name (text) of PADE DEVICE
"RTN","PSJPADIT",16,0)
 ;        PADATA(3)   58.6       1.2    DRAWER                  Name (text) of PADE DRAWER
"RTN","PSJPADIT",17,0)
 ;        PADATA(4)   58.6         2    DRUG                    Pointer to DRUG (#50) file.
"RTN","PSJPADIT",18,0)
 ;        PADATA(5)   58.6         4    TYPE OF TRANSACTION     Set of codes describing transaction (L=LOAD,U=UNLOAD,D=DISPENSE,R=RETURN,X=DESTROY).
"RTN","PSJPADIT",19,0)
 ;        PADATA(6)   58.6         3    QUANTITY                Quantity (item count) of drugs documented in transaction.
"RTN","PSJPADIT",20,0)
 ;        PADATA(7)   58.6        10    POCKET                  Most specific storage location within drawer or subdrawer.
"RTN","PSJPADIT",21,0)
 ;        PADATA(8)   58.6        13    ACTUAL BEGIN BALANCE    Actual item count performed at PADE device prior to transaction.
"RTN","PSJPADIT",22,0)
 ;        PADATA(9)   58.6       .01    TRANSACTION DATE/TIME   Date/Time the activity occurred at the dispensing device
"RTN","PSJPADIT",23,0)
 ;        PADATA(10)  58.6        11    SUBDRAWER               Another storage division of a cabinet
"RTN","PSJPADIT",24,0)
 ;        PADATA(12)  58.6        12    EXPECTED BEGIN COUNT    Expected Quantity of Drug in Bin/Pocket at start of transaction
"RTN","PSJPADIT",25,0)
 ;        PADATA(16)  58.6        16    POCKET BALANCE          Item count of pocket/bin
"RTN","PSJPADIT",26,0)
 ;
"RTN","PSJPADIT",27,0)
 ;INPUT:PSJOMS array - Additional PADE HL7 information
"RTN","PSJPADIT",28,0)
 ;        PSJOMS("DRGITM") - Drug ID
"RTN","PSJPADIT",29,0)
 ;        PSJOMS("CABID")  - PADE Cabinet ID
"RTN","PSJPADIT",30,0)
 ;        PSJOMS("DISPSYS")- PADE System
"RTN","PSJPADIT",31,0)
 ;
"RTN","PSJPADIT",32,0)
 N ERRMSG,PADNOW,PSJNOTE
"RTN","PSJPADIT",33,0)
 Q:'$D(PADATA)>1          ; No data passed in
"RTN","PSJPADIT",34,0)
 ; Don't allow future Last Pocket Update date/times (could suppress actual updates)
"RTN","PSJPADIT",35,0)
 S PADNOW=$$NOW^XLFDT()
"RTN","PSJPADIT",36,0)
 I $G(PADATA(9))>PADNOW S PADATA(9)=PADNOW
"RTN","PSJPADIT",37,0)
 ;
"RTN","PSJPADIT",38,0)
 N INVDATA  ; Array to hold data returned from GETS^DIQ calls (re-initialized and re-used)
"RTN","PSJPADIT",39,0)
 N ERR      ; Array to hold messages returned from DIE and DIC calls. (re-initialized and re-used).
"RTN","PSJPADIT",40,0)
 N FDA      ; Array containing the name of the root of a VA FileMan Data Array
"RTN","PSJPADIT",41,0)
 ;
"RTN","PSJPADIT",42,0)
 N PS586IEN S PS586IEN=+$G(DA) I PS586IEN I $P($G(^PS(58.6,PS586IEN,3)),"^")]"" S $P(^PS(58.6,PS586IEN,3),"^")="I"
"RTN","PSJPADIT",43,0)
 S PSJNOTE=$$UPPER^HLFNC($G(^PS(58.6,+$G(PS586IEN),2)))
"RTN","PSJPADIT",44,0)
 I PSJNOTE["CANCEL" Q   ; Cancel Inventory Update if comments contain 'CANCEL'
"RTN","PSJPADIT",45,0)
 S PADATA(12)=$P($G(^PS(58.6,+$G(PS586IEN),0)),"^",13)
"RTN","PSJPADIT",46,0)
 S PADATA(16)=$P($G(^PS(58.6,+$G(PS586IEN),1)),"^",2)
"RTN","PSJPADIT",47,0)
 ;S PADATA(4)=$P($G(^PS(58.6,+$G(PS586IEN),0)),"^",3) ;UNCOMMENT THIS LINE IN TEST SYSTEM ONLY TO MOCK TEST CREATING AN INVENTORY UPDATE IN FILEMAN
"RTN","PSJPADIT",48,0)
 Q:$E($G(PADATA(5)))="W"&(PSJNOTE'["RETURN BIN")  ; Waste Transaction should not update inventory, unless RETURN BIN
"RTN","PSJPADIT",49,0)
 ;
"RTN","PSJPADIT",50,0)
 ; Quit if this transaction is older than the most recent update date/time for the pocket-drug
"RTN","PSJPADIT",51,0)
 N TMPARRAY M PSTMPAR=PADATA
"RTN","PSJPADIT",52,0)
 I $$OLDPKUP^PSJPAD70(.PSTMPAR,.ERR,PS586IEN) D LOGERR(.ERR) Q
"RTN","PSJPADIT",53,0)
 K PSTMPAR
"RTN","PSJPADIT",54,0)
 ;
"RTN","PSJPADIT",55,0)
 ; File PADE System from PADE INBOUND TRANSACTION file to PADE INVENTORY file
"RTN","PSJPADIT",56,0)
 I '$$FILSYS(.PADATA,.ERR) S ERR="CANNOT FILE SYSTEM "_ERR D LOGERR(.ERR) Q
"RTN","PSJPADIT",57,0)
 ;
"RTN","PSJPADIT",58,0)
 ; File PADE Device from PADE INBOUND TRANSACTION file to PADE INVENTORY file
"RTN","PSJPADIT",59,0)
 I '$$FILDEV^PSJPADIU(.PADATA,.ERR) S ERR="PADE DEVICE NOT UPDATED "_ERR D LOGERR(.ERR) Q
"RTN","PSJPADIT",60,0)
 ;
"RTN","PSJPADIT",61,0)
 I ($TR(PADATA(3),"~")="")&($TR(PADATA(7),"~")="") Q   ; No drawer, no pocket = no inventory update
"RTN","PSJPADIT",62,0)
 ;
"RTN","PSJPADIT",63,0)
 ; Add PADE Drawer from PADE INBOUND TRANSACTION file to PADE System Dispensing Device in PADE INVENTORY file
"RTN","PSJPADIT",64,0)
 I '$$FILDRWR(.PADATA,.ERR) S ERR="DRAWER NOT UPDATED "_ERR D LOGERR(.ERR) Q
"RTN","PSJPADIT",65,0)
 ;
"RTN","PSJPADIT",66,0)
 ; Add drug from PADE INBOUND TRANSACTION file to PADE System Dispensing Device in PADE INVENTORY file.
"RTN","PSJPADIT",67,0)
 I '$$FILDRUG(.PADATA,.ERR) S ERR="DRUG/DEVICE NOT UPDATED "_ERR D  Q
"RTN","PSJPADIT",68,0)
 .Q:'$G(PADATA(4))  ; Consider drug 'NOT ON FILE' only if a valid VistA IEN (all numeric). Otherwise, the ID was never intended for VistA.
"RTN","PSJPADIT",69,0)
 .I $L($G(PSJOMS("DRGITM"))) Q:PSJOMS("DRGITM")'?1.N
"RTN","PSJPADIT",70,0)
 .S:$L($G(PSJOMS("CABID"))) ERR=ERR_":CABINET="_PSJOMS("CABID")
"RTN","PSJPADIT",71,0)
 .S:$L($G(PSJOMS("DISPSYS"))) ERR=ERR_":SYSTEM="_PSJOMS("DISPSYS")
"RTN","PSJPADIT",72,0)
 .D LOGERR(.ERR) Q
"RTN","PSJPADIT",73,0)
 ;
"RTN","PSJPADIT",74,0)
 ; Add drug from PADE INBOUND TRANSACTION file to Drug sub-file in Drawer multiple of PADE INVENTORY file
"RTN","PSJPADIT",75,0)
 I '$$DRGDRWR(.PADATA,.ERR) S ERR="DRUG/DRAWER NOT UPDATED "_ERR D LOGERR(.ERR) Q
"RTN","PSJPADIT",76,0)
 ;
"RTN","PSJPADIT",77,0)
 ; Add Pocket sub-file entry to Drawer multiple in PADE INVENTORY file
"RTN","PSJPADIT",78,0)
 I '$$UPCKDRW(.PADATA,.ERR) S ERR="POCKET NOT UPDATED "_ERR D LOGERR(.ERR) Q
"RTN","PSJPADIT",79,0)
 ;
"RTN","PSJPADIT",80,0)
 ; Update Pocket balance
"RTN","PSJPADIT",81,0)
 I '$$UPCKBAL(.PADATA,.ERR) S ERR="POCKET BALANCE NOT UPDATED "_ERR D LOGERR(.ERR)
"RTN","PSJPADIT",82,0)
 ; Update Drug (Drawer) balance in PADE INVENTORY file
"RTN","PSJPADIT",83,0)
 I '$$UPDRWBAL(.PADATA,.ERR) S ERR="DRUG/DRAWER BALANCE NOT UPDATED "_ERR D LOGERR(.ERR)
"RTN","PSJPADIT",84,0)
 ;
"RTN","PSJPADIT",85,0)
 I '($G(PSJNOTE)["PATIENT SPECIFIC BIN")&'($G(PSJNOTE)["RETURN BIN") D
"RTN","PSJPADIT",86,0)
 .; Update Drug (Device) balance in PADE INVENTORY file
"RTN","PSJPADIT",87,0)
 .I '$$UPDEVBAL(.PADATA,.ERR) S ERR="DRUG/DEVICE BALANCE NOT UPDATED "_ERR D LOGERR(.ERR)
"RTN","PSJPADIT",88,0)
 ;
"RTN","PSJPADIT",89,0)
 ; Delete (Unload) drug from device
"RTN","PSJPADIT",90,0)
 I $$DELCHK(.PADATA) D
"RTN","PSJPADIT",91,0)
 .N SYS,DEV,DRW,DRGDEV,DRG,PCK
"RTN","PSJPADIT",92,0)
 .S SYS=$G(PADATA("SYS IEN"))          ; IEN of system in file 58.601
"RTN","PSJPADIT",93,0)
 .S DEV=$G(PADATA("DEVICE IEN"))       ; IEN of device from subfile 58.6011
"RTN","PSJPADIT",94,0)
 .S DRW=$G(PADATA("DRAWER IEN"))       ; IEN of drawer from subfile 58.60112
"RTN","PSJPADIT",95,0)
 .S DRGDEV=$G(PADATA("DRUG DEV IEN"))  ; IEN of drug (device) from subfile 58.60111
"RTN","PSJPADIT",96,0)
 .S DRG=$G(PADATA("DRUG IEN"))         ; IEN of drug (drawer) from subfile 58.601121
"RTN","PSJPADIT",97,0)
 .S PCK=$G(PADATA("POCK/SUB IEN"))     ; IEN of pocket/subdrawer from subfile 58.601122
"RTN","PSJPADIT",98,0)
 .D UNLOAD^PSJPAD70(SYS,DEV,DRW,DRG,DRGDEV,PCK)
"RTN","PSJPADIT",99,0)
 ;
"RTN","PSJPADIT",100,0)
 ; Transaction processing complete
"RTN","PSJPADIT",101,0)
 I $G(PS586IEN) I $P($G(^PS(58.6,PS586IEN,3)),"^")]"" S $P(^PS(58.6,PS586IEN,3),"^")="C"
"RTN","PSJPADIT",102,0)
 Q
"RTN","PSJPADIT",103,0)
 ;
"RTN","PSJPADIT",104,0)
DELCHK(PADATA) ; Check if incoming transaction represents a drug removed from the device
"RTN","PSJPADIT",105,0)
 N PSJTTRAN
"RTN","PSJPADIT",106,0)
 S PSJTTRAN=$G(PADATA(5)) I PSJTTRAN="U"!(PSJTTRAN="B") Q 1
"RTN","PSJPADIT",107,0)
 Q 0
"RTN","PSJPADIT",108,0)
 ;
"RTN","PSJPADIT",109,0)
FILSYS(PADATA,ERRMSG) ; Check for PADE Inbound System in PADE INVENTORY file
"RTN","PSJPADIT",110,0)
 K DIERR,ERR S PADATA("SYS IEN")=$$FIND1^DIC(58.601,"","MXQ",$G(PADATA(1)),,,"ERR") K DIERR  ;*356
"RTN","PSJPADIT",111,0)
 I '$G(PADATA("SYS IEN")) S ERRMSG="UNABLE TO FIND PADE SYSTEM "_PADATA(1) Q 0
"RTN","PSJPADIT",112,0)
 Q 1
"RTN","PSJPADIT",113,0)
 ;
"RTN","PSJPADIT",114,0)
FILEDEV(XARRAY) ; File device from PADE DISPENSING DEVICE (#58.63) file
"RTN","PSJPADIT",115,0)
 N PADATA0
"RTN","PSJPADIT",116,0)
 I $G(XARRAY(2)) S PADATA("SYS IEN")=XARRAY(2)
"RTN","PSJPADIT",117,0)
 I '$G(XARRAY(2)),$G(XARRAY("SYS IEN"))]"" S PADATA(2)=$P($G(^PS(58.601,+XARRAY("SYS IEN"),0)),"^")
"RTN","PSJPADIT",118,0)
 I $G(XARRAY(1))]"" S PADATA(2)=XARRAY(1)
"RTN","PSJPADIT",119,0)
 D FILDEV^PSJPADIU(.PADATA)
"RTN","PSJPADIT",120,0)
 Q
"RTN","PSJPADIT",121,0)
 ;
"RTN","PSJPADIT",122,0)
FILDRWR(PADATA,ERRMSG) ; Add PADE Drawer to PADE System's DISPENSING DEVICE in PADE INVENTORY file
"RTN","PSJPADIT",123,0)
 I $G(PADATA(3))="" S PADATA(3)="zz"
"RTN","PSJPADIT",124,0)
 K ERR,DIERR S PADATA("DRAWER IEN")=$$FIND1^DIC(58.60112,","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",","MX",PADATA(3),,,"ERR") K DIERR  ;*356
"RTN","PSJPADIT",125,0)
 I '$G(PADATA("DRAWER IEN")) D
"RTN","PSJPADIT",126,0)
 .K FDA,ERR,DIERR S FDA(58.60112,"?+1,"_+PADATA("DEVICE IEN")_","_+PADATA("SYS IEN")_",",.01)=PADATA(3) D UPDATE^DIE("E","FDA","","ERR") K DIERR  ;*356
"RTN","PSJPADIT",127,0)
 .K ERR,DIERR S PADATA("DRAWER IEN")=$$FIND1^DIC(58.60112,","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",","MX",PADATA(3),,,"ERR") K DIERR ;*356
"RTN","PSJPADIT",128,0)
 I '$G(PADATA("DRAWER IEN")) S ERRMSG="Unable to file PADE drawer"_PADATA(3) Q 0
"RTN","PSJPADIT",129,0)
 Q 1
"RTN","PSJPADIT",130,0)
 ;
"RTN","PSJPADIT",131,0)
FILDRUG(PADATA,ERRMSG)  ; Add drug from PADE INBOUND TRANSACTION file to PADE System Dispensing Device in PADE INVENTORY file
"RTN","PSJPADIT",132,0)
 N DRUG,DEVIEN,SYSIEN
"RTN","PSJPADIT",133,0)
 S DRUG=$G(PADATA(4))                          ; Drug
"RTN","PSJPADIT",134,0)
 S DEVIEN=$G(PADATA("DEVICE IEN"))             ; Dispensing Device IEN
"RTN","PSJPADIT",135,0)
 S SYSIEN=$G(PADATA("SYS IEN"))                ; PADE System IEN
"RTN","PSJPADIT",136,0)
 I '(DRUG]"") S ERRMSG="MISSING DRUG" Q 0      ; No drug, no go
"RTN","PSJPADIT",137,0)
 ;
"RTN","PSJPADIT",138,0)
 I '$D(^PSDRUG(+DRUG,0)) D  Q 0
"RTN","PSJPADIT",139,0)
 .N DRGNAME,DRGID,DRGNODE
"RTN","PSJPADIT",140,0)
 .S DRGNODE=$G(^PS(58.6,+$G(PS586IEN),1))
"RTN","PSJPADIT",141,0)
 .S DRGNAME=$P(DRGNODE,"^",6)
"RTN","PSJPADIT",142,0)
 .S DRGID=$P(DRGNODE,"^",7)
"RTN","PSJPADIT",143,0)
 .S ERRMSG="DRUG NOT ON FILE|"   ; No LAYGO - Unknown DRUG (#50) file IEN
"RTN","PSJPADIT",144,0)
 .S ERRMSG=ERRMSG_"DRG ID="_DRGID_"|NAME="_DRGNAME
"RTN","PSJPADIT",145,0)
 ; Must have PADE system and Dispensing Device
"RTN","PSJPADIT",146,0)
 I '$G(DEVIEN) S ERRMSG="MISSING DEVICE IEN" Q 0
"RTN","PSJPADIT",147,0)
 I '$G(SYSIEN) S ERRMSG="MISSING SYSTEM IEN" Q 0
"RTN","PSJPADIT",148,0)
 N DA,FDA,X,Y,DIC,DIE,DR,D0,ERR,D,DD,DICR,DICRS,DO
"RTN","PSJPADIT",149,0)
 K ERR,DIERR S PADATA("DRUG DEV IEN")=$$FIND1^DIC(58.60111,","_DEVIEN_","_SYSIEN_",","MXQ",DRUG,,,"ERR") K DIERR  ;*356
"RTN","PSJPADIT",150,0)
 I 'PADATA("DRUG DEV IEN") D
"RTN","PSJPADIT",151,0)
 .K ERR,DIERR S FDA(58.60111,"?+1,"_+DEVIEN_","_+SYSIEN_",",.01)=DRUG D UPDATE^DIE("E","FDA","ERR") K DIERR  ;*356
"RTN","PSJPADIT",152,0)
 .K ERR,DIERR S PADATA("DRUG DEV IEN")=$$FIND1^DIC(58.60111,","_DEVIEN_","_SYSIEN_",","MXQ",DRUG,,,"ERR") K DIERR  ;*356
"RTN","PSJPADIT",153,0)
 K ERR,DIERR S PADATA("DRUG DEV IEN")=$$FIND1^DIC(58.60111,","_DEVIEN_","_SYSIEN_",","MXQ",DRUG,,,"ERR") K DIERR  ;*356
"RTN","PSJPADIT",154,0)
 I '$G(PADATA("DRUG DEV IEN")) S ERRMSG="UNABLE TO FILE DRUG "_DRUG Q 0
"RTN","PSJPADIT",155,0)
 Q 1
"RTN","PSJPADIT",156,0)
 ;
"RTN","PSJPADIT",157,0)
DRGDRWR(PADATA,ERRMSG)  ; Add drug to drawer in PADE INVENTORY file
"RTN","PSJPADIT",158,0)
 N FDA,ERR
"RTN","PSJPADIT",159,0)
 K ERR,DIERR S PADATA("DRUG IEN")=$$FIND1^DIC(58.601121,","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",","MXQ",PADATA(4),,,"ERR") K DIERR  ;*356
"RTN","PSJPADIT",160,0)
 I '$G(PADATA("DRUG IEN")) D
"RTN","PSJPADIT",161,0)
 .S FDA(58.601121,"?+1,"_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",",.01)=PADATA(4) K ERR,DIERR D UPDATE^DIE("","FDA","","ERR") K DIERR  ;*356
"RTN","PSJPADIT",162,0)
 .K DIERR,ERR S PADATA("DRUG IEN")=$$FIND1^DIC(58.601121,","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",","MXQ",PADATA(4),,,"ERR") K DIERR ;*356
"RTN","PSJPADIT",163,0)
 .Q:'PADATA("DRUG IEN")  N DBALIENS,TRNSIGN,TRNSAMT
"RTN","PSJPADIT",164,0)
 .; If a new drug was added to drawer, initialize drug's drawer balance to Actual Begin Count (PADATA(8)) from HL7 message
"RTN","PSJPADIT",165,0)
 .S DBALIENS=PADATA("DRUG IEN")_","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_","
"RTN","PSJPADIT",166,0)
 .S FDA(58.601121,DBALIENS,1)=$G(PADATA(8))
"RTN","PSJPADIT",167,0)
 .; File the updated drawer total for this drug
"RTN","PSJPADIT",168,0)
 .K DIERR,ERR D FILE^DIE("","FDA","ERR") K DIERR ;*356
"RTN","PSJPADIT",169,0)
 I '$G(PADATA("DRUG IEN")) S ERRMSG="Unable to file PADE drug (drawer) IEN"_PADATA(4) Q 0
"RTN","PSJPADIT",170,0)
 Q 1
"RTN","PSJPADIT",171,0)
 ;
"RTN","PSJPADIT",172,0)
UPDEVBAL(PADATA,ERRMSG)  ; Update Drug (Device) balance
"RTN","PSJPADIT",173,0)
 ;  Get current device total count of drug
"RTN","PSJPADIT",174,0)
 N DBALIENS,FDA,INVDATA,BALANCE,TRERR,DOSFORM
"RTN","PSJPADIT",175,0)
 ;
"RTN","PSJPADIT",176,0)
 I $E($G(PADATA(5)))="B" Q 1  ; "BIN" transaction does not update device balance
"RTN","PSJPADIT",177,0)
 I $E($G(PADATA(5)))="W" Q 1  ; "WASTE" transaction does not update device balance
"RTN","PSJPADIT",178,0)
 ;
"RTN","PSJPADIT",179,0)
 ; Get Device Balance from transaction, if sent
"RTN","PSJPADIT",180,0)
 S BALANCE=+$P($G(^PS(58.6,+$G(PS586IEN),1)),"^",5)
"RTN","PSJPADIT",181,0)
 S:BALANCE<0 BALANCE=0
"RTN","PSJPADIT",182,0)
 ;
"RTN","PSJPADIT",183,0)
 ; Done with 58.6, now set IENS to refer to 58.60111
"RTN","PSJPADIT",184,0)
 S DBALIENS=PADATA("DRUG DEV IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_","
"RTN","PSJPADIT",185,0)
 ;
"RTN","PSJPADIT",186,0)
 ; Reported Device Balance. Do this before Calculated Balance.
"RTN","PSJPADIT",187,0)
 ; File transaction's Device Balance for current device and drug to the Reported Device Balance
"RTN","PSJPADIT",188,0)
 N TRERR,FDA K DIERR S FDA(58.60111,DBALIENS,2)=BALANCE D FILE^DIE("","FDA","TRERR") K DIERR  ;*356
"RTN","PSJPADIT",189,0)
 ;
"RTN","PSJPADIT",190,0)
 ; Add transaction input quantity to Drug's calculated Device balance
"RTN","PSJPADIT",191,0)
 N TRERR,FDA,DOSFORM
"RTN","PSJPADIT",192,0)
 ; Update Drug Dosage Form from transaction
"RTN","PSJPADIT",193,0)
 S DOSFORM=$P($G(^PS(58.6,+$G(PS586IEN),0)),"^",6)
"RTN","PSJPADIT",194,0)
 S FDA(58.60111,DBALIENS,1)=$$DEVBAL(PADATA("SYS IEN"),PADATA("DEVICE IEN"),PADATA(4))
"RTN","PSJPADIT",195,0)
 I DOSFORM]"" S FDA(58.60111,DBALIENS,4)=DOSFORM
"RTN","PSJPADIT",196,0)
 K DIERR,TRERR D FILE^DIE("","FDA","TRERR") K DIERR ;*356
"RTN","PSJPADIT",197,0)
 Q 1
"RTN","PSJPADIT",198,0)
 ;
"RTN","PSJPADIT",199,0)
UPDRWBAL(PADATA,ERRMSG)  ; Update Drug (Drawer) balance
"RTN","PSJPADIT",200,0)
 ; Get current drawer total count of drug
"RTN","PSJPADIT",201,0)
 N DBALIENS,INVDATA,FDA,BALANCE,II,PSYS,PDEV,PDRW,PDRG,POCK,PTOT,PNOD
"RTN","PSJPADIT",202,0)
 S PSYS=+$G(PADATA("SYS IEN")),PDEV=+$G(PADATA("DEVICE IEN")),PDRW=+$G(PADATA("DRAWER IEN")),PDRG=+$G(PADATA("DRUG IEN"))
"RTN","PSJPADIT",203,0)
 S (POCK,PTOT)=0 F  S POCK=$O(^PS(58.601,PSYS,"DEVICE",PDEV,"DRAWER",PDRW,"SUB",POCK)) Q:'POCK  S PNOD=^(POCK,0) D
"RTN","PSJPADIT",204,0)
 .Q:$P(PNOD,"^",5)'=$G(PADATA(4))
"RTN","PSJPADIT",205,0)
 .S PTOT=$G(PTOT)+$P(PNOD,"^",2)
"RTN","PSJPADIT",206,0)
 N ERR
"RTN","PSJPADIT",207,0)
 ; Add the updated pocket totals to the drawer total for this drug
"RTN","PSJPADIT",208,0)
 S DBALIENS=PDRG_","_PDRW_","_PDEV_","_PSYS_","
"RTN","PSJPADIT",209,0)
 S FDA(58.601121,DBALIENS,1)=PTOT
"RTN","PSJPADIT",210,0)
 ; File the updated drawer total for this drug
"RTN","PSJPADIT",211,0)
 K DIERR,ERR D FILE^DIE("","FDA","ERR") K DIERR ;*356
"RTN","PSJPADIT",212,0)
 Q 1
"RTN","PSJPADIT",213,0)
 ;
"RTN","PSJPADIT",214,0)
UPCKDRW(PADATA,ERRMSG)  ; Add pocket/subdrawer sub-file entry to Drawer multiple
"RTN","PSJPADIT",215,0)
 N FDA       ;   Fileman data array
"RTN","PSJPADIT",216,0)
 N ERR       ;   Fileman error message array
"RTN","PSJPADIT",217,0)
 N POCKSUB   ;   POCKET_SUBDRAWER concatenated
"RTN","PSJPADIT",218,0)
 N DRGIENS   ;   IEN string for Drug field
"RTN","PSJPADIT",219,0)
 N INVDATA   ;   Data returned from PADE INVENTORY (#58.601) file
"RTN","PSJPADIT",220,0)
 N DOSFORM   ;   Dose Form from HL7 message from PADE vendor
"RTN","PSJPADIT",221,0)
 N PADATA6   ;   Signed value of inbound Quantity; positive for PADATA(5)=LOAD or RETURN, negative for PADATA(5)=DISPENSE/VEND/ISSUE and UNLOAD
"RTN","PSJPADIT",222,0)
 N PSPRVDT   ;   The last transaction date/time (date/time of the activity at the cabinet) this pocket was updated
"RTN","PSJPADIT",223,0)
 N PSPRVDIE  ;  The IEN of the last transaction date/time in the "PKUPDT" multiple
"RTN","PSJPADIT",224,0)
 ;
"RTN","PSJPADIT",225,0)
 S DOSFORM=$P($G(^PS(58.6,+$G(PS586IEN),0)),"^",6)
"RTN","PSJPADIT",226,0)
 S PADATA(10)=$TR(PADATA(10),"~~")_"~~"_+$G(PADATA(4))   ; Append subdrawer unique drug IEN suffix to handle different drugs in same subdr-pocket combo
"RTN","PSJPADIT",227,0)
 S:$G(PADATA(10))="" PADATA(10)=$P($G(^PS(58.6,+$G(PS586IEN),0)),"^",12) S:PADATA(10)="" PADATA(10)="~~"_+$G(PADATA(4))
"RTN","PSJPADIT",228,0)
 S POCKSUB=$G(PADATA(7))_"_"_$G(PADATA(10))  ;  "POCKET_SUBDRAWER" storage location
"RTN","PSJPADIT",229,0)
 K ERR,DIERR S PADATA("POCK/SUB IEN")=$$FIND1^DIC(58.601122,","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",","MX",POCKSUB,,,"ERR") K DIERR ;*356
"RTN","PSJPADIT",230,0)
 ; Get the last date/time this drawer/subdrawer~drug/pocket was updated
"RTN","PSJPADIT",231,0)
 S PSPRVDIE=$O(^PS(58.601,+$G(PADATA("SYS IEN")),"DEVICE",+$G(PADATA("DEVICE IEN")),"DRAWER",+$G(PADATA("DRAWER IEN")),"PKUPDT","B",POCKSUB,""))
"RTN","PSJPADIT",232,0)
 ;
"RTN","PSJPADIT",233,0)
 S PSPRVDT=$P($G(^PS(58.601,+$G(PADATA("SYS IEN")),"DEVICE",+$G(PADATA("DEVICE IEN")),"DRAWER",+$G(PADATA("DRAWER IEN")),"PKUPDT",+$G(PSPRVDIE),0)),"^",2)
"RTN","PSJPADIT",234,0)
 ; If this current update contains a transaction date/time (i.e., activity date/time) older than the last update, don't update inventory
"RTN","PSJPADIT",235,0)
 I $G(PSPRVDT)&$G(PADATA(9)) I PADATA(9)<PSPRVDT D  Q 0
"RTN","PSJPADIT",236,0)
 .S ERRMSG="- OUTDATED TRANSACTION - "_$G(PADATA(1))_"."_$G(PADATA(2))_".DRUG="_$G(PADATA(4))_".POCKET="_$G(PADATA(7))
"RTN","PSJPADIT",237,0)
 .S ERRMSG=ERRMSG_".LAST UPDATED="_PSPRVDT_".TRANS DT="_PADATA(9)
"RTN","PSJPADIT",238,0)
 I 'PADATA("POCK/SUB IEN") D
"RTN","PSJPADIT",239,0)
 .S FDA(58.601122,"?+1,"_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",",.01)=POCKSUB K DIERR,ERR D UPDATE^DIE("","FDA","","ERR") K DIERR ;*356
"RTN","PSJPADIT",240,0)
 .K ERR,DIERR S PADATA("POCK/SUB IEN")=$$FIND1^DIC(58.601122,","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",","MX",POCKSUB,,,"ERR") K DIERR ;*356
"RTN","PSJPADIT",241,0)
 I PADATA("POCK/SUB IEN") D  ; File Pocket and Subdrawer references in the POCK/SUB sub-file to ensure distinguishing between the two
"RTN","PSJPADIT",242,0)
 .N PKSBIENS S PKSBIENS=PADATA("POCK/SUB IEN")_","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_","
"RTN","PSJPADIT",243,0)
 .S FDA(58.601122,PKSBIENS,1)=PADATA(4)                            ; DRUG
"RTN","PSJPADIT",244,0)
 .N PKBAL S PKBAL=PADATA(8)+PADATA(6) S FDA(58.601122,PKSBIENS,2)=$S(PKBAL<0:0,1:PKBAL)    ; NEW BALANCE (BALANCE FORWARD)
"RTN","PSJPADIT",245,0)
 .S FDA(58.601122,PKSBIENS,3)=PADATA(7)                            ; POCKET
"RTN","PSJPADIT",246,0)
 .S FDA(58.601122,PKSBIENS,4)=PADATA(10)                           ; SUBDRAWER
"RTN","PSJPADIT",247,0)
 .I DOSFORM]"" S FDA(58.601122,PKSBIENS,5)=DOSFORM                 ; DRUG DOSE FORM
"RTN","PSJPADIT",248,0)
 .K ERR,DIERR D FILE^DIE("","FDA","ERR") K DIERR ;*356
"RTN","PSJPADIT",249,0)
 .I '$G(PSPRVDT),($G(POCKSUB)]"") D
"RTN","PSJPADIT",250,0)
 ..N FDA S FDA(58.601123,"?+1,"_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",",.01)=POCKSUB
"RTN","PSJPADIT",251,0)
 ..S FDA(58.601123,"?+1,"_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",",1)=PADATA(9)
"RTN","PSJPADIT",252,0)
 ..K DIERR,ERR D UPDATE^DIE("","FDA","","ERR") K DIERR ;*356
"RTN","PSJPADIT",253,0)
 .K DIERR,ERR S PSPRVDIE=$$FIND1^DIC(58.601123,","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_",","MX",POCKSUB,,,"ERR") K DIERR ;*356
"RTN","PSJPADIT",254,0)
 .I PSPRVDIE S DBALIENS=PSPRVDIE_","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_"," D
"RTN","PSJPADIT",255,0)
 ..I $G(PADATA(9))?7N.".".8N S FDA(58.601123,DBALIENS,1)=PADATA(9)  ; TRANSACTION DATE/TIME
"RTN","PSJPADIT",256,0)
 ..Q:'$G(FDA(58.601123,DBALIENS,1))
"RTN","PSJPADIT",257,0)
 ..K DIERR,ERR D FILE^DIE("","FDA","ERR") K DIERR ;*356
"RTN","PSJPADIT",258,0)
 I 'PADATA("POCK/SUB IEN") S ERRMSG="Unable to file PADE pocket/subdrawer "_POCKSUB Q 0
"RTN","PSJPADIT",259,0)
 Q 1
"RTN","PSJPADIT",260,0)
 ;
"RTN","PSJPADIT",261,0)
UPCKBAL(PADATA,ERRMSG)  ; Update pocket / subdrawer balance
"RTN","PSJPADIT",262,0)
 ; Add transaction Quantity to Actual Begin Balance
"RTN","PSJPADIT",263,0)
 ;
"RTN","PSJPADIT",264,0)
 N PCK     ; Pocket ID
"RTN","PSJPADIT",265,0)
 N PCKBEG  ; Total of Actual Begin Balance
"RTN","PSJPADIT",266,0)
 N FDA     ; Fileman data array
"RTN","PSJPADIT",267,0)
 N TRNSAMT ; Transaction amount
"RTN","PSJPADIT",268,0)
 N PCKTOT  ; New balance of pocket
"RTN","PSJPADIT",269,0)
 N DRW     ; Drawer ID
"RTN","PSJPADIT",270,0)
 N SUBDRW  ; Subdrawer ID
"RTN","PSJPADIT",271,0)
 N DBALIENS ; IENS to System, Cabinet, Drawer, Drug, Pocket, Subdrawer
"RTN","PSJPADIT",272,0)
 ;
"RTN","PSJPADIT",273,0)
 S PCK=$G(PADATA(10))
"RTN","PSJPADIT",274,0)
 S TRNSAMT=$G(PADATA(6))
"RTN","PSJPADIT",275,0)
 S:$E(TRNSAMT)="-" TRNSAMT=+$P(TRNSAMT,"-",2)
"RTN","PSJPADIT",276,0)
 S TRNSAMT=$$TSIGN(.PADATA)_TRNSAMT
"RTN","PSJPADIT",277,0)
 S PCKBEG=$S($G(PADATA(8))&($G(PADATA(5))="C"):$G(PADATA(8)),1:$G(PADATA(12)))
"RTN","PSJPADIT",278,0)
 S PCKTOT=$S($E($G(PADATA(5)))="C":PCKBEG,1:PCKBEG+TRNSAMT)
"RTN","PSJPADIT",279,0)
 S PCKTOT=$S(PCKTOT<0:0,1:PCKTOT)
"RTN","PSJPADIT",280,0)
 S DRW=$G(PADATA(1.2))
"RTN","PSJPADIT",281,0)
 S SUBDRW=$G(PADATA(10))
"RTN","PSJPADIT",282,0)
 S DBALIENS=PADATA("POCK/SUB IEN")_","_PADATA("DRAWER IEN")_","_PADATA("DEVICE IEN")_","_PADATA("SYS IEN")_","
"RTN","PSJPADIT",283,0)
 S FDA(58.601122,DBALIENS,2)=PCKTOT
"RTN","PSJPADIT",284,0)
 ; File the updated drawer total for this drug
"RTN","PSJPADIT",285,0)
 K DIERR,ERR D FILE^DIE("","FDA","ERR") K DIERR ;*356
"RTN","PSJPADIT",286,0)
 Q 1
"RTN","PSJPADIT",287,0)
 ;
"RTN","PSJPADIT",288,0)
LOGERR(ERRMSG) ; Log error ERRMSG
"RTN","PSJPADIT",289,0)
 D ERROR^PSJPAD7U(.ERRMSG)
"RTN","PSJPADIT",290,0)
 Q
"RTN","PSJPADIT",291,0)
 ;
"RTN","PSJPADIT",292,0)
ORDIX(PS586IEN)  ; Computed ORDER to handle blank orders in primary patient sort PADE cross reference - "zz" = patient transaction types without order
"RTN","PSJPADIT",293,0)
 N ORDER,RESULTS,RESULT
"RTN","PSJPADIT",294,0)
 K DIERR,ERROR D GETS^DIQ(58.6,PS586IEN_",","4;15","","RESULT","ERROR") K DIERR ;*356
"RTN","PSJPADIT",295,0)
 S ORDER=$G(RESULT(58.6,PS586IEN_",",15))
"RTN","PSJPADIT",296,0)
 Q:$G(ORDER) ORDER
"RTN","PSJPADIT",297,0)
 Q:(",LOAD,UNLOAD,"[(","_$G(RESULT(58.6,PS586IEN_",",4))_",")) "INVENTORY"
"RTN","PSJPADIT",298,0)
 Q "zz"
"RTN","PSJPADIT",299,0)
 ;
"RTN","PSJPADIT",300,0)
DRWRBAL(PADESYS,PADEDEV,PADEDRWR,DRUGIEN)  ; Calculate drawer balance for PADE device=PADEDEV, drawer=PADEDRWR, drug=DRUGIEN
"RTN","PSJPADIT",301,0)
 ; PADESYS  =  PADE vendor system IEN from file 58.601
"RTN","PSJPADIT",302,0)
 ; PADEDEV  =  PADE device IEN from file 58.601
"RTN","PSJPADIT",303,0)
 ; PADEDRWR =  PADE drawer from file 58.601
"RTN","PSJPADIT",304,0)
 ; DRUGIEN  =  Drug IEN from file 58.601 (points to file 50)            
"RTN","PSJPADIT",305,0)
 K DRWBAL S DRWBAL=""                        ; Initialize returned balance
"RTN","PSJPADIT",306,0)
 N SUBDRW                                      ; Pocket_subdrawer IEN
"RTN","PSJPADIT",307,0)
 N OUT                                         ; Return array from LIST^DIC
"RTN","PSJPADIT",308,0)
 ;
"RTN","PSJPADIT",309,0)
 Q:'$G(PADESYS)!'$G(PADEDEV)!'$G(PADEDRWR) ""  ; We need system, device, and drawer to find a drawer balance
"RTN","PSJPADIT",310,0)
 Q:'DRUGIEN ""
"RTN","PSJPADIT",311,0)
 D LIST^DIC(58.601121,","_PADEDRWR_","_PADEDEV_","_PADESYS_",","1IE;2","","","","","","","","OUT","WTF")
"RTN","PSJPADIT",312,0)
 S SUBDRW=0 F  S SUBDRW=$O(OUT("DILIST","ID",SUBDRW)) Q:'SUBDRW  D
"RTN","PSJPADIT",313,0)
 .N DRUG S DRUG=$G(OUT("DILIST","ID",SUBDRW,1,"I")) I DRUG,(DRUG=DRUGIEN) S DRWBAL=DRWBAL+$G(OUT("DILIST","ID",SUBDRW,2))
"RTN","PSJPADIT",314,0)
 Q DRWBAL
"RTN","PSJPADIT",315,0)
 ;
"RTN","PSJPADIT",316,0)
DEVBAL(PADESYS,PADEDEV,DRUGIEN)  ; Calculate Device BALANCE for PADE device=PADEDEV drug=DRUGIEN
"RTN","PSJPADIT",317,0)
 Q $$DEVBAL^PSJPDRU1(PADESYS,PADEDEV,DRUGIEN)
"RTN","PSJPADIT",318,0)
 ;
"RTN","PSJPADIT",319,0)
TSIGN(PADATA) ; Determine if the transaction amount needs to be added or subtracted, depending on the transaction type
"RTN","PSJPADIT",320,0)
 Q $$TSIGN^PSJPDRU1(.PADATA)
"RTN","PSJPADIU")
0^2^B4945715^n/a
"RTN","PSJPADIU",1,0)
PSJPADIU ;BP/VGH-INPATIENT PADE INVENTORY FILE UTILITIES ;3/20/18 8:35 AM
"RTN","PSJPADIU",2,0)
 ;;5.0;INPATIENT MEDICATIONS ;**356**;16 DEC 97;Build 7
"RTN","PSJPADIU",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSJPADIU",4,0)
 ;
"RTN","PSJPADIU",5,0)
FILDEV(PADATA,ERRMSG) ; File PADE DEVICE to PADE INVENTORY file
"RTN","PSJPADIU",6,0)
 N FDA,PSJPSYS,PSJSCR,PSJSCR
"RTN","PSJPADIU",7,0)
 I '($G(PADATA(2))]"") S ERRMSG="MISSING PADE DEVICE" Q 0
"RTN","PSJPADIU",8,0)
 I $G(PSJPSYS),$G(^PS(58.601,+PSJPSYS,0))]"" S PADATA("SYS IEN")=PSJPSYS
"RTN","PSJPADIU",9,0)
 S PSJPSYS=PADATA("SYS IEN"),PSJSCR="I $S('$G(PSJPSYS):1,1:PSJPSYS=$P(^(0),U,2))"
"RTN","PSJPADIU",10,0)
 I ($G(PADATA(1))=""&$G(PSJPSYS)) S PADATA(1)=$P(^PS(58.601,PSJPSYS,0),"^")
"RTN","PSJPADIU",11,0)
 K ERR S PADATA("DEVICE IEN")=$$FIND1^DIC(58.63,,"X",PADATA(2),,PSJSCR,"ERR") K DIERR ;*356- remove M (multiple index lookup)
"RTN","PSJPADIU",12,0)
 I '$G(PADATA("DEVICE IEN")) D
"RTN","PSJPADIU",13,0)
 .N FDA S FDA(58.63,"?+1,",.01)=PADATA(2)
"RTN","PSJPADIU",14,0)
 .S FDA(58.63,"?+1,",1)=PADATA(1)
"RTN","PSJPADIU",15,0)
 .S FDA(58.63,"?+1,",12)=$$UPPER^PSJPDRUT(PADATA(2))
"RTN","PSJPADIU",16,0)
 .K ERR,DIERR D UPDATE^DIE("E","FDA","","ERR") K DIERR ;*356
"RTN","PSJPADIU",17,0)
 .K ERR,DIERR S PADATA("DEVICE IEN")=$$FIND1^DIC(58.63,,"X",PADATA(2),,PSJSCR,"ERR") K DIERR ;*356- remove M (multiple index lookup)
"RTN","PSJPADIU",18,0)
 I $G(PADATA("DEVICE IEN")) D
"RTN","PSJPADIU",19,0)
 .N FDA S FDA(58.6011,"?+1,"_PADATA("SYS IEN")_",",.01)=PADATA(2) K ERR D UPDATE^DIE("E","FDA","","ERR") K DIERR  ;*356
"RTN","PSJPADIU",20,0)
 .K ERR,DIERR S PADATA("DEVICE IEN")=$$FIND1^DIC(58.6011,","_PADATA("SYS IEN")_",","BX",PADATA(2),,,"ERR") K DIERR ;*356- replaced M (multiple index lookup) with B
"RTN","PSJPADIU",21,0)
 I '$G(PADATA("DEVICE IEN")) S ERRMSG="Unable to file PADE Device "_PADATA(2) Q 0
"RTN","PSJPADIU",22,0)
 Q 1
"VER")
8.0^22.2
"BLD",10781,6)
^304
**END**
**END**

