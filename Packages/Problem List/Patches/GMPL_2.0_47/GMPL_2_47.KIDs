KIDS Distribution saved on Dec 21, 2015@13:55:06
GMPL*2.0*47
**KIDS**:GMPL*2.0*47^

**INSTALL NAME**
GMPL*2.0*47
"BLD",9274,0)
GMPL*2.0*47^PROBLEM LIST^0^3151221^y
"BLD",9274,1,0)
^^2^2^3141022^^
"BLD",9274,1,1,0)
The description of this patch may be found in the National Patch Module
"BLD",9274,1,2,0)
under GMPL*2.0*47.
"BLD",9274,4,0)
^9.64PA^^0
"BLD",9274,6)
5^
"BLD",9274,6.3)
58
"BLD",9274,"ABPKG")
n
"BLD",9274,"INI")

"BLD",9274,"INID")
^n^
"BLD",9274,"INIT")
POST^GMPLY47
"BLD",9274,"KRN",0)
^9.67PA^779.2^20
"BLD",9274,"KRN",.4,0)
.4
"BLD",9274,"KRN",.401,0)
.401
"BLD",9274,"KRN",.402,0)
.402
"BLD",9274,"KRN",.403,0)
.403
"BLD",9274,"KRN",.5,0)
.5
"BLD",9274,"KRN",.84,0)
.84
"BLD",9274,"KRN",3.6,0)
3.6
"BLD",9274,"KRN",3.8,0)
3.8
"BLD",9274,"KRN",9.2,0)
9.2
"BLD",9274,"KRN",9.8,0)
9.8
"BLD",9274,"KRN",9.8,"NM",0)
^9.68A^30^5
"BLD",9274,"KRN",9.8,"NM",10,0)
GMPLSAVE^^0^B112209796
"BLD",9274,"KRN",9.8,"NM",27,0)
GMPLY47^^0^B14338538
"BLD",9274,"KRN",9.8,"NM",28,0)
GMPLPXRM^^0^B54071956
"BLD",9274,"KRN",9.8,"NM",29,0)
GMPLRPTR^^0^B15126076
"BLD",9274,"KRN",9.8,"NM",30,0)
GMPLEDT4^^0^B27439710
"BLD",9274,"KRN",9.8,"NM","B","GMPLEDT4",30)

"BLD",9274,"KRN",9.8,"NM","B","GMPLPXRM",28)

"BLD",9274,"KRN",9.8,"NM","B","GMPLRPTR",29)

"BLD",9274,"KRN",9.8,"NM","B","GMPLSAVE",10)

"BLD",9274,"KRN",9.8,"NM","B","GMPLY47",27)

"BLD",9274,"KRN",19,0)
19
"BLD",9274,"KRN",19.1,0)
19.1
"BLD",9274,"KRN",101,0)
101
"BLD",9274,"KRN",409.61,0)
409.61
"BLD",9274,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",9274,"KRN",771,0)
771
"BLD",9274,"KRN",779.2,0)
779.2
"BLD",9274,"KRN",870,0)
870
"BLD",9274,"KRN",8989.51,0)
8989.51
"BLD",9274,"KRN",8989.52,0)
8989.52
"BLD",9274,"KRN",8994,0)
8994
"BLD",9274,"KRN","B",.4,.4)

"BLD",9274,"KRN","B",.401,.401)

"BLD",9274,"KRN","B",.402,.402)

"BLD",9274,"KRN","B",.403,.403)

"BLD",9274,"KRN","B",.5,.5)

"BLD",9274,"KRN","B",.84,.84)

"BLD",9274,"KRN","B",3.6,3.6)

"BLD",9274,"KRN","B",3.8,3.8)

"BLD",9274,"KRN","B",9.2,9.2)

"BLD",9274,"KRN","B",9.8,9.8)

"BLD",9274,"KRN","B",19,19)

"BLD",9274,"KRN","B",19.1,19.1)

"BLD",9274,"KRN","B",101,101)

"BLD",9274,"KRN","B",409.61,409.61)

"BLD",9274,"KRN","B",771,771)

"BLD",9274,"KRN","B",779.2,779.2)

"BLD",9274,"KRN","B",870,870)

"BLD",9274,"KRN","B",8989.51,8989.51)

"BLD",9274,"KRN","B",8989.52,8989.52)

"BLD",9274,"KRN","B",8994,8994)

"BLD",9274,"PRE")

"BLD",9274,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9274,"QUES",0)
^9.62^^
"BLD",9274,"REQB",0)
^9.611^8^3
"BLD",9274,"REQB",6,0)
GMPL*2.0*44^2
"BLD",9274,"REQB",7,0)
GMPL*2.0*42^2
"BLD",9274,"REQB",8,0)
GMPL*2.0*28^2
"BLD",9274,"REQB","B","GMPL*2.0*28",8)

"BLD",9274,"REQB","B","GMPL*2.0*42",7)

"BLD",9274,"REQB","B","GMPL*2.0*44",6)

"INIT")
POST^GMPLY47
"MBREQ")
0
"PKG",172,-1)
1^1
"PKG",172,0)
PROBLEM LIST^GMPL^Automated Patient Problem List
"PKG",172,20,0)
^9.402P^^
"PKG",172,22,0)
^9.49I^1^1
"PKG",172,22,1,0)
2.0^2940825^2941103
"PKG",172,22,1,"PAH",1,0)
47^3151221
"PKG",172,22,1,"PAH",1,1,0)
^^2^2^3151221
"PKG",172,22,1,"PAH",1,1,1,0)
The description of this patch may be found in the National Patch Module
"PKG",172,22,1,"PAH",1,1,2,0)
under GMPL*2.0*47.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","GMPLEDT4")
0^30^B27439710
"RTN","GMPLEDT4",1,0)
GMPLEDT4 ; SLC/MKB/TC -- Problem List Edit actions cont ;10/30/14  07:04
"RTN","GMPLEDT4",2,0)
 ;;2.0;Problem List;**5,43,42,47**;Aug 25, 1994;Build 58
"RTN","GMPLEDT4",3,0)
TERM ; edit field 1.01
"RTN","GMPLEDT4",4,0)
 N DTOUT,PROB,TERM,ICD,DUP,Y,GMPLCSYS,GMPL0,GMPL802,GMPIMPDT
"RTN","GMPLEDT4",5,0)
 S GMPIMPDT=$$IMPDATE^LEXU("10D")
"RTN","GMPLEDT4",6,0)
T1 W !,"PROBLEM: "_$P(GMPFLD(.05),U,2)_"//"
"RTN","GMPLEDT4",7,0)
 R PROB:DTIME S:'$T DTOUT=1 I $D(DTOUT)!(PROB="^") S GMPQUIT=1 Q
"RTN","GMPLEDT4",8,0)
 I PROB?1"^".E D JUMP^GMPLEDT3(PROB) Q:$D(GMPQUIT)!($G(GMPLJUMP))  K:$G(GMPIFN) GMPLJUMP G T1
"RTN","GMPLEDT4",9,0)
 Q:PROB=""  Q:PROB=$P(GMPFLD(.05),U,2)  ; no change
"RTN","GMPLEDT4",10,0)
 I PROB["?" D  G T1
"RTN","GMPLEDT4",11,0)
 . W !!?4,"Enter a description of this problem, up to 80 characters.",!
"RTN","GMPLEDT4",12,0)
 I PROB="@",'+$G(GMPIFN) D  S GMPQUIT=1 Q
"RTN","GMPLEDT4",13,0)
 .W !!?5,$C(7),$C(7),"This problem has not yet been saved."
"RTN","GMPLEDT4",14,0)
 .W !?5,"Enter <Q>uit and it will not be added to the list.",!!
"RTN","GMPLEDT4",15,0)
 .K DIR S DIR("A")="Press RETURN to redisplay the problem text"
"RTN","GMPLEDT4",16,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","GMPLEDT4",17,0)
 I PROB="@" D DELETE^GMPLEDT2 S:VALMBCK="Q" GMPQUIT=1 Q:$D(GMPQUIT)  G T1
"RTN","GMPLEDT4",18,0)
T2 ; new text -- pass to look-up
"RTN","GMPLEDT4",19,0)
 I '$D(GMPLUSER)!($D(GMPLUSER)&('GMPARAM("CLU"))) S GMPFLD(1.01)="",GMPFLD(.05)=U_PROB Q
"RTN","GMPLEDT4",20,0)
 D SEARCH^GMPLX(.PROB,.Y,"PROBLEM: ","1") ; pass to CLU
"RTN","GMPLEDT4",21,0)
 I +Y'>0 S GMPQUIT=1 Q
"RTN","GMPLEDT4",22,0)
 S DUP=$$DUPL^GMPLX(+GMPDFN,+Y,PROB)
"RTN","GMPLEDT4",23,0)
 I DUP,'$$DUPLOK^GMPLX(DUP) S (Y,GMPROB)="" W ! G T1
"RTN","GMPLEDT4",24,0)
 S TERM=$S(+$G(Y)>1:Y,1:""),ICD=$G(Y(1))
"RTN","GMPLEDT4",25,0)
 S:'$L(ICD) ICD=$S(DT<GMPIMPDT:"799.9",1:"R69.")
"RTN","GMPLEDT4",26,0)
 N I,GMPSTAT,GMPCSREC,GMPCSPTR,GMPCSNME,GMPSCTC,GMPSCTD,GMPTXT
"RTN","GMPLEDT4",27,0)
 I ICD["/" F I=1:1:$L(ICD,"/") D  Q:GMPSTAT
"RTN","GMPLEDT4",28,0)
 . N GMPCODE S GMPCODE=$P(ICD,"/",I),GMPSTAT=0
"RTN","GMPLEDT4",29,0)
 . S GMPCSREC=$$CODECS^ICDEX(GMPCODE,80,DT),GMPCSPTR=$P(GMPCSREC,U),GMPCSNME=$P(GMPCSREC,U,2)
"RTN","GMPLEDT4",30,0)
 . S:'+$$STATCHK^ICDXCODE(GMPCSPTR,GMPCODE,DT) GMPSTAT=1
"RTN","GMPLEDT4",31,0)
 E  D
"RTN","GMPLEDT4",32,0)
 . S GMPSTAT=0,GMPCSREC=$$CODECS^ICDEX(ICD,80,DT),GMPCSPTR=$P(GMPCSREC,U),GMPCSNME=$P(GMPCSREC,U,2)
"RTN","GMPLEDT4",33,0)
 . S:'+$$STATCHK^ICDXCODE(GMPCSPTR,ICD,DT) GMPSTAT=1
"RTN","GMPLEDT4",34,0)
 I GMPSTAT W !,PROB,!,"has an inactive ICD code.  Please enter another search term." H 3 Q
"RTN","GMPLEDT4",35,0)
 I (PROB["(SCT"),(PROB[")") D
"RTN","GMPLEDT4",36,0)
 . S GMPSCTC=$$ONE^LEXU(+TERM,DT,"SCT")
"RTN","GMPLEDT4",37,0)
 . S GMPTXT=$$TRIM^XLFSTR($RE($P($RE(PROB),"(",2,99)))
"RTN","GMPLEDT4",38,0)
 . S GMPSCTD=$$GETDES^LEXTRAN1("SCT",GMPTXT),GMPSCTD=$S(+GMPSCTD=1:$P(GMPSCTD,U,2),1:"")
"RTN","GMPLEDT4",39,0)
 S GMPLCSYS=$$SAB^ICDEX(GMPCSPTR,DT)
"RTN","GMPLEDT4",40,0)
 S GMPFLD(1.01)=TERM,GMPFLD(.05)=U_PROB
"RTN","GMPLEDT4",41,0)
 S GMPFLD(.01)=$S($L(ICD):$P($$ICDDATA^ICDXCODE(GMPCSPTR,$P(ICD,"/"),DT,"E"),U)_U_$G(ICD),1:"")
"RTN","GMPLEDT4",42,0)
 S:'GMPFLD(.01)!($P(GMPFLD(.01),U)<0) GMPFLD(.01)=$$NOS^GMPLX(GMPLCSYS,DT)
"RTN","GMPLEDT4",43,0)
 S (GMPFLD(.03),GMPFLD(80201),GMPFLD(1.09))=DT_U_$$EXTDT^GMPLX(DT)
"RTN","GMPLEDT4",44,0)
 S GMPFLD(80202)=GMPLCSYS_U_$G(GMPCSNME)
"RTN","GMPLEDT4",45,0)
 S GMPFLD(80001)=GMPSCTC_U_GMPSCTC,GMPFLD(80002)=GMPSCTD_U_GMPSCTD
"RTN","GMPLEDT4",46,0)
 Q
"RTN","GMPLEDT4",47,0)
 ;
"RTN","GMPLEDT4",48,0)
TEXT(DFLT) ; Enter/edit provider narrative text (no lookup)
"RTN","GMPLEDT4",49,0)
 N DIR,X,Y,DTOUT
"RTN","GMPLEDT4",50,0)
 S DIR(0)="FAO^2:80",DIR("A")="PROBLEM: " S:$L(DFLT) DIR("B")=DFLT
"RTN","GMPLEDT4",51,0)
 S DIR("?")="Enter a description of this problem, up to 80 characters."
"RTN","GMPLEDT4",52,0)
 D ^DIR S:$D(DTOUT)!(X="^") Y="^" S:'$L(DFLT)&(X="") Y="^"
"RTN","GMPLEDT4",53,0)
 Q Y
"RTN","GMPLEDT4",54,0)
 ;
"RTN","GMPLEDT4",55,0)
NTES ; Edit existing note, display # in XQORNOD(0)
"RTN","GMPLEDT4",56,0)
 N NUM,NOTE,X,Y,PROMPT,DEFAULT,NT
"RTN","GMPLEDT4",57,0)
 S NT=$S(GMPVA:7,1:5) S:$D(^XUSEC("GMPL ICD CODE",DUZ)) NT=NT+1
"RTN","GMPLEDT4",58,0)
 S NUM=+$P(XQORNOD(0),U,3)-NT Q:NUM'>0
"RTN","GMPLEDT4",59,0)
 S NOTE=GMPFLD(10,NUM),DEFAULT=$P(NOTE,U,3)
"RTN","GMPLEDT4",60,0)
 S PROMPT="NOTE "_$$EXTDT^GMPLX($P(NOTE,U,5))_": "
"RTN","GMPLEDT4",61,0)
 D EDNOTE Q:$D(GMPQUIT)
"RTN","GMPLEDT4",62,0)
 S $P(GMPFLD(10,NUM),U,3)=Y
"RTN","GMPLEDT4",63,0)
 Q
"RTN","GMPLEDT4",64,0)
 ;
"RTN","GMPLEDT4",65,0)
EDNOTE ; Edit note text given PROMPT,DEFAULT (returns X,Y)
"RTN","GMPLEDT4",66,0)
 N DIR,DTOUT S DIR(0)="FAO^1:100",DIR("A")=PROMPT
"RTN","GMPLEDT4",67,0)
 S:$L(DEFAULT) DIR("B")=DEFAULT
"RTN","GMPLEDT4",68,0)
 S DIR("?",1)="Enter any text you wish appended to this problem, up to 60 characters"
"RTN","GMPLEDT4",69,0)
 S DIR("?")="in length.  You may append as many comments to a problem as you wish."
"RTN","GMPLEDT4",70,0)
ED1 D ^DIR I $D(DTOUT)!(Y="^") S GMPQUIT=1,Y="" Q
"RTN","GMPLEDT4",71,0)
 I Y?1"^".E D JUMP^GMPLEDT3(Y) Q:$D(GMPQUIT)!($G(GMPLJUMP))  K:$G(GMPIFN) GMPLJUMP G ED1
"RTN","GMPLEDT4",72,0)
 Q:Y=DEFAULT  I X="@" D  Q:$D(GMPQUIT)!(Y="")  G ED1
"RTN","GMPLEDT4",73,0)
 . N DIR,X,DTOUT,DUOUT S DIR(0)="YAO",DIR("B")="NO"
"RTN","GMPLEDT4",74,0)
 . S DIR("A")="   Are you sure you want to delete this comment? "
"RTN","GMPLEDT4",75,0)
 . S DIR("?")="   Enter YES to completely remove this comment from this patient's problem."
"RTN","GMPLEDT4",76,0)
 . W $C(7) D ^DIR I $D(DUOUT)!($D(DTOUT)) S GMPQUIT=1,Y="" Q
"RTN","GMPLEDT4",77,0)
 . S:Y Y=""
"RTN","GMPLEDT4",78,0)
 I $L(X)>60 W !!,"Text may not exceed 60 characters!",!,$C(7) S DIR("B")=$E(X,1,60) G ED1
"RTN","GMPLEDT4",79,0)
 S Y=X
"RTN","GMPLEDT4",80,0)
 Q
"RTN","GMPLEDT4",81,0)
 ;
"RTN","GMPLEDT4",82,0)
RESOLVED ; edit field 1.07
"RTN","GMPLEDT4",83,0)
 N X,Y,PROMPT,HELPMSG,DEFAULT,ONSET S ONSET=+$G(GMPFLD(.13))
"RTN","GMPLEDT4",84,0)
 S DEFAULT=$G(GMPFLD(1.07)),PROMPT="DATE RESOLVED: "
"RTN","GMPLEDT4",85,0)
 S HELPMSG="Enter the date this problem became resolved or inactive, as precisely as known."
"RTN","GMPLEDT4",86,0)
R1 D DATE^GMPLEDT2 Q:$D(GMPQUIT)!($G(GMPLJUMP))
"RTN","GMPLEDT4",87,0)
 I Y,ONSET,Y<ONSET W !!,"Date Resolved cannot be prior to the Date of Onset!",$C(7) G R1
"RTN","GMPLEDT4",88,0)
 S GMPFLD(1.07)=Y S:Y'="" GMPFLD(1.07)=GMPFLD(1.07)_U_$$EXTDT^GMPLX(Y)
"RTN","GMPLEDT4",89,0)
 Q
"RTN","GMPLEDT4",90,0)
 ;
"RTN","GMPLEDT4",91,0)
PRIORITY ; edit field 1.14
"RTN","GMPLEDT4",92,0)
 N DIR,X,Y,DTOUT
"RTN","GMPLEDT4",93,0)
 S DIR(0)="SAO^A:ACUTE;C:CHRONIC;",DIR("A")="  (A)cute or (C)hronic? "
"RTN","GMPLEDT4",94,0)
 S:$L($G(GMPFLD(1.14))) DIR("B")=$P(GMPFLD(1.14),U,2)
"RTN","GMPLEDT4",95,0)
 S DIR("?",1)="  You may further refine the status of this problem by designating it",DIR("?",2)="  as ACUTE or CHRONIC; problems marked as ACUTE will be flagged on the",DIR("?")="  list display with a '*'."
"RTN","GMPLEDT4",96,0)
PR1 D ^DIR I $D(DTOUT)!(Y="^") S GMPQUIT=1 Q
"RTN","GMPLEDT4",97,0)
 I Y?1"^".E D JUMP^GMPLEDT3(Y) Q:$D(GMPQUIT)!($G(GMPLJUMP))  K:$G(GMPIFN) GMPLJUMP G PR1
"RTN","GMPLEDT4",98,0)
 S:Y'="" Y=Y_U_$S(Y="A":"ACUTE",1:"CHRONIC")
"RTN","GMPLEDT4",99,0)
 S GMPFLD(1.14)=Y
"RTN","GMPLEDT4",100,0)
 Q
"RTN","GMPLPXRM")
0^28^B54071956
"RTN","GMPLPXRM",1,0)
GMPLPXRM ; SLC/PKR - Build Clinical Reminder Index for AUPNPROB. ;10/22/2014
"RTN","GMPLPXRM",2,0)
 ;;2.0;Problem List;**27,43,44,47**;Aug 25, 1994;Build 58
"RTN","GMPLPXRM",3,0)
 ;DBIA #4113 supports PXRMSXRM entry points.
"RTN","GMPLPXRM",4,0)
 ;DBIA #4114 supports setting and killing ^PXRMINDX(9000011)
"RTN","GMPLPXRM",5,0)
 ;DBIA #5747 covers references to ^ICDEX entry point.
"RTN","GMPLPXRM",6,0)
 ;===================================
"RTN","GMPLPXRM",7,0)
INDEX ;Build the indexes for PROBLEM LIST.
"RTN","GMPLPXRM",8,0)
 N CODE,CODEP,CODESYS,COND,DAS,DAS803,DFN,DIFF,DLM,DONE
"RTN","GMPLPXRM",9,0)
 N END,ENTRIES,ETEXT,GLOBAL,IND,JND,NE,NERROR,PRIO,PROB
"RTN","GMPLPXRM",10,0)
 N START,STATUS,TEMP,TENP,TEXT
"RTN","GMPLPXRM",11,0)
 ;Don't leave any old stuff around.
"RTN","GMPLPXRM",12,0)
 K ^PXRMINDX(9000011)
"RTN","GMPLPXRM",13,0)
 S GLOBAL=$$GET1^DID(9000011,"","","GLOBAL NAME")
"RTN","GMPLPXRM",14,0)
 S ENTRIES=$P(^AUPNPROB(0),U,4)
"RTN","GMPLPXRM",15,0)
 S TENP=ENTRIES/10
"RTN","GMPLPXRM",16,0)
 S TENP=+$P(TENP,".",1)
"RTN","GMPLPXRM",17,0)
 I TENP<1 S TENP=1
"RTN","GMPLPXRM",18,0)
 D BMES^XPDUTL("Building indexes PROBLEM LIST")
"RTN","GMPLPXRM",19,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","GMPLPXRM",20,0)
 D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",21,0)
 S START=$H
"RTN","GMPLPXRM",22,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","GMPLPXRM",23,0)
 F  S DAS=$O(^AUPNPROB(DAS)) Q:DONE  D
"RTN","GMPLPXRM",24,0)
 . N GMPDT,GMPCSYS
"RTN","GMPLPXRM",25,0)
 . I +DAS=0 S DONE=1 Q
"RTN","GMPLPXRM",26,0)
 . I +DAS'=DAS D  Q
"RTN","GMPLPXRM",27,0)
 .. S DONE=1
"RTN","GMPLPXRM",28,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","GMPLPXRM",29,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",30,0)
 . S IND=IND+1
"RTN","GMPLPXRM",31,0)
 . I IND#TENP=0 D
"RTN","GMPLPXRM",32,0)
 .. S TEXT="Processing entry "_IND
"RTN","GMPLPXRM",33,0)
 .. D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",34,0)
 . I IND#10000=0 W "."
"RTN","GMPLPXRM",35,0)
 . S TEMP=$G(^AUPNPROB(DAS,1))
"RTN","GMPLPXRM",36,0)
 . S COND=$P(TEMP,U,2)
"RTN","GMPLPXRM",37,0)
 .;Don't index Hidden problems.
"RTN","GMPLPXRM",38,0)
 . I COND="H" Q
"RTN","GMPLPXRM",39,0)
 . S PRIO=$P(TEMP,U,14)
"RTN","GMPLPXRM",40,0)
 .;If there is no priority set it to "U" for undefined.
"RTN","GMPLPXRM",41,0)
 . I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",42,0)
 . S TEMP=^AUPNPROB(DAS,0)
"RTN","GMPLPXRM",43,0)
 . S CODEP=$P(TEMP,U,1)
"RTN","GMPLPXRM",44,0)
 . I CODEP="" D  Q
"RTN","GMPLPXRM",45,0)
 .. S ETEXT=DAS_" missing problem"
"RTN","GMPLPXRM",46,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",47,0)
 . S DFN=$P(TEMP,U,2)
"RTN","GMPLPXRM",48,0)
 . I DFN="" D  Q
"RTN","GMPLPXRM",49,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","GMPLPXRM",50,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",51,0)
 . S DLM=$P(TEMP,U,3)
"RTN","GMPLPXRM",52,0)
 . I DLM="" D  Q
"RTN","GMPLPXRM",53,0)
 .. S ETEXT=DAS_" missing date last modified"
"RTN","GMPLPXRM",54,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",55,0)
 . S STATUS=$P(TEMP,U,12)
"RTN","GMPLPXRM",56,0)
 . I STATUS="" D  Q
"RTN","GMPLPXRM",57,0)
 .. S ETEXT=DAS_" missing status"
"RTN","GMPLPXRM",58,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","GMPLPXRM",59,0)
 . S CODESYS=$P($G(^AUPNPROB(DAS,802)),U,2)
"RTN","GMPLPXRM",60,0)
 . I CODESYS="" S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,CODEP)),U,3)
"RTN","GMPLPXRM",61,0)
 . S CODE=$$CODEC^ICDEX(80,CODEP)
"RTN","GMPLPXRM",62,0)
 . I +CODE=-1 D  Q
"RTN","GMPLPXRM",63,0)
 .. S ETEXT=DAS_" has the invalid code "_CODE
"RTN","GMPLPXRM",64,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",65,0)
 . S NE=NE+1
"RTN","GMPLPXRM",66,0)
 . S ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STATUS,PRIO,DFN,DLM,DAS)=""
"RTN","GMPLPXRM",67,0)
 . S ^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STATUS,PRIO,CODE,DLM,DAS)=""
"RTN","GMPLPXRM",68,0)
 .;Check for a SNOMED CT code.
"RTN","GMPLPXRM",69,0)
 . S CODE=$P($G(^AUPNPROB(DAS,800)),U,1)
"RTN","GMPLPXRM",70,0)
 . I CODE="" Q
"RTN","GMPLPXRM",71,0)
 . S ^PXRMINDX(9000011,"SCT","ISPP",CODE,STATUS,PRIO,DFN,DLM,DAS)=""
"RTN","GMPLPXRM",72,0)
 . S ^PXRMINDX(9000011,"SCT","PSPI",DFN,STATUS,PRIO,CODE,DLM,DAS)=""
"RTN","GMPLPXRM",73,0)
 .;Check for entries in the Mapping Targets multiple.
"RTN","GMPLPXRM",74,0)
 . S JND=0
"RTN","GMPLPXRM",75,0)
 . F  S JND=+$O(^AUPNPROB(DAS,803,JND)) Q:JND=0  D
"RTN","GMPLPXRM",76,0)
 .. S TEMP=^AUPNPROB(DAS,803,JND,0)
"RTN","GMPLPXRM",77,0)
 .. S CODE=$P(TEMP,U,1)
"RTN","GMPLPXRM",78,0)
 .. S CODESYS=$P(TEMP,U,2)
"RTN","GMPLPXRM",79,0)
 .. S DAS803=DAS_";803;"_JND
"RTN","GMPLPXRM",80,0)
 .. S ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,STATUS,PRIO,DFN,DLM,DAS803)=""
"RTN","GMPLPXRM",81,0)
 .. S ^PXRMINDX(9000011,CODESYS,"PSPI",DFN,STATUS,PRIO,CODE,DLM,DAS803)=""
"RTN","GMPLPXRM",82,0)
 S END=$H
"RTN","GMPLPXRM",83,0)
 S TEXT=NE_" PROBLEM LIST results indexed."
"RTN","GMPLPXRM",84,0)
 D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",85,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","GMPLPXRM",86,0)
 ;If there were errors send a message.
"RTN","GMPLPXRM",87,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","GMPLPXRM",88,0)
 ;Send a MailMan message with the results.
"RTN","GMPLPXRM",89,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","GMPLPXRM",90,0)
 S ^PXRMINDX(9000011,"GLOBAL NAME")=GLOBAL
"RTN","GMPLPXRM",91,0)
 S ^PXRMINDX(9000011,"BUILT BY")=DUZ
"RTN","GMPLPXRM",92,0)
 S ^PXRMINDX(9000011,"DATE BUILT")=$$NOW^XLFDT
"RTN","GMPLPXRM",93,0)
 Q
"RTN","GMPLPXRM",94,0)
 ;
"RTN","GMPLPXRM",95,0)
 ;===================================
"RTN","GMPLPXRM",96,0)
KPROB01(X,DA) ;Delete Index entry for Problem List .01.
"RTN","GMPLPXRM",97,0)
 ;X(1)=DIAGNOSIS, X(2)=DFN, X(3)=DATE LAST MODIFIED, X(4)=STATUS
"RTN","GMPLPXRM",98,0)
 ;X(5)=PRIORITY, X(6)=CONDITION, X(7)=CODING SYSTEM
"RTN","GMPLPXRM",99,0)
 N CODE,CODESYS,PRIO
"RTN","GMPLPXRM",100,0)
 S CODE=$$CODEC^ICDEX(80,X(1))
"RTN","GMPLPXRM",101,0)
 I +CODE=-1 Q
"RTN","GMPLPXRM",102,0)
 S CODESYS=$G(X(7))
"RTN","GMPLPXRM",103,0)
 I CODESYS="" S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(1))),U,3)
"RTN","GMPLPXRM",104,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",105,0)
 K ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,X(4),PRIO,X(2),X(3),DA)
"RTN","GMPLPXRM",106,0)
 K ^PXRMINDX(9000011,CODESYS,"PSPI",X(2),X(4),PRIO,CODE,X(3),DA)
"RTN","GMPLPXRM",107,0)
 Q
"RTN","GMPLPXRM",108,0)
 ;
"RTN","GMPLPXRM",109,0)
 ;===================================
"RTN","GMPLPXRM",110,0)
KPROBMT(X,DA) ;Kill Index entry for Problem List Mapping Targets.
"RTN","GMPLPXRM",111,0)
 ;X(1)=CODE, X(2)=CODING SYSTEM
"RTN","GMPLPXRM",112,0)
 N DAS,DFN,DLM,PRIO,STATUS,TEMP
"RTN","GMPLPXRM",113,0)
 I X(2)="" Q
"RTN","GMPLPXRM",114,0)
 S TEMP=^AUPNPROB(DA(1),1)
"RTN","GMPLPXRM",115,0)
 S PRIO=$P(TEMP,U,14)
"RTN","GMPLPXRM",116,0)
 I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",117,0)
 S TEMP=^AUPNPROB(DA(1),0)
"RTN","GMPLPXRM",118,0)
 S DFN=$P(TEMP,U,2),DLM=$P(TEMP,U,3),STATUS=$P(TEMP,U,12)
"RTN","GMPLPXRM",119,0)
 S DAS=DA(1)_";"_803_";"_DA
"RTN","GMPLPXRM",120,0)
 K ^PXRMINDX(9000011,X(2),"ISPP",X(1),STATUS,PRIO,DFN,DLM,DAS)
"RTN","GMPLPXRM",121,0)
 K ^PXRMINDX(9000011,X(2),"PSPI",DFN,STATUS,PRIO,X(1),DLM,DAS)
"RTN","GMPLPXRM",122,0)
 Q
"RTN","GMPLPXRM",123,0)
 ;
"RTN","GMPLPXRM",124,0)
 ;===================================
"RTN","GMPLPXRM",125,0)
KPROBMTA(X,DA) ;Whenever any of the fields in the 803 node index are changed
"RTN","GMPLPXRM",126,0)
 ;kill the old index entry.
"RTN","GMPLPXRM",127,0)
 ;X(1)=DATE LAST MODIFIED, X(2)=STATUS, X(3)=PRIORITY, X(4)=CONDITION
"RTN","GMPLPXRM",128,0)
 N CODE,CODESYS,DAS,DFN,IND,PRIO,TEMP
"RTN","GMPLPXRM",129,0)
 S PRIO=X(3)
"RTN","GMPLPXRM",130,0)
 I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",131,0)
 S DFN=$P(^AUPNPROB(DA,0),U,2)
"RTN","GMPLPXRM",132,0)
 S IND=0
"RTN","GMPLPXRM",133,0)
 F  S IND=+$O(^AUPNPROB(DA,803,IND)) Q:IND=0  D
"RTN","GMPLPXRM",134,0)
 . S TEMP=^AUPNPROB(DA,803,IND,0)
"RTN","GMPLPXRM",135,0)
 . S CODE=$P(TEMP,U,1),CODESYS=$P(TEMP,U,2)
"RTN","GMPLPXRM",136,0)
 . S DAS=DA_";"_803_";"_IND
"RTN","GMPLPXRM",137,0)
 . K ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,X(2),PRIO,DFN,X(1),DAS)
"RTN","GMPLPXRM",138,0)
 . K ^PXRMINDX(9000011,CODESYS,"PSPI",DFN,X(2),PRIO,CODE,X(1),DAS)
"RTN","GMPLPXRM",139,0)
 Q
"RTN","GMPLPXRM",140,0)
 ;
"RTN","GMPLPXRM",141,0)
 ;===================================
"RTN","GMPLPXRM",142,0)
KPROBSCT(X,DA) ;Delete Index entry for Problem List SNOMED CT.
"RTN","GMPLPXRM",143,0)
 ;X(1)=SNOMED CT CONCEPT CODE, X(2)=DFN, X(3)=DATE LAST MODIFIED,
"RTN","GMPLPXRM",144,0)
 ;X(4)=STATUS, X(5)=PRIORITY, X(6)=CONDITION
"RTN","GMPLPXRM",145,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",146,0)
 K ^PXRMINDX(9000011,"SCT","ISPP",X(1),X(4),PRIO,X(2),X(3),DA)
"RTN","GMPLPXRM",147,0)
 K ^PXRMINDX(9000011,"SCT","PSPI",X(2),X(4),PRIO,X(1),X(3),DA)
"RTN","GMPLPXRM",148,0)
 Q
"RTN","GMPLPXRM",149,0)
 ;
"RTN","GMPLPXRM",150,0)
 ;===================================
"RTN","GMPLPXRM",151,0)
PROBDATA(DAS,DATA) ;Return data for a Problem List entry.
"RTN","GMPLPXRM",152,0)
 ;DBIA #5881
"RTN","GMPLPXRM",153,0)
 N EM,IEN,IND,TEMP
"RTN","GMPLPXRM",154,0)
 S IEN=$P(DAS,";",1)
"RTN","GMPLPXRM",155,0)
 S TEMP=^AUPNPROB(IEN,0)
"RTN","GMPLPXRM",156,0)
 S DATA("ICD DIAGNOSIS")=$P(TEMP,U,1)
"RTN","GMPLPXRM",157,0)
 S DATA("DATE LAST MODIFIED")=$P(TEMP,U,3)
"RTN","GMPLPXRM",158,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,5)
"RTN","GMPLPXRM",159,0)
 S DATA("DATE ENTERED")=$P(TEMP,U,8)
"RTN","GMPLPXRM",160,0)
 S DATA("STATUS")=$P(TEMP,U,12)
"RTN","GMPLPXRM",161,0)
 S DATA("DATE OF ONSET")=$P(TEMP,U,13)
"RTN","GMPLPXRM",162,0)
 S TEMP=^AUPNPROB(IEN,1)
"RTN","GMPLPXRM",163,0)
 S DATA("PROBLEM")=$P(TEMP,U,1)
"RTN","GMPLPXRM",164,0)
 S DATA("PROBLEM CONDITION")=$P(TEMP,U,2)
"RTN","GMPLPXRM",165,0)
 S DATA("RECORDING PROVIDER")=$P(TEMP,U,4)
"RTN","GMPLPXRM",166,0)
 S DATA("RESPONSIBLE PROVIDER")=$P(TEMP,U,5)
"RTN","GMPLPXRM",167,0)
 S DATA("DATE RESOLVED")=$P(TEMP,U,7)
"RTN","GMPLPXRM",168,0)
 S DATA("CLINIC")=$P(TEMP,U,8)
"RTN","GMPLPXRM",169,0)
 S DATA("PRIORITY")=$P(TEMP,U,14)
"RTN","GMPLPXRM",170,0)
 S DATA("DATE OF INTEREST")=$P($G(^AUPNPROB(IEN,802)),U,1)
"RTN","GMPLPXRM",171,0)
 I DAS'[";803;" Q
"RTN","GMPLPXRM",172,0)
 S IND=$P(DAS,";",3)
"RTN","GMPLPXRM",173,0)
 S TEMP=^AUPNPROB(IEN,803,IND,0)
"RTN","GMPLPXRM",174,0)
 S DATA("MT CODE")=$P(TEMP,U,1)
"RTN","GMPLPXRM",175,0)
 S DATA("MT CODING SYSTEM")=$P(TEMP,U,2)
"RTN","GMPLPXRM",176,0)
 S DATA("MT CODE DATE")=$P(TEMP,U,3)
"RTN","GMPLPXRM",177,0)
 Q
"RTN","GMPLPXRM",178,0)
 ;
"RTN","GMPLPXRM",179,0)
 ;===================================
"RTN","GMPLPXRM",180,0)
SPROB01(X,DA) ;Set Index entry for Problem List .01.
"RTN","GMPLPXRM",181,0)
 ;X(1)=DIAGNOSIS, X(2)=DFN, X(3)=DATE LAST MODIFIED, X(4)=STATUS
"RTN","GMPLPXRM",182,0)
 ;X(5)=PRIORITY, X(6)=CONDITION, X(7)=CODING SYSTEM
"RTN","GMPLPXRM",183,0)
 ;Don't index Hidden problems.
"RTN","GMPLPXRM",184,0)
 I X(6)="H" Q
"RTN","GMPLPXRM",185,0)
 N CODE,CODESYS,PRIO
"RTN","GMPLPXRM",186,0)
 S CODE=$$CODEC^ICDEX(80,X(1))
"RTN","GMPLPXRM",187,0)
 I +CODE=-1 Q
"RTN","GMPLPXRM",188,0)
 S CODESYS=$G(X(7))
"RTN","GMPLPXRM",189,0)
 I CODESYS="" S CODESYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(1))),U,3)
"RTN","GMPLPXRM",190,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",191,0)
 S ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,X(4),PRIO,X(2),X(3),DA)=""
"RTN","GMPLPXRM",192,0)
 S ^PXRMINDX(9000011,CODESYS,"PSPI",X(2),X(4),PRIO,CODE,X(3),DA)=""
"RTN","GMPLPXRM",193,0)
 Q
"RTN","GMPLPXRM",194,0)
 ;
"RTN","GMPLPXRM",195,0)
 ;===================================
"RTN","GMPLPXRM",196,0)
SPROBMT(X,DA) ;Set Index entry for Problem List Mapping Targets.
"RTN","GMPLPXRM",197,0)
 ;X(1)=CODE, X(2)=CODING SYSTEM
"RTN","GMPLPXRM",198,0)
 N DAS,DFN,DLM,PRIO,STATUS,TEMP
"RTN","GMPLPXRM",199,0)
 S TEMP=^AUPNPROB(DA(1),1)
"RTN","GMPLPXRM",200,0)
 ;Don't index Hidden problems.
"RTN","GMPLPXRM",201,0)
 I $P(TEMP,U,2)="H" Q
"RTN","GMPLPXRM",202,0)
 S PRIO=$P(TEMP,U,14)
"RTN","GMPLPXRM",203,0)
 I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",204,0)
 S TEMP=^AUPNPROB(DA(1),0)
"RTN","GMPLPXRM",205,0)
 S DFN=$P(TEMP,U,2),DLM=$P(TEMP,U,3),STATUS=$P(TEMP,U,12)
"RTN","GMPLPXRM",206,0)
 S DAS=DA(1)_";"_803_";"_DA
"RTN","GMPLPXRM",207,0)
 S ^PXRMINDX(9000011,X(2),"ISPP",X(1),STATUS,PRIO,DFN,DLM,DAS)=""
"RTN","GMPLPXRM",208,0)
 S ^PXRMINDX(9000011,X(2),"PSPI",DFN,STATUS,PRIO,X(1),DLM,DAS)=""
"RTN","GMPLPXRM",209,0)
 Q
"RTN","GMPLPXRM",210,0)
 ;
"RTN","GMPLPXRM",211,0)
 ;===================================
"RTN","GMPLPXRM",212,0)
SPROBMTA(X,DA) ;Whenever any of the fields in the 803 node index are changed
"RTN","GMPLPXRM",213,0)
 ;set the index.
"RTN","GMPLPXRM",214,0)
 ;X(1)=DATE LAST MODIFIED, X(2)=STATUS, X(3)=PRIORITY, X(4)=CONDITION
"RTN","GMPLPXRM",215,0)
 N CODE,CODESYS,DAS,DFN,IND,PRIO,TEMP
"RTN","GMPLPXRM",216,0)
 S TEMP=^AUPNPROB(DA,1)
"RTN","GMPLPXRM",217,0)
 ;Don't index Hidden problems.
"RTN","GMPLPXRM",218,0)
 I X(4)="H" Q
"RTN","GMPLPXRM",219,0)
 S PRIO=X(3)
"RTN","GMPLPXRM",220,0)
 I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",221,0)
 S DFN=$P(^AUPNPROB(DA,0),U,2)
"RTN","GMPLPXRM",222,0)
 S IND=0
"RTN","GMPLPXRM",223,0)
 F  S IND=+$O(^AUPNPROB(DA,803,IND)) Q:IND=0  D
"RTN","GMPLPXRM",224,0)
 . S TEMP=^AUPNPROB(DA,803,IND,0)
"RTN","GMPLPXRM",225,0)
 . S CODE=$P(TEMP,U,1),CODESYS=$P(TEMP,U,2)
"RTN","GMPLPXRM",226,0)
 . S DAS=DA_";"_803_";"_IND
"RTN","GMPLPXRM",227,0)
 . S ^PXRMINDX(9000011,CODESYS,"ISPP",CODE,X(2),PRIO,DFN,X(1),DAS)=""
"RTN","GMPLPXRM",228,0)
 . S ^PXRMINDX(9000011,CODESYS,"PSPI",DFN,X(2),PRIO,CODE,X(1),DAS)=""
"RTN","GMPLPXRM",229,0)
 Q
"RTN","GMPLPXRM",230,0)
 ;
"RTN","GMPLPXRM",231,0)
 ;===================================
"RTN","GMPLPXRM",232,0)
SPROBSCT(X,DA) ;Set Index entry for Problem List SNOMED CT.
"RTN","GMPLPXRM",233,0)
 ;X(1)=SNOMED CT CONCEPT CODE, X(2)=DFN, X(3)=DATE LAST MODIFIED,
"RTN","GMPLPXRM",234,0)
 ;X(4)=STATUS, X(5)=PRIORITY, X(6)=CONDITION
"RTN","GMPLPXRM",235,0)
 ;Don't index Hidden problems.
"RTN","GMPLPXRM",236,0)
 I X(6)="H" Q
"RTN","GMPLPXRM",237,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",238,0)
 S ^PXRMINDX(9000011,"SCT","ISPP",X(1),X(4),PRIO,X(2),X(3),DA)=""
"RTN","GMPLPXRM",239,0)
 S ^PXRMINDX(9000011,"SCT","PSPI",X(2),X(4),PRIO,X(1),X(3),DA)=""
"RTN","GMPLPXRM",240,0)
 Q
"RTN","GMPLPXRM",241,0)
 ;
"RTN","GMPLRPTR")
0^29^B15126076
"RTN","GMPLRPTR",1,0)
GMPLRPTR ; SLC/MKB/AJB -- Problem List Report of Removed Problems ;11/14/14  12:18
"RTN","GMPLRPTR",2,0)
 ;;2.0;Problem List;**28,47**;Aug 25, 1994;Build 58
"RTN","GMPLRPTR",3,0)
EN ; -- main entry point
"RTN","GMPLRPTR",4,0)
 N GMPDFN
"RTN","GMPLRPTR",5,0)
 S GMPDFN=$$PAT^GMPLX1 Q:+GMPDFN'>0
"RTN","GMPLRPTR",6,0)
 D WAIT^DICD,GETLIST
"RTN","GMPLRPTR",7,0)
 I GMPLIST(0)'>0 W $C(7),!!?10,"No 'removed' problems found for this patient.",! Q
"RTN","GMPLRPTR",8,0)
 D DISPLAY,REPLACE
"RTN","GMPLRPTR",9,0)
 K GMPDFN,GMPLIST
"RTN","GMPLRPTR",10,0)
 Q
"RTN","GMPLRPTR",11,0)
 ;
"RTN","GMPLRPTR",12,0)
GETLIST ; -- build GMPLIST() of removed problems
"RTN","GMPLRPTR",13,0)
 N IFN,CNT,NODE S CNT=0
"RTN","GMPLRPTR",14,0)
 F IFN=0:0 S IFN=$O(^AUPNPROB("AC",+GMPDFN,IFN)) Q:IFN'>0  D
"RTN","GMPLRPTR",15,0)
 . S NODE=$G(^AUPNPROB(IFN,1)) Q:$P(NODE,U,2)'="H"
"RTN","GMPLRPTR",16,0)
 . S CNT=CNT+1,GMPLIST(CNT)=IFN W "."
"RTN","GMPLRPTR",17,0)
 S GMPLIST(0)=CNT
"RTN","GMPLRPTR",18,0)
 Q
"RTN","GMPLRPTR",19,0)
 ;
"RTN","GMPLRPTR",20,0)
DISPLAY ; -- show list on screen
"RTN","GMPLRPTR",21,0)
 N PROBLEM,DATE,USER,NUM,PROV,IDT,AIFN,NODE,DONE,GMPQUIT D HDR
"RTN","GMPLRPTR",22,0)
 F NUM=0:0 S NUM=$O(GMPLIST(NUM)) Q:NUM'>0  D  Q:$D(GMPQUIT)
"RTN","GMPLRPTR",23,0)
 . S IFN=GMPLIST(NUM) Q:'IFN
"RTN","GMPLRPTR",24,0)
 . S PROBLEM=$$PROBTEXT^GMPLX(IFN),(DATE,PROV)="" K DONE
"RTN","GMPLRPTR",25,0)
 . ; added for Code Set Versioning (CSV)
"RTN","GMPLRPTR",26,0)
 . I '$$CODESTS^GMPLX(IFN,DT) S PROBLEM="#"_PROBLEM
"RTN","GMPLRPTR",27,0)
 . F IDT=0:0 S IDT=$O(^GMPL(125.8,"AD",IFN,IDT)) Q:IDT'>0  D  Q:$D(DONE)
"RTN","GMPLRPTR",28,0)
 . . F AIFN=0:0 S AIFN=$O(^GMPL(125.8,"AD",IFN,IDT,AIFN)) Q:AIFN'>0  D  Q:$D(DONE)
"RTN","GMPLRPTR",29,0)
 . . . S NODE=$G(^GMPL(125.8,AIFN,0)) Q:$P(NODE,U,2)'=1.02
"RTN","GMPLRPTR",30,0)
 . . . I $P(NODE,U,6)="H" S DATE=9999999-IDT,PROV=$P(NODE,U,8),DONE=1
"RTN","GMPLRPTR",31,0)
 . I $Y>(IOSL-4) S:'$$CONTINUE GMPQUIT=1 Q:$D(GMPQUIT)  D HDR
"RTN","GMPLRPTR",32,0)
 . ; added for Code Set Versioning
"RTN","GMPLRPTR",33,0)
 . N GMPLBUF S GMPLBUF=$S(PROBLEM["#":3,1:4)
"RTN","GMPLRPTR",34,0)
 . W !,NUM,?GMPLBUF,PROBLEM,?51,$$EXTDT^GMPLX(DATE),?60,$$NAME^GMPLX1(PROV)
"RTN","GMPLRPTR",35,0)
 Q
"RTN","GMPLRPTR",36,0)
 ;
"RTN","GMPLRPTR",37,0)
HDR ; -- header code
"RTN","GMPLRPTR",38,0)
 W @IOF,"REMOVED PROBLEMS FOR "_$P(GMPDFN,U,2)_" ("_$P(GMPDFN,U,3)_"):"
"RTN","GMPLRPTR",39,0)
 W !!,"    Problem",?51,"Removed  By Whom",!,$$REPEAT^XLFSTR("-",79)
"RTN","GMPLRPTR",40,0)
 Q
"RTN","GMPLRPTR",41,0)
 ;
"RTN","GMPLRPTR",42,0)
CONTINUE() ; -- end of page prompt
"RTN","GMPLRPTR",43,0)
 N DIR,X,Y
"RTN","GMPLRPTR",44,0)
 S DIR(0)="E",DIR("A")="Press <return> to continue or ^ to exit ..."
"RTN","GMPLRPTR",45,0)
 D ^DIR
"RTN","GMPLRPTR",46,0)
 Q +Y
"RTN","GMPLRPTR",47,0)
 ;
"RTN","GMPLRPTR",48,0)
REPLACE ; -- replace problem on patient's list
"RTN","GMPLRPTR",49,0)
 N GMPLI,GMPLSEL,GMPLNO,NUM,CHNGE,NOW,DA,DR,DIE W !!
"RTN","GMPLRPTR",50,0)
 S GMPLSEL=$$SEL Q:GMPLSEL="^"  Q:'$$SURE
"RTN","GMPLRPTR",51,0)
 W !!,"Replacing problem(s) on patient's list ..."
"RTN","GMPLRPTR",52,0)
 ;S GMPLNO=$L(GMPLSEL,","),NOW=$$HTFM^XLFDT($H)
"RTN","GMPLRPTR",53,0)
 ;F GMPLI=1:1:GMPLNO S NUM=$P(GMPLSEL,",",GMPLI) I NUM D
"RTN","GMPLRPTR",54,0)
 S GMPLNO=$L(GMPLSEL,",")-1,NOW=$$HTFM^XLFDT($H)
"RTN","GMPLRPTR",55,0)
 F GMPLI=1:1:GMPLNO S NUM=$P(GMPLSEL,",",GMPLI)  D
"RTN","GMPLRPTR",56,0)
 . ; added for Code Set Versioning (CSV)
"RTN","GMPLRPTR",57,0)
 . I '$$CODESTS^GMPLX(GMPLIST(NUM),DT) W !!,$$PROBTEXT^GMPLX(GMPLIST(NUM)),!,"has an inactive ICD9 code and will not be replaced." Q
"RTN","GMPLRPTR",58,0)
 . S DA=GMPLIST(NUM),DR="1.02////P",DIE="^AUPNPROB(" D ^DIE
"RTN","GMPLRPTR",59,0)
 . S CHNGE=DA_"^1.02^"_NOW_U_DUZ_"^H^P^Replaced^"_DUZ
"RTN","GMPLRPTR",60,0)
 . D AUDIT^GMPLX(CHNGE,""),DTMOD^GMPLX(DA)
"RTN","GMPLRPTR",61,0)
 . W !,"  "_$$PROBTEXT^GMPLX(DA)
"RTN","GMPLRPTR",62,0)
 D
"RTN","GMPLRPTR",63,0)
 . N DIR S DIR(0)="E" W ! D ^DIR
"RTN","GMPLRPTR",64,0)
 Q
"RTN","GMPLRPTR",65,0)
 ;
"RTN","GMPLRPTR",66,0)
SEL() ; -- select problem(s)
"RTN","GMPLRPTR",67,0)
 N DIR,X,Y,MAX
"RTN","GMPLRPTR",68,0)
 S MAX=+GMPLIST(0) I MAX'>0 Q "^"
"RTN","GMPLRPTR",69,0)
 S DIR(0)="LAO^1:"_MAX,DIR("A")="Select the problem(s) you wish to replace on this patient's list: "
"RTN","GMPLRPTR",70,0)
 S DIR("?",1)="Enter the problems you wish to add back on this patient's problem list,",DIR("?")="as a range or list of numbers."
"RTN","GMPLRPTR",71,0)
 D ^DIR I $D(DTOUT)!(X="") S Y="^"
"RTN","GMPLRPTR",72,0)
 Q Y
"RTN","GMPLRPTR",73,0)
 ;
"RTN","GMPLRPTR",74,0)
SURE() ; -- are you sure you want to do this?
"RTN","GMPLRPTR",75,0)
 N DIR,X,Y
"RTN","GMPLRPTR",76,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to do this",DIR("B")="NO"
"RTN","GMPLRPTR",77,0)
 S DIR("?",1)="Enter YES if you are ready to have the selected problems put back on this",DIR("?")="patient's problem list; press <return> to exit without further action."
"RTN","GMPLRPTR",78,0)
 W $C(7) D ^DIR
"RTN","GMPLRPTR",79,0)
 Q +Y
"RTN","GMPLSAVE")
0^10^B112209796
"RTN","GMPLSAVE",1,0)
GMPLSAVE ; ISL/MKB,KER,JER,TC -- Save Problem List data ;10/30/14  07:47
"RTN","GMPLSAVE",2,0)
 ;;2.0;Problem List;**26,31,35,37,38,36,42,47**;Aug 25, 1994;Build 58
"RTN","GMPLSAVE",3,0)
 ;
"RTN","GMPLSAVE",4,0)
 ; External References
"RTN","GMPLSAVE",5,0)
 ;   ICR #5747   $$CSI^ICDEX,$$SAB^ICDEX,$$CODECS^ICDEX
"RTN","GMPLSAVE",6,0)
 ;   ICR #5009   $$GETDES^LEXTRAN1
"RTN","GMPLSAVE",7,0)
 ;   DBIA 10018  ^DIE
"RTN","GMPLSAVE",8,0)
 ;   DBIA 10013  ^DIK
"RTN","GMPLSAVE",9,0)
 ;   DBIA 10013  IX1^DIK
"RTN","GMPLSAVE",10,0)
 ;   DBIA 10103  $$HTFM^XLFDT
"RTN","GMPLSAVE",11,0)
 ;
"RTN","GMPLSAVE",12,0)
EN ; Save Changes made to Existing Problem
"RTN","GMPLSAVE",13,0)
 N FLD,NOW,CHNGE,I,NIFN,TEXT,OLDTEXT,FAC,NODE,AUDITED,DR,DA,DIE,DIK,GMPICD,GMPBULL
"RTN","GMPLSAVE",14,0)
 S:'GMPORIG(.01) GMPORIG(.01)=$$NOS^GMPLX(+GMPORIG(80202),+GMPORIG(80201))
"RTN","GMPLSAVE",15,0)
 S:'GMPFLD(.01) GMPFLD(.01)=$$NOS^GMPLX(+GMPFLD(80202),+GMPFLD(80201))
"RTN","GMPLSAVE",16,0)
 S GMPICD=$P($G(GMPFLD(.01)),U,2)
"RTN","GMPLSAVE",17,0)
 S:$D(GMPFLD(.01)) GMPFLD(.01)=+GMPFLD(.01)
"RTN","GMPLSAVE",18,0)
 S:$P(GMPFLD(.01),U)=-1 GMPFLD(.01)=$$NOS^GMPLX(+GMPFLD(80202),+GMPFLD(80201)) ;chk for error from ICD
"RTN","GMPLSAVE",19,0)
 S:$G(GMPFLD(80201))']"" GMPFLD(80201)=DT_U_$$EXTDT^GMPLX(DT)
"RTN","GMPLSAVE",20,0)
 S:$G(GMPFLD(80202))']"" GMPFLD(80202)=$$SAB^ICDEX($$CSI^ICDEX(80,+GMPFLD(.01)),DT)_U_$P($$CODECS^ICDEX($P(GMPICD,"/"),80,DT),U,2)
"RTN","GMPLSAVE",21,0)
 S:'GMPORIG(1.01) GMPORIG(1.01)="1^Unresolved"
"RTN","GMPLSAVE",22,0)
 S:'GMPFLD(1.01) GMPFLD(1.01)="1^Unresolved"
"RTN","GMPLSAVE",23,0)
 I $G(GMPFLD(1.01))["SNOMED CT" D
"RTN","GMPLSAVE",24,0)
 . N SCTS,SCTC,SCTD,SCTT
"RTN","GMPLSAVE",25,0)
 . S SCTS=GMPFLD(1.01)
"RTN","GMPLSAVE",26,0)
 . S SCTT=$P($P(SCTS," (SNOMED CT "),U,2)
"RTN","GMPLSAVE",27,0)
 . S SCTC=$P($P(SCTS,"SNOMED CT ",2),")"),GMPFLD(80001)=SCTC_U_SCTC
"RTN","GMPLSAVE",28,0)
 . S SCTD=$$GETDES^LEXTRAN1("SCT",SCTT)
"RTN","GMPLSAVE",29,0)
 . I +SCTD=1 S SCTD=$P(SCTD,U,2),GMPFLD(80002)=SCTD_U_SCTD
"RTN","GMPLSAVE",30,0)
 . I (+$G(GMPFLD(.01))=+$$NOS^GMPLX(+GMPFLD(80202),+GMPFLD(80201))) S GMPFLD(80005)="1^PENDING"
"RTN","GMPLSAVE",31,0)
 I $G(GMPFLD(1.01))["VHAT" D
"RTN","GMPLSAVE",32,0)
 . N VHATC,VHATD,VHATS,VHATT
"RTN","GMPLSAVE",33,0)
 . S VHATS=GMPFLD(1.01)
"RTN","GMPLSAVE",34,0)
 . S VHATT=$P($P(VHATS," (VHAT "),U,2)
"RTN","GMPLSAVE",35,0)
 . S VHATC=$P($P(VHATS,"VHAT ",2),")")
"RTN","GMPLSAVE",36,0)
 . S GMPFLD(80003)=VHATC_U_VHATC
"RTN","GMPLSAVE",37,0)
 . S VHATD=$$GETDES^LEXTRAN1("VHAT",VHATT)
"RTN","GMPLSAVE",38,0)
 . I +VHATD=1 S VHATD=$P(VHATD,U,2),GMPFLD(80004)=VHATD_U_VHATD
"RTN","GMPLSAVE",39,0)
 S:'GMPFLD(.05) I=$P(GMPFLD(.05),U,2),GMPFLD(.05)=$$PROVNARR^GMPLX(I,+GMPFLD(1.01))
"RTN","GMPLSAVE",40,0)
 S NOW=$$HTFM^XLFDT($H),AUDITED=0
"RTN","GMPLSAVE",41,0)
 S DR="1.02////"_$S('$D(GMPLUSER):"T",1:GMPFLD(1.02))
"RTN","GMPLSAVE",42,0)
 I GMPORIG(1.02)="T",GMPFLD(1.02)="P" D
"RTN","GMPLSAVE",43,0)
 . S CHNGE=GMPIFN_"^1.02^"_NOW_U_DUZ_"^T^P^Verified^"_DUZ
"RTN","GMPLSAVE",44,0)
 . D AUDIT^GMPLX(CHNGE,"")
"RTN","GMPLSAVE",45,0)
 I $P($G(GMPORIG(.12)),U)="I",$P(GMPFLD(.12),U)="A" D REACTV S AUDITED=1
"RTN","GMPLSAVE",46,0)
 I +$G(GMPORIG(1.01))'=(+GMPFLD(1.01)) D REFORM S AUDITED=1
"RTN","GMPLSAVE",47,0)
 S GMPFLD(.01)=+GMPFLD(.01) ;to remove text left by ?? lex (~)
"RTN","GMPLSAVE",48,0)
 I (+$G(GMPFLD(.01))'=+$$NOS^GMPLX(+GMPFLD(80202),+GMPFLD(80201))),($G(GMPROV)=.5) S GMPFLD(80005)="2^COMPLETED"
"RTN","GMPLSAVE",49,0)
 F FLD=.01,.05,.12,.13,1.01,1.05,1.06,1.07,1.08,1.09,1.1,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,80001,80002,80003,80004,80005,80201,80202 D
"RTN","GMPLSAVE",50,0)
 . Q:'$D(GMPFLD(FLD))  Q:$P($G(GMPORIG(FLD)),U)=$P($G(GMPFLD(FLD)),U)
"RTN","GMPLSAVE",51,0)
 . S DR=DR_";"_FLD_"////"_$S($P(GMPFLD(FLD),U)'="":$P(GMPFLD(FLD),U),1:"@")
"RTN","GMPLSAVE",52,0)
 . Q:AUDITED&((FLD=.12)!(FLD=1.01))  S CHNGE=GMPIFN_U_FLD_U_NOW_U_DUZ_U_$P(GMPORIG(FLD),U)_U_$P(GMPFLD(FLD),U)_"^^"_+$G(GMPROV)
"RTN","GMPLSAVE",53,0)
 . D AUDIT^GMPLX(CHNGE,"")
"RTN","GMPLSAVE",54,0)
 S DA=GMPIFN,DIE="^AUPNPROB(" D ^DIE S GMPSAVED=1
"RTN","GMPLSAVE",55,0)
 D COEXPRS(GMPIFN,GMPICD)
"RTN","GMPLSAVE",56,0)
 I ($P(GMPICD,"/")=$P($$NOS^GMPLX(+GMPFLD(80202),+GMPFLD(80201)),U,2)),(+$P($G(GMPFLD(80001)),U)>0) D NTRTBULL(.GMPBULL,$P(GMPFLD(1.01),U,2),$P($G(GMPFLD(80001)),U,2),$G(GMPSRCH))
"RTN","GMPLSAVE",57,0)
NOTES ; Save Changes to Notes
"RTN","GMPLSAVE",58,0)
 F I=0:0 S I=$O(GMPORIG(10,I)) Q:I'>0  I GMPORIG(10,I)'=GMPFLD(10,I) D
"RTN","GMPLSAVE",59,0)
 . S NIFN=+GMPFLD(10,I),FAC=$P(GMPFLD(10,I),U,2),TEXT=$P(GMPFLD(10,I),U,3),OLDTEXT=$P(GMPORIG(10,I),U,3)
"RTN","GMPLSAVE",60,0)
 . S NODE=$G(^AUPNPROB(GMPIFN,11,FAC,11,NIFN,0))
"RTN","GMPLSAVE",61,0)
 . I TEXT'="" S $P(^AUPNPROB(GMPIFN,11,FAC,11,NIFN,0),U,3)=TEXT D
"RTN","GMPLSAVE",62,0)
 .. I TEXT=OLDTEXT Q
"RTN","GMPLSAVE",63,0)
 .. S CHNGE=GMPIFN_"^1101^"_NOW_U_DUZ_"^C^^Note Modified^"_+$G(GMPROV)
"RTN","GMPLSAVE",64,0)
 . I TEXT=OLDTEXT Q
"RTN","GMPLSAVE",65,0)
 . I TEXT="" S CHNGE=GMPIFN_"^1101^"_NOW_U_DUZ_"^A^^Deleted Note^"_+$G(GMPROV)
"RTN","GMPLSAVE",66,0)
 . D AUDIT^GMPLX(CHNGE,NODE)
"RTN","GMPLSAVE",67,0)
 . I TEXT="" D
"RTN","GMPLSAVE",68,0)
 .. S DIK="^AUPNPROB("_GMPIFN_",11,"_FAC_",11,"
"RTN","GMPLSAVE",69,0)
 .. S DA(2)=GMPIFN,DA(1)=FAC,DA=NIFN D ^DIK
"RTN","GMPLSAVE",70,0)
 I $D(GMPFLD(10,"NEW"))>9 D NEWNOTE
"RTN","GMPLSAVE",71,0)
EXIT ; Quit Saving Changes
"RTN","GMPLSAVE",72,0)
 D:$G(GMPSAVED) DTMOD^GMPLX(GMPIFN)
"RTN","GMPLSAVE",73,0)
 Q
"RTN","GMPLSAVE",74,0)
 ;
"RTN","GMPLSAVE",75,0)
REFORM ; Audit Entry that has been Reformulated
"RTN","GMPLSAVE",76,0)
 S CHNGE=GMPIFN_"^1.01^"_NOW_U_DUZ_U_+GMPORIG(1.01)_U_+GMPFLD(1.01)_"^Reformulated^"_+$G(GMPROV)
"RTN","GMPLSAVE",77,0)
 S NODE=$G(^AUPNPROB(GMPIFN,0))_U_$G(^AUPNPROB(GMPIFN,1))
"RTN","GMPLSAVE",78,0)
 D AUDIT^GMPLX(CHNGE,NODE)
"RTN","GMPLSAVE",79,0)
 Q
"RTN","GMPLSAVE",80,0)
 ;
"RTN","GMPLSAVE",81,0)
REACTV ; Audit Entry that has been Reactivated
"RTN","GMPLSAVE",82,0)
 S CHNGE=GMPIFN_"^.12^"_NOW_U_DUZ_"^I^A^Reactivated^"_+$G(GMPROV)
"RTN","GMPLSAVE",83,0)
 S NODE=$G(^AUPNPROB(GMPIFN,0))_U_$G(^AUPNPROB(GMPIFN,1))
"RTN","GMPLSAVE",84,0)
 D AUDIT^GMPLX(CHNGE,NODE)
"RTN","GMPLSAVE",85,0)
 Q
"RTN","GMPLSAVE",86,0)
 ;
"RTN","GMPLSAVE",87,0)
NEW ; Save Collected Values in new Problem Entry
"RTN","GMPLSAVE",88,0)
 ;   Output   DA (left defined)
"RTN","GMPLSAVE",89,0)
 N DATA,APCDLOOK,APCDALVR,NUM,I,DIK,GMPICD,GMPIFN,X,CSID,CSAB,CSDT
"RTN","GMPLSAVE",90,0)
 S CSDT=$S($P($G(GMPFLD(80201)),U)]"":$P($G(GMPFLD(80201)),U),1:DT)
"RTN","GMPLSAVE",91,0)
 S CSID=$S(+$G(GMPFLD(.01))>0:$$CSI^ICDEX(80,+$G(GMPFLD(.01))),1:$$CS^ICDEX(80,"E",CSDT))
"RTN","GMPLSAVE",92,0)
 S CSAB=$S($P($G(GMPFLD(80202)),U)]"":$P($G(GMPFLD(80202)),U),1:$$SAB^ICDEX(CSID,CSDT))
"RTN","GMPLSAVE",93,0)
 S:'GMPFLD(.01) GMPFLD(.01)=$$NOS^GMPLX(CSAB,CSDT)
"RTN","GMPLSAVE",94,0)
 S:$P(+GMPFLD(.01),U)=-1 GMPFLD(.01)=$$NOS^GMPLX(CSAB,CSDT) ;chk for error from ICD
"RTN","GMPLSAVE",95,0)
 S GMPICD=$S($P($G(GMPFLD(.01)),U,2)]"":$P($G(GMPFLD(.01)),U,2),1:$$CODEC^ICDEX(80,$P($G(GMPFLD(.01)),U)))
"RTN","GMPLSAVE",96,0)
 S:$G(GMPFLD(80201))']"" GMPFLD(80201)=CSDT_U_$$EXTDT^GMPLX(CSDT)
"RTN","GMPLSAVE",97,0)
 S:$G(GMPFLD(80202))']"" GMPFLD(80202)=CSAB_U_$P($$CODECS^ICDEX($P(GMPICD,"/"),80,CSDT),U,2)
"RTN","GMPLSAVE",98,0)
 S GMPFLD(.01)=+GMPFLD(.01) ;to remove text left by ?? lex (~)
"RTN","GMPLSAVE",99,0)
 S:'GMPFLD(1.01) GMPFLD(1.01)="1^Unresolved"
"RTN","GMPLSAVE",100,0)
 S:'GMPFLD(.05) X=$P(GMPFLD(.05),U,2),GMPFLD(.05)=$$PROVNARR^GMPLX(X,+GMPFLD(1.01))
"RTN","GMPLSAVE",101,0)
 S:$G(GMPFLD(1.09))']"" GMPFLD(1.09)=$$DT^XLFDT
"RTN","GMPLSAVE",102,0)
 I $G(GMPFLD(1.01))["SNOMED CT" D
"RTN","GMPLSAVE",103,0)
 . N SCTC,SCTD,SCTS,SCTT
"RTN","GMPLSAVE",104,0)
 . S SCTS=GMPFLD(1.01)
"RTN","GMPLSAVE",105,0)
 . S SCTT=$P($P(SCTS," (SNOMED CT "),U,2)
"RTN","GMPLSAVE",106,0)
 . S SCTC=$P($P(SCTS,"SNOMED CT ",2),")")
"RTN","GMPLSAVE",107,0)
 . S GMPFLD(80001)=SCTC_U_SCTC
"RTN","GMPLSAVE",108,0)
 . S SCTD=$$GETDES^LEXTRAN1("SCT",SCTT)
"RTN","GMPLSAVE",109,0)
 . I +SCTD=1 S SCTD=$P(SCTD,U,2),GMPFLD(80002)=SCTD_U_SCTD
"RTN","GMPLSAVE",110,0)
 I $G(GMPFLD(1.01))["VHAT" D
"RTN","GMPLSAVE",111,0)
 . N VHATC,VHATD,VHATS,VHATT
"RTN","GMPLSAVE",112,0)
 . S VHATS=GMPFLD(1.01)
"RTN","GMPLSAVE",113,0)
 . S VHATT=$P($P(VHATS," (VHAT "),U,2)
"RTN","GMPLSAVE",114,0)
 . S VHATC=$P($P(VHATS,"VHAT ",2),")")
"RTN","GMPLSAVE",115,0)
 . S GMPFLD(80003)=VHATC_U_VHATC
"RTN","GMPLSAVE",116,0)
 . S VHATD=$$GETDES^LEXTRAN1("VHAT",VHATT)
"RTN","GMPLSAVE",117,0)
 . I +VHATD=1 S VHATD=$P(VHATD,U,2),GMPFLD(80004)=VHATD_U_VHATD
"RTN","GMPLSAVE",118,0)
 S DA=$$NEWPROB(+GMPFLD(.01),+GMPDFN) Q:DA'>0
"RTN","GMPLSAVE",119,0)
 S NUM=$$NEXTNMBR(+GMPDFN,+GMPVAMC),GMPSAVED=1 S:'NUM NUM=""
"RTN","GMPLSAVE",120,0)
 ;   Set Node 0
"RTN","GMPLSAVE",121,0)
 S DATA=^AUPNPROB(DA,0)_U_DT_"^^"_$P(GMPFLD(.05),U)_U_+GMPVAMC_U_+NUM_U_DT_"^^^^"_$P(GMPFLD(.12),U)_U_$P(GMPFLD(.13),U)
"RTN","GMPLSAVE",122,0)
 S ^AUPNPROB(DA,0)=DATA
"RTN","GMPLSAVE",123,0)
 ;   Set Node 1
"RTN","GMPLSAVE",124,0)
 S DATA=$P(GMPFLD(1.01),U) F I=1.02:.01:1.18 S DATA=DATA_U_$S($P($G(GMPFLD(+I)),U)="@":"",1:$P($G(GMPFLD(+I)),U))
"RTN","GMPLSAVE",125,0)
 S ^AUPNPROB(DA,1)=DATA
"RTN","GMPLSAVE",126,0)
 ;   Set Node 800
"RTN","GMPLSAVE",127,0)
 I $S($L($P($G(GMPFLD(80001)),U)):1,$L($P($G(GMPFLD(80003)),U)):1,$L($P($G(GMPFLD(80004)),U)):1,$L($P($G(GMPFLD(80005)),U)):1,1:0) D
"RTN","GMPLSAVE",128,0)
 . I $P($G(GMPFLD(.01)),U)=$P($$NOS^GMPLX(+GMPFLD(80202),+GMPFLD(80201)),U) S GMPFLD(80005)="1^PENDING"
"RTN","GMPLSAVE",129,0)
 . S DATA=$P($G(GMPFLD(80001)),U)_U_$P($G(GMPFLD(80002)),U)_U_$P($G(GMPFLD(80003)),U)_U_$P($G(GMPFLD(80004)),U)_U_$P($G(GMPFLD(80005)),U)
"RTN","GMPLSAVE",130,0)
 . S ^AUPNPROB(DA,800)=DATA
"RTN","GMPLSAVE",131,0)
 ;   Set Node 801
"RTN","GMPLSAVE",132,0)
 I $S($L($P($G(GMPFLD(80101)),U)):1,$L($P($G(GMPFLD(80102)),U)):1,1:0) D
"RTN","GMPLSAVE",133,0)
 . S DATA=$P($G(GMPFLD(80101)),U)_U_$P($G(GMPFLD(80102)),U)
"RTN","GMPLSAVE",134,0)
 . S ^AUPNPROB(DA,801)=DATA
"RTN","GMPLSAVE",135,0)
 ;   Set Node 802
"RTN","GMPLSAVE",136,0)
 I $S($L($P($G(GMPFLD(80201)),U)):1,$L($P($G(GMPFLD(80202)),U)):1,1:0) D
"RTN","GMPLSAVE",137,0)
 . S DATA=$P($G(GMPFLD(80201)),U)_U_$P($G(GMPFLD(80202)),U)
"RTN","GMPLSAVE",138,0)
 . S ^AUPNPROB(DA,802)=DATA
"RTN","GMPLSAVE",139,0)
 ;   Handle multiple ICDs
"RTN","GMPLSAVE",140,0)
 D COEXPRS(DA,GMPICD)
"RTN","GMPLSAVE",141,0)
 ;   Set X-Refs
"RTN","GMPLSAVE",142,0)
 S DIK="^AUPNPROB(",(APCDLOOK,APCDALVR)=1 D IX1^DIK
"RTN","GMPLSAVE",143,0)
 I $D(GMPFLD(10,"NEW"))>9 S GMPIFN=DA D NEWNOTE
"RTN","GMPLSAVE",144,0)
 I (GMPICD=$P($$NOS^GMPLX(+GMPFLD(80202),+GMPFLD(80201)),U,2)),(+$P($G(GMPFLD(80001)),U)>0) D NTRTBULL(.GMPBULL,$P(GMPFLD(1.01),U,2),$P($G(GMPFLD(80001)),U,2),$G(GMPSRCH))
"RTN","GMPLSAVE",145,0)
 ; broadcast event
"RTN","GMPLSAVE",146,0)
 N DFN S GMPIFN=DA,DFN=+GMPDFN
"RTN","GMPLSAVE",147,0)
 S X=+$O(^ORD(101,"B","GMPL EVENT",0))_";ORD(101," D:X EN1^XQOR
"RTN","GMPLSAVE",148,0)
 Q
"RTN","GMPLSAVE",149,0)
 ;
"RTN","GMPLSAVE",150,0)
NEWPROB(ICD,DFN) ; Creates New Problem Entry in file #9000011
"RTN","GMPLSAVE",151,0)
 N I,HDR,LAST,TOTAL,DA
"RTN","GMPLSAVE",152,0)
 L +^AUPNPROB(0):1 I '$T D  Q -1
"RTN","GMPLSAVE",153,0)
 . W !!,"Someone else is currently editing this file."
"RTN","GMPLSAVE",154,0)
 . W !,"Please try again later.",!
"RTN","GMPLSAVE",155,0)
 S HDR=$G(^AUPNPROB(0)) Q:HDR="" -1
"RTN","GMPLSAVE",156,0)
 S LAST=$P(HDR,U,3),TOTAL=$P(HDR,U,4)
"RTN","GMPLSAVE",157,0)
 F I=(LAST+1):1 Q:'$D(^AUPNPROB(I,0))
"RTN","GMPLSAVE",158,0)
 S DA=I,^AUPNPROB(DA,0)=ICD_U_DFN
"RTN","GMPLSAVE",159,0)
 S ^AUPNPROB("B",ICD,DA)="",^AUPNPROB("AC",DFN,DA)=""
"RTN","GMPLSAVE",160,0)
 S $P(^AUPNPROB(0),U,3,4)=DA_U_(TOTAL+1) L -^AUPNPROB(0)
"RTN","GMPLSAVE",161,0)
 Q DA
"RTN","GMPLSAVE",162,0)
 ;
"RTN","GMPLSAVE",163,0)
NEWNOTE ; Creates New Note Entries for Problem
"RTN","GMPLSAVE",164,0)
 ;   Requires GMPIFN   Pointer to Problem
"RTN","GMPLSAVE",165,0)
 ;            GMPROV   Current Provider
"RTN","GMPLSAVE",166,0)
 ;            GMPVAMC  Facility
"RTN","GMPLSAVE",167,0)
 N HDR,LAST,TOTAL,I,FAC,NIFN
"RTN","GMPLSAVE",168,0)
 L +^AUPNPROB(GMPIFN,11):1 I '$T Q
"RTN","GMPLSAVE",169,0)
 S FAC=+$O(^AUPNPROB(GMPIFN,11,"B",GMPVAMC,0)) I 'FAC D
"RTN","GMPLSAVE",170,0)
 . S:'$D(^AUPNPROB(GMPIFN,11,0)) ^(0)="^9000011.11PA^^"
"RTN","GMPLSAVE",171,0)
 . S HDR=^AUPNPROB(GMPIFN,11,0),LAST=$P(HDR,U,3),TOTAL=$P(HDR,U,4)
"RTN","GMPLSAVE",172,0)
 . F I=(LAST+1):1 Q:'$D(^AUPNPROB(GMPIFN,11,I,0))
"RTN","GMPLSAVE",173,0)
 . S ^AUPNPROB(GMPIFN,11,I,0)=GMPVAMC,^AUPNPROB(GMPIFN,11,"B",GMPVAMC,I)=""
"RTN","GMPLSAVE",174,0)
 . S FAC=I,$P(^AUPNPROB(GMPIFN,11,0),U,3,4)=FAC_U_(TOTAL+1)
"RTN","GMPLSAVE",175,0)
 I FAC'>0 G NNQ
"RTN","GMPLSAVE",176,0)
NN1 ; Get New Note
"RTN","GMPLSAVE",177,0)
 S:'$D(^AUPNPROB(GMPIFN,11,FAC,11,0)) ^(0)="^9000011.1111IA^^"
"RTN","GMPLSAVE",178,0)
 S HDR=^AUPNPROB(GMPIFN,11,FAC,11,0),LAST=$P(HDR,U,3),TOTAL=$P(HDR,U,4)
"RTN","GMPLSAVE",179,0)
 F I=(LAST+1):1 Q:'$D(^AUPNPROB(GMPIFN,11,FAC,11,I,0))
"RTN","GMPLSAVE",180,0)
 S NIFN=I
"RTN","GMPLSAVE",181,0)
 F I=0:0 S I=$O(GMPFLD(10,"NEW",I)) Q:I'>0  D
"RTN","GMPLSAVE",182,0)
 . S ^AUPNPROB(GMPIFN,11,FAC,11,NIFN,0)=NIFN_"^^"_GMPFLD(10,"NEW",I)_"^A^"_DT_U_+$G(GMPROV)
"RTN","GMPLSAVE",183,0)
 . S ^AUPNPROB(GMPIFN,11,FAC,11,"B",NIFN,NIFN)=""
"RTN","GMPLSAVE",184,0)
 . S TOTAL=TOTAL+1,LAST=NIFN,NIFN=NIFN+1
"RTN","GMPLSAVE",185,0)
 S $P(^AUPNPROB(GMPIFN,11,FAC,11,0),U,3,4)=LAST_U_TOTAL
"RTN","GMPLSAVE",186,0)
NNQ ; Quit Getting New Notes
"RTN","GMPLSAVE",187,0)
 L -^AUPNPROB(GMPIFN,11)
"RTN","GMPLSAVE",188,0)
 Q
"RTN","GMPLSAVE",189,0)
 ;
"RTN","GMPLSAVE",190,0)
NEXTNMBR(DFN,VAMC) ; Returns Next Available Problem Number
"RTN","GMPLSAVE",191,0)
 N I,J,NUM S NUM=1,I="" I '$D(^AUPNPROB("AA",DFN,VAMC)) Q NUM
"RTN","GMPLSAVE",192,0)
 F  S I=$O(^AUPNPROB("AA",DFN,VAMC,I)) Q:I=""  S J=$E(I,2,999),NUM=+J
"RTN","GMPLSAVE",193,0)
 S NUM=NUM+1
"RTN","GMPLSAVE",194,0)
 Q NUM
"RTN","GMPLSAVE",195,0)
NTRTBULL(GMPY,GMPTERM,GMPSCT,GMPSRCH) ; Send NTRT Request bulletin to NTRT mailgroup
"RTN","GMPLSAVE",196,0)
 N GMPSITE,GMPSVC,GMPUSER,GMPWRAP,XMBNM,XMDUZ,XMY,XMB,XMZ S GMPSITE=$$SITE^VASITE
"RTN","GMPLSAVE",197,0)
 I '$L(GMPTERM) S GMPY="0^Empty String - a valid term must be sent." Q
"RTN","GMPLSAVE",198,0)
 I '+$G(DUZ)!'$D(^VA(200,+$G(DUZ))) S GMPY="0^A valid user must be identified." Q
"RTN","GMPLSAVE",199,0)
 I '+$G(GMPSCT) S GMPSCT="N/A"
"RTN","GMPLSAVE",200,0)
 D USERINFO^XUSRB2(.GMPUSER) S GMPSVC=$G(GMPUSER(5))
"RTN","GMPLSAVE",201,0)
 S XMB="GMPL PROBLEM NTRT BULLETIN"
"RTN","GMPLSAVE",202,0)
 S XMDUZ="GMPL PROBLEM NTRT BULLETIN"
"RTN","GMPLSAVE",203,0)
 S XMY("G.PROBLEM LIST NTRT@aadomain.ext")=""
"RTN","GMPLSAVE",204,0)
 S GMPWRAP=$$WRAP^GMPLX1(GMPTERM,53)
"RTN","GMPLSAVE",205,0)
 S XMB(1)=GMPTERM
"RTN","GMPLSAVE",206,0)
 S XMB(2)=GMPSCT
"RTN","GMPLSAVE",207,0)
 S XMB(3)=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","GMPLSAVE",208,0)
 S XMB(4)=$$FMTE^XLFDT($E(($$NOW^XLFDT),1,12),2)
"RTN","GMPLSAVE",209,0)
 S XMB(5)=GMPSVC
"RTN","GMPLSAVE",210,0)
 S XMB(6)=$P(GMPSITE,U,2)_" ("_$P(GMPSITE,U,3)_")"
"RTN","GMPLSAVE",211,0)
 S XMB(7)=$G(GMPSRCH)
"RTN","GMPLSAVE",212,0)
 D ^XMB,KILL^XM S GMPY=1
"RTN","GMPLSAVE",213,0)
 Q
"RTN","GMPLSAVE",214,0)
COEXPRS(GMPDA,GMPICD) ; File multiple ICDs
"RTN","GMPLSAVE",215,0)
 N GMPC,GMPI,GMPN,GMPJ,GMPORIG,NOW,GMPOCNT,GMPNCNT,CODSYS S NOW=$$NOW^XLFDT
"RTN","GMPLSAVE",216,0)
 ; Initialize CODSYS to "ICD" when ICD-10-CM is implemented, new codes will get "10D"
"RTN","GMPLSAVE",217,0)
 S CODSYS=$$SAB^ICDEX(+$$CODECS^ICDEX($P(GMPICD,"/"),80,DT),DT)
"RTN","GMPLSAVE",218,0)
 ; Merge previous entries into local GMPORIG array
"RTN","GMPLSAVE",219,0)
 I $D(^AUPNPROB(GMPDA,803)) M GMPORIG=^AUPNPROB(GMPDA,803)
"RTN","GMPLSAVE",220,0)
 ; If not sparce ICD string, remove previous entries
"RTN","GMPLSAVE",221,0)
 S GMPNCNT=+$P($G(^AUPNPROB(GMPDA,803,0)),U,4)
"RTN","GMPLSAVE",222,0)
 I '$$SPRCICD(GMPICD) D
"RTN","GMPLSAVE",223,0)
 . N GMPLFDA
"RTN","GMPLSAVE",224,0)
 . F GMPJ=1:1:GMPNCNT D
"RTN","GMPLSAVE",225,0)
 . . S GMPLFDA(9000011.803,""_GMPJ_","_GMPDA_",",.01)="@"
"RTN","GMPLSAVE",226,0)
 . . D FILE^DIE("","GMPLFDA")
"RTN","GMPLSAVE",227,0)
 ; Update sub-file
"RTN","GMPLSAVE",228,0)
 S GMPN=$L(GMPICD,"/")-1
"RTN","GMPLSAVE",229,0)
 F GMPI=1:1:GMPN D
"RTN","GMPLSAVE",230,0)
 . N GMPCODE,GMPD30,GMPNOS,GMPFDA,Y,GMPDT S GMPNOS=$$NOS^GMPLX(CODSYS)
"RTN","GMPLSAVE",231,0)
 . S GMPCODE=$P(GMPICD,"/",(GMPI+1)) Q:(GMPCODE="")
"RTN","GMPLSAVE",232,0)
 . S GMPD30=$G(^AUPNPROB(GMPDA,803,GMPI,0))
"RTN","GMPLSAVE",233,0)
 . I (GMPCODE=$P(GMPNOS,U,2)),($P(GMPD30,U)]""),($P(GMPD30,U)'=$P(GMPNOS,U,2)) Q
"RTN","GMPLSAVE",234,0)
 . S Y=DT D DD^%DT S GMPDT=$G(Y)
"RTN","GMPLSAVE",235,0)
 . S GMPFDA(9000011.803,"+2,"_GMPDA_",",.01)=GMPCODE
"RTN","GMPLSAVE",236,0)
 . S GMPFDA(9000011.803,"+2,"_GMPDA_",",.02)=CODSYS
"RTN","GMPLSAVE",237,0)
 . S GMPFDA(9000011.803,"+2,"_GMPDA_",",.03)=GMPDT
"RTN","GMPLSAVE",238,0)
 . D UPDATE^DIE("E","GMPFDA")
"RTN","GMPLSAVE",239,0)
 I '$D(GMPORIG) Q
"RTN","GMPLSAVE",240,0)
 S GMPOCNT=+$P($G(GMPORIG(0)),U,4)
"RTN","GMPLSAVE",241,0)
 ; Iterate through GMPORIG and audit changes
"RTN","GMPLSAVE",242,0)
 S GMPI=0 F  S GMPI=$O(GMPORIG(GMPI)) Q:+GMPI'>0  D
"RTN","GMPLSAVE",243,0)
 . N CHANGE,OLD0,NEW0
"RTN","GMPLSAVE",244,0)
 . S OLD0=$G(GMPORIG(GMPI,0)),NEW0=$G(^AUPNPROB(GMPDA,803,GMPI,0))
"RTN","GMPLSAVE",245,0)
 . I $P(NEW0,U)=$P(OLD0,U) Q  ; no substantive change change
"RTN","GMPLSAVE",246,0)
 . I NEW0'="" S CHANGE=GMPDA_"^302^"_NOW_U_DUZ_U_$P(OLD0,U)_U_$P(NEW0,U)_"^SNOMED CT Concept re-mapped by Enterprise Terminology Service^"_+$G(GMPROV)
"RTN","GMPLSAVE",247,0)
 . E  S CHANGE=GMPDA_"^302^"_NOW_U_DUZ_U_$P(OLD0,U)_U_"^Deleted Secondary Dx for SNOMED CT Concept^"_+$G(GMPROV)
"RTN","GMPLSAVE",248,0)
 . D AUDIT^GMPLX(CHANGE,OLD0)
"RTN","GMPLSAVE",249,0)
 I GMPNCNT>GMPOCNT D
"RTN","GMPLSAVE",250,0)
 . S GMPI=GMPOCNT
"RTN","GMPLSAVE",251,0)
 . F  S GMPI=$O(^AUPNPROB(GMPDA,803,GMPI)) Q:+GMPI'>0  D
"RTN","GMPLSAVE",252,0)
 . . N NEW0,CHANGE S NEW0=$G(^AUPNPROB(GMPDA,803,GMPI,0))
"RTN","GMPLSAVE",253,0)
 . . S CHANGE=GMPDA_"^302^"_NOW_U_DUZ_U_U_$P(NEW0,U)_"^Added as Secondary Dx for SNOMED CT Concept^"_+$G(GMPROV)
"RTN","GMPLSAVE",254,0)
 . . D AUDIT^GMPLX(CHANGE,"")
"RTN","GMPLSAVE",255,0)
 Q
"RTN","GMPLSAVE",256,0)
SPRCICD(GMPICD) ; Is ICD string sparce (i.e., called from SDS API w/order > 2)?
"RTN","GMPLSAVE",257,0)
 N GMPI,GMPY S GMPY=0
"RTN","GMPLSAVE",258,0)
 F GMPI=2:1:$L(GMPICD,"/") I $S($P(GMPICD,"/",GMPI)="":1,$P(GMPICD,"/",GMPI)=$P($$NOS^GMPLX,U,2):1,1:0) S GMPY=1
"RTN","GMPLSAVE",259,0)
 Q GMPY
"RTN","GMPLY47")
0^27^B14338538
"RTN","GMPLY47",1,0)
GMPLY47 ;ISL/TC - Post-install for GMPL*2.0*47 ;12/21/15  13:39
"RTN","GMPLY47",2,0)
 ;;2.0;Problem List;**47**;Aug 25,1994;Build 58
"RTN","GMPLY47",3,0)
 ;
"RTN","GMPLY47",4,0)
 ;===========================================
"RTN","GMPLY47",5,0)
 ; INDEXD^PXRMDIEV    ICR #6059
"RTN","GMPLY47",6,0)
 ;
"RTN","GMPLY47",7,0)
CACRMTA ;Create the auxillary cross-reference for Mapping Targets multiple.
"RTN","GMPLY47",8,0)
 N MSG,NAME,RESULT,XREF
"RTN","GMPLY47",9,0)
 D BMES^XPDUTL("Creating Problem List Mapping Targets auxillary cross-reference.")
"RTN","GMPLY47",10,0)
 S XREF("FILE")=9000011
"RTN","GMPLY47",11,0)
 S XREF("ROOT FILE")=9000011
"RTN","GMPLY47",12,0)
 S XREF("TYPE")="MU"
"RTN","GMPLY47",13,0)
 S XREF("SHORT DESCR")="Clinical Reminders Index for Mapping Targets code lookup."
"RTN","GMPLY47",14,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","GMPLY47",15,0)
 S XREF("DESCR",2)="all patients with a particular Mapping Target code and one for"
"RTN","GMPLY47",16,0)
 S XREF("DESCR",3)="finding all the Mapping Target codes a patient has. The indexes are"
"RTN","GMPLY47",17,0)
 S XREF("DESCR",4)="stored in the Clinical Reminders Index global as:"
"RTN","GMPLY47",18,0)
 S XREF("DESCR",5)=" ^PXRMINDX(9000011,CODESYS,""ISPP"",CODE,STATUS,PRIORITY,DFN,DLM,DAS)"
"RTN","GMPLY47",19,0)
 S XREF("DESCR",6)=" ^PXRMINDX(9000011,CODESYS,""PSPI"",DFN,STATUS,PRIORITY,CODE,DLM,DAS)"
"RTN","GMPLY47",20,0)
 S XREF("DESCR",7)="respectively."
"RTN","GMPLY47",21,0)
 S XREF("DESCR",8)=" "
"RTN","GMPLY47",22,0)
 S XREF("DESCR",9)="CODESYS is the standard three-character abbreviation for the coding system."
"RTN","GMPLY47",23,0)
 S XREF("DESCR",10)="STATUS can be ""A"" for active or ""I"" for inactive. PRIORITY"
"RTN","GMPLY47",24,0)
 S XREF("DESCR",11)="can be ""A"" for acute or ""C"" for chronic. If PRIORITY is"
"RTN","GMPLY47",25,0)
 S XREF("DESCR",12)="missing, then a ""U"" will be stored in the Index. For"
"RTN","GMPLY47",26,0)
 S XREF("DESCR",13)="Problems whose PRIORITY is ""C"", Clinical Reminders uses"
"RTN","GMPLY47",27,0)
 S XREF("DESCR",14)="today's date for the date of the Problem. In all other"
"RTN","GMPLY47",28,0)
 S XREF("DESCR",15)="cases, Clinical Reminders uses DLM, where DLM is the Date"
"RTN","GMPLY47",29,0)
 S XREF("DESCR",16)="Last Modified. When Problems are ""removed"", then CONDITION"
"RTN","GMPLY47",30,0)
 S XREF("DESCR",17)="is set to ""H"" for hidden. Hidden Problems are not indexed."
"RTN","GMPLY47",31,0)
 S XREF("DESCR",18)="For complete details, see the Clinical Reminders Index"
"RTN","GMPLY47",32,0)
 S XREF("DESCR",19)="Technical Guide/Programmer's Manual."
"RTN","GMPLY47",33,0)
 S XREF("DESCR",20)=""
"RTN","GMPLY47",34,0)
 S XREF("DESCR",21)="This cross-reference is based on the fields DATE LAST"
"RTN","GMPLY47",35,0)
 S XREF("DESCR",22)="MODIFIED, STATUS, PRIORITY, and CONDITION because the first"
"RTN","GMPLY47",36,0)
 S XREF("DESCR",23)="three are Index subscripts Problems whose CONDITION equals"
"RTN","GMPLY47",37,0)
 S XREF("DESCR",24)="HIDDEN are not indexed."
"RTN","GMPLY47",38,0)
 ;
"RTN","GMPLY47",39,0)
 S XREF("EXECUTION")="R"
"RTN","GMPLY47",40,0)
 S XREF("ACTIVITY")="IR"
"RTN","GMPLY47",41,0)
 S XREF("VAL",1)=.03
"RTN","GMPLY47",42,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","GMPLY47",43,0)
 S XREF("VAL",2)=.12
"RTN","GMPLY47",44,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","GMPLY47",45,0)
 S XREF("VAL",3)=1.14
"RTN","GMPLY47",46,0)
 S XREF("VAL",4)=1.02
"RTN","GMPLY47",47,0)
 ;
"RTN","GMPLY47",48,0)
 S XREF("NAME")="ACRMTA"
"RTN","GMPLY47",49,0)
 S XREF("SET")="D SPROBMTA^GMPLPXRM(.X,.DA)"
"RTN","GMPLY47",50,0)
 S XREF("KILL")="D KPROBMTA^GMPLPXRM(.X,.DA)"
"RTN","GMPLY47",51,0)
 ;Remove any existing cross-references before creating the new one.
"RTN","GMPLY47",52,0)
 D DELIXN^DDMOD(9000011,"ACRMTA","","MSG")
"RTN","GMPLY47",53,0)
 K MSG
"RTN","GMPLY47",54,0)
 D CREIXN^DDMOD(.XREF,"",.RESULT,"","MSG")
"RTN","GMPLY47",55,0)
 Q
"RTN","GMPLY47",56,0)
 ;
"RTN","GMPLY47",57,0)
POST ; Post-install subroutine
"RTN","GMPLY47",58,0)
 ;Create the new cross-reference
"RTN","GMPLY47",59,0)
 D CACRMTA
"RTN","GMPLY47",60,0)
 ;Call Reminders reindexing API to clean up any ACRMT indexes that didn't get deleted appropriately.
"RTN","GMPLY47",61,0)
 D REINDEX
"RTN","GMPLY47",62,0)
 Q
"RTN","GMPLY47",63,0)
 ;
"RTN","GMPLY47",64,0)
REINDEX ;Rebuild the Problem List portion of the Clinical Reminders Index.
"RTN","GMPLY47",65,0)
 N TEXT,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","GMPLY47",66,0)
 S ZTRTN="INDEX^GMPLY47"
"RTN","GMPLY47",67,0)
 S ZTDESC="Problem List Clinical Reminders Index rebuild"
"RTN","GMPLY47",68,0)
 S ZTDTH=$H
"RTN","GMPLY47",69,0)
 S ZTIO=""
"RTN","GMPLY47",70,0)
 D ^%ZTLOAD
"RTN","GMPLY47",71,0)
 S TEXT(1)="Problem List Clinical Reminders Index rebuild queued."
"RTN","GMPLY47",72,0)
 S TEXT(2)="The task number is "_ZTSK_"."
"RTN","GMPLY47",73,0)
 D MES^XPDUTL(.TEXT)
"RTN","GMPLY47",74,0)
 Q
"RTN","GMPLY47",75,0)
INDEX ;Disable reminder evaluations prior to reindexing.
"RTN","GMPLY47",76,0)
 K ^PXRMINDX(9000011,"DATE BUILT")
"RTN","GMPLY47",77,0)
 D INDEXD^PXRMDIEV(9000011) ;disable/re-eanble evaluations
"RTN","GMPLY47",78,0)
 D INDEX^GMPLPXRM
"RTN","GMPLY47",79,0)
 Q
"VER")
8.0^22.0
**END**
**END**
