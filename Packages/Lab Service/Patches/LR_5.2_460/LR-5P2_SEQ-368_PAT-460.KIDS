Released LR*5.2*460 SEQ #368
Extracted from mail message
**KIDS**:LR*5.2*460^

**INSTALL NAME**
LR*5.2*460
"BLD",10042,0)
LR*5.2*460^LAB SERVICE^0^3150930^y
"BLD",10042,1,0)
^^4^4^3150930^^
"BLD",10042,1,1,0)
This is a general maintenance patch for the laboratory
"BLD",10042,1,2,0)
package by the Vista Maintenance team that addresses
"BLD",10042,1,3,0)
issues with the collection times on the order report, CPT
"BLD",10042,1,4,0)
code entry in AP, and the SNOMED extract.
"BLD",10042,4,0)
^9.64PA^^
"BLD",10042,6.3)
1
"BLD",10042,"ABPKG")
n
"BLD",10042,"KRN",0)
^9.67PA^779.2^20
"BLD",10042,"KRN",.4,0)
.4
"BLD",10042,"KRN",.401,0)
.401
"BLD",10042,"KRN",.402,0)
.402
"BLD",10042,"KRN",.403,0)
.403
"BLD",10042,"KRN",.5,0)
.5
"BLD",10042,"KRN",.84,0)
.84
"BLD",10042,"KRN",3.6,0)
3.6
"BLD",10042,"KRN",3.8,0)
3.8
"BLD",10042,"KRN",9.2,0)
9.2
"BLD",10042,"KRN",9.8,0)
9.8
"BLD",10042,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",10042,"KRN",9.8,"NM",1,0)
LROW2P^^0^B10686635
"BLD",10042,"KRN",9.8,"NM",2,0)
LRCAPES^^0^B87368122
"BLD",10042,"KRN",9.8,"NM",3,0)
LRSRVR6^^0^B37896776
"BLD",10042,"KRN",9.8,"NM","B","LRCAPES",2)

"BLD",10042,"KRN",9.8,"NM","B","LROW2P",1)

"BLD",10042,"KRN",9.8,"NM","B","LRSRVR6",3)

"BLD",10042,"KRN",19,0)
19
"BLD",10042,"KRN",19.1,0)
19.1
"BLD",10042,"KRN",101,0)
101
"BLD",10042,"KRN",409.61,0)
409.61
"BLD",10042,"KRN",771,0)
771
"BLD",10042,"KRN",779.2,0)
779.2
"BLD",10042,"KRN",870,0)
870
"BLD",10042,"KRN",8989.51,0)
8989.51
"BLD",10042,"KRN",8989.52,0)
8989.52
"BLD",10042,"KRN",8994,0)
8994
"BLD",10042,"KRN","B",.4,.4)

"BLD",10042,"KRN","B",.401,.401)

"BLD",10042,"KRN","B",.402,.402)

"BLD",10042,"KRN","B",.403,.403)

"BLD",10042,"KRN","B",.5,.5)

"BLD",10042,"KRN","B",.84,.84)

"BLD",10042,"KRN","B",3.6,3.6)

"BLD",10042,"KRN","B",3.8,3.8)

"BLD",10042,"KRN","B",9.2,9.2)

"BLD",10042,"KRN","B",9.8,9.8)

"BLD",10042,"KRN","B",19,19)

"BLD",10042,"KRN","B",19.1,19.1)

"BLD",10042,"KRN","B",101,101)

"BLD",10042,"KRN","B",409.61,409.61)

"BLD",10042,"KRN","B",771,771)

"BLD",10042,"KRN","B",779.2,779.2)

"BLD",10042,"KRN","B",870,870)

"BLD",10042,"KRN","B",8989.51,8989.51)

"BLD",10042,"KRN","B",8989.52,8989.52)

"BLD",10042,"KRN","B",8994,8994)

"BLD",10042,"QUES",0)
^9.62^^
"BLD",10042,"REQB",0)
^9.611^3^3
"BLD",10042,"REQB",1,0)
LR*5.2*338^2
"BLD",10042,"REQB",2,0)
LR*5.2*448^2
"BLD",10042,"REQB",3,0)
LR*5.2*425^2
"BLD",10042,"REQB","B","LR*5.2*338",1)

"BLD",10042,"REQB","B","LR*5.2*425",3)

"BLD",10042,"REQB","B","LR*5.2*448",2)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950304
"PKG",26,22,1,"PAH",1,0)
460^3150930
"PKG",26,22,1,"PAH",1,1,0)
^^4^4^3150930
"PKG",26,22,1,"PAH",1,1,1,0)
This is a general maintenance patch for the laboratory
"PKG",26,22,1,"PAH",1,1,2,0)
package by the Vista Maintenance team that addresses
"PKG",26,22,1,"PAH",1,1,3,0)
issues with the collection times on the order report, CPT
"PKG",26,22,1,"PAH",1,1,4,0)
code entry in AP, and the SNOMED extract.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","LRCAPES")
0^2^B87368122^B87234278
"RTN","LRCAPES",1,0)
LRCAPES ;DALOI/FHS/KLL -MANUAL PCE CPT WORKLOAD CAPTURE ;11/18/11  15:21
"RTN","LRCAPES",2,0)
 ;;5.2;LAB SERVICE;**274,259,349,308,350,448,460**;Sep 27, 1994;Build 1
"RTN","LRCAPES",3,0)
 ;
"RTN","LRCAPES",4,0)
 ;Reference to $$GET^XUA4A72 - Supported by DBIA #1625
"RTN","LRCAPES",5,0)
EN ;
"RTN","LRCAPES",6,0)
 D EN^LRCAPES1
"RTN","LRCAPES",7,0)
 Q
"RTN","LRCAPES",8,0)
EX1 ;Parse the read entry
"RTN","LRCAPES",9,0)
 N LRXY,LRACTV,LRXY1,LRXY2,LRD2,LRNR,LRWL2,LRINA2,LRREL2,LRQ
"RTN","LRCAPES",10,0)
 Q:'$L($G(LRX))
"RTN","LRCAPES",11,0)
 ;Edit on 5-digit code entry
"RTN","LRCAPES",12,0)
 I LRX?5N,'$D(^TMP("LR",$J,"AK",LRX))#2 D  Q
"RTN","LRCAPES",13,0)
 .S LRXY=$$CPT^ICPTCOD(LRX,DT)
"RTN","LRCAPES",14,0)
 .D CHKCPT^LRCAPES1
"RTN","LRCAPES",15,0)
 .;Don't pass to PCE if CPT is missing or inactive in #81 or #64
"RTN","LRCAPES",16,0)
 .Q:'$P(LRXY,U,7)!(LRNR)
"RTN","LRCAPES",17,0)
 .;If CPT is inactive in #64 and another active CPT exists, replace
"RTN","LRCAPES",18,0)
 .;      the inactive with the active CPT
"RTN","LRCAPES",19,0)
 .I LRACTV D  Q
"RTN","LRCAPES",20,0)
 ..S LRXY=$$CPT^ICPTCOD(LRXY2,DT)
"RTN","LRCAPES",21,0)
 ..S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",22,0)
 ..S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_U_LRWL2_U_$P(LRXY,U,3)_U
"RTN","LRCAPES",23,0)
 ..S LRRF64=$S($G(LRRF64):LRRF64_LRXY1_"\"_LRXY2_",",1:LRXY1_"\"_LRXY2_",")
"RTN","LRCAPES",24,0)
 ..;If CPT passes edits, continue
"RTN","LRCAPES",25,0)
 .S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",26,0)
 .S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_"^^"_$P(LRXY,U,3)_U
"RTN","LRCAPES",27,0)
 ;Edit on ES Display Order # entry
"RTN","LRCAPES",28,0)
 S LRQ="^TMP(""LR"","_$J_",""AK"","_LRX_")"
"RTN","LRCAPES",29,0)
 S LRQ=$Q(@LRQ)
"RTN","LRCAPES",30,0)
 I LRX'=$QS(LRQ,4) S LRINVES=LRX Q 
"RTN","LRCAPES",31,0)
 S LRXY=$$CPT^ICPTCOD($QS(LRQ,6),DT)
"RTN","LRCAPES",32,0)
 D CHKCPT^LRCAPES1
"RTN","LRCAPES",33,0)
 Q:'$P(LRXY,U,7)!(LRNR)
"RTN","LRCAPES",34,0)
 ;If CPT is inactive in #64 and another active CPT exists, replace
"RTN","LRCAPES",35,0)
 ;      the inactive with the active CPT
"RTN","LRCAPES",36,0)
 I LRACTV D  Q
"RTN","LRCAPES",37,0)
 .S LRXY=$$CPT^ICPTCOD(LRXY2,DT)
"RTN","LRCAPES",38,0)
 .S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",39,0)
 .S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_U_LRWL2_U_$P(LRXY,U,3)_U
"RTN","LRCAPES",40,0)
 .S LRRF64=$S($G(LRRF64):LRRF64_LRXY1_"\"_LRXY2_",",1:LRXY1_"\"_LRXY2_",")
"RTN","LRCAPES",41,0)
 .;I CPT passes edits, continue
"RTN","LRCAPES",42,0)
 S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",43,0)
 S ^TMP("LR",$J,"LRLST",LRCNT)=$QS(LRQ,6)_U_@LRQ
"RTN","LRCAPES",44,0)
 Q
"RTN","LRCAPES",45,0)
END1 ;
"RTN","LRCAPES",46,0)
 D END S LREND=1
"RTN","LRCAPES",47,0)
 Q
"RTN","LRCAPES",48,0)
END ;
"RTN","LRCAPES",49,0)
 I $G(LRAA),$G(LRAD),$G(LRAN) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRCAPES",50,0)
 K:'$G(LRESCPT) ^TMP("LR",$J,"AK")
"RTN","LRCAPES",51,0)
 I $G(LRDEBUG) W !,"END ",! Q
"RTN","LRCAPES",52,0)
 Q
"RTN","LRCAPES",53,0)
WLN ;Interactive entry point
"RTN","LRCAPES",54,0)
 D KVA^VADPT
"RTN","LRCAPES",55,0)
 K DIC,DIR
"RTN","LRCAPES",56,0)
 K LREND,LRUID,DIC,DIR,LRVBY
"RTN","LRCAPES",57,0)
 K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",58,0)
 K LRAA,LRACC,LRAD,LRAN,LRDFN,LRDPF,LRIDT
"RTN","LRCAPES",59,0)
 K LRRB,LRSS,LRTIME,LRTREA,LRUID,LRWRD,PNM,SEX,SSN,AGE
"RTN","LRCAPES",60,0)
 S (LRAA,LRACC,LRAD,LRNOP,LRAN,LREND)=0,LRVBY=1,LRUID=""
"RTN","LRCAPES",61,0)
 S:'$G(LRPRO) LRPRO=DUZ
"RTN","LRCAPES",62,0)
 I '$G(LRESCPT) S LRVBY=$$SELBY^LRWU4("Select Accession By")
"RTN","LRCAPES",63,0)
 D:LRVBY=1 ^LRVERA D:LRVBY=2 UID^LRVERA
"RTN","LRCAPES",64,0)
 I 'LRVBY!(LRAA<1) D END S LREND=1 Q
"RTN","LRCAPES",65,0)
 S LRDFN=+$$GET1^DIQ(68.02,+$G(LRAN)_","_+$G(LRAD)_","_+$G(LRAA)_",",.01)
"RTN","LRCAPES",66,0)
 I 'LRDFN D END S LRNOP=1 D  Q
"RTN","LRCAPES",67,0)
 . W !?5,"This accession is corrupt",!
"RTN","LRCAPES",68,0)
LCK ;
"RTN","LRCAPES",69,0)
 L +^LRO(68,LRAA,1,LRAD,1,LRAN):10 I '$T D  Q
"RTN","LRCAPES",70,0)
 . W !?5,"Someone else is editing this accession",!
"RTN","LRCAPES",71,0)
 . S LRNOP=1
"RTN","LRCAPES",72,0)
 D PT^LRX
"RTN","LRCAPES",73,0)
 S LRUID=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",16)
"RTN","LRCAPES",74,0)
 S LRLLOCX=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",75,0)
 S LRSPECID="Acc #: "_$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",15,"E")
"RTN","LRCAPES",76,0)
 S:$L($G(LRUID)) LRSPECID=LRSPECID_"  UID: "_LRUID
"RTN","LRCAPES",77,0)
 S LREDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",9,"I")
"RTN","LRCAPES",78,0)
 I LREDT'?7N.E D  Q
"RTN","LRCAPES",79,0)
 . W !?5,"This accession does not have a Collection Date/Time",!
"RTN","LRCAPES",80,0)
 . W !?10,"CAN NOT PROCEED",!
"RTN","LRCAPES",81,0)
 . S LRNOP="6^Not Accessioned"
"RTN","LRCAPES",82,0)
 I '$G(LRIDT) S LRIDT=+$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",13.5,"I")
"RTN","LRCAPES",83,0)
 S LRCDT="Collection Date: "_$$FMTE^XLFDT(LREDT,1)
"RTN","LRCAPES",84,0)
 I '$L($G(LRSS)) S LRSS=$$GET1^DIQ(68,LRAA_",",.02,"I")
"RTN","LRCAPES",85,0)
 S LRDSSLOC=+$$GET1^DIQ(68,LRAA_",",.8,"I")
"RTN","LRCAPES",86,0)
 S LRDSSLOC=$S($G(LRDSSLOC):LRDSSLOC,1:LRDLOC)
"RTN","LRCAPES",87,0)
 D DEM^LRCAPES1
"RTN","LRCAPES",88,0)
PRO ;Get provider,patient/location information
"RTN","LRCAPES",89,0)
 S LREND=0
"RTN","LRCAPES",90,0)
 D
"RTN","LRCAPES",91,0)
 . N LRPRONM,DIR,DIRUT,DUOUT,X,Y
"RTN","LRCAPES",92,0)
 . S LRPRONM=$$GET1^DIQ(200,+$G(LRPRO),.01,"I")
"RTN","LRCAPES",93,0)
 . I $L(LRPRONM),$D(^VA(200,"AK.PROVIDER",LRPRONM,+$G(LRPRO)))#2,$$GET^XUA4A72(+$G(LRPRO),DT)>0 S DIR("B")=LRPRONM
"RTN","LRCAPES",94,0)
 . ;S DIR("A")="Releasing Pathologist"
"RTN","LRCAPES",95,0)
 . S DIR("A")="Provider"
"RTN","LRCAPES",96,0)
 . S LRPRO=0,DIR(0)="PO^200:ENMZ"
"RTN","LRCAPES",97,0)
 . S DIR("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$$GET^XUA4A72(+Y,DT)>0"
"RTN","LRCAPES",98,0)
 . D ^DIR
"RTN","LRCAPES",99,0)
 . I Y>1 S LRPRO=+Y
"RTN","LRCAPES",100,0)
 I '$G(LRPRO) D  D END1 Q
"RTN","LRCAPES",101,0)
 . W !?5,"No Active Provider Selected",!
"RTN","LRCAPES",102,0)
 . S LRNOP=1
"RTN","LRCAPES",103,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2 D  D END1 G WLN
"RTN","LRCAPES",104,0)
 . W !?5,"The accession is corrupt - missing zero node",!
"RTN","LRCAPES",105,0)
 . S LRNOP="7^Corrupt Accession"
"RTN","LRCAPES",106,0)
LOC ;Reporting Location
"RTN","LRCAPES",107,0)
 S LRNODE0=^LRO(68,LRAA,1,LRAD,1,LRAN,0)
"RTN","LRCAPES",108,0)
 S LRNOP=0
"RTN","LRCAPES",109,0)
 S (LRLLOCX,LRLLOC)=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",110,0)
 I $L(LRLLOC) S LRLLOC=+$$FIND1^DIC(44,"","OM",LRLLOC)
"RTN","LRCAPES",111,0)
ASKLOC ;Check to see if outpatient location
"RTN","LRCAPES",112,0)
 I '$D(^SC(+$G(LRLLOC),0))#2 D
"RTN","LRCAPES",113,0)
 . N DIR,X,Y
"RTN","LRCAPES",114,0)
 . S LRLLOC=""
"RTN","LRCAPES",115,0)
 . S DIR(0)="PO^44:AEZNMO",DIR("A")=" Ordering Location "
"RTN","LRCAPES",116,0)
 . D ^DIR
"RTN","LRCAPES",117,0)
 . I +Y<1 Q
"RTN","LRCAPES",118,0)
 . S LRLLOC=+Y
"RTN","LRCAPES",119,0)
 I '$G(LRLLOC) D END1 Q
"RTN","LRCAPES",120,0)
 S LRDSSID=+$$GET1^DIQ(44,+LRLLOC,8,"I") ;I 'LRDSSID S LRNOP="2^No Stop Code Number" Q
"RTN","LRCAPES",121,0)
 S LRNINS=$$GET1^DIQ(44,+LRLLOC,3,"I")
"RTN","LRCAPES",122,0)
 S LRNINS=$S(LRNINS:LRNINS,1:DUZ(2))
"RTN","LRCAPES",123,0)
 Q
"RTN","LRCAPES",124,0)
ES() ;Entry point for front end application.
"RTN","LRCAPES",125,0)
 N DFN,LRESCPT,LRDFN,LRLLOC,LRLLOCX,LRNINS,LRTST,LRENCDT,LRDUZ
"RTN","LRCAPES",126,0)
 K LRES,LRESCPT
"RTN","LRCAPES",127,0)
 S LRES=1
"RTN","LRCAPES",128,0)
ASK ; Option entry point - Check and setup PCE reporting variables
"RTN","LRCAPES",129,0)
 D EN^LRCAPES1
"RTN","LRCAPES",130,0)
 N X,Y,T1
"RTN","LRCAPES",131,0)
 S LREND=0
"RTN","LRCAPES",132,0)
 D ^LRPARAM Q:$G(LREND)
"RTN","LRCAPES",133,0)
 K ^TMP("LRPXAPI",$J),^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",134,0)
 S ^TMP("LR",$J,"LRLST")=$$FMADD^XLFDT(DT,2)_U_DT_U_"LAB ES CPT"
"RTN","LRCAPES",135,0)
 S:'$G(LRPKG) LRPKG=$O(^DIC(9.4,"B","LR",0))
"RTN","LRCAPES",136,0)
 S:'$G(LRPKG) LRPKG=$O(^DIC(9.4,"B","LAB SERVICE",0))
"RTN","LRCAPES",137,0)
PKG ;Check to see if Lab Package is installed
"RTN","LRCAPES",138,0)
 I '$G(LRPKG) D  D WKL Q
"RTN","LRCAPES",139,0)
 . W !?5,"LAB SERVICE PACKAGE is not loaded",!
"RTN","LRCAPES",140,0)
PCE ;Check to see if PCE is turned on
"RTN","LRCAPES",141,0)
 S X="PXAI" X ^%ZOSF("TEST") I '$T D:'$G(LRES)  D WKL Q
"RTN","LRCAPES",142,0)
 . W !?5,"PCE Is not installed",!
"RTN","LRCAPES",143,0)
 S LRPCEON=$$PKGON^VSIT("PX")
"RTN","LRCAPES",144,0)
 I '$G(LRES),'LRPCEON D  D WKL Q
"RTN","LRCAPES",145,0)
 . W !?5,"PCE is not turned on",!
"RTN","LRCAPES",146,0)
 S LRDLOC=+$$GET1^DIQ(69.9,"1,",.8,"I")
"RTN","LRCAPES",147,0)
OOS ;Check to see if the LRDLOC is an OOS location
"RTN","LRCAPES",148,0)
 I $G(LRES),$P($G(^SC(LRDLOC,0)),U)'["LAB DIV " D  D WKL Q
"RTN","LRCAPES",149,0)
 . W !?5,"DEFAULT LAB OOS LOCATION is not defined correctly",!
"RTN","LRCAPES",150,0)
 S LRESCPT=1
"RTN","LRCAPES",151,0)
 D:'$G(^TMP("LR",$J,"AK",0,1))'=DUZ_U_DT EN
"RTN","LRCAPES",152,0)
 I $G(LRES) Q $G(LRESCPT)
"RTN","LRCAPES",153,0)
LOOP ;
"RTN","LRCAPES",154,0)
 Q:$G(LREND)
"RTN","LRCAPES",155,0)
 F  D WLN Q:$G(LREND)  I '$G(LRNOP) D CPTEN Q:$G(LREND)
"RTN","LRCAPES",156,0)
 D CLEAN Q
"RTN","LRCAPES",157,0)
CPTEN ;Entry point from CPT API call
"RTN","LRCAPES",158,0)
WKL S (LRNOP,LREND)=0 D READ^LRCAPES1
"RTN","LRCAPES",159,0)
 D DIS^LRCAPES1
"RTN","LRCAPES",160,0)
 I '$O(^TMP("LR",$J,"LRLST",0)) D END Q
"RTN","LRCAPES",161,0)
LOAD ;Setup ^TMP("LRPXAPI" to load CPT workload
"RTN","LRCAPES",162,0)
 K LRXCPT,LRXTST,^TMP("LRPXAPI",$J)
"RTN","LRCAPES",163,0)
 S LRDUZ=LRPRO
"RTN","LRCAPES",164,0)
 I '$D(LRSN),'$D(LRSVDCDT) D
"RTN","LRCAPES",165,0)
 .S LRSN=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",4,"I")
"RTN","LRCAPES",166,0)
 .S LRSVDCDT=LRCDT
"RTN","LRCAPES",167,0)
 .S LRCDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",3,"I")
"RTN","LRCAPES",168,0)
 I '$G(LRESCPT) S LRNOP="3^PCE Workload Capture Not Setup"
"RTN","LRCAPES",169,0)
 I $G(LRNOP) D  D SENDWKL Q
"RTN","LRCAPES",170,0)
 . I '$D(LRQUIET) W !,$$CJ^XLFSTR("PCE Wkld Abort "_$P(LRNOP,U,2),IOM)
"RTN","LRCAPES",171,0)
 I $G(LRESCPT),'$G(LRNOP) D
"RTN","LRCAPES",172,0)
 . N AFTER812,D,D0,DDER,DI,DIC,DIG,DIH,DISL,DIV
"RTN","LRCAPES",173,0)
 . N I,LRACC,LRCNT,LRI,LRPCEN,PXALOOK,PXASUB,PXJ,PXJJ,LRCCT
"RTN","LRCAPES",174,0)
 . N SDT1,SPEL,SUBL,TYPEI,X,XPARSYS
"RTN","LRCAPES",175,0)
 . S LRTST=0
"RTN","LRCAPES",176,0)
 . F  S LRTST=$O(^TMP("LR",$J,"LRLST",LRTST)) Q:LRTST<1  D
"RTN","LRCAPES",177,0)
 . . S (LRNLTN,CPT)=+$G(^TMP("LR",$J,"LRLST",LRTST)),LRTSTP=$P(^(LRTST),U,2,99)
"RTN","LRCAPES",178,0)
 . . D SET^LRCAPPH1
"RTN","LRCAPES",179,0)
 . D ADDPREV
"RTN","LRCAPES",180,0)
SENDWKL ; Store LMIP workload
"RTN","LRCAPES",181,0)
 D SEND^LRCAPES1
"RTN","LRCAPES",182,0)
 L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRCAPES",183,0)
 S LRNOP=0
"RTN","LRCAPES",184,0)
 I $D(LRSVDCDT) S LRCDT=LRSVDCDT K LRSN,LRSVDCDT
"RTN","LRCAPES",185,0)
 Q
"RTN","LRCAPES",186,0)
ADDPREV ;Add CPT quantities from PCE to current totals
"RTN","LRCAPES",187,0)
 N LRSTR2,LRIEN2,LRPX,LRCPT,LRXX,LRCPT2,LRCPT1,LRX1,LRQ1,LRQ2,LRQT,LRCT
"RTN","LRCAPES",188,0)
 S LRSTR2=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE"))
"RTN","LRCAPES",189,0)
 Q:'LRSTR2
"RTN","LRCAPES",190,0)
 K LRVIS S LRVIS=""
"RTN","LRCAPES",191,0)
 S LRCT=$L(LRSTR2,";")-1,LRVIS=$P(LRSTR2,";",LRCT)
"RTN","LRCAPES",192,0)
 F LRPX=1:1 S LRIEN2=$P(LRSTR2,";",LRPX) Q:LRIEN2=""  D
"RTN","LRCAPES",193,0)
 .D GETCPT^PXAPIOE(LRIEN2,"LRCPT","ERR")
"RTN","LRCAPES",194,0)
 S LRXX=""
"RTN","LRCAPES",195,0)
 F  S LRXX=$O(LRCPT(LRXX)) Q:LRXX=""  D
"RTN","LRCAPES",196,0)
 .Q:$P(LRCPT(LRXX),"^",3)'=LRVIS
"RTN","LRCAPES",197,0)
 .S LRCPT2=""
"RTN","LRCAPES",198,0)
 .S LRCPT2=+$G(LRCPT(LRXX))
"RTN","LRCAPES",199,0)
 .D:LRCPT2
"RTN","LRCAPES",200,0)
 ..S (LRX1,LRQT)=0
"RTN","LRCAPES",201,0)
 ..F  S LRX1=$O(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1)) Q:LRX1=""!(LRQT)  D
"RTN","LRCAPES",202,0)
 ...S LRCPT1=+$G(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"PROCEDURE"))
"RTN","LRCAPES",203,0)
 ...I LRCPT1=LRCPT2 D
"RTN","LRCAPES",204,0)
 ....S LRQ1=$P(LRCPT(LRXX),"^",16)
"RTN","LRCAPES",205,0)
 ....S LRQ2=+$G(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"QTY"))
"RTN","LRCAPES",206,0)
 ....S ^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"QTY")=LRQ1+LRQ2
"RTN","LRCAPES",207,0)
 ....S LRQT=1
"RTN","LRCAPES",208,0)
 Q
"RTN","LRCAPES",209,0)
CLEAN ;Final Cleanup
"RTN","LRCAPES",210,0)
 K AFTER812,AGE,CPT,D,D0,DOB,DDER,DFN,DI,DIC,DIG,DIH,DIR,DIRUT
"RTN","LRCAPES",211,0)
 K DISL,DIRUT,DIU,DUOUT,DIV,DQ
"RTN","LRCAPES",212,0)
 K I,J,LRACC,LRCNT,LRI,POP,PXALOOK,PXASUB,PXJ,PXJJ
"RTN","LRCAPES",213,0)
 K SDT1,SPEL,SUBL,T1,TYPEI,X,XPARSYS
"RTN","LRCAPES",214,0)
 K ANS,CLN,CNT,FPRI,LRAA,LRAD,LRAN,LRANSX,LRANSY,LRCDT,LRCNT
"RTN","LRCAPES",215,0)
 K LRDFN,LRDPF,LRDLOC,LRDSSID,LRDSSLOC,LRDUZ,LREDT,LREND,LRES,LRESCPT
"RTN","LRCAPES",216,0)
 K LRIDT,LRIDIV,LRLLOC,LRLLOCX,LRLST,LRNINS,LRNLT,LRNLTN,LRNODE0,LRNOP,LROK
"RTN","LRCAPES",217,0)
 K LRPCEN,LRPCENON,LRPCEVSO,LRPKG,LRPRAC,LRPRO,LRRB,LRQ,LRSS,LRTREA,LRTST,LRURG
"RTN","LRCAPES",218,0)
 K LRSPECID,LRTSTP,LRUID,LRVBY
"RTN","LRCAPES",219,0)
 K LRVSITN,LRWRD,LRX,LRXCPT,LRXTST
"RTN","LRCAPES",220,0)
 K NODE,NODE0,PNM,SEX,SDFLAG,SSN,VA,X1,X2,X3
"RTN","LRCAPES",221,0)
 K ^TMP("LRMOD",$J)
"RTN","LRCAPES",222,0)
 K ^TMP("LR",$J,"AK"),^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",223,0)
 K ^TMP("LRPXAPI",$J)
"RTN","LRCAPES",224,0)
 D KVAR^VADPT
"RTN","LRCAPES",225,0)
 Q
"RTN","LRCAPES",226,0)
CPT(LRAA,LRAD,LRAN,LRPRO) ;AP Release entry point
"RTN","LRCAPES",227,0)
 ;LRAA=accession area, LRAD=accession date, LRAN=accession number
"RTN","LRCAPES",228,0)
 ;LRPRO=provider
"RTN","LRCAPES",229,0)
 N X,Y,I,LRI,LREDT,LRCDT,LRIDT,LRLLOCX,LRSPECID,DIC,LRNOP,LREND,LRES,LRDUZ
"RTN","LRCAPES",230,0)
 S (LRLLOCX,LRLLOC)=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",231,0)
 S DIC=44,DIC(0)="ONM",X=LRLLOC D ^DIC
"RTN","LRCAPES",232,0)
 I Y>1 S LRLLOC=+Y
"RTN","LRCAPES",233,0)
 I Y<1 D  Q:$G(LREND)
"RTN","LRCAPES",234,0)
 . S DIC(0)="AEZNM" D ^DIC
"RTN","LRCAPES",235,0)
 . I Y<1 S LRNOP="4^Not an outpatient location",LREND=1 Q
"RTN","LRCAPES",236,0)
 . S LRLLOC=+Y
"RTN","LRCAPES",237,0)
 ;KLL - set LRDSSLOC to LRDLOC, instead of LRLLOC to resolve location
"RTN","LRCAPES",238,0)
 ;      problem occurring in PCE
"RTN","LRCAPES",239,0)
 ;TAC - use accession area OOS location if one exists
"RTN","LRCAPES",240,0)
 S LRDSSLOC=+$$GET1^DIQ(68,LRAA_",",.8,"I")
"RTN","LRCAPES",241,0)
 S LRDSSLOC=$S($G(LRDSSLOC):LRDSSLOC,1:+$G(LRDLOC))
"RTN","LRCAPES",242,0)
 S LRDSSID=+$$GET1^DIQ(44,+LRLLOC,8,"I")
"RTN","LRCAPES",243,0)
 S LRNINS=$$GET1^DIQ(44,+LRLLOC,3,"I")
"RTN","LRCAPES",244,0)
 S LRNINS=$S(LRNINS:LRNINS,1:DUZ(2))
"RTN","LRCAPES",245,0)
 I '$G(LRIDT) S LRIDT=+$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",13.5,"I")
"RTN","LRCAPES",246,0)
 S LRUID=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",16)
"RTN","LRCAPES",247,0)
 S LRLLOCX=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",248,0)
 S LRSPECID="Acc #: "_$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",15,"E")
"RTN","LRCAPES",249,0)
 S:$L($G(LRUID)) LRSPECID=LRSPECID_"  UID: "_LRUID
"RTN","LRCAPES",250,0)
 S LREDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",9,"I")
"RTN","LRCAPES",251,0)
 I 'LREDT S LREDT=$$NOW^XLFDT
"RTN","LRCAPES",252,0)
 S LRCDT="Collection Date: "_$$FMTE^XLFDT(LREDT,1)
"RTN","LRCAPES",253,0)
 I '$G(LRESCPT) D  Q
"RTN","LRCAPES",254,0)
 . D EN^DDIOL("CPT workload is not activated","","!?20")
"RTN","LRCAPES",255,0)
 I $S('$G(LRAA):1,'$G(LRAD):1,'$G(LRAN):1,'$G(LRPRO):1,1:0) Q
"RTN","LRCAPES",256,0)
 I +$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))'=LRDFN Q
"RTN","LRCAPES",257,0)
 D CPTEN
"RTN","LRCAPES",258,0)
 Q
"RTN","LROW2P")
0^1^B10686635^B10671637
"RTN","LROW2P",1,0)
LROW2P ;SLC/TGA - PRINTS WARD COLLECT ORDER IN LAB ; 6/29/05 11:01am
"RTN","LROW2P",2,0)
 ;;5.2;LAB SERVICE;**100,121,338,460**;Sep 27, 1994;Build 1
"RTN","LROW2P",3,0)
 S ZTRTN="ENT^LROW2P",ZTIO=ION,ZTDTH=$H,ZTSAVE("LRSN")="",ZTSAVE("LRODT")="",ZTDESC="PRINTS WARD COLLECT ORDER" I ION]"" D ^%ZTLOAD
"RTN","LROW2P",4,0)
 K ZTSK,ZTRTN,ZTIO,ZTDTH,ZTSAVE,ZTDESC
"RTN","LROW2P",5,0)
 Q
"RTN","LROW2P",6,0)
ENT ;
"RTN","LROW2P",7,0)
 S U="^" S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LROW2P",8,0)
ENT2 ;from LRORDST, LROW2
"RTN","LROW2P",9,0)
 Q:'$D(^LRO(69,LRODT,1,LRSN,0))
"RTN","LROW2P",10,0)
 N LRSAMP,GOT,I S GOT=0
"RTN","LROW2P",11,0)
 S I=0 F  S I=$O(^LRO(69,LRODT,1,LRSN,2,I)) Q:I<1  I $D(^(I,0)),'$P(^(0),"^",11) S GOT=1
"RTN","LROW2P",12,0)
 Q:'GOT
"RTN","LROW2P",13,0)
 S X=^LRO(69,LRODT,1,LRSN,0),LRCSS=$S($D(^(4,1)):^(1,0),1:0),LRDFN=$P(X,U),(LRSAMP,LRCS)=$P(X,U,3),LRLWC=$P(X,U,4),LRDTO=$P(X,U,5),LRPR=$P(X,U,6),LRLLOC=$P(X,U,7),LRORDTIM=$P($P(X,U,8),".",2),LRDUZ=$P(X,U,2)
"RTN","LROW2P",14,0)
 S LRCSS=$S($D(^LAB(61,+LRCSS,0)):$P(^(0),U),1:""),LRCS=$S($D(^LAB(62,+LRCS,0)):^(0),1:"")
"RTN","LROW2P",15,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3),X=^DIC(LRDPF,0,"GL")_DFN_",0)",PNM=$S($D(@X):$P(@X,U),1:"UNKNOWN"),SSN=$S($D(@X):$P(@X,U,9),1:"UNKNOWN") S X=^DIC(LRDPF,0,"GL")_DFN_",.101)" S LRBED=$S($D(@X):^(.101),1:"")
"RTN","LROW2P",16,0)
 D:SSN SSN^LRU
"RTN","LROW2P",17,0)
 W !!,?23,$S(LRLWC="SP":"Send Patient",LRLWC="WC":"Ward Collect",LRLWC="I":"Immed Lab Collect ",1:"Lab Collect")," ORDER FOR " S Y=LRODT D DD^LRX W Y
"RTN","LROW2P",18,0)
 W !,?23,"ORDER: ",$S($D(^LRO(69,LRODT,1,LRSN,.1)):^(.1),1:""),?40,"LOCATION: ",LRLLOC W:$L(LRBED) "    BED: ",LRBED
"RTN","LROW2P",19,0)
 W !,PNM,?40,SSN,!,"ENTERED BY: " S X=LRDUZ D DUZ^LRX K LRDUZ W LRUSNM,?40 S Y=LRDTO D DD^LRX W Y
"RTN","LROW2P",20,0)
 I $L(LRPR) W !,"PROVIDER: " W $S($D(^VA(200,LRPR,0)):$E($P(^(0),"^"),1,25),1:"UNKNOWN")
"RTN","LROW2P",21,0)
 I LRORDTIM S Y=LRODT_"."_LRORDTIM D DD^LRX W ?38,$S(LRLWC="I":"REQUESTED",1:" Est.")_" Collect Time: ",Y
"RTN","LROW2P",22,0)
 W !,"Collection sample: ",$P(LRCS,U),"  ",$P(LRCS,U,3) W:$P(LRCS,U)'[LRCSS ?32," Site/Specimen: ",LRCSS
"RTN","LROW2P",23,0)
 S T=0 F  S T=$O(^LRO(69,LRODT,1,LRSN,2,T)) Q:T<1  S LRTP=^(T,0) D:'$P(LRTP,"^",11) TEST
"RTN","LROW2P",24,0)
 W !!!,"TIME OF COLLECTION:__________"
"RTN","LROW2P",25,0)
 I $D(^LRO(69,LRODT,1,LRSN,6,0)) W !!,"Order comment: " F I=0:0 S I=$O(^LRO(69,LRODT,1,LRSN,6,I)) Q:I<1  W !?2,^(I,0)
"RTN","LROW2P",26,0)
 W ! W:$E(IOST)="P" @IOF D ^%ZISC Q
"RTN","LROW2P",27,0)
TEST W !,"TEST/PROCEDURE: ",$P(^LAB(60,+LRTP,0),U) S LRUR=+$P(LRTP,U,2) W:LRUR ?48,$P(^LAB(62.05,LRUR,0),U)
"RTN","LROW2P",28,0)
 I $D(^LAB(60,+LRTP,3,"B",+LRSAMP)) S X=$O(^(+LRSAMP,0)) I X,$D(^LAB(60,+LRTP,3,X,1)) N I S I=0 D
"RTN","LROW2P",29,0)
 . W !,"Ward Instructions:"
"RTN","LROW2P",30,0)
 . F  S I=$O(^LAB(60,+LRTP,3,X,1,I)) Q:I<1  W !?2,^(I,0)
"RTN","LROW2P",31,0)
 I $O(^LRO(69,LRODT,1,LRSN,2,T,1,0)) W !,"Ward Comments:"
"RTN","LROW2P",32,0)
 S I=0 F  S I=$O(^LRO(69,LRODT,1,LRSN,2,T,1,I)) Q:I<1  W !?2,^(I,0)
"RTN","LROW2P",33,0)
 Q
"RTN","LRSRVR6")
0^3^B37896776^B37731233
"RTN","LRSRVR6",1,0)
LRSRVR6 ;DALOI/JMC,TMK - LAB DATA SERVER CONT'D SNOMED EXTRACT ; 17 Apr 2013  2:03 PM
"RTN","LRSRVR6",2,0)
 ;;5.2;LAB SERVICE;**346,378,350,425,460**;Sep 27, 1994;Build 1
"RTN","LRSRVR6",3,0)
 ;
"RTN","LRSRVR6",4,0)
 ; Produces SNOMED extract via LRLABSERVER option
"RTN","LRSRVR6",5,0)
 ;
"RTN","LRSRVR6",6,0)
 ; **** NOTE: if record format is changed then update corresponding extract record building in LRERT ***
"RTN","LRSRVR6",7,0)
 Q
"RTN","LRSRVR6",8,0)
 ;
"RTN","LRSRVR6",9,0)
 ;
"RTN","LRSRVR6",10,0)
SERVER ; Server entry Point
"RTN","LRSRVR6",11,0)
 N I,LRCNT,LREND,LRL,LRMSUBJ,LRST,LRSTN,LRTXT,LRX,LRY
"RTN","LRSRVR6",12,0)
 D BUILD
"RTN","LRSRVR6",13,0)
 S LRMSUBJ=LRST_" "_LRSTN_" SNOMED EXTRACT "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR6",14,0)
 D MAILSEND(LRMSUBJ)
"RTN","LRSRVR6",15,0)
 D CLEAN
"RTN","LRSRVR6",16,0)
 Q
"RTN","LRSRVR6",17,0)
 ;
"RTN","LRSRVR6",18,0)
 ;
"RTN","LRSRVR6",19,0)
BUILD ; Build extract
"RTN","LRSRVR6",20,0)
 ;
"RTN","LRSRVR6",21,0)
 N I,J,LRCNT,LRCRLF,LRETIME,LRFN,LRLEX,LRNAME,LRNODE,LRQUIT,LRROOT,LRSCT,LRSCTEC,LRSCTVER,LRSCTX,LRSPEC,LRSTIME,LRSTR,LRVAL,LRVUID,LRX,LRY,X,Y
"RTN","LRSRVR6",22,0)
 ;
"RTN","LRSRVR6",23,0)
 ;ZEXCEPT: LRST,LRSTN
"RTN","LRSRVR6",24,0)
 ;
"RTN","LRSRVR6",25,0)
 S LRSTIME=$$NOW^XLFDT,LRVAL=$$SITE^VASITE,LRST=$P(LRVAL,"^",3),LRSTN=$P(LRVAL,"^",2),LRSCTVER=""
"RTN","LRSRVR6",26,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR6",27,0)
 K ^TMP($J,"LRDATA")
"RTN","LRSRVR6",28,0)
 S (LRCNT,LRCNT("SCT"),LRCNT("SCT","EC"))=0,LRCRLF=$C(13,10),LRSTR=""
"RTN","LRSRVR6",29,0)
 F I=61,61.1,61.2,61.3,61.4,61.5,61.6,62 S (LRCNT(I),LRCNT(I,"SCT"),LRCNT(I,"SCT","EC"))=0
"RTN","LRSRVR6",30,0)
 D HDR
"RTN","LRSRVR6",31,0)
 ;
"RTN","LRSRVR6",32,0)
 ; Flag to indicate if SNOMED CT is available from LEXICON.
"RTN","LRSRVR6",33,0)
 S LRLEX=0
"RTN","LRSRVR6",34,0)
 I $T(CODE^LEXTRAN)'="" S LRLEX=1
"RTN","LRSRVR6",35,0)
 ;
"RTN","LRSRVR6",36,0)
 F LRFN=61,61.1,61.2,61.3,61.4,61.5,61.6,62  D
"RTN","LRSRVR6",37,0)
 . S LRROOT="^LAB("_LRFN_",""B"")"
"RTN","LRSRVR6",38,0)
 . D FILE
"RTN","LRSRVR6",39,0)
 ;
"RTN","LRSRVR6",40,0)
 S LRETIME=$$NOW^XLFDT
"RTN","LRSRVR6",41,0)
 ; Set the final info into the ^TMP message global
"RTN","LRSRVR6",42,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR6",43,0)
 I LRSTR'="" S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN^LRSRVR4(LRSTR)
"RTN","LRSRVR6",44,0)
 S ^TMP($J,"LRDATA",LRNODE+1)=" "
"RTN","LRSRVR6",45,0)
 S ^TMP($J,"LRDATA",LRNODE+2)="end"
"RTN","LRSRVR6",46,0)
 ;
"RTN","LRSRVR6",47,0)
 S ^TMP($J,"LRDATA",1)=^TMP($J,"LRDATA",1)_" (Run time:"_$$FMDIFF^XLFDT(LRETIME,LRSTIME,3)_")"
"RTN","LRSRVR6",48,0)
 S ^TMP($J,"LRDATA",3)="SNOMED CT version......: "_LRSCTVER
"RTN","LRSRVR6",49,0)
 S J=6
"RTN","LRSRVR6",50,0)
 S ^TMP($J,"LRDATA",J)="Number of records per file:"
"RTN","LRSRVR6",51,0)
 F I=61,61.1,61.2,61.3,61.4,61.5,61.6,62 D
"RTN","LRSRVR6",52,0)
 . S J=J+1
"RTN","LRSRVR6",53,0)
 . S ^TMP($J,"LRDATA",J)=" "_$$LJ^XLFSTR($$GET1^DID(I,"","","NAME")_" File (#"_I_")",32,".")_": "_$J(LRCNT(I),5)_"  ("_LRCNT(I,"SCT")_" mapped)"
"RTN","LRSRVR6",54,0)
 . I LRCNT(I,"SCT","EC") S ^TMP($J,"LRDATA",J)=^TMP($J,"LRDATA",J)_" ("_LRCNT(I,"SCT","EC")_" exceptions)"
"RTN","LRSRVR6",55,0)
 S ^TMP($J,"LRDATA",J+1)=$$LJ^XLFSTR("Total number of records",33,".")_": "_$J(LRCNT,5)_"  ("_LRCNT("SCT")_" mapped)"
"RTN","LRSRVR6",56,0)
 I LRCNT("SCT","EC") S ^TMP($J,"LRDATA",J+1)=^TMP($J,"LRDATA",J+1)_" ("_LRCNT("SCT","EC")_" exceptions)"
"RTN","LRSRVR6",57,0)
 ;
"RTN","LRSRVR6",58,0)
 Q
"RTN","LRSRVR6",59,0)
 ;
"RTN","LRSRVR6",60,0)
 ;
"RTN","LRSRVR6",61,0)
CLEAN ;
"RTN","LRSRVR6",62,0)
 ;
"RTN","LRSRVR6",63,0)
 ;ZEXCEPT: LRIEN,LRLEN,LRNODE,LRSNM,LRSPECN
"RTN","LRSRVR6",64,0)
 ;
"RTN","LRSRVR6",65,0)
 K ^TMP($J,"LR61")
"RTN","LRSRVR6",66,0)
 K LRIEN,LRLEN,LRNODE,LRSNM,LRSPECN
"RTN","LRSRVR6",67,0)
 D CLEAN^LRSRVR
"RTN","LRSRVR6",68,0)
 D ^%ZISC
"RTN","LRSRVR6",69,0)
 Q
"RTN","LRSRVR6",70,0)
 ;
"RTN","LRSRVR6",71,0)
 ;
"RTN","LRSRVR6",72,0)
FILE ; Search file entry and build record.
"RTN","LRSRVR6",73,0)
 ;
"RTN","LRSRVR6",74,0)
 N LRNAME,LRVFLD,X
"RTN","LRSRVR6",75,0)
 ;
"RTN","LRSRVR6",76,0)
 ;ZEXCEPT: LRCNT,LRFN,LRIEN,LRLEX,LRROOT,LRSCT,LRSCTEC,LRSCTVER,LRSCTX,LRSNM,LRSPEC,LRSPECN,LRST,LRSTR,LRVUID,LRX
"RTN","LRSRVR6",77,0)
 ;
"RTN","LRSRVR6",78,0)
 ;
"RTN","LRSRVR6",79,0)
 S LRVFLD(21)=$$VFIELD^DILFD(LRFN,21)
"RTN","LRSRVR6",80,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  Q:$QS(LRROOT,2)'="B"  D
"RTN","LRSRVR6",81,0)
 . S LRIEN=$QS(LRROOT,4),LRSPEC=""
"RTN","LRSRVR6",82,0)
 . S LRNAME=$P($G(^LAB(LRFN,LRIEN,0)),"^") ;,LRNAME=$$TRIM^XLFSTR(LRNAME,"RL"," ")
"RTN","LRSRVR6",83,0)
 . I $G(@LRROOT),LRNAME'=$QS(LRROOT,3) Q
"RTN","LRSRVR6",84,0)
 . S X=$P($G(^LAB(LRFN,LRIEN,0)),"^",2)
"RTN","LRSRVR6",85,0)
 . S LRSNM=$S(LRFN'=62:X,1:"")
"RTN","LRSRVR6",86,0)
 . I LRFN=62 S LRSPEC=X
"RTN","LRSRVR6",87,0)
 . I LRSNM'="",LRFN>60.9,LRFN<61.61 S LRX=((LRFN*10)#610)+1,LRSNM=$E("TMEFDPJ",LRX)_"-"_LRSNM
"RTN","LRSRVR6",88,0)
 . S LRSCT=$P($G(^LAB(LRFN,LRIEN,"SCT")),"^"),(LRSCTEC,LRSCTX,LRVUID)=""
"RTN","LRSRVR6",89,0)
 . I LRLEX,LRSCT'="" D
"RTN","LRSRVR6",90,0)
 . . N LRLEXARR
"RTN","LRSRVR6",91,0)
 . . S LRLEXARR=$$CODE^LRSCT(LRSCT,"SCT",DT,"LRLEXARR")
"RTN","LRSRVR6",92,0)
 . . S LRSCTX=$G(LRLEXARR("F")),LRSCTEC=$S(LRLEXARR<1:$P(LRLEXARR,"^",2),1:"")
"RTN","LRSRVR6",93,0)
 . . I LRSCTVER="",LRLEXARR>0 S LRSCTVER=$P($G(LRLEXARR(0)),"^",3)
"RTN","LRSRVR6",94,0)
 . S LRSTR=LRSTR_LRST_"-"_LRFN_"-"_LRIEN_"|"_LRNAME_"|"_LRSNM_"|"_LRVUID_"|"_LRSCT_"|"_LRSCTX_"|"_LRSCTEC_"|"
"RTN","LRSRVR6",95,0)
 . S LRSPECN="|"
"RTN","LRSRVR6",96,0)
 . I LRFN=62,LRSPEC D
"RTN","LRSRVR6",97,0)
 . . S LRSPECN=$P($G(^LAB(61,LRSPEC,0)),"^")
"RTN","LRSRVR6",98,0)
 . . S LRSPECN=LRSPECN_"|"_LRST_"-61-"_LRSPEC
"RTN","LRSRVR6",99,0)
 . S LRSTR=LRSTR_LRSPECN_"|1.2|"
"RTN","LRSRVR6",100,0)
 . I LRVFLD(21) S LRSTR=LRSTR_$$GET1^DIQ(LRFN,LRIEN_",",21,"I")
"RTN","LRSRVR6",101,0)
 . S LRSTR=LRSTR_"|"
"RTN","LRSRVR6",102,0)
 . I LRFN=61!(LRFN=62) D  ; Inactive date
"RTN","LRSRVR6",103,0)
 .. I LRFN=61 S LRSTR=LRSTR_$TR($$FMTE^XLFDT($$GET1^DIQ(LRFN,LRIEN_",",64.9103,"I"),"1D")," ,","/")
"RTN","LRSRVR6",104,0)
 .. I LRFN=62 S LRSTR=LRSTR_$TR($$FMTE^XLFDT($$GET1^DIQ(LRFN,LRIEN_",",64.9101,"I"),"1D")," ,","/")
"RTN","LRSRVR6",105,0)
 .. S LRSTR=LRSTR_"|"
"RTN","LRSRVR6",106,0)
 . S LRCNT=LRCNT+1,LRCNT(LRFN)=LRCNT(LRFN)+1
"RTN","LRSRVR6",107,0)
 . I LRSCT D
"RTN","LRSRVR6",108,0)
 . . S LRCNT("SCT")=LRCNT("SCT")+1,LRCNT(LRFN,"SCT")=LRCNT(LRFN,"SCT")+1
"RTN","LRSRVR6",109,0)
 . . I LRSCTEC'="" S LRCNT("SCT","EC")=LRCNT("SCT","EC")+1,LRCNT(LRFN,"SCT","EC")=LRCNT(LRFN,"SCT","EC")+1
"RTN","LRSRVR6",110,0)
 . D SETDATA
"RTN","LRSRVR6",111,0)
 Q
"RTN","LRSRVR6",112,0)
 ;
"RTN","LRSRVR6",113,0)
 ;
"RTN","LRSRVR6",114,0)
SETDATA ; Set data into report structure
"RTN","LRSRVR6",115,0)
 ;
"RTN","LRSRVR6",116,0)
 ;ZEXCEPT: LRCRLF,LRNODE,LRSTR
"RTN","LRSRVR6",117,0)
 ;
"RTN","LRSRVR6",118,0)
 S LRSTR=LRSTR_LRCRLF
"RTN","LRSRVR6",119,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR6",120,0)
 D ENCODE^LRSRVR4(.LRSTR)
"RTN","LRSRVR6",121,0)
 Q
"RTN","LRSRVR6",122,0)
 ;
"RTN","LRSRVR6",123,0)
 ;
"RTN","LRSRVR6",124,0)
HDR ; Set the header information
"RTN","LRSRVR6",125,0)
 N I,LRFILENM,X
"RTN","LRSRVR6",126,0)
 ;
"RTN","LRSRVR6",127,0)
 ;ZEXCEPT: LRSCTVER,LRSTIME,LRSTN,LRSUB
"RTN","LRSRVR6",128,0)
 ;
"RTN","LRSRVR6",129,0)
 S LRFILENM=$TR(LRSTN," ","_")_"-"_LRSUB_"-"_$P($$FMTHL7^XLFDT(LRSTIME),"-")_".TXT"
"RTN","LRSRVR6",130,0)
 S ^TMP($J,"LRDATA",1)="Report Generated.......: "_$$FMTE^XLFDT(LRSTIME)_" at "_LRSTN
"RTN","LRSRVR6",131,0)
 S ^TMP($J,"LRDATA",2)="Report requested.......: "_LRSUB
"RTN","LRSRVR6",132,0)
 S ^TMP($J,"LRDATA",3)="SNOMED CT version......: "_LRSCTVER
"RTN","LRSRVR6",133,0)
 S ^TMP($J,"LRDATA",4)="Extract version........: "_$$VER()
"RTN","LRSRVR6",134,0)
 F I=5,15,16,18,23 S ^TMP($J,"LRDATA",I)=" "
"RTN","LRSRVR6",135,0)
 S ^TMP($J,"LRDATA",17)="Attached file..........: "_LRFILENM
"RTN","LRSRVR6",136,0)
 S ^TMP($J,"LRDATA",19)="Legend:"
"RTN","LRSRVR6",137,0)
 S X="Station #-File #-IEN|Entry Name|SNOMED I|VUID|SNOMED CT|SNOMED CT TERM|Mapping Exception|Related Specimen|Related Specimen ID|Extract Ver|Term Status|Inactive Date|"
"RTN","LRSRVR6",138,0)
 S ^TMP($J,"LRDATA",20)=X
"RTN","LRSRVR6",139,0)
 S X="           1        |     2    |   3    |  4 |    5    |       6      |        7        |        8       |        9          |    10     |  11    |   12    |"
"RTN","LRSRVR6",140,0)
 S ^TMP($J,"LRDATA",21)=X
"RTN","LRSRVR6",141,0)
 S ^TMP($J,"LRDATA",22)=$$REPEAT^XLFSTR("-",$L(X))
"RTN","LRSRVR6",142,0)
 S ^TMP($J,"LRDATA",24)=$$UUBEGFN^LRSRVR2A(LRFILENM)
"RTN","LRSRVR6",143,0)
 Q
"RTN","LRSRVR6",144,0)
 ;
"RTN","LRSRVR6",145,0)
 ;
"RTN","LRSRVR6",146,0)
VER() ; Extract version
"RTN","LRSRVR6",147,0)
 Q "1.2"
"RTN","LRSRVR6",148,0)
 ;
"RTN","LRSRVR6",149,0)
 ;
"RTN","LRSRVR6",150,0)
MAILSEND(LRMSUBJ) ; Send extract back to requestor.
"RTN","LRSRVR6",151,0)
 ;
"RTN","LRSRVR6",152,0)
 N LRINSTR,LRTASK,LRTO,XMERR,XMZ
"RTN","LRSRVR6",153,0)
 ;
"RTN","LRSRVR6",154,0)
 ;ZEXCEPT: XQSND
"RTN","LRSRVR6",155,0)
 ;
"RTN","LRSRVR6",156,0)
 S LRTO(XQSND)=""
"RTN","LRSRVR6",157,0)
 S LRINSTR("ADDR FLAGS")="R"
"RTN","LRSRVR6",158,0)
 S LRINSTR("FROM")="LAB_PACKAGE"
"RTN","LRSRVR6",159,0)
 S LRMSUBJ=$E(LRMSUBJ,1,65)
"RTN","LRSRVR6",160,0)
 D SENDMSG^XMXAPI(.5,LRMSUBJ,"^TMP($J,""LRDATA"")",.LRTO,.LRINSTR,.LRTASK)
"RTN","LRSRVR6",161,0)
 Q
"VER")
8.0^22.0
"BLD",10042,6)
^368
**END**
**END**

