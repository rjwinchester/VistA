Released LR*5.2*461 SEQ #400
Extracted from mail message
**KIDS**:LR*5.2*461^

**INSTALL NAME**
LR*5.2*461
"BLD",10067,0)
LR*5.2*461^LAB SERVICE^0^3171104^y
"BLD",10067,1,0)
^^8^8^3170312^
"BLD",10067,1,1,0)
This patch addresses two (2) issues:
"BLD",10067,1,2,0)
 
"BLD",10067,1,3,0)
1. Accessions which have been merged to other accessions or marked as 
"BLD",10067,1,4,0)
   "not performed" may be resulted even though these accessions are
"BLD",10067,1,5,0)
   cancelled.
"BLD",10067,1,6,0)
 
"BLD",10067,1,7,0)
2. Anatomic Pathology labels do not print while using the option 
"BLD",10067,1,8,0)
   REFERRAL PATIENT MULTI-PURPOSE option for accessioning orders.
"BLD",10067,4,0)
^9.64PA^^
"BLD",10067,6.3)
15
"BLD",10067,"ABPKG")
n
"BLD",10067,"KRN",0)
^9.67PA^779.2^20
"BLD",10067,"KRN",.4,0)
.4
"BLD",10067,"KRN",.401,0)
.401
"BLD",10067,"KRN",.402,0)
.402
"BLD",10067,"KRN",.403,0)
.403
"BLD",10067,"KRN",.5,0)
.5
"BLD",10067,"KRN",.84,0)
.84
"BLD",10067,"KRN",3.6,0)
3.6
"BLD",10067,"KRN",3.8,0)
3.8
"BLD",10067,"KRN",9.2,0)
9.2
"BLD",10067,"KRN",9.8,0)
9.8
"BLD",10067,"KRN",9.8,"NM",0)
^9.68A^7^5
"BLD",10067,"KRN",9.8,"NM",1,0)
LRVER1^^0^B51164514
"BLD",10067,"KRN",9.8,"NM",2,0)
LRSTUF2^^0^B25014917
"BLD",10067,"KRN",9.8,"NM",3,0)
LRMIEDZ4^^0^B6108104
"BLD",10067,"KRN",9.8,"NM",6,0)
LRWLST11^^0^B74481362
"BLD",10067,"KRN",9.8,"NM",7,0)
LRVER3^^0^B75852172
"BLD",10067,"KRN",9.8,"NM","B","LRMIEDZ4",3)

"BLD",10067,"KRN",9.8,"NM","B","LRSTUF2",2)

"BLD",10067,"KRN",9.8,"NM","B","LRVER1",1)

"BLD",10067,"KRN",9.8,"NM","B","LRVER3",7)

"BLD",10067,"KRN",9.8,"NM","B","LRWLST11",6)

"BLD",10067,"KRN",19,0)
19
"BLD",10067,"KRN",19.1,0)
19.1
"BLD",10067,"KRN",101,0)
101
"BLD",10067,"KRN",409.61,0)
409.61
"BLD",10067,"KRN",771,0)
771
"BLD",10067,"KRN",779.2,0)
779.2
"BLD",10067,"KRN",870,0)
870
"BLD",10067,"KRN",8989.51,0)
8989.51
"BLD",10067,"KRN",8989.52,0)
8989.52
"BLD",10067,"KRN",8994,0)
8994
"BLD",10067,"KRN","B",.4,.4)

"BLD",10067,"KRN","B",.401,.401)

"BLD",10067,"KRN","B",.402,.402)

"BLD",10067,"KRN","B",.403,.403)

"BLD",10067,"KRN","B",.5,.5)

"BLD",10067,"KRN","B",.84,.84)

"BLD",10067,"KRN","B",3.6,3.6)

"BLD",10067,"KRN","B",3.8,3.8)

"BLD",10067,"KRN","B",9.2,9.2)

"BLD",10067,"KRN","B",9.8,9.8)

"BLD",10067,"KRN","B",19,19)

"BLD",10067,"KRN","B",19.1,19.1)

"BLD",10067,"KRN","B",101,101)

"BLD",10067,"KRN","B",409.61,409.61)

"BLD",10067,"KRN","B",771,771)

"BLD",10067,"KRN","B",779.2,779.2)

"BLD",10067,"KRN","B",870,870)

"BLD",10067,"KRN","B",8989.51,8989.51)

"BLD",10067,"KRN","B",8989.52,8989.52)

"BLD",10067,"KRN","B",8994,8994)

"BLD",10067,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10067,"QUES",0)
^9.62^^
"BLD",10067,"REQB",0)
^9.611^2^2
"BLD",10067,"REQB",1,0)
LR*5.2*440^2
"BLD",10067,"REQB",2,0)
LR*5.2*484^2
"BLD",10067,"REQB","B","LR*5.2*440",1)

"BLD",10067,"REQB","B","LR*5.2*484",2)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2981028^66481
"PKG",26,22,1,"PAH",1,0)
461^3171104
"PKG",26,22,1,"PAH",1,1,0)
^^8^8^3171104
"PKG",26,22,1,"PAH",1,1,1,0)
This patch addresses two (2) issues:
"PKG",26,22,1,"PAH",1,1,2,0)
 
"PKG",26,22,1,"PAH",1,1,3,0)
1. Accessions which have been merged to other accessions or marked as 
"PKG",26,22,1,"PAH",1,1,4,0)
   "not performed" may be resulted even though these accessions are
"PKG",26,22,1,"PAH",1,1,5,0)
   cancelled.
"PKG",26,22,1,"PAH",1,1,6,0)
 
"PKG",26,22,1,"PAH",1,1,7,0)
2. Anatomic Pathology labels do not print while using the option 
"PKG",26,22,1,"PAH",1,1,8,0)
   REFERRAL PATIENT MULTI-PURPOSE option for accessioning orders.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","LRMIEDZ4")
0^3^B6108104^B2660171
"RTN","LRMIEDZ4",1,0)
LRMIEDZ4 ;DALOI/FHS/RBN - CONTINUE MICROBIOLOGY EDIT ;11/18/11  16:04
"RTN","LRMIEDZ4",2,0)
 ;;5.2;LAB SERVICE;**350,461**;Sep 27, 1994;Build 15
"RTN","LRMIEDZ4",3,0)
 ;
"RTN","LRMIEDZ4",4,0)
 ; Formerly a part of LRMIEDZ2
"RTN","LRMIEDZ4",5,0)
 ;
"RTN","LRMIEDZ4",6,0)
EC ;
"RTN","LRMIEDZ4",7,0)
 ;
"RTN","LRMIEDZ4",8,0)
 K LRTX
"RTN","LRMIEDZ4",9,0)
 ;
"RTN","LRMIEDZ4",10,0)
 S LRAN=$P($P(LRBG0,U,6)," ",3),LRLLOC=$P(LRBG0,U,8),LRODT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,4),LRSN=$P(^(0),U,5)
"RTN","LRMIEDZ4",11,0)
 I $D(^LRO(69,+LRODT,1,+LRSN,0)) D
"RTN","LRMIEDZ4",12,0)
 . S DIC="^LRO(69,"_LRODT_",1,",DA=LRSN,DR=6
"RTN","LRMIEDZ4",13,0)
 . I DA>0 D EN^DIQ
"RTN","LRMIEDZ4",14,0)
 ;
"RTN","LRMIEDZ4",15,0)
 I $D(DTOUT)!($D(DUOUT)) S LREND=1 Q
"RTN","LRMIEDZ4",16,0)
 ;
"RTN","LRMIEDZ4",17,0)
 K LRNPTP
"RTN","LRMIEDZ4",18,0)
 N LRMSTR,LRMFLG
"RTN","LRMIEDZ4",19,0)
 ;
"RTN","LRMIEDZ4",20,0)
 S (LRI,N,LRMFLG)=0
"RTN","LRMIEDZ4",21,0)
 F  S LRI=+$O(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRI)) Q:LRI<.5  D
"RTN","LRMIEDZ4",22,0)
 . I $P(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRI,0),U,2)>49 Q
"RTN","LRMIEDZ4",23,0)
 . ;notify user if a merged / cancelled test was preselected
"RTN","LRMIEDZ4",24,0)
 . S LRMSTR=^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRI,0)
"RTN","LRMIEDZ4",25,0)
 . I $P(LRMSTR,U,6)]"" D
"RTN","LRMIEDZ4",26,0)
 . . W !,$P(^LAB(60,+LRMSTR,0),U),"  ",$P(LRMSTR,U,6)
"RTN","LRMIEDZ4",27,0)
 . . S LRMFLG=1
"RTN","LRMIEDZ4",28,0)
 . I LRPTP>0,+LRMSTR=LRPTP D
"RTN","LRMIEDZ4",29,0)
 . . I $P(LRMSTR,U,6)="*Merged" D
"RTN","LRMIEDZ4",30,0)
 . . . W !,"    This test was merged to another accession"
"RTN","LRMIEDZ4",31,0)
 . . . W !,"    and may not be resulted on this accession.",!
"RTN","LRMIEDZ4",32,0)
 . . I $P(LRMSTR,U,6)="*Not Performed" D
"RTN","LRMIEDZ4",33,0)
 . . . W !,"    This test may not be resulted since it is marked as ""Not Performed"".",!
"RTN","LRMIEDZ4",34,0)
 . ;do not allow resulting of test which was merged / cancelled
"RTN","LRMIEDZ4",35,0)
 . I $P(LRMSTR,U,6)="*Merged"!($P(LRMSTR,U,6)="*Not Performed") Q
"RTN","LRMIEDZ4",36,0)
 . S N=N+1,LRTS(N)=+^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRI,0)
"RTN","LRMIEDZ4",37,0)
 . S LRTX(N)=$S($P(^LAB(60,LRTS(N),0),U,14):^LAB(62.07,$P(^(0),U,14),.1),1:"")
"RTN","LRMIEDZ4",38,0)
 . I LRTS(N)=LRPTP S LRNPTP=N Q
"RTN","LRMIEDZ4",39,0)
 ;
"RTN","LRMIEDZ4",40,0)
 I LRMFLG W !
"RTN","LRMIEDZ4",41,0)
 I '$D(LRNPTP),LRPTP>0 W !,"No eligible tests match with the test you preselected.",!
"RTN","LRMIEDZ4",42,0)
 I $D(LRNPTP) S LRI=LRNPTP
"RTN","LRMIEDZ4",43,0)
 ;
"RTN","LRMIEDZ4",44,0)
 I '$D(LRNPTP),N>0 F J=1:1:N D
"RTN","LRMIEDZ4",45,0)
 . W !,?3,J,?8,$P(^LAB(60,LRTS(J),0),U)
"RTN","LRMIEDZ4",46,0)
 . S Y=$P(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRTS(J),0),U,5)
"RTN","LRMIEDZ4",47,0)
 . I Y>0 W " Completed ",$$FMTE^XLFDT(Y,"1M")
"RTN","LRMIEDZ4",48,0)
 W !
"RTN","LRMIEDZ4",49,0)
 ;
"RTN","LRMIEDZ4",50,0)
 Q
"RTN","LRSTUF2")
0^2^B25014917^B21119353
"RTN","LRSTUF2",1,0)
LRSTUF2 ;DALOI/STAFF - MASS DATA ENTRY INTO FILE 63.04 ;07/12/12  17:03
"RTN","LRSTUF2",2,0)
 ;;5.2;LAB SERVICE;**121,153,263,347,350,461**;Sep 27, 1994;Build 15
"RTN","LRSTUF2",3,0)
 ;
"RTN","LRSTUF2",4,0)
LRSTUFF ;
"RTN","LRSTUF2",5,0)
 N LRCDT
"RTN","LRSTUF2",6,0)
 W !,"Acc #: ",LRAN
"RTN","LRSTUF2",7,0)
 ;
"RTN","LRSTUF2",8,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))!'$D(^(3)) W !," not set up." Q
"RTN","LRSTUF2",9,0)
 ;
"RTN","LRSTUF2",10,0)
 ;Check for test on accession
"RTN","LRSTUF2",11,0)
 ;Also, prevent stuffing of merged or cancelled accessions
"RTN","LRSTUF2",12,0)
 ;
"RTN","LRSTUF2",13,0)
 N LRMTST,LRTCHK,LRMSTR,LRNOP
"RTN","LRSTUF2",14,0)
 S (LRMTST,LRNOP)=0,LRTCHK=""
"RTN","LRSTUF2",15,0)
 F  S LRMTST=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRMTST)) Q:'LRMTST  D
"RTN","LRSTUF2",16,0)
 . ;adding a $G because there is one for this global reference in other routines
"RTN","LRSTUF2",17,0)
 . S LRMSTR=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRMTST,0))
"RTN","LRSTUF2",18,0)
 . I LRTESTSV'=+LRMSTR Q
"RTN","LRSTUF2",19,0)
 . S LRNOP=1
"RTN","LRSTUF2",20,0)
 . I $P(LRMSTR,U,6)="*Not Performed" S LRTCHK="previously cancelled"
"RTN","LRSTUF2",21,0)
 . I $P(LRMSTR,U,6)="*Merged" S LRTCHK="merged to another accession"
"RTN","LRSTUF2",22,0)
 I 'LRNOP W " doesn't have the selected test." Q
"RTN","LRSTUF2",23,0)
 I LRTCHK]"" W " not stuffed because ",LRTCHK Q
"RTN","LRSTUF2",24,0)
 ;
"RTN","LRSTUF2",25,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRODT=$P(^(0),U,4),LRSN=$P(^(0),U,5)
"RTN","LRSTUF2",26,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX
"RTN","LRSTUF2",27,0)
 W ?15,PNM,?45,SSN
"RTN","LRSTUF2",28,0)
 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3))
"RTN","LRSTUF2",29,0)
 ;
"RTN","LRSTUF2",30,0)
 S LRCDT=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U),LRIDT=$P(^(3),U,5),LRMETH="(BD)"_DUZ_"/"_DUZ(2)
"RTN","LRSTUF2",31,0)
 I LRDPF'=62.3 S LRLLOC=$P(^(0),U,7) S:LRLLOC="" LRLLOC="UNKNOWN" W ?65,LRLLOC
"RTN","LRSTUF2",32,0)
 ;
"RTN","LRSTUF2",33,0)
 L +^LR(LRDFN,"CH",LRIDT):DILOCKTM
"RTN","LRSTUF2",34,0)
 I '$T W !!,"Someone else is editing this entry ",!,$C(7) Q
"RTN","LRSTUF2",35,0)
 ;
"RTN","LRSTUF2",36,0)
 I $P(^LR(LRDFN,LRSS,LRIDT,0),U,3),("pending"'[$S($D(^(LRFLD)):$P(^(LRFLD),U,1),1:"pending")) W !?25,"VERIFIED DATA, CAN'T CHANGE" L -^LR(LRDFN,"CH",LRIDT) Q
"RTN","LRSTUF2",37,0)
 I $P(^LR(LRDFN,LRSS,LRIDT,0),U,3) W !?5,"Some Data Already Verified"
"RTN","LRSTUF2",38,0)
 I '$T,$O(^LR(LRDFN,LRSS,LRIDT,1))>1 W !?5,"Some Unverified Data Already Entered." L -^LR(LRDFN,"CH",LRIDT) Q
"RTN","LRSTUF2",39,0)
 ;
"RTN","LRSTUF2",40,0)
 S I=0 F  S I=$O(^TMP("LR",$J,"VTO",I)) Q:I<1  S ^TMP("LR",$J,"VTO",I,"P")=I_U_$$NLT^LRVER1(I)
"RTN","LRSTUF2",41,0)
 ;
"RTN","LRSTUF2",42,0)
 W ! S DIE="^LR("_LRDFN_",""CH"",",DA=LRIDT D ^DIE
"RTN","LRSTUF2",43,0)
 I LRA'=1,$D(Y) D  Q:LREND
"RTN","LRSTUF2",44,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LRSTUF2",45,0)
 . S DIR(0)="Y",DIR("A")="Do you wish to stop",DIR("B")="Y"
"RTN","LRSTUF2",46,0)
 . D ^DIR
"RTN","LRSTUF2",47,0)
 . I Y=0 Q
"RTN","LRSTUF2",48,0)
 . S LREND=1
"RTN","LRSTUF2",49,0)
 . L -^LR(LRDFN,"CH",LRIDT)
"RTN","LRSTUF2",50,0)
 ;
"RTN","LRSTUF2",51,0)
 I $G(LRVX)'="" D
"RTN","LRSTUF2",52,0)
 . S X=LRVX,LRFLG="",LRSPEC=+$P(^LR(LRDFN,LRSS,LRIDT,0),U,5)
"RTN","LRSTUF2",53,0)
 . I $G(M(LRFLD)) S LRTS=M(LRFLD)
"RTN","LRSTUF2",54,0)
 . E  S LRTS=$O(^LAB(60,"C",LRSS_";"_LRFLD_";1",0))
"RTN","LRSTUF2",55,0)
 . K LRSB S LRSB=LRFLD
"RTN","LRSTUF2",56,0)
 . D V25^LRVER5
"RTN","LRSTUF2",57,0)
 ;
"RTN","LRSTUF2",58,0)
STOR ; Store other info with results
"RTN","LRSTUF2",59,0)
 I '$G(LRNOW) S LRNOW=$$NOW^XLFDT
"RTN","LRSTUF2",60,0)
 I $P($G(^LR(LRDFN,LRSS,LRIDT,LRFLD)),U)'="" D
"RTN","LRSTUF2",61,0)
 . N LRX,LRXX,LRP,X
"RTN","LRSTUF2",62,0)
 . S (LRSB(LRFLD),X)=^LR(LRDFN,LRSS,LRIDT,LRFLD),X=$P(LRSB(LRFLD),U)
"RTN","LRSTUF2",63,0)
 . I $G(LRDEL)'="" D DELTA
"RTN","LRSTUF2",64,0)
 . D RANGE^LRVER5
"RTN","LRSTUF2",65,0)
 . S LRXX=LRSB(LRFLD),$P(LRXX,U)=X
"RTN","LRSTUF2",66,0)
 . S $P(LRXX,U,2)=LRFLG,$P(LRXX,U,4)=DUZ,$P(LRXX,U,9)=$G(DUZ(2))
"RTN","LRSTUF2",67,0)
 . S $P(LRXX,U,5)=$TR(LRNG,U,"!")
"RTN","LRSTUF2",68,0)
 . S $P(LRXX,U,6)=LRNOW
"RTN","LRSTUF2",69,0)
 . K ^TMP("LR",$J,"TMP")
"RTN","LRSTUF2",70,0)
 . S LRP=$O(^LAB(60,"C",LRSS_";"_LRFLD_";1",0))
"RTN","LRSTUF2",71,0)
 . S ^TMP("LR",$J,"TMP",LRFLD)=LRP
"RTN","LRSTUF2",72,0)
 . S LRX=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTESTSV,0)),U,9)
"RTN","LRSTUF2",73,0)
 . I LRX,LRP D
"RTN","LRSTUF2",74,0)
 . . S ^TMP("LR",$J,"TMP",LRFLD,"P")=LRX_U_$$NLT^LRVER1(LRX)_"!"_$$RNLT^LRVER1(LRP)
"RTN","LRSTUF2",75,0)
 . . S $P(LRXX,U,3)=$P($G(^TMP("LR",$J,"TMP",LRFLD,"P")),U,2)
"RTN","LRSTUF2",76,0)
 . S ^LR(LRDFN,LRSS,LRIDT,LRFLD)=LRXX,LRSB(LRFLD)=LRXX
"RTN","LRSTUF2",77,0)
 . I $D(^LR(LRDFN,LRSS,LRIDT,0)),$P(^(0),U,8)'[LRMETH S $P(^(0),U,8)=LRMETH_";"_$P(^(0),U,8)
"RTN","LRSTUF2",78,0)
 ;
"RTN","LRSTUF2",79,0)
 I '$D(LRSB(LRFLD)) W ?39,"**NOT STUFFED**",$C(7) L -^LR(LRDFN,"CH",LRIDT) Q
"RTN","LRSTUF2",80,0)
 ;
"RTN","LRSTUF2",81,0)
 ; Set reporting site in file #63.
"RTN","LRSTUF2",82,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRSTUF2",83,0)
 ;
"RTN","LRSTUF2",84,0)
 N LRCORECT S LRCORECT=0
"RTN","LRSTUF2",85,0)
 D VER^LRVER3A,REQ W ?45,"STUFFED"
"RTN","LRSTUF2",86,0)
 I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D LOOK^LRCAPV1
"RTN","LRSTUF2",87,0)
 S ^LRO(68,"AC",LRDFN,LRIDT,LRFLD)=""
"RTN","LRSTUF2",88,0)
 ;
"RTN","LRSTUF2",89,0)
 L -^LR(LRDFN,"CH",LRIDT)
"RTN","LRSTUF2",90,0)
 ;
"RTN","LRSTUF2",91,0)
 ; Check if LEDI specimen and trigger sending results
"RTN","LRSTUF2",92,0)
 I $P($G(LRORU3),U,3),$O(LRSB(0)) D LRORU3^LRVER3
"RTN","LRSTUF2",93,0)
 ;
"RTN","LRSTUF2",94,0)
 Q
"RTN","LRSTUF2",95,0)
 ;
"RTN","LRSTUF2",96,0)
 ;
"RTN","LRSTUF2",97,0)
RANGE ; Called from LRSTUF1
"RTN","LRSTUF2",98,0)
 F R=$P(LRAC,"-",1):1:$P(LRAC,"-",2) S LRAC(R)=""
"RTN","LRSTUF2",99,0)
 Q
"RTN","LRSTUF2",100,0)
 ;
"RTN","LRSTUF2",101,0)
 ;
"RTN","LRSTUF2",102,0)
REQ ; Called from above - handle pending required tests.
"RTN","LRSTUF2",103,0)
 N LRX,X
"RTN","LRSTUF2",104,0)
 S X=0
"RTN","LRSTUF2",105,0)
 F  S X=$O(M(X)) Q:X<1  S I=M(X) I $P($G(^LR(LRDFN,"CH",LRIDT,X)),U)="" D
"RTN","LRSTUF2",106,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,I,0)=I_U_LROUTINE,$P(^(0),U,9)=$P($G(^TMP("LR",$J,"TMP",LRFLD,"P")),U)
"RTN","LRSTUF2",107,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",I,I)=""
"RTN","LRSTUF2",108,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)=""
"RTN","LRSTUF2",109,0)
 . S LRX=$G(^LR(LRDFN,"CH",LRIDT,X))
"RTN","LRSTUF2",110,0)
 . S $P(LRX,"^")="pending"
"RTN","LRSTUF2",111,0)
 . I $P(LRX,"^",3)="" S $P(LRX,U,3)=$P($G(^TMP("LR",$J,"TMP",LRFLD,"P")),U,2)
"RTN","LRSTUF2",112,0)
 . S $P(LRX,"^",4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRSTUF2",113,0)
 . S $P(LRX,"^",9)=$S($G(DUZ(2)):DUZ(2),1:"")
"RTN","LRSTUF2",114,0)
 . S ^LR(LRDFN,"CH",LRIDT,X)=LRX
"RTN","LRSTUF2",115,0)
 Q
"RTN","LRSTUF2",116,0)
 ;
"RTN","LRSTUF2",117,0)
 ;
"RTN","LRSTUF2",118,0)
DELTA ; Execute delta check
"RTN","LRSTUF2",119,0)
 ; Setup expected variables for delta check - LRLDT, X, X1
"RTN","LRSTUF2",120,0)
 ; X2 (delta value) set in V25^LRVER5 call above
"RTN","LRSTUF2",121,0)
 ;
"RTN","LRSTUF2",122,0)
 N LRLDT,LROK,LRTM60,LRQ,LRX,X1
"RTN","LRSTUF2",123,0)
 ;
"RTN","LRSTUF2",124,0)
 ; Calculate days back for delta check based on specimen collection date/time.
"RTN","LRSTUF2",125,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRSTUF2",126,0)
 ;
"RTN","LRSTUF2",127,0)
 S LRLDT=LRIDT,LROK=0,X1=""
"RTN","LRSTUF2",128,0)
 F  S LRLDT=$O(^LR(LRDFN,LRSS,LRLDT)) Q:LRLDT<1  D  Q:LRLDT<1!(LROK)
"RTN","LRSTUF2",129,0)
 . I LRLDT>LRTM60 S LRLDT=-1 Q
"RTN","LRSTUF2",130,0)
 . I $P(^LR(LRDFN,LRSS,LRLDT,0),U,5)'=LRSPEC!'$P(^(0),U,3) Q
"RTN","LRSTUF2",131,0)
 . I $D(^LR(LRDFN,LRSS,LRLDT,LRFLD)) S X1=$P(^LR(LRDFN,LRSS,LRLDT,LRFLD),U),LROK=1
"RTN","LRSTUF2",132,0)
 S X=$P(^LR(LRDFN,LRSS,LRIDT,LRFLD),U)
"RTN","LRSTUF2",133,0)
 S LRQ=1 D XDELTACK^LRVERA
"RTN","LRSTUF2",134,0)
 ;
"RTN","LRSTUF2",135,0)
 Q
"RTN","LRVER1")
0^1^B51164514^B49802550
"RTN","LRVER1",1,0)
LRVER1 ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;01/20/11  18:00
"RTN","LRVER1",2,0)
 ;;5.2;LAB SERVICE;**42,153,201,215,239,240,263,232,286,291,350,468,484,461**;Sep 27, 1994;Build 15
"RTN","LRVER1",3,0)
 ;
"RTN","LRVER1",4,0)
 ;5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*468; Feb 10 2016
"RTN","LRVER1",5,0)
 ;
"RTN","LRVER1",6,0)
VER ; from LRGVP
"RTN","LRVER1",7,0)
 N LRBEY
"RTN","LRVER1",8,0)
 S LRLLOC=0,LRCW=8,LROUTINE=$P(^LAB(69.9,1,3),U,2) I $D(^LRO(69,LRODT,1,LRSN,0)) S LRLLOC=$P(^(0),U,7) S:'$L(LRLLOC) LRLLOC=0 W !,$P(^LRO(69,LRODT,1,LRSN,1),U,6)
"RTN","LRVER1",9,0)
 S LRCDT=$S($D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)):$P(^(3),U,1,2),1:$P(^(0),U,3)_U),LREAL=$P(LRCDT,U,2)
"RTN","LRVER1",10,0)
 S LRCDT=+LRCDT,LRSAMP=$S($D(^LRO(69,LRODT,1,LRSN,0)):$P(^(0),U,3),1:"")
"RTN","LRVER1",11,0)
 S LRIDT=$S($P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5):$P(^(3),U,5),1:"")
"RTN","LRVER1",12,0)
 S:'LRIDT LRIDT=9999999-LRCDT
"RTN","LRVER1",13,0)
 ;
"RTN","LRVER1",14,0)
 ; Setup LRUID when called from LRGVP (group data review)
"RTN","LRVER1",15,0)
 I $G(LRUID)="" N LRUID S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LRVER1",16,0)
 ;
"RTN","LRVER1",17,0)
 D EXP
"RTN","LRVER1",18,0)
LD S LRSS="CH" ;ONLY WORKS FOR 'CH'
"RTN","LRVER1",19,0)
 S LRMETH=LRSS IF $D(^LR(LRDFN,LRSS,LRIDT,0)) S LRMETH=$P($P(^(0),U,8),";",1)
"RTN","LRVER1",20,0)
 W:$D(^LAB(62,+LRSAMP,0)) !,"Sample: ",$P(^(0),U)
"RTN","LRVER1",21,0)
 K ^TMP("LR",$J,"TMP"),LRORD,LRM
"RTN","LRVER1",22,0)
 D ^LRVER2
"RTN","LRVER1",23,0)
 K LRDL
"RTN","LRVER1",24,0)
 Q
"RTN","LRVER1",25,0)
 ;
"RTN","LRVER1",26,0)
 ;
"RTN","LRVER1",27,0)
EXP ; Get the list of tests for this ACC. from LRGVG1
"RTN","LRVER1",28,0)
 ; Do not process tests which have been "NP" (not performed)
"RTN","LRVER1",29,0)
 ; or merged to another accession
"RTN","LRVER1",30,0)
 N I,N,IX,LRNLT,T1,X
"RTN","LRVER1",31,0)
 K LRTEST,LRNAME,LRSM60
"RTN","LRVER1",32,0)
 S LRALERT=LROUTINE,N=0,I=0,IX=+$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0))
"RTN","LRVER1",33,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<.5  D
"RTN","LRVER1",34,0)
 . S X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I,0))
"RTN","LRVER1",35,0)
 . I 'X Q
"RTN","LRVER1",36,0)
 . I $P(X,"^",6)="*Not Performed"!($P(X,"^",6)="*Merged") Q
"RTN","LRVER1",37,0)
 . S N=N+1,LRTEST(N)=I,LRNLT=$S($P(X,"^",2)>50:$P(X,U,9),1:$P(X,"^"))
"RTN","LRVER1",38,0)
 . I $P(X,"^",9),$P(X,"^")'=$P(X,"^",9),'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,$P(X,"^",9))) S LRNLT=$P(X,"^",9)
"RTN","LRVER1",39,0)
 . S LRTEST(N,"P")=LRNLT_U_$$NLT(LRNLT)
"RTN","LRVER1",40,0)
 . S LRAL=$P(X,U,2)#50
"RTN","LRVER1",41,0)
 . I LRAL S LRALERT=$S(LRAL<LRALERT:LRAL,1:LRALERT)
"RTN","LRVER1",42,0)
 ;
"RTN","LRVER1",43,0)
 S LRNTN=N
"RTN","LRVER1",44,0)
 F T1=1:1:N I $D(^LAB(60,+LRTEST(T1),0)) D
"RTN","LRVER1",45,0)
 . S LRTEST(T1)=LRTEST(T1)_U_^(0)
"RTN","LRVER1",46,0)
 . S LRNAME(T1)=$P(LRTEST(T1),U,2),LRNAME(T1,+LRTEST(T1))=""
"RTN","LRVER1",47,0)
 . S:$G(^(1,IX,3)) LRSM60(+$P(LRTEST(T1),";",2))=^(3)
"RTN","LRVER1",48,0)
 . D EX1
"RTN","LRVER1",49,0)
 K IX
"RTN","LRVER1",50,0)
 N X1,X
"RTN","LRVER1",51,0)
 S X=$P($H,","),X(1)=$P($H,",",2),I=0
"RTN","LRVER1",52,0)
 F  S I=$O(LRSM60(I)) Q:'I  S X1=X-LRSM60(I)_","_X(1),LRSM60(I)=9999999-$$HTFM^XLFDT(X1)
"RTN","LRVER1",53,0)
 Q
"RTN","LRVER1",54,0)
 ;
"RTN","LRVER1",55,0)
 ;
"RTN","LRVER1",56,0)
EX1 ; Expand the list of tests to edit.
"RTN","LRVER1",57,0)
 Q:'$D(LRTEST(T1))
"RTN","LRVER1",58,0)
 S X=LRTEST(T1),^TMP("LR",$J,"VTO",+X)=$P($P(X,U,6),";",2)
"RTN","LRVER1",59,0)
 S ^TMP("LR",$J,"VTO",+X,"P")=LRTEST(T1,"P"),S1=0,J=0
"RTN","LRVER1",60,0)
 D EX2
"RTN","LRVER1",61,0)
 K S1,J
"RTN","LRVER1",62,0)
 Q
"RTN","LRVER1",63,0)
 ;
"RTN","LRVER1",64,0)
EX2 ;
"RTN","LRVER1",65,0)
 S:'$D(LRCFL) LRCFL=""
"RTN","LRVER1",66,0)
 S LRSUB=$P(X,U,6)
"RTN","LRVER1",67,0)
 I $D(^LAB(60,+X,4)),$P(^(4),"^",2) S LRCFL=LRCFL_$P(^(4),"^",2)_U
"RTN","LRVER1",68,0)
 ;
"RTN","LRVER1",69,0)
 ; If atomic test then setup and quit
"RTN","LRVER1",70,0)
 I LRSUB'="" D  Q
"RTN","LRVER1",71,0)
 . S S2=$P(LRSUB,";",2)
"RTN","LRVER1",72,0)
 . D:'$D(^TMP("LR",$J,"TMP",S2)) ORD
"RTN","LRVER1",73,0)
 ;
"RTN","LRVER1",74,0)
 ; Explode panel tests
"RTN","LRVER1",75,0)
 ; Do not process tests which have been "NP" (not performed)
"RTN","LRVER1",76,0)
 ; or merged to another accession
"RTN","LRVER1",77,0)
 N LRDISP
"RTN","LRVER1",78,0)
 S S1=S1+1,S1(S1)=X,S1(S1,1)=J
"RTN","LRVER1",79,0)
 S J=0
"RTN","LRVER1",80,0)
 F  S J=$O(^LAB(60,+S1(S1),2,J)) Q:J<1  D
"RTN","LRVER1",81,0)
 . S Y=+^(J,0),X=Y_U_^LAB(60,Y,0)
"RTN","LRVER1",82,0)
 . S LRDISP=$P($G(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),4,Y,0)),"^",6)
"RTN","LRVER1",83,0)
 . I LRDISP="*Not Performed"!(LRDISP="*Merged") Q
"RTN","LRVER1",84,0)
 . D EX2
"RTN","LRVER1",85,0)
 S X=S1(S1),J=S1(S1,1),S1=S1-1
"RTN","LRVER1",86,0)
 Q
"RTN","LRVER1",87,0)
 ;
"RTN","LRVER1",88,0)
 ;
"RTN","LRVER1",89,0)
ORD ;
"RTN","LRVER1",90,0)
 ; LRNX is set by caller
"RTN","LRVER1",91,0)
 S LRNX=+$G(LRNX)+1,LRORD(LRNX)=S2
"RTN","LRVER1",92,0)
 S LRBEY($P(LRTEST(T1),U,1),S2)=""   ; CIDC
"RTN","LRVER1",93,0)
 S ^TMP("LR",$J,"TMP",S2)=+X
"RTN","LRVER1",94,0)
 ; If panel being exploded then set parent("P" node)
"RTN","LRVER1",95,0)
 ;  to file #60 test being exploded
"RTN","LRVER1",96,0)
 I $G(LRTEST(T1,"P")) D
"RTN","LRVER1",97,0)
 . I +LRTEST(T1)'=+LRTEST(T1,"P") S ^TMP("LR",$J,"TMP",S2,"P")=LRTEST(T1,"P")_"!"_$$RNLT(+X)
"RTN","LRVER1",98,0)
 . E  S ^TMP("LR",$J,"TMP",S2,"P")=+LRTEST(T1)_U_$$NLT(+LRTEST(T1))_"!"_$$RNLT(+X)
"RTN","LRVER1",99,0)
 ;
"RTN","LRVER1",100,0)
 I $P(X,U,18) D
"RTN","LRVER1",101,0)
 . S LRM(S2)=+X
"RTN","LRVER1",102,0)
 . S LRM(S2,"P")=$G(^TMP("LR",$J,"TMP",S2,"P"))
"RTN","LRVER1",103,0)
 . S LRMX(+X)=""
"RTN","LRVER1",104,0)
 Q
"RTN","LRVER1",105,0)
 ;
"RTN","LRVER1",106,0)
 ;
"RTN","LRVER1",107,0)
NLT(X) ;
"RTN","LRVER1",108,0)
 N Y
"RTN","LRVER1",109,0)
 S Y=$S($P($G(^LAM(+$G(^LAB(60,+X,64)),0)),U,2):$P(^(0),U,2),1:"")
"RTN","LRVER1",110,0)
 Q Y
"RTN","LRVER1",111,0)
 ;
"RTN","LRVER1",112,0)
 ;
"RTN","LRVER1",113,0)
RNLT(X) ;
"RTN","LRVER1",114,0)
 I 'X Q ""
"RTN","LRVER1",115,0)
 N Y
"RTN","LRVER1",116,0)
 S Y(1)=+$P($G(^LAB(60,X,64)),U,2)
"RTN","LRVER1",117,0)
 S Y=$S($P($G(^LAM(Y(1),0)),U,2):$P(^(0),U,2),1:"")
"RTN","LRVER1",118,0)
 ; START OF CHANGE FOR LR*5.2*468
"RTN","LRVER1",119,0)
 ;I Y S $P(Y,"!",2)=$$LNC(Y,$G(LRCDEF),$G(LRSPEC))
"RTN","LRVER1",120,0)
 I Y S $P(Y,"!",2)=$$LNC(Y,$G(LRCDEF),$G(LRSPEC),X)
"RTN","LRVER1",121,0)
 ; END OF CHANGE FOR LR*5.2*468
"RTN","LRVER1",122,0)
 S $P(Y,"!",3)=$G(LRCDEF),$P(Y,"!",6)=X
"RTN","LRVER1",123,0)
 Q Y
"RTN","LRVER1",124,0)
 ;
"RTN","LRVER1",125,0)
 ;
"RTN","LRVER1",126,0)
 ; THE FOLLOWING ENTRY POINT WAS CHANGED BY PATCH LR*5.2.468 TO RECEIVE LAB TEST IEN
"RTN","LRVER1",127,0)
LNC(LRNLT,LRCDEF,LRSPEC,LRLTST) ;return the LOINC code for WKLD Code/Specimen
"RTN","LRVER1",128,0)
 ; orig entry point code
"RTN","LRVER1",129,0)
 ; (LRNLT,LRCDEF,LRSPEC) ;reture the LOINC code for WKLD Code/Specimen
"RTN","LRVER1",130,0)
 ; END OF CHANGE FOR LR*5.2*468
"RTN","LRVER1",131,0)
 ; Call with (nlt code,method suffix,test specimen)
"RTN","LRVER1",132,0)
 ; TA = Time Aspect
"RTN","LRVER1",133,0)
 ; START OF CHANGE FOR LR*5.2*468 check for new VUID LOINC in LAB(60,test,1,specimen N6,P1 (#30)
"RTN","LRVER1",134,0)
 N LRMLTF,BL,C S LRLTST=$G(LRLTST)+0,LRSPEC=+LRSPEC
"RTN","LRVER1",135,0)
 I LRSPEC&(LRLTST>0) S (LRMLTF,BL,C)="" D  I BL'="" D LNCSET Q BL
"RTN","LRVER1",136,0)
 . S LRSPECN=$S($D(^LAB(61,LRSPEC,0))#2:$$GET1^DIQ(61,LRSPEC_",",.01),1:"Unknown")
"RTN","LRVER1",137,0)
 . S LRMLTF=$$GET1^DIQ(60.01,LRSPEC_","_LRLTST,30,"I") I LRMLTF="" Q  ; does not have a vuid associated
"RTN","LRVER1",138,0)
 . S BL=$$GET1^DIQ(66.3,LRMLTF_",",.04,"I")
"RTN","LRVER1",139,0)
 . ; fix to strip off the check digit per agreement 20160920
"RTN","LRVER1",140,0)
 . I BL'="" S BL=$P(BL,"-",1)
"RTN","LRVER1",141,0)
 K LRMLTF,BL,C
"RTN","LRVER1",142,0)
 ; END OF CHANGE FOR LR*5.2*468
"RTN","LRVER1",143,0)
 ; START OF CHANGE FOR LR*5.2*484
"RTN","LRVER1",144,0)
 G LNCO
"RTN","LRVER1",145,0)
 ; new entry point for mapping routine LRLNCV to skip checking of MLTF
"RTN","LRVER1",146,0)
LNCM(LRNLT,LRCDEF,LRSPEC,LRLTST) ; entry for LRLNCV
"RTN","LRVER1",147,0)
LNCO ; skip around point for LNC
"RTN","LRVER1",148,0)
 ; END OF CHANGE FOR LR*5.2*484
"RTN","LRVER1",149,0)
 N X,N,Y,LRSPECN,VAL,ERR,TA S X=""
"RTN","LRVER1",150,0)
 Q:'LRNLT X
"RTN","LRVER1",151,0)
 K LRMSGM
"RTN","LRVER1",152,0)
 S:$G(LRCDEF)="" LRCDEF="0000"
"RTN","LRVER1",153,0)
 I $P(LRCDEF,".",2) S LRCDEF=$P(LRCDEF,".",2)
"RTN","LRVER1",154,0)
 S LRCDEF=$S($P(LRNLT,".",2):$P(LRNLT,".",2),1:LRCDEF)
"RTN","LRVER1",155,0)
 I $L(LRCDEF)'=4 S LRCDEF=LRCDEF_$E("0000",$L(LRCDEF),($L(LRCDEF-4)))
"RTN","LRVER1",156,0)
 S LRCDEF=LRCDEF_" "
"RTN","LRVER1",157,0)
 S LRSPEC=+LRSPEC
"RTN","LRVER1",158,0)
 ;Get time aspect from 61
"RTN","LRVER1",159,0)
 S TA=$$GET1^DIQ(61,LRSPEC_",",.0961,"I")
"RTN","LRVER1",160,0)
 S LRSPECN=$S($D(^LAB(61,LRSPEC,0))#2:$$GET1^DIQ(61,LRSPEC_",",.01),1:"Unknown")
"RTN","LRVER1",161,0)
 S LRNLT=$P(LRNLT,".")_"."
"RTN","LRVER1",162,0)
 ;Check for WKLD CODE_LOAD/WORK LIST method suffix
"RTN","LRVER1",163,0)
 S VAL(1)=LRNLT_LRCDEF
"RTN","LRVER1",164,0)
 S N=$$FIND1^DIC(64,"","X",.VAL,"C","","ERR")
"RTN","LRVER1",165,0)
 ;Looking for specimen specific LOINC
"RTN","LRVER1",166,0)
 I N,LRSPEC D  I X D MSG(1) Q X
"RTN","LRVER1",167,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",168,0)
 . S TA=$O(^LAM(N,5,LRSPEC,1,0)) ; get time aspect
"RTN","LRVER1",169,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",170,0)
 ;Looking LOINC default
"RTN","LRVER1",171,0)
 I N S X=$$LDEF(N) I X D MSG(2) Q X
"RTN","LRVER1",172,0)
 I LRCDEF="0000 " Q ""
"RTN","LRVER1",173,0)
 ;Looking for WKLD CODE_GENERIC suffix
"RTN","LRVER1",174,0)
 K VAL
"RTN","LRVER1",175,0)
 S VAL(1)=LRNLT_"0000 "
"RTN","LRVER1",176,0)
 S N=$$FIND1^DIC(64,"","X",.VAL,"C","","ERR")
"RTN","LRVER1",177,0)
 I 'N Q ""
"RTN","LRVER1",178,0)
 ;Looking for WKLD CODE_GENERIC specimen specific LOINC
"RTN","LRVER1",179,0)
 I LRSPEC D  I X D MSG(3) Q X
"RTN","LRVER1",180,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",181,0)
 . S TA=$O(^LAM(N,5,LRSPEC,1,0)) ; get time aspect
"RTN","LRVER1",182,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",183,0)
 ;Looking for WKLD CODE_GENERIC default LOINC
"RTN","LRVER1",184,0)
 I 'X,N S X=$$LDEF(N) I X D MSG(4)
"RTN","LRVER1",185,0)
 I 'X S X=""
"RTN","LRVER1",186,0)
 Q X
"RTN","LRVER1",187,0)
 ;
"RTN","LRVER1",188,0)
 ; START OF CHANGE FOR LR*5.2*484
"RTN","LRVER1",189,0)
LNCSET ; set up string for MLTF msg
"RTN","LRVER1",190,0)
 ;
"RTN","LRVER1",191,0)
 S:$G(LRCDEF)="" LRCDEF="0000"
"RTN","LRVER1",192,0)
 I $P(LRCDEF,".",2) S LRCDEF=$P(LRCDEF,".",2)
"RTN","LRVER1",193,0)
 S LRCDEF=$S($P(LRNLT,".",2):$P(LRNLT,".",2),1:LRCDEF)
"RTN","LRVER1",194,0)
 I $L(LRCDEF)'=4 S LRCDEF=LRCDEF_$E("0000",$L(LRCDEF),($L(LRCDEF-4)))
"RTN","LRVER1",195,0)
 S LRCDEF=LRCDEF_" "
"RTN","LRVER1",196,0)
 ;Get time aspect from 61
"RTN","LRVER1",197,0)
 S TA=$$GET1^DIQ(61,LRSPEC_",",.0961,"I")
"RTN","LRVER1",198,0)
 S LRSPECN=$S($D(^LAB(61,LRSPEC,0))#2:$$GET1^DIQ(61,LRSPEC_",",.01),1:"Unknown")
"RTN","LRVER1",199,0)
 S LRNLT=$P(LRNLT,".")_"."
"RTN","LRVER1",200,0)
 I $G(TA) S TANAME=$$GET1^DIQ(64.061,TA_",",.01,"E") ;TA Name
"RTN","LRVER1",201,0)
 S LRMSGM="1-"_LRNLT_$E(LRCDEF,1,4)_" - "_LRSPECN
"RTN","LRVER1",202,0)
 I $G(TA) S LRMSGM=LRMSGM_" Time Aspect "_TANAME
"RTN","LRVER1",203,0)
 Q
"RTN","LRVER1",204,0)
 ;
"RTN","LRVER1",205,0)
 ; END OF CHANGE FOR LR*5.2*484
"RTN","LRVER1",206,0)
LDEF(Y) ;Find the default LOINC code for WKLD CODE
"RTN","LRVER1",207,0)
 I 'Y Q ""
"RTN","LRVER1",208,0)
 S X=$$GET1^DIQ(64,Y_",",25,"I")
"RTN","LRVER1",209,0)
 I 'X S X=""
"RTN","LRVER1",210,0)
 Q X
"RTN","LRVER1",211,0)
 ;
"RTN","LRVER1",212,0)
 ;
"RTN","LRVER1",213,0)
TMPSB(LRSB) ; Get LOINC code from ^TMP("LR",$J,"TMP",LRSB,"P")
"RTN","LRVER1",214,0)
 S NODE=$G(^TMP("LR",$J,"TMP",LRSB,"P"))
"RTN","LRVER1",215,0)
 I 'NODE Q ""
"RTN","LRVER1",216,0)
 ; START CHANGE FOR LR*5.2*468
"RTN","LRVER1",217,0)
 ; S $P(NODE,"!",3)=$$LNC($P(NODE,"!",2),$G(LRCDEF),$G(LRSPEC))
"RTN","LRVER1",218,0)
 S $P(NODE,"!",3)=$$LNC($P(NODE,"!",2),$G(LRCDEF),$G(LRSPEC),$G(LRTS))
"RTN","LRVER1",219,0)
 ; END CHANGE FOR LR*5.2*468
"RTN","LRVER1",220,0)
 S $P(NODE,"!",4)=$G(LRCDEF)
"RTN","LRVER1",221,0)
 Q $P(NODE,U,2)
"RTN","LRVER1",222,0)
 ;
"RTN","LRVER1",223,0)
 ;
"RTN","LRVER1",224,0)
MSG(VAL) ;Set output message
"RTN","LRVER1",225,0)
 Q:'$G(LRMSG)
"RTN","LRVER1",226,0)
 S LRMSGM="0-No LOINC Code Defined for "_LRNLT_LRCDEF
"RTN","LRVER1",227,0)
 N TANAME
"RTN","LRVER1",228,0)
 I $G(TA) S TANAME=$$GET1^DIQ(64.061,TA_",",.01,"E") ;TA Name
"RTN","LRVER1",229,0)
 I VAL=1 S LRMSGM="1-"_LRNLT_$E(LRCDEF,1,4)_" - "_LRSPECN
"RTN","LRVER1",230,0)
 I VAL=2 S LRMSGM="2-"_LRNLT_$E(LRCDEF,1,4)_" - Default LOINC"
"RTN","LRVER1",231,0)
 I VAL=3 S LRMSGM="3-"_LRNLT_"0000 - "_LRSPECN
"RTN","LRVER1",232,0)
 I VAL=4 S LRMSGM="4-"_LRNLT_"0000 - Default LOINC"
"RTN","LRVER1",233,0)
 I $G(TA) S LRMSGM=LRMSGM_" Time Aspect "_TANAME
"RTN","LRVER1",234,0)
 W:$G(LRDBUG) !,LRMSGM,!
"RTN","LRVER1",235,0)
 Q
"RTN","LRVER3")
0^7^B75852172^B75732733
"RTN","LRVER3",1,0)
LRVER3 ;DALOI/STAFF - DATA VERIFICATION ;05/10/11  13:50
"RTN","LRVER3",2,0)
 ;;5.2;LAB SERVICE;**42,100,121,140,171,153,221,286,291,406,350,461**;Sep 27, 1994;Build 15
"RTN","LRVER3",3,0)
 ;
"RTN","LRVER3",4,0)
 D V1
"RTN","LRVER3",5,0)
 I $D(LRLOCKER)#2 L -@(LRLOCKER) K LRLOCKER
"RTN","LRVER3",6,0)
 Q
"RTN","LRVER3",7,0)
 ;
"RTN","LRVER3",8,0)
 ;
"RTN","LRVER3",9,0)
V1 ;
"RTN","LRVER3",10,0)
 ;
"RTN","LRVER3",11,0)
 I $D(LRLOCKER)#2 L -@(LRLOCKER)
"RTN","LRVER3",12,0)
 S LRLOCKER="^LR("_LRDFN_","""_LRSS_""","_LRIDT_")"
"RTN","LRVER3",13,0)
 D LOCK^DILF(LRLOCKER) ; L +@(LRLOCKER):DILOCKTM
"RTN","LRVER3",14,0)
 I '$T W !," This entry is being edited by someone else." Q
"RTN","LRVER3",15,0)
 ;
"RTN","LRVER3",16,0)
 I $D(LRGVP) S X="1-"_LRNTN D RANGE^LRWU2 G L10
"RTN","LRVER3",17,0)
 S LRALL="",LRALERT=LROUTINE,LRLCT=6
"RTN","LRVER3",18,0)
 ;
"RTN","LRVER3",19,0)
 ; List any not performed or merged tests.
"RTN","LRVER3",20,0)
 S I=0
"RTN","LRVER3",21,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<1  D
"RTN","LRVER3",22,0)
 . S LRX=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I,0))
"RTN","LRVER3",23,0)
 . I $P(LRX,"^",6)'="*Not Performed",$P(LRX,"^",6)'="*Merged" Q
"RTN","LRVER3",24,0)
 . W !,?3,$P(^LAB(60,I,0),"^"),?25," ",$P(LRX,"^",6)
"RTN","LRVER3",25,0)
 . S LRLCT=LRLCT+1 D:LRLCT>22 WT^LRVER4
"RTN","LRVER3",26,0)
 ;
"RTN","LRVER3",27,0)
 ; No tests to edit
"RTN","LRVER3",28,0)
 I LRNTN=0 D COM^LRVR4 G EXIT
"RTN","LRVER3",29,0)
 ;
"RTN","LRVER3",30,0)
 F I=1:1:LRNTN I $D(LRNAME(I)) D
"RTN","LRVER3",31,0)
 . S LRALL=LRALL_","_I W !,I,"  ",LRNAME(I)
"RTN","LRVER3",32,0)
 . I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,$O(LRNAME(I,0)),0))#2 D
"RTN","LRVER3",33,0)
 . . S LRX=^LRO(68,LRAA,1,LRAD,1,LRAN,4,$O(LRNAME(I,0)),0)
"RTN","LRVER3",34,0)
 . . S LRAL=$P(LRX,U,2)#50
"RTN","LRVER3",35,0)
 . . I $P(LRX,U,5) W ?25,$S($P(LRX,U,6)'="":$P(LRX,U,6),1:" verified")
"RTN","LRVER3",36,0)
 . . I LRAL S LRALERT=$S(LRAL<LRALERT:LRAL,1:LRALERT)
"RTN","LRVER3",37,0)
 . S LRLCT=LRLCT+1 D:LRLCT>22 WT^LRVER4
"RTN","LRVER3",38,0)
 ;
"RTN","LRVER3",39,0)
 I $D(LRALERT),LRALERT<($P(LRPARAM,U,20)+1) D
"RTN","LRVER3",40,0)
 . W !?15 W:IOST["C-" @LRVIDO
"RTN","LRVER3",41,0)
 . W "Test ordered "_$P($G(^LAB(62.05,+LRALERT,0)),U)
"RTN","LRVER3",42,0)
 . W:IOST["C-" @LRVIDOF W !,$C(7)
"RTN","LRVER3",43,0)
 ;
"RTN","LRVER3",44,0)
 S X9="" I LRNTN=1 S T1=1 G L10
"RTN","LRVER3",45,0)
V9 S LRALL=$P(LRALL,",",2,99)
"RTN","LRVER3",46,0)
 R !!,"TEST #(s) (or ""ALL""): ",X:DTIME S:'$T X=U S:X["A" X=LRALL
"RTN","LRVER3",47,0)
 I X["?" W !,"Enter for example 1,2,5-9." G V9
"RTN","LRVER3",48,0)
 Q:X[U!(X="")  D RANGE^LRWU2 G EXIT:X9="" X (X9_"S:'$D(LRNAME(T1)) X=0") G EXIT:X=0
"RTN","LRVER3",49,0)
 ;
"RTN","LRVER3",50,0)
L10 ;
"RTN","LRVER3",51,0)
 N LRCORECT S LRCORECT=0
"RTN","LRVER3",52,0)
 S LRNX=0 X (X9_"D EX1^LRVER1")
"RTN","LRVER3",53,0)
 ;
"RTN","LRVER3",54,0)
 ; Calculate days back for delta check based on specimen collection date/time.
"RTN","LRVER3",55,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRVER3",56,0)
 D V7^LRVER2
"RTN","LRVER3",57,0)
 ;
"RTN","LRVER3",58,0)
 S LRCMTDSP=$$CHKCDSP^LRVERA
"RTN","LRVER3",59,0)
 K LRSA,LRSB,LRORU3
"RTN","LRVER3",60,0)
 F LRSB=1:0 S LRSB=$O(^LR(LRDFN,LRSS,LRIDT,LRSB)) Q:LRSB<1  D
"RTN","LRVER3",61,0)
 . S LRSB(LRSB)=^(LRSB),LRSB(LRSB,"P")=$P(LRSB(LRSB),U,3)
"RTN","LRVER3",62,0)
 . I $D(LRNOVER) S LRNOVER(LRSB)=""
"RTN","LRVER3",63,0)
 S LREDIT=1
"RTN","LRVER3",64,0)
 D ^LRVER4
"RTN","LRVER3",65,0)
 ;
"RTN","LRVER3",66,0)
 ; If group data review then quit before updating results
"RTN","LRVER3",67,0)
 I $D(LRGVP) G EXIT
"RTN","LRVER3",68,0)
 ;
"RTN","LRVER3",69,0)
 I '$O(LRORD(0)) G EXIT
"RTN","LRVER3",70,0)
 ;
"RTN","LRVER3",71,0)
 ; Set reporting site in file #63.
"RTN","LRVER3",72,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRVER3",73,0)
 ;
"RTN","LRVER3",74,0)
 I '$G(LRCHG),'LRVF D
"RTN","LRVER3",75,0)
 . N LRNOW S LRNOW=$$NOW^XLFDT
"RTN","LRVER3",76,0)
 . F LRSB=1:0 S LRSB=$O(LRSB(LRSB)) Q:LRSB<1  I $P(LRSB(LRSB),"^")'="" D
"RTN","LRVER3",77,0)
 . . S $P(LRSB(LRSB),U,6)=LRNOW
"RTN","LRVER3",78,0)
 . . S ^LR(LRDFN,LRSS,LRIDT,LRSB)=LRSB(LRSB)
"RTN","LRVER3",79,0)
 ;
"RTN","LRVER3",80,0)
 I $G(LRCHG) D CHG K LRCHG,LRUP I $G(LREND) S LREND=0 D ASKXQA,EXIT Q
"RTN","LRVER3",81,0)
 ;
"RTN","LRVER3",82,0)
 I $D(LRSA),$D(LRF) D  Q
"RTN","LRVER3",83,0)
 . K LRF
"RTN","LRVER3",84,0)
 . S X=$P(^LR(LRDFN,LRSS,LRIDT,0),U,9)
"RTN","LRVER3",85,0)
 . S:$L(X)&($E(X)'["-") $P(^(0),U,9)="-"_X
"RTN","LRVER3",86,0)
 . D V11,ASKXQA
"RTN","LRVER3",87,0)
 ;
"RTN","LRVER3",88,0)
 ;G EXIT:$D(LRGVP),V11:LRVF&$D(LRSA),V1:LRVF&(LRNTN>1),EXIT:LRVF
"RTN","LRVER3",89,0)
 I $D(LRGVP) D EXIT Q
"RTN","LRVER3",90,0)
 I LRVF,$D(LRSA) D V11,ASKXQA Q
"RTN","LRVER3",91,0)
 I LRVF,LRNTN>1 D V1 Q
"RTN","LRVER3",92,0)
 I LRVF D ASKXQA,EXIT Q
"RTN","LRVER3",93,0)
 ;
"RTN","LRVER3",94,0)
NOVER ;
"RTN","LRVER3",95,0)
 I $O(LRNOVER(0)) D  G EXIT
"RTN","LRVER3",96,0)
 . N LRI,LRX
"RTN","LRVER3",97,0)
 . S LRI=1
"RTN","LRVER3",98,0)
 . F  S LRI=+$O(LRNOVER(LRI)) Q:LRI<2  D
"RTN","LRVER3",99,0)
 . . N LRX,LRERR
"RTN","LRVER3",100,0)
 . . S LRX="Test Not Reviewed: "_$$GET1^DID(63.04,LRI,"","LABEL","","LRERR")
"RTN","LRVER3",101,0)
 . . I $G(LRERR("DIERR",1)) W !,"For DATANAME "_LRI_" - "_LRERR("DIERR",1,"TEXT",1) Q
"RTN","LRVER3",102,0)
 . . W !,LRX
"RTN","LRVER3",103,0)
 . . I $D(LRSB(LRI))#2 W " = "_$P(LRSB(LRI),U)_" "_$P(LRSB(LRI),U,2)
"RTN","LRVER3",104,0)
 . W !,$$CJ^XLFSTR("The above test(s) have results already entered,",IOM)
"RTN","LRVER3",105,0)
 . W !,$$CJ^XLFSTR("but you did not select them for review.",IOM)
"RTN","LRVER3",106,0)
 . W !,$$CJ^XLFSTR(" Accession NOT approved. ",IOM),$C(7)
"RTN","LRVER3",107,0)
 . W !,$$CJ^XLFSTR("You must review all results before ANY can be released.",IOM),!!
"RTN","LRVER3",108,0)
 . W:$E(IOST,1,2)="C-" @LRVIDO
"RTN","LRVER3",109,0)
 . W $$CJ^XLFSTR("Suggest you select 'ALL' tests for verification/review. ",IOM)
"RTN","LRVER3",110,0)
 . W:$E(IOST,1,2)="C-" @LRVIDOF W !,$C(7)
"RTN","LRVER3",111,0)
 I $O(LRNOVER(0)) W !,"Has not been reviewed and have data.  Not approved.",! G EXIT
"RTN","LRVER3",112,0)
 I '$P($G(LRLABKY),U) W !,$C(7),"ENTERED BUT NOT APPROVED",! G EXIT
"RTN","LRVER3",113,0)
 I '$O(LRSB(0)) W !?5,"Nothing verified ",$C(7),! G EXIT
"RTN","LRVER3",114,0)
 N CNT S CNT=1
"RTN","LRVER3",115,0)
 ;
"RTN","LRVER3",116,0)
AGAIN ;
"RTN","LRVER3",117,0)
 R !,"Approve for release by entering your initials: ",LRINI:DTIME
"RTN","LRVER3",118,0)
 I $E(LRINI)="^" W !!?5,$C(7),"Nothing verified!" D READ G EXIT
"RTN","LRVER3",119,0)
 I LRINI'=LRUSI,$$UP^XLFSTR(LRINI)=$$UP^XLFSTR(LRUSI) S LRINI=LRUSI
"RTN","LRVER3",120,0)
 I $S($E(LRINI)="?":1,LRINI'=LRUSI&(CNT<2):1,1:0) W !,$C(7),"Please enter your correct initials" S:$E(LRINI)="?" CNT=0 S CNT=CNT+1 G AGAIN
"RTN","LRVER3",121,0)
 I LRINI'=LRUSI W !!?5,$C(7),"Nothing verified!" D READ G EXIT
"RTN","LRVER3",122,0)
 D V11
"RTN","LRVER3",123,0)
 D ASKXQA
"RTN","LRVER3",124,0)
 Q
"RTN","LRVER3",125,0)
 ;
"RTN","LRVER3",126,0)
 ;
"RTN","LRVER3",127,0)
V11 ;
"RTN","LRVER3",128,0)
 I $D(XRTL) D T0^%ZOSV ; START RESPONSE TIME LOGGING
"RTN","LRVER3",129,0)
 I +LRDPF=2&($G(LRSS)'="BB")&('$$CHKINP^LRBEBA4(LRDFN,LRODT)) D
"RTN","LRVER3",130,0)
 .D BAWRK^LRBEBA(LRODT,LRSN,1,.LRBEY,.LRTEST)
"RTN","LRVER3",131,0)
 D VER^LRVER3A
"RTN","LRVER3",132,0)
 I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D LOOK^LRCAPV1
"RTN","LRVER3",133,0)
 N LRX
"RTN","LRVER3",134,0)
 S LRX=0
"RTN","LRVER3",135,0)
 F  S LRX=$O(^TMP("LR",$J,"TMP",LRX)) Q:LRX<1  S:'$D(^LRO(68,"AC",LRDFN,LRIDT,LRX)) ^(LRX)="" I LRVF S ^(LRX)=""
"RTN","LRVER3",136,0)
 I $P($G(LRORU3),U,3),$O(LRSB(0)) D LRORU3
"RTN","LRVER3",137,0)
 I $D(XRT0) S XRTN="V11^LRVER3" D T1^%ZOSV ; STOP RESPONSE TIME LOGGING
"RTN","LRVER3",138,0)
 S LRVF=1
"RTN","LRVER3",139,0)
 Q
"RTN","LRVER3",140,0)
 ;
"RTN","LRVER3",141,0)
 ;
"RTN","LRVER3",142,0)
EXIT Q
"RTN","LRVER3",143,0)
 ;
"RTN","LRVER3",144,0)
 ;
"RTN","LRVER3",145,0)
READ ;
"RTN","LRVER3",146,0)
 N X W !!,"Press ENTER or RETURN to continue: " R X:DTIME
"RTN","LRVER3",147,0)
 Q
"RTN","LRVER3",148,0)
 ;
"RTN","LRVER3",149,0)
 ;
"RTN","LRVER3",150,0)
CHG ; Check for changes, save results and create audit trail
"RTN","LRVER3",151,0)
 N LRNOW
"RTN","LRVER3",152,0)
 S LRUP="",LRNOW=$$NOW^XLFDT
"RTN","LRVER3",153,0)
  F  S LRCHG=$O(LRSB(LRCHG)) Q:LRCHG<1  D
"RTN","LRVER3",154,0)
 . I '$D(LRSA(LRCHG)) S LRUP=1 Q
"RTN","LRVER3",155,0)
 . I $P(LRSA(LRCHG),"^")=""!($P(LRSA(LRCHG),"^")="pending") D  Q   ; Update user/release time/performing lab if results entered.
"RTN","LRVER3",156,0)
 . . S LRSA(LRCHG,3)=1
"RTN","LRVER3",157,0)
 . . S LRUP=1
"RTN","LRVER3",158,0)
 . . S $P(LRSB(LRCHG),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER3",159,0)
 . . S $P(LRSB(LRCHG),U,6)=LRNOW
"RTN","LRVER3",160,0)
 . . S $P(LRSB(LRCHG),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),$G(DUZ(2)):DUZ(2),1:"")
"RTN","LRVER3",161,0)
 . I $P(LRSA(LRCHG),"^")'=$P(LRSB(LRCHG),"^") S LRUP=1,$P(LRSA(LRCHG,2),"^")=1 ; results changed
"RTN","LRVER3",162,0)
 . I $P(LRSA(LRCHG),"^",2)'=$P(LRSB(LRCHG),"^",2) S LRUP=1,$P(LRSA(LRCHG,2),"^",2)=1 ; normalcy flag changed
"RTN","LRVER3",163,0)
 . I $P(LRSA(LRCHG),"^",5)'=$P(LRSB(LRCHG),"^",5) D  ; units/normals changed
"RTN","LRVER3",164,0)
 . . N LRX,LRY
"RTN","LRVER3",165,0)
 . . S LRX=$$UP^XLFSTR($P(LRSA(LRCHG),"^",5)),LRX=$TR(LRX,"""")
"RTN","LRVER3",166,0)
 . . S LRY=$$UP^XLFSTR($P(LRSB(LRCHG),"^",5)),LRY=$TR(LRY,"""")
"RTN","LRVER3",167,0)
 . . I LRX'=LRY S LRUP=1,$P(LRSA(LRCHG,2),"^",5)=1
"RTN","LRVER3",168,0)
 . I $D(LRSA(LRCHG,2)) D  ; Update user/release time/performing lab if results changed.
"RTN","LRVER3",169,0)
 . . S $P(LRSB(LRCHG),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER3",170,0)
 . . S $P(LRSB(LRCHG),U,6)=LRNOW
"RTN","LRVER3",171,0)
 . . S $P(LRSB(LRCHG),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),$G(DUZ(2)):DUZ(2),1:"")
"RTN","LRVER3",172,0)
 I 'LRUP S LREND=1 Q
"RTN","LRVER3",173,0)
 S LREND=0
"RTN","LRVER3",174,0)
 W !! W:IOST["C-" @LRVIDO W "Approve update of data by entering your initials: " W:IOST["C-" @LRVIDOF
"RTN","LRVER3",175,0)
 R LRINI:DTIME
"RTN","LRVER3",176,0)
 I '$T S LREND=1
"RTN","LRVER3",177,0)
 I 'LREND,LRINI'=LRUSI,$$UP^XLFSTR(LRINI)=$$UP^XLFSTR(LRUSI) S LRINI=LRUSI
"RTN","LRVER3",178,0)
 I LRINI'=LRUSI S LREND=1
"RTN","LRVER3",179,0)
 I LREND W !,$C(7),"No updating occurred ",! Q
"RTN","LRVER3",180,0)
 ;
"RTN","LRVER3",181,0)
 F LRSB=1:0 S LRSB=$O(LRSB(LRSB)) Q:LRSB<1  D
"RTN","LRVER3",182,0)
 . K:'$D(^LR(LRDFN,LRSS,LRIDT,LRSB)) LRSA(LRSB)
"RTN","LRVER3",183,0)
 . I $P(LRSB(LRSB),"^")'="" S ^LR(LRDFN,LRSS,LRIDT,LRSB)=LRSB(LRSB)
"RTN","LRVER3",184,0)
 . I $D(LRSA(LRSB,1)),$D(LRSA(LRSB,2)) D DIDLE
"RTN","LRVER3",185,0)
 ;
"RTN","LRVER3",186,0)
 W !!
"RTN","LRVER3",187,0)
 Q
"RTN","LRVER3",188,0)
 ;
"RTN","LRVER3",189,0)
 ;
"RTN","LRVER3",190,0)
DIDLE ;
"RTN","LRVER3",191,0)
 ; Check if no previous result or pending result - no audit trail needed
"RTN","LRVER3",192,0)
 I $P(LRSA(LRSB),"^")=""!($P(LRSA(LRSB),"^")="pending") Q
"RTN","LRVER3",193,0)
 ;
"RTN","LRVER3",194,0)
 S LRF=1
"RTN","LRVER3",195,0)
 L +^LR(LRDFN,LRSS,LRIDT):DILOCKTM+999
"RTN","LRVER3",196,0)
NOW ;
"RTN","LRVER3",197,0)
 N LRNOW7
"RTN","LRVER3",198,0)
 S LRNOW7=$S($G(LRNOW):LRNOW,1:$$NOW^XLFDT)
"RTN","LRVER3",199,0)
 W !
"RTN","LRVER3",200,0)
 D ^LRDIDLE0
"RTN","LRVER3",201,0)
 I 'LROK K LRSA
"RTN","LRVER3",202,0)
 L -^LR(LRDFN,LRSS,LRIDT)
"RTN","LRVER3",203,0)
 S LRCORECT=1
"RTN","LRVER3",204,0)
 Q
"RTN","LRVER3",205,0)
 ;
"RTN","LRVER3",206,0)
 ;
"RTN","LRVER3",207,0)
RONLT ; (R)esolve (O)rder NLT code from file #68 original ordered test or
"RTN","LRVER3",208,0)
 ; use default when not specified for file #60 test.
"RTN","LRVER3",209,0)
 ;
"RTN","LRVER3",210,0)
 N LR60,LRX,LRY,X
"RTN","LRVER3",211,0)
 S LR60=+LRTS,LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVER3",212,0)
 ;
"RTN","LRVER3",213,0)
 ; Try to determine order NLT from original ordered test
"RTN","LRVER3",214,0)
 F  Q:'LR60  D
"RTN","LRVER3",215,0)
 . S LRX=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LR60,0)),LR60=+$P(LRX,"^",9)
"RTN","LRVER3",216,0)
 . I LR60,LR60'=$P(LRX,"^") D
"RTN","LRVER3",217,0)
 . . S X=$$NLT^LRVER1(LR60)
"RTN","LRVER3",218,0)
 . . I X'="" S $P(LRY,"!")=X
"RTN","LRVER3",219,0)
 . I LR60=$P(LRX,"^") S LR60=0
"RTN","LRVER3",220,0)
 ;
"RTN","LRVER3",221,0)
 ; Otherwise use default for lab package
"RTN","LRVER3",222,0)
 I $P(LRY,"!")="" S $P(LRY,"!")=$P($$DEFCODE^LA7VHLU5(LRSS,LRSB,LRY,+LRSPEC),"!")
"RTN","LRVER3",223,0)
 ;
"RTN","LRVER3",224,0)
 S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVER3",225,0)
 ;
"RTN","LRVER3",226,0)
 Q
"RTN","LRVER3",227,0)
 ;
"RTN","LRVER3",228,0)
 ;
"RTN","LRVER3",229,0)
LRORU3 ;
"RTN","LRVER3",230,0)
SET ;
"RTN","LRVER3",231,0)
 N LR64,LR7V,LRDN,LROTA,LRT,LRTPN,LRTPNN,LRTYPE,X
"RTN","LRVER3",232,0)
 ;
"RTN","LRVER3",233,0)
 ; Go through LRSB array and sort results by order NLT code
"RTN","LRVER3",234,0)
 ; and put into ordered test array (LROTA).
"RTN","LRVER3",235,0)
 S LRDN=0
"RTN","LRVER3",236,0)
 F  S LRDN=$O(LRSB(LRDN)) Q:'LRDN  D
"RTN","LRVER3",237,0)
 . I $P(LRSB(LRDN),"^")="" Q
"RTN","LRVER3",238,0)
 . S LRTPNN=$P($P(LRSB(LRDN),U,3),"!"),LRT=+$G(^TMP("LR",$J,"TMP",LRDN))
"RTN","LRVER3",239,0)
 . I LRTPNN="" Q
"RTN","LRVER3",240,0)
 . S LRTYPE=$P($G(^LAB(60,LRT,0)),U,3)
"RTN","LRVER3",241,0)
 . I LRTYPE=""!("OB"'[LRTYPE) Q
"RTN","LRVER3",242,0)
 . S LROTA(LRTPNN,LRDN)=LRT
"RTN","LRVER3",243,0)
 . I $D(LRSA(LRDN,2)) S LROTA(LRTPNN,LRDN,1)="C"
"RTN","LRVER3",244,0)
 ;
"RTN","LRVER3",245,0)
 ; For each order NLT code setup call to put results into #62.49 queue
"RTN","LRVER3",246,0)
 S LRTPNN=""
"RTN","LRVER3",247,0)
 F  S LRTPNN=$O(LROTA(LRTPNN)) Q:LRTPNN=""  D
"RTN","LRVER3",248,0)
 . S LR64=+$O(^LAM("C",LRTPNN_" ",0)),LRTPN=$$GET1^DIQ(64,LR64_",",.01)
"RTN","LRVER3",249,0)
 . K LR7V
"RTN","LRVER3",250,0)
 . M LR7V=LROTA(LRTPNN)
"RTN","LRVER3",251,0)
 . D SET^LA7VMSG($P(LRORU3,U,4),$P(LRORU3,U,2),$P(LRORU3,U,5),$P(LRORU3,U,3),LRTPN,LRTPNN,LRIDT,LRSS,LRDFN,LRODT,.LR7V,"ORU")
"RTN","LRVER3",252,0)
 Q
"RTN","LRVER3",253,0)
 ;
"RTN","LRVER3",254,0)
 ;
"RTN","LRVER3",255,0)
ASKXQA ; Determine if user should be asked to send CPRS Alert
"RTN","LRVER3",256,0)
 ;
"RTN","LRVER3",257,0)
 N LRDEFAULT
"RTN","LRVER3",258,0)
 ;
"RTN","LRVER3",259,0)
 ; No CPRS alert for non-PATIENT file (#2) patients
"RTN","LRVER3",260,0)
 I +LRDPF'=2 Q
"RTN","LRVER3",261,0)
 ;
"RTN","LRVER3",262,0)
 S LRDEFAULT=$$GET^XPAR("USR^DIV^PKG","LR CH VERIFY CPRS ALERT",1,"Q")
"RTN","LRVER3",263,0)
 I LRDEFAULT>0 D ASKXQA^LR7ORB3(LRDFN,"CH",LRIDT,LRUID,LRDEFAULT)
"RTN","LRVER3",264,0)
 ;
"RTN","LRVER3",265,0)
 Q
"RTN","LRWLST11")
0^6^B74481362^B73046039
"RTN","LRWLST11",1,0)
LRWLST11 ;DALOI/STAFF - ACCESSION SETUP ;Mar 27, 2008
"RTN","LRWLST11",2,0)
 ;;5.2;LAB SERVICE;**121,128,153,202,286,331,375,350,440,461**;Sep 27, 1994;Build 15
"RTN","LRWLST11",3,0)
 ;
"RTN","LRWLST11",4,0)
ST21 ;
"RTN","LRWLST11",5,0)
 S LRTS="",LRIX=0
"RTN","LRWLST11",6,0)
 F  S LRIX=$O(LRTSTS(LRWLC,LRUNQ,LRAA,LRIX)) Q:LRIX<1  D SET Q:LRUNQ
"RTN","LRWLST11",7,0)
 ;
"RTN","LRWLST11",8,0)
 S LRNT=$$NOW^XLFDT
"RTN","LRWLST11",9,0)
 D SCDT,SLRSS
"RTN","LRWLST11",10,0)
 ;
"RTN","LRWLST11",11,0)
COMMON ; Setup 'in common' accession if not already setup unless it will be 
"RTN","LRWLST11",12,0)
 ; when tests are accessioned to the 'in common' area.
"RTN","LRWLST11",13,0)
 I +LRWLC,+LRWLC'=+LRAA,$G(^LRO(68,LRWLC,1,LRAD,1,LRAN,0))=$G(LRDFN) D
"RTN","LRWLST11",14,0)
 . I 'LRUNQ,$D(LRTSTS(LRWLC,LRUNQ,LRWLC)) Q
"RTN","LRWLST11",15,0)
 . Q:$G(^LRO(68,LRWLC,1,LRAD,1,LRAN,.1))
"RTN","LRWLST11",16,0)
 . N LRAA,LRACC,LRCDTX,LRCOMMON,LREND,LRIDT,LRNODE3,LRORDRR,LRORU3,LRQUIET,LRTJ,LRUID,X,Y
"RTN","LRWLST11",17,0)
 . S (LRQUIET,LRCOMMON)=1,LRAA=+LRWLC,LRORDRR=""
"RTN","LRWLST11",18,0)
 . S X=LRSS,LRCDTX=LRCDT
"RTN","LRWLST11",19,0)
 . N LRCDT,LRSS
"RTN","LRWLST11",20,0)
 . S LRCDT=LRCDTX,LRSS=X_U_(1+$G(LRLBLBP))
"RTN","LRWLST11",21,0)
 . D STWLN^LRWLST1 Q:$G(LREND)
"RTN","LRWLST11",22,0)
 . D ST2^LRWLST1 Q:$G(LREND)
"RTN","LRWLST11",23,0)
 . D SCDT,SLRSS
"RTN","LRWLST11",24,0)
 ;
"RTN","LRWLST11",25,0)
 Q
"RTN","LRWLST11",26,0)
 ;
"RTN","LRWLST11",27,0)
 ;
"RTN","LRWLST11",28,0)
SCDT ; Set collection, inverse and lab arrival date/times on accession
"RTN","LRWLST11",29,0)
 N FDA,LR6802,LRDIE
"RTN","LRWLST11",30,0)
 S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","LRWLST11",31,0)
 S FDA(4,68.02,LR6802,9)=LRCDT
"RTN","LRWLST11",32,0)
 S FDA(4,68.02,LR6802,10)=LREAL
"RTN","LRWLST11",33,0)
 I '$D(LRPHSET) S FDA(4,68.02,LR6802,12)=LRNT
"RTN","LRWLST11",34,0)
 S FDA(4,68.02,LR6802,13.5)=LRIDT
"RTN","LRWLST11",35,0)
 D FILE^DIE("","FDA(4)","LRDIE(4)")
"RTN","LRWLST11",36,0)
 I $D(LRDIE(4)) D MAILALRT^LRWLST12("SCDT~LRWLST11")
"RTN","LRWLST11",37,0)
 Q
"RTN","LRWLST11",38,0)
 ;
"RTN","LRWLST11",39,0)
 ;
"RTN","LRWLST11",40,0)
SLRSS ;
"RTN","LRWLST11",41,0)
 ;
"RTN","LRWLST11",42,0)
 N FDA,FDAIEN,LRDIE,LRX
"RTN","LRWLST11",43,0)
 S LRX=$S(LRSS="CH":63.04,LRSS="MI":63.05,LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,LRSS="BB":63.01,1:0)
"RTN","LRWLST11",44,0)
 S X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0)) ; change for AP
"RTN","LRWLST11",45,0)
 S H8=$S($D(LRSPEC):LRSPEC,1:X)_U_$S("CYEMSPAU"[LRSS:LRACC,1:LRACC)_U_$S(LRSS="MI":LRPRAC,1:"")_U_$S(LRSS="MI":LRLLOC,1:"")_"^^"_$S(LRSS="CH":LRPRAC,1:LRNT)_"^"_$S(LRSS="MI":$P(LRSAMP,";",1),LRSS="CH":LRLLOC,1:"")
"RTN","LRWLST11",46,0)
 ;
"RTN","LRWLST11",47,0)
 I $S(LRSS="CH":1,LRSS="MI":1,1:0) D
"RTN","LRWLST11",48,0)
 . I $G(LRORDRR)="R",+$G(LRRSITE("RSITE")) S $P(H8,U,9)=+LRRSITE("RSITE")_";DIC(4,"
"RTN","LRWLST11",49,0)
 . I $G(LROLLOC),$G(LRORDRR)'="R" S $P(H8,U,9)=LROLLOC_";SC("
"RTN","LRWLST11",50,0)
 . S $P(H8,U,10)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRWLST11",51,0)
 ;
"RTN","LRWLST11",52,0)
 D SLRSS^LRWLST1A
"RTN","LRWLST11",53,0)
 ;allow labels to print for Anatomic Pathology accessions
"RTN","LRWLST11",54,0)
 ;by commenting out the line below
"RTN","LRWLST11",55,0)
 ;(The two lines below that were already commented out.)
"RTN","LRWLST11",56,0)
 ;Q:"SPEMCY"[LRSS
"RTN","LRWLST11",57,0)
 ;S ^LR(LRDFN,LRSS,LRIDT,0)=LRCDT_U_LREAL_"^^^"_H8
"RTN","LRWLST11",58,0)
 ;I $G(LRORU3)'="" S ^LR(LRDFN,LRSS,LRIDT,"ORU")=LRORU3
"RTN","LRWLST11",59,0)
 ;
"RTN","LRWLST11",60,0)
ST3 ;
"RTN","LRWLST11",61,0)
 I LRSS="MI" D ST4
"RTN","LRWLST11",62,0)
 D LRCCOM
"RTN","LRWLST11",63,0)
 ;
"RTN","LRWLST11",64,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3),LRPR=1
"RTN","LRWLST11",65,0)
 S LRRB=0
"RTN","LRWLST11",66,0)
 I LRDPF=2 S LRRB=$$GET1^DIQ(2,DFN_",",.101),LRRB=$S(LRRB'="":LRRB,1:0)
"RTN","LRWLST11",67,0)
 ;
"RTN","LRWLST11",68,0)
 Q:$G(LRORDR)="P"
"RTN","LRWLST11",69,0)
 ;
"RTN","LRWLST11",70,0)
 I '$D(LRTJ) D  Q
"RTN","LRWLST11",71,0)
 . I $G(LRORDRR)="R",LRSS="CH",$G(LRORU3)'="",$P(LRORU3,"^")'=$P(LRORU3,"^",4) Q  ; Don't print, use label from sending facility.
"RTN","LRWLST11",72,0)
 . I $G(LRLBLBP),'$G(LRCOMMON) S LRLBL(LRAA,LRAN)=LRSN_U_LRAD_U_LRODT_U_LRRB_U_LRLLOC_U_LRACC_U_$S($D(LRORD):LRORD,1:"")
"RTN","LRWLST11",73,0)
 ;Anatomic Pathology labels do not print on collection lists
"RTN","LRWLST11",74,0)
 Q:"SPEMCY"[LRSS
"RTN","LRWLST11",75,0)
 S I=0
"RTN","LRWLST11",76,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<.5  S LRTS=^(I,0) D Z
"RTN","LRWLST11",77,0)
 ;
"RTN","LRWLST11",78,0)
 Q
"RTN","LRWLST11",79,0)
 ;
"RTN","LRWLST11",80,0)
 ;
"RTN","LRWLST11",81,0)
ST4 ;
"RTN","LRWLST11",82,0)
 ;S $P(^LR(LRDFN,LRSS,LRIDT,0),U,10)=$S($D(LRNT):LRNT,1:""),$P(^(0),U,8)=LRLLOC
"RTN","LRWLST11",83,0)
 ; Used to be LRSPCDSC,63.05,.9 (Word Processing field) replaces 63.05,.99
"RTN","LRWLST11",84,0)
 S:$D(LRCCOM) ^LR(LRDFN,LRSS,LRIDT,99)=LRCCOM
"RTN","LRWLST11",85,0)
 I '$D(LRPHSET) D
"RTN","LRWLST11",86,0)
 . N DA,DIE,DR
"RTN","LRWLST11",87,0)
 . S DIE="^LR("_LRDFN_",""MI"",",DA=LRIDT,DA(1)=LRDFN
"RTN","LRWLST11",88,0)
 . ;S DR=.9
"RTN","LRWLST11",89,0)
 . ;I '$G(LRQUIET) W:DR'=.9 !!,"Order comment:"
"RTN","LRWLST11",90,0)
 . S DR=.99_$S($L($G(LRGCOM)):"///"_LRGCOM,$L($G(LRCCOM)):"//"_LRCCOM,1:"")
"RTN","LRWLST11",91,0)
 . I '$G(LRQUIET) W:DR'=.99 !!,"Order comment:"
"RTN","LRWLST11",92,0)
 . D ^DIE
"RTN","LRWLST11",93,0)
 I '$G(LRQUIET),'$D(LRPHSET),'$D(LRGCOM) W !,"Description OK? Y//" D % G ST4:%["N"
"RTN","LRWLST11",94,0)
 K DR,DIC,DIE
"RTN","LRWLST11",95,0)
 Q
"RTN","LRWLST11",96,0)
 ;
"RTN","LRWLST11",97,0)
 ;
"RTN","LRWLST11",98,0)
ST5 S I("SUBSC")=$S(I("EDIT")[11.5:26,I("EDIT")[15:27,I("EDIT")[19:28,I("EDIT")[23:29,I("EDIT")[34:30,1:-1) Q:I("SUBSC")=-1
"RTN","LRWLST11",99,0)
 S I("PNTR")=$S(I("EDIT")[11.5:"^63.061A^",I("EDIT")[15:"^63.361A^",I("EDIT")[19:"^63.111A^",I("EDIT")[23:"^63.181A^",1:"^63.432A^")
"RTN","LRWLST11",100,0)
 S I("N")=1+$S($D(^LR(LRDFN,"MI",LRIDT,I("SUBSC"),0)):$P(^(0),U,4),1:0),^(0)=I("PNTR")_I("N")_U_I("N"),^(I("N"),0)=I("TEST")
"RTN","LRWLST11",101,0)
 Q
"RTN","LRWLST11",102,0)
 ;
"RTN","LRWLST11",103,0)
 ;
"RTN","LRWLST11",104,0)
SET ;
"RTN","LRWLST11",105,0)
 S LRTS=LRTSTS(LRWLC,LRUNQ,LRAA,LRIX)
"RTN","LRWLST11",106,0)
 S LRIN=$P(LRTS,U,3),LRORIFN=$P(LRTS,U,4),LRTSORU=+$P(LRTS,U,6),LRBACK=$P(LRTS,U,5),LRTS=$P(LRTS,U,1,2)
"RTN","LRWLST11",107,0)
 ;
"RTN","LRWLST11",108,0)
 I '$G(LRQUIET),'$D(LRPHSET) D
"RTN","LRWLST11",109,0)
 . W !,$P(^LAB(60,+LRTS,0),U)
"RTN","LRWLST11",110,0)
 . I $D(LRSPEC),LRSPEC D
"RTN","LRWLST11",111,0)
 . . S I=$S($D(^LAB(61,+LRSPEC,0)):$P(^(0),U),1:""),J=$S($D(^LAB(62,+LRSAMP,0)):$P(^(0),U),1:"")
"RTN","LRWLST11",112,0)
 . . W ?30,J W:I'=J "  ",I
"RTN","LRWLST11",113,0)
 ;
"RTN","LRWLST11",114,0)
 I '$G(LRQUIET),'$D(LRPHSET),+LRTS,$O(^LAB(60,+LRTS,7,0))>0 D
"RTN","LRWLST11",115,0)
 . N S
"RTN","LRWLST11",116,0)
 . S DIC="^LAB(60,",DA=+LRTS,DR=7
"RTN","LRWLST11",117,0)
 . D EN^DIQ H 3
"RTN","LRWLST11",118,0)
 I '$G(LRQUIET),'$D(LRPHSET),+LRTS D
"RTN","LRWLST11",119,0)
 . N S
"RTN","LRWLST11",120,0)
 . S DIC="^LAB(60,"_(+LRTS)_",3,"
"RTN","LRWLST11",121,0)
 . S DA=+$O(^LAB(60,+LRTS,3,"B",+LRSAMP,0)),DR=2
"RTN","LRWLST11",122,0)
 . I DA>0,$O(^LAB(60,+LRTS,3,DA,2,0))>0 D EN^DIQ H 3
"RTN","LRWLST11",123,0)
 ;
"RTN","LRWLST11",124,0)
 D ORUT
"RTN","LRWLST11",125,0)
 ;
"RTN","LRWLST11",126,0)
 ; Check if LEDI specimen being accessioned then
"RTN","LRWLST11",127,0)
 ;  -  update test status of order in file #69.6
"RTN","LRWLST11",128,0)
 ;  -  if LEDI AP specimen copy data accompanying order from file #69.6 to file #63
"RTN","LRWLST11",129,0)
 ;  -  update remote ordering provider from file #69.6 to ordered test multiple (#.35)
"RTN","LRWLST11",130,0)
 I $G(LRORDRR)="R",$G(LR696)>0 D
"RTN","LRWLST11",131,0)
 . D ORUT2^LRWLST12
"RTN","LRWLST11",132,0)
 . D PROVCPY^LRWLST12
"RTN","LRWLST11",133,0)
 . I "SPCYEM"[LRSS D APMOVE^LRWLST12
"RTN","LRWLST11",134,0)
 ;
"RTN","LRWLST11",135,0)
 D CAP^LRWLST12
"RTN","LRWLST11",136,0)
 K LRTSTS(LRWLC,LRUNQ,LRAA,LRIX)
"RTN","LRWLST11",137,0)
 ;
"RTN","LRWLST11",138,0)
 S ^LRO(69,LRODT,1,LRSN,2,LRIN,0)=LRTS_U_LRAD_U_LRAA_U_LRAN_"^^"_LRORIFN_"^^IP^L^^^^"_LRBACK
"RTN","LRWLST11",139,0)
 S ^LRO(69,LRODT,1,LRSN,2,"B",+LRTS,LRIN)=""
"RTN","LRWLST11",140,0)
 ;
"RTN","LRWLST11",141,0)
 ; When file 63 is enhanced to accept comments per test comments should
"RTN","LRWLST11",142,0)
 ; be put there instead of field 99.
"RTN","LRWLST11",143,0)
 I $O(^LRO(69,LRODT,1,LRSN,2,LRIN,1,0)) D
"RTN","LRWLST11",144,0)
 . I LRSS'="CH"!($D(^LR(LRDFN,LRSS,LRIDT,0))[0) Q
"RTN","LRWLST11",145,0)
 . S X=$S($D(^LR(LRDFN,LRSS,LRIDT,1,0)):$P(^(0),"^",3),1:0),I=0
"RTN","LRWLST11",146,0)
 . F  S I=$O(^LRO(69,LRODT,1,LRSN,2,LRIN,1,I)) Q:I<1  S II=^(I,0) S X=X+1,^LR(LRDFN,LRSS,LRIDT,1,X,0)=II
"RTN","LRWLST11",147,0)
 . S:X ^LR(LRDFN,LRSS,LRIDT,1,0)="^63.041^"_X_U_X
"RTN","LRWLST11",148,0)
 ;
"RTN","LRWLST11",149,0)
RUID I $G(LRORU3)'="" D
"RTN","LRWLST11",150,0)
 . N DA,DIE,DIC,DLAYGO,DR,X,Y
"RTN","LRWLST11",151,0)
 . S DLAYGO=69
"RTN","LRWLST11",152,0)
 . S DA=LRIN,DA(1)=LRSN,DA(2)=LRODT,DIC="^LRO(69,"_DA(2)_",1,"_DA(1)_",2,"
"RTN","LRWLST11",153,0)
 . S DIE=DIC,DR="13////"_$P(LRORU3,U)_";14////"_$P(LRORU3,U,2)_";15////"_$P(LRORU3,U,3)_";16////"_$P(LRORU3,U,4)_";17////"_$P(LRORU3,U,5)
"RTN","LRWLST11",154,0)
 . D ^DIE
"RTN","LRWLST11",155,0)
 Q
"RTN","LRWLST11",156,0)
 ;
"RTN","LRWLST11",157,0)
 ;
"RTN","LRWLST11",158,0)
% R %:DTIME Q:%=""!(%["N")!(%["Y")  W !,"Answer 'Y' or 'N': " G %
"RTN","LRWLST11",159,0)
 ;
"RTN","LRWLST11",160,0)
 ;
"RTN","LRWLST11",161,0)
LRCCOM ; Copy comments from file #69 to file #63 comment multiple
"RTN","LRWLST11",162,0)
 N I,LRCCOM,LRTN,X
"RTN","LRWLST11",163,0)
 S (I,LRTN,LRCCOM)=0
"RTN","LRWLST11",164,0)
 ;
"RTN","LRWLST11",165,0)
 I LRSS'="CH"!($D(^LR(LRDFN,LRSS,LRIDT,0))[0) Q
"RTN","LRWLST11",166,0)
 ;
"RTN","LRWLST11",167,0)
 ; Copy (#16) WARD COMMENTS ON SPECIMEN to file #63 comment multiple
"RTN","LRWLST11",168,0)
 F  S I=$O(^LRO(69,LRODT,1,LRSN,6,I)) Q:I<1  I $D(^(I,0)) S X=^(0),LRCCOM=LRCCOM+1,^LR(LRDFN,LRSS,LRIDT,1,LRCCOM,0)=X
"RTN","LRWLST11",169,0)
 ;
"RTN","LRWLST11",170,0)
 ; Copy expanded panels (#99) TEST COMMENTS to file #63 comment multiple
"RTN","LRWLST11",171,0)
 F  S LRTN=$O(^LRO(69,LRODT,1,LRSN,2,LRTN)) Q:'LRTN  I $D(^(LRTN,0)) S X=^(0) I $P(X,"^",8),'$P(X,"^",3),$O(^(1,0)) D
"RTN","LRWLST11",172,0)
 . S I=0
"RTN","LRWLST11",173,0)
 . F  S I=$O(^LRO(69,LRODT,1,LRSN,2,LRTN,1,I)) Q:'I  I $D(^(I,0)) S X=^(0),LRCCOM=LRCCOM+1,^LR(LRDFN,LRSS,LRIDT,1,LRCCOM,0)=X
"RTN","LRWLST11",174,0)
 ;
"RTN","LRWLST11",175,0)
 S:LRCCOM ^LR(LRDFN,LRSS,LRIDT,1,0)="^63.041^"_LRCCOM_U_LRCCOM
"RTN","LRWLST11",176,0)
 ;
"RTN","LRWLST11",177,0)
 Q
"RTN","LRWLST11",178,0)
 ;
"RTN","LRWLST11",179,0)
 ;
"RTN","LRWLST11",180,0)
Z ; Update collection list (#69.1)
"RTN","LRWLST11",181,0)
 L +^LRO(69.1,LRTE):999
"RTN","LRWLST11",182,0)
 S LRZ3=$S($D(^LRO(69.1,LRTE,1,0)):$P(^(0),U,3),1:0)
"RTN","LRWLST11",183,0)
 ;
"RTN","LRWLST11",184,0)
Z1 S LRZ3=LRZ3+1 G:$D(^LRO(69.1,LRTE,1,LRZ3)) Z1
"RTN","LRWLST11",185,0)
 S LRZO="^LRO(69.1,"_LRTE_",1,",LRZ1="69.11P",LRZB=+LRTS,LRIFN=LRZ3
"RTN","LRWLST11",186,0)
 D Z^LRWU
"RTN","LRWLST11",187,0)
 S ^LRO(69.1,LRTE,1,LRIFN,0)=+LRTS_"^"_LRLLOC_"^"_LRRB_"^"_LRDFN_"^"_LRSN_"^"_LRTJ_"^"_LRAD_"^"_LRAA_"^"_LRAN_"^"_+LROLLOC
"RTN","LRWLST11",188,0)
 S ^LRO(69.1,"LRPH",LRTE,LRLLOC,LRRB,LRDFN,LRSN)=LRTJ_"^"_LRAD_"^"_LRIFN,^(LRSN,LRAA,LRAN,+LRTS)=+LRTS
"RTN","LRWLST11",189,0)
 L -^LRO(69.1,LRTE)
"RTN","LRWLST11",190,0)
 Q
"RTN","LRWLST11",191,0)
 ;
"RTN","LRWLST11",192,0)
 ;
"RTN","LRWLST11",193,0)
ORUT ;Set ORUT/ordered test node in file 63
"RTN","LRWLST11",194,0)
 ;LRSS=subscript-required
"RTN","LRWLST11",195,0)
 ;LRIDT=inverse date-required
"RTN","LRWLST11",196,0)
 ;LRDFN=IEN file 63-required
"RTN","LRWLST11",197,0)
 ;LRTSORU=ordered test (file #60 IEN)-required
"RTN","LRWLST11",198,0)
 ;LRURG=ordered urgency
"RTN","LRWLST11",199,0)
 ;LRORIFN=CPRS order #
"RTN","LRWLST11",200,0)
 ;LRORNUM=Lab order # LR_XXXX where XXXX is a julian date
"RTN","LRWLST11",201,0)
 ;LRORTYP=ordered type
"RTN","LRWLST11",202,0)
 ;LRPROVL=ordering provider local
"RTN","LRWLST11",203,0)
 ;LRSPEC=specimen topography
"RTN","LRWLST11",204,0)
 ;LRSAMP=Collection sample
"RTN","LRWLST11",205,0)
 ;
"RTN","LRWLST11",206,0)
 N LRFDA,LRFILE,LRIEN,LRIENS,LRJUL,LRMSG,LRNLT,LRORNUM,LRORTYP
"RTN","LRWLST11",207,0)
 N LRPROVL,LRX,LRY,DIERR
"RTN","LRWLST11",208,0)
 S LRFILE=$S(LRSS="CH":63.07,LRSS="MI":63.5,LRSS="SP":63.53,LRSS="CY":63.51,LRSS="EM":63.52,1:"")
"RTN","LRWLST11",209,0)
 Q:'LRFILE!('$G(LRTSORU))
"RTN","LRWLST11",210,0)
 ;
"RTN","LRWLST11",211,0)
 S LRNLT=$$NLT^LRVER1(+LRTSORU) Q:+LRNLT<1
"RTN","LRWLST11",212,0)
 S LRORTYP=""
"RTN","LRWLST11",213,0)
 I $P($G(LRORDTYP),"^",2) S LRORTYP=$P(LRORDTYP,"^",2)
"RTN","LRWLST11",214,0)
 I LRORTYP="" D
"RTN","LRWLST11",215,0)
 . I $G(LRORDR)'="" S LRX=$S($G(LRORDR)="WC":"O",1:"L")
"RTN","LRWLST11",216,0)
 . I $G(LRORDR)="" S LRX=$S($G(LRORDRR)="R":"O",$G(LRLWC)="WC":"O",1:"L")
"RTN","LRWLST11",217,0)
 . S LRORTYP=$$FIND1^DIC(64.061,"","OX",LRX,"D","I $P(^(0),U,5)=""0065""")
"RTN","LRWLST11",218,0)
 S LRPROVL=$S($G(LRPRAC)?1.N:LRPRAC,1:"")
"RTN","LRWLST11",219,0)
 I $G(LRORD) D
"RTN","LRWLST11",220,0)
 . S LRX=$$FMDIFF^XLFDT(DT,$E(DT,1,3)_"0101",1)
"RTN","LRWLST11",221,0)
 . S LRX=LRX+1,LRJUL=$E("000",1,3-$L(LRX))_LRX
"RTN","LRWLST11",222,0)
 . S LRORNUM="LR-"_LRORD_"-"_$E(DT,1,3)_LRJUL
"RTN","LRWLST11",223,0)
 ;
"RTN","LRWLST11",224,0)
 S LRIEN="?+1"_","_LRIDT_","_LRDFN_","
"RTN","LRWLST11",225,0)
 S LRFDA(5,LRFILE,LRIEN,.01)=LRNLT
"RTN","LRWLST11",226,0)
 I $G(LRURG) S LRFDA(5,LRFILE,LRIEN,2)=LRURG
"RTN","LRWLST11",227,0)
 I $G(LRORIFN) S LRFDA(5,LRFILE,LRIEN,3)=LRORIFN
"RTN","LRWLST11",228,0)
 I $G(LRORNUM)'="" S LRFDA(5,LRFILE,LRIEN,4)=LRORNUM
"RTN","LRWLST11",229,0)
 I LRORTYP'="" S LRFDA(5,LRFILE,LRIEN,5)=LRORTYP
"RTN","LRWLST11",230,0)
 I LRPROVL'="" S LRFDA(5,LRFILE,LRIEN,6)=LRPROVL
"RTN","LRWLST11",231,0)
 I $G(LRSPEC) S LRFDA(5,LRFILE,LRIEN,8)=LRSPEC
"RTN","LRWLST11",232,0)
 I $G(LRSAMP) S LRFDA(5,LRFILE,LRIEN,9)=LRSAMP
"RTN","LRWLST11",233,0)
 I +LRTSORU S LRFDA(5,LRFILE,LRIEN,13)=+LRTSORU
"RTN","LRWLST11",234,0)
 I $P($G(LRORDTYP),"^",3) D
"RTN","LRWLST11",235,0)
 . S LRFDA(5,LRFILE,LRIEN,14)=$P(LRORDTYP,"^",3)
"RTN","LRWLST11",236,0)
 . S LRFDA(5,LRFILE,LRIEN,15)=$P(LRORDTYP,"^",4)
"RTN","LRWLST11",237,0)
 D UPDATE^DIE("","LRFDA(5)","LRIENS","LRMSG")
"RTN","LRWLST11",238,0)
 D CLEAN^DILF
"RTN","LRWLST11",239,0)
 ;
"RTN","LRWLST11",240,0)
 Q
"RTN","LRWLST11",241,0)
 ;
"RTN","LRWLST11",242,0)
 ;
"RTN","LRWLST11",243,0)
SICA ; Check accessions 'in common' and setup reference to this accession
"RTN","LRWLST11",244,0)
 N FDA,LR6802,LRDIE,LRAA
"RTN","LRWLST11",245,0)
 S LRX=$P($G(^LRO(68,LRWLC,1,LRAD,1,LRAN,.2)),"^"),LRAA=0
"RTN","LRWLST11",246,0)
 F  S LRAA=$O(LRTSTS(LRWLC,LRUNQ,LRAA)) Q:LRAA<1  I LRWLC'=LRAA D
"RTN","LRWLST11",247,0)
 . I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) Q
"RTN","LRWLST11",248,0)
 . K FDA,LRDIE
"RTN","LRWLST11",249,0)
 . S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","LRWLST11",250,0)
 . S FDA(5,68.02,LR6802,15.1)=LRX
"RTN","LRWLST11",251,0)
 . D FILE^DIE("","FDA(5)","LRDIE(5)")
"RTN","LRWLST11",252,0)
 . I $D(LRDIE(5)) D MAILALRT^LRWLST12("SICA~LRWLST11")
"RTN","LRWLST11",253,0)
 Q
"VER")
8.0^22.2
"BLD",10067,6)
^400
**END**
**END**

