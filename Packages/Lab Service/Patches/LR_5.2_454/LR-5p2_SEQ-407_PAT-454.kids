Released LR*5.2*454 SEQ #407
Extracted from mail message
**KIDS**:LR*5.2*454^

**INSTALL NAME**
LR*5.2*454
"BLD",10532,0)
LR*5.2*454^LAB SERVICE^0^3180308^y
"BLD",10532,1,0)
^^4^4^3180308^^^^
"BLD",10532,1,1,0)
This patch addresses one (1) issue in the Lab package:
"BLD",10532,1,2,0)
 
"BLD",10532,1,3,0)
Prevent error which can occur when incorrect facility identifier is 
"BLD",10532,1,4,0)
received from the Point of Care (POC) interface.
"BLD",10532,4,0)
^9.64PA^^
"BLD",10532,6.3)
13
"BLD",10532,"ABPKG")
n
"BLD",10532,"KRN",0)
^9.67PA^779.2^20
"BLD",10532,"KRN",.4,0)
.4
"BLD",10532,"KRN",.401,0)
.401
"BLD",10532,"KRN",.402,0)
.402
"BLD",10532,"KRN",.403,0)
.403
"BLD",10532,"KRN",.5,0)
.5
"BLD",10532,"KRN",.84,0)
.84
"BLD",10532,"KRN",3.6,0)
3.6
"BLD",10532,"KRN",3.8,0)
3.8
"BLD",10532,"KRN",9.2,0)
9.2
"BLD",10532,"KRN",9.8,0)
9.8
"BLD",10532,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",10532,"KRN",9.8,"NM",1,0)
LRVRPOC^^0^B85631887
"BLD",10532,"KRN",9.8,"NM","B","LRVRPOC",1)

"BLD",10532,"KRN",19,0)
19
"BLD",10532,"KRN",19.1,0)
19.1
"BLD",10532,"KRN",101,0)
101
"BLD",10532,"KRN",409.61,0)
409.61
"BLD",10532,"KRN",771,0)
771
"BLD",10532,"KRN",779.2,0)
779.2
"BLD",10532,"KRN",870,0)
870
"BLD",10532,"KRN",8989.51,0)
8989.51
"BLD",10532,"KRN",8989.52,0)
8989.52
"BLD",10532,"KRN",8994,0)
8994
"BLD",10532,"KRN","B",.4,.4)

"BLD",10532,"KRN","B",.401,.401)

"BLD",10532,"KRN","B",.402,.402)

"BLD",10532,"KRN","B",.403,.403)

"BLD",10532,"KRN","B",.5,.5)

"BLD",10532,"KRN","B",.84,.84)

"BLD",10532,"KRN","B",3.6,3.6)

"BLD",10532,"KRN","B",3.8,3.8)

"BLD",10532,"KRN","B",9.2,9.2)

"BLD",10532,"KRN","B",9.8,9.8)

"BLD",10532,"KRN","B",19,19)

"BLD",10532,"KRN","B",19.1,19.1)

"BLD",10532,"KRN","B",101,101)

"BLD",10532,"KRN","B",409.61,409.61)

"BLD",10532,"KRN","B",771,771)

"BLD",10532,"KRN","B",779.2,779.2)

"BLD",10532,"KRN","B",870,870)

"BLD",10532,"KRN","B",8989.51,8989.51)

"BLD",10532,"KRN","B",8989.52,8989.52)

"BLD",10532,"KRN","B",8994,8994)

"BLD",10532,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10532,"QUES",0)
^9.62^^
"BLD",10532,"REQB",0)
^9.611^2^2
"BLD",10532,"REQB",1,0)
LR*5.2*350^2
"BLD",10532,"REQB",2,0)
LR*5.2*468^2
"BLD",10532,"REQB","B","LR*5.2*350",1)

"BLD",10532,"REQB","B","LR*5.2*468",2)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2981028^66481
"PKG",26,22,1,"PAH",1,0)
454^3180308
"PKG",26,22,1,"PAH",1,1,0)
^^4^4^3180308
"PKG",26,22,1,"PAH",1,1,1,0)
This patch addresses one (1) issue in the Lab package:
"PKG",26,22,1,"PAH",1,1,2,0)
 
"PKG",26,22,1,"PAH",1,1,3,0)
Prevent error which can occur when incorrect facility identifier is 
"PKG",26,22,1,"PAH",1,1,4,0)
received from the Point of Care (POC) interface.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","LRVRPOC")
0^1^B85631887^B85608617
"RTN","LRVRPOC",1,0)
LRVRPOC ;DALOI/JMC - POINT OF CARE VERIFICATION ;05/11/10  16:48
"RTN","LRVRPOC",2,0)
 ;;5.2;LAB SERVICE;**290,350,468,454**;Sep 27, 1994;Build 13
"RTN","LRVRPOC",3,0)
 ;
"RTN","LRVRPOC",4,0)
 ;5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*468; Feb 10 2016
"RTN","LRVRPOC",5,0)
 ;
"RTN","LRVRPOC",6,0)
 ; Reference to DIVSET^XUSRB2 supported by DBIA #4055
"RTN","LRVRPOC",7,0)
 ; Reference to ADM^VADPT2 supported by DBIA #325
"RTN","LRVRPOC",8,0)
 ;
"RTN","LRVRPOC",9,0)
EN ; Entry Point Call with LRLL=Load/Worklist IEN
"RTN","LRVRPOC",10,0)
 ;
"RTN","LRVRPOC",11,0)
 N DIQUIET,LA76248,LA76249,LADFN,LAIEN,LAMSG,LASSN,LREND,LRERR
"RTN","LRVRPOC",12,0)
 ;
"RTN","LRVRPOC",13,0)
 S LRLL=+$G(LRLL)
"RTN","LRVRPOC",14,0)
 ;
"RTN","LRVRPOC",15,0)
 ; See if already running
"RTN","LRVRPOC",16,0)
 L +^LAH("Z",LRLL):10
"RTN","LRVRPOC",17,0)
 E  D END Q
"RTN","LRVRPOC",18,0)
 ;
"RTN","LRVRPOC",19,0)
 I '$D(^LRO(68.2,LRLL,0))#2 D END Q
"RTN","LRVRPOC",20,0)
 S LRLL(0)=^LRO(68.2,LRLL,0)
"RTN","LRVRPOC",21,0)
 ;
"RTN","LRVRPOC",22,0)
 D INIT^LRVRPOCU
"RTN","LRVRPOC",23,0)
 I LREND D  Q
"RTN","LRVRPOC",24,0)
 . D XQA^LA7UXQA(2,0,0,0,"POC: "_LAMSG,"")
"RTN","LRVRPOC",25,0)
 . D END
"RTN","LRVRPOC",26,0)
 ;
"RTN","LRVRPOC",27,0)
 S LAIEN=0
"RTN","LRVRPOC",28,0)
 F  S LAIEN=$O(^LAH(LRLL,1,LAIEN)) Q:LAIEN<1  D
"RTN","LRVRPOC",29,0)
 . I $$S^%ZTLOAD("Processing loadlist "_$P(LRLL(0),"^")_", entry #"_LAIEN) S ZTSTOP=1 Q  ; Task has been requested to stop
"RTN","LRVRPOC",30,0)
 . K LRERR
"RTN","LRVRPOC",31,0)
 . S LASSN=$P($G(^LAH(LRLL,1,LAIEN,.1,"PID","SSN")),"^")
"RTN","LRVRPOC",32,0)
 . ; Interface message number in ^LAHM(62.49
"RTN","LRVRPOC",33,0)
 . S LA76249=+$P($G(^LAH(LRLL,1,LAIEN,0)),U,13)
"RTN","LRVRPOC",34,0)
 . ; File #62.48 configuration link
"RTN","LRVRPOC",35,0)
 . S LA76248=""
"RTN","LRVRPOC",36,0)
 . I LA76249 S LA76248=$$GET1^DIQ(62.49,LA76249_",",.5,"I")
"RTN","LRVRPOC",37,0)
 . D LOOK,NEXT,ZAPALL^LRVR3(LRLL,LAIEN)
"RTN","LRVRPOC",38,0)
 D END
"RTN","LRVRPOC",39,0)
 Q
"RTN","LRVRPOC",40,0)
 ;
"RTN","LRVRPOC",41,0)
 ;
"RTN","LRVRPOC",42,0)
NEXT ; Clean up between entries
"RTN","LRVRPOC",43,0)
 D CLEAN^LRVRPOCU
"RTN","LRVRPOC",44,0)
 Q
"RTN","LRVRPOC",45,0)
 ;
"RTN","LRVRPOC",46,0)
 ;
"RTN","LRVRPOC",47,0)
END ; Clean up and quit
"RTN","LRVRPOC",48,0)
 ; Release lock
"RTN","LRVRPOC",49,0)
 L -^LAH("Z",LRLL)
"RTN","LRVRPOC",50,0)
 ;
"RTN","LRVRPOC",51,0)
 D SPALERT^LRVRPOCU,KVAR^VADPT,KILL^XUSCLEAN
"RTN","LRVRPOC",52,0)
 K ^TMP("LR",$J)
"RTN","LRVRPOC",53,0)
 I $D(ZTQUEUED),'$P($G(ZTREQ),"^") S ZTREQ="@"
"RTN","LRVRPOC",54,0)
 Q
"RTN","LRVRPOC",55,0)
 ;
"RTN","LRVRPOC",56,0)
 ;
"RTN","LRVRPOC",57,0)
LOOK ; Check for data
"RTN","LRVRPOC",58,0)
 K LRDFN,LRERR
"RTN","LRVRPOC",59,0)
 S LRODT=DT,(LREND,LRERR)=0
"RTN","LRVRPOC",60,0)
 S DFN=$$GETDFN^LRVRPOCU(LASSN)
"RTN","LRVRPOC",61,0)
 I 'DFN D  Q
"RTN","LRVRPOC",62,0)
 . S LRERR=$$CREATE^LA7LOG(101,1)
"RTN","LRVRPOC",63,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",64,0)
 S LADFN=DFN
"RTN","LRVRPOC",65,0)
 I '$D(^LAH(LRLL,1,LAIEN,0))#2 D  Q
"RTN","LRVRPOC",66,0)
 . S LRERR=$$CREATE^LA7LOG(105,1)
"RTN","LRVRPOC",67,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",68,0)
 S LRCDT=$P($G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORCDT")),"^")
"RTN","LRVRPOC",69,0)
 I LRCDT'?7N.E D  Q
"RTN","LRVRPOC",70,0)
 . S LRERR=$$CREATE^LA7LOG(104,1)
"RTN","LRVRPOC",71,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",72,0)
 S LRDFN=$$FNLRDFN(LADFN)
"RTN","LRVRPOC",73,0)
 I $S(LREND:1,LRDFN<1:1,1:0) Q
"RTN","LRVRPOC",74,0)
 S LRSSN=$S($G(^LAH(LRLL,1,LAIEN,.1,"PID","SSN")):^("SSN"),1:"???")
"RTN","LRVRPOC",75,0)
 I LRSSN'=$G(SSN(2)) D  Q
"RTN","LRVRPOC",76,0)
 . S LRERR=$$CREATE^LA7LOG(106,1)
"RTN","LRVRPOC",77,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",78,0)
 S LRTJ=""
"RTN","LRVRPOC",79,0)
 D DATA(LRLL,LAIEN)
"RTN","LRVRPOC",80,0)
 Q
"RTN","LRVRPOC",81,0)
 ;
"RTN","LRVRPOC",82,0)
 ;
"RTN","LRVRPOC",83,0)
FNLRDFN(DFN) ;Lookup/set LRDFN and define patient variables
"RTN","LRVRPOC",84,0)
 D KVAR^VADPT
"RTN","LRVRPOC",85,0)
 K ANS,ERR,LRDPF,PNM,X
"RTN","LRVRPOC",86,0)
 I $S(+DFN'=DFN:1,'$G(DFN):1,'$D(^DPT(DFN,0))#2:1,1:0) D  Q 0
"RTN","LRVRPOC",87,0)
 . S LREND=1,LRERR=$$CREATE^LA7LOG(108,1)
"RTN","LRVRPOC",88,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",89,0)
 S LRDFN=$$GET1^DIQ(2,DFN_",",63,"I","ANS","ERR")
"RTN","LRVRPOC",90,0)
 S PNM="Unknown"
"RTN","LRVRPOC",91,0)
 I LRDFN<1 S LRDFN=$$NEWPT(DFN)
"RTN","LRVRPOC",92,0)
 I LRDFN>0 D  Q LRDFN
"RTN","LRVRPOC",93,0)
 . D DEM^LRX
"RTN","LRVRPOC",94,0)
 . I $G(LREND) S LRDFN=0 Q
"RTN","LRVRPOC",95,0)
 . S VAINDT=LRCDT D ADM^VADPT2
"RTN","LRVRPOC",96,0)
 . S VAIP("D")=$S(VADMVT:LRCDT,1:LRCDT\1) D IN5PT^LRX
"RTN","LRVRPOC",97,0)
 . D DPT(DFN)
"RTN","LRVRPOC",98,0)
 . I LRERR S LREND=1,LRDFN=0
"RTN","LRVRPOC",99,0)
 Q 0
"RTN","LRVRPOC",100,0)
 ;
"RTN","LRVRPOC",101,0)
 ;
"RTN","LRVRPOC",102,0)
NEWPT(DFN) ;Set ^LR( root for patient
"RTN","LRVRPOC",103,0)
 S LRDPF="2^DPT(",X="^"_$P(LRDPF,"^",2)_DFN_",""LR"")"
"RTN","LRVRPOC",104,0)
 S LRDFN=$O(^LR("A"),-1) I 'LRDFN S LRDFN=1
"RTN","LRVRPOC",105,0)
 L +^LR(0):99
"RTN","LRVRPOC",106,0)
 D E2^LRDPA
"RTN","LRVRPOC",107,0)
 L -^LR(0)
"RTN","LRVRPOC",108,0)
 I $G(LRDFN)<1 S LREND=1,LRDFN=0
"RTN","LRVRPOC",109,0)
 Q LRDFN
"RTN","LRVRPOC",110,0)
 ;
"RTN","LRVRPOC",111,0)
 ;
"RTN","LRVRPOC",112,0)
DPT(DFN) ;
"RTN","LRVRPOC",113,0)
 N LRX,X,Y,DIC
"RTN","LRVRPOC",114,0)
 S (LRERR,LRDFN)=""
"RTN","LRVRPOC",115,0)
 S LRDFN=$$GET1^DIQ(2,DFN_",",63,"I","ANS","ERR")
"RTN","LRVRPOC",116,0)
 I 'LRDFN D END^LRDPA Q:'$G(LRDFN)
"RTN","LRVRPOC",117,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"PID","LRDFN"))
"RTN","LRVRPOC",118,0)
 I LRX,LRX'=LRDFN D  Q
"RTN","LRVRPOC",119,0)
 . S LRERR=$$CREATE^LA7LOG(103,1)
"RTN","LRVRPOC",120,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",121,0)
 ;
"RTN","LRVRPOC",122,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"PID","DFN"))
"RTN","LRVRPOC",123,0)
 I LRX,LRX'=DFN D  Q
"RTN","LRVRPOC",124,0)
 . S LRERR=$$CREATE^LA7LOG(102,1)
"RTN","LRVRPOC",125,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",126,0)
 ;
"RTN","LRVRPOC",127,0)
 ; Determine ordering provider
"RTN","LRVRPOC",128,0)
 N LRX,LRY,X,Y
"RTN","LRVRPOC",129,0)
 S LRPRAC=""
"RTN","LRVRPOC",130,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDP"))
"RTN","LRVRPOC",131,0)
 I '$P(LRX,"^",2),$P(LRX,"^")'="" D  Q:LRERR
"RTN","LRVRPOC",132,0)
 . S LRERR=$$CREATE^LA7LOG(119,1)
"RTN","LRVRPOC",133,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",134,0)
 ; Check if a valid provider
"RTN","LRVRPOC",135,0)
 I $P(LRX,"^",2) D  Q:LRERR
"RTN","LRVRPOC",136,0)
 . I $$PROVIDER^XUSER(+LRX) S LRPRAC=+LRX Q
"RTN","LRVRPOC",137,0)
 . S LRERR=$$CREATE^LA7LOG(119,1)
"RTN","LRVRPOC",138,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",139,0)
 ;
"RTN","LRVRPOC",140,0)
 ; If no ordering provider in message then check for inpatient provider.
"RTN","LRVRPOC",141,0)
 I 'LRPRAC D
"RTN","LRVRPOC",142,0)
 . I $G(VAIP(7)) S LRPRAC=+VAIP(7) Q
"RTN","LRVRPOC",143,0)
 . I $G(VAIP(18)) S LRPRAC=+VAIP(18) Q
"RTN","LRVRPOC",144,0)
 ;
"RTN","LRVRPOC",145,0)
 ; Use VADPT for inpatients - clinic enrollment for outpatient
"RTN","LRVRPOC",146,0)
 ; Check if ordering location/division from message
"RTN","LRVRPOC",147,0)
 S X=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","EOL"))
"RTN","LRVRPOC",148,0)
 S LROLLOC=+X,LROLDIV=$P(X,"^",3)
"RTN","LRVRPOC",149,0)
 ;
"RTN","LRVRPOC",150,0)
 ; Check for inpatient location if no location
"RTN","LRVRPOC",151,0)
 I 'LROLLOC,$G(VAIP(5)) D
"RTN","LRVRPOC",152,0)
 . S LROLLOC=$$GET1^DIQ(42,+VAIP(5)_",",44,"I")
"RTN","LRVRPOC",153,0)
 . I 'LROLDIV S LROLDIV=$$GET1^DIQ(44,LROLLOC_",",3,"I")
"RTN","LRVRPOC",154,0)
 ;
"RTN","LRVRPOC",155,0)
 ; Check for outpatient appointments if no location
"RTN","LRVRPOC",156,0)
 I 'LROLLOC!('LRPRAC) D VASD^LRVRPOCU
"RTN","LRVRPOC",157,0)
 ;
"RTN","LRVRPOC",158,0)
 ; If no location then log error.
"RTN","LRVRPOC",159,0)
 I 'LROLLOC D  Q
"RTN","LRVRPOC",160,0)
 . S LRERR=$$CREATE^LA7LOG(107,1)
"RTN","LRVRPOC",161,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",162,0)
 ;
"RTN","LRVRPOC",163,0)
 ; If no in/outpatient provider then check for primary care provider
"RTN","LRVRPOC",164,0)
 I 'LRPRAC S LRPRAC=+$$OUTPTPR^SDUTL3(DFN,LRCDT)
"RTN","LRVRPOC",165,0)
 ;
"RTN","LRVRPOC",166,0)
 ; If no provider - none in message, no primary care and no provider on
"RTN","LRVRPOC",167,0)
 ; outpatient encounter then log error.
"RTN","LRVRPOC",168,0)
 I 'LRPRAC D  Q
"RTN","LRVRPOC",169,0)
 . S LRERR=$$CREATE^LA7LOG(110,1)
"RTN","LRVRPOC",170,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",171,0)
 ;
"RTN","LRVRPOC",172,0)
 ; If division in message does not match location's division then reject.
"RTN","LRVRPOC",173,0)
 ; Check if division not a VAMC and parent is a VAMC and division
"RTN","LRVRPOC",174,0)
 ;  matches parent - deal with multiple medical centers within an
"RTN","LRVRPOC",175,0)
 ;  integrated system.
"RTN","LRVRPOC",176,0)
 I LROLDIV D  Q:LRERR
"RTN","LRVRPOC",177,0)
 . N DIV,OK,LRX
"RTN","LRVRPOC",178,0)
 . S DIV=$$GET1^DIQ(44,LROLLOC_",",3,"I")
"RTN","LRVRPOC",179,0)
 . I LROLDIV=DIV Q
"RTN","LRVRPOC",180,0)
 . S X=$$NNT^XUAF4(DIV),OK=0
"RTN","LRVRPOC",181,0)
 . I $P(X,"^",3)'="VAMC" D  Q:OK
"RTN","LRVRPOC",182,0)
 . . S Y=$P($$PRNT^XUAF4($P(X,"^",2)),"^"),X=$$NNT^XUAF4(Y)
"RTN","LRVRPOC",183,0)
 . . I $P(X,"^",3)="VAMC",$P(Y,"^")=LROLDIV S OK=1
"RTN","LRVRPOC",184,0)
 . S LRX=$$NNT^XUAF4(LROLDIV)
"RTN","LRVRPOC",185,0)
 . S LRERR=$$CREATE^LA7LOG(112,1)
"RTN","LRVRPOC",186,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",187,0)
 ;
"RTN","LRVRPOC",188,0)
 ; Get location abbreviation
"RTN","LRVRPOC",189,0)
 S LRLLOC=$$GET1^DIQ(44,LROLLOC_",",1,"I")
"RTN","LRVRPOC",190,0)
 I LRLLOC="" S LRLLOC="NO ABRV "_LROLLOC
"RTN","LRVRPOC",191,0)
 Q
"RTN","LRVRPOC",192,0)
 ;
"RTN","LRVRPOC",193,0)
 ;
"RTN","LRVRPOC",194,0)
DATA(LRLL,LAIEN) ;Extract results into LROT(
"RTN","LRVRPOC",195,0)
 ;
"RTN","LRVRPOC",196,0)
 K LR642,LRDATA,LRERR,LRSPECX,LRCNT,LRNOW,LROSPEC,LROT,LRSAMP,LRSB,LRSPEC,LRTRAY,LRCUP,LRSQ,LRTS,LRX,LRY,LRZ
"RTN","LRVRPOC",197,0)
 S LRSQ=LAIEN,LRDATA=1,(LR642,LRCNT,LRERR)=0,(LRDAA,LRSAMP,LRSPEC)=""
"RTN","LRVRPOC",198,0)
 S LRLL(0)=^LRO(68.2,LRLL,0)
"RTN","LRVRPOC",199,0)
 S LROSPEC=$P($G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDSPEC")),"^")
"RTN","LRVRPOC",200,0)
 I LROSPEC="" D  Q
"RTN","LRVRPOC",201,0)
 . S LRERR=$$CREATE^LA7LOG(114,1)
"RTN","LRVRPOC",202,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",203,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDNLT"))
"RTN","LRVRPOC",204,0)
 ;
"RTN","LRVRPOC",205,0)
 ; Change division to ordering division
"RTN","LRVRPOC",206,0)
 S LRDUZ(2)=$S(LROLDIV:LROLDIV,1:LRDIV)
"RTN","LRVRPOC",207,0)
 I LRDUZ(2)'=DUZ(2) D  Q:LRERR
"RTN","LRVRPOC",208,0)
 . N LA7X,LRY
"RTN","LRVRPOC",209,0)
 . S LRY=0
"RTN","LRVRPOC",210,0)
 . D DIVSET^XUSRB2(.LRY,"`"_LRDUZ(2))
"RTN","LRVRPOC",211,0)
 . I LRY Q
"RTN","LRVRPOC",212,0)
 . S LA7X="Unable to set user 'LRLAB,POC' to division "_$$GET1^DIQ(4,LRDUZ(2)_",",.01)
"RTN","LRVRPOC",213,0)
 . S LRERR=$$CREATE^LA7LOG(37,1)
"RTN","LRVRPOC",214,0)
 ;
"RTN","LRVRPOC",215,0)
 ; Ordering based on NLT codes from loadlist profile and OBR segment
"RTN","LRVRPOC",216,0)
 F I=1:1:$L(LRX,"^") S LRY=$P(LRX,"^",I) Q:LRY=""  D  Q:LRERR
"RTN","LRVRPOC",217,0)
 . I '$D(LRORDNLT(LRY,LROSPEC)) S LRERR=$$CREATE^LA7LOG(120,1) Q
"RTN","LRVRPOC",218,0)
 . S LRZ=LRORDNLT(LRY,LROSPEC)
"RTN","LRVRPOC",219,0)
 . S LRTST=$P(LRZ,"^"),LRSPEC=$P(LRZ,"^",2),LRSAMP=$P(LRZ,"^",3)
"RTN","LRVRPOC",220,0)
 . I '$D(^TMP("LR",$J,"VTO",LRTST)) S LRERR=$$CREATE^LA7LOG(118,1) Q
"RTN","LRVRPOC",221,0)
 . I 'LRSPEC S LRERR=$$CREATE^LA7LOG(114,1) Q
"RTN","LRVRPOC",222,0)
 . I 'LRSAMP S LRERR=$$CREATE^LA7LOG(115,1) Q
"RTN","LRVRPOC",223,0)
 . S LRCNT=LRCNT+1,LROT(LRSAMP,LRSPEC,LRCNT)=LRTST
"RTN","LRVRPOC",224,0)
 . I $P(LRZ,"^",4) S LR642=$P(LRZ,"^",4)
"RTN","LRVRPOC",225,0)
 . I 'LRDAA,LROLDIV,$D(^LAB(60,LRTST,8,LROLDIV,0)) S LRDAA=$P(^(0),U,2)
"RTN","LRVRPOC",226,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",227,0)
 I LRDAA<1 S LRDAA=$P(^LRO(68.2,LRLL,10,LRPROF,0),"^",2)
"RTN","LRVRPOC",228,0)
 ;
"RTN","LRVRPOC",229,0)
 ; Check for results to process
"RTN","LRVRPOC",230,0)
 I '$O(LROT(0)) D  Q
"RTN","LRVRPOC",231,0)
 . S LRERR=$$CREATE^LA7LOG(113,1)
"RTN","LRVRPOC",232,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",233,0)
 ;
"RTN","LRVRPOC",234,0)
 ; Setup workload suffix
"RTN","LRVRPOC",235,0)
 I LR642<1 S LR642=LRDFWKLD
"RTN","LRVRPOC",236,0)
 D WKLD^LRVRPOCU(LR642)
"RTN","LRVRPOC",237,0)
 ;
"RTN","LRVRPOC",238,0)
 ; Check if results have datanames/tests on this profile.
"RTN","LRVRPOC",239,0)
 F  S LRDATA=$O(^LAH(LRLL,1,LAIEN,LRDATA)) Q:LRDATA<1  D  Q:LRERR
"RTN","LRVRPOC",240,0)
 . I $P($G(^LAH(LRLL,1,LAIEN,LRDATA)),U)="" Q
"RTN","LRVRPOC",241,0)
 . S LRDATA(LRDATA)=^LAH(LRLL,1,LAIEN,LRDATA)
"RTN","LRVRPOC",242,0)
 . I $P(LRDATA(LRDATA),"^",4)<1 S LRERR=$$CREATE^LA7LOG(111,1) Q
"RTN","LRVRPOC",243,0)
 . S LRTST=+$G(LRVTS(LRDATA))
"RTN","LRVRPOC",244,0)
 . I 'LRTST S LRERR=$$CREATE^LA7LOG(116,1) Q
"RTN","LRVRPOC",245,0)
 . I '$D(^TMP("LR",$J,"VTO",LRTST)) S LRERR=$$CREATE^LA7LOG(118,1) Q
"RTN","LRVRPOC",246,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",247,0)
 ;
"RTN","LRVRPOC",248,0)
 K LRCOM
"RTN","LRVRPOC",249,0)
 S LRNT=$$NOW^XLFDT,LRORDTIM=""
"RTN","LRVRPOC",250,0)
 ;
"RTN","LRVRPOC",251,0)
 ; Setup the order in LRO(69
"RTN","LRVRPOC",252,0)
 S LRNOLABL="" ; Suppress label printing
"RTN","LRVRPOC",253,0)
 D
"RTN","LRVRPOC",254,0)
 . N LRSPEC,LRSAMP,ZTQUEUED
"RTN","LRVRPOC",255,0)
 . S ZTQUEUED=1
"RTN","LRVRPOC",256,0)
 . D ORDER^LROW2,^LRORDST
"RTN","LRVRPOC",257,0)
 ;
"RTN","LRVRPOC",258,0)
 ; Setup LRO(68
"RTN","LRVRPOC",259,0)
 D
"RTN","LRVRPOC",260,0)
 . N LRSPEC,LRSAMP
"RTN","LRVRPOC",261,0)
 . D ^LRWLST
"RTN","LRVRPOC",262,0)
 I '$G(LRAA) D  Q
"RTN","LRVRPOC",263,0)
 . S LRERR=$$CREATE^LA7LOG(109,1)
"RTN","LRVRPOC",264,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",265,0)
 ;
"RTN","LRVRPOC",266,0)
 S LRMETH="POC DEVICE"
"RTN","LRVRPOC",267,0)
 I LA76248 S LRMETH=$E($$GET1^DIQ(62.48,LA76248_",",.01),1,10)
"RTN","LRVRPOC",268,0)
 I LRMETH="" S LRMETH=$E($P(LRLL(0),U),1,5)_"(POC)"
"RTN","LRVRPOC",269,0)
 ;
"RTN","LRVRPOC",270,0)
 ; Store POC specimen id in file #63 as ordering site UID.
"RTN","LRVRPOC",271,0)
 S X=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","FID"))
"RTN","LRVRPOC",272,0)
 I $P(X,"^")'="" D
"RTN","LRVRPOC",273,0)
 . N FDA,LA7DIE
"RTN","LRVRPOC",274,0)
 . S FDA(1,63.04,LRIDT_","_LRDFN_",",.342)=$P(X,"^")
"RTN","LRVRPOC",275,0)
 . I $P(X,"^",2) S FDA(1,63.04,LRIDT_","_LRDFN_",",.32)=$P(X,"^",2)
"RTN","LRVRPOC",276,0)
 . D FILE^DIE("","FDA(1)","LA7DIE(1)")
"RTN","LRVRPOC",277,0)
 ;
"RTN","LRVRPOC",278,0)
 ; Store ^LR( data [results]
"RTN","LRVRPOC",279,0)
 S LRVF=0,LRALERT=LROUTINE,LRUSI="POC.5",LRNOW=$$NOW^XLFDT
"RTN","LRVRPOC",280,0)
 M LRSB=LRDATA
"RTN","LRVRPOC",281,0)
 D TEST^LRVR1
"RTN","LRVRPOC",282,0)
 S LRSB=0
"RTN","LRVRPOC",283,0)
 F  S LRSB=$O(LRSB(LRSB)) Q:LRSB<1  D  Q:LRERR
"RTN","LRVRPOC",284,0)
 . I '$G(^TMP("LR",$J,"TMP",LRSB,"P")) S LRERR=$$CREATE^LA7LOG(117,1) Q
"RTN","LRVRPOC",285,0)
 . ; START CHANGE FOR LR*5.2*468
"RTN","LRVRPOC",286,0)
 . S LRTS=$G(^TMP("LR",$J,"TMP",LRSB))
"RTN","LRVRPOC",287,0)
 . ; END CHANGE FOR LR*5.2*468
"RTN","LRVRPOC",288,0)
 . S LRX=$$TMPSB^LRVER1(LRSB),LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVRPOC",289,0)
 . F I=1:1:$L(LRX,"!") I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,"!",I)
"RTN","LRVRPOC",290,0)
 . S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVRPOC",291,0)
 . S LRTS=$G(^TMP("LR",$J,"TMP",LRSB))
"RTN","LRVRPOC",292,0)
 . D V25^LRVER5
"RTN","LRVRPOC",293,0)
 . S LRX=LRNGS,LRY=$P(LRSB(LRSB),U,5)
"RTN","LRVRPOC",294,0)
 . F I=1:1:$L(LRX,U) I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,U,I)
"RTN","LRVRPOC",295,0)
 . S $P(LRSB(LRSB),U,5)=LRY
"RTN","LRVRPOC",296,0)
 . S $P(LRSB(LRSB),U,6)=LRNOW
"RTN","LRVRPOC",297,0)
 . I $P(LRSB(LRSB),U,9)="" S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRVRPOC",298,0)
 . S ^LR(LRDFN,"CH",LRIDT,LRSB)=LRSB(LRSB)
"RTN","LRVRPOC",299,0)
 ;
"RTN","LRVRPOC",300,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",301,0)
 ;
"RTN","LRVRPOC",302,0)
 ; Call to set data and comments
"RTN","LRVRPOC",303,0)
 I $O(LRSB(0)) D
"RTN","LRVRPOC",304,0)
 . D LRSBCOM^LRVR4,A3^LRVR3
"RTN","LRVRPOC",305,0)
 . S LRSTORE=LRSTORE+1
"RTN","LRVRPOC",306,0)
 . I $G(LA76248) S LRSTORE(LA76248)=$G(LRSTORE(LA76248))+1
"RTN","LRVRPOC",307,0)
 ;
"RTN","LRVRPOC",308,0)
 ; Send application ack back to POC interface
"RTN","LRVRPOC",309,0)
 D SENDACK^LRVRPOCU
"RTN","LRVRPOC",310,0)
 Q
"VER")
8.0^22.2
"BLD",10532,6)
^407
**END**
**END**

