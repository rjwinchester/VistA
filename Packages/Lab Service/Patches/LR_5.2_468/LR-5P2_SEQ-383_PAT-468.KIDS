Released LR*5.2*468 SEQ #383
Extracted from mail message
**KIDS**:LR*5.2*468^

**INSTALL NAME**
LR*5.2*468
"BLD",9771,0)
LR*5.2*468^LAB SERVICE^0^3161219^y
"BLD",9771,1,0)
^^1^1^3161004^^^^
"BLD",9771,1,1,0)
See National Patch Module for details.
"BLD",9771,4,0)
^9.64PA^60^3
"BLD",9771,4,60,0)
60
"BLD",9771,4,60,2,0)
^9.641^60.28^3
"BLD",9771,4,60,2,60,0)
LABORATORY TEST  (File-top level)
"BLD",9771,4,60,2,60,1,0)
^9.6411^3^5
"BLD",9771,4,60,2,60,1,.01,0)
NAME
"BLD",9771,4,60,2,60,1,3,0)
TYPE
"BLD",9771,4,60,2,60,1,131,0)
CREATION DATE
"BLD",9771,4,60,2,60,1,132,0)
TEST INACTIVE
"BLD",9771,4,60,2,60,1,133,0)
TEST INACTIVE DATE
"BLD",9771,4,60,2,60.01,0)
SITE/SPECIMEN  (sub-file)
"BLD",9771,4,60,2,60.01,1,0)
^9.6411^.01^18
"BLD",9771,4,60,2,60.01,1,.01,0)
SITE/SPECIMEN
"BLD",9771,4,60,2,60.01,1,1,0)
REFERENCE LOW
"BLD",9771,4,60,2,60.01,1,2,0)
REFERENCE HIGH
"BLD",9771,4,60,2,60.01,1,3,0)
CRITICAL LOW
"BLD",9771,4,60,2,60.01,1,4,0)
CRITICAL HIGH
"BLD",9771,4,60,2,60.01,1,6,0)
UNITS
"BLD",9771,4,60,2,60.01,1,7,0)
TYPE OF DELTA CHECK
"BLD",9771,4,60,2,60.01,1,8,0)
DELTA VALUE
"BLD",9771,4,60,2,60.01,1,9,0)
DEFAULT VALUE
"BLD",9771,4,60,2,60.01,1,9.2,0)
THERAPEUTIC LOW
"BLD",9771,4,60,2,60.01,1,9.3,0)
THERAPEUTIC HIGH
"BLD",9771,4,60,2,60.01,1,13,0)
USE FOR REFERENCE TESTING
"BLD",9771,4,60,2,60.01,1,30,0)
MLTF NUMBER
"BLD",9771,4,60,2,60.01,1,31,0)
MLTF NAME
"BLD",9771,4,60,2,60.01,1,32,0)
RESULT/SPECIMEN INACTIVE
"BLD",9771,4,60,2,60.01,1,33,0)
RESULT/SPECIMEN INACTIVE DATE
"BLD",9771,4,60,2,60.01,1,34,0)
EXCEPTION FLAG
"BLD",9771,4,60,2,60.01,1,35,0)
SPECIMEN CREATE DATE
"BLD",9771,4,60,2,60.28,0)
AUDIT DATE/TIME  (sub-file)
"BLD",9771,4,60,2,60.28,1,0)
^9.6411^^0
"BLD",9771,4,60,222)
y^n^p^^^^n^^n
"BLD",9771,4,60,223)

"BLD",9771,4,60,224)

"BLD",9771,4,66.3,0)
66.3
"BLD",9771,4,66.3,222)
y^y^f^^n^^n^a^n
"BLD",9771,4,66.3,224)

"BLD",9771,4,66.4,0)
66.4
"BLD",9771,4,66.4,222)
y^y^f^^^^n
"BLD",9771,4,"APDD",60,60)

"BLD",9771,4,"APDD",60,60,.01)

"BLD",9771,4,"APDD",60,60,3)

"BLD",9771,4,"APDD",60,60,131)

"BLD",9771,4,"APDD",60,60,132)

"BLD",9771,4,"APDD",60,60,133)

"BLD",9771,4,"APDD",60,60.01)

"BLD",9771,4,"APDD",60,60.01,.01)

"BLD",9771,4,"APDD",60,60.01,1)

"BLD",9771,4,"APDD",60,60.01,2)

"BLD",9771,4,"APDD",60,60.01,3)

"BLD",9771,4,"APDD",60,60.01,4)

"BLD",9771,4,"APDD",60,60.01,6)

"BLD",9771,4,"APDD",60,60.01,7)

"BLD",9771,4,"APDD",60,60.01,8)

"BLD",9771,4,"APDD",60,60.01,9)

"BLD",9771,4,"APDD",60,60.01,9.2)

"BLD",9771,4,"APDD",60,60.01,9.3)

"BLD",9771,4,"APDD",60,60.01,13)

"BLD",9771,4,"APDD",60,60.01,30)

"BLD",9771,4,"APDD",60,60.01,31)

"BLD",9771,4,"APDD",60,60.01,32)

"BLD",9771,4,"APDD",60,60.01,33)

"BLD",9771,4,"APDD",60,60.01,34)

"BLD",9771,4,"APDD",60,60.01,35)

"BLD",9771,4,"APDD",60,60.28)

"BLD",9771,4,"B",60,60)

"BLD",9771,4,"B",66.3,66.3)

"BLD",9771,4,"B",66.4,66.4)

"BLD",9771,6.3)
64
"BLD",9771,"ABPKG")
n
"BLD",9771,"INI")

"BLD",9771,"INID")
n^n^n
"BLD",9771,"INIT")
EN^LR664L
"BLD",9771,"KRN",0)
^9.67PA^779.2^20
"BLD",9771,"KRN",.4,0)
.4
"BLD",9771,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9771,"KRN",.401,0)
.401
"BLD",9771,"KRN",.402,0)
.402
"BLD",9771,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",9771,"KRN",.402,"NM",1,0)
MANAGED ITEMS EDIT    FILE #66.4^66.4^0
"BLD",9771,"KRN",.402,"NM",2,0)
LAB ENTRY NTRT    FILE #60^60^0
"BLD",9771,"KRN",.402,"NM",3,0)
LAB NTRT ASSOCIATE    FILE #60^60^0
"BLD",9771,"KRN",.402,"NM","B","LAB ENTRY NTRT    FILE #60",2)

"BLD",9771,"KRN",.402,"NM","B","LAB NTRT ASSOCIATE    FILE #60",3)

"BLD",9771,"KRN",.402,"NM","B","MANAGED ITEMS EDIT    FILE #66.4",1)

"BLD",9771,"KRN",.403,0)
.403
"BLD",9771,"KRN",.5,0)
.5
"BLD",9771,"KRN",.84,0)
.84
"BLD",9771,"KRN",3.6,0)
3.6
"BLD",9771,"KRN",3.8,0)
3.8
"BLD",9771,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",9771,"KRN",3.8,"NM",1,0)
LMI^^0
"BLD",9771,"KRN",3.8,"NM","B","LMI",1)

"BLD",9771,"KRN",9.2,0)
9.2
"BLD",9771,"KRN",9.8,0)
9.8
"BLD",9771,"KRN",9.8,"NM",0)
^9.68A^25^15
"BLD",9771,"KRN",9.8,"NM",6,0)
LR664L^^0^B96398079
"BLD",9771,"KRN",9.8,"NM",12,0)
LRSRVR^^0^B19202402
"BLD",9771,"KRN",9.8,"NM",13,0)
LRMLED^^0^B152483182
"BLD",9771,"KRN",9.8,"NM",14,0)
LRMLRCP^^0^B20138748
"BLD",9771,"KRN",9.8,"NM",15,0)
LRMLWT^^0^B37343726
"BLD",9771,"KRN",9.8,"NM",16,0)
LRSRVR9^^0^B122473152
"BLD",9771,"KRN",9.8,"NM",17,0)
LRSRVR9A^^0^B42448804
"BLD",9771,"KRN",9.8,"NM",18,0)
LRMLPRG^^0^B3125134
"BLD",9771,"KRN",9.8,"NM",19,0)
LRMLREI^^0^B21744522
"BLD",9771,"KRN",9.8,"NM",20,0)
LRLNCV^^0^B8729767
"BLD",9771,"KRN",9.8,"NM",21,0)
LRVER1^^0^B40561385
"BLD",9771,"KRN",9.8,"NM",22,0)
LRMLEDA^^0^B133294860
"BLD",9771,"KRN",9.8,"NM",23,0)
LRMLACM^^0^B18901427
"BLD",9771,"KRN",9.8,"NM",24,0)
LRMLRIV^^0^B17383350
"BLD",9771,"KRN",9.8,"NM",25,0)
LRVRPOC^^0^B85608617
"BLD",9771,"KRN",9.8,"NM","B","LR664L",6)

"BLD",9771,"KRN",9.8,"NM","B","LRLNCV",20)

"BLD",9771,"KRN",9.8,"NM","B","LRMLACM",23)

"BLD",9771,"KRN",9.8,"NM","B","LRMLED",13)

"BLD",9771,"KRN",9.8,"NM","B","LRMLEDA",22)

"BLD",9771,"KRN",9.8,"NM","B","LRMLPRG",18)

"BLD",9771,"KRN",9.8,"NM","B","LRMLRCP",14)

"BLD",9771,"KRN",9.8,"NM","B","LRMLREI",19)

"BLD",9771,"KRN",9.8,"NM","B","LRMLRIV",24)

"BLD",9771,"KRN",9.8,"NM","B","LRMLWT",15)

"BLD",9771,"KRN",9.8,"NM","B","LRSRVR",12)

"BLD",9771,"KRN",9.8,"NM","B","LRSRVR9",16)

"BLD",9771,"KRN",9.8,"NM","B","LRSRVR9A",17)

"BLD",9771,"KRN",9.8,"NM","B","LRVER1",21)

"BLD",9771,"KRN",9.8,"NM","B","LRVRPOC",25)

"BLD",9771,"KRN",19,0)
19
"BLD",9771,"KRN",19,"NM",0)
^9.68A^10^10
"BLD",9771,"KRN",19,"NM",1,0)
LR NDS ASSOCIATE TEST TO MLTF^^0
"BLD",9771,"KRN",19,"NM",2,0)
LR NDS AUDIT PURGE^^0
"BLD",9771,"KRN",19,"NM",3,0)
LR NDS FILE 60 AUDIT PRINT^^0
"BLD",9771,"KRN",19,"NM",4,0)
LR NDS LIM MENU^^0
"BLD",9771,"KRN",19,"NM",5,0)
LR NDS MANAGED ITEMS EDIT^^0
"BLD",9771,"KRN",19,"NM",6,0)
LR NDS MLTF EXTRACT^^0
"BLD",9771,"KRN",19,"NM",7,0)
LR NDS SPECIMENS W/O VUIDS^^0
"BLD",9771,"KRN",19,"NM",8,0)
LR NDS WALK ASSOCIATE^^0
"BLD",9771,"KRN",19,"NM",9,0)
LR NDS TESTS W/INACTIVE VUIDS^^0
"BLD",9771,"KRN",19,"NM",10,0)
LRLIAISON^^2
"BLD",9771,"KRN",19,"NM","B","LR NDS ASSOCIATE TEST TO MLTF",1)

"BLD",9771,"KRN",19,"NM","B","LR NDS AUDIT PURGE",2)

"BLD",9771,"KRN",19,"NM","B","LR NDS FILE 60 AUDIT PRINT",3)

"BLD",9771,"KRN",19,"NM","B","LR NDS LIM MENU",4)

"BLD",9771,"KRN",19,"NM","B","LR NDS MANAGED ITEMS EDIT",5)

"BLD",9771,"KRN",19,"NM","B","LR NDS MLTF EXTRACT",6)

"BLD",9771,"KRN",19,"NM","B","LR NDS SPECIMENS W/O VUIDS",7)

"BLD",9771,"KRN",19,"NM","B","LR NDS TESTS W/INACTIVE VUIDS",9)

"BLD",9771,"KRN",19,"NM","B","LR NDS WALK ASSOCIATE",8)

"BLD",9771,"KRN",19,"NM","B","LRLIAISON",10)

"BLD",9771,"KRN",19.1,0)
19.1
"BLD",9771,"KRN",101,0)
101
"BLD",9771,"KRN",409.61,0)
409.61
"BLD",9771,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9771,"KRN",771,0)
771
"BLD",9771,"KRN",779.2,0)
779.2
"BLD",9771,"KRN",870,0)
870
"BLD",9771,"KRN",8989.51,0)
8989.51
"BLD",9771,"KRN",8989.52,0)
8989.52
"BLD",9771,"KRN",8994,0)
8994
"BLD",9771,"KRN","B",.4,.4)

"BLD",9771,"KRN","B",.401,.401)

"BLD",9771,"KRN","B",.402,.402)

"BLD",9771,"KRN","B",.403,.403)

"BLD",9771,"KRN","B",.5,.5)

"BLD",9771,"KRN","B",.84,.84)

"BLD",9771,"KRN","B",3.6,3.6)

"BLD",9771,"KRN","B",3.8,3.8)

"BLD",9771,"KRN","B",9.2,9.2)

"BLD",9771,"KRN","B",9.8,9.8)

"BLD",9771,"KRN","B",19,19)

"BLD",9771,"KRN","B",19.1,19.1)

"BLD",9771,"KRN","B",101,101)

"BLD",9771,"KRN","B",409.61,409.61)

"BLD",9771,"KRN","B",771,771)

"BLD",9771,"KRN","B",779.2,779.2)

"BLD",9771,"KRN","B",870,870)

"BLD",9771,"KRN","B",8989.51,8989.51)

"BLD",9771,"KRN","B",8989.52,8989.52)

"BLD",9771,"KRN","B",8994,8994)

"BLD",9771,"PRE")

"BLD",9771,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9771,"QUES",0)
^9.62^^
"BLD",9771,"REQB",0)
^9.611^2^2
"BLD",9771,"REQB",1,0)
HDI*1.0*15^2
"BLD",9771,"REQB",2,0)
XU*8.0*665^2
"BLD",9771,"REQB","B","HDI*1.0*15",1)

"BLD",9771,"REQB","B","XU*8.0*665",2)

"FIA",60)
LABORATORY TEST
"FIA",60,0)
^LAB(60,
"FIA",60,0,0)
60I
"FIA",60,0,1)
y^n^p^^^^n^^n
"FIA",60,0,10)

"FIA",60,0,11)

"FIA",60,0,"RLRO")

"FIA",60,0,"VR")
5.2^LR
"FIA",60,60)
1
"FIA",60,60,.01)

"FIA",60,60,3)

"FIA",60,60,100)

"FIA",60,60,131)

"FIA",60,60,132)

"FIA",60,60,133)

"FIA",60,60,140)

"FIA",60,60.01)
1
"FIA",60,60.01,.01)

"FIA",60,60.01,1)

"FIA",60,60.01,2)

"FIA",60,60.01,3)

"FIA",60,60.01,4)

"FIA",60,60.01,6)

"FIA",60,60.01,7)

"FIA",60,60.01,8)

"FIA",60,60.01,9)

"FIA",60,60.01,9.2)

"FIA",60,60.01,9.3)

"FIA",60,60.01,13)

"FIA",60,60.01,30)

"FIA",60,60.01,31)

"FIA",60,60.01,32)

"FIA",60,60.01,33)

"FIA",60,60.01,34)

"FIA",60,60.01,35)

"FIA",60,60.28)
0
"FIA",66.3)
MASTER LABORATORY TEST
"FIA",66.3,0)
^LRMLTF(
"FIA",66.3,0,0)
66.3I
"FIA",66.3,0,1)
y^y^f^^n^^n^a^n
"FIA",66.3,0,10)

"FIA",66.3,0,11)

"FIA",66.3,0,"RLRO")

"FIA",66.3,0,"VR")
5.2^LR
"FIA",66.3,66.3)
0
"FIA",66.3,66.399)
0
"FIA",66.4)
LAB MLTF MANAGED ITEMS
"FIA",66.4,0)
^LAB(66.4,
"FIA",66.4,0,0)
66.4P
"FIA",66.4,0,1)
y^y^f^^^^n
"FIA",66.4,0,10)

"FIA",66.4,0,11)

"FIA",66.4,0,"RLRO")

"FIA",66.4,0,"VR")
5.2^LR
"FIA",66.4,66.4)
0
"INIT")
EN^LR664L
"IX",60,60,"AMLTFEDITS",0)
60^AMLTFEDITS^Track edits for MLTF NTRT selected items.^MU^^R^^I^60^^^^^A
"IX",60,60,"AMLTFEDITS",.1,0)
^^4^4^3161117^^^^
"IX",60,60,"AMLTFEDITS",.1,1,0)
This is to track edits to selected fields in support of the MLTF NTRT process.
"IX",60,60,"AMLTFEDITS",.1,2,0)
The items tracked by this cross reference are: CREATION DATE (131),
"IX",60,60,"AMLTFEDITS",.1,3,0)
TEST INACTIVE DATE (133), and TYPE (3). The edits will be stored in the 60.28
"IX",60,60,"AMLTFEDITS",.1,4,0)
 AUDIT DATE/TIME multiple (140).
"IX",60,60,"AMLTFEDITS",1)
D BED^LRMLED(DA)
"IX",60,60,"AMLTFEDITS",1.4)
S X=$S('$D(LRMLTFREC):1,1:0)
"IX",60,60,"AMLTFEDITS",2)
Q
"IX",60,60,"AMLTFEDITS",2.4)
S X=0
"IX",60,60,"AMLTFEDITS",11.1,0)
^.114IA^3^3
"IX",60,60,"AMLTFEDITS",11.1,1,0)
1^F^60^3^^^F
"IX",60,60,"AMLTFEDITS",11.1,2,0)
2^F^60^131^^^F
"IX",60,60,"AMLTFEDITS",11.1,3,0)
3^F^60^133^^^F
"IX",60,60.01,"AMLTFEDIT",0)
60.01^AMLTFEDIT^This tracks the edits for select MLTF NTRT items.^MU^^R^^I^60.01^^^^^A
"IX",60,60.01,"AMLTFEDIT",.1,0)
^^2^2^3161117^^^
"IX",60,60.01,"AMLTFEDIT",.1,1,0)
This tracks the edits for site specimen fields (30, 33, 34, and 35)
"IX",60,60.01,"AMLTFEDIT",.1,2,0)
this is to update the AUDIT DATE/TIME multiple 140
"IX",60,60.01,"AMLTFEDIT",1)
D SED^LRMLED(DA,$G(DA(1)))
"IX",60,60.01,"AMLTFEDIT",1.4)
S X=$S('$D(LRMLTFREC):1,1:0)
"IX",60,60.01,"AMLTFEDIT",2)
Q
"IX",60,60.01,"AMLTFEDIT",2.4)
S X=0
"IX",60,60.01,"AMLTFEDIT",11.1,0)
^.114IA^4^4
"IX",60,60.01,"AMLTFEDIT",11.1,1,0)
1^F^60.01^30^^^F
"IX",60,60.01,"AMLTFEDIT",11.1,2,0)
2^F^60.01^33^^^F
"IX",60,60.01,"AMLTFEDIT",11.1,3,0)
3^F^60.01^34^^^F
"IX",60,60.01,"AMLTFEDIT",11.1,4,0)
4^F^60.01^35^^^F
"IX",60,60.01,"AMLTFNTRT",0)
60.01^AMLTFNTRT^If a specimen is created call NTRT.^MU^^R^^I^60.01^^^^^A
"IX",60,60.01,"AMLTFNTRT",.1,0)
^^1^1^3160802^^
"IX",60,60.01,"AMLTFNTRT",.1,1,0)
If a specimen is created call NTRT if it does not have a link to the MLTF
"IX",60,60.01,"AMLTFNTRT",1)
D EN^LRMLED(DA,DA(1))
"IX",60,60.01,"AMLTFNTRT",1.4)
S X=$S('$D(LRMLTFREC):1,1:0)
"IX",60,60.01,"AMLTFNTRT",2)
Q
"IX",60,60.01,"AMLTFNTRT",2.4)
S X=0
"IX",60,60.01,"AMLTFNTRT",11.1,0)
^.114IA^12^12
"IX",60,60.01,"AMLTFNTRT",11.1,1,0)
1^F^60.01^1^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,2,0)
2^F^60.01^2^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,3,0)
3^F^60.01^3^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,4,0)
4^F^60.01^4^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,5,0)
5^F^60.01^6^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,6,0)
6^F^60.01^7^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,7,0)
7^F^60.01^8^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,8,0)
8^F^60.01^9^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,9,0)
9^F^60.01^9.2^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,10,0)
10^F^60.01^9.3^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,11,0)
11^F^60.01^13^^^F
"IX",60,60.01,"AMLTFNTRT",11.1,12,0)
12^F^60.01^35^^^F
"IX",60,60.01,"ASPECCR",0)
60.01^ASPECCR^Cross Reference for the Specimen create date^MU^^F^^I^60.01^^^^^A
"IX",60,60.01,"ASPECCR",.1,0)
^^2^2^3160908^^
"IX",60,60.01,"ASPECCR",.1,1,0)
This cross reference is to set the specimen create date if this is a new
"IX",60,60.01,"ASPECCR",.1,2,0)
specimen for the test.
"IX",60,60.01,"ASPECCR",1)
D NSP^LRMLED(DA,$G(DA(1)))
"IX",60,60.01,"ASPECCR",1.4)
S X=$S('$D(LRMLTFREC):1,1:0)
"IX",60,60.01,"ASPECCR",2)
Q
"IX",60,60.01,"ASPECCR",2.4)
S X=0
"IX",60,60.01,"ASPECCR",11.1,0)
^.114IA^1^1
"IX",60,60.01,"ASPECCR",11.1,1,0)
1^F^60.01^.01^^^F
"IX",60,60.01,"ASPECCR",11.1,1,3)

"IX",66.3,66.3,"AMASTERVUID",0)
66.3^AMASTERVUID^This cross-reference identifies the Master entry for a VUID.^R^^R^IR^I^66.3^^^^^S
"IX",66.3,66.3,"AMASTERVUID",.1,0)
^^3^3^3160422^^
"IX",66.3,66.3,"AMASTERVUID",.1,1,0)
If multiple entries have the same VUID in the file, this cross-reference 
"IX",66.3,66.3,"AMASTERVUID",.1,2,0)
can be used to identify the master entry for a VUID associated with a 
"IX",66.3,66.3,"AMASTERVUID",.1,3,0)
Term/Concept.
"IX",66.3,66.3,"AMASTERVUID",1)
S ^LRMLTF("AMASTERVUID",$E(X(1),1,30),X(2),DA)=""
"IX",66.3,66.3,"AMASTERVUID",2)
K ^LRMLTF("AMASTERVUID",$E(X(1),1,30),X(2),DA)
"IX",66.3,66.3,"AMASTERVUID",2.5)
K ^LRMLTF("AMASTERVUID")
"IX",66.3,66.3,"AMASTERVUID",11.1,0)
^.114IA^2^2
"IX",66.3,66.3,"AMASTERVUID",11.1,1,0)
1^F^66.3^99.99^30^1^F
"IX",66.3,66.3,"AMASTERVUID",11.1,2,0)
2^F^66.3^99.98^^2^F
"KRN",.402,2764,-1)
0^3
"KRN",.402,2764,0)
LAB NTRT ASSOCIATE^3160224.1336^@^60^^@^3160528
"KRN",.402,2764,"DR",1,60)
100;
"KRN",.402,2764,"DR",2,60.01)
30;
"KRN",.402,2765,-1)
0^2
"KRN",.402,2765,0)
LAB ENTRY NTRT^3160403.1713^@^60^^@^3160404
"KRN",.402,2765,"DIAB",1,1,60.02,0)
ALL
"KRN",.402,2765,"DIAB",1,1,60.03,0)
ALL
"KRN",.402,2765,"DIAB",1,1,60.0505,0)
ALL
"KRN",.402,2765,"DIAB",1,1,60.1,0)
ALL
"KRN",.402,2765,"DIAB",1,1,60.11,0)
ALL
"KRN",.402,2765,"DIAB",1,1,60.12,0)
ALL
"KRN",.402,2765,"DIAB",1,1,60.13,0)
ALL
"KRN",.402,2765,"DIAB",1,2,60.06,0)
ALL
"KRN",.402,2765,"DIAB",1,2,60.196,0)
ALL
"KRN",.402,2765,"DIAB",1,2,60.2,0)
ALL
"KRN",.402,2765,"DR",1,60)
.01;1;2;3;4;5;6;7;8;9;10;14;15;16;17;18;51;52;53;54;55;56;64;64.1;64.2;98;99.1;99.2;100;110;200;300;310;320;400;412;500;500.1;501;503;504;505;506;507;508;518000;518999;131;133;
"KRN",.402,2765,"DR",2,60.01)
.01;1;2;3;4;5.5;6;7;8;9;9.2;9.3;10;13;20;96;95.3;30;33;35;
"KRN",.402,2765,"DR",2,60.02)
.01:.02
"KRN",.402,2765,"DR",2,60.03)
.01:1;3:500
"KRN",.402,2765,"DR",2,60.0505)
.01:1
"KRN",.402,2765,"DR",2,60.1)
.01
"KRN",.402,2765,"DR",2,60.11)
.01:1
"KRN",.402,2765,"DR",2,60.12)
.01:3
"KRN",.402,2765,"DR",2,60.13)
.01;2
"KRN",.402,2765,"DR",3,60.04)
.01
"KRN",.402,2765,"DR",3,60.05)
.01
"KRN",.402,2765,"DR",3,60.06)
.01
"KRN",.402,2765,"DR",3,60.14)
.01;2
"KRN",.402,2765,"DR",3,60.196)
.01:1
"KRN",.402,2765,"DR",3,60.2)
.01:3
"KRN",.402,2765,"DR",3,60.5051)
.01
"KRN",.402,2766,-1)
0^1
"KRN",.402,2766,0)
MANAGED ITEMS EDIT^3160612.0723^@^66.4^^@^3160912
"KRN",.402,2766,"DR",1,66.4)
.01;.02;.03;.04;.05;.07;.08;.1;1;2;4;5;6;7;8;
"KRN",3.8,700,-1)
0^1
"KRN",3.8,700,0)
LMI^PU^y^^^^
"KRN",3.8,700,2,0)
^3.801^1^1^3061012^^^^
"KRN",3.8,700,2,1,0)
MAIL GROUP TO RECEIVE WORKLOAD CONFIRMATION MESSAGES FROM AUSTIN.
"KRN",3.8,700,3)

"KRN",3.8,700,5,0)
^3.811P
"KRN",19,2910813.4,-1)
2^10
"KRN",19,2910813.4,0)
LRLIAISON^Lab liaison menu^^M^520651128^LRLIASON^^^^^^26
"KRN",19,2910813.4,10,0)
^19.01IP^69^69
"KRN",19,2910813.4,10,64,0)
2921346^NDS
"KRN",19,2910813.4,10,64,"^")
LR NDS LIM MENU
"KRN",19,2910813.4,"U")
LAB LIAISON MENU
"KRN",19,2921346,-1)
0^4
"KRN",19,2921346,0)
LR NDS LIM MENU^LIM NDS MENU^^M^^^^^^^^LAB SERVICE
"KRN",19,2921346,1,0)
^19.06^2^2^3160612^^^^
"KRN",19,2921346,1,1,0)
The LIM NDS menu allows the LIM to manage items
"KRN",19,2921346,1,2,0)
 associated to the NDS Lab NTRT process.
"KRN",19,2921346,10,0)
^19.01IP^9^9
"KRN",19,2921346,10,2,0)
2921347^ATM^1
"KRN",19,2921346,10,2,"^")
LR NDS ASSOCIATE TEST TO MLTF
"KRN",19,2921346,10,3,0)
2921348^LME^7
"KRN",19,2921346,10,3,"^")
LR NDS MLTF EXTRACT
"KRN",19,2921346,10,4,0)
2921349^MIE^3
"KRN",19,2921346,10,4,"^")
LR NDS MANAGED ITEMS EDIT
"KRN",19,2921346,10,5,0)
2921352^PSV^5
"KRN",19,2921346,10,5,"^")
LR NDS SPECIMENS W/O VUIDS
"KRN",19,2921346,10,6,0)
2921351^PNA^4
"KRN",19,2921346,10,6,"^")
LR NDS FILE 60 AUDIT PRINT
"KRN",19,2921346,10,7,0)
2921353^WAT^2
"KRN",19,2921346,10,7,"^")
LR NDS WALK ASSOCIATE
"KRN",19,2921346,10,8,0)
2921350^PRG^8
"KRN",19,2921346,10,8,"^")
LR NDS AUDIT PURGE
"KRN",19,2921346,10,9,0)
2921354^PTI^6
"KRN",19,2921346,10,9,"^")
LR NDS TESTS W/INACTIVE VUIDS
"KRN",19,2921346,99)
64245,46796
"KRN",19,2921346,"U")
LIM NDS MENU
"KRN",19,2921347,-1)
0^1
"KRN",19,2921347,0)
LR NDS ASSOCIATE TEST TO MLTF^Associate Test to NDS MLTF^^R^^^^^^^^LAB SERVICE^^1
"KRN",19,2921347,1,0)
^19.06^2^2^3160612^^^^
"KRN",19,2921347,1,1,0)
This option will allow the Lab LIM to associate a Lab Test with Site/Specimen to 
"KRN",19,2921347,1,2,0)
The Master Laboratory Test File (MLTF) VUID
"KRN",19,2921347,20)

"KRN",19,2921347,25)
EN^LRMLACM
"KRN",19,2921347,"U")
ASSOCIATE TEST TO NDS MLTF
"KRN",19,2921348,-1)
0^6
"KRN",19,2921348,0)
LR NDS MLTF EXTRACT^Lab to MLTF Extract^^R^^^^^^^^LAB SERVICE
"KRN",19,2921348,1,0)
^19.06^2^2^3160612^^^^
"KRN",19,2921348,1,1,0)
This extract will display the Laboratory Tests from the 60 file
"KRN",19,2921348,1,2,0)
 and display their MLTF number/name if there is one.
"KRN",19,2921348,25)
EN^LRSRVR9
"KRN",19,2921348,"U")
LAB TO MLTF EXTRACT
"KRN",19,2921349,-1)
0^5
"KRN",19,2921349,0)
LR NDS MANAGED ITEMS EDIT^Managed Items Edit^^E^^^^^^^^LAB SERVICE
"KRN",19,2921349,1,0)
^19.06^1^1^3160612^^^^
"KRN",19,2921349,1,1,0)
This option allows the editing on the LAB MANAGED ITEMS FILE 66.4
"KRN",19,2921349,30)
LAB(66.4,
"KRN",19,2921349,31)
AEMQ
"KRN",19,2921349,50)
LAB(66.4,
"KRN",19,2921349,51)
[MANAGED ITEMS EDIT]
"KRN",19,2921349,"U")
MANAGED ITEMS EDIT
"KRN",19,2921350,-1)
0^2
"KRN",19,2921350,0)
LR NDS AUDIT PURGE^Purge NDS File 60 Audits^^R^^^^^^^^LAB SERVICE
"KRN",19,2921350,1,0)
^19.06^1^1^3161123^^^^
"KRN",19,2921350,1,1,0)
This option is for purging the audit date/time multiple in file 60 for LR*5.2*468
"KRN",19,2921350,25)
EN^LRMLPRG
"KRN",19,2921350,"U")
PURGE NDS FILE 60 AUDITS
"KRN",19,2921351,-1)
0^3
"KRN",19,2921351,0)
LR NDS FILE 60 AUDIT PRINT^Print NDS Audits in File 60^^R^^^^^^^^LAB SERVICE
"KRN",19,2921351,1,0)
^19.06^1^1^3160612^^^^
"KRN",19,2921351,1,1,0)
This prints the key edits that are tracked for the NTRT process
"KRN",19,2921351,25)
EN^LRMLREI
"KRN",19,2921351,"U")
PRINT NDS AUDITS IN FILE 60
"KRN",19,2921352,-1)
0^7
"KRN",19,2921352,0)
LR NDS SPECIMENS W/O VUIDS^Print Specimens Without VUIDS^^R^^^^^^^^LAB SERVICE
"KRN",19,2921352,1,0)
^19.06^1^1^3160612^^^^
"KRN",19,2921352,1,1,0)
This will list test/specimens that are not associated to the MLTF
"KRN",19,2921352,25)
EN^LRMLRCP
"KRN",19,2921352,"U")
PRINT SPECIMENS WITHOUT VUIDS
"KRN",19,2921353,-1)
0^8
"KRN",19,2921353,0)
LR NDS WALK ASSOCIATE^Walk Associate Test to MLTF^^R^^^^^^^^LAB SERVICE
"KRN",19,2921353,1,0)
^19.06^4^4^3160612^^^^
"KRN",19,2921353,1,1,0)
This option will walk the LIM through the Lab Tests/Specimens in the 60 file
"KRN",19,2921353,1,2,0)
 that are not associated to the MLTF.
"KRN",19,2921353,1,3,0)
 This option will go through the Lab Tests/Specimens one time starting with the most recent test/specimens going 
"KRN",19,2921353,1,4,0)
to the oldest tests/specimens. This option will re-start where the LIM last stopped.
"KRN",19,2921353,25)
EN^LRMLWT
"KRN",19,2921353,"U")
WALK ASSOCIATE TEST TO MLTF
"KRN",19,2921354,-1)
0^9
"KRN",19,2921354,0)
LR NDS TESTS W/INACTIVE VUIDS^Print Specimens with Inactive VUIDS^^R^^^^^^^^LAB SERVICE
"KRN",19,2921354,1,0)
^19.06^3^3^3160612^^^
"KRN",19,2921354,1,1,0)
This option goes through the 60 file and lists out
"KRN",19,2921354,1,2,0)
those test/specimens that are associated to the
"KRN",19,2921354,1,3,0)
66.3 file (MLTF) whose MLTF is inactive.
"KRN",19,2921354,25)
EN^LRMLRIV
"KRN",19,2921354,"U")
PRINT SPECIMENS WITH INACTIVE 
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950611
"PKG",26,22,1,"PAH",1,0)
468^3161219^520651128
"PKG",26,22,1,"PAH",1,1,0)
^^1^1^3161219
"PKG",26,22,1,"PAH",1,1,1,0)
See National Patch Module for details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","LR664L")
0^6^B96398079^n/a
"RTN","LR664L",1,0)
LR664L ; BPFO/DTG - LAB LOAD OF ^LAB FILE 66.4 FROM PATCH LR*5.2*468 ;02/10/2016
"RTN","LR664L",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LR664L",3,0)
 ;
"RTN","LR664L",4,0)
 ;  Adding in POST call to initiate 66.3 file seeding from HDI
"RTN","LR664L",5,0)
 ;
"RTN","LR664L",6,0)
 ;  This routine uses the following IA's:
"RTN","LR664L",7,0)
 ; #4640 - ^HDISVF01 calls (supported)
"RTN","LR664L",8,0)
 ; #4639 - ^HDISVCMR calls (supported)
"RTN","LR664L",9,0)
 ; #4651 - ^HDISVF09 calls (supported)
"RTN","LR664L",10,0)
 ;
"RTN","LR664L",11,0)
EN ;
"RTN","LR664L",12,0)
 N WB,E,X,WE,AA,A,B,C,DA,DIC,D,DIE,LRM,LRMS,LRN,LRNT,DR,Y
"RTN","LR664L",13,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LR664L",14,0)
 S WB=$$SITE^VASITE,WB=$P(WB,U,1)
"RTN","LR664L",15,0)
 I (+WB)<1 W !,*7," DEFAULT INSTITUTION NOT SET. UPDATE NOT RUN" G DONE
"RTN","LR664L",16,0)
 ;S D=$$GET1^DIQ(4,WB_",",.01,"I")
"RTN","LR664L",17,0)
 ;I D="" W !,*7," DEFAULT INSTITUTION NOT FOUND IN FILE 4. UPDATE NOT RUN" G DONE
"RTN","LR664L",18,0)
 S E=$O(^LAB(66.4,"B",WB,0))
"RTN","LR664L",19,0)
 I E'="" S WE=$$NS^XUAF4(WB),X=$P(WE,U,1),DIC="^LAB(66.4,",DIC(0)="B" D ^DIC G:(+Y>0) ENA W !,*7," NOT FOUND" G DONE
"RTN","LR664L",20,0)
 S X=WB S DIC="^LAB(66.4,",DIC(0)="L" D FILE^DICN
"RTN","LR664L",21,0)
 I '$P(Y,U,3) W !,*7,"NOT ABLE TO CREATE RECORD FOR ",D G DONE
"RTN","LR664L",22,0)
ENA ; come here to file update
"RTN","LR664L",23,0)
 S (DA,LRNT)=+Y,DR=""
"RTN","LR664L",24,0)
 ; DOMAIN for site e-mail group
"RTN","LR664L",25,0)
 S LRM=""
"RTN","LR664L",26,0)
 I ",402,436,438,508,518,520,521,523,529,538,540,541,546,550,552,554,568,570,573,575,589,590,596,600,607,610,612,619,626,629,631,637,642,644,646,649,650,657,658,662,667,671,672,675,676,678,687,405,442,459,537,583,"[","_WB_"," D TGET G TDONE
"RTN","LR664L",27,0)
 I ",636,648,655,664,668,679,740,437,509,564,598,603,659,663,504,512,515,548,586,674,553,578,581,593,673,757,358,516,654,501,519,534,556,557,605,562,580,608,652,653,460,620,621,630,506,463,526,539,618,692,502,585,"[","_WB_"," D TGET G TDONE
"RTN","LR664L",28,0)
 I ",666,693,756,613,623,632,660,544,549,565,503,640,595,558,688,614,542,691,531,528,695,517,561,689,635,656,"[","_WB_"," D TGET G TDONE
"RTN","LR664L",29,0)
TDONE I LRM'="" S LRMS="S.LRLABSERVER@"_$P(LRM,"@",2),DR="2///"_LRM_";3///"_LRMS G NMAIL
"RTN","LR664L",30,0)
 S A=$$SITE^VASITE I A="" G NMAIL
"RTN","LR664L",31,0)
 S C=$$KSP^XUPARAM("WHERE") I C="" G NMAIL
"RTN","LR664L",32,0)
 ; S LRM="G.LMI@"_C,LRMS="S.LRLABSERVER@"_C,DR="2///"_LRM_";3///"_LRMS
"RTN","LR664L",33,0)
 S LRM="G.LMI@"_C,LRMS="S.LRLABSERVER@"_C,DR="2///"_LRM
"RTN","LR664L",34,0)
 G NMAIL
"RTN","LR664L",35,0)
 ;
"RTN","LR664L",36,0)
 ; ntrt group mail address
"RTN","LR664L",37,0)
NMAIL S LRN="G.LABORATORY NTRT@FORUM.DOMAIN.EXT"
"RTN","LR664L",38,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_"1///"_LRN
"RTN","LR664L",39,0)
 ;ISAAC ACTIVE
"RTN","LR664L",40,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_".05///N"
"RTN","LR664L",41,0)
 ;SEND METHOD
"RTN","LR664L",42,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_".02///M"
"RTN","LR664L",43,0)
 ; AUTO REMINDERS PARAMETER
"RTN","LR664L",44,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_".03///30"
"RTN","LR664L",45,0)
 ; purge days
"RTN","LR664L",46,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_".04///220"
"RTN","LR664L",47,0)
 ; default subscripts to send to NTRT
"RTN","LR664L",48,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_".07///1"
"RTN","LR664L",49,0)
 ; send to NTRT
"RTN","LR664L",50,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_".1///0"
"RTN","LR664L",51,0)
 ; highest lab ien as of patch install
"RTN","LR664L",52,0)
 I +$P($G(^LAB(66.4,LRNT,0)),"^",6)<1 D  ;<
"RTN","LR664L",53,0)
 . S A=$G(^LAB(60,0)),B=$P(A,U,3) I B+0>0 S:$G(DR)'="" DR=DR_";" S DR=DR_".06///"_B
"RTN","LR664L",54,0)
 S DA=LRNT,DIE="^LAB(66.4,"
"RTN","LR664L",55,0)
 D ^DIE S DR=""
"RTN","LR664L",56,0)
 ;isaac web address
"RTN","LR664L",57,0)
 S A="vaauscttweb80.aac.domain.ext"
"RTN","LR664L",58,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_"4///"_A
"RTN","LR664L",59,0)
 ; isaac port number
"RTN","LR664L",60,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_"5///8080"
"RTN","LR664L",61,0)
 ;isaac NTRT path
"RTN","LR664L",62,0)
 S A="isaac-rest~rest~1~request~termRequest"
"RTN","LR664L",63,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_"6///"_A
"RTN","LR664L",64,0)
 ;isaac schema name
"RTN","LR664L",65,0)
 S A="MASTER-NTRT-RECEIVE_1.XSD"
"RTN","LR664L",66,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_"7///"_A
"RTN","LR664L",67,0)
 ;isaac schema path
"RTN","LR664L",68,0)
 S:$G(DR)'="" DR=DR_";" S DR=DR_"8///@"
"RTN","LR664L",69,0)
 ; Save Data
"RTN","LR664L",70,0)
 ;
"RTN","LR664L",71,0)
 S DA=LRNT,DIE="^LAB(66.4,"
"RTN","LR664L",72,0)
 D ^DIE
"RTN","LR664L",73,0)
 ; since the site lab server is un-editable have to do a physical set
"RTN","LR664L",74,0)
 S ^LAB(66.4,DA,3)=$G(LRMS)
"RTN","LR664L",75,0)
 ;
"RTN","LR664L",76,0)
 G LOUT
"RTN","LR664L",77,0)
 Q
"RTN","LR664L",78,0)
 ;
"RTN","LR664L",79,0)
LOUT W !,*7,"  66.4 UPDATED"
"RTN","LR664L",80,0)
 ; do post HDI seeding from here
"RTN","LR664L",81,0)
 D HDIS
"RTN","LR664L",82,0)
 ;
"RTN","LR664L",83,0)
DONE ; final quit
"RTN","LR664L",84,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LR664L",85,0)
 K WB,E,X,WE,AA,A,B,C,DA,DIC,D,DIE,LRM,LRMS,LRN,LRNT,DR,Y
"RTN","LR664L",86,0)
 Q
"RTN","LR664L",87,0)
 ;
"RTN","LR664L",88,0)
CALL ; from task manager
"RTN","LR664L",89,0)
 N ZTDESC,ZTSAVE,ZTRTN
"RTN","LR664L",90,0)
 S ZTDESC="LR NTRT POPULATE MANAGED ITEMS"
"RTN","LR664L",91,0)
 S ZTSAVE("LR*")="",ZTRTN="EN^LR664L"
"RTN","LR664L",92,0)
 D ^%ZTLOAD
"RTN","LR664L",93,0)
 K ZTDESC,ZTSAVE,ZTRTN
"RTN","LR664L",94,0)
 Q
"RTN","LR664L",95,0)
 ;
"RTN","LR664L",96,0)
HDIS ; do HDIS 'seeding'
"RTN","LR664L",97,0)
 N DOMPTR,TMP,DOMAIN,FIL,HDIMSG,MSG,A,B,C
"RTN","LR664L",98,0)
 ; first check if 66.3 file has a .01 field
"RTN","LR664L",99,0)
 S A=0,A=$O(^LRMLTF(A)) I 'A D  ;<
"RTN","LR664L",100,0)
 . N INS,DIC,DA,XUMF,NITM
"RTN","LR664L",101,0)
 . S INS="PEANUT IGE RAST^PEANUT IGE^SODIUM^POTASSIUM^GLUCOSE^CREATININE^CREATININE, TIMED URINE^CREATININE RATE, TIMED URINE^WBC #, BLOOD^RBC #, BLOOD^RBC #, CSF^RBC #, BODY FLUID^GLUCOSE, BODY FLUID^FSH^OCCULT BLOOD QL, STOOL^APTT^INR, BLOOD"
"RTN","LR664L",102,0)
 . F NITM=1:1:23 S X=$P(INS,U,NITM) S DIC="^LRMLTF(",DIC(0)="F",XUMF=1 D FILE^DICN
"RTN","LR664L",103,0)
 . K INS,DIC,DA,XUMF,NITM
"RTN","LR664L",104,0)
 ;
"RTN","LR664L",105,0)
 ; check if process has already been done
"RTN","LR664L",106,0)
 S DOMAIN="LABORATORY",FIL=66.3
"RTN","LR664L",107,0)
 S A=$P($$GETSTAT^HDISVF01(FIL),U) I A S MSG="File: "_FIL_" Has already been seeded. Status is: "_A D PSTHALT(MSG) Q
"RTN","LR664L",108,0)
 ;
"RTN","LR664L",109,0)
 S TMP=$$GETIEN^HDISVF09(DOMAIN,.DOMPTR)
"RTN","LR664L",110,0)
 I '+DOMPTR D MES^XPDUTL("***** Error retrieving the IEN for the "_DOMAIN_" domain."),PSTHALT("") Q
"RTN","LR664L",111,0)
 D EN^HDISVCMR(DOMPTR,FIL)
"RTN","LR664L",112,0)
 K DOMPTR,TMP,DOMAIN,FIL,HDIMSG,A,B,C
"RTN","LR664L",113,0)
 Q
"RTN","LR664L",114,0)
 ;
"RTN","LR664L",115,0)
PSTHALT(MSG) ; display error message
"RTN","LR664L",116,0)
 S HDIMSG(1)=""
"RTN","LR664L",117,0)
 S HDIMSG(2)=MSG
"RTN","LR664L",118,0)
 S HDIMSG(3)="***** Post-installation of Patch LR*5.2*468 HDIS 'seeding' has been halted."
"RTN","LR664L",119,0)
 S HDIMSG(4)="***** Please contact Enterprise VistA Support."
"RTN","LR664L",120,0)
 S HDIMSG(5)=""
"RTN","LR664L",121,0)
 D MES^XPDUTL(.HDIMSG)
"RTN","LR664L",122,0)
 Q
"RTN","LR664L",123,0)
 ;
"RTN","LR664L",124,0)
 ;
"RTN","LR664L",125,0)
TGET N AA,A S AA=$T(@WB),A=$P(AA,";;",2) I $E(A,1)="S" X A
"RTN","LR664L",126,0)
  K AA,A Q
"RTN","LR664L",127,0)
402 ;;S LRM="G.LMI@TOGUS.DOMAIN.EXT"
"RTN","LR664L",128,0)
436 ;;S LRM="G.LMI@MONTANA.DOMAIN.EXT"
"RTN","LR664L",129,0)
438 ;;S LRM="G.LMI@SIOUX-FALLS.DOMAIN.EXT"
"RTN","LR664L",130,0)
508 ;;S LRM="G.LMI@ATLANTA.DOMAIN.EXT"
"RTN","LR664L",131,0)
518 ;;S LRM="G.LMI@BEDFORD.DOMAIN.EXT"
"RTN","LR664L",132,0)
520 ;;S LRM="G.LMI@BILOXI.DOMAIN.EXT"
"RTN","LR664L",133,0)
521 ;;S LRM="G.LMI@BIRMINGHAM.DOMAIN.EXT"
"RTN","LR664L",134,0)
523 ;;S LRM="G.LMI@BOSTON.DOMAIN.EXT"
"RTN","LR664L",135,0)
529 ;;S LRM="G.LMI@BUTLER.DOMAIN.EXT"
"RTN","LR664L",136,0)
538 ;;S LRM="G.LMI@CHILLICOTHE.DOMAIN.EXT"
"RTN","LR664L",137,0)
540 ;;S LRM="G.LMI@CLARKSBURG.DOMAIN.EXT"
"RTN","LR664L",138,0)
541 ;;S LRM="G.LMI@CLEVELAND.DOMAIN.EXT"
"RTN","LR664L",139,0)
546 ;;S LRM="G.LMI@MIAMI.DOMAIN.EXT"
"RTN","LR664L",140,0)
550 ;;S LRM="G.LMI@DANVILLE.DOMAIN.EXT"
"RTN","LR664L",141,0)
552 ;;S LRM="G.LMI@DAYTON.DOMAIN.EXT"
"RTN","LR664L",142,0)
554 ;;S LRM="G.LMI@DENVER.DOMAIN.EXT"
"RTN","LR664L",143,0)
568 ;;S LRM="G.LMI@BLACK-HILLS.DOMAIN.EXT"
"RTN","LR664L",144,0)
570 ;;S LRM="G.LMI@FRESNO.DOMAIN.EXT"
"RTN","LR664L",145,0)
573 ;;S LRM="G.LMI@NORTH-FLORIDA.DOMAIN.EXT"
"RTN","LR664L",146,0)
575 ;;S LRM="G.LMI@GRAND-JUNCT.DOMAIN.EXT"
"RTN","LR664L",147,0)
589 ;;S LRM="G.LMI@KANSAS-CITY.DOMAIN.EXT"
"RTN","LR664L",148,0)
590 ;;S LRM="G.LMI@HAMPTON.DOMAIN.EXT"
"RTN","LR664L",149,0)
596 ;;S LRM="G.LMI@LEXINGTON.DOMAIN.EXT"
"RTN","LR664L",150,0)
600 ;;S LRM="G.LMI@LONG-BEACH.DOMAIN.EXT"
"RTN","LR664L",151,0)
607 ;;S LRM="G.LMI@MADISON.DOMAIN.EXT"
"RTN","LR664L",152,0)
610 ;;S LRM="G.LMI@NORTHERN-INDIANA.DOMAIN.EXT"
"RTN","LR664L",153,0)
612 ;;S LRM="G.LMI@MARTINEZ.DOMAIN.EXT"
"RTN","LR664L",154,0)
619 ;;S LRM="G.LMI@CENTRAL-ALABAMA.DOMAIN.EXT"
"RTN","LR664L",155,0)
626 ;;S LRM="G.LMI@TENNESSEEVALLEY.DOMAIN.EXT"
"RTN","LR664L",156,0)
629 ;;S LRM="G.LMI@NEW-ORLEANS.DOMAIN.EXT"
"RTN","LR664L",157,0)
631 ;;S LRM="G.LMI@NORTHAMPTON.DOMAIN.EXT"
"RTN","LR664L",158,0)
637 ;;S LRM="G.LMI@ASHEVILLE.DOMAIN.EXT"
"RTN","LR664L",159,0)
642 ;;S LRM="G.LMI@PHILADELPHIA.DOMAIN.EXT"
"RTN","LR664L",160,0)
644 ;;S LRM="G.LMI@PHOENIX.DOMAIN.EXT"
"RTN","LR664L",161,0)
646 ;;S LRM="G.LMI@PITTSBURGH.DOMAIN.EXT"
"RTN","LR664L",162,0)
649 ;;S LRM="G.LMI@PRESCOTT.DOMAIN.EXT"
"RTN","LR664L",163,0)
650 ;;S LRM="G.LMI@PROVIDENCE.DOMAIN.EXT"
"RTN","LR664L",164,0)
657 ;;S LRM="G.LMI@ST-LOUIS.DOMAIN.EXT"
"RTN","LR664L",165,0)
658 ;;S LRM="G.LMI@SALEM.DOMAIN.EXT"
"RTN","LR664L",166,0)
662 ;;S LRM="G.LMI@SANFRANCISCO.DOMAIN.EXT"
"RTN","LR664L",167,0)
667 ;;S LRM="G.LMI@SHREVEPORT.DOMAIN.EXT"
"RTN","LR664L",168,0)
671 ;;S LRM="G.LMI@SAN-ANTONIO.DOMAIN.EXT"
"RTN","LR664L",169,0)
672 ;;S LRM="G.LMI@SAN-JUAN.DOMAIN.EXT"
"RTN","LR664L",170,0)
675 ;;S LRM="G.LMI@ORLANDO.DOMAIN.EXT"
"RTN","LR664L",171,0)
676 ;;S LRM="G.LMI@TOMAH.DOMAIN.EXT"
"RTN","LR664L",172,0)
678 ;;S LRM="G.LMI@TUCSON.DOMAIN.EXT"
"RTN","LR664L",173,0)
687 ;;S LRM="G.LMI@WALLA-WALLA.DOMAIN.EXT"
"RTN","LR664L",174,0)
405 ;;S LRM="G.LMI@WHITE-RIVER.DOMAIN.EXT"
"RTN","LR664L",175,0)
442 ;;S LRM="G.LMI@CHEYENNE.DOMAIN.EXT"
"RTN","LR664L",176,0)
459 ;;S LRM="G.LMI@HONOLULU.DOMAIN.EXT"
"RTN","LR664L",177,0)
537 ;;S LRM="G.LMI@CHICAGO-WEST.DOMAIN.EXT"
"RTN","LR664L",178,0)
583 ;;S LRM="G.LMI@INDIANAPOLIS.DOMAIN.EXT"
"RTN","LR664L",179,0)
636 ;;S LRM="G.LMI@CENTRAL-PLAINS.DOMAIN.EXT"
"RTN","LR664L",180,0)
648 ;;S LRM="G.LMI@PORTLAND.DOMAIN.EXT"
"RTN","LR664L",181,0)
655 ;;S LRM="G.LMI@SAGINAW.DOMAIN.EXT"
"RTN","LR664L",182,0)
664 ;;S LRM="G.LMI@SAN-DIEGO.DOMAIN.EXT"
"RTN","LR664L",183,0)
668 ;;S LRM="G.LMI@SPOKANE.DOMAIN.EXT"
"RTN","LR664L",184,0)
679 ;;S LRM="G.LMI@TUSCALOOSA.DOMAIN.EXT"
"RTN","LR664L",185,0)
740 ;;S LRM="G.LMI@VALLEYCOASTALBEND.DOMAIN.EXT"
"RTN","LR664L",186,0)
437 ;;S LRM="G.LMI@FARGO.DOMAIN.EXT"
"RTN","LR664L",187,0)
509 ;;S LRM="G.LMI@AUGUSTA.DOMAIN.EXT"
"RTN","LR664L",188,0)
564 ;;S LRM="G.LMI@FAYETTVL-AR.DOMAIN.EXT"
"RTN","LR664L",189,0)
598 ;;S LRM="G.LMI@LITTLE-ROCK.DOMAIN.EXT"
"RTN","LR664L",190,0)
603 ;;S LRM="G.LMI@LOUISVILLE.DOMAIN.EXT"
"RTN","LR664L",191,0)
659 ;;S LRM="G.LMI@SALISBURY.DOMAIN.EXT"
"RTN","LR664L",192,0)
663 ;;S LRM="G.LMI@PUGET-SOUND.DOMAIN.EXT"
"RTN","LR664L",193,0)
504 ;;S LRM="G.LMI@AMARILLO.DOMAIN.EXT"
"RTN","LR664L",194,0)
512 ;;S LRM="G.LMI@BALTIMORE.DOMAIN.EXT"
"RTN","LR664L",195,0)
515 ;;S LRM="G.LMI@BATTLE-CREEK.DOMAIN.EXT"
"RTN","LR664L",196,0)
548 ;;S LRM="G.LMI@WEST-PALM.DOMAIN.EXT"
"RTN","LR664L",197,0)
586 ;;S LRM="G.LMI@JACKSON.DOMAIN.EXT"
"RTN","LR664L",198,0)
674 ;;S LRM="G.LMI@CENTRAL-TEXAS.DOMAIN.EXT"
"RTN","LR664L",199,0)
553 ;;S LRM="G.LMI@DETROIT.DOMAIN.EXT"
"RTN","LR664L",200,0)
578 ;;S LRM="G.LMI@HINES.DOMAIN.EXT"
"RTN","LR664L",201,0)
581 ;;S LRM="G.LMI@HUNTINGTON.DOMAIN.EXT"
"RTN","LR664L",202,0)
593 ;;S LRM="G.LMI@LAS-VEGAS.DOMAIN.EXT"
"RTN","LR664L",203,0)
673 ;;S LRM="G.LMI@TAMPA.DOMAIN.EXT"
"RTN","LR664L",204,0)
757 ;;S LRM="G.LMI@COLUMBUS.DOMAIN.EXT"
"RTN","LR664L",205,0)
358 ;;S LRM="G.LMI@MANILA.DOMAIN.EXT"
"RTN","LR664L",206,0)
516 ;;S LRM="G.LMI@BAY-PINES.DOMAIN.EXT"
"RTN","LR664L",207,0)
654 ;;S LRM="G.LMI@RENO.DOMAIN.EXT"
"RTN","LR664L",208,0)
501 ;;S LRM="G.LMI@ALBUQUERQUE.DOMAIN.EXT"
"RTN","LR664L",209,0)
519 ;;S LRM="G.LMI@BIG-SPRING.DOMAIN.EXT"
"RTN","LR664L",210,0)
534 ;;S LRM="G.LMI@CHARLESTON.DOMAIN.EXT"
"RTN","LR664L",211,0)
556 ;;S LRM="G.LMI@N-CHICAGO.DOMAIN.EXT"
"RTN","LR664L",212,0)
557 ;;S LRM="G.LMI@DUBLIN.DOMAIN.EXT"
"RTN","LR664L",213,0)
605 ;;S LRM="G.LMI@LOMA-LINDA.DOMAIN.EXT"
"RTN","LR664L",214,0)
562 ;;S LRM="G.LMI@ERIE.DOMAIN.EXT"
"RTN","LR664L",215,0)
580 ;;S LRM="G.LMI@HOUSTON.DOMAIN.EXT"
"RTN","LR664L",216,0)
608 ;;S LRM="G.LMI@MANCHESTER.DOMAIN.EXT"
"RTN","LR664L",217,0)
652 ;;S LRM="G.LMI@RICHMOND.DOMAIN.EXT"
"RTN","LR664L",218,0)
653 ;;S LRM="G.LMI@ROSEBURG.DOMAIN.EXT"
"RTN","LR664L",219,0)
460 ;;S LRM="G.LMI@WILMINGTON.DOMAIN.EXT"
"RTN","LR664L",220,0)
620 ;;S LRM="G.LMI@MONTROSE.DOMAIN.EXT"
"RTN","LR664L",221,0)
621 ;;S LRM="G.LMI@MTN-HOME.DOMAIN.EXT"
"RTN","LR664L",222,0)
630 ;;S LRM="G.LMI@NY-HARBOR.DOMAIN.EXT"
"RTN","LR664L",223,0)
506 ;;S LRM="G.LMI@ANN-ARBOR.DOMAIN.EXT"
"RTN","LR664L",224,0)
463 ;;S LRM="G.LMI@ANCHORAGE.DOMAIN.EXT"
"RTN","LR664L",225,0)
526 ;;S LRM="G.LMI@BRONX.DOMAIN.EXT"
"RTN","LR664L",226,0)
539 ;;S LRM="G.LMI@CINCINNATI.DOMAIN.EXT"
"RTN","LR664L",227,0)
618 ;;S LRM="G.LMI@MINNEAPOLIS.DOMAIN.EXT"
"RTN","LR664L",228,0)
692 ;;S LRM="G.LMI@WHITE-CITY.DOMAIN.EXT"
"RTN","LR664L",229,0)
502 ;;S LRM="G.LMI@ALEXANDRIA.DOMAIN.EXT"
"RTN","LR664L",230,0)
585 ;;S LRM="G.LMI@IRON-MTN.DOMAIN.EXT"
"RTN","LR664L",231,0)
666 ;;S LRM="G.LMI@SHERIDAN.DOMAIN.EXT"
"RTN","LR664L",232,0)
693 ;;S LRM="G.LMI@WILKES-BARRE.DOMAIN.EXT"
"RTN","LR664L",233,0)
756 ;;S LRM="G.LMI@EL-PASO.DOMAIN.EXT"
"RTN","LR664L",234,0)
613 ;;S LRM="G.LMI@MARTINSBURG.DOMAIN.EXT"
"RTN","LR664L",235,0)
623 ;;S LRM="G.LMI@MUSKOGEE.DOMAIN.EXT"
"RTN","LR664L",236,0)
632 ;;S LRM="G.LMI@NORTHPORT.DOMAIN.EXT"
"RTN","LR664L",237,0)
660 ;;S LRM="G.LMI@SALT-LAKE.DOMAIN.EXT"
"RTN","LR664L",238,0)
544 ;;S LRM="G.LMI@COLUMBIA-SC.DOMAIN.EXT"
"RTN","LR664L",239,0)
549 ;;S LRM="G.LMI@DALLAS.DOMAIN.EXT"
"RTN","LR664L",240,0)
565 ;;S LRM="G.LMI@FAYETTVL-NC.DOMAIN.EXT"
"RTN","LR664L",241,0)
503 ;;S LRM="G.LMI@ALTOONA.DOMAIN.EXT"
"RTN","LR664L",242,0)
640 ;;S LRM="G.LMI@PALO-ALTO.DOMAIN.EXT"
"RTN","LR664L",243,0)
595 ;;S LRM="G.LMI@LEBANON.DOMAIN.EXT"
"RTN","LR664L",244,0)
558 ;;S LRM="G.LMI@DURHAM.DOMAIN.EXT"
"RTN","LR664L",245,0)
688 ;;S LRM="G.LMI@WASHINGTON.DOMAIN.EXT"
"RTN","LR664L",246,0)
614 ;;S LRM="G.LMI@MEMPHIS.DOMAIN.EXT"
"RTN","LR664L",247,0)
542 ;;S LRM="G.LMI@COATESVILLE.DOMAIN.EXT"
"RTN","LR664L",248,0)
691 ;;S LRM="G.LMI@WEST-LA.DOMAIN.EXT"
"RTN","LR664L",249,0)
531 ;;S LRM="G.LMI@BOISE.DOMAIN.EXT"
"RTN","LR664L",250,0)
528 ;;S LRM="G.LMI@V02.DOMAIN.EXT"
"RTN","LR664L",251,0)
695 ;;S LRM="G.LMI@MILWAUKEE.DOMAIN.EXT"
"RTN","LR664L",252,0)
517 ;;S LRM="G.LMI@BECKLEY.DOMAIN.EXT"
"RTN","LR664L",253,0)
561 ;;S LRM="G.LMI@EAST-ORANGE.DOMAIN.EXT"
"RTN","LR664L",254,0)
689 ;;S LRM="G.LMI@WEST-HAVEN.DOMAIN.EXT"
"RTN","LR664L",255,0)
635 ;;S LRM="G.LMI@OKLAHOMA.DOMAIN.EXT"
"RTN","LR664L",256,0)
656 ;;S LRM="G.LMI@ST-CLOUD.DOMAIN.EXT"
"RTN","LRLNCV")
0^20^B8729767^B8183772
"RTN","LRLNCV",1,0)
LRLNCV ;DALOI/CA-VALIDATE LOINC MAPPING ;18-JUL-2001
"RTN","LRLNCV",2,0)
 ;;5.2;LAB SERVICE;**232,278,468**;Sep 27,1994;Build 64
"RTN","LRLNCV",3,0)
 ;
"RTN","LRLNCV",4,0)
 ; 5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*468; Feb 10 2016
"RTN","LRLNCV",5,0)
 ;
"RTN","LRLNCV",6,0)
 ;=================================================================
"RTN","LRLNCV",7,0)
 ; Ask VistA test in Lab Test file #60
"RTN","LRLNCV",8,0)
START ;entry point from option LR LOINC VALIDATE
"RTN","LRLNCV",9,0)
 S LREND=0 D TEST
"RTN","LRLNCV",10,0)
 I $G(LREND) G EXIT
"RTN","LRLNCV",11,0)
 ;
"RTN","LRLNCV",12,0)
 W !!,"NAME OF NLT CODE: ",$P(^LAM(LRNLT,0),U)
"RTN","LRLNCV",13,0)
 W !,"NLT CODE: ",$P(^LAM(LRNLT,0),U,2) S LRNLTN=$P($G(^LAM(LRNLT,0)),U,2)
"RTN","LRLNCV",14,0)
 S LRDEF=+$G(^LAM(LRNLT,9))
"RTN","LRLNCV",15,0)
 I LRDEF W !,"DEFAULT LOINC CODE: ",$S(LRDEF:LRDEF_"  "_$P(^LAB(95.3,LRDEF,80),U),1:"NONE")
"RTN","LRLNCV",16,0)
ASKSPEC ; Ask Specimen- Lookup in Specimen multiple in Lab Test file #60
"RTN","LRLNCV",17,0)
 W !!
"RTN","LRLNCV",18,0)
LOOK61 K DIR,DA
"RTN","LRLNCV",19,0)
 S DIR(0)="PO^61:EZMN",DIR("S")="I $P(^(0),U,9)"
"RTN","LRLNCV",20,0)
 S DIR("A")="Select a Specimen source that has a LEDI HL7 code"
"RTN","LRLNCV",21,0)
 S DIC("A")="Specimen source: "
"RTN","LRLNCV",22,0)
 D ^DIR
"RTN","LRLNCV",23,0)
 I $D(DUOUT)!($D(DTOUT))!(Y<1) G START
"RTN","LRLNCV",24,0)
 S LRSPEC=+Y
"RTN","LRLNCV",25,0)
SUFFIX ;Set LRCDEF Value
"RTN","LRLNCV",26,0)
 S LREND=0,DIC="^LRO(68.2,",DIC(0)="AQEM",DIC("A")="Work Load Area: ",DIC("S")="I $D(^(""SUF"")),+^(""SUF"")" D ^DIC S:Y<1 LREND=1 K DIC
"RTN","LRLNCV",27,0)
 I $G(LREND) G START
"RTN","LRLNCV",28,0)
 S LRCDEF=$P(^LRO(68.2,+Y,"SUF"),U,3)
"RTN","LRLNCV",29,0)
LOINC S LRMSG=1
"RTN","LRLNCV",30,0)
 ;START OF CHANGE FOR LR*5.2*468
"RTN","LRLNCV",31,0)
 ;S LRLOINC=$$LNC^LRVER1(LRNLTN,LRCDEF,LRSPEC)
"RTN","LRLNCV",32,0)
 S LRLOINC=$$LNC^LRVER1(LRNLTN,LRCDEF,LRSPEC,$G(LRIEN))
"RTN","LRLNCV",33,0)
 ;END OF CHANGE FOR LR*5.2*468
"RTN","LRLNCV",34,0)
 I LRLOINC S LRLOINC=LRLOINC_"-"_$P($G(^LAB(95.3,LRLOINC,0)),U,15)
"RTN","LRLNCV",35,0)
 I 'LRLOINC W !!,"TEST NOT MAPPED",!! D EXIT G START
"RTN","LRLNCV",36,0)
 S LRDA=$P(LRMSGM,"-",2),LRDA=+$O(^LAM("C",LRDA,0))
"RTN","LRLNCV",37,0)
 S LRDAN="Unknown code number"
"RTN","LRLNCV",38,0)
 I $G(LRDA),$D(^LAM(LRDA,0)) S LRDAN=$P($G(^LAM(LRDA,0)),U)
"RTN","LRLNCV",39,0)
 W !!,"LOINC Code: ",LRLOINC,!,$G(^LAB(95.3,+LRLOINC,80)),!
"RTN","LRLNCV",40,0)
 W !,$$CJ^XLFSTR("LOINC code was located @ NLT CODE: "_LRDAN,IOM)
"RTN","LRLNCV",41,0)
 W !,$$CJ^XLFSTR($P(LRMSGM,"-",2,99),IOM)
"RTN","LRLNCV",42,0)
 D EXIT G START
"RTN","LRLNCV",43,0)
 Q
"RTN","LRLNCV",44,0)
EXIT K DA,DIC,DIE,DINUM,DIR,DIRUT,DR,DTOUT,DUOUT,LREND,LRLOINC,LRIEN,LRMSG,LRNLT,LRSPEC,LRSPECN,LRSUF,LRTEST,S,Y
"RTN","LRLNCV",45,0)
 K DD,DO,DLAYGO,LRDEF,X
"RTN","LRLNCV",46,0)
 QUIT
"RTN","LRLNCV",47,0)
TEST W !!
"RTN","LRLNCV",48,0)
 K DIR
"RTN","LRLNCV",49,0)
 S DIR(0)="PO^60:QENMZ,",DIR("A")="VistA Lab Test"
"RTN","LRLNCV",50,0)
 S DIR("?")="Select Lab test"
"RTN","LRLNCV",51,0)
 D ^DIR K DIR
"RTN","LRLNCV",52,0)
 I $D(DIRUT)!'Y K DIRUT S LREND=1 Q
"RTN","LRLNCV",53,0)
 S LRIEN=+Y,LRTEST=$P(Y,U,2)
"RTN","LRLNCV",54,0)
 ;Check for RESULT NLT CODE and if not one let enter
"RTN","LRLNCV",55,0)
 I '$P($G(^LAB(60,+$G(LRIEN),64)),U,2) D
"RTN","LRLNCV",56,0)
 .W $$CJ^XLFSTR("There is not a RESULT NLT CODE for "_LRTEST,IOM)
"RTN","LRLNCV",57,0)
 .W $$CJ^XLFSTR("You MAY select one now to continue with the LOINC lookup",IOM),!
"RTN","LRLNCV",58,0)
 K DIE,DR,DA S DA=LRIEN,DIE="^LAB(60,",DR=64.1
"RTN","LRLNCV",59,0)
 D ^DIE
"RTN","LRLNCV",60,0)
 I $D(DUOUT)!($D(DTOUT)) G START
"RTN","LRLNCV",61,0)
 I '$P($G(^LAB(60,+$G(LRIEN),64)),U,2) D
"RTN","LRLNCV",62,0)
 .S DIC=DIE,DR=0 W !! W ?5,"IEN: [",DA,"] ",$P(^LAB(60,LRIEN,0),U) S S=$Y D EN^LRDIQ W !
"RTN","LRLNCV",63,0)
 W !
"RTN","LRLNCV",64,0)
 S LRNLT=$P($G(^LAB(60,+$G(LRIEN),64)),U,2)
"RTN","LRLNCV",65,0)
 I 'LRNLT G TEST
"RTN","LRLNCV",66,0)
 Q
"RTN","LRMLACM")
0^23^B18901427^n/a
"RTN","LRMLACM",1,0)
LRMLACM ;BPFO/DTG - LAB ASSOCIATE TEST/SPECIMEN TO MLTF ;02/10/2016
"RTN","LRMLACM",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRMLACM",3,0)
 ;
"RTN","LRMLACM",4,0)
 ; Associate Lab Test/Specimen to MLTF
"RTN","LRMLACM",5,0)
EN ; entry point for association
"RTN","LRMLACM",6,0)
 N LR60IEN,LRIEN,LRSPEC,A,B,C,LXB,LXA,LROKS,LRSYSTEM,LRLEC,LRNO,AA,DA,LXC,LXA,LRSPERR,LRMLTF,DIR,DIRUT,DIC,DIQ
"RTN","LRMLACM",7,0)
 N LR64ER,LRCKD,LRELEC,LRLNC,LRLNC0,LRN,LRSN,LRTNAM,X,Y
"RTN","LRMLACM",8,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLACM",9,0)
ENA K DIR,DIRUT
"RTN","LRMLACM",10,0)
 S DIR(0)="PO^60:EQZM",DIR("A")="LABORATORY TEST"
"RTN","LRMLACM",11,0)
 D ^DIR K DIR
"RTN","LRMLACM",12,0)
 I $D(DIRUT) G OUT
"RTN","LRMLACM",13,0)
 I Y<1 G OUT
"RTN","LRMLACM",14,0)
 S (LRIEN)=+Y,LRTNAM=$P(Y,U,2)
"RTN","LRMLACM",15,0)
 D GET60T
"RTN","LRMLACM",16,0)
 ; check values
"RTN","LRMLACM",17,0)
 S LRN=$G(LXA(.01,"E")),LR64ER=0
"RTN","LRMLACM",18,0)
 ; check test subscript is valid for NTRT
"RTN","LRMLACM",19,0)
 S AA=$G(LXA(4,"I"))
"RTN","LRMLACM",20,0)
 I AA="WK"!(AA="BB")!(AA="AU")!(AA="EM") W !," Subscript is "_AA_" Skipping" G ENA
"RTN","LRMLACM",21,0)
 ; check test type
"RTN","LRMLACM",22,0)
 S AA=$G(LXA(3,"I"))
"RTN","LRMLACM",23,0)
 I AA="N"!(AA="D") W !," Test Type is: "_AA_" Skipping" G ENA
"RTN","LRMLACM",24,0)
 ; check for data name
"RTN","LRMLACM",25,0)
 I $G(LXA(5,"I"))="" W !," "_LRN_" Missing LOCATION(Data Name) Skipping" G ENA
"RTN","LRMLACM",26,0)
 I $O(^LAB(60,LRIEN,1,0))="" W !," Test "_LRN_" does NOT have any Specimens associated. Skippping" G ENA
"RTN","LRMLACM",27,0)
 ;
"RTN","LRMLACM",28,0)
ENB ; pick up specimen
"RTN","LRMLACM",29,0)
 K DIR,DIRUT
"RTN","LRMLACM",30,0)
 S DIR(0)="PO^LAB(60,"_LRIEN_",1,:EQZM",DIR("A")="SPECIMEN for "_LRN
"RTN","LRMLACM",31,0)
 D ^DIR
"RTN","LRMLACM",32,0)
 I $D(DIRUT) G OUT:$E(X)="^"
"RTN","LRMLACM",33,0)
 I Y<1 G ENA
"RTN","LRMLACM",34,0)
 S LRSPEC=+Y
"RTN","LRMLACM",35,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=100,DA=+LRIEN K LXB,^UTILITY("DIQ1",$J)
"RTN","LRMLACM",36,0)
 S DR(60.01)=".01;6;1;2;9.2;9.3;13;30;32;33;34;35",DA(60.01)=LRSPEC
"RTN","LRMLACM",37,0)
 D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLACM",38,0)
 K LXC M LXC=LXB("60.01",LRSPEC) K LXB
"RTN","LRMLACM",39,0)
 S LRSN=$G(LXC(.01,"E"))
"RTN","LRMLACM",40,0)
 ;
"RTN","LRMLACM",41,0)
ENM ; mltf lookup
"RTN","LRMLACM",42,0)
 K DIR,DA,DIRUT
"RTN","LRMLACM",43,0)
 S DIR(0)="PO^66.3:EQZ"
"RTN","LRMLACM",44,0)
 S DIR("S")="I '$$SCREEN^XTID(66.3,"""",(+Y_"",""))"
"RTN","LRMLACM",45,0)
 S DIR("B")=$G(LXC(30,"E"))
"RTN","LRMLACM",46,0)
 D ^DIR
"RTN","LRMLACM",47,0)
 I Y<1 D  G OUT:$D(DIRUT),ENB
"RTN","LRMLACM",48,0)
 . I X'="@" Q
"RTN","LRMLACM",49,0)
 . K DIR,DIRUT
"RTN","LRMLACM",50,0)
 . S DIR(0)="Y",DIR("A")="Are You Sure You Want To Delete This Entry"
"RTN","LRMLACM",51,0)
 . S DIR("?")="If you enter yes, the MLTF association with this test/specimen will be removed."
"RTN","LRMLACM",52,0)
 . S DIR("B")="Yes"
"RTN","LRMLACM",53,0)
 . D ^DIR
"RTN","LRMLACM",54,0)
 . I 'Y!($D(DIRUT)) Q
"RTN","LRMLACM",55,0)
 . I Y=1 D MSD
"RTN","LRMLACM",56,0)
 . ;
"RTN","LRMLACM",57,0)
 I $D(DIRUT) G OUT
"RTN","LRMLACM",58,0)
 I +Y>0&(+Y=$G(LXC(30,"I"))) G ENB
"RTN","LRMLACM",59,0)
 S LRSPERR=0,LRMLTF=+Y
"RTN","LRMLACM",60,0)
 ; check specimen type (based on code from LRLNC0 at CHKSPEC
"RTN","LRMLACM",61,0)
 S LRELEC=$P($G(^LAB(61,LRSPEC,0)),U,9)
"RTN","LRMLACM",62,0)
 S LRLNC0=$$GET1^DIQ(66.3,LRMLTF,.04,"I")
"RTN","LRMLACM",63,0)
 S LRLNC=$P(LRLNC0,"-",1),LRCKD=$P(LRLNC0,"-",2)
"RTN","LRMLACM",64,0)
 S A=0,LRSYSTEM="" F  S A=$O(^LAB(95.3,"B",LRLNC,A)) Q:'A  S B=$G(^LAB(95.3,A,0)),LRSYSTEM=$P(B,U,8),C=$P(B,U,15) I C=LRCKD Q
"RTN","LRMLACM",65,0)
 ; if not found in 95.3
"RTN","LRMLACM",66,0)
 I 'A G ENS
"RTN","LRMLACM",67,0)
 D CHKSPEC G:LROKS=1 ENS
"RTN","LRMLACM",68,0)
 I $D(DIRUT) G OUT:$E(X)="^"
"RTN","LRMLACM",69,0)
 I LRNO=1 W !,"TEST: ",LRN,!,"SPECIMEN: ",LRSN,! G ENM
"RTN","LRMLACM",70,0)
 G ENS
"RTN","LRMLACM",71,0)
 ;
"RTN","LRMLACM",72,0)
ENS D MSET I LRSPERR=1 W !,"NOT able to Save" G ENM
"RTN","LRMLACM",73,0)
 S A=$$GET1^DIQ(60.01,LRSPEC_","_LRIEN,30,"E")
"RTN","LRMLACM",74,0)
 W !!,"Test/Specimen: ",LRN," / ",LRSN,!,"  Saved With MLTF: ",A,!
"RTN","LRMLACM",75,0)
 G ENB
"RTN","LRMLACM",76,0)
 ;
"RTN","LRMLACM",77,0)
OUT ; exit
"RTN","LRMLACM",78,0)
 K LR60IEN,LRIEN,LRSPEC,A,B,C,AA,DA,LXB,LXA,LROKS,LRSYSTEM,LRLEC,LRNO,LXC,LXA,LRSPERR,LRMLTF,DIR,DIRUT,DIC,DIQ
"RTN","LRMLACM",79,0)
 K LR64ER,LRCKD,LRELEC,LRLNC,LRLNC0,LRN,LRSN,LRTNAM,X,Y
"RTN","LRMLACM",80,0)
 Q
"RTN","LRMLACM",81,0)
 ;
"RTN","LRMLACM",82,0)
GET60T ; get top of file 60 test info
"RTN","LRMLACM",83,0)
 S DA=LRIEN,DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;3;4;5;64.1;5;13;131;132;133" D EN^DIQ1
"RTN","LRMLACM",84,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLACM",85,0)
 Q
"RTN","LRMLACM",86,0)
 ;
"RTN","LRMLACM",87,0)
CHKSPEC ;Check that specimen of MLTF LOINC code same as specimen of test
"RTN","LRMLACM",88,0)
 S LROKS=1
"RTN","LRMLACM",89,0)
 I LRSYSTEM=$G(LRELEC) Q
"RTN","LRMLACM",90,0)
 I (LRSYSTEM=74!(LRSYSTEM=83)!(LRSYSTEM=114)!(LRSYSTEM=1376))&($G(LRELEC)=74!($G(LRELEC)=83)!($G(LRELEC)=114)!($G(LRELEC)=1376)) Q
"RTN","LRMLACM",91,0)
 S LROKS=0,LRNO=0
"RTN","LRMLACM",92,0)
 W !!,"The MLTF LOINC code that you have selected does not have the"
"RTN","LRMLACM",93,0)
 W !,"same specimen that you chose to test/specimen."
"RTN","LRMLACM",94,0)
 K DIR,DIRUT
"RTN","LRMLACM",95,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to do this"
"RTN","LRMLACM",96,0)
 S DIR("?")="If you enter yes, the test/specimen will be associated to this MLTF LOINC code."
"RTN","LRMLACM",97,0)
 S DIR("B")="Yes"
"RTN","LRMLACM",98,0)
 D ^DIR
"RTN","LRMLACM",99,0)
 I $D(DIRUT) S LRNO=1 Q
"RTN","LRMLACM",100,0)
 I Y<1 S LRNO=1
"RTN","LRMLACM",101,0)
 Q
"RTN","LRMLACM",102,0)
 ;
"RTN","LRMLACM",103,0)
MSD ; delete the mltf from the 60 file
"RTN","LRMLACM",104,0)
 N LRMLTF S LRMLTF="@" D MSET
"RTN","LRMLACM",105,0)
 K LRMLTF
"RTN","LRMLACM",106,0)
 Q
"RTN","LRMLACM",107,0)
 ;
"RTN","LRMLACM",108,0)
MSET ;save the mltf to the 60 file
"RTN","LRMLACM",109,0)
 N DA,DR,DIE
"RTN","LRMLACM",110,0)
 L +^LAB(60,LRIEN,1,LRSPEC):30 I '$T S LRSPERR=1 Q
"RTN","LRMLACM",111,0)
 S DA(1)=+LRIEN,DA=LRSPEC,DR="30///"_LRMLTF,DIE="^LAB(60,"_DA(1)_",1," D ^DIE
"RTN","LRMLACM",112,0)
 L -^LAB(60,LRIEN,1,LRSPEC)
"RTN","LRMLACM",113,0)
 Q
"RTN","LRMLACM",114,0)
 ;
"RTN","LRMLED")
0^13^B152483182^n/a
"RTN","LRMLED",1,0)
LRMLED ;BPFO/DTG - NTRT MESSAGE PROCESS AND EDITS UPDATE ;02/10/2016
"RTN","LRMLED",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRMLED",3,0)
 ;
"RTN","LRMLED",4,0)
 ; ESTART is called from a 'NEW' format cross reference on the 60 file AMLTFNTRT
"RTN","LRMLED",5,0)
 ; and will send NTRT message if appropiate.
"RTN","LRMLED",6,0)
EN(LRS,LR60IEN) ; entry point from cross reference
"RTN","LRMLED",7,0)
 ; only have one
"RTN","LRMLED",8,0)
 L +^TMP(LR60IEN,LRS):1 I '$T Q
"RTN","LRMLED",9,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLED",10,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Create NTRT message from file 60 Cross Reference #491"
"RTN","LRMLED",11,0)
 S ZTRTN="ESTART^LRMLED("_LR60IEN_","_LRS_")",ZTSAVE("LR60IEN")="",ZTSAVE("LRS")="",ZTIO="",ZTSAVE("LRDUZ")=DUZ
"RTN","LRMLED",12,0)
 D ^%ZTLOAD
"RTN","LRMLED",13,0)
 L -^TMP(LR60IEN,LRS)
"RTN","LRMLED",14,0)
 Q
"RTN","LRMLED",15,0)
 ;
"RTN","LRMLED",16,0)
ESTART(LR60IEN,LRS) ; pick up key data for NTRT
"RTN","LRMLED",17,0)
 Q:$D(LRMLTFREC)
"RTN","LRMLED",18,0)
 L +^TMP(LR60IEN,LRS):30 I '$T Q
"RTN","LRMLED",19,0)
 N LXA,LXB,LXC,LXG,LXD,LXE,LXF,A,B,C,D,LSITE,LRNT,LRNTI,AR,LRNLT,LRSEC,I,LRNOS1,LRNOS2
"RTN","LRMLED",20,0)
 N LRSITE,LRSITEN,LRGMAIL,LRSMAIL,LRNAMIL,LACT,MAILPERSON,LR64,LRCOM,LRCTY,LRSUBSCRIPT
"RTN","LRMLED",21,0)
 N LRSCHPA,LRSCHNM,ALI,LRTEXT,LR64N,LRDTNM,G
"RTN","LRMLED",22,0)
 S:$G(LRDUZ)="" LRDUZ=$G(DUZ)
"RTN","LRMLED",23,0)
 I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLED",24,0)
 D GET664
"RTN","LRMLED",25,0)
 ; check if allow to send to NTRT
"RTN","LRMLED",26,0)
 ; I $G(LRNTI(.1,"I"))'=1 G EOUT
"RTN","LRMLED",27,0)
 ;
"RTN","LRMLED",28,0)
 ;site number and name
"RTN","LRMLED",29,0)
 S LRSITE=$G(LRNTI(.01,"I")),LRSITEN=$G(LRNTI(.01,"E"))
"RTN","LRMLED",30,0)
 ;ntrt mail group
"RTN","LRMLED",31,0)
 S LRNMAIL=$G(LRNTI(1,"I"))
"RTN","LRMLED",32,0)
 ;lab send mail group
"RTN","LRMLED",33,0)
 S LRGMAIL=$G(LRNTI(2,"I"))
"RTN","LRMLED",34,0)
 ;lab server side mail group
"RTN","LRMLED",35,0)
 S LRSMAIL=$G(LRNTI(3,"I"))
"RTN","LRMLED",36,0)
 ;how to send mail
"RTN","LRMLED",37,0)
 S LACT=$G(LRNTI(.02,"E"))
"RTN","LRMLED",38,0)
 ; get type of test to send
"RTN","LRMLED",39,0)
 S LRSUBSCRIPT=$G(LRNTI(.07,"I")) I LRSUBSCRIPT="" S LRSUBSCRIPT=1 ; default to CH only
"RTN","LRMLED",40,0)
 ; send blood bank?
"RTN","LRMLED",41,0)
 ;
"RTN","LRMLED",42,0)
 S DA=+LR60IEN
"RTN","LRMLED",43,0)
 ;get test
"RTN","LRMLED",44,0)
EA ; .01 test name, 4 subscript (CH), 5 data name, 13 field (DD of 5), 64.1 result nlt code
"RTN","LRMLED",45,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;4;64.1;5;13;132;133" K ^UTILITY("DIQ1",$J) D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLED",46,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLED",47,0)
 D TDT
"RTN","LRMLED",48,0)
 ; check test subscript is valid for NTRT
"RTN","LRMLED",49,0)
 S A=$G(LXA(4,"I"))
"RTN","LRMLED",50,0)
 I A="WK" G EOUT ; don't send if workload
"RTN","LRMLED",51,0)
 I A="AU" G EOUT
"RTN","LRMLED",52,0)
 I A="EM" G EOUT
"RTN","LRMLED",53,0)
 I A="BB" G EOUT
"RTN","LRMLED",54,0)
 I A="CH"&((LRSUBSCRIPT=1)!(LRSUBSCRIPT=7)!(LRSUBSCRIPT=8)) G EGOOD
"RTN","LRMLED",55,0)
 I A="MI"&((LRSUBSCRIPT=2)!(LRSUBSCRIPT=7)!(LRSUBSCRIPT=8)) G EGOOD
"RTN","LRMLED",56,0)
 ; I A="EM"&((LRSUBSCRIPT=3)!(LRSUBSCRIPT=8)) G EGOOD  ; do not do AU per Leeanne 6/2016
"RTN","LRMLED",57,0)
 I A="SP"&((LRSUBSCRIPT=4)!(LRSUBSCRIPT=8)) G EGOOD
"RTN","LRMLED",58,0)
 I A="CY"&((LRSUBSCRIPT=5)!(LRSUBSCRIPT=8)) G EGOOD
"RTN","LRMLED",59,0)
 ; I A="AU"&((LRSUBSCRIPT=6)!(LRSUBSCRIPT=8)) G EGOOD ; do not do AU per Leeanne 6/2016
"RTN","LRMLED",60,0)
 G EOUT ; doesn't match up
"RTN","LRMLED",61,0)
 ;
"RTN","LRMLED",62,0)
EGOOD ; if the subscript is valid
"RTN","LRMLED",63,0)
 ; check if inactive
"RTN","LRMLED",64,0)
 S A=$G(LXA(132,"I")),B=$G(LXA(133,"I")) I A'=""!(B'="") G EOUT
"RTN","LRMLED",65,0)
 ;get synonyms
"RTN","LRMLED",66,0)
 K B S LXG="",A=0 F I=0:1 S A=$O(^LAB(60,DA,5,A)) Q:'A  S B(I)=$P(^LAB(60,DA,5,A,0),U,1)
"RTN","LRMLED",67,0)
 I I>0 S B=I-1 F I=0:1:B S:LXG="" LXG=B(I) S:LXG'="" LXG=LXG_U_B(I) I $L(LXG)>210 Q
"RTN","LRMLED",68,0)
 ;get nlt number
"RTN","LRMLED",69,0)
 S LR64=$G(LXA(64.1,"I")),(LRNLT,LRSEC)="",LR64N=$G(LXA(64.1,"E"))
"RTN","LRMLED",70,0)
 I LR64'="" S LRNLT=$G(^LAM(LR64,0)),A=$P(LRNLT,U,15),LRNLT=$P(LRNLT,U,2)
"RTN","LRMLED",71,0)
 I A'="" S LRSEC=$P($G(^LAB(64.21,A,0)),U,2)
"RTN","LRMLED",72,0)
 ;get comment / data type from comment
"RTN","LRMLED",73,0)
 S (LRCOM,LRCTY,LRDTNM)="",A=$G(LXA(13,"I")),LRDTNM=$P($G(LXA(5,"I")),";",2)
"RTN","LRMLED",74,0)
 I A'="" S B=$$ETSTTYP(A),LRCOM=$P(B,"|",1),LRCTY=$P(B,"|",2) S:$P(B,"|",3)'="" LRDTNM=LRDTNM_" - "_$P(B,"|",3)
"RTN","LRMLED",75,0)
 ; loop through site/specimen multiple
"RTN","LRMLED",76,0)
 ; S LRS=0
"RTN","LRMLED",77,0)
ES ; S LRS=$O(^LAB(60,DA,1,LRS)) I 'LRS G EOUT
"RTN","LRMLED",78,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=100,DA=+LR60IEN K LXB,^UTILITY("DIQ1",$J)
"RTN","LRMLED",79,0)
 S DR(60.01)=".01;6;1;2;9.2;9.3;13;30;32;33;34;35",DA(60.01)=LRS
"RTN","LRMLED",80,0)
 D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLED",81,0)
 K LXC M LXC=LXB("60.01",LRS) K LXB
"RTN","LRMLED",82,0)
 ; get the specimen INTERPRETATION
"RTN","LRMLED",83,0)
 D GETS^DIQ(60.01,LRS_","_DA,"5.5","","LXB")
"RTN","LRMLED",84,0)
 K LXE M LXE=LXB(60.01,LRS_","_DA_",",5.5) K LXB
"RTN","LRMLED",85,0)
 ; don't do if VUID already associated
"RTN","LRMLED",86,0)
 I $G(LXC(30,"I"))'="" G EOUT
"RTN","LRMLED",87,0)
 ; don't do if inactive or already sent
"RTN","LRMLED",88,0)
 S A=$G(LXC(32,"I")),B=$G(LXC(33,"I")),C=$G(LXC(34,"I")) I $E(A,1)="Y"!(B'="")!($E(C,1)="Y") G EOUT
"RTN","LRMLED",89,0)
 ;if no send method oor not allowed to send to NTRT
"RTN","LRMLED",90,0)
 S LRNOS1=0 I LACT=""!(LACT="N")!($G(LRNTI(3,"I"))="N")!($G(LRNTI(.1,"I"))'=1) S LRNOS1=1
"RTN","LRMLED",91,0)
 S A=$TR(LRGMAIL,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRMLED",92,0)
 S LRNOS2=0 I '$$PROD^XUPROD()!(LRGMAIL'["DOMAIN.EXT") S LRNOS2=1
"RTN","LRMLED",93,0)
 I LACT=""!($E(LACT,1)="N") D MAILMAN G EOUT
"RTN","LRMLED",94,0)
 D @LACT
"RTN","LRMLED",95,0)
 ;put exception flag in 60 file
"RTN","LRMLED",96,0)
 ; since making exception flag uneditable must do physical set
"RTN","LRMLED",97,0)
 I (LRNOS1'=1&(LRNOS2'=1)) D  ;<
"RTN","LRMLED",98,0)
 . N A,B,LRO,LRN,I S A=$G(^LAB(60,LR60IEN,1,LRS,5)),B=A,$P(B,U,3)="Y",^LAB(60,LR60IEN,1,LRS,5)=B
"RTN","LRMLED",99,0)
 . ; need to build array for saving in audit section
"RTN","LRMLED",100,0)
 . F I=1,2,4 S LRO(I)="",LRN(I)=""
"RTN","LRMLED",101,0)
 . S LRO(3)=$P(A,U,3),LRN(3)=$P(B,U,3)
"RTN","LRMLED",102,0)
 . N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLED",103,0)
 . S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save of Deployed Flag"
"RTN","LRMLED",104,0)
 . S ZTRTN="SEDA^LRMLED("_LRS_","_LR60IEN_")",ZTSAVE("LR60IEN")="",ZTSAVE("LRS")=""
"RTN","LRMLED",105,0)
 . S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLED",106,0)
 . S ZTIO=""
"RTN","LRMLED",107,0)
 . D ^%ZTLOAD
"RTN","LRMLED",108,0)
 G EOUT
"RTN","LRMLED",109,0)
 ;
"RTN","LRMLED",110,0)
MAILMAN ;mailman
"RTN","LRMLED",111,0)
 N XMSUB,XMY,XMTEXT,LRTEXT,XMDUZ,DA,DR,DIE
"RTN","LRMLED",112,0)
 ;
"RTN","LRMLED",113,0)
 I LRNMAIL="" Q  ; missing NTRT recipient
"RTN","LRMLED",114,0)
 ;
"RTN","LRMLED",115,0)
 S XMSUB="NEW NTRT REQUEST FOR LABORATORY"
"RTN","LRMLED",116,0)
 S XMY(DUZ)=""
"RTN","LRMLED",117,0)
 ; send to NTRT if ntrt mail group and send method and production/va site
"RTN","LRMLED",118,0)
 I LRNMAIL'="" S XMY(LRNMAIL)="" I LRNOS1=1!(LRNOS2=1) K XMY(LRNMAIL)
"RTN","LRMLED",119,0)
 ;
"RTN","LRMLED",120,0)
 I LRGMAIL'="" S XMDUZ("New Test/Specimen NTRT Request From: "_$E(LRSITEN,1,30))="",XMY($P(LRGMAIL,"@",1))=""
"RTN","LRMLED",121,0)
 S ALI=0
"RTN","LRMLED",122,0)
 I LRNOS1=1!(LRNOS2=1) D  ;<
"RTN","LRMLED",123,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="***  THIS TEST/SPECIMEN WAS NOT SENT TO NTRT ***"
"RTN","LRMLED",124,0)
 . S A="" S:LRNOS1=1 A="Missing Send Method" S A=A_$S((LRNOS2=1&(A'="")):" and ",1:""),A=A_$S(LRNOS2=1:"Facility is Either Not Production or Not a VA Site",1:"")
"RTN","LRMLED",125,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)=A
"RTN","LRMLED",126,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",127,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="A new Laboratory Test has been entered at: "_LRSITEN
"RTN","LRMLED",128,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",129,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Facility Name/Number: "_LRSITEN_" / "_LRSITE
"RTN","LRMLED",130,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",131,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="For questions or notifications respond to: "_LRGMAIL
"RTN","LRMLED",132,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",133,0)
 ; S LRTEXT(6)="For NTRT results respond to :"_LRSMAIL
"RTN","LRMLED",134,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",135,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",136,0)
 I $G(LRRESEND)=1 S ALI=$$LRTP(ALI),LRTEXT(ALI)=" **** THIS TEST/SPECIMEN IS BEING RESENT ****"
"RTN","LRMLED",137,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="New Laboratory Test Name: "_$G(LXA(.01,"I"))
"RTN","LRMLED",138,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",139,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="New Laboratory Test LOCAL IEN: "_(+LR60IEN)
"RTN","LRMLED",140,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",141,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Laboratory Test Site/Specimen Number (IEN): "_$G(LXC(.01,"I"))
"RTN","LRMLED",142,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",143,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Laboratory Test Site/Specimen Name: "_$G(LXC(.01,"E"))
"RTN","LRMLED",144,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",145,0)
 S B="",A=$G(LXC(.01,"I")) I A S A=$G(^LAB(61,A,0)),B=$P(A,U,10) I +B>0 S B=$P($G(^LAB(64.061,B,0)),U,1)
"RTN","LRMLED",146,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",147,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Spec: "_$P(A,U,1)
"RTN","LRMLED",148,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",149,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Time Aspect: "_B
"RTN","LRMLED",150,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",151,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Units: "_$G(LXC(6,"I"))
"RTN","LRMLED",152,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",153,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="NLT: "_LRNLT
"RTN","LRMLED",154,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",155,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Lab Section: "_LRSEC
"RTN","LRMLED",156,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",157,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Subscript: "_$G(LXA(4,"I"))
"RTN","LRMLED",158,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",159,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Data Name: "_LRDTNM
"RTN","LRMLED",160,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",161,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Data Comment: "_LRCOM
"RTN","LRMLED",162,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",163,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Data Type: "_LRCTY
"RTN","LRMLED",164,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",165,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Reference Low: "_$G(LXC(1,"I"))
"RTN","LRMLED",166,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",167,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Reference High: "_$G(LXC(2,"I"))
"RTN","LRMLED",168,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",169,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Therapeutic Low: "_$G(LXC(9.2,"I"))
"RTN","LRMLED",170,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",171,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Therapeutic High: "_$G(LXC(9.3,"I"))
"RTN","LRMLED",172,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",173,0)
 ; S A=$G(LXC(13,"I")),B=$S(A=1:"YES",1:"NO")
"RTN","LRMLED",174,0)
 ; S ALI=$$LRTP(ALI),LRTEXT(ALI)="Use Ref Lab: "_B
"RTN","LRMLED",175,0)
 ; S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",176,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Test Synonyms: "_LXG
"RTN","LRMLED",177,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",178,0)
 ; F I=10:2:44 S LRTEXT(I)=""
"RTN","LRMLED",179,0)
 S E=0 F I=1:1 S E=$O(LXE(E)) Q:'E  S G=LXE(E),ALI=$$LRTP(ALI),LRTEXT(ALI)=$S(I=1:"Specimen Interpretation: ",1:"                         ")_G
"RTN","LRMLED",180,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",181,0)
 S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRMLED",182,0)
 ;
"RTN","LRMLED",183,0)
 Q
"RTN","LRMLED",184,0)
 ;
"RTN","LRMLED",185,0)
CTCHK(LR60IEN) ; check if the test is valid for create date and it hasn't been set previously
"RTN","LRMLED",186,0)
 ; is the test valid for update
"RTN","LRMLED",187,0)
 N A,B,C,LSITE,LRNT
"RTN","LRMLED",188,0)
 S A=$$GET1^DIQ(60,LR60IEN_",",131)
"RTN","LRMLED",189,0)
 I A'="" Q 0
"RTN","LRMLED",190,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLED",191,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLED",192,0)
 I +LRNT<1 Q 0
"RTN","LRMLED",193,0)
 S A=$$GET1^DIQ(66.4,LRNT_",",.06)
"RTN","LRMLED",194,0)
 I A&(A>(LR60IEN-1)) Q 0
"RTN","LRMLED",195,0)
 Q 1
"RTN","LRMLED",196,0)
 ;
"RTN","LRMLED",197,0)
NSP(LR6001IEN,LR60IEN) ; entry to set specimen date if new specimen
"RTN","LRMLED",198,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC,LRN,LRO
"RTN","LRMLED",199,0)
 ; X1-old array  X2-new array
"RTN","LRMLED",200,0)
 M LRO=X1,LRN=X2
"RTN","LRMLED",201,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save from file 60 Cross Reference #490"
"RTN","LRMLED",202,0)
 S ZTRTN="NSPA^LRMLED("_LR6001IEN_","_LR60IEN_")",ZTSAVE("LR60IEN")="",ZTSAVE("LR6001IEN")=""
"RTN","LRMLED",203,0)
 S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLED",204,0)
 S ZTIO=""
"RTN","LRMLED",205,0)
 D ^%ZTLOAD
"RTN","LRMLED",206,0)
 Q
"RTN","LRMLED",207,0)
 ;
"RTN","LRMLED",208,0)
NSPA(LRDA,LRDA1) ; save specimen create date if new specimen for test
"RTN","LRMLED",209,0)
 ; (1)-.01 SITE/SPECIMEN
"RTN","LRMLED",210,0)
 ; LRDA - specimen IEN
"RTN","LRMLED",211,0)
 ; LRDA1 - test IEN
"RTN","LRMLED",212,0)
 ; LRO-old array  LRN-new array
"RTN","LRMLED",213,0)
 Q:$D(LRMLTFREC)
"RTN","LRMLED",214,0)
 N A,B,C,D,E,F,DA
"RTN","LRMLED",215,0)
 N DR,DIE,DIC,X
"RTN","LRMLED",216,0)
 I $G(LRO(1))'=""!($G(LRN(1))="") G NSPQ
"RTN","LRMLED",217,0)
 S DA=LRDA,DA(1)=LRDA1
"RTN","LRMLED",218,0)
 S A=$$GET1^DIQ(60.01,DA_","_DA(1),35,"I")
"RTN","LRMLED",219,0)
 I A'="" G NSPQ
"RTN","LRMLED",220,0)
 I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLED",221,0)
 S DIE="^LAB(60,"_DA(1)_",1,",DR="35///"_DT
"RTN","LRMLED",222,0)
 D ^DIE
"RTN","LRMLED",223,0)
 G NSPQ
"RTN","LRMLED",224,0)
 ;
"RTN","LRMLED",225,0)
NSPQ ; quit
"RTN","LRMLED",226,0)
 K A,B,C,D,E,F,DA,DR,DIE,DIC,X
"RTN","LRMLED",227,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLED",228,0)
 Q
"RTN","LRMLED",229,0)
 ;
"RTN","LRMLED",230,0)
TDT ;place creation date in test
"RTN","LRMLED",231,0)
 I $G(LXA(131,"I"))'="" Q  ; date already on file
"RTN","LRMLED",232,0)
 S A=$G(LRNTI(".06","I")) I A&(A>(LR60IEN-1)) Q  ; only set if test added after patch 468 load
"RTN","LRMLED",233,0)
 N DA,DR,DIE
"RTN","LRMLED",234,0)
 L +^LAB(60,LR60IEN):30 I '$T Q
"RTN","LRMLED",235,0)
 S DA=+LR60IEN,DR="131///"_DT,DIE="^LAB(60," D ^DIE
"RTN","LRMLED",236,0)
 L -^LAB(60,LR60IEN)
"RTN","LRMLED",237,0)
 Q
"RTN","LRMLED",238,0)
 ;
"RTN","LRMLED",239,0)
SDT ; place specimen creation dt
"RTN","LRMLED",240,0)
 I $G(LXC(35,"I"))'="" Q  ; date on file
"RTN","LRMLED",241,0)
 N DA,DR,DIE
"RTN","LRMLED",242,0)
 L +^LAB(60,LR60IEN,1,LRS):30 I '$T Q
"RTN","LRMLED",243,0)
 S DA(1)=+LR60IEN,DA=LRS,DR="35///"_DT,DIE="^LAB(60,"_DA(1)_",1," D ^DIE
"RTN","LRMLED",244,0)
 L -^LAB(60,LR60IEN,1,LRS)
"RTN","LRMLED",245,0)
 Q
"RTN","LRMLED",246,0)
 ;
"RTN","LRMLED",247,0)
LRTEXT(AL) ; update counter for message xml
"RTN","LRMLED",248,0)
 S AL=AL+1
"RTN","LRMLED",249,0)
 Q AL
"RTN","LRMLED",250,0)
 ;
"RTN","LRMLED",251,0)
HL7 ;send hl7 to NTRT
"RTN","LRMLED",252,0)
 ; currently not implemented
"RTN","LRMLED",253,0)
 Q
"RTN","LRMLED",254,0)
 ;
"RTN","LRMLED",255,0)
LRTP(AA) ;update text counter
"RTN","LRMLED",256,0)
 S AA=AA+1
"RTN","LRMLED",257,0)
 Q AA
"RTN","LRMLED",258,0)
 ;
"RTN","LRMLED",259,0)
XML ;send xml to NTRT
"RTN","LRMLED",260,0)
 ; moved to LRMLEDA for size
"RTN","LRMLED",261,0)
 D XML^LRMLEDA
"RTN","LRMLED",262,0)
 Q
"RTN","LRMLED",263,0)
 ;
"RTN","LRMLED",264,0)
 ;
"RTN","LRMLED",265,0)
ETSTTYP(LRX) ; get test data type
"RTN","LRMLED",266,0)
 N LRSTUB,LRTYPE,LRY,K,KK
"RTN","LRMLED",267,0)
 I LRX="" Q ""
"RTN","LRMLED",268,0)
 S K="^"_LRX_"0)",KK=$G(@K),$P(LRSTUB,"|",3)=$P(KK,U,1)
"RTN","LRMLED",269,0)
 S LRX=$P(LRX,"(",2)
"RTN","LRMLED",270,0)
 ;
"RTN","LRMLED",271,0)
 ; Data type
"RTN","LRMLED",272,0)
 S LRTYPE=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","TYPE")
"RTN","LRMLED",273,0)
 S $P(LRSTUB,"|",2)=LRTYPE
"RTN","LRMLED",274,0)
 ;
"RTN","LRMLED",275,0)
 ; Input transform
"RTN","LRMLED",276,0)
 S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"",$S(LRTYPE="SET":"POINTER",1:"INPUT TRANSFORM"))
"RTN","LRMLED",277,0)
 I LRTYPE="NUMERIC",LRY["LRNUM" D
"RTN","LRMLED",278,0)
 . S LRX=$P(LRY,"""",2)
"RTN","LRMLED",279,0)
 . I LRX?.1"-".N1","1.N1","1N S LRY="Number from "_$P(LRX,",")_" to "_$P(LRX,",",2)_" with "_$P(LRX,",",3)_" decimal"
"RTN","LRMLED",280,0)
 . S $P(LRSTUB,"|",1)=LRY
"RTN","LRMLED",281,0)
 ; Help prompt
"RTN","LRMLED",282,0)
 I LRTYPE="FREE TEXT" D
"RTN","LRMLED",283,0)
 . S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","HELP-PROMPT")
"RTN","LRMLED",284,0)
 . S $P(LRSTUB,"|",1)=LRY
"RTN","LRMLED",285,0)
 Q LRSTUB
"RTN","LRMLED",286,0)
 ;
"RTN","LRMLED",287,0)
EOUT ; quit
"RTN","LRMLED",288,0)
 L -^TMP(LR60IEN,LRS)
"RTN","LRMLED",289,0)
 K LXA,LXB,LXC,LXD,LXE,LXF,LXG,A,LR60IEN,DA,DIC,DIQ,B,C,D,LRS,LSITE,LRNT,LRNTI,AR,I,LRMLTFREC
"RTN","LRMLED",290,0)
 K LRSITE,LRSITEN,LRGMAIL,LRSMAIL,LRNMAIL,LACT,MAILPERSON,LR64,LRNLT,LRSEC,LRCOM,LRCTY,LRNEWTEST,LRSUBSCRIPT
"RTN","LRMLED",291,0)
 K LRNOS1,LRNOS2,LRSCHPA,LRSCHNM,ALI,LRTEXT,LR64N,LRDTNM,G
"RTN","LRMLED",292,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLED",293,0)
 Q
"RTN","LRMLED",294,0)
 ;
"RTN","LRMLED",295,0)
 ; This section is called by the NEW Record cross references in file 60
"RTN","LRMLED",296,0)
 ; CR 489 for BED (base level edit) and SITE/SPECIMEN sub Level 490 for SED
"RTN","LRMLED",297,0)
 ;
"RTN","LRMLED",298,0)
BED(LR60IEN) ;ENTRY POINT FOR MAIN EDITS
"RTN","LRMLED",299,0)
 ;
"RTN","LRMLED",300,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC,LRN,LRO
"RTN","LRMLED",301,0)
 M LRO=X1,LRN=X2
"RTN","LRMLED",302,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save from file 60 Cross Reference #489"
"RTN","LRMLED",303,0)
 S ZTRTN="BEDA^LRMLED("_LR60IEN_")",ZTSAVE("LR60IEN")=""
"RTN","LRMLED",304,0)
 S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLED",305,0)
 S ZTIO=""
"RTN","LRMLED",306,0)
 D ^%ZTLOAD
"RTN","LRMLED",307,0)
 Q
"RTN","LRMLED",308,0)
 ;
"RTN","LRMLED",309,0)
BEDA(LRDA) ; edits from main level
"RTN","LRMLED",310,0)
 Q:$D(LRMLTFREC)
"RTN","LRMLED",311,0)
 ; (1)-3 TYPE (2)-131 CREATION DATE (3)-133 TEST INACTIVE DATE
"RTN","LRMLED",312,0)
 ; X1-old array  X2-new array
"RTN","LRMLED",313,0)
 N A,B,C,D,E,F,G,I,DA,LO,LN,LE,LLI,LTYP
"RTN","LRMLED",314,0)
 M A=DR S D=0
"RTN","LRMLED",315,0)
 N DR,DIE,DIC,X
"RTN","LRMLED",316,0)
 F I=1:1:3 S F=$G(LRO(I)),G=$G(LRN(I)) I F'=G S D=1
"RTN","LRMLED",317,0)
 I 'D G BEDO
"RTN","LRMLED",318,0)
 F LLI=1:1:3 S LO=$G(LRO(LLI)),LN=$G(LRN(LLI)) I LO'=LN S LTYP=$S(LLI=1:"Y",LLI=2:"C",1:"T") D  D SAV
"RTN","LRMLED",319,0)
 . ; I LTYP="C"!(LTYP="T") S:+LO>0 LO=$$FMTE^XLFDT(LO,9) S:+LN>0 LN=$$FMTE^XLFDT(LN,9)
"RTN","LRMLED",320,0)
 G BEDO
"RTN","LRMLED",321,0)
 ;
"RTN","LRMLED",322,0)
BEDO K A,B,C,D,E,I,X,DA,LRN,LRO,LO,LN,LE,LLI,DR,DIE,DIC,LRMLTFREC,LTYP
"RTN","LRMLED",323,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLED",324,0)
 Q
"RTN","LRMLED",325,0)
 ;
"RTN","LRMLED",326,0)
SAV ; file edit in 60.28
"RTN","LRMLED",327,0)
 N DR,DIE,DIC,X,DA,Y,LRMLTFREC,LE
"RTN","LRMLED",328,0)
 S DA(1)=LRDA,DA=0,LRMLTFREC=1
"RTN","LRMLED",329,0)
 S LE="^LAB(60,"_DA(1)_",15,",DIC=LE,DIC(0)="QEAL"
"RTN","LRMLED",330,0)
 S X=$$NOW^XLFDT
"RTN","LRMLED",331,0)
 L +^LAB(60,DA(1),15):30 I '$T Q
"RTN","LRMLED",332,0)
 D FILE^DICN
"RTN","LRMLED",333,0)
 L -^LAB(60,DA(1),15)
"RTN","LRMLED",334,0)
 I Y="-1" Q
"RTN","LRMLED",335,0)
 S DIE=LE,DA=+Y
"RTN","LRMLED",336,0)
 S DR=".02///"_+$G(DUZ)_";.03///"_LTYP_";.04///"_LO_";.05///"_LN
"RTN","LRMLED",337,0)
 D ^DIE
"RTN","LRMLED",338,0)
 K DR,DIE,DIC,X,DA,Y,LRMLTFREC,LE
"RTN","LRMLED",339,0)
 Q
"RTN","LRMLED",340,0)
 ;
"RTN","LRMLED",341,0)
SED(LR6001IEN,LR60IEN) ;ENTRY POINT FOR MAIN SITE/SPECIMEN EDITS
"RTN","LRMLED",342,0)
 ;
"RTN","LRMLED",343,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC,LRN,LRO
"RTN","LRMLED",344,0)
 M LRO=X1,LRN=X2
"RTN","LRMLED",345,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save from file 60 Cross Reference #490"
"RTN","LRMLED",346,0)
 S ZTRTN="SEDA^LRMLED("_LR6001IEN_","_LR60IEN_")",ZTSAVE("LR60IEN")="",ZTSAVE("LR6001IEN")=""
"RTN","LRMLED",347,0)
 S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLED",348,0)
 S ZTIO=""
"RTN","LRMLED",349,0)
 D ^%ZTLOAD
"RTN","LRMLED",350,0)
 Q
"RTN","LRMLED",351,0)
 ;
"RTN","LRMLED",352,0)
SEDA(LRDA,LRDA1) ; edits from site/specimen level
"RTN","LRMLED",353,0)
 ; (1)-30 MLTF VUID (2)-RESULT/SPECIMEN INACTIVE DATE (3)-EXCEPTION FLAG (4)-SPECIMEN CREATE DATE
"RTN","LRMLED",354,0)
 ; X1-old array  X2-new array
"RTN","LRMLED",355,0)
 Q:$D(LRMLTFREC)
"RTN","LRMLED",356,0)
 N A,B,C,D,E,F,DA,LLI,LTYP
"RTN","LRMLED",357,0)
 M A=DR
"RTN","LRMLED",358,0)
 N DR,DIE,DIC,X
"RTN","LRMLED",359,0)
 S D="" F I=1:1:4 S E=$G(LRO(I)),F=$G(LRN(I)) I E'=F S D=1
"RTN","LRMLED",360,0)
 I 'D G BEDO
"RTN","LRMLED",361,0)
 F LLI=1:1:4 S LO=$G(LRO(LLI)),LN=$G(LRN(LLI)) I LO'=LN S LTYP=$S(LLI=1:"M",LLI=2:"R",LLI=3:"E",1:"S") D  D SSAV
"RTN","LRMLED",362,0)
 . ; I LTYP="R"!(LTYP="S") S:+LO>0 LO=$$FMTE^XLFDT(LO,9) S:+LN>0 LN=$$FMTE^XLFDT(LN,9)
"RTN","LRMLED",363,0)
 G BEDO
"RTN","LRMLED",364,0)
 Q
"RTN","LRMLED",365,0)
 ;
"RTN","LRMLED",366,0)
SSAV ; file edit in 60.28
"RTN","LRMLED",367,0)
 N DR,DIE,DIC,X,DA,Y,LRMLTFREC,LE
"RTN","LRMLED",368,0)
 S DA(1)=LRDA1,DA=0,LRMLTFREC=1
"RTN","LRMLED",369,0)
 S LE="^LAB(60,"_DA(1)_",15,",DIC=LE,DIC(0)="QEAL"
"RTN","LRMLED",370,0)
 S X=$$NOW^XLFDT
"RTN","LRMLED",371,0)
 L +^LAB(60,DA(1),15):30 I '$T Q
"RTN","LRMLED",372,0)
 D FILE^DICN
"RTN","LRMLED",373,0)
 L -^LAB(60,DA(1),15)
"RTN","LRMLED",374,0)
 I Y="-1" Q
"RTN","LRMLED",375,0)
 S DIE=LE,DA=+Y
"RTN","LRMLED",376,0)
 S DR=".02///"_+$G(DUZ)_";.03///"_LTYP_";.04///"_LO_";.05///"_LN_";.06///"_LRDA
"RTN","LRMLED",377,0)
 D ^DIE
"RTN","LRMLED",378,0)
 K DR,DIE,DIC,X,DA,Y,LRMLTFREC,LE
"RTN","LRMLED",379,0)
 Q
"RTN","LRMLED",380,0)
 ;
"RTN","LRMLED",381,0)
GET664 ; get file 66.4 info
"RTN","LRMLED",382,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLED",383,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLED",384,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRMLED",385,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRMLED",386,0)
 Q
"RTN","LRMLED",387,0)
 ;
"RTN","LRMLED",388,0)
GET60T ; get top of file 60 test info
"RTN","LRMLED",389,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;131" K ^UTILITY("DIQ1",$J) D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLED",390,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLED",391,0)
 Q
"RTN","LRMLED",392,0)
 ;
"RTN","LRMLEDA")
0^22^B133294860^n/a
"RTN","LRMLEDA",1,0)
LRMLEDA ;BPFO/DTG - NTRT MESSAGE PROCESS AND EDITS UPDATE ;02/10/2016
"RTN","LRMLEDA",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRMLEDA",3,0)
 ;
"RTN","LRMLEDA",4,0)
 ; This section is for sending the XML message to ISAAC via HTTP/HTTPS
"RTN","LRMLEDA",5,0)
 ;
"RTN","LRMLEDA",6,0)
 ; first we save to ^XTMP
"RTN","LRMLEDA",7,0)
 Q
"RTN","LRMLEDA",8,0)
EN ; XTMP save
"RTN","LRMLEDA",9,0)
 N LRXTMPNM,LRXTMPNUM,CNT,LRNTRTSAV
"RTN","LRMLEDA",10,0)
 S CNT=0
"RTN","LRMLEDA",11,0)
ENA S LRXTMPNM="LRNTRTSAV"
"RTN","LRMLEDA",12,0)
 L +^XTMP(LRXTMPNM):30 I '$T H 10 S CNT=CNT+1 G ENA:CNT<11,ENO
"RTN","LRMLEDA",13,0)
 S ^XTMP(LRXTMPNM,0)=$$FMADD^XLFDT(DT,365)_U_$$NOW^XLFDT()_U_"Lab New Term to NTRT STS XML"
"RTN","LRMLEDA",14,0)
 S LRXTMPNUM=$G(^XTMP(LRXTMPNM,"CTRL")),LRXTMPNUM=LRXTMPNUM+1,^XTMP(LRXTMPNM,"CTRL")=LRXTMPNUM
"RTN","LRMLEDA",15,0)
 L -^XTMP(LRXTMPNM)
"RTN","LRMLEDA",16,0)
 S CNT=0
"RTN","LRMLEDA",17,0)
 ; LRTEXT is the built XML send array
"RTN","LRMLEDA",18,0)
 ; LR60IEN is the file 60 test IEN
"RTN","LRMLEDA",19,0)
 ; LRS is the Specimen IEN from the 60 specimen multiple (60.01)
"RTN","LRMLEDA",20,0)
 ; LRDUZ is the DUZ of the person saving the test/specimen item
"RTN","LRMLEDA",21,0)
ENL L +^XTMP(LRXTMPNM,"SEND",LRXTMPNUM):20 I '$T H 2 S CNT=CNT+1 G ENL:CNT<11,ENO
"RTN","LRMLEDA",22,0)
 M ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"I")=LRTEXT
"RTN","LRMLEDA",23,0)
 S ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"DUZ")=LRDUZ
"RTN","LRMLEDA",24,0)
 S ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"LR60IEN")=LR60IEN
"RTN","LRMLEDA",25,0)
 S ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"LRS")=LRS
"RTN","LRMLEDA",26,0)
 S ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"ERROR")=0
"RTN","LRMLEDA",27,0)
 L -^XTMP(LRXTMPNM,"SEND",LRXTMPNUM)
"RTN","LRMLEDA",28,0)
ENSL L +^XTMP(LRXTMPNM,"O"):5 I '$T G ENO
"RTN","LRMLEDA",29,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLEDA",30,0)
 S LRNTRTSAV="LRNTRTSAV"
"RTN","LRMLEDA",31,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Send NTRT message to ISAAC"
"RTN","LRMLEDA",32,0)
 S ZTSAVE("LRXTMPNM")=""
"RTN","LRMLEDA",33,0)
 S ZTRTN="XMLSND^LRMLEDA",ZTIO=""
"RTN","LRMLEDA",34,0)
 D ^%ZTLOAD
"RTN","LRMLEDA",35,0)
 L -^XTMP(LRXTMPNM,"O")
"RTN","LRMLEDA",36,0)
 K ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLEDA",37,0)
ENO K LRXTMPNM,LRXTMPNUM,CNT,LRNTRTSAV
"RTN","LRMLEDA",38,0)
 Q
"RTN","LRMLEDA",39,0)
 ;
"RTN","LRMLEDA",40,0)
 ; entry to send messages to ISAAC
"RTN","LRMLEDA",41,0)
 ;
"RTN","LRMLEDA",42,0)
XMLSND ;
"RTN","LRMLEDA",43,0)
 N CNT,A,B,C,LRT,LRDUZ,LRG,LRS,LR60IEN,LRA,LRTEXT,LRRDAT,LRSDAT,LRRHD,LRSHD,LRFLG,LRMETH,URL,LRXTVER
"RTN","LRMLEDA",44,0)
 N LSITE,LRNT,LRNTI,AR,LRNMAIL,LRGMAIL,LRIS,LRPRT,LRIPATH,LXA,LXB,LRNOS1,LRNOS2,LRERR,LRDUZ,LRXTMPNM
"RTN","LRMLEDA",45,0)
 N AB,CC,DA,DIC,DIQ,DR,E,LACT,LRNOS3,LRSITEN,LXC,STATUS,XMDUZ,XMY,XMSUB,XMTEXT
"RTN","LRMLEDA",46,0)
 S CNT=0,LRXTMPNM="LRNTRTSAV"
"RTN","LRMLEDA",47,0)
X1 L +^XTMP(LRXTMPNM,"O"):20 I '$T S CNT=CNT+1 G X1:CNT<11,XMLOUT
"RTN","LRMLEDA",48,0)
 I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLEDA",49,0)
 ; get file 66.4 current info
"RTN","LRMLEDA",50,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLEDA",51,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLEDA",52,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRMLEDA",53,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRMLEDA",54,0)
 ;site number and name
"RTN","LRMLEDA",55,0)
 S LRSITE=$G(LRNTI(.01,"I")),LRSITEN=$G(LRNTI(.01,"E"))
"RTN","LRMLEDA",56,0)
 ;ntrt mail group
"RTN","LRMLEDA",57,0)
 S LRNMAIL=$G(LRNTI(1,"I"))
"RTN","LRMLEDA",58,0)
 ;lab send mail group
"RTN","LRMLEDA",59,0)
 S LRGMAIL=$G(LRNTI(2,"I"))
"RTN","LRMLEDA",60,0)
 ;how to send mail
"RTN","LRMLEDA",61,0)
 S LACT=$G(LRNTI(.02,"E"))
"RTN","LRMLEDA",62,0)
 ; Isaac web address
"RTN","LRMLEDA",63,0)
 S LRIS=$G(LRNTI(4,"I"))
"RTN","LRMLEDA",64,0)
 S AA=$$XUP(LRIS) S:$E(AA,1,4)="HTTP" LRIS=$P(LRIS,"//",2,999) S:$E(LRIS,($L(LRIS)))="/" LRIS=$E(LRIS,1,($L(LRIS)-1))
"RTN","LRMLEDA",65,0)
 ; Isaac port number
"RTN","LRMLEDA",66,0)
 S LRPRT=$G(LRNTI(5,"I"))
"RTN","LRMLEDA",67,0)
 ; Isaac path
"RTN","LRMLEDA",68,0)
 S LRIPATH=$G(LRNTI(6,"I")) I LRIPATH'="" D  ;<
"RTN","LRMLEDA",69,0)
 . S LRIPATH=$TR(LRIPATH,"~","/")
"RTN","LRMLEDA",70,0)
 . S:$E(LRIPATH,1)'="/" LRIPATH="/"_LRIPATH
"RTN","LRMLEDA",71,0)
 S URL=LRIS_":"_LRPRT_LRIPATH
"RTN","LRMLEDA",72,0)
 ; if web address or port number are nill do not send
"RTN","LRMLEDA",73,0)
 S LRNOS3=0 I $G(LRNTI(4,"I"))=""!($G(LRNTI(5,"I"))="") S LRNOS3=1
"RTN","LRMLEDA",74,0)
 ;if no send method
"RTN","LRMLEDA",75,0)
 S LRNOS1=0 I LACT=""!(LACT="N")!($G(LRNTI(.05,"I"))="N")!($G(LRNTI(.1,"I"))'=1) S LRNOS1=1
"RTN","LRMLEDA",76,0)
 S AA=$$XUP(LRGMAIL)
"RTN","LRMLEDA",77,0)
 ; if not production or not VA
"RTN","LRMLEDA",78,0)
 S LRNOS2=0 I '$$PROD^XUPROD()!(AA'["DOMAIN.EXT") S LRNOS2=1
"RTN","LRMLEDA",79,0)
 ;
"RTN","LRMLEDA",80,0)
 S LRA=0,LRXTVER=1+($$PATCH^XPDUTL("XT*7.3*138"))
"RTN","LRMLEDA",81,0)
 S LRFLG=10
"RTN","LRMLEDA",82,0)
X2 S LRA=$O(^XTMP(LRXTMPNM,"SEND",LRA)) I 'LRA L -^XTMP(LRXTMPNM,"O") G XMLOUT
"RTN","LRMLEDA",83,0)
 S CNT=0
"RTN","LRMLEDA",84,0)
X2A L +^XTMP(LRXTMPNM,"SEND",LRA):5 I '$T S CNT=CNT+1 G X2A:CNT<11,XMLOUT
"RTN","LRMLEDA",85,0)
 K LRT,LRRHD,LRRHD,LRSDAT,LRSHD,REDIR
"RTN","LRMLEDA",86,0)
 S (LRRHD,LRSHD,LRRDAT)=""
"RTN","LRMLEDA",87,0)
 S REDIR=0,LRSHD("CONTENT-TYPE")="application/xml",STATUS=""
"RTN","LRMLEDA",88,0)
 M LRT=^XTMP(LRXTMPNM,"SEND",LRA,"I")
"RTN","LRMLEDA",89,0)
 S LRDUZ=^XTMP(LRXTMPNM,"SEND",LRA,"DUZ"),LR60IEN=^XTMP(LRXTMPNM,"SEND",LRA,"LR60IEN")
"RTN","LRMLEDA",90,0)
 S LRS=^XTMP(LRXTMPNM,"SEND",LRA,"LRS"),LRERR=^XTMP(LRXTMPNM,"SEND",LRA,"ERROR")
"RTN","LRMLEDA",91,0)
 ; File 60 test info
"RTN","LRMLEDA",92,0)
 ; .01 test name, 4 subscript (CH), 5 data name, 13 field (DD of 5), 64.1 result nlt code
"RTN","LRMLEDA",93,0)
 S DA=+LR60IEN
"RTN","LRMLEDA",94,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;4;64.1;5;13;132;133" K ^UTILITY("DIQ1",$J) D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLEDA",95,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLEDA",96,0)
 ; get file 60 Test/Specimen info
"RTN","LRMLEDA",97,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=100,DA=+LR60IEN K LXB,^UTILITY("DIQ1",$J)
"RTN","LRMLEDA",98,0)
 S DR(60.01)=".01;6;1;2;9.2;9.3;13;30;32;33;34;35",DA(60.01)=LRS
"RTN","LRMLEDA",99,0)
 D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLEDA",100,0)
 K LXC M LXC=LXB("60.01",LRS) K LXB
"RTN","LRMLEDA",101,0)
 ; do not try if failed 10 times
"RTN","LRMLEDA",102,0)
 I LRERR>9 D XMERR G X2
"RTN","LRMLEDA",103,0)
 ;
"RTN","LRMLEDA",104,0)
 ; check if ok to send a message
"RTN","LRMLEDA",105,0)
 I LRNOS1=1!(LRNOS2=1)!(LRNOS3=1) D NOTVALID G X2
"RTN","LRMLEDA",106,0)
 ;
"RTN","LRMLEDA",107,0)
 S STATUS=$$GETURL^XTHC10(URL,LRFLG,"LRRDAT",.LRRHD,"LRT",.LRSHD,$G(REDIR)+1)
"RTN","LRMLEDA",108,0)
 S A=$TR(STATUS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRMLEDA",109,0)
 I A["OK"!(A["ACCEPTED") D  G X2
"RTN","LRMLEDA",110,0)
 .; send message to order and group that message was sent to ISAAC NTRT
"RTN","LRMLEDA",111,0)
 . K XMY,LRTEXT
"RTN","LRMLEDA",112,0)
 . S XMSUB="NEW NTRT REQUEST FOR LABORATORY HAS BEEN SENT"
"RTN","LRMLEDA",113,0)
 . S XMY(LRDUZ)=""
"RTN","LRMLEDA",114,0)
 . S XMDUZ("AUTO ISAAC NTRT PROCESS")="" I LRGMAIL'="" S XMY($P(LRGMAIL,"@",1))=""
"RTN","LRMLEDA",115,0)
 . S LRTEXT(1)="A new Laboratory Test has been entered at: "_LRSITEN_" / "_LRSITE
"RTN","LRMLEDA",116,0)
 . S LRTEXT(2)=""
"RTN","LRMLEDA",117,0)
 . S LRTEXT(3)="Laboratory Test Name / Specimen name: "_$G(LXA(.01,"I"))_" / "_$G(LXC(.01,"E"))
"RTN","LRMLEDA",118,0)
 . S LRTEXT(4)=""
"RTN","LRMLEDA",119,0)
 . S LRTEXT(5)="Send Status: "_STATUS
"RTN","LRMLEDA",120,0)
 . S LRTEXT(6)=""
"RTN","LRMLEDA",121,0)
 . S A=0,B="",I=6 F  S A=$O(LRRDAT(A)) Q:'A  S B=$G(LRRDAT(A)) S:B'="" I=I+1,LRTEXT(I)="ISAAC Reference Information: "_B
"RTN","LRMLEDA",122,0)
 . S LRTEXT(I+1)=""
"RTN","LRMLEDA",123,0)
 . S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRMLEDA",124,0)
 . ;put exception flag in 60 file
"RTN","LRMLEDA",125,0)
 . ; since making exception flag uneditable must do physical set
"RTN","LRMLEDA",126,0)
 . N A,B,LRO,LRN,I S A=$G(^LAB(60,LR60IEN,1,LRS,5)),B=A,$P(B,U,3)="Y",^LAB(60,LR60IEN,1,LRS,5)=B
"RTN","LRMLEDA",127,0)
 . ; need to build array for saving in audit section
"RTN","LRMLEDA",128,0)
 . F I=1,2,4 S LRO(I)="",LRN(I)=""
"RTN","LRMLEDA",129,0)
 . S LRO(3)=$P(A,U,3),LRN(3)=$P(B,U,3) D  ;<
"RTN","LRMLEDA",130,0)
 . . N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLEDA",131,0)
 . . S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save of Deployed Flag"
"RTN","LRMLEDA",132,0)
 . . S ZTRTN="SEDA^LRMLED("_LRS_","_LR60IEN_")",ZTSAVE("LR60IEN")="",ZTSAVE("LRS")=""
"RTN","LRMLEDA",133,0)
 . . S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLEDA",134,0)
 . . S ZTIO=""
"RTN","LRMLEDA",135,0)
 . . D ^%ZTLOAD
"RTN","LRMLEDA",136,0)
 . ; remove item from send
"RTN","LRMLEDA",137,0)
 . S ^XTMP(LRXTMPNM,"DONE",LRA)=LR60IEN_U_LRS_$$NOW^XLFDT_U_LRDUZ
"RTN","LRMLEDA",138,0)
 . K ^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",139,0)
 . L -^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",140,0)
 . ;
"RTN","LRMLEDA",141,0)
 S LRERR=LRERR+1,^XTMP(LRXTMPNM,"SEND",LRA,"ERROR")=LRERR,^XTMP(LRXTMPNM,"SEND",LRA,"ERROR",LRERR)=STATUS
"RTN","LRMLEDA",142,0)
 L -^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",143,0)
 G X2
"RTN","LRMLEDA",144,0)
 ;
"RTN","LRMLEDA",145,0)
XMLOUT K CNT,A,B,C,LRT,LRDUZ,LRG,LRS,LR60IEN,LRA,LRTEXT,LRRDAT,LRSDAT,LRRHD,LRSHD,LRFLG,LRMETH,URL,LRXTVER
"RTN","LRMLEDA",146,0)
 K LSITE,LRNT,LRNTI,AR,LRNMAIL,LRGMAIL,LRIS,LRPRT,LRIPATH,LXA,LXB,LRNOS1,LRNOS2,LRERR,LRDUZ,AA,LRXTMPNM
"RTN","LRMLEDA",147,0)
 K AB,CC,DA,DIC,DIQ,DR,E,LACT,LRNOS3,LRSITEN,LXC,STATUS,XMDUZ,XMY,XMSUB,XMTEXT
"RTN","LRMLEDA",148,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLEDA",149,0)
 Q
"RTN","LRMLEDA",150,0)
 ;
"RTN","LRMLEDA",151,0)
XUP(UP) ;change to upper case
"RTN","LRMLEDA",152,0)
 I UP="" Q ""
"RTN","LRMLEDA",153,0)
 N A
"RTN","LRMLEDA",154,0)
 S A=$TR(UP,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRMLEDA",155,0)
 Q A
"RTN","LRMLEDA",156,0)
 ;
"RTN","LRMLEDA",157,0)
XMERR ; If error count is above 9 send message to LIM that request did not go out and include request in message
"RTN","LRMLEDA",158,0)
 ;
"RTN","LRMLEDA",159,0)
 K XMY,LRTEXT
"RTN","LRMLEDA",160,0)
 S XMSUB="NOT ABLE TO SEND NEW NTRT REQUEST FOR LABORATORY"
"RTN","LRMLEDA",161,0)
 S XMY(LRDUZ)=""
"RTN","LRMLEDA",162,0)
 S XMDUZ("AUTO ISAAC NTRT PROCESS")="" I LRGMAIL'="" S XMY($P(LRGMAIL,"@",1))=""
"RTN","LRMLEDA",163,0)
 S LRTEXT(1)="A new Laboratory Test has been entered at: "_LRSITEN_" / "_LRSITE
"RTN","LRMLEDA",164,0)
 S LRTEXT(2)=""
"RTN","LRMLEDA",165,0)
 S LRTEXT(3)="Laboratory Test Name / Specimen name: "_$G(LXA(.01,"I"))_" / "_$G(LXC(.01,"E"))
"RTN","LRMLEDA",166,0)
 S LRTEXT(4)=""
"RTN","LRMLEDA",167,0)
 ; the error statuses
"RTN","LRMLEDA",168,0)
 S A=0,C=5 F  S A=$O(^XTMP(LRXTMPNM,"SEND",LRA,"ERROR",A)) Q:'A  S B=^XTMP(LRXTMPNM,"SEND",LRA,"ERROR",A) D  ;<
"RTN","LRMLEDA",169,0)
 . S LRTEXT(C)="Error number: "_A_" Error Reason: "_B,LRTEXT(C+1)=""
"RTN","LRMLEDA",170,0)
 . S C=C+2
"RTN","LRMLEDA",171,0)
 S LRTEXT(C)="Original Message Contents:",LRTEXT(C+1)="",C=C+2
"RTN","LRMLEDA",172,0)
 S A=0 F  S A=$O(LRT(A)) Q:'A  S B=LRT(A),LRTEXT(C)=B,C=C+1
"RTN","LRMLEDA",173,0)
 S LRTEXT(C)=""
"RTN","LRMLEDA",174,0)
 S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRMLEDA",175,0)
 M ^XTMP(LRXTMPNM,"NOTSENT",LRA)=^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",176,0)
 K ^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",177,0)
 L -^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",178,0)
 Q
"RTN","LRMLEDA",179,0)
 ;
"RTN","LRMLEDA",180,0)
NOTVALID ; if not valid to send to ISAAC then only send MAILMAN message to 
"RTN","LRMLEDA",181,0)
 K XMY,LRTEXT
"RTN","LRMLEDA",182,0)
 S XMSUB="NOT ABLE TO SEND NEW NTRT REQUEST FOR LABORATORY"
"RTN","LRMLEDA",183,0)
 S XMY(LRDUZ)=""
"RTN","LRMLEDA",184,0)
 S XMDUZ("AUTO ISAAC NTRT PROCESS")="" I LRGMAIL'="" S XMY($P(LRGMAIL,"@",1))=""
"RTN","LRMLEDA",185,0)
 S LRTEXT(1)="A new Laboratory Test has been entered at: "_LRSITEN_" / "_LRSITE
"RTN","LRMLEDA",186,0)
 S LRTEXT(2)=""
"RTN","LRMLEDA",187,0)
 S LRTEXT(3)="Laboratory Test Name / Specimen name: "_$G(LXA(.01,"I"))_" / "_$G(LXC(.01,"E"))
"RTN","LRMLEDA",188,0)
 S LRTEXT(4)=""
"RTN","LRMLEDA",189,0)
 S LRTEXT(5)=" ** This message was not sent to ISAAC due to one of the following reasons: **"
"RTN","LRMLEDA",190,0)
 S C=5
"RTN","LRMLEDA",191,0)
 S A="",B="",CC="",D="",E="" S:LRNOS1=1 A="No Send Location" S:'$$PROD^XUPROD() B="Not a Production System" S:AA'["DOMAIN.EXT" CC="Not a VA System"
"RTN","LRMLEDA",192,0)
 I LRNOS3=1 S:$G(LRNTI(4,"I"))="" D="Missing ISAAC Web Address" S:$G(LRNTI(5,"I"))="" E="Missing ISAAC Port Number"
"RTN","LRMLEDA",193,0)
 I B'=""!(C'="") D  ;<
"RTN","LRMLEDA",194,0)
 . F I="A","B","CC","D","E" S AB=$G(@I) I AA'="" S C=C+1,LRTEXT(C)=AB
"RTN","LRMLEDA",195,0)
 . ; I B'="" S:A'="" A=A_" , " S A=A_B
"RTN","LRMLEDA",196,0)
 . ; I CC'="" S:A'="" A=A_" , " S A=A_CC
"RTN","LRMLEDA",197,0)
 . ; I D'="" S:A'="" A=A_" , " S A=A_D
"RTN","LRMLEDA",198,0)
 . ; I E'="" S:A'="" A=A_" , " S A=A_E
"RTN","LRMLEDA",199,0)
 ; S LRTEXT(6)=A,LRTEXT(7)="",C=8
"RTN","LRMLEDA",200,0)
 S C=C+1,LRTEXT(C)="",C=C+1
"RTN","LRMLEDA",201,0)
 S LRTEXT(C)="Original Message Contents:",LRTEXT(C+1)="",C=C+2
"RTN","LRMLEDA",202,0)
 S A=0 F  S A=$O(LRT(A)) Q:'A  S B=LRT(A),LRTEXT(C)=B,C=C+1
"RTN","LRMLEDA",203,0)
 S LRTEXT(C)=""
"RTN","LRMLEDA",204,0)
 S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRMLEDA",205,0)
 K ^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",206,0)
 L -^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",207,0)
 Q
"RTN","LRMLEDA",208,0)
 ;
"RTN","LRMLEDA",209,0)
CHKACT(FILIEN) ; check if 66.3 item is active
"RTN","LRMLEDA",210,0)
 ;
"RTN","LRMLEDA",211,0)
 N A,B,C,D
"RTN","LRMLEDA",212,0)
 I 'FILIEN Q "0"
"RTN","LRMLEDA",213,0)
 S (A,B,C)=""
"RTN","LRMLEDA",214,0)
 S A=$O(^LRMLTF(FILIEN,"TERMSTATUS",9999999),-1) I 'A Q "0"
"RTN","LRMLEDA",215,0)
 S B=$G(^LRMLTF(FILIEN,"TERMSTATUS",A,0))
"RTN","LRMLEDA",216,0)
 I $P(B,U,2)=1 Q "1"
"RTN","LRMLEDA",217,0)
 Q "0"
"RTN","LRMLEDA",218,0)
 ;
"RTN","LRMLEDA",219,0)
XML ;send xml to NTRT
"RTN","LRMLEDA",220,0)
 ; moved here from LRMLED
"RTN","LRMLEDA",221,0)
 S ALI=0 K LRTEXT
"RTN","LRMLEDA",222,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=$$XMLHDR^MXMLUTL()
"RTN","LRMLEDA",223,0)
 ; get the schemea name and the schema path
"RTN","LRMLEDA",224,0)
 S LRSCHNM=$G(LRNTI(7,"I")),LRSCHPA=$G(LRNTI(8,"I"))
"RTN","LRMLEDA",225,0)
 S A=$TR(LRSCHNM,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRMLEDA",226,0)
 I LRSCHNM'=""&($E(A,($L(A)-4),$L(A))'[".XSD") S LRSCHNM=LRSCHNM_".XSD"
"RTN","LRMLEDA",227,0)
 I LRSCHPA'="" D  ;<
"RTN","LRMLEDA",228,0)
 . S LRSCHPA=$TR(LRSCHPA,"~","/")
"RTN","LRMLEDA",229,0)
 . I $E(LRSCHPA,1,2)'="//" S LRSCHPA="//"_LRSCHPA
"RTN","LRMLEDA",230,0)
 . I $E(LRSCHPA,$L(LRSCHPA))'="/" S LRSCHPA=LRSCHPA_"/"
"RTN","LRMLEDA",231,0)
 S A="uri:"_LRSCHPA_LRSCHNM
"RTN","LRMLEDA",232,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<DATAEXTRACTS xmlns="""_A_""" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""
"RTN","LRMLEDA",233,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=">"
"RTN","LRMLEDA",234,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<LAB_NTRT>"
"RTN","LRMLEDA",235,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Facility_Name/Number>"_LRSITEN_" / "_LRSITE_"</Facility_Name/Number>"
"RTN","LRMLEDA",236,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Facility_Group_e-mail>"_LRGMAIL_"</Facility_Group_e-mail>"
"RTN","LRMLEDA",237,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<New_Laboratory_Test_Name>"_$G(LXA(.01,"I"))_"</New_Laboratory_Test_Name>"
"RTN","LRMLEDA",238,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<New Laboratory_Test_LOCAL_IEN>"_(+LR60IEN)_"</New Laboratory_Test_LOCAL_IEN>"
"RTN","LRMLEDA",239,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Laboratory_Test_Site/Specimen_Number_(IEN)>"_$G(LXC(.01,"I"))_"/<Laboratory_Test_Site/Specimen_Number_(IEN)>"
"RTN","LRMLEDA",240,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Laboratory_Test_Site/Specimen_Name>"_$G(LXC(.01,"E"))_"</Laboratory_Test_Site/Specimen_Name>"
"RTN","LRMLEDA",241,0)
 S B="",A=$G(LXC(.01,"I")) I A S A=$G(^LAB(61,A,0)),B=$P(A,U,10) I +B>0 S B=$P($G(^LAB(64.061,B,0)),U,1)
"RTN","LRMLEDA",242,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Spec>"_$P(A,U,1)_"</Spec>"
"RTN","LRMLEDA",243,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Time_Aspect>"_B_"</Time_Aspect>"
"RTN","LRMLEDA",244,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Units>"_$G(LXC(6,"I"))_"</Units>"
"RTN","LRMLEDA",245,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<NLT>"_LRNLT_"</NLT>"
"RTN","LRMLEDA",246,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Lab_Section>"_LRSEC_"</Lab_Section>"
"RTN","LRMLEDA",247,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Subscript>"_$G(LXA(4,"I"))_"</Subscript>"
"RTN","LRMLEDA",248,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Data_Name>"_LRDTNM_"</Data_Name>"
"RTN","LRMLEDA",249,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Data_Comment>"_LRCOM_"</Data_Comment>"
"RTN","LRMLEDA",250,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Data_Type>"_LRCTY_"</Data_Type>"
"RTN","LRMLEDA",251,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Reference_Low>"_$G(LXC(1,"I"))_"</Reference_Low>"
"RTN","LRMLEDA",252,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Reference_High>"_$G(LXC(2,"I"))_"</Reference_High>"
"RTN","LRMLEDA",253,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Therapeutic_Low>"_$G(LXC(9.2,"I"))_"</Therapeutic_Low>"
"RTN","LRMLEDA",254,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Therapeutic_High>"_$G(LXC(9.3,"I"))_"</Therapeutic_High>"
"RTN","LRMLEDA",255,0)
 ;get synonyms
"RTN","LRMLEDA",256,0)
 K B S A=0 F I=0:1 S A=$O(^LAB(60,DA,5,A)) Q:'A  S B(I)=$P(^LAB(60,DA,5,A,0),U,1)
"RTN","LRMLEDA",257,0)
 I I>0 S B=I-1 F I=0:1:B S LXG=B(I) S:LXG'="" ALI=$$LRTP(ALI),LRTEXT(ALI)="<Test_Synonyms>"_LXG_"</Test_Synonyms>"
"RTN","LRMLEDA",258,0)
 ; specimen interpretation
"RTN","LRMLEDA",259,0)
 S E=0 F I=1:1 S E=$O(LXE(E)) Q:'E  S G=LXE(E),ALI=$$LRTP(ALI),LRTEXT(ALI)="<Specimen_Interpretation>"_G_"</Specimen_Interpretation>"
"RTN","LRMLEDA",260,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="</LAB_NTRT>"
"RTN","LRMLEDA",261,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="</DATAEXTRACTS>"
"RTN","LRMLEDA",262,0)
 G EN
"RTN","LRMLEDA",263,0)
 Q
"RTN","LRMLEDA",264,0)
 ;
"RTN","LRMLEDA",265,0)
LRTP(AA) ;update text counter
"RTN","LRMLEDA",266,0)
 S AA=AA+1
"RTN","LRMLEDA",267,0)
 Q AA
"RTN","LRMLEDA",268,0)
 ;
"RTN","LRMLPRG")
0^18^B3125134^n/a
"RTN","LRMLPRG",1,0)
LRMLPRG ;BPFO/DTG - PURGE PGM FOR NTRT PROCESS ;02102016
"RTN","LRMLPRG",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRMLPRG",3,0)
 ;
"RTN","LRMLPRG",4,0)
 ;purge routine for the audit date/time multiple in file 60
"RTN","LRMLPRG",5,0)
EN ; enter here from [LR NTRT EDIT PURGE]
"RTN","LRMLPRG",6,0)
 N ZTDESC,ZTSAVE,ZTRTN,ZTDTH,ZTIO,ZTSK,LRDUZ
"RTN","LRMLPRG",7,0)
 S LRDUZ=DUZ,ZTSAVE("LRDUZ")=""
"RTN","LRMLPRG",8,0)
 S ZTDESC="LR NDS AUDITS PURGE"
"RTN","LRMLPRG",9,0)
 S ZTRTN="QUEA^LRMLPRG",ZTDTH=$$NOW^XLFDT,ZTIO=""
"RTN","LRMLPRG",10,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"Request Queued, #",ZTSK W !
"RTN","LRMLPRG",11,0)
 K ZTSK D HOME^%ZIS
"RTN","LRMLPRG",12,0)
 Q
"RTN","LRMLPRG",13,0)
 ;
"RTN","LRMLPRG",14,0)
CALL ; from task manager
"RTN","LRMLPRG",15,0)
 N ZTDESC,ZTSAVE,ZTRTN,ZTDTH,ZTSK,ZTIO
"RTN","LRMLPRG",16,0)
 S ZTDESC="LR NTRT EDITS PURGE"
"RTN","LRMLPRG",17,0)
 S ZTRTN="QUEA^LRMLPRG",ZTDTH=$$NOW^XLFDT
"RTN","LRMLPRG",18,0)
 D ^%ZTLOAD
"RTN","LRMLPRG",19,0)
 Q
"RTN","LRMLPRG",20,0)
 ;
"RTN","LRMLPRG",21,0)
QUEA ; walk ^LAB(60,,15 and trim older audits
"RTN","LRMLPRG",22,0)
 N DA,DIE,DR,A,LD,LT,B,PS,PURGEDAYS,PDT,LDT,DIDEL
"RTN","LRMLPRG",23,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLPRG",24,0)
 S B=$$SITE^VASITE,B=$P(B,U,1) I 'B G QDONE  ; not set up
"RTN","LRMLPRG",25,0)
 S PS=$O(^LAB(66.4,"B",B,0)) I PS="" G QDONE  ; 66.4 not set up
"RTN","LRMLPRG",26,0)
 S PURGEDAYS=$$GET1^DIQ(66.4,PS_",",.04)
"RTN","LRMLPRG",27,0)
 I PURGEDAYS=""!(+PURGEDAYS<1) S PURGEDAYS=220
"RTN","LRMLPRG",28,0)
 S PDT=DT-PURGEDAYS
"RTN","LRMLPRG",29,0)
 ; loop ^LAB(60 audit date/time multiple
"RTN","LRMLPRG",30,0)
 S LT=0
"RTN","LRMLPRG",31,0)
Q1 S LT=$O(^LAB(60,LT)) I 'LT G QDONE
"RTN","LRMLPRG",32,0)
 S LD=0
"RTN","LRMLPRG",33,0)
Q2 S LD=$O(^LAB(60,LT,15,LD)) I 'LD G Q1
"RTN","LRMLPRG",34,0)
 S A=$$GET1^DIQ(60.28,LD_","_LT,.01,"I") I A="" G Q2
"RTN","LRMLPRG",35,0)
 S LDT=$P(A,".",1) I LDT>PDT G Q2
"RTN","LRMLPRG",36,0)
 ; remove entry from file
"RTN","LRMLPRG",37,0)
 S DIDEL=60.28
"RTN","LRMLPRG",38,0)
 L +^LAB(60,LT,15,LD):30 I '$T G Q2
"RTN","LRMLPRG",39,0)
 S DA=LD,DA(1)=LT,DIE="^LAB(60,"_DA(1)_",15,",DR=".01///@"
"RTN","LRMLPRG",40,0)
 D ^DIE
"RTN","LRMLPRG",41,0)
 L -^LAB(60,LT,15,LD)
"RTN","LRMLPRG",42,0)
 G Q2
"RTN","LRMLPRG",43,0)
 ;
"RTN","LRMLPRG",44,0)
QDONE K DA,DIE,DR,A,LD,LT,B,PS,PURGEDAYS,PDT,LDT,DIDEL
"RTN","LRMLPRG",45,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLPRG",46,0)
 Q
"RTN","LRMLRCP")
0^14^B20138748^n/a
"RTN","LRMLRCP",1,0)
LRMLRCP ;BPFO/DTG - FILE 60 ITEMS WITHOUT MLTF REPORT PGM FOR NTRT PROCESS ;02/10/2016
"RTN","LRMLRCP",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRMLRCP",3,0)
 ;
"RTN","LRMLRCP",4,0)
 ; from option LR NDS SPECIMENS W/O VUIDS
"RTN","LRMLRCP",5,0)
 ;
"RTN","LRMLRCP",6,0)
 ; print tests and specimens that do not have a create date
"RTN","LRMLRCP",7,0)
EN ;entry point
"RTN","LRMLRCP",8,0)
 N DA,DIE,DR,A,LD,LT,B,PS,PDT,LDT,DIDEL,LRSITE,LRFDAT,LRTDAT,LRFD,LRDTA,C,D,E,K,PAGE,LRTST
"RTN","LRMLRCP",9,0)
 N LRTSTN,LRTE,X,FO,FN,CRT,LR1,PGHD,QUIT,LRDT,ULINE,XDD,Y,LRROOT,LRROOTA,LRNTI,AR,LXB,LXA
"RTN","LRMLRCP",10,0)
 N AA,DIC,DDIQ,FF,HD,I,LRNT,LRTC,LSITE,POP,DIQ
"RTN","LRMLRCP",11,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLRCP",12,0)
 S B=$$SITE^VASITE,B=$P(B,U,1) I 'B S LRSITE="Not specified" G ST  ; not set up
"RTN","LRMLRCP",13,0)
 S PS=$O(^LAB(66.4,"B",B,0)) I PS="" S LRSITE="Not specified" G ST  ; 66.4 not set up
"RTN","LRMLRCP",14,0)
 S A=$$GET1^DIQ(66.4,PS_",",.01,"I"),LRSITE=$$KSP^XUPARAM("WHERE")
"RTN","LRMLRCP",15,0)
 I LRSITE="" S LRSITE="Not specified"
"RTN","LRMLRCP",16,0)
ST ;
"RTN","LRMLRCP",17,0)
 K EDPRT,ULINE S XDD=^DD("DD"),$P(ULINE,"_",79)="_" K AUTO
"RTN","LRMLRCP",18,0)
 D HOME^%ZIS S FF=IOF,HD="Lab NDS File 60 Tests/Specimens Without MLTF Vuids Report" W @IOF,!?(IOM-$L(HD)\2),HD,!!!
"RTN","LRMLRCP",19,0)
 S Y=DT X XDD S LRDT(0)=Y,PGHD="Lab NDS File 60 Tests/Specimens Without MLTF Vuids Report"
"RTN","LRMLRCP",20,0)
 S LRFD=$$NOW^XLFDT
"RTN","LRMLRCP",21,0)
 ; skip the date questions
"RTN","LRMLRCP",22,0)
 ; S DIR(0)="D^3160101:"_LRFD_":EX",DIR("A")="Enter From Date" D ^DIR K DIR
"RTN","LRMLRCP",23,0)
 ; I $D(DUOUT)!($D(DTOUT))!($D(DIRUT))!($D(DIROUT)) W !,*7,"Starting Date Not Selected" G DONE
"RTN","LRMLRCP",24,0)
 ; S LRFDAT=Y\1
"RTN","LRMLRCP",25,0)
 ; S DIR(0)="D^"_LRFDAT_":"_LRFD_":EX",DIR("A")="Enter To Date" D ^DIR K DIR
"RTN","LRMLRCP",26,0)
 ; I $D(DUOUT)!($D(DTOUT))!($D(DIRUT))!($D(DIROUT)) W !,*7,"Ending Date Not Selected" G DONE
"RTN","LRMLRCP",27,0)
 ; S LRTDAT=Y
"RTN","LRMLRCP",28,0)
 ;
"RTN","LRMLRCP",29,0)
DEVICE S %ZIS="Q",%ZIS("A")="Output device: " D ^%ZIS
"RTN","LRMLRCP",30,0)
 I POP D HOME^ZIS W !,*7,"No Device Selected" G DONE
"RTN","LRMLRCP",31,0)
 I $D(IO("Q"))!(IOT="HFS") N ZTDTH,ZTRTN,ZTIO,ZTDESC,ZTIO,ZTSAVE S ZTDTH=$$NOW^XLFDT,ZTRTN="BK^LRMLRCP",ZTIO=ION,ZTDESC="Lab NTRT Edit Items Report" D  D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued",!! G DO
"RTN","LRMLRCP",32,0)
 . F I="D*","XDD","ULINE","HD","FF","PGHD","LRSITE","LRFDAT","LRTDAT","LRFD" S ZTSAVE(I)=""
"RTN","LRMLRCP",33,0)
 . ; I IOT="HFS" S:$G(IO("HFSIO"))="" IO("HFSIO")=IO
"RTN","LRMLRCP",34,0)
 G PRT
"RTN","LRMLRCP",35,0)
 ;
"RTN","LRMLRCP",36,0)
 ;
"RTN","LRMLRCP",37,0)
DO K ZTSK,ZTDTH,ZTRTN,ZTIO,ZTDESC,ZTIO,ZTSAVE
"RTN","LRMLRCP",38,0)
 G DONE
"RTN","LRMLRCP",39,0)
 ;
"RTN","LRMLRCP",40,0)
DONE ; exit
"RTN","LRMLRCP",41,0)
 K DA,DIE,DR,A,LD,LT,B,PS,PDT,LDT,DIDEL,LRSITE,LRFDAT,LRTDAT,LRFD,LRDTA,C,D,E,K,PAGE,LRTST
"RTN","LRMLRCP",42,0)
 K LRTSTN,LRTE,X,FO,FN,CRT,LR1,PGHD,QUIT,LRDT,ULINE,XDD,Y,LRROOT,LRROOTA,LRNTI,AR,LXB,LXA
"RTN","LRMLRCP",43,0)
 K AA,DIC,DDIQ,FF,HD,I,LRNT,LRTC,LSITE,POP,DIQ
"RTN","LRMLRCP",44,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLRCP",45,0)
 Q
"RTN","LRMLRCP",46,0)
 ;
"RTN","LRMLRCP",47,0)
BK ;entry if queued
"RTN","LRMLRCP",48,0)
PRT ; print report
"RTN","LRMLRCP",49,0)
 D GET664
"RTN","LRMLRCP",50,0)
 S (QUIT,PAGE)=0,CRT=$S($E(IOST,1,2)="C-":1,1:0),(LRTST,LRTE,LRTSTN)=""
"RTN","LRMLRCP",51,0)
 I CRT,PAGE=0 W @IOF
"RTN","LRMLRCP",52,0)
 S PAGE=PAGE+1 D HEADER
"RTN","LRMLRCP",53,0)
 S LRROOT="^LAB(60,""B"")",LRROOTA="^LAB(60,""B"""
"RTN","LRMLRCP",54,0)
PL ; Step down the B X-ref - exclude synomyms
"RTN","LRMLRCP",55,0)
 S LRROOT=$Q(@LRROOT) I $E(LRROOT,1,$L(LRROOTA))'=LRROOTA G PDONE
"RTN","LRMLRCP",56,0)
 I $G(@LRROOT)=1 G PL
"RTN","LRMLRCP",57,0)
 S LRTST=$QS(LRROOT,4)
"RTN","LRMLRCP",58,0)
 ;
"RTN","LRMLRCP",59,0)
 D GET60T
"RTN","LRMLRCP",60,0)
 ; check test is valid for NTRT
"RTN","LRMLRCP",61,0)
 S AA=$G(LXA(4,"I"))
"RTN","LRMLRCP",62,0)
 I AA="WK" G PL
"RTN","LRMLRCP",63,0)
 I AA="BB" G PL
"RTN","LRMLRCP",64,0)
 ;
"RTN","LRMLRCP",65,0)
 S LRTSTN=$G(LXA(.01,"I")),LRTSTN=$E(LRTSTN,1,40)
"RTN","LRMLRCP",66,0)
 ;
"RTN","LRMLRCP",67,0)
 S LRTC=$G(LXA(131,"I")) I LRTC'="" S LRTC=$$FMTE^XLFDT(LRTC,9)
"RTN","LRMLRCP",68,0)
 ; check test subscript is valid for NTRT
"RTN","LRMLRCP",69,0)
 S LRTE=0,LR1=0
"RTN","LRMLRCP",70,0)
PLE S LRTE=$O(^LAB(60,LRTST,1,LRTE)) I 'LRTE G PL
"RTN","LRMLRCP",71,0)
 S B=+LRTE_","_(+LRTST)
"RTN","LRMLRCP",72,0)
 K LRDTA,C,LRER D GETS^DIQ(60.01,B,"**","IE","C","LRER")
"RTN","LRMLRCP",73,0)
 I $G(LRER("DIERR"))'="" G PLE
"RTN","LRMLRCP",74,0)
 M LRDTA=C("60.01",B_",") K C
"RTN","LRMLRCP",75,0)
 I $G(LRDTA(30,"I"))'="" G PLE
"RTN","LRMLRCP",76,0)
 I LR1=0 W !,LRTSTN,?42,"Create Date: ",LRTC,?67,"Inactive: " S B=$G(LXA(132,"I")) W $S(B="":"N",1:B)
"RTN","LRMLRCP",77,0)
 S LR1=1
"RTN","LRMLRCP",78,0)
 ; specimen name if one
"RTN","LRMLRCP",79,0)
 S D=$G(LRDTA(.01,"E")) S:D'="" D=$E(D,1,30)
"RTN","LRMLRCP",80,0)
 ; create date
"RTN","LRMLRCP",81,0)
 S K=$G(LRDTA(35,"I")) I K'="" S K=$$FMTE^XLFDT(K,"7")
"RTN","LRMLRCP",82,0)
 ; inactive flag
"RTN","LRMLRCP",83,0)
 S C=$G(LRDTA(32,"I")) I C="" S C="N"
"RTN","LRMLRCP",84,0)
 ; exception flag
"RTN","LRMLRCP",85,0)
 S E=$G(LRDTA(34,"I")) I E="" S E="N"
"RTN","LRMLRCP",86,0)
 W !,?2,D,?35,K,?47,C,?57,E
"RTN","LRMLRCP",87,0)
 ;
"RTN","LRMLRCP",88,0)
 I CRT,($Y>(IOSL-4)) D  I QUIT G PDONE
"RTN","LRMLRCP",89,0)
 .D PAUSE
"RTN","LRMLRCP",90,0)
 .Q:QUIT
"RTN","LRMLRCP",91,0)
 .W @IOF
"RTN","LRMLRCP",92,0)
 .D HEADER
"RTN","LRMLRCP",93,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","LRMLRCP",94,0)
 .W @IOF
"RTN","LRMLRCP",95,0)
 .D HEADER
"RTN","LRMLRCP",96,0)
 ;
"RTN","LRMLRCP",97,0)
 G PLE
"RTN","LRMLRCP",98,0)
 ;
"RTN","LRMLRCP",99,0)
PDONE ; print done
"RTN","LRMLRCP",100,0)
 W !!,?29,$S(QUIT'=1:"--- Report Finished ---",1:"--- Report Aborted ---") G DONE
"RTN","LRMLRCP",101,0)
 ;
"RTN","LRMLRCP",102,0)
HEADER ;Description: Prints the report header.
"RTN","LRMLRCP",103,0)
 Q:QUIT
"RTN","LRMLRCP",104,0)
 N LINE
"RTN","LRMLRCP",105,0)
 I $Y>1 W @IOF
"RTN","LRMLRCP",106,0)
 W !,?11,HD
"RTN","LRMLRCP",107,0)
 W !,?27,"Date Printed: "_$$FMTE^XLFDT(DT),?70,"Page ",PAGE,!
"RTN","LRMLRCP",108,0)
 S PAGE=PAGE+1
"RTN","LRMLRCP",109,0)
 ;
"RTN","LRMLRCP",110,0)
 W !,?2,"Specimen",?35,"Create DT",?47,"Inactive",?57,"Exception"
"RTN","LRMLRCP",111,0)
 W !,ULINE
"RTN","LRMLRCP",112,0)
 I PAGE>2 D  ;<
"RTN","LRMLRCP",113,0)
 . S B=$O(^LAB(60,LRTST,1,LRTE)) I 'B Q
"RTN","LRMLRCP",114,0)
 . W !,LRTSTN
"RTN","LRMLRCP",115,0)
 Q
"RTN","LRMLRCP",116,0)
 ;
"RTN","LRMLRCP",117,0)
PAUSE N DIR,DIRUT,X,Y
"RTN","LRMLRCP",118,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","LRMLRCP",119,0)
 S DIR(0)="E" D ^DIR
"RTN","LRMLRCP",120,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","LRMLRCP",121,0)
 Q
"RTN","LRMLRCP",122,0)
 ;
"RTN","LRMLRCP",123,0)
GET664 ; get file 66.4 info
"RTN","LRMLRCP",124,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLRCP",125,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLRCP",126,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRMLRCP",127,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRMLRCP",128,0)
 Q
"RTN","LRMLRCP",129,0)
 ;
"RTN","LRMLRCP",130,0)
GET60T ; get top of file 60 test info
"RTN","LRMLRCP",131,0)
 S DA=LRTST,DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;4;64.1;5;13;131;132;133" D EN^DIQ1
"RTN","LRMLRCP",132,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLRCP",133,0)
 Q
"RTN","LRMLRCP",134,0)
 ;
"RTN","LRMLREI")
0^19^B21744522^n/a
"RTN","LRMLREI",1,0)
LRMLREI ;BPFO/DTG - EDITED ITEMS REPORT PGM FOR NTRT PROCESS ;02/10/2016
"RTN","LRMLREI",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRMLREI",3,0)
 ;
"RTN","LRMLREI",4,0)
EN ;entry point
"RTN","LRMLREI",5,0)
 N DA,DIE,DR,A,LD,LT,B,PS,PDT,LDT,DIDEL,LRSITE,LRFDAT,LRTDAT,LRFD,LRDTA,C,D,E,K,PAGE,LRTST
"RTN","LRMLREI",6,0)
 N LRTSTN,LRTE,X,FO,FN,CRT,LR1,PGHD,QUIT,LRDT,ULINE,XDD,Y,LRROOT,LRROOTA,POP
"RTN","LRMLREI",7,0)
 N DIROUT,DTOUT,FF,HD,I
"RTN","LRMLREI",8,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLREI",9,0)
 S B=$$SITE^VASITE,B=$P(B,U,1) I 'B D  I B="" S LRSITE="Not specified" G ST  ; not set up
"RTN","LRMLREI",10,0)
 . S B=$$GET1^DIQ(8989.3,"1,",217,"I")
"RTN","LRMLREI",11,0)
 S PS=$O(^LAB(66.4,"B",B,0)) I PS="" S LRSITE="Not specified" G ST  ; 66.4 not set up
"RTN","LRMLREI",12,0)
 S A=$$GET1^DIQ(66.4,PS_",",.01,"I"),LRSITE=$$KSP^XUPARAM("WHERE")
"RTN","LRMLREI",13,0)
 I LRSITE="" S LRSITE="Not specified"
"RTN","LRMLREI",14,0)
ST ;
"RTN","LRMLREI",15,0)
 K EDPRT,ULINE S XDD=^DD("DD"),$P(ULINE,"_",79)="_" K AUTO
"RTN","LRMLREI",16,0)
 D HOME^%ZIS S FF=IOF,HD="Lab NTRT File 60 Audited items Report" W @IOF,!?(IOM-$L(HD)\2),HD,!!!
"RTN","LRMLREI",17,0)
 S Y=DT X XDD S LRDT(0)=Y,PGHD="Lab NTRT File 60 Audited items Report"
"RTN","LRMLREI",18,0)
 S LRFD=$$NOW^XLFDT
"RTN","LRMLREI",19,0)
 ;
"RTN","LRMLREI",20,0)
 S DIR(0)="D^3160101:"_LRFD_":EX",DIR("A")="Enter From Date" D ^DIR K DIR
"RTN","LRMLREI",21,0)
 I $D(DUOUT)!($D(DTOUT))!($D(DIRUT))!($D(DIROUT)) W !,*7,"Starting Date Not Selected" G DONE
"RTN","LRMLREI",22,0)
 S LRFDAT=Y\1
"RTN","LRMLREI",23,0)
 S DIR(0)="D^"_LRFDAT_":"_LRFD_":EX",DIR("A")="Enter To Date" D ^DIR K DIR
"RTN","LRMLREI",24,0)
 I $D(DUOUT)!($D(DTOUT))!($D(DIRUT))!($D(DIROUT)) W !,*7,"Ending Date Not Selected" G DONE
"RTN","LRMLREI",25,0)
 S LRTDAT=Y
"RTN","LRMLREI",26,0)
 ;
"RTN","LRMLREI",27,0)
DEVICE S %ZIS="Q",%ZIS("A")="Output device: " D ^%ZIS
"RTN","LRMLREI",28,0)
 I POP D HOME^ZIS W !,*7,"No Device Selected" G DONE
"RTN","LRMLREI",29,0)
 I $D(IO("Q"))!(IOT="HFS") N ZTDTH,ZTRTN,ZTIO,ZTDESC,ZTIO,ZTSAVE S ZTDTH=$$NOW^XLFDT,ZTRTN="BK^LRMLREI",ZTIO=ION,ZTDESC="Lab NTRT Audit Items Report" D  D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued",!! G DO
"RTN","LRMLREI",30,0)
 . F I="D*","XDD","ULINE","HD","FF","PGHD","LRSITE","LRFDAT","LRTDAT","LRFD" S ZTSAVE(I)=""
"RTN","LRMLREI",31,0)
 G PRT
"RTN","LRMLREI",32,0)
 ;
"RTN","LRMLREI",33,0)
 ;
"RTN","LRMLREI",34,0)
DO K ZTSK,ZTDTH,ZTRTN,ZTIO,ZTDESC,ZTIO,ZTSAVE
"RTN","LRMLREI",35,0)
 G DONE
"RTN","LRMLREI",36,0)
 ;
"RTN","LRMLREI",37,0)
DONE ; exit
"RTN","LRMLREI",38,0)
 K DA,DIE,DR,A,LD,LT,B,PS,PDT,LDT,DIDEL,LRSITE,LRFDAT,LRTDAT,LRFD,LRDTA,C,D,E,K,PAGE,LRTST
"RTN","LRMLREI",39,0)
 K LRTSTN,LRTE,X,FO,FN,CRT,LR1,PGHD,QUIT,LRDT,ULINE,XDD,Y,LRROOT,LRROOTA,POP
"RTN","LRMLREI",40,0)
 K DIROUT,DTOUT,FF,HD,I
"RTN","LRMLREI",41,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLREI",42,0)
 Q
"RTN","LRMLREI",43,0)
 ;
"RTN","LRMLREI",44,0)
LRS(A) ; get edit type/field
"RTN","LRMLREI",45,0)
 N LRSTRING
"RTN","LRMLREI",46,0)
 I A="" Q ""
"RTN","LRMLREI",47,0)
 S LRSTRING=$S(A="M":"MLTF VUID",A="C":"CREATION DATE",A="T":"TST INACT DT",A="R":"SPEC INACT DT",A="E":"NTRT EXPT FLG",A="Y":"TEST TYPE",A="S":"SPEC CREATE DT",1:"")
"RTN","LRMLREI",48,0)
 Q LRSTRING
"RTN","LRMLREI",49,0)
 ;
"RTN","LRMLREI",50,0)
BK ;entry if queued
"RTN","LRMLREI",51,0)
PRT ; print report
"RTN","LRMLREI",52,0)
 S (QUIT,PAGE)=0,CRT=$S($E(IOST,1,2)="C-":1,1:0),LRTSTN=""
"RTN","LRMLREI",53,0)
 I CRT,PAGE=0 W @IOF
"RTN","LRMLREI",54,0)
 S PAGE=PAGE+1 D HEADER
"RTN","LRMLREI",55,0)
 S LRROOT="^LAB(60,""B"")",LRROOTA="^LAB(60,""B"""
"RTN","LRMLREI",56,0)
 ;S LRTST=0
"RTN","LRMLREI",57,0)
PL ;S LRTST=$O(^LAB(60,LRTST)) I 'LRTST G PDONE
"RTN","LRMLREI",58,0)
 ; Step down the B X-ref - exclude synomyms
"RTN","LRMLREI",59,0)
 S LRROOT=$Q(@LRROOT) I $E(LRROOT,1,$L(LRROOTA))'=LRROOTA G PDONE
"RTN","LRMLREI",60,0)
 I $G(@LRROOT)=1 G PL
"RTN","LRMLREI",61,0)
 I $G(@LRROOT) G PL
"RTN","LRMLREI",62,0)
 S LRTST=$QS(LRROOT,4)
"RTN","LRMLREI",63,0)
 ;
"RTN","LRMLREI",64,0)
 S LRTSTN=$$GET1^DIQ(60,LRTST_",",.01,"I"),LRTSTN=$E(LRTSTN,1,40)
"RTN","LRMLREI",65,0)
 S LRTE=0,LR1=0
"RTN","LRMLREI",66,0)
PLE S LRTE=$O(^LAB(60,LRTST,15,LRTE)) I 'LRTE G PL
"RTN","LRMLREI",67,0)
 S B=+LRTE_","_(+LRTST)
"RTN","LRMLREI",68,0)
 K LRDTA,C,LRER D GETS^DIQ(60.28,B,"**","IE","C","LRER")
"RTN","LRMLREI",69,0)
 I $G(LRER("DIERR"))'="" G PLE
"RTN","LRMLREI",70,0)
 M LRDTA=C("60.28",B_",") K C
"RTN","LRMLREI",71,0)
 ; edit date
"RTN","LRMLREI",72,0)
 S C=$G(LRDTA(.01,"I")) I C="" G PLE
"RTN","LRMLREI",73,0)
 S D=C\1 I D<LRFDAT G PLE
"RTN","LRMLREI",74,0)
 I D>LRTDAT G PLE
"RTN","LRMLREI",75,0)
 S C=$$FMTE^XLFDT(C,"7M")
"RTN","LRMLREI",76,0)
 I LR1=0 W !,"TEST: ",LRTSTN
"RTN","LRMLREI",77,0)
 S LR1=1
"RTN","LRMLREI",78,0)
 ; specimen name if one
"RTN","LRMLREI",79,0)
 S D=$G(LRDTA(.06,"I")) I D'="" S X=$$GET1^DIQ(60.01,D_","_LRTST,.01,"E"),X=$E(X,1,30) W !,?10,"Specimen: ",X
"RTN","LRMLREI",80,0)
 ; edit field
"RTN","LRMLREI",81,0)
 S K=$G(LRDTA(.03,"I")) I K'="" S B=$$LRS(K)
"RTN","LRMLREI",82,0)
 ; user who did transaction
"RTN","LRMLREI",83,0)
 S E=$G(LRDTA(.02,"E")) I E'="" S E=$E(E,1,14)
"RTN","LRMLREI",84,0)
 ; test type
"RTN","LRMLREI",85,0)
 S FO=$G(LRDTA(.04,"I")) I FO'="" D  ;<
"RTN","LRMLREI",86,0)
 . I K="M" S FO=$$GET1^DIQ(66.3,FO_",",.01),FO=$E(FO,1,15) Q
"RTN","LRMLREI",87,0)
 . I K="C"!(K="T")!(K="R")!(K="S") S FO=FO\1 S:FO<2 FO="" I FO>1 S FO=$$FMTE^XLFDT(FO,9)
"RTN","LRMLREI",88,0)
 S FN=$G(LRDTA(.05,"I")) I FN'="" D  ;<
"RTN","LRMLREI",89,0)
 . I K="M" S FN=$$GET1^DIQ(66.3,FN_",",.01),FN=$E(FN,1,15) Q
"RTN","LRMLREI",90,0)
 . I K="C"!(K="T")!(K="R")!(K="S") S FN=FN\1 S:FN<2 FN="" I FN>1 S FN=$$FMTE^XLFDT(FN,9)
"RTN","LRMLREI",91,0)
 W !,?1,C,?18,B,?32,E,?48,FO,?65,FN
"RTN","LRMLREI",92,0)
 ;
"RTN","LRMLREI",93,0)
 I CRT,($Y>(IOSL-4)) D  I QUIT G PDONE
"RTN","LRMLREI",94,0)
 .D PAUSE
"RTN","LRMLREI",95,0)
 .Q:QUIT
"RTN","LRMLREI",96,0)
 .W @IOF
"RTN","LRMLREI",97,0)
 .D HEADER
"RTN","LRMLREI",98,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","LRMLREI",99,0)
 .W @IOF
"RTN","LRMLREI",100,0)
 .D HEADER
"RTN","LRMLREI",101,0)
 ;
"RTN","LRMLREI",102,0)
 G PLE
"RTN","LRMLREI",103,0)
 ;
"RTN","LRMLREI",104,0)
PDONE ; print done
"RTN","LRMLREI",105,0)
 W !!,?29,$S(QUIT'=1:"--- Report Finished ---",1:"--- Report Aborted ---") G DONE
"RTN","LRMLREI",106,0)
 ;
"RTN","LRMLREI",107,0)
HEADER ;Description: Prints the report header.
"RTN","LRMLREI",108,0)
 Q:QUIT
"RTN","LRMLREI",109,0)
 N LINE
"RTN","LRMLREI",110,0)
 I $Y>1 W @IOF
"RTN","LRMLREI",111,0)
 W !,?22,HD
"RTN","LRMLREI",112,0)
 W ?70,"Page ",PAGE,!,?27,"Date Printed: "_$$FMTE^XLFDT(DT),!
"RTN","LRMLREI",113,0)
 S PAGE=PAGE+1
"RTN","LRMLREI",114,0)
 ;
"RTN","LRMLREI",115,0)
 W !,?1,"Date",?18,"Edit Field",?32,"User",?48,"Old Value",?65,"New Value"
"RTN","LRMLREI",116,0)
 W !,ULINE
"RTN","LRMLREI",117,0)
 I PAGE>2 W !,"TEST: ",LRTSTN
"RTN","LRMLREI",118,0)
 Q
"RTN","LRMLREI",119,0)
 ;
"RTN","LRMLREI",120,0)
PAUSE N DIR,DIRUT,X,Y
"RTN","LRMLREI",121,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","LRMLREI",122,0)
 S DIR(0)="E" D ^DIR
"RTN","LRMLREI",123,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","LRMLREI",124,0)
 Q
"RTN","LRMLRIV")
0^24^B17383350^n/a
"RTN","LRMLRIV",1,0)
LRMLRIV ;BPFO/DTG - FILE 60 TEST-SPECIMENS WITH INACTIVE VUIDS REPORT ;02/10/2016
"RTN","LRMLRIV",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRMLRIV",3,0)
 ;
"RTN","LRMLRIV",4,0)
 ; From Option LR NDS TESTS W/INACTIVE VUIDS
"RTN","LRMLRIV",5,0)
 ;
"RTN","LRMLRIV",6,0)
EN ;entry point
"RTN","LRMLRIV",7,0)
 N DA,DIE,DR,A,LD,LT,B,PS,PDT,LDT,DIDEL,LRSITE,LRFDAT,LRTDAT,LRFD,LRDTA,C,D,E,K,PAGE,LRTST
"RTN","LRMLRIV",8,0)
 N LRTSTN,LRTE,X,FO,FN,CRT,LR1,PGHD,QUIT,LRDT,ULINE,XDD,Y,LRROOT,LRROOTA,LRNTI,AR,LXB,LXA
"RTN","LRMLRIV",9,0)
 N AA,DIC,DIQ,FF,HD,I,KA,LRNT,LRTC,LSITE,POP
"RTN","LRMLRIV",10,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLRIV",11,0)
 S B=$$SITE^VASITE,B=$P(B,U,1) I 'B S LRSITE="Not specified" G ST  ; not set up
"RTN","LRMLRIV",12,0)
 S PS=$O(^LAB(66.4,"B",B,0)) I PS="" S LRSITE="Not specified" G ST  ; 66.4 not set up
"RTN","LRMLRIV",13,0)
 S A=$$GET1^DIQ(66.4,PS_",",.01,"I"),LRSITE=$$KSP^XUPARAM("WHERE")
"RTN","LRMLRIV",14,0)
 I LRSITE="" S LRSITE="Not specified"
"RTN","LRMLRIV",15,0)
ST ;
"RTN","LRMLRIV",16,0)
 K EDPRT,ULINE S XDD=^DD("DD"),$P(ULINE,"_",79)="_" K AUTO
"RTN","LRMLRIV",17,0)
 D HOME^%ZIS S FF=IOF,HD="Lab NDS File 60 Tests/Specimens With Inactive MLTF Vuids Report" W @IOF,!?(IOM-$L(HD)\2),HD,!!!
"RTN","LRMLRIV",18,0)
 S Y=DT X XDD S LRDT(0)=Y,PGHD="Lab NDS File 60 Tests/Specimens With Inactive MLTF Vuids Report"
"RTN","LRMLRIV",19,0)
 S LRFD=$$NOW^XLFDT
"RTN","LRMLRIV",20,0)
DEVICE S %ZIS="Q",%ZIS("A")="Output device: " D ^%ZIS
"RTN","LRMLRIV",21,0)
 I POP D HOME^ZIS W !,*7,"No Device Selected" G DONE
"RTN","LRMLRIV",22,0)
 I $D(IO("Q"))!(IOT="HFS") N ZTDTH,ZTRTN,ZTIO,ZTDESC,ZTIO,ZTSAVE S ZTDTH=$$NOW^XLFDT,ZTRTN="BK^LRMLRCP",ZTIO=ION,ZTDESC="Lab NTRT Edit Items Report" D  D ^%ZTLOAD W:$D(ZTSK) !!,"Request queued",!! G DO
"RTN","LRMLRIV",23,0)
 . F I="D*","XDD","ULINE","HD","FF","PGHD","LRSITE","LRFDAT","LRTDAT","LRFD" S ZTSAVE(I)=""
"RTN","LRMLRIV",24,0)
 . ; I IOT="HFS" S:$G(IO("HFSIO"))="" IO("HFSIO")=IO
"RTN","LRMLRIV",25,0)
 G PRT
"RTN","LRMLRIV",26,0)
 ;
"RTN","LRMLRIV",27,0)
 ;
"RTN","LRMLRIV",28,0)
DO K ZTSK,ZTDTH,ZTRTN,ZTIO,ZTDESC,ZTIO,ZTSAVE
"RTN","LRMLRIV",29,0)
 G DONE
"RTN","LRMLRIV",30,0)
 ;
"RTN","LRMLRIV",31,0)
DONE ; exit
"RTN","LRMLRIV",32,0)
 K DA,DIE,DR,A,LD,LT,B,PS,PDT,LDT,DIDEL,LRSITE,LRFDAT,LRTDAT,LRFD,LRDTA,C,D,E,K,PAGE,LRTST
"RTN","LRMLRIV",33,0)
 K LRTSTN,LRTE,X,FO,FN,CRT,LR1,PGHD,QUIT,LRDT,ULINE,XDD,Y,LRROOT,LRROOTA,LRNTI,AR,LXB,LXA
"RTN","LRMLRIV",34,0)
 K AA,DIC,DIQ,FF,HD,I,KA,LRNT,LRTC,LSITE,POP
"RTN","LRMLRIV",35,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLRIV",36,0)
 Q
"RTN","LRMLRIV",37,0)
 ;
"RTN","LRMLRIV",38,0)
BK ;entry if queued
"RTN","LRMLRIV",39,0)
PRT ; print report
"RTN","LRMLRIV",40,0)
 D GET664
"RTN","LRMLRIV",41,0)
 S (QUIT,PAGE)=0,CRT=$S($E(IOST,1,2)="C-":1,1:0),(LRTST,LRTE,LRTSTN)=""
"RTN","LRMLRIV",42,0)
 I CRT,PAGE=0 W @IOF
"RTN","LRMLRIV",43,0)
 S PAGE=PAGE+1 D HEADER
"RTN","LRMLRIV",44,0)
 S LRROOT="^LAB(60,""B"")",LRROOTA="^LAB(60,""B"""
"RTN","LRMLRIV",45,0)
PL ; Step down the B X-ref - exclude synomyms
"RTN","LRMLRIV",46,0)
 S LRROOT=$Q(@LRROOT) I $E(LRROOT,1,$L(LRROOTA))'=LRROOTA G PDONE
"RTN","LRMLRIV",47,0)
 I $G(@LRROOT)=1 G PL
"RTN","LRMLRIV",48,0)
 S LRTST=$QS(LRROOT,4)
"RTN","LRMLRIV",49,0)
 ;
"RTN","LRMLRIV",50,0)
 D GET60T
"RTN","LRMLRIV",51,0)
 ; check test is valid for NTRT
"RTN","LRMLRIV",52,0)
 S AA=$G(LXA(4,"I"))
"RTN","LRMLRIV",53,0)
 S LRTSTN=$G(LXA(.01,"I"))
"RTN","LRMLRIV",54,0)
 ;
"RTN","LRMLRIV",55,0)
 S LRTC=$G(LXA(131,"I")) I LRTC'="" S LRTC=$$FMTE^XLFDT(LRTC,9)
"RTN","LRMLRIV",56,0)
 ; check test subscript is valid for NTRT
"RTN","LRMLRIV",57,0)
 S LRTE=0,LR1=0
"RTN","LRMLRIV",58,0)
PLE S LRTE=$O(^LAB(60,LRTST,1,LRTE)) I 'LRTE G PL
"RTN","LRMLRIV",59,0)
 S B=+LRTE_","_(+LRTST)
"RTN","LRMLRIV",60,0)
 K LRDTA,C,LRER D GETS^DIQ(60.01,B,"**","IE","C","LRER")
"RTN","LRMLRIV",61,0)
 I $G(LRER("DIERR"))'="" G PLE
"RTN","LRMLRIV",62,0)
 M LRDTA=C("60.01",B_",") K C
"RTN","LRMLRIV",63,0)
 S K=$G(LRDTA(30,"I")) I 'K G PLE
"RTN","LRMLRIV",64,0)
 S KA=$$SCREEN^XTID(66.3,"",(+K_",")) I 'KA G PLE
"RTN","LRMLRIV",65,0)
 I LR1=0 W !,LRTSTN," [",LRTST,"]"
"RTN","LRMLRIV",66,0)
 S LR1=1
"RTN","LRMLRIV",67,0)
 ; specimen name if one
"RTN","LRMLRIV",68,0)
 S D=$G(LRDTA(.01,"E")) S:D'="" D=$E(D,1,30)
"RTN","LRMLRIV",69,0)
 ; inactive flag
"RTN","LRMLRIV",70,0)
 S C=$$GET1^DIQ(66.3,K_",",.01)
"RTN","LRMLRIV",71,0)
 ; exception flag
"RTN","LRMLRIV",72,0)
 S E=$G(LRDTA(34,"I")) I E="" S E="N"
"RTN","LRMLRIV",73,0)
 W !,?2,D," [",LRTE,"]",?42,$E(C,1,30)," [",K,"]"
"RTN","LRMLRIV",74,0)
 ;
"RTN","LRMLRIV",75,0)
 I CRT,($Y>(IOSL-4)) D  I QUIT G PDONE
"RTN","LRMLRIV",76,0)
 .D PAUSE
"RTN","LRMLRIV",77,0)
 .Q:QUIT
"RTN","LRMLRIV",78,0)
 .W @IOF
"RTN","LRMLRIV",79,0)
 .D HEADER
"RTN","LRMLRIV",80,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","LRMLRIV",81,0)
 .W @IOF
"RTN","LRMLRIV",82,0)
 .D HEADER
"RTN","LRMLRIV",83,0)
 ;
"RTN","LRMLRIV",84,0)
 G PLE
"RTN","LRMLRIV",85,0)
 ;
"RTN","LRMLRIV",86,0)
PDONE ; print done
"RTN","LRMLRIV",87,0)
 W !!,?29,$S(QUIT'=1:"--- Report Finished ---",1:"--- Report Aborted ---") G DONE
"RTN","LRMLRIV",88,0)
 ;
"RTN","LRMLRIV",89,0)
HEADER ;Description: Prints the report header.
"RTN","LRMLRIV",90,0)
 Q:QUIT
"RTN","LRMLRIV",91,0)
 N LINE
"RTN","LRMLRIV",92,0)
 I $Y>1 W @IOF
"RTN","LRMLRIV",93,0)
 W !,?11,HD
"RTN","LRMLRIV",94,0)
 W !,?27,"Date Printed: "_$$FMTE^XLFDT(DT),?70,"Page ",PAGE,!
"RTN","LRMLRIV",95,0)
 S PAGE=PAGE+1
"RTN","LRMLRIV",96,0)
 ;
"RTN","LRMLRIV",97,0)
 W !,?2,"Specimen",?42,"MLTF"
"RTN","LRMLRIV",98,0)
 W !,ULINE
"RTN","LRMLRIV",99,0)
 I PAGE>2 D  ;<
"RTN","LRMLRIV",100,0)
 . S B=$O(^LAB(60,LRTST,1,LRTE)) I 'B Q
"RTN","LRMLRIV",101,0)
 . W !,LRTSTN," [",LRTST,"]"
"RTN","LRMLRIV",102,0)
 Q
"RTN","LRMLRIV",103,0)
 ;
"RTN","LRMLRIV",104,0)
PAUSE N DIR,DIRUT,X,Y
"RTN","LRMLRIV",105,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","LRMLRIV",106,0)
 S DIR(0)="E" D ^DIR
"RTN","LRMLRIV",107,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","LRMLRIV",108,0)
 Q
"RTN","LRMLRIV",109,0)
 ;
"RTN","LRMLRIV",110,0)
GET664 ; get file 66.4 info
"RTN","LRMLRIV",111,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLRIV",112,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLRIV",113,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRMLRIV",114,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRMLRIV",115,0)
 Q
"RTN","LRMLRIV",116,0)
 ;
"RTN","LRMLRIV",117,0)
GET60T ; get top of file 60 test info
"RTN","LRMLRIV",118,0)
 S DA=LRTST,DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;4;64.1;5;13;131;132;133" D EN^DIQ1
"RTN","LRMLRIV",119,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLRIV",120,0)
 Q
"RTN","LRMLRIV",121,0)
 ;
"RTN","LRMLWT")
0^15^B37343726^n/a
"RTN","LRMLWT",1,0)
LRMLWT ;BPFO/DTG - LAB NTRT LOOP 60 FOR MLTF ;02/10/2016
"RTN","LRMLWT",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRMLWT",3,0)
 ;
"RTN","LRMLWT",4,0)
 ; From option LR NTRT WALK ASSOCIATE
"RTN","LRMLWT",5,0)
 ;
"RTN","LRMLWT",6,0)
 ; loop through the 60 file by test 
"RTN","LRMLWT",7,0)
EN ; starting point for walking from newest test to oldest test in file 60
"RTN","LRMLWT",8,0)
 ; to associate with the MLTF
"RTN","LRMLWT",9,0)
 N DIE,DR,DA,DIQ,LRTN,LRARY,LRSPARY,DT,A,B,C,D,PS,LASTTEST,DIR,LRIEN,LRSPEC,LRSN,LRS,LRN,LSITE,LRNT,LRNTI,AR,LXA,LXB
"RTN","LRMLWT",10,0)
 N LRMLTF,LR64,LR64ER,ER,LRSPERR,LROKS,LRSYSTEM,LRLEC,LRNO,X,Y
"RTN","LRMLWT",11,0)
 N AA,ALA,ALAC,DIC,I,LRCKD,LRELEC,LRLNC,LRLNC0,LT,SCOUNT
"RTN","LRMLWT",12,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLWT",13,0)
 S B=$$SITE^VASITE,B=$P(B,U,1) I 'B Q  ; not set up
"RTN","LRMLWT",14,0)
 S PS=$O(^LAB(66.4,"B",B,0)) I PS="" Q  ; 66.4 not set up
"RTN","LRMLWT",15,0)
ENR S LASTTEST=$$GET1^DIQ(66.4,PS_",",.08)
"RTN","LRMLWT",16,0)
 I LASTTEST="DONE" W !,*7,"Process Has Been Completed" G QUIT
"RTN","LRMLWT",17,0)
 D GET664
"RTN","LRMLWT",18,0)
 I LASTTEST="" S LASTTEST=$O(^LAB(60,"A"),-1) I LASTTEST?1.N S LR64ER=0 D  I LR64ER=1 G SETER
"RTN","LRMLWT",19,0)
 . L +^LAB(66.4,PS):30 I '$T S LR64ER=1 Q
"RTN","LRMLWT",20,0)
 . S LASTTEST=LASTTEST+1,DA=PS,DIE="^LAB(66.4,",DR=".08///"_LASTTEST
"RTN","LRMLWT",21,0)
 . D ^DIE
"RTN","LRMLWT",22,0)
 . L -^LAB(66.4,PS)
"RTN","LRMLWT",23,0)
 ;
"RTN","LRMLWT",24,0)
LOOP ; start the process
"RTN","LRMLWT",25,0)
 S LRIEN=LASTTEST K LRSPARY
"RTN","LRMLWT",26,0)
L1 S LRIEN=$O(^LAB(60,LRIEN),-1) I LRIEN="" S LRIEN="DONE" G LOUT
"RTN","LRMLWT",27,0)
 D GET60T
"RTN","LRMLWT",28,0)
 S LRN=$G(LXA(.01,"E")),LR64ER=0
"RTN","LRMLWT",29,0)
 ; check test subscript is valid for NTRT
"RTN","LRMLWT",30,0)
 S AA=$G(LXA(4,"I"))
"RTN","LRMLWT",31,0)
 I AA="WK" S LR64ER=0 D LSET G:LR64ER=1 SETER G L1
"RTN","LRMLWT",32,0)
 I AA="BB" D LSET G:LR64ER=1 SETER G L1
"RTN","LRMLWT",33,0)
 ; check test type
"RTN","LRMLWT",34,0)
 S AA=$G(LXA(3,"I"))
"RTN","LRMLWT",35,0)
 I AA="N"!(AA="D") D LSET G:LR64ER=1 SETER G L1
"RTN","LRMLWT",36,0)
 ; check for data name
"RTN","LRMLWT",37,0)
 I $G(LXA(5,"I"))="" D LSET G:LR64ER=1 SETER G L1
"RTN","LRMLWT",38,0)
 ;
"RTN","LRMLWT",39,0)
 ; loop ^LAB(60 specimen level
"RTN","LRMLWT",40,0)
 S LT=0,LRS=0
"RTN","LRMLWT",41,0)
 D Q1 I LRS<1 D  S LR64ER=0 D LSET G:LR64ER=1 SETER G ENR
"RTN","LRMLWT",42,0)
 . I SCOUNT<1 W !!,*7," *** This Test ( ",LRN," [",LRIEN,"]) Does Not Have any Specimens",!!
"RTN","LRMLWT",43,0)
 G L2
"RTN","LRMLWT",44,0)
L2 ;loop through specimens
"RTN","LRMLWT",45,0)
 K DIR,DIRUT
"RTN","LRMLWT",46,0)
 S DIR("A")="Enter The Number For The Specimen to Associate With The MLTF"
"RTN","LRMLWT",47,0)
 S DIR(0)="SO^",ALAC=0
"RTN","LRMLWT",48,0)
 F I=1:1:LRS S ALA=$G(LRSPARY(I)) I ALA'="" S ALAC=ALAC+1 S:ALAC>1 DIR(0)=DIR(0)_";" S DIR(0)=DIR(0)_I_":"_LRSPARY(I)
"RTN","LRMLWT",49,0)
 W !!,"TEST: "_LRN
"RTN","LRMLWT",50,0)
 W !,"SPECIMEN(s)",!
"RTN","LRMLWT",51,0)
 D ^DIR
"RTN","LRMLWT",52,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",53,0)
 I Y'?1.N G LX
"RTN","LRMLWT",54,0)
 S A=$G(LRSPARY(Y)) I A="" W !,*7,"Number out of Range" G L2
"RTN","LRMLWT",55,0)
 S LRSPEC=$P($P(A,"[",2),"]",1),LRSN=$P(A," ",1) I LRSPEC'?1.N W !,*7,"Specimen not found" G L2
"RTN","LRMLWT",56,0)
L2M ; come here to ask MLTF
"RTN","LRMLWT",57,0)
 K DIR,DA,DIRUT
"RTN","LRMLWT",58,0)
 S DIR(0)="PO^66.3:EQZ"
"RTN","LRMLWT",59,0)
 S DIR("S")="I '$$SCREEN^XTID(66.3,"""",(+Y_"",""))"
"RTN","LRMLWT",60,0)
 D ^DIR
"RTN","LRMLWT",61,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",62,0)
 I +Y'>0 G LX:LRS<2,L2Q
"RTN","LRMLWT",63,0)
 S LRSPERR=0,LRMLTF=+Y
"RTN","LRMLWT",64,0)
 ; check specimen type (based on code from LRLNC0 at CHKSPEC
"RTN","LRMLWT",65,0)
 S LRELEC=$P($G(^LAB(61,LRSPEC,0)),U,9)
"RTN","LRMLWT",66,0)
 S LRLNC0=$$GET1^DIQ(66.3,LRMLTF,.04,"I")
"RTN","LRMLWT",67,0)
 S LRLNC=$P(LRLNC0,"-",1),LRCKD=$P(LRLNC0,"-",2)
"RTN","LRMLWT",68,0)
 S A=0,LRSYSTEM="" F  S A=$O(^LAB(95.3,"B",LRLNC,A)) Q:'A  S B=$G(^LAB(95.3,A,0)),LRSYSTEM=$P(B,U,8),C=$P(B,U,15) I C=LRCKD Q
"RTN","LRMLWT",69,0)
 ; if not found in 95.3
"RTN","LRMLWT",70,0)
 I 'A G L2S
"RTN","LRMLWT",71,0)
 D CHKSPEC G:LROKS=1 L2S
"RTN","LRMLWT",72,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",73,0)
 I LRNO=1  W !,"TEST: ",LRN,!,"SPECIMEN: ",LRSN,! G L2M
"RTN","LRMLWT",74,0)
 G L2S
"RTN","LRMLWT",75,0)
 ;
"RTN","LRMLWT",76,0)
L2S D MSET I LRSPERR=1 G SETER
"RTN","LRMLWT",77,0)
 S A=$$GET1^DIQ(60.01,LT_","_LRIEN,30,"E")
"RTN","LRMLWT",78,0)
 W !,LRSN,": Saved With MLTF ",A,!
"RTN","LRMLWT",79,0)
 S LT=0,LRS=0 K LRSPARY D Q1 I LRS<1 D  S LR64ER=0 D LSET G:LR64ER=1 SETER G ENR
"RTN","LRMLWT",80,0)
 . I SCOUNT<1 W !!,*7," *** This Test ( ",LRN," [",LRIEN,"] Does Not Have any Specimens",!! R X:10
"RTN","LRMLWT",81,0)
 G L2
"RTN","LRMLWT",82,0)
 ;
"RTN","LRMLWT",83,0)
L2Q ; ask to see additional specimens
"RTN","LRMLWT",84,0)
 K DIR,DIRUT S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do You Wish to Evaluate Additional Specimens? "
"RTN","LRMLWT",85,0)
 D ^DIR
"RTN","LRMLWT",86,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",87,0)
 I Y=1 S LT=0,LRS=0 K LRSPARY D Q1 W:LRS<1 *7,"   No More Specimens To Check For This Test" G:LRS<1 LX G L2
"RTN","LRMLWT",88,0)
 G LX
"RTN","LRMLWT",89,0)
LX ;
"RTN","LRMLWT",90,0)
 K DIR,DIRUT S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do You Wish to go to The Next Test?"
"RTN","LRMLWT",91,0)
 D ^DIR
"RTN","LRMLWT",92,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",93,0)
 I Y=1 S LR64ER=0 D LSET G:LR64ER=1 SETER G ENR
"RTN","LRMLWT",94,0)
 K DIR,DIRUT S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do You Wish to Exit?" D ^DIR
"RTN","LRMLWT",95,0)
 G QUIT:$D(DIRUT) I Y=1 K DIR,DIRUT S LR64ER=0 D  G:LRNO=1 QUIT G SETER:LR64ER=1,QUIT
"RTN","LRMLWT",96,0)
 . S LRNO=0,DIR(0)="Y",DIR("B")="YES",DIR("A")="Do You Wish to Skip This Test on Re-Start?" D ^DIR
"RTN","LRMLWT",97,0)
 . I $D(DIRUT) S LRNO=1 Q
"RTN","LRMLWT",98,0)
 . I Y=1 D LSET
"RTN","LRMLWT",99,0)
 G ENR
"RTN","LRMLWT",100,0)
 ;
"RTN","LRMLWT",101,0)
Q1 ; pick up spcimens from test
"RTN","LRMLWT",102,0)
 S SCOUNT=0
"RTN","LRMLWT",103,0)
Q1A S LT=$O(^LAB(60,LRIEN,1,LT)) I 'LT Q
"RTN","LRMLWT",104,0)
 S SCOUNT=SCOUNT+1
"RTN","LRMLWT",105,0)
 S B=$$GET1^DIQ(60.01,LT_","_LRIEN,30,"I") I B'="" G Q1A
"RTN","LRMLWT",106,0)
 S A=$$GET1^DIQ(60.01,LT_","_LRIEN,.01,"E")
"RTN","LRMLWT",107,0)
 S LRS=LRS+1,LRSPARY(LRS)=A_" ["_LT_"]" ;LT_"-"_A
"RTN","LRMLWT",108,0)
 G Q1A
"RTN","LRMLWT",109,0)
 ;
"RTN","LRMLWT",110,0)
QUIT ;
"RTN","LRMLWT",111,0)
 K DIE,DR,DA,DIQ,LRTN,LRARY,LRSPARY,A,B,C,D,PS,LASTTEST,DIR,LRIEN,LRSPEC,LRSN,LRS,LRN,LSITE,LRNT,LRNTI,AR,LXA,LXB
"RTN","LRMLWT",112,0)
 K LRMLTF,LR64,LR64ER,ER,LRSPERR,LROKS,LRSYSTEM,LRLEC,LRNO
"RTN","LRMLWT",113,0)
 K AA,ALA,ALAC,DIC,I,LRCKD,LRELEC,LRLNC,LRLNC0,LT,SCOUNT,X,Y
"RTN","LRMLWT",114,0)
 Q
"RTN","LRMLWT",115,0)
 ;
"RTN","LRMLWT",116,0)
LOUT D LSET G:LR64ER=1 SETER
"RTN","LRMLWT",117,0)
 I LRIEN="DONE" G QUIT
"RTN","LRMLWT",118,0)
 K LRSPARY
"RTN","LRMLWT",119,0)
 G ENR
"RTN","LRMLWT",120,0)
 ;
"RTN","LRMLWT",121,0)
LSET ;put the last ien in 66.4 .08
"RTN","LRMLWT",122,0)
 N DA,DIE,DR
"RTN","LRMLWT",123,0)
 S DA=PS
"RTN","LRMLWT",124,0)
 L +^LAB(66.4,DA):30 I '$T S LR64ER=1 Q
"RTN","LRMLWT",125,0)
 S DIE="^LAB(66.4,",DR=".08///"_LRIEN D ^DIE
"RTN","LRMLWT",126,0)
 L -^LAB(66.4,DA)
"RTN","LRMLWT",127,0)
 Q
"RTN","LRMLWT",128,0)
 ;
"RTN","LRMLWT",129,0)
SETER ; come here if not able to open files and quit
"RTN","LRMLWT",130,0)
 W !,*7,"unable to open file... EXITING " R X:10 G QUIT
"RTN","LRMLWT",131,0)
 ;
"RTN","LRMLWT",132,0)
MSET ;save the mltf to the 60 file
"RTN","LRMLWT",133,0)
 N DA,DR,DIE
"RTN","LRMLWT",134,0)
 L +^LAB(60,LRIEN,1,LRSPEC):30 I '$T S LRSPERR=1 Q
"RTN","LRMLWT",135,0)
 S DA(1)=+LRIEN,DA=LRSPEC,DR="30///"_LRMLTF,DIE="^LAB(60,"_DA(1)_",1," D ^DIE
"RTN","LRMLWT",136,0)
 L -^LAB(60,LRIEN,1,LRSPEC)
"RTN","LRMLWT",137,0)
 Q
"RTN","LRMLWT",138,0)
 ;
"RTN","LRMLWT",139,0)
GET664 ; get file 66.4 info
"RTN","LRMLWT",140,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLWT",141,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLWT",142,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRMLWT",143,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRMLWT",144,0)
 Q
"RTN","LRMLWT",145,0)
 ;
"RTN","LRMLWT",146,0)
GET60T ; get top of file 60 test info
"RTN","LRMLWT",147,0)
 S DA=LRIEN,DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;3;4;5;64.1;5;13;131;132;133" D EN^DIQ1
"RTN","LRMLWT",148,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLWT",149,0)
 Q
"RTN","LRMLWT",150,0)
 ;
"RTN","LRMLWT",151,0)
CHKSPEC ;Check that specimen of MLTF LOINC code same as specimen of test
"RTN","LRMLWT",152,0)
 S LROKS=1
"RTN","LRMLWT",153,0)
 I LRSYSTEM=$G(LRELEC) Q
"RTN","LRMLWT",154,0)
 I (LRSYSTEM=74!(LRSYSTEM=83)!(LRSYSTEM=114)!(LRSYSTEM=1376))&($G(LRELEC)=74!($G(LRELEC)=83)!($G(LRELEC)=114)!($G(LRELEC)=1376)) Q
"RTN","LRMLWT",155,0)
 S LROKS=0,LRNO=0
"RTN","LRMLWT",156,0)
 W !!,"The MLTF LOINC code that you have selected does not have the"
"RTN","LRMLWT",157,0)
 W !,"same specimen that you chose to test/specimen."
"RTN","LRMLWT",158,0)
 K DIR,DIRUT
"RTN","LRMLWT",159,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to do this"
"RTN","LRMLWT",160,0)
 S DIR("?")="If you enter yes, the test/specimen will be associated to this MLTF LOINC code."
"RTN","LRMLWT",161,0)
 S DIR("B")="Yes"
"RTN","LRMLWT",162,0)
 D ^DIR
"RTN","LRMLWT",163,0)
 I $D(DIRUT) S LRNO=1 Q
"RTN","LRMLWT",164,0)
 I Y<1 S LRNO=1
"RTN","LRMLWT",165,0)
 Q
"RTN","LRSRVR")
0^12^B19202402^B18215977
"RTN","LRSRVR",1,0)
LRSRVR ;DALOI/RLM/JMC - LAB DATA SERVER ;11/18/11  16:47
"RTN","LRSRVR",2,0)
 ;;5.2;LAB SERVICE;**232,303,346,350,468**;Sep 27, 1994;Build 64
"RTN","LRSRVR",3,0)
 ;
"RTN","LRSRVR",4,0)
 ; Reference to ^%ZOSF supported by IA #10096
"RTN","LRSRVR",5,0)
 ; Reference to $$SITE^VASITE supported by IA #10112
"RTN","LRSRVR",6,0)
 ;
"RTN","LRSRVR",7,0)
 ; 5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*468; Feb 10 2016
"RTN","LRSRVR",8,0)
 ;
"RTN","LRSRVR",9,0)
START ;
"RTN","LRSRVR",10,0)
 N LRSITE,LRST,LRSUB,LRXMZ
"RTN","LRSRVR",11,0)
 ;
"RTN","LRSRVR",12,0)
 ; Save incoming server message id for cleanup
"RTN","LRSRVR",13,0)
 S LRXMZ=XMZ
"RTN","LRSRVR",14,0)
 ;
"RTN","LRSRVR",15,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",16,0)
 ; Determine station name and number
"RTN","LRSRVR",17,0)
 S LRSITE=$$SITE^VASITE,LRSTN=$P(LRSITE,"^",2),LRST=$P(LRSITE,"^",3)
"RTN","LRSRVR",18,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR",19,0)
 ;
"RTN","LRSRVR",20,0)
 S LRSUB=$$UP^XLFSTR(XQSUB)
"RTN","LRSRVR",21,0)
 ;
"RTN","LRSRVR",22,0)
 ; The first line of the message tells who requested the action and when
"RTN","LRSRVR",23,0)
 ; The second line tells when the server is activated and no data can be
"RTN","LRSRVR",24,0)
 ; gathered from the MailMan message.  This line gets replaced if the
"RTN","LRSRVR",25,0)
 ; server finds something to do.
"RTN","LRSRVR",26,0)
 S ^TMP($J,"LRDATA",1)=LRSUB_" triggered at "_LRSTN_" by "_XMFROM_" on "_XQDATE
"RTN","LRSRVR",27,0)
 S LRACTION=$S(LRSUB["CHECKSUM":"Checksums Generated",1:LRSUB)
"RTN","LRSRVR",28,0)
 S ^TMP($J,"LRDATA",2)="I don't know how to "_LRACTION_" at "_LRSTN
"RTN","LRSRVR",29,0)
 ;
"RTN","LRSRVR",30,0)
 ;
"RTN","LRSRVR",31,0)
 ; If the subject contains "CHECKSUM" send a report of the current checksums to the LABTEAM group on RDMAIL
"RTN","LRSRVR",32,0)
 I LRSUB["CHECKSUM" D CSUM Q
"RTN","LRSRVR",33,0)
 ;
"RTN","LRSRVR",34,0)
 ; If the subject contains "LIST" send a report based on the list of routines in the body of the message back to the original sender.
"RTN","LRSRVR",35,0)
 I LRSUB["LIST" D SUMLST Q
"RTN","LRSRVR",36,0)
 ;
"RTN","LRSRVR",37,0)
 ; If the subject equals "LOINC" send the local LOINC data to the national list.
"RTN","LRSRVR",38,0)
 I LRSUB="LOINC" D LOINC^LRSRVR1 Q
"RTN","LRSRVR",39,0)
 ;
"RTN","LRSRVR",40,0)
 ; If the subject contains "LOCAL REPORT" send the local LOINC data to the sender.
"RTN","LRSRVR",41,0)
 I LRSUB="LOCAL REPORT" D LOINCL^LRSRVR1 Q
"RTN","LRSRVR",42,0)
 I LRSUB="LOCAL REPORT DELIMIT" D LOINCLD^LRSRVR3 Q
"RTN","LRSRVR",43,0)
 ;
"RTN","LRSRVR",44,0)
 ; Send RELMA mapper formatted message
"RTN","LRSRVR",45,0)
 I LRSUB="RELMA" D SERVER^LRSRVR2 Q
"RTN","LRSRVR",46,0)
 ; Process RELMA mapper Packman global message
"RTN","LRSRVR",47,0)
 I LRSUB="RELMA MAPPING" D RMAP^LRSRVR5 Q
"RTN","LRSRVR",48,0)
 ;
"RTN","LRSRVR",49,0)
 ; Send SNOMED mapping formatted message
"RTN","LRSRVR",50,0)
 I LRSUB="SNOMED" D SERVER^LRSRVR6 Q
"RTN","LRSRVR",51,0)
 I LRSUB="SNOMED MAPPING" D CTMAP^LRSRVR5 Q
"RTN","LRSRVR",52,0)
 ;
"RTN","LRSRVR",53,0)
 ; Send NLT/CPT mapping formatted message
"RTN","LRSRVR",54,0)
 I LRSUB="NLT/CPT" D SERVER^LRSRVR7 Q
"RTN","LRSRVR",55,0)
 ;
"RTN","LRSRVR",56,0)
 ;START OF CHANGE FOR LR*5.2*468
"RTN","LRSRVR",57,0)
 I LRSUB="MLTF" D SERVER^LRSRVR9 Q
"RTN","LRSRVR",58,0)
 ;END OF CHANGE FOR LR*5.2*468
"RTN","LRSRVR",59,0)
 ;
"RTN","LRSRVR",60,0)
 ; If subject not understood by server, send a message to the sender
"RTN","LRSRVR",61,0)
 ;  that the server can't understand their instructions.
"RTN","LRSRVR",62,0)
 K XMY
"RTN","LRSRVR",63,0)
 S XMY(XQSND)=""
"RTN","LRSRVR",64,0)
 ;
"RTN","LRSRVR",65,0)
EXIT ; If all went well, report that too.
"RTN","LRSRVR",66,0)
 ; Mail the errors and successes back to the Roll-Up group at Forum.
"RTN","LRSRVR",67,0)
 N LRNOW
"RTN","LRSRVR",68,0)
 S LRNOW=$$NOW^XLFDT
"RTN","LRSRVR",69,0)
 S XMDUN="Lab Server",XMDUZ=".5",XMSUB=LRSTN_" LAB SERVER ("_LRNOW_")"
"RTN","LRSRVR",70,0)
 S XMTEXT="^TMP($J,""LRDATA"","
"RTN","LRSRVR",71,0)
 I '$D(XMY) S XMY("G.LABTEAM@ISC-DOMAIN.EXT")=""
"RTN","LRSRVR",72,0)
 D ^XMD
"RTN","LRSRVR",73,0)
 ;
"RTN","LRSRVR",74,0)
CLEAN ; Cleanup and exit
"RTN","LRSRVR",75,0)
 I $D(^TMP($J,"LRDTERR")) D
"RTN","LRSRVR",76,0)
 . S XMDUN="Lab Server",XMDUZ=".5"
"RTN","LRSRVR",77,0)
 . S XMSUB=LRSTN_" LAB SERVER ERROR ("_LRNOW_")"
"RTN","LRSRVR",78,0)
 . S XMTEXT="^TMP($J,""LRDTERR"","
"RTN","LRSRVR",79,0)
 . S XMY("G.LABTEAM@ISC-DOMAIN.EXT")="",XMY(XQSND)=""
"RTN","LRSRVR",80,0)
 . D ^XMD
"RTN","LRSRVR",81,0)
 ;
"RTN","LRSRVR",82,0)
 ; Clean up server message in MailMan
"RTN","LRSRVR",83,0)
 I $G(LRXMZ)>0 D ZAPSERV^XMXAPI("S.LRLABSERVER",LRXMZ)
"RTN","LRSRVR",84,0)
 ;
"RTN","LRSRVR",85,0)
 K %,%DT,%H,D,DD,DIC,DIERR,ERROR,FILL,LINE,LOINCDTA,LOINCDTB,LOINCTAS
"RTN","LRSRVR",86,0)
 K LRA,LRAA,LRACTION,LRB,LRCLST,LRDA,LRERR,LRFOUND,LRFOUND1,LRI,LRLINE
"RTN","LRSRVR",87,0)
 K LRNDE,LROUT,LRPNT,LRPNTA,LRPNTB,LRRDT,LRRN,LRROOT,LRST,LRSTN,LRSUB
"RTN","LRSRVR",88,0)
 K X,XMDUN,XMDUZ,XMER,XMFROM,XMREC,XMRG,XMSUB,XMTEXT,XMY,XMZ,XQDATE
"RTN","LRSRVR",89,0)
 K XQSND,XQSUB,Y,ZTQUEUED,ZTSK
"RTN","LRSRVR",90,0)
 ;
"RTN","LRSRVR",91,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",92,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRSRVR",93,0)
 Q
"RTN","LRSRVR",94,0)
 ;
"RTN","LRSRVR",95,0)
 ;
"RTN","LRSRVR",96,0)
CSUM ;Calculate checksum for routines and transmit errors to LABTEAM group
"RTN","LRSRVR",97,0)
 S X=$T(+0) X ^%ZOSF("RSUM") S ^TMP($J,"LRDATA",2)=X_" at "_LRSTN_" = "_Y
"RTN","LRSRVR",98,0)
 S LRI=0
"RTN","LRSRVR",99,0)
 F  S LRI=$O(^LAB(69.91,1,"ROU",LRI)) Q:'LRI  D
"RTN","LRSRVR",100,0)
 . S X=$P(^LAB(69.91,1,"ROU",LRI,0),"^")
"RTN","LRSRVR",101,0)
 . S LRA=$P(^LAB(69.91,1,"ROU",LRI,0),"^",4)
"RTN","LRSRVR",102,0)
 . X ^%ZOSF("TEST") I '$T S ^TMP($J,"LRDATA",LRI+3)=X_" is missing." Q
"RTN","LRSRVR",103,0)
 . X ^%ZOSF("RSUM") I +$G(Y)'=LRA S ^TMP($J,"LRDATA",LRI+3)=X_" should be "_LRA_" is "_+$G(Y)
"RTN","LRSRVR",104,0)
 S XMSUB="Lab Checksum data at "_LRSTN_" run on "_XQDATE
"RTN","LRSRVR",105,0)
 D EXIT
"RTN","LRSRVR",106,0)
 Q
"RTN","LRSRVR",107,0)
 ;
"RTN","LRSRVR",108,0)
 ;
"RTN","LRSRVR",109,0)
SUMLST ;Calculate checksum for routines and transmit to requestor
"RTN","LRSRVR",110,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",111,0)
 S LRCLST=$P($$SITE^VASITE,"^",2),LINE=2,$P(FILL," ",8)=""
"RTN","LRSRVR",112,0)
 S ^TMP($J,"LRDATA",1)="Lab Server triggered at "_LRCLST_" by "_XMFROM_" on "_XQDATE
"RTN","LRSRVR",113,0)
 ;
"RTN","LRSRVR",114,0)
 ; Check for a plus sign in front of the routine name.  Bypass the
"RTN","LRSRVR",115,0)
 ; Test to see if the routine exists if it's there.
"RTN","LRSRVR",116,0)
 ; DSM won't check %routines to make sure they exist, Cache will.
"RTN","LRSRVR",117,0)
 F  X XMREC Q:XMER<0  S X=XMRG D
"RTN","LRSRVR",118,0)
  . I X'?1"+".E X ^%ZOSF("TEST") I '$T S ^TMP($J,"LRDATA",LINE)=X_$E(FILL,$L(X),8)_" is missing.",LINE=LINE+1 Q
"RTN","LRSRVR",119,0)
  . ;Strip off the plus sign so that the checksum routine can find it.
"RTN","LRSRVR",120,0)
  . S X=$TR(X,"+","")
"RTN","LRSRVR",121,0)
  . X ^%ZOSF("RSUM") S ^TMP($J,"LRDATA",LINE)=X_$E(FILL,$L(X),8)_" is "_Y,LINE=LINE+1
"RTN","LRSRVR",122,0)
 S XMSUB="Checksum data at "_LRCLST_" run on "_XQDATE
"RTN","LRSRVR",123,0)
 S XMY(XQSND)=""
"RTN","LRSRVR",124,0)
 D EXIT
"RTN","LRSRVR",125,0)
 Q
"RTN","LRSRVR9")
0^16^B122473152^n/a
"RTN","LRSRVR9",1,0)
LRSRVR9 ;BPFO/DTG - LAB NTRT DATA SERVER CONT'D MISSING VUID EXTRACT ;02/10/2016
"RTN","LRSRVR9",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRSRVR9",3,0)
 ;
"RTN","LRSRVR9",4,0)
 ; Based on LRSRVR2,LRSRVR2A
"RTN","LRSRVR9",5,0)
 ;
"RTN","LRSRVR9",6,0)
EN ; Called by option [LR NTRT MLTF EXTRACT]
"RTN","LRSRVR9",7,0)
 ; Entry point for the option - user must capture output
"RTN","LRSRVR9",8,0)
 N DIR,DIRUT,LREND,LRCNT,LRSUB,LRVAL,LRST,LRSTN,LRTXT,X,Y
"RTN","LRSRVR9",9,0)
 S DIR(0)="Y",DIR("A")="Ready to Capture",DIR("B")="Yes"
"RTN","LRSRVR9",10,0)
 D ^DIR
"RTN","LRSRVR9",11,0)
 I $D(DIRUT) Q
"RTN","LRSRVR9",12,0)
 D WAIT^DICD
"RTN","LRSRVR9",13,0)
 W !,"... Excuse Me This May Take a Few Moments ..."
"RTN","LRSRVR9",14,0)
 ;
"RTN","LRSRVR9",15,0)
 S LRSUB="MLTF",LRTXT=1
"RTN","LRSRVR9",16,0)
 D BUILD
"RTN","LRSRVR9",17,0)
 W !
"RTN","LRSRVR9",18,0)
 S LRL=0
"RTN","LRSRVR9",19,0)
 F  S LRL=$O(^TMP($J,"LRDATA",LRL)) Q:LRL<1  W !,^(LRL)
"RTN","LRSRVR9",20,0)
 D CLEAN^LRSRVR9A
"RTN","LRSRVR9",21,0)
 K LRSUB
"RTN","LRSRVR9",22,0)
 Q
"RTN","LRSRVR9",23,0)
 ;
"RTN","LRSRVR9",24,0)
 ;
"RTN","LRSRVR9",25,0)
SERVER ; Server entry Point
"RTN","LRSRVR9",26,0)
 N I,LRCNT,LREND,LRL,LRMSUBJ,LRTXT,LRX,LRY
"RTN","LRSRVR9",27,0)
 S LRTXT=0
"RTN","LRSRVR9",28,0)
 D BUILD
"RTN","LRSRVR9",29,0)
 S LRMSUBJ=LRST_" "_LRSTN_" MLTF "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR9",30,0)
 D MAILSEND^LRSRVR9A(LRMSUBJ)
"RTN","LRSRVR9",31,0)
 D CLEAN^LRSRVR9A
"RTN","LRSRVR9",32,0)
 Q
"RTN","LRSRVR9",33,0)
 ;
"RTN","LRSRVR9",34,0)
 ;
"RTN","LRSRVR9",35,0)
BUILD ; Build extract
"RTN","LRSRVR9",36,0)
 N I,LR6206,LR64,LRCNT,LRCRLF,LRLEN,LRQUIT,LRROOT,LRSTNOTE,LRSS,LRSTR,LRSTUB,LRVAL
"RTN","LRSRVR9",37,0)
 N LSITE,LRNT,LRNTI,AR,LRSUBSCRIPT,LRTYPER,LRVLOINC,LA7TREE,LRMISP,A
"RTN","LRSRVR9",38,0)
 N LR60IEN,LR60NM,LRCDEF,LRCREATE,LREXPY,LRINACT,LRLNC,LRLNC80,LRLNCN,LRLNCX,LRNODE,LRR64,LRSPEC60,LRSPECCT,LRSPECN,LRSPECTA,LRUNIT
"RTN","LRSRVR9",39,0)
 D GET664
"RTN","LRSRVR9",40,0)
 ; to show missing specimens set LRMISP=1
"RTN","LRSRVR9",41,0)
 S LRMISP=0
"RTN","LRSRVR9",42,0)
 S LRVAL=$$SITE^VASITE,LRST=$P(LRVAL,"^",3),LRSTN=$P(LRVAL,"^",2)
"RTN","LRSRVR9",43,0)
 S LRSUBSCRIPT=$G(LRNTI(.07,"I")) I LRSUBSCRIPT="" S LRSUBSCRIPT=1 ; default to CH only
"RTN","LRSRVR9",44,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR9",45,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LR60")
"RTN","LRSRVR9",46,0)
 S LRCNT=0,LRCRLF=$C(13,10),LRSTR=""
"RTN","LRSRVR9",47,0)
 F I=0,1,2,3,4 S LRCNT(I)=0
"RTN","LRSRVR9",48,0)
 D HDR^LRSRVR9A
"RTN","LRSRVR9",49,0)
 ;
"RTN","LRSRVR9",50,0)
 ; Step down the B X-ref - exclude synomyms
"RTN","LRSRVR9",51,0)
 S LRROOT="^LAB(60,""B"")"
"RTN","LRSRVR9",52,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  Q:$QS(LRROOT,2)'="B"  D
"RTN","LRSRVR9",53,0)
 . Q:$G(@LRROOT)
"RTN","LRSRVR9",54,0)
 . D TEST
"RTN","LRSRVR9",55,0)
 ;
"RTN","LRSRVR9",56,0)
 ; Process microbiology antibiotics
"RTN","LRSRVR9",57,0)
 S LR6206=0,LRSS="MI"
"RTN","LRSRVR9",58,0)
 F  S LR6206=$O(^LAB(62.06,LR6206)) Q:'LR6206  D
"RTN","LRSRVR9",59,0)
 . S LR64=$$GET1^DIQ(62.06,LR6206_",",64,"I")
"RTN","LRSRVR9",60,0)
 . S LRX=$$MICRO(LR64)
"RTN","LRSRVR9",61,0)
 . I $P(LRX,"|",5)="" S $P(LRX,"|",5)=$$GET1^DIQ(62.06,LR6206_",",.01)
"RTN","LRSRVR9",62,0)
 . S LRSTUB="",$P(LRSTUB,"|",29)="",$P(LRSTUB,"|",($S(LRMISP=1:29,1:28)))="1.1"
"RTN","LRSRVR9",63,0)
 . S $P(LRSTUB,"|",1)=$P(LRX,"|",5),$P(LRSTUB,"|",5)=$P(LRX,"|",3)
"RTN","LRSRVR9",64,0)
 . S $P(LRSTUB,"|",6)=$P(LRX,"|",1),$P(LRSTUB,"|",9)=$P(LRX,"|",20),$P(LRSTUB,"|",10)=$P(LRX,"|",19)
"RTN","LRSRVR9",65,0)
 . I LR64 S $P(LRSTUB,"|",25)=$$GET1^DIQ(64,LR64_",",25)
"RTN","LRSRVR9",66,0)
 . S LRSTR=LRSTR_LRST_"-"_LR64_"-"_"AB"_LR6206_"|"_LRSTUB
"RTN","LRSRVR9",67,0)
 . I 'LRTXT S LRSTR=LRSTR_LRCRLF
"RTN","LRSRVR9",68,0)
 . D SETDATA S LRCNT=LRCNT+1,LRCNT(3)=LRCNT(3)+1
"RTN","LRSRVR9",69,0)
 ;
"RTN","LRSRVR9",70,0)
 ;
"RTN","LRSRVR9",71,0)
 ; Set the final info into the ^TMP message global
"RTN","LRSRVR9",72,0)
 I 'LRTXT D
"RTN","LRSRVR9",73,0)
 . S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR9",74,0)
 . I LRSTR'="" S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN^LRSRVR9A(LRSTR)
"RTN","LRSRVR9",75,0)
 . S ^TMP($J,"LRDATA",LRNODE+1)=" "
"RTN","LRSRVR9",76,0)
 . S ^TMP($J,"LRDATA",LRNODE+2)="end"
"RTN","LRSRVR9",77,0)
 ;
"RTN","LRSRVR9",78,0)
 S ^TMP($J,"LRDATA",6)="Total number of records: "_$J(LRCNT,5)
"RTN","LRSRVR9",79,0)
 S ^TMP($J,"LRDATA",7)="Total number of tests..: "_$J(LRCNT(0),5)
"RTN","LRSRVR9",80,0)
 S ^TMP($J,"LRDATA",8)="Tests with MLTF'S.......: "_$J(LRCNT(1),5)
"RTN","LRSRVR9",81,0)
 S ^TMP($J,"LRDATA",9)="Tests with Mapped LOINC.: "_$J(LRCNT(4),5)
"RTN","LRSRVR9",82,0)
 S ^TMP($J,"LRDATA",10)="Tests with NLT code....: "_$J(LRCNT(2),5)
"RTN","LRSRVR9",83,0)
 S ^TMP($J,"LRDATA",11)="Antimicrobials.........: "_$J(LRCNT(3),5)
"RTN","LRSRVR9",84,0)
 ;
"RTN","LRSRVR9",85,0)
 Q
"RTN","LRSRVR9",86,0)
 ;
"RTN","LRSRVR9",87,0)
 ;
"RTN","LRSRVR9",88,0)
TEST ; Pull out test info
"RTN","LRSRVR9",89,0)
 N LA7TREE,LR60,LRBATTY,LRBATTYN,LRTSTTYP
"RTN","LRSRVR9",90,0)
 K LROUT,LRSPEC,ERR
"RTN","LRSRVR9",91,0)
 S LR60NM=$QS(LRROOT,3),LR60IEN=$QS(LRROOT,4)
"RTN","LRSRVR9",92,0)
 S LR60NM=$$TRIM^XLFSTR(LR60NM,"RL"," ")
"RTN","LRSRVR9",93,0)
 S LRTSTTYP=$P(^LAB(60,LR60IEN,0),"^",3)
"RTN","LRSRVR9",94,0)
 ;
"RTN","LRSRVR9",95,0)
 ; Bypass "neither" type tests.
"RTN","LRSRVR9",96,0)
 I LRTSTTYP="N"!(LRTSTTYP="D") Q
"RTN","LRSRVR9",97,0)
 ; Bypass "workload" type tests.
"RTN","LRSRVR9",98,0)
 S LRTYPER=$P(^LAB(60,LR60IEN,0),"^",4)
"RTN","LRSRVR9",99,0)
 S A=$P($P(^LAB(60,LR60IEN,0),"^",5),";",1)
"RTN","LRSRVR9",100,0)
 I LRTYPER=""&(A'="") G TESTGOOD
"RTN","LRSRVR9",101,0)
 I LRTYPER="" Q
"RTN","LRSRVR9",102,0)
 I LRTYPER="WK" Q
"RTN","LRSRVR9",103,0)
 ;I LRTYPER="CH"&((LRSUBSCRIPT=1)!(LRSUBSCRIPT=7)!(LRSUBSCRIPT=8)) G TESTGOOD
"RTN","LRSRVR9",104,0)
 ;I LRTYPER="MI"&((LRSUBSCRIPT=2)!(LRSUBSCRIPT=7)!(LRSUBSCRIPT=8)) G TESTGOOD
"RTN","LRSRVR9",105,0)
 ;I LRTYPER="EM"&((LRSUBSCRIPT=3)!(LRSUBSCRIPT=8)) G TESTGOOD
"RTN","LRSRVR9",106,0)
 ;I LRTYPER="SP"&((LRSUBSCRIPT=4)!(LRSUBSCRIPT=8)) G TESTGOOD
"RTN","LRSRVR9",107,0)
 ;I LRTYPER="CY"&((LRSUBSCRIPT=5)!(LRSUBSCRIPT=8)) G TESTGOOD
"RTN","LRSRVR9",108,0)
 ;I LRTYPER="AU"&((LRSUBSCRIPT=6)!(LRSUBSCRIPT=8)) G TESTGOOD
"RTN","LRSRVR9",109,0)
 ; Q  ; doesn't match up
"RTN","LRSRVR9",110,0)
 ;
"RTN","LRSRVR9",111,0)
TESTGOOD ;
"RTN","LRSRVR9",112,0)
 S LRBATTY=LRST_"-"_LR60IEN,LRBATTYN=LR60NM
"RTN","LRSRVR9",113,0)
 S LRBATTY=$$TRIM^XLFSTR(LRBATTY,"RL"," ")
"RTN","LRSRVR9",114,0)
 ; Panel test
"RTN","LRSRVR9",115,0)
 ; Bypass "output panel" type tests - usually used for display only.
"RTN","LRSRVR9",116,0)
 I $O(^LAB(60,LR60IEN,2,0)) D  Q
"RTN","LRSRVR9",117,0)
 . I $P(^LAB(60,LR60IEN,0),"^",3)="O" Q
"RTN","LRSRVR9",118,0)
 . D UNWIND^LRSRVR9A(LR60IEN,9,0)
"RTN","LRSRVR9",119,0)
 . S LR60=0
"RTN","LRSRVR9",120,0)
 . F  S LR60=$O(LA7TREE(LR60)) Q:'LR60  D
"RTN","LRSRVR9",121,0)
 . . I $D(^TMP($J,"LR60",LR60)) Q
"RTN","LRSRVR9",122,0)
 . . S LR60IEN=LR60,LR60NM=$P(^LAB(60,LR60IEN,0),"^")
"RTN","LRSRVR9",123,0)
 . . S LRTSTTYP=$P(^LAB(60,LR60IEN,0),"^",3)
"RTN","LRSRVR9",124,0)
 . . ; Bypass "neither" type tests.
"RTN","LRSRVR9",125,0)
 . . I LRTSTTYP="N"!(LRTSTTYP="D") Q
"RTN","LRSRVR9",126,0)
 . . ; Bypass "workload" type tests.
"RTN","LRSRVR9",127,0)
 . . I $P(^LAB(60,LR60IEN,0),"^",4)="WK" Q
"RTN","LRSRVR9",128,0)
 . . ;I $P(^LAB(60,LR60IEN,0),"^",4)'="CH" Q
"RTN","LRSRVR9",129,0)
 . . S LRR64=+$P($G(^LAB(60,+LR60IEN,64)),U,2)
"RTN","LRSRVR9",130,0)
 . . D SPEC
"RTN","LRSRVR9",131,0)
 ;
"RTN","LRSRVR9",132,0)
 I $D(^TMP($J,"LR60",LR60IEN)) Q
"RTN","LRSRVR9",133,0)
 ; Not a panel test
"RTN","LRSRVR9",134,0)
 ; Get result NLT code
"RTN","LRSRVR9",135,0)
 S LRR64=+$P($G(^LAB(60,+LR60IEN,64)),U,2)
"RTN","LRSRVR9",136,0)
 D SPEC
"RTN","LRSRVR9",137,0)
 Q
"RTN","LRSRVR9",138,0)
 ;
"RTN","LRSRVR9",139,0)
 ;
"RTN","LRSRVR9",140,0)
SPEC ; Check each specimen for this test
"RTN","LRSRVR9",141,0)
 K LRSPEC,LROUT
"RTN","LRSRVR9",142,0)
 S (LRCDEF,LRSPEC,LRSPECN,LRLNC,LRLNCN,LRLNCX,LRLNC80,LRUNIT,Y)=""
"RTN","LRSRVR9",143,0)
 D SITENOTE^LRSRVR9A
"RTN","LRSRVR9",144,0)
 D SYNNOTE
"RTN","LRSRVR9",145,0)
 S LRSPEC60=0,LRSPECCT=0
"RTN","LRSRVR9",146,0)
 F  S LRSPEC60=$O(^LAB(60,+LR60IEN,1,LRSPEC60)) Q:'LRSPEC60  S LRSPECCT=LRSPECCT+1 D
"RTN","LRSRVR9",147,0)
 . Q:'($D(^LAB(60,+LR60IEN,1,LRSPEC60,0))#2)
"RTN","LRSRVR9",148,0)
 . S LRUNIT=$P(^LAB(60,+LR60IEN,1,LRSPEC60,0),U,7)
"RTN","LRSRVR9",149,0)
 . S X=$G(^LAB(61,LRSPEC60,0))
"RTN","LRSRVR9",150,0)
 . S LRSPECN=$P(X,"^"),LRSPECTA=$P(X,"^",10)
"RTN","LRSRVR9",151,0)
 . S LRSPEC(LRSPEC60_"-0")=LRSPEC60_U_LRSPECN_U_LRSPECTA_U_LRUNIT_U_LRR64
"RTN","LRSRVR9",152,0)
 . I LRR64,$P($$GET1^DIQ(64,LRR64_",",1,"E"),".",2)="0000" D SUFFIX^LRSRVR9A
"RTN","LRSRVR9",153,0)
 I LRSPECCT=0&(LRMISP=1) D NOSPEC Q
"RTN","LRSRVR9",154,0)
 D SPECLOOP
"RTN","LRSRVR9",155,0)
 Q
"RTN","LRSRVR9",156,0)
 ;
"RTN","LRSRVR9",157,0)
 ;
"RTN","LRSRVR9",158,0)
SPECLOOP ; Check to see if specimen has been linked to LOINC
"RTN","LRSRVR9",159,0)
 ;
"RTN","LRSRVR9",160,0)
 N LR64,LR6421,LRINDX,LRLNTA,LRRNLT,LRTA,LRX,X,LRVUID,AAA,LRVUIDN,LRVUIDAN,LRVLOINC,LRSUBMIT,LRSCREATE
"RTN","LRSRVR9",161,0)
 S LRINDX=0,(LRVUID,LRVUIDAN,LRVLOINC,LRVUIDN,LRSUBMIT,LRSCREATE)=""
"RTN","LRSRVR9",162,0)
 F  S LRINDX=$O(LRSPEC(LRINDX)) Q:'LRINDX  D
"RTN","LRSRVR9",163,0)
 . S X=LRSPEC(LRINDX)
"RTN","LRSRVR9",164,0)
 . S LRSPEC=$P(X,U),LRSPECN=$P(X,U,2),LRLNTA=$P(X,U,3),LR64=$P(X,U,5),LRUNIT=$$TRIM^XLFSTR($P(X,U,4),"RL"," ")
"RTN","LRSRVR9",165,0)
 . S (LR6421,LRLNC,LRRNLT,LRTA)="",(LRVUID,LRVUIDAN,LRVLOINC,LRVUIDN,LRSUBMIT,LRSCREATE)=""
"RTN","LRSRVR9",166,0)
 . S AAA=+LR60IEN
"RTN","LRSRVR9",167,0)
 . S LRVUID=$$GET1^DIQ(60.01,LRSPEC_","_AAA,30,"I")
"RTN","LRSRVR9",168,0)
 . I LRVUID'="" S LRVUIDAN=$$GET1^DIQ(66.3,LRVUID_",",.02),LRVLOINC=$$GET1^DIQ(66.3,LRVUID_",",.04),LRVUIDN=$$GET1^DIQ(66.3,LRVUID,.01,"E")
"RTN","LRSRVR9",169,0)
 . S LRSUBMIT=$$GET1^DIQ(60.01,LRSPEC_","_AAA,34,"I")
"RTN","LRSRVR9",170,0)
 . I LR64 D
"RTN","LRSRVR9",171,0)
 . . S LRRNLT=$$GET1^DIQ(64,LR64_",",1,"E")
"RTN","LRSRVR9",172,0)
 . . S LR6421=$$GET1^DIQ(64,LR64_",",13,"I")
"RTN","LRSRVR9",173,0)
 . . S AAA=+LR60IEN
"RTN","LRSRVR9",174,0)
 . . S LRCREATE=$$GET1^DIQ(60.01,LRSPEC_","_AAA,35,"I"),LRCREATE=$S(LRCREATE'="":"Y",1:"")
"RTN","LRSRVR9",175,0)
 . . S LREXPY=$$GET1^DIQ(60.01,LRSPEC_","_AAA,34,"I")
"RTN","LRSRVR9",176,0)
 . . S LRINACT=$$GET1^DIQ(60.01,LRSPEC_","_AAA,32,"I")
"RTN","LRSRVR9",177,0)
 . . S LRX=""
"RTN","LRSRVR9",178,0)
 . . I LRSPEC,LRLNTA S LRX=$P($G(^LAM(LR64,5,LRSPEC,1,LRLNTA,1)),"^")
"RTN","LRSRVR9",179,0)
 . . I LRX="",LRSPEC D
"RTN","LRSRVR9",180,0)
 . . . S X=$O(^LAM(LR64,5,LRSPEC,1,0))
"RTN","LRSRVR9",181,0)
 . . . I X S LRLNTA=X,LRX=$P($G(^LAM(LR64,5,LRSPEC,1,X,1)),"^")
"RTN","LRSRVR9",182,0)
 . . I LRX'="" S LRLNC=$$GET1^DIQ(95.3,LRX_",",.01,"E")
"RTN","LRSRVR9",183,0)
 . . I LRLNTA S LRTA=$$GET1^DIQ(64.061,LRLNTA_",",.01,"E")
"RTN","LRSRVR9",184,0)
 . D WRT
"RTN","LRSRVR9",185,0)
 Q
"RTN","LRSRVR9",186,0)
 ;
"RTN","LRSRVR9",187,0)
 ;
"RTN","LRSRVR9",188,0)
NOSPEC ; for test without specimens
"RTN","LRSRVR9",189,0)
 N LRSS,II,III,LRNOS,AA,BB
"RTN","LRSRVR9",190,0)
 S ^TMP($J,"LR60",LR60IEN)=""
"RTN","LRSRVR9",191,0)
 S LRNOS="^TMP($J,""LRNOSPEC"")"
"RTN","LRSRVR9",192,0)
 K @LRNOS
"RTN","LRSRVR9",193,0)
 F II=1:1:30 S @LRNOS@(II)=""
"RTN","LRSRVR9",194,0)
 S @LRNOS@(29)="MISSING SPECIMEN"
"RTN","LRSRVR9",195,0)
 S @LRNOS@(30)="1.1"
"RTN","LRSRVR9",196,0)
 S LRSS=$$GET1^DIQ(60,LR60IEN_",",4,"I")
"RTN","LRSRVR9",197,0)
 S @LRNOS@(1)=LRST_"-"_LR60IEN
"RTN","LRSRVR9",198,0)
 S @LRNOS@(2)=LR60NM
"RTN","LRSRVR9",199,0)
 ;S LRSTR=LRSTR_LRST_"-"_LR60IEN_"|"_LR60NM_"|||||||"
"RTN","LRSRVR9",200,0)
 S @LRNOS@(11)=$$GET1^DIQ(60,LR60IEN_",",4,"I")
"RTN","LRSRVR9",201,0)
 ; Test info - data type, help prompt
"RTN","LRSRVR9",202,0)
 I LRSS="CH" S X=$$TSTTYP^LRSRVR9A($$GET1^DIQ(60,LR60IEN_",",13)),@LRNOS@(12)=$P(X,"|"),@LRNOS@(13)=$P(X,"|",2)
"RTN","LRSRVR9",203,0)
 ; Send site's test notes on first record for this test.
"RTN","LRSRVR9",204,0)
 I LRSTNOTE D
"RTN","LRSRVR9",205,0)
 . ;D SETDATA
"RTN","LRSRVR9",206,0)
 . S LRJ="LRSTNOTE"
"RTN","LRSRVR9",207,0)
 . F III=1:1 S LRJ=$Q(@LRJ) Q:LRJ=""  D
"RTN","LRSRVR9",208,0)
 . . S X=@LRJ I X["|" S X=$TR(X,"|","~")
"RTN","LRSRVR9",209,0)
 . . S @LRNOS@(19,III)=X
"RTN","LRSRVR9",210,0)
 . S LRSTNOTE=0
"RTN","LRSRVR9",211,0)
 ;
"RTN","LRSRVR9",212,0)
 ; Send site's test synonym's on first record for this test.
"RTN","LRSRVR9",213,0)
 I LRSTSYN D
"RTN","LRSRVR9",214,0)
 . S LRJ="LRSTSYN"
"RTN","LRSRVR9",215,0)
 . F III=1:1 S LRJ=$Q(@LRJ) Q:LRJ=""  S @LRNOS@(20,III)=LRJ_"^" ;S LRSTR=LRSTR_@LRJ_"^" D SETDATA
"RTN","LRSRVR9",216,0)
 . S LRSTSYN=0
"RTN","LRSRVR9",217,0)
 ;
"RTN","LRSRVR9",218,0)
 ; Send file #60 test type
"RTN","LRSRVR9",219,0)
 S @LRNOS@(21)=LRTSTTYP
"RTN","LRSRVR9",220,0)
 ;
"RTN","LRSRVR9",221,0)
 S LRSTR=LRSTR_$G(@LRNOS@(1)),AA=1
"RTN","LRSRVR9",222,0)
 F  S AA=$O(@LRNOS@(AA)) Q:'AA  S BB=$G(@LRNOS@(AA))  D
"RTN","LRSRVR9",223,0)
 . I AA=19!(AA=20) D SETDATA,NOSPEC1 Q
"RTN","LRSRVR9",224,0)
 . S LRSTR=LRSTR_"|"_BB D SETDATA
"RTN","LRSRVR9",225,0)
 ;
"RTN","LRSRVR9",226,0)
 S LRSTR=LRSTR_"|"
"RTN","LRSRVR9",227,0)
 I 'LRTXT S LRSTR=LRSTR_LRCRLF
"RTN","LRSRVR9",228,0)
 D SETDATA
"RTN","LRSRVR9",229,0)
 ;
"RTN","LRSRVR9",230,0)
 S LRCNT=LRCNT+1,LRCNT(0)=LRCNT(0)+1
"RTN","LRSRVR9",231,0)
 K @LRNOS
"RTN","LRSRVR9",232,0)
 K II,III,LRNOS,AA,BB
"RTN","LRSRVR9",233,0)
 Q
"RTN","LRSRVR9",234,0)
 ;
"RTN","LRSRVR9",235,0)
NOSPEC1 ; Process site notes
"RTN","LRSRVR9",236,0)
 N CC,DD
"RTN","LRSRVR9",237,0)
 S CC=0 F  S CC=$O(@LRNOS@(AA,CC)) Q:'CC  S DD=$G(@LRNOS@(AA,CC)) D
"RTN","LRSRVR9",238,0)
 . S LRSTR=LRSTR_DD D SETDATA
"RTN","LRSRVR9",239,0)
 S LRSTR=LRSTR_"|"
"RTN","LRSRVR9",240,0)
 K CC,DD
"RTN","LRSRVR9",241,0)
 Q
"RTN","LRSRVR9",242,0)
 ;
"RTN","LRSRVR9",243,0)
WRT ; Set ^TMP( with extracted data
"RTN","LRSRVR9",244,0)
 N LRJ,LREN,LRQUIT,LRSS,X,Y
"RTN","LRSRVR9",245,0)
 ;
"RTN","LRSRVR9",246,0)
 ; Set flag that this file #60 test has been processed - avoid duplicate
"RTN","LRSRVR9",247,0)
 ; processing as component of panel and individual test
"RTN","LRSRVR9",248,0)
 S ^TMP($J,"LR60",LR60IEN)=""
"RTN","LRSRVR9",249,0)
 ;
"RTN","LRSRVR9",250,0)
 S LRSTR=LRSTR_LRST_"-"_LR60IEN_"-"_LRINDX
"RTN","LRSRVR9",251,0)
 S LRSTR=LRSTR_"|"_LR60NM_"|"_LRSPECN_"|"_LRTA_"|"_LRUNIT_"|"_LRLNC_"|"_LRRNLT_"|"_LRBATTY_"|"_LRBATTYN_"|"
"RTN","LRSRVR9",252,0)
 ;
"RTN","LRSRVR9",253,0)
 ; Lab section specified for this NLT code.
"RTN","LRSRVR9",254,0)
 S LRSTR=LRSTR_$S($G(LR6421)>0:$$GET1^DIQ(64.21,LR6421_",",1),1:"")_"|"
"RTN","LRSRVR9",255,0)
 ;
"RTN","LRSRVR9",256,0)
 ; Subscript
"RTN","LRSRVR9",257,0)
 S LRSS=$$GET1^DIQ(60,LR60IEN_",",4,"I")
"RTN","LRSRVR9",258,0)
 S LRSTR=LRSTR_LRSS_"|"
"RTN","LRSRVR9",259,0)
 ; Test info - data type, help prompt
"RTN","LRSRVR9",260,0)
 I LRSS'="CH" S LRSTR=LRSTR_"||"
"RTN","LRSRVR9",261,0)
 I LRSS="CH" S X=$$TSTTYP^LRSRVR9A($$GET1^DIQ(60,LR60IEN_",",13)) S LRSTR=LRSTR_$P(X,"|")_"|"_$P(X,"|",2)_"|"
"RTN","LRSRVR9",262,0)
 ;
"RTN","LRSRVR9",263,0)
 ; Test reference low|reference high|therapeutic low|therapeutic high|
"RTN","LRSRVR9",264,0)
 S X=$G(^LAB(60,LR60IEN,1,LRSPEC,0))
"RTN","LRSRVR9",265,0)
 S Y=$P(X,"^",2)_"|"_$P(X,"^",3)_"|"_$P(X,"^",11)_"|"_$P(X,"^",12)
"RTN","LRSRVR9",266,0)
 S LRSTR=LRSTR_$TR(Y,$C(34),"")
"RTN","LRSRVR9",267,0)
 ; Use for reference lab testing
"RTN","LRSRVR9",268,0)
 S X=$G(^LAB(60,LR60IEN,1,LRSPEC,.1))
"RTN","LRSRVR9",269,0)
 S LRSTR=LRSTR_"|"_$S($P(X,"^")=1:"YES",1:"NO")_"|"
"RTN","LRSRVR9",270,0)
 ; 
"RTN","LRSRVR9",271,0)
 ; Send site's test notes on first record for this test.
"RTN","LRSRVR9",272,0)
 I LRSTNOTE D
"RTN","LRSRVR9",273,0)
 . D SETDATA
"RTN","LRSRVR9",274,0)
 . S LRJ="LRSTNOTE"
"RTN","LRSRVR9",275,0)
 . F  S LRJ=$Q(@LRJ) Q:LRJ=""  D
"RTN","LRSRVR9",276,0)
 . . S X=@LRJ I X["|" S X=$TR(X,"|","~")
"RTN","LRSRVR9",277,0)
 . . S LRSTR=LRSTR_X D SETDATA
"RTN","LRSRVR9",278,0)
 . S LRSTNOTE=0
"RTN","LRSRVR9",279,0)
 S LRSTR=LRSTR_"|"
"RTN","LRSRVR9",280,0)
 ;
"RTN","LRSRVR9",281,0)
 ; Send site's test synonym's on first record for this test.
"RTN","LRSRVR9",282,0)
 I LRSTSYN D
"RTN","LRSRVR9",283,0)
 . D SETDATA
"RTN","LRSRVR9",284,0)
 . S LRJ="LRSTSYN"
"RTN","LRSRVR9",285,0)
 . F  S LRJ=$Q(@LRJ) Q:LRJ=""  S LRSTR=LRSTR_@LRJ_"^" D SETDATA
"RTN","LRSRVR9",286,0)
 . S LRSTSYN=0
"RTN","LRSRVR9",287,0)
 ;
"RTN","LRSRVR9",288,0)
 ; Send file #60 test type
"RTN","LRSRVR9",289,0)
 S LRSTR=LRSTR_"|"_LRTSTTYP_"|"
"RTN","LRSRVR9",290,0)
 ;
"RTN","LRSRVR9",291,0)
 ; mltf info
"RTN","LRSRVR9",292,0)
 I LRVUID'="" D
"RTN","LRSRVR9",293,0)
 . S LRSTR=LRSTR_LRVUID D SETDATA
"RTN","LRSRVR9",294,0)
 S LRSTR=LRSTR_"|"
"RTN","LRSRVR9",295,0)
 I LRVLOINC'="" D
"RTN","LRSRVR9",296,0)
 . S LRSTR=LRSTR_LRVLOINC D SETDATA
"RTN","LRSRVR9",297,0)
 S LRSTR=LRSTR_"|"
"RTN","LRSRVR9",298,0)
 I LRVUIDN'="" D
"RTN","LRSRVR9",299,0)
 . ;D SETDATA
"RTN","LRSRVR9",300,0)
 . S LRSTR=LRSTR_LRVUIDN D SETDATA
"RTN","LRSRVR9",301,0)
 S LRSTR=LRSTR_"|"
"RTN","LRSRVR9",302,0)
 I LRVUIDAN'="" D
"RTN","LRSRVR9",303,0)
 . ;D SETDATA
"RTN","LRSRVR9",304,0)
 . S LRSTR=LRSTR_LRVUIDAN D SETDATA
"RTN","LRSRVR9",305,0)
 S LRSTR=LRSTR_"|"
"RTN","LRSRVR9",306,0)
 ;
"RTN","LRSRVR9",307,0)
 D SETDATA
"RTN","LRSRVR9",308,0)
 ; Send default LOINC code
"RTN","LRSRVR9",309,0)
 I LR64 S LRSTR=LRSTR_$$GET1^DIQ(64,LR64_",",25)
"RTN","LRSRVR9",310,0)
 S LRSTR=LRSTR_"|"
"RTN","LRSRVR9",311,0)
  ;submited to ntrt
"RTN","LRSRVR9",312,0)
 S LRSTR=LRSTR_LRSUBMIT_"|"
"RTN","LRSRVR9",313,0)
 ;create date
"RTN","LRSRVR9",314,0)
 S LRSTR=LRSTR_LRSCREATE_"|"
"RTN","LRSRVR9",315,0)
 ;
"RTN","LRSRVR9",316,0)
 ; Set extract version number
"RTN","LRSRVR9",317,0)
 S LRSTR=LRSTR_($S(LRMISP=1:"|",1:""))_"1.1|"
"RTN","LRSRVR9",318,0)
 ;S LRSTR=LRSTR_"|1.1|"
"RTN","LRSRVR9",319,0)
 ;
"RTN","LRSRVR9",320,0)
 I 'LRTXT S LRSTR=LRSTR_LRCRLF
"RTN","LRSRVR9",321,0)
 D SETDATA
"RTN","LRSRVR9",322,0)
 ;
"RTN","LRSRVR9",323,0)
 S LRCNT=LRCNT+1,LRCNT(0)=LRCNT(0)+1
"RTN","LRSRVR9",324,0)
 I LRVUID'="" S LRCNT(1)=LRCNT(1)+1
"RTN","LRSRVR9",325,0)
 I LRLNC'="" S LRCNT(4)=LRCNT(4)+1
"RTN","LRSRVR9",326,0)
 I LR64 S LRCNT(2)=LRCNT(2)+1
"RTN","LRSRVR9",327,0)
 Q
"RTN","LRSRVR9",328,0)
 ;
"RTN","LRSRVR9",329,0)
 ;
"RTN","LRSRVR9",330,0)
SETDATA ; Set data into report structure
"RTN","LRSRVR9",331,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR9",332,0)
 I LRTXT S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=LRSTR,LRSTR="" Q
"RTN","LRSRVR9",333,0)
 I 'LRTXT D ENCODE^LRSRVR9A(.LRSTR)
"RTN","LRSRVR9",334,0)
 Q
"RTN","LRSRVR9",335,0)
 ;
"RTN","LRSRVR9",336,0)
SYNNOTE ; Build site's test synonym's for first record
"RTN","LRSRVR9",337,0)
 ;
"RTN","LRSRVR9",338,0)
 K LRSTSYN
"RTN","LRSRVR9",339,0)
 S LRSTSYN=0
"RTN","LRSRVR9",340,0)
 M LRSTSYN=^LAB(60,LR60IEN,5)
"RTN","LRSRVR9",341,0)
 K LRSTSYN(0),LRSTSYN("B")
"RTN","LRSRVR9",342,0)
 I $D(LRSTSYN) S LRSTSYN=1
"RTN","LRSRVR9",343,0)
 Q
"RTN","LRSRVR9",344,0)
 ;
"RTN","LRSRVR9",345,0)
MICRO(LR64) ;
"RTN","LRSRVR9",346,0)
 N LOINCDTB,LR6421,LRPNTB,LRSTUB
"RTN","LRSRVR9",347,0)
 S LRSTUB=""
"RTN","LRSRVR9",348,0)
 D GETS^DIQ(64,LR64,".01;1;13;25;25.5","IE","LOINCDTB","LRERR")
"RTN","LRSRVR9",349,0)
 D GETS^DIQ(64,LR64,"20*","IE","LOINCDTA","LRERR")
"RTN","LRSRVR9",350,0)
 S LRPNTB=$O(LOINCDTB(64,"")) Q:LRPNTB="" LRSTUB
"RTN","LRSRVR9",351,0)
 ;
"RTN","LRSRVR9",352,0)
 ; NLT Code/Procedure
"RTN","LRSRVR9",353,0)
 S LRSTUB=$G(LOINCDTB(64,LRPNTB,1,"E"))
"RTN","LRSRVR9",354,0)
 S $P(LRSTUB,"|",2)=$G(LOINCDTB(64,LRPNTB,.01,"I"))
"RTN","LRSRVR9",355,0)
 ;
"RTN","LRSRVR9",356,0)
 ; Default LOINC code/name
"RTN","LRSRVR9",357,0)
 S $P(LRSTUB,"|",3)=$G(LOINCDTB(64,LRPNTB,25,"E"))
"RTN","LRSRVR9",358,0)
 S $P(LRSTUB,"|",4)=$G(^LAB(95.3,+$G(LOINCDTB(64,LRPNTB,25,"I")),81))
"RTN","LRSRVR9",359,0)
 ;
"RTN","LRSRVR9",360,0)
 ; Anti-microbial Suscept (62.06,.01)
"RTN","LRSRVR9",361,0)
 S $P(LRSTUB,"|",5)=$$GET1^DIQ(62.06,LR6206_",",.01)
"RTN","LRSRVR9",362,0)
 ;
"RTN","LRSRVR9",363,0)
 ; Lab subscript/section
"RTN","LRSRVR9",364,0)
 S $P(LRSTUB,"|",19)=LRSS
"RTN","LRSRVR9",365,0)
 I $G(LOINCDTB(64,LRPNTB,13,"I")) D  ; Lab section
"RTN","LRSRVR9",366,0)
 . S LR6421=LOINCDTB(64,LRPNTB,13,"I")
"RTN","LRSRVR9",367,0)
 . S $P(LRSTUB,"|",20)=$$GET1^DIQ(64.21,LR6421_",",1)
"RTN","LRSRVR9",368,0)
 ;
"RTN","LRSRVR9",369,0)
 Q LRSTUB
"RTN","LRSRVR9",370,0)
 ;
"RTN","LRSRVR9",371,0)
GET664 ; get file 66.4 info
"RTN","LRSRVR9",372,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRSRVR9",373,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRSRVR9",374,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRSRVR9",375,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRSRVR9",376,0)
 Q
"RTN","LRSRVR9A")
0^17^B42448804^n/a
"RTN","LRSRVR9A",1,0)
LRSRVR9A ;BPFO/DTG - LAB NTRT DATA SERVER CONT'D MISSING VUID EXTRACT ;02/10/2016
"RTN","LRSRVR9A",2,0)
 ;;5.2;LAB SERVICE;**468**;FEB 10 2016;Build 64
"RTN","LRSRVR9A",3,0)
 ;
"RTN","LRSRVR9A",4,0)
 ; Based on LRSRVR2,LRSRVR2A
"RTN","LRSRVR9A",5,0)
 ;
"RTN","LRSRVR9A",6,0)
UUEN(STR) ; Uuencode string passed in.
"RTN","LRSRVR9A",7,0)
 N J,K,LEN,LRI,LRX,S,TMP,X,Y
"RTN","LRSRVR9A",8,0)
 S TMP="",LEN=$L(STR)
"RTN","LRSRVR9A",9,0)
 F LRI=1:3:LEN D
"RTN","LRSRVR9A",10,0)
 . S LRX=$E(STR,LRI,LRI+2)
"RTN","LRSRVR9A",11,0)
 . I $L(LRX)<3 S LRX=LRX_$E("   ",1,3-$L(LRX))
"RTN","LRSRVR9A",12,0)
 . S S=$A(LRX,1)*256+$A(LRX,2)*256+$A(LRX,3),Y=""
"RTN","LRSRVR9A",13,0)
 . F K=0:1:23 S Y=(S\(2**K)#2)_Y
"RTN","LRSRVR9A",14,0)
 . F K=1:6:24 D
"RTN","LRSRVR9A",15,0)
 . . S J=$$DEC^XLFUTL($E(Y,K,K+5),2)
"RTN","LRSRVR9A",16,0)
 . . S TMP=TMP_$C(J+32)
"RTN","LRSRVR9A",17,0)
 S TMP=$C(LEN+32)_TMP
"RTN","LRSRVR9A",18,0)
 Q TMP
"RTN","LRSRVR9A",19,0)
 ;
"RTN","LRSRVR9A",20,0)
TSTTYP(LRX) ; Determine test data type
"RTN","LRSRVR9A",21,0)
 N LRSTUB,LRTYPE,LRY
"RTN","LRSRVR9A",22,0)
 I LRX="" Q "|"
"RTN","LRSRVR9A",23,0)
 S LRX=$P(LRX,"(",2)
"RTN","LRSRVR9A",24,0)
 ;
"RTN","LRSRVR9A",25,0)
 ; Data type
"RTN","LRSRVR9A",26,0)
 S LRTYPE=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","TYPE")
"RTN","LRSRVR9A",27,0)
 S $P(LRSTUB,"|",2)=LRTYPE
"RTN","LRSRVR9A",28,0)
 ;
"RTN","LRSRVR9A",29,0)
 ; Input transform
"RTN","LRSRVR9A",30,0)
 S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"",$S(LRTYPE="SET":"POINTER",1:"INPUT TRANSFORM"))
"RTN","LRSRVR9A",31,0)
 I LRTYPE="NUMERIC",LRY["LRNUM" D
"RTN","LRSRVR9A",32,0)
 . S LRX=$P(LRY,"""",2)
"RTN","LRSRVR9A",33,0)
 . I LRX?.1"-".N1","1.N1","1N S LRY="Number from "_$P(LRX,",")_" to "_$P(LRX,",",2)_" with "_$P(LRX,",",3)_" decimal"
"RTN","LRSRVR9A",34,0)
 S $P(LRSTUB,"|",1)=LRY
"RTN","LRSRVR9A",35,0)
 ; Help prompt
"RTN","LRSRVR9A",36,0)
 I LRTYPE="FREE TEXT" D
"RTN","LRSRVR9A",37,0)
  . S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","HELP-PROMPT")
"RTN","LRSRVR9A",38,0)
  . S $P(LRSTUB,"|",1)=LRY
"RTN","LRSRVR9A",39,0)
 Q LRSTUB
"RTN","LRSRVR9A",40,0)
 ;
"RTN","LRSRVR9A",41,0)
ENCODE(LRSTR) ; Encode a string, keep remainder for next line
"RTN","LRSRVR9A",42,0)
 ; Call with LRSTR by reference, Remainder returned in LRSTR
"RTN","LRSRVR9A",43,0)
 ;
"RTN","LRSRVR9A",44,0)
 S LRQUIT=0,LRLEN=$L(LRSTR)
"RTN","LRSRVR9A",45,0)
 F  D  Q:LRQUIT
"RTN","LRSRVR9A",46,0)
 . I $L(LRSTR)<45 S LRQUIT=1 Q
"RTN","LRSRVR9A",47,0)
 . S LRX=$E(LRSTR,1,45)
"RTN","LRSRVR9A",48,0)
 . S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN(LRX)
"RTN","LRSRVR9A",49,0)
 . S LRSTR=$E(LRSTR,46,LRLEN)
"RTN","LRSRVR9A",50,0)
 Q
"RTN","LRSRVR9A",51,0)
 ;
"RTN","LRSRVR9A",52,0)
MAILSEND(LRMSUBJ) ; Send extract back to requestor.
"RTN","LRSRVR9A",53,0)
 ;
"RTN","LRSRVR9A",54,0)
 N LRINSTR,LRTASK,LRTO,XMERR,XMZ
"RTN","LRSRVR9A",55,0)
 ;
"RTN","LRSRVR9A",56,0)
 ;ZEXCEPT: XQSND
"RTN","LRSRVR9A",57,0)
 ;
"RTN","LRSRVR9A",58,0)
 S LRTO(XQSND)=""
"RTN","LRSRVR9A",59,0)
 S LRINSTR("ADDR FLAGS")="R"
"RTN","LRSRVR9A",60,0)
 S LRINSTR("FROM")="LAB_PACKAGE"
"RTN","LRSRVR9A",61,0)
 S LRMSUBJ=$E(LRMSUBJ,1,65)
"RTN","LRSRVR9A",62,0)
 D SENDMSG^XMXAPI(.5,LRMSUBJ,"^TMP($J,""LRDATA"")",.LRTO,.LRINSTR,.LRTASK)
"RTN","LRSRVR9A",63,0)
 Q
"RTN","LRSRVR9A",64,0)
 ;
"RTN","LRSRVR9A",65,0)
CLEAN ;
"RTN","LRSRVR9A",66,0)
 K ^TMP($J,"LR60")
"RTN","LRSRVR9A",67,0)
 K ERR,LA7PCNT,LR60IEN,LR60NM,LR6421,LR64IEN
"RTN","LRSRVR9A",68,0)
 K LRACTION,LRCC,LRCCNX,LOINCDTA,LRRNLT,LRCDEF,LREND
"RTN","LRSRVR9A",69,0)
 K LRL,LRLNC,LRLNC80,LRLNCN,LRLNCX,LRNODE,LROUT,LROUT1,LRR64
"RTN","LRSRVR9A",70,0)
 K LRSPEC,LRSPEC60,LRSPECN,LRSPECTA,LRST,LRSTN,LRSTR,LRSTSYN
"RTN","LRSRVR9A",71,0)
 K LRTA,LRUNIT,LRX,LRY,X,Y,LRMISP
"RTN","LRSRVR9A",72,0)
 K LSITE,LRNT,LRNTI,AR,LRBLD,LRSUBSCRIPT,LRTYPER,LRTXT
"RTN","LRSRVR9A",73,0)
 K LRCDEF,LRCREATE,LREXPY,LRINACT,LRNODE,LRSPECCT,LA7TREE
"RTN","LRSRVR9A",74,0)
 D CLEAN^LRSRVR
"RTN","LRSRVR9A",75,0)
 D ^%ZISC
"RTN","LRSRVR9A",76,0)
 Q
"RTN","LRSRVR9A",77,0)
 ;
"RTN","LRSRVR9A",78,0)
 ;
"RTN","LRSRVR9A",79,0)
HDR ; Set the header information
"RTN","LRSRVR9A",80,0)
 N XA S XA=""
"RTN","LRSRVR9A",81,0)
 S ^TMP($J,"LRDATA",1)="Report Generated.......: "_$$FMTE^XLFDT($$NOW^XLFDT)_" at "_LRSTN
"RTN","LRSRVR9A",82,0)
 S ^TMP($J,"LRDATA",2)="Report requested.......: "_LRSUB
"RTN","LRSRVR9A",83,0)
 S ^TMP($J,"LRDATA",3)="LOINC version..........: "_$$GET1^DID(95.3,"","","PACKAGE REVISION DATA")
"RTN","LRSRVR9A",84,0)
 S ^TMP($J,"LRDATA",4)="VistA File version.....: "_$G(^LAB(95.3,"VR"))
"RTN","LRSRVR9A",85,0)
 S ^TMP($J,"LRDATA",5)="Extract version........: 1.1"
"RTN","LRSRVR9A",86,0)
 F I=6,12,13 S ^TMP($J,"LRDATA",I)=" "
"RTN","LRSRVR9A",87,0)
 S ^TMP($J,"LRDATA",14)="Legend:"
"RTN","LRSRVR9A",88,0)
 S X="Station #-60 ien-Spec ien-Index|Test Name|Spec|Time Aspect|Units|Mapped LOINC|NLT #|Battery Code|Battery Description|Lab Section|Subscript|Comment|Data Type|Reference low|Reference high|Therapeutic low|Therapeutic high|"
"RTN","LRSRVR9A",89,0)
 S ^TMP($J,"LRDATA",15)=X,XA=$L(X)
"RTN","LRSRVR9A",90,0)
 ; S ^TMP($J,"LRDATA",17)=$$REPEAT^XLFSTR("-",$L(X))
"RTN","LRSRVR9A",91,0)
 ;S X="           1                  |    2    |  3 |     4     |  5  |  6  |  7  |    8       |     9             |     10    |   11    |   12  |    13   |     14      |     15       |      16       |       17       |"
"RTN","LRSRVR9A",92,0)
 ;S ^TMP($J,"LRDATA",16)=X
"RTN","LRSRVR9A",93,0)
 S X="Use Ref Lab|Site Comment|Test Synonyms|Test Type |MLTF 66.3 IEN|MLTF LOINC|MLTF Name|MLTF Alt Name|Default LOINC|Submitted to NTRT|Specimen Create Date|Extract Ver|"
"RTN","LRSRVR9A",94,0)
 ;S X="      18   |     19     |       20    |    21   |  22         |    23    |      24 |     25      |  26         |    27           |   28               |    29     |"
"RTN","LRSRVR9A",95,0)
 I LRMISP=1 D
"RTN","LRSRVR9A",96,0)
 . S X="Use Ref Lab|Site Comment|Test Synonyms|Test Type |MLTF 66.3 IEN|MLTF LOINC|MLTF Name|MLTF Alt Name|Default LOINC|Submitted to NTRT|Specimen Create Date| MISSING SPECIMENS|Extract Ver|"
"RTN","LRSRVR9A",97,0)
 . ;S X="      18   |     19     |       20    |    21   |  22         |    23    |      24 |     25      |  26         |    27           |   28               |    29            |     30    |"
"RTN","LRSRVR9A",98,0)
 S ^TMP($J,"LRDATA",16)=X,XA=XA+$L(X)
"RTN","LRSRVR9A",99,0)
 ;S ^TMP($J,"LRDATA",18)=X
"RTN","LRSRVR9A",100,0)
 ;S ^TMP($J,"LRDATA",18)=$$REPEAT^XLFSTR("-",$L(X))
"RTN","LRSRVR9A",101,0)
 I XA<245 S ^TMP($J,"LRDATA",17)=$$REPEAT^XLFSTR("-",XA)
"RTN","LRSRVR9A",102,0)
 I XA>245 S X=245,^TMP($J,"LRDATA",17)=$$REPEAT^XLFSTR("-",X)
"RTN","LRSRVR9A",103,0)
 S ^TMP($J,"LRDATA",18)=" "
"RTN","LRSRVR9A",104,0)
 I 'LRTXT D
"RTN","LRSRVR9A",105,0)
 . S LRFILENM=$TR(LRSTN," ","_")_"-"_LRSUB_"-"_$P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")_".TXT"
"RTN","LRSRVR9A",106,0)
 . S ^TMP($J,"LRDATA",12)="Attached LMOF file.....: "_LRFILENM
"RTN","LRSRVR9A",107,0)
 . S ^TMP($J,"LRDATA",19)=$$UUBEGFN(LRFILENM)
"RTN","LRSRVR9A",108,0)
 K XA
"RTN","LRSRVR9A",109,0)
 Q
"RTN","LRSRVR9A",110,0)
 ;
"RTN","LRSRVR9A",111,0)
 ;
"RTN","LRSRVR9A",112,0)
SITENOTE ; Build site's test notes for first record
"RTN","LRSRVR9A",113,0)
 ;
"RTN","LRSRVR9A",114,0)
 N LRI,LRSTNDT
"RTN","LRSRVR9A",115,0)
 K LRSTNOTE
"RTN","LRSRVR9A",116,0)
 S (LRSTNOTE,LRI)=0
"RTN","LRSRVR9A",117,0)
 F  S LRI=$O(^LAB(60,LR60IEN,11,LRI)) Q:'LRI  D
"RTN","LRSRVR9A",118,0)
 . S LRSTNDT=$P($G(^LAB(60,LR60IEN,11,LRI,0)),"^")
"RTN","LRSRVR9A",119,0)
 . M LRSTNOTE(LRI)=^LAB(60,LR60IEN,11,LRI,1)
"RTN","LRSRVR9A",120,0)
 . S LRSTNOTE(LRI,1,0)=$S(LRI>1:"^",1:"")_$$FMTE^XLFDT(LRSTNDT,"1M")_": "_$G(LRSTNOTE(LRI,1,0))
"RTN","LRSRVR9A",121,0)
 . K LRSTNOTE(LRI,0)
"RTN","LRSRVR9A",122,0)
 I $D(LRSTNOTE) S LRSTNOTE=1
"RTN","LRSRVR9A",123,0)
 Q
"RTN","LRSRVR9A",124,0)
 ;
"RTN","LRSRVR9A",125,0)
 ;
"RTN","LRSRVR9A",126,0)
SUFFIX ; If Result NLT does not have a suffix, i.e. it has .0000 then check for suffixed NLT codes which can also be used
"RTN","LRSRVR9A",127,0)
 N LR64,LRRNLT,LRROOT,LRX,LRY
"RTN","LRSRVR9A",128,0)
 S LRRNLT=$$GET1^DIQ(64,LRR64_",",1,"E")
"RTN","LRSRVR9A",129,0)
 S LRROOT="^LAM(""E"","_LRRNLT_")"
"RTN","LRSRVR9A",130,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  Q:$P($QS(LRROOT,2),".")'=$P(LRRNLT,".")  D
"RTN","LRSRVR9A",131,0)
 . S LR64=$QS(LRROOT,3)
"RTN","LRSRVR9A",132,0)
 . I $G(^LAM(LR64,5,LRSPEC60,0)) S LRSPEC(LRSPEC60_"-"_LR64)=LRSPEC60_U_LRSPECN_U_LRSPECTA_U_LRUNIT_U_LR64
"RTN","LRSRVR9A",133,0)
 Q
"RTN","LRSRVR9A",134,0)
 ;
"RTN","LRSRVR9A",135,0)
 ;
"RTN","LRSRVR9A",136,0)
UUBEGFN(LRFILENM) ; Construct uuencode "begin" coding
"RTN","LRSRVR9A",137,0)
 ; Call with LRFILENM = name of uuencoded file attachment
"RTN","LRSRVR9A",138,0)
 ; 
"RTN","LRSRVR9A",139,0)
 ; Returns LRX = string with "begin..."_file name
"RTN","LRSRVR9A",140,0)
 ;
"RTN","LRSRVR9A",141,0)
 N LRX
"RTN","LRSRVR9A",142,0)
 S LRX="begin 644 "_LRFILENM
"RTN","LRSRVR9A",143,0)
 Q LRX
"RTN","LRSRVR9A",144,0)
 ;
"RTN","LRSRVR9A",145,0)
 ; this is from LA7ADL1
"RTN","LRSRVR9A",146,0)
UNWIND(LA760,LA7URG,LA7PARNT) ; Unwind profile - set tests into array LA7TREE with urgency.
"RTN","LRSRVR9A",147,0)
 ;
"RTN","LRSRVR9A",148,0)
 ; Call with  LA760 = file #60 ien
"RTN","LRSRVR9A",149,0)
 ;           LA7URG = file #62.05 ien
"RTN","LRSRVR9A",150,0)
 ;         LA7PARNT = file #60 ien -  ordered parent (panel)
"RTN","LRSRVR9A",151,0)
 ;
"RTN","LRSRVR9A",152,0)
 ; Recursive panel, caught in a loop.
"RTN","LRSRVR9A",153,0)
 I $G(LA7PCNT)>50 Q
"RTN","LRSRVR9A",154,0)
 ;
"RTN","LRSRVR9A",155,0)
 ; If no urgency, set to routine (9), default value.
"RTN","LRSRVR9A",156,0)
 I 'LA7URG S LA7URG=9
"RTN","LRSRVR9A",157,0)
 ;
"RTN","LRSRVR9A",158,0)
 ; Test does not exist in file 60.
"RTN","LRSRVR9A",159,0)
 I '$D(^LAB(60,LA760,0)) Q
"RTN","LRSRVR9A",160,0)
 ;
"RTN","LRSRVR9A",161,0)
 ; Bypass "workload" type tests.
"RTN","LRSRVR9A",162,0)
 I $P(^LAB(60,LA760,0),"^",4)="WK" Q
"RTN","LRSRVR9A",163,0)
 ;
"RTN","LRSRVR9A",164,0)
 ; Test already listed, check if urgency different.
"RTN","LRSRVR9A",165,0)
 I $D(LA7TREE(LA760)) D  Q
"RTN","LRSRVR9A",166,0)
 . S LA7PCNT=0
"RTN","LRSRVR9A",167,0)
 . ; Convert expanded panel test urgency to regular urgency
"RTN","LRSRVR9A",168,0)
 . I LA7URG>50 S LA7URG=LA7URG-50
"RTN","LRSRVR9A",169,0)
 . ; Found test with higher urgency, save new urgency.
"RTN","LRSRVR9A",170,0)
 . I LA7URG<LA7TREE(LA760) S $P(LA7TREE(LA760),"^")=LA7URG
"RTN","LRSRVR9A",171,0)
 ;
"RTN","LRSRVR9A",172,0)
 ; Not a panel, list test with urgency.
"RTN","LRSRVR9A",173,0)
 I '$O(^LAB(60,LA760,2,0)) S LA7TREE(LA760)=LA7URG_"^"_LA7PARNT,LA7PCNT=0 Q
"RTN","LRSRVR9A",174,0)
 ;
"RTN","LRSRVR9A",175,0)
 N I
"RTN","LRSRVR9A",176,0)
 ;
"RTN","LRSRVR9A",177,0)
 ; Increment panel and test loop counter.
"RTN","LRSRVR9A",178,0)
 S LA7PCNT=$G(LA7PCNT)+1,I=0
"RTN","LRSRVR9A",179,0)
 ;
"RTN","LRSRVR9A",180,0)
 ; Expand test on panel.
"RTN","LRSRVR9A",181,0)
 F  S I=$O(^LAB(60,LA760,2,I)) Q:'I  D
"RTN","LRSRVR9A",182,0)
 . N II
"RTN","LRSRVR9A",183,0)
 . ; IEN of test on panel.
"RTN","LRSRVR9A",184,0)
 . S II=+$G(^LAB(60,LA760,2,I,0))
"RTN","LRSRVR9A",185,0)
 . ; Recursive panel, panel calls itself.
"RTN","LRSRVR9A",186,0)
 . I II,II=LA760 Q
"RTN","LRSRVR9A",187,0)
 . I II D UNWIND(II,LA7URG,LA7PARNT)
"RTN","LRSRVR9A",188,0)
 ;
"RTN","LRSRVR9A",189,0)
 Q
"RTN","LRVER1")
0^21^B40561385^B33061562
"RTN","LRVER1",1,0)
LRVER1 ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;01/20/11  18:00
"RTN","LRVER1",2,0)
 ;;5.2;LAB SERVICE;**42,153,201,215,239,240,263,232,286,291,350,468**;Sep 27, 1994;Build 64
"RTN","LRVER1",3,0)
 ;
"RTN","LRVER1",4,0)
 ;5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*468; Feb 10 2016
"RTN","LRVER1",5,0)
 ;
"RTN","LRVER1",6,0)
VER ; from LRGVP
"RTN","LRVER1",7,0)
 N LRBEY
"RTN","LRVER1",8,0)
 S LRLLOC=0,LRCW=8,LROUTINE=$P(^LAB(69.9,1,3),U,2) I $D(^LRO(69,LRODT,1,LRSN,0)) S LRLLOC=$P(^(0),U,7) S:'$L(LRLLOC) LRLLOC=0 W !,$P(^LRO(69,LRODT,1,LRSN,1),U,6)
"RTN","LRVER1",9,0)
 S LRCDT=$S($D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)):$P(^(3),U,1,2),1:$P(^(0),U,3)_U),LREAL=$P(LRCDT,U,2)
"RTN","LRVER1",10,0)
 S LRCDT=+LRCDT,LRSAMP=$S($D(^LRO(69,LRODT,1,LRSN,0)):$P(^(0),U,3),1:"")
"RTN","LRVER1",11,0)
 S LRIDT=$S($P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),U,5):$P(^(3),U,5),1:"")
"RTN","LRVER1",12,0)
 S:'LRIDT LRIDT=9999999-LRCDT
"RTN","LRVER1",13,0)
 ;
"RTN","LRVER1",14,0)
 ; Setup LRUID when called from LRGVP (group data review)
"RTN","LRVER1",15,0)
 I $G(LRUID)="" N LRUID S LRUID=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),"^")
"RTN","LRVER1",16,0)
 ;
"RTN","LRVER1",17,0)
 D EXP
"RTN","LRVER1",18,0)
LD S LRSS="CH" ;ONLY WORKS FOR 'CH'
"RTN","LRVER1",19,0)
 S LRMETH=LRSS IF $D(^LR(LRDFN,LRSS,LRIDT,0)) S LRMETH=$P($P(^(0),U,8),";",1)
"RTN","LRVER1",20,0)
 W:$D(^LAB(62,+LRSAMP,0)) !,"Sample: ",$P(^(0),U)
"RTN","LRVER1",21,0)
 K ^TMP("LR",$J,"TMP"),LRORD,LRM
"RTN","LRVER1",22,0)
 D ^LRVER2
"RTN","LRVER1",23,0)
 K LRDL
"RTN","LRVER1",24,0)
 Q
"RTN","LRVER1",25,0)
 ;
"RTN","LRVER1",26,0)
 ;
"RTN","LRVER1",27,0)
EXP ; Get the list of tests for this ACC. from LRGVG1
"RTN","LRVER1",28,0)
 ; Do not process tests which have been "NP" (not performed).
"RTN","LRVER1",29,0)
 N I,N,IX,LRNLT,T1,X
"RTN","LRVER1",30,0)
 K LRTEST,LRNAME,LRSM60
"RTN","LRVER1",31,0)
 S LRALERT=LROUTINE,N=0,I=0,IX=+$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0))
"RTN","LRVER1",32,0)
 F  S I=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I)) Q:I<.5  D
"RTN","LRVER1",33,0)
 . S X=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,I,0))
"RTN","LRVER1",34,0)
 . I 'X Q
"RTN","LRVER1",35,0)
 . I $P(X,"^",6)="*Not Performed" Q
"RTN","LRVER1",36,0)
 . S N=N+1,LRTEST(N)=I,LRNLT=$S($P(X,"^",2)>50:$P(X,U,9),1:$P(X,"^"))
"RTN","LRVER1",37,0)
 . I $P(X,"^",9),$P(X,"^")'=$P(X,"^",9),'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,$P(X,"^",9))) S LRNLT=$P(X,"^",9)
"RTN","LRVER1",38,0)
 . S LRTEST(N,"P")=LRNLT_U_$$NLT(LRNLT)
"RTN","LRVER1",39,0)
 . S LRAL=$P(X,U,2)#50
"RTN","LRVER1",40,0)
 . I LRAL S LRALERT=$S(LRAL<LRALERT:LRAL,1:LRALERT)
"RTN","LRVER1",41,0)
 ;
"RTN","LRVER1",42,0)
 S LRNTN=N
"RTN","LRVER1",43,0)
 F T1=1:1:N I $D(^LAB(60,+LRTEST(T1),0)) D
"RTN","LRVER1",44,0)
 . S LRTEST(T1)=LRTEST(T1)_U_^(0)
"RTN","LRVER1",45,0)
 . S LRNAME(T1)=$P(LRTEST(T1),U,2),LRNAME(T1,+LRTEST(T1))=""
"RTN","LRVER1",46,0)
 . S:$G(^(1,IX,3)) LRSM60(+$P(LRTEST(T1),";",2))=^(3)
"RTN","LRVER1",47,0)
 . D EX1
"RTN","LRVER1",48,0)
 K IX
"RTN","LRVER1",49,0)
 N X1,X
"RTN","LRVER1",50,0)
 S X=$P($H,","),X(1)=$P($H,",",2),I=0
"RTN","LRVER1",51,0)
 F  S I=$O(LRSM60(I)) Q:'I  S X1=X-LRSM60(I)_","_X(1),LRSM60(I)=9999999-$$HTFM^XLFDT(X1)
"RTN","LRVER1",52,0)
 Q
"RTN","LRVER1",53,0)
 ;
"RTN","LRVER1",54,0)
 ;
"RTN","LRVER1",55,0)
EX1 ; Expand the list of tests to edit.
"RTN","LRVER1",56,0)
 Q:'$D(LRTEST(T1))
"RTN","LRVER1",57,0)
 S X=LRTEST(T1),^TMP("LR",$J,"VTO",+X)=$P($P(X,U,6),";",2)
"RTN","LRVER1",58,0)
 S ^TMP("LR",$J,"VTO",+X,"P")=LRTEST(T1,"P"),S1=0,J=0
"RTN","LRVER1",59,0)
 D EX2
"RTN","LRVER1",60,0)
 K S1,J
"RTN","LRVER1",61,0)
 Q
"RTN","LRVER1",62,0)
 ;
"RTN","LRVER1",63,0)
EX2 ;
"RTN","LRVER1",64,0)
 S:'$D(LRCFL) LRCFL=""
"RTN","LRVER1",65,0)
 S LRSUB=$P(X,U,6)
"RTN","LRVER1",66,0)
 I $D(^LAB(60,+X,4)),$P(^(4),"^",2) S LRCFL=LRCFL_$P(^(4),"^",2)_U
"RTN","LRVER1",67,0)
 ;
"RTN","LRVER1",68,0)
 ; If atomic test then setup and quit
"RTN","LRVER1",69,0)
 I LRSUB'="" D  Q
"RTN","LRVER1",70,0)
 . S S2=$P(LRSUB,";",2)
"RTN","LRVER1",71,0)
 . D:'$D(^TMP("LR",$J,"TMP",S2)) ORD
"RTN","LRVER1",72,0)
 ;
"RTN","LRVER1",73,0)
 ; Explode panel tests
"RTN","LRVER1",74,0)
 ; Do not process tests which have been "NP" (not performed).
"RTN","LRVER1",75,0)
 S S1=S1+1,S1(S1)=X,S1(S1,1)=J
"RTN","LRVER1",76,0)
 S J=0
"RTN","LRVER1",77,0)
 F  S J=$O(^LAB(60,+S1(S1),2,J)) Q:J<1  D
"RTN","LRVER1",78,0)
 . S Y=+^(J,0),X=Y_U_^LAB(60,Y,0)
"RTN","LRVER1",79,0)
 . I $P($G(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),4,Y,0)),"^",6)="*Not Performed" Q
"RTN","LRVER1",80,0)
 . D EX2
"RTN","LRVER1",81,0)
 S X=S1(S1),J=S1(S1,1),S1=S1-1
"RTN","LRVER1",82,0)
 Q
"RTN","LRVER1",83,0)
 ;
"RTN","LRVER1",84,0)
 ;
"RTN","LRVER1",85,0)
ORD ;
"RTN","LRVER1",86,0)
 ; LRNX is set by caller
"RTN","LRVER1",87,0)
 S LRNX=+$G(LRNX)+1,LRORD(LRNX)=S2
"RTN","LRVER1",88,0)
 S LRBEY($P(LRTEST(T1),U,1),S2)=""   ; CIDC
"RTN","LRVER1",89,0)
 S ^TMP("LR",$J,"TMP",S2)=+X
"RTN","LRVER1",90,0)
 ; If panel being exploded then set parent("P" node)
"RTN","LRVER1",91,0)
 ;  to file #60 test being exploded
"RTN","LRVER1",92,0)
 I $G(LRTEST(T1,"P")) D
"RTN","LRVER1",93,0)
 . I +LRTEST(T1)'=+LRTEST(T1,"P") S ^TMP("LR",$J,"TMP",S2,"P")=LRTEST(T1,"P")_"!"_$$RNLT(+X)
"RTN","LRVER1",94,0)
 . E  S ^TMP("LR",$J,"TMP",S2,"P")=+LRTEST(T1)_U_$$NLT(+LRTEST(T1))_"!"_$$RNLT(+X)
"RTN","LRVER1",95,0)
 ;
"RTN","LRVER1",96,0)
 I $P(X,U,18) D
"RTN","LRVER1",97,0)
 . S LRM(S2)=+X
"RTN","LRVER1",98,0)
 . S LRM(S2,"P")=$G(^TMP("LR",$J,"TMP",S2,"P"))
"RTN","LRVER1",99,0)
 . S LRMX(+X)=""
"RTN","LRVER1",100,0)
 Q
"RTN","LRVER1",101,0)
 ;
"RTN","LRVER1",102,0)
 ;
"RTN","LRVER1",103,0)
NLT(X) ;
"RTN","LRVER1",104,0)
 N Y
"RTN","LRVER1",105,0)
 S Y=$S($P($G(^LAM(+$G(^LAB(60,+X,64)),0)),U,2):$P(^(0),U,2),1:"")
"RTN","LRVER1",106,0)
 Q Y
"RTN","LRVER1",107,0)
 ;
"RTN","LRVER1",108,0)
 ;
"RTN","LRVER1",109,0)
RNLT(X) ;
"RTN","LRVER1",110,0)
 I 'X Q ""
"RTN","LRVER1",111,0)
 N Y
"RTN","LRVER1",112,0)
 S Y(1)=+$P($G(^LAB(60,X,64)),U,2)
"RTN","LRVER1",113,0)
 S Y=$S($P($G(^LAM(Y(1),0)),U,2):$P(^(0),U,2),1:"")
"RTN","LRVER1",114,0)
 ; START OF CHANGE FOR LR*5.2*468
"RTN","LRVER1",115,0)
 ;I Y S $P(Y,"!",2)=$$LNC(Y,$G(LRCDEF),$G(LRSPEC))
"RTN","LRVER1",116,0)
 I Y S $P(Y,"!",2)=$$LNC(Y,$G(LRCDEF),$G(LRSPEC),X)
"RTN","LRVER1",117,0)
 ; END OF CHANGE FOR LR*5.2*468
"RTN","LRVER1",118,0)
 S $P(Y,"!",3)=$G(LRCDEF),$P(Y,"!",6)=X
"RTN","LRVER1",119,0)
 Q Y
"RTN","LRVER1",120,0)
 ;
"RTN","LRVER1",121,0)
 ;
"RTN","LRVER1",122,0)
 ; THE FOLLOWING ENTRY POINT WAS CHANGED BY PATCH LR*5.2.468 TO RECEIVE LAB TEST IEN
"RTN","LRVER1",123,0)
LNC(LRNLT,LRCDEF,LRSPEC,LRLTST) ;reture the LOINC code for WKLD Code/Specimen
"RTN","LRVER1",124,0)
 ; orig entry point code
"RTN","LRVER1",125,0)
 ; (LRNLT,LRCDEF,LRSPEC) ;reture the LOINC code for WKLD Code/Specimen
"RTN","LRVER1",126,0)
 ; END OF CHANGE FOR LR*5.2*468
"RTN","LRVER1",127,0)
 ; Call with (nlt code,method suffix,test specimen)
"RTN","LRVER1",128,0)
 ; TA = Time Aspect
"RTN","LRVER1",129,0)
 ; START OF CHANGE FOR LR*5.2*468 check for new VUID LOINC in LAB(60,test,1,specimen N6,P1 (#30)
"RTN","LRVER1",130,0)
 N A,BL,C,LRSPECN,LRMSGM S LRLTST=$G(LRLTST)+0
"RTN","LRVER1",131,0)
 I LRSPEC'=""&(LRLTST>0) S (A,BL,C)="" D  I BL'="" D MSG(1) Q BL
"RTN","LRVER1",132,0)
 . S LRSPECN=$S($D(^LAB(61,LRSPEC,0))#2:$$GET1^DIQ(61,LRSPEC_",",.01),1:"Unknown")
"RTN","LRVER1",133,0)
 . S A=$$GET1^DIQ(60.01,LRSPEC_","_LRLTST,30,"I") I A="" Q  ; does not have a vuid associated
"RTN","LRVER1",134,0)
 . S BL=$$GET1^DIQ(66.3,A_",",.04,"I")
"RTN","LRVER1",135,0)
 . ; fix to strip off the check digit per agreement 20160920
"RTN","LRVER1",136,0)
 . I BL'="" S BL=$P(BL,"-",1)
"RTN","LRVER1",137,0)
 K A,BL,C,LRSPECN,LRMSGM
"RTN","LRVER1",138,0)
 ; END OF CHANGE FOR LR*5.2*468
"RTN","LRVER1",139,0)
 N X,N,Y,LRSPECN,VAL,ERR,TA S X=""
"RTN","LRVER1",140,0)
 Q:'LRNLT X
"RTN","LRVER1",141,0)
 K LRMSGM
"RTN","LRVER1",142,0)
 S:$G(LRCDEF)="" LRCDEF="0000"
"RTN","LRVER1",143,0)
 I $P(LRCDEF,".",2) S LRCDEF=$P(LRCDEF,".",2)
"RTN","LRVER1",144,0)
 S LRCDEF=$S($P(LRNLT,".",2):$P(LRNLT,".",2),1:LRCDEF)
"RTN","LRVER1",145,0)
 I $L(LRCDEF)'=4 S LRCDEF=LRCDEF_$E("0000",$L(LRCDEF),($L(LRCDEF-4)))
"RTN","LRVER1",146,0)
 S LRCDEF=LRCDEF_" "
"RTN","LRVER1",147,0)
 S LRSPEC=+LRSPEC
"RTN","LRVER1",148,0)
 ;Get time aspect from 61
"RTN","LRVER1",149,0)
 S TA=$$GET1^DIQ(61,LRSPEC_",",.0961,"I")
"RTN","LRVER1",150,0)
 S LRSPECN=$S($D(^LAB(61,LRSPEC,0))#2:$$GET1^DIQ(61,LRSPEC_",",.01),1:"Unknown")
"RTN","LRVER1",151,0)
 S LRNLT=$P(LRNLT,".")_"."
"RTN","LRVER1",152,0)
 ;Check for WKLD CODE_LOAD/WORK LIST method suffix
"RTN","LRVER1",153,0)
 S VAL(1)=LRNLT_LRCDEF
"RTN","LRVER1",154,0)
 S N=$$FIND1^DIC(64,"","X",.VAL,"C","","ERR")
"RTN","LRVER1",155,0)
 ;Looking for specimen specific LOINC
"RTN","LRVER1",156,0)
 I N,LRSPEC D  I X D MSG(1) Q X
"RTN","LRVER1",157,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",158,0)
 . S TA=$O(^LAM(N,5,LRSPEC,1,0)) ; get time aspect
"RTN","LRVER1",159,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",160,0)
 ;Looking LOINC default
"RTN","LRVER1",161,0)
 I N S X=$$LDEF(N) I X D MSG(2) Q X
"RTN","LRVER1",162,0)
 I LRCDEF="0000 " Q ""
"RTN","LRVER1",163,0)
 ;Looking for WKLD CODE_GENERIC suffix
"RTN","LRVER1",164,0)
 K VAL
"RTN","LRVER1",165,0)
 S VAL(1)=LRNLT_"0000 "
"RTN","LRVER1",166,0)
 S N=$$FIND1^DIC(64,"","X",.VAL,"C","","ERR")
"RTN","LRVER1",167,0)
 I 'N Q ""
"RTN","LRVER1",168,0)
 ;Looking for WKLD CODE_GENERIC specimen specific LOINC
"RTN","LRVER1",169,0)
 I LRSPEC D  I X D MSG(3) Q X
"RTN","LRVER1",170,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",171,0)
 . S TA=$O(^LAM(N,5,LRSPEC,1,0)) ; get time aspect
"RTN","LRVER1",172,0)
 . I TA S X=$$GET1^DIQ(64.02,TA_","_LRSPEC_","_N_",",4,"I") Q:X
"RTN","LRVER1",173,0)
 ;Looking for WKLD CODE_GENERIC default LOINC
"RTN","LRVER1",174,0)
 I 'X,N S X=$$LDEF(N) I X D MSG(4)
"RTN","LRVER1",175,0)
 I 'X S X=""
"RTN","LRVER1",176,0)
 Q X
"RTN","LRVER1",177,0)
 ;
"RTN","LRVER1",178,0)
 ;
"RTN","LRVER1",179,0)
LDEF(Y) ;Find the default LOINC code for WKLD CODE
"RTN","LRVER1",180,0)
 I 'Y Q ""
"RTN","LRVER1",181,0)
 S X=$$GET1^DIQ(64,Y_",",25,"I")
"RTN","LRVER1",182,0)
 I 'X S X=""
"RTN","LRVER1",183,0)
 Q X
"RTN","LRVER1",184,0)
 ;
"RTN","LRVER1",185,0)
 ;
"RTN","LRVER1",186,0)
TMPSB(LRSB) ; Get LOINC code from ^TMP("LR",$J,"TMP",LRSB,"P")
"RTN","LRVER1",187,0)
 S NODE=$G(^TMP("LR",$J,"TMP",LRSB,"P"))
"RTN","LRVER1",188,0)
 I 'NODE Q ""
"RTN","LRVER1",189,0)
 ; START CHANGE FOR LR*5.2*468
"RTN","LRVER1",190,0)
 ; S $P(NODE,"!",3)=$$LNC($P(NODE,"!",2),$G(LRCDEF),$G(LRSPEC))
"RTN","LRVER1",191,0)
 S $P(NODE,"!",3)=$$LNC($P(NODE,"!",2),$G(LRCDEF),$G(LRSPEC),$G(LRTS))
"RTN","LRVER1",192,0)
 ; END CHANGE FOR LR*5.2*468
"RTN","LRVER1",193,0)
 S $P(NODE,"!",4)=$G(LRCDEF)
"RTN","LRVER1",194,0)
 Q $P(NODE,U,2)
"RTN","LRVER1",195,0)
 ;
"RTN","LRVER1",196,0)
 ;
"RTN","LRVER1",197,0)
MSG(VAL) ;Set output message
"RTN","LRVER1",198,0)
 Q:'$G(LRMSG)
"RTN","LRVER1",199,0)
 S LRMSGM="0-No LOINC Code Defined for "_LRNLT_LRCDEF
"RTN","LRVER1",200,0)
 N TANAME
"RTN","LRVER1",201,0)
 I $G(TA) S TANAME=$$GET1^DIQ(64.061,TA_",",.01,"E") ;TA Name
"RTN","LRVER1",202,0)
 I VAL=1 S LRMSGM="1-"_LRNLT_$E(LRCDEF,1,4)_" - "_LRSPECN
"RTN","LRVER1",203,0)
 I VAL=2 S LRMSGM="2-"_LRNLT_$E(LRCDEF,1,4)_" - Default LOINC"
"RTN","LRVER1",204,0)
 I VAL=3 S LRMSGM="3-"_LRNLT_"0000 - "_LRSPECN
"RTN","LRVER1",205,0)
 I VAL=4 S LRMSGM="4-"_LRNLT_"0000 - Default LOINC"
"RTN","LRVER1",206,0)
 I $G(TA) S LRMSGM=LRMSGM_" Time Aspect "_TANAME
"RTN","LRVER1",207,0)
 W:$G(LRDBUG) !,LRMSGM,!
"RTN","LRVER1",208,0)
 Q
"RTN","LRVRPOC")
0^25^B85608617^B82812080
"RTN","LRVRPOC",1,0)
LRVRPOC ;DALOI/JMC - POINT OF CARE VERIFICATION ;05/11/10  16:48
"RTN","LRVRPOC",2,0)
 ;;5.2;LAB SERVICE;**290,350,468**;Sep 27, 1994;Build 64
"RTN","LRVRPOC",3,0)
 ;
"RTN","LRVRPOC",4,0)
 ;5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*468; Feb 10 2016
"RTN","LRVRPOC",5,0)
 ;
"RTN","LRVRPOC",6,0)
 ; Reference to DIVSET^XUSRB2 supported by DBIA #4055
"RTN","LRVRPOC",7,0)
 ; Reference to ADM^VADPT2 supported by DBIA #325
"RTN","LRVRPOC",8,0)
 ;
"RTN","LRVRPOC",9,0)
EN ; Entry Point Call with LRLL=Load/Worklist IEN
"RTN","LRVRPOC",10,0)
 ;
"RTN","LRVRPOC",11,0)
 N DIQUIET,LA76248,LA76249,LADFN,LAIEN,LAMSG,LASSN,LREND,LRERR
"RTN","LRVRPOC",12,0)
 ;
"RTN","LRVRPOC",13,0)
 S LRLL=+$G(LRLL)
"RTN","LRVRPOC",14,0)
 ;
"RTN","LRVRPOC",15,0)
 ; See if already running
"RTN","LRVRPOC",16,0)
 L +^LAH("Z",LRLL):10
"RTN","LRVRPOC",17,0)
 E  D END Q
"RTN","LRVRPOC",18,0)
 ;
"RTN","LRVRPOC",19,0)
 I '$D(^LRO(68.2,LRLL,0))#2 D END Q
"RTN","LRVRPOC",20,0)
 S LRLL(0)=^LRO(68.2,LRLL,0)
"RTN","LRVRPOC",21,0)
 ;
"RTN","LRVRPOC",22,0)
 D INIT^LRVRPOCU
"RTN","LRVRPOC",23,0)
 I LREND D  Q
"RTN","LRVRPOC",24,0)
 . D XQA^LA7UXQA(2,0,0,0,"POC: "_LAMSG,"")
"RTN","LRVRPOC",25,0)
 . D END
"RTN","LRVRPOC",26,0)
 ;
"RTN","LRVRPOC",27,0)
 S LAIEN=0
"RTN","LRVRPOC",28,0)
 F  S LAIEN=$O(^LAH(LRLL,1,LAIEN)) Q:LAIEN<1  D
"RTN","LRVRPOC",29,0)
 . I $$S^%ZTLOAD("Processing loadlist "_$P(LRLL(0),"^")_", entry #"_LAIEN) S ZTSTOP=1 Q  ; Task has been requested to stop
"RTN","LRVRPOC",30,0)
 . K LRERR
"RTN","LRVRPOC",31,0)
 . S LASSN=$P($G(^LAH(LRLL,1,LAIEN,.1,"PID","SSN")),"^")
"RTN","LRVRPOC",32,0)
 . ; Interface message number in ^LAHM(62.49
"RTN","LRVRPOC",33,0)
 . S LA76249=+$P($G(^LAH(LRLL,1,LAIEN,0)),U,13)
"RTN","LRVRPOC",34,0)
 . ; File #62.48 configuration link
"RTN","LRVRPOC",35,0)
 . S LA76248=""
"RTN","LRVRPOC",36,0)
 . I LA76249 S LA76248=$$GET1^DIQ(62.49,LA76249_",",.5,"I")
"RTN","LRVRPOC",37,0)
 . D LOOK,NEXT,ZAPALL^LRVR3(LRLL,LAIEN)
"RTN","LRVRPOC",38,0)
 D END
"RTN","LRVRPOC",39,0)
 Q
"RTN","LRVRPOC",40,0)
 ;
"RTN","LRVRPOC",41,0)
 ;
"RTN","LRVRPOC",42,0)
NEXT ; Clean up between entries
"RTN","LRVRPOC",43,0)
 D CLEAN^LRVRPOCU
"RTN","LRVRPOC",44,0)
 Q
"RTN","LRVRPOC",45,0)
 ;
"RTN","LRVRPOC",46,0)
 ;
"RTN","LRVRPOC",47,0)
END ; Clean up and quit
"RTN","LRVRPOC",48,0)
 ; Release lock
"RTN","LRVRPOC",49,0)
 L -^LAH("Z",LRLL)
"RTN","LRVRPOC",50,0)
 ;
"RTN","LRVRPOC",51,0)
 D SPALERT^LRVRPOCU,KVAR^VADPT,KILL^XUSCLEAN
"RTN","LRVRPOC",52,0)
 K ^TMP("LR",$J)
"RTN","LRVRPOC",53,0)
 I $D(ZTQUEUED),'$P($G(ZTREQ),"^") S ZTREQ="@"
"RTN","LRVRPOC",54,0)
 Q
"RTN","LRVRPOC",55,0)
 ;
"RTN","LRVRPOC",56,0)
 ;
"RTN","LRVRPOC",57,0)
LOOK ; Check for data
"RTN","LRVRPOC",58,0)
 K LRDFN,LRERR
"RTN","LRVRPOC",59,0)
 S LRODT=DT,(LREND,LRERR)=0
"RTN","LRVRPOC",60,0)
 S DFN=$$GETDFN^LRVRPOCU(LASSN)
"RTN","LRVRPOC",61,0)
 I 'DFN D  Q
"RTN","LRVRPOC",62,0)
 . S LRERR=$$CREATE^LA7LOG(101,1)
"RTN","LRVRPOC",63,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",64,0)
 S LADFN=DFN
"RTN","LRVRPOC",65,0)
 I '$D(^LAH(LRLL,1,LAIEN,0))#2 D  Q
"RTN","LRVRPOC",66,0)
 . S LRERR=$$CREATE^LA7LOG(105,1)
"RTN","LRVRPOC",67,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",68,0)
 S LRCDT=$P($G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORCDT")),"^")
"RTN","LRVRPOC",69,0)
 I LRCDT'?7N.E D  Q
"RTN","LRVRPOC",70,0)
 . S LRERR=$$CREATE^LA7LOG(104,1)
"RTN","LRVRPOC",71,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",72,0)
 S LRDFN=$$FNLRDFN(LADFN)
"RTN","LRVRPOC",73,0)
 I $S(LREND:1,LRDFN<1:1,1:0) Q
"RTN","LRVRPOC",74,0)
 S LRSSN=$S($G(^LAH(LRLL,1,LAIEN,.1,"PID","SSN")):^("SSN"),1:"???")
"RTN","LRVRPOC",75,0)
 I LRSSN'=$G(SSN(2)) D  Q
"RTN","LRVRPOC",76,0)
 . S LRERR=$$CREATE^LA7LOG(106,1)
"RTN","LRVRPOC",77,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",78,0)
 S LRTJ=""
"RTN","LRVRPOC",79,0)
 D DATA(LRLL,LAIEN)
"RTN","LRVRPOC",80,0)
 Q
"RTN","LRVRPOC",81,0)
 ;
"RTN","LRVRPOC",82,0)
 ;
"RTN","LRVRPOC",83,0)
FNLRDFN(DFN) ;Lookup/set LRDFN and define patient variables
"RTN","LRVRPOC",84,0)
 D KVAR^VADPT
"RTN","LRVRPOC",85,0)
 K ANS,ERR,LRDPF,PNM,X
"RTN","LRVRPOC",86,0)
 I $S(+DFN'=DFN:1,'$G(DFN):1,'$D(^DPT(DFN,0))#2:1,1:0) D  Q 0
"RTN","LRVRPOC",87,0)
 . S LREND=1,LRERR=$$CREATE^LA7LOG(108,1)
"RTN","LRVRPOC",88,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",89,0)
 S LRDFN=$$GET1^DIQ(2,DFN_",",63,"I","ANS","ERR")
"RTN","LRVRPOC",90,0)
 S PNM="Unknown"
"RTN","LRVRPOC",91,0)
 I LRDFN<1 S LRDFN=$$NEWPT(DFN)
"RTN","LRVRPOC",92,0)
 I LRDFN>0 D  Q LRDFN
"RTN","LRVRPOC",93,0)
 . D DEM^LRX
"RTN","LRVRPOC",94,0)
 . I $G(LREND) S LRDFN=0 Q
"RTN","LRVRPOC",95,0)
 . S VAINDT=LRCDT D ADM^VADPT2
"RTN","LRVRPOC",96,0)
 . S VAIP("D")=$S(VADMVT:LRCDT,1:LRCDT\1) D IN5PT^LRX
"RTN","LRVRPOC",97,0)
 . D DPT(DFN)
"RTN","LRVRPOC",98,0)
 . I LRERR S LREND=1,LRDFN=0
"RTN","LRVRPOC",99,0)
 Q 0
"RTN","LRVRPOC",100,0)
 ;
"RTN","LRVRPOC",101,0)
 ;
"RTN","LRVRPOC",102,0)
NEWPT(DFN) ;Set ^LR( root for patient
"RTN","LRVRPOC",103,0)
 S LRDPF="2^DPT(",X="^"_$P(LRDPF,"^",2)_DFN_",""LR"")"
"RTN","LRVRPOC",104,0)
 S LRDFN=$O(^LR("A"),-1) I 'LRDFN S LRDFN=1
"RTN","LRVRPOC",105,0)
 L +^LR(0):99
"RTN","LRVRPOC",106,0)
 D E2^LRDPA
"RTN","LRVRPOC",107,0)
 L -^LR(0)
"RTN","LRVRPOC",108,0)
 I $G(LRDFN)<1 S LREND=1,LRDFN=0
"RTN","LRVRPOC",109,0)
 Q LRDFN
"RTN","LRVRPOC",110,0)
 ;
"RTN","LRVRPOC",111,0)
 ;
"RTN","LRVRPOC",112,0)
DPT(DFN) ;
"RTN","LRVRPOC",113,0)
 N LRX,X,Y,DIC
"RTN","LRVRPOC",114,0)
 S (LRERR,LRDFN)=""
"RTN","LRVRPOC",115,0)
 S LRDFN=$$GET1^DIQ(2,DFN_",",63,"I","ANS","ERR")
"RTN","LRVRPOC",116,0)
 I 'LRDFN D END^LRDPA Q:'$G(LRDFN)
"RTN","LRVRPOC",117,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"PID","LRDFN"))
"RTN","LRVRPOC",118,0)
 I LRX,LRX'=LRDFN D  Q
"RTN","LRVRPOC",119,0)
 . S LRERR=$$CREATE^LA7LOG(103,1)
"RTN","LRVRPOC",120,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",121,0)
 ;
"RTN","LRVRPOC",122,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"PID","DFN"))
"RTN","LRVRPOC",123,0)
 I LRX,LRX'=DFN D  Q
"RTN","LRVRPOC",124,0)
 . S LRERR=$$CREATE^LA7LOG(102,1)
"RTN","LRVRPOC",125,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",126,0)
 ;
"RTN","LRVRPOC",127,0)
 ; Determine ordering provider
"RTN","LRVRPOC",128,0)
 N LRX,LRY,X,Y
"RTN","LRVRPOC",129,0)
 S LRPRAC=""
"RTN","LRVRPOC",130,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDP"))
"RTN","LRVRPOC",131,0)
 I '$P(LRX,"^",2),$P(LRX,"^")'="" D  Q:LRERR
"RTN","LRVRPOC",132,0)
 . S LRERR=$$CREATE^LA7LOG(119,1)
"RTN","LRVRPOC",133,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",134,0)
 ; Check if a valid provider
"RTN","LRVRPOC",135,0)
 I $P(LRX,"^",2) D  Q:LRERR
"RTN","LRVRPOC",136,0)
 . I $$PROVIDER^XUSER(+LRX) S LRPRAC=+LRX Q
"RTN","LRVRPOC",137,0)
 . S LRERR=$$CREATE^LA7LOG(119,1)
"RTN","LRVRPOC",138,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",139,0)
 ;
"RTN","LRVRPOC",140,0)
 ; If no ordering provider in message then check for inpatient provider.
"RTN","LRVRPOC",141,0)
 I 'LRPRAC D
"RTN","LRVRPOC",142,0)
 . I $G(VAIP(7)) S LRPRAC=+VAIP(7) Q
"RTN","LRVRPOC",143,0)
 . I $G(VAIP(18)) S LRPRAC=+VAIP(18) Q
"RTN","LRVRPOC",144,0)
 ;
"RTN","LRVRPOC",145,0)
 ; Use VADPT for inpatients - clinic enrollment for outpatient
"RTN","LRVRPOC",146,0)
 ; Check if ordering location/division from message
"RTN","LRVRPOC",147,0)
 S X=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","EOL"))
"RTN","LRVRPOC",148,0)
 S LROLLOC=+X,LROLDIV=$P(X,"^",3)
"RTN","LRVRPOC",149,0)
 ;
"RTN","LRVRPOC",150,0)
 ; Check for inpatient location if no location
"RTN","LRVRPOC",151,0)
 I 'LROLLOC,$G(VAIP(5)) D
"RTN","LRVRPOC",152,0)
 . S LROLLOC=$$GET1^DIQ(42,+VAIP(5)_",",44,"I")
"RTN","LRVRPOC",153,0)
 . I 'LROLDIV S LROLDIV=$$GET1^DIQ(44,LROLLOC_",",3,"I")
"RTN","LRVRPOC",154,0)
 ;
"RTN","LRVRPOC",155,0)
 ; Check for outpatient appointments if no location
"RTN","LRVRPOC",156,0)
 I 'LROLLOC!('LRPRAC) D VASD^LRVRPOCU
"RTN","LRVRPOC",157,0)
 ;
"RTN","LRVRPOC",158,0)
 ; If no location then log error.
"RTN","LRVRPOC",159,0)
 I 'LROLLOC D  Q
"RTN","LRVRPOC",160,0)
 . S LRERR=$$CREATE^LA7LOG(107,1)
"RTN","LRVRPOC",161,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",162,0)
 ;
"RTN","LRVRPOC",163,0)
 ; If no in/outpatient provider then check for primary care provider
"RTN","LRVRPOC",164,0)
 I 'LRPRAC S LRPRAC=+$$OUTPTPR^SDUTL3(DFN,LRCDT)
"RTN","LRVRPOC",165,0)
 ;
"RTN","LRVRPOC",166,0)
 ; If no provider - none in message, no primary care and no provider on
"RTN","LRVRPOC",167,0)
 ; outpatient encounter then log error.
"RTN","LRVRPOC",168,0)
 I 'LRPRAC D  Q
"RTN","LRVRPOC",169,0)
 . S LRERR=$$CREATE^LA7LOG(110,1)
"RTN","LRVRPOC",170,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",171,0)
 ;
"RTN","LRVRPOC",172,0)
 ; If division in message does not match location's division then reject.
"RTN","LRVRPOC",173,0)
 ; Check if division not a VAMC and parent is a VAMC and division
"RTN","LRVRPOC",174,0)
 ;  matches parent - deal with multiple medical centers within an
"RTN","LRVRPOC",175,0)
 ;  integrated system.
"RTN","LRVRPOC",176,0)
 I LROLDIV D  Q:LRERR
"RTN","LRVRPOC",177,0)
 . N DIV,OK,LRX
"RTN","LRVRPOC",178,0)
 . S DIV=$$GET1^DIQ(44,LROLLOC_",",3,"I")
"RTN","LRVRPOC",179,0)
 . I LROLDIV=DIV Q
"RTN","LRVRPOC",180,0)
 . S X=$$NNT^XUAF4(DIV),OK=0
"RTN","LRVRPOC",181,0)
 . I $P(X,"^",3)'="VAMC" D  Q:OK
"RTN","LRVRPOC",182,0)
 . . S Y=$P($$PRNT^XUAF4($P(X,"^")),"^"),X=$$NNT^XUAF4(Y)
"RTN","LRVRPOC",183,0)
 . . I $P(X,"^",3)="VAMC",$P(Y,"^")=LROLDIV S OK=1
"RTN","LRVRPOC",184,0)
 . S LRX=$$NNT^XUAF4(LROLDIV)
"RTN","LRVRPOC",185,0)
 . S LRERR=$$CREATE^LA7LOG(112,1)
"RTN","LRVRPOC",186,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",187,0)
 ;
"RTN","LRVRPOC",188,0)
 ; Get location abbreviation
"RTN","LRVRPOC",189,0)
 S LRLLOC=$$GET1^DIQ(44,LROLLOC_",",1,"I")
"RTN","LRVRPOC",190,0)
 I LRLLOC="" S LRLLOC="NO ABRV "_LROLLOC
"RTN","LRVRPOC",191,0)
 Q
"RTN","LRVRPOC",192,0)
 ;
"RTN","LRVRPOC",193,0)
 ;
"RTN","LRVRPOC",194,0)
DATA(LRLL,LAIEN) ;Extract results into LROT(
"RTN","LRVRPOC",195,0)
 ;
"RTN","LRVRPOC",196,0)
 K LR642,LRDATA,LRERR,LRSPECX,LRCNT,LRNOW,LROSPEC,LROT,LRSAMP,LRSB,LRSPEC,LRTRAY,LRCUP,LRSQ,LRTS,LRX,LRY,LRZ
"RTN","LRVRPOC",197,0)
 S LRSQ=LAIEN,LRDATA=1,(LR642,LRCNT,LRERR)=0,(LRDAA,LRSAMP,LRSPEC)=""
"RTN","LRVRPOC",198,0)
 S LRLL(0)=^LRO(68.2,LRLL,0)
"RTN","LRVRPOC",199,0)
 S LROSPEC=$P($G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDSPEC")),"^")
"RTN","LRVRPOC",200,0)
 I LROSPEC="" D  Q
"RTN","LRVRPOC",201,0)
 . S LRERR=$$CREATE^LA7LOG(114,1)
"RTN","LRVRPOC",202,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",203,0)
 S LRX=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","ORDNLT"))
"RTN","LRVRPOC",204,0)
 ;
"RTN","LRVRPOC",205,0)
 ; Change division to ordering division
"RTN","LRVRPOC",206,0)
 S LRDUZ(2)=$S(LROLDIV:LROLDIV,1:LRDIV)
"RTN","LRVRPOC",207,0)
 I LRDUZ(2)'=DUZ(2) D  Q:LRERR
"RTN","LRVRPOC",208,0)
 . N LA7X,LRY
"RTN","LRVRPOC",209,0)
 . S LRY=0
"RTN","LRVRPOC",210,0)
 . D DIVSET^XUSRB2(.LRY,"`"_LRDUZ(2))
"RTN","LRVRPOC",211,0)
 . I LRY Q
"RTN","LRVRPOC",212,0)
 . S LA7X="Unable to set user 'LRLAB,POC' to division "_$$GET1^DIQ(4,LRDUZ(2)_",",.01)
"RTN","LRVRPOC",213,0)
 . S LRERR=$$CREATE^LA7LOG(37,1)
"RTN","LRVRPOC",214,0)
 ;
"RTN","LRVRPOC",215,0)
 ; Ordering based on NLT codes from loadlist profile and OBR segment
"RTN","LRVRPOC",216,0)
 F I=1:1:$L(LRX,"^") S LRY=$P(LRX,"^",I) Q:LRY=""  D  Q:LRERR
"RTN","LRVRPOC",217,0)
 . I '$D(LRORDNLT(LRY,LROSPEC)) S LRERR=$$CREATE^LA7LOG(120,1) Q
"RTN","LRVRPOC",218,0)
 . S LRZ=LRORDNLT(LRY,LROSPEC)
"RTN","LRVRPOC",219,0)
 . S LRTST=$P(LRZ,"^"),LRSPEC=$P(LRZ,"^",2),LRSAMP=$P(LRZ,"^",3)
"RTN","LRVRPOC",220,0)
 . I '$D(^TMP("LR",$J,"VTO",LRTST)) S LRERR=$$CREATE^LA7LOG(118,1) Q
"RTN","LRVRPOC",221,0)
 . I 'LRSPEC S LRERR=$$CREATE^LA7LOG(114,1) Q
"RTN","LRVRPOC",222,0)
 . I 'LRSAMP S LRERR=$$CREATE^LA7LOG(115,1) Q
"RTN","LRVRPOC",223,0)
 . S LRCNT=LRCNT+1,LROT(LRSAMP,LRSPEC,LRCNT)=LRTST
"RTN","LRVRPOC",224,0)
 . I $P(LRZ,"^",4) S LR642=$P(LRZ,"^",4)
"RTN","LRVRPOC",225,0)
 . I 'LRDAA,LROLDIV,$D(^LAB(60,LRTST,8,LROLDIV,0)) S LRDAA=$P(^(0),U,2)
"RTN","LRVRPOC",226,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",227,0)
 I LRDAA<1 S LRDAA=$P(^LRO(68.2,LRLL,10,LRPROF,0),"^",2)
"RTN","LRVRPOC",228,0)
 ;
"RTN","LRVRPOC",229,0)
 ; Check for results to process
"RTN","LRVRPOC",230,0)
 I '$O(LROT(0)) D  Q
"RTN","LRVRPOC",231,0)
 . S LRERR=$$CREATE^LA7LOG(113,1)
"RTN","LRVRPOC",232,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",233,0)
 ;
"RTN","LRVRPOC",234,0)
 ; Setup workload suffix
"RTN","LRVRPOC",235,0)
 I LR642<1 S LR642=LRDFWKLD
"RTN","LRVRPOC",236,0)
 D WKLD^LRVRPOCU(LR642)
"RTN","LRVRPOC",237,0)
 ;
"RTN","LRVRPOC",238,0)
 ; Check if results have datanames/tests on this profile.
"RTN","LRVRPOC",239,0)
 F  S LRDATA=$O(^LAH(LRLL,1,LAIEN,LRDATA)) Q:LRDATA<1  D  Q:LRERR
"RTN","LRVRPOC",240,0)
 . I $P($G(^LAH(LRLL,1,LAIEN,LRDATA)),U)="" Q
"RTN","LRVRPOC",241,0)
 . S LRDATA(LRDATA)=^LAH(LRLL,1,LAIEN,LRDATA)
"RTN","LRVRPOC",242,0)
 . I $P(LRDATA(LRDATA),"^",4)<1 S LRERR=$$CREATE^LA7LOG(111,1) Q
"RTN","LRVRPOC",243,0)
 . S LRTST=+$G(LRVTS(LRDATA))
"RTN","LRVRPOC",244,0)
 . I 'LRTST S LRERR=$$CREATE^LA7LOG(116,1) Q
"RTN","LRVRPOC",245,0)
 . I '$D(^TMP("LR",$J,"VTO",LRTST)) S LRERR=$$CREATE^LA7LOG(118,1) Q
"RTN","LRVRPOC",246,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",247,0)
 ;
"RTN","LRVRPOC",248,0)
 K LRCOM
"RTN","LRVRPOC",249,0)
 S LRNT=$$NOW^XLFDT,LRORDTIM=""
"RTN","LRVRPOC",250,0)
 ;
"RTN","LRVRPOC",251,0)
 ; Setup the order in LRO(69
"RTN","LRVRPOC",252,0)
 S LRNOLABL="" ; Suppress label printing
"RTN","LRVRPOC",253,0)
 D
"RTN","LRVRPOC",254,0)
 . N LRSPEC,LRSAMP,ZTQUEUED
"RTN","LRVRPOC",255,0)
 . S ZTQUEUED=1
"RTN","LRVRPOC",256,0)
 . D ORDER^LROW2,^LRORDST
"RTN","LRVRPOC",257,0)
 ;
"RTN","LRVRPOC",258,0)
 ; Setup LRO(68
"RTN","LRVRPOC",259,0)
 D
"RTN","LRVRPOC",260,0)
 . N LRSPEC,LRSAMP
"RTN","LRVRPOC",261,0)
 . D ^LRWLST
"RTN","LRVRPOC",262,0)
 I '$G(LRAA) D  Q
"RTN","LRVRPOC",263,0)
 . S LRERR=$$CREATE^LA7LOG(109,1)
"RTN","LRVRPOC",264,0)
 . D SENDACK^LRVRPOCU
"RTN","LRVRPOC",265,0)
 ;
"RTN","LRVRPOC",266,0)
 S LRMETH="POC DEVICE"
"RTN","LRVRPOC",267,0)
 I LA76248 S LRMETH=$E($$GET1^DIQ(62.48,LA76248_",",.01),1,10)
"RTN","LRVRPOC",268,0)
 I LRMETH="" S LRMETH=$E($P(LRLL(0),U),1,5)_"(POC)"
"RTN","LRVRPOC",269,0)
 ;
"RTN","LRVRPOC",270,0)
 ; Store POC specimen id in file #63 as ordering site UID.
"RTN","LRVRPOC",271,0)
 S X=$G(^LAH(LRLL,1,LAIEN,.1,"OBR","FID"))
"RTN","LRVRPOC",272,0)
 I $P(X,"^")'="" D
"RTN","LRVRPOC",273,0)
 . N FDA,LA7DIE
"RTN","LRVRPOC",274,0)
 . S FDA(1,63.04,LRIDT_","_LRDFN_",",.342)=$P(X,"^")
"RTN","LRVRPOC",275,0)
 . I $P(X,"^",2) S FDA(1,63.04,LRIDT_","_LRDFN_",",.32)=$P(X,"^",2)
"RTN","LRVRPOC",276,0)
 . D FILE^DIE("","FDA(1)","LA7DIE(1)")
"RTN","LRVRPOC",277,0)
 ;
"RTN","LRVRPOC",278,0)
 ; Store ^LR( data [results]
"RTN","LRVRPOC",279,0)
 S LRVF=0,LRALERT=LROUTINE,LRUSI="POC.5",LRNOW=$$NOW^XLFDT
"RTN","LRVRPOC",280,0)
 M LRSB=LRDATA
"RTN","LRVRPOC",281,0)
 D TEST^LRVR1
"RTN","LRVRPOC",282,0)
 S LRSB=0
"RTN","LRVRPOC",283,0)
 F  S LRSB=$O(LRSB(LRSB)) Q:LRSB<1  D  Q:LRERR
"RTN","LRVRPOC",284,0)
 . I '$G(^TMP("LR",$J,"TMP",LRSB,"P")) S LRERR=$$CREATE^LA7LOG(117,1) Q
"RTN","LRVRPOC",285,0)
 . ; START CHANGE FOR LR*5.2*468
"RTN","LRVRPOC",286,0)
 . S LRTS=$G(^TMP("LR",$J,"TMP",LRSB))
"RTN","LRVRPOC",287,0)
 . ; END CHANGE FOR LR*5.2*468
"RTN","LRVRPOC",288,0)
 . S LRX=$$TMPSB^LRVER1(LRSB),LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVRPOC",289,0)
 . F I=1:1:$L(LRX,"!") I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,"!",I)
"RTN","LRVRPOC",290,0)
 . S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVRPOC",291,0)
 . S LRTS=$G(^TMP("LR",$J,"TMP",LRSB))
"RTN","LRVRPOC",292,0)
 . D V25^LRVER5
"RTN","LRVRPOC",293,0)
 . S LRX=LRNGS,LRY=$P(LRSB(LRSB),U,5)
"RTN","LRVRPOC",294,0)
 . F I=1:1:$L(LRX,U) I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,U,I)
"RTN","LRVRPOC",295,0)
 . S $P(LRSB(LRSB),U,5)=LRY
"RTN","LRVRPOC",296,0)
 . S $P(LRSB(LRSB),U,6)=LRNOW
"RTN","LRVRPOC",297,0)
 . I $P(LRSB(LRSB),U,9)="" S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRVRPOC",298,0)
 . S ^LR(LRDFN,"CH",LRIDT,LRSB)=LRSB(LRSB)
"RTN","LRVRPOC",299,0)
 ;
"RTN","LRVRPOC",300,0)
 I LRERR D SENDACK^LRVRPOCU Q
"RTN","LRVRPOC",301,0)
 ;
"RTN","LRVRPOC",302,0)
 ; Call to set data and comments
"RTN","LRVRPOC",303,0)
 I $O(LRSB(0)) D
"RTN","LRVRPOC",304,0)
 . D LRSBCOM^LRVR4,A3^LRVR3
"RTN","LRVRPOC",305,0)
 . S LRSTORE=LRSTORE+1
"RTN","LRVRPOC",306,0)
 . I $G(LA76248) S LRSTORE(LA76248)=$G(LRSTORE(LA76248))+1
"RTN","LRVRPOC",307,0)
 ;
"RTN","LRVRPOC",308,0)
 ; Send application ack back to POC interface
"RTN","LRVRPOC",309,0)
 D SENDACK^LRVRPOCU
"RTN","LRVRPOC",310,0)
 Q
"SEC","^DIC",66.3,66.3,0,"AUDIT")
@
"SEC","^DIC",66.3,66.3,0,"DD")
@
"SEC","^DIC",66.3,66.3,0,"DEL")
@
"SEC","^DIC",66.3,66.3,0,"LAYGO")
@
"SEC","^DIC",66.3,66.3,0,"RD")

"SEC","^DIC",66.3,66.3,0,"WR")
@
"SEC","^DIC",66.4,66.4,0,"AUDIT")
@
"SEC","^DIC",66.4,66.4,0,"DD")
@
"SEC","^DIC",66.4,66.4,0,"DEL")
@
"SEC","^DIC",66.4,66.4,0,"LAYGO")
@
"SEC","^DIC",66.4,66.4,0,"RD")
@
"SEC","^DIC",66.4,66.4,0,"WR")
@
"UP",60,60.01,-1)
60^1
"UP",60,60.01,0)
60.01
"UP",60,60.28,-1)
60^15
"UP",60,60.28,0)
60.28
"VER")
8.0^22.0
"^DD",60,60,.01,0)
NAME^RFXa^^0;1^K:$L(X)>40!($L(X)<3)!(X'?.ANP) X I $D(X) K:X[""""!(X<0) X
"^DD",60,60,.01,1,0)
^.1
"^DD",60,60,.01,1,1,0)
60^B
"^DD",60,60,.01,1,1,1)
S ^LAB(60,"B",$E(X,1,40),DA)=""
"^DD",60,60,.01,1,1,2)
K ^LAB(60,"B",$E(X,1,40),DA)
"^DD",60,60,.01,1,2,0)
60^AX0^MUMPS
"^DD",60,60,.01,1,2,1)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,.01,1,2,2)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,.01,1,2,"%D",0)
^.101^1^1^3160223^^^^
"^DD",60,60,.01,1,2,"%D",1,0)
Trigger update to CPRS.
"^DD",60,60,.01,1,2,"DT")
3160223
"^DD",60,60,.01,1,3,0)
^^TRIGGER^60^131
"^DD",60,60,.01,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$CTCHK^LRMLED(+DA) I X S X=DIV S Y(1)=$S($D(^LAB(60,D0,14)):^(14),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(60,.01,1,3,1.4)
"^DD",60,60,.01,1,3,1.4)
S DIH=$G(^LAB(60,DIV(0),14)),DIV=X S $P(^(14),U,1)=DIV,DIH=60,DIG=131 D ^DICR
"^DD",60,60,.01,1,3,2)
Q
"^DD",60,60,.01,1,3,"%D",0)
^.101^1^1^3161214^^
"^DD",60,60,.01,1,3,"%D",1,0)
This will populate field 131 creation date when a test is added.
"^DD",60,60,.01,1,3,"CREATE CONDITION")
S X=$$CTCHK^LRMLED(+DA)
"^DD",60,60,.01,1,3,"CREATE VALUE")
TODAY
"^DD",60,60,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",60,60,.01,1,3,"DT")
3160728
"^DD",60,60,.01,1,3,"FIELD")
CREATION DATE
"^DD",60,60,.01,3)
ANSWER MUST BE 3-40 CHARACTERS IN LENGTH AND NOT ALREADY A SYNONYM
"^DD",60,60,.01,21,0)
^^1^1^2930823^^^^
"^DD",60,60,.01,21,1,0)
This is the name of the Laboratory test you are defining in this entry.
"^DD",60,60,.01,"AUDIT")
y
"^DD",60,60,.01,"DEL",1,0)
I 1
"^DD",60,60,.01,"DT")
3160728
"^DD",60,60,3,0)
TYPE^RSa^I:INPUT (CAN BE ORDERED);O:OUTPUT (CAN BE DISPLAYED);B:BOTH;N:NEITHER;^0;3^Q
"^DD",60,60,3,1,0)
^.1^^-1
"^DD",60,60,3,1,1,0)
60^AX1^MUMPS
"^DD",60,60,3,1,1,1)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,3,1,1,2)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,3,1,1,"%D",0)
^^1^1^2971118^^^
"^DD",60,60,3,1,1,"%D",1,0)
Trigger update to CPRS.
"^DD",60,60,3,1,1,"DT")
2971118
"^DD",60,60,3,3)
Enter The Method (Type) for how the test is to be treated.
"^DD",60,60,3,21,0)
^.001^4^4^3161216^^^^
"^DD",60,60,3,21,1,0)
I == (Input) test can be ordered but not displayed by the computer.
"^DD",60,60,3,21,2,0)
O == (Output) test can be displayed but never ordered by itself.
"^DD",60,60,3,21,3,0)
B == (Both) test can be ordered and displayed.
"^DD",60,60,3,21,4,0)
N == (Neither) test is internal to lab only.
"^DD",60,60,3,"AUDIT")
y
"^DD",60,60,3,"DT")
3161216
"^DD",60,60,100,0)
SITE/SPECIMEN^60.01P^^1;0
"^DD",60,60,100,21,0)
^.001^4^4^3161215^^^^
"^DD",60,60,100,21,1,0)
Processing specimen type for each entry in the Lab Collection Sample field.
"^DD",60,60,100,21,2,0)
Example:  Sodium can be determined on serum and urine.  Entries in 
"^DD",60,60,100,21,3,0)
this field are not appropriate (or even used) if the test is a panel of
"^DD",60,60,100,21,4,0)
 tests.
"^DD",60,60,100,"DT")
3160612
"^DD",60,60,131,0)
CREATION DATE^D^^14;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",60,60,131,1,0)
^.1^^0
"^DD",60,60,131,3)
Enter the date this test was created and submitted to NTRT.
"^DD",60,60,131,5,1,0)
60^.01^3
"^DD",60,60,131,21,0)
^.001^1^1^3161208^^^^
"^DD",60,60,131,21,1,0)
The creation date of the test.
"^DD",60,60,131,"DT")
3160729
"^DD",60,60,132,0)
TEST INACTIVE^SI^Y:YES;N:NO;^14;2^Q
"^DD",60,60,132,3)
Enter Y if the test is inactive.
"^DD",60,60,132,5,1,0)
60^133^2
"^DD",60,60,132,9)
^
"^DD",60,60,132,21,0)
^.001^1^1^3160728^^
"^DD",60,60,132,21,1,0)
This field indicates if a test is inactive. If it is Y the test is inactive.
"^DD",60,60,132,"DT")
3160310
"^DD",60,60,133,0)
TEST INACTIVE DATE^D^^14;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",60,60,133,1,0)
^.1^^-1
"^DD",60,60,133,1,2,0)
^^TRIGGER^60^132
"^DD",60,60,133,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(60,D0,14)):^(14),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="Y" S DIH=$G(^LAB(60,DIV(0),14)),DIV=X S $P(^(14),U,2)=DIV,DIH=60,DIG=132 D ^DICR
"^DD",60,60,133,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(60,D0,14)):^(14),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^LAB(60,DIV(0),14)),DIV=X S $P(^(14),U,2)=DIV,DIH=60,DIG=132 D ^DICR
"^DD",60,60,133,1,2,"%D",0)
^^1^1^3160315^
"^DD",60,60,133,1,2,"%D",1,0)
If there is a test inactivation date then set field 132 to Y for yes.
"^DD",60,60,133,1,2,"CREATE VALUE")
"Y"
"^DD",60,60,133,1,2,"DELETE VALUE")
@
"^DD",60,60,133,1,2,"DT")
3160315
"^DD",60,60,133,1,2,"FIELD")
TEST INACTIVE
"^DD",60,60,133,3)
Enter the Date the Test was inactivated.
"^DD",60,60,133,21,0)
^.001^1^1^3160729^^^
"^DD",60,60,133,21,1,0)
This is the date that a Test was determined to be inactive.
"^DD",60,60,133,"DT")
3160729
"^DD",60,60,140,0)
AUDIT DATE/TIME^60.28D^^15;0
"^DD",60,60,140,21,0)
^.001^1^1^3161215^^
"^DD",60,60,140,21,1,0)
This is the audit multiple for changes to select fields.
"^DD",60,60.01,0)
SITE/SPECIMEN SUB-FIELD^NL^35^23
"^DD",60,60.01,0,"NM","SITE/SPECIMEN")

"^DD",60,60.01,.01,0)
SITE/SPECIMEN^MP61'Xa^LAB(61,^0;1^D IT600101^LRXREF1(.DA,.DINUM,.X)
"^DD",60,60.01,.01,1,0)
^.1^^-1
"^DD",60,60.01,.01,1,1,0)
60.01^B
"^DD",60,60.01,.01,1,1,1)
S ^LAB(60,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",60,60.01,.01,1,1,2)
K ^LAB(60,DA(1),1,"B",$E(X,1,30),DA)
"^DD",60,60.01,.01,3)
To enter a Site/specimen, a Data name must be entered and Site/specimen must be active.
"^DD",60,60.01,.01,21,0)
^.001^3^3^3160315^^^^
"^DD",60,60.01,.01,21,1,0)
Processing specimen type for each entry in the Lab Collection Sample field.
"^DD",60,60.01,.01,21,2,0)
Example:  Sodium can be determined on serum and urine.
"^DD",60,60.01,.01,21,3,0)
To enter a Site/specimen, a Data name must be entered.
"^DD",60,60.01,.01,"AUDIT")
y
"^DD",60,60.01,.01,"DT")
3160908
"^DD",60,60.01,1,0)
REFERENCE LOW^FXa^^0;2^K:$L(X)>50!($E(X,1)?1A)!(X["^") X I $D(X) S X="S X="_X D ^DIM Q:'$D(X)  S X=$P(X,"=",2,99)
"^DD",60,60.01,1,3)
ANSWER MUST BE 0-50 CHARACTERS IN LENGTH (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,1,21,0)
^.001^16^16^3070301^^
"^DD",60,60.01,1,21,1,0)
This is the user entered reference low value for this test.
"^DD",60,60.01,1,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,1,21,3,0)
        low : 10
"^DD",60,60.01,1,21,4,0)
        high : 50
"^DD",60,60.01,1,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,1,21,6,0)
manner:
"^DD",60,60.01,1,21,7,0)
        low: 10
"^DD",60,60.01,1,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,1,21,9,0)
this manner:
"^DD",60,60.01,1,21,10,0)
        NORMAL
"^DD",60,60.01,1,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,1,21,12,0)
manner:
"^DD",60,60.01,1,21,13,0)
        high: 50
"^DD",60,60.01,1,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,1,21,15,0)
this manner:
"^DD",60,60.01,1,21,16,0)
        >1000
"^DD",60,60.01,1,"AUDIT")
y
"^DD",60,60.01,1,"DT")
3160410
"^DD",60,60.01,2,0)
REFERENCE HIGH^FXa^^0;3^K:$L(X)>50!($E(X,1)?1A)!(X["^") X I $D(X) S X="S X="_X D ^DIM Q:'$D(X)  S X=$P(X,"=",2,99)
"^DD",60,60.01,2,3)
ANSWER MUST BE 0-50 CHARACTERS IN LENGTH (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,2,21,0)
^^16^16^3070124^
"^DD",60,60.01,2,21,1,0)
This is the user entered reference high value for this test.
"^DD",60,60.01,2,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,2,21,3,0)
        low : 10
"^DD",60,60.01,2,21,4,0)
        high : 50
"^DD",60,60.01,2,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,2,21,6,0)
manner: 
"^DD",60,60.01,2,21,7,0)
        low: 10
"^DD",60,60.01,2,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,2,21,9,0)
this manner:
"^DD",60,60.01,2,21,10,0)
        NORMAL
"^DD",60,60.01,2,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,2,21,12,0)
manner:
"^DD",60,60.01,2,21,13,0)
        high: 50
"^DD",60,60.01,2,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,2,21,15,0)
this manner:
"^DD",60,60.01,2,21,16,0)
        >1000
"^DD",60,60.01,2,"AUDIT")
y
"^DD",60,60.01,2,"DT")
3160410
"^DD",60,60.01,3,0)
CRITICAL LOW^FX^^0;4^K:$L(X)>50!($E(X,1)?1A)!(X["^") X I $D(X) S X="S X="_X D ^DIM Q:'$D(X)  S X=$P(X,"=",2,99)
"^DD",60,60.01,3,3)
ANSWER MUST BE 0-50 CHARACTERS IN LENGTH (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,3,21,0)
^^17^17^3070124^
"^DD",60,60.01,3,21,1,0)
This is the user entered critical low value for this test.
"^DD",60,60.01,3,21,2,0)
Used to flag results.
"^DD",60,60.01,3,21,3,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,3,21,4,0)
        low : 10
"^DD",60,60.01,3,21,5,0)
        high : 50
"^DD",60,60.01,3,21,6,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,3,21,7,0)
manner: 
"^DD",60,60.01,3,21,8,0)
        low: 10
"^DD",60,60.01,3,21,9,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,3,21,10,0)
this manner:
"^DD",60,60.01,3,21,11,0)
        NORMAL
"^DD",60,60.01,3,21,12,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,3,21,13,0)
manner:
"^DD",60,60.01,3,21,14,0)
        high: 50
"^DD",60,60.01,3,21,15,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,3,21,16,0)
this manner:
"^DD",60,60.01,3,21,17,0)
        >1000
"^DD",60,60.01,3,"DT")
3160410
"^DD",60,60.01,4,0)
CRITICAL HIGH^FX^^0;5^K:$L(X)>50!($E(X,1)?1A)!(X["^") X I $D(X) S X="S X="_X D ^DIM Q:'$D(X)  S X=$P(X,"=",2,99)
"^DD",60,60.01,4,3)
ANSWER MUST BE 0-50 CHARACTERS IN LENGTH (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,4,21,0)
^^16^16^3070124^
"^DD",60,60.01,4,21,1,0)
This is the user entered critical high value of this test.  Used to flag results.
"^DD",60,60.01,4,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,4,21,3,0)
        low : 10
"^DD",60,60.01,4,21,4,0)
        high : 50
"^DD",60,60.01,4,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,4,21,6,0)
manner: 
"^DD",60,60.01,4,21,7,0)
        low: 10
"^DD",60,60.01,4,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,4,21,9,0)
this manner:
"^DD",60,60.01,4,21,10,0)
        NORMAL
"^DD",60,60.01,4,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,4,21,12,0)
manner:
"^DD",60,60.01,4,21,13,0)
        high: 50
"^DD",60,60.01,4,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,4,21,15,0)
this manner:
"^DD",60,60.01,4,21,16,0)
        >1000
"^DD",60,60.01,4,"DT")
3160410
"^DD",60,60.01,6,0)
UNITS^F^^0;7^K:$L(X)>10!($L(X)<1) X
"^DD",60,60.01,6,1,0)
^.1^^0
"^DD",60,60.01,6,3)
ANSWER MUST BE 2-10 CHARACTERS IN LENGTH
"^DD",60,60.01,6,21,0)
^^2^2^2841031^^
"^DD",60,60.01,6,21,1,0)
UNITS represents such things as grams, number of items per cubic millimeter,
"^DD",60,60.01,6,21,2,0)
or microliter.
"^DD",60,60.01,6,"DT")
3160410
"^DD",60,60.01,7,0)
TYPE OF DELTA CHECK^P62.1^LAB(62.1,^0;8^Q
"^DD",60,60.01,7,3)

"^DD",60,60.01,7,21,0)
^^1^1^2841031^
"^DD",60,60.01,7,21,1,0)
Points to DELTA CHECK file.
"^DD",60,60.01,7,"DT")
3160410
"^DD",60,60.01,8,0)
DELTA VALUE^F^^0;9^K:$L(X)>7!($L(X)<1) X
"^DD",60,60.01,8,3)
ANSWER MUST BE 1-7 CHARACTERS IN LENGTH
"^DD",60,60.01,8,21,0)
^^1^1^2841031^^
"^DD",60,60.01,8,21,1,0)
DELTA VALUE is the value that is passed to the Delta Check Code.
"^DD",60,60.01,8,"DT")
3160410
"^DD",60,60.01,9,0)
DEFAULT VALUE^FX^^0;10^N LRX S LRX=U_$P(^LAB(60,DA(1),0),U,12)_"0)" K:'$D(@LRX) X Q:'$D(X)  S LRX=@LRX X:$P(LRX,U,2)'["S" $P(LRX,U,5,99) Q:'$D(X)!($P(LRX,U,2)'["S")  S LRX=";"_$P(LRX,U,3) K:'(LRX[(";"_X_":")) X
"^DD",60,60.01,9,3)
ANSWER MUST MATCH APPROPRIATE INPUT IN 'LAB DATA' FILE
"^DD",60,60.01,9,4)
N LRXDP S LRXDP=$P(^LAB(60,D0,0),U,12) I LRXDP'="" S LRXDP=U_LRXDP_"0)" I $D(@LRXDP) S LRXDP=@LRXDP D:$D(^(3)) EN^DDIOL(^(3)) D:$P(LRXDP,U,2)["S" LRSET^LRVER5
"^DD",60,60.01,9,21,0)
^^2^2^2841031^^^^
"^DD",60,60.01,9,21,1,0)
Leave blank or enter the most common (say, >80% of the time) response for
"^DD",60,60.01,9,21,2,0)
the test.
"^DD",60,60.01,9,"DT")
3160410
"^DD",60,60.01,9.2,0)
THERAPEUTIC LOW^FX^^0;11^K:$L(X)>30!($L(X)<1)!(X["^") X I $D(X) S X="S X="_X D ^DIM I $D(X) S X=$E(X,5,256)
"^DD",60,60.01,9.2,3)
ENTER LOW END OF THERAPEUTIC RANGE (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,9.2,21,0)
^^16^16^3070124^
"^DD",60,60.01,9.2,21,1,0)
This is the low end value of the therapeutic range.  Used to flag results.
"^DD",60,60.01,9.2,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,9.2,21,3,0)
        low : 10
"^DD",60,60.01,9.2,21,4,0)
        high : 50
"^DD",60,60.01,9.2,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,9.2,21,6,0)
manner: 
"^DD",60,60.01,9.2,21,7,0)
        low: 10
"^DD",60,60.01,9.2,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,9.2,21,9,0)
this manner:
"^DD",60,60.01,9.2,21,10,0)
        NORMAL
"^DD",60,60.01,9.2,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,9.2,21,12,0)
manner:
"^DD",60,60.01,9.2,21,13,0)
        high: 50
"^DD",60,60.01,9.2,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,9.2,21,15,0)
this manner:
"^DD",60,60.01,9.2,21,16,0)
        >1000
"^DD",60,60.01,9.2,"DT")
3160410
"^DD",60,60.01,9.3,0)
THERAPEUTIC HIGH^FX^^0;12^K:$L(X)>30!($L(X)<1)!(X["^") X I $D(X) S X="S X="_X D ^DIM I $D(X) S X=$E(X,5,256)
"^DD",60,60.01,9.3,3)
ENTER HIGH END OF THERAPEUTIC RANGE (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,9.3,21,0)
^^16^16^3070124^
"^DD",60,60.01,9.3,21,1,0)
This is the high end value of the therapeutic range.  Used to flag results.
"^DD",60,60.01,9.3,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,9.3,21,3,0)
        low : 10
"^DD",60,60.01,9.3,21,4,0)
        high : 50
"^DD",60,60.01,9.3,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,9.3,21,6,0)
manner: 
"^DD",60,60.01,9.3,21,7,0)
        low: 10
"^DD",60,60.01,9.3,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,9.3,21,9,0)
this manner:
"^DD",60,60.01,9.3,21,10,0)
        NORMAL
"^DD",60,60.01,9.3,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,9.3,21,12,0)
manner:
"^DD",60,60.01,9.3,21,13,0)
        high: 50
"^DD",60,60.01,9.3,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,9.3,21,15,0)
this manner:
"^DD",60,60.01,9.3,21,16,0)
        >1000
"^DD",60,60.01,9.3,"DT")
3160410
"^DD",60,60.01,13,0)
USE FOR REFERENCE TESTING^S^0:NO;1:YES;^.1;1^Q
"^DD",60,60.01,13,3)
Should reference values/units for this specimen type also be used for reference lab results.
"^DD",60,60.01,13,21,0)
^.001^3^3^3030212^^
"^DD",60,60.01,13,21,1,0)
Indicates if the reference ranges and units associated with this
"^DD",60,60.01,13,21,2,0)
specimen type can be used when manually entering results of testing
"^DD",60,60.01,13,21,3,0)
performed at another laboratory.
"^DD",60,60.01,13,"DT")
3160410
"^DD",60,60.01,30,0)
MLTF NUMBER^*P66.3'X^LRMLTF(^6;1^S DIC("S")="I '$$SCREEN^XTID(66.3,.01,+Y_"","")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",60,60.01,30,1,0)
^.1
"^DD",60,60.01,30,1,1,0)
^^TRIGGER^60.01^31
"^DD",60,60.01,30,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,1,D1,6)):^(6),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="" I +DIV>0 S X=$$GET1^DIQ(66.3,DIV_",",.01) X ^DD(60.01,30,1,1,1.4)
"^DD",60,60.01,30,1,1,1.4)
S DIH=$G(^LAB(60,DIV(0),1,DIV(1),6)),DIV=X S $P(^(6),U,2)=DIV,DIH=60.01,DIG=31 D ^DICR
"^DD",60,60.01,30,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,1,D1,6)):^(6),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^LAB(60,DIV(0),1,DIV(1),6)),DIV=X S $P(^(6),U,2)=DIV,DIH=60.01,DIG=31 D ^DICR
"^DD",60,60.01,30,1,1,"%D",0)
^.101^1^1^3160912^^
"^DD",60,60.01,30,1,1,"%D",1,0)
This picks up the MLTF Name for the MLTF Number and saves it in the MLTF NAME.
"^DD",60,60.01,30,1,1,"CREATE VALUE")
S X="" I +DIV>0 S X=$$GET1^DIQ(66.3,DIV_",",.01)
"^DD",60,60.01,30,1,1,"DELETE VALUE")
@
"^DD",60,60.01,30,1,1,"DT")
3160728
"^DD",60,60.01,30,1,1,"FIELD")
MLTF NAME
"^DD",60,60.01,30,3)
Enter a partial match for the Master Lab Test Name and select an Item displayed or '^' to quit.
"^DD",60,60.01,30,12)
Inactive MLTF items will not be selectable.
"^DD",60,60.01,30,12.1)
S DIC("S")="I '$$SCREEN^XTID(66.3,.01,+Y_"","")"
"^DD",60,60.01,30,21,0)
^.001^1^1^3160728^^^^
"^DD",60,60.01,30,21,1,0)
This is the MLTF pointer to 66.3.
"^DD",60,60.01,30,"DT")
3160802
"^DD",60,60.01,31,0)
MLTF NAME^F^^6;2^K:$L(X)>120!($L(X)<1) X
"^DD",60,60.01,31,3)
Answer must be 1-120 characters in length.
"^DD",60,60.01,31,5,1,0)
60.01^30^1
"^DD",60,60.01,31,9)
^
"^DD",60,60.01,31,21,0)
^.001^1^1^3160612^^^^
"^DD",60,60.01,31,21,1,0)
This is the MLTF Test Name from 66.3.
"^DD",60,60.01,31,"DT")
3160608
"^DD",60,60.01,32,0)
RESULT/SPECIMEN INACTIVE^SI^Y:YES;N:NO;^5;1^Q
"^DD",60,60.01,32,3)
Enter Y if specimen is inactive, N if the specimen is active.
"^DD",60,60.01,32,5,1,0)
60.01^33^2
"^DD",60,60.01,32,9)
^
"^DD",60,60.01,32,21,0)
^.001^1^1^3160728^^^^
"^DD",60,60.01,32,21,1,0)
This field indicates if the Specimen is inactive.
"^DD",60,60.01,32,"DT")
3160310
"^DD",60,60.01,33,0)
RESULT/SPECIMEN INACTIVE DATE^D^^5;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",60,60.01,33,1,0)
^.1^^-1
"^DD",60,60.01,33,1,2,0)
^^TRIGGER^60.01^32
"^DD",60,60.01,33,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,1,D1,5)):^(5),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X="Y" X ^DD(60.01,33,1,2,1.4)
"^DD",60,60.01,33,1,2,1.4)
S DIH=$G(^LAB(60,DIV(0),1,DIV(1),5)),DIV=X S $P(^(5),U,1)=DIV,DIH=60.01,DIG=32 D ^DICR
"^DD",60,60.01,33,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,1,D1,5)):^(5),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" S DIH=$G(^LAB(60,DIV(0),1,DIV(1),5)),DIV=X S $P(^(5),U,1)=DIV,DIH=60.01,DIG=32 D ^DICR
"^DD",60,60.01,33,1,2,"%D",0)
^^1^1^3160315^
"^DD",60,60.01,33,1,2,"%D",1,0)
if there is a inactivation date set field 32 to Y for yes.
"^DD",60,60.01,33,1,2,"CREATE VALUE")
"Y"
"^DD",60,60.01,33,1,2,"DELETE VALUE")
@
"^DD",60,60.01,33,1,2,"DT")
3160315
"^DD",60,60.01,33,1,2,"FIELD")
RESULT/SPECIMEN INACTIVE
"^DD",60,60.01,33,3)
Enter the date that the Specimen was determined to be inactive.
"^DD",60,60.01,33,21,0)
^.001^1^1^3160729^^^^
"^DD",60,60.01,33,21,1,0)
This is the date that a Specimen is determined to be inactive.
"^DD",60,60.01,33,"DT")
3160729
"^DD",60,60.01,34,0)
EXCEPTION FLAG^SI^Y:YES;N:NO;^5;3^Q
"^DD",60,60.01,34,1,0)
^.1^^0
"^DD",60,60.01,34,3)
Enter Y if the specimen has been sent to NTRT
"^DD",60,60.01,34,8.5)
^
"^DD",60,60.01,34,9)
^
"^DD",60,60.01,34,21,0)
^^1^1^3160310^
"^DD",60,60.01,34,21,1,0)
If the Exception Flag is Y the Test/Specimen has been sent to NTRT for evaluation.
"^DD",60,60.01,34,"DT")
3160610
"^DD",60,60.01,35,0)
SPECIMEN CREATE DATE^D^^5;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",60,60.01,35,1,0)
^.1^^0
"^DD",60,60.01,35,3)
Enter the date that the Specimen was created.
"^DD",60,60.01,35,21,0)
^.001^1^1^3160729^^^
"^DD",60,60.01,35,21,1,0)
The date the specimen was created.
"^DD",60,60.01,35,"DT")
3160729
"^DD",60,60.28,0)
AUDIT DATE/TIME SUB-FIELD^^.06^6
"^DD",60,60.28,0,"DT")
3161214
"^DD",60,60.28,0,"IX","B",60.28,.01)

"^DD",60,60.28,0,"NM","AUDIT DATE/TIME")

"^DD",60,60.28,0,"UP")
60
"^DD",60,60.28,.01,0)
AUDIT DATE/TIME^D^^0;1^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",60,60.28,.01,1,0)
^.1
"^DD",60,60.28,.01,1,1,0)
60.28^B
"^DD",60,60.28,.01,1,1,1)
S ^LAB(60,DA(1),15,"B",$E(X,1,30),DA)=""
"^DD",60,60.28,.01,1,1,2)
K ^LAB(60,DA(1),15,"B",$E(X,1,30),DA)
"^DD",60,60.28,.01,3)
Enter the date and time that the edit occurred.
"^DD",60,60.28,.01,21,0)
^.001^1^1^3161215^^^
"^DD",60,60.28,.01,21,1,0)
This is date/time that the audit change was saved.
"^DD",60,60.28,.01,"DT")
3161214
"^DD",60,60.28,.02,0)
EDIT USER^P200'^VA(200,^0;2^Q
"^DD",60,60.28,.02,3)
Enter the user who performed the edits.
"^DD",60,60.28,.02,21,0)
^^1^1^3161214^
"^DD",60,60.28,.02,21,1,0)
The user who edited the field.
"^DD",60,60.28,.02,"DT")
3161214
"^DD",60,60.28,.03,0)
EDIT FIELD^S^M:MLTF VUID;C:TEST CREATION DATE;T:TEST INACTIVE DATE;R:SPECIMEN INACTIVE DATE;E:NTRT EXCEPTION FLAG;Y:TEST TYPE;S:SPECIMEN CREATION DATE;^0;3^Q
"^DD",60,60.28,.03,3)
Select from the list the field that was edited.
"^DD",60,60.28,.03,21,0)
^^2^2^3161214^
"^DD",60,60.28,.03,21,1,0)
These are the fields that have the changes
"^DD",60,60.28,.03,21,2,0)
tracked for NTRT.
"^DD",60,60.28,.03,"DT")
3161214
"^DD",60,60.28,.04,0)
EDIT OLD VALUE^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",60,60.28,.04,3)
Enter the value of the field before the edit was done, from 1 to 40 characters.
"^DD",60,60.28,.04,21,0)
^^2^2^3161214^
"^DD",60,60.28,.04,21,1,0)
This is the original value (old) before the
"^DD",60,60.28,.04,21,2,0)
edit was done.
"^DD",60,60.28,.04,"DT")
3161214
"^DD",60,60.28,.05,0)
EDIT NEW VALUE^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",60,60.28,.05,3)
Enter the new value of the field that was edited, from 1 to 40 characters.
"^DD",60,60.28,.05,21,0)
^^2^2^3161214^
"^DD",60,60.28,.05,21,1,0)
This is the (New) value of the field after the
"^DD",60,60.28,.05,21,2,0)
edit was performed.
"^DD",60,60.28,.05,"DT")
3161214
"^DD",60,60.28,.06,0)
SPECIMEN NUMBER^NJ6,0^^0;6^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",60,60.28,.06,3)
Type a number between 0 and 999999, 0 decimal digits.
"^DD",60,60.28,.06,21,0)
^^2^2^3161214^
"^DD",60,60.28,.06,21,1,0)
This is the internal IEN for the Specimen that
"^DD",60,60.28,.06,21,2,0)
was edited.
"^DD",60,60.28,.06,"DT")
3161214
"^DD",66.3,66.3,0)
FIELD^^99.991^13
"^DD",66.3,66.3,0,"DDA")
Y
"^DD",66.3,66.3,0,"DT")
3160420
"^DD",66.3,66.3,0,"ID",.04)
W:$D(^(2)) "   ",$P(^(2),U,2)
"^DD",66.3,66.3,0,"ID",.08)
W:$D(^(3)) "   ",$P(^(3),U,2)
"^DD",66.3,66.3,0,"ID",1)
W:$D(^(3)) "   ",$P(^(3),U,4)
"^DD",66.3,66.3,0,"IX","AREPLACETERM",66.3,99.97)

"^DD",66.3,66.3,0,"IX","AVUID",66.3,99.99)

"^DD",66.3,66.3,0,"IX","B",66.3,.01)

"^DD",66.3,66.3,0,"IX","B",66.3,.02)

"^DD",66.3,66.3,0,"NM","MASTER LABORATORY TEST")

"^DD",66.3,66.3,0,"PT",60.01,30)

"^DD",66.3,66.3,0,"PT",66.3,99.97)

"^DD",66.3,66.3,0,"VRPK")
LR
"^DD",66.3,66.3,.01,0)
LAB TEST NAME^RFa^^0;1^K:$L(X)>120!($L(X)<1) X
"^DD",66.3,66.3,.01,1,0)
^.1^^-1
"^DD",66.3,66.3,.01,1,1,0)
66.3^B
"^DD",66.3,66.3,.01,1,1,1)
S ^LRMLTF("B",$E(X,1,30),DA)=""
"^DD",66.3,66.3,.01,1,1,2)
K ^LRMLTF("B",$E(X,1,30),DA)
"^DD",66.3,66.3,.01,3)
Answer must be 1-120 characters in length.
"^DD",66.3,66.3,.01,7.5)
I $G(DIC(0))["L",'$D(XUMF) K X D EN^DDIOL("Entries must be edited via the Master File Server (MFS).","","!?5,$C(7)")
"^DD",66.3,66.3,.01,9)
^
"^DD",66.3,66.3,.01,21,0)
^.001^3^3^3160421^^^
"^DD",66.3,66.3,.01,21,1,0)
This is the National Master Laboratory Test file (MLTF)
"^DD",66.3,66.3,.01,21,2,0)
 for associating lab tests with LOINC Codes
"^DD",66.3,66.3,.01,21,3,0)
and should not be edited.
"^DD",66.3,66.3,.01,"AUDIT")
y
"^DD",66.3,66.3,.01,"DEL",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",66.3,66.3,.01,"DT")
3160912
"^DD",66.3,66.3,.01,"LAYGO",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be added via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",66.3,66.3,.02,0)
ALTERNATE TEST NAME^Fa^^1;1^K:$L(X)>80!($L(X)<1) X
"^DD",66.3,66.3,.02,1,0)
^.1^^-1
"^DD",66.3,66.3,.02,1,1,0)
66.3^B^MNEMONIC
"^DD",66.3,66.3,.02,1,1,1)
S:'$D(^LRMLTF("B",$E(X,1,30),DA)) ^(DA)=1
"^DD",66.3,66.3,.02,1,1,2)
I $D(^LRMLTF("B",$E(X,1,30),DA)),^(DA) K ^(DA)
"^DD",66.3,66.3,.02,1,1,"%D",0)
^.101^1^1^3160421^^^^
"^DD",66.3,66.3,.02,1,1,"%D",1,0)
This is to assist the user when looking up laboratory test names.
"^DD",66.3,66.3,.02,1,1,"DT")
3160224
"^DD",66.3,66.3,.02,3)
Answer must be 1-80 characters in length.
"^DD",66.3,66.3,.02,9)
^
"^DD",66.3,66.3,.02,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,.02,21,1,0)
This is the 'short name' for the Master Laboratory Test file.
"^DD",66.3,66.3,.02,"AUDIT")
y
"^DD",66.3,66.3,.02,"DT")
3160420
"^DD",66.3,66.3,.04,0)
LOINC CODE^RFa^^2;2^K:$L(X)>15!($L(X)<5) X
"^DD",66.3,66.3,.04,3)
Answer must be 5-15 characters in length.
"^DD",66.3,66.3,.04,9)
^
"^DD",66.3,66.3,.04,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,.04,21,1,0)
This is the LOINC code that will be associated to the lab test name and VUID.
"^DD",66.3,66.3,.04,"AUDIT")
y
"^DD",66.3,66.3,.04,"DT")
3160420
"^DD",66.3,66.3,.05,0)
COMPONENT^RFa^^2;3^K:$L(X)>40!($L(X)<1) X
"^DD",66.3,66.3,.05,3)
Answer must be 1-40 characters in length.
"^DD",66.3,66.3,.05,9)
^
"^DD",66.3,66.3,.05,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,.05,21,1,0)
This is the Lab COMPONENT value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.05,"AUDIT")
y
"^DD",66.3,66.3,.05,"DT")
3160420
"^DD",66.3,66.3,.06,0)
PROPERTY^RFa^^2;4^K:$L(X)>40!($L(X)<1) X
"^DD",66.3,66.3,.06,3)
Answer must be 1-40 characters in length.
"^DD",66.3,66.3,.06,9)
^
"^DD",66.3,66.3,.06,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,.06,21,1,0)
This is the Lab PROPERTY value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.06,"AUDIT")
y
"^DD",66.3,66.3,.06,"DT")
3160420
"^DD",66.3,66.3,.07,0)
TIME ASPECT^RFa^^3;1^K:$L(X)>40!($L(X)<1) X
"^DD",66.3,66.3,.07,3)
Answer must be 1-40 characters in length.
"^DD",66.3,66.3,.07,9)
^
"^DD",66.3,66.3,.07,21,0)
^.001^1^1^3160421^^^
"^DD",66.3,66.3,.07,21,1,0)
This is the Lab TIME ASPECT value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.07,"AUDIT")
y
"^DD",66.3,66.3,.07,"DT")
3160420
"^DD",66.3,66.3,.08,0)
SPECIMEN^RFa^^3;2^K:$L(X)>40!($L(X)<1) X
"^DD",66.3,66.3,.08,3)
Answer must be 1-40 characters in length.
"^DD",66.3,66.3,.08,9)
^
"^DD",66.3,66.3,.08,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,.08,21,1,0)
This is the Lab SPECIMEN (site/specimen) value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.08,"AUDIT")
y
"^DD",66.3,66.3,.08,"DT")
3160420
"^DD",66.3,66.3,.09,0)
SCALE^RFa^^3;3^K:$L(X)>40!($L(X)<1) X
"^DD",66.3,66.3,.09,3)
Answer must be 1-40 characters in length.
"^DD",66.3,66.3,.09,9)
^
"^DD",66.3,66.3,.09,21,0)
^.001^1^1^3160421^^^
"^DD",66.3,66.3,.09,21,1,0)
This is the Lab SCALE value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.09,"AUDIT")
y
"^DD",66.3,66.3,.09,"DT")
3160420
"^DD",66.3,66.3,1,0)
METHOD^Fa^^3;4^K:$L(X)>40!($L(X)<1) X
"^DD",66.3,66.3,1,3)
Answer must be 1-40 characters in length.
"^DD",66.3,66.3,1,9)
^
"^DD",66.3,66.3,1,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,1,21,1,0)
This is the Lab METHOD value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,1,"AUDIT")
y
"^DD",66.3,66.3,1,"DT")
3160420
"^DD",66.3,66.3,99.97,0)
REPLACED BY VHA STANDARD TERM^P66.3'Ia^LRMLTF(^VUID;3^Q
"^DD",66.3,66.3,99.97,1,0)
^.1
"^DD",66.3,66.3,99.97,1,1,0)
66.3^AREPLACETERM
"^DD",66.3,66.3,99.97,1,1,1)
S ^LRMLTF("AREPLACETERM",$E(X,1,30),DA)=""
"^DD",66.3,66.3,99.97,1,1,2)
K ^LRMLTF("AREPLACETERM",$E(X,1,30),DA)
"^DD",66.3,66.3,99.97,1,1,"%D",0)
^.101^1^1^3160421^^
"^DD",66.3,66.3,99.97,1,1,"%D",1,0)
This cross-reference can be used to identify the replacement entries associated with a Term/Concept.
"^DD",66.3,66.3,99.97,1,1,"DT")
3160310
"^DD",66.3,66.3,99.97,3)
Enter the pointer to the VHA Standard Term
"^DD",66.3,66.3,99.97,9)
^
"^DD",66.3,66.3,99.97,21,0)
^.001^2^2^3160421^^^
"^DD",66.3,66.3,99.97,21,1,0)
This field is populated when one Term/Concept replaces another Term/Concept. This field is controlled by standardization and should only be changed by standardization processes. This field contains a pointer to a VHA standard term that
"^DD",66.3,66.3,99.97,21,2,0)
replaces this entry.
"^DD",66.3,66.3,99.97,"AUDIT")
y
"^DD",66.3,66.3,99.97,"DT")
3160420
"^DD",66.3,66.3,99.98,0)
MASTER ENTRY FOR VUID^RSIa^0:NO;1:YES;^VUID;2^Q
"^DD",66.3,66.3,99.98,3)
Enter 1 if this is the master entry
"^DD",66.3,66.3,99.98,9)
^
"^DD",66.3,66.3,99.98,21,0)
^.001^1^1^3160421^^
"^DD",66.3,66.3,99.98,21,1,0)
This field identifies the Master entry for a VUID associated with a Term/Concept.
"^DD",66.3,66.3,99.98,"AUDIT")
y
"^DD",66.3,66.3,99.98,"DT")
3160420
"^DD",66.3,66.3,99.99,0)
VUID^RFXIa^^VUID;1^K:$L(X)>20!($L(X)<1)!'(X?1.20N) X
"^DD",66.3,66.3,99.99,1,0)
^.1
"^DD",66.3,66.3,99.99,1,1,0)
66.3^AVUID
"^DD",66.3,66.3,99.99,1,1,1)
S ^LRMLTF("AVUID",$E(X,1,30),DA)=""
"^DD",66.3,66.3,99.99,1,1,2)
K ^LRMLTF("AVUID",$E(X,1,30),DA)
"^DD",66.3,66.3,99.99,1,1,"%D",0)
^.101^1^1^3160421^^
"^DD",66.3,66.3,99.99,1,1,"%D",1,0)
This cross-reference is by VUID.
"^DD",66.3,66.3,99.99,1,1,"DT")
3160310
"^DD",66.3,66.3,99.99,3)
Answer must be 1-20 digits in length, only the first 19 are used.
"^DD",66.3,66.3,99.99,9)
^
"^DD",66.3,66.3,99.99,21,0)
^.001^1^1^3160324^^^^
"^DD",66.3,66.3,99.99,21,1,0)
VHA Unique ID (VUID). A unique arbitrary integer assigned to reference terms VHA wide.
"^DD",66.3,66.3,99.99,"AUDIT")
y
"^DD",66.3,66.3,99.99,"DT")
3160420
"^DD",66.3,66.3,99.991,0)
EFFECTIVE DATE/TIME^66.399DA^^TERMSTATUS;0
"^DD",66.3,66.3,99.991,21,0)
^.001^1^1^3160421^^^
"^DD",66.3,66.3,99.991,21,1,0)
Describes the pair Status and Effective Date/Time for each reference term.
"^DD",66.3,66.399,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.02^2
"^DD",66.3,66.399,0,"DT")
3160229
"^DD",66.3,66.399,0,"IX","B",66.399,.01)

"^DD",66.3,66.399,0,"NM","EFFECTIVE DATE/TIME")

"^DD",66.3,66.399,0,"UP")
66.3
"^DD",66.3,66.399,.01,0)
EFFECTIVE DATE/TIME^RDIa^^0;1^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",66.3,66.399,.01,1,0)
^.1
"^DD",66.3,66.399,.01,1,1,0)
66.399^B
"^DD",66.3,66.399,.01,1,1,1)
S ^LRMLTF(DA(1),"TERMSTATUS","B",$E(X,1,30),DA)=""
"^DD",66.3,66.399,.01,1,1,2)
K ^LRMLTF(DA(1),"TERMSTATUS","B",$E(X,1,30),DA)
"^DD",66.3,66.399,.01,1,1,"%D",0)
^.101^1^1^3160421^^
"^DD",66.3,66.399,.01,1,1,"%D",1,0)
This cross-reference is by effective Date/Time.
"^DD",66.3,66.399,.01,3)
Enter the date/time when the term status was established.
"^DD",66.3,66.399,.01,9)
^
"^DD",66.3,66.399,.01,21,0)
^.001^1^1^3160421^^^
"^DD",66.3,66.399,.01,21,1,0)
This is the date/time when the Status of the referenced term was established.
"^DD",66.3,66.399,.01,"AUDIT")
y
"^DD",66.3,66.399,.01,"DT")
3160420
"^DD",66.3,66.399,.02,0)
STATUS^RSIa^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",66.3,66.399,.02,3)
Enter 1 if the Term is active or 0 if the Term is inactive.
"^DD",66.3,66.399,.02,9)
^
"^DD",66.3,66.399,.02,21,0)
^.001^2^2^3160421^^^
"^DD",66.3,66.399,.02,21,1,0)
The Status of a reference term is either 'ACTIVE'  or 'INACTIVE'. If 'ACTIVE' then the term will be accessible by end-users to document a particular patient
"^DD",66.3,66.399,.02,21,2,0)
 event. If 'INACTIVE', then the term will only be accessible by the application to display legacy data.
"^DD",66.3,66.399,.02,"AUDIT")
y
"^DD",66.3,66.399,.02,"DT")
3160420
"^DD",66.4,66.4,0)
FIELD^^8^17
"^DD",66.4,66.4,0,"DDA")
N
"^DD",66.4,66.4,0,"DT")
3160610
"^DD",66.4,66.4,0,"IX","ANM",66.4,.01)

"^DD",66.4,66.4,0,"IX","B",66.4,.01)

"^DD",66.4,66.4,0,"NM","LAB MLTF MANAGED ITEMS")

"^DD",66.4,66.4,0,"VRPK")
LR
"^DD",66.4,66.4,.01,0)
INSTITUTION POINTER^RP4'X^DIC(4,^0;1^Q
"^DD",66.4,66.4,.01,1,0)
^.1
"^DD",66.4,66.4,.01,1,1,0)
66.4^B
"^DD",66.4,66.4,.01,1,1,1)
S ^LAB(66.4,"B",$E(X,1,30),DA)=""
"^DD",66.4,66.4,.01,1,1,2)
K ^LAB(66.4,"B",$E(X,1,30),DA)
"^DD",66.4,66.4,.01,1,2,0)
66.4^ANM^MUMPS
"^DD",66.4,66.4,.01,1,2,1)
S ^LAB(66.4,"ANM",($$GET1^DIQ(4,X_",",.01)),DA)=""
"^DD",66.4,66.4,.01,1,2,2)
K ^LAB(66.4,"ANM",($$GET1^DIQ(4,X_",",.01)),DA)
"^DD",66.4,66.4,.01,1,2,"%D",0)
^.101^1^1^3160516^^
"^DD",66.4,66.4,.01,1,2,"%D",1,0)
this is the name cross reference for the .01 field.
"^DD",66.4,66.4,.01,1,2,"DT")
3160310
"^DD",66.4,66.4,.01,3)
Enter the Institution For this Medical Center
"^DD",66.4,66.4,.01,21,0)
^.001^1^1^3160726^^^^
"^DD",66.4,66.4,.01,21,1,0)
This is the institution for the facility.
"^DD",66.4,66.4,.01,"DT")
3160726
"^DD",66.4,66.4,.02,0)
NTRT SEND METHOD^S^M:MAILMAN;X:XML;N:NONE DO NOT SEND;^0;2^Q
"^DD",66.4,66.4,.02,3)
Enter Method That New Tests are Sent to NTRT for Validation.
"^DD",66.4,66.4,.02,21,0)
^.001^1^1^3160726^^^^
"^DD",66.4,66.4,.02,21,1,0)
This is the method for sending NTRT requests for new lab tests/specimens.
"^DD",66.4,66.4,.02,"DT")
3160516
"^DD",66.4,66.4,.03,0)
AUTO REMINDERS PARAMETER^NJ3,0^^0;3^K:+X'=X!(X>300)!(X<0)!(X?.E1"."1N.N) X
"^DD",66.4,66.4,.03,3)
Type a number between 0 and 300, 0 decimal digits.
"^DD",66.4,66.4,.03,21,0)
^.001^1^1^3160608^^^
"^DD",66.4,66.4,.03,21,1,0)
This is the default number for the Auto Reminders Parameter for use by the VHA Program Office.
"^DD",66.4,66.4,.03,"DT")
3160608
"^DD",66.4,66.4,.04,0)
AUDIT PURGE DAYS^NJ3,0^^0;4^K:+X'=X!(X>600)!(X<220)!(X?.E1"."1N.N) X
"^DD",66.4,66.4,.04,3)
Type a number between 220 and 600, 0 decimal digits.
"^DD",66.4,66.4,.04,21,0)
^.001^2^2^3160601^^^^
"^DD",66.4,66.4,.04,21,1,0)
The number of days of the AUDIT DATE/TIME multiple in the 
"^DD",66.4,66.4,.04,21,2,0)
 60 file (field 140), the minimum is 220, the max is 600.
"^DD",66.4,66.4,.04,"DT")
3160531
"^DD",66.4,66.4,.05,0)
ISAAC ACTIVE^S^Y:YES;N:NO;^0;5^Q
"^DD",66.4,66.4,.05,3)
Enter Y if ISAAC is active.
"^DD",66.4,66.4,.05,21,0)
^^1^1^3160516^^
"^DD",66.4,66.4,.05,21,1,0)
This field indicates if ISAAC is active for the facility to send new lab test/specimens NTRT requests to.
"^DD",66.4,66.4,.05,"DT")
3160516
"^DD",66.4,66.4,.06,0)
LAB IEN^NJ8,0^^0;6^K:+X'=X!(X>10000000)!(X<0)!(X?.E1"."1N.N) X
"^DD",66.4,66.4,.06,3)
Type a number between 0 and 10000000, 0 decimal digits.
"^DD",66.4,66.4,.06,21,0)
^.001^2^2^3160516^^^
"^DD",66.4,66.4,.06,21,1,0)
This is the lab IEN when patch was loaded and is used for determining exception tests
"^DD",66.4,66.4,.06,21,2,0)
 This field is set once and should not be changed.
"^DD",66.4,66.4,.06,23,0)
^^2^2^3160516^^
"^DD",66.4,66.4,.06,23,1,0)
The highest IEN for ^LAB(60 (Laboratory Test File #60) at the time when the Lab LOINC patch is loaded.
"^DD",66.4,66.4,.06,23,2,0)
This is for use with the NTRT process.
"^DD",66.4,66.4,.06,"DT")
3160524
"^DD",66.4,66.4,.07,0)
SUBSCRIPT FOR NTRT^S^1:CH;2:MI;4:SP;5:CY;7:CH AND MI;8:ALL SUBSCRIPTS;^0;7^Q
"^DD",66.4,66.4,.07,3)
Enter the number that corresponds to the subscript to be sent to NTRT.
"^DD",66.4,66.4,.07,21,0)
^^1^1^3160516^^
"^DD",66.4,66.4,.07,21,1,0)
This is used by the NTRT message program to determine which new lab tests/specimens are sent to NTRT.
"^DD",66.4,66.4,.07,"DT")
3160610
"^DD",66.4,66.4,.08,0)
LAST AUTO TEST ID^F^^0;8^K:$L(X)>20!($L(X)<1) X
"^DD",66.4,66.4,.08,3)
Answer must be 1-20 characters in length.
"^DD",66.4,66.4,.08,21,0)
^.001^2^2^3160601^^^^
"^DD",66.4,66.4,.08,21,1,0)
This is the field that will be populated with the file 60 TEST IEN that has been evaluated for MLTF
"^DD",66.4,66.4,.08,21,2,0)
 by the auto walk routine LR60AM.
"^DD",66.4,66.4,.08,"DT")
3160601
"^DD",66.4,66.4,.1,0)
SEND NTRT MESSAGES^S^1:YES;0:NO;^0;10^Q
"^DD",66.4,66.4,.1,3)
Enter 1 to allow the sending of new lab tests to NTRT Enter 0 to not send new test to NTRT.
"^DD",66.4,66.4,.1,21,0)
^^2^2^3160516^^
"^DD",66.4,66.4,.1,21,1,0)
This field allows the facilities to control the sending of New Laboratory Tests that are
"^DD",66.4,66.4,.1,21,2,0)
 not associated with the MLTF to NTRT for evaluation.
"^DD",66.4,66.4,.1,"DT")
3160516
"^DD",66.4,66.4,1,0)
DEFAULT NTRT MAIL GROUP^F^^1;1^K:$L(X)>80!($L(X)<1) X
"^DD",66.4,66.4,1,3)
Enter up to 80 characters for the NTRT mail group.
"^DD",66.4,66.4,1,21,0)
^^1^1^3160516^^
"^DD",66.4,66.4,1,21,1,0)
This is the default mail group to send NTRT request to when a new test/specimen is created
"^DD",66.4,66.4,1,"DT")
3160516
"^DD",66.4,66.4,2,0)
DEFAULT SITE LAB MAIL GROUP^F^^2;1^K:$L(X)>80!($L(X)<1) X
"^DD",66.4,66.4,2,3)
Enter up to 80 characters for the sites default lab mail group for NTRT messages.
"^DD",66.4,66.4,2,21,0)
^^1^1^3160516^^
"^DD",66.4,66.4,2,21,1,0)
This is the default 'G.' local site lab mail group to send/receive messages with NTRT.
"^DD",66.4,66.4,2,"DT")
3160516
"^DD",66.4,66.4,3,0)
SITE LAB SERVER^F^^3;1^K:$L(X)>80!($L(X)<1) X
"^DD",66.4,66.4,3,3)
Answer must be 1-80 characters in length.
"^DD",66.4,66.4,3,21,0)
^.001^1^1^3160610^^^^
"^DD",66.4,66.4,3,21,1,0)
This is the server that Lab Program Office will use to request reports.
"^DD",66.4,66.4,3,"DT")
3160727
"^DD",66.4,66.4,4,0)
ISAAC WEB ADDRESS^F^^4;1^K:$L(X)>100!($L(X)<1) X
"^DD",66.4,66.4,4,3)
Enter the ISACC Web Address in form 'WWW.ISAAC.COM'. The Address may be up to 100 characters in length.
"^DD",66.4,66.4,4,21,0)
^^1^1^3160516^
"^DD",66.4,66.4,4,21,1,0)
This is the ISAAC system NTRT web address for processing NTRT requests.
"^DD",66.4,66.4,4,"DT")
3160516
"^DD",66.4,66.4,5,0)
ISAAC PORT NUMBER^NJ10,0^^4;2^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",66.4,66.4,5,3)
Enter the port number for the ISAAC system NTRT process. The port is a number between 1 and 9999999999.
"^DD",66.4,66.4,5,21,0)
^.001^1^1^3160726^^^
"^DD",66.4,66.4,5,21,1,0)
This is the port number that the ISAAC system uses for the NTRT process.
"^DD",66.4,66.4,5,"DT")
3160516
"^DD",66.4,66.4,6,0)
ISAAC NTRT PATH^FX^^5;1^K:$L(X)>100!($L(X)<1) X S:X'="" X=$TR(X,"/","~")
"^DD",66.4,66.4,6,3)
Enter the ISAAC system path for the NTRT process. The system path can be from 1 to 100 characters in length.
"^DD",66.4,66.4,6,21,0)
^.001^1^1^3160726^^
"^DD",66.4,66.4,6,21,1,0)
This is the path used in the ISAAC system NTRT process.
"^DD",66.4,66.4,6,"DT")
3160524
"^DD",66.4,66.4,7,0)
ISAAC SCHEMA NAME^F^^6;1^K:$L(X)>60!($L(X)<1) X
"^DD",66.4,66.4,7,3)
Enter the ISAAC schema name for processing ISAAC XML's. The schema name can be from 1 to 60 characters in length.
"^DD",66.4,66.4,7,21,0)
^.001^1^1^3160726^^^
"^DD",66.4,66.4,7,21,1,0)
This is the Schema name that ISAAC will use to process NTRT request XML's. Example is 'ISAAC-NTRT.XSD'.
"^DD",66.4,66.4,7,"DT")
3160516
"^DD",66.4,66.4,8,0)
ISAAC SCHEMA PATH^FX^^6;2^K:$L(X)>100!($L(X)<1) X S:X'="" X=$TR(X,"/","~")
"^DD",66.4,66.4,8,3)
Enter the path for the ISAAC SCHEMA NAme. The schema name can be from 1 to 100 characters in length.
"^DD",66.4,66.4,8,21,0)
^.001^1^1^3160726^^^
"^DD",66.4,66.4,8,21,1,0)
This is the path to the ISAAC SCHEMA NAME that ISAAC will use to process incoming NTRT request XML's.
"^DD",66.4,66.4,8,"DT")
3160524
"^DIC",66.3,66.3,0)
MASTER LABORATORY TEST^66.3
"^DIC",66.3,66.3,0,"GL")
^LRMLTF(
"^DIC",66.3,66.3,"%",0)
^1.005^1^1
"^DIC",66.3,66.3,"%",1,0)
LR
"^DIC",66.3,66.3,"%","B","LR",1)

"^DIC",66.3,66.3,"%D",0)
^1.001^13^13^3160528^^^
"^DIC",66.3,66.3,"%D",1,0)
This is the Master Laboratory Test file.
"^DIC",66.3,66.3,"%D",2,0)
It contains the standardized Lab Test Name and its associated LOINC code.
"^DIC",66.3,66.3,"%D",3,0)
The Lab will associate their local test to this file 
"^DIC",66.3,66.3,"%D",4,0)
(^LAB(60,test#,1,specimen#)).
"^DIC",66.3,66.3,"%D",5,0)
 
"^DIC",66.3,66.3,"%D",6,0)
Per VHA Directive 2005-044, this file has been "locked down" by Data
"^DIC",66.3,66.3,"%D",7,0)
Standardization (DS).  The file definition (i.e. data dictionary) shall
"^DIC",66.3,66.3,"%D",8,0)
not be modified.  All additions, changes and deletions to entries in the
"^DIC",66.3,66.3,"%D",9,0)
file shall be done by Enterprise Reference Terminology (ERT) using the
"^DIC",66.3,66.3,"%D",10,0)
Master File Server (MFS), provided by Common Services (CS).  Creating
"^DIC",66.3,66.3,"%D",11,0)
and/or editing locally defined fields in the file are not permitted.  Use
"^DIC",66.3,66.3,"%D",12,0)
of locally defined fields that were created prior to the VHA Directive's
"^DIC",66.3,66.3,"%D",13,0)
2005-044 effective date shall not be supported.
"^DIC",66.3,"B","MASTER LABORATORY TEST",66.3)

"^DIC",66.4,66.4,0)
LAB MLTF MANAGED ITEMS^66.4
"^DIC",66.4,66.4,0,"GL")
^LAB(66.4,
"^DIC",66.4,66.4,"%",0)
^1.005^^0
"^DIC",66.4,66.4,"%D",0)
^1.001^1^1^3160310^^^
"^DIC",66.4,66.4,"%D",1,0)
This file is maintaining items needed for lab test interaction with NTRT for Master Lab Test File (MLTF) items.
"^DIC",66.4,"B","LAB MLTF MANAGED ITEMS",66.4)

"BLD",9771,6)
^383
**END**
**END**

