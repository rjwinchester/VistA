Released LR*5.2*500 SEQ #408
Extracted from mail message
**KIDS**:LR*5.2*500^

**INSTALL NAME**
LR*5.2*500
"BLD",10448,0)
LR*5.2*500^LAB SERVICE^0^3180417^y
"BLD",10448,1,0)
^^1^1^3180125^^
"BLD",10448,1,1,0)
See National Patch Module for details.
"BLD",10448,4,0)
^9.64PA^66.3^3
"BLD",10448,4,60,0)
60
"BLD",10448,4,60,2,0)
^9.641^60.16^2
"BLD",10448,4,60,2,60,0)
LABORATORY TEST  (File-top level)
"BLD",10448,4,60,2,60,1,0)
^9.6411^139^6
"BLD",10448,4,60,2,60,1,134,0)
IN HOUSE TEST
"BLD",10448,4,60,2,60,1,135,0)
POC TEST
"BLD",10448,4,60,2,60,1,136,0)
CALCULATION TEST
"BLD",10448,4,60,2,60,1,137,0)
SCANNED IMAGE TEST
"BLD",10448,4,60,2,60,1,138,0)
BILLABLE
"BLD",10448,4,60,2,60,1,139,0)
WORKLOAD CAPTURE
"BLD",10448,4,60,2,60.16,0)
PERFORMING LAB  (sub-file)
"BLD",10448,4,60,2,60.16,1,0)
^9.6411^^0
"BLD",10448,4,60,222)
y^y^p^^^^n^^n
"BLD",10448,4,60,224)

"BLD",10448,4,66.3,0)
66.3
"BLD",10448,4,66.3,222)
y^y^f^^^^n
"BLD",10448,4,66.4,0)
66.4
"BLD",10448,4,66.4,2,0)
^9.641^66.4^1
"BLD",10448,4,66.4,2,66.4,0)
LAB MLTF MANAGED ITEMS  (File-top level)
"BLD",10448,4,66.4,2,66.4,1,0)
^9.6411^8^6
"BLD",10448,4,66.4,2,66.4,1,.05,0)
CTT TOOLING ACTIVE
"BLD",10448,4,66.4,2,66.4,1,4,0)
CTT TOOLING WEB ADDRESS
"BLD",10448,4,66.4,2,66.4,1,5,0)
CTT TOOLING PORT NUMBER
"BLD",10448,4,66.4,2,66.4,1,6,0)
CTT TOOLING NTRT PATH
"BLD",10448,4,66.4,2,66.4,1,7,0)
CTT TOOLING SCHEMA NAME
"BLD",10448,4,66.4,2,66.4,1,8,0)
CTT TOOLING SCHEMA PATH
"BLD",10448,4,66.4,222)
y^y^p^^^^n^^n
"BLD",10448,4,66.4,224)

"BLD",10448,4,"APDD",60,60)

"BLD",10448,4,"APDD",60,60,134)

"BLD",10448,4,"APDD",60,60,135)

"BLD",10448,4,"APDD",60,60,136)

"BLD",10448,4,"APDD",60,60,137)

"BLD",10448,4,"APDD",60,60,138)

"BLD",10448,4,"APDD",60,60,139)

"BLD",10448,4,"APDD",60,60.16)

"BLD",10448,4,"APDD",66.4,66.4)

"BLD",10448,4,"APDD",66.4,66.4,.05)

"BLD",10448,4,"APDD",66.4,66.4,4)

"BLD",10448,4,"APDD",66.4,66.4,5)

"BLD",10448,4,"APDD",66.4,66.4,6)

"BLD",10448,4,"APDD",66.4,66.4,7)

"BLD",10448,4,"APDD",66.4,66.4,8)

"BLD",10448,4,"B",60,60)

"BLD",10448,4,"B",66.3,66.3)

"BLD",10448,4,"B",66.4,66.4)

"BLD",10448,6.3)
29
"BLD",10448,"ABPKG")
n
"BLD",10448,"INI")
PRE^LR500PO
"BLD",10448,"INIT")
POST^LR500PO
"BLD",10448,"KRN",0)
^9.67PA^779.2^20
"BLD",10448,"KRN",.4,0)
.4
"BLD",10448,"KRN",.401,0)
.401
"BLD",10448,"KRN",.402,0)
.402
"BLD",10448,"KRN",.403,0)
.403
"BLD",10448,"KRN",.5,0)
.5
"BLD",10448,"KRN",.84,0)
.84
"BLD",10448,"KRN",3.6,0)
3.6
"BLD",10448,"KRN",3.8,0)
3.8
"BLD",10448,"KRN",9.2,0)
9.2
"BLD",10448,"KRN",9.8,0)
9.8
"BLD",10448,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",10448,"KRN",9.8,"NM",1,0)
LRMLED^^0^B187849781
"BLD",10448,"KRN",9.8,"NM",2,0)
LRMLEDA^^0^B165026309
"BLD",10448,"KRN",9.8,"NM",3,0)
LRMLWT^^0^B43869064
"BLD",10448,"KRN",9.8,"NM",4,0)
LRMLACM^^0^B19567721
"BLD",10448,"KRN",9.8,"NM",5,0)
LR500PO^^0^B5514629
"BLD",10448,"KRN",9.8,"NM","B","LR500PO",5)

"BLD",10448,"KRN",9.8,"NM","B","LRMLACM",4)

"BLD",10448,"KRN",9.8,"NM","B","LRMLED",1)

"BLD",10448,"KRN",9.8,"NM","B","LRMLEDA",2)

"BLD",10448,"KRN",9.8,"NM","B","LRMLWT",3)

"BLD",10448,"KRN",19,0)
19
"BLD",10448,"KRN",19.1,0)
19.1
"BLD",10448,"KRN",101,0)
101
"BLD",10448,"KRN",409.61,0)
409.61
"BLD",10448,"KRN",771,0)
771
"BLD",10448,"KRN",779.2,0)
779.2
"BLD",10448,"KRN",870,0)
870
"BLD",10448,"KRN",8989.51,0)
8989.51
"BLD",10448,"KRN",8989.52,0)
8989.52
"BLD",10448,"KRN",8994,0)
8994
"BLD",10448,"KRN","B",.4,.4)

"BLD",10448,"KRN","B",.401,.401)

"BLD",10448,"KRN","B",.402,.402)

"BLD",10448,"KRN","B",.403,.403)

"BLD",10448,"KRN","B",.5,.5)

"BLD",10448,"KRN","B",.84,.84)

"BLD",10448,"KRN","B",3.6,3.6)

"BLD",10448,"KRN","B",3.8,3.8)

"BLD",10448,"KRN","B",9.2,9.2)

"BLD",10448,"KRN","B",9.8,9.8)

"BLD",10448,"KRN","B",19,19)

"BLD",10448,"KRN","B",19.1,19.1)

"BLD",10448,"KRN","B",101,101)

"BLD",10448,"KRN","B",409.61,409.61)

"BLD",10448,"KRN","B",771,771)

"BLD",10448,"KRN","B",779.2,779.2)

"BLD",10448,"KRN","B",870,870)

"BLD",10448,"KRN","B",8989.51,8989.51)

"BLD",10448,"KRN","B",8989.52,8989.52)

"BLD",10448,"KRN","B",8994,8994)

"BLD",10448,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10448,"QUES",0)
^9.62^^
"BLD",10448,"REQB",0)
^9.611^1^1
"BLD",10448,"REQB",1,0)
LR*5.2*468^2
"BLD",10448,"REQB","B","LR*5.2*468",1)

"FIA",60)
LABORATORY TEST
"FIA",60,0)
^LAB(60,
"FIA",60,0,0)
60I
"FIA",60,0,1)
y^y^p^^^^n^^n
"FIA",60,0,10)

"FIA",60,0,11)

"FIA",60,0,"RLRO")

"FIA",60,0,"VR")
5.2^LR
"FIA",60,60)
1
"FIA",60,60,134)

"FIA",60,60,135)

"FIA",60,60,136)

"FIA",60,60,137)

"FIA",60,60,138)

"FIA",60,60,139)

"FIA",60,60,141)

"FIA",60,60.16)
0
"FIA",66.3)
MASTER LABORATORY TEST
"FIA",66.3,0)
^LRMLTF(
"FIA",66.3,0,0)
66.3I
"FIA",66.3,0,1)
y^y^f^^^^n
"FIA",66.3,0,10)

"FIA",66.3,0,11)

"FIA",66.3,0,"RLRO")

"FIA",66.3,0,"VR")
5.2^LR
"FIA",66.3,66.3)
0
"FIA",66.3,66.399)
0
"FIA",66.4)
LAB MLTF MANAGED ITEMS
"FIA",66.4,0)
^LAB(66.4,
"FIA",66.4,0,0)
66.4P
"FIA",66.4,0,1)
y^y^p^^^^n^^n
"FIA",66.4,0,10)

"FIA",66.4,0,11)

"FIA",66.4,0,"RLRO")

"FIA",66.4,0,"VR")
5.2^LR
"FIA",66.4,66.4)
1
"FIA",66.4,66.4,.05)

"FIA",66.4,66.4,4)

"FIA",66.4,66.4,5)

"FIA",66.4,66.4,6)

"FIA",66.4,66.4,7)

"FIA",66.4,66.4,8)

"INI")
PRE^LR500PO
"INIT")
POST^LR500PO
"IX",66.3,66.3,"AMASTERVUID",0)
66.3^AMASTERVUID^This cross-reference identifies the Master entry for a VUID.^R^^R^IR^I^66.3^^^^^S
"IX",66.3,66.3,"AMASTERVUID",.1,0)
^^3^3^3160422^^
"IX",66.3,66.3,"AMASTERVUID",.1,1,0)
If multiple entries have the same VUID in the file, this cross-reference 
"IX",66.3,66.3,"AMASTERVUID",.1,2,0)
can be used to identify the master entry for a VUID associated with a 
"IX",66.3,66.3,"AMASTERVUID",.1,3,0)
Term/Concept.
"IX",66.3,66.3,"AMASTERVUID",1)
S ^LRMLTF("AMASTERVUID",$E(X(1),1,30),X(2),DA)=""
"IX",66.3,66.3,"AMASTERVUID",2)
K ^LRMLTF("AMASTERVUID",$E(X(1),1,30),X(2),DA)
"IX",66.3,66.3,"AMASTERVUID",2.5)
K ^LRMLTF("AMASTERVUID")
"IX",66.3,66.3,"AMASTERVUID",11.1,0)
^.114IA^2^2
"IX",66.3,66.3,"AMASTERVUID",11.1,1,0)
1^F^66.3^99.99^30^1^F
"IX",66.3,66.3,"AMASTERVUID",11.1,2,0)
2^F^66.3^99.98^^2^F
"IX",66.3,66.3,"B",0)
66.3^B^New style Cross Reference for 60 characters.^R^^F^IR^I^66.3^^^^^LS
"IX",66.3,66.3,"B",.1,0)
^^3^3^3180321^^
"IX",66.3,66.3,"B",.1,1,0)
The 'B' cross reference is being created here due to the
"IX",66.3,66.3,"B",.1,2,0)
30 character limiting the traditional 'B' cross reference.
"IX",66.3,66.3,"B",.1,3,0)
This 'B' cross reference is for a 60 character length.
"IX",66.3,66.3,"B",1)
S ^LRMLTF("B",$E(X,1,60),DA)=""
"IX",66.3,66.3,"B",2)
K ^LRMLTF("B",$E(X,1,60),DA)
"IX",66.3,66.3,"B",2.5)
K ^LRMLTF("B")
"IX",66.3,66.3,"B",11.1,0)
^.114IA^1^1
"IX",66.3,66.3,"B",11.1,1,0)
1^F^66.3^.01^60^1^F
"IX",66.3,66.3,"D",0)
66.3^D^New Style Alternate Name index for 60 characters^R^^F^IR^I^66.3^^^^^LS
"IX",66.3,66.3,"D",.1,0)
^^2^2^3180321^
"IX",66.3,66.3,"D",.1,1,0)
This 'New' style cross reference is to allow the user to lookup
"IX",66.3,66.3,"D",.1,2,0)
by the Alt Name in addition to the 'B' and 'C' cross references.
"IX",66.3,66.3,"D",1)
S ^LRMLTF("D",$E(X,1,60),DA)=""
"IX",66.3,66.3,"D",2)
K ^LRMLTF("D",$E(X,1,60),DA)
"IX",66.3,66.3,"D",2.5)
K ^LRMLTF("D")
"IX",66.3,66.3,"D",11.1,0)
^.114IA^1^1
"IX",66.3,66.3,"D",11.1,1,0)
1^F^66.3^.02^60^1^F
"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950611
"PKG",26,22,1,"PAH",1,0)
500^3180417
"PKG",26,22,1,"PAH",1,1,0)
^^1^1^3180417
"PKG",26,22,1,"PAH",1,1,1,0)
See National Patch Module for details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","LR500PO")
0^5^B5514629^n/a
"RTN","LR500PO",1,0)
LR500PO ;BPFO/MBS - POST INSTALL ROUTINE FOR PATCH LR*5.2*500 ;12/26/2017
"RTN","LR500PO",2,0)
 ;;5.2;LAB SERVICE;**500**;Sep 27, 1994;Build 29
"RTN","LR500PO",3,0)
 ;
"RTN","LR500PO",4,0)
 ;pre-/post-install routine to change site lab addresses in LAB MLTF MANAGED ITEMS (#66.4)
"RTN","LR500PO",5,0)
 ; file to use net name.
"RTN","LR500PO",6,0)
 ;
"RTN","LR500PO",7,0)
PRE ; pre-install
"RTN","LR500PO",8,0)
 ;Save off MLTF data before install
"RTN","LR500PO",9,0)
 ;We don't want to do this if fields have already been moved; previous install means we 
"RTN","LR500PO",10,0)
 ;already have data moved
"RTN","LR500PO",11,0)
 ;If unsuccessful install happened previously, either the data has been moved or it hasn't
"RTN","LR500PO",12,0)
 ;.If it hasn't, the data should still be there and we want to save/restore the most recent data
"RTN","LR500PO",13,0)
 ;.If it has, then there is no data to save (since the post-install routine probably didn't run)
"RTN","LR500PO",14,0)
 ;.so we want to use previously saved data
"RTN","LR500PO",15,0)
 N FLDDTA,XUXNM,XUDTA,CNT,XPDIDTOT
"RTN","LR500PO",16,0)
 D FIELD^DID(66.3,.05,,"GLOBAL SUBSCRIPT LOCATION","FLDDTA")
"RTN","LR500PO",17,0)
 ;Q:(+$G(FLDDTA("GLOBAL SUBSCRIPT LOCATION")))=4
"RTN","LR500PO",18,0)
 S XUXNM="LR PATCH 500 SAVE OF FILE 66.3"
"RTN","LR500PO",19,0)
 S XUDTA=$G(^XTMP(XUXNM,0)) S:XUDTA="" $P(XUDTA,U,3)="Save of file 66.3 for patch LR*5.2*500"
"RTN","LR500PO",20,0)
 S $P(XUDTA,U,1)=$$FMADD^XLFDT(DT,90),$P(XUDTA,U,2)=DT,^XTMP(XUXNM,0)=XUDTA
"RTN","LR500PO",21,0)
 S CNT=$G(^XTMP(XUXNM,"CNT",0))+1,^XTMP(XUXNM,"CNT",0)=CNT
"RTN","LR500PO",22,0)
 M ^XTMP(XUXNM,66.3,CNT)=^LRMLTF
"RTN","LR500PO",23,0)
 ;Delete "B" x-ref, since we are replacing it
"RTN","LR500PO",24,0)
 D DELIX^DDMOD(66.3,.02,1,"K"),DELIX^DDMOD(66.3,.01,1,"K")
"RTN","LR500PO",25,0)
 ;Just to be sure
"RTN","LR500PO",26,0)
 K ^LRMLTF("B"),^LRMLTF("C")
"RTN","LR500PO",27,0)
 Q
"RTN","LR500PO",28,0)
POST ; post-install
"RTN","LR500PO",29,0)
 N IEN,DA,DIK,A,MLTF2,MLTF3,CNT,XUXNM,LRMSG
"RTN","LR500PO",30,0)
 S IEN=0 F  S IEN=$O(^LAB(66.4,IEN)) Q:'IEN  D
"RTN","LR500PO",31,0)
 . N X,LRFDA
"RTN","LR500PO",32,0)
 . S X=$$GET1^DIQ(66.4,IEN_",","2")
"RTN","LR500PO",33,0)
 . S $P(X,"@",2)=$G(^XMB("NETNAME"))
"RTN","LR500PO",34,0)
 . S LRFDA(66.4,IEN_",",2)=X
"RTN","LR500PO",35,0)
 . S X=$$GET1^DIQ(66.4,IEN_",",3)
"RTN","LR500PO",36,0)
 . S $P(X,"@",2)=$G(^XMB("NETNAME"))
"RTN","LR500PO",37,0)
 . S LRFDA(66.4,IEN_",",3)=X
"RTN","LR500PO",38,0)
 . S LRFDA(66.4,IEN_",",.02)="M"
"RTN","LR500PO",39,0)
 . S LRFDA(66.4,IEN_",",.1)="0"
"RTN","LR500PO",40,0)
 . S LRFDA(66.4,IEN_",",.05)="N"
"RTN","LR500PO",41,0)
 . S LRFDA(66.4,IEN_",",4)="vaausctt203.aac.domain.ext"
"RTN","LR500PO",42,0)
 . S LRFDA(66.4,IEN_",",5)="8088"
"RTN","LR500PO",43,0)
 . S LRFDA(66.4,IEN_",",6)="ntrt~projects~NTRT~queues~custom~1"
"RTN","LR500PO",44,0)
 . S LRFDA(66.4,IEN_",",7)="JIRAORAUSER"
"RTN","LR500PO",45,0)
 . ;
"RTN","LR500PO",46,0)
 . D FILE^DIE(,"LRFDA")
"RTN","LR500PO",47,0)
 ;
"RTN","LR500PO",48,0)
 ; invoke cross reference re-build for 66.3 with addition of new cross reference
"RTN","LR500PO",49,0)
 S LRMSG(1)=""
"RTN","LR500PO",50,0)
 S LRMSG(2)=" Validating MASTER LABORATORY TEST File (#66.3) Cross Reference's"
"RTN","LR500PO",51,0)
 S LRMSG(3)=""
"RTN","LR500PO",52,0)
 D MES^XPDUTL(.LRMSG)
"RTN","LR500PO",53,0)
 ;
"RTN","LR500PO",54,0)
 S DIK="^LRMLTF("
"RTN","LR500PO",55,0)
 D IXALL2^DIK,IXALL^DIK
"RTN","LR500PO",56,0)
 ;
"RTN","LR500PO",57,0)
 S LRMSG(1)=""
"RTN","LR500PO",58,0)
 S LRMSG(2)=" MASTER LABORATORY TEST File (#66.3) Cross Reference's Are Validated"
"RTN","LR500PO",59,0)
 S LRMSG(3)=""
"RTN","LR500PO",60,0)
 D MES^XPDUTL(.LRMSG)
"RTN","LRMLACM")
0^4^B19567721^B18901427
"RTN","LRMLACM",1,0)
LRMLACM ;BPFO/DTG - LAB ASSOCIATE TEST/SPECIMEN TO MLTF ;02/10/2016
"RTN","LRMLACM",2,0)
 ;;5.2;LAB SERVICE;**468,500**;Sep 27, 1994;Build 29
"RTN","LRMLACM",3,0)
 ;
"RTN","LRMLACM",4,0)
 ; Associate Lab Test/Specimen to MLTF
"RTN","LRMLACM",5,0)
EN ; entry point for association
"RTN","LRMLACM",6,0)
 N LR60IEN,LRIEN,LRSPEC,A,B,C,LXB,LXA,LROKS,LRSYSTEM,LRLEC,LRNO,AA,DA,LXC,LXA,LRSPERR,LRMLTF,DIR,DIRUT,DIC,DIQ
"RTN","LRMLACM",7,0)
 N LR64ER,LRCKD,LRELEC,LRLNC,LRLNC0,LRN,LRSN,LRTNAM,X,Y
"RTN","LRMLACM",8,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLACM",9,0)
ENA K DIR,DIRUT
"RTN","LRMLACM",10,0)
 S DIR(0)="PO^60:EQZM",DIR("A")="LABORATORY TEST"
"RTN","LRMLACM",11,0)
 D ^DIR K DIR
"RTN","LRMLACM",12,0)
 I $D(DIRUT) G OUT
"RTN","LRMLACM",13,0)
 I Y<1 G OUT
"RTN","LRMLACM",14,0)
 S (LRIEN)=+Y,LRTNAM=$P(Y,U,2)
"RTN","LRMLACM",15,0)
 D GET60T
"RTN","LRMLACM",16,0)
 ; check values
"RTN","LRMLACM",17,0)
 S LRN=$G(LXA(.01,"E")),LR64ER=0
"RTN","LRMLACM",18,0)
 ; check test subscript is valid for NTRT
"RTN","LRMLACM",19,0)
 S AA=$G(LXA(4,"I"))
"RTN","LRMLACM",20,0)
 I AA="WK"!(AA="BB")!(AA="AU")!(AA="EM") W !," Subscript is "_AA_" Skipping" G ENA
"RTN","LRMLACM",21,0)
 ; check test type
"RTN","LRMLACM",22,0)
 S AA=$G(LXA(3,"I"))
"RTN","LRMLACM",23,0)
 I AA="N"!(AA="D") W !," Test Type is: "_AA_" Skipping" G ENA
"RTN","LRMLACM",24,0)
 ; check for data name
"RTN","LRMLACM",25,0)
 I $G(LXA(5,"I"))="" W !," "_LRN_" Missing LOCATION(Data Name) Skipping" G ENA
"RTN","LRMLACM",26,0)
 I $O(^LAB(60,LRIEN,1,0))="" W !," Test "_LRN_" does NOT have any Specimens associated. Skippping" G ENA
"RTN","LRMLACM",27,0)
 ;
"RTN","LRMLACM",28,0)
ENB ; pick up specimen
"RTN","LRMLACM",29,0)
 K DIR,DIRUT
"RTN","LRMLACM",30,0)
 S DIR(0)="PO^LAB(60,"_LRIEN_",1,:EQZM",DIR("A")="SPECIMEN for "_LRN
"RTN","LRMLACM",31,0)
 D ^DIR
"RTN","LRMLACM",32,0)
 I $D(DIRUT) G OUT:$E(X)="^"
"RTN","LRMLACM",33,0)
 I Y<1 G ENA
"RTN","LRMLACM",34,0)
 S LRSPEC=+Y
"RTN","LRMLACM",35,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=100,DA=+LRIEN K LXB,^UTILITY("DIQ1",$J)
"RTN","LRMLACM",36,0)
 S DR(60.01)=".01;6;1;2;9.2;9.3;13;30;32;33;34;35",DA(60.01)=LRSPEC
"RTN","LRMLACM",37,0)
 D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLACM",38,0)
 K LXC M LXC=LXB("60.01",LRSPEC) K LXB
"RTN","LRMLACM",39,0)
 S LRSN=$G(LXC(.01,"E"))
"RTN","LRMLACM",40,0)
 ;
"RTN","LRMLACM",41,0)
ENM ; mltf lookup
"RTN","LRMLACM",42,0)
 K DIR,DA,DIRUT
"RTN","LRMLACM",43,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLACM",44,0)
 S DIR(0)="PO^66.3:EMQZ"
"RTN","LRMLACM",45,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLACM",46,0)
 S DIR("S")="I '$$SCREEN^XTID(66.3,"""",(+Y_"",""))"
"RTN","LRMLACM",47,0)
 S DIR("B")=$G(LXC(30,"E"))
"RTN","LRMLACM",48,0)
 D ^DIR
"RTN","LRMLACM",49,0)
 I Y<1 D  G OUT:$D(DIRUT),ENB
"RTN","LRMLACM",50,0)
 . I X'="@" Q
"RTN","LRMLACM",51,0)
 . K DIR,DIRUT
"RTN","LRMLACM",52,0)
 . S DIR(0)="Y",DIR("A")="Are You Sure You Want To Delete This Entry"
"RTN","LRMLACM",53,0)
 . S DIR("?")="If you enter yes, the MLTF association with this test/specimen will be removed."
"RTN","LRMLACM",54,0)
 . S DIR("B")="Yes"
"RTN","LRMLACM",55,0)
 . D ^DIR
"RTN","LRMLACM",56,0)
 . I 'Y!($D(DIRUT)) Q
"RTN","LRMLACM",57,0)
 . I Y=1 D MSD
"RTN","LRMLACM",58,0)
 . ;
"RTN","LRMLACM",59,0)
 I $D(DIRUT) G OUT
"RTN","LRMLACM",60,0)
 I +Y>0&(+Y=$G(LXC(30,"I"))) G ENB
"RTN","LRMLACM",61,0)
 S LRSPERR=0,LRMLTF=+Y
"RTN","LRMLACM",62,0)
 ; check specimen type (based on code from LRLNC0 at CHKSPEC
"RTN","LRMLACM",63,0)
 S LRELEC=$P($G(^LAB(61,LRSPEC,0)),U,9)
"RTN","LRMLACM",64,0)
 S LRLNC0=$$GET1^DIQ(66.3,LRMLTF,.04,"I")
"RTN","LRMLACM",65,0)
 S LRLNC=$P(LRLNC0,"-",1),LRCKD=$P(LRLNC0,"-",2)
"RTN","LRMLACM",66,0)
 S A=0,LRSYSTEM="" F  S A=$O(^LAB(95.3,"B",LRLNC,A)) Q:'A  S B=$G(^LAB(95.3,A,0)),LRSYSTEM=$P(B,U,8),C=$P(B,U,15) I C=LRCKD Q
"RTN","LRMLACM",67,0)
 ; if not found in 95.3
"RTN","LRMLACM",68,0)
 I 'A G ENS
"RTN","LRMLACM",69,0)
 D CHKSPEC G:LROKS=1 ENS
"RTN","LRMLACM",70,0)
 I $D(DIRUT) G OUT:$E(X)="^"
"RTN","LRMLACM",71,0)
 I LRNO=1 W !,"TEST: ",LRN,!,"SPECIMEN: ",LRSN,! G ENM
"RTN","LRMLACM",72,0)
 G ENS
"RTN","LRMLACM",73,0)
 ;
"RTN","LRMLACM",74,0)
ENS D MSET I LRSPERR=1 W !,"NOT able to Save" G ENM
"RTN","LRMLACM",75,0)
 S A=$$GET1^DIQ(60.01,LRSPEC_","_LRIEN,30,"E")
"RTN","LRMLACM",76,0)
 W !!,"Test/Specimen: ",LRN," / ",LRSN,!,"  Saved With MLTF: ",A,!
"RTN","LRMLACM",77,0)
 G ENB
"RTN","LRMLACM",78,0)
 ;
"RTN","LRMLACM",79,0)
OUT ; exit
"RTN","LRMLACM",80,0)
 K LR60IEN,LRIEN,LRSPEC,A,B,C,AA,DA,LXB,LXA,LROKS,LRSYSTEM,LRLEC,LRNO,LXC,LXA,LRSPERR,LRMLTF,DIR,DIRUT,DIC,DIQ
"RTN","LRMLACM",81,0)
 K LR64ER,LRCKD,LRELEC,LRLNC,LRLNC0,LRN,LRSN,LRTNAM,X,Y
"RTN","LRMLACM",82,0)
 Q
"RTN","LRMLACM",83,0)
 ;
"RTN","LRMLACM",84,0)
GET60T ; get top of file 60 test info
"RTN","LRMLACM",85,0)
 S DA=LRIEN,DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;3;4;5;64.1;5;13;131;132;133" D EN^DIQ1
"RTN","LRMLACM",86,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLACM",87,0)
 Q
"RTN","LRMLACM",88,0)
 ;
"RTN","LRMLACM",89,0)
CHKSPEC ;Check that specimen of MLTF LOINC code same as specimen of test
"RTN","LRMLACM",90,0)
 S LROKS=1
"RTN","LRMLACM",91,0)
 I LRSYSTEM=$G(LRELEC) Q
"RTN","LRMLACM",92,0)
 I (LRSYSTEM=74!(LRSYSTEM=83)!(LRSYSTEM=114)!(LRSYSTEM=1376))&($G(LRELEC)=74!($G(LRELEC)=83)!($G(LRELEC)=114)!($G(LRELEC)=1376)) Q
"RTN","LRMLACM",93,0)
 S LROKS=0,LRNO=0
"RTN","LRMLACM",94,0)
 W !!,"The MLTF LOINC code that you have selected does not have the"
"RTN","LRMLACM",95,0)
 W !,"same specimen that you chose to test/specimen."
"RTN","LRMLACM",96,0)
 K DIR,DIRUT
"RTN","LRMLACM",97,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to do this"
"RTN","LRMLACM",98,0)
 S DIR("?")="If you enter yes, the test/specimen will be associated to this MLTF LOINC code."
"RTN","LRMLACM",99,0)
 S DIR("B")="Yes"
"RTN","LRMLACM",100,0)
 D ^DIR
"RTN","LRMLACM",101,0)
 I $D(DIRUT) S LRNO=1 Q
"RTN","LRMLACM",102,0)
 I Y<1 S LRNO=1
"RTN","LRMLACM",103,0)
 Q
"RTN","LRMLACM",104,0)
 ;
"RTN","LRMLACM",105,0)
MSD ; delete the mltf from the 60 file
"RTN","LRMLACM",106,0)
 N LRMLTF S LRMLTF="@" D MSET
"RTN","LRMLACM",107,0)
 K LRMLTF
"RTN","LRMLACM",108,0)
 Q
"RTN","LRMLACM",109,0)
 ;
"RTN","LRMLACM",110,0)
MSET ;save the mltf to the 60 file
"RTN","LRMLACM",111,0)
 N DA,DR,DIE,FDA,FFF
"RTN","LRMLACM",112,0)
 L +^LAB(60,LRIEN,1,LRSPEC):30 I '$T S LRSPERR=1 Q
"RTN","LRMLACM",113,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLACM",114,0)
 ;S DA(1)=+LRIEN,DA=LRSPEC,DR="30///"_LRMLTF,DIE="^LAB(60,"_DA(1)_",1," D ^DIE
"RTN","LRMLACM",115,0)
 K FDA S DA(1)=+LRIEN,DA=LRSPEC,FFF=DA_","_DA(1)_",",FDA(60.01,FFF,30)=LRMLTF D FILE^DIE("","FDA")
"RTN","LRMLACM",116,0)
 K FDA,FFF
"RTN","LRMLACM",117,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLACM",118,0)
 L -^LAB(60,LRIEN,1,LRSPEC)
"RTN","LRMLACM",119,0)
 Q
"RTN","LRMLACM",120,0)
 ;
"RTN","LRMLED")
0^1^B187849781^B152483182
"RTN","LRMLED",1,0)
LRMLED ;BPFO/DTG - NTRT MESSAGE PROCESS AND EDITS UPDATE ;12/26/2016
"RTN","LRMLED",2,0)
 ;;5.2;LAB SERVICE;**468,500**;Sep 27, 1994;Build 29
"RTN","LRMLED",3,0)
 ;
"RTN","LRMLED",4,0)
 ; ESTART is called from a 'NEW' format cross reference on the 60 file AMLTFNTRT
"RTN","LRMLED",5,0)
 ; and will send NTRT message if appropiate.
"RTN","LRMLED",6,0)
EN(LRS,LR60IEN) ; entry point from cross reference
"RTN","LRMLED",7,0)
 ; only have one
"RTN","LRMLED",8,0)
 L +^TMP(LR60IEN,LRS):1 I '$T Q
"RTN","LRMLED",9,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLED",10,0)
 ; START OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",11,0)
 ;S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Create NTRT message from file 60 Cross Reference #491"
"RTN","LRMLED",12,0)
 S B=$H,A=$$HADD^XLFDT(B,,8,,),C=$$HTFM^XLFDT(A)
"RTN","LRMLED",13,0)
 S ZTDTH=C,ZTDESC="LAB Create NTRT message from file 60 Cross Reference #491"
"RTN","LRMLED",14,0)
 S ZTRTN="ESTART^LRMLED("_LR60IEN_","_LRS_")",ZTSAVE("LR60IEN")="",ZTSAVE("LRS")="",ZTIO="",ZTSAVE("LRDUZ")=DUZ
"RTN","LRMLED",15,0)
 D ^%ZTLOAD
"RTN","LRMLED",16,0)
 L -^TMP(LR60IEN,LRS)
"RTN","LRMLED",17,0)
 Q
"RTN","LRMLED",18,0)
 ;
"RTN","LRMLED",19,0)
ESTART(LR60IEN,LRS) ; pick up key data for NTRT
"RTN","LRMLED",20,0)
 Q:$D(LRMLTFREC)
"RTN","LRMLED",21,0)
 L +^TMP(LR60IEN,LRS):30 I '$T Q
"RTN","LRMLED",22,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",23,0)
 N LXA,LXB,LXC,LXG,LXD,LXE,LXF,LXH,A,B,C,D,LSITE,LRNT,LRNTI,AR,LRNLT,LRSEC,I,LRNOS1,LRNOS2
"RTN","LRMLED",24,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",25,0)
 N LRSITE,LRSITEN,LRGMAIL,LRSMAIL,LRNAMIL,LACT,MAILPERSON,LR64,LRCOM,LRCTY,LRSUBSCRIPT
"RTN","LRMLED",26,0)
 N LRSCHPA,LRSCHNM,ALI,LRTEXT,LR64N,LRDTNM,G
"RTN","LRMLED",27,0)
 S:$G(LRDUZ)="" LRDUZ=$G(DUZ)
"RTN","LRMLED",28,0)
 I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLED",29,0)
 D GET664
"RTN","LRMLED",30,0)
 ; check if allow to send to NTRT
"RTN","LRMLED",31,0)
 ; I $G(LRNTI(.1,"I"))'=1 G EOUT
"RTN","LRMLED",32,0)
 ;
"RTN","LRMLED",33,0)
 ;site number and name
"RTN","LRMLED",34,0)
 S LRSITE=$G(LRNTI(.01,"I")),LRSITEN=$G(LRNTI(.01,"E"))
"RTN","LRMLED",35,0)
 ;ntrt mail group
"RTN","LRMLED",36,0)
 S LRNMAIL=$G(LRNTI(1,"I"))
"RTN","LRMLED",37,0)
 ;lab send mail group
"RTN","LRMLED",38,0)
 S LRGMAIL=$G(LRNTI(2,"I"))
"RTN","LRMLED",39,0)
 ;lab server side mail group
"RTN","LRMLED",40,0)
 S LRSMAIL=$G(LRNTI(3,"I"))
"RTN","LRMLED",41,0)
 ;how to send mail
"RTN","LRMLED",42,0)
 S LACT=$G(LRNTI(.02,"E"))
"RTN","LRMLED",43,0)
 ; get type of test to send
"RTN","LRMLED",44,0)
 S LRSUBSCRIPT=$G(LRNTI(.07,"I")) I LRSUBSCRIPT="" S LRSUBSCRIPT=1 ; default to CH only
"RTN","LRMLED",45,0)
 ; send blood bank?
"RTN","LRMLED",46,0)
 ;
"RTN","LRMLED",47,0)
 S DA=+LR60IEN
"RTN","LRMLED",48,0)
 ;get test
"RTN","LRMLED",49,0)
EA ; .01 test name, 4 subscript (CH), 5 data name, 13 field (DD of 5), 64.1 result nlt code
"RTN","LRMLED",50,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;4;64.1;5;13;131;132;133;134;135;137" K ^UTILITY("DIQ1",$J) D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLED",51,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLED",52,0)
 D TDT
"RTN","LRMLED",53,0)
 ; check test subscript is valid for NTRT
"RTN","LRMLED",54,0)
 S A=$G(LXA(4,"I"))
"RTN","LRMLED",55,0)
 I A="WK" G EOUT ; don't send if workload
"RTN","LRMLED",56,0)
 I A="AU" G EOUT
"RTN","LRMLED",57,0)
 I A="EM" G EOUT
"RTN","LRMLED",58,0)
 I A="BB" G EOUT
"RTN","LRMLED",59,0)
 I A="CH"&((LRSUBSCRIPT=1)!(LRSUBSCRIPT=7)!(LRSUBSCRIPT=8)) G EGOOD
"RTN","LRMLED",60,0)
 I A="MI"&((LRSUBSCRIPT=2)!(LRSUBSCRIPT=7)!(LRSUBSCRIPT=8)) G EGOOD
"RTN","LRMLED",61,0)
 ; I A="EM"&((LRSUBSCRIPT=3)!(LRSUBSCRIPT=8)) G EGOOD  ; do not do AU per Leeanne 6/2016
"RTN","LRMLED",62,0)
 I A="SP"&((LRSUBSCRIPT=4)!(LRSUBSCRIPT=8)) G EGOOD
"RTN","LRMLED",63,0)
 I A="CY"&((LRSUBSCRIPT=5)!(LRSUBSCRIPT=8)) G EGOOD
"RTN","LRMLED",64,0)
 ; I A="AU"&((LRSUBSCRIPT=6)!(LRSUBSCRIPT=8)) G EGOOD ; do not do AU per Leeanne 6/2016
"RTN","LRMLED",65,0)
 G EOUT ; doesn't match up
"RTN","LRMLED",66,0)
 ;
"RTN","LRMLED",67,0)
EGOOD ; if the subscript is valid
"RTN","LRMLED",68,0)
 ; check if inactive
"RTN","LRMLED",69,0)
 S A=$G(LXA(132,"I")),B=$G(LXA(133,"I")) I A'=""!(B'="") G EOUT
"RTN","LRMLED",70,0)
 ;get synonyms
"RTN","LRMLED",71,0)
 K B S LXG="",A=0 F I=0:1 S A=$O(^LAB(60,DA,5,A)) Q:'A  S B(I)=$P(^LAB(60,DA,5,A,0),U,1)
"RTN","LRMLED",72,0)
 I I>0 S B=I-1 F I=0:1:B D  I $L(LXG)>210 Q
"RTN","LRMLED",73,0)
 . I LXG="" S LXG=B(I) Q
"RTN","LRMLED",74,0)
 . S LXG=LXG_U_B(I)
"RTN","LRMLED",75,0)
 ;get nlt number
"RTN","LRMLED",76,0)
 S LR64=$G(LXA(64.1,"I")),(LRNLT,LRSEC)="",LR64N=$G(LXA(64.1,"E"))
"RTN","LRMLED",77,0)
 I LR64'="" S LRNLT=$G(^LAM(LR64,0)),A=$P(LRNLT,U,15),LRNLT=$P(LRNLT,U,2)
"RTN","LRMLED",78,0)
 I A'="" S LRSEC=$P($G(^LAB(64.21,A,0)),U,2)
"RTN","LRMLED",79,0)
 ;get comment / data type from comment
"RTN","LRMLED",80,0)
 S (LRCOM,LRCTY,LRDTNM)="",A=$G(LXA(13,"I")),LRDTNM=$P($G(LXA(5,"I")),";",2)
"RTN","LRMLED",81,0)
 I A'="" S B=$$ETSTTYP(A),LRCOM=$P(B,"|",1),LRCTY=$P(B,"|",2) S:$P(B,"|",3)'="" LRDTNM=LRDTNM_" - "_$P(B,"|",3)
"RTN","LRMLED",82,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",83,0)
 ; get the performing labs
"RTN","LRMLED",84,0)
 D LIST^DIC(60.16,","_DA_",","@;.01;1","",,,,,,,"LXB")
"RTN","LRMLED",85,0)
 K LXH M LXH=LXB("DILIST","ID") K LXB
"RTN","LRMLED",86,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",87,0)
 ; get specimen info
"RTN","LRMLED",88,0)
ES ; LRS is passed in and is the specimen IEN
"RTN","LRMLED",89,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=100,DA=+LR60IEN K LXB,^UTILITY("DIQ1",$J)
"RTN","LRMLED",90,0)
 S DR(60.01)=".01;6;1;2;9.2;9.3;13;30;32;33;34;35",DA(60.01)=LRS
"RTN","LRMLED",91,0)
 D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLED",92,0)
 K LXC M LXC=LXB("60.01",LRS) K LXB
"RTN","LRMLED",93,0)
 ; get the specimen INTERPRETATION
"RTN","LRMLED",94,0)
 D GETS^DIQ(60.01,LRS_","_DA,"5.5","","LXB")
"RTN","LRMLED",95,0)
 K LXE M LXE=LXB(60.01,LRS_","_DA_",",5.5) K LXB
"RTN","LRMLED",96,0)
 ; don't do if MLTF already associated
"RTN","LRMLED",97,0)
 I $G(LXC(30,"I"))'="" G EOUT
"RTN","LRMLED",98,0)
 ; don't do if inactive or already sent
"RTN","LRMLED",99,0)
 S A=$G(LXC(32,"I")),B=$G(LXC(33,"I")),C=$G(LXC(34,"I")) I $E(A,1)="Y"!(B'="")!($E(C,1)="Y") G EOUT
"RTN","LRMLED",100,0)
 ;if no send method or not allowed to send to NTRT
"RTN","LRMLED",101,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",102,0)
 S LRNOS1=0 I LACT=""!($G(LRNTI(.02,"I"))="N")!($G(LRNTI(.1,"I"))'=1) S LRNOS1=1
"RTN","LRMLED",103,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",104,0)
 S A=$TR(LRGMAIL,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRMLED",105,0)
 S LRNOS2=0 I '$$PROD^XUPROD()!(LRGMAIL'["DOMAIN.EXT") S LRNOS2=1
"RTN","LRMLED",106,0)
 I LACT=""!($E(LACT,1)="N") D MAILMAN G EOUT
"RTN","LRMLED",107,0)
 D @LACT
"RTN","LRMLED",108,0)
 ;put exception flag in 60 file
"RTN","LRMLED",109,0)
 ; since making exception flag uneditable must do physical set
"RTN","LRMLED",110,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",111,0)
 ;I (LRNOS1'=1&(LRNOS2'=1)) D  ;<
"RTN","LRMLED",112,0)
 N A,B,LRO,LRN,I S A=$G(^LAB(60,LR60IEN,1,LRS,5)),B=A,$P(B,U,3)="Y",^LAB(60,LR60IEN,1,LRS,5)=B
"RTN","LRMLED",113,0)
 ; need to build array for saving in audit section
"RTN","LRMLED",114,0)
 F I=1,2,4 S LRO(I)="",LRN(I)=""
"RTN","LRMLED",115,0)
 S LRO(3)=$P(A,U,3),LRN(3)=$P(B,U,3)
"RTN","LRMLED",116,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLED",117,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save of Deployed Flag"
"RTN","LRMLED",118,0)
 S ZTRTN="SEDA^LRMLED("_LRS_","_LR60IEN_")",ZTSAVE("LR60IEN")="",ZTSAVE("LRS")=""
"RTN","LRMLED",119,0)
 S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLED",120,0)
 S ZTIO=""
"RTN","LRMLED",121,0)
 D ^%ZTLOAD
"RTN","LRMLED",122,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",123,0)
 G EOUT
"RTN","LRMLED",124,0)
 ;
"RTN","LRMLED",125,0)
MAILMAN ;mailman
"RTN","LRMLED",126,0)
 N XMSUB,XMY,XMTEXT,LRTEXT,XMDUZ,DA,DR,DIE
"RTN","LRMLED",127,0)
 ;
"RTN","LRMLED",128,0)
 I LRNMAIL="" Q  ; missing NTRT recipient
"RTN","LRMLED",129,0)
 ;
"RTN","LRMLED",130,0)
 S XMSUB="NEW NTRT REQUEST FOR LABORATORY"
"RTN","LRMLED",131,0)
 ;S XMY(DUZ)=""
"RTN","LRMLED",132,0)
 S XMY(LRDUZ)=""
"RTN","LRMLED",133,0)
 ; send to NTRT if ntrt mail group and send method and production/va site
"RTN","LRMLED",134,0)
 I LRNMAIL'="" S XMY(LRNMAIL)="" I LRNOS1=1!(LRNOS2=1) K XMY(LRNMAIL)
"RTN","LRMLED",135,0)
 ;
"RTN","LRMLED",136,0)
 I LRGMAIL'="" S XMDUZ("New Test/Specimen NTRT Request From: "_$E(LRSITEN,1,30))="",XMY($P(LRGMAIL,"@",1))=""
"RTN","LRMLED",137,0)
 S ALI=0
"RTN","LRMLED",138,0)
 I LRNOS1=1!(LRNOS2=1) D  ;<
"RTN","LRMLED",139,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="***  THIS TEST/SPECIMEN WAS NOT SENT TO NTRT ***"
"RTN","LRMLED",140,0)
 . S A="" S:LRNOS1=1 A="Missing Send Method" S A=A_$S((LRNOS2=1&(A'="")):" and ",1:""),A=A_$S(LRNOS2=1:"Facility is Either Not Production or Not a VA Site",1:"")
"RTN","LRMLED",141,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)=A
"RTN","LRMLED",142,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",143,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="A new Laboratory Test has been entered at: "_LRSITEN
"RTN","LRMLED",144,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",145,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Facility Name/Number: "_LRSITEN_" / "_LRSITE
"RTN","LRMLED",146,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",147,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="For questions or notifications respond to: "_LRGMAIL
"RTN","LRMLED",148,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",149,0)
 ; S LRTEXT(6)="For NTRT results respond to :"_LRSMAIL
"RTN","LRMLED",150,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",151,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",152,0)
 I $G(LRRESEND)=1 S ALI=$$LRTP(ALI),LRTEXT(ALI)=" **** THIS TEST/SPECIMEN IS BEING RESENT ****"
"RTN","LRMLED",153,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="New Laboratory Test Name: "_$G(LXA(.01,"I"))
"RTN","LRMLED",154,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",155,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="New Laboratory Test LOCAL IEN: "_(+LR60IEN)
"RTN","LRMLED",156,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",157,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Laboratory Test Site/Specimen Number (IEN): "_$G(LXC(.01,"I"))
"RTN","LRMLED",158,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",159,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Laboratory Test Site/Specimen Name: "_$G(LXC(.01,"E"))
"RTN","LRMLED",160,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",161,0)
 S B="",A=$G(LXC(.01,"I")) I A S A=$G(^LAB(61,A,0)),B=$P(A,U,10) I +B>0 S B=$P($G(^LAB(64.061,B,0)),U,1)
"RTN","LRMLED",162,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",163,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Spec: "_$P(A,U,1)
"RTN","LRMLED",164,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",165,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Time Aspect: "_B
"RTN","LRMLED",166,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",167,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Units: "_$G(LXC(6,"I"))
"RTN","LRMLED",168,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",169,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="RNLT: "_LRNLT
"RTN","LRMLED",170,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",171,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Lab Section: "_LRSEC
"RTN","LRMLED",172,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",173,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Subscript: "_$G(LXA(4,"I"))
"RTN","LRMLED",174,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",175,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Data Name: "_LRDTNM
"RTN","LRMLED",176,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",177,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Data Comment: "_LRCOM
"RTN","LRMLED",178,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",179,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Data Type: "_LRCTY
"RTN","LRMLED",180,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",181,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Reference Low: "_$G(LXC(1,"I"))
"RTN","LRMLED",182,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",183,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Reference High: "_$G(LXC(2,"I"))
"RTN","LRMLED",184,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",185,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Therapeutic Low: "_$G(LXC(9.2,"I"))
"RTN","LRMLED",186,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",187,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Therapeutic High: "_$G(LXC(9.3,"I"))
"RTN","LRMLED",188,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",189,0)
 ; S A=$G(LXC(13,"I")),B=$S(A=1:"YES",1:"NO")
"RTN","LRMLED",190,0)
 ; S ALI=$$LRTP(ALI),LRTEXT(ALI)="Use Ref Lab: "_B
"RTN","LRMLED",191,0)
 ; S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",192,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Test Synonyms: "_LXG
"RTN","LRMLED",193,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",194,0)
 ; F I=10:2:44 S LRTEXT(I)=""
"RTN","LRMLED",195,0)
 S E=0 F I=1:1 S E=$O(LXE(E)) Q:'E  S G=LXE(E),ALI=$$LRTP(ALI),LRTEXT(ALI)=$S(I=1:"Specimen Interpretation: ",1:"                         ")_G
"RTN","LRMLED",196,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",197,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",198,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Test Creation Date: "_$G(LXA(131,"E"))
"RTN","LRMLED",199,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",200,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Specimen Create Date: "_$G(LXC(35,"E"))
"RTN","LRMLED",201,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",202,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="In-House Test: "_$G(LXA(134,"E"))
"RTN","LRMLED",203,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",204,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="POC Test: "_$G(LXA(135,"E"))
"RTN","LRMLED",205,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",206,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Scanned Image Test: "_$G(LXA(137,"E"))
"RTN","LRMLED",207,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",208,0)
 S E=0 F I=0:1 S E=$O(LXH(E)) Q:'E&I  D  Q:'E
"RTN","LRMLED",209,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="Performing Lab: "_$G(LXH(+E,.01))
"RTN","LRMLED",210,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="    Order Code: "_$G(LXH(+E,1))
"RTN","LRMLED",211,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",212,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="Site Notes:"
"RTN","LRMLED",213,0)
 N STNTDT S STNTDT=9999999 F  S STNTDT=$O(^LAB(60,LR60IEN,11,"B",STNTDT),-1) Q:'STNTDT  D
"RTN","LRMLED",214,0)
 . N STNTIEN,I
"RTN","LRMLED",215,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="Site Notes Date: "_$$FMTE^XLFDT(STNTDT)
"RTN","LRMLED",216,0)
 . S STNTIEN=0 S STNTIEN=$O(^LAB(60,+LR60IEN,11,"B",STNTDT,STNTIEN)) Q:'STNTIEN  D  S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",217,0)
 . . S I=0 F  S I=$O(^LAB(60,+LR60IEN,11,STNTIEN,1,I)) Q:'I  D
"RTN","LRMLED",218,0)
 . . . S ALI=$$LRTP(ALI),LRTEXT(ALI)=$G(^LAB(60,+LR60IEN,11,STNTIEN,1,I,0))
"RTN","LRMLED",219,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=""
"RTN","LRMLED",220,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLED",221,0)
 S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRMLED",222,0)
 ;
"RTN","LRMLED",223,0)
 Q
"RTN","LRMLED",224,0)
 ;
"RTN","LRMLED",225,0)
CTCHK(LR60IEN) ; check if the test is valid for create date and it hasn't been set previously
"RTN","LRMLED",226,0)
 ; is the test valid for update
"RTN","LRMLED",227,0)
 N A,B,C,LSITE,LRNT
"RTN","LRMLED",228,0)
 S A=$$GET1^DIQ(60,LR60IEN_",",131)
"RTN","LRMLED",229,0)
 I A'="" Q 0
"RTN","LRMLED",230,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLED",231,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLED",232,0)
 I +LRNT<1 Q 0
"RTN","LRMLED",233,0)
 S A=$$GET1^DIQ(66.4,LRNT_",",.06)
"RTN","LRMLED",234,0)
 I A&(A>(LR60IEN-1)) Q 0
"RTN","LRMLED",235,0)
 Q 1
"RTN","LRMLED",236,0)
 ;
"RTN","LRMLED",237,0)
NSP(LR6001IEN,LR60IEN) ; entry to set specimen date if new specimen
"RTN","LRMLED",238,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC,LRN,LRO
"RTN","LRMLED",239,0)
 ; X1-old array  X2-new array
"RTN","LRMLED",240,0)
 M LRO=X1,LRN=X2
"RTN","LRMLED",241,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save from file 60 Cross Reference #490"
"RTN","LRMLED",242,0)
 S ZTRTN="NSPA^LRMLED("_LR6001IEN_","_LR60IEN_")",ZTSAVE("LR60IEN")="",ZTSAVE("LR6001IEN")=""
"RTN","LRMLED",243,0)
 S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLED",244,0)
 S ZTIO=""
"RTN","LRMLED",245,0)
 D ^%ZTLOAD
"RTN","LRMLED",246,0)
 Q
"RTN","LRMLED",247,0)
 ;
"RTN","LRMLED",248,0)
NSPA(LRDA,LRDA1) ; save specimen create date if new specimen for test
"RTN","LRMLED",249,0)
 ; (1)-.01 SITE/SPECIMEN
"RTN","LRMLED",250,0)
 ; LRDA - specimen IEN
"RTN","LRMLED",251,0)
 ; LRDA1 - test IEN
"RTN","LRMLED",252,0)
 ; LRO-old array  LRN-new array
"RTN","LRMLED",253,0)
 Q:$D(LRMLTFREC)
"RTN","LRMLED",254,0)
 N A,B,C,D,E,F,DA
"RTN","LRMLED",255,0)
 N DR,DIE,DIC,X
"RTN","LRMLED",256,0)
 I $G(LRO(1))'=""!($G(LRN(1))="") G NSPQ
"RTN","LRMLED",257,0)
 S DA=LRDA,DA(1)=LRDA1
"RTN","LRMLED",258,0)
 S A=$$GET1^DIQ(60.01,DA_","_DA(1),35,"I")
"RTN","LRMLED",259,0)
 I A'="" G NSPQ
"RTN","LRMLED",260,0)
 I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLED",261,0)
 S DIE="^LAB(60,"_DA(1)_",1,",DR="35///"_DT
"RTN","LRMLED",262,0)
 D ^DIE
"RTN","LRMLED",263,0)
 G NSPQ
"RTN","LRMLED",264,0)
 ;
"RTN","LRMLED",265,0)
NSPQ ; quit
"RTN","LRMLED",266,0)
 K A,B,C,D,E,F,DA,DR,DIE,DIC,X
"RTN","LRMLED",267,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLED",268,0)
 Q
"RTN","LRMLED",269,0)
 ;
"RTN","LRMLED",270,0)
TDT ;place creation date in test
"RTN","LRMLED",271,0)
 I $G(LXA(131,"I"))'="" Q  ; date already on file
"RTN","LRMLED",272,0)
 S A=$G(LRNTI(".06","I")) I A&(A>(LR60IEN-1)) Q  ; only set if test added after patch 468 load
"RTN","LRMLED",273,0)
 N DA,DR,DIE
"RTN","LRMLED",274,0)
 L +^LAB(60,LR60IEN):30 I '$T Q
"RTN","LRMLED",275,0)
 S DA=+LR60IEN,DR="131///"_DT,DIE="^LAB(60," D ^DIE
"RTN","LRMLED",276,0)
 L -^LAB(60,LR60IEN)
"RTN","LRMLED",277,0)
 Q
"RTN","LRMLED",278,0)
 ;
"RTN","LRMLED",279,0)
SDT ; place specimen creation dt
"RTN","LRMLED",280,0)
 I $G(LXC(35,"I"))'="" Q  ; date on file
"RTN","LRMLED",281,0)
 N DA,DR,DIE
"RTN","LRMLED",282,0)
 L +^LAB(60,LR60IEN,1,LRS):30 I '$T Q
"RTN","LRMLED",283,0)
 S DA(1)=+LR60IEN,DA=LRS,DR="35///"_DT,DIE="^LAB(60,"_DA(1)_",1," D ^DIE
"RTN","LRMLED",284,0)
 L -^LAB(60,LR60IEN,1,LRS)
"RTN","LRMLED",285,0)
 Q
"RTN","LRMLED",286,0)
 ;
"RTN","LRMLED",287,0)
LRTEXT(AL) ; update counter for message xml
"RTN","LRMLED",288,0)
 S AL=AL+1
"RTN","LRMLED",289,0)
 Q AL
"RTN","LRMLED",290,0)
 ;
"RTN","LRMLED",291,0)
HL7 ;send hl7 to NTRT
"RTN","LRMLED",292,0)
 ; currently not implemented
"RTN","LRMLED",293,0)
 Q
"RTN","LRMLED",294,0)
 ;
"RTN","LRMLED",295,0)
LRTP(AA) ;update text counter
"RTN","LRMLED",296,0)
 S AA=AA+1
"RTN","LRMLED",297,0)
 Q AA
"RTN","LRMLED",298,0)
 ;
"RTN","LRMLED",299,0)
XML ;send xml to NTRT
"RTN","LRMLED",300,0)
 ; moved to LRMLEDA for size
"RTN","LRMLED",301,0)
 D XML^LRMLEDA
"RTN","LRMLED",302,0)
 Q
"RTN","LRMLED",303,0)
 ;
"RTN","LRMLED",304,0)
 ;
"RTN","LRMLED",305,0)
ETSTTYP(LRX) ; get test data type
"RTN","LRMLED",306,0)
 N LRSTUB,LRTYPE,LRY,K,KK
"RTN","LRMLED",307,0)
 I LRX="" Q ""
"RTN","LRMLED",308,0)
 S K="^"_LRX_"0)",KK=$G(@K),$P(LRSTUB,"|",3)=$P(KK,U,1)
"RTN","LRMLED",309,0)
 S LRX=$P(LRX,"(",2)
"RTN","LRMLED",310,0)
 ;
"RTN","LRMLED",311,0)
 ; Data type
"RTN","LRMLED",312,0)
 S LRTYPE=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","TYPE")
"RTN","LRMLED",313,0)
 S $P(LRSTUB,"|",2)=LRTYPE
"RTN","LRMLED",314,0)
 ;
"RTN","LRMLED",315,0)
 ; Input transform
"RTN","LRMLED",316,0)
 S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"",$S(LRTYPE="SET":"POINTER",1:"INPUT TRANSFORM"))
"RTN","LRMLED",317,0)
 I LRTYPE="NUMERIC",LRY["LRNUM" D
"RTN","LRMLED",318,0)
 . S LRX=$P(LRY,"""",2)
"RTN","LRMLED",319,0)
 . I LRX?.1"-".N1","1.N1","1N S LRY="Number from "_$P(LRX,",")_" to "_$P(LRX,",",2)_" with "_$P(LRX,",",3)_" decimal"
"RTN","LRMLED",320,0)
 . S $P(LRSTUB,"|",1)=LRY
"RTN","LRMLED",321,0)
 ; Help prompt
"RTN","LRMLED",322,0)
 I LRTYPE="FREE TEXT" D
"RTN","LRMLED",323,0)
 . S LRY=$$GET1^DID($P(LRX,","),$P(LRX,",",2,99),"","HELP-PROMPT")
"RTN","LRMLED",324,0)
 . S $P(LRSTUB,"|",1)=LRY
"RTN","LRMLED",325,0)
 Q LRSTUB
"RTN","LRMLED",326,0)
 ;
"RTN","LRMLED",327,0)
EOUT ; quit
"RTN","LRMLED",328,0)
 L -^TMP(LR60IEN,LRS)
"RTN","LRMLED",329,0)
 K LXA,LXB,LXC,LXD,LXE,LXF,LXG,LXH,A,LR60IEN,DA,DIC,DIQ,B,C,D,LRS,LSITE,LRNT,LRNTI,AR,I,LRMLTFREC
"RTN","LRMLED",330,0)
 K LRSITE,LRSITEN,LRGMAIL,LRSMAIL,LRNMAIL,LACT,MAILPERSON,LR64,LRNLT,LRSEC,LRCOM,LRCTY,LRNEWTEST,LRSUBSCRIPT
"RTN","LRMLED",331,0)
 K LRNOS1,LRNOS2,LRSCHPA,LRSCHNM,ALI,LRTEXT,LR64N,LRDTNM,G
"RTN","LRMLED",332,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLED",333,0)
 Q
"RTN","LRMLED",334,0)
 ;
"RTN","LRMLED",335,0)
 ; This section is called by the NEW Record cross references in file 60
"RTN","LRMLED",336,0)
 ; CR 489 for BED (base level edit) and SITE/SPECIMEN sub Level 490 for SED
"RTN","LRMLED",337,0)
 ;
"RTN","LRMLED",338,0)
BED(LR60IEN) ;ENTRY POINT FOR MAIN EDITS
"RTN","LRMLED",339,0)
 ;
"RTN","LRMLED",340,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC,LRN,LRO
"RTN","LRMLED",341,0)
 M LRO=X1,LRN=X2
"RTN","LRMLED",342,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save from file 60 Cross Reference #489"
"RTN","LRMLED",343,0)
 S ZTRTN="BEDA^LRMLED("_LR60IEN_")",ZTSAVE("LR60IEN")=""
"RTN","LRMLED",344,0)
 S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLED",345,0)
 S ZTIO=""
"RTN","LRMLED",346,0)
 D ^%ZTLOAD
"RTN","LRMLED",347,0)
 Q
"RTN","LRMLED",348,0)
 ;
"RTN","LRMLED",349,0)
BEDA(LRDA) ; edits from main level
"RTN","LRMLED",350,0)
 Q:$D(LRMLTFREC)
"RTN","LRMLED",351,0)
 ; (1)-3 TYPE (2)-131 CREATION DATE (3)-133 TEST INACTIVE DATE
"RTN","LRMLED",352,0)
 ; X1-old array  X2-new array
"RTN","LRMLED",353,0)
 N A,B,C,D,E,F,G,I,DA,LO,LN,LE,LLI,LTYP
"RTN","LRMLED",354,0)
 M A=DR S D=0
"RTN","LRMLED",355,0)
 N DR,DIE,DIC,X
"RTN","LRMLED",356,0)
 F I=1:1:3 S F=$G(LRO(I)),G=$G(LRN(I)) I F'=G S D=1
"RTN","LRMLED",357,0)
 I 'D G BEDO
"RTN","LRMLED",358,0)
 F LLI=1:1:3 S LO=$G(LRO(LLI)),LN=$G(LRN(LLI)) I LO'=LN S LTYP=$S(LLI=1:"Y",LLI=2:"C",1:"T") D  D SAV
"RTN","LRMLED",359,0)
 . ; I LTYP="C"!(LTYP="T") S:+LO>0 LO=$$FMTE^XLFDT(LO,9) S:+LN>0 LN=$$FMTE^XLFDT(LN,9)
"RTN","LRMLED",360,0)
 G BEDO
"RTN","LRMLED",361,0)
 ;
"RTN","LRMLED",362,0)
BEDO K A,B,C,D,E,I,X,DA,LRN,LRO,LO,LN,LE,LLI,DR,DIE,DIC,LRMLTFREC,LTYP
"RTN","LRMLED",363,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLED",364,0)
 Q
"RTN","LRMLED",365,0)
 ;
"RTN","LRMLED",366,0)
SAV ; file edit in 60.28
"RTN","LRMLED",367,0)
 N DR,DIE,DIC,X,DA,Y,LRMLTFREC,LE
"RTN","LRMLED",368,0)
 S DA(1)=LRDA,DA=0,LRMLTFREC=1
"RTN","LRMLED",369,0)
 S LE="^LAB(60,"_DA(1)_",15,",DIC=LE,DIC(0)="QEAL"
"RTN","LRMLED",370,0)
 S X=$$NOW^XLFDT
"RTN","LRMLED",371,0)
 L +^LAB(60,DA(1),15):30 I '$T Q
"RTN","LRMLED",372,0)
 D FILE^DICN
"RTN","LRMLED",373,0)
 L -^LAB(60,DA(1),15)
"RTN","LRMLED",374,0)
 I Y="-1" Q
"RTN","LRMLED",375,0)
 S DIE=LE,DA=+Y
"RTN","LRMLED",376,0)
 S DR=".02///"_+$G(DUZ)_";.03///"_LTYP_";.04///"_LO_";.05///"_LN
"RTN","LRMLED",377,0)
 D ^DIE
"RTN","LRMLED",378,0)
 K DR,DIE,DIC,X,DA,Y,LRMLTFREC,LE
"RTN","LRMLED",379,0)
 Q
"RTN","LRMLED",380,0)
 ;
"RTN","LRMLED",381,0)
SED(LR6001IEN,LR60IEN) ;ENTRY POINT FOR MAIN SITE/SPECIMEN EDITS
"RTN","LRMLED",382,0)
 ;
"RTN","LRMLED",383,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC,LRN,LRO
"RTN","LRMLED",384,0)
 M LRO=X1,LRN=X2
"RTN","LRMLED",385,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save from file 60 Cross Reference #490"
"RTN","LRMLED",386,0)
 S ZTRTN="SEDA^LRMLED("_LR6001IEN_","_LR60IEN_")",ZTSAVE("LR60IEN")="",ZTSAVE("LR6001IEN")=""
"RTN","LRMLED",387,0)
 S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLED",388,0)
 S ZTIO=""
"RTN","LRMLED",389,0)
 D ^%ZTLOAD
"RTN","LRMLED",390,0)
 Q
"RTN","LRMLED",391,0)
 ;
"RTN","LRMLED",392,0)
SEDA(LRDA,LRDA1) ; edits from site/specimen level
"RTN","LRMLED",393,0)
 ; (1)-30 MLTF VUID (2)-RESULT/SPECIMEN INACTIVE DATE (3)-EXCEPTION FLAG (4)-SPECIMEN CREATE DATE
"RTN","LRMLED",394,0)
 ; X1-old array  X2-new array
"RTN","LRMLED",395,0)
 Q:$D(LRMLTFREC)
"RTN","LRMLED",396,0)
 N A,B,C,D,E,F,DA,LLI,LTYP
"RTN","LRMLED",397,0)
 M A=DR
"RTN","LRMLED",398,0)
 N DR,DIE,DIC,X
"RTN","LRMLED",399,0)
 S D="" F I=1:1:4 S E=$G(LRO(I)),F=$G(LRN(I)) I E'=F S D=1
"RTN","LRMLED",400,0)
 I 'D G BEDO
"RTN","LRMLED",401,0)
 F LLI=1:1:4 S LO=$G(LRO(LLI)),LN=$G(LRN(LLI)) I LO'=LN S LTYP=$S(LLI=1:"M",LLI=2:"R",LLI=3:"E",1:"S") D  D SSAV
"RTN","LRMLED",402,0)
 . ; I LTYP="R"!(LTYP="S") S:+LO>0 LO=$$FMTE^XLFDT(LO,9) S:+LN>0 LN=$$FMTE^XLFDT(LN,9)
"RTN","LRMLED",403,0)
 G BEDO
"RTN","LRMLED",404,0)
 Q
"RTN","LRMLED",405,0)
 ;
"RTN","LRMLED",406,0)
SSAV ; file edit in 60.28
"RTN","LRMLED",407,0)
 N DR,DIE,DIC,X,DA,Y,LRMLTFREC,LE
"RTN","LRMLED",408,0)
 S DA(1)=LRDA1,DA=0,LRMLTFREC=1
"RTN","LRMLED",409,0)
 S LE="^LAB(60,"_DA(1)_",15,",DIC=LE,DIC(0)="QEAL"
"RTN","LRMLED",410,0)
 S X=$$NOW^XLFDT
"RTN","LRMLED",411,0)
 L +^LAB(60,DA(1),15):30 I '$T Q
"RTN","LRMLED",412,0)
 D FILE^DICN
"RTN","LRMLED",413,0)
 L -^LAB(60,DA(1),15)
"RTN","LRMLED",414,0)
 I Y="-1" Q
"RTN","LRMLED",415,0)
 S DIE=LE,DA=+Y
"RTN","LRMLED",416,0)
 S DR=".02///"_+$G(DUZ)_";.03///"_LTYP_";.04///"_LO_";.05///"_LN_";.06///"_LRDA
"RTN","LRMLED",417,0)
 D ^DIE
"RTN","LRMLED",418,0)
 K DR,DIE,DIC,X,DA,Y,LRMLTFREC,LE
"RTN","LRMLED",419,0)
 Q
"RTN","LRMLED",420,0)
 ;
"RTN","LRMLED",421,0)
GET664 ; get file 66.4 info
"RTN","LRMLED",422,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLED",423,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLED",424,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRMLED",425,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRMLED",426,0)
 Q
"RTN","LRMLED",427,0)
 ;
"RTN","LRMLED",428,0)
GET60T ; get top of file 60 test info
"RTN","LRMLED",429,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;131" K ^UTILITY("DIQ1",$J) D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLED",430,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLED",431,0)
 Q
"RTN","LRMLED",432,0)
 ;
"RTN","LRMLEDA")
0^2^B165026309^B133294860
"RTN","LRMLEDA",1,0)
LRMLEDA ;BPFO/DTG - NTRT MESSAGE PROCESS AND EDITS UPDATE ;12/26/2017
"RTN","LRMLEDA",2,0)
 ;;5.2;LAB SERVICE;**468,500**;Sep 27, 1994;Build 29
"RTN","LRMLEDA",3,0)
 ;
"RTN","LRMLEDA",4,0)
 ; This section is for sending the XML message to ISAAC via HTTP/HTTPS
"RTN","LRMLEDA",5,0)
 ;
"RTN","LRMLEDA",6,0)
 ; first we save to ^XTMP
"RTN","LRMLEDA",7,0)
 Q
"RTN","LRMLEDA",8,0)
EN ; XTMP save
"RTN","LRMLEDA",9,0)
 N LRXTMPNM,LRXTMPNUM,CNT,LRNTRTSAV
"RTN","LRMLEDA",10,0)
 S CNT=0
"RTN","LRMLEDA",11,0)
ENA S LRXTMPNM="LRNTRTSAV"
"RTN","LRMLEDA",12,0)
 L +^XTMP(LRXTMPNM):30 I '$T H 10 S CNT=CNT+1 G ENA:CNT<11,ENO
"RTN","LRMLEDA",13,0)
 S ^XTMP(LRXTMPNM,0)=$$FMADD^XLFDT(DT,365)_U_$$NOW^XLFDT()_U_"Lab New Term to NTRT STS XML"
"RTN","LRMLEDA",14,0)
 S LRXTMPNUM=$G(^XTMP(LRXTMPNM,"CTRL")),LRXTMPNUM=LRXTMPNUM+1,^XTMP(LRXTMPNM,"CTRL")=LRXTMPNUM
"RTN","LRMLEDA",15,0)
 L -^XTMP(LRXTMPNM)
"RTN","LRMLEDA",16,0)
 S CNT=0
"RTN","LRMLEDA",17,0)
 ; LRTEXT is the built XML send array
"RTN","LRMLEDA",18,0)
 ; LR60IEN is the file 60 test IEN
"RTN","LRMLEDA",19,0)
 ; LRS is the Specimen IEN from the 60 specimen multiple (60.01)
"RTN","LRMLEDA",20,0)
 ; LRDUZ is the DUZ of the person saving the test/specimen item
"RTN","LRMLEDA",21,0)
ENL L +^XTMP(LRXTMPNM,"SEND",LRXTMPNUM):20 I '$T H 2 S CNT=CNT+1 G ENL:CNT<11,ENO
"RTN","LRMLEDA",22,0)
 M ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"I")=LRTEXT
"RTN","LRMLEDA",23,0)
 S ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"DUZ")=LRDUZ
"RTN","LRMLEDA",24,0)
 S ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"LR60IEN")=LR60IEN
"RTN","LRMLEDA",25,0)
 S ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"LRS")=LRS
"RTN","LRMLEDA",26,0)
 S ^XTMP(LRXTMPNM,"SEND",LRXTMPNUM,"ERROR")=0
"RTN","LRMLEDA",27,0)
 L -^XTMP(LRXTMPNM,"SEND",LRXTMPNUM)
"RTN","LRMLEDA",28,0)
ENSL L +^XTMP(LRXTMPNM,"O"):5 I '$T G ENO
"RTN","LRMLEDA",29,0)
 N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLEDA",30,0)
 S LRNTRTSAV="LRNTRTSAV"
"RTN","LRMLEDA",31,0)
 S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Send NTRT message to ISAAC"
"RTN","LRMLEDA",32,0)
 S ZTSAVE("LRXTMPNM")=""
"RTN","LRMLEDA",33,0)
 S ZTRTN="XMLSND^LRMLEDA",ZTIO=""
"RTN","LRMLEDA",34,0)
 D ^%ZTLOAD
"RTN","LRMLEDA",35,0)
 L -^XTMP(LRXTMPNM,"O")
"RTN","LRMLEDA",36,0)
 K ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLEDA",37,0)
ENO K LRXTMPNM,LRXTMPNUM,CNT,LRNTRTSAV
"RTN","LRMLEDA",38,0)
 Q
"RTN","LRMLEDA",39,0)
 ;
"RTN","LRMLEDA",40,0)
 ; entry to send messages to ISAAC
"RTN","LRMLEDA",41,0)
 ;
"RTN","LRMLEDA",42,0)
XMLSND ;
"RTN","LRMLEDA",43,0)
 N CNT,A,B,C,LRT,LRDUZ,LRG,LRS,LR60IEN,LRA,LRTEXT,LRRDAT,LRSDAT,LRRHD,LRSHD,LRFLG,LRMETH,URL,LRXTVER
"RTN","LRMLEDA",44,0)
 N LSITE,LRNT,LRNTI,AR,LRNMAIL,LRGMAIL,LRIS,LRPRT,LRIPATH,LXA,LXB,LRNOS1,LRNOS2,LRERR,LRDUZ,LRXTMPNM
"RTN","LRMLEDA",45,0)
 N AB,CC,DA,DIC,DIQ,DR,E,LACT,LRNOS3,LRSITEN,LXC,STATUS,XMDUZ,XMY,XMSUB,XMTEXT
"RTN","LRMLEDA",46,0)
 S CNT=0,LRXTMPNM="LRNTRTSAV"
"RTN","LRMLEDA",47,0)
X1 L +^XTMP(LRXTMPNM,"O"):20 I '$T S CNT=CNT+1 G X1:CNT<11,XMLOUT
"RTN","LRMLEDA",48,0)
 I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLEDA",49,0)
 ; get file 66.4 current info
"RTN","LRMLEDA",50,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLEDA",51,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLEDA",52,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRMLEDA",53,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRMLEDA",54,0)
 ;site number and name
"RTN","LRMLEDA",55,0)
 S LRSITE=$G(LRNTI(.01,"I")),LRSITEN=$G(LRNTI(.01,"E"))
"RTN","LRMLEDA",56,0)
 ;ntrt mail group
"RTN","LRMLEDA",57,0)
 S LRNMAIL=$G(LRNTI(1,"I"))
"RTN","LRMLEDA",58,0)
 ;lab send mail group
"RTN","LRMLEDA",59,0)
 S LRGMAIL=$G(LRNTI(2,"I"))
"RTN","LRMLEDA",60,0)
 ;how to send mail
"RTN","LRMLEDA",61,0)
 S LACT=$G(LRNTI(.02,"E"))
"RTN","LRMLEDA",62,0)
 ; Isaac web address
"RTN","LRMLEDA",63,0)
 S LRIS=$G(LRNTI(4,"I"))
"RTN","LRMLEDA",64,0)
 S AA=$$XUP(LRIS) S:$E(AA,1,4)="HTTP" LRIS=$P(LRIS,"//",2,999) S:$E(LRIS,($L(LRIS)))="/" LRIS=$E(LRIS,1,($L(LRIS)-1))
"RTN","LRMLEDA",65,0)
 ; Isaac port number
"RTN","LRMLEDA",66,0)
 S LRPRT=$G(LRNTI(5,"I"))
"RTN","LRMLEDA",67,0)
 ; Isaac path
"RTN","LRMLEDA",68,0)
 S LRIPATH=$G(LRNTI(6,"I")) I LRIPATH'="" D  ;<
"RTN","LRMLEDA",69,0)
 . S LRIPATH=$TR(LRIPATH,"~","/")
"RTN","LRMLEDA",70,0)
 . S:$E(LRIPATH,1)'="/" LRIPATH="/"_LRIPATH
"RTN","LRMLEDA",71,0)
 S URL=LRIS_":"_LRPRT_LRIPATH
"RTN","LRMLEDA",72,0)
 ; if web address or port number are nill do not send
"RTN","LRMLEDA",73,0)
 S LRNOS3=0 I $G(LRNTI(4,"I"))=""!($G(LRNTI(5,"I"))="") S LRNOS3=1
"RTN","LRMLEDA",74,0)
 ;if no send method
"RTN","LRMLEDA",75,0)
 S LRNOS1=0 I LACT=""!(LACT="N")!($G(LRNTI(.05,"I"))="N")!($G(LRNTI(.1,"I"))'=1) S LRNOS1=1
"RTN","LRMLEDA",76,0)
 S AA=$$XUP(LRGMAIL)
"RTN","LRMLEDA",77,0)
 ; if not production or not VA
"RTN","LRMLEDA",78,0)
 S LRNOS2=0 I '$$PROD^XUPROD()!(AA'["DOMAIN.EXT") S LRNOS2=1
"RTN","LRMLEDA",79,0)
 ;
"RTN","LRMLEDA",80,0)
 S LRA=0,LRXTVER=1+($$PATCH^XPDUTL("XT*7.3*138"))
"RTN","LRMLEDA",81,0)
 S LRFLG=10
"RTN","LRMLEDA",82,0)
X2 S LRA=$O(^XTMP(LRXTMPNM,"SEND",LRA)) I 'LRA L -^XTMP(LRXTMPNM,"O") G XMLOUT
"RTN","LRMLEDA",83,0)
 S CNT=0
"RTN","LRMLEDA",84,0)
X2A L +^XTMP(LRXTMPNM,"SEND",LRA):5 I '$T S CNT=CNT+1 G X2A:CNT<11,XMLOUT
"RTN","LRMLEDA",85,0)
 K LRT,LRRHD,LRRHD,LRSDAT,LRSHD,REDIR
"RTN","LRMLEDA",86,0)
 S (LRRHD,LRSHD,LRRDAT)=""
"RTN","LRMLEDA",87,0)
 S REDIR=0,LRSHD("CONTENT-TYPE")="application/xml",STATUS=""
"RTN","LRMLEDA",88,0)
 M LRT=^XTMP(LRXTMPNM,"SEND",LRA,"I")
"RTN","LRMLEDA",89,0)
 S LRDUZ=^XTMP(LRXTMPNM,"SEND",LRA,"DUZ"),LR60IEN=^XTMP(LRXTMPNM,"SEND",LRA,"LR60IEN")
"RTN","LRMLEDA",90,0)
 S LRS=^XTMP(LRXTMPNM,"SEND",LRA,"LRS"),LRERR=^XTMP(LRXTMPNM,"SEND",LRA,"ERROR")
"RTN","LRMLEDA",91,0)
 ; File 60 test info
"RTN","LRMLEDA",92,0)
 ; .01 test name, 4 subscript (CH), 5 data name, 13 field (DD of 5), 64.1 result nlt code
"RTN","LRMLEDA",93,0)
 S DA=+LR60IEN
"RTN","LRMLEDA",94,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;4;64.1;5;13;132;133" K ^UTILITY("DIQ1",$J) D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLEDA",95,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLEDA",96,0)
 ; get file 60 Test/Specimen info
"RTN","LRMLEDA",97,0)
 S DIQ="LXB",DIQ(0)="IE",DIC=60,DR=100,DA=+LR60IEN K LXB,^UTILITY("DIQ1",$J)
"RTN","LRMLEDA",98,0)
 S DR(60.01)=".01;6;1;2;9.2;9.3;13;30;32;33;34;35",DA(60.01)=LRS
"RTN","LRMLEDA",99,0)
 D EN^DIQ1 K ^UTILITY("DIQ1",$J)
"RTN","LRMLEDA",100,0)
 K LXC M LXC=LXB("60.01",LRS) K LXB
"RTN","LRMLEDA",101,0)
 ; do not try if failed 10 times
"RTN","LRMLEDA",102,0)
 I LRERR>9 D XMERR G X2
"RTN","LRMLEDA",103,0)
 ;
"RTN","LRMLEDA",104,0)
 ; check if ok to send a message
"RTN","LRMLEDA",105,0)
 I LRNOS1=1!(LRNOS2=1)!(LRNOS3=1) D NOTVALID G X2
"RTN","LRMLEDA",106,0)
 ;
"RTN","LRMLEDA",107,0)
 S STATUS=$$GETURL^XTHC10(URL,LRFLG,"LRRDAT",.LRRHD,"LRT",.LRSHD,$G(REDIR)+1)
"RTN","LRMLEDA",108,0)
 S A=$TR(STATUS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRMLEDA",109,0)
 I A["OK"!(A["ACCEPTED") D  G X2
"RTN","LRMLEDA",110,0)
 .; send message to order and group that message was sent to ISAAC NTRT
"RTN","LRMLEDA",111,0)
 . K XMY,LRTEXT
"RTN","LRMLEDA",112,0)
 . S XMSUB="NEW NTRT REQUEST FOR LABORATORY HAS BEEN SENT"
"RTN","LRMLEDA",113,0)
 . S XMY(LRDUZ)=""
"RTN","LRMLEDA",114,0)
 . S XMDUZ("AUTO ISAAC NTRT PROCESS")="" I LRGMAIL'="" S XMY($P(LRGMAIL,"@",1))=""
"RTN","LRMLEDA",115,0)
 . S LRTEXT(1)="A new Laboratory Test has been entered at: "_LRSITEN_" / "_LRSITE
"RTN","LRMLEDA",116,0)
 . S LRTEXT(2)=""
"RTN","LRMLEDA",117,0)
 . S LRTEXT(3)="Laboratory Test Name / Specimen name: "_$G(LXA(.01,"I"))_" / "_$G(LXC(.01,"E"))
"RTN","LRMLEDA",118,0)
 . S LRTEXT(4)=""
"RTN","LRMLEDA",119,0)
 . S LRTEXT(5)="Send Status: "_STATUS
"RTN","LRMLEDA",120,0)
 . S LRTEXT(6)=""
"RTN","LRMLEDA",121,0)
 . S A=0,B="",I=6 F  S A=$O(LRRDAT(A)) Q:'A  S B=$G(LRRDAT(A)) S:B'="" I=I+1,LRTEXT(I)="ISAAC Reference Information: "_B
"RTN","LRMLEDA",122,0)
 . S LRTEXT(I+1)=""
"RTN","LRMLEDA",123,0)
 . S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRMLEDA",124,0)
 . ;put exception flag in 60 file
"RTN","LRMLEDA",125,0)
 . ; since making exception flag uneditable must do physical set
"RTN","LRMLEDA",126,0)
 . N A,B,LRO,LRN,I S A=$G(^LAB(60,LR60IEN,1,LRS,5)),B=A,$P(B,U,3)="Y",^LAB(60,LR60IEN,1,LRS,5)=B
"RTN","LRMLEDA",127,0)
 . ; need to build array for saving in audit section
"RTN","LRMLEDA",128,0)
 . F I=1,2,4 S LRO(I)="",LRN(I)=""
"RTN","LRMLEDA",129,0)
 . S LRO(3)=$P(A,U,3),LRN(3)=$P(B,U,3) D  ;<
"RTN","LRMLEDA",130,0)
 . . N ZTDTH,ZTRTN,ZTSAVE,ZTIO,ZTSK,ZTDESC
"RTN","LRMLEDA",131,0)
 . . S ZTDTH=$$NOW^XLFDT,ZTDESC="LAB Edit Save of Deployed Flag"
"RTN","LRMLEDA",132,0)
 . . S ZTRTN="SEDA^LRMLED("_LRS_","_LR60IEN_")",ZTSAVE("LR60IEN")="",ZTSAVE("LRS")=""
"RTN","LRMLEDA",133,0)
 . . S ZTSAVE("LRN(")="",ZTSAVE("LRO(")=""
"RTN","LRMLEDA",134,0)
 . . S ZTIO=""
"RTN","LRMLEDA",135,0)
 . . D ^%ZTLOAD
"RTN","LRMLEDA",136,0)
 . ; remove item from send
"RTN","LRMLEDA",137,0)
 . S ^XTMP(LRXTMPNM,"DONE",LRA)=LR60IEN_U_LRS_$$NOW^XLFDT_U_LRDUZ
"RTN","LRMLEDA",138,0)
 . K ^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",139,0)
 . L -^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",140,0)
 . ;
"RTN","LRMLEDA",141,0)
 S LRERR=LRERR+1,^XTMP(LRXTMPNM,"SEND",LRA,"ERROR")=LRERR,^XTMP(LRXTMPNM,"SEND",LRA,"ERROR",LRERR)=STATUS
"RTN","LRMLEDA",142,0)
 L -^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",143,0)
 G X2
"RTN","LRMLEDA",144,0)
 ;
"RTN","LRMLEDA",145,0)
XMLOUT K CNT,A,B,C,LRT,LRDUZ,LRG,LRS,LR60IEN,LRA,LRTEXT,LRRDAT,LRSDAT,LRRHD,LRSHD,LRFLG,LRMETH,URL,LRXTVER
"RTN","LRMLEDA",146,0)
 K LSITE,LRNT,LRNTI,AR,LRNMAIL,LRGMAIL,LRIS,LRPRT,LRIPATH,LXA,LXB,LRNOS1,LRNOS2,LRERR,LRDUZ,AA,LRXTMPNM
"RTN","LRMLEDA",147,0)
 K AB,CC,DA,DIC,DIQ,DR,E,LACT,LRNOS3,LRSITEN,LXC,STATUS,XMDUZ,XMY,XMSUB,XMTEXT
"RTN","LRMLEDA",148,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRMLEDA",149,0)
 Q
"RTN","LRMLEDA",150,0)
 ;
"RTN","LRMLEDA",151,0)
XUP(UP) ;change to upper case
"RTN","LRMLEDA",152,0)
 I UP="" Q ""
"RTN","LRMLEDA",153,0)
 N A
"RTN","LRMLEDA",154,0)
 S A=$TR(UP,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRMLEDA",155,0)
 Q A
"RTN","LRMLEDA",156,0)
 ;
"RTN","LRMLEDA",157,0)
XMERR ; If error count is above 9 send message to LIM that request did not go out and include request in message
"RTN","LRMLEDA",158,0)
 ;
"RTN","LRMLEDA",159,0)
 K XMY,LRTEXT
"RTN","LRMLEDA",160,0)
 S XMSUB="NOT ABLE TO SEND NEW NTRT REQUEST FOR LABORATORY"
"RTN","LRMLEDA",161,0)
 S XMY(LRDUZ)=""
"RTN","LRMLEDA",162,0)
 S XMDUZ("AUTO ISAAC NTRT PROCESS")="" I LRGMAIL'="" S XMY($P(LRGMAIL,"@",1))=""
"RTN","LRMLEDA",163,0)
 S LRTEXT(1)="A new Laboratory Test has been entered at: "_LRSITEN_" / "_LRSITE
"RTN","LRMLEDA",164,0)
 S LRTEXT(2)=""
"RTN","LRMLEDA",165,0)
 S LRTEXT(3)="Laboratory Test Name / Specimen name: "_$G(LXA(.01,"I"))_" / "_$G(LXC(.01,"E"))
"RTN","LRMLEDA",166,0)
 S LRTEXT(4)=""
"RTN","LRMLEDA",167,0)
 ; the error statuses
"RTN","LRMLEDA",168,0)
 S A=0,C=5 F  S A=$O(^XTMP(LRXTMPNM,"SEND",LRA,"ERROR",A)) Q:'A  S B=^XTMP(LRXTMPNM,"SEND",LRA,"ERROR",A) D  ;<
"RTN","LRMLEDA",169,0)
 . S LRTEXT(C)="Error number: "_A_" Error Reason: "_B,LRTEXT(C+1)=""
"RTN","LRMLEDA",170,0)
 . S C=C+2
"RTN","LRMLEDA",171,0)
 S LRTEXT(C)="Original Message Contents:",LRTEXT(C+1)="",C=C+2
"RTN","LRMLEDA",172,0)
 S A=0 F  S A=$O(LRT(A)) Q:'A  S B=LRT(A),LRTEXT(C)=B,C=C+1
"RTN","LRMLEDA",173,0)
 S LRTEXT(C)=""
"RTN","LRMLEDA",174,0)
 S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRMLEDA",175,0)
 M ^XTMP(LRXTMPNM,"NOTSENT",LRA)=^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",176,0)
 K ^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",177,0)
 L -^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",178,0)
 Q
"RTN","LRMLEDA",179,0)
 ;
"RTN","LRMLEDA",180,0)
NOTVALID ; if not valid to send to ISAAC then only send MAILMAN message to 
"RTN","LRMLEDA",181,0)
 K XMY,LRTEXT
"RTN","LRMLEDA",182,0)
 S XMSUB="NOT ABLE TO SEND NEW NTRT REQUEST FOR LABORATORY"
"RTN","LRMLEDA",183,0)
 S XMY(LRDUZ)=""
"RTN","LRMLEDA",184,0)
 S XMDUZ("AUTO ISAAC NTRT PROCESS")="" I LRGMAIL'="" S XMY($P(LRGMAIL,"@",1))=""
"RTN","LRMLEDA",185,0)
 S LRTEXT(1)="A new Laboratory Test has been entered at: "_LRSITEN_" / "_LRSITE
"RTN","LRMLEDA",186,0)
 S LRTEXT(2)=""
"RTN","LRMLEDA",187,0)
 S LRTEXT(3)="Laboratory Test Name / Specimen name: "_$G(LXA(.01,"I"))_" / "_$G(LXC(.01,"E"))
"RTN","LRMLEDA",188,0)
 S LRTEXT(4)=""
"RTN","LRMLEDA",189,0)
 S LRTEXT(5)=" ** This message was not sent to ISAAC due to one of the following reasons: **"
"RTN","LRMLEDA",190,0)
 S C=5
"RTN","LRMLEDA",191,0)
 S A="",B="",CC="",D="",E="" S:LRNOS1=1 A="No Send Location" S:'$$PROD^XUPROD() B="Not a Production System" S:AA'["DOMAIN.EXT" CC="Not a VA System"
"RTN","LRMLEDA",192,0)
 I LRNOS3=1 S:$G(LRNTI(4,"I"))="" D="Missing ISAAC Web Address" S:$G(LRNTI(5,"I"))="" E="Missing ISAAC Port Number"
"RTN","LRMLEDA",193,0)
 I B'=""!(C'="") D  ;<
"RTN","LRMLEDA",194,0)
 . F I="A","B","CC","D","E" S AB=$G(@I) I AA'="" S C=C+1,LRTEXT(C)=AB
"RTN","LRMLEDA",195,0)
 . ; I B'="" S:A'="" A=A_" , " S A=A_B
"RTN","LRMLEDA",196,0)
 . ; I CC'="" S:A'="" A=A_" , " S A=A_CC
"RTN","LRMLEDA",197,0)
 . ; I D'="" S:A'="" A=A_" , " S A=A_D
"RTN","LRMLEDA",198,0)
 . ; I E'="" S:A'="" A=A_" , " S A=A_E
"RTN","LRMLEDA",199,0)
 ; S LRTEXT(6)=A,LRTEXT(7)="",C=8
"RTN","LRMLEDA",200,0)
 S C=C+1,LRTEXT(C)="",C=C+1
"RTN","LRMLEDA",201,0)
 S LRTEXT(C)="Original Message Contents:",LRTEXT(C+1)="",C=C+2
"RTN","LRMLEDA",202,0)
 S A=0 F  S A=$O(LRT(A)) Q:'A  S B=LRT(A),LRTEXT(C)=B,C=C+1
"RTN","LRMLEDA",203,0)
 S LRTEXT(C)=""
"RTN","LRMLEDA",204,0)
 S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRMLEDA",205,0)
 K ^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",206,0)
 L -^XTMP(LRXTMPNM,"SEND",LRA)
"RTN","LRMLEDA",207,0)
 Q
"RTN","LRMLEDA",208,0)
 ;
"RTN","LRMLEDA",209,0)
CHKACT(FILIEN) ; check if 66.3 item is active
"RTN","LRMLEDA",210,0)
 ;
"RTN","LRMLEDA",211,0)
 N A,B,C,D
"RTN","LRMLEDA",212,0)
 I 'FILIEN Q "0"
"RTN","LRMLEDA",213,0)
 S (A,B,C)=""
"RTN","LRMLEDA",214,0)
 S A=$O(^LRMLTF(FILIEN,"TERMSTATUS",9999999),-1) I 'A Q "0"
"RTN","LRMLEDA",215,0)
 S B=$G(^LRMLTF(FILIEN,"TERMSTATUS",A,0))
"RTN","LRMLEDA",216,0)
 I $P(B,U,2)=1 Q "1"
"RTN","LRMLEDA",217,0)
 Q "0"
"RTN","LRMLEDA",218,0)
 ;
"RTN","LRMLEDA",219,0)
XML ;send xml to NTRT
"RTN","LRMLEDA",220,0)
 ; moved here from LRMLED
"RTN","LRMLEDA",221,0)
 S ALI=0 K LRTEXT
"RTN","LRMLEDA",222,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=$$XMLHDR^MXMLUTL()
"RTN","LRMLEDA",223,0)
 ; get the schemea name and the schema path
"RTN","LRMLEDA",224,0)
 S LRSCHNM=$G(LRNTI(7,"I")),LRSCHPA=$G(LRNTI(8,"I"))
"RTN","LRMLEDA",225,0)
 S A=$TR(LRSCHNM,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRMLEDA",226,0)
 I LRSCHNM'=""&($E(A,($L(A)-4),$L(A))'[".XSD") S LRSCHNM=LRSCHNM_".XSD"
"RTN","LRMLEDA",227,0)
 I LRSCHPA'="" D  ;<
"RTN","LRMLEDA",228,0)
 . S LRSCHPA=$TR(LRSCHPA,"~","/")
"RTN","LRMLEDA",229,0)
 . I $E(LRSCHPA,1,2)'="//" S LRSCHPA="//"_LRSCHPA
"RTN","LRMLEDA",230,0)
 . I $E(LRSCHPA,$L(LRSCHPA))'="/" S LRSCHPA=LRSCHPA_"/"
"RTN","LRMLEDA",231,0)
 S A="uri:"_LRSCHPA_LRSCHNM
"RTN","LRMLEDA",232,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<DATAEXTRACTS xmlns="""_A_""" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""
"RTN","LRMLEDA",233,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)=">"
"RTN","LRMLEDA",234,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<LAB_NTRT>"
"RTN","LRMLEDA",235,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Facility_Name-Number>"_LRSITEN_" - "_LRSITE_"</Facility_Name-Number>"
"RTN","LRMLEDA",236,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Facility_Group_e-mail>"_LRGMAIL_"</Facility_Group_e-mail>"
"RTN","LRMLEDA",237,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<New_Laboratory_Test_Name>"_$G(LXA(.01,"I"))_"</New_Laboratory_Test_Name>"
"RTN","LRMLEDA",238,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<New_Laboratory_Test_LOCAL_IEN>"_(+LR60IEN)_"</New_Laboratory_Test_LOCAL_IEN>"
"RTN","LRMLEDA",239,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Laboratory_Test_Site-Specimen_Number_IEN>"_$G(LXC(.01,"I"))_"</Laboratory_Test_Site-Specimen_Number_IEN>"
"RTN","LRMLEDA",240,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Laboratory_Test_Site-Specimen_Name>"_$G(LXC(.01,"E"))_"</Laboratory_Test_Site-Specimen_Name>"
"RTN","LRMLEDA",241,0)
 S B="",A=$G(LXC(.01,"I")) I A S A=$G(^LAB(61,A,0)),B=$P(A,U,10) I +B>0 S B=$P($G(^LAB(64.061,B,0)),U,1)
"RTN","LRMLEDA",242,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Spec>"_$P(A,U,1)_"</Spec>"
"RTN","LRMLEDA",243,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Time_Aspect>"_B_"</Time_Aspect>"
"RTN","LRMLEDA",244,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Units>"_$G(LXC(6,"I"))_"</Units>"
"RTN","LRMLEDA",245,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<RNLT>"_LRNLT_"</RNLT>"
"RTN","LRMLEDA",246,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Lab_Section>"_LRSEC_"</Lab_Section>"
"RTN","LRMLEDA",247,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Subscript>"_$G(LXA(4,"I"))_"</Subscript>"
"RTN","LRMLEDA",248,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Data_Name>"_LRDTNM_"</Data_Name>"
"RTN","LRMLEDA",249,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Data_Comment>"_LRCOM_"</Data_Comment>"
"RTN","LRMLEDA",250,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Data_Type>"_LRCTY_"</Data_Type>"
"RTN","LRMLEDA",251,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Reference_Low>"_$G(LXC(1,"I"))_"</Reference_Low>"
"RTN","LRMLEDA",252,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Reference_High>"_$G(LXC(2,"I"))_"</Reference_High>"
"RTN","LRMLEDA",253,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Therapeutic_Low>"_$G(LXC(9.2,"I"))_"</Therapeutic_Low>"
"RTN","LRMLEDA",254,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Therapeutic_High>"_$G(LXC(9.3,"I"))_"</Therapeutic_High>"
"RTN","LRMLEDA",255,0)
 ;get synonyms
"RTN","LRMLEDA",256,0)
 K B S A=0 F I=0:1 S A=$O(^LAB(60,DA,5,A)) Q:'A  S B(I)=$P(^LAB(60,DA,5,A,0),U,1)
"RTN","LRMLEDA",257,0)
 I I>0 S B=I-1 F I=0:1:B S LXG=B(I) S:LXG'="" ALI=$$LRTP(ALI),LRTEXT(ALI)="<Test_Synonyms>"_LXG_"</Test_Synonyms>"
"RTN","LRMLEDA",258,0)
 ; specimen interpretation
"RTN","LRMLEDA",259,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLEDA",260,0)
 S E=0 F I=1:1 S E=$O(LXE(E)) Q:'E  S G=LXE(E),ALI=$$LRTP(ALI),LRTEXT(ALI)="<Specimen_Interpretation>"_$$CHKCHAR(G)_"</Specimen_Interpretation>"
"RTN","LRMLEDA",261,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Test_Creation_Date>"_$G(LXA(131,"E"))_"</Test_Creation_Date>"
"RTN","LRMLEDA",262,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Specimen_Create_Date>"_$G(LXC(35,"E"))_"</Specimen_Create_Date>"
"RTN","LRMLEDA",263,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<In-House_Test>"_$G(LXA(134,"E"))_"</In-House_Test>"
"RTN","LRMLEDA",264,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<POC_Test>"_$G(LXA(135,"E"))_"</POC_Test>"
"RTN","LRMLEDA",265,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Scanned_Image_Test>"_$G(LXA(137,"E"))_"</Scanned_Image_Test>"
"RTN","LRMLEDA",266,0)
 S E=0 F  S E=$O(LXH(E)) Q:'E  D
"RTN","LRMLEDA",267,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Performing_Lab>"
"RTN","LRMLEDA",268,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Lab>"_$G(LXH(E,.01))_"</Lab>"
"RTN","LRMLEDA",269,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Order_Code>"_$G(LXH(E,1))_"</Order_Code>"
"RTN","LRMLEDA",270,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="</Performing_Lab>"
"RTN","LRMLEDA",271,0)
 N STNTDT S STNTDT=9999999 F  S STNTDT=$O(^LAB(60,LR60IEN,11,"B",STNTDT),-1) Q:'STNTDT  D
"RTN","LRMLEDA",272,0)
 . N STNTIEN,I
"RTN","LRMLEDA",273,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Site_Note>"
"RTN","LRMLEDA",274,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="<Date>"_$$FMTE^XLFDT(STNTDT)_"</Date>"
"RTN","LRMLEDA",275,0)
 . S STNTIEN=0 S STNTIEN=$O(^LAB(60,LR60IEN,11,"B",STNTDT,STNTIEN)) Q:'STNTIEN  D
"RTN","LRMLEDA",276,0)
 . . S ALI=$$LRTP(ALI),LRTEXT(ALI)="<p>"
"RTN","LRMLEDA",277,0)
 . . S I=0 F  S I=$O(^LAB(60,LR60IEN,11,STNTIEN,1,I)) Q:'I  D
"RTN","LRMLEDA",278,0)
 . . . S ALI=$$LRTP(ALI),LRTEXT(ALI)=$$CHKCHAR($G(^LAB(60,LR60IEN,11,STNTIEN,1,I,0)))
"RTN","LRMLEDA",279,0)
 . . S ALI=$$LRTP(ALI),LRTEXT(ALI)="</p>"
"RTN","LRMLEDA",280,0)
 . S ALI=$$LRTP(ALI),LRTEXT(ALI)="</Site_Note>"
"RTN","LRMLEDA",281,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLEDA",282,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="</LAB_NTRT>"
"RTN","LRMLEDA",283,0)
 S ALI=$$LRTP(ALI),LRTEXT(ALI)="</DATAEXTRACTS>"
"RTN","LRMLEDA",284,0)
 G EN
"RTN","LRMLEDA",285,0)
 Q
"RTN","LRMLEDA",286,0)
 ;
"RTN","LRMLEDA",287,0)
LRTP(AA) ;update text counter
"RTN","LRMLEDA",288,0)
 S AA=AA+1
"RTN","LRMLEDA",289,0)
 Q AA
"RTN","LRMLEDA",290,0)
 ;
"RTN","LRMLEDA",291,0)
CHKCHAR(A) ; check for ctrl chars, <, >, &
"RTN","LRMLEDA",292,0)
 N B,C,I,L,M,N
"RTN","LRMLEDA",293,0)
 I A="" Q A
"RTN","LRMLEDA",294,0)
 S B="" F I=1:1:$L(A) S C=$E(A,I) D  S L=C
"RTN","LRMLEDA",295,0)
 . S M=$E(A,(I+1))
"RTN","LRMLEDA",296,0)
 . I $A(C)<32!($A(C)>126) Q  ; skip set
"RTN","LRMLEDA",297,0)
 . I C="&" S N="'AND'",B=B_N Q
"RTN","LRMLEDA",298,0)
 . I C="<" S N="'LESS THAN'",B=B_N Q
"RTN","LRMLEDA",299,0)
 . I C=">" S N="'GREATER THAN'",B=B_N Q
"RTN","LRMLEDA",300,0)
 . S B=B_C
"RTN","LRMLEDA",301,0)
 Q B
"RTN","LRMLEDA",302,0)
 ;
"RTN","LRMLWT")
0^3^B43869064^B37343726
"RTN","LRMLWT",1,0)
LRMLWT ;BPFO/DTG - LAB NTRT LOOP 60 FOR MLTF ;02/10/2016
"RTN","LRMLWT",2,0)
 ;;5.2;LAB SERVICE;**468,500**;Sep 27, 1994;Build 29
"RTN","LRMLWT",3,0)
 ;
"RTN","LRMLWT",4,0)
 ; From option LR NTRT WALK ASSOCIATE
"RTN","LRMLWT",5,0)
 ;
"RTN","LRMLWT",6,0)
 ; loop through the 60 file by test 
"RTN","LRMLWT",7,0)
EN ; starting point for walking from newest test to oldest test in file 60
"RTN","LRMLWT",8,0)
 ; to associate with the MLTF
"RTN","LRMLWT",9,0)
 N DIE,DR,DA,DIQ,LRTN,LRARY,LRSPARY,DT,A,B,C,D,PS,LASTTEST,DIR,LRIEN,LRSPEC,LRSN,LRS,LRN,LSITE,LRNT,LRNTI,AR,LXA,LXB
"RTN","LRMLWT",10,0)
 N LRMLTF,LR64,LR64ER,ER,LRSPERR,LROKS,LRSYSTEM,LRLEC,LRNO,X,Y
"RTN","LRMLWT",11,0)
 N AA,ALA,ALAC,DIC,I,LRCKD,LRELEC,LRLNC,LRLNC0,LT,SCOUNT,OK
"RTN","LRMLWT",12,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMLWT",13,0)
 S B=$$SITE^VASITE,B=$P(B,U,1) I 'B Q  ; not set up
"RTN","LRMLWT",14,0)
 S PS=$O(^LAB(66.4,"B",B,0)) I PS="" Q  ; 66.4 not set up
"RTN","LRMLWT",15,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLWT",16,0)
 S LASTTEST=$$GET1^DIQ(66.4,PS_",",.08)
"RTN","LRMLWT",17,0)
 I LASTTEST]"" S OK=0 D  I OK G QUIT
"RTN","LRMLWT",18,0)
 . N LNAME,LRFDA,DIR,DIRUT
"RTN","LRMLWT",19,0)
 . S LNAME=$S(LASTTEST="DONE":"Process Completed",1:$$GET1^DIQ(60,(+LASTTEST)_",",.01))
"RTN","LRMLWT",20,0)
 . S DIR(0)="SO^C:CONTINUE WITH "_LNAME_" ["_LASTTEST_"];S:START OVER"
"RTN","LRMLWT",21,0)
 . S DIR("L",1)="   CONTINUE WITH "_LNAME_" ["_LASTTEST_"] (C)"
"RTN","LRMLWT",22,0)
 . S DIR("L")="   START OVER (S)"
"RTN","LRMLWT",23,0)
 . D ^DIR
"RTN","LRMLWT",24,0)
 . I $D(DIRUT)!(Y="^") W !,*7,"Continuation Method Not Selected. Quitting" S OK=1 Q
"RTN","LRMLWT",25,0)
 . I $G(Y)="S" S LRFDA(66.4,PS_",",.08)="@" D FILE^DIE(,"LRFDA")
"RTN","LRMLWT",26,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLWT",27,0)
ENR S LASTTEST=$$GET1^DIQ(66.4,PS_",",.08)
"RTN","LRMLWT",28,0)
 I LASTTEST="DONE" W !,*7,"Process Has Been Completed" G QUIT
"RTN","LRMLWT",29,0)
 D GET664
"RTN","LRMLWT",30,0)
 I LASTTEST="" S LASTTEST=$O(^LAB(60,"A"),-1) I LASTTEST?1.N S LR64ER=0 D  I LR64ER=1 G SETER
"RTN","LRMLWT",31,0)
 . L +^LAB(66.4,PS):30 I '$T S LR64ER=1 Q
"RTN","LRMLWT",32,0)
 . S LASTTEST=LASTTEST+1,DA=PS,DIE="^LAB(66.4,",DR=".08///"_LASTTEST
"RTN","LRMLWT",33,0)
 . D ^DIE
"RTN","LRMLWT",34,0)
 . L -^LAB(66.4,PS)
"RTN","LRMLWT",35,0)
 ;
"RTN","LRMLWT",36,0)
LOOP ; start the process
"RTN","LRMLWT",37,0)
 S LRIEN=LASTTEST K LRSPARY
"RTN","LRMLWT",38,0)
L1 S LRIEN=$O(^LAB(60,LRIEN),-1) I LRIEN="" S LRIEN="DONE" G LOUT
"RTN","LRMLWT",39,0)
 D GET60T
"RTN","LRMLWT",40,0)
 S LRN=$G(LXA(.01,"E")),LR64ER=0
"RTN","LRMLWT",41,0)
 ; check test subscript is valid for NTRT
"RTN","LRMLWT",42,0)
 S AA=$G(LXA(4,"I"))
"RTN","LRMLWT",43,0)
 I AA="WK" S LR64ER=0 D LSET G:LR64ER=1 SETER G L1
"RTN","LRMLWT",44,0)
 I AA="BB" D LSET G:LR64ER=1 SETER G L1
"RTN","LRMLWT",45,0)
 ; check test type
"RTN","LRMLWT",46,0)
 S AA=$G(LXA(3,"I"))
"RTN","LRMLWT",47,0)
 I AA="N"!(AA="D") D LSET G:LR64ER=1 SETER G L1
"RTN","LRMLWT",48,0)
 ; check for data name
"RTN","LRMLWT",49,0)
 I $G(LXA(5,"I"))="" D LSET G:LR64ER=1 SETER G L1
"RTN","LRMLWT",50,0)
 ;
"RTN","LRMLWT",51,0)
 ; loop ^LAB(60 specimen level
"RTN","LRMLWT",52,0)
 S LT=0,LRS=0
"RTN","LRMLWT",53,0)
 D Q1 I LRS<1 D  S LR64ER=0 D LSET G:LR64ER=1 SETER G ENR
"RTN","LRMLWT",54,0)
 . I SCOUNT<1 W !!,*7," *** This Test ( ",LRN," [",LRIEN,"]) Does Not Have any Specimens",!!
"RTN","LRMLWT",55,0)
 G L2
"RTN","LRMLWT",56,0)
L2 ;loop through specimens
"RTN","LRMLWT",57,0)
 K DIR,DIRUT
"RTN","LRMLWT",58,0)
 S DIR("A")="Enter The Number For The Specimen to Associate With The MLTF"
"RTN","LRMLWT",59,0)
 S DIR(0)="SO^",ALAC=0
"RTN","LRMLWT",60,0)
 F I=1:1:LRS S ALA=$G(LRSPARY(I)) I ALA'="" S ALAC=ALAC+1 S:ALAC>1 DIR(0)=DIR(0)_";" S DIR(0)=DIR(0)_I_":"_LRSPARY(I)
"RTN","LRMLWT",61,0)
 W !!,"TEST: "_LRN
"RTN","LRMLWT",62,0)
 W !,"SPECIMEN(s)",!
"RTN","LRMLWT",63,0)
 D ^DIR
"RTN","LRMLWT",64,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",65,0)
 I Y'?1.N G LX
"RTN","LRMLWT",66,0)
 S A=$G(LRSPARY(Y)) I A="" W !,*7,"Number out of Range" G L2
"RTN","LRMLWT",67,0)
 S LRSPEC=$P($P(A,"[",2),"]",1),LRSN=$P(A," ",1) I LRSPEC'?1.N W !,*7,"Specimen not found" G L2
"RTN","LRMLWT",68,0)
L2M ; come here to ask MLTF
"RTN","LRMLWT",69,0)
 K DIR,DA,DIRUT
"RTN","LRMLWT",70,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLWT",71,0)
 S DIR(0)="PO^66.3:EMQZ"
"RTN","LRMLWT",72,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLWT",73,0)
 S DIR("S")="I '$$SCREEN^XTID(66.3,"""",(+Y_"",""))"
"RTN","LRMLWT",74,0)
 D ^DIR
"RTN","LRMLWT",75,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",76,0)
 I +Y'>0 G LX:LRS<2,L2Q
"RTN","LRMLWT",77,0)
 S LRSPERR=0,LRMLTF=+Y
"RTN","LRMLWT",78,0)
 ; check specimen type (based on code from LRLNC0 at CHKSPEC
"RTN","LRMLWT",79,0)
 S LRELEC=$P($G(^LAB(61,LRSPEC,0)),U,9)
"RTN","LRMLWT",80,0)
 S LRLNC0=$$GET1^DIQ(66.3,LRMLTF,.04,"I")
"RTN","LRMLWT",81,0)
 S LRLNC=$P(LRLNC0,"-",1),LRCKD=$P(LRLNC0,"-",2)
"RTN","LRMLWT",82,0)
 S A=0,LRSYSTEM="" F  S A=$O(^LAB(95.3,"B",LRLNC,A)) Q:'A  S B=$G(^LAB(95.3,A,0)),LRSYSTEM=$P(B,U,8),C=$P(B,U,15) I C=LRCKD Q
"RTN","LRMLWT",83,0)
 ; if not found in 95.3
"RTN","LRMLWT",84,0)
 I 'A G L2S
"RTN","LRMLWT",85,0)
 D CHKSPEC G:LROKS=1 L2S
"RTN","LRMLWT",86,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",87,0)
 I LRNO=1  W !,"TEST: ",LRN,!,"SPECIMEN: ",LRSN,! G L2M
"RTN","LRMLWT",88,0)
 G L2S
"RTN","LRMLWT",89,0)
 ;
"RTN","LRMLWT",90,0)
L2S D MSET I LRSPERR=1 G SETER
"RTN","LRMLWT",91,0)
 S A=$$GET1^DIQ(60.01,LT_","_LRIEN,30,"E")
"RTN","LRMLWT",92,0)
 W !,LRSN,": Saved With MLTF ",A,!
"RTN","LRMLWT",93,0)
 S LT=0,LRS=0 K LRSPARY D Q1 I LRS<1 D  S LR64ER=0 D LSET G:LR64ER=1 SETER G ENR
"RTN","LRMLWT",94,0)
 . I SCOUNT<1 W !!,*7," *** This Test ( ",LRN," [",LRIEN,"] Does Not Have any Specimens",!! R X:10
"RTN","LRMLWT",95,0)
 G L2
"RTN","LRMLWT",96,0)
 ;
"RTN","LRMLWT",97,0)
L2Q ; ask to see additional specimens
"RTN","LRMLWT",98,0)
 K DIR,DIRUT S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do You Wish to Evaluate Additional Specimens? "
"RTN","LRMLWT",99,0)
 D ^DIR
"RTN","LRMLWT",100,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",101,0)
 I Y=1 S LT=0,LRS=0 K LRSPARY D Q1 W:LRS<1 *7,"   No More Specimens To Check For This Test" G:LRS<1 LX G L2
"RTN","LRMLWT",102,0)
 G LX
"RTN","LRMLWT",103,0)
LX ;
"RTN","LRMLWT",104,0)
 K DIR,DIRUT S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do You Wish to go to The Next Test?"
"RTN","LRMLWT",105,0)
 D ^DIR
"RTN","LRMLWT",106,0)
 I $D(DIRUT) G QUIT:$E(X)="^"
"RTN","LRMLWT",107,0)
 I Y=1 S LR64ER=0 D LSET G:LR64ER=1 SETER G ENR
"RTN","LRMLWT",108,0)
 K DIR,DIRUT S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do You Wish to Exit?" D ^DIR
"RTN","LRMLWT",109,0)
 G QUIT:$D(DIRUT) I Y=1 K DIR,DIRUT S LR64ER=0 D  G:LRNO=1 QUIT G SETER:LR64ER=1,QUIT
"RTN","LRMLWT",110,0)
 . S LRNO=0,DIR(0)="Y",DIR("B")="YES",DIR("A")="Do You Wish to Skip This Test on Re-Start?" D ^DIR
"RTN","LRMLWT",111,0)
 . I $D(DIRUT) S LRNO=1 Q
"RTN","LRMLWT",112,0)
 . I Y=1 D LSET
"RTN","LRMLWT",113,0)
 G ENR
"RTN","LRMLWT",114,0)
 ;
"RTN","LRMLWT",115,0)
Q1 ; pick up spcimens from test
"RTN","LRMLWT",116,0)
 S SCOUNT=0
"RTN","LRMLWT",117,0)
Q1A S LT=$O(^LAB(60,LRIEN,1,LT)) I 'LT Q
"RTN","LRMLWT",118,0)
 S SCOUNT=SCOUNT+1
"RTN","LRMLWT",119,0)
 S B=$$GET1^DIQ(60.01,LT_","_LRIEN,30,"I") I B'="" G Q1A
"RTN","LRMLWT",120,0)
 S A=$$GET1^DIQ(60.01,LT_","_LRIEN,.01,"E")
"RTN","LRMLWT",121,0)
 S LRS=LRS+1,LRSPARY(LRS)=A_" ["_LT_"]" ;LT_"-"_A
"RTN","LRMLWT",122,0)
 G Q1A
"RTN","LRMLWT",123,0)
 ;
"RTN","LRMLWT",124,0)
QUIT ;
"RTN","LRMLWT",125,0)
 K DIE,DR,DA,DIQ,LRTN,LRARY,LRSPARY,A,B,C,D,PS,LASTTEST,DIR,LRIEN,LRSPEC,LRSN,LRS,LRN,LSITE,LRNT,LRNTI,AR,LXA,LXB
"RTN","LRMLWT",126,0)
 K LRMLTF,LR64,LR64ER,ER,LRSPERR,LROKS,LRSYSTEM,LRLEC,LRNO
"RTN","LRMLWT",127,0)
 K AA,ALA,ALAC,DIC,I,LRCKD,LRELEC,LRLNC,LRLNC0,LT,SCOUNT,X,Y,OK
"RTN","LRMLWT",128,0)
 Q
"RTN","LRMLWT",129,0)
 ;
"RTN","LRMLWT",130,0)
LOUT D LSET G:LR64ER=1 SETER
"RTN","LRMLWT",131,0)
 I LRIEN="DONE" G QUIT
"RTN","LRMLWT",132,0)
 K LRSPARY
"RTN","LRMLWT",133,0)
 G ENR
"RTN","LRMLWT",134,0)
 ;
"RTN","LRMLWT",135,0)
LSET ;put the last ien in 66.4 .08
"RTN","LRMLWT",136,0)
 N DA,DIE,DR
"RTN","LRMLWT",137,0)
 S DA=PS
"RTN","LRMLWT",138,0)
 L +^LAB(66.4,DA):30 I '$T S LR64ER=1 Q
"RTN","LRMLWT",139,0)
 S DIE="^LAB(66.4,",DR=".08///"_LRIEN D ^DIE
"RTN","LRMLWT",140,0)
 L -^LAB(66.4,DA)
"RTN","LRMLWT",141,0)
 Q
"RTN","LRMLWT",142,0)
 ;
"RTN","LRMLWT",143,0)
SETER ; come here if not able to open files and quit
"RTN","LRMLWT",144,0)
 W !,*7,"unable to open file... EXITING " R X:10 G QUIT
"RTN","LRMLWT",145,0)
 ;
"RTN","LRMLWT",146,0)
MSET ;save the mltf to the 60 file
"RTN","LRMLWT",147,0)
 N DA,DR,DIE,FDA,FFF
"RTN","LRMLWT",148,0)
 L +^LAB(60,LRIEN,1,LRSPEC):30 I '$T S LRSPERR=1 Q
"RTN","LRMLWT",149,0)
 ;START OF CHANGE FOR LR*5.2*500
"RTN","LRMLWT",150,0)
 ;S DA(1)=+LRIEN,DA=LRSPEC,DR="30///"_LRMLTF,DIE="^LAB(60,"_DA(1)_",1," D ^DIE
"RTN","LRMLWT",151,0)
 K FDA S DA(1)=+LRIEN,DA=LRSPEC,FFF=DA_","_DA(1)_",",FDA(60.01,FFF,30)=LRMLTF D FILE^DIE("","FDA")
"RTN","LRMLWT",152,0)
 K FDA,FFF
"RTN","LRMLWT",153,0)
 ;END OF CHANGE FOR LR*5.2*500
"RTN","LRMLWT",154,0)
 L -^LAB(60,LRIEN,1,LRSPEC)
"RTN","LRMLWT",155,0)
 Q
"RTN","LRMLWT",156,0)
 ;
"RTN","LRMLWT",157,0)
GET664 ; get file 66.4 info
"RTN","LRMLWT",158,0)
 S LSITE=$$SITE^VASITE,LSITE=$P(LSITE,U,1)
"RTN","LRMLWT",159,0)
 S LRNT=$O(^LAB(66.4,"B",LSITE,0))
"RTN","LRMLWT",160,0)
 D GETS^DIQ(66.4,LRNT_",","**","IE","AR")
"RTN","LRMLWT",161,0)
 M LRNTI=AR("66.4",LRNT_",") K AR
"RTN","LRMLWT",162,0)
 Q
"RTN","LRMLWT",163,0)
 ;
"RTN","LRMLWT",164,0)
GET60T ; get top of file 60 test info
"RTN","LRMLWT",165,0)
 S DA=LRIEN,DIQ="LXB",DIQ(0)="IE",DIC=60,DR=".01;3;4;5;64.1;5;13;131;132;133" D EN^DIQ1
"RTN","LRMLWT",166,0)
 K LXA M LXA=LXB(60,DA) K LXB
"RTN","LRMLWT",167,0)
 Q
"RTN","LRMLWT",168,0)
 ;
"RTN","LRMLWT",169,0)
CHKSPEC ;Check that specimen of MLTF LOINC code same as specimen of test
"RTN","LRMLWT",170,0)
 S LROKS=1
"RTN","LRMLWT",171,0)
 I LRSYSTEM=$G(LRELEC) Q
"RTN","LRMLWT",172,0)
 I (LRSYSTEM=74!(LRSYSTEM=83)!(LRSYSTEM=114)!(LRSYSTEM=1376))&($G(LRELEC)=74!($G(LRELEC)=83)!($G(LRELEC)=114)!($G(LRELEC)=1376)) Q
"RTN","LRMLWT",173,0)
 S LROKS=0,LRNO=0
"RTN","LRMLWT",174,0)
 W !!,"The MLTF LOINC code that you have selected does not have the"
"RTN","LRMLWT",175,0)
 W !,"same specimen that you chose to test/specimen."
"RTN","LRMLWT",176,0)
 K DIR,DIRUT
"RTN","LRMLWT",177,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to do this"
"RTN","LRMLWT",178,0)
 S DIR("?")="If you enter yes, the test/specimen will be associated to this MLTF LOINC code."
"RTN","LRMLWT",179,0)
 S DIR("B")="Yes"
"RTN","LRMLWT",180,0)
 D ^DIR
"RTN","LRMLWT",181,0)
 I $D(DIRUT) S LRNO=1 Q
"RTN","LRMLWT",182,0)
 I Y<1 S LRNO=1
"RTN","LRMLWT",183,0)
 Q
"SEC","^DIC",66.3,66.3,0,"AUDIT")
@
"SEC","^DIC",66.3,66.3,0,"DD")
@
"SEC","^DIC",66.3,66.3,0,"DEL")
@
"SEC","^DIC",66.3,66.3,0,"LAYGO")
@
"SEC","^DIC",66.3,66.3,0,"RD")

"SEC","^DIC",66.3,66.3,0,"WR")
@
"UP",60,60.16,-1)
60^16
"UP",60,60.16,0)
60.16
"VER")
8.0^22.2
"^DD",60,60,134,0)
IN HOUSE TEST^S^1:YES;0:NO;^14;4^Q
"^DD",60,60,134,3)
Enter Yes if tests are performed on-site using instruments or manual methods, otherwise enter No.
"^DD",60,60,134,21,0)
^.001^1^1^3180323^^^^
"^DD",60,60,134,21,1,0)
Tests are performed on-site using instruments or manual methods.
"^DD",60,60,134,"DT")
3180323
"^DD",60,60,135,0)
POC TEST^S^1:YES;0:NO;^14;5^Q
"^DD",60,60,135,3)
Enter Yes if tests are performed using POC equipment.
"^DD",60,60,135,21,0)
^.001^1^1^3180323^^^^
"^DD",60,60,135,21,1,0)
Tests performed using POC equipment, ie, glucometers, coagulation, INR, etc, that are performed outside the main laboratory, ie, wards, ICU, OR, etc.
"^DD",60,60,135,"DT")
3180323
"^DD",60,60,136,0)
CALCULATION TEST^S^1:YES;0:NO;^14;6^Q
"^DD",60,60,136,3)
Enter Yes if test result produced by calculation.
"^DD",60,60,136,21,0)
^.001^1^1^3180323^^
"^DD",60,60,136,21,1,0)
Whether the test result is calculated (not directly measured)
"^DD",60,60,136,"DT")
3180323
"^DD",60,60,137,0)
SCANNED IMAGE TEST^S^0:NO;1:YES;^14;7^Q
"^DD",60,60,137,3)
Enter Yes if the Results were scanned into VistA Imaging due to complexity.
"^DD",60,60,137,21,0)
^^1^1^3180323^^
"^DD",60,60,137,21,1,0)
This field indicates if the result is scanned due to complexity.
"^DD",60,60,137,"DT")
3180323
"^DD",60,60,138,0)
BILLABLE^S^0:NO;1:YES;^14;8^Q
"^DD",60,60,138,3)
Enter Yes if this test relates to Standardized Billable Tests (SBT) for LMP.
"^DD",60,60,138,21,0)
^^6^6^3180323^^
"^DD",60,60,138,21,1,0)
Yes: Test satisfies definition of a Standardized Billable Test (SBT)
"^DD",60,60,138,21,2,0)
and will count for Laboratory workload. Is a test that a provider can 
"^DD",60,60,138,21,3,0)
order, has its own published CPT Code and is performed by Lab personnel.
"^DD",60,60,138,21,4,0)
No: Test is not an SBT because it is either not separately orderable by a
"^DD",60,60,138,21,5,0)
provider, does not have its own CPT Code, is a calculated test result,
"^DD",60,60,138,21,6,0)
or is a test that is performed by non-lab personnel.
"^DD",60,60,138,"DT")
3180323
"^DD",60,60,139,0)
WORKLOAD CAPTURE^S^0:NO;1:YES;^14;9^Q
"^DD",60,60,139,3)
Enter Yes if this test is a stand alone product,ie, is an SBT, that has its own labor and supply costs. This setting relates to Managerial Cost Accounting (MCA).
"^DD",60,60,139,21,0)
^^4^4^3180323^^
"^DD",60,60,139,21,1,0)
Yes: The test is a stand-alone product, ie, is an SBT, that has its
"^DD",60,60,139,21,2,0)
own labor and supply costs. No: There is no labor or supply cost
"^DD",60,60,139,21,3,0)
associated with producing the test because the test is already part
"^DD",60,60,139,21,4,0)
of the labor/supply costs of another test.
"^DD",60,60,139,"DT")
3180323
"^DD",60,60,141,0)
PERFORMING LAB^60.16S^^16;0
"^DD",60,60,141,21,0)
^^1^1^3180323^
"^DD",60,60,141,21,1,0)
This indicates the performing lab for this test. There can be multiple performing labs with each having a single order code.
"^DD",60,60.16,0)
PERFORMING LAB SUB-FIELD^^1^2
"^DD",60,60.16,0,"DT")
3180413
"^DD",60,60.16,0,"IX","B",60.16,.01)

"^DD",60,60.16,0,"NM","PERFORMING LAB")

"^DD",60,60.16,0,"UP")
60
"^DD",60,60.16,.01,0)
PERFORMING LAB^S^IH:IN-HOUSE;CL:CONTRACT REF LAB;VAL:VA REFERENCE LAB;AL:AFFILIATE REF LAB;^0;1^Q
"^DD",60,60.16,.01,1,0)
^.1
"^DD",60,60.16,.01,1,1,0)
60.16^B
"^DD",60,60.16,.01,1,1,1)
S ^LAB(60,DA(1),16,"B",$E(X,1,30),DA)=""
"^DD",60,60.16,.01,1,1,2)
K ^LAB(60,DA(1),16,"B",$E(X,1,30),DA)
"^DD",60,60.16,.01,3)
Enter IH if In-House, CL if Contract Reference Lab, VAL if VA Reference Lab, AL if Affiliate Reference Lab.
"^DD",60,60.16,.01,21,0)
^^9^9^3180323^^^^
"^DD",60,60.16,.01,21,1,0)
(IH) In-house: Test performed by lab personnel on equipment within the
"^DD",60,60.16,.01,21,2,0)
laboratory facility that are not part of a contract/purchase order.
"^DD",60,60.16,.01,21,3,0)
(CL) Contract Reference Lab: VISN/Regional contracted laboratories
"^DD",60,60.16,.01,21,4,0)
such as Quest, LabCorp, ARUP, etc.
"^DD",60,60.16,.01,21,5,0)
(VAL) VA Reference Lab.
"^DD",60,60.16,.01,21,6,0)
(AL) Affiliate Reference Lab: Local hospital laboratories or other
"^DD",60,60.16,.01,21,7,0)
special reference labs that perform tests requested, ie, STATUS, tests
"^DD",60,60.16,.01,21,8,0)
with special handling requirements, or tests not available from
"^DD",60,60.16,.01,21,9,0)
Contract Ref Lab, etc.
"^DD",60,60.16,.01,"DT")
3180323
"^DD",60,60.16,1,0)
ORDER CODE^FJ120^^0;2^K:$L(X)>120!($L(X)<1) X
"^DD",60,60.16,1,3)
For on-site tests use National VA Lab Code entry, for Reference Lab tests use Order Code provided by performing lab. Can be 1-120 char in length.
"^DD",60,60.16,1,21,0)
^.001^2^2^3171226^^
"^DD",60,60.16,1,21,1,0)
Use Order Code if contract lab
"^DD",60,60.16,1,21,2,0)
Use Panel Name if VistA or a VA lab
"^DD",60,60.16,1,"DT")
3180413
"^DD",66.3,66.3,0)
FIELD^^99.991^13
"^DD",66.3,66.3,0,"DDA")
Y
"^DD",66.3,66.3,0,"DT")
3180321
"^DD",66.3,66.3,0,"ID",.04)
W:$D(^(2)) "   ",$P(^(2),U,2)
"^DD",66.3,66.3,0,"ID",.08)
W:$D(^(3)) "   ",$P(^(3),U,2)
"^DD",66.3,66.3,0,"ID",1)
W:$D(^(3)) "   ",$P(^(3),U,4)
"^DD",66.3,66.3,0,"IX","AREPLACETERM",66.3,99.97)

"^DD",66.3,66.3,0,"IX","AVUID",66.3,99.99)

"^DD",66.3,66.3,0,"IX","C",66.3,.04)

"^DD",66.3,66.3,0,"NM","MASTER LABORATORY TEST")

"^DD",66.3,66.3,0,"PT",60.01,30)

"^DD",66.3,66.3,0,"PT",66.3,99.97)

"^DD",66.3,66.3,0,"VRPK")
LR
"^DD",66.3,66.3,.01,0)
LAB TEST NAME^RFJ230a^^0;1^K:$L(X)>230!($L(X)<1) X
"^DD",66.3,66.3,.01,1,0)
^.1^^0
"^DD",66.3,66.3,.01,3)
Answer must be 1-230 characters in length.
"^DD",66.3,66.3,.01,7.5)
I $G(DIC(0))["L",'$D(XUMF) K X D EN^DDIOL("Entries must be edited via the Master File Server (MFS).","","!?5,$C(7)")
"^DD",66.3,66.3,.01,9)
^
"^DD",66.3,66.3,.01,21,0)
^.001^3^3^3180207^^^^
"^DD",66.3,66.3,.01,21,1,0)
This is the National Master Laboratory Test file (MLTF)
"^DD",66.3,66.3,.01,21,2,0)
 for associating lab tests with LOINC Codes
"^DD",66.3,66.3,.01,21,3,0)
and should not be edited.
"^DD",66.3,66.3,.01,"AUDIT")
y
"^DD",66.3,66.3,.01,"DEL",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",66.3,66.3,.01,"DT")
3180213
"^DD",66.3,66.3,.01,"LAYGO",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be added via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",66.3,66.3,.02,0)
ALTERNATE TEST NAME^FJ230a^^1;1^K:$L(X)>230!($L(X)<1) X
"^DD",66.3,66.3,.02,1,0)
^.1^^0
"^DD",66.3,66.3,.02,3)
Answer must be 1-230 characters in length.
"^DD",66.3,66.3,.02,9)
^
"^DD",66.3,66.3,.02,21,0)
^.001^1^1^3180126^^^^
"^DD",66.3,66.3,.02,21,1,0)
This is the 'short name' for the Master Laboratory Test file.
"^DD",66.3,66.3,.02,"AUDIT")
y
"^DD",66.3,66.3,.02,"DT")
3180227
"^DD",66.3,66.3,.04,0)
LOINC CODE^RFJ20a^^2;2^K:$L(X)>20!($L(X)<1) X
"^DD",66.3,66.3,.04,1,0)
^.1
"^DD",66.3,66.3,.04,1,1,0)
66.3^C
"^DD",66.3,66.3,.04,1,1,1)
S ^LRMLTF("C",$E(X,1,30),DA)=""
"^DD",66.3,66.3,.04,1,1,2)
K ^LRMLTF("C",$E(X,1,30),DA)
"^DD",66.3,66.3,.04,1,1,"%D",0)
^^1^1^3180131^
"^DD",66.3,66.3,.04,1,1,"%D",1,0)
Additional lookup field for the LIMs.
"^DD",66.3,66.3,.04,1,1,"DT")
3180131
"^DD",66.3,66.3,.04,3)
Answer must be 1-20 characters in length.
"^DD",66.3,66.3,.04,9)
^
"^DD",66.3,66.3,.04,21,0)
^.001^1^1^3180321^^^^
"^DD",66.3,66.3,.04,21,1,0)
This is the LOINC code that will be associated to the lab test name and VUID.
"^DD",66.3,66.3,.04,"AUDIT")
y
"^DD",66.3,66.3,.04,"DT")
3180321
"^DD",66.3,66.3,.05,0)
COMPONENT^RFJ230a^^2;3^K:$L(X)>230!($L(X)<1) X
"^DD",66.3,66.3,.05,3)
Answer must be 1-230 characters in length.
"^DD",66.3,66.3,.05,9)
^
"^DD",66.3,66.3,.05,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,.05,21,1,0)
This is the Lab COMPONENT value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.05,"AUDIT")
y
"^DD",66.3,66.3,.05,"DT")
3180208
"^DD",66.3,66.3,.06,0)
PROPERTY^RFJ230a^^2;4^K:$L(X)>230!($L(X)<1) X
"^DD",66.3,66.3,.06,3)
Answer must be 1-230 characters in length.
"^DD",66.3,66.3,.06,9)
^
"^DD",66.3,66.3,.06,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,.06,21,1,0)
This is the Lab PROPERTY value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.06,"AUDIT")
y
"^DD",66.3,66.3,.06,"DT")
3180207
"^DD",66.3,66.3,.07,0)
TIME ASPECT^RFJ230a^^3;1^K:$L(X)>230!($L(X)<1) X
"^DD",66.3,66.3,.07,3)
Answer must be 1-230 characters in length.
"^DD",66.3,66.3,.07,9)
^
"^DD",66.3,66.3,.07,21,0)
^.001^1^1^3160421^^^
"^DD",66.3,66.3,.07,21,1,0)
This is the Lab TIME ASPECT value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.07,"AUDIT")
y
"^DD",66.3,66.3,.07,"DT")
3180207
"^DD",66.3,66.3,.08,0)
SPECIMEN^RFJ230a^^3;2^K:$L(X)>230!($L(X)<1) X
"^DD",66.3,66.3,.08,3)
Answer must be 1-230 characters in length.
"^DD",66.3,66.3,.08,9)
^
"^DD",66.3,66.3,.08,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,.08,21,1,0)
This is the Lab SPECIMEN (site/specimen) value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.08,"AUDIT")
y
"^DD",66.3,66.3,.08,"DT")
3180207
"^DD",66.3,66.3,.09,0)
SCALE^RFJ230a^^3;3^K:$L(X)>230!($L(X)<1) X
"^DD",66.3,66.3,.09,3)
Answer must be 1-230 characters in length.
"^DD",66.3,66.3,.09,9)
^
"^DD",66.3,66.3,.09,21,0)
^.001^1^1^3160421^^^
"^DD",66.3,66.3,.09,21,1,0)
This is the Lab SCALE value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,.09,"AUDIT")
y
"^DD",66.3,66.3,.09,"DT")
3180207
"^DD",66.3,66.3,1,0)
METHOD^FJ230a^^3;4^K:$L(X)>230!($L(X)<1) X
"^DD",66.3,66.3,1,3)
Answer must be 1-230 characters in length.
"^DD",66.3,66.3,1,9)
^
"^DD",66.3,66.3,1,21,0)
^.001^1^1^3160421^^^^
"^DD",66.3,66.3,1,21,1,0)
This is the Lab METHOD value used in matching a Lab test to a LOINC Code.
"^DD",66.3,66.3,1,"AUDIT")
y
"^DD",66.3,66.3,1,"DT")
3180207
"^DD",66.3,66.3,99.97,0)
REPLACED BY VHA STANDARD TERM^P66.3'Ia^LRMLTF(^VUID;3^Q
"^DD",66.3,66.3,99.97,1,0)
^.1
"^DD",66.3,66.3,99.97,1,1,0)
66.3^AREPLACETERM
"^DD",66.3,66.3,99.97,1,1,1)
S ^LRMLTF("AREPLACETERM",$E(X,1,30),DA)=""
"^DD",66.3,66.3,99.97,1,1,2)
K ^LRMLTF("AREPLACETERM",$E(X,1,30),DA)
"^DD",66.3,66.3,99.97,1,1,"%D",0)
^.101^1^1^3160421^^
"^DD",66.3,66.3,99.97,1,1,"%D",1,0)
This cross-reference can be used to identify the replacement entries associated with a Term/Concept.
"^DD",66.3,66.3,99.97,1,1,"DT")
3160310
"^DD",66.3,66.3,99.97,3)
Enter the pointer to the VHA Standard Term
"^DD",66.3,66.3,99.97,9)
^
"^DD",66.3,66.3,99.97,21,0)
^.001^2^2^3160421^^^
"^DD",66.3,66.3,99.97,21,1,0)
This field is populated when one Term/Concept replaces another Term/Concept. This field is controlled by standardization and should only be changed by standardization processes. This field contains a pointer to a VHA standard term that
"^DD",66.3,66.3,99.97,21,2,0)
replaces this entry.
"^DD",66.3,66.3,99.97,"AUDIT")
y
"^DD",66.3,66.3,99.97,"DT")
3160420
"^DD",66.3,66.3,99.98,0)
MASTER ENTRY FOR VUID^RSIa^0:NO;1:YES;^VUID;2^Q
"^DD",66.3,66.3,99.98,3)
Enter 1 if this is the master entry
"^DD",66.3,66.3,99.98,9)
^
"^DD",66.3,66.3,99.98,21,0)
^.001^1^1^3160421^^
"^DD",66.3,66.3,99.98,21,1,0)
This field identifies the Master entry for a VUID associated with a Term/Concept.
"^DD",66.3,66.3,99.98,"AUDIT")
y
"^DD",66.3,66.3,99.98,"DT")
3160420
"^DD",66.3,66.3,99.99,0)
VUID^RFXIa^^VUID;1^K:$L(X)>20!($L(X)<1)!'(X?1.20N) X
"^DD",66.3,66.3,99.99,1,0)
^.1
"^DD",66.3,66.3,99.99,1,1,0)
66.3^AVUID
"^DD",66.3,66.3,99.99,1,1,1)
S ^LRMLTF("AVUID",$E(X,1,30),DA)=""
"^DD",66.3,66.3,99.99,1,1,2)
K ^LRMLTF("AVUID",$E(X,1,30),DA)
"^DD",66.3,66.3,99.99,1,1,"%D",0)
^.101^1^1^3160421^^
"^DD",66.3,66.3,99.99,1,1,"%D",1,0)
This cross-reference is by VUID.
"^DD",66.3,66.3,99.99,1,1,"DT")
3160310
"^DD",66.3,66.3,99.99,3)
Answer must be 1-20 digits in length, only the first 19 are used.
"^DD",66.3,66.3,99.99,9)
^
"^DD",66.3,66.3,99.99,21,0)
^.001^1^1^3160324^^^^
"^DD",66.3,66.3,99.99,21,1,0)
VHA Unique ID (VUID). A unique arbitrary integer assigned to reference terms VHA wide.
"^DD",66.3,66.3,99.99,"AUDIT")
y
"^DD",66.3,66.3,99.99,"DT")
3160420
"^DD",66.3,66.3,99.991,0)
EFFECTIVE DATE/TIME^66.399DA^^TERMSTATUS;0
"^DD",66.3,66.3,99.991,21,0)
^.001^1^1^3160421^^^
"^DD",66.3,66.3,99.991,21,1,0)
Describes the pair Status and Effective Date/Time for each reference term.
"^DD",66.3,66.399,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.02^2
"^DD",66.3,66.399,0,"DT")
3160229
"^DD",66.3,66.399,0,"IX","B",66.399,.01)

"^DD",66.3,66.399,0,"NM","EFFECTIVE DATE/TIME")

"^DD",66.3,66.399,0,"UP")
66.3
"^DD",66.3,66.399,.01,0)
EFFECTIVE DATE/TIME^RDIa^^0;1^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",66.3,66.399,.01,1,0)
^.1
"^DD",66.3,66.399,.01,1,1,0)
66.399^B
"^DD",66.3,66.399,.01,1,1,1)
S ^LRMLTF(DA(1),"TERMSTATUS","B",$E(X,1,30),DA)=""
"^DD",66.3,66.399,.01,1,1,2)
K ^LRMLTF(DA(1),"TERMSTATUS","B",$E(X,1,30),DA)
"^DD",66.3,66.399,.01,1,1,"%D",0)
^.101^1^1^3160421^^
"^DD",66.3,66.399,.01,1,1,"%D",1,0)
This cross-reference is by effective Date/Time.
"^DD",66.3,66.399,.01,3)
Enter the date/time when the term status was established.
"^DD",66.3,66.399,.01,9)
^
"^DD",66.3,66.399,.01,21,0)
^.001^1^1^3160421^^^
"^DD",66.3,66.399,.01,21,1,0)
This is the date/time when the Status of the referenced term was established.
"^DD",66.3,66.399,.01,"AUDIT")
y
"^DD",66.3,66.399,.01,"DT")
3160420
"^DD",66.3,66.399,.02,0)
STATUS^RSIa^0:INACTIVE;1:ACTIVE;^0;2^Q
"^DD",66.3,66.399,.02,3)
Enter 1 if the Term is active or 0 if the Term is inactive.
"^DD",66.3,66.399,.02,9)
^
"^DD",66.3,66.399,.02,21,0)
^.001^2^2^3160421^^^
"^DD",66.3,66.399,.02,21,1,0)
The Status of a reference term is either 'ACTIVE'  or 'INACTIVE'. If 'ACTIVE' then the term will be accessible by end-users to document a particular patient
"^DD",66.3,66.399,.02,21,2,0)
 event. If 'INACTIVE', then the term will only be accessible by the application to display legacy data.
"^DD",66.3,66.399,.02,"AUDIT")
y
"^DD",66.3,66.399,.02,"DT")
3160420
"^DD",66.4,66.4,.05,0)
CTT TOOLING ACTIVE^S^Y:YES;N:NO;^0;5^Q
"^DD",66.4,66.4,.05,3)
Enter Y if CTT TOOLING is active.
"^DD",66.4,66.4,.05,21,0)
^.001^1^1^3180316^^^^
"^DD",66.4,66.4,.05,21,1,0)
This field indicates if CTT TOOLING is active for the facility to send new lab test/specimens NTRT requests to.
"^DD",66.4,66.4,.05,"DT")
3180316
"^DD",66.4,66.4,4,0)
CTT TOOLING WEB ADDRESS^FJ100^^4;1^K:$L(X)>100!($L(X)<1) X
"^DD",66.4,66.4,4,3)
Answer must be 1-100 characters in length.
"^DD",66.4,66.4,4,21,0)
^.001^1^1^3180316^^^^
"^DD",66.4,66.4,4,21,1,0)
This is the CTT TOOLING system NTRT web address for processing NTRT requests.
"^DD",66.4,66.4,4,"DT")
3180316
"^DD",66.4,66.4,5,0)
CTT TOOLING PORT NUMBER^NJ10,0^^4;2^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",66.4,66.4,5,3)
Enter the port number for the CTT TOOLING system NTRT process. The port is a number between 1 and 9999999999.
"^DD",66.4,66.4,5,21,0)
^.001^1^1^3180316^^^^
"^DD",66.4,66.4,5,21,1,0)
This is the port number that the CTT TOOLING system uses for the NTRT process.
"^DD",66.4,66.4,5,"DT")
3180316
"^DD",66.4,66.4,6,0)
CTT TOOLING NTRT PATH^FXJ100^^5;1^K:$L(X)>100!($L(X)<1) X S:X'="" X=$TR(X,"/","~")
"^DD",66.4,66.4,6,3)
Enter the CTT TOOLING system path for the NTRT process. The system path can be from 1 to 100 characters in length.
"^DD",66.4,66.4,6,21,0)
^.001^1^1^3180316^^^^
"^DD",66.4,66.4,6,21,1,0)
This is the path used in the CTT TOOLING system NTRT process.
"^DD",66.4,66.4,6,"DT")
3180323
"^DD",66.4,66.4,7,0)
CTT TOOLING SCHEMA NAME^FJ60^^6;1^K:$L(X)>60!($L(X)<1) X
"^DD",66.4,66.4,7,3)
Answer must be 1-60 characters in length.
"^DD",66.4,66.4,7,21,0)
^.001^1^1^3180316^^^^
"^DD",66.4,66.4,7,21,1,0)
This is the Schema name that CTT TOOLING will use to process NTRT request XML's. Example is 'CTT-TOOLING-NTRT.XSD'.
"^DD",66.4,66.4,7,"DT")
3180316
"^DD",66.4,66.4,8,0)
CTT TOOLING SCHEMA PATH^FXJ100^^6;2^K:$L(X)>100!($L(X)<1) X S:X'="" X=$TR(X,"/","~")
"^DD",66.4,66.4,8,3)
Enter the path for the CTT TOOLING SCHEMA Name. The schema name can be from 1 to 100 characters in length.
"^DD",66.4,66.4,8,21,0)
^.001^1^1^3180316^^^^
"^DD",66.4,66.4,8,21,1,0)
This is the path to the CTT TOOLING SCHEMA NAME that CTT TOOLING will use to process incoming NTRT request XML's.
"^DD",66.4,66.4,8,"DT")
3180316
"^DIC",66.3,66.3,0)
MASTER LABORATORY TEST^66.3
"^DIC",66.3,66.3,0,"GL")
^LRMLTF(
"^DIC",66.3,66.3,"%",0)
^1.005^1^1
"^DIC",66.3,66.3,"%",1,0)
LR
"^DIC",66.3,66.3,"%","B","LR",1)

"^DIC",66.3,66.3,"%D",0)
^1.001^13^13^3180205^^^^
"^DIC",66.3,66.3,"%D",1,0)
This is the Master Laboratory Test file.
"^DIC",66.3,66.3,"%D",2,0)
It contains the standardized Lab Test Name and its associated LOINC code.
"^DIC",66.3,66.3,"%D",3,0)
The Lab will associate their local test to this file 
"^DIC",66.3,66.3,"%D",4,0)
(^LAB(60,test#,1,specimen#)).
"^DIC",66.3,66.3,"%D",5,0)
 
"^DIC",66.3,66.3,"%D",6,0)
Per VHA Directive 2005-044, this file has been "locked down" by Data
"^DIC",66.3,66.3,"%D",7,0)
Standardization (DS).  The file definition (i.e. data dictionary) shall
"^DIC",66.3,66.3,"%D",8,0)
not be modified.  All additions, changes and deletions to entries in the
"^DIC",66.3,66.3,"%D",9,0)
file shall be done by Enterprise Reference Terminology (ERT) using the
"^DIC",66.3,66.3,"%D",10,0)
Master File Server (MFS), provided by Common Services (CS).  Creating
"^DIC",66.3,66.3,"%D",11,0)
and/or editing locally defined fields in the file are not permitted.  Use
"^DIC",66.3,66.3,"%D",12,0)
of locally defined fields that were created prior to the VHA Directive's
"^DIC",66.3,66.3,"%D",13,0)
2005-044 effective date shall not be supported.
"^DIC",66.3,"B","MASTER LABORATORY TEST",66.3)

"BLD",10448,6)
^408
**END**
**END**

