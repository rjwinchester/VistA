Released LR*5.2*495 SEQ #399
Extracted from mail message
**KIDS**:LR*5.2*495^

**INSTALL NAME**
LR*5.2*495
"BLD",10287,0)
LR*5.2*495^LAB SERVICE^0^3180108^y
"BLD",10287,1,0)
^^1^1^3170905^
"BLD",10287,1,1,0)
See National Patch Module for details.
"BLD",10287,4,0)
^9.64PA^61.2^1
"BLD",10287,4,61.2,0)
61.2
"BLD",10287,4,61.2,2,0)
^9.641^61.2^1
"BLD",10287,4,61.2,2,61.2,0)
ETIOLOGY FIELD  (File-top level)
"BLD",10287,4,61.2,2,61.2,1,0)
^9.6411^64.9102^1
"BLD",10287,4,61.2,2,61.2,1,64.9102,0)
INACTIVE DATE
"BLD",10287,4,61.2,222)
y^y^p^^^^n^^n
"BLD",10287,4,61.2,224)

"BLD",10287,4,"APDD",61.2,61.2)

"BLD",10287,4,"APDD",61.2,61.2,64.9102)

"BLD",10287,4,"B",61.2,61.2)

"BLD",10287,6.3)
6
"BLD",10287,"ABPKG")
n
"BLD",10287,"INID")
^n
"BLD",10287,"INIT")
LR495PO
"BLD",10287,"KRN",0)
^9.67PA^779.2^20
"BLD",10287,"KRN",.4,0)
.4
"BLD",10287,"KRN",.401,0)
.401
"BLD",10287,"KRN",.402,0)
.402
"BLD",10287,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",10287,"KRN",.402,"NM",1,0)
LRMIETI INACTIVE DATE    FILE #61.2^61.2^0
"BLD",10287,"KRN",.402,"NM","B","LRMIETI INACTIVE DATE    FILE #61.2",1)

"BLD",10287,"KRN",.403,0)
.403
"BLD",10287,"KRN",.5,0)
.5
"BLD",10287,"KRN",.84,0)
.84
"BLD",10287,"KRN",3.6,0)
3.6
"BLD",10287,"KRN",3.8,0)
3.8
"BLD",10287,"KRN",3.8,"NM",0)
^9.68A^2^2
"BLD",10287,"KRN",3.8,"NM",1,0)
LMI^^0
"BLD",10287,"KRN",3.8,"NM",2,0)
LAB MAPPING^^0
"BLD",10287,"KRN",3.8,"NM","B","LAB MAPPING",2)

"BLD",10287,"KRN",3.8,"NM","B","LMI",1)

"BLD",10287,"KRN",9.2,0)
9.2
"BLD",10287,"KRN",9.8,0)
9.8
"BLD",10287,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",10287,"KRN",9.8,"NM",1,0)
LRSRVR^^0^B20098567
"BLD",10287,"KRN",9.8,"NM",2,0)
LRSRVR6^^0^B41247527
"BLD",10287,"KRN",9.8,"NM",3,0)
LR495PO^^0^B2398805
"BLD",10287,"KRN",9.8,"NM",4,0)
LRMIEDIS^^0^B4897577
"BLD",10287,"KRN",9.8,"NM",5,0)
LRMIEDIM^^0^B15196739
"BLD",10287,"KRN",9.8,"NM",6,0)
LRSRVR9B^^0^B47147933
"BLD",10287,"KRN",9.8,"NM",7,0)
LRSRVR8^^0^B259906666
"BLD",10287,"KRN",9.8,"NM","B","LR495PO",3)

"BLD",10287,"KRN",9.8,"NM","B","LRMIEDIM",5)

"BLD",10287,"KRN",9.8,"NM","B","LRMIEDIS",4)

"BLD",10287,"KRN",9.8,"NM","B","LRSRVR",1)

"BLD",10287,"KRN",9.8,"NM","B","LRSRVR6",2)

"BLD",10287,"KRN",9.8,"NM","B","LRSRVR8",7)

"BLD",10287,"KRN",9.8,"NM","B","LRSRVR9B",6)

"BLD",10287,"KRN",19,0)
19
"BLD",10287,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",10287,"KRN",19,"NM",1,0)
LRMI^^2
"BLD",10287,"KRN",19,"NM",2,0)
LRMI EDIT INACT DT MULTI 61.2^^0
"BLD",10287,"KRN",19,"NM",3,0)
LRMI EDIT INACT DT SINGLE 61.2^^0
"BLD",10287,"KRN",19,"NM",4,0)
LR NDS LIM MENU^^2
"BLD",10287,"KRN",19,"NM","B","LR NDS LIM MENU",4)

"BLD",10287,"KRN",19,"NM","B","LRMI",1)

"BLD",10287,"KRN",19,"NM","B","LRMI EDIT INACT DT MULTI 61.2",2)

"BLD",10287,"KRN",19,"NM","B","LRMI EDIT INACT DT SINGLE 61.2",3)

"BLD",10287,"KRN",19.1,0)
19.1
"BLD",10287,"KRN",101,0)
101
"BLD",10287,"KRN",409.61,0)
409.61
"BLD",10287,"KRN",771,0)
771
"BLD",10287,"KRN",779.2,0)
779.2
"BLD",10287,"KRN",870,0)
870
"BLD",10287,"KRN",8989.51,0)
8989.51
"BLD",10287,"KRN",8989.52,0)
8989.52
"BLD",10287,"KRN",8994,0)
8994
"BLD",10287,"KRN","B",.4,.4)

"BLD",10287,"KRN","B",.401,.401)

"BLD",10287,"KRN","B",.402,.402)

"BLD",10287,"KRN","B",.403,.403)

"BLD",10287,"KRN","B",.5,.5)

"BLD",10287,"KRN","B",.84,.84)

"BLD",10287,"KRN","B",3.6,3.6)

"BLD",10287,"KRN","B",3.8,3.8)

"BLD",10287,"KRN","B",9.2,9.2)

"BLD",10287,"KRN","B",9.8,9.8)

"BLD",10287,"KRN","B",19,19)

"BLD",10287,"KRN","B",19.1,19.1)

"BLD",10287,"KRN","B",101,101)

"BLD",10287,"KRN","B",409.61,409.61)

"BLD",10287,"KRN","B",771,771)

"BLD",10287,"KRN","B",779.2,779.2)

"BLD",10287,"KRN","B",870,870)

"BLD",10287,"KRN","B",8989.51,8989.51)

"BLD",10287,"KRN","B",8989.52,8989.52)

"BLD",10287,"KRN","B",8994,8994)

"BLD",10287,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10287,"QUES",0)
^9.62^^
"BLD",10287,"REQB",0)
^9.611^1^1
"BLD",10287,"REQB",1,0)
LR*5.2*468^2
"BLD",10287,"REQB","B","LR*5.2*468",1)

"FIA",61.2)
ETIOLOGY FIELD
"FIA",61.2,0)
^LAB(61.2,
"FIA",61.2,0,0)
61.2s
"FIA",61.2,0,1)
y^y^p^^^^n^^n
"FIA",61.2,0,10)

"FIA",61.2,0,11)

"FIA",61.2,0,"RLRO")

"FIA",61.2,0,"VR")
5.2^LR
"FIA",61.2,61.2)
1
"FIA",61.2,61.2,64.9102)

"INIT")
LR495PO
"KRN",.402,2791,-1)
0^1
"KRN",.402,2791,0)
LRMIETI INACTIVE DATE^3170821.0958^@^61.2^^@^3171010
"KRN",.402,2791,"%D",0)
^^3^3^3170821^
"KRN",.402,2791,"%D",1,0)
This input template is for updatinging the Inactive Date field in
"KRN",.402,2791,"%D",2,0)
the Etiology Field File. it is for use by the LIM or the Microbiology
"KRN",.402,2791,"%D",3,0)
Supervisor.
"KRN",.402,2791,"DR",1,61.2)
64.9102;
"KRN",3.8,700,-1)
0^1
"KRN",3.8,700,0)
LMI^PU^y^^^^
"KRN",3.8,700,2,0)
^3.801^1^1^3170822^^^^
"KRN",3.8,700,2,1,0)
MAIL GROUP TO RECEIVE WORKLOAD CONFIRMATION MESSAGES FROM AUSTIN.
"KRN",3.8,700,3)

"KRN",3.8,700,5,0)
^3.811P
"KRN",3.8,1326,-1)
0^2
"KRN",3.8,1326,0)
LAB MAPPING^PU^n^^^^
"KRN",3.8,1326,2,0)
^3.801^7^7^3111206^^^^
"KRN",3.8,1326,2,1,0)
Used for sending automated system messages to the recipients when 
"KRN",3.8,1326,2,2,0)
certain fields of monitored files are added and/or modified.
"KRN",3.8,1326,2,3,0)
 
"KRN",3.8,1326,2,4,0)
Example: When a NAME field (#.01) of ETIOLOGY FIELD file (#61.2) is 
"KRN",3.8,1326,2,5,0)
created or modified, an ERT alert is automatically generated
"KRN",3.8,1326,2,6,0)
and members of this mailgroup receive a message containing ERT tracking
"KRN",3.8,1326,2,7,0)
information.
"KRN",3.8,1326,3)

"KRN",19,1311,-1)
2^1
"KRN",19,1311,0)
LRMI^Microbiology menu^^M^.5^LRMICRO^^^^^^26^^^1
"KRN",19,1311,10,0)
^19.01IP^26^20
"KRN",19,1311,10,25,0)
2921497^MIME
"KRN",19,1311,10,25,"^")
LRMI EDIT INACT DT MULTI 61.2
"KRN",19,1311,10,26,0)
2921496^MISE
"KRN",19,1311,10,26,"^")
LRMI EDIT INACT DT SINGLE 61.2
"KRN",19,1311,"U")
MICROBIOLOGY MENU
"KRN",19,2921346,-1)
2^4
"KRN",19,2921346,0)
LR NDS LIM MENU^LIM NDS MENU^^M^520651128^^^^^^^26
"KRN",19,2921346,10,0)
^19.01IP^11^11
"KRN",19,2921346,10,10,0)
2921497^LIME
"KRN",19,2921346,10,10,"^")
LRMI EDIT INACT DT MULTI 61.2
"KRN",19,2921346,10,11,0)
2921496^LISE
"KRN",19,2921346,10,11,"^")
LRMI EDIT INACT DT SINGLE 61.2
"KRN",19,2921346,"U")
LIM NDS MENU
"KRN",19,2921496,-1)
0^3
"KRN",19,2921496,0)
LRMI EDIT INACT DT SINGLE 61.2^Edit Inactive DT Single - ETIOLOGY File^^R^^LRSUPER^^^^^^LAB SERVICE
"KRN",19,2921496,1,0)
^19.06^2^2^3170818^^^^
"KRN",19,2921496,1,1,0)
This option allows the LIM or Micro Supervisor to edit the INACTIVE
"KRN",19,2921496,1,2,0)
DATE for ETIOLOGY File (#61.2) items.
"KRN",19,2921496,25)
EN^LRMIEDIS
"KRN",19,2921496,"U")
EDIT INACTIVE DT SINGLE - ETIO
"KRN",19,2921497,-1)
0^2
"KRN",19,2921497,0)
LRMI EDIT INACT DT MULTI 61.2^Edit Inactive DT Multiple - ETIOLOGY File^^R^^LRSUPER^^^^^^LAB SERVICE
"KRN",19,2921497,1,0)
^19.06^3^3^3170818^^^^
"KRN",19,2921497,1,1,0)
This option allows the LIM or Micro Supervisor to 'walk'
"KRN",19,2921497,1,2,0)
the ETIOLOGY File (#61.2) and enter the INACTIVE DATE for
"KRN",19,2921497,1,3,0)
appropriate Organisms.
"KRN",19,2921497,25)
EN^LRMIEDIM
"KRN",19,2921497,"U")
EDIT INACTIVE DT MULTIPLE - ET
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950611
"PKG",26,22,1,"PAH",1,0)
495^3180108
"PKG",26,22,1,"PAH",1,1,0)
^^1^1^3180108
"PKG",26,22,1,"PAH",1,1,1,0)
See National Patch Module for details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","LR495PO")
0^3^B2398805^n/a
"RTN","LR495PO",1,0)
LR495PO ;BPFO/DTG - POST INSTALL ROUTINE FOR PATCH LR*5.2*495 ;09/18/2017
"RTN","LR495PO",2,0)
 ;;5.2;LAB SERVICE;**495**;Sep 27, 1994;Build 6
"RTN","LR495PO",3,0)
 ;
"RTN","LR495PO",4,0)
 ;post install routine to save a copy of 61, 61.2, 62, 95.4 in ^XTEMP
"RTN","LR495PO",5,0)
 ;
"RTN","LR495PO",6,0)
 ;
"RTN","LR495PO",7,0)
EN ; entry for data save
"RTN","LR495PO",8,0)
 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LR495PO",9,0)
 N WB,LRX,LRXNM,LRDTA,LRMSG
"RTN","LR495PO",10,0)
 S WB=$$SITE^VASITE,WB=$P(WB,U,1)
"RTN","LR495PO",11,0)
 S LRXNM="LR SAVE OF 61,61.2,62,95.4",LRX=0
"RTN","LR495PO",12,0)
 S LRDTA=$G(^XTMP(LRXNM,0)) S:LRDTA="" $P(LRDTA,U,3)="Save of file 61,61.2,62 and 95.4 for patch LR*5.2*495"
"RTN","LR495PO",13,0)
 S $P(LRDTA,U,1)=$$FMADD^XLFDT(DT,365),$P(LRDTA,U,2)=$$NOW^XLFDT(),^XTMP(LRXNM,0)=LRDTA
"RTN","LR495PO",14,0)
 S LRX=$G(^XTMP(LRXNM,"D",0)),LRX=LRX+1,^XTMP(LRXNM,"D",0)=LRX
"RTN","LR495PO",15,0)
 ;save 61
"RTN","LR495PO",16,0)
 M ^XTMP(LRXNM,"D",LRX,"61")=^LAB(61)
"RTN","LR495PO",17,0)
 ;save 61.2
"RTN","LR495PO",18,0)
 M ^XTMP(LRXNM,"D",LRX,"61.2")=^LAB(61.2)
"RTN","LR495PO",19,0)
 ;save 62
"RTN","LR495PO",20,0)
 M ^XTMP(LRXNM,"D",LRX,"62")=^LAB(62)
"RTN","LR495PO",21,0)
 ;save 95.4
"RTN","LR495PO",22,0)
 M ^XTMP(LRXNM,"D",LRX,"95.4")=^LAHM(95.4)
"RTN","LR495PO",23,0)
 ;
"RTN","LR495PO",24,0)
PSTDONE ; display FINISHED message
"RTN","LR495PO",25,0)
 K LRMSG
"RTN","LR495PO",26,0)
 S LRMSG(1)=""
"RTN","LR495PO",27,0)
 S LRMSG(2)=""
"RTN","LR495PO",28,0)
 S LRMSG(3)="***** Post-installation of Patch LR*5.2*495 has completed successfully. *****"
"RTN","LR495PO",29,0)
 S LRMSG(4)=""
"RTN","LR495PO",30,0)
 D MES^XPDUTL(.LRMSG)
"RTN","LR495PO",31,0)
 ;
"RTN","LR495PO",32,0)
 K WB,LRX,LRXNM,LRDTA,LRMSG
"RTN","LR495PO",33,0)
 ;
"RTN","LR495PO",34,0)
 Q
"RTN","LR495PO",35,0)
 ;
"RTN","LRMIEDIM")
0^5^B15196739^n/a
"RTN","LRMIEDIM",1,0)
LRMIEDIM ;BPFO/DTG - LAB MICRO - LOOP ETIOLOGY FIELD FILE 61.2 FOR INACTIVE DATE ;08/15/2017
"RTN","LRMIEDIM",2,0)
 ;;5.2;LAB SERVICE;**495**;Sep 27, 1994;Build 6
"RTN","LRMIEDIM",3,0)
 ;
"RTN","LRMIEDIM",4,0)
 ;associated to the [LRMI EDIT INACT DT MULTI 61.2] option
"RTN","LRMIEDIM",5,0)
 ;
"RTN","LRMIEDIM",6,0)
 ;This routine will go through the 61.2 by IDENTIFIER oldest to newest for those entries
"RTN","LRMIEDIM",7,0)
 ;that do not have an INACTIVE DATE. The last entry (if the file for that combination was
"RTN","LRMIEDIM",8,0)
 ;not complete) will be stored for upto 6 months so that when re-starting for that identifier
"RTN","LRMIEDIM",9,0)
 ;it will allow to restart with that item if it does not have a inactive date or the next newest
"RTN","LRMIEDIM",10,0)
 ;if it does. The person will also have the choice to start over from the oldest entry.
"RTN","LRMIEDIM",11,0)
 ;
"RTN","LRMIEDIM",12,0)
 Q
"RTN","LRMIEDIM",13,0)
 ;
"RTN","LRMIEDIM",14,0)
EN ; entry point from option
"RTN","LRMIEDIM",15,0)
 N DIR,DIRUT,DIC,A,B,LRXT,MSG,LRRUN,LR0,LRIDENT,LRIDNM,X,Y,DIE,DTOUT,DR,DA,LR6491
"RTN","LRMIEDIM",16,0)
EN1 S U="^" I $G(DT)="" S DT=$$DT^XLFDT
"RTN","LRMIEDIM",17,0)
 S B=$$SITE^VASITE,B=$P(B,U,1),LRXT="LRENT-INACT"
"RTN","LRMIEDIM",18,0)
 ;
"RTN","LRMIEDIM",19,0)
 D ASKFILE
"RTN","LRMIEDIM",20,0)
 I $D(DIRUT)!(Y="^") K MSG D  G OUT
"RTN","LRMIEDIM",21,0)
 . S MSG(1)="Identifier Type Not Selected. Quitting"
"RTN","LRMIEDIM",22,0)
 . S MSG(2)=""
"RTN","LRMIEDIM",23,0)
 . D DISP
"RTN","LRMIEDIM",24,0)
 S LRIDENT=Y,LRIDNM=Y(0)
"RTN","LRMIEDIM",25,0)
 K DIR,DIRUT
"RTN","LRMIEDIM",26,0)
 ;get ^XTMP for identifier
"RTN","LRMIEDIM",27,0)
 S LRRUN=0,A=$G(^XTMP(LRXT,0)),B=$G(^XTMP(LRXT,LRIDENT,0))
"RTN","LRMIEDIM",28,0)
 I +B>0 S LRRUN=+B
"RTN","LRMIEDIM",29,0)
 I A="" S $P(A,U,3)="Save of Etiology File 61.2 Identifiers for Inactive Date entry"
"RTN","LRMIEDIM",30,0)
 S $P(A,U,1)=$$FMADD^XLFDT(DT,60),$P(A,U,2)=DT
"RTN","LRMIEDIM",31,0)
 S ^XTMP(LRXT,0)=A,^XTMP(LRXT,LRIDENT,0)=LRRUN
"RTN","LRMIEDIM",32,0)
 I LRRUN=0 D XSET(LRIDENT,"") G LOOP
"RTN","LRMIEDIM",33,0)
 S A=$$GETVAL(LRRUN)
"RTN","LRMIEDIM",34,0)
 K DIR,DIRUT S DIR(0)="SO^C:CONTINUE WITH "_$E($P(A,U,1),1,45)_"  ["_(+B)_"];S:START OVER"
"RTN","LRMIEDIM",35,0)
 S DIR("L",1)="   CONTINUE WITH "_$E($P(A,U,1),1,45)_"  ["_(+B)_"] (C)"
"RTN","LRMIEDIM",36,0)
 S DIR("L")="   START OVER (S)"
"RTN","LRMIEDIM",37,0)
 D ^DIR
"RTN","LRMIEDIM",38,0)
 I $D(DIRUT)!(Y="^") K MSG D  G OUT
"RTN","LRMIEDIM",39,0)
 . S MSG(1)="Continuation Method Not Selected. Quitting"
"RTN","LRMIEDIM",40,0)
 . S MSG(2)=""
"RTN","LRMIEDIM",41,0)
 . D DISP
"RTN","LRMIEDIM",42,0)
 I $G(Y)="S" S LRRUN=0 G LOOP
"RTN","LRMIEDIM",43,0)
 S LRRUN=LRRUN+1
"RTN","LRMIEDIM",44,0)
 ;
"RTN","LRMIEDIM",45,0)
LOOP S LRRUN=$O(^LAB(61.2,LRRUN)) I 'LRRUN D XSET(LRIDENT,"") D  G OUT
"RTN","LRMIEDIM",46,0)
 . K MSG S MSG(1)="All Entries for the Selected Identifier ("_LRIDNM_") have been reviewed. Quitting"
"RTN","LRMIEDIM",47,0)
 . S MSG(2)=""
"RTN","LRMIEDIM",48,0)
 . D DISP
"RTN","LRMIEDIM",49,0)
 S LR0=$G(^LAB(61.2,LRRUN,0)),LR6491=$G(^LAB(61.2,LRRUN,"64.91"))
"RTN","LRMIEDIM",50,0)
 ; check if inactive date
"RTN","LRMIEDIM",51,0)
 I $P(LR6491,U,2)'="" D XSET(LRIDENT,LRRUN) G LOOP
"RTN","LRMIEDIM",52,0)
 ; check if right identifier
"RTN","LRMIEDIM",53,0)
 I LRIDENT="X" G LP1
"RTN","LRMIEDIM",54,0)
 I $P(LR0,U,5)=""&(LRIDENT="N") G LP1
"RTN","LRMIEDIM",55,0)
 I $P(LR0,U,5)'=LRIDENT D XSET(LRIDENT,LRRUN) G LOOP
"RTN","LRMIEDIM",56,0)
 ;
"RTN","LRMIEDIM",57,0)
LP1 ; ask inactive date
"RTN","LRMIEDIM",58,0)
 ; first lock entry
"RTN","LRMIEDIM",59,0)
 L +^LAB(61.2,LRRUN):60 I '$T D  G OUT
"RTN","LRMIEDIM",60,0)
 . K MSG S MSG(1)="Not Able to Lock Entry ("_$E($P(LR0,U,1),1,45)_" ["_LRRUN_"]). Quitting"
"RTN","LRMIEDIM",61,0)
 . S MSG(2)=""
"RTN","LRMIEDIM",62,0)
 . D DISP
"RTN","LRMIEDIM",63,0)
 W !!,"Organism: ",$E($P(LR0,U,1),1,45)," (",LRRUN,")"
"RTN","LRMIEDIM",64,0)
 K Y,DIE,DTOUT S DIE("NO^")="OUTOK",DIE="^LAB(61.2,",DA=LRRUN,DR="64.9102" D ^DIE
"RTN","LRMIEDIM",65,0)
 L -^LAB(61.2,LRRUN)
"RTN","LRMIEDIM",66,0)
 ; check if ^ was entered
"RTN","LRMIEDIM",67,0)
 I $D(Y) D  G OUT
"RTN","LRMIEDIM",68,0)
 . K MSG S MSG(1)="An '^' was detected. Quitting"
"RTN","LRMIEDIM",69,0)
 . S MSG(2)=""
"RTN","LRMIEDIM",70,0)
 . D DISP
"RTN","LRMIEDIM",71,0)
 D XSET(LRIDENT,LRRUN)
"RTN","LRMIEDIM",72,0)
 G LOOP
"RTN","LRMIEDIM",73,0)
 ;
"RTN","LRMIEDIM",74,0)
ASKFILE()  ; Ask user to select Identifier
"RTN","LRMIEDIM",75,0)
 K DIR,DIRUT
"RTN","LRMIEDIM",76,0)
 S DIR(0)="SO^B:BACTERIUM;F:FUNGUS;P:PARASITE;M:MYCOBACTERIUM;V:VIRUS;C:CHEMICAL;D:DRUG;R:RICKETTSIAE;A:PHYSICAL AGENT;N:NULL;X:ALL"
"RTN","LRMIEDIM",77,0)
 S DIR("L",1)="   BACTERIUM           (B)"
"RTN","LRMIEDIM",78,0)
 S DIR("L",2)="   FUNGUS              (F)"
"RTN","LRMIEDIM",79,0)
 S DIR("L",3)="   PARASITE            (P)"
"RTN","LRMIEDIM",80,0)
 S DIR("L",4)="   MYCOBACTERIUM       (M)"
"RTN","LRMIEDIM",81,0)
 S DIR("L",5)="   VIRUS               (V)"
"RTN","LRMIEDIM",82,0)
 S DIR("L",6)="   CHEMICAL            (C)"
"RTN","LRMIEDIM",83,0)
 S DIR("L",7)="   DRUG                (D)"
"RTN","LRMIEDIM",84,0)
 S DIR("L",8)="   RICKETTSIAE         (R)"
"RTN","LRMIEDIM",85,0)
 S DIR("L",9)="   PHYSICAL AGENT      (A)"
"RTN","LRMIEDIM",86,0)
 S DIR("L",10)="   NULL                (N)"
"RTN","LRMIEDIM",87,0)
 S DIR("L")="   ALL                 (X)"
"RTN","LRMIEDIM",88,0)
 S DIR("A")="Enter the Identifier Name or Code "
"RTN","LRMIEDIM",89,0)
 D ^DIR
"RTN","LRMIEDIM",90,0)
 Q
"RTN","LRMIEDIM",91,0)
 ;
"RTN","LRMIEDIM",92,0)
DISP ; display message
"RTN","LRMIEDIM",93,0)
 D CLEAR^VALM1
"RTN","LRMIEDIM",94,0)
 D BMES^XPDUTL(.MSG)
"RTN","LRMIEDIM",95,0)
 Q
"RTN","LRMIEDIM",96,0)
 ;
"RTN","LRMIEDIM",97,0)
GETVAL(C) ; get 61.2 info
"RTN","LRMIEDIM",98,0)
 N A,B,D
"RTN","LRMIEDIM",99,0)
 S A=$G(^LAB(61.2,C,0)),B=$G(^LAB(61.2,C,64.91))
"RTN","LRMIEDIM",100,0)
 S D=$P(A,U,1)_U_$P(A,U,5)_U_$P(B,U,2)
"RTN","LRMIEDIM",101,0)
 Q D
"RTN","LRMIEDIM",102,0)
 ;
"RTN","LRMIEDIM",103,0)
OUT ; quit
"RTN","LRMIEDIM",104,0)
 K DIR,DIRUT,DIC,A,B,LRXT,MSG,LRRUN,LR0,LRIDENT,LRIDNM,X,Y,DIE,DTOUT,DR,DA,LR6491,DIE("NO^")
"RTN","LRMIEDIM",105,0)
 Q
"RTN","LRMIEDIM",106,0)
 ;
"RTN","LRMIEDIM",107,0)
XSET(A,B) ; set into XTMP
"RTN","LRMIEDIM",108,0)
 ; A - Identifier,  B - value
"RTN","LRMIEDIM",109,0)
 S ^XTMP(LRXT,A,0)=B
"RTN","LRMIEDIM",110,0)
 Q
"RTN","LRMIEDIS")
0^4^B4897577^n/a
"RTN","LRMIEDIS",1,0)
LRMIEDIS ;BPFO/DTG - LAB MICRO - ETIOLOGY FIELD FILE 61.2 FOR INACTIVE DATE ;08/15/2017
"RTN","LRMIEDIS",2,0)
 ;;5.2;LAB SERVICE;**495**;Sep 27, 1994;Build 6
"RTN","LRMIEDIS",3,0)
 ;
"RTN","LRMIEDIS",4,0)
 ; uses input template [LRMIETI INACTIVE DATE]
"RTN","LRMIEDIS",5,0)
 ;
"RTN","LRMIEDIS",6,0)
 ; allows the Micro Supervisor or LIM to edit the Inactive Date field (#64.9102) in
"RTN","LRMIEDIS",7,0)
 ; the Etiology Field File
"RTN","LRMIEDIS",8,0)
 ;
"RTN","LRMIEDIS",9,0)
 Q
"RTN","LRMIEDIS",10,0)
 ;
"RTN","LRMIEDIS",11,0)
EN ; Edit the Inactive Date
"RTN","LRMIEDIS",12,0)
 N LRETIDONE,MSG
"RTN","LRMIEDIS",13,0)
 D INFO S LRETIDONE=0
"RTN","LRMIEDIS",14,0)
 F  Q:LRETIDONE  D
"RTN","LRMIEDIS",15,0)
 . N DIE,DA,DR,DIC,X,Y,DIR,DUOUT,LRETI,Y,X
"RTN","LRMIEDIS",16,0)
 . N LRETINAM,LR0,LR6491,LXA,LXB,DIQ,DTOUT
"RTN","LRMIEDIS",17,0)
 . ;
"RTN","LRMIEDIS",18,0)
 . S LRETI=$$GETETI(.LRETIDONE) Q:$G(LRETIDONE)  ; Get Etiology IEN
"RTN","LRMIEDIS",19,0)
 . ; get 61.2 info
"RTN","LRMIEDIS",20,0)
 . ; .01 - NAME, 2 - SNOMED CODE, 3 - GRAM STAIN, 4 - IDENTIFIER, 64.9102 - INACTIVE DATE
"RTN","LRMIEDIS",21,0)
 . S DA=LRETI,DIQ="LXB",DIQ(0)="IE",DIC=61.2,DR=".01;2;3;4;64.9102" D EN^DIQ1
"RTN","LRMIEDIS",22,0)
 . K LXA M LXA=LXB(61.2,DA) K LXB
"RTN","LRMIEDIS",23,0)
 . ; Print info
"RTN","LRMIEDIS",24,0)
 . W !!,"Organism: ",$G(LXA(.01,"E")),!,"Snomed Code: ",$G(LXA(2,"E")),?25,"Gram Stain: ",$G(LXA(3,"E"))
"RTN","LRMIEDIS",25,0)
 . W !,"Identifier: ",$G(LXA(4,"E")),?28,"Inactive Date: ",$G(LXA(64.9102,"E")),!
"RTN","LRMIEDIS",26,0)
 . ; use input template
"RTN","LRMIEDIS",27,0)
 . K DIE,DTOUT,DR,Y,X
"RTN","LRMIEDIS",28,0)
 . S DIE="^LAB(61.2,"
"RTN","LRMIEDIS",29,0)
 . S DR="[LRMIETI INACTIVE DATE]"
"RTN","LRMIEDIS",30,0)
 . S DA=LRETI
"RTN","LRMIEDIS",31,0)
 . S DIE("NO^")="OUTOK"
"RTN","LRMIEDIS",32,0)
 . D ^DIE
"RTN","LRMIEDIS",33,0)
 . ;set done flag if '^' is entered while asking date
"RTN","LRMIEDIS",34,0)
 . I $D(Y) S LRETIDONE=1 Q
"RTN","LRMIEDIS",35,0)
 . ;
"RTN","LRMIEDIS",36,0)
 G OUT
"RTN","LRMIEDIS",37,0)
 ;
"RTN","LRMIEDIS",38,0)
GETETI(LRETIDONE)  ; Prompt user for Etiology Field file (#61.2) entry
"RTN","LRMIEDIS",39,0)
 N DIC
"RTN","LRMIEDIS",40,0)
 S DIC=61.2,DIC(0)="QEAMZ"
"RTN","LRMIEDIS",41,0)
 W ! D ^DIC I Y<0  S LRETIDONE=1 Q ""  ; Nothing selected, quit
"RTN","LRMIEDIS",42,0)
 S LRETI=+Y,LRETINAM=$P(Y,"^",2)
"RTN","LRMIEDIS",43,0)
 Q LRETI
"RTN","LRMIEDIS",44,0)
 ;
"RTN","LRMIEDIS",45,0)
INFO ; Display message, clear screen
"RTN","LRMIEDIS",46,0)
 N MSG
"RTN","LRMIEDIS",47,0)
 S MSG(1)="   This option allows the editing of the INACTIVE DATE field"
"RTN","LRMIEDIS",48,0)
 S MSG(2)="   in the ETIOLOGY FIELD File (#61.2)."
"RTN","LRMIEDIS",49,0)
 S MSG(3)=""
"RTN","LRMIEDIS",50,0)
 D CLEAR^VALM1
"RTN","LRMIEDIS",51,0)
 D BMES^XPDUTL(.MSG)
"RTN","LRMIEDIS",52,0)
 Q
"RTN","LRMIEDIS",53,0)
 ;
"RTN","LRMIEDIS",54,0)
OUT ; quit point
"RTN","LRMIEDIS",55,0)
 K LRETIDONE,MSG
"RTN","LRMIEDIS",56,0)
 Q
"RTN","LRSRVR")
0^1^B20098567^B19202402
"RTN","LRSRVR",1,0)
LRSRVR ;DALOI/RLM/JMC - LAB DATA SERVER ;11/18/11  16:47
"RTN","LRSRVR",2,0)
 ;;5.2;LAB SERVICE;**232,303,346,350,468,495**;Sep 27, 1994;Build 6
"RTN","LRSRVR",3,0)
 ;
"RTN","LRSRVR",4,0)
 ; Reference to ^%ZOSF supported by IA #10096
"RTN","LRSRVR",5,0)
 ; Reference to $$SITE^VASITE supported by IA #10112
"RTN","LRSRVR",6,0)
 ;
"RTN","LRSRVR",7,0)
 ; 5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*468; Feb 10 2016
"RTN","LRSRVR",8,0)
 ; 5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*495; Jul 10 2017
"RTN","LRSRVR",9,0)
 ;
"RTN","LRSRVR",10,0)
START ;
"RTN","LRSRVR",11,0)
 N LRSITE,LRST,LRSUB,LRXMZ
"RTN","LRSRVR",12,0)
 ;
"RTN","LRSRVR",13,0)
 ; Save incoming server message id for cleanup
"RTN","LRSRVR",14,0)
 S LRXMZ=XMZ
"RTN","LRSRVR",15,0)
 ;
"RTN","LRSRVR",16,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",17,0)
 ; Determine station name and number
"RTN","LRSRVR",18,0)
 S LRSITE=$$SITE^VASITE,LRSTN=$P(LRSITE,"^",2),LRST=$P(LRSITE,"^",3)
"RTN","LRSRVR",19,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR",20,0)
 ;
"RTN","LRSRVR",21,0)
 S LRSUB=$$UP^XLFSTR(XQSUB)
"RTN","LRSRVR",22,0)
 ;
"RTN","LRSRVR",23,0)
 ; The first line of the message tells who requested the action and when
"RTN","LRSRVR",24,0)
 ; The second line tells when the server is activated and no data can be
"RTN","LRSRVR",25,0)
 ; gathered from the MailMan message.  This line gets replaced if the
"RTN","LRSRVR",26,0)
 ; server finds something to do.
"RTN","LRSRVR",27,0)
 S ^TMP($J,"LRDATA",1)=LRSUB_" triggered at "_LRSTN_" by "_XMFROM_" on "_XQDATE
"RTN","LRSRVR",28,0)
 S LRACTION=$S(LRSUB["CHECKSUM":"Checksums Generated",1:LRSUB)
"RTN","LRSRVR",29,0)
 S ^TMP($J,"LRDATA",2)="I don't know how to "_LRACTION_" at "_LRSTN
"RTN","LRSRVR",30,0)
 ;
"RTN","LRSRVR",31,0)
 ;
"RTN","LRSRVR",32,0)
 ; If the subject contains "CHECKSUM" send a report of the current checksums to the LABTEAM group on RDMAIL
"RTN","LRSRVR",33,0)
 I LRSUB["CHECKSUM" D CSUM Q
"RTN","LRSRVR",34,0)
 ;
"RTN","LRSRVR",35,0)
 ; If the subject contains "LIST" send a report based on the list of routines in the body of the message back to the original sender.
"RTN","LRSRVR",36,0)
 I LRSUB["LIST" D SUMLST Q
"RTN","LRSRVR",37,0)
 ;
"RTN","LRSRVR",38,0)
 ; If the subject equals "LOINC" send the local LOINC data to the national list.
"RTN","LRSRVR",39,0)
 I LRSUB="LOINC" D LOINC^LRSRVR1 Q
"RTN","LRSRVR",40,0)
 ;
"RTN","LRSRVR",41,0)
 ; If the subject contains "LOCAL REPORT" send the local LOINC data to the sender.
"RTN","LRSRVR",42,0)
 I LRSUB="LOCAL REPORT" D LOINCL^LRSRVR1 Q
"RTN","LRSRVR",43,0)
 I LRSUB="LOCAL REPORT DELIMIT" D LOINCLD^LRSRVR3 Q
"RTN","LRSRVR",44,0)
 ;
"RTN","LRSRVR",45,0)
 ; Send RELMA mapper formatted message
"RTN","LRSRVR",46,0)
 I LRSUB="RELMA" D SERVER^LRSRVR2 Q
"RTN","LRSRVR",47,0)
 ; Process RELMA mapper Packman global message
"RTN","LRSRVR",48,0)
 I LRSUB="RELMA MAPPING" D RMAP^LRSRVR5 Q
"RTN","LRSRVR",49,0)
 ;
"RTN","LRSRVR",50,0)
 ; Send SNOMED mapping formatted message
"RTN","LRSRVR",51,0)
 I LRSUB="SNOMED" D SERVER^LRSRVR6 Q
"RTN","LRSRVR",52,0)
 I LRSUB="SNOMED MAPPING" D CTMAP^LRSRVR5 Q
"RTN","LRSRVR",53,0)
 ;
"RTN","LRSRVR",54,0)
 ; Send NLT/CPT mapping formatted message
"RTN","LRSRVR",55,0)
 I LRSUB="NLT/CPT" D SERVER^LRSRVR7 Q
"RTN","LRSRVR",56,0)
 ;
"RTN","LRSRVR",57,0)
 ;START OF CHANGE FOR LR*5.2*468
"RTN","LRSRVR",58,0)
 I LRSUB="MLTF" D SERVER^LRSRVR9 Q
"RTN","LRSRVR",59,0)
 ;END OF CHANGE FOR LR*5.2*468
"RTN","LRSRVR",60,0)
 ;
"RTN","LRSRVR",61,0)
 ;START OF CHANGE FOR LR*5.2*495 receive file updates for 61,61.2,62
"RTN","LRSRVR",62,0)
 I LRSUB["SCTLOAD" D SERVER^LRSRVR9B Q
"RTN","LRSRVR",63,0)
 ;END OF CHANGE FOR LR*5.2*495
"RTN","LRSRVR",64,0)
 ;
"RTN","LRSRVR",65,0)
 ; If subject not understood by server, send a message to the sender
"RTN","LRSRVR",66,0)
 ;  that the server can't understand their instructions.
"RTN","LRSRVR",67,0)
 K XMY
"RTN","LRSRVR",68,0)
 S XMY(XQSND)=""
"RTN","LRSRVR",69,0)
 ;
"RTN","LRSRVR",70,0)
EXIT ; If all went well, report that too.
"RTN","LRSRVR",71,0)
 ; Mail the errors and successes back to the Roll-Up group at Forum.
"RTN","LRSRVR",72,0)
 N LRNOW
"RTN","LRSRVR",73,0)
 S LRNOW=$$NOW^XLFDT
"RTN","LRSRVR",74,0)
 S XMDUN="Lab Server",XMDUZ=".5",XMSUB=LRSTN_" LAB SERVER ("_LRNOW_")"
"RTN","LRSRVR",75,0)
 S XMTEXT="^TMP($J,""LRDATA"","
"RTN","LRSRVR",76,0)
 I '$D(XMY) S XMY("G.LABTEAM@ISC-DOMAIN.EXT")=""
"RTN","LRSRVR",77,0)
 D ^XMD
"RTN","LRSRVR",78,0)
 ;
"RTN","LRSRVR",79,0)
CLEAN ; Cleanup and exit
"RTN","LRSRVR",80,0)
 I $D(^TMP($J,"LRDTERR")) D
"RTN","LRSRVR",81,0)
 . S XMDUN="Lab Server",XMDUZ=".5"
"RTN","LRSRVR",82,0)
 . S XMSUB=LRSTN_" LAB SERVER ERROR ("_LRNOW_")"
"RTN","LRSRVR",83,0)
 . S XMTEXT="^TMP($J,""LRDTERR"","
"RTN","LRSRVR",84,0)
 . S XMY("G.LABTEAM@ISC-DOMAIN.EXT")="",XMY(XQSND)=""
"RTN","LRSRVR",85,0)
 . D ^XMD
"RTN","LRSRVR",86,0)
 ;
"RTN","LRSRVR",87,0)
 ; Clean up server message in MailMan
"RTN","LRSRVR",88,0)
 I $G(LRXMZ)>0 D ZAPSERV^XMXAPI("S.LRLABSERVER",LRXMZ)
"RTN","LRSRVR",89,0)
 ;
"RTN","LRSRVR",90,0)
 K %,%DT,%H,D,DD,DIC,DIERR,ERROR,FILL,LINE,LOINCDTA,LOINCDTB,LOINCTAS
"RTN","LRSRVR",91,0)
 K LRA,LRAA,LRACTION,LRB,LRCLST,LRDA,LRERR,LRFOUND,LRFOUND1,LRI,LRLINE
"RTN","LRSRVR",92,0)
 K LRNDE,LROUT,LRPNT,LRPNTA,LRPNTB,LRRDT,LRRN,LRROOT,LRST,LRSTN,LRSUB
"RTN","LRSRVR",93,0)
 K X,XMDUN,XMDUZ,XMER,XMFROM,XMREC,XMRG,XMSUB,XMTEXT,XMY,XMZ,XQDATE
"RTN","LRSRVR",94,0)
 K XQSND,XQSUB,Y,ZTQUEUED,ZTSK
"RTN","LRSRVR",95,0)
 ;
"RTN","LRSRVR",96,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",97,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRSRVR",98,0)
 Q
"RTN","LRSRVR",99,0)
 ;
"RTN","LRSRVR",100,0)
 ;
"RTN","LRSRVR",101,0)
CSUM ;Calculate checksum for routines and transmit errors to LABTEAM group
"RTN","LRSRVR",102,0)
 S X=$T(+0) X ^%ZOSF("RSUM") S ^TMP($J,"LRDATA",2)=X_" at "_LRSTN_" = "_Y
"RTN","LRSRVR",103,0)
 S LRI=0
"RTN","LRSRVR",104,0)
 F  S LRI=$O(^LAB(69.91,1,"ROU",LRI)) Q:'LRI  D
"RTN","LRSRVR",105,0)
 . S X=$P(^LAB(69.91,1,"ROU",LRI,0),"^")
"RTN","LRSRVR",106,0)
 . S LRA=$P(^LAB(69.91,1,"ROU",LRI,0),"^",4)
"RTN","LRSRVR",107,0)
 . X ^%ZOSF("TEST") I '$T S ^TMP($J,"LRDATA",LRI+3)=X_" is missing." Q
"RTN","LRSRVR",108,0)
 . X ^%ZOSF("RSUM") I +$G(Y)'=LRA S ^TMP($J,"LRDATA",LRI+3)=X_" should be "_LRA_" is "_+$G(Y)
"RTN","LRSRVR",109,0)
 S XMSUB="Lab Checksum data at "_LRSTN_" run on "_XQDATE
"RTN","LRSRVR",110,0)
 D EXIT
"RTN","LRSRVR",111,0)
 Q
"RTN","LRSRVR",112,0)
 ;
"RTN","LRSRVR",113,0)
 ;
"RTN","LRSRVR",114,0)
SUMLST ;Calculate checksum for routines and transmit to requestor
"RTN","LRSRVR",115,0)
 K ^TMP($J,"LRDATA"),^TMP($J,"LRDTERR")
"RTN","LRSRVR",116,0)
 S LRCLST=$P($$SITE^VASITE,"^",2),LINE=2,$P(FILL," ",8)=""
"RTN","LRSRVR",117,0)
 S ^TMP($J,"LRDATA",1)="Lab Server triggered at "_LRCLST_" by "_XMFROM_" on "_XQDATE
"RTN","LRSRVR",118,0)
 ;
"RTN","LRSRVR",119,0)
 ; Check for a plus sign in front of the routine name.  Bypass the
"RTN","LRSRVR",120,0)
 ; Test to see if the routine exists if it's there.
"RTN","LRSRVR",121,0)
 ; DSM won't check %routines to make sure they exist, Cache will.
"RTN","LRSRVR",122,0)
 F  X XMREC Q:XMER<0  S X=XMRG D
"RTN","LRSRVR",123,0)
  . I X'?1"+".E X ^%ZOSF("TEST") I '$T S ^TMP($J,"LRDATA",LINE)=X_$E(FILL,$L(X),8)_" is missing.",LINE=LINE+1 Q
"RTN","LRSRVR",124,0)
  . ;Strip off the plus sign so that the checksum routine can find it.
"RTN","LRSRVR",125,0)
  . S X=$TR(X,"+","")
"RTN","LRSRVR",126,0)
  . X ^%ZOSF("RSUM") S ^TMP($J,"LRDATA",LINE)=X_$E(FILL,$L(X),8)_" is "_Y,LINE=LINE+1
"RTN","LRSRVR",127,0)
 S XMSUB="Checksum data at "_LRCLST_" run on "_XQDATE
"RTN","LRSRVR",128,0)
 S XMY(XQSND)=""
"RTN","LRSRVR",129,0)
 D EXIT
"RTN","LRSRVR",130,0)
 Q
"RTN","LRSRVR6")
0^2^B41247527^B37896776
"RTN","LRSRVR6",1,0)
LRSRVR6 ;DALOI/JMC,TMK - LAB DATA SERVER CONT'D SNOMED EXTRACT ; 17 Apr 2013  2:03 PM
"RTN","LRSRVR6",2,0)
 ;;5.2;LAB SERVICE;**346,378,350,425,460,495**;Sep 27, 1994;Build 6
"RTN","LRSRVR6",3,0)
 ;
"RTN","LRSRVR6",4,0)
 ; 5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*495; Jul 10 2017
"RTN","LRSRVR6",5,0)
 ;
"RTN","LRSRVR6",6,0)
 ; Produces SNOMED extract via LRLABSERVER option
"RTN","LRSRVR6",7,0)
 ;
"RTN","LRSRVR6",8,0)
 ; **** NOTE: if record format is changed then update corresponding extract record building in LRERT ***
"RTN","LRSRVR6",9,0)
 Q
"RTN","LRSRVR6",10,0)
 ;
"RTN","LRSRVR6",11,0)
 ;
"RTN","LRSRVR6",12,0)
SERVER ; Server entry Point
"RTN","LRSRVR6",13,0)
 N I,LRCNT,LREND,LRL,LRMSUBJ,LRST,LRSTN,LRTXT,LRX,LRY
"RTN","LRSRVR6",14,0)
 D BUILD
"RTN","LRSRVR6",15,0)
 S LRMSUBJ=LRST_" "_LRSTN_" SNOMED EXTRACT "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR6",16,0)
 D MAILSEND(LRMSUBJ)
"RTN","LRSRVR6",17,0)
 D CLEAN
"RTN","LRSRVR6",18,0)
 Q
"RTN","LRSRVR6",19,0)
 ;
"RTN","LRSRVR6",20,0)
 ;
"RTN","LRSRVR6",21,0)
BUILD ; Build extract
"RTN","LRSRVR6",22,0)
 ;
"RTN","LRSRVR6",23,0)
 N I,J,LRCNT,LRCRLF,LRETIME,LRFN,LRLEX,LRNAME,LRNODE,LRQUIT,LRROOT,LRSCT,LRSCTEC,LRSCTVER,LRSCTX,LRSPEC,LRSTIME,LRSTR,LRVAL,LRVUID,LRX,LRY,X,Y
"RTN","LRSRVR6",24,0)
 ;
"RTN","LRSRVR6",25,0)
 ;ZEXCEPT: LRST,LRSTN
"RTN","LRSRVR6",26,0)
 ;
"RTN","LRSRVR6",27,0)
 S LRSTIME=$$NOW^XLFDT,LRVAL=$$SITE^VASITE,LRST=$P(LRVAL,"^",3),LRSTN=$P(LRVAL,"^",2),LRSCTVER=""
"RTN","LRSRVR6",28,0)
 I LRST="" S LRST="???"
"RTN","LRSRVR6",29,0)
 K ^TMP($J,"LRDATA")
"RTN","LRSRVR6",30,0)
 S (LRCNT,LRCNT("SCT"),LRCNT("SCT","EC"))=0,LRCRLF=$C(13,10),LRSTR=""
"RTN","LRSRVR6",31,0)
 F I=61,61.1,61.2,61.3,61.4,61.5,61.6,62 S (LRCNT(I),LRCNT(I,"SCT"),LRCNT(I,"SCT","EC"))=0
"RTN","LRSRVR6",32,0)
 D HDR
"RTN","LRSRVR6",33,0)
 ;
"RTN","LRSRVR6",34,0)
 ; Flag to indicate if SNOMED CT is available from LEXICON.
"RTN","LRSRVR6",35,0)
 S LRLEX=0
"RTN","LRSRVR6",36,0)
 I $T(CODE^LEXTRAN)'="" S LRLEX=1
"RTN","LRSRVR6",37,0)
 ;
"RTN","LRSRVR6",38,0)
 F LRFN=61,61.1,61.2,61.3,61.4,61.5,61.6,62  D
"RTN","LRSRVR6",39,0)
 . S LRROOT="^LAB("_LRFN_",""B"")"
"RTN","LRSRVR6",40,0)
 . D FILE
"RTN","LRSRVR6",41,0)
 ;
"RTN","LRSRVR6",42,0)
 S LRETIME=$$NOW^XLFDT
"RTN","LRSRVR6",43,0)
 ; Set the final info into the ^TMP message global
"RTN","LRSRVR6",44,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR6",45,0)
 I LRSTR'="" S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN^LRSRVR4(LRSTR)
"RTN","LRSRVR6",46,0)
 S ^TMP($J,"LRDATA",LRNODE+1)=" "
"RTN","LRSRVR6",47,0)
 S ^TMP($J,"LRDATA",LRNODE+2)="end"
"RTN","LRSRVR6",48,0)
 ;
"RTN","LRSRVR6",49,0)
 S ^TMP($J,"LRDATA",1)=^TMP($J,"LRDATA",1)_" (Run time:"_$$FMDIFF^XLFDT(LRETIME,LRSTIME,3)_")"
"RTN","LRSRVR6",50,0)
 S ^TMP($J,"LRDATA",3)="SNOMED CT version......: "_LRSCTVER
"RTN","LRSRVR6",51,0)
 S J=6
"RTN","LRSRVR6",52,0)
 S ^TMP($J,"LRDATA",J)="Number of records per file:"
"RTN","LRSRVR6",53,0)
 F I=61,61.1,61.2,61.3,61.4,61.5,61.6,62 D
"RTN","LRSRVR6",54,0)
 . S J=J+1
"RTN","LRSRVR6",55,0)
 . S ^TMP($J,"LRDATA",J)=" "_$$LJ^XLFSTR($$GET1^DID(I,"","","NAME")_" File (#"_I_")",32,".")_": "_$J(LRCNT(I),5)_"  ("_LRCNT(I,"SCT")_" mapped)"
"RTN","LRSRVR6",56,0)
 . I LRCNT(I,"SCT","EC") S ^TMP($J,"LRDATA",J)=^TMP($J,"LRDATA",J)_" ("_LRCNT(I,"SCT","EC")_" exceptions)"
"RTN","LRSRVR6",57,0)
 S ^TMP($J,"LRDATA",J+1)=$$LJ^XLFSTR("Total number of records",33,".")_": "_$J(LRCNT,5)_"  ("_LRCNT("SCT")_" mapped)"
"RTN","LRSRVR6",58,0)
 I LRCNT("SCT","EC") S ^TMP($J,"LRDATA",J+1)=^TMP($J,"LRDATA",J+1)_" ("_LRCNT("SCT","EC")_" exceptions)"
"RTN","LRSRVR6",59,0)
 ;
"RTN","LRSRVR6",60,0)
 Q
"RTN","LRSRVR6",61,0)
 ;
"RTN","LRSRVR6",62,0)
 ;
"RTN","LRSRVR6",63,0)
CLEAN ;
"RTN","LRSRVR6",64,0)
 ;
"RTN","LRSRVR6",65,0)
 ;ZEXCEPT: LRIEN,LRLEN,LRNODE,LRSNM,LRSPECN
"RTN","LRSRVR6",66,0)
 ;
"RTN","LRSRVR6",67,0)
 K ^TMP($J,"LR61")
"RTN","LRSRVR6",68,0)
 K LRIEN,LRLEN,LRNODE,LRSNM,LRSPECN
"RTN","LRSRVR6",69,0)
 D CLEAN^LRSRVR
"RTN","LRSRVR6",70,0)
 D ^%ZISC
"RTN","LRSRVR6",71,0)
 Q
"RTN","LRSRVR6",72,0)
 ;
"RTN","LRSRVR6",73,0)
 ;
"RTN","LRSRVR6",74,0)
FILE ; Search file entry and build record.
"RTN","LRSRVR6",75,0)
 ;
"RTN","LRSRVR6",76,0)
 N LRNAME,LRVFLD,X
"RTN","LRSRVR6",77,0)
 ;
"RTN","LRSRVR6",78,0)
 ;ZEXCEPT: LRCNT,LRFN,LRIEN,LRLEX,LRROOT,LRSCT,LRSCTEC,LRSCTVER,LRSCTX,LRSNM,LRSPEC,LRSPECN,LRST,LRSTR,LRVUID,LRX
"RTN","LRSRVR6",79,0)
 ;
"RTN","LRSRVR6",80,0)
 ;
"RTN","LRSRVR6",81,0)
 S LRVFLD(21)=$$VFIELD^DILFD(LRFN,21)
"RTN","LRSRVR6",82,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  Q:$QS(LRROOT,2)'="B"  D
"RTN","LRSRVR6",83,0)
 . S LRIEN=$QS(LRROOT,4),LRSPEC=""
"RTN","LRSRVR6",84,0)
 . S LRNAME=$P($G(^LAB(LRFN,LRIEN,0)),"^") ;,LRNAME=$$TRIM^XLFSTR(LRNAME,"RL"," ")
"RTN","LRSRVR6",85,0)
 . I $G(@LRROOT),LRNAME'=$QS(LRROOT,3) Q
"RTN","LRSRVR6",86,0)
 . S X=$P($G(^LAB(LRFN,LRIEN,0)),"^",2)
"RTN","LRSRVR6",87,0)
 . S LRSNM=$S(LRFN'=62:X,1:"")
"RTN","LRSRVR6",88,0)
 . I LRFN=62 S LRSPEC=X
"RTN","LRSRVR6",89,0)
 . I LRSNM'="",LRFN>60.9,LRFN<61.61 S LRX=((LRFN*10)#610)+1,LRSNM=$E("TMEFDPJ",LRX)_"-"_LRSNM
"RTN","LRSRVR6",90,0)
 . S LRSCT=$P($G(^LAB(LRFN,LRIEN,"SCT")),"^"),(LRSCTEC,LRSCTX,LRVUID)=""
"RTN","LRSRVR6",91,0)
 . I LRLEX,LRSCT'="" D
"RTN","LRSRVR6",92,0)
 . . N LRLEXARR
"RTN","LRSRVR6",93,0)
 . . S LRLEXARR=$$CODE^LRSCT(LRSCT,"SCT",DT,"LRLEXARR")
"RTN","LRSRVR6",94,0)
 . . S LRSCTX=$G(LRLEXARR("F")),LRSCTEC=$S(LRLEXARR<1:$P(LRLEXARR,"^",2),1:"")
"RTN","LRSRVR6",95,0)
 . . I LRSCTVER="",LRLEXARR>0 S LRSCTVER=$P($G(LRLEXARR(0)),"^",3)
"RTN","LRSRVR6",96,0)
 . S LRSTR=LRSTR_LRST_"-"_LRFN_"-"_LRIEN_"|"_LRNAME_"|"_LRSNM_"|"_LRVUID_"|"_LRSCT_"|"_LRSCTX_"|"_LRSCTEC_"|"
"RTN","LRSRVR6",97,0)
 . S LRSPECN="|"
"RTN","LRSRVR6",98,0)
 . I LRFN=62,LRSPEC D
"RTN","LRSRVR6",99,0)
 . . S LRSPECN=$P($G(^LAB(61,LRSPEC,0)),"^")
"RTN","LRSRVR6",100,0)
 . . S LRSPECN=LRSPECN_"|"_LRST_"-61-"_LRSPEC
"RTN","LRSRVR6",101,0)
 . S LRSTR=LRSTR_LRSPECN_"|1.2|"
"RTN","LRSRVR6",102,0)
 . I LRVFLD(21) S LRSTR=LRSTR_$$GET1^DIQ(LRFN,LRIEN_",",21,"I")
"RTN","LRSRVR6",103,0)
 . S LRSTR=LRSTR_"|"
"RTN","LRSRVR6",104,0)
 . ;START OF CHANGE FOR LR*5.2*495 to Send Inactive date for 61.2
"RTN","LRSRVR6",105,0)
 . ;I LRFN=61!(LRFN=62) D  ; Inactive date
"RTN","LRSRVR6",106,0)
 . I LRFN=61!(LRFN=62)!(LRFN=61.2) D  ; Inactive date
"RTN","LRSRVR6",107,0)
 .. I LRFN=61 S LRSTR=LRSTR_$TR($$FMTE^XLFDT($$GET1^DIQ(LRFN,LRIEN_",",64.9103,"I"),"1D")," ,","/")
"RTN","LRSRVR6",108,0)
 .. I LRFN=62 S LRSTR=LRSTR_$TR($$FMTE^XLFDT($$GET1^DIQ(LRFN,LRIEN_",",64.9101,"I"),"1D")," ,","/")
"RTN","LRSRVR6",109,0)
 .. I LRFN=61.2 S LRSTR=LRSTR_$TR($$FMTE^XLFDT($$GET1^DIQ(LRFN,LRIEN_",",64.9102,"I"),"1D")," ,","/")
"RTN","LRSRVR6",110,0)
 .. ;END OF CHANGE FOR LR*5.2*495
"RTN","LRSRVR6",111,0)
 .. S LRSTR=LRSTR_"|"
"RTN","LRSRVR6",112,0)
 . S LRCNT=LRCNT+1,LRCNT(LRFN)=LRCNT(LRFN)+1
"RTN","LRSRVR6",113,0)
 . I LRSCT D
"RTN","LRSRVR6",114,0)
 . . S LRCNT("SCT")=LRCNT("SCT")+1,LRCNT(LRFN,"SCT")=LRCNT(LRFN,"SCT")+1
"RTN","LRSRVR6",115,0)
 . . I LRSCTEC'="" S LRCNT("SCT","EC")=LRCNT("SCT","EC")+1,LRCNT(LRFN,"SCT","EC")=LRCNT(LRFN,"SCT","EC")+1
"RTN","LRSRVR6",116,0)
 . D SETDATA
"RTN","LRSRVR6",117,0)
 Q
"RTN","LRSRVR6",118,0)
 ;
"RTN","LRSRVR6",119,0)
 ;
"RTN","LRSRVR6",120,0)
SETDATA ; Set data into report structure
"RTN","LRSRVR6",121,0)
 ;
"RTN","LRSRVR6",122,0)
 ;ZEXCEPT: LRCRLF,LRNODE,LRSTR
"RTN","LRSRVR6",123,0)
 ;
"RTN","LRSRVR6",124,0)
 S LRSTR=LRSTR_LRCRLF
"RTN","LRSRVR6",125,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR6",126,0)
 D ENCODE^LRSRVR4(.LRSTR)
"RTN","LRSRVR6",127,0)
 Q
"RTN","LRSRVR6",128,0)
 ;
"RTN","LRSRVR6",129,0)
 ;
"RTN","LRSRVR6",130,0)
HDR ; Set the header information
"RTN","LRSRVR6",131,0)
 N I,LRFILENM,X
"RTN","LRSRVR6",132,0)
 ;
"RTN","LRSRVR6",133,0)
 ;ZEXCEPT: LRSCTVER,LRSTIME,LRSTN,LRSUB
"RTN","LRSRVR6",134,0)
 ;
"RTN","LRSRVR6",135,0)
 S LRFILENM=$TR(LRSTN," ","_")_"-"_LRSUB_"-"_$P($$FMTHL7^XLFDT(LRSTIME),"-")_".TXT"
"RTN","LRSRVR6",136,0)
 S ^TMP($J,"LRDATA",1)="Report Generated.......: "_$$FMTE^XLFDT(LRSTIME)_" at "_LRSTN
"RTN","LRSRVR6",137,0)
 S ^TMP($J,"LRDATA",2)="Report requested.......: "_LRSUB
"RTN","LRSRVR6",138,0)
 S ^TMP($J,"LRDATA",3)="SNOMED CT version......: "_LRSCTVER
"RTN","LRSRVR6",139,0)
 S ^TMP($J,"LRDATA",4)="Extract version........: "_$$VER()
"RTN","LRSRVR6",140,0)
 F I=5,15,16,18,23 S ^TMP($J,"LRDATA",I)=" "
"RTN","LRSRVR6",141,0)
 S ^TMP($J,"LRDATA",17)="Attached file..........: "_LRFILENM
"RTN","LRSRVR6",142,0)
 S ^TMP($J,"LRDATA",19)="Legend:"
"RTN","LRSRVR6",143,0)
 S X="Station #-File #-IEN|Entry Name|SNOMED I|VUID|SNOMED CT|SNOMED CT TERM|Mapping Exception|Related Specimen|Related Specimen ID|Extract Ver|Term Status|Inactive Date|"
"RTN","LRSRVR6",144,0)
 S ^TMP($J,"LRDATA",20)=X
"RTN","LRSRVR6",145,0)
 S X="           1        |     2    |   3    |  4 |    5    |       6      |        7        |        8       |        9          |    10     |  11    |   12    |"
"RTN","LRSRVR6",146,0)
 S ^TMP($J,"LRDATA",21)=X
"RTN","LRSRVR6",147,0)
 S ^TMP($J,"LRDATA",22)=$$REPEAT^XLFSTR("-",$L(X))
"RTN","LRSRVR6",148,0)
 S ^TMP($J,"LRDATA",24)=$$UUBEGFN^LRSRVR2A(LRFILENM)
"RTN","LRSRVR6",149,0)
 Q
"RTN","LRSRVR6",150,0)
 ;
"RTN","LRSRVR6",151,0)
 ;
"RTN","LRSRVR6",152,0)
VER() ; Extract version
"RTN","LRSRVR6",153,0)
 Q "1.2"
"RTN","LRSRVR6",154,0)
 ;
"RTN","LRSRVR6",155,0)
 ;
"RTN","LRSRVR6",156,0)
MAILSEND(LRMSUBJ) ; Send extract back to requestor.
"RTN","LRSRVR6",157,0)
 ;
"RTN","LRSRVR6",158,0)
 N LRINSTR,LRTASK,LRTO,XMERR,XMZ
"RTN","LRSRVR6",159,0)
 ;
"RTN","LRSRVR6",160,0)
 ;ZEXCEPT: XQSND
"RTN","LRSRVR6",161,0)
 ;
"RTN","LRSRVR6",162,0)
 S LRTO(XQSND)=""
"RTN","LRSRVR6",163,0)
 S LRINSTR("ADDR FLAGS")="R"
"RTN","LRSRVR6",164,0)
 S LRINSTR("FROM")="LAB_PACKAGE"
"RTN","LRSRVR6",165,0)
 S LRMSUBJ=$E(LRMSUBJ,1,65)
"RTN","LRSRVR6",166,0)
 D SENDMSG^XMXAPI(.5,LRMSUBJ,"^TMP($J,""LRDATA"")",.LRTO,.LRINSTR,.LRTASK)
"RTN","LRSRVR6",167,0)
 Q
"RTN","LRSRVR8")
0^7^B259906666^B248084471
"RTN","LRSRVR8",1,0)
LRSRVR8 ; DALOI/JMC - LAB DATA SERVER - Utilities ;03/22/11  15:23
"RTN","LRSRVR8",2,0)
 ;;5.2;LAB SERVICE;**350,495**;Sep 27, 1994;Build 6
"RTN","LRSRVR8",3,0)
 ;
"RTN","LRSRVR8",4,0)
 ; 5.2;LAB SERVICE; CHANGE FOR PATCH LR*5.2*495; Jul 10 2017
"RTN","LRSRVR8",5,0)
 ;
"RTN","LRSRVR8",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRSRVR8",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRSRVR8",8,0)
 ;
"RTN","LRSRVR8",9,0)
LOAD ; Load mapping file into VistA as file server for distribution to other sites.
"RTN","LRSRVR8",10,0)
 ;
"RTN","LRSRVR8",11,0)
 N LRFILE,LRRECORDFORMAT,LRMAILGROUP,LRMAILGROUPXQA,LRMAPPINGFILE,LRTYPE,PWD
"RTN","LRSRVR8",12,0)
 K ^TMP($J)
"RTN","LRSRVR8",13,0)
 ;
"RTN","LRSRVR8",14,0)
 D TYPE(1)
"RTN","LRSRVR8",15,0)
 I LRTYPE<1 Q
"RTN","LRSRVR8",16,0)
 ;
"RTN","LRSRVR8",17,0)
 ; Select/get mapping file
"RTN","LRSRVR8",18,0)
 D GETFILE
"RTN","LRSRVR8",19,0)
 I LRFILE="" Q
"RTN","LRSRVR8",20,0)
 ;
"RTN","LRSRVR8",21,0)
 ; Load file into TMP global
"RTN","LRSRVR8",22,0)
 D LOADFILE
"RTN","LRSRVR8",23,0)
 ;
"RTN","LRSRVR8",24,0)
 ; Process file from TMP global into file #95.4
"RTN","LRSRVR8",25,0)
 I $D(^TMP($J,"LRMAP")) D IMPORT(LRTYPE)
"RTN","LRSRVR8",26,0)
 Q
"RTN","LRSRVR8",27,0)
 ;
"RTN","LRSRVR8",28,0)
 ;
"RTN","LRSRVR8",29,0)
LOADSCT ; Load SCT mapping file into VistA and apply mapping.
"RTN","LRSRVR8",30,0)
 ; Called by option LA7S LOAD MAPPING SCT to load and apply mapping directly at the site.
"RTN","LRSRVR8",31,0)
 ;
"RTN","LRSRVR8",32,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,LRACTION,LRFILE,LRMAILGROUP,LRMAPPINGFILE,LRRECORDFORMAT,LRTYPE,PWD,X,Y
"RTN","LRSRVR8",33,0)
 K ^TMP($J)
"RTN","LRSRVR8",34,0)
 ; START OF CHANGE FOR LR*5.2*495
"RTN","LRSRVR8",35,0)
 ;S LRTYPE=2,LRTYPE(0)="SCT",LRACTION=1
"RTN","LRSRVR8",36,0)
 S LRTYPE=2,LRTYPE(0)="SCT",LRACTION=0
"RTN","LRSRVR8",37,0)
 I '$D(^LAHM(95.4,"AF","SCT")) D  Q
"RTN","LRSRVR8",38,0)
 . K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",39,0)
 . S DIR(0)="E",DIR("A",1)="No SNOMED CT codes loaded in LAB MAPPING file",DIR("A")="Press any key to continue"
"RTN","LRSRVR8",40,0)
 . D ^DIR
"RTN","LRSRVR8",41,0)
 ;
"RTN","LRSRVR8",42,0)
 ; END OF CHANGE FOR LR*5.2*495 #1
"RTN","LRSRVR8",43,0)
 ;
"RTN","LRSRVR8",44,0)
 ; Ask if just processing exiting entries and/or load a file.
"RTN","LRSRVR8",45,0)
 I $D(^LAHM(95.4,"AF","SCT")) D
"RTN","LRSRVR8",46,0)
 . K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",47,0)
 . ; START OF CHANGE FOR LR*5.2*495
"RTN","LRSRVR8",48,0)
 . ;S DIR(0)="SO^1:Load file;2:Process previous loaded file",DIR("B")="2"
"RTN","LRSRVR8",49,0)
 . S DIR(0)="SO^0:Quit - no action;2:Process previous loaded file",DIR("B")="2"
"RTN","LRSRVR8",50,0)
 . ; END OF CHANGE FOR LR*5.2*495 #2
"RTN","LRSRVR8",51,0)
 . D ^DIR
"RTN","LRSRVR8",52,0)
 . I Y<1 S LRACTION=0 Q
"RTN","LRSRVR8",53,0)
 . S LRACTION=+Y
"RTN","LRSRVR8",54,0)
 ;
"RTN","LRSRVR8",55,0)
 I LRACTION<1 Q
"RTN","LRSRVR8",56,0)
 ;
"RTN","LRSRVR8",57,0)
 I LRACTION=1 D
"RTN","LRSRVR8",58,0)
 . D GETFILE ; Select/get mapping file
"RTN","LRSRVR8",59,0)
 . I LRFILE="" Q
"RTN","LRSRVR8",60,0)
 . ;
"RTN","LRSRVR8",61,0)
 . D LOADFILE ; Load file into TMP global
"RTN","LRSRVR8",62,0)
 . I '$D(^TMP($J,"LRMAP")) Q
"RTN","LRSRVR8",63,0)
 . ;
"RTN","LRSRVR8",64,0)
 . D IMPORT(LRTYPE) ; Process file from TMP global into file #95.4
"RTN","LRSRVR8",65,0)
 ;
"RTN","LRSRVR8",66,0)
 ; Process entries in file #95.4 and apply to target files.
"RTN","LRSRVR8",67,0)
 I '$D(^LAHM(95.4,"AF","SCT")) D  Q
"RTN","LRSRVR8",68,0)
 . K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",69,0)
 . S DIR(0)="E",DIR("A",1)="No SNOMED CT codes loaded in LAB MAPPING file",DIR("A")="Press any key to continue"
"RTN","LRSRVR8",70,0)
 . D ^DIR
"RTN","LRSRVR8",71,0)
 ;
"RTN","LRSRVR8",72,0)
 K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",73,0)
 S DIR(0)="SO^0:Quit - no action;1:Process SNOMED CT mappings directly;2:Task processing SNOMED CT mappings"
"RTN","LRSRVR8",74,0)
 S DIR("A")="Processing Action",DIR("B")="0"
"RTN","LRSRVR8",75,0)
 D ^DIR
"RTN","LRSRVR8",76,0)
 I Y<1 Q
"RTN","LRSRVR8",77,0)
 ;
"RTN","LRSRVR8",78,0)
 ; Check that mail group has members
"RTN","LRSRVR8",79,0)
 S LRMAILGROUP="LAB MAPPING"
"RTN","LRSRVR8",80,0)
 I '$$GOTLOCAL^XMXAPIG(LRMAILGROUP) D  Q
"RTN","LRSRVR8",81,0)
 . N XQAID,XQAMSG,XQAROU,XQADATA,XQA
"RTN","LRSRVR8",82,0)
 . S LRMAILGROUP="LMI"
"RTN","LRSRVR8",83,0)
 . S XQAMSG="Lab "_LRTYPE(0)_" mapping process: No local members in mail group LAB MAPPING"
"RTN","LRSRVR8",84,0)
 . S XQA("G."_LRMAILGROUP)="",XQAID="LRSRVR-"_$S(LRTYPE=1:"LOINC",LRTYPE=2:"SNOMED CT",1:"UNKNOWN")_"-"_$H
"RTN","LRSRVR8",85,0)
 . D SETUP^XQALERT
"RTN","LRSRVR8",86,0)
 . K DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","LRSRVR8",87,0)
 . S DIR(0)="E"
"RTN","LRSRVR8",88,0)
 . S DIR("A",1)="No local active members in mail group LAB MAPPING."
"RTN","LRSRVR8",89,0)
 . S DIR("A",2)="Loading will be aborted until mail group corrected."
"RTN","LRSRVR8",90,0)
 . S DIR("A")="Press any key to continue"
"RTN","LRSRVR8",91,0)
 . D ^DIR
"RTN","LRSRVR8",92,0)
 ;
"RTN","LRSRVR8",93,0)
 ; Task loading of SCT mapping on lab files
"RTN","LRSRVR8",94,0)
 I Y=2 D  Q
"RTN","LRSRVR8",95,0)
 . N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LRSRVR8",96,0)
 . S ZTRTN="TASKSCT^LRSRVR8",ZTDESC="Tasked Loading of SNOMED CT codes mappings on Lab files"
"RTN","LRSRVR8",97,0)
 . S ZTSAVE("LRTYPE*")="",ZTSAVE("LRMAILGROUP")=""
"RTN","LRSRVR8",98,0)
 . S ZTIO=""
"RTN","LRSRVR8",99,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","LRSRVR8",100,0)
 . W !,"Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued")
"RTN","LRSRVR8",101,0)
 ;
"RTN","LRSRVR8",102,0)
 ; Load SCT mappings interactively.
"RTN","LRSRVR8",103,0)
 D TASKSCT
"RTN","LRSRVR8",104,0)
 ;
"RTN","LRSRVR8",105,0)
 Q
"RTN","LRSRVR8",106,0)
 ;
"RTN","LRSRVR8",107,0)
 ;
"RTN","LRSRVR8",108,0)
TASKSCT ; Processing applying SCT mappings to local site.
"RTN","LRSRVR8",109,0)
 ;
"RTN","LRSRVR8",110,0)
 ; Load SNOMED CT codes into lab files
"RTN","LRSRVR8",111,0)
 D TASKMAP^LRSRVR5
"RTN","LRSRVR8",112,0)
 ;
"RTN","LRSRVR8",113,0)
 Q
"RTN","LRSRVR8",114,0)
 ;
"RTN","LRSRVR8",115,0)
 ;
"RTN","LRSRVR8",116,0)
SEND ; Send file to LRLABSERVER at specified site.
"RTN","LRSRVR8",117,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT,LRASKDOM,LRCNT,LRFILE,LRI,LRPURGE,LRSITE,LRTYPE,X,Y
"RTN","LRSRVR8",118,0)
 ;
"RTN","LRSRVR8",119,0)
 D TYPE(2)
"RTN","LRSRVR8",120,0)
 I LRTYPE<1 Q
"RTN","LRSRVR8",121,0)
 ;
"RTN","LRSRVR8",122,0)
 K DIC,LRSITE
"RTN","LRSRVR8",123,0)
 S DIC="^DIC(4,",DIC(0)="EMOQ",DIC("S")="I $D(^LAHM(95.4,""AC"",+Y))"
"RTN","LRSRVR8",124,0)
 S X=$$SELECT^LRUTIL(.DIC,.LRSITE,"Institution",10,0,0,0)
"RTN","LRSRVR8",125,0)
 I X=0 Q
"RTN","LRSRVR8",126,0)
 I X="*" S LRSITE=1
"RTN","LRSRVR8",127,0)
 ;
"RTN","LRSRVR8",128,0)
 K DIR
"RTN","LRSRVR8",129,0)
 S DIR(0)="Y",DIR("A")="Purge mapping for site after transmitting",DIR("B")="NO"
"RTN","LRSRVR8",130,0)
 D ^DIR
"RTN","LRSRVR8",131,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",132,0)
 S LRPURGE=+Y
"RTN","LRSRVR8",133,0)
 ;
"RTN","LRSRVR8",134,0)
 S X=$$GET^XPAR("USR^PKG^SYS","LR MAPPING ASK DOMAIN",1,"Q")
"RTN","LRSRVR8",135,0)
 W !
"RTN","LRSRVR8",136,0)
 K DIR
"RTN","LRSRVR8",137,0)
 S DIR(0)="YO",DIR("B")=$S(X=1:"YES",1:"NO")
"RTN","LRSRVR8",138,0)
 S DIR("A",1)="Answer 'YES' if sending to a test system or a different domain"
"RTN","LRSRVR8",139,0)
 S DIR("A",2)="and specify that system's mail domain when prompted."
"RTN","LRSRVR8",140,0)
 S DIR("A")="Prompt/confirm MailMan Domain for each site"
"RTN","LRSRVR8",141,0)
 D ^DIR
"RTN","LRSRVR8",142,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",143,0)
 S LRASKDOM=Y
"RTN","LRSRVR8",144,0)
 ;
"RTN","LRSRVR8",145,0)
 K DIR
"RTN","LRSRVR8",146,0)
 S DIR(0)="YO",DIR("A")="Ready to send mappings to site(s)",DIR("B")="NO"
"RTN","LRSRVR8",147,0)
 D ^DIR
"RTN","LRSRVR8",148,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",149,0)
 I Y'=1 Q
"RTN","LRSRVR8",150,0)
 ;
"RTN","LRSRVR8",151,0)
 S LRFILE=95.4
"RTN","LRSRVR8",152,0)
 ; Do all sites in file
"RTN","LRSRVR8",153,0)
 I LRSITE=1 D  Q
"RTN","LRSRVR8",154,0)
 . S LRSITE=0
"RTN","LRSRVR8",155,0)
 . F  S LRSITE=$O(^LAHM(LRFILE,"AC",LRSITE)) Q:'LRSITE  D
"RTN","LRSRVR8",156,0)
 . . S LRSITE(LRSITE)=$$NAME^XUAF4(LRSITE)
"RTN","LRSRVR8",157,0)
 . . D BLDMSG
"RTN","LRSRVR8",158,0)
 ;
"RTN","LRSRVR8",159,0)
 ; Do selected sites
"RTN","LRSRVR8",160,0)
 S LRSITE=0
"RTN","LRSRVR8",161,0)
 F  S LRSITE=$O(LRSITE(LRSITE)) Q:'LRSITE  D BLDMSG
"RTN","LRSRVR8",162,0)
 Q
"RTN","LRSRVR8",163,0)
 ;
"RTN","LRSRVR8",164,0)
 ;
"RTN","LRSRVR8",165,0)
IMPORT(LRTYPE) ;
"RTN","LRSRVR8",166,0)
 ; Call with LRTYPE = type of data (1=LOINC, 2=SNOMED, 3=LOINC Database)
"RTN","LRSRVR8",167,0)
 ;
"RTN","LRSRVR8",168,0)
 N LRFILE,LRMAP
"RTN","LRSRVR8",169,0)
 ;
"RTN","LRSRVR8",170,0)
 ;ZEXCEPT: ZTQUEUED
"RTN","LRSRVR8",171,0)
 ;
"RTN","LRSRVR8",172,0)
 ; Check if file exists.
"RTN","LRSRVR8",173,0)
 S LRFILE=95.4
"RTN","LRSRVR8",174,0)
 I '$$VFILE^DILFD(LRFILE) D  Q
"RTN","LRSRVR8",175,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("Lab Mapping Transport File (#"_LRFILE_") does NOT exist","","!") Q
"RTN","LRSRVR8",176,0)
 ;
"RTN","LRSRVR8",177,0)
 S LRTYPE(0)=$S(LRTYPE=1:"LN",LRTYPE=2:"SCT",LRTYPE=3:"LNDB",1:"UNK")
"RTN","LRSRVR8",178,0)
 I '$D(ZTQUEUED) W !,"Processing file data and storing in file #",LRFILE D WAIT^DICD
"RTN","LRSRVR8",179,0)
 D BUILD
"RTN","LRSRVR8",180,0)
 ;
"RTN","LRSRVR8",181,0)
 K ^TMP($J,"LRMAP")
"RTN","LRSRVR8",182,0)
 Q
"RTN","LRSRVR8",183,0)
 ;
"RTN","LRSRVR8",184,0)
 ;
"RTN","LRSRVR8",185,0)
BUILD ; Load Records into file
"RTN","LRSRVR8",186,0)
 ;
"RTN","LRSRVR8",187,0)
 N LRCNT,LREND,LRFLD,LRI,LRID,LRLNDBSTART,LRLOINCVERSION,LRNOW,LRQUIT,LRSITE,LRX
"RTN","LRSRVR8",188,0)
 ;
"RTN","LRSRVR8",189,0)
 ;ZEXCEPT: LRTYPE,ZTQUEUED
"RTN","LRSRVR8",190,0)
 ;
"RTN","LRSRVR8",191,0)
 ;
"RTN","LRSRVR8",192,0)
 I '$D(ZTQUEUED) W !
"RTN","LRSRVR8",193,0)
 S LRNOW=$$HTFM^XLFDT($H)
"RTN","LRSRVR8",194,0)
 ; Read and check headers
"RTN","LRSRVR8",195,0)
 S (LRCNT,LREND,LRI,LRQUIT)=0
"RTN","LRSRVR8",196,0)
 I LRTYPE(0)="LNDB" S LRLNDBSTART=0,LRLOINCVERSION=""
"RTN","LRSRVR8",197,0)
 F  S LRI=$O(^TMP($J,"LRMAP",LRI)) Q:LRI<1  D  Q:LREND
"RTN","LRSRVR8",198,0)
 . I '$D(ZTQUEUED),'(LRI#100) W:$X>(IOM-1) ! W "."
"RTN","LRSRVR8",199,0)
 . K LRFLD,LRX
"RTN","LRSRVR8",200,0)
 . S LRX=^TMP($J,"LRMAP",LRI,0)
"RTN","LRSRVR8",201,0)
 . I LRTYPE(0)="LN" D  Q
"RTN","LRSRVR8",202,0)
 . . I LRI=1 D  Q
"RTN","LRSRVR8",203,0)
 . . . I LRX'="Station #-File #-IEN|Entry Name" S LREND=1
"RTN","LRSRVR8",204,0)
 . . D PARSELN,FILE
"RTN","LRSRVR8",205,0)
 . I LRTYPE(0)="SCT" D  Q
"RTN","LRSRVR8",206,0)
 . . I LRI=1 D  Q
"RTN","LRSRVR8",207,0)
 . . . D CKSCTHDR Q:LREND
"RTN","LRSRVR8",208,0)
 . . . D BUILDMAP
"RTN","LRSRVR8",209,0)
 . . D PARSESCT,FILE
"RTN","LRSRVR8",210,0)
 . I LRTYPE(0)="LNDB" D  Q
"RTN","LRSRVR8",211,0)
 . . M LRX=^TMP($J,"LRMAP",LRI,"OVF")
"RTN","LRSRVR8",212,0)
 . . I 'LRLNDBSTART D  Q
"RTN","LRSRVR8",213,0)
 . . . D CKLNDBHR
"RTN","LRSRVR8",214,0)
 . . . I LRLNDBSTART D BUILDMLN
"RTN","LRSRVR8",215,0)
 . . D PARSELND,FILE
"RTN","LRSRVR8",216,0)
 ;
"RTN","LRSRVR8",217,0)
 I '$D(ZTQUEUED) W !,"Records added: ",LRCNT
"RTN","LRSRVR8",218,0)
 ;
"RTN","LRSRVR8",219,0)
 Q
"RTN","LRSRVR8",220,0)
 ;
"RTN","LRSRVR8",221,0)
 ;
"RTN","LRSRVR8",222,0)
PARSELN ; Parse record from TMP global for LOINC mapping
"RTN","LRSRVR8",223,0)
 Q
"RTN","LRSRVR8",224,0)
 ;
"RTN","LRSRVR8",225,0)
 ;
"RTN","LRSRVR8",226,0)
PARSELND ; Parse record from TMP global for LOINC Databsae loading
"RTN","LRSRVR8",227,0)
 ;
"RTN","LRSRVR8",228,0)
 ;ZEXCEPT: LRFLD,LRID,LRMAP,LRMAPPINGFILE,LRLOINCVERSION,LRSITE,LRX
"RTN","LRSRVR8",229,0)
 ;
"RTN","LRSRVR8",230,0)
 N LRI,LRLAST
"RTN","LRSRVR8",231,0)
 ;
"RTN","LRSRVR8",232,0)
 S LRI=0
"RTN","LRSRVR8",233,0)
 F  S LRI=$O(LRX(LRI)) Q:'LRI  S LRX=LRX_LRX(LRI)
"RTN","LRSRVR8",234,0)
 S LRX=$TR(LRX,$C(34),"")
"RTN","LRSRVR8",235,0)
 S LRID=$P(LRX,$C(9)),LRSITE=""
"RTN","LRSRVR8",236,0)
 ;
"RTN","LRSRVR8",237,0)
 S LRLAST=$L(LRX,$C(9))
"RTN","LRSRVR8",238,0)
 I $P(LRX,$C(9),LRLAST)="" S LRLAST=LRLAST-1
"RTN","LRSRVR8",239,0)
 F LRI=2:1:LRLAST I $P(LRX,$C(9),LRI)'="" S LRFLD(LRI,0)=LRMAP(LRI),LRFLD(LRI,100,1,0)=$P(LRX,$C(9),LRI)
"RTN","LRSRVR8",240,0)
 ;
"RTN","LRSRVR8",241,0)
 ; Also store name of source file used for these entries.
"RTN","LRSRVR8",242,0)
 S LRFLD(10000,0)=LRMAP(10000),LRFLD(10000,100,1,0)=$G(LRMAPPINGFILE)
"RTN","LRSRVR8",243,0)
 S LRFLD(10001,0)=LRMAP(10001),LRFLD(10001,100,1,0)=$G(LRLOINCVERSION)
"RTN","LRSRVR8",244,0)
 ;
"RTN","LRSRVR8",245,0)
 Q
"RTN","LRSRVR8",246,0)
 ;
"RTN","LRSRVR8",247,0)
 ;
"RTN","LRSRVR8",248,0)
PARSESCT ; Parse record from TMP global for SCT mapping
"RTN","LRSRVR8",249,0)
 ;
"RTN","LRSRVR8",250,0)
 N LRI
"RTN","LRSRVR8",251,0)
 ;
"RTN","LRSRVR8",252,0)
 ;ZEXCEPT: LRFLD,LRID,LRMAP,LRMAPPINGFILE,LRSITE,LRX
"RTN","LRSRVR8",253,0)
 ;
"RTN","LRSRVR8",254,0)
 S LRID=$P(LRX,"|")
"RTN","LRSRVR8",255,0)
 S LRSITE=$$IEN^XUAF4($P(LRID,"-"))
"RTN","LRSRVR8",256,0)
 F LRI=2:1:7 I $P(LRX,"|",LRI)'="" S LRFLD(LRI,0)=LRMAP(LRI),LRFLD(LRI,100,1,0)=$P(LRX,"|",LRI)
"RTN","LRSRVR8",257,0)
 ;
"RTN","LRSRVR8",258,0)
 ; Also store name of source file used to map these entries.
"RTN","LRSRVR8",259,0)
 S LRFLD(10000,0)=LRMAP(10000),LRFLD(10000,100,1,0)=$G(LRMAPPINGFILE)
"RTN","LRSRVR8",260,0)
 ;
"RTN","LRSRVR8",261,0)
 Q
"RTN","LRSRVR8",262,0)
 ;
"RTN","LRSRVR8",263,0)
 ;
"RTN","LRSRVR8",264,0)
FILE ; File the data in file
"RTN","LRSRVR8",265,0)
 ;
"RTN","LRSRVR8",266,0)
 N LRFDA,LRI,LRIEN,LRERR,LRY
"RTN","LRSRVR8",267,0)
 ;
"RTN","LRSRVR8",268,0)
 ;ZEXCEPT: LRCNT,LRFILE,LRFLD,LRID,LRNOW,LRSITE,LRTYPE,ZTQUEUED
"RTN","LRSRVR8",269,0)
 ;
"RTN","LRSRVR8",270,0)
 ; Get and lock file while processing.
"RTN","LRSRVR8",271,0)
 F  L +^LAHM(95.4,0):999 Q:$T
"RTN","LRSRVR8",272,0)
 ;
"RTN","LRSRVR8",273,0)
 ; Build FDA array and merge in data.
"RTN","LRSRVR8",274,0)
 S LRFDA(1,LRFILE,"?+1,",.01)=LRID
"RTN","LRSRVR8",275,0)
 S LRFDA(1,LRFILE,"?+1,",2)=LRSITE
"RTN","LRSRVR8",276,0)
 S LRFDA(1,LRFILE,"?+1,",3)=LRTYPE(0)
"RTN","LRSRVR8",277,0)
 S LRFDA(1,LRFILE,"?+1,",4)=0
"RTN","LRSRVR8",278,0)
 S LRFDA(1,LRFILE,"?+1,",6)=LRNOW
"RTN","LRSRVR8",279,0)
 D UPDATE^DIE("","LRFDA(1)","LRIEN","LRERR")
"RTN","LRSRVR8",280,0)
 I $D(LRERR) D  Q
"RTN","LRSRVR8",281,0)
 . I $D(ZTQUEUED) Q
"RTN","LRSRVR8",282,0)
 . K LRY
"RTN","LRSRVR8",283,0)
 . S LRY(1)="WARNING: Update failed for ID# "_LRID
"RTN","LRSRVR8",284,0)
 . S LRY(2)=$G(LRERR("DIERR","1","TEXT",1))
"RTN","LRSRVR8",285,0)
 . D EN^DDIOL(.LRY,"","!!?2")
"RTN","LRSRVR8",286,0)
 S LRCNT=LRCNT+1
"RTN","LRSRVR8",287,0)
 ;
"RTN","LRSRVR8",288,0)
 ; Store data
"RTN","LRSRVR8",289,0)
 S LRI=0
"RTN","LRSRVR8",290,0)
 F  S LRI=$O(LRFLD(LRI)) Q:'LRI  D
"RTN","LRSRVR8",291,0)
 . S ^LAHM(LRFILE,LRIEN(1),100,LRI,0)=LRFLD(LRI,0)
"RTN","LRSRVR8",292,0)
 . S ^LAHM(LRFILE,LRIEN(1),100,LRI,100,0)="^94.5011^^"
"RTN","LRSRVR8",293,0)
 . M ^LAHM(LRFILE,LRIEN(1),100,LRI,100)=LRFLD(LRI,100)
"RTN","LRSRVR8",294,0)
 ;
"RTN","LRSRVR8",295,0)
 ; Unlock transport global.
"RTN","LRSRVR8",296,0)
 L -^LAHM(95.4,0)
"RTN","LRSRVR8",297,0)
 ;
"RTN","LRSRVR8",298,0)
 Q
"RTN","LRSRVR8",299,0)
 ;
"RTN","LRSRVR8",300,0)
 ;
"RTN","LRSRVR8",301,0)
BLDMSG ; Build and send message for a specific site.
"RTN","LRSRVR8",302,0)
 ;
"RTN","LRSRVR8",303,0)
 N LRDOMAIN,LRENDMSG,LRHDL,LRMAXREC,LRMSG,LRXMZ
"RTN","LRSRVR8",304,0)
 ;
"RTN","LRSRVR8",305,0)
 ;ZEXCEPT: LRASKDOM,LRCNT,LRFILE,LRI,LRPURGE,LRSITE,LRTYPE,ZTQUEUED
"RTN","LRSRVR8",306,0)
 ;
"RTN","LRSRVR8",307,0)
 ;
"RTN","LRSRVR8",308,0)
 S LRDOMAIN=$$WHAT^XUAF4(LRSITE,60)
"RTN","LRSRVR8",309,0)
 I LRASKDOM D
"RTN","LRSRVR8",310,0)
 . N DIC,X,Y
"RTN","LRSRVR8",311,0)
 . W !!,"For ",LRSITE(LRSITE)
"RTN","LRSRVR8",312,0)
 . I LRDOMAIN'="" S DIC("B")=LRDOMAIN
"RTN","LRSRVR8",313,0)
 . S DIC=4.2,DIC(0)="AEMQ",DIC("A")="Send to MailMan DOMAIN: " D ^DIC
"RTN","LRSRVR8",314,0)
 . I Y<1 S LRDOMAIN="" Q
"RTN","LRSRVR8",315,0)
 . S LRDOMAIN=$P(Y,"^",2)
"RTN","LRSRVR8",316,0)
 I LRDOMAIN="" D  Q
"RTN","LRSRVR8",317,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("No MailMan DOMAIN specified for this facility","","!?2") Q
"RTN","LRSRVR8",318,0)
 ;
"RTN","LRSRVR8",319,0)
 K ^TMP($J,"LRMAP"),^TMP($J,"LRMSG"),^TMP($J,"LRMAP-HDL")
"RTN","LRSRVR8",320,0)
 ;
"RTN","LRSRVR8",321,0)
 ; Move entries related to this institution to TMP global.
"RTN","LRSRVR8",322,0)
 ; Clear file #4 pointer in 2nd piece, resolve institution at target site based on .01 field
"RTN","LRSRVR8",323,0)
 I '$D(ZTQUEUED) D
"RTN","LRSRVR8",324,0)
 . D WAIT^DICD
"RTN","LRSRVR8",325,0)
 . W !,"Processing facility ",LRSITE(LRSITE),!,"Collecting records to build into mail message "
"RTN","LRSRVR8",326,0)
 S (LRCNT,LRI,LRMSG)=0
"RTN","LRSRVR8",327,0)
 S LRMAXREC=$$GET^XPAR("USR^PKG^SYS","LR MAPPING MESSAGE MAX RECORDS",1,"Q")
"RTN","LRSRVR8",328,0)
 I LRMAXREC<1 S LRMAXREC=3000
"RTN","LRSRVR8",329,0)
 F  S LRI=$O(^LAHM(LRFILE,"AC",LRSITE,LRI)) Q:'LRI  D
"RTN","LRSRVR8",330,0)
 . I $P(^LAHM(LRFILE,LRI,0),"^",3)'=LRTYPE(0) Q
"RTN","LRSRVR8",331,0)
 . S LRCNT=LRCNT+1
"RTN","LRSRVR8",332,0)
 . I '(LRCNT#100) W:$X>(IOM-1) ! W "."
"RTN","LRSRVR8",333,0)
 . I LRCNT#LRMAXREC=1 S LRMSG=LRMSG+1
"RTN","LRSRVR8",334,0)
 . M ^TMP($J,"LRMSG",LRMSG,LRI)=^LAHM(LRFILE,LRI)
"RTN","LRSRVR8",335,0)
 . S $P(^TMP($J,"LRMSG",LRMSG,LRI,0),"^",2)=""
"RTN","LRSRVR8",336,0)
 ;
"RTN","LRSRVR8",337,0)
 I '$D(^TMP($J,"LRMSG")) D  Q
"RTN","LRSRVR8",338,0)
 . I '$D(ZTQUEUED) D EN^DDIOL("NO data to transport","","!?2") Q
"RTN","LRSRVR8",339,0)
 ;
"RTN","LRSRVR8",340,0)
 I '$D(ZTQUEUED) W !,"Building records into mail message"
"RTN","LRSRVR8",341,0)
 S (LRI,LRENDMSG)=0
"RTN","LRSRVR8",342,0)
 F  S LRI=$O(^TMP($J,"LRMSG",LRI)) Q:'LRI  D
"RTN","LRSRVR8",343,0)
 . K ^TMP($J,"LRMAP")
"RTN","LRSRVR8",344,0)
 . M ^TMP($J,"LRMAP")=^TMP($J,"LRMSG",LRI)
"RTN","LRSRVR8",345,0)
 . I LRI=LRMSG S LRENDMSG=1
"RTN","LRSRVR8",346,0)
 . S X=$$HANDLE^XUSRB4("LR-MAP-"_LRTYPE(0)_"-",0)
"RTN","LRSRVR8",347,0)
 . S LRHDL=X,^TMP($J,"LRMAP-HDL",LRI,0)=X
"RTN","LRSRVR8",348,0)
 . D BUILDMSG
"RTN","LRSRVR8",349,0)
 ;
"RTN","LRSRVR8",350,0)
 I '$D(ZTQUEUED) D
"RTN","LRSRVR8",351,0)
 . W !,"Number of records transported: "_LRCNT
"RTN","LRSRVR8",352,0)
 . W !,"MailMan Message ID's: "
"RTN","LRSRVR8",353,0)
 . S LRI=""
"RTN","LRSRVR8",354,0)
 . F  S LRI=$O(LRXMZ(LRI)) Q:LRI=""  W ?23,LRI,!
"RTN","LRSRVR8",355,0)
 ;
"RTN","LRSRVR8",356,0)
 K ^TMP($J,"LRMAP"),^TMP($J,"LRMSG")
"RTN","LRSRVR8",357,0)
 ;
"RTN","LRSRVR8",358,0)
 I LRPURGE D PURGE
"RTN","LRSRVR8",359,0)
 ;
"RTN","LRSRVR8",360,0)
 Q
"RTN","LRSRVR8",361,0)
 ;
"RTN","LRSRVR8",362,0)
 ;
"RTN","LRSRVR8",363,0)
PURGE ; Purge related entries from file #95.4 for this site.
"RTN","LRSRVR8",364,0)
 N DIK,LRCNT,LRI
"RTN","LRSRVR8",365,0)
 ;
"RTN","LRSRVR8",366,0)
 ;ZEXCEPT: DA,LRFILE,LRSITE,ZTQUEUED
"RTN","LRSRVR8",367,0)
 ;
"RTN","LRSRVR8",368,0)
 W !,"Purging related entries from file #",LRFILE
"RTN","LRSRVR8",369,0)
 I '$D(ZTQUEUED) D WAIT^DICD
"RTN","LRSRVR8",370,0)
 ;
"RTN","LRSRVR8",371,0)
 S (LRCNT,LRI)=0,DIK="^LAHM(LRFILE,"
"RTN","LRSRVR8",372,0)
 F  S LRI=$O(^LAHM(LRFILE,"AC",LRSITE,LRI)) Q:'LRI  D
"RTN","LRSRVR8",373,0)
 . S LRCNT=LRCNT+1,DA=LRI D ^DIK
"RTN","LRSRVR8",374,0)
 . I '$D(ZTQUEUED),'(LRCNT#100) W:$X>(IOM-1) ! W "."
"RTN","LRSRVR8",375,0)
 Q
"RTN","LRSRVR8",376,0)
 ;
"RTN","LRSRVR8",377,0)
 ;
"RTN","LRSRVR8",378,0)
GETFILE ; Select the file to process
"RTN","LRSRVR8",379,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FILE,FILESPEC,LRFSPEC,LRHELP,LRNUM,X,Y
"RTN","LRSRVR8",380,0)
 ;
"RTN","LRSRVR8",381,0)
 ;ZEXCEPT: LRFILE,LRMAPPINGFILE,PWD
"RTN","LRSRVR8",382,0)
 ;
"RTN","LRSRVR8",383,0)
 K ^TMP($J),LRFILE
"RTN","LRSRVR8",384,0)
 S PWD=$$PWD^%ZISH()
"RTN","LRSRVR8",385,0)
 S X=$$GET^XPAR("USR^PKG^SYS","LR MAPPING DEFAULT DIRECTORY",1,"Q")
"RTN","LRSRVR8",386,0)
 I X'="" S PWD=X
"RTN","LRSRVR8",387,0)
 S LRFILE=""
"RTN","LRSRVR8",388,0)
 ;
"RTN","LRSRVR8",389,0)
 S DIR(0)="FO^1:245",DIR("A")="Host File Directory",DIR("B")=PWD
"RTN","LRSRVR8",390,0)
 F  D  Q:$D(DIRUT)!(PWD'="")
"RTN","LRSRVR8",391,0)
 . D ^DIR
"RTN","LRSRVR8",392,0)
 . I $D(DIRUT) Q
"RTN","LRSRVR8",393,0)
 . S PWD=$$DEFDIR^%ZISH(Y)
"RTN","LRSRVR8",394,0)
 . I PWD="" W !,"Invalid directory syntax",!
"RTN","LRSRVR8",395,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",396,0)
 D EN^XPAR("USR","LR MAPPING DEFAULT DIRECTORY",1,PWD)
"RTN","LRSRVR8",397,0)
 ;
"RTN","LRSRVR8",398,0)
 S LRFSPEC=$$GET^XPAR("USR^PKG^SYS","LR MAPPING DEFAULT FILESPEC",1,"Q")
"RTN","LRSRVR8",399,0)
 I LRFSPEC'="" S FILESPEC(LRFSPEC)="" W !,"Using filespec ",LRFSPEC
"RTN","LRSRVR8",400,0)
 S Y=$$LIST^%ZISH(PWD,"FILESPEC","LRFILE")
"RTN","LRSRVR8",401,0)
 I $O(LRFILE(""))="" W !,"No "_$S(LRFSPEC="":"",1:LRFSPEC_" ")_"files found in directory ",PWD,! Q
"RTN","LRSRVR8",402,0)
 ;
"RTN","LRSRVR8",403,0)
 S LRNUM=0,FILE=""
"RTN","LRSRVR8",404,0)
 F  S FILE=$O(LRFILE(FILE)) Q:FILE=""  S LRNUM=LRNUM+1,LRNUM(LRNUM)=FILE,LRHELP(LRNUM)=LRNUM_"  "_FILE
"RTN","LRSRVR8",405,0)
 K DIR
"RTN","LRSRVR8",406,0)
 S DIR(0)="NAO^1:"_LRNUM,DIR("A")="Select FILE: ",DIR("B")=$O(LRNUM(0))
"RTN","LRSRVR8",407,0)
 S DIR("?")="Select a file by number from the list" M DIR("?")=LRHELP
"RTN","LRSRVR8",408,0)
 D ^DIR
"RTN","LRSRVR8",409,0)
 I $D(DIRUT) Q
"RTN","LRSRVR8",410,0)
 S (LRFILE,LRMAPPINGFILE)=LRNUM(Y)
"RTN","LRSRVR8",411,0)
 Q
"RTN","LRSRVR8",412,0)
 ;
"RTN","LRSRVR8",413,0)
 ;
"RTN","LRSRVR8",414,0)
LOADFILE ; Load selected file into TMP global.
"RTN","LRSRVR8",415,0)
 ;
"RTN","LRSRVR8",416,0)
 N LRBACKUPDIR
"RTN","LRSRVR8",417,0)
 ;
"RTN","LRSRVR8",418,0)
 ;ZEXCEPT: LRFILE,LRMAILGROUPXQA,PWD,XQA,XQAMSG,Y,ZTQUEUED
"RTN","LRSRVR8",419,0)
 ;
"RTN","LRSRVR8",420,0)
 I '$D(ZTQUEUED) D
"RTN","LRSRVR8",421,0)
 . W !,"Directory: "_PWD
"RTN","LRSRVR8",422,0)
 . W !,"File.....: "_LRFILE
"RTN","LRSRVR8",423,0)
 . W !,"Loading file into TMP global"
"RTN","LRSRVR8",424,0)
 . D WAIT^DICD
"RTN","LRSRVR8",425,0)
 ;
"RTN","LRSRVR8",426,0)
 S Y=$$FTG^%ZISH(PWD,LRFILE,$NA(^TMP($J,"LRMAP",1,0)),3,"OVF")
"RTN","LRSRVR8",427,0)
 I Y<1 D
"RTN","LRSRVR8",428,0)
 . I '$D(ZTQUEUED) W !!,*7,"File failed to load into TMP global",!! Q
"RTN","LRSRVR8",429,0)
 . S XQAMSG="Lab Mapping: Unable to load "_LRFILE_" into TMP global"
"RTN","LRSRVR8",430,0)
 . S XQA(LRMAILGROUPXQA)=""
"RTN","LRSRVR8",431,0)
 . S XQA(DUZ)=""
"RTN","LRSRVR8",432,0)
 . D SETUP^XQALERT
"RTN","LRSRVR8",433,0)
 ;
"RTN","LRSRVR8",434,0)
 ;
"RTN","LRSRVR8",435,0)
 ; If processed directory specified then move file to that directory
"RTN","LRSRVR8",436,0)
 S LRBACKUPDIR=$$GET^XPAR("USR^PKG^SYS","LR MAPPING PROCESSED DIRECTORY",1,"Q")
"RTN","LRSRVR8",437,0)
 I LRBACKUPDIR="" Q
"RTN","LRSRVR8",438,0)
 S Y=$$MV^%ZISH(PWD,LRFILE,LRBACKUPDIR,LRFILE)
"RTN","LRSRVR8",439,0)
 I Y<1 D
"RTN","LRSRVR8",440,0)
 . I '$D(ZTQUEUED) W !!,*7,"Failed to move file from directory "_PWD_" to directory "_LRBACKUPDIR,!! Q
"RTN","LRSRVR8",441,0)
 . S XQAMSG="Lab Mapping: Unable to move "_LRFILE_" to "_LRBACKUPDIR
"RTN","LRSRVR8",442,0)
 . S XQA(LRMAILGROUPXQA)=""
"RTN","LRSRVR8",443,0)
 . S XQA(DUZ)=""
"RTN","LRSRVR8",444,0)
 . D SETUP^XQALERT
"RTN","LRSRVR8",445,0)
 ;
"RTN","LRSRVR8",446,0)
 Q
"RTN","LRSRVR8",447,0)
 ;
"RTN","LRSRVR8",448,0)
 ;
"RTN","LRSRVR8",449,0)
BUILDMAP ; Build map of field names related to field # in record
"RTN","LRSRVR8",450,0)
 N I,LRLAST,LRY
"RTN","LRSRVR8",451,0)
 ;
"RTN","LRSRVR8",452,0)
 ;ZEXCEPT: LRMAP,LRX
"RTN","LRSRVR8",453,0)
 ;
"RTN","LRSRVR8",454,0)
 K LRMAP
"RTN","LRSRVR8",455,0)
 ;
"RTN","LRSRVR8",456,0)
 ; SNOMED CT format 1:  Station #-File #-IEN|Entry Name|SNOMED I|STS_FURTHER_ACTION|STS_SCT_ID|STS_TYPE_OF_MATCH|
"RTN","LRSRVR8",457,0)
 ; SNOMED CT format 2:  Station #-File #-IEN|Entry Name|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|TRANSACTION NUMBER|
"RTN","LRSRVR8",458,0)
 ; SNOMED CT format 2:  Station #-File #-IEN|Entry Name|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|
"RTN","LRSRVR8",459,0)
 ;
"RTN","LRSRVR8",460,0)
 ;       LOINC format: TBD
"RTN","LRSRVR8",461,0)
 ;
"RTN","LRSRVR8",462,0)
 ; Handle if last character a delimiter or part of field name
"RTN","LRSRVR8",463,0)
 S LRLAST=$L(LRX,"|")
"RTN","LRSRVR8",464,0)
 I $P(LRX,"|",LRLAST)="" S LRLAST=LRLAST-1
"RTN","LRSRVR8",465,0)
 F I=1:1:LRLAST S LRY=$S($P(LRX,"|",I)'="":$P(LRX,"|",I),1:"BLANK"),LRMAP(I)=I_":"_LRY
"RTN","LRSRVR8",466,0)
 ;
"RTN","LRSRVR8",467,0)
 S LRMAP(10000)="10000:MAPPING SOURCE FILE"
"RTN","LRSRVR8",468,0)
 ;
"RTN","LRSRVR8",469,0)
 Q
"RTN","LRSRVR8",470,0)
 ;
"RTN","LRSRVR8",471,0)
 ;
"RTN","LRSRVR8",472,0)
BUILDMLN ; Build map of field names related to field # in record for LOINC database file
"RTN","LRSRVR8",473,0)
 N I,LRLAST,LRY
"RTN","LRSRVR8",474,0)
 ;
"RTN","LRSRVR8",475,0)
 ;ZEXCEPT: LRMAP,LRX
"RTN","LRSRVR8",476,0)
 ;
"RTN","LRSRVR8",477,0)
 K LRMAP
"RTN","LRSRVR8",478,0)
 ;
"RTN","LRSRVR8",479,0)
 ;       LOINC format: TBD
"RTN","LRSRVR8",480,0)
 ;
"RTN","LRSRVR8",481,0)
 ; Handle if last character a delimiter or part of field name
"RTN","LRSRVR8",482,0)
 S I=0
"RTN","LRSRVR8",483,0)
 F  S I=$O(LRX(I)) Q:'I  S LRX=LRX_LRX(I)
"RTN","LRSRVR8",484,0)
 S LRX=$TR(LRX,$C(34),"")
"RTN","LRSRVR8",485,0)
 ;
"RTN","LRSRVR8",486,0)
 S LRLAST=$L(LRX,$C(9))
"RTN","LRSRVR8",487,0)
 I $P(LRX,$C(9),LRLAST)="" S LRLAST=LRLAST-1
"RTN","LRSRVR8",488,0)
 F I=1:1:LRLAST S LRY=$S($P(LRX,$C(9),I)'="":$P(LRX,$C(9),I),1:"BLANK-"_I),LRMAP(I)=I_":"_LRY
"RTN","LRSRVR8",489,0)
 ;
"RTN","LRSRVR8",490,0)
 S LRMAP(10000)="10000:MAPPING SOURCE FILE"
"RTN","LRSRVR8",491,0)
 S LRMAP(10001)="10001:LOINC VERSION"
"RTN","LRSRVR8",492,0)
 ;
"RTN","LRSRVR8",493,0)
 Q
"RTN","LRSRVR8",494,0)
 ;
"RTN","LRSRVR8",495,0)
 ;
"RTN","LRSRVR8",496,0)
TYPE(LRFUNC) ; Ask what code set
"RTN","LRSRVR8",497,0)
 ; Call with function to perform: 1-load mapping file, 2-transport mapping to site
"RTN","LRSRVR8",498,0)
 ;
"RTN","LRSRVR8",499,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRSRVR8",500,0)
 ;
"RTN","LRSRVR8",501,0)
 ;ZEXCEPT: LRTYPE
"RTN","LRSRVR8",502,0)
 ;
"RTN","LRSRVR8",503,0)
 ;
"RTN","LRSRVR8",504,0)
 S DIR(0)="SO^1:LOINC;2:SNOMED CT;3:LOINC Database",DIR("A")="Type of mapping to "_$S(LRFUNC=1:"load",LRFUNC=2:"transport",1:"")
"RTN","LRSRVR8",505,0)
 D ^DIR
"RTN","LRSRVR8",506,0)
 I $D(DIRUT) S LRTYPE=0 Q
"RTN","LRSRVR8",507,0)
 S LRTYPE=Y,LRTYPE(0)=$S(Y=1:"LN",Y=2:"SCT",Y=3:"LNDB",1:"")
"RTN","LRSRVR8",508,0)
 Q
"RTN","LRSRVR8",509,0)
 ;
"RTN","LRSRVR8",510,0)
 ;
"RTN","LRSRVR8",511,0)
BUILDMSG ; Build the MailMan PackMan message
"RTN","LRSRVR8",512,0)
 ;
"RTN","LRSRVR8",513,0)
 N LRI,MSG,XMDUN,XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,X,Y
"RTN","LRSRVR8",514,0)
 ;
"RTN","LRSRVR8",515,0)
 ;ZEXCEPT: LRDOMAIN,LRENDMSG,LRHDL,LRTYPE,LRXMZ
"RTN","LRSRVR8",516,0)
 ;
"RTN","LRSRVR8",517,0)
 K ^TMP("XMP",$J)
"RTN","LRSRVR8",518,0)
 S ^TMP("XMP",$J,1,0)=LRHDL
"RTN","LRSRVR8",519,0)
 ;
"RTN","LRSRVR8",520,0)
 S XMSUB=$S(LRTYPE=1:"RELMA",LRTYPE=2:"SNOMED",1:"")_" MAPPING",XMY("S.LRLABSERVER@"_LRDOMAIN)="",XMTEXT="^TMP($J,""LRMAP"",;"
"RTN","LRSRVR8",521,0)
 I LRENDMSG S XMTEXT=XMTEXT_"^TMP($J,""LRMAP-HDL"",;"
"RTN","LRSRVR8",522,0)
 S XMDUN="Lab Server",XMDUZ=".5"
"RTN","LRSRVR8",523,0)
 D ENT^XMPG
"RTN","LRSRVR8",524,0)
 ;
"RTN","LRSRVR8",525,0)
 ; Inform sender of action status
"RTN","LRSRVR8",526,0)
 S MSG=""
"RTN","LRSRVR8",527,0)
 I $G(XMZ)>0 D
"RTN","LRSRVR8",528,0)
 . S LRXMZ(XMZ)=""
"RTN","LRSRVR8",529,0)
 . S MSG(1)="MailMan message #"_XMZ_" queued for transmission to:",MSG(1,"F")="!!"
"RTN","LRSRVR8",530,0)
 . S MSG(2)="S.LRLABSERVER@"_LRDOMAIN,MSG(2,"F")="!?3"
"RTN","LRSRVR8",531,0)
 E  S MSG(1)="MailMan message generation failed with error: ",MSG(1,"F")="!!",MSG(2)=XMMG,MSG(2,"F")="!?3"
"RTN","LRSRVR8",532,0)
 D EN^DDIOL(.MSG,"","")
"RTN","LRSRVR8",533,0)
 Q
"RTN","LRSRVR8",534,0)
 ;
"RTN","LRSRVR8",535,0)
 ;
"RTN","LRSRVR8",536,0)
INIT ; Initialize variables used by process.
"RTN","LRSRVR8",537,0)
 ;
"RTN","LRSRVR8",538,0)
 ;ZEXCEPT: LRMAILGROUP,LRMAILGROUPXQA
"RTN","LRSRVR8",539,0)
 ;
"RTN","LRSRVR8",540,0)
 S (LRMAILGROUP,LRMAILGROUPXQA)="G.LAB MAPPING"
"RTN","LRSRVR8",541,0)
 ; If no local members then use LMI group
"RTN","LRSRVR8",542,0)
 I '$$GOTLOCAL^XMXAPIG("LAB MAPPING") S (LRMAILGROUP,LRMAILGROUPXQA)="G.LMI"
"RTN","LRSRVR8",543,0)
 ;
"RTN","LRSRVR8",544,0)
 Q
"RTN","LRSRVR8",545,0)
 ;
"RTN","LRSRVR8",546,0)
 ;
"RTN","LRSRVR8",547,0)
CKSCTHDR ; Check the header of the file to determine if it's
"RTN","LRSRVR8",548,0)
 ;  - the right type of file
"RTN","LRSRVR8",549,0)
 ;  - the record format
"RTN","LRSRVR8",550,0)
 ;
"RTN","LRSRVR8",551,0)
 ;ZEXCEPT: LREND,LRQUIT,LRRECORDFORMAT,LRX
"RTN","LRSRVR8",552,0)
 ;
"RTN","LRSRVR8",553,0)
 N LRY
"RTN","LRSRVR8",554,0)
 ;
"RTN","LRSRVR8",555,0)
 S (LRQUIT,LREND)=1,LRRECORDFORMAT=0
"RTN","LRSRVR8",556,0)
 ;
"RTN","LRSRVR8",557,0)
 S LRY="STATION #-FILE #-IEN|ENTRY NAME|SNOMED I|STS_FURTHER_ACTION|STS_SCT_ID|STS_TYPE_OF_MATCH|"
"RTN","LRSRVR8",558,0)
 I $$UP^XLFSTR(LRX)=LRY S (LRQUIT,LREND)=0,LRRECORDFORMAT=1 Q
"RTN","LRSRVR8",559,0)
 ;
"RTN","LRSRVR8",560,0)
 S LRY="STATION #-FILE #-IEN|ENTRY NAME|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|TRANSACTION NUMBER|"
"RTN","LRSRVR8",561,0)
 I $$UP^XLFSTR(LRX)=LRY S (LRQUIT,LREND)=0,LRRECORDFORMAT=2 Q
"RTN","LRSRVR8",562,0)
 ;
"RTN","LRSRVR8",563,0)
 S LRY="STATION #-FILE #-IEN|ENTRY NAME|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|"
"RTN","LRSRVR8",564,0)
 I $$UP^XLFSTR(LRX)=LRY S (LRQUIT,LREND)=0,LRRECORDFORMAT=2 Q
"RTN","LRSRVR8",565,0)
 ;
"RTN","LRSRVR8",566,0)
 Q
"RTN","LRSRVR8",567,0)
 ;
"RTN","LRSRVR8",568,0)
 ;
"RTN","LRSRVR8",569,0)
CKLNDBHR ; Check the header of the file to determine if it's
"RTN","LRSRVR8",570,0)
 ;  - the right type of file
"RTN","LRSRVR8",571,0)
 ;  - the record format
"RTN","LRSRVR8",572,0)
 ;
"RTN","LRSRVR8",573,0)
 ;ZEXCEPT: LREND,LRQUIT,LRLNDBSTART,LRLOINCVERSION,LRX
"RTN","LRSRVR8",574,0)
 ;
"RTN","LRSRVR8",575,0)
 N LRY
"RTN","LRSRVR8",576,0)
 ;
"RTN","LRSRVR8",577,0)
 S LRX=$TR(LRX,$C(34),"")
"RTN","LRSRVR8",578,0)
 ;
"RTN","LRSRVR8",579,0)
 S LRY="LOINC(R) Database Version"
"RTN","LRSRVR8",580,0)
 I $E(LRX,1,$L(LRY))=LRY S LRLOINCVERSION=$$TRIM^XLFSTR($E(LRX,$L(LRY)+1,$L(LRX)),"LR"," ") Q
"RTN","LRSRVR8",581,0)
 ;
"RTN","LRSRVR8",582,0)
 S LRY="LOINC_NUM"
"RTN","LRSRVR8",583,0)
 I $$UP^XLFSTR($E(LRX,1,$L(LRY)))=LRY S (LRQUIT,LREND)=0,LRLNDBSTART=1
"RTN","LRSRVR8",584,0)
 ;
"RTN","LRSRVR8",585,0)
 Q
"RTN","LRSRVR9B")
0^6^B47147933^n/a
"RTN","LRSRVR9B",1,0)
LRSRVR9B ;BPFO/DTG - UPDATE DATA FOR 61, 61.2, AND 62 FOR SNOMED AND INACTIVE ;07/7/2017
"RTN","LRSRVR9B",2,0)
 ;;5.2;LAB SERVICE;**495**;Sep 27, 1994;Build 6
"RTN","LRSRVR9B",3,0)
 ;
"RTN","LRSRVR9B",4,0)
 Q
"RTN","LRSRVR9B",5,0)
 ;
"RTN","LRSRVR9B",6,0)
SERVER ; entry for message processing
"RTN","LRSRVR9B",7,0)
 N I,D,LRCNT,LREND,LRL,LRMSUBJ,LRTXT,LRX,LRY,FIL,CR,XMZ,XMPOS,XMER,XMRG,XMCHAN,LRCRLF
"RTN","LRSRVR9B",8,0)
 N ZTQUEUED,DR,DIE,DTOUT,DROUT,II,LRTEXT,LRVRD4,LRVRD5,LRVRD6,LRSTR,CR,FIL
"RTN","LRSRVR9B",9,0)
 N A,B,C,E,G,L,LRINSTR,DN,LRGOOD
"RTN","LRSRVR9B",10,0)
 ;
"RTN","LRSRVR9B",11,0)
 S CR=$C(13),FIL=$P(LRSUB," ",2,999),FIL=$$UP^XLFSTR(FIL),U="^",LRCRLF=$C(13,10),D=""
"RTN","LRSRVR9B",12,0)
 K ^TMP($J,"LRDATA")
"RTN","LRSRVR9B",13,0)
 ; header of message text
"RTN","LRSRVR9B",14,0)
 ;Station #-File #-IEN|Entry Name|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|TRANSACTION NUMBER|
"RTN","LRSRVR9B",15,0)
 ;get message from XMB(3.9)
"RTN","LRSRVR9B",16,0)
 S XMZ=XQMSG,D=0,XMCHAN="SERVER" K XMER
"RTN","LRSRVR9B",17,0)
 S LRVRD4="^TMP(""LRREAD-ERR"",$J)" K @LRVRD4
"RTN","LRSRVR9B",18,0)
 S LRVRD5="^TMP(""LRREAD"",$J)" K @LRVRD5
"RTN","LRSRVR9B",19,0)
 S LRVRD6="^TMP(""LRREAD-RAW"",$J)" K @LRVRD6
"RTN","LRSRVR9B",20,0)
SLI ; start
"RTN","LRSRVR9B",21,0)
 S K=0,(L,M,N,O)="",STRT=$$NOW^XLFDT
"RTN","LRSRVR9B",22,0)
 ; get inbound message and now get the the start lines
"RTN","LRSRVR9B",23,0)
 D GET^XML
"RTN","LRSRVR9B",24,0)
 F  X XMREC Q:($D(XMER)&($G(XMER)<0))  I XMRG["base64" Q
"RTN","LRSRVR9B",25,0)
 I $D(XMER)&($G(XMER)<0) G SL5Q
"RTN","LRSRVR9B",26,0)
 S OK=0 F  X XMREC Q:($D(XMER)&($G(XMER)<0))  D  I OK=1 Q
"RTN","LRSRVR9B",27,0)
 . S A=XMRG,B=$$B64DECD^XUSHSH(A)
"RTN","LRSRVR9B",28,0)
 . I $E(B,1,32)="Station #-File #-IEN|Entry Name|" S OK=1
"RTN","LRSRVR9B",29,0)
 I $D(XMER)&($G(XMER)<0) G SL5Q
"RTN","LRSRVR9B",30,0)
 I OK'=1 G SL5Q
"RTN","LRSRVR9B",31,0)
 I $E(B,1,32)="Station #-File #-IEN|Entry Name|" D
"RTN","LRSRVR9B",32,0)
 . S N=$L(B,CR),I=1
"RTN","LRSRVR9B",33,0)
 . D SL5S3(I,B)
"RTN","LRSRVR9B",34,0)
SL5 ; loop through message
"RTN","LRSRVR9B",35,0)
 X XMREC
"RTN","LRSRVR9B",36,0)
 I $D(XMER) G SL5Q:XMER<0
"RTN","LRSRVR9B",37,0)
 I XMRG="" G SL5
"RTN","LRSRVR9B",38,0)
 I $E(XMRG,1,6)="--_004"&($E(XMRG,($L(XMRG)-1),($L(XMRG)))="--") G SL5Q
"RTN","LRSRVR9B",39,0)
 S B=$$B64DECD^XUSHSH(XMRG),N=$L(B,CR) F I=1:1:N D SL5S3(I,B)
"RTN","LRSRVR9B",40,0)
 G SL5
"RTN","LRSRVR9B",41,0)
 ;
"RTN","LRSRVR9B",42,0)
SL5S3(II,BB) ; set finish file
"RTN","LRSRVR9B",43,0)
 ; II where in for loop
"RTN","LRSRVR9B",44,0)
 ; NN number of CR pieces
"RTN","LRSRVR9B",45,0)
 ; KK update counter
"RTN","LRSRVR9B",46,0)
 ; BB data
"RTN","LRSRVR9B",47,0)
 ; saved data
"RTN","LRSRVR9B",48,0)
 N P
"RTN","LRSRVR9B",49,0)
 S P=$P(BB,CR,II)
"RTN","LRSRVR9B",50,0)
 S:$E(P,1)=$C(10) P=$E(P,2,9999)
"RTN","LRSRVR9B",51,0)
 I II=1 S O=O_P
"RTN","LRSRVR9B",52,0)
 I II>1 S K=K+1,@LRVRD6@(K,0)=O,O=P
"RTN","LRSRVR9B",53,0)
 Q
"RTN","LRSRVR9B",54,0)
 ;
"RTN","LRSRVR9B",55,0)
 ;
"RTN","LRSRVR9B",56,0)
SL5Q ;finish pulling message
"RTN","LRSRVR9B",57,0)
 S DN=$$NOW^XLFDT
"RTN","LRSRVR9B",58,0)
 S @LRVRD6@(0)=K_U_STRT_U_DN
"RTN","LRSRVR9B",59,0)
 ;remove items from raw that are not for this facility
"RTN","LRSRVR9B",60,0)
 S (A,B,C,D,E,G,LRGOOD)=0
"RTN","LRSRVR9B",61,0)
 F  S A=$O(@LRVRD6@(A)) Q:'A  D
"RTN","LRSRVR9B",62,0)
 . S B=$G(@LRVRD6@(A,0))
"RTN","LRSRVR9B",63,0)
 . I B="" Q
"RTN","LRSRVR9B",64,0)
 . I LRST'=$P(B,"-",1)&($P(B,"-",1)'["Station") D  Q
"RTN","LRSRVR9B",65,0)
 . . ; save bad entry to send back to sender
"RTN","LRSRVR9B",66,0)
 . . S C=$G(@LRVRD4@(0)),C=C+1,@LRVRD4@(0)=C,@LRVRD4@(C,0)=B
"RTN","LRSRVR9B",67,0)
 . ; save into file for placing into LRMAP file
"RTN","LRSRVR9B",68,0)
 . S D=$G(@LRVRD5@(0)),D=D+1,@LRVRD5@(0)=D,@LRVRD5@(D,0)=B,LRGOOD=D
"RTN","LRSRVR9B",69,0)
 ;
"RTN","LRSRVR9B",70,0)
 ; make sure there is one entry to place in 95.4 via LRMAP
"RTN","LRSRVR9B",71,0)
 S A=$G(@LRVRD5@(1,0)) I A="" G CLOSE
"RTN","LRSRVR9B",72,0)
 ;
"RTN","LRSRVR9B",73,0)
 ; run purge of 95.4
"RTN","LRSRVR9B",74,0)
 N LRDAYS,LRDATE,LRSTAT
"RTN","LRSRVR9B",75,0)
 ;
"RTN","LRSRVR9B",76,0)
 S LRDAYS=0
"RTN","LRSRVR9B",77,0)
 S LRDATE=$$FMADD^XLFDT(DT,-LRDAYS,0,0,0)
"RTN","LRSRVR9B",78,0)
 F LRSTAT=0,.5,.7,1,2 D PURGE^LRSRVR5(LRSTAT,LRDATE)
"RTN","LRSRVR9B",79,0)
 K LRDAYS,LRDATE,LRSTAT
"RTN","LRSRVR9B",80,0)
 ;
"RTN","LRSRVR9B",81,0)
 ; save into LAB TEMP FILE
"RTN","LRSRVR9B",82,0)
 K ^TMP($J,"LRMAP") M ^TMP($J,"LRMAP")=@LRVRD5 K ^TMP($J,"LRMAP",0)
"RTN","LRSRVR9B",83,0)
 S LRTYPE=2,LRTYPE(0)="SCT",ZTQUEUED=1
"RTN","LRSRVR9B",84,0)
 ;
"RTN","LRSRVR9B",85,0)
 D IMPORT^LRSRVR8(LRTYPE) ; Process file from TMP global into file #95.4
"RTN","LRSRVR9B",86,0)
 K ZTQUEUED
"RTN","LRSRVR9B",87,0)
 ;
"RTN","LRSRVR9B",88,0)
 ; send message to G.LMI
"RTN","LRSRVR9B",89,0)
 S (LRMAILGROUP,LRMAILGROUPXQA)="G.LMI"
"RTN","LRSRVR9B",90,0)
 S XMSUB="SITE: "_LRST_" "_LRSTN_" SNOMED UPDATE READY FOR PROCESSING "_DT
"RTN","LRSRVR9B",91,0)
 S XMY(DUZ)="",XMY("G.LMI")=""
"RTN","LRSRVR9B",92,0)
 K LRTEXT S LRTEXT(1)="The SNOMED update for files 61, 61.2, and 62 has been placed on your system"
"RTN","LRSRVR9B",93,0)
 S LRTEXT(2)="and is ready for processing."
"RTN","LRSRVR9B",94,0)
 S LRTEXT(3)="Use option [ LA7S LOAD MAPPING SCT ] to apply the update."
"RTN","LRSRVR9B",95,0)
 S LRTEXT(4)="Select Item '2 Process previous loaded file'"
"RTN","LRSRVR9B",96,0)
 S LRTEXT(4)=""
"RTN","LRSRVR9B",97,0)
 S XMTEXT="LRTEXT(" D ^XMD
"RTN","LRSRVR9B",98,0)
 K LRTEXT,XMTEXT
"RTN","LRSRVR9B",99,0)
 ;
"RTN","LRSRVR9B",100,0)
 ; send return message to sender
"RTN","LRSRVR9B",101,0)
 ;
"RTN","LRSRVR9B",102,0)
CLOSE ;
"RTN","LRSRVR9B",103,0)
 S LRMSUBJ=LRST_" "_LRSTN_" SCTLOAD "_$$HTE^XLFDT($H,"1M")
"RTN","LRSRVR9B",104,0)
 S LRRECORD=K
"RTN","LRSRVR9B",105,0)
 S ^TMP($J,"LRDATA",6)="Total Number of Records: "_$J((LRRECORD-1),($L(LRRECORD)+1))
"RTN","LRSRVR9B",106,0)
 S A=$$FMTE^XLFDT($P($G(@LRVRD6@(0)),U,3))
"RTN","LRSRVR9B",107,0)
 S ^TMP($J,"LRDATA",7)="End Date..: "_$J(A,($L(A)+1))
"RTN","LRSRVR9B",108,0)
 S ^TMP($J,"LRDATA",8)="Message Number: "_$J(XQMSG,($L(XQMSG)+1))
"RTN","LRSRVR9B",109,0)
 S A=$G(@LRVRD4@(0))+0
"RTN","LRSRVR9B",110,0)
 S ^TMP($J,"LRDATA",10)="Total Number of Records rejected Due to Station Number: "_$J(A,($L(A)+1))
"RTN","LRSRVR9B",111,0)
 S A=$G(LRGOOD)+0
"RTN","LRSRVR9B",112,0)
 S ^TMP($J,"LRDATA",11)="Total Number of Records accepted for processing by the site: "_$J(A,($L(A)+1))
"RTN","LRSRVR9B",113,0)
 S ^TMP($J,"LRDATA",12)=" "
"RTN","LRSRVR9B",114,0)
 S A=$$FMTE^XLFDT($$NOW^XLFDT)_" at "_LRSTN
"RTN","LRSRVR9B",115,0)
 S ^TMP($J,"LRDATA",1)="File Uploaded.......: "_$J(A,($L(A)+1))
"RTN","LRSRVR9B",116,0)
 S ^TMP($J,"LRDATA",2)="File Received.......: "_$J(LRSUB,($L(LRSUB)+1))
"RTN","LRSRVR9B",117,0)
 S A=$P($G(@LRVRD6@(2,0)),"|",1)
"RTN","LRSRVR9B",118,0)
 S ^TMP($J,"LRDATA",3)="First Record..........: "_$J(A,($L(A)+1))
"RTN","LRSRVR9B",119,0)
 S A=$P($G(@LRVRD6@(LRRECORD,0)),"|",1)
"RTN","LRSRVR9B",120,0)
 S ^TMP($J,"LRDATA",4)="Last Record.....: "_$J(A,($L(A)+1))
"RTN","LRSRVR9B",121,0)
 S A=$$FMTE^XLFDT($P($G(@LRVRD6@(0)),U,2))
"RTN","LRSRVR9B",122,0)
 S ^TMP($J,"LRDATA",5)="Start Date........: "_$J(A,($L(A)+1))
"RTN","LRSRVR9B",123,0)
 S LRFILENM=$TR(LRSTN," ","_")_"-("_LRST_")-"_$P(LRSUB," ",1)_"-"_$P($$FMTHL7^XLFDT($$NOW^XLFDT),"-")_".TXT"
"RTN","LRSRVR9B",124,0)
 S ^TMP($J,"LRDATA",13)="Attached LMOF file.....: "_$J(LRFILENM,($L(LRFILENM)+1))
"RTN","LRSRVR9B",125,0)
 F I=14:1:16 S ^TMP($J,"LRDATA",I)=" "
"RTN","LRSRVR9B",126,0)
 S ^TMP($J,"LRDATA",17)="begin 644 "_LRFILENM
"RTN","LRSRVR9B",127,0)
 S LRSTR=""
"RTN","LRSRVR9B",128,0)
 ; include e-mail statements into attachment
"RTN","LRSRVR9B",129,0)
 ;F I=1:1:12 S A=$G(^TMP($J,"LRDATA",I)) S LRSTR=LRSTR D SETDATA
"RTN","LRSRVR9B",130,0)
 ; check for errors
"RTN","LRSRVR9B",131,0)
 S A=$G(@LRVRD4@(0)) I +A<1 D  G CLOSE1
"RTN","LRSRVR9B",132,0)
 . S LRSTR=LRSTR_"No Errors Encountered with Station Number"_LRCRLF D SETDATA
"RTN","LRSRVR9B",133,0)
 . I LRSTR'="" S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN(LRSTR)
"RTN","LRSRVR9B",134,0)
 . S ^TMP($J,"LRDATA",LRNODE+1)=" "
"RTN","LRSRVR9B",135,0)
 . S ^TMP($J,"LRDATA",LRNODE+2)="end"
"RTN","LRSRVR9B",136,0)
 ;
"RTN","LRSRVR9B",137,0)
 ; loop through errors and place in file
"RTN","LRSRVR9B",138,0)
 S ^TMP($J,"LRDATA",14)="Legend:"
"RTN","LRSRVR9B",139,0)
 S A="Station #-File #-IEN|Entry Name|SNOMED I|SNOMED CT|STS_EXCEPTION|STS_EXCEPTION_REASON|TRANSACTION NUMBER|"
"RTN","LRSRVR9B",140,0)
 S ^TMP($J,"LRDATA",15)=A
"RTN","LRSRVR9B",141,0)
 S ^TMP($J,"LRDATA",16)=$$REPEAT^XLFSTR("-",($L(A)))
"RTN","LRSRVR9B",142,0)
 S A=0
"RTN","LRSRVR9B",143,0)
 F  S A=$O(@LRVRD4@(A)) Q:'A  S B=$G(@LRVRD4@(A,0)) S LRSTR=LRSTR_B_LRCRLF D SETDATA
"RTN","LRSRVR9B",144,0)
 I LRSTR'="" S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN(LRSTR)
"RTN","LRSRVR9B",145,0)
 S ^TMP($J,"LRDATA",LRNODE+1)=" "
"RTN","LRSRVR9B",146,0)
 S ^TMP($J,"LRDATA",LRNODE+2)="end"
"RTN","LRSRVR9B",147,0)
 G CLOSE1
"RTN","LRSRVR9B",148,0)
 ;
"RTN","LRSRVR9B",149,0)
CLOSE1 ; send message back to sender
"RTN","LRSRVR9B",150,0)
 S LRTO(XQSND)=""
"RTN","LRSRVR9B",151,0)
 S LRINSTR("ADDR FLAGS")="R"
"RTN","LRSRVR9B",152,0)
 S LRINSTR("FROM")="LAB_PACKAGE"
"RTN","LRSRVR9B",153,0)
 S LRMSUBJ=$E(LRMSUBJ,1,65)
"RTN","LRSRVR9B",154,0)
 D SENDMSG^XMXAPI(.5,LRMSUBJ,"^TMP($J,""LRDATA"")",.LRTO,.LRINSTR,.LRTASK)
"RTN","LRSRVR9B",155,0)
 Q
"RTN","LRSRVR9B",156,0)
 ;
"RTN","LRSRVR9B",157,0)
CLEAN ;
"RTN","LRSRVR9B",158,0)
 K @LRVRD4,@LRVRD5,@LRVRD6
"RTN","LRSRVR9B",159,0)
 K I,D,LRCNT,LREND,LRL,LRMSUBJ,LRTXT,LRX,LRY,FIL,CR,XMZ,XMPOS,XMER,XMRG,XMCHAN
"RTN","LRSRVR9B",160,0)
 K ZTQUEUED,DR,DIE,DTOUT,DROUT,II,LRTEXT,LRVRD4,LRVRD5,LRVRD6,LRSTR,CR,FIL,LRCRLF
"RTN","LRSRVR9B",161,0)
 K A,B,C,E,G,L,LRINSTR,DN,LRGOOD
"RTN","LRSRVR9B",162,0)
 D CLEAN^LRSRVR
"RTN","LRSRVR9B",163,0)
 D ^%ZISC
"RTN","LRSRVR9B",164,0)
 Q
"RTN","LRSRVR9B",165,0)
 ;
"RTN","LRSRVR9B",166,0)
SETDATA ; Set error data into report structure
"RTN","LRSRVR9B",167,0)
 S LRNODE=$O(^TMP($J,"LRDATA",""),-1)
"RTN","LRSRVR9B",168,0)
 S LRQUIT=0,LRLEN=$L(LRSTR)
"RTN","LRSRVR9B",169,0)
 F  D  Q:LRQUIT
"RTN","LRSRVR9B",170,0)
 . I $L(LRSTR)<45 S LRQUIT=1 Q
"RTN","LRSRVR9B",171,0)
 . S LRX=$E(LRSTR,1,45)
"RTN","LRSRVR9B",172,0)
 . S LRNODE=LRNODE+1,^TMP($J,"LRDATA",LRNODE)=$$UUEN(LRX)
"RTN","LRSRVR9B",173,0)
 . S LRSTR=$E(LRSTR,46,LRLEN)
"RTN","LRSRVR9B",174,0)
 Q
"RTN","LRSRVR9B",175,0)
 ;
"RTN","LRSRVR9B",176,0)
UUEN(STR) ; Uuencode string passed in.
"RTN","LRSRVR9B",177,0)
 N J,K,LEN,LRI,LRX,S,TMP,X,Y
"RTN","LRSRVR9B",178,0)
 S TMP="",LEN=$L(STR)
"RTN","LRSRVR9B",179,0)
 F LRI=1:3:LEN D
"RTN","LRSRVR9B",180,0)
 . S LRX=$E(STR,LRI,LRI+2)
"RTN","LRSRVR9B",181,0)
 . I $L(LRX)<3 S LRX=LRX_$E("   ",1,3-$L(LRX))
"RTN","LRSRVR9B",182,0)
 . S S=$A(LRX,1)*256+$A(LRX,2)*256+$A(LRX,3),Y=""
"RTN","LRSRVR9B",183,0)
 . F K=0:1:23 S Y=(S\(2**K)#2)_Y
"RTN","LRSRVR9B",184,0)
 . F K=1:6:24 D
"RTN","LRSRVR9B",185,0)
 . . S J=$$DEC^XLFUTL($E(Y,K,K+5),2)
"RTN","LRSRVR9B",186,0)
 . . S TMP=TMP_$C(J+32)
"RTN","LRSRVR9B",187,0)
 S TMP=$C(LEN+32)_TMP
"RTN","LRSRVR9B",188,0)
 Q TMP
"RTN","LRSRVR9B",189,0)
 ;
"RTN","LRSRVR9B",190,0)
UUBEGFN(LRFILENM) ; Construct uuencode "begin" coding
"RTN","LRSRVR9B",191,0)
 ; Call with LRFILENM = name of uuencoded file attachment
"RTN","LRSRVR9B",192,0)
 ; 
"RTN","LRSRVR9B",193,0)
 ; Returns LRX = string with "begin..."_file name
"RTN","LRSRVR9B",194,0)
 ;
"RTN","LRSRVR9B",195,0)
 N LRX
"RTN","LRSRVR9B",196,0)
 S LRX="begin 644 "_LRFILENM
"RTN","LRSRVR9B",197,0)
 Q LRX
"RTN","LRSRVR9B",198,0)
 ;
"VER")
8.0^22.2
"^DD",61.2,61.2,64.9102,0)
INACTIVE DATE^D^^64.91;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",61.2,61.2,64.9102,3)
Enter the date this ETIOLOGY entry should no longer be considered available.
"^DD",61.2,61.2,64.9102,21,0)
^^1^1^3170818^
"^DD",61.2,61.2,64.9102,21,1,0)
This is the date on or after which the entry will no longer be active.
"^DD",61.2,61.2,64.9102,"DT")
3170818
"BLD",10287,6)
^399
**END**
**END**

