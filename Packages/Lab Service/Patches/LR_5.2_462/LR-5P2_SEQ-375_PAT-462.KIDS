Released LR*5.2*462 SEQ #375
Extracted from mail message
**KIDS**:LR*5.2*462^

**INSTALL NAME**
LR*5.2*462
"BLD",9535,0)
LR*5.2*462^LAB SERVICE^0^3161129^y
"BLD",9535,1,0)
^^331^331^3161123^
"BLD",9535,1,1,0)
Nov 23, 2016 - V14 - The following defect was corrected by a modification 
"BLD",9535,1,2,0)
to CRE863^LRAPLG1 routine that will restore the NOW// default instead of 
"BLD",9535,1,3,0)
presenting a date and time.
"BLD",9535,1,4,0)
 
"BLD",9535,1,5,0)
423457: LI log in, anatomic path field of DATE/TIME SPECIMEN RECEIVED 
"BLD",9535,1,6,0)
should default to NOW//
"BLD",9535,1,7,0)
 
"BLD",9535,1,8,0)
Oct 6, 2016 - V13 - Added the following as required patches: 
"BLD",9535,1,9,0)
LR*5.2*259,291,350,422,433,450
"BLD",9535,1,10,0)
 
"BLD",9535,1,11,0)
Oct 5, 2016 - V12 - This release enhances the "Delete accession #, anat
"BLD",9535,1,12,0)
path" option to update CPRS status to discontinued.
"BLD",9535,1,13,0)
 
"BLD",9535,1,14,0)
Corrects - Defect 373204 -  
"BLD",9535,1,15,0)
VLE ANATOMIC PATHOLOGY - VistA LR462/OR405 SURGERY CASE DOES NOT DISPLAY 
"BLD",9535,1,16,0)
ON PATIENT DURING SPECIMEN LOGIN IN VISTA
"BLD",9535,1,17,0)
 
"BLD",9535,1,18,0)
 
"BLD",9535,1,19,0)
Fix - M error when the accession has been cancelled using the "Delete
"BLD",9535,1,20,0)
accession #, anat path"option and then a user tries to utilize the "Delete
"BLD",9535,1,21,0)
entire order or individual test" option for the same order number. - 
"BLD",9535,1,22,0)
there was a typo in the legacy code in the LROS routine.
"BLD",9535,1,23,0)
 
"BLD",9535,1,24,0)
 
"BLD",9535,1,25,0)
Sept 14, 2016 - V11 - Fixes 'no routine' error in APSUB^ORMBLDLR that was 
"BLD",9535,1,26,0)
still calling LR7OAPMG which was changed with V10 to LR7OAPKM. Problem 
"BLD",9535,1,27,0)
found by developer once CPRS32 v16 GUI was available. The routine 
"BLD",9535,1,28,0)
LR7OAPMG has been added back into this build and will be removed at a 
"BLD",9535,1,29,0)
later date.
"BLD",9535,1,30,0)
 
"BLD",9535,1,31,0)
Sept 8 - V10 - Fixes the following defects:
"BLD",9535,1,32,0)
Defect # 373205 Surgeon Physician not displaying in VistA  
"BLD",9535,1,33,0)
When submitted by is blank - the Surgeon does not display.
"BLD",9535,1,34,0)
 
"BLD",9535,1,35,0)
Defect # 373204 
"BLD",9535,1,36,0)
The surgery case look up fails during log
"BLD",9535,1,37,0)
 
"BLD",9535,1,38,0)
Sept 1, 2016 - V9 - Fixes Undefined varible.
"BLD",9535,1,39,0)
Defect # - 371975 - Undefined variable when login the specimen in VistA 
"BLD",9535,1,40,0)
if Surgeon/Physician is not selected in CPRS.
"BLD",9535,1,41,0)
 
"BLD",9535,1,42,0)
 
"BLD",9535,1,43,0)
AUG 25, 2016 - V8 - Fixes default bleed over problems with the 
"BLD",9535,1,44,0)
Pathologist and Submitted by fields in AP.
"BLD",9535,1,45,0)
AUG 12, 2016 - V7 - Fixes defect 357639:
"BLD",9535,1,46,0)
 
"BLD",9535,1,47,0)
Defect: 357639 - VLE ANATOMIC PATHOLOGY - DURING SPECIMEN LOGIN IN VISTA, 
"BLD",9535,1,48,0)
PATHOLOGIST FIELD POPULATES NAME OF SURGEON USED FOR A PRIOR ORDER
"BLD",9535,1,49,0)
 
"BLD",9535,1,50,0)
JULY 17, 2016 - V6 packman created and sent to forum - corrects problem 
"BLD",9535,1,51,0)
in LRPLG1 routine.
"BLD",9535,1,52,0)
JULY 15, 2016 - V5 packman created and sent to forum - corrects hard 
"BLD",9535,1,53,0)
errors found by QA
"BLD",9535,1,54,0)
JULY 15, 2016 - V4 packman created and sent to forum
"BLD",9535,1,55,0)
JUNE 30, 2016 - V1 packman created and sent to forum
"BLD",9535,1,56,0)
JUNE 29, 2016 - V1 kids file to QA for do no harm testing
"BLD",9535,1,57,0)
 
"BLD",9535,1,58,0)
The build for this patch is distributed in support of the VLE 
"BLD",9535,1,59,0)
Anatomic Pathology order dialog enhancements. It contains a modification 
"BLD",9535,1,60,0)
to the LABORATORY TEST (#60), LAB ORDER ENTRY (#69), LABORATORY SITE
"BLD",9535,1,61,0)
(#69.9) and adds the new file LR CPRS PARAMETERS (#69.71).
"BLD",9535,1,62,0)
 
"BLD",9535,1,63,0)
1-      Anatomic Pathology specimen log-in option has been modified to 
"BLD",9535,1,64,0)
prompt the user for an order number. This order number will be created 
"BLD",9535,1,65,0)
by CPRS after patches OR*3.0*405 and LR*5.2*469 are installed.
"BLD",9535,1,66,0)
2-      If a user enters an order number, the process deviates from the 
"BLD",9535,1,67,0)
current Log-in,anat path option in that it displays any data entered via
"BLD",9535,1,68,0)
CPRS AP order dialog. The fields presented could include any of the
"BLD",9535,1,69,0)
following:
"BLD",9535,1,70,0)
   a.      SURGEON/PHYSICIAN
"BLD",9535,1,71,0)
   b.      SPECIMEN SUBMITTED BY
"BLD",9535,1,72,0)
   c.      SURGERY CASE #
"BLD",9535,1,73,0)
   d.      SPECIMEN DESCRIPTION/SPECIMEN (multiple)
"BLD",9535,1,74,0)
   e.      BRIEF CLINCAL DESCRIPTION
"BLD",9535,1,75,0)
   f.      PREOPERATIVE DIAGNOSIS
"BLD",9535,1,76,0)
   g.      OPERATIVE FINDINGS
"BLD",9535,1,77,0)
   h.      POSTOPERATIVE DIAGNOSIS
"BLD",9535,1,78,0)
3-      If Surgical Case(s) are found for this patient in the last 7 days 
"BLD",9535,1,79,0)
they will be presented to the user for selection. If a case is selected 
"BLD",9535,1,80,0)
the data from the Surgical Case will be displayed and the user will be 
"BLD",9535,1,81,0)
asked if they wish to include this in the appropriate field in the 
"BLD",9535,1,82,0)
Anatomic Pathology accession.
"BLD",9535,1,83,0)
4-      If Surgical Case information is added to Anatomic Pathology 
"BLD",9535,1,84,0)
fields it will display first and followed by the information obtained 
"BLD",9535,1,85,0)
from the CPRS order.
"BLD",9535,1,86,0)
5-      All other data entry/edit actions will be done via existing 
"BLD",9535,1,87,0)
Anatomic Pathology options.
"BLD",9535,1,88,0)
 
"BLD",9535,1,89,0)
 
"BLD",9535,1,90,0)
 
"BLD",9535,1,91,0)
Blood Bank Review:
"BLD",9535,1,92,0)
==================
"BLD",9535,1,93,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*462 does not 
"BLD",9535,1,94,0)
contain any changes to the VISTA BLOOD BANK Software as defined by ProPath
"BLD",9535,1,95,0)
standard titled: BBM Team Review of VistA Patches.
"BLD",9535,1,96,0)
 
"BLD",9535,1,97,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*462 does not 
"BLD",9535,1,98,0)
alter or modify any software design safeguards or safety critical elements
"BLD",9535,1,99,0)
functions.
"BLD",9535,1,100,0)
 
"BLD",9535,1,101,0)
RISK ANALYSIS: Changes made by patch LR*5.2*462 have no effect on Blood 
"BLD",9535,1,102,0)
Bank software functionality, therefore RISK is none.
"BLD",9535,1,103,0)
 
"BLD",9535,1,104,0)
VALIDATION REQUIREMENTS BY OPTION: Because of the nature of the changes 
"BLD",9535,1,105,0)
made, no specific validation requirements exist as a result of
"BLD",9535,1,106,0)
installation of this patch.
"BLD",9535,1,107,0)
 
"BLD",9535,1,108,0)
 
"BLD",9535,1,109,0)
 
"BLD",9535,1,110,0)
Patch Components:
"BLD",9535,1,111,0)
-----------------
"BLD",9535,1,112,0)
 
"BLD",9535,1,113,0)
 
"BLD",9535,1,114,0)
Files & Fields Associated:
"BLD",9535,1,115,0)
 
"BLD",9535,1,116,0)
 
"BLD",9535,1,117,0)
File Name (Number)      Field Name (Number)  New/Modified/Deleted
"BLD",9535,1,118,0)
------------------      -------------------  --------------------
"BLD",9535,1,119,0)
LABORATORY TEST         CPRS SCREEN           New
"BLD",9535,1,120,0)
 (#60)                     (#21661)
"BLD",9535,1,121,0)
LABORATORY SITE         CPRS AP DIALOG ON     New
"BLD",9535,1,122,0)
 (#69.9)                   (#21661)
"BLD",9535,1,123,0)
LAB ORDER ENTRY         SUBSCRIPT             New
"BLD",9535,1,124,0)
 (#69)                     (#21661.71)
"BLD",9535,1,125,0)
                        CPRS AP SCREEN        New
"BLD",9535,1,126,0)
                           (#21661.72)
"BLD",9535,1,127,0)
                        SURGEON/PHYSICIAN     New
"BLD",9535,1,128,0)
                           (#21661.73)
"BLD",9535,1,129,0)
                        SURGERY CASE #        New
"BLD",9535,1,130,0)
                           (#21661.74)
"BLD",9535,1,131,0)
                        SPECIMEN SUBMITTED    New
"BLD",9535,1,132,0)
                           BY (#21661.811)
"BLD",9535,1,133,0)
                        BREIF CLINICAL        New
"BLD",9535,1,134,0)
                           HISTORY 
"BLD",9535,1,135,0)
                            (#21661.813)
"BLD",9535,1,136,0)
                        PREOPERATIVE          New
"BLD",9535,1,137,0)
                           DIAGNOSIS 
"BLD",9535,1,138,0)
                            (#21661.814)
"BLD",9535,1,139,0)
                        OPERATIVE FINDINGS    New
"BLD",9535,1,140,0)
                            (#21661.815)      
"BLD",9535,1,141,0)
                        POST OPERATIVE        New
"BLD",9535,1,142,0)
                            FINDINGS 
"BLD",9535,1,143,0)
                             (#21661.816)
"BLD",9535,1,144,0)
 
"BLD",9535,1,145,0)
LR CPRS PARAMETERS                            New
"BLD",9535,1,146,0)
 (#69.71)
"BLD",9535,1,147,0)
                           
"BLD",9535,1,148,0)
 
"BLD",9535,1,149,0)
 
"BLD",9535,1,150,0)
Forms Associated:
"BLD",9535,1,151,0)
 
"BLD",9535,1,152,0)
Form Name                    File #               New/Modified/Deleted
"BLD",9535,1,153,0)
---------                    ------               --------------------
"BLD",9535,1,154,0)
N/A
"BLD",9535,1,155,0)
 
"BLD",9535,1,156,0)
 
"BLD",9535,1,157,0)
Mail Groups Associated:
"BLD",9535,1,158,0)
 
"BLD",9535,1,159,0)
Mail Group Name          New/Modified/Deleted
"BLD",9535,1,160,0)
---------------          --------------------
"BLD",9535,1,161,0)
N/A
"BLD",9535,1,162,0)
 
"BLD",9535,1,163,0)
 
"BLD",9535,1,164,0)
Options Associated:
"BLD",9535,1,165,0)
 
"BLD",9535,1,166,0)
Option Name                 Type         New/Modified/Deleted
"BLD",9535,1,167,0)
-----------                 ----         -------------------- 
"BLD",9535,1,168,0)
LRXOSX                      menu          Modified
"BLD",9535,1,169,0)
LR7OAP CPRS 60 EDIT         edit          New
"BLD",9535,1,170,0)
LR7OAP CPRS 60 PRINT        run routine   New
"BLD",9535,1,171,0)
LR7OAP CPRS DIALOG MENU     menu          New
"BLD",9535,1,172,0)
LR7OAP CPRS DIALOG PRINT    print         New
"BLD",9535,1,173,0)
 
"BLD",9535,1,174,0)
 
"BLD",9535,1,175,0)
 
"BLD",9535,1,176,0)
 
"BLD",9535,1,177,0)
Protocols Associated:
"BLD",9535,1,178,0)
 
"BLD",9535,1,179,0)
Protocol Name       New/Modified/Deleted
"BLD",9535,1,180,0)
-------------       -------------------- 
"BLD",9535,1,181,0)
N/A
"BLD",9535,1,182,0)
 
"BLD",9535,1,183,0)
 
"BLD",9535,1,184,0)
Security Keys Associated:
"BLD",9535,1,185,0)
 
"BLD",9535,1,186,0)
Security Key Name
"BLD",9535,1,187,0)
-----------------
"BLD",9535,1,188,0)
N/A
"BLD",9535,1,189,0)
 
"BLD",9535,1,190,0)
 
"BLD",9535,1,191,0)
Templates Associated:
"BLD",9535,1,192,0)
 
"BLD",9535,1,193,0)
Template Name      Type      File Name (Number)  New/Modified/Deleted 
"BLD",9535,1,194,0)
-------------      ----      ------------------  --------------------
"BLD",9535,1,195,0)
LR7OAPKP DIALOG    PRINT     LR CPRS PARAMETERS   New
"BLD",9535,1,196,0)
   SCREENS                     (#69.71)
"BLD",9535,1,197,0)
                   
"BLD",9535,1,198,0)
LR7OAP CPRS 60     INPUT     LABORATORY TEST      New
"BLD",9535,1,199,0)
   EDIT                        (#60)
"BLD",9535,1,200,0)
 
"BLD",9535,1,201,0)
 
"BLD",9535,1,202,0)
Additional Information:
"BLD",9535,1,203,0)
 
"BLD",9535,1,204,0)
N/A 
"BLD",9535,1,205,0)
 
"BLD",9535,1,206,0)
 
"BLD",9535,1,207,0)
New Service Requests (NSRs):
"BLD",9535,1,208,0)
----------------------------   
"BLD",9535,1,209,0)
#20140511
"BLD",9535,1,210,0)
The Anatomic Pathology (AP) laboratory service needs a mechanism for 
"BLD",9535,1,211,0)
clinicians to provide required patient-specific, procedure-specific, and 
"BLD",9535,1,212,0)
specimen-specific information to facilitate specimen processing by 
"BLD",9535,1,213,0)
pathologists. This mechanism must be in place for use by the specimen 
"BLD",9535,1,214,0)
labeling application in order to generate a primary specimen label that 
"BLD",9535,1,215,0)
positively identifies the specimen and accurately associates it with the 
"BLD",9535,1,216,0)
patient.
"BLD",9535,1,217,0)
 
"BLD",9535,1,218,0)
Patient Safety Issues (PSIs):
"BLD",9535,1,219,0)
-----------------------------
"BLD",9535,1,220,0)
N/A
"BLD",9535,1,221,0)
 
"BLD",9535,1,222,0)
 
"BLD",9535,1,223,0)
Remedy Ticket(s) & Overview:
"BLD",9535,1,224,0)
----------------------------
"BLD",9535,1,225,0)
 
"BLD",9535,1,226,0)
N/A
"BLD",9535,1,227,0)
 
"BLD",9535,1,228,0)
Problem:
"BLD",9535,1,229,0)
-------
"BLD",9535,1,230,0)
N/A
"BLD",9535,1,231,0)
 
"BLD",9535,1,232,0)
Resolution:
"BLD",9535,1,233,0)
----------
"BLD",9535,1,234,0)
N/A
"BLD",9535,1,235,0)
 
"BLD",9535,1,236,0)
Test Sites:
"BLD",9535,1,237,0)
----------
"BLD",9535,1,238,0)
AP Dialogs w/OR*3.0*405:
"BLD",9535,1,239,0)
  North Florida/South Georgia VHCS
"BLD",9535,1,240,0)
  Fresno
"BLD",9535,1,241,0)
  Northern California
"BLD",9535,1,242,0)
Do no harm testing:
"BLD",9535,1,243,0)
  Richmond
"BLD",9535,1,244,0)
 
"BLD",9535,1,245,0)
 
"BLD",9535,1,246,0)
Documentation Retrieval Instructions:
"BLD",9535,1,247,0)
------------------------------------- 
"BLD",9535,1,248,0)
Updated documentation describing the new functionality introduced by this 
"BLD",9535,1,249,0)
patch is available.
"BLD",9535,1,250,0)
 
"BLD",9535,1,251,0)
The preferred method is to FTP the files from 
"BLD",9535,1,252,0)
ftp://download.vista.domain.ext/.
"BLD",9535,1,253,0)
This transmits the files from the first available FTP server. Sites may 
"BLD",9535,1,254,0)
also elect to retrieve software directly from a specific server as 
"BLD",9535,1,255,0)
follows:
"BLD",9535,1,256,0)
 
"BLD",9535,1,257,0)
 Albany         ftp.domain.ext  <ftp://ftp.domain.ext>
"BLD",9535,1,258,0)
 Hines          ftp.domain.ext   <ftp://ftp.domain.ext>
"BLD",9535,1,259,0)
 Salt Lake City ftp.domain.ext     <ftp://ftp.domain.ext>
"BLD",9535,1,260,0)
 
"BLD",9535,1,261,0)
Documentation can also be found on the VA Software Documentation Library 
"BLD",9535,1,262,0)
at: http://www4.domain.ext/vdl/
"BLD",9535,1,263,0)
 
"BLD",9535,1,264,0)
Title                         File Name                       FTP Mode
"BLD",9535,1,265,0)
-----------------------------------------------------------------------
"BLD",9535,1,266,0)
N/A
"BLD",9535,1,267,0)
          
"BLD",9535,1,268,0)
      
"BLD",9535,1,269,0)
Patch Installation:
"BLD",9535,1,270,0)
 
"BLD",9535,1,271,0)
 
"BLD",9535,1,272,0)
Pre/Post Installation Overview:
"BLD",9535,1,273,0)
-------------------------------
"BLD",9535,1,274,0)
This patch will install new fields to the LABORATORY TEST (#60), LAB 
"BLD",9535,1,275,0)
ORDER ENTRY (#69) and LABORATORY SITE PARAMETERS (#69.9) files. It will 
"BLD",9535,1,276,0)
also install a new file, LR CPRS SCREEN (#69.71), four new "LR7OAP" 
"BLD",9535,1,277,0)
options, a print template for the LR CPRS SCREEN file and an edit 
"BLD",9535,1,278,0)
template for the LABORATORY TEST file.
"BLD",9535,1,279,0)
 
"BLD",9535,1,280,0)
Pre-Installation Instructions:
"BLD",9535,1,281,0)
------------------------------
"BLD",9535,1,282,0)
This patch may be installed with users on the system although it is 
"BLD",9535,1,283,0)
strongly recommended that it be installed during non-peak hours when 
"BLD",9535,1,284,0)
LAB usage is at a minimum.
"BLD",9535,1,285,0)
 
"BLD",9535,1,286,0)
 
"BLD",9535,1,287,0)
Installation Instructions:
"BLD",9535,1,288,0)
--------------------------
"BLD",9535,1,289,0)
This installation will install the components necessary to support the 
"BLD",9535,1,290,0)
CPRS AP Order Dialog functionality released with OR*3.0*405.
"BLD",9535,1,291,0)
 
"BLD",9535,1,292,0)
1.  Choose the PackMan message containing this patch.
"BLD",9535,1,293,0)
 
"BLD",9535,1,294,0)
2.  Choose the INSTALL/CHECK MESSAGE PackMan option.  
"BLD",9535,1,295,0)
 
"BLD",9535,1,296,0)
3.  From the Kernel Installation and Distribution System Menu, select
"BLD",9535,1,297,0)
    the Installation Menu.  From this menu, you may elect to use the
"BLD",9535,1,298,0)
    following options. When prompted for the INSTALL NAME enter the patch 
"BLD",9535,1,299,0)
    LR*5.2*462:
"BLD",9535,1,300,0)
    a.  Backup a Transport Global - This option will create a backup
"BLD",9535,1,301,0)
        message of any routines exported with this patch. It will not
"BLD",9535,1,302,0)
        backup any other changes such as DDs or templates.
"BLD",9535,1,303,0)
    b.  Compare Transport Global to Current System - This option will
"BLD",9535,1,304,0)
        allow you to view all changes that will be made when this patch
"BLD",9535,1,305,0)
        is installed.  It compares all components of this patch
"BLD",9535,1,306,0)
        (routines, DDs, templates, etc.).
"BLD",9535,1,307,0)
    c.  Verify Checksums in Transport Global - This option will allow
"BLD",9535,1,308,0)
        you to ensure the integrity of the routines that are in the
"BLD",9535,1,309,0)
        transport global.
"BLD",9535,1,310,0)
     
"BLD",9535,1,311,0)
4.  From the Installation Menu, select the Install Package(s) option and
"BLD",9535,1,312,0)
    choose the patch to install.
"BLD",9535,1,313,0)
 
"BLD",9535,1,314,0)
5.  When prompted 'Want KIDS to Rebuild Menu Trees Upon Completion of
"BLD",9535,1,315,0)
    Install? NO//'     
"BLD",9535,1,316,0)
    Respond: NO
"BLD",9535,1,317,0)
 
"BLD",9535,1,318,0)
6.  When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"BLD",9535,1,319,0)
    NO//'
"BLD",9535,1,320,0)
    Respond: NO
"BLD",9535,1,321,0)
 
"BLD",9535,1,322,0)
7.  When prompted 'Want to DISABLE Scheduled Options, Menu Options, 
"BLD",9535,1,323,0)
    and Protocols? NO//' 
"BLD",9535,1,324,0)
    Respond: NO
"BLD",9535,1,325,0)
 
"BLD",9535,1,326,0)
8.  If prompted 'Delay Install (Minutes):  (0 - 60): 0//' respond 0.
"BLD",9535,1,327,0)
 
"BLD",9535,1,328,0)
 
"BLD",9535,1,329,0)
Post-Installation Instructions:
"BLD",9535,1,330,0)
-------------------------------
"BLD",9535,1,331,0)
N/A
"BLD",9535,4,0)
^9.64PA^69.9^4
"BLD",9535,4,60,0)
60
"BLD",9535,4,60,2,0)
^9.641^60.021661^2
"BLD",9535,4,60,2,60,0)
LABORATORY TEST  (File-top level)
"BLD",9535,4,60,2,60,1,0)
^9.6411^^
"BLD",9535,4,60,2,60.021661,0)
CPRS SCREEN  (sub-file)
"BLD",9535,4,60,2,60.021661,1,0)
^9.6411^.01^1
"BLD",9535,4,60,2,60.021661,1,.01,0)
CPRS SCREEN
"BLD",9535,4,60,222)
y^n^p^^^^n^^n
"BLD",9535,4,60,224)

"BLD",9535,4,69,0)
69
"BLD",9535,4,69,2,0)
^9.641^69.01^3
"BLD",9535,4,69,2,69,0)
LAB ORDER ENTRY  (File-top level)
"BLD",9535,4,69,2,69,1,0)
^9.6411^^
"BLD",9535,4,69,2,69.01,0)
SPECIMEN #  (sub-file)
"BLD",9535,4,69,2,69.01,1,0)
^9.6411^13^1
"BLD",9535,4,69,2,69.01,1,13,0)
COLLECTION STATUS
"BLD",9535,4,69,2,69.221661,0)
AP SPECIMEN  (sub-file)
"BLD",9535,4,69,2,69.221661,1,0)
^9.6411^.01^4
"BLD",9535,4,69,2,69.221661,1,.01,0)
AP SPECIMEN
"BLD",9535,4,69,2,69.221661,1,.06,0)
SPECIMEN
"BLD",9535,4,69,2,69.221661,1,.07,0)
SAMPLE
"BLD",9535,4,69,2,69.221661,1,.08,0)
SPECIMEN DESCRIPTION
"BLD",9535,4,69,222)
y^n^p^^^^n^^n
"BLD",9535,4,69,224)

"BLD",9535,4,69.71,0)
69.71
"BLD",9535,4,69.71,222)
y^y^f^^n^^y^o^n
"BLD",9535,4,69.9,0)
69.9
"BLD",9535,4,69.9,2,0)
^9.641^69.9^1
"BLD",9535,4,69.9,2,69.9,0)
LABORATORY SITE  (File-top level)
"BLD",9535,4,69.9,2,69.9,1,0)
^9.6411^21661^1
"BLD",9535,4,69.9,2,69.9,1,21661,0)
CPRS AP DIALOG ON
"BLD",9535,4,69.9,222)
y^n^p^^^^n^^n
"BLD",9535,4,69.9,224)

"BLD",9535,4,"APDD",60,60)

"BLD",9535,4,"APDD",60,60.021661)

"BLD",9535,4,"APDD",60,60.021661,.01)

"BLD",9535,4,"APDD",69,69)

"BLD",9535,4,"APDD",69,69.01)

"BLD",9535,4,"APDD",69,69.01,13)

"BLD",9535,4,"APDD",69,69.221661)

"BLD",9535,4,"APDD",69,69.221661,.01)

"BLD",9535,4,"APDD",69,69.221661,.06)

"BLD",9535,4,"APDD",69,69.221661,.07)

"BLD",9535,4,"APDD",69,69.221661,.08)

"BLD",9535,4,"APDD",69.9,69.9)

"BLD",9535,4,"APDD",69.9,69.9,21661)

"BLD",9535,4,"B",60,60)

"BLD",9535,4,"B",69,69)

"BLD",9535,4,"B",69.71,69.71)

"BLD",9535,4,"B",69.9,69.9)

"BLD",9535,6.3)
44
"BLD",9535,"ABPKG")
n
"BLD",9535,"INI")
PRE^LR462A
"BLD",9535,"INID")
n^n^n
"BLD",9535,"INIT")
POST^LR462A
"BLD",9535,"KRN",0)
^9.67PA^779.2^20
"BLD",9535,"KRN",.4,0)
.4
"BLD",9535,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",9535,"KRN",.4,"NM",1,0)
LR7OAPKP DIALOG SCREENS    FILE #69.71^69.71^0
"BLD",9535,"KRN",.4,"NM","B","LR7OAPKP DIALOG SCREENS    FILE #69.71",1)

"BLD",9535,"KRN",.401,0)
.401
"BLD",9535,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",9535,"KRN",.402,0)
.402
"BLD",9535,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",9535,"KRN",.402,"NM",1,0)
LR7OAP CPRS 60 EDIT    FILE #60^60^0
"BLD",9535,"KRN",.402,"NM","B","LR7OAP CPRS 60 EDIT    FILE #60",1)

"BLD",9535,"KRN",.403,0)
.403
"BLD",9535,"KRN",.403,"NM",0)
^9.68A^^
"BLD",9535,"KRN",.5,0)
.5
"BLD",9535,"KRN",.84,0)
.84
"BLD",9535,"KRN",3.6,0)
3.6
"BLD",9535,"KRN",3.8,0)
3.8
"BLD",9535,"KRN",9.2,0)
9.2
"BLD",9535,"KRN",9.8,0)
9.8
"BLD",9535,"KRN",9.8,"NM",0)
^9.68A^39^19
"BLD",9535,"KRN",9.8,"NM",3,0)
LRAP^^0^B25886264
"BLD",9535,"KRN",9.8,"NM",4,0)
LR7OFAO^^0^B54432906
"BLD",9535,"KRN",9.8,"NM",8,0)
LR7OF0^^0^B41838489
"BLD",9535,"KRN",9.8,"NM",12,0)
LROS^^0^B42665920
"BLD",9535,"KRN",9.8,"NM",23,0)
LRUWLF^^0^B10789696
"BLD",9535,"KRN",9.8,"NM",25,0)
LRAPKOE^^0^B164456408
"BLD",9535,"KRN",9.8,"NM",26,0)
LRAPKOEU^^0^B7473474
"BLD",9535,"KRN",9.8,"NM",27,0)
LRAPDA^^0^B95028265
"BLD",9535,"KRN",9.8,"NM",28,0)
LR7OB3^^0^B27184019
"BLD",9535,"KRN",9.8,"NM",29,0)
LRAPKOE1^^0^B1258642
"BLD",9535,"KRN",9.8,"NM",30,0)
LRAPKLG1^^0^B8921740
"BLD",9535,"KRN",9.8,"NM",32,0)
LRAPKLG^^0^B46698322
"BLD",9535,"KRN",9.8,"NM",33,0)
LR462A^^0^B5945552
"BLD",9535,"KRN",9.8,"NM",34,0)
LRAPLG^^0^B12374267
"BLD",9535,"KRN",9.8,"NM",35,0)
LRAPLG1^^0^B181234041
"BLD",9535,"KRN",9.8,"NM",36,0)
LR7OAPKM^^0^B69415435
"BLD",9535,"KRN",9.8,"NM",37,0)
LRAPRES1^^0^B70400068
"BLD",9535,"KRN",9.8,"NM",38,0)
LR7OAPMG^^0^B59502319
"BLD",9535,"KRN",9.8,"NM",39,0)
LRUDEL^^0^B28725080
"BLD",9535,"KRN",9.8,"NM","B","LR462A",33)

"BLD",9535,"KRN",9.8,"NM","B","LR7OAPKM",36)

"BLD",9535,"KRN",9.8,"NM","B","LR7OAPMG",38)

"BLD",9535,"KRN",9.8,"NM","B","LR7OB3",28)

"BLD",9535,"KRN",9.8,"NM","B","LR7OF0",8)

"BLD",9535,"KRN",9.8,"NM","B","LR7OFAO",4)

"BLD",9535,"KRN",9.8,"NM","B","LRAP",3)

"BLD",9535,"KRN",9.8,"NM","B","LRAPDA",27)

"BLD",9535,"KRN",9.8,"NM","B","LRAPKLG",32)

"BLD",9535,"KRN",9.8,"NM","B","LRAPKLG1",30)

"BLD",9535,"KRN",9.8,"NM","B","LRAPKOE",25)

"BLD",9535,"KRN",9.8,"NM","B","LRAPKOE1",29)

"BLD",9535,"KRN",9.8,"NM","B","LRAPKOEU",26)

"BLD",9535,"KRN",9.8,"NM","B","LRAPLG",34)

"BLD",9535,"KRN",9.8,"NM","B","LRAPLG1",35)

"BLD",9535,"KRN",9.8,"NM","B","LRAPRES1",37)

"BLD",9535,"KRN",9.8,"NM","B","LROS",12)

"BLD",9535,"KRN",9.8,"NM","B","LRUDEL",39)

"BLD",9535,"KRN",9.8,"NM","B","LRUWLF",23)

"BLD",9535,"KRN",19,0)
19
"BLD",9535,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",9535,"KRN",19,"NM",1,0)
LR7OAP CPRS DIALOG PRINT^^0
"BLD",9535,"KRN",19,"NM",2,0)
LR7OAP CPRS 60 EDIT^^0
"BLD",9535,"KRN",19,"NM",3,0)
LRXOSX^^2
"BLD",9535,"KRN",19,"NM",4,0)
LR7OAP CPRS DIALOG MENU^^0
"BLD",9535,"KRN",19,"NM",5,0)
LR7OAP CPRS 60 PRINT^^0
"BLD",9535,"KRN",19,"NM","B","LR7OAP CPRS 60 EDIT",2)

"BLD",9535,"KRN",19,"NM","B","LR7OAP CPRS 60 PRINT",5)

"BLD",9535,"KRN",19,"NM","B","LR7OAP CPRS DIALOG MENU",4)

"BLD",9535,"KRN",19,"NM","B","LR7OAP CPRS DIALOG PRINT",1)

"BLD",9535,"KRN",19,"NM","B","LRXOSX",3)

"BLD",9535,"KRN",19.1,0)
19.1
"BLD",9535,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9535,"KRN",101,0)
101
"BLD",9535,"KRN",409.61,0)
409.61
"BLD",9535,"KRN",771,0)
771
"BLD",9535,"KRN",779.2,0)
779.2
"BLD",9535,"KRN",870,0)
870
"BLD",9535,"KRN",8989.51,0)
8989.51
"BLD",9535,"KRN",8989.52,0)
8989.52
"BLD",9535,"KRN",8994,0)
8994
"BLD",9535,"KRN","B",.4,.4)

"BLD",9535,"KRN","B",.401,.401)

"BLD",9535,"KRN","B",.402,.402)

"BLD",9535,"KRN","B",.403,.403)

"BLD",9535,"KRN","B",.5,.5)

"BLD",9535,"KRN","B",.84,.84)

"BLD",9535,"KRN","B",3.6,3.6)

"BLD",9535,"KRN","B",3.8,3.8)

"BLD",9535,"KRN","B",9.2,9.2)

"BLD",9535,"KRN","B",9.8,9.8)

"BLD",9535,"KRN","B",19,19)

"BLD",9535,"KRN","B",19.1,19.1)

"BLD",9535,"KRN","B",101,101)

"BLD",9535,"KRN","B",409.61,409.61)

"BLD",9535,"KRN","B",771,771)

"BLD",9535,"KRN","B",779.2,779.2)

"BLD",9535,"KRN","B",870,870)

"BLD",9535,"KRN","B",8989.51,8989.51)

"BLD",9535,"KRN","B",8989.52,8989.52)

"BLD",9535,"KRN","B",8994,8994)

"BLD",9535,"PRE")
LR462A
"BLD",9535,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9535,"QUES",0)
^9.62^^
"BLD",9535,"REQB",0)
^9.611^6^6
"BLD",9535,"REQB",1,0)
LR*5.2*259^2
"BLD",9535,"REQB",2,0)
LR*5.2*291^2
"BLD",9535,"REQB",3,0)
LR*5.2*350^2
"BLD",9535,"REQB",4,0)
LR*5.2*422^2
"BLD",9535,"REQB",5,0)
LR*5.2*433^2
"BLD",9535,"REQB",6,0)
LR*5.2*450^2
"BLD",9535,"REQB","B","LR*5.2*259",1)

"BLD",9535,"REQB","B","LR*5.2*291",2)

"BLD",9535,"REQB","B","LR*5.2*350",3)

"BLD",9535,"REQB","B","LR*5.2*422",4)

"BLD",9535,"REQB","B","LR*5.2*433",5)

"BLD",9535,"REQB","B","LR*5.2*450",6)

"DATA",69.71,102,0)
102-BRONCHIAL CYTOLOGY^BRON^1^CY
"DATA",69.71,103,0)
103-FINE NEEDLE ASPIRATE^FNA^1^CY
"DATA",69.71,109,0)
109-BRONCHIAL BIOPSY^BROBIO^1^SP
"DATA",69.71,116,0)
116-TISSUE EXAM^TISEXAM^1^SP
"DATA",69.71,118,0)
118-BONE MARROW^BONEM^1^SP
"DATA",69.71,119,0)
119-GASTROINTESTINAL ENDOSCOPY^GASTRO^1^SP
"DATA",69.71,120,0)
120-GASTRO-INTESTINAL,UPPER GI^GASTUP^1^SP
"DATA",69.71,121,0)
121-UROLOGY,PROSTATE^UROPROS^1^SP
"DATA",69.71,123,0)
123-UROLOGY,BLADDER/URETER^UROBLUR^1^SP
"DATA",69.71,124,0)
124-DERMATOLOGY^DERM^1^SP
"DATA",69.71,125,0)
125-GENERAL FLUID^GENFLU^1^CY
"DATA",69.71,126,0)
126-GYNECOLOGY (PAP SMEAR)^PAP^1^CY
"DATA",69.71,127,0)
127-URINE^URINE^1^CY
"DATA",69.71,127,1,0)
^69.712
"DATA",69.71,127,4,0)
^69.714^^0
"DATA",69.71,129,0)
128-RENAL BIOPSY^RENALB^1^SP
"DATA",69.71,130,0)
129-EM EXAM^EMEX^1^EM
"FIA",60)
LABORATORY TEST
"FIA",60,0)
^LAB(60,
"FIA",60,0,0)
60I
"FIA",60,0,1)
y^n^f^^^^n^^n
"FIA",60,0,10)

"FIA",60,0,11)

"FIA",60,0,"RLRO")

"FIA",60,0,"VR")
5.2^LR
"FIA",60,60)
0
"FIA",60,60.01)
0
"FIA",60,60.02)
0
"FIA",60,60.021661)
0
"FIA",60,60.021661,.01)

"FIA",60,60.03)
0
"FIA",60,60.04)
0
"FIA",60,60.05)
0
"FIA",60,60.0505)
0
"FIA",60,60.06)
0
"FIA",60,60.07)
0
"FIA",60,60.08)
0
"FIA",60,60.09)
0
"FIA",60,60.1)
0
"FIA",60,60.11)
0
"FIA",60,60.12)
0
"FIA",60,60.121661)
0
"FIA",60,60.13)
0
"FIA",60,60.14)
0
"FIA",60,60.196)
0
"FIA",60,60.2)
0
"FIA",60,60.5051)
0
"FIA",69)
LAB ORDER ENTRY
"FIA",69,0)
^LRO(69,
"FIA",69,0,0)
69D
"FIA",69,0,1)
y^n^f^^^^n^^n
"FIA",69,0,10)

"FIA",69,0,11)

"FIA",69,0,"RLRO")

"FIA",69,0,"VR")
5.2^LR
"FIA",69,69)
0
"FIA",69,69.01)
0
"FIA",69,69.01,13)

"FIA",69,69.02)
0
"FIA",69,69.03)
0
"FIA",69,69.04)
0
"FIA",69,69.05)
0
"FIA",69,69.2166113)
0
"FIA",69,69.2166114)
0
"FIA",69,69.2166115)
0
"FIA",69,69.2166116)
0
"FIA",69,69.221661)
0
"FIA",69,69.221661,.01)

"FIA",69,69.221661,.06)

"FIA",69,69.221661,.07)

"FIA",69,69.221661,.08)

"FIA",69,69.2216612)
0
"FIA",69,69.22166124)
0
"FIA",69,69.399)
0
"FIA",69,69.3991)
0
"FIA",69.71)
LR CPRS PARAMETERS
"FIA",69.71,0)
^LAB(69.71,
"FIA",69.71,0,0)
69.71
"FIA",69.71,0,1)
y^y^f^^n^^y^o^n
"FIA",69.71,0,10)

"FIA",69.71,0,11)

"FIA",69.71,0,"RLRO")

"FIA",69.71,0,"VR")
5.2^LR
"FIA",69.71,69.71)
0
"FIA",69.71,69.712)
0
"FIA",69.71,69.713)
0
"FIA",69.71,69.714)
0
"FIA",69.9)
LABORATORY SITE
"FIA",69.9,0)
^LAB(69.9,
"FIA",69.9,0,0)
69.9
"FIA",69.9,0,1)
y^n^p^^^^n^^n
"FIA",69.9,0,10)

"FIA",69.9,0,11)

"FIA",69.9,0,"RLRO")

"FIA",69.9,0,"VR")
5.2^LR
"FIA",69.9,69.9)
1
"FIA",69.9,69.9,21661)

"INI")
PRE^LR462A
"INIT")
POST^LR462A
"IX",69,69,"APP",0)
69^APP^Index is used to send AMA/Billable panels to PCE.^MU^^R^IR^W^69.03^^^^^A
"IX",69,69,"APP",.1,0)
^^9^9^3060105^
"IX",69,69,"APP",.1,1,0)
The "APP" index is used by routine LRBEBA5 to send Lab data to PCE.
"IX",69,69,"APP",.1,2,0)
EN^LRBEBA5 is called from routine LRNIGHT, the nightly cleanup task.
"IX",69,69,"APP",.1,3,0)
If the current date is the same as the date stored in PANEL PROCESS
"IX",69,69,"APP",.1,4,0)
DATE field (#620) of the LABORATORY SITE file (#69.9), then routine
"IX",69,69,"APP",.1,5,0)
LRBEBA5 uses index "APP" to locate data for AMA/Billable panels that
"IX",69,69,"APP",.1,6,0)
have not been sent to PCE due to pending results for atomic tests on
"IX",69,69,"APP",.1,7,0)
the panel.  Panel tests from the previous calendar month will be
"IX",69,69,"APP",.1,8,0)
"unbundled" and the CPT Codes for the verified atomic tests are sent
"IX",69,69,"APP",.1,9,0)
to PCE.
"IX",69,69,"APP",1)
S ^LRO(69,"APP",+X2(2),DA(2),DA(1),DA)=""
"IX",69,69,"APP",1.4)
I X2(1),X2(2)
"IX",69,69,"APP",2)
K ^LRO(69,"APP",+X1(2),DA(2),DA(1),DA)
"IX",69,69,"APP",2.4)
I X1(1),X1(2),'X2(1)
"IX",69,69,"APP",11.1,0)
^.114IA^2^2
"IX",69,69,"APP",11.1,1,0)
1^F^69.03^22.1^^^F
"IX",69,69,"APP",11.1,2,0)
2^F^69.03^22^^^F
"KRN",.4,2630,-1)
0^1
"KRN",.4,2630,0)
LR7OAPKP DIALOG SCREENS^3160303.0041^^69.71^^^3160303
"KRN",.4,2630,"F",2)
.01~.05~.06~1~2,.01~
"KRN",.4,2630,"H")
CPRS AP DIALOG SCREENS (#69.71)
"KRN",.402,2280,-1)
0^1
"KRN",.402,2280,0)
LR7OAP CPRS 60 EDIT^3160303.0407^@^60^^@^3160526
"KRN",.402,2280,"DR",1,60)
21661;
"KRN",.402,2280,"DR",2,60.021661)
.01;
"KRN",19,5394,-1)
2^3
"KRN",19,5394,0)
LRXOSX^OE/RR interface parameters^^M^132^^^^^^^26
"KRN",19,5394,10,0)
^19.01IP^10^10
"KRN",19,5394,10,10,0)
14391^AP
"KRN",19,5394,10,10,"^")
LR7OAP CPRS DIALOG MENU
"KRN",19,5394,"U")
OE/RR INTERFACE PARAMETERS
"KRN",19,14389,-1)
0^1
"KRN",19,14389,0)
LR7OAP CPRS DIALOG PRINT^CPRS Dialog Print (#69.71)^^P^^^^^^^^LAB SERVICE
"KRN",19,14389,1,0)
^19.06^2^2^3160303^^^^
"KRN",19,14389,1,1,0)
This option will provide a listing of the entries in LR CPRS PARAMETERS
"KRN",19,14389,1,2,0)
(#69.71)
"KRN",19,14389,2)
y
"KRN",19,14389,10.1)
CPRS DIALOG PRT
"KRN",19,14389,30)
LAB(69.71,
"KRN",19,14389,60)
LAB(69.71,
"KRN",19,14389,63)
.01,.05,.06,1,2
"KRN",19,14389,64)
[LR7OAP DIALOG SCREENS]
"KRN",19,14389,65)
100
"KRN",19,14389,66)

"KRN",19,14389,"U")
CPRS DIALOG PRINT (#69.71)
"KRN",19,14390,-1)
0^2
"KRN",19,14390,0)
LR7OAP CPRS 60 EDIT^CPRS LAB TEST (#60) EDIT^^E^^^^^^^^LAB SERVICE
"KRN",19,14390,1,0)
^^2^2^3160303^
"KRN",19,14390,1,1,0)
This option will allow the user to map AP CPRS SCREEN to a specific 
"KRN",19,14390,1,2,0)
laboratory test.
"KRN",19,14390,10.1)
AP CPRS TEST EDIT
"KRN",19,14390,30)
LAB(60,
"KRN",19,14390,31)
AEMNO
"KRN",19,14390,36)
B
"KRN",19,14390,50)
LAB(60,
"KRN",19,14390,51)
[LR7OAP CPRS 60 EDIT]
"KRN",19,14390,63)
[LR70AP CPRS 60 EDIT]
"KRN",19,14390,"U")
CPRS LAB TEST (#60) EDIT
"KRN",19,14391,-1)
0^4
"KRN",19,14391,0)
LR7OAP CPRS DIALOG MENU^CPRS AP Dialog Menu^^M^^^^^^^^LAB SERVICE
"KRN",19,14391,1,0)
^19.06^2^2^3160304^^
"KRN",19,14391,1,1,0)
This menu contains options to manage implementation of CPRS AP Dialog 
"KRN",19,14391,1,2,0)
enhancement
"KRN",19,14391,10,0)
^19.01IP^3^3
"KRN",19,14391,10,1,0)
14390^ED^1
"KRN",19,14391,10,1,"^")
LR7OAP CPRS 60 EDIT
"KRN",19,14391,10,2,0)
14389^PRT^2
"KRN",19,14391,10,2,"^")
LR7OAP CPRS DIALOG PRINT
"KRN",19,14391,10,3,0)
14392^LST
"KRN",19,14391,10,3,"^")
LR7OAP CPRS 60 PRINT
"KRN",19,14391,10.1)
CPRS Dialog Menu
"KRN",19,14391,99)
64065,36782
"KRN",19,14391,"U")
CPRS AP DIALOG MENU
"KRN",19,14392,-1)
0^5
"KRN",19,14392,0)
LR7OAP CPRS 60 PRINT^Print Laboratory Test CPRS Screen^^R^^^^^^^^LAB SERVICE
"KRN",19,14392,1,0)
^19.06^4^4^3160304^^^
"KRN",19,14392,1,1,0)
This option will printed a sorted listing of Laboratory Test (#60) that
"KRN",19,14392,1,2,0)
are linked to LR CPRS PARAMETERS Screens (#69.71).
"KRN",19,14392,1,3,0)
The report can be sorted two ways.
"KRN",19,14392,1,4,0)
The user can select the method.
"KRN",19,14392,10.1)
Print CPRS Screen List
"KRN",19,14392,25)
PRT^LRAPKOEU
"KRN",19,14392,30)
LAB(69.71,
"KRN",19,14392,50)
LAB(69.71,
"KRN",19,14392,"U")
PRINT LABORATORY TEST CPRS SCR
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2941128
"PKG",26,22,1,"PAH",1,0)
462^3161129^132
"PKG",26,22,1,"PAH",1,1,0)
^^331^331^3161129
"PKG",26,22,1,"PAH",1,1,1,0)
Nov 23, 2016 - V14 - The following defect was corrected by a modification 
"PKG",26,22,1,"PAH",1,1,2,0)
to CRE863^LRAPLG1 routine that will restore the NOW// default instead of 
"PKG",26,22,1,"PAH",1,1,3,0)
presenting a date and time.
"PKG",26,22,1,"PAH",1,1,4,0)
 
"PKG",26,22,1,"PAH",1,1,5,0)
423457: LI log in, anatomic path field of DATE/TIME SPECIMEN RECEIVED 
"PKG",26,22,1,"PAH",1,1,6,0)
should default to NOW//
"PKG",26,22,1,"PAH",1,1,7,0)
 
"PKG",26,22,1,"PAH",1,1,8,0)
Oct 6, 2016 - V13 - Added the following as required patches: 
"PKG",26,22,1,"PAH",1,1,9,0)
LR*5.2*259,291,350,422,433,450
"PKG",26,22,1,"PAH",1,1,10,0)
 
"PKG",26,22,1,"PAH",1,1,11,0)
Oct 5, 2016 - V12 - This release enhances the "Delete accession #, anat
"PKG",26,22,1,"PAH",1,1,12,0)
path" option to update CPRS status to discontinued.
"PKG",26,22,1,"PAH",1,1,13,0)
 
"PKG",26,22,1,"PAH",1,1,14,0)
Corrects - Defect 373204 -  
"PKG",26,22,1,"PAH",1,1,15,0)
VLE ANATOMIC PATHOLOGY - VistA LR462/OR405 SURGERY CASE DOES NOT DISPLAY 
"PKG",26,22,1,"PAH",1,1,16,0)
ON PATIENT DURING SPECIMEN LOGIN IN VISTA
"PKG",26,22,1,"PAH",1,1,17,0)
 
"PKG",26,22,1,"PAH",1,1,18,0)
 
"PKG",26,22,1,"PAH",1,1,19,0)
Fix - M error when the accession has been cancelled using the "Delete
"PKG",26,22,1,"PAH",1,1,20,0)
accession #, anat path"option and then a user tries to utilize the "Delete
"PKG",26,22,1,"PAH",1,1,21,0)
entire order or individual test" option for the same order number. - 
"PKG",26,22,1,"PAH",1,1,22,0)
there was a typo in the legacy code in the LROS routine.
"PKG",26,22,1,"PAH",1,1,23,0)
 
"PKG",26,22,1,"PAH",1,1,24,0)
 
"PKG",26,22,1,"PAH",1,1,25,0)
Sept 14, 2016 - V11 - Fixes 'no routine' error in APSUB^ORMBLDLR that was 
"PKG",26,22,1,"PAH",1,1,26,0)
still calling LR7OAPMG which was changed with V10 to LR7OAPKM. Problem 
"PKG",26,22,1,"PAH",1,1,27,0)
found by developer once CPRS32 v16 GUI was available. The routine 
"PKG",26,22,1,"PAH",1,1,28,0)
LR7OAPMG has been added back into this build and will be removed at a 
"PKG",26,22,1,"PAH",1,1,29,0)
later date.
"PKG",26,22,1,"PAH",1,1,30,0)
 
"PKG",26,22,1,"PAH",1,1,31,0)
Sept 8 - V10 - Fixes the following defects:
"PKG",26,22,1,"PAH",1,1,32,0)
Defect # 373205 Surgeon Physician not displaying in VistA  
"PKG",26,22,1,"PAH",1,1,33,0)
When submitted by is blank - the Surgeon does not display.
"PKG",26,22,1,"PAH",1,1,34,0)
 
"PKG",26,22,1,"PAH",1,1,35,0)
Defect # 373204 
"PKG",26,22,1,"PAH",1,1,36,0)
The surgery case look up fails during log
"PKG",26,22,1,"PAH",1,1,37,0)
 
"PKG",26,22,1,"PAH",1,1,38,0)
Sept 1, 2016 - V9 - Fixes Undefined varible.
"PKG",26,22,1,"PAH",1,1,39,0)
Defect # - 371975 - Undefined variable when login the specimen in VistA 
"PKG",26,22,1,"PAH",1,1,40,0)
if Surgeon/Physician is not selected in CPRS.
"PKG",26,22,1,"PAH",1,1,41,0)
 
"PKG",26,22,1,"PAH",1,1,42,0)
 
"PKG",26,22,1,"PAH",1,1,43,0)
AUG 25, 2016 - V8 - Fixes default bleed over problems with the 
"PKG",26,22,1,"PAH",1,1,44,0)
Pathologist and Submitted by fields in AP.
"PKG",26,22,1,"PAH",1,1,45,0)
AUG 12, 2016 - V7 - Fixes defect 357639:
"PKG",26,22,1,"PAH",1,1,46,0)
 
"PKG",26,22,1,"PAH",1,1,47,0)
Defect: 357639 - VLE ANATOMIC PATHOLOGY - DURING SPECIMEN LOGIN IN VISTA, 
"PKG",26,22,1,"PAH",1,1,48,0)
PATHOLOGIST FIELD POPULATES NAME OF SURGEON USED FOR A PRIOR ORDER
"PKG",26,22,1,"PAH",1,1,49,0)
 
"PKG",26,22,1,"PAH",1,1,50,0)
JULY 17, 2016 - V6 packman created and sent to forum - corrects problem 
"PKG",26,22,1,"PAH",1,1,51,0)
in LRPLG1 routine.
"PKG",26,22,1,"PAH",1,1,52,0)
JULY 15, 2016 - V5 packman created and sent to forum - corrects hard 
"PKG",26,22,1,"PAH",1,1,53,0)
errors found by QA
"PKG",26,22,1,"PAH",1,1,54,0)
JULY 15, 2016 - V4 packman created and sent to forum
"PKG",26,22,1,"PAH",1,1,55,0)
JUNE 30, 2016 - V1 packman created and sent to forum
"PKG",26,22,1,"PAH",1,1,56,0)
JUNE 29, 2016 - V1 kids file to QA for do no harm testing
"PKG",26,22,1,"PAH",1,1,57,0)
 
"PKG",26,22,1,"PAH",1,1,58,0)
The build for this patch is distributed in support of the VLE 
"PKG",26,22,1,"PAH",1,1,59,0)
Anatomic Pathology order dialog enhancements. It contains a modification 
"PKG",26,22,1,"PAH",1,1,60,0)
to the LABORATORY TEST (#60), LAB ORDER ENTRY (#69), LABORATORY SITE
"PKG",26,22,1,"PAH",1,1,61,0)
(#69.9) and adds the new file LR CPRS PARAMETERS (#69.71).
"PKG",26,22,1,"PAH",1,1,62,0)
 
"PKG",26,22,1,"PAH",1,1,63,0)
1-      Anatomic Pathology specimen log-in option has been modified to 
"PKG",26,22,1,"PAH",1,1,64,0)
prompt the user for an order number. This order number will be created 
"PKG",26,22,1,"PAH",1,1,65,0)
by CPRS after patches OR*3.0*405 and LR*5.2*469 are installed.
"PKG",26,22,1,"PAH",1,1,66,0)
2-      If a user enters an order number, the process deviates from the 
"PKG",26,22,1,"PAH",1,1,67,0)
current Log-in,anat path option in that it displays any data entered via
"PKG",26,22,1,"PAH",1,1,68,0)
CPRS AP order dialog. The fields presented could include any of the
"PKG",26,22,1,"PAH",1,1,69,0)
following:
"PKG",26,22,1,"PAH",1,1,70,0)
   a.      SURGEON/PHYSICIAN
"PKG",26,22,1,"PAH",1,1,71,0)
   b.      SPECIMEN SUBMITTED BY
"PKG",26,22,1,"PAH",1,1,72,0)
   c.      SURGERY CASE #
"PKG",26,22,1,"PAH",1,1,73,0)
   d.      SPECIMEN DESCRIPTION/SPECIMEN (multiple)
"PKG",26,22,1,"PAH",1,1,74,0)
   e.      BRIEF CLINCAL DESCRIPTION
"PKG",26,22,1,"PAH",1,1,75,0)
   f.      PREOPERATIVE DIAGNOSIS
"PKG",26,22,1,"PAH",1,1,76,0)
   g.      OPERATIVE FINDINGS
"PKG",26,22,1,"PAH",1,1,77,0)
   h.      POSTOPERATIVE DIAGNOSIS
"PKG",26,22,1,"PAH",1,1,78,0)
3-      If Surgical Case(s) are found for this patient in the last 7 days 
"PKG",26,22,1,"PAH",1,1,79,0)
they will be presented to the user for selection. If a case is selected 
"PKG",26,22,1,"PAH",1,1,80,0)
the data from the Surgical Case will be displayed and the user will be 
"PKG",26,22,1,"PAH",1,1,81,0)
asked if they wish to include this in the appropriate field in the 
"PKG",26,22,1,"PAH",1,1,82,0)
Anatomic Pathology accession.
"PKG",26,22,1,"PAH",1,1,83,0)
4-      If Surgical Case information is added to Anatomic Pathology 
"PKG",26,22,1,"PAH",1,1,84,0)
fields it will display first and followed by the information obtained 
"PKG",26,22,1,"PAH",1,1,85,0)
from the CPRS order.
"PKG",26,22,1,"PAH",1,1,86,0)
5-      All other data entry/edit actions will be done via existing 
"PKG",26,22,1,"PAH",1,1,87,0)
Anatomic Pathology options.
"PKG",26,22,1,"PAH",1,1,88,0)
 
"PKG",26,22,1,"PAH",1,1,89,0)
 
"PKG",26,22,1,"PAH",1,1,90,0)
 
"PKG",26,22,1,"PAH",1,1,91,0)
Blood Bank Review:
"PKG",26,22,1,"PAH",1,1,92,0)
==================
"PKG",26,22,1,"PAH",1,1,93,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*462 does not 
"PKG",26,22,1,"PAH",1,1,94,0)
contain any changes to the VISTA BLOOD BANK Software as defined by ProPath
"PKG",26,22,1,"PAH",1,1,95,0)
standard titled: BBM Team Review of VistA Patches.
"PKG",26,22,1,"PAH",1,1,96,0)
 
"PKG",26,22,1,"PAH",1,1,97,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*462 does not 
"PKG",26,22,1,"PAH",1,1,98,0)
alter or modify any software design safeguards or safety critical elements
"PKG",26,22,1,"PAH",1,1,99,0)
functions.
"PKG",26,22,1,"PAH",1,1,100,0)
 
"PKG",26,22,1,"PAH",1,1,101,0)
RISK ANALYSIS: Changes made by patch LR*5.2*462 have no effect on Blood 
"PKG",26,22,1,"PAH",1,1,102,0)
Bank software functionality, therefore RISK is none.
"PKG",26,22,1,"PAH",1,1,103,0)
 
"PKG",26,22,1,"PAH",1,1,104,0)
VALIDATION REQUIREMENTS BY OPTION: Because of the nature of the changes 
"PKG",26,22,1,"PAH",1,1,105,0)
made, no specific validation requirements exist as a result of
"PKG",26,22,1,"PAH",1,1,106,0)
installation of this patch.
"PKG",26,22,1,"PAH",1,1,107,0)
 
"PKG",26,22,1,"PAH",1,1,108,0)
 
"PKG",26,22,1,"PAH",1,1,109,0)
 
"PKG",26,22,1,"PAH",1,1,110,0)
Patch Components:
"PKG",26,22,1,"PAH",1,1,111,0)
-----------------
"PKG",26,22,1,"PAH",1,1,112,0)
 
"PKG",26,22,1,"PAH",1,1,113,0)
 
"PKG",26,22,1,"PAH",1,1,114,0)
Files & Fields Associated:
"PKG",26,22,1,"PAH",1,1,115,0)
 
"PKG",26,22,1,"PAH",1,1,116,0)
 
"PKG",26,22,1,"PAH",1,1,117,0)
File Name (Number)      Field Name (Number)  New/Modified/Deleted
"PKG",26,22,1,"PAH",1,1,118,0)
------------------      -------------------  --------------------
"PKG",26,22,1,"PAH",1,1,119,0)
LABORATORY TEST         CPRS SCREEN           New
"PKG",26,22,1,"PAH",1,1,120,0)
 (#60)                     (#21661)
"PKG",26,22,1,"PAH",1,1,121,0)
LABORATORY SITE         CPRS AP DIALOG ON     New
"PKG",26,22,1,"PAH",1,1,122,0)
 (#69.9)                   (#21661)
"PKG",26,22,1,"PAH",1,1,123,0)
LAB ORDER ENTRY         SUBSCRIPT             New
"PKG",26,22,1,"PAH",1,1,124,0)
 (#69)                     (#21661.71)
"PKG",26,22,1,"PAH",1,1,125,0)
                        CPRS AP SCREEN        New
"PKG",26,22,1,"PAH",1,1,126,0)
                           (#21661.72)
"PKG",26,22,1,"PAH",1,1,127,0)
                        SURGEON/PHYSICIAN     New
"PKG",26,22,1,"PAH",1,1,128,0)
                           (#21661.73)
"PKG",26,22,1,"PAH",1,1,129,0)
                        SURGERY CASE #        New
"PKG",26,22,1,"PAH",1,1,130,0)
                           (#21661.74)
"PKG",26,22,1,"PAH",1,1,131,0)
                        SPECIMEN SUBMITTED    New
"PKG",26,22,1,"PAH",1,1,132,0)
                           BY (#21661.811)
"PKG",26,22,1,"PAH",1,1,133,0)
                        BREIF CLINICAL        New
"PKG",26,22,1,"PAH",1,1,134,0)
                           HISTORY 
"PKG",26,22,1,"PAH",1,1,135,0)
                            (#21661.813)
"PKG",26,22,1,"PAH",1,1,136,0)
                        PREOPERATIVE          New
"PKG",26,22,1,"PAH",1,1,137,0)
                           DIAGNOSIS 
"PKG",26,22,1,"PAH",1,1,138,0)
                            (#21661.814)
"PKG",26,22,1,"PAH",1,1,139,0)
                        OPERATIVE FINDINGS    New
"PKG",26,22,1,"PAH",1,1,140,0)
                            (#21661.815)      
"PKG",26,22,1,"PAH",1,1,141,0)
                        POST OPERATIVE        New
"PKG",26,22,1,"PAH",1,1,142,0)
                            FINDINGS 
"PKG",26,22,1,"PAH",1,1,143,0)
                             (#21661.816)
"PKG",26,22,1,"PAH",1,1,144,0)
 
"PKG",26,22,1,"PAH",1,1,145,0)
LR CPRS PARAMETERS                            New
"PKG",26,22,1,"PAH",1,1,146,0)
 (#69.71)
"PKG",26,22,1,"PAH",1,1,147,0)
                           
"PKG",26,22,1,"PAH",1,1,148,0)
 
"PKG",26,22,1,"PAH",1,1,149,0)
 
"PKG",26,22,1,"PAH",1,1,150,0)
Forms Associated:
"PKG",26,22,1,"PAH",1,1,151,0)
 
"PKG",26,22,1,"PAH",1,1,152,0)
Form Name                    File #               New/Modified/Deleted
"PKG",26,22,1,"PAH",1,1,153,0)
---------                    ------               --------------------
"PKG",26,22,1,"PAH",1,1,154,0)
N/A
"PKG",26,22,1,"PAH",1,1,155,0)
 
"PKG",26,22,1,"PAH",1,1,156,0)
 
"PKG",26,22,1,"PAH",1,1,157,0)
Mail Groups Associated:
"PKG",26,22,1,"PAH",1,1,158,0)
 
"PKG",26,22,1,"PAH",1,1,159,0)
Mail Group Name          New/Modified/Deleted
"PKG",26,22,1,"PAH",1,1,160,0)
---------------          --------------------
"PKG",26,22,1,"PAH",1,1,161,0)
N/A
"PKG",26,22,1,"PAH",1,1,162,0)
 
"PKG",26,22,1,"PAH",1,1,163,0)
 
"PKG",26,22,1,"PAH",1,1,164,0)
Options Associated:
"PKG",26,22,1,"PAH",1,1,165,0)
 
"PKG",26,22,1,"PAH",1,1,166,0)
Option Name                 Type         New/Modified/Deleted
"PKG",26,22,1,"PAH",1,1,167,0)
-----------                 ----         -------------------- 
"PKG",26,22,1,"PAH",1,1,168,0)
LRXOSX                      menu          Modified
"PKG",26,22,1,"PAH",1,1,169,0)
LR7OAP CPRS 60 EDIT         edit          New
"PKG",26,22,1,"PAH",1,1,170,0)
LR7OAP CPRS 60 PRINT        run routine   New
"PKG",26,22,1,"PAH",1,1,171,0)
LR7OAP CPRS DIALOG MENU     menu          New
"PKG",26,22,1,"PAH",1,1,172,0)
LR7OAP CPRS DIALOG PRINT    print         New
"PKG",26,22,1,"PAH",1,1,173,0)
 
"PKG",26,22,1,"PAH",1,1,174,0)
 
"PKG",26,22,1,"PAH",1,1,175,0)
 
"PKG",26,22,1,"PAH",1,1,176,0)
 
"PKG",26,22,1,"PAH",1,1,177,0)
Protocols Associated:
"PKG",26,22,1,"PAH",1,1,178,0)
 
"PKG",26,22,1,"PAH",1,1,179,0)
Protocol Name       New/Modified/Deleted
"PKG",26,22,1,"PAH",1,1,180,0)
-------------       -------------------- 
"PKG",26,22,1,"PAH",1,1,181,0)
N/A
"PKG",26,22,1,"PAH",1,1,182,0)
 
"PKG",26,22,1,"PAH",1,1,183,0)
 
"PKG",26,22,1,"PAH",1,1,184,0)
Security Keys Associated:
"PKG",26,22,1,"PAH",1,1,185,0)
 
"PKG",26,22,1,"PAH",1,1,186,0)
Security Key Name
"PKG",26,22,1,"PAH",1,1,187,0)
-----------------
"PKG",26,22,1,"PAH",1,1,188,0)
N/A
"PKG",26,22,1,"PAH",1,1,189,0)
 
"PKG",26,22,1,"PAH",1,1,190,0)
 
"PKG",26,22,1,"PAH",1,1,191,0)
Templates Associated:
"PKG",26,22,1,"PAH",1,1,192,0)
 
"PKG",26,22,1,"PAH",1,1,193,0)
Template Name      Type      File Name (Number)  New/Modified/Deleted 
"PKG",26,22,1,"PAH",1,1,194,0)
-------------      ----      ------------------  --------------------
"PKG",26,22,1,"PAH",1,1,195,0)
LR7OAPKP DIALOG    PRINT     LR CPRS PARAMETERS   New
"PKG",26,22,1,"PAH",1,1,196,0)
   SCREENS                     (#69.71)
"PKG",26,22,1,"PAH",1,1,197,0)
                   
"PKG",26,22,1,"PAH",1,1,198,0)
LR7OAP CPRS 60     INPUT     LABORATORY TEST      New
"PKG",26,22,1,"PAH",1,1,199,0)
   EDIT                        (#60)
"PKG",26,22,1,"PAH",1,1,200,0)
 
"PKG",26,22,1,"PAH",1,1,201,0)
 
"PKG",26,22,1,"PAH",1,1,202,0)
Additional Information:
"PKG",26,22,1,"PAH",1,1,203,0)
 
"PKG",26,22,1,"PAH",1,1,204,0)
N/A 
"PKG",26,22,1,"PAH",1,1,205,0)
 
"PKG",26,22,1,"PAH",1,1,206,0)
 
"PKG",26,22,1,"PAH",1,1,207,0)
New Service Requests (NSRs):
"PKG",26,22,1,"PAH",1,1,208,0)
----------------------------   
"PKG",26,22,1,"PAH",1,1,209,0)
#20140511
"PKG",26,22,1,"PAH",1,1,210,0)
The Anatomic Pathology (AP) laboratory service needs a mechanism for 
"PKG",26,22,1,"PAH",1,1,211,0)
clinicians to provide required patient-specific, procedure-specific, and 
"PKG",26,22,1,"PAH",1,1,212,0)
specimen-specific information to facilitate specimen processing by 
"PKG",26,22,1,"PAH",1,1,213,0)
pathologists. This mechanism must be in place for use by the specimen 
"PKG",26,22,1,"PAH",1,1,214,0)
labeling application in order to generate a primary specimen label that 
"PKG",26,22,1,"PAH",1,1,215,0)
positively identifies the specimen and accurately associates it with the 
"PKG",26,22,1,"PAH",1,1,216,0)
patient.
"PKG",26,22,1,"PAH",1,1,217,0)
 
"PKG",26,22,1,"PAH",1,1,218,0)
Patient Safety Issues (PSIs):
"PKG",26,22,1,"PAH",1,1,219,0)
-----------------------------
"PKG",26,22,1,"PAH",1,1,220,0)
N/A
"PKG",26,22,1,"PAH",1,1,221,0)
 
"PKG",26,22,1,"PAH",1,1,222,0)
 
"PKG",26,22,1,"PAH",1,1,223,0)
Remedy Ticket(s) & Overview:
"PKG",26,22,1,"PAH",1,1,224,0)
----------------------------
"PKG",26,22,1,"PAH",1,1,225,0)
 
"PKG",26,22,1,"PAH",1,1,226,0)
N/A
"PKG",26,22,1,"PAH",1,1,227,0)
 
"PKG",26,22,1,"PAH",1,1,228,0)
Problem:
"PKG",26,22,1,"PAH",1,1,229,0)
-------
"PKG",26,22,1,"PAH",1,1,230,0)
N/A
"PKG",26,22,1,"PAH",1,1,231,0)
 
"PKG",26,22,1,"PAH",1,1,232,0)
Resolution:
"PKG",26,22,1,"PAH",1,1,233,0)
----------
"PKG",26,22,1,"PAH",1,1,234,0)
N/A
"PKG",26,22,1,"PAH",1,1,235,0)
 
"PKG",26,22,1,"PAH",1,1,236,0)
Test Sites:
"PKG",26,22,1,"PAH",1,1,237,0)
----------
"PKG",26,22,1,"PAH",1,1,238,0)
AP Dialogs w/OR*3.0*405:
"PKG",26,22,1,"PAH",1,1,239,0)
  North Florida/South Georgia VHCS
"PKG",26,22,1,"PAH",1,1,240,0)
  Fresno
"PKG",26,22,1,"PAH",1,1,241,0)
  Northern California
"PKG",26,22,1,"PAH",1,1,242,0)
Do no harm testing:
"PKG",26,22,1,"PAH",1,1,243,0)
  Richmond
"PKG",26,22,1,"PAH",1,1,244,0)
 
"PKG",26,22,1,"PAH",1,1,245,0)
 
"PKG",26,22,1,"PAH",1,1,246,0)
Documentation Retrieval Instructions:
"PKG",26,22,1,"PAH",1,1,247,0)
------------------------------------- 
"PKG",26,22,1,"PAH",1,1,248,0)
Updated documentation describing the new functionality introduced by this 
"PKG",26,22,1,"PAH",1,1,249,0)
patch is available.
"PKG",26,22,1,"PAH",1,1,250,0)
 
"PKG",26,22,1,"PAH",1,1,251,0)
The preferred method is to FTP the files from 
"PKG",26,22,1,"PAH",1,1,252,0)
ftp://download.vista.domain.ext/.
"PKG",26,22,1,"PAH",1,1,253,0)
This transmits the files from the first available FTP server. Sites may 
"PKG",26,22,1,"PAH",1,1,254,0)
also elect to retrieve software directly from a specific server as 
"PKG",26,22,1,"PAH",1,1,255,0)
follows:
"PKG",26,22,1,"PAH",1,1,256,0)
 
"PKG",26,22,1,"PAH",1,1,257,0)
 Albany         ftp.domain.ext  <ftp://ftp.domain.ext>
"PKG",26,22,1,"PAH",1,1,258,0)
 Hines          ftp.domain.ext   <ftp://ftp.domain.ext>
"PKG",26,22,1,"PAH",1,1,259,0)
 Salt Lake City ftp.domain.ext     <ftp://ftp.domain.ext>
"PKG",26,22,1,"PAH",1,1,260,0)
 
"PKG",26,22,1,"PAH",1,1,261,0)
Documentation can also be found on the VA Software Documentation Library 
"PKG",26,22,1,"PAH",1,1,262,0)
at: http://www4.domain.ext/vdl/
"PKG",26,22,1,"PAH",1,1,263,0)
 
"PKG",26,22,1,"PAH",1,1,264,0)
Title                         File Name                       FTP Mode
"PKG",26,22,1,"PAH",1,1,265,0)
-----------------------------------------------------------------------
"PKG",26,22,1,"PAH",1,1,266,0)
N/A
"PKG",26,22,1,"PAH",1,1,267,0)
          
"PKG",26,22,1,"PAH",1,1,268,0)
      
"PKG",26,22,1,"PAH",1,1,269,0)
Patch Installation:
"PKG",26,22,1,"PAH",1,1,270,0)
 
"PKG",26,22,1,"PAH",1,1,271,0)
 
"PKG",26,22,1,"PAH",1,1,272,0)
Pre/Post Installation Overview:
"PKG",26,22,1,"PAH",1,1,273,0)
-------------------------------
"PKG",26,22,1,"PAH",1,1,274,0)
This patch will install new fields to the LABORATORY TEST (#60), LAB 
"PKG",26,22,1,"PAH",1,1,275,0)
ORDER ENTRY (#69) and LABORATORY SITE PARAMETERS (#69.9) files. It will 
"PKG",26,22,1,"PAH",1,1,276,0)
also install a new file, LR CPRS SCREEN (#69.71), four new "LR7OAP" 
"PKG",26,22,1,"PAH",1,1,277,0)
options, a print template for the LR CPRS SCREEN file and an edit 
"PKG",26,22,1,"PAH",1,1,278,0)
template for the LABORATORY TEST file.
"PKG",26,22,1,"PAH",1,1,279,0)
 
"PKG",26,22,1,"PAH",1,1,280,0)
Pre-Installation Instructions:
"PKG",26,22,1,"PAH",1,1,281,0)
------------------------------
"PKG",26,22,1,"PAH",1,1,282,0)
This patch may be installed with users on the system although it is 
"PKG",26,22,1,"PAH",1,1,283,0)
strongly recommended that it be installed during non-peak hours when 
"PKG",26,22,1,"PAH",1,1,284,0)
LAB usage is at a minimum.
"PKG",26,22,1,"PAH",1,1,285,0)
 
"PKG",26,22,1,"PAH",1,1,286,0)
 
"PKG",26,22,1,"PAH",1,1,287,0)
Installation Instructions:
"PKG",26,22,1,"PAH",1,1,288,0)
--------------------------
"PKG",26,22,1,"PAH",1,1,289,0)
This installation will install the components necessary to support the 
"PKG",26,22,1,"PAH",1,1,290,0)
CPRS AP Order Dialog functionality released with OR*3.0*405.
"PKG",26,22,1,"PAH",1,1,291,0)
 
"PKG",26,22,1,"PAH",1,1,292,0)
1.  Choose the PackMan message containing this patch.
"PKG",26,22,1,"PAH",1,1,293,0)
 
"PKG",26,22,1,"PAH",1,1,294,0)
2.  Choose the INSTALL/CHECK MESSAGE PackMan option.  
"PKG",26,22,1,"PAH",1,1,295,0)
 
"PKG",26,22,1,"PAH",1,1,296,0)
3.  From the Kernel Installation and Distribution System Menu, select
"PKG",26,22,1,"PAH",1,1,297,0)
    the Installation Menu.  From this menu, you may elect to use the
"PKG",26,22,1,"PAH",1,1,298,0)
    following options. When prompted for the INSTALL NAME enter the patch 
"PKG",26,22,1,"PAH",1,1,299,0)
    LR*5.2*462:
"PKG",26,22,1,"PAH",1,1,300,0)
    a.  Backup a Transport Global - This option will create a backup
"PKG",26,22,1,"PAH",1,1,301,0)
        message of any routines exported with this patch. It will not
"PKG",26,22,1,"PAH",1,1,302,0)
        backup any other changes such as DDs or templates.
"PKG",26,22,1,"PAH",1,1,303,0)
    b.  Compare Transport Global to Current System - This option will
"PKG",26,22,1,"PAH",1,1,304,0)
        allow you to view all changes that will be made when this patch
"PKG",26,22,1,"PAH",1,1,305,0)
        is installed.  It compares all components of this patch
"PKG",26,22,1,"PAH",1,1,306,0)
        (routines, DDs, templates, etc.).
"PKG",26,22,1,"PAH",1,1,307,0)
    c.  Verify Checksums in Transport Global - This option will allow
"PKG",26,22,1,"PAH",1,1,308,0)
        you to ensure the integrity of the routines that are in the
"PKG",26,22,1,"PAH",1,1,309,0)
        transport global.
"PKG",26,22,1,"PAH",1,1,310,0)
     
"PKG",26,22,1,"PAH",1,1,311,0)
4.  From the Installation Menu, select the Install Package(s) option and
"PKG",26,22,1,"PAH",1,1,312,0)
    choose the patch to install.
"PKG",26,22,1,"PAH",1,1,313,0)
 
"PKG",26,22,1,"PAH",1,1,314,0)
5.  When prompted 'Want KIDS to Rebuild Menu Trees Upon Completion of
"PKG",26,22,1,"PAH",1,1,315,0)
    Install? NO//'     
"PKG",26,22,1,"PAH",1,1,316,0)
    Respond: NO
"PKG",26,22,1,"PAH",1,1,317,0)
 
"PKG",26,22,1,"PAH",1,1,318,0)
6.  When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"PKG",26,22,1,"PAH",1,1,319,0)
    NO//'
"PKG",26,22,1,"PAH",1,1,320,0)
    Respond: NO
"PKG",26,22,1,"PAH",1,1,321,0)
 
"PKG",26,22,1,"PAH",1,1,322,0)
7.  When prompted 'Want to DISABLE Scheduled Options, Menu Options, 
"PKG",26,22,1,"PAH",1,1,323,0)
    and Protocols? NO//' 
"PKG",26,22,1,"PAH",1,1,324,0)
    Respond: NO
"PKG",26,22,1,"PAH",1,1,325,0)
 
"PKG",26,22,1,"PAH",1,1,326,0)
8.  If prompted 'Delay Install (Minutes):  (0 - 60): 0//' respond 0.
"PKG",26,22,1,"PAH",1,1,327,0)
 
"PKG",26,22,1,"PAH",1,1,328,0)
 
"PKG",26,22,1,"PAH",1,1,329,0)
Post-Installation Instructions:
"PKG",26,22,1,"PAH",1,1,330,0)
-------------------------------
"PKG",26,22,1,"PAH",1,1,331,0)
N/A
"PRE")
LR462A
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
19
"RTN","LR462A")
0^33^B5945552^n/a
"RTN","LR462A",1,0)
LR462A ;DALOI/FHS - LR*5.2*462 PATCH ENVIRONMENT CHECK ROUTINE;15-DEC-2015 ;09/01/16  15:52
"RTN","LR462A",2,0)
 ;;5.2;LAB SERVICE;**462**;Sep 27, 1994;Build 44
"RTN","LR462A",3,0)
ENV ; Does not prevent loading of the transport global.
"RTN","LR462A",4,0)
 ; Environment check is done only during the install.
"RTN","LR462A",5,0)
 ;
"RTN","LR462A",6,0)
 N XQA,XQAMSG
"RTN","LR462A",7,0)
 ;
"RTN","LR462A",8,0)
CHKNM ; Make sure the patch name exist
"RTN","LR462A",9,0)
 S XUMF=1
"RTN","LR462A",10,0)
 I '$D(XPDNM) D  G EXIT
"RTN","LR462A",11,0)
 . D BMES("No valid patch name exist")
"RTN","LR462A",12,0)
 . S XPDQUIT=2
"RTN","LR462A",13,0)
 ;
"RTN","LR462A",14,0)
 D CHECK
"RTN","LR462A",15,0)
 D EXIT
"RTN","LR462A",16,0)
 Q
"RTN","LR462A",17,0)
 ;
"RTN","LR462A",18,0)
CHECK ; Perform environment check
"RTN","LR462A",19,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D
"RTN","LR462A",20,0)
 . D BMES("Terminal Device is not defined")
"RTN","LR462A",21,0)
 . S XPDQUIT=2
"RTN","LR462A",22,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D
"RTN","LR462A",23,0)
 . D BMES("Please log in to set local DUZ... variables")
"RTN","LR462A",24,0)
 . S XPDQUIT=2
"RTN","LR462A",25,0)
 I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D
"RTN","LR462A",26,0)
 . D BMES("You are not a valid user on this system")
"RTN","LR462A",27,0)
 . S XPDQUIT=2
"RTN","LR462A",28,0)
 S XPDIQ("XPZ1","B")="NO" Q
"RTN","LR462A",29,0)
EXIT ;
"RTN","LR462A",30,0)
 N XQA
"RTN","LR462A",31,0)
 I $G(XPDQUIT) D BMES("--- Install Environment Check FAILED ---") Q
"RTN","LR462A",32,0)
 D BMES("--- Environment Check is Ok ---")
"RTN","LR462A",33,0)
 S XQAMSG="Loading of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LR462A",34,0)
 D BMES("Sending install loaded alert to mail group G.LMI")
"RTN","LR462A",35,0)
 S XQA("G.LMI")=""
"RTN","LR462A",36,0)
 D SETUP^XQALERT
"RTN","LR462A",37,0)
 H 5
"RTN","LR462A",38,0)
 Q
"RTN","LR462A",39,0)
 ;
"RTN","LR462A",40,0)
PRE ;Pre-install entry point
"RTN","LR462A",41,0)
 Q:'$D(XPDNM)
"RTN","LR462A",42,0)
 ;
"RTN","LR462A",43,0)
 D BMES("*** Preinstall completed ***")
"RTN","LR462A",44,0)
 Q
"RTN","LR462A",45,0)
POST ;Post install
"RTN","LR462A",46,0)
 ;Set up CPRS AP ORDER MESSAGE LOG -
"RTN","LR462A",47,0)
 ;CPRS AP ORDER MESSAGE IS STORE HERE FOR PROCESSING BY "TASKAP1^LR7OAPKM"
"RTN","LR462A",48,0)
 I '$G(^XTMP("LRAP1",0)) D
"RTN","LR462A",49,0)
 . S ^XTMP("LRAP1",0)=$$FMADD^XLFDT(DT+365)_U_DT_U_"CPRS AP ORDER MESSAGE LOG"
"RTN","LR462A",50,0)
 . S ^XTMP("LRAP1",1,0)=10
"RTN","LR462A",51,0)
 S $P(^XTMP("LRAP1",0),U,3)="CPRS AP ORDER MESSAGE LOG"
"RTN","LR462A",52,0)
 D
"RTN","LR462A",53,0)
 . D BMES("Sending install completion alert to mail group G.LMI")
"RTN","LR462A",54,0)
 . S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" Installed on "_$$HTE^XLFDT($H)
"RTN","LR462A",55,0)
 . S XQA("G.LMI")=""
"RTN","LR462A",56,0)
 . D SETUP^XQALERT
"RTN","LR462A",57,0)
 K LRDA,LRPRT,LRVR
"RTN","LR462A",58,0)
 Q
"RTN","LR462A",59,0)
BMES(STR) ;Write BMES^XPDUTL statements
"RTN","LR462A",60,0)
 D BMES^XPDUTL($$CJ^XLFSTR(STR,IOM))
"RTN","LR462A",61,0)
 Q
"RTN","LR462A",62,0)
MAIL ;Send message to G.LMI local mail group of added 64 codes
"RTN","LR462A",63,0)
 N DIFROM,XMSUB,XMDUZ,XMTEXT,XMY,LRIEN,LRN
"RTN","LR462A",64,0)
 Q
"RTN","LR7OAPKM")
0^36^B69415435^n/a
"RTN","LR7OAPKM",1,0)
LR7OAPKM ;DSS/FHS - INBOUND CPRS MESSAGE HANDLER ;09/16/16  09:43
"RTN","LR7OAPKM",2,0)
 ;;5.2;LAB SERVICE;**462**;Sep 27, 1994;Build 44
"RTN","LR7OAPKM",3,0)
 Q
"RTN","LR7OAPKM",4,0)
AP1(MSG,LRAP1) ;Entry point to store CPRS AP orders messages
"RTN","LR7OAPKM",5,0)
 ; CALL FROM LR7OF0
"RTN","LR7OAPKM",6,0)
 ;In put
"RTN","LR7OAPKM",7,0)
 ; MSG=CPRS HL7 ORDER MESSAGE ARRAY
"RTN","LR7OAPKM",8,0)
 ; ^XTMP("LRAP1",1,IEN.01)=ORIFN^LRDFN
"RTN","LR7OAPKM",9,0)
 ; ^XTMP("LRAP1",1,IEN.02)="AP1"|ORIFN||TEST SUBSCRIPT|||AP Screen IEN_"-"_TEST NAME
"RTN","LR7OAPKM",10,0)
 ; MERGE MSG INTO ^XTMP("LRAP1",1,IEN,1...)   USED FOR TROBLE SHOOTING
"RTN","LR7OAPKM",11,0)
 ; +AP Screen IEN pointer to ^LAB(69.71
"RTN","LR7OAPKM",12,0)
 ;
"RTN","LR7OAPKM",13,0)
 ;TASKAP1^LR7OAPKM Stores the CPRS order message data into ^LRO(69,
"RTN","LR7OAPKM",14,0)
 ;
"RTN","LR7OAPKM",15,0)
 N LRCNT
"RTN","LR7OAPKM",16,0)
 D:'$G(^XTMP("LRAP1",0)) SETUP0 ;Setup ^XTMP("LRAP1")
"RTN","LR7OAPKM",17,0)
 S LRCNT=+$G(^XTMP("LRAP1",1,0))+1,$P(^XTMP("LRAP1",1,0),U)=LRCNT
"RTN","LR7OAPKM",18,0)
 S ^XTMP("LRAP1",1,LRCNT,.01)=$G(ORIFN)_U_$G(LRDFN)
"RTN","LR7OAPKM",19,0)
 S ^XTMP("LRAP1",1,LRCNT,.02)=LRAP1
"RTN","LR7OAPKM",20,0)
 S ^XTMP("LRAP1","B",+$G(ORIFN),LRCNT)=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","LR7OAPKM",21,0)
 S ^XTMP("LRAP1","C",+$G(LRDFN),LRCNT)=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","LR7OAPKM",22,0)
 M ^XTMP("LRAP1",1,LRCNT)=MSG
"RTN","LR7OAPKM",23,0)
 D AP1LOAD
"RTN","LR7OAPKM",24,0)
 S $P(^XTMP("LRAP1",0),U)=$$FMADD^XLFDT(DT,180)
"RTN","LR7OAPKM",25,0)
 Q
"RTN","LR7OAPKM",26,0)
 ;
"RTN","LR7OAPKM",27,0)
AP1LOAD ;Call ZTLOAD with LRCNT value
"RTN","LR7OAPKM",28,0)
 N ZTIO,ZTRTN,ZTDTH,ZTDESC,ZTSAVE
"RTN","LR7OAPKM",29,0)
 S ZTSAVE("ORIFN")="",ZTSAVE("LRAP1")="",ZTSAVE("DUZ*")=""
"RTN","LR7OAPKM",30,0)
 S ZTSAVE("LRCNT")="",ZTIO="",ZTDTH=$H,ZTDESC="LR PROCESS CPRS AP ORDER MESSAGE"
"RTN","LR7OAPKM",31,0)
 S ZTRTN="TASKAP1^LR7OAPKM"
"RTN","LR7OAPKM",32,0)
 D ^%ZTLOAD
"RTN","LR7OAPKM",33,0)
 Q
"RTN","LR7OAPKM",34,0)
TASKAP1 ;Entry point for TASK
"RTN","LR7OAPKM",35,0)
 ;Pass LRCNT from ^XTMP("LRAP1",
"RTN","LR7OAPKM",36,0)
 ;
"RTN","LR7OAPKM",37,0)
 K ^TMP("LRAOE",$J)
"RTN","LR7OAPKM",38,0)
 N DATA,IEN,IENX,IENXX,ID,FDA,LRCOM,LRCOL,LRCOLROOT,LRDFN,LRFIELD,LRFILE
"RTN","LR7OAPKM",39,0)
 N LRDFN,LRGLOB,LRHEAD,LRDUZ
"RTN","LR7OAPKM",40,0)
 N LRID,LRJ,LRODT,LRORD,LRQS,LRREF,LRSAMP,LRSCR
"RTN","LR7OAPKM",41,0)
 N LRSN,LRSP,LRSPCOM,LRSPDATA,LRSPROOT,LRXSS,LRTXT,VAL,X,Y,LRSPCOMROOT,TMP
"RTN","LR7OAPKM",42,0)
 S:$G(LRCNT) $P(^XTMP("LRAP1",1,0),U,2)=LRCNT
"RTN","LR7OAPKM",43,0)
 S ORIFN=$P(LRAP1,"|",2),LRXSS=$P(LRAP1,"|",4),LRSCR=+$P(LRAP1,"|",7),LRJ=$J
"RTN","LR7OAPKM",44,0)
 M LRDUZ=DUZ
"RTN","LR7OAPKM",45,0)
 S LRREF=$$GET1^DIQ(100,ORIFN_",",33,"I","","ERR")
"RTN","LR7OAPKM",46,0)
 S LRORD=+LRREF,LRODT=$P(LRREF,";",2),LRSN=$P(LRREF,";",3)
"RTN","LR7OAPKM",47,0)
 D GETSPEC(ORIFN,.LRSPDATA)
"RTN","LR7OAPKM",48,0)
 D APSP69(LRODT,LRSN,.LRSPDATA)
"RTN","LR7OAPKM",49,0)
 S VAL=$$ID(ORIFN)
"RTN","LR7OAPKM",50,0)
 Q:'$G(VAL)
"RTN","LR7OAPKM",51,0)
 D LOADIAG(LRODT,LRSN,.TMP)
"RTN","LR7OAPKM",52,0)
 ;
"RTN","LR7OAPKM",53,0)
 S:$G(LRCNT) $P(^XTMP("LRAP1",1,0),U,3)=LRCNT
"RTN","LR7OAPKM",54,0)
 ;
"RTN","LR7OAPKM",55,0)
 ;
"RTN","LR7OAPKM",56,0)
PURGE ;Purge old entries - keep the last 300 entries in the file
"RTN","LR7OAPKM",57,0)
 ;^XTMP("LRAP1",1,0)=NEXT MESSAGE#*MESSAGE # BEING PROCESSED^LAST MESSAGE PROCESSED
"RTN","LR7OAPKM",58,0)
 ; If there are no errors - all three fields should be the same.
"RTN","LR7OAPKM",59,0)
 ;^XTMP("LRAP1",1,IEN,.01)=ORIFN^LRDFN
"RTN","LR7OAPKM",60,0)
 N IEN,VAL
"RTN","LR7OAPKM",61,0)
 S IEN=+($P($G(^XTMP("LRAP1",1,0)),U,3)-300) I IEN>1 D
"RTN","LR7OAPKM",62,0)
 . F IEN=IEN:1:(LRCNT-300) I $G(^XTMP("LRAP1",1,IEN,.01)) S VAL=^(.01) D
"RTN","LR7OAPKM",63,0)
 . . K ^XTMP("LRAP1","B",+VAL,IEN)
"RTN","LR7OAPKM",64,0)
 . . K ^XTMP("LRAP1","C",$P(VAL,U,2),IEN)
"RTN","LR7OAPKM",65,0)
 . . K ^XTMP("LRAP1",1,IEN)
"RTN","LR7OAPKM",66,0)
 K ORIFN,LRAP1,LRCNT
"RTN","LR7OAPKM",67,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LR7OAPKM",68,0)
 Q
"RTN","LR7OAPKM",69,0)
GETSPEC(ORIFN,RET) ;Retrieve Spec Description/Specimen/Sample
"RTN","LR7OAPKM",70,0)
         ;IN = CPRS ORIFN #   ^OR(100,ORIFN
"RTN","LR7OAPKM",71,0)
         ;RET = Return array ID
"RTN","LR7OAPKM",72,0)
         ;OUT = RET(INSTANCE,"NAME")=VALUE
"RTN","LR7OAPKM",73,0)
         ;
"RTN","LR7OAPKM",74,0)
         N IEN,LRX,INST,VAL,VAL1,X,Y
"RTN","LR7OAPKM",75,0)
         S (VAL,RET)="",INST=1
"RTN","LR7OAPKM",76,0)
         I '$G(^OR(100,ORIFN,.1,1,0)) S RET=0 Q RET
"RTN","LR7OAPKM",77,0)
         ;Specimen Description
"RTN","LR7OAPKM",78,0)
         S IEN=0 F  S IEN=$O(^OR(100,ORIFN,4.5,"ID","SPECDESC",IEN)) Q:IEN<1  D
"RTN","LR7OAPKM",79,0)
         . S VAL=^OR(100,ORIFN,4.5,IEN,0),INST=$P(VAL,U,3),VAL1=^(1)
"RTN","LR7OAPKM",80,0)
         . S LRX(INST,"DES")=VAL1
"RTN","LR7OAPKM",81,0)
         S IEN(1)=0 F  S IEN(1)=$O(^OR(100,ORIFN,4.5,"ID","SPECIMEN",IEN(1))) Q:IEN(1)<1  D
"RTN","LR7OAPKM",82,0)
         . S VAL=^OR(100,ORIFN,4.5,IEN(1),0),INST=$P(VAL,U,3),VAL(1)=^(1)
"RTN","LR7OAPKM",83,0)
         . S LRX(INST,"SPEC")=VAL(1)
"RTN","LR7OAPKM",84,0)
         S IEN(2)=0 F  S IEN(2)=$O(^OR(100,ORIFN,4.5,"ID","SAMPLE",IEN(2))) Q:IEN(2)<1  D
"RTN","LR7OAPKM",85,0)
         . S VAL=^OR(100,ORIFN,4.5,IEN(2),0),INST=$P(VAL,U,3),VAL1=^(1)
"RTN","LR7OAPKM",86,0)
         . S LRX(INST,"SAM")=VAL1
"RTN","LR7OAPKM",87,0)
         M RET=LRX
"RTN","LR7OAPKM",88,0)
         Q
"RTN","LR7OAPKM",89,0)
ZAPLOOK(LRAOE) ; Pointer Lookup into a multiple
"RTN","LR7OAPKM",90,0)
 K DIC,DA,Y,X
"RTN","LR7OAPKM",91,0)
 S DIC="^LAB(69.71,"_LRAOE_",4,",DA=LRAOE,DA(1)=21661
"RTN","LR7OAPKM",92,0)
 S DIC(0)="AQEZNM" D ^DIC
"RTN","LR7OAPKM",93,0)
 Q
"RTN","LR7OAPKM",94,0)
DD ;Get the Data Dictionary values
"RTN","LR7OAPKM",95,0)
 S LRTXT="" F  S LRTXT=$O(LRID(LRTXT)) Q:LRTXT=""  D
"RTN","LR7OAPKM",96,0)
 . S IENX=$O(^LAB(69.71,LRSCR,4,"B",LRTXT,0))
"RTN","LR7OAPKM",97,0)
 . S LRID(LRTXT)=^LAB(69.71,LRSCR,4,IENX,0)
"RTN","LR7OAPKM",98,0)
 Q
"RTN","LR7OAPKM",99,0)
ID(ORIFN) ;This is the entry point to extract CPRS user response for at CPRS AP Window
"RTN","LR7OAPKM",100,0)
 ;INPUT  ORIFN=Pointer to ^OR(100,ORIFN
"RTN","LR7OAPKM",101,0)
 ;       LRSCR=Pointer to ^LAB(69.71,LRSCR
"RTN","LR7OAPKM",102,0)
 ;OUTPUT TMP("??"
"RTN","LR7OAPKM",103,0)
 ;Return 1 if valid
"RTN","LR7OAPKM",104,0)
 ;       0^error text
"RTN","LR7OAPKM",105,0)
 ;
"RTN","LR7OAPKM",106,0)
 K IEN,IENX,ID,XXY,LRID,TMP
"RTN","LR7OAPKM",107,0)
 I '$G(^OR(100,ORIFN,0)) Q 0_"^File 100 entry does not exist"
"RTN","LR7OAPKM",108,0)
 ;I '$D(^LAB(69.71,LRSCR,0)) Q 0_"^File 69.71,"_LRSCR_" entry does not exist"
"RTN","LR7OAPKM",109,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","CLINHX",0))
"RTN","LR7OAPKM",110,0)
 I ID M TMP("CL")=^OR(100,ORIFN,4.5,ID,2) K TMP("CL",0)
"RTN","LR7OAPKM",111,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","OPFIND",0))
"RTN","LR7OAPKM",112,0)
 I ID M TMP("OP")=^OR(100,ORIFN,4.5,ID,2) K TMP("OP",0)
"RTN","LR7OAPKM",113,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","POSTOPDX",0))
"RTN","LR7OAPKM",114,0)
 I ID M TMP("PO")=^OR(100,ORIFN,4.5,ID,2) K TMP("PO",0)
"RTN","LR7OAPKM",115,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","PREOPDX",0))
"RTN","LR7OAPKM",116,0)
 I ID M TMP("PR")=^OR(100,ORIFN,4.5,ID,2) K TMP("PR",0)
"RTN","LR7OAPKM",117,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","SPCSUBMIT",0))
"RTN","LR7OAPKM",118,0)
 I ID S TMP("SUB")=^OR(100,ORIFN,4.5,ID,1)
"RTN","LR7OAPKM",119,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","SURGPROV",0))
"RTN","LR7OAPKM",120,0)
 I ID S TMP("SURG")=^OR(100,ORIFN,4.5,ID,1)
"RTN","LR7OAPKM",121,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","SURGCASE",0))
"RTN","LR7OAPKM",122,0)
 I ID S TMP("SURGCASE")=^OR(100,ORIFN,4.5,ID,1)
"RTN","LR7OAPKM",123,0)
 Q 1
"RTN","LR7OAPKM",124,0)
 ;
"RTN","LR7OAPKM",125,0)
ORITEM(ORIFN) ;Return the ^LAB(60,IEN orderable item for an CPRS Order
"RTN","LR7OAPKM",126,0)
 ;
"RTN","LR7OAPKM",127,0)
 N IEN,VAL,RET,ANS,X,Y
"RTN","LR7OAPKM",128,0)
 S:ORIFN="" ORIFN=1582
"RTN","LR7OAPKM",129,0)
 S IEN="1,"_ORIFN_",",RET=0
"RTN","LR7OAPKM",130,0)
 S VAL=$$GET1^DIQ(100.001,IEN,.01,"I",.ANS,"ERR")
"RTN","LR7OAPKM",131,0)
 I VAL="" Q RET
"RTN","LR7OAPKM",132,0)
 I '$D(^ORD(101.43,VAL,"LR")) Q 0
"RTN","LR7OAPKM",133,0)
 K ERR S VAL(2)=$$GET1^DIQ(101.43,VAL_",",".01","I",.ANS,"ERR")
"RTN","LR7OAPKM",134,0)
 S RET=$O(^LAB(60,"B",VAL(2),0))
"RTN","LR7OAPKM",135,0)
 Q +$G(RET)
"RTN","LR7OAPKM",136,0)
 ;
"RTN","LR7OAPKM",137,0)
APSP69(LRODT,LRSN,LRSPDATA) ;Load AOE Specimen/Sample into ^LRO(69,DT,1,LRSN,
"RTN","LR7OAPKM",138,0)
    ; INPUT  SPDATA(X)=LRSP^LRCOL
"RTN","LR7OAPKM",139,0)
 ;
"RTN","LR7OAPKM",140,0)
69 ; Load LRAPDATA(INSTANCE,"NAME") into ^LRO(69,LRODT,1,LRSN
"RTN","LR7OAPKM",141,0)
 ;
"RTN","LR7OAPKM",142,0)
 N FDA,IEN,IENX,ERR,ERR1,ERR2,WPIEN68,NODE,ANS,ANSY,LRSP,LRCOL
"RTN","LR7OAPKM",143,0)
 N LRJ,LRNODE
"RTN","LR7OAPKM",144,0)
 ;
"RTN","LR7OAPKM",145,0)
 ;S LRREF=$$GET1^DIQ(100,ORIFN_",",33,"I","","ERR")
"RTN","LR7OAPKM",146,0)
 ;S LRORD=+LRREF,LRODT=$P(LRREF,";",2),LRSN=$P(LRREF,";",3)
"RTN","LR7OAPKM",147,0)
 S IEN="+1,1,"_LRSN_","_LRODT_",",LRJ=$J
"RTN","LR7OAPKM",148,0)
 S IENX=0 F  S IENX=$O(LRSPDATA(IENX)) Q:IENX<1  D
"RTN","LR7OAPKM",149,0)
 . S LRSPCOM=LRSPDATA(IENX,"DES")
"RTN","LR7OAPKM",150,0)
 . S LRSP=LRSPDATA(IENX,"SPEC")
"RTN","LR7OAPKM",151,0)
 . S LRSAMP=LRSPDATA(IENX,"SAM")
"RTN","LR7OAPKM",152,0)
 . K FDA,ERR1,ANS
"RTN","LR7OAPKM",153,0)
 . S FDA(2,69.221661,IEN,.01)=LRSPCOM ;Specimen Description
"RTN","LR7OAPKM",154,0)
 . S FDA(2,69.221661,IEN,.06)=LRSP ;Specimen  ^LAB(61,LRSP
"RTN","LR7OAPKM",155,0)
 . S FDA(2,69.221661,IEN,.07)=LRSAMP ; Collection Sample ^LAB(62,LRCOL
"RTN","LR7OAPKM",156,0)
 . D UPDATE^DIE("KS","FDA(2)","","ERR1")
"RTN","LR7OAPKM",157,0)
 . I $D(ERR1) W !,IENX_" &&&"
"RTN","LR7OAPKM",158,0)
 Q
"RTN","LR7OAPKM",159,0)
 ;
"RTN","LR7OAPKM",160,0)
LOOK(LRTST,LRSPEC,RET) ;Find CPRS SCREEN pointer
"RTN","LR7OAPKM",161,0)
 ; CALLED FROM ORMBLDLR
"RTN","LR7OAPKM",162,0)
 ;  LROUT(TEST,AP)=CPRS Screen #
"RTN","LR7OAPKM",163,0)
 ;AP = Pointer to ^LAB(69.71
"RTN","LR7OAPKM",164,0)
 ;LRTST=POINTER TO ^LAB(60,
"RTN","LR7OAPKM",165,0)
 ;LRSPEC= POINTER TO ^LAB(61,  Only required for non-panel test
"RTN","LR7OAPKM",166,0)
 ;RET = values returned in the variable. If not pasted values return in the VAL(#) Array
"RTN","LR7OAPKM",167,0)
 ;OUTPUT
"RTN","LR7OAPKM",168,0)
 ;Look at the test level defined CPRS Screen first
"RTN","LR7OAPKM",169,0)
 ;If no test level defined CPRS Screen -
"RTN","LR7OAPKM",170,0)
 ;   then look at the test-specimen level assigned CPRS Screen.
"RTN","LR7OAPKM",171,0)
 ;RET(AP#)=""  Where AP# = Pointer to ^LAB(69.71 file
"RTN","LR7OAPKM",172,0)
 ;RET="" If no AOE screens defined (null result)
"RTN","LR7OAPKM",173,0)
 N IEN,IENX,VAL
"RTN","LR7OAPKM",174,0)
 K RET S RET="",(IENX,IEN)=0,VAL=""
"RTN","LR7OAPKM",175,0)
 I '$D(^LAB(60,+$G(LRTST),0)) S RET="" Q 0
"RTN","LR7OAPKM",176,0)
 ;Look for panel test CPRS Screen
"RTN","LR7OAPKM",177,0)
 I $P(^LAB(60,+$G(LRTST),0),U,5)="" D  M RET=VAL Q IENX
"RTN","LR7OAPKM",178,0)
 . F  S IEN=$O(^LAB(60,"AV1",+$G(LRTST),IEN)) Q:IEN<1  D
"RTN","LR7OAPKM",179,0)
 . . S VAL(IEN)=$P(^LAB(69.71,IEN,0),U),IENX=1
"RTN","LR7OAPKM",180,0)
 ;Look in the specimen mulitple
"RTN","LR7OAPKM",181,0)
 I '$G(IENX) F  S IEN=$O(^LAB(60,+$G(LRTST),1,+$G(LRSPEC),21661,"B",IEN)) Q:IEN<1  D
"RTN","LR7OAPKM",182,0)
 . S VAL(IEN)=$P(^LAB(69.71,IEN,0),U),IENX=1
"RTN","LR7OAPKM",183,0)
 M RET=VAL
"RTN","LR7OAPKM",184,0)
 Q IENX
"RTN","LR7OAPKM",185,0)
 ;
"RTN","LR7OAPKM",186,0)
 ;
"RTN","LR7OAPKM",187,0)
LOADIAG(LRODT,LRSN,LRDATA) ;Load CPRS Dialog into ^LRO(69
"RTN","LR7OAPKM",188,0)
 K ERR,FDA
"RTN","LR7OAPKM",189,0)
 S IEN=LRSN_","_LRODT_","
"RTN","LR7OAPKM",190,0)
 I $O(TMP("CL",0)) D WP^DIE(69.01,IEN,21661.813,"","TMP(""CL"")","ERR") ;CLINICHX
"RTN","LR7OAPKM",191,0)
 I $O(TMP("PR",0)) D WP^DIE(69.01,IEN,21661.814,"","TMP(""PR"")","ERR") ;PRE-OPERATIVE
"RTN","LR7OAPKM",192,0)
 I $O(TMP("OP",0)) D WP^DIE(69.01,IEN,21661.815,"","TMP(""OP"")","ERR") ;OPERATIVE FINDSSSSS
"RTN","LR7OAPKM",193,0)
 I $O(TMP("PO",0)) D WP^DIE(69.01,IEN,21661.816,"","TMP(""PO"")","ERR") ;POST-OP
"RTN","LR7OAPKM",194,0)
 S:$G(TMP("SUB"))'="" FDA(2,69.01,IEN,21661.811)=TMP("SUB") ;SUBMITTER
"RTN","LR7OAPKM",195,0)
 S FDA(2,69.01,IEN,21661.71)="["_LRXSS_"]" ;Accession Ares subscript
"RTN","LR7OAPKM",196,0)
 S FDA(2,69.01,IEN,21661.72)=LRSCR ;CPRS Screen IEN pointer
"RTN","LR7OAPKM",197,0)
 I $G(TMP("SURG")) S FDA(2,69.01,IEN,21661.73)=TMP("SURG") ;SURGEON/PROVIDER
"RTN","LR7OAPKM",198,0)
 I $G(TMP("SURGCASE")) S FDA(2.69.01,IEN,21661.74)=TMP("SURGCASE") ;SURGERY CASE #
"RTN","LR7OAPKM",199,0)
 D UPDATE^DIE("KS","FDA(2)","","ERR")
"RTN","LR7OAPKM",200,0)
 Q
"RTN","LR7OAPKM",201,0)
 ;
"RTN","LR7OAPKM",202,0)
DIAG(LRORD,LRSN)  ;Retrieve CPRS ORDER DIAGNOSIS DATA FROM ^LRO(69,LRODT,1,LRSN
"RTN","LR7OAPKM",203,0)
 ;IN = CPRS ORIFN #   ^OR(100,ORIFN
"RTN","LR7OAPKM",204,0)
 ;RET = Return array ID
"RTN","LR7OAPKM",205,0)
 ;OUT = RET Array
"RTN","LR7OAPKM",206,0)
 ;
"RTN","LR7OAPKM",207,0)
BH ;
"RTN","LR7OAPKM",208,0)
 K ANS,X,Y,ERR,FIL,FLD
"RTN","LR7OAPKM",209,0)
 S RET="",FIL=69.01,FLD=21661.813,IEN=LRSN_","_LRORD_","
"RTN","LR7OAPKM",210,0)
 S X=$$GET1^DIQ(69.01,IEN,21661.813,"Z","TMP(""CL"")","ERR") ;BRIEF CLINICAL HISTORY
"RTN","LR7OAPKM",211,0)
 ;
"RTN","LR7OAPKM",212,0)
PO S X=$$GET1^DIQ(69.01,IEN,21661.814,"Z","TMP(""PR"")","ERR") ; PREOPERATIVE DIAGNOSIS
"RTN","LR7OAPKM",213,0)
 ;
"RTN","LR7OAPKM",214,0)
OF S X=$$GET1^DIQ(69.01,IEN,21661.815,"Z","TMP(""OP"")","ERR") ; OPERATIVE FINGINGS
"RTN","LR7OAPKM",215,0)
 ;
"RTN","LR7OAPKM",216,0)
PD S X=$$GET1^DIQ(69.01,IEN,21661.816,"Z","TMP(""PO"")","ERR") ; POSTOPERATIVE DIAGNOSIS
"RTN","LR7OAPKM",217,0)
 ;
"RTN","LR7OAPKM",218,0)
 W !!
"RTN","LR7OAPKM",219,0)
 Q
"RTN","LR7OAPKM",220,0)
ORDATA(ORIFN,LRVAL) ;Get data from CPRS Dialog fields
"RTN","LR7OAPKM",221,0)
 K ANS,X,Y,ERR,FIL,FLD
"RTN","LR7OAPKM",222,0)
 S LRVAL="",FIL=100.045,FLD=2
"RTN","LR7OAPKM",223,0)
 F VAL=9:1:12 S IEN=VAL_","_ORIFN_"," D
"RTN","LR7OAPKM",224,0)
 . S X=$$GET1^DIQ(100.045,IEN,FLD,"","ANS("_VAL_")","ERR")
"RTN","LR7OAPKM",225,0)
 M LRVAL=ANS
"RTN","LR7OAPKM",226,0)
 Q
"RTN","LR7OAPKM",227,0)
FILDIA(LRODT,LRSN,FLD,ARRAY) ;File CPRS AP Dialog into ^LRO(69,LRODT,1,LRSN
"RTN","LR7OAPKM",228,0)
 K ANS,X,Y,ERR,IEN,FDA
"RTN","LR7OAPKM",229,0)
 S IEN=LRSN_","_LRODT_","
"RTN","LR7OAPKM",230,0)
 S FIL=69.01 S:'$G(FLD) FLD=21661.813
"RTN","LR7OAPKM",231,0)
 D WP^DIE(FIL,IEN,FLD,"ARRAY","ERR")
"RTN","LR7OAPKM",232,0)
 Q
"RTN","LR7OAPKM",233,0)
TESTAP1 ;
"RTN","LR7OAPKM",234,0)
 ;Load LRAP1 data  ^LRO(69,3151201,1,1,0)
"RTN","LR7OAPKM",235,0)
 D ^XUP S LRCNT=7,LRAP1="AP1|2827||CY|||124",ORIFN=2827
"RTN","LR7OAPKM",236,0)
 K ^TMP("LRAP1",$J)
"RTN","LR7OAPKM",237,0)
 Q
"RTN","LR7OAPKM",238,0)
ASKORDER ;
"RTN","LR7OAPKM",239,0)
 N DIR,DIRUT
"RTN","LR7OAPKM",240,0)
 W !!
"RTN","LR7OAPKM",241,0)
 S DIR("A")="Order Number: ",DIR(0)="FOA"
"RTN","LR7OAPKM",242,0)
 S DIR("?",1)="Enter a whole number for the order number."
"RTN","LR7OAPKM",243,0)
 S DIR("?")="Enter '^' to Exit."
"RTN","LR7OAPKM",244,0)
 D ^DIR I $D(DIRUT) W !!,"OUT",!
"RTN","LR7OAPKM",245,0)
 I Y="" Q
"RTN","LR7OAPKM",246,0)
 W !,Y S LRORD=Y
"RTN","LR7OAPKM",247,0)
 S LRODT=+$O(^LRO(69,"C",LRORD,0))
"RTN","LR7OAPKM",248,0)
 S LRSN=+$O(^LRO(69,"C",LRORD,LRODT,0))
"RTN","LR7OAPKM",249,0)
 I 'LRSN W !!,"INVALID ORDER NUMBER" G ASKORDER
"RTN","LR7OAPKM",250,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) S LRDFN=+^(0)
"RTN","LR7OAPKM",251,0)
 D PT^LRX
"RTN","LR7OAPKM",252,0)
 W @IOF D ORDER^LROS
"RTN","LR7OAPKM",253,0)
 Q
"RTN","LR7OAPKM",254,0)
SETUP0 ;
"RTN","LR7OAPKM",255,0)
 Q:$G(^XTMP("LRAP1",0))
"RTN","LR7OAPKM",256,0)
 S ^XTMP("LRAP1",0)=$$FMADD^XLFDT(DT+180)_U_DT_U_"CPRS AP ORDER MESSAGE LOG"
"RTN","LR7OAPKM",257,0)
 S ^XTMP("LRAP1",1,0)=10
"RTN","LR7OAPKM",258,0)
 Q
"RTN","LR7OAPMG")
0^38^B59502319^n/a
"RTN","LR7OAPMG",1,0)
LR7OAPMG ;DSS/FHS - INBOUND CPRS MESSAGE HANDLER ;09/16/16  09:46
"RTN","LR7OAPMG",2,0)
 ;;5.2;LAB SERVICE;**462**;Sep 27, 1994;Build 44
"RTN","LR7OAPMG",3,0)
 ;OBSOLETE - MOVED TO LR7OAPKM
"RTN","LR7OAPMG",4,0)
 Q
"RTN","LR7OAPMG",5,0)
AP1(MSG,LRAP1) ;Entry point to process CPRS AP orders
"RTN","LR7OAPMG",6,0)
 ;In put
"RTN","LR7OAPMG",7,0)
 ; MSG=CPRS HL7 MESSAGE ARRAY
"RTN","LR7OAPMG",8,0)
 ; LRAP1="AP1|2827||CY|||124"
"RTN","LR7OAPMG",9,0)
 ; AP1|ORIFN||TEST SUBSCRIPT|||AP Screen IEN
"RTN","LR7OAPMG",10,0)
 ; AP Screen IEN pointer to ^LAB(69.71
"RTN","LR7OAPMG",11,0)
 N LRCNT
"RTN","LR7OAPMG",12,0)
 S LRCNT=+$G(^XTMP("LRAP1",1,0))+1,$P(^XTMP("LRAP1",1,0),U)=LRCNT
"RTN","LR7OAPMG",13,0)
 S ^XTMP("LRAP1",1,LRCNT,.01)=$G(ORIFN)_U_$G(LRDFN)
"RTN","LR7OAPMG",14,0)
 S ^XTMP("LRAP1",1,LRCNT,.02)=LRAP1
"RTN","LR7OAPMG",15,0)
 S ^XTMP("LRAP1","B",+$G(ORIFN),LRCNT)=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","LR7OAPMG",16,0)
 S ^XTMP("LRAP1","C",+$G(LRDFN),LRCNT)=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","LR7OAPMG",17,0)
 M ^XTMP("LRAP1",1,LRCNT)=MSG
"RTN","LR7OAPMG",18,0)
 D AP1LOAD
"RTN","LR7OAPMG",19,0)
 S $P(^XTMP("LRAP1",0),U)=$$FMADD^XLFDT(DT,180)
"RTN","LR7OAPMG",20,0)
 Q
"RTN","LR7OAPMG",21,0)
 ;
"RTN","LR7OAPMG",22,0)
AP1LOAD ;Call ZTLOAD with LRCNT value
"RTN","LR7OAPMG",23,0)
 N ZTIO,ZTRTN,ZTDTH,ZTDESC,ZTSAVE
"RTN","LR7OAPMG",24,0)
 S ZTSAVE("ORIFN")="",ZTSAVE("LRAP1")="",ZTSAVE("DUZ*")=""
"RTN","LR7OAPMG",25,0)
 S ZTSAVE("LRCNT")="",ZTIO="",ZTDTH=$H,ZTDESC="LR PROCESS CPRS AP ORDER MESSAGE"
"RTN","LR7OAPMG",26,0)
 S ZTRTN="TASKAP1^LR7OAPMG"
"RTN","LR7OAPMG",27,0)
 D ^%ZTLOAD
"RTN","LR7OAPMG",28,0)
 Q
"RTN","LR7OAPMG",29,0)
TASKAP1 ;Entry point for TASK
"RTN","LR7OAPMG",30,0)
 ;Pass LRCNT from ^XTMP("LRAP1",
"RTN","LR7OAPMG",31,0)
 ;
"RTN","LR7OAPMG",32,0)
 K ^TMP("LRAOE",$J)
"RTN","LR7OAPMG",33,0)
 N DATA,IEN,IENX,IENXX,ID,FDA,LRCOM,LRCOL,LRCOLROOT,LRDFN,LRFIELD,LRFILE
"RTN","LR7OAPMG",34,0)
 N LRDFN,LRGLOB,LRHEAD,LRDUZ
"RTN","LR7OAPMG",35,0)
 N LRID,LRJ,LRODT,LRORD,LRQS,LRREF,LRSAMP,LRSCR
"RTN","LR7OAPMG",36,0)
 N LRSN,LRSP,LRSPCOM,LRSPDATA,LRSPROOT,LRXSS,LRTXT,VAL,X,Y,LRSPCOMROOT,TMP
"RTN","LR7OAPMG",37,0)
 S:$G(LRCNT) $P(^XTMP("LRAP1",1,0),U,2)=LRCNT
"RTN","LR7OAPMG",38,0)
 S ORIFN=$P(LRAP1,"|",2),LRXSS=$P(LRAP1,"|",4),LRSCR=+$P(LRAP1,"|",7),LRJ=$J
"RTN","LR7OAPMG",39,0)
 M LRDUZ=DUZ
"RTN","LR7OAPMG",40,0)
 S LRREF=$$GET1^DIQ(100,ORIFN_",",33,"I","","ERR")
"RTN","LR7OAPMG",41,0)
 S LRORD=+LRREF,LRODT=$P(LRREF,";",2),LRSN=$P(LRREF,";",3)
"RTN","LR7OAPMG",42,0)
 D GETSPEC(ORIFN,.LRSPDATA)
"RTN","LR7OAPMG",43,0)
 D APSP69(LRODT,LRSN,.LRSPDATA)
"RTN","LR7OAPMG",44,0)
 S VAL=$$ID(ORIFN)
"RTN","LR7OAPMG",45,0)
 Q:'$G(VAL)
"RTN","LR7OAPMG",46,0)
 D LOADIAG(LRODT,LRSN,.TMP)
"RTN","LR7OAPMG",47,0)
 ;
"RTN","LR7OAPMG",48,0)
 S:$G(LRCNT) $P(^XTMP("LRAP1",1,0),U,3)=LRCNT
"RTN","LR7OAPMG",49,0)
 K ORIFN,LRAP1,LRCNT
"RTN","LR7OAPMG",50,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LR7OAPMG",51,0)
 Q
"RTN","LR7OAPMG",52,0)
 Q
"RTN","LR7OAPMG",53,0)
GETSPEC(ORIFN,RET) ;Retrieve Spec Description/Specimen/Sample
"RTN","LR7OAPMG",54,0)
         ;IN = CPRS ORIFN #   ^OR(100,ORIFN
"RTN","LR7OAPMG",55,0)
         ;RET = Return array ID
"RTN","LR7OAPMG",56,0)
         ;OUT = RET(INSTANCE,"NAME")=VALUE
"RTN","LR7OAPMG",57,0)
         ;
"RTN","LR7OAPMG",58,0)
         N IEN,LRX,INST,VAL,VAL1,X,Y
"RTN","LR7OAPMG",59,0)
         S (VAL,RET)="",INST=1
"RTN","LR7OAPMG",60,0)
         I '$G(^OR(100,ORIFN,.1,1,0)) S RET=0 Q RET
"RTN","LR7OAPMG",61,0)
         ;Specimen Description
"RTN","LR7OAPMG",62,0)
         S IEN=0 F  S IEN=$O(^OR(100,ORIFN,4.5,"ID","SPECDESC",IEN)) Q:IEN<1  D
"RTN","LR7OAPMG",63,0)
         . S VAL=^OR(100,ORIFN,4.5,IEN,0),INST=$P(VAL,U,3),VAL1=^(1)
"RTN","LR7OAPMG",64,0)
         . S LRX(INST,"DES")=VAL1
"RTN","LR7OAPMG",65,0)
         S IEN(1)=0 F  S IEN(1)=$O(^OR(100,ORIFN,4.5,"ID","SPECIMEN",IEN(1))) Q:IEN(1)<1  D
"RTN","LR7OAPMG",66,0)
         . S VAL=^OR(100,ORIFN,4.5,IEN(1),0),INST=$P(VAL,U,3),VAL(1)=^(1)
"RTN","LR7OAPMG",67,0)
         . S LRX(INST,"SPEC")=VAL(1)
"RTN","LR7OAPMG",68,0)
         S IEN(2)=0 F  S IEN(2)=$O(^OR(100,ORIFN,4.5,"ID","SAMPLE",IEN(2))) Q:IEN(2)<1  D
"RTN","LR7OAPMG",69,0)
         . S VAL=^OR(100,ORIFN,4.5,IEN(2),0),INST=$P(VAL,U,3),VAL1=^(1)
"RTN","LR7OAPMG",70,0)
         . S LRX(INST,"SAM")=VAL1
"RTN","LR7OAPMG",71,0)
         M RET=LRX
"RTN","LR7OAPMG",72,0)
         Q
"RTN","LR7OAPMG",73,0)
ZAPLOOK(LRAOE) ; Pointer Lookup into a multiple
"RTN","LR7OAPMG",74,0)
 K DIC,DA,Y,X
"RTN","LR7OAPMG",75,0)
 S DIC="^LAB(69.71,"_LRAOE_",4,",DA=LRAOE,DA(1)=21661
"RTN","LR7OAPMG",76,0)
 S DIC(0)="AQEZNM" D ^DIC
"RTN","LR7OAPMG",77,0)
 Q
"RTN","LR7OAPMG",78,0)
DD ;Get the Data Dictionary values
"RTN","LR7OAPMG",79,0)
 S LRTXT="" F  S LRTXT=$O(LRID(LRTXT)) Q:LRTXT=""  D
"RTN","LR7OAPMG",80,0)
 . S IENX=$O(^LAB(69.71,LRSCR,4,"B",LRTXT,0))
"RTN","LR7OAPMG",81,0)
 . S LRID(LRTXT)=^LAB(69.71,LRSCR,4,IENX,0)
"RTN","LR7OAPMG",82,0)
 Q
"RTN","LR7OAPMG",83,0)
ID(ORIFN) ;This is the entry point to extract CPRS user response for at CPRS AP Window
"RTN","LR7OAPMG",84,0)
 ;INPUT  ORIFN=Pointer to ^OR(100,ORIFN
"RTN","LR7OAPMG",85,0)
 ;       LRSCR=Pointer to ^LAB(69.71,LRSCR
"RTN","LR7OAPMG",86,0)
 ;OUTPUT TMP("??"
"RTN","LR7OAPMG",87,0)
 ;Return 1 if valid
"RTN","LR7OAPMG",88,0)
 ;       0^error text
"RTN","LR7OAPMG",89,0)
 ;
"RTN","LR7OAPMG",90,0)
 K IEN,IENX,ID,XXY,LRID,TMP
"RTN","LR7OAPMG",91,0)
 I '$G(^OR(100,ORIFN,0)) Q 0_"^File 100 entry does not exist"
"RTN","LR7OAPMG",92,0)
 ;I '$D(^LAB(69.71,LRSCR,0)) Q 0_"^File 69.71,"_LRSCR_" entry does not exist"
"RTN","LR7OAPMG",93,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","CLINHX",0))
"RTN","LR7OAPMG",94,0)
 I ID M TMP("CL")=^OR(100,ORIFN,4.5,ID,2) K TMP("CL",0)
"RTN","LR7OAPMG",95,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","OPFIND",0))
"RTN","LR7OAPMG",96,0)
 I ID M TMP("OP")=^OR(100,ORIFN,4.5,ID,2) K TMP("OP",0)
"RTN","LR7OAPMG",97,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","POSTOPDX",0))
"RTN","LR7OAPMG",98,0)
 I ID M TMP("PO")=^OR(100,ORIFN,4.5,ID,2) K TMP("PO",0)
"RTN","LR7OAPMG",99,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","PREOPDX",0))
"RTN","LR7OAPMG",100,0)
 I ID M TMP("PR")=^OR(100,ORIFN,4.5,ID,2) K TMP("PR",0)
"RTN","LR7OAPMG",101,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","SPCSUBMIT",0))
"RTN","LR7OAPMG",102,0)
 I ID S TMP("SUB")=^OR(100,ORIFN,4.5,ID,1)
"RTN","LR7OAPMG",103,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","SURGPROV",0))
"RTN","LR7OAPMG",104,0)
 I ID S TMP("SURG")=^OR(100,ORIFN,4.5,ID,1)
"RTN","LR7OAPMG",105,0)
 S ID=$O(^OR(100,ORIFN,4.5,"ID","SURGCASE",0))
"RTN","LR7OAPMG",106,0)
 I ID S TMP("SURGCASE")=^OR(100,ORIFN,4.5,ID,1)
"RTN","LR7OAPMG",107,0)
 Q 1
"RTN","LR7OAPMG",108,0)
 ;
"RTN","LR7OAPMG",109,0)
ORITEM(ORIFN) ;Return the ^LAB(60,IEN orderable item for an CPRS Order
"RTN","LR7OAPMG",110,0)
 ;
"RTN","LR7OAPMG",111,0)
 N IEN,VAL,RET,ANS,X,Y
"RTN","LR7OAPMG",112,0)
 S:ORIFN="" ORIFN=1582
"RTN","LR7OAPMG",113,0)
 S IEN="1,"_ORIFN_",",RET=0
"RTN","LR7OAPMG",114,0)
 S VAL=$$GET1^DIQ(100.001,IEN,.01,"I",.ANS,"ERR")
"RTN","LR7OAPMG",115,0)
 I VAL="" Q RET
"RTN","LR7OAPMG",116,0)
 I '$D(^ORD(101.43,VAL,"LR")) Q 0
"RTN","LR7OAPMG",117,0)
 K ERR S VAL(2)=$$GET1^DIQ(101.43,VAL_",",".01","I",.ANS,"ERR")
"RTN","LR7OAPMG",118,0)
 S RET=$O(^LAB(60,"B",VAL(2),0))
"RTN","LR7OAPMG",119,0)
 Q +$G(RET)
"RTN","LR7OAPMG",120,0)
 ;
"RTN","LR7OAPMG",121,0)
APSP69(LRODT,LRSN,LRSPDATA) ;Load AOE Specimen/Sample into ^LRO(69,DT,1,LRSN,
"RTN","LR7OAPMG",122,0)
    ; INPUT  SPDATA(X)=LRSP^LRCOL
"RTN","LR7OAPMG",123,0)
 ;
"RTN","LR7OAPMG",124,0)
69 ; Load LRAPDATA(INSTANCE,"NAME") into ^LRO(69,LRODT,1,LRSN
"RTN","LR7OAPMG",125,0)
 ;
"RTN","LR7OAPMG",126,0)
 N FDA,IEN,IENX,ERR,ERR1,ERR2,WPIEN68,NODE,ANS,ANSY,LRSP,LRCOL
"RTN","LR7OAPMG",127,0)
 N LRJ,LRNODE
"RTN","LR7OAPMG",128,0)
 ;
"RTN","LR7OAPMG",129,0)
 S IEN="+1,1,"_LRSN_","_LRODT_",",LRJ=$J
"RTN","LR7OAPMG",130,0)
 S IENX=0 F  S IENX=$O(LRSPDATA(IENX)) Q:IENX<1  D
"RTN","LR7OAPMG",131,0)
 . S LRSPCOM=LRSPDATA(IENX,"DES")
"RTN","LR7OAPMG",132,0)
 . S LRSP=LRSPDATA(IENX,"SPEC")
"RTN","LR7OAPMG",133,0)
 . S LRSAMP=LRSPDATA(IENX,"SAM")
"RTN","LR7OAPMG",134,0)
 . K FDA,ERR1,ANS
"RTN","LR7OAPMG",135,0)
 . S FDA(2,69.221661,IEN,.01)=LRSPCOM ;Specimen Description
"RTN","LR7OAPMG",136,0)
 . S FDA(2,69.221661,IEN,.06)=LRSP ;Specimen  ^LAB(61,LRSP
"RTN","LR7OAPMG",137,0)
 . S FDA(2,69.221661,IEN,.07)=LRSAMP ; Collection Sample ^LAB(62,LRCOL
"RTN","LR7OAPMG",138,0)
 . D UPDATE^DIE("KS","FDA(2)","","ERR1")
"RTN","LR7OAPMG",139,0)
 . I $D(ERR1) W !,IENX_" &&&"
"RTN","LR7OAPMG",140,0)
 Q
"RTN","LR7OAPMG",141,0)
 ;
"RTN","LR7OAPMG",142,0)
LOOK(LRTST,LRSPEC,RET) ;Find CPRS SCREEN pointer
"RTN","LR7OAPMG",143,0)
 ;  LROUT(TEST,AP)=CPRS Screen #
"RTN","LR7OAPMG",144,0)
 ;AP = Pointer to ^LAB(69.71
"RTN","LR7OAPMG",145,0)
 ;LRTST=POINTER TO ^LAB(60,
"RTN","LR7OAPMG",146,0)
 ;LRSPEC= POINTER TO ^LAB(61,  Only required for non-panel test
"RTN","LR7OAPMG",147,0)
 ;RET = values returned in the variable. If not pasted values return in the VAL(#) Array
"RTN","LR7OAPMG",148,0)
 ;OUTPUT
"RTN","LR7OAPMG",149,0)
 ;Look at the test level defined CPRS Screen first
"RTN","LR7OAPMG",150,0)
 ;If no test level defined CPRS Screen -
"RTN","LR7OAPMG",151,0)
 ;   then look at the test-specimen level assigned CPRS Screen.
"RTN","LR7OAPMG",152,0)
 ;RET(AP#)=""  Where AP# = Pointer to ^LAB(69.71 file
"RTN","LR7OAPMG",153,0)
 ;RET="" If no AOE screens defined (null result)
"RTN","LR7OAPMG",154,0)
 N IEN,IENX,VAL
"RTN","LR7OAPMG",155,0)
 K RET S RET="",(IENX,IEN)=0,VAL=""
"RTN","LR7OAPMG",156,0)
 I '$D(^LAB(60,+$G(LRTST),0)) S RET="" Q 0
"RTN","LR7OAPMG",157,0)
 ;Look for panel test CPRS Screen
"RTN","LR7OAPMG",158,0)
 I $P(^LAB(60,+$G(LRTST),0),U,5)="" D  M RET=VAL Q IENX
"RTN","LR7OAPMG",159,0)
 . F  S IEN=$O(^LAB(60,"AV1",+$G(LRTST),IEN)) Q:IEN<1  D
"RTN","LR7OAPMG",160,0)
 . . S VAL(IEN)=$P(^LAB(69.71,IEN,0),U),IENX=1
"RTN","LR7OAPMG",161,0)
 ;Look in the specimen mulitple
"RTN","LR7OAPMG",162,0)
 I '$G(IENX) F  S IEN=$O(^LAB(60,+$G(LRTST),1,+$G(LRSPEC),21661,"B",IEN)) Q:IEN<1  D
"RTN","LR7OAPMG",163,0)
 . S VAL(IEN)=$P(^LAB(69.71,IEN,0),U),IENX=1
"RTN","LR7OAPMG",164,0)
 M RET=VAL
"RTN","LR7OAPMG",165,0)
 Q IENX
"RTN","LR7OAPMG",166,0)
 ;
"RTN","LR7OAPMG",167,0)
 ;
"RTN","LR7OAPMG",168,0)
LOADIAG(LRODT,LRSN,LRDATA) ;Load CPRS Dialog into ^LRO(69
"RTN","LR7OAPMG",169,0)
 K ERR,FDA
"RTN","LR7OAPMG",170,0)
 S IEN=LRSN_","_LRODT_","
"RTN","LR7OAPMG",171,0)
 I $O(TMP("CL",0)) D WP^DIE(69.01,IEN,21661.813,"","TMP(""CL"")","ERR") ;CLINICHX
"RTN","LR7OAPMG",172,0)
 I $O(TMP("PR",0)) D WP^DIE(69.01,IEN,21661.814,"","TMP(""PR"")","ERR") ;PRE-OPERATIVE
"RTN","LR7OAPMG",173,0)
 I $O(TMP("OP",0)) D WP^DIE(69.01,IEN,21661.815,"","TMP(""OP"")","ERR") ;OPERATIVE FINDINGS
"RTN","LR7OAPMG",174,0)
 I $O(TMP("PO",0)) D WP^DIE(69.01,IEN,21661.816,"","TMP(""PO"")","ERR") ;POST-OP
"RTN","LR7OAPMG",175,0)
 S:$G(TMP("SUB"))'="" FDA(2,69.01,IEN,21661.811)=TMP("SUB") ;SUBMITTER
"RTN","LR7OAPMG",176,0)
 S FDA(2,69.01,IEN,21661.71)="["_LRXSS_"]" ;Accession Ares subscript
"RTN","LR7OAPMG",177,0)
 S FDA(2,69.01,IEN,21661.72)=LRSCR ;CPRS Screen IEN pointer
"RTN","LR7OAPMG",178,0)
 I $G(TMP("SURG")) S FDA(2,69.01,IEN,21661.73)=TMP("SURG") ;SURGEON/PROVIDER
"RTN","LR7OAPMG",179,0)
 I $G(TMP("SURGCASE")) S FDA(2.69.01,IEN,21661.74)=TMP("SURGCASE") ;SURGERY CASE #
"RTN","LR7OAPMG",180,0)
 D UPDATE^DIE("KS","FDA(2)","","ERR")
"RTN","LR7OAPMG",181,0)
 Q
"RTN","LR7OAPMG",182,0)
 ;
"RTN","LR7OAPMG",183,0)
DIAG(LRORD,LRSN)  ;Retrieve CPRS ORDER DIAGNOSIS DATA FROM ^LRO(69,LRODT,1,LRSN
"RTN","LR7OAPMG",184,0)
 ;IN = CPRS ORIFN #   ^OR(100,ORIFN
"RTN","LR7OAPMG",185,0)
 ;RET = Return array ID
"RTN","LR7OAPMG",186,0)
 ;OUT = RET Array
"RTN","LR7OAPMG",187,0)
 ;
"RTN","LR7OAPMG",188,0)
BH ;
"RTN","LR7OAPMG",189,0)
 K ANS,X,Y,ERR,FIL,FLD
"RTN","LR7OAPMG",190,0)
 S RET="",FIL=69.01,FLD=21661.813,IEN=LRSN_","_LRORD_","
"RTN","LR7OAPMG",191,0)
 S X=$$GET1^DIQ(69.01,IEN,21661.813,"Z","TMP(""CL"")","ERR") ;BRIEF CLINICAL HISTORY
"RTN","LR7OAPMG",192,0)
 ;
"RTN","LR7OAPMG",193,0)
PO S X=$$GET1^DIQ(69.01,IEN,21661.814,"Z","TMP(""PR"")","ERR") ; PREOPERATIVE DIAGNOSIS
"RTN","LR7OAPMG",194,0)
 ;
"RTN","LR7OAPMG",195,0)
OF S X=$$GET1^DIQ(69.01,IEN,21661.815,"Z","TMP(""OP"")","ERR") ; OPERATIVE FINGINGS
"RTN","LR7OAPMG",196,0)
 ;
"RTN","LR7OAPMG",197,0)
PD S X=$$GET1^DIQ(69.01,IEN,21661.816,"Z","TMP(""PO"")","ERR") ; POSTOPERATIVE DIAGNOSIS
"RTN","LR7OAPMG",198,0)
 ;
"RTN","LR7OAPMG",199,0)
 W !!
"RTN","LR7OAPMG",200,0)
 Q
"RTN","LR7OAPMG",201,0)
ORDATA(ORIFN,LRVAL) ;Get data from CPRS Dialog fields
"RTN","LR7OAPMG",202,0)
 K ANS,X,Y,ERR,FIL,FLD
"RTN","LR7OAPMG",203,0)
 S LRVAL="",FIL=100.045,FLD=2
"RTN","LR7OAPMG",204,0)
 F VAL=9:1:12 S IEN=VAL_","_ORIFN_"," D
"RTN","LR7OAPMG",205,0)
 . S X=$$GET1^DIQ(100.045,IEN,FLD,"","ANS("_VAL_")","ERR")
"RTN","LR7OAPMG",206,0)
 M LRVAL=ANS
"RTN","LR7OAPMG",207,0)
 ;ZW ANS
"RTN","LR7OAPMG",208,0)
 Q
"RTN","LR7OAPMG",209,0)
FILDIA(LRODT,LRSN,FLD,ARRAY) ;File CPRS AP Dialog into ^LRO(69,LRODT,1,LRSN
"RTN","LR7OAPMG",210,0)
 K ANS,X,Y,ERR,IEN,FDA
"RTN","LR7OAPMG",211,0)
 S IEN=LRSN_","_LRODT_","
"RTN","LR7OAPMG",212,0)
 S FIL=69.01 S:'$G(FLD) FLD=21661.813
"RTN","LR7OAPMG",213,0)
 D WP^DIE(FIL,IEN,FLD,"ARRAY","ERR")
"RTN","LR7OAPMG",214,0)
 Q
"RTN","LR7OAPMG",215,0)
TESTAP1 ;
"RTN","LR7OAPMG",216,0)
 ;Load LRAP1 data  ^LRO(69,3151201,1,1,0)
"RTN","LR7OAPMG",217,0)
 D ^XUP S LRCNT=7,LRAP1="AP1|2827||CY|||124",ORIFN=2827
"RTN","LR7OAPMG",218,0)
 K ^TMP("LRAP1",$J)
"RTN","LR7OAPMG",219,0)
 Q
"RTN","LR7OAPMG",220,0)
ASKORDER ;
"RTN","LR7OAPMG",221,0)
 N DIR,DIRUT
"RTN","LR7OAPMG",222,0)
 W !!
"RTN","LR7OAPMG",223,0)
 S DIR("A")="Order Number: ",DIR(0)="FOA"
"RTN","LR7OAPMG",224,0)
 S DIR("?",1)="Enter a whole number for the order number."
"RTN","LR7OAPMG",225,0)
 S DIR("?")="Enter '^' to Exit."
"RTN","LR7OAPMG",226,0)
 D ^DIR I $D(DIRUT) W !!,"OUT",!
"RTN","LR7OAPMG",227,0)
 I Y="" Q
"RTN","LR7OAPMG",228,0)
 W !,Y S LRORD=Y
"RTN","LR7OAPMG",229,0)
 S LRODT=+$O(^LRO(69,"C",LRORD,0))
"RTN","LR7OAPMG",230,0)
 S LRSN=+$O(^LRO(69,"C",LRORD,LRODT,0))
"RTN","LR7OAPMG",231,0)
 I 'LRSN W !!,"INVALID ORDER NUMBER" G ASKORDER
"RTN","LR7OAPMG",232,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) S LRDFN=+^(0)
"RTN","LR7OAPMG",233,0)
 D PT^LRX
"RTN","LR7OAPMG",234,0)
 W @IOF D ORDER^LROS
"RTN","LR7OAPMG",235,0)
 Q
"RTN","LR7OB3")
0^28^B27184019^B24033857
"RTN","LR7OB3",1,0)
LR7OB3 ;DALOI/DCM/JAH - Build message, backdoor from Lab order # ;08/10/16  13:20
"RTN","LR7OB3",2,0)
 ;;5.2;LAB SERVICE;**121,187,272,291,462**;Sep 27, 1994;Build 44
"RTN","LR7OB3",3,0)
69 K ^TMP("LRX",$J)
"RTN","LR7OB3",4,0)
 D 69^LR7OB69(ODT,SN) Q:'$D(^TMP("LRX",$J,69))  G OUT:'$D(DFN) D:LRFIRST FIRST^LR7OB0 S LRFIRST=0
"RTN","LR7OB3",5,0)
SNEAK ;
"RTN","LR7OB3",6,0)
 N Y,Y9,Y10,Y11,GRP,L1,L2,L3,END
"RTN","LR7OB3",7,0)
 S IFN=0 F  S IFN=$O(^TMP("LRX",$J,69,IFN)) Q:IFN<1  S (COBR,COBX)=0 D
"RTN","LR7OB3",8,0)
 . I $O(^TMP("LRX",$J,69,IFN,68,0)) S Z=^TMP("LRX",$J,69,IFN,68) D  Q
"RTN","LR7OB3",9,0)
 .. S IFN1=0 F  S IFN1=$O(^TMP("LRX",$J,69,IFN,68,IFN1)) Q:IFN1<1  S Z1=^TMP("LRX",$J,69,IFN,68,IFN1) D
"RTN","LR7OB3",10,0)
 ... S (Y9,Y10,Y11)="" I $P($G(^LAB(60,+Z1,64)),"^") S Y9=$P(^(64),"^"),Y10=$P(^LAM(Y9,0),"^"),Y9=$P(^(0),"^",2),Y11="99NLT"
"RTN","LR7OB3",11,0)
 ... S X1=$$UVID^LR7OU0($P(Z1,"^"),$P(^TMP("LRX",$J,69),"^",10),Y9,Y11,Y10,.MSG,$G(SS))
"RTN","LR7OB3",12,0)
 ... S X2=$$HL7DT^LR7OU0($P(Z,"^",4)) ;Obs Start date
"RTN","LR7OB3",13,0)
 ... S X3=$$ACTCODE^LR7OU0($P(^TMP("LRX",$J,69),"^",4)) ;Specimen Act Code
"RTN","LR7OB3",14,0)
 ... S X4=$$HL7DT^LR7OU0($P(Z,"^",5)) ;Specimen Received D/T
"RTN","LR7OB3",15,0)
 ... S X5=$$SAMP^LR7OU0($P(^TMP("LRX",$J,69),"^",3),$P(^TMP("LRX",$J,69),"^",10)) ;Specimen Source
"RTN","LR7OB3",16,0)
 ... S X6=$P(Z,"^",3) ;Filler Fld 1 (Accession)
"RTN","LR7OB3",17,0)
 ... S X7=$$HL7DT^LR7OU0($P(Z,"^",6)) ;Results rpt/Sts Change D/T
"RTN","LR7OB3",18,0)
 ... S (GRP,END)=0
"RTN","LR7OB3",19,0)
 ... I '$G(CORRECT),$P(Z,"^",6) S GRP=1
"RTN","LR7OB3",20,0)
 ... S X8=$S($G(CORRECT):"C",$P(Z,"^",6):$S(GRP:"F",1:"I"),$P(Z,"^",5):"I",1:"O") ;Result Status
"RTN","LR7OB3",21,0)
 ... D AX8
"RTN","LR7OB3",22,0)
 ... S X10=$P(^TMP("LRX",$J,69),"^",7),$P(@MSG@(3),"|",4)=X10 ;Routing Location
"RTN","LR7OB3",23,0)
 ... S X9="^^^^^"_$$URG^LR7OU0($P(^TMP("LRX",$J,69,IFN),"^",2))
"RTN","LR7OB3",24,0)
 ... I $O(LINK(0)) S CTR=CTR+1 D NTE^LR7OU01(2,"L","LINK(",CTR) K LINK
"RTN","LR7OB3",25,0)
 ... I $O(^TMP("LRX",$J,69,IFN,"NC",0)) S CTR=CTR+1 D NTE^LR7OU01("","L","^TMP(""LRX"",$J,69,"_IFN_",""NC"",",CTR)
"RTN","LR7OB3",26,0)
 ... I CONTROL'="SN" S CTR=CTR+1 D NTE^LR7OU01("","P","^TMP(""LRX"",$J,69,"_IFN_",""N"",",CTR)
"RTN","LR7OB3",27,0)
 ... I CONTROL'="SN" S CTR=CTR+1 D NTE^LR7OU01("","P","^TMP(""LRX"",$J,69,""N"",",CTR)
"RTN","LR7OB3",28,0)
 ... S CTR=CTR+1,COBR=COBR+1,OBRMSG=CTR D OBR^LR7OU01(CTR)
"RTN","LR7OB3",29,0)
 ... S CTR=CTR+1 D SDG1^LRBEBA2(IFN,.CTR,.MSG)
"RTN","LR7OB3",30,0)
 ... I CONTROL="SN" S CTR=CTR+1 D NTE^LR7OU01("","P","^TMP(""LRX"",$J,69,"_IFN_",""N"",",CTR)
"RTN","LR7OB3",31,0)
 ... I CONTROL="SN" S CTR=CTR+1 D NTE^LR7OU01("","P","^TMP(""LRX"",$J,69,""N"",",CTR)
"RTN","LR7OB3",32,0)
 .. S IFN1=0 F  S IFN1=$O(^TMP("LRX",$J,69,IFN,63,IFN1)) Q:IFN1<1  S Z1=^TMP("LRX",$J,69,IFN,63,IFN1) D
"RTN","LR7OB3",33,0)
 ... S X1=$S($L($P(Z1,"^",8)):$P(Z1,"^",8),1:"ST") ;Value type
"RTN","LR7OB3",34,0)
 ... S X2=$$UVID^LR7OU0($P(Z1,"^"),$P(^TMP("LRX",$J,69),"^",10),$P(Z1,"^",9),$P(Z1,"^",11),$P(Z1,"^",10),.MSG,$G(SS))
"RTN","LR7OB3",35,0)
 ... S X3=$P(Z1,"^",7) ;Obs SubID
"RTN","LR7OB3",36,0)
 ... S X4=$P(Z1,"^",2) S:$L($P(Z1,"^",9))&(MSG["LRAP") X4=$P(Z1,"^",9)_"^"_$P(Z1,"^",2)_"^"_$P(Z1,"^",10) ;Value
"RTN","LR7OB3",37,0)
 ... S X5=$P(Z1,"^",4) ;Units
"RTN","LR7OB3",38,0)
 ... S X6=$P(Z1,"^",5) ;Ref Ranges
"RTN","LR7OB3",39,0)
 ... S X7=$$FLAG^LR7OU0($P(Z1,"^",3)) ;Flag
"RTN","LR7OB3",40,0)
 ... S (GRP,END)=0
"RTN","LR7OB3",41,0)
 ... I '$G(CORRECT),$P(Z1,"^",6)="F"!($P(Z,"^",6)) S GRP=1
"RTN","LR7OB3",42,0)
 ... S X8=$S($G(CORRECT):"C",$P(Z1,"^",6)="F"!($P(Z,"^",6)):$S(GRP:"F",1:"I"),$L($P(Z1,"^",6)):$S($P(Z1,"^",6)'="F":$P(Z1,"^",6),1:"R"),1:"R")
"RTN","LR7OB3",43,0)
 ... S $P(@MSG@(OBRMSG),"|",26)=X8 ;Result Status
"RTN","LR7OB3",44,0)
 ... I @MSG@(OBRMSG)'?.E1"|",$O(@MSG@(OBRMSG,0))]"" S @MSG@(OBRMSG)=@MSG@(OBRMSG)_"|" ;RLM
"RTN","LR7OB3",45,0)
 ... D AX8
"RTN","LR7OB3",46,0)
 ... I $L($P(Z1,"^",18)) S X=$P(@MSG@(ORCMSG),"|",4),Y=$P(X,"^",2),X=$P(X,"^")_$P(Z1,"^",18) S $P(@MSG@(ORCMSG),"|",4)=X_"^"_Y ;Append 63 ptr to placer ID
"RTN","LR7OB3",47,0)
 ... I "SPCYEM"[$P($G(X),";",4)&($L($P(X,";",5))) S $P(@MSG@(ORCMSG),"|",4)=X_"^LRAP"  ;;* added to correct result update to CPRS where the package reference was not being updated properly for AP results
"RTN","LR7OB3",48,0)
 ... ; X=ORD#;LRODT;LRSN;LRSS;LRIDT, indirect set of ^TMP("LRAP",$J
"RTN","LR7OB3",49,0)
 ... S X10=$P(Z1,"^",14) ;Theraputic flag
"RTN","LR7OB3",50,0)
 ... S X11=$P(Z1,"^",12) ;Verified by
"RTN","LR7OB3",51,0)
 ... S CTR=CTR+1,COBX=COBX+1 D OBX^LR7OU01(CTR)
"RTN","LR7OB3",52,0)
 .. I $O(^TMP("LRX",$J,69,IFN,63,0)),$O(^("N",0)) S CTR=CTR+1 D NTE^LR7OU01("","L","^TMP(""LRX"",$J,69,"_IFN_",63,""N"",",CTR)
"RTN","LR7OB3",53,0)
 . S Z=$G(^TMP("LRX",$J,69,IFN))
"RTN","LR7OB3",54,0)
 . S (Y9,Y10,Y11)="" I $P($G(^LAB(60,+Z,64)),"^") S Y9=$P(^(64),"^"),Y10=$P(^LAM(Y9,0),"^"),Y9=$P(^(0),"^",2),Y11="99NLT"
"RTN","LR7OB3",55,0)
 . S X1=$$UVID^LR7OU0($P(Z,"^"),$P(^TMP("LRX",$J,69),"^",10),Y9,Y11,Y10,.MSG,$G(SS))
"RTN","LR7OB3",56,0)
 . S X2="" ;Obs Start date
"RTN","LR7OB3",57,0)
 . S X3=$$ACTCODE^LR7OU0($P(^TMP("LRX",$J,69),"^",4)) ;Specimen Action Code
"RTN","LR7OB3",58,0)
 . S X4="" ;Specimen Received D/T
"RTN","LR7OB3",59,0)
 . S X5=$$SAMP^LR7OU0($P(^TMP("LRX",$J,69),"^",3),$P(^TMP("LRX",$J,69),"^",10)) ;Specimen Source
"RTN","LR7OB3",60,0)
 . S X6="" ;Filler Fld 1 (Accession)
"RTN","LR7OB3",61,0)
 . S X7="" ;Results rpt/Sts change D/T
"RTN","LR7OB3",62,0)
 . S X8="O"
"RTN","LR7OB3",63,0)
 . I $G(CONTROL)="RE",$P(Z,"^",8) S X8=$S($G(CORRECT):"C",1:"F"),$P(@MSG@(ORCMSG),"|",6)="CM" ;Status
"RTN","LR7OB3",64,0)
 . S X10=$P(^TMP("LRX",$J,69),"^",7),$P(@MSG@(3),"|",4)=X10 ;Routing Location
"RTN","LR7OB3",65,0)
 . S X9="^^^^^"_$$URG^LR7OU0($P($G(^TMP("LRX",$J,69,IFN)),"^",2))
"RTN","LR7OB3",66,0)
 . I $O(LINK(0)) S CTR=CTR+1 D NTE^LR7OU01(2,"L","LINK(",CTR) K LINK
"RTN","LR7OB3",67,0)
 . I $O(^TMP("LRX",$J,69,IFN,"NC",0)) S CTR=CTR+1 D NTE^LR7OU01("","L","^TMP(""LRX"",$J,69,"_IFN_",""NC"",",CTR)
"RTN","LR7OB3",68,0)
 . I CONTROL'="SN" S CTR=CTR+1 D NTE^LR7OU01("","P","^TMP(""LRX"",$J,69,"_IFN_",""N"",",CTR)
"RTN","LR7OB3",69,0)
 . I CONTROL'="SN" S CTR=CTR+1 D NTE^LR7OU01("","P","^TMP(""LRX"",$J,69,""N"",",CTR)
"RTN","LR7OB3",70,0)
 . S CTR=CTR+1,COBR=COBR+1,OBRMSG=CTR D OBR^LR7OU01(CTR)
"RTN","LR7OB3",71,0)
 . S CTR=CTR+1 D SDG1^LRBEBA2(IFN,.CTR,.MSG)
"RTN","LR7OB3",72,0)
 . I CONTROL="SN" S CTR=CTR+1 D NTE^LR7OU01("","P","^TMP(""LRX"",$J,69,""N"",",CTR)
"RTN","LR7OB3",73,0)
 . I CONTROL="SN" S CTR=CTR+1 D NTE^LR7OU01("","P","^TMP(""LRX"",$J,69,"_IFN_",""N"",",CTR)
"RTN","LR7OB3",74,0)
OUT ;Exit here
"RTN","LR7OB3",75,0)
 K ^TMP("LRX",$J)
"RTN","LR7OB3",76,0)
 Q
"RTN","LR7OB3",77,0)
AX8 ;Modify order status based on result status
"RTN","LR7OB3",78,0)
 I X8="F"!(X8="C")!($G(LRSTATI)=2) S $P(@MSG@(ORCMSG),"|",6)="CM" Q  ;Order Status
"RTN","LR7OB3",79,0)
 I X8="I" S $P(@MSG@(ORCMSG),"|",6)="SC"
"RTN","LR7OB3",80,0)
 Q
"RTN","LR7OF0")
0^8^B41838489^B40209802
"RTN","LR7OF0",1,0)
LR7OF0 ;slc/dcm/JAH - Receive/Route MSG array from OE/RR ;07/14/16  19:59
"RTN","LR7OF0",2,0)
 ;;5.2;LAB SERVICE;**121,187,223,230,256,291,462**;Sep 27, 1994;Build 44
"RTN","LR7OF0",3,0)
 ;
"RTN","LR7OF0",4,0)
 ;This routine invokes IA #2187
"RTN","LR7OF0",5,0)
 ;
"RTN","LR7OF0",6,0)
EN(MSG,MSGTYPE) ;Route all messages from here
"RTN","LR7OF0",7,0)
 ;MSG=HL7 message array
"RTN","LR7OF0",8,0)
 ;MSGTYPE=LRCH for chem (default), LRAP for AP
"RTN","LR7OF0",9,0)
 N X,VISIT,LOC,LOCP,ROOM,DFN,LRPNM,LRXMSG,TEST,TESTN,TYPE,SAMP,SPEC,URG,ORIFN,STARTDT,LRDUZ,PROV,REASON,LRSX,LRLLOC,LROLLOC,LRPRAC,LROUTINE,LRSDT,LRXZ,LRODT,LRSAMP,LRSPEC,LRORDR,LRLB,LRNT,LRSX,LROT,LRCOM,LRI,LRIO,LRJ,LRORD,QUANT
"RTN","LR7OF0",10,0)
 N LOCA,LINE,LRHDR,LRORDER,LRORIFN,LRSN,LRSUM,LRSXN,LRTIME,LRTSTS,LRURG,LRSDT,LREND,LRXTYPE,LRXORC,LRDFN,LRDPF,LRPLACR,LRQUANT,LRVERZ,NOBR,NORC
"RTN","LR7OF0",11,0)
 S (NOBR,NORC)=1 ;flag to check for OBR, ORC segments
"RTN","LR7OF0",12,0)
 D END
"RTN","LR7OF0",13,0)
 S LRI=2,LRXORC="ORC"
"RTN","LR7OF0",14,0)
 F  S LRI=$O(MSG(LRI)) Q:LRI<1  S X=MSG(LRI) I $P(MSG(LRI),"|")="ORC" S LRXORC=MSG(LRI),NORC=0 Q
"RTN","LR7OF0",15,0)
 S LRHDR=$$HDRCHK($G(MSG(1)))
"RTN","LR7OF0",16,0)
 Q:'$L(LRHDR)
"RTN","LR7OF0",17,0)
 I '$$PIDCHK($G(MSG(2))) Q
"RTN","LR7OF0",18,0)
 I LRHDR="BHS" K ^TMP("OR",$J,"LRES")  Q  ;Initialization to begin batch
"RTN","LR7OF0",19,0)
 I LRHDR="BTS" D  Q  ;Clean-up to end batch
"RTN","LR7OF0",20,0)
 . D LC
"RTN","LR7OF0",21,0)
 . K ^TMP("OR",$J,"LRES")
"RTN","LR7OF0",22,0)
 S LINE=2,LRSX=0,LREND=0 F  S LINE=$O(MSG(LINE)) Q:LINE<1  S LRXMSG=MSG(LINE) D:$O(MSG(LINE,0)) SPLIT D  I LREND Q
"RTN","LR7OF0",23,0)
 . I $P(LRXMSG,"|")="PV1" S VISIT=$P(LRXMSG,"|",19),LOC=$P($P(LRXMSG,"|",4),"^"),ROOM=$P($P(LRXMSG,"|",4),"^",2),LOCP=LOC,LOCA=$S(LOCP:$P(^SC(LOCP,0),"^",2),1:"") Q
"RTN","LR7OF0",24,0)
 . I $P(LRXMSG,"|")="ORC" S NORC=0,LRXTYPE=$P(LRXMSG,"|",2),LRXORC=LRXMSG I LRXTYPE="NW" D NEW^LR7OF2 Q  ;New order, from OE/RR
"RTN","LR7OF0",25,0)
 . I $P(LRXMSG,"|")="ORC",LRXTYPE="CA" Q  ; D CANC^LR7OF2 S LREND=1 Q  ;Cancel order, from OE/RR
"RTN","LR7OF0",26,0)
 . I $P(LRXMSG,"|")="OBR" S NOBR=0 I LRXTYPE="CA" D CANC^LR7OF2 Q  ;Cancel tests identified in OBR segment
"RTN","LR7OF0",27,0)
 . I $P(LRXMSG,"|")="ORC",LRXTYPE="Z@" D PURG1^LR7OF4 S LREND=1 Q  ;Purge request-weird
"RTN","LR7OF0",28,0)
 . I $P(LRXMSG,"|")="OBR",LRXTYPE="Z@" D PURG^LR7OF4 S LREND=1 Q  ;Purge request
"RTN","LR7OF0",29,0)
 . I $P(LRXMSG,"|")="ORC",LRXTYPE="XO" D XO^LR7OF2 Q  ;Change order
"RTN","LR7OF0",30,0)
 . I $P(LRXMSG,"|")="ORC",LRXTYPE="NA" D NUM^LR7OF2 Q  ;Backdoor new order, request order number
"RTN","LR7OF0",31,0)
 . I $P(LRXMSG,"|")="ORC" S X="Unrecognized order control: "_LRXTYPE D ACK("DE",LRXORC,X) Q
"RTN","LR7OF0",32,0)
 . I $P(LRXMSG,"|")="OBR",LRXTYPE="NA" D NA^LR7OF2 Q  ;Backdoor assign ORIFN to test
"RTN","LR7OF0",33,0)
 . I $P(LRXMSG,"|")="OBR",LRXTYPE="NW" D OBR^LR7OF3 Q
"RTN","LR7OF0",34,0)
 . I $P(LRXMSG,"|")="OBR",LRXTYPE="XO" D OBR^LR7OF3 Q
"RTN","LR7OF0",35,0)
 . I $P(LRXMSG,"|")="DG1" D DG1^LRBEBA2(LRXMSG) Q    ; CIDC
"RTN","LR7OF0",36,0)
 . I $P(LRXMSG,"|")="ZCL" D ZCL^LRBEBA2(LRXMSG) Q    ; CIDC
"RTN","LR7OF0",37,0)
 . I $P(LRXMSG,"|")="NTE" D NTE^LR7OF2 Q  ;Order comments
"RTN","LR7OF0",38,0)
 . ;;*
"RTN","LR7OF0",39,0)
 . ;
"RTN","LR7OF0",40,0)
 . I $P(LRXMSG,"|")="AP1" S VAL=MSG(LINE) D AP1^LR7OAPKM(.MSG,VAL) Q  ;Call to get CPRS AP Order data
"RTN","LR7OF0",41,0)
 . ;;;*
"RTN","LR7OF0",42,0)
 . D ACK("DE",LRXORC,"Unrecognized Message segment: "_$P(LRXMSG,"|")) Q
"RTN","LR7OF0",43,0)
 I LREND S LREND=0 D END Q
"RTN","LR7OF0",44,0)
 I NORC D ACK("OC",LRXORC,"Incomplete transaction...no ORC segment in message!") D END Q
"RTN","LR7OF0",45,0)
 I NOBR D ACK("OC",LRXORC,"Incomplete transaction...no OBR segment in message") D END Q
"RTN","LR7OF0",46,0)
 I LRXTYPE="NW" D  ;Process new order request
"RTN","LR7OF0",47,0)
 . N REJECT
"RTN","LR7OF0",48,0)
 . S LROLLOC=LOCP,LRLLOC=$S($L($G(LOCA)):LOCA,1:"UNKNOWN"),LRPRAC=PROV,LROUTINE=$P(^LAB(69.9,1,3),"^",2)
"RTN","LR7OF0",49,0)
 . I $D(^TMP("OR",$J,"LROT")) S LRSDT=0 D
"RTN","LR7OF0",50,0)
 .. F  S LRSDT=$O(^TMP("OR",$J,"LROT",LRSDT)) Q:LRSDT<1  S LRXZ="" F LRI=0:0 S LRXZ=$O(^TMP("OR",$J,"LROT",LRSDT,LRXZ)) Q:LRXZ=""  S LRODT=$P(LRSDT,".") D
"RTN","LR7OF0",51,0)
 ... I $G(MSGTYPE)="LRAP" D EN^LR7OFA1 Q
"RTN","LR7OF0",52,0)
 ... D EN^LR7OF1
"RTN","LR7OF0",53,0)
 . D END,ACK("OK","ORC|OK|"_LRPLACR_"|"_LRORD_";"_LRODT_";"_LRSN_"^"_$S($G(MSG)="BBMSG":"LRBB",$G(MSG)="APMSG":"LRAP",1:"LRCH"),"")
"RTN","LR7OF0",54,0)
 Q
"RTN","LR7OF0",55,0)
HDRCHK(HDR) ;Check & return message Header (BHS,MSH,BTS)
"RTN","LR7OF0",56,0)
 I '$L(HDR) D ACK("DE",LRXORC,"No Message Header Defined") Q ""
"RTN","LR7OF0",57,0)
 I $P(HDR,"|")="BTS" Q "BTS"
"RTN","LR7OF0",58,0)
 I $P(HDR,"|")'="BHS",$P(HDR,"|")'="MSH" D ACK("DE",LRXORC,"Invalid Message Header: "_$P(HDR,"|")) Q ""
"RTN","LR7OF0",59,0)
 I $P(HDR,"|",2)'="^~\&" D ACK("DE",LRXORC,"Invalid Encoding Characters: "_$P(HDR,"|",2)) Q ""
"RTN","LR7OF0",60,0)
 I $P(HDR,"|",3)'="ORDER ENTRY" D ACK("DE",LRXORC,"Unrecognized message source: "_$P(HDR,"|",3)) Q ""
"RTN","LR7OF0",61,0)
 I $P(HDR,"|",4)'=DUZ(2) D ACK("DE",LRXORC,"DUZ(2) doesn't match institution in message: "_DUZ(2)_"'="_$P(HDR,"|",4)) Q ""
"RTN","LR7OF0",62,0)
 I $P(HDR,"|")="MSH",$P(HDR,"|",9)'="ORM"&($P(HDR,"|",9)'="ORR") D ACK("DE",LRXORC,"Unrecognized Message type: "_$P(HDR,"|",9)) Q ""
"RTN","LR7OF0",63,0)
 Q $P(HDR,"|")
"RTN","LR7OF0",64,0)
 ;
"RTN","LR7OF0",65,0)
PIDCHK(PID) ;Check PID & setup patient variables (DFN,LRDPF,LRDFN,LRPNM)
"RTN","LR7OF0",66,0)
 I '$L(PID) D ACK("DE",LRXORC,"No Patient ID in message") Q 0
"RTN","LR7OF0",67,0)
 I $P(PID,"|")'="PID" D ACK("DE",LRXORC,"Invalid (PID) message header: "_$P(X,"|")) Q 0
"RTN","LR7OF0",68,0)
 I '$L($P(PID,"|",6)) D ACK("DE",LRXORC,"No Patient Name") Q 0
"RTN","LR7OF0",69,0)
 S DFN=$S($P(PID,"|",4):$P(PID,"|",4),1:+$P(PID,"|",5)),LRDPF=$S($P(PID,"|",4):"2^DPT(",1:$P(@("^"_$P($P(PID,"|",5),";",2)_"0)"),"^",2)_"^"_$P($P(PID,"|",5),";",2)),LRPNM=$P(PID,"|",6),LRDFN=$$LRDFN^LR7OR1(+DFN,$P(LRDPF,"^",2))
"RTN","LR7OF0",70,0)
 I 'LRDFN D END^LRDPA I LRDFN<1 D ACK("DE",LRXORC,"Invalid LRDFN") Q 0
"RTN","LR7OF0",71,0)
 I '$D(@("^"_$P(LRDPF,"^",2)_+DFN_",0)")) D ACK("DE",LRXORC,"Patient identifier: "_LRDFN_" not found in "_LRDPF_" file") Q 0
"RTN","LR7OF0",72,0)
 Q 1
"RTN","LR7OF0",73,0)
 ;
"RTN","LR7OF0",74,0)
LC ;Print to LC Lab device
"RTN","LR7OF0",75,0)
 N LRSDT,LRXZ,CTR,LRODT,LRSN,LRPTR
"RTN","LR7OF0",76,0)
 S LRSDT=0
"RTN","LR7OF0",77,0)
 F  S LRSDT=$O(^TMP("OR",$J,"LRES",LRDFN,LRSDT)) Q:'LRSDT  S LRXZ="" F  S LRXZ=$O(^TMP("OR",$J,"LRES",LRDFN,LRSDT,LRXZ)) Q:LRXZ=""  D
"RTN","LR7OF0",78,0)
 . S CTR=0 F  S CTR=$O(^TMP("OR",$J,"LRES",LRDFN,LRSDT,LRXZ,CTR)) Q:'CTR  S X=^(CTR) D
"RTN","LR7OF0",79,0)
 .. S LRPTR(LRXZ,$P(X,"^",2),$P(X,"^",3))=""
"RTN","LR7OF0",80,0)
 S LRODT=0 F  S LRODT=$O(LRPTR("LC",LRODT)) Q:'LRODT  S LRSN=0 F  S LRSN=$O(LRPTR("LC",LRODT,LRSN)) Q:'LRSN  D
"RTN","LR7OF0",81,0)
 . S ION=$P($G(^LAB(69.9,1,3.5,+DUZ(2),0)),U,2) S:ION="" ION=$P(^LAB(69.9,1,3),U,4) I ION]"" D ^LROW2P
"RTN","LR7OF0",82,0)
 S LRODT=0 F  S LRODT=$O(LRPTR("I",LRODT)) Q:'LRODT  S LRSN=0 F  S LRSN=$O(LRPTR("I",LRODT,LRSN)) Q:'LRSN  D
"RTN","LR7OF0",83,0)
 . S ION=$P($G(^LAB(69.9,1,7,DUZ(2),0)),U,3) I ION]"" D ^LROW2P
"RTN","LR7OF0",84,0)
 Q
"RTN","LR7OF0",85,0)
ACK(TYPE,MSG3,COMMENT) ;Send back ok or nok to OE/RR
"RTN","LR7OF0",86,0)
 ;TYPE=Message control
"RTN","LR7OF0",87,0)
 ;COMMENT=Comment to be passed back
"RTN","LR7OF0",88,0)
 ;MSG3=contents of MSG(3) containing the ORC segment
"RTN","LR7OF0",89,0)
 N LRMSG,ARRAY,X8,VAR
"RTN","LR7OF0",90,0)
 I TYPE="DE" S VAR("XQY0")="" D EN^ORERR("BAD msg xchng OE/RR->LAB:"_$G(COMMENT),.MSG,.VAR) S:$P($G(MSG3),"|",2)="NW" TYPE="OC" ;Trap problem message and send back to OE/RR as an OC type
"RTN","LR7OF0",91,0)
 S LRMSG(1)=$$MSH^LR7OU0("ORR")
"RTN","LR7OF0",92,0)
 S LRMSG(2)=$G(MSG(2))
"RTN","LR7OF0",93,0)
 S LRMSG(3)=$G(MSG3),$P(LRMSG(3),"|",2)=TYPE
"RTN","LR7OF0",94,0)
 I $O(REJECT(0)),$O(^ORD(100.03,"C","LRDUP",0)) S X8=$$DC1^LROR6($O(^(0)),"Already ordered for this specimen, type and time"),$P(LRMSG(3),"|",2)="OC",$P(LRMSG(3),"|",4)="",$P(LRMSG(3),"|",17)=X8
"RTN","LR7OF0",95,0)
 I $D(COMMENT) N MSG S MSG="LRMSG",ARRAY(1)=COMMENT D NTE^LR7OU01(1,"L","ARRAY(",4)
"RTN","LR7OF0",96,0)
 S LRMSG="LRMSG"
"RTN","LR7OF0",97,0)
 D MSG^XQOR("LR7O CH EVSEND OR",.LRMSG) ;Lab accepts, returns Order #
"RTN","LR7OF0",98,0)
 Q
"RTN","LR7OF0",99,0)
SPLIT ;Build array for long segment
"RTN","LR7OF0",100,0)
 N I
"RTN","LR7OF0",101,0)
 S I=0 F  S I=$O(MSG(LINE,I)) Q:I<1  S LRXMSG(I)=MSG(LINE,I)
"RTN","LR7OF0",102,0)
 Q
"RTN","LR7OF0",103,0)
END ;Clean-up and get out
"RTN","LR7OF0",104,0)
 K ^TMP("OR",$J,"LROT"),^("COM")
"RTN","LR7OF0",105,0)
 Q
"RTN","LR7OFAO")
0^4^B54432906^B37973467
"RTN","LR7OFAO",1,0)
LR7OFAO ;DALOI/JMC - Setup file 69 for AP orders ;07/14/16  20:00
"RTN","LR7OFAO",2,0)
 ;;5.2;LAB SERVICE;**121,350,450,462**;Sep 27, 1994;Build 44
"RTN","LR7OFAO",3,0)
 ;
"RTN","LR7OFAO",4,0)
 ;File 44/10040
"RTN","LR7OFAO",5,0)
 ;
"RTN","LR7OFAO",6,0)
 Q
"RTN","LR7OFAO",7,0)
 ;
"RTN","LR7OFAO",8,0)
EN(LRODT,LRDFN,LRSAMP,LRORDR,LRNT,LRPRAC,LRLLOC,LRSDT,ORIFN,LRSPEC,LRSS,LRTST,LRUID,LRRECINF) ; Called from LDSI^LRAPLG1
"RTN","LR7OFAO",9,0)
 ; LRODT=Order date
"RTN","LR7OFAO",10,0)
 ; LRDFN=Patient Lab ID
"RTN","LR7OFAO",11,0)
 ; LRSAMP=Sample ptr to 62
"RTN","LR7OFAO",12,0)
 ; LRORDR=Collection type
"RTN","LR7OFAO",13,0)
 ; LRNT=d/t Ordered
"RTN","LR7OFAO",14,0)
 ; LRSDT=Start date
"RTN","LR7OFAO",15,0)
 ; ORIFN=OE/RR #
"RTN","LR7OFAO",16,0)
 ; LRSPEC=Specimen ptr to 61
"RTN","LR7OFAO",17,0)
 ; LRSS=Test subscript
"RTN","LR7OFAO",18,0)
 ; LRTST=Ordered test
"RTN","LR7OFAO",19,0)
 ; LRUID=UID
"RTN","LR7OFAO",20,0)
 ; LRRECINF:<byref> Output  Array that holds the record numbers created.
"RTN","LR7OFAO",21,0)
 ;
"RTN","LR7OFAO",22,0)
 N X,Y,LRIENLOC,LRQUIET,LRSN,LRSUM,LRIENLOC,LRLCK1,LRSTOP
"RTN","LR7OFAO",23,0)
 N LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",24,0)
 S LRQUIET=1 D ORDER^LROW2
"RTN","LR7OFAO",25,0)
 ; Make sure top level of File 69 is set up and cross referenced
"RTN","LR7OFAO",26,0)
 K DIERR,LRFDAIEN,LRMSG,LRRECINF
"RTN","LR7OFAO",27,0)
 S LRSTOP=0
"RTN","LR7OFAO",28,0)
 S LRLCK1=$NA(^LRO(69,LRODT))
"RTN","LR7OFAO",29,0)
 I '$D(^LRO(69,LRODT)) D  ;
"RTN","LR7OFAO",30,0)
 . S X=$$GETLOCK^LRUTIL(LRLCK1,360)
"RTN","LR7OFAO",31,0)
 . I 'X D  Q  ;
"RTN","LR7OFAO",32,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",33,0)
 . . N MSG
"RTN","LR7OFAO",34,0)
 . . S MSG(1)="The Lab Order Entry File # 69 is in use.",MSG(1,"F")="!!"
"RTN","LR7OFAO",35,0)
 . . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",36,0)
 . . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",37,0)
 . ;
"RTN","LR7OFAO",38,0)
 . S (LRFDAIEN(1),LRRECINF(69))=LRODT
"RTN","LR7OFAO",39,0)
 . S LRFDA(1,69,"+1,",.01)=LRODT
"RTN","LR7OFAO",40,0)
 . D UPDATE^DIE("S","LRFDA(1)","LRFDAIEN","LRMSG")
"RTN","LR7OFAO",41,0)
 . I $D(LRMSG) S LRSTOP=1 D ERRMSG(.LRMSG)
"RTN","LR7OFAO",42,0)
 ;
"RTN","LR7OFAO",43,0)
 L -@LRLCK1 ;unlock top level and proceed
"RTN","LR7OFAO",44,0)
 I 'LRSTOP D ZSN("",.LRRECINF)
"RTN","LR7OFAO",45,0)
 Q
"RTN","LR7OFAO",46,0)
 ;
"RTN","LR7OFAO",47,0)
 ;
"RTN","LR7OFAO",48,0)
ZSN(LRSN,LRRECINF) ;
"RTN","LR7OFAO",49,0)
 ; Create new LRSN entry for specimen
"RTN","LR7OFAO",50,0)
 ; Expects LRODT,LRDFN,LRAA,LRAD,LRAN
"RTN","LR7OFAO",51,0)
 ; Inputs
"RTN","LR7OFAO",52,0)
 ;   LRSN: <byref><opt> Output only. See Outputs below.
"RTN","LR7OFAO",53,0)
 ;   LRRECINF:<byref>  See Outputs
"RTN","LR7OFAO",54,0)
 ; Outputs
"RTN","LR7OFAO",55,0)
 ;   The LRSN array passed in byref is used to return the
"RTN","LR7OFAO",56,0)
 ;   new LRSN value (record #)
"RTN","LR7OFAO",57,0)
 ;   LRRECINF: Holds the IENs the API created.  LRRECINF(69), LRRECINF(69.01), LRRECINF(69.03)
"RTN","LR7OFAO",58,0)
 ;
"RTN","LR7OFAO",59,0)
 N LRDATA,LRLCK1,LRLCK2,LRSTOP,X,Y,R6903
"RTN","LR7OFAO",60,0)
 N IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",61,0)
 S LRSN=0
"RTN","LR7OFAO",62,0)
 S LRSTOP=0
"RTN","LR7OFAO",63,0)
 S LRLCK1=$NA(^LRO(69,LRODT,1)) ;lock SPECIMEN subfile
"RTN","LR7OFAO",64,0)
 S X=$$GETLOCK^LRUTIL(LRLCK1,360)
"RTN","LR7OFAO",65,0)
 I 'X D  Q  ;
"RTN","LR7OFAO",66,0)
 . N MSG
"RTN","LR7OFAO",67,0)
 . S MSG(1)="Could not lock SPECIMEN subfile.",MSG(1,"F")="!!"
"RTN","LR7OFAO",68,0)
 . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",69,0)
 . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",70,0)
 ;
"RTN","LR7OFAO",71,0)
 S IEN="+1,"_LRODT_","
"RTN","LR7OFAO",72,0)
 S LRFDA(2,69.01,IEN,.01)=LRDFN
"RTN","LR7OFAO",73,0)
 D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRMSG")
"RTN","LR7OFAO",74,0)
 I $D(LRMSG) D  ;
"RTN","LR7OFAO",75,0)
 . S LRSTOP=1
"RTN","LR7OFAO",76,0)
 . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",77,0)
 ;
"RTN","LR7OFAO",78,0)
 L -@LRLCK1  ;unlock SPECIMEN whole file
"RTN","LR7OFAO",79,0)
 S (LRSN,LRRECINF(69.01))=$G(LRFDAIEN(1))
"RTN","LR7OFAO",80,0)
 I LRSTOP Q
"RTN","LR7OFAO",81,0)
 I 'LRSN D  Q  ;
"RTN","LR7OFAO",82,0)
 . N MSG
"RTN","LR7OFAO",83,0)
 . S MSG(1)="Failed to create new SPECIMEN entry in file #69.",MSG(1,"F")="!!"
"RTN","LR7OFAO",84,0)
 . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",85,0)
 . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",86,0)
 ;
"RTN","LR7OFAO",87,0)
 ; lock new SPECIMEN record just created
"RTN","LR7OFAO",88,0)
 S LRLCK1=$NA(^LRO(69,LRODT,1,LRSN))
"RTN","LR7OFAO",89,0)
 S X=$$GETLOCK^LRUTIL(LRLCK1,360)
"RTN","LR7OFAO",90,0)
 I 'X D  Q  ;
"RTN","LR7OFAO",91,0)
 . N MSG
"RTN","LR7OFAO",92,0)
 . S MSG(1)="Could not lock new SPECIMEN entry "_LRSN_" in file #69.",MSG(1,"F")="!!"
"RTN","LR7OFAO",93,0)
 . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",94,0)
 . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",95,0)
 ;
"RTN","LR7OFAO",96,0)
 ; Make sure Hospital Location has a value
"RTN","LR7OFAO",97,0)
 I $G(LRLLOC)="" S LRLLOC="UNK"
"RTN","LR7OFAO",98,0)
 K LRDATA,LRMSG,DIERR
"RTN","LR7OFAO",99,0)
 ; File 44/10040
"RTN","LR7OFAO",100,0)
 D FIND^DIC(44,"","@","BOX",LRLLOC,"","B^","","","LRDATA","LRMSG")
"RTN","LR7OFAO",101,0)
 S LRIENLOC=""
"RTN","LR7OFAO",102,0)
 S X=$O(LRDATA("DILIST",2,0))
"RTN","LR7OFAO",103,0)
 I X S LRIENLOC=$G(LRDATA("DILIST",2,X))
"RTN","LR7OFAO",104,0)
 I 'LRIENLOC S LRLLOC="UNK"
"RTN","LR7OFAO",105,0)
 ;
"RTN","LR7OFAO",106,0)
 ; Set entries into File 69.01
"RTN","LR7OFAO",107,0)
 K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",108,0)
 S IEN=LRSN_","_LRODT_","
"RTN","LR7OFAO",109,0)
 S LRFDA(3,69.01,IEN,9.5)=LRORD
"RTN","LR7OFAO",110,0)
 S LRFDA(3,69.01,IEN,1)=DUZ
"RTN","LR7OFAO",111,0)
 S LRFDA(3,69.01,IEN,3)=LRSAMP
"RTN","LR7OFAO",112,0)
 S LRFDA(3,69.01,IEN,4)=LRORDR
"RTN","LR7OFAO",113,0)
 S LRFDA(3,69.01,IEN,5)=LRNT
"RTN","LR7OFAO",114,0)
 S LRFDA(3,69.01,IEN,7)=LRPRAC
"RTN","LR7OFAO",115,0)
 S LRFDA(3,69.01,IEN,8)=LRLLOC
"RTN","LR7OFAO",116,0)
 S LRFDA(3,69.01,IEN,5.5)=LRSDT
"RTN","LR7OFAO",117,0)
 S LRFDA(3,69.01,IEN,23)=LRIENLOC
"RTN","LR7OFAO",118,0)
 S LRFDA(3,69.01,IEN,.11)=ORIFN
"RTN","LR7OFAO",119,0)
 S LRFDA(3,69.01,IEN,10)=LRSDT
"RTN","LR7OFAO",120,0)
 I $G(LRSRDT) S LRFDA(3,69.01,IEN,20)=LRSRDT
"RTN","LR7OFAO",121,0)
 S LRFDA(3,69.01,IEN,12)=DUZ
"RTN","LR7OFAO",122,0)
 S LRFDA(3,69.01,IEN,13)="C"
"RTN","LR7OFAO",123,0)
 S LRFDA(3,69.01,IEN,25)=DUZ(2)
"RTN","LR7OFAO",124,0)
 D FILE^DIE("","LRFDA(3)","LRMSG")
"RTN","LR7OFAO",125,0)
 I $D(LRMSG) D  ;
"RTN","LR7OFAO",126,0)
 . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",127,0)
 . S LRSTOP=1
"RTN","LR7OFAO",128,0)
 ;
"RTN","LR7OFAO",129,0)
 ; node usually set in #69.01 fld 8's Input Transform
"RTN","LR7OFAO",130,0)
 ; using FILE^DIE with external data causes a READ (from 9.2 DD node)
"RTN","LR7OFAO",131,0)
 I 'LRSTOP S ^LR(+LRDFN,.1)=LRLLOC
"RTN","LR7OFAO",132,0)
 ;
"RTN","LR7OFAO",133,0)
 I 'LRSTOP D  ;
"RTN","LR7OFAO",134,0)
 . ; Set File #61 pointer in #69.02
"RTN","LR7OFAO",135,0)
 . ;DSS/FHS - MOD TO CAPTURE THE LRODT,LRSN,LRSPEC VALUE FOR SPECIMEN MULTIPLE UPDATE
"RTN","LR7OFAO",136,0)
 . ;;LRAPLGX Flag set in LRAPLG Routine
"RTN","LR7OFAO",137,0)
 . N IEN,LRFDA,LRMSG,DIERR
"RTN","LR7OFAO",138,0)
 . ; Set top node for 69.02 - set a single specimen entry
"RTN","LR7OFAO",139,0)
 . I '$G(LRAPLGX) D
"RTN","LR7OFAO",140,0)
 . . S IEN="?+1,"_LRSN_","_LRODT_","
"RTN","LR7OFAO",141,0)
 . . S LRFDA(5,69.02,IEN,.01)=LRSPEC
"RTN","LR7OFAO",142,0)
 . . D UPDATE^DIE("","LRFDA(5)","","LRMSG")
"RTN","LR7OFAO",143,0)
 . . I $D(LRMSG) D  ;
"RTN","LR7OFAO",144,0)
 . . . S LRSTOP=1
"RTN","LR7OFAO",145,0)
 . . . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",146,0)
 . ;;*
"RTN","LR7OFAO",147,0)
 . I '$G(LRSTOP),$G(LRAPLGX) N IEN,IEN63,LRMSG,LRNODE,LRSPEC D
"RTN","LR7OFAO",148,0)
 . . S IEN63=0 F  S IEN63=+$O(^LR(LRDFN,LRSS,LRIDT,.1,IEN63)) Q:IEN63<1!($G(LRSTOP))  S LRNODE=^(IEN63,0) D
"RTN","LR7OFAO",149,0)
 . . . S LRSPEC=+$P(LRNODE,U,6) Q:'LRSPEC
"RTN","LR7OFAO",150,0)
 . . . K LRFDA,IEN
"RTN","LR7OFAO",151,0)
 . . . S IEN="+1,"_LRSN_","_LRODT_","
"RTN","LR7OFAO",152,0)
 . . . S LRFDA(5,69.02,IEN,.01)=LRSPEC ; Set Specimen Multiple
"RTN","LR7OFAO",153,0)
 . . . S LRFDA(5,69.02,IEN,.02)=IEN63 ;Set instance of the specimen
"RTN","LR7OFAO",154,0)
 . . . S LRFDA(5,69.02,IEN,1)=$P(LRNODE,U) ;Specimen Description
"RTN","LR7OFAO",155,0)
 . . . S LRFDA(5,69.02,IEN,2)=$P(LRNODE,U,7) ;Collection Sample
"RTN","LR7OFAO",156,0)
 . . . D UPDATE^DIE("","LRFDA(5)","","LRMSG")
"RTN","LR7OFAO",157,0)
 . . . I $D(LRMSG) D
"RTN","LR7OFAO",158,0)
 . . . . S LRSTOP=1
"RTN","LR7OFAO",159,0)
 . . . . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",160,0)
 . ;;;*
"RTN","LR7OFAO",161,0)
 ;
"RTN","LR7OFAO",162,0)
 I 'LRSTOP D  ;
"RTN","LR7OFAO",163,0)
 . ; Set data into File 68.02
"RTN","LR7OFAO",164,0)
 . S LRLCK2=$NA(^LRO(68,1,LRAA,1,LRAD,1,LRAN))
"RTN","LR7OFAO",165,0)
 . S X=$$GETLOCK^LRUTIL(LRLCK2,360)
"RTN","LR7OFAO",166,0)
 . I 'X D  Q  ;
"RTN","LR7OFAO",167,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",168,0)
 . . N MSG
"RTN","LR7OFAO",169,0)
 . . S MSG(1)="Could not lock ACCESSION NUMBER entry "_LRAN_" in file #68.02.",MSG(1,"F")="!!"
"RTN","LR7OFAO",170,0)
 . . S MSG(2)="Please try to file this accession again."
"RTN","LR7OFAO",171,0)
 . . D EN^DDIOL(.MSG)
"RTN","LR7OFAO",172,0)
 . ;
"RTN","LR7OFAO",173,0)
 . K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",174,0)
 . S IEN=LRAN_","_LRAD_","_LRAA_","
"RTN","LR7OFAO",175,0)
 . S LRFDA(4,68.02,IEN,3)=LRODT
"RTN","LR7OFAO",176,0)
 . S LRFDA(4,68.02,IEN,4)=LRSN
"RTN","LR7OFAO",177,0)
 . S LRFDA(4,68.02,IEN,14)=LRORD
"RTN","LR7OFAO",178,0)
 . D FILE^DIE("","LRFDA(4)","LRMSG")
"RTN","LR7OFAO",179,0)
 . I $D(LRMSG) D  ;
"RTN","LR7OFAO",180,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",181,0)
 . . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",182,0)
 . ;
"RTN","LR7OFAO",183,0)
 ;
"RTN","LR7OFAO",184,0)
 ; Set test in file 69
"RTN","LR7OFAO",185,0)
 ; Set top node for 69.03
"RTN","LR7OFAO",186,0)
 ; Already have lock (#69.01 is parent)
"RTN","LR7OFAO",187,0)
 S R6903=0
"RTN","LR7OFAO",188,0)
 I 'LRSTOP D  ;
"RTN","LR7OFAO",189,0)
 . K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",190,0)
 . S IEN="?+1,"_LRSN_","_LRODT_","
"RTN","LR7OFAO",191,0)
 . S LRFDA(6,69.03,IEN,.01)=LRTST
"RTN","LR7OFAO",192,0)
 . I $G(LROUTINE) S LRFDA(6,69.03,IEN,1)=LROUTINE
"RTN","LR7OFAO",193,0)
 . S LRFDA(6,69.03,IEN,2)=LRAD
"RTN","LR7OFAO",194,0)
 . S LRFDA(6,69.03,IEN,3)=LRAA
"RTN","LR7OFAO",195,0)
 . S LRFDA(6,69.03,IEN,4)=LRAN
"RTN","LR7OFAO",196,0)
 . S LRFDA(6,69.03,IEN,13)=LRUID
"RTN","LR7OFAO",197,0)
 . ;*
"RTN","LR7OFAO",198,0)
 . S LRFDA(6,69.03,IEN,8)="IP" ;STATUS [IN PROCESS]
"RTN","LR7OFAO",199,0)
 . S LRFDA(6,69.03,IEN,9)="L" ;ORIGIN OF ORDER [LAB]
"RTN","LR7OFAO",200,0)
 . ;;*
"RTN","LR7OFAO",201,0)
 . D UPDATE^DIE("","LRFDA(6)","LRFDAIEN","LRMSG")
"RTN","LR7OFAO",202,0)
 . I $D(LRMSG) D ERRMSG(.LRMSG) Q
"RTN","LR7OFAO",203,0)
 . S (R6903,LRRECINF(69.03))=$G(LRFDAIEN(1))
"RTN","LR7OFAO",204,0)
 . I 'R6903 D  ;
"RTN","LR7OFAO",205,0)
 . . S LRSTOP=1
"RTN","LR7OFAO",206,0)
 . . N MSG
"RTN","LR7OFAO",207,0)
 . . S MSG(1)="Could not create new #69.03 entry."
"RTN","LR7OFAO",208,0)
 . . D ERRMSG()
"RTN","LR7OFAO",209,0)
 . ;
"RTN","LR7OFAO",210,0)
 ;
"RTN","LR7OFAO",211,0)
 ; File test in #68.04
"RTN","LR7OFAO",212,0)
 ;I 'LRSTOP D  ;
"RTN","LR7OFAO",213,0)
 ;. K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LR7OFAO",214,0)
 ;. ; Already have lock (#68.02 is parent)
"RTN","LR7OFAO",215,0)
 ;. S IEN="?+1,"_LRAN_","_LRAD_","_LRAA_","
"RTN","LR7OFAO",216,0)
 ;. S LRFDA(71,68.04,IEN,.01)=LRTST
"RTN","LR7OFAO",217,0)
 ;. D UPDATE^DIE("","LRFDA(71)","","LRMSG")
"RTN","LR7OFAO",218,0)
 ;. I $D(LRMSG) D  ;
"RTN","LR7OFAO",219,0)
 ;. . S LRSTOP=1
"RTN","LR7OFAO",220,0)
 ;. . D ERRMSG(.LRMSG)
"RTN","LR7OFAO",221,0)
 ;. ;
"RTN","LR7OFAO",222,0)
 ;
"RTN","LR7OFAO",223,0)
 ; unlock nodes
"RTN","LR7OFAO",224,0)
 ;*
"RTN","LR7OFAO",225,0)
 I $G(LRSTOP)=0,$G(LRODT),$G(LRSN),$P($G(^LR(+$G(LRDFN),0)),U,2)=2 D
"RTN","LR7OFAO",226,0)
 . N NATURE S NATURE="5^POLICY^99ORN"
"RTN","LR7OFAO",227,0)
 . S:'$G(DFN) DFN=+$P(^LR(+$G(LRDFN),0),U,3)
"RTN","LR7OFAO",228,0)
 . D NEW^LR7OB1(LRODT,LRSN,"SN",NATURE,,6) ;CALL TO UPDATE CPRS
"RTN","LR7OFAO",229,0)
 ;;*
"RTN","LR7OFAO",230,0)
 L -@LRLCK2
"RTN","LR7OFAO",231,0)
 L -@LRLCK1
"RTN","LR7OFAO",232,0)
 Q
"RTN","LR7OFAO",233,0)
 ;
"RTN","LR7OFAO",234,0)
 ;
"RTN","LR7OFAO",235,0)
ERRMSG(LRARRAY,ARR2) ;
"RTN","LR7OFAO",236,0)
 ; Filing error notification
"RTN","LR7OFAO",237,0)
 ; Inputs
"RTN","LR7OFAO",238,0)
 ;  LRARRAY: <byref><opt> FM compliant message array
"RTN","LR7OFAO",239,0)
 ;     ARR2: <byref><byval><opt> Additional text
"RTN","LR7OFAO",240,0)
 ;
"RTN","LR7OFAO",241,0)
 N MSG,I,II,J
"RTN","LR7OFAO",242,0)
 S MSG(1)="Filing errors in routine LR7OFAO for "_LRODT_" Specimen: "_LRDFN
"RTN","LR7OFAO",243,0)
 ; Add ARR2 nodes
"RTN","LR7OFAO",244,0)
 I $D(ARR2) D  ;
"RTN","LR7OFAO",245,0)
 . S J=+$O(MSG(" "),-1)
"RTN","LR7OFAO",246,0)
 . I J S:J<1 J=1
"RTN","LR7OFAO",247,0)
 . I $G(ARR2)'="" S MSG(J+1)=ARR2
"RTN","LR7OFAO",248,0)
 . S I=0
"RTN","LR7OFAO",249,0)
 . F  S I=$O(ARR2(I)) Q:'I  S J=+$O(MSG(" "),-1) S:J<1&(J) J=1 S MSG(J+1)=ARR2(I)
"RTN","LR7OFAO",250,0)
 ;
"RTN","LR7OFAO",251,0)
 D EN^DDIOL(.MSG)
"RTN","LR7OFAO",252,0)
 I $D(LRARRAY) D MSG^DIALOG("WE","","","","LRARRAY")
"RTN","LR7OFAO",253,0)
 Q
"RTN","LRAP")
0^3^B25886264^B24889097
"RTN","LRAP",1,0)
LRAP ;DALOI/STAFF - ANATOMIC PATH UTILITY ;08/23/16  09:18
"RTN","LRAP",2,0)
 ;;5.2;LAB SERVICE;**72,248,259,350,462**;Sep 27, 1994;Build 44
"RTN","LRAP",3,0)
 ;
"RTN","LRAP",4,0)
 ; Called by many routines in AP package
"RTN","LRAP",5,0)
 D END,CK G:Y=-1 END D LRDICS G:Y B
"RTN","LRAP",6,0)
 S DIC=68,DIC(0)="AEOQMZ"
"RTN","LRAP",7,0)
 S DIC("A")="Select ANATOMIC PATHOLOGY SECTION: "
"RTN","LRAP",8,0)
 ;
"RTN","LRAP",9,0)
 ;
"RTN","LRAP",10,0)
 S DIC("S")="I LRDICS[$P(^(0),U,2),$P(^(0),U,2)]"""",$D(^(3,""B"",DUZ(2)))"
"RTN","LRAP",11,0)
 ;
"RTN","LRAP",12,0)
 D ^DIC
"RTN","LRAP",13,0)
 K DIC,LRDICS
"RTN","LRAP",14,0)
 G:Y<1 END
"RTN","LRAP",15,0)
 ;
"RTN","LRAP",16,0)
B ;
"RTN","LRAP",17,0)
 S X=$P(Y,U,2) D ^LRUTL G:Y=-1 END
"RTN","LRAP",18,0)
 Q
"RTN","LRAP",19,0)
 ;
"RTN","LRAP",20,0)
 ;
"RTN","LRAP",21,0)
AU ; log-in autopsy
"RTN","LRAP",22,0)
 Q  ;see routine LRAUAW
"RTN","LRAP",23,0)
 ;
"RTN","LRAP",24,0)
 ;
"RTN","LRAP",25,0)
CY ; log-in cytopath
"RTN","LRAP",26,0)
 S (LRMD,LRSIT)=""
"RTN","LRAP",27,0)
 ;
"RTN","LRAP",28,0)
 D GETDEF
"RTN","LRAP",29,0)
 ;
"RTN","LRAP",30,0)
 S DR=".08///"_$S(LRLLOC["?":"UNKNOWN",1:LRLLOC)
"RTN","LRAP",31,0)
 S DR=DR_";.07;D:X P^LRUA;.011//^S X=LRPRAC(1);.012;.1//NOW"
"RTN","LRAP",32,0)
 S DR=DR_";S LRRC=X;.02;.99;S LRC(5)=X;1"
"RTN","LRAP",33,0)
 S DR(2,63.902)=".01;S LR(63.902)=X;.06R//^S X=LRSPTOP(0);S:X LRSPTOP=X,LRSPTOP(0)=$P(^LAB(61,LRSPTOP,0),U)"
"RTN","LRAP",34,0)
 S DR(2,63.902)=DR(2,63.902)_";.07R//^S X=LRSAMP(0);S:X LRSAMP=X,LRSAMP(0)=$P(^LAB(62,LRSAMP,0),U);S:'LRCAPA Y=""@2"";.02;@2"
"RTN","LRAP",35,0)
 Q
"RTN","LRAP",36,0)
 ;
"RTN","LRAP",37,0)
 ;
"RTN","LRAP",38,0)
EM ; log-in electron microscopy
"RTN","LRAP",39,0)
 S (LRMD,LRSIT)=""
"RTN","LRAP",40,0)
 ;
"RTN","LRAP",41,0)
 D GETDEF
"RTN","LRAP",42,0)
 ;
"RTN","LRAP",43,0)
 S DR=".08///"_$S(LRLLOC["?":"UNKNOWN",1:LRLLOC)
"RTN","LRAP",44,0)
 S DR=DR_";.07;D:X P^LRUA;.011//^S X=LRPRAC(1);.012;.1//NOW;S LRRC=X"
"RTN","LRAP",45,0)
 S DR=DR_";.02;.021;.99;S LRC(5)=X"
"RTN","LRAP",46,0)
 S DR(2,63.202)=".01;.06R//^S X=LRSPTOP(0);S:X LRSPTOP=X,LRSPTOP(0)=$P(^LAB(61,LRSPTOP,0),U)"
"RTN","LRAP",47,0)
 S DR(2,63.202)=DR(2,63.202)_";.07R//^S X=LRSAMP(0);S:X LRSAMP=X,LRSAMP(0)=$P(^LAB(62,LRSAMP,0),U)"
"RTN","LRAP",48,0)
 Q
"RTN","LRAP",49,0)
 ;
"RTN","LRAP",50,0)
 ;
"RTN","LRAP",51,0)
SP ; log-in surg path
"RTN","LRAP",52,0)
 S (LRMD,LRSIT)=""
"RTN","LRAP",53,0)
 S LR("FS")=+$G(^LAB(69.9,1,11))
"RTN","LRAP",54,0)
 ;
"RTN","LRAP",55,0)
 D GETDEF
"RTN","LRAP",56,0)
 ;
"RTN","LRAP",57,0)
 S DR=".08///"_$S(LRLLOC["?":"UNKNOWN",1:LRLLOC)
"RTN","LRAP",58,0)
 S DR=DR_";.07//^S X=LR(.07);D:X P^LRUA;.011//^S X=LRPRAC(1);.012;.1//NOW"
"RTN","LRAP",59,0)
 S DR=DR_";S LRRC=X;.02;.99;S LRC(5)=X;S:'LR(""FS"") Y=""@1"";1.3;@1"
"RTN","LRAP",60,0)
 S DR(2,63.812)=".01;.06R//^S X=LRSPTOP(0);S:X LRSPTOP=X,LRSPTOP(0)=$P(^LAB(61,LRSPTOP,0),U)"
"RTN","LRAP",61,0)
 S DR(2,63.812)=DR(2,63.812)_";.07R//^S X=LRSAMP(0);S:X LRSAMP=X,LRSAMP(0)=$P(^LAB(62,LRSAMP,0),U)"
"RTN","LRAP",62,0)
 ;
"RTN","LRAP",63,0)
 S:LRABV'["SP" LR("FS")=""
"RTN","LRAP",64,0)
 Q
"RTN","LRAP",65,0)
 ;
"RTN","LRAP",66,0)
 ;
"RTN","LRAP",67,0)
M ; edit path report parameters
"RTN","LRAP",68,0)
 W !
"RTN","LRAP",69,0)
 S DIC="^LRO(69.2,",DIC(0)="AEOQM"
"RTN","LRAP",70,0)
 S DIC("S")="I ""AUCYEMSP""[$P(^(0),U,2)&($P(^(0),U,2)]"""")"
"RTN","LRAP",71,0)
 D ^DIC K DIC G:Y<1 END S DA=+Y
"RTN","LRAP",72,0)
 L +^LRO(69.2,DA):5 I '$T D  G M
"RTN","LRAP",73,0)
 . S MSG="This entry is locked by another user.  Please try again later."
"RTN","LRAP",74,0)
 . D EN^DDIOL(MSG,"","!!") K MSG,DIE,DR,DA
"RTN","LRAP",75,0)
 . D END
"RTN","LRAP",76,0)
 S DR="[LRAPHDR]",DIE="^LRO(69.2,"
"RTN","LRAP",77,0)
 D ^DIE
"RTN","LRAP",78,0)
 L -^LRO(69.2,DA)
"RTN","LRAP",79,0)
 K DIE,DR,DA
"RTN","LRAP",80,0)
 G M
"RTN","LRAP",81,0)
 ;
"RTN","LRAP",82,0)
 ;
"RTN","LRAP",83,0)
D ; Edit path descriptions
"RTN","LRAP",84,0)
 W ! S DIC="^LAB(62.5,",DIC(0)="AEQLM"
"RTN","LRAP",85,0)
 S DLAYGO=62.5,DIC("S")="I ""ESCI""[$P(^(0),U,4)"
"RTN","LRAP",86,0)
 D ^DIC K DIC,DLAYGO G:X=""!(X[U) END S DA=+Y
"RTN","LRAP",87,0)
 S DIE("NO^")="",DIE="^LAB(62.5,"
"RTN","LRAP",88,0)
 L +^LAB(62.5,DA):5 I '$T D  G D
"RTN","LRAP",89,0)
 . S MSG="This entry is locked by another user.  Please try again later."
"RTN","LRAP",90,0)
 . D EN^DDIOL(MSG,"","!!") K MSG,DIE,DR,DA
"RTN","LRAP",91,0)
 . D END
"RTN","LRAP",92,0)
 S DR=".01;1;5;I ""ESCI""'[X W $C(7),!,""Enter E, S, C, or I"" S Y=5;10"
"RTN","LRAP",93,0)
 D ^DIE
"RTN","LRAP",94,0)
 L -^LAB(62.5,DA)
"RTN","LRAP",95,0)
 K DIE,DR,DA
"RTN","LRAP",96,0)
 G D
"RTN","LRAP",97,0)
 ;
"RTN","LRAP",98,0)
 ;
"RTN","LRAP",99,0)
V ; input transform DD(63.08,.11,0)
"RTN","LRAP",100,0)
 I $D(LRH(2)),LRH(2)'=$E(X,1,3) K X W !,"Year received must be same as log-in year (",LRH(2)+1700,") "
"RTN","LRAP",101,0)
 Q
"RTN","LRAP",102,0)
 ;
"RTN","LRAP",103,0)
 ;
"RTN","LRAP",104,0)
CK ;
"RTN","LRAP",105,0)
 S Y=1
"RTN","LRAP",106,0)
 I '$D(DUZ(2)) D  Q
"RTN","LRAP",107,0)
 . W !,$C(7)," Something is wrong..."
"RTN","LRAP",108,0)
 . W !!,"I can't tell if you're really here..."
"RTN","LRAP",109,0)
 . W !!,"Ask your IRM why you don't have a DUZ(2) variable defined!",!
"RTN","LRAP",110,0)
 . S Y=-1
"RTN","LRAP",111,0)
 ;
"RTN","LRAP",112,0)
 S LRAA(4)=$P($G(^DIC(4,+DUZ(2),0)),U)
"RTN","LRAP",113,0)
 I LRAA(4)="" D  Q
"RTN","LRAP",114,0)
 . W $C(7),!!,"I can't tell what DIVISION you are from.  Contact your IRM "
"RTN","LRAP",115,0)
 . S Y=-1
"RTN","LRAP",116,0)
 Q
"RTN","LRAP",117,0)
 ;
"RTN","LRAP",118,0)
 ;
"RTN","LRAP",119,0)
LRDICS ;
"RTN","LRAP",120,0)
 S Y=0,X=$G(LRDICS)
"RTN","LRAP",121,0)
 I $L(X)=2,"SPCYEMAU"[X D C I Y K LRDICS Q
"RTN","LRAP",122,0)
 S LRDICS=$S($L($G(LRDICS)):LRDICS,1:"SPCYEMAU")
"RTN","LRAP",123,0)
 Q
"RTN","LRAP",124,0)
 ;
"RTN","LRAP",125,0)
 ;
"RTN","LRAP",126,0)
C ;
"RTN","LRAP",127,0)
 I $D(LRDICS(2)) G CC
"RTN","LRAP",128,0)
 S (A,B)=0
"RTN","LRAP",129,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)=LRDICS,$G(^(3,DUZ(2),0)) S B=B+1,B(B)=A
"RTN","LRAP",130,0)
 I B=1 S Y=B(1)_U_$P(^LRO(68,B(1),0),U) K A,B Q
"RTN","LRAP",131,0)
 I B>1,$D(LRDICS(1)) S Y=B(1)_U_$P(^LRO(68,B(1),0),U) K A,B
"RTN","LRAP",132,0)
 Q
"RTN","LRAP",133,0)
 ;
"RTN","LRAP",134,0)
 ;
"RTN","LRAP",135,0)
CC ;
"RTN","LRAP",136,0)
 S (A,B)=0
"RTN","LRAP",137,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)=LRDICS S B=B+1,B(B)=A Q
"RTN","LRAP",138,0)
 I B=1 S Y=B(1)_U_$P(^LRO(68,B(1),0),U) K A,B
"RTN","LRAP",139,0)
 Q
"RTN","LRAP",140,0)
 ;
"RTN","LRAP",141,0)
 ;
"RTN","LRAP",142,0)
END ;
"RTN","LRAP",143,0)
 D V^LRU
"RTN","LRAP",144,0)
 Q
"RTN","LRAP",145,0)
 ;
"RTN","LRAP",146,0)
 ;
"RTN","LRAP",147,0)
GETDEF ; Get defaults for specimen login
"RTN","LRAP",148,0)
 ;
"RTN","LRAP",149,0)
 ; Default values for collection sample/specimen and lab test
"RTN","LRAP",150,0)
 ;
"RTN","LRAP",151,0)
 N X
"RTN","LRAP",152,0)
 ;
"RTN","LRAP",153,0)
 ; Default value for collection sample
"RTN","LRAP",154,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LR ACCESSION DEFAULT COL SAMP","`"_LRAA,"B")
"RTN","LRAP",155,0)
 S LRSAMP=$P(X,"^"),LRSAMP(0)=$P(X,"^",2)
"RTN","LRAP",156,0)
 ;
"RTN","LRAP",157,0)
 ; Default value for specimen(topography)
"RTN","LRAP",158,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LR ACCESSION DEFAULT SPECIMEN","`"_LRAA,"B")
"RTN","LRAP",159,0)
 S LRSPTOP=$P(X,"^"),LRSPTOP(0)=$P(X,"^",2)
"RTN","LRAP",160,0)
 ;
"RTN","LRAP",161,0)
 ; Default value for laboratory test
"RTN","LRAP",162,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LR ACCESSION DEFAULT LAB TEST","`"_LRAA,"B")
"RTN","LRAP",163,0)
 S LRTST=$P(X,"^"),LRTST(0)=$P(X,"^",2)
"RTN","LRAP",164,0)
 ;;*
"RTN","LRAP",165,0)
 K ^DISV(DUZ,"^VA(200,")
"RTN","LRAP",166,0)
 ;;;*
"RTN","LRAP",167,0)
 Q
"RTN","LRAPDA")
0^27^B95028265^B92935176
"RTN","LRAPDA",1,0)
LRAPDA ;DALOI/STAFF - ANATOMIC PATH DATA ENTRY ;08/10/16  13:22
"RTN","LRAPDA",2,0)
 ;;5.2;LAB SERVICE;**72,73,91,121,248,259,295,317,365,350,422,462**;Sep 27, 1994;Build 44
"RTN","LRAPDA",3,0)
 ;
"RTN","LRAPDA",4,0)
 ; Reference to ^VA(200 supported by IA #10060
"RTN","LRAPDA",5,0)
 ;
"RTN","LRAPDA",6,0)
 S LRDATA=0,LRAU=$S(LRSS'="AU":0,1:1)
"RTN","LRAPDA",7,0)
 W !?20,LRO(68)," (",LRABV,")",!
"RTN","LRAPDA",8,0)
 S:'$D(LRSOP) LRSOP=1 S:'$D(LRD(1)) LRD(1)="0"
"RTN","LRAPDA",9,0)
 S:'$D(^LRO(69.2,LRAA,2,0)) ^(0)="^69.23A^0^0"
"RTN","LRAPDA",10,0)
 ;
"RTN","LRAPDA",11,0)
SEL K LR(1)
"RTN","LRAPDA",12,0)
 I $D(LR(2)) D  G:%<1 END S:%=1 LR(1)=1
"RTN","LRAPDA",13,0)
 . W !!,"Enter Etiology, Function, Procedure & Disease "
"RTN","LRAPDA",14,0)
 . S %=2 D YN^LRU
"RTN","LRAPDA",15,0)
 ;
"RTN","LRAPDA",16,0)
 ;
"RTN","LRAPDA",17,0)
AK ; from LRAPD1
"RTN","LRAPDA",18,0)
 N CORRECT
"RTN","LRAPDA",19,0)
 S:'$D(LRSFLG) LRSFLG=""
"RTN","LRAPDA",20,0)
 W !!,"Data entry for ",LRH(0)," "
"RTN","LRAPDA",21,0)
 S %=1 D YN^LRU G:%<1 END
"RTN","LRAPDA",22,0)
 I %=2 D  G:Y<1 END S LRAD=$E(Y,1,3)_"0000",LRH(0)=$E(Y,1,3)+1700
"RTN","LRAPDA",23,0)
 .S %DT="AE",%DT(0)="-N",%DT("A")="Enter YEAR: " D ^%DT K %DT
"RTN","LRAPDA",24,0)
 I '$O(^LRO(68,LRAA,1,LRAD,1,0)) D  Q
"RTN","LRAPDA",25,0)
 . W $C(7),!!,"NO ",LRO(68)," ACCESSIONS IN FILE FOR ",LRH(0),!!
"RTN","LRAPDA",26,0)
W ;
"RTN","LRAPDA",27,0)
 D LOOKUP^LRAPUTL(.LRDATA,LRH(0),LRO(68),LRSS,LRAD,LRAA)
"RTN","LRAPDA",28,0)
 I LRDATA=-1!('$G(LRSEL))!('$D(LRI)) S LREND=1 Q
"RTN","LRAPDA",29,0)
 S LRIDT=LRI
"RTN","LRAPDA",30,0)
 I LRSEL=2 G:LRUID="" W D REST,OERR^LR7OB63D G W
"RTN","LRAPDA",31,0)
 I LRSEL=3 D REST,OERR^LR7OB63D G W
"RTN","LRAPDA",32,0)
 I LRSEL=1 D REST S:$D(DR(1))#2 DR=DR(1) D OERR^LR7OB63D G W
"RTN","LRAPDA",33,0)
 ;
"RTN","LRAPDA",34,0)
 ;
"RTN","LRAPDA",35,0)
REST ;
"RTN","LRAPDA",36,0)
 N LRXSTOP,LRX,LRX1
"RTN","LRAPDA",37,0)
 ;W "  for ",LRH(0)
"RTN","LRAPDA",38,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRAPDA",39,0)
 . W $C(7),!!,"Accession # ",LRAN," for ",LRH(0)," not in ",LRO(68),!!
"RTN","LRAPDA",40,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRLLOC=$P(X,"^",7),LRDFN=+X,LRODT=$P(X,"^",4),LRSN=$P(X,"^",5)
"RTN","LRAPDA",41,0)
 Q:'$D(^LR(LRDFN,0))  S X=^(0) D ^LRUP
"RTN","LRAPDA",42,0)
 ;W !,LRP,"  ID: ",SSN
"RTN","LRAPDA",43,0)
 S (LRIDT,LRI)=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LRAPDA",44,0)
 I LRSS'="AU",'$D(^LR(LRDFN,LRSS,LRI,0)) D  Q
"RTN","LRAPDA",45,0)
 . W $C(7),!,"Inverse date missing or incorrect in Accession Area file "
"RTN","LRAPDA",46,0)
 . W "for",!,LRO(68),"  Year: ",$E(LRAD,2,3),"  Accession: ",LRAN
"RTN","LRAPDA",47,0)
 ;I "SPCYEM"[LRSS,$O(^LR(LRDFN,LRSS,LRI,.1,0)) D
"RTN","LRAPDA",48,0)
 ;.W !,"Specimen(s):"
"RTN","LRAPDA",49,0)
 ;.S X=0 F  S X=$O(^LR(LRDFN,LRSS,LRI,.1,X)) Q:'X  D
"RTN","LRAPDA",50,0)
 ;..W !,$P($G(^LR(LRDFN,LRSS,LRI,.1,X,0)),"^")
"RTN","LRAPDA",51,0)
 ;
"RTN","LRAPDA",52,0)
 ; Don't allow supp. report to be added to a released report if modifications are being added via MM option
"RTN","LRAPDA",53,0)
 S LRXSTOP=0,(LRX,LRX1)=""
"RTN","LRAPDA",54,0)
 I LRSS'="AU",LRD(1)="S" D
"RTN","LRAPDA",55,0)
 . S LRX=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",11) ;release date/time
"RTN","LRAPDA",56,0)
 . S LRX1=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",15) ;orig rel date/time
"RTN","LRAPDA",57,0)
 I LRSS="AU",LRSOP="R" D
"RTN","LRAPDA",58,0)
 . S LRX=$P($G(^LR(LRDFN,"AU")),"^",15)  ;release date/time
"RTN","LRAPDA",59,0)
 . S LRX1=$P($G(^LR(LRDFN,"AU")),"^",3)  ;date report completed
"RTN","LRAPDA",60,0)
 I 'LRX,LRX1 D
"RTN","LRAPDA",61,0)
 . W $C(7),!!,"This "_$G(LRAA(1))_" report is currently being"
"RTN","LRAPDA",62,0)
 . W !,"modified; it must first be released before Supplementary"
"RTN","LRAPDA",63,0)
 . W !,"report can be added.",!
"RTN","LRAPDA",64,0)
 . S LRXSTOP=1
"RTN","LRAPDA",65,0)
 Q:LRXSTOP
"RTN","LRAPDA",66,0)
 ;
"RTN","LRAPDA",67,0)
 ;
"RTN","LRAPDA",68,0)
DIE ;Edit
"RTN","LRAPDA",69,0)
 I LRSS="AU" D  D AUE Q
"RTN","LRAPDA",70,0)
 . S LRICDT=$P($G(^LR(LRDFN,"AU")),U,1),ICDFMT=1
"RTN","LRAPDA",71,0)
 . S LRCDSYS=$S(LRICDT'<$$IMPDATE^LEXU("10D"):30,1:1),ICDSYS=LRCDSYS,LRDXV=LRDFN_";"_LRSS
"RTN","LRAPDA",72,0)
 N LRRDT1,LRRDT2,LRIENS,LREL,LRQUIT,LRSNO,LRCPT,LRESCPT
"RTN","LRAPDA",73,0)
 S (LREL,LRESCPT,LRQUIT,LRSNO,LRCPT)=0,LRIENS=LRI_","_LRDFN_","
"RTN","LRAPDA",74,0)
 S LRRDT1=$$GET1^DIQ(LRSF,LRIENS,.11,"I")
"RTN","LRAPDA",75,0)
 S LRRDT2=$$GET1^DIQ(LRSF,LRIENS,.15,"I")
"RTN","LRAPDA",76,0)
 S LRICDT=$$GET1^DIQ(LRSF,LRIENS,.1,"I"),ICDFMT=1
"RTN","LRAPDA",77,0)
 S LRCDSYS=$S(LRICDT'<$$IMPDATE^LEXU("10D"):30,1:1),ICDSYS=LRCDSYS,LRDXV=LRDFN_";"_LRSS_";"_LRI
"RTN","LRAPDA",78,0)
 S:LRRDT1!LRRDT2 LREL=1
"RTN","LRAPDA",79,0)
 ; Determine if CPT activated
"RTN","LRAPDA",80,0)
 I $T(ES^LRCAPES)'="" S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPDA",81,0)
 I LRSOP="G",LREL D  Q
"RTN","LRAPDA",82,0)
 . W $C(7),!!,"Report verified.  Cannot edit with this option."
"RTN","LRAPDA",83,0)
 I LRSOP'="","ABM"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",84,0)
 .  ;Allow SNOMED and CPT coding even after release.
"RTN","LRAPDA",85,0)
 . W $C(7),!!,"Report has been verified.  "
"RTN","LRAPDA",86,0)
 . I 'LRESCPT,LRSOP'="B" D  Q
"RTN","LRAPDA",87,0)
 . . W "Cannot edit with this option."
"RTN","LRAPDA",88,0)
 . . S LRQUIT=1
"RTN","LRAPDA",89,0)
 . W "Only "
"RTN","LRAPDA",90,0)
 . I LRESCPT W "CPT " W:LRSOP="B" "and "
"RTN","LRAPDA",91,0)
 . W:LRSOP="B" "SNOMED "
"RTN","LRAPDA",92,0)
 . W "coding permitted.",!
"RTN","LRAPDA",93,0)
 . I LRSOP="B" D
"RTN","LRAPDA",94,0)
 . . K DIR S DIR(0)="Y",DIR("A")="Enter SNOMED coding",DIR("B")="NO"
"RTN","LRAPDA",95,0)
 . . D ^DIR W !
"RTN","LRAPDA",96,0)
 . . S LRSNO=+Y
"RTN","LRAPDA",97,0)
 . Q:'LRESCPT
"RTN","LRAPDA",98,0)
 . K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",99,0)
 . D ^DIR W !
"RTN","LRAPDA",100,0)
 . S LRCPT=+Y
"RTN","LRAPDA",101,0)
 . I "AM"[LRSOP,'LRCPT S LRQUIT=1 Q
"RTN","LRAPDA",102,0)
 . I LRSOP="B",'LRCPT,'LRSNO S LRQUIT=1
"RTN","LRAPDA",103,0)
 ;
"RTN","LRAPDA",104,0)
 ;
"RTN","LRAPDA",105,0)
RESET ; Reset DR string if altered by prior accession/patient
"RTN","LRAPDA",106,0)
 ; Reset DR to orig value in LRAPD1
"RTN","LRAPDA",107,0)
 I LRSOP'="","AMBS"[LRSOP,$G(LRD)'="" D @LRD
"RTN","LRAPDA",108,0)
 I LRSFLG="S",$G(LRD)'="" D @LRD  ;For CY,EM Supp entry
"RTN","LRAPDA",109,0)
 S:LRSNO DR=10    ;Modify DR string if only SNOMED coding permitted
"RTN","LRAPDA",110,0)
 I 'LRSNO,LRCPT S DR=""  ;Set DR string to null in only CPT coding
"RTN","LRAPDA",111,0)
 ; If adding supp rpt to released rpt, remove date rpt completed from DR
"RTN","LRAPDA",112,0)
 I LRRDT1,LRSOP="S"!(LRSFLG="S") S DR=".09///^S X=LRWHO;10"
"RTN","LRAPDA",113,0)
 ;
"RTN","LRAPDA",114,0)
EDIT ; Call to ^DIE
"RTN","LRAPDA",115,0)
 W !
"RTN","LRAPDA",116,0)
 S LRA=^LR(LRDFN,LRSS,LRI,0),LRRC=$P(LRA,"^",10)
"RTN","LRAPDA",117,0)
 I LRCAPA,"SPCYEM"[LRSS D C^LRAPSWK
"RTN","LRAPDA",118,0)
 S DIE="^LR(LRDFN,LRSS,",DA=LRI,DA(1)=LRDFN
"RTN","LRAPDA",119,0)
 D CK^LRU Q:$D(LR("CK"))
"RTN","LRAPDA",120,0)
 I LRSS="SP",LRSOP="B",$O(^LR(LRDFN,LRSS,LRI,1.3,0)) D
"RTN","LRAPDA",121,0)
 . W $C(7),!!,"This accession has a FROZEN SECTION report."
"RTN","LRAPDA",122,0)
 . W !,"Be sure 'FROZEN SECTION' is entered as a SNOMED code in the PROCEDURE field"
"RTN","LRAPDA",123,0)
 . W !,"for the appropriate organ or tissue.",!!
"RTN","LRAPDA",124,0)
 ; Code S LRELSD is in DR string setup in LRAPR
"RTN","LRAPDA",125,0)
 N LRELSD S LRELSD=0
"RTN","LRAPDA",126,0)
 D ^DIE
"RTN","LRAPDA",127,0)
 ;
"RTN","LRAPDA",128,0)
 ; Ask for performing laboratory assignment
"RTN","LRAPDA",129,0)
 I LRSFLG'="S" D EDIT^LRRPLU(LRDFN,LRSS,LRI)
"RTN","LRAPDA",130,0)
 ;
"RTN","LRAPDA",131,0)
 ; Update accession and order file, releasing facility and send CPRS alerts
"RTN","LRAPDA",132,0)
 I LRELSD D
"RTN","LRAPDA",133,0)
 . D ACCCOMP^LRAPRES
"RTN","LRAPDA",134,0)
 . I LRSS'="AU" D
"RTN","LRAPDA",135,0)
 . . D SETRL^LRVERA(LRDFN,LRSS,LRI,DUZ(2))
"RTN","LRAPDA",136,0)
 . . D MAIN^LRAPRES1(LRDFN,LRSS,LRI,LRSF,LRP,$P(LRA,"^",6))
"RTN","LRAPDA",137,0)
 . . ;;*Make call to update CPRS order on release *462
"RTN","LRAPDA",138,0)
 . . N LRTEST S LRTEST(+$G(LRT))="" D NEW^LR7OB1(LRODT,LRSN,"RE",,.LRTEST)
"RTN","LRAPDA",139,0)
 ;
"RTN","LRAPDA",140,0)
 ; Update clinical reminders
"RTN","LRAPDA",141,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,LRI)
"RTN","LRAPDA",142,0)
 ;
"RTN","LRAPDA",143,0)
 D:LRSFLG="S"&('$D(Y)) ^LRAPDSR
"RTN","LRAPDA",144,0)
 D FRE^LRU
"RTN","LRAPDA",145,0)
 I LRSOP'="","ABM"[LRSOP D CPTCOD
"RTN","LRAPDA",146,0)
 ;
"RTN","LRAPDA",147,0)
WKLD ; Capture Workload
"RTN","LRAPDA",148,0)
 I LRSOP="Z","CYSP"[LRSS,LRCAPA D S^LRAPR Q
"RTN","LRAPDA",149,0)
 I LRCAPA,"SPCYEM"[LRSS,LRD(1)'="","MBA"[LRD(1) D C1^LRAPSWK
"RTN","LRAPDA",150,0)
 I LRCAPA,"SPCYEM"[LRSS,LRSOP="G" D C1^LRAPSWK
"RTN","LRAPDA",151,0)
 ;
"RTN","LRAPDA",152,0)
QUEUES ; Update Queues
"RTN","LRAPDA",153,0)
 S X=$P(^LR(LRDFN,LRSS,LRI,0),"^",4)
"RTN","LRAPDA",154,0)
 I X,$D(^VA(200,X,0)) S LR("TR")=$P(^(0),"^")
"RTN","LRAPDA",155,0)
 I "CYEMSP"[LRSS,$D(LR(6)),LRSOP="G" Q:$D(^LRO(69.2,LRAA,1,LRAN,0))  D  Q
"RTN","LRAPDA",156,0)
 . L +^LRO(69.2,LRAA,1):DILOCKTM I '$T D  Q
"RTN","LRAPDA",157,0)
 . . N MSG
"RTN","LRAPDA",158,0)
 . . S MSG(1)="The preliminary reports queue is in use by another person.",MSG(1,"F")="!!"
"RTN","LRAPDA",159,0)
 . . S MSG(2)="  You will need to add this accession to the queue later."
"RTN","LRAPDA",160,0)
 . . D EN^DDIOL(.MSG)
"RTN","LRAPDA",161,0)
 . S ^LRO(69.2,LRAA,1,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRAPDA",162,0)
 . S X=^LRO(69.2,LRAA,1,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",163,0)
 . L -^LRO(69.2,LRAA,1)
"RTN","LRAPDA",164,0)
 I "CYEMSP"[LRSS,$D(LR(7)),'$D(^LRO(69.2,LRAA,2,LRAN,0)),LRD(1)'="S" D
"RTN","LRAPDA",165,0)
 . L +^LRO(69.2,LRAA,2):DILOCKTM I '$T D  Q
"RTN","LRAPDA",166,0)
 . . N MSG
"RTN","LRAPDA",167,0)
 . . S MSG(1)="The final reports queue is in use by another person.  ",MSG(1,"F")="!!"
"RTN","LRAPDA",168,0)
 . . S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",169,0)
 . . D EN^DDIOL(.MSG)
"RTN","LRAPDA",170,0)
 . S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRAPDA",171,0)
 . S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",172,0)
 . L -^LRO(69.2,LRAA,2)
"RTN","LRAPDA",173,0)
 D:LRSOP="M"!(LRSOP="B") EN^LRSPGD
"RTN","LRAPDA",174,0)
 Q
"RTN","LRAPDA",175,0)
 ;
"RTN","LRAPDA",176,0)
 ;
"RTN","LRAPDA",177,0)
NM ;
"RTN","LRAPDA",178,0)
 I X'["@"!(X["@"&(Y(Z)="")) D  Q
"RTN","LRAPDA",179,0)
 .W $C(7),!?4,"ENTER WHOLE NUMBERS ONLY",! K X
"RTN","LRAPDA",180,0)
 I Y(Z)'="" W $C(7),?40,"OK TO DELETE" S %=2 D YN^LRU I %'=1 K X Q
"RTN","LRAPDA",181,0)
 S Y(Z)="" Q
"RTN","LRAPDA",182,0)
 ;
"RTN","LRAPDA",183,0)
 ;
"RTN","LRAPDA",184,0)
AUE ; Autopsy Data Entry
"RTN","LRAPDA",185,0)
 W !
"RTN","LRAPDA",186,0)
 N LREL,LRQUIT,LRSNO,LRESCPT,LRCPT
"RTN","LRAPDA",187,0)
 S (LREL,LRQUIT,LRSNO,LRCPT)=0
"RTN","LRAPDA",188,0)
 S LREL=+$$GET1^DIQ(63,LRDFN_",",14.7,"I")
"RTN","LRAPDA",189,0)
 ; Determine if CPT activated
"RTN","LRAPDA",190,0)
 I $T(ES^LRCAPES)'="" S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPDA",191,0)
 ; Allow supp report to be added on verified AU
"RTN","LRAPDA",192,0)
 I LRSOP'="","AFIP"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",193,0)
 . Q:LRESCPT&("AP"[LRSOP)
"RTN","LRAPDA",194,0)
 . W $C(7),!!,"Report verified.  Cannot edit with this option!"
"RTN","LRAPDA",195,0)
 . S LRQUIT=1
"RTN","LRAPDA",196,0)
 I LRSOP'="","ABP"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",197,0)
 . W $C(7),!!,"Report has been verified.  "
"RTN","LRAPDA",198,0)
 . W "Only "
"RTN","LRAPDA",199,0)
 . I LRESCPT W "CPT " W:LRSOP="B" "and "
"RTN","LRAPDA",200,0)
 . W:LRSOP="B" "SNOMED "
"RTN","LRAPDA",201,0)
 . W "coding permitted.",!
"RTN","LRAPDA",202,0)
 . I LRSOP="B" D
"RTN","LRAPDA",203,0)
 . . K DIR S DIR(0)="Y",DIR("A")="Enter SNOMED coding",DIR("B")="NO"
"RTN","LRAPDA",204,0)
 . . D ^DIR W !
"RTN","LRAPDA",205,0)
 . . S LRSNO=+Y
"RTN","LRAPDA",206,0)
 . Q:'LRESCPT
"RTN","LRAPDA",207,0)
 . K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",208,0)
 . D ^DIR W !
"RTN","LRAPDA",209,0)
 . S LRCPT=+Y
"RTN","LRAPDA",210,0)
 . I "AP"[LRSOP,'LRCPT S LRQUIT=1 Q
"RTN","LRAPDA",211,0)
 . I LRSOP="B",'LRCPT,'LRSNO S LRQUIT=1
"RTN","LRAPDA",212,0)
 ;
"RTN","LRAPDA",213,0)
AURESET ; Reset DR to orig value in LRAUDA
"RTN","LRAPDA",214,0)
 I LRSOP'="","AP"[LRSOP D @(LRSOP_"DR^LRAUDA")
"RTN","LRAPDA",215,0)
 I LRSOP="B" D BDR^LRAUDA
"RTN","LRAPDA",216,0)
 S:LRSNO DR=32       ;Modify DR string if only SNOMED coding permitted
"RTN","LRAPDA",217,0)
 I 'LRSNO,LRCPT S DR=""  ;Set DR string to null inf only CPT coding
"RTN","LRAPDA",218,0)
 ;                              ;
"RTN","LRAPDA",219,0)
 ; Not all of the autopsy fields are within the AU subscript.
"RTN","LRAPDA",220,0)
 ; Therefore, we must lock the entire LRDFN.
"RTN","LRAPDA",221,0)
 L +^LR(LRDFN):DILOCKTM I '$T D  Q
"RTN","LRAPDA",222,0)
 . S MSG="This record is locked by another user.  "
"RTN","LRAPDA",223,0)
 . S MSG=MSG_"Please wait and try again."
"RTN","LRAPDA",224,0)
 . D EN^DDIOL(MSG,"","!!") K MSG
"RTN","LRAPDA",225,0)
 I LRSFLG'="S" D
"RTN","LRAPDA",226,0)
 . N LRELSD S LRELSD=0
"RTN","LRAPDA",227,0)
 . S DIE="^LR(",DA=LRDFN
"RTN","LRAPDA",228,0)
 . D ^DIE
"RTN","LRAPDA",229,0)
 . S LRA=^LR(LRDFN,"AU"),LRI=$P(LRA,U),LRAC=$P(LRA,U,6)
"RTN","LRAPDA",230,0)
 . I LRELSD D MAIN^LRAPRES1(LRDFN,LRSS,LRI,LRSF,LRP,LRAC)
"RTN","LRAPDA",231,0)
 ;
"RTN","LRAPDA",232,0)
 D:LRSFLG="S" ^LRAPDSR
"RTN","LRAPDA",233,0)
 ;
"RTN","LRAPDA",234,0)
 ; Ask for performing laboratory assignment
"RTN","LRAPDA",235,0)
 W !! D EDIT^LRRPLU(LRDFN,LRSS,LRI)
"RTN","LRAPDA",236,0)
 ;
"RTN","LRAPDA",237,0)
 D UPDATE^LRPXRM(LRDFN,"AU")
"RTN","LRAPDA",238,0)
 L -^LR(LRDFN)
"RTN","LRAPDA",239,0)
 D:"BAP"[LRSOP AU
"RTN","LRAPDA",240,0)
 D:LRSOP="R" R
"RTN","LRAPDA",241,0)
 I LRSOP'="","ABP"[LRSOP D CPTCOD
"RTN","LRAPDA",242,0)
 Q
"RTN","LRAPDA",243,0)
 ;
"RTN","LRAPDA",244,0)
 ;
"RTN","LRAPDA",245,0)
AU I '$D(^LRO(69.2,LRAA,2,LRAN,0)) D
"RTN","LRAPDA",246,0)
 .L +^LRO(69.2,LRAA,2):DILOCKTM I '$T D  Q
"RTN","LRAPDA",247,0)
 ..S MSG(1)="The final reports queue is in use by another person.  "
"RTN","LRAPDA",248,0)
 ..S MSG(1,"F")="!!"
"RTN","LRAPDA",249,0)
 ..S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",250,0)
 ..D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDA",251,0)
 .S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN
"RTN","LRAPDA",252,0)
 .S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",253,0)
 .L -^LRO(69.2,LRAA,2)
"RTN","LRAPDA",254,0)
 D AU^LRSPGD
"RTN","LRAPDA",255,0)
 Q
"RTN","LRAPDA",256,0)
 ;
"RTN","LRAPDA",257,0)
 ;
"RTN","LRAPDA",258,0)
R I '$D(^LRO(69.2,LRAA,3,LRAN,0)) D
"RTN","LRAPDA",259,0)
 . L +^LRO(69.2,LRAA,3):DILOCKTM I '$T D  Q
"RTN","LRAPDA",260,0)
 . . S MSG(1)="The interim reports queue is in use by another person.  "
"RTN","LRAPDA",261,0)
 . . S MSG(1,"F")="!!"
"RTN","LRAPDA",262,0)
 . . S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",263,0)
 . . D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDA",264,0)
 . S ^LRO(69.2,LRAA,3,LRAN,0)=LRDFN
"RTN","LRAPDA",265,0)
 . S X=^LRO(69.2,LRAA,3,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",266,0)
 . L -^LRO(69.2,LRAA,3)
"RTN","LRAPDA",267,0)
 Q
"RTN","LRAPDA",268,0)
 ;
"RTN","LRAPDA",269,0)
 ;
"RTN","LRAPDA",270,0)
PNAME ; Patient Name Lookup
"RTN","LRAPDA",271,0)
 ; LRPFLG tells LRUPS to limit accessions to the chosen year.
"RTN","LRAPDA",272,0)
 N LRPFLG
"RTN","LRAPDA",273,0)
 S X=LRPNM,LRPFLG=1
"RTN","LRAPDA",274,0)
 K LRPNM,DIC,VADM,VAIN,VA
"RTN","LRAPDA",275,0)
 S DFN=-1,DIC(0)="EQM",(LRX,LRDPF)=""
"RTN","LRAPDA",276,0)
 D:'$D(LRLABKY) LABKEY^LRPARAM
"RTN","LRAPDA",277,0)
 D DPA1^LRDPA
"RTN","LRAPDA",278,0)
 I DFN=-1 S LRAN=-1 Q
"RTN","LRAPDA",279,0)
 D I^LRUPS
"RTN","LRAPDA",280,0)
 Q
"RTN","LRAPDA",281,0)
 ;
"RTN","LRAPDA",282,0)
 ;
"RTN","LRAPDA",283,0)
CPTCOD ; CPT Coding
"RTN","LRAPDA",284,0)
 N LRPRO
"RTN","LRAPDA",285,0)
 Q:$T(CPT^LRCAPES)=""
"RTN","LRAPDA",286,0)
 Q:LREL&('LRCPT)
"RTN","LRAPDA",287,0)
 I 'LREL D
"RTN","LRAPDA",288,0)
 . K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",289,0)
 . D ^DIR W !
"RTN","LRAPDA",290,0)
 . S LRCPT=+Y
"RTN","LRAPDA",291,0)
 Q:'LRCPT
"RTN","LRAPDA",292,0)
 ; SET PROVIDER TO CURRENT USER, ALLOW UPDATES
"RTN","LRAPDA",293,0)
 S LRPRO=DUZ
"RTN","LRAPDA",294,0)
 D PROVIDR^LRAPUTL
"RTN","LRAPDA",295,0)
 Q:LRQUIT
"RTN","LRAPDA",296,0)
 D CPT^LRCAPES(LRAA,LRAD,LRAN,LRPRO)
"RTN","LRAPDA",297,0)
 Q
"RTN","LRAPDA",298,0)
 ;
"RTN","LRAPDA",299,0)
 ;
"RTN","LRAPDA",300,0)
END K LRSFLG,LRICDT,LRCDSYS,ICDSYS,ICDFMT,LRDXV
"RTN","LRAPDA",301,0)
 D:$T(CLEAN^LRCAPES)'="" CLEAN^LRCAPES
"RTN","LRAPDA",302,0)
 D V^LRU
"RTN","LRAPDA",303,0)
 Q
"RTN","LRAPDA",304,0)
 ;
"RTN","LRAPKLG")
0^32^B46698322^n/a
"RTN","LRAPKLG",1,0)
LRAPKLG ;DSS/FHS - MOVE SP DATA FROM SURGICAL RECORD ;09/21/16  10:44
"RTN","LRAPKLG",2,0)
 ;;5.2;LAB SERVICE;**462**;Sep 27, 1994;Build 44
"RTN","LRAPKLG",3,0)
 ; Supported calls AI #, 5286,103,3615
"RTN","LRAPKLG",4,0)
EN ;
"RTN","LRAPKLG",5,0)
 ; Called from MOVE^LRAPKOE
"RTN","LRAPKLG",6,0)
 ; Call with
"RTN","LRAPKLG",7,0)
 ; LRDFN - LRSS - LRIDT - LRCDT
"RTN","LRAPKLG",8,0)
 Q:$P(^LR(LRDFN,0),U,2)'=2
"RTN","LRAPKLG",9,0)
 N A,ANS,CASE,CNT,CNTX,D0,DA,DIC,DIR,DIRUT,DR,DTOUT,DUOUT
"RTN","LRAPKLG",10,0)
 N ERR,FDA,FIL,FLD,IEN,LRABORT,LRCASE,LRDIAL,LRDOC,LREDT
"RTN","LRAPKLG",11,0)
 N LREND,LRFHDR,LRHDR,LRI,LRIEN,LRLONG,LROK,LROPER,LROPERS
"RTN","LRAPKLG",12,0)
 N LROPS,LRPAGE,LRPRAC,LROTHER,LRSCAN,LRRB,LRSCAN
"RTN","LRAPKLG",13,0)
 N LRSDATE,LRSDOC,LRSDT,LRSDX
"RTN","LRAPKLG",14,0)
 N LRSTAT,LRSTATUS,LRSURGDT,LRSURPHY,LRTN,LRTREA,LRV,LRVAL
"RTN","LRAPKLG",15,0)
 N LRWRD,LRX,LRYN,S,STR,VADM,VA,VAL,VAIN,X,Y
"RTN","LRAPKLG",16,0)
EN0 ;
"RTN","LRAPKLG",17,0)
 S LROK=0
"RTN","LRAPKLG",18,0)
 S:'$G(DFN) DFN=$P(^LR(LRDFN,0),U,3) D PT^LRX
"RTN","LRAPKLG",19,0)
 I '$O(^SRF("ADT",DFN,0)) W !,"No Surgery Case for "_PNM Q
"RTN","LRAPKLG",20,0)
 S LREDT=9999999.999999-$$FMADD^XLFDT(DT,-7) ; End Date
"RTN","LRAPKLG",21,0)
 S LRSDT=9999999.999999-$$NOW^XLFDT ;Start Date
"RTN","LRAPKLG",22,0)
 W @IOF,!!,"Checking surgical record for this patient...",!
"RTN","LRAPKLG",23,0)
 W PNM,"  ",$P(VADM(5),U,2)," DOB:",$$FMTE^XLFDT($P(VADM(3),U),5)," SSN:",$P(VADM(2),U,2),!
"RTN","LRAPKLG",24,0)
 S CNT=0 F  S LRSDT=$O(^SRF("ADT",DFN,LRSDT)) Q:'LRSDT!(LRSDT>LREDT)  S LRCASE=0 F  S LRCASE=$O(^SRF("ADT",DFN,LRSDT,LRCASE)) Q:'LRCASE  D LIST
"RTN","LRAPKLG",25,0)
EN1 ;
"RTN","LRAPKLG",26,0)
 ;
"RTN","LRAPKLG",27,0)
 I CNT=0 W !,"No operations on record in the past 7 days.",! Q
"RTN","LRAPKLG",28,0)
 I CNT=1 D  Q
"RTN","LRAPKLG",29,0)
 . W @IOF
"RTN","LRAPKLG",30,0)
 . W !,"Only one operation on record available",! H 3
"RTN","LRAPKLG",31,0)
 . S (LRTN,LRCASE)=+LRCASE(1) D DISPLAY(LRCASE)
"RTN","LRAPKLG",32,0)
 . I '$G(LROK) D END Q
"RTN","LRAPKLG",33,0)
 . I $G(LROK) D STORE^LRAPKLG1(LRDFN,LRSS,LRIDT,.LRHDR)
"RTN","LRAPKLG",34,0)
 ;
"RTN","LRAPKLG",35,0)
OPT K DIR S DIR("?",1)="Enter the number of the operation associated with the specimen(s)",DIR("?")="or press RETURN to bypass operation selection."
"RTN","LRAPKLG",36,0)
 W ! S DIR("A")="Select operation associated with the specimen(s)",DIR(0)="NO^1:"_CNT
"RTN","LRAPKLG",37,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) Q
"RTN","LRAPKLG",38,0)
 I +Y S LRTN=+LRCASE(+Y),CNT=+Y
"RTN","LRAPKLG",39,0)
NOOP I '$D(LRTN) W !!,"No operation selected.",! Q
"RTN","LRAPKLG",40,0)
 S LRCASE=LRTN
"RTN","LRAPKLG",41,0)
 W $$CJ^XLFSTR("Entry from Surgery Case #"_LRTN,IOM),!
"RTN","LRAPKLG",42,0)
DOC S LRDOC=$S($P($G(^SRF(LRTN,"NON")),U)="Y":$P(^("NON"),U,6),1:$P($G(^SRF(LRTN,.1)),U,4))
"RTN","LRAPKLG",43,0)
DISP I $D(LRTN) S LRCASE=LRTN,LRSDATE=$P(^SRF(LRTN,0),U,9) D DISPLAY(LRCASE)
"RTN","LRAPKLG",44,0)
 I $G(LROK) D STORE^LRAPKLG1(LRDFN,LRSS,LRIDT,.LRHDR)
"RTN","LRAPKLG",45,0)
 I '$G(LROK) D END
"RTN","LRAPKLG",46,0)
 Q
"RTN","LRAPKLG",47,0)
LIST ; list cases
"RTN","LRAPKLG",48,0)
 W !
"RTN","LRAPKLG",49,0)
 S LRSCAN=1 I $P($G(^SRF(LRCASE,.2)),U,10)!$P($G(^SRF(LRCASE,.2)),U,12)!($P($G(^SRF(LRCASE,"NON")),U)="Y") K LRSCAN
"RTN","LRAPKLG",50,0)
 I $D(LRSCAN),$D(^SRF(LRCASE,30)),$P(^(30),U) Q
"RTN","LRAPKLG",51,0)
 I $D(LRSCAN),$D(^SRF(LRCASE,31)),$P(^(31),U,8) Q
"RTN","LRAPKLG",52,0)
 I $D(^SRF(LRCASE,37)),$P(^(37),U) Q
"RTN","LRAPKLG",53,0)
 S CNT=+$G(CNT)+1,LRSDATE=$P(^SRF(LRCASE,0),U,9) W !,CNT_". "
"RTN","LRAPKLG",54,0)
 S LRSDX=$$FMTE^XLFDT(LRSDATE,"5P")
"RTN","LRAPKLG",55,0)
CASE W "D/T:"_LRSDX_"  "
"RTN","LRAPKLG",56,0)
 N LRI,LRVAL,LROPS
"RTN","LRAPKLG",57,0)
 S LROPER=$P(^SRF(LRCASE,"OP"),U)
"RTN","LRAPKLG",58,0)
 I $O(^SRF(LRCASE,13,0)) S LROTHER=0 D
"RTN","LRAPKLG",59,0)
 . F  S LROTHER=$O(^SRF(LRCASE,13,LROTHER)) Q:'LROTHER  D OTHER
"RTN","LRAPKLG",60,0)
 S LROPER="Case #"_LRCASE_" >> "_LROPER
"RTN","LRAPKLG",61,0)
 D STATUS^LRAPKLG1(LRCASE)
"RTN","LRAPKLG",62,0)
 S:$L(LROPER)<65 LROPS(1)=LROPER
"RTN","LRAPKLG",63,0)
 I $L(LROPER)>64 S LROPER=LROPER_"  " F LRI=1:1 D LOOK Q:LRVAL(1)=""
"RTN","LRAPKLG",64,0)
 W ?14,LROPS(1) I $D(LROPS(2)) W !,?14,LROPS(2) I $D(LROPS(3)) W !,?14,LROPS(3) W:$D(LROPS(4)) !,?14,LROPS(4)
"RTN","LRAPKLG",65,0)
 S LRCASE(CNT)=LRCASE_U_LRSDX_U_LRSURPHY
"RTN","LRAPKLG",66,0)
 Q
"RTN","LRAPKLG",67,0)
OTHER ; Check for other operations
"RTN","LRAPKLG",68,0)
 ;^DD(130,.42
"RTN","LRAPKLG",69,0)
 S LRLONG=1 I $L(LROPER)+$L($P(^SRF(LRCASE,13,LROTHER,0),U))>235 S LRLONG=0,LROTHER=999,LROPERS=" ..."
"RTN","LRAPKLG",70,0)
 I LRLONG S LROPERS=$P(^SRF(LRCASE,13,LROTHER,0),U)
"RTN","LRAPKLG",71,0)
 S LROPER=LROPER_$S(LROPERS=" ...":LROPERS,1:", "_LROPERS)
"RTN","LRAPKLG",72,0)
 Q
"RTN","LRAPKLG",73,0)
LOOK ; parse out procedures
"RTN","LRAPKLG",74,0)
 S LROPS(LRI)="" F  S LRVAL=$P(LROPER," "),LRVAL(1)=$P(LROPER," ",2,200) Q:LRVAL(1)=""  Q:$L(LROPS(LRI))+$L(LRVAL)'<65  S LROPS(LRI)=LROPS(LRI)_LRVAL_" ",LROPER=LRVAL(1)
"RTN","LRAPKLG",75,0)
 ;
"RTN","LRAPKLG",76,0)
 Q
"RTN","LRAPKLG",77,0)
 ;
"RTN","LRAPKLG",78,0)
DISPLAY(LRCASE) ;Display the Dialog for a Surgery case
"RTN","LRAPKLG",79,0)
 ;Call with Surgery Case #   ^SRF(LRCASE#)
"RTN","LRAPKLG",80,0)
 ;LRHDR array contains the Surgery Package dialog
"RTN","LRAPKLG",81,0)
 ;Where "X" = array subscript
"RTN","LRAPKLG",82,0)
 ;LRHDR(33,X)="Preoperative diagnosis"
"RTN","LRAPKLG",83,0)
 ;LRHDR(34,X)="Post Opertive Diag"
"RTN","LRAPKLG",84,0)
 ;LRHDR(38,X)="Operative Finding"
"RTN","LRAPKLG",85,0)
 ;LRHDR(39,X)="Brief Clinical History" DD(63.08,.013)
"RTN","LRAPKLG",86,0)
 N CNT,DIC,DA,DR,S,LRLN,LRPAGE,IEN,LREND,LRSDOC,VAL
"RTN","LRAPKLG",87,0)
 S $P(LRLN," ",IOM)=" "
"RTN","LRAPKLG",88,0)
 S LRSDOC=$S($P($G(^SRF(LRCASE,"NON")),U)="Y":$P(^("NON"),U,6),1:$P($G(^SRF(LRCASE,.1)),U,4))
"RTN","LRAPKLG",89,0)
 S LREND=0
"RTN","LRAPKLG",90,0)
 D HDR,PRTHDR
"RTN","LRAPKLG",91,0)
 ;
"RTN","LRAPKLG",92,0)
 S LRHDR(1)=$$FMT("      ===== Above From Surgery Case#: "_LRCASE_" =====",IOM)
"RTN","LRAPKLG",93,0)
 S LRHDR(2)=LRLN
"RTN","LRAPKLG",94,0)
 S CNT=0
"RTN","LRAPKLG",95,0)
 ;BRIEF CLINICAL HISTORY:
"RTN","LRAPKLG",96,0)
 I $O(^SRF(LRCASE,39,0)) D
"RTN","LRAPKLG",97,0)
 . S (CNT,CNTX,IEN)=0,LRHDR=$$FMT("     Brief Clinical History",IOM) D
"RTN","LRAPKLG",98,0)
 . . W !,LRHDR,"  ",!
"RTN","LRAPKLG",99,0)
 . . F  S IEN=$O(^SRF(LRCASE,39,IEN)) Q:IEN<1!($G(LREND))  S VAL=^(IEN,0) D
"RTN","LRAPKLG",100,0)
 . . . S VAL=$$FMT(VAL,IOM)
"RTN","LRAPKLG",101,0)
 . . . W VAL,! S (CNTX,CNT)=CNT+1,LRHDR(39,CNT)=VAL
"RTN","LRAPKLG",102,0)
 D PAGE
"RTN","LRAPKLG",103,0)
 Q:$G(LREND)
"RTN","LRAPKLG",104,0)
 I $G(CNTX) D FOOT(39,CNTX)
"RTN","LRAPKLG",105,0)
 ;
"RTN","LRAPKLG",106,0)
 ;Pre-Operative Diagnosis
"RTN","LRAPKLG",107,0)
 I $P($G(^SRF(LRCASE,33)),U)'="" K CNTX D
"RTN","LRAPKLG",108,0)
 . D PAGE Q:LREND
"RTN","LRAPKLG",109,0)
 . S LRHDR=$$FMT("     Pre-Operative Diagnosis:",IOM),CNTX=0
"RTN","LRAPKLG",110,0)
 . W !,LRHDR,!
"RTN","LRAPKLG",111,0)
 . S CNT=1,VAL=$$FMT($P(^SRF(LRCASE,33),U),IOM),LRHDR(33,CNT)=VAL W VAL,!
"RTN","LRAPKLG",112,0)
 . D PAGE Q:$G(LREND)  S CNTX=CNT
"RTN","LRAPKLG",113,0)
 . N IEN
"RTN","LRAPKLG",114,0)
 . Q:'$O(^SRF(LRCASE,14,0))  ;Get additional Preop diagnosis
"RTN","LRAPKLG",115,0)
 . S LRHDR=$$FMT("        Additional Pre-Operative Diagnosis",IOM) W !,LRHDR,!
"RTN","LRAPKLG",116,0)
 . S IEN=0 F  S IEN=$O(^SRF(LRCASE,14,IEN)) Q:IEN<1!($G(LREND))  D
"RTN","LRAPKLG",117,0)
 . . Q:$P($G(^SRF(LRCASE,14,IEN,0)),U)=""
"RTN","LRAPKLG",118,0)
 . . S VAL=$$FMT($P(^SRF(LRCASE,14,IEN,0),U),IOM)
"RTN","LRAPKLG",119,0)
 . . S (CNTX,CNT)=CNT+1,LRHDR(33,CNT)=VAL W VAL,!
"RTN","LRAPKLG",120,0)
 . . D PAGE
"RTN","LRAPKLG",121,0)
 Q:$G(LREND)
"RTN","LRAPKLG",122,0)
 I $G(CNTX) D FOOT(33,CNTX)
"RTN","LRAPKLG",123,0)
 ;Operative findings
"RTN","LRAPKLG",124,0)
 S (CNT,CNTX,IEN)=0,LRHDR=$$FMT("     Operative Finding",IOM) I $O(^SRF(LRCASE,38,0)) D
"RTN","LRAPKLG",125,0)
 . D PAGE Q:$G(LREND)
"RTN","LRAPKLG",126,0)
 . W !,LRHDR,"  ",!
"RTN","LRAPKLG",127,0)
 . D PAGE Q:$G(LREND)
"RTN","LRAPKLG",128,0)
 . F  S IEN=$O(^SRF(LRCASE,38,IEN)) Q:IEN<1!($G(LREND))  S VAL=^(IEN,0) D
"RTN","LRAPKLG",129,0)
 . . S VAL=$$FMT(VAL,IOM)
"RTN","LRAPKLG",130,0)
 . . W VAL,! S (CNTX,CNT)=CNT+1,LRHDR(38,CNT)=VAL D PAGE Q:$G(LREND)
"RTN","LRAPKLG",131,0)
 I $G(CNTX) D FOOT(38,CNTX)
"RTN","LRAPKLG",132,0)
 Q:$G(LREND)
"RTN","LRAPKLG",133,0)
 K CNT,CNTX,VAL
"RTN","LRAPKLG",134,0)
 ;Post Operative Diagnosis
"RTN","LRAPKLG",135,0)
 I $P($G(^SRF(LRCASE,34)),U)'="" S CNT=1 D
"RTN","LRAPKLG",136,0)
 . S VAL=$$FMT($P(^SRF(LRCASE,34),U),IOM)
"RTN","LRAPKLG",137,0)
 . S LRHDR(34,CNT)=VAL
"RTN","LRAPKLG",138,0)
 . S LRHDR=$$FMT("     Post Operative Diagnosis",IOM),CNTX=CNT
"RTN","LRAPKLG",139,0)
 . D PAGE Q:LREND
"RTN","LRAPKLG",140,0)
 . W !,LRHDR,!
"RTN","LRAPKLG",141,0)
 . W VAL,!
"RTN","LRAPKLG",142,0)
 . N IEN
"RTN","LRAPKLG",143,0)
 . S IEN=0 F  S IEN=$O(^SRF(LRCASE,15,IEN)) Q:IEN<1!$G(LREND)  D
"RTN","LRAPKLG",144,0)
 . . Q:$P($G(^SRF(LRCASE,15,IEN,0)),U)=""
"RTN","LRAPKLG",145,0)
 . . S VAL=$$FMT($P(^SRF(LRCASE,15,IEN,0),U),IOM)
"RTN","LRAPKLG",146,0)
 . . S (CNTX,CNT)=CNT+1,LRHDR(34,CNT)=VAL
"RTN","LRAPKLG",147,0)
 . . W VAL,! D PAGE
"RTN","LRAPKLG",148,0)
 Q:$G(LREND)
"RTN","LRAPKLG",149,0)
 I $G(CNTX) D FOOT(34,CNTX)
"RTN","LRAPKLG",150,0)
 D YN("Move this information into Laboratory Patient Record File")
"RTN","LRAPKLG",151,0)
 Q
"RTN","LRAPKLG",152,0)
PAGE ;End of page prompt
"RTN","LRAPKLG",153,0)
 Q:$Y<(IOSL-2)
"RTN","LRAPKLG",154,0)
 S LREND=0
"RTN","LRAPKLG",155,0)
 K DTOUT,DUOUT,DIRUT,Y,DIR
"RTN","LRAPKLG",156,0)
 S DIR(0)="E" D ^DIR
"RTN","LRAPKLG",157,0)
 I Y=0 S LREND=1 Q
"RTN","LRAPKLG",158,0)
 I Y=1 D PRTHDR
"RTN","LRAPKLG",159,0)
 Q
"RTN","LRAPKLG",160,0)
HDR ;Setup Header information
"RTN","LRAPKLG",161,0)
 S LRSURPHY="DR:"_$$GET1^DIQ(200,LRSDOC_",",.01,"ANS","ERR")
"RTN","LRAPKLG",162,0)
 S LRSURGDT=$$FMTE^XLFDT($P(^SRF(LRCASE,0),U,9),"1P")_"  DOB: "_$$FMTE^XLFDT(DOB,2)
"RTN","LRAPKLG",163,0)
 S LRHDR(0)=PNM_" SSN:"_SSN_" CASE# "_LRCASE
"RTN","LRAPKLG",164,0)
 S LRHDR(0,1)=" Surgery Date:"_LRSURGDT_" "_LRSURPHY
"RTN","LRAPKLG",165,0)
 Q
"RTN","LRAPKLG",166,0)
PRTHDR ; Print report header info
"RTN","LRAPKLG",167,0)
 S LRPAGE=$G(LRPAGE)+1
"RTN","LRAPKLG",168,0)
 W:'$G(LRFHDR) !!!
"RTN","LRAPKLG",169,0)
 W:$G(LRFHDR) @IOF
"RTN","LRAPKLG",170,0)
 S LRFHDR=1
"RTN","LRAPKLG",171,0)
 W $$CJ^XLFSTR("PG:"_LRPAGE_"  "_LRHDR(0),IOM)
"RTN","LRAPKLG",172,0)
 W !,$$CJ^XLFSTR(LRHDR(0,1),IOM),!
"RTN","LRAPKLG",173,0)
 Q
"RTN","LRAPKLG",174,0)
YN(STR) ;Yes No response
"RTN","LRAPKLG",175,0)
 N DTOUT,DUOUT,DIRUT,X,Y,DIR
"RTN","LRAPKLG",176,0)
 S LROK=0,LREND=1
"RTN","LRAPKLG",177,0)
 S DIR(0)="Y",DIR("A")=STR,DIR("B")="No"
"RTN","LRAPKLG",178,0)
 D ^DIR
"RTN","LRAPKLG",179,0)
 S:+$G(Y)=1 LROK=1,LREND=0
"RTN","LRAPKLG",180,0)
 Q
"RTN","LRAPKLG",181,0)
END ;User Termination Response
"RTN","LRAPKLG",182,0)
 W !,$$CJ^XLFSTR("No Surgery Data was transferred",IOM),!
"RTN","LRAPKLG",183,0)
 Q
"RTN","LRAPKLG",184,0)
FMT(VAL,IOM) ;Format line to IOM length
"RTN","LRAPKLG",185,0)
 Q VAL
"RTN","LRAPKLG",186,0)
 W "+" I $L(VAL)>71 Q VAL
"RTN","LRAPKLG",187,0)
 I VAL="" S VAL=" "
"RTN","LRAPKLG",188,0)
 S VAL=VAL_$E(LRLN,$L(VAL),71)
"RTN","LRAPKLG",189,0)
 Q VAL
"RTN","LRAPKLG",190,0)
FOOT(SEG,LRX) ;Add Surgery case # field separator
"RTN","LRAPKLG",191,0)
 S LRX=LRX+1,LRHDR(SEG,LRX)=LRHDR(1)
"RTN","LRAPKLG",192,0)
 S LRX=LRX+1,LRHDR(SEG,LRX)=LRHDR(2)
"RTN","LRAPKLG",193,0)
 Q
"RTN","LRAPKLG1")
0^30^B8921740^n/a
"RTN","LRAPKLG1",1,0)
LRAPKLG1 ;DSS/FHS - STATUS OF SURGICAL CASE ;08/10/16  09:35
"RTN","LRAPKLG1",2,0)
 ;;5.2;LAB SERVICE;**462**;Sep 27, 1994;Build 44
"RTN","LRAPKLG1",3,0)
 ; Supported calls AI #, 5286,103,3615
"RTN","LRAPKLG1",4,0)
STATUS(LRCASE) ; GET Surgery case status
"RTN","LRAPKLG1",5,0)
 N ANS,ERR,LRSDOC
"RTN","LRAPKLG1",6,0)
 S:'$D(LROPER) LROPER=""
"RTN","LRAPKLG1",7,0)
 ;GET SURGEON
"RTN","LRAPKLG1",8,0)
 S LRSDOC=$S($P($G(^SRF(LRCASE,"NON")),U)="Y":$P(^("NON"),U,6),1:$P($G(^SRF(LRCASE,.1)),U,4))
"RTN","LRAPKLG1",9,0)
 S LRSURPHY="DR:"_$$GET1^DIQ(200,LRSDOC_",",.01,"ANS","ERR")
"RTN","LRAPKLG1",10,0)
 I $P($G(^SRF(LRCASE,"NON")),U)="Y" S LROPER=LROPER_$S($P($G(^(30)),U):" (ABORTED)",$P($G(^("NON")),U,5):" (COMPLETED)",1:" (NOT COMPLETE)")_" "_LRSURPHY Q
"RTN","LRAPKLG1",11,0)
 I $P($G(^SRF(LRCASE,30)),U)'="" D CAN Q
"RTN","LRAPKLG1",12,0)
 I $P($G(^SRF(LRCASE,31)),U,8)'="" D CAN Q
"RTN","LRAPKLG1",13,0)
 I $P($G(^SRF(LRCASE,.2)),U,12) S LROPER=LROPER_" (COMPLETED)"_" "_LRSURPHY Q
"RTN","LRAPKLG1",14,0)
 I $D(^SRF(LRCASE,.2)),$P(^(.2),U,12)="" S LRSTAT=0 D SCH I LRSTATUS=0 D REQ Q:LRSTATUS  G NO
"RTN","LRAPKLG1",15,0)
 I '$D(^SRF(LRCASE,.2)) S LRSTAT=0 D SCH I LRSTATUS=0 D REQ Q:LRSTATUS=1  G NO
"RTN","LRAPKLG1",16,0)
 Q
"RTN","LRAPKLG1",17,0)
NO ; not requested or scheduled
"RTN","LRAPKLG1",18,0)
 S LROPER=LROPER_" (NOT COMPLETE)"_" "_LRSURPHY
"RTN","LRAPKLG1",19,0)
 Q
"RTN","LRAPKLG1",20,0)
CAN ; cancelled or aborted
"RTN","LRAPKLG1",21,0)
 N LRV
"RTN","LRAPKLG1",22,0)
 S LRV(.2)=$G(^SRF(LRCASE,.2))
"RTN","LRAPKLG1",23,0)
 I $P(LRV(.2),U)!($P(LRV(.2),U,10)) S LROPER=LROPER_" (ABORTED)"_" "_LRSURPHY Q
"RTN","LRAPKLG1",24,0)
 S LROPER=LROPER_" (CANCELLED)"_" "_LRSURPHY
"RTN","LRAPKLG1",25,0)
 Q
"RTN","LRAPKLG1",26,0)
SCH ; check to see if case is scheduled
"RTN","LRAPKLG1",27,0)
 I '$D(^SRF(LRCASE,31)) S LRSTATUS=0 Q
"RTN","LRAPKLG1",28,0)
 I $P($G(^SRF(LRCASE,31)),U,4)="" S LRSTATUS=0 Q
"RTN","LRAPKLG1",29,0)
 I $P($G(^SRF(LRCASE,31)),U,4) D:LRSTAT=0 TIM0 D:LRSTAT=1 TIM1 S LRSTATUS=1 Q
"RTN","LRAPKLG1",30,0)
 Q
"RTN","LRAPKLG1",31,0)
TIM0 I '$D(^SRF(LRCASE,.2)) S LROPER=LROPER_" (SCHEDULED)"_" "_LRSURPHY Q
"RTN","LRAPKLG1",32,0)
 I $P(^SRF(LRCASE,.2),U,2) S LROPER=LROPER_" (NOT COMPLETE)"_" "_LRSURPHY Q
"RTN","LRAPKLG1",33,0)
 I $P(^SRF(LRCASE,.2),U,2)="" S LROPER=LROPER_" (SCHEDULED)"_" "_LRSURPHY
"RTN","LRAPKLG1",34,0)
 Q
"RTN","LRAPKLG1",35,0)
TIM1 S LROPER=LROPER_" (SCHEDULED)"_" "_LRSURPHY Q
"RTN","LRAPKLG1",36,0)
REQ ; check to see if case has been requested
"RTN","LRAPKLG1",37,0)
 I $D(^SRF(LRCASE,"REQ")),$P(^("REQ"),U)=1,'$D(^SRF(LRCASE,.2)) S LROPER=LROPER_" (REQUESTED)"_" "_LRSURPHY S LRSTATUS=1 Q
"RTN","LRAPKLG1",38,0)
 I $D(^SRF(LRCASE,"REQ")),$P(^("REQ"),U)=1,$D(^SRF(LRCASE,.2)),$P(^(.2),U,2)="" S LROPER=LROPER_" (REQUESTED)"_" "_LRSURPHY S LRSTATUS=1
"RTN","LRAPKLG1",39,0)
 Q
"RTN","LRAPKLG1",40,0)
ABORT ; aborted case
"RTN","LRAPKLG1",41,0)
 S LRABORT=0 I $D(^SRF(LRCASE,.2)),$P(^(.2),U,10)'="" S LRABORT=1
"RTN","LRAPKLG1",42,0)
 Q
"RTN","LRAPKLG1",43,0)
STORE(LRDFN,LRSS,LRIDT,LRDIAL) ;Load the surgery dialog into ^LR(
"RTN","LRAPKLG1",44,0)
 ;LRHDR ARRAY SET IN DISPLAY^LRAPKLG
"RTN","LRAPKLG1",45,0)
 ;Where "X" = array subscript
"RTN","LRAPKLG1",46,0)
 ;LRHDR(33,X)="Preoperative diagnosis"
"RTN","LRAPKLG1",47,0)
 ;LRHDR(34,X)="Post Opertive Diag"
"RTN","LRAPKLG1",48,0)
 ;LRHDR(38,X)="Operative Finding"
"RTN","LRAPKLG1",49,0)
 ;LRHDR(39,X)="Brief Clinical History"
"RTN","LRAPKLG1",50,0)
 Q:'$G(LROK)
"RTN","LRAPKLG1",51,0)
 N ANS,X,Y,IEN,FDA,LRX
"RTN","LRAPKLG1",52,0)
 S LRIEN=LRIDT_","_LRDFN_","
"RTN","LRAPKLG1",53,0)
 S FIL=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:"")
"RTN","LRAPKLG1",54,0)
 Q:FIL=""
"RTN","LRAPKLG1",55,0)
 S IEN=2 F  S IEN=$O(LRDIAL(IEN)) Q:IEN<1  D
"RTN","LRAPKLG1",56,0)
 . S FDA=$S(IEN=39:.013,IEN=33:.014,IEN=38:.015,IEN=34:.016,1:0)
"RTN","LRAPKLG1",57,0)
 . K ERR D WP^DIE(FIL,LRIEN,FDA,"A","LRDIAL("_IEN_")","ERR")
"RTN","LRAPKLG1",58,0)
 W !!,$$CJ^XLFSTR("Surgery data transfer is completed",IOM),!
"RTN","LRAPKLG1",59,0)
 Q
"RTN","LRAPKOE")
0^25^B164456408^n/a
"RTN","LRAPKOE",1,0)
LRAPKOE ;DSS/FHS - CRPS AP LAB ORDER ENTRY AND ACCESSION ;08/30/16  11:10
"RTN","LRAPKOE",2,0)
 ;;5.2;LAB SERVICE;**462**;Sep 27, 1994;Build 44
"RTN","LRAPKOE",3,0)
 ; Supported calls AI #, 5286,103,3615
"RTN","LRAPKOE",4,0)
EN1 ;
"RTN","LRAPKOE",5,0)
 ; Called from EN^LRAPLG
"RTN","LRAPKOE",6,0)
 ; Process CPRS AP Orders
"RTN","LRAPKOE",7,0)
 N ANS,ANSY,CNT,CONTROL,DA,DIC,DIERR,DIR,DIRUT,DOD,DR
"RTN","LRAPKOE",8,0)
 N DTOUT,DUOUT,ERR,FDA,FDAIEN,FIL,FLD,GOT,IEN,IENX,II
"RTN","LRAPKOE",9,0)
 N LR,LRAA,LRACN,LRACN0,LRAP690,LRAPNT,LRAPSPEC
"RTN","LRAPKOE",10,0)
 N LRAPTST,LRC,LRCAPA,LRCAPLOC,LRCHK
"RTN","LRAPKOE",11,0)
 N LRCOL,LRCOM,LRC5,LRDFN,LRDISC,LRDIE,LRDOC,LRDPF,LREND,LRFDA
"RTN","LRAPKOE",12,0)
 N LRFDAIEN,LRI,LRIDT,LRIEN,LRJ,LRLL,LRLLOC,LRLWC,LRMD,LRMSG
"RTN","LRAPKOE",13,0)
 N LRNATURE,LRNLT,LRNODE69,LRNONE,LROD0,LROD1,LROD3,LRODT,LRODT0
"RTN","LRAPKOE",14,0)
 N LROESTAT,LROLLOC,LRORD,LRORDRR,LROOS,LRORD,LRORDRR
"RTN","LRAPKOE",15,0)
 N LRORIFN,LRORNUM,LRORPOV,LRORTYP,LROS,LROSD,LRPRAC,LRPANEL,LRPHY,LRPL
"RTN","LRAPKOE",16,0)
 N LRPROVL,LRRC,LRROD,LRSAMP,LRSD,LRSIT,LRSN,LRSND
"RTN","LRAPKOE",17,0)
 N LRSP,LRSPCOM,LRSPEC,LRSS,LRSTATUS,LRSUBBY,LRSUBMIT
"RTN","LRAPKOE",18,0)
 N LRSVSN,LRT,LRTM7,LRTSORU,LRTST,LRTSTS,LRUID,LRURG,LRVAL,LRWKCD
"RTN","LRAPKOE",19,0)
 N LRWARD,LRWRDS,LRX,LRXX,LRYI,LRZX,M9,NODE,ODT,ORD
"RTN","LRAPKOE",20,0)
 N PNM,RET,S,SN,SSN,TMPDIAL,VA,VADM,VAIN
"RTN","LRAPKOE",21,0)
 N LREND,LRVAL,LRORPROV,LRSUBBY,X,X3,X4,Y
"RTN","LRAPKOE",22,0)
 ;
"RTN","LRAPKOE",23,0)
 N COBR,COBX,IFN,IFN1,LRA,LRACD,LRANC0,LRAU,LRCS,LRD,LRFIRST
"RTN","LRAPKOE",24,0)
 N LRO,LRP,LRSEL,LRSF,LRSOP,LRSTATI,LRSVC,LRTNAM
"RTN","LRAPKOE",25,0)
 N LRU,LRWARDS,ORBMSG,ORCMSG,SRTN,X10,X5,X6,X7,X9,Z1
"RTN","LRAPKOE",26,0)
 S LREND=0
"RTN","LRAPKOE",27,0)
 D CK^LRAP I Y<0 Q
"RTN","LRAPKOE",28,0)
 N X,Y
"RTN","LRAPKOE",29,0)
 S LRLWC="WC"
"RTN","LRAPKOE",30,0)
 ; Select peforming laboratory
"RTN","LRAPKOE",31,0)
 I '$G(LRPL) S LRPL=DUZ(2) S LRVAL=$$SELPL^LRVERA(DUZ(2)) D END:LRVAL<1 Q:LRVAL<1  S LRPL=$S(LRVAL'=DUZ(2):LRVAL,1:DUZ(2))
"RTN","LRAPKOE",32,0)
L5 ;
"RTN","LRAPKOE",33,0)
 Q:$G(LREND)
"RTN","LRAPKOE",34,0)
NEXT ;from LROE1
"RTN","LRAPKOE",35,0)
 K DIR,LRYI,LRAPTST,GOT,LRAPDIAL,LRNODE69,LRSUBMIT,LRPHY,LRAD,LRAA,LRLLOC,LROLLOC,LRSUBBY,LRORPROV D KVAR^LRX
"RTN","LRAPKOE",36,0)
 I $D(LROESTAT) D:$P(LRPARAM,U,14) ^LRCAPV I $G(LREND) K LRLONG,LRPANEL Q
"RTN","LRAPKOE",37,0)
 S (LRODT,X,DT)=$$DT^XLFDT(),LRODT0=$$FMTE^XLFDT(DT,5)
"RTN","LRAPKOE",38,0)
 I '$D(^LRO(69,DT,1,0)) S ^LRO(69,DT,0)=DT,^LRO(69,DT,1,0)="^69.01PA^^",^LRO(69,"B",DT,DT)=""
"RTN","LRAPKOE",39,0)
 I $D(^LAB(69.9,1,"RO")),+$H'=+$P(^("RO"),U) D
"RTN","LRAPKOE",40,0)
 . W $C(7),!,"ROLLOVER ",$S($P(^("RO"),U,2):"IS RUNNING.",1:"HAS NOT RUN.")," ACCESSIONING SHOULDN'T BE DONE NOW.",$C(7),!
"RTN","LRAPKOE",41,0)
 . S DIR("A")="  Are you sure you want to continue",DIR(0)="Y",DIR("B")="No"
"RTN","LRAPKOE",42,0)
 I $T D ^DIR D END:$D(DIRUT) I Y'=1 W !,"OK, try later." D EN1
"RTN","LRAPKOE",43,0)
 S X="T-7",%DT="" D ^%DT S LRTM7=+Y
"RTN","LRAPKOE",44,0)
 K DIC,LRSND,LRSN,LRAPDIAL
"RTN","LRAPKOE",45,0)
 W !!,"Select Order number: " R LRORD:DTIME I LRORD["."!($D(LRLONG)&(LRORD="")) W !,"Wrong format" G EN1
"RTN","LRAPKOE",46,0)
 W @IOF S M9=0 G END:LRORD="^"  I LRORD="" W !?5,"No Order Number entered use standard Specimen Log-in process",! Q
"RTN","LRAPKOE",47,0)
 I $L(LRORD)>8 W !,"The order number entered is too long." H 1 G EN1
"RTN","LRAPKOE",48,0)
 S:LRORD?.N LRORD=+LRORD IF LRORD'?.N D QMSG G EN1
"RTN","LRAPKOE",49,0)
 I '$D(^LRO(69,"C",LRORD)) W !!?10,LRORD_" Does not exist, select another ",$C(7),! G EN1
"RTN","LRAPKOE",50,0)
 L +^LRO(69,"C",LRORD):$G(DILOCKTM,3)
"RTN","LRAPKOE",51,0)
 I '$T W !?5,"Someone else is editing this Order",!!,$C(7) G EN1
"RTN","LRAPKOE",52,0)
 S (LRCHK,LRNONE)=1,(M9,LRODT)=0
"RTN","LRAPKOE",53,0)
 F  S LRODT=+$O(^LRO(69,"C",LRORD,LRODT)) Q:LRODT<1  D
"RTN","LRAPKOE",54,0)
 . S DA=0 F  S DA=$O(^LRO(69,"C",LRORD,LRODT,DA)) Q:DA<1  S LRCHK=LRCHK-1 S:LRNONE'=2 LRNONE=0 D LROE2
"RTN","LRAPKOE",55,0)
 G:$G(LREND) EN1
"RTN","LRAPKOE",56,0)
 I DOD'="" S Y=DOD D DD^LRX W !,!,?5,@LRVIDO,"Patient ",PNM," died on: ",Y,@LRVIDOF W !
"RTN","LRAPKOE",57,0)
 D  I Y=0!($D(DIRUT)) K DIRUT,DTOUT,DUOUT,Y D KVAR^LRX G EN1
"RTN","LRAPKOE",58,0)
 . K Y
"RTN","LRAPKOE",59,0)
 . S DIR(0)="Y"
"RTN","LRAPKOE",60,0)
 . S DIR("A")="Do you wish to continue with this accession [Yes/No]"
"RTN","LRAPKOE",61,0)
 . S DIR("T")=120
"RTN","LRAPKOE",62,0)
 . D ^DIR K DIR
"RTN","LRAPKOE",63,0)
 I LRNONE=2,LRCHK<1 W !,"The order has already been partially accessioned." H 1
"RTN","LRAPKOE",64,0)
 I LRNONE=2,LRCHK>0 W !,"The order has already been accessioned." H 1 G NEXT
"RTN","LRAPKOE",65,0)
 I LRNONE=1 W !,"No order exists with that number." H 1 G NEXT
"RTN","LRAPKOE",66,0)
 I '$$GOT(LRORD) W !!,"All tests for this order have been canceled.",! G NEXT
"RTN","LRAPKOE",67,0)
 S LRODT=$O(^LRO(69,"C",LRORD,0)),LRSN=$O(^LRO(69,"C",LRORD,LRODT,0))
"RTN","LRAPKOE",68,0)
 I $P($G(^LRO(69,LRODT,1,LRSN,1)),U,4)'="" W !?5,"Specimen already processed" D END G EN1
"RTN","LRAPKOE",69,0)
 K LRPHY D DOC(.LRPHY,"PATHOLOGIST") I $G(LRPHY)<1 W !,"No Pathologist selected" D END G EN1
"RTN","LRAPKOE",70,0)
 S (LRPROVL,X)=+LRPHY D D^LRUA S LRPRAC(1)=X
"RTN","LRAPKOE",71,0)
 D DATE(.LRCDT,"COLLECTION DATE/TIME") I $G(LRCDT)<1 D END G EN1
"RTN","LRAPKOE",72,0)
 S LRURG=9
"RTN","LRAPKOE",73,0)
 S LRNODE69=^LRO(69,LRODT,1,LRSN,0)
"RTN","LRAPKOE",74,0)
 S LRSUBBY="" I $D(^LRO(69,LRODT,1,LRSN,12))#2 S LRSUBBY=^(12) ;SUBMITTED BY
"RTN","LRAPKOE",75,0)
 S LRORNUM=$G(^LRO(69,LRODT,1,LRSN,.1))
"RTN","LRAPKOE",76,0)
 S LRSUBMIT=$P(LRNODE69,U,2),LRSUBMIT=$P(^VA(200,LRSUBMIT,0),U)_U_LRSUBMIT
"RTN","LRAPKOE",77,0)
 S LRORIFN=$P(LRNODE69,U,11),LRORTYP=$P(LRNODE69,U,4)
"RTN","LRAPKOE",78,0)
 S LRORPROV=+$P($G(^LRO(69,LRODT,1,LRSN,11)),U,3) ;Ordering Provider Optional
"RTN","LRAPKOE",79,0)
NEXT2 ;
"RTN","LRAPKOE",80,0)
 S LRAPSPEC="",LRI=0
"RTN","LRAPKOE",81,0)
 F  S LRI=$O(^LRO(69,LRODT,1,LRSN,4,1,1,LRI)) Q:LRI<1  S LRAPSPEC(LRI)=^(LRI,0)
"RTN","LRAPKOE",82,0)
 S LRLLOC=$P(LRNODE69,U,7),LROLLOC=$P(LRNODE69,U,9) S:LRLLOC="" LRLLOC="NO ABRV"
"RTN","LRAPKOE",83,0)
 K LRCOM S LRCOM=""
"RTN","LRAPKOE",84,0)
 N LRYI S LRYI=0 F  S LRYI=$O(^LRO(69,LRODT,1,LRSN,2,1,1,LRYI)) Q:LRYI<1  D
"RTN","LRAPKOE",85,0)
 . S LRCOM(LRYI)=(^(LRYI,0))
"RTN","LRAPKOE",86,0)
 K LRYI K LRAPDIAL
"RTN","LRAPKOE",87,0)
 F LRYI=13,14,15,16 M LRAPDIAL(".0"_LRYI)=^LRO(69,LRODT,1,LRSN,LRYI) K LRAPDIAL(".0"_LRYI,0)
"RTN","LRAPKOE",88,0)
 K LRYI,LRAPTST,LRTST
"RTN","LRAPKOE",89,0)
 S LRYI=0 F  S LRYI=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRYI)) Q:LRYI<1  S (LRTSORU,LRTST)=LRYI,LRAPTST(LRYI)="" D
"RTN","LRAPKOE",90,0)
 . S LRWKCD=+$G(^LAB(60,+LRTST,64)),LRNLT=$P($G(^LAM(LRWKCD,0)),"^",2),II=1
"RTN","LRAPKOE",91,0)
 . N LRI
"RTN","LRAPKOE",92,0)
 . S LRI=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRYI,0))
"RTN","LRAPKOE",93,0)
 . S LRAPTST(LRYI)=$P(^LRO(69,LRODT,1,LRSN,2,LRI,0),U,7) D
"RTN","LRAPKOE",94,0)
 . . S LRSS=$P(^LAB(60,LRYI,0),U,4)
"RTN","LRAPKOE",95,0)
 . . S LRAA=$O(^LRO(68,"B",LRSS,0))
"RTN","LRAPKOE",96,0)
 . . S X=$P(^LRO(68,LRAA,0),U) D ^LRUTL
"RTN","LRAPKOE",97,0)
 K LRDPF D PT^LRX
"RTN","LRAPKOE",98,0)
 K LRYI D KVA^VADPT
"RTN","LRAPKOE",99,0)
 S LRAPDIAL=1,LRAP690=$G(LROD0),LRSTATUS="C"
"RTN","LRAPKOE",100,0)
 S LROUTINE=9,LRAD=DT
"RTN","LRAPKOE",101,0)
 S X=LRSS D ^LRUTL
"RTN","LRAPKOE",102,0)
 D CHECK68^LRWLST1(LRAA,LRAD)
"RTN","LRAPKOE",103,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,1,0)) ^LRO(68,LRAA,1,LRAD,1,0)="^68.02PA^"
"RTN","LRAPKOE",104,0)
 S LRAN=+$P(^LRO(68,LRAA,1,LRAD,1,0),U,3)
"RTN","LRAPKOE",105,0)
 F  Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN))  S LRAN=LRAN+1
"RTN","LRAPKOE",106,0)
 S LRAC=$P(^LRO(68,LRAA,0),U,11)_" "_$S(LRAD["0000":$E(LRAD,2,3),1:$E(LRAD,4,7))_" "_LRAN
"RTN","LRAPKOE",107,0)
 D CRE863^LRAPLG1
"RTN","LRAPKOE",108,0)
 K LRXX S LRXX(LRTST)="" D ORDTST
"RTN","LRAPKOE",109,0)
 D MOVE(LRDFN,LRSS,LRIDT)
"RTN","LRAPKOE",110,0)
 ;
"RTN","LRAPKOE",111,0)
SET68 ;Setup ^LRO(68,LRAA,1,LRAD,1,LRAN
"RTN","LRAPKOE",112,0)
 I LRSS'="AU" D
"RTN","LRAPKOE",113,0)
 .  K LRDIE D CRE868^LRAPLG1
"RTN","LRAPKOE",114,0)
 . S X=^LR(LRDFN,LRSS,LRI,0),LRIDT=LRI,LRCAPLOC=""
"RTN","LRAPKOE",115,0)
 . S LRSD=$P(X,U),LRRC=$P(X,U,10),LRACC=$P(X,U,6),LRMD(1)=$P(X,U,7),LRSIT=$P(X,U,5),LRCS=$P(X,U,11),LRLLOC=$P(X,U,8),LRC(5)=""
"RTN","LRAPKOE",116,0)
 . K LRDIE D EN^LRUWLF
"RTN","LRAPKOE",117,0)
 D UPD68
"RTN","LRAPKOE",118,0)
 L
"RTN","LRAPKOE",119,0)
 Q
"RTN","LRAPKOE",120,0)
 ;
"RTN","LRAPKOE",121,0)
MOVE(LRDFN,LRSS,LRI) ;Move CPRS AP Dialog to ^LR(LRDFN,LRSS,LRI)
"RTN","LRAPKOE",122,0)
 ;Check to see if Surgery Package Dialog is available
"RTN","LRAPKOE",123,0)
 D ^LRAPKLG
"RTN","LRAPKOE",124,0)
 ;
"RTN","LRAPKOE",125,0)
 N ANS,X,Y,ERR,IEN,FDA,FIL,LRX
"RTN","LRAPKOE",126,0)
 S FIL=63.08,FLD=.013
"RTN","LRAPKOE",127,0)
 S IEN=LRI_","_LRDFN_","
"RTN","LRAPKOE",128,0)
 S:LRSS="SP" FIL=63.08
"RTN","LRAPKOE",129,0)
 S:LRSS="CY" FIL=63.09
"RTN","LRAPKOE",130,0)
 S:LRSS="EM" FIL=63.02
"RTN","LRAPKOE",131,0)
 S LRX=0 F  S LRX=$O(LRAPDIAL(LRX)) Q:LRX=""  D
"RTN","LRAPKOE",132,0)
 . K ERR D WP^DIE(FIL,IEN,LRX,"A","LRAPDIAL("_LRX_")","ERR")
"RTN","LRAPKOE",133,0)
 Q
"RTN","LRAPKOE",134,0)
 ;
"RTN","LRAPKOE",135,0)
ORDTST ; Ordered test
"RTN","LRAPKOE",136,0)
 S LRWKCD=+$G(^LAB(60,+$G(LRTST),64)),LRNLT=$P($G(^LAM(LRWKCD,0)),"^",2),II=1
"RTN","LRAPKOE",137,0)
 S XX=0
"RTN","LRAPKOE",138,0)
 F  S XX=$O(LRXX(XX)) Q:'XX  S $P(LRXX(XX),"^",2)=LRNLT_"^"_+LRTST
"RTN","LRAPKOE",139,0)
 Q
"RTN","LRAPKOE",140,0)
 ;
"RTN","LRAPKOE",141,0)
LROE2 ;
"RTN","LRAPKOE",142,0)
 S LREND=0 I '$D(^LRO(69,LRODT,1,DA,0)) Q
"RTN","LRAPKOE",143,0)
 N IEN,FLD,FIL,ANS
"RTN","LRAPKOE",144,0)
 S FIL=69.01,FLD=13,IEN=DA_","_LRODT_","
"RTN","LRAPKOE",145,0)
 S ANS=$$GET1^DIQ(FIL,IEN,13,,"ANS","ERR")
"RTN","LRAPKOE",146,0)
 I $L(ANS) D  Q
"RTN","LRAPKOE",147,0)
 . W !,$$CJ^XLFSTR("The order# "_LRORD_" has been "_ANS,IOM),!
"RTN","LRAPKOE",148,0)
 . W $$CJ^XLFSTR("Select another order",IOM),!
"RTN","LRAPKOE",149,0)
 . S LREND=1
"RTN","LRAPKOE",150,0)
 I $D(^LRO(69,LRODT,1,DA,1)) D
"RTN","LRAPKOE",151,0)
 . I $P(^LRO(69,LRODT,1,DA,1),U,4)="C" S LRNONE=2,LRCHK=LRCHK+1 Q
"RTN","LRAPKOE",152,0)
 . I $P(^LRO(69,LRODT,1,DA,0),U,4)="LC",$P(^LRO(69,LRODT,1,DA,1),U,4)="" S LRNONE=2,LRCHK=LRCHK+1
"RTN","LRAPKOE",153,0)
 ;
"RTN","LRAPKOE",154,0)
 K LRSN
"RTN","LRAPKOE",155,0)
 S (LRSN,LRSN(DA))=+DA,LREND=0
"RTN","LRAPKOE",156,0)
 I '$D(^LRO(69,LRODT,1,LRSN,0)) Q
"RTN","LRAPKOE",157,0)
 I '$O(^LRO(69,LRODT,1,LRSN,13,0)) W !?5,"No AP Dialog for this order" S LREND=1 Q
"RTN","LRAPKOE",158,0)
 S M9=$G(M9)+1,LRZX=^LRO(69,LRODT,1,LRSN,0),LRDFN=+LRZX,LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3)
"RTN","LRAPKOE",159,0)
 D PT^LRX
"RTN","LRAPKOE",160,0)
 I $G(VA("MRN"))]"" D
"RTN","LRAPKOE",161,0)
 .W !,PNM,?30,$G(VA("MRN",0))_": "_SSN
"RTN","LRAPKOE",162,0)
 .W !,?30,"DOB: "_$P($G(VADM(3)),U,2) S LRWRDS=LRWRD
"RTN","LRAPKOE",163,0)
 E  W !,PNM,?30,SSN S LRWRDS=LRWRD
"RTN","LRAPKOE",164,0)
 W ?45,"Requesting location: ",$P(LRZX,U,7) S Y=$P(LRZX,U,5) D DD^LRX W !,"Date/Time Ordered: ",Y,?45,"By: ",$S($D(^VA(200,+$P(LRZX,U,2),0)):$P(^(0),U),1:"")
"RTN","LRAPKOE",165,0)
 S LRSVSN=LRSN D ORDER^LROS S LRSN=LRSVSN
"RTN","LRAPKOE",166,0)
 Q
"RTN","LRAPKOE",167,0)
 ;
"RTN","LRAPKOE",168,0)
 ;
"RTN","LRAPKOE",169,0)
QMSG W !,"Enter the order entry number assigned when the test was ordered."
"RTN","LRAPKOE",170,0)
 W:'$D(LRLONG) !,"If the test has not been ordered, type the RETURN key to exit."
"RTN","LRAPKOE",171,0)
 W !,"To exit, type the ""^"" key and RETURN key."
"RTN","LRAPKOE",172,0)
 Q
"RTN","LRAPKOE",173,0)
 ;
"RTN","LRAPKOE",174,0)
 ;
"RTN","LRAPKOE",175,0)
END K DIR,DIRUT,GOT
"RTN","LRAPKOE",176,0)
 D ^LRORDK,LROEND^LRORDK,STOP^LRCAPV,CLEAN D KVAR^LRX
"RTN","LRAPKOE",177,0)
 S LREND=1
"RTN","LRAPKOE",178,0)
 Q
"RTN","LRAPKOE",179,0)
 ;
"RTN","LRAPKOE",180,0)
 ;
"RTN","LRAPKOE",181,0)
GOT(ORD) ;See if all tests have been canceled
"RTN","LRAPKOE",182,0)
 N I,SN,ODT
"RTN","LRAPKOE",183,0)
 S (GOT,ODT,SN)=0
"RTN","LRAPKOE",184,0)
 F  S ODT=$O(^LRO(69,"C",ORD,ODT)) Q:ODT<1  D
"RTN","LRAPKOE",185,0)
 . S SN=0 F  S SN=$O(^LRO(69,"C",ORD,ODT,SN)) Q:SN<1!(GOT)  D
"RTN","LRAPKOE",186,0)
 . . Q:'$D(^LRO(69,ODT,1,SN,0))
"RTN","LRAPKOE",187,0)
 . . S I=0 F  S I=$O(^LRO(69,ODT,1,SN,2,I)) Q:I<1  I $D(^(I,0)),'$P(^(0),"^",11) S GOT=1 Q
"RTN","LRAPKOE",188,0)
 Q GOT
"RTN","LRAPKOE",189,0)
 ;
"RTN","LRAPKOE",190,0)
UPD68 ; Update #68 with required test data
"RTN","LRAPKOE",191,0)
 N LRFILE,ERR,IEN,LRI,LRIEN,LRCNT
"RTN","LRAPKOE",192,0)
 S LRFILE=68.04,IEN(1)=LRTST
"RTN","LRAPKOE",193,0)
 S LRIEN="?+1,"_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPKOE",194,0)
 S FDA(3,LRFILE,LRIEN,.01)=LRTST
"RTN","LRAPKOE",195,0)
 S FDA(3,LRFILE,LRIEN,1)=LROUTINE
"RTN","LRAPKOE",196,0)
 S FDA(3,LRFILE,LRIEN,8.1)=LRTST
"RTN","LRAPKOE",197,0)
 D UPDATE^DIE("","FDA(3)","IEN","ERR(3)")
"RTN","LRAPKOE",198,0)
 ;
"RTN","LRAPKOE",199,0)
 ;
"RTN","LRAPKOE",200,0)
SPEC68 ; Update #68 with specimen data
"RTN","LRAPKOE",201,0)
 S (LRI,LRCNT)=0 F  S LRI=$O(LRAPSPEC(LRI)) Q:LRI<1  D
"RTN","LRAPKOE",202,0)
 .  K LRFILE,FDAIEN,IEN
"RTN","LRAPKOE",203,0)
 .  S LRFILE=68.05,LRCNT=LRCNT+1
"RTN","LRAPKOE",204,0)
 .  S LRSPEC=$P(LRAPSPEC(LRI),U,6)
"RTN","LRAPKOE",205,0)
 .  S LRSAMP=$P(LRAPSPEC(LRI),U,7)
"RTN","LRAPKOE",206,0)
 .  S FDAIEN="?+"_LRCNT_","_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPKOE",207,0)
 .  S FDA(31,LRFILE,FDAIEN,.01)=LRSPEC
"RTN","LRAPKOE",208,0)
 .  S FDA(31,LRFILE,FDAIEN,1)=LRSAMP
"RTN","LRAPKOE",209,0)
 .  D UPDATE^DIE("","FDA(31)","IEN","LRERR(31)")
"RTN","LRAPKOE",210,0)
 ;
"RTN","LRAPKOE",211,0)
 S LRCAPA=$P(^LAB(69.9,1,0),"^",14)&($P(^LRO(68,LRAA,0),"^",16))
"RTN","LRAPKOE",212,0)
 I $G(LRCAPA) D WKLD ; Stuff workload data into accession.
"RTN","LRAPKOE",213,0)
 ;
"RTN","LRAPKOE",214,0)
 D LR7OB1 ;;Update CPRS to active status
"RTN","LRAPKOE",215,0)
 ;
"RTN","LRAPKOE",216,0)
 D LR7OFAO ;Update ^LRO(69 with accession data.
"RTN","LRAPKOE",217,0)
 ;
"RTN","LRAPKOE",218,0)
 D SPEC63(LRDFN,LRSS,LRIDT,.LRAPSPEC) ;Load AP Specimens into ^LR(
"RTN","LRAPKOE",219,0)
 ;
"RTN","LRAPKOE",220,0)
 D LRCOM(LRDFN,LRSS,LRIDT,.LRCOM) ; Store comments into ^LR(
"RTN","LRAPKOE",221,0)
 ;
"RTN","LRAPKOE",222,0)
 D ORUT^LRWLST11 ;Populate the ^LR(LRDFN,LRSS,LRIDT,"ORUT" with test data
"RTN","LRAPKOE",223,0)
 ;
"RTN","LRAPKOE",224,0)
 D DIS63(LRDFN,LRSS,LRIDT) ; Display ^LR(LRDFN,LRSS,LRIDT) data.
"RTN","LRAPKOE",225,0)
 ;
"RTN","LRAPKOE",226,0)
 W !,$$CJ^XLFSTR("****  Enter Next Order ****",IOM),!
"RTN","LRAPKOE",227,0)
 Q
"RTN","LRAPKOE",228,0)
DOC(RET,LABEL) ; Return provider
"RTN","LRAPKOE",229,0)
 ;IN = RET by reference
"RTN","LRAPKOE",230,0)
 ;     Label is the prompt the user will see
"RTN","LRAPKOE",231,0)
 ;OUT = LREND=1 if user fails to answer the prompt correctly
"RTN","LRAPKOE",232,0)
 ;      RET = +y
"RTN","LRAPKOE",233,0)
 ;      RET(0) = IEN^.01 FIELD
"RTN","LRAPKOE",234,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT
"RTN","LRAPKOE",235,0)
 S DIR(0)="P^200:EQMF",LREND=0
"RTN","LRAPKOE",236,0)
 S DIR("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))"
"RTN","LRAPKOE",237,0)
 S DIR("A")=LABEL
"RTN","LRAPKOE",238,0)
 D ^DIR
"RTN","LRAPKOE",239,0)
 I Y<1 S LREND=1 Q
"RTN","LRAPKOE",240,0)
 S RET=+Y,RET(0)=Y
"RTN","LRAPKOE",241,0)
 Q
"RTN","LRAPKOE",242,0)
DATE(RET,LABEL) ;
"RTN","LRAPKOE",243,0)
 ;
"RTN","LRAPKOE",244,0)
 ;IN = RET by reference
"RTN","LRAPKOE",245,0)
 ;     Label is the prompt the user will see
"RTN","LRAPKOE",246,0)
 ;OUT = LREND=1 if user fails to answer the prompt correctly
"RTN","LRAPKOE",247,0)
 ;      RET = Y
"RTN","LRAPKOE",248,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT
"RTN","LRAPKOE",249,0)
 S LREND=0,DIR("A")=LABEL,DIR("?")="Date can not be in the future"
"RTN","LRAPKOE",250,0)
 S DIR(0)="D^:-NOW:EXT"
"RTN","LRAPKOE",251,0)
 D ^DIR
"RTN","LRAPKOE",252,0)
 I Y<1 S LREND=1
"RTN","LRAPKOE",253,0)
 S RET=Y
"RTN","LRAPKOE",254,0)
 Q
"RTN","LRAPKOE",255,0)
DA(Y) ; Returns date in eye-readable month format
"RTN","LRAPKOE",256,0)
 Q $$FMTE^XLFDT(Y,"M")
"RTN","LRAPKOE",257,0)
 Q
"RTN","LRAPKOE",258,0)
LR7OB1 ;Update CPRS to active status
"RTN","LRAPKOE",259,0)
 K DIERR,IEN,LRFDA,ERR
"RTN","LRAPKOE",260,0)
 K ERR
"RTN","LRAPKOE",261,0)
 S LRORD=+$G(^LRO(69,LRODT,1,LRSN,.1))
"RTN","LRAPKOE",262,0)
 S IEN=LRSN_","_LRODT_","
"RTN","LRAPKOE",263,0)
 I '$G(^LRO(69,LRODT,1,LRSN,1)) D
"RTN","LRAPKOE",264,0)
 . S LRFDA(1,69.01,IEN,10)=+$G(LRCDT,$$NOW^XLFDT)
"RTN","LRAPKOE",265,0)
 . S LRFDA(1,69.01,IEN,12)=DUZ
"RTN","LRAPKOE",266,0)
 . S LRFDA(1,69.01,IEN,13)="C"
"RTN","LRAPKOE",267,0)
 . I $G(LRPL) S LRFDA(1,69.01,IEN,25)=+$G(LRPL)
"RTN","LRAPKOE",268,0)
 . S LRFDA(1,69.01,IEN,20)=LRNT
"RTN","LRAPKOE",269,0)
 . D UPDATE^DIE("KS","LRFDA(1)","IEN","ERR")
"RTN","LRAPKOE",270,0)
 K ^LRO(69,"AA",LRODT_"|"_LRSN) ;DD 69.01,13 is incorrect
"RTN","LRAPKOE",271,0)
 S ^LRO(69,"AA",LRORD,LRODT_"|"_LRSN)=""
"RTN","LRAPKOE",272,0)
 ;Update status in OR(100,
"RTN","LRAPKOE",273,0)
 S LRORIFN=+$P($G(^LRO(69,LRODT,1,LRSN,2,1,0)),"^",7) D
"RTN","LRAPKOE",274,0)
 . S CONTROL=$S($G(LRORIFN):"SC",1:"SN")
"RTN","LRAPKOE",275,0)
 . D NEW^LR7OB1(LRODT,LRSN,CONTROL,,,6)
"RTN","LRAPKOE",276,0)
 Q
"RTN","LRAPKOE",277,0)
LR7OFAO ;Update ^LRO(69 with accession data.
"RTN","LRAPKOE",278,0)
   ;
"RTN","LRAPKOE",279,0)
 K IEN,LRFDA,LRFDAIEN,LRMSG,DIERR
"RTN","LRAPKOE",280,0)
 S IEN="?+1,"_LRSN_","_LRODT_","
"RTN","LRAPKOE",281,0)
 S LRFDA(6,69.03,IEN,.01)=LRTST
"RTN","LRAPKOE",282,0)
 I $G(LROUTINE) S LRFDA(6,69.03,IEN,1)=LROUTINE
"RTN","LRAPKOE",283,0)
 S LRFDA(6,69.03,IEN,2)=LRAD
"RTN","LRAPKOE",284,0)
 S LRFDA(6,69.03,IEN,3)=LRAA
"RTN","LRAPKOE",285,0)
 S LRFDA(6,69.03,IEN,4)=LRAN
"RTN","LRAPKOE",286,0)
 S LRFDA(6,69.03,IEN,13)=LRUID
"RTN","LRAPKOE",287,0)
 S LRFDA(6,69.03,IEN,8)="IP"
"RTN","LRAPKOE",288,0)
 S LRFDA(6,69.03,IEN,9)="L"
"RTN","LRAPKOE",289,0)
 D UPDATE^DIE("","LRFDA(6)","LRFDAIEN","LRMSG")
"RTN","LRAPKOE",290,0)
 Q
"RTN","LRAPKOE",291,0)
DIS63(LRDFN,LRSS,LRIDT) ;Display ^LR(LRDFN,LRSS,LRIDT data
"RTN","LRAPKOE",292,0)
 Q:'$G(^LR(LRDFN,LRSS,LRIDT,0))
"RTN","LRAPKOE",293,0)
 W @IOF,!!,$$CJ^XLFSTR("-------------------------------------",IOM),!
"RTN","LRAPKOE",294,0)
 W $$CJ^XLFSTR("Display of CPRS data in LAB DATA file",IOM),!
"RTN","LRAPKOE",295,0)
 N ANS,DIC,DA,DR,ERR,CNT,ID,IEN,LREND,LRFILE,LRPAGE,S
"RTN","LRAPKOE",296,0)
 S DA=LRIDT,DA(1)=LRDFN,LREND=0
"RTN","LRAPKOE",297,0)
 S DIC="^LR("_LRDFN_","_""""_LRSS_""""_",",DR=0,S=1
"RTN","LRAPKOE",298,0)
 D EN^DIQ S LRPAGE=S
"RTN","LRAPKOE",299,0)
 S LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:0)
"RTN","LRAPKOE",300,0)
 S IEN=DA_","_DA(1)_","
"RTN","LRAPKOE",301,0)
 D GETS^DIQ(LRFILE,IEN,".01:16","ERRZ","ANS","ERR")
"RTN","LRAPKOE",302,0)
 F ID="BRIEF CLINICAL HISTORY","PREOPERATIVE DIAGNOSIS","OPERATIVE FINDINGS","POSTOPERATIVE DIAGNOSIS" Q:$G(LREND)  D
"RTN","LRAPKOE",303,0)
 . I $O(ANS(LRFILE,IEN,ID,0)) W !?5,ID_":" D PAGE Q:$G(LREND)  D
"RTN","LRAPKOE",304,0)
 . . S CNT=0 F  S CNT=$O(ANS(LRFILE,IEN,ID,CNT)) Q:CNT<1!($G(LREND))  D
"RTN","LRAPKOE",305,0)
 . . . W !,ANS(LRFILE,IEN,ID,CNT,0) D PAGE
"RTN","LRAPKOE",306,0)
 W:'$G(LREND) !!,$$CJ^XLFSTR("--- End of CPRS data in LAB DATA file ---",IOM),!
"RTN","LRAPKOE",307,0)
 Q
"RTN","LRAPKOE",308,0)
 ;
"RTN","LRAPKOE",309,0)
SPEC63(LRDFN,LRSS,LRIDT,LRAPSPEC) ;Load AP Specimens into ^LR(
"RTN","LRAPKOE",310,0)
    ; INPUT  LRAPSPEC(1)="CERVICAL CYTOLOGIC MATERIAL,Thin Prep^^^^^6242^55"
"RTN","LRAPKOE",311,0)
 ;
"RTN","LRAPKOE",312,0)
 K LRFDA,IEN,IENX,ERR,ERR2,WPIEN68,NODE,ANS,ANSY,LRSP,LRCOL
"RTN","LRAPKOE",313,0)
 K LRJ,NODE,LRFILE,LRSPCOM,LRSPEC,LRSAMP
"RTN","LRAPKOE",314,0)
 ;
"RTN","LRAPKOE",315,0)
 Q:LRSS="AU"!(LRSS="BB")
"RTN","LRAPKOE",316,0)
 S LRFILE=$S(LRSS="SP":63.812,LRSS="CY":63.902,LRSS="EM":63.202,1:0)
"RTN","LRAPKOE",317,0)
 S IEN="+1,"_LRIDT_","_LRDFN_","
"RTN","LRAPKOE",318,0)
 S:'$G(IENX) IENX=0 F  S IENX=$O(LRAPSPEC(IENX)) Q:IENX<1  D
"RTN","LRAPKOE",319,0)
 . S NODE=LRAPSPEC(IENX),LRSPCOM=$P(NODE,U),LRSPEC=+$P(NODE,U,6),LRSAMP=$P(NODE,U,7)
"RTN","LRAPKOE",320,0)
 . Q:$S('LRSPEC:1,'LRSAMP:1,1:0)
"RTN","LRAPKOE",321,0)
 . K LRFDA,ERR,ANSY
"RTN","LRAPKOE",322,0)
 . S LRFDA(2,LRFILE,IEN,.01)=LRSPCOM ;Specimen Description
"RTN","LRAPKOE",323,0)
 . S LRFDA(2,LRFILE,IEN,.06)=LRSPEC ;Specimen  ^LAB(61,LRSP
"RTN","LRAPKOE",324,0)
 . S LRFDA(2,LRFILE,IEN,.07)=LRSAMP ; Collection Sample ^LAB(62,LRCOL
"RTN","LRAPKOE",325,0)
 . D UPDATE^DIE("KS","LRFDA(2)","ANSY(1)","ERR")
"RTN","LRAPKOE",326,0)
 Q
"RTN","LRAPKOE",327,0)
LRCOM(LRDFN,LRSS,LRIDT,LRCOM) ;Store Comments into ^LR(
"RTN","LRAPKOE",328,0)
 ;IN   LRCOM(1)="~For Test: GYNECOLOGY"
"RTN","LRAPKOE",329,0)
 K LRFILE,LRFDA,IEN,CNT
"RTN","LRAPKOE",330,0)
 S LRFILE=$S(LRSS="CH":63.041,LRSS="MI":63.05,LRSS="SP":63.98,LRSS="CY":63.908,LRSS="EM":63.208,1:"")
"RTN","LRAPKOE",331,0)
 Q:'LRFILE
"RTN","LRAPKOE",332,0)
 S IEN="+1,"_LRIDT_","_LRDFN_",",CNT=0
"RTN","LRAPKOE",333,0)
 F  S CNT=$O(LRCOM(CNT)) Q:CNT<1  D
"RTN","LRAPKOE",334,0)
 . K LRFDA,ERR
"RTN","LRAPKOE",335,0)
 . S LRFDA(9,LRFILE,IEN,.01)=LRCOM(CNT)
"RTN","LRAPKOE",336,0)
 . D UPDATE^DIE("KS","LRFDA(9)","","ERR")
"RTN","LRAPKOE",337,0)
 Q
"RTN","LRAPKOE",338,0)
CLEAN ;Kill variable
"RTN","LRAPKOE",339,0)
 Q
"RTN","LRAPKOE",340,0)
WKLD ;Setup workload info
"RTN","LRAPKOE",341,0)
 ;
"RTN","LRAPKOE",342,0)
 N LR,LRI,LRK,LRRC,LRT,LRW
"RTN","LRAPKOE",343,0)
 S LRI=LRIDT
"RTN","LRAPKOE",344,0)
 S LRRC=$S($G(LRCDT):LRCDT,1:$$NOW^XLFDT)
"RTN","LRAPKOE",345,0)
 S LRCAPA=$P(^LAB(69.9,1,0),"^",14)&($P(^LRO(68,LRAA,0),"^",16))
"RTN","LRAPKOE",346,0)
 ;
"RTN","LRAPKOE",347,0)
 S LR("L")=LRSS_"^LRAP" I LRCAPA,"AUSP"[LRSS S X=$S(LRSS="SP":"H & E STAIN",1:"AUTOPSY H & E") D X^LRUWK I $D(X) S LRW("H&E")=LRT D ^LRAPSWK
"RTN","LRAPKOE",348,0)
 ;
"RTN","LRAPKOE",349,0)
 I LRCAPA,LRSS="EM" S X="THICK SECTION EM" D X^LRUWK I $D(X) S X=11 D SET1 S LRW("SS")=LRT_U_X S X="GRID EM" D X^LRUWK I $D(X) S X=12 D SET1 S LRW("G")=LRT_U_X D ^LRAPSWK
"RTN","LRAPKOE",350,0)
 ;
"RTN","LRAPKOE",351,0)
 I LRCAPA D
"RTN","LRAPKOE",352,0)
 . K LRT S LRT=0 F  S LRT=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT)) Q:LRT<1  D
"RTN","LRAPKOE",353,0)
 . . Q:$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,0),U,2)>49
"RTN","LRAPKOE",354,0)
 . . I LRSS="CY" D ^LRAPCWK
"RTN","LRAPKOE",355,0)
 . . I LRSS?1(1"SP",1"EM") D ^LRAPSWK,^LRSPGD
"RTN","LRAPKOE",356,0)
 ;
"RTN","LRAPKOE",357,0)
 Q
"RTN","LRAPKOE",358,0)
SET1 S X=$P($G(^LRO(69.2,LRAA,0)),"^",X) S:'X X=1
"RTN","LRAPKOE",359,0)
 Q
"RTN","LRAPKOE",360,0)
PAGE ;Page Prompt
"RTN","LRAPKOE",361,0)
 Q:$E(IOST,1)'="C"
"RTN","LRAPKOE",362,0)
 S LRPAGE=$G(LRPAGE)+1,LREND=0 Q:LRPAGE<(IOSL-2)
"RTN","LRAPKOE",363,0)
 S DIR(0)="E" D ^DIR K DIR I $G(Y)=0 S LREND=1 Q
"RTN","LRAPKOE",364,0)
 S LRPAGE=2 W @IOF
"RTN","LRAPKOE",365,0)
 Q
"RTN","LRAPKOE1")
0^29^B1258642^n/a
"RTN","LRAPKOE1",1,0)
LRAPKOE1 ;DSS/FHS - AP LAB ORDER ENTRY CONT ;06/20/16  09:20
"RTN","LRAPKOE1",2,0)
 ;;5.2;LAB SERVICE;**462**;Sep 27, 1994;Build 44
"RTN","LRAPKOE1",3,0)
 ;Reference to ^DIC(130) Supported by ICR #5268
"RTN","LRAPKOE1",4,0)
 ; Reference to DISP^SROSPLG supported by IA #893
"RTN","LRAPKOE1",5,0)
 Q
"RTN","LRAPKOE1",6,0)
DIQ(FILE,DA) ;
"RTN","LRAPKOE1",7,0)
 K ARR,IEN
"RTN","LRAPKOE1",8,0)
 D GETS^DIQ(FILE,DA_",",".01;.011;.02;.09;.14;.164;33;34;59;60","","ARR")
"RTN","LRAPKOE1",9,0)
 S DA=DA_","
"RTN","LRAPKOE1",10,0)
 I $O(ARR(FILE,DA,60,0)) D
"RTN","LRAPKOE1",11,0)
 . W !,"Brief Clinical History:"
"RTN","LRAPKOE1",12,0)
 S IEN=0 F  S IEN=$O(ARR(FILE,DA,60,IEN)) Q:IEN<1  D
"RTN","LRAPKOE1",13,0)
 . W !,ARR(FILE,DA,60,IEN)
"RTN","LRAPKOE1",14,0)
 I ARR(FILE,DA,33)]"" D
"RTN","LRAPKOE1",15,0)
 . W !!,"Principle Diagnose: ",ARR(FILE,DA,33)
"RTN","LRAPKOE1",16,0)
 I $O(ARR(FILE,DA,59,0)) D
"RTN","LRAPKOE1",17,0)
 . W !!,"Operative Finding:"
"RTN","LRAPKOE1",18,0)
 . S IEN=0 F  S IEN=$O(ARR(FILE,DA,60,IEN)) Q:IEN<1  D
"RTN","LRAPKOE1",19,0)
 . . W !,ARR(FILE,DA,60,IEN)
"RTN","LRAPKOE1",20,0)
 I ARR(FILE,DA,34)]"" D
"RTN","LRAPKOE1",21,0)
 . W !!,"Post Operative Finding:",!,ARR(FILE,DA,34)
"RTN","LRAPKOE1",22,0)
 W !
"RTN","LRAPKOE1",23,0)
 Q
"RTN","LRAPKOE1",24,0)
SPLG ;Get surgery case #
"RTN","LRAPKOE1",25,0)
 ;S DFN=22850,LRDFN=485918,LRODT=3160419
"RTN","LRAPKOE1",26,0)
 D ^LRAPKLG
"RTN","LRAPKOE1",27,0)
 ;D:$G(SRTN) DIQ(130,SRTN)
"RTN","LRAPKOE1",28,0)
 Q
"RTN","LRAPKOE1",29,0)
ENDIQ(FILE,DA,DR) ;
"RTN","LRAPKOE1",30,0)
 D EN^DIQ
"RTN","LRAPKOE1",31,0)
 Q
"RTN","LRAPKOEU")
0^26^B7473474^n/a
"RTN","LRAPKOEU",1,0)
LRAPKOEU ;DSS/FHS - AP CPRS DIALOG UTILITIES ROUTINE ; 3/4/16 4:02pm
"RTN","LRAPKOEU",2,0)
 ;;5.2;LAB SERVICE;**462**;Sep 27, 1994;Build 44
"RTN","LRAPKOEU",3,0)
 Q
"RTN","LRAPKOEU",4,0)
 ;
"RTN","LRAPKOEU",5,0)
PRT ; Entry point for print File #60 AP CPRS entries.
"RTN","LRAPKOEU",6,0)
 N I,J,X,Y,DA,DIC,DIE,DIR,DTOUT,DUOUT,DIRUT,DR,AV1,AV2,AV3,J,VAL,LRPAG,LRY
"RTN","LRAPKOEU",7,0)
 N LREND,LRTST,LRSPEC,LRSCR,LRX,LINE,%ZIS,POP,I
"RTN","LRAPKOEU",8,0)
 N ZTRTN,ZTIO,ZTDESC,ZTSAVE,ZTSK
"RTN","LRAPKOEU",9,0)
 W @(IOF)
"RTN","LRAPKOEU",10,0)
 I '$O(^LAB(60,"AV1",0)) D  Q
"RTN","LRAPKOEU",11,0)
 . W !,"There are no AP CPRS definitions in the file"
"RTN","LRAPKOEU",12,0)
 S DIR(0)="SO^1:Laboratory Test (#60);2:CPRS AP Screen (#67.91)"
"RTN","LRAPKOEU",13,0)
 S DIR("A")="Sort Report by "
"RTN","LRAPKOEU",14,0)
 S DIR("?")="How do you want the report to be sorted"
"RTN","LRAPKOEU",15,0)
 D ^DIR
"RTN","LRAPKOEU",16,0)
 S LRY=Y_","_Y(0) ;W !,Y,"  ",Y(0),LREND=0
"RTN","LRAPKOEU",17,0)
 S %ZIS="QN",%ZIS("A")="Print on what Device ",%ZIS("B")="HOME"
"RTN","LRAPKOEU",18,0)
 D ^%ZIS K %ZIS G:$G(POP) PRTEND
"RTN","LRAPKOEU",19,0)
 I IO'=IO(0)!($D(IO("Q"))) D  G PRTEND
"RTN","LRAPKOEU",20,0)
 . S ZTRTN="PRTTSK^LRAPKOEU",ZTIO="ION",ZTDESC="PRINT CPRS AP DIALOG LISTING "_Y(0)
"RTN","LRAPKOEU",21,0)
 . S ZTSAVE("LRY*")="" D ^%ZTLOAD,^%ZISC
"RTN","LRAPKOEU",22,0)
 . W !,$S($G(ZTSK):"Task # "_ZTSK,11:"Task Error")
"RTN","LRAPKOEU",23,0)
PRTTSK ;Entry point for TASK Printing
"RTN","LRAPKOEU",24,0)
 S VAL="^LAB(60,""AV1"")",LRPAG=0,LINE=0
"RTN","LRAPKOEU",25,0)
 F  S VAL=$Q(@VAL) Q:$QS(VAL,2)'="AV1"  D
"RTN","LRAPKOEU",26,0)
 . I +LRY=1 S AV1($P(^LAB(60,$QS(VAL,3),0),U)_"["_$QS(VAL,3)_"]",$P(^LAB(69.71,$QS(VAL,4),0),U))=""
"RTN","LRAPKOEU",27,0)
 . I +LRY=2 S AV2($P(^LAB(69.71,$QS(VAL,4),0),U),$P(^LAB(60,$QS(VAL,3),0),U)_"["_$QS(VAL,3)_"]")=""
"RTN","LRAPKOEU",28,0)
PO ;Print out put
"RTN","LRAPKOEU",29,0)
 S LINE=1 I +LRY=1 D HDR1  D  ;Lab Test, CPRS Screen
"RTN","LRAPKOEU",30,0)
 . S LRTST="" F  S LRTST=$O(AV1(LRTST)) Q:LRTST=""!($G(LREND))  D
"RTN","LRAPKOEU",31,0)
 . . W !!,"TEST NAME: ",LRTST
"RTN","LRAPKOEU",32,0)
 . . S LRSCR=""  F  S LRSCR=$O(AV1(LRTST,LRSCR)) Q:LRSCR=""!($G(LREND))  D
"RTN","LRAPKOEU",33,0)
 . . . W !?5,"CPRS SCREEN: ",LRSCR D EPAGE Q:$G(LREND)
"RTN","LRAPKOEU",34,0)
 I +LRY=2 D HDR1 D  ;CPRS Screen,Lab Test
"RTN","LRAPKOEU",35,0)
 . S LRSCR="" F  S LRSCR=$O(AV2(LRSCR)) Q:LRSCR=""!($G(LREND))  D
"RTN","LRAPKOEU",36,0)
 . . W !!,"CPRS Sreen Name: ",LRSCR  Q:$G(LREND)
"RTN","LRAPKOEU",37,0)
 . . S LRTST="" F  S LRTST=$O(AV2(LRSCR,LRTST)) Q:LRTST=""!($G(LREND))  D
"RTN","LRAPKOEU",38,0)
 . . . W !?5,"Laboratory Test: ",LRTST D EPAGE Q:$G(LREND)
"RTN","LRAPKOEU",39,0)
 W !,$$CJ^XLFSTR("=================== END OF REPORT ===================",IOM)
"RTN","LRAPKOEU",40,0)
PRTEND ;
"RTN","LRAPKOEU",41,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRAPKOEU",42,0)
 Q
"RTN","LRAPKOEU",43,0)
HDR1 ;
"RTN","LRAPKOEU",44,0)
 ;W @IOF
"RTN","LRAPKOEU",45,0)
 S LRPAG=$G(LRPAG)+1,LINE=3 W !!,$$CJ^XLFSTR("REPORT SORTED BY: "_$P(LRY,",",2)_"               PAGE: "_LRPAG,IOM),!,?10,"[#IEN]" Q
"RTN","LRAPKOEU",46,0)
 ;
"RTN","LRAPKOEU",47,0)
EPAGE ;Line counter
"RTN","LRAPKOEU",48,0)
 S LINE=$G(LINE)+3 Q:LINE<(IOSL-3)
"RTN","LRAPKOEU",49,0)
 K DIR,DTOUT,DUOUT,DIRUT,Y
"RTN","LRAPKOEU",50,0)
 S LINE=2 W !
"RTN","LRAPKOEU",51,0)
 I $E(IOST,1)="C" S DIR(0)="E" D ^DIR K DIR I $G(Y)=0 S LREND=1 Q
"RTN","LRAPKOEU",52,0)
 D HDR1
"RTN","LRAPKOEU",53,0)
 Q
"RTN","LRAPLG")
0^34^B12374267^B7969847
"RTN","LRAPLG",1,0)
LRAPLG ;AVAMC/REG/WTY - AP LOG-IN ;08/23/16  10:15
"RTN","LRAPLG",2,0)
 ;;5.2;LAB SERVICE;**72,201,259,462,**;Sep 27, 1994;Build 44
"RTN","LRAPLG",3,0)
EN ;
"RTN","LRAPLG",4,0)
 ;;*
"RTN","LRAPLG",5,0)
 D END
"RTN","LRAPLG",6,0)
 N LREND,D0,DD S LREND=0
"RTN","LRAPLG",7,0)
 ;
"RTN","LRAPLG",8,0)
 N LRADD
"RTN","LRAPLG",9,0)
 N LRAPLGX,DOD,FDAIEN,H8,LR6802,LRACC,LRCDT,LRCNT,LREAL
"RTN","LRAPLG",10,0)
 N LRFDA,LRIENLOC,LRNLT,LRNT,LROT,LRPCEVSO,LRPROVL,LRSAMP
"RTN","LRAPLG",11,0)
 N LRSF515,LRSPEC,LRSPTOP,LRTSORU,LRTST,LRUID,ORGMDAT
"RTN","LRAPLG",12,0)
 N ORIFN,SS,TEST,X,X11,Y,OCXSEG
"RTN","LRAPLG",13,0)
 S LRAPLGX=1
"RTN","LRAPLG",14,0)
 ;
"RTN","LRAPLG",15,0)
 D:$G(^LAB(69.9,1,21661)) EN1^LRAPKOE
"RTN","LRAPLG",16,0)
 I $G(LRAPDIAL) K LRAPDIAL D END G EN
"RTN","LRAPLG",17,0)
 D ^LRAP I '$D(Y) D END Q
"RTN","LRAPLG",18,0)
 ;;;*
"RTN","LRAPLG",19,0)
 S LR("L")=LRSS_"^LRAP" I LRCAPA,"AUSP"[LRSS S X=$S(LRSS="SP":"H & E STAIN",1:"AUTOPSY H & E") D X^LRUWK G:'$D(X) END S LRW("H&E")=LRT K LRT
"RTN","LRAPLG",20,0)
 I LRCAPA,LRSS="EM" S X="THICK SECTION EM" D X^LRUWK G:'$D(X) END S X=11 D SET S LRW("SS")=LRT_U_X S X="GRID EM" D X^LRUWK G:'$D(X) END S X=12 D SET S LRW("G")=LRT_U_X K LRT
"RTN","LRAPLG",21,0)
 I LRCAPA D @(LRSS_"^LRAPSWK") G:'$D(X) END
"RTN","LRAPLG",22,0)
 D:"SPEMCY"[LRSS A^LRAPWU W !!,"Log-In for ",LRH(0)," " S %=1 D YN^LRU Q:%<1  S LRAA(3)=1 D XR^LRU
"RTN","LRAPLG",23,0)
 I %=2 S %DT="AE",%DT(0)="-N",%DT("A")="Enter YEAR: " D ^%DT K %DT Q:Y<1  S LRAD=$E(Y,1,3)_"0000",Y=LRAD D D^LRU S LRH(0)=Y
"RTN","LRAPLG",24,0)
 S LRH(2)=$E(LRAD,1,3),LRWHN=$E(LRAD,2,3)
"RTN","LRAPLG",25,0)
 S:'$D(^LRO(68,LRAA,1,0)) ^(0)="^68.01DA^^0"
"RTN","LRAPLG",26,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,0)) ^(0)=LRAD,^LRO(68,LRAA,1,0)=$P(^LRO(68,LRAA,1,0),"^",1,2)_"^"_LRAD_"^"_($P(^(0),"^",4)+1)
"RTN","LRAPLG",27,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,1,0)) ^(0)="^68.02PA^^"
"RTN","LRAPLG",28,0)
 S %DT="",X="T-4" D ^%DT S LRDTI=9999999-Y
"RTN","LRAPLG",29,0)
GETP W ! S LRSIT="",LRDPAF=1 K DIC
"RTN","LRAPLG",30,0)
 D ^LRDPA G:LRDFN<1 END
"RTN","LRAPLG",31,0)
 S:'+$G(LRPRAC) LRPRAC(1)=""
"RTN","LRAPLG",32,0)
 I +$G(LRPRAC) S X=LRPRAC D D^LRUA S LRPRAC(1)=X
"RTN","LRAPLG",33,0)
 I LRSS="SP" S X=0 F  S X=$O(^LR(LRDFN,LRSS,X)) Q:'X!(X>LRDTI)  D
"RTN","LRAPLG",34,0)
 .S Y=^LR(LRDFN,LRSS,X,0)
"RTN","LRAPLG",35,0)
 .W $C(7),!?6,"Accession number assigned for ",$$FMTE^XLFDT(Y,"D")
"RTN","LRAPLG",36,0)
 .W " is: ",$P(Y,"^",6)
"RTN","LRAPLG",37,0)
 ;
"RTN","LRAPLG",38,0)
 I LRSS="SP" S X="SROSPLG" X ^%ZOSF("TEST") I $T D ^SROSPLG
"RTN","LRAPLG",39,0)
 ;
"RTN","LRAPLG",40,0)
 D ADD G GETP
"RTN","LRAPLG",41,0)
ADD I LRSS="AU",'$D(LREXP) W $C(7),!!,"NO DATE DIED ENTERED IN ",LRFNAM," FILE",! Q:+LRDPF=2  S DIE=+LRDPF,DA=DFN,DR=.351 D ^DIE Q:$D(Y)  S LREXP=X
"RTN","LRAPLG",42,0)
 I LRSS="AU",$D(^LR(LRDFN,"AU")),$P(^("AU"),U,6) S Y=^("AU"),X=+$P(Y,U,6),Y(1)=$E(Y,1,3)_"0000" W !,"Yr:",1700+$E(Y,1,3)," Acc#:",X," IN LAB FILE FOR ",$P(@(LRPF_DFN_",0)"),U)," SSN:",$P(^(0),U,9) D CK Q
"RTN","LRAPLG",43,0)
 D:LRPF="^DPT(" ^LRAPPOW ; for AFIP studies
"RTN","LRAPLG",44,0)
 D ^LRAPLG1 K LRMD,DIC,DIE,DR,LRAPDIAL Q
"RTN","LRAPLG",45,0)
CK I +$G(^LRO(68,LRAA,1,Y(1),1,X,0))=LRDFN W $C(7),!!?20,"Also in accession file" Q
"RTN","LRAPLG",46,0)
 W !,"Enter in Accession File " S %=2 D YN^LRU D:%=1 ^LRAPLG2 Q
"RTN","LRAPLG",47,0)
SET S X=$P($G(^LRO(69.2,LRAA,0)),"^",X) S:'X X=1 Q
"RTN","LRAPLG",48,0)
END D V^LRU
"RTN","LRAPLG",49,0)
 ;;*
"RTN","LRAPLG",50,0)
 K LRAPLGX,DOD,FDAIEN,H8,LR6802,LRACC,LRCDT,LRCNT,LREAL
"RTN","LRAPLG",51,0)
 K LRFDA,LRIENLOC,LRNLT,LRNT,LROT,LRPCEVSO,LRPROVL,LRSAMP
"RTN","LRAPLG",52,0)
 K LRSF515,LRSPEC,LRSPTOP,LRTSORU,LRTST,LRUID,ORGMDAT
"RTN","LRAPLG",53,0)
 K ORIFN,SS,TEST,X,X11,Y
"RTN","LRAPLG",54,0)
 K DA,DFN,DIC,DIE,DR,LR,LRAA,LRAD,LRAPDIAL,LRCAPA,LRDFN,LRDPAF
"RTN","LRAPLG",55,0)
 K LRDPF,LRDTI,LREXP,LRFNAM,LRH,LRMD,LRPF,LRPRAC
"RTN","LRAPLG",56,0)
 K LRSIT,LRSS,LRT,LRW,LRWHN
"RTN","LRAPLG",57,0)
 ;;;*
"RTN","LRAPLG",58,0)
 Q
"RTN","LRAPLG1")
0^35^B181234041^B169348471
"RTN","LRAPLG1",1,0)
LRAPLG1 ;DALOI/CKA,JMC,PMK - LOG-IN CONT. ;11/22/16  15:26
"RTN","LRAPLG1",2,0)
 ;;5.2;LAB SERVICE;**72,121,248,308,350,427,433,462**;Sep 27, 1994;Build 44
"RTN","LRAPLG1",3,0)
 ;
"RTN","LRAPLG1",4,0)
 ; Reference to DISP^SROSPLG supported by IA #893
"RTN","LRAPLG1",5,0)
 ;
"RTN","LRAPLG1",6,0)
START ; Start logging in the specimens.
"RTN","LRAPLG1",7,0)
 N LRFND,LRMSG,LRXX
"RTN","LRAPLG1",8,0)
 ;
"RTN","LRAPLG1",9,0)
 ; Lock ^LR( and ^LRO
"RTN","LRAPLG1",10,0)
 D LOCK^DILF("^LR(LRDFN,LRSS)")
"RTN","LRAPLG1",11,0)
 I '$T D  Q
"RTN","LRAPLG1",12,0)
 . S LRMSG="This record is locked by another user. Please try later."
"RTN","LRAPLG1",13,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPLG1",14,0)
 ;
"RTN","LRAPLG1",15,0)
 D LOCK^DILF("^LRO(68,LRAA,1,LRAD,1,0)")
"RTN","LRAPLG1",16,0)
 I '$T D  Q
"RTN","LRAPLG1",17,0)
 . L -^LR(LRDFN,LRSS)
"RTN","LRAPLG1",18,0)
 . S LRMSG="Someone else is logging in specimens.  Please wait and try again."
"RTN","LRAPLG1",19,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPLG1",20,0)
 ;
"RTN","LRAPLG1",21,0)
 ; Check that accession date exists first
"RTN","LRAPLG1",22,0)
 D CHECK68^LRWLST1(LRAA,LRAD)
"RTN","LRAPLG1",23,0)
 ;
"RTN","LRAPLG1",24,0)
EN ;
"RTN","LRAPLG1",25,0)
 N LRAPDAN
"RTN","LRAPLG1",26,0)
 ;
"RTN","LRAPLG1",27,0)
 S (LRI,LRIDT)=""
"RTN","LRAPLG1",28,0)
 S LRAN=1
"RTN","LRAPLG1",29,0)
 S LRAPDAN=$$GET^XPAR("ALL","LR AP DEFAULT ACCESSION NUMBER","`"_LRAA,"Q")
"RTN","LRAPLG1",30,0)
 I LRAPDAN=2 S LRAN=+$P(^LRO(68,LRAA,1,LRAD,1,0),U,3)
"RTN","LRAPLG1",31,0)
 F  Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN))  S LRAN=LRAN+1
"RTN","LRAPLG1",32,0)
 W !!,"Assign ",LRO(68)," (",LRABV,") accession #: ",LRAN S %=1 D YN^LRU
"RTN","LRAPLG1",33,0)
 I %<1 L -^LRO(68,LRAA,1,LRAD,1,0),-^LR(LRDFN,LRSS) Q
"RTN","LRAPLG1",34,0)
 ;
"RTN","LRAPLG1",35,0)
 I %=1,$D(LRXREF),$D(^LR(LRXREF,LRH(2),LRABV,LRAN)) D  Q:$D(LRFND)
"RTN","LRAPLG1",36,0)
 . I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),$P(^(0),U) S X=LRAN D ^LRUTELL S LRFND=1
"RTN","LRAPLG1",37,0)
 . I '$D(LRFND) D ^LRAPLG2
"RTN","LRAPLG1",38,0)
 . I $D(LRFND) L -^LRO(68,LRAA,1,LRAD,1,0),-^LR(LRDFN,LRSS) Q
"RTN","LRAPLG1",39,0)
 . S %=0
"RTN","LRAPLG1",40,0)
 ;
"RTN","LRAPLG1",41,0)
 I %=1 D CRE868 I $D(LRMSG) G EN
"RTN","LRAPLG1",42,0)
 ;
"RTN","LRAPLG1",43,0)
 I %=2 D OS I $D(LRFND) K LRFND L -^LRO(68,LRAA,1,LRAD,1,0),-^LR(LRDFN,LRSS) Q
"RTN","LRAPLG1",44,0)
 ;
"RTN","LRAPLG1",45,0)
 L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRAPLG1",46,0)
 ;
"RTN","LRAPLG1",47,0)
 S LRAC=$P(^LRO(68,LRAA,0),U,11)_" "_$S(LRAD["0000":$E(LRAD,2,3),1:$E(LRAD,4,7))_" "_LRAN
"RTN","LRAPLG1",48,0)
 ;
"RTN","LRAPLG1",49,0)
AU ; Autopsy Specific
"RTN","LRAPLG1",50,0)
 I LRSS="AU" D ^LRAUAW Q
"RTN","LRAPLG1",51,0)
 S:'$D(^LR(LRDFN,LRSS,0)) ^(0)="^"_LRSF_"DA^0^0"
"RTN","LRAPLG1",52,0)
 ;
"RTN","LRAPLG1",53,0)
 ; If orginal login then create entry in file #63
"RTN","LRAPLG1",54,0)
LR7OFA0 ;
"RTN","LRAPLG1",55,0)
 I LRIDT="" D CRE863
"RTN","LRAPLG1",56,0)
 I LRI="" Q
"RTN","LRAPLG1",57,0)
 ;
"RTN","LRAPLG1",58,0)
 K DA,DTOUT,DIWESUB
"RTN","LRAPLG1",59,0)
 ;S DIWESUB=$E(PNM,1,27-$L(LRACC))_" ["_LRACC_"]"
"RTN","LRAPLG1",60,0)
 S LR(.07)=$S($D(SRDOC):SRDOC,1:"") K SRDOC
"RTN","LRAPLG1",61,0)
 S:LR(.07) LR(.07)=$P($G(^VA(200,LR(.07),0)),"^")
"RTN","LRAPLG1",62,0)
 S DA=LRI,DA(1)=LRDFN
"RTN","LRAPLG1",63,0)
 S DIC(0)="EQLMF",DLAYGO=63,DIE="^LR(LRDFN,LRSS,"
"RTN","LRAPLG1",64,0)
 D @LR("L")
"RTN","LRAPLG1",65,0)
 D ^DIE K DLAYGO
"RTN","LRAPLG1",66,0)
 S:'$D(LRRC) LRRC=LRNT
"RTN","LRAPLG1",67,0)
 ;
"RTN","LRAPLG1",68,0)
 ; Check if topography and collection sample entered on each specimen.
"RTN","LRAPLG1",69,0)
 ; If not entered then define Y to cause entry to be deleted.
"RTN","LRAPLG1",70,0)
 I LRSS?1(1"SP",1"CY",1"EM") D
"RTN","LRAPLG1",71,0)
 . N I,LRJ,X
"RTN","LRAPLG1",72,0)
 . S LRJ=0
"RTN","LRAPLG1",73,0)
 . F  S LRJ=$O(^LR(LRDFN,LRSS,LRI,.1,LRJ)) Q:LRJ<1  D  Q:$D(Y)
"RTN","LRAPLG1",74,0)
 . . S X=$G(^LR(LRDFN,LRSS,LRI,.1,LRJ,0))
"RTN","LRAPLG1",75,0)
 . . F I=6,7 I $P(X,"^",I)="" S Y="" Q
"RTN","LRAPLG1",76,0)
 ;
"RTN","LRAPLG1",77,0)
 ; Delete entry if prompts not answered unless report has been released.
"RTN","LRAPLG1",78,0)
 I $D(DTOUT)!$D(Y) D  Q
"RTN","LRAPLG1",79,0)
 . N DA,DIK
"RTN","LRAPLG1",80,0)
 . I LRSS?1(1"SP",1"CY",1"EM"),($P(^LR(LRDFN,LRSS,LRI,0),"^",11)!$P(^LR(LRDFN,LRSS,LRI,0),"^",15)) Q
"RTN","LRAPLG1",81,0)
 . W $C(7),!!,"All Prompts not answered - <ENTRY DELETED>"
"RTN","LRAPLG1",82,0)
 . S DA(1)=LRDFN,DA=LRI
"RTN","LRAPLG1",83,0)
 . S DIK="^LR("_DA(1)_","""_LRSS_""","
"RTN","LRAPLG1",84,0)
 . D ^DIK,X,END
"RTN","LRAPLG1",85,0)
 ;
"RTN","LRAPLG1",86,0)
 D GETSTCS ; Store specimen topography, coll sample in temp array
"RTN","LRAPLG1",87,0)
 ;
"RTN","LRAPLG1",88,0)
TST ; Get the ordered test and store in temp array
"RTN","LRAPLG1",89,0)
 N II
"RTN","LRAPLG1",90,0)
 D ORDTST
"RTN","LRAPLG1",91,0)
 ; Delete entry if no ordered tests unless report has been released.
"RTN","LRAPLG1",92,0)
 I II=2 D  Q
"RTN","LRAPLG1",93,0)
 . I LRSS?1(1"SP",1"CY",1"EM"),($P(^LR(LRDFN,LRSS,LRI,0),"^",11)!$P(^LR(LRDFN,LRSS,LRI,0),"^",15)) Q
"RTN","LRAPLG1",94,0)
 . N DA,DIK
"RTN","LRAPLG1",95,0)
 . W $C(7),!!,"No ordered test selected - <ENTRY DELETED>"
"RTN","LRAPLG1",96,0)
 . S DA(1)=LRDFN,DA=LRI,DIK="^LR("_DA(1)_","""_LRSS_""","
"RTN","LRAPLG1",97,0)
 . D ^DIK,X,END
"RTN","LRAPLG1",98,0)
 ;
"RTN","LRAPLG1",99,0)
 I LRSS="CY",LRCAPA D CK^LRAPCWK
"RTN","LRAPLG1",100,0)
 ;
"RTN","LRAPLG1",101,0)
 ; Check for surgery case references and move info if user wants surgical case info copied to Lab.
"RTN","LRAPLG1",102,0)
 I LRSS="SP" D SPMOVE
"RTN","LRAPLG1",103,0)
 ;
"RTN","LRAPLG1",104,0)
 ; Fill out the stub accession with related info
"RTN","LRAPLG1",105,0)
 I '$D(LRC(5)) S LRC(5)=""
"RTN","LRAPLG1",106,0)
 D ^LRUWLF
"RTN","LRAPLG1",107,0)
 ;
"RTN","LRAPLG1",108,0)
 I LRCAPA D
"RTN","LRAPLG1",109,0)
 . I LRSS="CY" D ^LRAPCWK
"RTN","LRAPLG1",110,0)
 . I LRSS?1(1"SP",1"EM") D ^LRAPSWK
"RTN","LRAPLG1",111,0)
 ;
"RTN","LRAPLG1",112,0)
 I LRSS?1(1"SP",1"CY",1"EM") D ^LRSPGD
"RTN","LRAPLG1",113,0)
 ;
"RTN","LRAPLG1",114,0)
 I $T(ADD^MAGTP005)'="" N MAGNEWCASE S MAGNEWCASE=1 D ADD^MAGTP005(LRAC) ; add case to file #2005.42 - P433
"RTN","LRAPLG1",115,0)
 ;
"RTN","LRAPLG1",116,0)
 D OERR^LR7OB63D,LDSI
"RTN","LRAPLG1",117,0)
 ;
"RTN","LRAPLG1",118,0)
 I $T(NEW^MAGT7MA)'="" D NEW^MAGT7MA ; invoke Imaging HL7 routine - P433
"RTN","LRAPLG1",119,0)
 ;
"RTN","LRAPLG1",120,0)
 Q
"RTN","LRAPLG1",121,0)
 ;
"RTN","LRAPLG1",122,0)
 ;
"RTN","LRAPLG1",123,0)
LDSI ; LDSI tasks
"RTN","LRAPLG1",124,0)
 ;
"RTN","LRAPLG1",125,0)
 N LRLLOC,LRALOC,LRPRAC,LROUTINE,LROPL,LRODT,LRNT,LRFILE,LRIENS,LRORD,LRORDR,LRSRDT,LRTST
"RTN","LRAPLG1",126,0)
 ;
"RTN","LRAPLG1",127,0)
 ; Get variables for ORUT node
"RTN","LRAPLG1",128,0)
 S LROUTINE=$P($G(^LAB(69.9,1,3)),"^",2)    ;default urgency
"RTN","LRAPLG1",129,0)
 S LRPROVL=LRMD(1)    ;Ordering provider-CKA
"RTN","LRAPLG1",130,0)
 ; Get ORDER TYPE
"RTN","LRAPLG1",131,0)
 ;S LROT=??
"RTN","LRAPLG1",132,0)
 S LRORDR="SP" ;Default to 'Send Patient' for now
"RTN","LRAPLG1",133,0)
 S LRNT=$$NOW^XLFDT() ;Date ordered = current date/time
"RTN","LRAPLG1",134,0)
 S LRODT=$P(LRNT,".")
"RTN","LRAPLG1",135,0)
 ; Get Provider, Location abbrev, Collection date/time
"RTN","LRAPLG1",136,0)
 S LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:"")
"RTN","LRAPLG1",137,0)
 S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPLG1",138,0)
 S LRPRAC=+$$GET1^DIQ(LRFILE,LRIENS,.07,"I")
"RTN","LRAPLG1",139,0)
 S LRLLOC=$$GET1^DIQ(LRFILE,LRIENS,.08,"I")
"RTN","LRAPLG1",140,0)
 I LRLLOC="" S LRLLOC="NO ABRV"
"RTN","LRAPLG1",141,0)
 S LRSDT=+$$GET1^DIQ(LRFILE,LRIENS,.01,"I")
"RTN","LRAPLG1",142,0)
 S LRSRDT=$$GET1^DIQ(LRFILE,LRIENS,.1,"I") ; Specimen received date/time
"RTN","LRAPLG1",143,0)
 ; Get CPRS Order #
"RTN","LRAPLG1",144,0)
 S ORIFN="" ; Default to blank for now
"RTN","LRAPLG1",145,0)
 ;
"RTN","LRAPLG1",146,0)
 ; Get Lab Order #, update file #69 and #68
"RTN","LRAPLG1",147,0)
LDSI1 S (LRORD,LRSPEC,LRTST,LRSAMP,LRADD,LROT)="",LRCNT=1
"RTN","LRAPLG1",148,0)
 F  S LRSPEC=$O(LRXX(LRSPEC)) Q:'LRSPEC  D
"RTN","LRAPLG1",149,0)
 . N LRRECINF
"RTN","LRAPLG1",150,0)
 . S LRSAMP=$P(LRXX(LRSPEC),"^",1),LRNLT=$P(LRXX(LRSPEC),"^",2),LRTST=$P(LRXX(LRSPEC),"^",3)
"RTN","LRAPLG1",151,0)
 . Q:'LRTST
"RTN","LRAPLG1",152,0)
 . ;I LRORD,$G(^LAB(69.9,1,21661)) S LRADD=1 D ZSN^LR7OFAO("",.LRRECINF)
"RTN","LRAPLG1",153,0)
 . ; Get Lab Order # first time thru
"RTN","LRAPLG1",154,0)
 . D:'LRORD EN^LR7OFAO(LRODT,LRDFN,LRSAMP,LRORDR,LRNT,LRPRAC,LRLLOC,LRSDT,ORIFN,LRSPEC,LRSS,LRTST,LRUID,.LRRECINF)
"RTN","LRAPLG1",155,0)
 . S LRSN=+$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,5),LRCDT=0,LREAL=""
"RTN","LRAPLG1",156,0)
 . I LRSN>0 S LRCDT=$P($G(^LRO(69,LRODT,1,LRSN,1)),"^",1,2),LREAL=$P(LRCDT,"^",2),LRCDT=+LRCDT
"RTN","LRAPLG1",157,0)
 . D UPD68,UPD63
"RTN","LRAPLG1",158,0)
 . S LRCNT=LRCNT+1
"RTN","LRAPLG1",159,0)
 ;
"RTN","LRAPLG1",160,0)
 Q
"RTN","LRAPLG1",161,0)
 ;
"RTN","LRAPLG1",162,0)
 ;
"RTN","LRAPLG1",163,0)
UPD68 ; Update #68 with required test data
"RTN","LRAPLG1",164,0)
 N LRFILE,LRERR,IEN,LRIEN
"RTN","LRAPLG1",165,0)
 S LRFILE=68.04,IEN(1)=LRTST
"RTN","LRAPLG1",166,0)
 S LRIEN="?+1,"_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPLG1",167,0)
 S FDA(3,LRFILE,LRIEN,.01)=LRTST
"RTN","LRAPLG1",168,0)
 S FDA(3,LRFILE,LRIEN,1)=LROUTINE
"RTN","LRAPLG1",169,0)
 ;;*
"RTN","LRAPLG1",170,0)
 S FDA(3,LRFILE,LRIEN,8.1)=LRTST
"RTN","LRAPLG1",171,0)
 ;;;*
"RTN","LRAPLG1",172,0)
 D UPDATE^DIE("","FDA(3)","IEN","LRERR(3)")
"RTN","LRAPLG1",173,0)
 I $D(LRERR(3)) D LRMSG("UPD68-3~LRAPLG1",.LRERR)
"RTN","LRAPLG1",174,0)
 ;
"RTN","LRAPLG1",175,0)
 ;
"RTN","LRAPLG1",176,0)
 ; Update #68 with specimen data
"RTN","LRAPLG1",177,0)
 K LRFILE,FDAIEN,IEN
"RTN","LRAPLG1",178,0)
 S LRFILE=68.05
"RTN","LRAPLG1",179,0)
 ; Check or Set top node for 68.05
"RTN","LRAPLG1",180,0)
 S FDAIEN="?+"_LRCNT_","_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPLG1",181,0)
 S FDA(31,LRFILE,FDAIEN,.01)=LRSPEC
"RTN","LRAPLG1",182,0)
 S FDA(31,LRFILE,FDAIEN,1)=LRSAMP
"RTN","LRAPLG1",183,0)
 D UPDATE^DIE("","FDA(31)","IEN","LRERR(31)")
"RTN","LRAPLG1",184,0)
 I $D(LRERR(31)) D LRMSG("UPD68-31~LRAPLG1",.LRERR)
"RTN","LRAPLG1",185,0)
 ;
"RTN","LRAPLG1",186,0)
 Q
"RTN","LRAPLG1",187,0)
 ;
"RTN","LRAPLG1",188,0)
 ;
"RTN","LRAPLG1",189,0)
UPD63 ; Update ORUT Node in #63
"RTN","LRAPLG1",190,0)
 S LRTSORU=LRTST,LRURG=9,LRI=LRIDT
"RTN","LRAPLG1",191,0)
 D SLRSS^LRWLST11
"RTN","LRAPLG1",192,0)
 D ORUT^LRWLST11
"RTN","LRAPLG1",193,0)
 ;
"RTN","LRAPLG1",194,0)
 ;
"RTN","LRAPLG1",195,0)
 Q
"RTN","LRAPLG1",196,0)
 ;
"RTN","LRAPLG1",197,0)
 ;
"RTN","LRAPLG1",198,0)
X ; from LRAUAW
"RTN","LRAPLG1",199,0)
 I "CYEMSP"[LRSS K ^LR(LRXREF,LRH(2),LRABV,LRAN)
"RTN","LRAPLG1",200,0)
 I LRSS="AU" D
"RTN","LRAPLG1",201,0)
 . I $D(^LR(LRDFN,"AV")) K ^LR(LRDFN,"AV")
"RTN","LRAPLG1",202,0)
 . I $D(^LR(LRDFN,"AW")) K ^LR(LRDFN,"AW")
"RTN","LRAPLG1",203,0)
 . I $D(^LR(LRDFN,"AWI")) K ^LR(LRDFN,"AWI")
"RTN","LRAPLG1",204,0)
 . I $D(LRRC) K ^LR("AAUA",+$E(LRRC,1,3),LRABV,LRAN),^LR("AAU",+LRRC,LRDFN)
"RTN","LRAPLG1",205,0)
 I $G(LRRC)>1 K:LRSS?1(1"SP",1"CY",1"EM") ^LR(LRXR,LRRC,LRDFN,LRI)
"RTN","LRAPLG1",206,0)
 K LRRC
"RTN","LRAPLG1",207,0)
 Q
"RTN","LRAPLG1",208,0)
 ;
"RTN","LRAPLG1",209,0)
 ;
"RTN","LRAPLG1",210,0)
OS ; User choosing accession number
"RTN","LRAPLG1",211,0)
 N DIR,DIROUT,DIRUT,DTOUT,LRSPEC,X,Y
"RTN","LRAPLG1",212,0)
 S DIR(0)="N^1:999999:0^D OSDIR^LRAPLG1"
"RTN","LRAPLG1",213,0)
 S DIR("A")="Enter Accession #"
"RTN","LRAPLG1",214,0)
 D ^DIR
"RTN","LRAPLG1",215,0)
 I $D(DIRUT) S LRFND=1 Q
"RTN","LRAPLG1",216,0)
 S LRAN=Y
"RTN","LRAPLG1",217,0)
 ;
"RTN","LRAPLG1",218,0)
 I $G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRAPLG1",219,0)
 . I $D(LRXREF),$D(^LR(LRXREF,LRH(2),LRABV,LRAN,LRDFN)) D
"RTN","LRAPLG1",220,0)
 . . S (LRI,LRIDT)=$O(^LR(LRXREF,LRH(2),LRABV,LRAN,LRDFN,0))
"RTN","LRAPLG1",221,0)
 . . I LRIDT S LRSD=$P($G(^LR(LRDFN,LRSS,LRIDT,0)),"^")
"RTN","LRAPLG1",222,0)
 ;
"RTN","LRAPLG1",223,0)
 I $D(LRXREF),$D(^LR(LRXREF,LRH(2),LRABV,LRAN)) D ^LRAPLG2 Q
"RTN","LRAPLG1",224,0)
 ;
"RTN","LRAPLG1",225,0)
 D CRE868
"RTN","LRAPLG1",226,0)
 I $D(LRMSG) S LRFND=1
"RTN","LRAPLG1",227,0)
 Q
"RTN","LRAPLG1",228,0)
 ;
"RTN","LRAPLG1",229,0)
 ;
"RTN","LRAPLG1",230,0)
 ;
"RTN","LRAPLG1",231,0)
OSDIR ; Called from DIR call in OS above
"RTN","LRAPLG1",232,0)
 ;
"RTN","LRAPLG1",233,0)
 ;ZEXCEPT: LRAA,LRAD,LRDFN,X
"RTN","LRAPLG1",234,0)
 ;
"RTN","LRAPLG1",235,0)
 ; Accession number doesn't exist in file #68 - quit, OK to use this number
"RTN","LRAPLG1",236,0)
 I $O(^LRO(68,LRAA,1,LRAD,1,+X,""))="" Q
"RTN","LRAPLG1",237,0)
 ;
"RTN","LRAPLG1",238,0)
 N LRX
"RTN","LRAPLG1",239,0)
 S LRX=$G(^LRO(68,LRAA,1,LRAD,1,+X,0))
"RTN","LRAPLG1",240,0)
 I LRX<1 K X Q
"RTN","LRAPLG1",241,0)
 ;
"RTN","LRAPLG1",242,0)
 ; Stub entry which matches on LRDFN
"RTN","LRAPLG1",243,0)
 I LRX=LRDFN Q
"RTN","LRAPLG1",244,0)
 ;
"RTN","LRAPLG1",245,0)
 I $P(LRX,U)'=LRDFN S X=+X D ^LRUTELL K X
"RTN","LRAPLG1",246,0)
 ;
"RTN","LRAPLG1",247,0)
 Q
"RTN","LRAPLG1",248,0)
 ;
"RTN","LRAPLG1",249,0)
 ;
"RTN","LRAPLG1",250,0)
ORDTST ; Prompt for ordered test(s); translate to NLT code for storage in ORUT
"RTN","LRAPLG1",251,0)
 ; Add NLT code to temp array LRXX (This code currently assumes one ordered test per accession)
"RTN","LRAPLG1",252,0)
 ;
"RTN","LRAPLG1",253,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRNLT,LRWKCD,XX
"RTN","LRAPLG1",254,0)
 S (LRNLT,LRWKCD)="",II=0
"RTN","LRAPLG1",255,0)
 S DIR(0)="P^LAB(60,:AEMOQ",DIR("B")=$G(LRTST(0))
"RTN","LRAPLG1",256,0)
 S DIR("S")="I $P(^LAB(60,Y,0),""^"",4)=LRSS,""IBO""[$P(^LAB(60,Y,0),""^"",3),$P($G(^LAB(60,Y,64)),""^"")"
"RTN","LRAPLG1",257,0)
 D ^DIR
"RTN","LRAPLG1",258,0)
 I $D(DIRUT) S II=2 Q
"RTN","LRAPLG1",259,0)
 S LRWKCD=+$G(^LAB(60,+Y,64)),LRNLT=$P($G(^LAM(LRWKCD,0)),"^",2),II=1
"RTN","LRAPLG1",260,0)
 S XX=0
"RTN","LRAPLG1",261,0)
 F  S XX=$O(LRXX(XX)) Q:'XX  S $P(LRXX(XX),"^",2)=LRNLT_"^"_+Y
"RTN","LRAPLG1",262,0)
 ;
"RTN","LRAPLG1",263,0)
 Q
"RTN","LRAPLG1",264,0)
 ;
"RTN","LRAPLG1",265,0)
 ;
"RTN","LRAPLG1",266,0)
GETSTCS ;Get spec top and coll samp
"RTN","LRAPLG1",267,0)
 N LRI
"RTN","LRAPLG1",268,0)
 K LRXX
"RTN","LRAPLG1",269,0)
 S LRI=0,(LRXX,X)=""
"RTN","LRAPLG1",270,0)
 F  S LRI=$O(^LR(LRDFN,LRSS,LRIDT,.1,LRI)) Q:'LRI  D
"RTN","LRAPLG1",271,0)
 . S X=$G(^LR(LRDFN,LRSS,LRIDT,.1,LRI,0))
"RTN","LRAPLG1",272,0)
 . I $P(X,"^",6)'="" S LRXX($P(X,"^",6))=$P(X,"^",7)_"^"
"RTN","LRAPLG1",273,0)
 Q
"RTN","LRAPLG1",274,0)
 ;
"RTN","LRAPLG1",275,0)
 ;
"RTN","LRAPLG1",276,0)
CRE868 ; Create accession number in file 68
"RTN","LRAPLG1",277,0)
 N LRFDA,LRFDAIEN,LRIEN
"RTN","LRAPLG1",278,0)
 K LRMSG
"RTN","LRAPLG1",279,0)
 S LRIEN="+1,"_LRAD_","_LRAA_","
"RTN","LRAPLG1",280,0)
 S LRFDAIEN(1)=LRAN
"RTN","LRAPLG1",281,0)
 S LRFDA(1,68.02,LRIEN,.01)=LRDFN
"RTN","LRAPLG1",282,0)
 D UPDATE^DIE("S","LRFDA(1)","LRFDAIEN","LRMSG")
"RTN","LRAPLG1",283,0)
 I $D(LRMSG) S LRSD=LRAD D LRMSG("EN~LRAPGL1",.LRMSG) Q
"RTN","LRAPLG1",284,0)
 S X=LRAN
"RTN","LRAPLG1",285,0)
 Q
"RTN","LRAPLG1",286,0)
 ;
"RTN","LRAPLG1",287,0)
 ;
"RTN","LRAPLG1",288,0)
CRE863 ; Create entry in file #63
"RTN","LRAPLG1",289,0)
 ;
"RTN","LRAPLG1",290,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPLG1",291,0)
 S DIR(0)="DO^:NOW:ET"
"RTN","LRAPLG1",292,0)
 S DIR("A")="Date/time Specimen taken",DIR("B")="NOW"
"RTN","LRAPLG1",293,0)
 ;;
"RTN","LRAPLG1",294,0)
 I '$G(LRAPDIAL) D ^DIR K DIR I Y<1 D END Q
"RTN","LRAPLG1",295,0)
 I $G(LRAPDIAL) S Y=LRCDT
"RTN","LRAPLG1",296,0)
 ;;;*
"RTN","LRAPLG1",297,0)
 S (LRY,LRSD)=Y,LRI=9999999-LRY
"RTN","LRAPLG1",298,0)
 ;
"RTN","LRAPLG1",299,0)
 ; Process and get unique LRI
"RTN","LRAPLG1",300,0)
 F  Q:'$D(^LR(LRDFN,LRSS,LRI,0))  D
"RTN","LRAPLG1",301,0)
 . S (LRSD,LRY)=$$FMADD^XLFDT(LRY,,,,1)
"RTN","LRAPLG1",302,0)
 . S LRI=9999999-LRY
"RTN","LRAPLG1",303,0)
 ;
"RTN","LRAPLG1",304,0)
 N LRFDA,LRIEN,LRFILE,LRFDAIEN
"RTN","LRAPLG1",305,0)
 K DIERR,LRMSG
"RTN","LRAPLG1",306,0)
 S LRACC=LRAC,LRNT=$$NOW^XLFDT()
"RTN","LRAPLG1",307,0)
 S LRFILE=$S(LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:63.08)
"RTN","LRAPLG1",308,0)
 S LRFDAIEN(1)=LRI
"RTN","LRAPLG1",309,0)
 S LRIEN="+1,"_LRDFN_","
"RTN","LRAPLG1",310,0)
 S LRFDA(2,LRFILE,LRIEN,.01)=LRSD ;DATE/TIME SPECIMEN TAKEN
"RTN","LRAPLG1",311,0)
 S LRFDA(2,LRFILE,LRIEN,.06)=LRACC
"RTN","LRAPLG1",312,0)
 ;;*
"RTN","LRAPLG1",313,0)
 I $G(LRAPDIAL) D   ; STORE ORDERING PROVIDER  - LRAPDIAL SET IN LRAPKOE
"RTN","LRAPLG1",314,0)
 . I $G(LRPHY) S LRFDA(2,LRFILE,LRIEN,.02)=+$G(LRPHY) ;Pathologist
"RTN","LRAPLG1",315,0)
 . I $G(LRORPROV) S LRFDA(2,LRFILE,LRIEN,.07)=LRORPROV ; ORDERING PROVIDER
"RTN","LRAPLG1",316,0)
 . I $G(LRLLOC)'="" S LRFDA(2,LRFILE,LRIEN,.08)=LRLLOC ; ORDER LOCATION
"RTN","LRAPLG1",317,0)
 . I $G(LRSUBBY)'="" S LRFDA(2,LRFILE,LRIEN,.011)=LRSUBBY ; SUBMIT BY
"RTN","LRAPLG1",318,0)
 . S LRFDA(2,LRFILE,LRIEN,.1)=LRNT ;DATE/TIME SPECIMEN RECIEVED
"RTN","LRAPLG1",319,0)
 ;;;*
"RTN","LRAPLG1",320,0)
 ;
"RTN","LRAPLG1",321,0)
 D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRMSG")
"RTN","LRAPLG1",322,0)
 L -^LR(LRDFN,LRSS)
"RTN","LRAPLG1",323,0)
 I $D(LRMSG) D LRMSG("F~LRAPLG1",.LRMSG) Q
"RTN","LRAPLG1",324,0)
 ;
"RTN","LRAPLG1",325,0)
 S (LRI,LRIDT)=LRFDAIEN(1)
"RTN","LRAPLG1",326,0)
 ;
"RTN","LRAPLG1",327,0)
 Q
"RTN","LRAPLG1",328,0)
 ;
"RTN","LRAPLG1",329,0)
 ;
"RTN","LRAPLG1",330,0)
SPMOVE ; Copy surgery information into lab package
"RTN","LRAPLG1",331,0)
 ;  - store surgery package reference to retrieve surgeon/attending.
"RTN","LRAPLG1",332,0)
 ;  - LRFLAG used to determine if data copied from Surgery packge and moved to Lab and generate notice.
"RTN","LRAPLG1",333,0)
 ;         if no data before and data after call to SROSPLG then add disclaimer.
"RTN","LRAPLG1",334,0)
 ;
"RTN","LRAPLG1",335,0)
 S X="SROSPLG" X ^%ZOSF("TEST")
"RTN","LRAPLG1",336,0)
 I '$T Q
"RTN","LRAPLG1",337,0)
 ;
"RTN","LRAPLG1",338,0)
 N I,LRFIELD,LRFLAG,LRJ,LRSREF,LRSRTN,LRWP
"RTN","LRAPLG1",339,0)
 S LRFLAG="",LRSRTN=$G(SRTN)
"RTN","LRAPLG1",340,0)
 I LRSRTN D
"RTN","LRAPLG1",341,0)
 . N LRDATA,LRDIE
"RTN","LRAPLG1",342,0)
 . S LRDATA(.01)=LRDFN_","_LRSS_","_LRI_",0"
"RTN","LRAPLG1",343,0)
 . S LRDATA(.02)=1
"RTN","LRAPLG1",344,0)
 . S LRDATA(1)=LRSRTN_";SRF("
"RTN","LRAPLG1",345,0)
 . D SETREF^LRUEPR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRAPLG1",346,0)
 . F I=.2,.3,.4,.5 I '$O(^LR(LRDFN,LRSS,LRI,I,0)) S $P(LRFLAG,"^",I*10)=1
"RTN","LRAPLG1",347,0)
 ;
"RTN","LRAPLG1",348,0)
 D DISP^SROSPLG
"RTN","LRAPLG1",349,0)
 ;
"RTN","LRAPLG1",350,0)
 ; Create notation on where info came from if site wants reference.
"RTN","LRAPLG1",351,0)
 ;  also store referece as external package reference.
"RTN","LRAPLG1",352,0)
 S LRSREF=$$GET^XPAR("DIV^PKG","LR AP SURGERY REFERENCE",1,"Q")
"RTN","LRAPLG1",353,0)
 S LRFIELD(.013)="(#60) BRIEF CLIN HISTORY"
"RTN","LRAPLG1",354,0)
 S LRFIELD(.014)="(#32) PRINCIPAL PRE-OP DIAGNOSIS, (#.72) OTHER PREOP DIAGNOSIS"
"RTN","LRAPLG1",355,0)
 S LRFIELD(.015)="(#59) OPERATIVE FINDINGS"
"RTN","LRAPLG1",356,0)
 S LRFIELD(.016)="(#34) PRINCIPAL POST-OP DIAG, (#.74) OTHER POSTOP DIAGS"
"RTN","LRAPLG1",357,0)
 S LRWP(1)=" "
"RTN","LRAPLG1",358,0)
 F LRJ=.2,.3,.4,.5 I $P(LRFLAG,"^",LRJ*10),$O(^LR(LRDFN,LRSS,LRI,LRJ,0)) D
"RTN","LRAPLG1",359,0)
 . N LRDATA,LRDIE
"RTN","LRAPLG1",360,0)
 . S LRFIELD=$P("^.013^.014^.015^.016","^",LRJ*10)
"RTN","LRAPLG1",361,0)
 . S LRWP(2)="Information automatically documented from SURGERY package case #"_LRSRTN_" Field "_LRFIELD(LRFIELD)
"RTN","LRAPLG1",362,0)
 . I LRSREF=1 D WP^DIE(63.08,LRI_","_LRDFN_",",LRFIELD,"A","LRWP","LRDIE(LRFIELD)")
"RTN","LRAPLG1",363,0)
 . S LRDATA(.01)=LRDFN_","_LRSS_","_LRI_","_LRJ_",0"
"RTN","LRAPLG1",364,0)
 . S LRDATA(.02)=1
"RTN","LRAPLG1",365,0)
 . S LRDATA(1)=LRSRTN_";SRF(;"_LRWP(2)
"RTN","LRAPLG1",366,0)
 . D SETREF^LRUEPR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRAPLG1",367,0)
 ;
"RTN","LRAPLG1",368,0)
 Q
"RTN","LRAPLG1",369,0)
 ;
"RTN","LRAPLG1",370,0)
 ;
"RTN","LRAPLG1",371,0)
LRMSG(LRRNAME,LRFMERR) ;
"RTN","LRAPLG1",372,0)
 ; Filing error notification
"RTN","LRAPLG1",373,0)
 ; Inputs
"RTN","LRAPLG1",374,0)
 ;  LRRNAME: Routine name  (TAG~RTN)
"RTN","LRAPLG1",375,0)
 ;  LRFMERR:<byref> FileMan error local array
"RTN","LRAPLG1",376,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRDIE
"RTN","LRAPLG1",377,0)
 S LRRNAME=$TR($G(LRRNAME),"^","~")
"RTN","LRAPLG1",378,0)
 M LRDIE=LRFMERR
"RTN","LRAPLG1",379,0)
 D MAILALRT^LRWLST12(LRRNAME,.LRFMERR)
"RTN","LRAPLG1",380,0)
 S DIR(0)="EA"
"RTN","LRAPLG1",381,0)
 S DIR("A",1)="Filing error in "_LRRNAME_" for this accession/specimen"
"RTN","LRAPLG1",382,0)
 S DIR("A")="Press the return key to continue"
"RTN","LRAPLG1",383,0)
 D ^DIR
"RTN","LRAPLG1",384,0)
 Q
"RTN","LRAPLG1",385,0)
 ;
"RTN","LRAPLG1",386,0)
 ;
"RTN","LRAPLG1",387,0)
OUT ;
"RTN","LRAPLG1",388,0)
 ; Exit point
"RTN","LRAPLG1",389,0)
 Q
"RTN","LRAPLG1",390,0)
 ;
"RTN","LRAPLG1",391,0)
 ;
"RTN","LRAPLG1",392,0)
END ; from LRAUAW, LRAPLG2
"RTN","LRAPLG1",393,0)
 ; Lock Accession file
"RTN","LRAPLG1",394,0)
 D LOCK^DILF("^LRO(68,LRAA,1,LRAD,1,0)")
"RTN","LRAPLG1",395,0)
 I '$T D EN^DDIOL("Someone else is logging in specimens.  Please wait and try again.","","!!") Q
"RTN","LRAPLG1",396,0)
 ;
"RTN","LRAPLG1",397,0)
 N DIK,DA
"RTN","LRAPLG1",398,0)
 S DA=LRAN,DA(1)=LRAD,DA(2)=LRAA
"RTN","LRAPLG1",399,0)
 S DIK="^LRO(68,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","LRAPLG1",400,0)
 D ^DIK
"RTN","LRAPLG1",401,0)
 ;
"RTN","LRAPLG1",402,0)
 L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRAPLG1",403,0)
 Q
"RTN","LRAPLG1",404,0)
 ;
"RTN","LRAPLG1",405,0)
 ;
"RTN","LRAPLG1",406,0)
FIX ; Entry point to delete an orphan AP entry in file #63
"RTN","LRAPLG1",407,0)
 ;
"RTN","LRAPLG1",408,0)
 N DA,DFN,DIC,DIK,DIR,DIROUT,DIRUT,DIQ,DR,DTOUT
"RTN","LRAPLG1",409,0)
 N LRAA,LRABV,LRAC,LRAD,LRAN,LRDFN,LRDPA,LRDPF,LRH,LRI,LRRC,LRSS,LRWHN,LRXR,LRXREF
"RTN","LRAPLG1",410,0)
 N AGE,PNM,SEX,X,Y
"RTN","LRAPLG1",411,0)
 ;
"RTN","LRAPLG1",412,0)
 D ^LRAP Q:'$D(Y)
"RTN","LRAPLG1",413,0)
 D XR^LRU
"RTN","LRAPLG1",414,0)
 ;
"RTN","LRAPLG1",415,0)
 I LRSS'?1(1"SP",1"CY",1"EM") W !,"This program only supports SP, CY and EM subscripts",! Q
"RTN","LRAPLG1",416,0)
 ;
"RTN","LRAPLG1",417,0)
 S LRH(2)=$E(LRAD,1,3),LRWHN=$E(LRAD,2,3)
"RTN","LRAPLG1",418,0)
 ;
"RTN","LRAPLG1",419,0)
 D EN1^LRUPS Q:LRAN=-1
"RTN","LRAPLG1",420,0)
 I $P(^LR(LRDFN,LRSS,LRI,0),"^",11)'="" W !,"Report has been released!",! Q
"RTN","LRAPLG1",421,0)
 I $D(^LR(LRDFN,LRSS,LRI,2005)) D  Q
"RTN","LRAPLG1",422,0)
 . W !,"Report has associated images in IMAGING package!"
"RTN","LRAPLG1",423,0)
 . W !,"Disposition these images before deleting this entry!",!
"RTN","LRAPLG1",424,0)
 ;
"RTN","LRAPLG1",425,0)
 K DR
"RTN","LRAPLG1",426,0)
 S DIC="^LR("_LRDFN_","""_LRSS_""",",DA(1)=LRDFN,DA=LRI,DIQ(0)="ACR"
"RTN","LRAPLG1",427,0)
 D EN^DIQ
"RTN","LRAPLG1",428,0)
 ;
"RTN","LRAPLG1",429,0)
 S DIR(0)="Y",DIR("A")="DELETE this entry",DIR("B")="NO"
"RTN","LRAPLG1",430,0)
 D ^DIR
"RTN","LRAPLG1",431,0)
 I Y<1 Q
"RTN","LRAPLG1",432,0)
 ;
"RTN","LRAPLG1",433,0)
 K DIR
"RTN","LRAPLG1",434,0)
 S DIR(0)="Y",DIR("A")="Are you sure",DIR("B")="NO"
"RTN","LRAPLG1",435,0)
 D ^DIR
"RTN","LRAPLG1",436,0)
 I Y<1 Q
"RTN","LRAPLG1",437,0)
 ;
"RTN","LRAPLG1",438,0)
 ; Lock record
"RTN","LRAPLG1",439,0)
 D LOCK^DILF("^LR(LRDFN,LRSS,LRI)")
"RTN","LRAPLG1",440,0)
 I '$T D  Q
"RTN","LRAPLG1",441,0)
 . D EN^DDIOL("Someone else is accessing this record.  Please wait and try again.","","!!")
"RTN","LRAPLG1",442,0)
 . D KVA^VADPT,V^LRU
"RTN","LRAPLG1",443,0)
 ;
"RTN","LRAPLG1",444,0)
 K DA,DIK
"RTN","LRAPLG1",445,0)
 S DA=LRI,DA(1)=LRDFN,DIK="^LR("_DA(1)_","""_LRSS_""","
"RTN","LRAPLG1",446,0)
 D ^DIK
"RTN","LRAPLG1",447,0)
 ;
"RTN","LRAPLG1",448,0)
 ; Cleanup some cross-references.
"RTN","LRAPLG1",449,0)
 I LRSS?1(1"SP",1"CY",1"EM") D
"RTN","LRAPLG1",450,0)
 . K ^LR(LRXREF,LRH(2),LRABV,LRAN,LRDFN,LRI)
"RTN","LRAPLG1",451,0)
 . I $G(LRRC)>1 K ^LR(LRXR,LRRC,LRDFN,LRI)
"RTN","LRAPLG1",452,0)
 ;
"RTN","LRAPLG1",453,0)
 I LRSS="AU" D
"RTN","LRAPLG1",454,0)
 . I $D(^LR(LRDFN,"AV")) K ^LR(LRDFN,"AV")
"RTN","LRAPLG1",455,0)
 . I $D(^LR(LRDFN,"AW")) K ^LR(LRDFN,"AW")
"RTN","LRAPLG1",456,0)
 . I $D(^LR(LRDFN,"AWI")) K ^LR(LRDFN,"AWI")
"RTN","LRAPLG1",457,0)
 . I $D(LRRC) K ^LR("AAUA",+$E(LRRC,1,3),LRABV,LRAN),^LR("AAU",+LRRC,LRDFN)
"RTN","LRAPLG1",458,0)
 ;
"RTN","LRAPLG1",459,0)
 ; Release lock
"RTN","LRAPLG1",460,0)
 L -^LR(LRDFN,LRSS,LRI)
"RTN","LRAPLG1",461,0)
 ;
"RTN","LRAPLG1",462,0)
 W !!,"Entry deleted",!
"RTN","LRAPLG1",463,0)
 D KVA^VADPT,V^LRU
"RTN","LRAPLG1",464,0)
 ;
"RTN","LRAPLG1",465,0)
 Q
"RTN","LRAPRES1")
0^37^B70400068^B66194684
"RTN","LRAPRES1",1,0)
LRAPRES1 ;DALOI/STAFF - AP ESIG RELEASE REPORT/ALERT ;09/13/16  22:31
"RTN","LRAPRES1",2,0)
 ;;5.2;LAB SERVICE;**259,336,369,365,397,413,350,462**;Sep 27, 1994;Build 44
"RTN","LRAPRES1",3,0)
 ;
"RTN","LRAPRES1",4,0)
 ; Reference to FILE^TIUSRVP supported by ICR #3540
"RTN","LRAPRES1",5,0)
 ; Reference to ^TIULQ supported by ICR #2693
"RTN","LRAPRES1",6,0)
 ; Reference to LAB^ORB3LAB supported by ICR #4287
"RTN","LRAPRES1",7,0)
 ;
"RTN","LRAPRES1",8,0)
MAIN(LRDFN,LRSS,LRI,LRSF,LRP,LRAC) ;Main subroutine
"RTN","LRAPRES1",9,0)
 Q:'$D(LRDFN)!('$D(LRSS))!('$D(LRP))!('$D(LRAC))
"RTN","LRAPRES1",10,0)
 ;
"RTN","LRAPRES1",11,0)
 N DIR,DIRUT,DTOUT,DUOUT,LRDOCS,LRMSG,LRC,LRNUM,LRADL,LRMORE,LRQUIT,LRXQA,X,Y,DIC,XQA,XQAMSG
"RTN","LRAPRES1",12,0)
 ;
"RTN","LRAPRES1",13,0)
 S LRQUIT=0
"RTN","LRAPRES1",14,0)
 ;
"RTN","LRAPRES1",15,0)
 ; CPRS alerts only sent for "patients" related to PATIENT file (#2)
"RTN","LRAPRES1",16,0)
 I $P($G(^LR(LRDFN,0)),"^",2)'=2 Q
"RTN","LRAPRES1",17,0)
 ;
"RTN","LRAPRES1",18,0)
 D DOCS,MORE
"RTN","LRAPRES1",19,0)
 I LRMORE D LOOKUP
"RTN","LRAPRES1",20,0)
 D ALERT
"RTN","LRAPRES1",21,0)
 ;;*
"RTN","LRAPRES1",22,0)
LR7OB1 ;Update CPRS package reference and status of complete
"RTN","LRAPRES1",23,0)
 D
"RTN","LRAPRES1",24,0)
 . NEW LRX,LR
"RTN","LRAPRES1",25,0)
 . S LRX=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))
"RTN","LRAPRES1",26,0)
 . Q:'$G(LRX)
"RTN","LRAPRES1",27,0)
 . S LR(4)=$P(LRX,U,4),LR(5)=$P(LRX,U,5)
"RTN","LRAPRES1",28,0)
 . D NEW^LR7OB1(LR(4),LR(5),"RE",,+LRT)
"RTN","LRAPRES1",29,0)
 ;;;*
"RTN","LRAPRES1",30,0)
 Q
"RTN","LRAPRES1",31,0)
 ;
"RTN","LRAPRES1",32,0)
 ;
"RTN","LRAPRES1",33,0)
DOCS ; Get ordering provider and PCP/attending to send alert
"RTN","LRAPRES1",34,0)
 N LRNUM,LRMSG
"RTN","LRAPRES1",35,0)
 S:$G(LRSF)="" LRSF=63
"RTN","LRAPRES1",36,0)
 D GETDOCS^LRAPUTL(.LRDOCS,LRDFN,LRSS,$G(LRI),LRSF)
"RTN","LRAPRES1",37,0)
 S (LRNUM,LRQUIT)=1,LRC=0
"RTN","LRAPRES1",38,0)
 F  S LRC=$O(LRDOCS(LRC)) Q:LRC<1  D
"RTN","LRAPRES1",39,0)
 . I $D(LRXQA(+LRDOCS(LRC))) S LRXQA(+LRDOCS(LRC))=LRXQA(+LRDOCS(LRC))_"/"_$P(LRDOCS(LRC),"^",3) Q
"RTN","LRAPRES1",40,0)
 . S LRXQA(+LRDOCS(LRC))=$P(LRDOCS(LRC),"^",3),LRQUIT=0
"RTN","LRAPRES1",41,0)
 ;
"RTN","LRAPRES1",42,0)
 I 'LRQUIT D
"RTN","LRAPRES1",43,0)
 . S LRC=0,LRMSG(LRNUM)="Mandatory Alert will be sent to: ",LRMSG(LRNUM,"F")="!!"
"RTN","LRAPRES1",44,0)
 . F  S LRC=$O(LRDOCS(LRC)) Q:LRC<1  D
"RTN","LRAPRES1",45,0)
 . . S LRNUM=LRNUM+1,LRMSG(LRNUM)=$P(LRDOCS(LRC),"^",2)_"  ["_$P(LRDOCS(LRC),"^",3)_"]"
"RTN","LRAPRES1",46,0)
 . . S LRMSG(LRNUM,"F")=$S(LRNUM>2:"!",1:"")_"?33"
"RTN","LRAPRES1",47,0)
 I LRQUIT S LRMSG(LRNUM)="No Ordering Provider or PCP selected for alert",LRMSG(LRNUM,"F")="!!",LRQUIT=0
"RTN","LRAPRES1",48,0)
 D EN^DDIOL(.LRMSG)
"RTN","LRAPRES1",49,0)
 Q
"RTN","LRAPRES1",50,0)
 ;
"RTN","LRAPRES1",51,0)
 ;
"RTN","LRAPRES1",52,0)
MORE ; Add names or mail groups to the lookup list?
"RTN","LRAPRES1",53,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRAPRES1",54,0)
 W !
"RTN","LRAPRES1",55,0)
 S LRMORE=1
"RTN","LRAPRES1",56,0)
 S DIR(0)="Y"
"RTN","LRAPRES1",57,0)
 S DIR("A")="Send the alert to additional recipients and/or mail groups"
"RTN","LRAPRES1",58,0)
 S X=$$GET^XPAR("USR^DIV^PKG","LRAPRES1 AP ALERT",1,"Q")
"RTN","LRAPRES1",59,0)
 S DIR("B")=$S(X=1:"YES",1:"NO")
"RTN","LRAPRES1",60,0)
 S DIR("?")="^D AHELP^LRAPRES1"
"RTN","LRAPRES1",61,0)
 D ^DIR
"RTN","LRAPRES1",62,0)
 I Y=0 S LRMORE=0 Q
"RTN","LRAPRES1",63,0)
 I $D(DUOUT)!($D(DTOUT)) S LRQUIT=1
"RTN","LRAPRES1",64,0)
 Q
"RTN","LRAPRES1",65,0)
 ;
"RTN","LRAPRES1",66,0)
 ;
"RTN","LRAPRES1",67,0)
LOOKUP ; Add additional names or mail groups to alert list.
"RTN","LRAPRES1",68,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT,LRADL,LRDELETE,X,Y
"RTN","LRAPRES1",69,0)
 S LRQUIT=0
"RTN","LRAPRES1",70,0)
 F  D  Q:LRQUIT
"RTN","LRAPRES1",71,0)
 . W !
"RTN","LRAPRES1",72,0)
 . K DIR
"RTN","LRAPRES1",73,0)
 . S LRDELETE=0
"RTN","LRAPRES1",74,0)
 . S DIR(0)="FO^3:30^I X["".""&(X'?1""G."".E) K X"
"RTN","LRAPRES1",75,0)
 . S DIR("A")="Enter name or mail group"
"RTN","LRAPRES1",76,0)
 . S DIR("?",1)="Prefix selection with '-' to delete a recipient"
"RTN","LRAPRES1",77,0)
 . S DIR("?",2)="Enter lastname,firstname OR G.mailgroup OR ^ to exit"
"RTN","LRAPRES1",78,0)
 . S DIR("?")="Enter '??' for additional help and listing of currently selected recipients."
"RTN","LRAPRES1",79,0)
 . S DIR("??")="^D AHELP2^LRAPRES1"
"RTN","LRAPRES1",80,0)
 . S DIR("PRE")="I '$D(DTOUT),$E(X)=""-"" S X=$E(X,2,9999),LRDELETE=1"
"RTN","LRAPRES1",81,0)
 . D ^DIR
"RTN","LRAPRES1",82,0)
 . I $D(DIRUT) S LRQUIT=1 Q
"RTN","LRAPRES1",83,0)
 . S LRADL="",Y=$$UP^XLFSTR(Y)
"RTN","LRAPRES1",84,0)
 . I Y["." S LRADL=$P(Y,"."),X=$P(Y,".",2)
"RTN","LRAPRES1",85,0)
 . K DIC
"RTN","LRAPRES1",86,0)
 . S DIC(0)="QEZ"
"RTN","LRAPRES1",87,0)
 . S DIC=$S(LRADL="G":3.8,1:200)
"RTN","LRAPRES1",88,0)
 . D ^DIC
"RTN","LRAPRES1",89,0)
 . Q:Y=-1
"RTN","LRAPRES1",90,0)
 . I LRDELETE D
"RTN","LRAPRES1",91,0)
 . . I LRADL="" K XQA($P(Y,"^")) Q
"RTN","LRAPRES1",92,0)
 . . I LRADL="G" K XQA("G."_$P(Y,"^",2))
"RTN","LRAPRES1",93,0)
 . E  D
"RTN","LRAPRES1",94,0)
 . . I LRADL="",'$D(XQA($P(Y,"^"))) S XQA($P(Y,"^"))="Additional User" Q
"RTN","LRAPRES1",95,0)
 . . I LRADL="G" S XQA("G."_$P(Y,"^",2))="Additional Mail Group"
"RTN","LRAPRES1",96,0)
 . K LRMSG
"RTN","LRAPRES1",97,0)
 . S LRMSG=$S(LRADL="G":"Mail group ",1:"User ")_$P(Y,"^",2)_$S(LRDELETE:" deleted from",1:" added to")_" alert list."
"RTN","LRAPRES1",98,0)
 . D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES1",99,0)
 Q
"RTN","LRAPRES1",100,0)
 ;
"RTN","LRAPRES1",101,0)
 ;
"RTN","LRAPRES1",102,0)
ALERT ; Send the alert
"RTN","LRAPRES1",103,0)
 ;
"RTN","LRAPRES1",104,0)
 M XQA=LRXQA
"RTN","LRAPRES1",105,0)
 I '$D(XQA) D EN^DDIOL("Alerts NOT sent - no alert recipients identified!","","!!") Q
"RTN","LRAPRES1",106,0)
 ;
"RTN","LRAPRES1",107,0)
 D LAB^ORB3LAB(DFN,LRDFN,LRI,$G(LRA),LRSS,.XQA)
"RTN","LRAPRES1",108,0)
 ;
"RTN","LRAPRES1",109,0)
 D EN^DDIOL("Alerts have been sent.","","!!")
"RTN","LRAPRES1",110,0)
 Q
"RTN","LRAPRES1",111,0)
 ;
"RTN","LRAPRES1",112,0)
 ;
"RTN","LRAPRES1",113,0)
AHELP ; Help Frame
"RTN","LRAPRES1",114,0)
 N LRI,LRJ,LRMSG
"RTN","LRAPRES1",115,0)
 S LRMSG(1)="Enter either 'Y' or 'N'."
"RTN","LRAPRES1",116,0)
 S LRMSG(2)="If answered 'Yes', you will also have the opportunity to send alerts",LRMSG(2,"F")="!!"
"RTN","LRAPRES1",117,0)
 S LRMSG(3)="to additional recipients and/or mail groups."
"RTN","LRAPRES1",118,0)
 S LRMSG(4)="A mandatory alert is sent to the ordering provider/surgeon and the primary care",LRMSG(4,"F")="!!"
"RTN","LRAPRES1",119,0)
 S LRMSG(5)="provider/attending that this report has been electronically signed and is now"
"RTN","LRAPRES1",120,0)
 S LRMSG(6)="available for viewing."
"RTN","LRAPRES1",121,0)
 S LRJ=6
"RTN","LRAPRES1",122,0)
 D CHELP
"RTN","LRAPRES1",123,0)
 Q
"RTN","LRAPRES1",124,0)
 ;
"RTN","LRAPRES1",125,0)
AHELP2 ; Help frame entry point for additional recipients selection
"RTN","LRAPRES1",126,0)
 ;
"RTN","LRAPRES1",127,0)
 N LRI,LRJ,LRMSG
"RTN","LRAPRES1",128,0)
 S LRMSG(1)="A mandatory alert is sent to the ordering provider/surgeon and the primary care",LRMSG(4,"F")="!!"
"RTN","LRAPRES1",129,0)
 S LRMSG(2)="provider/attending that this report has been electronically signed and is now"
"RTN","LRAPRES1",130,0)
 S LRMSG(3)="available for viewing."
"RTN","LRAPRES1",131,0)
 S LRJ=3
"RTN","LRAPRES1",132,0)
 D CHELP
"RTN","LRAPRES1",133,0)
 Q
"RTN","LRAPRES1",134,0)
 ;
"RTN","LRAPRES1",135,0)
 ;
"RTN","LRAPRES1",136,0)
CHELP ; Display common help
"RTN","LRAPRES1",137,0)
 ;
"RTN","LRAPRES1",138,0)
 I '$D(LRXQA) S LRJ=LRJ+1,LRMSG(LRJ)="No mandatory recipients listed",LRMSG(LRJ,"F")="!!"
"RTN","LRAPRES1",139,0)
 E  D
"RTN","LRAPRES1",140,0)
 . S LRI=0,LRJ=LRJ+1,LRMSG(LRJ)="The current mandatory recipients will be:",LRMSG(LRJ,"F")="!!"
"RTN","LRAPRES1",141,0)
 . F  S LRI=$O(LRXQA(LRI)) Q:LRI<1  S LRJ=LRJ+1,LRMSG(LRJ)=$$NAME^XUSER(LRI,"F")_"  ["_LRXQA(LRI)_"]"
"RTN","LRAPRES1",142,0)
 ;
"RTN","LRAPRES1",143,0)
 I '$D(XQA) S LRJ=LRJ+1,LRMSG(LRJ)="No additional recipients listed",LRMSG(LRJ,"F")="!!"
"RTN","LRAPRES1",144,0)
 E  D
"RTN","LRAPRES1",145,0)
 . S LRI="",LRJ=LRJ+1,LRMSG(LRJ)="The current additional recipients will be:",LRMSG(LRJ,"F")="!!"
"RTN","LRAPRES1",146,0)
 . F  S LRI=$O(XQA(LRI)) Q:LRI=""  S LRJ=LRJ+1,LRMSG(LRJ)=$S(LRI:$$NAME^XUSER(LRI,"F"),1:LRI)_"  ["_XQA(LRI)_"]"
"RTN","LRAPRES1",147,0)
 ;
"RTN","LRAPRES1",148,0)
 D EN^DDIOL(.LRMSG)
"RTN","LRAPRES1",149,0)
 Q
"RTN","LRAPRES1",150,0)
 ;
"RTN","LRAPRES1",151,0)
 ;
"RTN","LRAPRES1",152,0)
RETRACT(LRDFN,LRSS,LRI,LRTIUPTR) ;
"RTN","LRAPRES1",153,0)
 ; Change prior TIU versions of report to RETRACTED status
"RTN","LRAPRES1",154,0)
 N LRROOT,LRIENS,LRFILE,LRTIUP,LRTIUAR,LRERR,LRSTAT,LRTIUX,LREXRR
"RTN","LRAPRES1",155,0)
 I LRSS=""!("AUSPEMCY"'[LRSS) S LRPTR=0 Q
"RTN","LRAPRES1",156,0)
 I LRSS="AU" D
"RTN","LRAPRES1",157,0)
 . S LRROOT="^LR(LRDFN,101,""C""",LRIENS=LRDFN_","
"RTN","LRAPRES1",158,0)
 . S LRFILE=63.101
"RTN","LRAPRES1",159,0)
 I LRSS'="AU" D
"RTN","LRAPRES1",160,0)
 . S LRROOT="^LR(LRDFN,LRSS,LRI,.05,""C"""
"RTN","LRAPRES1",161,0)
 . S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPRES1",162,0)
 . S LRFILE=$S(LRSS="SP":63.19,LRSS="CY":63.47,LRSS="EM":63.49,1:"")
"RTN","LRAPRES1",163,0)
 Q:'$D(@(LRROOT_")"))
"RTN","LRAPRES1",164,0)
 S LRTIUP=0,LRTIUX(.05)=15
"RTN","LRAPRES1",165,0)
 F  S LRTIUP=$O(@(LRROOT_",LRTIUP)"))  Q:LRTIUP'>0!(LRTIUP=LRTIUPTR)  D
"RTN","LRAPRES1",166,0)
 . K LRTIUAR S (LRSTAT,LRERR)=0
"RTN","LRAPRES1",167,0)
 . D EXTRACT^TIULQ(LRTIUP,"LRTIUAR",.LRERR,".05",,,"I")
"RTN","LRAPRES1",168,0)
 . Q:+LRERR
"RTN","LRAPRES1",169,0)
 . M LRSTAT=LRTIUAR(LRTIUP,.05,"I")
"RTN","LRAPRES1",170,0)
 . Q:LRSTAT'=7  ;Quit if current status is not COMPLETED
"RTN","LRAPRES1",171,0)
 . D FILE^TIUSRVP(.LREXRR,LRTIUP,.LRTIUX)
"RTN","LRAPRES1",172,0)
 . ; Update new TIU version of report with previous TIU pointer value
"RTN","LRAPRES1",173,0)
 . N LREXRR,LRTIUX
"RTN","LRAPRES1",174,0)
 . S LRTIUX(1406)=LRTIUP
"RTN","LRAPRES1",175,0)
 . D FILE^TIUSRVP(.LREXRR,LRTIUPTR,.LRTIUX)
"RTN","LRAPRES1",176,0)
 Q
"RTN","LRAPRES1",177,0)
 ;
"RTN","LRAPRES1",178,0)
 ;
"RTN","LRAPRES1",179,0)
CLSSCHK(DUZ,LREND) ; Determine if user has the proper class settings and PROVIDER key
"RTN","LRAPRES1",180,0)
 ;
"RTN","LRAPRES1",181,0)
 N LRMSG,LRPRCLSS,LRPCEXP,LRVCDE,LRPCSTR,LRMTCH
"RTN","LRAPRES1",182,0)
 ; First, check for PROVIDER key
"RTN","LRAPRES1",183,0)
 I '$D(^XUSEC("PROVIDER",DUZ)) D  Q
"RTN","LRAPRES1",184,0)
 . D EN^DDIOL($C(7)_"Electronic signature not authorized.  Missing PROVIDER key.","","!!")
"RTN","LRAPRES1",185,0)
 . S LREND=1
"RTN","LRAPRES1",186,0)
 ; Next, check the provider class
"RTN","LRAPRES1",187,0)
 ; PROVIDER CL must contain PHYSICIAN, or CYTOTECH only for CY section
"RTN","LRAPRES1",188,0)
 ; or DENTIST for ORAL AND MAXILLOFACIAL PATHOLOGY
"RTN","LRAPRES1",189,0)
 S LRPRCLSS=$$GET1^DIQ(200,DUZ_",",53.5)
"RTN","LRAPRES1",190,0)
 S LRMTCH=0
"RTN","LRAPRES1",191,0)
 I LRPRCLSS'["PHYSICIAN",LRPRCLSS'["DENTIST" D
"RTN","LRAPRES1",192,0)
 . I LRPRCLSS'["CYTOTECH" S LRMTCH=1
"RTN","LRAPRES1",193,0)
 . I LRSS'="CY" S LRMTCH=1
"RTN","LRAPRES1",194,0)
 I LRMTCH=1 D  Q
"RTN","LRAPRES1",195,0)
 . N LRMSG
"RTN","LRAPRES1",196,0)
 . S LRMSG(1)=$C(7)_"You are not authorized to electronically sign reports.",LRMSG(1,"F")="!!"
"RTN","LRAPRES1",197,0)
 . S LRMSG(2)="PROVIDER CLASS must include PHYSICIAN,"
"RTN","LRAPRES1",198,0)
 . S LRMSG(3)=" or CYTOTECHNOLOGIST for CY SECTIONS ONLY,"
"RTN","LRAPRES1",199,0)
 . S LRMSG(4)=" or DENTIST for ORAL AND MAXILLOFACIAL PATHOLOGY."
"RTN","LRAPRES1",200,0)
 . D EN^DDIOL(.LRMSG)
"RTN","LRAPRES1",201,0)
 . S LREND=1
"RTN","LRAPRES1",202,0)
 ;
"RTN","LRAPRES1",203,0)
 ; Finally, check the person class
"RTN","LRAPRES1",204,0)
 S LRPCSTR=$$GET^XUA4A72(DUZ)
"RTN","LRAPRES1",205,0)
 I LRPCSTR<0 D  Q
"RTN","LRAPRES1",206,0)
 . D EN^DDIOL("PERSON CLASS is inactive or undefined.  Electronic signature is not authorized.","","!!")
"RTN","LRAPRES1",207,0)
 . S LREND=1
"RTN","LRAPRES1",208,0)
 S LRPCEXP=+$P(LRPCSTR,"^",6)
"RTN","LRAPRES1",209,0)
 I LRPCEXP,LRPCEXP<DT D  Q
"RTN","LRAPRES1",210,0)
 . D EN^DDIOL("PERSON CLASS has expired.  Electronic signature is not authorized.","","!!")
"RTN","LRAPRES1",211,0)
 . S LREND=1
"RTN","LRAPRES1",212,0)
 S LRVCDE=$P(LRPCSTR,"^",7),LRMTCH=0
"RTN","LRAPRES1",213,0)
 ;
"RTN","LRAPRES1",214,0)
 ; Correct PERSON Class should match PROVIDER Class
"RTN","LRAPRES1",215,0)
 I LRPRCLSS["PHYSICIAN" D
"RTN","LRAPRES1",216,0)
 . I $E(LRVCDE,1,6)="V11370","123568"[+$E(LRVCDE,7) S LRMTCH=1 Q
"RTN","LRAPRES1",217,0)
 . I $E(LRVCDE,1,6)="V11371","03"[+$E(LRVCDE,7) S LRMTCH=1 Q
"RTN","LRAPRES1",218,0)
 . I $E(LRVCDE,1,6)="V18240","124579"[+$E(LRVCDE,7) S LRMTCH=1 Q
"RTN","LRAPRES1",219,0)
 . I LRVCDE="V182413" S LRMTCH=1
"RTN","LRAPRES1",220,0)
 ;
"RTN","LRAPRES1",221,0)
 I LRPRCLSS["CYTOTECH",LRVCDE="V150113" S LRMTCH=1
"RTN","LRAPRES1",222,0)
 I LRPRCLSS["DENTIST",LRVCDE="V030503" S LRMTCH=1
"RTN","LRAPRES1",223,0)
 ;
"RTN","LRAPRES1",224,0)
 I 'LRMTCH D
"RTN","LRAPRES1",225,0)
 . D EN^DDIOL("Invalid PERSON CLASS.  Electronic Signature is not authorized.","","!!")
"RTN","LRAPRES1",226,0)
 . S LREND=1
"RTN","LRAPRES1",227,0)
 Q
"RTN","LROS")
0^12^B42665920^B33110400
"RTN","LROS",1,0)
LROS ;SLC/CJS/DALOI/FHS-LAB ORDER STATUS ;10/03/16  00:48
"RTN","LROS",2,0)
 ;;5.2;LAB SERVICE;**121,153,202,210,221,263,450,462**;Sep 27, 1994;Build 44
"RTN","LROS",3,0)
 N LRLOOKUP S LRLOOKUP=1 ; Variable to indicate to lookup patients, prevent adding new entries in ^LRDPA
"RTN","LROS",4,0)
 ;;*
"RTN","LROS",5,0)
 N AGE,DOB,DOD,LRLABKY,LRPRAC,LRRB,LRTREA,LRWRD,SEX,SSN,VAPD
"RTN","LROS",6,0)
 ;;;*
"RTN","LROS",7,0)
EN K DIC,LRDPAF,%DT("B") S DIC(0)="A"
"RTN","LROS",8,0)
 D ^LRDPA G:(LRDFN=-1)!$D(DUOUT)!$D(DTOUT) LREND D L0 G EN
"RTN","LROS",9,0)
L0 D ENT S %DT="" D DT^LRX
"RTN","LROS",10,0)
L1 S LREND=0,%DT="E",%DT("A")="DATE to begin review: " D DATE^LRWU G LREND:Y<1 S (LRSDT,LRODT)=Y S %DT="",X="T-"_$S($P($G(^LAB(69.9,1,0)),U,9):$P(^(0),U,9),1:30) D ^%DT S LRLDAT=Y
"RTN","LROS",11,0)
L2 S LRSN=$O(^LRO(69,LRODT,1,"AA",LRDFN,0)) I LRSN<1 S Y=LRODT D DD^LRX W !,"No orders for ",Y S X1=LRODT,X2=-1 D C^%DTC S LRODT=X I LRODT<LRLDAT W !!,"NO REMAINING ACTIVE ORDERS",! G LREND
"RTN","LROS",12,0)
 D WAIT:$Y>18 G LREND:LREND,L2:LRSN<1
"RTN","LROS",13,0)
 I LRSDT'=LRODT W !,"Orders for date: " S Y=LRODT D DD^LRX W Y," OK" S %=1 D YN^DICN I %'=1 G LREND
"RTN","LROS",14,0)
 D ENTRY G LREND:LREND S X1=LRODT,X2=-1 D C^%DTC S LRODT=X
"RTN","LROS",15,0)
 G L2
"RTN","LROS",16,0)
ENTRY D HED Q:LREND
"RTN","LROS",17,0)
 S LRSN=0 F  S LRSN=$O(^LRO(69,LRODT,1,"AA",LRDFN,LRSN)) Q:LRSN<1!($G(LREND))  D ORDER Q:$G(LREND)  D HED:$Y>(IOSL-2)
"RTN","LROS",18,0)
 Q
"RTN","LROS",19,0)
ORDER ;call with LRSN, from LROE, LROE1, LRORD1, LROW2, LROR1
"RTN","LROS",20,0)
 K D,LRTT S LREND=0
"RTN","LROS",21,0)
 Q:'$D(^LRO(69,LRODT,1,LRSN,0))  S LROD0=^LRO(69,LRODT,1,LRSN,0),LROD1=$S($D(^(1)):^(1),1:""),LROD3=$S($D(^(3)):^(3),1:"")
"RTN","LROS",22,0)
 W !?2,"-Lab Order # ",$S($D(^LRO(69,LRODT,1,LRSN,.1)):^(.1),1:"") S X=$P(LROD0,U,6) D DOC^LRX W ?45,"Provider: ",$E(LRDOC,1,25) D WAIT Q:$G(LREND)
"RTN","LROS",23,0)
 S X=$P(LROD0,U,3),X=$S(X:$S($D(^LAB(62,+X,0)):$P(^(0),U),1:""),1:""),X4="" I $D(^LRO(69,LRODT,1,LRSN,4,1,0)),+^(0) S X4=+^(0),X4=$S($D(^LAB(61,X4,0)):$P(^(0),U),1:"")
"RTN","LROS",24,0)
 I $E($P(LROD1,U,6))="*" W !?3,$P(LROD1,U,6) D WAIT Q:$G(LREND)
"RTN","LROS",25,0)
 I $G(^LRO(69,LRODT,1,LRSN,"PCE")) W !,?5,"Visit Number(s): ",$G(^("PCE")) D WAIT Q:$G(LREND)
"RTN","LROS",26,0)
 W !?2,X,"  " W:X'[X4 X4 S I=0 F  S I=$O(^LRO(69,LRODT,1,LRSN,6,I)) Q:I<1!($G(LREND))  W !?5,": ",^(I,0) D WAIT Q:$G(LREND)
"RTN","LROS",27,0)
 S LRACN=0 F  S LRACN=$O(^LRO(69,LRODT,1,LRSN,2,LRACN)) Q:LRACN<1!($G(LREND))  I $D(^(LRACN,0))#2 S LRACN0=^(0) D TEST
"RTN","LROS",28,0)
 Q
"RTN","LROS",29,0)
TEST N LRY,LRURG
"RTN","LROS",30,0)
 S LRROD=$P(LRACN0,U,6),(Y,LRLL,LROT,LROS,LROSD,LRURG)="",X3=0
"RTN","LROS",31,0)
 I $P(LRACN0,"^",11)!($P(LRACN0,U,9)="CA") G CANC
"RTN","LROS",32,0)
 S X=$P(LROD0,U,4),LROT=$S(X="WC":"Requested (WARD COL)",X="SP":"Requested (SEND PATIENT)",X="LC":"Requested (LAB COL)",X="I":"Requested (IMM LAB COL)",1:"undetermined")
"RTN","LROS",33,0)
 S X=$P(LROD1,U,4),(LROOS,LROS)=$S(X="C":"Collected",X="U":"Uncollected, cancelled",1:"On Collection List") S:X="C" LROT=""
"RTN","LROS",34,0)
 I '(+LRACN0) W !!,"BAD ORDER ",LRSN,!,$C(7) D WAIT Q
"RTN","LROS",35,0)
 G NOTACC:LROD1="" ;,NOTACC:$P(LROD1,"^",4)="U"
"RTN","LROS",36,0)
TST1 S X1=+$P(LRACN0,U,4),X2=+$P(LRACN0,U,3),X3=+$P(LRACN0,U,5)
"RTN","LROS",37,0)
 G NOTACC:'$D(^LRO(68,X1,1,X2,1,X3,0)),NOTACC:'$D(^(3)) S LRACD=$S($D(^(9)):^(9),1:"")
"RTN","LROS",38,0)
 I '$D(LRTT(X1,X2,X3)) S LRTT(X1,X2,X3)="",I=0 F  S I=$O(^LRO(68,X1,1,X2,1,X3,4,I)) Q:I<.5!($G(LREND))  S LRACC=^(I,0),LRTSTS=+LRACC D TST2
"RTN","LROS",39,0)
 I $E($P(LROD1,U,6))="*" W !,?20,$P(LROD1,U,6) D WAIT
"RTN","LROS",40,0)
 Q
"RTN","LROS",41,0)
TST2 ;
"RTN","LROS",42,0)
 N I
"RTN","LROS",43,0)
 S LRURG=+$P(LRACC,U,2) I LRURG>49 Q
"RTN","LROS",44,0)
 I 'LRTSTS W !!,"BAD ACCESSION TEST POINTER: ",LRTSTS Q
"RTN","LROS",45,0)
 S LROT="",LROS=LROOS,LRLL=$P(LRACC,U,3),Y=$P(LRACC,U,5) I Y S LROS=$S($E($P(LRACC,U,6))="*":$P(LRACC,U,6),1:"Test Complete") D DATE S LROSD=Y D WRITE,COM(1.1),COM(1) Q
"RTN","LROS",46,0)
 S Y=$P(LROD3,U) D DATE S LROSD=Y I LRLL S LROS="Testing In Progress"
"RTN","LROS",47,0)
 I $P(LROD1,"^",4)="U" S (LROS,LROOS)=""
"RTN","LROS",48,0)
 D WRITE,COM(1.1),COM(1)
"RTN","LROS",49,0)
 Q
"RTN","LROS",50,0)
WRITE ;
"RTN","LROS",51,0)
 W !?2,$S($D(^LAB(60,+LRTSTS,0)):$P(^(0),U),1:"BAD TEST POINTER")
"RTN","LROS",52,0)
 I $X>20 W ! D WAIT Q:(LREND)
"RTN","LROS",53,0)
 W ?20,$S($D(^LAB(62.05,+LRURG,0)):$P(^(0),U),1:"")," " D WAIT Q:$G(LREND)
"RTN","LROS",54,0)
 I $X>28 W ! D WAIT Q:$G(LREND)
"RTN","LROS",55,0)
 W ?28,LROT," ",LROS,?43," ",LROSD
"RTN","LROS",56,0)
 W:X3 ?60," ",$S($D(^LRO(68,X1,1,X2,1,X3,.2)):^(.2),1:"")
"RTN","LROS",57,0)
 I LRROD W !?46,"  See order: ",LRROD D WAIT Q:$G(LREND)
"RTN","LROS",58,0)
 ;;*
"RTN","LROS",59,0)
APDATA ; Display CPRS AP Dialog
"RTN","LROS",60,0)
 I $O(^LRO(69,LRODT,1,LRSN,4,1,0)) D
"RTN","LROS",61,0)
 . ;
"RTN","LROS",62,0)
 . N DIC,DR,DA,S,LREND
"RTN","LROS",63,0)
 . D WAIT Q:$G(LREND)
"RTN","LROS",64,0)
 . W !,$$CJ^XLFSTR("+++++++++++++++   SPECIMEN DATA  +++++++++++++++",IOM),!
"RTN","LROS",65,0)
 . S DIC="^LRO(69,"_LRODT_",1,",S=$Y
"RTN","LROS",66,0)
 . S DR=4,DA=LRSN,DA(1)=LRSN,DA(2)=LRODT
"RTN","LROS",67,0)
 . D EN^DIQ
"RTN","LROS",68,0)
 . W !,$$CJ^XLFSTR("=================   END OF SPECIMEN DATA ==================",IOM)
"RTN","LROS",69,0)
 . W !,"  PRESS '^' TO STOP " R X:DTIME S:X="" X=1 S LREND=".^"[X Q:$G(LREND)  W @IOF
"RTN","LROS",70,0)
 . D WAIT Q:$G(LREND)
"RTN","LROS",71,0)
 . I $O(^LRO(69,LRODT,1,LRSN,13,0)) D
"RTN","LROS",72,0)
 . . W !!,$$CJ^XLFSTR("+++++++++++++++ DIALOG RESPONSE  +++++++++++++++",IOM)
"RTN","LROS",73,0)
 . . N DIC,DR,DA,S,LREND
"RTN","LROS",74,0)
 . . S DIC="^LRO(69,"_LRODT_",1,",S=$Y
"RTN","LROS",75,0)
 . . S DR=4,DA=LRSN,DA(1)=LRSN,DA(2)=LRODT
"RTN","LROS",76,0)
 . . S DR="11:16" D EN^DIQ
"RTN","LROS",77,0)
 . . W !,$$CJ^XLFSTR("================== END OF DIALOG RESPONSE ==================",IOM)
"RTN","LROS",78,0)
 . W !,"  PRESS '^' TO STOP " R X:DTIME S:X="" X=1 S LREND=".^"[X Q:$G(LREND)  W @IOF
"RTN","LROS",79,0)
 . D WAIT
"RTN","LROS",80,0)
 ;;;*
"RTN","LROS",81,0)
 Q
"RTN","LROS",82,0)
COM(LRMMODE) ;
"RTN","LROS",83,0)
 ;Write comments
"RTN","LROS",84,0)
 ;LRMMODE=comments node to display
"RTN","LROS",85,0)
 N LRTSTI
"RTN","LROS",86,0)
 S:'$G(LRMMODE) LRMMODE=1
"RTN","LROS",87,0)
 S LRTSTI=$O(^LRO(69,LRODT,1,LRSN,2,"B",+LRTSTS,0)) Q:'LRTSTI
"RTN","LROS",88,0)
 D COMWRT(LRODT,LRSN,LRTSTI,LRMMODE,3)
"RTN","LROS",89,0)
 Q
"RTN","LROS",90,0)
COMWRT(LRODT,LRSN,LRTSTI,NODE,TAB) ;
"RTN","LROS",91,0)
 ;Write comment node
"RTN","LROS",92,0)
 I $S('LRODT:1,'LRSN:1,'LRTSTI:1,'NODE:1,1:0) Q
"RTN","LROS",93,0)
 Q:'$D(^LRO(69,LRODT,1,LRSN,2,LRTSTI))
"RTN","LROS",94,0)
 S:'$G(TAB) TAB=3
"RTN","LROS",95,0)
 N LRI
"RTN","LROS",96,0)
 S LRI=0 F  S LRI=$O(^LRO(69,LRODT,1,LRSN,2,LRTSTI,NODE,LRI)) Q:LRI<1!($G(LREND))  W:$D(^(LRI,0)) !?TAB,": "_^(0) D WAIT
"RTN","LROS",97,0)
 Q
"RTN","LROS",98,0)
NOTACC I $G(LROD3)="" S LROS="" G NO2
"RTN","LROS",99,0)
 I $P(LROD3,U,2)'="" S LROS=" ",Y=$P(LROD3,U,2) G NO2
"RTN","LROS",100,0)
 S Y=$P(LROD3,U) S LROS=" "
"RTN","LROS",101,0)
NO2 S:'Y Y=$P(LROD0,U,8) S Y=$S(Y:Y,+LROD3:+LROD3,+LROD1:+LROD1,1:LRODT) D DATE S LROSD=Y
"RTN","LROS",102,0)
 S LRTSTS=+LRACN0,LRURG=$P(LRACN0,U,2)
"RTN","LROS",103,0)
 S LROS=$S(LRROD:"Combined",1:LROS) S:LROS="" LROS="for: "
"RTN","LROS",104,0)
 I LRTSTS D WRITE,COM(1.1),COM(1) ;second call for backward compatibility - can be removed in future years (1/98)
"RTN","LROS",105,0)
 I $L($P(LROD1,U,6)) W !,?20,$P(LROD1,U,6) D WAIT
"RTN","LROS",106,0)
 Q
"RTN","LROS",107,0)
DATE S Y=$$FMTE^XLFDT(Y,"5MZ") Q
"RTN","LROS",108,0)
HED D WAIT:$E(IOST,1)="C"&($Y>18) Q:$G(LREND)  W @IOF,!,"  Test",?20,"Urgency",?30,"Status",?64,"Accession"
"RTN","LROS",109,0)
ENT ;from LROE, LROE1, LRORD1, LROW2
"RTN","LROS",110,0)
 Q
"RTN","LROS",111,0)
LREND I $E(IOST)="P" W @IOF
"RTN","LROS",112,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LROS",113,0)
 K LRLDAT,LRURG,LROSD,LRTT,LROS,LROOS,LRROD,X1,X2,X3,%,A,DFN,DIC,I,K,LRACC,LRACN,LRACN0,LRDFN,LRDOC,LRDPF,LREND,LRLL,LROD0,LROD1,LROD3,LRODT,LROT,LRSDT,LRSN,LRTSTS,X,X4,Y,Z,%Y,DIWL,DIWR,DPF,PNM Q
"RTN","LROS",114,0)
SHOW ;call with LRSN,LRODT, from LRCENDEL, LRTSTJAN
"RTN","LROS",115,0)
 S LREND=0
"RTN","LROS",116,0)
 W !,"Order  Test",?20,"Urgency",?30,"Status",?64,"Accession" D ORDER Q
"RTN","LROS",117,0)
WAIT Q:$Y<(IOSL-3)  I $E(IOST)'="C" W @IOF Q
"RTN","LROS",118,0)
 W !,"  PRESS '^' TO STOP " R X:DTIME S:X="" X=1 S LREND=".^"[X Q:$G(LREND)  W @IOF
"RTN","LROS",119,0)
 Q
"RTN","LROS",120,0)
CANC ;For Canceled tests
"RTN","LROS",121,0)
 ;;*
"RTN","LROS",122,0)
 ;S LRTSTS=+$G(LRACN0),LROT="*Canceled by: "_$S($P(LRANC0,U,11):$P(^VA(200,$P(LRACN0,"^",11),0),U),1:"Not Specified")
"RTN","LROS",123,0)
 S LRTSTS=+$G(LRACN0),LROT="*Canceled by: "_$S($P(LRACN0,U,11):$P(^VA(200,$P(LRACN0,"^",11),0),U),1:"Not Specified")
"RTN","LROS",124,0)
 ;;;*
"RTN","LROS",125,0)
 I LRTSTS D WRITE,COM(1.1),COM(1) ;second call for backward compatitility - can be removed in future years (1/98)
"RTN","LROS",126,0)
 Q
"RTN","LROS",127,0)
OERR(X) ;Get order status for predefined patient
"RTN","LROS",128,0)
 ;X=DFN;DPT(   <--ORVP FORMAT
"RTN","LROS",129,0)
 I '$G(X) W !!?5,"NO PATIENT SELECTED",! H 2 Q
"RTN","LROS",130,0)
 N DFN,LRDPA,LRDFN,LRDT0,VA200
"RTN","LROS",131,0)
 S DFN=+X,LRDPF=+$P(@("^"_$P(X,";",2)_"0)"),"^",2)_"^"_$P(X,";",2)
"RTN","LROS",132,0)
 D END^LRDPA
"RTN","LROS",133,0)
 Q:LRDFN=-1
"RTN","LROS",134,0)
 W !,"Lab test status for: "_$P(^DPT(DFN,0),"^")
"RTN","LROS",135,0)
 D L0
"RTN","LROS",136,0)
 Q
"RTN","LRUDEL")
0^39^B28725080^B25312700
"RTN","LRUDEL",1,0)
LRUDEL ;DALOI/REG,CYM,PMK - DELETE AN AP ACCESSION NUMBER ;10/05/16  12:52
"RTN","LRUDEL",2,0)
 ;;5.2;LAB SERVICE;**1,72,121,201,350,427,433,450,462**;Sep 27, 1994;Build 44
"RTN","LRUDEL",3,0)
 ;
"RTN","LRUDEL",4,0)
 D END,^LRAP G:'$D(Y) END D XR^LRU
"RTN","LRUDEL",5,0)
 W !?22,"Delete an Accession Number",!!
"RTN","LRUDEL",6,0)
 ;
"RTN","LRUDEL",7,0)
D S %DT("A")="Accession number date: ",%DT="AQE" D ^%DT K %DT Q:Y<1  S (Y,LRAD)=$E(Y,1,3)_"0000" D DATE S LRH(0)=Y
"RTN","LRUDEL",8,0)
 ;
"RTN","LRUDEL",9,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) W $C(7),!!,"No accession numbers for ",LRH(0),! G D
"RTN","LRUDEL",10,0)
 S H(2)=$E(LRAD,1,3)
"RTN","LRUDEL",11,0)
N1 K LRNO
"RTN","LRUDEL",12,0)
 R !!,"Select Accession # : ",LRAN:DTIME Q:LRAN=""!(LRAN["^")
"RTN","LRUDEL",13,0)
 D REST
"RTN","LRUDEL",14,0)
 L -^LRO(69.2,LRAA)
"RTN","LRUDEL",15,0)
 I $G(LRDFN),$G(LRSS)'="" L -^LR(LRDFN,LRSS)
"RTN","LRUDEL",16,0)
 G N1
"RTN","LRUDEL",17,0)
 ;
"RTN","LRUDEL",18,0)
 ;
"RTN","LRUDEL",19,0)
REST ;
"RTN","LRUDEL",20,0)
 ;
"RTN","LRUDEL",21,0)
 N LRDIV
"RTN","LRUDEL",22,0)
 ;
"RTN","LRUDEL",23,0)
 I LRAN'?1N.N W $C(7),!!,"Enter NUMBERS only" Q
"RTN","LRUDEL",24,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W $C(7),!!,"Accession number ",LRAN," for ",LRH(0)," not in ACCESSION file",!! Q
"RTN","LRUDEL",25,0)
 ;
"RTN","LRUDEL",26,0)
 L +^LRO(68,LRAA,1,LRAD,1,LRAN):DILOCKTM
"RTN","LRUDEL",27,0)
 I '$T W !!?10,$C(7),"Someone else is editing this entry ",! Q
"RTN","LRUDEL",28,0)
 ;
"RTN","LRUDEL",29,0)
 L +^LRO(69.2,LRAA):DILOCKTM
"RTN","LRUDEL",30,0)
 I '$T W !!?10,$C(7),"Someone else is editing this entry ",! Q
"RTN","LRUDEL",31,0)
 ;
"RTN","LRUDEL",32,0)
 S LRND=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRDFN=+LRND
"RTN","LRUDEL",33,0)
 S LRDIV=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.4)),U,1)
"RTN","LRUDEL",34,0)
 I '$D(^LR(LRDFN,0)) D BAD Q
"RTN","LRUDEL",35,0)
 ;
"RTN","LRUDEL",36,0)
 S Y=^LR(LRDFN,0),LRPFN=$P(Y,U,2),LRFNAM=$P(^DIC(LRPFN,0),U),LRPF=^(0,"GL"),Y=$P(Y,U,3),LRP=@(LRPF_Y_",0)")
"RTN","LRUDEL",37,0)
 W !,$P(LRP,U)," ID: ",$P(LRP,U,9) S Y=$P(LRP,U,3) D DATE W:Y'[1700 " DOB: ",Y
"RTN","LRUDEL",38,0)
 W !!,"ACC # ",LRAN
"RTN","LRUDEL",39,0)
 ;
"RTN","LRUDEL",40,0)
 I LRSS="AU" D  Q
"RTN","LRUDEL",41,0)
 . S LRRC=$P($G(^LR(LRDFN,"AU")),U)
"RTN","LRUDEL",42,0)
 . S Y=$$GET1^DIQ(63,LRDFN_",",12) ;Date of Death
"RTN","LRUDEL",43,0)
 . D DEL^LRAUAW
"RTN","LRUDEL",44,0)
 ;
"RTN","LRUDEL",45,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)) D
"RTN","LRUDEL",46,0)
 . S LRI=$O(^LR(LRXREF,H(2),LRABV,LRAN,LRDFN,0))
"RTN","LRUDEL",47,0)
 . I LRI S LRSD=$P($G(^LR(LRDFN,LRSS,LRI,0)),U,1)
"RTN","LRUDEL",48,0)
 ;
"RTN","LRUDEL",49,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,3)) D
"RTN","LRUDEL",50,0)
 . S X=^LRO(68,LRAA,1,LRAD,1,LRAN,3)
"RTN","LRUDEL",51,0)
 . S LRSD=+X
"RTN","LRUDEL",52,0)
 . S LRI=$P(X,"^",5)
"RTN","LRUDEL",53,0)
 . I 'LRI S LRI=$O(^LR(LRXREF,H(2),LRABV,LRAN,LRDFN,0))
"RTN","LRUDEL",54,0)
 ;
"RTN","LRUDEL",55,0)
 I '$G(LRI) D  Q  ;No data in #63 for this accession; only delete from #68
"RTN","LRUDEL",56,0)
 . W "  OK to DELETE "
"RTN","LRUDEL",57,0)
 . S %=2 D YN^LRU
"RTN","LRUDEL",58,0)
 . I %'=1 W $C(7),!?4,"NOT DELETED",!! Q
"RTN","LRUDEL",59,0)
 . K ^LRO(68,LRAA,1,LRAD,1,LRAN),^LRO(68,LRAA,1,"AC",LRDIV,LRAD,LRAN)
"RTN","LRUDEL",60,0)
 . D T
"RTN","LRUDEL",61,0)
 . W !,LRAN," Deleted"
"RTN","LRUDEL",62,0)
  ;
"RTN","LRUDEL",63,0)
 S X=$G(^LR(LRDFN,LRSS,LRI,0))
"RTN","LRUDEL",64,0)
 S LRRC=$P(X,U,10)
"RTN","LRUDEL",65,0)
 I $P(X,"^",3)!($P(X,"^",11))!($P(X,"^",15)) W $C(7),!,"Report completed &/or released, deletion not allowed." Q
"RTN","LRUDEL",66,0)
 ;
"RTN","LRUDEL",67,0)
 L +^LR(LRDFN,LRSS,LRI):DILOCKTM
"RTN","LRUDEL",68,0)
 I '$T W !!?10,"Someone else is editing this entry ",!,$C(7) Q
"RTN","LRUDEL",69,0)
 ;
"RTN","LRUDEL",70,0)
 S Y=LRRC
"RTN","LRUDEL",71,0)
 D DATE
"RTN","LRUDEL",72,0)
 W "  DATE RECEIVED: ",Y,"  OK to DELETE "
"RTN","LRUDEL",73,0)
 S %=2 D YN^LRU
"RTN","LRUDEL",74,0)
 I %'=1 W $C(7),!?4,"NOT DELETED",!! Q
"RTN","LRUDEL",75,0)
 ;
"RTN","LRUDEL",76,0)
 D DEL69AN
"RTN","LRUDEL",77,0)
 ;
"RTN","LRUDEL",78,0)
 D ACC^LR7OB1(LRAA,LRAD,LRAN,"OC") ; Cancel order
"RTN","LRUDEL",79,0)
 ;
"RTN","LRUDEL",80,0)
 I $D(^LR(LRDFN,LRSS,LRI)) D
"RTN","LRUDEL",81,0)
 . ;
"RTN","LRUDEL",82,0)
 . I $T(CANCEL^MAGT7MA)'="" D CANCEL^MAGT7MA ; invoke Imaging HL7 routine - P433
"RTN","LRUDEL",83,0)
 . ;
"RTN","LRUDEL",84,0)
 . K ^LR(LRDFN,LRSS,LRI)
"RTN","LRUDEL",85,0)
 . I $D(^LR(LRDFN,LRSS,0)) S X=^LR(LRDFN,LRSS,0),X(1)=$O(^(0)),X(2)=$P(X,"^",4)-1,^(0)=$P(X,"^",1,2)_"^"_X(1)_"^"_X(2)
"RTN","LRUDEL",86,0)
 ;
"RTN","LRUDEL",87,0)
 K:LRRC ^LR(LRXR,LRRC,LRDFN,LRI)
"RTN","LRUDEL",88,0)
 K ^LR(LRXREF,H(2),LRABV,LRAN,LRDFN,LRI)
"RTN","LRUDEL",89,0)
 D K
"RTN","LRUDEL",90,0)
 K ^LRO(68,LRAA,1,LRAD,1,LRAN),^LRO(68,LRAA,1,"AC",LRDIV,LRAD,LRAN)
"RTN","LRUDEL",91,0)
 K:LRRC ^LRO(68,LRAA,1,LRAD,1,"E",LRRC,LRAN)
"RTN","LRUDEL",92,0)
 ;
"RTN","LRUDEL",93,0)
 L +^LRO(68,LRAA,1,LRAD,1,0):DILOCKTM
"RTN","LRUDEL",94,0)
 I $T D
"RTN","LRUDEL",95,0)
 . S X=^LRO(68,LRAA,1,LRAD,1,0),X(1)=$O(^(0)),X(2)=$P(X,"^",4)-1
"RTN","LRUDEL",96,0)
 . S:X(2)<1 X(2)=0 S ^(0)=$P(X,"^",1,2)_"^"_X(1)_"^"_X(2)
"RTN","LRUDEL",97,0)
 . L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","LRUDEL",98,0)
 ;
"RTN","LRUDEL",99,0)
 D T
"RTN","LRUDEL",100,0)
 Q
"RTN","LRUDEL",101,0)
 ;
"RTN","LRUDEL",102,0)
 ;
"RTN","LRUDEL",103,0)
BAD W $C(7),!!,"Entry not in file",!!
"RTN","LRUDEL",104,0)
 Q
"RTN","LRUDEL",105,0)
 ;
"RTN","LRUDEL",106,0)
 ;
"RTN","LRUDEL",107,0)
T ;
"RTN","LRUDEL",108,0)
 N A
"RTN","LRUDEL",109,0)
 F A=1,2,3,4 I $D(^LRO(69.2,LRAA,A,LRAN)) D
"RTN","LRUDEL",110,0)
 . K ^LRO(69.2,LRAA,A,LRAN)
"RTN","LRUDEL",111,0)
 . S X(1)=$O(^LRO(69.2,LRAA,A,0))
"RTN","LRUDEL",112,0)
 . S:'X(1) X(1)=0
"RTN","LRUDEL",113,0)
 . I $D(^LRO(69.2,LRAA,A,0)) S X=^(0),^(0)=$P(X,"^",1,2)_"^"_X(1)_"^"_$S(X(1)=0:X(1),1:($P(X,"^",4)-1))
"RTN","LRUDEL",114,0)
 Q
"RTN","LRUDEL",115,0)
 ;
"RTN","LRUDEL",116,0)
 ;
"RTN","LRUDEL",117,0)
DATE ; Returns the date in eye-readable month format
"RTN","LRUDEL",118,0)
 S Y=$TR($$FMTE^XLFDT(Y,"M"),"@"," ")
"RTN","LRUDEL",119,0)
 Q
"RTN","LRUDEL",120,0)
 ;
"RTN","LRUDEL",121,0)
 ;
"RTN","LRUDEL",122,0)
K ; also from LRAPED
"RTN","LRUDEL",123,0)
 N A
"RTN","LRUDEL",124,0)
 S A=0
"RTN","LRUDEL",125,0)
 F  S A=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,A)) Q:'A  K ^LRO(68,"AA",LRAA_"|"_LRAD_"|"_LRAN_"|"_A)
"RTN","LRUDEL",126,0)
 Q
"RTN","LRUDEL",127,0)
 ;
"RTN","LRUDEL",128,0)
 ;
"RTN","LRUDEL",129,0)
DEL69AN ; Delete accession number out of file #69's reference
"RTN","LRUDEL",130,0)
 N LRODT,LRSN,LRI,DR,DIE,DA
"RTN","LRUDEL",131,0)
 S LRODT=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),"^",4)
"RTN","LRUDEL",132,0)
 S LRSN=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,0)),"^",5)
"RTN","LRUDEL",133,0)
 ;
"RTN","LRUDEL",134,0)
 L +^LRO(69,LRODT,1,LRSN,2):DILOCKTM
"RTN","LRUDEL",135,0)
 I '$T W !!?10,$C(7),"Someone else is editing this entry ",! Q
"RTN","LRUDEL",136,0)
 ;;*
"RTN","LRUDEL",137,0)
CPRSUP ;CPRS status update to Discontinued
"RTN","LRUDEL",138,0)
 D
"RTN","LRUDEL",139,0)
 . N LRORIFN,LRNATURE,LRT,LRTX,LRX
"RTN","LRUDEL",140,0)
 . S LRX=0
"RTN","LRUDEL",141,0)
 . F  S LRX=$O(^LRO(69,LRODT,1,LRSN,2,LRX)) Q:LRX<1  S LRT=+$G(^(LRX,0)) D
"RTN","LRUDEL",142,0)
 . . S LRTX(LRT)=""
"RTN","LRUDEL",143,0)
 . S LRNATURE="^^^6^SERVICE CORRECTION^99ORR"
"RTN","LRUDEL",144,0)
 . S LRORIFN=$P($G(^LRO(69,LRODT,1,LRSN,0)),U,11)
"RTN","LRUDEL",145,0)
 . D NEW^LR7OB1(LRODT,LRSN,"OC",LRNATURE,.LRTX,1)
"RTN","LRUDEL",146,0)
 ;;;*
"RTN","LRUDEL",147,0)
 S DR="3///@;2///@;4///@;13///@;8///CA;9///L;10////^S X=DUZ"
"RTN","LRUDEL",148,0)
 S DIE="^LRO(69,"_LRODT_",1,"_LRSN_",2,",LRI=0
"RTN","LRUDEL",149,0)
 F  S LRI=$O(^LRO(69,LRODT,1,LRSN,2,LRI)) Q:'LRI  D
"RTN","LRUDEL",150,0)
 .Q:'$D(^LRO(69,LRODT,1,LRSN,2,LRI,0))
"RTN","LRUDEL",151,0)
 .Q:$P(^LRO(69,LRODT,1,LRSN,2,LRI,0),"^",5)'=LRAN
"RTN","LRUDEL",152,0)
 .Q:$P(^LRO(69,LRODT,1,LRSN,2,LRI,0),"^",4)'=LRAA
"RTN","LRUDEL",153,0)
 .Q:$P(^LRO(69,LRODT,1,LRSN,2,LRI,0),"^",3)'=LRAD
"RTN","LRUDEL",154,0)
 .S DA=LRI,DA(1)=LRSN,DA(2)=LRODT
"RTN","LRUDEL",155,0)
 .D ^DIE
"RTN","LRUDEL",156,0)
 L -^LRO(69,LRODT,1,LRSN,2)
"RTN","LRUDEL",157,0)
 Q
"RTN","LRUDEL",158,0)
 ;
"RTN","LRUDEL",159,0)
 ;
"RTN","LRUDEL",160,0)
END D V^LRU
"RTN","LRUDEL",161,0)
 Q
"RTN","LRUWLF")
0^23^B10789696^B10175468
"RTN","LRUWLF",1,0)
LRUWLF ;DALOI/STAFF - FILE #68 UTILITY ;07/14/16  20:06
"RTN","LRUWLF",2,0)
 ;;5.2;LAB SERVICE;**72,350,462**;Sep 27, 1994;Build 44
"RTN","LRUWLF",3,0)
 ;
"RTN","LRUWLF",4,0)
 ;
"RTN","LRUWLF",5,0)
EN ;
"RTN","LRUWLF",6,0)
 ;
"RTN","LRUWLF",7,0)
 S:'$D(LRCS) LRCS=""
"RTN","LRUWLF",8,0)
 ;
"RTN","LRUWLF",9,0)
STF ;
"RTN","LRUWLF",10,0)
 S:'$D(LRSIT) LRSIT=LRU S:'$D(LRSVC) LRSVC=""
"RTN","LRUWLF",11,0)
 ;
"RTN","LRUWLF",12,0)
 ;;*
"RTN","LRUWLF",13,0)
 I '$G(LRAPDIAL) S LRACC=LRABV_" "_LRWHN_" "_LRAN
"RTN","LRUWLF",14,0)
 ;
"RTN","LRUWLF",15,0)
 ; File information in file #68 for this accession
"RTN","LRUWLF",16,0)
 K LRFDA,LR6802,LRDIE
"RTN","LRUWLF",17,0)
 ;;;*
"RTN","LRUWLF",18,0)
 S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","LRUWLF",19,0)
 S LRFDA(1,68.02,LR6802,.01)=LRDFN
"RTN","LRUWLF",20,0)
 S LRFDA(1,68.02,LR6802,1)=+LRDPF
"RTN","LRUWLF",21,0)
 S LRFDA(1,68.02,LR6802,2)=LRAD
"RTN","LRUWLF",22,0)
 ;;*
"RTN","LRUWLF",23,0)
 I $G(LRODT) S LRFDA(1,68.02,LR6802,3)=LRODT ;ORDER DATE
"RTN","LRUWLF",24,0)
 I $G(LRSN) S LRFDA(1,68.02,LR6802,4)=LRSN ; ORDER DATE IEN
"RTN","LRUWLF",25,0)
 ;;;*
"RTN","LRUWLF",26,0)
 S LRFDA(1,68.02,LR6802,6)=LRLLOC
"RTN","LRUWLF",27,0)
 ;
"RTN","LRUWLF",28,0)
 ; No ordering provider/location on controls
"RTN","LRUWLF",29,0)
 I LRDPF'=62.3 D
"RTN","LRUWLF",30,0)
 . S LRFDA(1,68.02,LR6802,6.5)=LRMD(1)
"RTN","LRUWLF",31,0)
 . ;S LRFDA(1,68.02,LR6802,94)=LROLLOC
"RTN","LRUWLF",32,0)
 ;
"RTN","LRUWLF",33,0)
 ; Only store treating specialty on file #2 patients
"RTN","LRUWLF",34,0)
 ; If no treating specialty then use specialty from file #44 location
"RTN","LRUWLF",35,0)
 I LRDPF=2 D
"RTN","LRUWLF",36,0)
 . N LRTREA
"RTN","LRUWLF",37,0)
 . S LRTREA=$P($G(^DPT(DFN,.103)),U)
"RTN","LRUWLF",38,0)
 . I 'LRTREA S LRTREA=$P($G(^SC(+LRLLOC,0)),U,20)
"RTN","LRUWLF",39,0)
 . I LRTREA S LRFDA(1,68.02,LR6802,6.6)=LRTREA
"RTN","LRUWLF",40,0)
 ;
"RTN","LRUWLF",41,0)
 S LRFDA(1,68.02,LR6802,6.7)=DUZ
"RTN","LRUWLF",42,0)
 S LRFDA(1,68.02,LR6802,9)=LRSD
"RTN","LRUWLF",43,0)
 S LRFDA(1,68.02,LR6802,12)=LRRC
"RTN","LRUWLF",44,0)
 S LRFDA(1,68.02,LR6802,13.5)=LRI
"RTN","LRUWLF",45,0)
 I LRC(5)'="" S LRFDA(1,68.02,LR6802,13.6)=LRC(5)
"RTN","LRUWLF",46,0)
 ;;*
"RTN","LRUWLF",47,0)
 I $G(LRORD) S LRFDA(1,68.02,LR6802,14)=LRORD
"RTN","LRUWLF",48,0)
 ;;;*
"RTN","LRUWLF",49,0)
 S LRFDA(1,68.02,LR6802,15)=LRACC
"RTN","LRUWLF",50,0)
 S LRFDA(1,68.02,LR6802,26)=DUZ(2)
"RTN","LRUWLF",51,0)
 S LRFDA(1,68.02,LR6802,92)=LRCAPLOC
"RTN","LRUWLF",52,0)
 D FILE^DIE("S","LRFDA(1)","LRDIE(1)")
"RTN","LRUWLF",53,0)
 I $D(LRDIE(1)) D MAILALRT^LRWLST12("STF~LRUWLF")
"RTN","LRUWLF",54,0)
 ;
"RTN","LRUWLF",55,0)
 ; Create and store UID on accession.
"RTN","LRUWLF",56,0)
 S LRUID=$$LRUID^LRX(LRAA,LRAD,LRAN)
"RTN","LRUWLF",57,0)
 ;
"RTN","LRUWLF",58,0)
 I LRSS="CY" D
"RTN","LRUWLF",59,0)
 . S ^LRO(69.2,LRAA,1,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRUWLF",60,0)
 . L +^LRO(69.2,LRAA,1):DILOCKTM
"RTN","LRUWLF",61,0)
 . S X=^LRO(69.2,LRAA,1,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRUWLF",62,0)
 . L -^LRO(69.2,LRAA,1)
"RTN","LRUWLF",63,0)
 Q
"RTN","LRUWLF",64,0)
 ;
"RTN","LRUWLF",65,0)
 ;
"RTN","LRUWLF",66,0)
EN1 ; add more tests ;used by LRUTAD
"RTN","LRUWLF",67,0)
 S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)) ^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)="^68.04PA^^"
"RTN","LRUWLF",68,0)
 W !
"RTN","LRUWLF",69,0)
 ;
"RTN","LRUWLF",70,0)
TST ;
"RTN","LRUWLF",71,0)
 K LRTEST
"RTN","LRUWLF",72,0)
 S DIC=60,DIC("A")="   Add Test/Procedure: ",DIC(0)="AEMOQZ",DIC("S")="I $P(^(0),U,4)=LRAA(2),$A($P(^(0),U,3))<78"
"RTN","LRUWLF",73,0)
 D ^DIC K DIC
"RTN","LRUWLF",74,0)
 I Y<1 S LRSIT="" Q
"RTN","LRUWLF",75,0)
 ;
"RTN","LRUWLF",76,0)
 S (LRTEST,Y)=+Y,LRTNAM=$P(Y,U,2)
"RTN","LRUWLF",77,0)
 S N=0
"RTN","LRUWLF",78,0)
 F  S N=$O(^LAB(60,LRTEST,1,N)) Q:'N  S LRTEST(1)=$S($D(^LAB(60,LRTEST,1,N,0)):+^LAB(60,LRTEST,1,N,0),1:"") Q:LRTEST(1)=LRSIT
"RTN","LRUWLF",79,0)
 I LRSS="CH",N<1 W $C(7),!!,"CANNOT ORDER ",LRTNAM," FOR ",$P(^LAB(61,LRSIT,0),U) G TST
"RTN","LRUWLF",80,0)
 D SUM
"RTN","LRUWLF",81,0)
 K LRRP
"RTN","LRUWLF",82,0)
 G TST
"RTN","LRUWLF",83,0)
 ;
"RTN","LRUWLF",84,0)
 ;
"RTN","LRUWLF",85,0)
SUM ;
"RTN","LRUWLF",86,0)
 ;
"RTN","LRUWLF",87,0)
 S N=0
"RTN","LRUWLF",88,0)
 F X=0:1 S N=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,N)) Q:'N  S:Y=N LRRP=1
"RTN","LRUWLF",89,0)
 Q:$D(LRRP)
"RTN","LRUWLF",90,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,Y,0)=LRTEST_"^^"
"RTN","LRUWLF",91,0)
 I $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),"^",4)<1 S ^(0)="^68.04PA^"_Y_"^"_1 Q
"RTN","LRUWLF",92,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)="^68.04PA^"_Y_"^"_($P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),"^",4)+1)
"RTN","LRUWLF",93,0)
 ;
"RTN","LRUWLF",94,0)
 Q
"SEC","^DIC",69.71,69.71,0,"AUDIT")
L
"SEC","^DIC",69.71,69.71,0,"DD")
@
"SEC","^DIC",69.71,69.71,0,"DEL")
@
"SEC","^DIC",69.71,69.71,0,"LAYGO")
@
"VER")
8.0^22.0
"^DD",60,60,0)
FIELD^NL^21661^49
"^DD",60,60,0,"DDA")
N
"^DD",60,60,0,"DT")
3160224
"^DD",60,60,0,"ID",4)
W ""
"^DD",60,60,0,"ID",17)
W ""
"^DD",60,60,0,"ID",51)
W ""
"^DD",60,60,0,"ID",400)
W ""
"^DD",60,60,0,"IX","AB",60.02,.01)

"^DD",60,60,0,"IX","AC",60,64)

"^DD",60,60,0,"IX","AD",60,64)

"^DD",60,60,0,"IX","AE",60,64.1)

"^DD",60,60,0,"IX","AF",60.01,95.3)

"^DD",60,60,0,"IX","AG",60.01,95.3)

"^DD",60,60,0,"IX","AV1",60.021661,.01)

"^DD",60,60,0,"IX","AV2",60.121661,.01)

"^DD",60,60,0,"IX","AX0",60,.01)

"^DD",60,60,0,"IX","AX1",60,3)

"^DD",60,60,0,"IX","AX2",60,1)

"^DD",60,60,0,"IX","AX3",60,4)

"^DD",60,60,0,"IX","AX4",60,64)

"^DD",60,60,0,"IX","B",60,.01)

"^DD",60,60,0,"IX","B",60.1,.01)

"^DD",60,60,0,"IX","C",60,5)

"^DD",60,60,0,"IX","D",60,51)

"^DD",60,60,0,"NM","LABORATORY TEST")

"^DD",60,60,0,"PT",50,17.2)

"^DD",60,60,0,"PT",50,623002)

"^DD",60,60,0,"PT",50.02,.01)

"^DD",60,60,0,"PT",50.212,.01)

"^DD",60,60,0,"PT",60.02,.01)

"^DD",60,60,0,"PT",61.393,2)

"^DD",60,60,0,"PT",62.1,60.1)

"^DD",60,60,0,"PT",62.1,60.2)

"^DD",60,60,0,"PT",62.1,60.3)

"^DD",60,60,0,"PT",62.1,61.1)

"^DD",60,60,0,"PT",62.21,.01)

"^DD",60,60,0,"PT",62.31,.01)

"^DD",60,60,0,"PT",62.32,.01)

"^DD",60,60,0,"PT",62.4,106)

"^DD",60,60,0,"PT",62.41,.01)

"^DD",60,60,0,"PT",62.61,.01)

"^DD",60,60,0,"PT",62.801,.02)

"^DD",60,60,0,"PT",62.85,.08)

"^DD",60,60,0,"PT",62.9001,.01)

"^DD",60,60,0,"PT",63.07,13)

"^DD",60,60,0,"PT",63.07,14)

"^DD",60,60,0,"PT",63.20211,.01)

"^DD",60,60,0,"PT",63.3311,.01)

"^DD",60,60,0,"PT",63.5,13)

"^DD",60,60,0,"PT",63.5,14)

"^DD",60,60,0,"PT",63.51,13)

"^DD",60,60,0,"PT",63.51,14)

"^DD",60,60,0,"PT",63.52,13)

"^DD",60,60,0,"PT",63.52,14)

"^DD",60,60,0,"PT",63.53,13)

"^DD",60,60,0,"PT",63.53,14)

"^DD",60,60,0,"PT",63.812,.02)

"^DD",60,60,0,"PT",63.8122,.01)

"^DD",60,60,0,"PT",63.823,.01)

"^DD",60,60,0,"PT",63.825,.01)

"^DD",60,60,0,"PT",63.902,.02)

"^DD",60,60,0,"PT",63.90241,.01)

"^DD",60,60,0,"PT",63.90251,.01)

"^DD",60,60,0,"PT",63.9122,.01)

"^DD",60,60,0,"PT",63.923,.01)

"^DD",60,60,0,"PT",63.9241,.01)

"^DD",60,60,0,"PT",64,25.5)

"^DD",60,60,0,"PT",64.02,3)

"^DD",60,60,0,"PT",64.023,.01)

"^DD",60,60,0,"PT",64.03,7)

"^DD",60,60,0,"PT",64.1111,1)

"^DD",60,60,0,"PT",64.53,.01)

"^DD",60,60,0,"PT",64.708,2)

"^DD",60,60,0,"PT",65.3,.01)

"^DD",60,60,0,"PT",65.599,.01)

"^DD",60,60,0,"PT",66.04,.01)

"^DD",60,60,0,"PT",66.08,.01)

"^DD",60,60,0,"PT",68.04,.01)

"^DD",60,60,0,"PT",68.04,8.1)

"^DD",60,60,0,"PT",68.12,.01)

"^DD",60,60,0,"PT",68.13,.01)

"^DD",60,60,0,"PT",68.222,.01)

"^DD",60,60,0,"PT",68.24,.01)

"^DD",60,60,0,"PT",68.3,.01)

"^DD",60,60,0,"PT",69.03,.01)

"^DD",60,60,0,"PT",69.11,.01)

"^DD",60,60,0,"PT",69.34,.01)

"^DD",60,60,0,"PT",69.36,.01)

"^DD",60,60,0,"PT",69.52,.01)

"^DD",60,60,0,"PT",69.62,.01)

"^DD",60,60,0,"PT",69.63,.01)

"^DD",60,60,0,"PT",69.64,11)

"^DD",60,60,0,"PT",69.73,.01)

"^DD",60,60,0,"PT",69.862,.01)

"^DD",60,60,0,"PT",69.8625,.01)

"^DD",60,60,0,"PT",100,7)

"^DD",60,60,0,"PT",100.1,.01)

"^DD",60,60,0,"PT",101,6)

"^DD",60,60,0,"PT",101.43,.01)

"^DD",60,60,0,"PT",104.15,.01)

"^DD",60,60,0,"PT",115.021,1)

"^DD",60,60,0,"PT",119.9001,.01)

"^DD",60,60,0,"PT",142.14,.01)

"^DD",60,60,0,"PT",158.0122,.01)

"^DD",60,60,0,"PT",158.9311,.01)

"^DD",60,60,0,"PT",234,5)

"^DD",60,60,0,"PT",603.41,.01)

"^DD",60,60,0,"PT",701,614)

"^DD",60,60,0,"PT",727.211,.01)

"^DD",60,60,0,"PT",727.813,11)

"^DD",60,60,0,"PT",798.128,.01)

"^DD",60,60,0,"PT",810.31,.04)

"^DD",60,60,0,"PT",810.32,.01)

"^DD",60,60,0,"PT",811.52,.01)

"^DD",60,60,0,"PT",811.902,.01)

"^DD",60,60,0,"PT",815.0802,.01)

"^DD",60,60,0,"PT",815.0803,.01)

"^DD",60,60,0,"PT",815.0804,.01)

"^DD",60,60,0,"PT",815.0805,.01)

"^DD",60,60,0,"PT",6002.01,12)

"^DD",60,60,0,"PT",21626.01,.03)

"^DD",60,60,0,"PT",21660,1)

"^DD",60,60,0,"PT",21663.01,1)

"^DD",60,60,0,"PT",21695.54,.01)

"^DD",60,60,0,"PT",104001,.01)

"^DD",60,60,0,"PT",104002,1)

"^DD",60,60,0,"PT",104003,7)

"^DD",60,60,0,"PT",442158.931,.01)

"^DD",60,60,0,"PT",442303.09,.01)

"^DD",60,60,0,"PT",9000010.09,.01)

"^DD",60,60,0,"PT",9000010.25,.01)

"^DD",60,60,0,"PT",9000010.31,.01)

"^DD",60,60,0,"VRPK")
LR
"^DD",60,60,.01,0)
NAME^RFXa^^0;1^K:$L(X)>40!($L(X)<3)!(X'?.ANP) X I $D(X) K:X[""""!(X<0) X
"^DD",60,60,.01,1,0)
^.1
"^DD",60,60,.01,1,1,0)
60^B
"^DD",60,60,.01,1,1,1)
S ^LAB(60,"B",$E(X,1,40),DA)=""
"^DD",60,60,.01,1,1,2)
K ^LAB(60,"B",$E(X,1,40),DA)
"^DD",60,60,.01,1,2,0)
60^AX0^MUMPS
"^DD",60,60,.01,1,2,1)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,.01,1,2,2)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,.01,1,2,"%D",0)
^^1^1^2971118^^^^
"^DD",60,60,.01,1,2,"%D",1,0)
Trigger update to CPRS.
"^DD",60,60,.01,1,2,"DT")
2971118
"^DD",60,60,.01,3)
ANSWER MUST BE 3-40 CHARACTERS IN LENGTH AND NOT ALREADY A SYNONYM
"^DD",60,60,.01,21,0)
^^1^1^2930823^^^^
"^DD",60,60,.01,21,1,0)
This is the name of the Laboratory test you are defining in this entry.
"^DD",60,60,.01,"AUDIT")
y
"^DD",60,60,.01,"DEL",1,0)
I 1
"^DD",60,60,.01,"DT")
2971118
"^DD",60,60,1,0)
TEST COST^NJ7,2^^0;11^S:X["$" X=$P(X,"$",2) K:+X'=X&(X'?.N1"."2N)!(X>9999)!(X<.01) X
"^DD",60,60,1,1,0)
^.1
"^DD",60,60,1,1,1,0)
60^AX2^MUMPS
"^DD",60,60,1,1,1,1)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,1,1,1,2)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,1,1,1,"%D",0)
^^1^1^2971118^^^
"^DD",60,60,1,1,1,"%D",1,0)
Trigger update to CPRS.
"^DD",60,60,1,1,1,"DT")
2971118
"^DD",60,60,1,3)
TYPE A NUMBER BETWEEN .01 AND 9999
"^DD",60,60,1,21,0)
^^1^1^2841031^^
"^DD",60,60,1,21,1,0)
Enter the cost of the test.
"^DD",60,60,1,"DT")
2971118
"^DD",60,60,2,0)
SYNONYM^60.1A^^5;0
"^DD",60,60,2,21,0)
^.001^2^2^3060411^^^^
"^DD",60,60,2,21,1,0)
This is another name for the test.  It may be the locally preferred name,
"^DD",60,60,2,21,2,0)
or a common misspelling.
"^DD",60,60,3,0)
TYPE^RSa^I:INPUT (CAN BE ORDERED);O:OUTPUT (CAN BE DISPLAYED);B:BOTH;N:NEITHER;^0;3^Q
"^DD",60,60,3,1,0)
^.1
"^DD",60,60,3,1,1,0)
60^AX1^MUMPS
"^DD",60,60,3,1,1,1)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,3,1,1,2)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,3,1,1,"%D",0)
^^1^1^2971118^^^
"^DD",60,60,3,1,1,"%D",1,0)
Trigger update to CPRS.
"^DD",60,60,3,1,1,"DT")
2971118
"^DD",60,60,3,3)

"^DD",60,60,3,21,0)
^^4^4^2850723^^^^
"^DD",60,60,3,21,1,0)
I == (Input) test can be ordered but not displayed by the computer.
"^DD",60,60,3,21,2,0)
O == (Output) test can be displayed but never ordered by itself.
"^DD",60,60,3,21,3,0)
B == (Both) test can be ordered and displayed.
"^DD",60,60,3,21,4,0)
N == (Neither) test is internal to lab only.
"^DD",60,60,3,"AUDIT")
e
"^DD",60,60,3,"DT")
3131212
"^DD",60,60,4,0)
SUBSCRIPT^SXa^CH:CHEM, HEM, TOX, SER, RIA, ETC.;MI:MICROBIOLOGY;BB:BLOOD BANK;EM:ELECTRON MICROSCOPY;SP:SURGICAL PATHOLOGY;CY:CYTOLOGY;AU:AUTOPSY;WK:WORKLOAD;^0;4^S LW=X Q
"^DD",60,60,4,1,0)
^.1
"^DD",60,60,4,1,1,0)
60^AX3^MUMPS
"^DD",60,60,4,1,1,1)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,4,1,1,2)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,4,1,1,"%D",0)
^^1^1^2971118^^^
"^DD",60,60,4,1,1,"%D",1,0)
Trigger update to CPRS.
"^DD",60,60,4,1,1,"DT")
2971118
"^DD",60,60,4,3)

"^DD",60,60,4,21,0)
^^2^2^2911202^^^^
"^DD",60,60,4,21,1,0)
SUBSCRIPT is the pointer to the legal subscripts in the LR SUBSCRIPT file.  CH for Chem, Hem, Tox, Ser, Ria, etc., MI for Microbiology, BB for Blood Bank, EM for Electron Microscopy, SP for Surgical Pathology, CY for Cytology, AU for Autopsy.
"^DD",60,60,4,21,2,0)
This field is required for all orderable tests.
"^DD",60,60,4,21,3,0)
 Bank, EM for Electron Microscopy, SP for Surgical Pathology, CY for
"^DD",60,60,4,21,4,0)
 Cytology, AU for Autopsy.
"^DD",60,60,4,"AUDIT")
y
"^DD",60,60,4,"DEL",1,0)
I '$D(^XUSEC("LRLIASON",DUZ))
"^DD",60,60,4,"DT")
2971118
"^DD",60,60,5,0)
LOCATION (DATA NAME)^FI^^0;5^K:$L(X)>12!($L(X)<4)!'(X?2A1P.ANP) X
"^DD",60,60,5,1,0)
^.1^^-1
"^DD",60,60,5,1,1,0)
60^C
"^DD",60,60,5,1,1,1)
S ^LAB(60,"C",$E(X,1,30),DA)=""
"^DD",60,60,5,1,1,2)
K ^LAB(60,"C",$E(X,1,30),DA)
"^DD",60,60,5,3)
ANSWER MUST BE 4-12 CHARACTERS IN LENGTH
"^DD",60,60,5,5,1,0)
60^400^1
"^DD",60,60,5,9)
@
"^DD",60,60,5,21,0)
^^4^4^2871006^^^^
"^DD",60,60,5,21,1,0)
LOCATION (DATA NAME) is the exact character representation of the 
"^DD",60,60,5,21,2,0)
corresponding entry in the RESULTS file.  The input transform receives
"^DD",60,60,5,21,3,0)
from SUBSCRIPT of the previously defined piece, as well as the node and 
"^DD",60,60,5,21,4,0)
piece information from the data definition file for the result.
"^DD",60,60,5,"DEL",1,0)
I '$D(^XUSEC("LRLIASON",DUZ))
"^DD",60,60,5,"DT")
2840612
"^DD",60,60,6,0)
ACCESSION AREA^60.11PA^^8;0
"^DD",60,60,6,21,0)
^^1^1^2871006^^
"^DD",60,60,6,21,1,0)
This is the appropriate institution/division this test is performed at.
"^DD",60,60,6,21,2,0)
 panel, all tests
"^DD",60,60,6,21,3,0)
on that panel will be assigned to the entered accession area.  If some of
"^DD",60,60,6,21,4,0)
the panel's tests go to other accession areas, leave this field blank.
"^DD",60,60,6,21,5,0)
This will be the default accession area for this test.
"^DD",60,60,6,"DT")
2840906
"^DD",60,60,7,0)
UNIQUE ACCESSION #^S^1:YES;0:NO;^0;7^Q
"^DD",60,60,7,21,0)
^^1^1^2850730^^^^
"^DD",60,60,7,21,1,0)
If this field contains YES then this test will have a unique accession number whenever it is accessioned, even though it may be ordered with other tests.  If the test may be performed with other tests on the same specimen, this field should be blank.
"^DD",60,60,8,0)
UNIQUE COLLECTION SAMPLE^Sa^0:NO;1:YES;^0;8^Q
"^DD",60,60,8,21,0)
^^3^3^2841031^^^^
"^DD",60,60,8,21,1,0)
This field should be entered only if the test is never done on any other
"^DD",60,60,8,21,2,0)
collection sample than the ONE designated in Select COLLECTION SAMPLE:
"^DD",60,60,8,21,3,0)
The system will then not bother asking if the sample is the correct one.
"^DD",60,60,8,"AUDIT")
y
"^DD",60,60,8,"DT")
3150721
"^DD",60,60,9,0)
LAB COLLECTION SAMPLE^P62'^LAB(62,^0;9^Q
"^DD",60,60,9,3)

"^DD",60,60,9,12)
Select an active collection sample.
"^DD",60,60,9,12.1)
S DIC("S")="I $$ACTV62^LRJUTL3(Y,DT)"
"^DD",60,60,9,21,0)
^^3^3^2841031^^^^
"^DD",60,60,9,21,1,0)
This entry, for the given Laboratory Test, is THE collection sample brought
"^DD",60,60,9,21,2,0)
back on routine phlebotomy collection by the lab when they make rounds
"^DD",60,60,9,21,3,0)
on the wards.  If blank, the test CANNOT be ordered for routine collection.
"^DD",60,60,9,"AUDIT")
n
"^DD",60,60,9,"DT")
2830914
"^DD",60,60,10,0)
REQUIRED TEST^S^1:YES;0:NO;^0;17^Q
"^DD",60,60,10,3)
If the test is mandatory and no data is reported, the default is "pending"
"^DD",60,60,10,21,0)
^^1^1^2850830^^^
"^DD",60,60,10,21,1,0)
This field should be YES if this is a mandatory test, i.e., if no data is reported, the default status is "pending".
"^DD",60,60,10,21,2,0)
 reported, the default status is "pending".
"^DD",60,60,10,"DT")
2840723
"^DD",60,60,13,0)
FIELD^FI^^0;12^K:$L(X)>13!($L(X)<2)!'(X?1"DD(".ANP) X
"^DD",60,60,13,3)
ANSWER MUST BE 2-13 CHARACTERS IN LENGTH
"^DD",60,60,13,5,1,0)
60^400^2
"^DD",60,60,13,9)
^
"^DD",60,60,13,21,0)
^^1^1^2870417^^^
"^DD",60,60,13,21,1,0)
Data Dictionary field in file 63.
"^DD",60,60,13,"DEL",1,0)
I DUZ(0)'="@"
"^DD",60,60,13,"DT")
2840612
"^DD",60,60,14,0)
PROCEDURE (SNOMED)^P61.5^LAB(61.5,^0;10^Q
"^DD",60,60,14,21,0)
^^1^1^2940316^^^^
"^DD",60,60,14,21,1,0)
This is the SNOMED name or code of this test.
"^DD",60,60,15,0)
*QUICK INDEX^S^1:YES;^0;13^Q
"^DD",60,60,15,1,0)
^.1^^0
"^DD",60,60,15,3)
YES FOR QUICK INDEX, "@" TO REMOVE FROM QUICK INDEX
"^DD",60,60,15,21,0)
^^1^1^2940316^^^^
"^DD",60,60,15,21,1,0)
No longer used.  Will be deleted after this version.
"^DD",60,60,15,21,2,0)
index list.  Enter YES to include, @ to delete.
"^DD",60,60,15,"DT")
2840906
"^DD",60,60,16,0)
EXTRA LABELS^NJ2,0^^0;15^K:+X'=X!(X>99)!(X<-1)!(X?.E1"."1N.N) X
"^DD",60,60,16,3)
TYPE A WHOLE NUMBER BETWEEN -1 AND 99
"^DD",60,60,16,21,0)
^^3^3^2841031^^^^
"^DD",60,60,16,21,1,0)
If blank, the minimum number of labels (accounting for required volume) is
"^DD",60,60,16,21,2,0)
generated.  Enter a positive number for extra copies, -1 if NO label is
"^DD",60,60,16,21,3,0)
desired.
"^DD",60,60,16,"DT")
2840714
"^DD",60,60,17,0)
HIGHEST URGENCY ALLOWED^RP62.05'a^LAB(62.05,^0;16^Q
"^DD",60,60,17,3)
Enter the urgency with the lowest number allowed for this test.
"^DD",60,60,17,21,0)
^^2^2^2851121^^^^
"^DD",60,60,17,21,1,0)
The highest urgency allowed must be stored here.
"^DD",60,60,17,21,2,0)
The smaller the number, the more urgent.
"^DD",60,60,17,"AUDIT")
y
"^DD",60,60,17,"DT")
2850513
"^DD",60,60,18,0)
FORCED URGENCY^P62.05'a^LAB(62.05,^0;18^Q
"^DD",60,60,18,21,0)
^^2^2^2841031^^^
"^DD",60,60,18,21,1,0)
This specifies the default urgency status of this test.
"^DD",60,60,18,21,2,0)
It points to the URGENCY file.
"^DD",60,60,18,"AUDIT")
y
"^DD",60,60,18,"DT")
2841022
"^DD",60,60,51,0)
PRINT NAME^RFX^^.1;1^K:X[""""!(X'?.ANP)!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<1) X I $D(X),$D(^LAB(60,"D",X)),'$D(^LAB(60,"D",X,DA)) K X
"^DD",60,60,51,1,0)
^.1
"^DD",60,60,51,1,1,0)
60^D
"^DD",60,60,51,1,1,1)
S ^LAB(60,"D",$E(X,1,30),DA)=""
"^DD",60,60,51,1,1,2)
K ^LAB(60,"D",$E(X,1,30),DA)
"^DD",60,60,51,1,1,3)
Do not delete - used to insure unique print names
"^DD",60,60,51,1,1,"DT")
3071018
"^DD",60,60,51,3)
ANSWER MUST BE 1-20 CHARACTERS IN LENGTH
"^DD",60,60,51,21,0)
^.001^1^1^3071018^^^^
"^DD",60,60,51,21,1,0)
Default test heading for cumulative results reports.  (May be different in LAB REPORTS file 64.5.)
"^DD",60,60,51,21,2,0)
in LAB REPORTS file 64.5)
"^DD",60,60,51,"DT")
3071018
"^DD",60,60,52,0)
Reserved^F^^.1;2^K:$L(X)>7!($L(X)<1) X
"^DD",60,60,52,3)
ANSWER MUST BE 1-7 CHARACTERS IN LENGTH
"^DD",60,60,52,21,0)
^^1^1^2841126^^
"^DD",60,60,52,21,1,0)
Reserved for future use.
"^DD",60,60,53,0)
PRINT CODE^FX^^.1;3^K:$L(X)>240!($L(X)<2) X I $D(X) S X="W "_X D ^DIM I $D(X) S X=$E(X,3,256)
"^DD",60,60,53,3)
ANSWER MUST BE 2-240 CHARACTERS IN LENGTH, AND VALID MUMPS CODE
"^DD",60,60,53,21,0)
^^4^4^2841031^^^^
"^DD",60,60,53,21,1,0)
Represents MUMPS code for extraction or justification of the value that
"^DD",60,60,53,21,2,0)
is in the file.  It's particularly useful for displaying abbreviated
"^DD",60,60,53,21,3,0)
information for sets.  It could be used to append trailing zeros after a
"^DD",60,60,53,21,4,0)
decimal point.
"^DD",60,60,53,"DT")
2841026
"^DD",60,60,54,0)
PRETTY PRINT ENTRY^F^^.1;4^K:$L(X)>8!($L(X)<1) X
"^DD",60,60,54,3)
ANSWER MUST BE 1-8 CHARACTERS IN LENGTH
"^DD",60,60,54,21,0)
^^2^2^2841031^^^^
"^DD",60,60,54,21,1,0)
This is the Pretty Print Routine (see next field) line entry point.
"^DD",60,60,54,21,2,0)
Some programs have more than one entry to give a "special" display.
"^DD",60,60,55,0)
PRETTY PRINT ROUTINE^F^^.1;5^K:$L(X)>8!($L(X)<1) X
"^DD",60,60,55,3)
ANSWER MUST BE 1-8 CHARACTERS IN LENGTH
"^DD",60,60,55,21,0)
^^3^3^2841031^^^^
"^DD",60,60,55,21,1,0)
If no entry is made, (and the test is type 'O'utput or 'B'oth), display
"^DD",60,60,55,21,2,0)
output from the [LRGEN] menu option is a general cumulative.  With a
"^DD",60,60,55,21,3,0)
program name here, [LRGEN] instead runs the alternate program for display.
"^DD",60,60,56,0)
PRINT ORDER^NJ3,3^^.1;6^K:+X'=X!(X>999)!(X<1)!(X?.E1"."4N.N) X
"^DD",60,60,56,3)
TYPE A NUMBER BETWEEN 1 AND 999
"^DD",60,60,56,21,0)
^^1^1^2851211^^^
"^DD",60,60,56,21,1,0)
This is the print order of the test within its accession area.
"^DD",60,60,64,0)
NATIONAL VA LAB CODE^P64'^LAM(^64;1^Q
"^DD",60,60,64,1,0)
^.1
"^DD",60,60,64,1,1,0)
60^AC
"^DD",60,60,64,1,1,1)
S ^LAB(60,"AC",$E(X,1,30),DA)=""
"^DD",60,60,64,1,1,2)
K ^LAB(60,"AC",$E(X,1,30),DA)
"^DD",60,60,64,1,1,"DT")
2950413
"^DD",60,60,64,1,2,0)
60^AD^MUMPS
"^DD",60,60,64,1,2,1)
S ^LAB(60,"AD",DA,$E(X,1,30))=""
"^DD",60,60,64,1,2,2)
K ^LAB(60,"AD",DA,$E(X,1,30))
"^DD",60,60,64,1,2,"DT")
2960818
"^DD",60,60,64,1,3,0)
60^AX4^MUMPS
"^DD",60,60,64,1,3,1)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,64,1,3,2)
N TEST S TEST=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60,64,1,3,"%D",0)
^^1^1^2971118^^^
"^DD",60,60,64,1,3,"%D",1,0)
Trigger update to CPRS.
"^DD",60,60,64,1,3,"DT")
2971118
"^DD",60,60,64,3)
Enter the VA National Code that corresponds to this lab test.
"^DD",60,60,64,21,0)
^.001^2^2^3050517^^
"^DD",60,60,64,21,1,0)
This field is used to map tests in file 60 to the VA National
"^DD",60,60,64,21,2,0)
Lab codes found in file 64.
"^DD",60,60,64,"DT")
3050517
"^DD",60,60,64.1,0)
RESULT NLT CODE^P64'a^LAM(^64;2^Q
"^DD",60,60,64.1,1,0)
^.1
"^DD",60,60,64.1,1,1,0)
60^AE^MUMPS
"^DD",60,60,64.1,1,1,1)
S ^LAB(60,"AE",$P($G(^LAM(X,0)),U,2),DA)=""
"^DD",60,60,64.1,1,1,2)
K ^LAB(60,"AE",$P($G(^LAM(X,0)),U,2),DA)
"^DD",60,60,64.1,1,1,"%D",0)
^^5^5^2970610^
"^DD",60,60,64.1,1,1,"%D",1,0)
This MUMPS cross reference is used for sorting LABORATORY TEST entries by
"^DD",60,60,64.1,1,1,"%D",2,0)
workload code number.  The format for the cross reference nodes is shown
"^DD",60,60,64.1,1,1,"%D",3,0)
below.
"^DD",60,60,64.1,1,1,"%D",4,0)
 
"^DD",60,60,64.1,1,1,"%D",5,0)
       ^LAB(60,"AE",Workload Code Number,IEN)=""
"^DD",60,60,64.1,1,1,"DT")
2970414
"^DD",60,60,64.1,3)
Enter the workload procedure code for this test.
"^DD",60,60,64.1,4)

"^DD",60,60,64.1,21,0)
^.001^2^2^3001229^^^
"^DD",60,60,64.1,21,1,0)
This is the workload procedure code associated with this test.  It is used
"^DD",60,60,64.1,21,2,0)
in compiling laboratory workload statistics.
"^DD",60,60,64.1,"AUDIT")
y
"^DD",60,60,64.1,"DT")
3010719
"^DD",60,60,64.2,0)
CATALOG ITEM^S^1:YES;0:NO;^64;3^Q
"^DD",60,60,64.2,3)
Answer Yes to include this item in the Electronic Catalog 
"^DD",60,60,64.2,21,0)
^^2^2^2970529^
"^DD",60,60,64.2,21,1,0)
This field is used to indicate that this entry is to be included in the
"^DD",60,60,64.2,21,2,0)
Electronic Catalog.
"^DD",60,60,64.2,"DT")
2970506
"^DD",60,60,98,0)
EDIT CODE^*P62.07'^LAB(62.07,^0;14^S DIC("S")="I $P(^(0),U,3)=""E""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",60,60,98,1,0)
^.1^^0
"^DD",60,60,98,12)
Only allow 'EDIT' type of the EXECUTE CODE file
"^DD",60,60,98,12.1)
S DIC("S")="I $P(^(0),U,3)=""E"""
"^DD",60,60,98,21,0)
^^1^1^2841031^^
"^DD",60,60,98,21,1,0)
Points to EXECUTE CODE file.
"^DD",60,60,98,"DT")
2841126
"^DD",60,60,99.1,0)
*BATCH DATA CODE^P62.07'^LAB(62.07,^4;1^Q
"^DD",60,60,99.1,21,0)
^^1^1^2870503^^^
"^DD",60,60,99.1,21,1,0)
No longer used.  Will be deleted after 1/89.
"^DD",60,60,99.1,"DT")
2840725
"^DD",60,60,99.2,0)
EXECUTE ON DATA REVIEW^*P62.07'X^LAB(62.07,^4;2^S DIC("S")="I $P(^(0),U,3)=""D""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",60,60,99.2,12)
Only allow the use of data type code.
"^DD",60,60,99.2,12.1)
S DIC("S")="I $P(^(0),U,3)=""D"""
"^DD",60,60,99.2,21,0)
^^1^1^2851101^
"^DD",60,60,99.2,21,1,0)
At the time a test or panel of tests is reviewed, the execute code is run.
"^DD",60,60,99.2,"DT")
2860715
"^DD",60,60,100,0)
SITE/SPECIMEN^60.01P^^1;0
"^DD",60,60,100,21,0)
^.001^4^4^3160223^^^^
"^DD",60,60,100,21,1,0)
Processing specimen type for each entry in the Lab Collection Sample field.
"^DD",60,60,100,21,2,0)
Example:  Sodium can be determined on serum and urine.  Entries in 
"^DD",60,60,100,21,3,0)
this field are not appropriate (or even used) if the test is a panel of
"^DD",60,60,100,21,4,0)
 tests.
"^DD",60,60,100,"DT")
2921125
"^DD",60,60,110,0)
GENERAL PROCESSING INST.^60.09^^7;0
"^DD",60,60,110,21,0)
^^1^1^2851230^^^
"^DD",60,60,110,21,1,0)
This may include any processing instructions pertinent to this test.
"^DD",60,60,200,0)
LAB TEST INCLUDED IN PANEL^60.02P^^2;0
"^DD",60,60,200,21,0)
3^^3^3^2851211^^^
"^DD",60,60,200,21,1,0)
Enter only if this is a panel of other tests, e.g. if the "Laboratory Test"
"^DD",60,60,200,21,2,0)
is ELECTROLYTES, the entries here might be, NA, CL, K, CO2.  If it's an
"^DD",60,60,200,21,3,0)
ADMIT PROFILE, they might be ELECTROLYTES, LIVER FUNCTION, CARDIAC ENZYMES.
"^DD",60,60,300,0)
COLLECTION SAMPLE^60.03IPA^^3;0
"^DD",60,60,300,21,0)
^.001^3^3^3080825^^^^
"^DD",60,60,300,21,1,0)
Enter the appropriate collection sample(s) for standard processing in the
"^DD",60,60,300,21,2,0)
lab.  These are the common names that the phlebotomists and ward personnel
"^DD",60,60,300,21,3,0)
would recognize.  The first entry is the "default" collection sample.
"^DD",60,60,310,0)
GENERAL WARD INSTRUCTIONS^60.08^^6;0
"^DD",60,60,310,21,0)
^^2^2^2850725^^^^
"^DD",60,60,310,21,1,0)
Text to be seen by the ward each time the test is ordered regardless of
"^DD",60,60,310,21,2,0)
the type of collection sample.
"^DD",60,60,320,0)
REQUIRED COMMENT^*P62.07'^LAB(62.07,^0;19^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",60,60,320,12)
ONLY ALLOW COMMENTS CODE
"^DD",60,60,320,12.1)
S DIC("S")="I $P(^(0),U,3)=""C"""
"^DD",60,60,320,21,0)
^^1^1^2850725^
"^DD",60,60,320,21,1,0)
Points to EXECUTE CODE file.
"^DD",60,60,320,"DT")
2841204
"^DD",60,60,400,0)
DATA NAME^*P63'X^DD(63.04,^.2;1^S DIC("S")="I Y>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X I $D(X) S Y=$O(^LAB(60,"C","CH;"_X_";1",0)) I Y>0 W !,*7,"  WILL PRINT AS ",$P(^LAB(60,Y,0),U,1)
"^DD",60,60,400,1,0)
^.1
"^DD",60,60,400,1,1,0)
^^TRIGGER^60^5
"^DD",60,60,400,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(60,D0,0)):^(0),1:"") S X=$P(Y(1),U,5) S DIU=X K Y X ^DD(60,400,1,1,1.1) X ^DD(60,400,1,1,1.4)
"^DD",60,60,400,1,1,1.1)
S X=DIV S X="CH;"_$P(^DD(63.04,DIV,0),"^",4)
"^DD",60,60,400,1,1,1.4)
S DIH=$S($D(^LAB(60,DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,4,99))  S DIH=DIH_U" S %=$P(DIH,U,6,999),^(0)=$P(DIH,U,1,4)_U_DIV_$S(%]"":U_%,1:""),DIH=60,DIG=5 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60,400,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(60,D0,0)):^(0),1:"") S X=$P(Y(1),U,5) S DIU=X K Y S X=DIV S X="" X ^DD(60,400,1,1,2.4)
"^DD",60,60,400,1,1,2.4)
S DIH=$S($D(^LAB(60,DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,4,99))  S DIH=DIH_U" S %=$P(DIH,U,6,999),^(0)=$P(DIH,U,1,4)_U_DIV_$S(%]"":U_%,1:""),DIH=60,DIG=5 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60,400,1,1,"CREATE VALUE")
S X="CH;"_$P(^DD(63.04,DIV,0),"^",4)
"^DD",60,60,400,1,1,"DELETE VALUE")
@
"^DD",60,60,400,1,1,"FIELD")
LOCATION
"^DD",60,60,400,1,2,0)
^^TRIGGER^60^13
"^DD",60,60,400,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(60,D0,0)):^(0),1:"") S X=$P(Y(1),U,12) S DIU=X K Y X ^DD(60,400,1,2,1.1) X ^DD(60,400,1,2,1.4)
"^DD",60,60,400,1,2,1.1)
S X=DIV S X="DD(63.04,"_DIV_","
"^DD",60,60,400,1,2,1.4)
S DIH=$S($D(^LAB(60,DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,11,99))  S DIH=DIH_U" S %=$P(DIH,U,13,999),^(0)=$P(DIH,U,1,11)_U_DIV_$S(%]"":U_%,1:""),DIH=60,DIG=13 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60,400,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^LAB(60,D0,0)):^(0),1:"") S X=$P(Y(1),U,12) S DIU=X K Y S X=DIV S X="" X ^DD(60,400,1,2,2.4)
"^DD",60,60,400,1,2,2.4)
S DIH=$S($D(^LAB(60,DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,11,99))  S DIH=DIH_U" S %=$P(DIH,U,13,999),^(0)=$P(DIH,U,1,11)_U_DIV_$S(%]"":U_%,1:""),DIH=60,DIG=13 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60,400,1,2,"CREATE VALUE")
S X="DD(63.04,"_DIV_","
"^DD",60,60,400,1,2,"DELETE VALUE")
@
"^DD",60,60,400,1,2,"FIELD")
FIELD
"^DD",60,60,400,12)
THIS IS TO GET ONLY TEST NAMES
"^DD",60,60,400,12.1)
S DIC("S")="I Y>1"
"^DD",60,60,400,21,0)
^^4^4^2860606^^^^
"^DD",60,60,400,21,1,0)
If the test is a panel, skip this entry!  If it is an individual test,
"^DD",60,60,400,21,2,0)
AND IS PART OF THE CHEM, HEM, TOX, SER, RIA, ETC. area, in order to
"^DD",60,60,400,21,3,0)
be able to ENTER results, must have an entry!  Micro, Blood Bank,
"^DD",60,60,400,21,4,0)
Anatomic Path, excluded.
"^DD",60,60,400,"DEL",1,0)
I '$D(^XUSEC("LRLIASON",DUZ))
"^DD",60,60,400,"DT")
2850215
"^DD",60,60,410,0)
INPUT TRANSFORM^CJ75^^ ; ^S X=$P(^LAB(60,D0,0),U,12) I X]"" S Y=@(U_X_"0)"),X=$S($P(Y,U,2)["S":$P(Y,U,3),1:$P(Y,U,5,99))
"^DD",60,60,410,9)
^
"^DD",60,60,410,9.01)

"^DD",60,60,410,9.1)
S X=$P(^(0),U,12),X=$P(@(X_"0)"),U,5,99)
"^DD",60,60,410,21,0)
^^1^1^2851101^^
"^DD",60,60,410,21,1,0)
Computed field.
"^DD",60,60,411,0)
DATA TYPE^CJ9^^ ; ^S X=$P(^LAB(60,D0,0),U,12) I X]"" S X=$P(@(U_X_"0)"),U,2),X=$S(X["F":"FREE TEXT",X["N":"NUMERIC",X["S":"SET",1:"OTHER")
"^DD",60,60,411,9)
^
"^DD",60,60,411,9.01)

"^DD",60,60,411,9.1)
S X=$P(^(0),U,12),X=$P(@(U_X_"0)"),U,2),X=$S(X["F":"FREE TEXT",X["N":"NUMERIC",X["S":"SET",1:"OTHER")
"^DD",60,60,411,21,0)
^^1^1^2851101^^
"^DD",60,60,411,21,1,0)
Computed field.
"^DD",60,60,412,0)
CULTURE ID PREFIX^NJ1,0^^0;21^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
"^DD",60,60,412,3)
Number from 0-9 inclusive. ie 0=culture & susep 1= gram stain, etc.
"^DD",60,60,412,21,0)
^^4^4^2911203^^^^
"^DD",60,60,412,21,1,0)
 Used by the Vitek to make the accession number unique for down load.
"^DD",60,60,412,21,2,0)
  This number should be zero to nine. This number is appended to the 
"^DD",60,60,412,21,3,0)
front of the accession number.
"^DD",60,60,412,21,4,0)
   If there is no entry in this field, this test will not be downloaded.
"^DD",60,60,412,"DT")
2890717
"^DD",60,60,500,0)
VERIFY WKLD CODE^60.12IP^^9;0
"^DD",60,60,500,21,0)
^^2^2^2940316^^^^
"^DD",60,60,500,21,1,0)
The College of American Pathologists Workload codes for
"^DD",60,60,500,21,2,0)
 the test/procedure are entered here.
"^DD",60,60,500,"DT")
2910225
"^DD",60,60,500.1,0)
ACCESSION WKLD CODE^60.13IP^^9.1;0
"^DD",60,60,500.1,21,0)
^^2^2^2940316^^^^
"^DD",60,60,500.1,21,1,0)
 This subfile holds the WKLD codes to be credited during the accession
"^DD",60,60,500.1,21,2,0)
process.
"^DD",60,60,500.1,23,0)
^^3^3^2940316^^
"^DD",60,60,500.1,23,1,0)
 Note: None of the suffixes are changed in this sub file. Only those
"^DD",60,60,500.1,23,2,0)
WKLD codes found in the verification WKLD code sub file have the potential
"^DD",60,60,500.1,23,3,0)
to have the suffix changed.
"^DD",60,60,500.1,"DT")
2910225
"^DD",60,60,501,0)
*ASK AMIS/CAP CODES^S^1:YES;^0;2^Q
"^DD",60,60,501,21,0)
^^3^3^2911118^^^^
"^DD",60,60,501,21,1,0)
 This field is not longer used by AMIS/WORKLOAD. It will be made obsolete with
"^DD",60,60,501,21,2,0)
V5.2 and will be deleted in later release. Consult the section on workload
"^DD",60,60,501,21,3,0)
in your implementation guide.
"^DD",60,60,501,"DT")
2910307
"^DD",60,60,503,0)
COMBINE TEST DURING ORDER^S^1:NO;0:YES;^0;20^Q
"^DD",60,60,503,3)
Should this test be combined with any other test during order ?
"^DD",60,60,503,21,0)
^^3^3^2881214^^
"^DD",60,60,503,21,1,0)
   This field works in conjunction with combine test field in 69.9
"^DD",60,60,503,21,2,0)
If you do not want this to be combined with any other test answer
"^DD",60,60,503,21,3,0)
  NO --- A NULL ANSWER MEANS YES
"^DD",60,60,503,"DT")
2881214
"^DD",60,60,504,0)
CIS TEST CODE^F^^10;1^K:$L(X)>5!($L(X)<5) X
"^DD",60,60,504,1,0)
^.1^^0
"^DD",60,60,504,3)
Answer must be 5 characters in the following format AAnnn (AA001)
"^DD",60,60,504,21,0)
^^4^4^2911118^
"^DD",60,60,504,21,1,0)
 This field is used by Clinical Information System such as those
"^DD",60,60,504,21,2,0)
found in MICU. This field is not used with the laboratory package it
"^DD",60,60,504,21,3,0)
self but is a special field for interface with external system computer
"^DD",60,60,504,21,4,0)
systems.
"^DD",60,60,504,"DT")
2900326
"^DD",60,60,505,0)
SITE NOTES DATE^60.0505D^^11;0
"^DD",60,60,505,21,0)
^^1^1^2930912^^
"^DD",60,60,505,21,1,0)
 This is the date of this particular note.
"^DD",60,60,506,0)
DEFAULT SITE/SPECIMEN CPT^P81'^ICPT(^1.1;1^Q
"^DD",60,60,506,3)

"^DD",60,60,506,21,0)
^.001^5^5^3060318^^^
"^DD",60,60,506,21,1,0)
If a CPT cannot be determined by the SPECIMEN CPT (#96) field within the 
"^DD",60,60,506,21,2,0)
SITE/SPECIMEN (#100) multiple, or by the HCPCS CODE (#507) field, or by
"^DD",60,60,506,21,3,0)
locating an active CPT Code in the WKLD CODE file (#64) entry pointed to
"^DD",60,60,506,21,4,0)
by the NATIONAL VA LAB CODE (#64) field, then the CPT in this field is
"^DD",60,60,506,21,5,0)
the default.
"^DD",60,60,506,"DT")
3041105
"^DD",60,60,507,0)
HCPCS CODE^P81'^ICPT(^1.1;2^Q
"^DD",60,60,507,3)

"^DD",60,60,507,21,0)
^^10^10^3041105^
"^DD",60,60,507,21,1,0)
HCFA Common Procedure Coding System (HCPCS) is a coding system that is 
"^DD",60,60,507,21,2,0)
composed of Level I codes (CPT codes), Level II codes (national codes),
"^DD",60,60,507,21,3,0)
and Level III codes (local codes). Level I (CPT) codes are five digit
"^DD",60,60,507,21,4,0)
numeric codes that describe procedures and tests. CPT codes are developed 
"^DD",60,60,507,21,5,0)
and maintained by the AMA with annual updates. Level II (national) codes 
"^DD",60,60,507,21,6,0)
are five digit alpha numeric codes that describe pharmaceuticals,
"^DD",60,60,507,21,7,0)
supplies, procedures, tests and services. Level II codes are developed and
"^DD",60,60,507,21,8,0)
maintained by CMS with quarterly updates. Level III (local) codes are five
"^DD",60,60,507,21,9,0)
digit alpha numeric codes that are being phased out by the fiscal 
"^DD",60,60,507,21,10,0)
intermediaries.
"^DD",60,60,507,"DT")
3041105
"^DD",60,60,508,0)
AMA COMPLIANT/BILLABLE PANEL^S^0:No;1:Yes;^12;1^Q
"^DD",60,60,508,21,0)
^.001^15^15^3050824^^
"^DD",60,60,508,21,1,0)
If this panel test is an AMA compliant or otherwise billable panel,
"^DD",60,60,508,21,2,0)
enter a 'Yes' in this field.  If this field is set to 'Yes' and a valid 
"^DD",60,60,508,21,3,0)
CPT code is on file, the CPT code for the panel will be sent to PCE for 
"^DD",60,60,508,21,4,0)
billing purposes as a bundled panel.
"^DD",60,60,508,21,5,0)
 
"^DD",60,60,508,21,6,0)
If this field is set to 'No', the panel will be unbundled into it's 
"^DD",60,60,508,21,7,0)
individual atomic tests and the CPT codes for those atomic tests will be 
"^DD",60,60,508,21,8,0)
sent to PCE for billing purposes.
"^DD",60,60,508,21,9,0)
 
"^DD",60,60,508,21,10,0)
Note: This field is only functional for a panel test. This field is 
"^DD",60,60,508,21,11,0)
ignored for an atomic test.
"^DD",60,60,508,21,12,0)
 
"^DD",60,60,508,21,13,0)
Refer to the Clinical Indicator Data Capture (CIDC) implementation
"^DD",60,60,508,21,14,0)
guide for further instruction for managing this field.
"^DD",60,60,508,21,15,0)

"^DD",60,60,508,"DT")
3060303
"^DD",60,60,21661,0)
CPRS SCREEN^60.021661P^^21661;0
"^DD",60,60,21661,21,0)
^.001^2^2^3160908^^^^
"^DD",60,60,21661,21,1,0)
This field point to the CPRS Screen for this test. The test SubScript 
"^DD",60,60,21661,21,2,0)
(CH,EM,CY...) must match the SubScript of the CPRS Screen.
"^DD",60,60,21661,"DT")
3150923
"^DD",60,60.01,0)
SITE/SPECIMEN SUB-FIELD^NL^21661^18
"^DD",60,60.01,0,"DT")
3151014
"^DD",60,60.01,0,"IX","AC",60.2,.01)

"^DD",60,60.01,0,"IX","B",60.01,.01)

"^DD",60,60.01,0,"IX","LRTX",60.2,.01)

"^DD",60,60.01,0,"NM","SITE/SPECIMEN")

"^DD",60,60.01,0,"UP")
60
"^DD",60,60.01,.01,0)
SITE/SPECIMEN^MP61'Xa^LAB(61,^0;1^N LRA S LRA=$P(^LAB(60,DA(1),0),U,5) K:LRA="" X I $D(X) S DINUM=X,LRA=$O(^LAB(60,"C",LRA,0)) I LRA'=DA(1) K X,DINUM D EN^DDIOL("Site/specimens may only be added for "_$P(^LAB(60,LRA,0),U,1),"","!")
"^DD",60,60.01,.01,1,0)
^.1
"^DD",60,60.01,.01,1,1,0)
60.01^B
"^DD",60,60.01,.01,1,1,1)
S ^LAB(60,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",60,60.01,.01,1,1,2)
K ^LAB(60,DA(1),1,"B",$E(X,1,30),DA)
"^DD",60,60.01,.01,3)
To enter a Site/specimen, a Data name must be entered.
"^DD",60,60.01,.01,21,0)
^^3^3^2850318^^^^
"^DD",60,60.01,.01,21,1,0)
Processing specimen type for each entry in the Lab Collection Sample field.
"^DD",60,60.01,.01,21,2,0)
Example:  Sodium can be determined on serum and urine.
"^DD",60,60.01,.01,21,3,0)
To enter a Site/specimen, a Data name must be entered.
"^DD",60,60.01,.01,"AUDIT")
y
"^DD",60,60.01,.01,"DT")
2850318
"^DD",60,60.01,1,0)
REFERENCE LOW^FXa^^0;2^K:$L(X)>50!($E(X,1)?1A)!(X["^") X I $D(X) S X="S X="_X D ^DIM Q:'$D(X)  S X=$P(X,"=",2,99)
"^DD",60,60.01,1,3)
ANSWER MUST BE 0-50 CHARACTERS IN LENGTH (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,1,21,0)
^.001^16^16^3070301^^
"^DD",60,60.01,1,21,1,0)
This is the user entered reference low value for this test.
"^DD",60,60.01,1,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,1,21,3,0)
        low : 10
"^DD",60,60.01,1,21,4,0)
        high : 50
"^DD",60,60.01,1,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,1,21,6,0)
manner:
"^DD",60,60.01,1,21,7,0)
        low: 10
"^DD",60,60.01,1,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,1,21,9,0)
this manner:
"^DD",60,60.01,1,21,10,0)
        NORMAL
"^DD",60,60.01,1,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,1,21,12,0)
manner:
"^DD",60,60.01,1,21,13,0)
        high: 50
"^DD",60,60.01,1,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,1,21,15,0)
this manner:
"^DD",60,60.01,1,21,16,0)
        >1000
"^DD",60,60.01,1,"AUDIT")
y
"^DD",60,60.01,1,"DT")
3070124
"^DD",60,60.01,2,0)
REFERENCE HIGH^FXa^^0;3^K:$L(X)>50!($E(X,1)?1A)!(X["^") X I $D(X) S X="S X="_X D ^DIM Q:'$D(X)  S X=$P(X,"=",2,99)
"^DD",60,60.01,2,3)
ANSWER MUST BE 0-50 CHARACTERS IN LENGTH (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,2,21,0)
^^16^16^3070124^
"^DD",60,60.01,2,21,1,0)
This is the user entered reference high value for this test.
"^DD",60,60.01,2,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,2,21,3,0)
        low : 10
"^DD",60,60.01,2,21,4,0)
        high : 50
"^DD",60,60.01,2,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,2,21,6,0)
manner: 
"^DD",60,60.01,2,21,7,0)
        low: 10
"^DD",60,60.01,2,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,2,21,9,0)
this manner:
"^DD",60,60.01,2,21,10,0)
        NORMAL
"^DD",60,60.01,2,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,2,21,12,0)
manner:
"^DD",60,60.01,2,21,13,0)
        high: 50
"^DD",60,60.01,2,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,2,21,15,0)
this manner:
"^DD",60,60.01,2,21,16,0)
        >1000
"^DD",60,60.01,2,"AUDIT")
y
"^DD",60,60.01,2,"DT")
3070124
"^DD",60,60.01,3,0)
CRITICAL LOW^FX^^0;4^K:$L(X)>50!($E(X,1)?1A)!(X["^") X I $D(X) S X="S X="_X D ^DIM Q:'$D(X)  S X=$P(X,"=",2,99)
"^DD",60,60.01,3,3)
ANSWER MUST BE 0-50 CHARACTERS IN LENGTH (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,3,21,0)
^^17^17^3070124^
"^DD",60,60.01,3,21,1,0)
This is the user entered critical low value for this test.
"^DD",60,60.01,3,21,2,0)
Used to flag results.
"^DD",60,60.01,3,21,3,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,3,21,4,0)
        low : 10
"^DD",60,60.01,3,21,5,0)
        high : 50
"^DD",60,60.01,3,21,6,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,3,21,7,0)
manner: 
"^DD",60,60.01,3,21,8,0)
        low: 10
"^DD",60,60.01,3,21,9,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,3,21,10,0)
this manner:
"^DD",60,60.01,3,21,11,0)
        NORMAL
"^DD",60,60.01,3,21,12,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,3,21,13,0)
manner:
"^DD",60,60.01,3,21,14,0)
        high: 50
"^DD",60,60.01,3,21,15,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,3,21,16,0)
this manner:
"^DD",60,60.01,3,21,17,0)
        >1000
"^DD",60,60.01,3,"DT")
3070124
"^DD",60,60.01,4,0)
CRITICAL HIGH^FX^^0;5^K:$L(X)>50!($E(X,1)?1A)!(X["^") X I $D(X) S X="S X="_X D ^DIM Q:'$D(X)  S X=$P(X,"=",2,99)
"^DD",60,60.01,4,3)
ANSWER MUST BE 0-50 CHARACTERS IN LENGTH (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,4,21,0)
^^16^16^3070124^
"^DD",60,60.01,4,21,1,0)
This is the user entered critical high value of this test.  Used to flag results.
"^DD",60,60.01,4,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,4,21,3,0)
        low : 10
"^DD",60,60.01,4,21,4,0)
        high : 50
"^DD",60,60.01,4,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,4,21,6,0)
manner: 
"^DD",60,60.01,4,21,7,0)
        low: 10
"^DD",60,60.01,4,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,4,21,9,0)
this manner:
"^DD",60,60.01,4,21,10,0)
        NORMAL
"^DD",60,60.01,4,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,4,21,12,0)
manner:
"^DD",60,60.01,4,21,13,0)
        high: 50
"^DD",60,60.01,4,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,4,21,15,0)
this manner:
"^DD",60,60.01,4,21,16,0)
        >1000
"^DD",60,60.01,4,"DT")
3070124
"^DD",60,60.01,5.5,0)
INTERPRETATION^60.07A^^1;0
"^DD",60,60.01,5.5,21,0)
^^1^1^2850830^^^^
"^DD",60,60.01,5.5,21,1,0)
Enter any remark to accompany EVERY test result. These remarks may be edited and formatted with the FileMan text editor.  The text may be other range information, special conditions, etc.
"^DD",60,60.01,5.5,21,2,0)
edited and formatted with the FileMan text editor.
"^DD",60,60.01,5.5,21,3,0)
The text may be other range information, special conditions, etc.
"^DD",60,60.01,6,0)
UNITS^F^^0;7^K:$L(X)>10!($L(X)<1) X
"^DD",60,60.01,6,3)
ANSWER MUST BE 2-10 CHARACTERS IN LENGTH
"^DD",60,60.01,6,21,0)
^^2^2^2841031^^
"^DD",60,60.01,6,21,1,0)
UNITS represents such things as grams, number of items per cubic millimeter,
"^DD",60,60.01,6,21,2,0)
or microliter.
"^DD",60,60.01,7,0)
TYPE OF DELTA CHECK^P62.1^LAB(62.1,^0;8^Q
"^DD",60,60.01,7,3)

"^DD",60,60.01,7,21,0)
^^1^1^2841031^
"^DD",60,60.01,7,21,1,0)
Points to DELTA CHECK file.
"^DD",60,60.01,8,0)
DELTA VALUE^F^^0;9^K:$L(X)>7!($L(X)<1) X
"^DD",60,60.01,8,3)
ANSWER MUST BE 1-7 CHARACTERS IN LENGTH
"^DD",60,60.01,8,21,0)
^^1^1^2841031^^
"^DD",60,60.01,8,21,1,0)
DELTA VALUE is the value that is passed to the Delta Check Code.
"^DD",60,60.01,9,0)
DEFAULT VALUE^FX^^0;10^N LRX S LRX=U_$P(^LAB(60,DA(1),0),U,12)_"0)" K:'$D(@LRX) X Q:'$D(X)  S LRX=@LRX X:$P(LRX,U,2)'["S" $P(LRX,U,5,99) Q:'$D(X)!($P(LRX,U,2)'["S")  S LRX=";"_$P(LRX,U,3) K:'(LRX[(";"_X_":")) X
"^DD",60,60.01,9,3)
ANSWER MUST MATCH APPROPRIATE INPUT IN 'LAB DATA' FILE
"^DD",60,60.01,9,4)
N LRXDP S LRXDP=$P(^LAB(60,D0,0),U,12) I LRXDP'="" S LRXDP=U_LRXDP_"0)" I $D(@LRXDP) S LRXDP=@LRXDP D:$D(^(3)) EN^DDIOL(^(3)) D:$P(LRXDP,U,2)["S" LRSET^LRVER5
"^DD",60,60.01,9,21,0)
^^2^2^2841031^^^^
"^DD",60,60.01,9,21,1,0)
Leave blank or enter the most common (say, >80% of the time) response for
"^DD",60,60.01,9,21,2,0)
the test.
"^DD",60,60.01,9,"DT")
2841207
"^DD",60,60.01,9.2,0)
THERAPEUTIC LOW^FX^^0;11^K:$L(X)>30!($L(X)<1)!(X["^") X I $D(X) S X="S X="_X D ^DIM I $D(X) S X=$E(X,5,256)
"^DD",60,60.01,9.2,3)
ENTER LOW END OF THERAPEUTIC RANGE (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,9.2,21,0)
^^16^16^3070124^
"^DD",60,60.01,9.2,21,1,0)
This is the low end value of the therapeutic range.  Used to flag results.
"^DD",60,60.01,9.2,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,9.2,21,3,0)
        low : 10
"^DD",60,60.01,9.2,21,4,0)
        high : 50
"^DD",60,60.01,9.2,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,9.2,21,6,0)
manner: 
"^DD",60,60.01,9.2,21,7,0)
        low: 10
"^DD",60,60.01,9.2,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,9.2,21,9,0)
this manner:
"^DD",60,60.01,9.2,21,10,0)
        NORMAL
"^DD",60,60.01,9.2,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,9.2,21,12,0)
manner:
"^DD",60,60.01,9.2,21,13,0)
        high: 50
"^DD",60,60.01,9.2,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,9.2,21,15,0)
this manner:
"^DD",60,60.01,9.2,21,16,0)
        >1000
"^DD",60,60.01,9.2,"DT")
3070124
"^DD",60,60.01,9.3,0)
THERAPEUTIC HIGH^FX^^0;12^K:$L(X)>30!($L(X)<1)!(X["^") X I $D(X) S X="S X="_X D ^DIM I $D(X) S X=$E(X,5,256)
"^DD",60,60.01,9.3,3)
ENTER HIGH END OF THERAPEUTIC RANGE (USE "QUOTES" AROUND TEXT)
"^DD",60,60.01,9.3,21,0)
^^16^16^3070124^
"^DD",60,60.01,9.3,21,1,0)
This is the high end value of the therapeutic range.  Used to flag results.
"^DD",60,60.01,9.3,21,2,0)
If both the low and high are defined it will print in this manner:
"^DD",60,60.01,9.3,21,3,0)
        low : 10
"^DD",60,60.01,9.3,21,4,0)
        high : 50
"^DD",60,60.01,9.3,21,5,0)
If only the low is defined and it is numeric it will print in this
"^DD",60,60.01,9.3,21,6,0)
manner: 
"^DD",60,60.01,9.3,21,7,0)
        low: 10
"^DD",60,60.01,9.3,21,8,0)
If only the low is defined and it is alphanumeric it will print in 
"^DD",60,60.01,9.3,21,9,0)
this manner:
"^DD",60,60.01,9.3,21,10,0)
        NORMAL
"^DD",60,60.01,9.3,21,11,0)
If only the high is defined and it is numeric it will print in this 
"^DD",60,60.01,9.3,21,12,0)
manner:
"^DD",60,60.01,9.3,21,13,0)
        high: 50
"^DD",60,60.01,9.3,21,14,0)
If only the high is defined and it is alphanumeric it will print in
"^DD",60,60.01,9.3,21,15,0)
this manner:
"^DD",60,60.01,9.3,21,16,0)
        >1000
"^DD",60,60.01,9.3,"DT")
3070124
"^DD",60,60.01,10,0)
*AMIS/RCS 14-4^60.06PA^^2;0
"^DD",60,60.01,10,21,0)
^^1^1^2940316^^^^
"^DD",60,60.01,10,21,1,0)
No longer used.  Will be deleted after this version 
"^DD",60,60.01,13,0)
USE FOR REFERENCE TESTING^S^0:NO;1:YES;^.1;1^Q
"^DD",60,60.01,13,3)
Should reference values/units for this specimen type also be used for reference lab results.
"^DD",60,60.01,13,21,0)
^.001^3^3^3030212^^
"^DD",60,60.01,13,21,1,0)
Indicates if the reference ranges and units associated with this
"^DD",60,60.01,13,21,2,0)
specimen type can be used when manually entering results of testing
"^DD",60,60.01,13,21,3,0)
performed at another laboratory.
"^DD",60,60.01,13,"DT")
3030211
"^DD",60,60.01,20,0)
FOREIGN COMPUTER SYSTEM^60.2^^4;0
"^DD",60,60.01,20,.1)
ITEM # OF ANOTHER SYSTEM
"^DD",60,60.01,20,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 999999
"^DD",60,60.01,20,21,0)
^^1^1^2940510^^^
"^DD",60,60.01,20,21,1,0)
Reserved for future use. Do not use.
"^DD",60,60.01,20,"DT")
2840622
"^DD",60,60.01,95.3,0)
LOINC CODE^P95.3'Oa^LAB(95.3,^95.3;1^Q
"^DD",60,60.01,95.3,1,0)
^.1
"^DD",60,60.01,95.3,1,1,0)
60^AF
"^DD",60,60.01,95.3,1,1,1)
S ^LAB(60,"AF",$E(X,1,30),DA(1),DA)=""
"^DD",60,60.01,95.3,1,1,2)
K ^LAB(60,"AF",$E(X,1,30),DA(1),DA)
"^DD",60,60.01,95.3,1,1,"%D",0)
^^2^2^2981124^
"^DD",60,60.01,95.3,1,1,"%D",1,0)
 This cross reference is used to determine which entries and specimens
"^DD",60,60.01,95.3,1,1,"%D",2,0)
have been mapped/linked to LOINC Codes.
"^DD",60,60.01,95.3,1,1,"DT")
2981124
"^DD",60,60.01,95.3,1,2,0)
60^AG^MUMPS
"^DD",60,60.01,95.3,1,2,1)
S ^LAB(60,"AG",DA(1),DA,$E(X,1,30))=""
"^DD",60,60.01,95.3,1,2,2)
K ^LAB(60,"AG",DA(1),DA,$E(X,1,30))
"^DD",60,60.01,95.3,1,2,"%D",0)
^^2^2^2981124^
"^DD",60,60.01,95.3,1,2,"%D",1,0)
This X-Ref is used to determine which lab test and specimen combination
"^DD",60,60.01,95.3,1,2,"%D",2,0)
has been mapped/linked to a LOINC code.
"^DD",60,60.01,95.3,1,2,"DT")
2981124
"^DD",60,60.01,95.3,2)
S Y(0)=Y I $G(Y) S Y=$S($L($P($G(^LAB(95.3,Y,0)),U,15)):Y_"-"_$P(^LAB(95.3,Y,0),U,15),1:Y)
"^DD",60,60.01,95.3,2.1)
I $G(Y) S Y=$S($L($P($G(^LAB(95.3,Y,0)),U,15)):Y_"-"_$P(^LAB(95.3,Y,0),U,15),1:Y)
"^DD",60,60.01,95.3,21,0)
^^1^1^2981124^
"^DD",60,60.01,95.3,21,1,0)
 This field contains the pointer to the LAB LOINC (#95.3) file. 
"^DD",60,60.01,95.3,"AUDIT")
y
"^DD",60,60.01,95.3,"DT")
3011211
"^DD",60,60.01,96,0)
SPECIMEN CPT^60.196P^^3;0
"^DD",60,60.01,21661,0)
AOE SCREEN^60.121661P^^21661;0
"^DD",60,60.01,21661,21,0)
^.001^1^1^3160224^^^
"^DD",60,60.01,21661,21,1,0)
This field point to a list Ask On Entry (AOE) Screens
"^DD",60,60.01,21661,"DT")
3160223
"^DD",60,60.02,0)
LAB TEST INCLUDED IN PANEL SUB-FIELD^NL^.02^3
"^DD",60,60.02,0,"DT")
2910505
"^DD",60,60.02,0,"NM","LAB TEST INCLUDED IN PANEL")

"^DD",60,60.02,0,"UP")
60
"^DD",60,60.02,.001,0)
NUMBER^NJ3,0^^ ^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",60,60.02,.001,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 999
"^DD",60,60.02,.001,21,0)
^^3^3^2841031^^
"^DD",60,60.02,.001,21,1,0)
This number signifies the order the tests are displayed in the Load/work
"^DD",60,60.02,.001,21,2,0)
lists under each appropriate accession, in the Enter/Edit options, and
"^DD",60,60.02,.001,21,3,0)
in the interim reports.
"^DD",60,60.02,.01,0)
LAB TEST^MP60'Xa^LAB(60,^0;1^D IT600201^LRXREF
"^DD",60,60.02,.01,1,0)
^.1
"^DD",60,60.02,.01,1,1,0)
60^AB
"^DD",60,60.02,.01,1,1,1)
S ^LAB(60,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",60,60.02,.01,1,1,2)
K ^LAB(60,"AB",$E(X,1,30),DA(1),DA)
"^DD",60,60.02,.01,3)
Select only if the panel does not have a data name.
"^DD",60,60.02,.01,21,0)
^^3^3^2851211^^^
"^DD",60,60.02,.01,21,1,0)
If the entry is to be changed or the number sequence is to be changed, the
"^DD",60,60.02,.01,21,2,0)
entry must be first deleted to be moved to a different position in the
"^DD",60,60.02,.01,21,3,0)
panel.
"^DD",60,60.02,.01,"AUDIT")
y
"^DD",60,60.02,.01,"DT")
2880304
"^DD",60,60.02,.02,0)
AP MULTIPLY FACTOR^NJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",60,60.02,.02,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",60,60.02,.02,21,0)
^^3^3^2910506^^
"^DD",60,60.02,.02,21,1,0)
For workload if procedure is counted more than once the number
"^DD",60,60.02,.02,21,2,0)
 of times counted is entered here.
"^DD",60,60.02,.02,21,3,0)
 Used only for cytology workload and labels.
"^DD",60,60.02,.02,"DT")
2910607
"^DD",60,60.021661,0)
CPRS SCREEN SUB-FIELD^^.01^1
"^DD",60,60.021661,0,"DT")
3151115
"^DD",60,60.021661,0,"IX","B",60.021661,.01)

"^DD",60,60.021661,0,"NM","CPRS SCREEN")

"^DD",60,60.021661,0,"UP")
60
"^DD",60,60.021661,.01,0)
CPRS SCREEN^M*P69.71'^LAB(69.71,^0;1^S DIC("S")="N LRSS S LRSS=$P(^LAB(60,D0,0),U,4) I $P(^LAB(60,D0,0),U,5)="""",$P(^LAB(69.71,Y,0),U,3),$P(^(0),U,4)=LRSS" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",60,60.021661,.01,1,0)
^.1
"^DD",60,60.021661,.01,1,1,0)
60.021661^B
"^DD",60,60.021661,.01,1,1,1)
S ^LAB(60,DA(1),21661,"B",$E(X,1,30),DA)=""
"^DD",60,60.021661,.01,1,1,2)
K ^LAB(60,DA(1),21661,"B",$E(X,1,30),DA)
"^DD",60,60.021661,.01,1,2,0)
60^AV1^MUMPS
"^DD",60,60.021661,.01,1,2,1)
S ^LAB(60,"AV1",DA(1),$E(X,1,30),DA)=""
"^DD",60,60.021661,.01,1,2,2)
K ^LAB(60,"AV1",DA(1),$E(X,1,30),DA)
"^DD",60,60.021661,.01,1,2,"DT")
3150813
"^DD",60,60.021661,.01,3)
Select the subscript that matches the CPRS Dialog
"^DD",60,60.021661,.01,12)
CPRS AP DIALOG SCREEN
"^DD",60,60.021661,.01,12.1)
S DIC("S")="N LRSS S LRSS=$P(^LAB(60,D0,0),U,4) I $P(^LAB(60,D0,0),U,5)="""",$P(^LAB(69.71,Y,0),U,3),$P(^(0),U,4)=LRSS"
"^DD",60,60.021661,.01,21,0)
^^4^4^3160908^
"^DD",60,60.021661,.01,21,1,0)
This field contains the LR CPRS PARAMETERS (#69.71) sreen that links this 
"^DD",60,60.021661,.01,21,2,0)
test to a specific CPRS Dialog Test. 102-BRONCHIAL CYTOLOGY. This will 
"^DD",60,60.021661,.01,21,3,0)
prevent user linking test that do not have the same subscript as the CPRS 
"^DD",60,60.021661,.01,21,4,0)
AP Dialog parameter.
"^DD",60,60.021661,.01,"DT")
3151115
"^DD",60,60.03,0)
COLLECTION SAMPLE SUB-FIELD^NL^500^10
"^DD",60,60.03,0,"DT")
2940816
"^DD",60,60.03,0,"ID",2)
W:$D(^(0)) "   ",$P(^(0),U,3)
"^DD",60,60.03,0,"IX","B",60.03,.01)

"^DD",60,60.03,0,"NM","COLLECTION SAMPLE")

"^DD",60,60.03,0,"UP")
60
"^DD",60,60.03,.01,0)
COLLECTION SAMPLE^P62'Xa^LAB(62,^0;1^I $P(^LAB(60,DA(1),0),U,8),$O(^(3,0))>0 D EN^DDIOL("ONLY ONE UNIQUE COLLECTION SAMPLE","","?0") K X
"^DD",60,60.03,.01,1,0)
^.1^^-1
"^DD",60,60.03,.01,1,1,0)
^^TRIGGER^60.03^2
"^DD",60,60.03,.01,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,3,D1,0)):^(0),1:"") S X=$P(Y(1),U,3) S DIU=X K Y X ^DD(60.03,.01,1,1,1.1) X ^DD(60.03,.01,1,1,1.4)
"^DD",60,60.03,.01,1,1,1.1)
S Y(1)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^LAB(62,+D0,0)) D0=-1 S Y(101)=$S($D(^LAB(62,D0,0)):^(0),1:"") S X=$P(Y(101),U,3) S D0=Y(1)
"^DD",60,60.03,.01,1,1,1.4)
S DIH=$S($D(^LAB(60,DIV(0),3,DIV(1),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,2,99))  S DIH=DIH_U" S %=$P(DIH,U,4,999),^(0)=$P(DIH,U,1,2)_U_DIV_$S(%]"":U_%,1:""),DIH=60.03,DIG=2 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.03,.01,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,3,D1,0)):^(0),1:"") S X=$P(Y(1),U,3) S DIU=X K Y X ^DD(60.03,.01,1,1,2.1) X ^DD(60.03,.01,1,1,2.4)
"^DD",60,60.03,.01,1,1,2.1)
S Y(1)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^LAB(62,+D0,0)) D0=-1 S Y(101)=$S($D(^LAB(62,D0,0)):^(0),1:"") S X=$P(Y(101),U,3) S D0=Y(1)
"^DD",60,60.03,.01,1,1,2.4)
S DIH=$S($D(^LAB(60,DIV(0),3,DIV(1),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,2,99))  S DIH=DIH_U" S %=$P(DIH,U,4,999),^(0)=$P(DIH,U,1,2)_U_DIV_$S(%]"":U_%,1:""),DIH=60.03,DIG=2 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.03,.01,1,1,"%D",0)
^^2^2^3080828^
"^DD",60,60.03,.01,1,1,"%D",1,0)
This cross reference uses the COLLECTION SAMPLE field to navigate to the COLLECTION SAMPLE file
"^DD",60,60.03,.01,1,1,"%D",2,0)
and retrieve the TUBE TOP COLOR field value and store in CONTAINER field (#2). 
"^DD",60,60.03,.01,1,1,"CREATE VALUE")
COLLECTION SAMPLE:TUBE TOP COLOR
"^DD",60,60.03,.01,1,1,"DELETE VALUE")
COLLECTION SAMPLE:TUBE TOP COLOR
"^DD",60,60.03,.01,1,1,"FIELD")
CONTAINER
"^DD",60,60.03,.01,1,3,0)
60.03^B
"^DD",60,60.03,.01,1,3,1)
S ^LAB(60,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",60,60.03,.01,1,3,2)
K ^LAB(60,DA(1),3,"B",$E(X,1,30),DA)
"^DD",60,60.03,.01,3)
Enter the appropriate collection sample for standard processing in the lab.
"^DD",60,60.03,.01,21,0)
^.001^2^2^3080825^^^^
"^DD",60,60.03,.01,21,1,0)
Enter the appropriate collection sample(s) for standard processing in the lab.  These are the common names the phlebotomists and ward personnel use and would recognize.  The first entry will be the "default
"^DD",60,60.03,.01,21,2,0)
" collection sample.  Points to the COLLECTION SAMPLE file.
"^DD",60,60.03,.01,"AUDIT")
y
"^DD",60,60.03,.01,"DT")
3080829
"^DD",60,60.03,1,0)
FORM NAME/NUMBER^F^^0;2^K:$L(X)>10!($L(X)<2) X
"^DD",60,60.03,1,3)
ANSWER MUST BE 2-10 CHARACTERS IN LENGTH
"^DD",60,60.03,1,21,0)
^^1^1^2841031^
"^DD",60,60.03,1,21,1,0)
The identification of the proper Lab slip for this test.
"^DD",60,60.03,2,0)
CONTAINER^CJ11^^ ; ^X ^DD(60.03,2,9.2) S D0=$P(Y(60.03,2,1),U,1) S:'$D(^LAB(62,+D0,0)) D0=-1 S Y(60.03,2,101)=$S($D(^LAB(62,D0,0)):^(0),1:"") S X=$P(Y(60.03,2,101),U,3) S D0=Y(60.03,2,80) S D1=Y(60.03,2,81)
"^DD",60,60.03,2,3)
ANSWER MUST BE 2-30 CHARACTERS IN LENGTH
"^DD",60,60.03,2,5,1,0)
60.03^.01^1
"^DD",60,60.03,2,9)
^
"^DD",60,60.03,2,9.01)
62^3;60.03^.01
"^DD",60,60.03,2,9.1)
COLLECTION SAMPLE:TUBE TOP COLOR
"^DD",60,60.03,2,9.2)
S Y(60.03,2,81)=$S($D(D1):D1,1:""),Y(60.03,2,80)=$S($D(D0):D0,1:""),Y(60.03,2,1)=$S($D(^LAB(60,D0,3,D1,0)):^(0),1:"")
"^DD",60,60.03,2,21,0)
^^2^2^2930311^
"^DD",60,60.03,2,21,1,0)
This entry uses the COLLECTION SAMPLE field to navigate to the COLLECTION
"^DD",60,60.03,2,21,2,0)
SAMPLE file and retrieve the TUBE TOP COLOR field value.
"^DD",60,60.03,3,0)
MIN VOL (in mls.)^NJ6,1^^0;4^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."2N.N) X
"^DD",60,60.03,3,3)
TYPE A NUMBER BETWEEN 0 AND 9999
"^DD",60,60.03,3,21,0)
^^3^3^2931122^^^^
"^DD",60,60.03,3,21,1,0)
Number of milliliters required to perform the test.  This number is summed
"^DD",60,60.03,3,21,2,0)
during the creation of the routine phlebotomy collection list to compute
"^DD",60,60.03,3,21,3,0)
the minimum number of samples to collect.
"^DD",60,60.03,3,"DT")
2840126
"^DD",60,60.03,4,0)
MAX. ORDER FREQ.^NJ3,0^^0;5^K:+X'=X!(X>120)!(X<1)!(X?.E1"."1N.N) X
"^DD",60,60.03,4,3)
Type a Number between 1 and 120, 0 Decimal Digits   --  This test may only be ordered once within this number of day(s).
"^DD",60,60.03,4,21,0)
^^5^5^2931122^^^^
"^DD",60,60.03,4,21,1,0)
Use this field to control how often a test may be ordered within a certain 
"^DD",60,60.03,4,21,2,0)
time period (# of days). The entry will then force the system to remind
"^DD",60,60.03,4,21,3,0)
the ordering person that the order they are placing for this test exceeds
"^DD",60,60.03,4,21,4,0)
the maximum order frequency.  If you enter 3, the test may only be ordered
"^DD",60,60.03,4,21,5,0)
once every three days.
"^DD",60,60.03,4,"DT")
2890828
"^DD",60,60.03,4.5,0)
SINGLE DAY MAX ORDER FREQ^NJ2,0^^0;7^K:+X'=X!(X>50)!(X<1)!(X?.E1"."1N.N) X
"^DD",60,60.03,4.5,3)
Type a Number between 1 and 50, 0 Decimal Digits  --  Enter the number of times this test may be ordered in one day.
"^DD",60,60.03,4.5,21,0)
^^2^2^2931122^^^
"^DD",60,60.03,4.5,21,1,0)
Enter a number specifying the maximum number of times a test can be ordered
"^DD",60,60.03,4.5,21,2,0)
in a single day.
"^DD",60,60.03,4.5,"DT")
2890828
"^DD",60,60.03,5,0)
WARD REMARKS^60.04A^^1;0
"^DD",60,60.03,5,21,0)
^^2^2^2931122^^^^
"^DD",60,60.03,5,21,1,0)
Text to be seen by the ward each time the test is ordered for a specific
"^DD",60,60.03,5,21,2,0)
collection sample.
"^DD",60,60.03,6,0)
LAB PROCESSING INSTRUCTIONS ^60.05A^^2;0
"^DD",60,60.03,6,21,0)
^^1^1^2940316^^^
"^DD",60,60.03,6,21,1,0)
Text seen by the lab as the test is received in the accession room.
"^DD",60,60.03,7,0)
REQUIRED COMMENT^*P62.07'^LAB(62.07,^0;6^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",60,60.03,7,3)

"^DD",60,60.03,7,12)
ONLY ALLOW COMMENTS CODE
"^DD",60,60.03,7,12.1)
S DIC("S")="I $P(^(0),U,3)=""C"""
"^DD",60,60.03,7,21,0)
^^2^2^2851209^^^^
"^DD",60,60.03,7,21,1,0)
Enter a comment or statement that may be required in regards to this test.
"^DD",60,60.03,7,21,2,0)
Points to EXECUTE CODE file.
"^DD",60,60.03,7,"DT")
2840827
"^DD",60,60.03,500,0)
SAMPLE WKLD CODE^60.14P^^9;0
"^DD",60,60.03,500,21,0)
^^4^4^2940316^^^^
"^DD",60,60.03,500,21,1,0)
 If there is a particular WKLD code which is associate the assaying
"^DD",60,60.03,500,21,2,0)
this type of specimen, enter that WKLD code here. For example
"^DD",60,60.03,500,21,3,0)
spinal fluid electrophoresis, this specimen must be concentrated
"^DD",60,60.03,500,21,4,0)
before the procedure can be performed.
"^DD",60,60.03,500,"DT")
2910315
"^DD",60,60.04,0)
WARD REMARKS SUB-FIELD^NL^.01^1
"^DD",60,60.04,0,"NM","WARD REMARKS")

"^DD",60,60.04,0,"UP")
60.03
"^DD",60,60.04,.01,0)
WARD REMARKS^W^^0;1^Q
"^DD",60,60.04,.01,3)

"^DD",60,60.04,.01,21,0)
^^2^2^2850425^^
"^DD",60,60.04,.01,21,1,0)
Text to be seen by the ward each time the test is ordered for a specific
"^DD",60,60.04,.01,21,2,0)
collection sample.
"^DD",60,60.04,.01,"DT")
2841010
"^DD",60,60.05,0)
LAB PROCESSING INSTRUCTIONS  SUB-FIELD^NL^.01^1
"^DD",60,60.05,0,"NM","LAB PROCESSING INSTRUCTIONS ")

"^DD",60,60.05,0,"UP")
60.03
"^DD",60,60.05,.01,0)
LAB PROCESSING INSTRUCTIONS^W^^0;1^Q
"^DD",60,60.05,.01,3)

"^DD",60,60.05,.01,21,0)
^^1^1^2940316^^^
"^DD",60,60.05,.01,21,1,0)
Text seen by lab personnel as the test is received in the accession room.
"^DD",60,60.05,.01,"DT")
2841010
"^DD",60,60.0505,0)
SITE NOTES DATE SUB-FIELD^^1^2
"^DD",60,60.0505,0,"DT")
2930912
"^DD",60,60.0505,0,"IX","B",60.0505,.01)

"^DD",60,60.0505,0,"NM","SITE NOTES DATE")

"^DD",60,60.0505,0,"UP")
60
"^DD",60,60.0505,.01,0)
SITE NOTES DATE^D^^0;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",60,60.0505,.01,1,0)
^.1
"^DD",60,60.0505,.01,1,1,0)
60.0505^B
"^DD",60,60.0505,.01,1,1,1)
S ^LAB(60,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",60,60.0505,.01,1,1,2)
K ^LAB(60,DA(1),11,"B",$E(X,1,30),DA)
"^DD",60,60.0505,.01,21,0)
^^1^1^2930912^
"^DD",60,60.0505,.01,21,1,0)
Date of the note.
"^DD",60,60.0505,.01,"DT")
2930912
"^DD",60,60.0505,1,0)
TEXT^60.5051^^1;0
"^DD",60,60.0505,1,21,0)
^^1^1^2930912^^
"^DD",60,60.0505,1,21,1,0)
 Actual text of the note for this test.
"^DD",60,60.0505,1,"DT")
2930912
"^DD",60,60.06,0)
*AMIS/RCS 14-4 SUB-FIELD^NL^.01^1
"^DD",60,60.06,0,"NM","*AMIS/RCS 14-4")

"^DD",60,60.06,0,"UP")
60.01
"^DD",60,60.06,.01,0)
*AMIS/RCS 14-4^MP64'^LAM(^0;1^Q
"^DD",60,60.06,.01,21,0)
^^1^1^2940316^^^^
"^DD",60,60.06,.01,21,1,0)
No longer used.  Will be deleted after this version
"^DD",60,60.06,.01,"DT")
2831228
"^DD",60,60.07,0)
INTERPRETATION SUB-FIELD^NL^.01^1
"^DD",60,60.07,0,"NM","INTERPRETATION")

"^DD",60,60.07,0,"UP")
60.01
"^DD",60,60.07,.01,0)
INTERPRETATION^W^^0;1^Q
"^DD",60,60.07,.01,.1)

"^DD",60,60.07,.01,3)

"^DD",60,60.07,.01,21,0)
^^3^3^2850830^^^^
"^DD",60,60.07,.01,21,1,0)
Enter any remark to accompany EVERY test result.  These remarks may be
"^DD",60,60.07,.01,21,2,0)
 edited and formatted with the FileMan text editor.  The text may be
"^DD",60,60.07,.01,21,3,0)
 other range information, special conditions, etc.
"^DD",60,60.07,.01,"DT")
2831221
"^DD",60,60.08,0)
GENERAL WARD INSTRUCTIONS SUB-FIELD^NL^.01^1
"^DD",60,60.08,0,"NM","GENERAL WARD INSTRUCTIONS")

"^DD",60,60.08,0,"UP")
60
"^DD",60,60.08,.01,0)
GENERAL WARD INSTRUCTIONS^W^^0;1^Q
"^DD",60,60.08,.01,21,0)
^^2^2^2850725^^^^
"^DD",60,60.08,.01,21,1,0)
Text to be seen by the ward each time the test is ordered regardless of
"^DD",60,60.08,.01,21,2,0)
the type of collection sample.
"^DD",60,60.08,.01,"DT")
2841010
"^DD",60,60.09,0)
GENERAL PROCESSING INST. SUB-FIELD^NL^.01^1
"^DD",60,60.09,0,"NM","GENERAL PROCESSING INST.")

"^DD",60,60.09,0,"UP")
60
"^DD",60,60.09,.01,0)
GENERAL PROCESSING INST.^W^^0;1^Q
"^DD",60,60.09,.01,21,0)
^^1^1^2841031^
"^DD",60,60.09,.01,21,1,0)
This may include any processing instructions pertinent to this test.
"^DD",60,60.09,.01,"DT")
2841022
"^DD",60,60.1,0)
SYNONYM SUB-FIELD^NL^.01^1
"^DD",60,60.1,0,"IX","AX5",60.1,.01)

"^DD",60,60.1,0,"IX","B",60.1,.01)

"^DD",60,60.1,0,"NM","SYNONYM")

"^DD",60,60.1,0,"UP")
60
"^DD",60,60.1,.01,0)
SYNONYM^MFXa^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:(X'?.ANP)!($L(X)>60) X
"^DD",60,60.1,.01,1,0)
^.1
"^DD",60,60.1,.01,1,1,0)
60^B^MNEMONIC
"^DD",60,60.1,.01,1,1,1)
S ^LAB(60,"B",$E(X,1,30),DA(1))=1
"^DD",60,60.1,.01,1,1,2)
K ^LAB(60,"B",$E(X,1,30),DA(1))
"^DD",60,60.1,.01,1,2,0)
60.1^B
"^DD",60,60.1,.01,1,2,1)
S ^LAB(60,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",60,60.1,.01,1,2,2)
K ^LAB(60,DA(1),5,"B",$E(X,1,30),DA)
"^DD",60,60.1,.01,1,3,0)
60.1^AX5^MUMPS
"^DD",60,60.1,.01,1,3,1)
N TEST S TEST=DA(1) N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD^LR7OV0(TEST)
"^DD",60,60.1,.01,1,3,2)
N TEST,KSYN S TEST=DA(1),KSYN=DA N DA,DIE,DIC,DE,DW,DH,DS,DO,DD D UPD2^LR7OV0(TEST,KSYN)
"^DD",60,60.1,.01,1,3,"%D",0)
^.101^1^1^3060411^^^^
"^DD",60,60.1,.01,1,3,"%D",1,0)
Trigger update to CPRS
"^DD",60,60.1,.01,1,3,"DT")
3060411
"^DD",60,60.1,.01,3)
ANSWER MUST BE 1-60 CHARACTERS IN LENGTH AND NOT ALREADY IN USE
"^DD",60,60.1,.01,21,0)
^.001^2^2^3060411^^^^
"^DD",60,60.1,.01,21,1,0)
This is another name for the test.  It may be the locally preferred name,
"^DD",60,60.1,.01,21,2,0)
or a common misspelling.
"^DD",60,60.1,.01,"AUDIT")
y
"^DD",60,60.1,.01,"DT")
3060411
"^DD",60,60.11,0)
ACCESSION AREA SUB-FIELD^NL^1^2
"^DD",60,60.11,0,"DT")
2920105
"^DD",60,60.11,0,"NM","ACCESSION AREA")

"^DD",60,60.11,0,"UP")
60
"^DD",60,60.11,.01,0)
INSTITUTION^P4'Xa^DIC(4,^0;1^S DINUM=X
"^DD",60,60.11,.01,21,0)
^^6^6^2850731^
"^DD",60,60.11,.01,21,1,0)
This is the appropriate institution/division this test is performed at.
"^DD",60,60.11,.01,21,2,0)
If this test is part of a panel that does not have an accession area
"^DD",60,60.11,.01,21,3,0)
defined for the panel, that panel will be expanded based on the
"^DD",60,60.11,.01,21,4,0)
institution/division the program is operating under.  I.e., if the
"^DD",60,60.11,.01,21,5,0)
institution doesn't find a match, the panel test ordered will not
"^DD",60,60.11,.01,21,6,0)
include this test.
"^DD",60,60.11,.01,"AUDIT")
y
"^DD",60,60.11,.01,"DT")
2850731
"^DD",60,60.11,1,0)
ACCESSION AREA^*P68'a^LRO(68,^0;2^S DIC("S")="I '$L($P(^(0),U,17))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",60,60.11,1,12)
You can not select an accession area designated Work Area only.
"^DD",60,60.11,1,12.1)
S DIC("S")="I '$L($P(^(0),U,17))"
"^DD",60,60.11,1,21,0)
^^4^4^2850731^
"^DD",60,60.11,1,21,1,0)
This is the appropriate accession area for this test.  If the test is a
"^DD",60,60.11,1,21,2,0)
panel, all tests on that panel will be assigned to the entered accession
"^DD",60,60.11,1,21,3,0)
area.  If some of the panel's tests go to other accession areas, leave this
"^DD",60,60.11,1,21,4,0)
field blank.  This will be the default accession area for this test.
"^DD",60,60.11,1,"AUDIT")
y
"^DD",60,60.11,1,"DT")
2920105
"^DD",60,60.12,0)
VERIFY WKLD CODE SUB-FIELD^NL^3^4
"^DD",60,60.12,0,"DT")
2910410
"^DD",60,60.12,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",60,60.12,0,"IX","B",60.12,.01)

"^DD",60,60.12,0,"NM","VERIFY WKLD CODE")

"^DD",60,60.12,0,"UP")
60
"^DD",60,60.12,.01,0)
VERIFY WKLD CODE^MP64'Xa^LAM(^0;1^S:$D(X) DINUM=X
"^DD",60,60.12,.01,1,0)
^.1^^-1
"^DD",60,60.12,.01,1,1,0)
^^TRIGGER^60.12^1
"^DD",60,60.12,.01,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,9,D1,0)):^(0),1:"") S X=$P(Y(1),U,2) S DIU=X K Y X ^DD(60.12,.01,1,1,1.1) X ^DD(60.12,.01,1,1,1.4)
"^DD",60,60.12,.01,1,1,1.1)
S X=DIV S I(0,0)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^LAM(+D0,0)) D0=-1 S Y(101)=$S($D(^LAM(D0,0)):^(0),1:"") S X=$P(Y(101),U,2) S D0=I(0,0)
"^DD",60,60.12,.01,1,1,1.4)
S DIH=$S($D(^LAB(60,DIV(0),9,DIV(1),0)):^(0),1:""),DIV=X S %=$P(DIH,U,3,999),DIU=$P(DIH,U,2),^(0)=$P(DIH,U,1,1)_U_DIV_$S(%]"":U_%,1:""),DIH=60.12,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.12,.01,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,9,D1,0)):^(0),1:"") S X=$P(Y(1),U,2) S DIU=X K Y S X=DIV S X="" X ^DD(60.12,.01,1,1,2.4)
"^DD",60,60.12,.01,1,1,2.4)
S DIH=$S($D(^LAB(60,DIV(0),9,DIV(1),0)):^(0),1:""),DIV=X S %=$P(DIH,U,3,999),DIU=$P(DIH,U,2),^(0)=$P(DIH,U,1,1)_U_DIV_$S(%]"":U_%,1:""),DIH=60.12,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.12,.01,1,1,"CREATE VALUE")
WKLD CODE TEST:WKLD CODE
"^DD",60,60.12,.01,1,1,"DELETE VALUE")
@
"^DD",60,60.12,.01,1,1,"FIELD")
WKLD CODE
"^DD",60,60.12,.01,1,2,0)
60.12^B
"^DD",60,60.12,.01,1,2,1)
S ^LAB(60,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",60,60.12,.01,1,2,2)
K ^LAB(60,DA(1),9,"B",$E(X,1,30),DA)
"^DD",60,60.12,.01,21,0)
^^3^3^2911118^^^^
"^DD",60,60.12,.01,21,1,0)
The WKLD codes for this test are entered here.
"^DD",60,60.12,.01,21,2,0)
Enter only the WKLD codes for the procedures that are done at your
"^DD",60,60.12,.01,21,3,0)
hospital for this test.
"^DD",60,60.12,.01,23,0)
^^3^3^2911118^
"^DD",60,60.12,.01,23,1,0)
  The verification programs look here to determine the prefix to be used
"^DD",60,60.12,.01,23,2,0)
to record workload. The suffix is determined by the method defined at
"^DD",60,60.12,.01,23,3,0)
the beginning of the verificaton process.
"^DD",60,60.12,.01,"AUDIT")
y
"^DD",60,60.12,.01,"DT")
2911112
"^DD",60,60.12,1,0)
VERIFY WKLD CODE #^RFIX^^0;2^K:$L(X)>10!($L(X)<9) X
"^DD",60,60.12,1,3)
ANSWER MUST BE 9-10 CHARACTERS IN LENGTH
"^DD",60,60.12,1,5,1,0)
60.12^.01^1
"^DD",60,60.12,1,21,0)
^^1^1^2930327^^
"^DD",60,60.12,1,21,1,0)
This contains the WKLD codes for this test.
"^DD",60,60.12,1,23,0)
^^2^2^2911118^
"^DD",60,60.12,1,23,1,0)
 This number is suffed by a trigger. The user is not allowed to edit
"^DD",60,60.12,1,23,2,0)
this field.
"^DD",60,60.12,1,"DT")
2920707
"^DD",60,60.12,2,0)
TEST MULTIPLY FACTOR^NJ2,0^^0;3^K:+X'=X!(X>20)!(X<1)!(X?.E1"."1N.N) X
"^DD",60,60.12,2,3)
Type a Number between 1 and 20, 0 Decimal Digits
"^DD",60,60.12,2,21,0)
^^5^4
"^DD",60,60.12,2,21,1,0)
 If this WKLD code should be counted more than once, enter the number of
"^DD",60,60.12,2,21,2,0)
times it should be counted to get the total correct workload. If the field
"^DD",60,60.12,2,21,3,0)
is blank, then it will automatically be counted 1 time.
"^DD",60,60.12,2,21,4,0)
   Note: In version prior to V5.2, this field was named the Default Yes
"^DD",60,60.12,2,21,5,0)
field. That field is not used with V5.2 and greater.
"^DD",60,60.12,2,"DT")
2910225
"^DD",60,60.12,3,0)
PROTECT SUFFIX^S^1:YES;^0;4^Q
"^DD",60,60.12,3,21,0)
^^4^4^2940826^^^^
"^DD",60,60.12,3,21,1,0)
If you wish to prevent the suffix from being converted to another suffix
"^DD",60,60.12,3,21,2,0)
during verification. Enter YES in this field.
"^DD",60,60.12,3,21,3,0)
  Codes which do not have a .0000 suffix need not be protected. They are
"^DD",60,60.12,3,21,4,0)
not changed during verification.
"^DD",60,60.12,3,23,0)
^^5^5^2940826^^^
"^DD",60,60.12,3,23,1,0)
  YES in this field will prevent the suffix from being changed during
"^DD",60,60.12,3,23,2,0)
verification.
"^DD",60,60.12,3,23,3,0)
  NOTE: Suffixes are only changed for the Verification WKLD codes. The
"^DD",60,60.12,3,23,4,0)
WKLD codes found in other files and fields do not have their suffix
"^DD",60,60.12,3,23,5,0)
changed.
"^DD",60,60.12,3,"DT")
2910411
"^DD",60,60.121661,0)
AOE SCREEN SUB-FIELD^^.01^1
"^DD",60,60.121661,0,"DT")
3151014
"^DD",60,60.121661,0,"IX","B",60.121661,.01)

"^DD",60,60.121661,0,"NM","AOE SCREEN")

"^DD",60,60.121661,0,"UP")
60.01
"^DD",60,60.121661,.01,0)
AOE SCREEN^M*P21661'^VFDLR(21661,^0;1^S DIC("S")="I $P(^(0),U,8)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",60,60.121661,.01,.1)

"^DD",60,60.121661,.01,1,0)
^.1
"^DD",60,60.121661,.01,1,1,0)
60.121661^B
"^DD",60,60.121661,.01,1,1,1)
S ^LAB(60,DA(2),1,DA(1),21661,"B",$E(X,1,30),DA)=""
"^DD",60,60.121661,.01,1,1,2)
K ^LAB(60,DA(2),1,DA(1),21661,"B",$E(X,1,30),DA)
"^DD",60,60.121661,.01,1,2,0)
60^AV2^MUMPS
"^DD",60,60.121661,.01,1,2,1)
S ^LAB(60,"AV2",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",60,60.121661,.01,1,2,2)
K ^LAB(60,"AV2",$E(X,1,30),DA(2),DA(1),DA)
"^DD",60,60.121661,.01,1,2,"%D",0)
^.101^1^1^3160225^^^
"^DD",60,60.121661,.01,1,2,"%D",1,0)
This X-ref is used in the printing of AOE entries.
"^DD",60,60.121661,.01,1,2,"DT")
3150813
"^DD",60,60.121661,.01,12)
Select only AOE Screens
"^DD",60,60.121661,.01,12.1)
S DIC("S")="I $P(^(0),U,8)"
"^DD",60,60.121661,.01,21,0)
^.001^2^2^3160224^^^
"^DD",60,60.121661,.01,21,1,0)
This field point to the LR ASK ON ENTRY (#21661) file that list the AOE 
"^DD",60,60.121661,.01,21,2,0)
CPRS Windows.
"^DD",60,60.121661,.01,"DT")
3160223
"^DD",60,60.13,0)
ACCESSION WKLD CODE SUB-FIELD^^2^3
"^DD",60,60.13,0,"DT")
2910108
"^DD",60,60.13,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",60,60.13,0,"NM","ACCESSION WKLD CODE")

"^DD",60,60.13,0,"UP")
60
"^DD",60,60.13,.01,0)
ACCESSION WKLD CODE^MP64'Xa^LAM(^0;1^S DINUM=X
"^DD",60,60.13,.01,1,0)
^.1
"^DD",60,60.13,.01,1,1,0)
^^TRIGGER^60.13^1
"^DD",60,60.13,.01,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,9.1,D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$P(^LAM(DA,0),U,2) X ^DD(60.13,.01,1,1,1.4)
"^DD",60,60.13,.01,1,1,1.4)
S DIH=$S($D(^LAB(60,DIV(0),9.1,DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=60.13,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.13,.01,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^LAB(60,D0,9.1,D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(60.13,.01,1,1,2.4)
"^DD",60,60.13,.01,1,1,2.4)
S DIH=$S($D(^LAB(60,DIV(0),9.1,DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=60.13,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.13,.01,1,1,3)
I need the data for WKLD Workload
"^DD",60,60.13,.01,1,1,"%D",0)
^^1^1^2910311^
"^DD",60,60.13,.01,1,1,"%D",1,0)
 This data is used for lookup when computing WKLD Workload
"^DD",60,60.13,.01,1,1,"CREATE VALUE")
S X=$P(^LAM(DA,0),U,2)
"^DD",60,60.13,.01,1,1,"DELETE VALUE")
@
"^DD",60,60.13,.01,1,1,"DT")
2910311
"^DD",60,60.13,.01,1,1,"FIELD")
WKLD CODE NUMBER
"^DD",60,60.13,.01,3)

"^DD",60,60.13,.01,21,0)
^^8^8^2940316^^^^
"^DD",60,60.13,.01,21,1,0)
 Enter the WKLD code used to identify the accession workload for
"^DD",60,60.13,.01,21,2,0)
this test. This field can be also used for prep procedures, ie
"^DD",60,60.13,.01,21,3,0)
inoculating culture plates. This WKLD code count will appear
"^DD",60,60.13,.01,21,4,0)
on the date the specimen was accessioned into the laboratory.
"^DD",60,60.13,.01,21,5,0)
  This field functions in the same manner as the WKLD codes, 
"^DD",60,60.13,.01,21,6,0)
except it doesn't require a completion date to be counted.
"^DD",60,60.13,.01,21,7,0)
 For CYTOLOGY SCREENING WORKLOAD the appropriate WKLD codes are
"^DD",60,60.13,.01,21,8,0)
 entered here.
"^DD",60,60.13,.01,23,0)
^^2^2^2940316^^
"^DD",60,60.13,.01,23,1,0)
 The accession programs look to this field to determine if any
"^DD",60,60.13,.01,23,2,0)
accession workload should be credited for this test.
"^DD",60,60.13,.01,"AUDIT")
y
"^DD",60,60.13,.01,"DT")
2910326
"^DD",60,60.13,1,0)
ACCESSION WKLD CODE #^NJ9,3IX^^0;2^K:+X'=X!(X>90000)!(X<10000)!(X?.E1"."3N.E)!(X?.E1".".E.A) X
"^DD",60,60.13,1,3)
Type a Number between 10000 and 90000, 3-4 Decimal Digits
"^DD",60,60.13,1,5,1,0)
60.13^.01^1
"^DD",60,60.13,1,9)
^
"^DD",60,60.13,1,21,0)
^^1^1^2940316^^
"^DD",60,60.13,1,21,1,0)
  This field contains the actual WKLD Code number.
"^DD",60,60.13,1,23,0)
^^1^1^2940316^^^
"^DD",60,60.13,1,23,1,0)
 This field is stuffed by a trigger. The user cannot edit this field
"^DD",60,60.13,1,"DT")
2920707
"^DD",60,60.13,2,0)
TEST MULTIPLY FACTOR^NJ3,0^^0;3^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",60,60.13,2,3)
Type a Number between 1 and 100, 0 Decimal Digits
"^DD",60,60.13,2,21,0)
^^4^4^2940316^^^
"^DD",60,60.13,2,21,1,0)
  If this WKLD code should be counted more than once, enter that number
"^DD",60,60.13,2,21,2,0)
here. The default is 1.
"^DD",60,60.13,2,21,3,0)
  This field is identical to the multiply field in the verification WKLD
"^DD",60,60.13,2,21,4,0)
code sub file.
"^DD",60,60.13,2,"DT")
2910225
"^DD",60,60.14,0)
SAMPLE WKLD CODE SUB-FIELD^^2^3
"^DD",60,60.14,0,"DT")
2940816
"^DD",60,60.14,0,"NM","SAMPLE WKLD CODE")

"^DD",60,60.14,0,"UP")
60.03
"^DD",60,60.14,.01,0)
SAMPLE WKLD CODE^MP64'X^LAM(^0;1^I $D(X) S DINUM=X
"^DD",60,60.14,.01,1,0)
^.1^^-1
"^DD",60,60.14,.01,1,1,0)
^^TRIGGER^60.14^1
"^DD",60,60.14,.01,1,1,1)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(1)=$S($D(^LAB(60,D0,3,D1,9,D2,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$P(^LAM(DA,0),U,2) X ^DD(60.14,.01,1,1,1.4)
"^DD",60,60.14,.01,1,1,1.4)
S DIH=$S($D(^LAB(60,DIV(0),3,DIV(1),9,DIV(2),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=60.14,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.14,.01,1,1,2)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(1)=$S($D(^LAB(60,D0,3,D1,9,D2,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(60.14,.01,1,1,2.4)
"^DD",60,60.14,.01,1,1,2.4)
S DIH=$S($D(^LAB(60,DIV(0),3,DIV(1),9,DIV(2),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=60.14,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",60,60.14,.01,1,1,"CREATE VALUE")
S X=$P(^LAM(DA,0),U,2)
"^DD",60,60.14,.01,1,1,"DELETE VALUE")
@
"^DD",60,60.14,.01,1,1,"DT")
2901227
"^DD",60,60.14,.01,1,1,"FIELD")
WKLD CODE
"^DD",60,60.14,.01,21,0)
^^7^7^2940316^^^^
"^DD",60,60.14,.01,21,1,0)
  If this test has a sample type which should have a specific
"^DD",60,60.14,.01,21,2,0)
WKLD code associate with it, enter the WKLD code here.
"^DD",60,60.14,.01,21,3,0)
 Example: Urine electrophoresis always has a urine protein performed.
"^DD",60,60.14,.01,21,4,0)
enter the WKLD code for that procedure here. It will only be counted
"^DD",60,60.14,.01,21,5,0)
for collection sample of urine.
"^DD",60,60.14,.01,21,6,0)
  Note: This field is similar to Verify WKLD code sub-file except for
"^DD",60,60.14,.01,21,7,0)
the treatment of the suffix and collection sample specific.
"^DD",60,60.14,.01,"DT")
2910307
"^DD",60,60.14,1,0)
SAMPLE WKLD CODE #^FX^^0;2^K:$L(X)>10!($L(X)<9) X
"^DD",60,60.14,1,3)
Answer must be 9 characters in length.
"^DD",60,60.14,1,5,1,0)
60.14^.01^1
"^DD",60,60.14,1,9)
^
"^DD",60,60.14,1,21,0)
^^1^1^2940316^^
"^DD",60,60.14,1,21,1,0)
 This field contains the actual WKLD Code number.
"^DD",60,60.14,1,23,0)
^^1^1^2940316^^
"^DD",60,60.14,1,23,1,0)
 This field is triggered, the user cannot edit this field.
"^DD",60,60.14,1,"DT")
2920707
"^DD",60,60.14,2,0)
TEST MULTIPLY FACTOR^NJ2,0^^0;3^K:+X'=X!(X>20)!(X<0)!(X?.E1"."1N.N) X
"^DD",60,60.14,2,3)
Type a Number between 0 and 20, 0 Decimal Digits
"^DD",60,60.14,2,21,0)
^^4^4^2940816^^^^
"^DD",60,60.14,2,21,1,0)
 If this particular WKLD code should be multiplied in order to receive
"^DD",60,60.14,2,21,2,0)
proper count. Enter that number here. The default is 1.
"^DD",60,60.14,2,21,3,0)
  NOTE: This field is identical the field found in the Verify
"^DD",60,60.14,2,21,4,0)
WKLD code field sub file.
"^DD",60,60.14,2,"DT")
2940816
"^DD",60,60.196,0)
SPECIMEN CPT SUB-FIELD^^1^2
"^DD",60,60.196,0,"DT")
3031003
"^DD",60,60.196,0,"IX","B",60.196,.01)

"^DD",60,60.196,0,"NM","SPECIMEN CPT")

"^DD",60,60.196,0,"UP")
60.01
"^DD",60,60.196,.01,0)
SPECIMEN CPT^P81'^ICPT(^0;1^Q
"^DD",60,60.196,.01,1,0)
^.1
"^DD",60,60.196,.01,1,1,0)
60.196^B
"^DD",60,60.196,.01,1,1,1)
S ^LAB(60,DA(2),1,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",60,60.196,.01,1,1,2)
K ^LAB(60,DA(2),1,DA(1),3,"B",$E(X,1,30),DA)
"^DD",60,60.196,.01,21,0)
^.001^1^1^3031003^^^
"^DD",60,60.196,.01,21,1,0)
A CPT associated with the specimen
"^DD",60,60.196,.01,"DT")
3030807
"^DD",60,60.196,1,0)
ACTIVE DATE (CSV)^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",60,60.196,1,21,0)
^.001^1^1^3031003^^
"^DD",60,60.196,1,21,1,0)
This the active date of the SPECIMEN CPT for CSV purposes.
"^DD",60,60.196,1,"DT")
3030807
"^DD",60,60.2,0)
FOREIGN COMPUTER SYSTEM SUB-FIELD^^3^4
"^DD",60,60.2,0,"DT")
2931123
"^DD",60,60.2,0,"IX","B",60.2,.01)

"^DD",60,60.2,0,"NM","FOREIGN COMPUTER SYSTEM")

"^DD",60,60.2,0,"UP")
60.01
"^DD",60,60.2,.01,0)
FOREIGN COMPUTER SYSTEM^F^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<2) X
"^DD",60,60.2,.01,1,0)
^.1
"^DD",60,60.2,.01,1,1,0)
60.2^B
"^DD",60,60.2,.01,1,1,1)
S ^LAB(60,DA(2),1,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",60,60.2,.01,1,1,2)
K ^LAB(60,DA(2),1,DA(1),4,"B",$E(X,1,30),DA)
"^DD",60,60.2,.01,1,2,0)
60.01^AC^MUMPS
"^DD",60,60.2,.01,1,2,1)
S ^LAB(60,DA(2),1,"AC",$E(X,1,30),DA(1),DA)=""
"^DD",60,60.2,.01,1,2,2)
K ^LAB(60,DA(2),1,"AC",$E(X,1,30),DA(1),DA)
"^DD",60,60.2,.01,1,2,"%D",0)
^^1^1^2931123^
"^DD",60,60.2,.01,1,2,"%D",1,0)
 To allow look up of foreign computer symbols for this test and sample.
"^DD",60,60.2,.01,1,2,"DT")
2931123
"^DD",60,60.2,.01,3)
Answer must be 2-30 characters in length.
"^DD",60,60.2,.01,21,0)
^^1^1^2940316^
"^DD",60,60.2,.01,21,1,0)
Reserved for future use. Do not use.
"^DD",60,60.2,.01,"DT")
2931123
"^DD",60,60.2,1,0)
FOREIGN ITEM #^F^^0;2^K:$L(X)>30!($L(X)<2) X
"^DD",60,60.2,1,3)
Answer must be 2-30 characters in length.
"^DD",60,60.2,1,21,0)
^^1^1^2940510^
"^DD",60,60.2,1,21,1,0)
RESERVED FOR FUTURE USE
"^DD",60,60.2,1,"DT")
2931123
"^DD",60,60.2,2,0)
INTEGER^S^1:YES;0:NO;^0;3^Q
"^DD",60,60.2,2,3)
ENTER 'YES' IF THE FOREIGN COMPUTER EXPECTS THIS VALUE TO BE AN INTEGER.
"^DD",60,60.2,2,21,0)
^^1^1^2940510^
"^DD",60,60.2,2,21,1,0)
RESERVED FOR FUTURE USE
"^DD",60,60.2,2,"DT")
2931123
"^DD",60,60.2,3,0)
UNIT CONVERSION^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",60,60.2,3,3)
Answer must be 1-20 characters in length.
"^DD",60,60.2,3,4)
Q
"^DD",60,60.2,3,21,0)
^^1^1^2940510^
"^DD",60,60.2,3,21,1,0)
RESERVED FOR FUTURE USE
"^DD",60,60.2,3,"DT")
2931123
"^DD",60,60.5051,0)
TEXT SUB-FIELD^^.01^1
"^DD",60,60.5051,0,"DT")
2930912
"^DD",60,60.5051,0,"NM","TEXT")

"^DD",60,60.5051,0,"UP")
60.0505
"^DD",60,60.5051,.01,0)
NOTE^W^^0;1^Q
"^DD",60,60.5051,.01,"DT")
2930912
"^DD",69,69,0)
FIELD^NL^1^3
"^DD",69,69,0,"ACT")
W !,"  ",!
"^DD",69,69,0,"DDA")
N
"^DD",69,69,0,"DT")
3161117
"^DD",69,69,0,"IX","AA",69.01,13)

"^DD",69,69,0,"IX","AC",69.03,14)

"^DD",69,69,0,"IX","AD",69.03,16)

"^DD",69,69,0,"IX","AE",69.03,10)

"^DD",69,69,0,"IX","AN",69.01,21)

"^DD",69,69,0,"IX","AVFDOR",69.03,6)

"^DD",69,69,0,"IX","AZ",69.01,5)

"^DD",69,69,0,"IX","AZZ",69.01,10)

"^DD",69,69,0,"IX","B",69,.01)

"^DD",69,69,0,"IX","C",69.01,9.5)

"^DD",69,69,0,"IX","D",69.01,.01)

"^DD",69,69,0,"NM","LAB ORDER ENTRY")

"^DD",69,69,0,"VRPK")
LR
"^DD",69,69,.01,0)
DATE ORDERED^RDX^^0;1^S %DT="EX" D ^%DT S X=Y,DINUM=Y K:Y<1 X,DINUM
"^DD",69,69,.01,1,0)
^.1
"^DD",69,69,.01,1,1,0)
69^B
"^DD",69,69,.01,1,1,1)
S ^LRO(69,"B",$E(X,1,30),DA)=""
"^DD",69,69,.01,1,1,2)
K ^LRO(69,"B",$E(X,1,30),DA)
"^DD",69,69,.01,3)

"^DD",69,69,.01,21,0)
^^1^1^2841123^
"^DD",69,69,.01,21,1,0)
Date of order.
"^DD",69,69,.01,"DT")
2870914
"^DD",69,69,.5,0)
CURRENT ORDER NUMBER^NJ7,0^^2;1^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",69,69,.5,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 9999999
"^DD",69,69,.5,21,0)
^^1^1^2841129^
"^DD",69,69,.5,21,1,0)
The count of the order number for the current year.
"^DD",69,69,.5,"DEL",1,0)
I '$D(^XUSEC("LRLIASON",DUZ))
"^DD",69,69,.5,"DT")
2840503
"^DD",69,69,1,0)
SPECIMEN #^69.01PA^^1;0
"^DD",69,69,1,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69,1,21,1,0)
The sequential specimen number.
"^DD",69,69.01,0)
SPECIMEN # SUB-FIELD^NL^21661.74^38
"^DD",69,69.01,0,"DT")
3161117
"^DD",69,69.01,0,"IX","AA",69.01,.01)

"^DD",69,69.01,0,"IX","AC",69.01,8)

"^DD",69,69.01,0,"IX","AD",69.01,8)

"^DD",69,69.01,0,"IX","AE",69.01,26)
 
"^DD",69,69.01,0,"IX","AL",69.01,21)

"^DD",69,69.01,0,"IX","AN",69.01,21)

"^DD",69,69.01,0,"IX","AN2",69.01,21)

"^DD",69,69.01,0,"IX","AP",69.01,21)

"^DD",69,69.01,0,"IX","AR",69.01,21)

"^DD",69,69.01,0,"NM","SPECIMEN #")

"^DD",69,69.01,0,"UP")
69
"^DD",69,69.01,.001,0)
SPECIMEN #^NJ6,0^^ ^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",69,69.01,.001,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 999999
"^DD",69,69.01,.001,21,0)
^^1^1^2841129^
"^DD",69,69.01,.001,21,1,0)
The sequence number of individual specimens on orders for a given date.
"^DD",69,69.01,.01,0)
LRDFN^RP63'O^LR(^0;1^Q
"^DD",69,69.01,.01,.1)

"^DD",69,69.01,.01,1,0)
^.1
"^DD",69,69.01,.01,1,1,0)
69.01^AA
"^DD",69,69.01,.01,1,1,1)
S ^LRO(69,DA(1),1,"AA",$E(X,1,30),DA)=""
"^DD",69,69.01,.01,1,1,2)
K ^LRO(69,DA(1),1,"AA",$E(X,1,30),DA)
"^DD",69,69.01,.01,1,2,0)
69^D^MUMPS
"^DD",69,69.01,.01,1,2,1)
S ^LRO(69,"D",$E(X,1,30),DA(1),DA)=""
"^DD",69,69.01,.01,1,2,2)
K ^LRO(69,"D",$E(X,1,30),DA(1),DA)
"^DD",69,69.01,.01,2)
S Y(0)=Y S Y1=^DIC($P(^LR(Y(0),0),U,2),0,"GL")_$P(^LR(Y(0),0),U,3)_",0)",Y=$P(@Y1,U) K Y1
"^DD",69,69.01,.01,2.1)
S Y1=^DIC($P(^LR(Y(0),0),U,2),0,"GL")_$P(^LR(Y(0),0),U,3)_",0)",Y=$P(@Y1,U) K Y1
"^DD",69,69.01,.01,21,0)
^^1^1^2890626^^
"^DD",69,69.01,.01,21,1,0)
The internal number in the Lab Data file 63.
"^DD",69,69.01,.01,"DT")
2900830
"^DD",69,69.01,.02,0)
PARENT FILE^CJ12^^ ; ^X ^DD(69.01,.02,9.2) S Y(69.01,.02,101)=$S($D(^LR(D0,0)):^(0),1:"") S X=$S('$D(^DIC(+$P(Y(69.01,.02,101),U,2),0)):"",1:$P(^(0),U,1)) S D0=Y(69.01,.02,2)
"^DD",69,69.01,.02,9)
^
"^DD",69,69.01,.02,9.01)
63^.02;69.01^.01
"^DD",69,69.01,.02,9.1)
LRDFN:PARENT FILE
"^DD",69,69.01,.02,9.2)
S Y(69.01,.02,2)=$S($D(D0):D0,1:""),Y(69.01,.02,1)=$S($D(^LRO(69,D0,1,D1,0)):^(0),1:""),D0=$P(Y(69.01,.02,1),U,1) S:'$D(^LR(+D0,0)) D0=-1
"^DD",69,69.01,.02,21,0)
^^1^1^2841129^
"^DD",69,69.01,.02,21,1,0)
Computed field to give the parent file of the data in file 63.
"^DD",69,69.01,.03,0)
NAME^CJ30^^ ; ^X ^DD(69.01,.03,9.2) S Y(69.01,.03,101)=$S($D(^LR(D0,0)):^(0),1:""),Y(69.01,.03,102)=X,Y=$P(Y(69.01,.03,101),U,3) X:$D(^DD(63,.03,2)) ^(2) S X=Y S D0=Y(69.01,.03,2)
"^DD",69,69.01,.03,9)
^
"^DD",69,69.01,.03,9.01)
63^.03;69.01^.01
"^DD",69,69.01,.03,9.1)
LRDFN:NAME
"^DD",69,69.01,.03,9.2)
S Y(69.01,.03,2)=$S($D(D0):D0,1:""),Y(69.01,.03,1)=$S($D(^LRO(69,D0,1,D1,0)):^(0),1:""),D0=$P(Y(69.01,.03,1),U,1) S:'$D(^LR(+D0,0)) D0=-1
"^DD",69,69.01,.03,21,0)
^^2^2^2841129^
"^DD",69,69.01,.03,21,1,0)
Computed field to give the name of the entry of the data in file 63 from
"^DD",69,69.01,.03,21,2,0)
the parent file for that entry.
"^DD",69,69.01,.11,0)
OERR ORDER #^F^^0;11^K:$L(X)>15!($L(X)<1) X
"^DD",69,69.01,.11,3)
Answer must be 1-15 characters in length.
"^DD",69,69.01,.11,21,0)
^^2^2^2960409^
"^DD",69,69.01,.11,21,1,0)
This field is used to store the OE/RR order number that links Lab with
"^DD",69,69.01,.11,21,2,0)
OE/RR.
"^DD",69,69.01,.11,"DT")
2960409
"^DD",69,69.01,1,0)
ENTERING PERSON^RP200^VA(200,^0;2^Q
"^DD",69,69.01,1,21,0)
^^1^1^2841129^^
"^DD",69,69.01,1,21,1,0)
Points to NEW PERSON file.  Automatically stored.
"^DD",69,69.01,1,"DT")
2920331
"^DD",69,69.01,2,0)
SPECIMEN^69.02PA^^4;0
"^DD",69,69.01,2,21,0)
^.001^2^2^3161117^^^^
"^DD",69,69.01,2,21,1,0)
Points to the specimen(s) for the given order.  (Some areas of lab
"^DD",69,69.01,2,21,2,0)
treat a collection of samples as a SINGLE collection "sample").
"^DD",69,69.01,3,0)
COLLECTION SAMPLE^RP62^LAB(62,^0;3^Q
"^DD",69,69.01,3,21,0)
^^1^1^2841129^
"^DD",69,69.01,3,21,1,0)
Points to the collection sample appropriate for the test(s) ordered.
"^DD",69,69.01,4,0)
LAB,IMM OR WARD COLLECT^S^LC:LAB COLLECT;WC:WARD COLLECT;SP:SEND PATIENT;I:IMM. LAB COLLECT;P:POC;^0;4^Q
"^DD",69,69.01,4,21,0)
^^1^1^2840827^
"^DD",69,69.01,4,21,1,0)
This designates how the sample or specimen is to reach the lab.
"^DD",69,69.01,4,"DT")
3010601
"^DD",69,69.01,5,0)
DATE/TIME ORDERED^D^^0;5^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.01,5,1,0)
^.1
"^DD",69,69.01,5,1,1,0)
69^AZ
"^DD",69,69.01,5,1,1,1)
S ^LRO(69,"AZ",$E(X,1,30),DA(1),DA)=""
"^DD",69,69.01,5,1,1,2)
K ^LRO(69,"AZ",$E(X,1,30),DA(1),DA)
"^DD",69,69.01,5,1,1,"DT")
2950707
"^DD",69,69.01,5,3)
ENTER THE CURRENT DATE@TIME
"^DD",69,69.01,5,21,0)
^^1^1^2850830^^^
"^DD",69,69.01,5,21,1,0)
Self explanatory.
"^DD",69,69.01,5,"DT")
2950707
"^DD",69,69.01,5.5,0)
EST. DATE/TIME OF COLLECTION^D^^0;8^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.01,5.5,21,0)
^^1^1^2920113^
"^DD",69,69.01,5.5,21,1,0)
This is the estimated time of the collection.
"^DD",69,69.01,5.5,"DT")
2850816
"^DD",69,69.01,6,0)
TEST^69.03PA^^2;0
"^DD",69,69.01,6,21,0)
^^1^1^2950609^^^^
"^DD",69,69.01,6,21,1,0)
The tests for the specimen.
"^DD",69,69.01,7,0)
PROVIDER^R*P200'^VA(200,^0;6^S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))",D="AK.PROVIDER" D IX^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69,69.01,7,12)
Selection must be made from active PROVIDERS who hold the PROVIDER security key.
"^DD",69,69.01,7,12.1)
S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))"
"^DD",69,69.01,7,21,0)
^^1^1^2841129^
"^DD",69,69.01,7,21,1,0)
The person signing for the order.
"^DD",69,69.01,7,"DT")
2920904
"^DD",69,69.01,8,0)
REPORT ROUTING LOCATION^R*P44'XO^SC(^0;7^K:$L(X)<2!($L(X)>30) X I $D(X) X:X="?" ^DD(69.01,8,4) Q:X="?"  S L1=X,DIC(0)="EQMZ",DIC=44 D ^DIC S:$D(Y(0)) X=$P(Y(0),U,1) X:Y<1 ^DD(69.01,8,9.2) Q:'$D(X)  S:X']"" X="UNK" S:$D(LRDFN) ^LR(+LRDFN,.1)=X
"^DD",69,69.01,8,1,0)
^.1
"^DD",69,69.01,8,1,1,0)
69.01^AC
"^DD",69,69.01,8,1,1,1)
S ^LRO(69,DA(1),1,"AC",$E(X,1,30),DA)=""
"^DD",69,69.01,8,1,1,2)
K ^LRO(69,DA(1),1,"AC",$E(X,1,30),DA)
"^DD",69,69.01,8,1,1,3)
AC x-ref is set equal to 1 if the entry is on the collection list
"^DD",69,69.01,8,1,2,0)
69.01^AD^MUMPS
"^DD",69,69.01,8,1,2,1)
I $P(^LRO(69,DA(1),1,DA,0),U,4)="LC" S ^LRO(69,DA(1),1,"AD",$E(X,1,30),$P(^LRO(69,DA(1),1,DA,0),U,1),DA)=""
"^DD",69,69.01,8,1,2,2)
K ^LRO(69,DA(1),1,"AD",$E(X,1,30),$P(^LRO(69,DA(1),1,DA,0),U,1),DA)
"^DD",69,69.01,8,2)
S Y(0)=Y S Y(0)=Y
"^DD",69,69.01,8,2.1)
S Y(0)=Y
"^DD",69,69.01,8,3)

"^DD",69,69.01,8,4)
S X="?",DIC(0)="Q",DIC="^SC(",D="B" K DO D DQ^DICQ K DIC S DIC=DIE D DO^DIC1
"^DD",69,69.01,8,9.2)
K X R !?3,"NON-STANDARD LOCATION!, OK? N//",YN:300 I $T S:YN["Y" X=L1
"^DD",69,69.01,8,21,0)
^^2^2^2841129^
"^DD",69,69.01,8,21,1,0)
The service or location from which the order is originating, and
"^DD",69,69.01,8,21,2,0)
where the report will be returned.
"^DD",69,69.01,8,"DT")
2950209
"^DD",69,69.01,9.5,0)
ORDER #^F^^.1;1^K:X[""""!(X'?.ANP)!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<1) X
"^DD",69,69.01,9.5,1,0)
^.1
"^DD",69,69.01,9.5,1,1,0)
69^C^MUMPS
"^DD",69,69.01,9.5,1,1,1)
D C^LRXREF1
"^DD",69,69.01,9.5,1,1,2)
K ^LRO(69,"C",+X,DA(1),DA)
"^DD",69,69.01,9.5,3)
ANSWER MUST BE 1-8 CHARACTERS IN LENGTH
"^DD",69,69.01,9.5,21,0)
^^1^1^2841129^
"^DD",69,69.01,9.5,21,1,0)
The unique assigned order number for an ordering session for one "patient".
"^DD",69,69.01,10,0)
DATE/TIME OF COLLECTION^RDX^^1;1^S %DT(0)="-N",%DT="EPSTX" D ^%DT K %DT(0) S X=Y K:Y<1 X
"^DD",69,69.01,10,1,0)
^.1
"^DD",69,69.01,10,1,1,0)
69^AZZ^MUMPS
"^DD",69,69.01,10,1,1,1)
S ^LRO(69,"AZZ",X,DA(1),DA)=""
"^DD",69,69.01,10,1,1,2)
K ^LRO(69,"AZZ",X,DA(1),DA)
"^DD",69,69.01,10,1,1,3)
FOR 5.2 CONVERSION CLEANUP
"^DD",69,69.01,10,1,1,"DT")
2950717
"^DD",69,69.01,10,3)
DATE/TIME CAN'T BE IN THE FUTURE
"^DD",69,69.01,10,21,0)
^^1^1^2841129^
"^DD",69,69.01,10,21,1,0)
When the specimen was collected from the "patient".
"^DD",69,69.01,10,"DT")
2940318
"^DD",69,69.01,11,0)
DATE/TIME OBTAINED INEXACT^S^1:YES;0:NO;^1;2^Q
"^DD",69,69.01,11,21,0)
^^2^2^2841129^
"^DD",69,69.01,11,21,1,0)
If the time the specimen is obtained is not even approximate, this field
"^DD",69,69.01,11,21,2,0)
is set to yes.
"^DD",69,69.01,11,"DT")
2870714
"^DD",69,69.01,12,0)
COLLECTOR^RP200^VA(200,^1;3^Q
"^DD",69,69.01,12,21,0)
^^1^1^2841129^
"^DD",69,69.01,12,21,1,0)
The phlebotomist who is accessioning the collected order.
"^DD",69,69.01,12,"DT")
2920331
"^DD",69,69.01,13,0)
COLLECTION STATUS^S^C:COLLECTED;U:UNCOLLECTED;M:MERGE;^1;4^Q
"^DD",69,69.01,13,1,0)
^.1
"^DD",69,69.01,13,1,1,0)
69^AA^MUMPS
"^DD",69,69.01,13,1,1,1)
S:'$P(^LRO(69,DA(1),1,DA,0),U,10) ^LRO(69,"AA",+$G(^LRO(69,DA(1),1,DA,.1)),DA(1)_"|"_DA)=""
"^DD",69,69.01,13,1,1,2)
K ^LRO(69,"AA",+$G(^LRO(69,DA(1),1,DA,.1)),DA(1)_"|"_DA)
"^DD",69,69.01,13,1,1,"%D",0)
^.101^2^2^3160712^^^
"^DD",69,69.01,13,1,1,"%D",1,0)
 This cross reference is used to tally WKLD work load. It is deleted
"^DD",69,69.01,13,1,1,"%D",2,0)
after the tally has been made.
"^DD",69,69.01,13,1,1,"DT")
3160712
"^DD",69,69.01,13,21,0)
^^1^1^2841129^
"^DD",69,69.01,13,21,1,0)
This indicates whether the order is collected or uncollected.
"^DD",69,69.01,13,"DT")
3160712
"^DD",69,69.01,14,0)
*VOLUME^F^^1;5^K:$L(X)>10!($L(X)<1) X
"^DD",69,69.01,14,3)
ANSWER MUST BE 1-10 CHARACTERS IN LENGTH
"^DD",69,69.01,14,21,0)
^^1^1^2870708^^
"^DD",69,69.01,14,21,1,0)
No longer used.
"^DD",69,69.01,15,0)
COMMENT^F^^1;6^K:$L(X)>80!($L(X)<2) X
"^DD",69,69.01,15,3)
ANSWER MUST BE 2-80 CHARACTERS IN LENGTH
"^DD",69,69.01,15,21,0)
^^1^1^2841129^
"^DD",69,69.01,15,21,1,0)
Single line comment about the order.
"^DD",69,69.01,16,0)
WARD COMMENTS ON SPECIMEN^69.04^^6;0
"^DD",69,69.01,16,21,0)
^^1^1^2841129^
"^DD",69,69.01,16,21,1,0)
Comments about the order.
"^DD",69,69.01,20,0)
LAB ARRIVAL TIME^D^^3;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.01,20,1,0)
^.1^^0
"^DD",69,69.01,20,21,0)
^^1^1^2850830^^
"^DD",69,69.01,20,21,1,0)
Self explanatory.
"^DD",69,69.01,20,"DT")
3000829
"^DD",69,69.01,21,0)
DATE/TIME RESULTS AVAILABLE^D^^3;2^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",69,69.01,21,1,0)
^.1
"^DD",69,69.01,21,1,1,0)
69.01^AR^MUMPS
"^DD",69,69.01,21,1,1,1)
D AR2^LRXREF
"^DD",69,69.01,21,1,1,2)
D AR3^LRXREF
"^DD",69,69.01,21,1,1,"%D",0)
^.101^2^2^3080626^^
"^DD",69,69.01,21,1,1,"%D",1,0)
Sets "AR" cross reference used to identify new lab results by date results available/location/patient
"^DD",69,69.01,21,1,1,"%D",2,0)
^LRO(69,'DATE RESULTS AVAILABLE',1,"AR",'LOCATION','PT. NAME',LRDFN)
"^DD",69,69.01,21,1,1,"DT")
3080623
"^DD",69,69.01,21,1,2,0)
69.01^AP^MUMPS
"^DD",69,69.01,21,1,2,1)
D AP1^LRXREF
"^DD",69,69.01,21,1,2,2)
D AP2^LRXREF
"^DD",69,69.01,21,1,2,"%D",0)
^^2^2^3080626^
"^DD",69,69.01,21,1,2,"%D",1,0)
Sets "AP" cross-reference used to identify new lab results by date results available/provider/patient
"^DD",69,69.01,21,1,2,"%D",2,0)
^LRO(69,'DRAW DATE',1,"AP",'DOC NAME',PNM,LRDFN) = ""
"^DD",69,69.01,21,1,2,"DT")
3080626
"^DD",69,69.01,21,1,3,0)
69.01^AL^MUMPS
"^DD",69,69.01,21,1,3,1)
D AL1^LRXREF
"^DD",69,69.01,21,1,3,2)
D AL2^LRXREF
"^DD",69,69.01,21,1,3,"%D",0)
^^2^2^3080626^
"^DD",69,69.01,21,1,3,"%D",1,0)
Sets "AL" cross-reference used to identify new lab results by date specimen collected/location/patient.
"^DD",69,69.01,21,1,3,"%D",2,0)
^LRO(69,'DRAW DATE',1,"AL",'LOCATION',PNM,LRDFN) = ""
"^DD",69,69.01,21,1,3,"DT")
3080626
"^DD",69,69.01,21,1,4,0)
69^AN^MUMPS
"^DD",69,69.01,21,1,4,1)
D AN1^LRXREF
"^DD",69,69.01,21,1,4,2)
D AN2^LRXREF
"^DD",69,69.01,21,1,4,"%D",0)
^.101^3^3^3080818^^^
"^DD",69,69.01,21,1,4,"%D",1,0)
Sets "AN" cross-reference used to identify new lab results by
"^DD",69,69.01,21,1,4,"%D",2,0)
location, patient and date.
"^DD",69,69.01,21,1,4,"%D",3,0)
LRO(69,"AN",'LOCATION',LRDFN,LRIDT) = ""
"^DD",69,69.01,21,1,5,0)
69.01^AN2^MUMPS
"^DD",69,69.01,21,1,5,1)
S ^LRO(69,DA(1),1,"AN",$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,20),$P(^(0),U,1),9999999-$P(^LRO(69,DA(1),1,DA,1),U,1))=""
"^DD",69,69.01,21,1,5,2)
K ^LRO(69,DA(1),1,"AN",$E($P(^LRO(69,DA(1),1,DA,0),U,7),1,20),$P(^(0),U,1),9999999-$P(^LRO(69,DA(1),1,DA,1),U,1))
"^DD",69,69.01,21,1,5,"%D",0)
^.101^3^3^3110906^^
"^DD",69,69.01,21,1,5,"%D",1,0)
Sets "AN" cross reference within an order date
"^DD",69,69.01,21,1,5,"%D",2,0)
for location, patient and specimen date/time.
"^DD",69,69.01,21,1,5,"%D",3,0)
LRO(69,DT,1,"AN",'LOCATION',LRDFN,LRIDT) = ""
"^DD",69,69.01,21,1,5,"DT")
3110906
"^DD",69,69.01,21,3)
Enter the date/time the tests results were made available/released.
"^DD",69,69.01,21,21,0)
^^2^2^3080818^^
"^DD",69,69.01,21,21,1,0)
This is the date/time ALL results for this specimen are complete.
"^DD",69,69.01,21,21,2,0)
The field is set by the software when the results are released and reported outside the laboratory system.
"^DD",69,69.01,21,"DT")
3110906
"^DD",69,69.01,22,0)
MERGE ORDER #^F^^1;7^K:$L(X)>15!($L(X)<1) X
"^DD",69,69.01,22,3)
Answer must be 1-15 characters in length.
"^DD",69,69.01,22,21,0)
^^2^2^2930720^^
"^DD",69,69.01,22,21,1,0)
 If this order was merged with another order, the order number for that
"^DD",69,69.01,22,21,2,0)
order is entered here. Automatically stuffed by the system.
"^DD",69,69.01,22,"DT")
2890329
"^DD",69,69.01,23,0)
ORDERING LOCATION^P44'^SC(^0;9^Q
"^DD",69,69.01,23,3)
This is the location that is ordering the test.
"^DD",69,69.01,23,21,0)
^^2^2^2930327^
"^DD",69,69.01,23,21,1,0)
 This field contains the location ordering the test and to whom completed
"^DD",69,69.01,23,21,2,0)
results will be sent.
"^DD",69,69.01,23,"DT")
2891212
"^DD",69,69.01,24,0)
COUNTED FOR WORKLOAD^S^1:YES;^0;10^Q
"^DD",69,69.01,24,21,0)
^.001^2^2^3160712^^^
"^DD",69,69.01,24,21,1,0)
 If this accession has been tallied to wkld totals, a yes will be stuffed
"^DD",69,69.01,24,21,2,0)
into this field by the software which runs in the background.
"^DD",69,69.01,24,"DT")
2910321
"^DD",69,69.01,25,0)
INSTITUTION^P4'^DIC(4,^1;8^Q
"^DD",69,69.01,25,21,0)
^^3^3^2930327^^
"^DD",69,69.01,25,21,1,0)
 This field contains the institution entering the request for this particular
"^DD",69,69.01,25,21,2,0)
test. This field becomes very important when dealing with multi-divisional
"^DD",69,69.01,25,21,3,0)
sites.
"^DD",69,69.01,25,"DT")
2910410
"^DD",69,69.01,30,0)
PCE ENC #^F^^PCE;1^K:$L(X)>30!($L(X)<1) X
"^DD",69,69.01,30,3)
Answer must be 1-30 characters in length.
"^DD",69,69.01,30,21,0)
^^9^9^2981112^
"^DD",69,69.01,30,21,1,0)
 This field contains a list of PCE Encounters generated for this specimen.
"^DD",69,69.01,30,21,2,0)
If ther are multiple laboratory accession areas required for this order,
"^DD",69,69.01,30,21,3,0)
encounter numbers will be stored separated by semi-colons.
"^DD",69,69.01,30,21,4,0)
 
"^DD",69,69.01,30,21,5,0)
This field is also used to control the building of the ^LRO(69,"AE")
"^DD",69,69.01,30,21,6,0)
should LAB ORDER ENTRY (#69) file were to be re-indexed. If the field is
"^DD",69,69.01,30,21,7,0)
defined then the Cancel By field DD(69.03,10,0) will not recreate the
"^DD",69,69.01,30,21,8,0)
X-Reference. The ^LRO(69,"AE") cross reference is used to pass deleted
"^DD",69,69.01,30,21,9,0)
test information to PCE so that the billing record can be updated.
"^DD",69,69.01,30,"DT")
2970318
"^DD",69,69.01,21661.71,0)
SUBSCRIPT^FJ5^^11;1^K:$L(X)>5!($L(X)<2) X
"^DD",69,69.01,21661.71,3)
Enter accession abbrevation 2-5 characters
"^DD",69,69.01,21661.71,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.01,21661.71,21,1,0)
 This is the accession subscsript of the ordered test.
"^DD",69,69.01,21661.71,"DT")
3161117
"^DD",69,69.01,21661.72,0)
CPRS AP SCREEN^P69.71'^LAB(69.71,^11;2^Q
"^DD",69,69.01,21661.72,3)
Select an entry that matches the AP dialog.
"^DD",69,69.01,21661.72,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.01,21661.72,21,1,0)
This is the CPRS AP Screen used to build the dialog for the order.
"^DD",69,69.01,21661.72,"DT")
3151207
"^DD",69,69.01,21661.73,0)
SURGEON/PHYSICIAN^P200'^VA(200,^11;3^Q
"^DD",69,69.01,21661.73,3)
If surgery case select surgeon if not leave blank
"^DD",69,69.01,21661.73,21,0)
^.001^1^1^3161117^^
"^DD",69,69.01,21661.73,21,1,0)
Enter surgeon if this is a surgery case.
"^DD",69,69.01,21661.73,"DT")
3161117
"^DD",69,69.01,21661.74,0)
SURGERY CASE #^FJ10^^11;4^K:$L(X)>10!($L(X)<1) X
"^DD",69,69.01,21661.74,3)
If surgery enter case number 1-10 characaters
"^DD",69,69.01,21661.74,21,0)
^^2^2^3161117^
"^DD",69,69.01,21661.74,21,1,0)
This field contains the Surgery Package Case number entered during CPRS AP specimen order.
"^DD",69,69.01,21661.74,21,2,0)
This field may be enpty if not a surgery case.
"^DD",69,69.01,21661.74,"DT")
3161117
"^DD",69,69.01,21661.811,0)
SPECIMEN SUBMITTED BY^FJ50^^12;1^K:$L(X)>50!($L(X)<2) X
"^DD",69,69.01,21661.811,3)
Enter person submitting the specimen 2-50 characters
"^DD",69,69.01,21661.811,21,0)
^.001^2^2^3161117^^^^
"^DD",69,69.01,21661.811,21,1,0)
This the person that collected the specimen(s). May not be the ordering 
"^DD",69,69.01,21661.811,21,2,0)
physiciam identified.
"^DD",69,69.01,21661.811,"DT")
3161117
"^DD",69,69.01,21661.813,0)
BRIEF CLINICAL HISTORY^69.2166113^^13;0
"^DD",69,69.01,21661.813,21,0)
^.001^1^1^3161117^^
"^DD",69,69.01,21661.813,21,1,0)
This field contain patient's brief clinical history.
"^DD",69,69.01,21661.814,0)
PREOPERATIVE DIAGNOSIS^69.2166114^^14;0
"^DD",69,69.01,21661.814,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.01,21661.814,21,1,0)
This field contains pre-operative diagnosis.
"^DD",69,69.01,21661.815,0)
OPERATIVE FINDINGS^69.2166115^^15;0
"^DD",69,69.01,21661.815,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.01,21661.815,21,1,0)
This field contains the operative diagnosis.
"^DD",69,69.01,21661.815,"DT")
3160628
"^DD",69,69.01,21661.816,0)
POSTOPERATIVE DIAGNOSIS^69.2166116^^16;0
"^DD",69,69.01,21661.816,21,0)
^.001^1^1^3161117^^^
"^DD",69,69.01,21661.816,21,1,0)
This field contains post operative diagnosis.
"^DD",69,69.02,0)
SPECIMEN SUB-FIELD^NL^21661^6
"^DD",69,69.02,0,"DT")
3151028
"^DD",69,69.02,0,"IX","AC",69.02,.02)

"^DD",69,69.02,0,"NM","SPECIMEN")

"^DD",69,69.02,0,"UP")
69.01
"^DD",69,69.02,.01,0)
SPECIMEN^MP61'^LAB(61,^0;1^Q
"^DD",69,69.02,.01,1,0)
^.1^^0
"^DD",69,69.02,.01,21,0)
^.001^1^1^3150819^^
"^DD",69,69.02,.01,21,1,0)
Points to the specimen for the given order.
"^DD",69,69.02,.01,"DT")
3150819
"^DD",69,69.02,.02,0)
INSTANCE^NJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",69,69.02,.02,1,0)
^.1
"^DD",69,69.02,.02,1,1,0)
69.02^AC
"^DD",69,69.02,.02,1,1,1)
S ^LRO(69,DA(2),1,DA(1),4,"AC",$E(X,1,30),DA)=""
"^DD",69,69.02,.02,1,1,2)
K ^LRO(69,DA(2),1,DA(1),4,"AC",$E(X,1,30),DA)
"^DD",69,69.02,.02,1,1,"%D",0)
^^1^1^3151023^
"^DD",69,69.02,.02,1,1,"%D",1,0)
This the cross reference of the instance number of the specimen multiple.
"^DD",69,69.02,.02,1,1,"DT")
3151023
"^DD",69,69.02,.02,3)
Type a number between 1 and 99, 0 decimal digits.
"^DD",69,69.02,.02,21,0)
^^1^1^3151023^
"^DD",69,69.02,.02,21,1,0)
This the instance of the muliple specimen.
"^DD",69,69.02,.02,"DT")
3151023
"^DD",69,69.02,1,0)
SPECIMEN DESCRIPTION^F^^0;3^K:$L(X)>75!($L(X)<2) X
"^DD",69,69.02,1,3)
Answer must be 2-75 characters in length.
"^DD",69,69.02,1,21,0)
^^2^2^3151024^
"^DD",69,69.02,1,21,1,0)
This is the description of the specimen submitted.
"^DD",69,69.02,1,21,2,0)
i.e Right upper arm
"^DD",69,69.02,1,"DT")
3151024
"^DD",69,69.02,2,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;4^Q
"^DD",69,69.02,2,21,0)
^^1^1^3151027^
"^DD",69,69.02,2,21,1,0)
 Collection Sample for the order.
"^DD",69,69.02,2,"DT")
3151027
"^DD",69,69.02,21661,0)
AP SPECIMEN^69.221661A^^1;0
"^DD",69,69.02,21661,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.02,21661,21,1,0)
This mulitple contains AP Specimen/Collection Sample information.
"^DD",69,69.02,21661,"DT")
3160907
"^DD",69,69.02,21661.1,0)
DIALOG^69.2216612A^^DIA;0
"^DD",69,69.02,21661.1,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.02,21661.1,21,1,0)
This multiple contains the CPRS AP Dialog data.
"^DD",69,69.03,0)
TEST SUB-FIELD^NL^99.1^24
"^DD",69,69.03,0,"DT")
3151223
"^DD",69,69.03,0,"IX","AB",69.03,.01)
 
"^DD",69,69.03,0,"IX","AT",69.03,.01)

"^DD",69,69.03,0,"IX","B",69.03,.01)

"^DD",69,69.03,0,"NM","TEST")

"^DD",69,69.03,0,"UP")
69.01
"^DD",69,69.03,.01,0)
TEST/PROCEDURE^*P60'^LAB(60,^0;1^S DIC("S")="I ""N""'[$P(^(0),U,3)!$D(^XUSEC(""LRSUPER"",DUZ))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69,69.03,.01,1,0)
^.1^^-1
"^DD",69,69.03,.01,1,1,0)
69.03^B
"^DD",69,69.03,.01,1,1,1)
S ^LRO(69,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",69,69.03,.01,1,1,2)
K ^LRO(69,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",69,69.03,.01,1,2,0)
69.03^AT^MUMPS
"^DD",69,69.03,.01,1,2,1)
D AT^LRXREF1 ;  S ^LRO(69,"AT",LRDFN,LRTEST,LRSPEC,LRODT)="This is used for maximum test order frequency.",^(-LRODT)=""
"^DD",69,69.03,.01,1,2,2)
D ATD^LRXREF1 ;  K ^LRO(69,"AT",LRDFN,LRTEST,LRSPEC,LRODT),^(-LRODT)
"^DD",69,69.03,.01,3)

"^DD",69,69.03,.01,12)
CHOOSE ORDERABLE TESTS ONLY
"^DD",69,69.03,.01,12.1)
S DIC("S")="I ""N""'[$P(^(0),U,3)!$D(^XUSEC(""LRSUPER"",DUZ))"
"^DD",69,69.03,.01,12.2)
I "N"'[$P(^(0),U,3)!$D(^XUSEC("LRSUPER",DUZ))
"^DD",69,69.03,.01,21,0)
^^1^1^2950609^^^
"^DD",69,69.03,.01,21,1,0)
The tests for the specimen.
"^DD",69,69.03,.01,"DT")
3021108
"^DD",69,69.03,1,0)
URGENCY^P62.05'^LAB(62.05,^0;2^Q
"^DD",69,69.03,1,3)

"^DD",69,69.03,1,21,0)
^^1^1^2841129^
"^DD",69,69.03,1,21,1,0)
Routine, Stat, etc.
"^DD",69,69.03,1,"DT")
2830824
"^DD",69,69.03,2,0)
ACCESSION DATE^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.03,2,21,0)
^^1^1^2841129^
"^DD",69,69.03,2,21,1,0)
The date piece of the accession.
"^DD",69,69.03,3,0)
ACCESSION AREA^*P68'^LRO(68,^0;4^S DIC("S")="I '$L($P(^(0),U,17))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69,69.03,3,12)
Can not select an Work Area Accession area.
"^DD",69,69.03,3,12.1)
S DIC("S")="I '$L($P(^(0),U,17))"
"^DD",69,69.03,3,21,0)
^^1^1^2850830^^
"^DD",69,69.03,3,21,1,0)
The accession area where the test may be found.
"^DD",69,69.03,3,"DT")
2920106
"^DD",69,69.03,4,0)
ACCESSION NUMBER^NJ5,0^^0;5^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",69,69.03,4,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 99999
"^DD",69,69.03,4,21,0)
^^1^1^2841129^
"^DD",69,69.03,4,21,1,0)
The number piece of the accession where the test may be found.
"^DD",69,69.03,5,0)
COMBINED ON ORDER^NJ7,0^^0;6^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",69,69.03,5,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 9999999
"^DD",69,69.03,5,21,0)
^^3^3^2841129^^
"^DD",69,69.03,5,21,1,0)
If the test has been combined with another order (i.e., this test is
"^DD",69,69.03,5,21,2,0)
a duplication of part of another order), this points to the order with
"^DD",69,69.03,5,21,3,0)
which the test has been combined.
"^DD",69,69.03,5,"DT")
2840829
"^DD",69,69.03,6,0)
OERR INTERNAL FILE #^P100'^OR(100,^0;7^Q
"^DD",69,69.03,6,1,0)
^.1
"^DD",69,69.03,6,1,1,0)
69^AVFDOR
"^DD",69,69.03,6,1,1,1)
S ^LRO(69,"AVFDOR",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",69,69.03,6,1,1,2)
K ^LRO(69,"AVFDOR",$E(X,1,30),DA(2),DA(1),DA)
"^DD",69,69.03,6,1,1,"%D",0)
^^1^1^3130326^
"^DD",69,69.03,6,1,1,"%D",1,0)
This cross reference is used to indicate the CPRS ^OR(100,IEN number for this test.
"^DD",69,69.03,6,1,1,"DT")
3130326
"^DD",69,69.03,6,3)
Answer must be 1-20 characters in length and is automatically entered.
"^DD",69,69.03,6,21,0)
^^2^2^2930720^^^
"^DD",69,69.03,6,21,1,0)
This provides the link to the correlate entry of the test ordered as
"^DD",69,69.03,6,21,2,0)
it appears in OERR.
"^DD",69,69.03,6,"DT")
3130326
"^DD",69,69.03,7,0)
PANEL EXPLODED^S^1:YES;^0;8^Q
"^DD",69,69.03,7,3)
Enter a '1' if the panel has no accession area assigned and has been exploded and accessioned.
"^DD",69,69.03,7,21,0)
^^2^2^2910228^^
"^DD",69,69.03,7,21,1,0)
Used to determine if panel with no accession area assigned has previously
"^DD",69,69.03,7,21,2,0)
been exploded and accessioned.
"^DD",69,69.03,7,"DT")
2910228
"^DD",69,69.03,8,0)
STATUS^S^CA:Canceled;IP:Accepted;^0;9^Q
"^DD",69,69.03,8,3)
Enter the status code for this ordered test.
"^DD",69,69.03,8,21,0)
^^3^3^2970714^^^^
"^DD",69,69.03,8,21,1,0)
This is the internal status for this test.
"^DD",69,69.03,8,21,2,0)
It is used to identify an order when it is canceled, and/or when
"^DD",69,69.03,8,21,3,0)
it is accepted by OE/RR.
"^DD",69,69.03,8,"DT")
2960409
"^DD",69,69.03,9,0)
ORIGIN^S^W:Ward;L:Lab;P:Phone;V:Verbal;S:Standard Lab Protocol;^0;10^Q
"^DD",69,69.03,9,3)
Enter the origin of this ordered test.
"^DD",69,69.03,9,21,0)
^^2^2^2970714^^^
"^DD",69,69.03,9,21,1,0)
This is how the test was ordered/entered into the system using the Lab (LR)
"^DD",69,69.03,9,21,2,0)
options.
"^DD",69,69.03,9,"DT")
2960409
"^DD",69,69.03,10,0)
CANCELED BY^P200'^VA(200,^0;11^Q
"^DD",69,69.03,10,1,0)
^.1
"^DD",69,69.03,10,1,1,0)
69^AE^MUMPS
"^DD",69,69.03,10,1,1,1)
S:'$D(^LRO(69,DA(2),1,DA(1),"PCE")) ^LRO(69,"AE",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",69,69.03,10,1,1,2)
K ^LRO(69,"AE",$E(X,1,30),DA(2),DA(1),DA)
"^DD",69,69.03,10,1,1,3)
This cross reference is used to update PCE of canceled test
"^DD",69,69.03,10,1,1,"%D",0)
^.101^6^6^3100423^^
"^DD",69,69.03,10,1,1,"%D",1,0)
 This cross reference is set when a test is canceled. The Lab PCE API uses
"^DD",69,69.03,10,1,1,"%D",2,0)
these entries to notify PCE that this test was not performed. After
"^DD",69,69.03,10,1,1,"%D",3,0)
notification of PCE the X-ref is removed.
"^DD",69,69.03,10,1,1,"%D",4,0)
 
"^DD",69,69.03,10,1,1,"%D",5,0)
This X-ref should not be set if no initial notification to PCE that this
"^DD",69,69.03,10,1,1,"%D",6,0)
test was done.
"^DD",69,69.03,10,1,1,"DT")
3100423
"^DD",69,69.03,10,3)
Enter the person who canceled the order.
"^DD",69,69.03,10,21,0)
^^1^1^2960409^
"^DD",69,69.03,10,21,1,0)
This is the person who canceled this test.
"^DD",69,69.03,10,"DT")
3100423
"^DD",69,69.03,11,0)
PCE COUNTED^S^0:NOT COUNTED;1:COUNTED;^0;12^Q
"^DD",69,69.03,11,21,0)
^^2^2^2960614^
"^DD",69,69.03,11,21,1,0)
This field is used to indicate that the test has been counted for
"^DD",69,69.03,11,21,2,0)
a patient encounter (PCE).
"^DD",69,69.03,11,"DT")
2960614
"^DD",69,69.03,12,0)
PCE VISIT #^NJ13,0^^0;13^K:+X'=X!(X>9999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",69,69.03,12,3)
Type a Number between 0 and 9999999999999, 0 Decimal Digits
"^DD",69,69.03,12,21,0)
^^7^7^2961019^
"^DD",69,69.03,12,21,1,0)
 This field contains the NPCDB generated visit number. If this has the PCE
"^DD",69,69.03,12,21,2,0)
counted field set to 1, this field will contain the visit number if the
"^DD",69,69.03,12,21,3,0)
call to the API was successful.
"^DD",69,69.03,12,21,4,0)
 
"^DD",69,69.03,12,21,5,0)
This field became effective as of 11/1/96. Data submitted the NPCDB prior
"^DD",69,69.03,12,21,6,0)
to the installation of LR*5.2*138 will not contain visit number
"^DD",69,69.03,12,21,7,0)
information.
"^DD",69,69.03,12,"DT")
2961019
"^DD",69,69.03,13,0)
UID^F^^.3;1^K:$L(X)>15!($L(X)<10) X
"^DD",69,69.03,13,3)
Answer must be 10-15 characters in length.
"^DD",69,69.03,13,21,0)
^^3^3^2970712^
"^DD",69,69.03,13,21,1,0)
 This is the UID used by the HOST LEDI system for this order/accession.
"^DD",69,69.03,13,21,2,0)
 
"^DD",69,69.03,13,21,3,0)
This field is used by LEDI software.
"^DD",69,69.03,13,"DT")
2970127
"^DD",69,69.03,14,0)
ORDERING SITE^*P4'^DIC(4,^.3;2^S DIC("S")="I $G(^(Y,99))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",69,69.03,14,1,0)
^.1
"^DD",69,69.03,14,1,1,0)
69^AC
"^DD",69,69.03,14,1,1,1)
S ^LRO(69,"AC",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",69,69.03,14,1,1,2)
K ^LRO(69,"AC",$E(X,1,30),DA(2),DA(1),DA)
"^DD",69,69.03,14,1,1,"DT")
2961221
"^DD",69,69.03,14,12)
Must have a site number defined
"^DD",69,69.03,14,12.1)
S DIC("S")="I $G(^(Y,99))"
"^DD",69,69.03,14,21,0)
^^7^7^2970712^
"^DD",69,69.03,14,21,1,0)
 This field contains the pointer to the INSTITUTION file for the
"^DD",69,69.03,14,21,2,0)
MailMan domain location of the computer system. All LEDI results are
"^DD",69,69.03,14,21,3,0)
returned to the Ordering computer system.
"^DD",69,69.03,14,21,4,0)
 
"^DD",69,69.03,14,21,5,0)
Location to send LEDI HL7 result messages.
"^DD",69,69.03,14,21,6,0)
 
"^DD",69,69.03,14,21,7,0)
This field is used by LEDI software.
"^DD",69,69.03,14,"DT")
2961221
"^DD",69,69.03,15,0)
COLLECTING SITE^P4'^DIC(4,^.3;3^Q
"^DD",69,69.03,15,3)

"^DD",69,69.03,15,21,0)
^^5^5^2970712^
"^DD",69,69.03,15,21,1,0)
 This field contain the pointer to the INSTITUTION file for the actual
"^DD",69,69.03,15,21,2,0)
collection site. The ordering site is the MailMan location of the computer
"^DD",69,69.03,15,21,3,0)
system. MailMan domain location and the collecting site may be different.
"^DD",69,69.03,15,21,4,0)
 
"^DD",69,69.03,15,21,5,0)
This field is used by LEDI software.
"^DD",69,69.03,15,"DT")
2970226
"^DD",69,69.03,16,0)
HOST UID^F^^.3;4^K:$L(X)>15!($L(X)<10) X
"^DD",69,69.03,16,1,0)
^.1
"^DD",69,69.03,16,1,1,0)
69^AD
"^DD",69,69.03,16,1,1,1)
S ^LRO(69,"AD",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",69,69.03,16,1,1,2)
K ^LRO(69,"AD",$E(X,1,30),DA(2),DA(1),DA)
"^DD",69,69.03,16,1,1,"DT")
2961221
"^DD",69,69.03,16,3)
Answer must be 10-15 characters in length.
"^DD",69,69.03,16,21,0)
^^7^7^2970712^
"^DD",69,69.03,16,21,1,0)
 Each Order/Accession is given a HOST UID. The UID is stored in this
"^DD",69,69.03,16,21,2,0)
location. If LEDI software is used to accession specimens, usually the
"^DD",69,69.03,16,21,3,0)
collecting sites UID is used to track specimens. If the collecting UID
"^DD",69,69.03,16,21,4,0)
conflict is the HOST system number sequence, the HOST UID will be used
"^DD",69,69.03,16,21,5,0)
instead of the collecting site's UID.
"^DD",69,69.03,16,21,6,0)
 
"^DD",69,69.03,16,21,7,0)
This field is used by LEDI software.
"^DD",69,69.03,16,"DT")
2970127
"^DD",69,69.03,17,0)
ORDERING SITE UID^F^^.3;5^K:$L(X)>15!($L(X)<10) X
"^DD",69,69.03,17,3)
Answer must be 10-15 characters in length.
"^DD",69,69.03,17,21,0)
^^3^3^2970712^^
"^DD",69,69.03,17,21,1,0)
 This field contains the collecting sites UID for this specimen.
"^DD",69,69.03,17,21,2,0)
 
"^DD",69,69.03,17,21,3,0)
This field is used by LEDI software.
"^DD",69,69.03,17,"DT")
2970226
"^DD",69,69.03,20,0)
COMBINED FROM^F^^0;14^K:$L(X)>30!($L(X)<3) X
"^DD",69,69.03,20,3)
Answer must be 3-30 characters in length.
"^DD",69,69.03,20,21,0)
^^1^1^2970326^
"^DD",69,69.03,20,21,1,0)
This is a reference to the entry that this test was combined from.
"^DD",69,69.03,20,"DT")
2970326
"^DD",69,69.03,21,0)
ICD-9 CODES^69.05P^^2;0
"^DD",69,69.03,21,21,0)
^^1^1^3030924^
"^DD",69,69.03,21,21,1,0)
ICD-9 ordering diagnosis code.
"^DD",69,69.03,21,"DT")
3030917
"^DD",69,69.03,22,0)
DATE OF SERVICE^D^^3;1^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",69,69.03,22,21,0)
^.001^2^2^3051114^^
"^DD",69,69.03,22,21,1,0)
This is the Date of Service to be sent to the billing application for
"^DD",69,69.03,22,21,2,0)
billing.
"^DD",69,69.03,22,"DT")
3051210
"^DD",69,69.03,22.1,0)
PANEL PENDING^S^0:NO;1:YES;^3;2^Q
"^DD",69,69.03,22.1,1,0)
^.1^^0
"^DD",69,69.03,22.1,21,0)
^^4^4^3051114^
"^DD",69,69.03,22.1,21,1,0)
This field will be set to "YES" in the case where an AMA/Billable
"^DD",69,69.03,22.1,21,2,0)
Panel still has one or more atomic tests "pending" verified
"^DD",69,69.03,22.1,21,3,0)
results.
"^DD",69,69.03,22.1,21,4,0)
  
"^DD",69,69.03,22.1,"DT")
3051210
"^DD",69,69.03,99,0)
TEST COMMENTS^69.399^^1;0
"^DD",69,69.03,99.1,0)
CANCEL REASON^69.3991^^1.1;0
"^DD",69,69.04,0)
WARD COMMENTS ON SPECIMEN SUB-FIELD^NL^.01^1
"^DD",69,69.04,0,"NM","WARD COMMENTS ON SPECIMEN")

"^DD",69,69.04,0,"UP")
69.01
"^DD",69,69.04,.01,0)
WARD COMMENTS ON SPECIMEN^W^^0;1^Q
"^DD",69,69.04,.01,21,0)
^^1^1^2841129^
"^DD",69,69.04,.01,21,1,0)
Comments about the order.
"^DD",69,69.04,.01,"DT")
2841001
"^DD",69,69.05,0)
ICD-9 CODES SUB-FIELD^^8^10
"^DD",69,69.05,0,"DT")
3040322
"^DD",69,69.05,0,"IX","B",69.05,.01)

"^DD",69,69.05,0,"NM","ICD-9 CODES")

"^DD",69,69.05,0,"UP")
69.03
"^DD",69,69.05,.01,0)
ICD-9 CODES^P80'^ICD9(^0;1^Q
"^DD",69,69.05,.01,1,0)
^.1
"^DD",69,69.05,.01,1,1,0)
69.05^B
"^DD",69,69.05,.01,1,1,1)
S ^LRO(69,DA(3),1,DA(2),2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",69,69.05,.01,1,1,2)
K ^LRO(69,DA(3),1,DA(2),2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",69,69.05,.01,21,0)
^^5^5^3040210^
"^DD",69,69.05,.01,21,1,0)
ICD-9 ordering diagnosis code.  For CPRS laboratory orders, the ordering
"^DD",69,69.05,.01,21,2,0)
provider enters this diagnosis via CPRS.  For internal laboratory orders,
"^DD",69,69.05,.01,21,3,0)
the provider must indicate the diagnosis code on paper for entry by the
"^DD",69,69.05,.01,21,4,0)
laboratory staff.  When the lab test is resulted, the ordering diagnosis
"^DD",69,69.05,.01,21,5,0)
code will be sent to PCE/PTF for billing purposes.
"^DD",69,69.05,.01,"DT")
3040210
"^DD",69,69.05,1,0)
SERVICE CONNECTION INDICATOR^S^0:NO;1:YES;^0;2^Q
"^DD",69,69.05,1,21,0)
^.001^5^5^3030924^^^
"^DD",69,69.05,1,21,1,0)
Indicates if the care provided is for a service connected or non-service
"^DD",69,69.05,1,21,2,0)
connected condition.  The ordering provider is responsible for providing
"^DD",69,69.05,1,21,3,0)
Service Connection indicator to the laboratory via CPRS entry or, for internal
"^DD",69,69.05,1,21,4,0)
laboratory orders, on paper.  The Service Connection indicator
"^DD",69,69.05,1,21,5,0)
is sent to PCE/PTF at verification.
"^DD",69,69.05,1,"DT")
3030917
"^DD",69,69.05,2,0)
COMBAT VETERAN^S^0:NO;1:YES;^0;3^Q
"^DD",69,69.05,2,21,0)
^^5^5^3040123^
"^DD",69,69.05,2,21,1,0)
Indicates if the care provided is to treat a condition related to Combat 
"^DD",69,69.05,2,21,2,0)
Veteran exposure.  The ordering provider is responsible for providing the 
"^DD",69,69.05,2,21,3,0)
Combat Veteran indicator to the laboratory via CPRS entry or, for internal
"^DD",69,69.05,2,21,4,0)
laboratory orders, on paper.  The Combat Veteran indicator is sent to PCE
"^DD",69,69.05,2,21,5,0)
at verification.
"^DD",69,69.05,2,"DT")
3040123
"^DD",69,69.05,3,0)
AGENT ORANGE^S^0:NO;1:YES;^0;4^Q
"^DD",69,69.05,3,21,0)
^.001^5^5^3060131^^
"^DD",69,69.05,3,21,1,0)
Indicates if the care provided is to treat a condition related to Agent 
"^DD",69,69.05,3,21,2,0)
Orange exposure.  The ordering provider is responsible for providing the 
"^DD",69,69.05,3,21,3,0)
Agent Orange indicator to the laboratory via CPRS entry or, for internal 
"^DD",69,69.05,3,21,4,0)
laboratory orders, on paper.  The Agent Orange indicator is sent to PCE 
"^DD",69,69.05,3,21,5,0)
at verification.
"^DD",69,69.05,3,"DT")
3040123
"^DD",69,69.05,4,0)
IONIZING RADIATION^S^0:NO;1:YES;^0;5^Q
"^DD",69,69.05,4,21,0)
^.001^5^5^3060607^^
"^DD",69,69.05,4,21,1,0)
Indicates if the care provided is to treat a condition related to Ionizing
"^DD",69,69.05,4,21,2,0)
Radiation exposure.  The ordering provider is responsible for ible for 
"^DD",69,69.05,4,21,3,0)
providing the Ionizing Radiation indicator to the laboratory via CPRS
"^DD",69,69.05,4,21,4,0)
entry or, for internal laboratory orders, on paper.  The Ionizing 
"^DD",69,69.05,4,21,5,0)
Radiation indicator is sent to PCE at verification.
"^DD",69,69.05,4,"DT")
3040123
"^DD",69,69.05,5,0)
SOUTHWEST ASIA CONDITIONS^S^0:NO;1:YES;^0;6^Q
"^DD",69,69.05,5,3)
Enter '1' or 'Y(es)' if care provided is to treat a condition related to Southwest Asia Conditions (SWAC); otherwise, enter '0' or 'N(o)'.
"^DD",69,69.05,5,21,0)
^.001^6^6^3081009^^^^
"^DD",69,69.05,5,21,1,0)
Indicates if the care provided is to treat a condition related to 
"^DD",69,69.05,5,21,2,0)
Southwest Asia Conditions (formerly referred to as  Environmental
"^DD",69,69.05,5,21,3,0)
Contaminants ) during the Persian Gulf War.  The ordering provider
"^DD",69,69.05,5,21,4,0)
is responsible for providing the indicator to the laboratory via 
"^DD",69,69.05,5,21,5,0)
CPRS entry or, for internal laboratory orders, on paper.  The 
"^DD",69,69.05,5,21,6,0)
Southwest Asia Conditions indicator is sent to PCE at verification.
"^DD",69,69.05,5,"DT")
3060607
"^DD",69,69.05,6,0)
MILITARY SEXUAL TRAUMA^S^0:NO;1:YES;^0;7^Q
"^DD",69,69.05,6,21,0)
^.001^4^4^3060104^^^
"^DD",69,69.05,6,21,1,0)
Indicates if the care provided is to treat a condition related to MST.  
"^DD",69,69.05,6,21,2,0)
The ordering provider is responsible for providing the Environmental MST
"^DD",69,69.05,6,21,3,0)
indicator to the laboratory via CPRS entry or, for internal laboratory 
"^DD",69,69.05,6,21,4,0)
orders, on paper.  The MST indicator is sent to PCE at verification.
"^DD",69,69.05,6,"DT")
3051223
"^DD",69,69.05,7,0)
HEAD AND NECK CANCER^S^0:NO;1:YES;^0;8^Q
"^DD",69,69.05,7,21,0)
^.001^5^5^3060104^^^^
"^DD",69,69.05,7,21,1,0)
Indicates if the care provided is to treat a condition related to Head 
"^DD",69,69.05,7,21,2,0)
and Neck Cancer. The ordering provider is responsible for providing the 
"^DD",69,69.05,7,21,3,0)
Head and Neck Cancer indicator to the laboratory via CPRS entry or, for 
"^DD",69,69.05,7,21,4,0)
internal laboratory orders, on paper.  The Head and Neck Cancer indicator
"^DD",69,69.05,7,21,5,0)
is sent to PCE at verification.
"^DD",69,69.05,7,"DT")
3051223
"^DD",69,69.05,8,0)
PRIMARY DIAGNOSIS^S^1:YES;0:NO;^0;9^Q
"^DD",69,69.05,8,21,0)
^^1^1^3040322^
"^DD",69,69.05,8,21,1,0)
This diagnosis is the primary diagnosis.
"^DD",69,69.05,8,"DT")
3040322
"^DD",69,69.05,9,0)
SHIPBOARD HAZARD AND DEFENSE^S^0:NO;1:YES;^0;10^Q
"^DD",69,69.05,9,3)
Enter '1' or 'Y(es)' if care provided is to treat a condition related to Shipboard Hazard and Defense (SHAD); otherwise, enter '0' or 'N(o)'.
"^DD",69,69.05,9,21,0)
^.001^5^5^3081009^^^^
"^DD",69,69.05,9,21,1,0)
Indicates if the care provided is to treat a condition related to 
"^DD",69,69.05,9,21,2,0)
Shipboard Hazard And Defense (SHAD).  The ordering provider is responsible
"^DD",69,69.05,9,21,3,0)
for providing the value for the SHAD indicator to the laboratory via CPRS
"^DD",69,69.05,9,21,4,0)
entry or, for internal laboratory orders, on paper.  The indicator value
"^DD",69,69.05,9,21,5,0)
is sent to PCE at verification.
"^DD",69,69.05,9,"DT")
3060606
"^DD",69,69.2166113,0)
BRIEF CLINICAL HISTORY SUB-FIELD^^.01^1
"^DD",69,69.2166113,0,"DT")
3151126
"^DD",69,69.2166113,0,"NM","BRIEF CLINICAL HISTORY")

"^DD",69,69.2166113,0,"UP")
69.01
"^DD",69,69.2166113,.01,0)
BRIEF CLINICAL HISTORY^Wx^^0;1^Q
"^DD",69,69.2166113,.01,3)
Enter patient's brief clinical history for this specimen
"^DD",69,69.2166113,.01,21,0)
^.001^2^2^3161117^^^^
"^DD",69,69.2166113,.01,21,1,0)
This field contain the brief clinical history entered during CPRS AP 
"^DD",69,69.2166113,.01,21,2,0)
order.
"^DD",69,69.2166113,.01,"DT")
3151126
"^DD",69,69.2166114,0)
PREOPERATIVE DIAGNOSIS SUB-FIELD^^.01^1
"^DD",69,69.2166114,0,"DT")
3151126
"^DD",69,69.2166114,0,"NM","PREOPERATIVE DIAGNOSIS")

"^DD",69,69.2166114,0,"UP")
69.01
"^DD",69,69.2166114,.01,0)
PREOPERATIVE DIAGNOSIS^Wx^^0;1^Q
"^DD",69,69.2166114,.01,3)
Enter the pre-operative diagnosis for this specimen.
"^DD",69,69.2166114,.01,21,0)
^^1^1^3161117^
"^DD",69,69.2166114,.01,21,1,0)
This field contains the preoperative diagnosis.
"^DD",69,69.2166114,.01,"DT")
3151126
"^DD",69,69.2166115,0)
OPERATIVE FINDINGS SUB-FIELD^^.01^1
"^DD",69,69.2166115,0,"DT")
3151126
"^DD",69,69.2166115,0,"NM","OPERATIVE FINDINGS")

"^DD",69,69.2166115,0,"UP")
69.01
"^DD",69,69.2166115,.01,0)
OPERATIVE FINDINGS^Wx^^0;1^Q
"^DD",69,69.2166115,.01,3)
Enter Operatiave Findings
"^DD",69,69.2166115,.01,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.2166115,.01,21,1,0)
This field contains the Operative Findings entered during CPRS AP order.
"^DD",69,69.2166115,.01,"DT")
3160628
"^DD",69,69.2166116,0)
POSTOPERATIVE DIAGNOSIS SUB-FIELD^^.01^1
"^DD",69,69.2166116,0,"DT")
3151126
"^DD",69,69.2166116,0,"NM","POSTOPERATIVE DIAGNOSIS")

"^DD",69,69.2166116,0,"UP")
69.01
"^DD",69,69.2166116,.01,0)
POSTOPERATIVE DIAGNOSIS^Wx^^0;1^Q
"^DD",69,69.2166116,.01,3)
Enter the post operative finding for this specimen.
"^DD",69,69.2166116,.01,21,0)
^.001^2^2^3161117^^^^
"^DD",69,69.2166116,.01,21,1,0)
This field contains the PostOperative Diagnosis entered during CPRS AP 
"^DD",69,69.2166116,.01,21,2,0)
Order.
"^DD",69,69.2166116,.01,"DT")
3151126
"^DD",69,69.221661,0)
AP SPECIMEN SUB-FIELD^^.08^4
"^DD",69,69.221661,0,"DT")
3161117
"^DD",69,69.221661,0,"IX","B",69.221661,.01)

"^DD",69,69.221661,0,"NM","AP SPECIMEN")

"^DD",69,69.221661,0,"UP")
69.02
"^DD",69,69.221661,.01,0)
SPECIMEN DESCRIPTION^MFJ75^^0;1^K:$L(X)>75!($L(X)<2) X
"^DD",69,69.221661,.01,1,0)
^.1
"^DD",69,69.221661,.01,1,1,0)
69.221661^B
"^DD",69,69.221661,.01,1,1,1)
S ^LRO(69,DA(3),1,DA(2),4,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",69,69.221661,.01,1,1,2)
K ^LRO(69,DA(3),1,DA(2),4,DA(1),1,"B",$E(X,1,30),DA)
"^DD",69,69.221661,.01,3)
Enter specimen ID information 2-75 characters
"^DD",69,69.221661,.01,21,0)
^.001^3^3^3161117^^^^
"^DD",69,69.221661,.01,21,1,0)
This field contains the Free Text description of the specimen/sample of 
"^DD",69,69.221661,.01,21,2,0)
the AP order. It can be used to identify the location or orientation of 
"^DD",69,69.221661,.01,21,3,0)
the specimen. i.e. Upper Right Lung.
"^DD",69,69.221661,.01,"DT")
3161117
"^DD",69,69.221661,.06,0)
AP SPECIMEN^P61'^LAB(61,^0;6^Q
"^DD",69,69.221661,.06,3)
Select AP Specimen for this order.
"^DD",69,69.221661,.06,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.221661,.06,21,1,0)
This field contains the specimen for this AP order.
"^DD",69,69.221661,.06,"DT")
3161108
"^DD",69,69.221661,.07,0)
COLLECTION SAMPLE^P62'^LAB(62,^0;7^Q
"^DD",69,69.221661,.07,3)
Select the Collection Sample for this specimen
"^DD",69,69.221661,.07,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.221661,.07,21,1,0)
This field contains the SP Collection Sample.
"^DD",69,69.221661,.07,"DT")
3161117
"^DD",69,69.221661,.08,0)
AP SAMPLE^FJ75^^0;8^K:$L(X)>75!($L(X)<2) X
"^DD",69,69.221661,.08,3)
Enter AP sample for this order 2-75 characters
"^DD",69,69.221661,.08,21,0)
^^1^1^3161117^
"^DD",69,69.221661,.08,21,1,0)
This field contains the AP sample for this order. This field maybe empty.
"^DD",69,69.221661,.08,"DT")
3161117
"^DD",69,69.2216612,0)
DIALOG SUB-FIELD^^3.5^6
"^DD",69,69.2216612,0,"DT")
3161117
"^DD",69,69.2216612,0,"IX","B",69.2216612,.01)

"^DD",69,69.2216612,0,"NM","DIALOG")

"^DD",69,69.2216612,0,"UP")
69.02
"^DD",69,69.2216612,.01,0)
DIALOG^MFJ20^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",69,69.2216612,.01,1,0)
^.1
"^DD",69,69.2216612,.01,1,1,0)
69.2216612^B
"^DD",69,69.2216612,.01,1,1,1)
S ^LRO(69,DA(3),1,DA(2),4,DA(1),"DIA","B",$E(X,1,30),DA)=""
"^DD",69,69.2216612,.01,1,1,2)
K ^LRO(69,DA(3),1,DA(2),4,DA(1),"DIA","B",$E(X,1,30),DA)
"^DD",69,69.2216612,.01,3)
Answer must be 1-20 characters in length.
"^DD",69,69.2216612,.01,21,0)
^.001^1^1^3161117^^^
"^DD",69,69.2216612,.01,21,1,0)
This file contain CPRS AP Dialog data.
"^DD",69,69.2216612,.01,"DT")
3161117
"^DD",69,69.2216612,1,0)
SUBSCRIPT^FJ10^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",69,69.2216612,1,3)
Enter Lab Data Subsript 1-10 Characters
"^DD",69,69.2216612,1,21,0)
^.001^1^1^3161117^^^^
"^DD",69,69.2216612,1,21,1,0)
This is the LAB DATA file subscript that this data should be stored in.
"^DD",69,69.2216612,1,"DT")
3161117
"^DD",69,69.2216612,2,0)
DATALINK^FJ20^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",69,69.2216612,2,3)
Enter Web Address 1-20 characters
"^DD",69,69.2216612,2,21,0)
^.001^2^2^3161117^^^
"^DD",69,69.2216612,2,21,1,0)
Enter the internet web address that is used to store additional 
"^DD",69,69.2216612,2,21,2,0)
information.
"^DD",69,69.2216612,2,"DT")
3161117
"^DD",69,69.2216612,3,0)
DATATYPE^FJ10^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",69,69.2216612,3,3)
Enter the dialog data type 1-10 characters..
"^DD",69,69.2216612,3,21,0)
^^1^1^3161117^
"^DD",69,69.2216612,3,21,1,0)
This is the FileMan data type for this dialog.
"^DD",69,69.2216612,3,"DT")
3161117
"^DD",69,69.2216612,3.5,0)
ORIFN^F^^0;5^K:$L(X)>10!($L(X)<1) X
"^DD",69,69.2216612,3.5,3)
Enter OR(100,IEN#
"^DD",69,69.2216612,3.5,21,0)
^.001^1^1^3160908^^
"^DD",69,69.2216612,3.5,21,1,0)
This field contains the CPRS IEN where the orginal dialog is stored.
"^DD",69,69.2216612,3.5,"DT")
3150902
"^DD",69,69.2216612,4,0)
DATA^69.22166124^^1;0
"^DD",69,69.2216612,4,21,0)
^.001^1^1^3161117^^
"^DD",69,69.2216612,4,21,1,0)
This field contains the CPRS Dialog data for this specimen.
"^DD",69,69.22166124,0)
DATA SUB-FIELD^^.01^1
"^DD",69,69.22166124,0,"DT")
3150902
"^DD",69,69.22166124,0,"NM","DATA")

"^DD",69,69.22166124,0,"UP")
69.2216612
"^DD",69,69.22166124,.01,0)
DATA^Wx^^0;1^Q
"^DD",69,69.22166124,.01,3)
Enter the CPRS Dialog data for this specimen.
"^DD",69,69.22166124,.01,21,0)
^.001^2^2^3161117^^^
"^DD",69,69.22166124,.01,21,1,0)
 This field contains the data to stored. The contents are governed my 
"^DD",69,69.22166124,.01,21,2,0)
DATATYPE field
"^DD",69,69.22166124,.01,"DT")
3150902
"^DD",69,69.399,0)
TEST COMMENTS SUB-FIELD^^.01^1
"^DD",69,69.399,0,"DT")
2960409
"^DD",69,69.399,0,"NM","TEST COMMENTS")

"^DD",69,69.399,0,"UP")
69.03
"^DD",69,69.399,.01,0)
TEST COMMENTS^W^^0;1^Q
"^DD",69,69.399,.01,3)
Enter the comments for this test.
"^DD",69,69.399,.01,21,0)
^^1^1^2970703^^
"^DD",69,69.399,.01,21,1,0)
This is the comments associated with the test.
"^DD",69,69.399,.01,"DT")
2960409
"^DD",69,69.3991,0)
CANCEL REASON SUB-FIELD^^.01^1
"^DD",69,69.3991,0,"DT")
2980129
"^DD",69,69.3991,0,"NM","CANCEL REASON")

"^DD",69,69.3991,0,"UP")
69.03
"^DD",69,69.3991,.01,0)
CANCEL REASON^W^^0;1^Q
"^DD",69,69.3991,.01,3)
Enter a free text reason for cancelling this test.
"^DD",69,69.3991,.01,21,0)
^^1^1^2980129^
"^DD",69,69.3991,.01,21,1,0)
This is the free text reason for cancelling a test.
"^DD",69,69.3991,.01,"DT")
2980129
"^DD",69.71,69.71,0)
FIELD^^.01^7
"^DD",69.71,69.71,0,"DT")
3151125
"^DD",69.71,69.71,0,"IX","B",69.71,.01)

"^DD",69.71,69.71,0,"IX","C",69.71,1)

"^DD",69.71,69.71,0,"NM","LR CPRS PARAMETERS")

"^DD",69.71,69.71,0,"PT",60.021661,.01)

"^DD",69.71,69.71,0,"PT",69.01,21661.72)

"^DD",69.71,69.71,0,"VRPK")
LR
"^DD",69.71,69.71,.01,0)
NAME^RF^^0;1^K:$L(X)>50!($L(X)<2)!'(X'?1P.E) X
"^DD",69.71,69.71,.01,1,0)
^.1
"^DD",69.71,69.71,.01,1,1,0)
69.71^B
"^DD",69.71,69.71,.01,1,1,1)
S ^LAB(69.71,"B",$E(X,1,30),DA)=""
"^DD",69.71,69.71,.01,1,1,2)
K ^LAB(69.71,"B",$E(X,1,30),DA)
"^DD",69.71,69.71,.01,3)
Answer must be 2-50 characters in length.
"^DD",69.71,69.71,.01,21,0)
^.001^1^1^3160701^^
"^DD",69.71,69.71,.01,21,1,0)
Enter the name of the parameter.
"^DD",69.71,69.71,.01,"DT")
3151125
"^DD",69.71,69.71,.05,0)
CPRS SCREEN^S^1:YES;^0;3^Q
"^DD",69.71,69.71,.05,3)
Enter Yes of true.
"^DD",69.71,69.71,.05,21,0)
^.001^1^1^3160701^^
"^DD",69.71,69.71,.05,21,1,0)
Enter the screen for the test.
"^DD",69.71,69.71,.05,"DT")
3151030
"^DD",69.71,69.71,.06,0)
TEST SUBSCRIPT^S^MI:MI;BB:BB;EM:EM;SP:SP;CY:CY;AU:AU;CH:CH;^0;4^Q
"^DD",69.71,69.71,.06,3)
Select subscript
"^DD",69.71,69.71,.06,21,0)
^^1^1^3160701^
"^DD",69.71,69.71,.06,21,1,0)
Enter the test subscript for this parameter
"^DD",69.71,69.71,.06,"DT")
3160701
"^DD",69.71,69.71,1,0)
SYNONYM^F^^0;2^K:$L(X)>15!($L(X)<3) X
"^DD",69.71,69.71,1,1,0)
^.1
"^DD",69.71,69.71,1,1,1,0)
69.71^C
"^DD",69.71,69.71,1,1,1,1)
S ^LAB(69.71,"C",$E(X,1,30),DA)=""
"^DD",69.71,69.71,1,1,1,2)
K ^LAB(69.71,"C",$E(X,1,30),DA)
"^DD",69.71,69.71,1,1,1,"%D",0)
^^1^1^3151115^
"^DD",69.71,69.71,1,1,1,"%D",1,0)
 This field is used for lookup on the file.
"^DD",69.71,69.71,1,1,1,"DT")
3151115
"^DD",69.71,69.71,1,3)
Answer must be 3-15 characters in length.
"^DD",69.71,69.71,1,21,0)
^^1^1^3160628^
"^DD",69.71,69.71,1,21,1,0)
This is another name for the entry.
"^DD",69.71,69.71,1,"DT")
3151115
"^DD",69.71,69.71,2,0)
QUESTIONS^69.712^^1;0
"^DD",69.71,69.71,2,21,0)
^^1^1^3160628^
"^DD",69.71,69.71,2,21,1,0)
Contains the question to be asked of the user.
"^DD",69.71,69.71,3,0)
URL LINK^69.713^^3;0
"^DD",69.71,69.71,3,21,0)
^^1^1^3160628^
"^DD",69.71,69.71,3,21,1,0)
This field contains URL for additional information.
"^DD",69.71,69.71,4,0)
CPRS ID NAME^69.714^^4;0
"^DD",69.71,69.71,4,21,0)
^.001^1^1^3160628^^^
"^DD",69.71,69.71,4,21,1,0)
Enter the CPRS ID name
"^DD",69.71,69.712,0)
QUESTIONS SUB-FIELD^^.01^1
"^DD",69.71,69.712,0,"DT")
3151030
"^DD",69.71,69.712,0,"IX","B",69.712,.01)

"^DD",69.71,69.712,0,"NM","QUESTIONS")

"^DD",69.71,69.712,0,"UP")
69.71
"^DD",69.71,69.712,.01,0)
QUESTIONS^MF^^0;1^K:$L(X)>50!($L(X)<1) X
"^DD",69.71,69.712,.01,1,0)
^.1
"^DD",69.71,69.712,.01,1,1,0)
69.712^B
"^DD",69.71,69.712,.01,1,1,1)
S ^LAB(69.71,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",69.71,69.712,.01,1,1,2)
K ^LAB(69.71,DA(1),1,"B",$E(X,1,30),DA)
"^DD",69.71,69.712,.01,3)
Answer must be 1-50 characters in length.
"^DD",69.71,69.712,.01,21,0)
^.001^1^1^3160628^^
"^DD",69.71,69.712,.01,21,1,0)
Enter the questions to be asked.
"^DD",69.71,69.712,.01,"DT")
3151030
"^DD",69.71,69.713,0)
URL LINK SUB-FIELD^^.01^1
"^DD",69.71,69.713,0,"DT")
3151030
"^DD",69.71,69.713,0,"IX","B",69.713,.01)

"^DD",69.71,69.713,0,"NM","URL LINK")

"^DD",69.71,69.713,0,"UP")
69.71
"^DD",69.71,69.713,.01,0)
URL LINK^MF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",69.71,69.713,.01,1,0)
^.1
"^DD",69.71,69.713,.01,1,1,0)
69.713^B
"^DD",69.71,69.713,.01,1,1,1)
S ^LAB(69.71,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",69.71,69.713,.01,1,1,2)
K ^LAB(69.71,DA(1),3,"B",$E(X,1,30),DA)
"^DD",69.71,69.713,.01,3)
Answer must be 1-100 characters in length.
"^DD",69.71,69.713,.01,21,0)
^^1^1^3160628^
"^DD",69.71,69.713,.01,21,1,0)
This field contain URL for additional information on the subject.
"^DD",69.71,69.713,.01,"DT")
3151030
"^DD",69.71,69.714,0)
CPRS ID NAME SUB-FIELD^^1^6
"^DD",69.71,69.714,0,"DT")
3151125
"^DD",69.71,69.714,0,"IX","B",69.714,.01)

"^DD",69.71,69.714,0,"NM","CPRS ID NAME")

"^DD",69.71,69.714,0,"UP")
69.71
"^DD",69.71,69.714,.01,0)
CPRS ID NAME^MF^^0;1^K:$L(X)>50!($L(X)<3) X
"^DD",69.71,69.714,.01,1,0)
^.1
"^DD",69.71,69.714,.01,1,1,0)
69.714^B
"^DD",69.71,69.714,.01,1,1,1)
S ^LAB(69.71,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",69.71,69.714,.01,1,1,2)
K ^LAB(69.71,DA(1),4,"B",$E(X,1,30),DA)
"^DD",69.71,69.714,.01,3)
Answer must be 3-50 characters in length.
"^DD",69.71,69.714,.01,21,0)
^^1^1^3160628^
"^DD",69.71,69.714,.01,21,1,0)
This field contains CPRS ID name.
"^DD",69.71,69.714,.01,"DT")
3160303
"^DD",69.71,69.714,.02,0)
SUBSCRIPT^S^EM:EM;SP:SP;CY:CY;^0;2^Q
"^DD",69.71,69.714,.02,3)
Enter subscript for test
"^DD",69.71,69.714,.02,21,0)
^.001^2^2^3160628^^
"^DD",69.71,69.714,.02,21,1,0)
This field contains the subscript of where teh data should be stored. The 
"^DD",69.71,69.714,.02,21,2,0)
subscript of the order test must match.
"^DD",69.71,69.714,.02,"DT")
3160628
"^DD",69.71,69.714,.03,0)
DATA LOCATION^F^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",69.71,69.714,.03,3)
Answer must be 1-10 characters in length.
"^DD",69.71,69.714,.03,21,0)
^.001^2^2^3160628^^
"^DD",69.71,69.714,.03,21,1,0)
This field contains the data dictionary field associated with the 
"^DD",69.71,69.714,.03,21,2,0)
SubScript of the ordered test.
"^DD",69.71,69.714,.03,"DT")
3151125
"^DD",69.71,69.714,.04,0)
DATA TYPE^S^WP:WP;UP:UP;^0;4^Q
"^DD",69.71,69.714,.04,3)
Enter type of data.
"^DD",69.71,69.714,.04,21,0)
^.001^4^4^3160628^^^
"^DD",69.71,69.714,.04,21,1,0)
This field indicates what data type is to stored in this data location.
"^DD",69.71,69.714,.04,21,2,0)
 
"^DD",69.71,69.714,.04,21,3,0)
WP = Word Processing
"^DD",69.71,69.714,.04,21,4,0)
UP = UPDATE^DIE data
"^DD",69.71,69.714,.04,"DT")
3151125
"^DD",69.71,69.714,.05,0)
INSTANCE^NJ2,0^^0;5^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",69.71,69.714,.05,3)
Type a number between 0 and 99, 0 decimal digits.
"^DD",69.71,69.714,.05,21,0)
^.001^4^4^3160628^^
"^DD",69.71,69.714,.05,21,1,0)
 This is the instance number of multiple entries of Specimen 
"^DD",69.71,69.714,.05,21,2,0)
Description/Specimen/Sample triplet.
"^DD",69.71,69.714,.05,21,3,0)
 
"^DD",69.71,69.714,.05,21,4,0)
Default = 1
"^DD",69.71,69.714,.05,"DT")
3151125
"^DD",69.71,69.714,1,0)
NAME^F^^1;1^K:$L(X)>30!($L(X)<1) X
"^DD",69.71,69.714,1,3)
Answer must be 1-30 characters in length.
"^DD",69.71,69.714,1,21,0)
^.001^1^1^3160628^^
"^DD",69.71,69.714,1,21,1,0)
This the Data Dictionary Name for this data.
"^DD",69.71,69.714,1,"DT")
3151125
"^DD",69.9,69.9,21661,0)
CPRS AP DIALOG ON^S^1:YES;0:NO;^21661;1^Q
"^DD",69.9,69.9,21661,3)
Select YES to turn on CPRS AP Dialog feature
"^DD",69.9,69.9,21661,21,0)
^.001^3^3^3160907^^^
"^DD",69.9,69.9,21661,21,1,0)
This field indicates that the CPRS AP Dialog function is active. This 
"^DD",69.9,69.9,21661,21,2,0)
field determines if the CPRS AP Order dialog is processed during AP 
"^DD",69.9,69.9,21661,21,3,0)
Log-in.
"^DD",69.9,69.9,21661,"DT")
3160212
"^DIC",60,60,0)
LABORATORY TEST^60I
"^DIC",60,60,0,"GL")
^LAB(60,
"^DIC",60,60,"%",0)
^1.005^3^3
"^DIC",60,60,"%",1,0)
ORE
"^DIC",60,60,"%",2,0)
GMTS
"^DIC",60,60,"%",3,0)
PXRM
"^DIC",60,60,"%","B","GMTS",2)

"^DIC",60,60,"%","B","ORE",1)

"^DIC",60,60,"%","B","PXRM",3)

"^DIC",60,60,"%D",0)
^^1^1^2940316^^^^
"^DIC",60,60,"%D",1,0)
This is the file that holds the names and ordering, display of tests.
"^DIC",60,"B","LABORATORY TEST",60)

"^DIC",69,69,0)
LAB ORDER ENTRY^69D
"^DIC",69,69,0,"GL")
^LRO(69,
"^DIC",69,69,"%",0)
^1.005^^0
"^DIC",69,69,"%D",0)
^^26^26^2890914^^^^
"^DIC",69,69,"%D",1,0)
This file controls the orderly sequence of lab test ordering.  All ordering
"^DIC",69,69,"%D",2,0)
information is stored in the ^LRO global.  This file is pointed to by many
"^DIC",69,69,"%D",3,0)
other files, and supplies information for order entry and order status 
"^DIC",69,69,"%D",4,0)
output.  No editing of the entries should take place, as it may cause
"^DIC",69,69,"%D",5,0)
corruption or loss of ordering information. The file contains print and 
"^DIC",69,69,"%D",6,0)
sort templates that are used by a variety of lab routines and options to
"^DIC",69,69,"%D",7,0)
format reports.
"^DIC",69,69,"%D",8,0)
 
"^DIC",69,69,"%D",9,0)
CROSS REFERENCE DESCRIPTION:
"^DIC",69,69,"%D",10,0)
 ^LRO(69,"C",'ORDER #',LRODT,LRSN)
"^DIC",69,69,"%D",11,0)
 ^LRO(69,LRODT,1,"AA",LRDFN,LRSN) = Used by LROS (order status)
"^DIC",69,69,"%D",12,0)
 ^LRO(69,"AT",LRDFN,LRTEST,LRSREC,LRODT) = "" This is used for maximum test order frequency.
"^DIC",69,69,"%D",13,0)
  >>> THIS GROUP IS SET AT THE TIME OF VERIFICATION IF NOT A CONTROL. <<<
"^DIC",69,69,"%D",14,0)
 ^LRO(69,DT,1,"AC",'REPORT ROUTING LOCATION',LRSN) = "" or 1
"^DIC",69,69,"%D",15,0)
   Used by some of the reporting routines and collection list
"^DIC",69,69,"%D",16,0)
   (set to 1 when on collection list)
"^DIC",69,69,"%D",17,0)
 ^LRO(69,'DATE RESULTS AVAILABLE',1,"AR",'LOCATION','PT. NAME',LRDFN)
"^DIC",69,69,"%D",18,0)
      This is used by the daily cummulative
"^DIC",69,69,"%D",19,0)
 ^LRO(69,DT,1,"AR",'LOCATION','PT. NAME',LRDFN) = ""
"^DIC",69,69,"%D",20,0)
 ^LRO(69,DT,1,"AN",'LOCATION',LRDFN,LRIDT) = ""
"^DIC",69,69,"%D",21,0)
 ^LRO(69,'DRAW DATE',1,"AL",'LOCATION',PNM,LRDFN) = ""
"^DIC",69,69,"%D",22,0)
 ^LRO(69,'DRAW DATE',1,"AP",'DOC NAME',PNM,LRDFN) = ""
"^DIC",69,69,"%D",23,0)
 ^LRO(69,"AN",'LOCATION',LRDFN,LRIDT) = ""
"^DIC",69,69,"%D",24,0)
    Used by LRWD to give a list of patients with new lab data since
"^DIC",69,69,"%D",25,0)
    the start of the day.
"^DIC",69,69,"%D",26,0)
 ^LRO(69,DT,1,"AD",'REPORT ROUTING LOCATION',LRDFN,LRSN)= "" Used by the cumm
"^DIC",69,"B","LAB ORDER ENTRY",69)

"^DIC",69.71,69.71,0)
LR CPRS PARAMETERS^69.71
"^DIC",69.71,69.71,0,"GL")
^LAB(69.71,
"^DIC",69.71,"B","LR CPRS PARAMETERS",69.71)

"BLD",9535,6)
^375
**END**
**END**

