Released LR*5.2*519 SEQ #428
Extracted from mail message
**KIDS**:LR*5.2*519^

**INSTALL NAME**
LR*5.2*519
"BLD",11420,0)
LR*5.2*519^LAB SERVICE^0^3190716^y
"BLD",11420,1,0)
^^15^15^3190409^
"BLD",11420,1,1,0)
The patch addresses three (3) issues: 
"BLD",11420,1,2,0)
 
"BLD",11420,1,3,0)
1. When a lab panel (cosmic) test is set up so the atomic tests in the 
"BLD",11420,1,4,0)
   panel split to separate accession areas (e.g. one Chemistry and one
"BLD",11420,1,5,0)
   Toxicology), results of the ordered panel test do not display all of
"BLD",11420,1,6,0)
   the results of the atomic tests in the panel when viewed in the 
"BLD",11420,1,7,0)
   Computerized Patient Record System (CPRS) from the Orders tab or 
"BLD",11420,1,8,0)
   from the Cover Sheet.
"BLD",11420,1,9,0)
 
"BLD",11420,1,10,0)
2. Data corruption might occur in the data dictionary for file 63.04 if 
"BLD",11420,1,11,0)
   one or more users are adding or editing data names for Laboratory
"BLD",11420,1,12,0)
   tests.
"BLD",11420,1,13,0)
 
"BLD",11420,1,14,0)
3. A VistA software error might be generated during execution of option 
"BLD",11420,1,15,0)
   "Group verify (EA, EL, EW)" if results are being printed.
"BLD",11420,4,0)
^9.64PA^^
"BLD",11420,6.3)
16
"BLD",11420,"ABPKG")
n
"BLD",11420,"INID")
^y
"BLD",11420,"INIT")
EN^LR519
"BLD",11420,"KRN",0)
^9.67PA^1.5^24
"BLD",11420,"KRN",.4,0)
.4
"BLD",11420,"KRN",.401,0)
.401
"BLD",11420,"KRN",.402,0)
.402
"BLD",11420,"KRN",.403,0)
.403
"BLD",11420,"KRN",.5,0)
.5
"BLD",11420,"KRN",.84,0)
.84
"BLD",11420,"KRN",1.5,0)
1.5
"BLD",11420,"KRN",1.6,0)
1.6
"BLD",11420,"KRN",1.61,0)
1.61
"BLD",11420,"KRN",1.62,0)
1.62
"BLD",11420,"KRN",3.6,0)
3.6
"BLD",11420,"KRN",3.8,0)
3.8
"BLD",11420,"KRN",9.2,0)
9.2
"BLD",11420,"KRN",9.8,0)
9.8
"BLD",11420,"KRN",9.8,"NM",0)
^9.68A^9^8
"BLD",11420,"KRN",9.8,"NM",1,0)
LR7OR1^^0^B54568389
"BLD",11420,"KRN",9.8,"NM",2,0)
LR7OR2^^0^B41093086
"BLD",11420,"KRN",9.8,"NM",3,0)
LRGV^^0^B43021696
"BLD",11420,"KRN",9.8,"NM",5,0)
LRWU5^^0^B36481062
"BLD",11420,"KRN",9.8,"NM",6,0)
LRWU6^^0^B26245556
"BLD",11420,"KRN",9.8,"NM",7,0)
LRGV2^^0^B10216842
"BLD",11420,"KRN",9.8,"NM",8,0)
LRWU9^^0^B188843345
"BLD",11420,"KRN",9.8,"NM",9,0)
LRWU9A^^0^B8489328
"BLD",11420,"KRN",9.8,"NM","B","LR7OR1",1)

"BLD",11420,"KRN",9.8,"NM","B","LR7OR2",2)

"BLD",11420,"KRN",9.8,"NM","B","LRGV",3)

"BLD",11420,"KRN",9.8,"NM","B","LRGV2",7)

"BLD",11420,"KRN",9.8,"NM","B","LRWU5",5)

"BLD",11420,"KRN",9.8,"NM","B","LRWU6",6)

"BLD",11420,"KRN",9.8,"NM","B","LRWU9",8)

"BLD",11420,"KRN",9.8,"NM","B","LRWU9A",9)

"BLD",11420,"KRN",19,0)
19
"BLD",11420,"KRN",19.1,0)
19.1
"BLD",11420,"KRN",101,0)
101
"BLD",11420,"KRN",409.61,0)
409.61
"BLD",11420,"KRN",771,0)
771
"BLD",11420,"KRN",779.2,0)
779.2
"BLD",11420,"KRN",870,0)
870
"BLD",11420,"KRN",8989.51,0)
8989.51
"BLD",11420,"KRN",8989.52,0)
8989.52
"BLD",11420,"KRN",8994,0)
8994
"BLD",11420,"KRN","B",.4,.4)

"BLD",11420,"KRN","B",.401,.401)

"BLD",11420,"KRN","B",.402,.402)

"BLD",11420,"KRN","B",.403,.403)

"BLD",11420,"KRN","B",.5,.5)

"BLD",11420,"KRN","B",.84,.84)

"BLD",11420,"KRN","B",1.5,1.5)

"BLD",11420,"KRN","B",1.6,1.6)

"BLD",11420,"KRN","B",1.61,1.61)

"BLD",11420,"KRN","B",1.62,1.62)

"BLD",11420,"KRN","B",3.6,3.6)

"BLD",11420,"KRN","B",3.8,3.8)

"BLD",11420,"KRN","B",9.2,9.2)

"BLD",11420,"KRN","B",9.8,9.8)

"BLD",11420,"KRN","B",19,19)

"BLD",11420,"KRN","B",19.1,19.1)

"BLD",11420,"KRN","B",101,101)

"BLD",11420,"KRN","B",409.61,409.61)

"BLD",11420,"KRN","B",771,771)

"BLD",11420,"KRN","B",779.2,779.2)

"BLD",11420,"KRN","B",870,870)

"BLD",11420,"KRN","B",8989.51,8989.51)

"BLD",11420,"KRN","B",8989.52,8989.52)

"BLD",11420,"KRN","B",8994,8994)

"BLD",11420,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",11420,"QUES",0)
^9.62^^
"BLD",11420,"REQB",0)
^9.611^5^5
"BLD",11420,"REQB",1,0)
LR*5.2*453^1
"BLD",11420,"REQB",2,0)
LR*5.2*459^1
"BLD",11420,"REQB",3,0)
LR*5.2*316^1
"BLD",11420,"REQB",4,0)
LR*5.2*411^1
"BLD",11420,"REQB",5,0)
LR*5.2*438^1
"BLD",11420,"REQB","B","LR*5.2*316",3)

"BLD",11420,"REQB","B","LR*5.2*411",4)

"BLD",11420,"REQB","B","LR*5.2*438",5)

"BLD",11420,"REQB","B","LR*5.2*453",1)

"BLD",11420,"REQB","B","LR*5.2*459",2)

"INIT")
EN^LR519
"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2981028^66481
"PKG",26,22,1,"PAH",1,0)
519^3190716
"PKG",26,22,1,"PAH",1,1,0)
^^15^15^3190716
"PKG",26,22,1,"PAH",1,1,1,0)
The patch addresses three (3) issues: 
"PKG",26,22,1,"PAH",1,1,2,0)
 
"PKG",26,22,1,"PAH",1,1,3,0)
1. When a lab panel (cosmic) test is set up so the atomic tests in the 
"PKG",26,22,1,"PAH",1,1,4,0)
   panel split to separate accession areas (e.g. one Chemistry and one
"PKG",26,22,1,"PAH",1,1,5,0)
   Toxicology), results of the ordered panel test do not display all of
"PKG",26,22,1,"PAH",1,1,6,0)
   the results of the atomic tests in the panel when viewed in the 
"PKG",26,22,1,"PAH",1,1,7,0)
   Computerized Patient Record System (CPRS) from the Orders tab or 
"PKG",26,22,1,"PAH",1,1,8,0)
   from the Cover Sheet.
"PKG",26,22,1,"PAH",1,1,9,0)
 
"PKG",26,22,1,"PAH",1,1,10,0)
2. Data corruption might occur in the data dictionary for file 63.04 if 
"PKG",26,22,1,"PAH",1,1,11,0)
   one or more users are adding or editing data names for Laboratory
"PKG",26,22,1,"PAH",1,1,12,0)
   tests.
"PKG",26,22,1,"PAH",1,1,13,0)
 
"PKG",26,22,1,"PAH",1,1,14,0)
3. A VistA software error might be generated during execution of option 
"PKG",26,22,1,"PAH",1,1,15,0)
   "Group verify (EA, EL, EW)" if results are being printed.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","LR519")
0^^B15159031^n/a
"RTN","LR519",1,0)
LR519 ;HPS/DSK - LR*5.2*519 PATCH POST INSTALL ROUTINE ;Apr 03, 2019@12:00
"RTN","LR519",2,0)
 ;;5.2;LAB SERVICE;**519**;Sep 27, 1994;Build 16
"RTN","LR519",3,0)
 ;
"RTN","LR519",4,0)
 ; Reference to ^DD(63.04 supported by DBIA #7053
"RTN","LR519",5,0)
 ; $$FMADD^XLFDT supported by DBIA #10103
"RTN","LR519",6,0)
 ; $$SENDMSG^XMXAPI supported by IA #2729
"RTN","LR519",7,0)
 ;
"RTN","LR519",8,0)
 Q
"RTN","LR519",9,0)
 ;
"RTN","LR519",10,0)
EN ;
"RTN","LR519",11,0)
 N LRDUZ
"RTN","LR519",12,0)
 S ZTRTN="START^LR519"
"RTN","LR519",13,0)
 S ZTDESC="LR*5.2*519 Post-Install Routine"
"RTN","LR519",14,0)
 S ZTIO="",ZTDTH=$H
"RTN","LR519",15,0)
 S LRDUZ=DUZ
"RTN","LR519",16,0)
 S ZTSAVE("LRDUZ")=""
"RTN","LR519",17,0)
 D ^%ZTLOAD
"RTN","LR519",18,0)
 W !!,"LR*5.2*519 Post-Install Routine has been tasked - TASK NUMBER: ",$G(ZTSK)
"RTN","LR519",19,0)
 W !!,"You as well as members of the LMI MailMan Group will receive"
"RTN","LR519",20,0)
 W !,"a MailMan message when the search completes.",!
"RTN","LR519",21,0)
 Q
"RTN","LR519",22,0)
 ;
"RTN","LR519",23,0)
START ;
"RTN","LR519",24,0)
 N LRA,LRB,LRNAME,LRNUM,LRCOUNT
"RTN","LR519",25,0)
 K ^TMP("LR519",$J)
"RTN","LR519",26,0)
 S (LRA,LRB)="",LRNUM=0
"RTN","LR519",27,0)
 F  S LRA=$O(^DD(63.04,"B",LRA)) Q:LRA=""  D
"RTN","LR519",28,0)
 . S LRCOUNT=0
"RTN","LR519",29,0)
 . F  S LRB=$O(^DD(63.04,"B",LRA,LRB)) Q:LRB=""  D
"RTN","LR519",30,0)
 . . S LRCOUNT=LRCOUNT+1
"RTN","LR519",31,0)
 . . I LRCOUNT>1 M ^TMP("LR519",$J,LRA)=^DD(63.04,"B",LRA)
"RTN","LR519",32,0)
 D XTMP,MAIL
"RTN","LR519",33,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LR519",34,0)
 Q
"RTN","LR519",35,0)
 ;
"RTN","LR519",36,0)
XTMP ;Generate MailMan message and keep in ^XTMP for 60 days
"RTN","LR519",37,0)
 N LRSPACE,LRDASH,LRSTR,LRHIT
"RTN","LR519",38,0)
 S LRSPACE="                              "
"RTN","LR519",39,0)
 S LRDASH="------------------------------------------------------------"
"RTN","LR519",40,0)
 S LRNUM=1
"RTN","LR519",41,0)
 S ^XTMP("LR 519 POST INSTALL",0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^LR*5.2*519 POST INSTALL"
"RTN","LR519",42,0)
 I $O(^TMP("LR519",$J,""))="" D  Q
"RTN","LR519",43,0)
 . S ^XTMP("LR 519 POST INSTALL",LRNUM)=" "
"RTN","LR519",44,0)
 . S LRNUM=LRNUM+1
"RTN","LR519",45,0)
 . S ^XTMP("LR 519 POST INSTALL",LRNUM)="No issues found."
"RTN","LR519",46,0)
 ;
"RTN","LR519",47,0)
 ;Issues were found
"RTN","LR519",48,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)=" "
"RTN","LR519",49,0)
 S LRNUM=LRNUM+1
"RTN","LR519",50,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)="The following issue(s) were found in ^DD(63.04."
"RTN","LR519",51,0)
 S LRNUM=LRNUM+1
"RTN","LR519",52,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)=" "
"RTN","LR519",53,0)
 S LRNUM=LRNUM+1
"RTN","LR519",54,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)="Please submit a ServiceNow ticket with the assignment group"
"RTN","LR519",55,0)
 S LRNUM=LRNUM+1
"RTN","LR519",56,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)="of NTL SUP CLIN2 for assistance with correcting the issue(s)."
"RTN","LR519",57,0)
 S LRNUM=LRNUM+1
"RTN","LR519",58,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)=" "
"RTN","LR519",59,0)
 S LRNUM=LRNUM+1
"RTN","LR519",60,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)="NOTE: Names such as ""not in use"", etc. which do not appear to"
"RTN","LR519",61,0)
 S LRNUM=LRNUM+1
"RTN","LR519",62,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)="      pertain to active tests do not warrant correction."
"RTN","LR519",63,0)
 S LRNUM=LRNUM+1
"RTN","LR519",64,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)=" "
"RTN","LR519",65,0)
 S LRNUM=LRNUM+1
"RTN","LR519",66,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)="Name(s) With Multiple IENs"
"RTN","LR519",67,0)
 S LRNUM=LRNUM+1
"RTN","LR519",68,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)="Name                     IEN"
"RTN","LR519",69,0)
 S LRNUM=LRNUM+1
"RTN","LR519",70,0)
 S ^XTMP("LR 519 POST INSTALL",LRNUM)=LRDASH
"RTN","LR519",71,0)
 S LRNUM=LRNUM+1
"RTN","LR519",72,0)
 S (LRA,LRB)=""
"RTN","LR519",73,0)
 F  S LRA=$O(^TMP("LR519",$J,LRA)) Q:LRA=""  D
"RTN","LR519",74,0)
 . S LRNUM=LRNUM+1
"RTN","LR519",75,0)
 . S ^XTMP("LR 519 POST INSTALL",LRNUM)=" "
"RTN","LR519",76,0)
 . S LRB=$O(^TMP("LR519",$J,LRA,"")) D
"RTN","LR519",77,0)
 . . S LRNUM=LRNUM+1
"RTN","LR519",78,0)
 . . S ^XTMP("LR 519 POST INSTALL",LRNUM)=$E(LRA,1,23)_$E(LRSPACE,1,25-$L(LRA))_LRB
"RTN","LR519",79,0)
 . F  S LRB=$O(^TMP("LR519",$J,LRA,LRB)) Q:LRB=""  D
"RTN","LR519",80,0)
 . . S LRNUM=LRNUM+1
"RTN","LR519",81,0)
 . . S ^XTMP("LR 519 POST INSTALL",LRNUM)=$E(LRSPACE,1,25)_LRB
"RTN","LR519",82,0)
 Q
"RTN","LR519",83,0)
 ;
"RTN","LR519",84,0)
MAIL ;
"RTN","LR519",85,0)
 N LRMY,LRMSUB,LRMTEXT,LRMFROM,LRMIN
"RTN","LR519",86,0)
 S LRMIN("FROM")="LR*5.2*519 Post-Install"
"RTN","LR519",87,0)
 S LRMY(LRDUZ)=""
"RTN","LR519",88,0)
 S LRMY("G.LMI")=""
"RTN","LR519",89,0)
 S LRMSUB="LR*5.2*519 Check of ^DD(63.04"
"RTN","LR519",90,0)
 S LRMTEXT="^XTMP(""LR 519 POST INSTALL"")"
"RTN","LR519",91,0)
 D SENDMSG^XMXAPI(DUZ,LRMSUB,LRMTEXT,.LRMY,.LRMIN,"","")
"RTN","LR519",92,0)
 K ^TMP("LR519",$J)
"RTN","LR519",93,0)
 Q
"RTN","LR7OR1")
0^1^B54568389^B34879723
"RTN","LR7OR1",1,0)
LR7OR1 ;DALIO/JMC - Get Lab results ; 3/29/19 8:11am
"RTN","LR7OR1",2,0)
 ;;5.2;LAB SERVICE;**121,187,219,230,256,310,340,348,350,427,459,519**;Sep 27, 1994;Build 16
"RTN","LR7OR1",3,0)
 ;Reference to ^DPT supported by DBIA #10035
"RTN","LR7OR1",4,0)
 ;Reference to $$FMADD^XLFDT supported by IA #10103
"RTN","LR7OR1",5,0)
 ;
"RTN","LR7OR1",6,0)
RR(DFN,ORD,SDATE,EDATE,SUB,TEST,FLAG,COUNT,SPEC,UNVER) ;Get LAB results for patient
"RTN","LR7OR1",7,0)
 ;DFN = Patient DFN, ptr to file 2 (Required)
"RTN","LR7OR1",8,0)
 ;ORD = Lab Link from OE/RR (ORPK node) (Optional)
"RTN","LR7OR1",9,0)
 ;SDATE = start date to begin search in fileman format (Optional)
"RTN","LR7OR1",10,0)
 ;EDATE = end date to end search in fileman format (Optional)
"RTN","LR7OR1",11,0)
 ;SUB =set to CH,MI,AP or ALL to specify lab (Optional)
"RTN","LR7OR1",12,0)
 ;    subsection. A null entry will imply ALL.
"RTN","LR7OR1",13,0)
 ;TEST = Test to do lookup on (Optional). A null parameter will get all tests
"RTN","LR7OR1",14,0)
 ;FLAG = L for local test ID, N for National test ID (Optional)
"RTN","LR7OR1",15,0)
 ;    this is specified for both input and output
"RTN","LR7OR1",16,0)
 ;COUNT =Count of results to return. Each Date/time counts as 1 (optional)
"RTN","LR7OR1",17,0)
 ;SPEC =ptr file 61 to specify specimen (optional).
"RTN","LR7OR1",18,0)
 ;      If specified, no AP results are returned.
"RTN","LR7OR1",19,0)
 ;UNVER =1 to include unverified data
"RTN","LR7OR1",20,0)
 ;Output is set in ^TMP("LRRR",$J,dfn,subscript,inverse d/t,seq)=
"RTN","LR7OR1",21,0)
 ; testID^result^flag^units^refrange^resultstatus(F or P)^^^natlCode^natlName^system^Verifyby^^Theraputicflag(T or "")^PrintName^Accession^Order#^Specimen
"RTN","LR7OR1",22,0)
 ;
"RTN","LR7OR1",23,0)
 N LRDFN,LRDPF,SEX,AGE,DOB,ORDT,ORSN,II,III,DRAW,TSTY,SS,CT1
"RTN","LR7OR1",24,0)
 N LRORID,LRORIDX,LRID,LRORIDF,LRD1,LRD2,LRAN,LRUID,LRI
"RTN","LR7OR1",25,0)
 N LRDTST,LRORU,LRAA,LRSD,LRSA,LRSN,LRORNST
"RTN","LR7OR1",26,0)
 ;
"RTN","LR7OR1",27,0)
 Q:'$G(DFN)
"RTN","LR7OR1",28,0)
 S LRDFN=$$LRDFN(DFN),LRDPF="2^DPT("
"RTN","LR7OR1",29,0)
 Q:'LRDFN
"RTN","LR7OR1",30,0)
 ;
"RTN","LR7OR1",31,0)
 S SEX=$P($G(@("^"_$P(LRDPF,"^",2)_+DFN_",0)")),"^",2)
"RTN","LR7OR1",32,0)
 S DOB=$P($G(@("^"_$P(LRDPF,"^",2)_+DFN_",0)")),"^",3),AGE=$S($D(DT)&(DOB?7N):DT-DOB\10000,1:"??")
"RTN","LR7OR1",33,0)
 D DTRNG
"RTN","LR7OR1",34,0)
 S SUB=$S($G(SUB)="ALL":"CHMIAP",$L($G(SUB)):SUB,1:"CHMIAP"),FLAG=$S('$L($G(FLAG)):"L",1:FLAG)
"RTN","LR7OR1",35,0)
 ;
"RTN","LR7OR1",36,0)
 I SUB["CH",$D(ORID) S LRORID=ORID,LRORIDX=0 D
"RTN","LR7OR1",37,0)
 . I $G(LRORID)<1,$D(ID) S LRORID=+ID
"RTN","LR7OR1",38,0)
 . I $D(LRORID) S LRORID=+LRORID
"RTN","LR7OR1",39,0)
 . I $D(ID) S LRID=+ID
"RTN","LR7OR1",40,0)
 ;
"RTN","LR7OR1",41,0)
 I $G(TEST),FLAG="L",'$D(^LAB(60,TEST)) Q  ;No-Match on Local testID
"RTN","LR7OR1",42,0)
 I $G(TEST),FLAG="N" S TEST=$O(^LAB(60,"AC",TEST,0)) Q:'TEST  ;No-Match on National testID
"RTN","LR7OR1",43,0)
 I $G(TEST) S SUB=$P(^LAB(60,TEST,0),"^",4) Q:'$L(SUB)  ;Test with no subscript
"RTN","LR7OR1",44,0)
 ;
"RTN","LR7OR1",45,0)
 K ^TMP("LRRR",$J),^TMP("LRAPI",$J) F LRI="LRPLS","LRPLS-ADDR" K ^TMP(LRI,$J)
"RTN","LR7OR1",46,0)
 ;
"RTN","LR7OR1",47,0)
 S COUNT=$S($G(COUNT):COUNT,1:9999999),CT1=1
"RTN","LR7OR1",48,0)
 ;
"RTN","LR7OR1",49,0)
CV ;Check variables to see if called by OR; build array of tests (LR519)
"RTN","LR7OR1",50,0)
 I SUB["CH",$D(LRORID) S LRORIDX=0 D
"RTN","LR7OR1",51,0)
 . S LRD1=9999999-$$FMADD^XLFDT(9999999-SDATE,14),LRD2=9999999-$$FMADD^XLFDT(9999999-EDATE,-14)
"RTN","LR7OR1",52,0)
 . F  S LRD1=$O(^LR(LRDFN,"CH",LRD1)) Q:LRD1<1!(LRD1>LRD2)  D
"RTN","LR7OR1",53,0)
 . . S LRDTST=^LR(LRDFN,"CH",LRD1,0),LRORU=$G(^LR(LRDFN,"CH",LRD1,"ORU"))
"RTN","LR7OR1",54,0)
 . . S ^TMP("LRORID",$J,+LRDTST)=$P(LRDTST,U,6)_U_$P(LRDTST,U)_U_$P(LRORU,U)
"RTN","LR7OR1",55,0)
 . S LRD1=0 F  S LRD1=$O(^TMP("LRORID",$J,LRD1)) Q:LRD1<1  S LRORIDF=0 D
"RTN","LR7OR1",56,0)
 . . S LRAN=^TMP("LRORID",$J,LRD1),LRUID=$P(LRAN,U,3)
"RTN","LR7OR1",57,0)
 . . S LRAA=$O(^LRO(68,"C",LRUID,0))
"RTN","LR7OR1",58,0)
 . . I LRAA<1 K ^TMP("LRORID",$J,LRD1) Q
"RTN","LR7OR1",59,0)
 . . S LRAD=$O(^LRO(68,"C",LRUID,LRAA,0))
"RTN","LR7OR1",60,0)
 . . I LRAD<1 K ^TMP("LRORID",$J,LRD1) Q
"RTN","LR7OR1",61,0)
 . . S LRSA=$O(^LRO(68,"C",LRUID,LRAA,LRAD,0))
"RTN","LR7OR1",62,0)
 . . I LRSA<1 K ^TMP("LRORID",$J,LRD1) Q
"RTN","LR7OR1",63,0)
 . . I $G(^LRO(68,LRAA,1,LRAD,1,LRSA,.2))=$P(LRAN,U) D
"RTN","LR7OR1",64,0)
 . . . S LRSD=$P(^LRO(68,LRAA,1,LRAD,1,LRSA,0),U,4),LRSN=$P(^(0),U,5)
"RTN","LR7OR1",65,0)
 . . . ;S LRON=^LRO(68,LRAA,1,LRAD,1,LRSA,.1)
"RTN","LR7OR1",66,0)
 . . . S LRORNST=$P($G(^LRO(69,LRSD,1,LRSN,2,0)),U,3)  Q:LRORNST<1
"RTN","LR7OR1",67,0)
 . . . F LRI=1:1:LRORNST I $P($G(^LRO(69,LRSD,1,LRSN,2,LRI,0)),U,7)=LRORID S LRORIDF=1 Q
"RTN","LR7OR1",68,0)
 . . I 'LRORIDF K ^TMP("LRORID",$J,LRD1)
"RTN","LR7OR1",69,0)
 . S LRD1=0 F  S LRD1=$O(^TMP("LRORID",$J,LRD1)) Q:LRD1<1  D
"RTN","LR7OR1",70,0)
 . . S ^TMP("LRORID",$J,"O",9999999-LRD1)=^TMP("LRORID",$J,LRD1) K ^TMP("LRORID",$J,LRD1)
"RTN","LR7OR1",71,0)
 . . S ^TMP("LRORID",$J)=$G(^TMP("LRORID",$J))+1
"RTN","LR7OR1",72,0)
 I $G(ORD) S ORDT=0 D  Q
"RTN","LR7OR1",73,0)
 . I $G(TEST) Q:'$D(^LAB(60,TEST,0))  S X=^(0) I $P(X,"^",4)="CH" D
"RTN","LR7OR1",74,0)
 . . I $P(X,"^",5)'="" S TSTY($P($P(X,"^",5),";",2))=TEST
"RTN","LR7OR1",75,0)
 . . I $P(X,"^",5)="" D EN^LR7OU1(TEST)
"RTN","LR7OR1",76,0)
 . I ORD["^" S ORDT=$P(ORD,"^"),ORSN=$P(ORD,"^",2) I ORDT,ORSN D SN Q  ;OE/RR 2.5 unconverted orders
"RTN","LR7OR1",77,0)
 . I ORD'[";" F  S ORDT=$O(^LRO(69,"C",ORD,ORDT)) Q:ORDT<1  S ORSN=0 F  S ORSN=$O(^LRO(69,"C",ORD,ORDT,ORSN)) Q:ORSN<1  D SN ;Early CPRS when only LR# stored
"RTN","LR7OR1",78,0)
 . I ORD[";" S ORDT=$P(ORD,";",2),ORSN=$P(ORD,";",3) I ORDT,ORSN D SN
"RTN","LR7OR1",79,0)
AGAIN ;First: get a CH entry; process; then check for another test (LR519)
"RTN","LR7OR1",80,0)
 I SUB["CH",$D(LRORID) S LRORIDX=$O(^TMP("LRORID",$J,"O",0)) I LRORIDX>0 S (SDATE,EDATE)=LRORIDX K ^TMP("LRORID",$J,"O",LRORIDX)
"RTN","LR7OR1",81,0)
 I SUB["CH" D CH^LR7OR2(SDATE,EDATE,$G(TEST),COUNT,$G(SPEC),$G(UNVER))
"RTN","LR7OR1",82,0)
 I SUB["MI" D MI(SDATE,EDATE,COUNT,$G(SPEC))
"RTN","LR7OR1",83,0)
 ;I SUB["BB" D BB(SDATE,EDATE,COUNT,$G(SPEC))
"RTN","LR7OR1",84,0)
 I SUB["AP",'$G(SPEC) D AP(SDATE,EDATE,COUNT)
"RTN","LR7OR1",85,0)
 I $D(^TMP("LRORID",$J)) G AGAIN:$O(^TMP("LRORID",$J,"O",0))>0 K ^TMP("LRORID",$J)
"RTN","LR7OR1",86,0)
 I SUB["CH" K LRORID,LRORIDX,LRD1,LRD2,LRDTST,LRORIDF,LRAN,LRAA,LRSD,LRSA,LRAD,LRUID,LRI,LRORNST
"RTN","LR7OR1",87,0)
 Q
"RTN","LR7OR1",88,0)
 ;
"RTN","LR7OR1",89,0)
 ;
"RTN","LR7OR1",90,0)
MI(SDATE,EDATE,COUNT,SPEC) ;Get MI Subscript data
"RTN","LR7OR1",91,0)
 Q:'$D(SDATE)  Q:'$D(EDATE)  Q:'$D(COUNT)  Q:'$D(CT1)
"RTN","LR7OR1",92,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",93,0)
 S IVDT=SDATE F  S IVDT=$O(^LR(LRDFN,"MI",IVDT)) Q:IVDT<1!(IVDT>EDATE)!(CT1>COUNT)  K LRX S CTR=99,CT1=CT1+1 D MI^LR7OB63A(SPEC) M ^TMP("LRRR",$J,DFN,"MI",IVDT)=^TMP("LRX",$J,69,99,63)
"RTN","LR7OR1",94,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",95,0)
 Q
"RTN","LR7OR1",96,0)
 ;
"RTN","LR7OR1",97,0)
 ;
"RTN","LR7OR1",98,0)
BB(SDATE,EDATE,COUNT,SPEC) ;Get BB Subscript data
"RTN","LR7OR1",99,0)
 Q
"RTN","LR7OR1",100,0)
 Q:'$D(SDATE)  Q:'$D(EDATE)  Q:'$D(COUNT)  Q:'$D(CT1)
"RTN","LR7OR1",101,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",102,0)
 S IVDT=SDATE F  S IVDT=$O(^LR(LRDFN,"BB",IVDT)) Q:IVDT<1!(IVDT>EDATE)!(CT1>COUNT)  K LRX S CTR=99,CT1=CT1+1 D BB1^LR7OB63(SPEC) M ^TMP("LRRR",$J,DFN,"BB",IVDT)=^TMP("LRX",$J,69,99,63)
"RTN","LR7OR1",103,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",104,0)
 Q
"RTN","LR7OR1",105,0)
 ;
"RTN","LR7OR1",106,0)
 ;
"RTN","LR7OR1",107,0)
AP(SDATE,EDATE,COUNT) ;Get AP Subscript data (EM,CY,AU,SP)
"RTN","LR7OR1",108,0)
 N LRSS K ^TMP("LRX",$J)
"RTN","LR7OR1",109,0)
 Q:'$D(SDATE)  Q:'$D(EDATE)  Q:'$D(COUNT)  Q:'$D(CT1)
"RTN","LR7OR1",110,0)
 S CTR=99 D AU^LR7OB63D M ^TMP("LRRR",$J,DFN,"AU")=^TMP("LRX",$J,69,99,63)
"RTN","LR7OR1",111,0)
 F LRSS="EM","CY","SP" S IVDT=SDATE F  S IVDT=$O(^LR(LRDFN,LRSS,IVDT)) Q:IVDT<1!(IVDT>EDATE)!(CT1>COUNT)  K LRX S CTR=99,CT1=CT1+1 D SS^LR7OB63C(LRSS) M ^TMP("LRRR",$J,DFN,LRSS,IVDT)=^TMP("LRX",$J,69,99,63)
"RTN","LR7OR1",112,0)
 K ^TMP("LRX",$J)
"RTN","LR7OR1",113,0)
 Q
"RTN","LR7OR1",114,0)
 ;
"RTN","LR7OR1",115,0)
 ;
"RTN","LR7OR1",116,0)
TEST ;Test the RR entry point
"RTN","LR7OR1",117,0)
 N X1,X2,X3,X4,X5,DIC,%DT,X,Y
"RTN","LR7OR1",118,0)
 K ^TMP("LRRR",$J),^TMP("LRAPI",$J) S (X1,X2,X3,X4,X5)=""
"RTN","LR7OR1",119,0)
 D ^LRDPA Q:'DFN
"RTN","LR7OR1",120,0)
O1 W !,"Select Lab Order #: " R X:DTIME Q:'$T!(X["^")
"RTN","LR7OR1",121,0)
 I $L(X),'$D(^LRO(69,"C",X)) W !!,X_" is not a valid order number." G O1
"RTN","LR7OR1",122,0)
 I $L(X),$D(^LRO(69,"C",X)) S X5=X,DIC=60,DIC(0)="AEQM",DIC("A")="Select Test (optional): " D ^DIC S X3=$S(Y>0:+Y,1:"") Q:Y<0&(X["^")  G T2
"RTN","LR7OR1",123,0)
 S %DT="AETS",%DT("A")="Select Start Date: " D ^%DT S X1=$S(Y>0:Y,1:"") I Y<0,X["^" Q
"RTN","LR7OR1",124,0)
 S %DT="AETS",%DT("A")="Select End Date: " D ^%DT S X2=$S(Y>0:Y,1:"") I Y<0,X["^" Q
"RTN","LR7OR1",125,0)
 S DIC=60,DIC(0)="AEQM",DIC("A")="Look for specific Test: " D ^DIC S X3=$S(Y>0:+Y,1:"") I Y<0,X["^" Q
"RTN","LR7OR1",126,0)
 I 'X3 D
"RTN","LR7OR1",127,0)
T1 . W !,"Enter a lab area to search on (ALL,CH,MI,AP): " R X:DTIME Q:'$T!(X["^")
"RTN","LR7OR1",128,0)
 . IF "ALLCHMIAP"'[X W !!,"Bad input, enter ALL, CH, MI, or AP" G T1
"RTN","LR7OR1",129,0)
 . S X4=$S("ALLCHMIAP"[X:X,1:"")
"RTN","LR7OR1",130,0)
T2 D RR(DFN,X5,X1,X2,X4,X3)
"RTN","LR7OR1",131,0)
 W !!,$S($D(^TMP("LRRR",$J)):"Data found!",1:"NO Data found!")
"RTN","LR7OR1",132,0)
 Q
"RTN","LR7OR1",133,0)
 ;
"RTN","LR7OR1",134,0)
 ;
"RTN","LR7OR1",135,0)
DTRNG ; Date range setup
"RTN","LR7OR1",136,0)
 I $G(EDATE)<$G(SDATE) S X=EDATE,EDATE=SDATE,SDATE=X
"RTN","LR7OR1",137,0)
 I $G(EDATE) S EDATE=$S($L(EDATE,".")=2:EDATE+.000001,1:EDATE+1)
"RTN","LR7OR1",138,0)
 ;I $G(SDATE) S SDATE=$S($L(SDATE,".")=2:SDATE-.000001,1:SDATE)
"RTN","LR7OR1",139,0)
 S SDATE=$S($G(SDATE):9999999-SDATE,1:9999999),EDATE=$S($G(EDATE):9999999-EDATE,1:1)
"RTN","LR7OR1",140,0)
 S X=EDATE,EDATE=SDATE,SDATE=X
"RTN","LR7OR1",141,0)
 Q
"RTN","LR7OR1",142,0)
 ;
"RTN","LR7OR1",143,0)
 ;
"RTN","LR7OR1",144,0)
SN ; Get the subs
"RTN","LR7OR1",145,0)
 ;
"RTN","LR7OR1",146,0)
 N I,II,III,LRPLSAVE
"RTN","LR7OR1",147,0)
 ;
"RTN","LR7OR1",148,0)
 ; Set flag to not print performing lab in called routines, wait for control returns to this routine.
"RTN","LR7OR1",149,0)
 S LRPLSAVE=1
"RTN","LR7OR1",150,0)
 ;
"RTN","LR7OR1",151,0)
 D 69^LR7OB69(ORDT,ORSN) Q:'$D(^TMP("LRX",$J,69))
"RTN","LR7OR1",152,0)
 ;
"RTN","LR7OR1",153,0)
 ; List performing laboratories
"RTN","LR7OR1",154,0)
 I $G(LRPLSAVE(0)) D
"RTN","LR7OR1",155,0)
 . N CTR,IVDT
"RTN","LR7OR1",156,0)
 . S CTR=LRPLSAVE(0),IVDT=0
"RTN","LR7OR1",157,0)
 . F  S IVDT=$O(LRPLSAVE("CH",IVDT)) Q:IVDT<1  D
"RTN","LR7OR1",158,0)
 . . D PLS^LR7OB63
"RTN","LR7OR1",159,0)
 ;
"RTN","LR7OR1",160,0)
 S II=0
"RTN","LR7OR1",161,0)
 F  S II=$O(^TMP("LRX",$J,69,II)) Q:II<1  D
"RTN","LR7OR1",162,0)
 . S DRAW=$P($G(^TMP("LRX",$J,69,II,68)),"^",4),SS=$P($G(^LRO(68,+$P(^TMP("LRX",$J,69,II),"^",4),0)),"^",2)
"RTN","LR7OR1",163,0)
 . S III=0
"RTN","LR7OR1",164,0)
 . F  S III=$O(^TMP("LRX",$J,69,II,63,III)) Q:III<1  I $S($D(TSTY):$D(TSTY(III)),1:1) D
"RTN","LR7OR1",165,0)
 . . I $P(^TMP("LRX",$J,69,II,63,III),U,6)="" Q
"RTN","LR7OR1",166,0)
 . . S I=III
"RTN","LR7OR1",167,0)
 . . I $D(^TMP("LRRR",$J,DFN,SS,9999999-DRAW,I)) F  S I=I+.00000001 I '$D(^TMP("LRRR",$J,DFN,SS,9999999-DRAW,I)) Q
"RTN","LR7OR1",168,0)
 . . S ^TMP("LRRR",$J,DFN,SS,9999999-DRAW,I)=^TMP("LRX",$J,69,II,63,III)
"RTN","LR7OR1",169,0)
 . I $D(^TMP("LRX",$J,69,II,63,"N")),$O(^TMP("LRRR",$J,DFN,SS,9999999-DRAW,0)) M ^TMP("LRRR",$J,DFN,SS,9999999-DRAW,"N")=^TMP("LRX",$J,69,II,63,"N")
"RTN","LR7OR1",170,0)
 ;
"RTN","LR7OR1",171,0)
 F I="LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OR1",172,0)
 Q
"RTN","LR7OR1",173,0)
 ;
"RTN","LR7OR1",174,0)
LRDFN(IFN,FILEROOT)  ;Get LRDFN
"RTN","LR7OR1",175,0)
 ; IFN=Internal file number
"RTN","LR7OR1",176,0)
 ; FILEROOT=Root of file to get LRDFN (optional) "DPT(" is default
"RTN","LR7OR1",177,0)
 Q:'$G(IFN) ""
"RTN","LR7OR1",178,0)
 I '$L($G(FILEROOT)) S FILEROOT="DPT("
"RTN","LR7OR1",179,0)
 S X=$S($D(@("^"_FILEROOT_+IFN_",""LR"")")):+^("LR"),1:"")
"RTN","LR7OR1",180,0)
 I X,'$D(^LR(X,0)) S X=""
"RTN","LR7OR1",181,0)
 Q X
"RTN","LR7OR2")
0^2^B41093086^B40671777
"RTN","LR7OR2",1,0)
LR7OR2 ;DALOI/dcm - Get Lab results (cont.) ; 3/29/19 8:12am
"RTN","LR7OR2",2,0)
 ;;5.2;LAB SERVICE;**121,187,219,285,286,372,350,453,519**;Sep 27, 1994;Build 16
"RTN","LR7OR2",3,0)
 ;
"RTN","LR7OR2",4,0)
 ;
"RTN","LR7OR2",5,0)
CH(SDATE,EDATE,TEST,COUNT,SPEC,UNVER) ;Get CH subscript data
"RTN","LR7OR2",6,0)
 ;
"RTN","LR7OR2",7,0)
 Q:'$D(SDATE)  Q:'$D(EDATE)  Q:'$D(COUNT)  Q:'$D(CT1)
"RTN","LR7OR2",8,0)
 N GOTIT,I,IVDT,ITST,IST,TSTY,X,X0,ORD,Y6,Y12,Y16,Y19
"RTN","LR7OR2",9,0)
 I '($D(^TMP("LRORID",$J))>10) F I="LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OR2",10,0)
 ;
"RTN","LR7OR2",11,0)
 I $G(TEST) Q:'$D(^LAB(60,TEST,0))  S X=^(0) Q:$P(X,"^",4)'="CH"  D
"RTN","LR7OR2",12,0)
 . I $P(X,"^",5)'="" S TSTY($P($P(X,"^",5),";",2))=TEST
"RTN","LR7OR2",13,0)
 . I $P(X,"^",5)="" D EN^LR7OU1(TEST)
"RTN","LR7OR2",14,0)
 ;
"RTN","LR7OR2",15,0)
 S IVDT=SDATE I $D(^LR(LRDFN,"CH",SDATE)) S IVDT=SDATE-.000001
"RTN","LR7OR2",16,0)
 F  S IVDT=$O(^LR(LRDFN,"CH",IVDT)) Q:IVDT<1!(IVDT>EDATE)!(CT1>COUNT)  D
"RTN","LR7OR2",17,0)
 . S X0=^LR(LRDFN,"CH",IVDT,0),Y6=$S($P(X0,"^",3):"F",1:"P"),Y12=$P(X0,"^",4),Y19=$P(X0,"^",5),Y16=$P(X0,"^",6),ORD=$$ORD(LRDFN,IVDT)
"RTN","LR7OR2",18,0)
 . S GOTIT=0
"RTN","LR7OR2",19,0)
 . I '$G(UNVER),Y6="P" Q  ;Unverified data not requested
"RTN","LR7OR2",20,0)
 . I $G(SPEC),Y19'=SPEC Q  ;Specimen specified
"RTN","LR7OR2",21,0)
 . I '$D(TSTY) S ITST=1 F  S ITST=$O(^LR(LRDFN,"CH",IVDT,ITST)) Q:ITST<1  S X=^(ITST) D SETTST(ITST,X)
"RTN","LR7OR2",22,0)
 . S IST=0 F  S IST=$O(TSTY(IST)) Q:IST<1  I $D(^LR(LRDFN,"CH",IVDT,IST)) S X=^(IST) D SETTST(IST,X)
"RTN","LR7OR2",23,0)
 . I $O(^TMP("LRRR",$J,DFN,"CH",IVDT,0)) D NOTE(LRDFN,IVDT)
"RTN","LR7OR2",24,0)
 . Q:'GOTIT
"RTN","LR7OR2",25,0)
 . S CT1=CT1+1
"RTN","LR7OR2",26,0)
 . ; Display ordering provider
"RTN","LR7OR2",27,0)
 . D ORDP($P($G(^LR(LRDFN,"CH",IVDT,0)),"^",10))
"RTN","LR7OR2",28,0)
 . ; Display report released date/time
"RTN","LR7OR2",29,0)
 . D RRDT($P(X0,"^",3))
"RTN","LR7OR2",30,0)
 . ; List performing laboratories
"RTN","LR7OR2",31,0)
 . D PLS
"RTN","LR7OR2",32,0)
 ;
"RTN","LR7OR2",33,0)
 I '($D(^TMP("LRORID",$J))>10) F I="LRPLS","LRPLS-ADDR" K ^TMP(I,$J)
"RTN","LR7OR2",34,0)
 Q
"RTN","LR7OR2",35,0)
 ;
"RTN","LR7OR2",36,0)
 ;
"RTN","LR7OR2",37,0)
SETTST(ISUB,ZERO) ;Set test data in ^TMP
"RTN","LR7OR2",38,0)
 ; ISUB= test subscript
"RTN","LR7OR2",39,0)
 ; ZERO= 0th node at ^LR(LRDFN,"CH",IVDT,TST)
"RTN","LR7OR2",40,0)
 N LRX,PORDER,X,Y,Y1,Y2,Y3,Y4,Y5,Y9,Y10,Y11,Y14
"RTN","LR7OR2",41,0)
 S X=ZERO,Y1=ISUB,Y1=$O(^LAB(60,"C","CH;"_Y1_";1",0)),Y2=$P(X,"^"),Y3=$P(X,"^",2)
"RTN","LR7OR2",42,0)
 Q:'Y1  Q:"IN"[$P(^LAB(60,Y1,0),"^",3)  S Y15=$P($G(^LAB(60,Y1,.1)),"^")
"RTN","LR7OR2",43,0)
 S (Y9,Y10,Y11,Y14)=""
"RTN","LR7OR2",44,0)
 I $P($G(^LAB(60,Y1,64)),"^") S Y9=$P(^(64),"^"),Y9=$P(^LAM(Y9,0),"^",2),Y10=$P(^(0),"^"),Y11="99NLT"
"RTN","LR7OR2",45,0)
 ;
"RTN","LR7OR2",46,0)
 S LRX=$$TSTRES^LRRPU(LRDFN,"CH",IVDT,ISUB,Y1)
"RTN","LR7OR2",47,0)
 S Y2=$P(LRX,"^"),Y3=$P(LRX,"^",2),Y4=$P(LRX,"^",5),Y5=$$EN^LRLRRVF($P(LRX,"^",3),$P(LRX,"^",4))
"RTN","LR7OR2",48,0)
 I $P(LRX,"^",7) S Y14="T"
"RTN","LR7OR2",49,0)
 S Y2=$$TRIM^XLFSTR($$RESULT^LR7OB63(Y1,Y2),"RL"," ")
"RTN","LR7OR2",50,0)
 ;
"RTN","LR7OR2",51,0)
 ; Determine print order and adjust if duplicate
"RTN","LR7OR2",52,0)
 S PORDER=$P($G(^LAB(60,Y1,.1)),"^",6),PORDER=$S(PORDER:PORDER,1:998+(ISUB/10000000))
"RTN","LR7OR2",53,0)
 I $D(^TMP("LRRR",$J,DFN,"CH",IVDT,PORDER)) F PORDER=PORDER:.00000001 I '$D(^TMP("LRRR",$J,DFN,"CH",IVDT,PORDER)) Q
"RTN","LR7OR2",54,0)
 ;
"RTN","LR7OR2",55,0)
 S ^TMP("LRRR",$J,DFN,"CH",IVDT,PORDER)=Y1_"^"_Y2_"^"_Y3_"^"_Y4_"^"_Y5_"^"_Y6_"^^^"_Y9_"^"_Y10_"^"_Y11_"^"_Y12_"^^"_Y14_"^"_Y15_"^"_Y16_"^"_$G(ORD)_"^^"_Y19
"RTN","LR7OR2",56,0)
 I $P(LRX,"^",6) S ^TMP("LRPLS",$J,$P(LRX,"^",6),$P(^LAB(60,Y1,0),"^"))=""
"RTN","LR7OR2",57,0)
 S GOTIT=1
"RTN","LR7OR2",58,0)
 Q
"RTN","LR7OR2",59,0)
 ;
"RTN","LR7OR2",60,0)
 ;
"RTN","LR7OR2",61,0)
NOTE(LRDFN,IVDT) ;Get comments
"RTN","LR7OR2",62,0)
 N IFN
"RTN","LR7OR2",63,0)
 S IFN=0
"RTN","LR7OR2",64,0)
 F  S IFN=$O(^LR(LRDFN,"CH",IVDT,1,IFN)) Q:IFN<1  S X=^(IFN,0),^TMP("LRRR",$J,DFN,"CH",IVDT,"N",IFN)=X
"RTN","LR7OR2",65,0)
 Q
"RTN","LR7OR2",66,0)
 ;
"RTN","LR7OR2",67,0)
 ;
"RTN","LR7OR2",68,0)
TEST(Y,DFN,ORD,SDATE,EDATE,SUB,TEST,FLAG,COUNT) ;Test network calls
"RTN","LR7OR2",69,0)
 ; Called from TIU
"RTN","LR7OR2",70,0)
 ; COUNT = count of results to send, results with the same date/time count as 1
"RTN","LR7OR2",71,0)
 N IVDT,SSUB,SEQ,CTR
"RTN","LR7OR2",72,0)
 Q:'$G(DFN)
"RTN","LR7OR2",73,0)
 D RR^LR7OR1(DFN,$G(ORD),$G(SDATE),$G(EDATE),$G(SUB),$G(TEST),$G(FLAG),$G(COUNT))
"RTN","LR7OR2",74,0)
 I '$D(^TMP("LRRR",$J)) S Y(1)="No Lab Data" Q
"RTN","LR7OR2",75,0)
 S CTR=0,SSUB="",COUNT=$S($G(COUNT):COUNT,1:9999999)
"RTN","LR7OR2",76,0)
 F  S SSUB=$O(^TMP("LRRR",$J,DFN,SSUB)) Q:SSUB=""  S IVDT=0 F  S IVDT=$O(^TMP("LRRR",$J,DFN,SSUB,IVDT)) Q:IVDT<1  S SEQ=0 F  S SEQ=$O(^TMP("LRRR",$J,DFN,SSUB,IVDT,SEQ)) Q:SEQ<1  D
"RTN","LR7OR2",77,0)
 . S CTR=CTR+1,^TMP("LRAPI",$J,CTR)=9999999-IVDT_"^"_SSUB_"^"_^TMP("LRRR",$J,DFN,SSUB,IVDT,SEQ)
"RTN","LR7OR2",78,0)
 S Y=$NA(^TMP("LRAPI",$J))
"RTN","LR7OR2",79,0)
 Q
"RTN","LR7OR2",80,0)
 ;
"RTN","LR7OR2",81,0)
 ;
"RTN","LR7OR2",82,0)
T60(Y,IFN) ;Get tests from file 60
"RTN","LR7OR2",83,0)
 ; If IFN is not passed then the whole file is sent.
"RTN","LR7OR2",84,0)
 N CTR S CTR=0
"RTN","LR7OR2",85,0)
 I $D(IFN) Q:'$D(^LAB(60,IFN,0))  S Y(1)=IFN_"^"_$P(^LAB(60,IFN,0),"^") Q
"RTN","LR7OR2",86,0)
 S NAME="" F  S NAME=$O(^LAB(60,"B",NAME)) Q:NAME=""  S IFN=0 F  S IFN=$O(^LAB(60,"B",NAME,IFN)) Q:IFN<1  I $D(^LAB(60,IFN,0)) S CTR=CTR+1,Y(CTR)=IFN_"^"_NAME
"RTN","LR7OR2",87,0)
 Q
"RTN","LR7OR2",88,0)
 ;
"RTN","LR7OR2",89,0)
 ;
"RTN","LR7OR2",90,0)
T64(Y,IFN) ;Get tests from file 64
"RTN","LR7OR2",91,0)
 ; If IFN is not passed then the whole file is sent, if entry has a link to file 60
"RTN","LR7OR2",92,0)
 N CTR S CTR=0
"RTN","LR7OR2",93,0)
 I $D(IFN) Q:'$D(^LAM(IFN,0))  Q:'$D(^LAB(60,"AC",IFN))  S Y(1)=IFN_"^"_$P(^LAM(IFN,0),"^") Q
"RTN","LR7OR2",94,0)
 S NAME="" F  S NAME=$O(^LAM("B",NAME)) Q:NAME=""  S IFN=0 F  S IFN=$O(^LAM("B",NAME,IFN)) Q:IFN<1  I $D(^LAM(IFN,0)),$D(^LAB(60,"AC",IFN)) S CTR=CTR+1,Y(CTR)=IFN_"^"_NAME
"RTN","LR7OR2",95,0)
 Q
"RTN","LR7OR2",96,0)
 ;
"RTN","LR7OR2",97,0)
 ;
"RTN","LR7OR2",98,0)
ORD(LRDFN,IVDT) ;Get order # for entry in file 63
"RTN","LR7OR2",99,0)
 ; LRDFN=Lab Patient #
"RTN","LR7OR2",100,0)
 ; IVDT=Inverse Date/time in 63 (^LR(LRDFN,"CH",IVDT))
"RTN","LR7OR2",101,0)
 Q:'$G(LRDFN)  Q:'$G(IVDT)
"RTN","LR7OR2",102,0)
 N X0,X6,X,AC,ACD,ACN
"RTN","LR7OR2",103,0)
 S X0=$G(^LR(LRDFN,"CH",IVDT,0)),X6=$P(X0,"^",6) I X6="" Q ""
"RTN","LR7OR2",104,0)
 S X=$P(X6," "),X=$O(^LRO(68,"B",X,0)) I 'X Q ""
"RTN","LR7OR2",105,0)
 S AC=X,ACD=+$P(X0,"."),ACN=$P(X6," ",3) I '$D(^LRO(68,AC,1,ACD,1,ACN,0)) Q ""
"RTN","LR7OR2",106,0)
 S X=$P($G(^LRO(68,AC,1,ACD,1,ACN,.1)),"^")
"RTN","LR7OR2",107,0)
 Q X
"RTN","LR7OR2",108,0)
 ;
"RTN","LR7OR2",109,0)
 ;
"RTN","LR7OR2",110,0)
ORDP(LRPROV) ; Display ordering provider in comment
"RTN","LR7OR2",111,0)
 N LRY,CNT
"RTN","LR7OR2",112,0)
 S LRY=$$NAME^XUSER(LRPROV,"G")
"RTN","LR7OR2",113,0)
 S CNT=$O(^TMP("LRRR",$J,DFN,"CH",IVDT,"N",""),-1)+1
"RTN","LR7OR2",114,0)
 S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="Ordering Provider: "_LRY
"RTN","LR7OR2",115,0)
 Q
"RTN","LR7OR2",116,0)
 ;
"RTN","LR7OR2",117,0)
 ;
"RTN","LR7OR2",118,0)
RRDT(LRDT) ; Display report released date/time
"RTN","LR7OR2",119,0)
 N LRY,CNT
"RTN","LR7OR2",120,0)
 I LRDT S LRY=$$FMTE^XLFDT(LRDT,"M")
"RTN","LR7OR2",121,0)
 E  S LRY=""
"RTN","LR7OR2",122,0)
 S CNT=$O(^TMP("LRRR",$J,DFN,"CH",IVDT,"N",""),-1)+1
"RTN","LR7OR2",123,0)
 S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="Report Released Date/Time: "_LRY,CNT=CNT+1
"RTN","LR7OR2",124,0)
 Q
"RTN","LR7OR2",125,0)
 ;
"RTN","LR7OR2",126,0)
 ;
"RTN","LR7OR2",127,0)
PLS ; List reporting and performing laboratories
"RTN","LR7OR2",128,0)
 ; If multiple performing labs then list tests associated with each lab.
"RTN","LR7OR2",129,0)
 ;
"RTN","LR7OR2",130,0)
 N CNT,LINE,LLEN,LRPLS,LRX,MPLS,PLS,TESTNAME,X
"RTN","LR7OR2",131,0)
 ;
"RTN","LR7OR2",132,0)
 S CNT=$O(^TMP("LRRR",$J,DFN,"CH",IVDT,"N",""),-1)+1
"RTN","LR7OR2",133,0)
 ;
"RTN","LR7OR2",134,0)
 ; Reporting Laboratory
"RTN","LR7OR2",135,0)
 I $$GET^XPAR("DIV^PKG","LR REPORTS FACILITY PRINT",1,"Q")#2 D
"RTN","LR7OR2",136,0)
 . S LRX=+$G(^LR(LRDFN,"CH",IVDT,"RF"))
"RTN","LR7OR2",137,0)
 . I LRX<1 Q
"RTN","LR7OR2",138,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRX)
"RTN","LR7OR2",139,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=" ",CNT=CNT+1
"RTN","LR7OR2",140,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="Reporting Lab: "_$P(LINE,"^"),CNT=CNT+1
"RTN","LR7OR2",141,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="               "_$P(LINE,"^",2),CNT=CNT+1
"RTN","LR7OR2",142,0)
 ;
"RTN","LR7OR2",143,0)
 S PLS=$O(^TMP("LRPLS",$J,0)),MPLS=0
"RTN","LR7OR2",144,0)
 I $O(^TMP("LRPLS",$J,PLS)) S MPLS=1 ; multiple performing labs
"RTN","LR7OR2",145,0)
 S LRPLS=0
"RTN","LR7OR2",146,0)
 F  S LRPLS=$O(^TMP("LRPLS",$J,LRPLS)) Q:LRPLS<1  D
"RTN","LR7OR2",147,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=" ",CNT=CNT+1
"RTN","LR7OR2",148,0)
 . I MPLS D
"RTN","LR7OR2",149,0)
 . . S TESTNAME="",LINE="For test(s): ",LLEN=13
"RTN","LR7OR2",150,0)
 . . F  S TESTNAME=$O(^TMP("LRPLS",$J,LRPLS,TESTNAME)) Q:TESTNAME=""  D
"RTN","LR7OR2",151,0)
 . . . S X=$L(TESTNAME)
"RTN","LR7OR2",152,0)
 . . . I (LLEN+X)>240 S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=LINE,CNT=CNT+1,LINE="",LLEN=0
"RTN","LR7OR2",153,0)
 . . . S LINE=LINE_$S(LLEN>13:", ",1:"")_TESTNAME,LLEN=LLEN+X+$S(LLEN>13:2,1:0)
"RTN","LR7OR2",154,0)
 . . I LINE'="" S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=LINE,CNT=CNT+1
"RTN","LR7OR2",155,0)
 . S LINE=$$PLSADDR^LR7OSUM2(LRPLS)
"RTN","LR7OR2",156,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="Performing Lab: "_$P(LINE,"^"),CNT=CNT+1
"RTN","LR7OR2",157,0)
 . S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)="                "_$P(LINE,"^",2),CNT=CNT+1
"RTN","LR7OR2",158,0)
 ;
"RTN","LR7OR2",159,0)
 S ^TMP("LRRR",$J,DFN,"CH",IVDT,"N",CNT)=" "
"RTN","LR7OR2",160,0)
 ;
"RTN","LR7OR2",161,0)
 K ^TMP("LRPLS",$J)
"RTN","LR7OR2",162,0)
 Q
"RTN","LRGV")
0^3^B43021696^B42006074
"RTN","LRGV",1,0)
LRGV ;DALIO/RWF - INSTRUMENT GROUP VERIFY DATA ;2/5/91  13:26
"RTN","LRGV",2,0)
 ;;5.2;LAB SERVICE;**269,411,519**;Sep 27, 1994;Build 16
"RTN","LRGV",3,0)
 ;
"RTN","LRGV",4,0)
 N LRANYAA,LRDUZ,LRUID,LRVBY,LRGVP
"RTN","LRGV",5,0)
 ;
"RTN","LRGV",6,0)
 D ^LRGVK,^LRPARAM
"RTN","LRGV",7,0)
 I $G(LREND) D END Q
"RTN","LRGV",8,0)
 ;
"RTN","LRGV",9,0)
 S U="^",LRSS="CH",LROUTINE=$P(^LAB(69.9,1,3),U,2),(LRANYAA,LRUID,LRVBY)=""
"RTN","LRGV",10,0)
 ;
"RTN","LRGV",11,0)
 ; Get user's initials to use to verify results
"RTN","LRGV",12,0)
 S X=DUZ D DUZ^LRX
"RTN","LRGV",13,0)
 X ^%ZOSF("EOFF")
"RTN","LRGV",14,0)
 N DIR
"RTN","LRGV",15,0)
 S DIR(0)="FAO^1:10",DIR("A")="Please enter your initials to verify: "
"RTN","LRGV",16,0)
 D ^DIR K DIR
"RTN","LRGV",17,0)
 X ^%ZOSF("EON")
"RTN","LRGV",18,0)
 I $D(DIRUT)!(Y'=LRUSI) D END Q
"RTN","LRGV",19,0)
 ;
"RTN","LRGV",20,0)
 D ^LRGP1
"RTN","LRGV",21,0)
 I LREND D END Q
"RTN","LRGV",22,0)
 ;
"RTN","LRGV",23,0)
 D COM
"RTN","LRGV",24,0)
 I LREND D NOP,END Q
"RTN","LRGV",25,0)
 ;
"RTN","LRGV",26,0)
 S %ZIS="Q" D ^%ZIS
"RTN","LRGV",27,0)
 I POP D END Q
"RTN","LRGV",28,0)
 ;
"RTN","LRGV",29,0)
 I $D(IO("Q")) D  Q
"RTN","LRGV",30,0)
 . N ZTDTH,ZTRTN,ZTSAVE,ZTDESC
"RTN","LRGV",31,0)
 . K IO("Q")
"RTN","LRGV",32,0)
 . ;LRGVP = indicates to downstream routines that sending to a printer
"RTN","LRGV",33,0)
 . S LRGVP=1
"RTN","LRGV",34,0)
 . S ZTRTN="DQ^LRGV",ZTSAVE("LR*")="",ZTSAVE("^TMP(""LR"",$J,")="",ZTDESC="Group verify (EA, EL, EW)"
"RTN","LRGV",35,0)
 . D ^%ZTLOAD
"RTN","LRGV",36,0)
 . U IO(0) W !,"Task ",$S($G(ZTSK):ZTSK,1:"NOT")," Queued"
"RTN","LRGV",37,0)
 . D END
"RTN","LRGV",38,0)
 ;
"RTN","LRGV",39,0)
DQ ;
"RTN","LRGV",40,0)
 U IO
"RTN","LRGV",41,0)
 S LRNOW=$$NOW^XLFDT,LRDT=$$FMTE^XLFDT(LRNOW,"1M"),(LREND,LRPAGE)=0
"RTN","LRGV",42,0)
 S LRLLNM=$P(^LRO(68.2,LRLL,0),"^")
"RTN","LRGV",43,0)
 D HDR
"RTN","LRGV",44,0)
 D LRTRAY:LRWT="T",ACCLST:LRWT="A",SEQ:LRWT="M",WRKLST:LRWT="W"
"RTN","LRGV",45,0)
 I $E(IOST,1,2)="P-" W @IOF
"RTN","LRGV",46,0)
 ;
"RTN","LRGV",47,0)
END ;
"RTN","LRGV",48,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRGV",49,0)
 E  D ^%ZISC
"RTN","LRGV",50,0)
 D ^LRGVK
"RTN","LRGV",51,0)
 K LRCSQQ,LRLLNM,LRNGS,LRPAGE
"RTN","LRGV",52,0)
 Q
"RTN","LRGV",53,0)
 ;
"RTN","LRGV",54,0)
 ;
"RTN","LRGV",55,0)
ACCLST ; Verify by accession number/UID
"RTN","LRGV",56,0)
 ;
"RTN","LRGV",57,0)
 S LRVWLE=""
"RTN","LRGV",58,0)
 ;
"RTN","LRGV",59,0)
 ; Verify by accession number
"RTN","LRGV",60,0)
 I LRVBY=1 D
"RTN","LRGV",61,0)
 . S LRAN=LRFAN
"RTN","LRGV",62,0)
 . F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) Q:LRAN<1!(LRAN>LRLIX)  D ACC2  Q:LREND
"RTN","LRGV",63,0)
 . I $L(LRVWLE) D
"RTN","LRGV",64,0)
 . . S $P(^LRO(68,LRAA,1,LRAD,2),"^")=LRUSI
"RTN","LRGV",65,0)
 . . S $P(^LRO(68,LRAA,1,LRAD,2),"^",4)=LRVWLE
"RTN","LRGV",66,0)
 ;
"RTN","LRGV",67,0)
 ; Verify by UID
"RTN","LRGV",68,0)
 I LRVBY=2 D
"RTN","LRGV",69,0)
 . S LRANYAA=+$P($G(^LRO(68.2,LRLL,10,LRPROF,0)),"^",3),LRUID=""
"RTN","LRGV",70,0)
 . F  D NEXT^LRVRA Q:LRUID=""  D ACC2  Q:LREND
"RTN","LRGV",71,0)
 ;
"RTN","LRGV",72,0)
 Q
"RTN","LRGV",73,0)
 ;
"RTN","LRGV",74,0)
 ;
"RTN","LRGV",75,0)
ACC2 ; Only select those entries in ^LAH that match the accession area and
"RTN","LRGV",76,0)
 ; date selected by the user.
"RTN","LRGV",77,0)
 ;
"RTN","LRGV",78,0)
 I $Y>(IOSL-10) D HDR Q:LREND
"RTN","LRGV",79,0)
 W ! D DASH^LRX
"RTN","LRGV",80,0)
 W !,"Accession #: ",LRAN
"RTN","LRGV",81,0)
 I LRVBY=2 D
"RTN","LRGV",82,0)
 . W " [UID: ",LRUID,"]"
"RTN","LRGV",83,0)
 . I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRGV",84,0)
 . . W " No accession on file for this UID."
"RTN","LRGV",85,0)
 . W " <",$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2)),"^"),">"
"RTN","LRGV",86,0)
 ;
"RTN","LRGV",87,0)
 I '$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",3) D  Q
"RTN","LRGV",88,0)
 . W " Has not been received. Unable to verify."
"RTN","LRGV",89,0)
 ;
"RTN","LRGV",90,0)
 I +^LRO(68,LRAA,1,LRAD,1,LRAN,3)>$$NOW^XLFDT D  Q
"RTN","LRGV",91,0)
 . W " Has a collection time in the future. Unable to verify."
"RTN","LRGV",92,0)
 ;
"RTN","LRGV",93,0)
 I $O(^LAH(LRLL,1,"C",LRAN,0))<1 D  Q
"RTN","LRGV",94,0)
 . W " NO Instrument Data Found."
"RTN","LRGV",95,0)
 ;
"RTN","LRGV",96,0)
 S LRSQ=0
"RTN","LRGV",97,0)
 F  S LRSQ=$O(^LAH(LRLL,1,"C",LRAN,LRSQ)) Q:LRSQ<1  D  Q:LREND
"RTN","LRGV",98,0)
 . S X=^LAH(LRLL,1,LRSQ,0)
"RTN","LRGV",99,0)
 . I LRAA'=$P(X,"^",3)!(LRAD'=$P(X,"^",4)) Q
"RTN","LRGV",100,0)
 . S LRAN=$P(X,"^",5)
"RTN","LRGV",101,0)
 . I LRAN D STUFF^LRGV1
"RTN","LRGV",102,0)
 Q
"RTN","LRGV",103,0)
 ;
"RTN","LRGV",104,0)
 ;
"RTN","LRGV",105,0)
LRTRAY ; Verify by tray/cup
"RTN","LRGV",106,0)
 ;
"RTN","LRGV",107,0)
 F LRTRAY=LRFTRAY:1:LRLTRAY D  Q:LREND
"RTN","LRGV",108,0)
 . I $Y>(IOSL-10) D HDR Q:LREND
"RTN","LRGV",109,0)
 . W ! D DASH^LRX
"RTN","LRGV",110,0)
 . W !!,"Start TRAY: ",LRTRAY
"RTN","LRGV",111,0)
 . D TR2
"RTN","LRGV",112,0)
 Q
"RTN","LRGV",113,0)
 ;
"RTN","LRGV",114,0)
 ;
"RTN","LRGV",115,0)
TR2 ; Verify by tray/cup
"RTN","LRGV",116,0)
 ; Only select those entries in ^LAH that match the accession area and date
"RTN","LRGV",117,0)
 ; selected by the user.
"RTN","LRGV",118,0)
 N LRSC,LREC,X
"RTN","LRGV",119,0)
 ;
"RTN","LRGV",120,0)
 ; Figure out starting and ending cups for this tray
"RTN","LRGV",121,0)
 S LRSC=$S(LRTRAY=LRFTRAY:LRFCUP,1:1)
"RTN","LRGV",122,0)
 S LREC=$S(LRTRAY=LRLTRAY:LRLCUP,1:LRMAXCUP)
"RTN","LRGV",123,0)
 ;
"RTN","LRGV",124,0)
 F LRCUP=LRSC:1:LREC D  Q:LREND
"RTN","LRGV",125,0)
 . S LRITC=LRTRAY_";"_LRCUP
"RTN","LRGV",126,0)
 . I $Y>(IOSL-10) D HDR Q:LREND
"RTN","LRGV",127,0)
 . W ! D DASH^LRX
"RTN","LRGV",128,0)
 . W !,"Tray ",$J(LRTRAY,3)," Cup ",$J(LRCUP,3)
"RTN","LRGV",129,0)
 . I $O(^LAH(LRLL,1,"B",LRITC,0))<1 W ?35,"No Instrument Data Found" Q
"RTN","LRGV",130,0)
 . ;
"RTN","LRGV",131,0)
 . S LRSQ=0
"RTN","LRGV",132,0)
 . F  S LRSQ=$O(^LAH(LRLL,1,"B",LRITC,LRSQ)) Q:LRSQ<1  D  Q:LREND
"RTN","LRGV",133,0)
 . . I '$D(^LAH(LRLL,1,+LRSQ,0)) D  Q
"RTN","LRGV",134,0)
 . . . K ^LAH(LRLL,1,"B",LRTIC,LRSQ)
"RTN","LRGV",135,0)
 . . . W ?35,"No Instrument Data Found"
"RTN","LRGV",136,0)
 . . S X=^LAH(LRLL,1,LRSQ,0)
"RTN","LRGV",137,0)
 . . I LRAA'=$P(X,"^",3)!(LRAD'=$P(X,"^",4)) Q
"RTN","LRGV",138,0)
 . . S LRAN=$P(X,"^",5)
"RTN","LRGV",139,0)
 . . I LRAN D STUFF^LRGV1 Q
"RTN","LRGV",140,0)
 . . W ?35," Does not have a link to an Accession."
"RTN","LRGV",141,0)
 Q
"RTN","LRGV",142,0)
 ;
"RTN","LRGV",143,0)
 ;
"RTN","LRGV",144,0)
SEQ ; Verify by sequence number
"RTN","LRGV",145,0)
 ; Only select those entries in ^LAH that match the accession area and date
"RTN","LRGV",146,0)
 ; selected by the user.
"RTN","LRGV",147,0)
 ;
"RTN","LRGV",148,0)
 N X
"RTN","LRGV",149,0)
 ;
"RTN","LRGV",150,0)
 S LRSQ=LRSQ-1
"RTN","LRGV",151,0)
 F  S LRSQ=$O(^LAH(LRLL,1,LRSQ)) Q:LRSQ<1!(LRSQ>LRESEQ)  D  Q:LREND
"RTN","LRGV",152,0)
 . I $Y>(IOSL-10) D HDR Q:LREND
"RTN","LRGV",153,0)
 . W ! D DASH^LRX
"RTN","LRGV",154,0)
 . S X=^LAH(LRLL,1,LRSQ,0)
"RTN","LRGV",155,0)
 . I LRAA'=$P(X,"^",3)!(LRAD'=$P(X,"^",4)) Q
"RTN","LRGV",156,0)
 . S LRAN=$P(X,"^",5)
"RTN","LRGV",157,0)
 . I LRAN D STUFF^LRGV1 Q
"RTN","LRGV",158,0)
 . W !!,"SEQ: ",LRSQ,". Does not have a link to an Accession."
"RTN","LRGV",159,0)
 Q
"RTN","LRGV",160,0)
 ;
"RTN","LRGV",161,0)
 ;
"RTN","LRGV",162,0)
WRKLST ; Verify by worklist
"RTN","LRGV",163,0)
 ; Only select those entries in file #68.2 that match the profile selected
"RTN","LRGV",164,0)
 ; by the user.
"RTN","LRGV",165,0)
 ;
"RTN","LRGV",166,0)
 N X
"RTN","LRGV",167,0)
 ;
"RTN","LRGV",168,0)
 S LRCUP=LRCUP-1
"RTN","LRGV",169,0)
 F  S LRCUP=$O(^LRO(68.2,LRLL,1,1,1,LRCUP)) Q:'LRCUP!(LRCUP>LRECUP)  D  Q:LREND
"RTN","LRGV",170,0)
 . I $Y>(IOSL-10) D HDR Q:LREND
"RTN","LRGV",171,0)
 . W ! D DASH^LRX
"RTN","LRGV",172,0)
 . S X=^LRO(68.2,LRLL,1,1,1,LRCUP,0)
"RTN","LRGV",173,0)
 . I $P(X,"^",4),$P(X,"^",4)'=LRPROF Q
"RTN","LRGV",174,0)
 . S LRAA=$P(X,"^"),LRAD=$P(X,"^",2),LRAN=$P(X,"^",3)
"RTN","LRGV",175,0)
 . W !,"Sequence #",$J(LRCUP,4)
"RTN","LRGV",176,0)
 . I $O(^LAH(LRLL,1,"C",+LRAN,0))<1 W ?35,"No Instrument Data Found" Q
"RTN","LRGV",177,0)
 . ;
"RTN","LRGV",178,0)
 . S LRSQ=0
"RTN","LRGV",179,0)
 . F  S LRSQ=$O(^LAH(LRLL,1,"C",LRAN,LRSQ)) Q:LRSQ<1  D STUFF^LRGV1  Q:LREND
"RTN","LRGV",180,0)
 Q
"RTN","LRGV",181,0)
 ;
"RTN","LRGV",182,0)
 ;
"RTN","LRGV",183,0)
COM ; Ask common questions
"RTN","LRGV",184,0)
 ;
"RTN","LRGV",185,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRGV",186,0)
 ;
"RTN","LRGV",187,0)
 S LRVRFYAL=0
"RTN","LRGV",188,0)
 I $D(^XUSEC("LRSUPER",DUZ))!1 D
"RTN","LRGV",189,0)
 . S DIR(0)="YAO",DIR("B")="NO"
"RTN","LRGV",190,0)
 . S DIR("A",1)="Verify accessions specified, even if"
"RTN","LRGV",191,0)
 . S DIR("A")=" DELTA check or CRITICAL range flag? "
"RTN","LRGV",192,0)
 . D ^DIR
"RTN","LRGV",193,0)
 . I $D(DIRUT) S LREND=1 Q
"RTN","LRGV",194,0)
 . S LRVRFYAL=Y
"RTN","LRGV",195,0)
 ;
"RTN","LRGV",196,0)
 I LREND Q
"RTN","LRGV",197,0)
 ;
"RTN","LRGV",198,0)
 K DIR
"RTN","LRGV",199,0)
 S DIR(0)="YO",DIR("A")="Everything OK",DIR("B")="YES"
"RTN","LRGV",200,0)
 D ^DIR
"RTN","LRGV",201,0)
 I $D(DIRUT)!(Y'=1) S LREND=1
"RTN","LRGV",202,0)
 Q
"RTN","LRGV",203,0)
 ;
"RTN","LRGV",204,0)
 ;
"RTN","LRGV",205,0)
NOP ;
"RTN","LRGV",206,0)
 W !!,"NOTHING VERIFIED"
"RTN","LRGV",207,0)
 Q
"RTN","LRGV",208,0)
 ;
"RTN","LRGV",209,0)
 ;
"RTN","LRGV",210,0)
HDR ;
"RTN","LRGV",211,0)
 ;
"RTN","LRGV",212,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRGV",213,0)
 ;
"RTN","LRGV",214,0)
 I $E(IOST,1,2)="C-",'$D(ZTQUEUED),LRPAGE D
"RTN","LRGV",215,0)
 . S DIR(0)="E" D ^DIR
"RTN","LRGV",216,0)
 . I $D(DIRUT) S LREND=1
"RTN","LRGV",217,0)
 I LREND Q
"RTN","LRGV",218,0)
 ;
"RTN","LRGV",219,0)
 I LRPAGE!($E(IOST,1,2)="C-") W @IOF
"RTN","LRGV",220,0)
 S LRPAGE=LRPAGE+1
"RTN","LRGV",221,0)
 W "Group verification report - Verify with",$S(LRVRFYAL:"",1:"out")," flags"
"RTN","LRGV",222,0)
 W ?(IOM-27)," Date: ",LRDT
"RTN","LRGV",223,0)
 W !,"Load/Work list: ",LRLLNM,"  Panel: ",LRPANEL,?(IOM-27)," Page: ",LRPAGE
"RTN","LRGV",224,0)
 ;
"RTN","LRGV",225,0)
 ; Check if task has been asked to stop.
"RTN","LRGV",226,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","LRGV",227,0)
 . S (LREND,ZTSTOP)=1
"RTN","LRGV",228,0)
 . W !!,"*** Report requested to stop by TaskMan ***"
"RTN","LRGV",229,0)
 . W !,"*** Task #",$G(ZTQUEUED,"UNKNOWN")," stopped at ",$$HTE^XLFDT($H)," ***"
"RTN","LRGV",230,0)
 Q
"RTN","LRGV2")
0^7^B10216842^B10100135
"RTN","LRGV2",1,0)
LRGV2 ;DALOI/STAFF - PART2 OF INSTRUMENT GROUP VERIFY DATA ;02/11/11  12:21
"RTN","LRGV2",2,0)
 ;;5.2;LAB SERVICE;**121,153,269,350,438,519**;Sep 27, 1994;Build 16
"RTN","LRGV2",3,0)
 ;
"RTN","LRGV2",4,0)
 ;removed NEW of LRGVP in line below - LR*5.2*519
"RTN","LRGV2",5,0)
 N LRSB,LRX
"RTN","LRGV2",6,0)
 ;
"RTN","LRGV2",7,0)
 I $P(LR0,U,8)'[LRMETH S $P(^LR(LRDFN,"CH",LRIDT,0),U,8)=LRMETH_";"_$P(LR0,U,8)
"RTN","LRGV2",8,0)
 S LRLDT=LRIDT
"RTN","LRGV2",9,0)
 D FINDPS
"RTN","LRGV2",10,0)
 I LRLDT="" W !,"NO DELTA SAMPLE",!
"RTN","LRGV2",11,0)
 ;
"RTN","LRGV2",12,0)
 ; If results exist in ^LR then delete results from LAH.
"RTN","LRGV2",13,0)
 I LRVF D
"RTN","LRGV2",14,0)
 . S LRX=1
"RTN","LRGV2",15,0)
 . F  S LRX=$O(^LR(LRDFN,"CH",LRIDT,LRX)) Q:LRX'>0  I ^(LRX)'["pending" K ^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRGV2",16,0)
 ;
"RTN","LRGV2",17,0)
 S LRX=1
"RTN","LRGV2",18,0)
 F  S LRX=$O(^LAH(LRLL,1,LRSQ,LRX)) Q:LRX'>0  I $D(^TMP("LR",$J,"TMP",LRX)) S LRSB(LRX)=^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRGV2",19,0)
 ;
"RTN","LRGV2",20,0)
 S LRVRM=1,(LRDELTA,LRCRIT,LRCNT,LRNX)=0
"RTN","LRGV2",21,0)
 F  S LRNX=$O(LRORD(LRNX)) Q:LRNX'>0  D DC
"RTN","LRGV2",22,0)
 ;
"RTN","LRGV2",23,0)
 I 'LRVRFYAL,(LRDELTA!LRCRIT) D NOP Q
"RTN","LRGV2",24,0)
 ;
"RTN","LRGV2",25,0)
 S LREXEC=LRCFL D ^LREXEC:LRCFL]""
"RTN","LRGV2",26,0)
 ;
"RTN","LRGV2",27,0)
 S:'$P(^LR(LRDFN,"CH",LRIDT,0),U,5) $P(^LR(LRDFN,"CH",LRIDT,0),U,5)=LRSPEC
"RTN","LRGV2",28,0)
 ;
"RTN","LRGV2",29,0)
 ; Move comments from LAH to LR
"RTN","LRGV2",30,0)
 I $O(^LAH(LRLL,1,LRSQ,1,0)) D LRSBCOM^LRVR4
"RTN","LRGV2",31,0)
 ;
"RTN","LRGV2",32,0)
 ; Verify results and update files.
"RTN","LRGV2",33,0)
 K LRPRGSQ
"RTN","LRGV2",34,0)
 D V11^LRVR3
"RTN","LRGV2",35,0)
 W !!,">> Accession #: ",LRAN," VERIFIED <<"
"RTN","LRGV2",36,0)
 ;
"RTN","LRGV2",37,0)
 ; Display results which were not verified.
"RTN","LRGV2",38,0)
 I $O(^LAH(LRLL,1,LRSQ,1))>1 D
"RTN","LRGV2",39,0)
 . W !,"  STILL TO BE VERIFIED:"
"RTN","LRGV2",40,0)
 . S LRX=1
"RTN","LRGV2",41,0)
 . F  S LRX=$O(^LAH(LRLL,1,LRSQ,LRX)) Q:LRX<1  W ?25,$$GET1^DID(63.04,LRX,"","LABEL"),!
"RTN","LRGV2",42,0)
 ;
"RTN","LRGV2",43,0)
 D DASH^LRX
"RTN","LRGV2",44,0)
 ;
"RTN","LRGV2",45,0)
 K LRSB
"RTN","LRGV2",46,0)
 Q
"RTN","LRGV2",47,0)
 ;
"RTN","LRGV2",48,0)
 ;
"RTN","LRGV2",49,0)
DC ; Perform range and delta checks
"RTN","LRGV2",50,0)
 ;
"RTN","LRGV2",51,0)
 N LRCW,LRQ,X,Y
"RTN","LRGV2",52,0)
 ;
"RTN","LRGV2",53,0)
 S LRSB=+LRORD(LRNX),LRTS=$S($D(^TMP("LR",$J,"TMP",LRSB)):^(LRSB),1:0) Q:'LRTS
"RTN","LRGV2",54,0)
 S X=$P($G(LRSB(LRSB)),U),X1="",LRFLG=""
"RTN","LRGV2",55,0)
 I X=""!(X["pending") Q
"RTN","LRGV2",56,0)
 I LRLDT'="" S X1=$G(^LR(LRDFN,"CH",LRLDT,LRSB))
"RTN","LRGV2",57,0)
 ;
"RTN","LRGV2",58,0)
 ; Setup variable for range and delta checking
"RTN","LRGV2",59,0)
 D V25^LRVER5
"RTN","LRGV2",60,0)
 ;
"RTN","LRGV2",61,0)
 ; Display test name, results
"RTN","LRGV2",62,0)
 S X=$P(LRSB(LRSB),"^"),LRCW=8
"RTN","LRGV2",63,0)
 W !,$P(^LAB(60,+LRTS,0),"^"),?31,@LRFP," "
"RTN","LRGV2",64,0)
 ;
"RTN","LRGV2",65,0)
 ; Do delta checking
"RTN","LRGV2",66,0)
 S X=$P(LRSB(LRSB),"^"),Y=0,LRQ=""
"RTN","LRGV2",67,0)
 I LRDEL'="" S LRQ=1 D XDELTACK^LRVERA S:Y LRDELTA=Y
"RTN","LRGV2",68,0)
 ;
"RTN","LRGV2",69,0)
 ; Do range checking
"RTN","LRGV2",70,0)
 D RANGE^LRVR4
"RTN","LRGV2",71,0)
 I LRFLG["*" S LRCRIT=1
"RTN","LRGV2",72,0)
 ;
"RTN","LRGV2",73,0)
 ; Display test flags and units
"RTN","LRGV2",74,0)
 W $$LJ^XLFSTR(LRFLG,2),?56," ",$P(LRNGS,"^",7)
"RTN","LRGV2",75,0)
 I LRFLG["*" D DISPFLG^LRVER4
"RTN","LRGV2",76,0)
 ;
"RTN","LRGV2",77,0)
 Q
"RTN","LRGV2",78,0)
 ;
"RTN","LRGV2",79,0)
 ;
"RTN","LRGV2",80,0)
NOP ;
"RTN","LRGV2",81,0)
 W !,">> Accession #: ",LRAN," NOT VERIFIED"
"RTN","LRGV2",82,0)
 I LRDELTA W " - DELTA check flag"
"RTN","LRGV2",83,0)
 I LRCRIT W " - CRITICAL range flag"
"RTN","LRGV2",84,0)
 W " <<"
"RTN","LRGV2",85,0)
 I $E(IOST,1,2)="C-" W $C(7)
"RTN","LRGV2",86,0)
 Q
"RTN","LRGV2",87,0)
 ;
"RTN","LRGV2",88,0)
 ;
"RTN","LRGV2",89,0)
INFO ;
"RTN","LRGV2",90,0)
 W !,"Sequence #: ",LRSQ
"RTN","LRGV2",91,0)
 S X=$P(^LAH(LRLL,1,LRSQ,0),"^",1),Y=$P(^(0),"^",2)
"RTN","LRGV2",92,0)
 W:$L(X)!$L(Y) ?20,"TRAY: ",X,?33,"CUP: ",Y,?45,"DUPLICATE "
"RTN","LRGV2",93,0)
 Q
"RTN","LRGV2",94,0)
 ;
"RTN","LRGV2",95,0)
 ;
"RTN","LRGV2",96,0)
FINDPS ; Find previous specimen to use for delta check
"RTN","LRGV2",97,0)
 ; Specimen needs to be within "days back (LRTM60)" parameter and have
"RTN","LRGV2",98,0)
 ; a dataname in common with a dataname on the sequence entry in LAH.
"RTN","LRGV2",99,0)
 ;
"RTN","LRGV2",100,0)
 N LRQUIT,LRX
"RTN","LRGV2",101,0)
 ;
"RTN","LRGV2",102,0)
 S LRQUIT=0
"RTN","LRGV2",103,0)
 F  S LRLDT=$O(^LR(LRDFN,"CH",LRLDT)) Q:'LRLDT  D  Q:LRQUIT
"RTN","LRGV2",104,0)
 . I LRLDT>LRTM60 S LRLDT="",LRQUIT=1 Q
"RTN","LRGV2",105,0)
 . S LRX=$G(^LR(LRDFN,"CH",LRLDT,0))
"RTN","LRGV2",106,0)
 . I $P(LRX,U,5)'=LRSPEC!('$P(LRX,U,3)) Q
"RTN","LRGV2",107,0)
 . S LRX=1
"RTN","LRGV2",108,0)
 . F  S LRX=$O(^LAH(LRLL,1,LRSQ,LRX)) Q:LRX'>0  I $D(^LR(LRDFN,"CH",LRLDT,LRX)) S LRQUIT=1 Q
"RTN","LRGV2",109,0)
 ;
"RTN","LRGV2",110,0)
 Q
"RTN","LRWU5")
0^5^B36481062^B21988281
"RTN","LRWU5",1,0)
LRWU5 ;SLC/RWF/BA - ADD A NEW DATA NAME TO FILE 63 ; 5/15/87  22:53 ;
"RTN","LRWU5",2,0)
 ;;5.2;LAB SERVICE;**140,171,177,206,316,519**;Sep 27, 1994;Build 16
"RTN","LRWU5",3,0)
 ;
"RTN","LRWU5",4,0)
 ; Reference to ^DD(63.04 supported by DBIA #7053
"RTN","LRWU5",5,0)
 ; Reference to ^XMB(1 supported by DBIA #10091
"RTN","LRWU5",6,0)
 ; Reference to ^XUSEC supported by DBIA #10076
"RTN","LRWU5",7,0)
 ;
"RTN","LRWU5",8,0)
ACCESS ;
"RTN","LRWU5",9,0)
 I '$D(^XUSEC("LRLIASON",DUZ)) W $C(7),!,"You do not have access to this option" Q
"RTN","LRWU5",10,0)
BEGIN ;
"RTN","LRWU5",11,0)
 N LRMOD
"RTN","LRWU5",12,0)
 S U="^",LREND=0,DTIME=$S($D(DTIME):DTIME,1:300),LRMOD=0
"RTN","LRWU5",13,0)
 W !!,"This option will add a new data name to the lab package." D DT^LRX,TEST
"RTN","LRWU5",14,0)
END ;
"RTN","LRWU5",15,0)
 K %,DA,DIC,DIK,DIR,I,LRDEC,LREND,LRI,LRLO,LMX,LRMIN,LRNAME,LROK,LRPIECE,LRSET,LRTYPE,LROK1,Q1,Q2,Q3,Q4,Q5,X,Y
"RTN","LRWU5",16,0)
 I $G(DA)]"" L -^DD(63.04,DA)
"RTN","LRWU5",17,0)
 Q
"RTN","LRWU5",18,0)
TEST ;
"RTN","LRWU5",19,0)
 F I=0:0 S LROK=1,DA=0 R !,"DATA NAME: ",X:DTIME Q:'$T!(X[U)!'$L(X)  S:X["?" X="=" D CHECK Q:LROK!(LREND)
"RTN","LRWU5",20,0)
 Q:LREND=1
"RTN","LRWU5",21,0)
 I 'DA Q:'$T!(X[U)!'$L(X)
"RTN","LRWU5",22,0)
 F I=0:0 R !,"Enter data type for test: (N)umeric, (S)et of Codes, or (F)ree text? ",X:DTIME Q:X[U!(X="")!(X="N")!(X="S")!(X="F")  W !,"Enter 'N', 'S', 'F', or '^'"
"RTN","LRWU5",23,0)
 I X=""!(X[U) Q
"RTN","LRWU5",24,0)
 ;VMP OIFO BAY PINES;VGF;LR*5.2*316; H 5 IF ERROR
"RTN","LRWU5",25,0)
 S Q1=X D @$S(Q1="N":"NUM",Q1="S":"CODES",1:"FREE") I 'LROK W !,"Nothing has been added." H 5 Q
"RTN","LRWU5",26,0)
 ;
"RTN","LRWU5",27,0)
 S $P(^DD(63.04,0),U,4)=$P(^DD(63.04,0),U,4)+1
"RTN","LRWU5",28,0)
 S DIK="^DD(63.04,",DA(1)=63.04 D IX1^DIK
"RTN","LRWU5",29,0)
 W !!,"'",LRNAME,"' added as a new data name" D DISPLAY^LRWU6 W !!,"You must now add a new test in the LABORATORY TEST file and use",!,LRNAME," as the entry for the DATA NAME field."
"RTN","LRWU5",30,0)
 Q
"RTN","LRWU5",31,0)
CHECK ;
"RTN","LRWU5",32,0)
 X $P(^DD(0,.01,0),U,5) I '$D(X) W $C(7)," ??",!,"ANSWER MUST BE 2-30 CHARACTERS AND NOT CONTAIN '='" S LROK=0 Q
"RTN","LRWU5",33,0)
 S LRNAME=X,DIC="^DD(63.04,",DIC(0)="XM" D ^DIC I Y>0 W $C(7),!,"This data name already exists" S LROK=0 Q
"RTN","LRWU5",34,0)
 ;checking "B" cross reference since non-locking in FileMan
"RTN","LRWU5",35,0)
 ;could create data corruption - LR*5.2*519
"RTN","LRWU5",36,0)
 I $D(^DD(63.04,"B",LRNAME)) D  Q
"RTN","LRWU5",37,0)
 . S LROK=0
"RTN","LRWU5",38,0)
 . W $C(7),!,"This data name exists in the ^DD(63.04,""B"" cross reference only."
"RTN","LRWU5",39,0)
 . W !,"Enter a support ticket if assistance is needed to correct this file."
"RTN","LRWU5",40,0)
 S DA=$S($P($G(^XMB(1,1,"XUS")),U,17):$P(^("XUS"),U,17),1:0)*1000 D:'DA SITE Q:'LROK  F I=0:0 S DA=DA+1 Q:'$D(^DD(63.04,DA))
"RTN","LRWU5",41,0)
 ;
"RTN","LRWU5",42,0)
LOCK ;
"RTN","LRWU5",43,0)
 ;adding lock - LR*5.2*519
"RTN","LRWU5",44,0)
 ;not attempting to determine the next IEN by checking the
"RTN","LRWU5",45,0)
 ;zero node because last ien pointer appears to be inaccurate
"RTN","LRWU5",46,0)
 ;in several environments
"RTN","LRWU5",47,0)
 ;
"RTN","LRWU5",48,0)
 W !!,"Please wait a maximum of "_$G(DILOCKTM,5)_" seconds while it is"
"RTN","LRWU5",49,0)
 W !,"determined whether internal entry number "_DA_" is available....."
"RTN","LRWU5",50,0)
 L +^DD(63.04,DA):$G(DILOCKTM,5)
"RTN","LRWU5",51,0)
 I '$T D  G:'$G(DUOUT)&'$G(DTOUT) LOCK I $G(DUOUT)!($G(DTOUT)) S LREND=1
"RTN","LRWU5",52,0)
 . W !!,"Someone else is defining this internal entry number."
"RTN","LRWU5",53,0)
 . W !,"Trying again to find a new internal entry number."
"RTN","LRWU5",54,0)
 . F I=0:0 S DA=DA+1 Q:'$D(^DD(63.04,DA))
"RTN","LRWU5",55,0)
 . ;giving the user a chance to exit gracefully in case the process
"RTN","LRWU5",56,0)
 . ;of trying to find a new IEN ends up in an endless loop due to too 
"RTN","LRWU5",57,0)
 . ;many users defining new entries.
"RTN","LRWU5",58,0)
 . W !
"RTN","LRWU5",59,0)
 . S DIR(0)="E",DIR("A")="Press ENTER to continue or ^ to exit" D ^DIR
"RTN","LRWU5",60,0)
 Q:LREND
"RTN","LRWU5",61,0)
 W !!,"Internal entry number "_DA_" is available.",!!
"RTN","LRWU5",62,0)
 F I=0:0 W !,"ARE YOU ADDING ",LRNAME," (SUBFIELD # ",DA,") AS A NEW DATA NAME" S %=2 D YN^DICN Q:%  W " Answer 'Y'es or 'N'o."
"RTN","LRWU5",63,0)
 I %'=1 S LROK=0 Q
"RTN","LRWU5",64,0)
 Q
"RTN","LRWU5",65,0)
SITE ;
"RTN","LRWU5",66,0)
 W !,"Your site number is not defined, indicating that fileman was not ",!,"installed correctly.  Contact your site manager!"
"RTN","LRWU5",67,0)
 S LROK=0,LREND=1 Q
"RTN","LRWU5",68,0)
NUM ;
"RTN","LRWU5",69,0)
 ;
"RTN","LRWU5",70,0)
MIN ;
"RTN","LRWU5",71,0)
 K DTOUT,DUOUT
"RTN","LRWU5",72,0)
 S DIR(0)="F"
"RTN","LRWU5",73,0)
 S DIR("A")="Minimum value: "
"RTN","LRWU5",74,0)
 ;S DIR("B")=1
"RTN","LRWU5",75,0)
 S DIR("?")="The smallest result value: "
"RTN","LRWU5",76,0)
 D ^DIR
"RTN","LRWU5",77,0)
 I $D(DUOUT)!($D(DTOUT)) S LROK=0 QUIT
"RTN","LRWU5",78,0)
 S Q3=Y
"RTN","LRWU5",79,0)
MAX ;
"RTN","LRWU5",80,0)
 K DTOUT,DUOUT
"RTN","LRWU5",81,0)
 S DIR(0)="F"
"RTN","LRWU5",82,0)
 S DIR("A")="Maximum value: "
"RTN","LRWU5",83,0)
 S DIR("B")=1
"RTN","LRWU5",84,0)
 S DIR("?")="The maximum result THIS TEST will ever be: "
"RTN","LRWU5",85,0)
 D ^DIR
"RTN","LRWU5",86,0)
 I $D(DUOUT)!($D(DTOUT))!(Y<0) S LROK=0 QUIT
"RTN","LRWU5",87,0)
 S Q4=Y
"RTN","LRWU5",88,0)
DECIMAL ;
"RTN","LRWU5",89,0)
 K DTDOUT,DUTOU
"RTN","LRWU5",90,0)
 S DIR(0)="F"
"RTN","LRWU5",91,0)
 S DIR("A")="Decimal value: "
"RTN","LRWU5",92,0)
 S DIR("B")=1
"RTN","LRWU5",93,0)
 S DIR("?")="The number of decimal places this result will need: "
"RTN","LRWU5",94,0)
 D ^DIR
"RTN","LRWU5",95,0)
 I $D(DUOUT)!($D(DTOUT))!(Y<0) S LROK=0 QUIT
"RTN","LRWU5",96,0)
 S Q5=Y
"RTN","LRWU5",97,0)
 ;
"RTN","LRWU5",98,0)
 D NAME
"RTN","LRWU5",99,0)
 Q:'LROK
"RTN","LRWU5",100,0)
 S ^DD(63.04,DA,0)=LRNAME_"^NXJ"_($L(Q4)+Q5+$S(Q5:1,1:0))_","_Q5_"^^"_DA_";1^"_"S Q9="""_Q3_","_Q4_","_Q5_""" D ^LRNUM",^(3)="TYPE A "_$S(Q5:"",1:"WHOLE ")_"NUMBER BETWEEN "_Q3_" AND "_Q4,^("DT")=DT
"RTN","LRWU5",101,0)
 Q
"RTN","LRWU5",102,0)
CODES ;
"RTN","LRWU5",103,0)
 S Q2="",LROK1=1 F I=0:0 R !,"INTERNALLY-STORED CODE: // ",X:DTIME D CHK1 Q:'LROK1  R "   WILL STAND FOR: // ",X:DTIME D CHK2 Q:'LROK1
"RTN","LRWU5",104,0)
 I '$L(Q2) S LROK=0 Q
"RTN","LRWU5",105,0)
 D NAME
"RTN","LRWU5",106,0)
 Q:'LROK
"RTN","LRWU5",107,0)
 S ^DD(63.04,DA,0)=LRNAME_"^S^"_Q2_"^"_DA_";1^Q",^(3)="",^("DT")=DT
"RTN","LRWU5",108,0)
 Q
"RTN","LRWU5",109,0)
CHK1 I X[U!'$T!'$L(X) S LROK1=0 Q
"RTN","LRWU5",110,0)
 ;VMP OIFO BAY PINES;VGF;LR*5.2*316
"RTN","LRWU5",111,0)
 I X[";"!(X[":") W !,": and ; not allowed ",$C(7) S Q3="",LROK1=0 Q
"RTN","LRWU5",112,0)
 S Q3=X
"RTN","LRWU5",113,0)
 Q
"RTN","LRWU5",114,0)
CHK2 I X[U!'$T!'$L(X) S LROK1=0 Q
"RTN","LRWU5",115,0)
 ;VMP OIFO BAY PINES;VGF;LR*5.2*316
"RTN","LRWU5",116,0)
 I X[";"!(X[":") W !,": and ; not allowed ",$C(7) S Q2="",LROK1=0 Q
"RTN","LRWU5",117,0)
 S Q4=X,Q2=Q2_Q3_":"_Q4_";" I $L(Q2)+$L(LRNAME)+9>245 W !,"Too many codes* ",$C(7) S Q2="",LROK1=0
"RTN","LRWU5",118,0)
 Q
"RTN","LRWU5",119,0)
FREE ;
"RTN","LRWU5",120,0)
 F I=0:0 R !,"Minimum length: ",X:DTIME Q:X[U!'$T!(X'<1&(X'>20)&(+X=X))  W " Enter a whole number from 1 to 20"
"RTN","LRWU5",121,0)
 I X[U!'$T S LROK=0 Q
"RTN","LRWU5",122,0)
 S Q3=X
"RTN","LRWU5",123,0)
 ;---LR*5.2*140 Changed max length from 80 to 50
"RTN","LRWU5",124,0)
 F I=0:0 R !,"Maximum length: ",X:DTIME Q:X[U!'$T!(X'<Q3&(X'>50)&(+X=X))  W " Enter a whole number between ",Q3," to 50"
"RTN","LRWU5",125,0)
 I X[U!'$T S LROK=0 Q
"RTN","LRWU5",126,0)
 S Q4=X
"RTN","LRWU5",127,0)
 D NAME
"RTN","LRWU5",128,0)
 Q:'LROK
"RTN","LRWU5",129,0)
 S ^DD(63.04,DA,0)=LRNAME_"^F^^"_DA_";1^K:$L(X)>"_Q4_"!($L(X)<"_Q3_") X",^(3)="ANSWER MUST BE "_Q3_"-"_Q4_" CHARACTERS IN LENGTH",^("DT")=DT
"RTN","LRWU5",130,0)
 Q
"RTN","LRWU5",131,0)
 ;
"RTN","LRWU5",132,0)
NAME ;check before filing to make sure a user on another session
"RTN","LRWU5",133,0)
 ;isn't filing the same name under a different IEN
"RTN","LRWU5",134,0)
 ;Variable LRMOD is passed as 1 from LRWU6 from the option
"RTN","LRWU5",135,0)
 ;"Modify an Existing Data Name"
"RTN","LRWU5",136,0)
 ;
"RTN","LRWU5",137,0)
 I $D(^DD(63.04,"B",LRNAME)),'$G(LRMOD) D
"RTN","LRWU5",138,0)
 . S LROK=0
"RTN","LRWU5",139,0)
 . W !,"This data name has already been added by someone else"
"RTN","LRWU5",140,0)
 . W !,"in another session after you selected the data name."
"RTN","LRWU5",141,0)
 . W !,"Nothing is being saved from your session since the data name is now on file."
"RTN","LRWU5",142,0)
 Q
"RTN","LRWU6")
0^6^B26245556^B22920488
"RTN","LRWU6",1,0)
LRWU6 ;DALOI/STAFF - MODIFY AN EXISTING DATA NAME ;11/04/11  10:19
"RTN","LRWU6",2,0)
 ;;5.2;LAB SERVICE;**316,402,350,519**;Sep 27, 1994;Build 16
"RTN","LRWU6",3,0)
 ;
"RTN","LRWU6",4,0)
 ; Reference to ^DD(63.04 supported by DBIA #7053
"RTN","LRWU6",5,0)
 ; Reference to ^XUSEC supported by DBIA #10076
"RTN","LRWU6",6,0)
 ;
"RTN","LRWU6",7,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRWU6",8,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRWU6",9,0)
 ;
"RTN","LRWU6",10,0)
 ;
"RTN","LRWU6",11,0)
ACCESS ;
"RTN","LRWU6",12,0)
 N %,DA,DIC,DIK,I,LRDEC,LRFIX,LRHI,LRLO,LRMAX,LRMIN,LRNAME,LROK
"RTN","LRWU6",13,0)
 N LRPIECE,LRSET,LRTYPE,LROK1,Q1,Q2,Q3,Q4,Q5,X,Y,LRMOD
"RTN","LRWU6",14,0)
 ;
"RTN","LRWU6",15,0)
 ;ZEXCEPT: DTIME
"RTN","LRWU6",16,0)
 ;
"RTN","LRWU6",17,0)
 I '$D(^XUSEC("LRLIASON",DUZ)) W $C(7),!,"You do not have access to this option" Q
"RTN","LRWU6",18,0)
 ;
"RTN","LRWU6",19,0)
BEGIN ;
"RTN","LRWU6",20,0)
 ;Variable LRMOD is used by LRWU5 in determining whether the "add" or "modify"
"RTN","LRWU6",21,0)
 ;option is being invoked
"RTN","LRWU6",22,0)
 S U="^",DTIME=$$DTIME^XUP(DUZ),LRMOD=1
"RTN","LRWU6",23,0)
 W !!,"This option allows modifying an existing data name."
"RTN","LRWU6",24,0)
 D DT^LRX,TEST
"RTN","LRWU6",25,0)
 ;
"RTN","LRWU6",26,0)
END K %,DA,DIC,DIK,I,LRDEC,LRHI,LRLO,LRMAX,LRMIN,LRNAME,LROK,LRPIECE,LRSET,LRTYPE,LROK1,Q1,Q2,Q3,Q4,Q5,X,Y
"RTN","LRWU6",27,0)
 I $G(DA)]"" L -^DD(63.04,DA)
"RTN","LRWU6",28,0)
 Q
"RTN","LRWU6",29,0)
 ;
"RTN","LRWU6",30,0)
 ;
"RTN","LRWU6",31,0)
TEST ;
"RTN","LRWU6",32,0)
 ;
"RTN","LRWU6",33,0)
 ;ZEXCEPT: %,DA,DIC,DIK,LRFIX,LRNAME,LROK,Q1,X,Y
"RTN","LRWU6",34,0)
 ;
"RTN","LRWU6",35,0)
 S LROK=1,DIC="^DD(63.04,",DIC(0)="AEM",DIC("S")="I Y>1.999999"
"RTN","LRWU6",36,0)
 D ^DIC Q:Y'>0
"RTN","LRWU6",37,0)
 S DA=+Y,LRNAME=$P(^DD(63.04,DA,0),U)
"RTN","LRWU6",38,0)
 ;
"RTN","LRWU6",39,0)
 D DISPLAY
"RTN","LRWU6",40,0)
 D LOCK
"RTN","LRWU6",41,0)
 Q:'LROK
"RTN","LRWU6",42,0)
 W !
"RTN","LRWU6",43,0)
 F  W !,"Do you wish to modify this data name" S %=2 D YN^DICN Q:%  W "Answer 'Y'es or 'N'o"
"RTN","LRWU6",44,0)
 Q:%'=1
"RTN","LRWU6",45,0)
 ;
"RTN","LRWU6",46,0)
 F  W !,"Enter data type for ",LRNAME,": (N)umeric, (S)et of Codes, or (F)ree text? " R X:DTIME Q:X[U!(X="")!(X="N")!(X="S")!(X="F")  W !,"Enter 'N', 'S', 'F', or '^'"
"RTN","LRWU6",47,0)
 I X=""!(X[U) Q
"RTN","LRWU6",48,0)
 ;
"RTN","LRWU6",49,0)
 ;VMP OIFO BAY PINES;VGF;LR*5.2*316;ADDED H 5 SO USER CAN SEE ERROR MSG
"RTN","LRWU6",50,0)
 S Q1=X D @$S(Q1="N":"NUM^LRWU5",Q1="S":"CODES^LRWU5",1:"FREE^LRWU5") I 'LROK W !,"Nothing has been changed." H 5 Q
"RTN","LRWU6",51,0)
 ;
"RTN","LRWU6",52,0)
DDFIX ;Called from LRWU9 to fix piece position of data name
"RTN","LRWU6",53,0)
 N LRSPACE
"RTN","LRWU6",54,0)
 S $P(LRSPACE," ",80)=""
"RTN","LRWU6",55,0)
 S DIK="^DD(63.04,",DA(1)=63.04 D IX2^DIK
"RTN","LRWU6",56,0)
 I $G(LRFIX) S $P(^DD(63.04,DA,0),U,4)=DA_";1"
"RTN","LRWU6",57,0)
 ;
"RTN","LRWU6",58,0)
 S DIK="^DD(63.04,",DA(1)=63.04 D IX1^DIK
"RTN","LRWU6",59,0)
 I $G(LRFIX) D
"RTN","LRWU6",60,0)
 .Q:+$G(INSTALL)
"RTN","LRWU6",61,0)
 .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",62,0)
 .D SAY^XGF(24,1,"'"_LRNAME_"' has been modified to:")
"RTN","LRWU6",63,0)
 E  W:'+$G(INSTALL) !!,"'",LRNAME,"' has been modified to:"
"RTN","LRWU6",64,0)
 D:'+$G(INSTALL) DISPLAY
"RTN","LRWU6",65,0)
 Q
"RTN","LRWU6",66,0)
 ;
"RTN","LRWU6",67,0)
LOCK ;
"RTN","LRWU6",68,0)
 ;is another session also editing this entry
"RTN","LRWU6",69,0)
 L +^DD(63.04,DA):$G(DILOCKTM,5)
"RTN","LRWU6",70,0)
 I '$T D
"RTN","LRWU6",71,0)
 . S LROK=0
"RTN","LRWU6",72,0)
 . W !,$C(7),"Someone else is editing this data name."
"RTN","LRWU6",73,0)
 Q
"RTN","LRWU6",74,0)
 ;
"RTN","LRWU6",75,0)
DISPLAY ;
"RTN","LRWU6",76,0)
 ;
"RTN","LRWU6",77,0)
 ;ZEXCEPT: DA,LRTYPE
"RTN","LRWU6",78,0)
 ;
"RTN","LRWU6",79,0)
 S LRTYPE=$P(^DD(63.04,DA,0),U,2) D @$S(LRTYPE["N":"NUM",LRTYPE["S":"SET",1:"FREE")
"RTN","LRWU6",80,0)
 Q
"RTN","LRWU6",81,0)
 ;
"RTN","LRWU6",82,0)
 ;
"RTN","LRWU6",83,0)
NUM ; Numeric data type
"RTN","LRWU6",84,0)
 ;
"RTN","LRWU6",85,0)
 ;ZEXCEPT: DA,LRDEC,LRHI,LRLO,LRNAME,Q1,Q2
"RTN","LRWU6",86,0)
 ;
"RTN","LRWU6",87,0)
 S Q2=$P(^DD(63.04,DA,0),U,5,99)
"RTN","LRWU6",88,0)
 I $G(LRFIX) D
"RTN","LRWU6",89,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",90,0)
  .D SAY^XGF(24,1,"Data Name: "_LRNAME_"  Subfield #: "_DA_"  Type: NUMERIC  Input Transform: "_Q2)
"RTN","LRWU6",91,0)
 E  W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: NUMERIC",!,"Input Transform: ",Q2
"RTN","LRWU6",92,0)
 I Q2["S Q9=" S Q1=$P($P(Q2,"S Q9=",2),"""",2),LRLO=$P(Q1,","),LRHI=$P(Q1,",",2),LRDEC=$P(Q1,",",3)
"RTN","LRWU6",93,0)
 I Q2'["S Q9=" S LRLO=$S(Q2["X<":+$P(Q2,"X<",2),1:""),LRHI=$S(Q2["X>":+$P(Q2,"X>",2),1:""),LRDEC=$S(Q2["X?.E1"".""":-1+$P(Q2,"X?.E1"".""",2),1:"")
"RTN","LRWU6",94,0)
 I $G(LRFIX) D
"RTN","LRWU6",95,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",96,0)
  .D SAY^XGF(24,1,"Minimum value: "_LRLO_"  Maximum value: "_LRHI_"  Maximum # decimal digits: "_LRDEC)
"RTN","LRWU6",97,0)
 E  W !,"Minimum value: ",LRLO,!,"Maximum value: ",LRHI,!,"Maximum # decimal digits: ",LRDEC
"RTN","LRWU6",98,0)
 Q
"RTN","LRWU6",99,0)
 ;
"RTN","LRWU6",100,0)
 ;
"RTN","LRWU6",101,0)
FREE ; Free Text datatype
"RTN","LRWU6",102,0)
 ;
"RTN","LRWU6",103,0)
 ;ZEXCEPT: DA,LRMAX,LRMIN,LRNAME,Q2
"RTN","LRWU6",104,0)
 ;
"RTN","LRWU6",105,0)
 S Q2=$P(^DD(63.04,DA,0),U,5,99)
"RTN","LRWU6",106,0)
 I $G(LRFIX) D
"RTN","LRWU6",107,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",108,0)
  .D SAY^XGF(24,1,"Data Name: "_LRNAME_"  Subfield #: "_DA_"  Type: FREE TEXT  Input Transform: "_Q2)
"RTN","LRWU6",109,0)
 E  W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: FREE TEXT",!,"Input Transform: ",Q2
"RTN","LRWU6",110,0)
 S LRMIN=$S(Q2["$L(X)<":+$P(Q2,"$L(X)<",2),1:""),LRMAX=$S(Q2["$L(X)>":+$P(Q2,"$L(X)>",2),1:"")
"RTN","LRWU6",111,0)
 I $G(LRFIX) D
"RTN","LRWU6",112,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",113,0)
  .D SAY^XGF(24,1,"Minimum length: "_LRMIN_"  Maximum length: "_LRMAX)
"RTN","LRWU6",114,0)
 E  W !,"Minimum length: ",LRMIN,!,"Maximum length: ",LRMAX
"RTN","LRWU6",115,0)
 Q
"RTN","LRWU6",116,0)
 ;
"RTN","LRWU6",117,0)
 ;
"RTN","LRWU6",118,0)
SET ; Set of codes data type
"RTN","LRWU6",119,0)
 ;
"RTN","LRWU6",120,0)
 ;ZEXCEPT: DA,LRNAME,LRPIECE,LRSET,Q2
"RTN","LRWU6",121,0)
 ;
"RTN","LRWU6",122,0)
 S Q2=$P(^DD(63.04,DA,0),U,3)
"RTN","LRWU6",123,0)
 I $G(LRFIX) D
"RTN","LRWU6",124,0)
  .D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",125,0)
  .D SAY^XGF(24,1,"Data Name: "_LRNAME_"  Subfield #: "_DA_"  Type: SET OF CODES")
"RTN","LRWU6",126,0)
 E  W !!,"Data Name: ",LRNAME,"    Subfield #: ",DA,"    Type: SET OF CODES"
"RTN","LRWU6",127,0)
 F LRPIECE=1:1 S LRSET=$P(Q2,";",LRPIECE) Q:LRSET'[":"  D
"RTN","LRWU6",128,0)
  .I $G(LRFIX) D
"RTN","LRWU6",129,0)
   ..D SAY^XGF(24,1,LRSPACE)
"RTN","LRWU6",130,0)
   ..D SAY^XGF(24,1,$P(LRSET,":")_" - "_$P(LRSET,":",2))
"RTN","LRWU6",131,0)
  .E  W !,$P(LRSET,":"),"  -  ",$P(LRSET,":",2)
"RTN","LRWU6",132,0)
 Q
"RTN","LRWU6",133,0)
 ;
"RTN","LRWU6",134,0)
 ;
"RTN","LRWU6",135,0)
FIX ;
"RTN","LRWU6",136,0)
 ;
"RTN","LRWU6",137,0)
 ;ZEXCEPT: I,N,O,P,T
"RTN","LRWU6",138,0)
 ;
"RTN","LRWU6",139,0)
 S P=0
"RTN","LRWU6",140,0)
 F  S P=$O(^LR(P)) Q:P<1  S T=0 F  S T=$O(^LR(P,"CH",T)) Q:T<1  I $D(^LR(P,"CH",T,O))&('$D(^(N))) S ^(N)=^(O) K ^(O) W "."
"RTN","LRWU6",141,0)
 K P,T,O,N,I
"RTN","LRWU6",142,0)
 Q
"RTN","LRWU9")
0^8^B188843345^B186697780
"RTN","LRWU9",1,0)
LRWU9 ;DALOI/CKA - TOOL TO DETECT, FIX, AND REPORT BAD DATA NAMES ; 15 Apr 2019  2:27 PM
"RTN","LRWU9",2,0)
 ;;5.2;LAB SERVICE;**350,427,519**;Sep 27, 1994;Build 16
"RTN","LRWU9",3,0)
 ;
"RTN","LRWU9",4,0)
 ;Reference to ^PXRMINDX supported by ICR# 4290
"RTN","LRWU9",5,0)
 ;Reference to ^DD(63.04 supported by DBIA #7053
"RTN","LRWU9",6,0)
 ;
"RTN","LRWU9",7,0)
EN ; Interactive entry point.
"RTN","LRWU9",8,0)
 ;
"RTN","LRWU9",9,0)
 D DT^DICRW
"RTN","LRWU9",10,0)
 N INSTALL,LRFIX,LRNUM,LRSITE,LRSPACE,LRSUPFLG,XMDUZ,XMY
"RTN","LRWU9",11,0)
 ;
"RTN","LRWU9",12,0)
 D INIT
"RTN","LRWU9",13,0)
 S LRFIX=$$ASK(),XMY(DUZ)="",XMDUZ=DUZ,INSTALL=0
"RTN","LRWU9",14,0)
 S $P(LRSPACE," ",80)=""
"RTN","LRWU9",15,0)
 I 'LRFIX Q
"RTN","LRWU9",16,0)
 S LRFIX=LRFIX-1
"RTN","LRWU9",17,0)
 D DES^XMA21    ; call to get the email recipients list.
"RTN","LRWU9",18,0)
 D PREP^XGF     ; setup screen
"RTN","LRWU9",19,0)
 D CHKDD
"RTN","LRWU9",20,0)
 D CHK63
"RTN","LRWU9",21,0)
 D SENDMM,CLEAN^XGF
"RTN","LRWU9",22,0)
 K ^TMP("LR",$J)
"RTN","LRWU9",23,0)
 ;
"RTN","LRWU9",24,0)
 Q
"RTN","LRWU9",25,0)
 ;-------------------------------------------------------
"RTN","LRWU9",26,0)
KIDS ; Entry point for post install run.
"RTN","LRWU9",27,0)
 ;
"RTN","LRWU9",28,0)
 N INSTALL,LRFIX,LRNUM,LRSITE,LRSUPFLG,XMY
"RTN","LRWU9",29,0)
 ;
"RTN","LRWU9",30,0)
 I $G(^XMB("NETNAME"))["DOMAIN.EXT",$$PROD^XUPROD() S XMY("G.LAB DEV IRMFO@FORUM.DOMAIN.EXT")="",XMY("G.CSCLIN4@FORUM.DOMAIN.EXT")=""
"RTN","LRWU9",31,0)
 S XMY(DUZ)="",XMY("G.LMI")="",INSTALL=1
"RTN","LRWU9",32,0)
 D INIT
"RTN","LRWU9",33,0)
 ;S LRFIX=1   ; [ccr-8167] - LRFIX is set to 0 in INIT subroutine.
"RTN","LRWU9",34,0)
 D CHKDD,CHK63,SENDMM
"RTN","LRWU9",35,0)
 ;
"RTN","LRWU9",36,0)
 K ^TMP("LR",$J)
"RTN","LRWU9",37,0)
 ;
"RTN","LRWU9",38,0)
 Q
"RTN","LRWU9",39,0)
 ;-------------------------------------------------------
"RTN","LRWU9",40,0)
LRNIGHT ; Entry point for ^LRNIGHT run.
"RTN","LRWU9",41,0)
 ;
"RTN","LRWU9",42,0)
 N INSTALL,LRFIX,LRNUM,LRSITE,LRSUPFLG,XMY
"RTN","LRWU9",43,0)
 ;
"RTN","LRWU9",44,0)
 S INSTALL=1
"RTN","LRWU9",45,0)
 D INIT,CHKDD,CHK63
"RTN","LRWU9",46,0)
 S (XMY(DUZ),XMY("G.LMI"))=""
"RTN","LRWU9",47,0)
 I $G(^XMB("NETNAME"))["DOMAIN.EXT",$$PROD^XUPROD() S XMY("G.LAB DEV IRMFO@FORUM.DOMAIN.EXT")="",XMY("G.CSCLIN4@FORUM.DOMAIN.EXT")=""
"RTN","LRWU9",48,0)
 I $O(^TMP("LR",$J,"DD63.04",5))]"" D SENDMM
"RTN","LRWU9",49,0)
 ;
"RTN","LRWU9",50,0)
 K ^TMP("LR",$J),^TMP("DD63.04B",$J)
"RTN","LRWU9",51,0)
 ;
"RTN","LRWU9",52,0)
 Q
"RTN","LRWU9",53,0)
 ;-------------------------------------------------------
"RTN","LRWU9",54,0)
INIT ; Initialize variables.
"RTN","LRWU9",55,0)
 ;
"RTN","LRWU9",56,0)
 K ^TMP("LR",$J)
"RTN","LRWU9",57,0)
 D DT^DICRW
"RTN","LRWU9",58,0)
 S LRSITE=$$STA^XUAF4($$KSP^XUPARAM("INST"))
"RTN","LRWU9",59,0)
 S LRFIX=0
"RTN","LRWU9",60,0)
 ;
"RTN","LRWU9",61,0)
 Q
"RTN","LRWU9",62,0)
 ;-------------------------------------------------------
"RTN","LRWU9",63,0)
CHKDD ; CHECK DD FOR BAD DATA NAMES.
"RTN","LRWU9",64,0)
 ;First check for DDs with the same subscript
"RTN","LRWU9",65,0)
 N CNT,DA,DIK,LR60CNT,LR60IEN,LRLOC,LRDATA,LRD0,LRPC,LRSUB,LRX,LRDD,LRDDA,LRNOTEST,LRNOFIX,LRSUBCNT
"RTN","LRWU9",66,0)
 K ^TMP("LR",$J),^TMP("LR63.04B",$J)
"RTN","LRWU9",67,0)
 S LRNUM=1
"RTN","LRWU9",68,0)
 ;
"RTN","LRWU9",69,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=$$NAME^XUAF4($$KSP^XUPARAM("INST"))_" ("_$$KSP^XUPARAM("WHERE")_")      "_$$FMTE^XLFDT(DT)
"RTN","LRWU9",70,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9",71,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",72,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",73,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",74,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",75,0)
 ;
"RTN","LRWU9",76,0)
 S LRD0=1,LRDD=0,LRDDA=0
"RTN","LRWU9",77,0)
 F CNT=0:1 S LRD0=$O(^DD(63.04,LRD0)) Q:LRD0=""  D:$D(^DD(63.04,LRD0,0))
"RTN","LRWU9",78,0)
 . S LRDATA=$G(^DD(63.04,LRD0,0)) Q:LRDATA=""
"RTN","LRWU9",79,0)
 . S LRSUB=$P($P(LRDATA,U,4),";")
"RTN","LRWU9",80,0)
 . S LRPC=$P($P(LRDATA,U,4),";",2)
"RTN","LRWU9",81,0)
 . S LR60IEN="",LR60CNT=0
"RTN","LRWU9",82,0)
 . S LRX=0 F  S LRX=$O(^LAB(60,"C","CH;"_LRSUB_";"_LRPC,LRX)) Q:'LRX  D
"RTN","LRWU9",83,0)
 . . I $P($G(^LAB(60,LRX,.2)),U,1)=LRD0 D
"RTN","LRWU9",84,0)
 . . . S LR60IEN=LRX
"RTN","LRWU9",85,0)
 . . . S ^TMP("LR",$J,"SORT","LD",LRD0,LR60IEN)=""
"RTN","LRWU9",86,0)
 . . . S LR60CNT=LR60CNT+1
"RTN","LRWU9",87,0)
 . S LRSUBCNT=$G(^TMP("LR",$J,"SORT",1,LRSUB))+1
"RTN","LRWU9",88,0)
 . S ^TMP("LR",$J,"SORT",1,LRSUB)=LRSUBCNT
"RTN","LRWU9",89,0)
 . S ^TMP("LR",$J,"SORT",1,LRSUB,LRD0)=$P(LRDATA,U,1)_U_$P(LRDATA,U,4)_U_LR60IEN
"RTN","LRWU9",90,0)
 . I 'LR60IEN S ^TMP("LR",$J,"SORT","L",LRSUB,LRD0)=LRSUB ; L subscript used when Data name is not linked to a test
"RTN","LRWU9",91,0)
 . I LRPC'=1!(LRSUB'=LRD0) S ^TMP("LR",$J,"SORT","C",LRD0)=LRSUB ; C subscript used when Data name has wrong subscript location
"RTN","LRWU9",92,0)
 . I LRSUBCNT>1 S ^TMP("LR",$J,"SORT","D",LRSUB)="" ; D subscript used when more than one Data name has the same subscript
"RTN","LRWU9",93,0)
 . I LR60CNT=1 K ^TMP("LR",$J,"SORT","LD",LRD0) ; LD subscript used when there are multiple tests linked to a data name
"RTN","LRWU9",94,0)
 ;
"RTN","LRWU9",95,0)
 ; Report issues with duplicate subscript locations
"RTN","LRWU9",96,0)
 S LRSUB="" F  S LRSUB=$O(^TMP("LR",$J,"SORT","D",LRSUB)) Q:LRSUB=""  D
"RTN","LRWU9",97,0)
 . S LRSUPFLG=1
"RTN","LRWU9",98,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",99,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)="*WARNING* THE FOLLOWING DATA NAMES ARE ASSIGNED THE SAME SUBSCRIPT #"_LRSUB,LRNUM=LRNUM+1
"RTN","LRWU9",100,0)
 . S LRD0=0 F  S LRD0=$O(^TMP("LR",$J,"SORT",1,LRSUB,LRD0)) Q:LRD0=""  D
"RTN","LRWU9",101,0)
 . . S LRDATA=$G(^TMP("LR",$J,"SORT",1,LRSUB,LRD0))
"RTN","LRWU9",102,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="   - Data Name '"_$P(LRDATA,U,1)_"' (#"_LRD0_") is assigned location: "_$P(LRDATA,U,2),LRNUM=LRNUM+1
"RTN","LRWU9",103,0)
 . . I $P(LRDATA,U,3) D
"RTN","LRWU9",104,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="     (This Data Name is linked to Lab test #"_$P(LRDATA,U,3)_" "_$P(^LAB(60,$P(LRDATA,U,3),0),U)_")",LRNUM=LRNUM+1
"RTN","LRWU9",105,0)
 . . I '$P(LRDATA,U,3) D
"RTN","LRWU9",106,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="     (This Data Name is not linked to a Lab test)",LRNUM=LRNUM+1
"RTN","LRWU9",107,0)
 ;
"RTN","LRWU9",108,0)
 ; Report issues with multiple tests with the same data name
"RTN","LRWU9",109,0)
 S LRD0=0 F  S LRD0=$O(^TMP("LR",$J,"SORT","LD",LRD0)) Q:'LRD0  D
"RTN","LRWU9",110,0)
 . S LRSUPFLG=1
"RTN","LRWU9",111,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",112,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)="*WARNING* THE DATA NAME '"_$P(^DD(63.04,LRD0,0),U)_"' (#"_LRD0_") IS LINKED TO MORE THAN ONE LAB TEST:",LRNUM=LRNUM+1
"RTN","LRWU9",113,0)
 . N LRCNT
"RTN","LRWU9",114,0)
 . S LR60IEN=0 F  S LR60IEN=$O(^TMP("LR",$J,"SORT","LD",LRD0,LR60IEN)) Q:'LR60IEN  D
"RTN","LRWU9",115,0)
 . . S LRCNT=$G(LRCNT)+1
"RTN","LRWU9",116,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="   "_LRCNT_". "_$P($G(^LAB(60,LR60IEN,0)),U,1)_" (#"_LR60IEN_")"
"RTN","LRWU9",117,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9",118,0)
 ;
"RTN","LRWU9",119,0)
 ;Check - SUBSCRIPT'=FIELD #
"RTN","LRWU9",120,0)
 ;        NOT IN FIRST PIECE
"RTN","LRWU9",121,0)
 ;        OR BOTH
"RTN","LRWU9",122,0)
 ;
"RTN","LRWU9",123,0)
 ;
"RTN","LRWU9",124,0)
 I 'INSTALL D SAY^XGF(24,1,LRSPACE),SAY^XGF(24,1,"LRD0=")
"RTN","LRWU9",125,0)
 S LRD0=1
"RTN","LRWU9",126,0)
 F CNT=0:1 S LRD0=$O(^TMP("LR",$J,"SORT","C",LRD0)) Q:LRD0=""  D
"RTN","LRWU9",127,0)
 . S LRDATA=$G(^DD(63.04,LRD0,0)) Q:LRDATA=""
"RTN","LRWU9",128,0)
 . S LRSUB=$P($P(LRDATA,U,4),";")
"RTN","LRWU9",129,0)
 . S LRPC=$P($P(LRDATA,U,4),";",2)
"RTN","LRWU9",130,0)
 . I $D(^TMP("LR",$J,"SORT","D",LRSUB)) Q
"RTN","LRWU9",131,0)
 . S LR60IEN=$P($G(^TMP("LR",$J,"SORT",1,LRSUB,LRD0)),U,3)
"RTN","LRWU9",132,0)
 . I 'INSTALL,'(CNT#100) D SAY^XGF(24,1,"LRD0="_LRD0)
"RTN","LRWU9",133,0)
 . I LRPC'=1!(LRSUB'=LRD0) D
"RTN","LRWU9",134,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",135,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Data Name Location "_$P(^DD(63.04,LRD0,0),U)_" CH;"_LRSUB_";"_LRPC_" should be CH;"_LRD0_";1"
"RTN","LRWU9",136,0)
 . . I LRFIX,LR60IEN,'$D(^TMP("LR",$J,"SORT","LD",LRD0)) D FIXDD D
"RTN","LRWU9",137,0)
 . . . S ^(LRNUM)=^TMP("LR",$J,"DD63.04",LRNUM)_" ***FIXED***"
"RTN","LRWU9",138,0)
 . . I LRFIX,('LR60IEN!($D(^TMP("LR",$J,"SORT","LD",LRD0)))) D
"RTN","LRWU9",139,0)
 . . . S ^(LRNUM)=^TMP("LR",$J,"DD63.04",LRNUM)_" ***NOT FIXED***"
"RTN","LRWU9",140,0)
 . . . S LRSUPFLG=1
"RTN","LRWU9",141,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9",142,0)
 . . I LR60IEN,$G(^TMP("LR",$J,"DDFIXED",LRSUB)) D
"RTN","LRWU9",143,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Lab test # "_LR60IEN_" "_$P(^LAB(60,LR60IEN,0),U)_" DATA NAME (LOCATION) SUBSCRIPT  **** FIXED ****"
"RTN","LRWU9",144,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",145,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="    OLD SUBSCRIPT="_LRSUB_" NEW SUBSCRIPT="_LRD0
"RTN","LRWU9",146,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",147,0)
 . . I 'LR60IEN D
"RTN","LRWU9",148,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Data Name is not linked to a File #60 Laboratory Test"
"RTN","LRWU9",149,0)
 . . . I LRFIX S ^(LRNUM)=^TMP("LR",$J,"DD63.04",LRNUM)_" ***NOT FIXED***",LRSUPFLG=1
"RTN","LRWU9",150,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",151,0)
 . . I $D(^TMP("LR",$J,"SORT","LD",LRD0)) D
"RTN","LRWU9",152,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Data Name is linked to more than one File #60 Laboratory Test"
"RTN","LRWU9",153,0)
 . . . I LRFIX S ^(LRNUM)=^TMP("LR",$J,"DD63.04",LRNUM)_" ***NOT FIXED***",LRSUPFLG=1
"RTN","LRWU9",154,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",155,0)
 ;
"RTN","LRWU9",156,0)
 ;Check "B" cross reference - LR*5.2*519
"RTN","LRWU9",157,0)
 D B6304^LRWU9A
"RTN","LRWU9",158,0)
 Q
"RTN","LRWU9",159,0)
 ;-------------------------------------------------------
"RTN","LRWU9",160,0)
CHK63 ;CHECK FILE 63 FOR TEST DATA WITH NO DATA NAME
"RTN","LRWU9",161,0)
 ;
"RTN","LRWU9",162,0)
 N CNT,DATANUM,LRDFN,LRIDT,LRD0,LRNUM1,LRNUM2
"RTN","LRWU9",163,0)
 I 'INSTALL D SAY^XGF(24,1,LRSPACE),SAY^XGF(24,1,"LRDFN=")
"RTN","LRWU9",164,0)
 S (LRDFN,LRIDT,LRD0)=0
"RTN","LRWU9",165,0)
 S LRNUM1=1,LRNUM2=1
"RTN","LRWU9",166,0)
 F CNT=0:1 S LRDFN=$O(^LR(LRDFN)) Q:'LRDFN  D
"RTN","LRWU9",167,0)
 . S LRIDT=0
"RTN","LRWU9",168,0)
 . F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:'LRIDT  D
"RTN","LRWU9",169,0)
 . . N LRREPAIR
"RTN","LRWU9",170,0)
 . . S LRD0=1
"RTN","LRWU9",171,0)
 . . F  S LRD0=$O(^LR(LRDFN,"CH",LRIDT,LRD0)) Q:LRD0'>0  D
"RTN","LRWU9",172,0)
 . . . I $D(LRREPAIR(LRD0)) Q  ;Used to prevent issues when two Data Names use each others subscripts
"RTN","LRWU9",173,0)
 . . . I 'INSTALL,'(CNT#100) D SAY^XGF(24,1,"LRDFN="_LRDFN)
"RTN","LRWU9",174,0)
 . . . I '$D(^DD(63.04,LRD0,0)),'$D(^TMP("LR",$J,"SORT",1,LRD0)) D
"RTN","LRWU9",175,0)
 . . . . S ^TMP("LR",$J,"SORT","W",LRD0,LRNUM2)="^LR("_LRDFN_",""CH"","_LRIDT_","_LRD0_")"
"RTN","LRWU9",176,0)
 . . . . S LRNUM2=LRNUM2+1
"RTN","LRWU9",177,0)
 . . . ; Check if there are results that belong to a Data Name that is not linked to a test.
"RTN","LRWU9",178,0)
 . . . S DATANUM=$O(^TMP("LR",$J,"SORT","L",LRD0,0))
"RTN","LRWU9",179,0)
 . . . I DATANUM,'$D(^TMP("LR",$J,"SORT","D",LRD0)) D
"RTN","LRWU9",180,0)
 . . . . ;SORT BY DATA NAME
"RTN","LRWU9",181,0)
 . . . . S ^TMP("LR",$J,"SORT","T",DATANUM,LRNUM1)="^LR("_LRDFN_",""CH"","_LRIDT_","_LRD0_")"
"RTN","LRWU9",182,0)
 . . . . S LRNUM1=LRNUM1+1
"RTN","LRWU9",183,0)
 . . . I LRFIX D FIX63
"RTN","LRWU9",184,0)
 S LRNUM2=0,DATANUM=0
"RTN","LRWU9",185,0)
 I $D(^TMP("LR",$J,"SORT","W")) D
"RTN","LRWU9",186,0)
 . F  S DATANUM=$O(^TMP("LR",$J,"SORT","W",DATANUM)) Q:DATANUM'>0  D
"RTN","LRWU9",187,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",188,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Results in subscript '"_DATANUM_"' without a Data Name at: "
"RTN","LRWU9",189,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9",190,0)
 . . F  S LRNUM2=$O(^TMP("LR",$J,"SORT","W",DATANUM,LRNUM2)) Q:LRNUM2'>0  D
"RTN","LRWU9",191,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="     "_^TMP("LR",$J,"SORT","W",DATANUM,LRNUM2)
"RTN","LRWU9",192,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",193,0)
 . . . S LRSUPFLG=1
"RTN","LRWU9",194,0)
 S LRNUM1=0,DATANUM=0
"RTN","LRWU9",195,0)
 I $D(^TMP("LR",$J,"SORT","T")) D
"RTN","LRWU9",196,0)
 . F  S DATANUM=$O(^TMP("LR",$J,"SORT","T",DATANUM)) Q:DATANUM'>0  D
"RTN","LRWU9",197,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",198,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Results in Data Name "_$P(^DD(63.04,DATANUM,0),U,1)_" without a test in file 60 at: "
"RTN","LRWU9",199,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9",200,0)
 . . F  S LRNUM1=$O(^TMP("LR",$J,"SORT","T",DATANUM,LRNUM1)) Q:LRNUM1'>0  D
"RTN","LRWU9",201,0)
 . . . S ^TMP("LR",$J,"DD63.04",LRNUM)="     "_^TMP("LR",$J,"SORT","T",DATANUM,LRNUM1)
"RTN","LRWU9",202,0)
 . . . S LRNUM=LRNUM+1
"RTN","LRWU9",203,0)
 . . . S LRSUPFLG=1
"RTN","LRWU9",204,0)
 ;
"RTN","LRWU9",205,0)
 Q
"RTN","LRWU9",206,0)
 ;-------------------------------------------------------
"RTN","LRWU9",207,0)
FIXDD ; FIX DD FOR BAD DATA NAMES.
"RTN","LRWU9",208,0)
 ;
"RTN","LRWU9",209,0)
 N DDFIELD,LRNAME,LRTYPE
"RTN","LRWU9",210,0)
 ;
"RTN","LRWU9",211,0)
 D FIELD^DID(63.04,LRD0,"","LABEL;TYPE","DDFIELD")
"RTN","LRWU9",212,0)
 S LRNAME=DDFIELD("LABEL")
"RTN","LRWU9",213,0)
 S LRTYPE=DDFIELD("TYPE")
"RTN","LRWU9",214,0)
 S DA=LRD0
"RTN","LRWU9",215,0)
 D DDFIX^LRWU6
"RTN","LRWU9",216,0)
 I LR60IEN D
"RTN","LRWU9",217,0)
 . I $P(^LAB(60,LR60IEN,0),U,5)'="CH;"_LRD0_";1"!($P(^LAB(60,LR60IEN,0),U,12)'="DD(63.04,"_LRD0_",")!(^LAB(60,LR60IEN,.2)'=LRD0) D
"RTN","LRWU9",218,0)
 . . N LRFDA,LRDIE
"RTN","LRWU9",219,0)
 . . S LRFDA(1,60,LR60IEN_",",400)=LRD0
"RTN","LRWU9",220,0)
 . . S LRFDA(1,60,LR60IEN_",",5)="CH;"_LRD0_";1"
"RTN","LRWU9",221,0)
 . . S LRFDA(1,60,LR60IEN_",",13)="DD(63.04,"_LRD0_","
"RTN","LRWU9",222,0)
 . . D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","LRWU9",223,0)
 . . S ^TMP("LR",$J,"DDFIXED",LRSUB)=LRD0_U_LRPC_U_LR60IEN
"RTN","LRWU9",224,0)
UPD624 . . N LR624,LR6243
"RTN","LRWU9",225,0)
 . . S LR624=0 F  S LR624=$O(^LAB(62.4,LR624)) Q:'LR624  D
"RTN","LRWU9",226,0)
 . . . S LR6243=0 F  S LR6243=$O(^LAB(62.4,LR624,3,LR6243)) Q:'LR6243  D
"RTN","LRWU9",227,0)
 . . . .I $P(^LAB(62.4,LR624,3,LR6243,0),U)=LR60IEN D
"RTN","LRWU9",228,0)
 . . . . . N LRFDA,LRIENS
"RTN","LRWU9",229,0)
 . . . . . S LRIENS=LR6243_","_LR624_","
"RTN","LRWU9",230,0)
 . . . . . S LRFDA(62.41,LRIENS,11)="TV("_LRD0_",1)"
"RTN","LRWU9",231,0)
 . . . . . D FILE^DIE("","LRFDA")
"RTN","LRWU9",232,0)
 ;
"RTN","LRWU9",233,0)
 Q
"RTN","LRWU9",234,0)
 ;-------------------------------------------------------
"RTN","LRWU9",235,0)
FIX63 ;FIX DATA NODES IN FILE 63
"RTN","LRWU9",236,0)
 ;
"RTN","LRWU9",237,0)
 Q:$D(^TMP("LR",$J,"SORT","D",LRD0))
"RTN","LRWU9",238,0)
 Q:'$D(^TMP("LR",$J,"DDFIXED",LRD0))
"RTN","LRWU9",239,0)
 Q:($P(^TMP("LR",$J,"DDFIXED",LRD0),U,2)'=1)
"RTN","LRWU9",240,0)
 S LRLOC=$P(^TMP("LR",$J,"DDFIXED",LRD0),U)
"RTN","LRWU9",241,0)
 I $D(^DD(63.04,LRD0,0))!($D(^TMP("LR",$J,"SORT",1,LRD0))) S ^TMP("LR",$J,"DD63.04",LRNUM)=" ",LRNUM=LRNUM+1
"RTN","LRWU9",242,0)
 I $D(^LR(LRDFN,"CH",LRIDT,LRLOC)) D  Q
"RTN","LRWU9",243,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)="*ERROR* MOVING OVER ^LR("_LRDFN_",CH,"_LRIDT_","_LRD0_") TO ^LR("_LRDFN_",CH,"_LRIDT_","_LRLOC_")"
"RTN","LRWU9",244,0)
 . S LRNUM=LRNUM+1
"RTN","LRWU9",245,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)="Data already exists in ^LR("_LRDFN_",CH,"_LRIDT_","_LRLOC_")"
"RTN","LRWU9",246,0)
 . S LRNUM=LRNUM+1
"RTN","LRWU9",247,0)
 . S LRSUPFLG=1
"RTN","LRWU9",248,0)
 D CHKILLPX(LRDFN,LRIDT,LRD0) ;Kill Clinical Reminders Index
"RTN","LRWU9",249,0)
 S ^LR(LRDFN,"CH",LRIDT,LRLOC)=^LR(LRDFN,"CH",LRIDT,LRD0)
"RTN","LRWU9",250,0)
 K ^LR(LRDFN,"CH",LRIDT,LRD0)
"RTN","LRWU9",251,0)
 S LRREPAIR(LRLOC)=""
"RTN","LRWU9",252,0)
 D CHSET^LRPX(LRDFN,LRIDT) ;Set Clinical Reminders Index
"RTN","LRWU9",253,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="DATA LOCATION FIXED IN LAB DATA FILE ^LR"
"RTN","LRWU9",254,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9",255,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="^LR("_LRDFN_",CH,"_LRIDT_","_LRD0_") NOW MOVED TO ^LR("_LRDFN_",CH,"_LRIDT_","_LRLOC_")"
"RTN","LRWU9",256,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9",257,0)
 ;
"RTN","LRWU9",258,0)
 Q
"RTN","LRWU9",259,0)
 ;-------------------------------------------------------
"RTN","LRWU9",260,0)
CHKILLPX(LRDFN,LRIDT,LRD0) ;Kill Clinical Reminders Index
"RTN","LRWU9",261,0)
 N LR60IEN,DFN,DATE,OK,DAS,LRDBLCHK
"RTN","LRWU9",262,0)
 S LR60IEN=$P(^TMP("LR",$J,"DDFIXED",LRD0),U,3)
"RTN","LRWU9",263,0)
 I 'LR60IEN D
"RTN","LRWU9",264,0)
 . N DATA
"RTN","LRWU9",265,0)
 . S DATA=^LR(LRDFN,"CH",LRIDT,LRD0)
"RTN","LRWU9",266,0)
 . S LR60IEN=+$P($P(DATA,U,3),"!",7)
"RTN","LRWU9",267,0)
 I 'LR60IEN Q
"RTN","LRWU9",268,0)
 I '$L($G(^LR(+$G(LRDFN),"CH",+$G(LRIDT),0))) Q
"RTN","LRWU9",269,0)
 D PATIENT^LRPX(LRDFN,.DFN,.OK) I 'OK Q
"RTN","LRWU9",270,0)
 S DATE=9999999-LRIDT
"RTN","LRWU9",271,0)
 S DAS=LRDFN_";CH;"_LRIDT_";"_LRD0
"RTN","LRWU9",272,0)
 S LRDBLCHK=0
"RTN","LRWU9",273,0)
 I '$D(^PXRMINDX(63,"PI",DFN,LR60IEN,DATE,DAS)) S LRDBLCHK=1
"RTN","LRWU9",274,0)
 D KLAB^LRPX(DFN,DATE,LR60IEN,DAS)
"RTN","LRWU9",275,0)
 ;
"RTN","LRWU9",276,0)
 I LRDBLCHK D
"RTN","LRWU9",277,0)
 . N ITEM,FLAG
"RTN","LRWU9",278,0)
 . S ITEM=0 F  S ITEM=$O(^PXRMINDX(63,"PI",DFN,ITEM)) Q:'ITEM!($D(FLAG))  D
"RTN","LRWU9",279,0)
 . . I $D(^PXRMINDX(63,"PI",DFN,ITEM,DATE,DAS)) D
"RTN","LRWU9",280,0)
 . . . D KLAB^LRPX(DFN,DATE,ITEM,DAS)
"RTN","LRWU9",281,0)
 . . . S FLAG=1
"RTN","LRWU9",282,0)
 Q
"RTN","LRWU9",283,0)
 ;-------------------------------------------------------
"RTN","LRWU9",284,0)
SENDMM ;SEND MAIL MESSAGE OF ERRORS FOUND AND/OR FIXED.
"RTN","LRWU9",285,0)
 ;
"RTN","LRWU9",286,0)
 N XMSUB,DIFROM,XMINSTR
"RTN","LRWU9",287,0)
 ;
"RTN","LRWU9",288,0)
 S LRNUM=3
"RTN","LRWU9",289,0)
 I $O(^TMP("LR",$J,"DD63.04",5)) D  ;Errors were found
"RTN","LRWU9",290,0)
 . ;
"RTN","LRWU9",291,0)
 . I 'LRFIX!(LRFIX&($G(LRSUPFLG))) D  ;not all errors were auto-repaired
"RTN","LRWU9",292,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Contact the National Service Desk to request assistance from the Clin 4",LRNUM=LRNUM+1
"RTN","LRWU9",293,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="Product Support team in resolving the following errors identified in the",LRNUM=LRNUM+1
"RTN","LRWU9",294,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="VistA Laboratory package:",LRNUM=LRNUM+1
"RTN","LRWU9",295,0)
 . ;
"RTN","LRWU9",296,0)
 . I LRFIX,'$G(LRSUPFLG) D  ;all errors were auto-repaired
"RTN","LRWU9",297,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="The LAB DATA file (#63) cleanup process has found and repaired the",LRNUM=LRNUM+1
"RTN","LRWU9",298,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)="following errors:",LRNUM=LRNUM+1
"RTN","LRWU9",299,0)
 ;
"RTN","LRWU9",300,0)
 I '$O(^TMP("LR",$J,"DD63.04",5)) D  ;No errors were found
"RTN","LRWU9",301,0)
 . S ^TMP("LR",$J,"DD63.04",LRNUM)=""
"RTN","LRWU9",302,0)
 . S ^TMP("LR",$J,"DD63.04",(LRNUM+1))="*** NO ERRORS FOUND ***"
"RTN","LRWU9",303,0)
 ;
"RTN","LRWU9",304,0)
 S XMSUB="DATA DICTIONARY ^DD(63.04 CHECK REPORT "
"RTN","LRWU9",305,0)
 S XMSUB=XMSUB_$$FMTE^XLFDT($$NOW^XLFDT,"1S")
"RTN","LRWU9",306,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","LRWU9",307,0)
 D SENDMSG^XMXAPI(DUZ,XMSUB,"^TMP(""LR"",$J,""DD63.04"")",.XMY,.XMINSTR)
"RTN","LRWU9",308,0)
 ;
"RTN","LRWU9",309,0)
 Q
"RTN","LRWU9",310,0)
 ;-------------------------------------------------------
"RTN","LRWU9",311,0)
ASK() ; Run analyze/repair query
"RTN","LRWU9",312,0)
 ;
"RTN","LRWU9",313,0)
 N Y,DIR,DIRUT,DTOUT,DUOUT,FIX
"RTN","LRWU9",314,0)
 ;
"RTN","LRWU9",315,0)
 S FIX=0
"RTN","LRWU9",316,0)
 ;
"RTN","LRWU9",317,0)
 W !,"This process will check the CHEM, HEM, TOX, RIA, SER, etc."
"RTN","LRWU9",318,0)
 W !,"Sub-file (#63.04) of the LAB DATA file (#63) looking for"
"RTN","LRWU9",319,0)
 W !,"possible discrepancies in the Data Dictionary.  Once the"
"RTN","LRWU9",320,0)
 W !,"process has completed, a MailMan message will be sent to the"
"RTN","LRWU9",321,0)
 W !,"user that started this process and any other user selected."
"RTN","LRWU9",322,0)
 W !!
"RTN","LRWU9",323,0)
 W !,"The two modes in which this process can be run are ANALYZE"
"RTN","LRWU9",324,0)
 W !,"and REPAIR.  If the ANALYZE option is chosen, the process will"
"RTN","LRWU9",325,0)
 W !,"only look for discrepancies and report the findings via a"
"RTN","LRWU9",326,0)
 W !,"MailMan message.  If the ANALYZE,REPAIR option is chosen the"
"RTN","LRWU9",327,0)
 W !,"process will ANALYZE and REPAIR any discrepancies found that"
"RTN","LRWU9",328,0)
 W !,"can be fixed programmatically and list all those that could"
"RTN","LRWU9",329,0)
 W !,"not be fixed but need attention."
"RTN","LRWU9",330,0)
 W !!
"RTN","LRWU9",331,0)
 ;
"RTN","LRWU9",332,0)
 S DIR("A")="Do you want to continue with this process",DIR("B")="NO"
"RTN","LRWU9",333,0)
 S DIR(0)="Y"
"RTN","LRWU9",334,0)
 D ^DIR
"RTN","LRWU9",335,0)
 I 'Y Q FIX
"RTN","LRWU9",336,0)
 ;
"RTN","LRWU9",337,0)
 K DIR,Y
"RTN","LRWU9",338,0)
 ;
"RTN","LRWU9",339,0)
 S DIR(0)="NAO^1:3",DIR("B")=3
"RTN","LRWU9",340,0)
 S DIR("A",1)="Select the action you wish to take:"
"RTN","LRWU9",341,0)
 S DIR("A",2)=""
"RTN","LRWU9",342,0)
 S DIR("A",3)="1. Analyze and Report."
"RTN","LRWU9",343,0)
 S DIR("A",4)="2. Analyze, Repair, and Report."
"RTN","LRWU9",344,0)
 S DIR("A",5)="3. Quit - No Action."
"RTN","LRWU9",345,0)
 S DIR("A",6)=""
"RTN","LRWU9",346,0)
 S DIR("A")="Enter a number 1 thru 3: "
"RTN","LRWU9",347,0)
 S DIR("?")="Select a number 1 thru 3 or press <Return> to exit"
"RTN","LRWU9",348,0)
 ;
"RTN","LRWU9",349,0)
 D ^DIR
"RTN","LRWU9",350,0)
 I Y=1 S FIX=1
"RTN","LRWU9",351,0)
 I Y=2 S FIX=2
"RTN","LRWU9",352,0)
 I Y=3!(Y=-1)!('Y) S FIX=0 Q FIX
"RTN","LRWU9",353,0)
 ;
"RTN","LRWU9",354,0)
 K DIR,Y
"RTN","LRWU9",355,0)
 S DIR("A")="Are you sure you want to proceed",DIR("B")="NO"
"RTN","LRWU9",356,0)
 S DIR(0)="Y"
"RTN","LRWU9",357,0)
 D ^DIR
"RTN","LRWU9",358,0)
 I 'Y S FIX=0
"RTN","LRWU9",359,0)
 ;
"RTN","LRWU9",360,0)
 Q FIX
"RTN","LRWU9A")
0^9^B8489328^n/a
"RTN","LRWU9A",1,0)
LRWU9A ;HPS/DSK - TOOL TO DETECT, FIX, AND REPORT BAD DATA NAMES ;Apr 11, 2019@16:00
"RTN","LRWU9A",2,0)
 ;;5.2;LAB SERVICE;**519**;Sep 27, 1994;Build 16
"RTN","LRWU9A",3,0)
 ;
"RTN","LRWU9A",4,0)
 ;Reference to ^DD(63.04 supported by DBIA #7053
"RTN","LRWU9A",5,0)
 ;
"RTN","LRWU9A",6,0)
 Q
"RTN","LRWU9A",7,0)
 ;
"RTN","LRWU9A",8,0)
B6304 ;check "B" cross reference
"RTN","LRWU9A",9,0)
 ;
"RTN","LRWU9A",10,0)
 ;LRNUM = Current MailMessage line number
"RTN","LRWU9A",11,0)
 ;
"RTN","LRWU9A",12,0)
 N LRA,LRB,LRMISNM,LRCOUNT
"RTN","LRWU9A",13,0)
 S (LRA,LRB)="",LRMISNM=0
"RTN","LRWU9A",14,0)
 F  S LRA=$O(^DD(63.04,"B",LRA)) Q:LRA=""  D
"RTN","LRWU9A",15,0)
 . S LRCOUNT=0
"RTN","LRWU9A",16,0)
 . F  S LRB=$O(^DD(63.04,"B",LRA,LRB)) Q:LRB=""  D
"RTN","LRWU9A",17,0)
 . . S LRCOUNT=LRCOUNT+1
"RTN","LRWU9A",18,0)
 . . I LRCOUNT>1 M ^TMP("LR63.04B",$J,LRA)=^DD(63.04,"B",LRA)
"RTN","LRWU9A",19,0)
 ;
"RTN","LRWU9A",20,0)
 ;Check whether issues were found. If so, add to MailMan ^TMP from LRWU9
"RTN","LRWU9A",21,0)
 I $D(^TMP("LR63.04B",$J)) D BMAIL
"RTN","LRWU9A",22,0)
 Q
"RTN","LRWU9A",23,0)
 ;
"RTN","LRWU9A",24,0)
BMAIL ;Generate MailMan message for "B" cross ref issues
"RTN","LRWU9A",25,0)
 N LRSPACE,LRDASH,LRSTR,LRHIT,LRA,LRB
"RTN","LRWU9A",26,0)
 S LRSPACE="                              "
"RTN","LRWU9A",27,0)
 S LRDASH="------------------------------------------------------------"
"RTN","LRWU9A",28,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",29,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" "
"RTN","LRWU9A",30,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",31,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="**** The following issue(s) were found in ^DD(63.04. ****"
"RTN","LRWU9A",32,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",33,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="Please submit a ServiceNow ticket with the assignment group"
"RTN","LRWU9A",34,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",35,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="of NTL SUP CLIN2 for assistance with correcting the issue(s)."
"RTN","LRWU9A",36,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",37,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" "
"RTN","LRWU9A",38,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",39,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="NOTE: Names such as ""not in use"", etc. which do not appear to"
"RTN","LRWU9A",40,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",41,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="      pertain to active tests do not warrant correction."
"RTN","LRWU9A",42,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",43,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" "
"RTN","LRWU9A",44,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",45,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="Name(s) With Multiple IENs"
"RTN","LRWU9A",46,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",47,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="Name                     IEN"
"RTN","LRWU9A",48,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",49,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=LRDASH
"RTN","LRWU9A",50,0)
 S (LRA,LRB)=""
"RTN","LRWU9A",51,0)
 F  S LRA=$O(^TMP("LR63.04B",$J,LRA)) Q:LRA=""  D
"RTN","LRWU9A",52,0)
 . S LRB=$O(^TMP("LR63.04B",$J,LRA,"")) D
"RTN","LRWU9A",53,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9A",54,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)=$E(LRA,1,23)_$E(LRSPACE,1,25-$L(LRA))_LRB
"RTN","LRWU9A",55,0)
 . F  S LRB=$O(^TMP("LR63.04B",$J,LRA,LRB)) Q:LRB=""  D
"RTN","LRWU9A",56,0)
 . . S LRNUM=LRNUM+1
"RTN","LRWU9A",57,0)
 . . S ^TMP("LR",$J,"DD63.04",LRNUM)=$E(LRSPACE,1,25)_LRB
"RTN","LRWU9A",58,0)
 . ;
"RTN","LRWU9A",59,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",60,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" "
"RTN","LRWU9A",61,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",62,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)="**** End of issue(s) found in ^DD(63.04 ****"
"RTN","LRWU9A",63,0)
 S LRNUM=LRNUM+1
"RTN","LRWU9A",64,0)
 S ^TMP("LR",$J,"DD63.04",LRNUM)=" "
"RTN","LRWU9A",65,0)
 Q
"RTN","LRWU9A",66,0)
 ;
"VER")
8.0^22.2
"BLD",11420,6)
^428
**END**
**END**

