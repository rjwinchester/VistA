Released LR*5.2*448 SEQ #360
Extracted from mail message
**KIDS**:LR*5.2*448^

**INSTALL NAME**
LR*5.2*448
"BLD",9780,0)
LR*5.2*448^LAB SERVICE^0^3141001^y
"BLD",9780,1,0)
^^6^6^3141001^^
"BLD",9780,1,1,0)
This patch is a VM patch that addresses 2 issues related to CPT coding
"BLD",9780,1,2,0)
(Current Procedural Terminology) in the Laboratory package:
"BLD",9780,1,3,0)
 
"BLD",9780,1,4,0)
1.      Problems with ES Display List selections.
"BLD",9780,1,5,0)
 
"BLD",9780,1,6,0)
2.      Active CPT codes in file 64 are rejected as inactive.
"BLD",9780,4,0)
^9.64PA^^
"BLD",9780,6.3)
1
"BLD",9780,"ABPKG")
n
"BLD",9780,"KRN",0)
^9.67PA^779.2^20
"BLD",9780,"KRN",.4,0)
.4
"BLD",9780,"KRN",.401,0)
.401
"BLD",9780,"KRN",.402,0)
.402
"BLD",9780,"KRN",.403,0)
.403
"BLD",9780,"KRN",.5,0)
.5
"BLD",9780,"KRN",.84,0)
.84
"BLD",9780,"KRN",3.6,0)
3.6
"BLD",9780,"KRN",3.8,0)
3.8
"BLD",9780,"KRN",9.2,0)
9.2
"BLD",9780,"KRN",9.8,0)
9.8
"BLD",9780,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9780,"KRN",9.8,"NM",1,0)
LRCAPES^^0^B87234278
"BLD",9780,"KRN",9.8,"NM",2,0)
LRCAPES1^^0^B91936521
"BLD",9780,"KRN",9.8,"NM","B","LRCAPES",1)

"BLD",9780,"KRN",9.8,"NM","B","LRCAPES1",2)

"BLD",9780,"KRN",19,0)
19
"BLD",9780,"KRN",19.1,0)
19.1
"BLD",9780,"KRN",101,0)
101
"BLD",9780,"KRN",409.61,0)
409.61
"BLD",9780,"KRN",771,0)
771
"BLD",9780,"KRN",779.2,0)
779.2
"BLD",9780,"KRN",870,0)
870
"BLD",9780,"KRN",8989.51,0)
8989.51
"BLD",9780,"KRN",8989.52,0)
8989.52
"BLD",9780,"KRN",8994,0)
8994
"BLD",9780,"KRN","B",.4,.4)

"BLD",9780,"KRN","B",.401,.401)

"BLD",9780,"KRN","B",.402,.402)

"BLD",9780,"KRN","B",.403,.403)

"BLD",9780,"KRN","B",.5,.5)

"BLD",9780,"KRN","B",.84,.84)

"BLD",9780,"KRN","B",3.6,3.6)

"BLD",9780,"KRN","B",3.8,3.8)

"BLD",9780,"KRN","B",9.2,9.2)

"BLD",9780,"KRN","B",9.8,9.8)

"BLD",9780,"KRN","B",19,19)

"BLD",9780,"KRN","B",19.1,19.1)

"BLD",9780,"KRN","B",101,101)

"BLD",9780,"KRN","B",409.61,409.61)

"BLD",9780,"KRN","B",771,771)

"BLD",9780,"KRN","B",779.2,779.2)

"BLD",9780,"KRN","B",870,870)

"BLD",9780,"KRN","B",8989.51,8989.51)

"BLD",9780,"KRN","B",8989.52,8989.52)

"BLD",9780,"KRN","B",8994,8994)

"BLD",9780,"QUES",0)
^9.62^^
"BLD",9780,"REQB",0)
^9.611^1^1
"BLD",9780,"REQB",1,0)
LR*5.2*350^2
"BLD",9780,"REQB","B","LR*5.2*350",1)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950304
"PKG",26,22,1,"PAH",1,0)
448^3141001
"PKG",26,22,1,"PAH",1,1,0)
^^6^6^3141001
"PKG",26,22,1,"PAH",1,1,1,0)
This patch is a VM patch that addresses 2 issues related to CPT coding
"PKG",26,22,1,"PAH",1,1,2,0)
(Current Procedural Terminology) in the Laboratory package:
"PKG",26,22,1,"PAH",1,1,3,0)
 
"PKG",26,22,1,"PAH",1,1,4,0)
1.      Problems with ES Display List selections.
"PKG",26,22,1,"PAH",1,1,5,0)
 
"PKG",26,22,1,"PAH",1,1,6,0)
2.      Active CPT codes in file 64 are rejected as inactive.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","LRCAPES")
0^1^B87234278^B86635853
"RTN","LRCAPES",1,0)
LRCAPES ;DALOI/FHS/KLL -MANUAL PCE CPT WORKLOAD CAPTURE ;11/18/11  15:21
"RTN","LRCAPES",2,0)
 ;;5.2;LAB SERVICE;**274,259,349,308,350,448**;Sep 27, 1994;Build 1
"RTN","LRCAPES",3,0)
 ;
"RTN","LRCAPES",4,0)
 ;Reference to $$GET^XUA4A72 - Supported by DBIA #1625
"RTN","LRCAPES",5,0)
EN ;
"RTN","LRCAPES",6,0)
 D EN^LRCAPES1
"RTN","LRCAPES",7,0)
 Q
"RTN","LRCAPES",8,0)
EX1 ;Parse the read entry
"RTN","LRCAPES",9,0)
 N LRXY,LRACTV,LRXY1,LRXY2,LRD2,LRNR,LRWL2,LRINA2,LRREL2,LRQ
"RTN","LRCAPES",10,0)
 Q:'$L($G(LRX))
"RTN","LRCAPES",11,0)
 ;Edit on 5-digit code entry
"RTN","LRCAPES",12,0)
 I LRX?5N,'$D(^TMP("LR",$J,"AK",LRX))#2 D  Q
"RTN","LRCAPES",13,0)
 .S LRXY=$$CPT^ICPTCOD(LRX,DT)
"RTN","LRCAPES",14,0)
 .D CHKCPT^LRCAPES1
"RTN","LRCAPES",15,0)
 .;Don't pass to PCE if CPT is missing or inactive in #81 or #64
"RTN","LRCAPES",16,0)
 .Q:'$P(LRXY,U,7)!(LRNR)
"RTN","LRCAPES",17,0)
 .;If CPT is inactive in #64 and another active CPT exists, replace
"RTN","LRCAPES",18,0)
 .;      the inactive with the active CPT
"RTN","LRCAPES",19,0)
 .I LRACTV D  Q
"RTN","LRCAPES",20,0)
 ..S LRXY=$$CPT^ICPTCOD(LRXY2,DT)
"RTN","LRCAPES",21,0)
 ..S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",22,0)
 ..S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_U_LRWL2_U_$P(LRXY,U,3)_U
"RTN","LRCAPES",23,0)
 ..S LRRF64=$S($G(LRRF64):LRRF64_LRXY1_"\"_LRXY2_",",1:LRXY1_"\"_LRXY2_",")
"RTN","LRCAPES",24,0)
 ..;If CPT passes edits, continue
"RTN","LRCAPES",25,0)
 .S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",26,0)
 .S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_"^^"_$P(LRXY,U,3)_U
"RTN","LRCAPES",27,0)
 ;Edit on ES Display Order # entry
"RTN","LRCAPES",28,0)
 S LRQ="^TMP(""LR"","_$J_",""AK"","_LRX_")"
"RTN","LRCAPES",29,0)
 S LRQ=$Q(@LRQ)
"RTN","LRCAPES",30,0)
 I LRX'=$QS(LRQ,4) S LRINVES=LRX Q 
"RTN","LRCAPES",31,0)
 S LRXY=$$CPT^ICPTCOD($QS(LRQ,6),DT)
"RTN","LRCAPES",32,0)
 D CHKCPT^LRCAPES1
"RTN","LRCAPES",33,0)
 Q:'$P(LRXY,U,7)!(LRNR)
"RTN","LRCAPES",34,0)
 ;If CPT is inactive in #64 and another active CPT exists, replace
"RTN","LRCAPES",35,0)
 ;      the inactive with the active CPT
"RTN","LRCAPES",36,0)
 I LRACTV D  Q
"RTN","LRCAPES",37,0)
 .S LRXY=$$CPT^ICPTCOD(LRXY2,DT)
"RTN","LRCAPES",38,0)
 .S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",39,0)
 .S ^TMP("LR",$J,"LRLST",LRCNT)=$P(LRXY,U)_U_LRWL2_U_$P(LRXY,U,3)_U
"RTN","LRCAPES",40,0)
 .S LRRF64=$S($G(LRRF64):LRRF64_LRXY1_"\"_LRXY2_",",1:LRXY1_"\"_LRXY2_",")
"RTN","LRCAPES",41,0)
 .;I CPT passes edits, continue
"RTN","LRCAPES",42,0)
 S LRCNT=+$G(LRCNT)+1
"RTN","LRCAPES",43,0)
 S ^TMP("LR",$J,"LRLST",LRCNT)=$QS(LRQ,6)_U_@LRQ
"RTN","LRCAPES",44,0)
 Q
"RTN","LRCAPES",45,0)
END1 ;
"RTN","LRCAPES",46,0)
 D END S LREND=1
"RTN","LRCAPES",47,0)
 Q
"RTN","LRCAPES",48,0)
END ;
"RTN","LRCAPES",49,0)
 I $G(LRAA),$G(LRAD),$G(LRAN) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRCAPES",50,0)
 K:'$G(LRESCPT) ^TMP("LR",$J,"AK")
"RTN","LRCAPES",51,0)
 I $G(LRDEBUG) W !,"END ",! Q
"RTN","LRCAPES",52,0)
 Q
"RTN","LRCAPES",53,0)
WLN ;Interactive entry point
"RTN","LRCAPES",54,0)
 D KVA^VADPT
"RTN","LRCAPES",55,0)
 K DIC,DIR
"RTN","LRCAPES",56,0)
 K LREND,LRUID,DIC,DIR,LRVBY
"RTN","LRCAPES",57,0)
 K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",58,0)
 K LRAA,LRACC,LRAD,LRAN,LRDFN,LRDPF,LRIDT
"RTN","LRCAPES",59,0)
 K LRRB,LRSS,LRTIME,LRTREA,LRUID,LRWRD,PNM,SEX,SSN,AGE
"RTN","LRCAPES",60,0)
 S (LRAA,LRACC,LRAD,LRNOP,LRAN,LREND)=0,LRVBY=1,LRUID=""
"RTN","LRCAPES",61,0)
 S:'$G(LRPRO) LRPRO=DUZ
"RTN","LRCAPES",62,0)
 I '$G(LRESCPT) S LRVBY=$$SELBY^LRWU4("Select Accession By")
"RTN","LRCAPES",63,0)
 D:LRVBY=1 ^LRVERA D:LRVBY=2 UID^LRVERA
"RTN","LRCAPES",64,0)
 I 'LRVBY!(LRAA<1) D END S LREND=1 Q
"RTN","LRCAPES",65,0)
 S LRDFN=+$$GET1^DIQ(68.02,+$G(LRAN)_","_+$G(LRAD)_","_+$G(LRAA)_",",.01)
"RTN","LRCAPES",66,0)
 I 'LRDFN D END S LRNOP=1 D  Q
"RTN","LRCAPES",67,0)
 . W !?5,"This accession is corrupt",!
"RTN","LRCAPES",68,0)
LCK ;
"RTN","LRCAPES",69,0)
 L +^LRO(68,LRAA,1,LRAD,1,LRAN):10 I '$T D  Q
"RTN","LRCAPES",70,0)
 . W !?5,"Someone else is editing this accession",!
"RTN","LRCAPES",71,0)
 . S LRNOP=1
"RTN","LRCAPES",72,0)
 D PT^LRX
"RTN","LRCAPES",73,0)
 S LRUID=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",16)
"RTN","LRCAPES",74,0)
 S LRLLOCX=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",75,0)
 S LRSPECID="Acc #: "_$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",15,"E")
"RTN","LRCAPES",76,0)
 S:$L($G(LRUID)) LRSPECID=LRSPECID_"  UID: "_LRUID
"RTN","LRCAPES",77,0)
 S LREDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",9,"I")
"RTN","LRCAPES",78,0)
 I LREDT'?7N.E D  Q
"RTN","LRCAPES",79,0)
 . W !?5,"This accession does not have a Collection Date/Time",!
"RTN","LRCAPES",80,0)
 . W !?10,"CAN NOT PROCEED",!
"RTN","LRCAPES",81,0)
 . S LRNOP="6^Not Accessioned"
"RTN","LRCAPES",82,0)
 I '$G(LRIDT) S LRIDT=+$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",13.5,"I")
"RTN","LRCAPES",83,0)
 S LRCDT="Collection Date: "_$$FMTE^XLFDT(LREDT,1)
"RTN","LRCAPES",84,0)
 I '$L($G(LRSS)) S LRSS=$$GET1^DIQ(68,LRAA_",",.02,"I")
"RTN","LRCAPES",85,0)
 S LRDSSLOC=+$$GET1^DIQ(68,LRAA_",",.8,"I")
"RTN","LRCAPES",86,0)
 S LRDSSLOC=$S($G(LRDSSLOC):LRDSSLOC,1:LRDLOC)
"RTN","LRCAPES",87,0)
 D DEM^LRCAPES1
"RTN","LRCAPES",88,0)
PRO ;Get provider,patient/location information
"RTN","LRCAPES",89,0)
 S LREND=0
"RTN","LRCAPES",90,0)
 D
"RTN","LRCAPES",91,0)
 . N LRPRONM,DIR,DIRUT,DUOUT,X,Y
"RTN","LRCAPES",92,0)
 . S LRPRONM=$$GET1^DIQ(200,+$G(LRPRO),.01,"I")
"RTN","LRCAPES",93,0)
 . I $L(LRPRONM),$D(^VA(200,"AK.PROVIDER",LRPRONM,+$G(LRPRO)))#2,$$GET^XUA4A72(+$G(LRPRO),DT)>0 S DIR("B")=LRPRONM
"RTN","LRCAPES",94,0)
 . ;S DIR("A")="Releasing Pathologist"
"RTN","LRCAPES",95,0)
 . S DIR("A")="Provider"
"RTN","LRCAPES",96,0)
 . S LRPRO=0,DIR(0)="PO^200:ENMZ"
"RTN","LRCAPES",97,0)
 . S DIR("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$$GET^XUA4A72(+Y,DT)>0"
"RTN","LRCAPES",98,0)
 . D ^DIR
"RTN","LRCAPES",99,0)
 . I Y>1 S LRPRO=+Y
"RTN","LRCAPES",100,0)
 I '$G(LRPRO) D  D END1 Q
"RTN","LRCAPES",101,0)
 . W !?5,"No Active Provider Selected",!
"RTN","LRCAPES",102,0)
 . S LRNOP=1
"RTN","LRCAPES",103,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2 D  D END1 G WLN
"RTN","LRCAPES",104,0)
 . W !?5,"The accession is corrupt - missing zero node",!
"RTN","LRCAPES",105,0)
 . S LRNOP="7^Corrupt Accession"
"RTN","LRCAPES",106,0)
LOC ;Reporting Location
"RTN","LRCAPES",107,0)
 S LRNODE0=^LRO(68,LRAA,1,LRAD,1,LRAN,0)
"RTN","LRCAPES",108,0)
 S LRNOP=0
"RTN","LRCAPES",109,0)
 S (LRLLOCX,LRLLOC)=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",110,0)
 I $L(LRLLOC) S LRLLOC=+$$FIND1^DIC(44,"","OM",LRLLOC)
"RTN","LRCAPES",111,0)
ASKLOC ;Check to see if outpatient location
"RTN","LRCAPES",112,0)
 I '$D(^SC(+$G(LRLLOC),0))#2 D
"RTN","LRCAPES",113,0)
 . N DIR,X,Y
"RTN","LRCAPES",114,0)
 . S LRLLOC=""
"RTN","LRCAPES",115,0)
 . S DIR(0)="PO^44:AEZNMO",DIR("A")=" Ordering Location "
"RTN","LRCAPES",116,0)
 . D ^DIR
"RTN","LRCAPES",117,0)
 . I +Y<1 Q
"RTN","LRCAPES",118,0)
 . S LRLLOC=+Y
"RTN","LRCAPES",119,0)
 I '$G(LRLLOC) D END1 Q
"RTN","LRCAPES",120,0)
 S LRDSSID=+$$GET1^DIQ(44,+LRLLOC,8,"I") ;I 'LRDSSID S LRNOP="2^No Stop Code Number" Q
"RTN","LRCAPES",121,0)
 S LRNINS=$$GET1^DIQ(44,+LRLLOC,3,"I")
"RTN","LRCAPES",122,0)
 S LRNINS=$S(LRNINS:LRNINS,1:DUZ(2))
"RTN","LRCAPES",123,0)
 Q
"RTN","LRCAPES",124,0)
ES() ;Entry point for front end application.
"RTN","LRCAPES",125,0)
 N DFN,LRESCPT,LRDFN,LRLLOC,LRLLOCX,LRNINS,LRTST,LRENCDT,LRDUZ
"RTN","LRCAPES",126,0)
 K LRES,LRESCPT
"RTN","LRCAPES",127,0)
 S LRES=1
"RTN","LRCAPES",128,0)
ASK ; Option entry point - Check and setup PCE reporting variables
"RTN","LRCAPES",129,0)
 D EN^LRCAPES1
"RTN","LRCAPES",130,0)
 N X,Y,T1
"RTN","LRCAPES",131,0)
 S LREND=0
"RTN","LRCAPES",132,0)
 D ^LRPARAM Q:$G(LREND)
"RTN","LRCAPES",133,0)
 K ^TMP("LRPXAPI",$J),^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",134,0)
 S ^TMP("LR",$J,"LRLST")=$$FMADD^XLFDT(DT,2)_U_DT_U_"LAB ES CPT"
"RTN","LRCAPES",135,0)
 S:'$G(LRPKG) LRPKG=$O(^DIC(9.4,"B","LR",0))
"RTN","LRCAPES",136,0)
 S:'$G(LRPKG) LRPKG=$O(^DIC(9.4,"B","LAB SERVICE",0))
"RTN","LRCAPES",137,0)
PKG ;Check to see if Lab Package is installed
"RTN","LRCAPES",138,0)
 I '$G(LRPKG) D  D WKL Q
"RTN","LRCAPES",139,0)
 . W !?5,"LAB SERVICE PACKAGE is not loaded",!
"RTN","LRCAPES",140,0)
PCE ;Check to see if PCE is turned on
"RTN","LRCAPES",141,0)
 S X="PXAI" X ^%ZOSF("TEST") I '$T D:'$G(LRES)  D WKL Q
"RTN","LRCAPES",142,0)
 . W !?5,"PCE Is not installed",!
"RTN","LRCAPES",143,0)
 S LRPCEON=$$PKGON^VSIT("PX")
"RTN","LRCAPES",144,0)
 I '$G(LRES),'LRPCEON D  D WKL Q
"RTN","LRCAPES",145,0)
 . W !?5,"PCE is not turned on",!
"RTN","LRCAPES",146,0)
 S LRDLOC=+$$GET1^DIQ(69.9,"1,",.8,"I")
"RTN","LRCAPES",147,0)
OOS ;Check to see if the LRDLOC is an OOS location
"RTN","LRCAPES",148,0)
 I $G(LRES),$P($G(^SC(LRDLOC,0)),U)'["LAB DIV " D  D WKL Q
"RTN","LRCAPES",149,0)
 . W !?5,"DEFAULT LAB OOS LOCATION is not defined correctly",!
"RTN","LRCAPES",150,0)
 S LRESCPT=1
"RTN","LRCAPES",151,0)
 D:'$G(^TMP("LR",$J,"AK",0,1))'=DUZ_U_DT EN
"RTN","LRCAPES",152,0)
 I $G(LRES) Q $G(LRESCPT)
"RTN","LRCAPES",153,0)
LOOP ;
"RTN","LRCAPES",154,0)
 Q:$G(LREND)
"RTN","LRCAPES",155,0)
 F  D WLN Q:$G(LREND)  I '$G(LRNOP) D CPTEN Q:$G(LREND)
"RTN","LRCAPES",156,0)
 D CLEAN Q
"RTN","LRCAPES",157,0)
CPTEN ;Entry point from CPT API call
"RTN","LRCAPES",158,0)
WKL S (LRNOP,LREND)=0 D READ^LRCAPES1
"RTN","LRCAPES",159,0)
 D DIS^LRCAPES1
"RTN","LRCAPES",160,0)
 I '$O(^TMP("LR",$J,"LRLST",0)) D END Q
"RTN","LRCAPES",161,0)
LOAD ;Setup ^TMP("LRPXAPI" to load CPT workload
"RTN","LRCAPES",162,0)
 K LRXCPT,LRXTST,^TMP("LRPXAPI",$J)
"RTN","LRCAPES",163,0)
 S LRDUZ=LRPRO
"RTN","LRCAPES",164,0)
 I '$D(LRSN),'$D(LRSVDCDT) D
"RTN","LRCAPES",165,0)
 .S LRSN=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",4,"I")
"RTN","LRCAPES",166,0)
 .S LRSVDCDT=LRCDT
"RTN","LRCAPES",167,0)
 .S LRCDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",3,"I")
"RTN","LRCAPES",168,0)
 I '$G(LRESCPT) S LRNOP="3^PCE Workload Capture Not Setup"
"RTN","LRCAPES",169,0)
 I $G(LRNOP) D  D SENDWKL Q
"RTN","LRCAPES",170,0)
 . I '$D(LRQUIET) W !,$$CJ^XLFSTR("PCE Wkld Abort "_$P(LRNOP,U,2),IOM)
"RTN","LRCAPES",171,0)
 I $G(LRESCPT),'$G(LRNOP) D
"RTN","LRCAPES",172,0)
 . N AFTER812,D,D0,DDER,DI,DIC,DIG,DIH,DISL,DIV
"RTN","LRCAPES",173,0)
 . N I,LRACC,LRCNT,LRI,LRPCEN,PXALOOK,PXASUB,PXJ,PXJJ,LRCCT
"RTN","LRCAPES",174,0)
 . N SDT1,SPEL,SUBL,TYPEI,X,XPARSYS
"RTN","LRCAPES",175,0)
 . S LRTST=0
"RTN","LRCAPES",176,0)
 . F  S LRTST=$O(^TMP("LR",$J,"LRLST",LRTST)) Q:LRTST<1  D
"RTN","LRCAPES",177,0)
 . . S (LRNLTN,CPT)=+$G(^TMP("LR",$J,"LRLST",LRTST)),LRTSTP=$P(^(LRTST),U,2,99)
"RTN","LRCAPES",178,0)
 . . D SET^LRCAPPH1
"RTN","LRCAPES",179,0)
 . D ADDPREV
"RTN","LRCAPES",180,0)
SENDWKL ; Store LMIP workload
"RTN","LRCAPES",181,0)
 D SEND^LRCAPES1
"RTN","LRCAPES",182,0)
 L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","LRCAPES",183,0)
 S LRNOP=0
"RTN","LRCAPES",184,0)
 I $D(LRSVDCDT) S LRCDT=LRSVDCDT K LRSN,LRSVDCDT
"RTN","LRCAPES",185,0)
 Q
"RTN","LRCAPES",186,0)
ADDPREV ;Add CPT quantities from PCE to current totals
"RTN","LRCAPES",187,0)
 N LRSTR2,LRIEN2,LRPX,LRCPT,LRXX,LRCPT2,LRCPT1,LRX1,LRQ1,LRQ2,LRQT,LRCT
"RTN","LRCAPES",188,0)
 S LRSTR2=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE"))
"RTN","LRCAPES",189,0)
 Q:'LRSTR2
"RTN","LRCAPES",190,0)
 K LRVIS S LRVIS=""
"RTN","LRCAPES",191,0)
 S LRCT=$L(LRSTR2,";")-1,LRVIS=$P(LRSTR2,";",LRCT)
"RTN","LRCAPES",192,0)
 F LRPX=1:1 S LRIEN2=$P(LRSTR2,";",LRPX) Q:LRIEN2=""  D
"RTN","LRCAPES",193,0)
 .D GETCPT^PXAPIOE(LRIEN2,"LRCPT","ERR")
"RTN","LRCAPES",194,0)
 S LRXX=""
"RTN","LRCAPES",195,0)
 F  S LRXX=$O(LRCPT(LRXX)) Q:LRXX=""  D
"RTN","LRCAPES",196,0)
 .Q:$P(LRCPT(LRXX),"^",3)'=LRVIS
"RTN","LRCAPES",197,0)
 .S LRCPT2=""
"RTN","LRCAPES",198,0)
 .S LRCPT2=+$G(LRCPT(LRXX))
"RTN","LRCAPES",199,0)
 .D:LRCPT2
"RTN","LRCAPES",200,0)
 ..S (LRX1,LRQT)=0
"RTN","LRCAPES",201,0)
 ..F  S LRX1=$O(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1)) Q:LRX1=""!(LRQT)  D
"RTN","LRCAPES",202,0)
 ...S LRCPT1=+$G(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"PROCEDURE"))
"RTN","LRCAPES",203,0)
 ...I LRCPT1=LRCPT2 D
"RTN","LRCAPES",204,0)
 ....S LRQ1=$P(LRCPT(LRXX),"^",16)
"RTN","LRCAPES",205,0)
 ....S LRQ2=+$G(^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"QTY"))
"RTN","LRCAPES",206,0)
 ....S ^TMP("LRPXAPI",$J,"PROCEDURE",LRX1,"QTY")=LRQ1+LRQ2
"RTN","LRCAPES",207,0)
 ....S LRQT=1
"RTN","LRCAPES",208,0)
 Q
"RTN","LRCAPES",209,0)
CLEAN ;Final Cleanup
"RTN","LRCAPES",210,0)
 K AFTER812,AGE,CPT,D,D0,DOB,DDER,DFN,DI,DIC,DIG,DIH,DIR,DIRUT
"RTN","LRCAPES",211,0)
 K DISL,DIRUT,DIU,DUOUT,DIV,DQ
"RTN","LRCAPES",212,0)
 K I,J,LRACC,LRCNT,LRI,POP,PXALOOK,PXASUB,PXJ,PXJJ
"RTN","LRCAPES",213,0)
 K SDT1,SPEL,SUBL,T1,TYPEI,X,XPARSYS
"RTN","LRCAPES",214,0)
 K ANS,CLN,CNT,FPRI,LRAA,LRAD,LRAN,LRANSX,LRANSY,LRCDT,LRCNT
"RTN","LRCAPES",215,0)
 K LRDFN,LRDPF,LRDLOC,LRDSSID,LRDSSLOC,LRDUZ,LREDT,LREND,LRES,LRESCPT
"RTN","LRCAPES",216,0)
 K LRIDT,LRIDIV,LRLLOC,LRLLOCX,LRLST,LRNINS,LRNLT,LRNLTN,LRNODE0,LRNOP,LROK
"RTN","LRCAPES",217,0)
 K LRPCEN,LRPCENON,LRPCEVSO,LRPKG,LRPRAC,LRPRO,LRRB,LRQ,LRSS,LRTREA,LRTST,LRURG
"RTN","LRCAPES",218,0)
 K LRSPECID,LRTSTP,LRUID,LRVBY
"RTN","LRCAPES",219,0)
 K LRVSITN,LRWRD,LRX,LRXCPT,LRXTST
"RTN","LRCAPES",220,0)
 K NODE,NODE0,PNM,SEX,SDFLAG,SSN,VA,X1,X2,X3
"RTN","LRCAPES",221,0)
 K ^TMP("LRMOD",$J)
"RTN","LRCAPES",222,0)
 K ^TMP("LR",$J,"AK"),^TMP("LR",$J,"LRLST")
"RTN","LRCAPES",223,0)
 K ^TMP("LRPXAPI",$J)
"RTN","LRCAPES",224,0)
 D KVAR^VADPT
"RTN","LRCAPES",225,0)
 Q
"RTN","LRCAPES",226,0)
CPT(LRAA,LRAD,LRAN,LRPRO) ;AP Release entry point
"RTN","LRCAPES",227,0)
 ;LRAA=accession area, LRAD=accession date, LRAN=accession number
"RTN","LRCAPES",228,0)
 ;LRPRO=provider
"RTN","LRCAPES",229,0)
 N X,Y,I,LRI,LREDT,LRCDT,LRIDT,LRLLOCX,LRSPECID,DIC,LRNOP,LREND,LRES
"RTN","LRCAPES",230,0)
 S (LRLLOCX,LRLLOC)=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",231,0)
 S DIC=44,DIC(0)="ONM",X=LRLLOC D ^DIC
"RTN","LRCAPES",232,0)
 I Y>1 S LRLLOC=+Y
"RTN","LRCAPES",233,0)
 I Y<1 D  Q:$G(LREND)
"RTN","LRCAPES",234,0)
 . S DIC(0)="AEZNM" D ^DIC
"RTN","LRCAPES",235,0)
 . I Y<1 S LRNOP="4^Not an outpatient location",LREND=1 Q
"RTN","LRCAPES",236,0)
 . S LRLLOC=+Y
"RTN","LRCAPES",237,0)
 ;KLL - set LRDSSLOC to LRDLOC, instead of LRLLOC to resolve location
"RTN","LRCAPES",238,0)
 ;      problem occurring in PCE
"RTN","LRCAPES",239,0)
 ;TAC - use accession area OOS location if one exists
"RTN","LRCAPES",240,0)
 S LRDSSLOC=+$$GET1^DIQ(68,LRAA_",",.8,"I")
"RTN","LRCAPES",241,0)
 S LRDSSLOC=$S($G(LRDSSLOC):LRDSSLOC,1:+$G(LRDLOC))
"RTN","LRCAPES",242,0)
 S LRDSSID=+$$GET1^DIQ(44,+LRLLOC,8,"I")
"RTN","LRCAPES",243,0)
 S LRNINS=$$GET1^DIQ(44,+LRLLOC,3,"I")
"RTN","LRCAPES",244,0)
 S LRNINS=$S(LRNINS:LRNINS,1:DUZ(2))
"RTN","LRCAPES",245,0)
 I '$G(LRIDT) S LRIDT=+$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",13.5,"I")
"RTN","LRCAPES",246,0)
 S LRUID=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",16)
"RTN","LRCAPES",247,0)
 S LRLLOCX=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",6)
"RTN","LRCAPES",248,0)
 S LRSPECID="Acc #: "_$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",15,"E")
"RTN","LRCAPES",249,0)
 S:$L($G(LRUID)) LRSPECID=LRSPECID_"  UID: "_LRUID
"RTN","LRCAPES",250,0)
 S LREDT=$$GET1^DIQ(68.02,LRAN_","_LRAD_","_LRAA_",",9,"I")
"RTN","LRCAPES",251,0)
 I 'LREDT S LREDT=$$NOW^XLFDT
"RTN","LRCAPES",252,0)
 S LRCDT="Collection Date: "_$$FMTE^XLFDT(LREDT,1)
"RTN","LRCAPES",253,0)
 I '$G(LRESCPT) D  Q
"RTN","LRCAPES",254,0)
 . D EN^DDIOL("CPT workload is not activated","","!?20")
"RTN","LRCAPES",255,0)
 I $S('$G(LRAA):1,'$G(LRAD):1,'$G(LRAN):1,'$G(LRPRO):1,1:0) Q
"RTN","LRCAPES",256,0)
 I +$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))'=LRDFN Q
"RTN","LRCAPES",257,0)
 D CPTEN
"RTN","LRCAPES",258,0)
 Q
"RTN","LRCAPES1")
0^2^B91936521^B78998804
"RTN","LRCAPES1",1,0)
LRCAPES1 ;DALOI/FHS/KLL - CONT MANUAL PCE CPT WORKLOAD CAPTURE ;02/28/12  20:29
"RTN","LRCAPES1",2,0)
 ;;5.2;LAB SERVICE;**274,308,350,448**;Sep 27, 1994;Build 1
"RTN","LRCAPES1",3,0)
 ;
"RTN","LRCAPES1",4,0)
 ;Continuation of LRCAPES
"RTN","LRCAPES1",5,0)
 ;
"RTN","LRCAPES1",6,0)
 ;
"RTN","LRCAPES1",7,0)
EN ; Setup the order of defined NLT codes
"RTN","LRCAPES1",8,0)
 ;
"RTN","LRCAPES1",9,0)
 Q:$G(^TMP("LR",$J,"AK",0,1))=DUZ_U_DT
"RTN","LRCAPES1",10,0)
 N LRI,LRY,LRX,LRX2,LRX3,LRDES,LRCNT
"RTN","LRCAPES1",11,0)
 K ^TMP("LR",$J,"AK")
"RTN","LRCAPES1",12,0)
 S LRCNT=0
"RTN","LRCAPES1",13,0)
 S ^TMP("LR",$J,"AK",0)=$$FMADD^XLFDT(DT,2)_U_DT_U_"ES CPT code list"
"RTN","LRCAPES1",14,0)
 S ^TMP("LR",$J,"AK",0,1)=DUZ_U_DT
"RTN","LRCAPES1",15,0)
 S LRY="^LAM(""AK"")" F  S LRY=$Q(@LRY) Q:$QS(LRY,1)'="AK"  D
"RTN","LRCAPES1",16,0)
 . N LRDES
"RTN","LRCAPES1",17,0)
 . S LRX2=$QS(LRY,2),LRX3=$QS(LRY,3)
"RTN","LRCAPES1",18,0)
 . Q:'$G(LRX2)!('$G(LRX3))
"RTN","LRCAPES1",19,0)
 . S LRI=0 F  S LRI=$O(^LAM(LRX3,4,"AC","CPT",LRI)) Q:LRI<1  D
"RTN","LRCAPES1",20,0)
 . . S LRX=+$G(^LAM(LRX3,4,LRI,0)),LRX=$$CPT^ICPTCOD(LRX,DT)
"RTN","LRCAPES1",21,0)
 . . Q:'$P(LRX,U,7)
"RTN","LRCAPES1",22,0)
 . . K LRDES S LRDES=$$CPTD^ICPTCOD(+LRX,"LRDES")
"RTN","LRCAPES1",23,0)
 . . S LRCNT=LRCNT+1
"RTN","LRCAPES1",24,0)
 . . I $L(LRDES(1)) S ^TMP("LR",$J,"AK",LRX2,LRI,+LRX)=LRX3_U_$E(LRDES(1),1,55)_U_$$GET1^DIQ(64,LRX3_",",.01,"E")_U_$$GET1^DIQ(64,LRX3_",",1,"E") Q
"RTN","LRCAPES1",25,0)
 . . S ^TMP("LR",$J,"AK",LRX2,LRI,+LRX)=LRX3_U_$P(LRX,U,3)_U_$$GET1^DIQ(64,LRX3_",",.01,"E")_U_$$GET1^DIQ(64,LRX3_",",1,"E")
"RTN","LRCAPES1",26,0)
 Q
"RTN","LRCAPES1",27,0)
 ;
"RTN","LRCAPES1",28,0)
 ;
"RTN","LRCAPES1",29,0)
SET(DFN,LRPRO,LREDT,LRLOC,LRINS,LRCPT,LRAA,LRAD,LRAN) ; Call to check variable
"RTN","LRCAPES1",30,0)
 S (LREND,LROK)=0,LRAA=+$G(LRAA),LRAD=+$G(LRAD),LRAN=+$G(LRAN)
"RTN","LRCAPES1",31,0)
 I '$D(^DPT(DFN,0))#2 S LROK="1^Error Patient" Q LROK
"RTN","LRCAPES1",32,0)
 I $$GET^XUA4A72(LRPRO,DT)<1 S LROK="2^Inactive Provider" Q LROK
"RTN","LRCAPES1",33,0)
 I LREDT'?7N.E S LROK="3^Date Format" Q LROK
"RTN","LRCAPES1",34,0)
 I '$D(^SC(LRLOC,0))#2 S LROK="4^Location Error" Q LROK
"RTN","LRCAPES1",35,0)
 I "CMZ"'[$P($G(^SC(LRLOC,0)),U,3) S LROK="4.2^Not Inpatient Location" Q LROK
"RTN","LRCAPES1",36,0)
 I '$G(LRDSSID) S LROK="4.2^Not Inpatient Location" Q LROK
"RTN","LRCAPES1",37,0)
 I '$D(^DIC(4,LRINS,0))#2 S LROK="5^Institution Error" Q LROK
"RTN","LRCAPES1",38,0)
 I '$O(LRCPT(0)) S LROK="6^No CPT Codes Passed" Q LROK
"RTN","LRCAPES1",39,0)
 D EN^LRCAPES,READ^LRCAPES1
"RTN","LRCAPES1",40,0)
 D DIS I '$O(^TMP("LR",$J,"LRLST",0)) S LROK="-1" Q LROK
"RTN","LRCAPES1",41,0)
 D LOAD^LRCAPES,CLEAN^LRCAPES
"RTN","LRCAPES1",42,0)
 Q LROK
"RTN","LRCAPES1",43,0)
 ;
"RTN","LRCAPES1",44,0)
 ;
"RTN","LRCAPES1",45,0)
SEND ; Send data to PCE via DATA2PCE^PXAPI API
"RTN","LRCAPES1",46,0)
 I $$GET1^DIQ(63,+$G(LRDFN),.02,"I")=2,$G(LRDSSID),$O(^TMP("LRPXAPI",$J,"PROCEDURE",0)) D
"RTN","LRCAPES1",47,0)
 . I '$D(LRQUIET) W !,$$CJ^XLFSTR("Sending PCE Workload",IOM)
"RTN","LRCAPES1",48,0)
 . S:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")) ^("PCE")="" S LRPCEN=^("PCE")
"RTN","LRCAPES1",49,0)
 . S LREDT=$S($G(LREDT):LREDT,1:$$NOW^XLFDT)
"RTN","LRCAPES1",50,0)
 . S:'$P(LREDT,".",2) $P(LREDT,".",2)="1201"
"RTN","LRCAPES1",51,0)
 . D SEND^LRCAPPH1
"RTN","LRCAPES1",52,0)
 . I '$D(LRQUIET),'$G(LRVSITN) Q
"RTN","LRCAPES1",53,0)
 . I '$D(LRQUIET) W $$CJ^XLFSTR("Visit # "_LRVSITN,80)
"RTN","LRCAPES1",54,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")=$E(LRPCEN_LRVSITN_";",1,80)
"RTN","LRCAPES1",55,0)
 D SETWKL(LRAA,LRAD,LRAN)
"RTN","LRCAPES1",56,0)
 Q
"RTN","LRCAPES1",57,0)
 ;
"RTN","LRCAPES1",58,0)
 ;
"RTN","LRCAPES1",59,0)
SETWKL(LRAA,LRAD,LRAN) ; Set workload into 68 from CPT coding
"RTN","LRCAPES1",60,0)
 Q:'$P(LRPARAM,U,14)!('$P($G(^LRO(68,+$G(LRAA),0)),U,16))
"RTN","LRCAPES1",61,0)
 I '$G(^LRO(68,+$G(LRAA),1,+$G(LRAD),1,+$G(LRAN),0)) Q
"RTN","LRCAPES1",62,0)
 I '$O(^TMP("LR",$J,"LRLST",0)) K ^TMP("LR",$J,"LRLST") Q
"RTN","LRCAPES1",63,0)
 I '$D(LRQUIET) W !,$$CJ^XLFSTR("Storing LMIP Workload",IOM)
"RTN","LRCAPES1",64,0)
 N LRCNT,LRT,LRP,LRTIME,LRCDEF,LRURGW,LRI,LRADD
"RTN","LRCAPES1",65,0)
 S:'$G(LRURG) LRURG=9
"RTN","LRCAPES1",66,0)
 S (LRADD,LRCNT)=1,LRCDEF="3000",LRURGW=+$G(LRURG)
"RTN","LRCAPES1",67,0)
 S LRT("P")=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0))
"RTN","LRCAPES1",68,0)
 S LRI=0 F  S LRI=$O(^TMP("LR",$J,"LRLST",LRI)) Q:LRI<1  D
"RTN","LRCAPES1",69,0)
 . S LRP=$P(^TMP("LR",$J,"LRLST",LRI),U,2)
"RTN","LRCAPES1",70,0)
 . I 'LRP D  Q:'LRP
"RTN","LRCAPES1",71,0)
 . . S LRP=+$O(^LAM("AB",$P(^TMP("LR",$J,"LRLST",LRI),U)_";ICPT(",0))
"RTN","LRCAPES1",72,0)
 . Q:'($D(^LAM(LRP,0))#2)
"RTN","LRCAPES1",73,0)
 . S LRT=+$O(^LAM(LRP,7,"B",0))
"RTN","LRCAPES1",74,0)
 . I 'LRT S LRT=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0))
"RTN","LRCAPES1",75,0)
 . Q:'LRT
"RTN","LRCAPES1",76,0)
 . D SET^LRCAPV1S,STUFI^LRCAPV1
"RTN","LRCAPES1",77,0)
 K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES1",78,0)
 Q
"RTN","LRCAPES1",79,0)
 ;
"RTN","LRCAPES1",80,0)
 ;
"RTN","LRCAPES1",81,0)
DIS ;
"RTN","LRCAPES1",82,0)
 N LRNOTFD,LRNOLK,LRIA81,LRIA64,LRRF64,LRINVES,X9
"RTN","LRCAPES1",83,0)
 K X,LRLST,LRCNT,LRI,LRX,LRXY,LRXTST
"RTN","LRCAPES1",84,0)
 K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES1",85,0)
 I $G(LRANSX) D
"RTN","LRCAPES1",86,0)
 . S X=LRANSX D RANGE^LRWU2
"RTN","LRCAPES1",87,0)
 . X (X9_"S LRX=T1 D EX1^LRCAPES")
"RTN","LRCAPES1",88,0)
 I '$O(^TMP("LR",$J,"LRLST",0)) D  Q
"RTN","LRCAPES1",89,0)
 . I $G(LRNOTFD)!$G(LRIA81)!$G(LRIA64)!$G(LRNOLK)!$G(LRRF64)!$G(LRINVES) D
"RTN","LRCAPES1",90,0)
 . . W !,?5,"The following CPT Code(s) are not selected:"
"RTN","LRCAPES1",91,0)
 . . W:$G(LRNOTFD) !?8,"Not found in #81: ",LRNOTFD
"RTN","LRCAPES1",92,0)
 . . W:$G(LRIA81) !?8,"Inactive in #81: ",LRIA81
"RTN","LRCAPES1",93,0)
 . . W:$G(LRIA64) !?8,"Inactive in #64: ",LRIA64
"RTN","LRCAPES1",94,0)
 . . W:$G(LRNOLK) !?8,"Not linked to workload: ",LRNOLK
"RTN","LRCAPES1",95,0)
 . . W:$G(LRINVES) !?8,"Invalid ES Display Order number: ",LRINVES
"RTN","LRCAPES1",96,0)
 . W !
"RTN","LRCAPES1",97,0)
 . S LRANSY=0
"RTN","LRCAPES1",98,0)
 D DEM
"RTN","LRCAPES1",99,0)
 ;
"RTN","LRCAPES1",100,0)
CHK ; User accepts CPT list
"RTN","LRCAPES1",101,0)
 N DIR
"RTN","LRCAPES1",102,0)
 S DIR("A")="Is this correct "
"RTN","LRCAPES1",103,0)
 S DIR(0)="Y",DIR("B")="Yes" D RD
"RTN","LRCAPES1",104,0)
 I $G(LRANSY)'=1 D
"RTN","LRCAPES1",105,0)
 .K ^TMP("LR",$J,"LRLST")
"RTN","LRCAPES1",106,0)
 .S ^TMP("LR",$J,"LRLST")=$$FMADD^XLFDT(DT,2)_U_DT_U_"LAB ES CPT"
"RTN","LRCAPES1",107,0)
 Q
"RTN","LRCAPES1",108,0)
 ;
"RTN","LRCAPES1",109,0)
 ;
"RTN","LRCAPES1",110,0)
PG ; Page break
"RTN","LRCAPES1",111,0)
 N DIR,DIRUT,DUOUT,DTOUT
"RTN","LRCAPES1",112,0)
 S DIR(0)="E" D ^DIR
"RTN","LRCAPES1",113,0)
 I $G(DIRUT) S LREND=1 Q
"RTN","LRCAPES1",114,0)
 W @IOF
"RTN","LRCAPES1",115,0)
 Q
"RTN","LRCAPES1",116,0)
 ;
"RTN","LRCAPES1",117,0)
 ;
"RTN","LRCAPES1",118,0)
RD ; DIR read
"RTN","LRCAPES1",119,0)
 N Y,X,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LRCAPES1",120,0)
 S (LRANSY,LRANSX)=0
"RTN","LRCAPES1",121,0)
 S LREND=0 W !
"RTN","LRCAPES1",122,0)
 D ^DIR I $D(DIRUT) S LREND=1 Q
"RTN","LRCAPES1",123,0)
 S LRANSY=$G(Y),LRANSX=$G(X)
"RTN","LRCAPES1",124,0)
 Q
"RTN","LRCAPES1",125,0)
 ;
"RTN","LRCAPES1",126,0)
 ;
"RTN","LRCAPES1",127,0)
READ ; Select CPT codes for accession
"RTN","LRCAPES1",128,0)
 ; Ask if want to see previously loaded CPT codes
"RTN","LRCAPES1",129,0)
 D LSTCPT(LRAA,LRAD,LRAN)
"RTN","LRCAPES1",130,0)
 N DIR,LREND
"RTN","LRCAPES1",131,0)
 S DIR(0)="LO",LREND=0
"RTN","LRCAPES1",132,0)
 S DIR("A")="Select CPT codes",DIR("A",1)="Enter ? for list"
"RTN","LRCAPES1",133,0)
 S DIR("?")="^D HLP^LRCAPES1"
"RTN","LRCAPES1",134,0)
 S DIR("??")="^D HLP^LRCAPES1"
"RTN","LRCAPES1",135,0)
 D RD
"RTN","LRCAPES1",136,0)
 Q
"RTN","LRCAPES1",137,0)
 ;
"RTN","LRCAPES1",138,0)
 ;
"RTN","LRCAPES1",139,0)
DEM ;
"RTN","LRCAPES1",140,0)
 I $S('$G(LRAA):1,'$G(LRAD):1,'$G(LRAN):1,$G(LRCDT)="":1,1:0) Q
"RTN","LRCAPES1",141,0)
 N LRIENS,DA
"RTN","LRCAPES1",142,0)
 S LRIENS=LRAN_","_LRAD_","_LRAA_","
"RTN","LRCAPES1",143,0)
 W @IOF
"RTN","LRCAPES1",144,0)
 W !?3,PNM,?35,SSN,?55,"DOB: ",$$FMTE^XLFDT(DOB,1)
"RTN","LRCAPES1",145,0)
 W !?5,LRCDT
"RTN","LRCAPES1",146,0)
 W !?10,LRSPECID,?60,"Loc: ",$G(LRLLOCX)
"RTN","LRCAPES1",147,0)
 I $G(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")) W !?15,"PCE ENC # "_^("PCE")
"RTN","LRCAPES1",148,0)
 W !?15,"Specimen: ",$$GET1^DIQ(68.05,"1,"_LRIENS,.01,"E")
"RTN","LRCAPES1",149,0)
 I $G(LRSS)'="",$O(^LR(LRDFN,LRSS,LRIDT,.1,0)) D
"RTN","LRCAPES1",150,0)
 . N LRX
"RTN","LRCAPES1",151,0)
 . W !?5,"Tissue Specimens: "
"RTN","LRCAPES1",152,0)
 . S LRX=0 F  S LRX=$O(^LR(LRDFN,LRSS,LRIDT,.1,LRX)) Q:LRX<1  W !,?15,$P($G(^(LRX,0)),U)
"RTN","LRCAPES1",153,0)
 W !?5,"Test(s); "
"RTN","LRCAPES1",154,0)
 S (LREND,LRX)=0 D
"RTN","LRCAPES1",155,0)
 . N LREND
"RTN","LRCAPES1",156,0)
 . F  S LRX=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRX)) Q:LRX<1!($G(LREND))  D
"RTN","LRCAPES1",157,0)
 . . I $Y>(IOSL-5) D PG Q:$G(LREND)
"RTN","LRCAPES1",158,0)
 . . W ?15,$P($G(^LAB(60,+LRX,0)),U)_"/ "
"RTN","LRCAPES1",159,0)
 ;
"RTN","LRCAPES1",160,0)
 ; Display pathologist's name
"RTN","LRCAPES1",161,0)
 N LRPATH,LRIENS,LRFL
"RTN","LRCAPES1",162,0)
 S:LRSS="AU" LRPATH=$$GET1^DIQ(63,LRDFN,13.6,"I")
"RTN","LRCAPES1",163,0)
 I LRSS'="AU" D
"RTN","LRCAPES1",164,0)
 . S LRFL=$S(LRSS="EM":63.02,LRSS="CY":63.09,LRSS="SP":63.08,1:0)
"RTN","LRCAPES1",165,0)
 . S LRIENS=LRIDT_","_LRDFN_","
"RTN","LRCAPES1",166,0)
 . S LRPATH=$$GET1^DIQ(LRFL,LRIENS,.02,"I")
"RTN","LRCAPES1",167,0)
 S LRPATH=$$GET1^DIQ(200,+$G(LRPATH),.01,"I")
"RTN","LRCAPES1",168,0)
 W:LRSS="CY" !?5,"Pathologist/Cytotechnologist: ",LRPATH,!
"RTN","LRCAPES1",169,0)
 W:LRSS'="CY" !?5,"Pathologist: ",LRPATH,!
"RTN","LRCAPES1",170,0)
 ;
"RTN","LRCAPES1",171,0)
 Q:'$O(^TMP("LR",$J,"LRLST",0))
"RTN","LRCAPES1",172,0)
 W !!,$$CJ^XLFSTR("Selected CPT Codes",IOM)
"RTN","LRCAPES1",173,0)
 W ! S (LREND,LRX)=0
"RTN","LRCAPES1",174,0)
 D
"RTN","LRCAPES1",175,0)
 . N LREND,LRTMP
"RTN","LRCAPES1",176,0)
 . S LRTMP=0
"RTN","LRCAPES1",177,0)
 . F  S LRX=+$O(^TMP("LR",$J,"LRLST",LRX)) Q:LRX<1!($G(LREND))  D
"RTN","LRCAPES1",178,0)
 . . I $Y>(IOSL-5) D PG Q:$G(LREND)
"RTN","LRCAPES1",179,0)
 . . S LRTMP=$G(^TMP("LR",$J,"LRLST",LRX))
"RTN","LRCAPES1",180,0)
 . . W !?5,"("_LRX_")  "_$P(LRTMP,U)_" "_$E($P(LRTMP,U,3),1,50),!
"RTN","LRCAPES1",181,0)
 . . W:$P(LRTMP,U,5) ?10,$E($P(LRTMP,U,4),1,50)_"  {"_$P(LRTMP,U,5)_"}"
"RTN","LRCAPES1",182,0)
 ;
"RTN","LRCAPES1",183,0)
 I $G(LRNOTFD)!$G(LRIA81)!$G(LRIA64)!$G(LRNOLK)!$G(LRRF64)!$G(LRINVES) D
"RTN","LRCAPES1",184,0)
 . W !!!?5,"The following CPT Codes are NOT Selected"
"RTN","LRCAPES1",185,0)
 . W:$G(LRNOTFD) !?8,"Not found in #81: ",LRNOTFD
"RTN","LRCAPES1",186,0)
 . W:$G(LRIA81) !?8,"Inactive in #81: ",LRIA81
"RTN","LRCAPES1",187,0)
 . W:$G(LRIA64) !?8,"Inactive in #64: ",LRIA64
"RTN","LRCAPES1",188,0)
 . W:$G(LRNOLK) !?8,"Not Linked to Workload: ",LRNOLK
"RTN","LRCAPES1",189,0)
 . W:$G(LRRF64) !?8,"Inactive in #64\Active Replacement Found: ",LRRF64
"RTN","LRCAPES1",190,0)
 . W:$G(LRINVES) !?8,"Invalid ES Display Order number: ",LRINVES
"RTN","LRCAPES1",191,0)
 Q
"RTN","LRCAPES1",192,0)
 ;
"RTN","LRCAPES1",193,0)
 ;
"RTN","LRCAPES1",194,0)
CHKCPT ; Edit CPT code - does it exist,active in 81 or 64, linked to workload?
"RTN","LRCAPES1",195,0)
 N LRINACT,LRII,LRXY1,LRXY2
"RTN","LRCAPES1",196,0)
 S (LRNR,LRACTV,LRXY2,LRWL2,LRD2)=0,LRXY1=$P(LRXY,U)
"RTN","LRCAPES1",197,0)
 I LRXY1=-1 S LRNOTFD=$S($G(LRNOTFD):LRNOTFD_LRX_",",1:LRX_",") Q
"RTN","LRCAPES1",198,0)
 I '$P(LRXY,U,7) S LRIA81=$S($G(LRIA81):LRIA81_LRXY1_",",1:LRXY1_",") Q
"RTN","LRCAPES1",199,0)
 I '$O(^LAM("AB",LRXY1_";ICPT(",0)) D  Q
"RTN","LRCAPES1",200,0)
 . S LRNOLK=$S($G(LRNOLK):LRNOLK_LRXY1_",",1:LRXY1_","),LRNR=1
"RTN","LRCAPES1",201,0)
 ;If CPT is not active in 64, look for alternative active CPT
"RTN","LRCAPES1",202,0)
 ;S LRWL2=+$O(^LAM("AB",LRXY1_";ICPT(",0))
"RTN","LRCAPES1",203,0)
 ;S:$G(LRQ)'="" LRWL2=$P(@LRQ,"^") ;For ES Display CPTs
"RTN","LRCAPES1",204,0)
 S LRWLQUFL=0
"RTN","LRCAPES1",205,0)
 D GETWL2
"RTN","LRCAPES1",206,0)
 Q:'LRWL2
"RTN","LRCAPES1",207,0)
 ;S LRD2=+$O(^LAM("AB",LRXY1_";ICPT(",LRWL2,LRD2))
"RTN","LRCAPES1",208,0)
 ;S LRREL2=$P(^LAM(LRWL2,4,LRD2,0),U,3),LRINA2=$P(^(0),U,4)
"RTN","LRCAPES1",209,0)
 ;Q:LRREL2&(LRINA2="")
"RTN","LRCAPES1",210,0)
 ;Q:LREDT>(LRREL2-1)&((LREDT<LRINA2)!(LRINA2=""))
"RTN","LRCAPES1",211,0)
 Q:LRWLQUFL
"RTN","LRCAPES1",212,0)
 K LRWLQUFL
"RTN","LRCAPES1",213,0)
 ; CPT is inactive, search for another linked, active CPT to replace it
"RTN","LRCAPES1",214,0)
 S LRD2="A",LRD2=$O(^LAM(LRWL2,4,LRD2),-1)
"RTN","LRCAPES1",215,0)
 I LRD2>1 D
"RTN","LRCAPES1",216,0)
 . S LRII=0,(LRREL2,LRINA2)=""
"RTN","LRCAPES1",217,0)
 . F  S LRII=$O(^LAM(LRWL2,4,LRII)) Q:'LRII!(LRACTV)  D
"RTN","LRCAPES1",218,0)
 . . S LRXY2=+$P(^LAM(LRWL2,4,LRII,0),U)
"RTN","LRCAPES1",219,0)
 . . Q:LRXY2=LRXY1
"RTN","LRCAPES1",220,0)
 . . S LRREL2=$P(^LAM(LRWL2,4,LRII,0),U,3),LRINA2=$P(^(0),U,4)
"RTN","LRCAPES1",221,0)
 . . I LRREL2&(LRINA2="") S LRACTV=1  Q
"RTN","LRCAPES1",222,0)
 . . I LREDT>(LRREL2-1)&((LREDT<LRINA2)!(LRINA2="")) S LRACTV=1  Q
"RTN","LRCAPES1",223,0)
 ; No replacement active CPT found, 
"RTN","LRCAPES1",224,0)
 I 'LRACTV S LRIA64=$S($G(LRIA64):LRIA64_LRXY1_",",1:LRXY1_","),LRNR=1 Q
"RTN","LRCAPES1",225,0)
 Q
"RTN","LRCAPES1",226,0)
 ;
"RTN","LRCAPES1",227,0)
 ;
"RTN","LRCAPES1",228,0)
GETWL2 ;
"RTN","LRCAPES1",229,0)
 ;
"RTN","LRCAPES1",230,0)
 N LRWL,LRD2
"RTN","LRCAPES1",231,0)
 S LRD2=0
"RTN","LRCAPES1",232,0)
 ;
"RTN","LRCAPES1",233,0)
 I $G(LRQ)'="" S LRWL2=$P(@LRQ,"^") D  Q
"RTN","LRCAPES1",234,0)
 . S LRD2=+$O(^LAM("AB",LRXY1_";ICPT(",LRWL2,LRD2))
"RTN","LRCAPES1",235,0)
 . S LRREL2=$P(^LAM(LRWL2,4,LRD2,0),U,3),LRINA2=$P(^(0),U,4)
"RTN","LRCAPES1",236,0)
 . I LRREL2&(LRINA2="") S LRWLQUFL=1
"RTN","LRCAPES1",237,0)
 . I LREDT>(LRREL2-1)&((LREDT<LRINA2)!(LRINA2="")) S LRWLQUFL=1
"RTN","LRCAPES1",238,0)
 ;
"RTN","LRCAPES1",239,0)
 S LRWL2=""
"RTN","LRCAPES1",240,0)
 ;
"RTN","LRCAPES1",241,0)
 S LRWL=""
"RTN","LRCAPES1",242,0)
 F  S LRWL=$O(^LAM("AB",LRXY1_";ICPT(",LRWL)) Q:LRWL=""  D  Q:LRWL2'=""
"RTN","LRCAPES1",243,0)
 . S LRD2=0 F  S LRD2=$O(^LAM("AB",LRXY1_";ICPT(",LRWL,LRD2)) Q:LRD2=""  D  Q:LRWL2'=""
"RTN","LRCAPES1",244,0)
 . . S LRREL2=$P(^LAM(LRWL,4,LRD2,0),U,3),LRINA2=$P(^(0),U,4)
"RTN","LRCAPES1",245,0)
 . . I LRREL2&(LRINA2="") S LRWL2=LRWL,LRWLQUFL=1
"RTN","LRCAPES1",246,0)
 . . I LREDT>(LRREL2-1)&((LREDT<LRINA2)!(LRINA2="")) S LRWL2=LRWL,LRWLQUFL=1
"RTN","LRCAPES1",247,0)
 ;
"RTN","LRCAPES1",248,0)
 I LRWL2="" S LRWL2=+$O(^LAM("AB",LRXY1_";ICPT(",0))
"RTN","LRCAPES1",249,0)
 ;
"RTN","LRCAPES1",250,0)
 Q
"RTN","LRCAPES1",251,0)
 ;
"RTN","LRCAPES1",252,0)
 ;
"RTN","LRCAPES1",253,0)
LSTCPT(LRAA,LRAD,LRAN)  ; Show loaded CPT codes if any
"RTN","LRCAPES1",254,0)
 Q:$S('$G(LRAA):1,'$G(LRAD):1,'$G(LRAN):1,1:0)
"RTN","LRCAPES1",255,0)
 N LRSTR
"RTN","LRCAPES1",256,0)
 S LRSTR=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,"PCE")) Q:'LRSTR
"RTN","LRCAPES1",257,0)
 N DA,DIC,DIR,DIRUT,DIR,DR,ERR,DUOUT,IEN,LRDA,LRENC,LREND,LRP,S,X,Y
"RTN","LRCAPES1",258,0)
 S DIR(0)="Y",DIR("A")=" Would you like to see PCE CPT Information"
"RTN","LRCAPES1",259,0)
 S DIR("B")="No" D ^DIR
"RTN","LRCAPES1",260,0)
 I Y'=1 Q
"RTN","LRCAPES1",261,0)
 ;
"RTN","LRCAPES1",262,0)
 ; List filed CPT CODES
"RTN","LRCAPES1",263,0)
 W @IOF
"RTN","LRCAPES1",264,0)
 F LRP=1:1 S IEN=$P(LRSTR,";",LRP) Q:IEN=""  D GETCPT^PXAPIOE(IEN,"LRENC","ERR")
"RTN","LRCAPES1",265,0)
 ;
"RTN","LRCAPES1",266,0)
 S (LRDA,LREND)=0
"RTN","LRCAPES1",267,0)
 F  S LRDA=$O(LRENC(LRDA)) Q:'LRDA!($G(LREND))  D
"RTN","LRCAPES1",268,0)
 . I $Y>(IOSL-6) D PG W @IOF Q:$G(LREND)
"RTN","LRCAPES1",269,0)
 . S S=0,DA=LRDA,DR="0:99",DIC="^AUPNVCPT(" D EN^DIQ
"RTN","LRCAPES1",270,0)
 Q
"RTN","LRCAPES1",271,0)
 ;
"RTN","LRCAPES1",272,0)
 ;
"RTN","LRCAPES1",273,0)
HLP ; Help display for CPT selection
"RTN","LRCAPES1",274,0)
 N DIR,DIRUT,DUOUT,DTOUT,LREND,LRX,LRY
"RTN","LRCAPES1",275,0)
 W @IOF
"RTN","LRCAPES1",276,0)
 S LRX="^TMP(""LR"","_$J_",""AK"",0,1)"
"RTN","LRCAPES1",277,0)
 W $$CJ^XLFSTR("List or range e.g, 1,3,5-7,88300.",IOM)
"RTN","LRCAPES1",278,0)
 W $$CJ^XLFSTR("Select from the following or enter CPT separated by a comma",IOM),!
"RTN","LRCAPES1",279,0)
 F  S LRX=$Q(@LRX) Q:$QS(LRX,2)'=$J!($G(LREND))!($QS(LRX,1)'="LR")  D
"RTN","LRCAPES1",280,0)
 . S LRY=@LRX
"RTN","LRCAPES1",281,0)
 . W !?3,$QS(LRX,4),?6," = "_$QS(LRX,6)_"  "_$E($P(LRY,U,2),1,60),!
"RTN","LRCAPES1",282,0)
 . W:$P(LRY,U,4) ?8,$P(LRY,U,3)_" { NLT = "_$P(LRY,U,4)_" }",!
"RTN","LRCAPES1",283,0)
 . I $Y>(IOSL-6) S DIR(0)="E" D RD I '$G(LREND)  W @IOF
"RTN","LRCAPES1",284,0)
 I $G(LRAA),$G(LRAD),$G(LRAN) D LSTCPT^LRCAPES1(LRAA,LRAD,LRAN)
"RTN","LRCAPES1",285,0)
 Q
"VER")
8.0^22.0
"BLD",9780,6)
^360
**END**
**END**

