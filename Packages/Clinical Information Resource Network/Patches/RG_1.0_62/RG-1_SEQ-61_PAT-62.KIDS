Released RG*1*62 SEQ #61
Extracted from mail message
**KIDS**:RG*1.0*62^

**INSTALL NAME**
RG*1.0*62
"BLD",3013,0)
RG*1.0*62^CLINICAL INFO RESOURCE NETWORK^0^3150403^y
"BLD",3013,1,0)
^^3^3^3150403^
"BLD",3013,1,1,0)
MASTER VETERAN INDEX VISTA ISSUES - ITERATION 13
"BLD",3013,1,2,0)
Refer to patch RG*1.0*62 in the FORUM Patch Module for a complete 
"BLD",3013,1,3,0)
description.
"BLD",3013,4,0)
^9.64PA^^
"BLD",3013,6.3)
3
"BLD",3013,"ABPKG")
n
"BLD",3013,"INID")
^n
"BLD",3013,"INIT")
EXLOG^RGP62PST
"BLD",3013,"KRN",0)
^9.67PA^779.2^20
"BLD",3013,"KRN",.4,0)
.4
"BLD",3013,"KRN",.401,0)
.401
"BLD",3013,"KRN",.402,0)
.402
"BLD",3013,"KRN",.403,0)
.403
"BLD",3013,"KRN",.5,0)
.5
"BLD",3013,"KRN",.84,0)
.84
"BLD",3013,"KRN",3.6,0)
3.6
"BLD",3013,"KRN",3.8,0)
3.8
"BLD",3013,"KRN",9.2,0)
9.2
"BLD",3013,"KRN",9.8,0)
9.8
"BLD",3013,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",3013,"KRN",9.8,"NM",1,0)
RGHLLOG^^0^B25968290
"BLD",3013,"KRN",9.8,"NM",2,0)
RGP62PST^^0^B3983176
"BLD",3013,"KRN",9.8,"NM",3,0)
RGTKPOC^^0^B13337596
"BLD",3013,"KRN",9.8,"NM",4,0)
RGADTP^^0^B100484585
"BLD",3013,"KRN",9.8,"NM","B","RGADTP",4)

"BLD",3013,"KRN",9.8,"NM","B","RGHLLOG",1)

"BLD",3013,"KRN",9.8,"NM","B","RGP62PST",2)

"BLD",3013,"KRN",9.8,"NM","B","RGTKPOC",3)

"BLD",3013,"KRN",19,0)
19
"BLD",3013,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",3013,"KRN",19,"NM",1,0)
RG EXCEPTION HANDLING^^1^
"BLD",3013,"KRN",19,"NM",2,0)
RG TK POC USER SETUP^^0
"BLD",3013,"KRN",19,"NM",3,0)
RG ADMIN COORD MENU^^2
"BLD",3013,"KRN",19,"NM","B","RG ADMIN COORD MENU",3)

"BLD",3013,"KRN",19,"NM","B","RG EXCEPTION HANDLING",1)

"BLD",3013,"KRN",19,"NM","B","RG TK POC USER SETUP",2)

"BLD",3013,"KRN",19.1,0)
19.1
"BLD",3013,"KRN",101,0)
101
"BLD",3013,"KRN",409.61,0)
409.61
"BLD",3013,"KRN",771,0)
771
"BLD",3013,"KRN",779.2,0)
779.2
"BLD",3013,"KRN",870,0)
870
"BLD",3013,"KRN",8989.51,0)
8989.51
"BLD",3013,"KRN",8989.52,0)
8989.52
"BLD",3013,"KRN",8994,0)
8994
"BLD",3013,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",3013,"KRN",8994,"NM",1,0)
MPI TK POC USER SETUP^^0
"BLD",3013,"KRN",8994,"NM","B","MPI TK POC USER SETUP",1)

"BLD",3013,"KRN","B",.4,.4)

"BLD",3013,"KRN","B",.401,.401)

"BLD",3013,"KRN","B",.402,.402)

"BLD",3013,"KRN","B",.403,.403)

"BLD",3013,"KRN","B",.5,.5)

"BLD",3013,"KRN","B",.84,.84)

"BLD",3013,"KRN","B",3.6,3.6)

"BLD",3013,"KRN","B",3.8,3.8)

"BLD",3013,"KRN","B",9.2,9.2)

"BLD",3013,"KRN","B",9.8,9.8)

"BLD",3013,"KRN","B",19,19)

"BLD",3013,"KRN","B",19.1,19.1)

"BLD",3013,"KRN","B",101,101)

"BLD",3013,"KRN","B",409.61,409.61)

"BLD",3013,"KRN","B",771,771)

"BLD",3013,"KRN","B",779.2,779.2)

"BLD",3013,"KRN","B",870,870)

"BLD",3013,"KRN","B",8989.51,8989.51)

"BLD",3013,"KRN","B",8989.52,8989.52)

"BLD",3013,"KRN","B",8994,8994)

"BLD",3013,"QDEF")
^^^^^^^^^^YES
"BLD",3013,"QUES",0)
^9.62^^
"BLD",3013,"REQB",0)
^9.611^6^4
"BLD",3013,"REQB",3,0)
RG*1.0*59^2
"BLD",3013,"REQB",4,0)
RG*1.0*61^2
"BLD",3013,"REQB",5,0)
DG*5.3*902^1
"BLD",3013,"REQB",6,0)
XU*8.0*655^2
"BLD",3013,"REQB","B","DG*5.3*902",5)

"BLD",3013,"REQB","B","RG*1.0*59",3)

"BLD",3013,"REQB","B","RG*1.0*61",4)

"BLD",3013,"REQB","B","XU*8.0*655",6)

"INIT")
EXLOG^RGP62PST
"KRN",19,5663,-1)
2^3
"KRN",19,5663,0)
RG ADMIN COORD MENU^MPI/PD Patient Admin Coordinator Menu^^M^^^^^^^^272^^1^
"KRN",19,5663,10,0)
^19.01IP^40^5
"KRN",19,5663,10,40,0)
7697^TK^80
"KRN",19,5663,10,40,"^")
RG TK POC USER SETUP
"KRN",19,5663,"U")
MPI/PD PATIENT ADMIN COORDINAT
"KRN",19,7697,-1)
0^2
"KRN",19,7697,0)
RG TK POC USER SETUP^ToolKit POC User Setup^^R^^^^^^^^
"KRN",19,7697,1,0)
^^10^10^3141218^
"KRN",19,7697,1,1,0)
This option allows you to create a Visitor Record in the New Person file 
"KRN",19,7697,1,2,0)
on the MPI production account.  The purpose of this action is to
"KRN",19,7697,1,3,0)
accomplish the first step toward establishing your ToolKit POC remote view
"KRN",19,7697,1,4,0)
access. Once this action is completed successfully you will have the
"KRN",19,7697,1,5,0)
ability to use the new tools.
"KRN",19,7697,1,6,0)
 
"KRN",19,7697,1,7,0)
Note: It is important that prior to using this option you be set up 
"KRN",19,7697,1,8,0)
correctly as a user in your local New Person file (#200).  You should
"KRN",19,7697,1,9,0)
verify your record has the correct Name, SSN, Network Username and Phone
"KRN",19,7697,1,10,0)
Contact Number.
"KRN",19,7697,25)
RGTKPOC
"KRN",19,7697,"U")
TOOLKIT POC USER SETUP
"KRN",19,7759,-1)
1^1
"KRN",19,7759,0)
RG EXCEPTION HANDLING
"KRN",8994,433,-1)
0^1
"KRN",8994,433,0)
MPI TK POC USER SETUP^TKPOC^MPIRPC12^1^P^0^^^1
"KRN",8994,433,1,0)
^8994.01^3^3^3141216^^^^
"KRN",8994,433,1,1,0)
This remote procedure call (RPC) is invoked when a VistA user uses the 
"KRN",8994,433,1,2,0)
option MPIF TK POC USER SETUP to confirm their traits and establish a TK 
"KRN",8994,433,1,3,0)
POC record on the MPI in the New Person file (#200).
"KRN",8994,433,2,0)
^8994.02A^1^1
"KRN",8994,433,2,1,0)
USER^1^250^1^1
"KRN",8994,433,2,1,1,0)
^^1^1^3141216^
"KRN",8994,433,2,1,1,1,0)
NAME_"~"_SSN_"~"_NTNAME_"~"_PHONE
"KRN",8994,433,2,"B","USER",1)

"KRN",8994,433,2,"PARAMSEQ",1,1)

"KRN",8994,433,3,0)
^8994.03^1^1^3141216^^^^
"KRN",8994,433,3,1,0)
1 for successful creation  or  -1^error message
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",272,-1)
1^1
"PKG",272,0)
CLINICAL INFO RESOURCE NETWORK^RG^CIRN
"PKG",272,20,0)
^9.402P^1^1
"PKG",272,20,1,0)
2^^RGDRM03
"PKG",272,20,1,1)

"PKG",272,20,"B",2,1)

"PKG",272,22,0)
^9.49I^1^1
"PKG",272,22,1,0)
1.0^2990430^2990601^12555
"PKG",272,22,1,"PAH",1,0)
62^3150403
"PKG",272,22,1,"PAH",1,1,0)
^^3^3^3150403
"PKG",272,22,1,"PAH",1,1,1,0)
MASTER VETERAN INDEX VISTA ISSUES - ITERATION 13
"PKG",272,22,1,"PAH",1,1,2,0)
Refer to patch RG*1.0*62 in the FORUM Patch Module for a complete 
"PKG",272,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","RGADTP")
0^4^B100484585^B99151063
"RTN","RGADTP",1,0)
RGADTP ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS ; 11/19/14 5:10pm
"RTN","RGADTP",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,20,34,35,40,45,44,47,59,60,61,62**;30 Apr 99;Build 3
"RTN","RGADTP",3,0)
 ;
"RTN","RGADTP",4,0)
 ;Reference to BLDEVN^VAFCQRY and BLDPID^VAFCQRY supported by IA #3630
"RTN","RGADTP",5,0)
 ;Reference to EN1^VAFHLZEL is supported by IA #752
"RTN","RGADTP",6,0)
 ;Reference to Patient file (#2) PREFERRED FACILITY (#27.02) is supported by IA #1850
"RTN","RGADTP",7,0)
 ;Reference to $$PV2, $$PHARA, $$LABE, $$RADE ^VAFCSB is supported by IA #4921
"RTN","RGADTP",8,0)
 ;
"RTN","RGADTP",9,0)
INIT ;
"RTN","RGADTP",10,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,REP,DIC,DR,DIE,DA,DLAYGO
"RTN","RGADTP",11,0)
 S RGER=""
"RTN","RGADTP",12,0)
 D IN
"RTN","RGADTP",13,0)
 D PROCIN
"RTN","RGADTP",14,0)
 D GENACK
"RTN","RGADTP",15,0)
 Q
"RTN","RGADTP",16,0)
PROC ;processing entry point
"RTN","RGADTP",17,0)
 N HLA,RGADT,PV1,DIC,ARRAY,RGEVNT,RGLOCAL,REP,ICN,RGSITE
"RTN","RGADTP",18,0)
 S RGEVNT=HL("ETN")
"RTN","RGADTP",19,0)
 I $G(HL("MID"))'="" S RGADT=HL("MID")
"RTN","RGADTP",20,0)
 I $G(HL("MID"))="" S RGADT=999
"RTN","RGADTP",21,0)
 D IN
"RTN","RGADTP",22,0)
 S ICN=$G(ARRAY("ICN"))
"RTN","RGADTP",23,0)
 I +$G(ICN)<1 Q  ;quit if no ICN
"RTN","RGADTP",24,0)
 I $E($G(ICN),1,3)=$P($$SITE^VASITE,"^",3) Q  ;quit if ICN is a local
"RTN","RGADTP",25,0)
 S ZTSAVE("DFN")="",ZTSAVE("RGEVNT")="",ZTSAVE("HLA(""HLS"",")="",ZTRTN="SEND^RGADTPC",ZTDESC="Sending HL7 Patient Update...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP",26,0)
 K ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH
"RTN","RGADTP",27,0)
 Q
"RTN","RGADTP",28,0)
IN ;Process in the ADT A04/A08 (routing logic)
"RTN","RGADTP",29,0)
 N RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID,COMP,ENT,EN,THLA,LAB,RAD,PHARM,TMP,SIG,OBXDONE,OLD,NAMECOMP,DODF
"RTN","RGADTP",30,0)
 S ENT=1,REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1)
"RTN","RGADTP",31,0)
 ;set local flag to indicate the processing of an outbound for reformatting
"RTN","RGADTP",32,0)
 I $P($G(HL("SAF")),COMP)=$P($$SITE^VASITE,"^",3) S RGLOCAL=1
"RTN","RGADTP",33,0)
 I $P($G(HL("SAF")),COMP)'=$P($$SITE^VASITE,"^",3) S RGLOCAL=0
"RTN","RGADTP",34,0)
 S RGC=$E($G(HL("ECH")),1)
"RTN","RGADTP",35,0)
 F RGI=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","RGADTP",36,0)
 .S RGJ=0 F  S RGJ=$O(HLNODE(RGJ)) Q:'RGJ  S MSG(RGJ)=HLNODE(RGJ)
"RTN","RGADTP",37,0)
 .D:SG?2A1(1A,1N) PICK
"RTN","RGADTP",38,0)
 ;if message MSH sending facility matches the PID assigning authority update
"RTN","RGADTP",39,0)
 S ENT=0,EN=1,OBXDONE=0 F  S ENT=$O(THLA("HLS",ENT)) Q:ENT=""  D
"RTN","RGADTP",40,0)
 .;**61, MVI_3714 (ckn) - No need to send OBX segment previously built in 2.3v to MPI - Only add new OBX for 2.4v
"RTN","RGADTP",41,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="OBX" D  Q
"RTN","RGADTP",42,0)
 ..I OBXDONE Q  ;**61 - MVI_3714 (ckn) - OBX was added in previous loop
"RTN","RGADTP",43,0)
 ..S RAD=$$RADE I RAD'="" S HLA("HLS",EN)=RAD,EN=EN+1
"RTN","RGADTP",44,0)
 ..S LAB=$$LABE I LAB'="" S HLA("HLS",EN)=LAB,EN=EN+1
"RTN","RGADTP",45,0)
 ..S PHARM=$$PHARA I PHARM'="" S HLA("HLS",EN)=PHARM,EN=EN+1
"RTN","RGADTP",46,0)
 ..S OLD=$$OLD I OLD'="" S HLA("HLS",EN)=OLD,EN=EN+1 ;**59,MVI_914: Pass OLDER RECORD in OBX if flagged as such
"RTN","RGADTP",47,0)
 ..S SIG=$$SIG^VAFCSB(DFN) I SIG'="" S HLA("HLS",EN)=SIG,EN=EN+1 ;**61,MVI_3714: Add Self Identified Gender in OBX
"RTN","RGADTP",48,0)
 ..S NAMECOMP=$$NAMEOBX^VAFCSB(DFN) I NAMECOMP'="" S HLA("HLS",EN)=NAMECOMP,EN=EN+1 ;**61,MVI_3976 (mko): Add Name Components in OBX
"RTN","RGADTP",49,0)
 ..S DODF=$$DODF^VAFCSB(DFN) I $G(DODF)'="" S HLA("HLS",EN)=DODF,EN=EN+1 ;**62 MVI_4899 (ckn): Add DOD fields in OBX
"RTN","RGADTP",50,0)
 ..S OBXDONE=1  ;**61 - MVI_3714 (ckn) - flag for all OBX added
"RTN","RGADTP",51,0)
 .S HLA("HLS",EN)=THLA("HLS",ENT),EN=EN+1
"RTN","RGADTP",52,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PID"!($E($G(THLA("HLS",ENT)),1,3)="ZEL") D
"RTN","RGADTP",53,0)
 ..;**47 handle if ZEL is over 245 as well
"RTN","RGADTP",54,0)
 ..I $O(THLA("HLS",ENT,""))'="" D
"RTN","RGADTP",55,0)
 ...S CNT="" F  S CNT=$O(THLA("HLS",ENT,CNT)) Q:CNT=""  S HLA("HLS",EN-1,CNT)=THLA("HLS",ENT,CNT)
"RTN","RGADTP",56,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PV1" I RGLOCAL S TMP=$$PV2B I TMP'="" S HLA("HLS",EN)=$$PV2B,EN=EN+1  ;**47
"RTN","RGADTP",57,0)
 .;**61 MVI_3714 (ckn) Add Self Identified Gender in OBX
"RTN","RGADTP",58,0)
 .;I $E($G(THLA("HLS",ENT)),1,3)="ZPD" I RGLOCAL D
"RTN","RGADTP",59,0)
 .;.S RAD=$$RADE I RAD'="" S HLA("HLS",EN)=RAD,EN=EN+1
"RTN","RGADTP",60,0)
 .;.S LAB=$$LABE I LAB'="" S HLA("HLS",EN)=LAB,EN=EN+1
"RTN","RGADTP",61,0)
 .;.S PHARM=$$PHARA I PHARM'="" S HLA("HLS",EN)=PHARM,EN=EN+1
"RTN","RGADTP",62,0)
 .;.S OLD=$$OLD I OLD'="" S HLA("HLS",EN)=OLD,EN=EN+1 ;**59,MVI_914: Pass OLDER RECORD in OBX if flagged as such
"RTN","RGADTP",63,0)
QUIT Q
"RTN","RGADTP",64,0)
ROUTE ;
"RTN","RGADTP",65,0)
 N RGERR
"RTN","RGADTP",66,0)
 I $G(RGEVNT)="" S RGEVNT=$G(HL("ETN"))
"RTN","RGADTP",67,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","RGADTP",68,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="RG ADT-"_HL("ETN")_" 2.4 CLIENT^"_MPI
"RTN","RGADTP",69,0)
 .I $P($G(MPI),U)=-1 D
"RTN","RGADTP",70,0)
 ..N RGLOG,RGMTXT D START^RGHLLOG(HLMTIEN,"","") S RGMTXT="for DFN#"_$G(DFN)
"RTN","RGADTP",71,0)
 ..D EXC^RGHLLOG(224,"No MPI link identified"_RGMTXT,$G(DFN)) S RGERR=1
"RTN","RGADTP",72,0)
 ;**60 MVI_1837(rjh): to catch undefined dfn
"RTN","RGADTP",73,0)
 ;I $G(RGERR)'=1 S ^XTMP("RG"_HL("ETN")_"%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"RG"_HL("ETN")_" msg to MPI for DFN "_DFN S ^XTMP("RG"_HL("ETN")_"%"_DFN,"MPI",0)="A"
"RTN","RGADTP",74,0)
 I $G(RGERR)'=1,$D(^DPT(+$G(DFN),0)) D
"RTN","RGADTP",75,0)
 .S ^XTMP("RG"_HL("ETN")_"%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"RG"_HL("ETN")_" msg to MPI for DFN "_DFN
"RTN","RGADTP",76,0)
 .S ^XTMP("RG"_HL("ETN")_"%"_DFN,"MPI",0)="A"
"RTN","RGADTP",77,0)
 Q
"RTN","RGADTP",78,0)
RESP ;
"RTN","RGADTP",79,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID
"RTN","RGADTP",80,0)
 D IN
"RTN","RGADTP",81,0)
 Q
"RTN","RGADTP",82,0)
PICK ;check routine for segment entry point
"RTN","RGADTP",83,0)
 I $T(@SG)]"" D @SG
"RTN","RGADTP",84,0)
 I $T(@SG)="" Q
"RTN","RGADTP",85,0)
 Q
"RTN","RGADTP",86,0)
MSA ;process the MSA segment
"RTN","RGADTP",87,0)
 N ARRAY,CNT,DFN,EXIT,HLCOMP,RGAA,RGERR,RGEVNT,RGMSG,RETURN,RGX,RGY,RGCODE
"RTN","RGADTP",88,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",89,0)
 S RGAA=MSG,EXIT=0,RGCODE=$P(RGAA,HL("FS"),2),RGMSG=$P(RGAA,HL("FS"),3),RGERR=$P(RGAA,HL("FS"),4),RGMSG=$$MSG^HLCSUTL(RGMSG,"RETURN(1)") K RGMSG
"RTN","RGADTP",90,0)
 S CNT=1,RGX=0 F  S RGX=$O(RETURN(1,RGX)) Q:'RGX!(EXIT=1)  D
"RTN","RGADTP",91,0)
 .I RETURN(1,RGX)'="" D
"RTN","RGADTP",92,0)
 ..I $D(RGMSG) S RGMSG(CNT)=RETURN(1,RGX),CNT=CNT+1
"RTN","RGADTP",93,0)
 ..I '$D(RGMSG) S RGMSG=RETURN(1,RGX),RGY=RGX
"RTN","RGADTP",94,0)
 .I RETURN(1,RGX)="" D  S CNT=1 K RGMSG
"RTN","RGADTP",95,0)
 ..I $E(RETURN(1,RGY),1,3)="MSH" D MSH
"RTN","RGADTP",96,0)
 ..I $E(RETURN(1,RGY),1,3)="PID" D PIDP^RGADTP1(.RGMSG,.ARRAY,.HL) S EXIT=1
"RTN","RGADTP",97,0)
 S DFN=$G(ARRAY("DFN"))
"RTN","RGADTP",98,0)
 ;**45 Log Exception ONLY if AR is returned in MSA segment
"RTN","RGADTP",99,0)
 I RGCODE="AR" D
"RTN","RGADTP",100,0)
 .D START^RGHLLOG(HLMTIEN,"","")
"RTN","RGADTP",101,0)
 .D EXC^RGHLLOG(234,RGERR,DFN) ;**44
"RTN","RGADTP",102,0)
 .D STOP^RGHLLOG(0)
"RTN","RGADTP",103,0)
 K:$G(DFN)>0 ^XTMP("MPIF OLD RECORDS",DFN) ;**59,MVI_914: Delete the old record designation
"RTN","RGADTP",104,0)
 I $D(^XTMP("RG"_HL("ETN")_"%"_DFN,0)) K ^XTMP("RG"_HL("ETN")_"%"_DFN)
"RTN","RGADTP",105,0)
 Q
"RTN","RGADTP",106,0)
MSH ;
"RTN","RGADTP",107,0)
 S MSH=1
"RTN","RGADTP",108,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",109,0)
 I 'RGLOCAL S RGC=$E(HL("ECH"),1)
"RTN","RGADTP",110,0)
 S RGSITE=$P($P(MSG,HL("FS"),4),RGC),RGEVNT=$P($P(MSG,HL("FS"),9),RGC,2)
"RTN","RGADTP",111,0)
 Q
"RTN","RGADTP",112,0)
PV2 ;processor of PV2 segment ;**47
"RTN","RGADTP",113,0)
 Q
"RTN","RGADTP",114,0)
PV2B() ;builder of PV2 segment ;**47
"RTN","RGADTP",115,0)
 N RET S RET=""
"RTN","RGADTP",116,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",117,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",118,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",119,0)
 Q $$PV2^VAFCSB
"RTN","RGADTP",120,0)
PHARA() ;build obx to show active prescriptions
"RTN","RGADTP",121,0)
 N RET S RET=""
"RTN","RGADTP",122,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",123,0)
 I '$$PATCH^XPDUTL("PSS*1.0*101") Q RET
"RTN","RGADTP",124,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",125,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",126,0)
 Q $$PHARA^VAFCSB
"RTN","RGADTP",127,0)
LABE() ;BUILD OBX FOR LAST LAB TEST DATE
"RTN","RGADTP",128,0)
 N RET S RET=""
"RTN","RGADTP",129,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",130,0)
 I '$$PATCH^XPDUTL("LR*5.2*295") Q RET
"RTN","RGADTP",131,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",132,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",133,0)
 Q $$LABE^VAFCSB
"RTN","RGADTP",134,0)
RADE() ;BUILD OBX FOR LAST RADIOLOGY TEST DATE
"RTN","RGADTP",135,0)
 N RET S RET=""
"RTN","RGADTP",136,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",137,0)
 I '$$PATCH^XPDUTL("RA*5.0*76") Q RET
"RTN","RGADTP",138,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",139,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",140,0)
 Q $$RADE^VAFCSB
"RTN","RGADTP",141,0)
EVN ;;
"RTN","RGADTP",142,0)
 N CNT,ERR S EVN=RGI
"RTN","RGADTP",143,0)
 I RGLOCAL S (EVN(1),THLA("HLS",ENT))=MSG,ENT=ENT+1
"RTN","RGADTP",144,0)
 I 'RGLOCAL D
"RTN","RGADTP",145,0)
 .S ARRAY("EVR")=$P(MSG,HL("FS"),2),ARRAY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","RGADTP",146,0)
 .S ARRAY("EVNAME")=$$FMNAME^XLFNAME($P(MSG,HL("FS"),2),"",$E(HL("ECH"),1)),ARRAY("SENDING SITE")=$P(MSG,HL("FS"),8)
"RTN","RGADTP",147,0)
 Q
"RTN","RGADTP",148,0)
EVNP ;
"RTN","RGADTP",149,0)
 N EVNX
"RTN","RGADTP",150,0)
 I $G(DFN)'="" D BLDEVN^VAFCQRY(DFN,"1,2,4,5,6,7",.EVN,.HL,$G(HL("ETN")),.ERR) S CNT=0,EVNX=0 F  S EVNX=$O(EVN(EVNX)) Q:'EVNX  D
"RTN","RGADTP",151,0)
 .I CNT>0 S THLA("HLS",EVN,CNT)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",152,0)
 .I CNT'>0 S THLA("HLS",EVN)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",153,0)
 Q
"RTN","RGADTP",154,0)
PID ;;
"RTN","RGADTP",155,0)
 N CNT,PIDX
"RTN","RGADTP",156,0)
 I RGLOCAL D
"RTN","RGADTP",157,0)
 .N HLCOMP S HLCOMP=$E(HL("ECH"),1),THLA("HLS",ENT)=MSG,DFN=$P($P(MSG,HL("FS"),4),HLCOMP) ;**45 REMOVED +
"RTN","RGADTP",158,0)
 .D EVNP
"RTN","RGADTP",159,0)
 .D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL)
"RTN","RGADTP",160,0)
 .;get ICN value in the PID segment
"RTN","RGADTP",161,0)
 .S ARRAY("ICN")=+$P($P(PID(1),HL("FS"),4),HLCOMP)
"RTN","RGADTP",162,0)
 .S CNT=0,PIDX=0 F  S PIDX=$O(PID(PIDX)) Q:'PIDX  D
"RTN","RGADTP",163,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",164,0)
 ..I CNT'>0 S THLA("HLS",ENT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",165,0)
 .S ENT=ENT+1
"RTN","RGADTP",166,0)
 I 'RGLOCAL D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","RGADTP",167,0)
 Q
"RTN","RGADTP",168,0)
PD1 ;SET PD1 SEQ 3 TO BE PREFERRED FACILITY INSTEAD OF CMOR PATCH **45
"RTN","RGADTP",169,0)
 N PD1
"RTN","RGADTP",170,0)
 I RGLOCAL D
"RTN","RGADTP",171,0)
 .;S PD1=$$PD1^VAFCSB
"RTN","RGADTP",172,0)
 .;I PD1'="" S THLA("HLS",ENT)=PD1,ENT=ENT+1
"RTN","RGADTP",173,0)
 I 'RGLOCAL S (ARRAY(991.03),ARRAY("CMOR"))=$P($P(MSG,HL("FS"),4),RGC) ;PUTTING BACK TO DO NEED FOR PATCH 40 ON MPI SIDE
"RTN","RGADTP",174,0)
 ;- NO LONGER DEALING WITH CMOR
"RTN","RGADTP",175,0)
 Q
"RTN","RGADTP",176,0)
PV1 ;;
"RTN","RGADTP",177,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",178,0)
 Q
"RTN","RGADTP",179,0)
OBX ;;
"RTN","RGADTP",180,0)
 N COMP,SSNV S COMP=$E(HL("ECH"),1)
"RTN","RGADTP",181,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",182,0)
 I 'RGLOCAL D:$$FREE^RGRSPARS($P($P(MSG,HL("FS"),4),RGC,2))="SECURITY LEVEL"
"RTN","RGADTP",183,0)
 .S ARRAY("SENSITIVITY")=$$SENSTIVE^RGRSPARS($P(MSG,HL("FS"),6),COMP),ARRAY("SENSITIVITY DATE")=$$FREE^RGRSPARS($$FMDATE^HLFNC($P(MSG,HL("FS"),15)))
"RTN","RGADTP",184,0)
 .S ARRAY("SENSITIVITY USER")=$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,2))_","_$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,3))
"RTN","RGADTP",185,0)
 ;**45 Get SSN VERIFICATION STATUS out of OBX if message is from the MPI
"RTN","RGADTP",186,0)
 ;I 'RGLOCAL,$P(HL("SFN"),COMP)="200M" I $P($P(MSG,HL("FS"),4),RGC)="SSN VERIFICATION STATUS" S SSNV=$P($P(MSG,HL("FS"),6),RGC,2),ARRAY(.0907)=$S(SSNV="VERIFIED":4,SSNV="INVALID":2,1:"@")
"RTN","RGADTP",187,0)
 ;**47 use SSN Verification status code and not words since they have changed since this code was first written
"RTN","RGADTP",188,0)
 ;only update values to valid or invalid other statuses aren't stored in VistA
"RTN","RGADTP",189,0)
 I 'RGLOCAL,$P(HL("SFN"),COMP)="200M" I $P($P(MSG,HL("FS"),4),RGC)="SSN VERIFICATION STATUS" S SSNV=$P($P(MSG,HL("FS"),6),RGC,1),ARRAY(.0907)=$S(SSNV=4:4,SSNV=2:2,1:"@")
"RTN","RGADTP",190,0)
 Q
"RTN","RGADTP",191,0)
ZPD ;;
"RTN","RGADTP",192,0)
 I RGLOCAL S THLA("HLS",ENT)=$$EN1^VAFHLZPD(DFN,"1,17,21,34"),ENT=ENT+1 ;**45 to build new ZPD
"RTN","RGADTP",193,0)
 I 'RGLOCAL S ARRAY(.0906)=$P(MSG,HL("FS"),35) I ARRAY(.0906)=HL("Q") S ARRAY(.0906)="@" ;**45 Pull out pseudo ssn reason
"RTN","RGADTP",194,0)
 Q
"RTN","RGADTP",195,0)
ZSP ;;
"RTN","RGADTP",196,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",197,0)
 I 'RGLOCAL S ARRAY(.301)=$$YESNO^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.302)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.323)=$$POS^RGRSPARS($P(MSG,HL("FS"),5))
"RTN","RGADTP",198,0)
 Q
"RTN","RGADTP",199,0)
ZEL ;;
"RTN","RGADTP",200,0)
 I RGLOCAL D
"RTN","RGADTP",201,0)
 .;**40 to rebuild ZEL segment
"RTN","RGADTP",202,0)
 .I '$D(DFN) S THLA("HLS",ENT)=MSG,ENT=ENT+1 Q  ;don't know DFN pass back original ZEL segment
"RTN","RGADTP",203,0)
 .N VAFZEL D EN1^VAFHLZEL(DFN,"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22",2,.VAFZEL) ;build a complete ZEL segment
"RTN","RGADTP",204,0)
 .;need to take into account may be more than 1 array entry and that each entry could go over 245 so there would be another subscript
"RTN","RGADTP",205,0)
 .N CNT,ZELX S (CNT,ZELX)=0 F  S ZELX=$O(VAFZEL(ZELX)) Q:'ZELX  D
"RTN","RGADTP",206,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=VAFZEL(ZELX),CNT=CNT+1
"RTN","RGADTP",207,0)
 ..I CNT'>0 S THLA("HLS",ENT)=VAFZEL(ZELX),ENT=ENT+1
"RTN","RGADTP",208,0)
 I 'RGLOCAL D
"RTN","RGADTP",209,0)
 . S ARRAY(.361)=$$ELIG^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.3612)=$$FREE^RGRSPARS($P(MSG,HL("FS"),12))
"RTN","RGADTP",210,0)
 . S ARRAY(.3615)=$$FREE^RGRSPARS($P(MSG,HL("FS"),14)),ARRAY(391)=$$TYPE^RGRSPARS($P(MSG,HL("FS"),10)),ARRAY(1901)=$$VETERAN^RGRSPARS($P(MSG,HL("FS"),9))
"RTN","RGADTP",211,0)
 Q
"RTN","RGADTP",212,0)
ZCT ;;
"RTN","RGADTP",213,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",214,0)
 I 'RGLOCAL S ARRAY(.211)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.219)=$$FREE^RGRSPARS($P(MSG,HL("FS"),7))
"RTN","RGADTP",215,0)
 Q
"RTN","RGADTP",216,0)
ZEM ;;
"RTN","RGADTP",217,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",218,0)
 I 'RGLOCAL S ARRAY(.31115)=$$EMP^RGRSPARS($P(MSG,HL("FS"),4))
"RTN","RGADTP",219,0)
 Q
"RTN","RGADTP",220,0)
ZFF ;;
"RTN","RGADTP",221,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",222,0)
 I 'RGLOCAL S ARRAY("FLD")=$P(MSG,HL("FS"),3)
"RTN","RGADTP",223,0)
 Q
"RTN","RGADTP",224,0)
PROCIN ;
"RTN","RGADTP",225,0)
 D PROCIN^RGADTP2(.ARRAY,.RGLOCAL,.RGER,.DFN,.HL)
"RTN","RGADTP",226,0)
 Q
"RTN","RGADTP",227,0)
GENACK ;
"RTN","RGADTP",228,0)
 N RGCNT,IEN,RG,ERRSEG
"RTN","RGADTP",229,0)
 I $G(ARRAY("DFN"))'>0 S RGER="-1^Unknown ICN#"_$G(ARRAY("ICN"))_" and SSN#"_$G(ARRAY(.09))
"RTN","RGADTP",230,0)
 E  I HL("ETN")="A31",RGSITE="200M" S ERRSEG=$$NAMEERR^VAFCSB(ARRAY("DFN")) ;**61,MVI_3976 (mko): Get Name Components
"RTN","RGADTP",231,0)
 S RGCNT=1,HLA("HLA",RGCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(RGER)<0:$P(RGER,"^",2,3),1:""),RGCNT=RGCNT+1
"RTN","RGADTP",232,0)
 S:$G(ERRSEG)]"" HLA("HLA",RGCNT)=ERRSEG,RGCNT=RGCNT+1 ;**61,MVI_3976 (mko): Put name component in ERR segment
"RTN","RGADTP",233,0)
 S RGSITE=$$LKUP^XUAF4(RGSITE)
"RTN","RGADTP",234,0)
 D LINK^HLUTIL3(RGSITE,.RG) S IEN=$O(RG(0)) S HLL("LINKS",1)="^"_RG(IEN)
"RTN","RGADTP",235,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","RGADTP",236,0)
 K HLA
"RTN","RGADTP",237,0)
 Q
"RTN","RGADTP",238,0)
RSP ;
"RTN","RGADTP",239,0)
 Q
"RTN","RGADTP",240,0)
OLD() ; Return OBX segment to flag a record as "old"
"RTN","RGADTP",241,0)
 ;**59,MVI_914: New subroutine
"RTN","RGADTP",242,0)
 Q $S($D(^XTMP("MPIF OLD RECORDS",DFN))#2:"OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"OLDER RECORD"_HL("FS")_HL("FS")_"Y",1:"")
"RTN","RGHLLOG")
0^1^B25968290^B30413623
"RTN","RGHLLOG",1,0)
RGHLLOG ;CAIRO/DKM-LOG MESSAGE PROCESSING INFO ;09/04/98
"RTN","RGHLLOG",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**1,3,11,13,18,19,25,45,52,57,59,62**;30 Apr 99;Build 3
"RTN","RGHLLOG",3,0)
 ;
"RTN","RGHLLOG",4,0)
 ;Reference to ^HLMA("C" supported by IA #3244
"RTN","RGHLLOG",5,0)
 ;=================================================================
"RTN","RGHLLOG",6,0)
 ; Log information about message processing and exceptions
"RTN","RGHLLOG",7,0)
 ; in CIRN HL7 Exception Log file.
"RTN","RGHLLOG",8,0)
 ;=================================================================
"RTN","RGHLLOG",9,0)
 ; Start time for run log
"RTN","RGHLLOG",10,0)
START(RGMSG,RGDC,RGPARAM) ;
"RTN","RGHLLOG",11,0)
 ;This entry point starts the log process in the CIRN HL7 EXCEPTION LOG
"RTN","RGHLLOG",12,0)
 ;file (#991.1), if the (#6) MINIMAL EXCEPTION LOGGING? field in
"RTN","RGHLLOG",13,0)
 ;File #990.8 is set to 0.
"RTN","RGHLLOG",14,0)
 ; Input: Required
"RTN","RGHLLOG",15,0)
 ;   RGMSG - IEN of message entry in File #773, usually HLMTIEN
"RTN","RGHLLOG",16,0)
 ;        Optional
"RTN","RGHLLOG",17,0)
 ;   RGDC - Event Class, associated with an entry in File #
"RTN","RGHLLOG",18,0)
 ;   RGPARAM - reprocessing routine
"RTN","RGHLLOG",19,0)
 S U="^"
"RTN","RGHLLOG",20,0)
 K RGLOG
"RTN","RGHLLOG",21,0)
 S RGLOG(3)=$G(RGMSG),RGLOG(5)=$G(RGDC),RGLOG(4)=$G(RGPARAM),RGLOG(1)=$$NOW^XLFDT
"RTN","RGHLLOG",22,0)
 I '$P(^RGSITE("COR",1,0),U,8) S RGLOG=$$CREATE
"RTN","RGHLLOG",23,0)
 Q
"RTN","RGHLLOG",24,0)
 ; Create a log entry
"RTN","RGHLLOG",25,0)
CREATE() Q:$G(RGLOG) RGLOG
"RTN","RGHLLOG",26,0)
 L +^RGHL7(991.1,0):10
"RTN","RGHLLOG",27,0)
 S RGLOG=$O(^RGHL7(991.1,$C(32)),-1)+1
"RTN","RGHLLOG",28,0)
 S:$G(RGLOG(1))="" RGLOG(1)=$$NOW^XLFDT
"RTN","RGHLLOG",29,0)
 S RGLOG(3)=$S($G(RGLOG(3))=0:0,$G(HL("MID"))="":"",1:$$IEN773($G(HL("MID"))))
"RTN","RGHLLOG",30,0)
 S (DA,X)=RGLOG,DIC="^RGHL7(991.1,",DIC(0)="L",DLAYGO=991.1,DIC("DR")="1///"_$G(RGLOG(1))_";3////"_$G(RGLOG(3))_";5///"_$G(RGLOG(5))_";4////"_$G(RGLOG(4)) K DD,DO D FILE^DICN K DIC,DA,X,DLAYGO
"RTN","RGHLLOG",31,0)
 L -^RGHL7(991.1,0)
"RTN","RGHLLOG",32,0)
 Q RGLOG
"RTN","RGHLLOG",33,0)
 ; Log time run completed
"RTN","RGHLLOG",34,0)
STOP(RGQUIT) ;
"RTN","RGHLLOG",35,0)
 ;This entry point completes the logging process
"RTN","RGHLLOG",36,0)
 ; Input: required
"RTN","RGHLLOG",37,0)
 ;    RGQUIT - 0 for success and 1 for failure
"RTN","RGHLLOG",38,0)
 ;
"RTN","RGHLLOG",39,0)
 Q:'$G(RGLOG)
"RTN","RGHLLOG",40,0)
 L +^RGHL7(991.1,RGLOG):10
"RTN","RGHLLOG",41,0)
 S DIE="^RGHL7(991.1,",DR="1.5///NOW;1.6///^S X=$G(RGQUIT)",DA=RGLOG D ^DIE K DIE,DA,DR
"RTN","RGHLLOG",42,0)
 L -^RGHL7(991.1,RGLOG)
"RTN","RGHLLOG",43,0)
 K RGLOG,RGQUIT,X,Y,DIC,DIE
"RTN","RGHLLOG",44,0)
 Q
"RTN","RGHLLOG",45,0)
 ; Log unclassified exception (old entry point)
"RTN","RGHLLOG",46,0)
ERR(RGERR,RGSEV) ;
"RTN","RGHLLOG",47,0)
 D EXC(18,RGERR)
"RTN","RGHLLOG",48,0)
 S RGQUIT=$G(RGQUIT)!$G(RGSEV)
"RTN","RGHLLOG",49,0)
 Q
"RTN","RGHLLOG",50,0)
 ; Log an exception
"RTN","RGHLLOG",51,0)
EXC(RGEXC,RGERR,RGDFN,MSGID,STATNUM) ;
"RTN","RGHLLOG",52,0)
 ;This entry point logs exceptions in the CIRN HL7 EXCEPTION LOG
"RTN","RGHLLOG",53,0)
 ;file (#991.1)
"RTN","RGHLLOG",54,0)
 ; Input: Required
"RTN","RGHLLOG",55,0)
 ;   RGEXC - Exception type in File #991.11
"RTN","RGHLLOG",56,0)
 ;   RGERR - Supplemental text
"RTN","RGHLLOG",57,0)
 ;        Optional
"RTN","RGHLLOG",58,0)
 ;   RGDFN - IEN in the PATIENT file (#2)
"RTN","RGHLLOG",59,0)
 ;   MSGID - message id of the HL7 message where the exception was encountered (optional)
"RTN","RGHLLOG",60,0)
 ;   STATNUM - station # of site that encountered the error (optional) - if not defined then the local site is assumed, using $$SITE^VASITE
"RTN","RGHLLOG",61,0)
 ;
"RTN","RGHLLOG",62,0)
 I (RGEXC=215)!(RGEXC=216)!(RGEXC=217) Q  ;**52 until MPIFBT3 call eliminates these exception types
"RTN","RGHLLOG",63,0)
 ;I (RGEXC=215)!(RGEXC=216)!(RGEXC=217) Q  ;**52 until MPIFBT3 call eliminates these exception types;**57 done in MPIF*1*52
"RTN","RGHLLOG",64,0)
 ; **62 (elz) MVI_4551, don't log 234 anymore
"RTN","RGHLLOG",65,0)
 I RGEXC=234 Q
"RTN","RGHLLOG",66,0)
 ;I RGEXC=234 N ACTPVR S ACTPVR=1 D  I ACTPVR=0 Q  ;**59 MVI_778 Do not log duplicate PVR (234) exception for patient if active one in CIRN HL7 EXCEPTION LOG (#991.1) file.
"RTN","RGHLLOG",67,0)
 ;.N PVRIEN,PVRIEN2 S PVRIEN=0
"RTN","RGHLLOG",68,0)
 ;.;Examine PVR (234) exception type, for patient - RGDFN
"RTN","RGHLLOG",69,0)
 ;.F  S PVRIEN=$O(^RGHL7(991.1,"ADFN",234,RGDFN,PVRIEN)) Q:'PVRIEN  Q:ACTPVR=0  D
"RTN","RGHLLOG",70,0)
 ;..S PVRIEN2=0
"RTN","RGHLLOG",71,0)
 ;..F  S PVRIEN2=$O(^RGHL7(991.1,"ADFN",234,RGDFN,PVRIEN,PVRIEN2)) Q:'PVRIEN2  Q:ACTPVR=0  D
"RTN","RGHLLOG",72,0)
 ;...;Is there an active exception in CIRN HL7 EXCEPTION LOG (#991.1) file?
"RTN","RGHLLOG",73,0)
 ;...S ACTPVR=$P($G(^RGHL7(991.1,PVRIEN,1,PVRIEN2,0)),"^",5) I ACTPVR=0 Q
"RTN","RGHLLOG",74,0)
 ;
"RTN","RGHLLOG",75,0)
 I $L($G(HL("MID"))) Q:$$INVEXC(HL("MID"))  ; is the exception valid?
"RTN","RGHLLOG",76,0)
 N RGI,RGZ
"RTN","RGHLLOG",77,0)
 S U="^"
"RTN","RGHLLOG",78,0)
 S:RGEXC[U RGERR=$P(RGEXC,U,2,999),RGEXC=+RGEXC
"RTN","RGHLLOG",79,0)
 S:RGEXC'=+RGEXC RGERR=RGEXC,RGEXC=18
"RTN","RGHLLOG",80,0)
 S:'$D(^RGHL7(991.11,RGEXC)) RGEXC=18
"RTN","RGHLLOG",81,0)
 L +^RGHL7(991.11,RGEXC):10
"RTN","RGHLLOG",82,0)
 S RGZ=$G(^RGHL7(991.11,RGEXC,0))
"RTN","RGHLLOG",83,0)
 S:$L(RGZ) $P(^RGHL7(991.11,RGEXC,0),U,5)=$P(RGZ,U,5)+1
"RTN","RGHLLOG",84,0)
 S:$P(RGZ,U,2)>1 RGQUIT=1
"RTN","RGHLLOG",85,0)
 L -^RGHL7(991.11,RGEXC)
"RTN","RGHLLOG",86,0)
 S RGLOG=$$CREATE
"RTN","RGHLLOG",87,0)
 L +^RGHL7(991.1,RGLOG):10
"RTN","RGHLLOG",88,0)
 S RGI=$O(^RGHL7(991.1,RGLOG,1,$C(32)),-1)+1
"RTN","RGHLLOG",89,0)
 S RGERR=$E($G(RGERR),1,250)
"RTN","RGHLLOG",90,0)
 S DIC="^RGHL7(991.1,"_RGLOG_",1,"
"RTN","RGHLLOG",91,0)
 S X=RGI,DA(1)=RGLOG,DIC(0)="FL",DLAYGO=991.12,DIC("P")=$P(^DD(991.1,2,0),"^",2)
"RTN","RGHLLOG",92,0)
 D ^DIC
"RTN","RGHLLOG",93,0)
 S DIE=DIC
"RTN","RGHLLOG",94,0)
 K DIC,DA,DR,DLAYGO
"RTN","RGHLLOG",95,0)
 S STAT=0
"RTN","RGHLLOG",96,0)
 S DIC="3.8",DIC(0)="Z",X="MPIF EXCEPTIONS" D ^DIC K DIC
"RTN","RGHLLOG",97,0)
 S RGMG=$P($G(Y),"^",1)
"RTN","RGHLLOG",98,0)
 I $P(^RGHL7(991.11,RGEXC,0),U,4)=RGMG S STAT=1
"RTN","RGHLLOG",99,0)
 S DA(1)=RGLOG,DA=RGI,DR="2///"_$G(RGEXC)_";3///"_$S($G(RGDFN):"`"_RGDFN,1:"")_";6///"_$G(STAT)_";10///"_$G(RGERR)
"RTN","RGHLLOG",100,0)
 D ^DIE K DIE,DA,DR
"RTN","RGHLLOG",101,0)
 L -^RGHL7(991.1,RGLOG)
"RTN","RGHLLOG",102,0)
 S RGI=$P(RGZ,U,3),RGZ=$P(RGZ,U,4)
"RTN","RGHLLOG",103,0)
 ;
"RTN","RGHLLOG",104,0)
 ;If the action type is for the MPI Exception Handler, send exception to the handler and quit
"RTN","RGHLLOG",105,0)
 I (RGI=3) D SENDMPI^RGHLLOG1($G(RGEXC),$G(RGERR),$G(RGDFN),$G(MSGID),$G(STATNUM)) Q
"RTN","RGHLLOG",106,0)
 ;
"RTN","RGHLLOG",107,0)
 Q:'RGI!'RGZ
"RTN","RGHLLOG",108,0)
 ;quit and don't send messages for exception types that are now being
"RTN","RGHLLOG",109,0)
 ;handled through the MPI/PD Exception Handling option.
"RTN","RGHLLOG",110,0)
 Q:RGEXC=234  ;**52 MPIC_772 remove 215, 216 & 217;**57 MPIC_1893 remove 218
"RTN","RGHLLOG",111,0)
 S DIC="^XMB(3.8,",DIC(0)="NZ",X="`"_RGZ D ^DIC K DIC Q:+Y<1  S RGZ=$P(Y,U,2) K Y
"RTN","RGHLLOG",112,0)
 Q:RGZ=""!$P($G(^RGSITE("COR",1,0)),U,7)
"RTN","RGHLLOG",113,0)
 S RGERR=$$SHORT(RGEXC,RGERR),RGZ="G."_RGZ
"RTN","RGHLLOG",114,0)
 I RGI=2 D ALERT^RGRSUTL2(RGERR,RGZ) Q
"RTN","RGHLLOG",115,0)
 D MAIL^RGRSUTL2(RGERR,RGZ,"MPI/PD Exception: "_$$SHORT(RGEXC),"MPI/PD exception notification")
"RTN","RGHLLOG",116,0)
 Q
"RTN","RGHLLOG",117,0)
 ;
"RTN","RGHLLOG",118,0)
INVEXC(RGMID) ; determine if this exception needs to be sent to MPI/PD
"RTN","RGHLLOG",119,0)
 ; personnel via FORUM. Return 1 to avoid messaging to FORUM, else 0.
"RTN","RGHLLOG",120,0)
 ; IA#:3244 is applied in this functionality
"RTN","RGHLLOG",121,0)
 N RGFLG,RGIEN S RGFLG=1
"RTN","RGHLLOG",122,0)
 S RGIEN=$$IEN773(RGMID) Q:'RGIEN RGFLG
"RTN","RGHLLOG",123,0)
 S RGIEN("SND")=$$GET1^DIQ(773,RGIEN_",",13)
"RTN","RGHLLOG",124,0)
 S RGIEN("REC")=$$GET1^DIQ(773,RGIEN_",",14)
"RTN","RGHLLOG",125,0)
 ; check the sending application (fld:13, 0;11) & the receiving
"RTN","RGHLLOG",126,0)
 ; application (fld:14, 0;12) to see if they are related to the MPI/PD
"RTN","RGHLLOG",127,0)
 ; project.
"RTN","RGHLLOG",128,0)
 I RGIEN("SND")]""!(RGIEN("REC")]"") D  Q RGFLG
"RTN","RGHLLOG",129,0)
 .S RGFLG=$$APP(RGIEN("SND")) Q:'RGFLG
"RTN","RGHLLOG",130,0)
 .S RGFLG=$$APP(RGIEN("REC"))
"RTN","RGHLLOG",131,0)
 .Q
"RTN","RGHLLOG",132,0)
 ; Only if the sending/receiving applications cannot be determined from
"RTN","RGHLLOG",133,0)
 ; the data in their respective fields, do I check the MSH multiple for
"RTN","RGHLLOG",134,0)
 ; the MSH segment. I identify the sending/receiving application from
"RTN","RGHLLOG",135,0)
 ; this segment. 
"RTN","RGHLLOG",136,0)
 E  D
"RTN","RGHLLOG",137,0)
 .N RG,RG1,RGMSH,RGFS
"RTN","RGHLLOG",138,0)
 .D GETS^DIQ(773,RGIEN_",",200,,"RGMSH") ;check MSH mult for snd/rec app
"RTN","RGHLLOG",139,0)
 .Q:'($D(RGMSH)\10)  ; no data in "MSH" multiple for file 773
"RTN","RGHLLOG",140,0)
 .S RGIEN=RGIEN_",",RG="RGMSH(773,"""_RGIEN_""","_200_")"
"RTN","RGHLLOG",141,0)
 .S RG1=0 F  S RG1=$O(@RG@(RG1)) Q:RG1'>0  D  Q:$E($G(@RG@(RG1)),1,3)="MSH"
"RTN","RGHLLOG",142,0)
 ..I $E($G(@RG@(RG1)),1,3)="MSH" D
"RTN","RGHLLOG",143,0)
 ...S RG(0)=$G(@RG@(RG1)),RGFS=$E(RG(0),4)
"RTN","RGHLLOG",144,0)
 ...S:$P(RG(0),RGFS,3)]"" RGFLG=$$APP($P(RG(0),RGFS,3)) Q:'RGFLG
"RTN","RGHLLOG",145,0)
 ...S:$P(RG(0),RGFS,5)]"" RGFLG=$$APP($P(RG(0),RGFS,5))
"RTN","RGHLLOG",146,0)
 ...Q
"RTN","RGHLLOG",147,0)
 ..Q
"RTN","RGHLLOG",148,0)
 .Q
"RTN","RGHLLOG",149,0)
 Q RGFLG
"RTN","RGHLLOG",150,0)
APP(X) ; check if the sending/receiving application is relevant to the
"RTN","RGHLLOG",151,0)
 ; MPI/PD team.  Returns 1 if a non-relevant namespace, else 0
"RTN","RGHLLOG",152,0)
 I $E(X,1,2)="RG"!($E(X,1,2)="VA")!($E(X,1,3)="MPI") Q 0
"RTN","RGHLLOG",153,0)
 Q 1
"RTN","RGHLLOG",154,0)
 ;
"RTN","RGHLLOG",155,0)
IEN773(RGMID) ; find the ien of the record in the HL7 MESSAGE ADMINISTRATION
"RTN","RGHLLOG",156,0)
 ; (#773) file based on the Message ID.  Input: Message ID
"RTN","RGHLLOG",157,0)
 ; Output: null, no record in 773, else 773 record ien.  IA#: 3244
"RTN","RGHLLOG",158,0)
 Q:$G(RGMID)="" ""
"RTN","RGHLLOG",159,0)
 Q $O(^HLMA("C",RGMID,0))
"RTN","RGHLLOG",160,0)
 ;
"RTN","RGHLLOG",161,0)
SHORT(RGEXC,RGTXT) ;
"RTN","RGHLLOG",162,0)
 ; Retrieve short text description of exception
"RTN","RGHLLOG",163,0)
 Q $G(^RGHL7(991.11,+RGEXC,10))_$S($G(RGTXT)="":"",1:": "_RGTXT)
"RTN","RGHLLOG",164,0)
 ;
"RTN","RGP62PST")
0^2^B3983176^n/a
"RTN","RGP62PST",1,0)
RGP62PST ;OAK/ELZ-POST-INIT TO RETIRE #234 EXCEPTIONS ;9/29/2014
"RTN","RGP62PST",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**62**;30 Apr 99;Build 3
"RTN","RGP62PST",3,0)
 ;
"RTN","RGP62PST",4,0)
 ; Loop through the CIRN HL7 EXCEPTION LOG (#991.1) file "AC"
"RTN","RGP62PST",5,0)
 ; cross reference for the 234 (Primary View Reject) exceptions.
"RTN","RGP62PST",6,0)
 ; See if they are EXCEPTION STATUS of NOT PROCESSED ("0").
"RTN","RGP62PST",7,0)
 ; Mark the EXCEPTION STATUS to PROCESSED ("1").
"RTN","RGP62PST",8,0)
 ; Exception type 234 is obsolete.
"RTN","RGP62PST",9,0)
 ;
"RTN","RGP62PST",10,0)
EXLOG ;
"RTN","RGP62PST",11,0)
 ;If patch RG*1.0*62 has previously been installed, quit post-init.
"RTN","RGP62PST",12,0)
 I $$PATCH^XPDUTL("RG*1.0*62") D BMES^XPDUTL(" Post-install previously ran; no need to reprocess file 991.1 again.") Q
"RTN","RGP62PST",13,0)
 ;
"RTN","RGP62PST",14,0)
 D BMES^XPDUTL(" The post-init routine will retire Primary View Reject (234)")
"RTN","RGP62PST",15,0)
 D MES^XPDUTL(" exceptions in the CIRN HL7 EXCEPTION LOG (#991.1) file.")
"RTN","RGP62PST",16,0)
 ;
"RTN","RGP62PST",17,0)
 N RGCOUNT,DA,DIE,DR,RGEXIEN,RGIEN,X,Y
"RTN","RGP62PST",18,0)
 ;
"RTN","RGP62PST",19,0)
 S (RGCOUNT,RGIEN)=0
"RTN","RGP62PST",20,0)
 F  S RGIEN=$O(^RGHL7(991.1,"AC",234,RGIEN)) Q:'RGIEN  S RGEXIEN=0 F  S RGEXIEN=$O(^RGHL7(991.1,RGIEN,1,RGEXIEN)) Q:'RGEXIEN  D
"RTN","RGP62PST",21,0)
 . ;
"RTN","RGP62PST",22,0)
 . ; quit if processed
"RTN","RGP62PST",23,0)
 . I $P(^RGHL7(991.1,RGIEN,1,RGEXIEN,0),"^",5)=1 Q
"RTN","RGP62PST",24,0)
 . ;I RGCOUNT=3 W "." Q
"RTN","RGP62PST",25,0)
 . ;
"RTN","RGP62PST",26,0)
 . ;Update the EXCEPTION STATUS (#6) field to '1' - PROCESSED.
"RTN","RGP62PST",27,0)
 . S DA(1)=RGIEN,DA=RGEXIEN,DR="6///1"
"RTN","RGP62PST",28,0)
 . S DIE="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGP62PST",29,0)
 . L +^RGHL7(991.1,RGIEN):10
"RTN","RGP62PST",30,0)
 . D ^DIE
"RTN","RGP62PST",31,0)
 . L -^RGHL7(991.1,RGIEN)
"RTN","RGP62PST",32,0)
 . S RGCOUNT=RGCOUNT+1
"RTN","RGP62PST",33,0)
 ;
"RTN","RGP62PST",34,0)
 D BMES^XPDUTL(" A total of "_RGCOUNT_" Primary View Reject exceptions were retired.")
"RTN","RGP62PST",35,0)
 D MES^XPDUTL(" Post-install routine completed successfully.")
"RTN","RGP62PST",36,0)
 Q
"RTN","RGTKPOC")
0^3^B13337596^n/a
"RTN","RGTKPOC",1,0)
RGTKPOC ;BIRMIO/CML-Establish Visitor Record for TK POC ;25-NOV-14
"RTN","RGTKPOC",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**62**;30 Apr 99;Build 3
"RTN","RGTKPOC",3,0)
 ;
"RTN","RGTKPOC",4,0)
 ;Reference to ^XWB2HL7 supported by IA #3144
"RTN","RGTKPOC",5,0)
 ;Reference to ^XWBDRPC supported by IA #3149
"RTN","RGTKPOC",6,0)
 ;Reference to GET^XUESSO1 supported by IA #4342
"RTN","RGTKPOC",7,0)
 ;
"RTN","RGTKPOC",8,0)
 ; This routine was created new for I13 (MVI_CR4999) DG*5.3*62 (cml and cmc).
"RTN","RGTKPOC",9,0)
 ; It is called by a new option "ToolKit POC User Setup" [RG TK POC USER SETUP]
"RTN","RGTKPOC",10,0)
 ; that calls a new RPC (MPI TK POC USER SETUP) that accesses the MPI to establish a Visitor Record in the New Person file (#200).
"RTN","RGTKPOC",11,0)
 ; Just calling the RPC will establish the Visitor record if one didn't exist.  It will then update the ToolKit user with the
"RTN","RGTKPOC",12,0)
 ; DUZ from the MPI, SSN and NT username.
"RTN","RGTKPOC",13,0)
 ;
"RTN","RGTKPOC",14,0)
 ; The RPC will identify any missing required fields in the New Person file and instruct the user to check their setup in the New Person
"RTN","RGTKPOC",15,0)
 ; file to be sure they have Name, SSN ,Network Username and phone contact number.
"RTN","RGTKPOC",16,0)
 ; - If a problem is detected they will need to use the Edit an Existing User option on the User Management menu or contact IRM if needed.
"RTN","RGTKPOC",17,0)
 ; - If they have all the required fields the user will get a message back that all is good  
"RTN","RGTKPOC",18,0)
 ;
"RTN","RGTKPOC",19,0)
 W @IOF
"RTN","RGTKPOC",20,0)
 W !!,"This option allows you to create a Visitor Record in the New Person file on"
"RTN","RGTKPOC",21,0)
 W !,"the MPI production account.  The purpose of this action is to accomplish the"
"RTN","RGTKPOC",22,0)
 W !,"first step toward establishing your ToolKit POC remote view access. Once this"
"RTN","RGTKPOC",23,0)
 W !,"action is completed successfully you will have the ability to use the new tools."
"RTN","RGTKPOC",24,0)
 W !!,"Note: It is important that prior to using this option you be set up correctly"
"RTN","RGTKPOC",25,0)
 W !,"as a user in your local New Person file (#200).  You should verify your user"
"RTN","RGTKPOC",26,0)
 W !,"record has the correct Name, SSN, Network Username and Phone Contact Number."
"RTN","RGTKPOC",27,0)
 ;
"RTN","RGTKPOC",28,0)
 W !!,"Attempting to establish Visitor Record on MPI..."
"RTN","RGTKPOC",29,0)
 N SITE,IEN,USER,NAME,NTNAME,PHONE,SSN,USR
"RTN","RGTKPOC",30,0)
 S SITE="200M"
"RTN","RGTKPOC",31,0)
 K RETURN
"RTN","RGTKPOC",32,0)
 S USR=$$GET^XUESSO1(DUZ) ;USER=ssn^name^station name^station number^DUZ^phone^vpid^NETWORK USERNAME
"RTN","RGTKPOC",33,0)
 I +USR=-1 W !!,"<Missing data> - ",$P(USR,"^",2),!,"Please populate this data via the User Management menu." G QUIT
"RTN","RGTKPOC",34,0)
 I $P(USR,"^",8)="" W !!,"<Missing Network Username> - please populate this field via the User Management",!,"menu as it is required for mapping your VistA account to your ToolKit account." G QUIT
"RTN","RGTKPOC",35,0)
 S NAME=$P(USR,"^",2),SSN=$P(USR,"^"),NTNAME=$P(USR,"^",8),PHONE=$P(USR,"^",6)
"RTN","RGTKPOC",36,0)
 D EN1^XWB2HL7(.RETURN,SITE,"MPI TK POC USER SETUP",1,NAME_"~"_SSN_"~"_NTNAME_"~"_PHONE)
"RTN","RGTKPOC",37,0)
 I RETURN(0)="" W !!,"Attempt was unsuccessful: "_$P(RETURN(1),"^",2) G QUIT
"RTN","RGTKPOC",38,0)
 ;Else RPC successful, RETURN(0) has IEN for other calls.
"RTN","RGTKPOC",39,0)
 S IEN=RETURN(0)
"RTN","RGTKPOC",40,0)
 ; Retrieve data
"RTN","RGTKPOC",41,0)
 N CNT
"RTN","RGTKPOC",42,0)
 F CNT=1:1:10 D RPCCHK^XWB2HL7(.RET,IEN) Q:+RET(0)=1  Q:+RET(0)=-1  H 2
"RTN","RGTKPOC",43,0)
 I +RET(0)=-1 W !!,"Attempt was unsuccessful: "_$S($P(RET(0),"^",2)["Handle":"Error in Process",1:$P(RET(0),"^",2)) G QUIT
"RTN","RGTKPOC",44,0)
 I +RET(0)'=1 W !!,"Attempt was unsuccessful, unable to get data after 10 attempts." G QUIT
"RTN","RGTKPOC",45,0)
 ;
"RTN","RGTKPOC",46,0)
 ; Get results
"RTN","RGTKPOC",47,0)
 K RET D RTNDATA^XWBDRPC(.RET,IEN)
"RTN","RGTKPOC",48,0)
 I +RET(0)=1 W !!,"Your Visitor Record was successfully established, ",!,"and your ToolKit user profile updated."
"RTN","RGTKPOC",49,0)
 I +RET(0)'=1 W !!,"There was an issue with your record ",RET(0),!,"Please report this to HC IdM for assistance."
"RTN","RGTKPOC",50,0)
 ;
"RTN","RGTKPOC",51,0)
QUIT ;
"RTN","RGTKPOC",52,0)
 W !! S DIR(0)="E" D ^DIR K DIR
"RTN","RGTKPOC",53,0)
 Q
"VER")
8.0^22.0
"BLD",3013,6)
^61
**END**
**END**

