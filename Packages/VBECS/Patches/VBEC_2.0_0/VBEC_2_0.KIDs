Released VBEC 2
Extracted from mail message
**KIDS**:VBEC*2.0*0^

**INSTALL NAME**
VBEC*2.0*0
"BLD",7645,0)
VBEC*2.0*0^VBECS^0^3160531^y
"BLD",7645,4,0)
^9.64PA^^
"BLD",7645,6.3)
4
"BLD",7645,"KRN",0)
^9.67PA^779.2^20
"BLD",7645,"KRN",.4,0)
.4
"BLD",7645,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",.401,0)
.401
"BLD",7645,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",.402,0)
.402
"BLD",7645,"KRN",.403,0)
.403
"BLD",7645,"KRN",.5,0)
.5
"BLD",7645,"KRN",.84,0)
.84
"BLD",7645,"KRN",3.6,0)
3.6
"BLD",7645,"KRN",3.6,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",3.8,0)
3.8
"BLD",7645,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",9.2,0)
9.2
"BLD",7645,"KRN",9.8,0)
9.8
"BLD",7645,"KRN",9.8,"NM",0)
^9.68A^68^58
"BLD",7645,"KRN",9.8,"NM",1,0)
VBECA1^^0^B15238106
"BLD",7645,"KRN",9.8,"NM",2,0)
VBECA1A^^0^B4232079
"BLD",7645,"KRN",9.8,"NM",3,0)
VBECA1B^^0^B61255311
"BLD",7645,"KRN",9.8,"NM",4,0)
VBECA1B1^^0^B35762863
"BLD",7645,"KRN",9.8,"NM",6,0)
VBECA3^^0^B13958816
"BLD",7645,"KRN",9.8,"NM",7,0)
VBECA3A^^0^B116577
"BLD",7645,"KRN",9.8,"NM",8,0)
VBECA3B^^0^B11129821
"BLD",7645,"KRN",9.8,"NM",9,0)
VBECA3C^^0^B17448242
"BLD",7645,"KRN",9.8,"NM",10,0)
VBECA4^^0^B15334551
"BLD",7645,"KRN",9.8,"NM",12,0)
VBECA5A^^0^B2902941
"BLD",7645,"KRN",9.8,"NM",13,0)
VBECA5B^^0^B11377348
"BLD",7645,"KRN",9.8,"NM",14,0)
VBECA6^^0^B10870720
"BLD",7645,"KRN",9.8,"NM",15,0)
VBECA7^^0^B32810678
"BLD",7645,"KRN",9.8,"NM",16,0)
VBECA7A^^0^B37967504
"BLD",7645,"KRN",9.8,"NM",17,0)
VBECA7A1^^0^B71661689
"BLD",7645,"KRN",9.8,"NM",18,0)
VBECA7B^^0^B64114607
"BLD",7645,"KRN",9.8,"NM",20,0)
VBECDC00^^0^B29006974
"BLD",7645,"KRN",9.8,"NM",21,0)
VBECDC01^^0^B38136752
"BLD",7645,"KRN",9.8,"NM",22,0)
VBECDC02^^0^B4904086
"BLD",7645,"KRN",9.8,"NM",23,0)
VBECDC19^^0^B52486759
"BLD",7645,"KRN",9.8,"NM",24,0)
VBECDCDC^^0^B30473665
"BLD",7645,"KRN",9.8,"NM",25,0)
VBECDCHX^^0^B13671377
"BLD",7645,"KRN",9.8,"NM",26,0)
VBECDCM^^0^B20099895
"BLD",7645,"KRN",9.8,"NM",27,0)
VBECDCM0^^0^B11064686
"BLD",7645,"KRN",9.8,"NM",28,0)
VBECDCM1^^0^B24209996
"BLD",7645,"KRN",9.8,"NM",29,0)
VBECDCM2^^0^B22225177
"BLD",7645,"KRN",9.8,"NM",30,0)
VBECDCMP^^0^B16912213
"BLD",7645,"KRN",9.8,"NM",31,0)
VBECDCNM^^0^B13224428
"BLD",7645,"KRN",9.8,"NM",32,0)
VBECDCR^^0^B30083905
"BLD",7645,"KRN",9.8,"NM",33,0)
VBECDCSP^^0^B1068327
"BLD",7645,"KRN",9.8,"NM",34,0)
VBECDCST^^0^B10953715
"BLD",7645,"KRN",9.8,"NM",35,0)
VBECDCU^^0^B32610200
"BLD",7645,"KRN",9.8,"NM",36,0)
VBECDCU1^^0^B14426272
"BLD",7645,"KRN",9.8,"NM",37,0)
VBECDCU2^^0^B36794365
"BLD",7645,"KRN",9.8,"NM",38,0)
VBECDCX^^0^B45221687
"BLD",7645,"KRN",9.8,"NM",39,0)
VBECDCX1^^0^B10155625
"BLD",7645,"KRN",9.8,"NM",40,0)
VBECDSS^^0^B15027740
"BLD",7645,"KRN",9.8,"NM",41,0)
VBECENV^^0^B11886954
"BLD",7645,"KRN",9.8,"NM",42,0)
VBECHLOR^^0^B17460611
"BLD",7645,"KRN",9.8,"NM",43,0)
VBECHLRT^^0^B3777483
"BLD",7645,"KRN",9.8,"NM",44,0)
VBECLU^^0^B62085514
"BLD",7645,"KRN",9.8,"NM",45,0)
VBECLU0^^0^B22984698
"BLD",7645,"KRN",9.8,"NM",46,0)
VBECLU3^^0^B17629716
"BLD",7645,"KRN",9.8,"NM",51,0)
VBECPOST^^0^B81343398
"BLD",7645,"KRN",9.8,"NM",54,0)
VBECRL^^0^B10917646
"BLD",7645,"KRN",9.8,"NM",55,0)
VBECRPC^^0^B37044839
"BLD",7645,"KRN",9.8,"NM",56,0)
VBECRPC1^^0^B5917800
"BLD",7645,"KRN",9.8,"NM",57,0)
VBECRPCA^^0^B73291905
"BLD",7645,"KRN",9.8,"NM",58,0)
VBECRPCB^^0^B38154509
"BLD",7645,"KRN",9.8,"NM",59,0)
VBECRPCC^^0^B22664928
"BLD",7645,"KRN",9.8,"NM",60,0)
VBECRPCD^^0^B6726989
"BLD",7645,"KRN",9.8,"NM",61,0)
VBECRPCE^^0^B8061175
"BLD",7645,"KRN",9.8,"NM",62,0)
VBECRPCH^^0^B3298642
"BLD",7645,"KRN",9.8,"NM",63,0)
VBECRPCM^^0^B41078175
"BLD",7645,"KRN",9.8,"NM",64,0)
VBECRPCP^^0^B17844001
"BLD",7645,"KRN",9.8,"NM",65,0)
VBECRPCW^^0^B4711802
"BLD",7645,"KRN",9.8,"NM",66,0)
VBECSRV^^0^B26349772
"BLD",7645,"KRN",9.8,"NM",68,0)
VBECVLC^^0^B23203538
"BLD",7645,"KRN",9.8,"NM","B","VBECA1",1)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA1A",2)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA1B",3)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA1B1",4)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA3",6)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA3A",7)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA3B",8)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA3C",9)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA4",10)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA5A",12)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA5B",13)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA6",14)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA7",15)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA7A",16)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA7A1",17)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECA7B",18)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDC00",20)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDC01",21)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDC02",22)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDC19",23)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCDC",24)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCHX",25)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCM",26)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCM0",27)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCM1",28)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCM2",29)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCMP",30)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCNM",31)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCR",32)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCSP",33)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCST",34)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCU",35)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCU1",36)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCU2",37)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCX",38)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDCX1",39)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECDSS",40)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECENV",41)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECHLOR",42)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECHLRT",43)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECLU",44)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECLU0",45)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECLU3",46)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECPOST",51)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRL",54)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPC",55)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPC1",56)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCA",57)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCB",58)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCC",59)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCD",60)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCE",61)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCH",62)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCM",63)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCP",64)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECRPCW",65)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECSRV",66)
 
"BLD",7645,"KRN",9.8,"NM","B","VBECVLC",68)
 
"BLD",7645,"KRN",19,0)
19
"BLD",7645,"KRN",19,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",19.1,0)
19.1
"BLD",7645,"KRN",101,0)
101
"BLD",7645,"KRN",101,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",409.61,0)
409.61
"BLD",7645,"KRN",771,0)
771
"BLD",7645,"KRN",771,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",779.2,0)
779.2
"BLD",7645,"KRN",870,0)
870
"BLD",7645,"KRN",870,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",8989.51,0)
8989.51
"BLD",7645,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",7645,"KRN",8989.52,0)
8989.52
"BLD",7645,"KRN",8994,0)
8994
"BLD",7645,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",7645,"KRN","B",.4,.4)
 
"BLD",7645,"KRN","B",.401,.401)
 
"BLD",7645,"KRN","B",.402,.402)
 
"BLD",7645,"KRN","B",.403,.403)
 
"BLD",7645,"KRN","B",.5,.5)
 
"BLD",7645,"KRN","B",.84,.84)
 
"BLD",7645,"KRN","B",3.6,3.6)
 
"BLD",7645,"KRN","B",3.8,3.8)
 
"BLD",7645,"KRN","B",9.2,9.2)
 
"BLD",7645,"KRN","B",9.8,9.8)
 
"BLD",7645,"KRN","B",19,19)
 
"BLD",7645,"KRN","B",19.1,19.1)
 
"BLD",7645,"KRN","B",101,101)
 
"BLD",7645,"KRN","B",409.61,409.61)
 
"BLD",7645,"KRN","B",771,771)
 
"BLD",7645,"KRN","B",779.2,779.2)
 
"BLD",7645,"KRN","B",870,870)
 
"BLD",7645,"KRN","B",8989.51,8989.51)
 
"BLD",7645,"KRN","B",8989.52,8989.52)
 
"BLD",7645,"KRN","B",8994,8994)
 
"BLD",7645,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7645,"QUES",0)
^9.62^^
"MBREQ")
0
"PKG",649,-1)
1^1
"PKG",649,0)
VBECS^VBEC^VistA Blood Establishment Computer System
"PKG",649,20,0)
^9.402P^^
"PKG",649,22,0)
^9.49I^1^1
"PKG",649,22,1,0)
2.0
"PKG",649,22,1,"PAH",1,0)
0^3160531
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
58
"RTN","VBECA1")
0^1^B15238106^B15238106
"RTN","VBECA1",1,0)
VBECA1 ;DALOI/PWC - APIS TO RETURN BLOOD BANK DATA FOR LAB ;10/12/00  13:57
"RTN","VBECA1",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA1",3,0)
 ;
"RTN","VBECA1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA1",7,0)
 ; 
"RTN","VBECA1",8,0)
 ; Integration Agreements:
"RTN","VBECA1",9,0)
 ; Reference to FIND^DIC supported by IA #2051
"RTN","VBECA1",10,0)
 ; Reference to ^%DT supported by IA #10003
"RTN","VBECA1",11,0)
 ; Reference to GETS^DIQ() supported by IA #2056
"RTN","VBECA1",12,0)
 ;
"RTN","VBECA1",13,0)
 QUIT
"RTN","VBECA1",14,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",15,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",16,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",17,0)
ABORH(PATID,PATNAM,PATDOB,PARENT) ;
"RTN","VBECA1",18,0)
 ; Return the ABO/Rh value for the DFN of the patient provided.
"RTN","VBECA1",19,0)
 ; A space will be between the values.
"RTN","VBECA1",20,0)
 ;
"RTN","VBECA1",21,0)
 ; Implement new VBECS API.
"RTN","VBECA1",22,0)
 N IFN
"RTN","VBECA1",23,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",24,0)
 I '$G(IFN) Q -1
"RTN","VBECA1",25,0)
 S ABORH=""
"RTN","VBECA1",26,0)
 Q $$ABORH^VBECA1B(IFN,"ABORH")
"RTN","VBECA1",27,0)
 ;
"RTN","VBECA1",28,0)
 ;K LRERR,DIERR,ARR
"RTN","VBECA1",29,0)
 ;D GETS^DIQ(63,LRDFN_",",".05;.06","E","ARR","LRERR")
"RTN","VBECA1",30,0)
 ;S P5=ARR(63,LRDFN_",",.05,"E"),P6=ARR(63,LRDFN_",",.06,"E")
"RTN","VBECA1",31,0)
 ;S ANS=P5_" "_P6
"RTN","VBECA1",32,0)
 ;K ARR
"RTN","VBECA1",33,0)
 ;Q ANS
"RTN","VBECA1",34,0)
 ;
"RTN","VBECA1",35,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",36,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",37,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",38,0)
ABO(PATID,PATNAM,PATDOB,PARENT) ;
"RTN","VBECA1",39,0)
 ; Return the ABO value for the DFN of the patient provided.
"RTN","VBECA1",40,0)
 ;
"RTN","VBECA1",41,0)
 ; Implement new VBECS API.
"RTN","VBECA1",42,0)
 N IFN
"RTN","VBECA1",43,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",44,0)
 I '$G(IFN) Q -1
"RTN","VBECA1",45,0)
 S ABO=""
"RTN","VBECA1",46,0)
 Q $$ABORH^VBECA1B(IFN,"ABO")
"RTN","VBECA1",47,0)
 ;
"RTN","VBECA1",48,0)
 ;K LRERR,DIERR,ARR
"RTN","VBECA1",49,0)
 ;D GETS^DIQ(63,LRDFN_",",".05","E","ARR","LRERR")
"RTN","VBECA1",50,0)
 ;S P5=ARR(63,LRDFN_",",.05,"E"),ANS=P5
"RTN","VBECA1",51,0)
 ;K ARR
"RTN","VBECA1",52,0)
 ;Q ANS
"RTN","VBECA1",53,0)
 ;
"RTN","VBECA1",54,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",55,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",56,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",57,0)
RH(PATID,PATNAM,PATDOB,PARENT) ;
"RTN","VBECA1",58,0)
 ; Return the Rh value for the DFN of the patient provided.
"RTN","VBECA1",59,0)
 ;
"RTN","VBECA1",60,0)
 ; Implement new VBECS API.
"RTN","VBECA1",61,0)
 N IFN
"RTN","VBECA1",62,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",63,0)
 I '$G(IFN) Q -1
"RTN","VBECA1",64,0)
 S RH=""
"RTN","VBECA1",65,0)
 Q $$ABORH^VBECA1B(IFN,"RH")
"RTN","VBECA1",66,0)
 ;
"RTN","VBECA1",67,0)
 ;K LRERR,DIERR,ARR
"RTN","VBECA1",68,0)
 ;D GETS^DIQ(63,LRDFN_",",".06","E","ARR","LRERR")
"RTN","VBECA1",69,0)
 ;S P6=ARR(63,LRDFN_",",.06,"E"),ANS=P6
"RTN","VBECA1",70,0)
 ;K ARR
"RTN","VBECA1",71,0)
 ;Q ANS
"RTN","VBECA1",72,0)
 ;
"RTN","VBECA1",73,0)
 ; -------------------------------------------------------
"RTN","VBECA1",74,0)
 ;      Deprecated Method - Removed from IA 3181
"RTN","VBECA1",75,0)
 ; -------------------------------------------------------
"RTN","VBECA1",76,0)
AGPRES(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Antigens Present
"RTN","VBECA1",77,0)
 ; Return an array of identified antigens and antigen comments for
"RTN","VBECA1",78,0)
 ; the DFN of the patient provided.  If no antigens found, an empty
"RTN","VBECA1",79,0)
 ; array is returned ARR("AGPRES")="".
"RTN","VBECA1",80,0)
 ; 
"RTN","VBECA1",81,0)
 ; ARR = the name of the array used to store antigens.
"RTN","VBECA1",82,0)
 ;   Array will contain the name of the antigen and any antigen comments
"RTN","VBECA1",83,0)
 ;        ARR("AGPRES",n) = Antigen ^ Antigen comment
"RTN","VBECA1",84,0)
 ;
"RTN","VBECA1",85,0)
 ;K ARR
"RTN","VBECA1",86,0)
 ;N LRDFN,A,I,X,P1,P2,P1A
"RTN","VBECA1",87,0)
 ;D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",88,0)
 ;I 'LRDFN S ARR=-1 Q
"RTN","VBECA1",89,0)
 ;S A=0 F I=1:1 S A=$O(^LR(LRDFN,1,A)) Q:A="B"!(A="")  D
"RTN","VBECA1",90,0)
 ;. S DATA=$G(^LR(LRDFN,1,A,0))
"RTN","VBECA1",91,0)
 ;. S P1=$P(DATA,"^",1),P2=$P(DATA,"^",2)
"RTN","VBECA1",92,0)
 ;. S P1A=$P($G(^LAB(61.3,P1,0)),"^",1)
"RTN","VBECA1",93,0)
 ;. S ARR("AGPRES",I)=P1A_"^"_P2
"RTN","VBECA1",94,0)
 ;S:'$D(ARR) ARR("AGPRES")=""    ;return empty array if none found
"RTN","VBECA1",95,0)
 Q
"RTN","VBECA1",96,0)
 ;
"RTN","VBECA1",97,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",98,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",99,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",100,0)
ABID(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Antibodies Identified
"RTN","VBECA1",101,0)
 ; Return an array of identified antibodies and antibody comments for
"RTN","VBECA1",102,0)
 ; the DFN of the patient provided.
"RTN","VBECA1",103,0)
 ; 
"RTN","VBECA1",104,0)
 ; ARR = the name of the array used to store antibodies.
"RTN","VBECA1",105,0)
 ; Array will contain the name of the antibody and any antibody comments
"RTN","VBECA1",106,0)
 ;        ARR("ABID",n) = Antibody ^ Antibody comment
"RTN","VBECA1",107,0)
 ;
"RTN","VBECA1",108,0)
 K ARR
"RTN","VBECA1",109,0)
 N IFN
"RTN","VBECA1",110,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",111,0)
 I '$G(IFN) S ARR=-1 Q
"RTN","VBECA1",112,0)
 D ABID^VBECA1B(IFN) Q
"RTN","VBECA1",113,0)
 ;
"RTN","VBECA1",114,0)
 ;S A=0 F I=1:1 S A=$O(^LR(LRDFN,1.7,A)) Q:A=""  D
"RTN","VBECA1",115,0)
 ;. S DATA=$G(^LR(LRDFN,1.7,A,0))
"RTN","VBECA1",116,0)
 ;. S P1=$P(DATA,"^",1),P2=$P(DATA,"^",2)
"RTN","VBECA1",117,0)
 ;. S P1A=$P($G(^LAB(61.3,P1,0)),"^",1)
"RTN","VBECA1",118,0)
 ;. S ARR("ABID",I)=P1A_"^"_P2
"RTN","VBECA1",119,0)
 ;S:'$D(ARR) ARR("ABID")=""    ;return empty array if none found
"RTN","VBECA1",120,0)
 ;Q
"RTN","VBECA1",121,0)
 ;
"RTN","VBECA1",122,0)
 ; -------------------------------------------------------
"RTN","VBECA1",123,0)
 ;      Deprecated Method - Removed from IA 3181
"RTN","VBECA1",124,0)
 ; -------------------------------------------------------
"RTN","VBECA1",125,0)
AGAB(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get RBC Antigens Absent
"RTN","VBECA1",126,0)
 ; Return an array of absent antigens and absent antigen comments for
"RTN","VBECA1",127,0)
 ; the DFN of the patient provided. 
"RTN","VBECA1",128,0)
 ; ARR = the name of the array used to store absent antigens.
"RTN","VBECA1",129,0)
 ;   Array will contain the name of the antigen and any antigen comments
"RTN","VBECA1",130,0)
 ;        ARR("AGAB",n) = Absent Antigen ^ Absent Antigen comment
"RTN","VBECA1",131,0)
 ;
"RTN","VBECA1",132,0)
 ;K ARR
"RTN","VBECA1",133,0)
 ;N LRDFN,A,I,X,P1,P2,P1A,DATA
"RTN","VBECA1",134,0)
 ;D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",135,0)
 ;I 'LRDFN S ARR=-1 Q
"RTN","VBECA1",136,0)
 ;S A=0 F I=1:1 S A=$O(^LR(LRDFN,1.5,A)) Q:A=""  D
"RTN","VBECA1",137,0)
 ;. S DATA=$G(^LR(LRDFN,1.5,A,0))
"RTN","VBECA1",138,0)
 ;. S P1=$P(DATA,"^",1),P2=$P(DATA,"^",2)
"RTN","VBECA1",139,0)
 ;. S P1A=$P($G(^LAB(61.3,P1,0)),"^",1)
"RTN","VBECA1",140,0)
 ;. S ARR("AGAB",I)=P1A_"^"_P2
"RTN","VBECA1",141,0)
 ;S:'$D(ARR) ARR("AGAB")=""    ;return empty array if none found
"RTN","VBECA1",142,0)
 Q
"RTN","VBECA1",143,0)
 ;
"RTN","VBECA1",144,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",145,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",146,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",147,0)
TRRX(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Transfusion Reactions
"RTN","VBECA1",148,0)
 ; Return an array of transfusion reactions for the DFN of the
"RTN","VBECA1",149,0)
 ;   patient provided.  If no transfusion reactions found, an
"RTN","VBECA1",150,0)
 ;   empty array is returned  ARR("TRRX")=""
"RTN","VBECA1",151,0)
 ; 
"RTN","VBECA1",152,0)
 ; ARR = the name of the array used to store transfusion reactions.
"RTN","VBECA1",153,0)
 ;   Array will contain both reactions where a particular unit or
"RTN","VBECA1",154,0)
 ;   transfusion was determined to be the cause of the reaction, and
"RTN","VBECA1",155,0)
 ;   those where no unit could be identified as being the cause of the
"RTN","VBECA1",156,0)
 ;   reaction.
"RTN","VBECA1",157,0)
 ; Transaction Type is a pointer to Blood Bank Utility File #65.4
"RTN","VBECA1",158,0)
 ;      ARR("TRRX",n) = Transfusion Date/Time ^ Transaction Type
"RTN","VBECA1",159,0)
 ;
"RTN","VBECA1",160,0)
 ; Implement new VBECS API.
"RTN","VBECA1",161,0)
 K ARR
"RTN","VBECA1",162,0)
 N IFN
"RTN","VBECA1",163,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",164,0)
 I '$G(IFN) S ARR=-1 Q
"RTN","VBECA1",165,0)
 D TRRX^VBECA1B(IFN) Q
"RTN","VBECA1",166,0)
 ;
"RTN","VBECA1",167,0)
 ; get the reactions associated with a particular transfusion
"RTN","VBECA1",168,0)
 ;S (A,CNT)=0 F  S A=$O(^LR(LRDFN,1.6,A)) Q:A=""  D
"RTN","VBECA1",169,0)
 ;. S DATA=$G(^LR(LRDFN,1.6,A,0))
"RTN","VBECA1",170,0)
 ;. S P1=$P(DATA,"^",1),P11=$P(DATA,"^",11) Q:P11=""   ;transaction type
"RTN","VBECA1",171,0)
 ;. S P11A=$S(P11'="":$P($G(^LAB(65.4,P11,0)),"^",1),1:"")
"RTN","VBECA1",172,0)
 ;. S CNT=CNT+1,ARR("TRRX",CNT)=P1_"^"_P11A D
"RTN","VBECA1",173,0)
 ;. . D FIND^DIC(66,,".02","A","`"_$P(DATA,"^",2),,,,,"VBECTRX")
"RTN","VBECA1",174,0)
 ;. . S ARR("TRRX",CNT)=ARR("TRRX",CNT)_"^"_VBECTRX("DILIST","ID",1,.02)_"^"_$P(DATA,"^",3) ;Added UNIT ID and COMPONENT
"RTN","VBECA1",175,0)
 ;. . S CMT=0 F  S CMT=$O(^LR(LRDFN,1.6,A,1,CMT)) Q:'CMT  S ARR("TRRX",CNT,CMT)=^LR(LRDFN,1.6,A,1,CMT,0)
"RTN","VBECA1",176,0)
 ;; now get the reactions NOT associated with a particular transfusion
"RTN","VBECA1",177,0)
 ;S A=0 F  S A=$O(^LR(LRDFN,1.9,A)) Q:A=""  D
"RTN","VBECA1",178,0)
 ;. S DATA=$G(^LR(LRDFN,1.9,A,0))
"RTN","VBECA1",179,0)
 ;. S P1=$P(DATA,"^",1),P2=$P(DATA,"^",2) Q:P2=""    ;transaction type
"RTN","VBECA1",180,0)
 ;. S P2A=$S(P2'="":$P($G(^LAB(65.4,P2,0)),"^",1),1:"")
"RTN","VBECA1",181,0)
 ;. S CNT=CNT+1,ARR("TRRX",CNT)=P1_"^"_P2A
"RTN","VBECA1",182,0)
 ;. S CMT=0 F  S CMT=$O(^LR(LRDFN,1.9,A,1,CMT)) Q:'CMT  S ARR("TRRX",CNT,CMT)=^LR(LRDFN,1.9,A,1,CMT,0)
"RTN","VBECA1",183,0)
 ;S:'$D(ARR) ARR("TRRX")=""    ;return empty array if none found
"RTN","VBECA1",184,0)
 Q
"RTN","VBECA1",185,0)
 ;
"RTN","VBECA1",186,0)
 ; -------------------------------------------------------
"RTN","VBECA1",187,0)
 ;      Private Method supports IA 3181-H
"RTN","VBECA1",188,0)
 ; -------------------------------------------------------
"RTN","VBECA1",189,0)
BBCMT(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Blood Bank Comments
"RTN","VBECA1",190,0)
 ; Return an array of blood bank comments for the DFN of the patient
"RTN","VBECA1",191,0)
 ; provided.
"RTN","VBECA1",192,0)
 ; If no comments found, an empty array is returned ARR("BBCMT")="".
"RTN","VBECA1",193,0)
 ; ARR = the name of the array that will be used to store comments.
"RTN","VBECA1",194,0)
 ;   Array will contain all the comment text.
"RTN","VBECA1",195,0)
 ;        ARR("BBCMT",n) = Blood Bank Comment Text
"RTN","VBECA1",196,0)
 ;
"RTN","VBECA1",197,0)
 K ARR
"RTN","VBECA1",198,0)
 N LRDFN,A,I,P76
"RTN","VBECA1",199,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",200,0)
 I 'LRDFN S ARR=-1 Q
"RTN","VBECA1",201,0)
 S A=0 F I=1:1 S A=$O(^LR(LRDFN,3,A)) Q:A=""  D
"RTN","VBECA1",202,0)
 . S P76=$G(^LR(LRDFN,3,A,0))
"RTN","VBECA1",203,0)
 . S ARR("BBCMT",I)=P76
"RTN","VBECA1",204,0)
 S:'$D(ARR) ARR("BBCMT")=""    ;return empty array if none found
"RTN","VBECA1",205,0)
 Q
"RTN","VBECA1",206,0)
 ;
"RTN","VBECA1",207,0)
 ; -------------------------------------------------------
"RTN","VBECA1",208,0)
 ;      Deprecated Method - Removed from IA 3181
"RTN","VBECA1",209,0)
 ; -------------------------------------------------------
"RTN","VBECA1",210,0)
AUTO(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Available Autologous Units
"RTN","VBECA1",211,0)
 ; Return an array of available autologous units for the DFN of the
"RTN","VBECA1",212,0)
 ; patient provided.  If no comments found, an empty array is returned
"RTN","VBECA1",213,0)
 ; ARR("AUTO")="".  
"RTN","VBECA1",214,0)
 ; 
"RTN","VBECA1",215,0)
 ;  ARR = the name of the array that will store autologous units.
"RTN","VBECA1",216,0)
 ;  Array will contain the component type and the expiration date.
"RTN","VBECA1",217,0)
 ;       ARR("AUTO",n) = Component Type ^ Expiration Date
"RTN","VBECA1",218,0)
 ; Component Type is a pointer to Blood Product File (#66)
"RTN","VBECA1",219,0)
 ;
"RTN","VBECA1",220,0)
 ;K ARR
"RTN","VBECA1",221,0)
 ;N LRDFN,A,I,AU,AUT,CMP,COMP,CNT,DATA,EXPDT,EXP
"RTN","VBECA1",222,0)
 ;D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",223,0)
 ;I 'LRDFN S ARR=-1 Q
"RTN","VBECA1",224,0)
 ;I '$D(^LRD(65,"AU",LRDFN)) S ARR("AUTO")="" Q     ;no AP xref
"RTN","VBECA1",225,0)
 ;S (A,CNT)=0 F I=1:1 S A=$O(^LRD(65,"AU",LRDFN,A)) Q:A=""  D
"RTN","VBECA1",226,0)
 ;. S AUT=$G(^LRD(65,A,4)) Q:$P(AUT,"^")'=""  ; already dispositioned
"RTN","VBECA1",227,0)
 ;. S AU=$P(^LRD(65,A,8),"^",3) Q:AU'="A"     ; autologous unit
"RTN","VBECA1",228,0)
 ;. S DATA=$G(^LRD(65,A,0)),CMP=$P(DATA,"^",4),EXPDT=$P(DATA,"^",6)
"RTN","VBECA1",229,0)
 ;. S COMP=$P($G(^LAB(66,CMP,0)),"^",1)       ; ptr to blood product file
"RTN","VBECA1",230,0)
 ;. D EXPIRE(EXPDT) Q:EXP=1                   ;unit is expired
"RTN","VBECA1",231,0)
 ;. S CNT=CNT+1,ARR("AUTO",CNT)=COMP_"^"_EXPDT
"RTN","VBECA1",232,0)
 ;S:'$D(ARR) ARR("AUTO")=""    ;return empty array if none found
"RTN","VBECA1",233,0)
 Q
"RTN","VBECA1",234,0)
 ;
"RTN","VBECA1",235,0)
EXPIRE(X) ; check if date has expired
"RTN","VBECA1",236,0)
 S EXP=0,%DT="TXF" D ^%DT S X=Y K:Y<1 X
"RTN","VBECA1",237,0)
 I $D(X) S X(1)=X,%DT="T",X="N" D ^%DT S X=X(1) D
"RTN","VBECA1",238,0)
 . I $P(X,".")'>$P(Y,".") S EXP=1 Q    ; Unit expired or expires today
"RTN","VBECA1",239,0)
 . S EXP=0
"RTN","VBECA1",240,0)
 Q
"RTN","VBECA1A")
0^2^B4232079^B4232079
"RTN","VBECA1A",1,0)
VBECA1A ;HIOFO/REL - Verify Patient ; 7/5/01 6:50am
"RTN","VBECA1A",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA1A",3,0)
 ;
"RTN","VBECA1A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA1A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA1A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA1A",7,0)
 ; 
"RTN","VBECA1A",8,0)
 ; Integration Agreements:
"RTN","VBECA1A",9,0)
 ; Reference to ^DIC supported by IA #10006
"RTN","VBECA1A",10,0)
 ; Reference to $$LRDFN^LR7OR1 supported by IA #2503
"RTN","VBECA1A",11,0)
 ;
"RTN","VBECA1A",12,0)
 QUIT
"RTN","VBECA1A",13,0)
 ;
"RTN","VBECA1A",14,0)
PAT ; Verify Patient
"RTN","VBECA1A",15,0)
 N NUM,ERR,X,Y,DIC,ROOT K VBECERR S NUM=0
"RTN","VBECA1A",16,0)
 I $G(PATID)="" S ERR=1 D ERR
"RTN","VBECA1A",17,0)
 I $G(PATNAM)="" S ERR=2 D ERR
"RTN","VBECA1A",18,0)
 I $G(PATDOB)="" S ERR=3 D ERR
"RTN","VBECA1A",19,0)
 S:$G(PARENT)="" PARENT=2 I PARENT'=2&(PARENT'=67) S ERR=7 D ERR G DONE
"RTN","VBECA1A",20,0)
 G:$G(PATID)="" DONE
"RTN","VBECA1A",21,0)
 S DIC=PARENT,DIC(0)="XMZN",X=PATID D ^DIC
"RTN","VBECA1A",22,0)
 ;                       ^  ADDED "N" TO DIC(0) 
"RTN","VBECA1A",23,0)
 ;                          TO ALLOW NUMERIC LOOKUP. RLM
"RTN","VBECA1A",24,0)
 I Y<1 S ERR=4 D ERR G DONE
"RTN","VBECA1A",25,0)
 S IFN=+Y,FILEROOT=$S(PARENT=2:"DPT(",PARENT=67:"LRT(67,",1:"")
"RTN","VBECA1A",26,0)
 S LRDFN=$$LRDFN^LR7OR1(IFN,FILEROOT)
"RTN","VBECA1A",27,0)
 I $G(PATNAM)'="",PATNAM'=$P(Y(0),"^",1) S ERR=5 D ERR
"RTN","VBECA1A",28,0)
 I $G(PATDOB)'="",PATDOB'=$P(Y(0),"^",3) S ERR=6 D ERR
"RTN","VBECA1A",29,0)
DONE S:NUM LRDFN="" Q
"RTN","VBECA1A",30,0)
 ;
"RTN","VBECA1A",31,0)
ERR ; Set Error
"RTN","VBECA1A",32,0)
 I '$D(VBECERR(0)) S VBECERR(0)=$G(PATID)_"^"_$G(PATNAM)_"^"_$G(PATDOB)_"^"_$G(PARENT)
"RTN","VBECA1A",33,0)
 S NUM=NUM+1,VBECERR(NUM)=ERR_"^"_$P($T(ERRTX+ERR),";;",2)
"RTN","VBECA1A",34,0)
 Q
"RTN","VBECA1A",35,0)
ERRTX ;; Error Text
"RTN","VBECA1A",36,0)
 ;;No Patient ID supplied
"RTN","VBECA1A",37,0)
 ;;No Patient Name supplied
"RTN","VBECA1A",38,0)
 ;;No Patient Date of Birth supplied
"RTN","VBECA1A",39,0)
 ;;No patient record found to match the PATID supplied
"RTN","VBECA1A",40,0)
 ;;Patient Name (PATNAM) supplied does not match the patient ID (PATID) record
"RTN","VBECA1A",41,0)
 ;;Patient Date of Birth (PATDOB) does not match the patient ID (PATID) record
"RTN","VBECA1A",42,0)
 ;;Unsupported Parent File (PARENT) supplied
"RTN","VBECA1B")
0^3^B61255311^B61255311
"RTN","VBECA1B",1,0)
VBECA1B ;HIOFO/BNT - VBECS Patient Data APIs ; 01/21/05 8:30am
"RTN","VBECA1B",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA1B",3,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA1B",4,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA1B",5,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA1B",6,0)
 ; 
"RTN","VBECA1B",7,0)
 ; Integration Agreements:
"RTN","VBECA1B",8,0)
 ; Reference to ^DIC supported by IA #10006
"RTN","VBECA1B",9,0)
 ; Reference to file 200 supported by IA #10035
"RTN","VBECA1B",10,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECA1B",11,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA1B",12,0)
 ; Reference to ^DPT( supported by IA #10035
"RTN","VBECA1B",13,0)
 ; 
"RTN","VBECA1B",14,0)
 QUIT
"RTN","VBECA1B",15,0)
 ;
"RTN","VBECA1B",16,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",17,0)
 ;      Private Method supports IA 4624
"RTN","VBECA1B",18,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",19,0)
ABORH(DFN,VBECTYP) ; Returns VBECS Patient ABO Group and Rh Type
"RTN","VBECA1B",20,0)
 ; Input:  DFN = PATIENT file (#2) IEN
"RTN","VBECA1B",21,0)
 ;         VBECTYP = "ABORH" or "ABO" or "RH" as needed.
"RTN","VBECA1B",22,0)
 IF '$D(^DPT(DFN,0)) S ARR("ERROR")="1^Invalid or Missing Patient Identifier" QUIT ARR("ERROR")
"RTN","VBECA1B",23,0)
 IF VBECTYP'="ABORH"&(VBECTYP'="ABO")&(VBECTYP'="RH") S ARR("ERROR")="1^Invalid Input" QUIT ARR("ERROR")
"RTN","VBECA1B",24,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),ARR1
"RTN","VBECA1B",25,0)
 D INITV^VBECRPCC("VBECS Patient ABO_RH")
"RTN","VBECA1B",26,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",27,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q ARR("ERROR")
"RTN","VBECA1B",28,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",29,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",30,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",31,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",32,0)
 I $D(@VBECY@("ERROR")) SET ARR("ERROR")="1^"_@VBECY@("ERROR") QUIT ARR("ERROR")
"RTN","VBECA1B",33,0)
 D ABOEN(.ARR,VBECY)
"RTN","VBECA1B",34,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),ARR1
"RTN","VBECA1B",35,0)
 ;K OPTION,VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES
"RTN","VBECA1B",36,0)
 K VBECSRC,VBECSTAT,VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND
"RTN","VBECA1B",37,0)
 K VBECUNS,VBECY
"RTN","VBECA1B",38,0)
 Q $G(@VBECTYP)
"RTN","VBECA1B",39,0)
ABOEN(ARR,DOC) ;
"RTN","VBECA1B",40,0)
 N CBK,CNT
"RTN","VBECA1B",41,0)
 S OPTION="",VBECRES=$NA(ARR1("API"))
"RTN","VBECA1B",42,0)
 K @VBECRES
"RTN","VBECA1B",43,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",44,0)
 D ABOSET(.CBK)
"RTN","VBECA1B",45,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",46,0)
 Q
"RTN","VBECA1B",47,0)
ABOSET(CBK) ;
"RTN","VBECA1B",48,0)
 K CBK
"RTN","VBECA1B",49,0)
 S CBK("STARTELEMENT")="ABOSTELE^VBECA1B1"
"RTN","VBECA1B",50,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",51,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",52,0)
 Q
"RTN","VBECA1B",53,0)
 ;
"RTN","VBECA1B",54,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",55,0)
 ;      Private Method supports IA 4626
"RTN","VBECA1B",56,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",57,0)
TRRX(DFN) ; Returns VBECS Patient Transfusion Reaction History
"RTN","VBECA1B",58,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J)
"RTN","VBECA1B",59,0)
 D INITV^VBECRPCC("VBECS Patient TRRX")
"RTN","VBECA1B",60,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",61,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",62,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",63,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",64,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",65,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",66,0)
 D TRRXEN(.ARR,VBECY)
"RTN","VBECA1B",67,0)
 I '$D(ARR("TRRX")) S ARR("TRRX")=""
"RTN","VBECA1B",68,0)
 Q
"RTN","VBECA1B",69,0)
 ;
"RTN","VBECA1B",70,0)
TRRXEN(ARR,DOC) ;
"RTN","VBECA1B",71,0)
 N CBK,CNT
"RTN","VBECA1B",72,0)
 S OPTION="",VBECRES=$NA(^TMP("VBECA1B",$J))
"RTN","VBECA1B",73,0)
 K @VBECRES
"RTN","VBECA1B",74,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",75,0)
 D TRRXSET(.CBK)
"RTN","VBECA1B",76,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",77,0)
 M ARR("TRRX")=@VBECRES
"RTN","VBECA1B",78,0)
 K VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT
"RTN","VBECA1B",79,0)
 K VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",80,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J)
"RTN","VBECA1B",81,0)
 Q
"RTN","VBECA1B",82,0)
 ;
"RTN","VBECA1B",83,0)
TRRXSET(CBK) ;
"RTN","VBECA1B",84,0)
 K CBK
"RTN","VBECA1B",85,0)
 S CBK("STARTELEMENT")="TRSTELE^VBECA1B1"
"RTN","VBECA1B",86,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",87,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",88,0)
 Q
"RTN","VBECA1B",89,0)
 ;
"RTN","VBECA1B",90,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",91,0)
 ;      Private Method supports IA 4625
"RTN","VBECA1B",92,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",93,0)
ABID(DFN) ; Returns VBECS Patient Antibodies Identified
"RTN","VBECA1B",94,0)
 D INITV^VBECRPCC("VBECS Patient ABID")
"RTN","VBECA1B",95,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",96,0)
 K @VBECY,@VBECPRMS("RESULTS")
"RTN","VBECA1B",97,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",98,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",99,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",100,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",101,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",102,0)
 D ABIDEN(.ARR,VBECY)
"RTN","VBECA1B",103,0)
 ;K @VBECY,@VBECPRMS("RESULTS")
"RTN","VBECA1B",104,0)
 K ARR1,ATR,ATR,CBK,CNT,DFN,DOC,ELE,OPTION,TEXT,VBECABHC,VBECLN
"RTN","VBECA1B",105,0)
 K VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT,VBECTRHC,VBECTSTC
"RTN","VBECA1B",106,0)
 K VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",107,0)
 Q
"RTN","VBECA1B",108,0)
 ;
"RTN","VBECA1B",109,0)
ABIDEN(ARR,DOC) ;
"RTN","VBECA1B",110,0)
 N CBK,CNT
"RTN","VBECA1B",111,0)
 S OPTION="",VBECRES=$NA(^TMP("VBECA1B",$J))
"RTN","VBECA1B",112,0)
 K @VBECRES
"RTN","VBECA1B",113,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",114,0)
 D ABSET(.CBK)
"RTN","VBECA1B",115,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",116,0)
 M ARR("ABID")=@VBECRES
"RTN","VBECA1B",117,0)
 Q
"RTN","VBECA1B",118,0)
 ;
"RTN","VBECA1B",119,0)
ABSET(CBK) ;
"RTN","VBECA1B",120,0)
 K CBK
"RTN","VBECA1B",121,0)
 S CBK("STARTELEMENT")="ABSTELE^VBECA1B1"
"RTN","VBECA1B",122,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",123,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",124,0)
 Q
"RTN","VBECA1B",125,0)
 ;
"RTN","VBECA1B",126,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",127,0)
 ;      Private Method supports IA 4620
"RTN","VBECA1B",128,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",129,0)
AVUNIT(TMPLOC,DFN) ; Returns VBECS Patient Available Units
"RTN","VBECA1B",130,0)
 ; Input variable;
"RTN","VBECA1B",131,0)
 ; TMPLOC = Node in ^TMP to be used for output data array
"RTN","VBECA1B",132,0)
 ; DFN = Internal number of patient
"RTN","VBECA1B",133,0)
 ;
"RTN","VBECA1B",134,0)
 ; Output is data array:
"RTN","VBECA1B",135,0)
 ; ^TMP(TMPLOC,$J,n)
"RTN","VBECA1B",136,0)
 ;
"RTN","VBECA1B",137,0)
 Q:$G(TMPLOC)=""
"RTN","VBECA1B",138,0)
 Q:'$G(DFN)
"RTN","VBECA1B",139,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),^TMP(TMPLOC,$J)
"RTN","VBECA1B",140,0)
 D INITV^VBECRPCC("VBECS Patient Available Units")
"RTN","VBECA1B",141,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",142,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",143,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",144,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",145,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",146,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",147,0)
 D AVUEN(.ARR,VBECY)
"RTN","VBECA1B",148,0)
 I '$D(ARR("UNIT")) S ARR("UNIT")=""
"RTN","VBECA1B",149,0)
 M ^TMP(TMPLOC,$J)=ARR
"RTN","VBECA1B",150,0)
 K ARR
"RTN","VBECA1B",151,0)
 Q
"RTN","VBECA1B",152,0)
AVUEN(ARR,DOC) ;
"RTN","VBECA1B",153,0)
 N CBK,CNT
"RTN","VBECA1B",154,0)
 S OPTION="",VBECRES=$NA(^TMP("VBECA1B",$J))
"RTN","VBECA1B",155,0)
 K @VBECRES
"RTN","VBECA1B",156,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",157,0)
 D AVUSET(.CBK)
"RTN","VBECA1B",158,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",159,0)
 M ARR=@VBECRES@("UNIT",$J)
"RTN","VBECA1B",160,0)
 K VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT
"RTN","VBECA1B",161,0)
 K VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",162,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),ARR1
"RTN","VBECA1B",163,0)
 Q
"RTN","VBECA1B",164,0)
AVUSET(CBK) ;
"RTN","VBECA1B",165,0)
 K CBK
"RTN","VBECA1B",166,0)
 S CBK("STARTELEMENT")="AVUSTELE^VBECA1B1"
"RTN","VBECA1B",167,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",168,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",169,0)
 Q
"RTN","VBECA1B",170,0)
 ;
"RTN","VBECA1B",171,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",172,0)
 ;      Private Method supports IA 4621
"RTN","VBECA1B",173,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",174,0)
TRAN(DFN) ; Returns VBECS Patient Transfusion History
"RTN","VBECA1B",175,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J)
"RTN","VBECA1B",176,0)
 D INITV^VBECRPCC("VBECS Patient Transfusion History")
"RTN","VBECA1B",177,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",178,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",179,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",180,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",181,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",182,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",183,0)
 D TRANEN(.ARR,VBECY)
"RTN","VBECA1B",184,0)
 Q
"RTN","VBECA1B",185,0)
 ;
"RTN","VBECA1B",186,0)
TRANEN(ARR,DOC) ;
"RTN","VBECA1B",187,0)
 N CBK,CNT
"RTN","VBECA1B",188,0)
 S OPTION="",VBECRES=$NA(^TMP("VBECA1B",$J))
"RTN","VBECA1B",189,0)
 K @VBECRES
"RTN","VBECA1B",190,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",191,0)
 D TRANSET(.CBK)
"RTN","VBECA1B",192,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",193,0)
 I '$D(@VBECRES@("TRAN")) S ARR="" Q
"RTN","VBECA1B",194,0)
 M ARR=@VBECRES@("TRAN")
"RTN","VBECA1B",195,0)
 K VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT
"RTN","VBECA1B",196,0)
 K VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",197,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),^TMP("VBECA1B",$J)
"RTN","VBECA1B",198,0)
 Q
"RTN","VBECA1B",199,0)
 ;
"RTN","VBECA1B",200,0)
TRANSET(CBK) ;
"RTN","VBECA1B",201,0)
 K CBK
"RTN","VBECA1B",202,0)
 S CBK("STARTELEMENT")="TRANSTEL^VBECA1B1"
"RTN","VBECA1B",203,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",204,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",205,0)
 Q
"RTN","VBECA1B",206,0)
 ;
"RTN","VBECA1B",207,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",208,0)
 ;      Private Method supports IA 4623
"RTN","VBECA1B",209,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",210,0)
DFN(DFN) ; Returns VBECS Patient Reports for CPRS
"RTN","VBECA1B",211,0)
 D INITV^VBECRPCC("VBECS Patient Report")
"RTN","VBECA1B",212,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",213,0)
 K @VBECY,@VBECPRMS("RESULTS")
"RTN","VBECA1B",214,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",215,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",216,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",217,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",218,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",219,0)
 D RPTEN(.ARR,VBECY)
"RTN","VBECA1B",220,0)
 ;K @VBECY,@VBECPRMS("RESULTS")
"RTN","VBECA1B",221,0)
 K VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT
"RTN","VBECA1B",222,0)
 K VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",223,0)
 Q
"RTN","VBECA1B",224,0)
RPTEN(ARR,DOC) ;
"RTN","VBECA1B",225,0)
 N CBK,CNT
"RTN","VBECA1B",226,0)
 S OPTION="",VBECRES=$NA(^TMP("VBDATA",$J))
"RTN","VBECA1B",227,0)
 K @VBECRES
"RTN","VBECA1B",228,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND,VBECSTC,VBECCRC)=0
"RTN","VBECA1B",229,0)
 D RPTSET(.CBK)
"RTN","VBECA1B",230,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",231,0)
 M ARR=@VBECRES
"RTN","VBECA1B",232,0)
 Q
"RTN","VBECA1B",233,0)
RPTSET(CBK) ;
"RTN","VBECA1B",234,0)
 K CBK
"RTN","VBECA1B",235,0)
 S CBK("STARTELEMENT")="RPTSTELE^VBECA1B1"
"RTN","VBECA1B",236,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",237,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",238,0)
 Q
"RTN","VBECA1B1")
0^4^B35762863^B35762863
"RTN","VBECA1B1",1,0)
VBECA1B1 ;HIOFO/BNT - VBECS Patient Data API continued ;04/12/2005 03:10
"RTN","VBECA1B1",2,0)
 ;;2.0;VBECS;;Jun 05, 2015;Build 4
"RTN","VBECA1B1",3,0)
 ;
"RTN","VBECA1B1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA1B1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA1B1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA1B1",7,0)
 ; 
"RTN","VBECA1B1",8,0)
 ; Integration Agreements:
"RTN","VBECA1B1",9,0)
 ; Call to $$STRIP^XLFSTR is supported by IA: 10104
"RTN","VBECA1B1",10,0)
 ; Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECA1B1",11,0)
 ; Call to $$NS^XUAF4 is supported by IA: 2171
"RTN","VBECA1B1",12,0)
 ; Call to $$STA^XUAF4 is supported by IA: 2171
"RTN","VBECA1B1",13,0)
 ; Call to F4^XUAF4 is supported by IA: 2171
"RTN","VBECA1B1",14,0)
 ;
"RTN","VBECA1B1",15,0)
ENELE(ELE) ; -- element end event handler
"RTN","VBECA1B1",16,0)
 Q
"RTN","VBECA1B1",17,0)
 ;
"RTN","VBECA1B1",18,0)
CHAR(TEXT) ; -- element char event handler
"RTN","VBECA1B1",19,0)
 Q
"RTN","VBECA1B1",20,0)
 ;
"RTN","VBECA1B1",21,0)
ABOSTELE(ELE,ATR) ; -- element start event handler for Patient ABO/Rh API
"RTN","VBECA1B1",22,0)
 I ELE="Patient" S ABO=$G(ATR("abo")),RH=$G(ATR("rh")),ABORH=$G(ATR("abo"))_" "_$G(ATR("rh"))
"RTN","VBECA1B1",23,0)
 Q
"RTN","VBECA1B1",24,0)
 ;
"RTN","VBECA1B1",25,0)
TRSTELE(ELE,ATR) ; -- element start event handler for Patient Transfusion Reaction History API
"RTN","VBECA1B1",26,0)
 I ELE="TransfusionReaction" D
"RTN","VBECA1B1",27,0)
  . S VBECLN=VBECLN+1,@VBECRES@(VBECLN)=$G(ATR("date"))_"^"_$G(ATR("type"))
"RTN","VBECA1B1",28,0)
  . D:$L($G(ATR("comment"))) BLDCMT(ATR("comment"))
"RTN","VBECA1B1",29,0)
  . I $G(ATR("unitId"))]"" S @VBECRES@(VBECLN)=@VBECRES@(VBECLN)_"^"_$G(ATR("unitId"))_"^"_$G(ATR("productTypeName"))_"^"_$G(ATR("productTypePrintName"))
"RTN","VBECA1B1",30,0)
 Q
"RTN","VBECA1B1",31,0)
 ;
"RTN","VBECA1B1",32,0)
BLDCMT(STR) ; Build comment text paragraph
"RTN","VBECA1B1",33,0)
 N CNT
"RTN","VBECA1B1",34,0)
P1 I $L(STR)<80 S CNT=$G(CNT)+1,@VBECRES@(VBECLN,CNT)=STR Q
"RTN","VBECA1B1",35,0)
 F L=80:-1:1 Q:$E(STR,L)=" "
"RTN","VBECA1B1",36,0)
 S CNT=$G(CNT)+1,@VBECRES@(VBECLN,CNT)=$E(STR,1,L-1),STR=$E(STR,L+1,99999) G P1
"RTN","VBECA1B1",37,0)
 ;
"RTN","VBECA1B1",38,0)
ABSTELE(ELE,ATR) ; -- element start event handler Patient Antibodies Identified API
"RTN","VBECA1B1",39,0)
 I ELE="Antibody" D
"RTN","VBECA1B1",40,0)
  . S VBECLN=VBECLN+1,@VBECRES@(VBECLN)=$G(ATR("name"))
"RTN","VBECA1B1",41,0)
  . D:$L($G(ATR("comment"))) BLDCMT(ATR("comment"))
"RTN","VBECA1B1",42,0)
 Q
"RTN","VBECA1B1",43,0)
 ;
"RTN","VBECA1B1",44,0)
AVUSTELE(ELE,ATR) ; -- element start event handler Patient Available Units API
"RTN","VBECA1B1",45,0)
 I ELE="Patient" S @VBECRES@("UNIT",$J,0)=$$STRIP^XLFSTR($G(ATR("abo"))," ")_"^"_$S($G(ATR("rh"))="P":"POS",$G(ATR("rh"))="N":"NEG",1:"")_U_$G(ATR("dfn"))_U_$G(ATR("firstName"))_U_$G(ATR("lastName"))_U_$G(ATR("dob"))_U_$G(ATR("ssn"))
"RTN","VBECA1B1",46,0)
 ;
"RTN","VBECA1B1",47,0)
 I ELE="Unit" D
"RTN","VBECA1B1",48,0)
  . S IDT=9999999-$G(ATR("dateAssigned")),EDT=$G(ATR("expDate"))
"RTN","VBECA1B1",49,0)
  . S EFLG=$S(EDT-DT<2:"*",EDT-DT<1:"**",1:"")
"RTN","VBECA1B1",50,0)
  . S EDT=$TR($$FMTE^XLFDT(EDT,"5DZ"),"@"," ")
"RTN","VBECA1B1",51,0)
  . S DTYP=$S($G(ATR("status"))="A":"Autologous",$G(ATR("status"))="D":"Directed",1:"")
"RTN","VBECA1B1",52,0)
  . ; Added $$STRIP to support 035 VistA MR 030407
"RTN","VBECA1B1",53,0)
  . I $G(ATR("divisionCode")) D F4^XUAF4($$STRIP^XLFSTR(ATR("divisionCode")," "),.DIVARR,"","")
"RTN","VBECA1B1",54,0)
  . S UDIV=$S($G(DIVARR("NAME"))]"":$G(DIVARR("NAME")),1:"Unknown")
"RTN","VBECA1B1",55,0)
  . F  Q:'$D(@VBECRES@("UNIT",$J,IDT))  S IDT=IDT+.0001
"RTN","VBECA1B1",56,0)
  . S @VBECRES@("UNIT",$J,IDT)=EFLG_U_EDT_" "_U_$$TRIM^XLFSTR($G(ATR("id")),"LR"," ")_U_$G(ATR("product"))_U_$G(ATR("volume"))_U_$G(ATR("abo"))_U_$G(ATR("rh"))_U_DTYP_U_UDIV_U
"RTN","VBECA1B1",57,0)
  . S @VBECRES@("UNIT",$J,IDT)=@VBECRES@("UNIT",$J,IDT)_$S($G(ATR("location"))]"":ATR("location"),1:"BLOOD BANK")_U_$G(ATR("productCode"))_U_$G(ATR("labelid"))
"RTN","VBECA1B1",58,0)
  . ;RLM Added the labelid
"RTN","VBECA1B1",59,0)
 Q
"RTN","VBECA1B1",60,0)
 ;
"RTN","VBECA1B1",61,0)
TRANSTEL(ELE,ATR) ; -- element start event handler for Transfusion History API
"RTN","VBECA1B1",62,0)
 I ELE="Transfusion" D
"RTN","VBECA1B1",63,0)
  . N IDT,TDT,UNITS,VAL
"RTN","VBECA1B1",64,0)
  . S VBECLN=VBECLN+1
"RTN","VBECA1B1",65,0)
  . S IDT=9999999-$P($G(ATR("date")),".")
"RTN","VBECA1B1",66,0)
  . S TDT=9999999-IDT
"RTN","VBECA1B1",67,0)
  . S UNITS=+$G(ATR("unitsPooled")) S:UNITS'>0 UNITS=1
"RTN","VBECA1B1",68,0)
  . ; 038 VistA MR 031407 - Increment date counter for multiple records
"RTN","VBECA1B1",69,0)
  . F  Q:'$D(@VBECRES@("TRAN",IDT))  S IDT=IDT+.0001
"RTN","VBECA1B1",70,0)
  . S @VBECRES@("TRAN",IDT)=TDT_"^"_UNITS_"\"_$G(ATR("productTypePrintName"))_";"
"RTN","VBECA1B1",71,0)
  . S @VBECRES@("TRAN",$G(ATR("productTypePrintName")))=$G(ATR("productTypeName"))
"RTN","VBECA1B1",72,0)
 Q
"RTN","VBECA1B1",73,0)
 ;
"RTN","VBECA1B1",74,0)
RPTSTELE(ELE,ATR) ; -- element start event handler
"RTN","VBECA1B1",75,0)
 I ELE="SpecimenTest" D
"RTN","VBECA1B1",76,0)
 . S VBECSTC=VBECSTC+1 D
"RTN","VBECA1B1",77,0)
 . . I ATR("printTestName")="DAT Poly CC" Q
"RTN","VBECA1B1",78,0)
 . . I ATR("printTestName")="DAT IgG CC" Q
"RTN","VBECA1B1",79,0)
 . . I $G(ATR("orderableTestName"))="TRW" Q
"RTN","VBECA1B1",80,0)
 . . S @VBECRES@("SPECIMEN",VBECSTC)=$G(ATR("cprsOrderId"))_"^"_$G(ATR("divisionCode"))_"^"_$G(ATR("enteringTechId"))_"^"_$G(ATR("orderableTestName"))_"^"_$G(ATR("printTestName"))_"^"_$G(ATR("requestorId"))
"RTN","VBECA1B1",81,0)
 . . S @VBECRES@("SPECIMEN",VBECSTC)=@VBECRES@("SPECIMEN",VBECSTC)_"^"_$G(ATR("result"))_"^"_$G(ATR("testDate"))
"RTN","VBECA1B1",82,0)
 . . I $G(ATR("comment"))]"" D
"RTN","VBECA1B1",83,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,1)=$E($G(ATR("comment")),1,245)
"RTN","VBECA1B1",84,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,2)=$E($G(ATR("comment")),246,490)
"RTN","VBECA1B1",85,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,3)=$E($G(ATR("comment")),491,999)
"RTN","VBECA1B1",86,0)
 . . I $G(ATR("cannedComment"))]"" I $G(ATR("result"))="Pos" D
"RTN","VBECA1B1",87,0)
 . . . S VBECSTN("Antibody Screen Interp")="",VBECSTN("DAT Poly Interp")="",VBECSTN("DAT IgG Interp")="",VBECSTN("DAT Comp Interp")=""
"RTN","VBECA1B1",88,0)
 . . . I $G(ATR("printTestName"))]"",'$D(VBECSTN(ATR("printTestName"))) Q
"RTN","VBECA1B1",89,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,4)=$E($G(ATR("cannedComment")),1,245)
"RTN","VBECA1B1",90,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,5)=$E($G(ATR("cannedComment")),246,490)
"RTN","VBECA1B1",91,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,6)=$E($G(ATR("cannedComment")),491,999)
"RTN","VBECA1B1",92,0)
 I ELE="ComponentRequest" D
"RTN","VBECA1B1",93,0)
 . S VBECCRC=VBECCRC+1 D
"RTN","VBECA1B1",94,0)
 . . S @VBECRES@("COMPONENT REQUEST",VBECCRC)=$G(ATR("componentClassName"))_"^"_ATR("unitsRequested")_"^"_$G(ATR("dateRequested"))_"^"_$G(ATR("dateWanted"))_"^"_$G(ATR("requestorId"))_"^"_$G(ATR("enteredById"))_"^"_$G(ATR("cprsOrderId"))
"RTN","VBECA1B1",95,0)
 I ELE="Unit" D
"RTN","VBECA1B1",96,0)
 . S VBECUNC=VBECUNC+1 D
"RTN","VBECA1B1",97,0)
 . . ; fixed VBECUNC variable to address 034 VistA MR 030407
"RTN","VBECA1B1",98,0)
 . . S @VBECRES@("UNIT",VBECUNC)=$G(ATR("expDate"))_"^"_$G(ATR("product"))_"^"_$G(ATR("abo"))_"^"_$G(ATR("rh"))_"^"_$G(ATR("divisionCode"))_"^"_$G(ATR("location"))_"^"_$G(ATR("status"))_"^"_$G(ATR("id"))
"RTN","VBECA1B1",99,0)
 Q
"RTN","VBECA3")
0^6^B13958816^B13958816
"RTN","VBECA3",1,0)
VBECA3 ;HINES IFO/DDA-API interfaces for CPRS ;9/20/00  12:44
"RTN","VBECA3",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA3",3,0)
 ;
"RTN","VBECA3",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA3",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA3",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA3",7,0)
 ; 
"RTN","VBECA3",8,0)
 ; Integration Agreements:
"RTN","VBECA3",9,0)
 ; Reference DBIA 4619 - VBECS Order Entry
"RTN","VBECA3",10,0)
 ; Reference to GETS^DIQ() supported by IA #2056
"RTN","VBECA3",11,0)
 ; Reference to $$LRDFN^LR7OR1 supported by IA #2503
"RTN","VBECA3",12,0)
 ; Reference to EN^LR7OSBR supported by IA #3190-A
"RTN","VBECA3",13,0)
 ; Reference to EN1^LR7OSBR supported by IA #3190-B
"RTN","VBECA3",14,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECA3",15,0)
 ; 
"RTN","VBECA3",16,0)
 QUIT
"RTN","VBECA3",17,0)
 ;
"RTN","VBECA3",18,0)
EN(LRDFN) ; Call to encapsulate the extract of Blood Bank data for CPRS
"RTN","VBECA3",19,0)
 ;  via the call EN^LR7OSBR.  This call can be tested by invoking the
"RTN","VBECA3",20,0)
 ;  routine BLR^ORWRP1(root,dfn), where root is the null string and
"RTN","VBECA3",21,0)
 ;  DFN is the PATIENT FILE numeric internal entry number for the
"RTN","VBECA3",22,0)
 ;  patient.
"RTN","VBECA3",23,0)
 ; Parameter LRDFN is the LAB numeric internal entry number for the
"RTN","VBECA3",24,0)
 ;   LAB patient.
"RTN","VBECA3",25,0)
 N X
"RTN","VBECA3",26,0)
 S X="LR7OSBR" X ^%ZOSF("TEST") I '$T W !,"LR7OSBR does not exist in this environment." Q
"RTN","VBECA3",27,0)
 D EN^LR7OSBR
"RTN","VBECA3",28,0)
 Q
"RTN","VBECA3",29,0)
 ;
"RTN","VBECA3",30,0)
EN1(DFN) ; Call to encapsulate the extract of Blood Bank data for CPRS
"RTN","VBECA3",31,0)
 ;  via the call EN1^LR7OSBR.
"RTN","VBECA3",32,0)
 ; Parameter DFN is the PATIENT FILE numeric internal entry number for
"RTN","VBECA3",33,0)
 ;   the LAB patient.
"RTN","VBECA3",34,0)
 N X
"RTN","VBECA3",35,0)
 S X="LR7OSBR" X ^%ZOSF("TEST") I '$T W !,"LR7OSBR does not exist in this environment." Q
"RTN","VBECA3",36,0)
 D EN1^LR7OSBR(DFN)
"RTN","VBECA3",37,0)
 Q
"RTN","VBECA3",38,0)
 ;
"RTN","VBECA3",39,0)
 ; ------------------------------------------------------
"RTN","VBECA3",40,0)
 ;     Private method supports IA #4766
"RTN","VBECA3",41,0)
 ; ------------------------------------------------------
"RTN","VBECA3",42,0)
OEAPI(ARR,DFN,DIV) ; CPRS query to return patient and component related
"RTN","VBECA3",43,0)
 ;         data from VBECS through VistALink
"RTN","VBECA3",44,0)
 IF DFN']"" SET ARR("ERROR")="1^No Patient ID Provided" QUIT
"RTN","VBECA3",45,0)
 IF '$D(^DPT(DFN,0)) SET ARR("ERROR")="1^Undefined VistA Patient ID" QUIT
"RTN","VBECA3",46,0)
 IF DIV']"" SET ARR("ERROR")="1^No Patient Division Provided" QUIT
"RTN","VBECA3",47,0)
 ;
"RTN","VBECA3",48,0)
 NEW VBECY,VBECSTAT
"RTN","VBECA3",49,0)
 SET ARR("ERROR")=0
"RTN","VBECA3",50,0)
 DO INITV^VBECRPCC("VBECS Order Entry")
"RTN","VBECA3",51,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA3",52,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA3",53,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA3",54,0)
 SET VBECPRMS("PARAMS",2,"TYPE")="STRING"
"RTN","VBECA3",55,0)
 SET VBECPRMS("PARAMS",2,"VALUE")=$$CHARCHK^XOBVLIB(DIV)
"RTN","VBECA3",56,0)
 ;
"RTN","VBECA3",57,0)
 SET VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA3",58,0)
 ;
"RTN","VBECA3",59,0)
 SET VBECY=$NA(^TMP("VBECS_XML_RES",$J))
"RTN","VBECA3",60,0)
 KILL @VBECY
"RTN","VBECA3",61,0)
 DO PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA3",62,0)
 IF $D(@VBECY@("ERROR")) SET ARR("ERROR")="1^"_@VBECY@("ERROR") DO CLEANUP QUIT
"RTN","VBECA3",63,0)
 DO EN^VBECA3C(.ARR,VBECY)
"RTN","VBECA3",64,0)
 ; Setting for debugging GUI
"RTN","VBECA3",65,0)
 KILL ^XTMP("OEAPI")
"RTN","VBECA3",66,0)
 M ^XTMP("OEAPI",$J,$P(^DPT(DFN,0),U),DIV)=ARR
"RTN","VBECA3",67,0)
 M ^XTMP("OEAPI",$J,DFN,DIV)=^TMP("VBECS_XML_RES",$J)
"RTN","VBECA3",68,0)
 ;Q  KILL @VBECY
"RTN","VBECA3",69,0)
 ;
"RTN","VBECA3",70,0)
 ;DO CLEANUP
"RTN","VBECA3",71,0)
 QUIT
"RTN","VBECA3",72,0)
BBDATA(DFN) ;Retrieve data for CPRS reports
"RTN","VBECA3",73,0)
 ;File 63's somewhat unique storage method limits the usefulness
"RTN","VBECA3",74,0)
 ;of some of the Kernel database calls.  It was necessary to determine
"RTN","VBECA3",75,0)
 ;the first subscript level in the BB node and call the Kernel
"RTN","VBECA3",76,0)
 ;API with this level predefined.
"RTN","VBECA3",77,0)
 ;All references (field name and values) are converted to the external
"RTN","VBECA3",78,0)
 ;format.
"RTN","VBECA3",79,0)
 ;Null values are not returned.
"RTN","VBECA3",80,0)
 ;Inverse date values are converted to normal format.
"RTN","VBECA3",81,0)
 K ^TMP("VBHOLD",$J),^TMP("VBDATA",$J)
"RTN","VBECA3",82,0)
 S LRDFN=$$LRDFN^LR7OR1(DFN)
"RTN","VBECA3",83,0)
 F VBAA=0  F  S VBAA=$O(^LR(LRDFN,"BB",VBAA)) Q:'VBAA  S VBAAA=VBAA_","_LRDFN_"," D
"RTN","VBECA3",84,0)
  . D GETS^DIQ(63.01,VBAAA,"**","ERN","^TMP(""VBHOLD"","_$J,"ERROR")
"RTN","VBECA3",85,0)
 S VBAA=0 F  S VBAA=$O(^TMP("VBHOLD",$J,VBAA)) Q:VBAA=""  D
"RTN","VBECA3",86,0)
  . S VBAB=0 F  S VBAB=$O(^TMP("VBHOLD",$J,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3",87,0)
  . . S VBAC=0 F  S VBAC=$O(^TMP("VBHOLD",$J,VBAA,VBAB,VBAC)) Q:VBAC=""  D
"RTN","VBECA3",88,0)
  . . . I $L(VBAB,",")=3 S VBAD=$P(VBAB,",") I VBAD?7N1".".N S VBAD=9999999-VBAD
"RTN","VBECA3",89,0)
  . . . I $L(VBAB,",")=4 S VBAD=$P(VBAB,",",2) I VBAD?7N1".".N S VBAD=9999999-VBAD
"RTN","VBECA3",90,0)
  . . . S ^TMP("VBDATA",$J,VBAD,VBAC)=^TMP("VBHOLD",$J,VBAA,VBAB,VBAC,"E")
"RTN","VBECA3",91,0)
 D GETS^DIQ(63,LRDFN,".084*","ERN","VBCMPRQ","ERROR")
"RTN","VBECA3",92,0)
 S VBAA="" F  S VBAA=$O(VBCMPRQ(63.084,VBAA)) Q:VBAA=""  D
"RTN","VBECA3",93,0)
  . S VBAB=""  F  S VBAB=$O(VBCMPRQ(63.084,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3",94,0)
  . . S VBAC=$P(VBAA,",")
"RTN","VBECA3",95,0)
  . . S ^TMP("VBDATA",$J,"COMPONENT REQUEST",VBAC,VBAB)=VBCMPRQ(63.084,VBAA,VBAB,"E")
"RTN","VBECA3",96,0)
 K ^TMP("VBHOLD",$J),VBAA,VBAB,VBAC,VBAD,VBAAA,VBCMPRQ
"RTN","VBECA3",97,0)
 Q
"RTN","VBECA3",98,0)
CLEANUP ;
"RTN","VBECA3",99,0)
 KILL VBECPRMS,VBECSTAT
"RTN","VBECA3",100,0)
 KILL ^TMP("VBECS_XML_RES",$J)
"RTN","VBECA3",101,0)
 QUIT
"RTN","VBECA3A")
0^7^B116577^B116577
"RTN","VBECA3A",1,0)
VBECA3A ;DALOI/RLM-API interface for CPRS ;9/20/00  12:44
"RTN","VBECA3A",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA3A",3,0)
 ;
"RTN","VBECA3A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA3A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA3A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA3A",7,0)
 ; 
"RTN","VBECA3A",8,0)
 ; Integration Agreements:
"RTN","VBECA3A",9,0)
 ;
"RTN","VBECA3A",10,0)
 QUIT
"RTN","VBECA3A",11,0)
 ;
"RTN","VBECA3A",12,0)
 ; ----------------------------------------------------------
"RTN","VBECA3A",13,0)
 ;      Private Method supports IA 3879
"RTN","VBECA3A",14,0)
 ; ----------------------------------------------------------
"RTN","VBECA3A",15,0)
DFN(DFN) ;Main entry point.  Calls the SPECIMEN, COMPONENT REQUEST, and CROSSMATCH data
"RTN","VBECA3A",16,0)
 D DFN^VBECA1B(DFN)
"RTN","VBECA3A",17,0)
 Q
"RTN","VBECA3A",18,0)
 ;D EXIT K VBCMPRQ
"RTN","VBECA3A",19,0)
 ;K ^TMP("VBHOLD",$J),^TMP("VBDATA",$J)
"RTN","VBECA3A",20,0)
 ;S LRDFN=$$LRDFN^LR7OR1(DFN) Q:'LRDFN
"RTN","VBECA3A",21,0)
 ;D A,B,C
"RTN","VBECA3A",22,0)
 ;M ^TMP("ZBNT",$J)=^TMP("VBDATA",$J)
"RTN","VBECA3A",23,0)
 ;G EXIT
"RTN","VBECA3A",24,0)
A ;Retrieves SPECIMEN data
"RTN","VBECA3A",25,0)
 ;S VBAA=0  F  S VBAA=$O(^LR(LRDFN,"BB",VBAA)) Q:'VBAA  S VBAAA=VBAA_","_LRDFN_"," D
"RTN","VBECA3A",26,0)
 ; . D GETS^DIQ(63.01,VBAAA,".01;.03;.99*;2.1;2.4;2.6;2.9;2.91;3*;6;7*;8*;10;10.3;11;11.3","EN","^TMP(""VBHOLD"","_$J,"ERROR")
"RTN","VBECA3A",27,0)
 ;S VBAA=0 F  S VBAA=$O(^TMP("VBHOLD",$J,VBAA)) Q:VBAA=""  D
"RTN","VBECA3A",28,0)
 ; . S VBAB=0 F  S VBAB=$O(^TMP("VBHOLD",$J,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3A",29,0)
 ; . . ;I $L(VBAB,",")=3,$G(^TMP("VBHOLD",$J,VBAA,VBAB,"DATE/TIME SPECIMEN TAKEN","E"))="" Q
"RTN","VBECA3A",30,0)
 ; . . I $L(VBAB,",")=3,$G(^TMP("VBHOLD",$J,VBAA,VBAB,.01,"E"))="" Q
"RTN","VBECA3A",31,0)
 ; . . S VBAC=0 F  S VBAC=$O(^TMP("VBHOLD",$J,VBAA,VBAB,VBAC)) Q:VBAC=""  D
"RTN","VBECA3A",32,0)
 ; . . . I $L(VBAB,",")=3 S VBAD=$P(VBAB,",") I VBAD?7N1".".N S VBAD=9999999-VBAD
"RTN","VBECA3A",33,0)
 ; . . . I $L(VBAB,",")=4 S VBAD=$P(VBAB,",",2) I VBAD?7N1".".N S VBAD=9999999-VBAD
"RTN","VBECA3A",34,0)
 ; . . . I $L(VBAB,",")=3 S ^TMP("VBDATA",$J,"SPECIMEN",VBAD,VBAA_","_VBAC)=^TMP("VBHOLD",$J,VBAA,VBAB,VBAC,"E")
"RTN","VBECA3A",35,0)
 ; . . . I $L(VBAB,",")=4 S ^TMP("VBDATA",$J,"SPECIMEN",VBAD,VBAA_","_VBAC,$P(VBAB,","))=^TMP("VBHOLD",$J,VBAA,VBAB,VBAC,"E")
"RTN","VBECA3A",36,0)
 Q
"RTN","VBECA3A",37,0)
B ;Retrieves COMPONENT REQUEST data
"RTN","VBECA3A",38,0)
 ;S VBAA=0,VBINT(.08)="" F  S VBAA=$O(^LR(LRDFN,1.8,VBAA)) Q:'VBAA  S VBAAA=VBAA_","_LRDFN_"," D
"RTN","VBECA3A",39,0)
 ; . D GETS^DIQ(63.084,VBAAA,".01;.04;.03;.05;.09;.08","IEN","VBCMPRQ","ERROR")
"RTN","VBECA3A",40,0)
 ;S VBAA="" F  S VBAA=$O(VBCMPRQ(63.084,VBAA)) Q:VBAA=""  D
"RTN","VBECA3A",41,0)
 ; . S VBAB=""  F  S VBAB=$O(VBCMPRQ(63.084,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3A",42,0)
 ; . . S VBAC=$P(VBAA,",")
"RTN","VBECA3A",43,0)
 ; . . S ^TMP("VBDATA",$J,"COMPONENT REQUEST",VBAC,VBAB)=VBCMPRQ(63.084,VBAA,VBAB,$S($D(VBINT(VBAB)):"I",1:"E"))
"RTN","VBECA3A",44,0)
 Q
"RTN","VBECA3A",45,0)
C ;Retrieves CROSSMATCH data
"RTN","VBECA3A",46,0)
 ;S VBAA=0 F  S VBAA=$O(^LRD(65,"AP",LRDFN,VBAA)) Q:'VBAA  D
"RTN","VBECA3A",47,0)
 ; . D GETS^DIQ(65,VBAA,".01;.04;.07;.08;.06;.16","EN","VBXMATCH","ERROR")
"RTN","VBECA3A",48,0)
 ; . S VBAC=$O(^LRD(65,+VBAA,3,0)) Q:'VBAC
"RTN","VBECA3A",49,0)
 ; . D GETS^DIQ(65.03,VBAC_","_+VBAA_",",.04,"EN","VBXMTCH1","ERROR")
"RTN","VBECA3A",50,0)
 ;S VBAA=0 F  S VBAA=$O(VBXMATCH(65,VBAA)) Q:VBAA=""  S VBAB=0 F  S VBAB=$O(VBXMATCH(65,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3A",51,0)
 ; . S ^TMP("VBDATA",$J,"CROSSMATCH",+VBAA,VBAB)=VBXMATCH(65,VBAA,VBAB,"E")
"RTN","VBECA3A",52,0)
 ;S VBAA="" F  S VBAA=$O(VBXMTCH1(65.03,VBAA)) Q:VBAA=""  S VBAB="" F  S VBAB=$O(VBXMTCH1(65.03,VBAA,VBAB)) Q:VBAB=""  S ^TMP("VBDATA",$J,"CROSSMATCH",$P(VBAA,",",2),3)=$G(VBXMTCH1(65.03,VBAA,".04","E"))
"RTN","VBECA3A",53,0)
 Q
"RTN","VBECA3A",54,0)
EXIT ;Clean up a few variables
"RTN","VBECA3A",55,0)
 ;K LRDFN,VBAA,VBAB,VBAC,VBAD,VBAAA,VBCMPRQ,VBINT,VBXMATCH,VBXMTCH1
"RTN","VBECA3A",56,0)
 Q
"RTN","VBECA3A",57,0)
ZEOR ;VBECA3A
"RTN","VBECA3B")
0^8^B11129821^B11129821
"RTN","VBECA3B",1,0)
VBECA3B ;DALOI/RLM-API interfaces for CPRS ;9/20/00  12:44
"RTN","VBECA3B",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA3B",3,0)
 ;
"RTN","VBECA3B",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA3B",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA3B",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA3B",7,0)
 ; 
"RTN","VBECA3B",8,0)
 ; Integration Agreements:
"RTN","VBECA3B",9,0)
 ; 
"RTN","VBECA3B",10,0)
 QUIT
"RTN","VBECA3B",11,0)
 ;
"RTN","VBECA3B",12,0)
CPRS ;
"RTN","VBECA3B",13,0)
 K VBECBBD D CR,SPC,TRX
"RTN","VBECA3B",14,0)
 K VBECA,VBECB,VBECI
"RTN","VBECA3B",15,0)
 Q
"RTN","VBECA3B",16,0)
CR ;Component Request
"RTN","VBECA3B",17,0)
 K ^TMP("BBD",$J,"COMPONENT REQUEST")
"RTN","VBECA3B",18,0)
 S VBECA="" F  S VBECA=$O(^TMP("VBDATA",$J,"COMPONENT REQUEST",VBECA)) Q:VBECA=""  D
"RTN","VBECA3B",19,0)
  . S ^TMP("BBD",$J,"COMPONENT REQUEST",VBECA)=""
"RTN","VBECA3B",20,0)
  . F VBECI=.01,.04,.03,.05,.09,.08 S ^TMP("BBD",$J,"COMPONENT REQUEST",VBECA)=^TMP("BBD",$J,"COMPONENT REQUEST",VBECA)_$G(^TMP("VBDATA",$J,"COMPONENT REQUEST",VBECA,VBECI))_"^"
"RTN","VBECA3B",21,0)
 K VBECA,VBECB,VBECI
"RTN","VBECA3B",22,0)
 Q
"RTN","VBECA3B",23,0)
SPC ;Specimen
"RTN","VBECA3B",24,0)
 K ^TMP("BBD",$J,"SPECIMEN")
"RTN","VBECA3B",25,0)
 S VBECA="" F  S VBECA=$O(^TMP("VBDATA",$J,"SPECIMEN",VBECA)) Q:VBECA=""  D
"RTN","VBECA3B",26,0)
  . Q:$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,.03"))=""
"RTN","VBECA3B",27,0)
  . S ^TMP("BBD",$J,"SPECIMEN",VBECA)=""
"RTN","VBECA3B",28,0)
  . F VBECI=2.91,10.3,11.3 I $G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,"_VBECI))]"" S ^TMP("BBD",$J,"SPECIMEN",VBECA,VBECI)=$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,"_VBECI))
"RTN","VBECA3B",29,0)
  . F VBECI="63.012,.01","63.46,.01","63.46,.02","63.48,.01","63.199,.01" S VBECB=0 D
"RTN","VBECA3B",30,0)
  . . F  S VBECB=$O(^TMP("VBDATA",$J,"SPECIMEN",VBECA,VBECI,VBECB)) Q:VBECB=""  S ^TMP("BBD",$J,"SPECIMEN",VBECA,VBECI,VBECB)=$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,VBECI,VBECB))
"RTN","VBECA3B",31,0)
  . F VBECI=.03,.01,10,2.9,2.1,2.4,2.6,2.9,11,6 D
"RTN","VBECA3B",32,0)
  . . S VBDTA=$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,"_VBECI))
"RTN","VBECA3B",33,0)
  . . I VBECI=10,VBDTA="NOT DONE" S VBDTA="ND"
"RTN","VBECA3B",34,0)
  . . I VBECI=11,VBDTA="NOT DONE" S VBDTA="ND"
"RTN","VBECA3B",35,0)
  . . I (VBECI=2.1)!(VBECI=2.4)!(VBECI=2.6) S VBDTA=$S(VBDTA="N":"Neg",1:VBDTA)
"RTN","VBECA3B",36,0)
  . . I (VBECI=2.9)!(VBECI=6)!(VBECI=11),VBDTA'="ND" W !,VBDTA S VBDTA=$S(VBDTA?1"N".E:"Neg",VBDTA?1"P".E:"Pos",1:VBDTA) W !,VBDTA
"RTN","VBECA3B",37,0)
  . . S ^TMP("BBD",$J,"SPECIMEN",VBECA)=^TMP("BBD",$J,"SPECIMEN",VBECA)_VBDTA_"^"
"RTN","VBECA3B",38,0)
  . . ;S ^TMP("BBD",$J,"SPECIMEN",VBECA)=^TMP("BBD",$J,"SPECIMEN",VBECA)_$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,"_VBECI))_"^"
"RTN","VBECA3B",39,0)
 K VBECA,VBECB,VBECI
"RTN","VBECA3B",40,0)
 Q
"RTN","VBECA3B",41,0)
TRX ;Units assigned/crossmatched
"RTN","VBECA3B",42,0)
 K ^TMP("BBD",$J,"CROSSMATCH")
"RTN","VBECA3B",43,0)
 S VBECA="" F  S VBECA=$O(^TMP("VBDATA",$J,"CROSSMATCH",VBECA)) Q:VBECA=""  F VBECI=.01,.04,.07,.08,.06,.16,3 S ^TMP("BBD",$J,"CROSSMATCH",VBECA)=$G(^TMP("BBD",$J,"CROSSMATCH",VBECA))_$G(^TMP("VBDATA",$J,"CROSSMATCH",VBECA,VBECI))_"^"
"RTN","VBECA3B",44,0)
 K VBECA,VBECB,VBECI
"RTN","VBECA3B",45,0)
 Q
"RTN","VBECA3B",46,0)
ZEOR ;VBECA3B
"RTN","VBECA3C")
0^9^B17448242^B17448242
"RTN","VBECA3C",1,0)
VBECA3C ;HIOFO/BNT - VBECS Utility to parse XML for CPRS ;12/19/2003  01:00
"RTN","VBECA3C",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA3C",3,0)
 ;
"RTN","VBECA3C",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA3C",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA3C",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA3C",7,0)
 ; 
"RTN","VBECA3C",8,0)
 ; Integration Agreements:
"RTN","VBECA3C",9,0)
 ; Reference DBIA 4149 - M XML Parser
"RTN","VBECA3C",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA3C",11,0)
 ; Reference to CHKNAME^XQ5 supported by IA #????
"RTN","VBECA3C",12,0)
 ; 
"RTN","VBECA3C",13,0)
 ;
"RTN","VBECA3C",14,0)
 QUIT
"RTN","VBECA3C",15,0)
 ;
"RTN","VBECA3C",16,0)
EN(ARR,DOC) ;
"RTN","VBECA3C",17,0)
 N CBK,CNT
"RTN","VBECA3C",18,0)
 ;W !!!,"Invoking XML Parser...",!!!
"RTN","VBECA3C",19,0)
 S OPTION=""
"RTN","VBECA3C",20,0)
 S VBECRES=$NA(^TMP("VBEC_OE_DATA",$J))
"RTN","VBECA3C",21,0)
 K @VBECRES
"RTN","VBECA3C",22,0)
 S (VBECTRHC,VBECTREQ,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC)=0
"RTN","VBECA3C",23,0)
 ; Unit Type counters
"RTN","VBECA3C",24,0)
 SET (VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA3C",25,0)
 D SET(.CBK)
"RTN","VBECA3C",26,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA3C",27,0)
 M ARR=@VBECRES
"RTN","VBECA3C",28,0)
 ;S CNT=""
"RTN","VBECA3C",29,0)
 ;W !!!,"Parser Summary:",!!
"RTN","VBECA3C",30,0)
 ;F  S CNT=$O(CNT(CNT)) Q:CNT=""  W CNT,":",?25,CNT(CNT),!
"RTN","VBECA3C",31,0)
 Q
"RTN","VBECA3C",32,0)
 ; Direct entry of XML text from keyboard
"RTN","VBECA3C",33,0)
 ; Terminate text entry with a solitary '^'
"RTN","VBECA3C",34,0)
PASTE(OPTION) ;
"RTN","VBECA3C",35,0)
 N X,Y,GBL
"RTN","VBECA3C",36,0)
 S GBL=$NA(^TMP("VBEC_OE_XML",$J))
"RTN","VBECA3C",37,0)
 K @GBL
"RTN","VBECA3C",38,0)
 F X=1:1 D  Q:Y="^"
"RTN","VBECA3C",39,0)
 .W X,"> "
"RTN","VBECA3C",40,0)
 .R Y:$G(DTIME,600),!
"RTN","VBECA3C",41,0)
 .E  S Y="^"
"RTN","VBECA3C",42,0)
 .S:Y'="^" @GBL@(X)=Y
"RTN","VBECA3C",43,0)
 D EN(GBL,.OPTION)
"RTN","VBECA3C",44,0)
 K @GBL
"RTN","VBECA3C",45,0)
 Q
"RTN","VBECA3C",46,0)
 ; Set the event interface entry points
"RTN","VBECA3C",47,0)
SET(CBK) ;
"RTN","VBECA3C",48,0)
 K CBK
"RTN","VBECA3C",49,0)
 ;F X=0:1 S Y=$P($T(SETX+X),";;",2) Q:Y=""  D
"RTN","VBECA3C",50,0)
 ;.S CBK(Y)=$E(Y,1,8)_"^VBECA3C"
"RTN","VBECA3C",51,0)
 S CBK("STARTELEMENT")="STELE^VBECA3C"
"RTN","VBECA3C",52,0)
 S CBK("ENDELEMENT")="ENELE^VBECA3C"
"RTN","VBECA3C",53,0)
 S CBK("CHARACTERS")="CHAR^VBECA3C"
"RTN","VBECA3C",54,0)
 Q
"RTN","VBECA3C",55,0)
 ;
"RTN","VBECA3C",56,0)
STELE(ELE,ATR) ; -- element start event handler
"RTN","VBECA3C",57,0)
 SET VBECELE=ELE
"RTN","VBECA3C",58,0)
 IF ELE="Patient" DO
"RTN","VBECA3C",59,0)
 . SET @VBECRES@("PATIENT")=$G(ATR("dfn"))_"^"_$G(ATR("firstName"))_"^"_$G(ATR("lastName"))_"^"_$G(ATR("ssn"))
"RTN","VBECA3C",60,0)
 . SET @VBECRES@("ABORH")=$G(ATR("abo"))_"^"_$G(ATR("rh"))
"RTN","VBECA3C",61,0)
 . QUIT
"RTN","VBECA3C",62,0)
 IF ELE="TransfusionReaction" DO
"RTN","VBECA3C",63,0)
 . SET VBECTRHC=VBECTRHC+1
"RTN","VBECA3C",64,0)
 . SET @VBECRES@("TRHX",VBECTRHC)=$G(ATR("type"))_"^"_$G(ATR("date"))
"RTN","VBECA3C",65,0)
 . QUIT
"RTN","VBECA3C",66,0)
 IF ELE="TransfusionRequirement" DO
"RTN","VBECA3C",67,0)
 . SET VBECTREQ=VBECTREQ+1
"RTN","VBECA3C",68,0)
 . SET @VBECRES@("TRREQ",VBECTREQ)=$G(ATR("modifier"))
"RTN","VBECA3C",69,0)
 . QUIT
"RTN","VBECA3C",70,0)
 IF ELE="Antibody" DO
"RTN","VBECA3C",71,0)
 . SET VBECABHC=VBECABHC+1
"RTN","VBECA3C",72,0)
 . SET @VBECRES@("ABHIS",VBECABHC)=$G(ATR("name"))
"RTN","VBECA3C",73,0)
 . QUIT
"RTN","VBECA3C",74,0)
 IF ELE="Unit" DO
"RTN","VBECA3C",75,0)
 . IF $G(ATR("status"))="C" DO
"RTN","VBECA3C",76,0)
 . . SET VBECUNC=VBECUNC+1
"RTN","VBECA3C",77,0)
 . . SET @VBECRES@("UNIT","C",VBECUNC)=$G(ATR("id"))_"^"_$G(ATR("product"))_"^"_$G(ATR("location"))_"^"_$G(ATR("expDate"))
"RTN","VBECA3C",78,0)
 . IF $G(ATR("status"))="S" DO
"RTN","VBECA3C",79,0)
 . . SET VBECUNS=VBECUNS+1
"RTN","VBECA3C",80,0)
 . . SET @VBECRES@("UNIT","S",VBECUNS)=$G(ATR("id"))_"^"_$G(ATR("product"))_"^"_$G(ATR("location"))_"^"_$G(ATR("expDate"))
"RTN","VBECA3C",81,0)
 . IF $G(ATR("status"))="A" DO
"RTN","VBECA3C",82,0)
 . . SET VBECUNA=VBECUNA+1
"RTN","VBECA3C",83,0)
 . . SET @VBECRES@("UNIT","A",VBECUNA)=$G(ATR("id"))_"^"_$G(ATR("product"))_"^"_$G(ATR("location"))_"^"_$G(ATR("expDate"))
"RTN","VBECA3C",84,0)
 . IF $G(ATR("status"))="D" DO
"RTN","VBECA3C",85,0)
 . . SET VBECUND=VBECUND+1
"RTN","VBECA3C",86,0)
 . . SET @VBECRES@("UNIT","D",VBECUND)=$G(ATR("id"))_"^"_$G(ATR("product"))_"^"_$G(ATR("location"))_"^"_$G(ATR("expDate"))
"RTN","VBECA3C",87,0)
 . QUIT
"RTN","VBECA3C",88,0)
 IF ELE="Specimen" DO
"RTN","VBECA3C",89,0)
 . SET @VBECRES@("SPECIMEN")=$G(ATR("expDate"))_"^"_$G(ATR("uid"))
"RTN","VBECA3C",90,0)
 . QUIT
"RTN","VBECA3C",91,0)
 IF ELE="Component" DO
"RTN","VBECA3C",92,0)
 . SET VBECOMP=$G(ATR("id"))
"RTN","VBECA3C",93,0)
 . SET VBECMSBC=0
"RTN","VBECA3C",94,0)
 . SET @VBECRES@(VBECOMP,"SPECIMEN")=$G(ATR("specimen"))
"RTN","VBECA3C",95,0)
 . QUIT
"RTN","VBECA3C",96,0)
 IF ELE="LabTest" DO
"RTN","VBECA3C",97,0)
 . SET VBECTSTC=VBECTSTC+1
"RTN","VBECA3C",98,0)
 . SET @VBECRES@(VBECOMP,"TEST",VBECTSTC)=$G(ATR("id"))_"^"_$G(ATR("name"))
"RTN","VBECA3C",99,0)
 . QUIT
"RTN","VBECA3C",100,0)
 IF ELE="Msbos" DO
"RTN","VBECA3C",101,0)
 . SET VBECMSBC=VBECMSBC+1
"RTN","VBECA3C",102,0)
 . SET @VBECRES@(VBECOMP,"MSBOS",VBECMSBC)=$G(ATR("name"))_"^"_$G(ATR("threshold"))
"RTN","VBECA3C",103,0)
 . QUIT
"RTN","VBECA3C",104,0)
 IF ELE="Surgery" DO
"RTN","VBECA3C",105,0)
 . SET VBECSRC=VBECSRC+1
"RTN","VBECA3C",106,0)
 . SET @VBECRES@("SURGERY",VBECSRC)=$G(ATR("name"))_"^"_$G(ATR("noBloodRequiredIndicator"))
"RTN","VBECA3C",107,0)
 QUIT
"RTN","VBECA3C",108,0)
ENELE(ELE) ; -- element end event handler
"RTN","VBECA3C",109,0)
 KILL VBECNT
"RTN","VBECA3C",110,0)
 QUIT
"RTN","VBECA3C",111,0)
 ;
"RTN","VBECA3C",112,0)
CHAR(TEXT) ;
"RTN","VBECA3C",113,0)
 Q
"RTN","VBECA4")
0^10^B15334551^B15334551
"RTN","VBECA4",1,0)
VBECA4 ;HINES OI/REL-APIs for Health Summary ;10/12/00  14:02
"RTN","VBECA4",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA4",3,0)
 ;
"RTN","VBECA4",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA4",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA4",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA4",7,0)
 ; 
"RTN","VBECA4",8,0)
 ; Integration Agreements:
"RTN","VBECA4",9,0)
 ; Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECA4",10,0)
 ; Call to EN^DIQ is supported by IA: 10004
"RTN","VBECA4",11,0)
 ; Call to $$NS^XUAF4 is supported by IA: 2171
"RTN","VBECA4",12,0)
 ; Reference to $$LRDFN^LR7OR1 supported by IA #2503
"RTN","VBECA4",13,0)
 ; 
"RTN","VBECA4",14,0)
 QUIT
"RTN","VBECA4",15,0)
 ;
"RTN","VBECA4",16,0)
 ; ----------------------------------------------------------------
"RTN","VBECA4",17,0)
 ;       Private Method Supports IA 3176
"RTN","VBECA4",18,0)
 ; ----------------------------------------------------------------
"RTN","VBECA4",19,0)
TRAN(DFN,TMPLOC,GMTS1,GMTS2) ; Get Transfusion Data for Health Summary
"RTN","VBECA4",20,0)
 ; Input variables:
"RTN","VBECA4",21,0)
 ;   DFN = Internal number of patient
"RTN","VBECA4",22,0)
 ;   TMPLOC = Node in ^TMP to be used for output data array
"RTN","VBECA4",23,0)
 ;   GMTS1 = Inverse end date of search
"RTN","VBECA4",24,0)
 ;   GMTS2 = Inverse start date of search
"RTN","VBECA4",25,0)
 ;
"RTN","VBECA4",26,0)
 ; Output is data array:
"RTN","VBECA4",27,0)
 ;   ^TMP(TMPLOC,$J,n)
"RTN","VBECA4",28,0)
 N LRDFN,IDT,CNTR,TR,PN,PRODUCT,UNITS,TDT,ITDT,ARR
"RTN","VBECA4",29,0)
 Q:$G(TMPLOC)=""
"RTN","VBECA4",30,0)
 K ^TMP(TMPLOC,$J)
"RTN","VBECA4",31,0)
 Q:'$G(DFN)
"RTN","VBECA4",32,0)
 S:'$G(GMTS1) GMTS1=5555555 S:'$G(GMTS2) GMTS2=9999999
"RTN","VBECA4",33,0)
 ;
"RTN","VBECA4",34,0)
 D TRAN^VBECA1B(DFN)
"RTN","VBECA4",35,0)
 S IDT=GMTS1-1 F  S IDT=$O(ARR(IDT)) Q:+IDT'>0!(IDT>GMTS2)  D
"RTN","VBECA4",36,0)
 . S ^TMP(TMPLOC,$J,IDT)=ARR(IDT)
"RTN","VBECA4",37,0)
 . S ^TMP(TMPLOC,$J,$P($P(ARR(IDT),"\",2),";"))=ARR($P($P(ARR(IDT),"\",2),";"))
"RTN","VBECA4",38,0)
 M ^TMP("ZBNT",$J)=^TMP(TMPLOC,$J)
"RTN","VBECA4",39,0)
 Q
"RTN","VBECA4",40,0)
 ;
"RTN","VBECA4",41,0)
 S LRDFN=$$LRDFN^LR7OR1(DFN) Q:'LRDFN
"RTN","VBECA4",42,0)
 S IDT=GMTS1-1 F  S IDT=$O(^LR(LRDFN,1.6,IDT)) Q:+IDT'>0!(IDT>GMTS2)  D
"RTN","VBECA4",43,0)
 . S TR=$G(^LR(LRDFN,1.6,IDT,0)) D SET
"RTN","VBECA4",44,0)
 S IDT=0 F  S IDT=$O(CNTR(IDT)) Q:+IDT'>0  D
"RTN","VBECA4",45,0)
 . S ^TMP(TMPLOC,$J,IDT)=9999999-IDT_U
"RTN","VBECA4",46,0)
 . S PN=0 F  S PN=$O(CNTR(IDT,PN)) Q:PN'>0  D
"RTN","VBECA4",47,0)
 . . S PRODUCT=$G(^LAB(66,+PN,0)),^TMP(TMPLOC,$J,$P(PRODUCT,U,2))=$P(PRODUCT,U)
"RTN","VBECA4",48,0)
 . . S ^TMP(TMPLOC,$J,IDT)=^TMP(TMPLOC,$J,IDT)_CNTR(IDT,PN)_"\"_$P(PRODUCT,U,2)_";"
"RTN","VBECA4",49,0)
 Q
"RTN","VBECA4",50,0)
 ; ------------------------------------------------------------------
"RTN","VBECA4",51,0)
 ;       Private Method Supports IA 3177
"RTN","VBECA4",52,0)
 ; ------------------------------------------------------------------
"RTN","VBECA4",53,0)
AVUNIT(DFN,TMPLOC,GMTS1,GMTS2,GMTSNDM) ; Get Available Units for Health Summary
"RTN","VBECA4",54,0)
 ; Input variables:
"RTN","VBECA4",55,0)
 ;   DFN = Internal number of patient
"RTN","VBECA4",56,0)
 ;   TMPLOC = Node in ^TMP to be used for output data array
"RTN","VBECA4",57,0)
 ;   GMTS1 = Inverse end date of search
"RTN","VBECA4",58,0)
 ;   GMTS2 = Inverse start date of search
"RTN","VBECA4",59,0)
 ;   GMTSNDM = Maximum number to be extracted
"RTN","VBECA4",60,0)
 ;
"RTN","VBECA4",61,0)
 ; Output is data array:
"RTN","VBECA4",62,0)
 ;   ^TMP(TMPLOC,$J,n)
"RTN","VBECA4",63,0)
 N LRDFN,IDT,UN,CNT,ABO,ADT,COMP,DTYP,EDT,EFLG,GMI,RH,UDIV,UID,ULOC,VOL,ARR
"RTN","VBECA4",64,0)
 Q:$G(TMPLOC)=""
"RTN","VBECA4",65,0)
 K ^TMP(TMPLOC,$J)
"RTN","VBECA4",66,0)
 Q:'$G(DFN)
"RTN","VBECA4",67,0)
 S:'$G(GMTS1) GMTS1=5555555 S:'$G(GMTS2) GMTS2=9999999 S:'$G(GMTSNDM) GMTSNDM=999
"RTN","VBECA4",68,0)
 ; VBECS Implementation
"RTN","VBECA4",69,0)
 D AVUNIT^VBECA1B("AVUNIT",DFN)
"RTN","VBECA4",70,0)
 Q:'$D(^TMP("AVUNIT",$J))
"RTN","VBECA4",71,0)
 S IDT=GMTS1-1+.0001 F  S IDT=$O(^TMP("AVUNIT",$J,IDT)) Q:+IDT'>0!(IDT>GMTS2)  D
"RTN","VBECA4",72,0)
 . S ^TMP(TMPLOC,$J,0)=^TMP("AVUNIT",$J,0)
"RTN","VBECA4",73,0)
 . S ^TMP(TMPLOC,$J,IDT)=^TMP("AVUNIT",$J,IDT)
"RTN","VBECA4",74,0)
 Q
"RTN","VBECA4",75,0)
 ;
"RTN","VBECA4",76,0)
 S LRDFN=$$LRDFN^LR7OR1(DFN) Q:'LRDFN
"RTN","VBECA4",77,0)
 I $L($P(^LR(LRDFN,0),U,5,6)) S ^TMP(TMPLOC,$J,0)=$P(^(0),U,5)_U_$P(^(0),U,6)
"RTN","VBECA4",78,0)
 S UN="",CNT=0 F  S UN=$O(^LRD(65,"AP",LRDFN,UN)) Q:UN=""!(CNT'<GMTSNDM)  D BASET
"RTN","VBECA4",79,0)
 ;K:'CNT ^TMP(TMPLOC,$J)
"RTN","VBECA4",80,0)
 Q
"RTN","VBECA4",81,0)
BASET ; Sets ^TMP with data elements
"RTN","VBECA4",82,0)
 S (EFLG,DTYP,ULOC)=""
"RTN","VBECA4",83,0)
 S UID=$P(^LRD(65,UN,0),U),EDT=$P(^(0),U,6),ABO=$P(^(0),U,7),RH=$P(^(0),U,8),VOL=$P(^(0),U,11),COMP=$P(^LAB(66,$P(^LRD(65,UN,0),U,4),0),U)
"RTN","VBECA4",84,0)
 S ADT=$P(^LRD(65,UN,2,LRDFN,0),U,2)
"RTN","VBECA4",85,0)
 S UDIV=$P(^LRD(65,UN,0),U,16),UDIV=$$NS^XUAF4(UDIV),UDIV=$P(UDIV,"^",1) ;Gets division unit is located at
"RTN","VBECA4",86,0)
 I $D(^LRD(65,UN,8)) D
"RTN","VBECA4",87,0)
 . S DIC=65,DIQ="DON",DIQ(0)="E",DR=8.3,DA=UN D EN^DIQ1
"RTN","VBECA4",88,0)
 . S:$D(DON) DTYP=DON(65,UN,8.3,"E") K DA,DIC,DIQ,DON,DR Q
"RTN","VBECA4",89,0)
 S GMI=$O(^LRD(65,UN,3,0)) I +GMI>0 D
"RTN","VBECA4",90,0)
 . S ULOC=$P($G(^LRD(65,UN,3,GMI,0)),U,4)
"RTN","VBECA4",91,0)
 ; If unit will expire w/in 48 hrs, flag with "*"; w/in 24 hrs, flag with "**"
"RTN","VBECA4",92,0)
 I EDT>DT S EFLG=$S(EDT-DT<2:"*",EDT-DT<1:"**",1:"")
"RTN","VBECA4",93,0)
 S IDT=9999999-ADT
"RTN","VBECA4",94,0)
 I $S(IDT<GMTS1:1,IDT>GMTS2:1,EDT<DT:1,1:0) Q
"RTN","VBECA4",95,0)
 S EDT=$TR($$FMTE^XLFDT(EDT,"5DZ"),"@"," ")
"RTN","VBECA4",96,0)
 F  Q:'$D(^TMP(TMPLOC,$J,IDT))  S IDT=IDT+.0001
"RTN","VBECA4",97,0)
 S ^TMP(TMPLOC,$J,IDT)=EFLG_U_EDT_U_UID_U_COMP_U_VOL_U_ABO_U_RH_U_DTYP_U_UDIV_U_ULOC
"RTN","VBECA4",98,0)
 S CNT=CNT+1
"RTN","VBECA4",99,0)
 Q
"RTN","VBECA4",100,0)
SET ; Sets CNTR w/appropriate data
"RTN","VBECA4",101,0)
 S TDT=9999999-IDT,ITDT=9999999-$P(TDT,".")
"RTN","VBECA4",102,0)
 S UNITS=+$P(TR,U,7) S:UNITS'>0 UNITS=1
"RTN","VBECA4",103,0)
 S CNTR(ITDT,+$P(TR,U,2))=+$G(CNTR(ITDT,+$P(TR,U,2)))+UNITS
"RTN","VBECA4",104,0)
 Q
"RTN","VBECA5A")
0^12^B2902941^B2902941
"RTN","VBECA5A",1,0)
VBECA5A ;DALOI/BNT/RLM - BLOOD PRODUCT LOOKUP FOR SURGERY ;08/23/2001
"RTN","VBECA5A",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA5A",3,0)
 ;
"RTN","VBECA5A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA5A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA5A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA5A",7,0)
 ; 
"RTN","VBECA5A",8,0)
 ; Integration Agreements:
"RTN","VBECA5A",9,0)
 ; Reference to IX^DIC supported by DBIA #10006
"RTN","VBECA5A",10,0)
 ; Reference to LIST^DIC supported by DBIA #2051
"RTN","VBECA5A",11,0)
 ; Reference to ^DIR supported by DBIA #10026
"RTN","VBECA5A",12,0)
 ;
"RTN","VBECA5A",13,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",14,0)
 ;      Private method supports IA #3631
"RTN","VBECA5A",15,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",16,0)
ITRAN ; -- Input Transform lookup
"RTN","VBECA5A",17,0)
 G COMPCL^VBECA5B ;Old code below for reference
"RTN","VBECA5A",18,0)
 N DIC,DA,Y,Z,D,DIE,DO,DICR,Q,DR
"RTN","VBECA5A",19,0)
 S DIC="^LAB(66,",DIC(0)="EQSZ"
"RTN","VBECA5A",20,0)
 S DIC("S")="I $P(^(0),U,15)"
"RTN","VBECA5A",21,0)
 S D="B" D IX^DIC
"RTN","VBECA5A",22,0)
 K DIQUIET,VBDIC
"RTN","VBECA5A",23,0)
 I $D(DTOUT)!($D(DUOUT)) K X Q
"RTN","VBECA5A",24,0)
 S X=$G(Y(0,0)) K:X="" X
"RTN","VBECA5A",25,0)
 I $G(Y)'=-1 S VBECSEL=+Y
"RTN","VBECA5A",26,0)
 Q
"RTN","VBECA5A",27,0)
DIR ;I can't find a reference to this in the surgery code.
"RTN","VBECA5A",28,0)
 N DIC,DA,Y,Z,D,DIE,DO,DICR,DIR
"RTN","VBECA5A",29,0)
 S DIC="^LAB(66,",DIC(0)="EQ",D="B"
"RTN","VBECA5A",30,0)
 D IX^DIC
"RTN","VBECA5A",31,0)
 Q
"RTN","VBECA5A",32,0)
 ;
"RTN","VBECA5A",33,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",34,0)
 ;      Private method supports IA #3631
"RTN","VBECA5A",35,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",36,0)
OUT66 ;
"RTN","VBECA5A",37,0)
 G LIST^VBECA5B ;Old code below for reference
"RTN","VBECA5A",38,0)
 K ERROR,DIERR,VBECO
"RTN","VBECA5A",39,0)
 D LIST^DIC(66,,.01,,,,,,"I $P(^(0),U,15)",,"VBECO","ERROR")
"RTN","VBECA5A",40,0)
 S VBEC=0 F VBECL=1:1 S VBEC=$O(VBECO("DILIST",1,VBEC)) Q:'VBEC  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","VBECA5A",41,0)
  . W !,VBECO("DILIST",1,VBEC)
"RTN","VBECA5A",42,0)
  . I '(VBECL#5) S DIR(0)="E" D ^DIR
"RTN","VBECA5A",43,0)
 K VBEC,VBECL,VBECO
"RTN","VBECA5A",44,0)
 ;
"RTN","VBECA5A",45,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",46,0)
 ;      Private method supports IA #3631
"RTN","VBECA5A",47,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",48,0)
LIST66 ;
"RTN","VBECA5A",49,0)
 G LIST^VBECA5B ;Old code below for reference
"RTN","VBECA5A",50,0)
 N D,DO,DIC,X
"RTN","VBECA5A",51,0)
 K ^TMP("DILIST",$J),VBECO
"RTN","VBECA5A",52,0)
 S X="?",DIC="^LAB(66,",DIC(0)="EQS",D="B"
"RTN","VBECA5A",53,0)
 S DIC("S")="I $P(^(0),U,15)"
"RTN","VBECA5A",54,0)
 D IX^DIC
"RTN","VBECA5A",55,0)
 K DIBTDH
"RTN","VBECA5A",56,0)
 Q
"RTN","VBECA5B")
0^13^B11377348^B11377348
"RTN","VBECA5B",1,0)
VBECA5B ;HIOFO/BNT/RLM - VBECS COMPONENT CLASS LOOKUP FOR SURGERY ;11/24/2004
"RTN","VBECA5B",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA5B",3,0)
 ;
"RTN","VBECA5B",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA5B",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA5B",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA5B",7,0)
 ; 
"RTN","VBECA5B",8,0)
 ; Integration Agreements:
"RTN","VBECA5B",9,0)
 ; Reference DIBA 4622 for VBECS Blood Products
"RTN","VBECA5B",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA5B",11,0)
 ; Reference to CHKNAME^XQ5 supported by IA #????
"RTN","VBECA5B",12,0)
 ; 
"RTN","VBECA5B",13,0)
 QUIT
"RTN","VBECA5B",14,0)
 ;
"RTN","VBECA5B",15,0)
COMPCL  ; -- Retrieves XML from VBECS
"RTN","VBECA5B",16,0)
 Q:'$D(X)
"RTN","VBECA5B",17,0)
 K ^TMP("VBECA5B",$J),^TMP("VBECA5B1",$J) S VBECX=X
"RTN","VBECA5B",18,0)
 D INITV^VBECRPCC("VBECS Blood Products")
"RTN","VBECA5B",19,0)
 S VBECY="^TMP(""VBECA5B"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECA5B1"",$J)"
"RTN","VBECA5B",20,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA5B",21,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA5B",22,0)
 D EN(.ARR,VBECY)
"RTN","VBECA5B",23,0)
SEL ;
"RTN","VBECA5B",24,0)
 K C,DIR S X=VBECX
"RTN","VBECA5B",25,0)
 ;S DIR("A")="",DIR(0)="FA^2:40",DIR("?")="^D LIST^VBECA5B",DIR("??")="^D LIST^VBECA5B" D ^DIR I $D(DIRUT) S X="" Q  ;Uncomment for testing
"RTN","VBECA5B",26,0)
 I $D(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",X)) Q
"RTN","VBECA5B",27,0)
 S A=X F I=1:1 S A=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",A)) Q:$E(A,1,$L(X))'=X  D
"RTN","VBECA5B",28,0)
  . S B="" F  S B=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",A,B)) Q:B=""  S C(I,A)=B
"RTN","VBECA5B",29,0)
 I I=2 S Y=$O(C(1,"")) W $E(Y,$L(X)+1,999) S X=Y Q
"RTN","VBECA5B",30,0)
 S (A,B)="" F  S A=$O(C(A)) Q:'A  W !?5,A,?9 F  S B=$O(C(A,B)) Q:B=""  W B
"RTN","VBECA5B",31,0)
SEL1 K DIR S DIR("A")="CHOOSE 1-"_(I-1)_":",DIR(0)="LA^1:"_(I-1),DIR("?")="^D LIST^VBECA5B",DIR("??")="^D LIST^VBECA5B"
"RTN","VBECA5B",32,0)
 D ^DIR I $D(DIRUT) S X="" Q
"RTN","VBECA5B",33,0)
 S X=$O(C(X,""))
"RTN","VBECA5B",34,0)
EXIT ;
"RTN","VBECA5B",35,0)
 K A,B,DIRUT,EVT,I,OPTION,VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES
"RTN","VBECA5B",36,0)
 K VBECL,VBECSRC,VBECSTAT,VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND
"RTN","VBECA5B",37,0)
 K VBECUNS,VBECY,Y
"RTN","VBECA5B",38,0)
 Q
"RTN","VBECA5B",39,0)
LIST ;Lists components for ? or ??.  Also replaces LIST66 and OUT66
"RTN","VBECA5B",40,0)
 D INITV^VBECRPCC("VBECS Blood Products")
"RTN","VBECA5B",41,0)
 S VBECY="^TMP(""VBECA5BL"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECA5B1L"",$J)"
"RTN","VBECA5B",42,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA5B",43,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA5B",44,0)
 N CBK,CNT
"RTN","VBECA5B",45,0)
 S OPTION="",VBECRES=$NA(^TMP("VBEC_BP_LIST",$J))
"RTN","VBECA5B",46,0)
 K @VBECRES
"RTN","VBECA5B",47,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA5B",48,0)
 K CBK
"RTN","VBECA5B",49,0)
 S CBK("STARTELEMENT")="STELE^VBECA5B"
"RTN","VBECA5B",50,0)
 S CBK("ENDELEMENT")="ENELE^VBECA5B"
"RTN","VBECA5B",51,0)
 S CBK("CHARACTERS")="CHAR^VBECA5B"
"RTN","VBECA5B",52,0)
 D EN^MXMLPRSE(VBECY,.CBK,.OPTION)
"RTN","VBECA5B",53,0)
 S VBECLI=0 F  S VBECLI=$O(^TMP("VBEC_BP_LIST",$J,"BLOOD PRODUCT",VBECLI)) Q:'VBECLI  W !?5,$P(^(VBECLI),"^"),"  -  ",$P(^(VBECLI),"^",2)
"RTN","VBECA5B",54,0)
 Q
"RTN","VBECA5B",55,0)
 ;S A=""  F VBECL=1:1 S A=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A)) Q:'A  D  I '(VBECL#5) S DIR(0)="E" D ^DIR Q:$D(DIRUT)
"RTN","VBECA5B",56,0)
 ; . W !,$P(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A),"^"),"   ",$P(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A),"^",2)
"RTN","VBECA5B",57,0)
 Q
"RTN","VBECA5B",58,0)
EN(ARR,DOC) ;
"RTN","VBECA5B",59,0)
 N CBK,CNT
"RTN","VBECA5B",60,0)
 S OPTION="",VBECRES=$NA(^TMP("VBEC_BP_DATA",$J))
"RTN","VBECA5B",61,0)
 K @VBECRES
"RTN","VBECA5B",62,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA5B",63,0)
 D SET(.CBK)
"RTN","VBECA5B",64,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA5B",65,0)
 M ARR=@VBECRES
"RTN","VBECA5B",66,0)
 Q
"RTN","VBECA5B",67,0)
SET(CBK) ;
"RTN","VBECA5B",68,0)
 K CBK
"RTN","VBECA5B",69,0)
 S CBK("STARTELEMENT")="STELE^VBECA5B"
"RTN","VBECA5B",70,0)
 S CBK("ENDELEMENT")="ENELE^VBECA5B"
"RTN","VBECA5B",71,0)
 S CBK("CHARACTERS")="CHAR^VBECA5B"
"RTN","VBECA5B",72,0)
 Q
"RTN","VBECA5B",73,0)
 ;
"RTN","VBECA5B",74,0)
STELE(ELE,ATR) ; -- element start event handler
"RTN","VBECA5B",75,0)
 I ELE="ComponentClass" D
"RTN","VBECA5B",76,0)
  . S VBECLN=VBECLN+1,@VBECRES@("BLOOD PRODUCT",VBECLN)=$G(ATR("name"))_"^"_$G(ATR("shortName"))
"RTN","VBECA5B",77,0)
  . S @VBECRES@("BLOOD PRODUCT","B",$G(ATR("name")),VBECLN)=""
"RTN","VBECA5B",78,0)
  . S @VBECRES@("BLOOD PRODUCT","B",$G(ATR("shortName")),VBECLN)=""
"RTN","VBECA5B",79,0)
 Q
"RTN","VBECA5B",80,0)
ENELE(ELE) ; -- element end event handler
"RTN","VBECA5B",81,0)
 Q
"RTN","VBECA5B",82,0)
 ;
"RTN","VBECA5B",83,0)
CHAR(TEXT) ;
"RTN","VBECA5B",84,0)
 Q
"RTN","VBECA5B",85,0)
ZEOR ;VBECA5B
"RTN","VBECA6")
0^14^B10870720^B10870720
"RTN","VBECA6",1,0)
VBECA6 ;DALOI/RLM - ORDER LOOKUP BY UID ;05/14/2003
"RTN","VBECA6",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA6",3,0)
 ;
"RTN","VBECA6",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA6",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA6",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA6",7,0)
 ; 
"RTN","VBECA6",8,0)
 ; Integration Agreements:
"RTN","VBECA6",9,0)
 ; Reference to $$FIND^DIC supported by IA #2051
"RTN","VBECA6",10,0)
 ; Reference to $$GET1^DIQ supported by IA #2052
"RTN","VBECA6",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECA6",12,0)
 ; Reference to CHKNAME^XQ5 supported by IA #????
"RTN","VBECA6",13,0)
 ;
"RTN","VBECA6",14,0)
ORDER(RESULTS,VBUID) ;
"RTN","VBECA6",15,0)
 ;Bring in UID and RESULTS parameters.
"RTN","VBECA6",16,0)
 ;UID will be the Universal Identifier for this order.
"RTN","VBECA6",17,0)
 ;RESULTS will be the array where the data will be stored.
"RTN","VBECA6",18,0)
 N TEST,ERROR
"RTN","VBECA6",19,0)
 S VBECCNT=0
"RTN","VBECA6",20,0)
 S RESULTS=$NA(^TMP("VBECS_UIDLOOKUP",$J))
"RTN","VBECA6",21,0)
 K @RESULTS
"RTN","VBECA6",22,0)
 D BEGROOT^VBECRPC("UIDLookup")
"RTN","VBECA6",23,0)
 I VBUID']"" D  Q
"RTN","VBECA6",24,0)
  . D ERROR^VBECRPC("No Specimen UID provided")
"RTN","VBECA6",25,0)
  . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECA6",26,0)
 ;
"RTN","VBECA6",27,0)
 D FIND^DIC(68,,.01,,"BLOOD BANK",,,,,"TEST","ERROR")
"RTN","VBECA6",28,0)
 S VBACC=TEST("DILIST",2,1)
"RTN","VBECA6",29,0)
 I '$D(^LRO(68,"C",VBUID,VBACC)) D  Q
"RTN","VBECA6",30,0)
  . D ERROR^VBECRPC("No Blood Bank accession associated with UID '"_VBUID_"'")
"RTN","VBECA6",31,0)
  . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECA6",32,0)
 ;
"RTN","VBECA6",33,0)
 S VBA=0 F  S VBA=$O(^LRO(68,"C",VBUID,VBACC,VBA)) Q:'VBA  D
"RTN","VBECA6",34,0)
  . S VBB=0 F  S VBB=$O(^LRO(68,"C",VBUID,VBACC,VBA,VBB)) Q:'VBB  D
"RTN","VBECA6",35,0)
  . . Q:$P($G(^LRO(68,VBACC,1,VBA,1,VBB,0)),"^",2)'=2  ;Add parameter for 67 if necessary
"RTN","VBECA6",36,0)
  . . S LRDFN=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,0)),"^"),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","VBECA6",37,0)
  . . S VBNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","VBECA6",38,0)
  . . ;Add DFN and Name
"RTN","VBECA6",39,0)
  . . D ADD^VBECRPC("<PatientName>"_$$CHARCHK^XOBVLIB(VBNAME)_"</PatientName>")
"RTN","VBECA6",40,0)
  . . D ADD^VBECRPC("<VistaPatientId>"_$$CHARCHK^XOBVLIB(DFN)_"</VistaPatientId>")
"RTN","VBECA6",41,0)
  . . ;Add Accession number
"RTN","VBECA6",42,0)
  . . S VBACCN=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.2)),"^")
"RTN","VBECA6",43,0)
  . . D ADD^VBECRPC("<SpecimenAccessionNumber>"_$$CHARCHK^XOBVLIB(VBACCN)_"</SpecimenAccessionNumber>")
"RTN","VBECA6",44,0)
  . . S VBORDN=+$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.1)),"^")
"RTN","VBECA6",45,0)
  . . ;Add Order Number
"RTN","VBECA6",46,0)
  . . D ADD^VBECRPC("<LabOrderNumber>"_$$CHARCHK^XOBVLIB(VBORDN)_"</LabOrderNumber>")
"RTN","VBECA6",47,0)
  . . ;Add UID from file 68
"RTN","VBECA6",48,0)
  . . S VBUID68=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.3)),"^")
"RTN","VBECA6",49,0)
  . . D ADD^VBECRPC("<SpecimenUID>"_$$CHARCHK^XOBVLIB(VBUID68)_"</SpecimenUID>")
"RTN","VBECA6",50,0)
  . . ;Add Tests
"RTN","VBECA6",51,0)
  . . D BEGROOT^VBECRPC("LabTests")
"RTN","VBECA6",52,0)
  . . S VBC=0 F  S VBC=$O(^LRO(68,VBACC,1,VBA,1,VBB,4,VBC)) Q:'VBC  D
"RTN","VBECA6",53,0)
  . . . S VBTEST=+$P($G(^LRO(68,VBACC,1,VBA,1,VBB,4,VBC,0)),"^")
"RTN","VBECA6",54,0)
  . . . S VBTNM=$$GET1^DIQ(60,VBTEST,.01)
"RTN","VBECA6",55,0)
  . . . ;Add Test Name
"RTN","VBECA6",56,0)
  . . . D BEGROOT^VBECRPC("LabTest")
"RTN","VBECA6",57,0)
  . . . D ADD^VBECRPC("<LabTestID>"_$$CHARCHK^XOBVLIB(VBTEST)_"</LabTestID>")
"RTN","VBECA6",58,0)
  . . . D ADD^VBECRPC("<LabTestName>"_$$CHARCHK^XOBVLIB(VBTNM)_"</LabTestName>")
"RTN","VBECA6",59,0)
  . . . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECA6",60,0)
  . . ;Close Tests
"RTN","VBECA6",61,0)
  . . D ENDROOT^VBECRPC("LabTests")
"RTN","VBECA6",62,0)
  D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECA6",63,0)
 K DFN,LRDFN,TEST,VBA,VBACC,VBB,VBC,VBECCNT,VBNAME,VBORDN,VBTEST,VBTNM,VBUID,VBUID68,VBACCN
"RTN","VBECA6",64,0)
 Q
"RTN","VBECA7")
0^15^B32810678^B32810678
"RTN","VBECA7",1,0)
VBECA7 ;DALOI/RLM - Workload API ; 8/18/04 10:40am
"RTN","VBECA7",2,0)
 ;;2.0;VBECS;;Jun 05, 2015;Build 4
"RTN","VBECA7",3,0)
 ;
"RTN","VBECA7",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7",7,0)
 ; 
"RTN","VBECA7",8,0)
 ; Integration Agreements:
"RTN","VBECA7",9,0)
 ;  VBECS workload capture supported by IA 4627
"RTN","VBECA7",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA7",11,0)
 ; Reference to $$FIND1^DIC supported by IA #2051
"RTN","VBECA7",12,0)
 ; Reference to UPDATE^DIE supported by IA #2053
"RTN","VBECA7",13,0)
 ; 
"RTN","VBECA7",14,0)
 QUIT
"RTN","VBECA7",15,0)
 ;
"RTN","VBECA7",16,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",17,0)
 ;      Private Method Supports IA 4767
"RTN","VBECA7",18,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",19,0)
WKLDCAP() ;
"RTN","VBECA7",20,0)
 S NEWWKLD=0
"RTN","VBECA7",21,0)
 D INITV^VBECRPCC("VBECS Workload")
"RTN","VBECA7",22,0)
 I +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA7",23,0)
 S VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA7",24,0)
 S VBECPRMS("PARAMS",1,"VALUE")="P"
"RTN","VBECA7",25,0)
 F I=1:0 D  Q:'NEWWKLD
"RTN","VBECA7",26,0)
 . S NEWWKLD=0
"RTN","VBECA7",27,0)
 . S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA7",28,0)
 . S VBECY=$NA(^TMP("VBECS_XML_RES",$J))
"RTN","VBECA7",29,0)
 . K @VBECY
"RTN","VBECA7",30,0)
 . D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA7",31,0)
 . I $D(@VBECY@("ERROR")) S ARR("ERROR")="1^"_@VBECY@("ERROR") S NEWWKLD=0 Q
"RTN","VBECA7",32,0)
 . D PARSE
"RTN","VBECA7",33,0)
 ;
"RTN","VBECA7",34,0)
EXIT I $D(VBERR) S ARR("ERROR")="1^Errors encountered during parse"
"RTN","VBECA7",35,0)
 K @VBECY,ATR,CBK,DIERR,ELE,FDA,OPTION,TEXT,VBECPRMS
"RTN","VBECA7",36,0)
 K VBECRES,VBECSTAT,VBECY,VBERRA,VBERRB
"RTN","VBECA7",37,0)
 Q '(+$D(ARR)) ;This will return a 1 for a successful transfer and load
"RTN","VBECA7",38,0)
PARSE ;The callbacks defined here will allow the MXMLPRSE API to place
"RTN","VBECA7",39,0)
 ;the data directly into file 6002.01
"RTN","VBECA7",40,0)
 S CBK("STARTELEMENT")="STELE^VBECA7"
"RTN","VBECA7",41,0)
 S CBK("ENDELEMENT")="ENELE^VBECA7"
"RTN","VBECA7",42,0)
 S CBK("CHARACTERS")="CHAR^VBECA7"
"RTN","VBECA7",43,0)
 S OPTION=""
"RTN","VBECA7",44,0)
 D EN^MXMLPRSE(VBECY,.CBK,.OPTION)
"RTN","VBECA7",45,0)
 Q
"RTN","VBECA7",46,0)
STELE(ELE,ATR) ;File the data for each attribute in the FDA array
"RTN","VBECA7",47,0)
 ;for use by the UPDATE^DIE Database Server API.
"RTN","VBECA7",48,0)
 I $D(ATR) D
"RTN","VBECA7",49,0)
  . I ELE["Trans",$D(ATR("id")) S FDA(1,6002.01,"+1,",.01)=ATR("id"),NEWWKLD=1
"RTN","VBECA7",50,0)
  . I $D(ATR("type")) S FDA(1,6002.01,"+1,",1)=ATR("type")
"RTN","VBECA7",51,0)
  . I $D(ATR("division")) S ATR("division")=$TR(ATR("division")," ",""),FDA(1,6002.01,"+1,",2)=$$FIND1^DIC(4,,"MX",ATR("division")) ;RLM 9/22/2010
"RTN","VBECA7",52,0)
  . I $D(ATR("accessionArea")) D
"RTN","VBECA7",53,0)
  . . S FDA(1,6002.01,"+1,",14)=ATR("accessionArea")
"RTN","VBECA7",54,0)
  . I $D(ATR("dateTime")) S FDA(1,6002.01,"+1,",3)=ATR("dateTime")
"RTN","VBECA7",55,0)
  . I $D(ATR("status")) S FDA(1,6002.01,"+1,",5)=ATR("status")
"RTN","VBECA7",56,0)
  . I $D(ATR("code")) D
"RTN","VBECA7",57,0)
  . . ;S FDA(1,6002.01,"+1,",6)=$$WKLDPTR(ATR("code"))
"RTN","VBECA7",58,0)
  . . S FDA(1,6002.01,"+1,",6)=$$WKLDPTR1(ATR("code"),ATR("method")) ;RLM 6-3-10
"RTN","VBECA7",59,0)
  . I $D(ATR("method")) D  ;RLM 6-3-10
"RTN","VBECA7",60,0)
  . . S FDA(1,6002.01,"+1,",7)=$$MTHDPTR(ATR("method")) ;RLM 6-3-10
"RTN","VBECA7",61,0)
  . I $D(ATR("multiplyFactor")) S FDA(1,6002.01,"+1,",8)=ATR("multiplyFactor")
"RTN","VBECA7",62,0)
  . I $D(ATR("dfn")) D
"RTN","VBECA7",63,0)
  . . I $D(^DPT(ATR("dfn"),-9)) S ATR("dfn")=+^DPT(ATR("dfn"),-9)
"RTN","VBECA7",64,0)
  . . I $D(^DPT(ATR("dfn"))) S FDA(1,6002.01,"+1,",9)=ATR("dfn")
"RTN","VBECA7",65,0)
  . I $D(ATR("duz")) D
"RTN","VBECA7",66,0)
  . . I $D(^VA(200,ATR("duz"))) S FDA(1,6002.01,"+1,",10)=ATR("duz")
"RTN","VBECA7",67,0)
  . I $D(ATR("accessionNumber")) S FDA(1,6002.01,"+1,",11)=ATR("accessionNumber")
"RTN","VBECA7",68,0)
  . I $D(ATR("testPerformed")) D
"RTN","VBECA7",69,0)
  . . I $D(^LAB(60,$$STRIP^XLFSTR(ATR("testPerformed")," "))) S FDA(1,6002.01,"+1,",12)=$$STRIP^XLFSTR(ATR("testPerformed")," ")
"RTN","VBECA7",70,0)
  . I ELE["Unit",$D(ATR("id")) S FDA(1,6002.01,"+1,",13)=ATR("id")
"RTN","VBECA7",71,0)
 Q
"RTN","VBECA7",72,0)
ENELE(ELE) ;Ignore the end of each element until the end of
"RTN","VBECA7",73,0)
 ;WorkloadTransactions is found.  File the data at this point.
"RTN","VBECA7",74,0)
 I ELE="WorkloadTransactions" D
"RTN","VBECA7",75,0)
  . Q:'NEWWKLD
"RTN","VBECA7",76,0)
  . D UPDATE^DIE("","FDA(1)",,"VBERR")
"RTN","VBECA7",77,0)
  . ;We'll remove the Writes and handle the errors in a different way
"RTN","VBECA7",78,0)
  . ;prior to release.
"RTN","VBECA7",79,0)
  . I $D(VBERR) D  ;W !,"An error has occurred with ID ",FDA(1,6002.01,"+1,",.01) D
"RTN","VBECA7",80,0)
  . . S (VBERRA,VBERRB,VBERRC)="" F  S VBERRA=$O(VBERR("DIERR",VBERRA)) Q:'VBERRA  F  S VBERRB=$O(VBERR("DIERR",VBERRA,"TEXT",VBERRB)) Q:'VBERRB  S VBERRC=VBERRC+1,XMTEXT(VBERRC)=VBERR("DIERR",VBERRA,"TEXT",VBERRB) K DIERR,VBERR
"RTN","VBECA7",81,0)
  . . S XMDUZ="VBECS Workload Event"
"RTN","VBECA7",82,0)
  . . S XMSUB="VBECS Workload Event"
"RTN","VBECA7",83,0)
  . . S XMTEXT="VBLN("
"RTN","VBECA7",84,0)
  . . S XMY("G.VBECS INTERFACE ADMIN")=""
"RTN","VBECA7",85,0)
  . . D ^XMD
"RTN","VBECA7",86,0)
  . . ;S (VBERRA,VBERRB)="" F  S VBERRA=$O(VBERR("DIERR",VBERRA)) Q:'VBERRA  F  S VBERRB=$O(VBERR("DIERR",VBERRA,"TEXT",VBERRB)) Q:'VBERRB  S ARR("ERROR")="1^Errors encountered during parse" W !,VBERR("DIERR",VBERRA,"TEXT",VBERRB) K DIERR,VBERR
"RTN","VBECA7",87,0)
 Q
"RTN","VBECA7",88,0)
CHAR(TEXT) ;This one isn't necessary, but we'll report an error
"RTN","VBECA7",89,0)
 ;if text is found.
"RTN","VBECA7",90,0)
 S VBERR("DIERR",999999,"TEXT",999999)="TEXT was returned unexpectedly"
"RTN","VBECA7",91,0)
 Q
"RTN","VBECA7",92,0)
WKLDPTR(CODE) ; Gets the pointer to the workload code file 64
"RTN","VBECA7",93,0)
 I $L($P(CODE,".",2))'=5 D
"RTN","VBECA7",94,0)
 . S VBSUFX=$P(CODE,".",2)
"RTN","VBECA7",95,0)
 . F I=1:1 S VBSUFX=VBSUFX_" " Q:$L(VBSUFX)=5
"RTN","VBECA7",96,0)
 . S $P(CODE,".",2)=VBSUFX
"RTN","VBECA7",97,0)
 Q $S($D(^LAM("C",CODE)):$O(^LAM("C",CODE,0)),1:0)
"RTN","VBECA7",98,0)
 Q
"RTN","VBECA7",99,0)
WKLDPTR1(CODE,CODE1) ; Gets the pointer to the workload code file 64 SWITCH TO E X-REF
"RTN","VBECA7",100,0)
 S CODE=$P(CODE,"."),CODE1=$TR(CODE1,".","") S:'CODE1 CODE1="0000"
"RTN","VBECA7",101,0)
 Q $S($D(^LAM("E",CODE_"."_CODE1)):$O(^LAM("E",CODE_"."_CODE1,0)),1:0)
"RTN","VBECA7",102,0)
 Q
"RTN","VBECA7",103,0)
MTHDPTR(CODE) ; Gets the pointer to the workload code file 64
"RTN","VBECA7",104,0)
 S LRSUF=$$FIND1^DIC(64.2,"","O","."_CODE_" ","C","","ERR")
"RTN","VBECA7",105,0)
 Q $S(LRSUF:LRSUF,1:"") ;
"RTN","VBECA7",106,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",107,0)
 ;      Private Method Supports IA 4767
"RTN","VBECA7",108,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",109,0)
UPDTWKLD ; Update VBECS Workload
"RTN","VBECA7",110,0)
 D UPDTWKLD^VBECA7A
"RTN","VBECA7",111,0)
 Q
"RTN","VBECA7",112,0)
TESTSET ;This sets up test data.
"RTN","VBECA7",113,0)
 Q  ;ZL VBECA7 D ZEOR,PARSE ;To test
"RTN","VBECA7",114,0)
 S ^TMP("VBEC_XML_RES",$J,1)="<BloodBank><WorkloadTransactions><Transaction id=""FIRST"" type=""P"" division=""589"" dateTime=""3040614"" status=""S""><Workload code=""Acetone"" method=""ACUTE"" multiplyFactor=""1"" />"
"RTN","VBECA7",115,0)
 S ^TMP("VBEC_XML_RES",$J,2)="<Patient dfn=""262768"" /><VbecsUser duz=""7"" /><Lab accessionNumber=""789"" testPerformed=""ABG"" /><Unit id=""A1"" /></Transaction></WorkloadTransactions>"
"RTN","VBECA7",116,0)
 Q
"RTN","VBECA7",117,0)
 ;
"RTN","VBECA7",118,0)
ZEOR ;VBECA7
"RTN","VBECA7A")
0^16^B37967504^B37967504
"RTN","VBECA7A",1,0)
VBECA7A ;HOIFO/SAE - Workload API ; 9/30/04 5:38pm
"RTN","VBECA7A",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA7A",3,0)
 ;
"RTN","VBECA7A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7A",7,0)
 ; 
"RTN","VBECA7A",8,0)
 ; Integration Agreements:
"RTN","VBECA7A",9,0)
 ;  VBECS workload update supported by IA 4628
"RTN","VBECA7A",10,0)
 ; Reference to LIST^DIC supported by DBIA #2051
"RTN","VBECA7A",11,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA7A",12,0)
 ; 
"RTN","VBECA7A",13,0)
 QUIT
"RTN","VBECA7A",14,0)
 ;
"RTN","VBECA7A",15,0)
UPDTWKLD ;  Update Workload Event Data
"RTN","VBECA7A",16,0)
 ;
"RTN","VBECA7A",17,0)
 ; This routine initializes Vistalink connection values (port,
"RTN","VBECA7A",18,0)
 ; URL, etc.), then builds a local array of selected entries
"RTN","VBECA7A",19,0)
 ; (those that have been successfully processed) from the
"RTN","VBECA7A",20,0)
 ; VistA VBECS WORKLOAD CAPTURE (#6002.01) file.
"RTN","VBECA7A",21,0)
 ; For each entry, listed in the local array, does the following:
"RTN","VBECA7A",22,0)
 ; - sends request, via VistaLink, to .Net VBECS VistALink listener
"RTN","VBECA7A",23,0)
 ; - receives response: VBECS processing status or ErrorText message
"RTN","VBECA7A",24,0)
 ; - If no errors (comm, VistaLink, etc.):
"RTN","VBECA7A",25,0)
 ;   - update VBECS WORKLOAD CAPTURE (#6002.01) file entry:
"RTN","VBECA7A",26,0)
 ;     - delete it (if it had been successfully processed in VBECS) or
"RTN","VBECA7A",27,0)
 ;     - update two fields in this entry (if there had been ErrorText)
"RTN","VBECA7A",28,0)
 ; - If comm, VistaLink, etc., errors:
"RTN","VBECA7A",29,0)
 ;   -  not update VistA
"RTN","VBECA7A",30,0)
 ;   -  save the non-specific error for inclusion in MailMan message.
"RTN","VBECA7A",31,0)
 ; - A MailMan message is transmitted to the G.VBECS INTERFACE ADMIN
"RTN","VBECA7A",32,0)
 ;      mail group:
"RTN","VBECA7A",33,0)
 ;   - identifying success or failure and other transaction info
"RTN","VBECA7A",34,0)
 ;
"RTN","VBECA7A",35,0)
 ; Input  - none
"RTN","VBECA7A",36,0)
 ; Output - no output variables.
"RTN","VBECA7A",37,0)
 ;          However, MailMan msg is sent for fatal errors.
"RTN","VBECA7A",38,0)
 ;
"RTN","VBECA7A",39,0)
 N VBY       ; array of file 6002.01 fields from selected entries
"RTN","VBECA7A",40,0)
 N VBIEN     ; IEN of entry to delete - used in ENELE subroutine
"RTN","VBECA7A",41,0)
 N VBRSLT    ; ^TMP global array of results returned from VBECS
"RTN","VBECA7A",42,0)
 N VBMT      ; array with VistA update status messages for mail text
"RTN","VBECA7A",43,0)
 N VBN       ; loop control variable for For loop
"RTN","VBECA7A",44,0)
 N VBECPRMS  ; local array for REQUEST and results
"RTN","VBECA7A",45,0)
 N VBIENSV   ; IEN to save and use to verify same as VBECS
"RTN","VBECA7A",46,0)
 N VBMTBLT   ; flag that signifies that VBMT has been built
"RTN","VBECA7A",47,0)
 ;
"RTN","VBECA7A",48,0)
 S VBN=0
"RTN","VBECA7A",49,0)
 S VBRSLT=$NA(^TMP("VBECS_XML_RES",$J)) K @VBRSLT
"RTN","VBECA7A",50,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J)) K @VBMT
"RTN","VBECA7A",51,0)
 ;
"RTN","VBECA7A",52,0)
 D INITV^VBECRPCC("VBECS Update Workload Event") ; init VL listener
"RTN","VBECA7A",53,0)
 D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",54,0)
 I $D(@VBMT@(" ERROR")) D  Q
"RTN","VBECA7A",55,0)
 . D BLDERMSG^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",56,0)
 . D SENDMSG(VBMT)
"RTN","VBECA7A",57,0)
 . D CLEANUP
"RTN","VBECA7A",58,0)
 ;
"RTN","VBECA7A",59,0)
 D GETVISTA(.VBY)
"RTN","VBECA7A",60,0)
 ;
"RTN","VBECA7A",61,0)
 ; step thru array. each node contains one entry from file 6002.01
"RTN","VBECA7A",62,0)
 F  S VBN=$O(VBY("DILIST",VBN)) Q:VBN']""  D  Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",63,0)
 . K @VBMT
"RTN","VBECA7A",64,0)
 . D BLDPARMS(.VBY,VBN,.VBECPRMS)
"RTN","VBECA7A",65,0)
 . D BLDRSLTS(.VBECPRMS)
"RTN","VBECA7A",66,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",67,0)
 . Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",68,0)
 . D BLDGLOB(.VBECPRMS,VBRSLT)
"RTN","VBECA7A",69,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",70,0)
 . Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",71,0)
 . D SETVISTA(VBRSLT)
"RTN","VBECA7A",72,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",73,0)
 ;
"RTN","VBECA7A",74,0)
 I $D(@VBMT@(" ERROR")) D  Q
"RTN","VBECA7A",75,0)
 . D BLDERMSG^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",76,0)
 . D SENDMSG(VBMT)
"RTN","VBECA7A",77,0)
 ;
"RTN","VBECA7A",78,0)
 D CLEANUP
"RTN","VBECA7A",79,0)
 Q
"RTN","VBECA7A",80,0)
 ;
"RTN","VBECA7A",81,0)
GETVISTA(VBY) ; get file entries from VBECS WORKLOAD CAPTURE (#6002.01) file
"RTN","VBECA7A",82,0)
 ;
"RTN","VBECA7A",83,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",84,0)
 ;
"RTN","VBECA7A",85,0)
 ;
"RTN","VBECA7A",86,0)
 ; Input
"RTN","VBECA7A",87,0)
 ;   none
"RTN","VBECA7A",88,0)
 ; Output
"RTN","VBECA7A",89,0)
 ;   VBY - array, with each entries' fields packed into each node:
"RTN","VBECA7A",90,0)
 ;           IEN of entry is in first piece of the node value
"RTN","VBECA7A",91,0)
 ;           Fields shown in VBECFLDS variable
"RTN","VBECA7A",92,0)
 ;           List fields in same sequence as SDD Input section 4.1.4
"RTN","VBECA7A",93,0)
 ;
"RTN","VBECA7A",94,0)
 N VBECFLDS  ; fields to retrieve & pack in each VBY("DILIST") node
"RTN","VBECA7A",95,0)
 N VBECSCR   ; screen to filter in entries for two fields:
"RTN","VBECA7A",96,0)
 ;              PROCESSED DATE (#4) field - not null
"RTN","VBECA7A",97,0)
 ;              STATUS         (#5) field - (S)UCCESSFULLY PROCESSED
"RTN","VBECA7A",98,0)
 ;
"RTN","VBECA7A",99,0)
 S X1=DT,X2=-14 D C^%DTC S VBOFF=X
"RTN","VBECA7A",100,0)
 S VBECFLDS="@;.01;5I;4I;20;99"
"RTN","VBECA7A",101,0)
 S VBECSCR("S")="I ($P(^(0),U,4)>VBOFF)&($P(^(0),U,6)=""S"")" ;RLM 6-1-2010
"RTN","VBECA7A",102,0)
 D LIST^DIC(6002.01,"",VBECFLDS,"P","","","","",.VBECSCR,"","VBY")
"RTN","VBECA7A",103,0)
 S VBLOOP=0 F  S VBLOOP=$O(VBY("DILIST",VBLOOP)) Q:'VBLOOP  S $P(VBY("DILIST",VBLOOP,0),"^",4)=$P(VBY("DILIST",VBLOOP,0),"^",4)_$E("0000000.000000",$L($P(VBY("DILIST",VBLOOP,0),"^",4)),13)
"RTN","VBECA7A",104,0)
 ;Added formatting to ensure a six digit time. RLM 4/2/2008
"RTN","VBECA7A",105,0)
 ; VBY("DILIST",4,0)=
"RTN","VBECA7A",106,0)
 ;    8^AC934682-43C2-4B7E-B63B-063C7BABCFAD^^JUL 28, 2004@23:23:49^
"RTN","VBECA7A",107,0)
 ;    some sample error text^pce encounter value
"RTN","VBECA7A",108,0)
 Q
"RTN","VBECA7A",109,0)
 ;
"RTN","VBECA7A",110,0)
BLDPARMS(VBY,VBN,VBECPRMS) ;  build VBECPRMS(PARAMS)
"RTN","VBECA7A",111,0)
 ;
"RTN","VBECA7A",112,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",113,0)
 ;
"RTN","VBECA7A",114,0)
 ; Build VBECPRMS("PARAMS" array for current VistA entry
"RTN","VBECA7A",115,0)
 ;
"RTN","VBECA7A",116,0)
 ; Input
"RTN","VBECA7A",117,0)
 ;   VBY       ; Array: VBECS WORKLOAD CAPTURE (#6002.01) file entries
"RTN","VBECA7A",118,0)
 ;   VBN       ; Node from VBY filtered collection of entries
"RTN","VBECA7A",119,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",120,0)
 ; Output
"RTN","VBECA7A",121,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",122,0)
 ;
"RTN","VBECA7A",123,0)
 N VBW       ; field value
"RTN","VBECA7A",124,0)
 N VBECPI    ; DILIST node piece and VBECPRMS node subscript
"RTN","VBECA7A",125,0)
 N VBNODVAL  ; value of node
"RTN","VBECA7A",126,0)
 N VBX       ; array node
"RTN","VBECA7A",127,0)
 ;
"RTN","VBECA7A",128,0)
 S VBNODVAL=VBY("DILIST",VBN,0)
"RTN","VBECA7A",129,0)
 S VBX="INITIAL IEN:  "_$P(VBNODVAL,U)_U_$P(VBNODVAL,U)
"RTN","VBECA7A",130,0)
 S @VBMT@("!INITIAL IEN")=VBX
"RTN","VBECA7A",131,0)
 S VBNODVAL=$E(VBNODVAL,$F(VBNODVAL,U),$L(VBNODVAL))  ; remove IEN
"RTN","VBECA7A",132,0)
 F VBECPI=1:1:5  D
"RTN","VBECA7A",133,0)
 . S VBW=$P(VBNODVAL,U,VBECPI)
"RTN","VBECA7A",134,0)
 . S VBECPRMS("PARAMS",VBECPI,"VALUE")=VBW
"RTN","VBECA7A",135,0)
 . S VBECPRMS("PARAMS",VBECPI,"TYPE")="STRING"
"RTN","VBECA7A",136,0)
 Q
"RTN","VBECA7A",137,0)
 ;
"RTN","VBECA7A",138,0)
BLDRSLTS(VBECPRMS) ;  put results in VBECPRMS("RESULTS") local array
"RTN","VBECA7A",139,0)
 ;
"RTN","VBECA7A",140,0)
 ; Input
"RTN","VBECA7A",141,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",142,0)
 ; Output
"RTN","VBECA7A",143,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",144,0)
 ;
"RTN","VBECA7A",145,0)
 N VBSTAT  ; temp variable
"RTN","VBECA7A",146,0)
 ;
"RTN","VBECA7A",147,0)
 S VBSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA7A",148,0)
 Q
"RTN","VBECA7A",149,0)
 ;
"RTN","VBECA7A",150,0)
BLDGLOB(VBECPRMS,VBRSLT) ;  put results from VBECS in ^TMP global
"RTN","VBECA7A",151,0)
 ;
"RTN","VBECA7A",152,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",153,0)
 ;
"RTN","VBECA7A",154,0)
 ;
"RTN","VBECA7A",155,0)
 ; Input
"RTN","VBECA7A",156,0)
 ;   VBECPRMS - array
"RTN","VBECA7A",157,0)
 ; Output
"RTN","VBECA7A",158,0)
 ;   VBRSLT   - $NA of ^TMP results global to build
"RTN","VBECA7A",159,0)
 ;
"RTN","VBECA7A",160,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBRSLT)
"RTN","VBECA7A",161,0)
 Q
"RTN","VBECA7A",162,0)
 ;
"RTN","VBECA7A",163,0)
SETVISTA(VBRSLT) ;  Update Vista. MXMLPRSE invokes callback routines
"RTN","VBECA7A",164,0)
 ;
"RTN","VBECA7A",165,0)
 ; Input
"RTN","VBECA7A",166,0)
 ;   VBRSLT - name of results global
"RTN","VBECA7A",167,0)
 ;
"RTN","VBECA7A",168,0)
 N VBCBK  ; callback routines
"RTN","VBECA7A",169,0)
 ;
"RTN","VBECA7A",170,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",171,0)
 ;
"RTN","VBECA7A",172,0)
 ; callbacks allow MXMLPRSE to put data in file 6002.01
"RTN","VBECA7A",173,0)
 S VBCBK("STARTELEMENT")="STELE^VBECA7A1"
"RTN","VBECA7A",174,0)
 S VBCBK("ENDELEMENT")="ENELE^VBECA7A1"
"RTN","VBECA7A",175,0)
 S VBCBK("CHARACTERS")="CHAR^VBECA7A1"
"RTN","VBECA7A",176,0)
 S OPTION=""
"RTN","VBECA7A",177,0)
 D EN^MXMLPRSE(VBRSLT,.VBCBK,.OPTION)
"RTN","VBECA7A",178,0)
 Q
"RTN","VBECA7A",179,0)
 ;
"RTN","VBECA7A",180,0)
SENDMSG(VBMT) ;  Function - send error message to mail group
"RTN","VBECA7A",181,0)
 ;
"RTN","VBECA7A",182,0)
 ; If unsuccessful deletion, send error text
"RTN","VBECA7A",183,0)
 ;
"RTN","VBECA7A",184,0)
 ; Input:
"RTN","VBECA7A",185,0)
 ;   VBMT array with info about transaction
"RTN","VBECA7A",186,0)
 ;
"RTN","VBECA7A",187,0)
 N VBT      ; node in array during $Q
"RTN","VBECA7A",188,0)
 N VBLN     ; message parameters
"RTN","VBECA7A",189,0)
 N VBGROUP  ; name of mail group to which message will be sent
"RTN","VBECA7A",190,0)
 N VBCNT    ; line count of VBLN array
"RTN","VBECA7A",191,0)
 N VBUSERNM ; IEN of user's entry in NEW PERSON file
"RTN","VBECA7A",192,0)
 N VBUSER   ; name of user running this program
"RTN","VBECA7A",193,0)
 N XMDUZ    ; sender
"RTN","VBECA7A",194,0)
 N XMSUB    ; message subject
"RTN","VBECA7A",195,0)
 N XMTEXT   ; message text array
"RTN","VBECA7A",196,0)
 N XMY      ; recipient array
"RTN","VBECA7A",197,0)
 N XMZ      ; returned message number
"RTN","VBECA7A",198,0)
 ;
"RTN","VBECA7A",199,0)
 I '$D(@VBMT@(" ERROR")) Q
"RTN","VBECA7A",200,0)
 ;. S VBX="SUCCESSFUL VBECS-VistA dialog"
"RTN","VBECA7A",201,0)
 ;. S @VBMT@("!SUCCESSFUL VBECS-VISTA DIALOG")=VBX
"RTN","VBECA7A",202,0)
 ;
"RTN","VBECA7A",203,0)
 S VBCNT=1
"RTN","VBECA7A",204,0)
 S VBT=$NA(@VBMT)
"RTN","VBECA7A",205,0)
 ;
"RTN","VBECA7A",206,0)
 ;S VBUSERNM=$$GET1^DIQ(200,DUZ,.01)
"RTN","VBECA7A",207,0)
 ;
"RTN","VBECA7A",208,0)
 S VBLN(VBCNT)="* * * VBECS Workload Event Error Notification * * *"
"RTN","VBECA7A",209,0)
 F  S VBT=$Q(@VBT) Q:VBT=""  Q:$NA(@VBT)'[$J  D
"RTN","VBECA7A",210,0)
 . S VBCNT=VBCNT+1
"RTN","VBECA7A",211,0)
 . S:VBT["DILIST" VBLN(VBCNT)=$G(@VBT)
"RTN","VBECA7A",212,0)
 . S:VBT'["DILIST" VBLN(VBCNT)=$P($G(@VBT),U)
"RTN","VBECA7A",213,0)
 . S VBLN(VBCNT)=$TR(VBLN(VBCNT),"""","'")
"RTN","VBECA7A",214,0)
 ;
"RTN","VBECA7A",215,0)
 S XMDUZ="VBECS Workload Event"
"RTN","VBECA7A",216,0)
 S XMSUB="VBECS Workload Event"
"RTN","VBECA7A",217,0)
 S XMTEXT="VBLN("
"RTN","VBECA7A",218,0)
 ; reactivate the following ling after testing:
"RTN","VBECA7A",219,0)
 S XMY("G.VBECS INTERFACE ADMIN")=""
"RTN","VBECA7A",220,0)
 ;S XMY(VBUSERNM)=""
"RTN","VBECA7A",221,0)
 D ^XMD
"RTN","VBECA7A",222,0)
 Q
"RTN","VBECA7A",223,0)
 ;
"RTN","VBECA7A",224,0)
CLEANUP K ATR,CBK,DIERR,ELE,VBFDA,OPTION,TEXT,VBECPRMS,@VBRSLT,@VBMT
"RTN","VBECA7A",225,0)
 Q
"RTN","VBECA7A1")
0^17^B71661689^B71661689
"RTN","VBECA7A1",1,0)
VBECA7A1 ;HOIFO/SAE - Workload API ; 9/30/04 5:49pm
"RTN","VBECA7A1",2,0)
 ;;2.0;VBECS;;Jun 05, 2015;Build 4
"RTN","VBECA7A1",3,0)
 ;
"RTN","VBECA7A1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7A1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7A1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7A1",7,0)
 ; 
"RTN","VBECA7A1",8,0)
 ; Integration Agreements:
"RTN","VBECA7A1",9,0)
 ; 
"RTN","VBECA7A1",10,0)
 QUIT
"RTN","VBECA7A1",11,0)
 ;
"RTN","VBECA7A1",12,0)
CHKERROR(VBECPRMS,VBRSLT,VBMT) ; check for error in results
"RTN","VBECA7A1",13,0)
 ;
"RTN","VBECA7A1",14,0)
 ; Input
"RTN","VBECA7A1",15,0)
 ;   VBECPRMS - array
"RTN","VBECA7A1",16,0)
 ;   VBRSLT   - name of ^TMP results global
"RTN","VBECA7A1",17,0)
 ;   VBMT     - name of message text global
"RTN","VBECA7A1",18,0)
 ; Output
"RTN","VBECA7A1",19,0)
 ;   VBMT     - message text global to build onto
"RTN","VBECA7A1",20,0)
 ;
"RTN","VBECA7A1",21,0)
 Q  ;RLM 07 08 10 Don't record errors.
"RTN","VBECA7A1",22,0)
 Q:$D(@VBMT@(" ERROR"))   ; an error has already been identified
"RTN","VBECA7A1",23,0)
 ;
"RTN","VBECA7A1",24,0)
 N VBX     ; temporary variable for holding text
"RTN","VBECA7A1",25,0)
 ;
"RTN","VBECA7A1",26,0)
 ; error where ^TMP results global is malformed where it looks like:
"RTN","VBECA7A1",27,0)
 ; ^TMP("VBECS_XML_RES",541084121,1) = ???<?xml version="1.0" ... etc.
"RTN","VBECA7A1",28,0)
 ; this error cannot be checked in STELE(not called in this situation)
"RTN","VBECA7A1",29,0)
 ;
"RTN","VBECA7A1",30,0)
 I $G(VBECPRMS("ERROR"))'=0 D  Q
"RTN","VBECA7A1",31,0)
 . S VBX=VBECPRMS("ERROR")_" returned by INITV~VBECRPCC"
"RTN","VBECA7A1",32,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",33,0)
 I $D(@VBRSLT@("ERROR")) D  Q
"RTN","VBECA7A1",34,0)
 . S VBX=@VBRSLT@("ERROR")_" from PARSE~VBECRPC1 results global"
"RTN","VBECA7A1",35,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",36,0)
 I $P($G(@VBRSLT@(1)),"<")?1."?" D  Q
"RTN","VBECA7A1",37,0)
 . S VBX="MALFORMED RESULTS GLOBAL from PARSE~VBECRPC1 results global"
"RTN","VBECA7A1",38,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",39,0)
 Q
"RTN","VBECA7A1",40,0)
 ;
"RTN","VBECA7A1",41,0)
BLDERMSG(VBECPRMS,VBRSLT,VBMT) ;  build error message(s) into VBMT global
"RTN","VBECA7A1",42,0)
 ;
"RTN","VBECA7A1",43,0)
 Q  ;RLM 07 08 10 Don't record errors.
"RTN","VBECA7A1",44,0)
 ;
"RTN","VBECA7A1",45,0)
 N VBX       ; temporary variable for holding text
"RTN","VBECA7A1",46,0)
 N VBNM      ; indirect name of request/results array/global
"RTN","VBECA7A1",47,0)
 N VBNM2     ; copy of VBNM for different FOR loop
"RTN","VBECA7A1",48,0)
 N VBORIG    ; copy of VBNM with trailing parenthesis removed
"RTN","VBECA7A1",49,0)
 N VBDATA    ; data value from request/results node
"RTN","VBECA7A1",50,0)
 N VBLBL     ; label value comprised of $NA_VBDATA
"RTN","VBECA7A1",51,0)
 N VBSUB     ; subscript value for array node
"RTN","VBECA7A1",52,0)
 N VBOUT     ; full concatenated value of node to display
"RTN","VBECA7A1",53,0)
 N VBLCV     ; loop control variable for FOR loop
"RTN","VBECA7A1",54,0)
 N VBDONE    ; flag to signify 'done' with loop
"RTN","VBECA7A1",55,0)
 N VBBLANK   ; blank line of blank spaces
"RTN","VBECA7A1",56,0)
 N VBMAXDAT  ; maximum allowable length of array node data value
"RTN","VBECA7A1",57,0)
 N VBMAXLBL  ; maximum discovered length of array node label value
"RTN","VBECA7A1",58,0)
 N VBSPACES  ; calulated gap to format display to show data at column
"RTN","VBECA7A1",59,0)
 ;
"RTN","VBECA7A1",60,0)
 S VBX="Following are the request and results array(s)"
"RTN","VBECA7A1",61,0)
 I $D(@VBMT@("!INITIAL IEN"))#2=1 D
"RTN","VBECA7A1",62,0)
 . S VBX=VBX_" for IEN # "_$P(@VBMT@("!INITIAL IEN"),U,2)
"RTN","VBECA7A1",63,0)
 . S @VBMT@("#FOLLOWS MSG")=VBX
"RTN","VBECA7A1",64,0)
 S VBBLANK="                                                         "
"RTN","VBECA7A1",65,0)
 ;
"RTN","VBECA7A1",66,0)
 F VBNM="VBECPRMS",$NA(@VBRSLT) D
"RTN","VBECA7A1",67,0)
 . S VBNM2=VBNM,VBORIG=$P(VBNM,")")
"RTN","VBECA7A1",68,0)
 . S VBMAXLBL=1
"RTN","VBECA7A1",69,0)
 . F  S VBNM2=$Q(@VBNM2) Q:VBNM2=""  Q:$NA(@VBNM2)'[VBORIG  D
"RTN","VBECA7A1",70,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM2),"(",2)
"RTN","VBECA7A1",71,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM2),")")
"RTN","VBECA7A1",72,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECA7A1",73,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7A1",74,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECA7A1",75,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7A1",76,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7A1",77,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7A1",78,0)
 . . S VBMAXLBL=$S($L(VBLBL)>VBMAXLBL:$L(VBLBL),1:VBMAXLBL)
"RTN","VBECA7A1",79,0)
 . S VBMAXLBL=$S(VBMAXLBL>30:30,1:VBMAXLBL+3)
"RTN","VBECA7A1",80,0)
 . S VBMAXDAT=80-VBMAXLBL-2
"RTN","VBECA7A1",81,0)
 . S VBORIG=$P(VBNM,")")
"RTN","VBECA7A1",82,0)
 . F  S VBNM=$Q(@VBNM) Q:VBNM=""  Q:$NA(@VBNM)'[VBORIG  D
"RTN","VBECA7A1",83,0)
 . . S VBLCV=0
"RTN","VBECA7A1",84,0)
 . . S VBSUB=$NA(@VBNM),VBSUB=$TR(VBSUB,"""","")
"RTN","VBECA7A1",85,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM),"(",2)
"RTN","VBECA7A1",86,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM),")")
"RTN","VBECA7A1",87,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECA7A1",88,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7A1",89,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECA7A1",90,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7A1",91,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7A1",92,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7A1",93,0)
 . . S VBSPACES="",$P(VBSPACES," ",VBMAXLBL-$L(VBLBL))=""
"RTN","VBECA7A1",94,0)
 . . S VBSPACES=VBSPACES
"RTN","VBECA7A1",95,0)
 . . S VBDATA=$G(@VBNM)
"RTN","VBECA7A1",96,0)
 . . K VBDONE
"RTN","VBECA7A1",97,0)
 . . F VBLCV=0:1:25 D  Q:$D(VBDONE)
"RTN","VBECA7A1",98,0)
 . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7A1",99,0)
 . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",100,0)
 . . . S VBDATA(VBLCV)="  "_$E(VBDATA,1,VBMAXDAT)
"RTN","VBECA7A1",101,0)
 . . . S VBDATA=$E(VBDATA,VBMAXDAT+1,$L(VBDATA))
"RTN","VBECA7A1",102,0)
 . . . S:$L(VBDATA)'>0 VBDONE=1
"RTN","VBECA7A1",103,0)
 . . . I VBLCV<1 D  Q
"RTN","VBECA7A1",104,0)
 . . . . I $L(VBLBL)'>VBMAXLBL D  Q
"RTN","VBECA7A1",105,0)
 . . . . . S $P(VBSPACES," ",$L(VBLBL)-VBMAXLBL)=""
"RTN","VBECA7A1",106,0)
 . . . . . S VBLBL=VBLBL_VBSPACES
"RTN","VBECA7A1",107,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",108,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",109,0)
 . . . . I $L(VBLBL)>VBMAXLBL D
"RTN","VBECA7A1",110,0)
 . . . . . S @VBMT@(VBSUB)=VBLBL
"RTN","VBECA7A1",111,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",112,0)
 . . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7A1",113,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",114,0)
 . . . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7A1",115,0)
 . . . . . S VBLCV=VBLCV+1
"RTN","VBECA7A1",116,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",117,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",118,0)
 . . . I VBLCV>0 D
"RTN","VBECA7A1",119,0)
 . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7A1",120,0)
 . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",121,0)
 . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",122,0)
 K VBDATA
"RTN","VBECA7A1",123,0)
 Q
"RTN","VBECA7A1",124,0)
 ;
"RTN","VBECA7A1",125,0)
STELE(ELE,ATR) ; Find attribute value
"RTN","VBECA7A1",126,0)
 ;
"RTN","VBECA7A1",127,0)
 ; Input
"RTN","VBECA7A1",128,0)
 ;   ELE - Element,         as defined in Document Type Descriptor
"RTN","VBECA7A1",129,0)
 ;   ATR - Attribute array, as defined in Document Type Descriptor
"RTN","VBECA7A1",130,0)
 ; Output
"RTN","VBECA7A1",131,0)
 ;   VBIEN    - Derived IEN of VBECS WORKLOAD CAPTURE (#6002.01) file
"RTN","VBECA7A1",132,0)
 ;   VBID     - TRANSACTION ID
"RTN","VBECA7A1",133,0)
 ;   VBIENERR - Error message from failure to $$FIND entry in file
"RTN","VBECA7A1",134,0)
 ;   VBMT     - Result array for mail text to be sent to mail group
"RTN","VBECA7A1",135,0)
 ;
"RTN","VBECA7A1",136,0)
 N VBIENI   ; initial IEN of this entry
"RTN","VBECA7A1",137,0)
 K VBIENERR
"RTN","VBECA7A1",138,0)
 N VBX      ; temporary variable for various uses
"RTN","VBECA7A1",139,0)
 N VBBEG    ; beginning character of text value in XML string
"RTN","VBECA7A1",140,0)
 N VBEND    ; ending character of text value in XML string
"RTN","VBECA7A1",141,0)
 N VBERMSG  ; error text message
"RTN","VBECA7A1",142,0)
 ;
"RTN","VBECA7A1",143,0)
 Q:$D(@VBMT@(" ERROR"))   ; an error has already been identified
"RTN","VBECA7A1",144,0)
 Q:$D(@VBRSLT@("ERROR"))  ; standard ^TMP "ERROR" - caught by CHKERROR
"RTN","VBECA7A1",145,0)
 ;
"RTN","VBECA7A1",146,0)
 I $L(ELE)'>0 D  Q
"RTN","VBECA7A1",147,0)
 . S VBX="ERROR: No ELEMENT received from parsing routine"
"RTN","VBECA7A1",148,0)
 . S @VBMT@(" ERROR")="ERROR:                "_VBX
"RTN","VBECA7A1",149,0)
 ;
"RTN","VBECA7A1",150,0)
 I ELE="WorkloadEvent" D
"RTN","VBECA7A1",151,0)
 . I '$D(ATR("successfullyUpdated")) D
"RTN","VBECA7A1",152,0)
 . . I $D(ATR("id")) D
"RTN","VBECA7A1",153,0)
 . . . S VBX=ATR("id")_U_ATR("id")
"RTN","VBECA7A1",154,0)
 . . . S @VBMT@("!TRANSACTION ID")="TRANSACTION ID:  "_VBX
"RTN","VBECA7A1",155,0)
 . . . S VBIEN=$$FIND1^DIC(6002.01,"","QX",ATR("id"),"","","VBIENERR")
"RTN","VBECA7A1",156,0)
 . . . I VBIEN?1.N,VBIEN>0 D
"RTN","VBECA7A1",157,0)
 . . . . S VBX=VBIEN_U_VBIEN
"RTN","VBECA7A1",158,0)
 . . . . S @VBMT@("!DERIVED IEN")="DERIVED IEN:  "_VBX
"RTN","VBECA7A1",159,0)
 . . . . S VBX="Successful FIND of VistA entry using VBECS txn ID"
"RTN","VBECA7A1",160,0)
 . . . . S @VBMT@("!SUCCESSFUL FIND")="SUCCESSFUL FIND:  "_VBX
"RTN","VBECA7A1",161,0)
 . . . I VBIEN=0!(VBIEN'?1.N.E)!$D(VBIENERR) D  Q
"RTN","VBECA7A1",162,0)
 . . . . S VBX="No VistA entry for Txn id "_ATR("id")_" was found"
"RTN","VBECA7A1",163,0)
 . . . . ;S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",164,0)
 . . . I VBIEN=$P($G(@VBMT@("!INITIAL IEN")),U,2) D  Q
"RTN","VBECA7A1",165,0)
 . . . . S VBX="Successful match: initial lookup IEN and derived IEN"
"RTN","VBECA7A1",166,0)
 . . . . S @VBMT@("!IEN MATCH")="IENs match:  "_VBX
"RTN","VBECA7A1",167,0)
 . . . I VBIEN'=$P($G(@VBMT@("!INITIAL IEN")),U,2) D  Q
"RTN","VBECA7A1",168,0)
 . . . . S VBX="Mismatch between initial lookup IEN and derived IEN"
"RTN","VBECA7A1",169,0)
 . . . . ;S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",170,0)
 . . I '$D(ATR("id")) D
"RTN","VBECA7A1",171,0)
 . . . S VBX="No Txn ID accompanied the successfullyUpdated attribute"
"RTN","VBECA7A1",172,0)
 . . . ;S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",173,0)
 Q
"RTN","VBECA7A1",174,0)
 ;
"RTN","VBECA7A1",175,0)
ENELE(ELE) ; Ignore end of each element until end of WorkloadTransactions
"RTN","VBECA7A1",176,0)
 ;
"RTN","VBECA7A1",177,0)
 ; Input:
"RTN","VBECA7A1",178,0)
 ;   ELE  - element name from VBECS
"RTN","VBECA7A1",179,0)
 ;
"RTN","VBECA7A1",180,0)
 N VBMT      ; name of global containing mailman message text
"RTN","VBECA7A1",181,0)
 N VBTEXT    ; text from ErrorText element
"RTN","VBECA7A1",182,0)
 N VBTXNID   ; transaction id from @VBMT@("!TRANSACTION ID")
"RTN","VBECA7A1",183,0)
 N VBIEN     ; IEN of entry to update for failure edits
"RTN","VBECA7A1",184,0)
 N VBFDA     ; array for FILE^DIE
"RTN","VBECA7A1",185,0)
 N VBX       ; temporary variable for various uses
"RTN","VBECA7A1",186,0)
 N VBERRMSG  ; error message from FILE^DIE
"RTN","VBECA7A1",187,0)
 N VBLUERR   ; lookup error from $$FIND
"RTN","VBECA7A1",188,0)
 ;
"RTN","VBECA7A1",189,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J))
"RTN","VBECA7A1",190,0)
 ;
"RTN","VBECA7A1",191,0)
 Q:$D(@VBMT@(" ERROR"))  ; an error has already been identified
"RTN","VBECA7A1",192,0)
 ; Q:ELE'="WorkloadEvent"
"RTN","VBECA7A1",193,0)
 ;
"RTN","VBECA7A1",194,0)
 I '$D(@VBMT@("!VBECS ERRTXT")) D
"RTN","VBECA7A1",195,0)
 . I $D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",196,0)
 . . S DIK="^VBEC(6002.01,"
"RTN","VBECA7A1",197,0)
 . . S DA=$P(@VBMT@("!DERIVED IEN"),U,2)
"RTN","VBECA7A1",198,0)
 . . D ^DIK
"RTN","VBECA7A1",199,0)
 . . S VBX="VistA entry # "_DA_" was deleted."
"RTN","VBECA7A1",200,0)
 . . S @VBMT@("!VISTA UPDATE - ENTRY DELETED")=VBX
"RTN","VBECA7A1",201,0)
 . . K DA,DIC,DIK
"RTN","VBECA7A1",202,0)
 . I '$D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",203,0)
 . . S VBX="No VistA update attempted because no IEN was retrieved"
"RTN","VBECA7A1",204,0)
 . . S @VBMT@("!VISTA UPDATE - UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7A1",205,0)
 ;
"RTN","VBECA7A1",206,0)
 I $D(@VBMT@("!VBECS ERRTXT")) D
"RTN","VBECA7A1",207,0)
 . I $D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",208,0)
 . . S VBIEN=$P(@VBMT@("!DERIVED IEN"),U,2)
"RTN","VBECA7A1",209,0)
 . . Q:VBIEN'?1.N
"RTN","VBECA7A1",210,0)
 . . S VBFDA(6002.01,VBIEN_",",5)="E"
"RTN","VBECA7A1",211,0)
 . . S VBFDA(6002.01,VBIEN_",",20)=$P(@VBMT@("!VBECS ERRTXT"),": ",2)
"RTN","VBECA7A1",212,0)
 . . D FILE^DIE("","VBFDA","VBERRMSG")
"RTN","VBECA7A1",213,0)
 . . I '$D(VBERRMSG) D
"RTN","VBECA7A1",214,0)
 . . . S VBX="Entry # "_VBIEN_" was updated"
"RTN","VBECA7A1",215,0)
 . . . S @VBMT@("!VISTA UPDATE - ENTRY UPDATED")=VBX
"RTN","VBECA7A1",216,0)
 . . I $D(VBERRMSG) D
"RTN","VBECA7A1",217,0)
 . . . S VBX=$G(VBERRMSG("DIERR",1,"TEXT",1))
"RTN","VBECA7A1",218,0)
 . . . ;S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7A1",219,0)
 . . . S @VBMT@("!VISTA UPDATE - UPDATE FAILED")=VBX
"RTN","VBECA7A1",220,0)
 . I '$D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",221,0)
 . . S VBX="No VistA update for ERROR TEXT attempted (no IEN)"
"RTN","VBECA7A1",222,0)
 . . ;S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7A1",223,0)
 . . S @VBMT@("!VISTA UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7A1",224,0)
 Q
"RTN","VBECA7A1",225,0)
 ;
"RTN","VBECA7A1",226,0)
CHAR(TEXT) ;
"RTN","VBECA7A1",227,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A1",228,0)
 ;
"RTN","VBECA7A1",229,0)
 I XML["ErrorText" D
"RTN","VBECA7A1",230,0)
 . S @VBMT@("!VBECS ERRTXT")="VBECS ErrorText message: "_TEXT
"RTN","VBECA7A1",231,0)
 Q
"RTN","VBECA7B")
0^18^B64114607^B64114607
"RTN","VBECA7B",1,0)
VBECA7B ;HOIFO/SAE - Workload API ; 9/10/04 1:46pm
"RTN","VBECA7B",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECA7B",3,0)
 ;
"RTN","VBECA7B",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7B",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7B",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7B",7,0)
 ; 
"RTN","VBECA7B",8,0)
 ; Integration Agreements:
"RTN","VBECA7B",9,0)
 ; 
"RTN","VBECA7B",10,0)
 QUIT
"RTN","VBECA7B",11,0)
 ;
"RTN","VBECA7B",12,0)
CHKERROR(VBECPRMS,VBRSLT,VBFATAL,VBMT) ; check for error in results
"RTN","VBECA7B",13,0)
 W !,"CHKERROR:" ;
"RTN","VBECA7B",14,0)
 ;
"RTN","VBECA7B",15,0)
 ; Input
"RTN","VBECA7B",16,0)
 ;   VBECPRMS - array
"RTN","VBECA7B",17,0)
 ;   VBRSLT   - name of ^TMP results global
"RTN","VBECA7B",18,0)
 ;   VBFATAL  - fatal error flag
"RTN","VBECA7B",19,0)
 ;   VBMT     - name of message text global
"RTN","VBECA7B",20,0)
 ; Output
"RTN","VBECA7B",21,0)
 ;   VBFATAL  - flag to set to true if error has occurred
"RTN","VBECA7B",22,0)
 ;   VBMT     - message text global to build onto
"RTN","VBECA7B",23,0)
 ;
"RTN","VBECA7B",24,0)
 N VBX     ; temporary variable for holding text
"RTN","VBECA7B",25,0)
 ;
"RTN","VBECA7B",26,0)
 ; error where ^TMP results global is malformed where it looks like:
"RTN","VBECA7B",27,0)
 ; ^TMP("VBECS_XML_RES",541084121,1) = ???<?xml version="1.0" ... etc.
"RTN","VBECA7B",28,0)
 ; this error cannot be checked in STELE(not called in this situation)
"RTN","VBECA7B",29,0)
 I '$D(@VBMT@(" ERROR")) D
"RTN","VBECA7B",30,0)
 . I $G(VBECPRMS("ERROR"))'=0 D  Q
"RTN","VBECA7B",31,0)
 . . S VBFATAL=1
"RTN","VBECA7B",32,0)
 . . S VBX=" returned by INITV~VBECRPCC"
"RTN","VBECA7B",33,0)
 . . S @VBMT@(" ERROR")="ERROR: "_VBECPRMS("ERROR")_VBX
"RTN","VBECA7B",34,0)
 . I $P($G(@VBRSLT@(1)),"<")?1."?" D
"RTN","VBECA7B",35,0)
 . . S VBFATAL=1
"RTN","VBECA7B",36,0)
 . . S VBX=" returned by PARSE~VBECRPC1"
"RTN","VBECA7B",37,0)
 . . S @VBMT@(" ERROR")="ERROR: MALFORMED RESULTS GLOBAL"_VBX
"RTN","VBECA7B",38,0)
 . I $D(@VBRSLT@("ERROR")) D  Q
"RTN","VBECA7B",39,0)
 . . S VBFATAL=1
"RTN","VBECA7B",40,0)
 . . S VBX=" returned by EN^MXMLPRSE parser - caught by callback"
"RTN","VBECA7B",41,0)
 . . S @VBMT@(" ERROR")="ERROR: "_@VBRSLT@("ERROR")_VBX
"RTN","VBECA7B",42,0)
 Q
"RTN","VBECA7B",43,0)
 ;
"RTN","VBECA7B",44,0)
BLDERMSG(VBECPRMS,VBRSLT,VBMT) ;
"RTN","VBECA7B",45,0)
 W !,"BLDERMSG:"
"RTN","VBECA7B",46,0)
 ;
"RTN","VBECA7B",47,0)
 N VBX       ; temporary variable for holding text
"RTN","VBECA7B",48,0)
 N VBNM      ; indirect name of request/results array/global
"RTN","VBECA7B",49,0)
 N VBNM2     ; copy of VBNM for different FOR loop
"RTN","VBECA7B",50,0)
 N VBNMORIG  ; copy of VBNM with trailing parenthesis removed
"RTN","VBECA7B",51,0)
 N VBDATA    ; data value from request/results node
"RTN","VBECA7B",52,0)
 N VBLBL     ; label value comprised of $NA_VBDATA
"RTN","VBECA7B",53,0)
 N VBSUB     ; subscript value for array node
"RTN","VBECA7B",54,0)
 N VBOUT     ; full concatenated value of node to display
"RTN","VBECA7B",55,0)
 N VBLCV     ; loop control variable for FOR loop
"RTN","VBECA7B",56,0)
 N VBDONE    ; flag to signify 'done' with loop
"RTN","VBECA7B",57,0)
 N VBBLANK   ; blank line of blank spaces
"RTN","VBECA7B",58,0)
 N VBMAXDAT  ; maximum allowable length of array node data value
"RTN","VBECA7B",59,0)
 N VBMAXLBL  ; maximum discovered length of array node label value
"RTN","VBECA7B",60,0)
 N VBSPACES  ; calulated gap to format display to show data at column
"RTN","VBECA7B",61,0)
 ;
"RTN","VBECA7B",62,0)
 S VBX="Following are the request and results array(s):"
"RTN","VBECA7B",63,0)
 S @VBMT@(" FOLLOWS MSG")=VBX
"RTN","VBECA7B",64,0)
 S VBBLANK="                                                         "
"RTN","VBECA7B",65,0)
 ;
"RTN","VBECA7B",66,0)
 F VBNM="VBECPRMS",$NA(@VBRSLT) D
"RTN","VBECA7B",67,0)
 . S VBNM2=VBNM,VBNMORIG=$P(VBNM,")")
"RTN","VBECA7B",68,0)
 . S VBMAXLBL=1
"RTN","VBECA7B",69,0)
 . F  S VBNM2=$Q(@VBNM2) Q:VBNM2=""  Q:$NA(@VBNM2)'[VBNMORIG  D
"RTN","VBECA7B",70,0)
 . . S:VBNMORIG="VBECPRMS" VBLBL=$P($NA(@VBNM2),"(",2)
"RTN","VBECA7B",71,0)
 . . S:VBNMORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM2),")")
"RTN","VBECA7B",72,0)
 . . I VBNMORIG["VBECPRMS" D
"RTN","VBECA7B",73,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7B",74,0)
 . . I VBNMORIG'["VBECPRMS" D
"RTN","VBECA7B",75,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7B",76,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7B",77,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7B",78,0)
 . . S VBMAXLBL=$S($L(VBLBL)>VBMAXLBL:$L(VBLBL),1:VBMAXLBL)
"RTN","VBECA7B",79,0)
 . S VBMAXLBL=$S(VBMAXLBL>30:30,1:VBMAXLBL+3)
"RTN","VBECA7B",80,0)
 . S VBMAXDAT=80-VBMAXLBL-2
"RTN","VBECA7B",81,0)
 . S VBNMORIG=$P(VBNM,")")
"RTN","VBECA7B",82,0)
 . F  S VBNM=$Q(@VBNM) Q:VBNM=""  Q:$NA(@VBNM)'[VBNMORIG  D
"RTN","VBECA7B",83,0)
 . . S VBLCV=0
"RTN","VBECA7B",84,0)
 . . S VBSUB=$NA(@VBNM),VBSUB=$TR(VBSUB,"""","")
"RTN","VBECA7B",85,0)
 . . S:VBNMORIG="VBECPRMS" VBLBL=$P($NA(@VBNM),"(",2)
"RTN","VBECA7B",86,0)
 . . S:VBNMORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM),")")
"RTN","VBECA7B",87,0)
 . . I VBNMORIG["VBECPRMS" D
"RTN","VBECA7B",88,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7B",89,0)
 . . I VBNMORIG'["VBECPRMS" D
"RTN","VBECA7B",90,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7B",91,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7B",92,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7B",93,0)
 . . S VBSPACES="",$P(VBSPACES," ",VBMAXLBL-$L(VBLBL))=""
"RTN","VBECA7B",94,0)
 . . S VBSPACES=VBSPACES
"RTN","VBECA7B",95,0)
 . . S VBDATA=$G(@VBNM)
"RTN","VBECA7B",96,0)
 . . K VBDONE
"RTN","VBECA7B",97,0)
 . . F VBLCV=0:1:25 D  Q:$D(VBDONE)
"RTN","VBECA7B",98,0)
 . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7B",99,0)
 . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7B",100,0)
 . . . S VBDATA(VBLCV)="  "_$E(VBDATA,1,VBMAXDAT)
"RTN","VBECA7B",101,0)
 . . . S VBDATA=$E(VBDATA,VBMAXDAT+1,$L(VBDATA))
"RTN","VBECA7B",102,0)
 . . . S:$L(VBDATA)'>0 VBDONE=1
"RTN","VBECA7B",103,0)
 . . . ;
"RTN","VBECA7B",104,0)
 . . . I VBLCV<1 D  Q
"RTN","VBECA7B",105,0)
 . . . . I $L(VBLBL)'>VBMAXLBL D  Q
"RTN","VBECA7B",106,0)
 . . . . . S $P(VBSPACES," ",$L(VBLBL)-VBMAXLBL)=""
"RTN","VBECA7B",107,0)
 . . . . . S VBLBL=VBLBL_VBSPACES
"RTN","VBECA7B",108,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7B",109,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7B",110,0)
 . . . . I $L(VBLBL)>VBMAXLBL D
"RTN","VBECA7B",111,0)
 . . . . . S @VBMT@(VBSUB)=VBLBL
"RTN","VBECA7B",112,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7B",113,0)
 . . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7B",114,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7B",115,0)
 . . . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7B",116,0)
 . . . . . S VBLCV=VBLCV+1
"RTN","VBECA7B",117,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7B",118,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7B",119,0)
 . . . ;
"RTN","VBECA7B",120,0)
 . . . I VBLCV>0 D
"RTN","VBECA7B",121,0)
 . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7B",122,0)
 . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7B",123,0)
 . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7B",124,0)
 K VBDATA
"RTN","VBECA7B",125,0)
 Q
"RTN","VBECA7B",126,0)
 ;
"RTN","VBECA7B",127,0)
STELE(ELE,ATR) ; Find attribute value
"RTN","VBECA7B",128,0)
 W !,"STELE:"
"RTN","VBECA7B",129,0)
 ;
"RTN","VBECA7B",130,0)
 ; Input
"RTN","VBECA7B",131,0)
 ;   ELE - Element,         as defined in Document Type Descriptor
"RTN","VBECA7B",132,0)
 ;   ATR - Attribute array, as defined in Document Type Descriptor
"RTN","VBECA7B",133,0)
 ; Output
"RTN","VBECA7B",134,0)
 ;   VBIEN    - IEN of VBECS WORKLOAD CAPTURE (#6002.01) file
"RTN","VBECA7B",135,0)
 ;   VBID     - TRANSACTION ID
"RTN","VBECA7B",136,0)
 ;   VBFATAL  - VBECS error msg.  If undefined, no error occurred
"RTN","VBECA7B",137,0)
 ;   VBIENERR - Error message from failure to $$FIND entry in file
"RTN","VBECA7B",138,0)
 ;   VBMT     - Result array for mail text to be sent to mail group
"RTN","VBECA7B",139,0)
 ;
"RTN","VBECA7B",140,0)
 K VBIENERR
"RTN","VBECA7B",141,0)
 N VBX      ; temporary variable for various uses
"RTN","VBECA7B",142,0)
 N VBBEG    ; beginning character of text value in XML string
"RTN","VBECA7B",143,0)
 N VBEND    ; ending character of text value in XML string
"RTN","VBECA7B",144,0)
 N VBERMSG  ; error text message
"RTN","VBECA7B",145,0)
 ;
"RTN","VBECA7B",146,0)
 Q:$D(@VBMT@(" ERROR"))   ; an error has already been identified
"RTN","VBECA7B",147,0)
 Q:$D(@VBRSLT@("ERROR"))  ; standard ^TMP "ERROR" - caught by CHKERROR
"RTN","VBECA7B",148,0)
 ;
"RTN","VBECA7B",149,0)
 ;
"RTN","VBECA7B",150,0)
 I $L(ELE)'>0 D  Q
"RTN","VBECA7B",151,0)
 . S VBFATAL=1
"RTN","VBECA7B",152,0)
 . S VBX="ERROR: No ELEMENT received from parsing routine"
"RTN","VBECA7B",153,0)
 . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7B",154,0)
 ;
"RTN","VBECA7B",155,0)
 I ELE["WorkloadEvent" D
"RTN","VBECA7B",156,0)
 . I $D(ATR("successfullyUpdated")) D
"RTN","VBECA7B",157,0)
 . . I $D(ATR("id")) D
"RTN","VBECA7B",158,0)
 . . . S VBX="TRANSACTION ID: "_ATR("id")_U_ATR("id")
"RTN","VBECA7B",159,0)
 . . . S @VBMT@("TRANSACTION ID")=VBX
"RTN","VBECA7B",160,0)
 . . . S VBIEN=$$FIND1^DIC(6002.01,"","QX",ATR("id"),"","","VBIENERR")
"RTN","VBECA7B",161,0)
 . . . I VBIEN?1.N,VBIEN>0 D
"RTN","VBECA7B",162,0)
 . . . . S @VBMT@("VISTA IEN")="DERIVED VISTA IEN: "_VBIEN_U_VBIEN
"RTN","VBECA7B",163,0)
 . . I '$D(ATR("id")) D
"RTN","VBECA7B",164,0)
 . . . S VBFATAL=1
"RTN","VBECA7B",165,0)
 . . . S VBX="No Txn ID accompanied the successfullyUpdated attribute"
"RTN","VBECA7B",166,0)
 . . . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7B",167,0)
 . . . S @VBMT@("VISTA UPDATE NOT ATTEMPTED - NO ID")=VBX
"RTN","VBECA7B",168,0)
 ;
"RTN","VBECA7B",169,0)
 Q
"RTN","VBECA7B",170,0)
 ;
"RTN","VBECA7B",171,0)
ENELE(ELE) ; Ignore end of each element until end of WorkloadTransactions
"RTN","VBECA7B",172,0)
 W !,"ENELE:"
"RTN","VBECA7B",173,0)
 ;
"RTN","VBECA7B",174,0)
 ; Input:
"RTN","VBECA7B",175,0)
 ;   ELE  - element name from VBECS
"RTN","VBECA7B",176,0)
 ;
"RTN","VBECA7B",177,0)
 N VBMT      ; name of global containing mailman message text
"RTN","VBECA7B",178,0)
 N VBTEXT    ; text from ErrorText element
"RTN","VBECA7B",179,0)
 N VBTXNID   ; transaction id from @VBMT@("TRANSACTION ID")
"RTN","VBECA7B",180,0)
 N VBIEN     ; IEN of entry to update for failure edits
"RTN","VBECA7B",181,0)
 N VBFDA     ; array for FILE^DIE
"RTN","VBECA7B",182,0)
 N VBX       ; temporary variable for various uses
"RTN","VBECA7B",183,0)
 N VBERRMSG  ; error message from FILE^DIE
"RTN","VBECA7B",184,0)
 N VBLUERR   ; lookup error from $$FIND
"RTN","VBECA7B",185,0)
 ;
"RTN","VBECA7B",186,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J))
"RTN","VBECA7B",187,0)
 ;
"RTN","VBECA7B",188,0)
 Q:$D(@VBMT@(" ERROR"))  ; an error has already been identified
"RTN","VBECA7B",189,0)
 ;
"RTN","VBECA7B",190,0)
 Q:ELE'="WorkloadTransactions"
"RTN","VBECA7B",191,0)
 ;
"RTN","VBECA7B",192,0)
 I $D(@VBMT@("SUCCESS FROM VBECS")) D
"RTN","VBECA7B",193,0)
 . I $D(@VBMT@("VISTA IEN")) D
"RTN","VBECA7B",194,0)
 . . S DIK="^VBEC(6002.01,"
"RTN","VBECA7B",195,0)
 . . S DA=$P(@VBMT@("VISTA IEN"),U,2)
"RTN","VBECA7B",196,0)
 . . D ^DIK K DA,DIC,DIK
"RTN","VBECA7B",197,0)
 . . S VBX="VistA entry # "_DA_" was deleted."
"RTN","VBECA7B",198,0)
 . . S @VBMT@("VISTA UPDATE - ENTRY DELETED")=VBX
"RTN","VBECA7B",199,0)
 . I '$D(@VBMT@("VISTA IEN")) D
"RTN","VBECA7B",200,0)
 . . S VBX="No VistA update attempted because no IEN was retreived"
"RTN","VBECA7B",201,0)
 . . S @VBMT@("VISTA UPDATE - UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7B",202,0)
 ;
"RTN","VBECA7B",203,0)
 I $D(@VBMT@("VBECS ERROR TEXT")) D
"RTN","VBECA7B",204,0)
 . I $D(@VBMT@("VISTA IEN")) D
"RTN","VBECA7B",205,0)
 . . S VBIEN=$P(@VBMT@("VISTA IEN"),U,2)
"RTN","VBECA7B",206,0)
 . . Q:VBIEN'?1.N
"RTN","VBECA7B",207,0)
 . . S VBFDA(6002.01,VBIEN_",",5)="E"
"RTN","VBECA7B",208,0)
 . . S VBFDA(6002.01,VBIEN_",",20)=@VBMT@("VBECS ERROR TEXT")
"RTN","VBECA7B",209,0)
 . . D FILE^DIE("","VBFDA","VBERRMSG")
"RTN","VBECA7B",210,0)
 . . I '$D(VBERRMSG) D
"RTN","VBECA7B",211,0)
 . . . S VBX="Entry # "_VBIEN_" was updated"
"RTN","VBECA7B",212,0)
 . . . S @VBMT@("VISTA UPDATE - ENTRY UPDATED")=VBX
"RTN","VBECA7B",213,0)
 . . I $D(VBERRMSG) D
"RTN","VBECA7B",214,0)
 . . . S VBFATAL=1
"RTN","VBECA7B",215,0)
 . . . S VBX=$G(VBERRMSG("DIERR",1,"TEXT",1))
"RTN","VBECA7B",216,0)
 . . . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7B",217,0)
 . . . S @VBMT@("VISTA UPDATE - UPDATE FAILED")=VBX
"RTN","VBECA7B",218,0)
 . I '$D(@VBMT@("VISTA IEN")) D
"RTN","VBECA7B",219,0)
 . . S VBFATAL=1
"RTN","VBECA7B",220,0)
 . . S VBX="No VistA update attempted (no IEN)"
"RTN","VBECA7B",221,0)
 . . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7B",222,0)
 . . S @VBMT@("VISTA UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7B",223,0)
 Q
"RTN","VBECA7B",224,0)
 ;
"RTN","VBECA7B",225,0)
CHAR(TEXT) ;
"RTN","VBECA7B",226,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7B",227,0)
 ;
"RTN","VBECA7B",228,0)
 I XML["ErrorText" D
"RTN","VBECA7B",229,0)
 . S @VBMT@("VBECS ERROR TEXT")="VBECS 'ErrorText' message: "_TEXT
"RTN","VBECA7B",230,0)
 Q
"RTN","VBECA7B",231,0)
 ;
"RTN","VBECDC00")
0^20^B29006974^B29006974
"RTN","VBECDC00",1,0)
VBECDC00 ;hoifo/gjc-data conversion & pre-implementation;Nov 21, 2002
"RTN","VBECDC00",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDC00",3,0)
 ;
"RTN","VBECDC00",4,0)
 ;Medical Device #:
"RTN","VBECDC00",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDC00",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDC00",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDC00",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDC00",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDC00",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDC00",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDC00",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDC00",13,0)
 ;regulations.
"RTN","VBECDC00",14,0)
 ;
"RTN","VBECDC00",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDC00",16,0)
 ;Call to $$S^%ZTLOAD is supported by IA: 10063
"RTN","VBECDC00",17,0)
 ;Call to $$NOW^XLFDT is supported by IA: 10103
"RTN","VBECDC00",18,0)
 ;Call to ^%ZTLOAD is supported by IA: 10063
"RTN","VBECDC00",19,0)
 ;Call to UPDATE^DIE is supported by IA: 2053
"RTN","VBECDC00",20,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDC00",21,0)
 ;Direct global read of ^DPT(DFN,"LR") supported by IA: 10035
"RTN","VBECDC00",22,0)
 ;
"RTN","VBECDC00",23,0)
START ; entry point queued/not queued.  Update the VBECS DATA INTEGRITY/CONV
"RTN","VBECDC00",24,0)
 ; ERSION STATISTICS (#6001)
"RTN","VBECDC00",25,0)
 ;
"RTN","VBECDC00",26,0)
 ; Note: the variables VBECCNV & VBECIEN are defined in VBECDC01 and
"RTN","VBECDC00",27,0)
 ; are passed into START subroutine via the ZTSAVE array when calling
"RTN","VBECDC00",28,0)
 ; ^%ZTLOAD.
"RTN","VBECDC00",29,0)
 ;
"RTN","VBECDC00",30,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","VBECDC00",31,0)
 ;
"RTN","VBECDC00",32,0)
 ; initialize error trap
"RTN","VBECDC00",33,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDC00",34,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDC00",35,0)
 ;
"RTN","VBECDC00",36,0)
 D:VBECCNV EN^VBECDC19(1) ; lock out options when converting data
"RTN","VBECDC00",37,0)
 ;
"RTN","VBECDC00",38,0)
 S (CNT,DFN,LRSTOP)=0 S:$G(U)'="^" U="^" K ^TMP("VBEC 63",$J)
"RTN","VBECDC00",39,0)
 ;
"RTN","VBECDC00",40,0)
 ;initialize the global that keeps track of ALL data elements for ALL
"RTN","VBECDC00",41,0)
 ;records
"RTN","VBECDC00",42,0)
 ;
"RTN","VBECDC00",43,0)
 K X S $P(X,"0^",28)="",^TMP("VBEC FINIS",$J,0)=X K X
"RTN","VBECDC00",44,0)
 K ^TMP($J,"VBEC_TR_REACT"),^TMP($J,"VBEC_TR_TRD") S VBTRA=0 F  S VBTRA=$O(^LRD(65,VBTRA)) Q:'VBTRA  D
"RTN","VBECDC00",45,0)
  . I $P($G(^LRD(65,VBTRA,6)),"^")]"",$P($G(^LRD(65,VBTRA,6)),"^",5)  D
"RTN","VBECDC00",46,0)
  . . S VBLRDFN=$P(^LRD(65,VBTRA,6),"^"),VBDFN=$P(^LR(VBLRDFN,0),"^",3) Q:$P(^LR(VBLRDFN,0),"^",2)'=2
"RTN","VBECDC00",47,0)
  . . S ^TMP($J,"VBEC_TR_REACT",VBDFN,VBTRA)=""
"RTN","VBECDC00",48,0)
 ;
"RTN","VBECDC00",49,0)
 ;Create an index in the TMP global to make it easier to find Transfusion Reactions by DFN ;RLM 04/20/2005
"RTN","VBECDC00",50,0)
 ;
"RTN","VBECDC00",51,0)
 F  S DFN=$O(^DPT(DFN)) Q:DFN'>0  D  Q:LRSTOP
"RTN","VBECDC00",52,0)
 .;
"RTN","VBECDC00",53,0)
 .I $$S^%ZTLOAD() S (ZTSTOP,LRSTOP)=1 Q  ; has the user stopped the task?
"RTN","VBECDC00",54,0)
 .;
"RTN","VBECDC00",55,0)
 .Q:'$D(^DPT(DFN,"LR"))#2  ; patient w/o Lab Data (#63) file data
"RTN","VBECDC00",56,0)
 .;
"RTN","VBECDC00",57,0)
 .S LRDFN=+$G(^DPT(DFN,"LR"))
"RTN","VBECDC00",58,0)
 .;
"RTN","VBECDC00",59,0)
 .I LRDFN'>0 D  Q
"RTN","VBECDC00",60,0)
 ..K LRARY S LRARY(.01)=2,LRARY(.02)=DFN,LRARY(.09)=$P($T(ERRMSG+1^VBECDC02),";",4)
"RTN","VBECDC00",61,0)
 ..D LOGEXC^VBECDC02(VBECIEN,.LRARY) K LRARY ; log this exception regardless of the task
"RTN","VBECDC00",62,0)
 ..Q
"RTN","VBECDC00",63,0)
 .;
"RTN","VBECDC00",64,0)
 .I $$BRKPNT^VBECDCU1(LRDFN,DFN) D  Q
"RTN","VBECDC00",65,0)
 ..K LRARY S LRARY(.01)=2,LRARY(.02)=DFN,LRARY(.03)=63,LRARY(.04)=LRDFN
"RTN","VBECDC00",66,0)
 ..S LRARY(.09)=$P($T(ERRMSG+2^VBECDC02),";",4)
"RTN","VBECDC00",67,0)
 ..D LOGEXC^VBECDC02(VBECIEN,.LRARY) K LRARY ; log this exception regardless of the task
"RTN","VBECDC00",68,0)
 ..Q
"RTN","VBECDC00",69,0)
 .;
"RTN","VBECDC00",70,0)
 .I '$O(^LR(LRDFN,"BB",0)) Q  ; blood bank data missing for this patient
"RTN","VBECDC00",71,0)
 .;
"RTN","VBECDC00",72,0)
  . I 'LRSTOP,$P(^DPT(DFN,0),"^")["MERGING INTO" S DPTNAME=$P(^DPT(DFN,0),"^") D  Q
"RTN","VBECDC00",73,0)
  . . S VBECMRG=$P($P(DPTNAME,"`",2)," ")
"RTN","VBECDC00",74,0)
  . . K LRARY S LRARY(.01)=2,LRARY(.02)=DFN,LRARY(.03)=2,LRARY(.04)=VBECMRG,LRARY(.09)=$P($T(ERRMSG+3^VBECDC02),";",4)
"RTN","VBECDC00",75,0)
  . . D LOGEXC^VBECDC02(VBECIEN,.LRARY) K LRARY ; log this exception
"RTN","VBECDC00",76,0)
  . . Q
"RTN","VBECDC00",77,0)
 .;
"RTN","VBECDC00",78,0)
 .; if the data conversion process is active save off all LAB DATA file
"RTN","VBECDC00",79,0)
 .; specific data into the appropriate ^TMP("VBEC 63"*,$J) global
"RTN","VBECDC00",80,0)
 .;
"RTN","VBECDC00",81,0)
 .I 'LRSTOP,VBECCNV D PAT^VBECDCX(DFN,LRDFN)
"RTN","VBECDC00",82,0)
 .;
"RTN","VBECDC00",83,0)
 .;
"RTN","VBECDC00",84,0)
 .;save off patient specific data for each record in the Lab Data file
"RTN","VBECDC00",85,0)
 .I VBECCNV D:$D(^TMP("VBEC FINIS",$J,VBECRTOT,0))#2 PATREC(VBECIEN)
"RTN","VBECDC00",86,0)
 .Q
"RTN","VBECDC00",87,0)
 ;
"RTN","VBECDC00",88,0)
 ; kill off unnecessary ^TMP("VBEC 63",$J) global
"RTN","VBECDC00",89,0)
 K ^TMP("VBEC 63",$J)
"RTN","VBECDC00",90,0)
 ;
"RTN","VBECDC00",91,0)
 ; actions if the user teminates process (a check exists within to
"RTN","VBECDC00",92,0)
 ; execute specific code depending on if the anomaly check or the data
"RTN","VBECDC00",93,0)
 ; conversion is executing)
"RTN","VBECDC00",94,0)
 ;
"RTN","VBECDC00",95,0)
 S VBECANOM=+$O(^VBEC(6001,VBECIEN,"ERR",0)) ; do anomalies exist?
"RTN","VBECDC00",96,0)
 ;
"RTN","VBECDC00",97,0)
 ; If the process was stopped by the user via TaskMan (1)
"RTN","VBECDC00",98,0)
 ; If errored out, LRSTOP=-1 (set in ERR^VBECDCU1)
"RTN","VBECDC00",99,0)
 I LRSTOP=1 D STOPPED^VBECDC01
"RTN","VBECDC00",100,0)
 ;
"RTN","VBECDC00",101,0)
 ; If the process has completed without user intervention:
"RTN","VBECDC00",102,0)
 I 'LRSTOP D
"RTN","VBECDC00",103,0)
 .;
"RTN","VBECDC00",104,0)
 .; 1-if data to convert, save off the ^TMP("VBEC"*,$J) namespaced
"RTN","VBECDC00",105,0)
 .;   global into system level files to be extracted by SQL Server
"RTN","VBECDC00",106,0)
 .;   (make sure data tabulation globals are saved off properly)
"RTN","VBECDC00",107,0)
 .I VBECCNV,($$DATA^VBECDCU1($J)) D
"RTN","VBECDC00",108,0)
 ..S VBECNUSB=+$O(^TMP("VBEC FINIS",$J,$C(32)),-1)+1
"RTN","VBECDC00",109,0)
 ..S ^TMP("VBEC FINIS",$J,0)=^TMP("VBEC FINIS",$J,0)_$C(13)
"RTN","VBECDC00",110,0)
 ..S ^TMP("VBEC FINIS",$J,VBECNUSB,0)=^TMP("VBEC FINIS",$J,0)
"RTN","VBECDC00",111,0)
 ..K VBECNUSB,^TMP("VBEC FINIS",$J,0)
"RTN","VBECDC00",112,0)
 ..D SAVE^VBECDCU1 ;(1)
"RTN","VBECDC00",113,0)
 ..;the last record in the VBEC FINIS file will be be comprised of the
"RTN","VBECDC00",114,0)
 ..;totals for all data elements for all records.
"RTN","VBECDC00",115,0)
 ..Q
"RTN","VBECDC00",116,0)
 .;
"RTN","VBECDC00",117,0)
 .; 2-if there is no data to convert, let the user know via an alert.
"RTN","VBECDC00",118,0)
 .I VBECCNV,('$$DATA^VBECDCU1($J)) D
"RTN","VBECDC00",119,0)
 ..D ALERT^VBECDCU(DUZ,VBECCNV,VBECANOM,-1) ;(2)
"RTN","VBECDC00",120,0)
 ..Q
"RTN","VBECDC00",121,0)
 .;
"RTN","VBECDC00",122,0)
 .; 3-if there are anomalies, regardless of whether the anomaly check
"RTN","VBECDC00",123,0)
 .;   or data conversion was run, inform the user via an alert.
"RTN","VBECDC00",124,0)
 .E  D ALERT^VBECDCU(DUZ,VBECCNV,VBECANOM,"") ;(3)
"RTN","VBECDC00",125,0)
 .;
"RTN","VBECDC00",126,0)
 .; 4-file the date/time the data conversion/anomaly check finished
"RTN","VBECDC00",127,0)
 .D UP6001F^VBECDC02(VBECIEN,+$E($$NOW^XLFDT(),1,12)) ;(4)
"RTN","VBECDC00",128,0)
 .Q
"RTN","VBECDC00",129,0)
 ;
"RTN","VBECDC00",130,0)
XIT ; clean up symbol table, exit routine
"RTN","VBECDC00",131,0)
 K CNT,DFN,LRD1,LRDFN,LRSTOP,VBECANOM,VBECIEN,VBECRTOT
"RTN","VBECDC00",132,0)
 Q
"RTN","VBECDC00",133,0)
 ;
"RTN","VBECDC00",134,0)
PATREC(VBECIEN) ;file patient specific Lab Data file data into the DATA
"RTN","VBECDC00",135,0)
 ;CONVERSION STATISTIC multiple (6001.02)
"RTN","VBECDC00",136,0)
 ;Input: VBECIEN=the record number of the data conversion
"RTN","VBECDC00",137,0)
 S LRTMP=$G(^TMP("VBEC FINIS",$J,VBECRTOT,0))
"RTN","VBECDC00",138,0)
 S LRIEN="+"_LRDFN_","_VBECIEN_","
"RTN","VBECDC00",139,0)
 S LROOT(1,6001.02,LRIEN,.01)=$P(LRTMP,U)
"RTN","VBECDC00",140,0)
 F I=2:1:27 S LROOT(1,6001.02,LRIEN,I)=$P(LRTMP,U,I)
"RTN","VBECDC00",141,0)
 D UPDATE^DIE("E","LROOT(1)","")
"RTN","VBECDC00",142,0)
 K I,LRIEN,LROOT,LRTMP
"RTN","VBECDC00",143,0)
 Q
"RTN","VBECDC01")
0^21^B38136752^B38136752
"RTN","VBECDC01",1,0)
VBECDC01 ;hoifo/gjc-data conversion & pre-implementation;Nov 21, 2002
"RTN","VBECDC01",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDC01",3,0)
 ;
"RTN","VBECDC01",4,0)
 ;Medical Device #:
"RTN","VBECDC01",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDC01",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDC01",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDC01",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDC01",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDC01",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDC01",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDC01",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDC01",13,0)
 ;regulations.
"RTN","VBECDC01",14,0)
 ;
"RTN","VBECDC01",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDC01",16,0)
 ;Call to $$GOTLOCAL^XMXAPIG is supported by IA: 3006
"RTN","VBECDC01",17,0)
 ;Call to $$GET1^DIQ is supported by IA: 2056
"RTN","VBECDC01",18,0)
 ;Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECDC01",19,0)
 ;Call to $$NOW^XLFDT is supported by IA: 10103
"RTN","VBECDC01",20,0)
 ;
"RTN","VBECDC01",21,0)
EN(VBECCNV) ; entry point for both the pre-implementation and data
"RTN","VBECDC01",22,0)
 ; conversion.
"RTN","VBECDC01",23,0)
 ; Input: if VBECCNV evaluates to one, then the software
"RTN","VBECDC01",24,0)
 ;        executes data conversion logic.  If VBECCNV evaluates
"RTN","VBECDC01",25,0)
 ;        to zero, then the pre-implementation logic is executed.
"RTN","VBECDC01",26,0)
 ;
"RTN","VBECDC01",27,0)
 I $S($D(DUZ)[0:1,$D(DUZ(0))[0:1,'DUZ:1,DUZ=.5:1,1:0) W !!?3,$C(7),"DUZ & DUZ(0) must be defined to an active user (not POSTMASTER) in order to",!?3,"proceed." Q
"RTN","VBECDC01",28,0)
 ;
"RTN","VBECDC01",29,0)
 ; initialize error trap
"RTN","VBECDC01",30,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDC01",31,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDC01",32,0)
 ;
"RTN","VBECDC01",33,0)
 ;If the data conversion process is selected to run, check the following
"RTN","VBECDC01",34,0)
 ;conditions:
"RTN","VBECDC01",35,0)
 ;
"RTN","VBECDC01",36,0)
 ; a) If none of the VistA data been mapped prior to the data conversion
"RTN","VBECDC01",37,0)
 ;    convey that information to the user and exit the data conversion
"RTN","VBECDC01",38,0)
 ; b) check if mapped data remains consistent with data from the parent
"RTN","VBECDC01",39,0)
 ;    (61.3 & 65.4) files.  If not, do not proceed with the
"RTN","VBECDC01",40,0)
 ;    conversion
"RTN","VBECDC01",41,0)
 ; c) check if the exported mail group has active local members (users
"RTN","VBECDC01",42,0)
 ;    checked for activity within the last seven days)
"RTN","VBECDC01",43,0)
 ; d) is there a process running that has not yet finished? If so, do
"RTN","VBECDC01",44,0)
 ;    not allow another process to start (data conv. or anomaly check)
"RTN","VBECDC01",45,0)
 ;
"RTN","VBECDC01",46,0)
 I VBECCNV,$$NOMAP^VBECDCU2() Q  ;condition a
"RTN","VBECDC01",47,0)
 I VBECCNV,$$EN^VBECDCHX() D  Q  ;condition b
"RTN","VBECDC01",48,0)
 .W !!?3,"Mapping errors were identified; data conversion terminated."
"RTN","VBECDC01",49,0)
 .Q
"RTN","VBECDC01",50,0)
 I '$$GOTLOCAL^XMXAPIG("VBECS DATA CONVERSION",7) D  Q  ;condition c
"RTN","VBECDC01",51,0)
 .W !!?3,"There must be at least one local user assigned to the VBECS"
"RTN","VBECDC01",52,0)
 .W !?3,"DATA CONVERSION Mail Group.  This user must have been actively"
"RTN","VBECDC01",53,0)
 .W !?3,"using VistA MailMan within the last seven (7) days.",$C(7)
"RTN","VBECDC01",54,0)
 .Q
"RTN","VBECDC01",55,0)
 ;
"RTN","VBECDC01",56,0)
 I +$O(^VBEC(6001,0)) S VBECST=$$INPROC()
"RTN","VBECDC01",57,0)
 I $L($G(VBECST)) D  K VBECST Q
"RTN","VBECDC01",58,0)
 .W !!,"The "_$S($P(VBECST,U,2)=1:"data conversion",1:"pre-implementation")_" has been started on: "_$$FMTE^XLFDT($P(VBECST,U,3),"1P")
"RTN","VBECDC01",59,0)
 .W !,"by: "_$$GET1^DIQ(200,+$P(VBECST,U),.01)_". This process must first complete"
"RTN","VBECDC01",60,0)
 .W !,"before the "_$S(VBECCNV=1:"data conversion",1:"pre-implementation")_" can be run."
"RTN","VBECDC01",61,0)
 .Q
"RTN","VBECDC01",62,0)
 I VBECCNV D  I $D(VBECSTP) K VBECSTP Q  ;Only ask for database on conversion
"RTN","VBECDC01",63,0)
  . W !!?3,"You must enter the name of the database "
"RTN","VBECDC01",64,0)
  . W !?3,"where the converted data will be loaded."
"RTN","VBECDC01",65,0)
  . W !!?3,"An invalid database name will cause a failure"
"RTN","VBECDC01",66,0)
  . W !?3,"when loading the data into VBECS."
"RTN","VBECDC01",67,0)
  . F  D  I $D(VBECSTP)!(VBECDBN]"") Q
"RTN","VBECDC01",68,0)
  . . W !!!,?3 R "VBECS Database Name: ",VBECDBN  I VBECDBN=""!(VBECDBN["^") S VBECDBN="^",VBECSTP="" W !!?3,"Invalid database name. Conversion stopped." Q
"RTN","VBECDC01",69,0)
  . . I VBECDBN?.E1C.E W !?4,"The database name cannot contain control characters.",!?4,"Please re-enter it." S VBECDBN=""
"RTN","VBECDC01",70,0)
  . . I VBECDBN?1N.E W !?4,"The database name cannot begin with a number.",!?4,"Please re-enter it." S VBECDBN=""
"RTN","VBECDC01",71,0)
  . . I $TR(VBECDBN,"_","")?.E1P.E W !?4,"The database name cannot contain punctuation except for an underscore.",!?4,"Please re-enter it." S VBECDBN=""
"RTN","VBECDC01",72,0)
 ;
"RTN","VBECDC01",73,0)
 I VBECCNV D  I $D(VBECSTP) K VBECSTP Q  ;Only ask for server on conversion
"RTN","VBECDC01",74,0)
  . W !!?3,"You must enter the name of the server "
"RTN","VBECDC01",75,0)
  . W !?3,"where the converted data will be loaded."
"RTN","VBECDC01",76,0)
  . W !!?3,"An invalid server name will cause a failure"
"RTN","VBECDC01",77,0)
  . W !?3,"when loading the data into VBECS."
"RTN","VBECDC01",78,0)
  . F  D  I $D(VBECSTP)!(VBECDBN1]"") Q
"RTN","VBECDC01",79,0)
  . . W !!!,?3 R "VBECS Server Name: ",VBECDBN1  I VBECDBN1=""!(VBECDBN1["^") S VBECDBN1="^",VBECSTP="" W !!?3,"Invalid server name. Conversion stopped." Q
"RTN","VBECDC01",80,0)
  . . I VBECDBN1?.E1C.E W !?4,"The server name cannot contain control characters.",!?4,"Please re-enter it." S VBECDBN1=""
"RTN","VBECDC01",81,0)
  . . I VBECDBN1?1N.E W !?4,"The server name cannot begin with a number.",!?4,"Please re-enter it." S VBECDBN1=""
"RTN","VBECDC01",82,0)
  . . I $TR(VBECDBN1,"_-","")?.E1P.E W !?4,"The server name cannot contain punctuation except for an underscore (_) or dash (-).",!?4,"Please re-enter it." S VBECDBN1=""
"RTN","VBECDC01",83,0)
 ;
"RTN","VBECDC01",84,0)
 K VBECST W @IOF ;clear screen of past dialogue
"RTN","VBECDC01",85,0)
 S (VBECDESC,ZTDESC)="VBECS "_$S(VBECCNV=1:"data conversion",1:"pre-implementation")
"RTN","VBECDC01",86,0)
 W !?3,"The "_ZTDESC_" process will take some time to complete.",!?3,"It would be best if this process was run in the background.",!
"RTN","VBECDC01",87,0)
 ;
"RTN","VBECDC01",88,0)
 ; file the start time, process type, & user information into file 6001
"RTN","VBECDC01",89,0)
 S VBECIEN=$$UP6001S^VBECDC02(+$E($$NOW^XLFDT(),1,12),VBECCNV,DUZ)
"RTN","VBECDC01",90,0)
 I VBECIEN'>0 D  Q
"RTN","VBECDC01",91,0)
 .W !!?3,"Error filing "_ZTDESC_" statistics.",$C(7) K ZTDESC,VBECIEN
"RTN","VBECDC01",92,0)
 .Q
"RTN","VBECDC01",93,0)
 ; kick off the task, queued or real-time
"RTN","VBECDC01",94,0)
 S ZTRTN="START^VBECDC00",ZTSAVE("DUZ")="",ZTSAVE("VBECCNV")="",ZTSAVE("VBECDBN")="",ZTSAVE("VBECDBN1")=""
"RTN","VBECDC01",95,0)
 S ZTSAVE("VBECIEN")="",ZTIO="" D ^%ZTLOAD
"RTN","VBECDC01",96,0)
 ; display task number for user reference
"RTN","VBECDC01",97,0)
 I +$G(ZTSK) W !!,VBECDESC_" task number: "_ZTSK,!
"RTN","VBECDC01",98,0)
 E  D UP6001P^VBECDC02(VBECIEN) ;user exits prematurely
"RTN","VBECDC01",99,0)
 K VBEC,VBECDESC,VBECIEN,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","VBECDC01",100,0)
 Q
"RTN","VBECDC01",101,0)
 ;
"RTN","VBECDC01",102,0)
STOPPED ; entry point executed when the user stops a task with TaskMan
"RTN","VBECDC01",103,0)
 ; if the user stopped the process:
"RTN","VBECDC01",104,0)
 ; 1-DATA CONVERSION ONLY delete all data in all related ^TMP globals
"RTN","VBECDC01",105,0)
 ; 2-DATA CONVERSION ONLY set options back 'in-order'
"RTN","VBECDC01",106,0)
 ; 3-alert the user to the stoppage
"RTN","VBECDC01",107,0)
 ; 4-delete the record from the VBECS DATA
"RTN","VBECDC01",108,0)
 ; INTEGRITY/CONVERSION STATISTICS (#6001) file.
"RTN","VBECDC01",109,0)
 ;
"RTN","VBECDC01",110,0)
 ; Variables used within this function:
"RTN","VBECDC01",111,0)
 ;  VBECCNV-indicates if the data conversion (1) or data anomalies check
"RTN","VBECDC01",112,0)
 ;          (0) is running
"RTN","VBECDC01",113,0)
 ;      DUZ-the internal entry number of the person resposible for this
"RTN","VBECDC01",114,0)
 ;          task
"RTN","VBECDC01",115,0)
 ;  VBECIEN-is the IEN of the record in the VBECS DATA
"RTN","VBECDC01",116,0)
 ;          INTEGRITY/CONVERSION STATISTICS (#6001) file
"RTN","VBECDC01",117,0)
 ; VBECANOM-flag to indicate if anomalies exist (zero if no anomalies,
"RTN","VBECDC01",118,0)
 ;          some number greater than zero if anomalies exist.)
"RTN","VBECDC01",119,0)
 ;
"RTN","VBECDC01",120,0)
 I VBECCNV D
"RTN","VBECDC01",121,0)
 .D DELTMP($J) ;delete data in temporary globals ^TMP(,$J
"RTN","VBECDC01",122,0)
 .D EN^VBECDC19(0) ;set options back in order, clear write nodes
"RTN","VBECDC01",123,0)
 .Q
"RTN","VBECDC01",124,0)
 ;next line performed for the anomaly check & data conversion
"RTN","VBECDC01",125,0)
 D ALERT^VBECDCU(DUZ,VBECCNV,VBECANOM,"S"),UP6001P^VBECDC02(VBECIEN)
"RTN","VBECDC01",126,0)
 Q
"RTN","VBECDC01",127,0)
 ;
"RTN","VBECDC01",128,0)
INPROC() ;is there a current data conversion or anomaly process on
"RTN","VBECDC01",129,0)
 ;file that has not completed? If so, prevent this current request
"RTN","VBECDC01",130,0)
 ;from starting (collision errors)
"RTN","VBECDC01",131,0)
 N VBECI,VBEC0,VBECSTOP,VBECX
"RTN","VBECDC01",132,0)
 S VBECI=$C(32),VBECSTOP=0,VBECX=""
"RTN","VBECDC01",133,0)
 F  S VBECI=$O(^VBEC(6001,VBECI),-1) Q:'VBECI  D  Q:VBECSTOP
"RTN","VBECDC01",134,0)
 .S VBEC0=$G(^VBEC(6001,VBECI,0))
"RTN","VBECDC01",135,0)
 .I $P(VBEC0,U,3)="" S VBECX=$P(VBEC0,U,4)_U_$P(VBEC0,U,2)_U_$P(VBEC0,U)
"RTN","VBECDC01",136,0)
 .I  S VBECSTOP=1
"RTN","VBECDC01",137,0)
 .Q
"RTN","VBECDC01",138,0)
 Q VBECX
"RTN","VBECDC01",139,0)
 ;
"RTN","VBECDC01",140,0)
DELTMP(DOLLARJ) ;Delete all Blood Bank Data in Temporary Globals
"RTN","VBECDC01",141,0)
 ;
"RTN","VBECDC01",142,0)
 N X S X="VBEC FINI"
"RTN","VBECDC01",143,0)
 F  S VBECX=$O(^TMP(VBECX)) Q:VBECX=""!(VBECX]"VBEC63 zzz")  D
"RTN","VBECDC01",144,0)
 .K ^TMP(VBECX,DOLLARJ)
"RTN","VBECDC01",145,0)
 .Q
"RTN","VBECDC01",146,0)
 Q
"RTN","VBECDC01",147,0)
 ;
"RTN","VBECDC02")
0^22^B4904086^B4904086
"RTN","VBECDC02",1,0)
VBECDC02 ;hoifo/gjc-data conversion & pre-implementation;Nov 21, 2002
"RTN","VBECDC02",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDC02",3,0)
 ;
"RTN","VBECDC02",4,0)
 ;Medical Device #:
"RTN","VBECDC02",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDC02",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDC02",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDC02",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDC02",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDC02",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDC02",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDC02",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDC02",13,0)
 ;regulations.
"RTN","VBECDC02",14,0)
 ;
"RTN","VBECDC02",15,0)
 ;Call to FILE^DIE is supported by IA: 2053
"RTN","VBECDC02",16,0)
 ;Call to UPDATE^DIE is supported by IA: 2053
"RTN","VBECDC02",17,0)
 ;
"RTN","VBECDC02",18,0)
UP6001F(VBECIEN,LRFINI) ; file the date/time the process finished running for
"RTN","VBECDC02",19,0)
 ; a record in the VBECS DATA INTEGRITY/CONVERSION STATISTICS (#6001)
"RTN","VBECDC02",20,0)
 ; file.
"RTN","VBECDC02",21,0)
 ; input: VBECIEN-the IEN of the record being updated
"RTN","VBECDC02",22,0)
 ;        LRFINI-the date/time the process completed
"RTN","VBECDC02",23,0)
 K LRFDA S LRFDA(6001,VBECIEN_",",.03)=LRFINI
"RTN","VBECDC02",24,0)
 D FILE^DIE("","LRFDA","") K LRFDA
"RTN","VBECDC02",25,0)
 Q
"RTN","VBECDC02",26,0)
 ;
"RTN","VBECDC02",27,0)
UP6001P(VBECIEN) ; delete a VBECS DATA INTEGRITY/CONVERSION STATISTICS
"RTN","VBECDC02",28,0)
 ; file (#6001) record
"RTN","VBECDC02",29,0)
 ; input: VBECIEN-the IEN of the record (file: 6001) being deleted
"RTN","VBECDC02",30,0)
 K LRFDA S LRFDA(6001,VBECIEN_",",.01)="@"
"RTN","VBECDC02",31,0)
 D FILE^DIE("","LRFDA","") K LRFDA
"RTN","VBECDC02",32,0)
 Q
"RTN","VBECDC02",33,0)
 ;
"RTN","VBECDC02",34,0)
LOGEXC(VBECIEN,LRARY) ; log the error the error and relevant data
"RTN","VBECDC02",35,0)
 ; Input: VBECIEN-IEN ('D0') of record in file 6001 (top-level)
"RTN","VBECDC02",36,0)
 ;        LRARY-local array subscripted by...
"RTN","VBECDC02",37,0)
 ;        .01-file navigated from
"RTN","VBECDC02",38,0)
 ;        .02-the internal entry number of the file navigated from
"RTN","VBECDC02",39,0)
 ;        .03-file navigated to
"RTN","VBECDC02",40,0)
 ;        .04-the internal entry number of the file navigated from
"RTN","VBECDC02",41,0)
 ;        .05-Lab Data patient identifier (1st of a possible two)
"RTN","VBECDC02",42,0)
 ;        .06-Lab Data patient identifier (2nd of a possible two)
"RTN","VBECDC02",43,0)
 ;        .07-duplicated component (blood product)
"RTN","VBECDC02",44,0)
 ;        .08-duplicated component id (unit id)
"RTN","VBECDC02",45,0)
 ;        .09-error message code (see ERRMSG subroutine)
"RTN","VBECDC02",46,0)
 ;
"RTN","VBECDC02",47,0)
 ; Fields .05-.08 identify the condition where the same patient or
"RTN","VBECDC02",48,0)
 ; different patients have the same component/component id data
"RTN","VBECDC02",49,0)
 ; associated with a transfusion record
"RTN","VBECDC02",50,0)
 ;
"RTN","VBECDC02",51,0)
 K LRD1,LRIEN,LROOT S LRX=0
"RTN","VBECDC02",52,0)
 S LRD1=$O(^VBEC(6001,VBECIEN,"ERR",$C(32)),-1)
"RTN","VBECDC02",53,0)
 S:LRD1="" LRD1=1 ;first instance of anomaly
"RTN","VBECDC02",54,0)
 S LRIEN="+"_LRD1_","_VBECIEN_","
"RTN","VBECDC02",55,0)
 F  S LRX=$O(LRARY(LRX)) Q:'LRX  S LROOT(1,6001.01,LRIEN,LRX)=LRARY(LRX)
"RTN","VBECDC02",56,0)
 D UPDATE^DIE("","LROOT(1)","")
"RTN","VBECDC02",57,0)
 K LRD1,LRIEN,LROOT,LRX
"RTN","VBECDC02",58,0)
 Q
"RTN","VBECDC02",59,0)
 ;
"RTN","VBECDC02",60,0)
UP6001S(LRSTRT,LRPROC,LRWHO) ; Update the VBECS DATA INTEGRITY/CONVERSION
"RTN","VBECDC02",61,0)
 ; STATISTICS (#6001) file.
"RTN","VBECDC02",62,0)
 ;  input: LRSTRT=timestamp of when the process started
"RTN","VBECDC02",63,0)
 ;         LRPROC=identify the process, 1 for data conversion
"RTN","VBECDC02",64,0)
 ;                0 for data validation
"RTN","VBECDC02",65,0)
 ;         LRWHO=user who is responsible for the process
"RTN","VBECDC02",66,0)
 ; output: LRY(1)=ien of the newly created record in file 6001
"RTN","VBECDC02",67,0)
 ;
"RTN","VBECDC02",68,0)
 K LRFDA N LRY
"RTN","VBECDC02",69,0)
 S LRFDA(1,6001,"+1,",.01)=LRSTRT,LRFDA(1,6001,"+1,",.02)=LRPROC,LRFDA(1,6001,"+1,",.04)=LRWHO
"RTN","VBECDC02",70,0)
 D UPDATE^DIE("","LRFDA(1)","LRY") K LRFDA
"RTN","VBECDC02",71,0)
 Q $G(LRY(1))
"RTN","VBECDC02",72,0)
 ;
"RTN","VBECDC02",73,0)
ERRMSG ; standard error messages
"RTN","VBECDC02",74,0)
 ;;1;Laboratory Reference (#63) field, Patient (#2) file data corruption
"RTN","VBECDC02",75,0)
 ;;2;Patient mismatch between files: Patient (#2) & Lab Data (#63)
"RTN","VBECDC02",76,0)
 ;;3;Duplicate Patient Merge indicated in Patient Name
"RTN","VBECDC02",77,0)
 ;;;
"RTN","VBECDC19")
0^23^B52486759^B52486759
"RTN","VBECDC19",1,0)
VBECDC19 ;hoifo/gjc-utilities for VistA Blood Bank options (#19);Nov 21, 2002
"RTN","VBECDC19",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDC19",3,0)
 ;
"RTN","VBECDC19",4,0)
 ;Medical Device #:
"RTN","VBECDC19",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDC19",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDC19",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDC19",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDC19",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDC19",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDC19",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDC19",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDC19",13,0)
 ;regulations.
"RTN","VBECDC19",14,0)
 ;
"RTN","VBECDC19",15,0)
 ;Call to FILE^DIE is supported by IA: 2053
"RTN","VBECDC19",16,0)
 ;Call to $$IENS^DILF is supported by IA: 2054
"RTN","VBECDC19",17,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDC19",18,0)
 ;Call to OUT^XPDMENU is supported by IA: 1157
"RTN","VBECDC19",19,0)
 ;Call to BMES^XPDUTL is supported by IA: 10141
"RTN","VBECDC19",20,0)
 ;Setting the "DI" node in the data dictionary supported by IA: 3805
"RTN","VBECDC19",21,0)
 ;Setting the 'write access' (9) node in the Agglutination Strength File
"RTN","VBECDC19",22,0)
 ; (62.55) data dictionary is supported by IA: 4468
"RTN","VBECDC19",23,0)
 ;Setting the 'write access' (9) node in the Lab Data (63) file data
"RTN","VBECDC19",24,0)
 ; dictionary is supported by IA: 4469
"RTN","VBECDC19",25,0)
 ;
"RTN","VBECDC19",26,0)
EN(VBECFLG) ;
"RTN","VBECDC19",27,0)
 ;input: VBECFLG=1 set options 'out-of-order', else place options
"RTN","VBECDC19",28,0)
 ;       in order.
"RTN","VBECDC19",29,0)
 ;
"RTN","VBECDC19",30,0)
 ; call to OUT^XPDMENU(OPT,TXT) supported by IA: 1157
"RTN","VBECDC19",31,0)
 ;
"RTN","VBECDC19",32,0)
 ; Need to check if this option is independently invoked, or executed
"RTN","VBECDC19",33,0)
 ; during the data conversion process.  If independent, ask the user for
"RTN","VBECDC19",34,0)
 ; his/her real intentions.  VBECECHO is set in the Entry/Exit Action
"RTN","VBECDC19",35,0)
 ; fields in the option file for options: VBEC BB COMPONENTS ENABLE &
"RTN","VBECDC19",36,0)
 ; VBEC BB COMPONENTS DISABLE
"RTN","VBECDC19",37,0)
 ;
"RTN","VBECDC19",38,0)
 I $D(VBECECHO)#2 D
"RTN","VBECDC19",39,0)
 .S X=$S(VBECFLG=1:"dis",1:"en")_"able"
"RTN","VBECDC19",40,0)
 .S DIR(0)="Y",DIR("A",1)=" ",DIR("A",2)="Are you sure you want to "_X_" specific VistA Blood Bank option, files,",DIR("A")="and fields"
"RTN","VBECDC19",41,0)
 .S DIR("B")="No",DIR("?")="Enter 'Yes' to "_X_" selected components, or 'No' to exit without taking action." D ^DIR
"RTN","VBECDC19",42,0)
 .S:$D(DIRUT) VBECYN=0
"RTN","VBECDC19",43,0)
 .S:'$D(DIRUT) VBECYN=+Y ;1 for yes, 0 for no
"RTN","VBECDC19",44,0)
 .K DIR,DIROUT,DIRUT,DTOUT,DUOUT,VBECACTN,X,Y
"RTN","VBECDC19",45,0)
 .Q
"RTN","VBECDC19",46,0)
 I $G(VBECYN)=0 K VBECYN Q
"RTN","VBECDC19",47,0)
 I VBECFLG,$P($G(^VBEC(6009,65.5,0)),"^",3)="Y" W:$D(VBECECHO)#2 !,"Options, files, and fields have already been disabled." Q  ;RLM 10/31/05
"RTN","VBECDC19",48,0)
 ;
"RTN","VBECDC19",49,0)
 S VBECMSG="finished setting specific VistA Blood Bank options "_$S(VBECFLG=1:"'Out-of-Order'",1:"'In Order'")_"."
"RTN","VBECDC19",50,0)
 S I=0 F  S I=$O(^VBEC(6003,I)) Q:'I  D
"RTN","VBECDC19",51,0)
 .S OPT=$P($G(^VBEC(6003,I,0)),U)
"RTN","VBECDC19",52,0)
 .Q:OPT="LRBLAD"!(OPT="LRBLPC")!(OPT="LRBLSI")
"RTN","VBECDC19",53,0)
 .S TXT=$S(VBECFLG=1:"out-of-order",1:"@")
"RTN","VBECDC19",54,0)
 .D OUT^XPDMENU(OPT,TXT)
"RTN","VBECDC19",55,0)
 .Q
"RTN","VBECDC19",56,0)
 D BMES^XPDUTL(VBECMSG)
"RTN","VBECDC19",57,0)
 K I,OPT,TXT,VBECMSG
"RTN","VBECDC19",58,0)
 D EN1(VBECFLG) ; set file level and field level access
"RTN","VBECDC19",59,0)
 Q
"RTN","VBECDC19",60,0)
 ;
"RTN","VBECDC19",61,0)
EN1(VBECFLG) ;
"RTN","VBECDC19",62,0)
 ;input: VBECFLG=1 disable sub-file data dictionary (write access)
"RTN","VBECDC19",63,0)
 ;       or set the file restriction node ^DD(file#,0,"DI")
"RTN","VBECDC19",64,0)
 ;
"RTN","VBECDC19",65,0)
 ;       VBECFLG=0 enable sub-file data dictionary nodes (write access)
"RTN","VBECDC19",66,0)
 ;                 or kill the file restriction node ^DD(file#,0,"DI")
"RTN","VBECDC19",67,0)
 ;
"RTN","VBECDC19",68,0)
 ; Note: this routine called from VBECDC19
"RTN","VBECDC19",69,0)
 ;
"RTN","VBECDC19",70,0)
 ; Note: Using Integration Agreement# 3805 to set and kill the
"RTN","VBECDC19",71,0)
 ; ^DD(file#,0,"DI") node.
"RTN","VBECDC19",72,0)
 ;
"RTN","VBECDC19",73,0)
 ;
"RTN","VBECDC19",74,0)
 I VBECFLG,$P($G(^VBEC(6009,65.5,0)),"^",3)="Y" W:$D(VBECECHO)#2 !,"Options, files, and fields have already been disabled." Q  ;RLM 10/31/05
"RTN","VBECDC19",75,0)
 N VBECIEN S GG=0,U="^",VBECMSG="Finished "_$S(VBECFLG=1:"dis",1:"en")_"abling specific VistA Blood Bank components."
"RTN","VBECDC19",76,0)
 F  S GG=$O(^VBEC(6009,GG)) Q:'GG  D
"RTN","VBECDC19",77,0)
 .;
"RTN","VBECDC19",78,0)
 .; need to check if only whole file restrictions apply, or if a
"RTN","VBECDC19",79,0)
 .; sub-file/field levels are involved
"RTN","VBECDC19",80,0)
 .;
"RTN","VBECDC19",81,0)
 .I +$O(^VBEC(6009,GG,"DD",0)) D
"RTN","VBECDC19",82,0)
 ..;
"RTN","VBECDC19",83,0)
 ..; sub-file/field levels exist
"RTN","VBECDC19",84,0)
 ..;
"RTN","VBECDC19",85,0)
 ..S HH=0 F  S HH=$O(^VBEC(6009,GG,"DD",HH)) Q:'HH  D
"RTN","VBECDC19",86,0)
 ...S VBECIEN(1)=GG,VBECIEN=HH,VBECIENS=$$IENS^DILF(.VBECIEN)
"RTN","VBECDC19",87,0)
 ...I VBECFLG=1 D
"RTN","VBECDC19",88,0)
 ....;
"RTN","VBECDC19",89,0)
 ....; 1) obtain sub-file and field information
"RTN","VBECDC19",90,0)
 ....; 2) set pre-conv. field write access to pre-conv. value
"RTN","VBECDC19",91,0)
 ....; 3) set pst-conv. field write access to pst-conv. value
"RTN","VBECDC19",92,0)
 ....; 4) hardset write node access
"RTN","VBECDC19",93,0)
 ....; 5) file data tracking pre/post conversion field level values
"RTN","VBECDC19",94,0)
 ....;
"RTN","VBECDC19",95,0)
 ....S VBECNODE=$G(^VBEC(6009,GG,"DD",HH,0))
"RTN","VBECDC19",96,0)
 ....S VBECFLD=$P(VBECNODE,U,2),VBECFLE=$P(VBECNODE,U) ;(1)
"RTN","VBECDC19",97,0)
 ....S VBECB4=$G(^DD(VBECFLE,VBECFLD,9))
"RTN","VBECDC19",98,0)
 ....S:VBECB4]"" VBECFDA(6009.01,VBECIENS,1)=VBECB4 ;(2)
"RTN","VBECDC19",99,0)
 ....S VBECFDA(6009.01,VBECIENS,2)="^" ;(3)
"RTN","VBECDC19",100,0)
 ....S ^DD(VBECFLE,VBECFLD,9)="^" ;(4)
"RTN","VBECDC19",101,0)
 ....D FILE^DIE("","VBECFDA") ;(5)
"RTN","VBECDC19",102,0)
 ....Q
"RTN","VBECDC19",103,0)
 ...E  D
"RTN","VBECDC19",104,0)
 ....;
"RTN","VBECDC19",105,0)
 ....; 1) obtain sub-file and field information
"RTN","VBECDC19",106,0)
 ....; 2) set pre-conv. field to pre-conv. write access value
"RTN","VBECDC19",107,0)
 ....;    2A) if pre-conv value was null delete data in the field
"RTN","VBECDC19",108,0)
 ....;    2B) if pre-conv value was not null restore the field to
"RTN","VBECDC19",109,0)
 ....;        the pre-conv value of the field
"RTN","VBECDC19",110,0)
 ....; 3) set write access node to pre-conv. value (if any)
"RTN","VBECDC19",111,0)
 ....; 4) kill write access data dictionary node if no pre-conv. value
"RTN","VBECDC19",112,0)
 ....; 5) set pst-conv write access field to null
"RTN","VBECDC19",113,0)
 ....; 6) file data tracking pre-conversion field level values
"RTN","VBECDC19",114,0)
 ....;
"RTN","VBECDC19",115,0)
 ....S VBECNODE=$G(^VBEC(6009,GG,"DD",HH,0))
"RTN","VBECDC19",116,0)
 ....S VBECFLD=$P(VBECNODE,U,2),VBECFLE=$P(VBECNODE,U) ;(1)
"RTN","VBECDC19",117,0)
 ....S VBECB4=$G(^VBEC(6009,GG,"DD",HH,"PREW"))
"RTN","VBECDC19",118,0)
 ....S:VBECB4="" VBECFDA(6009.01,VBECIENS,1)="@" ;(2A)
"RTN","VBECDC19",119,0)
 ....S:VBECB4]"" VBECFDA(6009.01,VBECIENS,1)=VBECB4 ;(2B)
"RTN","VBECDC19",120,0)
 ....S:VBECB4]"" ^DD(VBECFLE,VBECFLD,9)=VBECB4 ;(3)
"RTN","VBECDC19",121,0)
 ....K:VBECB4="" ^DD(VBECFLE,VBECFLD,9) ;(4)
"RTN","VBECDC19",122,0)
 ....S VBECFDA(6009.01,VBECIENS,2)="@" ;(5)
"RTN","VBECDC19",123,0)
 ....D FILE^DIE("","VBECFDA") ;(6)
"RTN","VBECDC19",124,0)
 ....Q
"RTN","VBECDC19",125,0)
 ...K VBECB4,VBECFDA,VBECFLD,VBECFLE,VBECIENS,VBECNODE
"RTN","VBECDC19",126,0)
 ...Q
"RTN","VBECDC19",127,0)
 ..K HH
"RTN","VBECDC19",128,0)
 ..Q
"RTN","VBECDC19",129,0)
 .;
"RTN","VBECDC19",130,0)
 .; whole file restriction check
"RTN","VBECDC19",131,0)
 .;
"RTN","VBECDC19",132,0)
 .I VBECFLG=1 D
"RTN","VBECDC19",133,0)
 ..;
"RTN","VBECDC19",134,0)
 ..; Disabling file access, or imposing file restrictions
"RTN","VBECDC19",135,0)
 ..; 1) find the file restriction value before the data conversion
"RTN","VBECDC19",136,0)
 ..;    (no pre-data conversion file level restrictions anticipated)
"RTN","VBECDC19",137,0)
 ..;       1A) if pre-conv value was not null set the field to the
"RTN","VBECDC19",138,0)
 ..;           pre-conv value of the field
"RTN","VBECDC19",139,0)
 ..; 2) hard set the 2nd piece of ^DD(File#,0,"DI") to "Y"
"RTN","VBECDC19",140,0)
 ..; 3) Set pst-conversion file restriction value,'Y' into the correct
"RTN","VBECDC19",141,0)
 ..;    field (#.03)
"RTN","VBECDC19",142,0)
 ..; 4) file the data.
"RTN","VBECDC19",143,0)
 ..;
"RTN","VBECDC19",144,0)
 ..Q:$D(^VBEC(6009,GG,"DD"))  ;RLM 10/31/05
"RTN","VBECDC19",145,0)
 ..S VBECB4=$P($G(^DD(GG,0,"DI")),U,2) ;(1)
"RTN","VBECDC19",146,0)
 ..S:VBECB4]"" VBECFDA(6009,GG_",",.02)=VBECB4 ;(1A)
"RTN","VBECDC19",147,0)
 ..S $P(^DD(GG,0,"DI"),U,2)="Y" ;(2)
"RTN","VBECDC19",148,0)
 ..S VBECFDA(6009,GG_",",.03)="Y" ;(3)
"RTN","VBECDC19",149,0)
 ..D FILE^DIE("","VBECFDA") ;(4)
"RTN","VBECDC19",150,0)
 ..Q
"RTN","VBECDC19",151,0)
 .E  D
"RTN","VBECDC19",152,0)
 ..;
"RTN","VBECDC19",153,0)
 ..; Enabling file access, or lifting the file restriction
"RTN","VBECDC19",154,0)
 ..; 1) find the file restriction value before the data conversion
"RTN","VBECDC19",155,0)
 ..;    (no file level restrictions are expected on these files prior
"RTN","VBECDC19",156,0)
 ..;    to the data conversion).
"RTN","VBECDC19",157,0)
 ..; 2) restore the data dictionary to its pre-conversion state (if
"RTN","VBECDC19",158,0)
 ..;    ^DD(GG,0,"DI") didn't exist prior to the conversion, it will
"RTN","VBECDC19",159,0)
 ..;    after the restore. The key fact is that the first & second
"RTN","VBECDC19",160,0)
 ..;    pieces of the "DI" node will be null)
"RTN","VBECDC19",161,0)
 ..; 3) if file restriction exists, track in the pre-conv. value field
"RTN","VBECDC19",162,0)
 ..; 4) update the pre-conversion restriction tracking field to null
"RTN","VBECDC19",163,0)
 ..; 5) update the post-conversion restriction tracking field to null
"RTN","VBECDC19",164,0)
 ..; 6) file the data into the file
"RTN","VBECDC19",165,0)
 ..;
"RTN","VBECDC19",166,0)
 ..S VBECB4=$P(^VBEC(6009,GG,0),U,2) ;(1)
"RTN","VBECDC19",167,0)
 ..S $P(^DD(GG,0,"DI"),U,2)=VBECB4 ;(2)
"RTN","VBECDC19",168,0)
 ..S:VBECB4="" VBECFDA(6009,GG_",",.02)="@" ;(3)
"RTN","VBECDC19",169,0)
 ..S:VBECB4]"" VBECFDA(6009,GG_",",.02)=VBECB4 ;(4)
"RTN","VBECDC19",170,0)
 ..S VBECFDA(6009,GG_",",.03)="@" ;(5)
"RTN","VBECDC19",171,0)
 ..D FILE^DIE("","VBECFDA") ;(6)
"RTN","VBECDC19",172,0)
 ..Q
"RTN","VBECDC19",173,0)
 .K VBECB4,VBECFDA
"RTN","VBECDC19",174,0)
 .Q
"RTN","VBECDC19",175,0)
 D BMES^XPDUTL(VBECMSG)
"RTN","VBECDC19",176,0)
 K GG,VBECMSG
"RTN","VBECDC19",177,0)
 Q
"RTN","VBECDC19",178,0)
 ;
"RTN","VBECDCDC")
0^24^B30473665^B30473665
"RTN","VBECDCDC",1,0)
VBECDCDC ;hoifo/gjc-display data conversion statistics;Nov 21, 2002
"RTN","VBECDCDC",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCDC",3,0)
 ;
"RTN","VBECDCDC",4,0)
 ;Medical Device #:
"RTN","VBECDCDC",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCDC",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCDC",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCDC",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCDC",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCDC",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCDC",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCDC",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCDC",13,0)
 ;regulations.
"RTN","VBECDCDC",14,0)
 ;
"RTN","VBECDCDC",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCDC",16,0)
 ;Call to $$S^%ZTLOAD is supported by IA: 10063
"RTN","VBECDCDC",17,0)
 ;Call to $$EXTERNAL^DILFD is supported by IA: 2055
"RTN","VBECDCDC",18,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDCDC",19,0)
 ;Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECDCDC",20,0)
 ;Call to $$CJ^XLFSTR is supported by IA: 10104
"RTN","VBECDCDC",21,0)
 ;Call to EN^XUTMDEVQ is supported by IA: 1519
"RTN","VBECDCDC",22,0)
 ;Call to ^DIC is supported by IA: 10006
"RTN","VBECDCDC",23,0)
 ;Call to $$DT^XLFDT is supported by IA: 10103
"RTN","VBECDCDC",24,0)
 ;
"RTN","VBECDCDC",25,0)
EN ;entry point for data conversion report.  this is an evocable entry
"RTN","VBECDCDC",26,0)
 ;point for the option: VBEC PRINT SQL/VISTA MAPPINGS.
"RTN","VBECDCDC",27,0)
 ;
"RTN","VBECDCDC",28,0)
 I $S($D(DUZ)[0:1,$D(DUZ(0))[0:1,'DUZ:1,DUZ=.5:1,1:0) W !!?3,$C(7),"DUZ & DUZ(0) must be defined to an active user (not POSTMASTER) in order to",!?3,"proceed." Q
"RTN","VBECDCDC",29,0)
 ;
"RTN","VBECDCDC",30,0)
 ; initialize the error trap
"RTN","VBECDCDC",31,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCDC",32,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCDC",33,0)
 ;
"RTN","VBECDCDC",34,0)
 S DIC="^VBEC(6001,",DIC(0)="QEANZ",DIC("A")="Select the data conversion event date/time: ",DIC("S")="I $P(^(0),""^"",2)" D ^DIC
"RTN","VBECDCDC",35,0)
 I $D(DTOUT)#2!($D(DUOUT)#2)!(+Y'>0) K DIC,DTOUT,DUOUT,X,Y Q
"RTN","VBECDCDC",36,0)
 S VBECIEN=+Y ;data conversion record ien
"RTN","VBECDCDC",37,0)
 S VBECY0=Y(0),VBECY00=Y(0,0)
"RTN","VBECDCDC",38,0)
 K DIC,X,Y
"RTN","VBECDCDC",39,0)
 ;
"RTN","VBECDCDC",40,0)
 S DIR(0)="S^B:Both Individual & Summary;I:Individual Records;S:Summary"
"RTN","VBECDCDC",41,0)
 S DIR("A")="Enter Data Conversion statistics report type",DIR("B")="Summary"
"RTN","VBECDCDC",42,0)
 S DIR("?",1)="Enter 'B' to obtain both individual and overall data element counts"
"RTN","VBECDCDC",43,0)
 S DIR("?",2)="Enter 'I' to obtain individual data element counts"
"RTN","VBECDCDC",44,0)
 S DIR("?",3)="Enter 'S' to obtain overall data element counts"
"RTN","VBECDCDC",45,0)
 S DIR("?")="Enter '^' to stop." D ^DIR K DIR
"RTN","VBECDCDC",46,0)
 I $D(DIRUT) K DIROUT,DIRUT,DTOUT,DUOUT,X,Y D KILL Q
"RTN","VBECDCDC",47,0)
 S VBECTY=Y ;'B' for both, 'S' for summary only, 'I' for individual recs
"RTN","VBECDCDC",48,0)
 ;
"RTN","VBECDCDC",49,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","VBECDCDC",50,0)
 ;
"RTN","VBECDCDC",51,0)
 S VBECR="START^VBECDCDC"
"RTN","VBECDCDC",52,0)
 F I="VBECIEN","VBECTY","VBECY0","VBECY00" S VBECS(I)=""
"RTN","VBECDCDC",53,0)
 K I S VBECD="VBECS display current data conversion statistics"
"RTN","VBECDCDC",54,0)
 S VBECZ="MQ" D EN^XUTMDEVQ(VBECR,VBECD,.VBECS,,1)
"RTN","VBECDCDC",55,0)
 I +$G(ZTSK)>0 W !!,"Task Number: "_ZTSK,!
"RTN","VBECDCDC",56,0)
 ;
"RTN","VBECDCDC",57,0)
KILL ;clean up symbol table, exit
"RTN","VBECDCDC",58,0)
 K VBECD,VBECIEN,VBECR,VBECTY,VBECY0,VBECY00,VBECZ
"RTN","VBECDCDC",59,0)
 Q
"RTN","VBECDCDC",60,0)
 ;
"RTN","VBECDCDC",61,0)
START ;start the process of displaying how many specific data elements were
"RTN","VBECDCDC",62,0)
 ;FTP'ed by the SQL Server process for the VBECS data conversion
"RTN","VBECDCDC",63,0)
 ;
"RTN","VBECDCDC",64,0)
 S:$D(ZTQUEUED) ZTREQ="@" S:U'="^" U="^"
"RTN","VBECDCDC",65,0)
 K ^TMP("VBEC TOTALS",$J) S $P(^TMP("VBEC TOTALS",$J),"0^",28)=""
"RTN","VBECDCDC",66,0)
 S VBECPG=1,$P(VBECLN,"-",(IOM+1))="",VBECTDAY=$$FMTE^XLFDT($$DT^XLFDT(),"1P")
"RTN","VBECDCDC",67,0)
 S VBECDCFN=$$FMTE^XLFDT($E($P(VBECY0,U,3),1,12),1)
"RTN","VBECDCDC",68,0)
 S VBECUSER=$$EXTERNAL^DILFD(6001,.04,,$P(VBECY0,U,4))
"RTN","VBECDCDC",69,0)
 S (VBECIEN1,VBECNT,VBECXIT)=0 D HDR
"RTN","VBECDCDC",70,0)
 F  S VBECIEN1=$O(^VBEC(6001,VBECIEN,"TOT",VBECIEN1)) Q:VBECIEN1'>0  D  Q:VBECXIT
"RTN","VBECDCDC",71,0)
 .S VBEC0=$G(^VBEC(6001,VBECIEN,"TOT",VBECIEN1,0)) Q:VBEC0=""
"RTN","VBECDCDC",72,0)
 .S VBECNT=VBECNT+1
"RTN","VBECDCDC",73,0)
 .I VBECNT#500=0 I $$S^%ZTLOAD() S (ZTSTOP,VBECXIT)=1 Q:VBECXIT
"RTN","VBECDCDC",74,0)
 .D:VBECTY'="S" PRINT(VBEC0) Q:VBECXIT
"RTN","VBECDCDC",75,0)
 .F VBECI=1:1:27 D
"RTN","VBECDCDC",76,0)
 ..S:VBECI'>2 $P(^TMP("VBEC TOTALS",$J),U,VBECI)=$P(^TMP("VBEC TOTALS",$J),U,VBECI)+1
"RTN","VBECDCDC",77,0)
 ..S:VBECI>2 $P(^TMP("VBEC TOTALS",$J),U,VBECI)=$P(^TMP("VBEC TOTALS",$J),U,VBECI)+$P(VBEC0,U,VBECI)
"RTN","VBECDCDC",78,0)
 ..Q
"RTN","VBECDCDC",79,0)
 .Q
"RTN","VBECDCDC",80,0)
 W:'VBECNT !,$$CJ^XLFSTR("*** No Records To Print ***",IOM)
"RTN","VBECDCDC",81,0)
 I VBECNT,(VBECTY'="I") D
"RTN","VBECDCDC",82,0)
 .W:VBECTY="B" ! ;need the additional line feed to separate data
"RTN","VBECDCDC",83,0)
 .W !,$$CJ^XLFSTR("Total number of data elements converted",IOM)
"RTN","VBECDCDC",84,0)
 .D PRINT(^TMP("VBEC TOTALS",$J))
"RTN","VBECDCDC",85,0)
 .Q
"RTN","VBECDCDC",86,0)
 ;
"RTN","VBECDCDC",87,0)
EXIT ;kill and quit
"RTN","VBECDCDC",88,0)
 K VBEC0,VBECD,VBECDCFN,VBECFLD,VBECI,VBECIEN,VBECIEN1,VBECLN,VBECNT,VBECPG,VBECR,VBECTDAY,VBECUSER,VBECXIT,VBECZ
"RTN","VBECDCDC",89,0)
 K ^TMP("VBEC TOTALS",$J)
"RTN","VBECDCDC",90,0)
 Q
"RTN","VBECDCDC",91,0)
 ;
"RTN","VBECDCDC",92,0)
EOS ; end of screen (eos) check & refresh screen action
"RTN","VBECDCDC",93,0)
 ; check to see if additional data exist to print, if not exit w/o
"RTN","VBECDCDC",94,0)
 ; issuing the eos prompt.
"RTN","VBECDCDC",95,0)
 ;
"RTN","VBECDCDC",96,0)
 I +VBECFLD=27,($O(^VBEC(6001,VBECIEN,"TOT",VBECIEN1))="") Q
"RTN","VBECDCDC",97,0)
 I $E(IOST)="C" K DIR S DIR(0)="E" D ^DIR S VBECXIT=$S(Y'>0:1,1:0)
"RTN","VBECDCDC",98,0)
 K DIR,X,Y Q:VBECXIT
"RTN","VBECDCDC",99,0)
HDR ; draw header
"RTN","VBECDCDC",100,0)
 W:($E(IOST)="C")!(VBECPG>1) @IOF
"RTN","VBECDCDC",101,0)
 W !,$$CJ^XLFSTR("VistA Blood Bank Data Element Summary",IOM)
"RTN","VBECDCDC",102,0)
 W !,"Data Conversion start time: "_VBECY00
"RTN","VBECDCDC",103,0)
 W !,"Data Conversion end time: "_VBECDCFN
"RTN","VBECDCDC",104,0)
 W !,"User: "_VBECUSER
"RTN","VBECDCDC",105,0)
 W !,"Report Run Date: ",VBECTDAY,?69,"Page: ",VBECPG,!,VBECLN
"RTN","VBECDCDC",106,0)
 S VBECPG=VBECPG+1
"RTN","VBECDCDC",107,0)
 Q
"RTN","VBECDCDC",108,0)
 ;
"RTN","VBECDCDC",109,0)
PRINT(VBECDSTR) ;print data
"RTN","VBECDCDC",110,0)
 ;Input: VBECDSTR=data string; each delimited piece indicates the
"RTN","VBECDCDC",111,0)
 ; total number of occurences for a data element.
"RTN","VBECDCDC",112,0)
 F VBECI=1:1 S VBECFLD=$P($T(FORMAT+VBECI),";;",2) Q:VBECFLD=""  D  Q:VBECXIT
"RTN","VBECDCDC",113,0)
 .W !,$P(VBECFLD,";",2)_": "_$P(VBECDSTR,U,VBECI)
"RTN","VBECDCDC",114,0)
 .I $Y>(IOSL-4) D EOS ;sets the variable VBECXIT
"RTN","VBECDCDC",115,0)
 .W:+VBECFLD=27&($O(^VBEC(6001,VBECIEN,"TOT",VBECIEN1))>0) !
"RTN","VBECDCDC",116,0)
 .Q
"RTN","VBECDCDC",117,0)
 Q
"RTN","VBECDCDC",118,0)
 ;
"RTN","VBECDCDC",119,0)
FORMAT ;field names are formatted here
"RTN","VBECDCDC",120,0)
 ;;1;LRDFN
"RTN","VBECDCDC",121,0)
 ;;2;DFN
"RTN","VBECDCDC",122,0)
 ;;3;Family Name
"RTN","VBECDCDC",123,0)
 ;;4;Given Name
"RTN","VBECDCDC",124,0)
 ;;5;Middle Name
"RTN","VBECDCDC",125,0)
 ;;6;Suffix (Name)
"RTN","VBECDCDC",126,0)
 ;;7;Sex
"RTN","VBECDCDC",127,0)
 ;;8;DOB
"RTN","VBECDCDC",128,0)
 ;;9;SSN
"RTN","VBECDCDC",129,0)
 ;;10;ICN
"RTN","VBECDCDC",130,0)
 ;;11;ABO
"RTN","VBECDCDC",131,0)
 ;;12;RH
"RTN","VBECDCDC",132,0)
 ;;13;RBC Antigens Present
"RTN","VBECDCDC",133,0)
 ;;14;RBC Antigens Present Comments
"RTN","VBECDCDC",134,0)
 ;;15;RBC Antigens Present Chars
"RTN","VBECDCDC",135,0)
 ;;16;RBC Antigens Absent
"RTN","VBECDCDC",136,0)
 ;;17;RBC Antigens Absent Comments
"RTN","VBECDCDC",137,0)
 ;;18;RBC Antigens Absent Chars
"RTN","VBECDCDC",138,0)
 ;;19;Antibodies Identified
"RTN","VBECDCDC",139,0)
 ;;20;Antibodies Identified Comments
"RTN","VBECDCDC",140,0)
 ;;21;Antibodies Identified Chars
"RTN","VBECDCDC",141,0)
 ;;22;Transfusion Reaction Date
"RTN","VBECDCDC",142,0)
 ;;23;Transfusion Reaction
"RTN","VBECDCDC",143,0)
 ;;24;Transfusion Reaction Comments
"RTN","VBECDCDC",144,0)
 ;;25;Trans. Reaction Comment Chars
"RTN","VBECDCDC",145,0)
 ;;26;Blood Bank Comments
"RTN","VBECDCDC",146,0)
 ;;27;Blood Bank Comment Chars
"RTN","VBECDCDC",147,0)
 ;;
"RTN","VBECDCHX")
0^25^B13671377^B13671377
"RTN","VBECDCHX",1,0)
VBECDCHX ;hoifo/gjc-data conversion & pre-implementation;Nov 21, 2002
"RTN","VBECDCHX",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCHX",3,0)
 ;
"RTN","VBECDCHX",4,0)
 ;Medical Device #:
"RTN","VBECDCHX",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCHX",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCHX",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCHX",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCHX",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCHX",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCHX",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCHX",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCHX",13,0)
 ;regulations.
"RTN","VBECDCHX",14,0)
 ;
"RTN","VBECDCHX",15,0)
 ;Call to $$ROOT^DILFD is supported by IA: 2055
"RTN","VBECDCHX",16,0)
 ;
"RTN","VBECDCHX",17,0)
 ; This routine is called from the main data conversion software
"RTN","VBECDCHX",18,0)
 ; (VBECDC01).  This routine checks if antigen/antibody, transfusion
"RTN","VBECDCHX",19,0)
 ; reaction, blood product, or blood supplier data has been edited
"RTN","VBECDCHX",20,0)
 ; or deleted from the legacy VistA Blood Bank files.  I do not check
"RTN","VBECDCHX",21,0)
 ; for added data to the legacy VistA Blood Bank files; other options
"RTN","VBECDCHX",22,0)
 ; within the software exist for this purpose.
"RTN","VBECDCHX",23,0)
 ;
"RTN","VBECDCHX",24,0)
 ;  input: no data input into this module
"RTN","VBECDCHX",25,0)
 ; return: VBECFLG - 1 if a discrepancy exists, else 0
"RTN","VBECDCHX",26,0)
 ; check the data, all of this is run real-time (no queuing)
"RTN","VBECDCHX",27,0)
 ;
"RTN","VBECDCHX",28,0)
 ; variable definitions:
"RTN","VBECDCHX",29,0)
 ; CNT-counter, used to print '.' every 100 records
"RTN","VBECDCHX",30,0)
 ; VBEC01-'file-ien' or 'file' data (.01 field on file 6005)
"RTN","VBECDCHX",31,0)
 ; VBECDA-record ien file 6005
"RTN","VBECDCHX",32,0)
 ; VBECDATA-antigen/antibody, trans. react., blood prod., blood supplier
"RTN","VBECDCHX",33,0)
 ; VBECFILE-file number of legacy data
"RTN","VBECDCHX",34,0)
 ; VBECFLG-indicates if data is valid across files/sub-file:
"RTN","VBECDCHX",35,0)
 ;         61.3, 65.4, & 6005 (1 for no, 0 for yes)
"RTN","VBECDCHX",36,0)
 ; VBECGUID-only checking data that has been mapped
"RTN","VBECDCHX",37,0)
 ; VBECIEN-record ien (.01 field, file 6005 2nd piece delimited by '-')
"RTN","VBECDCHX",38,0)
 ;         (not applicable on blood supplier data)
"RTN","VBECDCHX",39,0)
 ; VBECL0-legacy file (#s 61.3, or 65.4) zero node
"RTN","VBECDCHX",40,0)
 ; VBECLCX-checksum for a data record, legacy file (#s 61.3 & 65.4)
"RTN","VBECDCHX",41,0)
 ; VBECLID-identifier on legacy file
"RTN","VBECDCHX",42,0)
 ; VBECLNM-name of record in legacy file
"RTN","VBECDCHX",43,0)
 ; VBECLTOT-checksum value for legacy data (name and identifier)
"RTN","VBECDCHX",44,0)
 ; VBECRT-legacy file data global. in all cases: ^LAB(File#
"RTN","VBECDCHX",45,0)
 ; VBECSTR-temporary string data, holding variable
"RTN","VBECDCHX",46,0)
 ; VBECT0-transitory file (# 6005) zero node
"RTN","VBECDCHX",47,0)
 ; VBECTCX-checksum for a data record, transitory file (# 6005)
"RTN","VBECDCHX",48,0)
 ; VBECTID-identifier on  transitory file
"RTN","VBECDCHX",49,0)
 ; VBECTNM-name of record in transitory file
"RTN","VBECDCHX",50,0)
 ; VBECTTOT-checksum value for transitory data (name and identifier)
"RTN","VBECDCHX",51,0)
 ;
"RTN","VBECDCHX",52,0)
EN() ; Main entry point to check if mapped data remains consistent with
"RTN","VBECDCHX",53,0)
 ; data from the parent (61.3 & 65.4) files.  If not, do not
"RTN","VBECDCHX",54,0)
 ; proceed with the data conversion (VBECDC01).
"RTN","VBECDCHX",55,0)
 ;
"RTN","VBECDCHX",56,0)
 W @IOF N CNT,VBECFLG S (CNT,VBECFLG)=0 ;assume successful test
"RTN","VBECDCHX",57,0)
 ;check the antigen/antibody data first
"RTN","VBECDCHX",58,0)
 F VBECFILE=61.3,65.4 D  Q:VBECFLG
"RTN","VBECDCHX",59,0)
 .S VBEC01=VBECFILE,VBECRT=$$ROOT^DILFD(VBEC01,"",1)
"RTN","VBECDCHX",60,0)
 .S VBECDATA=$S(VBECFILE="61.3":"Antibody/Antigen",VBECFILE="65.4":"Transfusion Reaction",VBECFILE="66":"Blood Product",1:"Blood Supplier")
"RTN","VBECDCHX",61,0)
 .W !,"Checking the integrity of "_VBECDATA_" data.",!,"'*' indicates truncated data (65 chars max)."
"RTN","VBECDCHX",62,0)
 .;obtain the GUID.  Only checking mapped data
"RTN","VBECDCHX",63,0)
 .S VBECGUID=""
"RTN","VBECDCHX",64,0)
 .F  S VBECGUID=$O(^VBEC(6005,"AB",VBEC01,VBECGUID)) Q:VBECGUID=""  D  Q:VBECFLG=1
"RTN","VBECDCHX",65,0)
 ..S VBECDA=+$O(^VBEC(6005,"AB",VBEC01,VBECGUID,0)) Q:'VBECDA  ;ien
"RTN","VBECDCHX",66,0)
 ..;
"RTN","VBECDCHX",67,0)
 ..;must have data on the node
"RTN","VBECDCHX",68,0)
 ..S VBECT0=$G(^VBEC(6005,VBECDA,0)) Q:VBECT0=""
"RTN","VBECDCHX",69,0)
 ..;
"RTN","VBECDCHX",70,0)
 ..S VBECIEN=+$P($P(VBECT0,U),"-",2) Q:'VBECIEN
"RTN","VBECDCHX",71,0)
 ..;
"RTN","VBECDCHX",72,0)
 ..;obtain .01 field value and identifier
"RTN","VBECDCHX",73,0)
 ..S VBECSTR=$$FILEIEN(VBECRT,VBECIEN)
"RTN","VBECDCHX",74,0)
 ..S VBECLNM=$P(VBECSTR,U),VBECLID=$P(VBECSTR,U,2)
"RTN","VBECDCHX",75,0)
 ..;
"RTN","VBECDCHX",76,0)
 ..;compare the checksums of the data between the parent files (61.3
"RTN","VBECDCHX",77,0)
 ..;& 65.4) against the mapped data in file 6005 
"RTN","VBECDCHX",78,0)
 ..S VBECTNM=$P(VBECT0,U,2),VBECTID=$P(VBECT0,U,3)
"RTN","VBECDCHX",79,0)
 ..S VBECLTOT=$$CHECKSUM^VBECDCU2(VBECLNM)+$$CHECKSUM^VBECDCU2(VBECLID)
"RTN","VBECDCHX",80,0)
 ..S VBECTTOT=$$CHECKSUM^VBECDCU2(VBECTNM)+$$CHECKSUM^VBECDCU2(VBECTID)
"RTN","VBECDCHX",81,0)
 ..I VBECLTOT'=VBECTTOT S VBECFLG=1 D
"RTN","VBECDCHX",82,0)
 ...;
"RTN","VBECDCHX",83,0)
 ...;display the discrepancies to the user
"RTN","VBECDCHX",84,0)
 ...W !,"Legacy NAME: "_VBECLNM
"RTN","VBECDCHX",85,0)
 ...W !,"Mapped NAME: "_VBECTNM
"RTN","VBECDCHX",86,0)
 ...W !,"Legacy ID: "_$E(VBECLID,1,65)_$S($L(VBECLID)>65:"*",1:"")
"RTN","VBECDCHX",87,0)
 ...W !,"Mapped ID: "_$E(VBECTID,1,65)_$S($L(VBECTID)>65:"*",1:"")
"RTN","VBECDCHX",88,0)
 ...Q
"RTN","VBECDCHX",89,0)
 ..S CNT=CNT+1 W:'(CNT#100) "."
"RTN","VBECDCHX",90,0)
 ..Q
"RTN","VBECDCHX",91,0)
 .Q
"RTN","VBECDCHX",92,0)
 ;
"RTN","VBECDCHX",93,0)
KILL ; kill and quit
"RTN","VBECDCHX",94,0)
 K VBEC01,VBECDA,VBECDATA,VBECFILE,VBECGUID,VBECL0,VBECLCX,VBECLID
"RTN","VBECDCHX",95,0)
 K VBECLNM,VBECLTOT,VBECRT,VBECT0,VBECTCX,VBECTTOT
"RTN","VBECDCHX",96,0)
 Q VBECFLG
"RTN","VBECDCHX",97,0)
 ;
"RTN","VBECDCHX",98,0)
FILEIEN(VBECRT,VBECIEN) ; For records tracking the parent file and record ien,
"RTN","VBECDCHX",99,0)
 ; define the NAME and ID values here.  Note ID values reside on
"RTN","VBECDCHX",100,0)
 ; different pieces for different files.
"RTN","VBECDCHX",101,0)
 ; Antibody/Antigen data resides in: ^LAB(61.3,
"RTN","VBECDCHX",102,0)
 ; Transfusion Reaction data resides in: ^LAB(65.4,
"RTN","VBECDCHX",103,0)
 ; input: VBECIEN-ien of the record in question
"RTN","VBECDCHX",104,0)
 ;        VBECRT-file root of the data global
"RTN","VBECDCHX",105,0)
 ;        Note: VBECFILE is of a global scope
"RTN","VBECDCHX",106,0)
 ; return: VBECSTR-delimited string: NAME^ID (optional)
"RTN","VBECDCHX",107,0)
 N VBECL0,VBECPCE S VBECL0=$G(@VBECRT@(VBECIEN,0)) Q:VBECL0="" ""
"RTN","VBECDCHX",108,0)
 ;
"RTN","VBECDCHX",109,0)
 ; VBECPCE is the SNOMED code for antibody/antigen data or the full name
"RTN","VBECDCHX",110,0)
 ; of our transfusion reaction.
"RTN","VBECDCHX",111,0)
 ; If data changes on the VistA side (name or required identifier value)
"RTN","VBECDCHX",112,0)
 ; the data conversion will not proceed.
"RTN","VBECDCHX",113,0)
 ;
"RTN","VBECDCHX",114,0)
 S VBECPCE=$S(VBECFILE=61.3:2,1:3) ;note origin of data
"RTN","VBECDCHX",115,0)
 Q $P(VBECL0,U)_"^"_$P(VBECL0,U,VBECPCE)
"RTN","VBECDCHX",116,0)
 ;
"RTN","VBECDCM")
0^26^B20099895^B20099895
"RTN","VBECDCM",1,0)
VBECDCM ;hoifo/gjc-data mapping utilities.;Nov 21, 2002
"RTN","VBECDCM",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCM",3,0)
 ;
"RTN","VBECDCM",4,0)
 ;Medical Device #:
"RTN","VBECDCM",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCM",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCM",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCM",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCM",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCM",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCM",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCM",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCM",13,0)
 ;regulations.
"RTN","VBECDCM",14,0)
 ;
"RTN","VBECDCM",15,0)
 ;Call to $$NEWERR^%ZTER supported by IA: 1621
"RTN","VBECDCM",16,0)
 ;Call to ^DIC supported by IA: 10006
"RTN","VBECDCM",17,0)
 ;Call to MIX^DIC1 supported by IA: 10007
"RTN","VBECDCM",18,0)
 ;Call to FILE^DIE supported by IA: 2053
"RTN","VBECDCM",19,0)
 ;Execution of ^%ZOSF("TEST") supported by IA: 10096
"RTN","VBECDCM",20,0)
 ;
"RTN","VBECDCM",21,0)
EN613 ; entry point for mapping utilities on antibodies & antigens
"RTN","VBECDCM",22,0)
 D EN613^VBECDCM0 ;check for adds, edits, or deletes on the VistA side
"RTN","VBECDCM",23,0)
 S VBECFN=61.3 D GO Q
"RTN","VBECDCM",24,0)
 ;
"RTN","VBECDCM",25,0)
EN654 ; entry point for mapping utilities on transfusion reactions
"RTN","VBECDCM",26,0)
 D EN654^VBECDCM2 ;check for adds, edits, or deletes on the VistA side
"RTN","VBECDCM",27,0)
 S VBECFN=65.4 D GO Q
"RTN","VBECDCM",28,0)
 ;
"RTN","VBECDCM",29,0)
GO ; main entry point for mapping...
"RTN","VBECDCM",30,0)
 ; VBECXIT is used to denote when the application is to be exited
"RTN","VBECDCM",31,0)
 ; VBECFNM is the attribute name within the VistA file (blood product,
"RTN","VBECDCM",32,0)
 ; antigen/antibody, transfusion reaction, & blood supplier)
"RTN","VBECDCM",33,0)
 ;
"RTN","VBECDCM",34,0)
 ; initialize error trap
"RTN","VBECDCM",35,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCM",36,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCM",37,0)
 ;
"RTN","VBECDCM",38,0)
 S VBECXIT=0
"RTN","VBECDCM",39,0)
 S VBECFNM=$S(VBECFN=61.3:"Antigen/Antibody",VBECFN=65.4:"Transfusion Reaction",VBECFN=66:"Blood Product",66.01:"Blood Supplier",1:"")
"RTN","VBECDCM",40,0)
 ;
"RTN","VBECDCM",41,0)
 ; Lock the file that is being mapped to disallow another user the
"RTN","VBECDCM",42,0)
 ; ability to add/edit/delete records in the file.  If we cannot lock,
"RTN","VBECDCM",43,0)
 ; we need to try again at a later date.
"RTN","VBECDCM",44,0)
 L +^VBEC(6005):5
"RTN","VBECDCM",45,0)
 I '$T D  D XIT Q
"RTN","VBECDCM",46,0)
 .W !!,"The "_VBECFNM_" file is being edited by another user.",!,"Try again later."
"RTN","VBECDCM",47,0)
 .Q
"RTN","VBECDCM",48,0)
 ;
"RTN","VBECDCM",49,0)
 ; select the VistA element to map & the standardized value to map to
"RTN","VBECDCM",50,0)
 F  D  Q:VBECXIT
"RTN","VBECDCM",51,0)
 .S VBECVSTA=$$VSTLOOK(VBECFNM,VBECFN)
"RTN","VBECDCM",52,0)
 .I +VBECVSTA=-1 S VBECXIT=1 Q
"RTN","VBECDCM",53,0)
 .S VBECSQL=$$SQLLOOK(VBECFNM,VBECFN,VBECVSTA)
"RTN","VBECDCM",54,0)
 .I +VBECSQL=-1 S VBECXIT=1 Q
"RTN","VBECDCM",55,0)
 .; file pointer to standardized data (fld: .05)
"RTN","VBECDCM",56,0)
 .K VBECFDA
"RTN","VBECDCM",57,0)
 .S VBECFDA(8,6005,+VBECVSTA_",",.05)=+VBECSQL
"RTN","VBECDCM",58,0)
 .D FILE^DIE("","VBECFDA(8)","")
"RTN","VBECDCM",59,0)
 .; end of data filing
"RTN","VBECDCM",60,0)
 .Q
"RTN","VBECDCM",61,0)
 ;*********************************************************************
"RTN","VBECDCM",62,0)
 ;
"RTN","VBECDCM",63,0)
XIT ; kill and quit
"RTN","VBECDCM",64,0)
 L -^VBEC(6005) K VBECFDA,VBECFN,VBECFNM,VBECSQL,VBECVSTA,VBECXIT,X,Y
"RTN","VBECDCM",65,0)
 Q
"RTN","VBECDCM",66,0)
 ;
"RTN","VBECDCM",67,0)
SQLLOOK(VBECFNM,VBECFN,VBECVSTA) ; Lookup on standardized blood products,
"RTN","VBECDCM",68,0)
 ; transfusion reactions, blood suppliers, and antigens/antibodies.
"RTN","VBECDCM",69,0)
 ;
"RTN","VBECDCM",70,0)
 ; Input: VBECFNM=attribute to be mapped, i.e., transfusion reactions
"RTN","VBECDCM",71,0)
 ;        & antigens/antibodies.
"RTN","VBECDCM",72,0)
 ;        VBECFN=VistA file #; VistA file where the attribute resides
"RTN","VBECDCM",73,0)
 ;        VBECVSTA=ien^file#-ien^name attribute^identifier^
"RTN","VBECDCM",74,0)
 ;                 antibody/antigen flag
"RTN","VBECDCM",75,0)
 ;
"RTN","VBECDCM",76,0)
 ; return: ien^attribute name^attribute key, -1 if lookup fails
"RTN","VBECDCM",77,0)
 ;
"RTN","VBECDCM",78,0)
 N VBECSQL,VBECID,VBECVK,VBECVN
"RTN","VBECDCM",79,0)
 ; VBECVK=antibody/antigen flag or null
"RTN","VBECDCM",80,0)
 ; VBECVN=VistA name (.01)
"RTN","VBECDCM",81,0)
 ; VBECID=for antibodies only, SNOMED code
"RTN","VBECDCM",82,0)
 S VBECVN=$P(VBECVSTA,U,3),VBECID=$P(VBECVSTA,U,4)
"RTN","VBECDCM",83,0)
 S VBECVK=$P(VBECVSTA,U,5)
"RTN","VBECDCM",84,0)
 ;
"RTN","VBECDCM",85,0)
 F  D  Q:+VBECSQL
"RTN","VBECDCM",86,0)
 .S DIC="^VBEC(6007,",DIC("A")="Select a standardized "_VBECFNM_": "
"RTN","VBECDCM",87,0)
 .S DIC(0)="QEAMZ"
"RTN","VBECDCM",88,0)
 .S DIC("S")="I $D(^VBEC(6007,""FNUM"",VBECFN,+Y))#2" ; common to all
"RTN","VBECDCM",89,0)
 .;
"RTN","VBECDCM",90,0)
 .;additional logic for antibody/antigen screen
"RTN","VBECDCM",91,0)
 .S:VBECFN=61.3 DIC("S")=DIC("S")_" N VBECQ S VBECQ=$G(^VBEC(6007,+Y,0)) I $P(VBECQ,U,4)=VBECVK"
"RTN","VBECDCM",92,0)
 .;
"RTN","VBECDCM",93,0)
 .;display identifier when looking up antibody/antigen
"RTN","VBECDCM",94,0)
 .S:VBECFN=61.3 DIC("W")="N VBEC67 S VBEC67=$G(^VBEC(6007,+Y,0)) W $P(VBEC67,U,2)_$S($P(VBEC67,U,4)=""AB"":"" (Antibody)"",$P(VBEC67,U,2)=""AN"":"" (Antigen)"",1:"""")"
"RTN","VBECDCM",95,0)
 .;
"RTN","VBECDCM",96,0)
 .D ^DIC K DIC,VBECSCR
"RTN","VBECDCM",97,0)
 .I $D(DUOUT)!($D(DTOUT))!(+Y=-1) S VBECSQL=-1 Q
"RTN","VBECDCM",98,0)
 .; VBECSQL format: internal entry # ^ attribute name ^ attribute key
"RTN","VBECDCM",99,0)
 .S VBECSQL=+Y_U_$P(Y(0),U,1,2)
"RTN","VBECDCM",100,0)
 .Q
"RTN","VBECDCM",101,0)
 Q VBECSQL
"RTN","VBECDCM",102,0)
 ;
"RTN","VBECDCM",103,0)
VSTLOOK(VBECFNM,VBECFN) ; Lookup on standardized VistA blood products,
"RTN","VBECDCM",104,0)
 ; transfusion reactions, blood suppliers, and antigens/antibodies.
"RTN","VBECDCM",105,0)
 ;
"RTN","VBECDCM",106,0)
 ; Input: VBECFNM=attribute to be mapped, i.e., blood products,
"RTN","VBECDCM",107,0)
 ;        transfusion reactions, blood suppliers, and
"RTN","VBECDCM",108,0)
 ;        antigens/antibodies.
"RTN","VBECDCM",109,0)
 ;        VBECFN=VistA file #; VistA file where the attribute resides
"RTN","VBECDCM",110,0)
 ;
"RTN","VBECDCM",111,0)
 ; return if antibody/antigen: ien ^ file#-ien ^ name attribute ^
"RTN","VBECDCM",112,0)
 ;                             ^ identifier ^ antibody/antigen flag
"RTN","VBECDCM",113,0)
 ;       transfusion reaction: ien ^ file#-ien ^ name attribute ^
"RTN","VBECDCM",114,0)
 ;                             null (no identifier) ^ (no flag)
"RTN","VBECDCM",115,0)
 ;
"RTN","VBECDCM",116,0)
 ;                             -1 if lookup fails
"RTN","VBECDCM",117,0)
 ;
"RTN","VBECDCM",118,0)
 N VBECVSTA
"RTN","VBECDCM",119,0)
 F  D  Q:+VBECVSTA
"RTN","VBECDCM",120,0)
 .K D,DIC,DO S DIC(0)="QEFASZ" S:VBECFN=61.3 DIC(0)=DIC(0)_"X"
"RTN","VBECDCM",121,0)
 .S D="N^VA",DIC="^VBEC(6005,",DIC("A")="Select VistA "_VBECFNM_": "
"RTN","VBECDCM",122,0)
 .S:VBECFN=61.3 DIC("W")="N VBEC24 S VBEC24=$P($G(^VBEC(6005,+Y,0)),U,2,4) W $P(VBEC24,U,2)_$S($P(VBEC24,U,3)=""AB"":"" (Antibody)"",$P(VBEC24,U,3)=""AN"":"" (Antigen)"",1:"""")"
"RTN","VBECDCM",123,0)
 .;S:VBECFN=61.3 DIC("W")="N VBEC04 S VBEC04=$P($G(^VBEC(6005,+Y,0)),U,4) W $S(VBEC04=""AB"":""(Antibody)"",VBEC04=""AN"":""(Antigen)"",1:"""")"
"RTN","VBECDCM",124,0)
 .S DIC("S")="N VBEC05 S VBEC05=$G(^VBEC(6005,+Y,0)) I +VBEC05=VBECFN,$P(VBEC05,U,5)="""""
"RTN","VBECDCM",125,0)
 .D MIX^DIC1 K D,DIC,DO
"RTN","VBECDCM",126,0)
 .I $D(DUOUT)!($D(DTOUT))!(+Y=-1) S VBECVSTA=-1 Q
"RTN","VBECDCM",127,0)
 .S VBECVSTA=+Y_U_$P(Y(0),U,1,4)
"RTN","VBECDCM",128,0)
 .Q
"RTN","VBECDCM",129,0)
 Q VBECVSTA
"RTN","VBECDCM",130,0)
 ;
"RTN","VBECDCM0")
0^27^B11064686^B11064686
"RTN","VBECDCM0",1,0)
VBECDCM0 ;hoifo/gjc-VBECS MAPPING TABLE add, edit & delete utilities.;Nov 21, 2002
"RTN","VBECDCM0",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCM0",3,0)
 ;
"RTN","VBECDCM0",4,0)
 ; main entry point for VBECS MAPPING TABLE (#6005) file operations
"RTN","VBECDCM0",5,0)
 ;
"RTN","VBECDCM0",6,0)
 ;Medical Device #:
"RTN","VBECDCM0",7,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCM0",8,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCM0",9,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCM0",10,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCM0",11,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCM0",12,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCM0",13,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCM0",14,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCM0",15,0)
 ;regulations.
"RTN","VBECDCM0",16,0)
 ;
"RTN","VBECDCM0",17,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCM0",18,0)
 ;Call to FILE^DIE is supported by IA: 2053
"RTN","VBECDCM0",19,0)
 ;Call to $$NOW^XLFDT is supported by IA: 10103
"RTN","VBECDCM0",20,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDCM0",21,0)
 ;
"RTN","VBECDCM0",22,0)
EN613 ;Initially populate the file with antigen/antibody data
"RTN","VBECDCM0",23,0)
 ;
"RTN","VBECDCM0",24,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCM0",25,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCM0",26,0)
 I +$O(^VBEC(6005,"AA","61.3-"))'=61.3 D
"RTN","VBECDCM0",27,0)
 .Q:'$$LOCK^VBECDCU2(61.3)
"RTN","VBECDCM0",28,0)
 .W !!,"Adding site configured 'Antigen/Antibody' information into the VBECS MAPPING",!,"TABLE file (#6005)."
"RTN","VBECDCM0",29,0)
 .S CNT=0
"RTN","VBECDCM0",30,0)
 .F VBECANTI="AB","AN" D  ;antibodies & antigens
"RTN","VBECDCM0",31,0)
 ..S VBECY=0 F  S VBECY=$O(^LAB(61.3,"E",VBECANTI,VBECY)) Q:'VBECY  D
"RTN","VBECDCM0",32,0)
 ...S VBECY(0)=$G(^LAB(61.3,VBECY,0)),CNT=CNT+1
"RTN","VBECDCM0",33,0)
 ...D POP6005^VBECDCM2(61.3,VBECY,$P(VBECY(0),U),$P(VBECY(0),U,2),VBECANTI)
"RTN","VBECDCM0",34,0)
 ...W:'(CNT#100) "."
"RTN","VBECDCM0",35,0)
 ...Q
"RTN","VBECDCM0",36,0)
 ..Q
"RTN","VBECDCM0",37,0)
 .D UNLOCK^VBECDCU2(61.3)
"RTN","VBECDCM0",38,0)
 .Q
"RTN","VBECDCM0",39,0)
 S:+$O(^VBEC(6005,"AA","61.3-"))=61.3 VBECFLG=1
"RTN","VBECDCM0",40,0)
 I  W !!,CNT_" antibody/antigen record"_$S(CNT=1:"",1:"s")_" added.",!
"RTN","VBECDCM0",41,0)
 ;
"RTN","VBECDCM0",42,0)
 ;handle antigen/antibody edit, delete, and add events here
"RTN","VBECDCM0",43,0)
 ;
"RTN","VBECDCM0",44,0)
 E  D
"RTN","VBECDCM0",45,0)
 .Q:'$$LOCK^VBECDCU2(61.3)  S VBECFLG=0
"RTN","VBECDCM0",46,0)
 .F VBECANTI="AB","AN" D  ;antibodies & antigens
"RTN","VBECDCM0",47,0)
 ..S VBECY=0 F  S VBECY=$O(^LAB(61.3,"E",VBECANTI,VBECY)) Q:'VBECY  D
"RTN","VBECDCM0",48,0)
 ...S VBECY(0)=$G(^LAB(61.3,VBECY,0)),VBEC01=61.3_"-"_VBECY
"RTN","VBECDCM0",49,0)
 ...S VBECIEN=+$O(^VBEC(6005,"B",VBEC01,0))
"RTN","VBECDCM0",50,0)
 ...;
"RTN","VBECDCM0",51,0)
 ...;if antigen/antibody not filed in 6005, add it
"RTN","VBECDCM0",52,0)
 ...I 'VBECIEN S VBECFLG=1 D POP6005^VBECDCM2(61.3,VBECY,$P(VBECY(0),U),$P(VBECY(0),U,2),VBECANTI) Q
"RTN","VBECDCM0",53,0)
 ...S VBECIEN(0)=$G(^VBEC(6005,VBECIEN,0))
"RTN","VBECDCM0",54,0)
 ...;
"RTN","VBECDCM0",55,0)
 ...;check if the name or identifier attribute has been edited
"RTN","VBECDCM0",56,0)
 ...S VBECTOT=0,VBECTOT=$$CHECKSUM^VBECDCU2($P(VBECY(0),U))
"RTN","VBECDCM0",57,0)
 ...S VBECTOT=VBECTOT+$$CHECKSUM^VBECDCU2($P(VBECY(0),U,2))
"RTN","VBECDCM0",58,0)
 ...S VBECTOT=VBECTOT+$$CHECKSUM^VBECDCU2($P(VBECY(0),U,5))
"RTN","VBECDCM0",59,0)
 ...I VBECTOT'=$P(VBECIEN(0),U,6) D  S VBECFLG=1 K VBECTOT
"RTN","VBECDCM0",60,0)
 ....S:$P(VBECY(0),U)'=$P(VBECIEN(0),U,2) VBECFDA(6005,VBECIEN_",",.02)=$P(VBECY(0),U)
"RTN","VBECDCM0",61,0)
 ....S:$P(VBECY(0),U,2)'=$P(VBECIEN(0),U,3) VBECFDA(6005,VBECIEN_",",.03)=$P(VBECY(0),U,2)
"RTN","VBECDCM0",62,0)
 ....S:$P(VBECY(0),U,5)'=$P(VBECIEN(0),U,4) VBECFDA(6005,VBECIEN_",",.04)=$P(VBECY(0),U,5)
"RTN","VBECDCM0",63,0)
 ....S VBECFDA(6005,VBECIEN_",",.05)="@"
"RTN","VBECDCM0",64,0)
 ....S VBECFDA(6005,VBECIEN_",",.06)=VBECTOT
"RTN","VBECDCM0",65,0)
 ....S VBECFDA(6005,VBECIEN_",",.07)=+$E($$NOW^XLFDT(),1,12)
"RTN","VBECDCM0",66,0)
 ....D FILE^DIE("","VBECFDA")
"RTN","VBECDCM0",67,0)
 ....Q
"RTN","VBECDCM0",68,0)
 ...;
"RTN","VBECDCM0",69,0)
 ...Q
"RTN","VBECDCM0",70,0)
 ..Q
"RTN","VBECDCM0",71,0)
 .D UNLOCK^VBECDCU2(61.3)
"RTN","VBECDCM0",72,0)
 .Q
"RTN","VBECDCM0",73,0)
 D DELETE^VBECDCM2(61.3)
"RTN","VBECDCM0",74,0)
 I $G(VBECFLG) W !!,"Antigen/Antibody information updated.",!
"RTN","VBECDCM0",75,0)
 E  W !!,"Antigen/Antibody information current, not updated.",!
"RTN","VBECDCM0",76,0)
 D XIT^VBECDCM2
"RTN","VBECDCM0",77,0)
 Q
"RTN","VBECDCM0",78,0)
 ;
"RTN","VBECDCM1")
0^28^B24209996^B24209996
"RTN","VBECDCM1",1,0)
VBECDCM1 ;hoifo/gjc-VBECS MAPPING TABLE delete utilities.;Nov 21, 2002
"RTN","VBECDCM1",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCM1",3,0)
 ;
"RTN","VBECDCM1",4,0)
 ;Medical Device #:
"RTN","VBECDCM1",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCM1",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCM1",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCM1",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCM1",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCM1",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCM1",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCM1",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCM1",13,0)
 ;regulations.
"RTN","VBECDCM1",14,0)
 ;
"RTN","VBECDCM1",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCM1",16,0)
 ;Call to IX^DIC is supported by IA: 10006
"RTN","VBECDCM1",17,0)
 ;Call to FILE^DIE is supported by IA: 2053
"RTN","VBECDCM1",18,0)
 ;Call to ^DIK is supported by IA: 10013
"RTN","VBECDCM1",19,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDCM1",20,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDCM1",21,0)
 ;
"RTN","VBECDCM1",22,0)
EN613 ; decouple antibodies/antigens
"RTN","VBECDCM1",23,0)
 S VBECFN=61.3,VBECNME="Antibodies/Antigens"
"RTN","VBECDCM1",24,0)
 D ASK,XIT
"RTN","VBECDCM1",25,0)
 Q
"RTN","VBECDCM1",26,0)
EN654 ; decouple transfusion reactions
"RTN","VBECDCM1",27,0)
 S VBECFN=65.4,VBECNME="Transfusion Reactions"
"RTN","VBECDCM1",28,0)
 D ASK,XIT
"RTN","VBECDCM1",29,0)
 Q
"RTN","VBECDCM1",30,0)
ENP613 ; purge VistA antibodies/antigens 
"RTN","VBECDCM1",31,0)
 S VBECFN=61.3,VBECNME="Antibodies/Antigens"
"RTN","VBECDCM1",32,0)
 D PURGALL K VBECFN,VBECNME
"RTN","VBECDCM1",33,0)
 Q
"RTN","VBECDCM1",34,0)
ENP654 ; purge VistA transfusion reactions mapping
"RTN","VBECDCM1",35,0)
 S VBECFN=65.4,VBECNME="Transfusion Reactions"
"RTN","VBECDCM1",36,0)
 D PURGALL K VBECFN,VBECNME
"RTN","VBECDCM1",37,0)
 Q
"RTN","VBECDCM1",38,0)
 ;
"RTN","VBECDCM1",39,0)
PURGALL ; purge all the records in the VBECS MAPPING TABLE (#6005) file
"RTN","VBECDCM1",40,0)
 ; initialize the error trap
"RTN","VBECDCM1",41,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCM1",42,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCM1",43,0)
 Q:'$$LOCK^VBECDCU2(6005)
"RTN","VBECDCM1",44,0)
 N VBECXIT S VBECXIT=0
"RTN","VBECDCM1",45,0)
 I $O(^VBEC(6005,"AB",VBECFN,""))'="" D  Q:VBECXIT
"RTN","VBECDCM1",46,0)
 .;Data has been mapped, ask user if purge should proceed.
"RTN","VBECDCM1",47,0)
 .N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","VBECDCM1",48,0)
 .S DIR(0)="Y",DIR("B")="No"
"RTN","VBECDCM1",49,0)
 .S DIR("A")=VBECNME_" have been mapped, are you sure you want to purge"
"RTN","VBECDCM1",50,0)
 .S DIR("?")="Enter 'Yes' to purge "_VBECNME_", or 'No' to exit without purging."
"RTN","VBECDCM1",51,0)
 .D ^DIR
"RTN","VBECDCM1",52,0)
 .I $D(DIRUT)#2 S VBECXIT=1 Q
"RTN","VBECDCM1",53,0)
 .S VBECXIT=$S(Y=0:1,1:0)
"RTN","VBECDCM1",54,0)
 .;If the user takes the default of 'No', the value of Y is zero.
"RTN","VBECDCM1",55,0)
 .;Set VBECXIT accordingly to exit without purging.
"RTN","VBECDCM1",56,0)
 .Q
"RTN","VBECDCM1",57,0)
 S DIK="^VBEC(6005,",CNT=0
"RTN","VBECDCM1",58,0)
 W !,"Please be patient, this may take awhile"
"RTN","VBECDCM1",59,0)
 S:VBECFN'=66.01 VBEC01=VBECFN_"-"
"RTN","VBECDCM1",60,0)
 S:VBECFN=66.01 VBEC01=VBECFN
"RTN","VBECDCM1",61,0)
 I VBEC01'=66.01  F  S VBEC01=$O(^VBEC(6005,"B",VBEC01)) Q:VBEC01=""!(+VBEC01'=VBECFN)  D PURGE(VBEC01,.CNT) ; not blood supplier
"RTN","VBECDCM1",62,0)
 D:VBEC01=66.01 PURGE(VBEC01,.CNT) ; blood supplier
"RTN","VBECDCM1",63,0)
 W:CNT !!,"Done, total number of records deleted: "_CNT
"RTN","VBECDCM1",64,0)
 W:'CNT !!,"No record(s) to delete."
"RTN","VBECDCM1",65,0)
 D UNLOCK^VBECDCU2(6005)
"RTN","VBECDCM1",66,0)
 K %,CNT,DIC,VBEC01,X,Y
"RTN","VBECDCM1",67,0)
 Q
"RTN","VBECDCM1",68,0)
 ;
"RTN","VBECDCM1",69,0)
PURGE(VBEC01,CNT) ; purge at the record level using DIK
"RTN","VBECDCM1",70,0)
 ; input: VBEC01=sub-file number or file number-ien VBEC MATCHING TABLE
"RTN","VBECDCM1",71,0)
 ;               file.
"RTN","VBECDCM1",72,0)
 ;           CNT=The number of records purged.
"RTN","VBECDCM1",73,0)
 N %,DA,DIK,X,Y S DA=0,DIK="^VBEC(6005,"
"RTN","VBECDCM1",74,0)
 F  S DA=$O(^VBEC(6005,"B",VBEC01,DA)) Q:'DA  D
"RTN","VBECDCM1",75,0)
 .D ^DIK S CNT=CNT+1
"RTN","VBECDCM1",76,0)
 .W:'(CNT#100) "." ; process is active
"RTN","VBECDCM1",77,0)
 .Q
"RTN","VBECDCM1",78,0)
 Q
"RTN","VBECDCM1",79,0)
 ;
"RTN","VBECDCM1",80,0)
SINGLE ; decouple relations for a single record
"RTN","VBECDCM1",81,0)
 ; initialize the error trap
"RTN","VBECDCM1",82,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCM1",83,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCM1",84,0)
 Q:'$$LOCK^VBECDCU2(6005)
"RTN","VBECDCM1",85,0)
 S VBECFILE=$$ATTR^VBECDCU1() ; select data attribute family
"RTN","VBECDCM1",86,0)
 I VBECFILE="^" D KILSIN Q
"RTN","VBECDCM1",87,0)
 K D,DIC,DO S D="N",DIC="^VBEC(6005,",DIC(0)="QEFASZ",VBECFILE=+VBECFILE
"RTN","VBECDCM1",88,0)
 S DIC("S")="N VBEC S VBEC=$G(^(0)) I $P(VBEC,U,5)'="""",(+$P(VBEC,U)=VBECFILE)"
"RTN","VBECDCM1",89,0)
 S DIC("W")="W $S($P(^(0),U,3)'="""":"" (""_$P(^(0),U,3)_"")"",1:"""")"
"RTN","VBECDCM1",90,0)
 D IX^DIC K D,DIC,DO I +Y=-1 D KILSIN Q
"RTN","VBECDCM1",91,0)
 S VBECIEN=+Y,VBECREC=$P(Y(0),U,2)_" ("_$P(Y(0),U,3)_")"
"RTN","VBECDCM1",92,0)
 D DECUP(VBECIEN)
"RTN","VBECDCM1",93,0)
 W !!,"Mapping for "_VBECREC_" decoupled.",!
"RTN","VBECDCM1",94,0)
KILSIN D UNLOCK^VBECDCU2(6005) K VBECFILE,VBECIEN,VBECREC,X,Y
"RTN","VBECDCM1",95,0)
 Q
"RTN","VBECDCM1",96,0)
 ;
"RTN","VBECDCM1",97,0)
ASK ; decouple records from the VBECS MAPPING TABLE (#6005) file
"RTN","VBECDCM1",98,0)
 ; initialize the error trap
"RTN","VBECDCM1",99,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCM1",100,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCM1",101,0)
 S Y=$$YN() Q:Y=0  ; user chooses not to decouple
"RTN","VBECDCM1",102,0)
 S CNT=0 W !!?3,"Please be patient, this may take a while",!
"RTN","VBECDCM1",103,0)
 Q:'$$LOCK^VBECDCU2(6005)
"RTN","VBECDCM1",104,0)
 S VBECGUID=""
"RTN","VBECDCM1",105,0)
 F  S VBECGUID=$O(^VBEC(6005,"AB",VBECFN,VBECGUID)) Q:VBECGUID=""  D
"RTN","VBECDCM1",106,0)
 .S VBECIEN=0
"RTN","VBECDCM1",107,0)
 .F  S VBECIEN=$O(^VBEC(6005,"AB",VBECFN,VBECGUID,VBECIEN)) Q:'VBECIEN  D
"RTN","VBECDCM1",108,0)
 ..D DECUP(VBECIEN)
"RTN","VBECDCM1",109,0)
 ..S CNT=CNT+1 W:'(CNT#100) "." ; process is active
"RTN","VBECDCM1",110,0)
 ..Q
"RTN","VBECDCM1",111,0)
 .Q
"RTN","VBECDCM1",112,0)
 W !?3,"Finished decoupling ",CNT," mapped records from the VBECS MAPPING TABLE (#6005)",!?3,"file.  For VistA "_VBECNME_" data types."
"RTN","VBECDCM1",113,0)
 D UNLOCK^VBECDCU2(6005)
"RTN","VBECDCM1",114,0)
 Q
"RTN","VBECDCM1",115,0)
 ;
"RTN","VBECDCM1",116,0)
DECUP(Y) ; delete the STANDARD VBECS DATA (#.05), CHECKSUM (#.06), &
"RTN","VBECDCM1",117,0)
 ; TIMESTAMP (#.07) field level data (essentially unmap)
"RTN","VBECDCM1",118,0)
 ;input: Y=ien of record in file 6005
"RTN","VBECDCM1",119,0)
 K VBECFDA S VBECFDA(8,6005,Y_",",.05)="@"
"RTN","VBECDCM1",120,0)
 D FILE^DIE("E","VBECFDA(8)") K VBECFDA
"RTN","VBECDCM1",121,0)
 Q
"RTN","VBECDCM1",122,0)
 ;
"RTN","VBECDCM1",123,0)
XIT ; kill and quit
"RTN","VBECDCM1",124,0)
 K CNT,VBECFDA,VBECFN,VBECGUID,VBECIEN,VBECNME,X,Y
"RTN","VBECDCM1",125,0)
 Q
"RTN","VBECDCM1",126,0)
 ;
"RTN","VBECDCM1",127,0)
YN() ; yes/no to decoupling question...
"RTN","VBECDCM1",128,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","VBECDCM1",129,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to decouple mappings",DIR("B")="No"
"RTN","VBECDCM1",130,0)
 S DIR("?")="Enter 'Yes' to decouple mappings, or 'No' to exit without decoupling mappings."
"RTN","VBECDCM1",131,0)
 D ^DIR S:$D(DIRUT) Y=0
"RTN","VBECDCM1",132,0)
 Q Y
"RTN","VBECDCM1",133,0)
 ;
"RTN","VBECDCM2")
0^29^B22225177^B22225177
"RTN","VBECDCM2",1,0)
VBECDCM2 ;hoifo/gjc-VBECS MAPPING TABLE add, edit & delete utilities;Nov 21, 2002
"RTN","VBECDCM2",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCM2",3,0)
 ;
"RTN","VBECDCM2",4,0)
 ;Medical Device #:
"RTN","VBECDCM2",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCM2",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCM2",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCM2",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCM2",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCM2",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCM2",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCM2",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCM2",13,0)
 ;regulations.
"RTN","VBECDCM2",14,0)
 ;
"RTN","VBECDCM2",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCM2",16,0)
 ;Call to FILE^DIE is supported by IA: 2053
"RTN","VBECDCM2",17,0)
 ;Call to UPDATE^DIE is supported by IA: 2053
"RTN","VBECDCM2",18,0)
 ;Call to ^DIK is supported by IA: 10013
"RTN","VBECDCM2",19,0)
 ;Call to $$ROOT^DILFD is supported by IA: 2055
"RTN","VBECDCM2",20,0)
 ;Call to $$NOW^XLFDT is supported by IA: 10103
"RTN","VBECDCM2",21,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDCM2",22,0)
 ;
"RTN","VBECDCM2",23,0)
EN654 ; handle transfusion reactions.
"RTN","VBECDCM2",24,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCM2",25,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCM2",26,0)
 ;
"RTN","VBECDCM2",27,0)
 ;initially add trans. reactions to file 6005
"RTN","VBECDCM2",28,0)
 ;
"RTN","VBECDCM2",29,0)
 I +$O(^VBEC(6005,"AA","65.4-"))'=65.4 D
"RTN","VBECDCM2",30,0)
 .Q:'$$LOCK^VBECDCU2(65.4)
"RTN","VBECDCM2",31,0)
 .W !!,"Adding site configured 'Transfusion Reaction' information into the VBECS MAPPING",!,"TABLE file (#6005)."
"RTN","VBECDCM2",32,0)
 .S (CNT,VBECY)=0
"RTN","VBECDCM2",33,0)
 .F  S VBECY=$O(^LAB(65.4,VBECY)) Q:'VBECY  D  ;trans. react.
"RTN","VBECDCM2",34,0)
 ..S VBECY(0)=$G(^LAB(65.4,VBECY,0)) Q:$P(VBECY(0),U,2)'="T"
"RTN","VBECDCM2",35,0)
 ..S CNT=CNT+1 D POP6005(65.4,VBECY,$P(VBECY(0),U),$P(VBECY(0),U,3))
"RTN","VBECDCM2",36,0)
 ..W:'(CNT#100) "."
"RTN","VBECDCM2",37,0)
 ..Q
"RTN","VBECDCM2",38,0)
 .D UNLOCK^VBECDCU2(65.4)
"RTN","VBECDCM2",39,0)
 .Q
"RTN","VBECDCM2",40,0)
 S:+$O(^VBEC(6005,"AA","65.4-"))=65.4 VBECFLG=1
"RTN","VBECDCM2",41,0)
 I  W !!,CNT_" transfusion record"_$S(CNT=1:"",1:"s")_" added.",!
"RTN","VBECDCM2",42,0)
 ;
"RTN","VBECDCM2",43,0)
 ;handle transfusion reaction edit, and add events here
"RTN","VBECDCM2",44,0)
 ;
"RTN","VBECDCM2",45,0)
 E  D
"RTN","VBECDCM2",46,0)
 .S VBECFLG=0 Q:'$$LOCK^VBECDCU2(65.4)  ;RLM 10/27/05
"RTN","VBECDCM2",47,0)
 .S VBECY=0 F  S VBECY=$O(^LAB(65.4,VBECY)) Q:'VBECY  D
"RTN","VBECDCM2",48,0)
 ..S VBECY(0)=$G(^LAB(65.4,VBECY,0)),VBEC01=65.4_"-"_VBECY
"RTN","VBECDCM2",49,0)
 ..S VBECIEN=+$O(^VBEC(6005,"B",VBEC01,0)),VBECIEN(0)=$G(^VBEC(6005,VBECIEN,0))
"RTN","VBECDCM2",50,0)
 ..;
"RTN","VBECDCM2",51,0)
 ..;if transfusion reaction not filed in 6005, add it
"RTN","VBECDCM2",52,0)
 ..I 'VBECIEN,($P(VBECY(0),U,2)="T") S VBECFLG=1 D POP6005(65.4,VBECY,$P(VBECY(0),U),$P(VBECY(0),U,3))  ;if added, no need to perform edit check
"RTN","VBECDCM2",53,0)
 ..Q:'VBECIEN
"RTN","VBECDCM2",54,0)
 ..;
"RTN","VBECDCM2",55,0)
 ..;check if the name or identifier attribute has been edited
"RTN","VBECDCM2",56,0)
 ..;if parent record changes from TRANSFUSION REACTION delete from 6005
"RTN","VBECDCM2",57,0)
 ..I $P(VBECY(0),U,2)'="T" D  Q
"RTN","VBECDCM2",58,0)
 ...K DA,DIK S DA=VBECIEN,DIK="^VBEC(6005,",VBECFLG=1 D ^DIK
"RTN","VBECDCM2",59,0)
 ...K %,DA,DIC,DIK,X,Y
"RTN","VBECDCM2",60,0)
 ...Q
"RTN","VBECDCM2",61,0)
 ..S VBECTOT=0,VBECTOT=$$CHECKSUM^VBECDCU2($P(VBECY(0),U))
"RTN","VBECDCM2",62,0)
 ..S VBECTOT=VBECTOT+$$CHECKSUM^VBECDCU2($P(VBECY(0),U,3))
"RTN","VBECDCM2",63,0)
 ..I VBECTOT'=$P(VBECIEN(0),U,6) D  S VBECFLG=1 K VBECTOT
"RTN","VBECDCM2",64,0)
 ...S:$P(VBECY(0),U)'=$P(VBECIEN(0),U,2) VBECFDA(6005,VBECIEN_",",.02)=$P(VBECY(0),U)
"RTN","VBECDCM2",65,0)
 ...S:$P(VBECY(0),U,3)'=$P(VBECIEN(0),U,3) VBECFDA(6005,VBECIEN_",",.03)=$P(VBECY(0),U,3)
"RTN","VBECDCM2",66,0)
 ...S VBECFDA(6005,VBECIEN_",",.05)="@"
"RTN","VBECDCM2",67,0)
 ...S VBECFDA(6005,VBECIEN_",",.06)=VBECTOT
"RTN","VBECDCM2",68,0)
 ...S VBECFDA(6005,VBECIEN_",",.07)=+$E($$NOW^XLFDT(),1,12)
"RTN","VBECDCM2",69,0)
 ...D FILE^DIE("","VBECFDA")
"RTN","VBECDCM2",70,0)
 ...Q
"RTN","VBECDCM2",71,0)
 ..Q
"RTN","VBECDCM2",72,0)
 .D UNLOCK^VBECDCU2(65.4)
"RTN","VBECDCM2",73,0)
 .Q
"RTN","VBECDCM2",74,0)
 ; handle delete transaction reaction actions here
"RTN","VBECDCM2",75,0)
 D DELETE(65.4)
"RTN","VBECDCM2",76,0)
 I $G(VBECFLG) W !!,"Transfusion Reaction information updated.",! ;RLM 10/27/05
"RTN","VBECDCM2",77,0)
 E  W !!,"Transfusion Reaction information current, not updated.",!
"RTN","VBECDCM2",78,0)
 D XIT
"RTN","VBECDCM2",79,0)
 Q
"RTN","VBECDCM2",80,0)
 ;
"RTN","VBECDCM2",81,0)
XIT ; unlock, kill, and quit
"RTN","VBECDCM2",82,0)
 L -^VBEC(6005)
"RTN","VBECDCM2",83,0)
 K CNT,DIR,DIRUT,DTOUT,DUOUT,VBEC01,VBECANTI,VBECFLD,VBECFLE,VBECFLG,VBECHLP,VBECIEN,VBECRT,VBECTMP,VBECXIT,VBECX,VBECY,VBECYN,X,Y
"RTN","VBECDCM2",84,0)
 K ^TMP($J,"VBEC SUPPLIER")
"RTN","VBECDCM2",85,0)
 Q
"RTN","VBECDCM2",86,0)
 ;
"RTN","VBECDCM2",87,0)
POP6005(VBECFILE,VBECIEN,VBEC01,VBECID,VBECANTI) ; Populate the
"RTN","VBECDCM2",88,0)
 ; VBECS MAPPING TABLE file (#6005) with antigen/antibody & blood
"RTN","VBECDCM2",89,0)
 ; transfusion reaction data.
"RTN","VBECDCM2",90,0)
 ; Input: VBECFILE=VistA file referenced (required)
"RTN","VBECDCM2",91,0)
 ;         VBECIEN=VistA internal entry number referenced
"RTN","VBECDCM2",92,0)
 ;          VBEC01=value of the .01 field (required, external)
"RTN","VBECDCM2",93,0)
 ;          VBECID=file identifier
"RTN","VBECDCM2",94,0)
 ;        VBECANTI=antibody/antigen identifier
"RTN","VBECDCM2",95,0)
 ;
"RTN","VBECDCM2",96,0)
 S VBECTOT=0,VBECTOT=$$CHECKSUM^VBECDCU2(VBEC01)
"RTN","VBECDCM2",97,0)
 S VBECTOT=VBECTOT+$$CHECKSUM^VBECDCU2(VBECID)
"RTN","VBECDCM2",98,0)
 S:$G(VBECANTI)'="" VBECTOT=VBECTOT+$$CHECKSUM^VBECDCU2(VBECANTI)
"RTN","VBECDCM2",99,0)
 F  S COUNT=(+$O(^VBEC(6005,$C(32)),-1)+1) Q:'($D(^VBEC(6005,COUNT,0))#2)
"RTN","VBECDCM2",100,0)
 S VBECFDA(6005,"+"_COUNT_",",.01)=VBECFILE_"-"_VBECIEN
"RTN","VBECDCM2",101,0)
 S VBECFDA(6005,"+"_COUNT_",",.02)=VBEC01
"RTN","VBECDCM2",102,0)
 S:$G(VBECID)'="" VBECFDA(6005,"+"_COUNT_",",.03)=VBECID
"RTN","VBECDCM2",103,0)
 S:$G(VBECANTI)'="" VBECFDA(6005,"+"_COUNT_",",.04)=VBECANTI
"RTN","VBECDCM2",104,0)
 S VBECFDA(6005,"+"_COUNT_",",.06)=VBECTOT
"RTN","VBECDCM2",105,0)
 S VBECFDA(6005,"+"_COUNT_",",.07)=+$E($$NOW^XLFDT(),1,12)
"RTN","VBECDCM2",106,0)
 D UPDATE^DIE("E","VBECFDA") K COUNT,VBECFDA,VBECTOT
"RTN","VBECDCM2",107,0)
 Q
"RTN","VBECDCM2",108,0)
 ;
"RTN","VBECDCM2",109,0)
DELETE(VBECFN) ; delete individual record from file 6005 that no longer exist
"RTN","VBECDCM2",110,0)
 ; in their parent files.
"RTN","VBECDCM2",111,0)
 ;Input: VBECFN=the file number of the parent file
"RTN","VBECDCM2",112,0)
 ;return: VBECFLG=indicates if updates (deletions) to file 6005 occurred
"RTN","VBECDCM2",113,0)
 N VBEC6005,VBECIEN,VBECRT,VBECX K %,DA,DIC,DIK,X,Y
"RTN","VBECDCM2",114,0)
 S VBECX=VBECFN_"-",VBECRT=$$ROOT^DILFD(VBECFN,"",1)
"RTN","VBECDCM2",115,0)
 F  S VBECX=$O(^VBEC(6005,"B",VBECX)) Q:VBECX=""!(+VBECX'=VBECFN)  D
"RTN","VBECDCM2",116,0)
 .S VBEC6005=$O(^VBEC(6005,"B",VBECX,0)) Q:VBEC6005=0
"RTN","VBECDCM2",117,0)
 .S VBECIEN=+$P(VBECX,"-",2)
"RTN","VBECDCM2",118,0)
 .I $D(@VBECRT@(VBECIEN,0))#2 Q  ;data resides in the parent file
"RTN","VBECDCM2",119,0)
 .S DIK="^VBEC(6005,",DA=VBEC6005,VBECFLG=1 D ^DIK K %,DA,DIC,DIK,X,Y
"RTN","VBECDCM2",120,0)
 Q
"RTN","VBECDCM2",121,0)
 ;
"RTN","VBECDCMP")
0^30^B16912213^B16912213
"RTN","VBECDCMP",1,0)
VBECDCMP ;hoifo/gjc-print mapped data from VBECS MAPPING TABLE (#6005);Nov 21, 2002
"RTN","VBECDCMP",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCMP",3,0)
 ;
"RTN","VBECDCMP",4,0)
 ;Medical Device #:
"RTN","VBECDCMP",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCMP",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCMP",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCMP",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCMP",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCMP",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCMP",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCMP",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCMP",13,0)
 ;regulations.
"RTN","VBECDCMP",14,0)
 ;
"RTN","VBECDCMP",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCMP",16,0)
 ;Call to $$S^%ZTLOAD is supported by IA: 10063
"RTN","VBECDCMP",17,0)
 ;Call to $$EXTERNAL^DILFD is supported by IA: 2055
"RTN","VBECDCMP",18,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDCMP",19,0)
 ;Call to $$DT^XLFDT is supported by IA: 10103
"RTN","VBECDCMP",20,0)
 ;Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECDCMP",21,0)
 ;Call to $$CJ^XLFSTR is supported by IA: 10104
"RTN","VBECDCMP",22,0)
 ;Call to EN^XUTMDEVQ is supported by IA: 1519
"RTN","VBECDCMP",23,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDCMP",24,0)
 ;
"RTN","VBECDCMP",25,0)
EN ; entry point for data mapping report.  this is an evocable entry point
"RTN","VBECDCMP",26,0)
 ; for the option: VBEC PRINT SQL/VISTA MAPPINGS.
"RTN","VBECDCMP",27,0)
 ;
"RTN","VBECDCMP",28,0)
 I $S($D(DUZ)[0:1,$D(DUZ(0))[0:1,'DUZ:1,DUZ=.5:1,1:0) W !!?3,$C(7),"DUZ & DUZ(0) must be defined to an active user (not POSTMASTER) in order to",!?3,"proceed." Q
"RTN","VBECDCMP",29,0)
 ;
"RTN","VBECDCMP",30,0)
 ; initialize the error trap
"RTN","VBECDCMP",31,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCMP",32,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCMP",33,0)
 ;
"RTN","VBECDCMP",34,0)
RPT6005 ; Select the mapped VistA attribute you wish to examine. 
"RTN","VBECDCMP",35,0)
 K DIR S DIR(0)="S^AA:Antigen/Antibody;TR:Transfusion Reaction",DIR("A")="Select mapped data attribute to display"
"RTN","VBECDCMP",36,0)
 S DIR("?",1)="Enter 'AA' for Antibodies and Antigens (Vista File: Function Field #61.3)"
"RTN","VBECDCMP",37,0)
 S DIR("?",2)="Enter 'TR' for Transfusion Reaction (VistA File: Blood Bank Utility"
"RTN","VBECDCMP",38,0)
 S DIR("?")="#65.4)" D ^DIR
"RTN","VBECDCMP",39,0)
 I $D(DIRUT) D EXIT Q
"RTN","VBECDCMP",40,0)
 S VBECFILE=$S(Y="AA":61.3,1:65.4),VBECATT=Y(0)
"RTN","VBECDCMP",41,0)
 ;
"RTN","VBECDCMP",42,0)
 ; check to see that data exists in the VBECS MAPPING TABLE (#6005) 
"RTN","VBECDCMP",43,0)
 ; file for the attribute selected.
"RTN","VBECDCMP",44,0)
 I $O(^VBEC(6005,"B",$S(VBECFILE'=66.01:VBECFILE_"-",1:VBECFILE)))="" D  Q
"RTN","VBECDCMP",45,0)
 .W !!,"There is no "_VBECATT_" data in the VBECS MAPPING TABLE (#6005)"
"RTN","VBECDCMP",46,0)
 .W !,"file to be printed.",$C(7)
"RTN","VBECDCMP",47,0)
 .Q
"RTN","VBECDCMP",48,0)
 ;
"RTN","VBECDCMP",49,0)
 S VBECR="GO6005^VBECDCMP"
"RTN","VBECDCMP",50,0)
 F I="DUZ","VBECFILE","VBECATT" S VBECS(I)=""
"RTN","VBECDCMP",51,0)
 K I S VBECD="VBECS display current data mapping relationships"
"RTN","VBECDCMP",52,0)
 S VBECZ="MQ" D EN^XUTMDEVQ(VBECR,VBECD,.VBECS,,1)
"RTN","VBECDCMP",53,0)
 I +$G(ZTSK)>0 W !!,"Task Number: "_ZTSK,!
"RTN","VBECDCMP",54,0)
 ;
"RTN","VBECDCMP",55,0)
EXIT ;clean up the symbol table; exit the utility
"RTN","VBECDCMP",56,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,POP,VBECATT,VBECFIEN,VBECIEN,VBECD,VBECFILE,VBECR,VBECS,VBECY,VBECZ,X,Y,ZTSK
"RTN","VBECDCMP",57,0)
 Q
"RTN","VBECDCMP",58,0)
 ;
"RTN","VBECDCMP",59,0)
GO6005 ; print mapping data information from the VBECS MAPPING TABLE (#6005)
"RTN","VBECDCMP",60,0)
 ; file.
"RTN","VBECDCMP",61,0)
 Q:'$G(VBECFILE)  S:$D(ZTQUEUED) ZTREQ="@"
"RTN","VBECDCMP",62,0)
 ;
"RTN","VBECDCMP",63,0)
 S PAGE=1,$P(LINE,"-",(IOM+1))="",TODAY=$$FMTE^XLFDT($$DT^XLFDT(),"1P")
"RTN","VBECDCMP",64,0)
 S (VBECXIT,VBECSTOP)=0,VBECGUID="" D HDR
"RTN","VBECDCMP",65,0)
 F  S VBECGUID=$O(^VBEC(6005,"AB",VBECFILE,VBECGUID)) Q:VBECGUID=""  D  Q:VBECXIT!(VBECSTOP)
"RTN","VBECDCMP",66,0)
 .S VBECIEN=0
"RTN","VBECDCMP",67,0)
 .F  S VBECIEN=$O(^VBEC(6005,"AB",VBECFILE,VBECGUID,VBECIEN)) Q:'VBECIEN  D  Q:VBECXIT!(VBECSTOP)
"RTN","VBECDCMP",68,0)
 ..S VBECY(0)=$G(^VBEC(6005,VBECIEN,0))
"RTN","VBECDCMP",69,0)
 ..S VBECFIEN=$P(VBECY(0),U),VBECNAME=$P(VBECY(0),U,2)
"RTN","VBECDCMP",70,0)
 ..S VBECNME=$P($G(^VBEC(6007,VBECGUID,0)),U)
"RTN","VBECDCMP",71,0)
 ..S VBECANTI=$$EXTERNAL^DILFD(6005,.04,,$P(VBECY(0),U,4))
"RTN","VBECDCMP",72,0)
 ..I $$S^%ZTLOAD() S (ZTSTOP,VBECSTOP)=1 Q
"RTN","VBECDCMP",73,0)
 ..W !!,"VistA FileMan File: "_$P(VBECFIEN,"-")
"RTN","VBECDCMP",74,0)
 ..W:$P(VBECFIEN,"-",2) !,"VistA FileMan IEN: "_$P(VBECFIEN,"-",2)
"RTN","VBECDCMP",75,0)
 ..W !,"Standard Record Name: "_VBECNME
"RTN","VBECDCMP",76,0)
 ..I $Y>(IOSL-4) D EOS Q:VBECXIT
"RTN","VBECDCMP",77,0)
 ..W !,"VistA Record Name : "_VBECNAME
"RTN","VBECDCMP",78,0)
 ..W:VBECANTI'="" !,"Antigen/Antibody  : "_VBECANTI
"RTN","VBECDCMP",79,0)
 ..I $Y>(IOSL-4) D EOS
"RTN","VBECDCMP",80,0)
 ..Q
"RTN","VBECDCMP",81,0)
 .Q
"RTN","VBECDCMP",82,0)
 W:$G(VBECFIEN)="" !,$$CJ^XLFSTR("*** No Records To Print ***",IOM)
"RTN","VBECDCMP",83,0)
 ;
"RTN","VBECDCMP",84,0)
 K LINE,PAGE,POP,TODAY,VBEC01,VBECANTI,VBECIEN,VBECGUID,VBECNAME,VBECNME,VBECXIT,VBECSTOP
"RTN","VBECDCMP",85,0)
 Q
"RTN","VBECDCMP",86,0)
 ;
"RTN","VBECDCMP",87,0)
EOS ; end of screen (eos) check & refresh screen action
"RTN","VBECDCMP",88,0)
 ; check to see if additional data exist to print, if not exit w/o
"RTN","VBECDCMP",89,0)
 ; issuing the eos prompt.
"RTN","VBECDCMP",90,0)
 ;
"RTN","VBECDCMP",91,0)
 I $E(IOST)="C" K DIR S DIR(0)="E" D ^DIR S VBECXIT=$S(Y'>0:1,1:0)
"RTN","VBECDCMP",92,0)
 K DIR,X,Y Q:VBECXIT
"RTN","VBECDCMP",93,0)
HDR ; draw header
"RTN","VBECDCMP",94,0)
 W:($E(IOST)="C")!(PAGE>1) @IOF
"RTN","VBECDCMP",95,0)
 W !,$$CJ^XLFSTR("VistA Data Mapped To Standard SQL Server Attributes",IOM)
"RTN","VBECDCMP",96,0)
 W !,"Date: ",TODAY,?69,"Page: ",PAGE,!,LINE
"RTN","VBECDCMP",97,0)
 S PAGE=PAGE+1,HEADER="Attribute being mapped: "_VBECATT
"RTN","VBECDCMP",98,0)
 W !,$$CJ^XLFSTR(HEADER,IOM) K HEADER
"RTN","VBECDCMP",99,0)
 Q
"RTN","VBECDCMP",100,0)
 ;
"RTN","VBECDCNM")
0^31^B13224428^B13224428
"RTN","VBECDCNM",1,0)
VBECDCNM ;hoifo/gjc-print unmapped data from 61.3 or 65.4;Nov 21, 2002
"RTN","VBECDCNM",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCNM",3,0)
 ;
"RTN","VBECDCNM",4,0)
 ;Medical Device #:
"RTN","VBECDCNM",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCNM",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCNM",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCNM",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCNM",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCNM",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCNM",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCNM",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCNM",13,0)
 ;regulations.
"RTN","VBECDCNM",14,0)
 ;
"RTN","VBECDCNM",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCNM",16,0)
 ;Call to $$S^%ZTLOAD is supported by IA: 10063
"RTN","VBECDCNM",17,0)
 ;Call to $$EXTERNAL^DILFD is supported by IA: 2055
"RTN","VBECDCNM",18,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDCNM",19,0)
 ;Call to $$DT^XLFDT is supported by IA: 10103
"RTN","VBECDCNM",20,0)
 ;Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECDCNM",21,0)
 ;Call to $$CJ^XLFSTR is supported by IA: 10104
"RTN","VBECDCNM",22,0)
 ;Call to EN^XUTMDEVQ is supported by IA: 1519
"RTN","VBECDCNM",23,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDCNM",24,0)
 ;
"RTN","VBECDCNM",25,0)
EN ; entry point for unmapped data report.  this is an evocable entry point
"RTN","VBECDCNM",26,0)
 ; for the option: ???.
"RTN","VBECDCNM",27,0)
 ;
"RTN","VBECDCNM",28,0)
 I $S($D(DUZ)[0:1,$D(DUZ(0))[0:1,'DUZ:1,DUZ=.5:1,1:0) W !!?3,$C(7),"DUZ & DUZ(0) must be defined to an active user (not POSTMASTER) in order to",!?3,"proceed." Q
"RTN","VBECDCNM",29,0)
 ;
"RTN","VBECDCNM",30,0)
RPT6005 ; Select the unmapped VistA attribute you wish to examine. 
"RTN","VBECDCNM",31,0)
 ;
"RTN","VBECDCNM",32,0)
 ; initialize the error trap code
"RTN","VBECDCNM",33,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCNM",34,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCNM",35,0)
 ;
"RTN","VBECDCNM",36,0)
 S VBECS=$$ATTR^VBECDCU1() ; select data attribute family
"RTN","VBECDCNM",37,0)
 I VBECS="^" D EXIT Q
"RTN","VBECDCNM",38,0)
 S VBECFILE=$P(VBECS,U),VBECATT=$P(VBECS,U,2)
"RTN","VBECDCNM",39,0)
 ;
"RTN","VBECDCNM",40,0)
 K VBECS S VBECR="GO^VBECDCNM"
"RTN","VBECDCNM",41,0)
 F I="DUZ","VBECFILE","VBECATT" S VBECS(I)=""
"RTN","VBECDCNM",42,0)
 K I S VBECD="VBECS display currently unmapped VistA Blood bank data"
"RTN","VBECDCNM",43,0)
 S VBECZ="MQ" D EN^XUTMDEVQ(VBECR,VBECD,.VBECS,,1)
"RTN","VBECDCNM",44,0)
 I +$G(ZTSK)>0 W !!,"Task Number: "_ZTSK,!
"RTN","VBECDCNM",45,0)
 ;
"RTN","VBECDCNM",46,0)
EXIT ;clean up the symbol table; exit the utility
"RTN","VBECDCNM",47,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,POP,VBECATT,VBECIEN,VBECD,VBECFILE,VBECR,VBECS,VBECZ,X,Y,ZTSK
"RTN","VBECDCNM",48,0)
 Q
"RTN","VBECDCNM",49,0)
 ;
"RTN","VBECDCNM",50,0)
GO ; print unmapped data from file: 61.3 or 65.4
"RTN","VBECDCNM",51,0)
 ;
"RTN","VBECDCNM",52,0)
 ;Note: VBECFILE will either be 61.3 or 65.4
"RTN","VBECDCNM",53,0)
 Q:'$G(VBECFILE)  S:$D(ZTQUEUED) ZTREQ="@"
"RTN","VBECDCNM",54,0)
 ;
"RTN","VBECDCNM",55,0)
 S PAGE=1,$P(LINE,"-",(IOM+1))="",TODAY=$$FMTE^XLFDT($$DT^XLFDT(),"1P")
"RTN","VBECDCNM",56,0)
 D HDR S (VBECXIT,VBECSTOP)=0 S VBEC02=""
"RTN","VBECDCNM",57,0)
 F  S VBEC02=$O(^VBEC(6005,"N",VBEC02)) Q:VBEC02=""  D  Q:VBECXIT!(VBECSTOP)
"RTN","VBECDCNM",58,0)
 .S VBECIEN=0
"RTN","VBECDCNM",59,0)
 .F  S VBECIEN=$O(^VBEC(6005,"N",VBEC02,VBECIEN)) Q:'VBECIEN  D  Q:VBECXIT!(VBECSTOP)
"RTN","VBECDCNM",60,0)
 ..S VBECY(0)=$G(^VBEC(6005,VBECIEN,0))
"RTN","VBECDCNM",61,0)
 ..Q:+$P(VBECY(0),U)'=VBECFILE  ;sorting by file, printing by alpha
"RTN","VBECDCNM",62,0)
 ..Q:$P(VBECY(0),U,5)'=""  ;GUID chk
"RTN","VBECDCNM",63,0)
 ..S VBECFIEN=$P(VBECY(0),U),VBECNAME=$P(VBECY(0),U,2)
"RTN","VBECDCNM",64,0)
 ..S VBECANTI=$$EXTERNAL^DILFD(6005,.04,,$P(VBECY(0),U,4))
"RTN","VBECDCNM",65,0)
 ..I $$S^%ZTLOAD() S (ZTSTOP,VBECSTOP)=1 Q
"RTN","VBECDCNM",66,0)
 ..;
"RTN","VBECDCNM",67,0)
 ..W !,VBECNAME W:VBECFILE=61.3 ?34,VBECANTI W:VBECFILE=66 ?44,$P(VBECY(0),U,3)
"RTN","VBECDCNM",68,0)
 ..I $Y>(IOSL-4) D EOS
"RTN","VBECDCNM",69,0)
 ..Q
"RTN","VBECDCNM",70,0)
 .Q
"RTN","VBECDCNM",71,0)
 ;
"RTN","VBECDCNM",72,0)
 W:$G(VBECFIEN)="" !,$$CJ^XLFSTR("*** No Records To Print ***",IOM)
"RTN","VBECDCNM",73,0)
 K LINE,PAGE,POP,TODAY,VBEC02,VBECANTI,VBECFIEN,VBECIEN,VBECNAME,VBECXIT,VBECY,VBECSTOP
"RTN","VBECDCNM",74,0)
 Q
"RTN","VBECDCNM",75,0)
 ;
"RTN","VBECDCNM",76,0)
EOS ; end of screen (eos) check & refresh screen action
"RTN","VBECDCNM",77,0)
 ; check to see if additional data, for this particular file,
"RTN","VBECDCNM",78,0)
 ; exists to print, if not exit w/o issuing the eos prompt.
"RTN","VBECDCNM",79,0)
 ;
"RTN","VBECDCNM",80,0)
 Q:$O(^VBEC(6005,"B",VBECFIEN))=""
"RTN","VBECDCNM",81,0)
 ;
"RTN","VBECDCNM",82,0)
 I $E(IOST)="C" K DIR S DIR(0)="E" D ^DIR S VBECXIT=$S(Y'>0:1,1:0)
"RTN","VBECDCNM",83,0)
 K DIR,X,Y Q:VBECXIT
"RTN","VBECDCNM",84,0)
HDR ; draw header
"RTN","VBECDCNM",85,0)
 W:($E(IOST)="C")!(PAGE>1) @IOF
"RTN","VBECDCNM",86,0)
 W !,$$CJ^XLFSTR("VistA Data Not Mapped To Standard SQL Server Attributes",80)
"RTN","VBECDCNM",87,0)
 W !,"Date: ",TODAY,?69,"Page: ",PAGE
"RTN","VBECDCNM",88,0)
 W:VBECFILE=61.3 !,"Antigen/Antibody",?34,"Identifier"
"RTN","VBECDCNM",89,0)
 I VBECFILE=65.4 W !,"Transfusion Reaction"
"RTN","VBECDCNM",90,0)
 W:VBECFILE=66 !,"Blood Product",?44,"Blood Product Code"
"RTN","VBECDCNM",91,0)
 W:VBECFILE=66.01 !,"Supplier"
"RTN","VBECDCNM",92,0)
 W !,LINE S PAGE=PAGE+1
"RTN","VBECDCNM",93,0)
 Q
"RTN","VBECDCNM",94,0)
 ;
"RTN","VBECDCR")
0^32^B30083905^B30083905
"RTN","VBECDCR",1,0)
VBECDCR ;hoifo/gjc-data conversion & pre-implementation reporting mechanism;Nov 21, 2002
"RTN","VBECDCR",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCR",3,0)
 ;
"RTN","VBECDCR",4,0)
 ;Medical Device #:
"RTN","VBECDCR",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCR",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCR",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCR",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCR",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCR",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCR",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCR",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCR",13,0)
 ;regulations.
"RTN","VBECDCR",14,0)
 ;
"RTN","VBECDCR",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCR",16,0)
 ;Call to $$S^%ZTLOAD is supported by IA: 10063
"RTN","VBECDCR",17,0)
 ;Call to FILE^DID is supported by IA: 2052
"RTN","VBECDCR",18,0)
 ;Call to $$EXTERNAL^DILFD is supported by IA: 2055
"RTN","VBECDCR",19,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDCR",20,0)
 ;Call to ^DIWP is supported by IA: 10011
"RTN","VBECDCR",21,0)
 ;Call to $$DT^XLFDT is supported by IA: 10103
"RTN","VBECDCR",22,0)
 ;Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECDCR",23,0)
 ;Call to $$CJ^XLFSTR is supported by IA: 10104
"RTN","VBECDCR",24,0)
 ;Call to EN^XUTMDEVQ is supported by IA: 1519
"RTN","VBECDCR",25,0)
 ;global read on ^DPT(DFN,0) for patient name supported by IA: 10035
"RTN","VBECDCR",26,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDCR",27,0)
 ;
"RTN","VBECDCR",28,0)
EN ; entry point for anomaly report
"RTN","VBECDCR",29,0)
 ;
"RTN","VBECDCR",30,0)
 I $S($D(DUZ)[0:1,$D(DUZ(0))[0:1,'DUZ:1,DUZ=.5:1,1:0) W !!?3,$C(7),"DUZ & DUZ(0) must be defined to an active user (not POSTMASTER) in order to",!?3,"proceed." Q
"RTN","VBECDCR",31,0)
 ;
"RTN","VBECDCR",32,0)
 ; initialize the error trap
"RTN","VBECDCR",33,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCR",34,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCR",35,0)
 ;
"RTN","VBECDCR",36,0)
 ; check to see if anomaly data exists for the most recent record in the
"RTN","VBECDCR",37,0)
 ; VBECS DATA INTEGRITY/CONVERSION STATISTICS (#6001) file.
"RTN","VBECDCR",38,0)
 S VBECIEN=$O(^VBEC(6001,$C(32)),-1)
"RTN","VBECDCR",39,0)
 I '$O(^VBEC(6001,VBECIEN,"ERR",0)) D  Q
"RTN","VBECDCR",40,0)
 .K VBECIEN
"RTN","VBECDCR",41,0)
 .W !!?3,"There are no occurrences of VistA Blood Bank data anomalies on file to be",!?3,"displayed.",$C(7)
"RTN","VBECDCR",42,0)
 .Q
"RTN","VBECDCR",43,0)
 ;
"RTN","VBECDCR",44,0)
 S VBECR="START^VBECDCR",VBECS("DUZ")="",VBECS("VBECIEN")=""
"RTN","VBECDCR",45,0)
 S VBECZ="MQ",VBECD="VBECS data anomaly reporting process"
"RTN","VBECDCR",46,0)
 D EN^XUTMDEVQ(VBECR,VBECD,.VBECS,,1)
"RTN","VBECDCR",47,0)
 I +$G(ZTSK)>0 W !!,"Task Number: "_ZTSK,!
"RTN","VBECDCR",48,0)
 K VBECIEN,VBECD,VBECR,VBECS,VBECZ,ZTSK
"RTN","VBECDCR",49,0)
 Q
"RTN","VBECDCR",50,0)
 ;
"RTN","VBECDCR",51,0)
START ; display the data
"RTN","VBECDCR",52,0)
 ;
"RTN","VBECDCR",53,0)
 ; VBEC(1)=process start timestamp (internal)
"RTN","VBECDCR",54,0)
 ; VBEC(2)=process (internal)
"RTN","VBECDCR",55,0)
 ; VBEC(3)=process finish timestamp (internal)
"RTN","VBECDCR",56,0)
 ; VBEC(4)=user responsible for process (internal)
"RTN","VBECDCR",57,0)
 ; VBECX(1)=process start timestamp (external)
"RTN","VBECDCR",58,0)
 ; VBECX(2)=process (external)
"RTN","VBECDCR",59,0)
 ; VBECX(3)=process finish timestamp (external)
"RTN","VBECDCR",60,0)
 ; VBECX(4)=user responsible for process (external)
"RTN","VBECDCR",61,0)
 ; VBEC1A(1)=file navigated (pointer)
"RTN","VBECDCR",62,0)
 ; VBEC1A(2)=ien of record in file navigated
"RTN","VBECDCR",63,0)
 ; VBEC1A(3)=file navigate to (pointer)
"RTN","VBECDCR",64,0)
 ; VBEC1A(4)=ien of record in file navigated to
"RTN","VBECDCR",65,0)
 ; VBEC1A(5)=lrdfn1 dup blood component/blood component id (same patient)
"RTN","VBECDCR",66,0)
 ; VBEC1A(6)=lrdfn2 dup blood component/blood component id (diff patients)
"RTN","VBECDCR",67,0)
 ; VBEC1A(7)=blood component (pointer)
"RTN","VBECDCR",68,0)
 ; VBEC1A(8)=blood component id
"RTN","VBECDCR",69,0)
 ; VBEC1A(9)=user readable data integrity issue
"RTN","VBECDCR",70,0)
 ;
"RTN","VBECDCR",71,0)
 S:$D(ZTQUEUED) ZTREQ="@" S PAGE=1,(VBEC1,VBECXIT,VBECSTOP)=0,U="^"
"RTN","VBECDCR",72,0)
 S $P(LINE,"*",81)="",TODAY=$$FMTE^XLFDT($$DT^XLFDT(),1)
"RTN","VBECDCR",73,0)
 S VBEC(0)=$G(^VBEC(6001,VBECIEN,0))
"RTN","VBECDCR",74,0)
 F I=1:1:4 S VBEC(I)=$P(VBEC(0),U,I) ;internal
"RTN","VBECDCR",75,0)
 F I=1:1:4 S VBECX(I)=$$EXTERNAL^DILFD(6001,".0"_I,"L",VBEC(I)) ;external
"RTN","VBECDCR",76,0)
 D HDR ; header output
"RTN","VBECDCR",77,0)
 F  S VBEC1=$O(^VBEC(6001,VBECIEN,"ERR",VBEC1)) Q:'VBEC1  D  Q:VBECXIT!(VBECSTOP)
"RTN","VBECDCR",78,0)
 .I $$S^%ZTLOAD() S (ZTSTOP,VBECSTOP)=1 Q
"RTN","VBECDCR",79,0)
 .S VBECERR(0)=$G(^VBEC(6001,VBECIEN,"ERR",VBEC1,0))
"RTN","VBECDCR",80,0)
 .F I=1:1:9 S VBEC1A(I)=$P(VBECERR(0),U,I)
"RTN","VBECDCR",81,0)
 .S ERRTOT(VBEC1A(1))=+$G(ERRTOT(VBEC1A(1)))+1
"RTN","VBECDCR",82,0)
 .D FILE^DID(VBEC1A(1),"","NAME","VBECFR")
"RTN","VBECDCR",83,0)
 .D:VBEC1A(3) FILE^DID(VBEC1A(3),"","NAME","VBECTO")
"RTN","VBECDCR",84,0)
 .S VBECOMP=$$EXTERNAL^DILFD(6001.01,.07,"L",VBEC1A(7)) ; value or null
"RTN","VBECDCR",85,0)
 .S X=VBEC1A(9),DIWL=1,DIWR=55,DIWF="" D ^DIWP ; format text...
"RTN","VBECDCR",86,0)
 .W !,"File Navigated: "_VBECFR("NAME")_"("_VBEC1A(1)_")"
"RTN","VBECDCR",87,0)
 .I $Y>(IOSL-4) D EOS Q:VBECXIT
"RTN","VBECDCR",88,0)
 .W:VBEC1A(2) !,$$NAME(VBEC1A(1),VBEC1A(2))
"RTN","VBECDCR",89,0)
 .W:VBEC1A(3) !,"File Navigated To: "_VBECTO("NAME")_"("_VBEC1A(3)_")"
"RTN","VBECDCR",90,0)
 .I $Y>(IOSL-4) D EOS Q:VBECXIT
"RTN","VBECDCR",91,0)
 .W:VBEC1A(4) !,$$NAME(VBEC1A(3),VBEC1A(4))
"RTN","VBECDCR",92,0)
 .W:VBEC1A(5) !,"Similar Blood Component/Blood Component ID for Lab Data patient"
"RTN","VBECDCR",93,0)
 .W $S((VBEC1A(5)&VBEC1A(6)):"s:",(VBEC1A(5)&'VBEC1A(6)):":",1:"")
"RTN","VBECDCR",94,0)
 .I $Y>(IOSL-4) D EOS Q:VBECXIT
"RTN","VBECDCR",95,0)
 .W:VBEC1A(5) !?3,"LRDFN (IEN in Lab Data file): "_VBEC1A(5)
"RTN","VBECDCR",96,0)
 .W:VBEC1A(6) !?3,"LRDFN (conflicting patient IEN): "_VBEC1A(6)
"RTN","VBECDCR",97,0)
 .I $Y>(IOSL-4) D EOS Q:VBECXIT
"RTN","VBECDCR",98,0)
 .W:VBEC1A(7) !,"Blood Component: "_VBECOMP
"RTN","VBECDCR",99,0)
 .W:VBEC1A(8)'="" !,"Blood Component ID: "_VBEC1A(8)
"RTN","VBECDCR",100,0)
 .I $Y>(IOSL-4) D EOS Q:VBECXIT
"RTN","VBECDCR",101,0)
 .W !,"Data Integrity Issue: " S A=0
"RTN","VBECDCR",102,0)
 .I $Y>(IOSL-4) D EOS Q:VBECXIT  W !
"RTN","VBECDCR",103,0)
 .F  S A=$O(^UTILITY($J,"W",DIWL,A)) Q:'A!(VBECXIT)  D
"RTN","VBECDCR",104,0)
 ..I $Y>(IOSL-4) D EOS Q:VBECXIT  W !
"RTN","VBECDCR",105,0)
 ..W ?22,$G(^UTILITY($J,"W",DIWL,A,0)),!
"RTN","VBECDCR",106,0)
 ..Q
"RTN","VBECDCR",107,0)
 .K A,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,VBEC1A,VBECFR,VBECOMP,VBECTO,X,Z,^UTILITY($J,"W")
"RTN","VBECDCR",108,0)
 .Q
"RTN","VBECDCR",109,0)
 ;
"RTN","VBECDCR",110,0)
ERRTOT ; print error total for each file
"RTN","VBECDCR",111,0)
 I $Y>(IOSL-6) D EOS Q:VBECXIT  W !
"RTN","VBECDCR",112,0)
 S I=0 F  S I=$O(ERRTOT(I)) Q:'I  W !,"Total number of anomalies for file "_I_": "_$G(ERRTOT(I))
"RTN","VBECDCR",113,0)
 ;
"RTN","VBECDCR",114,0)
XIT ; cleanup after yourself before you go...
"RTN","VBECDCR",115,0)
 K A,DIRUT,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,DTOUT,DUOUT,ERRTOT,I,LINE,PAGE,TODAY,VBEC,VBEC1,VBEC1A,VBECERR,VBECFR,VBECOMP,VBECTO,VBECX,VBECXIT,X,Z,^UTILITY($J,"W"),VBECSTOP
"RTN","VBECDCR",116,0)
 Q
"RTN","VBECDCR",117,0)
 ;
"RTN","VBECDCR",118,0)
EOS ; end of screen check & refresh screen action
"RTN","VBECDCR",119,0)
 I $E(IOST)="C" K DIR S DIR(0)="E" D ^DIR S VBECXIT=$S(Y'>0:1,1:0) K DIR,X,Y
"RTN","VBECDCR",120,0)
 Q:VBECXIT
"RTN","VBECDCR",121,0)
HDR ; draw header
"RTN","VBECDCR",122,0)
 W:($E(IOST)="C")!(PAGE>1) @IOF
"RTN","VBECDCR",123,0)
 W !,$$CJ^XLFSTR("VistA Blood Bank Data Anomalies Report",80)
"RTN","VBECDCR",124,0)
 W !,"Date: ",TODAY,?69,"Page: ",PAGE S PAGE=PAGE+1
"RTN","VBECDCR",125,0)
 W !,"Process initiated by: "_$E(VBECX(4),1,25),?49,"Process: "_VBECX(2)
"RTN","VBECDCR",126,0)
 W !,"Start time: "_VBECX(1),?49,"Finish time: "_VBECX(3),!,LINE
"RTN","VBECDCR",127,0)
 Q
"RTN","VBECDCR",128,0)
 ;
"RTN","VBECDCR",129,0)
NAME(FILE,IEN) ; Using file number and ien, determine the value of the .01
"RTN","VBECDCR",130,0)
 ; field and pass it back (along with the data descriptor).
"RTN","VBECDCR",131,0)
 ; input: FILE-file number, either 2, 63, 65, or 66
"RTN","VBECDCR",132,0)
 ;        IEN-internal entry number of the record in question
"RTN","VBECDCR",133,0)
 ; output: (examples) Patient Name: Doe,John, Lab Data ID: 12345,
"RTN","VBECDCR",134,0)
 ;         Unit ID: ABC123, Blood Component: CPDA-1 RED BLOOD CELLS
"RTN","VBECDCR",135,0)
 ;
"RTN","VBECDCR",136,0)
 Q:FILE=2 "Patient Name: "_$P($G(^DPT(IEN,0)),U)_$S($P($G(^DPT(IEN,0)),U)]"":" ("_$E($P($G(^DPT(IEN,0)),U,9),1,3)_"-"_$E($P($G(^DPT(IEN,0)),U,9),4,5)_"-"_$E($P($G(^DPT(IEN,0)),U,9),6,9)_")",1:"")
"RTN","VBECDCR",137,0)
 Q:FILE=63 "Lab Data ID: "_$P($G(^LR(IEN,0)),U)
"RTN","VBECDCR",138,0)
 Q:FILE=65 "Unit ID: "_$P($G(^LRD(65,IEN,0)),U)
"RTN","VBECDCR",139,0)
 Q:FILE=66 "Blood Component: "_$P($G(^LAB(66,IEN,0)),U)
"RTN","VBECDCR",140,0)
 ;
"RTN","VBECDCSP")
0^33^B1068327^B1068327
"RTN","VBECDCSP",1,0)
VBECDCSP ;hoifo/gjc-site parameter enter/edit (#6000);Nov 21, 2002
"RTN","VBECDCSP",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCSP",3,0)
 ;
"RTN","VBECDCSP",4,0)
 ;Medical Device #:
"RTN","VBECDCSP",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCSP",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCSP",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCSP",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCSP",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCSP",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCSP",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCSP",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCSP",13,0)
 ;regulations.
"RTN","VBECDCSP",14,0)
 ;
"RTN","VBECDCSP",15,0)
 ;Call to ^DIC is supported by IA: 10006
"RTN","VBECDCSP",16,0)
 ;Call to ^DIE is supported by IA: 10018
"RTN","VBECDCSP",17,0)
 ;Call to GET1^DIQ is supported by IA: 2056
"RTN","VBECDCSP",18,0)
 ;Call to KSP^XUPARAM is supported by IA: 2541
"RTN","VBECDCSP",19,0)
 ;
"RTN","VBECDCSP",20,0)
EN ; entry point for site parameter enter/edit
"RTN","VBECDCSP",21,0)
 S (DIC,DIE)="^VBEC(6000,",DIC("A")="Select Facility: ",DIC(0)="QEALMNZ"
"RTN","VBECDCSP",22,0)
 S VBECDFLT=$$KSP^XUPARAM("INST")
"RTN","VBECDCSP",23,0)
 S:VBECDFLT DIC("B")=$$GET1^DIQ(4,VBECDFLT,.01)
"RTN","VBECDCSP",24,0)
 D ^DIC I Y=-1 D XIT Q
"RTN","VBECDCSP",25,0)
 S DA=+Y,DIE("NO^")="BACK",DR=".06R;.07R//VBECS DATA CONVERSION" D ^DIE
"RTN","VBECDCSP",26,0)
XIT ; kill and quit
"RTN","VBECDCSP",27,0)
 K %,D0,DA,DDH,DI,DIC,DIE,DQ,DR,DTOUT,DUOUT,DZ,I,VBECDFLT,X,Y
"RTN","VBECDCSP",28,0)
 Q
"RTN","VBECDCST")
0^34^B10953715^B10953715
"RTN","VBECDCST",1,0)
VBECDCST ;hoifo/gjc-print data from VBECS STANDARD TABLE DATA (#6007);Nov 21, 2002
"RTN","VBECDCST",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCST",3,0)
 ;
"RTN","VBECDCST",4,0)
 ;Medical Device #:
"RTN","VBECDCST",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCST",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCST",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCST",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCST",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCST",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCST",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCST",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCST",13,0)
 ;regulations.
"RTN","VBECDCST",14,0)
 ;
"RTN","VBECDCST",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCST",16,0)
 ;Call to EN1^DIP is supported by IA: 10010
"RTN","VBECDCST",17,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDCST",18,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDCST",19,0)
 ;
"RTN","VBECDCST",20,0)
EN ; entry point for standard table data report
"RTN","VBECDCST",21,0)
 ;
"RTN","VBECDCST",22,0)
 I $S($D(DUZ)[0:1,$D(DUZ(0))[0:1,'DUZ:1,DUZ=.5:1,1:0) W !!?3,$C(7),"DUZ & DUZ(0) must be defined to an active user (not POSTMASTER) in order to",!?3,"proceed." Q
"RTN","VBECDCST",23,0)
 ;
"RTN","VBECDCST",24,0)
 ; initialize the error trap
"RTN","VBECDCST",25,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCST",26,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCST",27,0)
 ;
"RTN","VBECDCST",28,0)
 ; check to see that data exists in the VBECS STANDARD TABLE DATA FILE
"RTN","VBECDCST",29,0)
 ; (#6007).
"RTN","VBECDCST",30,0)
 I '+$O(^VBEC(6007,0)) D  Q
"RTN","VBECDCST",31,0)
 .W !!?3,"There is no data in the VBECS STANDARD TABLE DATA FILE (#6007)",!,"to be printed.",$C(7)
"RTN","VBECDCST",32,0)
 .Q
"RTN","VBECDCST",33,0)
 ;
"RTN","VBECDCST",34,0)
 S VBECXIT=0 F  D  Q:VBECXIT
"RTN","VBECDCST",35,0)
 .; enter the FROM range for the attribute name
"RTN","VBECDCST",36,0)
 .S DIR(0)="FAO^1:175^K:X'?1AN.ANP X",DIR("A")="Start With Attribute Name: "
"RTN","VBECDCST",37,0)
 .S DIR("?",1)="  To sort in sequence, starting with a particular Attribute Name, enter that"
"RTN","VBECDCST",38,0)
 .S DIR("?",2)="  Attribute Name.  Some displays might take a while due to the number of"
"RTN","VBECDCST",39,0)
 .S DIR("?")="  records in the file."
"RTN","VBECDCST",40,0)
 .D ^DIR S:$D(DTOUT)!$D(DUOUT) VBECXIT=-1 Q:VBECXIT
"RTN","VBECDCST",41,0)
 .S VBECFR=Y K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","VBECDCST",42,0)
 .; enter the TO range for the attribute name
"RTN","VBECDCST",43,0)
 .S DIR(0)="FAO^1:175^K:X'?1AN.ANP X",DIR("A")="Go To Attribute Name: "
"RTN","VBECDCST",44,0)
 .S DIR("?",1)="  To sort in sequence, up to a particular Attribute Name, enter that"
"RTN","VBECDCST",45,0)
 .S DIR("?",2)="  Attribute Name.  Some displays might take a while due to the number"
"RTN","VBECDCST",46,0)
 .S DIR("?")="  of records in the file."
"RTN","VBECDCST",47,0)
 .D ^DIR S:$D(DTOUT)!$D(DUOUT) VBECXIT=-1 Q:VBECXIT
"RTN","VBECDCST",48,0)
 .S VBECTO=Y K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","VBECDCST",49,0)
 .I $L(VBECFR),$L(VBECTO),(VBECFR]VBECTO) W !!,"'Go To' value must follow the 'Start With' value.",!
"RTN","VBECDCST",50,0)
 .ELSE  S VBECXIT=1
"RTN","VBECDCST",51,0)
 .Q
"RTN","VBECDCST",52,0)
 I VBECXIT=-1 D XIT QUIT
"RTN","VBECDCST",53,0)
 I VBECFILE=61.3 D GO613
"RTN","VBECDCST",54,0)
 I VBECFILE=65.4 D GO654
"RTN","VBECDCST",55,0)
 Q
"RTN","VBECDCST",56,0)
 ;
"RTN","VBECDCST",57,0)
GO613 ; entry point for antigen/antibody report
"RTN","VBECDCST",58,0)
 S L=0,DIC="^VBEC(6007,"
"RTN","VBECDCST",59,0)
 S FLDS=".01;C1;L28;""Name"",.04;C30;""Antibody/Antigen"",.02;C50;""SNOMED"""
"RTN","VBECDCST",60,0)
 S BY=".11,.01",FR="61.3,"_VBECFR,TO="61.3,"_VBECTO D EN1^DIP
"RTN","VBECDCST",61,0)
 D XIT
"RTN","VBECDCST",62,0)
 Q
"RTN","VBECDCST",63,0)
 ;
"RTN","VBECDCST",64,0)
GO654 ; entry point for transfusion reaction report
"RTN","VBECDCST",65,0)
 S L=0,DIC="^VBEC(6007,"
"RTN","VBECDCST",66,0)
 S FLDS=".01;C1;""Transfusion Reaction"""
"RTN","VBECDCST",67,0)
 S BY=".11,.01",FR="65.4,"_VBECFR,TO="65.4,"_VBECTO D EN1^DIP
"RTN","VBECDCST",68,0)
 D XIT
"RTN","VBECDCST",69,0)
 Q
"RTN","VBECDCST",70,0)
 ;
"RTN","VBECDCST",71,0)
XIT ; clean up symbol table, exit
"RTN","VBECDCST",72,0)
 K BY,D0,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,DIWF,FR,L,POP,TO,VBECFR,VBECTO,VBECXIT,X,Y
"RTN","VBECDCST",73,0)
 Q
"RTN","VBECDCST",74,0)
 ;
"RTN","VBECDCU")
0^35^B32610200^B32610200
"RTN","VBECDCU",1,0)
VBECDCU ;hoifo/gjc-data conversion & pre-implementation utilities;Nov 21, 2002
"RTN","VBECDCU",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCU",3,0)
 ;
"RTN","VBECDCU",4,0)
 ;Medical Device #:
"RTN","VBECDCU",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCU",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCU",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCU",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCU",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCU",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCU",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCU",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCU",13,0)
 ;regulations.
"RTN","VBECDCU",14,0)
 ;
"RTN","VBECDCU",15,0)
 ;Call to $$GTF^%ZISH is supported by IA: 2320
"RTN","VBECDCU",16,0)
 ;Call to $$EXTERNAL^DILFD is supported by IA: 2055
"RTN","VBECDCU",17,0)
 ;Call to GETS^DIQ is supported by IA: 2056
"RTN","VBECDCU",18,0)
 ;Call to GETICN^MPIF001 is supported by IA: 2701
"RTN","VBECDCU",19,0)
 ;Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECDCU",20,0)
 ;Call to SETUP^XQALERT is supported by IA: 10081
"RTN","VBECDCU",21,0)
 ;Call to GETS^DIQ is supported by IA: 10060
"RTN","VBECDCU",22,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDCU",23,0)
 ;Call to $$FMADD^XLFDT is supported by IA: 10103
"RTN","VBECDCU",24,0)
 ;
"RTN","VBECDCU",25,0)
GTF(VBECGR,VBECIS,VBECF) ; save off data stored in a global to a VMS
"RTN","VBECDCU",26,0)
 ; or NT/2000 file.
"RTN","VBECDCU",27,0)
 ; input: VBECGR=global reference
"RTN","VBECDCU",28,0)
 ;        VBECIS=Identifies the incrementing subscript level. For
"RTN","VBECDCU",29,0)
 ;               example, if you pass ^TMP(115,1,1,0) as the global
"RTN","VBECDCU",30,0)
 ;               reference parameter, and pass 3 as the incr_subsc
"RTN","VBECDCU",31,0)
 ;               parameter, $$GTF will increment the third subscript,
"RTN","VBECDCU",32,0)
 ;               ^TMP(115,1,x), but will read nodes at the full global
"RTN","VBECDCU",33,0)
 ;               reference ^TMP(115,1,x,0).
"RTN","VBECDCU",34,0)
 ;         VBECF=Name of the file where the data is to reside.
"RTN","VBECDCU",35,0)
 ; output: 1=success, 0=failure
"RTN","VBECDCU",36,0)
 ;
"RTN","VBECDCU",37,0)
 ; Here's an example (from the Hines development account) on how the
"RTN","VBECDCU",38,0)
 ; the call works: S Y=$$GTF^%ZISH($NA(^TMP("VBEC NP",$J,1,0)),3,
"RTN","VBECDCU",39,0)
 ; "SYS$USER:[CEBE]","ZZNP.TXT")
"RTN","VBECDCU",40,0)
 S VBECP=$P($G(^VBEC(6000,1,0)),U,6) ; VBECP=file path
"RTN","VBECDCU",41,0)
 ;
"RTN","VBECDCU",42,0)
 Q $$GTF^%ZISH(VBECGR,VBECIS,VBECP,VBECF)
"RTN","VBECDCU",43,0)
 ;
"RTN","VBECDCU",44,0)
DELETE(VBECY) ; purge the ^TMP("VBEC*",$J) global
"RTN","VBECDCU",45,0)
 ; input: VBECY=$J or process id, or zero to kill along all processes.
"RTN","VBECDCU",46,0)
 S VBECY=+$G(VBECY),VBECX="VBEC FINI"
"RTN","VBECDCU",47,0)
 F  S VBECX=$O(^TMP(VBECX)) Q:VBECX=""!(VBECX]"VBEC63 zzz")  D  Q:'VBECYN
"RTN","VBECDCU",48,0)
 .I '$D(VBECYN)#2 D  Q:'VBECYN
"RTN","VBECDCU",49,0)
 ..K DIR,DTOUT,DUOUT,DIRUT
"RTN","VBECDCU",50,0)
 ..S DIR(0)="Y",DIR("A")="Are you sure you want to delete the temporary globals"
"RTN","VBECDCU",51,0)
 ..S DIR("B")="No",DIR("?")="Answer 'Yes' to delete globals, or 'No' forgo global deletion." D ^DIR S VBECYN=Y
"RTN","VBECDCU",52,0)
 ..S:$D(DIRUT)#2 VBECYN=0
"RTN","VBECDCU",53,0)
 ..Q
"RTN","VBECDCU",54,0)
 .W !,"Killing ^TMP("""_VBECX_""""
"RTN","VBECDCU",55,0)
 .W $S(VBECY>0:","_VBECY_")",1:")")
"RTN","VBECDCU",56,0)
 .K:VBECY ^TMP(VBECX,VBECY) K:'VBECY ^TMP(VBECX)
"RTN","VBECDCU",57,0)
 .H 1
"RTN","VBECDCU",58,0)
 .Q
"RTN","VBECDCU",59,0)
 W:'$D(VBECYN)#2 !!,"No data to delete."
"RTN","VBECDCU",60,0)
 W:$D(VBECYN)#2 !!,"Done..." K VBECX,VBECY,VBECYN,X,Y
"RTN","VBECDCU",61,0)
 Q
"RTN","VBECDCU",62,0)
 ;
"RTN","VBECDCU",63,0)
NP200(IEN) ; gather New Person information in order to populate
"RTN","VBECDCU",64,0)
 ; the appropriate SQL Server table on the VBECS side.
"RTN","VBECDCU",65,0)
 ; Name, SSN, Termination Date, & Division are the attributes returned.
"RTN","VBECDCU",66,0)
 ; Input: IEN the internal entry number of the New Person record.
"RTN","VBECDCU",67,0)
 ; We'll be saving New Person (NP) data off in ^TMP("VBEC NP",$J) and
"RTN","VBECDCU",68,0)
 ; plan to create our NP VMS file after all other VMS files are closed.
"RTN","VBECDCU",69,0)
 Q:IEN=""!(+IEN'=IEN)  K LRARY N LRSTR
"RTN","VBECDCU",70,0)
 S LRTRMDT="" D GETS^DIQ(200,IEN_",",".01;9;9.2;16*","EI","LRARY")
"RTN","VBECDCU",71,0)
 S LRNAME=LRARY(200,IEN_",",.01,"E")
"RTN","VBECDCU",72,0)
 S LRSSN=LRARY(200,IEN_",",9,"E") S:LRSSN="" LRSSN="*"
"RTN","VBECDCU",73,0)
 Q:($D(^TMP("VBECX NP",$J,IEN,LRNAME,LRSSN)))#2  ; data already exists
"RTN","VBECDCU",74,0)
 S:LRARY(200,IEN_",",9.2,"I")'="" LRTRMDT=$$DATE(LRARY(200,IEN_",",9.2,"I"))
"RTN","VBECDCU",75,0)
 I ($D(LRARY(200.02))\10) D
"RTN","VBECDCU",76,0)
 .S LRA="" F  S LRA=$O(LRARY(200.02,LRA)) Q:LRA=""  D
"RTN","VBECDCU",77,0)
 ..S DIVPTR=LRARY(200.02,LRA,.01,"I")
"RTN","VBECDCU",78,0)
 ..S DIVNAME=LRARY(200.02,LRA,.01,"E")
"RTN","VBECDCU",79,0)
 ..S CNT=$$CNT("VBEC NP",$J),CNT=CNT+1
"RTN","VBECDCU",80,0)
 ..S LRSTR=IEN_"^"_LRNAME_"^"_LRSSN_"^"_LRTRMDT_"^"_DIVPTR_"^"_DIVNAME
"RTN","VBECDCU",81,0)
 ..S VBECTOT("VBEC NP")=+$G(VBECTOT("VBEC NP"))+1
"RTN","VBECDCU",82,0)
 ..S ^TMP("VBEC NP",$J,CNT,0)=LRSTR_$C(13)
"RTN","VBECDCU",83,0)
 ..S ^TMP("VBECX NP",$J,IEN,LRNAME,LRSSN)=""
"RTN","VBECDCU",84,0)
 ..Q
"RTN","VBECDCU",85,0)
 .Q
"RTN","VBECDCU",86,0)
 E  D
"RTN","VBECDCU",87,0)
 .S CNT=$$CNT("VBEC NP",$J),CNT=CNT+1
"RTN","VBECDCU",88,0)
 .S LRSTR=IEN_"^"_LRNAME_"^"_LRSSN_"^"_"^"_LRTRMDT_"^^"
"RTN","VBECDCU",89,0)
 .S VBECTOT("VBEC NP")=+$G(VBECTOT("VBEC NP"))+1
"RTN","VBECDCU",90,0)
 .S ^TMP("VBEC NP",$J,CNT,0)=LRSTR_$C(13)
"RTN","VBECDCU",91,0)
 .S ^TMP("VBECX NP",$J,IEN,LRNAME,LRSSN)=""
"RTN","VBECDCU",92,0)
 .Q
"RTN","VBECDCU",93,0)
 K CNT,DIVNAME,DIVPTR,LRA,LRNAME,LRSSN,LRTRMDT ; LRTRMDT=termination date
"RTN","VBECDCU",94,0)
 K LRARY Q
"RTN","VBECDCU",95,0)
 ;
"RTN","VBECDCU",96,0)
XTRNL(LRFL,LRFD,LRFLG,LRINT) ; change data from its internal value
"RTN","VBECDCU",97,0)
 ; to its external value.
"RTN","VBECDCU",98,0)
 ; LRFL-file or subfile number   LRFLD-field number
"RTN","VBECDCU",99,0)
 ; LRFLG-Output transform for pointer data. 'F' if the first field
"RTN","VBECDCU",100,0)
 ;  in a pointer chain has a output transform, apply the transform
"RTN","VBECDCU",101,0)
 ;  & quit.  'L' if the last field in a pointer chain has a output
"RTN","VBECDCU",102,0)
 ;  transform, apply the transform & quit.  'U' if the first field
"RTN","VBECDCU",103,0)
 ;  in a pointer chain has a output transform, apply the transform
"RTN","VBECDCU",104,0)
 ;  to the last field in the pointer chain & quit.
"RTN","VBECDCU",105,0)
 ;  function documented @ VA FileMan v22 Programmer Manual pg:2-171
"RTN","VBECDCU",106,0)
 ;  LRINT-the internal value being converted.
"RTN","VBECDCU",107,0)
 Q $$EXTERNAL^DILFD(LRFL,LRFD,LRFLG,LRINT)
"RTN","VBECDCU",108,0)
 ;
"RTN","VBECDCU",109,0)
DATE(LRDATE) ; date/time transformed.  Initial format created in order to
"RTN","VBECDCU",110,0)
 ; handle an individual's date of birth, input in 'LRDATE', formatted
"RTN","VBECDCU",111,0)
 ; 'mm/dd/yy<sp>time'.
"RTN","VBECDCU",112,0)
 ;
"RTN","VBECDCU",113,0)
 ; check for midnight date/time (yyymmdd.24) and convert it to
"RTN","VBECDCU",114,0)
 ; a valid SQL Server date/time.  Example: if date/time is: 3030715.24
"RTN","VBECDCU",115,0)
 ; convert to: 3030715.235959
"RTN","VBECDCU",116,0)
 I $P(LRDATE,".",2)=24 S LRDATE=$$FMADD^XLFDT(LRDATE,0,0,0,-1)
"RTN","VBECDCU",117,0)
 ;
"RTN","VBECDCU",118,0)
 S LRMTH="^Jan^Feb^Mar^Apr^May^Jun^Jul^Aug^Sep^Oct^Nov^Dec"
"RTN","VBECDCU",119,0)
 S LRDATE=$$FMTE^XLFDT(LRDATE,1),LRDATE=$TR(LRDATE,",","")
"RTN","VBECDCU",120,0)
 S LRDATE=$TR(LRDATE,$P(LRDATE," "),$L($P(LRMTH,U_$P(LRDATE," ")),U))
"RTN","VBECDCU",121,0)
 S LRDATE=$TR($P(LRDATE,"@")," ","/")_$S(LRDATE["@":"@"_$P(LRDATE,"@",2),1:"")
"RTN","VBECDCU",122,0)
 Q $TR(LRDATE,"@"," ")
"RTN","VBECDCU",123,0)
 ;
"RTN","VBECDCU",124,0)
ALERT(DUZ,TSK,FLG,ABN) ;trigger an alert when the pre-implementation or
"RTN","VBECDCU",125,0)
 ;data conversion finishes.
"RTN","VBECDCU",126,0)
 ;Input: DUZ-The user initiating these tasks, and ultimately informed
"RTN","VBECDCU",127,0)
 ;           when the process completes.
"RTN","VBECDCU",128,0)
 ;       TSK-The task being executed; either the pre-implementation or
"RTN","VBECDCU",129,0)
 ;           the data conversion.  '1' implies data conversion, '0'
"RTN","VBECDCU",130,0)
 ;           implies the pre-implementation
"RTN","VBECDCU",131,0)
 ;       FLG-status of data conversion: >0=anomalies, 0=no anomalies
"RTN","VBECDCU",132,0)
 ;       ABN-flag to indicate if abnormal conditions exist, specifically
"RTN","VBECDCU",133,0)
 ;           if the user stopped the process via TaskMan, or if data to
"RTN","VBECDCU",134,0)
 ;           convert does not exist.  Input will be -1 for no data, and
"RTN","VBECDCU",135,0)
 ;           "S" if the user stopped the process.
"RTN","VBECDCU",136,0)
 ;
"RTN","VBECDCU",137,0)
 K XQA,XQAMSG,XQAROU S XQA(DUZ)=""
"RTN","VBECDCU",138,0)
 S XQAMSG="VBECS "_$S(TSK=0:"Anomaly Check",1:"Data Conversion")_" complete"
"RTN","VBECDCU",139,0)
 S:ABN=-1 XQAMSG=XQAMSG_", data non-existent"
"RTN","VBECDCU",140,0)
 S:ABN="S" XQAMSG=XQAMSG_", user terminated"
"RTN","VBECDCU",141,0)
 I FLG=0 S XQAMSG=XQAMSG_", anomalies non-existent."
"RTN","VBECDCU",142,0)
 I FLG>0 S XQAMSG=XQAMSG_", anomalies identified."
"RTN","VBECDCU",143,0)
 D SETUP^XQALERT K XQA,XQAMSG,XQAROU
"RTN","VBECDCU",144,0)
 Q
"RTN","VBECDCU",145,0)
 ;
"RTN","VBECDCU",146,0)
RPT(TSK) ;report header
"RTN","VBECDCU",147,0)
 ; Input: TSK-The task being executed; either the pre-implementation or
"RTN","VBECDCU",148,0)
 ;           the data conversion.  'DC' implies data conversion, 'PI'
"RTN","VBECDCU",149,0)
 ;           implies the pre-implementation
"RTN","VBECDCU",150,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","VBECDCU",151,0)
 S $P(VBECLN,"-",(IOM+1))=""
"RTN","VBECDCU",152,0)
 W !,"VBECS "_$S(TSK="DC"=1:"data conversion",1:"pre-implementation")_" process",?$S(IOM=132:117,1:65),"Page 1 of 1",VBECLN
"RTN","VBECDCU",153,0)
 Q
"RTN","VBECDCU",154,0)
 ;
"RTN","VBECDCU",155,0)
CNT(X,Y) ; return the value of a subscript
"RTN","VBECDCU",156,0)
 ; Input: X=the name of the subscript, i.e., "VBEC63 DEM"
"RTN","VBECDCU",157,0)
 ;        Y=$J
"RTN","VBECDCU",158,0)
 Q +$O(^TMP(X,Y,999999999999),-1)
"RTN","VBECDCU",159,0)
 ;
"RTN","VBECDCU",160,0)
SWAP(LRF,LRP) ; swap the VistA pointer (or free-text blood supplier) data for
"RTN","VBECDCU",161,0)
 ; the SQL GUID equivalent.  In the case that the entry is not mapped
"RTN","VBECDCU",162,0)
 ; (VistA pointer has no corresponding SQL Server GUID), this utility
"RTN","VBECDCU",163,0)
 ; returns null.
"RTN","VBECDCU",164,0)
 ; input: LRF=file being mapped
"RTN","VBECDCU",165,0)
 ;        LRP=VistA pointer value (IEN or record 'pointed to')
"RTN","VBECDCU",166,0)
 ;return: null or a valid GUID
"RTN","VBECDCU",167,0)
 ;
"RTN","VBECDCU",168,0)
 Q:LRF="" "" Q:LRP="" "" N VBEC6005,VBEC6007
"RTN","VBECDCU",169,0)
 I LRF'=66.01 S VBEC6005=$O(^VBEC(6005,"B",LRF_"-"_LRP,""))
"RTN","VBECDCU",170,0)
 E  S VBEC6005=$O(^VBEC(6005,"AA",LRF,LRP,""))
"RTN","VBECDCU",171,0)
 Q:VBEC6005="" ""
"RTN","VBECDCU",172,0)
 S VBEC6007=$P($G(^VBEC(6005,VBEC6005,0)),U,5)
"RTN","VBECDCU",173,0)
 Q:VBEC6007="" ""
"RTN","VBECDCU",174,0)
 Q $P($G(^VBEC(6007,VBEC6007,0)),U,3)
"RTN","VBECDCU",175,0)
 ;
"RTN","VBECDCU",176,0)
BLUT(Y) ; obtain ABO GROUP (#.05) & RH TYPE (#.06) from Lab Data (#63) file
"RTN","VBECDCU",177,0)
 S Y("ABO")=$P($G(^LR(Y,0)),U,5),Y("RH")=$E($P($G(^LR(Y,0)),U,6),1)
"RTN","VBECDCU",178,0)
 ; note: we're interested 'n' for negative & 'p' for positive (1 char)
"RTN","VBECDCU",179,0)
 Q Y("ABO")_U_Y("RH")
"RTN","VBECDCU",180,0)
 ;
"RTN","VBECDCU",181,0)
ICN(DFN) ; obtain the patient's ICN.  DFN is input, and either the ICN,
"RTN","VBECDCU",182,0)
 ; if it exists, or null will be returned.
"RTN","VBECDCU",183,0)
 ;   APIs used by this subroutine (in extrinsic function $$ICN)
"RTN","VBECDCU",184,0)
 ; #2701-$$GETICN^MPIF001(DFN), this function returns the ICN
"RTN","VBECDCU",185,0)
 S LRICN="" ; default to null
"RTN","VBECDCU",186,0)
 I ($T(GETICN^MPIF001)'="") D
"RTN","VBECDCU",187,0)
 .; the $$GETICN^MPIF001 returns delimited data.  If the ICN exists,
"RTN","VBECDCU",188,0)
 .; it's returned as ICN_'V'_ICN checksum.  If it doesn't exist, it's
"RTN","VBECDCU",189,0)
 .; returned as -1_'^'_error message.  We change -1 to null for SQL
"RTN","VBECDCU",190,0)
 .S LRICN=$$GETICN^MPIF001(DFN),LRICN=$S($P(LRICN,"^")="-1":"",1:LRICN)
"RTN","VBECDCU",191,0)
 .Q
"RTN","VBECDCU",192,0)
 Q LRICN
"RTN","VBECDCU",193,0)
 ;
"RTN","VBECDCU1")
0^36^B14426272^B14426272
"RTN","VBECDCU1",1,0)
VBECDCU1 ;hoifo/gjc-data conversion & pre-implementation utilities;Nov 21, 2002
"RTN","VBECDCU1",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCU1",3,0)
 ;
"RTN","VBECDCU1",4,0)
 ;Medical Device #:
"RTN","VBECDCU1",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCU1",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCU1",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCU1",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCU1",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCU1",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCU1",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCU1",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCU1",13,0)
 ;regulations.
"RTN","VBECDCU1",14,0)
 ;
"RTN","VBECDCU1",15,0)
 ;Call to ^%ZTER is supported by IA: 1621
"RTN","VBECDCU1",16,0)
 ;Call to $$GET1^DIQ is supported by IA: 2056
"RTN","VBECDCU1",17,0)
 ;Call to SETUP^XQALERT is supported by IA: 10081
"RTN","VBECDCU1",18,0)
 ;
"RTN","VBECDCU1",19,0)
ATTR() ; select the data family to display
"RTN","VBECDCU1",20,0)
 ; Output: the file that the VistA data resides in as well as the full
"RTN","VBECDCU1",21,0)
 ;         name of the data family -  EX: 61.3^Antigen/Antibody
"RTN","VBECDCU1",22,0)
 ;
"RTN","VBECDCU1",23,0)
 K DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y N VBECFILE,VBECATT
"RTN","VBECDCU1",24,0)
 ;S DIR(0)="S^AA:Antigen/Antibody;BP:Blood Product;BS:Blood Supplier;TR:Transfusion Reaction",DIR("A")="Select the unmapped data attribute to display"
"RTN","VBECDCU1",25,0)
 S DIR(0)="S^AA:Antigen/Antibody;TR:Transfusion Reaction",DIR("A")="Select the unmapped data attribute to display"
"RTN","VBECDCU1",26,0)
 S DIR("?",1)="Enter 'AA' for Antibodies and Antigens (Vista File: Function Field #61.3)"
"RTN","VBECDCU1",27,0)
 ;S DIR("?",2)="Enter 'BP' for Blood Product (Vista File: Blood Product #66)"
"RTN","VBECDCU1",28,0)
 ;S DIR("?",3)="Enter 'BS' for Blood Supplier"
"RTN","VBECDCU1",29,0)
 S DIR("?",2)="Enter 'TR' for Transfusion Reaction (VistA File: Blood Bank Utility"
"RTN","VBECDCU1",30,0)
 S DIR("?")="#65.4)" D ^DIR
"RTN","VBECDCU1",31,0)
 I $D(DIRUT) K DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y S (VBECFILE,VBECATT)=""
"RTN","VBECDCU1",32,0)
 E  S VBECFILE=$S(Y="AA":61.3,1:65.4),VBECATT=Y(0)
"RTN","VBECDCU1",33,0)
 ;E  S VBECFILE=$S(Y="AA":61.3,Y="TR":65.4,Y="BP":66,1:66.01),VBECATT=Y(0)
"RTN","VBECDCU1",34,0)
 Q VBECFILE_"^"_VBECATT
"RTN","VBECDCU1",35,0)
 ;
"RTN","VBECDCU1",36,0)
BRKPNT(LRDFN,DFN) ; check for broken pointers between files 2 & 63.
"RTN","VBECDCU1",37,0)
 ; Check the pointer from the Patient (#2) to the Lab Data (#63)
"RTN","VBECDCU1",38,0)
 ; file against the Parent File (#.02), piece two of LRDATA, and
"RTN","VBECDCU1",39,0)
 ; Name (#.03), piece three of LRDATA, fields on the Lab Data file.
"RTN","VBECDCU1",40,0)
 ; Parent File field value must equal 2 (Pat. file) & Name field
"RTN","VBECDCU1",41,0)
 ; value must equal the DFN of the patient for the pointer to be
"RTN","VBECDCU1",42,0)
 ; correct.
"RTN","VBECDCU1",43,0)
 ;
"RTN","VBECDCU1",44,0)
 ; Input LRDFN: pointer, ien of the Lab Data record in the Patient file
"RTN","VBECDCU1",45,0)
 ;         DFN: DFN of the patient in the Patient file
"RTN","VBECDCU1",46,0)
 ;     Returns: 1 if the link between the files is broken, else 0
"RTN","VBECDCU1",47,0)
 ;
"RTN","VBECDCU1",48,0)
 N LRDATA S LRDATA=$G(^LR(LRDFN,0))
"RTN","VBECDCU1",49,0)
 Q $S($P(LRDATA,U,2)'=2:1,$P(LRDATA,U,3)'=DFN:1,1:0)
"RTN","VBECDCU1",50,0)
 ;
"RTN","VBECDCU1",51,0)
SAVE ; Save off the legacy Blood Bank data into globals, ^TMP(name_space,$J)
"RTN","VBECDCU1",52,0)
 ; and then move data from globals to either VMS files or text files on
"RTN","VBECDCU1",53,0)
 ; a Microsoft machine.
"RTN","VBECDCU1",54,0)
 ;
"RTN","VBECDCU1",55,0)
 ;           global subscript to file name conversion
"RTN","VBECDCU1",56,0)
 ;           ---------------------------------------- 
"RTN","VBECDCU1",57,0)
 ;"VBEC63 PAT"   ->  "VBEC63_PAT"
"RTN","VBECDCU1",58,0)
 ;"VBEC63 ANTIP" ->  "VBEC63_ANTIP"
"RTN","VBECDCU1",59,0)
 ;"VBEC63 ANTIA" ->  "VBEC63_ANTIA"
"RTN","VBECDCU1",60,0)
 ;"VBEC63 AI"    ->  "VBEC63_AI"
"RTN","VBECDCU1",61,0)
 ;"VBEC63 BBC"   ->  "VBEC63_BBC"
"RTN","VBECDCU1",62,0)
 ;"VBEC63 TD"    ->  "VBEC63_TD"
"RTN","VBECDCU1",63,0)
 ;"VBEC63 TRD"   ->  "VBEC63_TRD"
"RTN","VBECDCU1",64,0)
 ;"VBEC63 TC"    ->  "VBEC63_TC"
"RTN","VBECDCU1",65,0)
 ;"VBEC63 TRC"   ->  "VBEC63_TRC"
"RTN","VBECDCU1",66,0)
 ;"VBEC FINIS"   ->  "VBEC_FINIS"
"RTN","VBECDCU1",67,0)
 ;
"RTN","VBECDCU1",68,0)
 N LRDATA,LRNAME,LRNODE,LRC,LRX
"RTN","VBECDCU1",69,0)
 S LRDATA=0 ; if data, flip LRDATA to 1
"RTN","VBECDCU1",70,0)
 S LRDATA=$$DATA($J)
"RTN","VBECDCU1",71,0)
 I 'LRDATA DO ALERT^VBECDCU(DUZ,VBECCNV,0,-1) QUIT
"RTN","VBECDCU1",72,0)
 F VBECI=1:1:7 S VBECI1=$P($T(SUBS+VBECI),";;",2) I '$D(^TMP(VBECI1,$J)) S ^TMP(VBECI1,$J)="" ;RLM 10/28/05
"RTN","VBECDCU1",73,0)
 ;
"RTN","VBECDCU1",74,0)
 ; Set DBCONV.INI file.  This will tell the system where to find the
"RTN","VBECDCU1",75,0)
 ; database on the VBECS system
"RTN","VBECDCU1",76,0)
 S ^TMP("DBCONV.INI",$J,1,0)="[database]"
"RTN","VBECDCU1",77,0)
 S ^TMP("DBCONV.INI",$J,2,0)="database name="_VBECDBN
"RTN","VBECDCU1",78,0)
 S ^TMP("DBCONV.INI",$J,3,0)="[server]"
"RTN","VBECDCU1",79,0)
 S ^TMP("DBCONV.INI",$J,4,0)="server name="_VBECDBN1
"RTN","VBECDCU1",80,0)
 S LRNODE="^TMP(""DBCONV.INI"","_$J_",1,0)"
"RTN","VBECDCU1",81,0)
 S LRFLG=$$GTF^VBECDCU($NA(@LRNODE),3,"DBCONV.INI")
"RTN","VBECDCU1",82,0)
 ;
"RTN","VBECDCU1",83,0)
 ; Set finish global.  This global is used to flag the SQL Server box
"RTN","VBECDCU1",84,0)
 ; that data exists, and that the data can be set into SQL tables.
"RTN","VBECDCU1",85,0)
 ;
"RTN","VBECDCU1",86,0)
 S LRX="VBEC FINI"
"RTN","VBECDCU1",87,0)
 F  S LRX=$O(^TMP(LRX)) Q:LRX=""!(LRX]"VBEC63 zzz")  D
"RTN","VBECDCU1",88,0)
 .S LRNODE="^TMP("""_LRX_""","_$J_",1,0)"
"RTN","VBECDCU1",89,0)
 .S LRNAME=$TR(LRX," ","_")_".TXT"
"RTN","VBECDCU1",90,0)
 .S LRFLG=$$GTF^VBECDCU($NA(@LRNODE),3,LRNAME)
"RTN","VBECDCU1",91,0)
 .Q
"RTN","VBECDCU1",92,0)
 Q
"RTN","VBECDCU1",93,0)
 ;
"RTN","VBECDCU1",94,0)
DATA(Y) ; determine if we've captured data and create empty files if no data found
"RTN","VBECDCU1",95,0)
 ;  Input: Y=$J or process id
"RTN","VBECDCU1",96,0)
 K LRXX N LRZ S LRXX="VBEC FINI",LRZ=0
"RTN","VBECDCU1",97,0)
 F  S LRXX=$O(^TMP(LRXX)) Q:LRXX=""!(LRXX]"VBEC63 zzz")  D
"RTN","VBECDCU1",98,0)
  . I $E(LRXX,1,4)="VBEC",('$D(^TMP(LRXX,Y))\10) S ^TMP(LRXX,Y,1,0)=""
"RTN","VBECDCU1",99,0)
  . Q
"RTN","VBECDCU1",100,0)
 K LRXX Q 1
"RTN","VBECDCU1",101,0)
 ;
"RTN","VBECDCU1",102,0)
ERR ;come here on error, record error in error trap and alert all VBEC mail
"RTN","VBECDCU1",103,0)
 ;group members
"RTN","VBECDCU1",104,0)
 N XQA,XQAMSG
"RTN","VBECDCU1",105,0)
 ;record error & write message
"RTN","VBECDCU1",106,0)
 S XQA(DUZ)="",XQAMSG="Option "_$TR($E($G(XQY0),1,30),"^","")_" has encountered an Error."
"RTN","VBECDCU1",107,0)
 ; IA: 10111 read ^XMB(3.8,DO,0) with FileMan (supported)
"RTN","VBECDCU1",108,0)
 S VBECMG=$$GET1^DIQ(3.8,+$P($G(^VBEC(6000,1,0)),U,7)_",",.01)
"RTN","VBECDCU1",109,0)
 S:VBECMG'="" XQA("G."_VBECMG)=""
"RTN","VBECDCU1",110,0)
 D ^%ZTER,SETUP^XQALERT K VBECMG
"RTN","VBECDCU1",111,0)
 S LRSTOP=-1 ;data conversion/integrity checker must stop processing
"RTN","VBECDCU1",112,0)
 Q
"RTN","VBECDCU1",113,0)
 ;
"RTN","VBECDCU1",114,0)
SUBS ;
"RTN","VBECDCU1",115,0)
 ;;VBEC63 PAT
"RTN","VBECDCU1",116,0)
 ;;VBEC63 ANTIP
"RTN","VBECDCU1",117,0)
 ;;VBEC63 ANTIA
"RTN","VBECDCU1",118,0)
 ;;VBEC63 AI
"RTN","VBECDCU1",119,0)
 ;;VBEC63 BBC
"RTN","VBECDCU1",120,0)
 ;;VBEC63 TRD
"RTN","VBECDCU1",121,0)
 ;;VBEC63 TRC
"RTN","VBECDCU1",122,0)
 ;;VBEC FINIS
"RTN","VBECDCU1",123,0)
FILES ; here are the file names for used for the legacy Blood Bank data
"RTN","VBECDCU1",124,0)
 ;;VBEC63_PAT
"RTN","VBECDCU1",125,0)
 ;;VBEC63_ANTIP
"RTN","VBECDCU1",126,0)
 ;;VBEC63_ANTIA
"RTN","VBECDCU1",127,0)
 ;;VBEC63_AI
"RTN","VBECDCU1",128,0)
 ;;VBEC63_BBC
"RTN","VBECDCU1",129,0)
 ;;VBEC63_TRD
"RTN","VBECDCU1",130,0)
 ;;VBEC63_TRC
"RTN","VBECDCU1",131,0)
 ;;VBEC_FINIS
"RTN","VBECDCU1",132,0)
 ;;
"RTN","VBECDCU2")
0^37^B36794365^B36794365
"RTN","VBECDCU2",1,0)
VBECDCU2 ;hoifo/gjc-data conversion & pre-implementation utilities;Nov 21, 2002
"RTN","VBECDCU2",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCU2",3,0)
 ;
"RTN","VBECDCU2",4,0)
 ;Medical Device #:
"RTN","VBECDCU2",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCU2",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCU2",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCU2",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCU2",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCU2",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCU2",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCU2",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCU2",13,0)
 ;regulations.
"RTN","VBECDCU2",14,0)
 ;
"RTN","VBECDCU2",15,0)
 ;Call to $$DEL^%ZISH is supported by IA: 2320
"RTN","VBECDCU2",16,0)
 ;Call to $$GET1^DID is supported by IA: 2052
"RTN","VBECDCU2",17,0)
 ;Call to FILE^DID is supported by IA: 2052
"RTN","VBECDCU2",18,0)
 ;Call to ^DIE is supported by IA: 10018
"RTN","VBECDCU2",19,0)
 ;Call to FILE^DIE is supported by IA: 2053
"RTN","VBECDCU2",20,0)
 ;Call to $$ROOT^DILFD is supported by IA: 2055
"RTN","VBECDCU2",21,0)
 ;Call to ^DIR is supported by IA: 10026
"RTN","VBECDCU2",22,0)
 ;Call to $$FMDIFF^XLFDT is supported by IA: 10103
"RTN","VBECDCU2",23,0)
 ;Call to ^DIK is supported by IA: 10013
"RTN","VBECDCU2",24,0)
 ;
"RTN","VBECDCU2",25,0)
SPARAM ; Site parameter enter edit.
"RTN","VBECDCU2",26,0)
 S DIE="^VBEC(6000,",DR=".01;.06R;.07R",DA=1 D ^DIE
"RTN","VBECDCU2",27,0)
 Q
"RTN","VBECDCU2",28,0)
 ;
"RTN","VBECDCU2",29,0)
NOMAP() ; check if the user has mapped VistA data (blood products, antigen/
"RTN","VBECDCU2",30,0)
 ; antibodies, blood supplier, and transfusion reactions) to their
"RTN","VBECDCU2",31,0)
 ; SQL Server equivalents.
"RTN","VBECDCU2",32,0)
 ; returns: '1' if any of the attributes identified above are not mapped
"RTN","VBECDCU2",33,0)
 N VBEC S VBEC=0
"RTN","VBECDCU2",34,0)
 ;I $O(^VBEC(6005,"AB",61.3,""))="" W !!,"Antigen/Antibodies have not been mapped, please resolve this issue before running the data conversion." S VBEC=1
"RTN","VBECDCU2",35,0)
 I $O(^VBEC(6005,"AB",61.3,""))="" W !!,"Antigen/Antibodies have not been mapped" D  ;RLM 10/27/05
"RTN","VBECDCU2",36,0)
  . S DIR("A")="Do you wish to continue? ",DIR(0)="Y",DIR("B")="No" D ^DIR Q:Y
"RTN","VBECDCU2",37,0)
  . S VBEC=1 W !,"Please resolve this issue before running the data conversion." Q
"RTN","VBECDCU2",38,0)
 I VBEC Q 1
"RTN","VBECDCU2",39,0)
 I $O(^VBEC(6005,"AB",65.4,""))="" W !!,"Transfusion Reactions have not been mapped" D  ;RLM 10/27/05
"RTN","VBECDCU2",40,0)
  . S DIR("A")="Do you wish to continue? ",DIR(0)="Y",DIR("B")="No" D ^DIR Q:Y
"RTN","VBECDCU2",41,0)
  . S VBEC=1 W !,"Please resolve this issue before running the data conversion." Q
"RTN","VBECDCU2",42,0)
 ;I $O(^VBEC(6005,"AB",66,""))="" W !!,"Blood Products have not been mapped, please resolve this issue before running the data conversion." S VBEC=1
"RTN","VBECDCU2",43,0)
 ;I $O(^VBEC(6005,"AB",66.01,""))="" W !!,"Blood Suppliers have not been mapped, please resolve this issue before running the data conversion." S VBEC=1
"RTN","VBECDCU2",44,0)
 Q VBEC
"RTN","VBECDCU2",45,0)
 ;
"RTN","VBECDCU2",46,0)
LOCK(VBECFN) ;file lock utility
"RTN","VBECDCU2",47,0)
 ; Input: VBECNUM=file number
"RTN","VBECDCU2",48,0)
 ;blood supplier is a multiple in the Blood Product file.
"RTN","VBECDCU2",49,0)
 ; Output: one if the file was locked, else return zero
"RTN","VBECDCU2",50,0)
 N VBECAT,VBECFLE,VBECRT,VBECLOCK
"RTN","VBECDCU2",51,0)
 S VBECRT=$$ROOT^DILFD($S(VBECFN=66.01:66,1:VBECFN),"",1)
"RTN","VBECDCU2",52,0)
 S VBECAT=$S(VBECFN=61.3:"antigens/antibodies",VBECFN=65.4:"transfusion reactions",VBECFN=66:"blood products",VBECFN=66.01:"blood suppliers",1:$$GET1^DID(VBECFN,.01,"","LABEL"))
"RTN","VBECDCU2",53,0)
 D FILE^DID(VBECFN,"","NAME","VBECTMP")
"RTN","VBECDCU2",54,0)
 L +@(VBECRT):5 S VBECLOCK=$T
"RTN","VBECDCU2",55,0)
 I '$T W !!,"Another person is editing "_VBECAT_" in the "_VBECTMP("NAME")_$S(VBECFN=66.01:" sub-file.",1:" file."),!,"Try again later...",$C(7)
"RTN","VBECDCU2",56,0)
 Q VBECLOCK
"RTN","VBECDCU2",57,0)
 ;
"RTN","VBECDCU2",58,0)
UNLOCK(VBECFN) ; unlock a file
"RTN","VBECDCU2",59,0)
 ; Input: X=file number
"RTN","VBECDCU2",60,0)
 S:VBECFN=66.01 VBECFN=66
"RTN","VBECDCU2",61,0)
 L -@($$ROOT^DILFD(VBECFN,"",1))
"RTN","VBECDCU2",62,0)
 Q
"RTN","VBECDCU2",63,0)
 ;
"RTN","VBECDCU2",64,0)
DEL ; delete the VMS or Microsoft legacy Blood Bank files from the
"RTN","VBECDCU2",65,0)
 ; server.  This will be an entry point for an option.
"RTN","VBECDCU2",66,0)
 S LR6001=$G(^VBEC(6001,+$O(^VBEC(6001,$C(32)),-1),0))
"RTN","VBECDCU2",67,0)
 S LRPROC=$P(LR6001,U,2),LRDATE=$P(LR6001,U,3)
"RTN","VBECDCU2",68,0)
 ;
"RTN","VBECDCU2",69,0)
 I LRDATE=""
"RTN","VBECDCU2",70,0)
 I  W !!?3,"The completion process timestamp does not exist.  There are"
"RTN","VBECDCU2",71,0)
 I  W !?3,"no system files to delete at this time."
"RTN","VBECDCU2",72,0)
 I  K LR6001,LRDATE Q
"RTN","VBECDCU2",73,0)
 ;
"RTN","VBECDCU2",74,0)
 I LRPROC'=1
"RTN","VBECDCU2",75,0)
 I  W !!?3,"The data conversion has not been run.  There are no system"
"RTN","VBECDCU2",76,0)
 I  W !?3,"files to delete at this time."
"RTN","VBECDCU2",77,0)
 I  K LR6001,LRDATE Q
"RTN","VBECDCU2",78,0)
 ;
"RTN","VBECDCU2",79,0)
 S LRPATH=$P($G(^VBEC(6000,1,0)),U,6)
"RTN","VBECDCU2",80,0)
 I LRPATH="" W !!,"Default Directory (file path) not defined.  Cannot"
"RTN","VBECDCU2",81,0)
 I  W !,"delete system level legacy Blood Bank files.",$C(13)
"RTN","VBECDCU2",82,0)
 I  D DELXIT Q
"RTN","VBECDCU2",83,0)
 ;
"RTN","VBECDCU2",84,0)
 ;check the number of days the system files have been resident
"RTN","VBECDCU2",85,0)
 S LRELPSE=$$FMDIFF^XLFDT(DT,LRDATE\1,1)
"RTN","VBECDCU2",86,0)
 I LRELPSE<10 D
"RTN","VBECDCU2",87,0)
 .W !!,"Due to the length of time the conversion process runs, it's best if the system",!,"files remain in their specified directory for a minimum of ten (10) days."
"RTN","VBECDCU2",88,0)
 .W !!,"Reports can be generated from these extract files which can be compared to",!,"legacy Blood Bank reports in order to validate the extract data.",!
"RTN","VBECDCU2",89,0)
 .Q
"RTN","VBECDCU2",90,0)
 K DIR S DIR(0)="Y",DIR("?")="Enter 'Yes' to delete system files, or 'No' to preserve them.",DIR("B")="No",DIR("A")="Purge system level data extract files" D ^DIR
"RTN","VBECDCU2",91,0)
 I Y=0!($D(DIRUT)) D DELXIT Q
"RTN","VBECDCU2",92,0)
 ;
"RTN","VBECDCU2",93,0)
 F LRI=1:1 S LRFILE=$P($T(FILES+LRI^VBECDCU1),";;",2) Q:LRFILE=""  D
"RTN","VBECDCU2",94,0)
 .S LRARY(LRFILE_".TXT")=""
"RTN","VBECDCU2",95,0)
 .Q
"RTN","VBECDCU2",96,0)
 I $O(LRARY(""))="" W !!,"System level legacy Blood Bank files not found.",$C(13)
"RTN","VBECDCU2",97,0)
 I  D DELXIT Q
"RTN","VBECDCU2",98,0)
 S LRARY("DBCONV.INI")=""
"RTN","VBECDCU2",99,0)
 S LRSLT=$$DEL^%ZISH(LRPATH,$NA(LRARY)) ;file names stored in an array
"RTN","VBECDCU2",100,0)
 W !!,"All system level legacy Blood Bank files "_$S(LRSLT=1:"have",1:"have not")_" been deleted.",$C(13)
"RTN","VBECDCU2",101,0)
 ;
"RTN","VBECDCU2",102,0)
DELXIT K DIR,DIRUT,DIROUT,DTOUT,DUOUT,LR6001,LRDATE,LRELPSE,LRFILE,LRHLP,LRI,LRPATH,LRPROC,LRSLT,X,Y
"RTN","VBECDCU2",103,0)
 Q
"RTN","VBECDCU2",104,0)
 ;
"RTN","VBECDCU2",105,0)
CHECKSUM(STR) ;This tag builds a checksum value for a string
"RTN","VBECDCU2",106,0)
 ; input: string value to be converted
"RTN","VBECDCU2",107,0)
 ;return: numeric checksum of the string
"RTN","VBECDCU2",108,0)
 ;
"RTN","VBECDCU2",109,0)
 N J,X,Y S X=$L(STR),Y=0
"RTN","VBECDCU2",110,0)
 F J=1:1:X S Y=$A(STR,J)*(J+1)+Y
"RTN","VBECDCU2",111,0)
 Q Y
"RTN","VBECDCU2",112,0)
 ;
"RTN","VBECDCU2",113,0)
DEL6001 ;Delete all data conversion and anomaly check history from the
"RTN","VBECDCU2",114,0)
 ;VBECS DATA INTEGRITY/CONVERSION STATISTICS (#6001) file.
"RTN","VBECDCU2",115,0)
 I '$O(^VBEC(6001,0)) W !!?3,"No data conversion and anomaly check history data to delete, exiting.",$C(7) Q
"RTN","VBECDCU2",116,0)
 W !!?3,"This option deletes all data conversion and anomaly check history"
"RTN","VBECDCU2",117,0)
 W !?3,"from the VBECS DATA INTEGRITY/CONVERSION STATISTICS (#6001) file.",!
"RTN","VBECDCU2",118,0)
 S DIR(0)="Y",DIR("A",1)="Are you sure you want to delete data conversion and anomaly check",DIR("A")="histories",DIR("B")="No"
"RTN","VBECDCU2",119,0)
 S DIR("?",1)="Enter 'Y'es to delete data conversion and anomaly check histories",DIR("?")="or 'N'o to prevent deletion."
"RTN","VBECDCU2",120,0)
 D ^DIR
"RTN","VBECDCU2",121,0)
 I Y=1 D  ;user answered 'yes' to the above question
"RTN","VBECDCU2",122,0)
 .S DIK="^VBEC(6001,",(DA,VBECNT)=0
"RTN","VBECDCU2",123,0)
 .F  S DA=$O(^VBEC(6001,DA)) Q:'DA  D ^DIK S VBECNT=VBECNT+1
"RTN","VBECDCU2",124,0)
 .W !!?3,"Done; "_VBECNT_" data conversion and anomaly check histor"_$S(VBECNT=1:"y",1:"ies")_" deleted."
"RTN","VBECDCU2",125,0)
 .K DA,DIC,DIK,VBECNT,X,Y
"RTN","VBECDCU2",126,0)
 .Q
"RTN","VBECDCU2",127,0)
 W:$D(DTOUT)#2 " Timed out without response, no data has been deleted.",$C(7)
"RTN","VBECDCU2",128,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","VBECDCU2",129,0)
 Q
"RTN","VBECDCX")
0^38^B45221687^B45221687
"RTN","VBECDCX",1,0)
VBECDCX ;hoifo/gjc-data conversion & pre-implementation data extract;Nov 21, 2002
"RTN","VBECDCX",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCX",3,0)
 ;
"RTN","VBECDCX",4,0)
 ;Medical Device #:
"RTN","VBECDCX",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCX",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCX",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCX",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCX",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCX",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCX",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCX",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCX",13,0)
 ;regulations.
"RTN","VBECDCX",14,0)
 ;
"RTN","VBECDCX",15,0)
 ;Call to $$NEWERR^%ZTER is supported by IA: 1621
"RTN","VBECDCX",16,0)
 ;Call to NAMECOMP^XLFNAME is supported by IA: 3065
"RTN","VBECDCX",17,0)
 ;Execution of ^%ZOSF("TEST") is supported by IA: 10096
"RTN","VBECDCX",18,0)
 ;Direct global read of ^DPT(DFN,0) supported by IA: 10035
"RTN","VBECDCX",19,0)
 ;
"RTN","VBECDCX",20,0)
 ; This routine was originally created to handle data extracts from
"RTN","VBECDCX",21,0)
 ; VistA's Lab Data (#63) file.
"RTN","VBECDCX",22,0)
 ;
"RTN","VBECDCX",23,0)
PAT(DFN,LRDFN) ; build the primary patient identifier string.
"RTN","VBECDCX",24,0)
 ; convert specific patient attributes from VistA to SQL tables.
"RTN","VBECDCX",25,0)
 ; Values to covert and maximum string lengths:
"RTN","VBECDCX",26,0)
 ; LRDFN=ien of the patient record in the Lab Data (#63) file (12)
"RTN","VBECDCX",27,0)
 ; DFN=ien of the patient in the Patient (#2) file (12)
"RTN","VBECDCX",28,0)
 ; LRNAM=LRNAM("FAMILY")^LRNAM("GIVEN")^LRNAM("MIDDLE")^LRNAM("SUFFIX")
"RTN","VBECDCX",29,0)
 ; LRNAM(patient name) subcomponents above concatenated (30)
"RTN","VBECDCX",30,0)
 ; LRSEX(sex)='M' or 'F', (1)
"RTN","VBECDCX",31,0)
 ; LRDOB(date of birth)='mm/dd/yy<sp>time' time optional, (18)
"RTN","VBECDCX",32,0)
 ; LRSSN(ssn)='123456789' (9)
"RTN","VBECDCX",33,0)
 ; LRICN(ICN)='100072010000' (12)
"RTN","VBECDCX",34,0)
 ; $P(LRBO,U) (blood type)='AB' (2)
"RTN","VBECDCX",35,0)
 ; $P(LRBLD,U,2) (RH type)='N' or 'P' (1)
"RTN","VBECDCX",36,0)
 ;
"RTN","VBECDCX",37,0)
 ; Output:
"RTN","VBECDCX",38,0)
 ;  LRSTR=DFN^LRNAM^LRSEX^LRDOB^^^LRSSN^LRICN^$P(LRBLD,U)^$P(LRBLD,U,2)
"RTN","VBECDCX",39,0)
 ;  LRNAM=LRNAM("FAMILY")^LRNAM("GIVEN")^LRNAM("MIDDLE")^LRNAM("SUFFIX")
"RTN","VBECDCX",40,0)
 ;
"RTN","VBECDCX",41,0)
 ; initialize the error trap
"RTN","VBECDCX",42,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^VBECDCU1"
"RTN","VBECDCX",43,0)
 E  S X="D ERR^VBECDCU1",@^%ZOSF("TRAP")
"RTN","VBECDCX",44,0)
 ;initialize the global that keeps track of data elements by LRDFN
"RTN","VBECDCX",45,0)
 ;increment the subscript tracking data elements at the record level
"RTN","VBECDCX",46,0)
 S VBECRTOT=+$$CNT^VBECDCU("VBEC FINIS",$J)+1
"RTN","VBECDCX",47,0)
 K X S $P(X,"0^",28)="",^TMP("VBEC FINIS",$J,VBECRTOT,0)=X K X
"RTN","VBECDCX",48,0)
 ;
"RTN","VBECDCX",49,0)
 S DPT(0)=$G(^DPT(DFN,0)),DPTNAME=$P(DPT(0),U),LRSTR="",U="^"
"RTN","VBECDCX",50,0)
 D NAMECOMP^XLFNAME(.DPTNAME) S LRSEX=$P(DPT(0),U,2)
"RTN","VBECDCX",51,0)
 ;
"RTN","VBECDCX",52,0)
 I DPTNAME("FAMILY")["MERGING INTO" D  Q
"RTN","VBECDCX",53,0)
  . S VBECMRG=$P($P(DPTNAME("FAMILY"),"`",2)," ")
"RTN","VBECDCX",54,0)
  . K LRARY S LRARY(.01)=2,LRARY(.02)=DFN,LRARY(.03)=2,LRARY(.04)=VBECMRG,LRARY(.09)=$P($T(ERRMSG+3^VBECDC02),";",4)
"RTN","VBECDCX",55,0)
  . D LOGEXC^VBECDC02(VBECIEN,.LRARY) K LRARY ; log this exception regardless of the task
"RTN","VBECDCX",56,0)
  . Q
"RTN","VBECDCX",57,0)
 ;
"RTN","VBECDCX",58,0)
 S LRDOB=$P(DPT(0),U,3) ;return the internal FM value for DOB
"RTN","VBECDCX",59,0)
 ;
"RTN","VBECDCX",60,0)
 S LRSSN=$$STRIP^VBECDCX1($P(DPT(0),U,9))
"RTN","VBECDCX",61,0)
 S DPTNAME=$$STRIP^VBECDCX1($G(DPTNAME("FAMILY")))_U_$$STRIP^VBECDCX1($G(DPTNAME("GIVEN")))_U_$$STRIP^VBECDCX1($G(DPTNAME("MIDDLE")))_U_$$STRIP^VBECDCX1($G(DPTNAME("SUFFIX")))
"RTN","VBECDCX",62,0)
 ;obtain patient's ICN
"RTN","VBECDCX",63,0)
 S LRICN=$$ICN^VBECDCU(DFN),LRSTR=LRDFN_U_DFN_U_DPTNAME_U_LRSEX_U_LRDOB_U_U_U_$E(LRSSN,1,9)_U_LRICN
"RTN","VBECDCX",64,0)
 ; obtain ABO GROUP (#.05) & RH TYPE (#.06) from Lab Data (#63) file
"RTN","VBECDCX",65,0)
 S LRBLD=$$BLUT^VBECDCU(LRDFN)
"RTN","VBECDCX",66,0)
 S LRSTR=LRSTR_U_LRBLD
"RTN","VBECDCX",67,0)
 ;tabulate data elements per LAB DATA record
"RTN","VBECDCX",68,0)
 S:LRDFN $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U)=LRDFN
"RTN","VBECDCX",69,0)
 S:DFN $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,2)=DFN
"RTN","VBECDCX",70,0)
 S:$G(DPTNAME("FAMILY"))'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,3)=1
"RTN","VBECDCX",71,0)
 S:$G(DPTNAME("GIVEN"))'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,4)=1
"RTN","VBECDCX",72,0)
 S:$G(DPTNAME("MIDDLE"))'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,5)=1
"RTN","VBECDCX",73,0)
 S:$G(DPTNAME("SUFFIX"))'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,6)=1
"RTN","VBECDCX",74,0)
 S:LRSEX'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,7)=1
"RTN","VBECDCX",75,0)
 S:LRDOB'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,8)=1
"RTN","VBECDCX",76,0)
 S:LRSSN'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,9)=1
"RTN","VBECDCX",77,0)
 S:LRICN'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,10)=1
"RTN","VBECDCX",78,0)
 S:$P(LRBLD,U)'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,11)=1
"RTN","VBECDCX",79,0)
 S:$P(LRBLD,U,2)'="" $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,12)=1
"RTN","VBECDCX",80,0)
 ;tabulate data elements for all LAB DATA records except LRDFN & DFN
"RTN","VBECDCX",81,0)
 F I=3:1:12 S $P(^TMP("VBEC FINIS",$J,0),U,I)=$P(^TMP("VBEC FINIS",$J,0),U,I)+$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,I)
"RTN","VBECDCX",82,0)
 ;
"RTN","VBECDCX",83,0)
 K I S CNT=$$CNT^VBECDCU("VBEC63 PAT",$J),CNT=CNT+1
"RTN","VBECDCX",84,0)
 S ^TMP("VBEC63 PAT",$J,CNT,0)=LRSTR_$C(13)
"RTN","VBECDCX",85,0)
 D ANTI(DFN,LRDFN,"AP"),ANTI(DFN,LRDFN,"AA"),ANTI(DFN,LRDFN,"AI")
"RTN","VBECDCX",86,0)
 D TRD(DFN,LRDFN),BBC^VBECDCX1(DFN,LRDFN)
"RTN","VBECDCX",87,0)
 S $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,28)=$C(13)
"RTN","VBECDCX",88,0)
 D KILL
"RTN","VBECDCX",89,0)
 Q
"RTN","VBECDCX",90,0)
 ;
"RTN","VBECDCX",91,0)
ANTI(DFN,LRDFN,LRCHAR) ; extract 'RBC ANTIGENS PRESENT/ABSENT' or 'ANTIBODIES
"RTN","VBECDCX",92,0)
 ; IDENTIFIED' data from the legacy Blood Bank application.  Notice the
"RTN","VBECDCX",93,0)
 ; practice of swapping out the VistA ien for the antibodies equivalent
"RTN","VBECDCX",94,0)
 ; SQL GUID.
"RTN","VBECDCX",95,0)
 ; Input: DFN=patient DFN
"RTN","VBECDCX",96,0)
 ;      LRDFN=lab patient ien in the Lab Data (#63) file
"RTN","VBECDCX",97,0)
 ;     LRCHAR=char, 'AP' for antigens present, 'AI' for antigens
"RTN","VBECDCX",98,0)
 ;            identified and 'AA' for antibodies absent
"RTN","VBECDCX",99,0)
 S LRD1=0,LRN=$S(LRCHAR="AP":1,LRCHAR="AA":1.5,1:1.7)
"RTN","VBECDCX",100,0)
 S LRS=$S(LRCHAR="AP":"VBEC63 ANTIP",LRCHAR="AA":"VBEC63 ANTIA",1:"VBEC63 AI")
"RTN","VBECDCX",101,0)
 S:LRN=1 LRPCE=13 S:LRN=1.5 LRPCE=16 S:LRN=1.7 LRPCE=19
"RTN","VBECDCX",102,0)
 F  S LRD1=$O(^LR(LRDFN,LRN,LRD1)) Q:'LRD1  D
"RTN","VBECDCX",103,0)
 .S LRD=$G(^LR(LRDFN,LRN,LRD1,0)) Q:LRD=""
"RTN","VBECDCX",104,0)
 .I LRN'=1.7 S LRSTR=LRDFN_U_DFN_U_LRD1_U_$$STRIP^VBECDCX1($$SWAP^VBECDCU(61.3,$P(LRD,U)))_U_LRCHAR_U_$$STRIP^VBECDCX1($P(LRD,U,2)) ; antigens present/absent
"RTN","VBECDCX",105,0)
 .I LRN=1.7 S LRSTR=LRDFN_U_DFN_U_LRD1_U_$$STRIP^VBECDCX1($$SWAP^VBECDCU(61.3,$P(LRD,U)))_U_LRCHAR_U_$$STRIP^VBECDCX1($P(LRD,U,2)) ; antibodies
"RTN","VBECDCX",106,0)
 .S CNT=$$CNT^VBECDCU(LRS,$J)
"RTN","VBECDCX",107,0)
 .S CNT=CNT+1,^TMP(LRS,$J,CNT,0)=LRSTR_$C(13)
"RTN","VBECDCX",108,0)
 .S:LRN=1 LRPCE=13 S:LRN=1.5 LRPCE=16 S:LRN=1.7 LRPCE=19
"RTN","VBECDCX",109,0)
 .;
"RTN","VBECDCX",110,0)
 .;total up the number of times antigens present/absent & antibodies
"RTN","VBECDCX",111,0)
 .;identified in addition to their respective comments appear in patient
"RTN","VBECDCX",112,0)
 .;specific data
"RTN","VBECDCX",113,0)
 .D ANTIAB^VBECDCX1
"RTN","VBECDCX",114,0)
 .;
"RTN","VBECDCX",115,0)
 .Q
"RTN","VBECDCX",116,0)
 ;total up the number of times antigens present/absent & antibodies
"RTN","VBECDCX",117,0)
 ;identified in addition to their respective comments appear for ALL
"RTN","VBECDCX",118,0)
 ;patient data
"RTN","VBECDCX",119,0)
 F I=LRPCE:1:LRPCE+2 S $P(^TMP("VBEC FINIS",$J,0),U,I)=$P(^TMP("VBEC FINIS",$J,0),U,I)+$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,I)
"RTN","VBECDCX",120,0)
 ;
"RTN","VBECDCX",121,0)
 K CNT,I,LRD,LRD1,LRN,LRPCE,LRS,LRSTR
"RTN","VBECDCX",122,0)
 Q
"RTN","VBECDCX",123,0)
 ;
"RTN","VBECDCX",124,0)
TCTRC(DFN,LRDFN,LRD1) ; save off the transfusion or transfusion
"RTN","VBECDCX",125,0)
 ; reaction comments.  called from both TRANS & TRANSR
"RTN","VBECDCX",126,0)
 ; from TRANS
"RTN","VBECDCX",127,0)
 ; Input: DFN=patient DFN
"RTN","VBECDCX",128,0)
 ;      LRDFN=lab patient ien in the Lab Data (#63) file
"RTN","VBECDCX",129,0)
 ;       LRD1=second level subscript; equivalent to FileMan's D1
"RTN","VBECDCX",130,0)
 S (LRD2,Z)=0,LRSUB="VBEC63 TRC"
"RTN","VBECDCX",131,0)
 ;indicate the number of occurences of transfusion reaction records
"RTN","VBECDCX",132,0)
 F  S LRD2=$O(^LR(LRDFN,1.9,LRD1,1,LRD2)) Q:'LRD2  D
"RTN","VBECDCX",133,0)
 .S Z=Z+1 S:Z=1 $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,24)=1
"RTN","VBECDCX",134,0)
 .S LRTRCMT=$$STRIP^VBECDCX1($P($G(^LR(LRDFN,1.9,LRD1,1,LRD2,0)),U))
"RTN","VBECDCX",135,0)
 .Q:'($P(LRD1,"."))  ;RLM 05/10/07
"RTN","VBECDCX",136,0)
 .S LRSTR="",LRSTR=LRDFN_U_DFN_U_$P(LRD1,".")_U_LRD2_U_LRTRCMT
"RTN","VBECDCX",137,0)
 .S CNT=$$CNT^VBECDCU(LRSUB,$J)
"RTN","VBECDCX",138,0)
 .S CNT=CNT+1,^TMP(LRSUB,$J,CNT,0)=LRSTR_$C(13)
"RTN","VBECDCX",139,0)
 .D TRCMNT^VBECDCX1
"RTN","VBECDCX",140,0)
 .Q
"RTN","VBECDCX",141,0)
 K LRD2,LRSTR,LRSUB,LRTRCMT,Z
"RTN","VBECDCX",142,0)
 Q
"RTN","VBECDCX",143,0)
 ;
"RTN","VBECDCX",144,0)
TRD(DFN,LRDFN) ; Extract transfusion reaction date data; date/time, reaction
"RTN","VBECDCX",145,0)
 ; type, person entering reaction 
"RTN","VBECDCX",146,0)
 ; Input: DFN=patient DFN
"RTN","VBECDCX",147,0)
 ;      LRDFN=lab patient ien in the Lab Data (#63) file
"RTN","VBECDCX",148,0)
 ;FILE 63 data here
"RTN","VBECDCX",149,0)
 S LRD1=0 F  S LRD1=$O(^LR(LRDFN,1.9,LRD1)) Q:'LRD1  D
"RTN","VBECDCX",150,0)
 .S LRD=$G(^LR(LRDFN,1.9,LRD1,0)) Q:LRD=""
"RTN","VBECDCX",151,0)
 .S VBTRD=$$SWAP^VBECDCU(65.4,$P(LRD,U,2)) Q:VBTRD=""
"RTN","VBECDCX",152,0)
 .Q:'($P(LRD1,"."))  ;RLM 05/03/07
"RTN","VBECDCX",153,0)
 .S LRSTR=LRDFN_U_DFN_U_$P(LRD1,".")_U_$$DATE^VBECDCU($P(LRD,U))_U_VBTRD
"RTN","VBECDCX",154,0)
 .;
"RTN","VBECDCX",155,0)
 .S CNT=$$CNT^VBECDCU("VBEC63 TRD",$J)
"RTN","VBECDCX",156,0)
 .S CNT=CNT+1,^TMP("VBEC63 TRD",$J,CNT,0)=LRSTR_$C(13)
"RTN","VBECDCX",157,0)
 .D TRDTAB^VBECDCX1
"RTN","VBECDCX",158,0)
 .D TCTRC(DFN,LRDFN,LRD1) ; get transfusion reaction comments
"RTN","VBECDCX",159,0)
 .Q
"RTN","VBECDCX",160,0)
 ;
"RTN","VBECDCX",161,0)
 ;File 65 data here
"RTN","VBECDCX",162,0)
 S CNT=$$CNT^VBECDCU("VBEC63 TRD",$J)
"RTN","VBECDCX",163,0)
 S VBTRA="" F  S VBTRA=$O(^TMP($J,"VBEC_TR_REACT",DFN,VBTRA)) Q:VBTRA=""  D
"RTN","VBECDCX",164,0)
 . Q:'$P($G(^LRD(65,VBTRA,6)),"^",5)  ;Q:'$P(^LRD(65,VBTRA,6),"^",8)
"RTN","VBECDCX",165,0)
 . S VBTRD=$P(^LRD(65,VBTRA,6),"^",8)
"RTN","VBECDCX",166,0)
 . S VBTRD=$$SWAP^VBECDCU(65.4,VBTRD) Q:VBTRD=""  ;S:VBTRD="" VBTRD="J"
"RTN","VBECDCX",167,0)
 . S VBECTRDD=$P($G(^LRD(65,VBTRA,4)),"^",2),VBECTRDD=$S(VBECTRDD="":DT,1:$$DATE^VBECDCU(VBECTRDD))
"RTN","VBECDCX",168,0)
 . S CNT=CNT+1,^TMP("VBEC63 TRD",$J,CNT,0)=LRDFN_"^"_DFN_"^65^"_VBECTRDD_"^"_VBTRD_$C(13)
"RTN","VBECDCX",169,0)
 . S LRD="1^1" D TRDTAB^VBECDCX1
"RTN","VBECDCX",170,0)
 ;
"RTN","VBECDCX",171,0)
 ;
"RTN","VBECDCX",172,0)
 ;total up the number of instances of transfusion reaction related data
"RTN","VBECDCX",173,0)
 ;including transfusion reaction comment character counts for ALL
"RTN","VBECDCX",174,0)
 ;records.
"RTN","VBECDCX",175,0)
TRTOT ;
"RTN","VBECDCX",176,0)
 F I=22:1:25 S $P(^TMP("VBEC FINIS",$J,0),U,I)=$P(^TMP("VBEC FINIS",$J,0),U,I)+$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,I)
"RTN","VBECDCX",177,0)
 K LRD,LRD1,LRSTR
"RTN","VBECDCX",178,0)
 Q
"RTN","VBECDCX",179,0)
 ;
"RTN","VBECDCX",180,0)
KILL ; kill variables
"RTN","VBECDCX",181,0)
 K CNT,DPT,DPTNAME,LRBLD,LRDATE,LRICN,LRMTH,DPTNAME,LRSEX,LRSSN,LRSTR
"RTN","VBECDCX",182,0)
 Q
"RTN","VBECDCX1")
0^39^B10155625^B10155625
"RTN","VBECDCX1",1,0)
VBECDCX1 ;hoifo/gjc-data conversion & pre-implementation data extract;Nov 21, 2002
"RTN","VBECDCX1",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDCX1",3,0)
 ;
"RTN","VBECDCX1",4,0)
 ;Medical Device #:
"RTN","VBECDCX1",5,0)
 ;Note: The food and Drug Administration classifies this software as a
"RTN","VBECDCX1",6,0)
 ;medical device.  As such, it may not be changed in any way.
"RTN","VBECDCX1",7,0)
 ;Modifications to this software may result in an adulterated medical
"RTN","VBECDCX1",8,0)
 ;device under 21CFR820, the use of which is considered to be a
"RTN","VBECDCX1",9,0)
 ;violation of US Federal Statutes.  Acquiring and implementing this
"RTN","VBECDCX1",10,0)
 ;software through the Freedom of Information Act requires the
"RTN","VBECDCX1",11,0)
 ;implementer to assume total responsibility for the software, and
"RTN","VBECDCX1",12,0)
 ;become a registered manufacturer of a medical device, subject to FDA
"RTN","VBECDCX1",13,0)
 ;regulations.
"RTN","VBECDCX1",14,0)
 ;
"RTN","VBECDCX1",15,0)
ANTIAB ;save off totals of ANTIBODIES IDENTIFIED, ANTIBODIES IDENTIFIED
"RTN","VBECDCX1",16,0)
 ;COMMENTS, RBC ANTIGENS PRESENT, RBC ANTIGENS PRESENT COMMENT,
"RTN","VBECDCX1",17,0)
 ;RBC ANTIGENS ABSENT, RBC ANTIGENS ABSENT COMMENT.
"RTN","VBECDCX1",18,0)
 ;total up the number of times antigens present/absent & antibodies
"RTN","VBECDCX1",19,0)
 ;identified appear in patient specific data
"RTN","VBECDCX1",20,0)
 I $P(LRD,U)'="" S $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,LRPCE)=$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,LRPCE)+1
"RTN","VBECDCX1",21,0)
 I $P(LRD,U,2)'="" D
"RTN","VBECDCX1",22,0)
 .S $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,LRPCE+1)=$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,LRPCE+1)+1 ;do comments exist?
"RTN","VBECDCX1",23,0)
 .;save # of comment chars
"RTN","VBECDCX1",24,0)
 .S $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,LRPCE+2)=$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,LRPCE+2)+$L($$STRIP^VBECDCX1($P(LRD,U,2)))
"RTN","VBECDCX1",25,0)
 .Q
"RTN","VBECDCX1",26,0)
 Q
"RTN","VBECDCX1",27,0)
 ;
"RTN","VBECDCX1",28,0)
TRDTAB ;tabulate the number of transfusion date/time and transfusion reaction
"RTN","VBECDCX1",29,0)
 ;type records
"RTN","VBECDCX1",30,0)
 I $P(LRD,U)'="" S $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,22)=$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,22)+1
"RTN","VBECDCX1",31,0)
 I $P(LRD,U,2)'="" S $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,23)=$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,23)+1
"RTN","VBECDCX1",32,0)
 Q
"RTN","VBECDCX1",33,0)
 ;
"RTN","VBECDCX1",34,0)
TRCMNT ;tabulate the number of transfusion comments and the total number of
"RTN","VBECDCX1",35,0)
 ;characters for all transfusion comments.
"RTN","VBECDCX1",36,0)
 ;LRTRCMT defined in TCTRC^VBECDCX
"RTN","VBECDCX1",37,0)
 S $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,25)=$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,25)+$L(LRTRCMT)
"RTN","VBECDCX1",38,0)
 Q
"RTN","VBECDCX1",39,0)
 ;
"RTN","VBECDCX1",40,0)
BBC(DFN,LRDFN) ; extract 'BLOOD BANK COMMENTS' data from the legacy
"RTN","VBECDCX1",41,0)
 ; Blood Bank application.  The first node will have the timestamp
"RTN","VBECDCX1",42,0)
 ; (date) of when the comments were most recently edited.
"RTN","VBECDCX1",43,0)
 ; Input: DFN=patient DFN
"RTN","VBECDCX1",44,0)
 ;      LRDFN=lab patient ien in the Lab Data (#63) file
"RTN","VBECDCX1",45,0)
 S (LRD1,Z)=0,LRBBCDT=$P($G(^LR(LRDFN,3,0)),U,5)
"RTN","VBECDCX1",46,0)
 S LRBBCDT=$P(LRBBCDT,".") ;RLM 03/27/2007
"RTN","VBECDCX1",47,0)
 S:LRBBCDT'?7N LRBBCDT=-1 ;should be a date w/o time
"RTN","VBECDCX1",48,0)
 S:LRBBCDT'=-1 LRBBCDT=$$DATE^VBECDCU(LRBBCDT)
"RTN","VBECDCX1",49,0)
 S:LRBBCDT=-1 LRBBCDT="" ;RLM 03/27/2007
"RTN","VBECDCX1",50,0)
 F  S LRD1=$O(^LR(LRDFN,3,LRD1)) Q:'LRD1  D
"RTN","VBECDCX1",51,0)
 .S LRD=$G(^LR(LRDFN,3,LRD1,0)) Q:LRD=""
"RTN","VBECDCX1",52,0)
 .;translate carets '^' to nulls
"RTN","VBECDCX1",53,0)
 .S LRD=$TR(LRD,"^","")
"RTN","VBECDCX1",54,0)
 .;strip leading spaces & trailing spaces
"RTN","VBECDCX1",55,0)
 .S LRD=$$STRIP(LRD),Z=Z+1
"RTN","VBECDCX1",56,0)
 .S LRSTR=LRDFN_U_DFN_U_LRD1_U_LRD_U_LRBBCDT
"RTN","VBECDCX1",57,0)
 .S:Z=1 $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,26)=1
"RTN","VBECDCX1",58,0)
 .S $P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,27)=$P(^TMP("VBEC FINIS",$J,VBECRTOT,0),U,27)+$L(LRD)
"RTN","VBECDCX1",59,0)
 .S CNT=$$CNT^VBECDCU("VBEC63 BBC",$J)
"RTN","VBECDCX1",60,0)
 .S CNT=CNT+1,^TMP("VBEC63 BBC",$J,CNT,0)=LRSTR_$C(13)
"RTN","VBECDCX1",61,0)
 .S VBECTOT("VBEC63 BBC")=+$G(VBECTOT("VBEC63 BBC"))+1
"RTN","VBECDCX1",62,0)
 .;total BBC character count for ALL records.
"RTN","VBECDCX1",63,0)
 .S $P(^TMP("VBEC FINIS",$J,0),U,27)=+$P(^TMP("VBEC FINIS",$J,0),U,27)+$L(LRD)
"RTN","VBECDCX1",64,0)
 .;total up the number of instances Blood Bank Comments (BBC)
"RTN","VBECDCX1",65,0)
 .S:Z=1 $P(^TMP("VBEC FINIS",$J,0),U,26)=+$P(^TMP("VBEC FINIS",$J,0),U,26)+1
"RTN","VBECDCX1",66,0)
 .Q
"RTN","VBECDCX1",67,0)
 K CNT,I,LRBBCDT,LRD,LRD1,LRSTR,Z
"RTN","VBECDCX1",68,0)
 Q
"RTN","VBECDCX1",69,0)
 ;
"RTN","VBECDCX1",70,0)
STRIP(X) ;strip leading and trailing spaces from a data string.
"RTN","VBECDCX1",71,0)
 ; input: string to be checked for leading and trailing spaces
"RTN","VBECDCX1",72,0)
 ;return: string without leading and trailing spaces
"RTN","VBECDCX1",73,0)
 ;strip leading spaces first...
"RTN","VBECDCX1",74,0)
 F  Q:$F(X," ")'=2  S X=$E(X,2,$L(X))
"RTN","VBECDCX1",75,0)
 ;then strip trailing spaces...
"RTN","VBECDCX1",76,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","VBECDCX1",77,0)
 Q X
"RTN","VBECDCX1",78,0)
 ;
"RTN","VBECDSS")
0^40^B15027740^B15027740
"RTN","VBECDSS",1,0)
VBECDSS ;;HOIFO/BNT-VBECS DSS Extract ;December 05, 2006
"RTN","VBECDSS",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECDSS",3,0)
 ;
"RTN","VBECDSS",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECDSS",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECDSS",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECDSS",7,0)
 ; 
"RTN","VBECDSS",8,0)
 QUIT
"RTN","VBECDSS",9,0)
 ;
"RTN","VBECDSS",10,0)
EN(RESULT,PARAMS) ; Main Entry point for RPC
"RTN","VBECDSS",11,0)
 ; -- RPC:   VBECS DSS EXTRACT
"RTN","VBECDSS",12,0)
 ; -- INPUT: PARAMS Array containing values to be inserted or updated
"RTN","VBECDSS",13,0)
 ; --        in the VBECS DSS EXTRACT File (#6002.03).
"RTN","VBECDSS",14,0)
 ; 
"RTN","VBECDSS",15,0)
 N I,X,Y,VBECRSLT,VBECLINE,FDA,VBERR
"RTN","VBECDSS",16,0)
 I '$D(DT) D DT^DICRW
"RTN","VBECDSS",17,0)
 S VBECRSLT="^TMP(""VBEC_DSS_EXTRACT"",$J)",VBECLINE=0,RESULT=$NA(@VBECRSLT)
"RTN","VBECDSS",18,0)
 K @RESULT
"RTN","VBECDSS",19,0)
 I '$D(PARAMS("TRANSACTION ID")) D RESULT(0) Q
"RTN","VBECDSS",20,0)
 S VBECON=$$FIND1^DIC(6002.03,,,PARAMS("TRANSACTION ID"),,.ERROR)
"RTN","VBECDSS",21,0)
 S VBECIEN=$S(VBECON:VBECON_",",1:"+1,")
"RTN","VBECDSS",22,0)
 S FDA(1,6002.03,VBECIEN,.01)=PARAMS("TRANSACTION ID")
"RTN","VBECDSS",23,0)
 I $D(PARAMS("DFN")),PARAMS("DFN") S FDA(1,6002.03,VBECIEN,1)=$G(PARAMS("DFN"))
"RTN","VBECDSS",24,0)
 I $D(PARAMS("ORDERING LOCATION")) S FDA(1,6002.03,VBECIEN,2)=$G(PARAMS("ORDERING LOCATION"))
"RTN","VBECDSS",25,0)
 I $D(PARAMS("TRANSFUSION LOCATION")) S FDA(1,6002.03,VBECIEN,3)=$G(PARAMS("TRANSFUSION LOCATION"))
"RTN","VBECDSS",26,0)
 ;I $D(PARAMS("FACILITY")) S VBFAC=$$TSTRIP($G(PARAMS("FACILITY"))),VBFAC=$$FIND1^DIC(4,,"MX",VBFAC,,,"VBERR") D
"RTN","VBECDSS",27,0)
 ;. S FDA(1,6002.03,VBECIEN,3)=VBFAC
"RTN","VBECDSS",28,0)
 I $D(PARAMS("PHYSICIAN")) S FDA(1,6002.03,VBECIEN,4)=$G(PARAMS("PHYSICIAN"))
"RTN","VBECDSS",29,0)
 I $D(PARAMS("ORDERING PROVIDER")) S FDA(1,6002.03,VBECIEN,5)=$G(PARAMS("ORDERING PROVIDER"))
"RTN","VBECDSS",30,0)
 I $D(PARAMS("PRODUCT NAME")) S FDA(1,6002.03,VBECIEN,6)=$G(PARAMS("PRODUCT NAME"))
"RTN","VBECDSS",31,0)
 I $D(PARAMS("COMPONENT ABBREVIATION")) S FDA(1,6002.03,VBECIEN,7)=$G(PARAMS("COMPONENT ABBREVIATION"))
"RTN","VBECDSS",32,0)
 I $D(PARAMS("NUMBER OF UNITS")) S FDA(1,6002.03,VBECIEN,8)=$G(PARAMS("NUMBER OF UNITS"))
"RTN","VBECDSS",33,0)
 I $D(PARAMS("TRANSFUSION DATE")) S FDA(1,6002.03,VBECIEN,9)=+$G(PARAMS("TRANSFUSION DATE"))
"RTN","VBECDSS",34,0)
 S FDA(1,6002.03,VBECIEN,10)=$$NOW^XLFDT
"RTN","VBECDSS",35,0)
 I $D(PARAMS("VOLUME")) S FDA(1,6002.03,VBECIEN,11)=$G(PARAMS("VOLUME"))
"RTN","VBECDSS",36,0)
 I $D(PARAMS("REACTION TYPE")) S FDA(1,6002.03,VBECIEN,12)=$E($G(PARAMS("REACTION TYPE")),1,10) ;Limit input per conversation with David on 1/19
"RTN","VBECDSS",37,0)
 I $D(PARAMS("UNIT MODIFICATION")) S FDA(1,6002.03,VBECIEN,13)=$E($G(PARAMS("UNIT MODIFICATION")),1,6) ;Limit input per conversation with David on 1/19
"RTN","VBECDSS",38,0)
 I $D(PARAMS("REACTION")) S FDA(1,6002.03,VBECIEN,14)=$S($G(PARAMS("REACTION"))="True":"1",$G(PARAMS("REACTION"))="False":"",1:"") ;Leave room for a False code if necessary.
"RTN","VBECDSS",39,0)
 I 'VBECON D UPDATE^DIE("","FDA(1)",,"VBERR") ;W !,"NEW" ;For new record
"RTN","VBECDSS",40,0)
 I VBECON S:$G(FDA(1,6002.03,VBECIEN,1)) FDA(1,6002.03,VBECIEN,1)="`"_FDA(1,6002.03,VBECIEN,1) D FILE^DIE("E","FDA(1)","VBERR") ;W !,"UPDATE" zw  ;To update existing record
"RTN","VBECDSS",41,0)
 D RESULT(1)
"RTN","VBECDSS",42,0)
 Q
"RTN","VBECDSS",43,0)
 ;
"RTN","VBECDSS",44,0)
TEST ; Test the update
"RTN","VBECDSS",45,0)
 ;36785EB0-8BCF-4407-A6C8-0002329A4ABF
"RTN","VBECDSS",46,0)
 ;1375FB52-EC30-453D-8FC7-00026DA1229A
"RTN","VBECDSS",47,0)
 ;8EE67641-0BA6-4A0C-84B4-0003E3F95011
"RTN","VBECDSS",48,0)
 ;AD082B9A-6EC8-4EA9-9B99-0005AA8FFBD7
"RTN","VBECDSS",49,0)
 ;09F8325B-0E93-4EB8-A315-000615AF3F9C
"RTN","VBECDSS",50,0)
 ;C6F51B1E-11B7-49F9-B919-000AA5E3EC82
"RTN","VBECDSS",51,0)
 ;5B8CC626-C32D-4AE2-B13D-000A65A3C04E
"RTN","VBECDSS",52,0)
 ;411AF601-822E-4F38-A0CE-001661042A6E
"RTN","VBECDSS",53,0)
 ;E66DD96E-AA27-4F12-96F6-00171F5D13EE
"RTN","VBECDSS",54,0)
 S PARAMS("TRANSACTION ID")="E66DD96E-AA27-4F12-96F6-00171F5D13EE"
"RTN","VBECDSS",55,0)
 S PARAMS("DFN")=51
"RTN","VBECDSS",56,0)
 ;S PARAMS("NAME")="BILLYFRED"
"RTN","VBECDSS",57,0)
 S PARAMS("FACILITY")="589   "
"RTN","VBECDSS",58,0)
 S PARAMS("PHYSICIAN")="DOC,ONE"
"RTN","VBECDSS",59,0)
 S PARAMS("ORDERING PROVIDER")=53296
"RTN","VBECDSS",60,0)
 S PARAMS("PRODUCT NAME")="RED BLOOD CELLS"
"RTN","VBECDSS",61,0)
 S PARAMS("COMPONENT ABBREVIATION")="RBC"
"RTN","VBECDSS",62,0)
 S PARAMS("NUMBER OF UNITS")=6
"RTN","VBECDSS",63,0)
 S PARAMS("TRANSFUSION DATE")=DT
"RTN","VBECDSS",64,0)
 S PARAMS("VOLUME")="500"
"RTN","VBECDSS",65,0)
 S PARAMS("REACTION TYPE")="FEBRILE"
"RTN","VBECDSS",66,0)
 S PARAMS("UNIT MODIFICATION")="IWG"
"RTN","VBECDSS",67,0)
 S PARAMS("REACTION")="True"
"RTN","VBECDSS",68,0)
 Q
"RTN","VBECDSS",69,0)
 ;
"RTN","VBECDSS",70,0)
RESULT(VALUE) ; -- Add return value
"RTN","VBECDSS",71,0)
 SET VBECLINE=VBECLINE+1
"RTN","VBECDSS",72,0)
 SET @VBECRSLT@(VBECLINE)="<ReturnValue><SuccessIndicator>"_VALUE_"</SuccessIndicator></ReturnValue>"
"RTN","VBECDSS",73,0)
 QUIT
"RTN","VBECDSS",74,0)
TSTRIP(X) ;Strip trailing spaces
"RTN","VBECDSS",75,0)
 F  Q:X'?.E1" "  S X=$E(X,1,$L(X)-1)
"RTN","VBECDSS",76,0)
 Q X
"RTN","VBECENV")
0^41^B11886954^B11886954
"RTN","VBECENV",1,0)
VBECENV ;HOIFO/SAE - VBECS ENVIRONMENT CHECKER; 10/1/2005 ; 10/27/05 10:31am
"RTN","VBECENV",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECENV",3,0)
 ;
"RTN","VBECENV",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECENV",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECENV",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECENV",7,0)
 ;
"RTN","VBECENV",8,0)
 ; Integration Agreements:
"RTN","VBECENV",9,0)
 ;   References to routine XPDUTL supported by IA 10141
"RTN","VBECENV",10,0)
 ;
"RTN","VBECENV",11,0)
CHKENV ; Main entry point for environment checker
"RTN","VBECENV",12,0)
 ;Input : All variables set by KIDS
"RTN","VBECENV",13,0)
 ;Output: Variables required by KIDS to denote success or failure
"RTN","VBECENV",14,0)
 ;         of environment check (XPDQUIT and XPDABORT)
"RTN","VBECENV",15,0)
 D HDR       ; message to user that environment check is starting
"RTN","VBECENV",16,0)
 D PACKAGE   ; check for existence of required packages
"RTN","VBECENV",17,0)
 D PATCH     ; check for existence of required patches
"RTN","VBECENV",18,0)
 D ROUTINE   ; check for existence of required routines
"RTN","VBECENV",19,0)
 D FINALMSG  ; inform user of success or failure of environment check.
"RTN","VBECENV",20,0)
 Q
"RTN","VBECENV",21,0)
 ;
"RTN","VBECENV",22,0)
HDR D BMES^XPDUTL("Environment Check beginning...")
"RTN","VBECENV",23,0)
 Q
"RTN","VBECENV",24,0)
PACKAGE ; check for existence of required packages for install
"RTN","VBECENV",25,0)
 Q:$D(XPDABORT)
"RTN","VBECENV",26,0)
 N LINE,VBPKG,VBVERREQ,VBVER
"RTN","VBECENV",27,0)
 ;
"RTN","VBECENV",28,0)
 I $P($T(PKTXT+1),";",3)]"" D
"RTN","VBECENV",29,0)
 . D MES^XPDUTL("   Checking for required packages...")
"RTN","VBECENV",30,0)
 ;
"RTN","VBECENV",31,0)
 F LINE=1:1:9 D  Q:VBPKG']""!$D(XPDABORT)
"RTN","VBECENV",32,0)
 . S VBPKG=$P($T(PKTXT+LINE),";",3)
"RTN","VBECENV",33,0)
 . S VBVERREQ=$P($T(PKTXT+LINE),";",4)
"RTN","VBECENV",34,0)
 . Q:VBPKG']""!(VBVERREQ']"")
"RTN","VBECENV",35,0)
 . S VBVER=+$$VERSION^XPDUTL(VBPKG)
"RTN","VBECENV",36,0)
 . I (VBVER=VBVERREQ)!(VBVER>VBVERREQ) D  Q
"RTN","VBECENV",37,0)
 .. D MES^XPDUTL("      You have "_VBPKG_" version "_VBVER_" installed.")
"RTN","VBECENV",38,0)
 . I (VBVER<VBVERREQ) S XPDABORT=2 D
"RTN","VBECENV",39,0)
 .. D MES^XPDUTL("      You do not have "_VBPKG_" version "_VBVERREQ_" installed!")
"RTN","VBECENV",40,0)
 Q
"RTN","VBECENV",41,0)
PKTXT ;;Package Name;Version;
"RTN","VBECENV",42,0)
 ;;;;
"RTN","VBECENV",43,0)
 Q
"RTN","VBECENV",44,0)
 ;
"RTN","VBECENV",45,0)
PATCH ; check for existence of required patches for install
"RTN","VBECENV",46,0)
 Q:$D(XPDABORT)
"RTN","VBECENV",47,0)
 N LINE,VBPATCH
"RTN","VBECENV",48,0)
 ;
"RTN","VBECENV",49,0)
 I $P($T(PTXT+1),";",3)]"" D
"RTN","VBECENV",50,0)
 . D MES^XPDUTL("   Checking for required patches...")
"RTN","VBECENV",51,0)
 ;
"RTN","VBECENV",52,0)
 F LINE=1:1:9 D  Q:VBPATCH']""!$D(XPDABORT)
"RTN","VBECENV",53,0)
 . S VBPATCH=$P($T(PTXT+LINE),";",3)
"RTN","VBECENV",54,0)
 . Q:VBPATCH']""
"RTN","VBECENV",55,0)
 . I $$PATCH^XPDUTL(VBPATCH) D  Q
"RTN","VBECENV",56,0)
 .. D MES^XPDUTL("      You have patch "_VBPATCH_" installed.")
"RTN","VBECENV",57,0)
 . S XPDABORT=2
"RTN","VBECENV",58,0)
 . D MES^XPDUTL("      You do not have patch "_VBPATCH_" installed!")
"RTN","VBECENV",59,0)
 Q
"RTN","VBECENV",60,0)
PTXT ;;Patch designation e.g. OR*3.0*215;
"RTN","VBECENV",61,0)
 ;;;
"RTN","VBECENV",62,0)
 Q
"RTN","VBECENV",63,0)
ROUTINE ; check for existence of required routines for install
"RTN","VBECENV",64,0)
 Q:$D(XPDABORT)
"RTN","VBECENV",65,0)
 N LINE,VBRTN
"RTN","VBECENV",66,0)
 ;
"RTN","VBECENV",67,0)
 I $P($T(RTNTXT+1),";",3)]"" D
"RTN","VBECENV",68,0)
 . D MES^XPDUTL("   Checking for required routines...")
"RTN","VBECENV",69,0)
 ;
"RTN","VBECENV",70,0)
 F LINE=1:1:9 D  Q:VBRTN']""!$D(XPDABORT)
"RTN","VBECENV",71,0)
 . S VBRTN=$P($T(RTNTXT+LINE),";",3) Q:VBRTN']""
"RTN","VBECENV",72,0)
 . S X=VBRTN X ^%ZOSF("TEST") I $T D  Q
"RTN","VBECENV",73,0)
 .. D MES^XPDUTL("      You have routine "_VBRTN_" installed.")
"RTN","VBECENV",74,0)
 . S XPDABORT=2
"RTN","VBECENV",75,0)
 . D MES^XPDUTL("      You do not have routine "_VBRTN_" installed!")
"RTN","VBECENV",76,0)
 Q
"RTN","VBECENV",77,0)
RTNTXT ;;Routine Name;
"RTN","VBECENV",78,0)
 ;;XOBVSKT;
"RTN","VBECENV",79,0)
 ;;XOBUM;
"RTN","VBECENV",80,0)
 Q
"RTN","VBECENV",81,0)
FINALMSG ;
"RTN","VBECENV",82,0)
 I '$G(XPDABORT) D
"RTN","VBECENV",83,0)
 . D MES^XPDUTL("Environment check successful.  Installation will proceed.")
"RTN","VBECENV",84,0)
 I +$G(XPDABORT) D
"RTN","VBECENV",85,0)
 . D MES^XPDUTL("Required element missing!")
"RTN","VBECENV",86,0)
 . D MES^XPDUTL("**** Environment check failed.  Installation will be aborted. ****")
"RTN","VBECENV",87,0)
 D MES^XPDUTL("")  ; pad one blank line
"RTN","VBECENV",88,0)
 Q
"RTN","VBECHLOR")
0^42^B17460611^B17460611
"RTN","VBECHLOR",1,0)
VBECHLOR ;;HOIFO/BNT-VBECS HL7 Order Update Message ;February 04, 2004
"RTN","VBECHLOR",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECHLOR",3,0)
 ;
"RTN","VBECHLOR",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECHLOR",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECHLOR",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECHLOR",7,0)
 ; 
"RTN","VBECHLOR",8,0)
 ; Integration Agreements:
"RTN","VBECHLOR",9,0)
 ; Reference to GENACK^HLMA1 supported by IA #2165
"RTN","VBECHLOR",10,0)
 ;
"RTN","VBECHLOR",11,0)
 QUIT
"RTN","VBECHLOR",12,0)
 ;
"RTN","VBECHLOR",13,0)
EN ; -- main entry point for HL7 v1.6 message processing.
"RTN","VBECHLOR",14,0)
 N ORMSG,ORNMSP,ORTYPE,ORACK,ORERR,ORVP,ORTS,ORL,ORCAT,I,J,SNDACK,SG
"RTN","VBECHLOR",15,0)
 N ORDCNTRL,ORDSTS,PKGIFN,ORIFN,ORNP,ORTN,ORLOG,ORDUZ,ORQT,ORSTRT,ORSTOP
"RTN","VBECHLOR",16,0)
 N ORURG,ORNATR,OREASON,ORI,ORSEG,ORSEGID
"RTN","VBECHLOR",17,0)
 ;
"RTN","VBECHLOR",18,0)
 ; Is this an Acknowledgement message?  Additional ACK message types
"RTN","VBECHLOR",19,0)
 ; should be included in this $S statment where appropriate to set
"RTN","VBECHLOR",20,0)
 ; ORACK=1
"RTN","VBECHLOR",21,0)
 S ORACK=$S(HL("MTN")="ORG":1,HL("MTN")="ACK":1,1:0)
"RTN","VBECHLOR",22,0)
 ;
"RTN","VBECHLOR",23,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","VBECHLOR",24,0)
 . S ORMSG(I)=HLNODE,J=0
"RTN","VBECHLOR",25,0)
 . F  S J=$O(HLNODE(J)) Q:'J  S ORMSG(I,J)=HLNODE(J)
"RTN","VBECHLOR",26,0)
 ;
"RTN","VBECHLOR",27,0)
 ;I $G(VBTEST) S X=0 F  S X=$O(^XTMP("VBECS-ORM",$J,X)) Q:X=""  S ORMSG(X)=^(X)
"RTN","VBECHLOR",28,0)
 S ORNMSP=$$NMSP(HL("SAN")),ORTYPE=HL("MTN")
"RTN","VBECHLOR",29,0)
 I '$L(ORNMSP) S ORERR="Missing or invalid sending application" D ERROR Q
"RTN","VBECHLOR",30,0)
 S ORTN="EN^ORM"_ORNMSP
"RTN","VBECHLOR",31,0)
 ;
"RTN","VBECHLOR",32,0)
 S ORI=0 F  S ORI=$O(ORMSG(ORI)) Q:'ORI  D  Q:$D(ORERR)
"RTN","VBECHLOR",33,0)
 . S ORSEG=ORMSG(ORI),ORSEGID=$P(ORMSG(ORI),HL("FS"))
"RTN","VBECHLOR",34,0)
 . I $T(@ORSEGID)]"" D @ORSEGID
"RTN","VBECHLOR",35,0)
 Q:$D(ORERR)
"RTN","VBECHLOR",36,0)
 ;
"RTN","VBECHLOR",37,0)
 I $L($G(ORDCNTRL)) D @ORTN I $D(ORERR) D ERROR Q
"RTN","VBECHLOR",38,0)
 I 'ORACK D GENACK
"RTN","VBECHLOR",39,0)
 ; If this is an Order Complete message, send message to Lab to complete the Lab order too.
"RTN","VBECHLOR",40,0)
 I ORDSTS="CM" D MSG^XQOR("LR7O VBECS RECEIVE",.ORMSG)
"RTN","VBECHLOR",41,0)
 Q
"RTN","VBECHLOR",42,0)
 ;
"RTN","VBECHLOR",43,0)
ORC S ORDCNTRL=$TR($P(ORSEG,HL("FS"),2),"@","P")
"RTN","VBECHLOR",44,0)
 I '$L(ORDCNTRL) S ORERR="Invalid control code" D ERROR Q
"RTN","VBECHLOR",45,0)
 S ORIFN=$P($P(ORSEG,HL("FS"),3),$E(HL("ECH")))
"RTN","VBECHLOR",46,0)
 S PKGIFN=$P($P(ORSEG,HL("FS"),4),$E(HL("ECH")))
"RTN","VBECHLOR",47,0)
 I ORIFN,$G(ORVP),$D(^OR(100,+ORIFN,0)),$P(^(0),U,2)'=ORVP S ORERR="Patient doesn't match" D ERROR Q
"RTN","VBECHLOR",48,0)
 S ORDSTS=$P(ORSEG,HL("FS"),6)
"RTN","VBECHLOR",49,0)
 S ORQT=$P(ORSEG,HL("FS"),8)
"RTN","VBECHLOR",50,0)
 S ORSTRT=$$FMDATE($P(ORQT,U,4))
"RTN","VBECHLOR",51,0)
 S ORSTOP=$$FMDATE($P(ORQT,U,5))
"RTN","VBECHLOR",52,0)
 S ORURG=$$URGENCY($P(ORQT,U,6))
"RTN","VBECHLOR",53,0)
 S ORLOG=$$FMDATE($P(ORSEG,HL("FS"),10))
"RTN","VBECHLOR",54,0)
 S ORDUZ=+$P(ORSEG,HL("FS"),11) D DUZ^XUP(ORDUZ)
"RTN","VBECHLOR",55,0)
 S ORNP=+$P(ORSEG,HL("FS"),13)
"RTN","VBECHLOR",56,0)
 S OREASON=$P(ORSEG,HL("FS"),17)
"RTN","VBECHLOR",57,0)
 S ORNATR=$S($P(OREASON,$E(HL("ECH")),3)="99ORN":$P(OREASON,$E(HL("ECH"))),1:"")
"RTN","VBECHLOR",58,0)
 Q
"RTN","VBECHLOR",59,0)
 ;
"RTN","VBECHLOR",60,0)
NMSP(NAME) ; -- Returns pkg namespace
"RTN","VBECHLOR",61,0)
 I NAME="RADIOLOGY"!(NAME="IMAGING") Q "RA"
"RTN","VBECHLOR",62,0)
 I NAME="LABORATORY" Q "LR"
"RTN","VBECHLOR",63,0)
 I NAME="DIETETICS" Q "FH"
"RTN","VBECHLOR",64,0)
 I NAME="PHARMACY" Q "PS"
"RTN","VBECHLOR",65,0)
 I NAME="CONSULTS" Q "GMRC"
"RTN","VBECHLOR",66,0)
 I NAME="PROCEDURES" Q "GMRC"
"RTN","VBECHLOR",67,0)
 I NAME="ORDER ENTRY" Q "ORG"
"RTN","VBECHLOR",68,0)
 I NAME="VBECS" Q "VBEC"
"RTN","VBECHLOR",69,0)
 Q ""
"RTN","VBECHLOR",70,0)
 ;
"RTN","VBECHLOR",71,0)
MSA ; -- Process MSA segment
"RTN","VBECHLOR",72,0)
 S ORACK=1
"RTN","VBECHLOR",73,0)
 I $P(ORSEG,HL("FS"),2)'="AA" D
"RTN","VBECHLOR",74,0)
 . S ORERR=$P(ORSEG,HL("FS"),4)
"RTN","VBECHLOR",75,0)
 . I '$D(OREASON) S OREASON=U_ORERR
"RTN","VBECHLOR",76,0)
 . D ERROR Q
"RTN","VBECHLOR",77,0)
 Q
"RTN","VBECHLOR",78,0)
 ;
"RTN","VBECHLOR",79,0)
PID ; -- Process PID segment
"RTN","VBECHLOR",80,0)
 ;    Sets PID, ORVP, ORTS if valid patient
"RTN","VBECHLOR",81,0)
 N I,DFN,SEG,PIDLST,X
"RTN","VBECHLOR",82,0)
 ; Adding logic to support v2.4 Patient Id List
"RTN","VBECHLOR",83,0)
 S PIDLST=$P(ORSEG,HL("FS"),4)
"RTN","VBECHLOR",84,0)
 I PIDLST[$E(HL("ECH")) D
"RTN","VBECHLOR",85,0)
 . F I=1:1:$L(PIDLST,$E(HL("ECH"),2)) S X=$P(PIDLST,$E(HL("ECH"),2),I) Q:X=""  I $P(X,$E(HL("ECH")),5)["PI" S DFN=+X Q
"RTN","VBECHLOR",86,0)
 I PIDLST'[$E(HL("ECH")) S DFN=+$P(ORSEG,HL("FS"),4),PID=ORSEG
"RTN","VBECHLOR",87,0)
 I $D(^DPT(DFN,0)) S ORVP=DFN_";DPT(",ORTS=$G(^DPT(DFN,.103)) Q
"RTN","VBECHLOR",88,0)
 S:$L($P(ORSEG,HL("FS"),5)) ORVP=$P(ORSEG,HL("FS"),5) ; alt ID for Lab
"RTN","VBECHLOR",89,0)
 I '$G(ORVP) S ORERR="Missing or invalid patient ID" D ERROR Q
"RTN","VBECHLOR",90,0)
 Q
"RTN","VBECHLOR",91,0)
 ;
"RTN","VBECHLOR",92,0)
PV1 ; -- Process PV1 segment
"RTN","VBECHLOR",93,0)
 ;    Sets ORCAT, & ORL if valid location
"RTN","VBECHLOR",94,0)
 N I,X
"RTN","VBECHLOR",95,0)
 S X=+$P(ORSEG,HL("FS"),4),ORCAT=$P(ORSEG,HL("FS"),3)
"RTN","VBECHLOR",96,0)
 S:$D(^SC(X,0)) ORL=X_";SC("
"RTN","VBECHLOR",97,0)
 Q
"RTN","VBECHLOR",98,0)
 ;
"RTN","VBECHLOR",99,0)
ORDITEM(USID) ; -- Returns pointer to Orderable Item file for USID
"RTN","VBECHLOR",100,0)
 N ID,OI
"RTN","VBECHLOR",101,0)
 S ID=$P(USID,U,4)_";"_$P(USID,U,6)
"RTN","VBECHLOR",102,0)
 S OI=+$O(^ORD(101.43,"ID",ID,0))
"RTN","VBECHLOR",103,0)
 Q OI
"RTN","VBECHLOR",104,0)
 ;
"RTN","VBECHLOR",105,0)
URGENCY(CODE) ; -- Return ptr to Order Urgency file #101.42
"RTN","VBECHLOR",106,0)
 S:'$L(CODE) CODE="R"
"RTN","VBECHLOR",107,0)
 Q $O(^ORD(101.42,"C",CODE,0))
"RTN","VBECHLOR",108,0)
 ;
"RTN","VBECHLOR",109,0)
FMDATE(Y) ; -- Convert HL7 date/time to FM format
"RTN","VBECHLOR",110,0)
 Q $$HL7TFM^XLFDT(Y)  ;**97
"RTN","VBECHLOR",111,0)
 ;
"RTN","VBECHLOR",112,0)
ERROR ; -- Log an error and return ACK if necessary
"RTN","VBECHLOR",113,0)
 N ORV S ORV("XQY0")="",ORQUIT=1
"RTN","VBECHLOR",114,0)
 D EN^ORERR(ORERR,.ORMSG,.ORV)
"RTN","VBECHLOR",115,0)
 ; send an ack to current message ??
"RTN","VBECHLOR",116,0)
 I 'ORACK D GENACK
"RTN","VBECHLOR",117,0)
 Q
"RTN","VBECHLOR",118,0)
 ;
"RTN","VBECHLOR",119,0)
GENACK ; -- Send and acknowldegement to original message
"RTN","VBECHLOR",120,0)
 ;Q:$G(VBTEST)
"RTN","VBECHLOR",121,0)
 S MSA1="AA"
"RTN","VBECHLOR",122,0)
 I $D(ORERR) S MSA1="AR"
"RTN","VBECHLOR",123,0)
 S HLA("HLA",1)="MSA"_HL("FS")_MSA1_HL("FS")_HL("MID")_$S($D(ORERR):HL("FS")_ORERR,1:"")
"RTN","VBECHLOR",124,0)
 S HLEID=HL("EID"),HLEIDS=HL("EIDS")
"RTN","VBECHLOR",125,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.RESULT)
"RTN","VBECHLOR",126,0)
 K MSA
"RTN","VBECHLOR",127,0)
 Q
"RTN","VBECHLOR",128,0)
TEST ; Testing utility
"RTN","VBECHLOR",129,0)
 Q
"RTN","VBECHLOR",130,0)
 S VBTEST=1
"RTN","VBECHLOR",131,0)
 S HL("FS")="|",HL("ECH")="^~\&",HL("SAN")="VBECS",HL("RAN")="OERR"
"RTN","VBECHLOR",132,0)
 S HL("MTN")="OMG"
"RTN","VBECHLOR",133,0)
 D EN
"RTN","VBECHLOR",134,0)
 Q
"RTN","VBECHLRT")
0^43^B3777483^B3777483
"RTN","VBECHLRT",1,0)
VBECHLRT ;HOIFO/BNT - VBECS HL7 ADT Messaging Routing routine;July 13, 2004
"RTN","VBECHLRT",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECHLRT",3,0)
 ;
"RTN","VBECHLRT",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECHLRT",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECHLRT",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECHLRT",7,0)
 ; 
"RTN","VBECHLRT",8,0)
 ; Integration Agreements:
"RTN","VBECHLRT",9,0)
 ; Reference to ^%ZTLOAD supported by IA #10063
"RTN","VBECHLRT",10,0)
 ; Reference to INIT^HLFNC2 supported by IA #2161
"RTN","VBECHLRT",11,0)
 ; Reference to GENERATE^HLMA supported by IA #2164
"RTN","VBECHLRT",12,0)
 ; Reference to GETDFN^MPIF001 supported by IA #2701
"RTN","VBECHLRT",13,0)
 ;
"RTN","VBECHLRT",14,0)
 QUIT
"RTN","VBECHLRT",15,0)
 ;
"RTN","VBECHLRT",16,0)
EN ; Get Message and queue TaskMan to send it on.
"RTN","VBECHLRT",17,0)
 ;
"RTN","VBECHLRT",18,0)
 ; Only send ADT A08 Message Types
"RTN","VBECHLRT",19,0)
 N VBECEVNT,HLA,MSG,VBI,VBJ,SG,VBECSEND
"RTN","VBECHLRT",20,0)
 D INIT^HLFNC2("VAFC ADT-A08 SERVER",.HL) ;Initialize HL7 variables
"RTN","VBECHLRT",21,0)
 S VBECEVNT=HL("ETN")
"RTN","VBECHLRT",22,0)
 S VBECSEND=0
"RTN","VBECHLRT",23,0)
 Q:VBECEVNT'[$E("A08")
"RTN","VBECHLRT",24,0)
 F VBI=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","VBECHLRT",25,0)
 . S HLA("HLS",VBI)=MSG
"RTN","VBECHLRT",26,0)
 . S VBJ=0 F  S VBJ=$O(HLNODE(VBJ)) Q:'VBJ  S MSG(VBJ)=HLNODE(VBJ),HLA("HLS",VBI,VBJ)=HLNODE(VBJ)
"RTN","VBECHLRT",27,0)
 . I $T(@SG)]"" D @SG
"RTN","VBECHLRT",28,0)
 Q:'VBECSEND
"RTN","VBECHLRT",29,0)
 ;
"RTN","VBECHLRT",30,0)
 S ZTIO=""
"RTN","VBECHLRT",31,0)
 S ZTRTN="SNDMSG^VBECHLRT"
"RTN","VBECHLRT",32,0)
 S ZTSAVE("HLA(""HLS"",")=""
"RTN","VBECHLRT",33,0)
 S ZTSAVE("VBECEVNT")=""
"RTN","VBECHLRT",34,0)
 S ZTDESC="VBECS HL7 Message Router"
"RTN","VBECHLRT",35,0)
 S ZTDTH=$H
"RTN","VBECHLRT",36,0)
 D ^%ZTLOAD
"RTN","VBECHLRT",37,0)
 D EXIT
"RTN","VBECHLRT",38,0)
 Q
"RTN","VBECHLRT",39,0)
 ;
"RTN","VBECHLRT",40,0)
ZFF ; This segment contains the edited fields
"RTN","VBECHLRT",41,0)
 N X,VBECFLDS
"RTN","VBECHLRT",42,0)
 S VBECFLDS=$P(MSG,HL("FS"),3)
"RTN","VBECHLRT",43,0)
 F I=1:1 S X=$P(VBECFLDS,";",I) Q:X']""  D  Q:VBECSEND
"RTN","VBECHLRT",44,0)
 . S VBECSEND=$S(X=".01":1,X=".02":1,X=".03":1,X=".09":1,X=".351":1,X="991.01":1,1:0)
"RTN","VBECHLRT",45,0)
 Q
"RTN","VBECHLRT",46,0)
 ;
"RTN","VBECHLRT",47,0)
SNDMSG ; Create the ^TMP("HLS",$J global array and send the message
"RTN","VBECHLRT",48,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","VBECHLRT",49,0)
 N EID
"RTN","VBECHLRT",50,0)
 S EID=$O(^ORD(101,"B","VBECS ADT-"_VBECEVNT_" SERVER",0))
"RTN","VBECHLRT",51,0)
 N HL,INT,HLRESLT,HLP
"RTN","VBECHLRT",52,0)
 S HL="HL",INT=0
"RTN","VBECHLRT",53,0)
 D INIT^HLFNC2(EID,.HL,INT)
"RTN","VBECHLRT",54,0)
 D GENERATE^HLMA(EID,"LM",1,.HLRESLT,"",.HLP)
"RTN","VBECHLRT",55,0)
 K HLA,VBECEVNT
"RTN","VBECHLRT",56,0)
 Q
"RTN","VBECHLRT",57,0)
 ;
"RTN","VBECHLRT",58,0)
EXIT ; Kill variables and quit
"RTN","VBECHLRT",59,0)
 K SG,ZTIO,ZTSAVE,ZTDESC,ZTRTN,ZTDTH
"RTN","VBECHLRT",60,0)
 Q
"RTN","VBECLU")
0^44^B62085514^B62085514
"RTN","VBECLU",1,0)
VBECLU ;HIOFO/bnt-VBECS Patient Lookup Utility ; 9/8/05 12:43pm
"RTN","VBECLU",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECLU",3,0)
 ;
"RTN","VBECLU",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECLU",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECLU",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECLU",7,0)
 ; 
"RTN","VBECLU",8,0)
 ; Integration Agreements:
"RTN","VBECLU",9,0)
 ; Call to GETICN^MPIF001 is supported by IA: 2701
"RTN","VBECLU",10,0)
 ; Reference to $$FMTHL7^XLFDT supported by IA #10103
"RTN","VBECLU",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECLU",12,0)
 ; Reference to DT^DICRW supported by IA #10005
"RTN","VBECLU",13,0)
 ; Call to $$UP^XLFSTR is supported by IA: 10104
"RTN","VBECLU",14,0)
 ; Call to ^DIM is supported by IA: 10016
"RTN","VBECLU",15,0)
 ; Call to ^VA(200 is supported by IA: 10060
"RTN","VBECLU",16,0)
 ; Reference to FIND^DIC supported by IA #2051
"RTN","VBECLU",17,0)
 ; 
"RTN","VBECLU",18,0)
 ;
"RTN","VBECLU",19,0)
 SET X="You Can't Enter VBECLU at top of routine!"
"RTN","VBECLU",20,0)
 QUIT
"RTN","VBECLU",21,0)
 ;
"RTN","VBECLU",22,0)
SEARCH(RESULT,PARAMS) ; -- return patient data in XML format
"RTN","VBECLU",23,0)
 ; -- RPC:  VBEC PATIENT LOOKUP SEARCH
"RTN","VBECLU",24,0)
 ; -- 
"RTN","VBECLU",25,0)
 ; -- input  PARAMS ARRAY
"RTN","VBECLU",26,0)
 ;           PARAMS("SEARCH_TYPE") = "NAME", "SSN", ICN, SSN4
"RTN","VBECLU",27,0)
 ;           PARAMS("SEARCH_VALUE") = value to search for.
"RTN","VBECLU",28,0)
 ; 
"RTN","VBECLU",29,0)
 NEW I,X,Y,VBECPCNT,VBECLINE,VBECRSLT,SEARCH,VALUE,FILTER,FILTERV,BDATE,EDATE
"RTN","VBECLU",30,0)
 NEW MAXSIZE,MAXSIZRE,LINENO,DELIM,MSCREEN,RESTRICT,ERRMSG
"RTN","VBECLU",31,0)
 IF '$D(DT) D DT^DICRW
"RTN","VBECLU",32,0)
 ;KILL RESULT
"RTN","VBECLU",33,0)
 SET VBECPCNT=0
"RTN","VBECLU",34,0)
 SET VBECLINE=0
"RTN","VBECLU",35,0)
 SET VBECRSLT="^TMP(""VBEC-PLU-SEARCH"",$J)"
"RTN","VBECLU",36,0)
 SET RESULT=$NA(@VBECRSLT)
"RTN","VBECLU",37,0)
 K @RESULT
"RTN","VBECLU",38,0)
 ;
"RTN","VBECLU",39,0)
 SET SEARCH=$$UP^XLFSTR($GET(PARAMS("SEARCH_TYPE")))
"RTN","VBECLU",40,0)
 SET VALUE=$$UP^XLFSTR($GET(PARAMS("SEARCH_VALUE")))
"RTN","VBECLU",41,0)
 SET MAXSIZE=+$GET(PARAMS("MAX_PATIENTS"),50),MAXSIZRE=0
"RTN","VBECLU",42,0)
 IF (MAXSIZE<5) SET MAXSIZE=5
"RTN","VBECLU",43,0)
 IF (MAXSIZE>100) SET MAXSIZE=100
"RTN","VBECLU",44,0)
 ;
"RTN","VBECLU",45,0)
 SET FILTER=$$UP^XLFSTR($GET(PARAMS("FILTER_TYPE")))
"RTN","VBECLU",46,0)
 SET FILTERV=$G(PARAMS("FILTER_VALUE"))
"RTN","VBECLU",47,0)
 SET BDATE=$G(PARAMS("CLINIC_STARTDATE"))
"RTN","VBECLU",48,0)
 SET EDATE=$G(PARAMS("CLINIC_ENDDATE"))
"RTN","VBECLU",49,0)
 SET MSCREEN=$$UP^XLFSTR($G(PARAMS("MSCREEN")))
"RTN","VBECLU",50,0)
 IF MSCREEN'="" DO
"RTN","VBECLU",51,0)
 . SET X=MSCREEN D ^DIM IF $D(X)=0 SET MSCREEN="" SET ERRMSG="MSCREEN is invalid M code" Q
"RTN","VBECLU",52,0)
 . IF $E(MSCREEN)'="I" SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, must start with an If statement." Q
"RTN","VBECLU",53,0)
 . IF MSCREEN[" S "!(MSCREEN[" SET ")!(MSCREEN[" S:")!(MSCREEN["SET:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not set values." Q
"RTN","VBECLU",54,0)
 . IF MSCREEN[" K "!(MSCREEN[" KILL ")!(MSCREEN[" K:")!(MSCREEN["SET:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not kill values." Q
"RTN","VBECLU",55,0)
 . IF MSCREEN[" W "!(MSCREEN[" WRITE ")!(MSCREEN[" W:")!(MSCREEN["WRITE:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not WRITE." Q
"RTN","VBECLU",56,0)
 SET DELIM=$G(PARAMS("DELIMITER"),",") ; Defaults to comma to support old way.
"RTN","VBECLU",57,0)
 ; 
"RTN","VBECLU",58,0)
 SET RESTRICT=$G(^VA(200,+$G(DUZ),101))
"RTN","VBECLU",59,0)
 IF +RESTRICT DO
"RTN","VBECLU",60,0)
 . S CODE="I $D(^OR(100.21,"_$P(RESTRICT,"^",2)_",10,""B"",+$G(DFN)_"";DPT(""))"
"RTN","VBECLU",61,0)
 . IF MSCREEN'="" S MSCREEN=" "_CODE Q
"RTN","VBECLU",62,0)
 . IF MSCREEN="" S MSCREEN=CODE
"RTN","VBECLU",63,0)
 ;
"RTN","VBECLU",64,0)
 IF (FILTER'=""),(FILTERV'="") DO BYFILTER^VBECLU0(FILTER,FILTERV,BDATE,EDATE,SEARCH,VALUE,DELIM) GOTO DONE
"RTN","VBECLU",65,0)
 ;
"RTN","VBECLU",66,0)
 IF (SEARCH="NAME")!(SEARCH="SSN")!(SEARCH="ICN")!(SEARCH="SSN4") D BYNAME
"RTN","VBECLU",67,0)
 ELSE  DO  GOTO DONE
"RTN","VBECLU",68,0)
 . DO ADD("<record count='0'>")
"RTN","VBECLU",69,0)
 . DO ADD("<error message='Searching for patients by "_SEARCH_" not yet implemented!'></error>")
"RTN","VBECLU",70,0)
 QUIT
"RTN","VBECLU",71,0)
 ;
"RTN","VBECLU",72,0)
BYNAME ;
"RTN","VBECLU",73,0)
 NEW FULLCNT,VBECPCNT,VBEC,NODE,DFN,XREF
"RTN","VBECLU",74,0)
 ;; copied From scutbk11
"RTN","VBECLU",75,0)
 ;; DO FIND^DIC(2,,".01;.03;.363;.09","PS",VALUE,300,"B^BS^BS5^SSN")
"RTN","VBECLU",76,0)
 ;
"RTN","VBECLU",77,0)
 IF VALUE="" DO  GOTO DONE
"RTN","VBECLU",78,0)
 . DO ADD("<record count='0'>")
"RTN","VBECLU",79,0)
 . DO ADD("<error message='Not Enough Information Provided to Search for Patients for Search Type = """_SEARCH_"""'></error>")
"RTN","VBECLU",80,0)
 ;
"RTN","VBECLU",81,0)
 IF SEARCH="NAME" SET XREF="B",VALUE=$TR(VALUE," ","") ;REMOVE SPACES
"RTN","VBECLU",82,0)
 IF SEARCH="SSN" SET XREF="BS^SSN^CN^RM",VALUE=$TR(VALUE," -","") ; REMOVE DASHES AND SPACES
"RTN","VBECLU",83,0)
 IF SEARCH="SSN4" SET XREF="BS5" DO 
"RTN","VBECLU",84,0)
 . IF $L(VALUE)>5 SET VALUE=$E(VALUE,1,5) ; can't exceed 5 characters, if P for psuedo on end take it off.
"RTN","VBECLU",85,0)
 IF SEARCH="ICN" SET XREF="AICN"
"RTN","VBECLU",86,0)
 DO FIND^DIC(2,,".01;.03;.09","MPS",VALUE,,XREF)
"RTN","VBECLU",87,0)
 IF $G(DIERR) DO  GOTO DONE
"RTN","VBECLU",88,0)
 . DO ADD("<record count='0'>")
"RTN","VBECLU",89,0)
 . DO ADD("<error message='Error occured in VistA during patient lookup'></error>")
"RTN","VBECLU",90,0)
 . DO CLEAN^DILF
"RTN","VBECLU",91,0)
 SET FULLCNT=+$G(^TMP("DILIST",$J,0))
"RTN","VBECLU",92,0)
 DO ADD("<record count='0'>")
"RTN","VBECLU",93,0)
 SET LINENO=VBECLINE
"RTN","VBECLU",94,0)
 ;
"RTN","VBECLU",95,0)
 SET VBECPCNT=0
"RTN","VBECLU",96,0)
 FOR VBEC=1:1:FULLCNT D  ;Q:$$STOP^XOBVLIB()
"RTN","VBECLU",97,0)
 . SET NODE=^TMP("DILIST",$J,VBEC,0)
"RTN","VBECLU",98,0)
 . SET DFN=$P(NODE,"^",1)
"RTN","VBECLU",99,0)
 . D PTDATA(+NODE,.VBECPCNT)
"RTN","VBECLU",100,0)
 I $G(ERRMSG)]"" D
"RTN","VBECLU",101,0)
 . DO ADD("<error message=''>"_$G(ERRMSG)_"</error>")
"RTN","VBECLU",102,0)
 ;IF ($G(MAXSIZRE)<1) DO ADD("<maximum message=''></maximum>")
"RTN","VBECLU",103,0)
 SET @VBECRSLT@(LINENO)="<record count='"_VBECPCNT_"'>"
"RTN","VBECLU",104,0)
 ;
"RTN","VBECLU",105,0)
DONE ;
"RTN","VBECLU",106,0)
 DO ADD("</record>")
"RTN","VBECLU",107,0)
 IF 1
"RTN","VBECLU",108,0)
 QUIT
"RTN","VBECLU",109,0)
 ;
"RTN","VBECLU",110,0)
EXIT ;
"RTN","VBECLU",111,0)
 QUIT
"RTN","VBECLU",112,0)
 ;
"RTN","VBECLU",113,0)
PTDATA(DFN,VBECPCNT) ;
"RTN","VBECLU",114,0)
 NEW I,DONE,LINE,ALIAS,NAME,PTNAME,DOB,DOD,SSN,TYPE,GENDER,ICN,PRIM,SC,SCPER,VET,WARD,ROOMBED,SENSITIV,DOBCODE,FNAME,LNAME,MI,X1,X2
"RTN","VBECLU",115,0)
 ;IF VBECPCNT>(MAXSIZE-1) DO MAXOUT QUIT
"RTN","VBECLU",116,0)
 IF (MSCREEN'="") X MSCREEN I '$T Q
"RTN","VBECLU",117,0)
 SET VBECPCNT=VBECPCNT+1
"RTN","VBECLU",118,0)
 ;SET LINE="<patient number='"_VBECPCNT_"' dfn='"_DFN_"'"
"RTN","VBECLU",119,0)
 DO ADD("<Patient><Number>"_VBECPCNT_"</Number><VistaPatientID>"_DFN_"</VistaPatientID>")
"RTN","VBECLU",120,0)
 ;
"RTN","VBECLU",121,0)
 SET PTNAME=$P(^DPT(DFN,0),"^",1)
"RTN","VBECLU",122,0)
 SET X1=$P(PTNAME,",",2),X2=$L(X1," "),MI=""
"RTN","VBECLU",123,0)
 IF X2 SET MI=$P(X1," ",2),X1=$P(X1," ")
"RTN","VBECLU",124,0)
 SET FNAME=$$CHARCHK^XOBVLIB(X1),MI=$$CHARCHK^XOBVLIB(MI)
"RTN","VBECLU",125,0)
 SET LNAME=$$CHARCHK^XOBVLIB($P(PTNAME,","))
"RTN","VBECLU",126,0)
 ;
"RTN","VBECLU",127,0)
 ; -- REQUIRED COMPONENTS
"RTN","VBECLU",128,0)
 SET SENSITIV=$S($P($G(^DGSL(38.1,DFN,0)),"^",2)=1:"true",1:"false")
"RTN","VBECLU",129,0)
 ; Get DOB and determine if month or day is zero and add DOB Code.
"RTN","VBECLU",130,0)
 SET DOB=$$FMTHL7^XLFDT($P($G(^DPT(DFN,0)),"^",3)),DOBCODE="V"
"RTN","VBECLU",131,0)
 ; Get Date Of Death
"RTN","VBECLU",132,0)
 SET DOD=$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT($P($G(^DPT(DFN,.35)),"^")))
"RTN","VBECLU",133,0)
 IF $E(DOB,5,8)["00" DO
"RTN","VBECLU",134,0)
 . SET:$E(DOB,5,8)="0000" $E(DOB,5,8)="0101",DOBCODE="B" Q  ; Both zero
"RTN","VBECLU",135,0)
 . SET:$E(DOB,5,6)="00" $E(DOB,5,6)="01",DOBCODE="M" Q  ; Month zero
"RTN","VBECLU",136,0)
 . SET:$E(DOB,6,8)="00" $E(DOB,6,8)="01",DOBCODE="D" Q  ; day zero
"RTN","VBECLU",137,0)
 S DOB=$$CHARCHK^XOBVLIB(DOB)
"RTN","VBECLU",138,0)
 SET SSN=$$CHARCHK^XOBVLIB($P($G(^DPT(DFN,0)),"^",9))
"RTN","VBECLU",139,0)
 ;SET LINE=LINE_" sensitive='"_SENSITIV_"' name='"_NAME_"' dob='"_DOB_"' ssn='"_SSN_"' "
"RTN","VBECLU",140,0)
 DO ADD("<PatientLastName>"_LNAME_"</PatientLastName><PatientFirstName>"_FNAME_"</PatientFirstName><PatientMiddleName>"_MI_"</PatientMiddleName>")
"RTN","VBECLU",141,0)
 DO ADD("<Sensitive>"_SENSITIV_"</Sensitive><PatientDOB>"_DOB_"</PatientDOB><PatientDOBCode>"_DOBCODE_"</PatientDOBCode><PatientSSN>"_SSN_"</PatientSSN>")
"RTN","VBECLU",142,0)
 DO ADD("<PatientDeathDate>"_DOD_"</PatientDeathDate>")
"RTN","VBECLU",143,0)
 ;
"RTN","VBECLU",144,0)
 ; -- OPTIONAL COMPONENTS
"RTN","VBECLU",145,0)
 ;Patient Type (391)
"RTN","VBECLU",146,0)
 SET TYPE=$$CHARCHK^XOBVLIB($P($G(^DG(391,+$G(^DPT(DFN,"TYPE")),0)),"^",1))
"RTN","VBECLU",147,0)
 ;
"RTN","VBECLU",148,0)
 ;gender
"RTN","VBECLU",149,0)
 SET GENDER=$$CHARCHK^XOBVLIB($P($G(^DPT(DFN,0)),"^",2))
"RTN","VBECLU",150,0)
 ;
"RTN","VBECLU",151,0)
 ;icn
"RTN","VBECLU",152,0)
 SET ICN=$P($G(^DPT(DFN,"MPI")),"^",1)
"RTN","VBECLU",153,0)
 ; This API sets the ICN checksum.  
"RTN","VBECLU",154,0)
 SET ICN=$$GETICN^MPIF001(DFN)
"RTN","VBECLU",155,0)
 IF +ICN<0 SET ICN=$$ICNLC^MPIF001(DFN)
"RTN","VBECLU",156,0)
 ;
"RTN","VBECLU",157,0)
 ;Primary Eligibility(.361)
"RTN","VBECLU",158,0)
 SET PRIM=$$PRIM(DFN)
"RTN","VBECLU",159,0)
 ;
"RTN","VBECLU",160,0)
 SET SC=$P($G(^DPT(DFN,.3)),"^",1,2) ;Is Service Connected (.301) %=.302
"RTN","VBECLU",161,0)
 SET SCPER=$P(SC,"^",2)
"RTN","VBECLU",162,0)
 IF $P(SC,"^",1)="Y" SET SC="true"
"RTN","VBECLU",163,0)
 IF $P(SC,"^",1)="N" SET SC="false"
"RTN","VBECLU",164,0)
 ;
"RTN","VBECLU",165,0)
 SET VET=$P($G(^DPT(DFN,"VET")),"^",1) ;Veteran Status (1901)
"RTN","VBECLU",166,0)
 IF VET="Y" SET VET="true"
"RTN","VBECLU",167,0)
 IF VET="N" SET VET="false"
"RTN","VBECLU",168,0)
 ;
"RTN","VBECLU",169,0)
 SET WARD=$$CHARCHK^XOBVLIB($E($G(^DPT(DFN,.1)),1,30))
"RTN","VBECLU",170,0)
 SET ROOMBED=$$CHARCHK^XOBVLIB($P($G(^DPT(DFN,.101)),"^",1))
"RTN","VBECLU",171,0)
 ;
"RTN","VBECLU",172,0)
 ;SET LINE=LINE_" type='"_TYPE_"' primaryeligibility='"_PRIM_"' serviceconnected='"_SC_"' scpercent='"_SCPER_"'"
"RTN","VBECLU",173,0)
 DO ADD("<Type>"_TYPE_"</Type><PrimaryEligibility>"_PRIM_"</PrimaryEligibility><ServiceConnected>"_SC_"</ServiceConnected><ScPercent>"_SCPER_"</ScPercent>")
"RTN","VBECLU",174,0)
 ;SET LINE=LINE_" gender='"_GENDER_"' icn='"_ICN_"' veteran='"_VET_"' ward='"_WARD_"' roombed='"_ROOMBED_"'></patient>"
"RTN","VBECLU",175,0)
 DO ADD("<PatientSexCode>"_GENDER_"</PatientSexCode><PatientICN>"_ICN_"</PatientICN><Veteran>"_VET_"</Veteran><PatientLocation>"_WARD_"</PatientLocation><PatientRoomBed>"_ROOMBED_"</PatientRoomBed></Patient>")
"RTN","VBECLU",176,0)
 ;
"RTN","VBECLU",177,0)
 ;DO ADD(LINE)
"RTN","VBECLU",178,0)
 ;DO NAMECOMP^VBECLU0(DFN,VBECPCNT)
"RTN","VBECLU",179,0)
 ;
"RTN","VBECLU",180,0)
 QUIT
"RTN","VBECLU",181,0)
 ;
"RTN","VBECLU",182,0)
MAXOUT ;
"RTN","VBECLU",183,0)
 IF $G(MAXSIZRE)<1 DO ADD("<maximum message='Too many patients found (more than "_MAXSIZE_").  Please Limit Search.'></maximum>")
"RTN","VBECLU",184,0)
 SET MAXSIZRE=1
"RTN","VBECLU",185,0)
 QUIT
"RTN","VBECLU",186,0)
 ;
"RTN","VBECLU",187,0)
PRIM(DFN) ; -- returns print name from file 8.1
"RTN","VBECLU",188,0)
 NEW PRIM1
"RTN","VBECLU",189,0)
 SET PRIM1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",9) ; station entry
"RTN","VBECLU",190,0)
 Q $$CHARCHK^XOBVLIB($P($G(^DIC(8.1,+PRIM1,0)),"^",6)) ; mas entry
"RTN","VBECLU",191,0)
 ;
"RTN","VBECLU",192,0)
ADD(STR) ; -- add string to array
"RTN","VBECLU",193,0)
 SET VBECLINE=VBECLINE+1
"RTN","VBECLU",194,0)
 SET @VBECRSLT@(VBECLINE)=STR
"RTN","VBECLU",195,0)
 QUIT
"RTN","VBECLU0")
0^45^B22984698^B22984698
"RTN","VBECLU0",1,0)
VBECLU0 ;HOIFO/BNT - VBECS Patient Lookup Utility ;
"RTN","VBECLU0",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECLU0",3,0)
 ;
"RTN","VBECLU0",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECLU0",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECLU0",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECLU0",7,0)
 ; 
"RTN","VBECLU0",8,0)
 ; Integration Agreements:
"RTN","VBECLU0",9,0)
 ;
"RTN","VBECLU0",10,0)
 SET X="You Can't Enter VBECLU0 at top of routine!"
"RTN","VBECLU0",11,0)
 QUIT
"RTN","VBECLU0",12,0)
 ;
"RTN","VBECLU0",13,0)
BYFILTER(FILTER,FILTERV,BDATE,EDATE,SEARCH,VALUE,DELIM) ; -- search type by clinic, provider, or ward.
"RTN","VBECLU0",14,0)
 NEW PCNT,OKAY,VAL
"RTN","VBECLU0",15,0)
 K ^TMP("PTLKUP",$J)
"RTN","VBECLU0",16,0)
 SET (OKAY,PCNT)=0
"RTN","VBECLU0",17,0)
 ;W:$D(ALAN(1)) !,"In ByFilter"
"RTN","VBECLU0",18,0)
 ;
"RTN","VBECLU0",19,0)
 DO ADD^VBECLU("<record count='0'>")
"RTN","VBECLU0",20,0)
 SET LINENO=VBECLINE
"RTN","VBECLU0",21,0)
 FOR I=1:1 S VAL=$P(FILTERV,DELIM,I) QUIT:VAL=""  DO  Q:$$STOP^XOBVLIB()
"RTN","VBECLU0",22,0)
 . IF FILTER="WARD" DO WARDPTS(VAL) S OKAY=1 Q
"RTN","VBECLU0",23,0)
 . IF FILTER="CLINIC" DO CLINPTS(VAL,BDATE,EDATE) S OKAY=2 Q
"RTN","VBECLU0",24,0)
 . IF FILTER="PROVIDER" D PROVPTS(VAL) S OKAY=3 Q
"RTN","VBECLU0",25,0)
 ;
"RTN","VBECLU0",26,0)
 IF OKAY<1 DO ADD^VBECLU("<error message='Filter not correctly specified'></error>")
"RTN","VBECLU0",27,0)
 ;
"RTN","VBECLU0",28,0)
 ; -- update the record count
"RTN","VBECLU0",29,0)
 DO ADDPTS()
"RTN","VBECLU0",30,0)
 SET @VBECRSLT@(LINENO)="<record count='"_PCNT_"'>"
"RTN","VBECLU0",31,0)
 IF ($G(MAXSIZRE)<1) DO ADD^VBECLU("<maximum message=''></maximum>")
"RTN","VBECLU0",32,0)
 DO ADD^VBECLU("<error message=''></error>")
"RTN","VBECLU0",33,0)
 QUIT
"RTN","VBECLU0",34,0)
 ;
"RTN","VBECLU0",35,0)
FILTCHK(DFN,TYPE,VALUE) ; -- Filter search -
"RTN","VBECLU0",36,0)
 ; -- check patients to match search type and search value for filter searchs
"RTN","VBECLU0",37,0)
 ; -- returns 1 if matchs, 0 if no match
"RTN","VBECLU0",38,0)
 ;
"RTN","VBECLU0",39,0)
 ;W:$D(ALAN(1)) !,"In FilterCheck"
"RTN","VBECLU0",40,0)
 SET VALUE=$$UP^XLFSTR(VALUE)
"RTN","VBECLU0",41,0)
 Q:($G(VALUE)="")!($G(VALUE)="*") 1
"RTN","VBECLU0",42,0)
 Q:($G(TYPE)="") 1
"RTN","VBECLU0",43,0)
 Q:($G(DFN)<1) 0
"RTN","VBECLU0",44,0)
 ;
"RTN","VBECLU0",45,0)
 NEW I,J,OKAY
"RTN","VBECLU0",46,0)
 SET OKAY=0
"RTN","VBECLU0",47,0)
 IF TYPE="NAME" DO
"RTN","VBECLU0",48,0)
 . SET CHKVAL=$P($G(^DPT(DFN,0)),"^",1)
"RTN","VBECLU0",49,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","VBECLU0",50,0)
 IF TYPE="SSN" DO
"RTN","VBECLU0",51,0)
 . SET CHKVAL=$P($G(^DPT(DFN,0)),"^",9)
"RTN","VBECLU0",52,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","VBECLU0",53,0)
 IF TYPE="ICN" DO
"RTN","VBECLU0",54,0)
 . SET CHKVAL=$P($G(^DPT(DFN,"MPI")),"^",1)
"RTN","VBECLU0",55,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","VBECLU0",56,0)
 IF TYPE="SSN4" DO
"RTN","VBECLU0",57,0)
 . SET CHKVAL=$E($P($G(^DPT(DFN,0)),"^",1),1)_$E($P($G(^DPT(DFN,0)),"^",9),6,9)
"RTN","VBECLU0",58,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","VBECLU0",59,0)
 QUIT OKAY
"RTN","VBECLU0",60,0)
 ;
"RTN","VBECLU0",61,0)
WARDPTS(WARD) ; RETURN LIST OF PATIENTS IN A WARD
"RTN","VBECLU0",62,0)
 ; Based on ORQPTQ2
"RTN","VBECLU0",63,0)
 Q:+$G(WARD)<1 
"RTN","VBECLU0",64,0)
 N DFN
"RTN","VBECLU0",65,0)
 S DFN=0
"RTN","VBECLU0",66,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;GET WARD NAME FOR "CN"  LOOKUP
"RTN","VBECLU0",67,0)
 Q:WARD=""
"RTN","VBECLU0",68,0)
 F  D  Q:DFN'>0  Q:$$STOP^XOBVLIB()
"RTN","VBECLU0",69,0)
 . S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0
"RTN","VBECLU0",70,0)
 . Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","VBECLU0",71,0)
 . S ^TMP("PTLKUP",$J,$P($G(^DPT(DFN,0)),"^",1),DFN)=""
"RTN","VBECLU0",72,0)
 Q
"RTN","VBECLU0",73,0)
 ;
"RTN","VBECLU0",74,0)
PROVPTS(PROV) ;  RETURN LIST OF PATIENTS LINKED TO A PRIMARY PROVIDER
"RTN","VBECLU0",75,0)
 ; Based on ORQPTQ2
"RTN","VBECLU0",76,0)
 ; "APR" xref is on field PROVIDER in file 2 (2;.104)
"RTN","VBECLU0",77,0)
 ; "AAP" xref is on field ATTENDING PHYSICIAN in file 2 (2;.1041)
"RTN","VBECLU0",78,0)
 ; 
"RTN","VBECLU0",79,0)
 Q:+$G(PROV)<1
"RTN","VBECLU0",80,0)
 ;
"RTN","VBECLU0",81,0)
 N DFN,XREF
"RTN","VBECLU0",82,0)
 S DFN=0
"RTN","VBECLU0",83,0)
 F XREF="AAP","APR" DO
"RTN","VBECLU0",84,0)
 . F  S DFN=$O(^DPT(XREF,PROV,DFN)) Q:DFN'>0  D  Q:$$STOP^XOBVLIB()
"RTN","VBECLU0",85,0)
 .. Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","VBECLU0",86,0)
 .. S ^TMP("PTLKUP",$J,$P($G(^DPT(DFN,0)),"^",1),DFN)=""
"RTN","VBECLU0",87,0)
 Q
"RTN","VBECLU0",88,0)
 ;
"RTN","VBECLU0",89,0)
CLINPTS(CLIN,BDATE,EDATE) ; RETURN LIST OF PTS W/CLINIC APPT W/IN BEGINNING AND END DATES
"RTN","VBECLU0",90,0)
 Q:+$G(CLIN)<1
"RTN","VBECLU0",91,0)
 ;
"RTN","VBECLU0",92,0)
 N DFN,NAME,I,J,X,ORJ,ORSRV,ORNOWDT,CHKX,CHKIN,MAXAPPTS,ORC,CLNAM
"RTN","VBECLU0",93,0)
 S MAXAPPTS=200
"RTN","VBECLU0",94,0)
 S NOWDT=$$NOW^XLFDT
"RTN","VBECLU0",95,0)
 ;
"RTN","VBECLU0",96,0)
 S DFN=0,I=1
"RTN","VBECLU0",97,0)
 IF $G(BDATE)="" S BDATE="T"
"RTN","VBECLU0",98,0)
 IF $G(EDATE)="" S EDATE="T+1"
"RTN","VBECLU0",99,0)
 ;CONVERT BDATE AND EDATE INTO FILEMAN DATE/TIME
"RTN","VBECLU0",100,0)
 D DT^DILF("T",BDATE,.BDATE,"","")
"RTN","VBECLU0",101,0)
 D DT^DILF("T",EDATE,.EDATE,"","")
"RTN","VBECLU0",102,0)
 I (BDATE=-1)!(EDATE=-1) S Y(1)="^Error in date range." Q
"RTN","VBECLU0",103,0)
 S EDATE=$P(EDATE,".")_.5  ;ADD 1/2 DAY TO END DATE
"RTN","VBECLU0",104,0)
 ;
"RTN","VBECLU0",105,0)
 D CLINPT2(+CLIN,BDATE,EDATE)
"RTN","VBECLU0",106,0)
 QUIT
"RTN","VBECLU0",107,0)
 ;
"RTN","VBECLU0",108,0)
CLINPT2(CLIN,BEGIN,END) ; -- Use scheduling rehosting API from patches SD*5.3*253 and SD*5.3*275
"RTN","VBECLU0",109,0)
 ; -- GETPLIST^SDAMA202(SDIEN,SDFIELDS,SDAPSTAT,SDSTART,SDEND,.SDRESULT,SDIOSTAT)
"RTN","VBECLU0",110,0)
 ;
"RTN","VBECLU0",111,0)
 K ^TMP($J,"SDAMA202","GETPLIST")
"RTN","VBECLU0",112,0)
 NEW I,X,APPTS SET APPTS=""
"RTN","VBECLU0",113,0)
 ;
"RTN","VBECLU0",114,0)
 ; -- get appointment date/time, patient status, patient ien & name,
"RTN","VBECLU0",115,0)
 ;    only get appointment status = "R" for scheduled or kept appointments.
"RTN","VBECLU0",116,0)
 DO GETPLIST^SDAMA202(+CLIN,"1;3;4","R",BEGIN,END,.APPTS)
"RTN","VBECLU0",117,0)
 ;
"RTN","VBECLU0",118,0)
 ; -- check number of appointments
"RTN","VBECLU0",119,0)
 Q:APPTS<1
"RTN","VBECLU0",120,0)
 ;
"RTN","VBECLU0",121,0)
 ; -- check for an error, may need to pass message up.
"RTN","VBECLU0",122,0)
 I $D(^TMP($J,"SDAMA202","GETPTLIST","ERROR")) QUIT
"RTN","VBECLU0",123,0)
 ;
"RTN","VBECLU0",124,0)
 ; -- move list of appointments to list of patients, ordered by name, dfn
"RTN","VBECLU0",125,0)
 S (I,X)=""
"RTN","VBECLU0",126,0)
 F  SET I=$O(^TMP($J,"SDAMA202","GETPLIST",I)) Q:I<1  S X=^(I,4) DO
"RTN","VBECLU0",127,0)
 .  Q:'$$FILTCHK(+X,SEARCH,VALUE)  ;check if meets search criteria
"RTN","VBECLU0",128,0)
 .  S ^TMP("PTLKUP",$J,$P(X,"^",2),+X)=""
"RTN","VBECLU0",129,0)
 QUIT
"RTN","VBECLU0",130,0)
 ;
"RTN","VBECLU0",131,0)
ADDPTS() ;
"RTN","VBECLU0",132,0)
 N NAME,DFN
"RTN","VBECLU0",133,0)
 S NAME=""
"RTN","VBECLU0",134,0)
 FOR  SET NAME=$O(^TMP("PTLKUP",$J,NAME)) Q:NAME=""  DO
"RTN","VBECLU0",135,0)
 . S DFN=""  FOR  SET DFN=$O(^TMP("PTLKUP",$J,NAME,DFN)) Q:DFN<1  DO
"RTN","VBECLU0",136,0)
 .. DO PTDATA^VBECLU(DFN,.PCNT)
"RTN","VBECLU0",137,0)
 ;IF ($G(MAXSIZRE)<1) DO ADD^VBECLU("<maximum message=''></maximum>")
"RTN","VBECLU0",138,0)
 Q
"RTN","VBECLU0",139,0)
 ;
"RTN","VBECLU0",140,0)
NAMECOMP(DFN,VBECCNT) ; ENTRY IS +$P($G(^DPT(DFN,"NAME")),"^",1)  
"RTN","VBECLU0",141,0)
 ; -- FROM VBECDPT0  does this need to be incorporated?
"RTN","VBECLU0",142,0)
 N A,LN,FN,MI,PR,SU,DE
"RTN","VBECLU0",143,0)
 S A=$G(^VA(20,+$P($G(^DPT(DFN,"NAME")),"^",1),1))
"RTN","VBECLU0",144,0)
 S LN=$$CHARCHK^XOBVLIB($P(A,"^",1))
"RTN","VBECLU0",145,0)
 S FN=$$CHARCHK^XOBVLIB($P(A,"^",2))
"RTN","VBECLU0",146,0)
 S MI=$$CHARCHK^XOBVLIB($P(A,"^",3))
"RTN","VBECLU0",147,0)
 S PR=$$CHARCHK^XOBVLIB($P(A,"^",4))
"RTN","VBECLU0",148,0)
 S SU=$$CHARCHK^XOBVLIB($P(A,"^",5))
"RTN","VBECLU0",149,0)
 S DE=$$CHARCHK^XOBVLIB($P(A,"^",6))
"RTN","VBECLU0",150,0)
 DO ADD^VBECLU("<namecomponent number='"_VBECCNT_" last='"_LN_"' first='"_FN_"' middle='"_MI_"' prefix='"_PR_"' suffix='"_SU_"' degree='"_DE_"' ></namecomponents>")
"RTN","VBECLU0",151,0)
 ;
"RTN","VBECLU3")
0^46^B17629716^B17629716
"RTN","VBECLU3",1,0)
VBECLU3 ;HIOFO/BNT - VBECS Patient Lookup Utility ;04/13/2005 09:00
"RTN","VBECLU3",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECLU3",3,0)
 ;
"RTN","VBECLU3",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECLU3",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECLU3",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECLU3",7,0)
 ; 
"RTN","VBECLU3",8,0)
 ; Integration Agreements:
"RTN","VBECLU3",9,0)
 ;
"RTN","VBECLU3",10,0)
 QUIT
"RTN","VBECLU3",11,0)
 ; -- Get list of wards or clinics for patient lookup by ward
"RTN","VBECLU3",12,0)
 ; 
"RTN","VBECLU3",13,0)
 ; -- Does not currently limit display by division, institution, etc.  May need to.
"RTN","VBECLU3",14,0)
 ; 
"RTN","VBECLU3",15,0)
GETLIST(RESULT,PARAM) ;
"RTN","VBECLU3",16,0)
 NEW X,CNT,VBECLINE,VBECESLT,OKAY
"RTN","VBECLU3",17,0)
 SET (CNT,OKAY)=0
"RTN","VBECLU3",18,0)
 IF '$D(DT) D DT^DICRW
"RTN","VBECLU3",19,0)
 ;
"RTN","VBECLU3",20,0)
 SET VBECLINE=0
"RTN","VBECLU3",21,0)
 K ^TMP($J,"PLU-FILTER")
"RTN","VBECLU3",22,0)
 SET VBECRSLT="^TMP($J,""PLU-FILTER"")"
"RTN","VBECLU3",23,0)
 SET RESULT=$NA(@VBECRSLT)
"RTN","VBECLU3",24,0)
 ;
"RTN","VBECLU3",25,0)
 DO ADD^VBECLU($$XMLHDR^XOBVLIB)
"RTN","VBECLU3",26,0)
 ;
"RTN","VBECLU3",27,0)
 IF $$UP^XLFSTR(PARAM("TYPE"))="WARD" S OKAY=1 D
"RTN","VBECLU3",28,0)
 . D ADD^VBECLU("<filterlist type='ward'>")
"RTN","VBECLU3",29,0)
 . D WLIST("ward")
"RTN","VBECLU3",30,0)
 . D ADD^VBECLU("</filterlist>")
"RTN","VBECLU3",31,0)
 ;
"RTN","VBECLU3",32,0)
 IF $$UP^XLFSTR(PARAM("TYPE"))="CLINIC" S OKAY=2 D
"RTN","VBECLU3",33,0)
 . D ADD^VBECLU("<filterlist type='clinic'>")
"RTN","VBECLU3",34,0)
 . D CLIST("clinic","C")
"RTN","VBECLU3",35,0)
 . D ADD^VBECLU("</filterlist>")
"RTN","VBECLU3",36,0)
 ;
"RTN","VBECLU3",37,0)
 IF $$UP^XLFSTR(PARAM("TYPE"))="PROVIDER" S OKAY=3 D
"RTN","VBECLU3",38,0)
 . D ADD^VBECLU("<filterlist type='provider'>")
"RTN","VBECLU3",39,0)
 . D PLIST("provider")
"RTN","VBECLU3",40,0)
 . D ADD^VBECLU("</filterlist>")
"RTN","VBECLU3",41,0)
 ;
"RTN","VBECLU3",42,0)
 IF OKAY<1 D
"RTN","VBECLU3",43,0)
 . D ADD^VBECLU("<unspecified>")
"RTN","VBECLU3",44,0)
 . D ADD^VBECLU("<error message='List type not supported or not specified!'>")
"RTN","VBECLU3",45,0)
 . D ADD^VBECLU("</unspecified>")
"RTN","VBECLU3",46,0)
 ;
"RTN","VBECLU3",47,0)
 QUIT
"RTN","VBECLU3",48,0)
 ;
"RTN","VBECLU3",49,0)
 ; -- get list of clinics for patient lookup by clinic
"RTN","VBECLU3",50,0)
CLIST(ITEM,CHKVAL) ;
"RTN","VBECLU3",51,0)
 NEW NAME,IEN,IDATE,RDATE
"RTN","VBECLU3",52,0)
 SET IEN=0
"RTN","VBECLU3",53,0)
 SET CNT=0
"RTN","VBECLU3",54,0)
 FOR  S IEN=$O(^SC("AC","C",IEN)) Q:IEN<1  DO  ;loop through clinic xref
"RTN","VBECLU3",55,0)
 . S IDATE=$P($G(^SC(IEN,"I")),"^",1) ;inactivate date
"RTN","VBECLU3",56,0)
 . S RDATE=$P($G(^SC(IEN,"I")),"^",2) ;reactivate date
"RTN","VBECLU3",57,0)
 . IF (IDATE="")!(IDATE'<DT)!((IDATE<DT)&(RDATE>IDATE)) DO
"RTN","VBECLU3",58,0)
 . SET CNT=CNT+1
"RTN","VBECLU3",59,0)
 . SET NAME=$P(^SC(IEN,0),"^",1)
"RTN","VBECLU3",60,0)
 . DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",61,0)
 ;FOR  S NAME=$O(^SC("B",NAME)) Q:NAME=""  DO
"RTN","VBECLU3",62,0)
 ;. S IEN=0
"RTN","VBECLU3",63,0)
 ;. FOR  S IEN=$O(^SC("B",NAME,IEN)) Q:IEN<1  DO
"RTN","VBECLU3",64,0)
 ;.. IF $P($G(^SC(IEN,0)),"^",3)=CHKVAL DO  ;is a clinic
"RTN","VBECLU3",65,0)
 ;...  S IDATE=$P($G(^SC(IEN,"I")),"^",1) ;inactivate date
"RTN","VBECLU3",66,0)
 ;...  S RDATE=$P($G(^SC(IEN,"I")),"^",2) ;reactivate date
"RTN","VBECLU3",67,0)
 ;...  IF (IDATE="")!(IDATE'<DT)!((IDATE<DT)&(RDATE>IDATE)) DO
"RTN","VBECLU3",68,0)
 ;.... SET CNT=CNT+1
"RTN","VBECLU3",69,0)
 ;.... DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",70,0)
 QUIT
"RTN","VBECLU3",71,0)
 ;
"RTN","VBECLU3",72,0)
WLIST(ITEM) ;
"RTN","VBECLU3",73,0)
 NEW NAME,IEN
"RTN","VBECLU3",74,0)
 SET NAME=""
"RTN","VBECLU3",75,0)
 SET CNT=0
"RTN","VBECLU3",76,0)
 FOR  S NAME=$O(^DIC(42,"B",NAME)) Q:NAME=""  DO
"RTN","VBECLU3",77,0)
 . S IEN=0
"RTN","VBECLU3",78,0)
 . FOR  S IEN=$O(^DIC(42,"B",NAME,IEN)) Q:IEN<1  DO
"RTN","VBECLU3",79,0)
 .. SET CNT=CNT+1
"RTN","VBECLU3",80,0)
 .. DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",81,0)
 QUIT
"RTN","VBECLU3",82,0)
 ; -- get list of providers for patient lookup by provider
"RTN","VBECLU3",83,0)
 ;    from ORQPTQ2
"RTN","VBECLU3",84,0)
PLIST(ITEM) ;
"RTN","VBECLU3",85,0)
 NEW NAME,IEN
"RTN","VBECLU3",86,0)
 SET (NAME,IEN)=""
"RTN","VBECLU3",87,0)
 SET CNT=0
"RTN","VBECLU3",88,0)
 K ^TMP($J,"PLU-F")
"RTN","VBECLU3",89,0)
 FOR  S IEN=$O(^XUSEC("PROVIDER",IEN)) Q:IEN<1  I $$ACTIVE^XUSER(IEN) DO
"RTN","VBECLU3",90,0)
 . SET ^TMP($J,"PLU-F",$P(^VA(200,IEN,0),"^",1),IEN)=""
"RTN","VBECLU3",91,0)
 SET NAME=""
"RTN","VBECLU3",92,0)
 F  S NAME=$O(^TMP($J,"PLU-F",NAME)) Q:NAME=""  DO
"RTN","VBECLU3",93,0)
 . SET IEN=0 F  S IEN=$O(^TMP($J,"PLU-F",NAME,IEN)) Q:IEN<1  DO  W IEN
"RTN","VBECLU3",94,0)
 .. SET CNT=CNT+1
"RTN","VBECLU3",95,0)
 .. DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",96,0)
 ;
"RTN","VBECLU3",97,0)
 ;FOR  S NAME=$O(^VA(200,"B",NAME)) Q:NAME=""  DO
"RTN","VBECLU3",98,0)
 ;. S IEN=0
"RTN","VBECLU3",99,0)
 ;. FOR  S IEN=$O(^VA(200,"B",NAME,IEN)) Q:IEN<1  DO
"RTN","VBECLU3",100,0)
 ;.. I $D(^XUSEC("PROVIDER",IEN)),$$ACTIVE^XUSER(IEN) DO
"RTN","VBECLU3",101,0)
 ;... SET CNT=CNT+1
"RTN","VBECLU3",102,0)
 ;... DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",103,0)
 QUIT
"RTN","VBECLU3",104,0)
 ;
"RTN","VBECLU3",105,0)
TEST ;
"RTN","VBECLU3",106,0)
 NEW X,START,FINISH
"RTN","VBECLU3",107,0)
 DO TESTC
"RTN","VBECLU3",108,0)
 DO TESTP
"RTN","VBECLU3",109,0)
 DO TESTW
"RTN","VBECLU3",110,0)
 QUIT
"RTN","VBECLU3",111,0)
 ;
"RTN","VBECLU3",112,0)
TESTW ;
"RTN","VBECLU3",113,0)
 S START=$H
"RTN","VBECLU3",114,0)
 W !,"WARD LIST"
"RTN","VBECLU3",115,0)
 S X("TYPE")="wARd"
"RTN","VBECLU3",116,0)
 D GETLIST(.RESULT,.X)
"RTN","VBECLU3",117,0)
 S FINISH=$H
"RTN","VBECLU3",118,0)
 D DISPLAY(.RESULT)
"RTN","VBECLU3",119,0)
 W !,"Elapse Time: ",$P(FINISH,",",2)-$P(START,",",2)
"RTN","VBECLU3",120,0)
 K RESULT
"RTN","VBECLU3",121,0)
 QUIT
"RTN","VBECLU3",122,0)
 ;
"RTN","VBECLU3",123,0)
TESTC ;
"RTN","VBECLU3",124,0)
 S START=$H W !,"CLINIC LIST"
"RTN","VBECLU3",125,0)
 S X("TYPE")="ClinIC"
"RTN","VBECLU3",126,0)
 D GETLIST(.RESULT,.X)
"RTN","VBECLU3",127,0)
 S FINISH=$H
"RTN","VBECLU3",128,0)
 D DISPLAY(.RESULT)
"RTN","VBECLU3",129,0)
 W !,"Elapse Time: ",$P(FINISH,",",2)-$P(START,",",2)
"RTN","VBECLU3",130,0)
 K RESULT
"RTN","VBECLU3",131,0)
 QUIT
"RTN","VBECLU3",132,0)
 ;
"RTN","VBECLU3",133,0)
TESTP ;
"RTN","VBECLU3",134,0)
 S START=$H W !,"PROVIDER LIST"
"RTN","VBECLU3",135,0)
 S X("TYPE")="pROvIdER"
"RTN","VBECLU3",136,0)
 D GETLIST(.RESULT,.X)
"RTN","VBECLU3",137,0)
 S FINISH=$H
"RTN","VBECLU3",138,0)
 D DISPLAY(.RESULT)
"RTN","VBECLU3",139,0)
 W !,"Elapse Time: ",$P(FINISH,",",2)-$P(START,",",2)
"RTN","VBECLU3",140,0)
 Q
"RTN","VBECLU3",141,0)
DISPLAY(RESULT) ;
"RTN","VBECLU3",142,0)
 NEW I
"RTN","VBECLU3",143,0)
 S I=-1 FOR  SET I=$O(@RESULT@(I)) Q:I<1  W !!,@RESULT@(I)
"RTN","VBECLU3",144,0)
 QUIT
"RTN","VBECPOST")
0^51^B81343398^B81343398
"RTN","VBECPOST",1,0)
VBECPOST ;HIOFO;BNT VBECS 1.0 Post Install Routine ; 01/28/05 11:17
"RTN","VBECPOST",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECPOST",3,0)
 ;
"RTN","VBECPOST",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECPOST",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECPOST",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECPOST",7,0)
 ; 
"RTN","VBECPOST",8,0)
 ; Integration Agreements:
"RTN","VBECPOST",9,0)
 ; Call to XPDUTL is supported by IA: #10141
"RTN","VBECPOST",10,0)
 ; Call to FILE^DICN is supported by IA: #10009
"RTN","VBECPOST",11,0)
 ; Call to FIND1^DIC is supported by IA: #
"RTN","VBECPOST",12,0)
 ; Reference to File 60 supported by IA: #10054
"RTN","VBECPOST",13,0)
 ; Reference to File 61 supported by IA: #10055
"RTN","VBECPOST",14,0)
 ; Reference to File 62 supported by IA: #
"RTN","VBECPOST",15,0)
 ; Reference to File 4  supported by IA: #10090
"RTN","VBECPOST",16,0)
 ;
"RTN","VBECPOST",17,0)
EN ;
"RTN","VBECPOST",18,0)
 ; Add 'OTHER' TOPOGRAPHY FIELD if it doesn't exist.
"RTN","VBECPOST",19,0)
 I '$$TOPOG() Q
"RTN","VBECPOST",20,0)
 ; Add 'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE if it doesn't exist.
"RTN","VBECPOST",21,0)
 I '$$COLSAMP() Q
"RTN","VBECPOST",22,0)
 ; Add 'VBECS...' LABORATORY TESTS if they don't exist.
"RTN","VBECPOST",23,0)
 D LABTSTS
"RTN","VBECPOST",24,0)
 ; Add PARAMETERS
"RTN","VBECPOST",25,0)
 D XPAR
"RTN","VBECPOST",26,0)
 ; Add Generic Blood Inventory for Lab workload processing
"RTN","VBECPOST",27,0)
 D BLDINV
"RTN","VBECPOST",28,0)
 ;
"RTN","VBECPOST",29,0)
 Q
"RTN","VBECPOST",30,0)
 ;
"RTN","VBECPOST",31,0)
TOPOG() ; Make sure the 'OTHER' TOPOGRAPHY FIELD file 61 entry exists.
"RTN","VBECPOST",32,0)
 D BMES^XPDUTL("Adding 'OTHER' TOPOGRAPHY FIELD.")
"RTN","VBECPOST",33,0)
 D FIND^DIC(61,"","","","OTHER","","","","","OUT","ERR")
"RTN","VBECPOST",34,0)
 I $D(OUT("DILIST",1,1)) D  Q 1
"RTN","VBECPOST",35,0)
 . D MES^XPDUTL("   'OTHER' TOPOGRAPHY FIELD already exists.")
"RTN","VBECPOST",36,0)
 N VBECFDA
"RTN","VBECPOST",37,0)
 S VBECFDA(1,61,"+1,",.01)="OTHER"
"RTN","VBECPOST",38,0)
 S VBECFDA(1,61,"+1,",2)="OTHER"
"RTN","VBECPOST",39,0)
 D UPDATE^DIE("E","VBECFDA(1)","","OUT")
"RTN","VBECPOST",40,0)
 I $D(OUT("ERROR")) D  Q 0
"RTN","VBECPOST",41,0)
 . D MES^XPDUTL("   ***Error adding 'OTHER' TOPOGRAPHY FIELD.***")
"RTN","VBECPOST",42,0)
 D MES^XPDUTL("   'OTHER' TOPOGRAPHY FIELD added successfully.")
"RTN","VBECPOST",43,0)
 Q $S($D(OUT("ERROR")):0,1:1)
"RTN","VBECPOST",44,0)
 ;
"RTN","VBECPOST",45,0)
COLSAMP() ; Add the VBECS NO SPECIMEN REQUIRED entry to file 62
"RTN","VBECPOST",46,0)
 D BMES^XPDUTL("Adding 'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE.")
"RTN","VBECPOST",47,0)
 N VBIENS,VBECFDA,CNT,OUT
"RTN","VBECPOST",48,0)
 D FIND^DIC(62,"","","","VBECS - NO SPECIMEN REQUIRED","","","","","OUT","ERR")
"RTN","VBECPOST",49,0)
 I $D(OUT("DILIST",1,1)) D  Q OUT("DILIST",2,1)
"RTN","VBECPOST",50,0)
 . D MES^XPDUTL("   'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE already exists.")
"RTN","VBECPOST",51,0)
 S CNT=2
"RTN","VBECPOST",52,0)
 S VBECFDA(1,62,"+1,",.01)="VBECS - NO SPECIMEN REQUIRED"
"RTN","VBECPOST",53,0)
 S VBECFDA(1,62,"+1,",2)="OTHER"
"RTN","VBECPOST",54,0)
 S VBECFDA(1,62,"+1,",6)="BLOOD BANK"
"RTN","VBECPOST",55,0)
 S VBECFDA(1,62,"+1,",7)="NO"
"RTN","VBECPOST",56,0)
 S VBECFDA(1,62.01,"+"_CNT_",+1,",.01)="NRQ"
"RTN","VBECPOST",57,0)
 ;D ACNAREA(.VBECARY)
"RTN","VBECPOST",58,0)
 ;F VBECI=1:1 S VBECX=$G(VBECARY(VBECI)) Q:VBECX=""  D
"RTN","VBECPOST",59,0)
 ;. S CNT=CNT+1
"RTN","VBECPOST",60,0)
 ;. S VBECFDA(1,62.02,"+"_CNT_",+1,",.01)=$P(VBECX,"^")
"RTN","VBECPOST",61,0)
 D UPDATE^DIE("E","VBECFDA(1)","VBIENS","OUT")
"RTN","VBECPOST",62,0)
 I $D(OUT("DIERR")) D  Q 0
"RTN","VBECPOST",63,0)
 . D MES^XPDUTL("   ***Error adding 'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE.***")
"RTN","VBECPOST",64,0)
 I $D(VBIENS(1)) S VBECARY="" D ACNAREA(.VBECARY) F VBECI=1:1 S VBECARY=$O(VBECARY(VBECARY)) Q:VBECARY=""  D
"RTN","VBECPOST",65,0)
  . S ^LAB(62,VBIENS(1),9,0)="^62.02PA^"_VBECARY_"^"_VBECI
"RTN","VBECPOST",66,0)
  . S ^LAB(62,VBIENS(1),9,$P(VBECARY(VBECARY),"^",3),0)=$P(VBECARY(VBECARY),"^",3)
"RTN","VBECPOST",67,0)
 D MES^XPDUTL("   'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE added successfully.")
"RTN","VBECPOST",68,0)
 Q VBIENS(1)
"RTN","VBECPOST",69,0)
 ;
"RTN","VBECPOST",70,0)
LABTSTS ; Add the VBECS Lab Tests to file 60
"RTN","VBECPOST",71,0)
 ; Input: VBSAMP = IEN of the VBECS - NO SPECIMEN REQUIRED
"RTN","VBECPOST",72,0)
 ;                 Collection Sample file #62 entry.
"RTN","VBECPOST",73,0)
 D BMES^XPDUTL("Adding 'VBECS...' LABORATORY TESTS.")
"RTN","VBECPOST",74,0)
 N VBECFDA,CNT,OUT,VBECLIEN
"RTN","VBECPOST",75,0)
 D ACNAREA(.VBECARY)
"RTN","VBECPOST",76,0)
 ;
"RTN","VBECPOST",77,0)
 S CNT=2
"RTN","VBECPOST",78,0)
 F VBECI=2:1  S VBDATA=$P($T(LST+VBECI),";;",2) Q:VBDATA["***"  D
"RTN","VBECPOST",79,0)
 . D FIND^DIC(60,"","","",$P(VBDATA,"^",1),"","","","","OUT","ERR")
"RTN","VBECPOST",80,0)
 . I $D(OUT("DILIST",1,1)) D  Q
"RTN","VBECPOST",81,0)
 . . D MES^XPDUTL("'"_$P(VBDATA,"^",1)_"' LABORATORY TEST already exists.")
"RTN","VBECPOST",82,0)
 . D MES^XPDUTL("---Adding '"_$P(VBDATA,"^",1)_"' LABORATORY TEST.")
"RTN","VBECPOST",83,0)
 . ;
"RTN","VBECPOST",84,0)
 . N VBECLIEN,VBECFDA,VBIENS,OUT
"RTN","VBECPOST",85,0)
 . S VBECFDA(1,60,"+1,",.01)=$P(VBDATA,"^",1)
"RTN","VBECPOST",86,0)
 . S VBECFDA(1,60,"+1,",3)="O"
"RTN","VBECPOST",87,0)
 . S VBECFDA(1,60,"+1,",17)=$O(^LAB(62.05,"B","STAT",0))
"RTN","VBECPOST",88,0)
 . S VBECFDA(1,60,"+1,",51)=$P(VBDATA,"^",4)
"RTN","VBECPOST",89,0)
 . S VBECFDA(1,60,"+1,",4)="BB"
"RTN","VBECPOST",90,0)
 . S VBECFDA(1,60,"+1,",8)=$P(VBDATA,"^",7)
"RTN","VBECPOST",91,0)
 . ;
"RTN","VBECPOST",92,0)
 . I $P(VBDATA,"^",6)="NRQ" D
"RTN","VBECPOST",93,0)
 . . S VBECFDA(1,60.03,"+"_CNT_",+1,",.01)=$O(^LAB(62,"B","VBECS - NO SPECIMEN REQUIRED",0))
"RTN","VBECPOST",94,0)
 . I $P(VBDATA,"^",6)="" D
"RTN","VBECPOST",95,0)
 . . S VBCOL=$$DIR($P(VBDATA,"^",1))
"RTN","VBECPOST",96,0)
 . . I +VBCOL S VBECFDA(1,60.03,"+"_CNT_",+1,",.01)=+VBCOL
"RTN","VBECPOST",97,0)
 . D UPDATE^DIE("","VBECFDA(1)","VBIENS","OUT")
"RTN","VBECPOST",98,0)
 . I $D(OUT("DIERR")) D  Q
"RTN","VBECPOST",99,0)
 . . D MES^XPDUTL("   ***Error adding '"_$P(VBDATA,"^",1)_"' LABORATORY TEST***.")
"RTN","VBECPOST",100,0)
 . . I $D(^LAB(60,"B",$P(VBDATA,"^",1))) D
"RTN","VBECPOST",101,0)
 . . . D MES^XPDUTL("   Deleting entry...")
"RTN","VBECPOST",102,0)
 . . . S DA=$O(^LAB(60,"B",$P(VBDATA,"^",1),0)) K DO
"RTN","VBECPOST",103,0)
 . . . S DIE="^LAB(60,",DR=".01///@",DIDEL=60
"RTN","VBECPOST",104,0)
 . . . D ^DIE
"RTN","VBECPOST",105,0)
 . I $D(VBECARY),VBIENS(1),'$D(OUT("DIERR")) D
"RTN","VBECPOST",106,0)
 . . S I="" F CNT=1:1 S I=$O(VBECARY(I)) Q:I=""  D
"RTN","VBECPOST",107,0)
 . . . S X=VBECARY(I)
"RTN","VBECPOST",108,0)
 . . . S ^LAB(60,VBIENS(1),8,0)="^60.11PA^"_$P(X,"^",4)_"^"_CNT
"RTN","VBECPOST",109,0)
 . . . S ^LAB(60,VBIENS(1),8,I,0)=$P(X,"^",4)_"^"_$P(X,"^",3)
"RTN","VBECPOST",110,0)
 . D MES^XPDUTL("   '"_$P(VBDATA,"^",1)_"' added successfully.")
"RTN","VBECPOST",111,0)
 . Q
"RTN","VBECPOST",112,0)
 Q
"RTN","VBECPOST",113,0)
DIR(LABTST) ; Ask user for Collection Sample for Lab Test
"RTN","VBECPOST",114,0)
 ;
"RTN","VBECPOST",115,0)
 S DIR("A")="Select COLLECTION SAMPLE for Lab Test "_LABTST
"RTN","VBECPOST",116,0)
 S DIR(0)="P^62:EMZ"
"RTN","VBECPOST",117,0)
 D ^DIR
"RTN","VBECPOST",118,0)
 Q Y
"RTN","VBECPOST",119,0)
 ;
"RTN","VBECPOST",120,0)
XPAR ;Main entry point
"RTN","VBECPOST",121,0)
 ;
"RTN","VBECPOST",122,0)
 D BMES^XPDUTL("Adding VBECS VISTALINK PARAMETERS.")
"RTN","VBECPOST",123,0)
 N VBDATA
"RTN","VBECPOST",124,0)
 F VBECI=1:1 S VBDATA=$P($T(PARMS+VBECI),";;",2) Q:VBDATA["***"  D
"RTN","VBECPOST",125,0)
 . D MES^XPDUTL("---Adding '"_VBDATA_"' PARAMETER.")
"RTN","VBECPOST",126,0)
 . I $$CONTEXT^VBECRPCC(VBDATA,$$ENCRYP^XUSRB1("VBECS RPC Security")) D
"RTN","VBECPOST",127,0)
 . . D MES^XPDUTL("   ***Error adding '"_VBDATA_"' PARAMETER.***")
"RTN","VBECPOST",128,0)
 . E  D MES^XPDUTL("   '"_VBDATA_"' PARAMETER added successfully.")
"RTN","VBECPOST",129,0)
 ; Check Post Install questions and create VistALink IP Address and Port parameters.
"RTN","VBECPOST",130,0)
 I $D(XPDQUES("POSVLIPADDRESS"))&($D(XPDQUES("POSVLPORT"))) D
"RTN","VBECPOST",131,0)
 . D MES^XPDUTL("---Adding 'VISTALINK IP ADDRESS' and 'VISTALINK PORT NUMBER' PARAMETERS.")
"RTN","VBECPOST",132,0)
 . I '$$CHGADPRT^VBECRPCC(XPDQUES("POSVLIPADDRESS"),XPDQUES("POSVLPORT")) D  Q
"RTN","VBECPOST",133,0)
 . . D MES^XPDUTL("   'VISTALINK IP ADDRESS' and 'VISTALINK PORT NUMBER' PARAMETERS added successfully.")
"RTN","VBECPOST",134,0)
 . D MES^XPDUTL("   ***Error adding 'VISTALINK IP ADDRESS' and 'VISTALINK PORT NUMBER' PARAMETERS.***")
"RTN","VBECPOST",135,0)
 Q
"RTN","VBECPOST",136,0)
 ;
"RTN","VBECPOST",137,0)
ACNAREA(VBECARY) ; Return Lab Blood Bank Accession Areas
"RTN","VBECPOST",138,0)
 N CNT
"RTN","VBECPOST",139,0)
 S (X,CNT)=0
"RTN","VBECPOST",140,0)
 F  S X=$O(^LRO(68,X)) Q:X'?1N.N  D
"RTN","VBECPOST",141,0)
 . Q:$P(^LRO(68,X,0),"^",2)'="BB"
"RTN","VBECPOST",142,0)
 . S DIV=$O(^LRO(68,X,3,0))_","
"RTN","VBECPOST",143,0)
 . D GETS^DIQ(4,DIV,".01",,"OUT","ERR")
"RTN","VBECPOST",144,0)
 . S INST=$G(OUT(4,DIV,.01))
"RTN","VBECPOST",145,0)
 . S CNT=CNT+1 S VBECARY(+DIV)=$P(^LRO(68,X,0),"^")_"^"_INST_"^"_X_"^"_$O(^LRO(68,X,3,0))
"RTN","VBECPOST",146,0)
 . Q
"RTN","VBECPOST",147,0)
 Q
"RTN","VBECPOST",148,0)
 ;
"RTN","VBECPOST",149,0)
BLDINV ; Add Generic VBECS Blood Inventory for Lab Workload Reporting
"RTN","VBECPOST",150,0)
 D BMES^XPDUTL("Adding generic VBECS BLOOD INVENTORY")
"RTN","VBECPOST",151,0)
 N VBECFDA
"RTN","VBECPOST",152,0)
 I $$FIND1^DIC(65,"","MX","VBECS1","","","ERR") D  Q
"RTN","VBECPOST",153,0)
 . D MES^XPDUTL("   'VBECS1' BLOOD INVENTORY already exists.")
"RTN","VBECPOST",154,0)
 D MES^XPDUTL("---Adding 'VBECS1' BLOOD INVENTORY.")
"RTN","VBECPOST",155,0)
 S VBECFDA(1,65,"+1,",.01)="VBECS1"
"RTN","VBECPOST",156,0)
 S VBECFDA(1,65,"+1,",.02)="VBECS SYSTEM"
"RTN","VBECPOST",157,0)
 S VBECFDA(1,65,"+1,",.03)="1.0"
"RTN","VBECPOST",158,0)
 S VBECFDA(1,65,"+1,",.04)="VBECS PRODUCT"
"RTN","VBECPOST",159,0)
 S VBECFDA(1,65,"+1,",.05)=$$NOW^XLFDT()
"RTN","VBECPOST",160,0)
 S VBECFDA(1,65,"+1,",.06)="3100101"
"RTN","VBECPOST",161,0)
 S VBECFDA(1,65,"+1,",.07)="N/A"
"RTN","VBECPOST",162,0)
 S VBECFDA(1,65,"+1,",.08)="N/A"
"RTN","VBECPOST",163,0)
 ; Need to determine primary division
"RTN","VBECPOST",164,0)
 S VBECFDA(1,65,"+1,",.16)="589"
"RTN","VBECPOST",165,0)
 S VBECFDA(1,65,"+1,",4.2)=$$NOW^XLFDT()
"RTN","VBECPOST",166,0)
 D UPDATE^DIE("","VBECFDA(1)","VBIENS","OUT")
"RTN","VBECPOST",167,0)
 I $D(OUT("DIERR")) D  Q
"RTN","VBECPOST",168,0)
 . D MES^XPDUTL("   ***Error adding 'VBECS1' BLOOD INVENTORY.***")
"RTN","VBECPOST",169,0)
 D MES^XPDUTL("   'VBECS1' BLOOD INVENTORY added successfully.")
"RTN","VBECPOST",170,0)
 Q
"RTN","VBECPOST",171,0)
 ;
"RTN","VBECPOST",172,0)
BLDDONOR ; Add Generic VBECS BLOOD DONOR for Lab Workload Reporting
"RTN","VBECPOST",173,0)
 N VBECFDA
"RTN","VBECPOST",174,0)
 Q
"RTN","VBECPOST",175,0)
 ;
"RTN","VBECPOST",176,0)
DEL ; Delete entries for testing
"RTN","VBECPOST",177,0)
 N DA,DR,DIE,DIDEL,VBDATA,VBIEN,X
"RTN","VBECPOST",178,0)
 D FIND^DIC(61,"","","","OTHER","","","","","OUT","ERR")
"RTN","VBECPOST",179,0)
 I $D(OUT("DILIST",1,1)) D
"RTN","VBECPOST",180,0)
 . D MES^XPDUTL("Deleting 'OTHER' TOPOGRAPHY FILE Entry")
"RTN","VBECPOST",181,0)
 . S X=0
"RTN","VBECPOST",182,0)
 . F I=0:1 S X=$O(OUT("DILIST",1,I)) Q:X=""  D
"RTN","VBECPOST",183,0)
 . . S DA=OUT("DILIST",2,X),DIE="^LAB(61,",DR=".01///@",DIDEL=61 D ^DIE
"RTN","VBECPOST",184,0)
 K DA,DR,DIE,DIDEL,VBIEN
"RTN","VBECPOST",185,0)
 ;
"RTN","VBECPOST",186,0)
 D FIND^DIC(62,"","","","VBECS - NO SPECIMEN REQUIRED","","","","","OUT","ERR")
"RTN","VBECPOST",187,0)
 I $D(OUT("DILIST",1,1)) D
"RTN","VBECPOST",188,0)
 . D MES^XPDUTL("Deleting 'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE")
"RTN","VBECPOST",189,0)
 . S X=0
"RTN","VBECPOST",190,0)
 . F I=0:1 S X=$O(OUT("DILIST",1,I)) Q:X=""  D
"RTN","VBECPOST",191,0)
 . . S DA=OUT("DILIST",2,X),DIE="^LAB(62,",DR=".01///@",DIDEL=62 D ^DIE
"RTN","VBECPOST",192,0)
 K DA,DR,DIE,DIDEL,VBIEN
"RTN","VBECPOST",193,0)
 ;
"RTN","VBECPOST",194,0)
 S VBIEN=$$FIND1^DIC(65,"","MX","VBECS1","","","ERR")
"RTN","VBECPOST",195,0)
 I +VBIEN D
"RTN","VBECPOST",196,0)
 . D MES^XPDUTL("Deleting 'VBECS1' BLOOD DONOR")
"RTN","VBECPOST",197,0)
 . S DA=VBIEN,DIE="^LRD(65,",DR=".01///@",DIDEL=65 D ^DIE
"RTN","VBECPOST",198,0)
 K DA,DR,DIE,DIDEL,VBIEN
"RTN","VBECPOST",199,0)
 ;
"RTN","VBECPOST",200,0)
 F VBECI=2:1  S VBDATA=$P($T(LST+VBECI),";;",2) K DO Q:$P(VBDATA,"^",1)="***"  D
"RTN","VBECPOST",201,0)
 . D FIND^DIC(60,"","","",$P(VBDATA,"^",1),"","","","","OUT","ERR")
"RTN","VBECPOST",202,0)
 . I $D(OUT("DILIST",1,1)) D  Q
"RTN","VBECPOST",203,0)
 . . D MES^XPDUTL("Deleting '"_$P(VBDATA,"^",1)_"' LABORATORY TEST")
"RTN","VBECPOST",204,0)
 . . S X=0
"RTN","VBECPOST",205,0)
 . . F I=0:1 S X=$O(OUT("DILIST",1,I)) Q:X=""  D
"RTN","VBECPOST",206,0)
 . . . S DA=OUT("DILIST",2,X),DIE="^LAB(60,",DR=".01///@",DIDEL=60 D ^DIE
"RTN","VBECPOST",207,0)
 Q
"RTN","VBECPOST",208,0)
 ;
"RTN","VBECPOST",209,0)
LST ;;NAME^TYPE^HIGHEST URGENCY ALLOWED^PRINT NAME^SUBSCRIPT^COLLECTION SAMPLE^UNIQUE COLLECTION SAMPLE
"RTN","VBECPOST",210,0)
 ;;.01 ^3   ^17                      ^51        ^4        ^60.03,.01        ^8
"RTN","VBECPOST",211,0)
 ;;ABO/RH - LAB^O^STAT^ABO RH^BB^^1
"RTN","VBECPOST",212,0)
 ;;ANTIBODY SCREEN - LAB^O^STAT^AB SCRN^BB^^1
"RTN","VBECPOST",213,0)
 ;;DIRECT ANTIGLOBULIN TEST - LAB^O^STAT^DAT^BB^^1
"RTN","VBECPOST",214,0)
 ;;TRANSFUSION REACTION WORKUP - LAB^O^STAT^TRW^BB^^1
"RTN","VBECPOST",215,0)
 ;;TYPE & SCREEN - LAB^O^STAT^T&S^BB^^1
"RTN","VBECPOST",216,0)
 ;;CRYOPRECIPITATE - LAB^O^STAT^CRYOPRE^BB^NRQ^1
"RTN","VBECPOST",217,0)
 ;;FRESH FROZEN PLASMA - LAB^O^STAT^FFP^BB^NRQ^1
"RTN","VBECPOST",218,0)
 ;;OTHER - LAB^O^STAT^VBOTHER^BB^NRQ^1
"RTN","VBECPOST",219,0)
 ;;PLATELETS - LAB^O^STAT^PLTLTS^BB^NRQ^1
"RTN","VBECPOST",220,0)
 ;;RED BLOOD CELLS - LAB^O^STAT^RED BLD^BB^NRQ^1
"RTN","VBECPOST",221,0)
 ;;WHOLE BLOOD - LAB^O^STAT^WB^BB^NRQ^1
"RTN","VBECPOST",222,0)
 ;;***^Add new entries above this line
"RTN","VBECPOST",223,0)
 Q
"RTN","VBECPOST",224,0)
 ;
"RTN","VBECPOST",225,0)
PARMS ; Build VBECS PARAMETERS
"RTN","VBECPOST",226,0)
 ;;VBECS Order Entry
"RTN","VBECPOST",227,0)
 ;;VBECS Workload
"RTN","VBECPOST",228,0)
 ;;VBECS Update Workload Event
"RTN","VBECPOST",229,0)
 ;;VBECS Patient ABO_RH
"RTN","VBECPOST",230,0)
 ;;VBECS Patient TRRX
"RTN","VBECPOST",231,0)
 ;;VBECS Patient ABID
"RTN","VBECPOST",232,0)
 ;;VBECS Patient Available Units
"RTN","VBECPOST",233,0)
 ;;VBECS Blood Products
"RTN","VBECPOST",234,0)
 ;;VBECS Patient Transfusion History
"RTN","VBECPOST",235,0)
 ;;VBECS Patient Report
"RTN","VBECPOST",236,0)
 ;;VBECS DSS Extract
"RTN","VBECPOST",237,0)
 ;;***^Add new entries above this line
"RTN","VBECPOST",238,0)
 Q
"RTN","VBECPOST",239,0)
 ;
"RTN","VBECPOST",240,0)
BI ;;UNIT ID^SOURCE^INVOICE#^COMPONENT^DATE/TIME RECEIVED^EXP DATE/TIME^ABO GROUP^RH TYPE^DIVISION^DISP DATE
"RTN","VBECPOST",241,0)
 ;;.01    ^.02   ^.03     ^.04      ^.05               ^.06          ^.07      ^.08    ^.16     ^4.2
"RTN","VBECPOST",242,0)
 ;;VBECS GENERIC UNIT^VBECS SYSTEM^1.0^VBECS PRODUCT^^^N/A^N/A^^
"RTN","VBECPOST",243,0)
 Q
"RTN","VBECRL")
0^54^B10917646^B10917646
"RTN","VBECRL",1,0)
VBECRL ;HOIFO/BNT - VBECS VistALink Client RawLink Methods ;07/27/2002  13:00
"RTN","VBECRL",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRL",3,0)
 ;
"RTN","VBECRL",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRL",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRL",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRL",7,0)
 ; 
"RTN","VBECRL",8,0)
 ; Integration Agreements:
"RTN","VBECRL",9,0)
 ;  Call to $$XMLHDR^XOBVLIB Supported by IA 4090
"RTN","VBECRL",10,0)
 ;  Call to %ZISTCP is supported by IA: 10104
"RTN","VBECRL",11,0)
 ;  Call to %ZISUTL is supported by IA: 2119
"RTN","VBECRL",12,0)
 ;  Call to ^%ZOSF is supported by IA: 10096
"RTN","VBECRL",13,0)
 ;
"RTN","VBECRL",14,0)
 QUIT
"RTN","VBECRL",15,0)
 ;
"RTN","VBECRL",16,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",17,0)
 ;                          Methods for Read fromto TCP/IP Socket
"RTN","VBECRL",18,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",19,0)
READ(VBECROOT,VBECREAD,VBECTO,VBECFRST,VBECSTOP) ;
"RTN","VBECRL",20,0)
 NEW X,EOT,OUT,STR,LINE,PIECES,DONE,TOFLAG,VBECCNT,VBECLEN,VBECBH,VBECEH,BS,ES,VBECOK,VBECX
"RTN","VBECRL",21,0)
 ;
"RTN","VBECRL",22,0)
 SET STR="",EOT=$C(4),DONE=0,LINE=0,VBECOK=1
"RTN","VBECRL",23,0)
 ;
"RTN","VBECRL",24,0)
 ; -- READ tcp stream to global buffer | main calling tags are EXECUTE^VBECVLC and NXTCALL^VBECVLL
"RTN","VBECRL",25,0)
 FOR  READ VBECX#VBECREAD:VBECTO SET TOFLAG=$T DO:VBECFRST CHK DO:'VBECSTOP  QUIT:DONE
"RTN","VBECRL",26,0)
 . ;
"RTN","VBECRL",27,0)
 . ; -- if length of (new intake + current) is too large for buffer then store current
"RTN","VBECRL",28,0)
 . ;IF $L(STR)+$L(VBECX)>400 DO ADD(STR) S STR=""
"RTN","VBECRL",29,0)
 . F  Q:$L(STR)+$L(VBECX)<512  D  Q:$L(STR)+$L(VBECX)<512
"RTN","VBECRL",30,0)
  . . I $L(STR),STR'[">" D ADD($E(STR,1,512)) S STR=$E(STR,513,99999) Q
"RTN","VBECRL",31,0)
  . . S VBECK1=$F(STR,">") D ADD($E(STR,1,(VBECK1-1))) S STR=$E(STR,VBECK1,99999)
"RTN","VBECRL",32,0)
 . SET STR=STR_VBECX
"RTN","VBECRL",33,0)
 . ;
"RTN","VBECRL",34,0)
 . ; -- add node at each line-feed character
"RTN","VBECRL",35,0)
 . FOR  QUIT:STR'[$C(10)  DO ADD($P(STR,$C(10))) SET STR=$P(STR,$C(10),2,999)
"RTN","VBECRL",36,0)
 . ;
"RTN","VBECRL",37,0)
 . ; -- if end-of-text marker found then wrap up and quit
"RTN","VBECRL",38,0)
 . IF STR[EOT SET STR=$P(STR,EOT) DO ADD(STR) SET DONE=1 QUIT
"RTN","VBECRL",39,0)
 . ; 
"RTN","VBECRL",40,0)
 . ; -- M XML parser cannot handle an element or attribute
"RTN","VBECRL",41,0)
 . ; -- name split across nodes
"RTN","VBECRL",42,0)
 . SET PIECES=$L(STR,">")
"RTN","VBECRL",43,0)
 . ;IF PIECES>1 DO ADD($P(STR,">",1,PIECES-1)_">") SET STR=$P(STR,">",PIECES,999)
"RTN","VBECRL",44,0)
 . I PIECES>1 D
"RTN","VBECRL",45,0)
  . . S VBECK1=$F(STR,">") D ADD($E(STR,1,(VBECK1-1)))
"RTN","VBECRL",46,0)
  . . S STR=$E(STR,VBECK1,99999)
"RTN","VBECRL",47,0)
 ;
"RTN","VBECRL",48,0)
 QUIT VBECOK
"RTN","VBECRL",49,0)
 ;
"RTN","VBECRL",50,0)
ADD(TXT) ; -- add new intake line
"RTN","VBECRL",51,0)
 SET LINE=LINE+1
"RTN","VBECRL",52,0)
 SET @VBECROOT@(LINE)=TXT
"RTN","VBECRL",53,0)
 QUIT
"RTN","VBECRL",54,0)
 ;
"RTN","VBECRL",55,0)
CHK ; -- check if first read and change timeout and chars to read
"RTN","VBECRL",56,0)
 IF 'TOFLAG,VBECFRST,$GET(VBECX)="" SET VBECSTOP=1,DONE=1 QUIT
"RTN","VBECRL",57,0)
 SET VBECFRST=0
"RTN","VBECRL",58,0)
 SET VBECREAD=100,VBECTO=1
"RTN","VBECRL",59,0)
 QUIT
"RTN","VBECRL",60,0)
 ;
"RTN","VBECRL",61,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",62,0)
 ;                      Methods for Openning and Closing Socket
"RTN","VBECRL",63,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",64,0)
OPEN(VBECPRMS) ; -- Open tcp/ip socket
"RTN","VBECRL",65,0)
 NEW I,POP
"RTN","VBECRL",66,0)
 SET POP=1
"RTN","VBECRL",67,0)
 DO INIT
"RTN","VBECRL",68,0)
 ;
"RTN","VBECRL",69,0)
 DO SAVDEV^%ZISUTL("VBECS CLIENT")
"RTN","VBECRL",70,0)
 FOR I=1:1:VBECPRMS("RETRIES") DO CALL^%ZISTCP(VBECPRMS("ADDRESS"),VBECPRMS("PORT")) QUIT:'POP
"RTN","VBECRL",71,0)
 ; Device open
"RTN","VBECRL",72,0)
 IF 'POP USE IO QUIT 1
"RTN","VBECRL",73,0)
 ; Device not open
"RTN","VBECRL",74,0)
 QUIT 'POP
"RTN","VBECRL",75,0)
 ;
"RTN","VBECRL",76,0)
CLOSE(VBECPRMS) ; -- close tcp/ip socket
"RTN","VBECRL",77,0)
 ; -- tell server to Stop() connection if close message is needed to close
"RTN","VBECRL",78,0)
 IF $GET(VBECPRMS("CLOSE MESSAGE"))]"" DO
"RTN","VBECRL",79,0)
 . DO PRE
"RTN","VBECRL",80,0)
 . DO WRITE($$XMLHDR^XOBVLIB()_VBECPRMS("CLOSE MESSAGE"))
"RTN","VBECRL",81,0)
 . DO POST
"RTN","VBECRL",82,0)
 ;
"RTN","VBECRL",83,0)
 DO FINAL
"RTN","VBECRL",84,0)
 DO CLOSE^%ZISTCP
"RTN","VBECRL",85,0)
 DO USE^%ZISUTL("VBECS CLIENT")
"RTN","VBECRL",86,0)
 DO RMDEV^%ZISUTL("VBECS CLIENT")
"RTN","VBECRL",87,0)
 QUIT
"RTN","VBECRL",88,0)
 ;
"RTN","VBECRL",89,0)
INIT ; -- set up variables needed in tcp/ip processing
"RTN","VBECRL",90,0)
 SET VBECOS=$S(^%ZOSF("OS")["DSM":"DSM",^("OS")["UNIX":"UNIX",^("OS")["OpenM":"OpenM",1:"MSM")
"RTN","VBECRL",91,0)
 QUIT
"RTN","VBECRL",92,0)
 ;
"RTN","VBECRL",93,0)
FINAL ; -- kill variables used in tcp/ip processing
"RTN","VBECRL",94,0)
 KILL VBECOS
"RTN","VBECRL",95,0)
 QUIT
"RTN","VBECRL",96,0)
 ;
"RTN","VBECRL",97,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",98,0)
 ;                          Methods for Writing to TCP/IP Socket
"RTN","VBECRL",99,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",100,0)
PRE ; -- prepare socket for writing
"RTN","VBECRL",101,0)
 SET $X=0
"RTN","VBECRL",102,0)
 QUIT
"RTN","VBECRL",103,0)
 ;
"RTN","VBECRL",104,0)
WRITE(STR) ; -- Write a data string to socket
"RTN","VBECRL",105,0)
 IF VBECOS="MSM" WRITE STR QUIT
"RTN","VBECRL",106,0)
 WRITE:($X+$L(STR))>511 !
"RTN","VBECRL",107,0)
 WRITE STR
"RTN","VBECRL",108,0)
 QUIT
"RTN","VBECRL",109,0)
 ;
"RTN","VBECRL",110,0)
POST ; -- send eot and flush socket buffer
"RTN","VBECRL",111,0)
 DO WRITE($C(4))
"RTN","VBECRL",112,0)
 WRITE:$X>0 !
"RTN","VBECRL",113,0)
 QUIT
"RTN","VBECRL",114,0)
 ;
"RTN","VBECRPC")
0^55^B37044839^B37044839
"RTN","VBECRPC",1,0)
VBECRPC ; HOIFO/BNT - VBECS Remote Procedure Utilities;Mar 23,2005
"RTN","VBECRPC",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPC",3,0)
 ;
"RTN","VBECRPC",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPC",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPC",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPC",7,0)
 ; 
"RTN","VBECRPC",8,0)
 ; Integration Agreements:
"RTN","VBECRPC",9,0)
 ; Reference to $$GET1^DIQ supported by IA #2052
"RTN","VBECRPC",10,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPC",11,0)
 ;
"RTN","VBECRPC",12,0)
 QUIT
"RTN","VBECRPC",13,0)
 ;
"RTN","VBECRPC",14,0)
STRIPL(VBDATA) ;STRIP TRAILING SPACES
"RTN","VBECRPC",15,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)
"RTN","VBECRPC",16,0)
 Q VBDATA
"RTN","VBECRPC",17,0)
STRIPL3(VBDATA)  ;STRIP LAST 3 CHARACTERS
"RTN","VBECRPC",18,0)
 S VBDATA=$E(VBDATA,1,$L(VBDATA)-3)
"RTN","VBECRPC",19,0)
 Q VBDATA
"RTN","VBECRPC",20,0)
BEGROOT(X) ; Add beginning root element
"RTN","VBECRPC",21,0)
 D ADD("<"_X_">")
"RTN","VBECRPC",22,0)
 Q
"RTN","VBECRPC",23,0)
 ;
"RTN","VBECRPC",24,0)
ENDROOT(X) ; Add end root element
"RTN","VBECRPC",25,0)
 D ADD("</"_X_">")
"RTN","VBECRPC",26,0)
 Q
"RTN","VBECRPC",27,0)
 ;
"RTN","VBECRPC",28,0)
ADD(STR) ; Add XML to result global
"RTN","VBECRPC",29,0)
 S VBECCNT=VBECCNT+1
"RTN","VBECRPC",30,0)
 S @RESULTS@(VBECCNT)=STR
"RTN","VBECRPC",31,0)
 Q
"RTN","VBECRPC",32,0)
 ;
"RTN","VBECRPC",33,0)
ERROR(STR) ; Return ERROR
"RTN","VBECRPC",34,0)
 ;
"RTN","VBECRPC",35,0)
 D BEGROOT("Error")
"RTN","VBECRPC",36,0)
 D ADD("<Text>"_$$CHARCHK^XOBVLIB(STR)_"</Text>")
"RTN","VBECRPC",37,0)
 D ENDROOT("Error")
"RTN","VBECRPC",38,0)
 Q
"RTN","VBECRPC",39,0)
 ;
"RTN","VBECRPC",40,0)
BADRPC(RPC,RTN,OPTION) ; Send back information on bad RPC call
"RTN","VBECRPC",41,0)
 ;
"RTN","VBECRPC",42,0)
 ;
"RTN","VBECRPC",43,0)
 S @RESULTS@(0)="-1^Error calling RPC: "_RPC_" at "_OPTION_U_RTN
"RTN","VBECRPC",44,0)
 Q
"RTN","VBECRPC",45,0)
 ;
"RTN","VBECRPC",46,0)
BLDERMSG(VBECPRMS,VBRSLT,VBMT) ;  build error message(s) into VBMT global
"RTN","VBECRPC",47,0)
 ;
"RTN","VBECRPC",48,0)
 N VBX       ; temporary variable for holding text
"RTN","VBECRPC",49,0)
 N VBNM      ; indirect name of request/results array/global
"RTN","VBECRPC",50,0)
 N VBNM2     ; copy of VBNM for different FOR loop
"RTN","VBECRPC",51,0)
 N VBORIG    ; copy of VBNM with trailing parenthesis removed
"RTN","VBECRPC",52,0)
 N VBDATA    ; data value from request/results node
"RTN","VBECRPC",53,0)
 N VBLBL     ; label value comprised of $NA_VBDATA
"RTN","VBECRPC",54,0)
 N VBSUB     ; subscript value for array node
"RTN","VBECRPC",55,0)
 N VBOUT     ; full concatenated value of node to display
"RTN","VBECRPC",56,0)
 N VBLCV     ; loop control variable for FOR loop
"RTN","VBECRPC",57,0)
 N VBDONE    ; flag to signify 'done' with loop
"RTN","VBECRPC",58,0)
 N VBBLANK   ; blank line of blank spaces
"RTN","VBECRPC",59,0)
 N VBMAXDAT  ; maximum allowable length of array node data value
"RTN","VBECRPC",60,0)
 N VBMAXLBL  ; maximum discovered length of array node label value
"RTN","VBECRPC",61,0)
 N VBSPACES  ; calulated gap to format display to show data at column
"RTN","VBECRPC",62,0)
 ;
"RTN","VBECRPC",63,0)
 S VBX="Following are the request and results array(s)"
"RTN","VBECRPC",64,0)
 I $D(@VBMT@("!INITIAL IEN"))#2=1 D
"RTN","VBECRPC",65,0)
 . S VBX=VBX_" for IEN # "_$P(@VBMT@("!INITIAL IEN"),U,2)
"RTN","VBECRPC",66,0)
 . S @VBMT@("#FOLLOWS MSG")=VBX
"RTN","VBECRPC",67,0)
 S VBBLANK="                                                         "
"RTN","VBECRPC",68,0)
 ;
"RTN","VBECRPC",69,0)
 F VBNM="VBECPRMS",$NA(@VBRSLT) D
"RTN","VBECRPC",70,0)
 . S VBNM2=VBNM,VBORIG=$P(VBNM,")")
"RTN","VBECRPC",71,0)
 . S VBMAXLBL=1
"RTN","VBECRPC",72,0)
 . F  S VBNM2=$Q(@VBNM2) Q:VBNM2=""  Q:$NA(@VBNM2)'[VBORIG  D
"RTN","VBECRPC",73,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM2),"(",2)
"RTN","VBECRPC",74,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM2),")")
"RTN","VBECRPC",75,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECRPC",76,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECRPC",77,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECRPC",78,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECRPC",79,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECRPC",80,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECRPC",81,0)
 . . S VBMAXLBL=$S($L(VBLBL)>VBMAXLBL:$L(VBLBL),1:VBMAXLBL)
"RTN","VBECRPC",82,0)
 . S VBMAXLBL=$S(VBMAXLBL>30:30,1:VBMAXLBL+3)
"RTN","VBECRPC",83,0)
 . S VBMAXDAT=80-VBMAXLBL-2
"RTN","VBECRPC",84,0)
 . S VBORIG=$P(VBNM,")")
"RTN","VBECRPC",85,0)
 . F  S VBNM=$Q(@VBNM) Q:VBNM=""  Q:$NA(@VBNM)'[VBORIG  D
"RTN","VBECRPC",86,0)
 . . S VBLCV=0
"RTN","VBECRPC",87,0)
 . . S VBSUB=$NA(@VBNM),VBSUB=$TR(VBSUB,"""","")
"RTN","VBECRPC",88,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM),"(",2)
"RTN","VBECRPC",89,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM),")")
"RTN","VBECRPC",90,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECRPC",91,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECRPC",92,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECRPC",93,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECRPC",94,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECRPC",95,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECRPC",96,0)
 . . S VBSPACES="",$P(VBSPACES," ",VBMAXLBL-$L(VBLBL))=""
"RTN","VBECRPC",97,0)
 . . S VBSPACES=VBSPACES
"RTN","VBECRPC",98,0)
 . . S VBDATA=$G(@VBNM)
"RTN","VBECRPC",99,0)
 . . K VBDONE
"RTN","VBECRPC",100,0)
 . . F VBLCV=0:1:25 D  Q:$D(VBDONE)
"RTN","VBECRPC",101,0)
 . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECRPC",102,0)
 . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECRPC",103,0)
 . . . S VBDATA(VBLCV)="  "_$E(VBDATA,1,VBMAXDAT)
"RTN","VBECRPC",104,0)
 . . . S VBDATA=$E(VBDATA,VBMAXDAT+1,$L(VBDATA))
"RTN","VBECRPC",105,0)
 . . . S:$L(VBDATA)'>0 VBDONE=1
"RTN","VBECRPC",106,0)
 . . . I VBLCV<1 D  Q
"RTN","VBECRPC",107,0)
 . . . . I $L(VBLBL)'>VBMAXLBL D  Q
"RTN","VBECRPC",108,0)
 . . . . . S $P(VBSPACES," ",$L(VBLBL)-VBMAXLBL)=""
"RTN","VBECRPC",109,0)
 . . . . . S VBLBL=VBLBL_VBSPACES
"RTN","VBECRPC",110,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECRPC",111,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECRPC",112,0)
 . . . . I $L(VBLBL)>VBMAXLBL D
"RTN","VBECRPC",113,0)
 . . . . . S @VBMT@(VBSUB)=VBLBL
"RTN","VBECRPC",114,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECRPC",115,0)
 . . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECRPC",116,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECRPC",117,0)
 . . . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECRPC",118,0)
 . . . . . S VBLCV=VBLCV+1
"RTN","VBECRPC",119,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECRPC",120,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECRPC",121,0)
 . . . I VBLCV>0 D
"RTN","VBECRPC",122,0)
 . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECRPC",123,0)
 . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECRPC",124,0)
 . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECRPC",125,0)
 K VBDATA
"RTN","VBECRPC",126,0)
 Q
"RTN","VBECRPC",127,0)
SENDMSG(VBMT,SENDER,RECEIVER,SUBJECT) ;  Function - send message to mail group
"RTN","VBECRPC",128,0)
 ;
"RTN","VBECRPC",129,0)
 ; Input:
"RTN","VBECRPC",130,0)
 ;   VBMT - Array with error information for message text
"RTN","VBECRPC",131,0)
 ;   SENDER - Name of sender (routine tag and name)
"RTN","VBECRPC",132,0)
 ;   RECEIVER - Mail group or individual
"RTN","VBECRPC",133,0)
 ;   SUBJECT - Text for message subject
"RTN","VBECRPC",134,0)
 ;
"RTN","VBECRPC",135,0)
 N VBT      ; node in array during $Q
"RTN","VBECRPC",136,0)
 N VBLN     ; message parameters
"RTN","VBECRPC",137,0)
 N VBGROUP  ; name of mail group to which message will be sent
"RTN","VBECRPC",138,0)
 N VBCNT    ; line count of VBLN array
"RTN","VBECRPC",139,0)
 N VBUSERNM ; IEN of user's entry in NEW PERSON file
"RTN","VBECRPC",140,0)
 N VBUSER   ; name of user running this program
"RTN","VBECRPC",141,0)
 N XMDUZ    ; sender
"RTN","VBECRPC",142,0)
 N XMSUB    ; message subject
"RTN","VBECRPC",143,0)
 N XMTEXT   ; message text array
"RTN","VBECRPC",144,0)
 N XMY      ; recipient array
"RTN","VBECRPC",145,0)
 N XMZ      ; returned message number
"RTN","VBECRPC",146,0)
 ;
"RTN","VBECRPC",147,0)
 I '$D(VBMT) Q
"RTN","VBECRPC",148,0)
 I '$D(SENDER) S SENDER="VBECS VistALink M Client"
"RTN","VBECRPC",149,0)
 I '$D(RECEIVER) S RECEIVER="G.VBECS INTERFACE ADMIN"
"RTN","VBECRPC",150,0)
 I '$D(SUBJECT) S SUBJECT="VBECS VistaLink Error"
"RTN","VBECRPC",151,0)
 ;
"RTN","VBECRPC",152,0)
 S VBCNT=1
"RTN","VBECRPC",153,0)
 S VBT=$NA(@VBMT)
"RTN","VBECRPC",154,0)
 ;
"RTN","VBECRPC",155,0)
 S VBUSERNM=$$GET1^DIQ(200,DUZ,.01)
"RTN","VBECRPC",156,0)
 ;
"RTN","VBECRPC",157,0)
 S VBLN(VBCNT)="* * * VBECS VistALink Error Notification * * *"
"RTN","VBECRPC",158,0)
 S VBCNT=VBCNT+1,VBLN(VBCNT)=" ",VBCNT=VBCNT+1
"RTN","VBECRPC",159,0)
 S VBLN(VBCNT)="      Generated by: "_VBUSERNM
"RTN","VBECRPC",160,0)
 S VBCNT=VBCNT+1,VBLN(VBCNT)=" "
"RTN","VBECRPC",161,0)
 F  S VBT=$Q(@VBT) Q:VBT=""  Q:$NA(@VBT)'[$J  D
"RTN","VBECRPC",162,0)
 . S VBCNT=VBCNT+1
"RTN","VBECRPC",163,0)
 . S:VBT["DILIST" VBLN(VBCNT)=$G(@VBT)
"RTN","VBECRPC",164,0)
 . S:VBT'["DILIST" VBLN(VBCNT)=$P($G(@VBT),U)
"RTN","VBECRPC",165,0)
 . S VBLN(VBCNT)=$TR(VBLN(VBCNT),"""","'")
"RTN","VBECRPC",166,0)
 ;
"RTN","VBECRPC",167,0)
 S XMDUZ=SENDER
"RTN","VBECRPC",168,0)
 S XMSUB=SUBJECT
"RTN","VBECRPC",169,0)
 S XMTEXT="VBLN("
"RTN","VBECRPC",170,0)
 ; reactivate the following ling after testing:
"RTN","VBECRPC",171,0)
 S XMY(RECEIVER)=""
"RTN","VBECRPC",172,0)
 ;S XMY(VBUSERNM)=""
"RTN","VBECRPC",173,0)
 D ^XMD
"RTN","VBECRPC",174,0)
 Q
"RTN","VBECRPC1")
0^56^B5917800^B5917800
"RTN","VBECRPC1",1,0)
VBECRPC1 ;HINES OIFO/BNT - RPC Server Listener Code ;12/28/03  11:20
"RTN","VBECRPC1",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPC1",3,0)
 ;
"RTN","VBECRPC1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPC1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPC1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPC1",7,0)
 ; 
"RTN","VBECRPC1",8,0)
 ; Integration Agreements:
"RTN","VBECRPC1",9,0)
 ; Reference DBIA 4149 - M XML Parser
"RTN","VBECRPC1",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECRPC1",11,0)
 ;
"RTN","VBECRPC1",12,0)
 QUIT
"RTN","VBECRPC1",13,0)
 ;
"RTN","VBECRPC1",14,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPC1",15,0)
 ;            Parse Results of Successful Legacy RPC Request
"RTN","VBECRPC1",16,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPC1",17,0)
 ;              
"RTN","VBECRPC1",18,0)
 ; [Public/Supported Method]
"RTN","VBECRPC1",19,0)
PARSE(VBECPRMS,VBECY) ; -- parse legacy rpc results ; uses SAX parser
"RTN","VBECRPC1",20,0)
 NEW VBECCBK,VBECOPT,VBECTYPE,VBECCNT
"RTN","VBECRPC1",21,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J)) K @VBMT
"RTN","VBECRPC1",22,0)
 DO SET(.VBECCBK)
"RTN","VBECRPC1",23,0)
 SET VBECOPT=""
"RTN","VBECRPC1",24,0)
 DO EN^MXMLPRSE(VBECPRMS("RESULTS"),.VBECCBK,.VBECOPT)
"RTN","VBECRPC1",25,0)
 I $D(@VBECY@("ERROR")) D
"RTN","VBECRPC1",26,0)
 . D BLDERMSG^VBECRPC(.VBECPRMS,VBECY,VBMT)
"RTN","VBECRPC1",27,0)
 . D SENDMSG^VBECRPC(VBMT,"VBECS VistALink Client","G.VBECS INTERFACE ADMIN","VBECS VistALink Error")
"RTN","VBECRPC1",28,0)
 . M ^TMP("ZBNT_ERROR",$J)=@VBMT
"RTN","VBECRPC1",29,0)
 . K @VBMT
"RTN","VBECRPC1",30,0)
 Q
"RTN","VBECRPC1",31,0)
 ;
"RTN","VBECRPC1",32,0)
SET(VBECCBK) ; -- set the event interface entry points
"RTN","VBECRPC1",33,0)
 SET VBECCBK("STARTELEMENT")="RESELEST^VBECRPC1"
"RTN","VBECRPC1",34,0)
 SET VBECCBK("ENDELEMENT")="RESELEND^VBECRPC1"
"RTN","VBECRPC1",35,0)
 SET VBECCBK("CHARACTERS")="RESCHR^VBECRPC1"
"RTN","VBECRPC1",36,0)
 QUIT
"RTN","VBECRPC1",37,0)
 ;
"RTN","VBECRPC1",38,0)
RESELEST(ELE,ATR) ; -- element start event handler
"RTN","VBECRPC1",39,0)
 IF ELE="Response" SET VBECTYPE=$G(ATR("type")),VBECCNT=0 QUIT
"RTN","VBECRPC1",40,0)
 IF ELE="Message" SET VBECTYPE="fault",VBECCNT=0 QUIT
"RTN","VBECRPC1",41,0)
 QUIT
"RTN","VBECRPC1",42,0)
 ;
"RTN","VBECRPC1",43,0)
RESELEND(ELE) ; -- element end event handler
"RTN","VBECRPC1",44,0)
 KILL VBECCNT,VBECTYPE
"RTN","VBECRPC1",45,0)
 QUIT
"RTN","VBECRPC1",46,0)
 ;
"RTN","VBECRPC1",47,0)
RESCHR(TEXT) ; -- character value event handler
"RTN","VBECRPC1",48,0)
 QUIT:$G(VBECTYPE)=""
"RTN","VBECRPC1",49,0)
 QUIT:'$L(TEXT)  ; -- bug in parser? sends in empty string
"RTN","VBECRPC1",50,0)
 ;
"RTN","VBECRPC1",51,0)
 IF VBECCNT=0,TEXT=$C(10) QUIT  ; -- bug in parser? always starts with $C(10)
"RTN","VBECRPC1",52,0)
 ;
"RTN","VBECRPC1",53,0)
 IF VBECTYPE="string" DO  QUIT
"RTN","VBECRPC1",54,0)
 . SET VBECCNT=VBECCNT+1
"RTN","VBECRPC1",55,0)
 . SET @VBECY@(VBECCNT)=TEXT
"RTN","VBECRPC1",56,0)
 ;
"RTN","VBECRPC1",57,0)
 IF VBECTYPE="array" DO
"RTN","VBECRPC1",58,0)
 . SET VBECCNT=VBECCNT+1
"RTN","VBECRPC1",59,0)
 . SET @VBECY@(VBECCNT)=$P(TEXT,$C(10))
"RTN","VBECRPC1",60,0)
 ;
"RTN","VBECRPC1",61,0)
 IF VBECTYPE="fault" DO
"RTN","VBECRPC1",62,0)
 . SET VBECCNT=VBECCNT+1
"RTN","VBECRPC1",63,0)
 . SET @VBECY@("ERROR")=TEXT
"RTN","VBECRPC1",64,0)
 QUIT
"RTN","VBECRPC1",65,0)
 ;
"RTN","VBECRPC1",66,0)
PARSEX(VBECPRMS,VBECY) ; -- parse legacy rpc results ; uses DOM parser
"RTN","VBECRPC1",67,0)
 NEW VBECDOM
"RTN","VBECRPC1",68,0)
 SET VBECDOM=$$EN^MXMLDOM(VBECPRMS("RESULTS"),"")
"RTN","VBECRPC1",69,0)
 DO TEXT^MXMLDOM(VBECDOM,2,VBECY)
"RTN","VBECRPC1",70,0)
 DO DELETE^MXMLDOM(VBECDOM)
"RTN","VBECRPC1",71,0)
 QUIT
"RTN","VBECRPC1",72,0)
 ;
"RTN","VBECRPC1",73,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPC1",74,0)
 ;                   Response Format Documentation
"RTN","VBECRPC1",75,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPC1",76,0)
 ; 
"RTN","VBECRPC1",77,0)
 ;                   
"RTN","VBECRPC1",78,0)
 ; [ Sample XML produced by a successful call of EN^XOBRPC(.VBECPRMS). 
"RTN","VBECRPC1",79,0)
 ;   SEND^XOBRPC does the actual work to produce response.             ]
"RTN","VBECRPC1",80,0)
 ; 
"RTN","VBECRPC1",81,0)
 ; <?xml version="1.0" encoding="utf-8" ?>
"RTN","VBECRPC1",82,0)
 ; <vistalink type="Gov.VA.Med.RPC.Response" >
"RTN","VBECRPC1",83,0)
 ;     <results type="array" >
"RTN","VBECRPC1",84,0)
 ;         <![CDATA[4261;;2961001.08^2^274^166^105^^2961001.1123^1^^9^2^8^10^^^^^^^10G1-ALN
"RTN","VBECRPC1",85,0)
 ;         4270;;2961002.08^2^274^166^112^^^1^^9^2^8^10^^^^^^^10G8-ALN
"RTN","VBECRPC1",86,0)
 ;         4274;;2961003.08^2^274^166^116^^^1^^9^2^8^10^^^^^^^10GD-ALN
"RTN","VBECRPC1",87,0)
 ;         4340;;2961117.08^2^274^166^182^^2961118.1425^1^^9^2^8^10^^^^^^^10K0-ALN
"RTN","VBECRPC1",88,0)
 ;         4342;;2961108.13^2^108^207^183^^2961118.1546^1^^9^2^8^10^^^^^^^10K2-ALN
"RTN","VBECRPC1",89,0)
 ;         6394;;3000607.084^2^165^68^6479^^3000622.13^1^^9^1^8^10^^^^^^^197M-ALN]]>
"RTN","VBECRPC1",90,0)
 ;     </results>
"RTN","VBECRPC1",91,0)
 ; </vistalink>
"RTN","VBECRPC1",92,0)
 ; 
"RTN","VBECRPC1",93,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPC1",94,0)
 ; 
"RTN","VBECRPC1",95,0)
 ; [ Sample XML produced by a unsuccessful call of EN^XOBRPC(.XOBPARMS). 
"RTN","VBECRPC1",96,0)
 ;   ERROR^XOBRPC does the actual work to produce response.             ]
"RTN","VBECRPC1",97,0)
 ; 
"RTN","VBECRPC1",98,0)
 ; <?xml version="1.0" encoding="utf-8" ?>
"RTN","VBECRPC1",99,0)
 ; <vistalink type="Gov.VA..Med.RPC.Error" >
"RTN","VBECRPC1",100,0)
 ;    <errors>
"RTN","VBECRPC1",101,0)
 ;       <error code="2" uri="XOB BAD NAME" >
"RTN","VBECRPC1",102,0)
 ;           <msg>
"RTN","VBECRPC1",103,0)
 ;              Remote Procedure Unknown: 'XOB BAD NAME' cannot be found.
"RTN","VBECRPC1",104,0)
 ;           </msg>
"RTN","VBECRPC1",105,0)
 ;       </error>
"RTN","VBECRPC1",106,0)
 ;    </errors>
"RTN","VBECRPC1",107,0)
 ; </vistalink>
"RTN","VBECRPC1",108,0)
 ; 
"RTN","VBECRPC1",109,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPC1",110,0)
 ;
"RTN","VBECRPCA")
0^57^B73291905^B73291905
"RTN","VBECRPCA",1,0)
VBECRPCA ;DALOI/RLM - VBECS Lab Services Lookups ;10 April 2003
"RTN","VBECRPCA",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPCA",3,0)
 ;
"RTN","VBECRPCA",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCA",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCA",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCA",7,0)
 ; 
"RTN","VBECRPCA",8,0)
 ; Integration Agreements:
"RTN","VBECRPCA",9,0)
 ; Reference to $$FIND^DIC supported by IA #2051
"RTN","VBECRPCA",10,0)
 ; Reference to $$GET1^DIQ supported by IA #2056
"RTN","VBECRPCA",11,0)
 ; Reference to GETS^DIQ supported by IA #2056
"RTN","VBECRPCA",12,0)
 ; Reference to $$CPT^ICPTCOD supported by IA #1995
"RTN","VBECRPCA",13,0)
 ; Reference to Laboratory Test file #60 supported by IA #10054
"RTN","VBECRPCA",14,0)
 ; Reference to RR^LR7OR1 supported by IA #2503
"RTN","VBECRPCA",15,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCA",16,0)
 ; Reference to $$FMTHL7^XLFDT supported by IA #10103
"RTN","VBECRPCA",17,0)
 ; Reference to $$HL7TFM^XLFDT supported by IA #10103
"RTN","VBECRPCA",18,0)
 ; Reference to ^DIR supported by IA #10026
"RTN","VBECRPCA",19,0)
 ; Reference to ^LAM supported by IA #4779
"RTN","VBECRPCA",20,0)
 ;
"RTN","VBECRPCA",21,0)
 QUIT
"RTN","VBECRPCA",22,0)
 ;
"RTN","VBECRPCA",23,0)
LOOK60 ;
"RTN","VBECRPCA",24,0)
 S VBECCNT=0
"RTN","VBECRPCA",25,0)
 D BEGROOT^VBECRPC("Root")
"RTN","VBECRPCA",26,0)
 I DATA="" F  S DATA=$O(^LAB(60,"B",DATA)) Q:DATA=""  D L60
"RTN","VBECRPCA",27,0)
 I DATA]"" D L60
"RTN","VBECRPCA",28,0)
 D ENDROOT^VBECRPC("Root")
"RTN","VBECRPCA",29,0)
 Q
"RTN","VBECRPCA",30,0)
L60 D KILL
"RTN","VBECRPCA",31,0)
 ;Test names may contain leading and/or trailing spaces.
"RTN","VBECRPCA",32,0)
 I $$WSTEST(DATA) D ADD^VBECRPC("<Labtest>*Invalid Test Name*"_$$CHARCHK^XOBVLIB(DATA)_"*</Labtest>") Q
"RTN","VBECRPCA",33,0)
 D FIND^DIC(60,,".01",,DATA,,,,,"VBOUT","ERROR")
"RTN","VBECRPCA",34,0)
 S VBA=0 F  S VBA=$O(VBOUT("DILIST",2,VBA)) Q:'VBA  S VBB=VBOUT("DILIST",2,VBA) D
"RTN","VBECRPCA",35,0)
  . ;NAME - .01, NATIONAL VA LAB CODE - 64, RESULT NLT CODE - 64.1
"RTN","VBECRPCA",36,0)
  . D GETS^DIQ(60,VBB,".01;64;64.1","EI","VBOUT2","ERROR2")
"RTN","VBECRPCA",37,0)
  . I $O(^LAB(60,VBB,2,0)) Q  ;It's a panel
"RTN","VBECRPCA",38,0)
  . S VBC=0 F  S VBC=$O(^LAB(60,VBB,1,VBC)) Q:'VBC  D
"RTN","VBECRPCA",39,0)
  . . ;SITE/SPECIMEN - .01, UNITS - 6, LOINC CODE - 95.3
"RTN","VBECRPCA",40,0)
  . . D GETS^DIQ(60.01,VBC_","_VBB_",",".01;6;95.3","E","VBOUT3","ERROR3")
"RTN","VBECRPCA",41,0)
 ;CONVERT
"RTN","VBECRPCA",42,0)
 K VBOUT
"RTN","VBECRPCA",43,0)
 S VBA=0 F  S VBA=$O(VBOUT3(60.01,VBA)) Q:VBA=""  D
"RTN","VBECRPCA",44,0)
  . S VBB=$P(VBA,","),VBAC=$P(VBA,",",2),VBOUT4(VBAC,VBB)=VBOUT3(60.01,VBA,.01,"E")_"^"_VBOUT3(60.01,VBA,6,"E")_"^"_VBOUT3(60.01,VBA,95.3,"E")
"RTN","VBECRPCA",45,0)
 K VBOUT3
"RTN","VBECRPCA",46,0)
 S VBA=0 F  S VBA=$O(VBOUT2(60,VBA)) Q:VBA=""  D
"RTN","VBECRPCA",47,0)
  . S NLT1=$$GET1^DIQ(64,VBOUT2(60,VBA,64,"I"),1)
"RTN","VBECRPCA",48,0)
  . S NLT2=$$GET1^DIQ(64,VBOUT2(60,VBA,64.1,"I"),1)
"RTN","VBECRPCA",49,0)
  . ;Convert name and nlt codes to smaller local array
"RTN","VBECRPCA",50,0)
  . S VBOUT5(+VBA,.01)=VBOUT2(60,VBA,.01,"E")_"^"_NLT1_"^"_NLT2
"RTN","VBECRPCA",51,0)
  . ;Retrieve CPT codes from file 64
"RTN","VBECRPCA",52,0)
  . I VBOUT2(60,VBA,64,"I")]"" S CPTA=0 F  S CPTA=$O(^LAM(VBOUT2(60,VBA,64,"I"),4,CPTA)) Q:'CPTA  D
"RTN","VBECRPCA",53,0)
  . . D GETS^DIQ(64.018,CPTA_","_VBOUT2(60,VBA,64,"I")_",",.01,"I","VBOUT6("_+VBA_")","CPTERR")
"RTN","VBECRPCA",54,0)
  . I VBOUT2(60,VBA,64.1,"I")]"" S CPTA=0 F  S CPTA=$O(^LAM(VBOUT2(60,VBA,64.1,"I"),4,CPTA)) Q:'CPTA  D
"RTN","VBECRPCA",55,0)
  . . D GETS^DIQ(64.018,CPTA_","_VBOUT2(60,VBA,64.1,"I")_",",.01,"I","VBOUT7("_+VBA_")","CPTERR")
"RTN","VBECRPCA",56,0)
 K VBOUT2
"RTN","VBECRPCA",57,0)
 ;Convert internal CPT reference to external
"RTN","VBECRPCA",58,0)
 S CPTA=0 F  S CPTA=$O(VBOUT6(CPTA)) Q:'CPTA  S CPTB="" F  S CPTB=$O(VBOUT6(CPTA,64.018,CPTB)) Q:CPTB=""  D
"RTN","VBECRPCA",59,0)
  . S CPT=VBOUT6(CPTA,64.018,CPTB,.01,"I")
"RTN","VBECRPCA",60,0)
  . ;Only active CPT's
"RTN","VBECRPCA",61,0)
  . Q:'$P($$CPT^ICPTCOD(+CPT),"^",7)
"RTN","VBECRPCA",62,0)
  . Q:CPT'["ICPT"
"RTN","VBECRPCA",63,0)
  . S VBOUT8(CPTA,+CPTB)=$$GET1^DIQ(81,+CPT,.01)
"RTN","VBECRPCA",64,0)
 S CPTA=0 F  S CPTA=$O(VBOUT7(CPTA)) Q:'CPTA  S CPTB="" F  S CPTB=$O(VBOUT7(CPTA,64.018,CPTB)) Q:CPTB=""  D
"RTN","VBECRPCA",65,0)
  . S CPT=VBOUT7(CPTA,64.018,CPTB,.01,"I")
"RTN","VBECRPCA",66,0)
  . ;Only active CPT's
"RTN","VBECRPCA",67,0)
  . Q:'$P($$CPT^ICPTCOD(+CPT),"^",7)
"RTN","VBECRPCA",68,0)
  . Q:CPT'["ICPT"
"RTN","VBECRPCA",69,0)
  . S VBOUT9(CPTA,+CPTB)=$$GET1^DIQ(81,+CPT,.01)
"RTN","VBECRPCA",70,0)
 K VBOUT6,VBOUT7
"RTN","VBECRPCA",71,0)
 ;                         Build XML
"RTN","VBECRPCA",72,0)
 S VBXA=0
"RTN","VBECRPCA",73,0)
 D ADD^VBECRPC("<Labtest>"_$$CHARCHK^XOBVLIB(DATA))
"RTN","VBECRPCA",74,0)
 F  S VBXA=$O(VBOUT5(VBXA)) Q:'VBXA  I '$$WSTEST($P(VBOUT5(VBXA,.01),"^")) D  D ADD^VBECRPC("</Testname>")
"RTN","VBECRPCA",75,0)
  . D ADD^VBECRPC("<Testname>"_$$CHARCHK^XOBVLIB($P(VBOUT5(VBXA,.01),"^")))
"RTN","VBECRPCA",76,0)
  . I $D(VBOUT4(VBXA)) S VBXI="" F  S VBXI=$O(VBOUT4(VBXA,VBXI)) Q:VBXI=""  D
"RTN","VBECRPCA",77,0)
  . . ;Specimen names may contain leading and/or trailing spaces.
"RTN","VBECRPCA",78,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",1)]"",$$WSTEST($P(VBOUT4(VBXA,VBXI),"^",1)) D ADD^VBECRPC("<Specimen>*Invalid Specimen*"_$$CHARCHK^XOBVLIB($P(VBOUT4(VBXA,VBXI),"^",1))_"*</Specimen>") Q
"RTN","VBECRPCA",79,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",1)]"" D ADD^VBECRPC("<Specimen>"_$$CHARCHK^XOBVLIB($P(VBOUT4(VBXA,VBXI),"^",1)))
"RTN","VBECRPCA",80,0)
  . . ;Units are free text and may contain spaces
"RTN","VBECRPCA",81,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",2)]"" D ADD^VBECRPC("<Units>"_$$WSTRIP($$CHARCHK^XOBVLIB($P(VBOUT4(VBXA,VBXI),"^",2)))_"</Units>")
"RTN","VBECRPCA",82,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",3)]"" D ADD^VBECRPC("<LOINC>"_$$CHARCHK^XOBVLIB($P(VBOUT4(VBXA,VBXI),"^",3)))
"RTN","VBECRPCA",83,0)
  . . I $P($G(VBOUT5(VBXA,.01)),"^",2)]"" D ADD^VBECRPC("<NLT>"_$$CHARCHK^XOBVLIB($P(VBOUT5(VBXA,.01),"^",2)))
"RTN","VBECRPCA",84,0)
  . . I $D(VBOUT8(VBXA)) S VBXJ=0 F  S VBXJ=$O(VBOUT8(VBXA,VBXJ)) Q:'VBXJ  D ADD^VBECRPC("<CPT>"_$$CHARCHK^XOBVLIB(VBOUT8(VBXA,VBXJ))_"</CPT>")
"RTN","VBECRPCA",85,0)
  . . I $P($G(VBOUT5(VBXA,.01)),"^",2)]"" D ADD^VBECRPC("</NLT>")
"RTN","VBECRPCA",86,0)
  . . I $P($G(VBOUT5(VBXA,.01)),"^",3)]"" D ADD^VBECRPC("<ResNLT>"_$$CHARCHK^XOBVLIB($P(VBOUT5(VBXA,.01),"^",3)))
"RTN","VBECRPCA",87,0)
  . . I $D(VBOUT9(VBXA)) S VBXJ=0 F  S VBXJ=$O(VBOUT9(VBXA,VBXJ)) Q:'VBXJ  D ADD^VBECRPC("<RnCPT>"_$$CHARCHK^XOBVLIB(VBOUT9(VBXA,VBXJ))_"</RnCPT>")
"RTN","VBECRPCA",88,0)
  . . I $P($G(VBOUT5(VBXA,.01)),"^",3)]"" D ADD^VBECRPC("</ResNLT>")
"RTN","VBECRPCA",89,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",3)]"" D ADD^VBECRPC("</LOINC>")
"RTN","VBECRPCA",90,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",1)]"" D ADD^VBECRPC("</Specimen>")
"RTN","VBECRPCA",91,0)
 D ADD^VBECRPC("</Labtest>")
"RTN","VBECRPCA",92,0)
KILL ;
"RTN","VBECRPCA",93,0)
 K CPT,CPTA,CPTB,NLT1,NLT2,VBA,VBAC,VBB,VBC,VBOUT,VBOUT2,VBOUT3,VBOUT4,VBOUT5,VBOUT6,VBOUT7,VBOUT8,VBOUT9,VBXA,VBXI,VBXJ
"RTN","VBECRPCA",94,0)
 Q
"RTN","VBECRPCA",95,0)
WSTEST(VBWST) ;White space test
"RTN","VBECRPCA",96,0)
 I $E(VBWST,1)=" "!($E(VBWST,$L(VBWST))=" ") Q 1
"RTN","VBECRPCA",97,0)
 Q 0
"RTN","VBECRPCA",98,0)
WSTRIP(VBDATA) ;Strip White Space
"RTN","VBECRPCA",99,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)
"RTN","VBECRPCA",100,0)
 F  Q:$E(VBDATA,1)'=" "  S VBDATA=$E(VBDATA,2,$L(VBDATA))
"RTN","VBECRPCA",101,0)
 Q VBDATA
"RTN","VBECRPCA",102,0)
WSCONV(VBDATA) ;Convert White Space
"RTN","VBECRPCA",103,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)_"%20"
"RTN","VBECRPCA",104,0)
 F  Q:$E(VBDATA,1)'=" "  S VBDATA="%20"_$E(VBDATA,2,$L(VBDATA))
"RTN","VBECRPCA",105,0)
 Q VBDATA
"RTN","VBECRPCA",106,0)
 ;
"RTN","VBECRPCA",107,0)
 ; ----------------------------------------------------------------
"RTN","VBECRPCA",108,0)
 ;     Private Method supports IA #4611
"RTN","VBECRPCA",109,0)
 ; ----------------------------------------------------------------
"RTN","VBECRPCA",110,0)
LABTEST(RESULTS,DATA) ; Main entry for VBECS LABORATORY TEST LOOKUP RPC
"RTN","VBECRPCA",111,0)
 ;
"RTN","VBECRPCA",112,0)
 N X,IEN,SITE,NAME,SPEC,CNT,ARR60,ERR,LIST
"RTN","VBECRPCA",113,0)
 S VBECCNT=0
"RTN","VBECRPCA",114,0)
 S RESULTS=$NA(^TMP("VBEC_LABTEST_LOOKUP",$J))
"RTN","VBECRPCA",115,0)
 K @RESULTS
"RTN","VBECRPCA",116,0)
 D BEGROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",117,0)
 I '$D(DATA) D  Q
"RTN","VBECRPCA",118,0)
 . D ADD^VBECRPC("<LabTest><Name>No search criteria provided</Name><IEN></IEN><Specimen></Specimen></LabTest>")
"RTN","VBECRPCA",119,0)
 . D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",120,0)
 ;
"RTN","VBECRPCA",121,0)
 D FIND^DIC(60,,"@;.01","BP",DATA,"","","","","ARR60","ERR")
"RTN","VBECRPCA",122,0)
 I '$D(ARR60("DILIST",1,0))!($D(ERR)) D  Q
"RTN","VBECRPCA",123,0)
 . D ADD^VBECRPC("<LabTest><Name>No Lab test found for ("_$$CHARCHK^XOBVLIB(DATA)_")</Name><IEN></IEN><Specimen></Specimen></LabTest>")
"RTN","VBECRPCA",124,0)
 . D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",125,0)
 ;
"RTN","VBECRPCA",126,0)
 S X=0
"RTN","VBECRPCA",127,0)
 F  S X=$O(ARR60("DILIST",X)) Q:X=""  D
"RTN","VBECRPCA",128,0)
 . S IEN=$P(ARR60("DILIST",X,0),"^")
"RTN","VBECRPCA",129,0)
 . S NAME=$P(ARR60("DILIST",X,0),"^",2)
"RTN","VBECRPCA",130,0)
 . S (SITE,CNT,LIST,SPEC)=0
"RTN","VBECRPCA",131,0)
 . F  S SITE=$O(^LAB(60,IEN,1,"B",SITE)) Q:SITE=""  D
"RTN","VBECRPCA",132,0)
 . . S CNT=CNT+1,SPEC=1
"RTN","VBECRPCA",133,0)
 . . S SPEC(CNT)=$P(^LAB(61,SITE,0),"^")
"RTN","VBECRPCA",134,0)
 . I 'SPEC D  Q
"RTN","VBECRPCA",135,0)
 . . D ADD^VBECRPC("<LabTest><Name>"_$$CHARCHK^XOBVLIB(NAME)_"</Name><IEN>"_$$CHARCHK^XOBVLIB(IEN)_"</IEN><Specimen></Specimen></LabTest>")
"RTN","VBECRPCA",136,0)
 . F  S LIST=$O(SPEC(LIST)) Q:LIST=""  D
"RTN","VBECRPCA",137,0)
 . . D ADD^VBECRPC("<LabTest><Name>"_$$CHARCHK^XOBVLIB(NAME)_"</Name><IEN>"_$$CHARCHK^XOBVLIB(IEN)_"</IEN>")
"RTN","VBECRPCA",138,0)
 . . D ADD^VBECRPC("<Specimen>"_$$CHARCHK^XOBVLIB(SPEC(LIST))_"</Specimen></LabTest>")
"RTN","VBECRPCA",139,0)
 . . I (SPEC(LIST)="BLOOD")!(SPEC(LIST)="SERUM")!(SPEC(LIST)="PLASMA") D
"RTN","VBECRPCA",140,0)
 . . . I $G(VBECTST) W !,NAME_"^"_IEN_"^"_SPEC(LIST)
"RTN","VBECRPCA",141,0)
 . Q
"RTN","VBECRPCA",142,0)
 D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",143,0)
 K VBECCNT
"RTN","VBECRPCA",144,0)
 Q
"RTN","VBECRPCA",145,0)
 ;
"RTN","VBECRPCA",146,0)
 ; --------------------------------------------------------------
"RTN","VBECRPCA",147,0)
 ;     Private Method supports IA #4612
"RTN","VBECRPCA",148,0)
 ; --------------------------------------------------------------
"RTN","VBECRPCA",149,0)
TSTRSLT(RESULTS,SDATE,EDATE,DIV,TESTS,PATS) ;
"RTN","VBECRPCA",150,0)
 ; Main entry for VBECS LAB TEST RESULTS LOOKUP RPC
"RTN","VBECRPCA",151,0)
 ;
"RTN","VBECRPCA",152,0)
 N VBRSX,X,Y,DFN,TEST,BDT,EDT,TESTNAME,TSTRES
"RTN","VBECRPCA",153,0)
 S VBECCNT=0,EDT="",BDT=""
"RTN","VBECRPCA",154,0)
 S RESULTS=$NA(^TMP("VBEC_LABRES",$J))
"RTN","VBECRPCA",155,0)
 K @RESULTS
"RTN","VBECRPCA",156,0)
 IF $D(SDATE) S BDT=$$HL7TFM^XLFDT(SDATE)
"RTN","VBECRPCA",157,0)
 IF $D(EDATE) S EDT=$$HL7TFM^XLFDT(EDATE)
"RTN","VBECRPCA",158,0)
 D BEGROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",159,0)
 S VBRSX=0
"RTN","VBECRPCA",160,0)
 F  S VBRSX=$O(PATS(VBRSX)) Q:VBRSX=""  D
"RTN","VBECRPCA",161,0)
 . S DFN=PATS(VBRSX) Q:DFN=""
"RTN","VBECRPCA",162,0)
 . ; No tests passed in, get all test result available
"RTN","VBECRPCA",163,0)
 . IF '$D(TESTS) D  Q
"RTN","VBECRPCA",164,0)
 . . D RR^LR7OR1(DFN,,BDT,EDT,,,,,,)
"RTN","VBECRPCA",165,0)
 . . IF $D(^TMP("LRRR",$J,DFN)) D RESXML(DFN)
"RTN","VBECRPCA",166,0)
 . . Q
"RTN","VBECRPCA",167,0)
 . S Y=0 F  S Y=$O(TESTS(Y)) Q:Y=""  D
"RTN","VBECRPCA",168,0)
 . . S TEST=TESTS(Y) Q:TEST=""
"RTN","VBECRPCA",169,0)
 . . D RR^LR7OR1(DFN,,BDT,EDT,,TEST,,,,)
"RTN","VBECRPCA",170,0)
 . . I $D(^TMP("LRRR",$J,DFN)) D RESXML(DFN)
"RTN","VBECRPCA",171,0)
 . . Q
"RTN","VBECRPCA",172,0)
 D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",173,0)
 ;M ^XTMP("VBECLABRES",$J)=^TMP("VBEC_LABRES",$J)
"RTN","VBECRPCA",174,0)
 Q
"RTN","VBECRPCA",175,0)
 ;
"RTN","VBECRPCA",176,0)
RESXML(DFN) ; Subroutine to extract Lab Test result and build return XML
"RTN","VBECRPCA",177,0)
 Q:'$D(^TMP("LRRR",$J,DFN))
"RTN","VBECRPCA",178,0)
 N TESTCODE,RES,TESTNAME,SUB,INVDT,SEQ,OUTPUT
"RTN","VBECRPCA",179,0)
 S SUB=0
"RTN","VBECRPCA",180,0)
 F  S SUB=$O(^TMP("LRRR",$J,DFN,SUB)) Q:SUB']""  D
"RTN","VBECRPCA",181,0)
 . S INVDT=0
"RTN","VBECRPCA",182,0)
 . F  S INVDT=$O(^TMP("LRRR",$J,DFN,SUB,INVDT)) Q:INVDT']""  D
"RTN","VBECRPCA",183,0)
 . . S SEQ=0
"RTN","VBECRPCA",184,0)
 . . F  S SEQ=$O(^TMP("LRRR",$J,DFN,SUB,INVDT,SEQ)) Q:SEQ']""  D
"RTN","VBECRPCA",185,0)
 . . . S OUTPUT=$G(^TMP("LRRR",$J,DFN,SUB,INVDT,SEQ))
"RTN","VBECRPCA",186,0)
 . . . Q:OUTPUT']""
"RTN","VBECRPCA",187,0)
 . . . ; Lab Test code
"RTN","VBECRPCA",188,0)
 . . . S TESTCODE=$P(OUTPUT,"^")
"RTN","VBECRPCA",189,0)
 . . . ; Lab Test result
"RTN","VBECRPCA",190,0)
 . . . S RES=$P(OUTPUT,"^",2)
"RTN","VBECRPCA",191,0)
 . . . ; Lab Test name
"RTN","VBECRPCA",192,0)
 . . . S TESTNAME=$P(OUTPUT,"^",15)
"RTN","VBECRPCA",193,0)
 . . . ; Date result completed converted to HL7 date/time format
"RTN","VBECRPCA",194,0)
 . . . S COMPDATE=$$FMTHL7^XLFDT($P(^LR($$LRDFN^LR7OR1(DFN),SUB,INVDT,0),"^",3))
"RTN","VBECRPCA",195,0)
 . . . D BEGROOT^VBECRPC("LabTest")
"RTN","VBECRPCA",196,0)
 . . . D ADD^VBECRPC("<VistaPatientId>"_$$CHARCHK^XOBVLIB(DFN)_"</VistaPatientId>")
"RTN","VBECRPCA",197,0)
 . . . D ADD^VBECRPC("<LabTestId>"_$$CHARCHK^XOBVLIB(TESTCODE)_"</LabTestId>")
"RTN","VBECRPCA",198,0)
 . . . D ADD^VBECRPC("<TestPrintName>"_$$CHARCHK^XOBVLIB(TESTNAME)_"</TestPrintName>")
"RTN","VBECRPCA",199,0)
 . . . D ADD^VBECRPC("<TestResult>"_$$CHARCHK^XOBVLIB(RES)_"</TestResult>")
"RTN","VBECRPCA",200,0)
 . . . D ADD^VBECRPC("<TestDate>"_$$CHARCHK^XOBVLIB(COMPDATE)_"</TestDate>")
"RTN","VBECRPCA",201,0)
 . . . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECRPCA",202,0)
 . . . Q
"RTN","VBECRPCA",203,0)
 Q
"RTN","VBECRPCB")
0^58^B38154509^B38154509
"RTN","VBECRPCB",1,0)
VBECRPCB ;HOIFO/BNT - ORDER LOOKUP BY UID ;03/24/2004
"RTN","VBECRPCB",2,0)
 ;;2.0;VBECS;;Jun 05, 2015;Build 4
"RTN","VBECRPCB",3,0)
 ;
"RTN","VBECRPCB",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCB",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCB",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCB",7,0)
 ; 
"RTN","VBECRPCB",8,0)
 ; Integration Agreements:
"RTN","VBECRPCB",9,0)
 ; Reference to $$FIND^DIC supported by IA #2051
"RTN","VBECRPCB",10,0)
 ; Reference to $$GET1^DIQ supported by IA #2052
"RTN","VBECRPCB",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCB",12,0)
 ; Reference to CHECKUID^LRWU4 supported by IA #4636
"RTN","VBECRPCB",13,0)
 ; Reference to LABORATORY TEST file 60 supported by IA #10054
"RTN","VBECRPCB",14,0)
 ; Reference to LAB ORDER ENTRY file 69 supported by IA #4774
"RTN","VBECRPCB",15,0)
 ; Reference to ACCESSION file 68 supported by IA #4773
"RTN","VBECRPCB",16,0)
 ; Reference to PATIENT file 2 supported by IA #10035
"RTN","VBECRPCB",17,0)
 ; Reference to $$FMTHL7^XLFDT supported by IA #10103
"RTN","VBECRPCB",18,0)
 ;
"RTN","VBECRPCB",19,0)
 QUIT
"RTN","VBECRPCB",20,0)
 ;
"RTN","VBECRPCB",21,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPCB",22,0)
 ;     Private Method supports IA #4633
"RTN","VBECRPCB",23,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPCB",24,0)
ORDER(RESULTS,VBUID) ;
"RTN","VBECRPCB",25,0)
 ;Bring in UID and RESULTS parameters.
"RTN","VBECRPCB",26,0)
 ;UID will be the Universal Identifier for this order.
"RTN","VBECRPCB",27,0)
 ;RESULTS will be the array where the data will be stored.
"RTN","VBECRPCB",28,0)
 N TEST,ERROR
"RTN","VBECRPCB",29,0)
 S VBECCNT=0
"RTN","VBECRPCB",30,0)
 S RESULTS=$NA(^TMP("VBECS_UIDLOOKUP",$J))
"RTN","VBECRPCB",31,0)
 K @RESULTS
"RTN","VBECRPCB",32,0)
 D BEGROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",33,0)
 I VBUID']"" D  Q
"RTN","VBECRPCB",34,0)
  . D ERROR^VBECRPC("No Specimen UID provided")
"RTN","VBECRPCB",35,0)
  . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",36,0)
 ;
"RTN","VBECRPCB",37,0)
 ;D FIND^DIC(68,,.01,,"BLOOD BANK",,,,,"TEST","ERROR")
"RTN","VBECRPCB",38,0)
 S VB68=$$CHECKUID^LRWU4(VBUID)
"RTN","VBECRPCB",39,0)
 I '+VB68!('$L($P(VB68,"^",2))) D  Q
"RTN","VBECRPCB",40,0)
 . D ERROR^VBECRPC("No accession associated with UID '"_VBUID_"'")
"RTN","VBECRPCB",41,0)
 . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",42,0)
 ;
"RTN","VBECRPCB",43,0)
 I $P($G(^LRO(68,$P(VB68,"^",2),0)),"^",2)'="BB" D  Q
"RTN","VBECRPCB",44,0)
 . D ERROR^VBECRPC("No Blood Bank accession area associated with UID '"_VBUID_"'")
"RTN","VBECRPCB",45,0)
 . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",46,0)
 ;
"RTN","VBECRPCB",47,0)
 S VBACC=$P(VB68,"^",2)
"RTN","VBECRPCB",48,0)
 S VBA=$P(VB68,"^",3)
"RTN","VBECRPCB",49,0)
 S VBB=$P(VB68,"^",4)
"RTN","VBECRPCB",50,0)
 ;
"RTN","VBECRPCB",51,0)
 Q:$P($G(^LRO(68,VBACC,1,VBA,1,VBB,0)),"^",2)'=2  ;Add parameter for 67 if necessary
"RTN","VBECRPCB",52,0)
 S LRDFN=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,0)),"^"),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","VBECRPCB",53,0)
 ;Add Collection Date/Time
"RTN","VBECRPCB",54,0)
 S VBCOLDT=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,3)),"^")
"RTN","VBECRPCB",55,0)
 S VBNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","VBECRPCB",56,0)
 ;Add DFN and Name
"RTN","VBECRPCB",57,0)
 D ADD^VBECRPC("<PatientName>"_$$CHARCHK^XOBVLIB(VBNAME)_"</PatientName>")
"RTN","VBECRPCB",58,0)
 D ADD^VBECRPC("<VistaPatientId>"_$$CHARCHK^XOBVLIB(DFN)_"</VistaPatientId>")
"RTN","VBECRPCB",59,0)
 ;Add Accession number
"RTN","VBECRPCB",60,0)
 S VBACCN=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.2)),"^")
"RTN","VBECRPCB",61,0)
 D ADD^VBECRPC("<SpecimenAccessionNumber>"_$$CHARCHK^XOBVLIB(VBACCN)_"</SpecimenAccessionNumber>")
"RTN","VBECRPCB",62,0)
 S VBORDN=+$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.1)),"^")
"RTN","VBECRPCB",63,0)
 ;Add Order Number
"RTN","VBECRPCB",64,0)
 D ADD^VBECRPC("<LabOrderNumber>"_$$CHARCHK^XOBVLIB(VBORDN)_"</LabOrderNumber>")
"RTN","VBECRPCB",65,0)
 ;Add UID from file 68
"RTN","VBECRPCB",66,0)
 S VBUID68=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.3)),"^")
"RTN","VBECRPCB",67,0)
 D ADD^VBECRPC("<SpecimenUID>"_$$CHARCHK^XOBVLIB(VBUID68)_"</SpecimenUID>")
"RTN","VBECRPCB",68,0)
 ;Add collection date/time
"RTN","VBECRPCB",69,0)
 D ADD^VBECRPC("<CollectionDateTime>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT(VBCOLDT))_"</CollectionDateTime>")
"RTN","VBECRPCB",70,0)
 ;Add Tests
"RTN","VBECRPCB",71,0)
 D BEGROOT^VBECRPC("LabTests")
"RTN","VBECRPCB",72,0)
 S VBC=0 F  S VBC=$O(^LRO(68,VBACC,1,VBA,1,VBB,4,VBC)) Q:'VBC  D
"RTN","VBECRPCB",73,0)
 . S VBTEST=+$P($G(^LRO(68,VBACC,1,VBA,1,VBB,4,VBC,0)),"^")
"RTN","VBECRPCB",74,0)
 . S VBTNM=$$GET1^DIQ(60,VBTEST,.01)
"RTN","VBECRPCB",75,0)
 . ;Add Test Name
"RTN","VBECRPCB",76,0)
 . D BEGROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",77,0)
 . D ADD^VBECRPC("<LabTestID>"_$$CHARCHK^XOBVLIB(VBTEST)_"</LabTestID>")
"RTN","VBECRPCB",78,0)
 . D ADD^VBECRPC("<LabTestName>"_$$CHARCHK^XOBVLIB(VBTNM)_"</LabTestName>")
"RTN","VBECRPCB",79,0)
 . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",80,0)
 ;Close Tests
"RTN","VBECRPCB",81,0)
 D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCB",82,0)
 D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",83,0)
 K DFN,LRDFN,TEST,VBA,VBACC,VBB,VBC,VBECCNT,VBNAME,VBORDN,VBTEST,VBTNM,VBUID,VBUID68,VBACCN
"RTN","VBECRPCB",84,0)
 Q
"RTN","VBECRPCB",85,0)
 ;
"RTN","VBECRPCB",86,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPCB",87,0)
 ;     Private Method supports IA #4614
"RTN","VBECRPCB",88,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPCB",89,0)
ORDNUM(RESULTS,LROIEN) ;
"RTN","VBECRPCB",90,0)
 ;
"RTN","VBECRPCB",91,0)
 N TEST,QUIT,VBA,VBB
"RTN","VBECRPCB",92,0)
 S (VBECCNT,QUIT)=0
"RTN","VBECRPCB",93,0)
 S RESULTS=$NA(^TMP("VBECS_ORDLOOKUP",$J))
"RTN","VBECRPCB",94,0)
 K @RESULTS
"RTN","VBECRPCB",95,0)
 D BEGROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",96,0)
 I LROIEN']"" D  Q
"RTN","VBECRPCB",97,0)
 . D ERROR^VBECRPC("No Lab Order Number provided")
"RTN","VBECRPCB",98,0)
 . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",99,0)
 ;
"RTN","VBECRPCB",100,0)
 I '$D(^LRO(69,"C",LROIEN)) D  Q
"RTN","VBECRPCB",101,0)
 . D ERROR^VBECRPC("Lab Order Number "_LROIEN_" not found in file 69")
"RTN","VBECRPCB",102,0)
 . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",103,0)
 S VBA=0 F  S VBA=$O(^LRO(69,"C",LROIEN,VBA)) Q:'VBA  D  Q:QUIT
"RTN","VBECRPCB",104,0)
 . S VBB=0 F  S VBB=$O(^LRO(69,"C",LROIEN,VBA,VBB)) Q:'VBB  D
"RTN","VBECRPCB",105,0)
 . . i $p($g(^LRO(69,VBA,1,VBB,1)),"^",4)'="C" s QUIT=1 q  ;Collection status
"RTN","VBECRPCB",106,0)
 . . ; Order has been merged.
"RTN","VBECRPCB",107,0)
 . . IF $P($G(^LRO(69,VBA,1,VBB,1)),"^",7)]"" S QUIT=1 Q
"RTN","VBECRPCB",108,0)
 . . D BEGROOT^VBECRPC("LabTests")
"RTN","VBECRPCB",109,0)
 . . S VBC=0 F  S VBC=$O(^LRO(69,VBA,1,VBB,2,VBC)) Q:'VBC  D
"RTN","VBECRPCB",110,0)
 . . . D BEGROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",111,0)
 . . . S VBLR0=^LRO(69,VBA,1,VBB,2,VBC,0)
"RTN","VBECRPCB",112,0)
 . . . S LRDFN=$P(^LRO(69,VBA,1,VBB,0),"^",1),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","VBECRPCB",113,0)
 . . . S VBNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","VBECRPCB",114,0)
 . . . S VBTEST=$P($G(VBLR0),"^")
"RTN","VBECRPCB",115,0)
 . . . S VBTNM=$$GET1^DIQ(60,VBTEST,.01)
"RTN","VBECRPCB",116,0)
 . . . I $P($G(^LRO(69,VBA,1,VBB,2,VBC,0)),"^",3)']"" D  Q
"RTN","VBECRPCB",117,0)
 . . . . S QUIT=1
"RTN","VBECRPCB",118,0)
 . . . . D ERROR^VBECRPC("Lab Test "_VBTNM_" on order number "_LROIEN_" has not been accessioned")
"RTN","VBECRPCB",119,0)
 . . . . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",120,0)
 . . . S VBUID=$G(^LRO(69,VBA,1,VBB,2,VBC,.3))
"RTN","VBECRPCB",121,0)
 . . . S VBCOLDT=$P($G(^LRO(68,$P($G(VBLR0),"^",4),1,$P($G(VBLR0),"^",3),1,$P($G(VBLR0),"^",5),3)),"^")
"RTN","VBECRPCB",122,0)
 . . . S VBACCN=$G(^LRO(68,$P($G(VBLR0),"^",4),1,$P($G(VBLR0),"^",3),1,$P($G(VBLR0),"^",5),.2))
"RTN","VBECRPCB",123,0)
 . . .;Add DFN and Name
"RTN","VBECRPCB",124,0)
 . . . D ADD^VBECRPC("<PatientName>"_$$CHARCHK^XOBVLIB(VBNAME)_"</PatientName>")
"RTN","VBECRPCB",125,0)
 . . . D ADD^VBECRPC("<VistaPatientId>"_$$CHARCHK^XOBVLIB(DFN)_"</VistaPatientId>")
"RTN","VBECRPCB",126,0)
 . . . D ADD^VBECRPC("<LabOrderNumber>"_$$CHARCHK^XOBVLIB(LROIEN)_"</LabOrderNumber>")
"RTN","VBECRPCB",127,0)
 . . . D ADD^VBECRPC("<LabTestID>"_$$CHARCHK^XOBVLIB(VBTEST)_"</LabTestID>")
"RTN","VBECRPCB",128,0)
 . . . D ADD^VBECRPC("<LabTestName>"_$$CHARCHK^XOBVLIB(VBTNM)_"</LabTestName>")
"RTN","VBECRPCB",129,0)
 . . . D ADD^VBECRPC("<SpecimenAccessionNumber>"_$$CHARCHK^XOBVLIB(VBACCN)_"</SpecimenAccessionNumber>")
"RTN","VBECRPCB",130,0)
 . . . D ADD^VBECRPC("<SpecimenUID>"_$$CHARCHK^XOBVLIB(VBUID)_"</SpecimenUID>")
"RTN","VBECRPCB",131,0)
 . . . ;Add collection date/time
"RTN","VBECRPCB",132,0)
 . . . D ADD^VBECRPC("<CollectionDateTime>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT(VBCOLDT))_"</CollectionDateTime>")
"RTN","VBECRPCB",133,0)
 . . . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",134,0)
 . . . Q
"RTN","VBECRPCB",135,0)
 . . D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCB",136,0)
 . . Q
"RTN","VBECRPCB",137,0)
 . Q
"RTN","VBECRPCB",138,0)
 D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",139,0)
 K DFN,LRDFN,VBA,VBACC,VBB,VBECCNT,VBNAME,VBORDN,VBTEST,VBTNM,VBUID,VBUID68,VBACCN
"RTN","VBECRPCB",140,0)
 Q
"RTN","VBECRPCC")
0^59^B22664928^B22664928
"RTN","VBECRPCC",1,0)
VBECRPCC ;HOIFO/bnt - VBECS VistALink RPC Client Utilities ;07/27/2002  13:00
"RTN","VBECRPCC",2,0)
 ;;2.0;VBECS;;Jun 05, 2015;Build 4
"RTN","VBECRPCC",3,0)
 ;
"RTN","VBECRPCC",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCC",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCC",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCC",7,0)
 ; 
"RTN","VBECRPCC",8,0)
 ; Integration Agreements:
"RTN","VBECRPCC",9,0)
 ;  Reference to $$GET^XPAR supported by IA #2263
"RTN","VBECRPCC",10,0)
 ;  Reference to $$XMLHDR^XOBVLIB supported by IA #4090
"RTN","VBECRPCC",11,0)
 ;
"RTN","VBECRPCC",12,0)
 QUIT
"RTN","VBECRPCC",13,0)
 ;
"RTN","VBECRPCC",14,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",15,0)
 ;                  RPC Client:  Methods Calls
"RTN","VBECRPCC",16,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",17,0)
 ;
"RTN","VBECRPCC",18,0)
EXECUTE(VBECPRMS) ; -- execute rpc call
"RTN","VBECRPCC",19,0)
 ;
"RTN","VBECRPCC",20,0)
 ; -- validate parmeters passed
"RTN","VBECRPCC",21,0)
 IF '$$VALIDATE(.VBECPRMS) QUIT 0
"RTN","VBECRPCC",22,0)
 ;
"RTN","VBECRPCC",23,0)
 ; -- call method to build request from parameters array
"RTN","VBECRPCC",24,0)
 DO REQUEST(.VBECPRMS)
"RTN","VBECRPCC",25,0)
 ;SET VBECPRMS("CLOSE MESSAGE")="<VistaLink messageType='gov.va.med.foundations.rpc.request' ></VistaLink>"
"RTN","VBECRPCC",26,0)
 IF $G(VBECPRMS("RESULTS"))="" SET VBECPRMS("RESULTS")=$NA(^TMP("VBECRPC",$J,"XML"))
"RTN","VBECRPCC",27,0)
 QUIT $$EXECUTE^VBECVLC(.VBECPRMS)
"RTN","VBECRPCC",28,0)
 ;
"RTN","VBECRPCC",29,0)
VALIDATE(VBECPRMS) ; -- validate parameters sent in
"RTN","VBECRPCC",30,0)
 ; // TODO: Do checks and build validate error message
"RTN","VBECRPCC",31,0)
 QUIT 1
"RTN","VBECRPCC",32,0)
 ;
"RTN","VBECRPCC",33,0)
REQUEST(VBECPRMS) ; -- build xml request
"RTN","VBECRPCC",34,0)
 NEW VBECLINE,VBECPI,PTYPE,VBECREQ
"RTN","VBECRPCC",35,0)
 SET VBECLINE=0
"RTN","VBECRPCC",36,0)
 SET VBECPRMS("MESSAGE TYPE")="gov.va.med.foundations.rpc.request"
"RTN","VBECRPCC",37,0)
 SET VBECPRMS("MODE")="singleton"
"RTN","VBECRPCC",38,0)
 IF $G(VBECPRMS("REQUEST"))="" SET VBECPRMS("REQUEST")=$NA(VBECPRMS("REQUEST","XML"))
"RTN","VBECRPCC",39,0)
 SET VBECREQ=VBECPRMS("REQUEST")
"RTN","VBECRPCC",40,0)
 KILL @VBECREQ
"RTN","VBECRPCC",41,0)
 ;
"RTN","VBECRPCC",42,0)
 DO ADD($$XMLHDR^XOBVLIB())
"RTN","VBECRPCC",43,0)
 DO ADD("<VistaLink messageType="""_$G(VBECPRMS("MESSAGE TYPE"))_""" mode="""_$G(VBECPRMS("MODE"))_""" version=""1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""rpcRequest.xsd"" ")
"RTN","VBECRPCC",44,0)
 DO ADD("xmlns=""http://domain.ext/Foundations"">")
"RTN","VBECRPCC",45,0)
 DO ADD("<RpcHandler version=""1.0"" />")
"RTN","VBECRPCC",46,0)
 DO ADD("<Request rpcName="""_$G(VBECPRMS("RPC NAME"))_""" version=""1.0"" rpcClientTimeOut=""900"" >")
"RTN","VBECRPCC",47,0)
 DO ADD("<RpcContext><![CDATA["_$G(VBECPRMS("RPC CONTEXT"))_"]]></RpcContext>")
"RTN","VBECRPCC",48,0)
 DO ADD("<Params>")
"RTN","VBECRPCC",49,0)
 IF $D(VBECPRMS("PARAMS"))>9 DO
"RTN","VBECRPCC",50,0)
 . SET VBECPI=0
"RTN","VBECRPCC",51,0)
 . FOR  SET VBECPI=$O(VBECPRMS("PARAMS",VBECPI)) Q:'VBECPI  DO
"RTN","VBECRPCC",52,0)
 . . SET PTYPE=$G(VBECPRMS("PARAMS",VBECPI,"TYPE"))
"RTN","VBECRPCC",53,0)
 . . IF PTYPE="STRING" DO STRING QUIT
"RTN","VBECRPCC",54,0)
 . . IF PTYPE="ARRAY" DO ARRAY QUIT
"RTN","VBECRPCC",55,0)
 . . IF PTYPE="REF" DO REF QUIT
"RTN","VBECRPCC",56,0)
 DO ADD("</Params>")
"RTN","VBECRPCC",57,0)
 DO ADD("</Request>")
"RTN","VBECRPCC",58,0)
 DO ADD("</VistaLink>")
"RTN","VBECRPCC",59,0)
 QUIT
"RTN","VBECRPCC",60,0)
 ;
"RTN","VBECRPCC",61,0)
STRING ;
"RTN","VBECRPCC",62,0)
 DO ADD("<Param type=""string"" position="""_VBECPI_""" >"_$G(VBECPRMS("PARAMS",VBECPI,"VALUE"))_"</Param>")
"RTN","VBECRPCC",63,0)
 QUIT
"RTN","VBECRPCC",64,0)
 ;
"RTN","VBECRPCC",65,0)
ARRAY ;
"RTN","VBECRPCC",66,0)
 NEW VBECNAME
"RTN","VBECRPCC",67,0)
 DO ADD("<Param type=""array"" position="""_VBECPI_""" >")
"RTN","VBECRPCC",68,0)
 DO ADD("<Indices>")
"RTN","VBECRPCC",69,0)
 SET VBECNAME="" FOR  SET VBECNAME=$O(VBECPRMS("PARAMS",VBECPI,"VALUE",VBECNAME)) Q:VBECNAME=""  DO
"RTN","VBECRPCC",70,0)
 . DO ADD("<Index name="""_VBECNAME_""" value="""_$G(VBECPRMS("PARAMS",VBECPI,"VALUE",VBECNAME))_""" />")
"RTN","VBECRPCC",71,0)
 DO ADD("</Indices>")
"RTN","VBECRPCC",72,0)
 DO ADD("</Param>")
"RTN","VBECRPCC",73,0)
 QUIT
"RTN","VBECRPCC",74,0)
 ;
"RTN","VBECRPCC",75,0)
REF ;
"RTN","VBECRPCC",76,0)
 DO ADD("<Param type=""ref"" position="""_VBECPI_""" >"_$G(VBECPRMS("PARAMS",VBECPI,"VALUE"))_"</Param>")
"RTN","VBECRPCC",77,0)
 QUIT
"RTN","VBECRPCC",78,0)
 ;
"RTN","VBECRPCC",79,0)
ADD(STR) ; -- add string to array
"RTN","VBECRPCC",80,0)
 SET VBECLINE=VBECLINE+1
"RTN","VBECRPCC",81,0)
 SET @VBECREQ@(VBECLINE)=STR
"RTN","VBECRPCC",82,0)
 QUIT
"RTN","VBECRPCC",83,0)
 ;
"RTN","VBECRPCC",84,0)
INITV(RPC) ; Initialize VBECS VistALink Client parameters
"RTN","VBECRPCC",85,0)
 ; Input:  RPC = Parameter Toolkit Instance of RPC Name
"RTN","VBECRPCC",86,0)
 ; Output: VBECPRMS or -1^"error specific text" if error occurs setting any VBECPRMS parameter
"RTN","VBECRPCC",87,0)
 ;
"RTN","VBECRPCC",88,0)
 NEW ENT,PAR
"RTN","VBECRPCC",89,0)
 KILL VBECPRMS
"RTN","VBECRPCC",90,0)
 SET VBECPRMS("ERROR")=0
"RTN","VBECRPCC",91,0)
 IF RPC']"" DO ERR("NO RPC NAME SUPPLIED") QUIT
"RTN","VBECRPCC",92,0)
 ; Parameter Toolkit variables
"RTN","VBECRPCC",93,0)
 SET ENT="PKG.VBECS" ;Entity
"RTN","VBECRPCC",94,0)
 SET PAR="VBECS VISTALINK" ;Parameter
"RTN","VBECRPCC",95,0)
 SET VBECPRMS("ADDRESS")=$$GET^XPAR(ENT,PAR,"LISTENER IP ADDRESS","Q")
"RTN","VBECRPCC",96,0)
 IF VBECPRMS("ADDRESS")="" DO ERR("NO LISTENER IP ADDRESS FOUND") QUIT
"RTN","VBECRPCC",97,0)
 SET VBECPRMS("PORT")=$$GET^XPAR(ENT,PAR,"LISTENER PORT NUMBER","Q")
"RTN","VBECRPCC",98,0)
 IF VBECPRMS("PORT")="" DO ERR("NO LISTENER PORT NUMBER FOUND") QUIT
"RTN","VBECRPCC",99,0)
 SET VBECPRMS("RPC NAME")=RPC
"RTN","VBECRPCC",100,0)
 SET VBECPRMS("RPC CONTEXT")=$$GET^XPAR(ENT,PAR,RPC,"Q")
"RTN","VBECRPCC",101,0)
 IF VBECPRMS("RPC CONTEXT")="" DO ERR("UNABLE TO RETRIEVE RPC CONTEXT FOR "_RPC) QUIT
"RTN","VBECRPCC",102,0)
 QUIT
"RTN","VBECRPCC",103,0)
 ;
"RTN","VBECRPCC",104,0)
CHGADPRT(IP,PORT) ; Change the IP Address and Port of the VBECS VistALink Listner
"RTN","VBECRPCC",105,0)
 NEW ERR,ENT,PAR
"RTN","VBECRPCC",106,0)
 SET ENT="PKG.VBECS" ; Entity
"RTN","VBECRPCC",107,0)
 SET PAR="VBECS VISTALINK" ; Parameter
"RTN","VBECRPCC",108,0)
 IF IP]"" DO
"RTN","VBECRPCC",109,0)
 . DO EN^XPAR(ENT,PAR,"LISTENER IP ADDRESS",IP,.ERR)
"RTN","VBECRPCC",110,0)
 . IF ERR QUIT
"RTN","VBECRPCC",111,0)
 ;
"RTN","VBECRPCC",112,0)
 IF PORT]"" DO
"RTN","VBECRPCC",113,0)
 . DO EN^XPAR(ENT,PAR,"LISTENER PORT NUMBER",PORT,.ERR)
"RTN","VBECRPCC",114,0)
 . IF ERR QUIT
"RTN","VBECRPCC",115,0)
 QUIT ERR
"RTN","VBECRPCC",116,0)
 ;
"RTN","VBECRPCC",117,0)
CONTEXT(INSTANCE,CONTEXT) ; Adds, or changes, an RPC Instance and
"RTN","VBECRPCC",118,0)
 ; it's associated context
"RTN","VBECRPCC",119,0)
 ; Set CONTEXT to "@" to delete the instance of the RPC.
"RTN","VBECRPCC",120,0)
 ;
"RTN","VBECRPCC",121,0)
 NEW ERR,ENT,PAR
"RTN","VBECRPCC",122,0)
 SET ENT="PKG.VBECS" ; Entity
"RTN","VBECRPCC",123,0)
 SET PAR="VBECS VISTALINK" ; Parameter
"RTN","VBECRPCC",124,0)
 DO EN^XPAR(ENT,PAR,INSTANCE,CONTEXT,.ERR)
"RTN","VBECRPCC",125,0)
 QUIT ERR
"RTN","VBECRPCC",126,0)
 ;
"RTN","VBECRPCC",127,0)
ERR(ERRTXT) ; Set VBECPRMS("ERROR") node with error text and quit
"RTN","VBECRPCC",128,0)
 S VBECPRMS("ERROR")="1^"_ERRTXT
"RTN","VBECRPCC",129,0)
 QUIT
"RTN","VBECRPCC",130,0)
 ;
"RTN","VBECRPCC",131,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",132,0)
 ;                   Request Format Documentation
"RTN","VBECRPCC",133,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",134,0)
 ; 
"RTN","VBECRPCC",135,0)
 ; [ Parameter Array Format -->> passed to REQUEST^VBECRPCC(.VBECPRMS) ] 
"RTN","VBECRPCC",136,0)
 ; 
"RTN","VBECRPCC",137,0)
 ; -- general information
"RTN","VBECRPCC",138,0)
 ; VBECPRMS("ADDRESS")="127.0.0.1"
"RTN","VBECRPCC",139,0)
 ; VBECPRMS("PORT")=19811
"RTN","VBECRPCC",140,0)
 ; VBECPRMS("RPC NAME")="VBECS Order Entry"
"RTN","VBECRPCC",141,0)
 ; VBECPRMS("RPC CONTEXT")="VBECS VISTALINK CONTEXT"
"RTN","VBECRPCC",142,0)
 ;
"RTN","VBECRPCC",143,0)
 ; -- string parameter type
"RTN","VBECRPCC",144,0)
 ; VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECRPCC",145,0)
 ; VBECPRMS("PARAMS",1,"VALUE")=2
"RTN","VBECRPCC",146,0)
 ; VBECPRMS("PARAMS",2,"TYPE")="STRING"
"RTN","VBECRPCC",147,0)
 ; VBECPRMS("PARAMS",2,"VALUE")=2961001
"RTN","VBECRPCC",148,0)
 ; VBECPRMS("PARAMS",3,"TYPE")="STRING"
"RTN","VBECRPCC",149,0)
 ; VBECPRMS("PARAMS",3,"VALUE")=3030101
"RTN","VBECRPCC",150,0)
 ;
"RTN","VBECRPCC",151,0)
 ; -- sample array parameter type
"RTN","VBECRPCC",152,0)
 ; VBECPRMS("PARAMS",4,"TYPE")="ARRAY"
"RTN","VBECRPCC",153,0)
 ; VBECPRMS("PARAMS",4,"VALUE","FNAME")="JOE"
"RTN","VBECRPCC",154,0)
 ; VBECPRMS("PARAMS",4,"VALUE","LNAME")="GOODMAN"
"RTN","VBECRPCC",155,0)
 ;                   
"RTN","VBECRPCC",156,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",157,0)
 ;                   
"RTN","VBECRPCC",158,0)
 ; [ Sample XML produced by calling REQUEST^VBECRPCC(.VBECPRMS) ]
"RTN","VBECRPCC",159,0)
 ; 
"RTN","VBECRPCC",160,0)
 ; <?xml version="1.0" encoding="utf-8" ?>
"RTN","VBECRPCC",161,0)
 ; <VistaLink type="gov.va.med.foundations.rpc.request" mode="singleton" 
"RTN","VBECRPCC",162,0)
 ;   version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
"RTN","VBECRPCC",163,0)
 ;   xsi:noNamespaceSchemaLocation="rpcRequest.xsd"
"RTN","VBECRPCC",164,0)
 ;   xmlns="http://domain.ext/Foundations">
"RTN","VBECRPCC",165,0)
 ;   <RpcHandler version="1.0" />
"RTN","VBECRPCC",166,0)
 ;   <Request rpcName="VBECS Order Entry" version="1.0"
"RTN","VBECRPCC",167,0)
 ;     rpcClientTimeOut="900">
"RTN","VBECRPCC",168,0)
 ;      <RpcContext>
"RTN","VBECRPCC",169,0)
 ;        <![CDATA[ VBECS VISTALINK ]]>
"RTN","VBECRPCC",170,0)
 ;      </RpcContext>
"RTN","VBECRPCC",171,0)
 ;      <Params>
"RTN","VBECRPCC",172,0)
 ;         <Param type="string" position="1" >2</Param>
"RTN","VBECRPCC",173,0)
 ;         <Param type="string" position="2" >2961001</Param>
"RTN","VBECRPCC",174,0)
 ;         <Param type="string" position="3" >3030101</Param>
"RTN","VBECRPCC",175,0)
 ;         <Param type="array" position="4" >
"RTN","VBECRPCC",176,0)
 ;            <Indices>
"RTN","VBECRPCC",177,0)
 ;               <Index name="status" value="veteran" />
"RTN","VBECRPCC",178,0)
 ;               <Index name="gender" value="male" />
"RTN","VBECRPCC",179,0)
 ;            </Indices>
"RTN","VBECRPCC",180,0)
 ;         </Param>
"RTN","VBECRPCC",181,0)
 ;      </Params>
"RTN","VBECRPCC",182,0)
 ;   </Request>
"RTN","VBECRPCC",183,0)
 ; </VistaLink>
"RTN","VBECRPCC",184,0)
 ;
"RTN","VBECRPCC",185,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",186,0)
 ;
"RTN","VBECRPCD")
0^60^B6726989^B6726989
"RTN","VBECRPCD",1,0)
VBECRPCD ;DALOI/RLM - Lookup HOSPITAL LOCATION based on DIVISION ;12 January 2004
"RTN","VBECRPCD",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPCD",3,0)
 ;
"RTN","VBECRPCD",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCD",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCD",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCD",7,0)
 ; 
"RTN","VBECRPCD",8,0)
 ; Integration Agreements:
"RTN","VBECRPCD",9,0)
 ; Reference to ^SC( supported by IA #10040
"RTN","VBECRPCD",10,0)
 ; Reference to $$SITE^VASITE supported by IA #10112
"RTN","VBECRPCD",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCD",12,0)
 ;
"RTN","VBECRPCD",13,0)
 ; This routine should not be called from the top.
"RTN","VBECRPCD",14,0)
 QUIT
"RTN","VBECRPCD",15,0)
 ;
"RTN","VBECRPCD",16,0)
LOC(RESULTS,DIV) ; Main RPC Entry
"RTN","VBECRPCD",17,0)
 S VBECCNT=0
"RTN","VBECRPCD",18,0)
 S RESULTS=$NA(^TMP("VBECHLOC",$J))
"RTN","VBECRPCD",19,0)
 K @RESULTS
"RTN","VBECRPCD",20,0)
 D BEGROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",21,0)
 I DIV="" D  Q
"RTN","VBECRPCD",22,0)
 . D ADD^VBECRPC("<Error>No Division Provided</Error>")
"RTN","VBECRPCD",23,0)
 . D ENDROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",24,0)
 . Q
"RTN","VBECRPCD",25,0)
 I DIV]"" D LOOK
"RTN","VBECRPCD",26,0)
 D ENDROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",27,0)
 Q
"RTN","VBECRPCD",28,0)
LOOK ;
"RTN","VBECRPCD",29,0)
 S VBECA=0 F  S VBECA=$O(^SC(VBECA)) Q:'VBECA  D
"RTN","VBECRPCD",30,0)
  . Q:'$P(^SC(VBECA,0),U,15)  ;No Division
"RTN","VBECRPCD",31,0)
  . S IDATE=$P($G(^SC(VBECA,"I")),"^",1) ;inactivate date
"RTN","VBECRPCD",32,0)
  . S RDATE=$P($G(^SC(VBECA,"I")),"^",2) ;reactivate date
"RTN","VBECRPCD",33,0)
  . I IDATE]"",IDATE<DT,RDATE="" Q  ;past inactivate date, no reactivate date
"RTN","VBECRPCD",34,0)
  . I IDATE]"",IDATE<DT,RDATE>DT Q  ;past inactivate date, future reactivate date
"RTN","VBECRPCD",35,0)
  . ;Q:$D(^SC(VBECA,"I"))  ;Inactive Location???
"RTN","VBECRPCD",36,0)
  . Q:"CWOR"'[$P(^SC(VBECA,0),U,3)  ;Clinic, Ward, or Operating Room
"RTN","VBECRPCD",37,0)
  . I DIV=$P($$SITE^VASITE(DT,+$P(^SC(VBECA,0),U,15)),U,3) D
"RTN","VBECRPCD",38,0)
  . . D BEGROOT^VBECRPC("Location")
"RTN","VBECRPCD",39,0)
  . . D ADD^VBECRPC("<LocationName>"_$$CHARCHK^XOBVLIB($$WSTRIP($P(^SC(VBECA,0),U)))_"</LocationName>")
"RTN","VBECRPCD",40,0)
  . . D ADD^VBECRPC("<LocationIEN>"_$$CHARCHK^XOBVLIB(VBECA)_"</LocationIEN>")
"RTN","VBECRPCD",41,0)
  . . D ADD^VBECRPC("<LocationType>"_$$CHARCHK^XOBVLIB($P(^SC(VBECA,0),U,3))_"</LocationType>")
"RTN","VBECRPCD",42,0)
  . . D ENDROOT^VBECRPC("Location")
"RTN","VBECRPCD",43,0)
 Q
"RTN","VBECRPCD",44,0)
KILL ;
"RTN","VBECRPCD",45,0)
 K DIV,VBDATA,VBECA,VBECCNT
"RTN","VBECRPCD",46,0)
 Q
"RTN","VBECRPCD",47,0)
WSTRIP(VBDATA) ;Strip White Space
"RTN","VBECRPCD",48,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)
"RTN","VBECRPCD",49,0)
 F  Q:$E(VBDATA,1)'=" "  S VBDATA=$E(VBDATA,2,$L(VBDATA))
"RTN","VBECRPCD",50,0)
 Q VBDATA
"RTN","VBECRPCD",51,0)
 ;
"RTN","VBECRPCD",52,0)
TESTLOC ; Entry point to write the results of the Get Hospital Locations RPC
"RTN","VBECRPCD",53,0)
 ; Function in XML format
"RTN","VBECRPCD",54,0)
 ;
"RTN","VBECRPCD",55,0)
 S VBECTST=1
"RTN","VBECRPCD",56,0)
 D LOC(.RESULTS,"589")
"RTN","VBECRPCD",57,0)
 S X=0
"RTN","VBECRPCD",58,0)
 F  S X=$O(@RESULTS@(X)) Q:X=""  D
"RTN","VBECRPCD",59,0)
 . W @RESULTS@(X)
"RTN","VBECRPCD",60,0)
 Q
"RTN","VBECRPCE")
0^61^B8061175^B8061175
"RTN","VBECRPCE",1,0)
VBECRPCE ;HOIFO/BNT-Lookup PROVIDERS based on DIVISION ;22 March 2004
"RTN","VBECRPCE",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPCE",3,0)
 ;
"RTN","VBECRPCE",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCE",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCE",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCE",7,0)
 ; 
"RTN","VBECRPCE",8,0)
 ; Integration Agreements:
"RTN","VBECRPCE",9,0)
 ; Reference DBIA 10076 - XUSEC GLOBAL READ
"RTN","VBECRPCE",10,0)
 ; Reference DBIA 10060 - NEW PERSON FILE
"RTN","VBECRPCE",11,0)
 ; Reference DBIA 10090 - INSTITUTION FILE
"RTN","VBECRPCE",12,0)
 ; Reference DBIA 2051  - LIST^DIC
"RTN","VBECRPCE",13,0)
 ; Reference to $$UP^XLFSTR is supported by IA: 10104
"RTN","VBECRPCE",14,0)
 ; Reference to $$FIND1^DIC supported by IA #2051
"RTN","VBECRPCE",15,0)
 ; Reference to $$FIND1^DIC supported by IA #2051
"RTN","VBECRPCE",16,0)
 ; Reference to ^DIC(4 supported by IA #10090
"RTN","VBECRPCE",17,0)
 ;
"RTN","VBECRPCE",18,0)
 ; This routine should not be called from the top.
"RTN","VBECRPCE",19,0)
 QUIT
"RTN","VBECRPCE",20,0)
 ;
"RTN","VBECRPCE",21,0)
 ; ----------------------------------------------------------------
"RTN","VBECRPCE",22,0)
 ;       Private Method supports IA 4617
"RTN","VBECRPCE",23,0)
 ; ----------------------------------------------------------------
"RTN","VBECRPCE",24,0)
PROVIDER(RESULTS,DIV,DATA) ;
"RTN","VBECRPCE",25,0)
 ; Look up and return all active providers by division
"RTN","VBECRPCE",26,0)
 ;
"RTN","VBECRPCE",27,0)
 ; Input: RESULTS = Passed by reference used to return data to VistALink
"RTN","VBECRPCE",28,0)
 ;                  as XML.
"RTN","VBECRPCE",29,0)
 ;        DIV     = (Required) Station number of Division used to
"RTN","VBECRPCE",30,0)
 ;                   locate providers
"RTN","VBECRPCE",31,0)
 ;        DATA    = (Optional) Text string used to perform lookup. If
"RTN","VBECRPCE",32,0)
 ;                   null, will return all providers for division.
"RTN","VBECRPCE",33,0)
 ;
"RTN","VBECRPCE",34,0)
 ; Screen Logic:  Only returns users from file 200 that hold the
"RTN","VBECRPCE",35,0)
 ;                PROVIDER Security Key, do not have a TERMINATION
"RTN","VBECRPCE",36,0)
 ;                DATE prior to the current date, and have access to
"RTN","VBECRPCE",37,0)
 ;                the Division passed in the DIV parameter.
"RTN","VBECRPCE",38,0)
 ;
"RTN","VBECRPCE",39,0)
 ;
"RTN","VBECRPCE",40,0)
 S VBECCNT=0
"RTN","VBECRPCE",41,0)
 S RESULTS=$NA(^TMP("VBECS_PROVIDERS",$J))
"RTN","VBECRPCE",42,0)
 K @RESULTS
"RTN","VBECRPCE",43,0)
 D BEGROOT^VBECRPC("Providers")
"RTN","VBECRPCE",44,0)
 ;
"RTN","VBECRPCE",45,0)
 ; Get INSTITUTION file pointer for DIV parameter.
"RTN","VBECRPCE",46,0)
 K ERR S DIVIEN=$$FIND1^DIC(4,,"QX",.DIV,"D",,"ERR")
"RTN","VBECRPCE",47,0)
 I $D(ERR) D  Q
"RTN","VBECRPCE",48,0)
 . D ADD^VBECRPC("<Record count='0' >")
"RTN","VBECRPCE",49,0)
 . D ERROR^VBECRPC(ERR("DIERR",1,"TEXT",1))
"RTN","VBECRPCE",50,0)
 . D ENDROOT^VBECRPC("Record"),ENDROOT^VBECRPC("Providers")
"RTN","VBECRPCE",51,0)
 . Q
"RTN","VBECRPCE",52,0)
 ; Perform the search
"RTN","VBECRPCE",53,0)
 D PRVSRCH(DATA,DIVIEN)
"RTN","VBECRPCE",54,0)
 ;
"RTN","VBECRPCE",55,0)
 D ENDROOT^VBECRPC("Providers")
"RTN","VBECRPCE",56,0)
 D KILL
"RTN","VBECRPCE",57,0)
 Q
"RTN","VBECRPCE",58,0)
 ;
"RTN","VBECRPCE",59,0)
PRVSRCH(DATA,DIVIEN) ;
"RTN","VBECRPCE",60,0)
 ; Get list of PROVIDER's based on DATA and DIVIEN input
"RTN","VBECRPCE",61,0)
 ;             
"RTN","VBECRPCE",62,0)
 ;
"RTN","VBECRPCE",63,0)
 N DD,ERR
"RTN","VBECRPCE",64,0)
 I '$D(VBECCNT) S VBECCNT=0
"RTN","VBECRPCE",65,0)
 S DD=200
"RTN","VBECRPCE",66,0)
 I $D(DATA) S DATA=$$UP^XLFSTR(DATA)
"RTN","VBECRPCE",67,0)
 S SCREEN="I $$PRVSCR^VBECRPCE(+Y)"
"RTN","VBECRPCE",68,0)
 D LIST^DIC(DD,"","@;.01","P","","",.DATA,"B",.SCREEN,"","","ERR")
"RTN","VBECRPCE",69,0)
 I $D(ERR) D  Q
"RTN","VBECRPCE",70,0)
 . D ADD^VBECRPC("<Record count='0' >")
"RTN","VBECRPCE",71,0)
 . D ERROR^VBECRPC(ERR("DIERR",1,"TEXT",1))
"RTN","VBECRPCE",72,0)
 . D ENDROOT^VBECRPC("Record")
"RTN","VBECRPCE",73,0)
 . Q
"RTN","VBECRPCE",74,0)
 ;
"RTN","VBECRPCE",75,0)
 D ADD^VBECRPC("<Record count='"_$$CHARCHK^XOBVLIB(+$P(^TMP("DILIST",$J,0),U))_"' >")
"RTN","VBECRPCE",76,0)
 S X=0
"RTN","VBECRPCE",77,0)
 F  S X=$O(^TMP("DILIST",$J,X)) Q:X=""  D
"RTN","VBECRPCE",78,0)
 . D BEGROOT^VBECRPC("Provider")
"RTN","VBECRPCE",79,0)
 . D ADD^VBECRPC("<ProviderIEN>"_$$CHARCHK^XOBVLIB(+$P(^TMP("DILIST",$J,X,0),U))_"</ProviderIEN>")
"RTN","VBECRPCE",80,0)
 . D ADD^VBECRPC("<ProviderName>"_$$CHARCHK^XOBVLIB($P(^TMP("DILIST",$J,X,0),U,2))_"</ProviderName>")
"RTN","VBECRPCE",81,0)
 . D ENDROOT^VBECRPC("Provider")
"RTN","VBECRPCE",82,0)
 . Q
"RTN","VBECRPCE",83,0)
 D ENDROOT^VBECRPC("Record")
"RTN","VBECRPCE",84,0)
 Q
"RTN","VBECRPCE",85,0)
 ;
"RTN","VBECRPCE",86,0)
PRVSCR(IEN) ; Screens for valid providers
"RTN","VBECRPCE",87,0)
 Q:(IEN']"")!(IEN<0)!('$D(^XUSEC("PROVIDER",IEN))) 0
"RTN","VBECRPCE",88,0)
 Q:'$D(^VA(200,IEN,2,"B",DIVIEN)) 0
"RTN","VBECRPCE",89,0)
 Q $$ACTIVE^XUSER(IEN)
"RTN","VBECRPCE",90,0)
 ;
"RTN","VBECRPCE",91,0)
KILL ; Kill variables
"RTN","VBECRPCE",92,0)
 K VBECCNT,DIVIEN
"RTN","VBECRPCE",93,0)
 K ^TMP("DILIST",$J)
"RTN","VBECRPCE",94,0)
 Q
"RTN","VBECRPCH")
0^62^B3298642^B3298642
"RTN","VBECRPCH",1,0)
VBECRPCH ; HOIFO/BNT - VBECS HCPCS Codes lookup;19 May 2004
"RTN","VBECRPCH",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPCH",3,0)
 ;
"RTN","VBECRPCH",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCH",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCH",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCH",7,0)
 ; 
"RTN","VBECRPCH",8,0)
 ; Integration Agreements:
"RTN","VBECRPCH",9,0)
 ; Reference to CPT CATEGORY file supported by IA #1587
"RTN","VBECRPCH",10,0)
 ; Reference to CPT file supported by IA #4776
"RTN","VBECRPCH",11,0)
 ; Reference to LIST^DIC supported by IA #2051
"RTN","VBECRPCH",12,0)
 ; Reference to $$FIND1^DIC supported by IA #2051
"RTN","VBECRPCH",13,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCH",14,0)
 ; Reference to $$CPT^ICPTCOD supported by IA #1995
"RTN","VBECRPCH",15,0)
 ;
"RTN","VBECRPCH",16,0)
 QUIT
"RTN","VBECRPCH",17,0)
 ;
"RTN","VBECRPCH",18,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCH",19,0)
 ;       Private Method Supports IA #4610
"RTN","VBECRPCH",20,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCH",21,0)
HCPCS(RESULTS) ; Get active HCPCS codes from the CPT file for Path/Lab CPT Categories
"RTN","VBECRPCH",22,0)
 ;
"RTN","VBECRPCH",23,0)
 N OUT,X
"RTN","VBECRPCH",24,0)
 S VBECCNT=0
"RTN","VBECRPCH",25,0)
 S RESULTS=$NA(^TMP("VBECHCPCS",$J))
"RTN","VBECRPCH",26,0)
 K @RESULTS,^TMP("DILIST",$J)
"RTN","VBECRPCH",27,0)
 D BEGROOT^VBECRPC("Root")
"RTN","VBECRPCH",28,0)
 S VBHPC=194
"RTN","VBECRPCH",29,0)
 ;The following lines were commented out to remove the lookup and switch to a hard coded variable.
"RTN","VBECRPCH",30,0)
 ;S VBHPC=$$FIND1^DIC(81.1,,,"PATHOLOGY AND LABORATORY SERVICES",,,"VBERR")
"RTN","VBECRPCH",31,0)
 ;I 'VBHPC!($D(VBERR)) D  Q
"RTN","VBECRPCH",32,0)
 ;. D ERROR^VBECRPC("Error collecting HCPCS data")
"RTN","VBECRPCH",33,0)
 ;. D ENDROOT^VBECRPC("Root")
"RTN","VBECRPCH",34,0)
 ;. Q
"RTN","VBECRPCH",35,0)
 S VBSCRN="N CPT S CPT=$$CPT^ICPTCOD(Y) I $P(CPT,U,4)="_VBHPC_",$P(CPT,U,7),$P(CPT,U,5)=""H"""
"RTN","VBECRPCH",36,0)
 D LIST^DIC(81,,.01,,,,,"D",VBSCRN,,.OUT,"VBERR")
"RTN","VBECRPCH",37,0)
 I $D(VBERR) D  Q
"RTN","VBECRPCH",38,0)
 . D ERROR^VBECRPC("Error collecting HCPCS data")
"RTN","VBECRPCH",39,0)
 . D ENDROOT^VBECRPC("Root")
"RTN","VBECRPCH",40,0)
 . Q
"RTN","VBECRPCH",41,0)
 ;Replace the next lines with code to call $$CPT^ICPTCOD(x) and get code and name.
"RTN","VBECRPCH",42,0)
 ;Use ^XTMP($J,"DILIST","ID",n,.01)=P2028 to get the code (28 characters)
"RTN","VBECRPCH",43,0)
 S VBB=0 F  S VBB=$O(^TMP("DILIST",$J,"ID",VBB)) Q:'VBB  S VBDATA=^TMP("DILIST",$J,"ID",VBB,.01) D
"RTN","VBECRPCH",44,0)
  . S VBDATA=$$CPT^ICPTCOD(VBDATA) Q:$P(VBDATA,"^")=-1
"RTN","VBECRPCH",45,0)
  . D ADD^VBECRPC("<HCPCS>")
"RTN","VBECRPCH",46,0)
  . D ADD^VBECRPC("<Code>"_$P(VBDATA,"^",2)_"</Code>")
"RTN","VBECRPCH",47,0)
  . D ADD^VBECRPC("<Name>"_$P(VBDATA,"^",3)_"</Name>")
"RTN","VBECRPCH",48,0)
  . D ADD^VBECRPC("</HCPCS>")
"RTN","VBECRPCH",49,0)
 ;S VBB=0 F  S VBB=$O(^TMP("DILIST",$J,"ID",VBB)) Q:'VBB  S VBDATA="" D
"RTN","VBECRPCH",50,0)
 ; . D ADD^VBECRPC("<HCPCS>")
"RTN","VBECRPCH",51,0)
 ; . F VBC=".01^Code","2^Name" D ADD^VBECRPC("<"_$P(VBC,"^",2)_">"_$$STRIPL^VBECRPC($$CHARCHK^XOBVLIB(^TMP("DILIST",$J,"ID",VBB,$P(VBC,"^"))))_"</"_$P(VBC,"^",2)_">")
"RTN","VBECRPCH",52,0)
 ; . D ADD^VBECRPC("</HCPCS>")
"RTN","VBECRPCH",53,0)
 D ENDROOT^VBECRPC("Root")
"RTN","VBECRPCH",54,0)
 K @OUT,VBB,VBC,VBDATA,VBECCNT,VBFLD,VBHPC,VBSCRN
"RTN","VBECRPCH",55,0)
 Q
"RTN","VBECRPCM")
0^63^B41078175^B41078175
"RTN","VBECRPCM",1,0)
VBECRPCM ;HOIFO/BNT - MAINTENANCE USE CASE RPCs ; 10/21/05 10:17am
"RTN","VBECRPCM",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPCM",3,0)
 ;
"RTN","VBECRPCM",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCM",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCM",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCM",7,0)
 ; 
"RTN","VBECRPCM",8,0)
 ; Integration Agreements:
"RTN","VBECRPCM",9,0)
 ; Reference DBIA 2343  - $$ACTIVE^XUSER
"RTN","VBECRPCM",10,0)
 ; Reference DBIA 10060 - NEW PERSON FILE
"RTN","VBECRPCM",11,0)
 ; Reference DBIA 4090  - $$CHARCHK^XOBVLIB
"RTN","VBECRPCM",12,0)
 ; Reference DBIA 10076 - XUSEC GLOBAL READ
"RTN","VBECRPCM",13,0)
 ; Reference DBIA 10090 - INSTITUTION FILE FILEMAN READ
"RTN","VBECRPCM",14,0)
 ; Reference DBIA 2817  - MEDICAL CENTER DIVISION FILE "AD" X-REF
"RTN","VBECRPCM",15,0)
 ; Reference DBIA 1963  - ACCESSION FILE GLOBAL READ
"RTN","VBECRPCM",16,0)
 ; Reference to GETS^DIQ() supported by IA #2056
"RTN","VBECRPCM",17,0)
 ; Reference to LIST^DIC supported by DBIA #2051
"RTN","VBECRPCM",18,0)
 ; Call to ^VA(200 is supported by IA: 10060
"RTN","VBECRPCM",19,0)
 ; Call to GETS^DIQ is supported by IA: 2056
"RTN","VBECRPCM",20,0)
 ; Reference to ^DIC(4 supported by IA #10090
"RTN","VBECRPCM",21,0)
 ; Reference to ^DG(40.8 supported by IA #2817
"RTN","VBECRPCM",22,0)
 ; Reference to ^LRO(68 supported by IA #1963
"RTN","VBECRPCM",23,0)
 ; 
"RTN","VBECRPCM",24,0)
 ;
"RTN","VBECRPCM",25,0)
 QUIT
"RTN","VBECRPCM",26,0)
 ;
"RTN","VBECRPCM",27,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",28,0)
 ;      Private Method supports IA 4608
"RTN","VBECRPCM",29,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",30,0)
BBUSER(RESULTS) ; Look up and return all BB users
"RTN","VBECRPCM",31,0)
 ;
"RTN","VBECRPCM",32,0)
 ;
"RTN","VBECRPCM",33,0)
 ; Input: RESULTS = Passed by reference used to return data to VistALink
"RTN","VBECRPCM",34,0)
 ;                  as XML.
"RTN","VBECRPCM",35,0)
 ;
"RTN","VBECRPCM",36,0)
 ; Screen Logic:  Only returns users from file 200 that hold either the
"RTN","VBECRPCM",37,0)
 ;                LRBLOODBANK or LRBLSUPER Security Key and do not have a
"RTN","VBECRPCM",38,0)
 ;                TERMINATION DATE prior to the current date.
"RTN","VBECRPCM",39,0)
 ;
"RTN","VBECRPCM",40,0)
 ;S VBECCNT=0
"RTN","VBECRPCM",41,0)
 ;S RESULTS=$NA(^TMP("VBECS_USER",$J))
"RTN","VBECRPCM",42,0)
 ;K @RESULTS
"RTN","VBECRPCM",43,0)
 ;D BEGROOT^VBECRPC("BloodBankUsers")
"RTN","VBECRPCM",44,0)
 ;
"RTN","VBECRPCM",45,0)
 ;D USRSRCH
"RTN","VBECRPCM",46,0)
 ;
"RTN","VBECRPCM",47,0)
 ;D ENDROOT^VBECRPC("BloodBankUsers")
"RTN","VBECRPCM",48,0)
 N VBIEN,VBXUSEC,CNT,VBXU,VBU
"RTN","VBECRPCM",49,0)
 S RESULTS=$NA(^TMP("BBUSERS",$J)),VBECCNT=0
"RTN","VBECRPCM",50,0)
 K @RESULTS
"RTN","VBECRPCM",51,0)
 D BEGROOT^VBECRPC("BloodBankUsers")
"RTN","VBECRPCM",52,0)
 D ADD^VBECRPC("<Record count='0' >")
"RTN","VBECRPCM",53,0)
 F VBXUSEC="LRBLOODBANK","LRBLSUPER" S VBXU=0 F  S VBXU=$O(^XUSEC(VBXUSEC,VBXU)) Q:VBXU=""  D
"RTN","VBECRPCM",54,0)
 . Q:'+$$ACTIVE^XUSER(VBXU)
"RTN","VBECRPCM",55,0)
 . S VBU(VBXU)=""
"RTN","VBECRPCM",56,0)
 . Q
"RTN","VBECRPCM",57,0)
 S (CNT,VBIEN)=0
"RTN","VBECRPCM",58,0)
 F  S VBIEN=$O(VBU(VBIEN)) Q:VBIEN=""  D
"RTN","VBECRPCM",59,0)
 . S CNT=CNT+1
"RTN","VBECRPCM",60,0)
 . D BEGROOT^VBECRPC("BloodBankUser")
"RTN","VBECRPCM",61,0)
 . D ADD^VBECRPC("<UserName>"_$$CHARCHK^XOBVLIB($P(^VA(200,VBIEN,0),"^",1))_"</UserName>")
"RTN","VBECRPCM",62,0)
 . D ADD^VBECRPC("<UserDUZ>"_$$CHARCHK^XOBVLIB(VBIEN)_"</UserDUZ>")
"RTN","VBECRPCM",63,0)
 . D ADD^VBECRPC("<UserInitials>"_$$CHARCHK^XOBVLIB($P(^VA(200,VBIEN,0),"^",2))_"</UserInitials>")
"RTN","VBECRPCM",64,0)
 . D BBUSRDIV(VBIEN)
"RTN","VBECRPCM",65,0)
 . D ENDROOT^VBECRPC("BloodBankUser")
"RTN","VBECRPCM",66,0)
 S @RESULTS@(2)="<Record count='"_CNT_"' >"
"RTN","VBECRPCM",67,0)
 D ENDROOT^VBECRPC("Record")
"RTN","VBECRPCM",68,0)
 D ENDROOT^VBECRPC("BloodBankUsers")
"RTN","VBECRPCM",69,0)
 K VBECCNT
"RTN","VBECRPCM",70,0)
 Q
"RTN","VBECRPCM",71,0)
 ;
"RTN","VBECRPCM",72,0)
USRSRCH ; Search for valid Blood Bank users
"RTN","VBECRPCM",73,0)
 ;
"RTN","VBECRPCM",74,0)
 N DD,DIVSUB,VBUSRDUZ,VBUSRNME,VBUSRINI,IENS,BBUSRDIV,DIVERR
"RTN","VBECRPCM",75,0)
 S DD=200,DIVSUB="200.02"
"RTN","VBECRPCM",76,0)
 S SCREEN="I $$USRSCR^VBECRPCM(+Y)"
"RTN","VBECRPCM",77,0)
 D LIST^DIC(DD,"","@;.01;1","P","","","","",.SCREEN,"","","ERR")
"RTN","VBECRPCM",78,0)
 ;
"RTN","VBECRPCM",79,0)
 D ADD^VBECRPC("<Record count='"_$$CHARCHK^XOBVLIB(+$P(^TMP("DILIST",$J,0),U))_"' >")
"RTN","VBECRPCM",80,0)
 S X=0
"RTN","VBECRPCM",81,0)
 F  S X=$O(^TMP("DILIST",$J,X)) Q:X=""  D
"RTN","VBECRPCM",82,0)
 . D BEGROOT^VBECRPC("BloodBankUser")
"RTN","VBECRPCM",83,0)
 . ; User Name
"RTN","VBECRPCM",84,0)
 . S VBUSRNME=$P(^TMP("DILIST",$J,X,0),U,2)
"RTN","VBECRPCM",85,0)
 . ; User DUZ
"RTN","VBECRPCM",86,0)
 . S VBUSRDUZ=+$P(^TMP("DILIST",$J,X,0),U)
"RTN","VBECRPCM",87,0)
 . ; User Initials
"RTN","VBECRPCM",88,0)
 . S VBUSRINI=$P(^TMP("DILIST",$J,X,0),U,3)
"RTN","VBECRPCM",89,0)
 . ;
"RTN","VBECRPCM",90,0)
 . D ADD^VBECRPC("<UserName>"_$$CHARCHK^XOBVLIB(VBUSRNME)_"</UserName>")
"RTN","VBECRPCM",91,0)
 . D ADD^VBECRPC("<UserDUZ>"_$$CHARCHK^XOBVLIB(VBUSRDUZ)_"</UserDUZ>")
"RTN","VBECRPCM",92,0)
 . D ADD^VBECRPC("<UserInitials>"_$$CHARCHK^XOBVLIB(VBUSRINI)_"</UserInitials>")
"RTN","VBECRPCM",93,0)
 . ;
"RTN","VBECRPCM",94,0)
 . ; Get all Divisions for this user.
"RTN","VBECRPCM",95,0)
 . D BBUSRDIV(VBUSRDUZ)
"RTN","VBECRPCM",96,0)
 . ;
"RTN","VBECRPCM",97,0)
 . D ENDROOT^VBECRPC("BloodBankUser")
"RTN","VBECRPCM",98,0)
 . Q
"RTN","VBECRPCM",99,0)
 D ENDROOT^VBECRPC("Record")
"RTN","VBECRPCM",100,0)
 Q
"RTN","VBECRPCM",101,0)
 ;
"RTN","VBECRPCM",102,0)
BBUSRDIV(VBDUZ) ; Gets the divisions for the user and creates the XML
"RTN","VBECRPCM",103,0)
 ;
"RTN","VBECRPCM",104,0)
 N X,DIV,DIVIEN,OUT
"RTN","VBECRPCM",105,0)
 ; Must be active user
"RTN","VBECRPCM",106,0)
 S X=$$DIV4^XUSER(.DIV,VBDUZ)
"RTN","VBECRPCM",107,0)
 Q:'X
"RTN","VBECRPCM",108,0)
 D BEGROOT^VBECRPC("Divisions")
"RTN","VBECRPCM",109,0)
 S DIV=0
"RTN","VBECRPCM",110,0)
 F  S DIV=$O(DIV(DIV)) Q:DIV=""  D
"RTN","VBECRPCM",111,0)
 . D GETDIV(.OUT,DIV)
"RTN","VBECRPCM",112,0)
 . I '+$P(OUT,U) S ERR=$P(OUT,U,2) D ERROR(ERR) Q
"RTN","VBECRPCM",113,0)
 . Q:'$D(OUT)
"RTN","VBECRPCM",114,0)
 . S DIVIEN=DIV_","
"RTN","VBECRPCM",115,0)
 . ; Check if division is active
"RTN","VBECRPCM",116,0)
 . I $G(OUT(4,DIVIEN,101))=1 Q
"RTN","VBECRPCM",117,0)
 . ;
"RTN","VBECRPCM",118,0)
 . ;D BEGROOT^VBECRPC("Division")
"RTN","VBECRPCM",119,0)
 . ;D ADD^VBECRPC("<DivisionName>"_$$CHARCHK^XOBVLIB(OUT(4,DIVIEN,.01))_"</DivisionName>")
"RTN","VBECRPCM",120,0)
 . D ADD^VBECRPC("<Division divisionCode="""_$$CHARCHK^XOBVLIB(OUT(4,DIVIEN,99))_""" />")
"RTN","VBECRPCM",121,0)
 . ;D ENDROOT^VBECRPC("Division")
"RTN","VBECRPCM",122,0)
 . Q
"RTN","VBECRPCM",123,0)
 D ENDROOT^VBECRPC("Divisions")
"RTN","VBECRPCM",124,0)
 Q
"RTN","VBECRPCM",125,0)
 ;
"RTN","VBECRPCM",126,0)
USRSCR(IEN) ; Screens for valid Blood Bank Users
"RTN","VBECRPCM",127,0)
 Q:(IEN']"")!(IEN<0) 0
"RTN","VBECRPCM",128,0)
 Q:('$D(^XUSEC("LRBLOODBANK",IEN)))&('$D(^XUSEC("LRBLSUPER",IEN))) 0
"RTN","VBECRPCM",129,0)
 Q +$$ACTIVE^XUSER(IEN)
"RTN","VBECRPCM",130,0)
 ;
"RTN","VBECRPCM",131,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",132,0)
 ;      Private Method supports IA 4609
"RTN","VBECRPCM",133,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",134,0)
DIV(RESULTS) ; Lookup and return all Divisions associated with a medical center
"RTN","VBECRPCM",135,0)
 ;
"RTN","VBECRPCM",136,0)
 N DD,OUT,ERR,DIV,DIVIEN
"RTN","VBECRPCM",137,0)
 S VBECCNT=0
"RTN","VBECRPCM",138,0)
 S RESULTS=$NA(^TMP("VBECS_DIVISIONS",$J))
"RTN","VBECRPCM",139,0)
 K @RESULTS
"RTN","VBECRPCM",140,0)
 D BEGROOT^VBECRPC("Divisions")
"RTN","VBECRPCM",141,0)
 ;
"RTN","VBECRPCM",142,0)
 S DIV=0
"RTN","VBECRPCM",143,0)
 F  S DIV=$O(^DG(40.8,"AD",DIV)) Q:DIV=""  D  Q:$D(ERR)
"RTN","VBECRPCM",144,0)
 . D GETDIV(.OUT,DIV)
"RTN","VBECRPCM",145,0)
 . I '+$P(OUT,U) S ERR=$P(OUT,U,2) D ERROR(ERR) Q
"RTN","VBECRPCM",146,0)
 . Q:'$D(OUT)
"RTN","VBECRPCM",147,0)
 . S DIVIEN=DIV_","
"RTN","VBECRPCM",148,0)
 . ; See DR - 1670 / VistA MR 006
"RTN","VBECRPCM",149,0)
 . ; Removed check if division is a medical center
"RTN","VBECRPCM",150,0)
 . ; Added screen for station numbers greater than 5
"RTN","VBECRPCM",151,0)
 . I $L(OUT(4,DIVIEN,99))>5 Q
"RTN","VBECRPCM",152,0)
 . I $G(OUT(4,DIVIEN,99))="" Q
"RTN","VBECRPCM",153,0)
 . ; Check if division is active
"RTN","VBECRPCM",154,0)
 . I $G(OUT(4,DIVIEN,101))=1 Q
"RTN","VBECRPCM",155,0)
 . D BEGROOT^VBECRPC("Division")
"RTN","VBECRPCM",156,0)
 . D ADD^VBECRPC("<DivisionCode>"_$$CHARCHK^XOBVLIB(OUT(4,DIVIEN,99))_"</DivisionCode>")
"RTN","VBECRPCM",157,0)
 . D ADD^VBECRPC("<DivisionName>"_$$CHARCHK^XOBVLIB(OUT(4,DIVIEN,.01))_"</DivisionName>")
"RTN","VBECRPCM",158,0)
 . D ENDROOT^VBECRPC("Division")
"RTN","VBECRPCM",159,0)
 D ENDROOT^VBECRPC("Divisions")
"RTN","VBECRPCM",160,0)
 ;
"RTN","VBECRPCM",161,0)
 K VBECCNT
"RTN","VBECRPCM",162,0)
 Q
"RTN","VBECRPCM",163,0)
 ;
"RTN","VBECRPCM",164,0)
GETDIV(OUT,INST) ;
"RTN","VBECRPCM",165,0)
 ; Returns data associated with a Division represented by the
"RTN","VBECRPCM",166,0)
 ; Institution pointer
"RTN","VBECRPCM",167,0)
 ;
"RTN","VBECRPCM",168,0)
 ; Input:    OUT  = Passed by reference used to return array
"RTN","VBECRPCM",169,0)
 ;           INST = Pointer to Institution file
"RTN","VBECRPCM",170,0)
 ;
"RTN","VBECRPCM",171,0)
 ; Returns:  Output from LIST^DIC in the OUT array containing data from
"RTN","VBECRPCM",172,0)
 ;           fields .01, 99 and 101
"RTN","VBECRPCM",173,0)
 ;
"RTN","VBECRPCM",174,0)
 N ERR
"RTN","VBECRPCM",175,0)
 S OUT="1^"
"RTN","VBECRPCM",176,0)
 I INST']"" S OUT="0^Pointer to Institutuion file not found"
"RTN","VBECRPCM",177,0)
 I INST'["," S INST=INST_","
"RTN","VBECRPCM",178,0)
 D GETS^DIQ(4,INST,".01;99;101",,"OUT","ERR")
"RTN","VBECRPCM",179,0)
 I $D(ERR) S OUT="0^"_ERR("DIERR",1,"TEXT",1)
"RTN","VBECRPCM",180,0)
 Q
"RTN","VBECRPCM",181,0)
 ;
"RTN","VBECRPCM",182,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",183,0)
 ;      Private Method Supports IA 4607
"RTN","VBECRPCM",184,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",185,0)
ACNAREA(RESULTS) ; Gets the Blood Bank Accession Areas from the Accession file
"RTN","VBECRPCM",186,0)
 ; Supporst MUC_02 Configure Division
"RTN","VBECRPCM",187,0)
 ;
"RTN","VBECRPCM",188,0)
 N X,VBECARY
"RTN","VBECRPCM",189,0)
 S (VBECCNT,X)=0
"RTN","VBECRPCM",190,0)
 S RESULTS=$NA(^TMP("VBECS_ACCESSION_AREAS",$J))
"RTN","VBECRPCM",191,0)
 K @RESULTS
"RTN","VBECRPCM",192,0)
 D BEGROOT^VBECRPC("AccessionAreas")
"RTN","VBECRPCM",193,0)
 F  S X=$O(^LRO(68,X)) Q:X'?1N.N  D
"RTN","VBECRPCM",194,0)
 . Q:$P(^LRO(68,X,0),"^",2)'="BB" 
"RTN","VBECRPCM",195,0)
 . S VBECARY(X)=$P(^LRO(68,X,0),"^")
"RTN","VBECRPCM",196,0)
 . D BEGROOT^VBECRPC("AccessionArea")
"RTN","VBECRPCM",197,0)
 . D ADD^VBECRPC("<AccessionAreaName>"_$$CHARCHK^XOBVLIB($P(^LRO(68,X,0),"^"))_"</AccessionAreaName>")
"RTN","VBECRPCM",198,0)
 . D ADD^VBECRPC("<AccessionAreaId>"_$$CHARCHK^XOBVLIB(X)_"</AccessionAreaId>")
"RTN","VBECRPCM",199,0)
 . D ENDROOT^VBECRPC("AccessionArea")
"RTN","VBECRPCM",200,0)
 D ENDROOT^VBECRPC("AccessionAreas")
"RTN","VBECRPCM",201,0)
 ;
"RTN","VBECRPCM",202,0)
 K VBECCNT
"RTN","VBECRPCM",203,0)
 Q
"RTN","VBECRPCM",204,0)
 ;       
"RTN","VBECRPCM",205,0)
ERROR(TEXT) ;
"RTN","VBECRPCM",206,0)
 D ERROR^VBECRPC(TEXT)
"RTN","VBECRPCM",207,0)
 Q
"RTN","VBECRPCP")
0^64^B17844001^B17844001
"RTN","VBECRPCP",1,0)
VBECRPCP ;HIOFO/BNT - Patient Medication Profile Lookup ;24 May 2004
"RTN","VBECRPCP",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPCP",3,0)
 ;
"RTN","VBECRPCP",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCP",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCP",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCP",7,0)
 ; 
"RTN","VBECRPCP",8,0)
 ; Integration Agreements:
"RTN","VBECRPCP",9,0)
 ; Reference to OCL^PSOORRL supported by IA #2400
"RTN","VBECRPCP",10,0)
 ; Reference to DEM^VADPT supported by IA #10061
"RTN","VBECRPCP",11,0)
 ; Reference to $$FMTHL7^XLFDT supported by IA #10103
"RTN","VBECRPCP",12,0)
 ; Reference to $$HL7TFM^XLFDT supported by IA #10103
"RTN","VBECRPCP",13,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCP",14,0)
 ; 
"RTN","VBECRPCP",15,0)
 ;
"RTN","VBECRPCP",16,0)
 QUIT
"RTN","VBECRPCP",17,0)
 ;
"RTN","VBECRPCP",18,0)
 ; --------------------------------------------------------
"RTN","VBECRPCP",19,0)
 ;      Private method supports IA #4613
"RTN","VBECRPCP",20,0)
 ; --------------------------------------------------------
"RTN","VBECRPCP",21,0)
RX(RESULTS,DFN,SDATE,EDATE) ; Get Medication Profile from Pharmacy API
"RTN","VBECRPCP",22,0)
 N X,Y,BDT,EDT,RX0,ISDT
"RTN","VBECRPCP",23,0)
 S VBECCNT=0
"RTN","VBECRPCP",24,0)
 S RESULTS=$NA(^TMP("VBECMEDPROFILE",$J))
"RTN","VBECRPCP",25,0)
 ;
"RTN","VBECRPCP",26,0)
 S EDT=$$HL7TFM^XLFDT(EDATE)
"RTN","VBECRPCP",27,0)
 S BDT=$$HL7TFM^XLFDT(SDATE)
"RTN","VBECRPCP",28,0)
 D BEGROOT^VBECRPC("MedicationProfile")
"RTN","VBECRPCP",29,0)
 I DFN]"" D DEM^VADPT
"RTN","VBECRPCP",30,0)
 I $G(VADM(1))="" D  D ENDROOT^VBECRPC("MedicationProfile") Q
"RTN","VBECRPCP",31,0)
 . D ADD^VBECRPC("<PatientName>Invalid Patient ID ("_$$CHARCHK^XOBVLIB(DFN)_")</PatientName><PatientSsn></PatientSsn><PatientDob></PatientDob><BeginningSearchDate></BeginningSearchDate><EndingSearchDate></EndingSearchDate>")
"RTN","VBECRPCP",32,0)
 . D ADD^VBECRPC("<Order><OrderNumber></OrderNumber><DrugName></DrugName><IssueStartDate></IssueStartDate><Status></Status><InpatientOutpatientIndicator></InpatientOutpatientIndicator></Order>")
"RTN","VBECRPCP",33,0)
 I BDT]"" S X=BDT D ^%DT S BDT=$S(Y<0:"",1:Y)
"RTN","VBECRPCP",34,0)
 I BDT']"" S X1=EDT,X2=-180 D C^%DTC S BDT=X
"RTN","VBECRPCP",35,0)
 D OCL^PSOORRL(DFN,BDT,EDT)
"RTN","VBECRPCP",36,0)
 D ADD^VBECRPC("<PatientName>"_$$CHARCHK^XOBVLIB($G(VADM(1)))_"</PatientName>")
"RTN","VBECRPCP",37,0)
 D ADD^VBECRPC("<PatientSsn>"_$$CHARCHK^XOBVLIB($P($G(VADM(2)),U,2))_"</PatientSsn>")
"RTN","VBECRPCP",38,0)
 D ADD^VBECRPC("<PatientDob>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT($P($G(VADM(3)),U,1)))_"</PatientDob>")
"RTN","VBECRPCP",39,0)
 D ADD^VBECRPC("<BeginningSearchDate>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT(BDT))_"</BeginningSearchDate>")
"RTN","VBECRPCP",40,0)
 D ADD^VBECRPC("<EndingSearchDate>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT(EDT))_"</EndingSearchDate>")
"RTN","VBECRPCP",41,0)
 I $D(^TMP("PS",$J)) D
"RTN","VBECRPCP",42,0)
 . S I=0 F  S I=$O(^TMP("PS",$J,I)) Q:I=""  D
"RTN","VBECRPCP",43,0)
 . . S RX0=^TMP("PS",$J,I,0)
"RTN","VBECRPCP",44,0)
 . . Q:$P(RX0,U,15)<BDT
"RTN","VBECRPCP",45,0)
 . . D ADD^VBECRPC("<Order><OrderNumber>"_$$CHARCHK^XOBVLIB($$STRIPL3^VBECRPC($P(RX0,U)))_"</OrderNumber>")
"RTN","VBECRPCP",46,0)
 . . D ADD^VBECRPC("<DrugName>"_$$CHARCHK^XOBVLIB($P(^TMP("PS",$J,I,0),U,2))_"</DrugName>")
"RTN","VBECRPCP",47,0)
 . . D ADD^VBECRPC("<IssueStartDate>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT($P(RX0,U,15)))_"</IssueStartDate>")
"RTN","VBECRPCP",48,0)
 . . D ADD^VBECRPC("<Status>"_$$CHARCHK^XOBVLIB($P(RX0,U,9))_"</Status>")
"RTN","VBECRPCP",49,0)
 . . D ADD^VBECRPC("<InpatientOutpatientIndicator>"_$$CHARCHK^XOBVLIB($P($P(RX0,U,1),";",2))_"</InpatientOutpatientIndicator>")
"RTN","VBECRPCP",50,0)
 . . D ADD^VBECRPC("</Order>")
"RTN","VBECRPCP",51,0)
 I '$D(^TMP("PS",$J)) D
"RTN","VBECRPCP",52,0)
 . D ADD^VBECRPC("<Order><OrderNumber></OrderNumber><DrugName>No medications were found for the date range. You may repeat the query with a different date range.</DrugName>")
"RTN","VBECRPCP",53,0)
 . D ADD^VBECRPC("<IssueStartDate></IssueStartDate><Status></Status><InpatientOutpatientIndicator></InpatientOutpatientIndicator></Order>")
"RTN","VBECRPCP",54,0)
 D ENDROOT^VBECRPC("MedicationProfile")
"RTN","VBECRPCP",55,0)
 ;
"RTN","VBECRPCP",56,0)
 K VBECCNT
"RTN","VBECRPCP",57,0)
 Q
"RTN","VBECRPCW")
0^65^B4711802^B4711802
"RTN","VBECRPCW",1,0)
VBECRPCW ; HOIFO/BNT-VBECS Workload Code Lookup RPC ;18 May 2004
"RTN","VBECRPCW",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECRPCW",3,0)
 ;
"RTN","VBECRPCW",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCW",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCW",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCW",7,0)
 ; 
"RTN","VBECRPCW",8,0)
 ; Integration Agreements:
"RTN","VBECRPCW",9,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCW",10,0)
 ; Reference to ^LAM suppored by IA #4779
"RTN","VBECRPCW",11,0)
 ;
"RTN","VBECRPCW",12,0)
 QUIT
"RTN","VBECRPCW",13,0)
 ;
"RTN","VBECRPCW",14,0)
WKLD(RESULTS) ;
"RTN","VBECRPCW",15,0)
 ; Get Workload data for use case 29
"RTN","VBECRPCW",16,0)
 ;
"RTN","VBECRPCW",17,0)
 S VBECCNT=0
"RTN","VBECRPCW",18,0)
 S RESULTS=$NA(^TMP("VBECWKLD",$J))
"RTN","VBECRPCW",19,0)
 K @RESULTS
"RTN","VBECRPCW",20,0)
 N WKLD0,CNT,X,Y,LRSEC,PROC,COST,CPT
"RTN","VBECRPCW",21,0)
 S (CNT,X)=0
"RTN","VBECRPCW",22,0)
 D BEGROOT^VBECRPC("Workload")
"RTN","VBECRPCW",23,0)
 F  S X=$O(^LAM(X)) Q:'+X  D
"RTN","VBECRPCW",24,0)
 . S WKLD0=^LAM(X,0)
"RTN","VBECRPCW",25,0)
 . S WGHT=$P(WKLD0,"^",3)
"RTN","VBECRPCW",26,0)
 . S:'WGHT WGHT=1
"RTN","VBECRPCW",27,0)
 . ; Round weight multiplier decimal value to nearest integer.
"RTN","VBECRPCW",28,0)
 . I WGHT["." D
"RTN","VBECRPCW",29,0)
 . . S X1=$P(WGHT,"."),X2=$P(WGHT,".",2)
"RTN","VBECRPCW",30,0)
 . . S WGHT=$S(X2>4:X1+1,1:X1)
"RTN","VBECRPCW",31,0)
 . ; Set weight multiplier to 1 if undefined or 0.
"RTN","VBECRPCW",32,0)
 . S WGHT=$S(WGHT']"":1,WGHT=0:1,1:WGHT)
"RTN","VBECRPCW",33,0)
 . S LRSEC=$P(WKLD0,"^",15) Q:LRSEC=""
"RTN","VBECRPCW",34,0)
 . Q:'$D(^LAB(64.21,"B","Blood Bank",LRSEC))
"RTN","VBECRPCW",35,0)
 . D BEGROOT^VBECRPC("Code")
"RTN","VBECRPCW",36,0)
 . D ADD^VBECRPC("<LMIP>"_$$CHARCHK^XOBVLIB($P(WKLD0,"^",2))_"</LMIP>")
"RTN","VBECRPCW",37,0)
 . D ADD^VBECRPC("<Procedure>"_$$CHARCHK^XOBVLIB($P(WKLD0,"^"))_"</Procedure>")
"RTN","VBECRPCW",38,0)
 . D ADD^VBECRPC("<Cost>"_$$CHARCHK^XOBVLIB($P(WKLD0,"^",10))_"</Cost>")
"RTN","VBECRPCW",39,0)
 . D ADD^VBECRPC("<WeightMultiplier>"_$$CHARCHK^XOBVLIB(WGHT)_"</WeightMultiplier>")
"RTN","VBECRPCW",40,0)
 . I $D(^LAM("AD",X,"CPT")) D
"RTN","VBECRPCW",41,0)
 . . S Y=0
"RTN","VBECRPCW",42,0)
 . . F  S Y=$O(^LAM("AD",X,"CPT",Y)) Q:Y']""  D
"RTN","VBECRPCW",43,0)
 . . . I $P(^LAM(X,4,Y,0),"^",4)]"" Q
"RTN","VBECRPCW",44,0)
 . . . D ADD^VBECRPC("<CPTCode>"_$$CHARCHK^XOBVLIB(+^LAM(X,4,Y,0))_"</CPTCode>")
"RTN","VBECRPCW",45,0)
 . D ENDROOT^VBECRPC("Code")
"RTN","VBECRPCW",46,0)
 . Q
"RTN","VBECRPCW",47,0)
 D ENDROOT^VBECRPC("Workload")
"RTN","VBECRPCW",48,0)
 Q
"RTN","VBECRPCW",49,0)
 ;
"RTN","VBECRPCW",50,0)
KILL ;
"RTN","VBECRPCW",51,0)
 K VBECCNT,CNT,X
"RTN","VBECRPCW",52,0)
 Q
"RTN","VBECSRV")
0^66^B26349772^B26349772
"RTN","VBECSRV",1,0)
VBECSRV ;DALLAS CIOFO/RLM - INTEGRITY CHECKER FOR BLOOD BANK ROUTINES ;08/20/2001 4:35 PM
"RTN","VBECSRV",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECSRV",3,0)
 ;
"RTN","VBECSRV",4,0)
START ;
"RTN","VBECSRV",5,0)
 K ^TMP($J,"VBECDATA")
"RTN","VBECSRV",6,0)
 S VBECSITE=$P($$SITE^VASITE,U,2),VBECSIT1=$P($$SITE^VASITE,U,1)
"RTN","VBECSRV",7,0)
 ;Determine station number
"RTN","VBECSRV",8,0)
 S VBECSUB=$TR(XQSUB,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","VBECSRV",9,0)
 ;Translate the subject into upper case and place it into a locally
"RTN","VBECSRV",10,0)
 ;namespaced variable.
"RTN","VBECSRV",11,0)
 S ^TMP("VBECINTEG",$J,1,0)=VBECSUB_" triggered at "_VBECSITE_" by "_XMFROM_" on "_XQDATE
"RTN","VBECSRV",12,0)
 ;The first line of the message tells who requested the action and when.
"RTN","VBECSRV",13,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",14,0)
 I VBECSUB["REPORT" D REPORT G EXIT
"RTN","VBECSRV",15,0)
 I VBECSUB["UPDATE" D UPDATE G EXIT
"RTN","VBECSRV",16,0)
 I VBECSUB["LIST" D LIST G EXIT
"RTN","VBECSRV",17,0)
 I VBECSUB["PATCH" D PATCH G EXIT
"RTN","VBECSRV",18,0)
 K XMTEXT,XMSUB,VBECSITE,VBECNOW,XMY
"RTN","VBECSRV",19,0)
 ;Call a routine based on the "Subject" line of the message.
"RTN","VBECSRV",20,0)
 ;Skip the rest of the routine (down to exit) if the subject
"RTN","VBECSRV",21,0)
 ;is a valid call.
"RTN","VBECSRV",22,0)
 S VBECSITE=$P($$SITE^VASITE,U,2),VBECSIT1=$P($$SITE^VASITE,U,1)
"RTN","VBECSRV",23,0)
 S ^TMP($J,"VBECDATA",1)=""
"RTN","VBECSRV",24,0)
 S ^TMP($J,"VBECDATA",2)="Sorry, but I don't know how to "_XQSUB
"RTN","VBECSRV",25,0)
 S ^TMP($J,"VBECDATA",3)="No action taken"
"RTN","VBECSRV",26,0)
 S ^TMP($J,"VBECDATA",3)="Invalid VBEC Server Request From "_XMFROM_" at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",27,0)
 S XMY("G.bloodbank@FO-HINES.DOMAIN.EXT")=""
"RTN","VBECSRV",28,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",29,0)
 S XMSUB="Invalid BB Server Request From "_XMFROM_" at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",30,0)
 S XMTEXT="^TMP($J,""VBECDATA"",",XMDUZ="Blood Bank Monitor"
"RTN","VBECSRV",31,0)
 D ^XMD
"RTN","VBECSRV",32,0)
 ;Send a message to the designated mail group if the server is triggered with
"RTN","VBECSRV",33,0)
 ;an invalid command.  This lets the users know that they either made
"RTN","VBECSRV",34,0)
 ;a typo, or that someone is attempting to improperly invoke the server.
"RTN","VBECSRV",35,0)
EXIT K %DT,XMTEXT,XMSUB,VBECSITE,VBECNOW,XMY,^TMP($J,"VBECDATA")
"RTN","VBECSRV",36,0)
 Q
"RTN","VBECSRV",37,0)
REPORT ;report on invalid checksums at a site.
"RTN","VBECSRV",38,0)
 S VBECSITE=$P($$SITE^VASITE,U,2),VBECSIT1=$P($$SITE^VASITE,U,1)
"RTN","VBECSRV",39,0)
 S X=$T(+0) X ^%ZOSF("RSUM1") S ^TMP("VBECINTEG",$J,2,0)="VBECSRV at "_VBECSITE_" = "_Y,^TMP("VBECINTEG1",$J,3,0)="**VBECSRV^"_Y_"^^"_VBECSIT1_"^"_DT
"RTN","VBECSRV",40,0)
 S VBA=0,VBI=4 F  S VBA=$O(^VBEC(6002.04,VBA)) Q:'VBA  S VBDATA=$G(^VBEC(6002.04,VBA,0)) D
"RTN","VBECSRV",41,0)
  . S X=$P(VBDATA,"^") X ^%ZOSF("TEST") I '$T S ^TMP("VBECINTEG",$J,VBI,0)=X_" is missing.",VBI=VBI+1,^TMP("VBECINTEG1",$J,VBI,0)="**"_X_"^"_$P(VBDATA,"^",2)_"^0^"_DT,VBI=VBI+1 Q
"RTN","VBECSRV",42,0)
  . X ^%ZOSF("RSUM1") I $P(VBDATA,"^",2)'=Y S ^TMP("VBECINTEG",$J,VBI,0)=X_" should be "_$P(VBDATA,"^",2)_" is "_Y,VBI=VBI+1
"RTN","VBECSRV",43,0)
  . S ^TMP("VBECINTEG1",$J,VBI,0)="**"_X_"^"_$P(VBDATA,"^",2)_"^"_Y_"^"_VBECSIT1_"^"_DT_"^"_(Y'=$P(VBDATA,"^",2)),VBI=VBI+1
"RTN","VBECSRV",44,0)
 K XMY S XMY("G.bloodbank@FO-HINES.DOMAIN.EXT")="" ;,XMY("S.VBECINTEG@FO-HINES.DOMAIN.EXT")=""
"RTN","VBECSRV",45,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",46,0)
 S XMSUB="BB CHECKSUM "_XQSUB_" at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",47,0)
 F I="",1 S XMTEXT="^TMP(""VBECINTEG"_I_""",$J,",XMDUZ="Blood Bank Monitor" D ^XMD
"RTN","VBECSRV",48,0)
 K %DT,VBA,VBECNOW,VBECSITE,VBI,X,XMDUZ,XMSUB,XMTEXT,Y
"RTN","VBECSRV",49,0)
 K ^TMP("VBECINTEG",$J),^TMP("VBECINTEG1",$J)
"RTN","VBECSRV",50,0)
 Q
"RTN","VBECSRV",51,0)
UPDATE ;Update checksums at a site.
"RTN","VBECSRV",52,0)
 S VBI=2
"RTN","VBECSRV",53,0)
 F  X XMREC Q:XMER<0  S VBDEL=$S($P(XMRG,"^")?1"-".E:1,1:0),VBROU=$TR($P(XMRG,"^"),"-",""),VBCHK=$P(XMRG,"^",2) D
"RTN","VBECSRV",54,0)
  . S VBECON=$$FIND1^DIC(6002.04,,"X",VBROU,,.ERROR)
"RTN","VBECSRV",55,0)
  . I VBDEL S DA=VBECON,DIK="^VBEC(6002.04," D ^DIK S ^TMP("VBECINTEG",$J,VBI,0)="Routine "_VBROU_" deleted at "_VBECSITE,VBI=VBI+1 Q
"RTN","VBECSRV",56,0)
  . S VBECIEN=$S(VBECON:VBECON_",",1:"+1,")
"RTN","VBECSRV",57,0)
  . S FDA(1,6002.04,VBECIEN,.01)=VBROU
"RTN","VBECSRV",58,0)
  . S FDA(1,6002.04,VBECIEN,1)=VBCHK
"RTN","VBECSRV",59,0)
  . I 'VBECON D UPDATE^DIE("","FDA(1)",,"VBERR")
"RTN","VBECSRV",60,0)
  . I VBECON D FILE^DIE("E","FDA(1)","VBERR")
"RTN","VBECSRV",61,0)
  . S ^TMP("VBECINTEG",$J,VBI,0)="Routine "_VBROU_$S(VBECON:" updated to ",1:" added with ")_"checksum "_VBCHK,VBI=VBI+1
"RTN","VBECSRV",62,0)
 K XMY S XMY("G.bloodbank@FO-HINES.DOMAIN.EXT")=""
"RTN","VBECSRV",63,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",64,0)
 S XMSUB="BB Checksum update at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",65,0)
 S XMTEXT="^TMP(""VBECINTEG"",$J,",XMDUZ="Blood Bank Monitor" D ^XMD
"RTN","VBECSRV",66,0)
 K %DT,VBA,VBECNOW,VBECSITE,VBI,X,XMDUZ,XMSUB,XMTEXT,Y
"RTN","VBECSRV",67,0)
 K ^TMP("VBECINTEG",$J),^TMP("VBECINTEG1",$J)
"RTN","VBECSRV",68,0)
 Q
"RTN","VBECSRV",69,0)
LIST ;
"RTN","VBECSRV",70,0)
 S VBA=0,VBI=2  F  S VBA=$O(^VBEC(6002.04,VBA)) Q:'VBA  D
"RTN","VBECSRV",71,0)
  . S VBDATA=$G(^VBEC(6002.04,VBA,0)),VBROU=$P(VBDATA,"^"),VBCHK=$P(VBDATA,"^",2)
"RTN","VBECSRV",72,0)
  . I VBDATA="" S ^TMP("VBECINTEG",$J,VBI,0)="Record "_VBA_" damaged." Q
"RTN","VBECSRV",73,0)
  . S ^TMP("VBECINTEG",$J,VBI,0)=VBECSIT1_$E("          ",1,(10-$L(VBECSIT1)))_VBROU_$E("          ",1,(10-$L(VBROU)))_VBCHK,VBI=VBI+1
"RTN","VBECSRV",74,0)
 K XMY S XMY("G.bloodbank@FO-HINES.DOMAIN.EXT")=""
"RTN","VBECSRV",75,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",76,0)
 S XMSUB="BB CHECKSUM "_XQSUB_" at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",77,0)
 S XMTEXT="^TMP(""VBECINTEG"",$J,",XMDUZ="Blood Bank Monitor" D ^XMD
"RTN","VBECSRV",78,0)
 K %DT,VBA,VBECNOW,VBECSITE,VBI,X,XMDUZ,XMSUB,XMTEXT,Y
"RTN","VBECSRV",79,0)
 K ^TMP("VBECINTEG",$J),^TMP("VBECINTEG1",$J)
"RTN","VBECSRV",80,0)
 Q
"RTN","VBECSRV",81,0)
PATCH ;Determine Vista patch level. Expand later to include VBECS
"RTN","VBECSRV",82,0)
 f VBECI=1:1:9999 s VBECA=$$PATCH^XPDUTL("VBEC*1.0*"_VBECI) i VBECA s ^TMP("VBEC",$J,(VBECI+5),0)="Patch VBEC*1.0*"_VBECI_" has been installed."
"RTN","VBECSRV",83,0)
 K XMY S XMY("G.bloodbank@FO-HINES.DOMAIN.EXT")=""
"RTN","VBECSRV",84,0)
 S %DT="T",X="NOW" D ^%DT,DD^%DT S VBECNOW=Y
"RTN","VBECSRV",85,0)
 S XMSUB="VBEC Patch List at "_VBECSITE_" run on "_VBECNOW
"RTN","VBECSRV",86,0)
 S XMTEXT="^TMP(""VBEC"",$J,",XMDUZ="Blood Bank Monitor" D ^XMD
"RTN","VBECSRV",87,0)
 K %DT,VBA,VBECNOW,VBECSITE,VBI,X,XMDUZ,XMSUB,XMTEXT,Y
"RTN","VBECSRV",88,0)
 K ^TMP("VBECINTEG",$J),^TMP("VBECINTEG1",$J)
"RTN","VBECSRV",89,0)
ZEOR ;VBECSRV
"RTN","VBECVLC")
0^68^B23203538^B23203538
"RTN","VBECVLC",1,0)
VBECVLC ;HOIFO/BNT-VBECS VistALink Client ;07/27/2002
"RTN","VBECVLC",2,0)
 ;;2.0;VBEC;;Jun 05, 2015;Build 4
"RTN","VBECVLC",3,0)
 ;
"RTN","VBECVLC",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECVLC",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECVLC",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECVLC",7,0)
 ; 
"RTN","VBECVLC",8,0)
 ; Integration Agreements:
"RTN","VBECVLC",9,0)
 ;  Call to XOBVLIB Supported by IA #4090
"RTN","VBECVLC",10,0)
 ;  Reference to %ZOSV supported by IA #10097
"RTN","VBECVLC",11,0)
 ;  Reference to %ZTER supported by IA #1621
"RTN","VBECVLC",12,0)
 ;
"RTN","VBECVLC",13,0)
 QUIT
"RTN","VBECVLC",14,0)
 ;
"RTN","VBECVLC",15,0)
EXECUTE(VBECPRMS) ; -- Main entry point
"RTN","VBECVLC",16,0)
 NEW X,VBECI,VBECOK,VBECRES,VBECREF,VBECROOT,VBECREQ,VBECREAD,VBECTO,VBECFRST,VBECSTOP,VBECRL
"RTN","VBECVLC",17,0)
 NEW $ETRAP,$ESTACK S $ETRAP="D SYSERR^VBECVLC"
"RTN","VBECVLC",18,0)
 ;
"RTN","VBECVLC",19,0)
 ; -- if no 'results' node set, set it and kill it!
"RTN","VBECVLC",20,0)
 IF $G(VBECPRMS("RESULTS"))="" SET VBECPRMS("RESULTS")=$NA(^TMP("VBECVLC",$J,"XML"))
"RTN","VBECVLC",21,0)
 SET VBECROOT=VBECPRMS("RESULTS")
"RTN","VBECVLC",22,0)
 KILL @VBECROOT
"RTN","VBECVLC",23,0)
 ;
"RTN","VBECVLC",24,0)
 SET VBECREQ=VBECPRMS("REQUEST")
"RTN","VBECVLC",25,0)
 ;
"RTN","VBECVLC",26,0)
 ; -- intialize result flag to 'failed' (0)
"RTN","VBECVLC",27,0)
 SET VBECRES=0
"RTN","VBECVLC",28,0)
 ;
"RTN","VBECVLC",29,0)
 ; -- application can pass in address/port
"RTN","VBECVLC",30,0)
 IF '$D(VBECPRMS("ADDRESS")) D CLIERR(1,.VBECROOT) GOTO MAINQ
"RTN","VBECVLC",31,0)
 IF '$D(VBECPRMS("PORT")) D CLIERR(2,.VBECROOT) GOTO MAINQ
"RTN","VBECVLC",32,0)
 ;
"RTN","VBECVLC",33,0)
 ;  Retry open only once to prevent delay in calling application
"RTN","VBECVLC",34,0)
 SET VBECPRMS("RETRIES")=1
"RTN","VBECVLC",35,0)
 IF '$$OPEN^VBECRL(.VBECPRMS) D CLIERR(3,.VBECROOT) GOTO MAINQ
"RTN","VBECVLC",36,0)
 ;
"RTN","VBECVLC",37,0)
 ; -- write request
"RTN","VBECVLC",38,0)
 DO PRE^VBECRL
"RTN","VBECVLC",39,0)
 SET VBECI=0 FOR  SET VBECI=$O(@VBECREQ@(VBECI)) Q:'VBECI  DO WRITE^VBECRL(@VBECREQ@(VBECI))
"RTN","VBECVLC",40,0)
 ;
"RTN","VBECVLC",41,0)
 ; -- send eot and flush buffer
"RTN","VBECVLC",42,0)
 DO POST^VBECRL
"RTN","VBECVLC",43,0)
 ;
"RTN","VBECVLC",44,0)
 ; -- set inputs and read results
"RTN","VBECVLC",45,0)
 SET VBECREAD=255,VBECTO=1,VBECFRST=0,VBECSTOP=0
"RTN","VBECVLC",46,0)
 SET VBECOK=$$READ^VBECRL(VBECROOT,.VBECREAD,.VBECTO,.VBECFRST,.VBECSTOP)
"RTN","VBECVLC",47,0)
 ;
"RTN","VBECVLC",48,0)
 ; -- close port
"RTN","VBECVLC",49,0)
 DO CLOSE^VBECRL(.VBECPRMS)
"RTN","VBECVLC",50,0)
 ;
"RTN","VBECVLC",51,0)
 ; -- set result flag to 'successful' (1)
"RTN","VBECVLC",52,0)
 SET VBECRES=1
"RTN","VBECVLC",53,0)
 ;
"RTN","VBECVLC",54,0)
MAINQ ;
"RTN","VBECVLC",55,0)
 QUIT VBECRES
"RTN","VBECVLC",56,0)
 ;
"RTN","VBECVLC",57,0)
 ; -----------------------------------------------------
"RTN","VBECVLC",58,0)
 ;         Client Error Handler
"RTN","VBECVLC",59,0)
 ; -----------------------------------------------------
"RTN","VBECVLC",60,0)
CLIERR(VBECCODE,VBECROOT) ; -- send client error message
"RTN","VBECVLC",61,0)
 NEW VBECDAT
"RTN","VBECVLC",62,0)
 SET VBECDAT("MESSAGE TYPE")="gov.va.med.foundations.rpc.fault"
"RTN","VBECVLC",63,0)
 SET VBECDAT("ERRORS",1,"CODE")=1
"RTN","VBECVLC",64,0)
 SET VBECDAT("ERRORS",1,"ERROR TYPE")="client"
"RTN","VBECVLC",65,0)
 SET VBECDAT("ERRORS",1,"CDATA")=1
"RTN","VBECVLC",66,0)
 SET VBECDAT("ERRORS",1,"MESSAGE")=$P($TEXT(CLIERRS+VBECCODE),";;",2)
"RTN","VBECVLC",67,0)
 DO BUILD(.VBECROOT,.VBECDAT)
"RTN","VBECVLC",68,0)
 QUIT
"RTN","VBECVLC",69,0)
 ;
"RTN","VBECVLC",70,0)
 ; ------------------------------------------------------
"RTN","VBECVLC",71,0)
 ;         System Error Handler
"RTN","VBECVLC",72,0)
 ; ------------------------------------------------------
"RTN","VBECVLC",73,0)
SYSERR ; -- send system error message
"RTN","VBECVLC",74,0)
 NEW VBECDAT,VBECMSG,$ETRAP
"RTN","VBECVLC",75,0)
 SET $ETRAP="D ^%ZTER HALT" ; -- If we get an error in the error handler just Halt
"RTN","VBECVLC",76,0)
 SET VBECMSG=$$EC^%ZOSV      ; -- Get the error code
"RTN","VBECVLC",77,0)
 DO ^%ZTER                  ; -- Save off the error
"RTN","VBECVLC",78,0)
 ;
"RTN","VBECVLC",79,0)
 SET VBECDAT("MESSAGE TYPE")="gov.va.med.foundations.rpc.fault"
"RTN","VBECVLC",80,0)
 SET VBECDAT("ERRORS",1,"CODE")=1
"RTN","VBECVLC",81,0)
 SET VBECDAT("ERRORS",1,"ERROR TYPE")="system"
"RTN","VBECVLC",82,0)
 SET VBECDAT("ERRORS",1,"CDATA")=1
"RTN","VBECVLC",83,0)
 SET VBECDAT("ERRORS",1,"MESSAGE")=$P($TEXT(SYSERRS+1),";;",2)_VBECMSG
"RTN","VBECVLC",84,0)
 DO BUILD(.VBECROOT,.VBECDAT)
"RTN","VBECVLC",85,0)
 QUIT
"RTN","VBECVLC",86,0)
 ;
"RTN","VBECVLC",87,0)
BUILD(VBECY,VBECDAT) ;  -- store built xml in passed store reference (VBECY)
"RTN","VBECVLC",88,0)
 ; -- input format
"RTN","VBECVLC",89,0)
 ; VBECDAT("MESSAGE TYPE") = type of message (ex. gov.va.med.foundations.rpc.fault) 
"RTN","VBECVLC",90,0)
 ; VBECDAT("ERRORS",<integer>,"CODE") = error code
"RTN","VBECVLC",91,0)
 ; VBECDAT("ERRORS",<integer>,"ERROR TYPE") = type of error (system/application/security)
"RTN","VBECVLC",92,0)
 ; VBECDAT("ERRORS",<integer>,"MESSAGE",<integer>) = error message
"RTN","VBECVLC",93,0)
 ; 
"RTN","VBECVLC",94,0)
 NEW VBECCODE,VBECI,VBECERR,VBECLINE,VBECETYP
"RTN","VBECVLC",95,0)
 SET VBECLINE=0
"RTN","VBECVLC",96,0)
 ;
"RTN","VBECVLC",97,0)
 DO ADD($$XMLHDR^XOBVLIB())
"RTN","VBECVLC",98,0)
 DO ADD("<VistaLink messageType="""_$G(VBECDAT("MESSAGE TYPE"))_""" version=""1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""rpcFault.xsd"" >")
"RTN","VBECVLC",99,0)
 DO ADD("xmlns=""http://domain.ext/Foundations"">")
"RTN","VBECVLC",100,0)
 DO ADD("<Fault>")
"RTN","VBECVLC",101,0)
 DO ADD("<FaultString>Internal Application Error</FaultString>")
"RTN","VBECVLC",102,0)
 DO ADD("<FaultActor>VBECS VistaLink Client</FaultActor>")
"RTN","VBECVLC",103,0)
 SET VBECERR=0
"RTN","VBECVLC",104,0)
 FOR  SET VBECERR=$O(VBECDAT("ERRORS",VBECERR)) Q:'VBECERR  DO
"RTN","VBECVLC",105,0)
 . SET VBECCODE=$G(VBECDAT("ERRORS",VBECERR,"CODE"),0)
"RTN","VBECVLC",106,0)
 . SET VBECETYP=$G(VBECDAT("ERRORS",VBECERR,"ERROR TYPE"),0)
"RTN","VBECVLC",107,0)
 . DO ADD("<Detail>")
"RTN","VBECVLC",108,0)
 . DO ADD("<Error code="""_VBECCODE_""" type="""_VBECETYP_""" >")
"RTN","VBECVLC",109,0)
 . DO ADD("<Message>"_$$CHARCHK^XOBVLIB(VBECDAT("ERRORS",VBECERR,"MESSAGE"))_"</Message>")
"RTN","VBECVLC",110,0)
 . DO ADD("</Error>")
"RTN","VBECVLC",111,0)
 . DO ADD("</Detail>")
"RTN","VBECVLC",112,0)
 DO ADD("</Fault>")
"RTN","VBECVLC",113,0)
 DO ADD("</VistaLink>")
"RTN","VBECVLC",114,0)
 ;
"RTN","VBECVLC",115,0)
 QUIT
"RTN","VBECVLC",116,0)
 ;
"RTN","VBECVLC",117,0)
ADD(TXT) ; -- add line
"RTN","VBECVLC",118,0)
 SET VBECLINE=VBECLINE+1
"RTN","VBECVLC",119,0)
 SET @VBECY@(VBECLINE)=TXT
"RTN","VBECVLC",120,0)
 QUIT
"RTN","VBECVLC",121,0)
 ;
"RTN","VBECVLC",122,0)
CLIERRS ; -- VistALink client errors
"RTN","VBECVLC",123,0)
 ;;'Address' parameter not specified.
"RTN","VBECVLC",124,0)
 ;;'Port' parameter not specified.
"RTN","VBECVLC",125,0)
 ;;Unable to retrieve patient information at this time, please contact the Blood Bank. [restart VBECS VistALink listener]
"RTN","VBECVLC",126,0)
 ;
"RTN","VBECVLC",127,0)
SYSERRS ; -- application errors
"RTN","VBECVLC",128,0)
 ;;A system error occurred in M: "
"VER")
8.0^22.0
**END**
**END**


