Released XOBW*1*4 SEQ #4
Extracted from mail message
**KIDS**:XOBW*1.0*4^

**INSTALL NAME**
XOBW*1.0*4
"BLD",1567,0)
XOBW*1.0*4^WEB SERVICES CLIENT^0^3160914^y
"BLD",1567,1,0)
^^1^1^3160520^
"BLD",1567,1,1,0)
Patch XOBW*1*4. Please refer to NPM for more detail.
"BLD",1567,4,0)
^9.64PA^^
"BLD",1567,6.3)
9
"BLD",1567,"INI")

"BLD",1567,"INID")
^n^
"BLD",1567,"INIT")
POST^XOBWP004
"BLD",1567,"KRN",0)
^9.67PA^9002226^22
"BLD",1567,"KRN",.4,0)
.4
"BLD",1567,"KRN",.401,0)
.401
"BLD",1567,"KRN",.402,0)
.402
"BLD",1567,"KRN",.403,0)
.403
"BLD",1567,"KRN",.5,0)
.5
"BLD",1567,"KRN",.84,0)
.84
"BLD",1567,"KRN",3.6,0)
3.6
"BLD",1567,"KRN",3.8,0)
3.8
"BLD",1567,"KRN",9.2,0)
9.2
"BLD",1567,"KRN",9.8,0)
9.8
"BLD",1567,"KRN",9.8,"NM",0)
^9.68A^5^4
"BLD",1567,"KRN",9.8,"NM",2,0)
XOBWP004^^0^B25831266
"BLD",1567,"KRN",9.8,"NM",3,0)
XOBWENV^^0^B7751417
"BLD",1567,"KRN",9.8,"NM",4,0)
XOBWPA04^^0^B90514000
"BLD",1567,"KRN",9.8,"NM",5,0)
XOBWPB04^^0^B190407811
"BLD",1567,"KRN",9.8,"NM","B","XOBWENV",3)

"BLD",1567,"KRN",9.8,"NM","B","XOBWP004",2)

"BLD",1567,"KRN",9.8,"NM","B","XOBWPA04",4)

"BLD",1567,"KRN",9.8,"NM","B","XOBWPB04",5)

"BLD",1567,"KRN",19,0)
19
"BLD",1567,"KRN",19.1,0)
19.1
"BLD",1567,"KRN",101,0)
101
"BLD",1567,"KRN",409.61,0)
409.61
"BLD",1567,"KRN",771,0)
771
"BLD",1567,"KRN",779.2,0)
779.2
"BLD",1567,"KRN",870,0)
870
"BLD",1567,"KRN",8989.51,0)
8989.51
"BLD",1567,"KRN",8989.52,0)
8989.52
"BLD",1567,"KRN",8993,0)
8993
"BLD",1567,"KRN",8994,0)
8994
"BLD",1567,"KRN",9002226,0)
9002226
"BLD",1567,"KRN","B",.4,.4)

"BLD",1567,"KRN","B",.401,.401)

"BLD",1567,"KRN","B",.402,.402)

"BLD",1567,"KRN","B",.403,.403)

"BLD",1567,"KRN","B",.5,.5)

"BLD",1567,"KRN","B",.84,.84)

"BLD",1567,"KRN","B",3.6,3.6)

"BLD",1567,"KRN","B",3.8,3.8)

"BLD",1567,"KRN","B",9.2,9.2)

"BLD",1567,"KRN","B",9.8,9.8)

"BLD",1567,"KRN","B",19,19)

"BLD",1567,"KRN","B",19.1,19.1)

"BLD",1567,"KRN","B",101,101)

"BLD",1567,"KRN","B",409.61,409.61)

"BLD",1567,"KRN","B",771,771)

"BLD",1567,"KRN","B",779.2,779.2)

"BLD",1567,"KRN","B",870,870)

"BLD",1567,"KRN","B",8989.51,8989.51)

"BLD",1567,"KRN","B",8989.52,8989.52)

"BLD",1567,"KRN","B",8993,8993)

"BLD",1567,"KRN","B",8994,8994)

"BLD",1567,"KRN","B",9002226,9002226)

"BLD",1567,"PRE")
XOBWP004
"BLD",1567,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1567,"QUES",0)
^9.62^^0
"BLD",1567,"REQB",0)
^9.611^1^1
"BLD",1567,"REQB",1,0)
XOBW 1.0^1
"BLD",1567,"REQB","B","XOBW*1.0*0",1)

"INIT")
POST^XOBWP004
"MBREQ")
0
"PKG",123,-1)
1^1
"PKG",123,0)
WEB SERVICES CLIENT^XOBW^Allows VistA applications access to remote web services
"PKG",123,22,0)
^9.49I^1^1
"PKG",123,22,1,0)
1.0^3100913^3110307^82
"PKG",123,22,1,"PAH",1,0)
4^3160914^82
"PKG",123,22,1,"PAH",1,1,0)
^^1^1^3160914
"PKG",123,22,1,"PAH",1,1,1,0)
Patch XOBW*1*4. Please refer to NPM for more detail.
"PRE")
XOBWP004
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","XOBWENV")
0^3^B7751417^B7338181
"RTN","XOBWENV",1,0)
XOBWENV ;ALB/MJK - HWSC :: Environmental Check ; 06/10/2016
"RTN","XOBWENV",2,0)
 ;;1.0;HwscWebServiceClient;**4**;September 13, 2010;Build 9
"RTN","XOBWENV",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","XOBWENV",4,0)
 ;
"RTN","XOBWENV",5,0)
 ; ***** IMPORTANT NOTE *******************************************
"RTN","XOBWENV",6,0)
 ; This routine requires access to the manager (%SYS) namespace and
"RTN","XOBWENV",7,0)
 ; can only be run by a user with permissions to that namespace.
"RTN","XOBWENV",8,0)
 ; ****************************************************************
"RTN","XOBWENV",9,0)
 ;
"RTN","XOBWENV",10,0)
 Q
"RTN","XOBWENV",11,0)
EN ;- entry point
"RTN","XOBWENV",12,0)
 ; -- must be a supported M implementation
"RTN","XOBWENV",13,0)
 DO VALIDM IF $GET(XPDABORT) GOTO ENQ
"RTN","XOBWENV",14,0)
 ; -- passed load check
"RTN","XOBWENV",15,0)
 IF '$GET(XPDENV),'$GET(XPDABORT) DO
"RTN","XOBWENV",16,0)
 . WRITE !!?1,">>> Environment check completed for KIDS Load a Distribution option.",!
"RTN","XOBWENV",17,0)
 ; -- passed install check
"RTN","XOBWENV",18,0)
 IF $GET(XPDENV)=1,'$GET(XPDABORT) DO
"RTN","XOBWENV",19,0)
 . WRITE !!?1,">>> Environment check completed for KIDS Install Package option.",!
"RTN","XOBWENV",20,0)
ENQ QUIT
"RTN","XOBWENV",21,0)
 ;
"RTN","XOBWENV",22,0)
VALIDM ; -- check if HWSC supports M implementation and set KIDS flag if not
"RTN","XOBWENV",23,0)
 IF $$PROD^XUPROD(0),'$$SSLOK() DO
"RTN","XOBWENV",24,0)
 . WRITE !,"Note: Your current production M environment does not support SSL/TLS"
"RTN","XOBWENV",25,0)
 . WRITE !,"      connectivity! SSL/TLS support is provided in Cache v5.2.3 and greater."
"RTN","XOBWENV",26,0)
 . WRITE !,"      Also, SSL/TLS is not currently supported on VMS."
"RTN","XOBWENV",27,0)
 . NEW DIR S DIR(0)="E" D ^DIR
"RTN","XOBWENV",28,0)
 ;
"RTN","XOBWENV",29,0)
 IF '$$OSOK() DO
"RTN","XOBWENV",30,0)
 . SET XPDABORT=1
"RTN","XOBWENV",31,0)
 . WRITE !?5,"This software can only be installed in a Cache v5.2.3 or greater environment!",!
"RTN","XOBWENV",32,0)
 QUIT
"RTN","XOBWENV",33,0)
 ;
"RTN","XOBWENV",34,0)
OSOK() ; -- check environment for operating system, 5.2.3 or greater
"RTN","XOBWENV",35,0)
 IF $PIECE($GET(^%ZOSF("OS")),"^")'["OpenM" QUIT 0
"RTN","XOBWENV",36,0)
 NEW XOBVER,MAJOR,MINOR,SUBMINOR
"RTN","XOBWENV",37,0)
 SET XOBVER=$$VERSION^%ZOSV()
"RTN","XOBWENV",38,0)
 ; -- checks major version # against 5
"RTN","XOBWENV",39,0)
 SET MAJOR=+$P(XOBVER,".")
"RTN","XOBWENV",40,0)
 IF MAJOR<5 QUIT 0
"RTN","XOBWENV",41,0)
 IF MAJOR>5 QUIT 1
"RTN","XOBWENV",42,0)
 ; -- checks minor version # against 2
"RTN","XOBWENV",43,0)
 SET MINOR=+$P(XOBVER,".",2)
"RTN","XOBWENV",44,0)
 IF MINOR<2 QUIT 0
"RTN","XOBWENV",45,0)
 IF MINOR>2 QUIT 1
"RTN","XOBWENV",46,0)
 ; -- checks sub-minor version # against 3
"RTN","XOBWENV",47,0)
 SET SUBMINOR=+$P(XOBVER,".",3)
"RTN","XOBWENV",48,0)
 IF SUBMINOR<3 QUIT 0
"RTN","XOBWENV",49,0)
 IF SUBMINOR>2 QUIT 1
"RTN","XOBWENV",50,0)
 QUIT 0
"RTN","XOBWENV",51,0)
 ;
"RTN","XOBWENV",52,0)
SSLOK() ; -- check environment if SSL/TLS is supported (Cache 5.2.3 or greater, and *not* VMS)
"RTN","XOBWENV",53,0)
 ; also called in [XOBW WEB SERVER SETUP] edit template
"RTN","XOBWENV",54,0)
 ;IF $$SYSOS()="VMS" QUIT 0 ; prevent SSL use on VMS ; - XOBW*1*4
"RTN","XOBWENV",55,0)
 QUIT $$OSOK() ; 5.2.3 or greater
"RTN","XOBWENV",56,0)
 ;
"RTN","XOBWENV",57,0)
KIDSCHK(XOBDIR) ; -- check input from installer
"RTN","XOBWENV",58,0)
 ; input: XOBDIR := directory where wsdl file is located (
"RTN","XOBWENV",59,0)
 ;  Note: If applicable, XOBDIR should contain the os-specific final delimiter, like '/home/cache/'
"RTN","XOBWENV",60,0)
 NEW XOBPATH
"RTN","XOBWENV",61,0)
 IF '##class(%File).DirectoryExists(XOBDIR) DO  QUIT 0
"RTN","XOBWENV",62,0)
 . WRITE !," o  Directory does not exist: "_XOBDIR
"RTN","XOBWENV",63,0)
 SET XOBPATH=XOBDIR_$$SUPPORT()
"RTN","XOBWENV",64,0)
 IF '##class(%File).Exists(XOBPATH) DO  QUIT 0
"RTN","XOBWENV",65,0)
 . WRITE !," o  File to be imported does not exist: "_XOBPATH
"RTN","XOBWENV",66,0)
 QUIT 1
"RTN","XOBWENV",67,0)
 ;
"RTN","XOBWENV",68,0)
SUPPORT() ; -- returns name of xml file containing support classes (wsdl handler, vista info header, etc.)
"RTN","XOBWENV",69,0)
 QUIT "xobw4.xml"
"RTN","XOBWENV",70,0)
 ;
"RTN","XOBWENV",71,0)
VERSION() ; -- returns the version number for this build
"RTN","XOBWENV",72,0)
 QUIT +$PIECE($PIECE($TEXT(XOBWENV+1),";",7),"Build ",2)
"RTN","XOBWENV",73,0)
 ;
"RTN","XOBWENV",74,0)
SYSOS() ; -- get system operating system
"RTN","XOBWENV",75,0)
 ; returns VMS, UNIX, NT or UNK
"RTN","XOBWENV",76,0)
 NEW XOBOS SET XOBOS=^%ZOSF("OS")
"RTN","XOBWENV",77,0)
 QUIT $SELECT(XOBOS["OpenM":$$OS^%ZOSV(),XOBOS["DSM":"VMS",1:"UNK")
"RTN","XOBWP004")
0^2^B25831266^n/a
"RTN","XOBWP004",1,0)
XOBWP004 ;OAK/BDT - HWSC ::XOBW*1*4 ; 06/28/2016
"RTN","XOBWP004",2,0)
 ;;1.0;HwscWebServiceClient;**4**;September 13, 2010;Build 9
"RTN","XOBWP004",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","XOBWP004",4,0)
 ;
"RTN","XOBWP004",5,0)
 ; ***** IMPORTANT NOTE *******************************************
"RTN","XOBWP004",6,0)
 ; This routine requires access to the manager (%SYS) namespace and
"RTN","XOBWP004",7,0)
 ; can only be run by a user with permissions to that namespace.
"RTN","XOBWP004",8,0)
 ; ****************************************************************
"RTN","XOBWP004",9,0)
 ;
"RTN","XOBWP004",10,0)
 N XUSL,X
"RTN","XOBWP004",11,0)
 N DIF,XCNP K ^TMP($J,369)
"RTN","XOBWP004",12,0)
 S X="XOBWLIB"
"RTN","XOBWP004",13,0)
 S DIF="^TMP($J,369,",XCNP=0 X ^%ZOSF("LOAD")
"RTN","XOBWP004",14,0)
 I $G(^TMP($J,369,2,0))'[";Build 31" D BMES^XPDUTL("Your system is missing latest build 31st of the XOBW*1.0*0 package") S XPDABORT=1
"RTN","XOBWP004",15,0)
 Q
"RTN","XOBWP004",16,0)
 ;
"RTN","XOBWP004",17,0)
POST ;  -- main entry point for post-init
"RTN","XOBWP004",18,0)
 D POST^XOBWPA04
"RTN","XOBWP004",19,0)
 D POST^XOBWPB04
"RTN","XOBWP004",20,0)
 D CHECK
"RTN","XOBWP004",21,0)
 Q
"RTN","XOBWP004",22,0)
 ;
"RTN","XOBWP004",23,0)
CHECK ; check privillege
"RTN","XOBWP004",24,0)
 N XOBWNOTE
"RTN","XOBWP004",25,0)
 I ($ROLES["%All")!($ROLES["%Manager") D SSLCONF Q
"RTN","XOBWP004",26,0)
 DO INCOMP
"RTN","XOBWP004",27,0)
 D MES^XPDUTL(" ** Warning **")
"RTN","XOBWP004",28,0)
 S XOBWNOTE="The SSL/TLS Configuration could not be installed at this time.  "
"RTN","XOBWP004",29,0)
 S XOBWNOTE=XOBWNOTE_"You don't have the required privileged Role.  "
"RTN","XOBWP004",30,0)
 S XOBWNOTE=XOBWNOTE_"A System Administrator must complete this step.  "
"RTN","XOBWP004",31,0)
 S XOBWNOTE=XOBWNOTE_"Please follow the Post-Installation Instructions."
"RTN","XOBWP004",32,0)
 D MES^XPDUTL(XOBWNOTE)
"RTN","XOBWP004",33,0)
 Q
"RTN","XOBWP004",34,0)
 ;
"RTN","XOBWP004",35,0)
INCOMP ; generate incomplete-installation message
"RTN","XOBWP004",36,0)
 S ^TMP("PSC DATA",$J,1)="Patch XOBW*1.0*4 has been installed but an extra step needs to be completed."
"RTN","XOBWP004",37,0)
 S ^TMP("PSC DATA",$J,2)=""
"RTN","XOBWP004",38,0)
 S ^TMP("PSC DATA",$J,3)="Please follow the instructions in the Post-Installation Instructions "
"RTN","XOBWP004",39,0)
 S ^TMP("PSC DATA",$J,4)="to request your respective System Administration support group "
"RTN","XOBWP004",40,0)
 S ^TMP("PSC DATA",$J,5)="(Region Operation Center) to assist you in completing the installation "
"RTN","XOBWP004",41,0)
 S ^TMP("PSC DATA",$J,6)="of this patch."
"RTN","XOBWP004",42,0)
 I $$PROD^XUPROD() DO MESSAGE
"RTN","XOBWP004",43,0)
 Q
"RTN","XOBWP004",44,0)
 ;
"RTN","XOBWP004",45,0)
MESSAGE ;set up message and address list
"RTN","XOBWP004",46,0)
 S MSG=$NA(^TMP("PSC DATA",$J))
"RTN","XOBWP004",47,0)
 S MSGSBJ="XOBW*1.0*4 "_$G(^XMB("NETNAME"))
"RTN","XOBWP004",48,0)
 S WHO("G.PATCH TRACKING XOBW_1_4@FORUM.DOMAIN.EXT")=""
"RTN","XOBWP004",49,0)
 S WHO("Jose.Luis-Garcia@domain.ext")=""
"RTN","XOBWP004",50,0)
 S WHO(DUZ)=""
"RTN","XOBWP004",51,0)
 D SENDMSG^XMXAPI(DUZ,MSGSBJ,.MSG,.WHO)
"RTN","XOBWP004",52,0)
 K ^TMP("PSC DATA",$J),WHO,MSG
"RTN","XOBWP004",53,0)
 Q
"RTN","XOBWP004",54,0)
 ;
"RTN","XOBWP004",55,0)
SSLCONF ;Install SSL Configuration for encryption-only
"RTN","XOBWP004",56,0)
 N XOBNAME,XOBPROP
"RTN","XOBWP004",57,0)
 S XOBNAME="encrypt_only"
"RTN","XOBWP004",58,0)
 ;I $$EXISTS(XOBNAME,.XOBPROP) D  Q
"RTN","XOBWP004",59,0)
 ;.D BMES^XPDUTL(" o  '"_XOBNAME_"' SSL Config already exists and will not be replaced.")
"RTN","XOBWP004",60,0)
 ; .D DISPL(.XOBPROP)
"RTN","XOBWP004",61,0)
 ; .Q
"RTN","XOBWP004",62,0)
 ; delete
"RTN","XOBWP004",63,0)
 D DELETE(XOBNAME)
"RTN","XOBWP004",64,0)
 ; create
"RTN","XOBWP004",65,0)
 I $$CRSSL(XOBNAME,.XOBPROP) D  Q
"RTN","XOBWP004",66,0)
 .D BMES^XPDUTL(" o  '"_XOBNAME_"' SSL Config successfully installed")
"RTN","XOBWP004",67,0)
 .D DISPL(.XOBPROP)
"RTN","XOBWP004",68,0)
 .Q
"RTN","XOBWP004",69,0)
 ;
"RTN","XOBWP004",70,0)
 D BMES^XPDUTL(" o  '"_XOBNAME_"' SSL Config could not be installed")
"RTN","XOBWP004",71,0)
 Q
"RTN","XOBWP004",72,0)
 ;
"RTN","XOBWP004",73,0)
DISPL(XOBPROP) ; Print out the result
"RTN","XOBWP004",74,0)
  N XOBW,XOBWI
"RTN","XOBWP004",75,0)
  W !!,?20,"Configuration Values"
"RTN","XOBWP004",76,0)
  S XOBWI="" F  S XOBWI=$O(XOBPROP(XOBWI)) Q:XOBWI=""  W !,?10,XOBWI,?30," : ",$G(XOBPROP(XOBWI))
"RTN","XOBWP004",77,0)
  W !!
"RTN","XOBWP004",78,0)
  Q 
"RTN","XOBWP004",79,0)
 ;
"RTN","XOBWP004",80,0)
EXISTS(XOBWIN,XOBPROP) ; check an existed SSL
"RTN","XOBWP004",81,0)
 N XOBEXSTS,XOBNAME
"RTN","XOBWP004",82,0)
 D
"RTN","XOBWP004",83,0)
 .S XOBNAME=$G(XOBWIN,"encrypt_only"),XOBEXSTS=0
"RTN","XOBWP004",84,0)
 .; change to %SYS namespace then revert upon finishing
"RTN","XOBWP004",85,0)
 .N $NAMESPACE ;Push current namespace onto the stack
"RTN","XOBWP004",86,0)
 .S $NAMESPACE="%SYS" ;Change namespace, revert back upon "Q"
"RTN","XOBWP004",87,0)
  .; Check if SSL configuration exists
"RTN","XOBWP004",88,0)
 .S XOBEXSTS=##class(Security.SSLConfigs).Get(XOBNAME,.XOBPROP)
"RTN","XOBWP004",89,0)
 .Q
"RTN","XOBWP004",90,0)
 Q $G(XOBEXSTS)
"RTN","XOBWP004",91,0)
 ;
"RTN","XOBWP004",92,0)
CRSSL(XOBWIN,XOBPROP) ; create a new SSL
"RTN","XOBWP004",93,0)
 N XOBSTAT,XOBNAME
"RTN","XOBWP004",94,0)
 DO
"RTN","XOBWP004",95,0)
 .N XOBCONFG,XOBPROP2,XOBSTAT2
"RTN","XOBWP004",96,0)
 .S XOBNAME=$G(XOBWIN,"encrypt_only"),XOBSTAT=0
"RTN","XOBWP004",97,0)
 .; change to %SYS namespace then revert upon finishing
"RTN","XOBWP004",98,0)
 .N $NAMESPACE ;Push current namespace onto the stack
"RTN","XOBWP004",99,0)
 .S $NAMESPACE="%SYS" ;Change namespace, revert back upon "Q"
"RTN","XOBWP004",100,0)
 .S XOBPROP2("Description")="Patch XOBW*1*4"
"RTN","XOBWP004",101,0)
 .S XOBPROP2("Enabled")=1
"RTN","XOBWP004",102,0)
 .S XOBPROP2("Protocols")=2
"RTN","XOBWP004",103,0)
 .S XOBCONFG=##class(Security.SSLConfigs).%New()
"RTN","XOBWP004",104,0)
 .S XOBSTAT=XOBCONFG.Create(XOBNAME,.XOBPROP2)
"RTN","XOBWP004",105,0)
 .; get complete set of properties
"RTN","XOBWP004",106,0)
 .S XOBSTAT2=##class(Security.SSLConfigs).Get(XOBNAME,.XOBPROP)
"RTN","XOBWP004",107,0)
 .Q
"RTN","XOBWP004",108,0)
 Q $G(XOBSTAT)
"RTN","XOBWP004",109,0)
 ;
"RTN","XOBWP004",110,0)
CHCKEXST(XOBNAME) ;check and display an SSL
"RTN","XOBWP004",111,0)
 N XOBPROP
"RTN","XOBWP004",112,0)
 S XOBNAME=$G(XOBNAME,"encrypt_only")
"RTN","XOBWP004",113,0)
 I $$EXISTS(XOBNAME,.XOBPROP) D  Q
"RTN","XOBWP004",114,0)
 . D DISPL(.XOBPROP)
"RTN","XOBWP004",115,0)
 D BMES^XPDUTL(" >>>>  '"_XOBNAME_"' SSL Config doesn't exist.")
"RTN","XOBWP004",116,0)
 D BMES^XPDUTL("")
"RTN","XOBWP004",117,0)
 Q
"RTN","XOBWP004",118,0)
DELETE(XOBWIN) ; delete an existing SSL configuration
"RTN","XOBWP004",119,0)
 N XOBNAME,XOBSTAT
"RTN","XOBWP004",120,0)
 D
"RTN","XOBWP004",121,0)
 .S XOBNAME=$G(XOBWIN,"encrypt_only")
"RTN","XOBWP004",122,0)
 .; change to %SYS namespace then revert upon finishing
"RTN","XOBWP004",123,0)
 .N $NAMESPACE ;Push current namespace onto the stack
"RTN","XOBWP004",124,0)
 .S $NAMESPACE="%SYS" ;Change namespace, revert back upon "Q"
"RTN","XOBWP004",125,0)
  .; Check if SSL configuration exists
"RTN","XOBWP004",126,0)
 .S XOBSTAT=##class(Security.SSLConfigs).Delete(XOBNAME)
"RTN","XOBWP004",127,0)
 .Q
"RTN","XOBWP004",128,0)
 Q
"RTN","XOBWPA04")
0^4^B90514000^n/a
"RTN","XOBWPA04",1,0)
XOBWPA04 ;OAK/BDT - HWSC :: Environmental Check ; 06/28/2016
"RTN","XOBWPA04",2,0)
 ;;1.0;HwscWebServiceClient;**4**;September 13, 2010;Build 9
"RTN","XOBWPA04",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","XOBWPA04",4,0)
 ;
"RTN","XOBWPA04",5,0)
 ; ***** IMPORTANT NOTE *******************************************
"RTN","XOBWPA04",6,0)
 ; This routine requires access to the manager (%SYS) namespace and
"RTN","XOBWPA04",7,0)
 ; can only be run by a user with permissions to that namespace.
"RTN","XOBWPA04",8,0)
 ; ****************************************************************
"RTN","XOBWPA04",9,0)
 ;
"RTN","XOBWPA04",10,0)
 ; Loads "xobw4.xml" into XOBW*1*4 transport global. Post-installation
"RTN","XOBWPA04",11,0)
 ; routine ^XOBWPA04 will reconstruct the file for the installation of Cache
"RTN","XOBWPA04",12,0)
 ; classes into VistA to support SSL. The "xobw4.xml"
"RTN","XOBWPA04",13,0)
 ; file must be in the PRIMARY HFS DIRECTORY prior to transport.
"RTN","XOBWPA04",14,0)
 ;
"RTN","XOBWPA04",15,0)
 ; Note: Make sure that there are no lines longer than 255 chars in the file
"RTN","XOBWPA04",16,0)
 ; to be loaded! It appears $$FTG is not creating overflow nodes.
"RTN","XOBWPA04",17,0)
 ;
"RTN","XOBWPA04",18,0)
POST ;
"RTN","XOBWPA04",19,0)
 D SETDATA ;
"RTN","XOBWPA04",20,0)
 D IMPDATA ;
"RTN","XOBWPA04",21,0)
 Q
"RTN","XOBWPA04",22,0)
GETDATA ; export data from xobw4.xml file
"RTN","XOBWPA04",23,0)
 N I,X,XFILE,XPATH,XREF
"RTN","XOBWPA04",24,0)
 K ^TMP($J,4)
"RTN","XOBWPA04",25,0)
 S XFILE="xobw4.xml"
"RTN","XOBWPA04",26,0)
 S XPATH=$$DEFDIR^%ZISH ;PRIMARY HFS DIRECTORY
"RTN","XOBWPA04",27,0)
 S XREF="^TMP("_$J_",4,1,0)"
"RTN","XOBWPA04",28,0)
 S X=$$FTG^%ZISH(XPATH,XFILE,XREF,3) ;Load file into global
"RTN","XOBWPA04",29,0)
 Q
"RTN","XOBWPA04",30,0)
 ;
"RTN","XOBWPA04",31,0)
IMPDATA ; import data into xobw4.xml file
"RTN","XOBWPA04",32,0)
 N XDIR,XOBWY,Y
"RTN","XOBWPA04",33,0)
 S XDIR=$$DEFDIR^%ZISH
"RTN","XOBWPA04",34,0)
     S XREF="^TMP("_$J_",4,1,0)"
"RTN","XOBWPA04",35,0)
     S Y=$$GTF^%ZISH(XREF,3,XDIR,"xobw4.xml")  ;Export ^TMP global to XML file
"RTN","XOBWPA04",36,0)
     K ^TMP($J,4)
"RTN","XOBWPA04",37,0)
     S XDIR=$$DEFDIR^%ZISH
"RTN","XOBWPA04",38,0)
     S XOBWY=$$IMPORT^XOBWLIB1(XDIR,"xobw4.xml")  ;Import Cache classes
"RTN","XOBWPA04",39,0)
     IF 'XOBWY DO
"RTN","XOBWPA04",40,0)
     . DO BMES^XPDUTL("Error occurred during the importing of support classes file:")
"RTN","XOBWPA04",41,0)
     . DO MES^XPDUTL("  Directory: "_XDIR)
"RTN","XOBWPA04",42,0)
     . DO MES^XPDUTL("  File Name: "_"xobw4.xml")
"RTN","XOBWPA04",43,0)
     . DO MES^XPDUTL("      Error: "_$PIECE(XOBWY,"^",2))
"RTN","XOBWPA04",44,0)
     . DO MES^XPDUTL(" o  Classes not imported.")
"RTN","XOBWPA04",45,0)
  ELSE  DO
"RTN","XOBWPA04",46,0)
   . DO MES^XPDUTL(" o  Support classes imported successfully.")
"RTN","XOBWPA04",47,0)
   . DO MES^XPDUTL(" ")
"RTN","XOBWPA04",48,0)
 Q
"RTN","XOBWPA04",49,0)
 ;
"RTN","XOBWPA04",50,0)
SETDATA ;
"RTN","XOBWPA04",51,0)
   N I,IT
"RTN","XOBWPA04",52,0)
   K ^TMP($J,4)
"RTN","XOBWPA04",53,0)
   F I=1:1:158 S IT=$T(DATA+I)  S ^TMP($J,4,I,0)=$P(IT,";;",2)
"RTN","XOBWPA04",54,0)
   Q
"RTN","XOBWPA04",55,0)
DATA ;
"RTN","XOBWPA04",56,0)
   ;;<?xml version="1.0" encoding="UTF-8"?>
"RTN","XOBWPA04",57,0)
   ;;<Export generator="Cache" version="25" zv="Cache for UNIX (Red Hat Enterprise Linux for x86-64) 2014.1.3 (Build 775)" ts="2016-06-10 11:14:51">
"RTN","XOBWPA04",58,0)
   ;;<Class name="xobw.WebServiceProxyFactory">
"RTN","XOBWPA04",59,0)
   ;;<Description><![CDATA[
"RTN","XOBWPA04",60,0)
   ;;This factory class contains methods to create web service proxy instances.
"RTN","XOBWPA04",61,0)
   ;;<br><br>As part of the creation process, web server ip/port resolution is performed and
"RTN","XOBWPA04",62,0)
   ;;any security implementation, as defined by ISS, is executed. ]]></Description>
"RTN","XOBWPA04",63,0)
   ;;<ClassType/>
"RTN","XOBWPA04",64,0)
   ;;<ProcedureBlock>1</ProcedureBlock>
"RTN","XOBWPA04",65,0)
   ;;<Super>%RegisteredObject</Super>
"RTN","XOBWPA04",66,0)
   ;;<TimeChanged>64072,51245.767727</TimeChanged>
"RTN","XOBWPA04",67,0)
   ;;<TimeCreated>60655,58903.754395</TimeCreated>
"RTN","XOBWPA04",68,0)
   ;;
"RTN","XOBWPA04",69,0)
   ;;<UDLText name="T">
"RTN","XOBWPA04",70,0)
   ;;<Content><![CDATA[
"RTN","XOBWPA04",71,0)
   ;;// 1.0;HwscWebServiceClient   ;;September 13, 2010
"RTN","XOBWPA04",72,0)
   ;;
"RTN","XOBWPA04",73,0)
   ;;]]></Content>
"RTN","XOBWPA04",74,0)
   ;;</UDLText>
"RTN","XOBWPA04",75,0)
   ;;
"RTN","XOBWPA04",76,0)
   ;;<UDLText name="T">
"RTN","XOBWPA04",77,0)
   ;;<Content><![CDATA[
"RTN","XOBWPA04",78,0)
   ;;// HealtheVet Web Service Client v1 [Build: 1.0.1.009]
"RTN","XOBWPA04",79,0)
   ;;
"RTN","XOBWPA04",80,0)
   ;;]]></Content>
"RTN","XOBWPA04",81,0)
   ;;</UDLText>
"RTN","XOBWPA04",82,0)
   ;;
"RTN","XOBWPA04",83,0)
   ;;<Property name="webServiceMetadata">
"RTN","XOBWPA04",84,0)
   ;;<Type>WebServiceMetadata</Type>
"RTN","XOBWPA04",85,0)
   ;;<Private>1</Private>
"RTN","XOBWPA04",86,0)
   ;;</Property>
"RTN","XOBWPA04",87,0)
   ;;
"RTN","XOBWPA04",88,0)
   ;;<Method name="%OnNew">
"RTN","XOBWPA04",89,0)
   ;;<FormalSpec>webServiceName:%String</FormalSpec>
"RTN","XOBWPA04",90,0)
   ;;<ReturnType>%Status</ReturnType>
"RTN","XOBWPA04",91,0)
   ;;<Implementation><![CDATA[
"RTN","XOBWPA04",92,0)
   ;; set webServiceId=##class(xobw.WebServiceMetadata).getWebServiceId(webServiceName)
"RTN","XOBWPA04",93,0)
   ;; if 'webServiceId {
"RTN","XOBWPA04",94,0)
   ;;     do ##class(xobw.error.DialogError).forceError(186006_"^"_webServiceName)
"RTN","XOBWPA04",95,0)
   ;; }
"RTN","XOBWPA04",96,0)
   ;; set ..webServiceMetadata=##class(xobw.WebServiceMetadata).%OpenId(webServiceId)
"RTN","XOBWPA04",97,0)
   ;; quit $$$OK
"RTN","XOBWPA04",98,0)
   ;;]]></Implementation>
"RTN","XOBWPA04",99,0)
   ;;</Method>
"RTN","XOBWPA04",100,0)
   ;;
"RTN","XOBWPA04",101,0)
   ;;<Method name="getProxy">
"RTN","XOBWPA04",102,0)
   ;;<Description><![CDATA[
"RTN","XOBWPA04",103,0)
   ;;Creates web service client proxy for a web server.
"RTN","XOBWPA04",104,0)
   ;;<ul>
"RTN","XOBWPA04",105,0)
   ;;Parameter:
"RTN","XOBWPA04",106,0)
   ;; <li><parameter>webServerName = name of server as it appears in NAME (#.01) field of a WEB SERVER (#18.12) file entry</parameter>
"RTN","XOBWPA04",107,0)
   ;;</ul>]]></Description>
"RTN","XOBWPA04",108,0)
   ;;<FormalSpec>webServerName:%String</FormalSpec>
"RTN","XOBWPA04",109,0)
   ;;<ReturnType>%SOAP.WebClient</ReturnType>
"RTN","XOBWPA04",110,0)
   ;;<Implementation><![CDATA[
"RTN","XOBWPA04",111,0)
   ;;  // Future: Add any required headers to proxy when discovered, if any
"RTN","XOBWPA04",112,0)
   ;;  new %proxy
"RTN","XOBWPA04",113,0)
   ;;  if ..webServiceMetadata.type'=1 {
"RTN","XOBWPA04",114,0)
   ;;      do ##class(xobw.error.DialogError).forceError(186007)
"RTN","XOBWPA04",115,0)
   ;;  }
"RTN","XOBWPA04",116,0)
   ;;  xecute "set %proxy=##class("_..webServiceMetadata.proxyClassName_").%New()"
"RTN","XOBWPA04",117,0)
   ;;  if %proxy'=$$$NULLOREF {
"RTN","XOBWPA04",118,0)
   ;;   set webServerId=##class(xobw.WebServer).getWebServerId(webServerName)
"RTN","XOBWPA04",119,0)
   ;;    if 'webServerId {
"RTN","XOBWPA04",120,0)
   ;;      do ##class(xobw.error.DialogError).forceError(186005_"^"_webServerName)
"RTN","XOBWPA04",121,0)
   ;;   }    
"RTN","XOBWPA04",122,0)
   ;;   set webServer=##class(xobw.WebServer).%OpenId(webServerId)
"RTN","XOBWPA04",123,0)
   ;;   
"RTN","XOBWPA04",124,0)
   ;;   // web server is disabled
"RTN","XOBWPA04",125,0)
   ;;   if 'webServer.status {
"RTN","XOBWPA04",126,0)
   ;;    do ##class(xobw.error.DialogError).forceError(186002_"^"_webServer.name)
"RTN","XOBWPA04",127,0)
   ;;   }
"RTN","XOBWPA04",128,0)
   ;;   
"RTN","XOBWPA04",129,0)
   ;;   do ..setUpCredentials(webServer, %proxy)
"RTN","XOBWPA04",130,0)
   ;;   do ..setUpLocation(webServer, %proxy)
"RTN","XOBWPA04",131,0)
   ;;  }
"RTN","XOBWPA04",132,0)
   ;; quit $get(%proxy)
"RTN","XOBWPA04",133,0)
   ;;]]></Implementation>
"RTN","XOBWPA04",134,0)
   ;;</Method>
"RTN","XOBWPA04",135,0)
   ;;
"RTN","XOBWPA04",136,0)
   ;;<Method name="setUpCredentials">
"RTN","XOBWPA04",137,0)
   ;;<FormalSpec>webServer:WebServer,proxy:%SOAP.WebClient</FormalSpec>
"RTN","XOBWPA04",138,0)
   ;;<Private>1</Private>
"RTN","XOBWPA04",139,0)
   ;;<Implementation><![CDATA[
"RTN","XOBWPA04",140,0)
   ;; set authorizedWebServiceId=##class(xobw.WebServicesAuthorized).getAuthorizedWebServiceId(webServer,..webServiceMetadata)
"RTN","XOBWPA04",141,0)
   ;; 
"RTN","XOBWPA04",142,0)
   ;; // web service is not authorized
"RTN","XOBWPA04",143,0)
   ;; if 'authorizedWebServiceId {
"RTN","XOBWPA04",144,0)
   ;;  do ##class(xobw.error.DialogError).forceError(186003_"^"_..webServiceMetadata.name_"^"_webServer.name)
"RTN","XOBWPA04",145,0)
   ;; }
"RTN","XOBWPA04",146,0)
   ;; 
"RTN","XOBWPA04",147,0)
   ;; set authorizedWebService=##class(xobw.WebServicesAuthorized).%OpenId(authorizedWebServiceId)
"RTN","XOBWPA04",148,0)
   ;; 
"RTN","XOBWPA04",149,0)
   ;; // web service is disabled
"RTN","XOBWPA04",150,0)
   ;; if 'authorizedWebService.status {
"RTN","XOBWPA04",151,0)
   ;;  do ##class(xobw.error.DialogError).forceError(186004_"^"_..webServiceMetadata.name_"^"_webServer.name)
"RTN","XOBWPA04",152,0)
   ;; }
"RTN","XOBWPA04",153,0)
   ;; 
"RTN","XOBWPA04",154,0)
   ;; if webServer.loginRequired="1"!(webServer.loginRequired="") {
"RTN","XOBWPA04",155,0)
   ;;  set proxy.HttpUsername=webServer.userName
"RTN","XOBWPA04",156,0)
   ;;  set proxy.HttpPassword=webServer.getPassword()
"RTN","XOBWPA04",157,0)
   ;; }
"RTN","XOBWPA04",158,0)
   ;; quit
"RTN","XOBWPA04",159,0)
   ;;]]></Implementation>
"RTN","XOBWPA04",160,0)
   ;;</Method>
"RTN","XOBWPA04",161,0)
   ;;
"RTN","XOBWPA04",162,0)
   ;;<Method name="setUpLocation">
"RTN","XOBWPA04",163,0)
   ;;<FormalSpec>webServer:WebServer,proxy:%SOAP.WebClient</FormalSpec>
"RTN","XOBWPA04",164,0)
   ;;<Private>1</Private>
"RTN","XOBWPA04",165,0)
   ;;<Implementation><![CDATA[
"RTN","XOBWPA04",166,0)
   ;; if (webServer.sslEnabled && ('$$SSLOK^XOBWENV())) {
"RTN","XOBWPA04",167,0)
   ;;  do ##class(xobw.error.DialogError).forceError(186002_"^"_webServer.name_" (SSL is disabled on VMS)")
"RTN","XOBWPA04",168,0)
   ;; }
"RTN","XOBWPA04",169,0)
   ;; if (webServer.sslEnabled) {
"RTN","XOBWPA04",170,0)
   ;;  set proxy.Location="https://"_webServer.server_":"_webServer.sslPort_"/"_..webServiceMetadata.contextRoot
"RTN","XOBWPA04",171,0)
   ;;  set proxy.SSLConfiguration = webServer.sslConfiguration
"RTN","XOBWPA04",172,0)
   ;;  set proxy.SSLCheckServerIdentity = 0
"RTN","XOBWPA04",173,0)
   ;; } else {
"RTN","XOBWPA04",174,0)
   ;;  set proxy.Location="http://"_webServer.server_":"_webServer.port_"/"_..webServiceMetadata.contextRoot
"RTN","XOBWPA04",175,0)
   ;; }
"RTN","XOBWPA04",176,0)
   ;; set proxy.Timeout=webServer.defaultTimeout
"RTN","XOBWPA04",177,0)
   ;; quit
"RTN","XOBWPA04",178,0)
   ;;]]></Implementation>
"RTN","XOBWPA04",179,0)
   ;;</Method>
"RTN","XOBWPA04",180,0)
   ;;
"RTN","XOBWPA04",181,0)
   ;;<Method name="close">
"RTN","XOBWPA04",182,0)
   ;;<Description><![CDATA[
"RTN","XOBWPA04",183,0)
   ;;Close web service proxy factory
"RTN","XOBWPA04",184,0)
   ;;<br>
"RTN","XOBWPA04",185,0)
   ;;<br>Performs any close processing activities required.]]></Description>
"RTN","XOBWPA04",186,0)
   ;;<ReturnType>%Status</ReturnType>
"RTN","XOBWPA04",187,0)
   ;;<Implementation><![CDATA[ quit $$$OK
"RTN","XOBWPA04",188,0)
   ;;]]></Implementation>
"RTN","XOBWPA04",189,0)
   ;;</Method>
"RTN","XOBWPA04",190,0)
   ;;
"RTN","XOBWPA04",191,0)
   ;;<Method name="getWebServiceProxy">
"RTN","XOBWPA04",192,0)
   ;;<Description><![CDATA[
"RTN","XOBWPA04",193,0)
   ;;Create web service proxy
"RTN","XOBWPA04",194,0)
   ;;<ul>
"RTN","XOBWPA04",195,0)
   ;;Parameters:
"RTN","XOBWPA04",196,0)
   ;; <li><parameter>webServiceName = name of service as it appears NAME (#.01) field in an WEB SERVICE (#18.02) file entry</parameter>
"RTN","XOBWPA04",197,0)
   ;; <li><parameter>webServerName = name of server as it appears NAME (#.01) field in an WEB SERVER (#18.12) file entry</parameter>
"RTN","XOBWPA04",198,0)
   ;;</ul>
"RTN","XOBWPA04",199,0)
   ;;<br><b>Restricted Use:</b> This method is for HWSC use only. Applications should use the $$GETPROXY^XOBWLB(...) API]]></Description>
"RTN","XOBWPA04",200,0)
   ;;<ClassMethod>1</ClassMethod>
"RTN","XOBWPA04",201,0)
   ;;<FormalSpec>webServiceName:%String,webServerName:%String</FormalSpec>
"RTN","XOBWPA04",202,0)
   ;;<ReturnType>%SOAP.WebClient</ReturnType>
"RTN","XOBWPA04",203,0)
   ;;<Implementation><![CDATA[
"RTN","XOBWPA04",204,0)
   ;; set factory=##class(xobw.WebServiceProxyFactory).%New(webServiceName)
"RTN","XOBWPA04",205,0)
   ;; if factory'=$$$NULLOREF {
"RTN","XOBWPA04",206,0)
   ;;  set proxy=factory.getProxy(webServerName)
"RTN","XOBWPA04",207,0)
   ;;  set ok=factory.close()
"RTN","XOBWPA04",208,0)
   ;; }
"RTN","XOBWPA04",209,0)
   ;; quit $get(proxy,$$$NULLOREF)
"RTN","XOBWPA04",210,0)
   ;;]]></Implementation>
"RTN","XOBWPA04",211,0)
   ;;</Method>
"RTN","XOBWPA04",212,0)
   ;;</Class>
"RTN","XOBWPA04",213,0)
   ;;</Export>
"RTN","XOBWPB04")
0^5^B190407811^n/a
"RTN","XOBWPB04",1,0)
XOBWPB04 ;OAK/BDT - HWSC :: Environmental Check ; 06/28/2016
"RTN","XOBWPB04",2,0)
 ;;1.0;HwscWebServiceClient;**4**;September 13, 2010;Build 9
"RTN","XOBWPB04",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","XOBWPB04",4,0)
 ;
"RTN","XOBWPB04",5,0)
 ; ***** IMPORTANT NOTE *******************************************
"RTN","XOBWPB04",6,0)
 ; This routine requires access to the manager (%SYS) namespace and
"RTN","XOBWPB04",7,0)
 ; can only be run by a user with permissions to that namespace.
"RTN","XOBWPB04",8,0)
 ; ****************************************************************
"RTN","XOBWPB04",9,0)
 ;
"RTN","XOBWPB04",10,0)
 ; Loads "xobw4b.xml" into XOBW*1*4 transport global. Post-installation
"RTN","XOBWPB04",11,0)
 ; routine ^XOBWPA04 will reconstruct the file for the installation of Cache
"RTN","XOBWPB04",12,0)
 ; classes into VistA to support SSL. The "xobw4.xml"
"RTN","XOBWPB04",13,0)
 ; file must be in the PRIMARY HFS DIRECTORY prior to transport.
"RTN","XOBWPB04",14,0)
 ;
"RTN","XOBWPB04",15,0)
 ; Note: Make sure that there are no lines longer than 255 chars in the file
"RTN","XOBWPB04",16,0)
 ; to be loaded! It appears $$FTG is not creating overflow nodes.
"RTN","XOBWPB04",17,0)
 ;
"RTN","XOBWPB04",18,0)
POST ;
"RTN","XOBWPB04",19,0)
 D SETDATA ;
"RTN","XOBWPB04",20,0)
 D IMPDATA ;
"RTN","XOBWPB04",21,0)
 Q
"RTN","XOBWPB04",22,0)
GETDATA ; export data from xobw4b.xml file
"RTN","XOBWPB04",23,0)
 N I,X,XFILE,XPATH,XREF
"RTN","XOBWPB04",24,0)
 K ^TMP($J,4)
"RTN","XOBWPB04",25,0)
 S XFILE="xobw4b.xml"
"RTN","XOBWPB04",26,0)
 S XPATH=$$DEFDIR^%ZISH ;PRIMARY HFS DIRECTORY
"RTN","XOBWPB04",27,0)
 S XREF="^TMP("_$J_",4,1,0)"
"RTN","XOBWPB04",28,0)
 S X=$$FTG^%ZISH(XPATH,XFILE,XREF,3) ;Load file into global
"RTN","XOBWPB04",29,0)
 Q
"RTN","XOBWPB04",30,0)
 ;
"RTN","XOBWPB04",31,0)
IMPDATA ; import data into xobw4b.xml file
"RTN","XOBWPB04",32,0)
 N XDIR,XOBWY,Y
"RTN","XOBWPB04",33,0)
 S XDIR=$$DEFDIR^%ZISH
"RTN","XOBWPB04",34,0)
     S XREF="^TMP("_$J_",4,1,0)"
"RTN","XOBWPB04",35,0)
     S Y=$$GTF^%ZISH(XREF,3,XDIR,"xobw4b.xml")  ;Export ^TMP global to XML file
"RTN","XOBWPB04",36,0)
     K ^TMP($J,4)
"RTN","XOBWPB04",37,0)
     S XDIR=$$DEFDIR^%ZISH
"RTN","XOBWPB04",38,0)
     S XOBWY=$$IMPORT^XOBWLIB1(XDIR,"xobw4b.xml")  ;Import Cache classes
"RTN","XOBWPB04",39,0)
     IF 'XOBWY DO
"RTN","XOBWPB04",40,0)
     . DO BMES^XPDUTL("Error occurred during the importing of support classes file:")
"RTN","XOBWPB04",41,0)
     . DO MES^XPDUTL("  Directory: "_XDIR)
"RTN","XOBWPB04",42,0)
     . DO MES^XPDUTL("  File Name: "_"xobw4b.xml")
"RTN","XOBWPB04",43,0)
     . DO MES^XPDUTL("      Error: "_$PIECE(XOBWY,"^",2))
"RTN","XOBWPB04",44,0)
     . DO MES^XPDUTL(" o  Classes not imported.")
"RTN","XOBWPB04",45,0)
  ELSE  DO
"RTN","XOBWPB04",46,0)
   . DO MES^XPDUTL(" o  Support classes imported successfully.")
"RTN","XOBWPB04",47,0)
   . DO MES^XPDUTL(" ")
"RTN","XOBWPB04",48,0)
 Q
"RTN","XOBWPB04",49,0)
 ;
"RTN","XOBWPB04",50,0)
SETDATA ;
"RTN","XOBWPB04",51,0)
   N I,IT
"RTN","XOBWPB04",52,0)
   K ^TMP($J,4)
"RTN","XOBWPB04",53,0)
   F I=1:1:323 S IT=$T(DATA+I)  S ^TMP($J,4,I,0)=$P(IT,"   ;;",2,99)
"RTN","XOBWPB04",54,0)
   Q
"RTN","XOBWPB04",55,0)
DATA ;
"RTN","XOBWPB04",56,0)
   ;;<?xml version="1.0" encoding="UTF-8"?>
"RTN","XOBWPB04",57,0)
   ;;<Export generator="Cache" version="25" zv="Cache for UNIX (Red Hat Enterprise Linux for x86-64) 2014.1.3 (Build 775)" ts="2016-06-22 15:48:50">
"RTN","XOBWPB04",58,0)
   ;;<Class name="xobw.WebServer">
"RTN","XOBWPB04",59,0)
   ;;<Description><![CDATA[
"RTN","XOBWPB04",60,0)
   ;;This persistent class contains web server connection information used to connect to server hosting web services
"RTN","XOBWPB04",61,0)
   ;;<br>
"RTN","XOBWPB04",62,0)
   ;;This class is mapped to the VA FileMan WEB SERVER (#18.12) file
"RTN","XOBWPB04",63,0)
   ;;<br><br>
"RTN","XOBWPB04",64,0)
   ;;<b>Restricted Use:</b> The properties and methods of this class are for HWSC use only.
"RTN","XOBWPB04",65,0)
   ;;  ]]></Description>
"RTN","XOBWPB04",66,0)
   ;;<ClassType>persistent</ClassType>
"RTN","XOBWPB04",67,0)
   ;;<ProcedureBlock>1</ProcedureBlock>
"RTN","XOBWPB04",68,0)
   ;;<SqlRowIdPrivate>1</SqlRowIdPrivate>
"RTN","XOBWPB04",69,0)
   ;;<SqlTableName>WebServer</SqlTableName>
"RTN","XOBWPB04",70,0)
   ;;<StorageStrategy>WebServerStorage</StorageStrategy>
"RTN","XOBWPB04",71,0)
   ;;<Super>%Persistent</Super>
"RTN","XOBWPB04",72,0)
   ;;<TimeChanged>64091,56835.117773</TimeChanged>
"RTN","XOBWPB04",73,0)
   ;;<TimeCreated>60654,21265.065878</TimeCreated>
"RTN","XOBWPB04",74,0)
   ;;
"RTN","XOBWPB04",75,0)
   ;;<UDLText name="T">
"RTN","XOBWPB04",76,0)
   ;;<Content><![CDATA[
"RTN","XOBWPB04",77,0)
   ;;// 1.0;HwscWebServiceClient;;September 13, 2010
"RTN","XOBWPB04",78,0)
   ;;
"RTN","XOBWPB04",79,0)
   ;;]]></Content>
"RTN","XOBWPB04",80,0)
   ;;</UDLText>
"RTN","XOBWPB04",81,0)
   ;;
"RTN","XOBWPB04",82,0)
   ;;<UDLText name="T">
"RTN","XOBWPB04",83,0)
   ;;<Content><![CDATA[
"RTN","XOBWPB04",84,0)
   ;;// HealtheVet Web Service Client v1 [Build: 1.0.1.009]
"RTN","XOBWPB04",85,0)
   ;;
"RTN","XOBWPB04",86,0)
   ;;]]></Content>
"RTN","XOBWPB04",87,0)
   ;;</UDLText>
"RTN","XOBWPB04",88,0)
   ;;
"RTN","XOBWPB04",89,0)
   ;;<Index name="ienIndex">
"RTN","XOBWPB04",90,0)
   ;;<IdKey>1</IdKey>
"RTN","XOBWPB04",91,0)
   ;;<PrimaryKey>1</PrimaryKey>
"RTN","XOBWPB04",92,0)
   ;;<Properties>ien</Properties>
"RTN","XOBWPB04",93,0)
   ;;<Unique>1</Unique>
"RTN","XOBWPB04",94,0)
   ;;</Index>
"RTN","XOBWPB04",95,0)
   ;;
"RTN","XOBWPB04",96,0)
   ;;<Property name="server">
"RTN","XOBWPB04",97,0)
   ;;<Type>%String</Type>
"RTN","XOBWPB04",98,0)
   ;;<Parameter name="TRUNCATE" value="1"/>
"RTN","XOBWPB04",99,0)
   ;;</Property>
"RTN","XOBWPB04",100,0)
   ;;
"RTN","XOBWPB04",101,0)
   ;;<Property name="port">
"RTN","XOBWPB04",102,0)
   ;;<Type>%Integer</Type>
"RTN","XOBWPB04",103,0)
   ;;<Collection/>
"RTN","XOBWPB04",104,0)
   ;;<Relationship>0</Relationship>
"RTN","XOBWPB04",105,0)
   ;;</Property>
"RTN","XOBWPB04",106,0)
   ;;
"RTN","XOBWPB04",107,0)
   ;;<Property name="ien">
"RTN","XOBWPB04",108,0)
   ;;<Type>%String</Type>
"RTN","XOBWPB04",109,0)
   ;;<Collection/>
"RTN","XOBWPB04",110,0)
   ;;<Relationship>0</Relationship>
"RTN","XOBWPB04",111,0)
   ;;<Parameter name="TRUNCATE" value="1"/>
"RTN","XOBWPB04",112,0)
   ;;</Property>
"RTN","XOBWPB04",113,0)
   ;;
"RTN","XOBWPB04",114,0)
   ;;<Property name="name">
"RTN","XOBWPB04",115,0)
   ;;<Type>%String</Type>
"RTN","XOBWPB04",116,0)
   ;;<Collection/>
"RTN","XOBWPB04",117,0)
   ;;<Relationship>0</Relationship>
"RTN","XOBWPB04",118,0)
   ;;<Parameter name="TRUNCATE" value="1"/>
"RTN","XOBWPB04",119,0)
   ;;</Property>
"RTN","XOBWPB04",120,0)
   ;;
"RTN","XOBWPB04",121,0)
   ;;<Property name="production">
"RTN","XOBWPB04",122,0)
   ;;<Type>%Boolean</Type>
"RTN","XOBWPB04",123,0)
   ;;<Collection/>
"RTN","XOBWPB04",124,0)
   ;;<Relationship>0</Relationship>
"RTN","XOBWPB04",125,0)
   ;;<Transient>1</Transient>
"RTN","XOBWPB04",126,0)
   ;;</Property>
"RTN","XOBWPB04",127,0)
   ;;
"RTN","XOBWPB04",128,0)
   ;;<UDLText name="T">
"RTN","XOBWPB04",129,0)
   ;;<Content><![CDATA[
"RTN","XOBWPB04",130,0)
   ;;// server credentials
"RTN","XOBWPB04",131,0)
   ;;
"RTN","XOBWPB04",132,0)
   ;;]]></Content>
"RTN","XOBWPB04",133,0)
   ;;</UDLText>
"RTN","XOBWPB04",134,0)
   ;;
"RTN","XOBWPB04",135,0)
   ;;<Property name="loginRequired">
"RTN","XOBWPB04",136,0)
   ;;<Type>%Boolean</Type>
"RTN","XOBWPB04",137,0)
   ;;<SqlFieldName>loginRequired</SqlFieldName>
"RTN","XOBWPB04",138,0)
   ;;</Property>
"RTN","XOBWPB04",139,0)
   ;;
"RTN","XOBWPB04",140,0)
   ;;<Property name="password">
"RTN","XOBWPB04",141,0)
   ;;<Type>%String</Type>
"RTN","XOBWPB04",142,0)
   ;;<Private>1</Private>
"RTN","XOBWPB04",143,0)
   ;;<SqlFieldName>password</SqlFieldName>
"RTN","XOBWPB04",144,0)
   ;;<Parameter name="TRUNCATE" value="1"/>
"RTN","XOBWPB04",145,0)
   ;;</Property>
"RTN","XOBWPB04",146,0)
   ;;
"RTN","XOBWPB04",147,0)
   ;;<Property name="userName">
"RTN","XOBWPB04",148,0)
   ;;<Type>%String</Type>
"RTN","XOBWPB04",149,0)
   ;;<SqlFieldName>userName</SqlFieldName>
"RTN","XOBWPB04",150,0)
   ;;<Parameter name="TRUNCATE" value="1"/>
"RTN","XOBWPB04",151,0)
   ;;</Property>
"RTN","XOBWPB04",152,0)
   ;;
"RTN","XOBWPB04",153,0)
   ;;<Property name="defaultTimeout">
"RTN","XOBWPB04",154,0)
   ;;<Type>%Integer</Type>
"RTN","XOBWPB04",155,0)
   ;;<InitialExpression>30</InitialExpression>
"RTN","XOBWPB04",156,0)
   ;;<SqlFieldName>defaultTimeout</SqlFieldName>
"RTN","XOBWPB04",157,0)
   ;;<Parameter name="MAXVAL" value="7200"/>
"RTN","XOBWPB04",158,0)
   ;;<Parameter name="MINVAL" value="5"/>
"RTN","XOBWPB04",159,0)
   ;;</Property>
"RTN","XOBWPB04",160,0)
   ;;
"RTN","XOBWPB04",161,0)
   ;;<Property name="sslEnabled">
"RTN","XOBWPB04",162,0)
   ;;<Type>%Boolean</Type>
"RTN","XOBWPB04",163,0)
   ;;<SqlFieldName>sslEnabled</SqlFieldName>
"RTN","XOBWPB04",164,0)
   ;;</Property>
"RTN","XOBWPB04",165,0)
   ;;
"RTN","XOBWPB04",166,0)
   ;;<Property name="sslConfiguration">
"RTN","XOBWPB04",167,0)
   ;;<Type>%String</Type>
"RTN","XOBWPB04",168,0)
   ;;<SqlFieldName>sslConfiguration</SqlFieldName>
"RTN","XOBWPB04",169,0)
   ;;<Parameter name="TRUNCATE" value="1"/>
"RTN","XOBWPB04",170,0)
   ;;</Property>
"RTN","XOBWPB04",171,0)
   ;;
"RTN","XOBWPB04",172,0)
   ;;<Property name="sslPort">
"RTN","XOBWPB04",173,0)
   ;;<Type>%String</Type>
"RTN","XOBWPB04",174,0)
   ;;<SqlFieldName>sslPort</SqlFieldName>
"RTN","XOBWPB04",175,0)
   ;;<Parameter name="TRUNCATE" value="1"/>
"RTN","XOBWPB04",176,0)
   ;;</Property>
"RTN","XOBWPB04",177,0)
   ;;
"RTN","XOBWPB04",178,0)
   ;;<UDLText name="T">
"RTN","XOBWPB04",179,0)
   ;;<Content><![CDATA[
"RTN","XOBWPB04",180,0)
   ;;// for ISS use ------------------------
"RTN","XOBWPB04",181,0)
   ;;
"RTN","XOBWPB04",182,0)
   ;;]]></Content>
"RTN","XOBWPB04",183,0)
   ;;</UDLText>
"RTN","XOBWPB04",184,0)
   ;;
"RTN","XOBWPB04",185,0)
   ;;<Property name="authorizedWebServices">
"RTN","XOBWPB04",186,0)
   ;;<Type>xobw.WebServicesAuthorized</Type>
"RTN","XOBWPB04",187,0)
   ;;<Cardinality>children</Cardinality>
"RTN","XOBWPB04",188,0)
   ;;<Inverse>webServerRef</Inverse>
"RTN","XOBWPB04",189,0)
   ;;<Relationship>1</Relationship>
"RTN","XOBWPB04",190,0)
   ;;</Property>
"RTN","XOBWPB04",191,0)
   ;;
"RTN","XOBWPB04",192,0)
   ;;<Property name="status">
"RTN","XOBWPB04",193,0)
   ;;<Type>%Boolean</Type>
"RTN","XOBWPB04",194,0)
   ;;<Collection/>
"RTN","XOBWPB04",195,0)
   ;;<Relationship>0</Relationship>
"RTN","XOBWPB04",196,0)
   ;;</Property>
"RTN","XOBWPB04",197,0)
   ;;
"RTN","XOBWPB04",198,0)
   ;;<Method name="getPassword">
"RTN","XOBWPB04",199,0)
   ;;<ReturnType>%String</ReturnType>
"RTN","XOBWPB04",200,0)
   ;;<Implementation><![CDATA[ quit $$DECRYP^XOBWPWD(..password)
"RTN","XOBWPB04",201,0)
   ;;]]></Implementation>
"RTN","XOBWPB04",202,0)
   ;;</Method>
"RTN","XOBWPB04",203,0)
   ;;
"RTN","XOBWPB04",204,0)
   ;;<Method name="checkWebServicesAvailability">
"RTN","XOBWPB04",205,0)
   ;;<FormalSpec>dots:%String</FormalSpec>
"RTN","XOBWPB04",206,0)
   ;;<ReturnType>%Library.ListOfDataTypes</ReturnType>
"RTN","XOBWPB04",207,0)
   ;;<Implementation><![CDATA[
"RTN","XOBWPB04",208,0)
   ;; set key = ""
"RTN","XOBWPB04",209,0)
   ;; set count=0
"RTN","XOBWPB04",210,0)
   ;; set result=##class(%ListOfDataTypes).%New()
"RTN","XOBWPB04",211,0)
   ;;
"RTN","XOBWPB04",212,0)
   ;; // if server is disabled, stop
"RTN","XOBWPB04",213,0)
   ;; if '..status {
"RTN","XOBWPB04",214,0)
   ;;  do result.Insert("")
"RTN","XOBWPB04",215,0)
   ;;  do result.Insert(" o Web server is disabled")
"RTN","XOBWPB04",216,0)
   ;;  do result.Insert("")
"RTN","XOBWPB04",217,0)
   ;;  quit result
"RTN","XOBWPB04",218,0)
   ;; }
"RTN","XOBWPB04",219,0)
   ;;
"RTN","XOBWPB04",220,0)
   ;; // loop thru web services credentials defined for server and build list output
"RTN","XOBWPB04",221,0)
   ;; // mainly for ListMan consumption (AVAIL^XOBWUT1)
"RTN","XOBWPB04",222,0)
   ;; do {
"RTN","XOBWPB04",223,0)
   ;;  set authorizedWebService = ..authorizedWebServices.GetNext(.key)
"RTN","XOBWPB04",224,0)
   ;;  if $get(dots) write "."
"RTN","XOBWPB04",225,0)
   ;;  set count=count+1
"RTN","XOBWPB04",226,0)
   ;;  if (authorizedWebService '= $$$NULLOREF) {
"RTN","XOBWPB04",227,0)
   ;;   set webService=##class(xobw.WebServiceMetadata).%OpenId(authorizedWebService.webServiceIen)
"RTN","XOBWPB04",228,0)
   ;;   if (authorizedWebService.status) {
"RTN","XOBWPB04",229,0)
   ;;    if ((webService.type=1) || (webService.type=2)) {
"RTN","XOBWPB04",230,0)
   ;;     if ##class(xobw.WebServiceMetadata).checkResourceAvailability(##this,authorizedWebService,webService,.httpStatusCode) {
"RTN","XOBWPB04",231,0)
   ;;      do result.Insert(count_" "_webService.name_" is available")
"RTN","XOBWPB04",232,0)
   ;;     } else {
"RTN","XOBWPB04",233,0)
   ;;      do result.Insert(count_" Unable to retrieve '"_webService.availResource_"' for "_webService.name)
"RTN","XOBWPB04",234,0)
   ;;      //
"RTN","XOBWPB04",235,0)
   ;;      // the following lines will report spurious %objlasterror errors.
"RTN","XOBWPB04",236,0)
   ;;      // supposed to be fixed in Cache 5.1+.
"RTN","XOBWPB04",237,0)
   ;;      // 
"RTN","XOBWPB04",238,0)
   ;;      if ($data(%objlasterror)'=0) {
"RTN","XOBWPB04",239,0)
   ;;       do $system.Status.DecomposeStatus(%objlasterror,.err)
"RTN","XOBWPB04",240,0)
   ;;       set x=$get(err(1)," o no reason available")
"RTN","XOBWPB04",241,0)
   ;;       set length=$length(x)
"RTN","XOBWPB04",242,0)
   ;;       do result.Insert(" o "_$extract(x,1,70))
"RTN","XOBWPB04",243,0)
   ;;       set x=$extract(x,71,length)
"RTN","XOBWPB04",244,0)
   ;;       while (x'="") {
"RTN","XOBWPB04",245,0)
   ;;        do result.Insert(" "_$extract(x,1,70))
"RTN","XOBWPB04",246,0)
   ;;        set x=$extract(x,71,length)
"RTN","XOBWPB04",247,0)
   ;;       } // while
"RTN","XOBWPB04",248,0)
   ;;       // if there is a status code, show it
"RTN","XOBWPB04",249,0)
   ;;       if $get(httpStatusCode)]"" do result.Insert(" o HTTP Response Status Code: "_httpStatusCode)
"RTN","XOBWPB04",250,0)
   ;;      } else {
"RTN","XOBWPB04",251,0)
   ;;       do result.Insert(" o HTTP Response Status Code: "_$get(httpStatusCode,"<no status code available>"))
"RTN","XOBWPB04",252,0)
   ;;      } // %objlasterror 
"RTN","XOBWPB04",253,0)
   ;;     } // resource availability
"RTN","XOBWPB04",254,0)
   ;;    } else {
"RTN","XOBWPB04",255,0)
   ;;     do result.Insert(count_" "_webService.name_" is not a valid web service type ["_webservice.type_"]")
"RTN","XOBWPB04",256,0)
   ;;    } // not valid type (rare and should not occur)
"RTN","XOBWPB04",257,0)
   ;;   } else {
"RTN","XOBWPB04",258,0)
   ;;    do result.Insert(count_" "_webService.name_" is not enabled")
"RTN","XOBWPB04",259,0)
   ;;   } // authorizedWebService.status
"RTN","XOBWPB04",260,0)
   ;;  } // authorizedWebService
"RTN","XOBWPB04",261,0)
   ;; } while (key '= "")
"RTN","XOBWPB04",262,0)
   ;; quit result
"RTN","XOBWPB04",263,0)
   ;;]]></Implementation>
"RTN","XOBWPB04",264,0)
   ;;</Method>
"RTN","XOBWPB04",265,0)
   ;;
"RTN","XOBWPB04",266,0)
   ;;<Method name="getWebServerId">
"RTN","XOBWPB04",267,0)
   ;;<ClassMethod>1</ClassMethod>
"RTN","XOBWPB04",268,0)
   ;;<FormalSpec>name:%String</FormalSpec>
"RTN","XOBWPB04",269,0)
   ;;<ReturnType>%String</ReturnType>
"RTN","XOBWPB04",270,0)
   ;;<Implementation><![CDATA[
"RTN","XOBWPB04",271,0)
   ;; if $get(name)="" {
"RTN","XOBWPB04",272,0)
   ;;     do ##class(xobw.error.DialogError).forceError(186005_"^<empty string>")
"RTN","XOBWPB04",273,0)
   ;; }
"RTN","XOBWPB04",274,0)
   ;; quit +$order(^XOB(18.12,"B",name,0))
"RTN","XOBWPB04",275,0)
   ;;]]></Implementation>
"RTN","XOBWPB04",276,0)
   ;;</Method>
"RTN","XOBWPB04",277,0)
   ;;
"RTN","XOBWPB04",278,0)
   ;;<Method name="setUpHttpRequest">
"RTN","XOBWPB04",279,0)
   ;;<FormalSpec>httpRequest:%Net.HttpRequest</FormalSpec>
"RTN","XOBWPB04",280,0)
   ;;<Implementation><![CDATA[
"RTN","XOBWPB04",281,0)
   ;; if (..sslEnabled && ('$$SSLOK^XOBWENV())) {
"RTN","XOBWPB04",282,0)
   ;;  do ##class(xobw.error.DialogError).forceError(186002_"^"_..name_" (SSL is disabled on VMS)")
"RTN","XOBWPB04",283,0)
   ;; }
"RTN","XOBWPB04",284,0)
   ;; if (..sslEnabled) {
"RTN","XOBWPB04",285,0)
   ;;  set httpRequest.Https=1
"RTN","XOBWPB04",286,0)
   ;;  set httpRequest.SSLConfiguration=..sslConfiguration
"RTN","XOBWPB04",287,0)
   ;;  set httpRequest.Port=..sslPort
"RTN","XOBWPB04",288,0)
   ;;  set httpRequest.SSLCheckServerIdentity = 0
"RTN","XOBWPB04",289,0)
   ;; } else {
"RTN","XOBWPB04",290,0)
   ;;  set httpRequest.Port=..port
"RTN","XOBWPB04",291,0)
   ;; }
"RTN","XOBWPB04",292,0)
   ;; // common setting
"RTN","XOBWPB04",293,0)
   ;; set httpRequest.Server=..server
"RTN","XOBWPB04",294,0)
   ;; set httpRequest.Timeout=..defaultTimeout
"RTN","XOBWPB04",295,0)
   ;; quit
"RTN","XOBWPB04",296,0)
   ;;]]></Implementation>
"RTN","XOBWPB04",297,0)
   ;;</Method>
"RTN","XOBWPB04",298,0)
   ;;
"RTN","XOBWPB04",299,0)
   ;;<Method name="defaultTimeoutGet">
"RTN","XOBWPB04",300,0)
   ;;<ReturnType>%Integer</ReturnType>
"RTN","XOBWPB04",301,0)
   ;;<Implementation><![CDATA[ quit $select(i%defaultTimeout:i%defaultTimeout,1:30)
"RTN","XOBWPB04",302,0)
   ;;]]></Implementation>
"RTN","XOBWPB04",303,0)
   ;;</Method>
"RTN","XOBWPB04",304,0)
   ;;
"RTN","XOBWPB04",305,0)
   ;;<Storage name="WebServerStorage">
"RTN","XOBWPB04",306,0)
   ;;<Type>%CacheSQLStorage</Type>
"RTN","XOBWPB04",307,0)
   ;;<StreamLocation>^xobw.WebServerS</StreamLocation>
"RTN","XOBWPB04",308,0)
   ;;<ExtentSize>100000</ExtentSize>
"RTN","XOBWPB04",309,0)
   ;;<SQLMap name="MasterMap">
"RTN","XOBWPB04",310,0)
   ;;<Type>data</Type>
"RTN","XOBWPB04",311,0)
   ;;<Global>^XOB</Global>
"RTN","XOBWPB04",312,0)
   ;;<Subscript name="1">
"RTN","XOBWPB04",313,0)
   ;;<Expression>18.12</Expression>
"RTN","XOBWPB04",314,0)
   ;;</Subscript>
"RTN","XOBWPB04",315,0)
   ;;<Subscript name="2">
"RTN","XOBWPB04",316,0)
   ;;<Expression>{ien}</Expression>
"RTN","XOBWPB04",317,0)
   ;;<LoopInitValue>0</LoopInitValue>
"RTN","XOBWPB04",318,0)
   ;;<StopExpression>'+{L2}</StopExpression>
"RTN","XOBWPB04",319,0)
   ;;</Subscript>
"RTN","XOBWPB04",320,0)
   ;;<RowIdSpec name="1">
"RTN","XOBWPB04",321,0)
   ;;<Expression>{L2}</Expression>
"RTN","XOBWPB04",322,0)
   ;;<Field>ien</Field>
"RTN","XOBWPB04",323,0)
   ;;</RowIdSpec>
"RTN","XOBWPB04",324,0)
   ;;<Data name="defaultTimeout">
"RTN","XOBWPB04",325,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",326,0)
   ;;<Node>0</Node>
"RTN","XOBWPB04",327,0)
   ;;<Piece>7</Piece>
"RTN","XOBWPB04",328,0)
   ;;</Data>
"RTN","XOBWPB04",329,0)
   ;;<Data name="loginRequired">
"RTN","XOBWPB04",330,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",331,0)
   ;;<Node>1</Node>
"RTN","XOBWPB04",332,0)
   ;;<Piece>1</Piece>
"RTN","XOBWPB04",333,0)
   ;;</Data>
"RTN","XOBWPB04",334,0)
   ;;<Data name="name">
"RTN","XOBWPB04",335,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",336,0)
   ;;<Node>0</Node>
"RTN","XOBWPB04",337,0)
   ;;<Piece>1</Piece>
"RTN","XOBWPB04",338,0)
   ;;</Data>
"RTN","XOBWPB04",339,0)
   ;;<Data name="password">
"RTN","XOBWPB04",340,0)
   ;;<Node>300</Node>
"RTN","XOBWPB04",341,0)
   ;;</Data>
"RTN","XOBWPB04",342,0)
   ;;<Data name="port">
"RTN","XOBWPB04",343,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",344,0)
   ;;<Node>0</Node>
"RTN","XOBWPB04",345,0)
   ;;<Piece>3</Piece>
"RTN","XOBWPB04",346,0)
   ;;</Data>
"RTN","XOBWPB04",347,0)
   ;;<Data name="server">
"RTN","XOBWPB04",348,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",349,0)
   ;;<Node>0</Node>
"RTN","XOBWPB04",350,0)
   ;;<Piece>4</Piece>
"RTN","XOBWPB04",351,0)
   ;;</Data>
"RTN","XOBWPB04",352,0)
   ;;<Data name="sslConfiguration">
"RTN","XOBWPB04",353,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",354,0)
   ;;<Node>3</Node>
"RTN","XOBWPB04",355,0)
   ;;<Piece>2</Piece>
"RTN","XOBWPB04",356,0)
   ;;</Data>
"RTN","XOBWPB04",357,0)
   ;;<Data name="sslEnabled">
"RTN","XOBWPB04",358,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",359,0)
   ;;<Node>3</Node>
"RTN","XOBWPB04",360,0)
   ;;<Piece>1</Piece>
"RTN","XOBWPB04",361,0)
   ;;</Data>
"RTN","XOBWPB04",362,0)
   ;;<Data name="sslPort">
"RTN","XOBWPB04",363,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",364,0)
   ;;<Node>3</Node>
"RTN","XOBWPB04",365,0)
   ;;<Piece>3</Piece>
"RTN","XOBWPB04",366,0)
   ;;</Data>
"RTN","XOBWPB04",367,0)
   ;;<Data name="status">
"RTN","XOBWPB04",368,0)
   ;;<Delimiter>"^"</Delimiter>
"RTN","XOBWPB04",369,0)
   ;;<Node>0</Node>
"RTN","XOBWPB04",370,0)
   ;;<Piece>6</Piece>
"RTN","XOBWPB04",371,0)
   ;;</Data>
"RTN","XOBWPB04",372,0)
   ;;<Data name="userName">
"RTN","XOBWPB04",373,0)
   ;;<Node>200</Node>
"RTN","XOBWPB04",374,0)
   ;;</Data>
"RTN","XOBWPB04",375,0)
   ;;</SQLMap>
"RTN","XOBWPB04",376,0)
   ;;</Storage>
"RTN","XOBWPB04",377,0)
   ;;</Class>
"RTN","XOBWPB04",378,0)
   ;;</Export>
"VER")
8.0^22.0
"BLD",1567,6)
^4
**END**
**END**

