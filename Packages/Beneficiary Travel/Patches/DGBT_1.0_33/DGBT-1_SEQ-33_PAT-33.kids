Released DGBT*1*33 SEQ #33
Extracted from mail message
**KIDS**:DGBT*1.0*33^

**INSTALL NAME**
DGBT*1.0*33
"BLD",10720,0)
DGBT*1.0*33^BENEFICIARY TRAVEL^0^3171017^y
"BLD",10720,1,0)
^^7^7^3171017^^
"BLD",10720,1,1,0)
This patch addresses 3 issues:
"BLD",10720,1,2,0)
  
"BLD",10720,1,3,0)
    1. The mileage fee cap is too low.
"BLD",10720,1,4,0)
    
"BLD",10720,1,5,0)
    2. The Beneficiary Travel denial letter template is incorrect.
"BLD",10720,1,6,0)
  
"BLD",10720,1,7,0)
    3. The Beneficiary Travel application is running slow. 
"BLD",10720,4,0)
^9.64PA^392^1
"BLD",10720,4,392,0)
392
"BLD",10720,4,392,2,0)
^9.641^392^1
"BLD",10720,4,392,2,392,0)
BENEFICIARY TRAVEL CLAIM  (File-top level)
"BLD",10720,4,392,2,392,1,0)
^9.6411^63^3
"BLD",10720,4,392,2,392,1,60,0)
TOTAL INVOICE AMOUNT
"BLD",10720,4,392,2,392,1,62,0)
MILEAGE FEE
"BLD",10720,4,392,2,392,1,63,0)
NO SHOW/NO LOAD FEE
"BLD",10720,4,392,222)
y^n^p^^^^n^^n
"BLD",10720,4,392,224)

"BLD",10720,4,"APDD",392,392)

"BLD",10720,4,"APDD",392,392,60)

"BLD",10720,4,"APDD",392,392,62)

"BLD",10720,4,"APDD",392,392,63)

"BLD",10720,4,"B",392,392)

"BLD",10720,6.3)
2
"BLD",10720,"ABPKG")
n
"BLD",10720,"KRN",0)
^9.67PA^779.2^20
"BLD",10720,"KRN",.4,0)
.4
"BLD",10720,"KRN",.401,0)
.401
"BLD",10720,"KRN",.402,0)
.402
"BLD",10720,"KRN",.403,0)
.403
"BLD",10720,"KRN",.5,0)
.5
"BLD",10720,"KRN",.84,0)
.84
"BLD",10720,"KRN",3.6,0)
3.6
"BLD",10720,"KRN",3.8,0)
3.8
"BLD",10720,"KRN",9.2,0)
9.2
"BLD",10720,"KRN",9.8,0)
9.8
"BLD",10720,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",10720,"KRN",9.8,"NM",1,0)
DGBTDLT^^0^B117324818
"BLD",10720,"KRN",9.8,"NM",2,0)
DGBTDLT1^^0^B75949684
"BLD",10720,"KRN",9.8,"NM",3,0)
DGBTSP1^^0^B84184807
"BLD",10720,"KRN",9.8,"NM",4,0)
DGBTE1^^0^B32989295
"BLD",10720,"KRN",9.8,"NM","B","DGBTDLT",1)

"BLD",10720,"KRN",9.8,"NM","B","DGBTDLT1",2)

"BLD",10720,"KRN",9.8,"NM","B","DGBTE1",4)

"BLD",10720,"KRN",9.8,"NM","B","DGBTSP1",3)

"BLD",10720,"KRN",19,0)
19
"BLD",10720,"KRN",19.1,0)
19.1
"BLD",10720,"KRN",101,0)
101
"BLD",10720,"KRN",409.61,0)
409.61
"BLD",10720,"KRN",771,0)
771
"BLD",10720,"KRN",779.2,0)
779.2
"BLD",10720,"KRN",870,0)
870
"BLD",10720,"KRN",8989.51,0)
8989.51
"BLD",10720,"KRN",8989.52,0)
8989.52
"BLD",10720,"KRN",8994,0)
8994
"BLD",10720,"KRN","B",.4,.4)

"BLD",10720,"KRN","B",.401,.401)

"BLD",10720,"KRN","B",.402,.402)

"BLD",10720,"KRN","B",.403,.403)

"BLD",10720,"KRN","B",.5,.5)

"BLD",10720,"KRN","B",.84,.84)

"BLD",10720,"KRN","B",3.6,3.6)

"BLD",10720,"KRN","B",3.8,3.8)

"BLD",10720,"KRN","B",9.2,9.2)

"BLD",10720,"KRN","B",9.8,9.8)

"BLD",10720,"KRN","B",19,19)

"BLD",10720,"KRN","B",19.1,19.1)

"BLD",10720,"KRN","B",101,101)

"BLD",10720,"KRN","B",409.61,409.61)

"BLD",10720,"KRN","B",771,771)

"BLD",10720,"KRN","B",779.2,779.2)

"BLD",10720,"KRN","B",870,870)

"BLD",10720,"KRN","B",8989.51,8989.51)

"BLD",10720,"KRN","B",8989.52,8989.52)

"BLD",10720,"KRN","B",8994,8994)

"BLD",10720,"QDEF")
^^^^^^^^^^YES
"BLD",10720,"QUES",0)
^9.62^^
"BLD",10720,"REQB",0)
^9.611^1^1
"BLD",10720,"REQB",1,0)
DGBT*1.0*28^2
"BLD",10720,"REQB","B","DGBT*1.0*28",1)

"FIA",392)
BENEFICIARY TRAVEL CLAIM
"FIA",392,0)
^DGBT(392,
"FIA",392,0,0)
392ID
"FIA",392,0,1)
y^n^p^^^^n^^n
"FIA",392,0,10)

"FIA",392,0,11)

"FIA",392,0,"RLRO")

"FIA",392,0,"VR")
1.0^DGBT
"FIA",392,392)
1
"FIA",392,392,60)

"FIA",392,392,62)

"FIA",392,392,63)

"MBREQ")
0
"PKG",154,-1)
1^1
"PKG",154,0)
BENEFICIARY TRAVEL^DGBT^Beneficiary Travel
"PKG",154,20,0)
^9.402P^^
"PKG",154,22,0)
^9.49I^1^1
"PKG",154,22,1,0)
1.0^3030731^3020423^66481
"PKG",154,22,1,"PAH",1,0)
33^3171017
"PKG",154,22,1,"PAH",1,1,0)
^^7^7^3171017
"PKG",154,22,1,"PAH",1,1,1,0)
This patch addresses 3 issues:
"PKG",154,22,1,"PAH",1,1,2,0)
  
"PKG",154,22,1,"PAH",1,1,3,0)
    1. The mileage fee cap is too low.
"PKG",154,22,1,"PAH",1,1,4,0)
    
"PKG",154,22,1,"PAH",1,1,5,0)
    2. The Beneficiary Travel denial letter template is incorrect.
"PKG",154,22,1,"PAH",1,1,6,0)
  
"PKG",154,22,1,"PAH",1,1,7,0)
    3. The Beneficiary Travel application is running slow. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","DGBTDLT")
0^1^B117324818^B117344435
"RTN","DGBTDLT",1,0)
DGBTDLT ;BLD-BENEFICIARY TRAVEL DENIAL LETTER TEMPLATES; 03/04/2012@1400; 03/04/2012
"RTN","DGBTDLT",2,0)
 ;;1.0;Beneficiary Travel;**20,33**;March 4, 2012;Build 2
"RTN","DGBTDLT",3,0)
 ;
"RTN","DGBTDLT",4,0)
EN ;entry point for denial letter templates.
"RTN","DGBTDLT",5,0)
 ;
"RTN","DGBTDLT",6,0)
 N IEN,CNT,TMP,DGBTINST,COUNTER,DGBTDIVI,DGBTDIVN,QUIT,DGIEN,DGIEN2,DGBTLTR
"RTN","DGBTDLT",7,0)
 ;
"RTN","DGBTDLT",8,0)
 K ^TMP("DGBTDLT",$J)
"RTN","DGBTDLT",9,0)
 S QUIT=0
"RTN","DGBTDLT",10,0)
 ;
"RTN","DGBTDLT",11,0)
 W @IOF
"RTN","DGBTDLT",12,0)
 S QUIT=0
"RTN","DGBTDLT",13,0)
 F  D  Q:$G(QUIT)
"RTN","DGBTDLT",14,0)
 .D MENU(.DGIEN) Q:$G(QUIT)                               ;this will allow the user to choose which letter to edit.
"RTN","DGBTDLT",15,0)
 .D EDIT                                ;this will bring of the screen editor for denial letter(s)
"RTN","DGBTDLT",16,0)
 ;
"RTN","DGBTDLT",17,0)
 Q
"RTN","DGBTDLT",18,0)
 ;
"RTN","DGBTDLT",19,0)
MENU(DGIEN) ;allow user to select which letter to edit
"RTN","DGBTDLT",20,0)
 ;
"RTN","DGBTDLT",21,0)
 S DIR("A")="SELECT TEMPLATE TYPE"
"RTN","DGBTDLT",22,0)
 S DIR("L",1)="CHOOSE FROM:"
"RTN","DGBTDLT",23,0)
 S DIR("L",2)="MILEAGE DENIAL TEMPLATE"
"RTN","DGBTDLT",24,0)
 S DIR("L",3)="SPECIAL MODE DENIAL TEMPLATE"
"RTN","DGBTDLT",25,0)
 S DIR("?")="ENTER EITHER 'M' FOR MILEAGE DENIAL TEMPLATE OR 'S' FOR SPECIAL MODE DENIAL TEMPLATE"
"RTN","DGBTDLT",26,0)
 S DIR(0)="S^M:MILEAGE DENIAL TEMPLATE;S:SPECIAL MODE DENIAL TEMPLATE"
"RTN","DGBTDLT",27,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S QUIT=1 Q
"RTN","DGBTDLT",28,0)
 S DGBTLTR("LETTER TYPE")=$P(Y,",",1)
"RTN","DGBTDLT",29,0)
 ;
"RTN","DGBTDLT",30,0)
 I DGBTLTR("LETTER TYPE")="M" D  Q
"RTN","DGBTDLT",31,0)
 .S DIR("A")="SELECT WHICH MILEAGE LETTER"
"RTN","DGBTDLT",32,0)
 .S DIR("L",1)="CHOOSE FROM: "
"RTN","DGBTDLT",33,0)
 .S DIR("L",2)="MILEAGE TEMPLATE PART 1"
"RTN","DGBTDLT",34,0)
 .S DIR("L",3)="MILEAGE TEMPLATE PART 2"
"RTN","DGBTDLT",35,0)
 .S DIR("?")="PART 1 IS THE TOP HALF OF THE LETTER BEFORE DENIAL REASON. AND PART 2 IS THE BOTTOM HALF OF THE LETTER AFTER THE DENIAL REASON"
"RTN","DGBTDLT",36,0)
 .S DIR(0)="S^1:MILEAGE TEMPLATE 1;2:MILEAGE TEMPLATE 2"
"RTN","DGBTDLT",37,0)
 .D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S QUIT=1 Q
"RTN","DGBTDLT",38,0)
 .S DGIEN=+Y
"RTN","DGBTDLT",39,0)
 ;
"RTN","DGBTDLT",40,0)
 I DGBTLTR("LETTER TYPE")="S" D
"RTN","DGBTDLT",41,0)
 .S DIR("A")="SELECT WHICH SPECIAL MODE LETTER"
"RTN","DGBTDLT",42,0)
 .S DIR("L",1)="CHOOSE FROM: "
"RTN","DGBTDLT",43,0)
 .S DIR("L",2)="SPECIAL MODE TEMPLATE PART 1"
"RTN","DGBTDLT",44,0)
 .S DIR("L",3)="SPECIAL MODE TEMPLATE PART 2"
"RTN","DGBTDLT",45,0)
 .S DIR("?")="PART 1 IS THE TOP HALF OF THE LETTER BEFORE DENIAL REASON. AND PART 2 IS THE BOTTOM HALF OF THE LETTER AFTER THE DENIAL REASON"
"RTN","DGBTDLT",46,0)
 .S DIR(0)="S^1:SPECIAL MODE TEMPLATE 1;2:SPECIAL MODE TEMPLATE 2"
"RTN","DGBTDLT",47,0)
 .D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S QUIT=1 Q
"RTN","DGBTDLT",48,0)
 .S DGIEN=$S(+Y=1:3,1:4)
"RTN","DGBTDLT",49,0)
 ;
"RTN","DGBTDLT",50,0)
 Q
"RTN","DGBTDLT",51,0)
 ;
"RTN","DGBTDLT",52,0)
SETUP(DGIEN) ;this will set up ^TMP global for editing
"RTN","DGBTDLT",53,0)
 S CNT=0,COUNTER=0
"RTN","DGBTDLT",54,0)
 F  S CNT=$O(^DGBT(392.6,DGIEN,1,CNT)) Q:'CNT  D
"RTN","DGBTDLT",55,0)
 .S COUNTER=COUNTER+1
"RTN","DGBTDLT",56,0)
 .S ^TMP("DGBTDLT",$J,COUNTER)=^DGBT(392.6,DGIEN,1,CNT,0)
"RTN","DGBTDLT",57,0)
 Q
"RTN","DGBTDLT",58,0)
 ;
"RTN","DGBTDLT",59,0)
EDIT ;this will invoke the screen editor
"RTN","DGBTDLT",60,0)
 ;
"RTN","DGBTDLT",61,0)
 K ^TMP($J,"DGBTDLT"),DWPK,DIC,DIWESUB,DIWETXT
"RTN","DGBTDLT",62,0)
 S DWPK=1
"RTN","DGBTDLT",63,0)
 S DGIEN2=$S(DGIEN=3!(DGIEN=4):3,1:1)
"RTN","DGBTDLT",64,0)
 S DIC="^DGBT(392.6,DGIEN,DGIEN2,"
"RTN","DGBTDLT",65,0)
 S DIWESUB="MILEAGE DENIAL LETTER"
"RTN","DGBTDLT",66,0)
 S DIWETXT="MILEAGE DENIAL LETTER TEMPLATE PART "_DGIEN
"RTN","DGBTDLT",67,0)
 D EN^DIWE
"RTN","DGBTDLT",68,0)
 Q
"RTN","DGBTDLT",69,0)
 ;
"RTN","DGBTDLT",70,0)
 ;************************************************************************************************************
"RTN","DGBTDLT",71,0)
 ;                              THIS WILL PRINT DENIAL LETTERS
"RTN","DGBTDLT",72,0)
 ;************************************************************************************************************
"RTN","DGBTDLT",73,0)
 ;
"RTN","DGBTDLT",74,0)
DGBTDR ;will ask for the denial reason
"RTN","DGBTDLT",75,0)
 ;
"RTN","DGBTDLT",76,0)
 N DRIEN,REASON,LETTERS1,LETTERS2,LINENBR,NBR,DGBTDNLTR,DGBTFDA,DGBTSCR,DGBTDR,DGBTISSUED,VADM,PATSEX,PATADD1,PATADD2,PATCITY,PATST,PATZIP,PATNAME
"RTN","DGBTDLT",77,0)
 W !
"RTN","DGBTDLT",78,0)
 K ^UTILITY($J,"W")
"RTN","DGBTDLT",79,0)
 S QUIT=0
"RTN","DGBTDLT",80,0)
 ;
"RTN","DGBTDLT",81,0)
 S SPCOMPLETE=1
"RTN","DGBTDLT",82,0)
 ;
"RTN","DGBTDLT",83,0)
 S DGBTDL("ISSUED")=$$GET1^DIQ(392,DGBTDTI,45,"I")
"RTN","DGBTDLT",84,0)
 S DGBTDL("ISSUED DATE")=$$GET1^DIQ(392,DGBTDTI,45.1)
"RTN","DGBTDLT",85,0)
 S DGBTDL("CLAIM DENIED")=$$GET1^DIQ(392,DGBTDTI,45.2)
"RTN","DGBTDLT",86,0)
 S DGBTDL("DT DENIED")=$$GET1^DIQ(392,DGBTDTI,45.3)
"RTN","DGBTDLT",87,0)
 S DGBTDL("DENIED REASON")=$$GET1^DIQ(392,DGBTDTI,45.4)
"RTN","DGBTDLT",88,0)
 ;
"RTN","DGBTDLT",89,0)
 K Y
"RTN","DGBTDLT",90,0)
 F  D  Q:+Y>0!($G(DGBTTOUT)=-1)
"RTN","DGBTDLT",91,0)
 .K X,DGBTTOUT S X=""
"RTN","DGBTDLT",92,0)
 .S DIC("B")=$$GET1^DIQ(392,DGBTDT,45.4),DIC("A")="Select Denial Reason: "
"RTN","DGBTDLT",93,0)
 .S DIC="^DGBT(392.8,",DIC(0)="AEQMZ"
"RTN","DGBTDLT",94,0)
 .I DGBTCMTY="M" S DIC("S")="I $P(^(0),1)'[""MEDICAL REVIEW"""
"RTN","DGBTDLT",95,0)
 .D ^DIC K DIC I $D(DTOUT)!($D(DUOUT)) S DGBTTOUT=-1,SPCOMPLETE=0 K DTOUT,DUOUT Q
"RTN","DGBTDLT",96,0)
 .I Y<0 W !!,"Denial Reason Required. '^' to exit.",! Q
"RTN","DGBTDLT",97,0)
 Q:Y<0!($G(DGBTTOUT)=-1)
"RTN","DGBTDLT",98,0)
 S DRIEN=+Y
"RTN","DGBTDLT",99,0)
 S DGBTDL("DENIED REASON")=$$GET1^DIQ(392.8,DRIEN,.01)
"RTN","DGBTDLT",100,0)
 S DGBTDL("CLAIM DENIED")="YES"
"RTN","DGBTDLT",101,0)
 S DGBTDL("DT DENIED")=$S(DGBTDL("DT DENIED")="":$$FMTE^XLFDT(DT),1:DGBTDL("DT DENIED"))
"RTN","DGBTDLT",102,0)
 ;
"RTN","DGBTDLT",103,0)
 ;
"RTN","DGBTDLT",104,0)
 S DIR("B")=$$GET1^DIQ(392,DGBTDT,45)
"RTN","DGBTDLT",105,0)
 S DIR(0)="Y^A",DIR("A")="ISSUE DENIAL OF BENEFITS LETTER"
"RTN","DGBTDLT",106,0)
 S DIR("?")="ENTER 'YES' OR 'NO'"
"RTN","DGBTDLT",107,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S DGBTTOUT=-1,SPCOMPLETE=0 K DTOUT,DUOUT Q
"RTN","DGBTDLT",108,0)
 ; 
"RTN","DGBTDLT",109,0)
 I +Y=1 S DGBTDL("ISSUED DATE")=$S(DGBTDL("ISSUED DATE")="":$$FMTE^XLFDT(DT),1:DGBTDL("ISSUED DATE")),DGBTDL("ISSUED")="YES"
"RTN","DGBTDLT",110,0)
 I +Y'=1 S DGBTDL("ISSUED")="NO" D CLRLTR(1) S QUIT=1 S:$G(DGBTISSUED)=-1 DGBTTOUT=$G(DGBTISSUED),SPCOMPLETE=0 Q
"RTN","DGBTDLT",111,0)
 ;
"RTN","DGBTDLT",112,0)
 S DGBTDNLTR=DGBTDL("ISSUED")
"RTN","DGBTDLT",113,0)
 ;
"RTN","DGBTDLT",114,0)
 W !!
"RTN","DGBTDLT",115,0)
 ;
"RTN","DGBTDLT",116,0)
 W @IOF
"RTN","DGBTDLT",117,0)
 S DGBTFDA(392,DGBTDTI_",",45)=DGBTDNLTR
"RTN","DGBTDLT",118,0)
 S DGBTFDA(392,DGBTDTI_",",45.1)=$S(DGBTDL("ISSUED DATE")'="":DGBTDL("ISSUED DATE"),1:$$FMTE^XLFDT(DT))
"RTN","DGBTDLT",119,0)
 S DGBTFDA(392,DGBTDTI_",",45.2)=1
"RTN","DGBTDLT",120,0)
 S DGBTFDA(392,DGBTDTI_",",45.3)=$S(DGBTDL("DT DENIED")'="":DGBTDL("DT DENIED"),1:$$FMTE^XLFDT(DT))
"RTN","DGBTDLT",121,0)
 S DGBTFDA(392,DGBTDTI_",",45.4)=$S(DGBTDL("DENIED REASON")'="":DGBTDL("DENIED REASON"),1:$$GET1^DIQ(392.8,DRIEN,.01))   ;Y(0)
"RTN","DGBTDLT",122,0)
 K ERRMSG D FILE^DIE("EKTS","DGBTFDA","ERRMSG") K DGBTFDA
"RTN","DGBTDLT",123,0)
 I $$GET1^DIQ(392.8,DRIEN,1,,"REASON")
"RTN","DGBTDLT",124,0)
 D DEVICE("DENIAL LETTER","LTR^DGBTDLT") I $D(DTOUT)!($D(DUOUT))!($G(SPCOMPLETE)=0) S QUIT=1,DGBTTOUT=-1 Q
"RTN","DGBTDLT",125,0)
 I $G(DGBTQ) Q
"RTN","DGBTDLT",126,0)
 D LTR
"RTN","DGBTDLT",127,0)
 Q
"RTN","DGBTDLT",128,0)
 ;
"RTN","DGBTDLT",129,0)
LTR ;
"RTN","DGBTDLT",130,0)
 ;
"RTN","DGBTDLT",131,0)
 N NAME,DGBTCDT,DIWL,DIWR
"RTN","DGBTDLT",132,0)
 K ^UTILITY($J,"W")
"RTN","DGBTDLT",133,0)
 D DIVISN(.DGBTINST)                            ;this will set up the DGBTINST array containing the current VA location address
"RTN","DGBTDLT",134,0)
 D HEADER(.DGBTINST)                            ;this will print the current VA location information
"RTN","DGBTDLT",135,0)
 S QUIT=1
"RTN","DGBTDLT",136,0)
 S DIWL=5   ;left margin
"RTN","DGBTDLT",137,0)
 S DIWR=75   ;right margin
"RTN","DGBTDLT",138,0)
 S DGBTCDT(1)=$P(DGBTDTE,"@",1)               ;date entered into file
"RTN","DGBTDLT",139,0)
 S NAME=$$GET1^DIQ(200,DUZ,.01),DGBTCDT(2)=$P(NAME,",",2)_" "_$P(NAME,",",1)           ;user name
"RTN","DGBTDLT",140,0)
 S DGBTCDT(3)=$$GET1^DIQ(200,DUZ,8)             ;user title
"RTN","DGBTDLT",141,0)
 ;
"RTN","DGBTDLT",142,0)
 I DGBTCMTY="M" D               ;for mileage claims
"RTN","DGBTDLT",143,0)
 .I $$GET1^DIQ(392.6,1,1,,"LETTERS1")
"RTN","DGBTDLT",144,0)
 .S LINENBR=0
"RTN","DGBTDLT",145,0)
 .F  S LINENBR=$O(LETTERS1(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT",146,0)
 ..S X=LETTERS1(LINENBR)
"RTN","DGBTDLT",147,0)
 .S NBR=0
"RTN","DGBTDLT",148,0)
 .F  S NBR=$O(REASON(NBR)) Q:'NBR  D  D ^DIWP
"RTN","DGBTDLT",149,0)
 ..S X=REASON(NBR)
"RTN","DGBTDLT",150,0)
 .I $$GET1^DIQ(392.6,2,1,,"LETTERS2")
"RTN","DGBTDLT",151,0)
 .F  S LINENBR=$O(LETTERS2(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT",152,0)
 ..S X=LETTERS2(LINENBR) Q:X=""
"RTN","DGBTDLT",153,0)
 .D ^DIWW
"RTN","DGBTDLT",154,0)
 ;
"RTN","DGBTDLT",155,0)
 K LETTERS1,LETTERS2
"RTN","DGBTDLT",156,0)
 I DGBTCMTY="S" D                        ;for Special Mode Claims
"RTN","DGBTDLT",157,0)
 .I $$GET1^DIQ(392.6,3,3,,"LETTERS1")
"RTN","DGBTDLT",158,0)
 .S LINENBR=0
"RTN","DGBTDLT",159,0)
 .F  S LINENBR=$O(LETTERS1(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT",160,0)
 ..S X=LETTERS1(LINENBR)
"RTN","DGBTDLT",161,0)
 .S NBR=0
"RTN","DGBTDLT",162,0)
 .F  S NBR=$O(REASON(NBR)) Q:'NBR  D  D ^DIWP
"RTN","DGBTDLT",163,0)
 ..S X=REASON(NBR)
"RTN","DGBTDLT",164,0)
 .I $$GET1^DIQ(392.6,4,3,,"LETTERS2")
"RTN","DGBTDLT",165,0)
 .F  S LINENBR=$O(LETTERS2(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT",166,0)
 ..S X=LETTERS2(LINENBR) Q:X=""
"RTN","DGBTDLT",167,0)
 .D ^DIWW
"RTN","DGBTDLT",168,0)
 .S SPCOMPLETE=1
"RTN","DGBTDLT",169,0)
 D:'IOST'["C-" ^%ZISC
"RTN","DGBTDLT",170,0)
 Q
"RTN","DGBTDLT",171,0)
 ;
"RTN","DGBTDLT",172,0)
HEADER(DGBTINST) ;this will print all of the standard information at the top of the letter. IT WILL NOT PRINT LOGO'S ETC
"RTN","DGBTDLT",173,0)
 ;
"RTN","DGBTDLT",174,0)
 I $G(DGBTINST("ORG NAME"))="" D  Q
"RTN","DGBTDLT",175,0)
 .W !!,"INSTITUTION INFORMATION IS UNAVAILABLE. PLEASE UPDATE USING THE INSTITUTION FILE ENTER/EDIT."
"RTN","DGBTDLT",176,0)
 N ORG,ADD1,ADD2,CITY,STATE,ZIP,INSTNAME,LOC,LOC2,DGBTDTFILED
"RTN","DGBTDLT",177,0)
 ;
"RTN","DGBTDLT",178,0)
 S ORG=DGBTINST("ORG NAME")
"RTN","DGBTDLT",179,0)
 S INSTNAME=DGBTINST("INST NAME")
"RTN","DGBTDLT",180,0)
 S ADD1=DGBTINST("INST ADDRESS 1")
"RTN","DGBTDLT",181,0)
 S ADD2=DGBTINST("INST ADDRESS 2")
"RTN","DGBTDLT",182,0)
 S CITY=DGBTINST("INST CITY")
"RTN","DGBTDLT",183,0)
 S STATE=DGBTINST("INST STATE")
"RTN","DGBTDLT",184,0)
 S ZIP=DGBTINST("INST ZIP CODE")
"RTN","DGBTDLT",185,0)
 ;
"RTN","DGBTDLT",186,0)
 D DEM^VADPT
"RTN","DGBTDLT",187,0)
 S PATSEX=$P(VADM(5),"^",1),PATSEX=$S(PATSEX="M":"Mr",1:"Ms")_". "
"RTN","DGBTDLT",188,0)
 S PATADD1=VAPA(1),PATADD2=VAPA(2)
"RTN","DGBTDLT",189,0)
 S PATCITY=VAPA(4)_", ",PATST=$P(VAPA(5),"^",2)_" ",PATZIP=VAPA(6)
"RTN","DGBTDLT",190,0)
 S PATNAME=VADM(1),PATNAME=$P(PATNAME,",",2)_" "_$P(PATNAME,",",1)
"RTN","DGBTDLT",191,0)
 ;
"RTN","DGBTDLT",192,0)
 S LOC2=5
"RTN","DGBTDLT",193,0)
 S LOC=80-$L(ORG) W !,?LOC/2,ORG
"RTN","DGBTDLT",194,0)
 S LOC=80-$L(INSTNAME) W !,?LOC/2,INSTNAME
"RTN","DGBTDLT",195,0)
 S LOC=80-$L(ADD1) W !,?LOC/2,ADD1
"RTN","DGBTDLT",196,0)
 I $G(ADD2)'="" S LOC=80-$L(ADD2) W !,?LOC/2,ADD2
"RTN","DGBTDLT",197,0)
 S CITYSTZIP=CITY_", "_STATE_" "_ZIP
"RTN","DGBTDLT",198,0)
 S LOC=80-$L(CITYSTZIP) W !,?LOC/2,CITYSTZIP,!
"RTN","DGBTDLT",199,0)
 ;S LOC=80-$L(DGBTDTE) W !?LOC,$P(DGBTDTE,"@",1)
"RTN","DGBTDLT",200,0)
 S DGBTDTFILED=$$GET1^DIQ(392,DGBTDTI,13,"E")
"RTN","DGBTDLT",201,0)
 S DGBTDTFILED=$S(DGBTDTFILED'="":DGBTDTFILED,1:DT)
"RTN","DGBTDLT",202,0)
 S DGBTDTFILED=$$FMTE^XLFDT(DGBTDTFILED)
"RTN","DGBTDLT",203,0)
 S LOC=80-$L(DGBTDTFILED) W !,?LOC,DGBTDTFILED
"RTN","DGBTDLT",204,0)
 W !,?LOC,DGBTINST("FAC NUMBER")
"RTN","DGBTDLT",205,0)
 W ?LOC,"/"_$S(DGBTINST("MAIL CODE")'="":DGBTINST("MAIL CODE"),1:"BT"),!
"RTN","DGBTDLT",206,0)
 W ?LOC,$E(VADM(1),1)_$E($P(VADM(2),"^",1),6,99)
"RTN","DGBTDLT",207,0)
 W !,?LOC2,$G(PATSEX),$G(PATNAME)
"RTN","DGBTDLT",208,0)
 W !,?LOC2,$G(PATADD1)
"RTN","DGBTDLT",209,0)
 W:$G(PATADD2)'="" !,?LOC2,PATADD2
"RTN","DGBTDLT",210,0)
 W !,?LOC2,PATCITY,PATST,PATZIP,!!
"RTN","DGBTDLT",211,0)
 ;
"RTN","DGBTDLT",212,0)
 Q
"RTN","DGBTDLT",213,0)
 ;
"RTN","DGBTDLT",214,0)
PATIENT ; patient lookup, quit if patient doesn't exist
"RTN","DGBTDLT",215,0)
 N VAEL
"RTN","DGBTDLT",216,0)
 S DGBTOLD=0   ;PAVEL DGBT*1*20
"RTN","DGBTDLT",217,0)
 I $D(DGANS) S DGANS="Q" Q   ;bld DGTB*1*20
"RTN","DGBTDLT",218,0)
 S DGBTTOUT="",DIC="^DPT(",DIC(0)="AEQMZ",DIC("A")="Select PATIENT: "
"RTN","DGBTDLT",219,0)
 W !! D ^DIC K DIC I +Y'>0 Q
"RTN","DGBTDLT",220,0)
 ; get patient information#, call return patient return variables routine and set whether new claim or not
"RTN","DGBTDLT",221,0)
 S DFN=+Y D 6^VADPT,PID^VADPT
"RTN","DGBTDLT",222,0)
 S DGBTNEW=$S($D(^DGBT(392,"C",DFN)):0,1:1)
"RTN","DGBTDLT",223,0)
 S SPCOMPLETE=0
"RTN","DGBTDLT",224,0)
 Q
"RTN","DGBTDLT",225,0)
 ;
"RTN","DGBTDLT",226,0)
DIVISN(DGBTINST) ; if MED CTR DIV file set up (first record) and record does not exist, write warning, kill variables, and exit
"RTN","DGBTDLT",227,0)
 I ($G(DGBTDIVI)'="")&($G(DGBTDIV)'="") D INSTIT(.DGBTINST) Q  ; RFE DGBT*1.0*20
"RTN","DGBTDLT",228,0)
 S DGBTDIVI=$O(^DG(40.8,0)),DGBTDIV=$P(^DG(40.8,DGBTDIVI,0),U) D INSTIT(.DGBTINST)
"RTN","DGBTDLT",229,0)
 Q
"RTN","DGBTDLT",230,0)
 ; 
"RTN","DGBTDLT",231,0)
INSTIT(DGBTINST) ;  check for pointer to institution file and for address information on institution
"RTN","DGBTDLT",232,0)
 N MAILCODE,INSTADD,INSTNODE
"RTN","DGBTDLT",233,0)
 S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTDLT",234,0)
 I 'DGBTDIVN W !!,"INSTITUTION HAS NOT BEEN DEFINED FOR ",$P(^(0),"^"),!,"USE THE ADT PARAMETER OPTION TO UPDATE",! Q
"RTN","DGBTDLT",235,0)
 I $D(^DIC(4,DGBTDIVN,0)),$S($D(^(1))#10=0:1,$P(^(1),"^",3)']"":1,1:0) W !!,"INSTITUTION ADDRESS NOT ENTERED.  PLEASE UPDATE USING THE INSTITUTION FILE ENTER/EDIT",! Q
"RTN","DGBTDLT",236,0)
 ;
"RTN","DGBTDLT",237,0)
 S INSTNODE=^DIC(4,DGBTDIVN,0)
"RTN","DGBTDLT",238,0)
 S INSTADD=^DIC(4,DGBTDIVN,1)
"RTN","DGBTDLT",239,0)
 ; 
"RTN","DGBTDLT",240,0)
 S DGBTINST("ORG NAME")="DEPARTMENT OF VETERANS AFFAIRS"
"RTN","DGBTDLT",241,0)
 S DGBTINST("INST NAME")=$$GET1^DIQ(4,DGBTDIVN,.01)
"RTN","DGBTDLT",242,0)
 S DGBTINST("INST ADDRESS 1")=$$GET1^DIQ(4,DGBTDIVN,1.01)
"RTN","DGBTDLT",243,0)
 S DGBTINST("INST ADDRESS 2")=$$GET1^DIQ(4,DGBTDIVN,1.02)
"RTN","DGBTDLT",244,0)
 S DGBTINST("INST CITY")=$$GET1^DIQ(4,DGBTDIVN,1.03)
"RTN","DGBTDLT",245,0)
 S DGBTINST("INST STATE")=$$GET1^DIQ(4,DGBTDIVN,.02)
"RTN","DGBTDLT",246,0)
 S DGBTINST("INST ZIP CODE")=$$GET1^DIQ(4,DGBTDIVN,1.04)
"RTN","DGBTDLT",247,0)
 S DGBTINST("FAC NUMBER")=$$GET1^DIQ(40.8,DGBTDIVI,1)
"RTN","DGBTDLT",248,0)
 S MAILCODE=$O(^DIC(49,"B","BENEFICIARY TRAVEL",""))
"RTN","DGBTDLT",249,0)
 S DGBTINST("MAIL CODE")=$$GET1^DIQ(49,MAILCODE,1.5)
"RTN","DGBTDLT",250,0)
 Q
"RTN","DGBTDLT",251,0)
 ;
"RTN","DGBTDLT",252,0)
DEVICE(RPTNAM,ROUTINE) ;common device call for DGBT reports
"RTN","DGBTDLT",253,0)
 ;
"RTN","DGBTDLT",254,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP,ZTQUEUED
"RTN","DGBTDLT",255,0)
 ; RPTNAM = NAME OF DGBT REPORT BEING RUN
"RTN","DGBTDLT",256,0)
 ; ROUTINE = "TAG^ROUTINE"
"RTN","DGBTDLT",257,0)
 ;
"RTN","DGBTDLT",258,0)
 S DGBTQ1=0,DGBTQ=0
"RTN","DGBTDLT",259,0)
 S %ZIS="PQM"
"RTN","DGBTDLT",260,0)
 D ^%ZIS
"RTN","DGBTDLT",261,0)
 I POP S DGBTQ=1,SPCOMPLETE=0 Q
"RTN","DGBTDLT",262,0)
 I IOST["C-" Q  ;
"RTN","DGBTDLT",263,0)
 ;.N X I IOM=255,$D(^%ZOSF("RM")) X ^%ZOSF("RM")
"RTN","DGBTDLT",264,0)
 ;Check for exit
"RTN","DGBTDLT",265,0)
 ;S DGBTQ=1
"RTN","DGBTDLT",266,0)
 I $G(IO("Q"))  D  S DGBTQ=1
"RTN","DGBTDLT",267,0)
 .S ZTRTN=ROUTINE
"RTN","DGBTDLT",268,0)
 .S ZTDESC="BT REPORT: "_RPTNAM
"RTN","DGBTDLT",269,0)
 .S ZTSAVE("*")=""
"RTN","DGBTDLT",270,0)
 .D ^%ZTLOAD
"RTN","DGBTDLT",271,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","DGBTDLT",272,0)
 .D HOME^%ZIS K IO("Q")
"RTN","DGBTDLT",273,0)
 U IO
"RTN","DGBTDLT",274,0)
 Q
"RTN","DGBTDLT",275,0)
 ;
"RTN","DGBTDLT",276,0)
DEVICE1(DGBTRPT) ;
"RTN","DGBTDLT",277,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","DGBTDLT",278,0)
 S %ZIS="QPM"
"RTN","DGBTDLT",279,0)
 D ^%ZIS
"RTN","DGBTDLT",280,0)
 I POP S DGBTQ=1,SPCOMPLETE=0
"RTN","DGBTDLT",281,0)
 I IOST'["C-" S DGBTQ=1 Q
"RTN","DGBTDLT",282,0)
 ;
"RTN","DGBTDLT",283,0)
 ;Check for exit
"RTN","DGBTDLT",284,0)
 I $G(DGBTQ) Q
"RTN","DGBTDLT",285,0)
 ;
"RTN","DGBTDLT",286,0)
 I $D(IO("Q")) D  S DGBTQ=1
"RTN","DGBTDLT",287,0)
 . S ZTRTN="LTR^DGBTDLT"
"RTN","DGBTDLT",288,0)
 . S ZTDESC="DGBT: "_DGBTRPT
"RTN","DGBTDLT",289,0)
 .; S ZTIO=ION
"RTN","DGBTDLT",290,0)
 . S ZTSAVE("*")=""
"RTN","DGBTDLT",291,0)
 . D ^%ZTLOAD
"RTN","DGBTDLT",292,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","DGBTDLT",293,0)
 . D HOME^%ZIS K IO("Q")
"RTN","DGBTDLT",294,0)
 ;U IO
"RTN","DGBTDLT",295,0)
 Q
"RTN","DGBTDLT",296,0)
 ;
"RTN","DGBTDLT",297,0)
CLRLTR(DENIED) ;
"RTN","DGBTDLT",298,0)
 ;
"RTN","DGBTDLT",299,0)
 N Y,DGBTFDA,%
"RTN","DGBTDLT",300,0)
 K ERRMSG
"RTN","DGBTDLT",301,0)
 I $G(DGBTDL("ISSUED"))="" S DGBTDL("ISSUED")=$$GET1^DIQ(392,DGBTDTI,45,"I")
"RTN","DGBTDLT",302,0)
 I $G(DGBTDL("CLAIM DENIED"))="" S DGBTDL("CLAIM DENIED")=DENIED
"RTN","DGBTDLT",303,0)
 I $G(DGBTDL("DT DENIED"))="" S DGBTDL("DT DENIED")=$$GET1^DIQ(392,DGBTDTI,45.3) S:$G(DGBTDL("DT DENIED"))="" DGBTDL("DT DENIED")=$$FMTE^XLFDT(DT)
"RTN","DGBTDLT",304,0)
 I $G(DGBTDL("DENIED REASON"))="" S DGBTDL("DENIED REASON")=$$GET1^DIQ(392,DGBTDTI,45.4)
"RTN","DGBTDLT",305,0)
 ;
"RTN","DGBTDLT",306,0)
 S DGBTFDA(392,DGBTDTI_",",45)=""   ;$G(DGBTDL("ISSUED"))
"RTN","DGBTDLT",307,0)
 S DGBTFDA(392,DGBTDTI_",",45.1)=""
"RTN","DGBTDLT",308,0)
 S DGBTFDA(392,DGBTDTI_",",45.2)=""  ;$G(DGBTDL("CLAIM DENIED"))
"RTN","DGBTDLT",309,0)
 S Y=$$NOW^XLFDT() D DD^%DT
"RTN","DGBTDLT",310,0)
 S DGBTFDA(392,DGBTDTI_",",45.3)=""   ;$G(DGBTDL("DT DENIED"))
"RTN","DGBTDLT",311,0)
 S DGBTFDA(392,DGBTDTI_",",45.4)=""  ;$G(DGBTDL("DENIED REASON"))
"RTN","DGBTDLT",312,0)
 D FILE^DIE("EKTS","DGBTFDA","ERRMSG") K DGBTFDA
"RTN","DGBTDLT",313,0)
 Q
"RTN","DGBTDLT1")
0^2^B75949684^B75968041
"RTN","DGBTDLT1",1,0)
DGBTDLT1 ;BLD - REPRINT BENEFICIARY TRAVEL DENIAL LETTER;03/04/2012@1400
"RTN","DGBTDLT1",2,0)
 ;;1.0;Beneficiary Travel;**20,28,33**;September 25, 2001;Build 2
"RTN","DGBTDLT1",3,0)
 ;
"RTN","DGBTDLT1",4,0)
 Q
"RTN","DGBTDLT1",5,0)
 ;************************************************************************************************************
"RTN","DGBTDLT1",6,0)
 ;                              THIS WILL PRINT DENIAL LETTERS
"RTN","DGBTDLT1",7,0)
 ;************************************************************************************************************
"RTN","DGBTDLT1",8,0)
 ;
"RTN","DGBTDLT1",9,0)
REPRINT ;
"RTN","DGBTDLT1",10,0)
 ;
"RTN","DGBTDLT1",11,0)
 D QUIT
"RTN","DGBTDLT1",12,0)
 W !
"RTN","DGBTDLT1",13,0)
 K ^UTILITY($J,"W"),^TMP("DGBT",$J)
"RTN","DGBTDLT1",14,0)
 S QUIT=0
"RTN","DGBTDLT1",15,0)
 ;
"RTN","DGBTDLT1",16,0)
 ;DIVISN ; if MED CTR DIV file set up (first record) and record does not exist, write warning, kill variables, and exit
"RTN","DGBTDLT1",17,0)
 S X=$G(^DG(40.8,0)) I X="" W !,"WARNING...MEDICAL CENTER DIVISION FILE IS NOT SET UP",!,"USE THE ADT PARAMETER OPTION FILE TO SET UP DIVISION" Q
"RTN","DGBTDLT1",18,0)
 ;  check if multi-divisional center (GL node exists and 2nd piece=1). Do lookup, if it exists-set local variables
"RTN","DGBTDLT1",19,0)
 S DGBTMD=0 I $D(^DG(43,1,"GL")),$P(^("GL"),U,2) D  Q:Y'>0  ;D PATIENT
"RTN","DGBTDLT1",20,0)
 . S DIC="^DG(40.8,",DIC(0)="AEQMNZ",DIC("A")="Select DIVISION: " W !!
"RTN","DGBTDLT1",21,0)
 . D ^DIC K DIC Q:Y'>0
"RTN","DGBTDLT1",22,0)
 . S DGBTDIVI=+Y,DGBTDIV=$P(Y,U,2)
"RTN","DGBTDLT1",23,0)
 . D INSTIT S DGBTMD=1
"RTN","DGBTDLT1",24,0)
 ;  if not a multi-divisional center, default to institution name
"RTN","DGBTDLT1",25,0)
 I 'DGBTMD S DGBTDIVI=$O(^DG(40.8,0)),DGBTDIV=$P(^DG(40.8,DGBTDIVI,0),U) D INSTIT
"RTN","DGBTDLT1",26,0)
 ;
"RTN","DGBTDLT1",27,0)
 D PATIENT Q:$G(DFN)=""  ;I '$D(^DGBT(392,"ADENIED",DFN)) W !!,"THERE ARE NO DENIAL LETTERS TO PRINT FOR: ",VADM(1) K DFN D QUIT Q  ;D REPRINT,QUIT Q
"RTN","DGBTDLT1",28,0)
 D LIST2 I $G(CHZFLG)="" D QUIT Q
"RTN","DGBTDLT1",29,0)
 S DGBTDLTR=$$GET1^DIQ(392,DGBTDTI,45,"I")
"RTN","DGBTDLT1",30,0)
 I 'DGBTDLTR D QUIT Q
"RTN","DGBTDLT1",31,0)
 S DGBTCMTY=$$GET1^DIQ(392,DGBTDTI,56,"I")
"RTN","DGBTDLT1",32,0)
 D DEVICE^DGBTDLT("DENIAL LETTER","LTR^DGBTDLT1") I $D(DTOUT)!($D(DUOUT)) S QUIT=1 D QUIT Q
"RTN","DGBTDLT1",33,0)
 I $G(DGBTQ) D QUIT Q
"RTN","DGBTDLT1",34,0)
 D LTR
"RTN","DGBTDLT1",35,0)
 D QUIT
"RTN","DGBTDLT1",36,0)
 Q
"RTN","DGBTDLT1",37,0)
 ;
"RTN","DGBTDLT1",38,0)
LTR ;
"RTN","DGBTDLT1",39,0)
 ;
"RTN","DGBTDLT1",40,0)
 N NAME,DGBTCDT,DGBTDR,DIWL,DIWR
"RTN","DGBTDLT1",41,0)
 K ^UTILITY($J,"W")
"RTN","DGBTDLT1",42,0)
 S DGBTDR=$$GET1^DIQ(392,DGBTDTI,45.4,"I")
"RTN","DGBTDLT1",43,0)
 I $$GET1^DIQ(392.8,DGBTDR,1,,"REASON")
"RTN","DGBTDLT1",44,0)
 D DIVISN(.DGBTINST)                            ;this will set up the DGBTINST array containing the current VA location address
"RTN","DGBTDLT1",45,0)
 ;D DEVICE("DENIAL LETTER") I $D(DTOUT)!($D(DUOUT)) S QUIT=1 Q
"RTN","DGBTDLT1",46,0)
 D HEADER(.DGBTINST)                            ;this will print the current VA location information
"RTN","DGBTDLT1",47,0)
 S QUIT=1
"RTN","DGBTDLT1",48,0)
 S DIWL=5   ;left margin
"RTN","DGBTDLT1",49,0)
 S DIWR=75   ;right margin
"RTN","DGBTDLT1",50,0)
 S DGBTCDT(1)=$P(DGBTDTE,"@",1)                                                        ;invoice date
"RTN","DGBTDLT1",51,0)
 S NAME=$$GET1^DIQ(392,DGBTDTI,12),DGBTCDT(2)=$P(NAME,",",2)_" "_$P(NAME,",",1) ;user name *28 modified to use who entered into the file (#12) field
"RTN","DGBTDLT1",52,0)
 S DGBTCDT(3)=$$GET1^DIQ(200,$$GET1^DIQ(392,DGBTDTI,12,"I"),8) ;user title *28 modified to use who entered into the file (#12) field
"RTN","DGBTDLT1",53,0)
 I DGBTCMTY="M" D               ;for mileage claims
"RTN","DGBTDLT1",54,0)
 .I $$GET1^DIQ(392.6,1,1,,"LETTERS1")
"RTN","DGBTDLT1",55,0)
 .S LINENBR=0
"RTN","DGBTDLT1",56,0)
 .F  S LINENBR=$O(LETTERS1(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT1",57,0)
 ..S X=LETTERS1(LINENBR)
"RTN","DGBTDLT1",58,0)
 .S NBR=0
"RTN","DGBTDLT1",59,0)
 .F  S NBR=$O(REASON(NBR)) Q:'NBR  D  D ^DIWP
"RTN","DGBTDLT1",60,0)
 ..S X=REASON(NBR)
"RTN","DGBTDLT1",61,0)
 .I $$GET1^DIQ(392.6,2,1,,"LETTERS2")
"RTN","DGBTDLT1",62,0)
 .F  S LINENBR=$O(LETTERS2(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT1",63,0)
 ..S X=LETTERS2(LINENBR) Q:X=""
"RTN","DGBTDLT1",64,0)
 .D ^DIWW
"RTN","DGBTDLT1",65,0)
 ;
"RTN","DGBTDLT1",66,0)
 K LETTERS1,KETTERS2
"RTN","DGBTDLT1",67,0)
 I DGBTCMTY="S" D                        ;for Special Mode Claims
"RTN","DGBTDLT1",68,0)
 .I $$GET1^DIQ(392.6,3,3,,"LETTERS1")
"RTN","DGBTDLT1",69,0)
 .S LINENBR=0
"RTN","DGBTDLT1",70,0)
 .F  S LINENBR=$O(LETTERS1(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT1",71,0)
 ..S X=LETTERS1(LINENBR)
"RTN","DGBTDLT1",72,0)
 .S NBR=0
"RTN","DGBTDLT1",73,0)
 .F  S NBR=$O(REASON(NBR)) Q:'NBR  D  D ^DIWP
"RTN","DGBTDLT1",74,0)
 ..S X=REASON(NBR)
"RTN","DGBTDLT1",75,0)
 .I $$GET1^DIQ(392.6,4,3,,"LETTERS2")
"RTN","DGBTDLT1",76,0)
 .F  S LINENBR=$O(LETTERS2(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT1",77,0)
 ..S X=LETTERS2(LINENBR) Q:X=""
"RTN","DGBTDLT1",78,0)
 .D ^DIWW
"RTN","DGBTDLT1",79,0)
 D:'IOST'["C-" ^%ZISC
"RTN","DGBTDLT1",80,0)
 Q
"RTN","DGBTDLT1",81,0)
 ;
"RTN","DGBTDLT1",82,0)
PATIENT ; patient lookup, quit if patient doesn't exist
"RTN","DGBTDLT1",83,0)
 N VAEL
"RTN","DGBTDLT1",84,0)
 S DGBTTOUT="",DIC="^DPT(",DIC(0)="AEQMZ",DIC("A")="Select PATIENT: "
"RTN","DGBTDLT1",85,0)
 W !! D ^DIC K DIC I +Y'>0 K DFN Q
"RTN","DGBTDLT1",86,0)
 ; get patient information#, call return patient return variables routine and set whether new claim or not
"RTN","DGBTDLT1",87,0)
 S DFN=+Y D 6^VADPT,PID^VADPT
"RTN","DGBTDLT1",88,0)
 S DGBTNEW=$S($D(^DGBT(392,"C",DFN)):0,1:1)
"RTN","DGBTDLT1",89,0)
 Q
"RTN","DGBTDLT1",90,0)
 ;
"RTN","DGBTDLT1",91,0)
LIST2 ;  find all previous claims, get total count in DGBTC and put those claims in utility file
"RTN","DGBTDLT1",92,0)
 N X1,YY,DGBTCDT,DGBTC,CNT
"RTN","DGBTDLT1",93,0)
 S (CNTR,DGBTCH,DGBTCH1,DGBTCDT)=0
"RTN","DGBTDLT1",94,0)
 S DGBTC=""
"RTN","DGBTDLT1",95,0)
 I $D(^DGBT(392,"ADENIED",DFN))'>1 W !!?10,"There are no entries on file for this patient",! S Y1=-1 D QUIT Q
"RTN","DGBTDLT1",96,0)
 ;
"RTN","DGBTDLT1",97,0)
 F I=1:1 S DGBTC=$O(^DGBT(392,"ADENIED",DFN,DGBTC),-1) Q:'DGBTC  D
"RTN","DGBTDLT1",98,0)
 .S Y=DGBTC D DD^%DT
"RTN","DGBTDLT1",99,0)
 .S CNTR=$G(CNTR)+1
"RTN","DGBTDLT1",100,0)
 .S DGBTARY(CNTR,DGBTC)=Y ;K DGBTARY(DGBTC)
"RTN","DGBTDLT1",101,0)
 ;
"RTN","DGBTDLT1",102,0)
LIST3 ;  list claims (in external format) from temporary global, 5 at a time. Loop thru list until selection made.
"RTN","DGBTDLT1",103,0)
 S (CNTR,DGBTCH)=""
"RTN","DGBTDLT1",104,0)
 S DGBTC=""
"RTN","DGBTDLT1",105,0)
 W !
"RTN","DGBTDLT1",106,0)
 F  S CNTR=$O(DGBTARY(CNTR)) Q:'CNTR  D  Q:$G(CHZFLG)!$G(DTOUT)!$G(DUOUT)
"RTN","DGBTDLT1",107,0)
 .F  S DGBTC=$O(DGBTARY(CNTR,DGBTC)) Q:DGBTC=""  D  Q:$G(CHZFLG)
"RTN","DGBTDLT1",108,0)
 ..W !?5,CNTR,".",?10,DGBTARY(CNTR,DGBTC) I CNTR#5=0!($O(DGBTARY(CNTR))="") D CHOZ I $D(DUOUT)!$D(DTOUT)!(Y>0) Q
"RTN","DGBTDLT1",109,0)
 I '$D(DTOUT)&Y="" D LIST3 Q
"RTN","DGBTDLT1",110,0)
 S DGBTDTI=$O(DGBTARY(CNTR,"")),DGBTDTE=DGBTARY(CNTR,DGBTDTI)
"RTN","DGBTDLT1",111,0)
 K DIR
"RTN","DGBTDLT1",112,0)
 Q
"RTN","DGBTDLT1",113,0)
 ;
"RTN","DGBTDLT1",114,0)
CHOZ ;  select from the displayed past claims dates for claim to be edited.
"RTN","DGBTDLT1",115,0)
 N DGBTCH1,CHOICE
"RTN","DGBTDLT1",116,0)
 S CHOICE=1
"RTN","DGBTDLT1",117,0)
 W !! S (Y1,Y)=0,DGBTCH1=I,DIR(0)="FO^1:5",DIR("A")="Select CLAIM"
"RTN","DGBTDLT1",118,0)
 S DIR("A",1)="Type '^' to exit date list, or <RETURN> to display more dates"
"RTN","DGBTDLT1",119,0)
 S DIR("?")="Entering a '^' will exit the Past CLAIM list, entering <RETURN> will continue to scroll through past dates.",DIR("?",1)="Select a Past CLAIM date by number."
"RTN","DGBTDLT1",120,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S Y1=-1 Q
"RTN","DGBTDLT1",121,0)
 I Y="",$O(DGBTARY(CNTR))'="" Q
"RTN","DGBTDLT1",122,0)
 I X<CHOICE!(X>DGBTCH1)!(X'=+X) W !?25,*7,"INVALID ENTRY!" D CHOZ Q  ; value must be between 1 and last displayed number
"RTN","DGBTDLT1",123,0)
 S CHZFLG=Y,DGBTDTI=$O(DGBTARY(Y,""))
"RTN","DGBTDLT1",124,0)
 S CNTR=$G(Y)
"RTN","DGBTDLT1",125,0)
 Q
"RTN","DGBTDLT1",126,0)
 ;
"RTN","DGBTDLT1",127,0)
DIVISN(DGBTINST) ; if MED CTR DIV file set up (first record) and record does not exist, write warning, kill variables, and exit
"RTN","DGBTDLT1",128,0)
 S DGBTDIVI=$$GET1^DIQ(392,DGBTDTI,11,"I"),DGBTDIV=$$GET1^DIQ(40.8,DGBTDIVI,.01) ; RFE DGBT*1.0*20
"RTN","DGBTDLT1",129,0)
 I ($G(DGBTDIVI)'="")&($G(DGBTDIV)'="") D INSTIT(.DGBTINST) Q  ; RFE DGBT*1.0*20
"RTN","DGBTDLT1",130,0)
 S DGBTDIVI=$O(^DG(40.8,0)),DGBTDIV=$P(^DG(40.8,DGBTDIVI,0),U) D INSTIT(.DGBTINST)
"RTN","DGBTDLT1",131,0)
 Q
"RTN","DGBTDLT1",132,0)
 ; 
"RTN","DGBTDLT1",133,0)
INSTIT(DGBTINST) ;  check for pointer to institution file and for address information on institution
"RTN","DGBTDLT1",134,0)
 N MAILCODE,INSTADD,INSTNODE
"RTN","DGBTDLT1",135,0)
 S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTDLT1",136,0)
 I 'DGBTDIVN W !!,"INSTITUTION HAS NOT BEEN DEFINED FOR ",$P(^(0),"^"),!,"USE THE ADT PARAMETER OPTION TO UPDATE",! Q
"RTN","DGBTDLT1",137,0)
 I $D(^DIC(4,DGBTDIVN,0)),$S($D(^(1))#10=0:1,$P(^(1),"^",3)']"":1,1:0) W !!,"INSTITUTION ADDRESS NOT ENTERED.  PLEASE UPDATE USING THE INSTITUTION FILE ENTER/EDIT",! Q
"RTN","DGBTDLT1",138,0)
 ;
"RTN","DGBTDLT1",139,0)
 S INSTNODE=^DIC(4,DGBTDIVN,0)
"RTN","DGBTDLT1",140,0)
 S INSTADD=^DIC(4,DGBTDIVN,1)
"RTN","DGBTDLT1",141,0)
 ; 
"RTN","DGBTDLT1",142,0)
 S DGBTINST("ORG NAME")="DEPARTMENT OF VETERANS AFFAIRS"
"RTN","DGBTDLT1",143,0)
 S DGBTINST("INST NAME")=$$GET1^DIQ(4,DGBTDIVN,.01)
"RTN","DGBTDLT1",144,0)
 S DGBTINST("INST ADDRESS 1")=$$GET1^DIQ(4,DGBTDIVN,1.01)
"RTN","DGBTDLT1",145,0)
 S DGBTINST("INST ADDRESS 2")=$$GET1^DIQ(4,DGBTDIVN,1.02)
"RTN","DGBTDLT1",146,0)
 S DGBTINST("INST CITY")=$$GET1^DIQ(4,DGBTDIVN,1.03)
"RTN","DGBTDLT1",147,0)
 S DGBTINST("INST STATE")=$$GET1^DIQ(4,DGBTDIVN,.02)
"RTN","DGBTDLT1",148,0)
 S DGBTINST("INST ZIP CODE")=$$GET1^DIQ(4,DGBTDIVN,1.04)
"RTN","DGBTDLT1",149,0)
 S DGBTINST("FAC NUMBER")=$$GET1^DIQ(40.8,DGBTDIVI,1)
"RTN","DGBTDLT1",150,0)
 S MAILCODE=$O(^DIC(49,"B","BENEFICIARY TRAVEL",""))
"RTN","DGBTDLT1",151,0)
 S DGBTINST("MAIL CODE")=$$GET1^DIQ(49,MAILCODE,1.5)
"RTN","DGBTDLT1",152,0)
 Q
"RTN","DGBTDLT1",153,0)
 ;
"RTN","DGBTDLT1",154,0)
HEADER(DGBTINST) ;this will print all of the standard information at the top of the letter. IT WILL NOT PRINT LOGO'S ETC
"RTN","DGBTDLT1",155,0)
 ;
"RTN","DGBTDLT1",156,0)
 I $G(DGBTINST("ORG NAME"))="" D  Q
"RTN","DGBTDLT1",157,0)
 .W !!,"INSTITUTION INFORMATION IS UNAVAILABLE. PLEASE UPDATE USING THE INSTITUTION FILE ENTER/EDIT."
"RTN","DGBTDLT1",158,0)
 N ORG,ADD1,ADD2,CITY,STATE,ZIP,INSTNAME,LOC,LOC2,DGBTDTFILED
"RTN","DGBTDLT1",159,0)
 ;
"RTN","DGBTDLT1",160,0)
 S ORG=DGBTINST("ORG NAME")
"RTN","DGBTDLT1",161,0)
 S INSTNAME=DGBTINST("INST NAME")
"RTN","DGBTDLT1",162,0)
 S ADD1=DGBTINST("INST ADDRESS 1")
"RTN","DGBTDLT1",163,0)
 S ADD2=DGBTINST("INST ADDRESS 2")
"RTN","DGBTDLT1",164,0)
 S CITY=DGBTINST("INST CITY")
"RTN","DGBTDLT1",165,0)
 S STATE=DGBTINST("INST STATE")
"RTN","DGBTDLT1",166,0)
 S ZIP=DGBTINST("INST ZIP CODE")
"RTN","DGBTDLT1",167,0)
 ;
"RTN","DGBTDLT1",168,0)
 D DEM^VADPT
"RTN","DGBTDLT1",169,0)
 S PATSEX=$P(VADM(5),"^",1),PATSEX=$S(PATSEX="M":"Mr",1:"Ms")_". "
"RTN","DGBTDLT1",170,0)
 S PATADD1=VAPA(1),PATADD2=VAPA(2)
"RTN","DGBTDLT1",171,0)
 S PATCITY=VAPA(4)_", ",PATST=$P(VAPA(5),"^",2)_" ",PATZIP=VAPA(6)
"RTN","DGBTDLT1",172,0)
 S PATNAME=VADM(1),PATNAME=$P(PATNAME,",",2)_" "_$P(PATNAME,",",1)
"RTN","DGBTDLT1",173,0)
 ;
"RTN","DGBTDLT1",174,0)
 S LOC2=5
"RTN","DGBTDLT1",175,0)
 S LOC=80-$L(ORG) W !,?LOC/2,ORG
"RTN","DGBTDLT1",176,0)
 S LOC=80-$L(INSTNAME) W !,?LOC/2,INSTNAME
"RTN","DGBTDLT1",177,0)
 S LOC=80-$L(ADD1) W !,?LOC/2,ADD1
"RTN","DGBTDLT1",178,0)
 I $G(ADD2)'="" S LOC=80-$L(ADD2) W !,?LOC/2,ADD2
"RTN","DGBTDLT1",179,0)
 S CITYSTZIP=CITY_", "_STATE_" "_ZIP
"RTN","DGBTDLT1",180,0)
 S LOC=80-$L(CITYSTZIP) W !,?LOC/2,CITYSTZIP,!
"RTN","DGBTDLT1",181,0)
 ;S LOC=80-$L(DGBTDTE) W !?LOC,$P(DGBTDTE,"@",1)
"RTN","DGBTDLT1",182,0)
 S DGBTDTFILED=$$GET1^DIQ(392,DGBTDTI,13,"E")
"RTN","DGBTDLT1",183,0)
 S DGBTDTFILED=$S(DGBTDTFILED'="":DGBTDTFILED,1:DT)
"RTN","DGBTDLT1",184,0)
 S DGBTDTFILED=$$FMTE^XLFDT(DGBTDTFILED)
"RTN","DGBTDLT1",185,0)
 S LOC=80-$L(DGBTDTFILED) W !,?LOC,DGBTDTFILED
"RTN","DGBTDLT1",186,0)
 W !,?LOC,DGBTINST("FAC NUMBER")
"RTN","DGBTDLT1",187,0)
 W ?LOC,"/"_$S(DGBTINST("MAIL CODE")'="":DGBTINST("MAIL CODE"),1:"BT"),!
"RTN","DGBTDLT1",188,0)
 W ?LOC,$E(VADM(1),1)_$E($P(VADM(2),"^",1),6,99)
"RTN","DGBTDLT1",189,0)
 W !,?LOC2,$G(PATSEX),$G(PATNAME)
"RTN","DGBTDLT1",190,0)
 W !,?LOC2,$G(PATADD1)
"RTN","DGBTDLT1",191,0)
 W:$G(PATADD2)'="" !,?LOC2,PATADD2
"RTN","DGBTDLT1",192,0)
 W !,?LOC2,PATCITY,PATST,PATZIP,!!
"RTN","DGBTDLT1",193,0)
 ;
"RTN","DGBTDLT1",194,0)
 Q
"RTN","DGBTDLT1",195,0)
 ;
"RTN","DGBTDLT1",196,0)
DEVICE(DGBTRPT) N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","DGBTDLT1",197,0)
 S %ZIS="QM"
"RTN","DGBTDLT1",198,0)
 D ^%ZIS
"RTN","DGBTDLT1",199,0)
 I POP S DGBTQ=1
"RTN","DGBTDLT1",200,0)
 ;
"RTN","DGBTDLT1",201,0)
 ;Check for exit
"RTN","DGBTDLT1",202,0)
 I $G(DGBTQ) Q
"RTN","DGBTDLT1",203,0)
 ;
"RTN","DGBTDLT1",204,0)
 S DGBTSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","DGBTDLT1",205,0)
 I $D(IO("Q")) D  S DGBTQ=1
"RTN","DGBTDLT1",206,0)
 . S ZTRTN="RUN^DGBTBORP0(DGBTEXCEL,DGBTRPT,DGBTSMDET)"
"RTN","DGBTDLT1",207,0)
 . S ZTIO=ION
"RTN","DGBTDLT1",208,0)
 . S ZTSAVE("*")=""
"RTN","DGBTDLT1",209,0)
 . S ZTDESC="DGBT REPORT: "_DGBTRPT
"RTN","DGBTDLT1",210,0)
 . D ^%ZTLOAD
"RTN","DGBTDLT1",211,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","DGBTDLT1",212,0)
 . D HOME^%ZIS
"RTN","DGBTDLT1",213,0)
 U IO
"RTN","DGBTDLT1",214,0)
 Q
"RTN","DGBTDLT1",215,0)
 ;
"RTN","DGBTDLT1",216,0)
QUIT ;will kill all local variables used by this routine
"RTN","DGBTDLT1",217,0)
 ;
"RTN","DGBTDLT1",218,0)
 K DFN,DGBTNEW,VACNTRY,VADAT,VADM,VAERR,VAPA,Y,Z,J,DGBTINST,DGBTNEW,DGBTTOUT,DGBTDLTR,DGBTDIVN,DGBTDIVI,DGBTDIV,DGBTCMTY,DGTCH1,DGBTCH,DGBTC,DGBTMD
"RTN","DGBTDLT1",219,0)
 K ^TMP("DGBT",$J),DFN,CITYSTZIP,CHZFLG,C,QUIT
"RTN","DGBTDLT1",220,0)
 K X1,YY,DGBTCHK,^TMP("DGBT",$J),^TMP("DGBTARA",$J)
"RTN","DGBTDLT1",221,0)
 K DRIEN,REASON,LETTERS1,LETTERS2,LINENBR,NBR,DGBTDNLTR,DGBTFDA,DGBTSCR,DGBTDR,DGBTISSUED,VADM,PATSEX,PATADD1,PATADD2,PATCITY,PATST,PATZIP,PATNAME
"RTN","DGBTDLT1",222,0)
 K CNTR,DFN,DGBTARY,DGBTCH,DGBTCH1,DGBTDTE,DGBTDTI,DGBTNEW,DGBTTOUT,DGBTARY,VA,VACNTRY,VAPA,DUOUT,DTOUT,DGBTQ,DGBTQ1
"RTN","DGBTDLT1",223,0)
 Q
"RTN","DGBTE1")
0^4^B32989295^B32593680
"RTN","DGBTE1",1,0)
DGBTE1 ;ALB/SCK/GAH - BENEFICIARY TRAVEL FIND OLD CLAIM DATES;10/10/06@11:17am
"RTN","DGBTE1",2,0)
 ;;1.0;Beneficiary Travel;**8,12,13,20,21,22,25,28,33**;September 25, 2001;Build 2
"RTN","DGBTE1",3,0)
DATE ;  get date for claim, either new or past date
"RTN","DGBTE1",4,0)
 N DGBTDCLM
"RTN","DGBTE1",5,0)
 K ^TMP("DGBT",$J),^TMP("DGBTARA",$J),DIR
"RTN","DGBTE1",6,0)
 I 'DGBTNEW S DIR("A",2)="Enter a 'P' to display Past CLAIM dates for editing."
"RTN","DGBTE1",7,0)
 S DIR("A",3)="Time is required when adding a new CLAIM.",DIR("A",4)="",DIR("A",1)="",DIR("A")="Select TRAVEL CLAIM DATE/TIME",DIR("?")="^D HELP^DGBTE1A"
"RTN","DGBTE1",8,0)
 S DIR(0)="F",DIR("B")="NOW" D ^DIR K DIR G ERR1:$D(DIRUT)
"RTN","DGBTE1",9,0)
 S CHZFLG=0,%DT="EXR",DTSUB=$S(Y="N":"NOW",Y="P":"OLD",Y="p":"OLD",1:"OTHR")_"^DGBTE1A" D @DTSUB   ;PAVEL - DGBT*1*20
"RTN","DGBTE1",10,0)
 S:$P(DTSUB,U,1)="OLD"&(Y1>0) DGBTOLD=1 K DTSUB        ;PAVEL DGBT*1*20
"RTN","DGBTE1",11,0)
 G ERR1:$D(DTOUT),DATE:Y1<0 S DGBTA=Y1 G SET:CHZFLG    ;PAVEL DGBT*1*20
"RTN","DGBTE1",12,0)
DATE1 ;  for past claims, set DGBTDT to inverse date of claim date
"RTN","DGBTE1",13,0)
 I $D(^DGBT(392,"C",DFN)) D
"RTN","DGBTE1",14,0)
 . S DGBTC=0,DGBTDT=9999999-$E(DGBTA,1,7) ; set past claims counter=0
"RTN","DGBTE1",15,0)
 . ; for latest date (topmost) search for past claims
"RTN","DGBTE1",16,0)
 . F I=DGBTDT:0 S I=$O(^DGBT(392,"AI",DFN,I)) Q:'I!(I>(DGBTDT_.99999))  S DGBTC=DGBTC+1,DGBT(DGBTC)=9999999.99999-I
"RTN","DGBTE1",17,0)
 I '$D(DGBT) G LOCK
"RTN","DGBTE1",18,0)
 W !!,"There are other claims on this date.",!,"Select by number to edit or <RETURN> to add a new CLAIM.",!
"RTN","DGBTE1",19,0)
 ; convert inverse claim date to external format through VADATE conversion routine
"RTN","DGBTE1",20,0)
 F I=0:0 S I=$O(DGBT(I)) Q:'I  D
"RTN","DGBTE1",21,0)
 .S DGBTDCLM=$$GET1^DIQ(392,DGBT(I),45,"I")
"RTN","DGBTE1",22,0)
 .S VADAT("W")=DGBT(I) D ^VADATE W !?5,I,".",?10,VADATE("E")_$S($G(DGBTDCLM)'="":" (D)",1:"")
"RTN","DGBTE1",23,0)
 K DIR S DIR("A")="Select 1"_$S(DGBTC=1:"",1:"-"_DGBTC)_", or <RETURN> to add a new claim: ",DIR(0)="NOA^1:"_DGBTC,DIR("?")="Select, by number, one of the displayed claim dates: "
"RTN","DGBTE1",24,0)
 D ^DIR K DIR S:$G(Y) CHZFLG=1 G QUIT^DGBTEND:$D(DTOUT)!($D(DUOUT))
"RTN","DGBTE1",25,0)
 G LOCK:Y="" G DATE:'$D(DGBT(Y))
"RTN","DGBTE1",26,0)
 S DGBTA=DGBT(Y),DGBTOLD=1 G SET
"RTN","DGBTE1",27,0)
LOCK ;
"RTN","DGBTE1",28,0)
 ;L +^DGBT(392,DGBTA):$G(DILOCKTM,3)
"RTN","DGBTE1",29,0)
 ;I '$T!$D(^DGBT(392,DGBTA)) L -^DGBT(392,DGBTA) S DGBTA=$$FMADD^XLFDT(DGBTA,,,,1) G LOCK ;dbe patch DGBT*1*21
"RTN","DGBTE1",30,0)
 ;dgbt*1.0*33 - more efficient lookup
"RTN","DGBTE1",31,0)
 F  Q:'$D(^DGBT(392,DGBTA))  S DGBTA=$$FMADD^XLFDT(DGBTA,,,,1)
"RTN","DGBTE1",32,0)
 L +^DGBT(392,DGBTA):$G(DILOCKTM,3) E  G LOCK
"RTN","DGBTE1",33,0)
 S (DGBTDT,VADAT("W"))=DGBTA D ^VADATE W VADATE("E")      ;for CCR235 by RE
"RTN","DGBTE1",34,0)
ASKADD ;
"RTN","DGBTE1",35,0)
 W !!,"Are you sure you want to add a new claim"
"RTN","DGBTE1",36,0)
 S %=1 D YN^DICN G EXIT2^DGBTE:%<0!(%=2)
"RTN","DGBTE1",37,0)
 I '% W !!,"Enter 'YES' to add a new claim, or 'NO' not to add the claim." G ASKADD
"RTN","DGBTE1",38,0)
 K DD,DO
"RTN","DGBTE1",39,0)
 ; create new file entry, stuff patient DFN into name field(pointer)
"RTN","DGBTE1",40,0)
 S (X,DINUM)=DGBTA,DIC="^DGBT(392,",DIC(0)="L",DIC("DR")="2////"_DFN
"RTN","DGBTE1",41,0)
 D FILE^DICN K DIC L -^DGBT(392,DGBTA)
"RTN","DGBTE1",42,0)
 ; go back to patient if no file entry
"RTN","DGBTE1",43,0)
 G:Y'>0 PATIENT^DGBTE
"RTN","DGBTE1",44,0)
SET ; call inhouse generic date routine
"RTN","DGBTE1",45,0)
 S (DA,DGBTDT,VADAT("W"))=DGBTA D ^VADATE
"RTN","DGBTE1",46,0)
 ; get internal and external formats of converted inverse dates
"RTN","DGBTE1",47,0)
 S DGBTDTI=$S($G(VADAT("W"))'="":VADAT("W"),1:VADATE("I")),DGBTDTE=VADATE("E") K VADAT,VADATE,DIC,Y
"RTN","DGBTE1",48,0)
 I $G(DGBTDIVI)'="" S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTE1",49,0)
 D GA^DGBTUTL(DFN,"DGBTINCA",DGBTDTI) ;Get Alternate Income PAVEL
"RTN","DGBTE1",50,0)
STUFF ;  stuff departure with address data from patient file, dest from institution file
"RTN","DGBTE1",51,0)
 S DGBTCMTY=$$GET1^DIQ(392,DGBTDT,56)
"RTN","DGBTE1",52,0)
 S:'$L(DGBTCMTY) DGBTCMTY="M"
"RTN","DGBTE1",53,0)
 ;dbe patch DGBT*1*25 - removed restrictions below to allow departure and destination fields to get filed for existing claims
"RTN","DGBTE1",54,0)
 S:'$D(^DGBT(392,DGBTDT,"D")) ^DGBT(392,DGBTDT,"D")=VAPA(1)_"^"_VAPA(2)_"^"_VAPA(3)_"^"_VAPA(4)_"^"_$S(VAPA(5)]"":+VAPA(5),1:"")_"^"_$P(VAPA(11),U,1)
"RTN","DGBTE1",55,0)
 I '$D(^DGBT(392,DGBTDT,"T")) D
"RTN","DGBTE1",56,0)
 . S X=$S($D(^DIC(4,DGBTDIVN,1)):^(1),1:"")
"RTN","DGBTE1",57,0)
 . S ^DGBT(392,DGBTDT,"T")=($P(^DG(40.8,DGBTDIVI,0),U)_"^"_$P(X,U)_"^"_$P(X,U,2)_"^"_$P(X,U,3)_"^"_$P(^DIC(4,DGBTDIVN,0),U,2)_"^"_$TR($P(X,U,4),"-","")) ;*28 remove hyphen from zip code
"RTN","DGBTE1",58,0)
 Q:$G(DGBTSP2M)  ;dbe patch DGBT*1*25 - added quit when called from routine dgbtee
"RTN","DGBTE1",59,0)
CHKFILES ; section removed, dependents picked up below in MEANS ; abr 10/94
"RTN","DGBTE1",60,0)
MEANS ;  find corres. means test entry, gets MT income, status, no. of dependents
"RTN","DGBTE1",61,0)
 ;DGBTMTS= MT Status;  DGBTCSC= claim Service Connected indicator & %;  DGBTELG=Eligibility status
"RTN","DGBTE1",62,0)
 N X,X2,X3,Y,DGBTIFL
"RTN","DGBTE1",63,0)
 S X=$$LST^DGMTCOU1(DFN,DT,3),DGBTMTS=$P(X,U,4)_U_$P(X,U,3) ; returns corres. MT info,X=IEN of last MT. passing a 3 will check both MT and RX Co-Pays
"RTN","DGBTE1",64,0)
 ; get income, # dependents
"RTN","DGBTE1",65,0)
 S Y=$$INCOME^VAFMON(DFN,DGBTA,1)
"RTN","DGBTE1",66,0)
 S:"I^V"[$P(Y,U,2) Y=U ;If income type is I or V ignore it PAVEL
"RTN","DGBTE1",67,0)
 S:DGBTINCA Y=$P(DGBTINCA,U,2)_U_$E($P(DGBTINCA,U,4)) ;Set Alternate Income
"RTN","DGBTE1",68,0)
 S X=$P(Y,U),DGBTIFL=$P(Y,U,2) ; returns income & source.
"RTN","DGBTE1",69,0)
 I X?1N.E!(X<0) D
"RTN","DGBTE1",70,0)
 .I X<0 S X=0
"RTN","DGBTE1",71,0)
 .S X2="0$",X3=8 D COMMA^%DTC
"RTN","DGBTE1",72,0)
 S DGBTINC=X_U_$G(DGBTIFL) K X,X2
"RTN","DGBTE1",73,0)
 S DGBTDEP=$$DEP^VAFMON(DFN,DGBTA) ; finds dependents Vet, Spouse, Children
"RTN","DGBTE1",74,0)
 S DGBTDTY=" (Year: "_$$FMTE^XLFDT($E(DGBTDTI,1,3)_"0000")_")" ;Year to be displayed with Income
"RTN","DGBTE1",75,0)
 S DGBTMTTH=$$MTTH^DGBTMTTH(DGBTDEP,DGBTDTI) ; Means test threshold
"RTN","DGBTE1",76,0)
 S DGBTRXTH=+$$THRES^IBARXEU1(DGBTDTI,1,DGBTDEP) ; RX co-pay threshold
"RTN","DGBTE1",77,0)
 S DGBTDYFL=$$DAYFLAG^DGBTUTL ; valid income test y/n
"RTN","DGBTE1",78,0)
 ;
"RTN","DGBTE1",79,0)
PREV ; if past claim get SC%, elig.
"RTN","DGBTE1",80,0)
 I CHZFLG S X=^DGBT(392,DGBTA,0),DGBTELG=$P(X,U,3),DGBTCSC=$P(X,U,4) D
"RTN","DGBTE1",81,0)
 . S:$P(X,U,11) DGBTDIVI=+$P(X,U,11),DGBTDIVN=$P($G(^DG(40.8,DGBTDIVI,0)),U,7) ;dbe patch DGBT*1*22 - save division of existing claims
"RTN","DGBTE1",82,0)
 . S:DGBTCSC DGBTCSC=1_U_DGBTCSC S:'DGBTCSC DGBTCSC=0
"RTN","DGBTE1",83,0)
 . S:DGBTELG DGBTELG=DGBTELG_U_$P(^DIC(8,DGBTELG,0),U)
"RTN","DGBTE1",84,0)
CERT ;  get last BT certification,  get date, then get eligibility
"RTN","DGBTE1",85,0)
 I $D(^DGBT(392.2,"C",DFN)) D
"RTN","DGBTE1",86,0)
 .;cd=cert date in inverse then external format, ce= eligibility, ca* = amt certified
"RTN","DGBTE1",87,0)
 . S DGBTCD=$O(^DGBT(392.2,"C",DFN,0)),DGBTCE=$P(^DGBT(392.2,DGBTCD,0),"^",3)
"RTN","DGBTE1",88,0)
 . S DGBTCA=$P(^DGBT(392.2,DGBTCD,0),"^",4),Y=9999999-$P(DGBTCD,".")
"RTN","DGBTE1",89,0)
 . X ^DD("DD") ; date conversion, y=cert date (internal)
"RTN","DGBTE1",90,0)
 . S DGBTCD=Y,X=DGBTCA,X2="0$",X3=8 K Y D COMMA^%DTC S DGBTCA=X K X,X2,X3
"RTN","DGBTE1",91,0)
APPTS ;  search patient file for appointments through claim date (DTI+1),  add dates to array DGBTCL 
"RTN","DGBTE1",92,0)
 N ERRCODE,DGARRAY,CLIEN,APTDT S DGARRAY("FLDS")="2;3;10;18"
"RTN","DGBTE1",93,0)
 S DGARRAY(4)=DFN,I=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGBTE1",94,0)
 ; I<0 = Error, I<0 = # of Records retrieved
"RTN","DGBTE1",95,0)
 I I<0 S ERRCODE=$O(^TMP($J,"SDAMA301","")),I1=1,DGBTCL("ERROR")=^TMP($J,"SDAMA301",ERRCODE)
"RTN","DGBTE1",96,0)
 I I>0 D
"RTN","DGBTE1",97,0)
 .S CLIEN=""
"RTN","DGBTE1",98,0)
 .F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DGBTE1",99,0)
 ..S APTDT=DGBTDTI\1
"RTN","DGBTE1",100,0)
 ..F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)) Q:'APTDT!(APTDT>(DGBTDTI+1))  D
"RTN","DGBTE1",101,0)
 ...S SDATA=^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)
"RTN","DGBTE1",102,0)
 ...S DGBTCL(APTDT)=$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,2),";",2)_U_$P($P(SDATA,U,3),";")
"RTN","DGBTE1",103,0)
 ...S DGBTCL(APTDT)=DGBTCL(APTDT)_U_$P($P(SDATA,U,18),";")_U_$P($P(SDATA,U,10),";")
"RTN","DGBTE1",104,0)
 K ^TMP($J,"SDAMA301"),DGARRAY,CLIEN,APTDT
"RTN","DGBTE1",105,0)
EXIT ; exit routine
"RTN","DGBTE1",106,0)
 Q
"RTN","DGBTE1",107,0)
ERR1 ;  error condition
"RTN","DGBTE1",108,0)
 G QUIT^DGBTEND Q
"RTN","DGBTSP1")
0^3^B84184807^B84121685
"RTN","DGBTSP1",1,0)
DGBTSP1 ;ALB/BLD-BENEFICIARY TRAVEL SPECIAL MODE OF TRANSPORTATION; 12/18/2011@1000; 12/23/2012
"RTN","DGBTSP1",2,0)
 ;;1.0;Beneficiary Travel;**20,22,33**;December 27, 2011;Build 2
"RTN","DGBTSP1",3,0)
 ;
"RTN","DGBTSP1",4,0)
ACCT ;  allowed to select only valid active accounts
"RTN","DGBTSP1",5,0)
 S DGBTOACT=$S('$D(^DGBT(392.3,+$P(DGBTVAR(0),"^",6),0)):0,1:+$P(^DGBT(392.3,$P(DGBTVAR(0),"^",6),0),"^",5))
"RTN","DGBTSP1",6,0)
 K X S (DIC("B"),X)=$S(+$P(DGBTVAR(0),"^",6):$P(^DGBT(392.3,$P(DGBTVAR(0),"^",6),0),"^"),1:$$DEFLT1^DGBTEE1) S DIC("A")="Select ACCOUNT: "
"RTN","DGBTSP1",7,0)
 S DIC="^DGBT(392.3,",DIC(0)="AEQMZ",DIC("S")="I $P(^(0),U,3)'>DGBTDT&('$P(^(0),U,4)!($P(^(0),U,4)'<DGBTDT))"
"RTN","DGBTSP1",8,0)
 D ^DIC K DIC I $D(DTOUT) S DGBTTOUT=-1 K DTOUT Q
"RTN","DGBTSP1",9,0)
 I Y'>0 W !,"ACCOUNT IS REQUIRED!!" G ACCT
"RTN","DGBTSP1",10,0)
 S DGBTACTN=$P(Y,"^"),DGBTACCT=$P($G(Y(0)),"^",5)
"RTN","DGBTSP1",11,0)
 ;  if account is ALL OTHER - stuff in mileage info
"RTN","DGBTSP1",12,0)
 I $D(DGBTVAR("M")) S DGBTML=$P(DGBTVAR("M"),"^",2),DGBTOWRT=$P(DGBTVAR("M"),"^"),DGBTMLT=$J((DGBTML*DGBTOWRT*DGBTMR),0,2)
"RTN","DGBTSP1",13,0)
 Q
"RTN","DGBTSP1",14,0)
 ;
"RTN","DGBTSP1",15,0)
DGBTDC(DGBTDT,DFN) ;this will process denies the claim and issue a denial letter
"RTN","DGBTSP1",16,0)
 ;
"RTN","DGBTSP1",17,0)
 W !!,"CLAIM HAS BEEN DENIED AND DENIAL OF BENEFITS LETTER WILL BE ISSUED"
"RTN","DGBTSP1",18,0)
 I '$G(DGBTAPPTYP) D DGBTDR^DGBTDLT
"RTN","DGBTSP1",19,0)
 W !!,"PLEASE COMPLETE THE INVOICE INFORMATION." H 1
"RTN","DGBTSP1",20,0)
 Q
"RTN","DGBTSP1",21,0)
 ;
"RTN","DGBTSP1",22,0)
DELSP(DGBTDT) ;this will delete the special mode data when editing a claim and the claim changes from a Special Mode to a Mileage Claim
"RTN","DGBTSP1",23,0)
 ;
"RTN","DGBTSP1",24,0)
 N ACCT,ACTNBR,NULL,DGBTDL
"RTN","DGBTSP1",25,0)
 S (ACTNBR,ACCT,NULL)=""
"RTN","DGBTSP1",26,0)
 F  S ACCT=$O(^DGBT(392.3,"D","ALL OTHER",ACCT)) Q:ACCT=""  D  Q:ACTNBR
"RTN","DGBTSP1",27,0)
 .I $P(^DGBT(392.3,ACCT,0),"^",4)="" S ACTNBR=ACCT
"RTN","DGBTSP1",28,0)
 S ACTNBR=$$GET1^DIQ(392.3,ACCT,.01)
"RTN","DGBTSP1",29,0)
 K ^DGBT(392,DGBTDT,"SP"),^DGBT(392,DGBTDT,"SPAD")
"RTN","DGBTSP1",30,0)
 ;
"RTN","DGBTSP1",31,0)
 S DGBTDL("ISSUED")=""
"RTN","DGBTSP1",32,0)
 S DGBTDL("ISSUED DATE")=""
"RTN","DGBTSP1",33,0)
 S DGBTDL("CLAIM DENIED")="NO"
"RTN","DGBTSP1",34,0)
 S DGBTDL("DT DENIED")=""
"RTN","DGBTSP1",35,0)
 S DGBTDL("DENIED REASON")=""
"RTN","DGBTSP1",36,0)
 S DGBTDL("ACCT NBR")=ACTNBR
"RTN","DGBTSP1",37,0)
 S DGBTDL("CLAIM TYPE")=""
"RTN","DGBTSP1",38,0)
 ;
"RTN","DGBTSP1",39,0)
 S DGBTFDA(392,DGBTDTI_",",45)=$G(DGBTDL("ISSUED"))
"RTN","DGBTSP1",40,0)
 S DGBTFDA(392,DGBTDTI_",",45.1)=$G(DGBTDL("ISSUED DATE"))
"RTN","DGBTSP1",41,0)
 S DGBTFDA(392,DGBTDTI_",",45.2)=$G(DGBTDL("CLAIM DENIED"))
"RTN","DGBTSP1",42,0)
 S DGBTFDA(392,DGBTDTI_",",45.3)=$G(DGBTDL("DT DENIED"))
"RTN","DGBTSP1",43,0)
 S DGBTFDA(392,DGBTDTI_",",45.4)=$G(DGBTDL("DENIED REASON"))
"RTN","DGBTSP1",44,0)
 S DGBTFDA(392,DGBTDTI_",",6)=$G(DGBTDL("ACCT NBR"))
"RTN","DGBTSP1",45,0)
 S DGBTFDA(392,DGBTDTI_",",56)=$G(DGBTCMTY)
"RTN","DGBTSP1",46,0)
 D FILE^DIE("EKTS","DGBTFDA","ERRMSG") K DGBTFDA
"RTN","DGBTSP1",47,0)
 Q
"RTN","DGBTSP1",48,0)
 ;
"RTN","DGBTSP1",49,0)
FILE(DGBTDT) ;this will file the special mode into file 392 (Beneficiary Travel Claim File).
"RTN","DGBTSP1",50,0)
 ;
"RTN","DGBTSP1",51,0)
 N DGBTDTI,DGBTFDA
"RTN","DGBTSP1",52,0)
 W !!,"FILING....."
"RTN","DGBTSP1",53,0)
 ;
"RTN","DGBTSP1",54,0)
 S DGBTDTI=DGBTA
"RTN","DGBTSP1",55,0)
 D CLEANUP^DGBTSP
"RTN","DGBTSP1",56,0)
 S DGBTFDA(392,DGBTDTI_",",3)=$P(VAEL(1),"^",2)                     ;primary eligibility
"RTN","DGBTSP1",57,0)
 S DGBTFDA(392,DGBTDTI_",",4)=$P(VAEL(3),"^",3)                     ;% of disability
"RTN","DGBTSP1",58,0)
 S DGBTFDA(392,DGBTDTI_",",6)=$G(DGBTSP("ACCOUNT"))
"RTN","DGBTSP1",59,0)
 S DGBTFDA(392,DGBTDTI_",",11)=DGBTDIVI                             ;division
"RTN","DGBTSP1",60,0)
 ;S DGBTFDA(392,DGBTDTI_",",12)=$P(^VA(200,DUZ,0),"^",1)             ;person who entered claim
"RTN","DGBTSP1",61,0)
 S DGBTFDA(392,DGBTDTI_",",13)=DT                                   ;date claim was entered 
"RTN","DGBTSP1",62,0)
 S DGBTFDA(392,DGBTDTI_",",56)=$G(DGBTSP("CLAIM TYPE"))
"RTN","DGBTSP1",63,0)
 S DGBTFDA(392,DGBTDTI_",",57)=$G(DGBTSP("MODE OF TRANS"))
"RTN","DGBTSP1",64,0)
 S DGBTFDA(392,DGBTDTI_",",58)=$G(DGBTSP("INVOICE NUMBER"))
"RTN","DGBTSP1",65,0)
 S DGBTFDA(392,DGBTDTI_",",59)=$G(DGBTSP("DT INVOICE REC"))
"RTN","DGBTSP1",66,0)
 S DGBTFDA(392,DGBTDTI_",",60)=$G(DGBTSP("TOTAL INVOICE"))
"RTN","DGBTSP1",67,0)
 S DGBTFDA(392,DGBTDTI_",",61)=$G(DGBTSP("BASE RATE FEE"))
"RTN","DGBTSP1",68,0)
 S DGBTFDA(392,DGBTDTI_",",62)=$G(DGBTSP("MILEAGE FEE"))
"RTN","DGBTSP1",69,0)
 S DGBTFDA(392,DGBTDTI_",",63)=$G(DGBTSP("NO SHOW"))
"RTN","DGBTSP1",70,0)
 S DGBTFDA(392,DGBTDTI_",",64)=$G(DGBTSP("WAIT TIME"))
"RTN","DGBTSP1",71,0)
 S DGBTFDA(392,DGBTDTI_",",65)=$G(DGBTSP("EXTRA CREW"))
"RTN","DGBTSP1",72,0)
 S DGBTFDA(392,DGBTDTI_",",66)=$G(DGBTSP("SP EQUIP"))
"RTN","DGBTSP1",73,0)
 S DGBTFDA(392,DGBTDTI_",",67)=$G(DGBTSP("RT/ONE WAY"))
"RTN","DGBTSP1",74,0)
 S DGBTFDA(392,DGBTDTI_",",68)=$G(DGBTSP("TOTAL MILES"))
"RTN","DGBTSP1",75,0)
 S DGBTFDA(392,DGBTDTI_",",69)=$G(DGBTSP("OTHER TRANS REMARKS"))
"RTN","DGBTSP1",76,0)
 S DGBTFDA(392,DGBTDTI_",",70)=$G(DGBTSP("PRE-AUTHORIZED"))
"RTN","DGBTSP1",77,0)
 ;S DGBTFDA(392,DGBTDTI_",",71)=$G(DGBTSP("VENDOR"))
"RTN","DGBTSP1",78,0)
 S DGBTFDA(392,DGBTDTI_",",72)=$G(DGBTSP("SP MODE OTHER REMARKS"))
"RTN","DGBTSP1",79,0)
 S DGBTFDA(392,DGBTDTI_",",73)=$G(DGBTSP("PLACE OF DEPARTURE "))
"RTN","DGBTSP1",80,0)
 S DGBTFDA(392,DGBTDTI_",",85)=$G(DGBTSP("AUTHORIZED"))
"RTN","DGBTSP1",81,0)
 I $G(DGBTSP("AUTHORIZED"))="Y" D
"RTN","DGBTSP1",82,0)
 .S DGBTFDA(392,DGBTDTI_",",84)=$$GET1^DIQ(200,$G(DUZ),.01)
"RTN","DGBTSP1",83,0)
 .S DGBTFDA(392,DGBTDI_",",86)=$$FMTE^XLFDT(DT)  ;$G(DGBTDT)
"RTN","DGBTSP1",84,0)
 ;
"RTN","DGBTSP1",85,0)
 S DGBTFDA(392,DGBTDTI_",",73)=$G(DGBTSP("PLACE OF DEPARTURE"))
"RTN","DGBTSP1",86,0)
 S DGBTFDA(392,DGBTDTI_",",74)=$G(DGBTSP("PLACE OF DEPARTURE 2"))
"RTN","DGBTSP1",87,0)
 S DGBTFDA(392,DGBTDTI_",",75)=$G(DGBTSP("CITY OF DEPARTURE"))
"RTN","DGBTSP1",88,0)
 S DGBTFDA(392,DGBTDTI_",",76)=$G(DGBTSP("STATE OF DEPARTURE"))
"RTN","DGBTSP1",89,0)
 S DGBTFDA(392,DGBTDTI_",",77)=$G(DGBTSP("ZIP CODE/DEPARTURE"))
"RTN","DGBTSP1",90,0)
 ;
"RTN","DGBTSP1",91,0)
 S DGBTFDA(392,DGBTDTI_",",78)=$G(DGBTINST("DIVISION"))
"RTN","DGBTSP1",92,0)
 S DGBTFDA(392,DGBTDTI_",",79)=$G(DGBTINST("INST NAME"))
"RTN","DGBTSP1",93,0)
 S DGBTFDA(392,DGBTDTI_",",80)=$G(DGBTINST("ADDRESS1"))
"RTN","DGBTSP1",94,0)
 S DGBTFDA(392,DGBTDTI_",",81)=$G(DGBTINST("CITY"))
"RTN","DGBTSP1",95,0)
 S DGBTFDA(392,DGBTDTI_",",82)=$G(DGBTINST("STATE"))
"RTN","DGBTSP1",96,0)
 S DGBTFDA(392,DGBTDTI_",",83)=$G(DGBTINST("ZIP CODE"))
"RTN","DGBTSP1",97,0)
 S DGBTFDA(392,DGBTDTI_",",42)=VADM(1)
"RTN","DGBTSP1",98,0)
 ;
"RTN","DGBTSP1",99,0)
 D FILE^DIE("EKTS","DGBTFDA","ERRMSG")
"RTN","DGBTSP1",100,0)
 I '$D(ERRMSG) W " COMPLETED..." D
"RTN","DGBTSP1",101,0)
 .S DGBTFDA1(392,DGBTDTI_",",71)=$G(DGBTSP("VENDOR")) ;dbe patch DGBT*1*22 - modified to use vendor ien
"RTN","DGBTSP1",102,0)
 .S DGBTFDA1(392,DGBTDTI_",",12)=DUZ D FILE^DIE(,"DGBTFDA1","ERRMSG")             ;person who entered claim
"RTN","DGBTSP1",103,0)
 .W $$PAUSE^DGBTUTL(0) S (DGBTSP,SPCOMPLETE)=1
"RTN","DGBTSP1",104,0)
 I $D(ERRMSG) W !!,"DATA DID NOT FILE DUE TO ERROR(S):" D  Q  ;dbe patch DGBT*1*22 - added code to display error messages
"RTN","DGBTSP1",105,0)
 .N DGBTERR,DGBTERR2
"RTN","DGBTSP1",106,0)
 .S DGBTERR="" F  S DGBTERR=$O(ERRMSG("DIERR",DGBTERR)) Q:'DGBTERR  D
"RTN","DGBTSP1",107,0)
 ..S DGBTERR2="" F  S DGBTERR2=$O(ERRMSG("DIERR",DGBTERR,"TEXT",DGBTERR2)) Q:'DGBTERR2  D
"RTN","DGBTSP1",108,0)
 ...W !!?3,DGBTERR,") ",ERRMSG("DIERR",DGBTERR,"TEXT",DGBTERR2)
"RTN","DGBTSP1",109,0)
 .M ^TMP("DGBTE",$J,DGBTDTI)=ERRMSG
"RTN","DGBTSP1",110,0)
 .W !! S PROMPT="Press the return key or '^' to exit" N DIR S DIR("A")=PROMPT,DIR(0)="E" D ^DIR W !
"RTN","DGBTSP1",111,0)
 .;W $$PAUSE^DGBTUTL(PROMPT)
"RTN","DGBTSP1",112,0)
 .S DGBTTOUT=-1,DGBTOLD=0,DGBTDT=DGBTDTI
"RTN","DGBTSP1",113,0)
 .K ^DGBT(392,DGBTDTI,"A")
"RTN","DGBTSP1",114,0)
 .D EXIT2^DGBTE S DGBTSP=0
"RTN","DGBTSP1",115,0)
 S DGBTSP=1,CHZFLG=1
"RTN","DGBTSP1",116,0)
 Q
"RTN","DGBTSP1",117,0)
 ;
"RTN","DGBTSP1",118,0)
INVAMT ;this will ask the dollar amount of any extra fees
"RTN","DGBTSP1",119,0)
 ;
"RTN","DGBTSP1",120,0)
 S DGBTINTO=0
"RTN","DGBTSP1",121,0)
 W !
"RTN","DGBTSP1",122,0)
 S BASERATE=$$GET1^DIQ(392,DGBTDT,61,"E")
"RTN","DGBTSP1",123,0)
 S DIR("A")="BASE RATE FEE: "
"RTN","DGBTSP1",124,0)
 S DIR("?")="Enter the Vendor's Base Rate. Type a Dollar Amount between 0 and 100,000, 2 Decimal Digits"
"RTN","DGBTSP1",125,0)
 S DIR(0)="NA^0:100000:2"
"RTN","DGBTSP1",126,0)
 S BASERATE=$S($G(BASERATE)'="":BASERATE,$G(DGBTSP("BASE RATE FEE"))'="":$G(DGBTSP("BASE RATE FEE")),1:"")
"RTN","DGBTSP1",127,0)
 I BASERATE'="" S DIR("B")=$S($G(BASERATE)'="":BASERATE,$G(DGBTSP("BASE RATE FEE"))'="":$G(DGBTSP("BASE RATE FEE")),1:0)
"RTN","DGBTSP1",128,0)
 D ^DIR K DIR S:$D(^DGBT(392,DGBTDTI,"SP")) SPCOMPLETE=1 I Y=""!($D(DTOUT))!($D(DUOUT)) S DGBTSP=0 Q
"RTN","DGBTSP1",129,0)
 S DGBTSP("BASE RATE FEE")=Y
"RTN","DGBTSP1",130,0)
 S DGBTINTO=$G(DGBTINTO)+Y
"RTN","DGBTSP1",131,0)
 ; 
"RTN","DGBTSP1",132,0)
 W !
"RTN","DGBTSP1",133,0)
 S MILEAGEFEE=$$GET1^DIQ(392,DGBTDT,62,"E")
"RTN","DGBTSP1",134,0)
 S DIR("A")="MILEAGE FEE: "
"RTN","DGBTSP1",135,0)
 S DIR("?")="Enter the Vendor's Mileage fee. Type a Dollar Amount between 0 and 500,000, 2 Decimal Digits."
"RTN","DGBTSP1",136,0)
 S DIR(0)="NA^0:500000:2"
"RTN","DGBTSP1",137,0)
 S MILEAGEFEE=$S($G(MILEAGEFEE)'="":MILEAGEFEE,$G(DGBTSP("MILEAGE FEE"))'="":$G(DGBTSP("MILEAGE FEE")),1:"")
"RTN","DGBTSP1",138,0)
 I MILEAGEFEE'="" S DIR("B")=$S($G(MILEAGEFEE)'="":MILEAGEFEE,$G(DGBTSP("MILEAGE FEE"))'="":$G(DGBTSP("MILEAGE FEE")),1:0)
"RTN","DGBTSP1",139,0)
 D ^DIR K DIR S:$D(^DGBT(392,DGBTDTI,"SP")) SPCOMPLETE=1 I ($D(DTOUT))!($D(DUOUT)) K DGBTSP S DGBTSP=0 Q
"RTN","DGBTSP1",140,0)
 S DGBTSP("MILEAGE FEE")=Y
"RTN","DGBTSP1",141,0)
 S DGBTINTO=$G(DGBTINTO)+Y
"RTN","DGBTSP1",142,0)
 ;
"RTN","DGBTSP1",143,0)
 W !
"RTN","DGBTSP1",144,0)
 S NOSHOW=$$GET1^DIQ(392,DGBTDT,63,"E")
"RTN","DGBTSP1",145,0)
 S DIR("A")="NO-SHOW/NO-LOAD FEE: "
"RTN","DGBTSP1",146,0)
 S DIR("?")="Type a Dollar Amount between 0 and 1,000, 2 Decimal Digits."
"RTN","DGBTSP1",147,0)
 S DIR(0)="NOA^0:1000:2"
"RTN","DGBTSP1",148,0)
 S NOSHOW=$S($G(NOSHOW)'="":NOSHOW,$G(DGBTSP("NO SHOW"))'="":$G(DGBTSP("NO SHOW")),1:"")
"RTN","DGBTSP1",149,0)
 I NOSHOW'="" S DIR("B")=$S($G(NOSHOW)'="":NOSHOW,$G(DGBTSP("NO SHOW"))'="":$G(DGBTSP("NO SHOW")),1:0)
"RTN","DGBTSP1",150,0)
 D ^DIR K DIR S:$D(^DGBT(392,DGBTDTI,"SP")) SPCOMPLETE=1 I ($D(DTOUT))!($D(DUOUT)) K DGBTSP S DGBTSP=0 Q
"RTN","DGBTSP1",151,0)
 S DGBTSP("NO SHOW")=Y
"RTN","DGBTSP1",152,0)
 S DGBTINTO=$G(DGBTINTO)+Y
"RTN","DGBTSP1",153,0)
 ;
"RTN","DGBTSP1",154,0)
 W !
"RTN","DGBTSP1",155,0)
 S WAITTIME=$$GET1^DIQ(392,DGBTDT,64,"E")
"RTN","DGBTSP1",156,0)
 S DIR("A")="WAIT TIME FEE: "
"RTN","DGBTSP1",157,0)
 S DIR("?")="Enter the Vendor's fee for waiting. Type a Dollar Amount between 0 and 1,000, 2 Decimal Digits."
"RTN","DGBTSP1",158,0)
 S DIR(0)="NOA^0:1000:2"
"RTN","DGBTSP1",159,0)
 S WAITTIME=$S($G(WAITTIME)'="":WAITTIME,$G(DGBTSP("WAIT TIME"))'="":$G(DGBTSP("WAIT TIME")),1:"")
"RTN","DGBTSP1",160,0)
 I WAITTIME'="" S DIR("B")=$S($G(WAITTIME)'="":WAITTIME,$G(DGBTSP("WAIT TIME"))'="":$G(DGBTSP("WAIT TIME")),1:0)
"RTN","DGBTSP1",161,0)
 D ^DIR K DIR S:$D(^DGBT(392,DGBTDTI,"SP")) SPCOMPLETE=1 I ($D(DTOUT))!($D(DUOUT)) K DGBTSP S DGBTSP=0 Q
"RTN","DGBTSP1",162,0)
 S DGBTSP("WAIT TIME")=Y
"RTN","DGBTSP1",163,0)
 S DGBTINTO=$G(DGBTINTO)+Y
"RTN","DGBTSP1",164,0)
 ;
"RTN","DGBTSP1",165,0)
 W !
"RTN","DGBTSP1",166,0)
 S EXTRACREW=$$GET1^DIQ(392,DGBTDT,65,"E")
"RTN","DGBTSP1",167,0)
 S DIR("A")="EXTRA CREW FEE: "
"RTN","DGBTSP1",168,0)
 S DIR("?")="Enter the Vendor's extra crew fee. Type a Dollar Amount between 0 and 10,000, 2 Decimal Digits."
"RTN","DGBTSP1",169,0)
 S DIR(0)="NOA^0:10000:2"
"RTN","DGBTSP1",170,0)
 S EXTRACREW=$S($G(EXTRACREW)'="":EXTRACREW,$G(DGBTSP("EXTRA CREW"))'="":$G(DGBTSP("EXTRA CREW")),1:"")
"RTN","DGBTSP1",171,0)
 I EXTRACREW'="" S DIR("B")=$S($G(EXTRACREW)'="":EXTRACREW,$G(DGBTSP("EXTRA CREW"))'="":$G(DGBTSP("EXTRA CREW")),1:0)
"RTN","DGBTSP1",172,0)
 D ^DIR K DIR S:$D(^DGBT(392,DGBTDTI,"SP")) SPCOMPLETE=1 I ($D(DTOUT))!($D(DUOUT)) K DGBTSP S DGBTSP=0 Q
"RTN","DGBTSP1",173,0)
 S DGBTSP("EXTRA CREW")=Y
"RTN","DGBTSP1",174,0)
 S DGBTINTO=$G(DGBTINTO)+Y
"RTN","DGBTSP1",175,0)
 ;
"RTN","DGBTSP1",176,0)
 W !
"RTN","DGBTSP1",177,0)
 S SPEQUIP=$$GET1^DIQ(392,DGBTDT,66,"E")
"RTN","DGBTSP1",178,0)
 S DIR("A")="SPECIAL EQUIPMENT FEE: "
"RTN","DGBTSP1",179,0)
 S DIR("?")="Enter the Vendor's fee for additional equipment needed. Type a Dollar Amount between 0 and 5,000, 2 Decimal Digits."
"RTN","DGBTSP1",180,0)
 S DIR(0)="NOA^0:5000:2"
"RTN","DGBTSP1",181,0)
 S SPEQUIP=$S($G(SPEQUIP)'="":SPEQUIP,$G(DGBTSP("SP EQUIP"))'="":$G(DGBTSP("SP EQUIP")),1:"")
"RTN","DGBTSP1",182,0)
 I SPEQUIP'="" S DIR("B")=$S($G(SPEQUIP)'="":SPEQUIP,$G(DGBTSP("SP EQUIP"))'="":$G(DGBTSP("SP EQUIP")),1:0)
"RTN","DGBTSP1",183,0)
 D ^DIR K DIR S:$D(^DGBT(392,DGBTDTI,"SP")) SPCOMPLETE=1 I ($D(DTOUT))!($D(DUOUT)) K DGBTSP S DGBTSP=0 Q
"RTN","DGBTSP1",184,0)
 S DGBTSP("SP EQUIP")=Y
"RTN","DGBTSP1",185,0)
 S DGBTINTO=$G(DGBTINTO)+Y
"RTN","DGBTSP1",186,0)
 ;
"RTN","DGBTSP1",187,0)
 W !
"RTN","DGBTSP1",188,0)
 S TOTINVOICE=$$GET1^DIQ(392,DGBTDT,60,"I")
"RTN","DGBTSP1",189,0)
 S DIR("A")="TOTAL INVOICE: "
"RTN","DGBTSP1",190,0)
 S DIR("?")="Type a Dollar Amount between 1 and 999,999, 2 Decimal Digits."
"RTN","DGBTSP1",191,0)
 S DIR(0)="NA^1:999999:2"
"RTN","DGBTSP1",192,0)
 I TOTINVOICE'="" S DIR("B")=$S($G(TOTINVOICE)'="":TOTINVOICE,1:$G(DGBTSP("TOTAL INVOICE")))
"RTN","DGBTSP1",193,0)
 D ^DIR K DIR S:$D(^DGBT(392,DGBTDTI,"SP")) SPCOMPLETE=1 I Y=""!($D(DTOUT))!($D(DUOUT)) S DGBTSP=0 Q
"RTN","DGBTSP1",194,0)
 S DGBTSP("TOTAL INVOICE")=Y
"RTN","DGBTSP1",195,0)
 ;
"RTN","DGBTSP1",196,0)
 Q
"RTN","DGBTSP1",197,0)
 ;
"RTN","DGBTSP1",198,0)
DENREA(DGBTCMTY) ;denial reasons
"RTN","DGBTSP1",199,0)
 ;
"RTN","DGBTSP1",200,0)
 ;S DGBTOACT=$S('$D(^DGBT(392.5,+$P(DGBTVAR(0),"^",6),0)):0,1:+$P(^DGBT(392.3,$P(DGBTVAR(0),"^",6),0),"^",5))
"RTN","DGBTSP1",201,0)
 K X S (DIC("B"),X)="" S DIC("A")="Select Denial Reason:"
"RTN","DGBTSP1",202,0)
 S DIC="^DGBT(392.5,",DIC(0)="AEQMZ" ;,DIC("S")="I $P(^(0),U,3)'>DGBTDT&('$P(^(0),U,4)!($P(^(0),U,4)'<DGBTDT))"
"RTN","DGBTSP1",203,0)
 D ^DIC K DIC I $D(DTOUT) S DGBTTOUT=-1 K DTOUT Q
"RTN","DGBTSP1",204,0)
 S DGBTACTN=$P(Y,"^"),DGBTACCT=$P($G(Y(0)),"^",5)
"RTN","DGBTSP1",205,0)
 ;
"RTN","DGBTSP1",206,0)
 Q
"VER")
8.0^22.2
"^DD",392,392,60,0)
TOTAL INVOICE AMOUNT^RNJ9,2^^SP;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<1) X
"^DD",392,392,60,3)
Type a dollar amount between 1 and 999999, 2 decimal digits.
"^DD",392,392,60,21,0)
^.001^3^3^3170905^^^^
"^DD",392,392,60,21,1,0)
This is the total of all charges by a vendor for the 
"^DD",392,392,60,21,2,0)
transportation of the patient by special mode. This includes all cost 
"^DD",392,392,60,21,3,0)
and special add-on fees.
"^DD",392,392,60,"DT")
3170905
"^DD",392,392,62,0)
MILEAGE FEE^RNJ9,2^^SP;6^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>500000)!(X<0) X
"^DD",392,392,62,.1)
SPECIAL MODE MILEAGE FEE
"^DD",392,392,62,3)
Type a dollar amount between 0 and 500000, 2 decimal digits.
"^DD",392,392,62,21,0)
^.001^2^2^3170905^^^^
"^DD",392,392,62,21,1,0)
This is the per mile amount charged by the vendor for transporting 
"^DD",392,392,62,21,2,0)
the patient by special mode.
"^DD",392,392,62,"DT")
3170905
"^DD",392,392,63,0)
NO SHOW/NO LOAD FEE^NJ7,2X^^SP;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>1000)!(X<0)!(X?.E1"."3.N) X
"^DD",392,392,63,3)
Type a dollar amount between 0 and 1,000, 2 decimal digits.
"^DD",392,392,63,21,0)
^.001^1^1^3170905^^^^
"^DD",392,392,63,21,1,0)
Vendor's charge for a no-show patient.
"^DD",392,392,63,"DT")
3170905
"BLD",10720,6)
^33
**END**
**END**

