Released DGBT*1*28 SEQ #30
Extracted from mail message
**KIDS**:DGBT*1.0*28^

**INSTALL NAME**
DGBT*1.0*28
"BLD",10010,0)
DGBT*1.0*28^BENEFICIARY TRAVEL^0^3160831^y
"BLD",10010,1,0)
^^18^18^3160822^^
"BLD",10010,1,1,0)
 This patch addresses 7 issues:
"BLD",10010,1,2,0)
  
"BLD",10010,1,3,0)
    1. The Report Of Claim Amounts report is not displaying values for 
"BLD",10010,1,4,0)
       Special Mode claims.
"BLD",10010,1,5,0)
  
"BLD",10010,1,6,0)
    2. The Bene Travel software is incorrectly displaying 9 digit zip 
"BLD",10010,1,7,0)
       codes.
"BLD",10010,1,8,0)
  
"BLD",10010,1,9,0)
    3. The denial letter is not printing the correct user name.
"BLD",10010,1,10,0)
  
"BLD",10010,1,11,0)
    4. There is duplicate wording in the denial letter template.
"BLD",10010,1,12,0)
 
"BLD",10010,1,13,0)
    5. Special Mode claims are incorrectly displaying 'One Way' every 
"BLD",10010,1,14,0)
       time.
"BLD",10010,1,15,0)
 
"BLD",10010,1,16,0)
    6. An undefined error occurs when there is single division.
"BLD",10010,1,17,0)
 
"BLD",10010,1,18,0)
    7. Existing claims are being erased.
"BLD",10010,4,0)
^9.64PA^^0
"BLD",10010,6.3)
12
"BLD",10010,"INID")
^n
"BLD",10010,"INIT")
EN^DGBT1P28
"BLD",10010,"KRN",0)
^9.67PA^779.2^20
"BLD",10010,"KRN",.4,0)
.4
"BLD",10010,"KRN",.401,0)
.401
"BLD",10010,"KRN",.402,0)
.402
"BLD",10010,"KRN",.403,0)
.403
"BLD",10010,"KRN",.5,0)
.5
"BLD",10010,"KRN",.84,0)
.84
"BLD",10010,"KRN",3.6,0)
3.6
"BLD",10010,"KRN",3.8,0)
3.8
"BLD",10010,"KRN",9.2,0)
9.2
"BLD",10010,"KRN",9.8,0)
9.8
"BLD",10010,"KRN",9.8,"NM",0)
^9.68A^11^8
"BLD",10010,"KRN",9.8,"NM",4,0)
DGBTDLT1^^0^B75968041
"BLD",10010,"KRN",9.8,"NM",5,0)
DGBTCDSP^^0^B38322177
"BLD",10010,"KRN",9.8,"NM",6,0)
DGBT1P28^^0^B6585492
"BLD",10010,"KRN",9.8,"NM",7,0)
DGBTOA2^^0^B17831216
"BLD",10010,"KRN",9.8,"NM",8,0)
DGBTE^^0^B53217422
"BLD",10010,"KRN",9.8,"NM",9,0)
DGBTE1^^0^B32593680
"BLD",10010,"KRN",9.8,"NM",10,0)
DGBTCD^^0^B30154199
"BLD",10010,"KRN",9.8,"NM",11,0)
DGBTCR^^0^B26266236
"BLD",10010,"KRN",9.8,"NM","B","DGBT1P28",6)

"BLD",10010,"KRN",9.8,"NM","B","DGBTCD",10)

"BLD",10010,"KRN",9.8,"NM","B","DGBTCDSP",5)

"BLD",10010,"KRN",9.8,"NM","B","DGBTCR",11)

"BLD",10010,"KRN",9.8,"NM","B","DGBTDLT1",4)

"BLD",10010,"KRN",9.8,"NM","B","DGBTE",8)

"BLD",10010,"KRN",9.8,"NM","B","DGBTE1",9)

"BLD",10010,"KRN",9.8,"NM","B","DGBTOA2",7)

"BLD",10010,"KRN",19,0)
19
"BLD",10010,"KRN",19.1,0)
19.1
"BLD",10010,"KRN",101,0)
101
"BLD",10010,"KRN",409.61,0)
409.61
"BLD",10010,"KRN",771,0)
771
"BLD",10010,"KRN",779.2,0)
779.2
"BLD",10010,"KRN",870,0)
870
"BLD",10010,"KRN",8989.51,0)
8989.51
"BLD",10010,"KRN",8989.52,0)
8989.52
"BLD",10010,"KRN",8994,0)
8994
"BLD",10010,"KRN","B",.4,.4)

"BLD",10010,"KRN","B",.401,.401)

"BLD",10010,"KRN","B",.402,.402)

"BLD",10010,"KRN","B",.403,.403)

"BLD",10010,"KRN","B",.5,.5)

"BLD",10010,"KRN","B",.84,.84)

"BLD",10010,"KRN","B",3.6,3.6)

"BLD",10010,"KRN","B",3.8,3.8)

"BLD",10010,"KRN","B",9.2,9.2)

"BLD",10010,"KRN","B",9.8,9.8)

"BLD",10010,"KRN","B",19,19)

"BLD",10010,"KRN","B",19.1,19.1)

"BLD",10010,"KRN","B",101,101)

"BLD",10010,"KRN","B",409.61,409.61)

"BLD",10010,"KRN","B",771,771)

"BLD",10010,"KRN","B",779.2,779.2)

"BLD",10010,"KRN","B",870,870)

"BLD",10010,"KRN","B",8989.51,8989.51)

"BLD",10010,"KRN","B",8989.52,8989.52)

"BLD",10010,"KRN","B",8994,8994)

"BLD",10010,"QDEF")
^^^^^^^^^^YES
"BLD",10010,"QUES",0)
^9.62^^
"BLD",10010,"REQB",0)
^9.611^2^1
"BLD",10010,"REQB",2,0)
DGBT*1.0*25^2
"BLD",10010,"REQB","B","DGBT*1.0*25",2)

"INIT")
EN^DGBT1P28
"MBREQ")
0
"PKG",154,-1)
1^1
"PKG",154,0)
BENEFICIARY TRAVEL^DGBT^Beneficiary Travel
"PKG",154,20,0)
^9.402P^^
"PKG",154,22,0)
^9.49I^1^1
"PKG",154,22,1,0)
1.0^3030731^3020423^66481
"PKG",154,22,1,"PAH",1,0)
28^3160831
"PKG",154,22,1,"PAH",1,1,0)
^^18^18^3160831
"PKG",154,22,1,"PAH",1,1,1,0)
 This patch addresses 7 issues:
"PKG",154,22,1,"PAH",1,1,2,0)
  
"PKG",154,22,1,"PAH",1,1,3,0)
    1. The Report Of Claim Amounts report is not displaying values for 
"PKG",154,22,1,"PAH",1,1,4,0)
       Special Mode claims.
"PKG",154,22,1,"PAH",1,1,5,0)
  
"PKG",154,22,1,"PAH",1,1,6,0)
    2. The Bene Travel software is incorrectly displaying 9 digit zip 
"PKG",154,22,1,"PAH",1,1,7,0)
       codes.
"PKG",154,22,1,"PAH",1,1,8,0)
  
"PKG",154,22,1,"PAH",1,1,9,0)
    3. The denial letter is not printing the correct user name.
"PKG",154,22,1,"PAH",1,1,10,0)
  
"PKG",154,22,1,"PAH",1,1,11,0)
    4. There is duplicate wording in the denial letter template.
"PKG",154,22,1,"PAH",1,1,12,0)
 
"PKG",154,22,1,"PAH",1,1,13,0)
    5. Special Mode claims are incorrectly displaying 'One Way' every 
"PKG",154,22,1,"PAH",1,1,14,0)
       time.
"PKG",154,22,1,"PAH",1,1,15,0)
 
"PKG",154,22,1,"PAH",1,1,16,0)
    6. An undefined error occurs when there is single division.
"PKG",154,22,1,"PAH",1,1,17,0)
 
"PKG",154,22,1,"PAH",1,1,18,0)
    7. Existing claims are being erased.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","DGBT1P28")
0^6^B6585492^n/a
"RTN","DGBT1P28",1,0)
DGBT1P28 ;ALB/DBE - BENEFICIARY TRAVEL PATCH 28 POST-INIT ;6/5/15 11:47am
"RTN","DGBT1P28",2,0)
 ;;1.0;Beneficiary Travel;**28**;September 25, 2001;Build 12
"RTN","DGBT1P28",3,0)
 ;
"RTN","DGBT1P28",4,0)
 ;this routine is a post-init to update the zip code
"RTN","DGBT1P28",5,0)
 ;fields in the Beneficiary Travel Claim (#392) file
"RTN","DGBT1P28",6,0)
 ;and the 30 Day Application Requirement template in
"RTN","DGBT1P28",7,0)
 ;the Beneficiary Travel Denial Reasons (392.8) file
"RTN","DGBT1P28",8,0)
 ;
"RTN","DGBT1P28",9,0)
EN ;entry point
"RTN","DGBT1P28",10,0)
 ;
"RTN","DGBT1P28",11,0)
 D BMES^XPDUTL("Post-init starting...")
"RTN","DGBT1P28",12,0)
 D UPDZIP
"RTN","DGBT1P28",13,0)
 D DGBTDLT
"RTN","DGBT1P28",14,0)
 D BMES^XPDUTL("...Post-init complete")
"RTN","DGBT1P28",15,0)
 ;
"RTN","DGBT1P28",16,0)
 Q
"RTN","DGBT1P28",17,0)
 ;
"RTN","DGBT1P28",18,0)
UPDZIP ;remove hyphen from internal zip code entry
"RTN","DGBT1P28",19,0)
 ;
"RTN","DGBT1P28",20,0)
 N DGBTDT
"RTN","DGBT1P28",21,0)
 D BMES^XPDUTL("     Updating zip codes...")
"RTN","DGBT1P28",22,0)
 S DGBTDT=0 F  S DGBTDT=$O(^DGBT(392,DGBTDT)) Q:'DGBTDT  D
"RTN","DGBT1P28",23,0)
 .I $D(^DGBT(392,DGBTDT,"D")) D
"RTN","DGBT1P28",24,0)
 ..I $P(^DGBT(392,DGBTDT,"D"),U,6)["-" D
"RTN","DGBT1P28",25,0)
 ...S $P(^DGBT(392,DGBTDT,"D"),U,6)=$TR($P(^DGBT(392,DGBTDT,"D"),U,6),"-","")
"RTN","DGBT1P28",26,0)
 .I $D(^DGBT(392,DGBTDT,"T")) D
"RTN","DGBT1P28",27,0)
 ..I $P(^DGBT(392,DGBTDT,"T"),U,6)["-" D
"RTN","DGBT1P28",28,0)
 ...S $P(^DGBT(392,DGBTDT,"T"),U,6)=$TR($P(^DGBT(392,DGBTDT,"T"),U,6),"-","")
"RTN","DGBT1P28",29,0)
 D BMES^XPDUTL("     ...zip code update complete")
"RTN","DGBT1P28",30,0)
 Q
"RTN","DGBT1P28",31,0)
 ;
"RTN","DGBT1P28",32,0)
DGBTDLT ;update the 30 Day Application Requirement denial letter template
"RTN","DGBT1P28",33,0)
 ;
"RTN","DGBT1P28",34,0)
 N DGBTIEN,DGBTARAY,DGBTLP
"RTN","DGBT1P28",35,0)
 D BMES^XPDUTL("     Updating denial letter...")
"RTN","DGBT1P28",36,0)
 S DGBTIEN=$O(^DGBT(392.8,"B","30 DAY APPLICATION REQUIREMENT",""))
"RTN","DGBT1P28",37,0)
 I 'DGBTIEN D BMES^XPDUTL("***Error encountered: 30 DAY APPLICATION REQUIREMENT letter not found***") Q
"RTN","DGBT1P28",38,0)
 F DGBTLP=1:1:5 S DGBTARAY(DGBTLP)=$P($T(TEXT+DGBTLP),";;",2)
"RTN","DGBT1P28",39,0)
 D WP^DIE(392.8,DGBTIEN_",",1,"K","DGBTARAY","DGBTERR")
"RTN","DGBT1P28",40,0)
 I $D(DGBTERR) D BMES^XPDUTL("***Error encountered while attempting to update the denial letter***")
"RTN","DGBT1P28",41,0)
 E  D BMES^XPDUTL("     ...denial letter update complete")
"RTN","DGBT1P28",42,0)
 Q
"RTN","DGBT1P28",43,0)
 ;
"RTN","DGBT1P28",44,0)
TEXT ;new text for 30 Day Application Requirement template
"RTN","DGBT1P28",45,0)
 ;;
"RTN","DGBT1P28",46,0)
 ;; Your request for payment consideration was received greater than 30
"RTN","DGBT1P28",47,0)
 ;; calendar days from the date you completed travel associated with your
"RTN","DGBT1P28",48,0)
 ;; appointment or the date you became administratively eligible for
"RTN","DGBT1P28",49,0)
 ;; payment of Beneficiary Travel benefits.
"RTN","DGBTCD")
0^10^B30154199^B29294198
"RTN","DGBTCD",1,0)
DGBTCD ;ALB/SCK/BLD - BENEFICIARY TRAVEL CLAIM DISPLAY; 12/15/92 4/14/93
"RTN","DGBTCD",2,0)
 ;;1.0;Beneficiary Travel;**2,7,9,20,22,25,28**;September 25, 2001;Build 12
"RTN","DGBTCD",3,0)
 Q
"RTN","DGBTCD",4,0)
SCREEN ;this will display the information screen at the end of a claim and 
"RTN","DGBTCD",5,0)
 Q:'$D(^DGBT(392,DGBTDT,0))  S U="^" K DGBTVAR F I=0,"A","C","D","M","R","T" S DGBTVAR(I)=$S($D(^DGBT(392,DGBTDT,I)):^(I),1:"")
"RTN","DGBTCD",6,0)
 S DGBTACCT=$S($D(^DGBT(392.3,+$P(DGBTVAR(0),U,6),0)):$P($G(^(0)),U,5),1:0)
"RTN","DGBTCD",7,0)
 I 'DGBTACCT W !!,*7,">> WARNING! No ACCOUNT TYPE for this claim, Please correct through Claim Enter/Edit!" G QUIT
"RTN","DGBTCD",8,0)
 I '$P(DGBTVAR(0),U,11) W !!,*7,">> WARNING! No DIVISION specified for this claim, please correct through Claim Enter/Edit." G QUIT ;dbe patch DGBT*1*22
"RTN","DGBTCD",9,0)
 W @IOF
"RTN","DGBTCD",10,0)
 W !?18,"Beneficiary Travel Claim Information <Display>"
"RTN","DGBTCD",11,0)
 W !!,?2,"Claim Date: ",DGBTDTE W:$P(DGBTVAR(0),U,11)'=""&($D(^DG(40.8,$P(DGBTVAR(0),U,11),0))) ?40,"Division: ",$P(^DG(40.8,$P(DGBTVAR(0),U,11),0),U)
"RTN","DGBTCD",12,0)
 D PID^VADPT6 W !!?8,"Name: ",VADM(1),?40,"PT ID: ",VA("PID"),?64,"DOB: ",$P(VADM(3),U,2)
"RTN","DGBTCD",13,0)
 S (DGBTFCTY,DGBTTCTY)=""
"RTN","DGBTCD",14,0)
 I $P(DGBTVAR("D"),U,4)]"" S DGBTCNA=$P(DGBTVAR("D"),U,4) D CITY^DGBTCR I DGBTCSZ[DGBTCNA D
"RTN","DGBTCD",15,0)
 . S DGBTCSZ=DGBTCNA_", "_$S(+$P(DGBTVAR("D"),U,5)>0:$P(^DIC(5,$P(DGBTVAR("D"),U,5),0),U,2),1:"")_"  "
"RTN","DGBTCD",16,0)
 . S Y=$P(DGBTVAR("D"),U,6),Y=$E(Y,1,5)_$S($E(Y,6,9)]"":"-"_$E(Y,6,9),1:"") S DGBTCSZ=DGBTCSZ_Y,DGBTFCTY=DGBTCSZ
"RTN","DGBTCD",17,0)
 S $P(DGBTVAR("T"),U,6)=$$GET1^DIQ(392,DGBTDT,28.2) ;dgbt*1.0*28 - use fileman to set external zip code value
"RTN","DGBTCD",18,0)
 I $P(DGBTVAR("T"),U,4)]"" S DGBTCNA=$P(DGBTVAR("T"),U,4) D CITY^DGBTCR S:DGBTCSZ[DGBTCNA DGBTCSZ=DGBTCNA_", "_$S(+$P(DGBTVAR("T"),U,5)>0:$P(^DIC(5,$P(DGBTVAR("T"),U,5),0),U,2),1:"")_"  "_$P(DGBTVAR("T"),U,6) S DGBTTCTY=DGBTCSZ
"RTN","DGBTCD",19,0)
FROM W !!," Depart From: ",$E($P(DGBTVAR("D"),U),1,30)
"RTN","DGBTCD",20,0)
 W ?46,"To: ",$E($P(DGBTVAR("T"),U),1,30)
"RTN","DGBTCD",21,0)
 W !?14 W:$P(DGBTVAR("D"),U,2)]"" $P(DGBTVAR("D"),U,2) W:$P(DGBTVAR("D"),U,2)="" $P(DGBTVAR("D"),U,3) W:$P($G(DGBTVAR("D")),U,2)=""&($P($G(DGBTVAR("D")),U,3)="") DGBTFCTY
"RTN","DGBTCD",22,0)
 W ?50 W:$P(DGBTVAR("T"),U,2)]"" $P(DGBTVAR("T"),U,2) W:$P(DGBTVAR("T"),U,2)="" $P(DGBTVAR("T"),U,3) W:$P(DGBTVAR("T"),U,2)=""&($P(DGBTVAR("T"),U,3)="") DGBTTCTY
"RTN","DGBTCD",23,0)
 W !?14 W:$P(DGBTVAR("D"),U,3)]"" $P(DGBTVAR("D"),U,3) W:$P(DGBTVAR("D"),U,2)]""&($P(DGBTVAR("D"),U,3)="") DGBTFCTY
"RTN","DGBTCD",24,0)
 W ?50 W:$P(DGBTVAR("T"),U,3)]"" $P(DGBTVAR("T"),U,3) W:$P(DGBTVAR("T"),U,2)]""&($P(DGBTVAR("T"),U,3)="") DGBTTCTY
"RTN","DGBTCD",25,0)
 W !?14 W:$P(DGBTVAR("D"),U,2)]""&($P(DGBTVAR("D"),U,3)]"") DGBTFCTY
"RTN","DGBTCD",26,0)
 W ?50 W:$P(DGBTVAR("T"),U,2)]""&($P(DGBTVAR("T"),U,3)]"") DGBTTCTY
"RTN","DGBTCD",27,0)
ELIG W !!," Eligibility: " W:$P(DGBTVAR(0),U,3) $P(^DIC(8,$P(DGBTVAR(0),U,3),0),U) W:$P(DGBTVAR(0),U,4)]"" ?45,"SC%: ",$P(DGBTVAR(0),U,4)
"RTN","DGBTCD",28,0)
 I $P(DGBTVAR(0),U,5) W ?57,"Cert. Date: " S VADAT("W")=9999999-$P($P(DGBTVAR(0),U,5),".") D ^VADATE W $P(VADATE("E"),"@") K VADAT,VADATE
"RTN","DGBTCD",29,0)
ACCT W !!?5,"Account: ",$S($P(DGBTVAR(0),U,6):$E($P(^DGBT(392.3,$P(DGBTVAR(0),U,6),0),U),1,15),1:"") W:$P(DGBTVAR("A"),U,3) ?31,"REVIEW VISIT"
"RTN","DGBTCD",30,0)
 ;question added for DG*1.0*20 E18
"RTN","DGBTCD",31,0)
 W !!,"Common Carrier Req: ",$S($$GET1^DIQ(392,DGBTDT,55.1)="YES":"YES",1:"NO") W ?48,"COMMON CARRIER FEE: " S X=$P(DGBTVAR("C"),U,2),X2="2$" N X3 D COMMA^%DTC W X ;
"RTN","DGBTCD",32,0)
 W !,?51,"Most Econ. Cost: " S X=$P(DGBTVAR(0),U,8),X2="2$" N X3 D COMMA^%DTC W X
"RTN","DGBTCD",33,0)
ATT I DGBTACCT=4!(DGBTACCT=5) W !,"Attend/Payee: ",$S($D(DGBTVAR("A")):$P(DGBTVAR("A"),U,2),1:"")
"RTN","DGBTCD",34,0)
 I $G(PATCHDT)'<$G(DGBTDT) I $G(DGBTACCT)'=4&($G(DGBTACCT)'=5) W !," Mode/Trans.: ",$S($P($G(DGBTVAR("A")),U,4):$P(^DGBT(392.43,$P($G(DGBTVAR("A")),U,4),0),U),1:"")  ;changed file from 392.4 to 392.43
"RTN","DGBTCD",35,0)
 I $G(PATCHDT)<$G(DGBTDT) I $G(DGBTACCT)'=4&($G(DGBTACCT)'=5) W !," Mode/Trans.: ",$S($P($G(DGBTVAR("A")),U,4):$P(^DGBT(392.4,$P($G(DGBTVAR("A")),U,4),0),U),1:"")  ;use file 392.4 if claim date is before install date
"RTN","DGBTCD",36,0)
 I $D(^DG(43,1,"BT")) I $P(^DG(43,1,"BT"),U,2)=1 W ?51,"Meals & Lodging: " S X=$P($G(DGBTVAR("M")),U,4) N X3 D COMMA^%DTC W X
"RTN","DGBTCD",37,0)
 I $G(DGBTACCT)=4!($G(DGBTACCT)=5) W !,"One Way/"
"RTN","DGBTCD",38,0)
 I $G(DGBTACCT)'=4&($G(DGBTACCT)'=5) D
"RTN","DGBTCD",39,0)
 . S DGX=$S($P($G(DGBTVAR(0)),U,7):"Carrier",$P($G(DGBTVAR(0)),U,14):"CoreFLS",1:"Carrier") W:DGX["FLS" !,"CoreFLS Carrier: " W:DGX["Carrier" !?5,"Carrier: "
"RTN","DGBTCD",40,0)
 . W $E($S((DGX["FLS"&$P($G(DGBTVAR(0)),U,14)):$P(^DGBT(392.31,$P($G(DGBTVAR(0)),U,14),0),U),(DGX["Carrier"&$P(DGBTVAR(0),U,7)):$$GET1^DIQ(392,DGBTDT_",",7)),1,27) K DGX
"RTN","DGBTCD",41,0)
 I $D(^DG(43,1,"BT")) I $P(^DG(43,1,"BT"),U,2)=1 W ?46,"Ferry, Bridges, Etc.: " S X=$P(DGBTVAR("M"),U,5) N X3 D COMMA^%DTC W X
"RTN","DGBTCD",42,0)
 I $G(DGBTACCT)=4!($G(DGBTACCT)=5) W !?2,"Round Trip: ",$S($P(DGBTVAR("M"),U)=1:"ONE WAY",$P(DGBTVAR("M"),U)=2:"ROUND TRIP",1:"")
"RTN","DGBTCD",43,0)
 I $G(DGBTACCT)'=4&($G(DGBTACCT)'=5) W !,"Auth. Person: " I $P(DGBTVAR("A"),U) W $S($D(DGBTVAR("A"))&($D(^VA(200,$P(DGBTVAR("A"),U),0))):$P(^VA(200,$P(DGBTVAR("A"),U),0),U),1:"")
"RTN","DGBTCD",44,0)
 I $G(DGBTACCT)=4!($G(DGBTACCT)=5) W ?46,"Total Mileage Amount: " D  N X3 D COMMA^%DTC W X
"RTN","DGBTCD",45,0)
 .S X=$P(DGBTVAR("M"),U,3)
"RTN","DGBTCD",46,0)
 I $G(DGBTACCT)=4!($G(DGBTACCT)=5) W !,"Mileage/"
"RTN","DGBTCD",47,0)
DED W ?48,"Applied Deductible: " D  N X3 D COMMA^%DTC W X
"RTN","DGBTCD",48,0)
 .S X=$P($G(DGBTVAR(0)),"^",9)   ;$G(DGBTDCV1)    ;$P(DGBTVAR(0),"^",9)
"RTN","DGBTCD",49,0)
 W ! W:$G(DGBTACCT)=4!($G(DGBTACCT)=5) ?5,"One Way: ",$P($G(DGBTVAR("M")),U,2)_" MILES"
"RTN","DGBTCD",50,0)
 W ?53,"Amount Payable " S X=$$GET1^DIQ(392,DGBTDT,10) N X3 D COMMA^%DTC W X
"RTN","DGBTCD",51,0)
REMARK W !!,"Remarks: ",$S($D(^DGBT(392,DGBTDT,"R")):$P(^DGBT(392,DGBTDT,"R"),U),1:"")
"RTN","DGBTCD",52,0)
QUIT K DGBTCNA,DGBTCSZ,DGBTFCTY,DGBTTCTY,DGBTCNA,VADAM,X,X2,I ;DGBTDIV - dbe patch DGBT*1*25 - removed to preserve division for subsequent claims
"RTN","DGBTCD",53,0)
 Q
"RTN","DGBTCDSP")
0^5^B38322177^B37725892
"RTN","DGBTCDSP",1,0)
DGBTCDSP ;;ALB/BLD - BENEFICIARY TRAVEL CLAIM DISPLAY - SPECIAL MODE;02/03/2012
"RTN","DGBTCDSP",2,0)
 ;;1.0;Beneficiary Travel;**20,21,22,28**;September 25, 2001;Build 12
"RTN","DGBTCDSP",3,0)
 Q
"RTN","DGBTCDSP",4,0)
SCREEN ;this will display the information screen at the end of a claim
"RTN","DGBTCDSP",5,0)
 N TOSTATE,DPSTATE,Z,INFOLINE
"RTN","DGBTCDSP",6,0)
 S:$G(INFOLINE)="" INFOLINE=1
"RTN","DGBTCDSP",7,0)
 S:$G(DGBTDT)="" DGBTDT=$G(DGBTDTI)
"RTN","DGBTCDSP",8,0)
 I $D(DGBTSP)'>1 D BLDARRY(.DGBTSP)
"RTN","DGBTCDSP",9,0)
 S DGBTVAR(0)=^DGBT(392,DGBTDT,0)
"RTN","DGBTCDSP",10,0)
 S DPSTATE=$O(^DIC(5,"B",DGBTSP("STATE OF DEPARTURE"),"")),DPSTATE=$P(^DIC(5,DPSTATE,0),"^",2)
"RTN","DGBTCDSP",11,0)
 S TOSTATE=$O(^DIC(5,"B",DGBTINST("STATE"),"")),TOSTATE=$P(^DIC(5,TOSTATE,0),"^",2)
"RTN","DGBTCDSP",12,0)
 S DGBTACCT=$S($D(DGBTSP("ACCOUNT")):DGBTSP("ACCOUNT"),1:0)
"RTN","DGBTCDSP",13,0)
 I DGBTACCT=0 W !!,*7,">> WARNING! No ACCOUNT TYPE for this claim, Please correct through Claim Enter/Edit!" G QUIT^DGBTEND
"RTN","DGBTCDSP",14,0)
 W @IOF
"RTN","DGBTCDSP",15,0)
 W !?18,"Beneficiary Travel Claim Information <Display>"
"RTN","DGBTCDSP",16,0)
 W !!,?2,"Claim Date: ",$S($G(DGBTDTE)'="":DGBTDTE,1:VADATE("E")) W:$G(DGBTINST("DIVISION"))'="" ?40,"Division: ",$G(DGBTINST("DIVISION"))
"RTN","DGBTCDSP",17,0)
 D PID^VADPT6
"RTN","DGBTCDSP",18,0)
 W !!,"Name: ",VADM(1),?40,"PT ID: ",VA("PID"),?64,"DOB: ",$P(VADM(3),U,2)
"RTN","DGBTCDSP",19,0)
 S (DGBTFCTY,DGBTTCTY)=""
"RTN","DGBTCDSP",20,0)
FROM W !!," Depart From: ",$G(DGBTSP("PLACE OF DEPARTURE"))
"RTN","DGBTCDSP",21,0)
 W ?46,"To: ",$G(DGBTINST("INST NAME"))
"RTN","DGBTCDSP",22,0)
 W !?14,DGBTSP("CITY OF DEPARTURE")_", "_DPSTATE_" "_DGBTSP("ZIP CODE/DEPARTURE")
"RTN","DGBTCDSP",23,0)
 I $G(DGBTINST("ADDRESS1"))'="" W ?50,DGBTINST("ADDRESS1")
"RTN","DGBTCDSP",24,0)
 W !,?50,$G(DGBTINST("CITY"))_", "_TOSTATE_"  "_$G(DGBTINST("ZIP CODE"))
"RTN","DGBTCDSP",25,0)
 ;
"RTN","DGBTCDSP",26,0)
ELIG W !!,"Eligibility: " W:$P(DGBTVAR(0),U,3) $P(^DIC(8,$P(DGBTVAR(0),U,3),0),U) W ?45,"SC%: ",$S($P(DGBTVAR(0),U,4)="":0,1:$P(DGBTVAR(0),U,4))
"RTN","DGBTCDSP",27,0)
 ;
"RTN","DGBTCDSP",28,0)
ACCT W !!,"Account: ",$G(DGBTSP("ACCOUNT"))
"RTN","DGBTCDSP",29,0)
 ;question added for DG*1.0*20 E18
"RTN","DGBTCDSP",30,0)
 W !!,"Mode/Trans: ",$G(DGBTSP("MODE OF TRANS"))
"RTN","DGBTCDSP",31,0)
 ;
"RTN","DGBTCDSP",32,0)
 W ?45,"One Way/Round Trip: "
"RTN","DGBTCDSP",33,0)
 S X=$S($G(DGBTSP("RT/ONE WAY"))="R":"ROUND TRIP",1:"ONE WAY") W ?67,$J(X,11)
"RTN","DGBTCDSP",34,0)
 ;
"RTN","DGBTCDSP",35,0)
 W !,"Carrier: ",$$GET1^DIQ(392,DGBTDT_",",71) ;dbe patch DGBT*1*22 - modified to use vendor ien
"RTN","DGBTCDSP",36,0)
 ;
"RTN","DGBTCDSP",37,0)
 W ?45,"Total Miles Traveled: "
"RTN","DGBTCDSP",38,0)
 S X=$G(DGBTSP("TOTAL MILES")),X2="2S" D COMMA^%DTC W ?67,X
"RTN","DGBTCDSP",39,0)
 ;
"RTN","DGBTCDSP",40,0)
 W !,"Invoice: ",$G(DGBTSP("INVOICE NUMBER"))
"RTN","DGBTCDSP",41,0)
 ;
"RTN","DGBTCDSP",42,0)
 W ?45,"Base Rate Fee: "
"RTN","DGBTCDSP",43,0)
 S X=$G(DGBTSP("BASE RATE FEE")),X2="2$" D COMMA^%DTC W ?67,X
"RTN","DGBTCDSP",44,0)
 ;
"RTN","DGBTCDSP",45,0)
 W !,"Date Received: ",$G(DGBTSP("DT INVOICE REC"))
"RTN","DGBTCDSP",46,0)
 ;
"RTN","DGBTCDSP",47,0)
 W ?45,"Mileage Fee: "
"RTN","DGBTCDSP",48,0)
 S X=$G(DGBTSP("MILEAGE FEE")),X2="2$" D COMMA^%DTC W ?67,X
"RTN","DGBTCDSP",49,0)
 ;
"RTN","DGBTCDSP",50,0)
 W !,"Pre-Authorized: ",$G(DGBTSP("PRE-AUTHORIZED"))
"RTN","DGBTCDSP",51,0)
 ;
"RTN","DGBTCDSP",52,0)
 W ?45,"No-Show/No Load Fee: "
"RTN","DGBTCDSP",53,0)
 S X=$G(DGBTSP("NO SHOW")),X2="2$" D COMMA^%DTC W ?67,X
"RTN","DGBTCDSP",54,0)
 ;
"RTN","DGBTCDSP",55,0)
 S PAYMENT=$$GET1^DIQ(392,DGBTDT,85)
"RTN","DGBTCDSP",56,0)
 W !,"Payment: ",$S($G(PAYMENT)="YES":"APPROVED",$G(DGBTSP("AUTHORIZED"))="YES":"APPROVED",1:"DENIED")
"RTN","DGBTCDSP",57,0)
 ;
"RTN","DGBTCDSP",58,0)
 W ?45,"Wait Time Fee: "
"RTN","DGBTCDSP",59,0)
 S X=$G(DGBTSP("WAIT TIME")),X2="2$" D COMMA^%DTC W ?67,X
"RTN","DGBTCDSP",60,0)
 ;
"RTN","DGBTCDSP",61,0)
 ;;changing auth. person to field 12 of file 392 - dbe patch DGBT*1*21
"RTN","DGBTCDSP",62,0)
 W !,"Auth. Person: ",$$GET1^DIQ(392,DGBTDT_",",12)
"RTN","DGBTCDSP",63,0)
 ;
"RTN","DGBTCDSP",64,0)
 W ?45,"Extra Crew Fee: "
"RTN","DGBTCDSP",65,0)
 S X=$G(DGBTSP("EXTRA CREW")),X2="2$" D COMMA^%DTC W ?67,X
"RTN","DGBTCDSP",66,0)
 ;
"RTN","DGBTCDSP",67,0)
 W !  ;,"Reason for Denial: "   ;part of E11 will be added at that time
"RTN","DGBTCDSP",68,0)
 ;
"RTN","DGBTCDSP",69,0)
 W ?45,"Equipment Fee: "
"RTN","DGBTCDSP",70,0)
 S X=$G(DGBTSP("SP EQUIP")),X2="2$" D COMMA^%DTC W ?67,X
"RTN","DGBTCDSP",71,0)
 ;
"RTN","DGBTCDSP",72,0)
 W !,?45,"Total Invoice Amount: "
"RTN","DGBTCDSP",73,0)
 S X=$G(DGBTSP("TOTAL INVOICE")),X2="2$" D COMMA^%DTC W ?67,X
"RTN","DGBTCDSP",74,0)
 ;
"RTN","DGBTCDSP",75,0)
 W !!,"Remarks: ",$G(DGBTSP("SP MODE OTHER REMARKS"))
"RTN","DGBTCDSP",76,0)
 ;
"RTN","DGBTCDSP",77,0)
 I INFOLINE D END Q
"RTN","DGBTCDSP",78,0)
 ;R !!,"PRESS RETURN TO CONTINUE: ",X
"RTN","DGBTCDSP",79,0)
 I 'INFOLINE K DGBTSP,DGBTCMTY ;D QUIT^DGBTEND,DISPLAY^DGBTR Q
"RTN","DGBTCDSP",80,0)
 ;D DISPLAY^DGBTR
"RTN","DGBTCDSP",81,0)
 Q
"RTN","DGBTCDSP",82,0)
 ;
"RTN","DGBTCDSP",83,0)
BLDARRY(DGBTSP) ;
"RTN","DGBTCDSP",84,0)
 K DGBTSP
"RTN","DGBTCDSP",85,0)
 S DGBTSP("ACCOUNT")=$$GET1^DIQ(392,DGBTDT_",",6)
"RTN","DGBTCDSP",86,0)
 ;
"RTN","DGBTCDSP",87,0)
 S DGBTSP("CLAIM TYPE")=$$GET1^DIQ(392,DGBTDT_",",56)
"RTN","DGBTCDSP",88,0)
 S DGBTSP("MODE OF TRANS")=$$GET1^DIQ(392,DGBTDT_",",57)
"RTN","DGBTCDSP",89,0)
 S DGBTSP("INVOICE NUMBER")=$$GET1^DIQ(392,DGBTDT_",",58)
"RTN","DGBTCDSP",90,0)
 S DGBTSP("DT INVOICE REC")=$$GET1^DIQ(392,DGBTDT_",",59)
"RTN","DGBTCDSP",91,0)
 S DGBTSP("TOTAL INVOICE")=$$GET1^DIQ(392,DGBTDT_",",60)
"RTN","DGBTCDSP",92,0)
 S DGBTSP("BASE RATE FEE")=$$GET1^DIQ(392,DGBTDT_",",61)
"RTN","DGBTCDSP",93,0)
 S DGBTSP("MILEAGE FEE")=$$GET1^DIQ(392,DGBTDT_",",62)
"RTN","DGBTCDSP",94,0)
 S DGBTSP("NO SHOW")=$$GET1^DIQ(392,DGBTDT_",",63)
"RTN","DGBTCDSP",95,0)
 S DGBTSP("WAIT TIME")=$$GET1^DIQ(392,DGBTDT_",",64)
"RTN","DGBTCDSP",96,0)
 S DGBTSP("EXTRA CREW")=$$GET1^DIQ(392,DGBTDT_",",65)
"RTN","DGBTCDSP",97,0)
 S DGBTSP("SP EQUIP")=$$GET1^DIQ(392,DGBTDT_",",66)
"RTN","DGBTCDSP",98,0)
 S DGBTSP("RT/ONE WAY")=$$GET1^DIQ(392,DGBTDT_",",67,"I") ;*28 modified to use internal value
"RTN","DGBTCDSP",99,0)
 S DGBTSP("TOTAL MILES")=$$GET1^DIQ(392,DGBTDT_",",68)
"RTN","DGBTCDSP",100,0)
 S DGBTSP("OTHER TRANS REMARKS")=$$GET1^DIQ(392,DGBTDT_",",69)
"RTN","DGBTCDSP",101,0)
 S DGBTSP("PRE-AUTHORIZED")=$$GET1^DIQ(392,DGBTDT_",",70)
"RTN","DGBTCDSP",102,0)
 ;S DGBTSP("VENDOR")=$$GET1^DIQ(392,DGBTDT_",",71)
"RTN","DGBTCDSP",103,0)
 S DGBTSP("SP MODE OTHER REMARKS")=$$GET1^DIQ(392,DGBTDT_",",72)
"RTN","DGBTCDSP",104,0)
 S DGBTSP("PLACE OF DEPARTURE")=$$GET1^DIQ(392,DGBTDT_",",73)
"RTN","DGBTCDSP",105,0)
 ;
"RTN","DGBTCDSP",106,0)
 S DGBTSP("PLACE OF DEPATURE 2")=$$GET1^DIQ(392,DGBTDT_",",74)
"RTN","DGBTCDSP",107,0)
 S DGBTSP("CITY OF DEPARTURE")=$$GET1^DIQ(392,DGBTDT_",",75)
"RTN","DGBTCDSP",108,0)
 S DGBTSP("STATE OF DEPARTURE")=$$GET1^DIQ(392,DGBTDT_",",76)
"RTN","DGBTCDSP",109,0)
 S DGBTSP("ZIP CODE/DEPARTURE")=$$GET1^DIQ(392,DGBTDT_",",77)
"RTN","DGBTCDSP",110,0)
 ;
"RTN","DGBTCDSP",111,0)
 S DGBTINST("DIVISION")=$$GET1^DIQ(392,DGBTDT_",",78)
"RTN","DGBTCDSP",112,0)
 S DGBTINST("INST NAME")=$$GET1^DIQ(392,DGBTDT_",",79)
"RTN","DGBTCDSP",113,0)
 S DGBTINST("ADDRESS1")=$$GET1^DIQ(392,DGBTDT_",",80)
"RTN","DGBTCDSP",114,0)
 S DGBTINST("CITY")=$$GET1^DIQ(392,DGBTDT_",",81)
"RTN","DGBTCDSP",115,0)
 S DGBTINST("STATE")=$$GET1^DIQ(392,DGBTDT_",",82)
"RTN","DGBTCDSP",116,0)
 S DGBTINST("ZIP CODE")=$$GET1^DIQ(392,DGBTDT_",",83)
"RTN","DGBTCDSP",117,0)
 ;
"RTN","DGBTCDSP",118,0)
 S DGBTSP("SP MODE CLAIM AUTHORIZED")=$$GET1^DIQ(392,DGBTDT_",",85)
"RTN","DGBTCDSP",119,0)
 S DGBTSP("DATE/TIME AUTHORIZED")=$$GET1^DIQ(392,DGBTDT_",",86)
"RTN","DGBTCDSP",120,0)
 ;
"RTN","DGBTCDSP",121,0)
 I $G(DGBTSP("AUTHORIZED"))="Y" D
"RTN","DGBTCDSP",122,0)
 .S DGBTSP("AUTHORIZED PERSON")=$$GET1^DIQ(392,DGBTDT_",",84)
"RTN","DGBTCDSP",123,0)
 S INFOLINE=0
"RTN","DGBTCDSP",124,0)
 Q
"RTN","DGBTCDSP",125,0)
 ;
"RTN","DGBTCDSP",126,0)
END ;display menu prompt at bottom of screen
"RTN","DGBTCDSP",127,0)
 ;dbe patch DGBT*1*22 - added variable DGBTSPFG to replace DGANS as the exit flag when returning to the select patient prompt
"RTN","DGBTCDSP",128,0)
 N PROMPT,DGBTSPFG
"RTN","DGBTCDSP",129,0)
 K DGANS
"RTN","DGBTCDSP",130,0)
 S SPCOMPLETE=0
"RTN","DGBTCDSP",131,0)
 F  Q:$G(DGANS)="Q"!($D(DIRUT))  D  Q:$G(DGBTSPFG)!($D(DIRUT))!('$D(DGBTSP))
"RTN","DGBTCDSP",132,0)
 .S Z="^INFORMATION^DISPLAY^EDIT",PROMPT="<I>nformation, <D>isplay claim, <E>dit claim,"
"RTN","DGBTCDSP",133,0)
 .S DIR("A")=PROMPT_" or <Q>uit ",DIR("B")="Quit",DIR("?")="^D HELP^DGBTEND",DIR(0)="SA^Q:Quit;I:Information;D:Display;E:Edit;P:Print"
"RTN","DGBTCDSP",134,0)
 .D ^DIR K DIR S DGANS=Y
"RTN","DGBTCDSP",135,0)
 .S DGBTX1=$S(DGANS="I":"SCREEN^DGBTE",DGANS="D":"SCREEN^DGBTCDSP",DGANS="E":"SPMODE^DGBTE",DGANS="Q":"PATIENT^DGBTE",1:"QUIT^DGBTEND")
"RTN","DGBTCDSP",136,0)
 .I $G(DGBTX1)]""&($G(DGANS)="Q") K DGANS S DGBTSPFG=1 G @DGBTX1 ;dbe patch DGBT*1*22 - modified to correctly return to select patient prompt
"RTN","DGBTCDSP",137,0)
 .I $G(DGBTX1)]""&($G(DGANS)'="Q") D @DGBTX1
"RTN","DGBTCDSP",138,0)
 Q
"RTN","DGBTCDSP",139,0)
 ;
"RTN","DGBTCR")
0^11^B26266236^B25363129
"RTN","DGBTCR",1,0)
DGBTCR ;ALB/SCK - BENEFICIARY TRAVEL FORM 70-3542d VARIABLES; 2/7/88@08:00 ;6/11/93@09:30
"RTN","DGBTCR",2,0)
 ;;1.0;Beneficiary Travel;**7,14,20,28**;September 25, 2001;Build 12
"RTN","DGBTCR",3,0)
 ;Modification of AIVBTPRT / pmg / GRAND ISLAND ; 07 Jul 88 12:02 PM
"RTN","DGBTCR",4,0)
START Q:'$D(DGBTDT)
"RTN","DGBTCR",5,0)
 D MILE
"RTN","DGBTCR",6,0)
 S DGBTVAR(0)=$G(^DGBT(392,+DGBTDT,0)),DGBTACCT=$P($G(^DGBT(392.3,+$P(DGBTVAR(0),"^",6),0)),"^",5)
"RTN","DGBTCR",7,0)
 Q:DGBTACCT'>3
"RTN","DGBTCR",8,0)
 W !!,*7,"This needs to be printed at 132 columns"
"RTN","DGBTCR",9,0)
 S DGPGM="PRINT^DGBTCR",DGVAR="DGBTDT"
"RTN","DGBTCR",10,0)
 S %ZIS="PMQ" D ^%ZIS G QUIT:POP
"RTN","DGBTCR",11,0)
 I $D(IO("Q")) D QUE G QUIT
"RTN","DGBTCR",12,0)
 D PRINT
"RTN","DGBTCR",13,0)
QUIT ;
"RTN","DGBTCR",14,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","DGBTCR",15,0)
 K DGPGM,DGVAR,VADAT,VADATE,I,X,X2,DGBTVAR,DGBTCC,DGBTDIV,DGBTDOB,DGBTINS,DGBTINS1,DGBTINS2,DGBTCNA,DGBTCSZ,DGBTCNU,DGBTTCTY,DGBTFCTY,DGBTDT,DGBTACCT,DFN,Y
"RTN","DGBTCR",16,0)
 K DGBTM6,DGBTM7,DGBTM8,DGBTM8A,DGBTM9,DGBTM10,DGBTM11,DGBTM12,DGBTM13,DGBTM14,DGBTM15,DGBTM16,DGBTM17,DGBTRATE,DGBTSCP,DGBTSSN,DGBTST,DTOTAL,CDAT,D
"RTN","DGBTCR",17,0)
 Q
"RTN","DGBTCR",18,0)
PRINT ;
"RTN","DGBTCR",19,0)
 U IO D SET,PRINT^DGBTCR1,PRINT^DGBTCR2,KVAR^VADPT
"RTN","DGBTCR",20,0)
 Q
"RTN","DGBTCR",21,0)
SET S DFN=$P(^DGBT(392,DGBTDT,0),"^",2) D 6^VADPT S (DGBTFCTY,DGBTTCTY)=""
"RTN","DGBTCR",22,0)
NODES F I=0,"A","C","D","M","R","T" S DGBTVAR(I)=$S($D(^DGBT(392,DGBTDT,I)):^(I),1:"")
"RTN","DGBTCR",23,0)
 I $D(^DG(43.1,$O(^DG(43.1,(9999999.99999-DGBTDT))),"BT")) S DGBTRATE=^("BT"),DGBTM7=$S($P(DGBTVAR("A"),"^",3)=1:$P(DGBTRATE,"^",5),1:$P(DGBTRATE,"^",3))
"RTN","DGBTCR",24,0)
 I $P(DGBTVAR("D"),"^",4)]"" S DGBTCNA=$P(DGBTVAR("D"),"^",4) D CITY I DGBTCSZ[DGBTCNA D
"RTN","DGBTCR",25,0)
 . S DGBTCSZ=DGBTCNA_", "_$S(+$P(DGBTVAR("D"),"^",5)>0:$P(^DIC(5,$P(DGBTVAR("D"),"^",5),0),U,2),1:"")_"  "
"RTN","DGBTCR",26,0)
 . S Y=$P(DGBTVAR("D"),U,6),Y=$E(Y,1,5)_$S($E(Y,6,9)]"":"-"_$E(Y,6,9),1:""),DGBTCSZ=DGBTCSZ_Y,DGBTFCTY=DGBTCSZ
"RTN","DGBTCR",27,0)
 S $P(DGBTVAR("T"),U,6)=$$GET1^DIQ(392,DGBTDT,28.2) ;dgbt*1.0*28 - use fileman to set external zip code value
"RTN","DGBTCR",28,0)
 I $P(DGBTVAR("T"),"^",4)]"" S DGBTCNA=$P(DGBTVAR("T"),U,4) D CITY^DGBTCR S:DGBTCSZ[DGBTCNA DGBTCSZ=DGBTCNA_", "_$S(+$P(DGBTVAR("T"),"^",5)>0:$P(^DIC(5,$P(DGBTVAR("T"),"^",5),0),U,2),1:"")_"  "_$P(DGBTVAR("T"),U,6) S DGBTTCTY=DGBTCSZ
"RTN","DGBTCR",29,0)
DIV S DGBTDIV=$P(DGBTVAR(0),"^",11) I +DGBTDIV S DGBTDIV=$P(^DG(40.8,DGBTDIV,0),"^",7) S (DGBTCC,DGBTST)=""
"RTN","DGBTCR",30,0)
 I $D(^DIC(4,+DGBTDIV,0)) S DGBTINS=^(0),DGBTINS1=$S($D(^DIC(4,DGBTDIV,1)):^(1),1:""),DGBTINS2=$S(DGBTINS1]"":$P(DGBTINS1,"^",3)_",",1:"UNSPECIFIED")_" "_$S($D(^DIC(5,+$P(DGBTINS,U,2),0)):$P(^(0),U,2),1:"")_"  "_$P(DGBTINS1,"^",4)
"RTN","DGBTCR",31,0)
 I VAPA(5)&(VAPA(7)) S DGBTCC=$S($D(^DIC(5,+VAPA(5),1,+VAPA(7),0)):$P(^(0),"^",3),1:""),DGBTST=$P(^DIC(5,+VAPA(5),0),"^",2)
"RTN","DGBTCR",32,0)
 D PID^VADPT6 S DGBTSSN=VA("PID"),DGBTDOB=$E(VADM(3),4,7)_($E(VADM(3),1,3)+1700)
"RTN","DGBTCR",33,0)
 S DGBTSCP=$S($L($P(VAEL(3),"^",2)<3):"0",1:"")_$P(VAEL(3),"^",2)
"RTN","DGBTCR",34,0)
MILES S DGBTM6=$P(DGBTVAR("M"),"^")*$P(DGBTVAR("M"),"^",2)
"RTN","DGBTCR",35,0)
 N X3
"RTN","DGBTCR",36,0)
 S X2="2$",X=DGBTM6*DGBTM7 D COMMA^%DTC S DGBTM8=X
"RTN","DGBTCR",37,0)
 S X=$P(DGBTVAR("C"),"^",2) D COMMA^%DTC S DGBTM8A=X
"RTN","DGBTCR",38,0)
 S X=$P(DGBTVAR("M"),"^",4) D COMMA^%DTC S DGBTM9=X
"RTN","DGBTCR",39,0)
 S X=$P(DGBTVAR("M"),"^",5) D COMMA^%DTC S DGBTM10=X
"RTN","DGBTCR",40,0)
 S X=DGBTM6*DGBTM7+$P(DGBTM8A,"$",2)+$P(DGBTVAR("M"),"^",4)+$P(DGBTVAR("M"),"^",5) D COMMA^%DTC S DGBTM11=X
"RTN","DGBTCR",41,0)
 S X2="3$",X=DGBTM7 D COMMA^%DTC S DGBTM7=X
"RTN","DGBTCR",42,0)
 S X2="2$"  ;Reset edit mask to 2 decimal positions for rest of report
"RTN","DGBTCR",43,0)
 S X=$P(DGBTVAR(0),"^",8) D COMMA^%DTC S DGBTM12=X
"RTN","DGBTCR",44,0)
 S X=$P(DGBTVAR("M"),"^",4)+$P(DGBTVAR(0),"^",8) D COMMA^%DTC S DGBTM13=X
"RTN","DGBTCR",45,0)
 S X=$P(DGBTVAR(0),"^",10) D COMMA^%DTC S DGBTM14=X
"RTN","DGBTCR",46,0)
 S X=$P(DGBTVAR(0),"^",9) D COMMA^%DTC S $P(DGBTM14,"^",2)=X
"RTN","DGBTCR",47,0)
CERT S VADAT("W")=DGBTDT D ^VADATE S DGBTM15=VADATE("E")
"RTN","DGBTCR",48,0)
 S X=$S($P(^DG(43,1,"BT"),"^")'="":$P(^DG(43,1,"BT"),"^"),1:DUZ),DGBTM16=$P($P(^VA(200,X,0),",",2),"^")_" "_$P(^VA(200,X,0),",")_$S($P(^DG(43,1,"BT"),"^")'="":"",1:", DESIGNEE OF CERTIFYING OFFICIAL") K X
"RTN","DGBTCR",49,0)
 S DGBTM17=$P($P(DGBTVAR("A"),"^",2),",",2)_" "_$P($P(DGBTVAR("A"),"^",2),",")
"RTN","DGBTCR",50,0)
 Q
"RTN","DGBTCR",51,0)
CITY S DGBTCSZ=DGBTCNA
"RTN","DGBTCR",52,0)
 S:VAPA(5)'="" DGBTCNU=$O(^DGBT(392.1,"ACS",DGBTCNA,+VAPA(5),0))
"RTN","DGBTCR",53,0)
 I $D(DGBTCNU),(DGBTCNU'="") S DGBTCSZ=$P(^DGBT(392.1,DGBTCNU,0),"^")_", "_($P(^DIC(5,+VAPA(5),0),"^",2))_"  "_($P(^DGBT(392.1,DGBTCNU,0),"^",4))
"RTN","DGBTCR",54,0)
 Q
"RTN","DGBTCR",55,0)
QUE ;
"RTN","DGBTCR",56,0)
 N I
"RTN","DGBTCR",57,0)
 S ZTRTN="PRINT^DGBTCR",ZTDESC="VA FORM 70-3542d"
"RTN","DGBTCR",58,0)
 F I="DFN","DGBTDT","DGBTFCTY","DGBTTCTY","ONEWAY","RTRIP","DTOTAL" S ZTSAVE(I)=""
"RTN","DGBTCR",59,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"TASK #",ZTSK
"RTN","DGBTCR",60,0)
 D HOME^%ZIS K IO("Q")
"RTN","DGBTCR",61,0)
 Q
"RTN","DGBTCR",62,0)
 ;
"RTN","DGBTCR",63,0)
MILE ; one way, round trip and total amount deductible
"RTN","DGBTCR",64,0)
 I $D(MONTOT) D  Q
"RTN","DGBTCR",65,0)
 .S ONEWAY=$P(MONTOT,U,2),RTRIP=$P(MONTOT,U,3),DTOTAL=$P(MONTOT,U,4)
"RTN","DGBTCR",66,0)
 K CDAT,SDATE,EDATE,PDATA,DEDUCT,EMONTH,MDATA,DGBTRIP
"RTN","DGBTCR",67,0)
 S (DEDUCT,DTOTAL,ONEWAY,RTRIP,CDAT,SDATE,EDATE)=0
"RTN","DGBTCR",68,0)
 S EMONTH=0
"RTN","DGBTCR",69,0)
 ;
"RTN","DGBTCR",70,0)
 S SDATE=$P(DGBTDT,".",1)
"RTN","DGBTCR",71,0)
 S SDATE=$E(SDATE,1,5)_"01"   ;_.0001
"RTN","DGBTCR",72,0)
 S EDATE=$E(DGBTDT,1,5)
"RTN","DGBTCR",73,0)
 S EMONTH=$E(DGBTDT,4,5) S EMONTH=EMONTH+1
"RTN","DGBTCR",74,0)
 S:$L(EMONTH)=1 EMONTH="0"_EMONTH
"RTN","DGBTCR",75,0)
 S EDATE=$E(DGBTDT,1,3)_EMONTH_"00"
"RTN","DGBTCR",76,0)
 ;
"RTN","DGBTCR",77,0)
 F  S CDAT=$O(^DGBT(392,"C",DFN,CDAT)) Q:'CDAT  D
"RTN","DGBTCR",78,0)
 .Q:$$GET1^DIQ(392,CDAT,45.2,"I")   ;DENIED CLAIM, DON'T COUNT
"RTN","DGBTCR",79,0)
 .Q:$P(^DGBT(392,CDAT,0),"^",16)'=""
"RTN","DGBTCR",80,0)
 .Q:$D(^DGBT(392,CDAT,"SP"))
"RTN","DGBTCR",81,0)
 .Q:CDAT<SDATE!(CDAT>EDATE)
"RTN","DGBTCR",82,0)
 .Q:'$D(^DGBT(392,CDAT,0))
"RTN","DGBTCR",83,0)
 .Q:$D(DGBTRIP("ONEWAY",$P(CDAT,".",1)))
"RTN","DGBTCR",84,0)
 .S PDATA=$G(^DGBT(392,CDAT,0))
"RTN","DGBTCR",85,0)
 .S DEDUCT=$P(PDATA,"^",9)
"RTN","DGBTCR",86,0)
 .S DTOTAL=DTOTAL+DEDUCT
"RTN","DGBTCR",87,0)
 .;
"RTN","DGBTCR",88,0)
 .S MDATA=$G(^DGBT(392,CDAT,"M"))
"RTN","DGBTCR",89,0)
 .Q:$P(MDATA,"^",1)=""
"RTN","DGBTCR",90,0)
 .I $P(MDATA,"^",1)=1,'$D(DGBTRIP("ONEWAY",$P(CDAT,".",1))) S ONEWAY=ONEWAY+1
"RTN","DGBTCR",91,0)
 .I $P(MDATA,"^",1)=2,'$D(DGBTRIP("RTRIP",$P(CDAT,".",1))) S RTRIP=RTRIP+1
"RTN","DGBTCR",92,0)
 ;
"RTN","DGBTCR",93,0)
 Q
"RTN","DGBTDLT1")
0^4^B75968041^B74264382
"RTN","DGBTDLT1",1,0)
DGBTDLT1 ;BLD - REPRINT BENEFICIARY TRAVEL DENIAL LETTER;03/04/2012@1400
"RTN","DGBTDLT1",2,0)
 ;;1.0;Beneficiary Travel;**20,28**;September 25, 2001;Build 12
"RTN","DGBTDLT1",3,0)
 ;
"RTN","DGBTDLT1",4,0)
 Q
"RTN","DGBTDLT1",5,0)
 ;************************************************************************************************************
"RTN","DGBTDLT1",6,0)
 ;                              THIS WILL PRINT DENIAL LETTERS
"RTN","DGBTDLT1",7,0)
 ;************************************************************************************************************
"RTN","DGBTDLT1",8,0)
 ;
"RTN","DGBTDLT1",9,0)
REPRINT ;
"RTN","DGBTDLT1",10,0)
 ;
"RTN","DGBTDLT1",11,0)
 D QUIT
"RTN","DGBTDLT1",12,0)
 W !
"RTN","DGBTDLT1",13,0)
 K ^UTILITY($J,"W"),^TMP("DGBT",$J)
"RTN","DGBTDLT1",14,0)
 S QUIT=0
"RTN","DGBTDLT1",15,0)
 ;
"RTN","DGBTDLT1",16,0)
 ;DIVISN ; if MED CTR DIV file set up (first record) and record does not exist, write warning, kill variables, and exit
"RTN","DGBTDLT1",17,0)
 S X=$G(^DG(40.8,0)) I X="" W !,"WARNING...MEDICAL CENTER DIVISION FILE IS NOT SET UP",!,"USE THE ADT PARAMETER OPTION FILE TO SET UP DIVISION" Q
"RTN","DGBTDLT1",18,0)
 ;  check if multi-divisional center (GL node exists and 2nd piece=1). Do lookup, if it exists-set local variables
"RTN","DGBTDLT1",19,0)
 S DGBTMD=0 I $D(^DG(43,1,"GL")),$P(^("GL"),U,2) D  Q:Y'>0  ;D PATIENT
"RTN","DGBTDLT1",20,0)
 . S DIC="^DG(40.8,",DIC(0)="AEQMNZ",DIC("A")="Select DIVISION: " W !!
"RTN","DGBTDLT1",21,0)
 . D ^DIC K DIC Q:Y'>0
"RTN","DGBTDLT1",22,0)
 . S DGBTDIVI=+Y,DGBTDIV=$P(Y,U,2)
"RTN","DGBTDLT1",23,0)
 . D INSTIT S DGBTMD=1
"RTN","DGBTDLT1",24,0)
 ;  if not a multi-divisional center, default to institution name
"RTN","DGBTDLT1",25,0)
 I 'DGBTMD S DGBTDIVI=$O(^DG(40.8,0)),DGBTDIV=$P(^DG(40.8,DGBTDIVI,0),U) D INSTIT
"RTN","DGBTDLT1",26,0)
 ;
"RTN","DGBTDLT1",27,0)
 D PATIENT Q:$G(DFN)=""  ;I '$D(^DGBT(392,"ADENIED",DFN)) W !!,"THERE ARE NO DENIAL LETTERS TO PRINT FOR: ",VADM(1) K DFN D QUIT Q  ;D REPRINT,QUIT Q
"RTN","DGBTDLT1",28,0)
 D LIST2 I $G(CHZFLG)="" D QUIT Q
"RTN","DGBTDLT1",29,0)
 S DGBTDLTR=$$GET1^DIQ(392,DGBTDTI,45,"I")
"RTN","DGBTDLT1",30,0)
 I 'DGBTDLTR D QUIT Q
"RTN","DGBTDLT1",31,0)
 S DGBTCMTY=$$GET1^DIQ(392,DGBTDTI,56,"I")
"RTN","DGBTDLT1",32,0)
 D DEVICE^DGBTDLT("DENIAL LETTER","LTR^DGBTDLT1") I $D(DTOUT)!($D(DUOUT)) S QUIT=1 D QUIT Q
"RTN","DGBTDLT1",33,0)
 I $G(DGBTQ) D QUIT Q
"RTN","DGBTDLT1",34,0)
 D LTR
"RTN","DGBTDLT1",35,0)
 D QUIT
"RTN","DGBTDLT1",36,0)
 Q
"RTN","DGBTDLT1",37,0)
 ;
"RTN","DGBTDLT1",38,0)
LTR ;
"RTN","DGBTDLT1",39,0)
 ;
"RTN","DGBTDLT1",40,0)
 N NAME,DGBTCDT,DGBTDR,DIWL,DIWR
"RTN","DGBTDLT1",41,0)
 K ^UTILITY($J,"W")
"RTN","DGBTDLT1",42,0)
 S DGBTDR=$$GET1^DIQ(392,DGBTDTI,45.4,"I")
"RTN","DGBTDLT1",43,0)
 I $$GET1^DIQ(392.8,DGBTDR,1,,"REASON")
"RTN","DGBTDLT1",44,0)
 D DIVISN(.DGBTINST)                            ;this will set up the DGBTINST array containing the current VA location address
"RTN","DGBTDLT1",45,0)
 ;D DEVICE("DENIAL LETTER") I $D(DTOUT)!($D(DUOUT)) S QUIT=1 Q
"RTN","DGBTDLT1",46,0)
 D HEADER(.DGBTINST)                            ;this will print the current VA location information
"RTN","DGBTDLT1",47,0)
 S QUIT=1
"RTN","DGBTDLT1",48,0)
 S DIWL=5   ;left margin
"RTN","DGBTDLT1",49,0)
 S DIWR=75   ;right margin
"RTN","DGBTDLT1",50,0)
 S DGBTCDT(1)=$P(DGBTDTE,"@",1)                                                        ;invoice date
"RTN","DGBTDLT1",51,0)
 S NAME=$$GET1^DIQ(392,DGBTDTI,12),DGBTCDT(2)=$P(NAME,",",2)_" "_$P(NAME,",",1) ;user name *28 modified to use who entered into the file (#12) field
"RTN","DGBTDLT1",52,0)
 S DGBTCDT(3)=$$GET1^DIQ(200,$$GET1^DIQ(392,DGBTDTI,12,"I"),8) ;user title *28 modified to use who entered into the file (#12) field
"RTN","DGBTDLT1",53,0)
 I DGBTCMTY="M" D               ;for mileage claims
"RTN","DGBTDLT1",54,0)
 .I $$GET1^DIQ(392.6,1,1,,"LETTERS1")
"RTN","DGBTDLT1",55,0)
 .S LINENBR=0
"RTN","DGBTDLT1",56,0)
 .F  S LINENBR=$O(LETTERS1(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT1",57,0)
 ..S X=LETTERS1(LINENBR)
"RTN","DGBTDLT1",58,0)
 .S NBR=0
"RTN","DGBTDLT1",59,0)
 .F  S NBR=$O(REASON(NBR)) Q:'NBR  D  D ^DIWP
"RTN","DGBTDLT1",60,0)
 ..S X=REASON(NBR)
"RTN","DGBTDLT1",61,0)
 .I $$GET1^DIQ(392.6,2,1,,"LETTERS2")
"RTN","DGBTDLT1",62,0)
 .F  S LINENBR=$O(LETTERS2(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT1",63,0)
 ..S X=LETTERS2(LINENBR) Q:X=""
"RTN","DGBTDLT1",64,0)
 .D ^DIWW
"RTN","DGBTDLT1",65,0)
 ;
"RTN","DGBTDLT1",66,0)
 K LETTERS1,KETTERS2
"RTN","DGBTDLT1",67,0)
 I DGBTCMTY="S" D                        ;for Special Mode Claims
"RTN","DGBTDLT1",68,0)
 .I $$GET1^DIQ(392.6,3,3,,"LETTERS1")
"RTN","DGBTDLT1",69,0)
 .S LINENBR=0
"RTN","DGBTDLT1",70,0)
 .F  S LINENBR=$O(LETTERS1(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT1",71,0)
 ..S X=LETTERS1(LINENBR)
"RTN","DGBTDLT1",72,0)
 .S NBR=0
"RTN","DGBTDLT1",73,0)
 .F  S NBR=$O(REASON(NBR)) Q:'NBR  D  D ^DIWP
"RTN","DGBTDLT1",74,0)
 ..S X=REASON(NBR)
"RTN","DGBTDLT1",75,0)
 .I $$GET1^DIQ(392.6,4,3,,"LETTERS2")
"RTN","DGBTDLT1",76,0)
 .F  S LINENBR=$O(LETTERS2(LINENBR)) Q:'LINENBR  D  D ^DIWP
"RTN","DGBTDLT1",77,0)
 ..S X=LETTERS2(LINENBR) Q:X=""
"RTN","DGBTDLT1",78,0)
 .D ^DIWW
"RTN","DGBTDLT1",79,0)
 D:'IOST'["C-" ^%ZISC
"RTN","DGBTDLT1",80,0)
 Q
"RTN","DGBTDLT1",81,0)
 ;
"RTN","DGBTDLT1",82,0)
PATIENT ; patient lookup, quit if patient doesn't exist
"RTN","DGBTDLT1",83,0)
 N VAEL
"RTN","DGBTDLT1",84,0)
 S DGBTTOUT="",DIC="^DPT(",DIC(0)="AEQMZ",DIC("A")="Select PATIENT: "
"RTN","DGBTDLT1",85,0)
 W !! D ^DIC K DIC I +Y'>0 K DFN Q
"RTN","DGBTDLT1",86,0)
 ; get patient information#, call return patient return variables routine and set whether new claim or not
"RTN","DGBTDLT1",87,0)
 S DFN=+Y D 6^VADPT,PID^VADPT
"RTN","DGBTDLT1",88,0)
 S DGBTNEW=$S($D(^DGBT(392,"C",DFN)):0,1:1)
"RTN","DGBTDLT1",89,0)
 Q
"RTN","DGBTDLT1",90,0)
 ;
"RTN","DGBTDLT1",91,0)
LIST2 ;  find all previous claims, get total count in DGBTC and put those claims in utility file
"RTN","DGBTDLT1",92,0)
 N X1,YY,DGBTCDT,DGBTC,CNT
"RTN","DGBTDLT1",93,0)
 S (CNTR,DGBTCH,DGBTCH1,DGBTCDT)=0
"RTN","DGBTDLT1",94,0)
 S DGBTC=""
"RTN","DGBTDLT1",95,0)
 I $D(^DGBT(392,"ADENIED",DFN))'>1 W !!?10,"There are no entries on file for this patient",! S Y1=-1 D QUIT Q
"RTN","DGBTDLT1",96,0)
 ;
"RTN","DGBTDLT1",97,0)
 F I=1:1 S DGBTC=$O(^DGBT(392,"ADENIED",DFN,DGBTC),-1) Q:'DGBTC  D
"RTN","DGBTDLT1",98,0)
 .S Y=DGBTC D DD^%DT
"RTN","DGBTDLT1",99,0)
 .S CNTR=$G(CNTR)+1
"RTN","DGBTDLT1",100,0)
 .S DGBTARY(CNTR,DGBTC)=Y ;K DGBTARY(DGBTC)
"RTN","DGBTDLT1",101,0)
 ;
"RTN","DGBTDLT1",102,0)
LIST3 ;  list claims (in external format) from temporary global, 5 at a time. Loop thru list until selection made.
"RTN","DGBTDLT1",103,0)
 S (CNTR,DGBTCH)=""
"RTN","DGBTDLT1",104,0)
 S DGBTC=""
"RTN","DGBTDLT1",105,0)
 W !
"RTN","DGBTDLT1",106,0)
 F  S CNTR=$O(DGBTARY(CNTR)) Q:'CNTR  D  Q:$G(CHZFLG)!$G(DTOUT)!$G(DUOUT)
"RTN","DGBTDLT1",107,0)
 .F  S DGBTC=$O(DGBTARY(CNTR,DGBTC)) Q:DGBTC=""  D  Q:$G(CHZFLG)
"RTN","DGBTDLT1",108,0)
 ..W !?5,CNTR,".",?10,DGBTARY(CNTR,DGBTC) I CNTR#5=0!($O(DGBTARY(CNTR))="") D CHOZ I $D(DUOUT)!$D(DTOUT)!(Y>0) Q
"RTN","DGBTDLT1",109,0)
 I '$D(DTOUT)&Y="" D LIST3 Q
"RTN","DGBTDLT1",110,0)
 S DGBTDTI=$O(DGBTARY(CNTR,"")),DGBTDTE=DGBTARY(CNTR,DGBTDTI)
"RTN","DGBTDLT1",111,0)
 K DIR
"RTN","DGBTDLT1",112,0)
 Q
"RTN","DGBTDLT1",113,0)
 ;
"RTN","DGBTDLT1",114,0)
CHOZ ;  select from the displayed past claims dates for claim to be edited.
"RTN","DGBTDLT1",115,0)
 N DGBTCH1,CHOICE
"RTN","DGBTDLT1",116,0)
 S CHOICE=1
"RTN","DGBTDLT1",117,0)
 W !! S (Y1,Y)=0,DGBTCH1=I,DIR(0)="FO^1:5",DIR("A")="Select CLAIM"
"RTN","DGBTDLT1",118,0)
 S DIR("A",1)="Type '^' to exit date list, or <RETURN> to display more dates"
"RTN","DGBTDLT1",119,0)
 S DIR("?")="Entering a '^' will exit the Past CLAIM list, entering <RETURN> will continue to scroll through past dates.",DIR("?",1)="Select a Past CLAIM date by number."
"RTN","DGBTDLT1",120,0)
 D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S Y1=-1 Q
"RTN","DGBTDLT1",121,0)
 I Y="",$O(DGBTARY(CNTR))'="" Q
"RTN","DGBTDLT1",122,0)
 I X<CHOICE!(X>DGBTCH1)!(X'=+X) W !?25,*7,"INVALID ENTRY!" D CHOZ Q  ; value must be between 1 and last displayed number
"RTN","DGBTDLT1",123,0)
 S CHZFLG=Y,DGBTDTI=$O(DGBTARY(Y,""))
"RTN","DGBTDLT1",124,0)
 S CNTR=$G(Y)
"RTN","DGBTDLT1",125,0)
 Q
"RTN","DGBTDLT1",126,0)
 ;
"RTN","DGBTDLT1",127,0)
DIVISN(DGBTINST) ; if MED CTR DIV file set up (first record) and record does not exist, write warning, kill variables, and exit
"RTN","DGBTDLT1",128,0)
 S DGBTDIVI=$$GET1^DIQ(392,DGBTDTI,11,"I"),DGBTDIV=$$GET1^DIQ(40.8,DGBTDIVI,.01) ; RFE DGBT*1.0*20
"RTN","DGBTDLT1",129,0)
 I ($G(DGBTDIVI)'="")&($G(DGBTDIV)'="") D INSTIT(.DGBTINST) Q  ; RFE DGBT*1.0*20
"RTN","DGBTDLT1",130,0)
 S DGBTDIVI=$O(^DG(40.8,0)),DGBTDIV=$P(^DG(40.8,DGBTDIVI,0),U) D INSTIT(.DGBTINST)
"RTN","DGBTDLT1",131,0)
 Q
"RTN","DGBTDLT1",132,0)
 ; 
"RTN","DGBTDLT1",133,0)
INSTIT(DGBTINST) ;  check for pointer to institution file and for address information on institution
"RTN","DGBTDLT1",134,0)
 N MAILCODE,INSTADD,INSTNODE
"RTN","DGBTDLT1",135,0)
 S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTDLT1",136,0)
 I 'DGBTDIVN W !!,"INSTITUTION HAS NOT BEEN DEFINED FOR ",$P(^(0),"^"),!,"USE THE ADT PARAMETER OPTION TO UPDATE",! Q
"RTN","DGBTDLT1",137,0)
 I $D(^DIC(4,DGBTDIVN,0)),$S($D(^(1))#10=0:1,$P(^(1),"^",3)']"":1,1:0) W !!,"INSTITUTION ADDRESS NOT ENTERED.  PLEASE UPDATE USING THE INSTITUTION FILE ENTER/EDIT",! Q
"RTN","DGBTDLT1",138,0)
 ;
"RTN","DGBTDLT1",139,0)
 S INSTNODE=^DIC(4,DGBTDIVN,0)
"RTN","DGBTDLT1",140,0)
 S INSTADD=^DIC(4,DGBTDIVN,1)
"RTN","DGBTDLT1",141,0)
 ; 
"RTN","DGBTDLT1",142,0)
 S DGBTINST("ORG NAME")="DEPARTMENT OF VETERANS AFFAIRS"
"RTN","DGBTDLT1",143,0)
 S DGBTINST("INST NAME")=$$GET1^DIQ(4,DGBTDIVN,.01)
"RTN","DGBTDLT1",144,0)
 S DGBTINST("INST ADDRESS 1")=$$GET1^DIQ(4,DGBTDIVN,1.01)
"RTN","DGBTDLT1",145,0)
 S DGBTINST("INST ADDRESS 2")=$$GET1^DIQ(4,DGBTDIVN,1.02)
"RTN","DGBTDLT1",146,0)
 S DGBTINST("INST CITY")=$$GET1^DIQ(4,DGBTDIVN,1.03)
"RTN","DGBTDLT1",147,0)
 S DGBTINST("INST STATE")=$$GET1^DIQ(4,DGBTDIVN,.02)
"RTN","DGBTDLT1",148,0)
 S DGBTINST("INST ZIP CODE")=$$GET1^DIQ(4,DGBTDIVN,1.04)
"RTN","DGBTDLT1",149,0)
 S DGBTINST("FAC NUMBER")=$$GET1^DIQ(40.8,DGBTDIVI,1)
"RTN","DGBTDLT1",150,0)
 S MAILCODE=$O(^DIC(49,"B","BENEFICIARY TRAVEL",""))
"RTN","DGBTDLT1",151,0)
 S DGBTINST("MAIL CODE")=$$GET1^DIQ(49,MAILCODE,1.5)
"RTN","DGBTDLT1",152,0)
 Q
"RTN","DGBTDLT1",153,0)
 ;
"RTN","DGBTDLT1",154,0)
HEADER(DGBTINST) ;this will print all of the standard information at the top of the letter. IT WILL NOT PRINT LOGO'S ETC
"RTN","DGBTDLT1",155,0)
 ;
"RTN","DGBTDLT1",156,0)
 I $G(DGBTINST("ORG NAME"))="" D  Q
"RTN","DGBTDLT1",157,0)
 .W !!,"INSTITUTION INFORMATION IS UNAVAILABLE. PLEASE UPDATE USING THE INSTITUTION FILE ENTER/EDIT."
"RTN","DGBTDLT1",158,0)
 N ORG,ADD1,ADD2,CITY,STATE,ZIP,INSTNAME,LOC,LOC2,DGBTDTFILED
"RTN","DGBTDLT1",159,0)
 ;
"RTN","DGBTDLT1",160,0)
 S ORG=DGBTINST("ORG NAME")
"RTN","DGBTDLT1",161,0)
 S INSTNAME=DGBTINST("INST NAME")
"RTN","DGBTDLT1",162,0)
 S ADD1=DGBTINST("INST ADDRESS 1")
"RTN","DGBTDLT1",163,0)
 S ADD2=DGBTINST("INST ADDRESS 2")
"RTN","DGBTDLT1",164,0)
 S CITY=DGBTINST("INST CITY")
"RTN","DGBTDLT1",165,0)
 S STATE=DGBTINST("INST STATE")
"RTN","DGBTDLT1",166,0)
 S ZIP=DGBTINST("INST ZIP CODE")
"RTN","DGBTDLT1",167,0)
 ;
"RTN","DGBTDLT1",168,0)
 D DEM^VADPT
"RTN","DGBTDLT1",169,0)
 S PATSEX=$P(VADM(5),"^",1),PATSEX=$S(PATSEX="M":"Mr",1:"Ms")_". "
"RTN","DGBTDLT1",170,0)
 S PATADD1=VAPA(1),PATADD2=VAPA(2)
"RTN","DGBTDLT1",171,0)
 S PATCITY=VAPA(4)_", ",PATST=$P(VAPA(5),"^",2)_" ",PATZIP=VAPA(6)
"RTN","DGBTDLT1",172,0)
 S PATNAME=VADM(1),PATNAME=$P(PATNAME,",",2)_" "_$P(PATNAME,",",1)
"RTN","DGBTDLT1",173,0)
 ;
"RTN","DGBTDLT1",174,0)
 S LOC2=5
"RTN","DGBTDLT1",175,0)
 S LOC=80-$L(ORG) W !,?LOC/2,ORG
"RTN","DGBTDLT1",176,0)
 S LOC=80-$L(INSTNAME) W !,?LOC/2,INSTNAME
"RTN","DGBTDLT1",177,0)
 S LOC=80-$L(ADD1) W !,?LOC/2,ADD1
"RTN","DGBTDLT1",178,0)
 I $G(ADD2)'="" S LOC=80-$L(ADD2) W !,?LOC/2,ADD2
"RTN","DGBTDLT1",179,0)
 S CITYSTZIP=CITY_", "_STATE_" "_ZIP
"RTN","DGBTDLT1",180,0)
 S LOC=80-$L(CITYSTZIP) W !,?LOC/2,CITYSTZIP,!
"RTN","DGBTDLT1",181,0)
 ;S LOC=80-$L(DGBTDTE) W !?LOC,$P(DGBTDTE,"@",1)
"RTN","DGBTDLT1",182,0)
 S DGBTDTFILED=$$GET1^DIQ(392,DGBTDTI,13,"E")
"RTN","DGBTDLT1",183,0)
 S DGBTDTFILED=$S(DGBTDTFILED'="":DGBTDTFILED,1:DT)
"RTN","DGBTDLT1",184,0)
 S DGBTDTFILED=$$FMTE^XLFDT(DGBTDTFILED)
"RTN","DGBTDLT1",185,0)
 S LOC=80-$L(DGBTDTFILED) W !,?LOC,DGBTDTFILED
"RTN","DGBTDLT1",186,0)
 W !,?LOC,DGBTINST("FAC NUMBER")
"RTN","DGBTDLT1",187,0)
 W ?LOC,"/"_$S(DGBTINST("MAIL CODE")'="":DGBTINST("MAIL CODE"),1:"136B"),!
"RTN","DGBTDLT1",188,0)
 W ?LOC,$E(VADM(1),1)_$E($P(VADM(2),"^",1),6,99)
"RTN","DGBTDLT1",189,0)
 W !,?LOC2,$G(PATSEX),$G(PATNAME)
"RTN","DGBTDLT1",190,0)
 W !,?LOC2,$G(PATADD1)
"RTN","DGBTDLT1",191,0)
 W:$G(PATADD2)'="" !,?LOC2,PATADD2
"RTN","DGBTDLT1",192,0)
 W !,?LOC2,PATCITY,PATST,PATZIP,!!
"RTN","DGBTDLT1",193,0)
 ;
"RTN","DGBTDLT1",194,0)
 Q
"RTN","DGBTDLT1",195,0)
 ;
"RTN","DGBTDLT1",196,0)
DEVICE(DGBTRPT) N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","DGBTDLT1",197,0)
 S %ZIS="QM"
"RTN","DGBTDLT1",198,0)
 D ^%ZIS
"RTN","DGBTDLT1",199,0)
 I POP S DGBTQ=1
"RTN","DGBTDLT1",200,0)
 ;
"RTN","DGBTDLT1",201,0)
 ;Check for exit
"RTN","DGBTDLT1",202,0)
 I $G(DGBTQ) Q
"RTN","DGBTDLT1",203,0)
 ;
"RTN","DGBTDLT1",204,0)
 S DGBTSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","DGBTDLT1",205,0)
 I $D(IO("Q")) D  S DGBTQ=1
"RTN","DGBTDLT1",206,0)
 . S ZTRTN="RUN^DGBTBORP0(DGBTEXCEL,DGBTRPT,DGBTSMDET)"
"RTN","DGBTDLT1",207,0)
 . S ZTIO=ION
"RTN","DGBTDLT1",208,0)
 . S ZTSAVE("*")=""
"RTN","DGBTDLT1",209,0)
 . S ZTDESC="DGBT REPORT: "_DGBTRPT
"RTN","DGBTDLT1",210,0)
 . D ^%ZTLOAD
"RTN","DGBTDLT1",211,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","DGBTDLT1",212,0)
 . D HOME^%ZIS
"RTN","DGBTDLT1",213,0)
 U IO
"RTN","DGBTDLT1",214,0)
 Q
"RTN","DGBTDLT1",215,0)
 ;
"RTN","DGBTDLT1",216,0)
QUIT ;will kill all local variables used by this routine
"RTN","DGBTDLT1",217,0)
 ;
"RTN","DGBTDLT1",218,0)
 K DFN,DGBTNEW,VACNTRY,VADAT,VADM,VAERR,VAPA,Y,Z,J,DGBTINST,DGBTNEW,DGBTTOUT,DGBTDLTR,DGBTDIVN,DGBTDIVI,DGBTDIV,DGBTCMTY,DGTCH1,DGBTCH,DGBTC,DGBTMD
"RTN","DGBTDLT1",219,0)
 K ^TMP("DGBT",$J),DFN,CITYSTZIP,CHZFLG,C,QUIT
"RTN","DGBTDLT1",220,0)
 K X1,YY,DGBTCHK,^TMP("DGBT",$J),^TMP("DGBTARA",$J)
"RTN","DGBTDLT1",221,0)
 K DRIEN,REASON,LETTERS1,LETTERS2,LINENBR,NBR,DGBTDNLTR,DGBTFDA,DGBTSCR,DGBTDR,DGBTISSUED,VADM,PATSEX,PATADD1,PATADD2,PATCITY,PATST,PATZIP,PATNAME
"RTN","DGBTDLT1",222,0)
 K CNTR,DFN,DGBTARY,DGBTCH,DGBTCH1,DGBTDTE,DGBTDTI,DGBTNEW,DGBTTOUT,DGBTARY,VA,VACNTRY,VAPA,DUOUT,DTOUT,DGBTQ,DGBTQ1
"RTN","DGBTDLT1",223,0)
 Q
"RTN","DGBTE")
0^8^B53217422^B51704812
"RTN","DGBTE",1,0)
DGBTE ;ALB/SCK/BLD - BENEFICIARY TRAVEL SETUP/MAIN ENTRY CALL UP; 11/20/92@1000; 11/25/92
"RTN","DGBTE",2,0)
 ;;1.0;Beneficiary Travel;**2,19,20,22,25,28**;September 25, 2001;Build 12
"RTN","DGBTE",3,0)
START ;
"RTN","DGBTE",4,0)
 N TRNSMDE,REMARKS,CLMTYPE,INSTIT,SPMODE,DGBTCMTY,DGBTDIVI,DGBTDIV,DGBTDIVN,DGANS,DGBTINCA,DGBTDTY,DGBTAPPTYP,DGBTDCLM,IOM,PATCHDT,DGBTPDIV
"RTN","DGBTE",5,0)
 ;DGBTINCA = Alternate Income
"RTN","DGBTE",6,0)
 K DGBTFDA,ERRMSG,DGBTX1,SGCOMPLETE
"RTN","DGBTE",7,0)
 ;
"RTN","DGBTE",8,0)
 D QUIT^DGBTEND  ; kill all variables
"RTN","DGBTE",9,0)
 D PATCH
"RTN","DGBTE",10,0)
 S PRCABN=1,IOP="HOME" D ^%ZIS K IOP
"RTN","DGBTE",11,0)
 S DGBTIME=300 S:'$D(DTIME) DTIME=DGBTIME S:'$D(U) U="^"
"RTN","DGBTE",12,0)
 ;   if date/time is undefined, set DT value
"RTN","DGBTE",13,0)
 I '$D(DT)#2 S %DT="",S="T" D ^%DT S DT=Y
"RTN","DGBTE",14,0)
DIVISN ; if MED CTR DIV file set up (first record) and record does not exist, write warning, kill variables, and exit
"RTN","DGBTE",15,0)
 S X=$G(^DG(40.8,0)) I X="" W !,"WARNING...MEDICAL CENTER DIVISION FILE IS NOT SET UP",!,"USE THE ADT PARAMETER OPTION FILE TO SET UP DIVISION" G EXIT
"RTN","DGBTE",16,0)
 ;  check if multi-divisional center (GL node exists and 2nd piece=1). Do lookup, if it exists-set local variables
"RTN","DGBTE",17,0)
 I $D(^DG(43,1,"GL")),$P(^("GL"),U,2) D  G:Y'>0 EXIT F  D PATIENT Q:$G(DGANS)="Q"  ;dbe patch DGBT*1*22 - return to select patient prompt
"RTN","DGBTE",18,0)
 . S DIC="^DG(40.8,",DIC(0)="AEQMNZ",DIC("A")="Select DIVISION: " W !!
"RTN","DGBTE",19,0)
 . D ^DIC K DIC Q:Y'>0
"RTN","DGBTE",20,0)
 . S (DGBTPDIV,DGBTDIVI)=+Y,DGBTDIV=$P(Y,U,2) ;dbe patch DGBT*1*22 - Added DGBTPDIV to save selected division if previous claim is edited
"RTN","DGBTE",21,0)
 . D INSTIT S DGBTMD=1
"RTN","DGBTE",22,0)
 Q:$G(DGANS)="Q"  ;dbe patch DGBT*1*22
"RTN","DGBTE",23,0)
 ;  if not a multi-divisional center, default to institution name
"RTN","DGBTE",24,0)
 S (DGBTPDIV,DGBTDIVI)=$O(^DG(40.8,0)),DGBTDIV=$P(^DG(40.8,DGBTDIVI,0),U) D INSTIT ;DGBT*1.0*28 - added variable DGBTPDIV
"RTN","DGBTE",25,0)
 ;
"RTN","DGBTE",26,0)
PATIENT ; patient lookup, quit if patient doesn't exist
"RTN","DGBTE",27,0)
 N VAEL
"RTN","DGBTE",28,0)
 D QUIT^DGBTEND
"RTN","DGBTE",29,0)
 S DGBTOLD=0   ;PAVEL DGBT*1*20
"RTN","DGBTE",30,0)
 D QUIT1^DGBTEND ; kill local variables except med division vars
"RTN","DGBTE",31,0)
 S DGBTTOUT="",DIC="^DPT(",DIC(0)="AEQMZ",DIC("A")="Select PATIENT: "
"RTN","DGBTE",32,0)
 W !! D ^DIC K DIC I +Y'>0 D EXIT S DGANS="Q" Q
"RTN","DGBTE",33,0)
 ; get patient information#, call return patient return variables routine and set whether new claim or not
"RTN","DGBTE",34,0)
 S:DGBTDIVI'=DGBTPDIV DGBTDIVI=DGBTPDIV ;dbe patch DGBT*1*22 - restore selected division from previous claim editing
"RTN","DGBTE",35,0)
 S DFN=+Y D 6^VADPT,KVAR^DGBTEND,PID^VADPT
"RTN","DGBTE",36,0)
 S DGBTNEW=$S($D(^DGBT(392,"C",DFN)):0,1:1)
"RTN","DGBTE",37,0)
 S SPCOMPLETE=0,DGBTAPPTYP=0
"RTN","DGBTE",38,0)
 S DGBTNSC=$$NSC^DGBTUTL
"RTN","DGBTE",39,0)
 ;
"RTN","DGBTE",40,0)
 ;next 2 lines were added by the BT Dashboard project(DGBT*1.0*19) and Integrated into DGBTE by BLD for DGBT*1.0*20
"RTN","DGBTE",41,0)
 S ^XTMP("DGBT BTD",0)=$$DT^XLFDT_"^"_$$DT^XLFDT
"RTN","DGBTE",42,0)
 S ^XTMP("DGBT BTD","CLAIMERS",$G(DUZ,-1))=$G(DFN,-1)
"RTN","DGBTE",43,0)
 ;
"RTN","DGBTE",44,0)
OLDCLAIM ;  find any past claims through DGBTE1 call
"RTN","DGBTE",45,0)
 D ^DGBTE1 I '$D(DGBTA) D PATIENT Q  ; set to call test routine, call old claims
"RTN","DGBTE",46,0)
 I '$D(^DG(43,1,"BT"))!('$D(^DG(43.1,$O(^DG(43.1,(9999999.9999999-DGBTDT))),"BT"))) D  D EXIT2 Q
"RTN","DGBTE",47,0)
 . ;  check for certifying official and that current (or past) FY deductible is set up 
"RTN","DGBTE",48,0)
 . W !!,"***WARNING...BENE TRAVEL PARAMETERS HAVE NOT BEEN SET UP",!,"USE THE BENEFICIARY TRAVEL PARAMETER RATES ENTER/EDIT OPTION TO PROPERLY INITIALIZE"
"RTN","DGBTE",49,0)
 ;
"RTN","DGBTE",50,0)
COREFLS ;  coreFLS vendor interface active/inactive
"RTN","DGBTE",51,0)
 S DGBTCORE=$P($G(^DG(43,1,"BT")),U,4)
"RTN","DGBTE",52,0)
 ;
"RTN","DGBTE",53,0)
SCREEN ;  display B/T claim information through screen1
"RTN","DGBTE",54,0)
 N DGBTQUIT
"RTN","DGBTE",55,0)
 D SCREEN^DGBT1 I $G(DGBTQUIT) D:'$G(CHZFLG) EXIT2,PATIENT D:$G(CHZFLG) EXIT,PATIENT Q
"RTN","DGBTE",56,0)
 Q:$G(ENDMENU)
"RTN","DGBTE",57,0)
 S:$D(^DGBT(392,DGBTDT,"SP")) SPCOMPLETE=1
"RTN","DGBTE",58,0)
 I '+VAEL(1) W !!,"Eligibility is missing from registration and is required to continue.",*7 D EXIT2 Q
"RTN","DGBTE",59,0)
 I $G(DGANS)="I" Q     ;BLD DG*1*20
"RTN","DGBTE",60,0)
 S DIR("A")="Continue processing claim",DIR("?")="Sorry, enter 'Y'es or RETURN to continue processing claim, 'N'o to exit",DIR(0)="Y",DIR("B")="YES"
"RTN","DGBTE",61,0)
 D ^DIR S ANS=Y K DIR
"RTN","DGBTE",62,0)
 I 'ANS S SPCOMPLETE=0 D EXIT2,CLEANUP^DGBTSP,PATIENT Q  ;S DGANS="Q" Q    ;BLD DG*1*20
"RTN","DGBTE",63,0)
 N DGBTELL S DGBTELL=$$ELIG^DGBTUTL1(DFN) ;PAVEL DGBT*1.0*20
"RTN","DGBTE",64,0)
 I +$G(DGBTELL)'=14,(+$G(DGBTELL)'=15) W !!," Eligible: ",$P(DGBTELL,U,2),!!
"RTN","DGBTE",65,0)
 I +$G(DGBTELL)=15 W !!,"Not Eligible: ",$P(DGBTELL,U,2),!!
"RTN","DGBTE",66,0)
 I +DGBTELL=14 S:'$G(CHZFLG) DGBTTOUT=-1,DGBTOLD=0 G DELETE1^DGBTEND ;User exit with ^  so delete the claim   !!??
"RTN","DGBTE",67,0)
 D  ;Store Result of E7 in fields 43.1  43.2
"RTN","DGBTE",68,0)
 .K FDA,ERRMSG
"RTN","DGBTE",69,0)
 .S FDA(392,DGBTDTI_",",43)=$G(DGBTCPAP)
"RTN","DGBTE",70,0)
 .S FDA(392,DGBTDTI_",",43.1)=+$G(DGBTELL)
"RTN","DGBTE",71,0)
 .S FDA(392,DGBTDTI_",",43.4)=$G(DGBTSCAP)
"RTN","DGBTE",72,0)
 .S FDA(392,DGBTDTI_",",43.5)=$G(DGBTQAP)
"RTN","DGBTE",73,0)
 .S:$L($P(DGBTELL,": ",2)) FDA(392,DGBTDTI_",",43.2)=$P($G(DGBTELL),": ",2,99)
"RTN","DGBTE",74,0)
 .D FILE^DIE("EKTS","FDA","ERRMSG") ;
"RTN","DGBTE",75,0)
 .I $D(ERRMSG),ERRMSG("DIERR",1,"TEXT",1)["The record is currently locked" W !!,"The patients record is currently locked..."
"RTN","DGBTE",76,0)
 I $D(ERRMSG) D EXIT Q
"RTN","DGBTE",77,0)
 ;
"RTN","DGBTE",78,0)
 ;the following question is for E1 in patch DGBT*1.0*20
"RTN","DGBTE",79,0)
 ;
"RTN","DGBTE",80,0)
SPMODE ;BLD DGBT*1*20 - SPMODE line tag will display question whether or special mode claim or mileage claim
"RTN","DGBTE",81,0)
 ; CLMTYP = type of BT claim, Mileage or Special Mode
"RTN","DGBTE",82,0)
 ;
"RTN","DGBTE",83,0)
 S (SPCOMPLETE,DGBTSP)=0
"RTN","DGBTE",84,0)
 D EN^DGBTSP(.DGBTSP) I $D(DTOUT)!($D(DUOUT)) K:$G(DGBTTOUT)=-1&($G(CHZFLG)=0) ^DGBT(392,DGBTDTI,"A") D:'$G(SPCOMPLETE) EXIT2 D:$G(SPCOMPLETE)&('$G(CHZFLG)) CLEANUP^DGBTSP D PATIENT,EXIT Q  ;DGBT*1.0*28 - added check for 'chzflg
"RTN","DGBTE",85,0)
 I +DGBTELL=15 D  I $G(DGBTTOUT)=-1  D:$G(DGBTTOUT)=-1&($G(CHZFLG)=0) EXIT2 D:$G(DGBTTOUT)=-1&($G(CHZFLG)) EXIT D PATIENT,EXIT Q
"RTN","DGBTE",86,0)
 .W !!,"CLAIM HAS BEEN DENIED AND DENIAL OF BENEFITS LETTER WILL BE ISSUED"
"RTN","DGBTE",87,0)
 .D DGBTDR^DGBTDLT Q:$G(DGBTTOUT)=-1
"RTN","DGBTE",88,0)
 .W !!,"PLEASE COMPLETE THE INVOICE INFORMATION." H 2
"RTN","DGBTE",89,0)
 S DA=DGBTDT,DIE="^DGBT(392,",DR="11///"_DGBTDIVI S:'$G(CHZFLG)!($P(^DGBT(392,DGBTDT,0),U,12)="") DR=DR_";12////"_DUZ S:'$G(CHZFLG)!($P(^DGBT(392,DGBTDT,0),U,13)="") DR=DR_";13///"_DT D ^DIE ;dbe patch DGBT*1*25
"RTN","DGBTE",90,0)
 I DGBTCMTY="S" D RESTART^DGBTSP(DGBTCMTY) I $D(DTOUT)!($D(DUOUT))!('$G(SPCOMPLETE)) S:'$G(SPCOMPLTE) DGBTTOUT=-1 D:'$G(SPCOMPLETE) EXIT2 D:$G(SPCOMPLETE) CLEANUP^DGBTSP D PATIENT,EXIT Q 
"RTN","DGBTE",91,0)
 ;
"RTN","DGBTE",92,0)
SCREEN2 ;
"RTN","DGBTE",93,0)
 I $G(DGBTSP)=0&('$D(^DGBT(392,"C",DFN,DGBTDTI))) D CLEANUP^DGBTSP,EXIT2 Q
"RTN","DGBTE",94,0)
 I $G(DFN)=""&($G(DGBTSP)=0) D PATIENT Q
"RTN","DGBTE",95,0)
 D SCREEN^DGBT2
"RTN","DGBTE",96,0)
COMPLT ;  complete claims processing
"RTN","DGBTE",97,0)
 ;
"RTN","DGBTE",98,0)
 I DGBTCMTY="M" S SPCOMPLETE=0
"RTN","DGBTE",99,0)
 I $G(SPCOMPLETE)=1 W !!,"Complete claim for ",DGBTDTE_" " S %=1 D YN^DICN S:%=2 SPCOMPLETE=0 K:%=2&(CHZFLG=0) ^DGBT(392,DGBTDTI,"A") I %'=1 D:%<1 HELP1 G:%<1 COMPLT D:(%=2)&($G(SPCOMPLETE)=0) EXIT2,PATIENT Q  ;dbe patch DGBT*1*22
"RTN","DGBTE",100,0)
 ;
"RTN","DGBTE",101,0)
 I $G(DGBTCMTY)="M" D  G:(%=2)&($G(DGBTSP)=0) EXIT G:%=2 EXIT3 G:%=-1 EXIT2 D:%<1 HELP1 G:%<1 COMPLT
"RTN","DGBTE",102,0)
 .S DA=DGBTDT,DIE="^DGBT(392,",DR="11///"_DGBTDIVI S:'$G(CHZFLG)!($P(^DGBT(392,DGBTDT,0),U,12)="") DR=DR_";12////"_DUZ S:'$G(CHZFLG)!($P(^DGBT(392,DGBTDT,0),U,13)="") DR=DR_";13///"_DT D ^DIE S %=1 ;dbe patch DGBT*1*25
"RTN","DGBTE",103,0)
 .W !!,"Complete claim for ",DGBTDTE D YN^DICN S:%=2 %=-1 S:%=-1&($G(CHZFLG)=0) DGBTTOUT=-1
"RTN","DGBTE",104,0)
 I $D(DGBTSP)>1 D FILE^DGBTSP1(.SPCOMPLETE) S NOLINE=1 D:$G(DGBTSP)=0 PATIENT D:$G(DGBTSP)=1 SCREEN^DGBTCDSP D EXIT D:$G(DGANS) PATIENT Q
"RTN","DGBTE",105,0)
 I $G(DGBTCMTY)="M" F I="SP","SPAD" K ^DGBT(392,DGBTDT,I)  ;clean up special mode if during an edit user switches from special mode to mileage
"RTN","DGBTE",106,0)
 I $G(SPCOMPLETE)=1&(DGBTCMTY'="M") D EXIT Q
"RTN","DGBTE",107,0)
 D SCREEN^DGBTEE
"RTN","DGBTE",108,0)
 I $G(DGBTTOUT)=-1,$G(DGBTCMTY)="M" G DELETE1^DGBTEND ;PAVEL DGBT*1*20
"RTN","DGBTE",109,0)
 G:$G(DGBTTOUT)=-1 EXIT3
"RTN","DGBTE",110,0)
 D ^DGBTEND
"RTN","DGBTE",111,0)
 Q
"RTN","DGBTE",112,0)
HELP1 ; 
"RTN","DGBTE",113,0)
 W !!?10,$S(%=-1:"SORRY, '^' NOT ALLOWED",1:"ENTER 'Y'ES OR 'N'O")
"RTN","DGBTE",114,0)
 Q
"RTN","DGBTE",115,0)
INSTIT ;  check for pointer to institution file and for address information on institution
"RTN","DGBTE",116,0)
 S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTE",117,0)
 I 'DGBTDIVN W !!,"INSTITUTION HAS NOT BEEN DEFINED FOR ",$P(^(0),"^"),!,"USE THE ADT PARAMETER OPTION TO UPDATE",! Q
"RTN","DGBTE",118,0)
 I $D(^DIC(4,DGBTDIVN,0)),$S($D(^(1))#10=0:1,$P(^(1),"^",3)']"":1,1:0) W !!,"INSTITUTION ADDRESS NOT ENTERED.  PLEASE UPDATE USING THE INSTITUTION FILE ENTER/EDIT",! Q
"RTN","DGBTE",119,0)
 Q
"RTN","DGBTE",120,0)
EXIT ; kills off all variables before quitting
"RTN","DGBTE",121,0)
 I $D(DGANS) D QUIT^DGBTEND Q
"RTN","DGBTE",122,0)
 I $G(DGBTCMTY)="S" D END^DGBTCDSP Q
"RTN","DGBTE",123,0)
 D QUIT^DGBTEND Q
"RTN","DGBTE",124,0)
 Q
"RTN","DGBTE",125,0)
EXIT2 ; delete claim through DIK call, return to patient label
"RTN","DGBTE",126,0)
 D DELETE1^DGBTEND
"RTN","DGBTE",127,0)
 Q
"RTN","DGBTE",128,0)
EXIT3 ;
"RTN","DGBTE",129,0)
 I $G(DGBTCMTY)="S" S:$D(^DGBT(392,DGBTDT,"SP")) DGBTTOUT="" D DELETE1^DGBTEND Q
"RTN","DGBTE",130,0)
 I $D(^DGBT(392,DGBTDT,"A")) S DGBTTOUT=""
"RTN","DGBTE",131,0)
 D DELETE^DGBTEND
"RTN","DGBTE",132,0)
 Q
"RTN","DGBTE",133,0)
 ;
"RTN","DGBTE",134,0)
PATCH ;this return the date DGBT*1.0*20 was first loaded
"RTN","DGBTE",135,0)
 ;
"RTN","DGBTE",136,0)
 N PATCHNBR
"RTN","DGBTE",137,0)
 S PATCHNBR=$O(^XPD(9.7,"B","DGBT*1.0*20",""))
"RTN","DGBTE",138,0)
 S PATCHDT=$P(^XPD(9.7,PATCHNBR,0),"^",3)
"RTN","DGBTE",139,0)
 Q
"RTN","DGBTE1")
0^9^B32593680^B31835437
"RTN","DGBTE1",1,0)
DGBTE1 ;ALB/SCK/GAH - BENEFICIARY TRAVEL FIND OLD CLAIM DATES;10/10/06@11:17am
"RTN","DGBTE1",2,0)
 ;;1.0;Beneficiary Travel;**8,12,13,20,21,22,25,28**;September 25, 2001;Build 12
"RTN","DGBTE1",3,0)
DATE ;  get date for claim, either new or past date
"RTN","DGBTE1",4,0)
 N DGBTDCLM
"RTN","DGBTE1",5,0)
 K ^TMP("DGBT",$J),^TMP("DGBTARA",$J),DIR
"RTN","DGBTE1",6,0)
 I 'DGBTNEW S DIR("A",2)="Enter a 'P' to display Past CLAIM dates for editing."
"RTN","DGBTE1",7,0)
 S DIR("A",3)="Time is required when adding a new CLAIM.",DIR("A",4)="",DIR("A",1)="",DIR("A")="Select TRAVEL CLAIM DATE/TIME",DIR("?")="^D HELP^DGBTE1A"
"RTN","DGBTE1",8,0)
 S DIR(0)="F",DIR("B")="NOW" D ^DIR K DIR G ERR1:$D(DIRUT)
"RTN","DGBTE1",9,0)
 S CHZFLG=0,%DT="EXR",DTSUB=$S(Y="N":"NOW",Y="P":"OLD",Y="p":"OLD",1:"OTHR")_"^DGBTE1A" D @DTSUB   ;PAVEL - DGBT*1*20
"RTN","DGBTE1",10,0)
 S:$P(DTSUB,U,1)="OLD"&(Y1>0) DGBTOLD=1 K DTSUB        ;PAVEL DGBT*1*20
"RTN","DGBTE1",11,0)
 G ERR1:$D(DTOUT),DATE:Y1<0 S DGBTA=Y1 G SET:CHZFLG    ;PAVEL DGBT*1*20
"RTN","DGBTE1",12,0)
DATE1 ;  for past claims, set DGBTDT to inverse date of claim date
"RTN","DGBTE1",13,0)
 I $D(^DGBT(392,"C",DFN)) D
"RTN","DGBTE1",14,0)
 . S DGBTC=0,DGBTDT=9999999-$E(DGBTA,1,7) ; set past claims counter=0
"RTN","DGBTE1",15,0)
 . ; for latest date (topmost) search for past claims
"RTN","DGBTE1",16,0)
 . F I=DGBTDT:0 S I=$O(^DGBT(392,"AI",DFN,I)) Q:'I!(I>(DGBTDT_.99999))  S DGBTC=DGBTC+1,DGBT(DGBTC)=9999999.99999-I
"RTN","DGBTE1",17,0)
 I '$D(DGBT) G LOCK
"RTN","DGBTE1",18,0)
 W !!,"There are other claims on this date.",!,"Select by number to edit or <RETURN> to add a new CLAIM.",!
"RTN","DGBTE1",19,0)
 ; convert inverse claim date to external format through VADATE conversion routine
"RTN","DGBTE1",20,0)
 F I=0:0 S I=$O(DGBT(I)) Q:'I  D
"RTN","DGBTE1",21,0)
 .S DGBTDCLM=$$GET1^DIQ(392,DGBT(I),45,"I")
"RTN","DGBTE1",22,0)
 .S VADAT("W")=DGBT(I) D ^VADATE W !?5,I,".",?10,VADATE("E")_$S($G(DGBTDCLM)'="":" (D)",1:"")
"RTN","DGBTE1",23,0)
 K DIR S DIR("A")="Select 1"_$S(DGBTC=1:"",1:"-"_DGBTC)_", or <RETURN> to add a new claim: ",DIR(0)="NOA^1:"_DGBTC,DIR("?")="Select, by number, one of the displayed claim dates: "
"RTN","DGBTE1",24,0)
 D ^DIR K DIR S:$G(Y) CHZFLG=1 G QUIT^DGBTEND:$D(DTOUT)!($D(DUOUT))
"RTN","DGBTE1",25,0)
 G LOCK:Y="" G DATE:'$D(DGBT(Y))
"RTN","DGBTE1",26,0)
 S DGBTA=DGBT(Y),DGBTOLD=1 G SET
"RTN","DGBTE1",27,0)
LOCK ;
"RTN","DGBTE1",28,0)
 L +^DGBT(392,DGBTA):$G(DILOCKTM,3)
"RTN","DGBTE1",29,0)
 I '$T!$D(^DGBT(392,DGBTA)) L -^DGBT(392,DGBTA) S DGBTA=$$FMADD^XLFDT(DGBTA,,,,1) G LOCK ;dbe patch DGBT*1*21
"RTN","DGBTE1",30,0)
 S (DGBTDT,VADAT("W"))=DGBTA D ^VADATE W VADATE("E")      ;for CCR235 by RE
"RTN","DGBTE1",31,0)
ASKADD ;
"RTN","DGBTE1",32,0)
 W !!,"Are you sure you want to add a new claim"
"RTN","DGBTE1",33,0)
 S %=1 D YN^DICN G EXIT2^DGBTE:%<0!(%=2)
"RTN","DGBTE1",34,0)
 I '% W !!,"Enter 'YES' to add a new claim, or 'NO' not to add the claim." G ASKADD
"RTN","DGBTE1",35,0)
 K DD,DO
"RTN","DGBTE1",36,0)
 ; create new file entry, stuff patient DFN into name field(pointer)
"RTN","DGBTE1",37,0)
 S (X,DINUM)=DGBTA,DIC="^DGBT(392,",DIC(0)="L",DIC("DR")="2////"_DFN
"RTN","DGBTE1",38,0)
 D FILE^DICN K DIC L -^DGBT(392,DGBTA)
"RTN","DGBTE1",39,0)
 ; go back to patient if no file entry
"RTN","DGBTE1",40,0)
 G:Y'>0 PATIENT^DGBTE
"RTN","DGBTE1",41,0)
SET ; call inhouse generic date routine
"RTN","DGBTE1",42,0)
 S (DA,DGBTDT,VADAT("W"))=DGBTA D ^VADATE
"RTN","DGBTE1",43,0)
 ; get internal and external formats of converted inverse dates
"RTN","DGBTE1",44,0)
 S DGBTDTI=$S($G(VADAT("W"))'="":VADAT("W"),1:VADATE("I")),DGBTDTE=VADATE("E") K VADAT,VADATE,DIC,Y
"RTN","DGBTE1",45,0)
 I $G(DGBTDIVI)'="" S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTE1",46,0)
 D GA^DGBTUTL(DFN,"DGBTINCA",DGBTDTI) ;Get Alternate Income PAVEL
"RTN","DGBTE1",47,0)
STUFF ;  stuff departure with address data from patient file, dest from institution file
"RTN","DGBTE1",48,0)
 S DGBTCMTY=$$GET1^DIQ(392,DGBTDT,56)
"RTN","DGBTE1",49,0)
 S:'$L(DGBTCMTY) DGBTCMTY="M"
"RTN","DGBTE1",50,0)
 ;dbe patch DGBT*1*25 - removed restrictions below to allow departure and destination fields to get filed for existing claims
"RTN","DGBTE1",51,0)
 S:'$D(^DGBT(392,DGBTDT,"D")) ^DGBT(392,DGBTDT,"D")=VAPA(1)_"^"_VAPA(2)_"^"_VAPA(3)_"^"_VAPA(4)_"^"_$S(VAPA(5)]"":+VAPA(5),1:"")_"^"_$P(VAPA(11),U,1)
"RTN","DGBTE1",52,0)
 I '$D(^DGBT(392,DGBTDT,"T")) D
"RTN","DGBTE1",53,0)
 . S X=$S($D(^DIC(4,DGBTDIVN,1)):^(1),1:"")
"RTN","DGBTE1",54,0)
 . S ^DGBT(392,DGBTDT,"T")=($P(^DG(40.8,DGBTDIVI,0),U)_"^"_$P(X,U)_"^"_$P(X,U,2)_"^"_$P(X,U,3)_"^"_$P(^DIC(4,DGBTDIVN,0),U,2)_"^"_$TR($P(X,U,4),"-","")) ;*28 remove hyphen from zip code
"RTN","DGBTE1",55,0)
 Q:$G(DGBTSP2M)  ;dbe patch DGBT*1*25 - added quit when called from routine dgbtee
"RTN","DGBTE1",56,0)
CHKFILES ; section removed, dependents picked up below in MEANS ; abr 10/94
"RTN","DGBTE1",57,0)
MEANS ;  find corres. means test entry, gets MT income, status, no. of dependents
"RTN","DGBTE1",58,0)
 ;DGBTMTS= MT Status;  DGBTCSC= claim Service Connected indicator & %;  DGBTELG=Eligibility status
"RTN","DGBTE1",59,0)
 N X,X2,X3,Y,DGBTIFL
"RTN","DGBTE1",60,0)
 S X=$$LST^DGMTCOU1(DFN,DT,3),DGBTMTS=$P(X,U,4)_U_$P(X,U,3) ; returns corres. MT info,X=IEN of last MT. passing a 3 will check both MT and RX Co-Pays
"RTN","DGBTE1",61,0)
 ; get income, # dependents
"RTN","DGBTE1",62,0)
 S Y=$$INCOME^VAFMON(DFN,DGBTA,1)
"RTN","DGBTE1",63,0)
 S:"I^V"[$P(Y,U,2) Y=U ;If income type is I or V ignore it PAVEL
"RTN","DGBTE1",64,0)
 S:DGBTINCA Y=$P(DGBTINCA,U,2)_U_$E($P(DGBTINCA,U,4)) ;Set Alternate Income
"RTN","DGBTE1",65,0)
 S X=$P(Y,U),DGBTIFL=$P(Y,U,2) ; returns income & source.
"RTN","DGBTE1",66,0)
 I X?1N.E!(X<0) D
"RTN","DGBTE1",67,0)
 .I X<0 S X=0
"RTN","DGBTE1",68,0)
 .S X2="0$",X3=8 D COMMA^%DTC
"RTN","DGBTE1",69,0)
 S DGBTINC=X_U_$G(DGBTIFL) K X,X2
"RTN","DGBTE1",70,0)
 S DGBTDEP=$$DEP^VAFMON(DFN,DGBTA) ; finds dependents Vet, Spouse, Children
"RTN","DGBTE1",71,0)
 S DGBTDTY=" (Year: "_$$FMTE^XLFDT($E(DGBTDTI,1,3)_"0000")_")" ;Year to be displayed with Income
"RTN","DGBTE1",72,0)
 S DGBTMTTH=$$MTTH^DGBTMTTH(DGBTDEP,DGBTDTI) ; Means test threshold
"RTN","DGBTE1",73,0)
 S DGBTRXTH=+$$THRES^IBARXEU1(DGBTDTI,1,DGBTDEP) ; RX co-pay threshold
"RTN","DGBTE1",74,0)
 S DGBTDYFL=$$DAYFLAG^DGBTUTL ; valid income test y/n
"RTN","DGBTE1",75,0)
 ;
"RTN","DGBTE1",76,0)
PREV ; if past claim get SC%, elig.
"RTN","DGBTE1",77,0)
 I CHZFLG S X=^DGBT(392,DGBTA,0),DGBTELG=$P(X,U,3),DGBTCSC=$P(X,U,4) D
"RTN","DGBTE1",78,0)
 . S:$P(X,U,11) DGBTDIVI=+$P(X,U,11),DGBTDIVN=$P($G(^DG(40.8,DGBTDIVI,0)),U,7) ;dbe patch DGBT*1*22 - save division of existing claims
"RTN","DGBTE1",79,0)
 . S:DGBTCSC DGBTCSC=1_U_DGBTCSC S:'DGBTCSC DGBTCSC=0
"RTN","DGBTE1",80,0)
 . S:DGBTELG DGBTELG=DGBTELG_U_$P(^DIC(8,DGBTELG,0),U)
"RTN","DGBTE1",81,0)
CERT ;  get last BT certification,  get date, then get eligibility
"RTN","DGBTE1",82,0)
 I $D(^DGBT(392.2,"C",DFN)) D
"RTN","DGBTE1",83,0)
 .;cd=cert date in inverse then external format, ce= eligibility, ca* = amt certified
"RTN","DGBTE1",84,0)
 . S DGBTCD=$O(^DGBT(392.2,"C",DFN,0)),DGBTCE=$P(^DGBT(392.2,DGBTCD,0),"^",3)
"RTN","DGBTE1",85,0)
 . S DGBTCA=$P(^DGBT(392.2,DGBTCD,0),"^",4),Y=9999999-$P(DGBTCD,".")
"RTN","DGBTE1",86,0)
 . X ^DD("DD") ; date conversion, y=cert date (internal)
"RTN","DGBTE1",87,0)
 . S DGBTCD=Y,X=DGBTCA,X2="0$",X3=8 K Y D COMMA^%DTC S DGBTCA=X K X,X2,X3
"RTN","DGBTE1",88,0)
APPTS ;  search patient file for appointments through claim date (DTI+1),  add dates to array DGBTCL 
"RTN","DGBTE1",89,0)
 N ERRCODE,DGARRAY,CLIEN,APTDT S DGARRAY("FLDS")="2;3;10;18"
"RTN","DGBTE1",90,0)
 S DGARRAY(4)=DFN,I=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGBTE1",91,0)
 ; I<0 = Error, I<0 = # of Records retrieved
"RTN","DGBTE1",92,0)
 I I<0 S ERRCODE=$O(^TMP($J,"SDAMA301","")),I1=1,DGBTCL("ERROR")=^TMP($J,"SDAMA301",ERRCODE)
"RTN","DGBTE1",93,0)
 I I>0 D
"RTN","DGBTE1",94,0)
 .S CLIEN=""
"RTN","DGBTE1",95,0)
 .F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DGBTE1",96,0)
 ..S APTDT=DGBTDTI\1
"RTN","DGBTE1",97,0)
 ..F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)) Q:'APTDT!(APTDT>(DGBTDTI+1))  D
"RTN","DGBTE1",98,0)
 ...S SDATA=^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)
"RTN","DGBTE1",99,0)
 ...S DGBTCL(APTDT)=$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,2),";",2)_U_$P($P(SDATA,U,3),";")
"RTN","DGBTE1",100,0)
 ...S DGBTCL(APTDT)=DGBTCL(APTDT)_U_$P($P(SDATA,U,18),";")_U_$P($P(SDATA,U,10),";")
"RTN","DGBTE1",101,0)
 K ^TMP($J,"SDAMA301"),DGARRAY,CLIEN,APTDT
"RTN","DGBTE1",102,0)
EXIT ; exit routine
"RTN","DGBTE1",103,0)
 Q
"RTN","DGBTE1",104,0)
ERR1 ;  error condition
"RTN","DGBTE1",105,0)
 G QUIT^DGBTEND Q
"RTN","DGBTOA2")
0^7^B17831216^B16658158
"RTN","DGBTOA2",1,0)
DGBTOA2 ;ALB/TT,ALB/MAC - BENEFICIARY TRAVEL OUTPUTS (Cont) ;9/25/12 5:19pm
"RTN","DGBTOA2",2,0)
 ;;1.0;Beneficiary Travel;**2,7,21,28**;September 25, 2001;Build 12
"RTN","DGBTOA2",3,0)
 ;sort by ACCT, CARrier or PATient=DGBTBY
"RTN","DGBTOA2",4,0)
 ;associated cross-ref =DGBTIX
"RTN","DGBTOA2",5,0)
START D NOW^%DTC S Y=$E(%,1,12) S VADAT("W")=Y D ^VADATE S U="^",DGBTDT=VADATE("E"),$P(DGBTCL,"=",81)="",(DGBTU,DGBTA,DGBTV,DGBT2,DGBTDV,DGBTCH,DGBTS,DGBTSD,X2,DGBTD,DGBTU,DGBTY,DGBT4,DGBTDN,DGBTI,DGBTOTX)=0 D PID^VADPT
"RTN","DGBTOA2",6,0)
 S DGBTIX=$S(DGBTSL="ACCT":"AC",DGBTSL="CAR":"AS",DGBTSL="TYP":"ACTP",1:"C")
"RTN","DGBTOA2",7,0)
 I $P($G(^DG(43,1,"BT")),U,4) S DGBTIX=$S(DGBTSL="CAR":"AFLS",1:DGBTIX)
"RTN","DGBTOA2",8,0)
 D SORT G:DGBTU QUIT1 I $D(^UTILITY($J)) D TOTAL^DGBTOA4 G QUIT1
"RTN","DGBTOA2",9,0)
 W !,"=====>NO PATIENTS FOUND"
"RTN","DGBTOA2",10,0)
QUIT1 D CLOSE^DGBTUTQ Q
"RTN","DGBTOA2",11,0)
 ;Loops thru the  "AC","AS","ACTP" or "C" X-ref, depending upon selected sort list
"RTN","DGBTOA2",12,0)
SORT F DGBTBY=0:0 S DGBTBY=$O(^DGBT(392,DGBTIX,DGBTBY)) Q:DGBTBY=""!(DGBTU)  I $D(VAUTN(DGBTBY))!(VAUTN) D DATE
"RTN","DGBTOA2",13,0)
 D PR^DGBTOA3 Q
"RTN","DGBTOA2",14,0)
DATE F DGBTD=DGBTBEG:0 S DGBTD=$O(^DGBT(392,DGBTIX,DGBTBY,DGBTD)) Q:DGBTD=""!(DGBTU)!(DGBTD>DGBTEND)  I $D(^DGBT(392,DGBTIX,DGBTBY,DGBTD)) D SET
"RTN","DGBTOA2",15,0)
 Q
"RTN","DGBTOA2",16,0)
SET ;Sets up variables and does validity checks, also sets up Utility 
"RTN","DGBTOA2",17,0)
 ;for individual totals
"RTN","DGBTOA2",18,0)
 Q:'$D(^DGBT(392,DGBTD,0))
"RTN","DGBTOA2",19,0)
 S DGBTK=^DGBT(392,DGBTD,0) Q:'$D(^DPT(+$P(DGBTK,U,2),0))  S DGBTO=^(0),DGBTDN=$S($P(DGBTK,U,11):$P(DGBTK,U,11),1:""),DGBTDV=$S('DGBTDN:"ZNOT SPECIFIED",1:$P(^DG(40.8,DGBTDN,0),U,1))
"RTN","DGBTOA2",20,0)
 Q:('VAUTD)&'$D(VAUTD(+DGBTDN))
"RTN","DGBTOA2",21,0)
 Q:'DGBTDN  ;dbe patch DGBT*1*21
"RTN","DGBTOA2",22,0)
 I '$P($G(^DG(43,1,"BT")),U,4) S DGBTB=$S($P(DGBTK,U,7):$P(^PRC(440,$P(DGBTK,U,7),0),U,1),1:"")
"RTN","DGBTOA2",23,0)
 I $P($G(^DG(43,1,"BT")),U,4) S DGBTB=$S($P(DGBTK,U,14):$P(^DGBT(392.31,$P(DGBTK,U,14),0),U,1),1:"")
"RTN","DGBTOA2",24,0)
 S DGBTK9=$P(DGBTK,U,9),DGBTK10=$S($P(DGBTK,U,15)="S":$P($G(^DGBT(392,DGBTD,"SP")),U,4),1:$P(DGBTK,U,10)) ;*28 modified code to add special mode claims to the total
"RTN","DGBTOA2",25,0)
 S DGBTCW=$S('+$P(DGBTK,U,6):"UNKNOWN",1:$P(^DGBT(392.3,+$P(DGBTK,U,6),0),U,1)),DGBTCH=$S(+DGBTCW:+DGBTCW,1:""),DGBTC=$S(+DGBTCW:$E($P(DGBTCW," ",2,$L(DGBTCW," ")),1,15),1:"")
"RTN","DGBTOA2",26,0)
 S (DGBTG,DGBTXX)=0,DGBTI=$S(DGBTSL="PAT":$P(DGBTO,U,1),DGBTSL="CAR":DGBTB,1:DGBTC)
"RTN","DGBTOA2",27,0)
 S DGBTP=$P(DGBTO,U,1),DFN=$P(DGBTK,U,2) D PID^VADPT6 S SSN=$S(VA("PID")]"":VA("PID"),1:"UNKNOWN") D PATU:DGBTSL="PAT",ACCTU:DGBTSL'="PAT"
"RTN","DGBTOA2",28,0)
 S DGBTS=$S($P(DGBTK,U,2):$P(DGBTK,U,2),1:""),DGBTSD=$S($P(DGBTK,U,6):$P(DGBTK,U,6),1:"")
"RTN","DGBTOA2",29,0)
 I $D(^UTILITY($J,2,DGBTDN,DGBTP,SSN,"T")) S DGBTS=$S($P(^UTILITY($J,2,DGBTDN,DGBTP,SSN,"T"),U,1):$P(^("T"),U,1),1:"")+DGBTS,DGBTSD=$S($P(^UTILITY($J,2,DGBTDN,DGBTP,SSN,"T"),U,2):$P(^("T"),U,2),1:"")+DGBTSD
"RTN","DGBTOA2",30,0)
 I $D(^UTILITY($J,2,DGBTDN,DGBTCW,"T")) S DGBTS=$S($P(^UTILITY($J,2,DGBTDN,DGBTCW,"T"),U,1):$P(^("T"),U,1),1:"")+DGBTS,DGBTSD=$S($P(^UTILITY($J,2,DGBTDN,DGBTCW,"T"),U,2):$P(^("T"),U,2),1:"")+DGBTSD
"RTN","DGBTOA2",31,0)
 I DGBTSL="PAT" S ^UTILITY($J,2,DGBTDN,DGBTP,SSN,"T")=DGBTS_U_DGBTSD_U_SSN Q
"RTN","DGBTOA2",32,0)
 S ^UTILITY($J,2,DGBTDN,DGBTCW,"T")=DGBTS_U_DGBTSD_U_DGBTBY Q
"RTN","DGBTOA2",33,0)
 ;Sets up Utility for valid patients
"RTN","DGBTOA2",34,0)
PATU S ^UTILITY($J,1,DGBTDN,DGBTP,SSN,DGBTD)=DGBTP_U_DGBTK10_U_DGBTCH_U_DGBTC_U_DGBTB_U_DGBTK9,DGBTK=^(DGBTD) Q
"RTN","DGBTOA2",35,0)
 ;Sets up Utility for valid accounts, account types and carriers
"RTN","DGBTOA2",36,0)
ACCTU S DGBTCW=$S(DGBTSL="CAR"&('$P($G(^DG(43,1,"BT")),U,4)):$P(^PRC(440,DGBTBY,0),U,1),DGBTSL="CAR"&($P($G(^DG(43,1,"BT")),U,4)):$P(^DGBT(392.31,DGBTBY,0),U,1),1:DGBTCW)
"RTN","DGBTOA2",37,0)
 S DGBTOTX(DGBTDN,DGBTCW)=$S('$D(DGBTOTX(DGBTDN,DGBTCW)):0,1:DGBTOTX(DGBTDN,DGBTCW)),DGBTOTX(DGBTDN,DGBTCW)=DGBTOTX(DGBTDN,DGBTCW)+1
"RTN","DGBTOA2",38,0)
 S DGBTPTC(DGBTDV)=$S('$D(DGBTPTC(DGBTDV)):0,1:DGBTPTC(DGBTDV)) S DGBTPTC(DGBTDV)=DGBTPTC(DGBTDV)+1
"RTN","DGBTOA2",39,0)
 S ^UTILITY($J,1,DGBTDN,DGBTCW,DGBTP,SSN,DGBTD)=DGBTP_U_DGBTK10_U_DGBTCH_U_DGBTC_U_DGBTB_U_DGBTK9,DGBTK=^(DGBTD) Q
"RTN","DGBTOA2",40,0)
CM N X3 D COMMA^%DTC Q
"VER")
8.0^22.0
"BLD",10010,6)
^30
**END**
**END**

