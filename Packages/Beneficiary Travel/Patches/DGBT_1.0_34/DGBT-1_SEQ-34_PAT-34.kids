Released DGBT*1*34 SEQ #34
Extracted from mail message
**KIDS**:DGBT*1.0*34^

**INSTALL NAME**
DGBT*1.0*34
"BLD",10966,0)
DGBT*1.0*34^BENEFICIARY TRAVEL^0^3180301^y
"BLD",10966,1,0)
^^5^5^3180227^^
"BLD",10966,1,1,0)
Patch DGBT*1*34 will address the following 2 issues:
"BLD",10966,1,2,0)
 
"BLD",10966,1,3,0)
    1. Denial Letter is printing the wrong Division
"BLD",10966,1,4,0)
    
"BLD",10966,1,5,0)
    2. The Claim Enter/Edit option is freezing/slow
"BLD",10966,4,0)
^9.64PA^^
"BLD",10966,6.3)
3
"BLD",10966,"KRN",0)
^9.67PA^779.2^20
"BLD",10966,"KRN",.4,0)
.4
"BLD",10966,"KRN",.401,0)
.401
"BLD",10966,"KRN",.402,0)
.402
"BLD",10966,"KRN",.403,0)
.403
"BLD",10966,"KRN",.5,0)
.5
"BLD",10966,"KRN",.84,0)
.84
"BLD",10966,"KRN",3.6,0)
3.6
"BLD",10966,"KRN",3.8,0)
3.8
"BLD",10966,"KRN",9.2,0)
9.2
"BLD",10966,"KRN",9.8,0)
9.8
"BLD",10966,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",10966,"KRN",9.8,"NM",2,0)
DGBTE1^^0^B35422593
"BLD",10966,"KRN",9.8,"NM",3,0)
DGBTCR^^0^B26806773
"BLD",10966,"KRN",9.8,"NM","B","DGBTCR",3)

"BLD",10966,"KRN",9.8,"NM","B","DGBTE1",2)

"BLD",10966,"KRN",19,0)
19
"BLD",10966,"KRN",19.1,0)
19.1
"BLD",10966,"KRN",101,0)
101
"BLD",10966,"KRN",409.61,0)
409.61
"BLD",10966,"KRN",771,0)
771
"BLD",10966,"KRN",779.2,0)
779.2
"BLD",10966,"KRN",870,0)
870
"BLD",10966,"KRN",8989.51,0)
8989.51
"BLD",10966,"KRN",8989.52,0)
8989.52
"BLD",10966,"KRN",8994,0)
8994
"BLD",10966,"KRN","B",.4,.4)

"BLD",10966,"KRN","B",.401,.401)

"BLD",10966,"KRN","B",.402,.402)

"BLD",10966,"KRN","B",.403,.403)

"BLD",10966,"KRN","B",.5,.5)

"BLD",10966,"KRN","B",.84,.84)

"BLD",10966,"KRN","B",3.6,3.6)

"BLD",10966,"KRN","B",3.8,3.8)

"BLD",10966,"KRN","B",9.2,9.2)

"BLD",10966,"KRN","B",9.8,9.8)

"BLD",10966,"KRN","B",19,19)

"BLD",10966,"KRN","B",19.1,19.1)

"BLD",10966,"KRN","B",101,101)

"BLD",10966,"KRN","B",409.61,409.61)

"BLD",10966,"KRN","B",771,771)

"BLD",10966,"KRN","B",779.2,779.2)

"BLD",10966,"KRN","B",870,870)

"BLD",10966,"KRN","B",8989.51,8989.51)

"BLD",10966,"KRN","B",8989.52,8989.52)

"BLD",10966,"KRN","B",8994,8994)

"BLD",10966,"QDEF")
^^^^^^^^^^YES
"BLD",10966,"QUES",0)
^9.62^^
"BLD",10966,"REQB",0)
^9.611^1^1
"BLD",10966,"REQB",1,0)
DGBT*1.0*33^2
"BLD",10966,"REQB","B","DGBT*1.0*33",1)

"MBREQ")
0
"PKG",154,-1)
1^1
"PKG",154,0)
BENEFICIARY TRAVEL^DGBT^Beneficiary Travel
"PKG",154,20,0)
^9.402P^^
"PKG",154,22,0)
^9.49I^1^1
"PKG",154,22,1,0)
1.0^3030731^3020423^66481
"PKG",154,22,1,"PAH",1,0)
34^3180301
"PKG",154,22,1,"PAH",1,1,0)
^^5^5^3180301
"PKG",154,22,1,"PAH",1,1,1,0)
Patch DGBT*1*34 will address the following 2 issues:
"PKG",154,22,1,"PAH",1,1,2,0)
 
"PKG",154,22,1,"PAH",1,1,3,0)
    1. Denial Letter is printing the wrong Division
"PKG",154,22,1,"PAH",1,1,4,0)
    
"PKG",154,22,1,"PAH",1,1,5,0)
    2. The Claim Enter/Edit option is freezing/slow
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGBTCR")
0^3^B26806773^B26266236
"RTN","DGBTCR",1,0)
DGBTCR ;ALB/SCK - BENEFICIARY TRAVEL FORM 70-3542d VARIABLES ;6/11/93@09:30
"RTN","DGBTCR",2,0)
 ;;1.0;Beneficiary Travel;**7,14,20,28,34**;September 25, 2001;Build 3
"RTN","DGBTCR",3,0)
 ;Modification of AIVBTPRT / pmg / GRAND ISLAND ; 07 Jul 88 12:02 PM
"RTN","DGBTCR",4,0)
START Q:'$D(DGBTDT)
"RTN","DGBTCR",5,0)
 N DGBTDIV ;dgbt*1.0*34 - new dgbtdiv rather than kill to preserve previous value
"RTN","DGBTCR",6,0)
 D MILE
"RTN","DGBTCR",7,0)
 S DGBTVAR(0)=$G(^DGBT(392,+DGBTDT,0)),DGBTACCT=$P($G(^DGBT(392.3,+$P(DGBTVAR(0),"^",6),0)),"^",5)
"RTN","DGBTCR",8,0)
 Q:DGBTACCT'>3
"RTN","DGBTCR",9,0)
 W !!,*7,"This needs to be printed at 132 columns"
"RTN","DGBTCR",10,0)
 S DGPGM="PRINT^DGBTCR",DGVAR="DGBTDT"
"RTN","DGBTCR",11,0)
 S %ZIS="PMQ" D ^%ZIS G QUIT:POP
"RTN","DGBTCR",12,0)
 I $D(IO("Q")) D QUE G QUIT
"RTN","DGBTCR",13,0)
 D PRINT
"RTN","DGBTCR",14,0)
QUIT ;
"RTN","DGBTCR",15,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","DGBTCR",16,0)
 K DGPGM,DGVAR,VADAT,VADATE,I,X,X2,DGBTVAR,DGBTCC,DGBTDOB,DGBTINS,DGBTINS1,DGBTINS2,DGBTCNA,DGBTCSZ,DGBTCNU,DGBTTCTY,DGBTFCTY,DGBTDT,DGBTACCT,DFN,Y
"RTN","DGBTCR",17,0)
 K DGBTM6,DGBTM7,DGBTM8,DGBTM8A,DGBTM9,DGBTM10,DGBTM11,DGBTM12,DGBTM13,DGBTM14,DGBTM15,DGBTM16,DGBTM17,DGBTRATE,DGBTSCP,DGBTSSN,DGBTST,DTOTAL,CDAT,D
"RTN","DGBTCR",18,0)
 Q
"RTN","DGBTCR",19,0)
PRINT ;
"RTN","DGBTCR",20,0)
 U IO D SET,PRINT^DGBTCR1,PRINT^DGBTCR2,KVAR^VADPT
"RTN","DGBTCR",21,0)
 Q
"RTN","DGBTCR",22,0)
SET S DFN=$P(^DGBT(392,DGBTDT,0),"^",2) D 6^VADPT S (DGBTFCTY,DGBTTCTY)=""
"RTN","DGBTCR",23,0)
NODES F I=0,"A","C","D","M","R","T" S DGBTVAR(I)=$S($D(^DGBT(392,DGBTDT,I)):^(I),1:"")
"RTN","DGBTCR",24,0)
 I $D(^DG(43.1,$O(^DG(43.1,(9999999.99999-DGBTDT))),"BT")) S DGBTRATE=^("BT"),DGBTM7=$S($P(DGBTVAR("A"),"^",3)=1:$P(DGBTRATE,"^",5),1:$P(DGBTRATE,"^",3))
"RTN","DGBTCR",25,0)
 I $P(DGBTVAR("D"),"^",4)]"" S DGBTCNA=$P(DGBTVAR("D"),"^",4) D CITY I DGBTCSZ[DGBTCNA D
"RTN","DGBTCR",26,0)
 . S DGBTCSZ=DGBTCNA_", "_$S(+$P(DGBTVAR("D"),"^",5)>0:$P(^DIC(5,$P(DGBTVAR("D"),"^",5),0),U,2),1:"")_"  "
"RTN","DGBTCR",27,0)
 . S Y=$P(DGBTVAR("D"),U,6),Y=$E(Y,1,5)_$S($E(Y,6,9)]"":"-"_$E(Y,6,9),1:""),DGBTCSZ=DGBTCSZ_Y,DGBTFCTY=DGBTCSZ
"RTN","DGBTCR",28,0)
 S $P(DGBTVAR("T"),U,6)=$$GET1^DIQ(392,DGBTDT,28.2) ;dgbt*1.0*28 - use fileman to set external zip code value
"RTN","DGBTCR",29,0)
 I $P(DGBTVAR("T"),"^",4)]"" S DGBTCNA=$P(DGBTVAR("T"),U,4) D CITY^DGBTCR S:DGBTCSZ[DGBTCNA DGBTCSZ=DGBTCNA_", "_$S(+$P(DGBTVAR("T"),"^",5)>0:$P(^DIC(5,$P(DGBTVAR("T"),"^",5),0),U,2),1:"")_"  "_$P(DGBTVAR("T"),U,6) S DGBTTCTY=DGBTCSZ
"RTN","DGBTCR",30,0)
DIV S DGBTDIV=$P(DGBTVAR(0),"^",11) I +DGBTDIV S DGBTDIV=$P(^DG(40.8,DGBTDIV,0),"^",7) S (DGBTCC,DGBTST)=""
"RTN","DGBTCR",31,0)
 I $D(^DIC(4,+DGBTDIV,0)) S DGBTINS=^(0),DGBTINS1=$S($D(^DIC(4,DGBTDIV,1)):^(1),1:""),DGBTINS2=$S(DGBTINS1]"":$P(DGBTINS1,"^",3)_",",1:"UNSPECIFIED")_" "_$S($D(^DIC(5,+$P(DGBTINS,U,2),0)):$P(^(0),U,2),1:"")_"  "_$P(DGBTINS1,"^",4)
"RTN","DGBTCR",32,0)
 I VAPA(5)&(VAPA(7)) S DGBTCC=$S($D(^DIC(5,+VAPA(5),1,+VAPA(7),0)):$P(^(0),"^",3),1:""),DGBTST=$P(^DIC(5,+VAPA(5),0),"^",2)
"RTN","DGBTCR",33,0)
 D PID^VADPT6 S DGBTSSN=VA("PID"),DGBTDOB=$E(VADM(3),4,7)_($E(VADM(3),1,3)+1700)
"RTN","DGBTCR",34,0)
 S DGBTSCP=$S($L($P(VAEL(3),"^",2)<3):"0",1:"")_$P(VAEL(3),"^",2)
"RTN","DGBTCR",35,0)
MILES S DGBTM6=$P(DGBTVAR("M"),"^")*$P(DGBTVAR("M"),"^",2)
"RTN","DGBTCR",36,0)
 N X3
"RTN","DGBTCR",37,0)
 S X2="2$",X=DGBTM6*DGBTM7 D COMMA^%DTC S DGBTM8=X
"RTN","DGBTCR",38,0)
 S X=$P(DGBTVAR("C"),"^",2) D COMMA^%DTC S DGBTM8A=X
"RTN","DGBTCR",39,0)
 S X=$P(DGBTVAR("M"),"^",4) D COMMA^%DTC S DGBTM9=X
"RTN","DGBTCR",40,0)
 S X=$P(DGBTVAR("M"),"^",5) D COMMA^%DTC S DGBTM10=X
"RTN","DGBTCR",41,0)
 S X=DGBTM6*DGBTM7+$P(DGBTM8A,"$",2)+$P(DGBTVAR("M"),"^",4)+$P(DGBTVAR("M"),"^",5) D COMMA^%DTC S DGBTM11=X
"RTN","DGBTCR",42,0)
 S X2="3$",X=DGBTM7 D COMMA^%DTC S DGBTM7=X
"RTN","DGBTCR",43,0)
 S X2="2$"  ;Reset edit mask to 2 decimal positions for rest of report
"RTN","DGBTCR",44,0)
 S X=$P(DGBTVAR(0),"^",8) D COMMA^%DTC S DGBTM12=X
"RTN","DGBTCR",45,0)
 S X=$P(DGBTVAR("M"),"^",4)+$P(DGBTVAR(0),"^",8) D COMMA^%DTC S DGBTM13=X
"RTN","DGBTCR",46,0)
 S X=$P(DGBTVAR(0),"^",10) D COMMA^%DTC S DGBTM14=X
"RTN","DGBTCR",47,0)
 S X=$P(DGBTVAR(0),"^",9) D COMMA^%DTC S $P(DGBTM14,"^",2)=X
"RTN","DGBTCR",48,0)
CERT S VADAT("W")=DGBTDT D ^VADATE S DGBTM15=VADATE("E")
"RTN","DGBTCR",49,0)
 S X=$S($P(^DG(43,1,"BT"),"^")'="":$P(^DG(43,1,"BT"),"^"),1:DUZ),DGBTM16=$P($P(^VA(200,X,0),",",2),"^")_" "_$P(^VA(200,X,0),",")_$S($P(^DG(43,1,"BT"),"^")'="":"",1:", DESIGNEE OF CERTIFYING OFFICIAL") K X
"RTN","DGBTCR",50,0)
 S DGBTM17=$P($P(DGBTVAR("A"),"^",2),",",2)_" "_$P($P(DGBTVAR("A"),"^",2),",")
"RTN","DGBTCR",51,0)
 Q
"RTN","DGBTCR",52,0)
CITY S DGBTCSZ=DGBTCNA
"RTN","DGBTCR",53,0)
 S:VAPA(5)'="" DGBTCNU=$O(^DGBT(392.1,"ACS",DGBTCNA,+VAPA(5),0))
"RTN","DGBTCR",54,0)
 I $D(DGBTCNU),(DGBTCNU'="") S DGBTCSZ=$P(^DGBT(392.1,DGBTCNU,0),"^")_", "_($P(^DIC(5,+VAPA(5),0),"^",2))_"  "_($P(^DGBT(392.1,DGBTCNU,0),"^",4))
"RTN","DGBTCR",55,0)
 Q
"RTN","DGBTCR",56,0)
QUE ;
"RTN","DGBTCR",57,0)
 N I
"RTN","DGBTCR",58,0)
 S ZTRTN="PRINT^DGBTCR",ZTDESC="VA FORM 70-3542d"
"RTN","DGBTCR",59,0)
 F I="DFN","DGBTDT","DGBTFCTY","DGBTTCTY","ONEWAY","RTRIP","DTOTAL" S ZTSAVE(I)=""
"RTN","DGBTCR",60,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"TASK #",ZTSK
"RTN","DGBTCR",61,0)
 D HOME^%ZIS K IO("Q")
"RTN","DGBTCR",62,0)
 Q
"RTN","DGBTCR",63,0)
 ;
"RTN","DGBTCR",64,0)
MILE ; one way, round trip and total amount deductible
"RTN","DGBTCR",65,0)
 I $D(MONTOT) D  Q
"RTN","DGBTCR",66,0)
 .S ONEWAY=$P(MONTOT,U,2),RTRIP=$P(MONTOT,U,3),DTOTAL=$P(MONTOT,U,4)
"RTN","DGBTCR",67,0)
 K CDAT,SDATE,EDATE,PDATA,DEDUCT,EMONTH,MDATA,DGBTRIP
"RTN","DGBTCR",68,0)
 S (DEDUCT,DTOTAL,ONEWAY,RTRIP,CDAT,SDATE,EDATE)=0
"RTN","DGBTCR",69,0)
 S EMONTH=0
"RTN","DGBTCR",70,0)
 ;
"RTN","DGBTCR",71,0)
 S SDATE=$P(DGBTDT,".",1)
"RTN","DGBTCR",72,0)
 S SDATE=$E(SDATE,1,5)_"01"   ;_.0001
"RTN","DGBTCR",73,0)
 S EDATE=$E(DGBTDT,1,5)
"RTN","DGBTCR",74,0)
 S EMONTH=$E(DGBTDT,4,5) S EMONTH=EMONTH+1
"RTN","DGBTCR",75,0)
 S:$L(EMONTH)=1 EMONTH="0"_EMONTH
"RTN","DGBTCR",76,0)
 S EDATE=$E(DGBTDT,1,3)_EMONTH_"00"
"RTN","DGBTCR",77,0)
 ;
"RTN","DGBTCR",78,0)
 F  S CDAT=$O(^DGBT(392,"C",DFN,CDAT)) Q:'CDAT  D
"RTN","DGBTCR",79,0)
 .Q:$$GET1^DIQ(392,CDAT,45.2,"I")   ;DENIED CLAIM, DON'T COUNT
"RTN","DGBTCR",80,0)
 .Q:$P(^DGBT(392,CDAT,0),"^",16)'=""
"RTN","DGBTCR",81,0)
 .Q:$D(^DGBT(392,CDAT,"SP"))
"RTN","DGBTCR",82,0)
 .Q:CDAT<SDATE!(CDAT>EDATE)
"RTN","DGBTCR",83,0)
 .Q:'$D(^DGBT(392,CDAT,0))
"RTN","DGBTCR",84,0)
 .Q:$D(DGBTRIP("ONEWAY",$P(CDAT,".",1)))
"RTN","DGBTCR",85,0)
 .S PDATA=$G(^DGBT(392,CDAT,0))
"RTN","DGBTCR",86,0)
 .S DEDUCT=$P(PDATA,"^",9)
"RTN","DGBTCR",87,0)
 .S DTOTAL=DTOTAL+DEDUCT
"RTN","DGBTCR",88,0)
 .;
"RTN","DGBTCR",89,0)
 .S MDATA=$G(^DGBT(392,CDAT,"M"))
"RTN","DGBTCR",90,0)
 .Q:$P(MDATA,"^",1)=""
"RTN","DGBTCR",91,0)
 .I $P(MDATA,"^",1)=1,'$D(DGBTRIP("ONEWAY",$P(CDAT,".",1))) S ONEWAY=ONEWAY+1
"RTN","DGBTCR",92,0)
 .I $P(MDATA,"^",1)=2,'$D(DGBTRIP("RTRIP",$P(CDAT,".",1))) S RTRIP=RTRIP+1
"RTN","DGBTCR",93,0)
 ;
"RTN","DGBTCR",94,0)
 Q
"RTN","DGBTE1")
0^2^B35422593^B32989295
"RTN","DGBTE1",1,0)
DGBTE1 ;ALB/SCK/GAH - BENEFICIARY TRAVEL FIND OLD CLAIM DATES ;10/10/06@11:17am
"RTN","DGBTE1",2,0)
 ;;1.0;Beneficiary Travel;**8,12,13,20,21,22,25,28,33,34**;September 25, 2001;Build 3
"RTN","DGBTE1",3,0)
DATE ;  get date for claim, either new or past date
"RTN","DGBTE1",4,0)
 N DGBTDCLM
"RTN","DGBTE1",5,0)
 K ^TMP("DGBT",$J),^TMP("DGBTARA",$J),DIR
"RTN","DGBTE1",6,0)
 I 'DGBTNEW S DIR("A",2)="Enter a 'P' to display Past CLAIM dates for editing."
"RTN","DGBTE1",7,0)
 S DIR("A",3)="Time is required when adding a new CLAIM.",DIR("A",4)="",DIR("A",1)="",DIR("A")="Select TRAVEL CLAIM DATE/TIME",DIR("?")="^D HELP^DGBTE1A"
"RTN","DGBTE1",8,0)
 S DIR(0)="F",DIR("B")="NOW" D ^DIR K DIR G ERR1:$D(DIRUT)
"RTN","DGBTE1",9,0)
 S CHZFLG=0,%DT="EXR",DTSUB=$S(Y="N":"NOW",Y="P":"OLD",Y="p":"OLD",1:"OTHR")_"^DGBTE1A" D @DTSUB   ;PAVEL - DGBT*1*20
"RTN","DGBTE1",10,0)
 S:$P(DTSUB,U,1)="OLD"&(Y1>0) DGBTOLD=1 K DTSUB        ;PAVEL DGBT*1*20
"RTN","DGBTE1",11,0)
 G ERR1:$D(DTOUT),DATE:Y1<0 S DGBTA=Y1 G SET:CHZFLG    ;PAVEL DGBT*1*20
"RTN","DGBTE1",12,0)
DATE1 ;  for past claims, set DGBTDT to inverse date of claim date
"RTN","DGBTE1",13,0)
 I $D(^DGBT(392,"C",DFN)) D
"RTN","DGBTE1",14,0)
 . S DGBTC=0,DGBTDT=9999999-$E(DGBTA,1,7) ; set past claims counter=0
"RTN","DGBTE1",15,0)
 . ; for latest date (topmost) search for past claims
"RTN","DGBTE1",16,0)
 . F I=DGBTDT:0 S I=$O(^DGBT(392,"AI",DFN,I)) Q:'I!(I>(DGBTDT_.99999))  S DGBTC=DGBTC+1,DGBT(DGBTC)=9999999.99999-I
"RTN","DGBTE1",17,0)
 I '$D(DGBT) G LOCK
"RTN","DGBTE1",18,0)
 W !!,"There are other claims on this date.",!,"Select by number to edit or <RETURN> to add a new CLAIM.",!
"RTN","DGBTE1",19,0)
 ; convert inverse claim date to external format through VADATE conversion routine
"RTN","DGBTE1",20,0)
 F I=0:0 S I=$O(DGBT(I)) Q:'I  D
"RTN","DGBTE1",21,0)
 .S DGBTDCLM=$$GET1^DIQ(392,DGBT(I),45,"I")
"RTN","DGBTE1",22,0)
 .S VADAT("W")=DGBT(I) D ^VADATE W !?5,I,".",?10,VADATE("E")_$S($G(DGBTDCLM)'="":" (D)",1:"")
"RTN","DGBTE1",23,0)
 K DIR S DIR("A")="Select 1"_$S(DGBTC=1:"",1:"-"_DGBTC)_", or <RETURN> to add a new claim: ",DIR(0)="NOA^1:"_DGBTC,DIR("?")="Select, by number, one of the displayed claim dates: "
"RTN","DGBTE1",24,0)
 D ^DIR K DIR S:$G(Y) CHZFLG=1 G QUIT^DGBTEND:$D(DTOUT)!($D(DUOUT))
"RTN","DGBTE1",25,0)
 G LOCK:Y="" G DATE:'$D(DGBT(Y))
"RTN","DGBTE1",26,0)
 S DGBTA=DGBT(Y),DGBTOLD=1 G SET
"RTN","DGBTE1",27,0)
LOCK ;
"RTN","DGBTE1",28,0)
 ;L +^DGBT(392,DGBTA):$G(DILOCKTM,3)
"RTN","DGBTE1",29,0)
 ;I '$T!$D(^DGBT(392,DGBTA)) L -^DGBT(392,DGBTA) S DGBTA=$$FMADD^XLFDT(DGBTA,,,,1) G LOCK ;dbe patch DGBT*1*21
"RTN","DGBTE1",30,0)
 ;dgbt*1.0*33 - more efficient lookup
"RTN","DGBTE1",31,0)
 F  Q:'$D(^DGBT(392,DGBTA))  S DGBTA=$$FMADD^XLFDT(DGBTA,,,,1)
"RTN","DGBTE1",32,0)
 L +^DGBT(392,DGBTA):$G(DILOCKTM,3) E  S DGBTA=$$FMADD^XLFDT(DGBTA,,,,1) G LOCK ;dgbt*1.0*34 - added to increment if lock exists for record # that has not been created yet
"RTN","DGBTE1",33,0)
 S (DGBTDT,VADAT("W"))=DGBTA D ^VADATE W VADATE("E")      ;for CCR235 by RE
"RTN","DGBTE1",34,0)
ASKADD ;
"RTN","DGBTE1",35,0)
 W !!,"Are you sure you want to add a new claim"
"RTN","DGBTE1",36,0)
 S %=1 D YN^DICN I (%<0)!(%=2) L -^DGBT(392,DGBTA) G EXIT2^DGBTE ;dgbt*1.0*34 - unlock record immediately if user chooses no or exits
"RTN","DGBTE1",37,0)
 I '% W !!,"Enter 'YES' to add a new claim, or 'NO' not to add the claim." G ASKADD
"RTN","DGBTE1",38,0)
 K DD,DO
"RTN","DGBTE1",39,0)
 ; create new file entry, stuff patient DFN into name field(pointer)
"RTN","DGBTE1",40,0)
 S (X,DINUM)=DGBTA,DIC="^DGBT(392,",DIC(0)="L",DIC("DR")="2////"_DFN
"RTN","DGBTE1",41,0)
 D FILE^DICN K DIC L -^DGBT(392,DGBTA)
"RTN","DGBTE1",42,0)
 ; go back to patient if no file entry
"RTN","DGBTE1",43,0)
 G:Y'>0 PATIENT^DGBTE
"RTN","DGBTE1",44,0)
SET ; call inhouse generic date routine
"RTN","DGBTE1",45,0)
 S (DA,DGBTDT,VADAT("W"))=DGBTA D ^VADATE
"RTN","DGBTE1",46,0)
 ; get internal and external formats of converted inverse dates
"RTN","DGBTE1",47,0)
 S DGBTDTI=$S($G(VADAT("W"))'="":VADAT("W"),1:VADATE("I")),DGBTDTE=VADATE("E") K VADAT,VADATE,DIC,Y
"RTN","DGBTE1",48,0)
 I $G(DGBTDIVI)'="" S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTE1",49,0)
 D GA^DGBTUTL(DFN,"DGBTINCA",DGBTDTI) ;Get Alternate Income PAVEL
"RTN","DGBTE1",50,0)
STUFF ;  stuff departure with address data from patient file, dest from institution file
"RTN","DGBTE1",51,0)
 S DGBTCMTY=$$GET1^DIQ(392,DGBTDT,56)
"RTN","DGBTE1",52,0)
 S:'$L(DGBTCMTY) DGBTCMTY="M"
"RTN","DGBTE1",53,0)
 ;dbe patch DGBT*1*25 - removed restrictions below to allow departure and destination fields to get filed for existing claims
"RTN","DGBTE1",54,0)
 S:'$D(^DGBT(392,DGBTDT,"D")) ^DGBT(392,DGBTDT,"D")=VAPA(1)_"^"_VAPA(2)_"^"_VAPA(3)_"^"_VAPA(4)_"^"_$S(VAPA(5)]"":+VAPA(5),1:"")_"^"_$P(VAPA(11),U,1)
"RTN","DGBTE1",55,0)
 I '$D(^DGBT(392,DGBTDT,"T")) D
"RTN","DGBTE1",56,0)
 . S X=$S($D(^DIC(4,DGBTDIVN,1)):^(1),1:"")
"RTN","DGBTE1",57,0)
 . S ^DGBT(392,DGBTDT,"T")=($P(^DG(40.8,DGBTDIVI,0),U)_"^"_$P(X,U)_"^"_$P(X,U,2)_"^"_$P(X,U,3)_"^"_$P(^DIC(4,DGBTDIVN,0),U,2)_"^"_$TR($P(X,U,4),"-","")) ;*28 remove hyphen from zip code
"RTN","DGBTE1",58,0)
 Q:$G(DGBTSP2M)  ;dbe patch DGBT*1*25 - added quit when called from routine dgbtee
"RTN","DGBTE1",59,0)
CHKFILES ; section removed, dependents picked up below in MEANS ; abr 10/94
"RTN","DGBTE1",60,0)
MEANS ;  find corres. means test entry, gets MT income, status, no. of dependents
"RTN","DGBTE1",61,0)
 ;DGBTMTS= MT Status;  DGBTCSC= claim Service Connected indicator & %;  DGBTELG=Eligibility status
"RTN","DGBTE1",62,0)
 N X,X2,X3,Y,DGBTIFL
"RTN","DGBTE1",63,0)
 S X=$$LST^DGMTCOU1(DFN,DT,3),DGBTMTS=$P(X,U,4)_U_$P(X,U,3) ; returns corres. MT info,X=IEN of last MT. passing a 3 will check both MT and RX Co-Pays
"RTN","DGBTE1",64,0)
 ; get income, # dependents
"RTN","DGBTE1",65,0)
 S Y=$$INCOME^VAFMON(DFN,DGBTA,1)
"RTN","DGBTE1",66,0)
 S:"I^V"[$P(Y,U,2) Y=U ;If income type is I or V ignore it PAVEL
"RTN","DGBTE1",67,0)
 S:DGBTINCA Y=$P(DGBTINCA,U,2)_U_$E($P(DGBTINCA,U,4)) ;Set Alternate Income
"RTN","DGBTE1",68,0)
 S X=$P(Y,U),DGBTIFL=$P(Y,U,2) ; returns income & source.
"RTN","DGBTE1",69,0)
 I X?1N.E!(X<0) D
"RTN","DGBTE1",70,0)
 .I X<0 S X=0
"RTN","DGBTE1",71,0)
 .S X2="0$",X3=8 D COMMA^%DTC
"RTN","DGBTE1",72,0)
 S DGBTINC=X_U_$G(DGBTIFL) K X,X2
"RTN","DGBTE1",73,0)
 S DGBTDEP=$$DEP^VAFMON(DFN,DGBTA) ; finds dependents Vet, Spouse, Children
"RTN","DGBTE1",74,0)
 S DGBTDTY=" (Year: "_$$FMTE^XLFDT($E(DGBTDTI,1,3)_"0000")_")" ;Year to be displayed with Income
"RTN","DGBTE1",75,0)
 S DGBTMTTH=$$MTTH^DGBTMTTH(DGBTDEP,DGBTDTI) ; Means test threshold
"RTN","DGBTE1",76,0)
 S DGBTRXTH=+$$THRES^IBARXEU1(DGBTDTI,1,DGBTDEP) ; RX co-pay threshold
"RTN","DGBTE1",77,0)
 S DGBTDYFL=$$DAYFLAG^DGBTUTL ; valid income test y/n
"RTN","DGBTE1",78,0)
 ;
"RTN","DGBTE1",79,0)
PREV ; if past claim get SC%, elig.
"RTN","DGBTE1",80,0)
 I CHZFLG S X=^DGBT(392,DGBTA,0),DGBTELG=$P(X,U,3),DGBTCSC=$P(X,U,4) D
"RTN","DGBTE1",81,0)
 . S:$P(X,U,11) DGBTDIVI=+$P(X,U,11),DGBTDIVN=$P($G(^DG(40.8,DGBTDIVI,0)),U,7) ;dbe patch DGBT*1*22 - save division of existing claims
"RTN","DGBTE1",82,0)
 . S:DGBTCSC DGBTCSC=1_U_DGBTCSC S:'DGBTCSC DGBTCSC=0
"RTN","DGBTE1",83,0)
 . S:DGBTELG DGBTELG=DGBTELG_U_$P(^DIC(8,DGBTELG,0),U)
"RTN","DGBTE1",84,0)
CERT ;  get last BT certification,  get date, then get eligibility
"RTN","DGBTE1",85,0)
 I $D(^DGBT(392.2,"C",DFN)) D
"RTN","DGBTE1",86,0)
 .;cd=cert date in inverse then external format, ce= eligibility, ca* = amt certified
"RTN","DGBTE1",87,0)
 . S DGBTCD=$O(^DGBT(392.2,"C",DFN,0)),DGBTCE=$P(^DGBT(392.2,DGBTCD,0),"^",3)
"RTN","DGBTE1",88,0)
 . S DGBTCA=$P(^DGBT(392.2,DGBTCD,0),"^",4),Y=9999999-$P(DGBTCD,".")
"RTN","DGBTE1",89,0)
 . X ^DD("DD") ; date conversion, y=cert date (internal)
"RTN","DGBTE1",90,0)
 . S DGBTCD=Y,X=DGBTCA,X2="0$",X3=8 K Y D COMMA^%DTC S DGBTCA=X K X,X2,X3
"RTN","DGBTE1",91,0)
APPTS ;  search patient file for appointments through claim date (DTI+1),  add dates to array DGBTCL 
"RTN","DGBTE1",92,0)
 N ERRCODE,DGARRAY,CLIEN,APTDT S DGARRAY("FLDS")="2;3;10;18"
"RTN","DGBTE1",93,0)
 S DGARRAY(4)=DFN,I=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGBTE1",94,0)
 ; I<0 = Error, I<0 = # of Records retrieved
"RTN","DGBTE1",95,0)
 I I<0 S ERRCODE=$O(^TMP($J,"SDAMA301","")),I1=1,DGBTCL("ERROR")=^TMP($J,"SDAMA301",ERRCODE)
"RTN","DGBTE1",96,0)
 I I>0 D
"RTN","DGBTE1",97,0)
 .S CLIEN=""
"RTN","DGBTE1",98,0)
 .F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DGBTE1",99,0)
 ..S APTDT=DGBTDTI\1
"RTN","DGBTE1",100,0)
 ..F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)) Q:'APTDT!(APTDT>(DGBTDTI+1))  D
"RTN","DGBTE1",101,0)
 ...S SDATA=^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)
"RTN","DGBTE1",102,0)
 ...S DGBTCL(APTDT)=$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,2),";",2)_U_$P($P(SDATA,U,3),";")
"RTN","DGBTE1",103,0)
 ...S DGBTCL(APTDT)=DGBTCL(APTDT)_U_$P($P(SDATA,U,18),";")_U_$P($P(SDATA,U,10),";")
"RTN","DGBTE1",104,0)
 K ^TMP($J,"SDAMA301"),DGARRAY,CLIEN,APTDT
"RTN","DGBTE1",105,0)
EXIT ; exit routine
"RTN","DGBTE1",106,0)
 Q
"RTN","DGBTE1",107,0)
ERR1 ;  error condition
"RTN","DGBTE1",108,0)
 G QUIT^DGBTEND Q
"VER")
8.0^22.2
"BLD",10966,6)
^34
**END**
**END**

