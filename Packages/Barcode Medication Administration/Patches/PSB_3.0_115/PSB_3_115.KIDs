KIDS Distribution saved on Dec 14, 2018@17:16
PSB*3*115
**KIDS**:PSB*3.0*115^

**INSTALL NAME**
PSB*3.0*115
"BLD",11325,0)
PSB*3.0*115^BAR CODE MED ADMIN^0^3181214^y
"BLD",11325,1,0)
^^34^34^3181214^
"BLD",11325,1,1,0)
This patch will resolve the following issue.
"BLD",11325,1,2,0)
 
"BLD",11325,1,3,0)
INC2794138 - When BCBU init is ran and only one HL7 link is entered it still
"BLD",11325,1,4,0)
             updates numerous links
"BLD",11325,1,5,0)
 
"BLD",11325,1,6,0)
Defect Tracking System Ticket(s) & Overview:
"BLD",11325,1,7,0)
--------------------------------------------
"BLD",11325,1,8,0)
INC2794138 - When BCBU init is ran and only one HL7 link is entered it still
"BLD",11325,1,9,0)
             updates numerous links
"BLD",11325,1,10,0)
          
"BLD",11325,1,11,0)
Problem: 
"BLD",11325,1,12,0)
--------
"BLD",11325,1,13,0)
Captain James A. Lovell Federal Health Care Center reported a problem with
"BLD",11325,1,14,0)
the BCBU Initialize options below:
"BLD",11325,1,15,0)
 
"BLD",11325,1,16,0)
    Default Workstation Initialize [PSB BCBU INIT WRKSTN DFT]
"BLD",11325,1,17,0)
    Divisional Workstation Initialize [PSB BCBU INIT WRKSTN DIV]
"BLD",11325,1,18,0)
 
"BLD",11325,1,19,0)
Whenever these options were executed and one or more Workstation Link were
"BLD",11325,1,20,0)
selected for the initialization the option still generated and sent HL7
"BLD",11325,1,21,0)
message updates to all other existing BCBU Workstation Links.
"BLD",11325,1,22,0)
 
"BLD",11325,1,23,0)
Solution:
"BLD",11325,1,24,0)
--------
"BLD",11325,1,25,0)
The two Workstation Initialize options above were modified to screen out any
"BLD",11325,1,26,0)
Workstation Link not selected from the HL7 update if the user selects one or
"BLD",11325,1,27,0)
more specific Workstation Link(s) to update when executing these options. In
"BLD",11325,1,28,0)
other words, only the selected Workstation Link(s) will be initialized.
"BLD",11325,1,29,0)
  
"BLD",11325,1,30,0)
Technical Resolution:
"BLD",11325,1,31,0)
---------------------
"BLD",11325,1,32,0)
The routines ALPBIN, ALPBIND and ALPBINP were modified to keep track and 
"BLD",11325,1,33,0)
screen out Workstation Link(s) not selected for the HL7 initialization
"BLD",11325,1,34,0)
update.
"BLD",11325,4,0)
^9.64PA^^
"BLD",11325,6.3)
3
"BLD",11325,"ABPKG")
n
"BLD",11325,"KRN",0)
^9.67PA^1.61^23
"BLD",11325,"KRN",.4,0)
.4
"BLD",11325,"KRN",.401,0)
.401
"BLD",11325,"KRN",.402,0)
.402
"BLD",11325,"KRN",.403,0)
.403
"BLD",11325,"KRN",.5,0)
.5
"BLD",11325,"KRN",.84,0)
.84
"BLD",11325,"KRN",1.6,0)
1.6
"BLD",11325,"KRN",1.61,0)
1.61
"BLD",11325,"KRN",1.62,0)
1.62
"BLD",11325,"KRN",3.6,0)
3.6
"BLD",11325,"KRN",3.8,0)
3.8
"BLD",11325,"KRN",9.2,0)
9.2
"BLD",11325,"KRN",9.8,0)
9.8
"BLD",11325,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",11325,"KRN",9.8,"NM",1,0)
ALPBIN^^0^B18840092
"BLD",11325,"KRN",9.8,"NM",2,0)
ALPBIND^^0^B61498803
"BLD",11325,"KRN",9.8,"NM",3,0)
ALPBINP^^0^B100284249
"BLD",11325,"KRN",9.8,"NM","B","ALPBIN",1)

"BLD",11325,"KRN",9.8,"NM","B","ALPBIND",2)

"BLD",11325,"KRN",9.8,"NM","B","ALPBINP",3)

"BLD",11325,"KRN",19,0)
19
"BLD",11325,"KRN",19.1,0)
19.1
"BLD",11325,"KRN",101,0)
101
"BLD",11325,"KRN",409.61,0)
409.61
"BLD",11325,"KRN",771,0)
771
"BLD",11325,"KRN",779.2,0)
779.2
"BLD",11325,"KRN",870,0)
870
"BLD",11325,"KRN",8989.51,0)
8989.51
"BLD",11325,"KRN",8989.52,0)
8989.52
"BLD",11325,"KRN",8994,0)
8994
"BLD",11325,"KRN","B",.4,.4)

"BLD",11325,"KRN","B",.401,.401)

"BLD",11325,"KRN","B",.402,.402)

"BLD",11325,"KRN","B",.403,.403)

"BLD",11325,"KRN","B",.5,.5)

"BLD",11325,"KRN","B",.84,.84)

"BLD",11325,"KRN","B",1.6,1.6)

"BLD",11325,"KRN","B",1.61,1.61)

"BLD",11325,"KRN","B",1.62,1.62)

"BLD",11325,"KRN","B",3.6,3.6)

"BLD",11325,"KRN","B",3.8,3.8)

"BLD",11325,"KRN","B",9.2,9.2)

"BLD",11325,"KRN","B",9.8,9.8)

"BLD",11325,"KRN","B",19,19)

"BLD",11325,"KRN","B",19.1,19.1)

"BLD",11325,"KRN","B",101,101)

"BLD",11325,"KRN","B",409.61,409.61)

"BLD",11325,"KRN","B",771,771)

"BLD",11325,"KRN","B",779.2,779.2)

"BLD",11325,"KRN","B",870,870)

"BLD",11325,"KRN","B",8989.51,8989.51)

"BLD",11325,"KRN","B",8989.52,8989.52)

"BLD",11325,"KRN","B",8994,8994)

"BLD",11325,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",11325,"QUES",0)
^9.62^^
"BLD",11325,"REQB",0)
^9.611^2^2
"BLD",11325,"REQB",1,0)
PSB*3.0*87^2
"BLD",11325,"REQB",2,0)
PSB*3.0*105^2
"BLD",11325,"REQB","B","PSB*3.0*105",2)

"BLD",11325,"REQB","B","PSB*3.0*87",1)

"MBREQ")
0
"PKG",550,-1)
1^1
"PKG",550,0)
BAR CODE MED ADMIN^PSB^BAR CODE MEDICATION ADMINISTRATION
"PKG",550,22,0)
^9.49I^1^1
"PKG",550,22,1,0)
3.0^3040224^3040311^66481
"PKG",550,22,1,"PAH",1,0)
115^3181214^100877
"PKG",550,22,1,"PAH",1,1,0)
^^34^34^3181214
"PKG",550,22,1,"PAH",1,1,1,0)
This patch will resolve the following issue.
"PKG",550,22,1,"PAH",1,1,2,0)
 
"PKG",550,22,1,"PAH",1,1,3,0)
INC2794138 - When BCBU init is ran and only one HL7 link is entered it still
"PKG",550,22,1,"PAH",1,1,4,0)
             updates numerous links
"PKG",550,22,1,"PAH",1,1,5,0)
 
"PKG",550,22,1,"PAH",1,1,6,0)
Defect Tracking System Ticket(s) & Overview:
"PKG",550,22,1,"PAH",1,1,7,0)
--------------------------------------------
"PKG",550,22,1,"PAH",1,1,8,0)
INC2794138 - When BCBU init is ran and only one HL7 link is entered it still
"PKG",550,22,1,"PAH",1,1,9,0)
             updates numerous links
"PKG",550,22,1,"PAH",1,1,10,0)
          
"PKG",550,22,1,"PAH",1,1,11,0)
Problem: 
"PKG",550,22,1,"PAH",1,1,12,0)
--------
"PKG",550,22,1,"PAH",1,1,13,0)
Captain James A. Lovell Federal Health Care Center reported a problem with
"PKG",550,22,1,"PAH",1,1,14,0)
the BCBU Initialize options below:
"PKG",550,22,1,"PAH",1,1,15,0)
 
"PKG",550,22,1,"PAH",1,1,16,0)
    Default Workstation Initialize [PSB BCBU INIT WRKSTN DFT]
"PKG",550,22,1,"PAH",1,1,17,0)
    Divisional Workstation Initialize [PSB BCBU INIT WRKSTN DIV]
"PKG",550,22,1,"PAH",1,1,18,0)
 
"PKG",550,22,1,"PAH",1,1,19,0)
Whenever these options were executed and one or more Workstation Link were
"PKG",550,22,1,"PAH",1,1,20,0)
selected for the initialization the option still generated and sent HL7
"PKG",550,22,1,"PAH",1,1,21,0)
message updates to all other existing BCBU Workstation Links.
"PKG",550,22,1,"PAH",1,1,22,0)
 
"PKG",550,22,1,"PAH",1,1,23,0)
Solution:
"PKG",550,22,1,"PAH",1,1,24,0)
--------
"PKG",550,22,1,"PAH",1,1,25,0)
The two Workstation Initialize options above were modified to screen out any
"PKG",550,22,1,"PAH",1,1,26,0)
Workstation Link not selected from the HL7 update if the user selects one or
"PKG",550,22,1,"PAH",1,1,27,0)
more specific Workstation Link(s) to update when executing these options. In
"PKG",550,22,1,"PAH",1,1,28,0)
other words, only the selected Workstation Link(s) will be initialized.
"PKG",550,22,1,"PAH",1,1,29,0)
  
"PKG",550,22,1,"PAH",1,1,30,0)
Technical Resolution:
"PKG",550,22,1,"PAH",1,1,31,0)
---------------------
"PKG",550,22,1,"PAH",1,1,32,0)
The routines ALPBIN, ALPBIND and ALPBINP were modified to keep track and 
"PKG",550,22,1,"PAH",1,1,33,0)
screen out Workstation Link(s) not selected for the HL7 initialization
"PKG",550,22,1,"PAH",1,1,34,0)
update.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ALPBIN")
0^1^B18840092
"RTN","ALPBIN",1,0)
ALPBIN ;OIFO-DALLAS/SED/KC/MW  BCMA-BCBU INPT TO HL7 INIT ;07/06/16 7:06am
"RTN","ALPBIN",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,73,87,115**;Mar 2004;Build 3
"RTN","ALPBIN",3,0)
 ;
"RTN","ALPBIN",4,0)
 ; Reference/IA
"RTN","ALPBIN",5,0)
 ; DPT/10035
"RTN","ALPBIN",6,0)
 ; DIC(42/10039
"RTN","ALPBIN",7,0)
 ; DIC(42/2440
"RTN","ALPBIN",8,0)
 ;
"RTN","ALPBIN",9,0)
 ;*87 - Fix VistA Init by DIV option where Clinic orders will check if
"RTN","ALPBIN",10,0)
 ;      they point to DIV requested.
"RTN","ALPBIN",11,0)
 Q
"RTN","ALPBIN",12,0)
OPT ;Entry point for the option
"RTN","ALPBIN",13,0)
 ;Select all or by Division
"RTN","ALPBIN",14,0)
ALL ;Ask if the user want to send to all divisions
"RTN","ALPBIN",15,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,DIR,ALPALL,ALPWKS,ALPDIV,ALPBDVN
"RTN","ALPBIN",16,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","ALPBIN",17,0)
 S DIR("A")="Enter Yes or No"
"RTN","ALPBIN",18,0)
 S DIR("A",1)="Include all Divisions"
"RTN","ALPBIN",19,0)
 D ^DIR
"RTN","ALPBIN",20,0)
 I $D(DIRUT) G EXIT
"RTN","ALPBIN",21,0)
 S ALPALL=+Y
"RTN","ALPBIN",22,0)
 ;I +ALPALL>0 D QUE
"RTN","ALPBIN",23,0)
 I ALPALL'>0 D DIV
"RTN","ALPBIN",24,0)
 ;I +ALPALL'>0!(+ALPWKS>0) D QUE
"RTN","ALPBIN",25,0)
 D QUE
"RTN","ALPBIN",26,0)
 ;
"RTN","ALPBIN",27,0)
EXIT ;
"RTN","ALPBIN",28,0)
 K ALPB,ALPBI,ALPBJ,ALPCN,ALDFN,ALPMDT,ALPML,ALPORDR,MSCTR,MSH,ORC
"RTN","ALPBIN",29,0)
 K PID,PV1,ALPHLL,ALPALL,DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT,ALPDIV
"RTN","ALPBIN",30,0)
 K ALPTST,ALPSTOP,ALPOK,ZTSAVE,ALPCNI,ALPCNT,ALP,ALPDVN,ALPHLINI
"RTN","ALPBIN",31,0)
 Q
"RTN","ALPBIN",32,0)
 ;
"RTN","ALPBIN",33,0)
DIV K ALPHLL,DIR,ALPDIV,DTOUT,DUOUT,DIRUT,DIROUT,ALPHLINI
"RTN","ALPBIN",34,0)
 S DIR(0)="PO^40.8:EMZ"
"RTN","ALPBIN",35,0)
 S DIR("A",1)="Enter the division that you would like to"
"RTN","ALPBIN",36,0)
 S DIR("A",2)="initialize"
"RTN","ALPBIN",37,0)
 D ^DIR
"RTN","ALPBIN",38,0)
 I $D(DIRUT)!(+Y'>0) S ALPDIV="" Q
"RTN","ALPBIN",39,0)
 S ALPDIV=$P(Y,U,1),ALPDVN=$P(Y,U,2)
"RTN","ALPBIN",40,0)
 D GET^ALPBPARM(.ALPHLL,ALPDIV)
"RTN","ALPBIN",41,0)
 I '$D(ALPHLL) W !,"No workstations defined with "_ALPDVN G DIV
"RTN","ALPBIN",42,0)
ALLWKS ;If no then set allow the user to select the workstation
"RTN","ALPBIN",43,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","ALPBIN",44,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","ALPBIN",45,0)
 S DIR("A")="Enter Yes or No"
"RTN","ALPBIN",46,0)
 S DIR("A",1)="Include all workstations for the "_ALPDVN_" Division"
"RTN","ALPBIN",47,0)
 D ^DIR
"RTN","ALPBIN",48,0)
 I $D(DIRUT) G DIV
"RTN","ALPBIN",49,0)
 S ALPWKS=+Y
"RTN","ALPBIN",50,0)
 I +ALPWKS>0 Q
"RTN","ALPBIN",51,0)
 ;
"RTN","ALPBIN",52,0)
WRKSTN ;Now select which workstations for the division to be initialized
"RTN","ALPBIN",53,0)
 K ALPSCRN,ALPBANS
"RTN","ALPBIN",54,0)
 ;Set up screen
"RTN","ALPBIN",55,0)
 S ALP=0 F  S ALP=$O(ALPHLL("LINKS",ALP))  Q:+ALP'>0  D
"RTN","ALPBIN",56,0)
 . S ALPSCRN($P(ALPHLL("LINKS",ALP),U,2),ALP)=ALPHLL("LINKS",ALP)
"RTN","ALPBIN",57,0)
 K ALPHLL
"RTN","ALPBIN",58,0)
 F  D LP Q:$D(DIRUT)
"RTN","ALPBIN",59,0)
 ;I  $D(DIRUT)!$D(ALPHLL) W !!,"No Selected Workstations" G ALLWKS
"RTN","ALPBIN",60,0)
 I '$D(ALPBANS)!$D(ALPHLL) W !!,"No Selected Workstations" G ALLWKS
"RTN","ALPBIN",61,0)
 Q:'$D(ALPBANS)
"RTN","ALPBIN",62,0)
 S ALP="",ALPCNT=1
"RTN","ALPBIN",63,0)
 F  S ALP=$O(ALPBANS(ALP)) Q:ALP=""  D
"RTN","ALPBIN",64,0)
 . S ALPHLL("LINKS",ALPCNT)=ALPSCRN(ALP,$O(ALPSCRN(ALP,0)))
"RTN","ALPBIN",65,0)
 . S ALPHLINI(ALPHLL("LINKS",ALPCNT))=""
"RTN","ALPBIN",66,0)
 . S ALPCNT=ALPCNT+1
"RTN","ALPBIN",67,0)
 K ALPSCRN,ALPBANS
"RTN","ALPBIN",68,0)
 Q
"RTN","ALPBIN",69,0)
 ;
"RTN","ALPBIN",70,0)
LP ;Multiple entries
"RTN","ALPBIN",71,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ALPBIN",72,0)
 S DIR(0)="PO^870:EMZ",DIR("A")="Select WorkStation Link "
"RTN","ALPBIN",73,0)
 S DIR("?")="Answer with WorkStation Link to update "
"RTN","ALPBIN",74,0)
 S DIR("S")="I $D(ALPSCRN($P(^HLCS(870,+Y,0),U,1)))"
"RTN","ALPBIN",75,0)
 D ^DIR
"RTN","ALPBIN",76,0)
 Q:$D(DIRUT)
"RTN","ALPBIN",77,0)
 S ALPBANS($P(Y,U,2),+Y)=""
"RTN","ALPBIN",78,0)
 W #,!!,"Selected Workstations",!!
"RTN","ALPBIN",79,0)
 S ALPB=""
"RTN","ALPBIN",80,0)
 F ALP=1:1 S ALPB=$O(ALPBANS(ALPB)) Q:ALPB=""  D
"RTN","ALPBIN",81,0)
 .W ?$S(ALP#2:1,1:40),ALPB
"RTN","ALPBIN",82,0)
 .W:ALP#2'>0 !
"RTN","ALPBIN",83,0)
 Q
"RTN","ALPBIN",84,0)
 ;
"RTN","ALPBIN",85,0)
QUE ;Que the job
"RTN","ALPBIN",86,0)
 S ZTRTN="EN^ALPBIN"
"RTN","ALPBIN",87,0)
 S ZTDESC="PSB - Initialize the Contingency Workstation"
"RTN","ALPBIN",88,0)
 S ZTIO="",ZTSAVE("ALPWKS")="",ZTSAVE("ALPDIV")=""
"RTN","ALPBIN",89,0)
 I $D(ALPHLL) S ZTSAVE("ALPHLL(")=""
"RTN","ALPBIN",90,0)
 I $D(ALPHLINI) S ZTSAVE("ALPHLINI(")=""
"RTN","ALPBIN",91,0)
 D ^%ZTLOAD
"RTN","ALPBIN",92,0)
 W:$D(ZTSK) !,ZTSK
"RTN","ALPBIN",93,0)
 K ZTIO,ZTDESC,ZTRTN,ZTSK
"RTN","ALPBIN",94,0)
 Q
"RTN","ALPBIN",95,0)
EN ;Loop through the inpatient list.
"RTN","ALPBIN",96,0)
 S ALPDTS=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ALPBIN",97,0)
 I +$G(ALPDIV)'>0 S ALPDIV=0
"RTN","ALPBIN",98,0)
 S ALPSTOP=0,ALPOK=1
"RTN","ALPBIN",99,0)
 N ALPDIV0 S ALPDIV0=ALPDIV                  ;save Div selected    *87
"RTN","ALPBIN",100,0)
 S ALPCN=""
"RTN","ALPBIN",101,0)
 F  S ALPCN=$O(^DPT("CN",ALPCN)) Q:ALPCN=""!(ALPSTOP)  D
"RTN","ALPBIN",102,0)
 . ;DIVISION SCREEN HERE
"RTN","ALPBIN",103,0)
 . S ALPCNI=$O(^DIC(42,"B",ALPCN,0))
"RTN","ALPBIN",104,0)
 . Q:+ALPCNI'>0  ;Quit if I can't decipher the Ward Location
"RTN","ALPBIN",105,0)
 . S ALPTST=$P($G(^DIC(42,ALPCNI,0)),U,11)
"RTN","ALPBIN",106,0)
 . I +ALPDIV&(ALPDIV'=ALPTST) Q
"RTN","ALPBIN",107,0)
 . S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIN",108,0)
 . Q:ALPSTOP
"RTN","ALPBIN",109,0)
 . S ALDFN=0
"RTN","ALPBIN",110,0)
 . F  S ALDFN=$O(^DPT("CN",ALPCN,ALDFN)) Q:+ALDFN'>0!(ALPSTOP)  D PAT^ALPBIND(ALPDIV0)
"RTN","ALPBIN",111,0)
 ;
"RTN","ALPBIN",112,0)
 N ALPNOWCL S ALPNOWCL=$$NOW^XLFDT()
"RTN","ALPBIN",113,0)
 D UDCLIN^ALPBIND(ALPNOWCL,ALPDIV0)          ;pass Div selected  *87
"RTN","ALPBIN",114,0)
 D IVCLIN^ALPBIND(ALPNOWCL,ALPDIV0)          ;pass Div selected  *87
"RTN","ALPBIN",115,0)
 ;
"RTN","ALPBIN",116,0)
 K XQA,XQAMSG
"RTN","ALPBIN",117,0)
 S ALPDTE=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ALPBIN",118,0)
 S XQA(DUZ)=""
"RTN","ALPBIN",119,0)
 S XQAMSG="BCBU WORKSTATION INIT Started "_ALPDTS_" and finished "_ALPDTE_". "
"RTN","ALPBIN",120,0)
 ;_ALPBK_" entries sent."
"RTN","ALPBIN",121,0)
 D SETUP^XQALERT
"RTN","ALPBIN",122,0)
 K ALPDTS,ALPDTE,ALPCNT
"RTN","ALPBIN",123,0)
 D EXIT
"RTN","ALPBIN",124,0)
 Q
"RTN","ALPBIND")
0^2^B61498803
"RTN","ALPBIND",1,0)
ALPBIND ;OIFO-DALLAS/SED/KC/MW  BCMA-BCBU INPT TO HL7 INIT ;07/06/16 7:06am
"RTN","ALPBIND",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,73,87,115**;Mar 2004;Build 3
"RTN","ALPBIND",3,0)
 ;
"RTN","ALPBIND",4,0)
 ; Reference/IA
"RTN","ALPBIND",5,0)
 ; DPT/10035
"RTN","ALPBIND",6,0)
 ; DIC(42/10039
"RTN","ALPBIND",7,0)
 ; DIC(42/2440
"RTN","ALPBIND",8,0)
 ; EN^PSJBCBU/3876
"RTN","ALPBIND",9,0)
 ;
"RTN","ALPBIND",10,0)
 ;*87 - Fix VistA Init by DIV option where Clinic orders will check if
"RTN","ALPBIND",11,0)
 ;      they point to DIV requested.
"RTN","ALPBIND",12,0)
 Q
"RTN","ALPBIND",13,0)
OPT ;Entry point for the option
"RTN","ALPBIND",14,0)
 ;Select Workstations assigned to Default.
"RTN","ALPBIND",15,0)
DFT K ALPHLL,DIR,ALPDIV,DTOUT,DUOUT,DIRUT,DIROUT,ALPHLINI
"RTN","ALPBIND",16,0)
 D GET^ALPBPARM(.ALPHLL,"")
"RTN","ALPBIND",17,0)
 I '$D(ALPHLL) W !,"No workstations defined for default " G EXIT
"RTN","ALPBIND",18,0)
 D ALLWKS
"RTN","ALPBIND",19,0)
 ;D:'$D(DIRUT) QUE
"RTN","ALPBIND",20,0)
 D QUE
"RTN","ALPBIND",21,0)
 G EXIT
"RTN","ALPBIND",22,0)
 ;
"RTN","ALPBIND",23,0)
ALLWKS ;If no then set allow the user to select the workstation
"RTN","ALPBIND",24,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","ALPBIND",25,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","ALPBIND",26,0)
 S DIR("A")="Enter Yes or No"
"RTN","ALPBIND",27,0)
 S DIR("A",1)="Include all workstations"
"RTN","ALPBIND",28,0)
 D ^DIR
"RTN","ALPBIND",29,0)
 I $D(DIRUT) Q
"RTN","ALPBIND",30,0)
 S ALPWKS=+Y
"RTN","ALPBIND",31,0)
 I +ALPWKS>0 Q
"RTN","ALPBIND",32,0)
 ;
"RTN","ALPBIND",33,0)
WRKSTN ;Now select which workstations to be initialized
"RTN","ALPBIND",34,0)
 K ALPSCRN,ALPBANS
"RTN","ALPBIND",35,0)
 ;Set up screen
"RTN","ALPBIND",36,0)
 S ALP=0 F  S ALP=$O(ALPHLL("LINKS",ALP))  Q:+ALP'>0  D
"RTN","ALPBIND",37,0)
 . S ALPSCRN($P(ALPHLL("LINKS",ALP),U,2),ALP)=ALPHLL("LINKS",ALP)
"RTN","ALPBIND",38,0)
 K ALPHLL
"RTN","ALPBIND",39,0)
 F  D LP Q:$D(DIRUT)
"RTN","ALPBIND",40,0)
 ;I $D(DIRUT)&($D(ALPHLL)) W !!,"No Selected Workstations" G ALLWKS
"RTN","ALPBIND",41,0)
 I '$D(ALPBANS)!$D(ALPHLL) W !!,"No Selected Workstations" G ALLWKS
"RTN","ALPBIND",42,0)
 Q:'$D(ALPBANS)
"RTN","ALPBIND",43,0)
 S ALP="",ALPCNT=1
"RTN","ALPBIND",44,0)
 F  S ALP=$O(ALPBANS(ALP)) Q:ALP=""  D
"RTN","ALPBIND",45,0)
 . S ALPHLL("LINKS",ALPCNT)=ALPSCRN(ALP,$O(ALPSCRN(ALP,0)))
"RTN","ALPBIND",46,0)
 . S ALPHLINI(ALPHLL("LINKS",ALPCNT))=""
"RTN","ALPBIND",47,0)
 . S ALPCNT=ALPCNT+1
"RTN","ALPBIND",48,0)
 K ALPSCRN,ALPBANS
"RTN","ALPBIND",49,0)
 Q
"RTN","ALPBIND",50,0)
 ;
"RTN","ALPBIND",51,0)
LP ;Multiple entries
"RTN","ALPBIND",52,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ALPBIND",53,0)
 S DIR(0)="PO^870:EMZ",DIR("A")="Select WorkStation Link "
"RTN","ALPBIND",54,0)
 S DIR("?")="Answer with WorkStation Link to update "
"RTN","ALPBIND",55,0)
 S DIR("S")="I $D(ALPSCRN($P(^HLCS(870,+Y,0),U,1)))"
"RTN","ALPBIND",56,0)
 D ^DIR
"RTN","ALPBIND",57,0)
 Q:$D(DIRUT)
"RTN","ALPBIND",58,0)
 S ALPBANS($P(Y,U,2),+Y)=""
"RTN","ALPBIND",59,0)
 W #,!!,"Selected Workstations",!!
"RTN","ALPBIND",60,0)
 S ALPB=""
"RTN","ALPBIND",61,0)
 F ALP=1:1 S ALPB=$O(ALPBANS(ALPB)) Q:ALPB=""  D
"RTN","ALPBIND",62,0)
 .W ?$S(ALP#2:1,1:40),ALPB
"RTN","ALPBIND",63,0)
 .W:ALP#2'>0 !
"RTN","ALPBIND",64,0)
 Q
"RTN","ALPBIND",65,0)
 ;
"RTN","ALPBIND",66,0)
QUE ;Que the job
"RTN","ALPBIND",67,0)
 S ZTRTN="EN^ALPBIND"
"RTN","ALPBIND",68,0)
 S ZTDESC="PSB - Initialize Default Contingency Workstation"
"RTN","ALPBIND",69,0)
 S ZTIO="",ZTSAVE("ALPWKS")=""
"RTN","ALPBIND",70,0)
 I $D(ALPHLL) S ZTSAVE("ALPHLL(")=""
"RTN","ALPBIND",71,0)
 I $D(ALPHLINI) S ZTSAVE("ALPHLINI(")=""
"RTN","ALPBIND",72,0)
 D ^%ZTLOAD
"RTN","ALPBIND",73,0)
 W:$D(ZTSK) !,ZTSK
"RTN","ALPBIND",74,0)
 K ZTIO,ZTDESC,ZTRTN,ZTSK
"RTN","ALPBIND",75,0)
 Q
"RTN","ALPBIND",76,0)
EN ;Loop through the inpatient list.
"RTN","ALPBIND",77,0)
 Q:'$D(ALPHLL)
"RTN","ALPBIND",78,0)
 S ALPDTS=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ALPBIND",79,0)
 K ALPSCR
"RTN","ALPBIND",80,0)
 S ALPSTOP=0,ALPOK=1
"RTN","ALPBIND",81,0)
 S ALPCN=""
"RTN","ALPBIND",82,0)
 F  S ALPCN=$O(^DPT("CN",ALPCN)) Q:ALPCN=""!(ALPSTOP)  D  ;Ward Location(CN)
"RTN","ALPBIND",83,0)
 . ;DIVISION SCREEN HERE
"RTN","ALPBIND",84,0)
 . S ALPCNI=$O(^DIC(42,"B",ALPCN,0))  ;Ward Name(B)
"RTN","ALPBIND",85,0)
 . Q:+ALPCNI'>0  ;Quit if I can't decipher the Ward Location
"RTN","ALPBIND",86,0)
 . S ALPDIV=$P($G(^DIC(42,ALPCNI,0)),U,11)
"RTN","ALPBIND",87,0)
 . ;Check to see is the Division has Machines defined to it.
"RTN","ALPBIND",88,0)
 . ;if it does then it is not to go to default
"RTN","ALPBIND",89,0)
 . K ALPTEST
"RTN","ALPBIND",90,0)
 . D GET^ALPBPARM(.ALPTEST,ALPDIV,1)
"RTN","ALPBIND",91,0)
 . Q:$D(ALPTEST)
"RTN","ALPBIND",92,0)
 . S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIND",93,0)
 . S ALDFN=0
"RTN","ALPBIND",94,0)
 . F  S ALDFN=$O(^DPT("CN",ALPCN,ALDFN)) Q:+ALDFN'>0!(ALPSTOP)  D PAT("")   ;null selected Div param *87
"RTN","ALPBIND",95,0)
 ;
"RTN","ALPBIND",96,0)
 N ALPNOWCL S ALPNOWCL=$$NOW^XLFDT()
"RTN","ALPBIND",97,0)
 D UDCLIN(ALPNOWCL,"")                      ;null selected Div par *87
"RTN","ALPBIND",98,0)
 D IVCLIN(ALPNOWCL,"")                      ;null selected Div par *87
"RTN","ALPBIND",99,0)
 ;
"RTN","ALPBIND",100,0)
 K XQA,XQAMSG
"RTN","ALPBIND",101,0)
 S ALPDTE=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ALPBIND",102,0)
 S XQA(DUZ)=""
"RTN","ALPBIND",103,0)
 S XQAMSG="BCBU WORKSTATION INIT Started "_ALPDTS_" and finished "_ALPDTE_". "
"RTN","ALPBIND",104,0)
 ;_ALPBK_" entries sent."
"RTN","ALPBIND",105,0)
 D SETUP^XQALERT
"RTN","ALPBIND",106,0)
EXIT ;
"RTN","ALPBIND",107,0)
 K ALPDTS,ALPDTE,ALPCNT
"RTN","ALPBIND",108,0)
 K ALPB,ALPBI,ALPBJ,ALPCN,ALDFN,ALPMDT,ALPML,ALPORDR,MSCTR,MSH,ORC
"RTN","ALPBIND",109,0)
 K PID,PV1,ALPHLL,ALPALL,DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT,ALPDIV,ALPHLINI
"RTN","ALPBIND",110,0)
 K ALPTST,ALPSTOP,ALPOK,ZTSAVE,ALPCNI,ALPCNT,ALP,ALPDVN,ALPSLT,ALPWKS
"RTN","ALPBIND",111,0)
 K PID,PV1,^TMP("PSJ",$J),^TMP("PSJBU",$J)
"RTN","ALPBIND",112,0)
 ;
"RTN","ALPBIND",113,0)
 Q
"RTN","ALPBIND",114,0)
MLOG ;Need to loop though the Med log file to get all med logs
"RTN","ALPBIND",115,0)
 ;associated with the order
"RTN","ALPBIND",116,0)
 Q:'$D(^PSB(53.79,"AORDX",ALDFN,ALPORDR))
"RTN","ALPBIND",117,0)
 S X=+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP MEDLG",1,"Q")
"RTN","ALPBIND",118,0)
 S X=$S(X>0:"T-"_X,1:"T-30")
"RTN","ALPBIND",119,0)
 D ^%DT
"RTN","ALPBIND",120,0)
 Q:+Y'>0  ;Cannot get a valid date
"RTN","ALPBIND",121,0)
 S ALPMDT=Y
"RTN","ALPBIND",122,0)
 F  S ALPMDT=$O(^PSB(53.79,"AORDX",ALDFN,ALPORDR,ALPMDT)) Q:+ALPMDT'>0  D
"RTN","ALPBIND",123,0)
 . S ALPML=0
"RTN","ALPBIND",124,0)
 . F  S ALPML=$O(^PSB(53.79,"AORDX",ALDFN,ALPORDR,ALPMDT,ALPML)) Q:+ALPML'>0  D
"RTN","ALPBIND",125,0)
 . . Q:+$P($G(^PSB(53.79,ALPML,0)),U,1)'>0  ; Bad Med-log
"RTN","ALPBIND",126,0)
 . . S ALPRSLT=$$MEDL^ALPBINP(ALPML)
"RTN","ALPBIND",127,0)
 Q
"RTN","ALPBIND",128,0)
MESS ;BUILD AND SEND MESSAGE
"RTN","ALPBIND",129,0)
 K ALPB
"RTN","ALPBIND",130,0)
 D EN^PSJBCBU(ALDFN,ALPORDR,.ALPB)
"RTN","ALPBIND",131,0)
 S ALPBI=0
"RTN","ALPBIND",132,0)
 F  S ALPBI=$O(ALPB(ALPBI)) Q:ALPBI'>0  D
"RTN","ALPBIND",133,0)
 . I $E(ALPB(ALPBI),1,3)="MSH" S MSH=ALPBI
"RTN","ALPBIND",134,0)
 . I $E(ALPB(ALPBI),1,3)="PID" S PID=ALPBI
"RTN","ALPBIND",135,0)
 . I $E(ALPB(ALPBI),1,3)="PV1" S PV1=ALPBI
"RTN","ALPBIND",136,0)
 . I $E(ALPB(ALPBI),1,3)="ORC" S ORC=ALPBI
"RTN","ALPBIND",137,0)
 I +MSH'>0 Q   ;MISSING MSH SEGMENT BAD MESSAGE
"RTN","ALPBIND",138,0)
 S MSCTR=$E(ALPB(MSH),4,8),ALPORD=ALPORDR
"RTN","ALPBIND",139,0)
 S X=$$INI^ALPBINP()
"RTN","ALPBIND",140,0)
 Q
"RTN","ALPBIND",141,0)
SNDPT ;Send a Single Patient
"RTN","ALPBIND",142,0)
 K DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ALPBIND",143,0)
 S DIR(0)="PO^2:EM",DIR("A")="Select Patient "
"RTN","ALPBIND",144,0)
 D ^DIR
"RTN","ALPBIND",145,0)
 Q:$D(DIRUT)
"RTN","ALPBIND",146,0)
 Q:+Y'>0
"RTN","ALPBIND",147,0)
 S ALDFN=+Y
"RTN","ALPBIND",148,0)
 W !!,"Please Hold On While I send the orders",!!
"RTN","ALPBIND",149,0)
 D PAT("")
"RTN","ALPBIND",150,0)
 Q
"RTN","ALPBIND",151,0)
 ;
"RTN","ALPBIND",152,0)
PAT(ALPDIV2) ;Process and send patients  ;add DIV par specl for DIV init *87
"RTN","ALPBIND",153,0)
 ;New Div variable, reused in some downstream function calls    ;*87
"RTN","ALPBIND",154,0)
 N ALPDIV
"RTN","ALPBIND",155,0)
 K ^TMP("PSJBU",$J)
"RTN","ALPBIND",156,0)
 S X=+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP IPH",1,"Q")
"RTN","ALPBIND",157,0)
 S X=$S(X>0:"T-"_X,1:"T-15")
"RTN","ALPBIND",158,0)
 D ^%DT
"RTN","ALPBIND",159,0)
 Q:+Y'>0  ;Cannot get a valid date
"RTN","ALPBIND",160,0)
 D EN2^PSJBCBU(ALDFN,Y)
"RTN","ALPBIND",161,0)
 Q:'$D(^TMP("PSJBU",$J))  ; NO DATA
"RTN","ALPBIND",162,0)
 S ALPBJ=0
"RTN","ALPBIND",163,0)
 F  S ALPBJ=$O(^TMP("PSJBU",$J,ALPBJ)) Q:+ALPBJ'>0  D
"RTN","ALPBIND",164,0)
 . Q:'$D(^TMP("PSJBU",$J,ALPBJ,0))
"RTN","ALPBIND",165,0)
 . S ALPORDR=$P(^TMP("PSJBU",$J,ALPBJ,0),U,3)
"RTN","ALPBIND",166,0)
 . Q:+ALPORDR'>0
"RTN","ALPBIND",167,0)
 . D MESS
"RTN","ALPBIND",168,0)
 . Q:ALPORDR["P"  ;If not pending do Med-Log
"RTN","ALPBIND",169,0)
 . D MLOG
"RTN","ALPBIND",170,0)
 S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIND",171,0)
 Q
"RTN","ALPBIND",172,0)
 ;
"RTN","ALPBIND",173,0)
UDCLIN(ALPNOW,ALPDIV2) ; Unit Dose Clinic Orders                     ;*87
"RTN","ALPBIND",174,0)
 N ALPSEND,ALPCSTPD,ALPCN,ALPDFNAR S ALPCSTPD=ALPNOW
"RTN","ALPBIND",175,0)
 F  S ALPCSTPD=$O(^PS(55,"AUDC",ALPCSTPD)) Q:ALPCSTPD=""  S ALPCN="" F  S ALPCN=$O(^PS(55,"AUDC",ALPCSTPD,ALPCN)) Q:ALPCN=""  D
"RTN","ALPBIND",176,0)
 . ;DIVISION SCREEN
"RTN","ALPBIND",177,0)
 . Q:+ALPCN'>0                                               ;*87
"RTN","ALPBIND",178,0)
 . S ALPSEND=0                                               ;*87
"RTN","ALPBIND",179,0)
 . S ALPDIV=$P($G(^SC(ALPCN,0)),"^",15)                      ;*87
"RTN","ALPBIND",180,0)
 . ;Screen If DIV Init, If Clinic is in DIV send it.  If ALPDIV2=0, ALL DIV was selected in ^ALPBIN  ;*87
"RTN","ALPBIND",181,0)
 . S ALPSEND=$S(ALPDIV2&(ALPDIV2=ALPDIV):1,ALPDIV2=0:1,1:0)  ;*87
"RTN","ALPBIND",182,0)
 . ;Check for DFT                                            ;*87
"RTN","ALPBIND",183,0)
 . K ALPTEST
"RTN","ALPBIND",184,0)
 . D GET^ALPBPARM(.ALPTEST,ALPDIV,1)
"RTN","ALPBIND",185,0)
 . ;If Links defined and Init was not a Divisional init then Q  ;*87
"RTN","ALPBIND",186,0)
 . Q:$D(ALPTEST)&($G(ALPSEND)=0)                                ;*87
"RTN","ALPBIND",187,0)
 . S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIND",188,0)
 . S ALDFN=0
"RTN","ALPBIND",189,0)
 . F  S ALDFN=$O(^PS(55,"AUDC",ALPCSTPD,ALPCN,ALDFN)) Q:'ALDFN  S ALPDFNAR(ALDFN)=""
"RTN","ALPBIND",190,0)
 S ALDFN=0
"RTN","ALPBIND",191,0)
 F  S ALDFN=$O(ALPDFNAR(ALDFN)) Q:'ALDFN!$G(ALPSTOP)  D PAT(ALPDIV2)    ;pass Div par *87
"RTN","ALPBIND",192,0)
 Q
"RTN","ALPBIND",193,0)
 ;
"RTN","ALPBIND",194,0)
IVCLIN(ALPNOW,ALPDIV2) ; IV Clinic Orders
"RTN","ALPBIND",195,0)
 N ALPSEND,ALPCSTPD,ALPCN,ALPDFNAR S ALPCSTPD=ALPNOW
"RTN","ALPBIND",196,0)
 F  S ALPCSTPD=$O(^PS(55,"AIVC",ALPCSTPD)) Q:ALPCSTPD=""  S ALPCN="" F  S ALPCN=$O(^PS(55,"AIVC",ALPCSTPD,ALPCN)) Q:ALPCN=""  D
"RTN","ALPBIND",197,0)
 . ;DIVISION SCREEN
"RTN","ALPBIND",198,0)
 . Q:+ALPCN'>0                                               ;*87
"RTN","ALPBIND",199,0)
 . S ALPSEND=0                                               ;*87
"RTN","ALPBIND",200,0)
 . S ALPDIV=$P($G(^SC(ALPCN,0)),"^",15)                      ;*87
"RTN","ALPBIND",201,0)
 . ;Screen If DIV Init, If Clinic is in DIV send it.  If ALPDIV2=0, ALL DIV was selected in ^ALPBIN  ;*87
"RTN","ALPBIND",202,0)
 . S ALPSEND=$S(ALPDIV2&(ALPDIV2=ALPDIV):1,ALPDIV2=0:1,1:0)  ;*87
"RTN","ALPBIND",203,0)
 . ;Check for DFT                                            ;*87
"RTN","ALPBIND",204,0)
 . K ALPTEST
"RTN","ALPBIND",205,0)
 . D GET^ALPBPARM(.ALPTEST,ALPDIV,1)
"RTN","ALPBIND",206,0)
 . ;If Links defined and Init was not a Divisional init then Q  ;*87
"RTN","ALPBIND",207,0)
 . Q:$D(ALPTEST)&($G(ALPSEND)=0)                                ;*87
"RTN","ALPBIND",208,0)
 . S ALPSTOP=$$S^%ZTLOAD()
"RTN","ALPBIND",209,0)
 . S ALDFN=0
"RTN","ALPBIND",210,0)
 . F  S ALDFN=$O(^PS(55,"AIVC",ALPCSTPD,ALPCN,ALDFN)) Q:'ALDFN  S ALPDFNAR(ALDFN)=""
"RTN","ALPBIND",211,0)
 S ALDFN=0
"RTN","ALPBIND",212,0)
 F  S ALDFN=$O(ALPDFNAR(ALDFN)) Q:'ALDFN!$G(ALPSTOP)  D PAT(ALPDIV2)    ;pass Div par *87
"RTN","ALPBIND",213,0)
 Q
"RTN","ALPBINP")
0^3^B100284249
"RTN","ALPBINP",1,0)
ALPBINP ;OIFO-DALLAS/SED/KC/MW  BCMA - BCBU INPT TO HL7 ;07/06/16 7:06am
"RTN","ALPBINP",2,0)
 ;;3.0;BAR CODE MED ADMIN;**8,37,73,87,102,105,115**;May 2007;Build 3
"RTN","ALPBINP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ALPBINP",4,0)
 ;This routine will intercept the HL7 message that it sent from Pharmacy
"RTN","ALPBINP",5,0)
 ;to CPRS to update order information. The message is then parsed and 
"RTN","ALPBINP",6,0)
 ;repackage so it can be sent to the BCBU workstation.
"RTN","ALPBINP",7,0)
 ;
"RTN","ALPBINP",8,0)
 ; Reference/IA
"RTN","ALPBINP",9,0)
 ; EN^PSJBCBU/3876
"RTN","ALPBINP",10,0)
 ; $$EN^VAFHLPID/263
"RTN","ALPBINP",11,0)
 ; $$EN^VAFHAPV1/4512
"RTN","ALPBINP",12,0)
 ; EN1^GMRADPT/10099
"RTN","ALPBINP",13,0)
 ; EN^PSJBCMA1/2829
"RTN","ALPBINP",14,0)
 ;
"RTN","ALPBINP",15,0)
 ;*87 - add ability to send two HL7 msgs for a Remove/Give scenario.  
"RTN","ALPBINP",16,0)
 ;      Sends the associated Give first then the Remove Medlog trans.
"RTN","ALPBINP",17,0)
 ;
"RTN","ALPBINP",18,0)
IPH(MSG) ;CAPTURE MESSAGE ARRAY FROM PHARMACY
"RTN","ALPBINP",19,0)
 N VAIN,ALPMSG
"RTN","ALPBINP",20,0)
 S ALPMSG=$S($L($G(MSG)):MSG,1:"MSG")
"RTN","ALPBINP",21,0)
 I '$O(@ALPMSG@(0)) Q "0^MSG^Missing Message Array"
"RTN","ALPBINP",22,0)
 S MSH=0
"RTN","ALPBINP",23,0)
 F  S MSH=$O(@ALPMSG@(MSH)) Q:MSH'>0  Q:$E(@ALPMSG@(MSH),1,3)="MSH"
"RTN","ALPBINP",24,0)
 I +MSH'>0 Q "0^MSG^Missing MSH Segment Bad Message"
"RTN","ALPBINP",25,0)
 S MSFS=$E(@ALPMSG@(MSH),4,4)
"RTN","ALPBINP",26,0)
 S MSCS=$E(@ALPMSG@(MSH),5,5)
"RTN","ALPBINP",27,0)
 S MSCH=$E(@ALPMSG@(MSH),6,6)
"RTN","ALPBINP",28,0)
 S MSCTR=$E(@ALPMSG@(MSH),4,8)
"RTN","ALPBINP",29,0)
 ;The message is confirmed to be a Pharmacy message
"RTN","ALPBINP",30,0)
 I $P(@ALPMSG@(MSH),MSFS,3)'="PHARMACY" Q "1^^Not a Pharmacy Message"
"RTN","ALPBINP",31,0)
 ;A PID and PV1 segment is required for this message
"RTN","ALPBINP",32,0)
 S PID=0
"RTN","ALPBINP",33,0)
 F  S PID=$O(@ALPMSG@(PID)) Q:PID'>0  Q:$E(@ALPMSG@(PID),1,3)="PID"
"RTN","ALPBINP",34,0)
 I +PID'>0 Q "0^MSG^Missing PID Segment Bad Message"
"RTN","ALPBINP",35,0)
 ;Also the patient must have an inpatient status
"RTN","ALPBINP",36,0)
 S PV1=0
"RTN","ALPBINP",37,0)
 F  S PV1=$O(@ALPMSG@(PV1)) Q:PV1'>0  Q:$E(@ALPMSG@(PV1),1,3)="PV1"
"RTN","ALPBINP",38,0)
 I +PV1'>0 Q "0^MSG^Missing PV1 Segment Bad Message"
"RTN","ALPBINP",39,0)
 I $P(@ALPMSG@(PV1),MSFS,3)'="I" Q "1^^Not an Inpatient Pharmacy Message"
"RTN","ALPBINP",40,0)
 S ORC=0
"RTN","ALPBINP",41,0)
 F  S ORC=$O(@ALPMSG@(ORC)) Q:ORC'>0  Q:$E(@ALPMSG@(ORC),1,3)="ORC"
"RTN","ALPBINP",42,0)
 I +ORC'>0 Q "0^MSG^Missing ORC Segment Bad Message"
"RTN","ALPBINP",43,0)
 ;RE-BUILDING THE MESSAGE FOR BCBU
"RTN","ALPBINP",44,0)
 S ALPDFN=$P(@ALPMSG@(PID),MSFS,4)
"RTN","ALPBINP",45,0)
 I +ALPDFN'>0 Q "0^MSG^Invalid or Missing Patient - PID"
"RTN","ALPBINP",46,0)
 S ALPORD=$P($P(@ALPMSG@(ORC),MSFS,4),MSCS,1)
"RTN","ALPBINP",47,0)
 I ALPORD="" Q "0^MSG^Invalid or Missing Order Number - ORC"
"RTN","ALPBINP",48,0)
 K ALPB
"RTN","ALPBINP",49,0)
 D EN^PSJBCBU(ALPDFN,ALPORD,.ALPB)
"RTN","ALPBINP",50,0)
SEED ;Entry point for ^ALPBIND
"RTN","ALPBINP",51,0)
 N VAIN
"RTN","ALPBINP",52,0)
 D INIT
"RTN","ALPBINP",53,0)
 S SUB=0 F  S SUB=$O(ALPB(SUB)) Q:'SUB  D
"RTN","ALPBINP",54,0)
 . ;convert and move the message to the HLA array for transport
"RTN","ALPBINP",55,0)
 . S HLA("HLS",SUB)=$$CNV^ALPBUTL1(MSCTR,HLCTR,ALPB(SUB))
"RTN","ALPBINP",56,0)
 . ;Now check for continuations 
"RTN","ALPBINP",57,0)
 . S SUB1=0
"RTN","ALPBINP",58,0)
 . F  S SUB1=$O(ALPB(SUB,SUB1)) Q:'SUB1  D
"RTN","ALPBINP",59,0)
 . . S HLA("HLS",SUB,SUB1)=$$CNV^ALPBUTL1(MSCTR,HLCTR,ALPB(SUB,SUB1))
"RTN","ALPBINP",60,0)
 . I $E(HLA("HLS",SUB),1,3)="RXE" S RXE=SUB
"RTN","ALPBINP",61,0)
 . I $E(HLA("HLS",SUB),1,3)="PID" S PID=SUB
"RTN","ALPBINP",62,0)
 . I $E(HLA("HLS",SUB),1,3)="PV1" S PV1=SUB
"RTN","ALPBINP",63,0)
 K HLA("HLS",MSH)
"RTN","ALPBINP",64,0)
 I '$D(HLA("HLS",PID)) Q "0^MSG^Missing PID Segment Bad Message"
"RTN","ALPBINP",65,0)
 S ALPDFN=$P($P(HLA("HLS",PID),HLFS,4),HLCS,1)
"RTN","ALPBINP",66,0)
 I +ALPDFN'>0 Q "0^MSG^Invalid or Missing Patient - PID"
"RTN","ALPBINP",67,0)
 S HLA("HLS",PID)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",68,0)
 ;Fix RXE segement for Administration Type
"RTN","ALPBINP",69,0)
 D RXE
"RTN","ALPBINP",70,0)
 ;Get the Division that the patient is associated with (Ward)
"RTN","ALPBINP",71,0)
 D PDIV
"RTN","ALPBINP",72,0)
 ;Override Ward Division with Clinic Division if present           *87
"RTN","ALPBINP",73,0)
 N ALPCLDIV
"RTN","ALPBINP",74,0)
 D:$G(ALPORD)
"RTN","ALPBINP",75,0)
 . S ALPCLDIV=$$CDIVOR(ALPDFN,ALPORD)  ;If Clin Ord, then returns DIV
"RTN","ALPBINP",76,0)
 . S:$G(ALPCLDIV) ALPDIV=ALPCLDIV
"RTN","ALPBINP",77,0)
 Q:(+$G(ALPDIV2)>0)&(ALPDIV'=$G(ALPDIV2)) "0^"   ;no error
"RTN","ALPBINP",78,0)
 ;
"RTN","ALPBINP",79,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",80,0)
 I '$D(HLL("LINKS")) Q "0^HL7^Missing HLL Links Array Division # "_ALPDIV
"RTN","ALPBINP",81,0)
 ;SET NEW PV1
"RTN","ALPBINP",82,0)
 D NOW^%DTC
"RTN","ALPBINP",83,0)
 S STRING=$$EN^VAFHAPV1(ALPDFN,%,"2,3,7,18")
"RTN","ALPBINP",84,0)
 S HLA("HLS",PV1)=STRING
"RTN","ALPBINP",85,0)
 I +ORC>0 D
"RTN","ALPBINP",86,0)
 . S ALPST=$$STAT^ALPBUTL1($P(HLA("HLS",ORC),HLFS,6))
"RTN","ALPBINP",87,0)
 . Q:ALPST=""
"RTN","ALPBINP",88,0)
 . S $P(HLA("HLS",ORC),HLFS,6)=$P(HLA("HLS",ORC),HLFS,6)_HLCS_ALPST
"RTN","ALPBINP",89,0)
 D AL1
"RTN","ALPBINP",90,0)
 ;Capture message to review for testing before sending
"RTN","ALPBINP",91,0)
 D SEND
"RTN","ALPBINP",92,0)
EXIT ;EXIT and kill
"RTN","ALPBINP",93,0)
 K HLA,SUB,SUB1,STRING,ALPLOC,MSCH,MSCS,MSCTR
"RTN","ALPBINP",94,0)
 K MSH,ORC,PID,PV1,RXE,RXR,ALPB,ALPBY,ALPBYN,ALPC,ALPDATA,ALPDFN
"RTN","ALPBINP",95,0)
 K ALPDT,ALPI,ALPII,ALPIV,ALPOPTS,ALPOR,ALPORD,ALPST
"RTN","ALPBINP",96,0)
 K ALPSTN,ALPSYM,EVENT,GMRA,GMRAL
"RTN","ALPBINP",97,0)
 Q ALPRSLT
"RTN","ALPBINP",98,0)
INI() ;INTIAL SET UP ENTRY
"RTN","ALPBINP",99,0)
 G SEED
"RTN","ALPBINP",100,0)
INIT ;CALL HL7 TO INITIALIZE MESSAGE VARIABLES
"RTN","ALPBINP",101,0)
 ;SET UP ENVIRONMENT FOR MESSAGE
"RTN","ALPBINP",102,0)
 K HL,HLA,HLECH,HLQ,ALPRSLT,ALPOPTS
"RTN","ALPBINP",103,0)
 S EVENT="PSB BCBU ORM SEND"
"RTN","ALPBINP",104,0)
 D INIT^HLFNC2(EVENT,.HL,1)
"RTN","ALPBINP",105,0)
 S HLCS=$E(HL("ECH")),HLCTR=HLFS_HL("ECH")
"RTN","ALPBINP",106,0)
 Q
"RTN","ALPBINP",107,0)
SEND ;CALL HL7 TO TRANSMIT SINGLE MESSAGE
"RTN","ALPBINP",108,0)
 K ALPRSLT,ALPOPTS
"RTN","ALPBINP",109,0)
 ; If called from Workstation Init options it will screen out HL Links not selected
"RTN","ALPBINP",110,0)
 I $D(ALPHLINI) D  I '$D(HLL("LINKS")) Q
"RTN","ALPBINP",111,0)
 . F I=1:1 Q:'$D(HLL("LINKS",I))  I '$D(ALPHLINI(HLL("LINKS",I))) K HLL("LINKS",I)
"RTN","ALPBINP",112,0)
 D GENERATE^HLMA(EVENT,"LM",1,.ALPRSLT,"",.ALPOPTS)
"RTN","ALPBINP",113,0)
 Q
"RTN","ALPBINP",114,0)
AL1 ;ALLERGY SEGMENT BUILD
"RTN","ALPBINP",115,0)
 ;The will build the ALP segment with the curent allergies
"RTN","ALPBINP",116,0)
 ;for the patient to be added to the message
"RTN","ALPBINP",117,0)
 N DFN
"RTN","ALPBINP",118,0)
 Q:+ALPDFN'>0
"RTN","ALPBINP",119,0)
 K GMRAL
"RTN","ALPBINP",120,0)
 S DFN=ALPDFN
"RTN","ALPBINP",121,0)
 S GMRA="0^0^111"  ;DEFINES WHAT ALLERGIES TO RETURN
"RTN","ALPBINP",122,0)
 D EN1^GMRADPT
"RTN","ALPBINP",123,0)
 Q:'$D(GMRAL)
"RTN","ALPBINP",124,0)
 S ALPI=0,ALPC=1,ALPSYM=""
"RTN","ALPBINP",125,0)
 F  S ALPI=$O(GMRAL(ALPI)) Q:+ALPI'>0  D
"RTN","ALPBINP",126,0)
 . S ALPADR=""
"RTN","ALPBINP",127,0)
 . I $P($P(GMRAL(ALPI),U,8),";",2)="P" S ALPADR="**ADR** "
"RTN","ALPBINP",128,0)
 . S ALPDATA="AL1"_HLFS_ALPC_HLFS_$P(GMRAL(ALPI),U,7)
"RTN","ALPBINP",129,0)
 . S ALPDATA=ALPDATA_HLFS_ALPI_HLCS_ALPADR_$E($P(GMRAL(ALPI),U,2),1,25)_HLCS_"VA120.8"
"RTN","ALPBINP",130,0)
 . S HLA("HLS",$O(HLA("HLS",9999999),-1)+1)=ALPDATA
"RTN","ALPBINP",131,0)
 . S ALPC=ALPC+1
"RTN","ALPBINP",132,0)
 K GMRAL
"RTN","ALPBINP",133,0)
 Q
"RTN","ALPBINP",134,0)
RXE ;
"RTN","ALPBINP",135,0)
 Q:+$G(RXE)'>0
"RTN","ALPBINP",136,0)
 K ^TMP("PSJ1",$J)
"RTN","ALPBINP",137,0)
 Q:'$D(HLA("HLS",RXE))
"RTN","ALPBINP",138,0)
 S DATA=HLA("HLS",RXE)
"RTN","ALPBINP",139,0)
 D EN^PSJBCMA1(ALPDFN,ALPORD,1)
"RTN","ALPBINP",140,0)
 S TYP=$P($G(^TMP("PSJ1",$J,4)),U,2)
"RTN","ALPBINP",141,0)
 Q:TYP="CONTINUOUS"
"RTN","ALPBINP",142,0)
 Q:TYP="FILL ON REQUEST"
"RTN","ALPBINP",143,0)
 S ALP1=$P(DATA,HLFS,2),ALP2=$P(ALP1,HLCS,2)
"RTN","ALPBINP",144,0)
 I ALP1[TYP Q
"RTN","ALPBINP",145,0)
 I ALP2[TYP Q
"RTN","ALPBINP",146,0)
 S $P(ALP2,"&",1)=$P(ALP2,"&",1)_" "_TYP
"RTN","ALPBINP",147,0)
 S $P(ALP1,HLCS,2)=ALP2,$P(DATA,HLFS,2)=ALP1
"RTN","ALPBINP",148,0)
 S HLA("HLS",RXE)=DATA
"RTN","ALPBINP",149,0)
 K TYP,ALP1,ALP2,^TMP("PSJ1",$J)
"RTN","ALPBINP",150,0)
 Q
"RTN","ALPBINP",151,0)
PDIV ;PATIENT DIVISION
"RTN","ALPBINP",152,0)
 ;Check ALPBMDT Variable
"RTN","ALPBINP",153,0)
 S:+$G(ALPBMDT)'>0 ALPBMDT=0
"RTN","ALPBINP",154,0)
 S ALPDIV=$$DIV^ALPBUTL1(ALPDFN,ALPBMDT)
"RTN","ALPBINP",155,0)
 ;Screen Dom
"RTN","ALPBINP",156,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q
"RTN","ALPBINP",157,0)
 ;Now do I send the Message or not Based of Division
"RTN","ALPBINP",158,0)
 I $D(ALPHLL("LINKS")) M HLL("LINKS")=ALPHLL("LINKS")
"RTN","ALPBINP",159,0)
 I '$D(HLL("LINKS")) D GET^ALPBPARM(.HLL,ALPDIV)
"RTN","ALPBINP",160,0)
 Q
"RTN","ALPBINP",161,0)
MEDL(ALPML) ;Use this entry to send MedLog messages
"RTN","ALPBINP",162,0)
 N VAIN
"RTN","ALPBINP",163,0)
 ;ALPML is the IEN of the MedLog for file #53.79
"RTN","ALPBINP",164,0)
 I '$D(ALPML) Q "0^ALPML^No Med-Log Number"
"RTN","ALPBINP",165,0)
 I '$D(^PSB(53.79,ALPML,0)) Q "0^"_ALPML_"^Med - Log Number Invalid"
"RTN","ALPBINP",166,0)
 ;First get the required HL7 Variables
"RTN","ALPBINP",167,0)
 D INIT
"RTN","ALPBINP",168,0)
 ;Need to build the PID, PV1 and ORC segments
"RTN","ALPBINP",169,0)
 S ALPDFN=+$P($G(^PSB(53.79,ALPML,0)),U,1)
"RTN","ALPBINP",170,0)
 I +ALPDFN'>0 Q "0^"_ALPML_"^Invalid or Missing Patient - Med-Log"
"RTN","ALPBINP",171,0)
 ;Get the Division that the patient is associated with (Ward)
"RTN","ALPBINP",172,0)
 D PDIV
"RTN","ALPBINP",173,0)
 I ALPDIV="",$G(ALPML) S ALPDIV=$$CDIV(ALPML)
"RTN","ALPBINP",174,0)
 ;Override Ward Division with Clinic Division if present *87
"RTN","ALPBINP",175,0)
 N ALPCLDIV
"RTN","ALPBINP",176,0)
 D:$G(ALPML)
"RTN","ALPBINP",177,0)
 . S ALPCLDIV=$$CDIV(ALPML)   ;If Clinic, then will return a DIV
"RTN","ALPBINP",178,0)
 . S:$G(ALPCLDIV) ALPDIV=ALPCLDIV
"RTN","ALPBINP",179,0)
 ;Quit if a specific Div was selected & Not = user selection     *87
"RTN","ALPBINP",180,0)
 Q:(+$G(ALPDIV2)>0)&(ALPDIV'=$G(ALPDIV2)) "0^"   ;no error
"RTN","ALPBINP",181,0)
 ;
"RTN","ALPBINP",182,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",183,0)
 I '$D(HLL("LINKS")) Q "0^"_ALPML_"^Missing HLL Links Array Med-Log"
"RTN","ALPBINP",184,0)
 S ALPST=$P($G(^PSB(53.79,ALPML,0)),U,9)
"RTN","ALPBINP",185,0)
 S ALPBY=$P($G(^PSB(53.79,ALPML,0)),U,7)
"RTN","ALPBINP",186,0)
 S ALPDT=$P($G(^PSB(53.79,ALPML,0)),U,6)
"RTN","ALPBINP",187,0)
 S ALPOR=$P($G(^PSB(53.79,ALPML,.1)),U,1)
"RTN","ALPBINP",188,0)
 S ALPBYN=$P($G(^VA(200,ALPBY,0)),U,1)
"RTN","ALPBINP",189,0)
 S ALPSTN=$S($D(ALPST):$$EXTERNAL^DILFD(53.79,".09",,ALPST),1:"Non")
"RTN","ALPBINP",190,0)
 I '$D(ALPOR) Q "0^"_ALPML_"^Invalid or Missing Pharmacy Order Number Med-Log"
"RTN","ALPBINP",191,0)
 S PID=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",192,0)
 I '$D(PID) Q "0^"_ALPML_"^Invalid or Missing Patient - PID Med-Log"
"RTN","ALPBINP",193,0)
 S PV1=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",194,0)
 I '$D(PV1) Q "0^"_ALPML_"^Invalid or Missing Patient Location - PV1 Med-Log"
"RTN","ALPBINP",195,0)
 S HLA("HLS",1)=PID
"RTN","ALPBINP",196,0)
 S HLA("HLS",2)=PV1
"RTN","ALPBINP",197,0)
 ;BUILD ORC SEGMENT
"RTN","ALPBINP",198,0)
 S ORC="ORC"_HLFS_"ML"_HLFS_ALPML_HLCS_"ML"_HLFS_ALPOR_HLCS_"PS"_HLFS
"RTN","ALPBINP",199,0)
 S ORC=ORC_HLFS_ALPST_HLCS_ALPSTN_HLFS_HLFS_HLFS_HLFS
"RTN","ALPBINP",200,0)
 S ORC=ORC_$$HLDATE^HLFNC(ALPDT,"TS")_HLFS_ALPBY_HLCS_ALPBYN
"RTN","ALPBINP",201,0)
 S HLA("HLS",3)=ORC
"RTN","ALPBINP",202,0)
 ;The Message is ready to send                                     *87
"RTN","ALPBINP",203,0)
 ; If this Medlog entry is Removed, then save HLA array and find the
"RTN","ALPBINP",204,0)
 ; associated Give and alter the ORC seg in the HLA array and send the
"RTN","ALPBINP",205,0)
 ; Removed 2nd.
"RTN","ALPBINP",206,0)
 I $P(HLA("HLS",3),HLFS,6)["REMOVED" D
"RTN","ALPBINP",207,0)
 . N SAVHLA,SAVHLL
"RTN","ALPBINP",208,0)
 . M SAVHLA=HLA,SAVHLL=HLL
"RTN","ALPBINP",209,0)
 . N GIVSTR,GIVDT,GIVBY,GIVBY,GIVBYN
"RTN","ALPBINP",210,0)
 . S GIVSTR=$$FINDGIVE(ALPML)
"RTN","ALPBINP",211,0)
 . S GIVDT=$P(GIVSTR,U,1),GIVBY=$P(GIVSTR,U,5)
"RTN","ALPBINP",212,0)
 . S $P(HLA("HLS",3),HLFS,6)="G"_HLCS_"GIVEN"
"RTN","ALPBINP",213,0)
 . S $P(HLA("HLS",3),HLFS,10)=$$HLDATE^HLFNC(GIVDT,"TS")
"RTN","ALPBINP",214,0)
 . S GIVBYN=$$GET1^DIQ(200,GIVBY,"NAME")
"RTN","ALPBINP",215,0)
 . S $P(HLA("HLS",3),HLFS,11)=GIVBY_HLCS_GIVBYN
"RTN","ALPBINP",216,0)
 . D SEND        ;send assoc Medlog Give per a Removed trans
"RTN","ALPBINP",217,0)
 . D INIT
"RTN","ALPBINP",218,0)
 . M HLA=SAVHLA,HLL=SAVHLL
"RTN","ALPBINP",219,0)
 ;
"RTN","ALPBINP",220,0)
 D SEND     ;send current Medlog trans
"RTN","ALPBINP",221,0)
 Q ALPRSLT
"RTN","ALPBINP",222,0)
 ;
"RTN","ALPBINP",223,0)
ADMQ ;Need to que a single patient init for admissions
"RTN","ALPBINP",224,0)
 S ALDFN=ALPDFN
"RTN","ALPBINP",225,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","ALPBINP",226,0)
 S ZTRTN="PAT^ALPBIND("""")"                    ;pass null Div par *87
"RTN","ALPBINP",227,0)
 S ZTDESC="PSB - Initialize Single Patient on Admission Contingency Workstation"
"RTN","ALPBINP",228,0)
 S ZTIO="",ZTSAVE("ALDFN")=""
"RTN","ALPBINP",229,0)
 D ^%ZTLOAD
"RTN","ALPBINP",230,0)
 K ZTIO,ZTDESC,ZTRTN,ZTSK
"RTN","ALPBINP",231,0)
 Q
"RTN","ALPBINP",232,0)
PMOV(ALPDFN,ALPTYP,ALPTT,ALPBMDT) ;Entry Point to send patient movement
"RTN","ALPBINP",233,0)
 N VAIN
"RTN","ALPBINP",234,0)
 I +$G(ALPDFN)'>0 Q "0^^Missing Patient ID"
"RTN","ALPBINP",235,0)
 D INIT
"RTN","ALPBINP",236,0)
 ;Check Movement type. If not a discharge then don't pass date and time
"RTN","ALPBINP",237,0)
 S:$G(ALPTT)'="DISCHARGE" ALPBMDT=0
"RTN","ALPBINP",238,0)
 ;Get the Division that the patient is associated with
"RTN","ALPBINP",239,0)
 D PDIV
"RTN","ALPBINP",240,0)
 I ALPDIV="DOM",+$$GET^XPAR("PKG.BAR CODE MED ADMIN","PSB BKUP DOM FILTER",1,"Q")>0 Q "0^^Screen of DOMICILIARY"
"RTN","ALPBINP",241,0)
 I '$D(HLL("LINKS")) Q "0^"_ALPDFN_"^Missing HLL Links Array Pat-Move / DFN: "_ALPDFN
"RTN","ALPBINP",242,0)
 S HLA("HLS",1)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",243,0)
 S HLA("HLS",2)=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",244,0)
 S:$G(ALPTT)="DISCHARGE" $P(HLA("HLS",2),HLFS,37)=$G(ALPTYP)
"RTN","ALPBINP",245,0)
 D SEND
"RTN","ALPBINP",246,0)
 I ALPTYP=14!(ALPTYP=41) S ALPTT="ADMISSION" ;FOR RETURN FROM ASIH
"RTN","ALPBINP",247,0)
 I $G(ALPTT)="ADMISSION" D ADMQ
"RTN","ALPBINP",248,0)
 ;SEND A DISCHARGE TO DIV SENDING ASIH
"RTN","ALPBINP",249,0)
 I $G(ALPTYP)[13!($G(ALPTYP)[40) D
"RTN","ALPBINP",250,0)
 .D INIT
"RTN","ALPBINP",251,0)
 .S ALPWRD=$P($G(DGPMVI(5)),U,1) ;LAST WARD
"RTN","ALPBINP",252,0)
 .I +ALPWRD'>0 S ALPRSLT="0^^Screen - No Ward" Q  ;NO WARD
"RTN","ALPBINP",253,0)
 .S ALPBDIV=$P($G(^DIC(42,ALPWRD,0)),U,11)
"RTN","ALPBINP",254,0)
 .D GET^ALPBPARM(.HLL,ALPBDIV)
"RTN","ALPBINP",255,0)
 .S HLA("HLS",1)=$$EN^VAFHLPID(ALPDFN,"2,7,8,19")
"RTN","ALPBINP",256,0)
 .S HLA("HLS",2)=$$EN^VAFHAPV1(ALPDFN,DT,"2,3,7,18")
"RTN","ALPBINP",257,0)
 .S $P(HLA("HLS",2),HLFS,37)="ASIH"
"RTN","ALPBINP",258,0)
 .D SEND
"RTN","ALPBINP",259,0)
 Q ALPRSLT
"RTN","ALPBINP",260,0)
 ;
"RTN","ALPBINP",261,0)
CDIV(ML) ; Return DIVISION associated with input CLINIC
"RTN","ALPBINP",262,0)
 Q:'$G(ML) ""
"RTN","ALPBINP",263,0)
 N MLDATA,CLINICE,CLINICI,DIVE,DIVI,MLINST
"RTN","ALPBINP",264,0)
 S MLDATA=$G(^PSB(53.79,+ML,0))
"RTN","ALPBINP",265,0)
 S CLINICE=$P(MLDATA,"^",2),CLINICI=$O(^SC("B",CLINICE,0))
"RTN","ALPBINP",266,0)
 I CLINICI D
"RTN","ALPBINP",267,0)
 . S DIVI=$P($G(^SC(CLINICI,0)),"^",15)
"RTN","ALPBINP",268,0)
 E  D
"RTN","ALPBINP",269,0)
 . S MLINST=+$P(MLDATA,"^",3),DIVI=+$O(^DG(40.8,"AD",MLINST,0))
"RTN","ALPBINP",270,0)
 ; Retrieving HL7 parameters for the Clinic Division
"RTN","ALPBINP",271,0)
 S DIVE=$$GET1^DIQ(40.8,+DIVI,.01) D GET^ALPBPARM(.HLL,DIVE)
"RTN","ALPBINP",272,0)
 Q DIVI
"RTN","ALPBINP",273,0)
 ;
"RTN","ALPBINP",274,0)
CDIVOR(DFN,ORDER) ; Return DIVISION associated with input ORDER
"RTN","ALPBINP",275,0)
 Q:'$G(ORDER) "" Q:'$G(DFN) ""
"RTN","ALPBINP",276,0)
 N CLINICI,DIVI,DIVE
"RTN","ALPBINP",277,0)
 S CLINICI=$S(ORDER["P":+$G(^PS(53.1,+ORDER,"DSS")),ORDER["U":+$G(^PS(55,DFN,5,+ORDER,8)),ORDER["V":+$G(^PS(55,DFN,"IV",+ORDER,"DSS")),1:"")
"RTN","ALPBINP",278,0)
 I 'CLINICI Q "" I '$D(^SC(CLINICI,0)) Q ""
"RTN","ALPBINP",279,0)
 S DIVI=$P($G(^SC(CLINICI,0)),"^",15),DIVE=$P($G(^DG(40.8,+DIVI,0)),"^")
"RTN","ALPBINP",280,0)
 D GET^ALPBPARM(.HLL,DIVE)
"RTN","ALPBINP",281,0)
 Q $P(^SC(CLINICI,0),"^",15)
"RTN","ALPBINP",282,0)
 ;
"RTN","ALPBINP",283,0)
FINDGIVE(IEN) ;Finds the last Give date/time in the Audit log              *87
"RTN","ALPBINP",284,0)
 ;   When a Remove action occurs and saved to 53.79, the Give Action
"RTN","ALPBINP",285,0)
 ;   Status & Action Date/Time are overwritten. This Function will
"RTN","ALPBINP",286,0)
 ;   retrieve that Give info.
"RTN","ALPBINP",287,0)
 ;
"RTN","ALPBINP",288,0)
 ; Function returns - string formatted as the MAH report uses
"RTN","ALPBINP",289,0)
 ;  date/time ^ by initials ^ action code ^ ien of 53.79 file ^ by DUZ
"RTN","ALPBINP",290,0)
 ;
"RTN","ALPBINP",291,0)
 N DA,STR
"RTN","ALPBINP",292,0)
 S STR=""
"RTN","ALPBINP",293,0)
 F DA=99999:0 S DA=$O(^PSB(53.79,IEN,.9,DA),-1) Q:'DA  D  Q:$P(STR,U,4)
"RTN","ALPBINP",294,0)
 .D:^PSB(53.79,IEN,.9,DA,0)["ACTION STATUS Set to 'GIVEN'"
"RTN","ALPBINP",295,0)
 ..S $P(STR,U,1)=$P(^PSB(53.79,IEN,.9,DA,0),U)
"RTN","ALPBINP",296,0)
 ..S $P(STR,U,2)=$P(^PSB(53.79,IEN,.9,DA,0),"'",4)
"RTN","ALPBINP",297,0)
 ..S $P(STR,U,3)="G"
"RTN","ALPBINP",298,0)
 ..S $P(STR,U,4)=IEN
"RTN","ALPBINP",299,0)
 ..S $P(STR,U,5)=$P(^PSB(53.79,IEN,.9,DA,0),U,5)
"RTN","ALPBINP",300,0)
 Q STR
"VER")
8.0^22.2
**END**
**END**
