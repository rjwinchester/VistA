Released PSB*3*83 SEQ #75
Extracted from mail message
**KIDS**:PSB*3.0*83^

**INSTALL NAME**
PSB*3.0*83
"BLD",9243,0)
PSB*3.0*83^BAR CODE MED ADMIN^0^3161020^y
"BLD",9243,1,0)
^^138^138^3160926^
"BLD",9243,1,1,0)
******************************* ATTENTION ********************************
"BLD",9243,1,2,0)
  
"BLD",9243,1,3,0)
Clinical Ancillary Services (CAS) Development-Delivery of Pharmacy 
"BLD",9243,1,4,0)
Enhancements (DDPE) VA Inpatient Medication Administration - Transdermal
"BLD",9243,1,5,0)
enhancement includes 5 patches which must be installed in the following
"BLD",9243,1,6,0)
order:
"BLD",9243,1,7,0)
  
"BLD",9243,1,8,0)
1.      PSS*1*191
"BLD",9243,1,9,0)
2.      PSJ*5*315
"BLD",9243,1,10,0)
3.      PSB*3*83
"BLD",9243,1,11,0)
4.      OR*3*417
"BLD",9243,1,12,0)
5.      PSB*3*87
"BLD",9243,1,13,0)
 
"BLD",9243,1,14,0)
ATTENTION: This enhancement also includes a new Graphical User Interface
"BLD",9243,1,15,0)
(GUI) executable, BCMA GUI PSB3_P083.EXE. Installation of this GUI is
"BLD",9243,1,16,0)
required immediately after the KIDS install for the Patch to function.
"BLD",9243,1,17,0)
 
"BLD",9243,1,18,0)
For retrieval and installation instructions, please see the Client 
"BLD",9243,1,19,0)
Installation Instructions section.
"BLD",9243,1,20,0)
**************************************************************************
"BLD",9243,1,21,0)
 
"BLD",9243,1,22,0)
The Clinical Ancillary Services Development-Delivery of Pharmacy 
"BLD",9243,1,23,0)
Enhancements (CAS DDPE) project addresses several NSR's, which center 
"BLD",9243,1,24,0)
around providing a means for properly handling Transdermal Medications 
"BLD",9243,1,25,0)
Requiring Removal (MRR) beyond the current medications of dosage form 
"BLD",9243,1,26,0)
Patch.  These enhancements interface with Inpatient Pharmacy package, 
"BLD",9243,1,27,0)
which will be storing Scheduled Removal Times, for inpatient orders that 
"BLD",9243,1,28,0)
are designated as MRR type medications.  See associated patches PSS*1*191 
"BLD",9243,1,29,0)
and PSJ*5*315, for details on how MRR medications are designated.
"BLD",9243,1,30,0)
 
"BLD",9243,1,31,0)
This BCMA enhancement also includes a new Graphical User Interface (GUI) 
"BLD",9243,1,32,0)
executable, BCMA GUI PSB3_P083.EXE. Installation of this GUI is required 
"BLD",9243,1,33,0)
immediately after the KIDS install for the Patch to function.
"BLD",9243,1,34,0)
 
"BLD",9243,1,35,0)
Features of the BCMA GUI provided by this project are listed below.
"BLD",9243,1,36,0)
 
"BLD",9243,1,37,0)
 1. Change the current GUI Unit Dose tab column labeled "Admin Time" to 
"BLD",9243,1,38,0)
    "Next Dose Action".
"BLD",9243,1,39,0)
 
"BLD",9243,1,40,0)
 2. The "Next Dose Action" column will now contain both the next admin
"BLD",9243,1,41,0)
    times for scheduled administrations as well as the next Removal time
"BLD",9243,1,42,0)
    for MRR type medications. The initial login to BCMA, will sort the
"BLD",9243,1,43,0)
    Unit Dose tab in ascending order by this column, so older actions for
"BLD",9243,1,44,0)
    medications will be at the top of the VDL display.
"BLD",9243,1,45,0)
 
"BLD",9243,1,46,0)
      a. The Next Action of an administration will contain the word "DUE"
"BLD",9243,1,47,0)
         followed by the scheduled admin time in the standard date@admin
"BLD",9243,1,48,0)
         time format currently in use.
"BLD",9243,1,49,0)
      b. The Next Action of a removal will contain the word "REMOVE"
"BLD",9243,1,50,0)
         followed by the scheduled removal time in the standard
"BLD",9243,1,51,0)
         date@time format.
"BLD",9243,1,52,0)
      c. The Next Action of an administration that is past due to be
"BLD",9243,1,53,0)
         given will contain the word "LATE" followed by the scheduled
"BLD",9243,1,54,0)
         admin time in the standard date@admin time format currently in
"BLD",9243,1,55,0)
         use.                
"BLD",9243,1,56,0)
      d. The Next Action of a removal that is past due to be removed will
"BLD",9243,1,57,0)
         contain the word "LATE-RM" followed by the scheduled removal time
"BLD",9243,1,58,0)
         in the standard date@time format.
"BLD",9243,1,59,0)
 
"BLD",9243,1,60,0)
 3. Change the current GUI column labeled "Wit" to "Alert".
"BLD",9243,1,61,0)
 
"BLD",9243,1,62,0)
 4. The Alert column will still have the ability to display the Witness 
"BLD",9243,1,63,0)
    required icon and will also be able to display a new Remove icon.  
"BLD",9243,1,64,0)
      a. The icon is displayed only for MRR type meds that were Given and
"BLD",9243,1,65,0)
         their next Action is for Removal.
"BLD",9243,1,66,0)
 
"BLD",9243,1,67,0)
 5. Early/Late warnings will also be associated with medications being 
"BLD",9243,1,68,0)
    removed early or late using the same early late time range that is
"BLD",9243,1,69,0)
    used for early or late medication admins.
"BLD",9243,1,70,0)
      a. User comments are prompted for and stored upon continuing with
"BLD",9243,1,71,0)
         the Early/Late removal action.
"BLD",9243,1,72,0)
 
"BLD",9243,1,73,0)
 6. Variances will also be tracked for Early/Late Removals in the same 
"BLD",9243,1,74,0)
    manner as they are currently for Early/Late medication
"BLD",9243,1,75,0)
    administrations and will appear on the Medication Variance Log report.
"BLD",9243,1,76,0)
 
"BLD",9243,1,77,0)
 7. BCMA Medication Administration History (MAH) report will now print
"BLD",9243,1,78,0)
    the associated Give, which was previously overwritten by the Remove
"BLD",9243,1,79,0)
    action, chronologically after the Remove for the Print by Patient 
"BLD",9243,1,80,0)
    report. The print by Ward report will now include the count of
"BLD",9243,1,81,0)
    Removals scheduled for the report time period.
"BLD",9243,1,82,0)
 
"BLD",9243,1,83,0)
 8. BMCA Medication Log will now show the historical Give date/time below 
"BLD",9243,1,84,0)
    the current status of the medication, which shows the Remove
"BLD",9243,1,85,0)
    date/time.
"BLD",9243,1,86,0)
 
"BLD",9243,1,87,0)
 9. BCMA Missed Medications report will also show Removals that were
"BLD",9243,1,88,0)
    missed or up and coming, similar to how missed Gives are currently
"BLD",9243,1,89,0)
    notated.  The column Heading has been changed from "Admin Date/Time"
"BLD",9243,1,90,0)
    to "Missed Date/Time".
"BLD",9243,1,91,0)
 
"BLD",9243,1,92,0)
10. BCMA Display Order report now includes the Removal Times for this
"BLD",9243,1,93,0)
    order directly below the current Admin Times.
"BLD",9243,1,94,0)
 
"BLD",9243,1,95,0)
11. BCMA Medication History report now includes a prior Give line item
"BLD",9243,1,96,0)
    directly below the current status line item of Remove (RM). The Remove
"BLD",9243,1,97,0)
    last action on this administration overwrites the Give information and
"BLD",9243,1,98,0)
    was no longer printing on this report.  This information is now being
"BLD",9243,1,99,0)
    retrieved from the Audit log and printed on this report.
"BLD",9243,1,100,0)
 
"BLD",9243,1,101,0)
12. BCMA Due List report now includes Remove Times on the report below 
"BLD",9243,1,102,0)
    the admin times that are due per Medication.
"BLD",9243,1,103,0)
 
"BLD",9243,1,104,0)
13. BCMA Coversheet Medication Overview report and the Coversheet 
"BLD",9243,1,105,0)
    Expired/DC'd/Expiring Orders report will now include Missed-Removals 
"BLD",9243,1,106,0)
    and Removals on the reports.
"BLD",9243,1,107,0)
 
"BLD",9243,1,108,0)
14. BCMA Medication Log report changed the heading from "Inj Site" to 
"BLD",9243,1,109,0)
    "Body Site".  The  Medication detail body text will display the proper
"BLD",9243,1,110,0)
    label of "Inj Site:" or "Derm Site:" just prior to the name of the
"BLD",9243,1,111,0)
    Body site for that medication.
"BLD",9243,1,112,0)
 
"BLD",9243,1,113,0)
15. BCMA Medication History Heading line changed from "Injection Site" to
"BLD",9243,1,114,0)
    "Body Site".
"BLD",9243,1,115,0)
 
"BLD",9243,1,116,0)
16. A body site diagram will be added to the BCMA Parameter GUI client 
"BLD",9243,1,117,0)
    application for the purpose of showing a dot on the body diagram that
"BLD",9243,1,118,0)
    is associated with the Text representation of that site location on
"BLD",9243,1,119,0)
    the body.
"BLD",9243,1,120,0)
 
"BLD",9243,1,121,0)
17. The BCMA Parameter GUI client application has access to a new kernel 
"BLD",9243,1,122,0)
    parameter titled in GUI application as "Dermal Site History Max
"BLD",9243,1,123,0)
    Days:".  This allows the BCMA coordinator the ability to control how
"BLD",9243,1,124,0)
    many days of prior dermal body site location history will appear, when
"BLD",9243,1,125,0)
    a clinician is giving a new dermal medication that is prompting for a
"BLD",9243,1,126,0)
    body site location.
"BLD",9243,1,127,0)
 
"BLD",9243,1,128,0)
18. The Orders for MRRs With Removal Properties [PSS MRR ORDERS DIAGNOSTIC
"BLD",9243,1,129,0)
    RPT] option found on the Pharmacy Data Management [PSS MGR] menu, 
"BLD",9243,1,130,0)
    will also be placed on the Bar Code Medication Administration Manager
"BLD",9243,1,131,0)
    [PSB MGR] menu.
"BLD",9243,1,132,0)
 
"BLD",9243,1,133,0)
 
"BLD",9243,1,134,0)
*NOTE* Non-standard schedules such as DAY@HHMM, HHMM, or other Odd 
"BLD",9243,1,135,0)
       schedules, are not capable of calculating removal times due to a
"BLD",9243,1,136,0)
       lack of a Frequency.  Regardless of the Prompt for Removal in BCMA
"BLD",9243,1,137,0)
       code value they will not prompt for removal in BCMA and should be
"BLD",9243,1,138,0)
       avoided.
"BLD",9243,4,0)
^9.64PA^53.78^2
"BLD",9243,4,53.78,0)
53.78
"BLD",9243,4,53.78,2,0)
^9.641^53.78^1
"BLD",9243,4,53.78,2,53.78,0)
BCMA MEDICATION VARIANCE LOG  (File-top level)
"BLD",9243,4,53.78,2,53.78,1,0)
^9.6411^.05^1
"BLD",9243,4,53.78,2,53.78,1,.05,0)
EVENT
"BLD",9243,4,53.78,222)
y^y^p^^^^n^^n
"BLD",9243,4,53.78,224)

"BLD",9243,4,53.79,0)
53.79
"BLD",9243,4,53.79,2,0)
^9.641^53.79^2
"BLD",9243,4,53.79,2,53.79,0)
BCMA MEDICATION LOG  (File-top level)
"BLD",9243,4,53.79,2,53.79,1,0)
^9.6411^.18^4
"BLD",9243,4,53.79,2,53.79,1,.06,0)
ACTION DATE/TIME
"BLD",9243,4,53.79,2,53.79,1,.13,0)
SCHEDULED ADMINISTRATION TIME
"BLD",9243,4,53.79,2,53.79,1,.17,0)
SCHEDULED REMOVAL TIME
"BLD",9243,4,53.79,2,53.79,1,.18,0)
DERMAL SITE
"BLD",9243,4,53.79,2,53.795,0)
DISPENSE DRUG  (sub-file)
"BLD",9243,4,53.79,2,53.795,1,0)
^9.6411^.06^1
"BLD",9243,4,53.79,2,53.795,1,.06,0)
PROMPT FOR REMOVAL IN BCMA
"BLD",9243,4,53.79,222)
y^y^p^^^^n^^n
"BLD",9243,4,53.79,224)

"BLD",9243,4,"APDD",53.78,53.78)

"BLD",9243,4,"APDD",53.78,53.78,.05)

"BLD",9243,4,"APDD",53.79,53.79)

"BLD",9243,4,"APDD",53.79,53.79,.06)

"BLD",9243,4,"APDD",53.79,53.79,.13)

"BLD",9243,4,"APDD",53.79,53.79,.17)

"BLD",9243,4,"APDD",53.79,53.79,.18)

"BLD",9243,4,"APDD",53.79,53.795)

"BLD",9243,4,"APDD",53.79,53.795,.06)

"BLD",9243,4,"B",53.78,53.78)

"BLD",9243,4,"B",53.79,53.79)

"BLD",9243,6)
4^
"BLD",9243,6.3)
89
"BLD",9243,"ABPKG")
n
"BLD",9243,"INID")
^y
"BLD",9243,"INIT")
EN^PSB3P83
"BLD",9243,"KRN",0)
^9.67PA^9002226^21
"BLD",9243,"KRN",.4,0)
.4
"BLD",9243,"KRN",.401,0)
.401
"BLD",9243,"KRN",.402,0)
.402
"BLD",9243,"KRN",.403,0)
.403
"BLD",9243,"KRN",.403,"NM",0)
^9.68A^2^2
"BLD",9243,"KRN",.403,"NM",1,0)
PSB MED LOG EDIT    FILE #53.79^53.79^0
"BLD",9243,"KRN",.403,"NM",2,0)
PSB NEW UD ENTRY    FILE #53.79^53.79^0
"BLD",9243,"KRN",.403,"NM","B","PSB MED LOG EDIT    FILE #53.79",1)

"BLD",9243,"KRN",.403,"NM","B","PSB NEW UD ENTRY    FILE #53.79",2)

"BLD",9243,"KRN",.5,0)
.5
"BLD",9243,"KRN",.84,0)
.84
"BLD",9243,"KRN",3.6,0)
3.6
"BLD",9243,"KRN",3.8,0)
3.8
"BLD",9243,"KRN",9.2,0)
9.2
"BLD",9243,"KRN",9.8,0)
9.8
"BLD",9243,"KRN",9.8,"NM",0)
^9.68A^47^37
"BLD",9243,"KRN",9.8,"NM",1,0)
PSBML^^0^B154439138
"BLD",9243,"KRN",9.8,"NM",3,0)
PSBML2^^0^B112891914
"BLD",9243,"KRN",9.8,"NM",5,0)
PSBRPC3^^0^B291911
"BLD",9243,"KRN",9.8,"NM",6,0)
PSBUTL^^0^B243063193
"BLD",9243,"KRN",9.8,"NM",7,0)
PSBVDLPA^^0^B24345187
"BLD",9243,"KRN",9.8,"NM",8,0)
PSBVDLU1^^0^B192703576
"BLD",9243,"KRN",9.8,"NM",9,0)
PSBVDLUD^^0^B102373199
"BLD",9243,"KRN",9.8,"NM",11,0)
PSBVDLRM^^0^B23619193
"BLD",9243,"KRN",9.8,"NM",12,0)
PSBVAR^^0^B16360454
"BLD",9243,"KRN",9.8,"NM",13,0)
PSBVDLVL^^0^B151829804
"BLD",9243,"KRN",9.8,"NM",20,0)
PSBCSUTL^^0^B188607274
"BLD",9243,"KRN",9.8,"NM",21,0)
PSBO^^0^B151900233
"BLD",9243,"KRN",9.8,"NM",22,0)
PSBO1^^0^B35906614
"BLD",9243,"KRN",9.8,"NM",23,0)
PSBOMH^^0^B103792484
"BLD",9243,"KRN",9.8,"NM",24,0)
PSBOMH1^^0^B93853760
"BLD",9243,"KRN",9.8,"NM",25,0)
PSBOML^^0^B88385252
"BLD",9243,"KRN",9.8,"NM",26,0)
PSBOMM^^0^B187931933
"BLD",9243,"KRN",9.8,"NM",27,0)
PSBOPM^^0^B106114461
"BLD",9243,"KRN",9.8,"NM",28,0)
PSBODO^^0^B42287720
"BLD",9243,"KRN",9.8,"NM",29,0)
PSBVDLTB^^0^B35153765
"BLD",9243,"KRN",9.8,"NM",30,0)
PSBVT^^0^B117105095
"BLD",9243,"KRN",9.8,"NM",31,0)
PSBOWA^^0^B170448047
"BLD",9243,"KRN",9.8,"NM",32,0)
PSBOCE^^0^B126384546
"BLD",9243,"KRN",9.8,"NM",33,0)
PSBOCM^^0^B128362247
"BLD",9243,"KRN",9.8,"NM",34,0)
PSBOMV^^0^B64401243
"BLD",9243,"KRN",9.8,"NM",35,0)
PSBODL^^0^B108404103
"BLD",9243,"KRN",9.8,"NM",36,0)
PSBODL1^^0^B83787134
"BLD",9243,"KRN",9.8,"NM",37,0)
PSBINJEC^^0^B34498622
"BLD",9243,"KRN",9.8,"NM",38,0)
PSBMLLKU^^0^B129280348
"BLD",9243,"KRN",9.8,"NM",40,0)
PSBAPIPM^^0^B19077175
"BLD",9243,"KRN",9.8,"NM",41,0)
PSBPAR^^0^B31414192
"BLD",9243,"KRN",9.8,"NM",42,0)
PSBMLEN1^^0^B79293217
"BLD",9243,"KRN",9.8,"NM",43,0)
PSBMLEN^^0^B87414949
"BLD",9243,"KRN",9.8,"NM",44,0)
PSBML3^^0^B60270297
"BLD",9243,"KRN",9.8,"NM",45,0)
PSBVDLIV^^0^B82920936
"BLD",9243,"KRN",9.8,"NM",46,0)
PSBVDLPB^^0^B108251396
"BLD",9243,"KRN",9.8,"NM",47,0)
PSBOMT^^0^B104162476
"BLD",9243,"KRN",9.8,"NM","B","PSBAPIPM",40)

"BLD",9243,"KRN",9.8,"NM","B","PSBCSUTL",20)

"BLD",9243,"KRN",9.8,"NM","B","PSBINJEC",37)

"BLD",9243,"KRN",9.8,"NM","B","PSBML",1)

"BLD",9243,"KRN",9.8,"NM","B","PSBML2",3)

"BLD",9243,"KRN",9.8,"NM","B","PSBML3",44)

"BLD",9243,"KRN",9.8,"NM","B","PSBMLEN",43)

"BLD",9243,"KRN",9.8,"NM","B","PSBMLEN1",42)

"BLD",9243,"KRN",9.8,"NM","B","PSBMLLKU",38)

"BLD",9243,"KRN",9.8,"NM","B","PSBO",21)

"BLD",9243,"KRN",9.8,"NM","B","PSBO1",22)

"BLD",9243,"KRN",9.8,"NM","B","PSBOCE",32)

"BLD",9243,"KRN",9.8,"NM","B","PSBOCM",33)

"BLD",9243,"KRN",9.8,"NM","B","PSBODL",35)

"BLD",9243,"KRN",9.8,"NM","B","PSBODL1",36)

"BLD",9243,"KRN",9.8,"NM","B","PSBODO",28)

"BLD",9243,"KRN",9.8,"NM","B","PSBOMH",23)

"BLD",9243,"KRN",9.8,"NM","B","PSBOMH1",24)

"BLD",9243,"KRN",9.8,"NM","B","PSBOML",25)

"BLD",9243,"KRN",9.8,"NM","B","PSBOMM",26)

"BLD",9243,"KRN",9.8,"NM","B","PSBOMT",47)

"BLD",9243,"KRN",9.8,"NM","B","PSBOMV",34)

"BLD",9243,"KRN",9.8,"NM","B","PSBOPM",27)

"BLD",9243,"KRN",9.8,"NM","B","PSBOWA",31)

"BLD",9243,"KRN",9.8,"NM","B","PSBPAR",41)

"BLD",9243,"KRN",9.8,"NM","B","PSBRPC3",5)

"BLD",9243,"KRN",9.8,"NM","B","PSBUTL",6)

"BLD",9243,"KRN",9.8,"NM","B","PSBVAR",12)

"BLD",9243,"KRN",9.8,"NM","B","PSBVDLIV",45)

"BLD",9243,"KRN",9.8,"NM","B","PSBVDLPA",7)

"BLD",9243,"KRN",9.8,"NM","B","PSBVDLPB",46)

"BLD",9243,"KRN",9.8,"NM","B","PSBVDLRM",11)

"BLD",9243,"KRN",9.8,"NM","B","PSBVDLTB",29)

"BLD",9243,"KRN",9.8,"NM","B","PSBVDLU1",8)

"BLD",9243,"KRN",9.8,"NM","B","PSBVDLUD",9)

"BLD",9243,"KRN",9.8,"NM","B","PSBVDLVL",13)

"BLD",9243,"KRN",9.8,"NM","B","PSBVT",30)

"BLD",9243,"KRN",19,0)
19
"BLD",9243,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",9243,"KRN",19,"NM",1,0)
PSB MGR^^2
"BLD",9243,"KRN",19,"NM",2,0)
PSS MRR ORDERS DIAGNOSTIC RPT^^0
"BLD",9243,"KRN",19,"NM",3,0)
PSB GUI CONTEXT - USER^^0
"BLD",9243,"KRN",19,"NM","B","PSB GUI CONTEXT - USER",3)

"BLD",9243,"KRN",19,"NM","B","PSB MGR",1)

"BLD",9243,"KRN",19,"NM","B","PSS MRR ORDERS DIAGNOSTIC RPT",2)

"BLD",9243,"KRN",19.1,0)
19.1
"BLD",9243,"KRN",101,0)
101
"BLD",9243,"KRN",409.61,0)
409.61
"BLD",9243,"KRN",771,0)
771
"BLD",9243,"KRN",779.2,0)
779.2
"BLD",9243,"KRN",870,0)
870
"BLD",9243,"KRN",8989.51,0)
8989.51
"BLD",9243,"KRN",8989.51,"NM",0)
^9.68A^7^6
"BLD",9243,"KRN",8989.51,"NM",2,0)
PSB LIST BODY SITES^^0
"BLD",9243,"KRN",8989.51,"NM",3,0)
PSB AL GROUPS^^0
"BLD",9243,"KRN",8989.51,"NM",4,0)
PSB AL IMAGES^^0
"BLD",9243,"KRN",8989.51,"NM",5,0)
PSB AL MASTER LIST^^0
"BLD",9243,"KRN",8989.51,"NM",6,0)
PSB AL IMAGE GENERAL^^0
"BLD",9243,"KRN",8989.51,"NM",7,0)
PSB LIST ANATOMIC LOCATIONS^^0
"BLD",9243,"KRN",8989.51,"NM","B","PSB AL GROUPS",3)

"BLD",9243,"KRN",8989.51,"NM","B","PSB AL IMAGE GENERAL",6)

"BLD",9243,"KRN",8989.51,"NM","B","PSB AL IMAGES",4)

"BLD",9243,"KRN",8989.51,"NM","B","PSB AL MASTER LIST",5)

"BLD",9243,"KRN",8989.51,"NM","B","PSB LIST ANATOMIC LOCATIONS",7)

"BLD",9243,"KRN",8989.51,"NM","B","PSB LIST BODY SITES",2)

"BLD",9243,"KRN",8989.52,0)
8989.52
"BLD",9243,"KRN",8989.52,"NM",0)
^9.68A^1^1
"BLD",9243,"KRN",8989.52,"NM",1,0)
PSB DIVISION^^0
"BLD",9243,"KRN",8989.52,"NM","B","PSB DIVISION",1)

"BLD",9243,"KRN",8994,0)
8994
"BLD",9243,"KRN",8994,"NM",0)
^9.68A^7^7
"BLD",9243,"KRN",8994,"NM",1,0)
PSB GETORDERTAB^^0
"BLD",9243,"KRN",8994,"NM",2,0)
PSB VALIDATE ORDER^^0
"BLD",9243,"KRN",8994,"NM",3,0)
PSB COVERSHEET1^^0
"BLD",9243,"KRN",8994,"NM",4,0)
PSB TRANSACTION^^0
"BLD",9243,"KRN",8994,"NM",5,0)
PSB GETINJECTIONSITE^^0
"BLD",9243,"KRN",8994,"NM",6,0)
PSB MED LOG LOOKUP^^0
"BLD",9243,"KRN",8994,"NM",7,0)
PSB GETSETWP^^0
"BLD",9243,"KRN",8994,"NM","B","PSB COVERSHEET1",3)

"BLD",9243,"KRN",8994,"NM","B","PSB GETINJECTIONSITE",5)

"BLD",9243,"KRN",8994,"NM","B","PSB GETORDERTAB",1)

"BLD",9243,"KRN",8994,"NM","B","PSB GETSETWP",7)

"BLD",9243,"KRN",8994,"NM","B","PSB MED LOG LOOKUP",6)

"BLD",9243,"KRN",8994,"NM","B","PSB TRANSACTION",4)

"BLD",9243,"KRN",8994,"NM","B","PSB VALIDATE ORDER",2)

"BLD",9243,"KRN",9002226,0)
9002226
"BLD",9243,"KRN","B",.4,.4)

"BLD",9243,"KRN","B",.401,.401)

"BLD",9243,"KRN","B",.402,.402)

"BLD",9243,"KRN","B",.403,.403)

"BLD",9243,"KRN","B",.5,.5)

"BLD",9243,"KRN","B",.84,.84)

"BLD",9243,"KRN","B",3.6,3.6)

"BLD",9243,"KRN","B",3.8,3.8)

"BLD",9243,"KRN","B",9.2,9.2)

"BLD",9243,"KRN","B",9.8,9.8)

"BLD",9243,"KRN","B",19,19)

"BLD",9243,"KRN","B",19.1,19.1)

"BLD",9243,"KRN","B",101,101)

"BLD",9243,"KRN","B",409.61,409.61)

"BLD",9243,"KRN","B",771,771)

"BLD",9243,"KRN","B",779.2,779.2)

"BLD",9243,"KRN","B",870,870)

"BLD",9243,"KRN","B",8989.51,8989.51)

"BLD",9243,"KRN","B",8989.52,8989.52)

"BLD",9243,"KRN","B",8994,8994)

"BLD",9243,"KRN","B",9002226,9002226)

"BLD",9243,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9243,"QUES",0)
^9.62^^
"BLD",9243,"REQB",0)
^9.611^8^7
"BLD",9243,"REQB",1,0)
PSB*3.0*70^2
"BLD",9243,"REQB",2,0)
PSB*3.0*76^2
"BLD",9243,"REQB",3,0)
PSJ*5.0*315^2
"BLD",9243,"REQB",5,0)
PSB*3.0*94^2
"BLD",9243,"REQB",6,0)
PSB*3.0*81^2
"BLD",9243,"REQB",7,0)
PSB*3.0*86^2
"BLD",9243,"REQB",8,0)
PSB*3.0*72^2
"BLD",9243,"REQB","B","PSB*3.0*70",1)

"BLD",9243,"REQB","B","PSB*3.0*72",8)

"BLD",9243,"REQB","B","PSB*3.0*76",2)

"BLD",9243,"REQB","B","PSB*3.0*81",6)

"BLD",9243,"REQB","B","PSB*3.0*86",7)

"BLD",9243,"REQB","B","PSB*3.0*94",5)

"BLD",9243,"REQB","B","PSJ*5.0*315",3)

"FIA",53.78)
BCMA MEDICATION VARIANCE LOG
"FIA",53.78,0)
^PSB(53.78,
"FIA",53.78,0,0)
53.78PAO
"FIA",53.78,0,1)
y^y^p^^^^n^^n
"FIA",53.78,0,10)

"FIA",53.78,0,11)

"FIA",53.78,0,"RLRO")

"FIA",53.78,0,"VR")
3.0^PSB
"FIA",53.78,53.78)
1
"FIA",53.78,53.78,.05)

"FIA",53.79)
BCMA MEDICATION LOG
"FIA",53.79,0)
^PSB(53.79,
"FIA",53.79,0,0)
53.79IP
"FIA",53.79,0,1)
y^y^p^^^^n^^n
"FIA",53.79,0,10)

"FIA",53.79,0,11)

"FIA",53.79,0,"RLRO")

"FIA",53.79,0,"VR")
3.0^PSB
"FIA",53.79,53.79)
1
"FIA",53.79,53.79,.06)

"FIA",53.79,53.79,.13)

"FIA",53.79,53.79,.17)

"FIA",53.79,53.79,.18)

"FIA",53.79,53.795)
1
"FIA",53.79,53.795,.06)

"INIT")
EN^PSB3P83
"IX",53.79,53.79,"ADERM",0)
53.79^ADERM^By patient, action date/time, & dermal site^R^^R^IR^I^53.79^^^^^S
"IX",53.79,53.79,"ADERM",.1,0)
^^4^4^3151030^
"IX",53.79,53.79,"ADERM",.1,1,0)
This index will be used to find historical dermal sites where a patient 
"IX",53.79,53.79,"ADERM",.1,2,0)
has had any dermal type medication on their body in Action date order.  
"IX",53.79,53.79,"ADERM",.1,3,0)
To be used for presenting to the BCMA user when administering a new 
"IX",53.79,53.79,"ADERM",.1,4,0)
dermal type medication.
"IX",53.79,53.79,"ADERM",1)
S ^PSB(53.79,"ADERM",X(1),X(2),$E(X(3),1,30),DA)=""
"IX",53.79,53.79,"ADERM",2)
K ^PSB(53.79,"ADERM",X(1),X(2),$E(X(3),1,30),DA)
"IX",53.79,53.79,"ADERM",2.5)
K ^PSB(53.79,"ADERM")
"IX",53.79,53.79,"ADERM",11.1,0)
^.114IA^3^3
"IX",53.79,53.79,"ADERM",11.1,1,0)
1^F^53.79^.01^^1^F
"IX",53.79,53.79,"ADERM",11.1,2,0)
2^F^53.79^.06^^2^F
"IX",53.79,53.79,"ADERM",11.1,3,0)
3^F^53.79^.18^30^3^F
"IX",53.79,53.79,"ADERMOI",0)
53.79^ADERMOI^By patient, orderable item, action date/time, & dermal site^R^^R^IR^I^53.79^^^^^S
"IX",53.79,53.79,"ADERMOI",.1,0)
^^4^4^3151030^
"IX",53.79,53.79,"ADERMOI",.1,1,0)
This index will be used to find historical dermal sites where a patient 
"IX",53.79,53.79,"ADERMOI",.1,2,0)
has had a dermal type medication on their body that are of the same 
"IX",53.79,53.79,"ADERMOI",.1,3,0)
Orderable Item and in Action date order.  To be used for presenting to 
"IX",53.79,53.79,"ADERMOI",.1,4,0)
the BCMA user when administering a new dermal type medication.
"IX",53.79,53.79,"ADERMOI",1)
S ^PSB(53.79,"ADERMOI",X(1),X(2),X(3),$E(X(4),1,30),DA)=""
"IX",53.79,53.79,"ADERMOI",2)
K ^PSB(53.79,"ADERMOI",X(1),X(2),X(3),$E(X(4),1,30),DA)
"IX",53.79,53.79,"ADERMOI",2.5)
K ^PSB(53.79,"ADERMOI")
"IX",53.79,53.79,"ADERMOI",11.1,0)
^.114IA^4^4
"IX",53.79,53.79,"ADERMOI",11.1,1,0)
1^F^53.79^.01^^1^F
"IX",53.79,53.79,"ADERMOI",11.1,2,0)
2^F^53.79^.08^^2^F
"IX",53.79,53.79,"ADERMOI",11.1,3,0)
3^F^53.79^.06^^3^F
"IX",53.79,53.79,"ADERMOI",11.1,4,0)
4^F^53.79^.18^30^4^F
"IX",53.79,53.79,"AINFUSING",0)
53.79^AINFUSING^Index of IV's still with a status of Infusing.^R^^R^IR^I^53.79^^^^^S
"IX",53.79,53.79,"AINFUSING",.1,0)
^^3^3^3120821^
"IX",53.79,53.79,"AINFUSING",.1,1,0)
Updates AINFUSING when DFN or admin date/time changes and Action Status 
"IX",53.79,53.79,"AINFUSING",.1,2,0)
is "I" for infusing or kill index when Action Status changes from "I" to 
"IX",53.79,53.79,"AINFUSING",.1,3,0)
anything.
"IX",53.79,53.79,"AINFUSING",1)
S ^PSB(53.79,"AINFUSING",X(1),X(2),DA)=""
"IX",53.79,53.79,"AINFUSING",1.4)
S X=0 I $P(^PSB(53.79,DA,0),U,9)="I",$P(^PSB(53.79,DA,0),U,10)]"" S X=1
"IX",53.79,53.79,"AINFUSING",2)
K ^PSB(53.79,"AINFUSING",X(1),X(2),DA)
"IX",53.79,53.79,"AINFUSING",2.4)
S X=0 I $P(^PSB(53.79,DA,0),U,9)'="I" S X=1
"IX",53.79,53.79,"AINFUSING",2.5)
K ^PSB(53.79,"AINFUSING")
"IX",53.79,53.79,"AINFUSING",11.1,0)
^.114IA^2^2
"IX",53.79,53.79,"AINFUSING",11.1,1,0)
1^F^53.79^.01^^1^F
"IX",53.79,53.79,"AINFUSING",11.1,2,0)
2^F^53.79^.06^^2^F
"IX",53.79,53.79,"AINJ",0)
53.79^AINJ^By patient, action date/time, & inject site^R^^R^IR^I^53.79^^^^^S
"IX",53.79,53.79,"AINJ",1)
S ^PSB(53.79,"AINJ",X(1),X(2),$E(X(3),1,30),DA)=""
"IX",53.79,53.79,"AINJ",2)
K ^PSB(53.79,"AINJ",X(1),X(2),$E(X(3),1,30),DA)
"IX",53.79,53.79,"AINJ",2.5)
K ^PSB(53.79,"AINJ")
"IX",53.79,53.79,"AINJ",11.1,0)
^.114IA^3^3
"IX",53.79,53.79,"AINJ",11.1,1,0)
1^F^53.79^.01^^1^F
"IX",53.79,53.79,"AINJ",11.1,2,0)
2^F^53.79^.06^^2^F
"IX",53.79,53.79,"AINJ",11.1,3,0)
3^F^53.79^.16^30^3^F
"IX",53.79,53.79,"AINJOI",0)
53.79^AINJOI^By patient, orderable item, action date/time, & inject site^R^^R^IR^I^53.79^^^^^S
"IX",53.79,53.79,"AINJOI",1)
S ^PSB(53.79,"AINJOI",X(1),X(2),X(3),$E(X(4),1,30),DA)=""
"IX",53.79,53.79,"AINJOI",2)
K ^PSB(53.79,"AINJOI",X(1),X(2),X(3),$E(X(4),1,30),DA)
"IX",53.79,53.79,"AINJOI",2.5)
K ^PSB(53.79,"AINJOI")
"IX",53.79,53.79,"AINJOI",11.1,0)
^.114IA^4^4
"IX",53.79,53.79,"AINJOI",11.1,1,0)
1^F^53.79^.01^^1^F
"IX",53.79,53.79,"AINJOI",11.1,2,0)
2^F^53.79^.08^^2^F
"IX",53.79,53.79,"AINJOI",11.1,3,0)
3^F^53.79^.06^^3^F
"IX",53.79,53.79,"AINJOI",11.1,4,0)
4^F^53.79^.16^30^4^F
"IX",53.79,53.79,"AMRR",0)
53.79^AMRR^Updates AMRR when DFN or admin date/time changes.^R^^F^IR^I^53.79^^^^^S
"IX",53.79,53.79,"AMRR",1)
S ^PSB(53.79,"AMRR",X(1),X(2),DA)=""
"IX",53.79,53.79,"AMRR",1.4)
S X=0 N I S I=0 F  S I=$O(^PSB(53.79,DA,.5,I)) Q:'I  I ($P($G(^(I,0)),U,6)>0)&($P(^PSB(53.79,DA,0),U,9)="G") S X=1 Q
"IX",53.79,53.79,"AMRR",2)
K ^PSB(53.79,"AMRR",X(1),X(2),DA)
"IX",53.79,53.79,"AMRR",2.4)
S X=0 N I S I=0 F  S I=$O(^PSB(53.79,DA,.5,I)) Q:'I  I $P($G(^(I,0)),U,6)>0 S X=1 Q
"IX",53.79,53.79,"AMRR",2.5)
K ^PSB(53.79,"AMRR")
"IX",53.79,53.79,"AMRR",11.1,0)
^.114IA^2^2
"IX",53.79,53.79,"AMRR",11.1,1,0)
1^F^53.79^.01^^1^F
"IX",53.79,53.79,"AMRR",11.1,2,0)
2^F^53.79^.06^^2^F
"IX",53.79,53.79,"AORDX",0)
53.79^AORDX^DFN,ORDER NUMBER,ADMIN DATE/TIME^R^^R^IR^I^53.79^^^^^S
"IX",53.79,53.79,"AORDX",.1,0)
^^2^2^3001106^
"IX",53.79,53.79,"AORDX",.1,1,0)
Cross reference by; .01 PATIENT NAME; .11 ORDER REFERENCE NUMBER; and .06
"IX",53.79,53.79,"AORDX",.1,2,0)
ADMINISTRATION DATE/TIME.
"IX",53.79,53.79,"AORDX",1)
S ^PSB(53.79,"AORDX",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,15),DA)=""
"IX",53.79,53.79,"AORDX",2)
K ^PSB(53.79,"AORDX",$E(X(1),1,30),$E(X(2),1,15),$E(X(3),1,15),DA)
"IX",53.79,53.79,"AORDX",2.5)
K ^PSB(53.79,"AORDX")
"IX",53.79,53.79,"AORDX",11.1,0)
^.114IA^3^3
"IX",53.79,53.79,"AORDX",11.1,1,0)
1^F^53.79^.01^30^1^F
"IX",53.79,53.79,"AORDX",11.1,2,0)
2^F^53.79^.11^15^2^F
"IX",53.79,53.79,"AORDX",11.1,3,0)
3^F^53.79^.06^15^3^F
"IX",53.79,53.79,"APATCH",0)
53.79^APATCH^Updates APATCH when DFN or admin date/time changes.^R^^F^IR^I^53.79^^^^^S
"IX",53.79,53.79,"APATCH",1)
S ^PSB(53.79,"APATCH",X(1),X(2),DA)=""
"IX",53.79,53.79,"APATCH",1.4)
S X=0 N I S I=0 F  S I=$O(^PSB(53.79,DA,.5,I)) Q:'I  I ($P($G(^(I,0)),U,4)="PATCH")&($P(^PSB(53.79,DA,0),U,9)="G") S X=1 Q
"IX",53.79,53.79,"APATCH",2)
K ^PSB(53.79,"APATCH",X(1),X(2),DA)
"IX",53.79,53.79,"APATCH",2.4)
S X=0 N I S I=0 F  S I=$O(^PSB(53.79,DA,.5,I)) Q:'I  I $P($G(^(I,0)),U,4)="PATCH" S X=1 Q
"IX",53.79,53.79,"APATCH",2.5)
K ^PSB(53.79,"APATCH")
"IX",53.79,53.79,"APATCH",11.1,0)
^.114IA^2^2
"IX",53.79,53.79,"APATCH",11.1,1,0)
1^F^53.79^.01^^1^F
"IX",53.79,53.79,"APATCH",11.1,2,0)
2^F^53.79^.06^^2^F
"IX",53.79,53.79,"ASTOPPED",0)
53.79^ASTOPPED^Index of IV's that are status Stopped.^R^^R^IR^I^53.79^^^^^S
"IX",53.79,53.79,"ASTOPPED",.1,0)
^^3^3^3120910^
"IX",53.79,53.79,"ASTOPPED",.1,1,0)
Updates ASTOPPED when DFN or admin date/time changes and Action Status  
"IX",53.79,53.79,"ASTOPPED",.1,2,0)
is "S" for stopped or kill index when Action Status changes from "S" to 
"IX",53.79,53.79,"ASTOPPED",.1,3,0)
anything else.
"IX",53.79,53.79,"ASTOPPED",1)
S ^PSB(53.79,"ASTOPPED",X(1),X(2),DA)=""
"IX",53.79,53.79,"ASTOPPED",1.4)
S X=0 I $P(^PSB(53.79,DA,0),U,9)="S",$P(^PSB(53.79,DA,0),U,10)]"" S X=1
"IX",53.79,53.79,"ASTOPPED",2)
K ^PSB(53.79,"ASTOPPED",X(1),X(2),DA)
"IX",53.79,53.79,"ASTOPPED",2.4)
S X=0 I $P(^PSB(53.79,DA,0),U,9)'="S" S X=1
"IX",53.79,53.79,"ASTOPPED",2.5)
K ^PSB(53.79,"ASTOPPED")
"IX",53.79,53.79,"ASTOPPED",11.1,0)
^.114IA^2^2
"IX",53.79,53.79,"ASTOPPED",11.1,1,0)
1^F^53.79^.01^^1^F
"IX",53.79,53.79,"ASTOPPED",11.1,1,3)

"IX",53.79,53.79,"ASTOPPED",11.1,2,0)
2^F^53.79^.06^^2^F
"IX",53.79,53.79,"ASTOPPED",11.1,2,3)

"IX",53.79,53.795,"AMRR",0)
53.795^AMRR^Sets AMRR cross-refernece when Prompt For Removal BCMA > 0^MU^^F^IR^I^53.795^^^^^A
"IX",53.79,53.795,"AMRR",1)
N I S I=0 X "F  S I=$O(^PSB(53.79,DA(1),.5,I)) Q:'I  Q:$P($G(^(I,0)),U,6)>0" S:I ^PSB(53.79,"AMRR",X(1),X(2),DA(1))="" K:'I ^PSB(53.79,"AMRR",X(1),X(2),DA(1))
"IX",53.79,53.795,"AMRR",1.4)
S X=X1(3)>0!(X2(3)>0)
"IX",53.79,53.795,"AMRR",2)
N I S I=0 X "F  S I=$O(^PSB(53.79,DA(1),.5,I)) Q:'I  Q:$P($G(^(I,0)),U,6)>0&(I'=DA)" S:I ^PSB(53.79,"AMRR",X(1),X(2),DA(1))="" K:'I ^PSB(53.79,"AMRR",X(1),X(2),DA(1))
"IX",53.79,53.795,"AMRR",2.4)
S X=X1(3)>0&(X2(3)>0)
"IX",53.79,53.795,"AMRR",11.1,0)
^.114IA^3^3
"IX",53.79,53.795,"AMRR",11.1,1,0)
1^C^^^^1
"IX",53.79,53.795,"AMRR",11.1,1,1.5)
S X=$P(^PSB(53.79,DA(1),0),U)
"IX",53.79,53.795,"AMRR",11.1,2,0)
2^C^^^^2
"IX",53.79,53.795,"AMRR",11.1,2,1.5)
S X=$P(^PSB(53.79,DA(1),0),U,6)
"IX",53.79,53.795,"AMRR",11.1,3,0)
3^F^53.795^.06^^3^F
"KRN",.403,5,-1)
0^1
"KRN",.403,5,0)
PSB MED LOG EDIT^@^@^^2990323.1252^^^53.79^0^0^1
"KRN",.403,5,40,0)
^.4031I^2^2
"KRN",.403,5,40,1,0)
1^^1,1
"KRN",.403,5,40,1,1)
Page 1
"KRN",.403,5,40,1,40,0)
^.4032IP^317^1
"KRN",.403,5,40,1,40,317,0)
PSB MED LOG EDIT^1^1,1^e
"KRN",.403,5,40,2,0)
2^^5,5^^^1^15,75
"KRN",.403,5,40,2,1)
Page 2
"KRN",.403,5,40,2,40,0)
^.4032IP^319^2
"KRN",.403,5,40,2,40,318,0)
PSB MED LOG EDIT DD HDR^1^1,1^d
"KRN",.403,5,40,2,40,319,0)
PSB MED LOG EDIT DD^2^4,3^e
"KRN",.403,5,40,2,40,319,2)
3^B^f^0
"KRN",.403,92,-1)
0^2
"KRN",.403,92,0)
PSB NEW UD ENTRY^^@^^2990323.1252^^^53.79^0^0^1
"KRN",.403,92,11)
S PSBSAVE=0
"KRN",.403,92,12)

"KRN",.403,92,14)
S PSBSAVE=1
"KRN",.403,92,20)

"KRN",.403,92,40,0)
^.4031I^2^2
"KRN",.403,92,40,1,0)
1^^1,1
"KRN",.403,92,40,1,1)
Page 1
"KRN",.403,92,40,1,40,0)
^.4032IP^320^1
"KRN",.403,92,40,1,40,320,0)
PSB NEW UD ENTRY^1^1,1^e
"KRN",.403,92,40,2,0)
2^^5,5^^^1^15,75
"KRN",.403,92,40,2,1)
Page 2
"KRN",.403,92,40,2,40,0)
^.4032IP^322^2
"KRN",.403,92,40,2,40,321,0)
PSB NEW UD ENTRY DD HDR^1^1,1^d
"KRN",.403,92,40,2,40,322,0)
PSB NEW UD ENTRY DD^2^4,3^e
"KRN",.403,92,40,2,40,322,2)
3^B^f^1
"KRN",.403,92,40,2,40,322,11)
I $G(PSBDOSEF)="PATCH" D UNED^DDSUTL(4,,,1,DDSDA)
"KRN",.403,92,40,2,40,322,12)

"KRN",.404,317,0)
PSB MED LOG EDIT^53.79
"KRN",.404,317,40,0)
^.4044I^14^14
"KRN",.404,317,40,1,0)
4^^3
"KRN",.404,317,40,1,1)
.01
"KRN",.404,317,40,1,2)
4,16^30
"KRN",.404,317,40,1,4)
0^^^1
"KRN",.404,317,40,2,0)
1^Medication Log Edit UD/PB^1
"KRN",.404,317,40,2,2)
^^1,1
"KRN",.404,317,40,3,0)
2^!M^1
"KRN",.404,317,40,3,.1)
S Y=$TR($J("",IOM)," ","-")
"KRN",.404,317,40,3,2)
^^2,1
"KRN",.404,317,40,4,0)
5^!M^1
"KRN",.404,317,40,4,.1)
S Y="SSN: "_$$GET1^DIQ(2,$P(^PSB(53.79,DA,0),U)_",",.09)
"KRN",.404,317,40,4,2)
^^4,47
"KRN",.404,317,40,5,0)
7^Admin Status^3
"KRN",.404,317,40,5,1)
.09
"KRN",.404,317,40,5,2)
7,18^7^7,2
"KRN",.404,317,40,5,14)
D VALID^PSBMLEN
"KRN",.404,317,40,6,0)
8^Admin Date/Time^3
"KRN",.404,317,40,6,1)
.06
"KRN",.404,317,40,6,2)
7,44^20^7,27
"KRN",.404,317,40,7,0)
10^PRN Reason^3
"KRN",.404,317,40,7,1)
.21
"KRN",.404,317,40,7,2)
11,22^58^11,2
"KRN",.404,317,40,8,0)
11^PRN Effectiveness^3
"KRN",.404,317,40,8,1)
.22
"KRN",.404,317,40,8,2)
12,22^58^12,2
"KRN",.404,317,40,9,0)
13^Comment (Required)^2
"KRN",.404,317,40,9,2)
17,2^78^16,2
"KRN",.404,317,40,9,4)
1
"KRN",.404,317,40,9,20)
F^^1:150
"KRN",.404,317,40,9,23)
D COMMENT^PSBML(DA,X)
"KRN",.404,317,40,10,0)
6^Medication^3
"KRN",.404,317,40,10,1)
.08
"KRN",.404,317,40,10,2)
5,16^40^5,2
"KRN",.404,317,40,10,4)
^^^1
"KRN",.404,317,40,11,0)
3^Patient:^1
"KRN",.404,317,40,11,2)
^^4,2
"KRN",.404,317,40,12,0)
9^Injection Site^3
"KRN",.404,317,40,12,1)
.16
"KRN",.404,317,40,12,2)
8,18^30^8,2
"KRN",.404,317,40,13,0)
12^Dispense Drugs...^2
"KRN",.404,317,40,13,2)
14,22^1^14,2^1
"KRN",.404,317,40,13,7)
^2
"KRN",.404,317,40,13,20)
F^^1:1
"KRN",.404,317,40,14,0)
9.1^Dermal Site^3
"KRN",.404,317,40,14,1)
.18
"KRN",.404,317,40,14,2)
9,15^30^9,2
"KRN",.404,318,0)
PSB MED LOG EDIT DD HDR^53.79^
"KRN",.404,318,40,0)
^.4044I^3^3
"KRN",.404,318,40,1,0)
1^ Dispense Drugs ^1
"KRN",.404,318,40,1,2)
^^1,2
"KRN",.404,318,40,2,0)
2^Drug Name                        Order   Given  Units^1
"KRN",.404,318,40,2,2)
^^3,3
"KRN",.404,318,40,3,0)
3^Units   Units^1
"KRN",.404,318,40,3,2)
^^2,36
"KRN",.404,319,0)
PSB MED LOG EDIT DD^53.795
"KRN",.404,319,40,0)
^.4044I^4^4
"KRN",.404,319,40,1,0)
1^^3
"KRN",.404,319,40,1,1)
.01
"KRN",.404,319,40,1,2)
1,1^30
"KRN",.404,319,40,1,4)
^^^0
"KRN",.404,319,40,2,0)
2^^3
"KRN",.404,319,40,2,1)
.02
"KRN",.404,319,40,2,2)
1,33^6
"KRN",.404,319,40,2,4)
^^1^1
"KRN",.404,319,40,3,0)
3^^3
"KRN",.404,319,40,3,1)
.03
"KRN",.404,319,40,3,2)
1,41^6
"KRN",.404,319,40,3,4)
1^^1
"KRN",.404,319,40,4,0)
4^^3
"KRN",.404,319,40,4,1)
.04
"KRN",.404,319,40,4,2)
1,49^10
"KRN",.404,319,40,4,4)
1
"KRN",.404,320,0)
PSB NEW UD ENTRY^53.79
"KRN",.404,320,40,0)
^.4044I^14^14
"KRN",.404,320,40,1,0)
4^^3
"KRN",.404,320,40,1,1)
.01
"KRN",.404,320,40,1,2)
4,16^30
"KRN",.404,320,40,1,4)
0^^^1
"KRN",.404,320,40,2,0)
1^Medication Log Manual Entry - Unit Dose Order^1
"KRN",.404,320,40,2,2)
^^1,1
"KRN",.404,320,40,3,0)
2^!M^1
"KRN",.404,320,40,3,.1)
S Y=$TR($J("",IOM)," ","-")
"KRN",.404,320,40,3,2)
^^2,1
"KRN",.404,320,40,4,0)
5^!M^1
"KRN",.404,320,40,4,.1)
S Y="SSN: "_$$GET1^DIQ(2,$P(^PSB(53.79,DA,0),U)_",",.09)
"KRN",.404,320,40,4,2)
^^4,47
"KRN",.404,320,40,5,0)
7^Admin Status^3
"KRN",.404,320,40,5,1)
.09
"KRN",.404,320,40,5,2)
7,18^7^7,2
"KRN",.404,320,40,5,13)
D SCRNPTCH^PSBUTL
"KRN",.404,320,40,5,14)
D VALID^PSBMLEN
"KRN",.404,320,40,6,0)
8^Admin Date/Time^3
"KRN",.404,320,40,6,1)
.06
"KRN",.404,320,40,6,2)
7,44^20^7,27
"KRN",.404,320,40,6,4)
1^^^0
"KRN",.404,320,40,6,14)
D FDATE^PSBMLEN1
"KRN",.404,320,40,7,0)
10^PRN Reason^3
"KRN",.404,320,40,7,1)
.21
"KRN",.404,320,40,7,2)
11,22^58^11,2
"KRN",.404,320,40,8,0)
11^PRN Effectiveness^3
"KRN",.404,320,40,8,1)
.22
"KRN",.404,320,40,8,2)
12,22^58^12,2
"KRN",.404,320,40,9,0)
13^Comment (Required)^2
"KRN",.404,320,40,9,2)
17,2^78^16,2
"KRN",.404,320,40,9,4)
1
"KRN",.404,320,40,9,12)
D:$G(PSBGPTCH) GIVEPTCH^PSBUTL
"KRN",.404,320,40,9,20)
F^^1:150
"KRN",.404,320,40,9,23)
D COMMENT^PSBML(DA,X)
"KRN",.404,320,40,10,0)
6^Medication^3
"KRN",.404,320,40,10,1)
.08
"KRN",.404,320,40,10,2)
5,16^40^5,2
"KRN",.404,320,40,10,4)
^^^1
"KRN",.404,320,40,11,0)
3^Patient:^1
"KRN",.404,320,40,11,2)
^^4,2
"KRN",.404,320,40,12,0)
9^Injection Site^3
"KRN",.404,320,40,12,1)
.16
"KRN",.404,320,40,12,2)
8,18^30^8,2
"KRN",.404,320,40,13,0)
12^Dispense Drugs...^2
"KRN",.404,320,40,13,2)
14,22^1^14,2^1
"KRN",.404,320,40,13,7)
^2
"KRN",.404,320,40,13,20)
F^^1:1
"KRN",.404,320,40,14,0)
9.1^Dermal Site^3
"KRN",.404,320,40,14,1)
.18
"KRN",.404,320,40,14,2)
9,15^30^9,2
"KRN",.404,321,0)
PSB NEW UD ENTRY DD HDR^53.79^
"KRN",.404,321,40,0)
^.4044I^3^3
"KRN",.404,321,40,1,0)
1^ Dispense Drugs ^1
"KRN",.404,321,40,1,2)
^^1,2
"KRN",.404,321,40,2,0)
2^Drug Name                        Order   Given  Units^1
"KRN",.404,321,40,2,2)
^^3,3
"KRN",.404,321,40,3,0)
3^Units   Units^1
"KRN",.404,321,40,3,2)
^^2,36
"KRN",.404,322,0)
PSB NEW UD ENTRY DD^53.795
"KRN",.404,322,11)

"KRN",.404,322,12)

"KRN",.404,322,40,0)
^.4044I^4^4
"KRN",.404,322,40,1,0)
1^^3
"KRN",.404,322,40,1,1)
.01
"KRN",.404,322,40,1,2)
1,1^30
"KRN",.404,322,40,1,4)
^^^1
"KRN",.404,322,40,2,0)
2^^3
"KRN",.404,322,40,2,1)
.02
"KRN",.404,322,40,2,2)
1,33^6
"KRN",.404,322,40,2,4)
^^1^1
"KRN",.404,322,40,3,0)
3^^3
"KRN",.404,322,40,3,1)
.03
"KRN",.404,322,40,3,2)
1,41^6
"KRN",.404,322,40,3,4)
1^^1
"KRN",.404,322,40,4,0)
4^^3
"KRN",.404,322,40,4,1)
.04
"KRN",.404,322,40,4,2)
1,49^10
"KRN",.404,322,40,4,4)
1^^^0
"KRN",.404,322,40,4,13)
D UNITS^PSBMLEN
"KRN",19,11586,-1)
0^3
"KRN",19,11586,0)
PSB GUI CONTEXT - USER^BCMA Client Context^^B^^^^^^^^
"KRN",19,11586,99)
59973,28281
"KRN",19,11586,99.1)
64097,64721
"KRN",19,11586,"RPC",0)
^19.05P^60^60
"KRN",19,11586,"RPC",2,0)
PSB FMDATE
"KRN",19,11586,"RPC",4,0)
PSB GETPRNS
"KRN",19,11586,"RPC",5,0)
PSB INSTRUCTOR
"KRN",19,11586,"RPC",7,0)
PSB MEDICATION HISTORY
"KRN",19,11586,"RPC",8,0)
PSB PARAMETER
"KRN",19,11586,"RPC",12,0)
PSB SCANMED
"KRN",19,11586,"RPC",13,0)
PSB SCANPT
"KRN",19,11586,"RPC",14,0)
PSB SERVER CLOCK VARIANCE
"KRN",19,11586,"RPC",15,0)
PSB SUBMIT MISSING DOSE
"KRN",19,11586,"RPC",16,0)
PSB TRANSACTION
"KRN",19,11586,"RPC",17,0)
PSB USERLOAD
"KRN",19,11586,"RPC",18,0)
PSB USERSAVE
"KRN",19,11586,"RPC",19,0)
PSB VALIDATE ESIG
"KRN",19,11586,"RPC",20,0)
PSB VALIDATE ORDER
"KRN",19,11586,"RPC",21,0)
PSB CHECK SERVER
"KRN",19,11586,"RPC",23,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,11586,"RPC",24,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11586,"RPC",26,0)
PSB GETORDERTAB
"KRN",19,11586,"RPC",27,0)
PSB GETIVPAR
"KRN",19,11586,"RPC",28,0)
PSB PUTIVPAR
"KRN",19,11586,"RPC",29,0)
PSB DEVICE
"KRN",19,11586,"RPC",30,0)
PSB IV ORDER HISTORY
"KRN",19,11586,"RPC",31,0)
PSB BAG DETAIL
"KRN",19,11586,"RPC",32,0)
PSB WARDLIST
"KRN",19,11586,"RPC",33,0)
PSB MAIL
"KRN",19,11586,"RPC",34,0)
PSB ALLERGY
"KRN",19,11586,"RPC",35,0)
PSB GETPROVIDER
"KRN",19,11586,"RPC",37,0)
PSB MOB DRUG LIST
"KRN",19,11586,"RPC",38,0)
PSB MAXDAYS
"KRN",19,11586,"RPC",39,0)
PSB NURS WARDLIST
"KRN",19,11586,"RPC",40,0)
PSB CPRS ORDER
"KRN",19,11586,"RPC",41,0)
ORWUBCMA USERINFO
"KRN",19,11586,"RPC",43,0)
ORBCMA5 GETUDID
"KRN",19,11586,"RPC",44,0)
ORBCMA5 GETIVID
"KRN",19,11586,"RPC",45,0)
PSB VERSION CHECK
"KRN",19,11586,"RPC",46,0)
PSB CHECK IV
"KRN",19,11586,"RPC",47,0)
PSB VITALS
"KRN",19,11586,"RPC",48,0)
PSB VITAL MEAS FILE
"KRN",19,11586,"RPC",49,0)
PSB MED LOG LOOKUP
"KRN",19,11586,"RPC",50,0)
PSB COVERSHEET1
"KRN",19,11586,"RPC",51,0)
PSB UTL XSTATUS SRCH
"KRN",19,11586,"RPC",52,0)
PSB MAN SCAN FAILURE
"KRN",19,11586,"RPC",55,0)
PSB REPORT
"KRN",19,11586,"RPC",56,0)
PSB GETINJECTIONSITE
"KRN",19,11586,"RPC",57,0)
PSB CLINICLIST
"KRN",19,11586,"RPC",58,0)
PSB WITNESS
"KRN",19,11586,"RPC",59,0)
PSB MEDS ON PATIENT
"KRN",19,11586,"RPC",60,0)
PSB GETSETWP
"KRN",19,11586,"U")
BCMA CLIENT CONTEXT
"KRN",19,11598,-1)
2^1
"KRN",19,11598,0)
PSB MGR^Bar Code Medication Administration Manager^^M^10000000035^PSB MANAGER^^^^^^536
"KRN",19,11598,10,0)
^19.01IP^18^18
"KRN",19,11598,10,18,0)
14556
"KRN",19,11598,10,18,"^")
PSS MRR ORDERS DIAGNOSTIC RPT
"KRN",19,11598,"U")
BAR CODE MEDICATION ADMINISTRA
"KRN",19,14556,-1)
0^2
"KRN",19,14556,0)
PSS MRR ORDERS DIAGNOSTIC RPT^Orders for MRRs With Removal Properties^^R^^^^^^^^PHARMACY DATA MANAGEMENT
"KRN",19,14556,1,0)
^^7^7^3151020^
"KRN",19,14556,1,1,0)
This option enables you to determine which active orders contain 
"KRN",19,14556,1,2,0)
Orderable Items that have the new "Prompt for Removal in BCMA" flag value 
"KRN",19,14556,1,3,0)
set to 1, 2 or 3 that need to be discontinued and entered as New (not 
"KRN",19,14556,1,4,0)
copied, edited or renewed) AFTER the installation of Pharmacy Inpatient 
"KRN",19,14556,1,5,0)
Medications PSJ*5.0*315. Failure to re-create these orders could result
"KRN",19,14556,1,6,0)
in confusing information to display on the BCMA VDL if displayed along
"KRN",19,14556,1,7,0)
side newer MRR orders that do have the updated removal information.
"KRN",19,14556,25)
EN^PSSMRRDG
"KRN",19,14556,"U")
ORDERS FOR MRRS WITH REMOVAL P
"KRN",8989.51,34,0)
PSB VDL INCL ON-CALL^Include On Call Meds^0^^INCLUDE ON CALL MEDS ON DUE LIST^0
"KRN",8989.51,34,1)
Y^^Enter 'Y' to have On-Call Meds included in the initial VDL
"KRN",8989.51,34,20,0)
^8989.512^2^2^3030509^^
"KRN",8989.51,34,20,1,0)
Determines wether initial Due List View contains On Call
"KRN",8989.51,34,20,2,0)
medications.
"KRN",8989.51,34,30,0)
^8989.513I^1^1
"KRN",8989.51,34,30,1,0)
1^4
"KRN",8989.51,35,0)
PSB ONLINE^Is BCMA System On-Line^0^^IS BCMA ON-LINE^0
"KRN",8989.51,35,1)
Y
"KRN",8989.51,35,20,0)
^8989.512^2^2^3080416^^^^
"KRN",8989.51,35,20,1,0)
Used by the M Server and/or Application GUI Server administrator to 
"KRN",8989.51,35,20,2,0)
flag all client BCMA processes to stop.
"KRN",8989.51,35,30,0)
^8989.513I^1^1
"KRN",8989.51,35,30,1,0)
1^4
"KRN",8989.51,36,0)
PSB VDL START TIME^Default hours prior to NOW for the VDL^0^^HOURS PRIOR TO NOW FOR VDL^0
"KRN",8989.51,36,1)
N^0:24:0^Enter the number of hours prior to NOW that the VDL will initially display
"KRN",8989.51,36,20,0)
^^2^2^2990323^
"KRN",8989.51,36,20,1,0)
Default number of hours prior to NOW that the VDL will display when 
"KRN",8989.51,36,20,2,0)
initially displayed.
"KRN",8989.51,36,30,0)
^8989.513I^2^2
"KRN",8989.51,36,30,1,0)
1^200
"KRN",8989.51,36,30,2,0)
2^4
"KRN",8989.51,37,0)
PSB VDL INCL CONT^Include Continuous Meds^0^^INCLUDE CONTINUOUS MEDS ON DUE LIST^0
"KRN",8989.51,37,1)
Y^^Enter 'Y' to have Continuous Meds included in the initial VDL
"KRN",8989.51,37,20,0)
^8989.512^2^2^3030509^^
"KRN",8989.51,37,20,1,0)
Determines wheter initial Due List View contains continuous 
"KRN",8989.51,37,20,2,0)
medications.
"KRN",8989.51,37,30,0)
^8989.513I^1^1
"KRN",8989.51,37,30,1,0)
1^4
"KRN",8989.51,39,0)
PSB ROBOT RX^Using Robot RX^0^^USING ROBOT RX^0
"KRN",8989.51,39,1)
Y
"KRN",8989.51,39,20,0)
^8989.512^1^1^3010726^^^
"KRN",8989.51,39,20,1,0)
Parameter should be "yes" if site is using the robot RX.
"KRN",8989.51,39,30,0)
^8989.513I^1^1
"KRN",8989.51,39,30,1,0)
1^4
"KRN",8989.51,264,0)
PSB VDL STOP TIME^Default hours after NOW for the VDL^0^zzinstance^HOURS AFTER NOW FOR VDL^0
"KRN",8989.51,264,1)
N^0:24:0^Enter the number of hours after NOW that the VDL will initially display
"KRN",8989.51,264,20,0)
^^2^2^2990323^
"KRN",8989.51,264,20,1,0)
Default number of hours after NOW that the VDL will display when 
"KRN",8989.51,264,20,2,0)
initially displayed.
"KRN",8989.51,264,30,0)
^8989.513I^2^2
"KRN",8989.51,264,30,1,0)
1^200
"KRN",8989.51,264,30,2,0)
2^4
"KRN",8989.51,266,0)
PSB VDL INCL PRN^Include PRN Meds^0^^INCLUDE PRN MEDS ON DUE LIST^0
"KRN",8989.51,266,1)
Y^^Enter 'Y' to have PRN Meds included in the initial VDL
"KRN",8989.51,266,20,0)
^8989.512^1^1^3030509^^^^
"KRN",8989.51,266,20,1,0)
Determines wether initial Due List View contains PRN medications.
"KRN",8989.51,266,30,0)
^8989.513I^3^1
"KRN",8989.51,266,30,3,0)
1^4
"KRN",8989.51,267,0)
PSB VDL INCL ONE-TIME^Include One-Time Meds^0^^INCLUDE ONE-TIME MEDS ON DUE LIST^0
"KRN",8989.51,267,1)
Y^^Enter 'Y' to have One-Time Meds included in the initial VDL
"KRN",8989.51,267,20,0)
^8989.512^2^2^3030509^^
"KRN",8989.51,267,20,1,0)
Determines wether initial Due List View contains One-Time
"KRN",8989.51,267,20,2,0)
medications.
"KRN",8989.51,267,30,0)
^8989.513I^1^1
"KRN",8989.51,267,30,1,0)
1^4
"KRN",8989.51,271,0)
PSB MG DUE LIST ERROR^Due List Error Notification Mail Group^0^^DUE LIST ERRORS MAIL GROUP^0
"KRN",8989.51,271,1)
P^3.8
"KRN",8989.51,271,20,0)
^8989.512^2^2^3060607^^^^
"KRN",8989.51,271,20,1,0)
Mailgroup to notify when an order is unable to be validated and placed 
"KRN",8989.51,271,20,2,0)
on the Due List.
"KRN",8989.51,271,30,0)
^8989.513I^1^1
"KRN",8989.51,271,30,1,0)
1^4
"KRN",8989.51,272,0)
PSB ADMIN ESIG^Require E-Sig to Administer^0^^REQUIRE ESIG TO ADMINISTER^0
"KRN",8989.51,272,1)
Y
"KRN",8989.51,272,20,0)
^^2^2^2990323^^^^
"KRN",8989.51,272,20,1,0)
Determines if a user must supply their electronic signature code prior 
"KRN",8989.51,272,20,2,0)
to administering any medications.
"KRN",8989.51,272,30,0)
^8989.513I^1^1
"KRN",8989.51,272,30,1,0)
1^4
"KRN",8989.51,273,0)
PSB ADMIN BEFORE^Allowed Mins Before Sched Admin^0^^ALLOWED MINS BEFORE SCHED TIME
"KRN",8989.51,273,1)
N^10:240:0^enter a number between 10-240 on even ten minute increments.
"KRN",8989.51,273,2)
K:X#10 X
"KRN",8989.51,273,20,0)
^^2^2^2990325^^
"KRN",8989.51,273,20,1,0)
This parameter contains the number of minutes before a scheduled 
"KRN",8989.51,273,20,2,0)
administration time is allowed without filing a variance.
"KRN",8989.51,273,30,0)
^8989.513I^1^1
"KRN",8989.51,273,30,1,0)
1^4
"KRN",8989.51,274,0)
PSB ADMIN AFTER^Allowed Mins After Sched Admin^0^^ALLOWED MINS AFTER SCHED TIME
"KRN",8989.51,274,1)
N^10:240:0^enter a number between 10-240 on even ten minute increments.
"KRN",8989.51,274,2)
K:X#10 X
"KRN",8989.51,274,20,0)
^8989.512^2^2^3021114^^^^
"KRN",8989.51,274,20,1,0)
This parameter contains the number of minutes after a scheduled 
"KRN",8989.51,274,20,2,0)
administration time is allowed without filing a variance.
"KRN",8989.51,274,30,0)
^8989.513I^1^1
"KRN",8989.51,274,30,1,0)
1^4
"KRN",8989.51,275,0)
PSB ADMIN PRN EFFECT^Allowed Mins to Enter PRN Effect^0^^ALLOWED MINS FOR PRN EFFECT
"KRN",8989.51,275,1)
N^10:960:0^enter a number between 10-960 on even ten minute increments.
"KRN",8989.51,275,2)
K:X#10 X
"KRN",8989.51,275,20,0)
^8989.512^2^2^3110307^^
"KRN",8989.51,275,20,1,0)
The number of minutes allowed to elapse between PRN administration and 
"KRN",8989.51,275,20,2,0)
entry of PRN Effectiveness.
"KRN",8989.51,275,30,0)
^8989.513I^1^1
"KRN",8989.51,275,30,1,0)
1^4
"KRN",8989.51,276,0)
PSB HFS SCRATCH^Scratch HFS Directory^0^^SCRATCH HFS DIRECTORY^0
"KRN",8989.51,276,1)
F^1:50^Enter a valid HFS Directory Name
"KRN",8989.51,276,20,0)
^^2^2^2990323^
"KRN",8989.51,276,20,1,0)
Name of an HFS directory that all BCMA processes will be able to 
"KRN",8989.51,276,20,2,0)
access through ^%ZISH for printing documents.
"KRN",8989.51,276,30,0)
^8989.513I^1^1
"KRN",8989.51,276,30,1,0)
1^4
"KRN",8989.51,278,0)
PSB MG SYSTEM ERROR^System Error Notification Mail Group^0^^SYSTEM ERRORS MAIL GROUP^0
"KRN",8989.51,278,1)
P^3.8
"KRN",8989.51,278,20,0)
^^2^2^2990323^
"KRN",8989.51,278,20,1,0)
Mailgroup to notify when an unexplained error occurs with the 
"KRN",8989.51,278,20,2,0)
software.
"KRN",8989.51,278,30,0)
^8989.513I^1^1
"KRN",8989.51,278,30,1,0)
1^4
"KRN",8989.51,279,0)
PSB MG MISSING DOSE^Missing Dose Notification Mail Group^0^^MISSING DOSE MAIL GROUP^0
"KRN",8989.51,279,1)
P^3.8
"KRN",8989.51,279,20,0)
^8989.512^1^1^3060607^^
"KRN",8989.51,279,20,1,0)
Mailgroup to notify when a missing dose is requested.
"KRN",8989.51,279,30,0)
^8989.513I^2^2
"KRN",8989.51,279,30,1,0)
1^44
"KRN",8989.51,279,30,2,0)
2^4
"KRN",8989.51,281,0)
PSB ADMIN MULTIPLE ONCALL^Allow Multi Admin On-Call^0^^ALLOW MULTIPLE ON CALL ADMINS^0
"KRN",8989.51,281,1)
Y
"KRN",8989.51,281,20,0)
^^2^2^2990323^^^
"KRN",8989.51,281,20,1,0)
Determines if this Division will allow multiple administrations against an
"KRN",8989.51,281,20,2,0)
On-Call order.
"KRN",8989.51,281,30,0)
^8989.513I^1^1
"KRN",8989.51,281,30,1,0)
1^4
"KRN",8989.51,282,0)
PSB PRINTER MISSING DOSE^Missing Dose Printer^0^Printer DEVICE^MISSING DOSE PRINTER^0
"KRN",8989.51,282,1)
P^3.5
"KRN",8989.51,282,6)
^^
"KRN",8989.51,282,20,0)
^^2^2^3120820^
"KRN",8989.51,282,20,1,0)
Device to print to when a missing dose is requested for an Inpatient 
"KRN",8989.51,282,20,2,0)
Medications Order.
"KRN",8989.51,282,30,0)
^8989.513I^2^2
"KRN",8989.51,282,30,1,0)
1^44
"KRN",8989.51,282,30,2,0)
2^4
"KRN",8989.51,283,0)
PSB VDL INCL IV MEDS^Include IV Med Orders^0^^INCLUDE IV MEDS ON DUE LIST^0
"KRN",8989.51,283,1)
Y^^Enter 'Y' to have IV Order Meds included in the initial VDL
"KRN",8989.51,283,20,0)
^^1^1^2990323^
"KRN",8989.51,283,20,1,0)
Determines wether initial Due List View contains IV Medications.
"KRN",8989.51,283,30,0)
^8989.513I^2^2
"KRN",8989.51,283,30,1,0)
1^200
"KRN",8989.51,283,30,2,0)
2^4
"KRN",8989.51,284,0)
PSB VDL INCL UD MEDS^Include Unit Dose Med Orders^0^^INCLUDE UNIT DOSE MEDS ON DUE LIST^0
"KRN",8989.51,284,1)
Y^^Enter 'Y' to have Unit Dose Meds included in the initial VDL
"KRN",8989.51,284,20,0)
^^2^2^2990323^
"KRN",8989.51,284,20,1,0)
Determines wether initial Due List View contains Unit Dose
"KRN",8989.51,284,20,2,0)
medications.
"KRN",8989.51,284,30,0)
^8989.513I^2^2
"KRN",8989.51,284,30,1,0)
1^200
"KRN",8989.51,284,30,2,0)
2^4
"KRN",8989.51,285,0)
PSB VDL INCL BLANKS^Include Blank Addendums at end^0^^INCLUDE BLANKS ADDENDUMS ON DUE LIST^0
"KRN",8989.51,285,1)
Y^^Enter 'Y' to have Addendums print at end of DL
"KRN",8989.51,285,20,0)
^^2^2^2990323^
"KRN",8989.51,285,20,1,0)
Used to flag wether or not to print the blank order requests at the 
"KRN",8989.51,285,20,2,0)
bottom of the printed DUE LIST.
"KRN",8989.51,285,30,0)
^8989.513I^2^2
"KRN",8989.51,285,30,1,0)
1^200
"KRN",8989.51,285,30,2,0)
2^4
"KRN",8989.51,287,0)
PSB SERVER CLOCK VARIANCE^Allowable client-server time variance^0^^ALLOWABLE SERVER CLOCK VARIANCE
"KRN",8989.51,287,1)
N^0:30:0^Enter a number between 0 and 30
"KRN",8989.51,287,20,0)
^^3^3^2990323^
"KRN",8989.51,287,20,1,0)
Used by the client at application startup to ensure that the client 
"KRN",8989.51,287,20,2,0)
clock is within a predetermined number of minutes of the server time 
"KRN",8989.51,287,20,3,0)
before allowing the client to proceed.
"KRN",8989.51,287,30,0)
^8989.513I^1^1
"KRN",8989.51,287,30,1,0)
1^4
"KRN",8989.51,474,0)
PSB PATIENT ID LABEL^Patient ID Display Label^0^^PSB PATIENT ID LABEL
"KRN",8989.51,474,1)
F^0:5
"KRN",8989.51,474,30,0)
^8989.513I^2^2
"KRN",8989.51,474,30,1,0)
800^4.2
"KRN",8989.51,474,30,2,0)
700^4
"KRN",8989.51,639,0)
PSB NON-NURSE VERIFIED PROMPT^Non-Nurse Verified Prompt action^0^^PSB NON-NURSE VERIFIED PROMPT
"KRN",8989.51,639,1)
S^1:N-Allow Admin (No Warning);2:W-Allow Admin after Warning;3:P-Prohibit Administration
"KRN",8989.51,639,2)

"KRN",8989.51,639,30,0)
^8989.513I^1^1
"KRN",8989.51,639,30,1,0)
700^4
"KRN",8989.51,640,0)
PSB INJECTION SITE MAX HOURS^Last Injection Site Max Hours^0^^PSB INJECTION SITE MAX HOURS
"KRN",8989.51,640,1)
N^1:72^Enter a number of hours (1-72)
"KRN",8989.51,640,20,0)
^8989.512^2^2^3111107^^
"KRN",8989.51,640,20,1,0)
This will store the number of hours for the Last Injection Site Timeframe 
"KRN",8989.51,640,20,2,0)
on the BCMA Site Parameters screen.
"KRN",8989.51,640,30,0)
^8989.513I^2^2
"KRN",8989.51,640,30,1,0)
800^4.2
"KRN",8989.51,640,30,2,0)
700^4
"KRN",8989.51,691,0)
PSB PRINTER CO MISSING DOSE^Clinic Order Missing Dose Printer^0^Printer DEVICE^CO MISSING DOSE PRINTER
"KRN",8989.51,691,1)
P^3.5
"KRN",8989.51,691,20,0)
^^2^2^3120817^
"KRN",8989.51,691,20,1,0)
Device to print to when a missing dose is requested for a Clinic Order 
"KRN",8989.51,691,20,2,0)
medication.
"KRN",8989.51,691,30,0)
^8989.513I^2^2
"KRN",8989.51,691,30,1,0)
1^44
"KRN",8989.51,691,30,2,0)
2^4
"KRN",8989.51,786,-1)
0^7
"KRN",8989.51,786,0)
PSB LIST ANATOMIC LOCATIONS^Anatomical Locations^1^Anatomical Location #^Anatomical Location^0
"KRN",8989.51,786,1)
F^1:200
"KRN",8989.51,786,6)
F^^Location coordinates delimetered
"KRN",8989.51,786,30,0)
^8989.513I^1^1
"KRN",8989.51,786,30,1,0)
1^4
"KRN",8989.51,789,-1)
0^4
"KRN",8989.51,789,0)
PSB AL IMAGES^PSB Anatomic Locations Images^1^^^0
"KRN",8989.51,789,1)
F^^PSB Parameter name holding image data
"KRN",8989.51,789,6)
F
"KRN",8989.51,789,30,0)
^8989.513I^1^1
"KRN",8989.51,789,30,1,0)
1^4
"KRN",8989.51,790,-1)
0^3
"KRN",8989.51,790,0)
PSB AL GROUPS^PSB Anatomic Location Groups^1^^^0
"KRN",8989.51,790,1)
F
"KRN",8989.51,790,6)
F
"KRN",8989.51,790,30,0)
^8989.513I^1^1
"KRN",8989.51,790,30,1,0)
1^4
"KRN",8989.51,791,-1)
0^6
"KRN",8989.51,791,0)
PSB AL IMAGE GENERAL^PSB AL Image General^0^^^0
"KRN",8989.51,791,1)
W^^UU-encoded image 
"KRN",8989.51,791,6)
F
"KRN",8989.51,791,30,0)
^8989.513I^1^1
"KRN",8989.51,791,30,1,0)
1^4
"KRN",8989.51,794,-1)
0^5
"KRN",8989.51,794,0)
PSB AL MASTER LIST^Anatomic Location Master List^1^^^0
"KRN",8989.51,794,1)
F
"KRN",8989.51,794,6)
F
"KRN",8989.51,794,30,0)
^8989.513I^1^1
"KRN",8989.51,794,30,1,0)
1^4
"KRN",8989.51,799,-1)
0^2
"KRN",8989.51,799,0)
PSB LIST BODY SITES^Body Sites^1^Body Site #^Body Site^0
"KRN",8989.51,799,1)
F^1:80
"KRN",8989.51,799,6)
F^^Body Site text description
"KRN",8989.51,799,20,0)
^8989.512^9^9^3151007^^
"KRN",8989.51,799,20,1,0)
Common Body sites for all lists.  Delimetered by "|" as follows:
"KRN",8989.51,799,20,2,0)
 
"KRN",8989.51,799,20,3,0)
Example: text|1|0
"KRN",8989.51,799,20,4,0)
         text|1|1
"KRN",8989.51,799,20,5,0)
         text|0|1
"KRN",8989.51,799,20,6,0)
 
"KRN",8989.51,799,20,7,0)
   piece 1 = Site text description
"KRN",8989.51,799,20,8,0)
   piece 2 = 1 or 0 for yes or no is an Injection site
"KRN",8989.51,799,20,9,0)
   piece 3 = 1 or 0 for yes or no is a Dermal site
"KRN",8989.51,799,30,0)
^8989.513I^1^1
"KRN",8989.51,799,30,1,0)
1^4
"KRN",8989.51,800,0)
PSB DERMAL SITE MAX DAYS^Last Dermal Site Max Days^0^^PSB DERMAL SITE MAX DAYS
"KRN",8989.51,800,1)
N^1:99^Enter a number of days (1-99)
"KRN",8989.51,800,20,0)
^8989.512^3^3^3151102^
"KRN",8989.51,800,20,1,0)
This will store the number of days for the Last Dermal Site History 
"KRN",8989.51,800,20,2,0)
timeframe used by the BCMA GUI Site Parameters application and for 
"KRN",8989.51,800,20,3,0)
passing to BCMA RPC PSB GETNINJECTIONSITE.
"KRN",8989.51,800,30,0)
^8989.513I^1^1
"KRN",8989.51,800,30,1,0)
700^4
"KRN",8989.51,4649,0)
PSB DEFAULT BARCODE FORMAT^Default Bar Code Format^0^DEFAULT BARCODE FORMAT^DEFAULT BARCODE FORMAT^0
"KRN",8989.51,4649,1)
S^1:C39;2:128;3:I25
"KRN",8989.51,4649,20,0)
^^1^1^2990731^^^
"KRN",8989.51,4649,20,1,0)
Select the desired bar code format to produce on the Zebra Label Printer.
"KRN",8989.51,4649,30,0)
^8989.513I^1^1
"KRN",8989.51,4649,30,1,0)
1^4
"KRN",8989.51,4659,0)
PSB DEFAULT BARCODE PREFIX^Default Barcode Prefix^0^^DEFAULT BARCODE PREFIX
"KRN",8989.51,4659,1)
F^0:5^Will accept a null or up to 5 alphanumeric characters.
"KRN",8989.51,4659,20,0)
^8989.512^1^1^3021024^^^^
"KRN",8989.51,4659,20,1,0)
Text to prefix when printing a label on the Zebra Barcode Printer.
"KRN",8989.51,4659,30,0)
^8989.513I^1^1
"KRN",8989.51,4659,30,1,0)
1^4
"KRN",8989.51,4677,0)
PSB AUTOUPDATE SERVER^The UNC of the Auto-update Server^0^^UNC OF THE AUTOUPDATE SERVER
"KRN",8989.51,4677,1)
F^0:50^Enter a Microsoft UNC for server
"KRN",8989.51,4677,20,0)
^8989.512^2^2^3000726^^
"KRN",8989.51,4677,20,1,0)
The Microsoft UNC path to the BCMA autoupdate server that will contain
"KRN",8989.51,4677,20,2,0)
the source files for the update.
"KRN",8989.51,4677,30,0)
^8989.513I^1^1
"KRN",8989.51,4677,30,1,0)
1^4
"KRN",8989.51,4678,0)
PSB MG AUTOUPDATE^Autoupdate Notification Mail Group^0^^AUTOUPDATE NOTIFICATION MAIL GROUP^0
"KRN",8989.51,4678,1)
P^3.8
"KRN",8989.51,4678,20,0)
^8989.512^1^1^3000712^
"KRN",8989.51,4678,20,1,0)
Mailgroup to notify when updates or update errors occur.
"KRN",8989.51,4678,30,0)
^8989.513I^1^1
"KRN",8989.51,4678,30,1,0)
1^4
"KRN",8989.51,4693,0)
PSBIV PROVIDER COMMENTS^IV Provider Comments^1^IV Type^IV Provider Comments^0
"KRN",8989.51,4693,1)
S^1:W-Display Warning Message;2:N-NO Warning Message;3:I-Invalid IV Bag
"KRN",8989.51,4693,2)
I X=1!(X=2) W !!?5,"The recommended response for this parameter is 3  I-Invalid IV Bag.",!
"KRN",8989.51,4693,6)
S^1:A;2:P;3:H;4:S;5:C
"KRN",8989.51,4693,30,0)
^8989.513I^1^1
"KRN",8989.51,4693,30,1,0)
1^4
"KRN",8989.52,38,-1)
0^1
"KRN",8989.52,38,0)
PSB DIVISION^BCMA Divisional Parameters^4^
"KRN",8989.52,38,10,0)
^8989.521IA^37^31
"KRN",8989.52,38,10,1,0)
1^PSB ONLINE
"KRN",8989.52,38,10,6,0)
6^PSB ADMIN AFTER
"KRN",8989.52,38,10,7,0)
7^PSB ADMIN BEFORE
"KRN",8989.52,38,10,8,0)
8^PSB ADMIN ESIG
"KRN",8989.52,38,10,9,0)
9^PSB ADMIN MULTIPLE ONCALL
"KRN",8989.52,38,10,10,0)
10^PSB ADMIN PRN EFFECT
"KRN",8989.52,38,10,12,0)
12^PSB HFS SCRATCH
"KRN",8989.52,38,10,13,0)
13^PSB MG DUE LIST ERROR
"KRN",8989.52,38,10,14,0)
14^PSB MG MISSING DOSE
"KRN",8989.52,38,10,15,0)
15^PSB MG SYSTEM ERROR
"KRN",8989.52,38,10,16,0)
16^PSB PRINTER MISSING DOSE
"KRN",8989.52,38,10,17,0)
17^PSB SERVER CLOCK VARIANCE
"KRN",8989.52,38,10,18,0)
18^PSB VDL INCL BLANKS
"KRN",8989.52,38,10,19,0)
19^PSB VDL INCL CONT
"KRN",8989.52,38,10,20,0)
20^PSB VDL INCL IV MEDS
"KRN",8989.52,38,10,21,0)
21^PSB VDL INCL ON-CALL
"KRN",8989.52,38,10,22,0)
22^PSB VDL INCL ONE-TIME
"KRN",8989.52,38,10,23,0)
23^PSB VDL INCL PRN
"KRN",8989.52,38,10,24,0)
24^PSB VDL INCL UD MEDS
"KRN",8989.52,38,10,25,0)
25^PSB VDL START TIME
"KRN",8989.52,38,10,26,0)
26^PSB VDL STOP TIME
"KRN",8989.52,38,10,27,0)
2^PSB DEFAULT BARCODE FORMAT
"KRN",8989.52,38,10,28,0)
3^PSB DEFAULT BARCODE PREFIX
"KRN",8989.52,38,10,29,0)
4^PSB ROBOT RX
"KRN",8989.52,38,10,30,0)
27^PSB AUTOUPDATE SERVER
"KRN",8989.52,38,10,31,0)
28^PSB MG AUTOUPDATE
"KRN",8989.52,38,10,32,0)
29^PSBIV PROVIDER COMMENTS
"KRN",8989.52,38,10,33,0)
30^PSB PATIENT ID LABEL
"KRN",8989.52,38,10,34,0)
31^PSB NON-NURSE VERIFIED PROMPT
"KRN",8989.52,38,10,35,0)
32^PSB INJECTION SITE MAX HOURS
"KRN",8989.52,38,10,36,0)
16.1^PSB PRINTER CO MISSING DOSE
"KRN",8989.52,38,10,37,0)
33^PSB DERMAL SITE MAX DAYS
"KRN",8994,686,-1)
0^4
"KRN",8994,686,0)
PSB TRANSACTION^RPC^PSBML^2^P^^^^3
"KRN",8994,686,1,0)
^8994.01^169^169^3160419^^
"KRN",8994,686,1,1,0)
This is the filing RPC for all data returning from the client
"KRN",8994,686,1,2,0)
regarding the medication log.  Filing is handled by business rules on
"KRN",8994,686,1,3,0)
the server and this RPC will return either '1^Data Filed' or
"KRN",8994,686,1,4,0)
'-1^reason for not filing data' to the client.  Results of the 
"KRN",8994,686,1,5,0)
processed transaction is communicated via the RESULTS array.  The 
"KRN",8994,686,1,6,0)
number of RESULTS subscripts used (n) will be presented in RESULTS[0].  
"KRN",8994,686,1,7,0)
RESULTS [1..n] will contain the RESULTS message.  
"KRN",8994,686,1,8,0)
 
"KRN",8994,686,1,9,0)
Business rules are conducted via the [0] node data (Input parameter 
"KRN",8994,686,1,10,0)
sequence 1). If a '+1^MEDPASS' is encountered it is a complete new med 
"KRN",8994,686,1,11,0)
pass and is validated as such.  Transaction type MEDPASS is the only type 
"KRN",8994,686,1,12,0)
that requires a +1 in the first piece of the header, all other 
"KRN",8994,686,1,13,0)
transactions MUST supply a valid medication log entry in the IENS.
"KRN",8994,686,1,14,0)
 
"KRN",8994,686,1,15,0)
The data for filing is passed in as a list in Param[1] as shown below.
"KRN",8994,686,1,16,0)
 
"KRN",8994,686,1,17,0)
Example Delphi Call
"KRN",8994,686,1,18,0)
 
"KRN",8994,686,1,19,0)
  with RPCBroker1 do
"KRN",8994,686,1,20,0)
    begin
"KRN",8994,686,1,21,0)
    RemoteProcedure := 'PSB TRANSACTION';
"KRN",8994,686,1,22,0)
    Param[0].Value := '88484^COMMENT';
"KRN",8994,686,1,23,0)
    Param[0].PType := Literal;
"KRN",8994,686,1,24,0)
    Param[1].Mult['0'] := 'Comment for the med pass';
"KRN",8994,686,1,25,0)
    Param[1].Ptype := List;
"KRN",8994,686,1,26,0)
    Call;
"KRN",8994,686,1,27,0)
    end;
"KRN",8994,686,1,28,0)
 
"KRN",8994,686,1,29,0)
BUSINESS LOGIC controlled by Param[0]:
"KRN",8994,686,1,30,0)
 
"KRN",8994,686,1,31,0)
Param[0] = MEDLOG IEN ^ TRANSACTION ^ INSTRUCTOR DUZ ^ WITNESS DUZ
"KRN",8994,686,1,32,0)
           ^ WITNESS COMMENT ^ WITNESS HR ORDER LEVEL CODE
"KRN",8994,686,1,33,0)
 
"KRN",8994,686,1,34,0)
-------------------------------------------------------------------------
"KRN",8994,686,1,35,0)
TRANSACTION = MEDPASS  (this is the MEDLOG ADD a new transaction)
"KRN",8994,686,1,36,0)
   Note: Entries 1-6 are required, 7,8,9 are required depending on 
"KRN",8994,686,1,37,0)
         item [2] order type...
"KRN",8994,686,1,38,0)
 
"KRN",8994,686,1,39,0)
 [0] = Patient IEN
"KRN",8994,686,1,40,0)
 
"KRN",8994,686,1,41,0)
 
"KRN",8994,686,1,42,0)
 [1] = IV/Unit Dose Order Number ^ Clinic Name (if a clinic order)
"KRN",8994,686,1,43,0)
   Note: will be passed in as I;#### for IV and U;#### for Unit Dose
"KRN",8994,686,1,44,0)
         future release will allow P;#### for pending
"KRN",8994,686,1,45,0)
 
"KRN",8994,686,1,46,0)
 [2] = Schedule
"KRN",8994,686,1,47,0)
   Note: C:Continuous P:PRN 1:One Time O:On Call
"KRN",8994,686,1,48,0)
 
"KRN",8994,686,1,49,0)
 [3] = Status
"KRN",8994,686,1,50,0)
   Note: G:Given H:Held R:Refused
"KRN",8994,686,1,51,0)
 
"KRN",8994,686,1,52,0)
 [4] = Orderable Item
"KRN",8994,686,1,53,0)
   Note: IEN to 'PHARMACY ORDERABLE ITEM' (#50.7)
"KRN",8994,686,1,54,0)
 
"KRN",8994,686,1,55,0)
 [5] = Scheduled Administration Date/Time
"KRN",8994,686,1,56,0)
   Note: This is when the med is scheduled, med is entered as GIVEN NOW!
"KRN",8994,686,1,57,0)
 
"KRN",8994,686,1,58,0)
 [6] = Reason Given PRN^PRN Reason Flag
"KRN",8994,686,1,59,0)
   Note: Required if given PRN must be null if not PRN
"KRN",8994,686,1,60,0)
 
"KRN",8994,686,1,61,0)
 [7] = Comment
"KRN",8994,686,1,62,0)
   Note: 1-200 characters
"KRN",8994,686,1,63,0)
 
"KRN",8994,686,1,64,0)
 [8] = Injection Site
"KRN",8994,686,1,65,0)
 [9] = Tab^Unique ID #
"KRN",8994,686,1,66,0)
[10] = Schedule Removal Date/Time
"KRN",8994,686,1,67,0)
       Note:This is when the med is scheduled to be removed and not the 
"KRN",8994,686,1,68,0)
            actual removal transaction date/time.  
"KRN",8994,686,1,69,0)
 
"KRN",8994,686,1,70,0)
[11..n] = RecordType^IEN^Units Ordered^Units Given^Units Type^^HR code^MRR
"KRN",8994,686,1,71,0)
          code
"KRN",8994,686,1,72,0)
 
"KRN",8994,686,1,73,0)
          1) Record Type = DD:  Dispense Drug
"KRN",8994,686,1,74,0)
                          SOL:  Solution
"KRN",8994,686,1,75,0)
                          ADD:  Additive
"KRN",8994,686,1,76,0)
 
"KRN",8994,686,1,77,0)
          2) IEN = Internal Entry Number of the following
"KRN",8994,686,1,78,0)
                   if Record Type = DD:  DRUG (FILE #50)  
"KRN",8994,686,1,79,0)
                                SOL: IV SOLUTIONS (FILE #??)
"KRN",8994,686,1,80,0)
                                ADD: IV ADDITIVES (FILE #??)
"KRN",8994,686,1,81,0)
 
"KRN",8994,686,1,82,0)
          3) Units Ordered = Number of units in the Inpt Meds Order
"KRN",8994,686,1,83,0)
 
"KRN",8994,686,1,84,0)
          4) Units Given = Number of units scanned/entered by the user
"KRN",8994,686,1,85,0)
 
"KRN",8994,686,1,86,0)
          5) Units Type = Type of administration unit (i.e. TAB, CAP,ML)
"KRN",8994,686,1,87,0)
 
"KRN",8994,686,1,88,0)
          6) n/a
"KRN",8994,686,1,89,0)
 
"KRN",8994,686,1,90,0)
          7) Orderable Item High Risk/High Alert code value
"KRN",8994,686,1,91,0)
                (HR = 1, 2, or 3)
"KRN",8994,686,1,92,0)
          8) Orderable Item Prompt For Removal In BCMA code value
"KRN",8994,686,1,93,0)
                (MRR = 0, 1, or 3)
"KRN",8994,686,1,94,0)
 
"KRN",8994,686,1,95,0)
-------------------------------------------------------------------------
"KRN",8994,686,1,96,0)
TRANSACTION = COMMENT
"KRN",8994,686,1,97,0)
 
"KRN",8994,686,1,98,0)
 [0] = Comment to append to the log entry
"KRN",8994,686,1,99,0)
   Note: Will be appended to the log with user ien and NOW as a date
"KRN",8994,686,1,100,0)
 
"KRN",8994,686,1,101,0)
-------------------------------------------------------------------------
"KRN",8994,686,1,102,0)
TRANSACTION = PRN EFFECTIVENESS
"KRN",8994,686,1,103,0)
 
"KRN",8994,686,1,104,0)
 [0] = Effective Comment
"KRN",8994,686,1,105,0)
   Note: will be filed as entered now by current user
"KRN",8994,686,1,106,0)
 
"KRN",8994,686,1,107,0)
 -------------------------------------------------------------------------
"KRN",8994,686,1,108,0)
TRANSACTION = STATUS UPDATE
"KRN",8994,686,1,109,0)
 
"KRN",8994,686,1,110,0)
 [0] = New Status
"KRN",8994,686,1,111,0)
   Note: If status is Given, Date/Time administered D/T will be set to NOW
"KRN",8994,686,1,112,0)
         If status is Held/Refused administered D/T will be set to null
"KRN",8994,686,1,113,0)
         Status on med log must be <> null to execute.
"KRN",8994,686,1,114,0)
         New status must NOT match current status or G will overwrite 
"KRN",8994,686,1,115,0)
         administration DT.
"KRN",8994,686,1,116,0)
 
"KRN",8994,686,1,117,0)
 [1] = Comment
"KRN",8994,686,1,118,0)
   Note: Comment *IS* Required
"KRN",8994,686,1,119,0)
 
"KRN",8994,686,1,120,0)
 [2] = Injection Site
"KRN",8994,686,1,121,0)
 
"KRN",8994,686,1,122,0)
 [3] =
"KRN",8994,686,1,123,0)
 
"KRN",8994,686,1,124,0)
 [4] = RecordType^IEN^Units Ordered^Units Given^Units Type^^HR code^MRR
"KRN",8994,686,1,125,0)
       code
"KRN",8994,686,1,126,0)
 
"KRN",8994,686,1,127,0)
          1) Record Type = DD:  Dispense Drug
"KRN",8994,686,1,128,0)
                          SOL:  Solution
"KRN",8994,686,1,129,0)
                          ADD:  Additive
"KRN",8994,686,1,130,0)
 
"KRN",8994,686,1,131,0)
          2) IEN = Internal Entry Number of the following
"KRN",8994,686,1,132,0)
                   if Record Type = DD:  DRUG (FILE #50)
"KRN",8994,686,1,133,0)
                                SOL: IV SOLUTIONS (FILE #??)
"KRN",8994,686,1,134,0)
                                ADD: IV ADDITIVES (FILE #??)
"KRN",8994,686,1,135,0)
 
"KRN",8994,686,1,136,0)
          3) Units Ordered = Number of units in the Inpt Meds Order
"KRN",8994,686,1,137,0)
 
"KRN",8994,686,1,138,0)
          4) Units Given = Number of units scanned/entered by the user
"KRN",8994,686,1,139,0)
 
"KRN",8994,686,1,140,0)
          5) Units Type = Type of administration unit (i.e. TAB, CAP,ML)
"KRN",8994,686,1,141,0)
 
"KRN",8994,686,1,142,0)
          6) n/a
"KRN",8994,686,1,143,0)
 
"KRN",8994,686,1,144,0)
          7) Orderable Item High Risk/High Alert code value
"KRN",8994,686,1,145,0)
                (HR = 1, 2, or 3)
"KRN",8994,686,1,146,0)
          8) Orderable Item Prompt For Removal In BCMA code value
"KRN",8994,686,1,147,0)
                (MRR = 0, 1, or 3)
"KRN",8994,686,1,148,0)
 
"KRN",8994,686,1,149,0)
 
"KRN",8994,686,1,150,0)
-------------------------------------------------------------------------
"KRN",8994,686,1,151,0)
TRANSACTION = EDIT   (This is the MEDLOG Edit an existing transaction)
"KRN",8994,686,1,152,0)
 
"KRN",8994,686,1,153,0)
 
"KRN",8994,686,1,154,0)
 [0] = Action Status
"KRN",8994,686,1,155,0)
 [1] = Patient DFN
"KRN",8994,686,1,156,0)
 [2] = Inf/Inj Site
"KRN",8994,686,1,157,0)
 [3] = IV Unique ID
"KRN",8994,686,1,158,0)
 [4] = Admin Date/Time (fileman format)
"KRN",8994,686,1,159,0)
 [5] = Prn Reason
"KRN",8994,686,1,160,0)
 [6] = Prn Effectiveness
"KRN",8994,686,1,161,0)
 
"KRN",8994,686,1,162,0)
 [7] = Comment
"KRN",8994,686,1,163,0)
       Note: comment data is required!
"KRN",8994,686,1,164,0)
 
"KRN",8994,686,1,165,0)
 [8] = "DD/ADD/SOL^ Drug IEN ^ Dose Ordered ^ Dose Given ^ Unit of 
"KRN",8994,686,1,166,0)
        Administration" ^ High Risk High Alert code ^ Prompt For Removal
"KRN",8994,686,1,167,0)
        In BCMA code
"KRN",8994,686,1,168,0)
     
"KRN",8994,686,1,169,0)
 [n] = "additional data per DD/ADD/SOL associated with order."
"KRN",8994,686,2,0)
^8994.02A^2^2
"KRN",8994,686,2,1,0)
PSBHDR^1^^1^1
"KRN",8994,686,2,1,1,0)
^^1^1^2990309^
"KRN",8994,686,2,1,1,1,0)
Contains the IEN or +1 up-arrow transaction.  See RPC description.
"KRN",8994,686,2,2,0)
PSBREC^2^^1^2
"KRN",8994,686,2,2,1,0)
^8994.021^1^1^3130426^^^^
"KRN",8994,686,2,2,1,1,0)
See description.
"KRN",8994,686,2,"B","PSBHDR",1)

"KRN",8994,686,2,"B","PSBREC",2)

"KRN",8994,686,2,"PARAMSEQ",1,1)

"KRN",8994,686,2,"PARAMSEQ",2,2)

"KRN",8994,686,3,0)
^8994.03^1^1^3151130^^^^
"KRN",8994,686,3,1,0)
See description.
"KRN",8994,687,-1)
0^2
"KRN",8994,687,0)
PSB VALIDATE ORDER^EN^PSBVDLVL^2^P^^^^3
"KRN",8994,687,2,0)
^8994.02A^11^10
"KRN",8994,687,2,1,0)
DFN^1^10^1^1
"KRN",8994,687,2,1,1,0)
^8994.021^1^1^3030318^^
"KRN",8994,687,2,1,1,1,0)
Patient IEN
"KRN",8994,687,2,2,0)
PSBIEN^1^^1^2
"KRN",8994,687,2,2,1,0)
^8994.021^1^1^3150708^^^^
"KRN",8994,687,2,2,1,1,0)
Medication Order Number
"KRN",8994,687,2,3,0)
PSBTYPE^1^2^1^3
"KRN",8994,687,2,3,1,0)
^8994.021^4^4^3030728^^
"KRN",8994,687,2,3,1,1,0)
Order Type
"KRN",8994,687,2,3,1,2,0)
 
"KRN",8994,687,2,3,1,3,0)
U for unit dose order
"KRN",8994,687,2,3,1,4,0)
V for IV order
"KRN",8994,687,2,4,0)
PSBADMIN^1^^0^4
"KRN",8994,687,2,4,1,0)
^8994.021^1^1^3030728^^^
"KRN",8994,687,2,4,1,1,0)
Administration date/time, if one is present.
"KRN",8994,687,2,5,0)
PSBTAB^1^10^1^5
"KRN",8994,687,2,5,1,0)
^8994.021^1^1^3030728^^
"KRN",8994,687,2,5,1,1,0)
Medication tab the order is on.
"KRN",8994,687,2,6,0)
PSBUID^1^^1^6
"KRN",8994,687,2,6,1,0)
^8994.021^1^1^3030728^^
"KRN",8994,687,2,6,1,1,0)
The actual scan value.
"KRN",8994,687,2,7,0)
PSBASTS^1^^0^7
"KRN",8994,687,2,7,1,0)
^8994.021^1^1^3030728^^^^
"KRN",8994,687,2,7,1,1,0)
Current scan status of the VDL of the medication.
"KRN",8994,687,2,8,0)
PSBORSTS^1^^1^8
"KRN",8994,687,2,8,1,0)
^8994.021^1^1^3030728^^
"KRN",8994,687,2,8,1,1,0)
Current order status on the VDL>
"KRN",8994,687,2,9,0)
PSBRMV^^^0^9
"KRN",8994,687,2,9,1,0)
^8994.021^1^1^3030728^^^^
"KRN",8994,687,2,9,1,1,0)
Action the user is trying to take.
"KRN",8994,687,2,11,0)
PSBRMVTM^1^^0^10
"KRN",8994,687,2,11,1,0)
^8994.021^2^2^3151130^^
"KRN",8994,687,2,11,1,1,0)
Scheduled Removal date/time.  (not the scan time transaction date/time)
"KRN",8994,687,2,11,1,2,0)
Required only if this is a removal action user trying to take.
"KRN",8994,687,2,"B","DFN",1)

"KRN",8994,687,2,"B","PSBADMIN",4)

"KRN",8994,687,2,"B","PSBASTS",7)

"KRN",8994,687,2,"B","PSBIEN",2)

"KRN",8994,687,2,"B","PSBORSTS",8)

"KRN",8994,687,2,"B","PSBRMV",9)

"KRN",8994,687,2,"B","PSBRMVTM",11)

"KRN",8994,687,2,"B","PSBTAB",5)

"KRN",8994,687,2,"B","PSBTYPE",3)

"KRN",8994,687,2,"B","PSBUID",6)

"KRN",8994,687,2,"PARAMSEQ",1,1)

"KRN",8994,687,2,"PARAMSEQ",2,2)

"KRN",8994,687,2,"PARAMSEQ",3,3)

"KRN",8994,687,2,"PARAMSEQ",4,4)

"KRN",8994,687,2,"PARAMSEQ",5,5)

"KRN",8994,687,2,"PARAMSEQ",6,6)

"KRN",8994,687,2,"PARAMSEQ",7,7)

"KRN",8994,687,2,"PARAMSEQ",8,8)

"KRN",8994,687,2,"PARAMSEQ",9,9)

"KRN",8994,687,2,"PARAMSEQ",10,11)

"KRN",8994,687,3,0)
^^19^19^3151130^
"KRN",8994,687,3,1,0)
Results[0] = number of nodes
"KRN",8994,687,3,2,0)
 
"KRN",8994,687,3,3,0)
Results[0] = 0^Data Successfully can be Filed
"KRN",8994,687,3,4,0)
             1^Warning message that needs user to confirm  before filing
"KRN",8994,687,3,5,0)
            -1^Functional Error message
"KRN",8994,687,3,6,0)
            -2^Critical System Error message
"KRN",8994,687,3,7,0)
 
"KRN",8994,687,3,8,0)
For PRN medication order:
"KRN",8994,687,3,9,0)
Results[0] = number of nodes
"KRN",8994,687,3,10,0)
 
"KRN",8994,687,3,11,0)
Results[1] = 1^Brief Adminstration History
"KRN",8994,687,3,12,0)
Results[2] = 1^ 1
"KRN",8994,687,3,13,0)
             2^ Admin date&time (Fileman format)
"KRN",8994,687,3,14,0)
             3^ Admin status
"KRN",8994,687,3,15,0)
             4^ Schedule Type
"KRN",8994,687,3,16,0)
             5^ Reason
"KRN",8994,687,3,17,0)
             6^ Body site  (could be Injection or Dermal)
"KRN",8994,687,3,18,0)
             7^ Doses given
"KRN",8994,687,3,19,0)
             8^ Unit of administration (free text)
"KRN",8994,1165,-1)
0^1
"KRN",8994,1165,0)
PSB GETORDERTAB^RPC^PSBVDLTB^4^P^^^1^3
"KRN",8994,1165,1,0)
^^1^1^3150916^
"KRN",8994,1165,1,1,0)
Gives the client VDL information for the specified patient and time frame.
"KRN",8994,1165,2,0)
^8994.02A^5^5
"KRN",8994,1165,2,1,0)
DFN^1^30^1^1
"KRN",8994,1165,2,1,1,0)
^8994.021^1^1^3070712^^^^
"KRN",8994,1165,2,1,1,1,0)
The patient IEN from ^DPT.
"KRN",8994,1165,2,2,0)
VDL TAB^1^30^1^2
"KRN",8994,1165,2,2,1,0)
^8994.021^1^1^3070712^^^
"KRN",8994,1165,2,2,1,1,0)
The tab from the VDL that is being requested.
"KRN",8994,1165,2,3,0)
VDL DATE^1^30^0^3
"KRN",8994,1165,2,3,1,0)
^8994.021^2^2^3111020^^^^
"KRN",8994,1165,2,3,1,1,0)
The date of the requested data.  If not passed then current date/time are
"KRN",8994,1165,2,3,1,2,0)
used.
"KRN",8994,1165,2,4,0)
PSBSIOPI^1^1^0^4
"KRN",8994,1165,2,4,1,0)
^8994.021^5^5^3120425^^
"KRN",8994,1165,2,4,1,1,0)
 This parameter is a true/false flag (1/0).  If true use the new SI/OP Wp
"KRN",8994,1165,2,4,1,2,0)
 fields and return data in the Results array to the GUI Client.
"KRN",8994,1165,2,4,1,3,0)
  
"KRN",8994,1165,2,4,1,4,0)
 The field is not required, so a null will convert into a 0, for false,
"KRN",8994,1165,2,4,1,5,0)
 making this backwards compatible.
"KRN",8994,1165,2,5,0)
PSBCLINORD^1^1^0^5
"KRN",8994,1165,2,5,1,0)
^8994.021^6^6^3151130^^^^
"KRN",8994,1165,2,5,1,1,0)
This parameter is a True/False flag (1/0).  If true, then return only
"KRN",8994,1165,2,5,1,2,0)
Clinic Orders and not Inpatient Medication orders to BCMA, else if false, 
"KRN",8994,1165,2,5,1,3,0)
return only Inpatient Medication orders to BCMA.
"KRN",8994,1165,2,5,1,4,0)
 
"KRN",8994,1165,2,5,1,5,0)
The field is not required, so a null will convert into a 0, for a 
"KRN",8994,1165,2,5,1,6,0)
default false value, making this backwards compatible.
"KRN",8994,1165,2,"B","DFN",1)

"KRN",8994,1165,2,"B","PSBCLINORD",5)

"KRN",8994,1165,2,"B","PSBSIOPI",4)

"KRN",8994,1165,2,"B","VDL DATE",3)

"KRN",8994,1165,2,"B","VDL TAB",2)

"KRN",8994,1165,2,"PARAMSEQ",1,1)

"KRN",8994,1165,2,"PARAMSEQ",2,2)

"KRN",8994,1165,2,"PARAMSEQ",3,3)

"KRN",8994,1165,2,"PARAMSEQ",4,4)

"KRN",8994,1165,2,"PARAMSEQ",5,5)

"KRN",8994,1165,3,0)
^^114^114^3151130^
"KRN",8994,1165,3,1,0)
 
"KRN",8994,1165,3,2,0)
If a valid list of orders are found they are returned in a block format
"KRN",8994,1165,3,3,0)
with the word 'END' delimiting orders/administrations.  Lines for
"KRN",8994,1165,3,4,0)
subsequent block are numbered sequential.  They are not reset to 1 for
"KRN",8994,1165,3,5,0)
each
"KRN",8994,1165,3,6,0)
block.
"KRN",8994,1165,3,7,0)
 
"KRN",8994,1165,3,8,0)
 
"KRN",8994,1165,3,9,0)
 
"KRN",8994,1165,3,10,0)
  Results[0] =  ^1      The number of lines returned(count)
"KRN",8994,1165,3,11,0)
 
"KRN",8994,1165,3,12,0)
  Results[1] =  ^1      Data for the Unit Dose tab (0=no, 1=yes)
"KRN",8994,1165,3,13,0)
                ^2      Data for the Piggy Back tab (0=no, 1=yes)
"KRN",8994,1165,3,14,0)
                ^3      Data for the IV tab (0=no, 1=yes)
"KRN",8994,1165,3,15,0)
                ^4      Transfer type if there was a patient movement
"KRN",8994,1165,3,16,0)
                ^5      Movement type if there was a patient movement
"KRN",8994,1165,3,17,0)
                ^6      Count of Inpatient Orders for this patient
"KRN",8994,1165,3,18,0)
                ^7      Count of Clinic Orders for this patient
"KRN",8994,1165,3,19,0)
                ^8      IV's still infusing indicator light
"KRN",8994,1165,3,20,0)
                ^9      Patch still on indicator light 
"KRN",8994,1165,3,21,0)
 
"KRN",8994,1165,3,22,0)
  Results[2] =  ^1      DFN
"KRN",8994,1165,3,23,0)
                ^2      ORDER NUMBER (20V)
"KRN",8994,1165,3,24,0)
                ^3      NUMERIC PORTION OF ORDER NUMBER (20)
"KRN",8994,1165,3,25,0)
                ^4      ALPHA PORTION OF ORDER NUMBER (V)
"KRN",8994,1165,3,26,0)
                ^5      SCHEDULE TYPE (prn/continuous)
"KRN",8994,1165,3,27,0)
                ^6      SCHEDULE (Q4H)
"KRN",8994,1165,3,28,0)
                ^7      SELF MED (SM or HSM)
"KRN",8994,1165,3,29,0)
                ^8      DRUG NAME
"KRN",8994,1165,3,30,0)
                ^9      DOSAGE/FLOW RATE
"KRN",8994,1165,3,31,0)
                ^10     MED ROUTE
"KRN",8994,1165,3,32,0)
                ^11     LAST ACTION DATE/TIME (FM format)
"KRN",8994,1165,3,33,0)
                ^12     MED LOG IEN (blank if no action)
"KRN",8994,1165,3,34,0)
                ^13     LAST ACTION STATUS (this entry)
"KRN",8994,1165,3,35,0)
                ^14     SCHEDULED ADMIN DATE/TIME
"KRN",8994,1165,3,36,0)
                ^15     ORDERABLE ITEM IEN (^ORD(101.43)
"KRN",8994,1165,3,37,0)
                ^16     INJECTABLE (0=no, 1=yes)
"KRN",8994,1165,3,38,0)
                ^17     VARIABLE DOSE (0=no, 1=yes)
"KRN",8994,1165,3,39,0)
                ^18     DOSEAGE FORM
"KRN",8994,1165,3,40,0)
                ^19     VERIFYING NURSE INITIALS (*** if none)
"KRN",8994,1165,3,41,0)
                ^20     LAST ACTION STATUS (whole order)
"KRN",8994,1165,3,42,0)
                ^21     ORDER START DATE/TIME (FM)
"KRN",8994,1165,3,43,0)
                ^22     ORDER STATUS
"KRN",8994,1165,3,44,0)
                ^23     UNIQUE ID OF BAG
"KRN",8994,1165,3,45,0)
                ^24     NURSES IEN
"KRN",8994,1165,3,46,0)
                ^25     TRANSACTION TYPE
"KRN",8994,1165,3,47,0)
                ^26     ORDER STOP DATE (FM)
"KRN",8994,1165,3,48,0)
                ^27     LAST "GIVEN" DATE (FM)
"KRN",8994,1165,3,49,0)
                ^28     GIVEN PATCH (1=yes)
"KRN",8994,1165,3,50,0)
                ^29     OVERRIDE/INTERVENTION REASONS EXIST (0=No;1=Yes)
"KRN",8994,1165,3,51,0)
                ^30     LAST INJECTION SITE TEXT (per Orderable Item)
"KRN",8994,1165,3,52,0)
                ^31     PIGGYBACK TAB- ROTATION TYPE IV ORDER INJECTABLE 
"KRN",8994,1165,3,53,0)
                        FLAG  (0 or null = No ; 1 = Yes)
"KRN",8994,1165,3,54,0)
                ^32     CLINIC NAME (if a Clinic order)
"KRN",8994,1165,3,55,0)
                ^33     CLINIC IEN POINTER (if a Clinic order)
"KRN",8994,1165,3,56,0)
                ^34     PROMPT FOR REMOVAL IN BCMA CODE
"KRN",8994,1165,3,57,0)
                          (0 for Non-removal type meds)              [def]
"KRN",8994,1165,3,58,0)
                          (1 = remove time is next admin dt/time)
"KRN",8994,1165,3,59,0)
                          (3 = remove time is prior to next admin dt/time)
"KRN",8994,1165,3,60,0)
                ^35     REMOVE DATE/TIME for MMR type meds.
"KRN",8994,1165,3,61,0)
                          (populated for Prompt code of 1 or 3 only)
"KRN",8994,1165,3,62,0)
 
"KRN",8994,1165,3,63,0)
  ^Results[3] = ^1      SPECIAL INSTRUCTIONS (short field)
"KRN",8994,1165,3,64,0)
                        ("!"  <- BCMA FLAG may precede Text)
"KRN",8994,1165,3,65,0)
  ^Results[n] =
"KRN",8994,1165,3,66,0)
   Dispense Drug  ^1     LITERAL "DD"
"KRN",8994,1165,3,67,0)
                  ^2     DISPENSE DRUG IEN
"KRN",8994,1165,3,68,0)
                  ^3     DISPENSE DRUG NAME
"KRN",8994,1165,3,69,0)
                  ^4     UNITS PER DOSE
"KRN",8994,1165,3,70,0)
                  ^5     INACTIVE DATE
"KRN",8994,1165,3,71,0)
                  ^6     HIGH RISK/ALERT INDICATOR
"KRN",8994,1165,3,72,0)
                           0 (null) Not High Risk
"KRN",8994,1165,3,73,0)
                           1 High Risk No Witness Required
"KRN",8994,1165,3,74,0)
                           2 High Risk Recommend Witness
"KRN",8994,1165,3,75,0)
                           3 High Risk Witness Required
"KRN",8994,1165,3,76,0)
                  ^7     PROMPT FOR REMOVAL IN BCMA 
"KRN",8994,1165,3,77,0)
                          (0 for Non-removal type meds)             
"KRN",8994,1165,3,78,0)
                          (1 = remove time is next admin dt/time)
"KRN",8994,1165,3,79,0)
                          (3 = remove time is prior to next admin dt/time 
"KRN",8994,1165,3,80,0)
 
"KRN",8994,1165,3,81,0)
  ^Results[n]
"KRN",8994,1165,3,82,0)
   Additive       ^1    LITERAL "ADD"
"KRN",8994,1165,3,83,0)
                  ^2    ADDITIVE IEN
"KRN",8994,1165,3,84,0)
                  ^3    ADDITIVE NAME
"KRN",8994,1165,3,85,0)
                  ^4    STRENGTH
"KRN",8994,1165,3,86,0)
                  ^5    BOTTLE
"KRN",8994,1165,3,87,0)
                  ^6    HIGH RISK/ALERT INDICATOR                      
"KRN",8994,1165,3,88,0)
                           0 (null) Not High Risk
"KRN",8994,1165,3,89,0)
                           1 High Risk No Witness Required
"KRN",8994,1165,3,90,0)
                           2 High Risk Recommend Witness              
"KRN",8994,1165,3,91,0)
                           3 High Risk Witness Required
"KRN",8994,1165,3,92,0)
  ^Results[n]
"KRN",8994,1165,3,93,0)
 
"KRN",8994,1165,3,94,0)
   Solution       ^1    LITERAL "SOL"
"KRN",8994,1165,3,95,0)
                  ^2    SOLUTION IEN
"KRN",8994,1165,3,96,0)
                  ^3    SOLUTION NAME
"KRN",8994,1165,3,97,0)
                  ^4    VOLUME
"KRN",8994,1165,3,98,0)
                  ^5    - not inuse -
"KRN",8994,1165,3,99,0)
                  ^6    HIGH RISK/ALERT INDICATOR
"KRN",8994,1165,3,100,0)
                           0 (null) Not High Risk
"KRN",8994,1165,3,101,0)
                           1 High Risk No Witness Required
"KRN",8994,1165,3,102,0)
                           2 High Risk Recommend Witness              
"KRN",8994,1165,3,103,0)
                           3 High Risk Witness Required
"KRN",8994,1165,3,104,0)
 
"KRN",8994,1165,3,105,0)
  ^Results[n]
"KRN",8994,1165,3,106,0)
   ID list        ^1    LITERAL "ID"
"KRN",8994,1165,3,107,0)
                  ^2    ID NUMBER
"KRN",8994,1165,3,108,0)
                  ^3    ADDITIVE IEN
"KRN",8994,1165,3,109,0)
                  ^...  EACH ADDITIONAL ADDITIVE IEN
"KRN",8994,1165,3,110,0)
  ^Results(n)
"KRN",8994,1165,3,111,0)
   SI WP text     ^1    LITERAL "SI"
"KRN",8994,1165,3,112,0)
                  ^2    SPECIAL INSTRUCTIONS LONG WP TEXT LINES
"KRN",8994,1165,3,113,0)
 
"KRN",8994,1165,3,114,0)
  ^Results[n]     ^1    LITERAL "END" TO INDICATE END OF BLOCK
"KRN",8994,1579,-1)
0^6
"KRN",8994,1579,0)
PSB MED LOG LOOKUP^RPC^PSBMLLKU^2^P^0^^^3
"KRN",8994,1579,1,0)
^^89^89^3160311^
"KRN",8994,1579,1,1,0)
BCMA Medication Log Look Up Remote Procedures.
"KRN",8994,1579,1,2,0)
 
"KRN",8994,1579,1,3,0)
This routine is a conglomerate of  Medication Log lookup functionality
"KRN",8994,1579,1,4,0)
per the BCMA Graphical User Interface software.
"KRN",8994,1579,1,5,0)
 
"KRN",8994,1579,1,6,0)
Input:  PSBREC (array)
"KRN",8994,1579,1,7,0)
        PSBREC (0)     determine  "lookup" function 
"KRN",8994,1579,1,8,0)
                      "PTLKUP" (patient file (#2) lookup)
"KRN",8994,1579,1,9,0)
                      "ADMLKUP" (MedLog administration lookup)
"KRN",8994,1579,1,10,0)
                      "SELECTAD" (selected admin.)
"KRN",8994,1579,1,11,0)
               (1)     values to use per lookup. (DFN per ADMLKUP)
"KRN",8994,1579,1,12,0)
                       value of selected item. (PSB IEN per SELECTAD)
"KRN",8994,1579,1,13,0)
               (2)     search date per ADMLKUP
"KRN",8994,1579,1,14,0)
    
"KRN",8994,1579,1,15,0)
Output: RESULTS (array)
"KRN",8994,1579,1,16,0)
        RESULTS(0)    number of lookup matches
"KRN",8994,1579,1,17,0)
               (1)    error message or data per match/selection
"KRN",8994,1579,1,18,0)
               (n)    data per subsequent match/selection.
"KRN",8994,1579,1,19,0)
 
"KRN",8994,1579,1,20,0)
"PTLKUP" results data format:
"KRN",8994,1579,1,21,0)
RPC Call: PSB MED LOG LOOKUP
"KRN",8994,1579,1,22,0)
RESULTS(0) = 1
"KRN",8994,1579,1,23,0)
RESULTS(1) = 
"KRN",8994,1579,1,24,0)
piece 1         Patient's DFN               ("-1" if error/message)
"KRN",8994,1579,1,25,0)
piece 2         Patient's Name
"KRN",8994,1579,1,26,0)
piece 3         Sex
"KRN",8994,1579,1,27,0)
piece 4         Date of Birth (FM format)
"KRN",8994,1579,1,28,0)
piece 5         Social Security Number
"KRN",8994,1579,1,29,0)
piece 6         ""
"KRN",8994,1579,1,30,0)
piece 7         ""
"KRN",8994,1579,1,31,0)
piece 8         ""
"KRN",8994,1579,1,32,0)
piece 9         ""
"KRN",8994,1579,1,33,0)
piece 10        Date Of Birth (displayable format)
"KRN",8994,1579,1,34,0)
piece 11        Social Security Number (displayable format)
"KRN",8994,1579,1,35,0)
 
"KRN",8994,1579,1,36,0)
 
"KRN",8994,1579,1,37,0)
 
"KRN",8994,1579,1,38,0)
"ADMLKUP" results data format:
"KRN",8994,1579,1,39,0)
RESULTS(0)=Number of lines returned.
"KRN",8994,1579,1,40,0)
 
"KRN",8994,1579,1,41,0)
RESULTS(1)=
"KRN",8994,1579,1,42,0)
piece 1         DFN of Patient
"KRN",8994,1579,1,43,0)
piece 2         DATE of Activity
"KRN",8994,1579,1,44,0)
piece 3         Orderable Item_" "_Dosage Form
"KRN",8994,1579,1,45,0)
piece 4         IV Unique ID
"KRN",8994,1579,1,46,0)
piece 5         Action Status
"KRN",8994,1579,1,47,0)
piece 6         Schedule Type
"KRN",8994,1579,1,48,0)
piece 7         Action Date/Time (FileMan)
"KRN",8994,1579,1,49,0)
piece 8         Action By Initials
"KRN",8994,1579,1,50,0)
piece 9         PRN Reason
"KRN",8994,1579,1,51,0)
piece 10        PRN Effectiveness
"KRN",8994,1579,1,52,0)
 
"KRN",8994,1579,1,53,0)
 
"KRN",8994,1579,1,54,0)
 
"KRN",8994,1579,1,55,0)
"SELECTAD" results data format:
"KRN",8994,1579,1,56,0)
 
"KRN",8994,1579,1,57,0)
RESULTS(0)=Number of lines returned.
"KRN",8994,1579,1,58,0)
 
"KRN",8994,1579,1,59,0)
RESULTS(1)=
"KRN",8994,1579,1,60,0)
piece 1         PSBIEN of the administration selected for edit. ("-1" if error/message)
"KRN",8994,1579,1,61,0)
piece 2         DFN of Patient                                
"KRN",8994,1579,1,62,0)
piece 3         Patient Name
"KRN",8994,1579,1,63,0)
piece 4         SSN
"KRN",8994,1579,1,64,0)
piece 5         Medication
"KRN",8994,1579,1,65,0)
piece 6         BagID
"KRN",8994,1579,1,66,0)
piece 7         AdminStat
"KRN",8994,1579,1,67,0)
piece 8         "for possible later use"
"KRN",8994,1579,1,68,0)
piece 9         AdminD/T
"KRN",8994,1579,1,69,0)
piece 10        BodySiteTxt "|I" or "D"   (Injection or Dermal site)
"KRN",8994,1579,1,70,0)
piece 11        "IV"/"PB"/"UD"
"KRN",8994,1579,1,71,0)
piece 12        "for possible later use"
"KRN",8994,1579,1,72,0)
piece 13        Order Status
"KRN",8994,1579,1,73,0)
piece 14        Schedul. Type
"KRN",8994,1579,1,74,0)
piece 15        Order Number_U/V
"KRN",8994,1579,1,75,0)
piece 16        Order has given MRR or patch or infusing IVbag - Flag
"KRN",8994,1579,1,76,0)
 
"KRN",8994,1579,1,77,0)
RESULTS(2)=
"KRN",8994,1579,1,78,0)
piece 1         PRN Reason
"KRN",8994,1579,1,79,0)
piece 2         PRN Effectiveness
"KRN",8994,1579,1,80,0)
 
"KRN",8994,1579,1,81,0)
RESULTS(3..n) [for each dd/add/sol] =
"KRN",8994,1579,1,82,0)
piece 1         "DD"/"ADD"/"SOL"
"KRN",8994,1579,1,83,0)
piece 2         drug IEN
"KRN",8994,1579,1,84,0)
piece 3         drug Name
"KRN",8994,1579,1,85,0)
piece 4         Units Ordered
"KRN",8994,1579,1,86,0)
piece 5         Units Given
"KRN",8994,1579,1,87,0)
piece 6         Units of Administration
"KRN",8994,1579,1,88,0)
piece 7         High Risk flag
"KRN",8994,1579,1,89,0)
piece 8         Medication Requires Removal (MRR) flag
"KRN",8994,1579,2,0)
^8994.02A^1^1
"KRN",8994,1579,2,1,0)
PSBREC^2^^1^1
"KRN",8994,1579,2,1,1,0)
^8994.021^9^9^3040504^^
"KRN",8994,1579,2,1,1,1,0)
PSBREC  (array)
"KRN",8994,1579,2,1,1,2,0)
(0)     determines  "lookup" function 
"KRN",8994,1579,2,1,1,3,0)
        "PTLKUP"  (patient file (#2) lookup)
"KRN",8994,1579,2,1,1,4,0)
        "ADMLKUP"  (administration lookup)
"KRN",8994,1579,2,1,1,5,0)
        "SELECTAD" (process selected administration. 
"KRN",8994,1579,2,1,1,6,0)
(1)     values to use for the lookup.  (DFN for the ADMLKUP)
"KRN",8994,1579,2,1,1,7,0)
        "SELECTAD" must present the PSBIEN value
"KRN",8994,1579,2,1,1,8,0)
        of the user-chosen administration.
"KRN",8994,1579,2,1,1,9,0)
(2)     search date for ADMLKUP
"KRN",8994,1579,2,"B","PSBREC",1)

"KRN",8994,1579,2,"PARAMSEQ",1,1)

"KRN",8994,1579,3,0)
^8994.03^5^5^3040504^^
"KRN",8994,1579,3,1,0)
RESULTS (array)
"KRN",8994,1579,3,2,0)
(0)     number of lookup matches
"KRN",8994,1579,3,3,0)
(1)     error message or detail data per lookup match
"KRN",8994,1579,3,4,0)
(n)     continued data per subsequent lookup match.
"KRN",8994,1579,3,5,0)
        per SELECTAD - administration data ...
"KRN",8994,1958,-1)
0^3
"KRN",8994,1958,0)
PSB COVERSHEET1^RPC^PSBCSUTL^4^A^0^^1^3
"KRN",8994,1958,1,0)
^^134^134^3120517^
"KRN",8994,1958,1,1,0)
(modified 05/08/2007)
"KRN",8994,1958,1,2,0)
 
"KRN",8994,1958,1,3,0)
PSB COVERSHEET1 is to return order data per patient and construction of 
"KRN",8994,1958,1,4,0)
BCMA Coversheet view as presented by the BCMA-HSC Coversheet Phase II
"KRN",8994,1958,1,5,0)
SRS and SDD documentation.
"KRN",8994,1958,1,6,0)
 
"KRN",8994,1958,1,7,0)
INPUT:  communications area -  "" 
"KRN",8994,1958,1,8,0)
        patient's DFN       -  DFN     (patient ptr.)
"KRN",8994,1958,1,9,0)
                            -  TIME RANGE (24/48/72)
"KRN",8994,1958,1,10,0)
                            -  PSBSIOPI (SI/OPI Word Processing text line)
"KRN",8994,1958,1,11,0)
                                  (true/false flag 1/0 default=0 - Opt)
"KRN",8994,1958,1,12,0)
                            -  PSBCLINORD (Clinic Order request flag, 1/0)
"KRN",8994,1958,1,13,0)
 
"KRN",8994,1958,1,14,0)
OUTPUT: results data        -  RESULTS array containing order data 
"KRN",8994,1958,1,15,0)
                                per +/-TIME RANGE hours.
"KRN",8994,1958,1,16,0)
 
"KRN",8994,1958,1,17,0)
 
"KRN",8994,1958,1,18,0)
 
"KRN",8994,1958,1,19,0)
 
"KRN",8994,1958,1,20,0)
Example "M" call and results:
"KRN",8994,1958,1,21,0)
 
"KRN",8994,1958,1,22,0)
 
"KRN",8994,1958,1,23,0)
 
"KRN",8994,1958,1,24,0)
D RPC^PSBCSUTL("",783,24,1)
"KRN",8994,1958,1,25,0)
 
"KRN",8994,1958,1,26,0)
RPC Call: PSB COVERSHEET1
"KRN",8994,1958,1,27,0)
Results[0] = 90
"KRN",8994,1958,1,28,0)
Results[1] = 1^0^1^1^COVERSHEET DATA FOLLOWS^1^4
"KRN",8994,1958,1,29,0)
Results[2] = ORD^783^85U^85^U^C^Q6H^^NITROGLYCERIN PATCH^200MG 
"KRN",8994,1958,1,30,0)
^EPIDURAL^3070501.115014^^^^455^0^0^PATCH^***^G^3070501.09^A^^^0^3070523.0
"KRN",8994,1958,1,31,0)
718^3070501.115014^1
"KRN",8994,1958,1,32,0)
Results[3] = ORC^!TEST MED THERAPY ANTIANGINALS
"KRN",8994,1958,1,33,0)
Results[4] = DD^2313^NITROGLYCERIN PATCHES 10MG/24HR^1^
"KRN",8994,1958,1,34,0)
Results[5] = 
"KRN",8994,1958,1,35,0)
ADM^3070501.09^^100000746^G^3070501.115014^TEJ^10000000039^^3070501.1500
"KRN",8994,1958,1,36,0)
Results[6] = CMT^THIS SHOULD SHOW ON THE MED THERAPY PER 56   
"KRN",8994,1958,1,37,0)
ANTIANGINALS^^10000000039^TEJ^3070501.115014
"KRN",8994,1958,1,38,0)
Results[7] = ADM^3070506.15^^^^^^^^3070501.1500
"KRN",8994,1958,1,39,0)
Results[8] = ADM^3070506.21^^^^^^^^3070501.1500
"KRN",8994,1958,1,40,0)
Results[9] = ADM^3070507.03^^^^^^^^3070501.1500
"KRN",8994,1958,1,41,0)
Results[10] = ADM^3070507.09^^^^^^^^3070501.1500
"KRN",8994,1958,1,42,0)
Results[11] = ADM^3070507.15^^^^^^^^3070501.1500
"KRN",8994,1958,1,43,0)
Results[12] = ADM^3070507.21^^^^^^^^3070501.1500
"KRN",8994,1958,1,44,0)
Results[13] = ADM^3070508.03^^^^^^^^3070501.1500
"KRN",8994,1958,1,45,0)
Results[14] = ADM^3070508.09^^^^^^^^3070501.1500
"KRN",8994,1958,1,46,0)
Results[15] = END
"KRN",8994,1958,1,47,0)
Results[16] = ORD^783^83U^83^U^C^Q3H^^RANITIDINE TAB^150MG 
"KRN",8994,1958,1,48,0)
^ORAL^3070405.12403^^^^558^0^0^TAB^***^R^3070430.1^A^^^0^3070602.1207^^1
"KRN",8994,1958,1,49,0)
Results[17] = ORC^!TEST THE ADMIN TIMES REPORT W/ DATE RANGE +3DAYS
"KRN",8994,1958,1,50,0)
Results[18] = DD^5094^RANITIDINE 150MG TAB^1^
"KRN",8994,1958,1,51,0)
Results[19] = ADM^3070506.13^^^^^^^^3070430.1000
"KRN",8994,1958,1,52,0)
Results[20] = ADM^3070506.16^^^^^^^^3070430.1000
"KRN",8994,1958,1,53,0)
Results[21] = ADM^3070506.19^^^^^^^^3070430.1000
"KRN",8994,1958,1,54,0)
Results[22] = ADM^3070506.22^^^^^^^^3070430.1000
"KRN",8994,1958,1,55,0)
Results[23] = ADM^3070507.01^^^^^^^^3070430.1000
"KRN",8994,1958,1,56,0)
Results[24] = ADM^3070507.04^^^^^^^^3070430.1000
"KRN",8994,1958,1,57,0)
Results[25] = ADM^3070507.07^^^^^^^^3070430.1000
"KRN",8994,1958,1,58,0)
Results[26] = ADM^3070507.1^^^^^^^^3070430.1000
"KRN",8994,1958,1,59,0)
Results[27] = ADM^3070507.13^^^^^^^^3070430.1000
"KRN",8994,1958,1,60,0)
Results[28] = ADM^3070507.16^^^^^^^^3070430.1000
"KRN",8994,1958,1,61,0)
Results[29] = ADM^3070507.19^^^^^^^^3070430.1000
"KRN",8994,1958,1,62,0)
Results[30] = ADM^3070507.22^^^^^^^^3070430.1000
"KRN",8994,1958,1,63,0)
Results[31] = ADM^3070508.01^^^^^^^^3070430.1000
"KRN",8994,1958,1,64,0)
Results[32] = ADM^3070508.04^^^^^^^^3070430.1000
"KRN",8994,1958,1,65,0)
Results[33] = ADM^3070508.07^^^^^^^^3070430.1000
"KRN",8994,1958,1,66,0)
Results[34] = ADM^3070508.1^^^^^^^^3070430.1000
"KRN",8994,1958,1,67,0)
Results[35] = ADM^3070508.13^^^^^^^^3070430.1000
"KRN",8994,1958,1,68,0)
Results[36] = END
"KRN",8994,1958,1,69,0)
Results[37] = ORD^783^84U^84^U^C^Q3H^^ISOSORBIDE DINITRATE TAB,ORAL^40MG 
"KRN",8994,1958,1,70,0)
^ORAL^^^^^354^0^0^TAB,ORAL^***^^3070501.07^A^^^0^3070603.04^^1
"KRN",8994,1958,1,71,0)
Results[38] = ORC^!TEST MED THERAPY ANTIANGINALS
"KRN",8994,1958,1,72,0)
Results[39] = DD^2191^ISOSORBIDE  20MG TAB ^2^
"KRN",8994,1958,1,73,0)
Results[40] = ADM^3070506.13^^^^^^^^3070501.0700
"KRN",8994,1958,1,74,0)
Results[41] = ADM^3070506.16^^^^^^^^3070501.0700
"KRN",8994,1958,1,75,0)
Results[42] = ADM^3070506.19^^^^^^^^3070501.0700
"KRN",8994,1958,1,76,0)
Results[43] = ADM^3070506.22^^^^^^^^3070501.0700
"KRN",8994,1958,1,77,0)
Results[44] = ADM^3070507.01^^^^^^^^3070501.0700
"KRN",8994,1958,1,78,0)
Results[45] = ADM^3070507.04^^^^^^^^3070501.0700
"KRN",8994,1958,1,79,0)
Results[46] = ADM^3070507.07^^^^^^^^3070501.0700
"KRN",8994,1958,1,80,0)
Results[47] = ADM^3070507.1^^^^^^^^3070501.0700
"KRN",8994,1958,1,81,0)
Results[48] = ADM^3070507.13^^^^^^^^3070501.0700
"KRN",8994,1958,1,82,0)
Results[49] = ADM^3070507.16^^^^^^^^3070501.0700
"KRN",8994,1958,1,83,0)
Results[50] = ADM^3070507.19^^^^^^^^3070501.0700
"KRN",8994,1958,1,84,0)
Results[51] = ADM^3070507.22^^^^^^^^3070501.0700
"KRN",8994,1958,1,85,0)
Results[52] = ADM^3070508.01^^^^^^^^3070501.0700
"KRN",8994,1958,1,86,0)
Results[53] = ADM^3070508.04^^^^^^^^3070501.0700
"KRN",8994,1958,1,87,0)
Results[54] = ADM^3070508.07^^^^^^^^3070501.0700
"KRN",8994,1958,1,88,0)
Results[55] = ADM^3070508.1^^^^^^^^3070501.0700
"KRN",8994,1958,1,89,0)
Results[56] = ADM^3070508.13^^^^^^^^3070501.0700
"KRN",8994,1958,1,90,0)
Results[57] = END
"KRN",8994,1958,1,91,0)
Results[58] = ORD^783^86U^86^U^C^Q3H^^PENTAERYTHRITOL TETRANITRATE 
"KRN",8994,1958,1,92,0)
TAB,ORAL^10MG 
"KRN",8994,1958,1,93,0)
^ORAL^3070501.125733^^^^481^0^0^TAB,ORAL^***^G^3070501.09^A^^^0^3070614.06
"KRN",8994,1958,1,94,0)
11^3070501.125733^1
"KRN",8994,1958,1,95,0)
Results[59] = ORC^!TEST THIS ONE TOO ANTIANGINALS
"KRN",8994,1958,1,96,0)
Results[60] = DD^251^PENTAERYTHRITOL  10MG TAB^1^
"KRN",8994,1958,1,97,0)
Results[61] = 
"KRN",8994,1958,1,98,0)
ADM^3070501.125733^^100000747^G^3070501.125733^TEJ^10000000039^^3070501.15
"KRN",8994,1958,1,99,0)
00
"KRN",8994,1958,1,100,0)
Results[62] = ADM^3070506.15^^^^^^^^3070501.1500
"KRN",8994,1958,1,101,0)
Results[63] = ADM^3070506.18^^^^^^^^3070501.1500
"KRN",8994,1958,1,102,0)
Results[64] = ADM^3070506.21^^^^^^^^3070501.1500
"KRN",8994,1958,1,103,0)
Results[65] = ADM^3070506.24^^^^^^^^3070501.1500
"KRN",8994,1958,1,104,0)
Results[66] = ADM^3070507.03^^^^^^^^3070501.1500
"KRN",8994,1958,1,105,0)
Results[67] = ADM^3070507.06^^^^^^^^3070501.1500
"KRN",8994,1958,1,106,0)
Results[68] = ADM^3070507.09^^^^^^^^3070501.1500
"KRN",8994,1958,1,107,0)
Results[69] = ADM^3070507.12^^^^^^^^3070501.1500
"KRN",8994,1958,1,108,0)
Results[70] = ADM^3070507.15^^^^^^^^3070501.1500
"KRN",8994,1958,1,109,0)
Results[71] = ADM^3070507.18^^^^^^^^3070501.1500
"KRN",8994,1958,1,110,0)
Results[72] = ADM^3070507.21^^^^^^^^3070501.1500
"KRN",8994,1958,1,111,0)
Results[73] = ADM^3070507.24^^^^^^^^3070501.1500
"KRN",8994,1958,1,112,0)
Results[74] = ADM^3070508.03^^^^^^^^3070501.1500
"KRN",8994,1958,1,113,0)
Results[75] = ADM^3070508.06^^^^^^^^3070501.1500
"KRN",8994,1958,1,114,0)
Results[76] = ADM^3070508.09^^^^^^^^3070501.1500
"KRN",8994,1958,1,115,0)
Results[77] = ADM^3070508.12^^^^^^^^3070501.1500
"KRN",8994,1958,1,116,0)
Results[78] = END
"KRN",8994,1958,1,117,0)
Results[79] = ORD^783^56V^56^V^C^^^POTASSIUM (K) LIQUID,ORAL^ 780 
"KRN",8994,1958,1,118,0)
ml/hr^INTRACARDIAC INTRA-ARTICULAR 
"KRN",8994,1958,1,119,0)
INTRAVENOUS^3070125.142403^^^^512^0^0^^***^S^3070423.08^A^^^0^3070525.2204
"KRN",8994,1958,1,120,0)
^^3
"KRN",8994,1958,1,121,0)
Results[80] = ORC^!THERE WILL BE NO ACTION ON THIS ORDER!!  nox)
"KRN",8994,1958,1,122,0)
Results[81] = ORF^CPRS^CPRS^REASON FOR THE CPRS FLAG...
"KRN",8994,1958,1,123,0)
Results[82] = ORF^NOX^No Action Taken On Order
"KRN",8994,1958,1,124,0)
Results[83] = ADD^24^KCL^78 MEQ^
"KRN",8994,1958,1,125,0)
Results[84] = SOL^14^DEXTROSE 5% IN N. SALINE^1000 ML^
"KRN",8994,1958,1,126,0)
Results[85] = ID^783V241^ADD;24^SOL;14
"KRN",8994,1958,1,127,0)
Results[86] = ID^783V240^ADD;24^SOL;14
"KRN",8994,1958,1,128,0)
Results[87] = ID^783V239^ADD;24^SOL;14
"KRN",8994,1958,1,129,0)
Results[88] = ID^783V238^ADD;24^SOL;14
"KRN",8994,1958,1,130,0)
Results[89] = ID^783V237^ADD;24^SOL;14
"KRN",8994,1958,1,131,0)
Results[90] = SI^Watch for next hour for any reaction to this medication 
"KRN",8994,1958,1,132,0)
Results[91] = SI^and stop administration if any side effects are observed
"KRN",8994,1958,1,133,0)
Results[92] = SI^and call Provider immediately for consult.
"KRN",8994,1958,1,134,0)
Results[93] = END
"KRN",8994,1958,2,0)
^8994.02A^5^4
"KRN",8994,1958,2,2,0)
DFN^1^^1^1
"KRN",8994,1958,2,2,1,0)
^8994.021^1^1^3070712^^^^
"KRN",8994,1958,2,2,1,1,0)
DFN is the internal entity number per the patient file (file #2).
"KRN",8994,1958,2,3,0)
HRSBACK^1^^0^2
"KRN",8994,1958,2,3,1,0)
^^2^2^3070712^
"KRN",8994,1958,2,3,1,1,0)
HRSBACK - (optional) The number of hours in the past the coversheet will 
"KRN",8994,1958,2,3,1,2,0)
supply order information for.  [default is 24 hours]
"KRN",8994,1958,2,4,0)
PSBSIOPI^1^1^0^3
"KRN",8994,1958,2,4,1,0)
^8994.021^5^5^3120313^^^
"KRN",8994,1958,2,4,1,1,0)
 This parameter is a true/false flag (1/0).  If true use the new SI/OP Wp
"KRN",8994,1958,2,4,1,2,0)
 fields and return data in the Results array to the GUI Client.
"KRN",8994,1958,2,4,1,3,0)
  
"KRN",8994,1958,2,4,1,4,0)
 The field is not required, so a null will convert into a 0, for false,
"KRN",8994,1958,2,4,1,5,0)
 making this backwards compatible.
"KRN",8994,1958,2,5,0)
PSBCLINORD^1^1^0^4
"KRN",8994,1958,2,5,1,0)
^8994.021^6^6^3151130^^^
"KRN",8994,1958,2,5,1,1,0)
This parameter is a True/False flag (1/0).  If true, then return only
"KRN",8994,1958,2,5,1,2,0)
Clinic Orders and not Inpatient Medication orders to BCMA, else if false,
"KRN",8994,1958,2,5,1,3,0)
return only Inpatient Medication orders to BCMA.
"KRN",8994,1958,2,5,1,4,0)
 
"KRN",8994,1958,2,5,1,5,0)
The field is not required, so a null will convert into a 0, for a default
"KRN",8994,1958,2,5,1,6,0)
false value, making this backwards compatible.
"KRN",8994,1958,2,"B","DFN",2)

"KRN",8994,1958,2,"B","HRSBACK",3)

"KRN",8994,1958,2,"B","PSBCLINORD",5)

"KRN",8994,1958,2,"B","PSBSIOPI",4)

"KRN",8994,1958,2,"PARAMSEQ",1,2)

"KRN",8994,1958,2,"PARAMSEQ",2,3)

"KRN",8994,1958,2,"PARAMSEQ",3,4)

"KRN",8994,1958,2,"PARAMSEQ",4,5)

"KRN",8994,1958,3,0)
^^119^119^3160219^
"KRN",8994,1958,3,1,0)
Remote Procedure Call - PSB COVERSHEET1
"KRN",8994,1958,3,2,0)
RESULTS():
"KRN",8994,1958,3,3,0)
The return data will be listed in the RESULTS "global".
"KRN",8994,1958,3,4,0)
 
"KRN",8994,1958,3,5,0)
Results[0] =  ^1      Total lines in Results array
"KRN",8994,1958,3,6,0)
 
"KRN",8994,1958,3,7,0)
Results[1] =  ^1      Data for the Unit Dose tab (0=no, 1=yes)
"KRN",8994,1958,3,8,0)
              ^2      Data for the Piggy Back tab (0=no, 1=yes
"KRN",8994,1958,3,9,0)
              ^3      Data for the IV tab (0=no, 1=yes)
"KRN",8994,1958,3,10,0)
              ^4      1 = orders exist;  -1 = an error
"KRN",8994,1958,3,11,0)
              ^5      if ^4 = 1, then COVERSHEET DATA FOLLOWS text
"KRN",8994,1958,3,12,0)
                      if ^4 =-1, then error text
"KRN",8994,1958,3,13,0)
              ^6      Inpatient Meds order count
"KRN",8994,1958,3,14,0)
              ^7      Clinic orders count
"KRN",8994,1958,3,15,0)
 
"KRN",8994,1958,3,16,0)
RESULTS data will be presented with "headers":
"KRN",8994,1958,3,17,0)
 
"KRN",8994,1958,3,18,0)
ORD - Order data
"KRN",8994,1958,3,19,0)
 Order specific data
"KRN",8994,1958,3,20,0)
^1  "ORD"-header
"KRN",8994,1958,3,21,0)
^2  Patient's IEN
"KRN",8994,1958,3,22,0)
^3  Order #_Order type
"KRN",8994,1958,3,23,0)
^4  Order #
"KRN",8994,1958,3,24,0)
^5  Order type
"KRN",8994,1958,3,25,0)
^6  Schedule type
"KRN",8994,1958,3,26,0)
^7  Schedule
"KRN",8994,1958,3,27,0)
^8  Self med
"KRN",8994,1958,3,28,0)
^9  Drug name
"KRN",8994,1958,3,29,0)
^10 Dosage/Flow rate
"KRN",8994,1958,3,30,0)
^11 Med route
"KRN",8994,1958,3,31,0)
^12 Last Action Date/Time
"KRN",8994,1958,3,32,0)
^13 ""
"KRN",8994,1958,3,33,0)
^14 Action code G if any admin record was given for this order
"KRN",8994,1958,3,34,0)
^15 ""
"KRN",8994,1958,3,35,0)
^16 Orderable item (IEN)
"KRN",8994,1958,3,36,0)
^17 Injectable?
"KRN",8994,1958,3,37,0)
^18 Variable dose?
"KRN",8994,1958,3,38,0)
^19 Dosage form
"KRN",8994,1958,3,39,0)
^20 Verifying nurse initials (*** if none)
"KRN",8994,1958,3,40,0)
^21 Last action status (whole order)
"KRN",8994,1958,3,41,0)
^22 Order start date/time (FM)
"KRN",8994,1958,3,42,0)
^23 Order status
"KRN",8994,1958,3,43,0)
^24 ""
"KRN",8994,1958,3,44,0)
^25 ""
"KRN",8994,1958,3,45,0)
^26 Transaction type
"KRN",8994,1958,3,46,0)
^27 Order stop date/time (FM)
"KRN",8994,1958,3,47,0)
^28 Last Given Date/Time
"KRN",8994,1958,3,48,0)
^29 Virtual Due List (VDL) tab indicator = "UD":1 "IVPB":2 "IV":3
"KRN",8994,1958,3,49,0)
^30 Override/Intervention reasons/comments exist (0=No;1=Yes) 
"KRN",8994,1958,3,50,0)
^31 (IVPB tab usage)
"KRN",8994,1958,3,51,0)
^32 Clinic Name (if a Clinic order, else null)
"KRN",8994,1958,3,52,0)
^33 Clinic ien pointer (if a Clinic order, else null)
"KRN",8994,1958,3,53,0)
^35 Prompt for Removal in BCMA code
"KRN",8994,1958,3,54,0)
     (0 for Non-removal type meds)
"KRN",8994,1958,3,55,0)
     (1 if remove time is next admin date/time)
"KRN",8994,1958,3,56,0)
     (3 if remove time is prior the next admin date/time)
"KRN",8994,1958,3,57,0)
^36 Remove Date/Time for MMR type meds. 
"KRN",8994,1958,3,58,0)
     (populated for Prompt code of 1 or 3 only) 
"KRN",8994,1958,3,59,0)
 
"KRN",8994,1958,3,60,0)
ORC - Order Comment/Special instruction
"KRN",8994,1958,3,61,0)
^1  "ORC"- header
"KRN",8994,1958,3,62,0)
^2  Special instruction
"KRN",8994,1958,3,63,0)
 
"KRN",8994,1958,3,64,0)
 
"KRN",8994,1958,3,65,0)
ORF - Order Flag
"KRN",8994,1958,3,66,0)
^1  "ORF"- header
"KRN",8994,1958,3,67,0)
^2  type of flag
"KRN",8994,1958,3,68,0)
^3  flag origin
"KRN",8994,1958,3,69,0)
^4  associated comment
"KRN",8994,1958,3,70,0)
 
"KRN",8994,1958,3,71,0)
 
"KRN",8994,1958,3,72,0)
DD  - Dispense Drug
"KRN",8994,1958,3,73,0)
^1  "DD" - header
"KRN",8994,1958,3,74,0)
^2  Dispense drug IEN
"KRN",8994,1958,3,75,0)
^3  Dispense drug name
"KRN",8994,1958,3,76,0)
^4  Units per dose
"KRN",8994,1958,3,77,0)
^5  Inactive date
"KRN",8994,1958,3,78,0)
 
"KRN",8994,1958,3,79,0)
ADD - Additive
"KRN",8994,1958,3,80,0)
^1  "ADD" - header
"KRN",8994,1958,3,81,0)
^2  Additive IEN
"KRN",8994,1958,3,82,0)
^3  Additive name
"KRN",8994,1958,3,83,0)
^4  Strength
"KRN",8994,1958,3,84,0)
^5  Bottle
"KRN",8994,1958,3,85,0)
 
"KRN",8994,1958,3,86,0)
SOL - Solution
"KRN",8994,1958,3,87,0)
^1  "SOL" - header
"KRN",8994,1958,3,88,0)
^2  Solution IEN
"KRN",8994,1958,3,89,0)
^3  Solution name
"KRN",8994,1958,3,90,0)
^4  Volume
"KRN",8994,1958,3,91,0)
 
"KRN",8994,1958,3,92,0)
ID  - Identification
"KRN",8994,1958,3,93,0)
^1  "ID" - header
"KRN",8994,1958,3,94,0)
^2  ID number
"KRN",8994,1958,3,95,0)
^3  Additive IEN
"KRN",8994,1958,3,96,0)
 
"KRN",8994,1958,3,97,0)
ADM - Administration
"KRN",8994,1958,3,98,0)
^1  "ADM" - header
"KRN",8994,1958,3,99,0)
^2  Scheduled admin date/time
"KRN",8994,1958,3,100,0)
^3  Bag id
"KRN",8994,1958,3,101,0)
^4  Med log ien
"KRN",8994,1958,3,102,0)
^5  Action
"KRN",8994,1958,3,103,0)
^6  Date/time
"KRN",8994,1958,3,104,0)
^7  Action by initials
"KRN",8994,1958,3,105,0)
^8  Action by ien
"KRN",8994,1958,3,106,0)
^9  Prn reason
"KRN",8994,1958,3,107,0)
^10 Next Action Date/Time
"KRN",8994,1958,3,108,0)
 
"KRN",8994,1958,3,109,0)
CMT - Comment per administration
"KRN",8994,1958,3,110,0)
^1  "CMT" - header
"KRN",8994,1958,3,111,0)
^2  Comment
"KRN",8994,1958,3,112,0)
^3  Prn effectiveness 
"KRN",8994,1958,3,113,0)
 
"KRN",8994,1958,3,114,0)
SI - WP text for Special Instruction/Other Print Info
"KRN",8994,1958,3,115,0)
^1    Literal "SI"
"KRN",8994,1958,3,116,0)
^2    Special Instruction/Other Print Info text line
"KRN",8994,1958,3,117,0)
 
"KRN",8994,1958,3,118,0)
END - End
"KRN",8994,1958,3,119,0)
^1  "END" - header
"KRN",8994,3059,-1)
0^5
"KRN",8994,3059,0)
PSB GETINJECTIONSITE^RPC^PSBINJEC^2^P^0^^1^2
"KRN",8994,3059,1,0)
^8994.01^4^4^3151130^^^
"KRN",8994,3059,1,1,0)
Get the last nn injections site info from the BCMA MEDICATION LOG file 
"KRN",8994,3059,1,2,0)
#53.9.   Get only of specific Orderable Items per patient in reverse
"KRN",8994,3059,1,3,0)
chronology date/time order or All Orderable Items per patient in 
"KRN",8994,3059,1,4,0)
reverse chronology date/time order.
"KRN",8994,3059,2,0)
^8994.02A^5^4
"KRN",8994,3059,2,1,0)
DFN^1^^1^1
"KRN",8994,3059,2,1,1,0)
^8994.021^1^1^3110912^^
"KRN",8994,3059,2,1,1,1,0)
Patient IEN number.
"KRN",8994,3059,2,3,0)
TIME^1^^1^3
"KRN",8994,3059,2,3,1,0)
^^2^2^3111020^
"KRN",8994,3059,2,3,1,1,0)
A time range, in hours, to search backwards through the BCMA MEDICATION 
"KRN",8994,3059,2,3,1,2,0)
LOG file #53.79 for injection site data. 
"KRN",8994,3059,2,4,0)
MAX^1^^1^4
"KRN",8994,3059,2,4,1,0)
^8994.021^2^2^3110912^^
"KRN",8994,3059,2,4,1,1,0)
The maximum number of injection site items to return within the Time 
"KRN",8994,3059,2,4,1,2,0)
Range specified.
"KRN",8994,3059,2,5,0)
PSBOI^1^^0^2
"KRN",8994,3059,2,5,1,0)
^8994.021^1^1^3111020^^^
"KRN",8994,3059,2,5,1,1,0)
Orderable Item IEN.
"KRN",8994,3059,2,"B","DFN",1)

"KRN",8994,3059,2,"B","MAX",4)

"KRN",8994,3059,2,"B","PSBOI",5)

"KRN",8994,3059,2,"B","TIME",3)

"KRN",8994,3059,2,"PARAMSEQ",1,1)

"KRN",8994,3059,2,"PARAMSEQ",2,5)

"KRN",8994,3059,2,"PARAMSEQ",3,3)

"KRN",8994,3059,2,"PARAMSEQ",4,4)

"KRN",8994,3059,3,0)
^^11^11^3151130^
"KRN",8994,3059,3,1,0)
 Results[0] = Number of Nodes.
"KRN",8994,3059,3,2,0)
 Results[n]= ^1  Action Date/Time (Fileman format)
"KRN",8994,3059,3,3,0)
             ^2  Orderable Item IEN
"KRN",8994,3059,3,4,0)
             ^3  Orderable Item Name
"KRN",8994,3059,3,5,0)
             ^4  Injection Site
"KRN",8994,3059,3,6,0)
             ^5  Type of Lit desired
"KRN",8994,3059,3,7,0)
                   "D" - Dermal
"KRN",8994,3059,3,8,0)
                   "I" - Injection
"KRN",8994,3059,3,9,0)
 
"KRN",8994,3059,3,10,0)
 Results[1]= ^1  -1
"KRN",8994,3059,3,11,0)
             ^2  Error text message, i.e. <<No data to display>>
"KRN",8994,3328,-1)
0^7
"KRN",8994,3328,0)
PSB GETSETWP^MDRPC^PSBPAR^4^R^0^^1^1
"KRN",8994,3328,1,0)
^^3^3^3151214^
"KRN",8994,3328,1,1,0)
This RPC allows the GUI to add and update body site locations graphically 
"KRN",8994,3328,1,2,0)
by sending the coordinates of the loction on the body and storing these
"KRN",8994,3328,1,3,0)
using word processing free form text type field.
"KRN",8994,3328,2,0)
^8994.02A^1^1
"KRN",8994,3328,2,1,0)
OPTION^1^10^1^1
"KRN",8994,3328,2,"B","OPTION",1)

"KRN",8994,3328,2,"PARAMSEQ",1,1)

"MBREQ")
0
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"ORD",21,8989.52)
8989.52;21;1;;PAR2E1^XPDTA2;PAR2F1^XPDIA3;PAR2E1^XPDIA3;PAR2F2^XPDIA3;;PAR2DEL^XPDIA3(%)
"ORD",21,8989.52,0)
PARAMETER TEMPLATE
"PKG",536,-1)
1^1
"PKG",536,0)
BAR CODE MED ADMIN^PSB^BAR CODE MEDICATION ADMINISTRATION
"PKG",536,20,0)
^9.402P^^0
"PKG",536,22,0)
^9.49I^1^1
"PKG",536,22,1,0)
3.0^3040224^3040318^11874
"PKG",536,22,1,"PAH",1,0)
83^3161020^10000000082
"PKG",536,22,1,"PAH",1,1,0)
^^138^138^3161020
"PKG",536,22,1,"PAH",1,1,1,0)
******************************* ATTENTION ********************************
"PKG",536,22,1,"PAH",1,1,2,0)
  
"PKG",536,22,1,"PAH",1,1,3,0)
Clinical Ancillary Services (CAS) Development-Delivery of Pharmacy 
"PKG",536,22,1,"PAH",1,1,4,0)
Enhancements (DDPE) VA Inpatient Medication Administration - Transdermal
"PKG",536,22,1,"PAH",1,1,5,0)
enhancement includes 5 patches which must be installed in the following
"PKG",536,22,1,"PAH",1,1,6,0)
order:
"PKG",536,22,1,"PAH",1,1,7,0)
  
"PKG",536,22,1,"PAH",1,1,8,0)
1.      PSS*1*191
"PKG",536,22,1,"PAH",1,1,9,0)
2.      PSJ*5*315
"PKG",536,22,1,"PAH",1,1,10,0)
3.      PSB*3*83
"PKG",536,22,1,"PAH",1,1,11,0)
4.      OR*3*417
"PKG",536,22,1,"PAH",1,1,12,0)
5.      PSB*3*87
"PKG",536,22,1,"PAH",1,1,13,0)
 
"PKG",536,22,1,"PAH",1,1,14,0)
ATTENTION: This enhancement also includes a new Graphical User Interface
"PKG",536,22,1,"PAH",1,1,15,0)
(GUI) executable, BCMA GUI PSB3_P083.EXE. Installation of this GUI is
"PKG",536,22,1,"PAH",1,1,16,0)
required immediately after the KIDS install for the Patch to function.
"PKG",536,22,1,"PAH",1,1,17,0)
 
"PKG",536,22,1,"PAH",1,1,18,0)
For retrieval and installation instructions, please see the Client 
"PKG",536,22,1,"PAH",1,1,19,0)
Installation Instructions section.
"PKG",536,22,1,"PAH",1,1,20,0)
**************************************************************************
"PKG",536,22,1,"PAH",1,1,21,0)
 
"PKG",536,22,1,"PAH",1,1,22,0)
The Clinical Ancillary Services Development-Delivery of Pharmacy 
"PKG",536,22,1,"PAH",1,1,23,0)
Enhancements (CAS DDPE) project addresses several NSR's, which center 
"PKG",536,22,1,"PAH",1,1,24,0)
around providing a means for properly handling Transdermal Medications 
"PKG",536,22,1,"PAH",1,1,25,0)
Requiring Removal (MRR) beyond the current medications of dosage form 
"PKG",536,22,1,"PAH",1,1,26,0)
Patch.  These enhancements interface with Inpatient Pharmacy package, 
"PKG",536,22,1,"PAH",1,1,27,0)
which will be storing Scheduled Removal Times, for inpatient orders that 
"PKG",536,22,1,"PAH",1,1,28,0)
are designated as MRR type medications.  See associated patches PSS*1*191 
"PKG",536,22,1,"PAH",1,1,29,0)
and PSJ*5*315, for details on how MRR medications are designated.
"PKG",536,22,1,"PAH",1,1,30,0)
 
"PKG",536,22,1,"PAH",1,1,31,0)
This BCMA enhancement also includes a new Graphical User Interface (GUI) 
"PKG",536,22,1,"PAH",1,1,32,0)
executable, BCMA GUI PSB3_P083.EXE. Installation of this GUI is required 
"PKG",536,22,1,"PAH",1,1,33,0)
immediately after the KIDS install for the Patch to function.
"PKG",536,22,1,"PAH",1,1,34,0)
 
"PKG",536,22,1,"PAH",1,1,35,0)
Features of the BCMA GUI provided by this project are listed below.
"PKG",536,22,1,"PAH",1,1,36,0)
 
"PKG",536,22,1,"PAH",1,1,37,0)
 1. Change the current GUI Unit Dose tab column labeled "Admin Time" to 
"PKG",536,22,1,"PAH",1,1,38,0)
    "Next Dose Action".
"PKG",536,22,1,"PAH",1,1,39,0)
 
"PKG",536,22,1,"PAH",1,1,40,0)
 2. The "Next Dose Action" column will now contain both the next admin
"PKG",536,22,1,"PAH",1,1,41,0)
    times for scheduled administrations as well as the next Removal time
"PKG",536,22,1,"PAH",1,1,42,0)
    for MRR type medications. The initial login to BCMA, will sort the
"PKG",536,22,1,"PAH",1,1,43,0)
    Unit Dose tab in ascending order by this column, so older actions for
"PKG",536,22,1,"PAH",1,1,44,0)
    medications will be at the top of the VDL display.
"PKG",536,22,1,"PAH",1,1,45,0)
 
"PKG",536,22,1,"PAH",1,1,46,0)
      a. The Next Action of an administration will contain the word "DUE"
"PKG",536,22,1,"PAH",1,1,47,0)
         followed by the scheduled admin time in the standard date@admin
"PKG",536,22,1,"PAH",1,1,48,0)
         time format currently in use.
"PKG",536,22,1,"PAH",1,1,49,0)
      b. The Next Action of a removal will contain the word "REMOVE"
"PKG",536,22,1,"PAH",1,1,50,0)
         followed by the scheduled removal time in the standard
"PKG",536,22,1,"PAH",1,1,51,0)
         date@time format.
"PKG",536,22,1,"PAH",1,1,52,0)
      c. The Next Action of an administration that is past due to be
"PKG",536,22,1,"PAH",1,1,53,0)
         given will contain the word "LATE" followed by the scheduled
"PKG",536,22,1,"PAH",1,1,54,0)
         admin time in the standard date@admin time format currently in
"PKG",536,22,1,"PAH",1,1,55,0)
         use.                
"PKG",536,22,1,"PAH",1,1,56,0)
      d. The Next Action of a removal that is past due to be removed will
"PKG",536,22,1,"PAH",1,1,57,0)
         contain the word "LATE-RM" followed by the scheduled removal time
"PKG",536,22,1,"PAH",1,1,58,0)
         in the standard date@time format.
"PKG",536,22,1,"PAH",1,1,59,0)
 
"PKG",536,22,1,"PAH",1,1,60,0)
 3. Change the current GUI column labeled "Wit" to "Alert".
"PKG",536,22,1,"PAH",1,1,61,0)
 
"PKG",536,22,1,"PAH",1,1,62,0)
 4. The Alert column will still have the ability to display the Witness 
"PKG",536,22,1,"PAH",1,1,63,0)
    required icon and will also be able to display a new Remove icon.  
"PKG",536,22,1,"PAH",1,1,64,0)
      a. The icon is displayed only for MRR type meds that were Given and
"PKG",536,22,1,"PAH",1,1,65,0)
         their next Action is for Removal.
"PKG",536,22,1,"PAH",1,1,66,0)
 
"PKG",536,22,1,"PAH",1,1,67,0)
 5. Early/Late warnings will also be associated with medications being 
"PKG",536,22,1,"PAH",1,1,68,0)
    removed early or late using the same early late time range that is
"PKG",536,22,1,"PAH",1,1,69,0)
    used for early or late medication admins.
"PKG",536,22,1,"PAH",1,1,70,0)
      a. User comments are prompted for and stored upon continuing with
"PKG",536,22,1,"PAH",1,1,71,0)
         the Early/Late removal action.
"PKG",536,22,1,"PAH",1,1,72,0)
 
"PKG",536,22,1,"PAH",1,1,73,0)
 6. Variances will also be tracked for Early/Late Removals in the same 
"PKG",536,22,1,"PAH",1,1,74,0)
    manner as they are currently for Early/Late medication
"PKG",536,22,1,"PAH",1,1,75,0)
    administrations and will appear on the Medication Variance Log report.
"PKG",536,22,1,"PAH",1,1,76,0)
 
"PKG",536,22,1,"PAH",1,1,77,0)
 7. BCMA Medication Administration History (MAH) report will now print
"PKG",536,22,1,"PAH",1,1,78,0)
    the associated Give, which was previously overwritten by the Remove
"PKG",536,22,1,"PAH",1,1,79,0)
    action, chronologically after the Remove for the Print by Patient 
"PKG",536,22,1,"PAH",1,1,80,0)
    report. The print by Ward report will now include the count of
"PKG",536,22,1,"PAH",1,1,81,0)
    Removals scheduled for the report time period.
"PKG",536,22,1,"PAH",1,1,82,0)
 
"PKG",536,22,1,"PAH",1,1,83,0)
 8. BMCA Medication Log will now show the historical Give date/time below 
"PKG",536,22,1,"PAH",1,1,84,0)
    the current status of the medication, which shows the Remove
"PKG",536,22,1,"PAH",1,1,85,0)
    date/time.
"PKG",536,22,1,"PAH",1,1,86,0)
 
"PKG",536,22,1,"PAH",1,1,87,0)
 9. BCMA Missed Medications report will also show Removals that were
"PKG",536,22,1,"PAH",1,1,88,0)
    missed or up and coming, similar to how missed Gives are currently
"PKG",536,22,1,"PAH",1,1,89,0)
    notated.  The column Heading has been changed from "Admin Date/Time"
"PKG",536,22,1,"PAH",1,1,90,0)
    to "Missed Date/Time".
"PKG",536,22,1,"PAH",1,1,91,0)
 
"PKG",536,22,1,"PAH",1,1,92,0)
10. BCMA Display Order report now includes the Removal Times for this
"PKG",536,22,1,"PAH",1,1,93,0)
    order directly below the current Admin Times.
"PKG",536,22,1,"PAH",1,1,94,0)
 
"PKG",536,22,1,"PAH",1,1,95,0)
11. BCMA Medication History report now includes a prior Give line item
"PKG",536,22,1,"PAH",1,1,96,0)
    directly below the current status line item of Remove (RM). The Remove
"PKG",536,22,1,"PAH",1,1,97,0)
    last action on this administration overwrites the Give information and
"PKG",536,22,1,"PAH",1,1,98,0)
    was no longer printing on this report.  This information is now being
"PKG",536,22,1,"PAH",1,1,99,0)
    retrieved from the Audit log and printed on this report.
"PKG",536,22,1,"PAH",1,1,100,0)
 
"PKG",536,22,1,"PAH",1,1,101,0)
12. BCMA Due List report now includes Remove Times on the report below 
"PKG",536,22,1,"PAH",1,1,102,0)
    the admin times that are due per Medication.
"PKG",536,22,1,"PAH",1,1,103,0)
 
"PKG",536,22,1,"PAH",1,1,104,0)
13. BCMA Coversheet Medication Overview report and the Coversheet 
"PKG",536,22,1,"PAH",1,1,105,0)
    Expired/DC'd/Expiring Orders report will now include Missed-Removals 
"PKG",536,22,1,"PAH",1,1,106,0)
    and Removals on the reports.
"PKG",536,22,1,"PAH",1,1,107,0)
 
"PKG",536,22,1,"PAH",1,1,108,0)
14. BCMA Medication Log report changed the heading from "Inj Site" to 
"PKG",536,22,1,"PAH",1,1,109,0)
    "Body Site".  The  Medication detail body text will display the proper
"PKG",536,22,1,"PAH",1,1,110,0)
    label of "Inj Site:" or "Derm Site:" just prior to the name of the
"PKG",536,22,1,"PAH",1,1,111,0)
    Body site for that medication.
"PKG",536,22,1,"PAH",1,1,112,0)
 
"PKG",536,22,1,"PAH",1,1,113,0)
15. BCMA Medication History Heading line changed from "Injection Site" to
"PKG",536,22,1,"PAH",1,1,114,0)
    "Body Site".
"PKG",536,22,1,"PAH",1,1,115,0)
 
"PKG",536,22,1,"PAH",1,1,116,0)
16. A body site diagram will be added to the BCMA Parameter GUI client 
"PKG",536,22,1,"PAH",1,1,117,0)
    application for the purpose of showing a dot on the body diagram that
"PKG",536,22,1,"PAH",1,1,118,0)
    is associated with the Text representation of that site location on
"PKG",536,22,1,"PAH",1,1,119,0)
    the body.
"PKG",536,22,1,"PAH",1,1,120,0)
 
"PKG",536,22,1,"PAH",1,1,121,0)
17. The BCMA Parameter GUI client application has access to a new kernel 
"PKG",536,22,1,"PAH",1,1,122,0)
    parameter titled in GUI application as "Dermal Site History Max
"PKG",536,22,1,"PAH",1,1,123,0)
    Days:".  This allows the BCMA coordinator the ability to control how
"PKG",536,22,1,"PAH",1,1,124,0)
    many days of prior dermal body site location history will appear, when
"PKG",536,22,1,"PAH",1,1,125,0)
    a clinician is giving a new dermal medication that is prompting for a
"PKG",536,22,1,"PAH",1,1,126,0)
    body site location.
"PKG",536,22,1,"PAH",1,1,127,0)
 
"PKG",536,22,1,"PAH",1,1,128,0)
18. The Orders for MRRs With Removal Properties [PSS MRR ORDERS DIAGNOSTIC
"PKG",536,22,1,"PAH",1,1,129,0)
    RPT] option found on the Pharmacy Data Management [PSS MGR] menu, 
"PKG",536,22,1,"PAH",1,1,130,0)
    will also be placed on the Bar Code Medication Administration Manager
"PKG",536,22,1,"PAH",1,1,131,0)
    [PSB MGR] menu.
"PKG",536,22,1,"PAH",1,1,132,0)
 
"PKG",536,22,1,"PAH",1,1,133,0)
 
"PKG",536,22,1,"PAH",1,1,134,0)
*NOTE* Non-standard schedules such as DAY@HHMM, HHMM, or other Odd 
"PKG",536,22,1,"PAH",1,1,135,0)
       schedules, are not capable of calculating removal times due to a
"PKG",536,22,1,"PAH",1,1,136,0)
       lack of a Frequency.  Regardless of the Prompt for Removal in BCMA
"PKG",536,22,1,"PAH",1,1,137,0)
       code value they will not prompt for removal in BCMA and should be
"PKG",536,22,1,"PAH",1,1,138,0)
       avoided.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
38
"RTN","PSB3P83")
0^^B1833541^n/a
"RTN","PSB3P83",1,0)
PSB3P83 ;BIRMINGHAM/GN-Post install to save Inj to new Body list ;03/06/16 3:06pm
"RTN","PSB3P83",2,0)
 ;;3.0;BAR CODE MED ADMIN;**83**;Mar 2004;Build 89
"RTN","PSB3P83",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSB3P83",4,0)
 ;
"RTN","PSB3P83",5,0)
 ; Reference/IA
"RTN","PSB3P83",6,0)
 ; $$GET^XPAR/2263
"RTN","PSB3P83",7,0)
 ;
"RTN","PSB3P83",8,0)
EN ;Copy a Divisions old PSB LIST INJECTION SITES to new BODY SITES
"RTN","PSB3P83",9,0)
 ;
"RTN","PSB3P83",10,0)
 N PARAM,ENT,QQ,SITE
"RTN","PSB3P83",11,0)
 S PARAM=$O(^XTV(8989.51,"B","PSB ONLINE",""))   ;Online param ien
"RTN","PSB3P83",12,0)
 ;
"RTN","PSB3P83",13,0)
 ;Loop thru Kernel parameters for any Division with the parameter
"RTN","PSB3P83",14,0)
 ; PSB ONLINE answered Y or N.  Nulls won't have an entry in "AC" xref
"RTN","PSB3P83",15,0)
 S ENT=""
"RTN","PSB3P83",16,0)
 F  S ENT=$O(^XTV(8989.5,"AC",PARAM,ENT)) Q:ENT=""  D
"RTN","PSB3P83",17,0)
 .;
"RTN","PSB3P83",18,0)
 .;loop thru all sites per Div per Old Inj list if it exists
"RTN","PSB3P83",19,0)
 .F QQ=1:1 S SITE=$$GET^XPAR(ENT,"PSB LIST INJECTION SITES",QQ) Q:SITE=""  D
"RTN","PSB3P83",20,0)
 ..;add sites to new list with new structure SiteText|flag|flag
"RTN","PSB3P83",21,0)
 ..D EN^XPAR(ENT,"PSB LIST BODY SITES",QQ,SITE_"|1|0")
"RTN","PSB3P83",22,0)
 .;
"RTN","PSB3P83",23,0)
 .;remove all sites from old Inj list this ENT (Division)
"RTN","PSB3P83",24,0)
 .D NDEL^XPAR(ENT,"PSB LIST INJECTION SITES")
"RTN","PSB3P83",25,0)
 ;
"RTN","PSB3P83",26,0)
 Q
"RTN","PSBAPIPM")
0^40^B19077175^B17284583
"RTN","PSBAPIPM",1,0)
PSBAPIPM ;BIRMINGHAM/EFC-BCMA API TO IPM FOR ORDER RENEWAL ;03/06/16 3:06pm 
"RTN","PSBAPIPM",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,15,83**;Mar 2004;Build 89
"RTN","PSBAPIPM",3,0)
 ;
"RTN","PSBAPIPM",4,0)
 ;*83 - moved DD array from psbrec(10) to psbrec(11)
"RTN","PSBAPIPM",5,0)
 ;
"RTN","PSBAPIPM",6,0)
EN(PSBDFN,PSBORDX) ;
"RTN","PSBAPIPM",7,0)
 ;
"RTN","PSBAPIPM",8,0)
 ; PSBLADT=date/time of the last action
"RTN","PSBAPIPM",9,0)
 ; PSBADMDT=scheduled time of the last action
"RTN","PSBAPIPM",10,0)
 ; PSBSTUS=last action (given, held, refused, etc.)
"RTN","PSBAPIPM",11,0)
 ;
"RTN","PSBAPIPM",12,0)
 ;
"RTN","PSBAPIPM",13,0)
 S (PSBCNT,PSBFLAG)=0,Y=""
"RTN","PSBAPIPM",14,0)
 S PSBSTR=""
"RTN","PSBAPIPM",15,0)
 I '$D(^PSB(53.79,"AORDX",PSBDFN,PSBORDX)) Q ""
"RTN","PSBAPIPM",16,0)
 F  S Y=$O(^PSB(53.79,"AORDX",PSBDFN,PSBORDX,Y),-1) Q:Y=""  Q:PSBFLAG=1  D
"RTN","PSBAPIPM",17,0)
 .S PSBLADT=$S(Y:Y,1:"")
"RTN","PSBAPIPM",18,0)
 .S X="" F  S X=$O(^PSB(53.79,"AORDX",PSBDFN,PSBORDX,Y,X),-1) Q:X=""  D
"RTN","PSBAPIPM",19,0)
 ..S PSBSTUS=$P(^PSB(53.79,X,0),U,9) I PSBSTUS'="N" S PSBFLAG=1
"RTN","PSBAPIPM",20,0)
 ..S PSBADMDT=$P(^PSB(53.79,X,.1),U,3)
"RTN","PSBAPIPM",21,0)
 ..D:PSBSTUS="N"
"RTN","PSBAPIPM",22,0)
 ...S (PSBLADT,PSBSTUS,PSBADMDT)=""
"RTN","PSBAPIPM",23,0)
 ...S Z="" F  S Z=$O(^PSB(53.79,X,.9,Z),-1) Q:'Z  Q:PSBFLAG=1  S PSBDATA=$G(^(Z,0)) D
"RTN","PSBAPIPM",24,0)
 ....I (PSBDATA["Set to 'NOT GIVEN'")!(PSBDATA["Set to 'GIVEN'")!(PSBDATA["Set to 'REFUSED'")!(PSBDATA["Set to 'HELD'")!(PSBDATA["Set to 'MISSING DOSE'")!(PSBDATA["Set to 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBAPIPM",25,0)
 ....I (PSBDATA["STATUS 'HELD'")!(PSBDATA["STATUS 'GIVEN'")!(PSBDATA["STATUS 'REFUSED'")!(PSBDATA["STATUS 'MISSING DOSE'")!(PSBDATA["STATUS 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBAPIPM",26,0)
 ....I PSBCNT#2=0,PSBDATA["'REFUSED'" S PSBSTUS="R",PSBADMDT=$P(^PSB(53.79,X,.1),U,3) D LAST
"RTN","PSBAPIPM",27,0)
 ....I PSBCNT#2=0,PSBDATA["'HELD'" S PSBSTUS="H",PSBADMDT=$P(^PSB(53.79,X,.1),U,3) D LAST
"RTN","PSBAPIPM",28,0)
 ....I PSBCNT#2=0,PSBDATA["'MISSING DOSE'" S PSBSTUS="M",PSBADMDT=$P(^PSB(53.79,X,.1),U,3) D LAST
"RTN","PSBAPIPM",29,0)
 ....;this is not a valid status that can exist prior to Undo Give *83
"RTN","PSBAPIPM",30,0)
 ....;;I PSBCNT#2=0,PSBDATA["'REMOVED'" S PSBSTUS="RM",PSBADMDT=$P(^PSB(53.79,X,.1),U,3) D LAST
"RTN","PSBAPIPM",31,0)
 ....;
"RTN","PSBAPIPM",32,0)
 I PSBSTUS'="" S PSBSTR=PSBADMDT_U_PSBLADT_U_PSBSTUS
"RTN","PSBAPIPM",33,0)
 Q PSBSTR
"RTN","PSBAPIPM",34,0)
 ;
"RTN","PSBAPIPM",35,0)
LAST ;
"RTN","PSBAPIPM",36,0)
 S PSBCC=0
"RTN","PSBAPIPM",37,0)
 S ZZ="" F  S ZZ=$O(^PSB(53.79,X,.3,ZZ),-1) Q:'ZZ  Q:PSBFLAG=1  S PSBDATA2=$G(^(ZZ,0)) D
"RTN","PSBAPIPM",38,0)
 .S PSBCC=PSBCC+1
"RTN","PSBAPIPM",39,0)
 .I PSBCC=2 S PSBLADT=$P(PSBDATA2,U,3),PSBFLAG=1
"RTN","PSBAPIPM",40,0)
 Q
"RTN","PSBAPIPM",41,0)
MOB(PSBDFN,PSBCORN) ;
"RTN","PSBAPIPM",42,0)
 I '$D(^TMP("PSBMO",$J,PSBDFN,PSBCORN)) S ^TMP("PSB",$J,0)=-1 Q
"RTN","PSBAPIPM",43,0)
 M ^TMP("PSB",$J)=^TMP("PSBMO",$J,PSBDFN,PSBCORN)
"RTN","PSBAPIPM",44,0)
 K ^TMP("PSB",$J,"PSB")
"RTN","PSBAPIPM",45,0)
 Q
"RTN","PSBAPIPM",46,0)
 ;
"RTN","PSBAPIPM",47,0)
MOBR(PSBDFN,PSBCORN,PSBORDN) ;
"RTN","PSBAPIPM",48,0)
 N PSBREC
"RTN","PSBAPIPM",49,0)
 I $G(PSBORDN)="" K ^TMP("PSB",$J) Q
"RTN","PSBAPIPM",50,0)
 S PSBDUZ=DUZ,PSBDUZ(2)=DUZ(2),DFN=PSBDFN
"RTN","PSBAPIPM",51,0)
 S DUZ=$P(^TMP("PSBMO",$J,PSBDFN,PSBCORN,"PSB"),U,1),DUZ(2)=$P(^TMP("PSBMO",$J,PSBDFN,PSBCORN,"PSB"),U,2),PSBISITE=$P(^TMP("PSBMO",$J,PSBDFN,PSBCORN,"PSB"),U,3)
"RTN","PSBAPIPM",52,0)
 D PSJ1^PSBVT(PSBDFN,PSBORDN)
"RTN","PSBAPIPM",53,0)
 S PSBREC(0)=PSBDFN
"RTN","PSBAPIPM",54,0)
 S PSBREC(1)=PSBONX
"RTN","PSBAPIPM",55,0)
 S PSBREC(2)=PSBSCHT
"RTN","PSBAPIPM",56,0)
 S PSBREC(4)=PSBOIT
"RTN","PSBAPIPM",57,0)
 S PSBREC(5)=$P(^TMP("PSBMO",$J,PSBDFN,PSBCORN,0),U,5)
"RTN","PSBAPIPM",58,0)
 S PSBREC(6)=""
"RTN","PSBAPIPM",59,0)
 S PSBREC(7)="BCMA/CPRS Interface Entry."
"RTN","PSBAPIPM",60,0)
 S PSBREC(8)=PSBISITE
"RTN","PSBAPIPM",61,0)
 I PSBONX["U" S PSBREC(9)="UDTAB^",PSBREC(3)="G"
"RTN","PSBAPIPM",62,0)
 I PSBONX["V" D
"RTN","PSBAPIPM",63,0)
 .I "PCS"'[PSBIVT S PSBREC(9)="IVTAB"_U_$$GETWSID^PSBVDLU2(PSBDFN,PSBORDN),PSBREC(3)="I" Q
"RTN","PSBAPIPM",64,0)
 .I PSBIVT["S",PSBISYR=0 S PSBREC(9)="IVTAB"_U_$$GETWSID^PSBVDLU2(PSBDFN,PSBORDN),PSBREC(3)="I" Q
"RTN","PSBAPIPM",65,0)
 .I PSBIVT["C",PSBISYR=0 S PSBREC(9)="IVTAB"_U_$$GETWSID^PSBVDLU2(PSBDFN,PSBORDN),PSBREC(3)="I" Q
"RTN","PSBAPIPM",66,0)
 .S PSBREC(9)="PBTAB"_U_$$GETWSID^PSBVDLU2(PSBDFN,PSBORDN),PSBREC(3)="G" Q
"RTN","PSBAPIPM",67,0)
 S PSBIMV="^"_$P($G(^TMP("PSBMO",$J,PSBDFN,PSBCORN,"PSB")),U,4)
"RTN","PSBAPIPM",68,0)
 S PSBREC(10)=""                   ;reserved now for Removal time  *83
"RTN","PSBAPIPM",69,0)
 S PSBINDX=11                      ;DD's moved to here  *83
"RTN","PSBAPIPM",70,0)
 S X="" F  S X=$O(PSBDDA(X)) Q:X=""  S PSBREC(PSBINDX)=$P(PSBDDA(X),U,1,2)_U_$P(PSBDDA(X),U,4)_U_$P(PSBDDA(X),U,4)_U_PSBDOSEF,PSBINDX=PSBINDX+1
"RTN","PSBAPIPM",71,0)
 S X="" F  S X=$O(PSBADA(X)) Q:X=""  S PSBREC(PSBINDX)=PSBADA(X),PSBINDX=PSBINDX+1
"RTN","PSBAPIPM",72,0)
 S X="" F  S X=$O(PSBSOLA(X)) Q:X=""  S PSBREC(PSBINDX)=PSBSOLA(X),PSBINDX=PSBINDX+1
"RTN","PSBAPIPM",73,0)
 D RPC^PSBML(.PSB,"+1^MEDPASS"_$G(PSBIMV),.PSBREC)
"RTN","PSBAPIPM",74,0)
 S DUZ=PSBDUZ,DUZ(2)=PSBDUZ(2)  K PSBDUZ,PSBDUZ(2),^TMP("PSBMO",$J,PSBREC(0),PSBCORN),^TMP("PSB",$J) D CLEAN^PSBVT
"RTN","PSBAPIPM",75,0)
 Q
"RTN","PSBCSUTL")
0^20^B188607274^B184801061
"RTN","PSBCSUTL",1,0)
PSBCSUTL ;BIRMINGHAM/TEJ- BCMA-HSC COVER SHEET UTILITIES ;03/06/16 3:06pm
"RTN","PSBCSUTL",2,0)
 ;;3.0;BAR CODE MED ADMIN;**16,13,38,32,50,60,58,68,70,80,83**;Mar 2004;Build 89
"RTN","PSBCSUTL",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBCSUTL",4,0)
 ;
"RTN","PSBCSUTL",5,0)
 ; Reference/IA
"RTN","PSBCSUTL",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBCSUTL",7,0)
 ; IN5^VADPT/10061
"RTN","PSBCSUTL",8,0)
 ; $$GET^XPAR/2263
"RTN","PSBCSUTL",9,0)
 ; ^%DTC/10000
"RTN","PSBCSUTL",10,0)
 ; $$FMADD^XLFDT/10103
"RTN","PSBCSUTL",11,0)
 ; $$GET1^DIQ/2056
"RTN","PSBCSUTL",12,0)
 ; EN1^GMVDCEXT/4251
"RTN","PSBCSUTL",13,0)
 ; GETPROVL^PSGSICH1/5653
"RTN","PSBCSUTL",14,0)
 ; INTRDIC^PSGSICH1/5654
"RTN","PSBCSUTL",15,0)
 ;
"RTN","PSBCSUTL",16,0)
 ;*58 - add 30th piece to Results for Override/Intervention flag 1/0
"RTN","PSBCSUTL",17,0)
 ;*68 - add new parameter to use new SI/OPI word processing fields
"RTN","PSBCSUTL",18,0)
 ;*70 - add Clinic order request IN param flag (true/false 0/1).
"RTN","PSBCSUTL",19,0)
 ;      also add to return array ORD line 32 piece Clinic name for CO.
"RTN","PSBCSUTL",20,0)
 ;      for CO mode: set to -7 days for pulling pull meds & viewing
"RTN","PSBCSUTL",21,0)
 ;       Expired/DC'd orders; set to +7 days to view future orders.
"RTN","PSBCSUTL",22,0)
 ;*83 - call new PSBVDLRM, new call FIXADM^PSBUTL for Inserting G
"RTN","PSBCSUTL",23,0)
 ;      action code in Results back to coversheet to trigger Removal.
"RTN","PSBCSUTL",24,0)
 ;
"RTN","PSBCSUTL",25,0)
 ; ** Warning: PSBSIOPI & PSBCLINORD will be used as global variables
"RTN","PSBCSUTL",26,0)
 ;
"RTN","PSBCSUTL",27,0)
RPC(RESULTS,DFN,EXPWIN,PSBSIOPI,PSBCLINORD) ;
"RTN","PSBCSUTL",28,0)
 N PSBONVDL  ;*83 used by psbvdlpa & psbvdlrm
"RTN","PSBCSUTL",29,0)
 K RESULTS,^TMP("PSB",$J),^TMP("PSJ",$J)
"RTN","PSBCSUTL",30,0)
 S EXPWIN=+$G(EXPWIN)       ;*70
"RTN","PSBCSUTL",31,0)
 S PSBSIOPI=+$G(PSBSIOPI)   ;*68 init to 0 if not present or 1 if sent
"RTN","PSBCSUTL",32,0)
 S PSBCLINORD=+$G(PSBCLINORD)                   ;*70 init to 0 if null
"RTN","PSBCSUTL",33,0)
 S PSBTAB="CVRSHT"
"RTN","PSBCSUTL",34,0)
 N PSBCNT S PSBTRFL=0,PSBDFNX=DFN
"RTN","PSBCSUTL",35,0)
 D PAINCMT(DFN) ;;Correct Comment if Pain Score entered in BCMA was marked "Entered in Error" in Vitals. (PSB*3*50)
"RTN","PSBCSUTL",36,0)
 S RESULTS=$NAME(^TMP("PSB",$J,PSBTAB))
"RTN","PSBCSUTL",37,0)
 K ^TMP("PSB",$J,PSBTAB) S ^TMP("PSB",$J,PSBTAB,0)=1 D LIGHTS(PSBDFNX)
"RTN","PSBCSUTL",38,0)
 S ^TMP("PSB",$J,PSBTAB,0)=1,^TMP("PSB",$J,PSBTAB,1)=^TMP("PSB",$J,PSBTAB,1)
"RTN","PSBCSUTL",39,0)
 Q:$P(^TMP("PSB",$J,PSBTAB,1),U,4)=-1
"RTN","PSBCSUTL",40,0)
 D NOW^%DTC S PSBNOW=+$E(%,1,10),PSBDT=$P(%,".",1)
"RTN","PSBCSUTL",41,0)
 ;set range
"RTN","PSBCSUTL",42,0)
 ;*70 - use diff window values for CO mode vs IM mode
"RTN","PSBCSUTL",43,0)
 I PSBCLINORD D
"RTN","PSBCSUTL",44,0)
 . S:'EXPWIN EXPWIN=24*7   ;not passed in def to 7 days
"RTN","PSBCSUTL",45,0)
 . S PSBWBEG=$P($$FMADD^XLFDT(PSBNOW,-EXPWIN\24),".")
"RTN","PSBCSUTL",46,0)
 . S PSBWEND=$P($$FMADD^XLFDT(PSBNOW,EXPWIN\24),".")
"RTN","PSBCSUTL",47,0)
 E  D
"RTN","PSBCSUTL",48,0)
 . S:'EXPWIN EXPWIN=24   ;not passed in def to 24 hr
"RTN","PSBCSUTL",49,0)
 . S PSBWBEG=$$FMADD^XLFDT(PSBNOW,"",-EXPWIN)
"RTN","PSBCSUTL",50,0)
 . S PSBWEND=$$FMADD^XLFDT(PSBNOW,"",EXPWIN)
"RTN","PSBCSUTL",51,0)
 ;
"RTN","PSBCSUTL",52,0)
 S PSBWADM=$$GET^XPAR("DIV","PSB ADMIN BEFORE"),PSBMHBCK=$$GET^XPAR("ALL","PSB MED HIST DAYS BACK",,"B") I +PSBMHBCK=0 S PSBMHBCK=30
"RTN","PSBCSUTL",53,0)
 D NOW^%DTC S PSBWADM=$$FMADD^XLFDT(%,"","",+PSBWADM),PSBMHBCK=$$FMADD^XLFDT(%,-1*(PSBMHBCK))
"RTN","PSBCSUTL",54,0)
 ;use lst movemnt for API
"RTN","PSBCSUTL",55,0)
 S VAIP("D")="LAST" D IN5^VADPT S PSBTRDT=+VAIP(3),PSBTRTYP=$P(VAIP(2),U,2),PSBMVTYP=$P(VAIP(4),U,2) K VAIP
"RTN","PSBCSUTL",56,0)
 S PSBPTTR=$$GET^XPAR("DIV","PSB PATIENT TRANSFER") I PSBPTTR="" S PSBPTTR=72
"RTN","PSBCSUTL",57,0)
 D NOW^%DTC S PSBNTDT=$$FMADD^XLFDT(%,"",-PSBPTTR) I PSBNTDT'>PSBTRDT S PSBTRFL=1
"RTN","PSBCSUTL",58,0)
 ;*70  go back 7 days to pull meds for clinic orders
"RTN","PSBCSUTL",59,0)
 S X1=$P(PSBNOW,"."),X2=$S(PSBCLINORD:-7,1:-3) D C^%DTC
"RTN","PSBCSUTL",60,0)
 D EN^PSJBCMA(PSBDFNX,X,$S(PSBMHBCK<PSBWBEG:PSBMHBCK,PSBWBEG<PSBMHBCK:PSBWBEG,1:PSBMHBCK))
"RTN","PSBCSUTL",61,0)
 ;Filter in/out Clinic Orders               *70
"RTN","PSBCSUTL",62,0)
 D:PSBCLINORD
"RTN","PSBCSUTL",63,0)
 . I $D(PSBRPT(2)) D FILTERCO^PSBO Q
"RTN","PSBCSUTL",64,0)
 . D INCLUDCO^PSBVDLU1
"RTN","PSBCSUTL",65,0)
 D:'PSBCLINORD REMOVECO^PSBVDLU1
"RTN","PSBCSUTL",66,0)
 ;Devlop Outp
"RTN","PSBCSUTL",67,0)
 S PSBTBOUT=0
"RTN","PSBCSUTL",68,0)
 I ^TMP("PSJ",$J,1,0)>0 F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:('PSBX)!(PSBTBOUT)  D
"RTN","PSBCSUTL",69,0)
 .S:(PSBTAB'="CVRSHT")&($G(^TMP("PSB",$J,"CVRSHT",2))>0) PSBTBOUT=1
"RTN","PSBCSUTL",70,0)
 .D CLEAN^PSBVT,PSJ^PSBVT(PSBX),NOW^%DTC
"RTN","PSBCSUTL",71,0)
 .Q:PSBONX["P"  Q:(PSBOSP<PSBWBEG)&'(PSBONX["V")  ;in rnge?
"RTN","PSBCSUTL",72,0)
 .S (PSBREC,PSBONTAB)=""
"RTN","PSBCSUTL",73,0)
 .S $P(PSBREC,U,1)=PSBDFN ;Dfn
"RTN","PSBCSUTL",74,0)
 .S $P(PSBREC,U,2)=PSBONX ;OrdX 
"RTN","PSBCSUTL",75,0)
 .S $P(PSBREC,U,3)=PSBON ;Ord#
"RTN","PSBCSUTL",76,0)
 .S $P(PSBREC,U,4)=PSBOTYP ;v/u/p
"RTN","PSBCSUTL",77,0)
 .S $P(PSBREC,U,5)=PSBSCHT ;Schtyp
"RTN","PSBCSUTL",78,0)
 .S $P(PSBREC,U,6)=PSBSCH ;Sch
"RTN","PSBCSUTL",79,0)
 .S $P(PSBREC,U,7)=$S(PSBHSM:"HSM",PSBSM:"SM",1:"") ; slfmed
"RTN","PSBCSUTL",80,0)
 .S $P(PSBREC,U,8)=PSBOITX ;Drgnm
"RTN","PSBCSUTL",81,0)
 .S $P(PSBREC,U,9)=PSBDOSE_" "_PSBIFR ;Dose
"RTN","PSBCSUTL",82,0)
 .S $P(PSBREC,U,10)=PSBMR ;med route
"RTN","PSBCSUTL",83,0)
 .;Lst Gvn -AOIP xRef
"RTN","PSBCSUTL",84,0)
 .S (PSBCNT,PSBFLAG)=0,(Y,PSBSTUS)="" K PSBHSTA,PSBHSTAX
"RTN","PSBCSUTL",85,0)
 .F XZ=1:1:20 S Y=$O(^PSB(53.79,"AOIP",PSBDFN,PSBOIT,Y),-1),(PSBCNT,PSBFLAG)=0 Q:Y=""  D
"RTN","PSBCSUTL",86,0)
 ..S:Y>0 $P(PSBREC,U,11)=Y
"RTN","PSBCSUTL",87,0)
 ..S X="" F  S X=$O(^PSB(53.79,"AOIP",PSBDFN,PSBOIT,Y,X),-1) Q:X=""  D
"RTN","PSBCSUTL",88,0)
 ...S PSBSTUS=$P(^PSB(53.79,X,0),U,9) S:$G(PSBSTUS)="" PSBSTUS="X" I (PSBSTUS'="N") S PSBFLAG=1,PSBHSTA(Y,$G(PSBSTUS))="ORIG"_U_X
"RTN","PSBCSUTL",89,0)
 ...D:PSBSTUS="N"
"RTN","PSBCSUTL",90,0)
 ....S ($P(PSBREC,U,11),Z)=""
"RTN","PSBCSUTL",91,0)
 ....F  S Z=$O(^PSB(53.79,X,.9,Z),-1) Q:'Z  Q:PSBFLAG=1  S PSBDATA=$G(^(Z,0)) D
"RTN","PSBCSUTL",92,0)
 .....I (PSBDATA["Set to 'NOT GIVEN'")!(PSBDATA["Set to 'GIVEN'")!(PSBDATA["Set to 'REFUSED'")!(PSBDATA["Set to 'HELD'")!(PSBDATA["Set to 'MISSING DOSE'")!(PSBDATA["Set to 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBCSUTL",93,0)
 .....I (PSBDATA["STATUS 'HELD'")!(PSBDATA["STATUS 'GIVEN'")!(PSBDATA["STATUS 'REFUSED'")!(PSBDATA["STATUS 'MISSING DOSE'")!(PSBDATA["STATUS 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBCSUTL",94,0)
 .....I PSBCNT#2=0,PSBDATA["'REFUSED'" S PSBSTUS="R" D LAST^PSBVDLU1
"RTN","PSBCSUTL",95,0)
 .....I PSBCNT#2=0,PSBDATA["'HELD'" S PSBSTUS="H" D LAST^PSBVDLU1
"RTN","PSBCSUTL",96,0)
 .....I PSBCNT#2=0,PSBDATA["'MISSING DOSE'" S PSBSTUS="M" D LAST^PSBVDLU1
"RTN","PSBCSUTL",97,0)
 .....I PSBCNT#2=0,PSBDATA["'REMOVED'" S PSBSTUS="RM" D LAST^PSBVDLU1
"RTN","PSBCSUTL",98,0)
 .....I PSBFLAG=1,'$D(PSBHSTA($P(PSBREC,U,11),$G(PSBSTUS))) S PSBHSTA($P(PSBREC,U,11),$G(PSBSTUS))=Z_U_X
"RTN","PSBCSUTL",99,0)
 .I $D(PSBHSTA) S $P(PSBREC,U,11)=$O(PSBHSTA(""),-1),PSBSTUS=$O(PSBHSTA($P(PSBREC,U,11),""),-1) M PSBHSTAX(PSBOIT)=PSBHSTA K PSBHSTA  ;last action date/time
"RTN","PSBCSUTL",100,0)
 .S $P(PSBREC,U,12)="" ;ien - below
"RTN","PSBCSUTL",101,0)
 .S $P(PSBREC,U,13)="" ;sttus - below
"RTN","PSBCSUTL",102,0)
 .S $P(PSBREC,U,14)="" ;admn dte - below
"RTN","PSBCSUTL",103,0)
 .S $P(PSBREC,U,15)=PSBOIT ;OI Pointer
"RTN","PSBCSUTL",104,0)
 .S $P(PSBREC,U,16)=PSBNJECT  ;njctble med route flag
"RTN","PSBCSUTL",105,0)
 .;Var dosg
"RTN","PSBCSUTL",106,0)
 .I $P(PSBREC,U,9)?1.4N1"-"1.4N.E S $P(PSBREC,U,17)=1
"RTN","PSBCSUTL",107,0)
 .E  S $P(PSBREC,U,17)=0
"RTN","PSBCSUTL",108,0)
 .S:PSBDOSEF?1"CAP".E!(PSBDOSEF?1"TAB".E)!(PSBDOSEF="PATCH") $P(PSBREC,U,18)=PSBDOSEF ;DosgFrm
"RTN","PSBCSUTL",109,0)
 .D PSJ1^PSBVT(PSBDFN,PSBONX)
"RTN","PSBCSUTL",110,0)
 .S PSBPB=$$IVPTAB^PSBVDLU3(PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,+$G(PSBIVPSH)),PSBLVIV=0
"RTN","PSBCSUTL",111,0)
 .Q:PSBPB&(PSBOSP<PSBWBEG)
"RTN","PSBCSUTL",112,0)
 .S:(PSBONX["V"&'PSBPB) PSBLVIV=1
"RTN","PSBCSUTL",113,0)
 .S $P(PSBREC,U,19)=$S(PSBVNI]"":PSBVNI,PSBVNI']"":"***") ;VerfNrsInts
"RTN","PSBCSUTL",114,0)
 .S $P(PSBREC,U,20)=PSBSTUS S:$P(PSBREC,U,11)="" $P(PSBREC,U,20)=""  ;LstActn
"RTN","PSBCSUTL",115,0)
 .S $P(PSBREC,U,21)=PSBOST
"RTN","PSBCSUTL",116,0)
 .S $P(PSBREC,U,22)=PSBOSTS
"RTN","PSBCSUTL",117,0)
 .S $P(PSBREC,U,25)=0 I $G(PSBTRFL),$P(PSBREC,U,11)]"",$P(PSBREC,U,11)'<$G(PSBNTDT),$P(PSBREC,U,11)'>$G(PSBTRDT) S $P(PSBREC,U,25)=1
"RTN","PSBCSUTL",118,0)
 .S $P(PSBREC,U,26)=PSBOSP  ;OrdStpDt/Tm
"RTN","PSBCSUTL",119,0)
 .S $P(PSBREC,U,27)=$$LASTG($P(PSBREC,U,1),$P(PSBREC,U,15))
"RTN","PSBCSUTL",120,0)
 .S $P(PSBREC,U,28)=$S((PSBONX["U")&('PSBPB):1,PSBPB:2,(PSBONX["V")&'PSBPB:3,1:"")
"RTN","PSBCSUTL",121,0)
 .;*58 determine if override exists, send 1/0 (true/false)
"RTN","PSBCSUTL",122,0)
 .N PSBARR D GETPROVL^PSGSICH1(DFN,PSBONX,.PSBARR)
"RTN","PSBCSUTL",123,0)
 .I $O(PSBARR(""))="" D INTRDIC^PSGSICH1(DFN,PSBONX,.PSBARR,2)
"RTN","PSBCSUTL",124,0)
 .S $P(PSBREC,U,29)=$S($O(PSBARR(""))]"":1,1:0)
"RTN","PSBCSUTL",125,0)
 .;*70 add Clinic name & ien ptr to piece 32 and 33 for CO's, remember
"RTN","PSBCSUTL",126,0)
 .;   "ORD" is inserted later as piece 1 which offsets all here by +1
"RTN","PSBCSUTL",127,0)
 .S $P(PSBREC,U,31)=$G(PSBCLORD)
"RTN","PSBCSUTL",128,0)
 .S $P(PSBREC,U,32)=$G(PSBCLIEN)
"RTN","PSBCSUTL",129,0)
 .;get all Admn(s) - DD info.
"RTN","PSBCSUTL",130,0)
 .S (PSBDDS,PSBSOLS,PSBADDS,PSBFLAG)="0"
"RTN","PSBCSUTL",131,0)
 .;PSB*3*60 adds additional checks to ensure an expired order is within the coversheet time parameter and an "END" is only added to the temp global after an order is added
"RTN","PSBCSUTL",132,0)
 .I PSBLVIV D XFERBAGS^PSBCSUTY,LVIV^PSBCSUTY I $G(PSBEXPRD) S X1=$O(^TMP("PSB",$J,PSBTAB,""),-1) S:^TMP("PSB",$J,PSBTAB,X1)'="END"&(X1>1) ^TMP("PSB",$J,PSBTAB,X1+1)="END" Q  ;PSB*3*60
"RTN","PSBCSUTL",133,0)
 .D GETADMX^PSBCSUTY
"RTN","PSBCSUTL",134,0)
 .F Y=0:0 S Y=$O(PSBDDA(Y)) Q:'Y  D
"RTN","PSBCSUTL",135,0)
 ..I $P(PSBDDA(Y),U,5)=$P(%,".") S PSBFLAG=1  ;drug nactvt
"RTN","PSBCSUTL",136,0)
 ..Q:$P(PSBDDA(Y),U,5)&($P(PSBDDA(Y),U,5)<%)  ;nactv
"RTN","PSBCSUTL",137,0)
 ..S:$P(PSBDDA(Y),U,4)="" $P(PSBDDA(Y),U,4)=1
"RTN","PSBCSUTL",138,0)
 ..S PSBDDS=PSBDDS_U_$P(PSBDDA(Y),U,1,4),$P(PSBDDS,U,1)=PSBDDS+1
"RTN","PSBCSUTL",139,0)
 .;OnCa O PRN
"RTN","PSBCSUTL",140,0)
 .I ("^O^OC^P^"[(U_PSBSCHT_U))!(PSBLVIV) D  S ($P(PSBREC,U,12),$P(PSBREC,U,14))=""  Q
"RTN","PSBCSUTL",141,0)
 ..S (PSBIENX,PSBGOT1)="",PSBADMTM="" F  S PSBADMTM=$O(^PSB(53.79,"AORDX",PSBDFNX,PSBONX,PSBADMTM)) Q:(PSBADMTM="")  D
"RTN","PSBCSUTL",142,0)
 ...Q:(PSBADMTM<PSBMHBCK)&'PSBLVIV
"RTN","PSBCSUTL",143,0)
 ...F  S PSBIENX=$O(^PSB(53.79,"AORDX",PSBDFNX,PSBONX,PSBADMTM,PSBIENX)) Q:PSBIENX=""  D
"RTN","PSBCSUTL",144,0)
 ....S $P(PSBREC,U,12)=PSBIENX,$P(PSBREC,U,14)=PSBADMTM,$P(PSBREC,U,23)=$$GET1^DIQ(53.79,PSBIENX_",","IV UNIQUE ID")
"RTN","PSBCSUTL",145,0)
 ....S PSBQRR=1 I PSBWBEG<PSBOSP D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSBADMTM,PSBDDS,PSBSOLS,PSBADDS,"CVRSHT") S PSBGOT1=1 ;PSB*3*60
"RTN","PSBCSUTL",146,0)
 ..I ('+PSBGOT1)&(PSBOSP'<PSBWBEG) D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSBNOW\1_".",PSBDDS,PSBSOLS,PSBADDS,"CVRSHT") S PSBGOT1=1
"RTN","PSBCSUTL",147,0)
 ..I ('+PSBGOT1)&($D(PSBADMX(PSBONX)))&(PSBWBEG<PSBOSP) D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSBNOW\1_".",PSBDDS,PSBSOLS,PSBADDS,"CVRSHT") ;PSB*3*60
"RTN","PSBCSUTL",148,0)
 ..S PSBGLBX=$O(^TMP("PSB",$J,PSBTAB,""),-1) S:^TMP("PSB",$J,PSBTAB,PSBGLBX)'="END"&(PSBGLBX>1) ^TMP("PSB",$J,PSBTAB,PSBGLBX+1)="END" ;PSB*3*60
"RTN","PSBCSUTL",149,0)
 .;cont - proces AdmnTm
"RTN","PSBCSUTL",150,0)
 .S (PSBYES,PSBODD,PSBYTF)=0 S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1
"RTN","PSBCSUTL",151,0)
 .I PSBYES,PSBADST="" Q
"RTN","PSBCSUTL",152,0)
 .F I=1:1 Q:$P(PSBSCH,"-",I)=""  I $P(PSBSCH,"-",I)?2N!($P(PSBSCH,"-",I)?4N) S PSBYES=1,PSBYTF=1
"RTN","PSBCSUTL",153,0)
 .I PSBSCHT="C",PSBYTF="1",PSBADST="" Q
"RTN","PSBCSUTL",154,0)
 .S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBCSUTL",155,0)
 .I PSBFREQ="O" S PSBFREQ=1440
"RTN","PSBCSUTL",156,0)
 .I PSBFREQ="D" S PSBFREQ=""
"RTN","PSBCSUTL",157,0)
 .S:PSBLVIV PSBYES=1
"RTN","PSBCSUTL",158,0)
 .I 'PSBYES,PSBFREQ<1 Q
"RTN","PSBCSUTL",159,0)
 .I (PSBADST="")&(+PSBFREQ>0) D ODDSCH^PSBVDLU1(PSBTAB) Q
"RTN","PSBCSUTL",160,0)
 .I +PSBFREQ>0 I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBCSUTL",161,0)
 .I PSBODD,PSBADST'="" Q
"RTN","PSBCSUTL",162,0)
 .S PSBDTX=PSBWBEG\1,PSBGOT1=0
"RTN","PSBCSUTL",163,0)
 .F PSBXX=1:1:2 D  S PSBDTX=$$FMADD^XLFDT(PSBDTX,"",24)  ;incrmnt 1 day!
"RTN","PSBCSUTL",164,0)
 ..F PSBY=1:1:$L(PSBADST,"-") Q:$P(PSBADST,"-",PSBY)=""  D
"RTN","PSBCSUTL",165,0)
 ...S PSB=+(PSBDTX_"."_$P(PSBADST,"-",PSBY))
"RTN","PSBCSUTL",166,0)
 ...I (PSB'<PSBWBEG)&(PSB'>PSBWEND) D  ;wndow?
"RTN","PSBCSUTL",167,0)
 ....D:(PSB'<PSBOST)&(PSB<PSBOSP)    ;actv?
"RTN","PSBCSUTL",168,0)
 .....D:$$OKAY^PSBVDLU1(PSBOST,PSB,PSBSCH,PSBONX,PSBOITX,PSBFREQ,PSBOSTS)  ;dt?
"RTN","PSBCSUTL",169,0)
 ......D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSB,PSBDDS,PSBSOLS,PSBADDS,"CVRSHT") S PSBGOT1=1
"RTN","PSBCSUTL",170,0)
 ...S PSB=+(PSBWEND\1_"."_$P(PSBADST,"-",PSBY))
"RTN","PSBCSUTL",171,0)
 ...I (PSB'<PSBWBEG)&(PSB'>PSBWEND) D  ;wndow?
"RTN","PSBCSUTL",172,0)
 ....D:(PSB'<PSBOST)&(PSB<PSBOSP)    ;actv?
"RTN","PSBCSUTL",173,0)
 .....D:$$OKAY^PSBVDLU1(PSBOST,PSB,PSBSCH,PSBONX,PSBOITX,PSBFREQ,PSBOSTS)  ;dt?
"RTN","PSBCSUTL",174,0)
 ......D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSB,PSBDDS,PSBSOLS,PSBADDS,"CVRSHT") S PSBGOT1=1
"RTN","PSBCSUTL",175,0)
 .I ('PSBGOT1)&(PSBOSP'<PSBWBEG) D ADD^PSBVDLU1(PSBREC,PSBOTXT,+(PSBWEND\1_"."_$P(PSBADST,"-")),PSBDDS,PSBSOLS,PSBADDS,"CVRSHT")
"RTN","PSBCSUTL",176,0)
 .K PSBSTUS
"RTN","PSBCSUTL",177,0)
 D EN^PSBVDLPA
"RTN","PSBCSUTL",178,0)
 D EN^PSBVDLRM    ;*83 new rtn
"RTN","PSBCSUTL",179,0)
 I $G(^TMP("PSB",$J,PSBTAB,2))]"" S PSBI1=$O(^TMP("PSB",$J,PSBTAB,""),-1) I ^TMP("PSB",$J,PSBTAB,PSBI1)'="END" S ^TMP("PSB",$J,PSBTAB,PSBI1+1)="END"
"RTN","PSBCSUTL",180,0)
 S ^TMP("PSB",$J,PSBTAB,0)=$O(^TMP("PSB",$J,PSBTAB,""),-1)
"RTN","PSBCSUTL",181,0)
 I $G(^TMP("PSB",$J,PSBTAB,2))']"" S $P(^TMP("PSB",$J,PSBTAB,1),U,4)="-1^No orders to display on Coversheet"     ;*70 was "To" now "to"
"RTN","PSBCSUTL",182,0)
 I $G(^TMP("PSB",$J,PSBTAB,2))]"" S $P(^TMP("PSB",$J,PSBTAB,1),U,4)="1^COVERSHEET DATA FOLLOWS" D ADD^PSBCSUTX
"RTN","PSBCSUTL",183,0)
 D FIXADM^PSBUTL                                                  ;*83
"RTN","PSBCSUTL",184,0)
 D CLEAN
"RTN","PSBCSUTL",185,0)
 Q
"RTN","PSBCSUTL",186,0)
LASTG(PSBPATPT,PSBOIPT) ;LstGvn-(inpt: DFN,OrItm IEN)
"RTN","PSBCSUTL",187,0)
 K PSBHSTG S Y="",LASTG="" F XZ=1:1:20 S Y=$O(^PSB(53.79,"AOIP",PSBPATPT,PSBOIPT,Y),-1),(PSBCNT,PSBFLAG)=0 Q:Y=""  D
"RTN","PSBCSUTL",188,0)
 .S:Y>0 LASTG="",X="" F  S X=$O(^PSB(53.79,"AOIP",PSBPATPT,PSBOIPT,Y,X),-1) Q:X=""  D
"RTN","PSBCSUTL",189,0)
 ..S PSBSTX=$P(^PSB(53.79,X,0),U,9) S:PSBSTX']"" PSBHSTG(Y)=-1 I PSBSTX="G"  S PSBHSTG(Y)="G"
"RTN","PSBCSUTL",190,0)
 ..Q:PSBSTX="N"
"RTN","PSBCSUTL",191,0)
 ..D:(PSBSTX'="G")
"RTN","PSBCSUTL",192,0)
 ...S Z="" F  S Z=$O(^PSB(53.79,X,.9,Z),-1) Q:'Z  Q:PSBFLAG=1  S PSBDATA=$G(^(Z,0)) D
"RTN","PSBCSUTL",193,0)
 ....I (PSBDATA["Set to 'GIVEN'") S PSBCNT=PSBCNT+1
"RTN","PSBCSUTL",194,0)
 ....I (PSBDATA["STATUS 'GIVEN'") S PSBCNT=PSBCNT+1
"RTN","PSBCSUTL",195,0)
 ....I PSBCNT#2=0,PSBDATA'["'GIVEN'" Q
"RTN","PSBCSUTL",196,0)
 ....I '$D(PSBHSTG($P(PSBDATA,U))) S PSBFLAG=1,PSBHSTG($P(PSBDATA,U))=""
"RTN","PSBCSUTL",197,0)
 I $D(PSBHSTG) S LASTG="" F  S LASTG=$O(PSBHSTG(LASTG),-1) Q:+LASTG=0  Q:PSBHSTG(LASTG)="G"  I PSBHSTG(LASTG)=-1 S LASTG="" Q
"RTN","PSBCSUTL",198,0)
 Q LASTG
"RTN","PSBCSUTL",199,0)
PAINCMT(DFN) ;;Add comment if Pain Score entered in BCMA was marked "Entered in Error" in Vitals.
"RTN","PSBCSUTL",200,0)
 ;;This will run through all the patients appointments, check their comments to see if they had a Pain Vital entered  through BCMA, and check if that Vital was marked "Entered in Error."
"RTN","PSBCSUTL",201,0)
 Q:'$D(^DPT(DFN,0))
"RTN","PSBCSUTL",202,0)
 N PSBCMT,PSBGMR,PSBCMTGLB,PSBIEN,PSBCMTM,PSBVITM,PSBTMDF,PSBBDT,PSBEDT,PSBEFTM,PSBCMFL,PSBEXTM,PSBERFL,PSBPNSC,PSBNOW,PSBDFN,PSBPRNDT,PSBSTRTDT,PSBMDHST,PSBEFFL,PSBCOMMENT,X,X1,X2,PSBDUZ,PSBPAIN
"RTN","PSBCSUTL",203,0)
 K ^TMP("PSBGMV",$J)
"RTN","PSBCSUTL",204,0)
 D NOW^%DTC S PSBEDT=%
"RTN","PSBCSUTL",205,0)
 S PSBMDHST=+($$GET^XPAR("ALL","PSB MED HIST DAYS BACK",,"B")) S:+$G(PSBMDHST)=0 PSBMDHST=30
"RTN","PSBCSUTL",206,0)
 S X1=$P(PSBEDT,"."),X2=-(PSBMDHST) D C^%DTC S PSBMDHST=X
"RTN","PSBCSUTL",207,0)
 S PSBSTRTDT=$S($G(PSBSTRT)]0:PSBSTRT,1:PSBMDHST)
"RTN","PSBCSUTL",208,0)
 S PSBPRNDT=PSBSTRTDT F  S PSBPRNDT=$O(^PSB(53.79,"APRN",DFN,PSBPRNDT)) Q:'PSBPRNDT  D
"RTN","PSBCSUTL",209,0)
 .S PSBIEN=0 F  S PSBIEN=$O(^PSB(53.79,"APRN",DFN,PSBPRNDT,PSBIEN)) Q:'PSBIEN  D
"RTN","PSBCSUTL",210,0)
 ..S PSBCMT=0 F  S PSBCMT=$O(^PSB(53.79,PSBIEN,.3,PSBCMT)) Q:'PSBCMT  S PSBCMTGLB=^PSB(53.79,PSBIEN,.3,PSBCMT,0) D
"RTN","PSBCSUTL",211,0)
 ...I $P($G(PSBCMTGLB),U)["Pain Score of" S PSBPAIN=$E($P(PSBCMTGLB,U),15) D
"RTN","PSBCSUTL",212,0)
 ....I $E($P($G(PSBCMTGLB),U),1,14)="*Pain Score of" S PSBCMFL=""
"RTN","PSBCSUTL",213,0)
 ....I $E($P($G(PSBCMTGLB),U),1,15)="**Pain Score of" S PSBEFFL=""
"RTN","PSBCSUTL",214,0)
 ....S PSBCMTM=$P($G(PSBCMTGLB),U,3)
"RTN","PSBCSUTL",215,0)
 ....S PSBBDT=$E(PSBCMTM,1,12)
"RTN","PSBCSUTL",216,0)
 ....S PSBEXTM=$$FMTE^XLFDT(PSBBDT,"5Z")
"RTN","PSBCSUTL",217,0)
 ....I '$D(^TMP("PSBGMV",$J)) D EN1^GMVDCEXT("^TMP(""PSBGMV"",$J)",DFN,2,,1,PSBSTRTDT,PSBEDT,,1)
"RTN","PSBCSUTL",218,0)
 ....S PSBGMR=0 F  S PSBGMR=$O(^TMP("PSBGMV",$J,PSBGMR)) Q:PSBGMR=""  I $P(^TMP("PSBGMV",$J,PSBGMR),U,4)="PN" D
"RTN","PSBCSUTL",219,0)
 .....S PSBVITM=$P(^TMP("PSBGMV",$J,PSBGMR),U,5)
"RTN","PSBCSUTL",220,0)
 .....S PSBTMDF=$$FMDIFF^XLFDT(PSBVITM,PSBCMTM,2)
"RTN","PSBCSUTL",221,0)
 .....I PSBTMDF>=-($S($G(DILOCKTM)>0:DILOCKTM,1:3)),PSBTMDF<=$S($G(DILOCKTM)>0:DILOCKTM,1:3) S PSBDUZ=$P(^TMP("PSBGMV",$J,PSBGMR),U,10) D  ;User who marked Pain Score Entered in error, PSB*3*80
"RTN","PSBCSUTL",222,0)
 ......I $P(^TMP("PSBGMV",$J,PSBGMR),U,9)=1 S PSBPNSC=$P(^TMP("PSBGMV",$J,PSBGMR),U,8),PSBERFL="" D
"RTN","PSBCSUTL",223,0)
 .......I $D(PSBERFL),'$D(PSBCMFL),$G(PSBDUZ),PSBPAIN=PSBPNSC D
"RTN","PSBCSUTL",224,0)
 ........S PSBCOMMENT="*Pain Score of "_PSBPNSC_" entered in Vitals via BCMA at "_PSBEXTM_" may have been marked 'Entered in Error'. See Vitals Package for an updated Score." D PNCMNT(PSBIEN,PSBCOMMENT,PSBDUZ) S PSBCMFL=""
"RTN","PSBCSUTL",225,0)
 ..K PSBCMFL,PSBERFL
"RTN","PSBCSUTL",226,0)
 ..S PSBEFTM=$P($G(^PSB(53.79,PSBIEN,.2)),U,4) Q:PSBEFTM=""
"RTN","PSBCSUTL",227,0)
 ..S PSBBDT=$E(PSBEFTM,1,12),PSBPAIN=$E($P(^PSB(53.79,PSBIEN,.2),U,2),15)
"RTN","PSBCSUTL",228,0)
 ..S PSBEXTM=$$FMTE^XLFDT(PSBBDT,"5Z")
"RTN","PSBCSUTL",229,0)
 ..D:'$D(^TMP("PSBGMV",$J)) EN1^GMVDCEXT("^TMP(""PSBGMV"",$J)",DFN,2,,1,PSBSTRTDT,PSBEDT,,1)
"RTN","PSBCSUTL",230,0)
 ..S PSBGMR=0 F  S PSBGMR=$O(^TMP("PSBGMV",$J,PSBGMR)) Q:PSBGMR=""  I $P(^TMP("PSBGMV",$J,PSBGMR),U,4)="PN" D
"RTN","PSBCSUTL",231,0)
 ...S PSBVITM=$P(^TMP("PSBGMV",$J,PSBGMR),U,5)
"RTN","PSBCSUTL",232,0)
 ...S PSBTMDF=$$FMDIFF^XLFDT(PSBVITM,PSBEFTM,2)
"RTN","PSBCSUTL",233,0)
 ...I PSBTMDF>=-($S($G(DILOCKTM)>0:DILOCKTM,1:3)),PSBTMDF<=$S($G(DILOCKTM)>0:DILOCKTM,1:3)  S PSBDUZ=$P(^TMP("PSBGMV",$J,PSBGMR),U,10) D  ;User who marked Pain Score Entered in error, PSB*3*80
"RTN","PSBCSUTL",234,0)
 ....I $P(^TMP("PSBGMV",$J,PSBGMR),U,9)=1 S PSBPNSC=$P(^TMP("PSBGMV",$J,PSBGMR),U,8),PSBERFL="" D
"RTN","PSBCSUTL",235,0)
 .....I $D(PSBERFL),'$D(PSBEFFL),$G(PSBDUZ),PSBPAIN=PSBPNSC D
"RTN","PSBCSUTL",236,0)
 ......S PSBCOMMENT="**Pain Score of "_PSBPNSC_" entered in Vitals via BCMA at "_PSBEXTM_" may have been marked 'Entered in Error'. See Vitals Package for an updated Score." D PNCMNT(PSBIEN,PSBCOMMENT,PSBDUZ) S PSBEFFL=""
"RTN","PSBCSUTL",237,0)
 ..K PSBERFL,PSBEFFL
"RTN","PSBCSUTL",238,0)
 K ^TMP("PSBGMV",$J)
"RTN","PSBCSUTL",239,0)
 Q
"RTN","PSBCSUTL",240,0)
PNCMNT(DA,PSBCMT,PSBDUZ) ;Add pain score comment, PSB*3*80
"RTN","PSBCSUTL",241,0)
 N PSBFDA,PSBIEN,PSBNOW
"RTN","PSBCSUTL",242,0)
 S PSBIEN="+1,"_DA_","
"RTN","PSBCSUTL",243,0)
 D NOW^%DTC S PSBNOW=%
"RTN","PSBCSUTL",244,0)
 D VAL^PSBML(53.793,PSBIEN,.01,PSBCMT)
"RTN","PSBCSUTL",245,0)
 S PSBFDA(53.793,PSBIEN,.02)=PSBDUZ
"RTN","PSBCSUTL",246,0)
 S PSBFDA(53.793,PSBIEN,.03)=PSBNOW
"RTN","PSBCSUTL",247,0)
 D FILEIT^PSBML
"RTN","PSBCSUTL",248,0)
 Q
"RTN","PSBCSUTL",249,0)
LIGHTS(PSBDFN) ;
"RTN","PSBCSUTL",250,0)
 D RPC^PSBVDLTB(,PSBDFN,"NO TAB",,PSBSIOPI,PSBCLINORD) S PSBTAB="CVRSHT"
"RTN","PSBCSUTL",251,0)
 M ^TMP("PSB",$J,PSBTAB,1)=^TMP("PSB",$J,"NO TAB",1) K ^TMP("PSB",$J,"NO TAB")
"RTN","PSBCSUTL",252,0)
 Q
"RTN","PSBCSUTL",253,0)
CLEAN ;
"RTN","PSBCSUTL",254,0)
 D CLEAN^PSBVT
"RTN","PSBCSUTL",255,0)
 K PSBACT,PSBACTBY,PSBACTDT,PSBACTPT,PSBADDS,PSBBAGID,PSBCHDT,PSBCHKV,PSBCNT1,PSBCNT2,PSBDDS,PSBDFNX,PSBWEND
"RTN","PSBCSUTL",256,0)
 K PSBDT,PSBFLAG,PSBHSTAX,PSBI1,PSBIEN,PSBIENX,PSBLSTS,PSBMAUD,PSBMVTYP,PSBMWC,PSBNOW,PSBNTDT,PSBONMBR,PSBY,PSBXX
"RTN","PSBCSUTL",257,0)
 K PSBONXS,PSBORREC,PSBPDT,PSBPRNRE,PSBPTTR,PSBQR,PSBRDOW,PSBREC,PSBRECHD,PSBSCHBR,PSBSCHTM,PSBSOLS,PSBTAB,PSBADMTM,PSBDTX
"RTN","PSBCSUTL",258,0)
 K PSBTBOUT,PSBTRDT,PSBTRFL,PSBTRTYP,PSBUID,PSBUIDS,PSBX,PSBXIEN,PSBX2,PSBYEA,PSBYEA1,PSBYTF,PSBYES,VAIP,PSBWADM,PSBWBEG
"RTN","PSBCSUTL",259,0)
 K PSBXREC,PSBGOT1,PSBCDT,PSBQUIT,PSBUSED,PSBLST4X,PSBADMX,PSBI2,PSBXXX,PSBI,PSBPB,PSBSHWTB,PSBONTAB,PSBDONE,^TMP("PSJ",$J)
"RTN","PSBCSUTL",260,0)
 K PSBNXTDU,LASTG,LSTTIME,PSBMHBCK,PSBHSTG,PSBNXTDT,NEXTADM,PSBLVIV
"RTN","PSBCSUTL",261,0)
 Q
"RTN","PSBINJEC")
0^37^B34498622^B24162182
"RTN","PSBINJEC",1,0)
PSBINJEC ;BIRMINGHAM/GN-LAST INJECTION SITE BROKER ;03/06/16 3:06pm
"RTN","PSBINJEC",2,0)
 ;;3.0;BAR CODE MED ADMIN;**68,83**;Mar 2004;Build 89
"RTN","PSBINJEC",3,0)
 ;
"RTN","PSBINJEC",4,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBINJEC",5,0)
 ;
"RTN","PSBINJEC",6,0)
 ;*83 - Add new parameter to allow return of Inj or Derm site info
"RTN","PSBINJEC",7,0)
 ;    - New XPAR param for dermal site Hist
"RTN","PSBINJEC",8,0)
 ;
"RTN","PSBINJEC",9,0)
 ;*******************************************************************
"RTN","PSBINJEC",10,0)
RPC(RESULTS,DFN,PSBOI,TIME,MAX,SITETYP) ;Get Last MAX Injection/Derm site
"RTN","PSBINJEC",11,0)
 ;   admins per Patient by One Orderable Item or ALL Orderable Items
"RTN","PSBINJEC",12,0)
 ;*******************************************************************
"RTN","PSBINJEC",13,0)
 ;
"RTN","PSBINJEC",14,0)
 ;** Beginning with patch *83 this API will accept a New Site type
"RTN","PSBINJEC",15,0)
 ;   parameter to allow it to return either Injection or Dermal Site
"RTN","PSBINJEC",16,0)
 ;   info.   ** Defaults to older Injection info only if not passed
"RTN","PSBINJEC",17,0)
 ;
"RTN","PSBINJEC",18,0)
 ; Return Array RESULTS
"RTN","PSBINJEC",19,0)
 ;    RESULTS(0)=nn       nn = total admin line items returned
"RTN","PSBINJEC",20,0)
 ;    RESULTS(n)=string   string = returned site data
"RTN","PSBINJEC",21,0)
 ;                          (date/time ^ OI ien ^ OI name ^ site)
"RTN","PSBINJEC",22,0)
 ;                or      string = an error line
"RTN","PSBINJEC",23,0)
 ;                          (-1 ^ error text message)
"RTN","PSBINJEC",24,0)
 ; Input Parameters:
"RTN","PSBINJEC",25,0)
 ;     DFN= Patient IEN
"RTN","PSBINJEC",26,0)
 ;   PSBOI= Orderable Item IEN
"RTN","PSBINJEC",27,0)
 ;    TIME= Time range in hours to look back
"RTN","PSBINJEC",28,0)
 ;     MAX = Maximum injections items to be returned
"RTN","PSBINJEC",29,0)
 ; SITETYP = "I" for Injections or "D" for Dermal.  (I=def)        *83
"RTN","PSBINJEC",30,0)
 ;
"RTN","PSBINJEC",31,0)
 ; ** Note: Time and Max work together, which every is reached first,
"RTN","PSBINJEC",32,0)
 ;          then the search ends and returns what was found thus far.
"RTN","PSBINJEC",33,0)
 ;
"RTN","PSBINJEC",34,0)
 N ACDTE,DOSAGE,DSPIVPB,ENDDTE,INJ,SITE,IVOK,IVTYPE,INTERMIT,MXTIME
"RTN","PSBINJEC",35,0)
 N ORDIT,ORDITNM,ORDNO,PRMPTINJ,QT,QQ,ROUTE,RR,RTBL,STDROUTE,YY
"RTN","PSBINJEC",36,0)
 K RESULTS
"RTN","PSBINJEC",37,0)
 ;Injection or Dermal site type                                   *83
"RTN","PSBINJEC",38,0)
 S SITETYP=$S($G(SITETYP)="":"I",1:SITETYP)      ;def to "I"
"RTN","PSBINJEC",39,0)
 ;
"RTN","PSBINJEC",40,0)
 I '$G(DFN)!('$D(^DPT(DFN))) D  Q
"RTN","PSBINJEC",41,0)
 . D ERR("Error, DFN missing or invalid (param 1)")
"RTN","PSBINJEC",42,0)
 ;
"RTN","PSBINJEC",43,0)
 ;load valid rotation type injection routes table
"RTN","PSBINJEC",44,0)
 D BLDTBL(.RTBL)
"RTN","PSBINJEC",45,0)
 ;
"RTN","PSBINJEC",46,0)
 D:$G(PSBOI) OI        ;by One specific orderable item
"RTN","PSBINJEC",47,0)
 D:'$G(PSBOI) ALL      ;by All orderable items
"RTN","PSBINJEC",48,0)
 Q
"RTN","PSBINJEC",49,0)
 ;               ======== END RPC MAIN ========
"RTN","PSBINJEC",50,0)
 ;
"RTN","PSBINJEC",51,0)
 ;*******************************************************************
"RTN","PSBINJEC",52,0)
OI ;  Get Last MAX Injections per Patient for one Orderable Item only
"RTN","PSBINJEC",53,0)
 ;*******************************************************************
"RTN","PSBINJEC",54,0)
 ;
"RTN","PSBINJEC",55,0)
 N INDX                                                           ;*83
"RTN","PSBINJEC",56,0)
 ;default the OI call for Time if less than 1 hour to unlimited
"RTN","PSBINJEC",57,0)
 S TIME=+$G(TIME) I TIME<1 S TIME=9999999
"RTN","PSBINJEC",58,0)
 S ENDDTE=$$FMADD^XLFDT($$NOW^XLFDT,,-TIME)
"RTN","PSBINJEC",59,0)
 ;
"RTN","PSBINJEC",60,0)
 ;default the OI call for Max = last 4
"RTN","PSBINJEC",61,0)
 S MAX=+$G(MAX) I MAX<1 S MAX=4
"RTN","PSBINJEC",62,0)
 S (YY,QT)=0
"RTN","PSBINJEC",63,0)
 ;
"RTN","PSBINJEC",64,0)
 ;   reverse date/time loop thru injection by Med, (AINJOI xref)
"RTN","PSBINJEC",65,0)
 ;
"RTN","PSBINJEC",66,0)
 S INDX=$S(SITETYP="D":"ADERMOI",1:"AINJOI")                      ;*83
"RTN","PSBINJEC",67,0)
 F ACDTE=9999999:0 S ACDTE=$O(^PSB(53.79,INDX,DFN,PSBOI,ACDTE),-1) Q:('ACDTE)!(ACDTE<ENDDTE)  D
"RTN","PSBINJEC",68,0)
 .S INJ=""
"RTN","PSBINJEC",69,0)
 .F  S INJ=$O(^PSB(53.79,INDX,DFN,PSBOI,ACDTE,INJ)) Q:INJ=""!QT  D
"RTN","PSBINJEC",70,0)
 ..S RR=0
"RTN","PSBINJEC",71,0)
 ..F  S RR=$O(^PSB(53.79,INDX,DFN,PSBOI,ACDTE,INJ,RR)) Q:'RR!QT  D
"RTN","PSBINJEC",72,0)
 ...Q:'$$QUALIFY        ;skip this rec, does not qualify
"RTN","PSBINJEC",73,0)
 ...D ADRESULT          ;add rec to Results as a valid inj site rec
"RTN","PSBINJEC",74,0)
 ...I YY=MAX S QT=1     ;quit, max inj sites found
"RTN","PSBINJEC",75,0)
 ;
"RTN","PSBINJEC",76,0)
 I '$D(RESULTS) D ERR("<<No data to display>>")
"RTN","PSBINJEC",77,0)
 Q
"RTN","PSBINJEC",78,0)
 ;
"RTN","PSBINJEC",79,0)
 ;*************************************************************
"RTN","PSBINJEC",80,0)
ALL ;  Get Last MAX Injections per Patient for any Orderable Item
"RTN","PSBINJEC",81,0)
 ;*************************************************************
"RTN","PSBINJEC",82,0)
 ;
"RTN","PSBINJEC",83,0)
 N INDX                                                           ;*83
"RTN","PSBINJEC",84,0)
 ;default the ALL call for Time if less than 1 passed in. Use XPAR
"RTN","PSBINJEC",85,0)
 ;Param TIME shoud be passed in by GUI client with hours, calc if not
"RTN","PSBINJEC",86,0)
 S TIME=+$G(TIME)
"RTN","PSBINJEC",87,0)
 I TIME<1,SITETYP="D" S TIME=$$GET^XPAR("ALL","PSB DERMAL SITE MAX DAYS",,"I")*24    ;for derm convert days to hours  *83
"RTN","PSBINJEC",88,0)
 I TIME<1,SITETYP'="D" S TIME=$$GET^XPAR("ALL","PSB INJECTION SITE MAX HOURS",,"I")                                  ;*83
"RTN","PSBINJEC",89,0)
 S ENDDTE=$$FMADD^XLFDT($$NOW^XLFDT,,-TIME)
"RTN","PSBINJEC",90,0)
 ;
"RTN","PSBINJEC",91,0)
 ;default the ALL call for Max = last 4 Injections
"RTN","PSBINJEC",92,0)
 S MAX=+$G(MAX) I MAX<1 S MAX=9999999
"RTN","PSBINJEC",93,0)
 S (YY,QT)=0
"RTN","PSBINJEC",94,0)
 ;
"RTN","PSBINJEC",95,0)
 ;   Reverse date/time loop thru injection xref, (AINJ), ALL MEDS
"RTN","PSBINJEC",96,0)
 ;
"RTN","PSBINJEC",97,0)
 S INDX=$S(SITETYP="D":"ADERM",1:"AINJ")                          ;*83
"RTN","PSBINJEC",98,0)
 F ACDTE=9999999:0 S ACDTE=$O(^PSB(53.79,INDX,DFN,ACDTE),-1) Q:('ACDTE)!(ACDTE<ENDDTE)  D
"RTN","PSBINJEC",99,0)
 .S INJ=""
"RTN","PSBINJEC",100,0)
 .F  S INJ=$O(^PSB(53.79,INDX,DFN,ACDTE,INJ)) Q:INJ=""!QT  D
"RTN","PSBINJEC",101,0)
 ..S RR=0
"RTN","PSBINJEC",102,0)
 ..F  S RR=$O(^PSB(53.79,INDX,DFN,ACDTE,INJ,RR)) Q:'RR!QT  D
"RTN","PSBINJEC",103,0)
 ...Q:'$$QUALIFY        ;skip this rec, does not qualify
"RTN","PSBINJEC",104,0)
 ...D ADRESULT          ;add rec to Results as a valid inj site rec
"RTN","PSBINJEC",105,0)
 ...I YY=MAX S QT=1     ;quit, max inj sites found
"RTN","PSBINJEC",106,0)
 ;
"RTN","PSBINJEC",107,0)
 I '$D(RESULTS) D ERR("<<No data to display>>")
"RTN","PSBINJEC",108,0)
 Q
"RTN","PSBINJEC",109,0)
 ;
"RTN","PSBINJEC",110,0)
 ;  ----------------- Supporting Tag calls below ------------------
"RTN","PSBINJEC",111,0)
QUALIFY() ; Determine if a record qualifies as a last Injection Site we want
"RTN","PSBINJEC",112,0)
 ;
"RTN","PSBINJEC",113,0)
 ; Function return: 0 = false, this admin record should not be used
"RTN","PSBINJEC",114,0)
 ;                  1 = true, this admin record shold be used
"RTN","PSBINJEC",115,0)
 ;
"RTN","PSBINJEC",116,0)
 ;Quit false, other than a "given type" for action status
"RTN","PSBINJEC",117,0)
 ; h=held,r=refused,n=not given,m=missing dose
"RTN","PSBINJEC",118,0)
 ;*83
"RTN","PSBINJEC",119,0)
 ;  remove code "RM", this is valid action for MRR meds for last site
"RTN","PSBINJEC",120,0)
 I ",H,R,N,M,"[(","_$P(^PSB(53.79,RR,0),U,9)_",") Q 0
"RTN","PSBINJEC",121,0)
 ;
"RTN","PSBINJEC",122,0)
 S ORDNO=$P(^PSB(53.79,RR,.1),U)
"RTN","PSBINJEC",123,0)
 K ^TMP("PSJ1",$J)
"RTN","PSBINJEC",124,0)
 D EN^PSJBCMA1(DFN,ORDNO,1)
"RTN","PSBINJEC",125,0)
 S IVTYPE=$P($G(^TMP("PSJ1",$J,0)),U,6)
"RTN","PSBINJEC",126,0)
 S INTERMIT=$P($G(^TMP("PSJ1",$J,0)),U,7)
"RTN","PSBINJEC",127,0)
 S PRMPTINJ=$P($G(^TMP("PSJ1",$J,1,0)),U)
"RTN","PSBINJEC",128,0)
 S DSPIVPB=$P($G(^TMP("PSJ1",$J,1,0)),U,2)
"RTN","PSBINJEC",129,0)
 S ORDIT=$P($G(^TMP("PSJ1",$J,2)),U)
"RTN","PSBINJEC",130,0)
 S ORDITNM=$P($G(^TMP("PSJ1",$J,2)),U,2)
"RTN","PSBINJEC",131,0)
 S ROUTE=$P($G(^TMP("PSJ1",$J,1)),U,13)
"RTN","PSBINJEC",132,0)
 S STDROUTE=$P($G(^TMP("PSJ1",$J,1)),U,14)
"RTN","PSBINJEC",133,0)
 K ^TMP("PSJ1",$J)
"RTN","PSBINJEC",134,0)
 ;
"RTN","PSBINJEC",135,0)
 ;   IV Orders
"RTN","PSBINJEC",136,0)
 ;Quit with T/F, is a valid rotation inj type
"RTN","PSBINJEC",137,0)
 I ORDNO["V" Q $$IVROTATN^PSBINJEC(.RTBL,STDROUTE,IVTYPE,INTERMIT)
"RTN","PSBINJEC",138,0)
 ;
"RTN","PSBINJEC",139,0)
 ;   Unit Dose Orders since not an IV
"RTN","PSBINJEC",140,0)
 ;Quit False, if Prompt for Inj is No OR if display on IVPB is Yes
"RTN","PSBINJEC",141,0)
 I SITETYP="I",'PRMPTINJ!DSPIVPB Q 0                              ;*83
"RTN","PSBINJEC",142,0)
 ;
"RTN","PSBINJEC",143,0)
 ;Quit True, is a valid rotation inj type
"RTN","PSBINJEC",144,0)
 Q 1
"RTN","PSBINJEC",145,0)
 ;
"RTN","PSBINJEC",146,0)
ADRESULT ; Add line item to Results array
"RTN","PSBINJEC",147,0)
 ; get last dispense, this one has the dosage given by the nurse
"RTN","PSBINJEC",148,0)
 S DOSAGE=""
"RTN","PSBINJEC",149,0)
 I ORDNO["U" D
"RTN","PSBINJEC",150,0)
 .S QQ=99999999 S QQ=$O(^PSB(53.79,RR,.5,QQ),-1)
"RTN","PSBINJEC",151,0)
 .S:QQ DOSAGE=$P($G(^PSB(53.79,RR,.5,QQ,0)),U,4)
"RTN","PSBINJEC",152,0)
 I ORDNO["V" D
"RTN","PSBINJEC",153,0)
 .S QQ=99999999 S QQ=$O(^PSB(53.79,RR,.6,QQ),-1)
"RTN","PSBINJEC",154,0)
 .S:QQ DOSAGE=$P($G(^PSB(53.79,RR,.6,QQ,0)),U,3)
"RTN","PSBINJEC",155,0)
 S SITE=$S(SITETYP="D":$$GET1^DIQ(53.79,RR_",",.18),1:$$GET1^DIQ(53.79,RR_",",.16))   ;*83
"RTN","PSBINJEC",156,0)
 ;
"RTN","PSBINJEC",157,0)
 S YY=YY+1
"RTN","PSBINJEC",158,0)
 S RESULTS(YY)=ACDTE_U_ORDIT_U_ORDITNM_U_DOSAGE_U_ROUTE_U_SITE    ;*83
"RTN","PSBINJEC",159,0)
 S RESULTS(0)=YY
"RTN","PSBINJEC",160,0)
 Q
"RTN","PSBINJEC",161,0)
 ;
"RTN","PSBINJEC",162,0)
LASTSITE(DFN,OI) ;Get the last site via LIFO per OI for VDL - Injection/Dermal
"RTN","PSBINJEC",163,0)
 ; Returns the last body site per the Patient and Orderable Item
"RTN","PSBINJEC",164,0)
 ;  If both an Injection site and Dermal site are found per an OI,
"RTN","PSBINJEC",165,0)
 ;  then the site that occurred most recently (last) will be returned.
"RTN","PSBINJEC",166,0)
 ;
"RTN","PSBINJEC",167,0)
 N LI,LINJ,LDER,LSITE
"RTN","PSBINJEC",168,0)
 D RPC^PSBINJEC(.LI,DFN,OI,9999999,1,"I")
"RTN","PSBINJEC",169,0)
 S LINJ=$G(LI(1))
"RTN","PSBINJEC",170,0)
 D RPC^PSBINJEC(.LI,DFN,OI,9999999,1,"D")
"RTN","PSBINJEC",171,0)
 S LDER=$G(LI(1))
"RTN","PSBINJEC",172,0)
 S LSITE=$S($P(LINJ,U)>$P(LDER,U):$P(LINJ,U,6),1:$P(LDER,U,6))
"RTN","PSBINJEC",173,0)
 Q LSITE
"RTN","PSBINJEC",174,0)
 ;
"RTN","PSBINJEC",175,0)
ERR(TXT) ; Error msg handler
"RTN","PSBINJEC",176,0)
 S RESULTS(0)=1
"RTN","PSBINJEC",177,0)
 S RESULTS(1)="-1^"_TXT
"RTN","PSBINJEC",178,0)
 Q
"RTN","PSBINJEC",179,0)
 ;
"RTN","PSBINJEC",180,0)
OK(TXT) ; Success msg handler
"RTN","PSBINJEC",181,0)
 S RESULTS(0)=1
"RTN","PSBINJEC",182,0)
 S RESULTS(1)="1^"_TXT
"RTN","PSBINJEC",183,0)
 Q
"RTN","PSBINJEC",184,0)
 ;
"RTN","PSBINJEC",185,0)
IVROTATN(RTAB,STDRT,IVTY,INT) ;  IV of route and type for injection rotations
"RTN","PSBINJEC",186,0)
 N IVOK S IVOK=0
"RTN","PSBINJEC",187,0)
 I STDRT="" Q IVOK
"RTN","PSBINJEC",188,0)
 I IVTY="S",INT=1 S IVOK=1           ;IV type= Syringe & intermittent
"RTN","PSBINJEC",189,0)
 I IVTY="C",INT=1 S IVOK=1           ;IV type= Chemo & intermittent
"RTN","PSBINJEC",190,0)
 I IVOK,'$D(RTAB(STDRT)) S IVOK=0    ;Std Rte NOT mapped
"RTN","PSBINJEC",191,0)
 Q IVOK
"RTN","PSBINJEC",192,0)
 ;
"RTN","PSBINJEC",193,0)
BLDTBL(TBL) ;  Build Rotation table
"RTN","PSBINJEC",194,0)
 N QQ,RT F QQ=1:1 S RT=$P($T(ROUTES+QQ^PSBINJEC),";;",2) Q:RT="END"  S TBL(RT)=""
"RTN","PSBINJEC",195,0)
 Q
"RTN","PSBINJEC",196,0)
 ;
"RTN","PSBINJEC",197,0)
ROUTES ;  Valid Rotation routes for returning admin record injection data
"RTN","PSBINJEC",198,0)
 ;;INTRADERMAL
"RTN","PSBINJEC",199,0)
 ;;INTRAMUSCULAR
"RTN","PSBINJEC",200,0)
 ;;SUBCUTANEOUS
"RTN","PSBINJEC",201,0)
 ;;END
"RTN","PSBML")
0^1^B154439138^B133370450
"RTN","PSBML",1,0)
PSBML ;BIRMINGHAM/EFC-BCMA MED LOG FUNCTIONS ;03/06/16 3:06pm
"RTN","PSBML",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,3,4,9,11,13,25,45,33,52,70,72,79,94,83**;Mar 2004;Build 89
"RTN","PSBML",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBML",4,0)
 ; Reference/IA
"RTN","PSBML",5,0)
 ; ^DPT/10035
"RTN","PSBML",6,0)
 ; DIC(42/10039
"RTN","PSBML",7,0)
 ; DIC(42/2440
"RTN","PSBML",8,0)
 ; File 200/10060
"RTN","PSBML",9,0)
 ; EN^PSJBCMA3/3320
"RTN","PSBML",10,0)
 ; $$SITE^VASITE/10112
"RTN","PSBML",11,0)
 ; ^XUSEC(/10076
"RTN","PSBML",12,0)
 ;
"RTN","PSBML",13,0)
 ;*70 - store clinic name to admin location if exists.
"RTN","PSBML",14,0)
 ;    - add witness duz, dt/tm for high risk/alert drug, Order level
"RTN","PSBML",15,0)
 ;      HR code, and a witnessed y/n flag to MEDLOG file.
"RTN","PSBML",16,0)
 ;*83 - store MRR code to DD multiple .06 field, to update AMRR xref
"RTN","PSBML",17,0)
 ;    - store Scheduled Removal time in a new field in 53.79
"RTN","PSBML",18,0)
 ;    - change offset of incoming array from 10th to 11th piece.
"RTN","PSBML",19,0)
 ;
"RTN","PSBML",20,0)
RPC(RESULTS,PSBHDR,PSBREC) ;BCMA MedLog Filing
"RTN","PSBML",21,0)
 K PSBEDTFL
"RTN","PSBML",22,0)
 S PSBEDTFL=0
"RTN","PSBML",23,0)
 N PSBORD,PSBTRAN,PSBFDA,PSBMES ;Add PSBMES variable for PSB*3*52
"RTN","PSBML",24,0)
 N PSBCLIN,PSBWITN,PSBWITCM,PSBWITHR,PSBWITFL,LOC                 ;*70
"RTN","PSBML",25,0)
 N PSBACTN                             ;used for trigger xref code *83
"RTN","PSBML",26,0)
 K PSBIEN,PSBHL7,%,PSBAUDIT,PSBINST
"RTN","PSBML",27,0)
 S PSBIEN=$P(PSBHDR,U,1)
"RTN","PSBML",28,0)
 S PSBTRAN=$P(PSBHDR,U,2),PSBHL7=PSBTRAN
"RTN","PSBML",29,0)
 S PSBINST=$P($G(PSBHDR),U,3)
"RTN","PSBML",30,0)
 ;*70 witness fields
"RTN","PSBML",31,0)
 S PSBWITN=+$P(PSBHDR,U,4)                ;init witness duz var
"RTN","PSBML",32,0)
 S PSBWITCM=$P(PSBHDR,U,5)                ;init witness comment
"RTN","PSBML",33,0)
 S PSBWITHR=+$P(PSBHDR,U,6)               ;init witness HR order level
"RTN","PSBML",34,0)
 S PSBWITFL=$S(PSBWITN:1,1:0)             ;init witnessed?
"RTN","PSBML",35,0)
 I PSBWITN="",PSBWITHR=3 D  Q
"RTN","PSBML",36,0)
 .S RESULTS(0)=1
"RTN","PSBML",37,0)
 .S RESULTS(1)="-1^A Witness is required, however Witness information was null."
"RTN","PSBML",38,0)
 ;PSB*3*45 We should be recording the first entry in the audit log.
"RTN","PSBML",39,0)
 ;S PSBAUDIT=$S(PSBIEN="+1":0,1:1)
"RTN","PSBML",40,0)
 S PSBAUDIT=1
"RTN","PSBML",41,0)
 D NOW^%DTC S PSBNOW=%
"RTN","PSBML",42,0)
 I $D(^XUSEC("PSB STUDENT",DUZ)),PSBINST="" S RESULTS(0)=1,RESULTS(1)="-1^Instructor not present" Q
"RTN","PSBML",43,0)
 I $D(^XUSEC("PSB STUDENT",DUZ)),'$D(^XUSEC("PSB INSTRUCTOR",PSBINST)) S RESULTS(0)=1,RESULTS(1)="-1^Instructor doesn't have authority" Q
"RTN","PSBML",44,0)
 S PSBINST(0)=$$GET1^DIQ(200,PSBINST_",",.01)
"RTN","PSBML",45,0)
 I PSBTRAN="ADD COMMENT" D COMMENT^PSBML1 Q
"RTN","PSBML",46,0)
 I PSBTRAN="PRN EFFECTIVENESS" D PRN^PSBML1 Q
"RTN","PSBML",47,0)
 ;
"RTN","PSBML",48,0)
 ;update medlog rec
"RTN","PSBML",49,0)
UPD I PSBTRAN="UPDATE STATUS" D  Q
"RTN","PSBML",50,0)
 .K PSBTAB,PSBUID
"RTN","PSBML",51,0)
 .S PSBACTN=PSBREC(0)     ;var for trigger code for Variance calcs *83
"RTN","PSBML",52,0)
 .I '$D(^PSB(53.79,PSBIEN)) D  Q
"RTN","PSBML",53,0)
 ..S RESULTS(0)=1
"RTN","PSBML",54,0)
 ..S RESULTS(1)="-1^Administration is at an UNKNOWN STATUS"
"RTN","PSBML",55,0)
 .D UPDATED^PSBML2
"RTN","PSBML",56,0)
 ;
"RTN","PSBML",57,0)
 ;edit Medlog rec
"RTN","PSBML",58,0)
EDITML I PSBTRAN="EDIT" D EDIT^PSBML2 Q
"RTN","PSBML",59,0)
 ;
"RTN","PSBML",60,0)
 ;SAGG
"RTN","PSBML",61,0)
 N PSBWARD S PSBWARD=$G(^DPT(+$G(PSBREC(0)),.1),"UNKNOWN"),^PSB("SAGG",PSBWARD,DT)=$G(^PSB("SAGG",PSBWARD,DT))+1
"RTN","PSBML",62,0)
 ;*70 save clinic name if exists before manipulating PSBREC(1) param
"RTN","PSBML",63,0)
 S PSBCLIN=$P(PSBREC(1),U,2) I PSBCLIN="" S PSBCLIN=$S($G(PSBCLIEN):$P($G(^SC(+PSBCLIEN,0)),"^"),($G(PSBCLORD)]""):PSBCLORD,1:"")
"RTN","PSBML",64,0)
 S PSBREC(1)=$P(PSBREC(1),U)
"RTN","PSBML",65,0)
 ;
"RTN","PSBML",66,0)
 ;pre-existing psbrec(1) manipulation logic to *70
"RTN","PSBML",67,0)
 I PSBREC(1)?1U1";"1.6N S PSBREC(1)=$P(PSBREC(1),";",1)_$E(PSBREC(1))
"RTN","PSBML",68,0)
 D PSJ1^PSBVT(PSBREC(0),$P(PSBREC(1),";",2)_$P(PSBREC(1),";",1))
"RTN","PSBML",69,0)
 S PSBTAB=$P(PSBREC(9),U,1),PSBUID=$P(PSBREC(9),U,2)
"RTN","PSBML",70,0)
MEDP D:PSBTRAN="MEDPASS"
"RTN","PSBML",71,0)
 .K PSBDIV,PSBON,PSBXDT,PSBYZ
"RTN","PSBML",72,0)
 .S PSBACTN=PSBREC(3)     ;var for trigger code for Variance calcs *83
"RTN","PSBML",73,0)
 .I ((PSBDOSEF["PATCH")!(PSBMRRFL)),(PSBREC(3)="G") D  Q:+$G(RESULTS(1))<0   ;add MRR flag to test *83
"RTN","PSBML",74,0)
 ..S PSBXDT="" F  S PSBXDT=$O(^PSB(53.79,"AORDX",PSBDFN,PSBONX,PSBXDT)) Q:PSBXDT=""  D  Q:+$G(RESULTS(1))<0
"RTN","PSBML",75,0)
 ...S PSBYZ="" F  S PSBYZ=$O(^PSB(53.79,"AORDX",PSBDFN,PSBONX,PSBXDT,PSBYZ)) Q:'PSBYZ  I ("G"[$$GET1^DIQ(53.79,PSBYZ,.09,"I")) D  Q
"RTN","PSBML",76,0)
 ....S:($$GET1^DIQ(53.79,PSBYZ,.09,"I")="G") RESULTS(0)=1,RESULTS(1)="-1^Previous administration has not been removed. Administration canceled.^"     ;make generic verbiage *83
"RTN","PSBML",77,0)
 ....S:($$GET1^DIQ(53.79,PSBYZ,.09,"I")="")&(($$GET1^DIQ(53.79,PSBYZ,.07,"I")'=DUZ)&('$D(^XUSEC("PSB MANAGER",DUZ)))) RESULTS(0)=1,RESULTS(1)="-1^Patch status ""*UNKNOWN*"". Administration canceled."
"RTN","PSBML",78,0)
 .I PSBREC(7)="BCMA/CPRS Interface Entry." S PSBNOW=PSBREC(5)  ;MOB
"RTN","PSBML",79,0)
 .F X=0:1:9 S PSBREC(X)=$G(PSBREC(X))
"RTN","PSBML",80,0)
 .I PSBREC(1)?1U1";".N S PSBREC(1)=$P(PSBREC(1),";",2)_$P(PSBREC(1),";",1)
"RTN","PSBML",81,0)
 .I PSBREC(1)["V",+PSBREC(5)>0,+$P(PSBREC(5),".",2)=0,PSBIVT'["P" D NOW^%DTC S PSBREC(5)=$P(PSBREC(5),".",1)_"."_$P(%,".",2)
"RTN","PSBML",82,0)
 .I $P(PSBREC(9),U,1)="IVTAB",$P(PSBREC(9),U,2)="" S PSBUID=$$GETWSID^PSBVDLU2(PSBREC(0),PSBREC(1))
"RTN","PSBML",83,0)
 .I $P(PSBREC(9),U,1)="PBTAB",$P(PSBREC(9),U,2)="",PSBREC(1)'["U",PSBREC(3)'="M",PSBREC(3)'="R",PSBREC(3)'="H" S PSBUID=$$GETWSID^PSBVDLU2(PSBREC(0),PSBREC(1))
"RTN","PSBML",84,0)
 .;OnCal
"RTN","PSBML",85,0)
 .D:PSBREC(2)="OC"
"RTN","PSBML",86,0)
 ..S X=$O(^PSB(53.79,"AORD",PSBREC(0),PSBREC(1),"")) Q:X=""
"RTN","PSBML",87,0)
 ..S Y=$O(^PSB(53.79,"AORD",PSBREC(0),PSBREC(1),X,0))
"RTN","PSBML",88,0)
 ..I $P(^PSB(53.79,Y,0),U,9)="G"&('$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL")) D ERR(1,"On-Call already given")
"RTN","PSBML",89,0)
 .;1x
"RTN","PSBML",90,0)
 .D:PSBREC(2)="O"
"RTN","PSBML",91,0)
 ..S X=$O(^PSB(53.79,"AORD",PSBREC(0),PSBREC(1),"")) Q:X=""
"RTN","PSBML",92,0)
 ..S Y=$O(^PSB(53.79,"AORD",PSBREC(0),PSBREC(1),X,0))
"RTN","PSBML",93,0)
 ..I $P(^PSB(53.79,Y,0),U,9)="G" D ERR(1,"One Time already Given")
"RTN","PSBML",94,0)
 .;PRN
"RTN","PSBML",95,0)
 .I PSBREC(2)="P",PSBREC(3)'="M",$P(PSBREC(9),U,1)'="IVTAB" D
"RTN","PSBML",96,0)
 ..I PSBREC(6)="" D ERR(1,"PRN Medications MUST Have a PRN Reason")
"RTN","PSBML",97,0)
 ..I PSBREC(5)]"" D ERR(1,"PRN Orders don't have scheduled times")
"RTN","PSBML",98,0)
 ..I PSBREC(3)'="G" D ERR(1,"PRN Orders cannot be marked NOT Given")
"RTN","PSBML",99,0)
 .;Cnt
"RTN","PSBML",100,0)
 .I PSBREC(2)="C",PSBTAB'="IVTAB" D
"RTN","PSBML",101,0)
 ..D:PSBREC(5)="" ERR(1,"Continuous Order needs admin time")
"RTN","PSBML",102,0)
 ..D:PSBREC(6)]"" ERR(1,"No PRN Reason allowed on Continuous Orders")
"RTN","PSBML",103,0)
 .I PSBREC(2)="C",$D(^PSB(53.79,"AORD",PSBREC(0),PSBREC(1),+PSBREC(5))),PSBIEN="+1" D  K PSBADMBY,PSBADMAT Q:PSBSIEN=""  Q:$P(^PSB(53.79,PSBSIEN,0),U,9)'="N"
"RTN","PSBML",104,0)
 ..S PSBSIEN=$O(^PSB(53.79,"AORD",PSBREC(0),PSBREC(1),PSBREC(5),""))
"RTN","PSBML",105,0)
 ..I PSBSIEN]"" I '(($P(^PSB(53.79,PSBSIEN,0),U,7)=DUZ)!($D(^XUSEC("PSB MANAGER",DUZ)))) S PSBSIEN=""
"RTN","PSBML",106,0)
 ..I PSBSIEN']"" S RESULTS(0)=2,RESULTS(1)="-2^Error Filing Transaction MEDPASS",RESULTS(2)="The PSB MANAGER key is required to modify this scheduled admin" Q
"RTN","PSBML",107,0)
 ..D:$P(^PSB(53.79,PSBSIEN,0),U,9)'="N"
"RTN","PSBML",108,0)
 ...K PSBINCX I $P(^PSB(53.79,PSBSIEN,0),U,9)="" S PSBINCX=PSBSIEN L +^PSB(53.79,PSBINCX):1 Q:'$T  L -^PSB(53.79,PSBINCX)
"RTN","PSBML",109,0)
 ...S Y=$P(^PSB(53.79,PSBSIEN,0),U,6) D DD^%DT S PSBADMAT=Y
"RTN","PSBML",110,0)
 ...S PSBADMBY=$$GET1^DIQ(200,$P(^PSB(53.79,PSBSIEN,0),U,7),.01,)
"RTN","PSBML",111,0)
 ...S RESULTS(0)=3,RESULTS(1)="-2^Error Filing Transaction MEDPASS"
"RTN","PSBML",112,0)
 ...S RESULTS(2)="Continuous Administration Date/Time already on file."
"RTN","PSBML",113,0)
 ...S RESULTS(3)="Administered by "_PSBADMBY_" at "_PSBADMAT_"."
"RTN","PSBML",114,0)
 ...I $D(XWB) S RESULTS(0)=RESULTS(0)+2,RESULTS(4)="                                         ",RESULTS(5)="            VDL will now be updated."
"RTN","PSBML",115,0)
 .;Non Given
"RTN","PSBML",116,0)
 .I PSBREC(3)'="G",PSBREC(3)'="M",PSBUID'["V",PSBUID'["W" D
"RTN","PSBML",117,0)
 ..I PSBREC(7)="",PSBTAB'="IVTAB" D ERR(1,"Comment needed if Not Marked Given")
"RTN","PSBML",118,0)
 ..I PSBREC(7)="",PSBTAB="IVTAB" D ERR(1,"Comment needed if Not Marked Completed")
"RTN","PSBML",119,0)
 .S:PSBREC(3)="H" PSBREC(7)="Held: "_PSBREC(7)    ;.3
"RTN","PSBML",120,0)
 .S:PSBREC(3)="R" PSBREC(7)="Refused: "_PSBREC(7) ;.3
"RTN","PSBML",121,0)
 .S:PSBREC(3)="S" PSBREC(7)="Stopped: "_PSBREC(7) ;.3
"RTN","PSBML",122,0)
 .;Valid?
"RTN","PSBML",123,0)
 .I $G(PSBSIEN)'="" I $D(^PSB(53.79,PSBSIEN,0)) I $P(^PSB(53.79,PSBSIEN,0),U,9)="N" S PSBIEN=+PSBSIEN_",",$P(PSBHDR,U)=PSBIEN,PSBTRAN="UPDATE STATUS",PSBAUDIT=1                   ;do UPDATE
"RTN","PSBML",124,0)
 .D:PSBIEN="+1"                          ;New fields only?
"RTN","PSBML",125,0)
 ..D VAL(53.79,PSBIEN,.01,"`"_PSBREC(0))           ;Patn
"RTN","PSBML",126,0)
 ..S LOC=$G(^DPT(PSBREC(0),.1))_" "_$G(^(.101))    ;Ward Room/Bed LOC
"RTN","PSBML",127,0)
 ..S:PSBCLIN]"" LOC=PSBCLIN         ;If clinic order use clin name *70
"RTN","PSBML",128,0)
 ..D VAL(53.79,PSBIEN,.02,LOC)                     ;Patn Location LOC
"RTN","PSBML",129,0)
 ..D:$G(^DPT(PSBREC(0),.1))'=""
"RTN","PSBML",130,0)
 ...S Y=$O(^DIC(42,"B",$G(^DPT(PSBREC(0),.1)),"")),Y=$$GET1^DIQ(42,Y,.015,"I"),PSBDIV=$$SITE^VASITE(DT,Y)
"RTN","PSBML",131,0)
 ...D VAL(53.79,PSBIEN,.03,"`"_$P(PSBDIV,U,1))     ;Div
"RTN","PSBML",132,0)
 ..D VAL(53.79,PSBIEN,.04,PSBNOW)                  ;Entered dt/tm
"RTN","PSBML",133,0)
 ..D VAL(53.79,PSBIEN,.05,"`"_DUZ)                 ;Entered by duz
"RTN","PSBML",134,0)
 ..D VAL(53.79,PSBIEN,.06,PSBNOW)                  ;Admin dt/tm
"RTN","PSBML",135,0)
 ..D VAL(53.79,PSBIEN,.07,"`"_DUZ)                 ;Admin By duz
"RTN","PSBML",136,0)
 ..D VAL(53.79,PSBIEN,.08,"`"_PSBREC(4))           ;Orderable Item
"RTN","PSBML",137,0)
 ..D VAL(53.79,PSBIEN,.11,PSBREC(1))               ;Ord file 55 IEN
"RTN","PSBML",138,0)
 ..D VAL(53.79,PSBIEN,.12,PSBREC(2))               ;Ord Schd Type
"RTN","PSBML",139,0)
 ..D VAL(53.79,PSBIEN,.13,PSBREC(5))               ;Schd Admin dt/tm
"RTN","PSBML",140,0)
 ..I $P($G(PSBREC(10)),".",2)]"" D
"RTN","PSBML",141,0)
 ...D VAL(53.79,PSBIEN,.17,PSBREC(10))             ;Schd Remove dt/tm
"RTN","PSBML",142,0)
 ..D:PSBTAB'="UDTAB" VAL(53.79,PSBIEN,.26,PSBUID)  ;IV Bag ID
"RTN","PSBML",143,0)
 ..D:PSBTAB="IVTAB" VAL(53.79,PSBIEN,.13,"")       ;Schd Admdt/tm null
"RTN","PSBML",144,0)
 ..D:PSBREC(1)?.N1"U" VAL(53.79,PSBIEN,.15,PSBDOSE)  ;UD Dosage
"RTN","PSBML",145,0)
 ..D:PSBREC(1)?.N1"V" VAL(53.79,PSBIEN,.35,PSBIFR)   ;IV Infuse Rate
"RTN","PSBML",146,0)
 ..I PSBWITHR>1,(PSBREC(3)="G")!(PSBREC(3)="I") D          ;Witness logic and Give?  *70
"RTN","PSBML",147,0)
 ...D:PSBWITN VAL(53.79,PSBIEN,.28,PSBNOW)        ;Witness dt/time
"RTN","PSBML",148,0)
 ...D:PSBWITN VAL(53.79,PSBIEN,.29,"`"_PSBWITN)   ;Witness duz
"RTN","PSBML",149,0)
 ...D:PSBWITCM]"" VAL(53.79,PSBIEN,.31,PSBWITCM)  ;Witness comment
"RTN","PSBML",150,0)
 ...D VAL(53.79,PSBIEN,.32,PSBWITHR)              ;Witness HR ord code
"RTN","PSBML",151,0)
 ...D VAL(53.79,PSBIEN,.33,PSBWITFL)              ;Witnessed? flag
"RTN","PSBML",152,0)
 .;
"RTN","PSBML",153,0)
 .;Overwrite fields below, rec already exists
"RTN","PSBML",154,0)
 .I PSBREC(3)="G"!(PSBREC(3))="C" D                ;Gvn/Completed?
"RTN","PSBML",155,0)
 ..D VAL(53.79,PSBIEN,.06,PSBNOW)                    ;Admin dt/tm
"RTN","PSBML",156,0)
 ..D VAL(53.79,PSBIEN,.07,"`"_DUZ)                   ;Admin By duz
"RTN","PSBML",157,0)
 .;     set Derm/Inj site fields  *83
"RTN","PSBML",158,0)
 .I PSBREC(8)]"" D
"RTN","PSBML",159,0)
 ..N SITETXT,SITECD
"RTN","PSBML",160,0)
 ..S SITETXT=$P(PSBREC(8),"|",1),SITECD=$P(PSBREC(8),"|",2)
"RTN","PSBML",161,0)
 ..I SITECD="D" D                     ;If dermal, else assume inj site
"RTN","PSBML",162,0)
 ...D VAL(53.79,PSBIEN,.18,SITETXT)      ;Dermal site
"RTN","PSBML",163,0)
 ..E  D
"RTN","PSBML",164,0)
 ...D VAL(53.79,PSBIEN,.16,SITETXT)      ;Inject site
"RTN","PSBML",165,0)
 .;
"RTN","PSBML",166,0)
 .D:'$G(PSBMMEN) VAL(53.79,PSBIEN,.09,PSBREC(3))   ;AStats
"RTN","PSBML",167,0)
 .I PSBREC(6)]"" D                                 ;PRN reason?
"RTN","PSBML",168,0)
 ..D VAL(53.79,PSBIEN,.21,$P(PSBREC(6),U))           ;reason dt/tm
"RTN","PSBML",169,0)
 ..D VAL(53.79,PSBIEN,.27,$P(PSBREC(6),U,2))         ;PRN reason
"RTN","PSBML",170,0)
 .D:PSBREC(7)]""
"RTN","PSBML",171,0)
 ..D VAL(53.793,"+2,"_PSBIEN,.01,PSBREC(7))        ;Comment
"RTN","PSBML",172,0)
 ..D VAL(53.793,"+2,"_PSBIEN,.02,"`"_DUZ)          ;comnt person duz
"RTN","PSBML",173,0)
 ..D VAL(53.793,"+2,"_PSBIEN,.03,PSBNOW)           ;comnt dt/time
"RTN","PSBML",174,0)
 .;
"RTN","PSBML",175,0)
 .;DD/SOL/ADD
"RTN","PSBML",176,0)
 .I PSBREC(3)="G"!(PSBREC(3)="I")!(PSBREC(3)="H")!(PSBREC(3)="R")!(PSBREC(3)="M") D     ;given/action stat codes?
"RTN","PSBML",177,0)
 ..I PSBTRAN="UPDATE STATUS" K ^PSB(53.79,+PSBIEN,.5),^PSB(53.79,+PSBIEN,.6),^PSB(53.79,+PSBIEN,.7)
"RTN","PSBML",178,0)
 ..;move DD segments to element 11..n    No longer 10th            *83
"RTN","PSBML",179,0)
 ..K PSBCNT,PSBIENS
"RTN","PSBML",180,0)
 ..F PSBCNT=11:1 Q:'$D(PSBREC(PSBCNT))  D
"RTN","PSBML",181,0)
 ...S Y=$P(PSBREC(PSBCNT),U)
"RTN","PSBML",182,0)
 ...S PSBDD=$S(Y="DD":53.795,Y="ADD":53.796,Y="SOL":53.797,1:0)
"RTN","PSBML",183,0)
 ...Q:'PSBDD
"RTN","PSBML",184,0)
 ...S PSBIENS="+"_PSBCNT_","_PSBIEN
"RTN","PSBML",185,0)
 ...D VAL(PSBDD,PSBIENS,.01,"`"_$P(PSBREC(PSBCNT),U,2))
"RTN","PSBML",186,0)
 ...D VAL(PSBDD,PSBIENS,.02,$P(PSBREC(PSBCNT),U,3))
"RTN","PSBML",187,0)
 ...D:PSBDD=53.795 VAL(PSBDD,PSBIENS,.02,$P(PSBREC(PSBCNT),U,3))
"RTN","PSBML",188,0)
 ...D:PSBDD=53.796!(PSBDD=53.797) VAL(PSBDD,PSBIENS,.02,$P(PSBREC(PSBCNT),U,4)) ;Store units in Units ordered field, PSB*3*72
"RTN","PSBML",189,0)
 ...D:PSBREC(3)="G"!(PSBREC(3)="I") VAL(PSBDD,PSBIENS,.03,$P(PSBREC(PSBCNT),U,4)) ;only store units given when infusing or given, PSB*3*72
"RTN","PSBML",190,0)
 ...D:(PSBTAB="UDTAB")!(PSBTAB="PBTAB") VAL(PSBDD,PSBIENS,.04,$E($P(PSBREC(PSBCNT),U,5),1,40))
"RTN","PSBML",191,0)
 ...D VAL(PSBDD,PSBIENS,.05,$P(PSBREC(PSBCNT),U,7))        ;HR ind *70
"RTN","PSBML",192,0)
 ...;.06 field only valid for Unit dose DD type, not for IV's     *83
"RTN","PSBML",193,0)
 ...D:PSBDD=53.795 VAL(PSBDD,PSBIENS,.06,$P(PSBREC(PSBCNT),U,8))  ;MRR
"RTN","PSBML",194,0)
 .;Modify Filing Transaction Medpass error message too inclde details - PSB*3*52
"RTN","PSBML",195,0)
 .I $O(RESULTS("")) D  Q
"RTN","PSBML",196,0)
 ..N PSBERR
"RTN","PSBML",197,0)
 ..I $D(PSBMES) D
"RTN","PSBML",198,0)
 ...S RESULTS(1)="-2^***Your documentation is NOT being recorded in the patient record.***",RESULTS(2)=""
"RTN","PSBML",199,0)
 ...S RESULTS(3)="Please write down the information (below) AND contact your BCMA Coordinator or IT Support for assistance:",RESULTS(4)=""
"RTN","PSBML",200,0)
 ...S RESULTS(5)="Error(s) Filing Transaction MEDPASS"
"RTN","PSBML",201,0)
 ..S PSBERR=0 F  S PSBERR=$O(PSBMES(PSBERR)) Q:PSBERR=""  D
"RTN","PSBML",202,0)
 ...S RESULTS($O(RESULTS(""),-1)+1)=PSBMES(PSBERR),RESULTS(0)=$O(RESULTS(""),-1)
"RTN","PSBML",203,0)
 .;
"RTN","PSBML",204,0)
 .D FILEIT
"RTN","PSBML",205,0)
 .;
"RTN","PSBML",206,0)
 .;PSB*3*33
"RTN","PSBML",207,0)
 .D:((PSBREC(2)="O")!($$ONE^PSJBCMA(PSBREC(0),PSBREC(1))="O"))&(PSBREC(3)="G") EXPIRE^PSBML1  ;1x exp?
"RTN","PSBML",208,0)
 .D:(PSBREC(2)="O")&(PSBREC(3)="G") EXPIRE^PSBML1  ;1x exp?
"RTN","PSBML",209,0)
 .I $P(RESULTS(0),U,1)=1,PSBTAB'="UDTAB",PSBUID]"",PSBUID'["WS" S PSBON=+PSBREC(1) D EN^PSJBCMA3(PSBREC(0),PSBON,PSBUID,PSBREC(3),PSBNOW)
"RTN","PSBML",210,0)
 Q
"RTN","PSBML",211,0)
BCBU ;HL7,NatContng
"RTN","PSBML",212,0)
 Q:+$G(RESULTS(0))'>0
"RTN","PSBML",213,0)
 N PSBIEN1 S PSBIEN1=$S($P(PSBIEN,",",2)'="":+$P(PSBIEN,",",2),$G(PSBIEN)="+1":PSBIEN(1),1:+$G(PSBIEN))
"RTN","PSBML",214,0)
 I $G(PSBIEN1)="" S RESULTS(0)=1,RESULTS(1)="-1^Contingency NOT processed" Q
"RTN","PSBML",215,0)
 I $G(PSBIEN)="+1" S PSBHL7="MEDPASS"
"RTN","PSBML",216,0)
 E  S:$G(PSBHL7)="" PSBHL7="UPDATE STATUS"
"RTN","PSBML",217,0)
 D:('$D(Y(0))!($G(Y(0))="SAVE")!($G(Y(0))="YES")) EN^PSBSVHL7(+PSBIEN1,PSBHL7),MEDL^ALPBCBU(+PSBIEN1) K PSBHL7
"RTN","PSBML",218,0)
 ;<<HDR-VDEF(frm *3)
"RTN","PSBML",219,0)
 Q
"RTN","PSBML",220,0)
VAL(PSBDD,PSBIEN,PSBFLD,PSBVAL) ;
"RTN","PSBML",221,0)
 K ^TMP("DIERR",$J),PSBRET
"RTN","PSBML",222,0)
 D VAL^DIE(PSBDD,PSBIEN,PSBFLD,"F",PSBVAL,.PSBRET,"PSBFDA")
"RTN","PSBML",223,0)
 I PSBRET="^" F X=0:0 S X=$O(^TMP("DIERR",$J,X)) Q:'X  D ERR(2,^TMP("DIERR",$J,X)_": "_$G(^(X,"TEXT",1),"**"))
"RTN","PSBML",224,0)
 K ^TMP("DIERR",$J),PSBRET
"RTN","PSBML",225,0)
 Q
"RTN","PSBML",226,0)
FILEIT ;Updt
"RTN","PSBML",227,0)
 K Z,X,PSB1,PSB2
"RTN","PSBML",228,0)
 N PSBMSG,PSBAUD
"RTN","PSBML",229,0)
 S (PSB1,PSB2)=""
"RTN","PSBML",230,0)
 D APATCH^PSBML3
"RTN","PSBML",231,0)
 D AMRR^PSBML3                                                    ;*83
"RTN","PSBML",232,0)
 D CLEAN^DILF
"RTN","PSBML",233,0)
 D RESETADM^PSBUTL
"RTN","PSBML",234,0)
 D UPDATE^DIE("","PSBFDA","PSBIEN","PSBMSG")
"RTN","PSBML",235,0)
 I '$G(PSBMMEN) S X=+PSBIEN I $F("HR",$P(^PSB(53.79,X,0),U,9))>1 F Y=.5,.6,.7 S Z=0 F  S Z=$O(^PSB(53.79,+X,Y,Z)) Q:+Z=0  S $P(^PSB(53.79,+X,Y,Z,0),U,3)=0
"RTN","PSBML",236,0)
 I $D(PSBMSG("DIERR")) S RESULTS(0)=1,RESULTS(1)="-1^"_PSBMSG("DIERR",1)_": "_PSBMSG("DIERR",1,"TEXT",1)  Q
"RTN","PSBML",237,0)
 I $G(PSB1)]"" X PSB1 I $G(PSB2)]"" X PSB2
"RTN","PSBML",238,0)
 I $G(PSB1A)]"" X PSB1A I $G(PSB2A)]"" X PSB2A                    ;*83
"RTN","PSBML",239,0)
 I $D(PSBHDR) D:"NHMR"[$P(^PSB(53.79,$S($P(PSBHDR,"^",1)="+1":PSBIEN(1),1:+PSBIEN),0),U,9)
"RTN","PSBML",240,0)
 .N PSBINDX S PSBINDX=$S($P(PSBHDR,"^",1)="+1":PSBIEN(1),1:+PSBIEN)
"RTN","PSBML",241,0)
 .K ^PSB(53.79,"APATCH",$P(^PSB(53.79,PSBINDX,0),U),$P(^PSB(53.79,PSBINDX,0),U,6),PSBINDX)
"RTN","PSBML",242,0)
 S RESULTS(0)=1,RESULTS(1)="1^Data Successfully Filed^"_$S($G(PSBIEN(1))'="":$G(PSBIEN(1)),1:+$G(PSBIEN))
"RTN","PSBML",243,0)
 D BCBU  ;NatContng
"RTN","PSBML",244,0)
 D  ;
"RTN","PSBML",245,0)
 . N X,DIC
"RTN","PSBML",246,0)
 . S X="PSB EVSEND VPR",DIC=101 D EN^XQOR ;should handle all BCMA Med Log events for VPR
"RTN","PSBML",247,0)
 I $G(PSBINST,0) S PSBAUD=$S($P(PSBHDR,"^",1)="+1":PSBIEN(1),1:$P(PSBHDR,"^",1)) D AUDIT^PSBMLU(PSBAUD,"Instructor "_PSBINST(0)_" present.",PSBTRAN)
"RTN","PSBML",248,0)
 K PSB1,PSB2,PSB1A,PSB2A   ;*83
"RTN","PSBML",249,0)
 Q
"RTN","PSBML",250,0)
ERR(X,Y) ;
"RTN","PSBML",251,0)
 S X=$P("Business Logic Error^Data Validation Error",U,X)
"RTN","PSBML",252,0)
 S RESULTS($O(RESULTS(""),-1)+1)=X_": "_Y
"RTN","PSBML",253,0)
 S PSBMES($O(PSBMES(""),-1)+1)=X_": "_Y
"RTN","PSBML",254,0)
 Q
"RTN","PSBML",255,0)
COMMENT(DA,PSBCMT) ;
"RTN","PSBML",256,0)
 N PSBFDA,PSBIEN,PSBNOW
"RTN","PSBML",257,0)
 S PSBIEN="+1,"_DA_","
"RTN","PSBML",258,0)
 D NOW^%DTC S PSBNOW=%
"RTN","PSBML",259,0)
 D VAL(53.793,PSBIEN,.01,PSBCMT)
"RTN","PSBML",260,0)
 S PSBFDA(53.793,PSBIEN,.02)=DUZ
"RTN","PSBML",261,0)
 S PSBFDA(53.793,PSBIEN,.03)=PSBNOW
"RTN","PSBML",262,0)
 D FILEIT
"RTN","PSBML",263,0)
 Q
"RTN","PSBML2")
0^3^B112891914^B103484155
"RTN","PSBML2",1,0)
PSBML2 ;BIRMINGHAM/TEJ-BCMA UTILITY TO EDIT THE PSB MED LOG ;03/06/16 3:06pm
"RTN","PSBML2",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,18,22,23,13,45,42,70,72,83**;Mar 2004;Build 89
"RTN","PSBML2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.;
"RTN","PSBML2",4,0)
 ; Reference/IA
"RTN","PSBML2",5,0)
 ; EN^PSJBCMA3/3320
"RTN","PSBML2",6,0)
 ; ENE^PSJBCMA4/3416
"RTN","PSBML2",7,0)
 ; ENR^PSJBCMA4/3416
"RTN","PSBML2",8,0)
 ;
"RTN","PSBML2",9,0)
 ;*70 - update Witness if present and Giving now as an updated, could 
"RTN","PSBML2",10,0)
 ;      mean undo given or a hold/refused was done first.
"RTN","PSBML2",11,0)
 ;*83 - store MRR code to DD multiple .06 field, to update AMRR xref
"RTN","PSBML2",12,0)
 ;
"RTN","PSBML2",13,0)
EDIT ;
"RTN","PSBML2",14,0)
 K RESULTS S PSBEDIEN=PSBIEN_",",RESULTS(0)=0
"RTN","PSBML2",15,0)
 I $G(PSBREC(7))']"" S RESULTS(0)=1,RESULTS(1)="-1^Data NOT filed - Comment is required" Q
"RTN","PSBML2",16,0)
 D
"RTN","PSBML2",17,0)
 .S PSBEDTFL=1,PSBMODS=0,PSBREC(1)=""
"RTN","PSBML2",18,0)
 .D:PSBREC(4)]"" VAL^PSBML(53.79,PSBEDIEN,.06,PSBREC(4))
"RTN","PSBML2",19,0)
 .I (PSBREC(0)="N") D
"RTN","PSBML2",20,0)
 ..I ($$GET1^DIQ(53.79,PSBEDIEN,.11)["V") F PSBX=1:1:6 S PSBREC(PSBX)=""
"RTN","PSBML2",21,0)
 .I ("NHR"[PSBREC(0)),$D(^PSB(53.79,+PSBEDIEN,.2)) D
"RTN","PSBML2",22,0)
 ..; Audit PRN
"RTN","PSBML2",23,0)
 ..D:$P(^PSB(53.79,+PSBEDIEN,.2),U,2)]"" AUDIT^PSBUTL(+PSBEDIEN,53.79,.22,$P(^PSB(53.79,+PSBEDIEN,.2),U,2),"K")
"RTN","PSBML2",24,0)
 ..I ($P(^PSB(53.79,+PSBEDIEN,0),U,9)="G")!($P(^PSB(53.79,+PSBEDIEN,0),U,9)="I") D
"RTN","PSBML2",25,0)
 ...I $D(^PSB(53.79,"APRN",$P(^PSB(53.79,+PSBEDIEN,0),U,1),$P(^PSB(53.79,+PSBEDIEN,0),U,6),+PSBEDIEN)) D
"RTN","PSBML2",26,0)
 ....K ^PSB(53.79,"APRN",$P(^PSB(53.79,+PSBEDIEN,0),U,1),$P(^PSB(53.79,+PSBEDIEN,0),U,6),+PSBEDIEN) K ^PSB(53.79,+PSBEDIEN,.2)
"RTN","PSBML2",27,0)
 .I ("NHR"'[PSBREC(0)) D:$G(PSBREC(5))]"" VAL^PSBML(53.79,PSBEDIEN,.21,$G(PSBREC(5))) D:$G(PSBREC(6))]"" VAL^PSBML(53.79,PSBEDIEN,.22,$G(PSBREC(6)))
"RTN","PSBML2",28,0)
 .I +$G(RESULTS(0))<0 S RESULTS(1)="-1^Data NOT filed - "_$P(RESULTS(0),U,2),RESULTS(0)=1 Q
"RTN","PSBML2",29,0)
 .D:$D(^PSB(53.79,+PSBEDIEN,.2)) VAL^PSBML(53.79,PSBEDIEN,.21,$G(PSBREC(5))),VAL^PSBML(53.79,PSBEDIEN,.22,$G(PSBREC(6)))
"RTN","PSBML2",30,0)
 .D VAL^PSBML(53.793,"+2,"_PSBIEN,.01,PSBREC(7))
"RTN","PSBML2",31,0)
 .D VAL^PSBML(53.793,"+2,"_PSBIEN,.02,"`"_DUZ)
"RTN","PSBML2",32,0)
 .D VAL^PSBML(53.793,"+2,"_PSBIEN,.03,PSBNOW)
"RTN","PSBML2",33,0)
 Q:+$G(RESULTS(1))<0
"RTN","PSBML2",34,0)
 S PSBMODS=$$CHANGE^PSBML3(.PSBREC,PSBEDIEN)
"RTN","PSBML2",35,0)
 D:PSBMODS UPDATED
"RTN","PSBML2",36,0)
 D:('$G(PSBERR))&('$G(PSBMODS)) FILEIT^PSBML
"RTN","PSBML2",37,0)
 ; Audit DD
"RTN","PSBML2",38,0)
 I $D(PSBORDMD) S (PSBXY,PSBXZ)="" D
"RTN","PSBML2",39,0)
 .F  S PSBXY=$O(PSBORDMD(PSBXY)) Q:PSBXY=""  S PSBFDAX=$S(PSBXY=.6:53.796,PSBXY=.7:53.797,1:53.795) F  S PSBXZ=$O(PSBORDMD(PSBXY,PSBXZ)) Q:PSBXZ=""  D
"RTN","PSBML2",40,0)
 ..S PSBXACT="",PSBXACT=$G(PSBORDMD(PSBXY,PSBXZ,0))
"RTN","PSBML2",41,0)
 ..D:PSBXACT["ADD" AUDIT^PSBUTL(+PSBEDIEN,PSBFDAX,.01,PSBXZ,"S") D:PSBXACT["DELETE" AUDIT^PSBUTL(+PSBEDIEN,PSBFDAX,.01,PSBXZ,"K")
"RTN","PSBML2",42,0)
 ;
"RTN","PSBML2",43,0)
 K PSBORDMD,PSBCHNG,PSBDDX,PSBEDTFL,PSBEDIEN,PSBFILED
"RTN","PSBML2",44,0)
 Q
"RTN","PSBML2",45,0)
 ;
"RTN","PSBML2",46,0)
UPDATED ;
"RTN","PSBML2",47,0)
 N PSBADD
"RTN","PSBML2",48,0)
 S PSBIEN=PSBIEN_",",PSBXPTCH=0
"RTN","PSBML2",49,0)
 S PSBRECNO=$S(PSBEDTFL:8,1:4)
"RTN","PSBML2",50,0)
 I "^G^N^H^R^RM^S^C^I^M^"[(U_PSBREC(0)_U) D
"RTN","PSBML2",51,0)
 .D:('PSBEDTFL) VAL^PSBML(53.79,PSBIEN,.06,PSBNOW)
"RTN","PSBML2",52,0)
 .D:$D(PSBREC(4,0)) VAL^PSBML(53.79,PSBIEN,.06,PSBREC(4))
"RTN","PSBML2",53,0)
 .D VAL^PSBML(53.79,PSBIEN,.07,"`"_DUZ)
"RTN","PSBML2",54,0)
 .D:('PSBEDTFL)!($G(PSBREC(0,0))) VAL^PSBML(53.79,PSBIEN,.09,PSBREC(0))
"RTN","PSBML2",55,0)
 .I $G(PSBREC(3))]"" D VAL^PSBML(53.79,PSBIEN,.26,PSBREC(3))
"RTN","PSBML2",56,0)
 I $D(PSBREC(PSBRECNO)) D:($G(PSBREC(0))="G")&($P(PSBREC(PSBRECNO),U,5)["PATCH")  Q:+$G(RESULTS(1))<0
"RTN","PSBML2",57,0)
 .Q:$$GET1^DIQ(53.79,PSBIEN,.09,"I")=""
"RTN","PSBML2",58,0)
 .S PSBXDFN=$$GET1^DIQ(53.79,PSBIEN,.01,"I")
"RTN","PSBML2",59,0)
 .S PSBXORN=$$GET1^DIQ(53.79,+PSBIEN,.11,"I")
"RTN","PSBML2",60,0)
 .S PSBXDT="" F  S PSBXDT=$O(^PSB(53.79,"AORDX",PSBXDFN,PSBXORN,PSBXDT)) Q:PSBXDT=""  D  Q:+$G(RESULTS(1))<0
"RTN","PSBML2",61,0)
 ..S PSBYZ="" F  S PSBYZ=$O(^PSB(53.79,"AORDX",PSBXDFN,PSBXORN,PSBXDT,PSBYZ)) Q:'PSBYZ  I ($$GET1^DIQ(53.79,PSBYZ,.09,"I")="G"),(PSBYZ'=+PSBIEN) S RESULTS(0)=1,RESULTS(1)="-1^Previous Patch has not been removed. Administration canceled." Q
"RTN","PSBML2",62,0)
 S:'$D(PSBXDFN) PSBXDFN=$$GET1^DIQ(53.79,PSBIEN,.01,"I"),PSBXORN=$$GET1^DIQ(53.79,+PSBIEN,.11,"I")
"RTN","PSBML2",63,0)
 I $G(PSBREC(3))']"",$G(PSBREC(0))="G",$P($G(PSBREC(4)),U)'="DD",$P($G(PSBREC(8)),U)'="DD" S PSBUID=$$GETWSID^PSBVDLU2(+PSBXDFN,+PSBXORN) D VAL^PSBML(53.79,PSBIEN,.26,PSBUID)
"RTN","PSBML2",64,0)
 ;
"RTN","PSBML2",65,0)
 D:$G(PSBREC(0))="N"
"RTN","PSBML2",66,0)
 .I (PSBREC(0)="N"),($$GET1^DIQ(53.79,+PSBIEN,.09,"I")="G") S PSBREC(1)="Undo Given: "_$G(PSBREC(1))
"RTN","PSBML2",67,0)
 .I ((PSBREC(0)="N")!(PSBREC(0)="G")),($$GET1^DIQ(53.79,+PSBIEN,.09,"I")="RM") S PSBREC(1)="Undo Remove: "_$G(PSBREC(1))
"RTN","PSBML2",68,0)
 .; Undo PRN
"RTN","PSBML2",69,0)
 .I $D(^PSB(53.79,+PSBIEN,.2)) D
"RTN","PSBML2",70,0)
 ..I $P(^PSB(53.79,+PSBIEN,0),U,9)="G"!($P(^PSB(53.79,+PSBIEN,0),U,9)="I") D VAL^PSBML(53.79,PSBIEN,.21,"@") D  ;Use BCMA Edit function to delete PRN Reason Field
"RTN","PSBML2",71,0)
 ...N DIK,DA
"RTN","PSBML2",72,0)
 ...I $$GET1^DIQ(53.79,PSBIEN_",",.22)]"" D VAL^PSBML(53.79,PSBIEN,.22,"@"),VAL^PSBML(53.79,PSBIEN,.23,"@"),VAL^PSBML(53.79,PSBIEN,.24,"@"),VAL^PSBML(53.79,PSBIEN,.25,"@") ;Use BCMA Edit function to delete PRN Effectiveness fields
"RTN","PSBML2",73,0)
 ...S DIK(1)=".12",DA=+PSBIEN,DIK="^PSB(53.79,"_DA_"," D EN2^DIK ;Use FM to properly delete order status and clean up "APRN" cross reference,PSB*3*72
"RTN","PSBML2",74,0)
 ..D:$$GET1^DIQ(53.79,PSBIEN_",",.27)=1 VAL^PSBML(53.79,PSBIEN,.27,"@") ;Use BCMA Edit function to delete PRN Reason Flag field, PSB*3*72
"RTN","PSBML2",75,0)
 D:$G(PSBREC(1))]""
"RTN","PSBML2",76,0)
 .S:PSBREC(0)="H" PSBREC(1)="Held: "_PSBREC(1)
"RTN","PSBML2",77,0)
 .S:PSBREC(0)="R" PSBREC(1)="Refused: "_PSBREC(1)
"RTN","PSBML2",78,0)
 .S:PSBREC(0)="RM" PSBREC(1)="Removed: "_PSBREC(1)
"RTN","PSBML2",79,0)
 .I $D(PSBFDA(53.793,"+2,"_PSBIEN,.01)) S PSBREC(1)=PSBREC(1)_(PSBFDA(53.793,"+2,"_PSBIEN,.01))
"RTN","PSBML2",80,0)
 .D VAL^PSBML(53.793,"+2,"_PSBIEN,.01,PSBREC(1)),VAL^PSBML(53.793,"+2,"_PSBIEN,.02,"`"_DUZ),VAL^PSBML(53.793,"+2,"_PSBIEN,.03,PSBNOW)
"RTN","PSBML2",81,0)
 S PSBXDFN=$$GET1^DIQ(53.79,PSBIEN,.01,"I")
"RTN","PSBML2",82,0)
 I ($$GET1^DIQ(53.79,+PSBIEN,.09,"I")="RM"),((PSBREC(0)="N")!(PSBREC(0)="G")) D
"RTN","PSBML2",83,0)
 .I '(($D(^XUSEC("PSB MANAGER",DUZ)))!($$GET1^DIQ(53.79,+PSBIEN,.07,"I")=DUZ)) S RESULTS(0)=1,RESULTS(1)="-1^Verify PSB MANAGER allocation" Q
"RTN","PSBML2",84,0)
 .S PSBXPTCH=1,PSBYY="",PSBGIVEN=0 F  S PSBYY=$O(^PSB(53.79,+PSBIEN,.9,PSBYY),-1) Q:'PSBYY  Q:(+$G(RESULTS(0))<0)  Q:PSBGIVEN  S PSBXDAT=$G(^(PSBYY,0))  D
"RTN","PSBML2",85,0)
 ..;PSB*3*45 Should be checking if action status changed to GIVEN
"RTN","PSBML2",86,0)
 ..I $P(PSBXDAT,"^",4)["GIVEN" D
"RTN","PSBML2",87,0)
 ...S PSBXDATE=$P(^PSB(53.79,+PSBIEN,.9,PSBYY,0),U)
"RTN","PSBML2",88,0)
 ...S PSBXORN=$$GET1^DIQ(53.79,+PSBIEN,.11,"I")
"RTN","PSBML2",89,0)
 ...S PSBYX=(PSBYY-2) I (PSBYX)>0 I ^PSB(53.79,+PSBIEN,.9,PSBYX,0)["ACTION DATE/TIME '" S PSBXDATE=$P(^PSB(53.79,+PSBIEN,.9,PSBYX,0),"'",2),X=$P(PSBXDATE,"@"),%DT="" D ^%DT S PSBXDATE=Y_"."_$TR($P(PSBXDATE,"@",2),":")
"RTN","PSBML2",90,0)
 ...S PSBXDT="" F  S PSBXDT=$O(^PSB(53.79,"AORDX",PSBXDFN,PSBXORN,PSBXDT)) Q:PSBXDT=""  D  Q:+$G(RESULTS(1))<0
"RTN","PSBML2",91,0)
 ....S PSBYZ="" F  S PSBYZ=$O(^PSB(53.79,"AORDX",PSBXDFN,PSBXORN,PSBXDT,PSBYZ)) Q:'PSBYZ  I ($$GET1^DIQ(53.79,PSBYZ,.09,"I")="G"),(PSBYZ'=+PSBIEN) S RESULTS(0)=1,RESULTS(1)="-1^Cannot UNDO! Order has GIVEN patch" Q
"RTN","PSBML2",92,0)
 ...I '(+$G(RESULTS(1))<0) D  S PSBGIVEN=1
"RTN","PSBML2",93,0)
 ....;PSB*3*45 Added PSBLSTG for the last user who gave the patch. this will be logged in order to undo multiple removed.
"RTN","PSBML2",94,0)
 ....S PSBLSTG=$P(PSBXDAT,"^",2),I="" F  S I=$O(^PSB(53.79,+PSBIEN,.9,I),-1) Q:'I  I $P(^PSB(53.79,+PSBIEN,.9,I,0),"^",4)["GIVEN" D  Q
"RTN","PSBML2",95,0)
 .....S PSBLSTG=$S($P($G(PSBXDAT),"^",5):$P(PSBXDAT,"^",5),1:$P(PSBXDAT,"^",2))
"RTN","PSBML2",96,0)
 ....D VAL^PSBML(53.79,PSBIEN,.06,PSBXDATE),VAL^PSBML(53.79,PSBIEN,.07,"`"_PSBLSTG),VAL^PSBML(53.79,PSBIEN,.09,"G") K PSBLSTG
"RTN","PSBML2",97,0)
 ..D:('(+$G(RESULTS(1))<0))&('PSBGIVEN)&($G(PSBXPTCH))&(PSBYY'>1)
"RTN","PSBML2",98,0)
 ...S PSBXDATE=$P(^PSB(53.79,+PSBIEN,.9,PSBYY,0),"'",2),X=$P(PSBXDATE,"@"),%DT="" D ^%DT S PSBXDATE=Y_"."_$TR($P(PSBXDATE,"@",2),":")
"RTN","PSBML2",99,0)
 ...D VAL^PSBML(53.79,PSBIEN,.06,PSBXDATE),VAL^PSBML(53.79,PSBIEN,.07,"`"_$$GET1^DIQ(53.79,+PSBIEN,.07,"I")),VAL^PSBML(53.79,PSBIEN,.09,"G") S PSBGIVEN=1
"RTN","PSBML2",100,0)
 Q:(+$G(RESULTS(1))<0)
"RTN","PSBML2",101,0)
 I PSBEDTFL,$G(PSBGIVEN),PSBXPTCH S PSBREC(0)="G",PSBUNTSG=$P(PSBREC(8),U,4) D VAL^PSBML(53.795,(1_","_PSBIEN),.03,$S(PSBUNTSG'=0:PSBUNTSG,1:1)) K PSBXPTCH
"RTN","PSBML2",102,0)
 ;Set or Del Derm/Inj site fields  *83
"RTN","PSBML2",103,0)
 I PSBREC(0)="N",PSBREC(1)["Undo Given" D    ;Del site, Undo Give
"RTN","PSBML2",104,0)
 .D VAL^PSBML(53.79,PSBIEN,.16,"@")
"RTN","PSBML2",105,0)
 .D VAL^PSBML(53.79,PSBIEN,.18,"@")
"RTN","PSBML2",106,0)
 I PSBREC(0)="G",$G(PSBREC(2))]"" D          ;Set site
"RTN","PSBML2",107,0)
 .N SITETXT,SITECD
"RTN","PSBML2",108,0)
 .S SITETXT=$P(PSBREC(2),"|",1),SITECD=$P(PSBREC(2),"|",2)
"RTN","PSBML2",109,0)
 .I SITECD="D" D
"RTN","PSBML2",110,0)
 ..D VAL^PSBML(53.79,PSBIEN,.18,SITETXT)       ;Dermal site
"RTN","PSBML2",111,0)
 .E  D
"RTN","PSBML2",112,0)
 ..D VAL^PSBML(53.79,PSBIEN,.16,SITETXT)       ;Inject site
"RTN","PSBML2",113,0)
 .;
"RTN","PSBML2",114,0)
 S PSBOLDUZ=$P(^PSB(53.79,+PSBIEN,0),U,7),PSBOLSTS=$P(^PSB(53.79,+PSBIEN,0),U,9)
"RTN","PSBML2",115,0)
 ;
"RTN","PSBML2",116,0)
 ;DD/SOL/ADD validate/load array logic begins
"RTN","PSBML2",117,0)
 I $G(PSBREC(PSBRECNO))]"" D
"RTN","PSBML2",118,0)
 .I PSBREC(0)="G"!(PSBREC(0)="I")!(PSBREC(0)="H")!(PSBREC(0)="R")!(PSBREC(0)="M") D  ; Only if gvn or infus
"RTN","PSBML2",119,0)
 ..Q:(PSBEDTFL)&('$G(PSBCHNG))
"RTN","PSBML2",120,0)
 ..F PSBCNT=PSBRECNO:1 Q:'$D(PSBREC(PSBCNT))  D
"RTN","PSBML2",121,0)
 ...S Y=$P(PSBREC(PSBCNT),U)
"RTN","PSBML2",122,0)
 ...S PSBDD=$S(Y="DD":53.795,Y="ADD":53.796,Y="SOL":53.797,1:0)
"RTN","PSBML2",123,0)
 ...Q:'PSBDD
"RTN","PSBML2",124,0)
 ...I $G(PSBCHNG) D
"RTN","PSBML2",125,0)
 ....I $D(PSBFIND(PSBCNT)) S PSBIENS=$QS($Q(PSBFIND(PSBCNT)),2)_","_PSBIEN
"RTN","PSBML2",126,0)
 ....I '$D(PSBFIND(PSBCNT)) S PSBIENS="+1,"_PSBIEN
"RTN","PSBML2",127,0)
 ....D VAL^PSBML(PSBDD,PSBIENS,.01,"`"_$P(PSBREC(PSBCNT),U,2))
"RTN","PSBML2",128,0)
 ....D:PSBDD=53.795 VAL^PSBML(PSBDD,PSBIENS,.02,$P(PSBREC(PSBCNT),U,3))
"RTN","PSBML2",129,0)
 ....I (PSBDD=53.796!(PSBDD=53.797))&($P(PSBREC(PSBCNT),U,4)) D VAL^PSBML(PSBDD,PSBIENS,.02,$P(PSBREC(PSBCNT),U,4)) ;Store units in Units ordered field, PSB*3*72
"RTN","PSBML2",130,0)
 ....D:PSBREC(0)="G"!(PSBREC(0)="I") VAL^PSBML(PSBDD,PSBIENS,.03,$P(PSBREC(PSBCNT),U,4)) ;only store units given when infusing or given, PSB*3*72
"RTN","PSBML2",131,0)
 ....D:PSBDD=53.795 VAL^PSBML(PSBDD,PSBIENS,.04,$P(PSBREC(PSBCNT),U,5))
"RTN","PSBML2",132,0)
 ....D VAL^PSBML(PSBDD,PSBIENS,.05,$P(PSBREC(PSBCNT),U,6))     ;HR *70
"RTN","PSBML2",133,0)
 ....D:PSBDD=53.795 VAL^PSBML(PSBDD,PSBIENS,.06,$P(PSBREC(PSBCNT),U,7))    ;MRR *83
"RTN","PSBML2",134,0)
 .I ('PSBEDTFL)!((PSBREC(0)'="G")&($$GET1^DIQ(53.79,PSBIEN,.09,"I")="G")) D
"RTN","PSBML2",135,0)
 ..S (PSBDCNT,PSBACNT,PSBSCNT)=0,PSBADD=3 F PSBCNT=PSBRECNO:1 Q:'$D(PSBREC(PSBCNT))  D
"RTN","PSBML2",136,0)
 ...S Y=$P(PSBREC(PSBCNT),U)
"RTN","PSBML2",137,0)
 ...S PSBDD=$S(Y="DD":53.795,Y="ADD":53.796,Y="SOL":53.797,1:0)
"RTN","PSBML2",138,0)
 ...Q:'PSBDD
"RTN","PSBML2",139,0)
 ...S @("PSB"_$E(Y)_"CNT")=@("PSB"_$E(Y)_"CNT")+1
"RTN","PSBML2",140,0)
 ...S PSBIENS=(@("PSB"_$E(Y)_"CNT"))_","_PSBIEN
"RTN","PSBML2",141,0)
 ...I '$$GET1^DIQ(PSBDD,PSBIENS,.01,"I") S PSBIENS="+"_PSBADD_","_PSBIEN,PSBADD=PSBADD+1
"RTN","PSBML2",142,0)
 ...D VAL^PSBML(PSBDD,PSBIENS,.01,"`"_$P(PSBREC(PSBCNT),U,2))
"RTN","PSBML2",143,0)
 ...D:PSBDD=53.795 VAL^PSBML(PSBDD,PSBIENS,.02,$P(PSBREC(PSBCNT),U,3))
"RTN","PSBML2",144,0)
 ...I (PSBDD=53.796!(PSBDD=53.797))&($P(PSBREC(PSBCNT),U,4)) D VAL^PSBML(PSBDD,PSBIENS,.02,$P(PSBREC(PSBCNT),U,4)) ;Store units in Units ordered field, PSB*3*72
"RTN","PSBML2",145,0)
 ...D:PSBDD=53.795 VAL^PSBML(PSBDD,PSBIENS,.03,$S(PSBREC(0)="G"!(PSBREC(0)="RM"):$P(PSBREC(PSBCNT),U,4),1:0)),VAL^PSBML(PSBDD,PSBIENS,.04,$P(PSBREC(PSBCNT),U,5))
"RTN","PSBML2",146,0)
 ...I PSBDD=53.796!(PSBDD=53.797),PSBREC(0)="G" D VAL^PSBML(PSBDD,PSBIENS,.03,$P(PSBREC(PSBCNT),U,4))
"RTN","PSBML2",147,0)
 I ($G(PSBREC(PSBRECNO))']""),(PSBREC(0)="N"),($$GET1^DIQ(53.79,PSBIEN,.09,"I")="G") D
"RTN","PSBML2",148,0)
 .S PSBX=0 F  S PSBX=$O(^PSB(53.79,+PSBIEN,.5,PSBX)) Q:'+PSBX  D VAL^PSBML(53.795,(PSBX_","_PSBIEN),.03,0)
"RTN","PSBML2",149,0)
 ;end DD validate/load logic
"RTN","PSBML2",150,0)
 ;
"RTN","PSBML2",151,0)
 ;Witness logic give & undo?  *70
"RTN","PSBML2",152,0)
 ; give
"RTN","PSBML2",153,0)
 I PSBWITHR>1,PSBREC(0)="G" D
"RTN","PSBML2",154,0)
 .D:PSBWITN VAL^PSBML(53.79,PSBIEN,.28,PSBNOW)        ;Witness dt/time
"RTN","PSBML2",155,0)
 .D:PSBWITN VAL^PSBML(53.79,PSBIEN,.29,"`"_PSBWITN)   ;Witness duz
"RTN","PSBML2",156,0)
 .D:PSBWITCM]"" VAL^PSBML(53.79,PSBIEN,.31,PSBWITCM)  ;Witness comment
"RTN","PSBML2",157,0)
 .D VAL^PSBML(53.79,PSBIEN,.32,PSBWITHR)          ;Witness HR ord code
"RTN","PSBML2",158,0)
 .D VAL^PSBML(53.79,PSBIEN,.33,PSBWITFL)          ;Witnessed? flag
"RTN","PSBML2",159,0)
 ;
"RTN","PSBML2",160,0)
 ; undo give
"RTN","PSBML2",161,0)
 I PSBWITHR>1,PSBREC(0)="N" D      ;Undo Give of Witness fields    *70
"RTN","PSBML2",162,0)
 .N WTDT,WTNS,WTCM,WTHR,WTFL       ;only delete if currently has data
"RTN","PSBML2",163,0)
 .S WTDT=$$GET1^DIQ(53.79,+PSBIEN,.28,"I")
"RTN","PSBML2",164,0)
 .S WTNS=$$GET1^DIQ(53.79,+PSBIEN,.29,"I")
"RTN","PSBML2",165,0)
 .S WTCM=$$GET1^DIQ(53.79,+PSBIEN,.31,"I")
"RTN","PSBML2",166,0)
 .S WTHR=$$GET1^DIQ(53.79,+PSBIEN,.32,"I")
"RTN","PSBML2",167,0)
 .S WTFL=$$GET1^DIQ(53.79,+PSBIEN,.33,"I")
"RTN","PSBML2",168,0)
 .D:WTDT VAL^PSBML(53.79,PSBIEN,.28,"@")
"RTN","PSBML2",169,0)
 .D:WTNS VAL^PSBML(53.79,PSBIEN,.29,"@")
"RTN","PSBML2",170,0)
 .D:WTCM]"" VAL^PSBML(53.79,PSBIEN,.31,"@")
"RTN","PSBML2",171,0)
 .D:WTHR>1 VAL^PSBML(53.79,PSBIEN,.32,"@")
"RTN","PSBML2",172,0)
 .D:WTFL]"" VAL^PSBML(53.79,PSBIEN,.33,"@")
"RTN","PSBML2",173,0)
 ;
"RTN","PSBML2",174,0)
 ;file 53.7 logic
"RTN","PSBML2",175,0)
 D FILEIT^PSBML
"RTN","PSBML2",176,0)
 ;
"RTN","PSBML2",177,0)
 ;filing success and update PSJ filer logic
"RTN","PSBML2",178,0)
 I $P($G(RESULTS(1)),U,1)=1 D
"RTN","PSBML2",179,0)
 .S PSBUID=$P(^PSB(53.79,+PSBIEN,0),U,10) I PSBUID]"",PSBUID'["WS" D
"RTN","PSBML2",180,0)
 ..S PSBTS=PSBREC(0)
"RTN","PSBML2",181,0)
 ..S PSBON=$P(^PSB(53.79,+PSBIEN,.1),U,1)
"RTN","PSBML2",182,0)
 ..S PSBDFN=$P(^PSB(53.79,+PSBIEN,0),U,1)
"RTN","PSBML2",183,0)
 ..I PSBREC(0)="N" S PSBTS="" D
"RTN","PSBML2",184,0)
 ...M PSBAR=^PSB(53.79,+PSBIEN,.9)
"RTN","PSBML2",185,0)
 ...S (PSBDN,X)="" F  S X=$O(PSBAR(X),-1) Q:X=0!(PSBDN=1)  D
"RTN","PSBML2",186,0)
 ....I PSBAR(X,0)["ACTION STATUS",PSBAR(X,0)["deleted",PSBAR(X,0)'["GIVEN" D
"RTN","PSBML2",187,0)
 .....S PSBTS=$P($P(PSBAR(X,0),"'",2),"'",1)
"RTN","PSBML2",188,0)
 .....S PSBTS=$S(PSBTS="HELD":"H",PSBTS="REFUSED":"R",PSBTS="REMOVED":"RM",PSBTS="MISSING":"M",1:""),PSBDN=1
"RTN","PSBML2",189,0)
 ...D VAL^PSBML(53.79,PSBIEN,.26,"") D CLEAN^DILF,UPDATE^DIE("","PSBFDA","PSBIEN","PSBMSG")
"RTN","PSBML2",190,0)
 ..D EN^PSJBCMA3(PSBDFN,+PSBON,PSBUID,PSBTS,PSBNOW)
"RTN","PSBML2",191,0)
 I ($$GET1^DIQ(53.79,+PSBIEN,.12,"I")="O")&($$GET1^DIQ(53.79,+PSBIEN,.09,"I")="N") S PSBDFN=$$GET1^DIQ(53.79,+PSBIEN,.01,"I") D ENR^PSJBCMA4(PSBDFN,$$GET1^DIQ(53.79,+PSBIEN,.11))
"RTN","PSBML2",192,0)
 I ($$GET1^DIQ(53.79,+PSBIEN,.12,"I")="O")&($$GET1^DIQ(53.79,+PSBIEN,.09,"I")="G") S PSBDFN=$$GET1^DIQ(53.79,+PSBIEN,.01,"I") D ENE^PSJBCMA4(PSBDFN,$$GET1^DIQ(53.79,+PSBIEN,.11))
"RTN","PSBML2",193,0)
 I (PSBREC(0)="N")&($$GET1^DIQ(53.79,+PSBIEN,.09,"I")="N") D NGRESET^PSBML3(.PSBREC,PSBIEN)
"RTN","PSBML2",194,0)
 Q
"RTN","PSBML3")
0^44^B60270297^B46997085
"RTN","PSBML3",1,0)
PSBML3 ;BIRMINGHAM/TEJ-BCMA UTILITY TO EDIT THE PSB MED LOG ;03/06/16 3:06pm
"RTN","PSBML3",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,13,39,41,70,83**;Mar 2004;Build 89
"RTN","PSBML3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBML3",4,0)
 ;
"RTN","PSBML3",5,0)
 ; Reference/IA
"RTN","PSBML3",6,0)
 ; $$GET1^DIQ/2056
"RTN","PSBML3",7,0)
 ;
"RTN","PSBML3",8,0)
 ;*70 - fix Tag CHANGE to compare the DD, Add, & Sol multiples for
"RTN","PSBML3",9,0)
 ;      only the first 5 pieces and ignore the HR flag new 6th piece.
"RTN","PSBML3",10,0)
 ;        example of pieces 1-5: "DD^363^1^3^TAB"
"RTN","PSBML3",11,0)
 ;      Edit Medlog function in BCMA uses this compare to control
"RTN","PSBML3",12,0)
 ;      Audit entries for the DD, Add, & Sol multiples & Edit Medlog
"RTN","PSBML3",13,0)
 ;      updates.
"RTN","PSBML3",14,0)
 ;*83 - check if body site is Inj or Derm & compare to correct field
"RTN","PSBML3",15,0)
 ;
"RTN","PSBML3",16,0)
APATCH ; Maintain "APATCH" index...
"RTN","PSBML3",17,0)
 I $G(PSBTRAN)["MEDPASS" D:$P(PSBREC(9),U)="UDTAB"  Q
"RTN","PSBML3",18,0)
 .S PSBX1=9,PSBQUT=0 F  S PSBX1=$O(PSBREC(PSBX1))  Q:PSBQUT  Q:'(+PSBX1)  D:$P(PSBREC(PSBX1),U)="DD"&($P(PSBREC(PSBX1),U,5)="PATCH")  Q:PSBQUT
"RTN","PSBML3",19,0)
 ..I $G(PSBOLSTS)="",PSBREC(3)="G" S PSB1="I $D(PSBIEN(1)) S ^PSB(53.79,""APATCH"","_$G(PSBREC(0))_","_$G(PSBNOW)_",+PSBIEN(1))="""""
"RTN","PSBML3",20,0)
 ..S PSBQUT=1
"RTN","PSBML3",21,0)
 S PSBX1=0 F  S PSBX1=$O(^PSB(53.79,+PSBIEN,.5,PSBX1)) Q:'(+PSBX1)  Q
"RTN","PSBML3",22,0)
 I $G(PSBTRAN)["UPDATE",(+PSBX1)'=0 D
"RTN","PSBML3",23,0)
 .S PSBX3=0 F  S PSBX3=$O(^PSB(53.79,+PSBIEN,.5,PSBX3)) Q:+PSBX3=0  I $P(^PSB(53.79,+PSBIEN,.5,PSBX3,0),U,4)="PATCH" D
"RTN","PSBML3",24,0)
 ..I PSBOLSTS="G",PSBREC(0)="N" S PSB1="K ^PSB(53.79,""APATCH"","_$P(^PSB(53.79,+PSBIEN,0),U)_","_$P(^PSB(53.79,+PSBIEN,0),U,6)_","_+PSBIEN_")"
"RTN","PSBML3",25,0)
 ..I PSBFDA(53.79,+PSBIEN_",",.09)="G" S PSB1="S ^PSB(53.79,""APATCH"","_$P(^PSB(53.79,+PSBIEN,0),U)_","_$G(PSBFDA(53.79,+PSBIEN_",",.06))_","_+PSBIEN_")"_"="""""
"RTN","PSBML3",26,0)
 I $G(PSBTRAN)["EDIT",(+PSBX1)'=0 D
"RTN","PSBML3",27,0)
 .S PSBX3=0 F  S PSBX3=$O(^PSB(53.79,+PSBIEN,.5,PSBX3)) Q:+PSBX3=0  I $P(^PSB(53.79,+PSBIEN,.5,PSBX3,0),U,4)="PATCH",((PSBREC(0)="G")!(PSBREC(0)="RM")) D
"RTN","PSBML3",28,0)
 ..S PSB1="S ^PSB(53.79,""APATCH"","_$P(^PSB(53.79,+PSBIEN,0),U)_","_$G(PSBFDA(53.79,+PSBIEN_",",.06))_","_+PSBIEN_")"_"="""""
"RTN","PSBML3",29,0)
 ..I $D(PSBREC(4,0)) S PSB2="K ^PSB(53.79,""APATCH"","_$P(^PSB(53.79,+PSBIEN,0),U)_","_$G(PSBREC(4,0))_","_+PSBIEN_")"
"RTN","PSBML3",30,0)
 Q
"RTN","PSBML3",31,0)
 ;
"RTN","PSBML3",32,0)
CHANGE(PSBREC,PSBEDIEN) ;Determine an order edit
"RTN","PSBML3",33,0)
 S PSBCHNG=0
"RTN","PSBML3",34,0)
 K PSBORDMD,PSBDDX
"RTN","PSBML3",35,0)
 I PSBREC(0)'=$$GET1^DIQ(53.79,PSBEDIEN,.09,"I") S PSBREC(0,0)=1,PSBCHNG=1
"RTN","PSBML3",36,0)
 D:PSBREC(2)'["|D"                                                ;*83
"RTN","PSBML3",37,0)
 .I $P(PSBREC(2),"|")'=$$GET1^DIQ(53.79,PSBEDIEN,.16,"I") S PSBREC(2,0)=1,PSBCHNG=1
"RTN","PSBML3",38,0)
 D:PSBREC(2)["|D"                                                 ;*83
"RTN","PSBML3",39,0)
 .I $P(PSBREC(2),"|")'=$$GET1^DIQ(53.79,PSBEDIEN,.18,"I") S PSBREC(2,0)=1,PSBCHNG=1
"RTN","PSBML3",40,0)
 I PSBREC(4)'=$$GET1^DIQ(53.79,PSBEDIEN,.06,"I") S PSBREC(4,0)=$$GET1^DIQ(53.79,PSBEDIEN,.06,"I"),PSBCHNG=1
"RTN","PSBML3",41,0)
 I PSBREC(5)'=$$GET1^DIQ(53.79,PSBEDIEN,.21) S PSBREC(5,0)=1,PSBCHNG=1
"RTN","PSBML3",42,0)
 I PSBREC(6)'=$$GET1^DIQ(53.79,PSBEDIEN,.22) S PSBREC(6,0)=1,PSBCHNG=1
"RTN","PSBML3",43,0)
 K PSBFIND,PSBFOUN,PSBREC2
"RTN","PSBML3",44,0)
 F PSBRECNX=8:1 Q:'$D(PSBREC(PSBRECNX))  S PSBDPTR=$P(PSBREC(PSBRECNX),U,2),PSBORDMD(PSBRECNX,PSBDPTR,0)="ADDED"
"RTN","PSBML3",45,0)
 F PSBDDX=.5,.6,.7 D:$D(^PSB(53.79,+PSBEDIEN,PSBDDX,"B"))
"RTN","PSBML3",46,0)
 .S PSBDPTR="" F  S PSBDPTR=$O(^PSB(53.79,+PSBEDIEN,PSBDDX,"B",PSBDPTR)) Q:+PSBDPTR'>0  D
"RTN","PSBML3",47,0)
 ..S PSBXX=0 F  S PSBXX=$O(^PSB(53.79,+PSBEDIEN,PSBDDX,"B",PSBDPTR,PSBXX)) Q:+PSBXX'>0  D  Q:'$$FINDDD^PSBML3(PSBDDX,PSBDPTR)
"RTN","PSBML3",48,0)
 ...I '$D(PSBFOUN(PSBDDX,PSBXX)) F PSBRECNX=8:1 Q:'$D(PSBREC(PSBRECNX))  D:$D(PSBORDMD(PSBRECNX))  Q:$D(PSBFOUN(PSBDDX,PSBXX))
"RTN","PSBML3",49,0)
 ....S PSBDFDA=$P(PSBREC(PSBRECNX),U) Q:$S(PSBDFDA="DD":.5,PSBDFDA="ADD":.6,PSBDFDA="SOL":.7)'=PSBDDX
"RTN","PSBML3",50,0)
 ....S PSBDATAX=PSBDFDA_"^"_$G(^PSB(53.79,+PSBEDIEN,PSBDDX,PSBXX,0))_$S(PSBDDX'=.5:"^",1:"")
"RTN","PSBML3",51,0)
 ....S:$P(PSBDATAX,U,3)?1"."1.N $P(PSBDATAX,U,3)=0_+$P(PSBDATAX,U,3)
"RTN","PSBML3",52,0)
 ....S:$P(PSBDATAX,U,4)?1"."1.N $P(PSBDATAX,U,4)=0_+$P(PSBDATAX,U,4)
"RTN","PSBML3",53,0)
 ....I $P(PSBDATAX,U,1,5)=$P(PSBREC(PSBRECNX),U,1,5) K PSBORDMD(PSBRECNX),PSBREC2(PSBRECNX) S (PSBFIND(PSBRECNX,PSBXX),PSBFOUN(PSBDDX,PSBXX))=1 Q   ;only compare 1-5 pieces for a change *83
"RTN","PSBML3",54,0)
 ....S PSBUNTOR=$P(PSBDATAX,U,3),PSBUNTGN=$P(PSBDATAX,U,4),PSBUNTAD=$P(PSBDATAX,U,5)
"RTN","PSBML3",55,0)
 ....I PSBREC(PSBRECNX)[(PSBDFDA_"^"_PSBDPTR_"^"_PSBUNTOR_"^") S PSBREC2(PSBRECNX)=PSBREC(PSBRECNX)
"RTN","PSBML3",56,0)
 D:$D(PSBREC2)
"RTN","PSBML3",57,0)
 .F PSBDDX=.5,.6,.7 D:$D(^PSB(53.79,+PSBEDIEN,PSBDDX,"B"))
"RTN","PSBML3",58,0)
 ..S PSBDPTR="" F  S PSBDPTR=$O(^PSB(53.79,+PSBEDIEN,PSBDDX,"B",PSBDPTR)) Q:+PSBDPTR'>0  D
"RTN","PSBML3",59,0)
 ...S PSBXX=0 F  S PSBXX=$O(^PSB(53.79,+PSBEDIEN,PSBDDX,"B",PSBDPTR,PSBXX)) Q:+PSBXX'>0  D
"RTN","PSBML3",60,0)
 ....S PSBREC2X=0 F  S PSBREC2X=$O(PSBREC2(PSBREC2X)) Q:PSBREC2X=""  D  Q:$G(PSBFOUN(PSBDDX,PSBXX))
"RTN","PSBML3",61,0)
 .....S PSBDFDA=$P(PSBREC(PSBREC2X),U) Q:$S(PSBDFDA="DD":.5,PSBDFDA="ADD":.6,PSBDFDA="SOL":.7)'=PSBDDX
"RTN","PSBML3",62,0)
 .....S PSBDATAX=PSBDFDA_"^"_$G(^PSB(53.79,+PSBEDIEN,PSBDDX,PSBXX,0))
"RTN","PSBML3",63,0)
 .....S:$P(PSBDATAX,U,3)?1"."1.N $P(PSBDATAX,U,3)=0_+$P(PSBDATAX,U,3)
"RTN","PSBML3",64,0)
 .....S:$P(PSBDATAX,U,4)?1"."1.N $P(PSBDATAX,U,4)=0_+$P(PSBDATAX,U,4)
"RTN","PSBML3",65,0)
 .....; *70 compare only first 5 pieces ignoring the new HR piece
"RTN","PSBML3",66,0)
 .....I $P(PSBDATAX,U,1,5)=$P(PSBREC(PSBREC2X),U,1,5) K PSBREC2(PSBREC2X),PSBORDMD(PSBREC2X) S (PSBFIND(PSBREC2X,PSBXX),PSBFOUN(PSBDDX,PSBXX))=1 Q
"RTN","PSBML3",67,0)
 .....S PSBUNTOR=$P(PSBDATAX,U,3),PSBUNTGN=$P(PSBDATAX,U,4),PSBUNTAD=$P(PSBDATAX,U,5)
"RTN","PSBML3",68,0)
 .....I PSBREC2(PSBREC2X)[(PSBDFDA_"^"_PSBDPTR_"^"_PSBUNTOR_"^") I '$D(PSBFOUN(PSBDDX,PSBXX)) S (PSBCHNG,PSBFIND(PSBREC2X,PSBXX),PSBFOUN(PSBDDX,PSBXX))=1 D  Q
"RTN","PSBML3",69,0)
 ......N PSBY,Y F Y=4,5 S PSBY=$P(PSBREC2(PSBREC2X),U,Y) S:PSBY'=$S(Y=4:PSBUNTGN,Y=5:PSBUNTAD) PSBORDMD(PSBREC2X,PSBDPTR,0)=""
"RTN","PSBML3",70,0)
 ; Modify FDA per Deleted DDs
"RTN","PSBML3",71,0)
 ;
"RTN","PSBML3",72,0)
 F PSBX=.5,.6,.7 S PSBXX="" F  Q:'$D(PSBORDMD(PSBX))  S PSBXX=$O(PSBORDMD(PSBX,PSBXX)) Q:$G(PSBXX)=""  D:PSBORDMD(PSBX,PSBXX,0)["DELETE"
"RTN","PSBML3",73,0)
 .S PSBDDX=$S(PSBX=.5:53.795,PSBX=.6:53.796,1:53.797)
"RTN","PSBML3",74,0)
 .S PSBIENX="^PSB(53.79,"_($G(PSBEDIEN))_($G(PSBX))_",""B"","_PSBXX_")"
"RTN","PSBML3",75,0)
 .S PSBIENX=$Q(@PSBIENX),PSBIENX=$QS(PSBIENX,6)_","_(+PSBEDIEN)
"RTN","PSBML3",76,0)
 .D:'$D(PSBFOUN(PSBDDX,+PSBIENX)) VAL^PSBML(PSBDDX,PSBIENX,.01,""),VAL^PSBML(PSBDDX,PSBIENX,.02,""),VAL^PSBML(PSBDDX,PSBIENX,.03,""),VAL^PSBML(PSBDDX,PSBIENX,.04,"")
"RTN","PSBML3",77,0)
 ;
"RTN","PSBML3",78,0)
 S:$D(PSBORDMD) PSBCHNG=1 K PSBREC2
"RTN","PSBML3",79,0)
 Q PSBCHNG
"RTN","PSBML3",80,0)
 ;
"RTN","PSBML3",81,0)
NGRESET(PSBREC,PSBREIEN) ;
"RTN","PSBML3",82,0)
 ;
"RTN","PSBML3",83,0)
 ; Acknowledged "UNDO" - reinstate previous status and state...
"RTN","PSBML3",84,0)
 ;
"RTN","PSBML3",85,0)
 I (PSBREC(0)="N")&($$GET1^DIQ(53.79,PSBREIEN,.09,"I")="N") D  I '$D(PSBQUITX)  S PSBREINT=$$GET1^DIQ(53.79,PSBREIEN,.05,"I")
"RTN","PSBML3",86,0)
 .S PSBRESET="NOT GIVEN",PSBX="B" K PSBQUITX,PSBREXDT,PSBREINT F  S PSBX=$O(^PSB(53.79,+PSBREIEN,.9,PSBX),-1) Q:PSBX'>0  D  Q:($G(PSBQUITX))!(PSBX'>0)
"RTN","PSBML3",87,0)
 ..I (^PSB(53.79,+PSBREIEN,.9,PSBX,0)'["ACTION STATUS Set to") Q
"RTN","PSBML3",88,0)
 ..I $P(^PSB(53.79,+PSBREIEN,.9,PSBX,0),U,4)=PSBRESET D  Q:$G(PSBQUITX)  Q:PSBX'>0
"RTN","PSBML3",89,0)
 ...S PSBREXDT=$P(^PSB(53.79,+PSBREIEN,.9,PSBX,0),U)
"RTN","PSBML3",90,0)
 ...F  S PSBX=$O(^PSB(53.79,+PSBREIEN,.9,PSBX),-1) Q:PSBX'>0  D  Q:$G(PSBQUITX)
"RTN","PSBML3",91,0)
 ....I (^PSB(53.79,+PSBREIEN,.9,PSBX,0)'["ACTION STATUS")!(^PSB(53.79,+PSBREIEN,.9,PSBX,0)'["deleted") Q
"RTN","PSBML3",92,0)
 ....I $P(^PSB(53.79,+PSBREIEN,.9,PSBX,0),"'",2)'="GIVEN" Q 
"RTN","PSBML3",93,0)
 ....F  S PSBX=$O(^PSB(53.79,+PSBREIEN,.9,PSBX),-1) Q:(PSBX'>0)!($G(PSBQUITX))  D  Q:$G(PSBQUIT)
"RTN","PSBML3",94,0)
 .....I (^PSB(53.79,+PSBREIEN,.9,PSBX,0)'["ACTION STATUS ")!(^PSB(53.79,+PSBREIEN,.9,PSBX,0)'["deleted") Q
"RTN","PSBML3",95,0)
 .....S PSBRESET=$P(^PSB(53.79,+PSBREIEN,.9,PSBX,0),"'",2) I (PSBRESET="GIVEN")!(PSBRESET="REMOVED") Q
"RTN","PSBML3",96,0)
 .....S PSBREXDT=$$GET1^DIQ(53.79,PSBREIEN,.04,"I"),PSBX=PSBX-2 I '$D(^PSB(53.79,+PSBREIEN,.9,PSBX,0)) S PSBQUIT=1 Q
"RTN","PSBML3",97,0)
 .....I (^PSB(53.79,+PSBREIEN,.9,PSBX,0)'["ACTION DATE/TIME")!(^PSB(53.79,+PSBREIEN,.9,PSBX,0)'["deleted") S PSBQUIT=1 Q
"RTN","PSBML3",98,0)
 .....S PSBREXDT=$P(^PSB(53.79,+PSBREIEN,.9,PSBX,0),"'",2),X=$P(PSBREXDT,"@"),%DT="" D ^%DT S PSBREXDT=Y_"."_$TR($P(PSBREXDT,"@",2),":"),PSBQUIT=1
"RTN","PSBML3",99,0)
 I $D(PSBREINT),$D(PSBREXDT),($D(PSBRESET)&($G(PSBRESET)'="GIVEN")) D
"RTN","PSBML3",100,0)
 .D VAL^PSBML(53.79,PSBREIEN,.06,PSBREXDT)
"RTN","PSBML3",101,0)
 .D VAL^PSBML(53.79,PSBREIEN,.09,PSBRESET)
"RTN","PSBML3",102,0)
 .D:$D(PSBREINT) VAL^PSBML(53.79,PSBREIEN,.07,"`"_PSBREINT)
"RTN","PSBML3",103,0)
 .D:'$G(PSBERR) FILEIT^PSBML
"RTN","PSBML3",104,0)
 K PSBXXX,PSBRESET,PSBREXDT,PSBREINT,PSBQUITX
"RTN","PSBML3",105,0)
 Q
"RTN","PSBML3",106,0)
 ;
"RTN","PSBML3",107,0)
FINDDD(PSBDDXX,PSBDDPTR) ;
"RTN","PSBML3",108,0)
 ;
"RTN","PSBML3",109,0)
 ;  Determine if edit - 'change' is deleted DDrug 
"RTN","PSBML3",110,0)
 ;
"RTN","PSBML3",111,0)
 S FINDDD=0
"RTN","PSBML3",112,0)
 I $D(PSBREC(8)) D
"RTN","PSBML3",113,0)
 .F PSBINDX=8:1 Q:'$D(PSBREC(PSBINDX))  S PSBCOMPX=$G(PSBREC(PSBINDX)) D  Q:FINDDD
"RTN","PSBML3",114,0)
 ..I ($S(PSBDDXX=.5:"DD",PSBDDXX=.6:"ADD",PSBDDXX=.7:"SOL",1:"")=$P(PSBCOMPX,U)),(PSBDDPTR=$P(PSBCOMPX,U,2)) S FINDDD=1
"RTN","PSBML3",115,0)
 I 'FINDDD S PSBORDMD(PSBDDXX,PSBDDPTR,0)="DELETED"
"RTN","PSBML3",116,0)
 Q FINDDD
"RTN","PSBML3",117,0)
 ;
"RTN","PSBML3",118,0)
AMRR  ; Maintain "AMRR" index...
"RTN","PSBML3",119,0)
 I $G(PSBTRAN)["UPDATE",(+PSBX1)'=0 D
"RTN","PSBML3",120,0)
 .S PSBX3=0 F  S PSBX3=$O(^PSB(53.79,+PSBIEN,.5,PSBX3)) Q:+PSBX3=0  I $P(^PSB(53.79,+PSBIEN,.5,PSBX3,0),U,6)>0 D
"RTN","PSBML3",121,0)
 ..I PSBOLSTS="G",PSBREC(0)="N" S PSB1A="K ^PSB(53.79,""AMRR"","_$P(^PSB(53.79,+PSBIEN,0),U)_","_$P(^PSB(53.79,+PSBIEN,0),U,6)_","_+PSBIEN_")"
"RTN","PSBML3",122,0)
 ..I PSBFDA(53.79,+PSBIEN_",",.09)="G" S PSB1A="S ^PSB(53.79,""AMRR"","_$P(^PSB(53.79,+PSBIEN,0),U)_","_$G(PSBFDA(53.79,+PSBIEN_",",.06))_","_+PSBIEN_")"_"="""""
"RTN","PSBML3",123,0)
 ;
"RTN","PSBML3",124,0)
 I $G(PSBTRAN)["EDIT",(+PSBX1)'=0 D
"RTN","PSBML3",125,0)
 .S PSBX3=0 F  S PSBX3=$O(^PSB(53.79,+PSBIEN,.5,PSBX3)) Q:+PSBX3=0  I $P(^PSB(53.79,+PSBIEN,.5,PSBX3,0),U,6)>0,((PSBREC(0)="G")!(PSBREC(0)="RM")) D
"RTN","PSBML3",126,0)
 ..S PSB1A="S ^PSB(53.79,""AMRR"","_$P(^PSB(53.79,+PSBIEN,0),U)_","_$G(PSBFDA(53.79,+PSBIEN_",",.06))_","_+PSBIEN_")"_"="""""
"RTN","PSBML3",127,0)
 ..I $D(PSBREC(4,0)) S PSB2A="K ^PSB(53.79,""AMRR"","_$P(^PSB(53.79,+PSBIEN,0),U)_","_$G(PSBREC(4,0))_","_+PSBIEN_")"
"RTN","PSBML3",128,0)
 Q
"RTN","PSBMLEN")
0^43^B87414949^B73011702
"RTN","PSBMLEN",1,0)
PSBMLEN ;BIRMINGHAM/EFC-BCMA MEDICATION LOG FUNCTIONS ;03/06/16 3:06pm
"RTN","PSBMLEN",2,0)
 ;;3.0;BAR CODE MED ADMIN;**4,9,19,75,83**;Mar 2004;Build 89
"RTN","PSBMLEN",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBMLEN",4,0)
 ;
"RTN","PSBMLEN",5,0)
 ; Reference/IA
"RTN","PSBMLEN",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBMLEN",7,0)
 ; ENE^PSJBCMA4/3416
"RTN","PSBMLEN",8,0)
 ; ENR^PSJBCMA4/3416
"RTN","PSBMLEN",9,0)
 ; ^XUSEC/10076
"RTN","PSBMLEN",10,0)
 ; ^DPT/10035
"RTN","PSBMLEN",11,0)
 ; $$GET^XPAR/2263
"RTN","PSBMLEN",12,0)
 ; HLP^DDSUTL/10150
"RTN","PSBMLEN",13,0)
 ;
"RTN","PSBMLEN",14,0)
 ;*83 - For MRR meds get remove string and print in 4 digit format.
"RTN","PSBMLEN",15,0)
 ;      Always print admin string in 4 digit format for all meds
"RTN","PSBMLEN",16,0)
EN ;
"RTN","PSBMLEN",17,0)
 N PSBCNT,PSBDT,PSBERR,PSBFORM,PSBMED,PSBNOW,PSBSCHT,PSBVARD,PSBX,PSBFREQ,PSBFLAG
"RTN","PSBMLEN",18,0)
 K ^TMP("PSB",$J),^TMP("PSJ",$J),PSBREC
"RTN","PSBMLEN",19,0)
 W @IOF,!,"Manual Medication Entry",!
"RTN","PSBMLEN",20,0)
 I $D(^XUSEC("PSB READ ONLY",DUZ)) W !,"This option is NOT AVAILABLE in PSB READ ONLY mode.",! Q
"RTN","PSBMLEN",21,0)
 W !,"Notice: No validation of medications is done with this option."
"RTN","PSBMLEN",22,0)
 W !,"Entries in the Med Log created with this option will reflect this"
"RTN","PSBMLEN",23,0)
 W !,"in the comments.",!!
"RTN","PSBMLEN",24,0)
 S DIC="^DPT(",DIC(0)="AEQM",DIC("A")="Select PATIENT: "
"RTN","PSBMLEN",25,0)
 D ^DIC K DIC Q:+Y<1
"RTN","PSBMLEN",26,0)
 S DFN=+Y
"RTN","PSBMLEN",27,0)
 D EN1
"RTN","PSBMLEN",28,0)
 K ^TMP("PSBO",$J)
"RTN","PSBMLEN",29,0)
 Q
"RTN","PSBMLEN",30,0)
 ;
"RTN","PSBMLEN",31,0)
EN1 ;
"RTN","PSBMLEN",32,0)
 S %DT="AEQ",%DT("B")="Today",%DT("A")="Select Orders From Date: "
"RTN","PSBMLEN",33,0)
 D ^%DT Q:+Y<1  S PSBDT=+Y
"RTN","PSBMLEN",34,0)
 W !,"Searching for Orders..."
"RTN","PSBMLEN",35,0)
 K ^TMP("PSJ",$J)
"RTN","PSBMLEN",36,0)
 D EN^PSJBCMA(DFN,PSBDT,"")
"RTN","PSBMLEN",37,0)
 Q:$G(^TMP("PSJ",$J,1,0))=-1
"RTN","PSBMLEN",38,0)
 S PSBERR=0
"RTN","PSBMLEN",39,0)
 D NOW^%DTC S PSBNOW=%
"RTN","PSBMLEN",40,0)
 F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:'PSBX  D
"RTN","PSBMLEN",41,0)
 .D CLEAN^PSBVT,PSJ^PSBVT(PSBX)
"RTN","PSBMLEN",42,0)
 .Q:PSBONX?.N1"P"  ; No Pending Yet
"RTN","PSBMLEN",43,0)
 .I "PCS"'[PSBIVT,PSBONX'["U" Q
"RTN","PSBMLEN",44,0)
 .I PSBIVT["S",PSBISYR'=1 Q  ;    allow intermittent syringe only
"RTN","PSBMLEN",45,0)
 .I PSBIVT["C",PSBCHEMT'="P",PSBISYR'=1 Q
"RTN","PSBMLEN",46,0)
 .I PSBIVT["C",PSBCHEMT="A" Q  ;     allow Chemo with intermittent syringe or Piggyback type only
"RTN","PSBMLEN",47,0)
 .K ^TMP("PSBO",$J)
"RTN","PSBMLEN",48,0)
 .S PSBOUT=0
"RTN","PSBMLEN",49,0)
 .D:PSBSCHT="C"
"RTN","PSBMLEN",50,0)
 ..;Calculate admin times based on Frequency from IPM
"RTN","PSBMLEN",51,0)
 ..S (PSBYES,PSBODD)=0
"RTN","PSBMLEN",52,0)
 ..S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1
"RTN","PSBMLEN",53,0)
 ..I PSBYES,PSBADST="" S PSBOUT=1 Q
"RTN","PSBMLEN",54,0)
 ..I PSBSCH?2.4N.E S PSBYES=1
"RTN","PSBMLEN",55,0)
 ..S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBMLEN",56,0)
 ..I PSBFREQ="O" S PSBYES=1
"RTN","PSBMLEN",57,0)
 ..I 'PSBYES,PSBADST="",PSBFREQ<1 S PSBOUT=1 Q
"RTN","PSBMLEN",58,0)
 ..I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBMLEN",59,0)
 ..I PSBODD,PSBADST'="" S PSBOUT=1 Q
"RTN","PSBMLEN",60,0)
 ..I PSBADST="" S PSBADST=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBDT)
"RTN","PSBMLEN",61,0)
 ..E  K ^TMP("PSB",$J,"GETADMIN") S ^TMP("PSB",$J,"GETADMIN",0)=PSBADST
"RTN","PSBMLEN",62,0)
 ..F PSBY=1:1 Q:$P(PSBADST,"-",PSBY)=""  I ($P(PSBADST,"-",PSBY)'?2N)&($P(PSBADST,"-",PSBY)'?4N) S PSBOUT=1 Q  ; Validate time(s)
"RTN","PSBMLEN",63,0)
 .Q:PSBOUT
"RTN","PSBMLEN",64,0)
 .Q:PSBOST>PSBNOW  ; Future Start Date
"RTN","PSBMLEN",65,0)
 .I PSBSCHT="O" S (PSBGVN,X,Y)="" D  I (PSBGVN)!(PSBNGF) K PSBGVN,X,Y Q
"RTN","PSBMLEN",66,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBMLEN",67,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  S:($P(^PSB(53.79,Y,.1),U)=PSBONX)&($P(^PSB(53.79,Y,0),U,9)'="N") PSBGVN=1,(X,Y)=0
"RTN","PSBMLEN",68,0)
 .I PSBSCHT="OC" S (PSBGVN,X,Y)="" D  I PSBGVN K PSBGVN,X,Y Q
"RTN","PSBMLEN",69,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBMLEN",70,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  S:($P(^PSB(53.79,Y,.1),U)=PSBONX)&($P(^PSB(53.79,Y,0),U,9)'="N") PSBGVN=1,(X,Y)=0
"RTN","PSBMLEN",71,0)
 ..S PSBGVN=PSBGVN&('$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL")) Q:PSBGVN
"RTN","PSBMLEN",72,0)
 ..I PSBOSTS'="A"&(PSBOSTS'="R")&(PSBOSTS'="O") S PSBGVN=1 Q  ;Add On Call pharmacy status, PSB*3*75
"RTN","PSBMLEN",73,0)
 ..I PSBNGF S PSBGVN=1 Q
"RTN","PSBMLEN",74,0)
 .S ^TMP("PSB",$J,PSBSCHT,PSBOITX,PSBX)=PSBONX_U_PSBADST_U_PSBOST_U_PSBOSP_U_PSBOSTS_U_PSBRMST_U_PSBDOA_U_PSBMRRFL_U_PSBOPRSP   ;*83
"RTN","PSBMLEN",75,0)
 I PSBERR W ! K DIR S DIR(0)="E" D ^DIR Q:Y="^"
"RTN","PSBMLEN",76,0)
 ;
"RTN","PSBMLEN",77,0)
EN2 ;
"RTN","PSBMLEN",78,0)
 W $$HDR() I '$D(^TMP("PSB",$J)) W !!?5,"No Med Orders Found!",!  Q
"RTN","PSBMLEN",79,0)
 S PSBSCHT="",PSBCNT=0
"RTN","PSBMLEN",80,0)
 F  S PSBSCHT=$O(^TMP("PSB",$J,PSBSCHT)) Q:PSBSCHT=""  D
"RTN","PSBMLEN",81,0)
 .W !  ; Line between order types
"RTN","PSBMLEN",82,0)
 .S PSBMED=""
"RTN","PSBMLEN",83,0)
 .F  S PSBMED=$O(^TMP("PSB",$J,PSBSCHT,PSBMED)) Q:PSBMED=""  D
"RTN","PSBMLEN",84,0)
 ..F PSBX=0:0 S PSBX=$O(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX)) Q:'PSBX  D
"RTN","PSBMLEN",85,0)
 ...I $Y>(IOSL-6) W ! K DIR S DIR(0)="E" D ^DIR W:Y $$HDR() I 'Y S PSBSCHT="Z" Q
"RTN","PSBMLEN",86,0)
 ...S PSBCNT=PSBCNT+1
"RTN","PSBMLEN",87,0)
 ...W !,$J(PSBCNT,2),". ",PSBSCHT,?7,PSBMED
"RTN","PSBMLEN",88,0)
 ...W ?40," (",$P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,5),")"
"RTN","PSBMLEN",89,0)
 ...S Y=$P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,3)
"RTN","PSBMLEN",90,0)
 ...W:$X>44 !
"RTN","PSBMLEN",91,0)
 ...W ?45,"Start: ",$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_(1700+$E(Y,1,3))_" "
"RTN","PSBMLEN",92,0)
 ...W $E($P(Y,".",2)_"0000",1,4)
"RTN","PSBMLEN",93,0)
 ...S Y=$P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,4)
"RTN","PSBMLEN",94,0)
 ...W !?45," Stop: ",$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_(1700+$E(Y,1,3))_" "
"RTN","PSBMLEN",95,0)
 ...W $E($P(Y,".",2)_"0000",1,4)
"RTN","PSBMLEN",96,0)
 ...;write adim times in 4 digit format   *83
"RTN","PSBMLEN",97,0)
 ...I $P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,2)]"" W !?7,"Admin Times:   ",$$CNVRT4^PSBUTL($P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,2),"-")
"RTN","PSBMLEN",98,0)
 ...;print 4 digit format Remove string for MRR's                  *83
"RTN","PSBMLEN",99,0)
 ...I ($P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,2)]"")!(PSBSCHT="O") D
"RTN","PSBMLEN",100,0)
 ....Q:'$P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,8)       ;not MRR  *83
"RTN","PSBMLEN",101,0)
 ....W !?7,"Removal Times: ",$$REMSTR^PSBUTL($P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,2),$P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,7),PSBSCHT,$P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,4),$P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,9))   ;*83
"RTN","PSBMLEN",102,0)
 ...W !
"RTN","PSBMLEN",103,0)
 ...S ^TMP("PSBO",$J,PSBCNT)=$P(^TMP("PSB",$J,PSBSCHT,PSBMED,PSBX),U,1)
"RTN","PSBMLEN",104,0)
 F  Q:$Y>(IOSL-4)  W !
"RTN","PSBMLEN",105,0)
 K DIR S DIR(0)="NO^1:"_PSBCNT_":0" D ^DIR
"RTN","PSBMLEN",106,0)
 I Y S Y=^TMP("PSBO",$J,Y) D NEW^PSBMLEN1(Y) G EN2
"RTN","PSBMLEN",107,0)
 D CLEAN^PSBVT                                                    ;*83
"RTN","PSBMLEN",108,0)
 Q
"RTN","PSBMLEN",109,0)
 ;
"RTN","PSBMLEN",110,0)
 ;
"RTN","PSBMLEN",111,0)
HDR() ;
"RTN","PSBMLEN",112,0)
 W @IOF,"Manual Medication Entry",!," #",?4,"Sc",?7,"Medication",?41,"St"
"RTN","PSBMLEN",113,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBMLEN",114,0)
 Q ""
"RTN","PSBMLEN",115,0)
 ;
"RTN","PSBMLEN",116,0)
EDIT    ; Edit Medication Log
"RTN","PSBMLEN",117,0)
 N PSBAUDIT,PSBXUIT,ONX                         ;*83
"RTN","PSBMLEN",118,0)
 S PSBAUDIT=1,PSBXUIT=""                        ;*83
"RTN","PSBMLEN",119,0)
 W:'$D(^XUSEC("PSB MANAGER",DUZ)) !!?5,"Notice: You are restricted from editing any entries other than",!,"        those that you have created.",!
"RTN","PSBMLEN",120,0)
 S DA=""
"RTN","PSBMLEN",121,0)
 S DIC="^DPT(",DIC(0)="AEQM",DIC("A")="Select Patient Name: "
"RTN","PSBMLEN",122,0)
 D ^DIC K DIC Q:+Y<1
"RTN","PSBMLEN",123,0)
 S DFN=+Y
"RTN","PSBMLEN",124,0)
 D EDIT1
"RTN","PSBMLEN",125,0)
 K PSBCNT,PSBDT,PSBIEN,PSBSRCH,PSBTMP,DA,DFN,DR,DDSFILE
"RTN","PSBMLEN",126,0)
 D CLEAN^PSBVT                                  ;*83
"RTN","PSBMLEN",127,0)
 G EDIT
"RTN","PSBMLEN",128,0)
 ;
"RTN","PSBMLEN",129,0)
EDIT1   ; 
"RTN","PSBMLEN",130,0)
 S %DT="AEQ",%DT("A")="Select Date to Begin Searching Back From: "
"RTN","PSBMLEN",131,0)
 W !! S %DT("B")="TODAY" D ^%DT Q:+Y<1  S PSBDT=Y
"RTN","PSBMLEN",132,0)
 F  D  Q:'PSBDT
"RTN","PSBMLEN",133,0)
 .W @IOF,!,"Searching Date " S Y=PSBDT D D^DIQ W Y
"RTN","PSBMLEN",134,0)
 .W !," #  Medication",?45,"St",?50,"D/T Given",?75,"Int"
"RTN","PSBMLEN",135,0)
 .W !,$TR($J("",IOM)," ","-")
"RTN","PSBMLEN",136,0)
 .S PSBSRCH=PSBDT+.9,PSBCNT=0
"RTN","PSBMLEN",137,0)
 .K PSBTMP
"RTN","PSBMLEN",138,0)
 .F  S PSBSRCH=$O(^PSB(53.79,"AEDT",DFN,PSBSRCH),-1) Q:'PSBSRCH!(PSBSRCH<PSBDT)  D
"RTN","PSBMLEN",139,0)
 ..S PSBIEN=""
"RTN","PSBMLEN",140,0)
 ..F  S PSBIEN=$O(^PSB(53.79,"AEDT",DFN,PSBSRCH,PSBIEN),-1) Q:'PSBIEN  D:$P(^PSB(53.79,PSBIEN,0),U,7)=DUZ!($D(^XUSEC("PSB MANAGER",DUZ)))
"RTN","PSBMLEN",141,0)
 ...Q:$P(^PSB(53.79,PSBIEN,0),U,9)="N"
"RTN","PSBMLEN",142,0)
 ...S PSBCNT=PSBCNT+1,PSBTMP(PSBCNT)=PSBIEN
"RTN","PSBMLEN",143,0)
 ...D:$Y>19
"RTN","PSBMLEN",144,0)
 ....W ! S DIR(0)="E" D ^DIR
"RTN","PSBMLEN",145,0)
 ....W @IOF,!,"Searching Date " S Y=PSBDT D D^DIQ W Y
"RTN","PSBMLEN",146,0)
 ....W !," #  Medication",?45,"St",?50,"D/T Given",?75,"Int"
"RTN","PSBMLEN",147,0)
 ....W !,$TR($J("",IOM)," ","-")
"RTN","PSBMLEN",148,0)
 ...W !,$J(PSBCNT,2),". "
"RTN","PSBMLEN",149,0)
 ...W ?5,$$GET1^DIQ(53.79,PSBIEN_",",.08)
"RTN","PSBMLEN",150,0)
 ...I $$GET1^DIQ(53.79,PSBIEN_",",.26) W ?5," ("_$$GET1^DIQ(53.79,PSBIEN_",",.26)_")"
"RTN","PSBMLEN",151,0)
 ...W ?45,$P(^PSB(53.79,PSBIEN,0),U,9)
"RTN","PSBMLEN",152,0)
 ...W ?50,$$GET1^DIQ(53.79,PSBIEN_",",.06)
"RTN","PSBMLEN",153,0)
 ...W ?75,$$GET1^DIQ(53.79,PSBIEN_",","ACTION BY:INITIAL")
"RTN","PSBMLEN",154,0)
 .I PSBCNT D  Q:Y
"RTN","PSBMLEN",155,0)
 ..W ! S DIR(0)="NO^1:"_PSBCNT_":0" D ^DIR
"RTN","PSBMLEN",156,0)
 ..I Y S DA=PSBTMP(Y),PSBDT=""
"RTN","PSBMLEN",157,0)
 .I 'PSBCNT W !!?5,"No Meds Found!"
"RTN","PSBMLEN",158,0)
 .S X1=PSBDT,X2=-1 D C^%DTC S (PSBDT,Y)=X D D^DIQ
"RTN","PSBMLEN",159,0)
 .W !!,"Continue With ",Y
"RTN","PSBMLEN",160,0)
 .S %=1 D YN^DICN I %'=1 S PSBDT=0
"RTN","PSBMLEN",161,0)
 I DA D
"RTN","PSBMLEN",162,0)
 .S PSBCOMP="",PSBDFN=$$GET1^DIQ(53.79,DA_",",.01,"I"),PSBONX=$$GET1^DIQ(53.79,DA_",",.11),PSBSTUS=$$GET1^DIQ(53.79,DA_",",.09,"I")
"RTN","PSBMLEN",163,0)
 .I PSBONX["V",PSBSTUS'="G" D  Q:PSBCOMP=1
"RTN","PSBMLEN",164,0)
 ..S PSBBAGN=$$GET1^DIQ(53.79,DA_",",.26) D INFUSING^PSBVDLU2 Q:PSBCOMP=0
"RTN","PSBMLEN",165,0)
 ..I $D(PSBPORA(PSBONX)) S X="" F  S X=$O(PSBPORA(PSBONX,X)),PSBBAG2=$P(PSBPORA(PSBONX,X),U,1),PSBBAGST=$P(PSBPORA(PSBONX,X),U,2) Q:PSBBAG2]""
"RTN","PSBMLEN",166,0)
 ..I PSBBAGN=PSBBAG2 S PSBCOMP=0 Q
"RTN","PSBMLEN",167,0)
 ..I (PSBBAGN'=PSBBAG2),PSBBAGST'="C" D 
"RTN","PSBMLEN",168,0)
 ...W !!,"Bag "_PSBBAG2_" is marked as ",$S(PSBBAGST="I":"Infusing",PSBBAGST="S":"Stopped",1:"unk")
"RTN","PSBMLEN",169,0)
 ...W !,"This bag must be completed before bag "_PSBBAGN_" can be edited.",!!
"RTN","PSBMLEN",170,0)
 ...K PSBORA,PSBBAGN,PSBBAG2,PSBBAGST
"RTN","PSBMLEN",171,0)
 .I PSBONX["V" D PSJ1^PSBVT(PSBDFN,PSBONX)
"RTN","PSBMLEN",172,0)
 .I PSBONX["U" S ONX=PSBONX                                       ;*83
"RTN","PSBMLEN",173,0)
 .S DDSFILE=53.79 D
"RTN","PSBMLEN",174,0)
 ..I PSBONX["U" S DR="[PSB MED LOG EDIT]" Q
"RTN","PSBMLEN",175,0)
 ..I PSBIVT["P" S DR="[PSB MED LOG EDIT]" Q
"RTN","PSBMLEN",176,0)
 ..I PSBIVT["S",PSBISYR=1  S DR="[PSB MED LOG EDIT]" Q
"RTN","PSBMLEN",177,0)
 ..I PSBIVT["C",PSBISYR=1  S DR="[PSB MED LOG EDIT]" Q
"RTN","PSBMLEN",178,0)
 ..I PSBIVT["C",PSBCHEMT="P"  S DR="[PSB MED LOG EDIT]" Q
"RTN","PSBMLEN",179,0)
 ..S DR="[PSB MED LOG EDIT IV]" Q
"RTN","PSBMLEN",180,0)
 .;New Site Chk                                                    *83
"RTN","PSBMLEN",181,0)
 .F  D  Q:'PSBXUIT                                                ;*83
"RTN","PSBMLEN",182,0)
 ..S PSBXUIT=""
"RTN","PSBMLEN",183,0)
 ..D ^DDS
"RTN","PSBMLEN",184,0)
 ..D PSJ1^PSBVT(DFN,ONX)
"RTN","PSBMLEN",185,0)
 ..D SITECHK^PSBMLEN1 I PSBXUIT W !,$C(7) K DIR S DIR(0)="E" D ^DIR
"RTN","PSBMLEN",186,0)
 .;
"RTN","PSBMLEN",187,0)
 .;One time order reinstated if not given
"RTN","PSBMLEN",188,0)
 .D:($P(^PSB(53.79,DA,.1),U,2)="O")&($P(^PSB(53.79,DA,0),U,9)="N") ENR^PSJBCMA4(DFN,$P(^PSB(53.79,DA,.1),U,1))
"RTN","PSBMLEN",189,0)
 .D:($P(^PSB(53.79,DA,.1),U,2)="O")&($P(^PSB(53.79,DA,0),U,9)="G") ENE^PSJBCMA4(DFN,$P(^PSB(53.79,DA,.1),U,1))
"RTN","PSBMLEN",190,0)
 Q
"RTN","PSBMLEN",191,0)
 ;
"RTN","PSBMLEN",192,0)
VALID ;
"RTN","PSBMLEN",193,0)
 I $G(PSBSTUS)="RM","^RM^"'[("^"_X_"^") W $C(7) S DDSERROR=1 D HLP^DDSUTL("Status of Removed cannot be changed.") Q
"RTN","PSBMLEN",194,0)
 I $G(PSBREC(7))'="Entry created with 'Manual Medication Entry' option." D  Q
"RTN","PSBMLEN",195,0)
 .I ($D(^PSB(53.79,DA,.5,1,0))),($P($G(^PSB(53.79,DA,.5,1,0)),U,4)="PATCH") D  Q
"RTN","PSBMLEN",196,0)
 ..I "^G^N^H^R^RM^"'[("^"_X_"^") W $C(7) S DDSERROR=1 D HLP^DDSUTL("Allowed status codes are Given, Not Given, Held, Refused and Removed.")
"RTN","PSBMLEN",197,0)
 .I "^G^N^H^R^"'[("^"_X_"^") W $C(7) S DDSERROR=1 D HLP^DDSUTL("Allowed status codes are Given, Not Given, Held, and Refused.")
"RTN","PSBMLEN",198,0)
 I "^G^H^R^"'[("^"_X_"^") W $C(7) S DDSERROR=1 D HLP^DDSUTL("Allowed status codes are Given, Held, and Refused.") Q
"RTN","PSBMLEN",199,0)
 ;
"RTN","PSBMLEN",200,0)
UNITS ;Check UNITS field for entry of PATCH
"RTN","PSBMLEN",201,0)
 I Y'="PATCH" Q
"RTN","PSBMLEN",202,0)
 S (DDSERROR,DDSBR)=1
"RTN","PSBMLEN",203,0)
 S @DDSREFT@("F"_DDP,DDSDA,DDSFLD,"D")=DDSOLD
"RTN","PSBMLEN",204,0)
 W $C(7)
"RTN","PSBMLEN",205,0)
 D HLP^DDSUTL("Field cannot be changed to PATCH")
"RTN","PSBMLEN",206,0)
 D REFRESH^DDSUTL
"RTN","PSBMLEN",207,0)
 Q
"RTN","PSBMLEN",208,0)
 ;
"RTN","PSBMLEN1")
0^42^B79293217^B53149065
"RTN","PSBMLEN1",1,0)
PSBMLEN1 ;BIRMINGHAM/EFC-BCMA MEDICATION LOG FUNCTIONS ;03/06/16 3:06pm
"RTN","PSBMLEN1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,4,9,11,13,28,50,83**;Mar 2004;Build 89
"RTN","PSBMLEN1",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBMLEN1",4,0)
 ;
"RTN","PSBMLEN1",5,0)
 ; Reference/IA
"RTN","PSBMLEN1",6,0)
 ; ENE^PSJBCMA4/3416
"RTN","PSBMLEN1",7,0)
 ;
"RTN","PSBMLEN1",8,0)
 ;*83 - move Disp Drug data to param 11 from 10 previously.  Param 10
"RTN","PSBMLEN1",9,0)
 ;      now in use for Remove time not used in this manual entry
"RTN","PSBMLEN1",10,0)
 ;    -  add Rem time string to display
"RTN","PSBMLEN1",11,0)
 ;    -  validation checks for proper use of Inj & derm site text
"RTN","PSBMLEN1",12,0)
 ;
"RTN","PSBMLEN1",13,0)
NEW(Y) ; Create the new entry
"RTN","PSBMLEN1",14,0)
 N PSBREC,PSB,PSBADST,PSBFREQ
"RTN","PSBMLEN1",15,0)
 S PSBMMEN=1
"RTN","PSBMLEN1",16,0)
 W @IOF D CLEAN^PSBVT,PSJ1^PSBVT(DFN,Y)
"RTN","PSBMLEN1",17,0)
 D NOW^%DTC
"RTN","PSBMLEN1",18,0)
 I PSBOSP<% D  Q:%'=1
"RTN","PSBMLEN1",19,0)
 .W @IOF,$C(7)
"RTN","PSBMLEN1",20,0)
 .W !,"NOTICE: This order is NOT currently active."
"RTN","PSBMLEN1",21,0)
 .W !,"        Are You Sure You Want To Continue"
"RTN","PSBMLEN1",22,0)
 .S %=2 D YN^DICN
"RTN","PSBMLEN1",23,0)
 I PSBADST="" S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX),PSBADST=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBDT)
"RTN","PSBMLEN1",24,0)
 E  K ^TMP("PSB",$J,"GETADMIN") S ^TMP("PSB",$J,"GETADMIN",0)=PSBADST
"RTN","PSBMLEN1",25,0)
 S PSBODSCH=0 I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODSCH=1
"RTN","PSBMLEN1",26,0)
 W !,"Order:         ",PSBONX
"RTN","PSBMLEN1",27,0)
 W !,"Medication:    ",PSBOITX
"RTN","PSBMLEN1",28,0)
 W !,"Dosage:        ",PSBDOSE
"RTN","PSBMLEN1",29,0)
 W !,"Schedule:      ",PSBSCH
"RTN","PSBMLEN1",30,0)
 W !,"Admin Times:   ",$S(PSBODSCH:"(Odd Sched.)",1:PSBADST)
"RTN","PSBMLEN1",31,0)
 D:PSBMRRFL>0                            ;add Removal times if MRR *83
"RTN","PSBMLEN1",32,0)
 .W !,"Removal Times: "
"RTN","PSBMLEN1",33,0)
 .W $S(PSBMRRFL=1:$$REMSTR^PSBUTL(PSBADST,PSBDOA,PSBSCHT,PSBOSP,PSBOPRSP),1:PSBRMST)
"RTN","PSBMLEN1",34,0)
 I $D(^XUSEC("PSB READ ONLY",DUZ)) D  Q
"RTN","PSBMLEN1",35,0)
 .W !!,"Medications CANNOT be administered while in PSB READ ONLY mode.",!! R "Press ENTER KEY to continue. ",PSBCNTNU:5
"RTN","PSBMLEN1",36,0)
 W !!,"Is this the correct Order" S %=1 D YN^DICN Q:%'=1
"RTN","PSBMLEN1",37,0)
 ;
"RTN","PSBMLEN1",38,0)
 ; PRN, One-Time, On Call orders
"RTN","PSBMLEN1",39,0)
 ;
"RTN","PSBMLEN1",40,0)
 I PSBSCHT'="C" D
"RTN","PSBMLEN1",41,0)
 .D VAL^PSBMLVAL(.PSB,DFN,+PSBONX,$E(PSBONX,$L(PSBONX)))
"RTN","PSBMLEN1",42,0)
 .I PSBSCHT="P",($D(PSB(1))) W !!,"Brief Administration History:  ",! S X=$O(PSB(" "),-1),X=$S(X>4:4,1:X) F I=1:1:X W !,?5,PSB(I)
"RTN","PSBMLEN1",43,0)
 .I $D(^XUSEC("PSB READ ONLY",DUZ)) W !,"This operation is NOT AVAILABLE in PSB READ ONLY mode.",! Q
"RTN","PSBMLEN1",44,0)
 .I ($D(^XUSEC("PSB STUDENT",DUZ))),('$D(^XUSEC("PSB INSTRUCTOR"))) W !,"This operation is NOT AVAILABLE in PSB READ ONLY mode.",! Q
"RTN","PSBMLEN1",45,0)
 .W !!,"Create an administration for this order" S %=1 D YN^DICN Q:%'=1
"RTN","PSBMLEN1",46,0)
 .I PSBSCHT="P" D  Q:Y=""!(Y["^")
"RTN","PSBMLEN1",47,0)
 ..K DIR S DIR(0)="FB^1:30",DIR("A")="PRN Reason (1-30 characters)"
"RTN","PSBMLEN1",48,0)
 ..W !!,"NOTICE: PRN Reason is Required for ALL PRN Entries",!
"RTN","PSBMLEN1",49,0)
 ..D ^DIR
"RTN","PSBMLEN1",50,0)
 ..I Y=""!(Y["^") W !!,"Sorry, Reason is required, No Entry Made!" Q
"RTN","PSBMLEN1",51,0)
 ..S PSBREC(6)=$P(Y,"|")
"RTN","PSBMLEN1",52,0)
 .; Build the form of dosage to CAP or TAB or null
"RTN","PSBMLEN1",53,0)
 .S:(PSBDOSEF'?1"CAP".E)&(PSBDOSEF'?1"TAB".E)&(PSBDOSEF'?1"PATCH".E) PSBDOSEF=""
"RTN","PSBMLEN1",54,0)
 .; Build the variable dose check #####-#####MG
"RTN","PSBMLEN1",55,0)
 .S PSBVARD=$S(PSBDOSE?1.5N1"-"1.5N.E:1,1:0)
"RTN","PSBMLEN1",56,0)
 .S PSBREC(0)=DFN
"RTN","PSBMLEN1",57,0)
 .S PSBREC(1)=PSBONX
"RTN","PSBMLEN1",58,0)
 .S PSBREC(2)=PSBSCHT
"RTN","PSBMLEN1",59,0)
 .S PSBREC(3)="G"
"RTN","PSBMLEN1",60,0)
 .S PSBREC(4)=PSBOIT
"RTN","PSBMLEN1",61,0)
 .S PSBREC(5)=""
"RTN","PSBMLEN1",62,0)
 .S PSBREC(7)="Entry created with 'Manual Medication Entry' option."
"RTN","PSBMLEN1",63,0)
 .S PSBREC(8)=""
"RTN","PSBMLEN1",64,0)
 .S PSBREC(9)=$S(PSBONX["U":"UDTAB",1:"PBTAB")
"RTN","PSBMLEN1",65,0)
 .S PSBREC(10)=""                   ;init Rmv dt/tim for One Times *83
"RTN","PSBMLEN1",66,0)
 .S PSBINDX=11                        ;Disp Drug moved to param 11 *83
"RTN","PSBMLEN1",67,0)
 .S X="" F  S X=$O(PSBDDA(X)) Q:X=""  D
"RTN","PSBMLEN1",68,0)
 ..S PSBREC(PSBINDX)=$P(PSBDDA(X),U,1,2)_U_$P(PSBDDA(X),U,4)_U_$P(PSBDDA(X),U,4)_U_PSBDOSEF_U_U_U_PSBMRRFL    ;add MRR flag 8th piece *83
"RTN","PSBMLEN1",69,0)
 ..S PSBINDX=PSBINDX+1
"RTN","PSBMLEN1",70,0)
 .S X="" F  S X=$O(PSBADA(X)) Q:X=""  S PSBREC(PSBINDX)=PSBADA(X),PSBINDX=PSBINDX+1
"RTN","PSBMLEN1",71,0)
 .S X="" F  S X=$O(PSBSOLA(X)) Q:X=""  S PSBREC(PSBINDX)=PSBSOLA(X),PSBINDX=PSBINDX+1
"RTN","PSBMLEN1",72,0)
 .D FILE
"RTN","PSBMLEN1",73,0)
 .I $G(DA),PSBREC(2)="O",$D(^PSB(53.79,DA)) I $P(^PSB(53.79,DA,0),U,9)="G" D ENE^PSJBCMA4(PSBREC(0),PSBREC(1))
"RTN","PSBMLEN1",74,0)
 ;
"RTN","PSBMLEN1",75,0)
 ; Continuous Meds
"RTN","PSBMLEN1",76,0)
 ;
"RTN","PSBMLEN1",77,0)
 I PSBSCHT="C" D
"RTN","PSBMLEN1",78,0)
 .W ! S %DT="AEQ",%DT("A")="Enter the DATE the medication was administered: "
"RTN","PSBMLEN1",79,0)
 .D NOW^%DTC S %DT(0)=(-1)*X,%DT("B")="" D ^%DT K %DT(0) Q:Y<1  S PSBDTX=Y D D^DIQ
"RTN","PSBMLEN1",80,0)
 .S:PSBODSCH PSBSCTMX=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBDTX)
"RTN","PSBMLEN1",81,0)
 .F PSBXX=0:1 Q:$G(^TMP("PSB",$J,"GETADMIN",PSBXX))=""  D
"RTN","PSBMLEN1",82,0)
 ..S X="",Y=$G(^TMP("PSB",$J,"GETADMIN",PSBXX))
"RTN","PSBMLEN1",83,0)
 ..F Z=1:1:$L(Y,"-") S X=X_$S(X]"":";",1:"")_Z_":"_$P(Y,"-",Z)
"RTN","PSBMLEN1",84,0)
 .I PSBODSCH,PSBSCTMX="" D  Q
"RTN","PSBMLEN1",85,0)
 ..W !!,"Order "_PSBONX_" is NOT SCHEDULED for administration on that entered date."
"RTN","PSBMLEN1",86,0)
 ..K DIR S DIR(0)="E^" D ^DIR
"RTN","PSBMLEN1",87,0)
 .K DIR S DIR(0)="S^"_X,DIR("A")="Select Administration Time"
"RTN","PSBMLEN1",88,0)
 .D ^DIR Q:Y<1
"RTN","PSBMLEN1",89,0)
 .S PSBDTX=+(PSBDTX_"."_Y(0))
"RTN","PSBMLEN1",90,0)
 .S Y=PSBDTX D D^DIQ
"RTN","PSBMLEN1",91,0)
 .W !!,"Create an administration for ",Y S %=1 D YN^DICN  Q:%'=1
"RTN","PSBMLEN1",92,0)
FORUM .; Build the form of dosage to CAP or TAB or null
"RTN","PSBMLEN1",93,0)
 .S PSBDOSEF=$G(PSBDOSEF)
"RTN","PSBMLEN1",94,0)
 .S:(PSBDOSEF'?1"CAP".E)&(PSBDOSEF'?1"TAB".E)&(PSBDOSEF'?1"PATCH".E) PSBDOSEF=""
"RTN","PSBMLEN1",95,0)
 .; Build the variable dose check #####-#####MG
"RTN","PSBMLEN1",96,0)
 .S PSBVARD=$S(PSBDOSE?1.5N1"-"1.5N.E:1,1:0)
"RTN","PSBMLEN1",97,0)
 .S PSBREC(0)=DFN
"RTN","PSBMLEN1",98,0)
 .S PSBREC(1)=PSBONX
"RTN","PSBMLEN1",99,0)
 .S PSBREC(2)=PSBSCHT
"RTN","PSBMLEN1",100,0)
 .S PSBREC(3)="G"
"RTN","PSBMLEN1",101,0)
 .S PSBREC(4)=PSBOIT
"RTN","PSBMLEN1",102,0)
 .S PSBREC(5)=PSBDTX
"RTN","PSBMLEN1",103,0)
 .S PSBREC(6)=""
"RTN","PSBMLEN1",104,0)
 .S PSBREC(7)="Entry created with 'Manual Medication Entry' option."
"RTN","PSBMLEN1",105,0)
 .S PSBREC(8)=""
"RTN","PSBMLEN1",106,0)
 .S PSBREC(9)=$S(PSBONX["U":"UDTAB",1:"PBTAB")
"RTN","PSBMLEN1",107,0)
 .;init Rmv dt/time for continuous meds *83
"RTN","PSBMLEN1",108,0)
 .S:PSBMRRFL PSBREC(10)=$S((PSBMRRFL&PSBDOA):$$FMADD^XLFDT(PSBDTX,,,PSBDOA),1:"")
"RTN","PSBMLEN1",109,0)
 .S PSBINDX=11                   ;Disp Drug moved to param 11      *83
"RTN","PSBMLEN1",110,0)
 .S X="" F  S X=$O(PSBDDA(X)) Q:X=""  D
"RTN","PSBMLEN1",111,0)
 ..S PSBREC(PSBINDX)=$P(PSBDDA(X),U,1,2)_U_$P(PSBDDA(X),U,4)_U_$P(PSBDDA(X),U,4)_U_PSBDOSEF_U_U_U_PSBMRRFL    ;add MRR flag 8th piece *83
"RTN","PSBMLEN1",112,0)
 ..S PSBINDX=PSBINDX+1
"RTN","PSBMLEN1",113,0)
 .S X="" F  S X=$O(PSBADA(X)) Q:X=""  S PSBREC(PSBINDX)=PSBADA(X),PSBINDX=PSBINDX+1
"RTN","PSBMLEN1",114,0)
 .S X="" F  S X=$O(PSBSOLA(X)) Q:X=""  S PSBREC(PSBINDX)=PSBSOLA(X),PSBINDX=PSBINDX+1
"RTN","PSBMLEN1",115,0)
 .D FILE
"RTN","PSBMLEN1",116,0)
 K ^TMP("PSB",$J)
"RTN","PSBMLEN1",117,0)
 Q
"RTN","PSBMLEN1",118,0)
 ;
"RTN","PSBMLEN1",119,0)
FILE ; Call the med log RPC to file it and DDS to edit it
"RTN","PSBMLEN1",120,0)
 N PSB,PSBSAVE,PSBAUDIT
"RTN","PSBMLEN1",121,0)
 D RPC^PSBML(.PSB,"+1^MEDPASS",.PSBREC)
"RTN","PSBMLEN1",122,0)
 I '$D(PSB) S PSB(0)=1,PSB(1)="-1^INCOMPLETE ENTRY^"_PSBINCX
"RTN","PSBMLEN1",123,0)
 I +PSB(1)<1 D  Q
"RTN","PSBMLEN1",124,0)
 .W @IOF,!,"Error(s) Creating Med Log Entry",!
"RTN","PSBMLEN1",125,0)
 .S X=$S(PSB(0)=1:0,1:1) F  S X=$O(PSB(X)) Q:X=""  W !,$J($S(X=1:X,1:X-1),2),". ",$S(X=1:$P(PSB(X),"^",2,3),1:PSB(X))
"RTN","PSBMLEN1",126,0)
 .W !!,"No Med Log Entry Created.",!!
"RTN","PSBMLEN1",127,0)
 .K DIR S DIR(0)="E" D ^DIR
"RTN","PSBMLEN1",128,0)
 S PSBSAVE=0 S:'$G(PSBMMEN) PSBAUDIT=1
"RTN","PSBMLEN1",129,0)
 S DA=$P(PSB(1),U,3),DDSFILE=53.79,DDSPARM="C"
"RTN","PSBMLEN1",130,0)
 I $P(^PSB(53.79,DA,.1),U,1)?.N1"U" S DR="[PSB NEW UD ENTRY]"
"RTN","PSBMLEN1",131,0)
 I $P(^PSB(53.79,DA,.1),U,1)?.N1"V" S DR="[PSB NEW IV ENTRY]"
"RTN","PSBMLEN1",132,0)
 D ^DDS
"RTN","PSBMLEN1",133,0)
 L +^PSB(53.79,DA):DILOCKTM I  L -^PSB(53.79,DA) I PSBSAVE'=1 D
"RTN","PSBMLEN1",134,0)
 .W !,"Incomplete Med Log Entry, Deleting...#",DA S A=^PSB(53.79,DA,0),DFN=$P(A,U,1),AADT=$P(A,U,6)
"RTN","PSBMLEN1",135,0)
 .K ^PSB(53.79,"AADT",DFN,AADT,DA) S DIK="^PSB(53.79," D ^DIK
"RTN","PSBMLEN1",136,0)
 ;
"RTN","PSBMLEN1",137,0)
 ;*83 convert Kills to tag so can be used by existing patch & new body site logic
"RTN","PSBMLEN1",138,0)
 S PSBXUIT=""      ;init field error/kill flag *83
"RTN","PSBMLEN1",139,0)
 I PSBSAVE=1 D
"RTN","PSBMLEN1",140,0)
 .I $D(DA) D:($P(^PSB(53.79,DA,0),U,9)="G")
"RTN","PSBMLEN1",141,0)
 ..I $D(^PSB(53.79,DA,.5)) S PSBY=0 F  S PSBY=$O(^PSB(53.79,DA,.5,PSBY)) Q:+PSBY<1  D
"RTN","PSBMLEN1",142,0)
 ...I $P(^PSB(53.79,DA,.5,PSBY,0),U,4)="PATCH" D
"RTN","PSBMLEN1",143,0)
 ....S (PSBYX,PSBXUIT)="" F  S PSBYX=$O(^PSB(53.79,"AORDX",PSBDFN,PSBONX,PSBYX),-1)   Q:PSBYX=""  D  Q:PSBXUIT
"RTN","PSBMLEN1",144,0)
 .....S PSBYZ="" S PSBYZ=$O(^PSB(53.79,"AORDX",PSBDFN,PSBONX,PSBYX,PSBYZ)) I (PSBYZ'=DA),$P(^PSB(53.79,PSBYZ,0),U,9)="G" D
"RTN","PSBMLEN1",145,0)
 ......W !!,"PATCH has been GIVEN before this admin completed"
"RTN","PSBMLEN1",146,0)
 ......S PSBXUIT=1 D KILL
"RTN","PSBMLEN1",147,0)
 ....Q:PSBXUIT
"RTN","PSBMLEN1",148,0)
 ....S ^PSB(53.79,"APATCH",$P(^PSB(53.79,DA,0),U),$P(^PSB(53.79,DA,0),U,6),DA)=""
"RTN","PSBMLEN1",149,0)
 .Q:PSBXUIT
"RTN","PSBMLEN1",150,0)
 .;      new body site validation checks *83
"RTN","PSBMLEN1",151,0)
 .I $D(DA) D SITECHK D:PSBXUIT KILL
"RTN","PSBMLEN1",152,0)
 .;
"RTN","PSBMLEN1",153,0)
 .Q:(PSBIEN="+1")&('$D(PSBIEN(1)))
"RTN","PSBMLEN1",154,0)
 .Q:PSBXUIT
"RTN","PSBMLEN1",155,0)
 .S X=$S($P(PSBIEN,",",2)]"":$P(PSBIEN,",",2),PSBIEN="+1":PSBIEN(1),1:"")
"RTN","PSBMLEN1",156,0)
 .I X]"" I ($F("HR",$P(^PSB(53.79,X,0),U,9))>1) F Y=.5,.6,.7 S Z=0 F  S Z=$O(^PSB(53.79,X,Y,Z)) Q:+Z=0  S $P(^PSB(53.79,X,Y,Z,0),U,3)=0
"RTN","PSBMLEN1",157,0)
 .I X]"",$G(PSBMMEN)=1 D SCANFAIL ;If Manual Med Entry was used, document "scanning failure"
"RTN","PSBMLEN1",158,0)
 G:PSBXUIT FILE   ;for field errors refile and run form again *83
"RTN","PSBMLEN1",159,0)
 Q
"RTN","PSBMLEN1",160,0)
 ;
"RTN","PSBMLEN1",161,0)
SITECHK ;Inj or Derm site field validate
"RTN","PSBMLEN1",162,0)
 S PSBXUIT=""
"RTN","PSBMLEN1",163,0)
 I $P(^PSB(53.79,DA,.1),U,6)]"",$P(^PSB(53.79,DA,.1),U,8)]"" D
"RTN","PSBMLEN1",164,0)
 .W !!,"Entry of both Injection and Dermal site fields are not allowed."
"RTN","PSBMLEN1",165,0)
 .S PSBXUIT=1
"RTN","PSBMLEN1",166,0)
 I 'PSBXUIT,PSBNJECT,$P(^PSB(53.79,DA,.1),U,6)="" D
"RTN","PSBMLEN1",167,0)
 .W !!,"Injection site required for this medication set to prompt for Injection Site."
"RTN","PSBMLEN1",168,0)
 .S PSBXUIT=1
"RTN","PSBMLEN1",169,0)
 I 'PSBXUIT,PSBMRRFL,$P(^PSB(53.79,DA,.1),U,8)="" D
"RTN","PSBMLEN1",170,0)
 .W !!,"Dermal site required for this medication requiring removal (MRR)."
"RTN","PSBMLEN1",171,0)
 .S PSBXUIT=1
"RTN","PSBMLEN1",172,0)
 I 'PSBXUIT,'PSBNJECT,$P(^PSB(53.79,DA,.1),U,6)]"" D
"RTN","PSBMLEN1",173,0)
 .W !!,"Not flagged as Injection Site medication, Injection Site field must be blank."
"RTN","PSBMLEN1",174,0)
 .S PSBXUIT=1
"RTN","PSBMLEN1",175,0)
 I 'PSBXUIT,'PSBMRRFL,$P(^PSB(53.79,DA,.1),U,8)]"" D
"RTN","PSBMLEN1",176,0)
 .W !!,"Not flagged as medication requiring removal (MRR), Dermal Site field must be blank."
"RTN","PSBMLEN1",177,0)
 .S PSBXUIT=1
"RTN","PSBMLEN1",178,0)
 Q
"RTN","PSBMLEN1",179,0)
KILL ;Kill and write msg
"RTN","PSBMLEN1",180,0)
 W !!,"Incomplete Med Log Entry, Deleting...#",DA,!,$C(7)
"RTN","PSBMLEN1",181,0)
 S A=^PSB(53.79,DA,0),DFN=$P(A,U,1),AADT=$P(A,U,6)
"RTN","PSBMLEN1",182,0)
 K ^PSB(53.79,"AADT",DFN,AADT,DA) S DIK="^PSB(53.79," D ^DIK
"RTN","PSBMLEN1",183,0)
 K DIR S DIR(0)="E" D ^DIR
"RTN","PSBMLEN1",184,0)
 Q
"RTN","PSBMLEN1",185,0)
 ;
"RTN","PSBMLEN1",186,0)
FDATE ;Check Admin Time for future date/time.
"RTN","PSBMLEN1",187,0)
 N PSBTIMX
"RTN","PSBMLEN1",188,0)
 S PSBTIMX=X D NOW^%DTC
"RTN","PSBMLEN1",189,0)
 I PSBTIMX>% W $C(7) S (DDSERROR,DDSBR)=1 D HLP^DDSUTL("Future date/time is not allowed")
"RTN","PSBMLEN1",190,0)
 Q
"RTN","PSBMLEN1",191,0)
 ;
"RTN","PSBMLEN1",192,0)
SCANFAIL ;File an MSF record
"RTN","PSBMLEN1",193,0)
 N PSBPRM,PSBRSLT,PSBX,PSBX1,PSBX2
"RTN","PSBMLEN1",194,0)
 S PSBX=^PSB(53.79,DA,0)
"RTN","PSBMLEN1",195,0)
 S PSBX1=^PSB(53.79,DA,.1)
"RTN","PSBMLEN1",196,0)
 S PSBPRM(0)=$P(PSBX,U,1)_U_$P(PSBX1,U,1)_U_"Manual Medication Entry"_U_""_U_"M"_U_1
"RTN","PSBMLEN1",197,0)
 I $P(PSBX1,U,1)["U",$P($G(^PSB(53.79,DA,.5,1,0)),U,1)]"" D
"RTN","PSBMLEN1",198,0)
 .S PSBX2="DD"_U_$P($G(^PSB(53.79,DA,.5,1,0)),U,1)
"RTN","PSBMLEN1",199,0)
 I $P(PSBX1,U,1)["V",$P($G(^PSB(53.79,DA,.6,1,0)),U,1)]"" D
"RTN","PSBMLEN1",200,0)
 .S PSBX2="ADD"_U_$P($G(^PSB(53.79,DA,.6,1,0)),U,1)
"RTN","PSBMLEN1",201,0)
 I $G(PSBX2)="",$P(PSBX1,U,1)["V",$P($G(^PSB(53.79,DA,.7,1,0)),U,1)]"" D
"RTN","PSBMLEN1",202,0)
 .S PSBX2="SOL"_U_$P($G(^PSB(53.79,DA,.7,1,0)),U,1)
"RTN","PSBMLEN1",203,0)
 I $G(PSBX2)]"" S PSBPRM(1)=PSBX2
"RTN","PSBMLEN1",204,0)
 D SCANFAIL^PSBVDLU3(.PSBRSLT,.PSBPRM)
"RTN","PSBMLEN1",205,0)
 Q
"RTN","PSBMLLKU")
0^38^B129280348^B106582479
"RTN","PSBMLLKU",1,0)
PSBMLLKU ;BIRMINGHAM/TEJ - BCMA RPC LOOKUP UTLILITIES ;03/06/16 3:06pm
"RTN","PSBMLLKU",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,9,11,20,13,38,32,56,42,70,72,83**;Mar 2004;Build 89
"RTN","PSBMLLKU",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBMLLKU",4,0)
 ;
"RTN","PSBMLLKU",5,0)
 ; Reference/IA
"RTN","PSBMLLKU",6,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBMLLKU",7,0)
 ; $$DOB^DPTLK1/3266
"RTN","PSBMLLKU",8,0)
 ; $$SSN^DPTLK1/3267
"RTN","PSBMLLKU",9,0)
 ; ^DPT/10035
"RTN","PSBMLLKU",10,0)
 ; ^XUSEC/10076
"RTN","PSBMLLKU",11,0)
 ; File 52.6/436
"RTN","PSBMLLKU",12,0)
 ; File 52.7/437
"RTN","PSBMLLKU",13,0)
 ; File 50/221
"RTN","PSBMLLKU",14,0)
 ; File 211.4/1409
"RTN","PSBMLLKU",15,0)
 ; $$UP^XLFSTR/10104
"RTN","PSBMLLKU",16,0)
 ;
"RTN","PSBMLLKU",17,0)
 ;*70 - create a lookup for Clinics that returns all patients per 
"RTN","PSBMLLKU",18,0)
 ;      clinic selected for Client to then pass one at a time for
"RTN","PSBMLLKU",19,0)
 ;      coversheet reports and enable the NEXT button for user
"RTN","PSBMLLKU",20,0)
 ;      selection to process the next DFN for a coversheet report.
"RTN","PSBMLLKU",21,0)
 ;*83 - return Injection/Dermal site encoded in piece 10.   |I or |D
"RTN","PSBMLLKU",22,0)
 ;      also set 16th piece if MRRs given on order.
"RTN","PSBMLLKU",23,0)
 ;      return HR & MRR flags pieces 7 & 8 on DD string.
"RTN","PSBMLLKU",24,0)
 ;
"RTN","PSBMLLKU",25,0)
RPC(RESULTS,PSBREC) ; Remote Procedure Call Entry Point.
"RTN","PSBMLLKU",26,0)
 ;
"RTN","PSBMLLKU",27,0)
 ;*70 piece out mode if exists & reset 0 node for bkwds compatability
"RTN","PSBMLLKU",28,0)
 N PSBCLINORD
"RTN","PSBMLLKU",29,0)
 S PSBCLINORD=$P(PSBREC(0),U,2),PSBREC(0)=$P(PSBREC(0),U)
"RTN","PSBMLLKU",30,0)
 ;
"RTN","PSBMLLKU",31,0)
 S RESULTS="" D @(PSBREC(0)_"(.RESULTS,.PSBREC)") Q
"RTN","PSBMLLKU",32,0)
 Q
"RTN","PSBMLLKU",33,0)
 ;
"RTN","PSBMLLKU",34,0)
ADMLKUP(RESULTS,PSBREC) ;
"RTN","PSBMLLKU",35,0)
 ;  Lookup ADMinistrations per DFN and search DATE
"RTN","PSBMLLKU",36,0)
 ;   input - PSBREC(1)  DFN
"RTN","PSBMLLKU",37,0)
 ;           PSBREC(2)  Search DATE
"RTN","PSBMLLKU",38,0)
 ;
"RTN","PSBMLLKU",39,0)
 ;   outpt - RESULTS (array)
"RTN","PSBMLLKU",40,0)
 ;          (Administrations returned will be dated  = to Search Date
"RTN","PSBMLLKU",41,0)
 ;
"RTN","PSBMLLKU",42,0)
 ;
"RTN","PSBMLLKU",43,0)
 K RESULTS
"RTN","PSBMLLKU",44,0)
 S DFN=PSBREC(1),PSBSRCH=$G(PSBREC(2)) I $G(PSBSRCH)']"" D NOW^%DTC S PSBSRCH=$P(%,".")
"RTN","PSBMLLKU",45,0)
 S PSBDT=PSBSRCH,PSBCNT=0 S:PSBSRCH'["." PSBSRCH=PSBSRCH+.9
"RTN","PSBMLLKU",46,0)
 S RESULTS(0)=1,RESULTS(1)="-1^No Meds Found!"
"RTN","PSBMLLKU",47,0)
 F  S PSBSRCH=$O(^PSB(53.79,"AADT",DFN,PSBSRCH),-1) Q:'PSBSRCH!(PSBSRCH<PSBDT)  D
"RTN","PSBMLLKU",48,0)
 .S PSBIEN=""
"RTN","PSBMLLKU",49,0)
 .F  S PSBIEN=$O(^PSB(53.79,"AADT",DFN,PSBSRCH,PSBIEN),-1) Q:'PSBIEN  D:'$D(^PSB(53.79,PSBIEN)) KILLAADT  Q:'$D(^PSB(53.79,PSBIEN))  D:$$CHKKEY(PSBIEN)
"RTN","PSBMLLKU",50,0)
 ..L +^PSB(53.79,PSBIEN):1
"RTN","PSBMLLKU",51,0)
 ..I  L -^PSB(53.79,PSBIEN)
"RTN","PSBMLLKU",52,0)
 ..E  Q
"RTN","PSBMLLKU",53,0)
 ..S PSBXORDN=$$GET1^DIQ(53.79,PSBIEN_",",.11) Q:'$D(^PSB(53.79,"AORDX",DFN,PSBXORDN,PSBSRCH))
"RTN","PSBMLLKU",54,0)
 ..Q:($$GET1^DIQ(53.79,PSBIEN_",",.06,"I")>PSBSRCH)
"RTN","PSBMLLKU",55,0)
 ..Q:($$GET1^DIQ(53.79,PSBIEN_",",.09,"I")="N")
"RTN","PSBMLLKU",56,0)
 ..S PSBCNT=PSBCNT+1,RESULTS(PSBCNT)=PSBIEN
"RTN","PSBMLLKU",57,0)
 ..S $P(RESULTS(PSBCNT),U,2)=PSBSRCH
"RTN","PSBMLLKU",58,0)
 ..S $P(RESULTS(PSBCNT),U,3)=$$GET1^DIQ(53.79,PSBIEN_",",.08)
"RTN","PSBMLLKU",59,0)
 ..S:$$GET1^DIQ(53.79,PSBIEN_",",.26) $P(RESULTS(PSBCNT),U,4)=$$GET1^DIQ(53.79,PSBIEN_",",.26)
"RTN","PSBMLLKU",60,0)
 ..S $P(RESULTS(PSBCNT),U,5)=$S($$GET1^DIQ(53.79,PSBIEN_",",.09,"I")']"":"U",1:$$GET1^DIQ(53.79,PSBIEN_",",.09,"I"))
"RTN","PSBMLLKU",61,0)
 ..D  ; Get order information
"RTN","PSBMLLKU",62,0)
 ...K ^TMP("PSJ1",$J) D EN^PSJBCMA1(DFN,PSBXORDN,1)
"RTN","PSBMLLKU",63,0)
 ...S $P(RESULTS(PSBCNT),U,3)=$P(^TMP("PSJ1",$J,2),U,2)  ;OItem_" "_Dosage Form
"RTN","PSBMLLKU",64,0)
 ...S $P(RESULTS(PSBCNT),U,6)=$P(^TMP("PSJ1",$J,4),U)    ;Sched Type
"RTN","PSBMLLKU",65,0)
 ...K ^TMP("PSJ1",$J)
"RTN","PSBMLLKU",66,0)
 ..S $P(RESULTS(PSBCNT),U,7)=$$GET1^DIQ(53.79,PSBIEN_",",.06,"I")
"RTN","PSBMLLKU",67,0)
 ..S $P(RESULTS(PSBCNT),U,8)=$$GETINIT^PSBCSUTX(PSBIEN,"I") ;Get initials of who took action, PSB*3*72
"RTN","PSBMLLKU",68,0)
 ..S:$D(^PSB(53.79,PSBIEN,.2)) $P(RESULTS(PSBCNT),U,9)=$P(^PSB(53.79,PSBIEN,.2),U),$P(RESULTS(PSBCNT),U,10)=$P(^PSB(53.79,PSBIEN,.2),U,2)
"RTN","PSBMLLKU",69,0)
 S:+$G(RESULTS(1))>0 $P(RESULTS(0),U)=PSBCNT
"RTN","PSBMLLKU",70,0)
 Q
"RTN","PSBMLLKU",71,0)
 ;
"RTN","PSBMLLKU",72,0)
CHKKEY(PSBIENX) ;
"RTN","PSBMLLKU",73,0)
 I '(($D(^XUSEC("PSB MANAGER",DUZ)))!($$GET1^DIQ(53.79,+PSBIENX,.07,"I")=DUZ)) Q 0
"RTN","PSBMLLKU",74,0)
 Q 1
"RTN","PSBMLLKU",75,0)
 ;
"RTN","PSBMLLKU",76,0)
PTLKUP(RESULTS,PSBREC) ; Patient lookup handled separately for security
"RTN","PSBMLLKU",77,0)
 ;   input - PSBREC (array)  User entered patient lookup data
"RTN","PSBMLLKU",78,0)
 ;
"RTN","PSBMLLKU",79,0)
 ;   outpt - RESULTS (array)
"RTN","PSBMLLKU",80,0)
 ;          (Person(s) in PATIENT File (#2) meeting search criteria)
"RTN","PSBMLLKU",81,0)
 ;
"RTN","PSBMLLKU",82,0)
 ;
"RTN","PSBMLLKU",83,0)
 N PSBNRSWD,PSBINDX,PSBRPT
"RTN","PSBMLLKU",84,0)
 K RESULTS,PSBDATA
"RTN","PSBMLLKU",85,0)
 K PSBPT S PSBPT(0)=0
"RTN","PSBMLLKU",86,0)
 S PSBINDX="" K ^TMP("DILIST",$J)
"RTN","PSBMLLKU",87,0)
 I PSBCLINORD'="C" D
"RTN","PSBMLLKU",88,0)
 .S PSBDATA=$E(PSBREC(1),1,60)
"RTN","PSBMLLKU",89,0)
 .I PSBDATA?12N!(PSBDATA?1.6N)&(DUZ("AG")="I") D  Q  ; HRN/ASUFAC code
"RTN","PSBMLLKU",90,0)
 ..N X
"RTN","PSBMLLKU",91,0)
 ..S X=$$HRCNF^APSPFUNC($S($L(PSBDATA)=12:PSBDATA,1:$$PAD($$GET1^DIQ(9999999.06,+DUZ(2),.12))_$$PAD(PSBDATA)))
"RTN","PSBMLLKU",92,0)
 ..I X<0 D  Q
"RTN","PSBMLLKU",93,0)
 ...S RESULTS(0)=1,RESULTS(1)="-1^No patients matching '"_PSBDATA_"'."
"RTN","PSBMLLKU",94,0)
 ..S RESULTS(0)=1
"RTN","PSBMLLKU",95,0)
 ..S RESULTS(1)=$$PTREC(X)
"RTN","PSBMLLKU",96,0)
 .S PSBDATA1=PSBDATA
"RTN","PSBMLLKU",97,0)
 .I $E(PSBDATA,$L(PSBDATA)-10,60)=" [MAS WARD]" S PSBINDX="CN" S PSBDATA=$P(PSBDATA," [MAS WARD]")
"RTN","PSBMLLKU",98,0)
 .I $E(PSBDATA,$L(PSBDATA)-11,60)=" [NURS UNIT]" S PSBINDX="CN" S PSBDATA=$P(PSBDATA," [NURS UNIT]") D
"RTN","PSBMLLKU",99,0)
 ..K PSBPT S PSBPT(0)=0
"RTN","PSBMLLKU",100,0)
 ..S PSBZ=0 F  S PSBZ=$O(^NURSF(211.4,PSBZ)) Q:PSBZ'?.N  S PSBNRSWD=$$GET1^DIQ(211.4,PSBZ_",",.01) I $$UP^XLFSTR(PSBNRSWD)=PSBDATA S PSBY=PSBZ Q  ;Update API, PSB*3*72
"RTN","PSBMLLKU",101,0)
 ..K PSBDATA S PSBDATA=""
"RTN","PSBMLLKU",102,0)
 ..S PSBX=0 F  S PSBX=$O(^NURSF(211.4,PSBY,3,PSBX)) Q:PSBX=""  S PSBDATA(PSBX)=$$GET1^DIQ(42,$P(^NURSF(211.4,PSBY,3,PSBX,0),U)_",",.01)
"RTN","PSBMLLKU",103,0)
 ;
"RTN","PSBMLLKU",104,0)
 I PSBCLINORD="C" D
"RTN","PSBMLLKU",105,0)
 .;Clinic mode report - get and return array of all DFN's that belong
"RTN","PSBMLLKU",106,0)
 .;  to clinics passed in by user.
"RTN","PSBMLLKU",107,0)
 .F QQ=0:0 S QQ=$O(PSBREC(QQ)) Q:'QQ  D
"RTN","PSBMLLKU",108,0)
 ..S PSBRPT(2,QQ,0)=PSBREC(QQ)
"RTN","PSBMLLKU",109,0)
 ..S PSBRPT(2,"B",PSBREC(QQ),QQ)=""
"RTN","PSBMLLKU",110,0)
 .S PSBDATA=1 D CLIN^PSBO(.PSBRPT,.PSBDATA)
"RTN","PSBMLLKU",111,0)
 .I $D(PSBDATA)=11 D
"RTN","PSBMLLKU",112,0)
 ..N DFNXX S PSBCNT=0
"RTN","PSBMLLKU",113,0)
 ..F DFNXX=0:0 S DFNXX=$O(PSBDATA(DFNXX)) Q:'DFNXX  D
"RTN","PSBMLLKU",114,0)
 ...S PSBCNT=PSBCNT+1,RESULTS(PSBCNT)=$$PTREC(DFNXX)
"RTN","PSBMLLKU",115,0)
 .; check if any data found
"RTN","PSBMLLKU",116,0)
 .I '$D(RESULTS) D
"RTN","PSBMLLKU",117,0)
 ..S RESULTS(0)=1
"RTN","PSBMLLKU",118,0)
 ..S RESULTS(1)="-1^No patients matching Clinic Search List"
"RTN","PSBMLLKU",119,0)
 .E  D
"RTN","PSBMLLKU",120,0)
 ..S RESULTS(0)=+$O(RESULTS(""),-1)
"RTN","PSBMLLKU",121,0)
 ..S PSBINDX="CN"
"RTN","PSBMLLKU",122,0)
 I PSBCLINORD="C",+RESULTS(1)=-1 Q
"RTN","PSBMLLKU",123,0)
 ;
"RTN","PSBMLLKU",124,0)
 I PSBINDX="" S PSBINDX=$S(PSBDATA?9N.1P:"SSN",PSBDATA?4N.1P:"BS5^BS",1:PSBINDX)
"RTN","PSBMLLKU",125,0)
 I ($O(PSBDATA(""))'>0) D FIND^DIC(2,"","@;.01;.02;.03;.09","MP",PSBDATA,200,PSBINDX)
"RTN","PSBMLLKU",126,0)
 I ($O(PSBDATA(""))>0) D
"RTN","PSBMLLKU",127,0)
 .S PSBX="",PSBY=1 F  S PSBX=$O(PSBDATA(PSBX)) Q:PSBX=""  D  K ^TMP("DILIST",$J) Q:$P(PSBPT(0),U,3)=1
"RTN","PSBMLLKU",128,0)
 ..D FIND^DIC(2,"","@;.01;.02;.03;.09","MPO",PSBDATA(PSBX),200,PSBINDX)
"RTN","PSBMLLKU",129,0)
 ..S PSBZ=0 F  S PSBZ=$O(^TMP("DILIST",$J,PSBZ)) Q:PSBZ=""  S PSBPT(PSBY,0)=^TMP("DILIST",$J,PSBZ,0),PSBPT(0)=PSBY,PSBY=PSBY+1 I PSBY>200 S $P(PSBPT(0),U,3)=1
"RTN","PSBMLLKU",130,0)
 K:+$G(PSBPT(0))=0 PSBPT
"RTN","PSBMLLKU",131,0)
 I $D(PSBPT) M ^TMP("DILIST",$J)=PSBPT
"RTN","PSBMLLKU",132,0)
 I $P($G(^TMP("DILIST",$J,0)),U,3) D  Q
"RTN","PSBMLLKU",133,0)
 .S RESULTS(0)=1,RESULTS(1)="-1^Too many patients found matching '"_PSBDATA1_"'. Please be more specific."
"RTN","PSBMLLKU",134,0)
 I $D(^TMP("DILIST",$J,0)) D
"RTN","PSBMLLKU",135,0)
 .F PSBXX=0:0 S PSBXX=$O(^TMP("DILIST",$J,PSBXX)) Q:'PSBXX  D
"RTN","PSBMLLKU",136,0)
 ..S RESULTS(PSBXX)=$$PTREC(+^TMP("DILIST",$J,PSBXX,0))
"RTN","PSBMLLKU",137,0)
 I '$D(RESULTS) S RESULTS(0)=1,RESULTS(1)="-1^No patients matching '"_PSBDATA1_"'"
"RTN","PSBMLLKU",138,0)
 E  S RESULTS(0)=+$O(RESULTS(""),-1)
"RTN","PSBMLLKU",139,0)
 Q
"RTN","PSBMLLKU",140,0)
 ;
"RTN","PSBMLLKU",141,0)
PTREC(DFN) ;
"RTN","PSBMLLKU",142,0)
 ; Extrinsic to return a Pt Rec  in standard list format
"RTN","PSBMLLKU",143,0)
 N PSBXX
"RTN","PSBMLLKU",144,0)
 S PSBXX=$G(^DPT(DFN,0))
"RTN","PSBMLLKU",145,0)
 S PSBXX=DFN_U_$P(PSBXX,U,1)_U_$P(PSBXX,U,2)_U_$P(PSBXX,U,3)_U_$S(DUZ("AG")="I":$$HRCNF^BDGF2(DFN,DUZ(2)),1:$P(PSBXX,U,9))
"RTN","PSBMLLKU",146,0)
 S $P(PSBXX,U,6)=$$GET1^DIQ(2,DFN_",",.1)
"RTN","PSBMLLKU",147,0)
 S $P(PSBXX,U,7)=$$GET1^DIQ(2,DFN_",",.101)
"RTN","PSBMLLKU",148,0)
 S $P(PSBXX,U,10)=$$DOB^DPTLK1(DFN)
"RTN","PSBMLLKU",149,0)
 S $P(PSBXX,U,11)=$S(DUZ("AG")="I":$$HRN^AUPNPAT(DFN,DUZ(2)),1:$$SSN^DPTLK1(DFN))
"RTN","PSBMLLKU",150,0)
 Q PSBXX
"RTN","PSBMLLKU",151,0)
 ;
"RTN","PSBMLLKU",152,0)
SELECTAD(RESULTS,PSBREC) ; Select Administration
"RTN","PSBMLLKU",153,0)
 ;
"RTN","PSBMLLKU",154,0)
 ;  Process the SELECTed ADministration
"RTN","PSBMLLKU",155,0)
 ;   input - PSBREC(1) = PSB Med Log File (#53.79) IEN
"RTN","PSBMLLKU",156,0)
 ;
"RTN","PSBMLLKU",157,0)
 ;
"RTN","PSBMLLKU",158,0)
 ;   outpt - RESULTS (array)
"RTN","PSBMLLKU",159,0)
 ;          (Administration data that can be subsequently updated via GUI MED LOG EDIT)
"RTN","PSBMLLKU",160,0)
 ;
"RTN","PSBMLLKU",161,0)
 ;
"RTN","PSBMLLKU",162,0)
 K RESULTS,PSBXIV,PSBPTCHX
"RTN","PSBMLLKU",163,0)
 N ISIT,DSIT,PSBMRRX                                              ;*83
"RTN","PSBMLLKU",164,0)
 N PSBIEN,PSBCNT,PSBX S PSBIEN=PSBREC(1),PSBCNT=2
"RTN","PSBMLLKU",165,0)
 ; Construct form data    Patient^SSN^Med^BagID^AdminStat^AdminD/T^InjctSt^PRNReas^PRNEff^DisDrg^UntsGiven^Unt^
"RTN","PSBMLLKU",166,0)
 S RESULTS(0)=0
"RTN","PSBMLLKU",167,0)
 D:$$CHKKEY(PSBIEN)
"RTN","PSBMLLKU",168,0)
 .L +^PSB(53.79,PSBIEN):1
"RTN","PSBMLLKU",169,0)
 .E  I $P(^PSB(53.79,PSBIEN,0),U,9)]"" S PSBCNT=1,RESULTS(1)="-1^ This administration is being modified by another process at this moment." L -^PSB(53.79,PSBIEN) Q
"RTN","PSBMLLKU",170,0)
 .S $P(RESULTS(1),U)=PSBIEN
"RTN","PSBMLLKU",171,0)
 .S $P(RESULTS(1),U,2)=$$GET1^DIQ(53.79,PSBIEN_",",.01,"I")
"RTN","PSBMLLKU",172,0)
 .S $P(RESULTS(1),U,3)=$$GET1^DIQ(53.79,PSBIEN_",",.01)
"RTN","PSBMLLKU",173,0)
 .S $P(RESULTS(1),U,4)=$$GET1^DIQ(2,$P(RESULTS(1),U,2)_",",.09)
"RTN","PSBMLLKU",174,0)
 .S $P(RESULTS(1),U,5)=$$GET1^DIQ(53.79,PSBIEN_",",.08,"I")_"~"_$$GET1^DIQ(53.79,PSBIEN_",",.08)
"RTN","PSBMLLKU",175,0)
 .S $P(RESULTS(1),U,6)=$$GET1^DIQ(53.79,PSBIEN_",",.26)
"RTN","PSBMLLKU",176,0)
 .S $P(RESULTS(1),U,7)=$S($$GET1^DIQ(53.79,PSBIEN_",",.09,"I")']"":"U",1:$$GET1^DIQ(53.79,PSBIEN_",",.09,"I"))
"RTN","PSBMLLKU",177,0)
 .;
"RTN","PSBMLLKU",178,0)
 .D:($P(RESULTS(1),U,7)'="N")&($P(RESULTS(1),U,7)]"") SELSTTUS(.RESULTS)  ; Amend RESULTS(1) data...
"RTN","PSBMLLKU",179,0)
 .S Y=$E($$GET1^DIQ(53.79,PSBIEN_",",.06,"I"),1,12) D DD^%DT
"RTN","PSBMLLKU",180,0)
 .S $P(RESULTS(1),U,8)=Y
"RTN","PSBMLLKU",181,0)
 .S $P(RESULTS(1),U,9)=$$GET1^DIQ(53.79,PSBIEN_",",.06,"I")
"RTN","PSBMLLKU",182,0)
 .;Inj vs Derm site                                                *83
"RTN","PSBMLLKU",183,0)
 .S ISIT=$$GET1^DIQ(53.79,PSBIEN_",",.16)
"RTN","PSBMLLKU",184,0)
 .S DSIT=$$GET1^DIQ(53.79,PSBIEN_",",.18)
"RTN","PSBMLLKU",185,0)
 .S $P(RESULTS(1),U,10)=$S(ISIT]"":ISIT_"|I",DSIT]"":DSIT_"|D",1:"")
"RTN","PSBMLLKU",186,0)
 .;
"RTN","PSBMLLKU",187,0)
 .S $P(RESULTS(1),U,16)=0
"RTN","PSBMLLKU",188,0)
 .S $P(RESULTS(2),U)=$$GET1^DIQ(53.79,PSBIEN_",",.21),$P(RESULTS(2),U,2)=$$GET1^DIQ(53.79,PSBIEN_",",.22)
"RTN","PSBMLLKU",189,0)
 .;
"RTN","PSBMLLKU",190,0)
 .;Determine if there are any active MRRs/IVs/Patches per order
"RTN","PSBMLLKU",191,0)
 .;  MRRs - check MRRs first                                       *83
"RTN","PSBMLLKU",192,0)
 .D:$G(PSBMRRX)
"RTN","PSBMLLKU",193,0)
 ..S PSBX="",PSBX="^PSB(53.79,""AMRR"","_$P(RESULTS(1),U,2)_")"
"RTN","PSBMLLKU",194,0)
 ..F  S PSBX=$Q(@PSBX) Q:PSBX=""  Q:$QS(PSBX,3)'=$P(RESULTS(1),U,2)  D  Q:$P(RESULTS(1),U,16)
"RTN","PSBMLLKU",195,0)
 ...S PSBXX=$QS(PSBX,5),PSBXXX=$S(($P(^PSB(53.79,PSBXX,0),U,9)="G")&(PSBXX'=PSBIEN):1,1:0)
"RTN","PSBMLLKU",196,0)
 ...I PSBXXX&($P(^PSB(53.79,PSBXX,.1),U)=$P(RESULTS(1),U,15)) S $P(RESULTS(1),U,16)=1
"RTN","PSBMLLKU",197,0)
 .;
"RTN","PSBMLLKU",198,0)
 .;  Patches - check if flag not already set   
"RTN","PSBMLLKU",199,0)
 .D:$G(PSBPTCHX)&('($P(RESULTS(1),U,16)))                         ;*83
"RTN","PSBMLLKU",200,0)
 ..S PSBX="",PSBX="^PSB(53.79,""APATCH"","_$P(RESULTS(1),U,2)_")"
"RTN","PSBMLLKU",201,0)
 ..F  S PSBX=$Q(@PSBX) Q:PSBX=""  Q:$QS(PSBX,3)'=$P(RESULTS(1),U,2)  D  Q:$P(RESULTS(1),U,16)
"RTN","PSBMLLKU",202,0)
 ...S PSBXX=$QS(PSBX,5),PSBXXX=$S(($P(^PSB(53.79,PSBXX,0),U,9)="G")&(PSBXX'=PSBIEN):1,1:0)
"RTN","PSBMLLKU",203,0)
 ...I PSBXXX&($P(^PSB(53.79,PSBXX,.1),U)=$P(RESULTS(1),U,15)) S $P(RESULTS(1),U,16)=1
"RTN","PSBMLLKU",204,0)
 .;
"RTN","PSBMLLKU",205,0)
 .;  IV's - check if flag not already set
"RTN","PSBMLLKU",206,0)
 .D:$G(PSBXIV)&('($P(RESULTS(1),U,16)))                           ;*83
"RTN","PSBMLLKU",207,0)
 ..S PSBX="",PSBX="^PSB(53.79,""AUID"","_$P(RESULTS(1),U,2)_")"
"RTN","PSBMLLKU",208,0)
 ..F  S PSBX=$Q(@PSBX) Q:PSBX=""  Q:$QS(PSBX,3)'=$P(RESULTS(1),U,2)  Q:$QS(PSBX,4)>$P(RESULTS(1),U,15)  D  Q:$P(RESULTS(1),U,16)
"RTN","PSBMLLKU",209,0)
 ...Q:$QS(PSBX,4)'=$P(RESULTS(1),U,15)
"RTN","PSBMLLKU",210,0)
 ...S PSBXX=$QS(PSBX,6) S:(PSBXX'=PSBIEN) $P(RESULTS(1),U,16)=$S($P(^PSB(53.79,PSBXX,0),U,9)="I":1,$P(^PSB(53.79,PSBXX,0),U,9)="S":1,1:0)
"RTN","PSBMLLKU",211,0)
 .;
"RTN","PSBMLLKU",212,0)
 .; LOOP - Place DD in RESULTS
"RTN","PSBMLLKU",213,0)
 .S PSBX=0 F  S PSBX=$O(^PSB(53.79,PSBIEN,.5,PSBX)) Q:'(+PSBX)  D
"RTN","PSBMLLKU",214,0)
 ..S PSBCNT=PSBCNT+1
"RTN","PSBMLLKU",215,0)
 ..S RESULTS(PSBCNT)="DD^"_$P(^PSB(53.79,PSBIEN,.5,PSBX,0),U)_"^"_$$GET1^DIQ(50,$P(^PSB(53.79,PSBIEN,.5,PSBX,0),U)_",",.01)
"RTN","PSBMLLKU",216,0)
 ..S $P(RESULTS(PSBCNT),U,4)=$P(^PSB(53.79,PSBIEN,.5,PSBX,0),U,2)_"^"_$P(^PSB(53.79,PSBIEN,.5,PSBX,0),U,3)_"^"_$P(^PSB(53.79,PSBIEN,.5,PSBX,0),U,4)
"RTN","PSBMLLKU",217,0)
 ..S:$P(RESULTS(PSBCNT),U,4)?1"."1.N $P(RESULTS(PSBCNT),U,4)=0_+$P(RESULTS(PSBCNT),U,4)
"RTN","PSBMLLKU",218,0)
 ..S:$P(RESULTS(PSBCNT),U,5)?1"."1.N $P(RESULTS(PSBCNT),U,5)=0_+$P(RESULTS(PSBCNT),U,5)
"RTN","PSBMLLKU",219,0)
 ..;  send HR & MRR flags in DD pce 7 & 8 to insure returned
"RTN","PSBMLLKU",220,0)
 ..;  for Edit Transaction calls
"RTN","PSBMLLKU",221,0)
 ..S $P(RESULTS(PSBCNT),U,7)=$P(^PSB(53.79,PSBIEN,.5,PSBX,0),U,5) ;*83
"RTN","PSBMLLKU",222,0)
 ..S $P(RESULTS(PSBCNT),U,8)=$P(^PSB(53.79,PSBIEN,.5,PSBX,0),U,6) ;*83
"RTN","PSBMLLKU",223,0)
 .; LOOP - Place ADD in RESULTS
"RTN","PSBMLLKU",224,0)
 .S PSBX=0 F  S PSBX=$O(^PSB(53.79,PSBIEN,.6,PSBX)) Q:'(+PSBX)  D
"RTN","PSBMLLKU",225,0)
 ..S PSBCNT=PSBCNT+1
"RTN","PSBMLLKU",226,0)
 ..S RESULTS(PSBCNT)="ADD^"_$P(^PSB(53.79,PSBIEN,.6,PSBX,0),U)_"^"_$$GET1^DIQ(52.6,$P(^PSB(53.79,PSBIEN,.6,PSBX,0),U)_",",.01)
"RTN","PSBMLLKU",227,0)
 ..S $P(RESULTS(PSBCNT),U,4)=$P(^PSB(53.79,PSBIEN,.6,PSBX,0),U,2)_"^"_$P(^PSB(53.79,PSBIEN,.6,PSBX,0),U,3)_"^"_$P(^PSB(53.79,PSBIEN,.6,PSBX,0),U,4)
"RTN","PSBMLLKU",228,0)
 .; LOOP - Place SOL in RESULTS
"RTN","PSBMLLKU",229,0)
 .S PSBX=0 F  S PSBX=$O(^PSB(53.79,PSBIEN,.7,PSBX)) Q:'(+PSBX)  D
"RTN","PSBMLLKU",230,0)
 ..S PSBCNT=PSBCNT+1
"RTN","PSBMLLKU",231,0)
 ..S RESULTS(PSBCNT)="SOL^"_$P(^PSB(53.79,PSBIEN,.7,PSBX,0),U)_"^"_$$GET1^DIQ(52.7,$P(^PSB(53.79,PSBIEN,.7,PSBX,0),U)_",",.01)
"RTN","PSBMLLKU",232,0)
 ..S $P(RESULTS(PSBCNT),U,4)=$P(^PSB(53.79,PSBIEN,.7,PSBX,0),U,2)_"^"_$P(^PSB(53.79,PSBIEN,.7,PSBX,0),U,3)_"^"_$P(^PSB(53.79,PSBIEN,.7,PSBX,0),U,4)
"RTN","PSBMLLKU",233,0)
 .L -^PSB(53.79,PSBIEN)
"RTN","PSBMLLKU",234,0)
 S:PSBCNT>0 RESULTS(0)=PSBCNT
"RTN","PSBMLLKU",235,0)
 Q
"RTN","PSBMLLKU",236,0)
 ;
"RTN","PSBMLLKU",237,0)
SELSTTUS(RESULTS) ;
"RTN","PSBMLLKU",238,0)
 ; Provide the SELectable STaTUS
"RTN","PSBMLLKU",239,0)
 ;
"RTN","PSBMLLKU",240,0)
 ; Get TAB, ScheduleType, Current Status, provide Selectable Staus(s) in ^8
"RTN","PSBMLLKU",241,0)
 N PSBORTYP,PSBIVTYP,PSBINTSY,PSBCHMTY,PSBIVPSH,PSBXTAB,CNT
"RTN","PSBMLLKU",242,0)
 K ^TMP("PSJ1",$J) D EN^PSJBCMA1($$GET1^DIQ(53.79,PSBIEN_",",.01,"I"),$$GET1^DIQ(53.79,PSBIEN_",",.11),1)
"RTN","PSBMLLKU",243,0)
 I ^TMP("PSJ1",$J,0)>0 D
"RTN","PSBMLLKU",244,0)
 .S PSBORTYP=$TR($P(^TMP("PSJ1",$J,0),U,3),"1234567890"),PSBIVTYP=$P(^TMP("PSJ1",$J,0),U,6)
"RTN","PSBMLLKU",245,0)
 .S PSBINTSY=$P(^TMP("PSJ1",$J,0),U,7),PSBCHMTY=$P(^TMP("PSJ1",$J,0),U,8),PSBIVPSH=+$P($G(^TMP("PSJ1",$J,1,0)),U,2)
"RTN","PSBMLLKU",246,0)
 .S:$$IVPTAB^PSBVDLU3(PSBORTYP,PSBIVTYP,PSBINTSY,PSBCHMTY,PSBIVPSH) PSBXTAB="PB"
"RTN","PSBMLLKU",247,0)
 .D:'$D(PSBXTAB)
"RTN","PSBMLLKU",248,0)
 ..I PSBORTYP="U" S PSBXTAB="UD"
"RTN","PSBMLLKU",249,0)
 ..I PSBORTYP="V" S PSBXTAB="IV"
"RTN","PSBMLLKU",250,0)
 ; Set Results(1) and other flags...
"RTN","PSBMLLKU",251,0)
 I ^TMP("PSJ1",$J,0)>0 D
"RTN","PSBMLLKU",252,0)
 .S $P(RESULTS(1),U,13)=$P(^TMP("PSJ1",$J,4),U)
"RTN","PSBMLLKU",253,0)
 .S $P(RESULTS(1),U,14)=$P(^TMP("PSJ1",$J,1),U,10)
"RTN","PSBMLLKU",254,0)
 .S $P(RESULTS(1),U,15)=$P(^TMP("PSJ1",$J,0),U,3)
"RTN","PSBMLLKU",255,0)
 .I (PSBXTAB="UD"),($P(^TMP("PSJ1",$J,2),U,6)="PATCH") S PSBPTCHX=1
"RTN","PSBMLLKU",256,0)
 .F CNT=0:0 S CNT=$O(^TMP("PSJ1",$J,700,CNT)) Q:'CNT  D
"RTN","PSBMLLKU",257,0)
 ..S PSBMRRX=$P(^TMP("PSJ1",$J,700,CNT,0),U,7)                    ;*83
"RTN","PSBMLLKU",258,0)
 .I PSBXTAB="IV" S PSBXIV=1
"RTN","PSBMLLKU",259,0)
 .S:$G(PSBXTAB)]"" $P(RESULTS(1),U,11)=$G(PSBXTAB)
"RTN","PSBMLLKU",260,0)
 K ^TMP("PSJ1",$J)
"RTN","PSBMLLKU",261,0)
 Q
"RTN","PSBMLLKU",262,0)
 ;
"RTN","PSBMLLKU",263,0)
KILLAADT ;
"RTN","PSBMLLKU",264,0)
 ;   Here because there is an errant index entry via version 1.0/2.0
"RTN","PSBMLLKU",265,0)
 ;   Cleansing!
"RTN","PSBMLLKU",266,0)
 ;
"RTN","PSBMLLKU",267,0)
 K ^PSB(53.79,"AADT",DFN,PSBSRCH,PSBIEN)
"RTN","PSBMLLKU",268,0)
 Q
"RTN","PSBMLLKU",269,0)
 ;
"RTN","PSBMLLKU",270,0)
PAD(VAL) ; Return VAL with leading zeroes padded to 6 characters
"RTN","PSBMLLKU",271,0)
 Q $E("000000",1,6-$L(VAL))_VAL
"RTN","PSBO")
0^21^B151900233^B150383689
"RTN","PSBO",1,0)
PSBO ;BIRMINGHAM/EFC - BCMA OUTPUTS ;03/06/16 3:06pm
"RTN","PSBO",2,0)
 ;;3.0;BAR CODE MED ADMIN;**13,32,2,25,28,51,50,42,58,68,70,83**;Mar 2004;Build 89
"RTN","PSBO",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBO",4,0)
 ;
"RTN","PSBO",5,0)
 ; Reference/IA
"RTN","PSBO",6,0)
 ; ^ORD(101.24/3429
"RTN","PSBO",7,0)
 ; ^PSDRUG(/221
"RTN","PSBO",8,0)
 ;
"RTN","PSBO",9,0)
 ;*68-Add PSBSIFL as 19th parameter to RPC tag to control printing of
"RTN","PSBO",10,0)
 ;       special instruction/other print info.
"RTN","PSBO",11,0)
 ;*58 - Tag WRAP previously wrapped on a max text limit of 250 char.
"RTN","PSBO",12,0)
 ;       Since the use of Enhanced Order Checks, that limit has to 
"RTN","PSBO",13,0)
 ;       be removed and the length of the input string will be used.
"RTN","PSBO",14,0)
 ;*70 - Add PSBCLINORD as 20th parameter to RPC tag to control the 
"RTN","PSBO",15,0)
 ;       type of order to appear on reports that want to be able to
"RTN","PSBO",16,0)
 ;       show Clinic Orders or IM orders.  Set C=CO I=IM
"RTN","PSBO",17,0)
 ;       CCR #1459: Adding clinic to BL and BZ chui labels.
"RTN","PSBO",18,0)
 ;*83 - Add call to cleanup all PSB* variables for all reports run.
"RTN","PSBO",19,0)
 ;
"RTN","PSBO",20,0)
RPC(RESULTS,PSBTYPE,PSBDFN,PSBSTRT,PSBSTOP,PSBINCL,PSBDEV,PSBSORT,PSBOI,PSBWLOC,PSBWSORT,PSBFUTR,PSBORDNM,PSBRCRI,PSBLIST,PSBPST,PSBTR,PSBDIV,PSBSIFL,PSBCLINORD,PSB21,PSB22,PSB23,PSB24,PSB25,PSBCLLST) ;
"RTN","PSBO",21,0)
 ;
"RTN","PSBO",22,0)
 ; RPC: PSB REPORT
"RTN","PSBO",23,0)
 ;
"RTN","PSBO",24,0)
 ; Description:
"RTN","PSBO",25,0)
 ; Used by the client to create individual patient extracts of
"RTN","PSBO",26,0)
 ; CHUI report options to display on the client.
"RTN","PSBO",27,0)
 ;
"RTN","PSBO",28,0)
 ;
"RTN","PSBO",29,0)
 S RESULTS=$NAME(^TMP("PSBO",$J))
"RTN","PSBO",30,0)
 N PSBIENS,PSBRPT,PSBFDA,DIC,PSBANS
"RTN","PSBO",31,0)
 N PSBMODE                                                       ;*70
"RTN","PSBO",32,0)
 K ^TMP("PSBO",$J) S ^TMP("PSBO",$J,1)="-1^"
"RTN","PSBO",33,0)
 S DFN=PSBDFN
"RTN","PSBO",34,0)
 D NEW^PSBO1(.PSBRPT,PSBTYPE)
"RTN","PSBO",35,0)
 I PSBDFN'="",PSBTYPE="MH"!(PSBTYPE="WA")!(PSBTYPE="ML")!(PSBTYPE="MT") D PAINCMT^PSBCSUTL(PSBDFN) ;;Add Comment if Pain Score entered in BCMA was marked "Entered in Error" in Vitals.
"RTN","PSBO",36,0)
 I +PSBRPT(0)<1 S ^TMP("PSBO",$J,1)="-1^Error: "_$P(PSBRPT(0),U,2) Q
"RTN","PSBO",37,0)
 S PSBIENS=+PSBRPT(0)_","
"RTN","PSBO",38,0)
 S PSBSTRT(0)=$E($P(PSBSTRT,".",2)_"0000",1,4),PSBSTRT=PSBSTRT\1
"RTN","PSBO",39,0)
 S PSBSTOP(0)=$E($P(PSBSTOP,".",2)_"0000",1,4),PSBSTOP=PSBSTOP\1
"RTN","PSBO",40,0)
 D:$G(PSBDEV)]""
"RTN","PSBO",41,0)
 .D NOW^%DTC
"RTN","PSBO",42,0)
 .I $P(PSBDEV,U,2)="" D VAL^DIE(53.69,PSBIENS,.06,"F",PSBDEV,"PSBRET","PSBFDA")
"RTN","PSBO",43,0)
 .I $P(PSBDEV,U,2)'="" D VAL^DIE(53.69,PSBIENS,.06,"F","`"_$P(PSBDEV,U,2),"PSBRET","PSBFDA")
"RTN","PSBO",44,0)
 .D VAL^DIE(53.69,PSBIENS,.07,"F",$S($P(PSBRCRI,U)="QD":$P(PSBRCRI,U,2),1:%),"PSBRET","PSBFDA")
"RTN","PSBO",45,0)
 D:$G(PSBOI)]"" VAL^DIE(53.69,PSBIENS,.09,"F",PSBOI,"PSBRET","PSBFDA")
"RTN","PSBO",46,0)
 S:($G(PSBSORT)']"")&(PSBTYPE'="XA") PSBSORT="P" D VAL^DIE(53.69,PSBIENS,.11,"F",PSBSORT,"PSBRET","PSBFDA")
"RTN","PSBO",47,0)
 I "^SF"[("^"_PSBTYPE) D VAL^DIE(53.69,PSBIENS,.51,"F",PSBSORT,"PSBRET","PSBFDA")
"RTN","PSBO",48,0)
 S PSBPST=$TR($G(PSBPST),"^",",")
"RTN","PSBO",49,0)
 D VAL^DIE(53.69,PSBIENS,.52,"F",PSBPST,"PSBRET","PSBFDA")
"RTN","PSBO",50,0)
 S PSBTR=$TR($G(PSBTR),"^",",")
"RTN","PSBO",51,0)
 I $G(PSBDIV)]"" D VAL^DIE(53.69,PSBIENS,.04,"F",$G(PSBDIV),"PSBRET","PSBFDA")
"RTN","PSBO",52,0)
 D VAL^DIE(53.69,PSBIENS,2,"F",PSBTR,"PSBRET","PSBFDA")
"RTN","PSBO",53,0)
 D VAL^DIE(53.69,PSBIENS,.12,"F","`"_PSBDFN,"PSBRET","PSBFDA")
"RTN","PSBO",54,0)
 I $G(PSBWLOC)]"" S PSBFDA(53.69,PSBIENS,.13)=PSBWLOC
"RTN","PSBO",55,0)
 D:$G(PSBWSORT)]"" VAL^DIE(53.69,PSBIENS,.15,"F",PSBWSORT,"PSBRET","PSBFDA")
"RTN","PSBO",56,0)
 D VAL^DIE(53.69,PSBIENS,.16,"F",PSBSTRT,"PSBRET","PSBFDA")
"RTN","PSBO",57,0)
 D VAL^DIE(53.69,PSBIENS,.17,"F",PSBSTRT(0),"PSBRET","PSBFDA")
"RTN","PSBO",58,0)
 D VAL^DIE(53.69,PSBIENS,.18,"F",PSBSTOP,"PSBRET","PSBFDA")
"RTN","PSBO",59,0)
 D VAL^DIE(53.69,PSBIENS,.19,"F",PSBSTOP(0),"PSBRET","PSBFDA")
"RTN","PSBO",60,0)
 D:$G(PSBINCL)]""
"RTN","PSBO",61,0)
 .D VAL^DIE(53.69,PSBIENS,.21,"F",+$P(PSBINCL,"^",1),"PSBRET","PSBFDA")
"RTN","PSBO",62,0)
 .D VAL^DIE(53.69,PSBIENS,.22,"F",+$P(PSBINCL,"^",2),"PSBRET","PSBFDA")
"RTN","PSBO",63,0)
 .D VAL^DIE(53.69,PSBIENS,.23,"F",+$P(PSBINCL,"^",3),"PSBRET","PSBFDA")
"RTN","PSBO",64,0)
 .D VAL^DIE(53.69,PSBIENS,.24,"F",+$P(PSBINCL,"^",4),"PSBRET","PSBFDA")
"RTN","PSBO",65,0)
 .D VAL^DIE(53.69,PSBIENS,.28,"F",+$P(PSBINCL,"^",5),"PSBRET","PSBFDA")
"RTN","PSBO",66,0)
 .D VAL^DIE(53.69,PSBIENS,.29,"F",+$P(PSBINCL,"^",6),"PSBRET","PSBFDA")
"RTN","PSBO",67,0)
 D:$G(PSBFUTR)]""
"RTN","PSBO",68,0)
 .D VAL^DIE(53.69,PSBIENS,.25,"F",+$P(PSBFUTR,"^",1),"PSBRET","PSBFDA")
"RTN","PSBO",69,0)
 .D VAL^DIE(53.69,PSBIENS,.26,"F",+$P(PSBFUTR,"^",2),"PSBRET","PSBFDA")
"RTN","PSBO",70,0)
 .D VAL^DIE(53.69,PSBIENS,.27,"F",+$P(PSBFUTR,"^",3),"PSBRET","PSBFDA")
"RTN","PSBO",71,0)
 .D VAL^DIE(53.69,PSBIENS,.41,"F",+$P(PSBFUTR,"^",4),"PSBRET","PSBFDA")
"RTN","PSBO",72,0)
 .D VAL^DIE(53.69,PSBIENS,.61,"F",$TR(PSBFUTR,"^ ","~"),"PSBRET","PSBFDA")
"RTN","PSBO",73,0)
 ;*68 add SIOPI flag when present
"RTN","PSBO",74,0)
 D:$D(PSBSIFL)
"RTN","PSBO",75,0)
 .D VAL^DIE(53.69,PSBIENS,3,"F",PSBSIFL,"PSBRET","PSBFDA")
"RTN","PSBO",76,0)
 ;*70 add PSBCLINORD indicator when present
"RTN","PSBO",77,0)
 D:$D(PSBCLINORD)
"RTN","PSBO",78,0)
 .D VAL^DIE(53.69,PSBIENS,4,"F",PSBCLINORD,"PSBRET","PSBFDA")
"RTN","PSBO",79,0)
 D FILE^DIE("","PSBFDA")
"RTN","PSBO",80,0)
 I "^SF"'[("^"_PSBTYPE) I $G(PSBLIST(0),"")]"" D LIST^PSBO1(.PSBLIST)
"RTN","PSBO",81,0)
 I "^SF"'[("^"_PSBTYPE) I $G(PSBCLLST(0),"")]"" D LIST^PSBO1(.PSBCLLST)
"RTN","PSBO",82,0)
 I $G(PSBDEV)]"" D PRINT^PSBO1 S RESULTS=$NAME(^TMP("PSBO",$J)) Q
"RTN","PSBO",83,0)
 D HFSOPEN^PSBUTL("RPC") I POP S ^TMP("PSBO",$J,1)="ERROR: UNABLE TO ACCESS HFS DIRECTORY "_$$DEFDIR^%ZISH(),^TMP("PSBO",$J,2)="PLEASE CHECK DIRECTORY WRITE PRIVILEGES." Q
"RTN","PSBO",84,0)
 U IO D DQ(+PSBIENS)
"RTN","PSBO",85,0)
 D HFSCLOSE^PSBUTL("RPC")
"RTN","PSBO",86,0)
 S RESULTS=$NAME(^TMP("PSBO",$J))
"RTN","PSBO",87,0)
 D:$G(PSBDEV)]"" PRINT^PSBO1
"RTN","PSBO",88,0)
 Q
"RTN","PSBO",89,0)
 ;
"RTN","PSBO",90,0)
XQ(PSBTYPE) ; Called via Kernel Menus
"RTN","PSBO",91,0)
 N PSBANS,PSBANS1,PSBRPT,PSBSAVE,DA,DIK,DR,DDSFILE,PSBCNT
"RTN","PSBO",92,0)
 D NEW^PSBO1(.PSBRPT,PSBTYPE)
"RTN","PSBO",93,0)
 I +PSBRPT(0)<1 W !,"Error: ",$P(PSBRPT(0),U,2) S DIR(0)="E" D ^DIR Q
"RTN","PSBO",94,0)
 S DA=+PSBRPT(0),DR="[PSBO "_PSBTYPE_"]",DDSFILE=53.69 D ^DDS
"RTN","PSBO",95,0)
 W @IOF
"RTN","PSBO",96,0)
 I 'PSBSAVE W !,"Cancelling Request..." S DIK="^PSB(53.69," D ^DIK W "Cancelled!"
"RTN","PSBO",97,0)
 D:PSBSAVE
"RTN","PSBO",98,0)
 .;Check Drug to Patient Relationship.
"RTN","PSBO",99,0)
 .I (PSBTYPE="BL")!(PSBTYPE="BZ") S PSBANS="" D CHECK^PSBO1  I PSBANS=0!($D(DIRUT)) W !,"Cancelling Request..." S DIK="^PSB(53.69," D ^DIK W "Cancelled!" Q
"RTN","PSBO",100,0)
 .;
"RTN","PSBO",101,0)
 .;*70  (CCR #1459 begin)
"RTN","PSBO",102,0)
 .I $O(PSBCL(""))]"" D
"RTN","PSBO",103,0)
 ..N PSBI
"RTN","PSBO",104,0)
 ..S PSBCL="" F PSBI=0:1 S PSBCL=$O(PSBCL(PSBCL)) Q:PSBCL=""
"RTN","PSBO",105,0)
 ..I PSBI=1 D  Q
"RTN","PSBO",106,0)
 ...S PSBCL=$O(PSBCL(PSBCL)),$P(^PSB(53.69,DA,4),U,3)=$O(^SC("B",PSBCL,""))
"RTN","PSBO",107,0)
 ..;
"RTN","PSBO",108,0)
 ..K DIR,Y
"RTN","PSBO",109,0)
 ..;
"RTN","PSBO",110,0)
 ..S PSBCL="" F PSBCNT=3:1 S PSBCL=$O(PSBCL(PSBCL)) Q:PSBCL=""  D
"RTN","PSBO",111,0)
 ...S DIR("A",PSBCNT)=(PSBCNT-2)_". "_PSBCL,PSBCL(PSBCL)=(PSBCNT-2)
"RTN","PSBO",112,0)
 ..;
"RTN","PSBO",113,0)
 ..S DIR(0)="NAO^1:"_(PSBCNT-3)   ;,DIR("B")=(PSBCNT-3)
"RTN","PSBO",114,0)
 ..S DIR("A",1)="Select the appropriate clinic:"
"RTN","PSBO",115,0)
 ..S DIR("A",2)=""
"RTN","PSBO",116,0)
 ..S DIR("A",(PSBCNT+1))=""
"RTN","PSBO",117,0)
 ..S DIR("A")="Enter a number 1 thru "_(PSBCNT-3)_": "
"RTN","PSBO",118,0)
 ..S DIR("?")="Select a number from 1 - "_(PSBCNT-3)_" or <Return> to exit"
"RTN","PSBO",119,0)
 ..;
"RTN","PSBO",120,0)
 ..D ^DIR
"RTN","PSBO",121,0)
 ..I Y=""!(Y=-1)!(Y=U) S PSBANS=0 Q
"RTN","PSBO",122,0)
 ..S PSBCL="" F  S PSBCL=$O(PSBCL(PSBCL)) Q:PSBCL=""  D
"RTN","PSBO",123,0)
 ...I PSBCL[" (Ward)" Q
"RTN","PSBO",124,0)
 ...I Y=PSBCL(PSBCL) S $P(^PSB(53.69,DA,4),U,3)=$O(^SC("B",PSBCL,""))
"RTN","PSBO",125,0)
 .K PSBCL
"RTN","PSBO",126,0)
 .I $G(PSBANS)=0 D  Q
"RTN","PSBO",127,0)
 ..W !,"Cancelling Request..." S DIK="^PSB(53.69," D ^DIK W "Cancelled!"
"RTN","PSBO",128,0)
 .;*70 (CCR #-1459 end)
"RTN","PSBO",129,0)
 .;
"RTN","PSBO",130,0)
 .;Allow "'BROWSER" Device
"RTN","PSBO",131,0)
 .S IOP=$$GET1^DIQ(53.69,DA_",",.06,"I"),PSBSIO=0 I IOP]"" D
"RTN","PSBO",132,0)
 ..S IOP="`"_IOP,%ZIS="N"
"RTN","PSBO",133,0)
 ..D ^%ZIS
"RTN","PSBO",134,0)
 ..I IO=IO(0) S PSBSIO=1
"RTN","PSBO",135,0)
 ..D HOME^%ZIS K IOP
"RTN","PSBO",136,0)
 .I $$GET1^DIQ(53.69,DA_",",.06)["BROWSER"!(PSBSIO=1) S IOP=$$GET1^DIQ(53.69,DA_",",.06)_";132" D ^%ZIS U IO D DQ(DA) D ^%ZISC K IOP Q
"RTN","PSBO",137,0)
 .;
"RTN","PSBO",138,0)
 .W @IOF,"Submitting Your Report Request to TaskMan..."
"RTN","PSBO",139,0)
 .S ZTIO=$$GET1^DIQ(53.69,DA_",",.06)
"RTN","PSBO",140,0)
 .S ZTDTH=$P(^PSB(53.69,DA,0),U,7)
"RTN","PSBO",141,0)
 .S ZTDESC="BCMA - "_$$GET1^DIQ(53.69,DA_",",.05)
"RTN","PSBO",142,0)
 .S ZTRTN="DQ^PSBO("_DA_")"
"RTN","PSBO",143,0)
 .D ^%ZTLOAD
"RTN","PSBO",144,0)
 .W "Submitted!",!,"Your Task Number Is: ",$G(ZTSK),!
"RTN","PSBO",145,0)
 K ^TMP("PSBO",$J)
"RTN","PSBO",146,0)
 Q
"RTN","PSBO",147,0)
 ;
"RTN","PSBO",148,0)
DQ(PSBRPT) ; Dequeue report from Taskman
"RTN","PSBO",149,0)
 N PSBDFN
"RTN","PSBO",150,0)
 Q:'$D(^PSB(53.69,PSBRPT,0))  ; No Such Report
"RTN","PSBO",151,0)
 S $P(^PSB(53.69,PSBRPT,0),U,8)=$G(ZTSK,"RPC")
"RTN","PSBO",152,0)
 D SETUP,@("EN^PSBO"_$P(PSBRPT(0),U,5))
"RTN","PSBO",153,0)
 K ^TMP("PSBO",$J),PSBSIFLG
"RTN","PSBO",154,0)
 S ZTREQ="@"
"RTN","PSBO",155,0)
 D CLEAN^PSBVT  ;*83 cleanup all PSB* variables for all reports called
"RTN","PSBO",156,0)
 Q
"RTN","PSBO",157,0)
 ;
"RTN","PSBO",158,0)
IOM() ; Returns good margin or not
"RTN","PSBO",159,0)
 Q:IOM'<132 1
"RTN","PSBO",160,0)
 W !,"**************************************************************"
"RTN","PSBO",161,0)
 W !,"* SORRY, Your selected DEVICE does not print 132 columns.    *"
"RTN","PSBO",162,0)
 W !,"**************************************************************"
"RTN","PSBO",163,0)
 W !
"RTN","PSBO",164,0)
 Q 0
"RTN","PSBO",165,0)
 ;
"RTN","PSBO",166,0)
VAL(PSBFLDS) ; Validate that fields in PSBFLDS are filled in
"RTN","PSBO",167,0)
 N PSB,PSBFLD,PSBMSG,PSBSTOP,PSBST,PSBDAYS S PSBSTRT=""
"RTN","PSBO",168,0)
 F PSB=1:1 Q:$P(PSBFLDS,";",PSB)=""  S PSBFLD=$P(PSBFLDS,";",PSB),PSBFLD(PSBFLD)=$$GET^DDSVAL(53.69,DA,PSBFLD)
"RTN","PSBO",169,0)
 I $D(PSBFLD(.11)) K:$E(PSBFLD(.11))="P" PSBFLD(.13),PSBFLD(.15) K:$E(PSBFLD(.11))="W" PSBFLD(.12)
"RTN","PSBO",170,0)
 S PSB=""  F  S PSB=$O(PSBFLD(PSB)) Q:PSB=""  D:PSBFLD(PSB)=""
"RTN","PSBO",171,0)
 .I '$D(PSBMSG) S PSBMSG(0)="UNABLE TO FILE REQUEST",PSBMSG(1)=" ",PSBMSG(2)="ERROR: MISSING DATA - ALL FIELDS ARE REQUIRED",PSBMSG(3)=" "
"RTN","PSBO",172,0)
 .D FIELD^DID(53.69,PSB,"","TITLE;LABEL","PSB")
"RTN","PSBO",173,0)
 .S Z="  Missing Field: "_$S(PSB("TITLE")]"":PSB("TITLE"),1:PSB("LABEL"))
"RTN","PSBO",174,0)
 .S PSBMSG($O(PSBMSG(""),-1)+1)=Z
"RTN","PSBO",175,0)
 ; Check Times
"RTN","PSBO",176,0)
 D:$G(PSBFLD(.16))
"RTN","PSBO",177,0)
 .S PSBSTRT=PSBFLD(.16)+$G(PSBFLD(.17))
"RTN","PSBO",178,0)
 .D:$P($$GET1^DIQ(53.69,DA_",",.01),U)["MH"
"RTN","PSBO",179,0)
 ..S PSBDAYS=$$GET1^DIQ(101.24,$$FIND1^DIC(101.24,"","X","ORRP BCMA MAH","B")_",",.42)  ;check maxdays
"RTN","PSBO",180,0)
 ..S:PSBDAYS="" PSBDAYS=7
"RTN","PSBO",181,0)
 ..S X=PSBSTRT\1 D H^%DTC S PSBST=%H+PSBDAYS    ;Determine stop date
"RTN","PSBO",182,0)
 .S PSBSTOP=$S($G(PSBFLD(.18)):PSBFLD(.18),1:PSBFLD(.16))+$G(PSBFLD(.19))
"RTN","PSBO",183,0)
 .I PSBSTOP<PSBSTRT S Y=$O(PSBMSG(""),-1)+1,PSBMSG(Y)="  Date: Stop Date/Time is before Start Date/Time"
"RTN","PSBO",184,0)
 .I $P($$GET1^DIQ(53.69,DA_",",.01),U)["MH" S X=PSBSTOP\1 D H^%DTC I %H>PSBST S Y=$O(PSBMSG(""),-1)+1,PSBMSG(Y)="  The date range cannot exceed "_PSBDAYS_" day(s) as defined in the CPRS 'MAXIMUM DAYS BACK' parameter"
"RTN","PSBO",185,0)
 Q:'$D(PSBMSG)  ; All is well
"RTN","PSBO",186,0)
 D MSG^DDSUTL(.PSBMSG)
"RTN","PSBO",187,0)
 S DDSERROR=1
"RTN","PSBO",188,0)
 Q
"RTN","PSBO",189,0)
 ;
"RTN","PSBO",190,0)
SETUP ; Setup parameters for the report in PSBRPT
"RTN","PSBO",191,0)
 N PSBWRDL,PSBINDX,PSBWRDA,QQ,PSBSORT,RECS
"RTN","PSBO",192,0)
 S RECS=0          ;init RECS found to 0       *70
"RTN","PSBO",193,0)
 K ^TMP("PSBO",$J)
"RTN","PSBO",194,0)
 F X=0,.1,.2,.3,.4,.5,1 S PSBRPT(X)=$G(^PSB(53.69,PSBRPT,X))
"RTN","PSBO",195,0)
 I $D(^PSB(53.69,PSBRPT,2)) M PSBRPT(2)=^PSB(53.69,PSBRPT,2)
"RTN","PSBO",196,0)
 I $D(^PSB(53.69,PSBRPT,3)) M PSBRPT(3)=^PSB(53.69,PSBRPT,3)
"RTN","PSBO",197,0)
 I $D(^PSB(53.69,PSBRPT,4)) M PSBRPT(4)=^PSB(53.69,PSBRPT,4)      ;*68
"RTN","PSBO",198,0)
 I $G(PSBRPT(4))="" S PSBRPT(4)="^I^"          ;if null def to I   *70
"RTN","PSBO",199,0)
 S PSBRPT(.52)=$P($G(^PSB(53.69,PSBRPT,.5)),U,2)
"RTN","PSBO",200,0)
 S PSBSIFLG=$P($G(PSBRPT(4)),U)                                   ;*68
"RTN","PSBO",201,0)
 S PSBCLINORD=$S($P($G(PSBRPT(4)),U,2)="C":1,1:0)
"RTN","PSBO",202,0)
 I $P(PSBRPT(0),"-")="ST",PSBRPT(3)]"" Q   ;Running a MSF report PSB*3*28
"RTN","PSBO",203,0)
 I $P(PSBRPT(0),"-")="SF",PSBRPT(.52)]"" Q   ;Running a MSF report PSB*3*28
"RTN","PSBO",204,0)
 ;
"RTN","PSBO",205,0)
 S PSBSORT=$P(PSBRPT(.1),U,1)               ;init PSBSORT         ;*70
"RTN","PSBO",206,0)
 ;
"RTN","PSBO",207,0)
 ;* * Patient Mode * *
"RTN","PSBO",208,0)
 I PSBSORT="P" D  I 'PSBDFN Q RECS
"RTN","PSBO",209,0)
 .S PSBDFN=+$P(PSBRPT(.1),U,2) Q:'PSBDFN
"RTN","PSBO",210,0)
 .N VA,VADM S DFN=PSBDFN D DEM^VADPT
"RTN","PSBO",211,0)
 .Q:(VADM(1)="")!(VA("PID")="")
"RTN","PSBO",212,0)
 .S ^TMP("PSBO",$J,PSBDFN,0)=VADM(1)_U_VA("PID"),^TMP("PSBO",$J,"B",VADM(1),PSBDFN)=""
"RTN","PSBO",213,0)
 .S RECS=1
"RTN","PSBO",214,0)
 ;
"RTN","PSBO",215,0)
 ;* * WARDs per Nurse file group & All patient DFN's * *          ;*70
"RTN","PSBO",216,0)
 I PSBSORT="W" D
"RTN","PSBO",217,0)
 .S PSBWRD=$P(PSBRPT(.1),U,3) Q:'PSBWRD
"RTN","PSBO",218,0)
 .D WARD^NURSUT5("L^"_PSBWRD,.PSBWRDA)
"RTN","PSBO",219,0)
 .Q:$O(PSBWRDA(""))=""
"RTN","PSBO",220,0)
 .S QQ="" F  S QQ=$O(PSBWRDA(PSBWRD,2,QQ)) Q:QQ=""  S PSBWRDL=$P(PSBWRDA(PSBWRD,2,QQ,.01),U,2) D
"RTN","PSBO",221,0)
 ..F PSBDFN=0:0 S PSBDFN=$O(^DPT("CN",PSBWRDL,PSBDFN)) Q:'PSBDFN  D
"RTN","PSBO",222,0)
 ...S DFN=PSBDFN D DEM^VADPT
"RTN","PSBO",223,0)
 ...Q:(VADM(1)="")!(VA("PID")="")
"RTN","PSBO",224,0)
 ...S ^TMP("PSBO",$J,PSBDFN,0)=VADM(1)_U_VA("PID")
"RTN","PSBO",225,0)
 ...; Determine Sort or default to Pt Name...
"RTN","PSBO",226,0)
 ...S:$P(PSBRPT(.1),U,5)="P" PSBINDX=VADM(1)
"RTN","PSBO",227,0)
 ...I $P(PSBRPT(.1),U,5)="B" S PSBINDX=$P($G(^DPT(PSBDFN,.101)),U) S:PSBINDX="" PSBINDX="** NO ROOM BED **"
"RTN","PSBO",228,0)
 ...S:$P(PSBRPT(.1),U,5)="" PSBINDX=VADM(1)
"RTN","PSBO",229,0)
 ...S:$G(PSBINDX)="" PSBINDX=VADM(1)
"RTN","PSBO",230,0)
 ...S ^TMP("PSBO",$J,"B",PSBINDX,PSBDFN)=""
"RTN","PSBO",231,0)
 .S:$D(^TMP("PSBO",$J)) RECS=1
"RTN","PSBO",232,0)
 ;
"RTN","PSBO",233,0)
 ;* * Clinics selected & All patient DFN's * *                    ;*70
"RTN","PSBO",234,0)
 I PSBSORT="C" D
"RTN","PSBO",235,0)
 .Q:'$D(PSBRPT(2))                  ;no Clinics selected
"RTN","PSBO",236,0)
 .D CLIN(.PSBRPT)
"RTN","PSBO",237,0)
 .M ^TMP("PSBO",$J)=^TMP("PSJCL",$J) K ^TMP("PSJCL",$J)
"RTN","PSBO",238,0)
 .S:$D(^TMP("PSBO",$J)) RECS=1
"RTN","PSBO",239,0)
 ;
"RTN","PSBO",240,0)
 Q
"RTN","PSBO",241,0)
 ;Q RECS
"RTN","PSBO",242,0)
 ;
"RTN","PSBO",243,0)
WRAP(X,Y,Z) ; Quick text wrap
"RTN","PSBO",244,0)
 ;
"RTN","PSBO",245,0)
 ; Input Parameters Description:
"RTN","PSBO",246,0)
 ;  X: Left Column of display [Optional]
"RTN","PSBO",247,0)
 ;  Y: Cols to wrap in [Optional]
"RTN","PSBO",248,0)
 ;  Z: Text to wrap [Optional]
"RTN","PSBO",249,0)
 ;
"RTN","PSBO",250,0)
 N PSB
"RTN","PSBO",251,0)
 F  Q:'$L(Z)  D
"RTN","PSBO",252,0)
 .W:$X>X !
"RTN","PSBO",253,0)
 .W:$X<X ?X
"RTN","PSBO",254,0)
 .I $L(Z)<Y W Z S Z="" Q
"RTN","PSBO",255,0)
 .F PSB=Y:-1:0 Q:$E(Z,PSB)=" "
"RTN","PSBO",256,0)
 .S:PSB<1 PSB=Y
"RTN","PSBO",257,0)
 .W $E(Z,1,PSB)
"RTN","PSBO",258,0)
 .S Z=$E(Z,PSB+1,$L(Z))
"RTN","PSBO",259,0)
 Q ""
"RTN","PSBO",260,0)
 ;
"RTN","PSBO",261,0)
PRNEFF(PSBEIECMT,PSBIEN) ;Check for PRN Error comment
"RTN","PSBO",262,0)
 N PSBCMTCH
"RTN","PSBO",263,0)
 I $P($G(PSBRPT(.2)),U,8)=0 S PSBCMTCH=0 F  S PSBCMTCH=$O(^PSB(53.79,PSBIEN,.3,PSBCMTCH)) Q:PSBCMTCH=""  D
"RTN","PSBO",264,0)
 .I $P($G(^PSB(53.79,PSBIEN,.3,PSBCMTCH,0)),U)["**Pain Score of" S PSBEIECMT=" **This Pain Score may have been Entered in Error. See Vitals Package.**"
"RTN","PSBO",265,0)
 Q PSBEIECMT
"RTN","PSBO",266,0)
 ;
"RTN","PSBO",267,0)
FILTERCO ; rebuild TMP using needed recs and remove clinics not wanted
"RTN","PSBO",268,0)
 N QQ,COCNT,CLNAM
"RTN","PSBO",269,0)
 I '$G(PSBIENS) N PSBIENS S PSBIENS=PSBRPT
"RTN","PSBO",270,0)
 S COCNT=0 K ^TMP("PSJTMP",$J)
"RTN","PSBO",271,0)
 K ^TMP("PSJTMP",$J)
"RTN","PSBO",272,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBO",273,0)
 . Q:$P($G(^TMP("PSJ",$J,QQ,0)),U,3)["P"
"RTN","PSBO",274,0)
 . S CLNAM=$P($G(^TMP("PSJ",$J,QQ,0)),U,11) Q:CLNAM=""   ;Not a CO
"RTN","PSBO",275,0)
 . ;ignore orders that are CO and for a Clinic not asked for
"RTN","PSBO",276,0)
 . I CLNAM]"",'$D(^PSB(53.69,+PSBIENS,2,"B",CLNAM)) Q
"RTN","PSBO",277,0)
 . S COCNT=COCNT+1
"RTN","PSBO",278,0)
 . M ^TMP("PSJTMP",$J,COCNT)=^TMP("PSJ",$J,QQ)
"RTN","PSBO",279,0)
 K ^TMP("PSJ",$J) M ^TMP("PSJ",$J)=^TMP("PSJTMP",$J)
"RTN","PSBO",280,0)
 K ^TMP("PSJTMP",$J)
"RTN","PSBO",281,0)
 S:'$D(^TMP("PSJ",$J)) ^TMP("PSJ",$J,1,0)=-1
"RTN","PSBO",282,0)
 Q
"RTN","PSBO",283,0)
 ;
"RTN","PSBO",284,0)
CLIN(RPTARR,DFNLST) ;Build DFN list of patient orders per Clinics selected
"RTN","PSBO",285,0)
 ; Input:  RPTARR - Report request array from file 53.69.  (required) 
"RTN","PSBO",286,0)
 ;         DFNLST - pass by ref array name if array needed and not
"RTN","PSBO",287,0)
 ;                  a tmp global pass a 1.  (optional)
"RTN","PSBO",288,0)
 ;                                           default is TMP global
"RTN","PSBO",289,0)
 ;         DFNLST - array of DFN's only   
"RTN","PSBO",290,0)
 ;
"RTN","PSBO",291,0)
 N DFNARR,GLB,ROOT,STARTDT
"RTN","PSBO",292,0)
 K ^TMP("PSJCL",$J)
"RTN","PSBO",293,0)
 S STARTDT=$P($G(RPTARR(.1)),U,6)
"RTN","PSBO",294,0)
 S:STARTDT="" STARTDT=$P($$NOW^XLFDT,".")
"RTN","PSBO",295,0)
 ; 
"RTN","PSBO",296,0)
 ;Begin query read with Unit Dose xref and report start date range
"RTN","PSBO",297,0)
 S GLB=$NA(^PS(55,"AUDC",STARTDT)),ROOT=$E(GLB,1,13)
"RTN","PSBO",298,0)
 D QUERY(GLB,ROOT,9999999,.RPTARR,.DFNARR)
"RTN","PSBO",299,0)
 ;
"RTN","PSBO",300,0)
 ;Now do query read for IV xref and report start date range
"RTN","PSBO",301,0)
 S GLB=$NA(^PS(55,"AIVC",STARTDT)),ROOT=$E(GLB,1,13)
"RTN","PSBO",302,0)
 D QUERY(GLB,ROOT,9999999,.RPTARR,.DFNARR)
"RTN","PSBO",303,0)
 ;
"RTN","PSBO",304,0)
 I $G(DFNLST) M DFNLST=DFNARR Q  ;if DFNLST then return array and quit
"RTN","PSBO",305,0)
 D BLDTMP(.DFNARR)
"RTN","PSBO",306,0)
 Q
"RTN","PSBO",307,0)
 ;
"RTN","PSBO",308,0)
QUERY(GLB,ROOT,RPSTOPDT,RPTAR,DFNAR) ;Loops thru global xref via $Query
"RTN","PSBO",309,0)
 ;                            for qualifying recs to find DFN's
"RTN","PSBO",310,0)
 N CLN,CLNNAM,DFN,STPDT,NOD1,NOD2
"RTN","PSBO",311,0)
 I GLB["UD" D
"RTN","PSBO",312,0)
 .S NOD1=5,NOD2=8
"RTN","PSBO",313,0)
 E  D
"RTN","PSBO",314,0)
 .S NOD1="IV",NOD2="DSS"
"RTN","PSBO",315,0)
 ;
"RTN","PSBO",316,0)
 F  S GLB=$Q(@GLB) Q:$E(GLB,1,13)'=ROOT  D
"RTN","PSBO",317,0)
 .S STPDT=$P($QS(GLB,3),"."),CLN=$QS(GLB,4),DFN=$QS(GLB,5),OR=$QS(GLB,6)
"RTN","PSBO",318,0)
 .Q:$D(DFNAR(DFN))                      ;quit if DFN already on ARR
"RTN","PSBO",319,0)
 .S CLNODE=$G(^PS(55,DFN,NOD1,OR,NOD2))
"RTN","PSBO",320,0)
 .Q:'$$CLINIC(CLNODE)                   ;not active bcma clin order
"RTN","PSBO",321,0)
 .S CLNNAM=$$GET1^DIQ(44,CLN,.01)       ;get clinic name
"RTN","PSBO",322,0)
 .Q:STPDT>RPSTOPDT                      ;quit if rec beyond stop date
"RTN","PSBO",323,0)
 .Q:'$D(RPTAR(2,"B",CLNNAM))            ;quit if Not on Cln sel list
"RTN","PSBO",324,0)
 .;
"RTN","PSBO",325,0)
 .S DFNAR(DFN)=""                       ;Keep - Set DFN in array
"RTN","PSBO",326,0)
 Q
"RTN","PSBO",327,0)
 ;
"RTN","PSBO",328,0)
BLDTMP(ARR) ;Build Tmp global for DFN's to be included on the report
"RTN","PSBO",329,0)
 N VA,VADM,PSJINDX
"RTN","PSBO",330,0)
 F DFN=0:0 S DFN=$O(ARR(DFN)) Q:'DFN  D
"RTN","PSBO",331,0)
 .K VA,VADM D DEM^VADPT
"RTN","PSBO",332,0)
 .Q:(VADM(1)="")!(VA("PID")="")
"RTN","PSBO",333,0)
 .S ^TMP("PSJCL",$J,DFN,0)=VADM(1)_U_VA("PID")
"RTN","PSBO",334,0)
 .S PSJINDX=VADM(1)
"RTN","PSBO",335,0)
 .S ^TMP("PSJCL",$J,"B",PSJINDX,DFN)=""
"RTN","PSBO",336,0)
 .S RECS=1
"RTN","PSBO",337,0)
 Q
"RTN","PSBO",338,0)
 ;
"RTN","PSBO",339,0)
CLINIC(CL) ;Is this a Clinic order that would show on the VDL in CO mode also?
"RTN","PSBO",340,0)
 Q:'($P(CL,"^",2)?7N!($P(CL,"^",2)?7N1".".N)) 0  ;no appt date, IM ord
"RTN","PSBO",341,0)
 Q:'$D(^PS(53.46,"B",+CL)) 0                     ;no PTR to 44, IM ord
"RTN","PSBO",342,0)
 N A S A=$O(^PS(53.46,"B",+CL,"")) Q:'A 0        ;no 53.46 ien, IM ord
"RTN","PSBO",343,0)
 Q $P(^PS(53.46,A,0),"^",4)                      ;Send to BCMA? flag
"RTN","PSBO1")
0^22^B35906614^B19597423
"RTN","PSBO1",1,0)
PSBO1 ;BIRMINGHAM/EFC-BCMA OUTPUTS ;03/06/16 3:06pm
"RTN","PSBO1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**4,13,32,2,43,28,70,83**;Mar 2004;Build 89
"RTN","PSBO1",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBO1",4,0)
 ;
"RTN","PSBO1",5,0)
 ; Reference/IA
"RTN","PSBO1",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBO1",7,0)
 ;
"RTN","PSBO1",8,0)
 ;*70 - add ablility to update List multiple for Clinic names
"RTN","PSBO1",9,0)
 ;*83 - add Function GETREMOV to find removes for associated MRR Gives
"RTN","PSBO1",10,0)
 ;
"RTN","PSBO1",11,0)
NEW(RESULTS,PSBRTYP) ; Create a new report request
"RTN","PSBO1",12,0)
 ; Called interactively and via RPCBroker
"RTN","PSBO1",13,0)
 K RESULTS
"RTN","PSBO1",14,0)
 ; Check Type
"RTN","PSBO1",15,0)
 I '$F("DL^MD^MH^ML^MM^MV^MT^PE^PM^WA^BL^PI^AL^DO^VT^PF^XA^ST^SF^IV^CM^CP^CE^CI^BZ^",PSBRTYP) S RESULTS(0)="-1^Invalid Report Type" Q
"RTN","PSBO1",16,0)
 I '+$G(DUZ) S RESULTS(0)="-1^Undefined User" Q
"RTN","PSBO1",17,0)
 I '$G(DUZ(2)) S RESULTS(0)="-1^Undefined Division" Q
"RTN","PSBO1",18,0)
 ; Lock Log
"RTN","PSBO1",19,0)
 L +(^PSB(53.69,0)):$S($G(DILOCKTM)>30:DILOCKTM,1:30)
"RTN","PSBO1",20,0)
 E  S RESULTS(0)="-1^Request Log Locked" Q
"RTN","PSBO1",21,0)
 ; Generate Unique Entry and Create
"RTN","PSBO1",22,0)
 F  D NOW^%DTC S X=$E(%_"000000",1,14) S X=(1700+$E(X,1,3))_$E(X,4,14),X=PSBRTYP_"-"_$TR(X,".","-") Q:'$D(^PSB(53.69,"B",X))
"RTN","PSBO1",23,0)
 S DIC="^PSB(53.69,",DIC(0)="L"
"RTN","PSBO1",24,0)
 S DIC("DR")=".02///N;.03////^S X=DUZ;.04////^S X=DUZ(2);.05///^S X=PSBRTYP"
"RTN","PSBO1",25,0)
 K DD,DO D FILE^DICN
"RTN","PSBO1",26,0)
 L -(^PSB(53.69,0))
"RTN","PSBO1",27,0)
 ; Okay, setup return and Boogie
"RTN","PSBO1",28,0)
 I +Y<1 S RESULTS(0)="-1^Error Creating Request"
"RTN","PSBO1",29,0)
 E  S RESULTS(0)=Y
"RTN","PSBO1",30,0)
 K DO
"RTN","PSBO1",31,0)
 Q
"RTN","PSBO1",32,0)
 ;
"RTN","PSBO1",33,0)
PRINT ;
"RTN","PSBO1",34,0)
 N ZTDTH,ZTRTN,ZTSK,ZTDESC,ZTSAVE,DA
"RTN","PSBO1",35,0)
 S DA=+PSBRPT(0)
"RTN","PSBO1",36,0)
 S IOP=$$GET1^DIQ(53.69,DA_",",.06,"I"),PSBSIO=0 I IOP]"" D
"RTN","PSBO1",37,0)
 .S IOP="`"_IOP,%ZIS="N"
"RTN","PSBO1",38,0)
 .D ^%ZIS
"RTN","PSBO1",39,0)
 .I IO=IO(0) S PSBSIO=1
"RTN","PSBO1",40,0)
 .D HOME^%ZIS K IOP
"RTN","PSBO1",41,0)
 I $$GET1^DIQ(53.69,DA_",",.06)["BROWSER"!(PSBSIO=1) S IOP=$$GET1^DIQ(53.69,DA_",",.06)_";132" D ^%ZIS U IO D DQ^PSBO(DA) D ^%ZISC K IOP Q
"RTN","PSBO1",42,0)
 W @IOF,"Submitting Your Report Request to TaskMan..."
"RTN","PSBO1",43,0)
 S ZTIO=$$GET1^DIQ(53.69,DA_",",.06)_";132"
"RTN","PSBO1",44,0)
 S ZTDTH=$S($$GET1^DIQ(53.69,DA_",",.07,"I")]"":$$GET1^DIQ(53.69,DA_",",.07,"I"),1:$H)
"RTN","PSBO1",45,0)
 S ZTDESC="BCMA - "_$$GET1^DIQ(53.69,DA_",",.05)
"RTN","PSBO1",46,0)
 S ZTRTN="DQ^PSBO("_DA_")"
"RTN","PSBO1",47,0)
 F I="PSBDFN","PSBTYPE" S ZTSAVE(I)=""
"RTN","PSBO1",48,0)
 I $G(PSBORDNM)]"" S ZTSAVE("PSBORDNM")=""
"RTN","PSBO1",49,0)
 D ^%ZTLOAD
"RTN","PSBO1",50,0)
 I $D(ZTSK) S ^TMP("PSBO",$J,1)="0^Report queued. (Task #"_ZTSK_")"
"RTN","PSBO1",51,0)
 E  S ^TMP("PSBO",$J,1)="-1^Task Rejected."
"RTN","PSBO1",52,0)
 Q
"RTN","PSBO1",53,0)
 ;
"RTN","PSBO1",54,0)
LIST(XLIST) ;  Place List Criteria into subfile #53.692 (multiple)
"RTN","PSBO1",55,0)
 F XL1=$O(XLIST("")):1:$O(XLIST("B"),-1)  Q:+XL1=""  D
"RTN","PSBO1",56,0)
 .;*70 add"MM", "WA" rpts to accept array list of selected clinics
"RTN","PSBO1",57,0)
 .;    build reports that use Clinic search list array
"RTN","PSBO1",58,0)
 .N PSBCLN
"RTN","PSBO1",59,0)
 .F CLN="WA","DL","MM","CM","CP","CI","CE" S PSBCLN(CLN)=""
"RTN","PSBO1",60,0)
 .I ($P(XLIST(XL1),U)=PSBTYPE)!($D(PSBCLN(PSBTYPE))) D
"RTN","PSBO1",61,0)
 ..K PSBFDA,PSBRET,PSBIENX D CLEAN^DILF
"RTN","PSBO1",62,0)
 ..S PSBIENX="+"_(XL1+1)_","_PSBIENS
"RTN","PSBO1",63,0)
 ..D VAL^DIE(53.692,"+"_(XL1+1)_","_PSBIENS,.01,"F",$TR(XLIST(XL1),"^","~"),"PSBRET","PSBFDA")
"RTN","PSBO1",64,0)
 ..D UPDATE^DIE("","PSBFDA","PSBIENX","PSBRET")
"RTN","PSBO1",65,0)
 Q
"RTN","PSBO1",66,0)
 ;
"RTN","PSBO1",67,0)
CHECK ;Beginning of PSB*1*10
"RTN","PSBO1",68,0)
 K ^TMP("PSJ",$J),PSBCL                                   ;[*70-1459]
"RTN","PSBO1",69,0)
 N PSBDFN,PSBBAR,PSBDRUG,PSBFLAG,PSBPNM,PSBNDX,PSBX
"RTN","PSBO1",70,0)
 S PSBFLAG="",PSBBAR=$P($P($G(^PSB(53.69,DA,.3)),U,1),"~",2)
"RTN","PSBO1",71,0)
 S PSBDRUG=$$GET1^DIQ(53.69,DA_",",.31)
"RTN","PSBO1",72,0)
 S PSBDFN=$$GET1^DIQ(53.69,DA_",",.12,"I") S:$G(PSBDFN) PSBFLAG=1
"RTN","PSBO1",73,0)
 D EN^PSJBCMA(PSBDFN)
"RTN","PSBO1",74,0)
 ;
"RTN","PSBO1",75,0)
 F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:'PSBX  D
"RTN","PSBO1",76,0)
 .K Y,PSBORD,PSBPNM,PSBNDX
"RTN","PSBO1",77,0)
 .S PSBCL=$P(^TMP("PSJ",$J,PSBX,0),U,11)                         ;[*70-1459]
"RTN","PSBO1",78,0)
 .M PSBORD=^TMP("PSJ",$J,PSBX)
"RTN","PSBO1",79,0)
 .F PSBNDX=700,850,950  D
"RTN","PSBO1",80,0)
 ..F Y=0:0 S Y=$O(PSBORD(PSBNDX,Y)) Q:'Y  D
"RTN","PSBO1",81,0)
 ...I $P($G(PSBORD(1)),U,7)'="A" Q
"RTN","PSBO1",82,0)
 ...S PSBPNM=$P(PSBORD(PSBNDX,Y,0),U,1)
"RTN","PSBO1",83,0)
 ...I PSBNDX=700,PSBPNM=PSBBAR D  Q                              ;[*70-1459]
"RTN","PSBO1",84,0)
 ....S PSBFLAG=0                                                 ;[*70-1459]
"RTN","PSBO1",85,0)
 ....I PSBCL]"" S PSBCL(PSBCL)=""                                ;[*70-1459]
"RTN","PSBO1",86,0)
 ....E  S PSBCL($$GET1^DIQ(2,$P(PSBORD(0),U),.1)_" (Ward)")=""   ;[*70-1459]
"RTN","PSBO1",87,0)
 ...I PSBNDX=850,$D(^PSDRUG("A526",PSBBAR,PSBPNM)) D  Q          ;[*70-1459]
"RTN","PSBO1",88,0)
 ....S PSBFLAG=0                                                 ;[*70-1459]
"RTN","PSBO1",89,0)
 ....I PSBCL]"" S PSBCL(PSBCL)=""                                ;[*70-1459]
"RTN","PSBO1",90,0)
 ....E  S PSBCL($$GET1^DIQ(2,$P(PSBORD(0),U),.1)_" (Ward)")=""   ;[*70-1459]
"RTN","PSBO1",91,0)
 ...I PSBNDX=950,$D(^PSDRUG("A527",PSBBAR,PSBPNM)) D  Q          ;[*70-1459]
"RTN","PSBO1",92,0)
 ....S PSBFLAG=0                                                 ;[*70-1459]
"RTN","PSBO1",93,0)
 ....I PSBCL]"" S PSBCL(PSBCL)=""                                ;[*70-1459]
"RTN","PSBO1",94,0)
 ....E  S PSBCL($$GET1^DIQ(2,$P(PSBORD(0),U),.1)_" (Ward)")=""   ;[*70-1459]
"RTN","PSBO1",95,0)
 I PSBFLAG=1 D
"RTN","PSBO1",96,0)
 .W !,"Patient is not currently on medication: ",PSBDRUG
"RTN","PSBO1",97,0)
 .K DIRUT,DIR
"RTN","PSBO1",98,0)
 .S DIR("A")="Do you want to continue"
"RTN","PSBO1",99,0)
 .S DIR(0)="Y"
"RTN","PSBO1",100,0)
 .D ^DIR
"RTN","PSBO1",101,0)
 .S PSBANS=+Y W !
"RTN","PSBO1",102,0)
 Q
"RTN","PSBO1",103,0)
 ;
"RTN","PSBO1",104,0)
GETREMOV(DFN) ;Process removal type XREFS and return any RM's found with key info
"RTN","PSBO1",105,0)
 N PSBGNODE,PSBIEN
"RTN","PSBO1",106,0)
 K ^TMP("PSB",$J,"RM")
"RTN","PSBO1",107,0)
 ;
"RTN","PSBO1",108,0)
 ;Xref APATCH search
"RTN","PSBO1",109,0)
 S PSBGNODE="^PSB(53.79,"_"""APATCH"""_","_DFN_")"
"RTN","PSBO1",110,0)
 F  S PSBGNODE=$Q(@PSBGNODE) Q:PSBGNODE']""  Q:($QS(PSBGNODE,2)'="APATCH")!($QS(PSBGNODE,3)'=DFN)  D
"RTN","PSBO1",111,0)
 .S PSBIEN=$QS(PSBGNODE,5)
"RTN","PSBO1",112,0)
 .Q:'$D(^PSB(53.79,PSBIEN,.5,1))
"RTN","PSBO1",113,0)
 .Q:$P(^PSB(53.79,PSBIEN,.5,1,0),U,4)'="PATCH"
"RTN","PSBO1",114,0)
 .Q:$P(^PSB(53.79,PSBIEN,0),U,9)'="G"
"RTN","PSBO1",115,0)
 .D SETTMP     ;get remove info and save to Tmp
"RTN","PSBO1",116,0)
 ;
"RTN","PSBO1",117,0)
 ;Xref AMRR search
"RTN","PSBO1",118,0)
 S PSBGNODE="^PSB(53.79,"_"""AMRR"""_","_DFN_")"
"RTN","PSBO1",119,0)
 F  S PSBGNODE=$Q(@PSBGNODE) Q:PSBGNODE']""  Q:($QS(PSBGNODE,2)'="AMRR")!($QS(PSBGNODE,3)'=DFN)  D
"RTN","PSBO1",120,0)
 .S PSBIEN=$QS(PSBGNODE,5)
"RTN","PSBO1",121,0)
 .Q:'$D(^PSB(53.79,PSBIEN,.5,1))
"RTN","PSBO1",122,0)
 .Q:'$P(^PSB(53.79,PSBIEN,.5,1,0),U,6)
"RTN","PSBO1",123,0)
 .Q:$P(^PSB(53.79,PSBIEN,0),U,9)'="G"
"RTN","PSBO1",124,0)
 .D SETTMP     ;get remove info and save to Tmp
"RTN","PSBO1",125,0)
 Q
"RTN","PSBO1",126,0)
 ;
"RTN","PSBO1",127,0)
SETTMP(IEN) ;get and set MRR info for printing
"RTN","PSBO1",128,0)
 N RMDT,ONX
"RTN","PSBO1",129,0)
 S RMDT=$$GET1^DIQ(53.79,PSBIEN,"SCHEDULED REMOVAL TIME","I")
"RTN","PSBO1",130,0)
 S ONX=$$GET1^DIQ(53.79,PSBIEN,"ORDER REFERENCE NUMBER")
"RTN","PSBO1",131,0)
 K ^TMP("PSJ1",$J) D EN^PSJBCMA1(DFN,ONX,1)
"RTN","PSBO1",132,0)
 Q:$G(^TMP("PSJ1",$J,0))=-1
"RTN","PSBO1",133,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,1)=RMDT                       ;RMDT
"RTN","PSBO1",134,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,2)=ONX                        ;ONX
"RTN","PSBO1",135,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,3)=$P(^TMP("PSJ1",$J,2),U,2)  ;OITX
"RTN","PSBO1",136,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,4)=$P(^TMP("PSJ1",$J,1),U,10) ;OSTS
"RTN","PSBO1",137,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,5)=$P(^TMP("PSJ1",$J,4),U,7)  ;OSPO
"RTN","PSBO1",138,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,6)=$P(^TMP("PSJ1",$J,0),U,11) ;CLOR
"RTN","PSBO1",139,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,7)=$P(^TMP("PSJ1",$J,2),U,3)  ;DOSE
"RTN","PSBO1",140,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,8)=$P(^TMP("PSJ1",$J,1),U,13) ;MRNM
"RTN","PSBO1",141,0)
 S $P(^TMP("PSB",$J,"RM",PSBIEN),U,9)=$P(^TMP("PSJ1",$J,1),U,5)  ;SM
"RTN","PSBO1",142,0)
 S ^TMP("PSB",$J,"RM","B",ONX,PSBIEN)=""               ;ORDER NUM XREF
"RTN","PSBO1",143,0)
 Q
"RTN","PSBOCE")
0^32^B126384546^B101068370
"RTN","PSBOCE",1,0)
PSBOCE ;BIRMINGHAM/TEJ-Expired/DC'd/EXPIRING ORDERS REPORT ;03/06/16 3:06pm
"RTN","PSBOCE",2,0)
 ;;3.0;BAR CODE MED ADMIN;**32,50,68,70,83**;Mar 2004;Build 89
"RTN","PSBOCE",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBOCE",4,0)
 ;
"RTN","PSBOCE",5,0)
 ; Reference/IA
"RTN","PSBOCE",6,0)
 ; GETSIOPI^PSJBCMA5/5763
"RTN","PSBOCE",7,0)
 ; 
"RTN","PSBOCE",8,0)
 ;*68 - allow SIOPI builder to accomodate more than 1 line in SI array
"RTN","PSBOCE",9,0)
 ;*70 - pass global var PSBCLINORD when Rpc Psbcsutl is called again
"RTN","PSBOCE",10,0)
 ;    - add clinic name to new array PSBCLIN to track clinic name per 
"RTN","PSBOCE",11,0)
 ;       order for printed output.
"RTN","PSBOCE",12,0)
 ;    - pass global var PSBCLINORD when RPC psbcsutl is called again
"RTN","PSBOCE",13,0)
 ;    - convert date/time fields to date only for CO and admin window 
"RTN","PSBOCE",14,0)
 ;       to 7 days +/-.
"RTN","PSBOCE",15,0)
 ;*83 - add Removes as new event for Next Action column:
"RTN","PSBOCE",16,0)
 ;         Remove date@time
"RTN","PSBOCE",17,0)
 ;
"RTN","PSBOCE",18,0)
EN ;
"RTN","PSBOCE",19,0)
 N PSBX1X,RESULTS,RESULT,PSBFUTR,X2,X3,QQ,PSBCLIN,PSBSRCHL,PSBHDR,EXPIREHDG,FUTUREHDG,FUTUREX,REMOV,PSBNXTX,PSBNXTX1,PSBNXTX2      ;*83
"RTN","PSBOCE",20,0)
 S PSBCLINORD=$S($P($G(PSBRPT(4)),U,2)="C":1,1:0)                 ;*70
"RTN","PSBOCE",21,0)
 S EXPIREHDG=$S(PSBCLINORD:"Expired/DC'd within last 7 days",1:"Expired/DC'd")
"RTN","PSBOCE",22,0)
 S FUTUREHDG=$S(PSBCLINORD:"Expiring within next 7 days",1:"Expiring Tomorrow")
"RTN","PSBOCE",23,0)
 S PSBFUTR=$TR(PSBRPT(1),"~",U)
"RTN","PSBOCE",24,0)
 S (PSBOCRIT,PSBXFLG,PSBCFLG)=""   ; Ord Status srch crit - "A"ctve, "D"C ed, "E"xpred"
"RTN","PSBOCE",25,0)
 S:$P(PSBFUTR,U,7) PSBOCRIT=PSBOCRIT_EXPIREHDG S:$P(PSBFUTR,U,8) PSBOCRIT=PSBOCRIT_EXPIREHDG S:$P(PSBFUTR,U,9) PSBOCRIT=PSBOCRIT_"Expiring Today"
"RTN","PSBOCE",26,0)
 S:$P(PSBFUTR,U,10) PSBOCRIT=PSBOCRIT_FUTUREHDG
"RTN","PSBOCE",27,0)
 S:$P(PSBFUTR,U,11) PSBXFLG=1
"RTN","PSBOCE",28,0)
 I $D(PSBRPT(.2)) I $P(PSBRPT(.2),U,8) S PSBCFLG=1
"RTN","PSBOCE",29,0)
 ;check Clinic search list                *70
"RTN","PSBOCE",30,0)
 S PSBSRCHL=$$SRCHLIST^PSBOHDR()
"RTN","PSBOCE",31,0)
 D:$P(PSBRPT(4),U,2)="C"
"RTN","PSBOCE",32,0)
 .S:PSBSRCHL="" PSBSRCHL="All Clinics"
"RTN","PSBOCE",33,0)
 .S PSBSRCHL="Clinic Search List: "_PSBSRCHL
"RTN","PSBOCE",34,0)
 ;
"RTN","PSBOCE",35,0)
 K PSBSRTBY,PSBCMT,PSBADM,PSBDATA,PSBOUTP,PSBLGD
"RTN","PSBOCE",36,0)
 S PSBSORT=1
"RTN","PSBOCE",37,0)
 D NOW^%DTC S (Y,PSBNOWX)=% D DD^%DT S PSBDTTM=Y
"RTN","PSBOCE",38,0)
 D GETPAR^PSBPAR("ALL","PSB ADMIN BEFORE")
"RTN","PSBOCE",39,0)
 S PSBB4=0 S:RESULTS(0)>0 PSBB4=+RESULTS(0)
"RTN","PSBOCE",40,0)
 D GETPAR^PSBPAR("ALL","PSB ADMIN AFTER")
"RTN","PSBOCE",41,0)
 S PSBAFT=0 S:RESULTS(0)>0 PSBAFT=+RESULTS(0)
"RTN","PSBOCE",42,0)
 I PSBCLINORD S (PSBB4,PSBAFT)=7                                  ;*70
"RTN","PSBOCE",43,0)
 K ^XTMP("PSBO",$J,"PSBLIST")
"RTN","PSBOCE",44,0)
 S (PSBPGNUM,PSBLNTOT,PSBTOT,PSBX1X)=""
"RTN","PSBOCE",45,0)
 K PSBLIST,PSBLIST2
"RTN","PSBOCE",46,0)
 S PSBXDFN=$P(PSBRPT(.1),U,2)
"RTN","PSBOCE",47,0)
 S PSBLIST(PSBXDFN)=""
"RTN","PSBOCE",48,0)
 S (PSBX1X,PSBTOT)=0
"RTN","PSBOCE",49,0)
 F  S PSBX1X=$O(PSBLIST(PSBX1X)) Q:+PSBX1X=0  D
"RTN","PSBOCE",50,0)
 .D RPC^PSBCSUTL(.PSBAREA,PSBX1X,,,PSBCLINORD)                    ;*70
"RTN","PSBOCE",51,0)
 .M PSBDATA=@PSBAREA
"RTN","PSBOCE",52,0)
 .D GETREMOV^PSBO1(PSBXDFN)      ;get all removes for this patient *83
"RTN","PSBOCE",53,0)
 .S PSBX2X=1
"RTN","PSBOCE",54,0)
 .S (PSBLIST2(FUTUREHDG),PSBLIST2("Expiring Today"),PSBLIST2(EXPIREHDG),PSBLIST2(" * NO * "))=0
"RTN","PSBOCE",55,0)
 .F  S PSBX2X=$O(PSBDATA(PSBX2X)) Q:+PSBX2X=0  D
"RTN","PSBOCE",56,0)
 ..S PSBDATA=PSBDATA(PSBX2X)
"RTN","PSBOCE",57,0)
 ..I $P(PSBDATA,U)="ORD" D  Q
"RTN","PSBOCE",58,0)
 ...K PSBDRUGN
"RTN","PSBOCE",59,0)
 ...S PSBORDN=$P(PSBDATA,U,3)
"RTN","PSBOCE",60,0)
 ...S PSBCLIN(PSBORDN)=$S($P(PSBDATA,U,32)]"":"Location: ",1:"")_$P(PSBDATA,U,32)                      ;*70
"RTN","PSBOCE",61,0)
 ...S PSBTB=$P(PSBDATA,U,29) S PSBTB=$S(PSBTB=1:"UD",PSBTB=2:"IVPB",PSBTB=3:"IV",1:" * ERROR * ")
"RTN","PSBOCE",62,0)
 ...S PSBTB(PSBORDN,PSBTB)=""
"RTN","PSBOCE",63,0)
 ...S PSBSTS=$P(PSBDATA,U,23) S PSBSTS=$S((PSBSTS="A")&(($P(PSBDATA,U,27)>PSBNOWX)):"Active",PSBSTS="H":"On Hold",PSBSTS="D":"Discontinued",PSBSTS="DE":"Discontinued (Edit)",(PSBSTS="E")!($P(PSBDATA,U,27)'>PSBNOWX):"Expired",1:" * ERROR * ")
"RTN","PSBOCE",64,0)
 ...S PSBSTS(PSBORDN,PSBSTS)=""
"RTN","PSBOCE",65,0)
 ...S X2=$P(PSBDATA,U,27),X3=$P(PSBNOWX,".")
"RTN","PSBOCE",66,0)
 ...;add ability to use a different calculation and heading for future
"RTN","PSBOCE",67,0)
 ...;expired IM and CO meds
"RTN","PSBOCE",68,0)
 ...S FUTUREX=$S(PSBCLINORD:8,1:2)
"RTN","PSBOCE",69,0)
 ...S PSBSTSX=$S((X2<PSBNOWX):EXPIREHDG,(X3'>X2)&($$FMADD^XLFDT(X3,1)>X2):"Expiring Today",($$FMADD^XLFDT(X3,1)'>X2)&(X2'>$$FMADD^XLFDT(X3,FUTUREX)):FUTUREHDG,1:" * NO * ")   ;*70
"RTN","PSBOCE",70,0)
 ...;
"RTN","PSBOCE",71,0)
 ...I PSBSTS["Discontinued" S PSBSTSX=EXPIREHDG
"RTN","PSBOCE",72,0)
 ...S PSBLIST2(PSBSTSX,$P(PSBDATA,U,9),PSBORDN)=$P(PSBDATA,U,32) S PSBLIST2(PSBSTSX)=PSBLIST2(PSBSTSX)+1   ;*70 clin name
"RTN","PSBOCE",73,0)
 ...S:PSBOCRIT[PSBSTSX PSBTOT=PSBTOT+1
"RTN","PSBOCE",74,0)
 ...S PSBSCHTY=$P(PSBDATA,U,6)
"RTN","PSBOCE",75,0)
 ...S PSBSCHTY(PSBORDN,PSBSCHTY)=""
"RTN","PSBOCE",76,0)
 ...S PSBSCHD=$P(PSBDATA,U,7) I PSBSCHD="" S PSBSCHD=" "
"RTN","PSBOCE",77,0)
 ...S PSBSCHD(PSBORDN,PSBSCHD)=""
"RTN","PSBOCE",78,0)
 ...S PSBDOSR=$P(PSBDATA,U,10)_", "_$P(PSBDATA,U,11)
"RTN","PSBOCE",79,0)
 ...S PSBDOSR=$TR($E(PSBDOSR,1)," ")_$E(PSBDOSR,2,999)
"RTN","PSBOCE",80,0)
 ...S PSBDOSR(PSBORDN,PSBDOSR)="" K PSBOMDR(PSBORDN)
"RTN","PSBOCE",81,0)
 ...S PSBNXTX1=$$NEXTADM^PSBCSUTX(PSBX1X,PSBORDN)
"RTN","PSBOCE",82,0)
 ...S PSBNXTX2=""                                            ;init *83
"RTN","PSBOCE",83,0)
 ...I PSBSTS["Hold" S PSBNXTX2="Provider Hold"
"RTN","PSBOCE",84,0)
 ...I PSBSTS'["Hold" D 
"RTN","PSBOCE",85,0)
 ...;
"RTN","PSBOCE",86,0)
 ...;Next admin date triggers data for Next Action col, and also   *83
"RTN","PSBOCE",87,0)
 ...;  if a remove action is pending use that text for NA col.     *83
"RTN","PSBOCE",88,0)
 ...S REMOV=$O(^TMP("PSB",$J,"RM","B",PSBORDN,0))
"RTN","PSBOCE",89,0)
 ...I PSBSTS'["Hold",((PSBNXTX1)!(REMOV)) D
"RTN","PSBOCE",90,0)
 ....;build Admin Next Action text
"RTN","PSBOCE",91,0)
 ....D:PSBNXTX1
"RTN","PSBOCE",92,0)
 .....S NXTADM=$$FMADD^XLFDT(PSBNXTX1,,,PSBAFT)
"RTN","PSBOCE",93,0)
 .....S PSBNXTX2=$S(PSBNOWX>NXTADM:"MISSED ",1:"DUE ")_PSBNXTX1
"RTN","PSBOCE",94,0)
 ....;Removal tests and Next Action text build                     *83
"RTN","PSBOCE",95,0)
 ....S REMOV=$O(^TMP("PSB",$J,"RM","B",PSBORDN,0))
"RTN","PSBOCE",96,0)
 ....D:REMOV
"RTN","PSBOCE",97,0)
 .....S MRR=$P(PSBDATA(PSBX2X),U,35)
"RTN","PSBOCE",98,0)
 .....S RMVTIM=$P(^TMP("PSB",$J,"RM",REMOV),U)
"RTN","PSBOCE",99,0)
 .....;Sched types below have no admin nor removal times, but do know
"RTN","PSBOCE",100,0)
 .....; this MRR was given and next is Removal
"RTN","PSBOCE",101,0)
 .....I ("^P^OC^"[("^"_PSBSCHTY_"^")) S:PSBSTS'["Hold" PSBNXTX2="(Removal)" Q
"RTN","PSBOCE",102,0)
 .....;sys err tst, sched rmv dt/tm empty, if null use nxt adm for rmv
"RTN","PSBOCE",103,0)
 .....I MRR=1,'RMVTIM S RMVTIM=PSBNXTX1
"RTN","PSBOCE",104,0)
 .....I PSBNOWX>$$FMADD^XLFDT(RMVTIM,,,PSBAFT) D    ;missed rm
"RTN","PSBOCE",105,0)
 ......S PSBNXTX2="MISSED "_RMVTIM_"  (Removal)"
"RTN","PSBOCE",106,0)
 ......S:'RMVTIM PSBNXTX2="REMOVE"  ;err, rmv empty
"RTN","PSBOCE",107,0)
 .....E  D                                          ;due rm
"RTN","PSBOCE",108,0)
 ......S PSBNXTX2="REMOVE "_RMVTIM
"RTN","PSBOCE",109,0)
 .....K MRR,NXTADM,RMVTIM
"RTN","PSBOCE",110,0)
 ...;
"RTN","PSBOCE",111,0)
 ...S PSBNXTX1=$$FMTDT^PSBOCE1(PSBNXTX1)
"RTN","PSBOCE",112,0)
 ...;don't do if Expired Next action is a Removal                  *83
"RTN","PSBOCE",113,0)
 ...I PSBNXTX2'["Removal",PSBNXTX2'["REMOVE" D
"RTN","PSBOCE",114,0)
 ....I ("^P^OC^O"[(U_PSBSCHTY))!(PSBTB="IV")!(PSBSTS["Discontinued")!(PSBSTS["Expired") S:PSBSTS'["Hold" PSBNXTX2=" "
"RTN","PSBOCE",115,0)
 ...S PSBNXTX(PSBORDN,PSBNXTX2)=""
"RTN","PSBOCE",116,0)
 ...; ** SPC INSTR  **
"RTN","PSBOCE",117,0)
 ...S PSBX2X=PSBX2X+1
"RTN","PSBOCE",118,0)
 ...;  *68
"RTN","PSBOCE",119,0)
 ...K ^TMP("PSJBCMA5",$J)
"RTN","PSBOCE",120,0)
 ...I PSBSIFLG D GETSIOPI^PSJBCMA5(PSBX1X,PSBORDN,1)
"RTN","PSBOCE",121,0)
 ...F QQ=0:0 S QQ=$O(^TMP("PSJBCMA5",$J,PSBX1X,PSBORDN,QQ)) Q:'QQ  D
"RTN","PSBOCE",122,0)
 ....S PSBSI(PSBORDN,QQ)=^TMP("PSJBCMA5",$J,PSBX1X,PSBORDN,QQ)
"RTN","PSBOCE",123,0)
 ...;  *68 end
"RTN","PSBOCE",124,0)
 ...S PSBOSTDT=$P(PSBDATA,U,22)
"RTN","PSBOCE",125,0)
 ...S PSBOSTDT(PSBORDN,PSBOSTDT)=""
"RTN","PSBOCE",126,0)
 ...S PSBOSPDT=$P(PSBDATA,U,27)
"RTN","PSBOCE",127,0)
 ...S PSBOSPDT(PSBORDN,PSBOSPDT)=""
"RTN","PSBOCE",128,0)
 ..I "^DD^ADD^SOL"[(U_$P(PSBDATA,U)) D  Q
"RTN","PSBOCE",129,0)
 ...F I=PSBX2X:1 S PSBDATA1=PSBDATA(I) D  Q:$D(PSBOMDR(PSBORDN))
"RTN","PSBOCE",130,0)
 ....I "^DD^ADD^SOL"[(U_$P(PSBDATA1,U)) S PSBX2X=I S PSBDRUGN=$G(PSBDRUGN,"")_$P(PSBDATA1,U,3)_", " Q
"RTN","PSBOCE",131,0)
 ....S $E(PSBDRUGN,$L(PSBDRUGN)-1)="" S PSBDRUGN(PSBORDN,$E(PSBDRUGN,1,250))=PSBDRUGN
"RTN","PSBOCE",132,0)
 ....S PSBOMDR(PSBORDN,$E((PSBDRUGN_"; "_PSBDOSR),1,250))=PSBDRUGN_"; "_PSBDOSR
"RTN","PSBOCE",133,0)
 ..I $P(PSBDATA,U)="END" Q
"RTN","PSBOCE",134,0)
 ..I $P(PSBDATA(PSBX2X+1),U)="ORF" D  Q
"RTN","PSBOCE",135,0)
 ...S PSBX2X=PSBX2X+1 S PSBDATA=PSBDATA(PSBX2X)
"RTN","PSBOCE",136,0)
 ...S:$P(PSBDATA,U,2)]"" PSBFLGD(PSBORDN,$P(PSBDATA,U,3)_" - "_$P(PSBDATA,U,4))=""
"RTN","PSBOCE",137,0)
 ..I ($P(PSBDATA,U)="ADM")&($P(PSBDATA,U,4)]"") D
"RTN","PSBOCE",138,0)
 ...S PSBXID=$P(PSBDATA,U,6)_U_$P(PSBDATA,U,4),PSBADM(PSBORDN,(-1*($P(PSBDATA,U,6))),PSBXID)=PSBDATA
"RTN","PSBOCE",139,0)
 ...I $O(PSBSCHTY(PSBORDN,""))="P" S PSBPRNR(PSBORDN,$P(PSBDATA,U,4))=$P(PSBDATA,U,9)
"RTN","PSBOCE",140,0)
 ...I $P(PSBDATA,U,3)]"" S PSBBID(PSBORDN,$P(PSBDATA,U,4))=$P(PSBDATA,U,3)
"RTN","PSBOCE",141,0)
 ...S:PSBXFLG PSBLGD(PSBORDN,"X","INITIALS",$P(PSBDATA,U,8))=""
"RTN","PSBOCE",142,0)
 ...K PSBDATA(PSBX2X)
"RTN","PSBOCE",143,0)
 ...I ($P(PSBDATA(PSBX2X+1),U)="CMT")  F  S PSBDATA=PSBDATA(PSBX2X+1) Q:($P(PSBDATA,U)'="CMT")  D
"RTN","PSBOCE",144,0)
 ....S PSBX2X=PSBX2X+1
"RTN","PSBOCE",145,0)
 ....S PSBDATA=PSBDATA(PSBX2X)
"RTN","PSBOCE",146,0)
 ....K PSBDATA(PSBX2X)
"RTN","PSBOCE",147,0)
 ....S:$P(PSBDATA,U,3)]"" PSBPRNEF(PSBORDN,$P(PSBXID,U,2))=$P(PSBDATA,U,3)
"RTN","PSBOCE",148,0)
 ....I 'PSBCFLG S PSBDATA=PSBDATA(PSBX2X+1) Q
"RTN","PSBOCE",149,0)
 ....I $P(PSBDATA,U,2)'="" D
"RTN","PSBOCE",150,0)
 .....S PSBLGD(PSBORDN,"C","INITIALS",$P(PSBDATA,U,4))=""
"RTN","PSBOCE",151,0)
 .....S PSBCMT(PSBORDN,$P(PSBXID,U,2),(-1*$P(PSBDATA,U,6)),PSBX2X)=PSBDATA
"RTN","PSBOCE",152,0)
STOP I '$D(PSBLIST2) K PSBLIST,^XTMP("PSBO",$J,"PSBLIST")
"RTN","PSBOCE",153,0)
 D CREATHDR
"RTN","PSBOCE",154,0)
 D SUBHDR
"RTN","PSBOCE",155,0)
 D BLDRPT
"RTN","PSBOCE",156,0)
 D WRTRPT
"RTN","PSBOCE",157,0)
 Q
"RTN","PSBOCE",158,0)
BLDRPT ; Buld RPT DATA
"RTN","PSBOCE",159,0)
 S X0="" K PSBLIST2(" * NO * "),PSBL2ULN
"RTN","PSBOCE",160,0)
 S PSBTOPHD=PSBLNTOT-2
"RTN","PSBOCE",161,0)
 I '$D(PSBLIST2) D  Q
"RTN","PSBOCE",162,0)
 .S PSBOUTP(0,PSBLNTOT)="W !!,""<<<< NO ORDERS TO DISPLAY >>>>"",!!"
"RTN","PSBOCE",163,0)
 S PSBMORE=5 F PSBX1X=EXPIREHDG,"Expiring Today",FUTUREHDG D
"RTN","PSBOCE",164,0)
 .I PSBX1X'=" * ERROR * " S PSBSUM=PSBX1X_" ["_PSBLIST2(PSBX1X)_$S(PSBLIST2(PSBX1X)=1:" Order",1:" Orders")_"]" S PSBOUTP($$PGTOT,PSBLNTOT)="W !!,"""_PSBSUM_""""
"RTN","PSBOCE",165,0)
 .Q:PSBLIST2(PSBX1X)=0
"RTN","PSBOCE",166,0)
 .Q:PSBOCRIT'[PSBX1X
"RTN","PSBOCE",167,0)
 .S:$L(PSBSUM)>$G(PSBL2ULN,0) PSBL2ULN=$L(PSBSUM)
"RTN","PSBOCE",168,0)
 .S PSBOUTP($$PGTOT(2),PSBLNTOT)="W !,$TR($J("""",PSBL2ULN),"" "",""=""),!"
"RTN","PSBOCE",169,0)
 .S PSBOUTP($$PGTOT,PSBLNTOT)="W !"
"RTN","PSBOCE",170,0)
 .K PSBDATA
"RTN","PSBOCE",171,0)
 .S X0="",PSBTOT1=0
"RTN","PSBOCE",172,0)
 .F  S X0=$O(PSBLIST2(PSBX1X,X0))  Q:X0=""  F  S PSBX2X=$O(PSBLIST2(PSBX1X,X0,PSBX2X)) Q:PSBX2X=""  D
"RTN","PSBOCE",173,0)
 ..M PSBLGD("INITIALS")=PSBLGD(PSBX2X,"X","INITIALS") M PSBLGD("INITIALS")=PSBLGD(PSBX2X,"C","INITIALS")
"RTN","PSBOCE",174,0)
 ..S PSBDATA(1,1)=$O(PSBTB(PSBX2X,""))
"RTN","PSBOCE",175,0)
 ..S PSBDATA(1,2)=$O(PSBSTS(PSBX2X,""))
"RTN","PSBOCE",176,0)
 ..S PSBDATA(1,3)=$O(PSBSCHTY(PSBX2X,""))
"RTN","PSBOCE",177,0)
 ..S Y0=$O(PSBOMDR(PSBX2X,"")) I Y0]"" S PSBDATA(1,4)="("_X0_")",PSBDATA(1,4,0)=PSBOMDR(PSBX2X,Y0)
"RTN","PSBOCE",178,0)
 ..S PSBDATA(1,5)=$O(PSBSCHD(PSBX2X,""))
"RTN","PSBOCE",179,0)
 ..S PSBDATA(1,6)=$O(PSBNXTX(PSBX2X,""))
"RTN","PSBOCE",180,0)
 ..S:PSBDATA(1,6)'["Hold" $P(PSBDATA(1,6)," ",2)=$$FMTDT^PSBOCE1($P(PSBDATA(1,6)," ",2))
"RTN","PSBOCE",181,0)
 ..S PSBDATA(1,7)=$$FMTDT^PSBOCE1($O(PSBOSTDT(PSBX2X,"")))
"RTN","PSBOCE",182,0)
 ..S PSBDATA(1,8)=$$FMTDT^PSBOCE1($E($O(PSBOSPDT(PSBX2X,"")),1,12))
"RTN","PSBOCE",183,0)
 ..K PSBSIDAT M PSBSIDAT=PSBSI(PSBX2X)                  ;*68
"RTN","PSBOCE",184,0)
 ..S PSBTOT1=PSBTOT1+1
"RTN","PSBOCE",185,0)
 ..K PSBDATA(2),PSBDATA(3),PSBSILN
"RTN","PSBOCE",186,0)
 ..D BUILDLN^PSBOCE1,SIOPI^PSBOCM(.PSBSIDAT,PSBTAB8,$S(PSBX2X["V":"Other Print Info: ",1:""))
"RTN","PSBOCE",187,0)
 ..I $D(PSBRPLN) S PSBMORE=$O(PSBRPLN(""),-1)+6 I $D(PSBSILN) S PSBMORE=PSBMORE+$O(PSBSILN(""),-1)
"RTN","PSBOCE",188,0)
 ..K PSB1 I $D(PSBFLGD(PSBX2X)) S PSB="" F  S PSB=$O(PSBFLGD(PSBX2X,PSB)) Q:PSB=""  I ($P(PSB,":")'="NOX")&($P(PSB,":")'="STAT") S PSB1=$G(PSB1,"")_PSB
"RTN","PSBOCE",189,0)
 ..;*70 build write clinic stmt      
"RTN","PSBOCE",190,0)
 ..S PSBOUTP($$PGTOT,PSBLNTOT)="W """_$G(PSBCLIN(PSBX2X))_""""_",!"
"RTN","PSBOCE",191,0)
 ..S PSBCNT=PSBTOT1_"   "_$G(PSB1,"")
"RTN","PSBOCE",192,0)
 ..S PSBOUTP($$PGTOT,PSBLNTOT)="W """_PSBCNT_""""
"RTN","PSBOCE",193,0)
 ..S I="" F  S I=$O(PSBRPLN(I)) Q:+I=0  D
"RTN","PSBOCE",194,0)
 ...S PSBOUTP($$PGTOT,PSBLNTOT)="W !,"""_PSBRPLN(I)_""""
"RTN","PSBOCE",195,0)
 ..S I="" F  S I=$O(PSBSILN(I)) Q:+I=0  D
"RTN","PSBOCE",196,0)
 ...S PSBOUTP($$PGTOT,PSBLNTOT)="W !,"""_PSBSILN(I)_""""
"RTN","PSBOCE",197,0)
 ..S PSBOUTP($$PGTOT(2),PSBLNTOT)="W !,$TR($J("""",PSBTAB8),"" "",""-""),!"
"RTN","PSBOCE",198,0)
 ..K PSBRPLN,PSBDATA,PSBSILN
"RTN","PSBOCE",199,0)
 D:+PSBTOT>0 LGD^PSBOCM
"RTN","PSBOCE",200,0)
 Q
"RTN","PSBOCE",201,0)
WRTRPT ;  writ
"RTN","PSBOCE",202,0)
 I $O(PSBOUTP(""),-1)<1 D  Q
"RTN","PSBOCE",203,0)
 .X PSBOUTP($O(PSBOUTP(""),-1),21)
"RTN","PSBOCE",204,0)
 .D FTR
"RTN","PSBOCE",205,0)
 S PSBPGNUM=1
"RTN","PSBOCE",206,0)
 S PSBZ="" F  S PSBZ=$O(PSBOUTP(PSBZ)) Q:PSBZ=""  D
"RTN","PSBOCE",207,0)
 .I PSBPGNUM'=PSBZ D FTR S PSBPGNUM=PSBZ D HDR,SUBHDR
"RTN","PSBOCE",208,0)
 .S PSBX2X="" F  S PSBX2X=$O(PSBOUTP(PSBZ,PSBX2X)) Q:PSBX2X=""  D
"RTN","PSBOCE",209,0)
 ..X PSBOUTP(PSBZ,PSBX2X)
"RTN","PSBOCE",210,0)
 D FTR
"RTN","PSBOCE",211,0)
 K ^XTMP("PSBO",$J,"PSBLIST"),PSBOUTP
"RTN","PSBOCE",212,0)
 Q
"RTN","PSBOCE",213,0)
HDR ;  Hder
"RTN","PSBOCE",214,0)
 W:$Y>1 @IOF
"RTN","PSBOCE",215,0)
 W:$X>1 !
"RTN","PSBOCE",216,0)
 S PSBRPNM="BCMA COVERSHEET EXPIRED/DC'd/EXPIRING ORDERS REPORT"
"RTN","PSBOCE",217,0)
 D:$P(PSBRPT(.1),U,1)="P"
"RTN","PSBOCE",218,0)
 .S PSBHDR(0)=PSBRPNM
"RTN","PSBOCE",219,0)
 .S PSBHDR(1)="Order Status(es): --"
"RTN","PSBOCE",220,0)
 .F Y=7,8,9,10 I $P(PSBFUTR,U,Y) S $P(PSBHDR(1),": ",2)=$P(PSBHDR(1),": ",2)_$S(PSBHDR(1)["--":"",1:"/ ")_$P("^^^^^^Expired^DC'd^Expiring Today^"_FUTUREHDG_"^^^^^^^^",U,Y)_" " S PSBHDR(1)=$TR(PSBHDR(1),"-","")
"RTN","PSBOCE",221,0)
 .I $P(PSBFUTR,U,11) S PSBHDR(2)="Include Action(s)"_$S(PSBCFLG:" & Comments/Reasons",1:"")
"RTN","PSBOCE",222,0)
 .S:$G(PSBSRCHL)]"" PSBHDR(3)="",PSBHDR(4)=PSBSRCHL          ;*70
"RTN","PSBOCE",223,0)
 .D PT^PSBOHDR(PSBXDFN,.PSBHDR)
"RTN","PSBOCE",224,0)
 Q
"RTN","PSBOCE",225,0)
SUBHDR ;
"RTN","PSBOCE",226,0)
 N PSBAL S PSBAL=$O(PSBHDR("ALERGY",""),-1) S PSBAL=$S((PSBAL/12)>(PSBAL\12):(PSBAL\12)+1,1:(PSBAL\12))
"RTN","PSBOCE",227,0)
 N PSBRE S PSBRE=$O(PSBHDR("REAC",""),-1) S PSBRE=$S((PSBRE/12)>(PSBRE\12):(PSBRE\12)+1,1:(PSBRE\12))
"RTN","PSBOCE",228,0)
 S PSBLNTOT=$O(PSBHDR(""),-1)+9+PSBAL+PSBRE+1
"RTN","PSBOCE",229,0)
 I $G(PSBPGNUM,0)=1 W !,?(PSBTAB8-($L("Total Orders reported: "_+PSBTOT))),"Total Orders reported: "_+PSBTOT,! S PSBLNTOT=PSBLNTOT+2
"RTN","PSBOCE",230,0)
 W !,$TR($J("",PSBTAB8)," ","_") S PSBLNTOT=PSBLNTOT+1
"RTN","PSBOCE",231,0)
 W !,$G(PSBHD1,"") S PSBLNTOT=PSBLNTOT+1
"RTN","PSBOCE",232,0)
 W !,$G(PSBHD2,"") S PSBLNTOT=PSBLNTOT+1
"RTN","PSBOCE",233,0)
 W !,$TR($J("",PSBTAB8)," ","="),! S PSBLNTOT=PSBLNTOT+2
"RTN","PSBOCE",234,0)
 I $D(NOTE(PSBPGNUM)) W NOTE(PSBPGNUM),!! S PSBLNTOT=PSBLNTOT+2
"RTN","PSBOCE",235,0)
 Q
"RTN","PSBOCE",236,0)
FTR ;  Footr
"RTN","PSBOCE",237,0)
 D PTFTR^PSBOHDR()
"RTN","PSBOCE",238,0)
 S PSBPG="Page: "_PSBPGNUM_" of "_$S($O(PSBOUTP(""),-1)=0:1,1:$O(PSBOUTP(""),-1))
"RTN","PSBOCE",239,0)
 S PSBPGRM=PSBTAB8-($L(PSBPG))
"RTN","PSBOCE",240,0)
 W !,PSBRPNM,"     ",?(PSBPGRM-($L(PSBDTTM)+3)),PSBDTTM_"  "_PSBPG
"RTN","PSBOCE",241,0)
 Q
"RTN","PSBOCE",242,0)
PGTOT(X) ;mnt PAGE Number
"RTN","PSBOCE",243,0)
 I (PSBLNTOT+PSBMORE)>(IOSL) D PGC^PSBOCE1
"RTN","PSBOCE",244,0)
 I $G(X,1) S PSBLNTOT=PSBLNTOT+$G(X,1),PSBMORE=PSBMORE-$G(X,1)
"RTN","PSBOCE",245,0)
 Q PSBPGNUM
"RTN","PSBOCE",246,0)
CREATHDR ;
"RTN","PSBOCE",247,0)
 K PSBHD1,PSBHD2
"RTN","PSBOCE",248,0)
 I IOM'<132 S PSBMORE=4,PSBHD1=$P($T(HD132A),"~",2),PSBHD2=$P($T(HD132B),";",2),PSBBLANK=$P($T(H132BLK),";",2)
"RTN","PSBOCE",249,0)
 E  S PSBHD1="THIS REPORT SUPPORTS >131 CHAR./LINE PRINT FORMATS ONLY" K PSBLIST2 Q
"RTN","PSBOCE",250,0)
 ; tabs
"RTN","PSBOCE",251,0)
 S PSBTAB0=1 F PSBI=0:1:($L(PSBHD1,"|")-1) S:PSBI>0 @("PSBTAB"_PSBI)=($F(PSBHD1,"|",@("PSBTAB"_(PSBI-1))+1))-1
"RTN","PSBOCE",252,0)
 S PSBPGNUM=1
"RTN","PSBOCE",253,0)
 D HDR
"RTN","PSBOCE",254,0)
 Q
"RTN","PSBOCE",255,0)
HD132A ;~ VDL |    Status     |Type|       Medication; Dosage, Route      |    Schedule    |     Next      |   Order Start  |   Order Stop  |
"RTN","PSBOCE",256,0)
 Q
"RTN","PSBOCE",257,0)
HD132B ; Tab |               |    |                                      |                |   Action      |     Date       |    Date       |
"RTN","PSBOCE",258,0)
 Q
"RTN","PSBOCE",259,0)
H132BLK ;;     |               |    |                                      |                |                |               |               |
"RTN","PSBOCE",260,0)
 Q
"RTN","PSBOCM")
0^33^B128362247^B102788691
"RTN","PSBOCM",1,0)
PSBOCM ;BIRMINGHAM/TEJ-OVERSHEET MEDICATION OVERVIEW REPORT ;03/06/16 3:06pm
"RTN","PSBOCM",2,0)
 ;;3.0;BAR CODE MED ADMIN;**32,50,68,70,83**;Mar 2004;Build 89
"RTN","PSBOCM",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBOCM",4,0)
 ;
"RTN","PSBOCM",5,0)
 ; Reference/IA
"RTN","PSBOCM",6,0)
 ; File 4/10090
"RTN","PSBOCM",7,0)
 ; File 200/10060
"RTN","PSBOCM",8,0)
 ; GETSIOPI^PSJBCMA5/5763
"RTN","PSBOCM",9,0)
 ; 
"RTN","PSBOCM",10,0)
 ;*68 - allow SIOPI builder to accomodate more than 1 line in SI array
"RTN","PSBOCM",11,0)
 ;*70 - pass global var PSBCLINORD when Rpc Psbcsutl is called again
"RTN","PSBOCM",12,0)
 ;    - add clinic name to new array PSBCLIN to track clinic name per 
"RTN","PSBOCM",13,0)
 ;       order for printed output.
"RTN","PSBOCM",14,0)
 ;    - 1512: Don't show the Special Instructions / Other Print Info
"RTN","PSBOCM",15,0)
 ;       unless radio button selected.
"RTN","PSBOCM",16,0)
 ;    - convert date/time fields to date only for CO and admin window 
"RTN","PSBOCM",17,0)
 ;       to 7 days +/-.
"RTN","PSBOCM",18,0)
 ;*83 - add Removes as new event for Next Action column:
"RTN","PSBOCM",19,0)
 ;         Remove date@time
"RTN","PSBOCM",20,0)
 ;         Missed date@time
"RTN","PSBOCM",21,0)
 ;           (Remove)
"RTN","PSBOCM",22,0)
EN ;
"RTN","PSBOCM",23,0)
 N PSBX1X,RESULTS,RESULT,PSBFUTR,QQ,PSBCLIN,PSBSRCHL,STRTDT,STOPDT,EXPIREHDG,REMOV,PSBNXTX,PSBNXTX1,PSBNXTX2  ;*83
"RTN","PSBOCM",24,0)
 S PSBFUTR=$TR(PSBRPT(1),"~","^")
"RTN","PSBOCM",25,0)
 S (PSBOCRIT,PSBXFLG,PSBCFLG)=""        ;  Order Status search criteria - "A"ctive, "D"C ed, "E"xpired"
"RTN","PSBOCM",26,0)
 S:$P(PSBFUTR,U,7) PSBOCRIT=PSBOCRIT_"D" S:$P(PSBFUTR,U,8) PSBOCRIT=PSBOCRIT_"E" S:$P(PSBFUTR,U,5) PSBOCRIT=PSBOCRIT_"A"
"RTN","PSBOCM",27,0)
 S:$P(PSBFUTR,U,4) PSBOCRIT=PSBOCRIT_"F"
"RTN","PSBOCM",28,0)
 S:$P(PSBFUTR,U,11) PSBXFLG=1
"RTN","PSBOCM",29,0)
 I $D(PSBRPT(.2)) I $P(PSBRPT(.2),U,8) S PSBCFLG=1
"RTN","PSBOCM",30,0)
 S PSBCLINORD=$S($P($G(PSBRPT(4)),U,2)="C":1,1:0)                 ;*70
"RTN","PSBOCM",31,0)
 ;add ability to use a different heading for expired IM/CO meds   ;*70
"RTN","PSBOCM",32,0)
 S EXPIREHDG=$S(PSBCLINORD:"EXPIRED/DC'd within last 7 days",1:"EXPIRED/DC'd")
"RTN","PSBOCM",33,0)
 ;
"RTN","PSBOCM",34,0)
 S PSBFUTR=$TR(PSBRPT(1),"~",U)
"RTN","PSBOCM",35,0)
 ;check Clinic search list                                        ;*70
"RTN","PSBOCM",36,0)
 S PSBSRCHL=$$SRCHLIST^PSBOHDR()
"RTN","PSBOCM",37,0)
 D:$P(PSBRPT(4),U,2)="C"
"RTN","PSBOCM",38,0)
 .S:PSBSRCHL="" PSBSRCHL="All Clinics"
"RTN","PSBOCM",39,0)
 .S PSBSRCHL="Clinic Search List: "_PSBSRCHL
"RTN","PSBOCM",40,0)
 ;
"RTN","PSBOCM",41,0)
 K PSBSRTBY,PSBCMT,PSBADM,PSBDATA,PSBOUTP,PSBLGD,PSBHDR,PSBSTS
"RTN","PSBOCM",42,0)
 S PSBSORT=1
"RTN","PSBOCM",43,0)
 D NOW^%DTC S (Y,PSBNOWX)=% D DD^%DT S PSBDTTM=$E(Y,1,18)
"RTN","PSBOCM",44,0)
 D GETPAR^PSBPAR("ALL","PSB ADMIN BEFORE")
"RTN","PSBOCM",45,0)
 S PSBB4=0 S:RESULTS(0)>0 PSBB4=+RESULTS(0)
"RTN","PSBOCM",46,0)
 D GETPAR^PSBPAR("ALL","PSB ADMIN AFTER")
"RTN","PSBOCM",47,0)
 S PSBAFT=0 S:RESULTS(0)>0 PSBAFT=+RESULTS(0)
"RTN","PSBOCM",48,0)
 ;change admin window times to 7 days for CO
"RTN","PSBOCM",49,0)
 I PSBCLINORD S (PSBB4,PSBAFT)=7
"RTN","PSBOCM",50,0)
 K ^XTMP("PSBO",$J,"PSBLIST")
"RTN","PSBOCM",51,0)
 S (PSBPGNUM,PSBLNTOT,PSBTOT,PSBX1X)=""
"RTN","PSBOCM",52,0)
 K PSBLIST,PSBLIST2
"RTN","PSBOCM",53,0)
 S PSBXDFN=$P(PSBRPT(.1),U,2)
"RTN","PSBOCM",54,0)
 S PSBLIST(PSBXDFN)=""
"RTN","PSBOCM",55,0)
 S (PSBX1X,PSBTOT)=0
"RTN","PSBOCM",56,0)
 F  S PSBX1X=$O(PSBLIST(PSBX1X)) Q:+PSBX1X=0  D
"RTN","PSBOCM",57,0)
 .D RPC^PSBCSUTL(.PSBAREA,PSBX1X,,,PSBCLINORD)       ;*70
"RTN","PSBOCM",58,0)
 .M PSBDATA=@PSBAREA
"RTN","PSBOCM",59,0)
 .D GETREMOV^PSBO1(PSBXDFN)      ;get all removes for this patient *83
"RTN","PSBOCM",60,0)
 .S PSBX2X=1
"RTN","PSBOCM",61,0)
 .S PSBLIST2("ACTIVE")=0,PSBLIST2("FUTURE")=0,PSBLIST2(EXPIREHDG)=0,PSBLIST2(" * ERROR * ")=0
"RTN","PSBOCM",62,0)
 .F  S PSBX2X=$O(PSBDATA(PSBX2X)) Q:+PSBX2X=0  D
"RTN","PSBOCM",63,0)
 ..S PSBDATA=PSBDATA(PSBX2X)
"RTN","PSBOCM",64,0)
 ..I $P(PSBDATA,U)="ORD" D  Q
"RTN","PSBOCM",65,0)
 ...K PSBDRUGN
"RTN","PSBOCM",66,0)
 ...S PSBORDN=$P(PSBDATA,U,3)
"RTN","PSBOCM",67,0)
 ...S PSBCLIN(PSBORDN)=$S($P(PSBDATA,U,32)]"":"Location: ",1:"")_$P(PSBDATA,U,32)                      ;*70
"RTN","PSBOCM",68,0)
 ...S PSBTB=$P(PSBDATA,U,29) S PSBTB=$S(PSBTB=1:"UD",PSBTB=2:"IVPB",PSBTB=3:"IV",1:" * ERROR * ")
"RTN","PSBOCM",69,0)
 ...S PSBTB(PSBORDN,PSBTB)=""
"RTN","PSBOCM",70,0)
 ...S PSBSTS=$P(PSBDATA,U,23) S PSBSTS=$S((PSBSTS="A")&(($P(PSBDATA,U,27)>PSBNOWX)):"Active",PSBSTS="H":"On Hold",PSBSTS="D":"Discontinued",PSBSTS="DE":"Discontinued (Edit)",(PSBSTS="E")!($P(PSBDATA,U,27)'>PSBNOWX):"Expired",1:" * ERROR * ")
"RTN","PSBOCM",71,0)
 ...S PSBSTS(PSBORDN,PSBSTS)=""
"RTN","PSBOCM",72,0)
 ...S STRTDT=$P(PSBDATA,U,22),STOPDT=$P(PSBDATA,U,27)    ;*70
"RTN","PSBOCM",73,0)
 ...S PSBSTSX=$S(STOPDT'>PSBNOWX:EXPIREHDG,$$FMADD^XLFDT(STRTDT,,,-PSBB4)'>PSBNOWX:"ACTIVE",STRTDT>$$FMADD^XLFDT(PSBNOWX,,,PSBB4):"FUTURE",1:" * ERROR * ")        ;*70
"RTN","PSBOCM",74,0)
 ...;
"RTN","PSBOCM",75,0)
 ...S PSBLIST2(PSBSTSX,$P(PSBDATA,U,9),PSBORDN)="" S PSBLIST2(PSBSTSX)=PSBLIST2(PSBSTSX)+1
"RTN","PSBOCM",76,0)
 ...S:PSBOCRIT[$E(PSBSTSX,1) PSBTOT=PSBTOT+1
"RTN","PSBOCM",77,0)
 ...S PSBSCHTY=$P(PSBDATA,U,6)
"RTN","PSBOCM",78,0)
 ...I PSBTB="IV" S PSBSCHTY=" "
"RTN","PSBOCM",79,0)
 ...S PSBSCHTY(PSBORDN,PSBSCHTY)=""
"RTN","PSBOCM",80,0)
 ...S PSBDOSR=$P(PSBDATA,U,10)_", "_$P(PSBDATA,U,11)
"RTN","PSBOCM",81,0)
 ...S PSBDOSR=$TR($E(PSBDOSR,1)," ")_$E(PSBDOSR,2,999)
"RTN","PSBOCM",82,0)
 ...S PSBDOSR(PSBORDN,PSBDOSR)="" K PSBOMDR(PSBORDN)
"RTN","PSBOCM",83,0)
 ...S PSBSCHD=$P(PSBDATA,U,7) I PSBSCHD="" S PSBSCHD=" "
"RTN","PSBOCM",84,0)
 ...S PSBSCHD(PSBORDN,PSBSCHD)=""
"RTN","PSBOCM",85,0)
 ...S PSBNXTX1=$$NEXTADM^PSBCSUTX(PSBX1X,PSBORDN)
"RTN","PSBOCM",86,0)
 ...S PSBNXTX2=""                                            ;init *83
"RTN","PSBOCM",87,0)
 ...I PSBSTS["Hold" S PSBNXTX2="Provider Hold"
"RTN","PSBOCM",88,0)
 ...;
"RTN","PSBOCM",89,0)
 ...;Next admin date triggers data for Next Action col, and also   *83
"RTN","PSBOCM",90,0)
 ...;  if a remove action is pending use that text for NA col.     *83
"RTN","PSBOCM",91,0)
 ...S REMOV=$O(^TMP("PSB",$J,"RM","B",PSBORDN,0))
"RTN","PSBOCM",92,0)
 ...I PSBSTS'["Hold",((PSBNXTX1)!(REMOV)) D
"RTN","PSBOCM",93,0)
 ....;build Admin Next Action text
"RTN","PSBOCM",94,0)
 ....D:PSBNXTX1
"RTN","PSBOCM",95,0)
 .....S NXTADM=$$FMADD^XLFDT(PSBNXTX1,,,PSBAFT)
"RTN","PSBOCM",96,0)
 .....S PSBNXTX2=$S(PSBNOWX>NXTADM:"MISSED ",1:"DUE ")_PSBNXTX1
"RTN","PSBOCM",97,0)
 ....;Removal tests and Next Action text build                     *83
"RTN","PSBOCM",98,0)
 ....S REMOV=$O(^TMP("PSB",$J,"RM","B",PSBORDN,0))
"RTN","PSBOCM",99,0)
 ....D:REMOV
"RTN","PSBOCM",100,0)
 .....S MRR=$P(PSBDATA(PSBX2X),U,35)
"RTN","PSBOCM",101,0)
 .....S RMVTIM=$P(^TMP("PSB",$J,"RM",REMOV),U)
"RTN","PSBOCM",102,0)
 .....;Sched types below have no admin nor removal times, but do know
"RTN","PSBOCM",103,0)
 .....; this MRR was given and next is Removal
"RTN","PSBOCM",104,0)
 .....I ("^P^OC^"[("^"_PSBSCHTY_"^")) S:PSBSTS'["Hold" PSBNXTX2="(Removal)" Q
"RTN","PSBOCM",105,0)
 .....;sys err tst, sched rmv dt/tm empty, if null use nxt adm for rmv
"RTN","PSBOCM",106,0)
 .....I MRR=1,'RMVTIM S RMVTIM=PSBNXTX1
"RTN","PSBOCM",107,0)
 .....I PSBNOWX>$$FMADD^XLFDT(RMVTIM,,,PSBAFT) D    ;missed rm
"RTN","PSBOCM",108,0)
 ......S PSBNXTX2="MISSED "_RMVTIM_"   (Removal)"
"RTN","PSBOCM",109,0)
 ......S:'RMVTIM PSBNXTX2="REMOVE"  ;err, rmv empty
"RTN","PSBOCM",110,0)
 .....E  D                                          ;due rm
"RTN","PSBOCM",111,0)
 ......S PSBNXTX2="REMOVE "_RMVTIM
"RTN","PSBOCM",112,0)
 .....K MRR,NXTADM,RMVTIM
"RTN","PSBOCM",113,0)
 ...;
"RTN","PSBOCM",114,0)
 ...S PSBNXTX1=$$FMTDT^PSBOCE1(PSBNXTX1)
"RTN","PSBOCM",115,0)
 ...;don't do if Expired Next action is a Removal                  *83
"RTN","PSBOCM",116,0)
 ...I PSBNXTX2'["Removal",PSBNXTX2'["REMOVE" D
"RTN","PSBOCM",117,0)
 ....I ("^P^OC^O"[("^"_PSBSCHTY))!(PSBTB="IV")!(PSBSTS["Discontinued")!(PSBSTS["Expired") S:PSBSTS'["Hold" PSBNXTX2=" "
"RTN","PSBOCM",118,0)
 ...S PSBNXTX(PSBORDN,PSBNXTX2)=""
"RTN","PSBOCM",119,0)
 ...; ** SPECIAL INSTRUCTIONS  **
"RTN","PSBOCM",120,0)
 ...S PSBX2X=PSBX2X+1
"RTN","PSBOCM",121,0)
 ...;  *68
"RTN","PSBOCM",122,0)
 ...K ^TMP("PSJBCMA5",$J)
"RTN","PSBOCM",123,0)
 ...I PSBSIFLG D GETSIOPI^PSJBCMA5(PSBX1X,PSBORDN,1)
"RTN","PSBOCM",124,0)
 ...F QQ=0:0 S QQ=$O(^TMP("PSJBCMA5",$J,PSBX1X,PSBORDN,QQ)) Q:'QQ  D
"RTN","PSBOCM",125,0)
 ....S PSBSI(PSBORDN,QQ)=^TMP("PSJBCMA5",$J,PSBX1X,PSBORDN,QQ)
"RTN","PSBOCM",126,0)
 ...;  *68 end
"RTN","PSBOCM",127,0)
 ...S PSBOSTDT=$P(PSBDATA,U,22)
"RTN","PSBOCM",128,0)
 ...S PSBOSTDT(PSBORDN,PSBOSTDT)=""
"RTN","PSBOCM",129,0)
 ...S PSBOSPDT=$P(PSBDATA,U,27)
"RTN","PSBOCM",130,0)
 ...S PSBOSPDT(PSBORDN,PSBOSPDT)=""
"RTN","PSBOCM",131,0)
 ..I "^DD^ADD^SOL"[(U_$P(PSBDATA(PSBX2X),U)) D  Q
"RTN","PSBOCM",132,0)
 ...F I=PSBX2X:1 S PSBDATA1=PSBDATA(I) D  Q:$D(PSBOMDR(PSBORDN))
"RTN","PSBOCM",133,0)
 ....I "^DD^ADD^SOL"[(U_$P(PSBDATA1,U)) S PSBX2X=I S PSBDRUGN=$G(PSBDRUGN,"")_$P(PSBDATA1,U,3)_", " Q
"RTN","PSBOCM",134,0)
 ....S $E(PSBDRUGN,$L(PSBDRUGN)-1)="" S PSBDRUGN(PSBORDN,$E(PSBDRUGN,1,250))=PSBDRUGN
"RTN","PSBOCM",135,0)
 ....S PSBOMDR(PSBORDN,$E((PSBDRUGN_"; "_PSBDOSR),1,250))=PSBDRUGN_"; "_PSBDOSR
"RTN","PSBOCM",136,0)
 ..I $P(PSBDATA,U)="END" Q
"RTN","PSBOCM",137,0)
 ..I $P(PSBDATA(PSBX2X),U)="ORF" D  Q
"RTN","PSBOCM",138,0)
 ...S PSBDATA=PSBDATA(PSBX2X)
"RTN","PSBOCM",139,0)
 ...S:$P(PSBDATA,U,2)]"" PSBFLGD(PSBORDN,$P(PSBDATA,U,3)_" - "_$P(PSBDATA,U,4))=""
"RTN","PSBOCM",140,0)
 ..I ($P(PSBDATA,U)="ADM")&($P(PSBDATA,U,4)]"") D
"RTN","PSBOCM",141,0)
 ...S PSBXID=$P(PSBDATA,U,6)_U_$P(PSBDATA,U,4),PSBADM(PSBORDN,(-1*($P(PSBDATA,U,6))),PSBXID)=PSBDATA
"RTN","PSBOCM",142,0)
 ...S PSBTEST="" F  S PSBTEST=$O(PSBFLGD(PSBORDN,PSBTEST)) Q:PSBTEST=""  I $P(PSBTEST,":")="NOX" K PSBFLGD(PSBORDN,PSBTEST) Q
"RTN","PSBOCM",143,0)
 ...I $O(PSBSCHTY(PSBORDN,""))="P" S PSBPRNR(PSBORDN,$P(PSBDATA,U,4))=$P(PSBDATA,U,9)
"RTN","PSBOCM",144,0)
 ...I $P(PSBDATA,U,3)]"" S PSBBID(PSBORDN,$P(PSBDATA,U,4))=$P(PSBDATA,U,3)
"RTN","PSBOCM",145,0)
 ...S:PSBXFLG PSBLGD(PSBORDN,"X","INITIALS",$P(PSBDATA,U,8))=""
"RTN","PSBOCM",146,0)
 ...K PSBDATA(PSBX2X)
"RTN","PSBOCM",147,0)
 ...I ($P(PSBDATA(PSBX2X+1),U)="CMT")  F  S PSBDATA=PSBDATA(PSBX2X+1) Q:($P(PSBDATA,U)'="CMT")  D
"RTN","PSBOCM",148,0)
 ....S PSBX2X=PSBX2X+1
"RTN","PSBOCM",149,0)
 ....S PSBDATA=PSBDATA(PSBX2X)
"RTN","PSBOCM",150,0)
 ....K PSBDATA(PSBX2X)
"RTN","PSBOCM",151,0)
 ....S:$P(PSBDATA,U,3)]"" PSBPRNEF(PSBORDN,$P(PSBXID,U,2))=$P(PSBDATA,U,3)
"RTN","PSBOCM",152,0)
 ....I 'PSBCFLG S PSBDATA=PSBDATA(PSBX2X+1) Q
"RTN","PSBOCM",153,0)
 ....I $P(PSBDATA,U,2)'="" D
"RTN","PSBOCM",154,0)
 .....S PSBLGD(PSBORDN,"C","INITIALS",$P(PSBDATA,U,4))=""
"RTN","PSBOCM",155,0)
 .....S PSBCMT(PSBORDN,$P(PSBXID,U,2),(-1*$P(PSBDATA,U,6)),PSBX2X)=PSBDATA
"RTN","PSBOCM",156,0)
 I +PSBTOT=0 K PSBLIST,^XTMP("PSBO",$J,"PSBLIST")
"RTN","PSBOCM",157,0)
 D CREATHDR^PSBOCM1
"RTN","PSBOCM",158,0)
 D SUBHDR^PSBOCE
"RTN","PSBOCM",159,0)
 D BLDRPT
"RTN","PSBOCM",160,0)
 D WRTRPT^PSBOCM1
"RTN","PSBOCM",161,0)
 K ^TMP("PSJBCMA5",$J)    ;*68
"RTN","PSBOCM",162,0)
 Q
"RTN","PSBOCM",163,0)
BLDRPT ; Build REPORT DATA
"RTN","PSBOCM",164,0)
 S PSBTOPHD=PSBLNTOT-2
"RTN","PSBOCM",165,0)
 K PSBL2ULN
"RTN","PSBOCM",166,0)
 I '$D(PSBLIST2) D  Q
"RTN","PSBOCM",167,0)
 .S PSBOUTP(0,PSBLNTOT)="W !!,""<<<< NO ORDERS TO DISPLAY >>>>"",!!"
"RTN","PSBOCM",168,0)
 S PSBMORE=5 F PSBX1X="ACTIVE","FUTURE",EXPIREHDG," * ERROR * " D
"RTN","PSBOCM",169,0)
 .I PSBX1X'=" * ERROR * " S PSBSUM=PSBX1X_" ["_PSBLIST2(PSBX1X)_$S(PSBLIST2(PSBX1X)=1:" Order",1:" Orders")_"]" S PSBOUTP($$PGTOT,PSBLNTOT)="W !!,"""_PSBSUM_""""
"RTN","PSBOCM",170,0)
 .Q:PSBLIST2(PSBX1X)=0
"RTN","PSBOCM",171,0)
 .Q:PSBOCRIT'[$E(PSBX1X,1)
"RTN","PSBOCM",172,0)
 .S:$L(PSBSUM)>$G(PSBL2ULN,0) PSBL2ULN=$L(PSBSUM)
"RTN","PSBOCM",173,0)
 .S PSBOUTP($$PGTOT(2),PSBLNTOT)="W !,$TR($J("""",PSBL2ULN),"" "",""=""),!"
"RTN","PSBOCM",174,0)
 .S PSBOUTP($$PGTOT,PSBLNTOT)="W !"
"RTN","PSBOCM",175,0)
 .K PSBDATA
"RTN","PSBOCM",176,0)
 .S X0="",PSBTOT1=0
"RTN","PSBOCM",177,0)
 .F  S X0=$O(PSBLIST2(PSBX1X,X0))  Q:X0=""  S PSBX2X="" F  S PSBX2X=$O(PSBLIST2(PSBX1X,X0,PSBX2X)) Q:PSBX2X=""  D
"RTN","PSBOCM",178,0)
 ..M PSBLGD("INITIALS")=PSBLGD(PSBX2X,"X","INITIALS") M PSBLGD("INITIALS")=PSBLGD(PSBX2X,"C","INITIALS")
"RTN","PSBOCM",179,0)
 ..S PSBDATA(1,1)=$O(PSBTB(PSBX2X,""))
"RTN","PSBOCM",180,0)
 ..S PSBDATA(1,2)=$O(PSBSTS(PSBX2X,""))
"RTN","PSBOCM",181,0)
 ..S PSBDATA(1,3)=$O(PSBSCHTY(PSBX2X,""))
"RTN","PSBOCM",182,0)
 ..S Y0=$O(PSBOMDR(PSBX2X,"")) I Y0]"" S PSBDATA(1,4)="("_X0_")",PSBDATA(1,4,0)=PSBOMDR(PSBX2X,Y0)
"RTN","PSBOCM",183,0)
 ..S PSBDATA(1,5)=$O(PSBSCHD(PSBX2X,""))
"RTN","PSBOCM",184,0)
 ..S PSBDATA(1,6)=$O(PSBNXTX(PSBX2X,""))
"RTN","PSBOCM",185,0)
 ..S:PSBDATA(1,6)'["Hold" $P(PSBDATA(1,6)," ",2)=$$FMTDT^PSBOCE1($P(PSBDATA(1,6)," ",2))
"RTN","PSBOCM",186,0)
 ..S PSBDATA(1,7)=$$FMTDT^PSBOCE1($O(PSBOSTDT(PSBX2X,"")))
"RTN","PSBOCM",187,0)
 ..S PSBDATA(1,8)=$$FMTDT^PSBOCE1($E($O(PSBOSPDT(PSBX2X,"")),1,12))
"RTN","PSBOCM",188,0)
 ..K PSBSIDAT M PSBSIDAT=PSBSI(PSBX2X)               ;*68
"RTN","PSBOCM",189,0)
 ..S PSBTOT1=PSBTOT1+1
"RTN","PSBOCM",190,0)
 ..K PSBDATA(2),PSBDATA(3),PSBSILN
"RTN","PSBOCM",191,0)
 ..D BUILDLN^PSBOCM1,SIOPI(.PSBSIDAT,PSBTAB8,$S(PSBX2X["V":"Other Print Info: ",1:""))
"RTN","PSBOCM",192,0)
 ..I $D(PSBRPLN) S PSBMORE=$O(PSBRPLN(""),-1)+6 I $D(PSBSILN) S PSBMORE=PSBMORE+$O(PSBSILN(""),-1)
"RTN","PSBOCM",193,0)
 ..K PSB1,X I $D(PSBFLGD(PSBX2X)) S PSB="" F  S PSB=$O(PSBFLGD(PSBX2X,PSB)) Q:PSB=""  I ($P(PSB,":")'="NOX")&($P(PSB,":")'="STAT") S PSB1=$G(PSB1,"")_PSB
"RTN","PSBOCM",194,0)
 ..;*70 build write clinic stmt      
"RTN","PSBOCM",195,0)
 ..S PSBOUTP($$PGTOT,PSBLNTOT)="W """_$G(PSBCLIN(PSBX2X))_""""_",!"
"RTN","PSBOCM",196,0)
 ..S PSBCNT=PSBTOT1_"   "_$G(PSB1,"")
"RTN","PSBOCM",197,0)
 ..S PSBOUTP($$PGTOT,PSBLNTOT)="W """_PSBCNT_""""
"RTN","PSBOCM",198,0)
 ..S I="" F  S I=$O(PSBRPLN(I)) Q:+I=0  D
"RTN","PSBOCM",199,0)
 ...S PSBOUTP($$PGTOT,PSBLNTOT)="W !,"""_PSBRPLN(I)_""""
"RTN","PSBOCM",200,0)
 ..S I="" F  S I=$O(PSBSILN(I)) Q:+I=0  D
"RTN","PSBOCM",201,0)
 ...S PSBOUTP($$PGTOT,PSBLNTOT)="W !,"""_PSBSILN(I)_""""
"RTN","PSBOCM",202,0)
 ..S PSBOUTP($$PGTOT(2),PSBLNTOT)="W !,$TR($J("""",PSBTAB8),"" "",""-""),!"
"RTN","PSBOCM",203,0)
 ..K PSBRPLN,PSBDATA,PSBSILN
"RTN","PSBOCM",204,0)
 D:+PSBTOT>0 LGD
"RTN","PSBOCM",205,0)
 Q
"RTN","PSBOCM",206,0)
PGTOT(X) ;mnt PAGE Number
"RTN","PSBOCM",207,0)
 I (PSBLNTOT+PSBMORE)>(IOSL) D PGC^PSBOCE1
"RTN","PSBOCM",208,0)
 I $G(X,1) S PSBLNTOT=PSBLNTOT+$G(X,1),PSBMORE=PSBMORE-$G(X,1)
"RTN","PSBOCM",209,0)
 Q PSBPGNUM
"RTN","PSBOCM",210,0)
SIOPI(PSBXSI,TAB,Y) ;create SIOPI text
"RTN","PSBOCM",211,0)
 ;  *68 - modified this tag to handle only WP extra lines
"RTN","PSBOCM",212,0)
 I '$P(PSBRPT(4),U) Q   ;[*70-1512]
"RTN","PSBOCM",213,0)
 Q:$O(PSBXSI(""))=""
"RTN","PSBOCM",214,0)
 ;
"RTN","PSBOCM",215,0)
 N X,LBL,LBLLN,RMAR,TXT
"RTN","PSBOCM",216,0)
 I $G(Y)="" S Y="Special Instructions: "
"RTN","PSBOCM",217,0)
 ; build label for SI field, then check $L to make a right margin
"RTN","PSBOCM",218,0)
 S LBL="  "_Y
"RTN","PSBOCM",219,0)
 S LBLLN=$L(LBL),RMAR="",$P(RMAR," ",LBLLN+1)=""  ;make margin of " "
"RTN","PSBOCM",220,0)
 K J,TXT,TXT1,TXT2 S J(0)=""
"RTN","PSBOCM",221,0)
 S J=($O(J(""),-1)+1) S PSBSILN(J)="",J(J)="" S J=($O(J(""),-1)+1)
"RTN","PSBOCM",222,0)
 F X=0:0 S X=$O(PSBXSI(X)) Q:'X  D
"RTN","PSBOCM",223,0)
 .I X=1 S TXT=LBL_PSBXSI(X)    ;put label & 1st line together
"RTN","PSBOCM",224,0)
 .E  S TXT=RMAR_PSBXSI(X)      ;all other lines add rmar
"RTN","PSBOCM",225,0)
 .S TXT1=TXT
"RTN","PSBOCM",226,0)
 .I ($L(TXT1)>0),$F(TXT1,"""")>1 D
"RTN","PSBOCM",227,0)
 ..S TXT1=$TR(TXT1,"""","^")
"RTN","PSBOCM",228,0)
 ..I $L(TXT1)+5'<TAB S TXT2=$E(TXT1,TAB-9,999),TXT1=$E(TXT1,1,TAB-10)
"RTN","PSBOCM",229,0)
 ..I $L(TXT1,"^")>1 F Y=1:1:$L(TXT1,"^")-1 S $P(TXT1,"^",Y)=$P(TXT1,"^",Y)_""""
"RTN","PSBOCM",230,0)
 ..I $D(TXT2) I $L(TXT2,"^")>1 F X=1:1:$L(TXT2,"^")-1 S $P(TXT2,"^",X)=$P(TXT2,"^",X)_""""
"RTN","PSBOCM",231,0)
 ..S TXT1=$TR(TXT1,"^","""") I $D(TXT2) S TXT2=$TR(TXT2,"^","""")
"RTN","PSBOCM",232,0)
 .S $E(PSBSILN(J),5,999)=TXT1,J(J)="",J=J+1
"RTN","PSBOCM",233,0)
 .I $D(TXT2) S $E(PSBSILN(J),5,999)=TXT2,J(J)="",J=J+1
"RTN","PSBOCM",234,0)
 S $E(PSBSILN(J),3,999)=" ",J(J)="",J=J+1
"RTN","PSBOCM",235,0)
 Q
"RTN","PSBOCM",236,0)
LGD ; Create Report's Legend
"RTN","PSBOCM",237,0)
 K PSBLGDO
"RTN","PSBOCM",238,0)
 S PSBLGD("ORDER TYPES","C")="Continuous"
"RTN","PSBOCM",239,0)
 S PSBLGD("ORDER TYPES","O")="One Time"
"RTN","PSBOCM",240,0)
 S PSBLGD("ORDER TYPES","OC")="On Call"
"RTN","PSBOCM",241,0)
 S PSBLGD("ORDER TYPES","P")="PRN"
"RTN","PSBOCM",242,0)
 S PSB=0 F  S PSB=$O(PSBLGD("INITIALS",PSB)) Q:+PSB=0  D
"RTN","PSBOCM",243,0)
 .S PSBINIT=$$GET1^DIQ(200,PSB_",","INITIAL"),PSBLGD("INITIALS",$S(PSBINIT']" ":"*n/a*",1:PSBINIT))=$$GET1^DIQ(200,PSB_",","NAME")
"RTN","PSBOCM",244,0)
 .K PSBLGD("INITIALS",PSB)
"RTN","PSBOCM",245,0)
 S PSBPGNUM=$O(PSBOUTP(""),-1),PSBLGDO(0)="REPORT LEGEND"
"RTN","PSBOCM",246,0)
 S PSBLGDO(1)=""
"RTN","PSBOCM",247,0)
 S PSBLGDO(2)=$S($G(PSBNO,0):"",1:"SCHEDULE TYPES")
"RTN","PSBOCM",248,0)
 S PSBLGDO(3)=""
"RTN","PSBOCM",249,0)
 I '$G(PSBNO,0) S X1="",X2=3 F  S X1=$O(PSBLGD("ORDER TYPES",X1)) Q:X1=""  S X2=X2+1,PSBLGDO(X2)=X1,$E(PSBLGDO(X2),5)="- "_PSBLGD("ORDER TYPES",X1)
"RTN","PSBOCM",250,0)
 I $D(PSBLGD("INITIALS")) S $E(PSBLGDO(2),35)="INITIALS" S X1="",X2=3 F  S X1=$O(PSBLGD("INITIALS",X1)) Q:X1=""  S X2=X2+1,$E(PSBLGDO(X2),35)=X1,$E(PSBLGDO(X2),40)="- "_PSBLGD("INITIALS",X1)
"RTN","PSBOCM",251,0)
 S (PSBMORE,X0)=10+($O(PSBLGDO(""),-1))
"RTN","PSBOCM",252,0)
 I (PSBLNTOT+PSBMORE)'<IOSL S PSBLNTOT=PSBTOPHD-2,PSBPGNUM=PSBPGNUM+1
"RTN","PSBOCM",253,0)
 I IOSL<1000 S X2=PSBLNTOT F  Q:X2'<(IOSL-(X0+3))  S PSBOUTP($$PGTOT,PSBLNTOT)="W !",X2=X2+1
"RTN","PSBOCM",254,0)
 S PSBMORE=X0
"RTN","PSBOCM",255,0)
 S PSBOUTP($$PGTOT(2),PSBLNTOT)="W !,"""_$TR($J("",IOM)," ","=")_""",!"
"RTN","PSBOCM",256,0)
 F X1=0:1 Q:'$D(PSBLGDO(X1))  S PSBOUTP($$PGTOT,PSBLNTOT)="W !,"""_$G(PSBLGDO(X1)," ")_""""
"RTN","PSBOCM",257,0)
 S PSBOUTP($$PGTOT(2),PSBLNTOT)="W !,"""_$TR($J("",IOM)," ","=")_""",!"
"RTN","PSBOCM",258,0)
 Q
"RTN","PSBODL")
0^35^B108404103^B104826569
"RTN","PSBODL",1,0)
PSBODL ;BIRMINGHAM/EFC-DUE LIST ;03/06/16 3:06pm
"RTN","PSBODL",2,0)
 ;;3.0;BAR CODE MED ADMIN;**5,9,38,32,25,63,68,70,83**;Mar 2004;Build 89
"RTN","PSBODL",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified. 
"RTN","PSBODL",4,0)
 ;
"RTN","PSBODL",5,0)
 ; Reference/IA
"RTN","PSBODL",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBODL",7,0)
 ; $$GET^XPAR/2263
"RTN","PSBODL",8,0)
 ; ^XLFDT/10103
"RTN","PSBODL",9,0)
 ; GETSIOPI^PSJBCMA5/5763
"RTN","PSBODL",10,0)
 ;
"RTN","PSBODL",11,0)
 ;*68 - add call to retrieve New WP Special Instructions/OPI fields
"RTN","PSBODL",12,0)
 ;*70 - add Clinic filter and insert clinic name into array to force
"RTN","PSBODL",13,0)
 ;      it to sort before admin times & print clinic name when changes
"RTN","PSBODL",14,0)
 ;*83 - add Remove times to the report that need removing.
"RTN","PSBODL",15,0)
 ;
"RTN","PSBODL",16,0)
EN ; Prt DL
"RTN","PSBODL",17,0)
 N PSBGBL,PSBHDR,IOINHI,IOINORM,PSBGIVEN,PSBIEN,PSBLGDT,PSBEVDT,DFN,PSBFLAG,PSBSRCHL
"RTN","PSBODL",18,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS S X=""
"RTN","PSBODL",19,0)
 I '$D(^TMP("PSBO",$J,"B")) S ^TMP("PSBO",$J,"B","EMPTY")=""
"RTN","PSBODL",20,0)
 S PSBGBL="^TMP(""PSBO"",$J,""B"")"
"RTN","PSBODL",21,0)
 I $G(PSBRPT(.4)) S $P(PSBRPT(.2),U,8)=1
"RTN","PSBODL",22,0)
 ;check Clinic or Nurs Unit search list                *70
"RTN","PSBODL",23,0)
 S PSBSRCHL=$$SRCHLIST^PSBOHDR()
"RTN","PSBODL",24,0)
 ;
"RTN","PSBODL",25,0)
 F  S PSBGBL=$Q(@PSBGBL) Q:PSBGBL=""  Q:$QS(PSBGBL,1)'="PSBO"!($QS(PSBGBL,2)'=$J)  D
"RTN","PSBODL",26,0)
 .S DFN=$QS(PSBGBL,5)
"RTN","PSBODL",27,0)
 .K PSBHDR
"RTN","PSBODL",28,0)
 .S PSBHDR(1)="MEDICATION DUE LIST for "
"RTN","PSBODL",29,0)
 .S (Y,PSBEVDT)=$P(PSBRPT(.1),U,6) D D^DIQ S Z=Y,PSBHDR(1)=PSBHDR(1)_Y_"@" S Y=$P(PSBRPT(.1),U,7) S PSBHDR(1)=PSBHDR(1)_$E(Y_"0000",2,5)
"RTN","PSBODL",30,0)
 .S PSBEVDT2=$P(PSBRPT(.1),U,6) S Y=$P(PSBRPT(.1),U,9) S:Y]"" PSBHDR(1)=PSBHDR(1)_" to "_Z_"@"_$E(Y_"0000",2,5)
"RTN","PSBODL",31,0)
 .S PSBHDR(2)="Schedule Type(s): --"
"RTN","PSBODL",32,0)
 .F Y=1:1:4 I $P(PSBRPT(.2),U,Y) S $P(PSBHDR(2),": ",2)=$P(PSBHDR(2),": ",2)_$S(PSBHDR(2)["--":"",1:"/ ")_$P("Continuous^PRN^On-Call^One-Time",U,Y)_" " S PSBHDR(2)=$TR(PSBHDR(2),"-","")
"RTN","PSBODL",33,0)
 .S PSBHDR(3)="Order Type(s): --"
"RTN","PSBODL",34,0)
 .F Y=6,7,8 I $P(PSBRPT(.2),U,Y) S $P(PSBHDR(3),": ",2)=$P(PSBHDR(3),": ",2)_$S(PSBHDR(3)["--":"",1:"/ ")_$P("^^^^^IV^Unit Dose^Future Orders",U,Y)_" " S PSBHDR(3)=$TR(PSBHDR(3),"-","")
"RTN","PSBODL",35,0)
 .D:$G(PSBSRCHL)]""                                          ;*70
"RTN","PSBODL",36,0)
 ..S PSBHDR(4)=""
"RTN","PSBODL",37,0)
 ..S:$P(PSBRPT(4),U,2)="C" PSBHDR(5)="Clinic Search List: "
"RTN","PSBODL",38,0)
 ..S:$P(PSBRPT(4),U,2)="I" PSBHDR(5)="Ward Location: "
"RTN","PSBODL",39,0)
 .;
"RTN","PSBODL",40,0)
 .I $QS(PSBGBL,4)="EMPTY" D  Q
"RTN","PSBODL",41,0)
 ..W $$EMPTYHDR^PSBOHDR(PSBSRCHL)
"RTN","PSBODL",42,0)
 ..W !!?10,"** NO DATA FOUND for "_$S(PSBCLINORD:"Clinic Search List",1:"Entire Ward/Nurse Location")_" **",! Q
"RTN","PSBODL",43,0)
 .;
"RTN","PSBODL",44,0)
 .D PRINT(DFN)
"RTN","PSBODL",45,0)
 ;
"RTN","PSBODL",46,0)
 K ^TMP("PSJ",$J),^TMP("PSB",$J),^TMP("PSBO",$J)
"RTN","PSBODL",47,0)
 Q
"RTN","PSBODL",48,0)
PRINT(DFN) ;^TMP($J.
"RTN","PSBODL",49,0)
 N PSBGBL,PSBOSTRT,PSBOSTOP,PSBINDX,PSBTYPE,PSBSCH,PSBSCHT
"RTN","PSBODL",50,0)
 N PSBMED,PSBORD,PSB,PSBX,PSBY,PSBZ,PSBSTOP,PSBSTRT,PSBSM,PSBNUM,PSBAT
"RTN","PSBODL",51,0)
 N PSBADMIN,PSBADM,PSBSTAT,PSBWFLAG,PSBODATE,PSBCLINIC,PSBCLNMB,PSBTMPSD,PSBSTTMP   ;*70
"RTN","PSBODL",52,0)
 W $$HDR()
"RTN","PSBODL",53,0)
 S PSBOSTRT=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,7)
"RTN","PSBODL",54,0)
 S PSBOSTOP=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,9)
"RTN","PSBODL",55,0)
 K ^TMP("PSJ",$J),^TMP("PSB",$J)
"RTN","PSBODL",56,0)
 D GETREMOV^PSBO1(DFN)                           ;83
"RTN","PSBODL",57,0)
 D EN^PSJBCMA(DFN,PSBOSTRT,"")
"RTN","PSBODL",58,0)
 D:PSBCLINORD                                    ;*70 filer clinics
"RTN","PSBODL",59,0)
 . I $D(PSBRPT(2)) D FILTERCO^PSBO Q
"RTN","PSBODL",60,0)
 . D INCLUDCO^PSBVDLU1
"RTN","PSBODL",61,0)
 I 'PSBCLINORD D REMOVECO^PSBVDLU1               ;*70
"RTN","PSBODL",62,0)
 I $G(^TMP("PSJ",$J,1,0))=-1 W !!?10,"** NO SPECIFIED MEDICATIONS TO PRINT **",!,$$BLANKS(),$$FTR^PSBODL1() Q
"RTN","PSBODL",63,0)
 S PSBI1=0 F  S PSBODATE=$$FMADD^XLFDT(PSBEVDT,PSBI1) Q:PSBODATE>PSBEVDT2  Q:PSBODATE=-1  D  ;Quit if Date is not valid Fileman Date added in PSB*3*63
"RTN","PSBODL",64,0)
 .S PSBI1=1
"RTN","PSBODL",65,0)
 .S Y=PSBODATE D D^DIQ
"RTN","PSBODL",66,0)
 .W !!,"Administration Date: "_Y,!
"RTN","PSBODL",67,0)
 .S PSBINDX=0
"RTN","PSBODL",68,0)
 .F  S PSBINDX=$O(^TMP("PSJ",$J,PSBINDX)) Q:'PSBINDX  D
"RTN","PSBODL",69,0)
 ..S PSBCLINIC=$P(^TMP("PSJ",$J,PSBINDX,0),U,11),PSBCLNMB=$P(^TMP("PSJ",$J,PSBINDX,0),U,12)                  ;*70
"RTN","PSBODL",70,0)
 ..S PSBTYPE=$P(^TMP("PSJ",$J,PSBINDX,0),U,3),PSBTYPE=$E(PSBTYPE,$L(PSBTYPE))
"RTN","PSBODL",71,0)
 ..Q:PSBTYPE=""!(PSBTYPE="P")  ; No Pend this ver
"RTN","PSBODL",72,0)
 ..S PSBSTAT=^TMP("PSJ",$J,PSBINDX,1)
"RTN","PSBODL",73,0)
 ..I $P(PSBSTAT,U,7)["D"!($P(PSBSTAT,U,7)="E")!($P(PSBSTAT,U,8)) Q
"RTN","PSBODL",74,0)
 ..Q:PSBTYPE="U"&('$P(PSBRPT(.2),U,7))
"RTN","PSBODL",75,0)
 ..Q:PSBTYPE="V"&('$P(PSBRPT(.2),U,6))
"RTN","PSBODL",76,0)
 ..S PSBTYPE=$S(PSBTYPE="U":"UD-",PSBTYPE="V":"IV-",1:"**")
"RTN","PSBODL",77,0)
 ..S Y=$P(PSBSTAT,U,2)
"RTN","PSBODL",78,0)
 ..Q:Y="C"&('$P(PSBRPT(.2),U,1))
"RTN","PSBODL",79,0)
 ..Q:Y="P"&('$P(PSBRPT(.2),U,2))
"RTN","PSBODL",80,0)
 ..Q:Y="OC"&('$P(PSBRPT(.2),U,3))
"RTN","PSBODL",81,0)
 ..Q:Y="O"&('$P(PSBRPT(.2),U,4))
"RTN","PSBODL",82,0)
 ..S PSBSCHT=Y
"RTN","PSBODL",83,0)
 ..S:PSBSCHT="" PSBSCHT="*"
"RTN","PSBODL",84,0)
 ..S PSBMED=$P(^TMP("PSJ",$J,PSBINDX,3),U,2)
"RTN","PSBODL",85,0)
 ..S PSBORD=$P(^TMP("PSJ",$J,PSBINDX,0),U,3)
"RTN","PSBODL",86,0)
 ..S ^TMP("PSB",$J,"B",PSBTYPE,PSBSCHT,PSBMED,PSBORD)=""
"RTN","PSBODL",87,0)
 ..I PSBCLINIC]"" S ^TMP("PSB",$J,"C",DFN,PSBORD)=PSBCLNMB_"^"_PSBCLINIC
"RTN","PSBODL",88,0)
 .I '$D(^TMP("PSB",$J,"B")) W !!?10,"** NO SPECIFIED MEDICATIONS TO PRINT **",!,$$BLANKS(),$$FTR^PSBODL1() Q
"RTN","PSBODL",89,0)
 .S PSBGBL=$NAME(^TMP("PSB",$J,"B")),PSBWFLAG=0
"RTN","PSBODL",90,0)
 .F  S PSBGBL=$Q(@PSBGBL) Q:PSBGBL=""  Q:($QS(PSBGBL,1)'="PSB")!($QS(PSBGBL,2)'=$J)!($QS(PSBGBL,3)'="B")  D
"RTN","PSBODL",91,0)
 ..K PSBORD,PSBFUTRO
"RTN","PSBODL",92,0)
 ..S PSBTYPE=$QS(PSBGBL,4)
"RTN","PSBODL",93,0)
 ..S PSBSCHT=$QS(PSBGBL,5)
"RTN","PSBODL",94,0)
 ..S PSBMED=$QS(PSBGBL,6)
"RTN","PSBODL",95,0)
 ..S PSBORD=$QS(PSBGBL,7)
"RTN","PSBODL",96,0)
 ..D CLEAN^PSBVT
"RTN","PSBODL",97,0)
 ..D PSJ1^PSBVT(DFN,PSBORD)
"RTN","PSBODL",98,0)
 ..;*68 begin
"RTN","PSBODL",99,0)
 ..K ^TMP("PSJBCMA5",$J,DFN,PSBONX)
"RTN","PSBODL",100,0)
 ..D GETSIOPI^PSJBCMA5(DFN,PSBONX,1)
"RTN","PSBODL",101,0)
 ..;*68 end
"RTN","PSBODL",102,0)
 ..D NOW^%DTC S PSBNOW=%
"RTN","PSBODL",103,0)
 ..Q:PSBOSP<PSBOSTRT
"RTN","PSBODL",104,0)
 ..Q:(PSBOSP<PSBOSTRT)&(PSBSCHT'="O")
"RTN","PSBODL",105,0)
 ..Q:(PSBOSP'>PSBNOW)
"RTN","PSBODL",106,0)
 ..S (PSBYES,PSBODD,PSBDAYB,PSBSCBR)=0
"RTN","PSBODL",107,0)
 ..S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1,PSBDAYB=1
"RTN","PSBODL",108,0)
 ..F I=1:1 Q:$P(PSBSCH,"-",I)=""  I $P(PSBSCH,"-",I)?2N!($P(PSBSCH,"-",I)?4N) S PSBYES=1,PSBSCBR=1
"RTN","PSBODL",109,0)
 ..I PSBYES,PSBADST="",PSBSCHT'="O",PSBSCHT'="OC",PSBSCHT'="P" D  Q
"RTN","PSBODL",110,0)
 ...D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Admin times required",PSBSCH)
"RTN","PSBODL",111,0)
 ..I PSBSCHT="OC" S PSBYES=1
"RTN","PSBODL",112,0)
 ..I PSBSCHT="P" S PSBYES=1
"RTN","PSBODL",113,0)
 ..I "PCS"'[PSBIVT S PSBYES=1
"RTN","PSBODL",114,0)
 ..I PSBIVT["S",PSBISYR'=1 S PSBYES=1
"RTN","PSBODL",115,0)
 ..I PSBIVT["C",PSBCHEMT'="P",PSBISYR'=1 S PSBYES=1
"RTN","PSBODL",116,0)
 ..I PSBIVT["C",PSBCHEMT="A" S PSBYES=1
"RTN","PSBODL",117,0)
 ..I PSBFREQ="O" S PSBFREQ=1440
"RTN","PSBODL",118,0)
 ..I PSBFREQ="D" S PSBFREQ=""
"RTN","PSBODL",119,0)
 ..I PSBSCHT="P" S PSBFREQ=1440
"RTN","PSBODL",120,0)
 ..I PSBSCHT="O" S PSBFREQ=1440
"RTN","PSBODL",121,0)
 ..I 'PSBYES,PSBFREQ<1 D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid frequency received from order",PSBSCH) Q
"RTN","PSBODL",122,0)
 ..S PSBVALB=$$IVPTAB^PSBVDLU3(PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,PSBIVPSH)
"RTN","PSBODL",123,0)
 ..I 'PSBDAYB,'PSBSCBR,PSBSCHT="C",PSBVALB="1",PSBADST'="",PSBFREQ<1 D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid frequency received from order",PSBSCH) Q
"RTN","PSBODL",124,0)
 ..I +PSBFREQ>0 I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBODL",125,0)
 ..I PSBODD,PSBADST'="" D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Administration Times on ODD SCHEDULE",PSBSCH) Q
"RTN","PSBODL",126,0)
 ..I PSBADST'="" D
"RTN","PSBODL",127,0)
 ...F PSBY=1:1:$L(PSBADST,"-")  D
"RTN","PSBODL",128,0)
 ....D:($P(PSBADST,"-",PSBY)'?2N)&($P(PSBADST,"-",PSBY)'?4N)
"RTN","PSBODL",129,0)
 .....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid Admin times",PSBSCH)
"RTN","PSBODL",130,0)
 ..I PSBSCHT="C",PSBOTYP="U",$G(PSBOST)<$G(PSBOSTRT) Q:'$$OKAY^PSBVDLU1(PSBOST,PSBODATE,PSBSCH,PSBONX,PSBOITX,PSBFREQ,)  ;Add check for QOD schedules in PSB*3*63
"RTN","PSBODL",131,0)
 ..I PSBSCHT="C",$$IVPTAB^PSBVDLU3(PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,PSBIVPSH),'$$OKAY^PSBVDLU1(PSBOST,PSBODATE,PSBSCH,PSBONX,PSBOITX,PSBFREQ) Q
"RTN","PSBODL",132,0)
 ..I PSBSCHT="O" D  Q:PSBGVN
"RTN","PSBODL",133,0)
 ...S (PSBGVN,X,Y)=""
"RTN","PSBODL",134,0)
 ...F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBODL",135,0)
 ....F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  D
"RTN","PSBODL",136,0)
 .....I $P(^PSB(53.79,Y,.1),U)=PSBONX,$P(^PSB(53.79,Y,0),U,9)="G" S PSBGVN=1,(X,Y)=0
"RTN","PSBODL",137,0)
 ..S PSBRMN=1
"RTN","PSBODL",138,0)
 ..I PSBSCHT="O" D
"RTN","PSBODL",139,0)
 ...Q:(PSBOST'=PSBOSP)
"RTN","PSBODL",140,0)
 ...Q:(PSBOSP<PSBOSTRT)
"RTN","PSBODL",141,0)
 ...Q:((%'>PSBOST)!(%'=PSBOST))
"RTN","PSBODL",142,0)
 ...S PSBRMN=0
"RTN","PSBODL",143,0)
 ..Q:'PSBRMN
"RTN","PSBODL",144,0)
 ..I $G(PSBORD) S PSBCLINIC=$P($G(^TMP("PSB",$J,"C",+$G(DFN),PSBORD)),"^",2)
"RTN","PSBODL",145,0)
 ..I +$G(PSBCLINIC) I PSBOST>PSBNOW S ^TMP("PSBO",$J,DFN,PSBORD,PSBTYPE)="" Q
"RTN","PSBODL",146,0)
 ..I '$G(PSBCLINIC) I PSBOST>$$FMADD^XLFDT(PSBNOW,"","",+($$GET^XPAR("DIV","PSB ADMIN BEFORE"))) S ^TMP("PSBO",$J,DFN,PSBORD,PSBTYPE)="" Q
"RTN","PSBODL",147,0)
 ..I PSBSCHT="OC" D  Q:PSBGVN&('$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL"))
"RTN","PSBODL",148,0)
 ...S (PSBGVN,X,Y)=""
"RTN","PSBODL",149,0)
 ...F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBODL",150,0)
 ....F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  D
"RTN","PSBODL",151,0)
 .....I $P(^PSB(53.79,Y,.1),U)=PSBONX,$P(^PSB(53.79,Y,0),U,9)="G" S PSBGVN=1,(X,Y)=0
"RTN","PSBODL",152,0)
 ..S PSBLGDT="",X=""
"RTN","PSBODL",153,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,X),-1) Q:'X  D  Q:PSBLGDT
"RTN","PSBODL",154,0)
 ...S PSBIEN=""
"RTN","PSBODL",155,0)
 ...F  S PSBIEN=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,X,PSBIEN),-1) Q:PSBIEN=""  D  Q:PSBLGDT
"RTN","PSBODL",156,0)
 ....S:$P($G(^PSB(53.79,PSBIEN,0)),U,9)="G" PSBLGDT=X
"RTN","PSBODL",157,0)
 ..S PSBADMIN="" K ^TMP("PSB",$J,"GETADMIN")
"RTN","PSBODL",158,0)
 ..I PSBSCHT="C" D  Q:PSBADMIN=""
"RTN","PSBODL",159,0)
 ...S PSBX=PSBADST,PSBFLAG=1
"RTN","PSBODL",160,0)
 ...D:PSBX=""
"RTN","PSBODL",161,0)
 ....I PSBIVT="C",PSBCHEMT="A" S PSBX="0000",PSBFLAG=0
"RTN","PSBODL",162,0)
 ....I PSBIVT="C",PSBISYR=0 S PSBX="0000",PSBFLAG=0
"RTN","PSBODL",163,0)
 ....I PSBIVT="S",PSBISYR'=1 S PSBX="0000",PSBFLAG=0
"RTN","PSBODL",164,0)
 ....I "HA"[PSBIVT S:PSBIVT]"" PSBX="0000",PSBFLAG=0
"RTN","PSBODL",165,0)
 ...I ((PSBIVT="S")!(PSBIVT="C")),(PSBISYR=1) S:+($G(PSBX))=0 PSBX=""
"RTN","PSBODL",166,0)
 ...I (PSBIVT="C"),(PSBCHEMT="P") S:+($G(PSBX))=0 PSBX=""
"RTN","PSBODL",167,0)
 ...I PSBOTYP="U",PSBX="0000" S PSBX=""
"RTN","PSBODL",168,0)
 ...I PSBIVT="P" S:+($G(PSBX))=0 PSBX=""
"RTN","PSBODL",169,0)
 ...I PSBX="" S:($G(PSBFREQ)>29)!(PSBFREQ="D") PSBX=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBODATE)
"RTN","PSBODL",170,0)
 ...E  S ^TMP("PSB",$J,"GETADMIN",0)=PSBX
"RTN","PSBODL",171,0)
 ...D:PSBX'=""
"RTN","PSBODL",172,0)
 ....F PSBXX=0:1 Q:'$D(^TMP("PSB",$J,"GETADMIN",PSBXX))  S PSBX=$G(^TMP("PSB",$J,"GETADMIN",PSBXX)) D
"RTN","PSBODL",173,0)
 .....F PSBY=1:1:$L(PSBX,"-")  D
"RTN","PSBODL",174,0)
 ......S PSBAT=+(PSBODATE_"."_$P(PSBX,"-",PSBY))
"RTN","PSBODL",175,0)
 ......I PSBFLAG Q:PSBAT<PSBOSTRT!(PSBAT>PSBOSTOP)
"RTN","PSBODL",176,0)
 ......D VAL^PSBMLVAL(.PSBZ,DFN,PSBON,PSBOTYP,PSBAT)
"RTN","PSBODL",177,0)
 ......I (PSBZ(0)<0)&(PSBCNT=1) S ^TMP("PSBO",$J,DFN,PSBORD,PSBTYPE,PSBAT)="" Q
"RTN","PSBODL",178,0)
 ......I (PSBAT'["."),($G(PSBORD)["V") I (PSBOST<PSBOSTOP) K PSBSTTMP D  Q:$G(PSBSTTMP)
"RTN","PSBODL",179,0)
 .......I ('$G(PSBCLINIC)&(PSBOST'<$$FMADD^XLFDT(PSBNOW,"","",($$GET^XPAR("DIV","PSB ADMIN BEFORE"))))) S PSBSTTMP=1 Q
"RTN","PSBODL",180,0)
 .......I ($G(PSBCLINIC)&(PSBOST'<PSBNOW)) S ^TMP("PSBO",$J,DFN,PSBORD,PSBTYPE,PSBAT)="",PSBSTTMP=1 Q
"RTN","PSBODL",181,0)
 ......Q:+PSBZ(0)<0
"RTN","PSBODL",182,0)
 ......I $G(PSBOST)'>$G(PSBAT) D
"RTN","PSBODL",183,0)
 .......Q:($G(PSBOSP)'>$G(PSBAT))
"RTN","PSBODL",184,0)
 .......S PSBADMIN=PSBADMIN_$S(PSBADMIN]"":"-",1:"")_$P(PSBX,"-",PSBY)
"RTN","PSBODL",185,0)
 ......E  I ($P($G(PSBOST),".")'>$P($G(PSBAT),"."))&($P($G(PSBAT),".",2)="") S PSBADMIN=PSBADMIN_$S(PSBADMIN]"":"-",1:"")_$P(PSBX,"-",PSBY)
"RTN","PSBODL",186,0)
 ...I +$G(PSBFREQ)>0,$G(PSBFREQ)<30,PSBADMIN'="0000" S PSBADMIN="Due every "_$G(PSBFREQ)_" minutes."
"RTN","PSBODL",187,0)
 ..I $Y>(IOSL-(12+($L(PSBADMIN)/27))) W !?(IOM-36\2),"(Medications Continued on Next Page)",$$FTR^PSBODL1(),$$HDR()
"RTN","PSBODL",188,0)
 ..I PSBSM S PSBSM=$S(PSBSMX:"H",1:"")_"SM"
"RTN","PSBODL",189,0)
 ..E  S PSBSM=""
"RTN","PSBODL",190,0)
 ..W !,PSBCLINIC                                                  ;*70
"RTN","PSBODL",191,0)
 ..W !,$J(PSBSM,3),?6,PSBTYPE,$E(PSBSCHT,1,4),?12 S PSBWFLAG=1
"RTN","PSBODL",192,0)
 ..S X="",Y=0
"RTN","PSBODL",193,0)
 ..D WRAPPUP^PSBODL1
"RTN","PSBODL",194,0)
 .;check for Removes not yet printed on report
"RTN","PSBODL",195,0)
 .D CHKREM^PSBODL1
"RTN","PSBODL",196,0)
 .I '$G(PSBWFLAG) W !!,?10,"** NO SPECIFIED MEDICATIONS TO PRINT **"
"RTN","PSBODL",197,0)
 .W $$BLANKS(),$$FTR^PSBODL1()
"RTN","PSBODL",198,0)
 .S PSBORD=$O(^TMP("PSBO",$J,DFN,""),-1)
"RTN","PSBODL",199,0)
 .I +$G(PSBORD)>0,$P(PSBRPT(.4),U,1),$D(^TMP("PSBO",$J,DFN,PSBORD)) D EN^PSBODL1
"RTN","PSBODL",200,0)
 I $G(PSBODATE)=-1 W !!,?10,"** NO SPECIFIED MEDICATIONS TO PRINT **",$$BLANKS(),$$FTR^PSBODL1() ;Add no medications message, blank lines and footer to patients for invalid Fileman date in PSB*3*63
"RTN","PSBODL",201,0)
 ;
"RTN","PSBODL",202,0)
 K ^TMP("PSJBCMA5",$J)
"RTN","PSBODL",203,0)
 Q
"RTN","PSBODL",204,0)
HDR() ;
"RTN","PSBODL",205,0)
 D PT^PSBOHDR(DFN,.PSBHDR,,,PSBSRCHL)
"RTN","PSBODL",206,0)
 W !
"RTN","PSBODL",207,0)
 W:PSBCLINORD "Location"
"RTN","PSBODL",208,0)
 W ?100,"Start",?110,"Stop"
"RTN","PSBODL",209,0)
 W !,"Self",?85,"Last",?100,"Date",?110,"Date",?120,"Verifying"
"RTN","PSBODL",210,0)
 W !,"Med",?6,"Sched",?14,"Medication",?50,"Dose",?78,"Route",?85,"Given",?100,"@Time",?110,"@Time",?120,"Rph/Rn"
"RTN","PSBODL",211,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL",212,0)
 Q ""
"RTN","PSBODL",213,0)
BLANKS() ;
"RTN","PSBODL",214,0)
 Q:'$P(PSBRPT(.2),U,5) ""
"RTN","PSBODL",215,0)
 W !
"RTN","PSBODL",216,0)
 D:$Y>(IOSL-26)
"RTN","PSBODL",217,0)
 .W ?(IOM-42\2),"(Changes/Addendums to Orders on Next Page)"
"RTN","PSBODL",218,0)
 .W $$FTR^PSBODL1(),$$HDR() ; New page - no room for blanks
"RTN","PSBODL",219,0)
 I IOSL<100 F  Q:$Y>(IOSL-26)  W !
"RTN","PSBODL",220,0)
 W ?(IOM-28\2),"Changes/Addendums to orders"
"RTN","PSBODL",221,0)
 F X=1:1:4 D
"RTN","PSBODL",222,0)
 .W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL",223,0)
 .W !!?3,"CON ___ PRN ___"
"RTN","PSBODL",224,0)
 .W ?20,"Drug: ",$TR($J("",22)," ","_")
"RTN","PSBODL",225,0)
 .W ?50,"Give: ",$TR($J("",42)," ","_")
"RTN","PSBODL",226,0)
 .W ?100,"Start: _________ Stop: _________"
"RTN","PSBODL",227,0)
 .W !!?48,"Remove: ",$TR($J("",42)," ","_")                     ;*83
"RTN","PSBODL",228,0)
 .W !?20,"Spec"
"RTN","PSBODL",229,0)
 .W !?3,"OT  ___ OC  ___"
"RTN","PSBODL",230,0)
 .W ?20,"Inst: ",$TR($J("",72)," ","_")
"RTN","PSBODL",231,0)
 .W ?100,"Initials: ______ Date: _________"
"RTN","PSBODL",232,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL",233,0)
 Q ""
"RTN","PSBODL1")
0^36^B83787134^B44703020
"RTN","PSBODL1",1,0)
PSBODL1 ;BIRMINGHAM/VRN-DUE LIST ;03/06/16 3:06pm
"RTN","PSBODL1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**5,9,32,28,68,70,83**;Mar 2004;Build 89
"RTN","PSBODL1",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified. 
"RTN","PSBODL1",4,0)
 ;
"RTN","PSBODL1",5,0)
 ;*68 - print New unlimited Wp Special Instructions/OPI fields
"RTN","PSBODL1",6,0)
 ;*70 - add Psbsrchl to HDR
"RTN","PSBODL1",7,0)
 ;*83 - add Removes to the report that need attention.
"RTN","PSBODL1",8,0)
 ;
"RTN","PSBODL1",9,0)
EN ;
"RTN","PSBODL1",10,0)
 N QQ
"RTN","PSBODL1",11,0)
 S PSBFOHDR=0
"RTN","PSBODL1",12,0)
 S PSBORD=0 F  S PSBORD=$O(^TMP("PSBO",$J,DFN,PSBORD)) Q:PSBORD=""  S PSBTYPE=$O(^TMP("PSBO",$J,DFN,PSBORD,"")) D
"RTN","PSBODL1",13,0)
 .D CLEAN^PSBVT
"RTN","PSBODL1",14,0)
 .D PSJ1^PSBVT(DFN,PSBORD)
"RTN","PSBODL1",15,0)
 .I PSBSCHT="C" D  Q:PSBADMIN=""
"RTN","PSBODL1",16,0)
 ..S PSBX=PSBADST,PSBFLAG=1
"RTN","PSBODL1",17,0)
 ..I PSBX="",PSBONX["V",PSBIVT'="P" S PSBFLAG=0
"RTN","PSBODL1",18,0)
 ..S (PSBYES,PSBODD)=0
"RTN","PSBODL1",19,0)
 ..S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1
"RTN","PSBODL1",20,0)
 ..F I=1:1 Q:$P(PSBSCH,"-",I)=""  I $P(PSBSCH,"-",I)?2N!($P(PSBSCH,"-",I)?4N) S PSBYES=1
"RTN","PSBODL1",21,0)
 ..I PSBYES,PSBADST="",PSBSCHT'="O",PSBSCHT'="OC",PSBSCHT'="P"  Q
"RTN","PSBODL1",22,0)
 ..I PSBFREQ="O" S PSBFREQ=1440
"RTN","PSBODL1",23,0)
 ..I 'PSBYES,PSBADST="",PSBFREQ<1 Q
"RTN","PSBODL1",24,0)
 ..I +PSBFREQ>0 I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBODL1",25,0)
 ..I PSBODD,PSBADST'="" Q
"RTN","PSBODL1",26,0)
 ..D:PSBX=""
"RTN","PSBODL1",27,0)
 ...I PSBIVT="C",PSBCHEMT="A" S PSBX="0000",PSBFLAG=0
"RTN","PSBODL1",28,0)
 ...I PSBIVT="C",PSBISYR=0 S PSBX="0000",PSBFLAG=0
"RTN","PSBODL1",29,0)
 ...I PSBIVT="S",PSBISYR=0 S PSBX="0000",PSBFLAG=0
"RTN","PSBODL1",30,0)
 ...I "HA"[PSBIVT S PSBX="0000",PSBFLAG=0
"RTN","PSBODL1",31,0)
 ..I ("SC"[PSBIVT),(PSBISYR=1) S PSBX=""
"RTN","PSBODL1",32,0)
 ..I (PSBIVT="C"),(PSBCHEMT="P") S PSBX=""
"RTN","PSBODL1",33,0)
 ..I PSBOTYP="U",PSBX="0000" S PSBX=""
"RTN","PSBODL1",34,0)
 ..I PSBIVT="P",$G(PSBX)=0 S PSBX=""
"RTN","PSBODL1",35,0)
 ..I PSBX="" S PSBX=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBEVDT)
"RTN","PSBODL1",36,0)
 ..E  K ^TMP("PSB",$J,"GETADMIN") S ^TMP("PSB",$J,"GETADMIN",0)=PSBX
"RTN","PSBODL1",37,0)
 ..S PSBADMIN=""
"RTN","PSBODL1",38,0)
 ..F PSBXX=0:1 Q:'$D(^TMP("PSB",$J,"GETADMIN",PSBXX))  S PSBX=$G(^TMP("PSB",$J,"GETADMIN",PSBXX)) D
"RTN","PSBODL1",39,0)
 ...F PSBY=1:1:$L(PSBX,"-")  D
"RTN","PSBODL1",40,0)
 ....Q:($P(PSBX,"-",PSBY)'?2N)&($P(PSBX,"-",PSBY)'?4N)
"RTN","PSBODL1",41,0)
 ....S PSBAT=+(PSBODATE_"."_$P(PSBX,"-",PSBY))
"RTN","PSBODL1",42,0)
 ....I PSBFLAG Q:PSBAT<PSBOSTRT!(PSBAT>PSBOSTOP)  ; Report Window
"RTN","PSBODL1",43,0)
 ....D VAL^PSBMLVAL(.PSBZ,DFN,PSBONX,PSBTYPE,PSBAT)
"RTN","PSBODL1",44,0)
 ....S:$G(PSBFREQ)>29 PSBADMIN=PSBADMIN_$S(PSBADMIN]"":"-",1:"")_$P(PSBX,"-",PSBY)
"RTN","PSBODL1",45,0)
 ....S:$G(PSBFREQ)<30 PSBADMIN="Due every "_$G(PSBFREQ)_" minutes."
"RTN","PSBODL1",46,0)
 .I PSBSCHT'="C" S PSBADMIN=PSBADST
"RTN","PSBODL1",47,0)
 .; Get LAST GIVEN date/time
"RTN","PSBODL1",48,0)
 .S PSBLGDT="",X=""
"RTN","PSBODL1",49,0)
 .F  S X=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,X),-1) Q:'X  D  Q:PSBLGDT
"RTN","PSBODL1",50,0)
 ..S PSBIEN=""
"RTN","PSBODL1",51,0)
 ..F  S PSBIEN=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,X,PSBIEN),-1) Q:PSBIEN=""  D  Q:PSBLGDT
"RTN","PSBODL1",52,0)
 ...S:"MHNR"'[$P($G(^PSB(53.79,PSBIEN,0)),U,9) PSBLGDT=X
"RTN","PSBODL1",53,0)
 .I $Y>(IOSL-12) I $Y<(IOSL-4) W !?(IOM-36\2),"(Medications Continued on Next Page)",$$FTR(),$$HDR()
"RTN","PSBODL1",54,0)
 .I PSBSM S PSBSM=$S(PSBSMX:"H",1:"")_"SM"
"RTN","PSBODL1",55,0)
 .E  S PSBSM=""
"RTN","PSBODL1",56,0)
 .I 'PSBFOHDR S PSBFOHDR=1 W $$HDR()
"RTN","PSBODL1",57,0)
 .W !,$J(PSBSM,3),?6,PSBTYPE,$E(PSBSCHT,1,4),?12 S PSBWFLAG=1
"RTN","PSBODL1",58,0)
 .S X="",Y=0
"RTN","PSBODL1",59,0)
 .W $$WRAP(14,34,PSBOITX)
"RTN","PSBODL1",60,0)
 .S PSBADM="Give: "_PSBDOSE_"  "_PSBSCH
"RTN","PSBODL1",61,0)
 .W $$WRAP(50,27,PSBADM)
"RTN","PSBODL1",62,0)
 .W $$WRAP(78,6,PSBMR)
"RTN","PSBODL1",63,0)
 .W ?85 I PSBLGDT W $E(PSBLGDT,4,5),"/",$E(PSBLGDT,6,7),"/",$E(PSBLGDT,2,3) W "@",$E($P(PSBLGDT,".",2)_"0000",1,4)
"RTN","PSBODL1",64,0)
 .W ?100,$P($TR($$FMTE^XLFDT(PSBOST,2),"@"," ")," ")
"RTN","PSBODL1",65,0)
 .W ?110,$P($TR($$FMTE^XLFDT(PSBOSP,2),"@"," ")," ")
"RTN","PSBODL1",66,0)
 .W ?120,$S(PSBVPHI]"":PSBVPHI,1:"***"),"/",$S(PSBVNI]"":PSBVNI,1:"***")
"RTN","PSBODL1",67,0)
 .W !,?100,"@"_$P(PSBOSTX,"  ",2),?110,"@"_$P(PSBOSPX,"  ",2)
"RTN","PSBODL1",68,0)
 .W IOINHI  ; To Highlight the Dispense Drugs...
"RTN","PSBODL1",69,0)
 .I $D(PSBDDA) S Y=0 F  S Y=$O(PSBDDA(Y)) Q:'Y  D
"RTN","PSBODL1",70,0)
 ..Q:$P(PSBDDA(Y),U,5)&($P(PSBDDA(Y),U,5)<PSBNOW)
"RTN","PSBODL1",71,0)
 ..W !?14,"*",$$WRAP(15,33,$P(PSBDDA(Y),U,3)_" ("_+$P(PSBDDA(Y),U,2)_")")
"RTN","PSBODL1",72,0)
 .I $D(PSBADA) S Y=0 F  S Y=$O(PSBADA(Y)) Q:'Y  W !?14,"*",$$WRAP(15,33,$P(PSBADA(Y),U,3)_" ("_$P(PSBADA(Y),U,4)_")")
"RTN","PSBODL1",73,0)
 .I $D(PSBSOLA) S Y=0 F  S Y=$O(PSBSOLA(Y)) Q:'Y  W !?14,"*",$$WRAP(15,33,$P(PSBSOLA(Y),U,3)_" ("_$P(PSBSOLA(Y),U,4)_")")
"RTN","PSBODL1",74,0)
 .W IOINORM ; Highlight Off
"RTN","PSBODL1",75,0)
 .S PSBADM=$S(PSBADMIN]"":"Admin Times: "_PSBADMIN,1:"")
"RTN","PSBODL1",76,0)
 .W:PSBADM]"" $$WRAP(50,27,PSBADM)
"RTN","PSBODL1",77,0)
 .;;
"RTN","PSBODL1",78,0)
 .;*68 begin
"RTN","PSBODL1",79,0)
 .I PSBSIFLG,'$G(^TMP("PSJBCMA5",$J,DFN,PSBORD)) D
"RTN","PSBODL1",80,0)
 ..W !?14,"Special Instructions:",?36,"<None Entered.>",DFN,U,PSBORD,"<"
"RTN","PSBODL1",81,0)
 .D:PSBSIFLG
"RTN","PSBODL1",82,0)
 ..F QQ=0:0 S QQ=$O(^TMP("PSJBCMA5",$J,DFN,PSBORD,QQ)) Q:'QQ  D
"RTN","PSBODL1",83,0)
 ...W:QQ=1 !?14,"Special Instructions:",?36,^TMP("PSJBCMA5",$J,DFN,PSBORD,QQ)
"RTN","PSBODL1",84,0)
 ...W:QQ>1 !?36,^TMP("PSJBCMA5",$J,DFN,PSBORD,QQ)
"RTN","PSBODL1",85,0)
 .W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL1",86,0)
 I '$G(PSBWFLAG) W !!,?10,"** NO SPECIFIED MEDICATIONS TO PRINT **"
"RTN","PSBODL1",87,0)
 W:PSBFOHDR $$BLANKS(),$$FTR()
"RTN","PSBODL1",88,0)
 K ^TMP("PSB",$J,"GETADMIN")
"RTN","PSBODL1",89,0)
 Q
"RTN","PSBODL1",90,0)
 ;
"RTN","PSBODL1",91,0)
WRAPPUP ;Do wrapping per PSBODL (Due List Report)
"RTN","PSBODL1",92,0)
 ;
"RTN","PSBODL1",93,0)
 W $$WRAP(14,34,PSBMED)
"RTN","PSBODL1",94,0)
 S PSBADM="Give: "_PSBDOSE_"  "_PSBSCH
"RTN","PSBODL1",95,0)
 W $$WRAP(50,27,PSBADM),?78,$$WRAP(78,6,PSBMR)
"RTN","PSBODL1",96,0)
 W ?85 D:PSBLGDT
"RTN","PSBODL1",97,0)
 .W $E(PSBLGDT,4,5),"/",$E(PSBLGDT,6,7),"/",$E(PSBLGDT,2,3),"@",$E($P(PSBLGDT,".",2)_"0000",1,4)
"RTN","PSBODL1",98,0)
 W ?100,$P($TR($$FMTE^XLFDT(PSBOST,2),"@"," ")," "),?110,$P($TR($$FMTE^XLFDT(PSBOSP,2),"@"," ")," "),?120,$S(PSBVPHI]"":PSBVPHI,1:"***"),"/"
"RTN","PSBODL1",99,0)
 W $S(PSBVNI]"":PSBVNI,1:"***"),!,?100,"@"_$P(PSBOSTX,"  ",2),?110,"@"_$P(PSBOSPX,"  ",2)
"RTN","PSBODL1",100,0)
 W IOINHI
"RTN","PSBODL1",101,0)
 I $D(PSBDDA) S Y=0 F  S Y=$O(PSBDDA(Y)) Q:'Y  D
"RTN","PSBODL1",102,0)
 .Q:$P(PSBDDA(Y),U,5)&($P(PSBDDA(Y),U,5)<PSBNOW)
"RTN","PSBODL1",103,0)
 .W !?14,"*",$$WRAP(15,33,$P(PSBDDA(Y),U,3)) ;_" ("_+$P(PSBDDA(Y),U,2)_")")
"RTN","PSBODL1",104,0)
 I $D(PSBADA) S Y=0 F  S Y=$O(PSBADA(Y)) Q:'Y  W !?14,"*",$$WRAP(15,33,$P(PSBADA(Y),U,3)) ;_" ("_$P(PSBADA(Y),U,4)_")")
"RTN","PSBODL1",105,0)
 I $D(PSBSOLA) S Y=0 F  S Y=$O(PSBSOLA(Y)) Q:'Y  W !?14,"*",$$WRAP(15,33,$P(PSBSOLA(Y),U,3)) ;_" ("_$P(PSBSOLA(Y),U,4)_")")
"RTN","PSBODL1",106,0)
 W IOINORM ; Hlight Off
"RTN","PSBODL1",107,0)
 S PSBADM=$S(PSBADMIN]"":"Admin Times: "_PSBADMIN,1:"")
"RTN","PSBODL1",108,0)
 W:PSBADM]"" $$WRAP(50,27,PSBADM)
"RTN","PSBODL1",109,0)
 ;
"RTN","PSBODL1",110,0)
 ;Find associated remove with this ,med just printed on report
"RTN","PSBODL1",111,0)
 ; use Tmp Gbl from Getremov call in PSBODL
"RTN","PSBODL1",112,0)
 N IEN,RMA,RMTIM,RMDTTM,TIM,INDX
"RTN","PSBODL1",113,0)
 F IEN=0:0 S IEN=$O(^TMP("PSB",$J,"RM","B",PSBORD,IEN)) Q:'IEN  D
"RTN","PSBODL1",114,0)
 .S RMTIM=$P(^TMP("PSB",$J,"RM",IEN),U,1)
"RTN","PSBODL1",115,0)
 .;skip if this RMV does not fall witin report dates
"RTN","PSBODL1",116,0)
 .Q:($P(RMTIM,".")<PSBEVDT)!($P(RMTIM,".")>PSBEVDT2)
"RTN","PSBODL1",117,0)
 .S RMA(RMTIM)=""
"RTN","PSBODL1",118,0)
 .;kill out used entires so won't use again at end of report time
"RTN","PSBODL1",119,0)
 .K ^TMP("PSB",$J,"RM",IEN)
"RTN","PSBODL1",120,0)
 K ^TMP("PSB",$J,"RM","B",PSBORD)
"RTN","PSBODL1",121,0)
 ;
"RTN","PSBODL1",122,0)
 S (RMDTTM,RMTIM)="",INDX=0
"RTN","PSBODL1",123,0)
 F TIM=0:0 S TIM=$O(RMA(TIM)) Q:'TIM  D
"RTN","PSBODL1",124,0)
 .S INDX=INDX+1
"RTN","PSBODL1",125,0)
 .S RMTIM=$E($P(TIM,".",2)_"0000",1,4)
"RTN","PSBODL1",126,0)
 .S RMDTTM=$S(INDX=1:RMTIM,1:RMDTTM_"-"_RMTIM)
"RTN","PSBODL1",127,0)
 W:RMDTTM]"" !?50,"Remove Time: "_RMDTTM
"RTN","PSBODL1",128,0)
 ;
"RTN","PSBODL1",129,0)
 ;*68 begin
"RTN","PSBODL1",130,0)
 I PSBSIFLG,'$G(^TMP("PSJBCMA5",$J,DFN,PSBORD)) W !?14,"Special Instructions:",?36,"<None Entered.>"
"RTN","PSBODL1",131,0)
 D:PSBSIFLG
"RTN","PSBODL1",132,0)
 .F QQ=0:0 S QQ=$O(^TMP("PSJBCMA5",$J,DFN,PSBORD,QQ)) Q:'QQ  D
"RTN","PSBODL1",133,0)
 ..W:QQ=1 !?14,"Special Instructions:"
"RTN","PSBODL1",134,0)
 ..W:QQ>1 !
"RTN","PSBODL1",135,0)
 ..W ?36,^TMP("PSJBCMA5",$J,DFN,PSBORD,QQ)
"RTN","PSBODL1",136,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL1",137,0)
 Q
"RTN","PSBODL1",138,0)
 ;
"RTN","PSBODL1",139,0)
WRAP(X,Y,Z) ; Quick text wrap
"RTN","PSBODL1",140,0)
 F  Q:'$L(Z)  D
"RTN","PSBODL1",141,0)
 .W:$X>X !
"RTN","PSBODL1",142,0)
 .W:$X<X ?X
"RTN","PSBODL1",143,0)
 .I $L(Z)<Y W Z S Z="" Q
"RTN","PSBODL1",144,0)
 .F PSB=Y:-1:0 Q:$E(Z,PSB)=" "
"RTN","PSBODL1",145,0)
 .S:PSB<1 PSB=Y
"RTN","PSBODL1",146,0)
 .W $E(Z,1,PSB)
"RTN","PSBODL1",147,0)
 .S Z=$E(Z,PSB+1,255)
"RTN","PSBODL1",148,0)
 Q ""
"RTN","PSBODL1",149,0)
 ;
"RTN","PSBODL1",150,0)
FTR() ; [Extrinsic] Page footer
"RTN","PSBODL1",151,0)
 ;
"RTN","PSBODL1",152,0)
 ; Sub Module Description:
"RTN","PSBODL1",153,0)
 ; (No Description Available)
"RTN","PSBODL1",154,0)
 ;
"RTN","PSBODL1",155,0)
 I (IOSL<100) F  Q:$Y>(IOSL-10)  W !
"RTN","PSBODL1",156,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","PSBODL1",157,0)
 S X="Ward: "_PSBHDR("WARD")_"  Room-Bed: "_PSBHDR("ROOM")
"RTN","PSBODL1",158,0)
 W !,PSBHDR("NAME"),?(IOM-11\2),PSBHDR("SSN"),?(IOM-$L(X)),X
"RTN","PSBODL1",159,0)
 Q ""
"RTN","PSBODL1",160,0)
 ;
"RTN","PSBODL1",161,0)
HDR() ; Page Header
"RTN","PSBODL1",162,0)
 Q:'PSBFOHDR ""
"RTN","PSBODL1",163,0)
 D PT^PSBOHDR(DFN,.PSBHDR,,,PSBSRCHL)                            ;*70
"RTN","PSBODL1",164,0)
 W !
"RTN","PSBODL1",165,0)
 W !
"RTN","PSBODL1",166,0)
 W !,?(IOM-28\2),"*****   FUTURE ORDERS   *****"
"RTN","PSBODL1",167,0)
 W !
"RTN","PSBODL1",168,0)
 W !,"Self",?85,"Last",?100,"Start",?110,"Stop",?120,"Verifying"
"RTN","PSBODL1",169,0)
 W !,"Med",?6,"Sched",?14,"Medication",?50,"Dose",?78,"Route",?85,"Given",?100,"Date",?110,"Date",?120,"Rph/Rn"
"RTN","PSBODL1",170,0)
 W !,?100,"@Time",?110,"@Time"
"RTN","PSBODL1",171,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL1",172,0)
 Q ""
"RTN","PSBODL1",173,0)
 ;
"RTN","PSBODL1",174,0)
BLANKS() ; [Extrinsic] Print blanks at end of printout for changes
"RTN","PSBODL1",175,0)
 Q:'$P(PSBRPT(.2),U,5) ""
"RTN","PSBODL1",176,0)
 W !
"RTN","PSBODL1",177,0)
 I $Y>(IOSL-26) W ?(IOM-42\2),"(Changes/Addendums to Orders on Next Page)" W $$FTR(),$$HDR() ; Not enough space - new page
"RTN","PSBODL1",178,0)
 I IOSL<100 F  Q:$Y>(IOSL-26)  W !
"RTN","PSBODL1",179,0)
 W ?(IOM-28\2),"Changes/Addendums to orders"
"RTN","PSBODL1",180,0)
 F X=1:1:4 D
"RTN","PSBODL1",181,0)
 .W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL1",182,0)
 .W !!?3,"CON ___ PRN ___",?20,"Drug: ",$TR($J("",22)," ","_"),?50,"Give: ",$TR($J("",42)," ","_"),?100,"Start: _________ Stop: _________"
"RTN","PSBODL1",183,0)
 .W !?20,"Spec"
"RTN","PSBODL1",184,0)
 .W !?3,"OT  ___ OC  ___",?20,"Inst: ",$TR($J("",72)," ","_"),?100,"Initials: ______ Date: _________"
"RTN","PSBODL1",185,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL1",186,0)
 Q ""
"RTN","PSBODL1",187,0)
 ;
"RTN","PSBODL1",188,0)
CHKREM ;Find RMs not yet triggered to print by the normal Admin time process
"RTN","PSBODL1",189,0)
 ;  these will be meds that have no more admins to do today, but a
"RTN","PSBODL1",190,0)
 ;  previous Give earlier today or from a prior day, still have a
"RTN","PSBODL1",191,0)
 ;  Remove pending
"RTN","PSBODL1",192,0)
 N IEN,RMA,RMTIM,RMDTTM,TIM,INDX
"RTN","PSBODL1",193,0)
 S ORD=""
"RTN","PSBODL1",194,0)
 F  S ORD=$O(^TMP("PSB",$J,"RM","B",ORD)) Q:ORD=""  D
"RTN","PSBODL1",195,0)
 .F IEN=0:0 S IEN=$O(^TMP("PSB",$J,"RM","B",ORD,IEN)) Q:'IEN  D
"RTN","PSBODL1",196,0)
 ..S RMTIM=$P(^TMP("PSB",$J,"RM",IEN),U,1)
"RTN","PSBODL1",197,0)
 ..;skip if this RMV does not fall witin report dates
"RTN","PSBODL1",198,0)
 ..Q:($P(RMTIM,".")<PSBEVDT)!($P(RMTIM,".")>PSBEVDT2)
"RTN","PSBODL1",199,0)
 ..S RMA(RMTIM)=""
"RTN","PSBODL1",200,0)
 .S (RMDTTM,RMTIM)="",INDX=0
"RTN","PSBODL1",201,0)
 .F TIM=0:0 S TIM=$O(RMA(TIM)) Q:'TIM  D
"RTN","PSBODL1",202,0)
 ..S INDX=INDX+1
"RTN","PSBODL1",203,0)
 ..S RMTIM=$E($P(TIM,".",2)_"0000",1,4)
"RTN","PSBODL1",204,0)
 ..S RMDTTM=$S(INDX=1:RMTIM,1:RMDTTM_"-"_RMTIM)
"RTN","PSBODL1",205,0)
 ..I RMDTTM]"" D WRAPREM
"RTN","PSBODL1",206,0)
 .K RMA
"RTN","PSBODL1",207,0)
 K ^TMP("PSB",$J,"RM")
"RTN","PSBODL1",208,0)
 Q
"RTN","PSBODL1",209,0)
 ;
"RTN","PSBODL1",210,0)
WRAPREM ;print standalone removes found
"RTN","PSBODL1",211,0)
 N X,PSBIEN,PSBLGDT,PSBADM
"RTN","PSBODL1",212,0)
 D CLEAN^PSBVT,PSJ1^PSBVT(DFN,ORD)
"RTN","PSBODL1",213,0)
 ; Get LAST GIVEN date/time
"RTN","PSBODL1",214,0)
 S PSBLGDT="",X=""
"RTN","PSBODL1",215,0)
 F  S X=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,X),-1) Q:'X  D  Q:PSBLGDT
"RTN","PSBODL1",216,0)
 .S PSBIEN=""
"RTN","PSBODL1",217,0)
 .F  S PSBIEN=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,X,PSBIEN),-1) Q:PSBIEN=""  D  Q:PSBLGDT
"RTN","PSBODL1",218,0)
 ..S:"MHNR"'[$P($G(^PSB(53.79,PSBIEN,0)),U,9) PSBLGDT=X
"RTN","PSBODL1",219,0)
 ;
"RTN","PSBODL1",220,0)
 I PSBSM D
"RTN","PSBODL1",221,0)
 .S PSBSM=$S(PSBSMX:"H",1:"")_"SM"
"RTN","PSBODL1",222,0)
 E  D
"RTN","PSBODL1",223,0)
 .S PSBSM=""
"RTN","PSBODL1",224,0)
 W !!,$J(PSBSM,3),?6,PSBTYPE,$E(PSBSCHT,1,4),?12 S PSBWFLAG=1
"RTN","PSBODL1",225,0)
 W $$WRAP(14,34,PSBOITX)
"RTN","PSBODL1",226,0)
 S PSBADM="Give: "_PSBDOSE_"  "_PSBSCH
"RTN","PSBODL1",227,0)
 W $$WRAP(50,27,PSBADM),?78,$$WRAP(78,6,PSBMR)
"RTN","PSBODL1",228,0)
 W ?85 D:PSBLGDT
"RTN","PSBODL1",229,0)
 .W $E(PSBLGDT,4,5),"/",$E(PSBLGDT,6,7),"/",$E(PSBLGDT,2,3),"@",$E($P(PSBLGDT,".",2)_"0000",1,4)
"RTN","PSBODL1",230,0)
 W ?100,$P($TR($$FMTE^XLFDT(PSBOST,2),"@"," ")," "),?110,$P($TR($$FMTE^XLFDT(PSBOSP,2),"@"," ")," "),?120,$S(PSBVPHI]"":PSBVPHI,1:"***"),"/"
"RTN","PSBODL1",231,0)
 W $S(PSBVNI]"":PSBVNI,1:"***"),!,?100,"@"_$P(PSBOSTX,"  ",2),?110,"@"_$P(PSBOSPX,"  ",2)
"RTN","PSBODL1",232,0)
 W IOINHI
"RTN","PSBODL1",233,0)
 I $D(PSBDDA) S Y=0 F  S Y=$O(PSBDDA(Y)) Q:'Y  D
"RTN","PSBODL1",234,0)
 .Q:$P(PSBDDA(Y),U,5)&($P(PSBDDA(Y),U,5)<PSBNOW)
"RTN","PSBODL1",235,0)
 .W !?14,"*",$$WRAP(15,33,$P(PSBDDA(Y),U,3)) ;_" ("_+$P(PSBDDA(Y),U,2)_")")
"RTN","PSBODL1",236,0)
 I $D(PSBADA) S Y=0 F  S Y=$O(PSBADA(Y)) Q:'Y  W !?14,"*",$$WRAP(15,33,$P(PSBADA(Y),U,3)) ;_" ("_$P(PSBADA(Y),U,4)_")")
"RTN","PSBODL1",237,0)
 I $D(PSBSOLA) S Y=0 F  S Y=$O(PSBSOLA(Y)) Q:'Y  W !?14,"*",$$WRAP(15,33,$P(PSBSOLA(Y),U,3)) ;_" ("_$P(PSBSOLA(Y),U,4)_")")
"RTN","PSBODL1",238,0)
 W IOINORM ; Hlight Off
"RTN","PSBODL1",239,0)
 S PSBADM="Admin Times: none "
"RTN","PSBODL1",240,0)
 W:PSBADM]"" $$WRAP(50,27,PSBADM)
"RTN","PSBODL1",241,0)
 W !?50,"Remove Time: "_RMDTTM
"RTN","PSBODL1",242,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBODL1",243,0)
 D CLEAN^PSBVT
"RTN","PSBODL1",244,0)
 Q
"RTN","PSBODO")
0^28^B42287720^B38012086
"RTN","PSBODO",1,0)
PSBODO ;BIRMINGHAM/EFC-BCMA UNIT DOSE VIRTUAL DUE LIST FUNCTIONS ;03/06/16 3:06pm
"RTN","PSBODO",2,0)
 ;;3.0;BAR CODE MED ADMIN;**5,21,24,38,58,68,70,83**;Mar 2004;Build 89
"RTN","PSBODO",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBODO",4,0)
 ;
"RTN","PSBODO",5,0)
 ; Reference/IA
"RTN","PSBODO",6,0)
 ; EN^PSJBCMA2/2830
"RTN","PSBODO",7,0)
 ; GETPROVL^PSGSICH1/5653
"RTN","PSBODO",8,0)
 ; INTRDIC^PSGSICH1/5654
"RTN","PSBODO",9,0)
 ; GETSIOPI^PSJBCMA5/5763
"RTN","PSBODO",10,0)
 ;
"RTN","PSBODO",11,0)
 ;*68 - add ability to print new WP Special Instructions/OPI fields
"RTN","PSBODO",12,0)
 ;*58 - add sections to display Prv Override comments and Rph
"RTN","PSBODO",13,0)
 ;      Interventions to this report for (critical drug/drug and all
"RTN","PSBODO",14,0)
 ;      adverse reactions/allergies)
"RTN","PSBODO",15,0)
 ;*70 - print clinic name at top of detail section if exists.
"RTN","PSBODO",16,0)
 ;*83 - add Removal times
"RTN","PSBODO",17,0)
 ;
"RTN","PSBODO",18,0)
EN ;
"RTN","PSBODO",19,0)
 ;
"RTN","PSBODO",20,0)
 ; Description:
"RTN","PSBODO",21,0)
 ; Returns a display for a selected order when double clicked on the VDL
"RTN","PSBODO",22,0)
 ;
"RTN","PSBODO",23,0)
 N PSBGBL,DFN
"RTN","PSBODO",24,0)
 S PSBGBL=$NAME(^TMP("PSBO",$J,"B"))
"RTN","PSBODO",25,0)
 F  S PSBGBL=$Q(@PSBGBL) Q:PSBGBL=""  Q:$QS(PSBGBL,2)'=$J  Q:$QS(PSBGBL,1)'["PSBO"  D
"RTN","PSBODO",26,0)
 .S DFN=$QS(PSBGBL,5)
"RTN","PSBODO",27,0)
 .D DISPORD
"RTN","PSBODO",28,0)
 .D CLEAN^PSBVT   ;*83 cleanup all PSB* variables
"RTN","PSBODO",29,0)
 Q
"RTN","PSBODO",30,0)
 ;
"RTN","PSBODO",31,0)
DISPORD ;
"RTN","PSBODO",32,0)
 N PSBGBL,PSBOI,PSBHDR,PSJGLO,LINE,PSBPRV,PSBPV,PSBRPH,PSBRH,PSBOVR,I,X,Y
"RTN","PSBODO",33,0)
 S PSBOI=$$GET1^DIQ(53.69,PSBRPT_",",.09)
"RTN","PSBODO",34,0)
 D EN^PSJBCMA2(DFN,PSBOI)
"RTN","PSBODO",35,0)
 S PSJGLO="^TMP(""PSJ"""_","_$J
"RTN","PSBODO",36,0)
 D CLEAN^PSBVT
"RTN","PSBODO",37,0)
 D PSJ1^PSBVT(DFN,PSBOI)
"RTN","PSBODO",38,0)
 S PSBHDR(1)="BCMA - Display Order" D PT^PSBOHDR(DFN,.PSBHDR) W !
"RTN","PSBODO",39,0)
 I '$G(PSBONX) W !,"Invalid Order"
"RTN","PSBODO",40,0)
 D:$G(PSBONX)
"RTN","PSBODO",41,0)
 .W:$G(PSBCLORD)]"" "Clinic: "_PSBCLORD,!                         ;*70
"RTN","PSBODO",42,0)
 .W !,"Orderable Item: ",PSBOITX
"RTN","PSBODO",43,0)
 .I PSBONX["V" W !,"Infusion Rate:  ",PSBIFR
"RTN","PSBODO",44,0)
 .I PSBONX'["V" W !,"Dosage Ordered: ",PSBDOSE
"RTN","PSBODO",45,0)
 .W ?40,"Start:    ",PSBOSTX W:$G(^XTMP("PSB DEBUG",0)) "   ("_PSBONX_")"
"RTN","PSBODO",46,0)
 .W !?40,"Stop:     ",PSBOSPX,?70,PSBOSTSX                        ;*70
"RTN","PSBODO",47,0)
 .W !,"Med Route:      ",PSBMR
"RTN","PSBODO",48,0)
 .W !,"Schedule Type:  ",PSBSCHTX
"RTN","PSBODO",49,0)
 .I PSBONX'["V" W ?40,"Self Med: ",PSBSMX
"RTN","PSBODO",50,0)
 .W:PSBSM !?40,"Hosp Sup: ",PSBSMX
"RTN","PSBODO",51,0)
 .W:PSBSCH'="" !,"Schedule: ",PSBSCH
"RTN","PSBODO",52,0)
 .I PSBONX'["V" W !,"Admin Times:    ",PSBADST
"RTN","PSBODO",53,0)
 .I PSBONX'["V",PSBMRRFL W !,"Removal Times:  ",$$REMSTR^PSBUTL(PSBADST,PSBDOA,PSBSCHT,PSBOSP,PSBOPRSP)
"RTN","PSBODO",54,0)
 .I PSBONX["V",((PSBIVT="P")!(PSBISYR=1)) W !,"Admin Times:    ",PSBADST
"RTN","PSBODO",55,0)
 .W !,"Provider: ",PSBMDX
"RTN","PSBODO",56,0)
 .;*68 change
"RTN","PSBODO",57,0)
 .W !,"Special Instructions/Other Print Info:"
"RTN","PSBODO",58,0)
 .K ^TMP("PSJBCMA5",$J)
"RTN","PSBODO",59,0)
 .D GETSIOPI^PSJBCMA5(DFN,PSBONX,1)
"RTN","PSBODO",60,0)
 .F QQ=0:0 S QQ=$O(^TMP("PSJBCMA5",$J,DFN,PSBONX,QQ)) Q:'QQ  D
"RTN","PSBODO",61,0)
 ..W !,^TMP("PSJBCMA5",$J,DFN,PSBONX,QQ)
"RTN","PSBODO",62,0)
 .K ^TMP("PSJBCMA5",$J)
"RTN","PSBODO",63,0)
 .;*68 end
"RTN","PSBODO",64,0)
 .;*58 override/intervention section * * *
"RTN","PSBODO",65,0)
 .S PSBOVR=0
"RTN","PSBODO",66,0)
 .D GETPROVL^PSGSICH1(DFN,PSBONX,.PSBPRV)
"RTN","PSBODO",67,0)
 .D INTRDIC^PSGSICH1(DFN,PSBONX,.PSBRPH,2)
"RTN","PSBODO",68,0)
 .S PSBPV=$S($D(PSBPRV)>1:1,1:0)
"RTN","PSBODO",69,0)
 .S PSBRH=$S($D(PSBRPH)>1:1,1:0)
"RTN","PSBODO",70,0)
 .I 'PSBPV,PSBRH D DSPPRV(.PSBPRV,132,2,26,1) S PSBOVR=1
"RTN","PSBODO",71,0)
 .I PSBPV D DSPPRV(.PSBPRV,132,2,26) S PSBOVR=1
"RTN","PSBODO",72,0)
 .I PSBPV,'PSBRH D DSPRPH(.PSBRPH,132,2,26,1) S PSBOVR=1
"RTN","PSBODO",73,0)
 .I PSBRH D DSPRPH(.PSBRPH,132,2,26) S PSBOVR=1
"RTN","PSBODO",74,0)
 .I PSBOVR W !,$TR($J("",75)," ","-")
"RTN","PSBODO",75,0)
 .;*58 end override/intervention section * * *
"RTN","PSBODO",76,0)
 .;
"RTN","PSBODO",77,0)
 .W !
"RTN","PSBODO",78,0)
 .I $D(PSBDDA(1)) D
"RTN","PSBODO",79,0)
 ..W !,"Dispense Drugs",!,"Drug Name",?40,"Units",?50,"Inactive Date"
"RTN","PSBODO",80,0)
 ..W !,$TR($J("",75)," ","-")
"RTN","PSBODO",81,0)
 ..F Y=0:0 S Y=$O(PSBDDA(Y)) Q:'Y  D
"RTN","PSBODO",82,0)
 ...S X=$P(PSBDDA(Y),U,4)
"RTN","PSBODO",83,0)
 ...W !,$P(PSBDDA(Y),U,3),?40,$S(X]"":X,1:1)
"RTN","PSBODO",84,0)
 ...S X=$P(PSBDDA(Y),U,5) Q:'X
"RTN","PSBODO",85,0)
 ...W ?50,$E(X,4,5),"/",$E(X,6,7),"/",(1700+$E(X,1,3))
"RTN","PSBODO",86,0)
 .I $D(PSBADA(1)) D
"RTN","PSBODO",87,0)
 ..W !!,"Additives",!,"Name",?40,"Strength"
"RTN","PSBODO",88,0)
 ..W !,$TR($J("",75)," ","-")
"RTN","PSBODO",89,0)
 ..F Y=0:0 S Y=$O(PSBADA(Y)) Q:'Y  D
"RTN","PSBODO",90,0)
 ...W !,$P(PSBADA(Y),U,3),?40,$P(PSBADA(Y),U,4)
"RTN","PSBODO",91,0)
 .I $D(PSBSOLA(1)) D
"RTN","PSBODO",92,0)
 ..W !!,"Solution",!,"Name",?40,"Volume"
"RTN","PSBODO",93,0)
 ..W !,$TR($J("",75)," ","-")
"RTN","PSBODO",94,0)
 ..F Y=0:0 S Y=$O(PSBSOLA(Y)) Q:'Y  D
"RTN","PSBODO",95,0)
 ...W !,$P(PSBSOLA(Y),U,3),?40,$P(PSBSOLA(Y),U,4)
"RTN","PSBODO",96,0)
 .I $P(@(PSJGLO_","_0_")"),U,1)'=-1 D
"RTN","PSBODO",97,0)
 ..W !,$TR($J("",75)," ","-")
"RTN","PSBODO",98,0)
 ..W !,"Pharmacy Activity Log: "
"RTN","PSBODO",99,0)
 ..F I=1:1:$P(@(PSJGLO_","_0_")"),U,4) D
"RTN","PSBODO",100,0)
 ...W !?9,"Date:  ",$$FMTE^XLFDT($P(@(PSJGLO_","_I_","_1_")"),U,1)),?35,"User:  ",$P(@(PSJGLO_","_I_","_1_")"),U,2)
"RTN","PSBODO",101,0)
 ...W !?5,"Activity:  ",$P(@(PSJGLO_","_I_","_1_")"),U,4)
"RTN","PSBODO",102,0)
 ...I $D(@(PSJGLO_","_I_","_2_")")) D                             ;*83
"RTN","PSBODO",103,0)
 ....I $P(@(PSJGLO_","_I_","_1_")"),U,3)["DURATION" S @(PSJGLO_","_I_","_2_")")=@(PSJGLO_","_I_","_2_")")/60     ;DOA convert min to hr *83
"RTN","PSBODO",104,0)
 ....W !?8,"Field:  ",$P(@(PSJGLO_","_I_","_1_")"),U,3),!?5,"Old Data:  ",@(PSJGLO_","_I_","_2_")")
"RTN","PSBODO",105,0)
 ...I $D(@(PSJGLO_","_I_","_3_")")) W !?7,"Reason:  ",@(PSJGLO_","_I_","_3_")")
"RTN","PSBODO",106,0)
 ...W !
"RTN","PSBODO",107,0)
 W !!
"RTN","PSBODO",108,0)
 D CLEAN^PSBVT K @(PSJGLO_")")
"RTN","PSBODO",109,0)
 Q
"RTN","PSBODO",110,0)
 ;
"RTN","PSBODO",111,0)
DSPPRV(ARR,LN,IND,ALGN,NONE) ; Display Provider (CPRS) override reasons
"RTN","PSBODO",112,0)
 ; ARR  = array with provider override text.
"RTN","PSBODO",113,0)
 ; LN   = total width of report writable area.      (opt, 132 default)
"RTN","PSBODO",114,0)
 ; IND  = indent for both left and right margins.      (opt,0 default)
"RTN","PSBODO",115,0)
 ; ALGN = align colon on this column.                (opt, 25 default)
"RTN","PSBODO",116,0)
 ; NONE = display empty Provider override msg.        (opt, 0 default)
"RTN","PSBODO",117,0)
 ;
"RTN","PSBODO",118,0)
 N CAT,QQ,OC,HDG,CTRTAB,TMPONX,LINE,L1,L2,XX
"RTN","PSBODO",119,0)
 S LN=+$G(LN,132),IND=+$G(IND),ALGN=$G(ALGN,25),NONE=$G(NONE,0)
"RTN","PSBODO",120,0)
 S LN=LN-(IND*2)    ;adj writeable area by both L & R margins
"RTN","PSBODO",121,0)
 ;provider heading
"RTN","PSBODO",122,0)
 W !!?IND,$TR($J("",LN)," ","=")
"RTN","PSBODO",123,0)
 S HDG="** Current Provider Overrides for this order **"
"RTN","PSBODO",124,0)
 S CTRTAB=(LN-$L(HDG))/2
"RTN","PSBODO",125,0)
 W !?CTRTAB,HDG
"RTN","PSBODO",126,0)
 W !?IND,$TR($J("",LN)," ","="),!
"RTN","PSBODO",127,0)
 ;
"RTN","PSBODO",128,0)
 ;special scenario when NO Prv overrides, but Rph Interventions do
"RTN","PSBODO",129,0)
 I NONE W !?IND,"No Provider Overrides to display.",! Q
"RTN","PSBODO",130,0)
 ;
"RTN","PSBODO",131,0)
 ;provider body text
"RTN","PSBODO",132,0)
 S TMPONX=$O(ARR("PROV",DFN,"")) I TMPONX D
"RTN","PSBODO",133,0)
 .S QQ="" F  S QQ=$O(ARR("PROV",DFN,+TMPONX,QQ)) Q:QQ=""  D
"RTN","PSBODO",134,0)
 ..S LINE=ARR("PROV",DFN,+TMPONX,QQ),XX=$F(LINE,":")
"RTN","PSBODO",135,0)
 ..S L1=$J($E(LINE,1,XX),ALGN),L2=$E(LINE,XX+1,$L(LINE))
"RTN","PSBODO",136,0)
 ..W !?IND,L1,L2
"RTN","PSBODO",137,0)
 .W !
"RTN","PSBODO",138,0)
 S CAT=0 F  S CAT=$O(ARR("PROVR",DFN,+TMPONX,CAT)) Q:'CAT  D
"RTN","PSBODO",139,0)
 .S OC=0 F  S OC=$O(ARR("PROVR",DFN,+TMPONX,CAT,OC)) Q:'OC  D
"RTN","PSBODO",140,0)
 ..S LINE=ARR("PROVR",DFN,+TMPONX,CAT,OC,0),XX=$F(LINE,":")
"RTN","PSBODO",141,0)
 ..S L1=$J($E(LINE,1,XX),ALGN),L2=$E(LINE,XX+1,$L(LINE))
"RTN","PSBODO",142,0)
 ..W !,?IND,$$WRAP^PSBO(IND,LN,LINE),!
"RTN","PSBODO",143,0)
 Q
"RTN","PSBODO",144,0)
 ;
"RTN","PSBODO",145,0)
DSPRPH(ARR,LN,IND,ALGN,NONE) ; Display Pharmacist Interventions
"RTN","PSBODO",146,0)
 ; ARR  = array with Pharmacist intervention text.               (opt)
"RTN","PSBODO",147,0)
 ; LN   = total width of report writable area.       (opt,132 default)
"RTN","PSBODO",148,0)
 ; IND  = indent for both left and right margins.     (opt, 0 default)
"RTN","PSBODO",149,0)
 ; ALGN = align colon on this column.                (opt. 25 default)
"RTN","PSBODO",150,0)
 ; NONE = display empty Pharmacist intervention msg.  (opt, 0 default)
"RTN","PSBODO",151,0)
 ;
"RTN","PSBODO",152,0)
 N FLD,WP,WPTAG,WPLIN,HDG,INT,CTRTAB,LINE,L1,L2,XX
"RTN","PSBODO",153,0)
 S LN=+$G(LN,132),IND=+$G(IND),ALGN=$G(ALGN,25),NONE=$G(NONE,0)
"RTN","PSBODO",154,0)
 S LN=LN-(IND*2)         ;adj writeable area by both L & R margins
"RTN","PSBODO",155,0)
 ;
"RTN","PSBODO",156,0)
 ;pharmacist heading
"RTN","PSBODO",157,0)
 W !?IND,$TR($J("",LN)," ","=")
"RTN","PSBODO",158,0)
 S HDG="** Current Pharmacist Interventions for this order **"
"RTN","PSBODO",159,0)
 S CTRTAB=(LN-$L(HDG))/2
"RTN","PSBODO",160,0)
 W !?CTRTAB,HDG
"RTN","PSBODO",161,0)
 W !?IND,$TR($J("",LN)," ","="),!
"RTN","PSBODO",162,0)
 ;
"RTN","PSBODO",163,0)
 ;special scenario when NO Rph interventions, but Prv overrides do
"RTN","PSBODO",164,0)
 I NONE W !?IND,"No Pharmacist Interventions to display.",! Q
"RTN","PSBODO",165,0)
 ;
"RTN","PSBODO",166,0)
 ;pharmacist body text
"RTN","PSBODO",167,0)
 F INT=0:0 S INT=$O(ARR(DFN,PSBONX,INT)) Q:'INT  D
"RTN","PSBODO",168,0)
 .F FLD=0:0 S FLD=$O(ARR(DFN,PSBONX,INT,FLD)) Q:'FLD  D
"RTN","PSBODO",169,0)
 ..I FLD<1000 D
"RTN","PSBODO",170,0)
 ...S LINE=ARR(DFN,PSBONX,INT,FLD),XX=$F(LINE,":")
"RTN","PSBODO",171,0)
 ...S L1=$J($E(LINE,1,XX),ALGN),L2=$E(LINE,XX+1,$L(LINE))
"RTN","PSBODO",172,0)
 ...W !?IND,L1,L2
"RTN","PSBODO",173,0)
 ..I FLD>1000 D
"RTN","PSBODO",174,0)
 ...S (WP,WPLIN,WPTAG)="",LIN1=1
"RTN","PSBODO",175,0)
 ...F  S WP=$O(ARR(DFN,PSBONX,INT,FLD,WP)) Q:WP=""  D
"RTN","PSBODO",176,0)
 ....S LINE=ARR(DFN,PSBONX,INT,FLD,WP)
"RTN","PSBODO",177,0)
 ....I WP<1 D                          ;field Hdg line
"RTN","PSBODO",178,0)
 .....S LINE=$J(LINE,ALGN) W !?IND,LINE
"RTN","PSBODO",179,0)
 ....E  D                              ;detail WP lines
"RTN","PSBODO",180,0)
 .....I 'LIN1 W !
"RTN","PSBODO",181,0)
 .....W ?IND+ALGN,LINE
"RTN","PSBODO",182,0)
 .....S LIN1=0
"RTN","PSBODO",183,0)
 .W !
"RTN","PSBODO",184,0)
 W !
"RTN","PSBODO",185,0)
 Q
"RTN","PSBOMH")
0^23^B103792484^B93146324
"RTN","PSBOMH",1,0)
PSBOMH ;BIRMINGHAM/EFC-MAH ;03/06/16 3:06pm
"RTN","PSBOMH",2,0)
 ;;3.0;BAR CODE MED ADMIN;**5,9,38,57,67,68,70,76,83**;Mar 2004;Build 89
"RTN","PSBOMH",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBOMH",4,0)
 ;
"RTN","PSBOMH",5,0)
 ; Reference/IA
"RTN","PSBOMH",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBOMH",7,0)
 ; EN^PSJBCMA2/2830
"RTN","PSBOMH",8,0)
 ; File 200/10060
"RTN","PSBOMH",9,0)
 ; ^DIWP/10011
"RTN","PSBOMH",10,0)
 ;
"RTN","PSBOMH",11,0)
 ;*68 - remove old special instruction text encoding, defer to PSBOMH2
"RTN","PSBOMH",12,0)
 ;*70 - add Clinic name to PSBO array for printing on grid via PSBOMH2
"RTN","PSBOMH",13,0)
 ;       in ^TMP(""PSB",$J,"ORDERS",PSBX,"INST") global
"RTN","PSBOMH",14,0)
 ;*83 - add remove logic to print RM and associated Gives in grid and
"RTN","PSBOMH",15,0)
 ;      also remove string in order summary area.
"RTN","PSBOMH",16,0)
 ;
"RTN","PSBOMH",17,0)
EN ; Called from DQ^PSBO
"RTN","PSBOMH",18,0)
 N PSBGBL,DFN,Q,X                                                 ;*83
"RTN","PSBOMH",19,0)
 S PSBGBL=$NAME(^TMP("PSBO",$J,"B"))
"RTN","PSBOMH",20,0)
 F  S PSBGBL=$Q(@PSBGBL) Q:PSBGBL=""  Q:$QS(PSBGBL,2)'=$J  Q:$QS(PSBGBL,1)'["PSBO"  D
"RTN","PSBOMH",21,0)
 .S DFN=$QS(PSBGBL,5)
"RTN","PSBOMH",22,0)
 .S (PSBSTRT,X)=$P(PSBRPT(.1),U,6) D H^%DTC S PSBSTH=%H
"RTN","PSBOMH",23,0)
 .S (PSBSTOP,X)=$P(PSBRPT(.1),U,8)+.235959 D H^%DTC S PSBSPH=%H
"RTN","PSBOMH",24,0)
 .S PSBCNT=0 F I=PSBSTH:1:PSBSPH S PSBAR(I)=PSBSTH+((PSBCNT\7)*7),PSBCNT=PSBCNT+1
"RTN","PSBOMH",25,0)
 .D EN1
"RTN","PSBOMH",26,0)
 K PSBCNT,PSBAR
"RTN","PSBOMH",27,0)
 D CLEAN^PSBVT                                                    ;*83
"RTN","PSBOMH",28,0)
 Q
"RTN","PSBOMH",29,0)
EN1 ; Expects DFN,STRT,STOP
"RTN","PSBOMH",30,0)
 N PSBGBL,PSBHDR,PSBX,PSBFLAG,PSBHLDFL,PSBADST1,PSBOST1,PSBCLINIC ;*70
"RTN","PSBOMH",31,0)
 K ^TMP("PSJ",$J),^TMP("PSB",$J)
"RTN","PSBOMH",32,0)
 S PSBEVDT=PSBSTRT
"RTN","PSBOMH",33,0)
 D EN^PSJBCMA(DFN,PSBSTRT)
"RTN","PSBOMH",34,0)
 N PSBCLINORD S PSBCLINORD=2                 ;*70 Combind mode headers
"RTN","PSBOMH",35,0)
 I $G(^TMP("PSJ",$J,1,0))=-1 D  Q  ; No Ord
"RTN","PSBOMH",36,0)
 .D PT^PSBOHDR(DFN,.PSBHDR) W !!,"****NO MEDICATIONS FOUND****"
"RTN","PSBOMH",37,0)
 S PSBX=""
"RTN","PSBOMH",38,0)
 F  S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:PSBX=""  D
"RTN","PSBOMH",39,0)
 .Q:$P(^TMP("PSJ",$J,PSBX,0),U,3)?.N1"P"  ; No Pnd
"RTN","PSBOMH",40,0)
 .Q:$P(^TMP("PSJ",$J,PSBX,1),U,5)<PSBSTRT!($P(^TMP("PSJ",$J,PSBX,1),U,4)>PSBSTOP)  ;display orders active in date range of report
"RTN","PSBOMH",41,0)
 .S X=$P(^TMP("PSJ",$J,PSBX,1),U,2)
"RTN","PSBOMH",42,0)
 .S ^TMP("PSB",$J,"ORDERS",$P(^TMP("PSJ",$J,PSBX,0),U,3))=X
"RTN","PSBOMH",43,0)
 I '$D(^TMP("PSB",$J,"ORDERS")) D  Q        ;No Orders
"RTN","PSBOMH",44,0)
 .D PT^PSBOHDR(DFN,.PSBHDR) W !!,"****NO MEDICATIONS FOUND****"
"RTN","PSBOMH",45,0)
 S PSBMHND="PSBOMH"
"RTN","PSBOMH",46,0)
 ; Act on Orders
"RTN","PSBOMH",47,0)
 S PSBX="" F  S PSBX=$O(^TMP("PSB",$J,"ORDERS",PSBX)) Q:PSBX=""  S PSBTYPE=^(PSBX) D
"RTN","PSBOMH",48,0)
 .S:PSBTYPE'="C" PSBTYPE="P"
"RTN","PSBOMH",49,0)
 .D CLEAN^PSBVT
"RTN","PSBOMH",50,0)
 .D PSJ1^PSBVT(DFN,PSBX)
"RTN","PSBOMH",51,0)
 .S PSBCLINIC=PSBCLORD
"RTN","PSBOMH",52,0)
 .S X1=((PSBEVDT)\1)  S X2=-1  D C^%DTC  S PSBCNTST=X
"RTN","PSBOMH",53,0)
 .S X1=((PSBSTOP)\1)  S X2=1  D C^%DTC  S PSBXSTOP=X
"RTN","PSBOMH",54,0)
 .S PSBVALB=""
"RTN","PSBOMH",55,0)
 .S PSBVALB=$$IVPTAB^PSBVDLU3(PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,PSBIVPSH)
"RTN","PSBOMH",56,0)
 .S PSBZ=""
"RTN","PSBOMH",57,0)
 .S X1=PSBXSTOP,X2=PSBCNTST D ^%DTC S PSBNCT=X
"RTN","PSBOMH",58,0)
 .F PSBZ=1:1:PSBNCT S X1=PSBCNTST  S X2=1  D C^%DTC  S PSBCNTST=X  D
"RTN","PSBOMH",59,0)
 ..I (PSBX["V")!(PSBX'["V")  D
"RTN","PSBOMH",60,0)
 ...I PSBCNTST'>(PSBOST\1) S ^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST)=""
"RTN","PSBOMH",61,0)
 ...;add check for admin time before start time in PSB*3*57
"RTN","PSBOMH",62,0)
 ...S PSBADST1=$E($P($G(PSBADST),"-",$L($G(PSBADST),"-"))_"00",1,4),PSBOST1=$E($P(PSBOST,".",2)_"0000",1,4) ;PSB*3*67
"RTN","PSBOMH",63,0)
 ...I PSBCNTST=(PSBOST\1)&(PSBADST1>=PSBOST1) K ^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST) ;PSB*3*67 - PSB*3*76 adds "=" for stop date/time check
"RTN","PSBOMH",64,0)
 ...I PSBCNTST=(PSBOST\1),'$P($G(PSBADST),"-") K ^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST) ;PSB*3*67
"RTN","PSBOMH",65,0)
 ...I PSBCNTST>(PSBOSP\1) S ^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST)=""
"RTN","PSBOMH",66,0)
 ...I PSBCNTST=(PSBOSP\1)&($G(^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST))) K ^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST) S ^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST)=""
"RTN","PSBOMH",67,0)
 ..S PSBDODD=""
"RTN","PSBOMH",68,0)
 ..I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBDODD=1
"RTN","PSBOMH",69,0)
 ..I ((PSBX'["V")!(PSBVALB="1")),((PSBDODD="1")&(PSBADST'="")) S ^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST)=""
"RTN","PSBOMH",70,0)
 ..I ((PSBX'["V")!(PSBVALB="1")),('$$OKAY^PSBVDLU1(PSBOST,PSBCNTST,PSBSCH,PSBON,PSBOITX,PSBFREQ,PSBOSTS)) S ^TMP("PSB",$J,"ORDERS",PSBONX,"NTDUE",PSBCNTST)=""  ;W t TMP
"RTN","PSBOMH",71,0)
 .S (PSBYES,PSBODD,PSBFLAG,PSBYTFN,PSBDAYN)=0
"RTN","PSBOMH",72,0)
 .S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1,PSBDAYN=1
"RTN","PSBOMH",73,0)
 .I PSBYES,PSBADST="",PSBSCHT'="O",PSBSCHT'="OC",PSBSCHT'="P" Q 
"RTN","PSBOMH",74,0)
 .F I=1:1 Q:$P(PSBSCH,"-",I)=""  I $P(PSBSCH,"-",I)?2N!($P(PSBSCH,"-",I)?4N) S PSBYES=1,PSBYTFN=1
"RTN","PSBOMH",75,0)
 .I (PSBFREQ="O")!(PSBTYPE="P") S PSBYES=1
"RTN","PSBOMH",76,0)
 .I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBOMH",77,0)
 .;flg / admn t
"RTN","PSBOMH",78,0)
 .S:PSBONX["U" PSBFLAG=1
"RTN","PSBOMH",79,0)
 .I PSBIVT="A" S PSBADST="0000"
"RTN","PSBOMH",80,0)
 .I PSBIVT="H" S PSBADST="0000"
"RTN","PSBOMH",81,0)
 .I PSBIVT="C",PSBCHEMT="P" S:PSBADST="" PSBFLAG=1
"RTN","PSBOMH",82,0)
 .I PSBIVT="C",PSBISYR=1 S:PSBADST="" PSBFLAG=1
"RTN","PSBOMH",83,0)
 .I PSBIVT="C",PSBCHEMT="A" S PSBADST="0000"
"RTN","PSBOMH",84,0)
 .I PSBIVT="C",PSBISYR=0 S PSBADST="0000"
"RTN","PSBOMH",85,0)
 .I PSBIVT="P",($G(PSBADST)=0) S:PSBADST="" PSBFLAG=1
"RTN","PSBOMH",86,0)
 .I PSBIVT="P" S:PSBADST="" PSBFLAG=1
"RTN","PSBOMH",87,0)
 .I PSBIVT="S",PSBISYR=0 S PSBADST="0000"
"RTN","PSBOMH",88,0)
 .I PSBIVT="S",PSBISYR=1 S:PSBADST="" PSBFLAG=1
"RTN","PSBOMH",89,0)
 .I PSBFREQ="D" S PSBFREQ=""
"RTN","PSBOMH",90,0)
 .I 'PSBYES,PSBADST="",PSBFREQ<1 Q
"RTN","PSBOMH",91,0)
 .S (PSBEE,PSBZZ)=0
"RTN","PSBOMH",92,0)
 .I (PSBVALB="1")!(PSBX'["V") D  Q:(PSBEE!PSBZZ)=1
"RTN","PSBOMH",93,0)
 ..I PSBSCHT="C",PSBYTFN="1",PSBADST=""  S PSBEE=1
"RTN","PSBOMH",94,0)
 ..I PSBSCHT="C",PSBDAYN'="1",PSBYTFN'="1",PSBADST'="",PSBFREQ<1  S PSBZZ=1
"RTN","PSBOMH",95,0)
 .I 'PSBODD,PSBFLAG,PSBTYPE="C",PSBADST="" S PSBADST=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBSTOP)
"RTN","PSBOMH",96,0)
 .E  I PSBADST'="" K ^TMP("PSB",$J,"GETADMIN") S ^TMP("PSB",$J,"GETADMIN",0)=PSBADST
"RTN","PSBOMH",97,0)
 .;Calc adm/frq
"RTN","PSBOMH",98,0)
 .S PSBDT=PSBSTRT
"RTN","PSBOMH",99,0)
 .K PSBO,^UTILITY($J)
"RTN","PSBOMH",100,0)
 .F X=1:1:8 S PSBO(X)=""
"RTN","PSBOMH",101,0)
 .S DIWL=0,DIWR=32,DIWF="C32"
"RTN","PSBOMH",102,0)
 .S X=$P(PSBOSTX," ")_"          "_$P(PSBOSPX," ") D ^DIWP
"RTN","PSBOMH",103,0)
 .S X="@"_$P(PSBOSTX," ",3)_"              @"_$P(PSBOSPX," ",3)_"   " D ^DIWP
"RTN","PSBOMH",104,0)
 .S X="" D ^DIWP
"RTN","PSBOMH",105,0)
 .S X=PSBOITX D ^DIWP
"RTN","PSBOMH",106,0)
 .; DD,SOL,ADD
"RTN","PSBOMH",107,0)
 .S X=""
"RTN","PSBOMH",108,0)
 .F Y=0:0 S Y=$O(PSBDDA(Y)) Q:'Y  S X=X_$S(X]"":", ",1:"")_$P(PSBDDA(Y),U,3)
"RTN","PSBOMH",109,0)
 .F Y=0:0 S Y=$O(PSBADA(Y)) Q:'Y  S X=X_$S(X]"":", ",1:"")_$P(PSBADA(Y),U,3)_" "_$P(PSBADA(Y),U,4)_$P(PSBADA(Y),U,5)
"RTN","PSBOMH",110,0)
 .F Y=0:0 S Y=$O(PSBSOLA(Y)) Q:'Y  S X=X_$S(X]"":", ",1:"")_$P(PSBSOLA(Y),U,3)_" "_$P(PSBSOLA(Y),U,4)
"RTN","PSBOMH",111,0)
 .S X=" "_X,DIWF="I2C32" D ^DIWP S DIWF="C32"
"RTN","PSBOMH",112,0)
 .S PSBTXT=" Give: "_PSBDOSE_" "_PSBMRAB_" "_PSBSCH_" "_PSBIFR
"RTN","PSBOMH",113,0)
 .F  S PSBWORD=$P(PSBTXT," ",1),PSBTXT=$P(PSBTXT," ",2,250) D  Q:PSBTXT=""
"RTN","PSBOMH",114,0)
 ..F  Q:'$L(PSBWORD)  S X=$E(PSBWORD,1,30),PSBWORD=$E(PSBWORD,30,250) D ^DIWP
"RTN","PSBOMH",115,0)
 .K ^TMP("PSJ",$J) D EN^PSJBCMA2(DFN,PSBX) I ^TMP("PSJ",$J,0)'=-1 D   ;get activity log
"RTN","PSBOMH",116,0)
 ..S (PSBDISX,PSBHLDX)=0 F I=1:1:$P(^TMP("PSJ",$J,0),U,4) S X=$G(^TMP("PSJ",$J,I,1)) D  ;loop activities
"RTN","PSBOMH",117,0)
 ...Q:X["EDITED"!(X["VERIF")  ;
"RTN","PSBOMH",118,0)
 ...S:$P(X,U,4)["PLACED ON HOLD" PSBHLDFL=1 ;Set Hold Flag
"RTN","PSBOMH",119,0)
 ...S:$P(X,U,4)["TAKEN OFF HOLD" PSBHLDFL=0 ;Remove Hold Flag
"RTN","PSBOMH",120,0)
 ...S Z=0
"RTN","PSBOMH",121,0)
 ...I X'["OFF HOLD",X'["UNHOLD",X'["REINSTATE" S Z=1 ; inc iv's
"RTN","PSBOMH",122,0)
 ...S PSBHLDX=PSBHLDX+$S(Z>0:1,1:0)
"RTN","PSBOMH",123,0)
 ...S $P(PSBHLD(PSBHLDX),U,$S(Z>0:1,1:11))=^TMP("PSJ",$J,I,1)  ;set up for multiple on hold entries save start & stop as pair if exists 
"RTN","PSBOMH",124,0)
 ..F PSBHLDX=1:1 S X=$G(PSBHLD(PSBHLDX)) Q:'X  D  ;if a hold index - process 
"RTN","PSBOMH",125,0)
 ...S PSBHLDN=$P(PSBHLD(PSBHLDX),U,1),PSBHLDF=$P(PSBHLD(PSBHLDX),U,11)  ;get on/off hold, dates, IEN number(for UD orders) of person. 
"RTN","PSBOMH",126,0)
 ...Q:PSBHLDN>PSBSTOP  Q:(PSBHLDF<PSBSTRT)&(PSBHLDF'="") 
"RTN","PSBOMH",127,0)
 ...F PSBHLDT=PSBSTRT\1:1:PSBSTOP\1 I (PSBHLDT'<(PSBHLDN\1)),(PSBHLDT'>PSBSTOP) D
"RTN","PSBOMH",128,0)
 ....I X["DISCONTINUED" K ^TMP("PSB",$J,"ORDERS",PSBONX,"HOLD",PSBHLDT) S ^TMP("PSB",$J,"ORDERS",PSBONX,"DISC",PSBHLDT)=""
"RTN","PSBOMH",129,0)
 ....I (X["HOLD")&($G(PSBHLDFL))&((PSBHLDN\1)'>PSBHLDT)&((PSBHLDF'<PSBHLDT)!(PSBHLDF="")) S ^TMP("PSB",$J,"ORDERS",PSBONX,"HOLD",PSBHLDT)="" ;Check additional flag for PSB*3*57
"RTN","PSBOMH",130,0)
 ....I X["REINSTATE" K ^TMP("PSB",$J,"ORDERS",PSBONX,"DISC",PSBHLDT) I PSBOSTS="H" S ^TMP("PSB",$J,"ORDERS",PSBONX,"HOLD",PSBHLDT)=""
"RTN","PSBOMH",131,0)
 ...F PSBHLDXP=1:10:$P(PSBHLD(PSBHLDX),U,11)]""+10 D
"RTN","PSBOMH",132,0)
 ....S PSBDESC=$P(PSBHLD(PSBHLDX),U,PSBHLDXP+3),X=$S(PSBDESC["DISCONTINUE":"***",1:"")
"RTN","PSBOMH",133,0)
 ....S X=" "_X_PSBDESC D ^DIWP  ;output activity text 
"RTN","PSBOMH",134,0)
 ....S X="",PSBHLDI=$P(PSBHLD(PSBHLDX),U,PSBHLDXP+4) I PSBHLDI'="" S X=$$GET1^DIQ(200,PSBHLDI,"INITIAL")
"RTN","PSBOMH",135,0)
 ....S:X="" X="99" ;no init present
"RTN","PSBOMH",136,0)
 ....I X'="99" S X=" "_X D ^DIWP   ;get init & store
"RTN","PSBOMH",137,0)
 ....S Y=$P(PSBHLD(PSBHLDX),U,PSBHLDXP) D DD^%DT S X=Y D ^DIWP  ;format hold date / write 
"RTN","PSBOMH",138,0)
 ..K PSBHLD,PSBHLDF,PSBHLDN,PSBHLDT,PSBHLDX,PSBHLDXP,PSBHLDI,PSBDISX,PSBDISC,PSBDISXP,PSBDISI,PSBDIST,PSBDISN,PSBDESC
"RTN","PSBOMH",139,0)
 .F X=0:0 S X=$O(^UTILITY($J,"W",0,X)) Q:'X  S PSBO(X)=$G(^(X,0)) D
"RTN","PSBOMH",140,0)
 .;
"RTN","PSBOMH",141,0)
 .;Insert removal times print text, insure 4 digit times           *83
"RTN","PSBOMH",142,0)
 .; if removal time null, probably due to MRR type 1 so calculate
"RTN","PSBOMH",143,0)
 .I $G(PSBRMST)]"" S PSBRMST=$$CNVRT4^PSBUTL(PSBRMST,"-")
"RTN","PSBOMH",144,0)
 .I PSBMRRFL,$G(PSBRMST)="" S PSBRMST=$$REMSTR^PSBUTL(PSBADST,PSBDOA,PSBSCHT,PSBOSP,PSBOPRSP)
"RTN","PSBOMH",145,0)
 .D:$G(PSBRMST)]""
"RTN","PSBOMH",146,0)
 ..S X=$O(PSBO(""),-1)+1
"RTN","PSBOMH",147,0)
 ..F Q=1:1:$L(PSBRMST,"-") D
"RTN","PSBOMH",148,0)
 ...I Q=1 S PSBO(X)="     Removal Times: "_$P(PSBRMST,"-",Q) Q
"RTN","PSBOMH",149,0)
 ...S X=X+1,PSBO(X)="                    "_$P(PSBRMST,"-",Q)
"RTN","PSBOMH",150,0)
 .;
"RTN","PSBOMH",151,0)
 .S X=$O(PSBO(""),-1) S X=$S(X<8:8,1:X+1)
"RTN","PSBOMH",152,0)
 .S PSBO(X)=" RPH: "_PSBVPHI_"  RN: "_PSBVNI
"RTN","PSBOMH",153,0)
 .S PSBVAL=$$IVPTAB^PSBVDLU3(PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,PSBIVPSH)
"RTN","PSBOMH",154,0)
 .I PSBODD="1",PSBADST'="" D
"RTN","PSBOMH",155,0)
 ..I (PSBVAL="1")!(PSBX'["V") D   ;checks iv/pb and u dose
"RTN","PSBOMH",156,0)
 ...S PSBO(X+1)=""
"RTN","PSBOMH",157,0)
 ...S PSBO(X+2)="NOTE - ODD SCHEDULE NO LONGER",PSBO(X+3)="       ALLOWS ADMIN TIMES."
"RTN","PSBOMH",158,0)
 .K ^UTILITY($J)
"RTN","PSBOMH",159,0)
 . ;*70 If no location, and not inpatient, and Manual Med Entry, relay this information
"RTN","PSBOMH",160,0)
 .S PSBO(0)=$S(PSBCLINIC]"":PSBCLINIC,1:"INPATIENT")   ;clinic nam *70
"RTN","PSBOMH",161,0)
 .S XORDERS=$S(PSBO(0)="INPATIENT":1,1:2)              ;IM or CO   *70
"RTN","PSBOMH",162,0)
 .M ^TMP("PSB",$J,"ORDERS",PSBX,"INST")=PSBO
"RTN","PSBOMH",163,0)
 .D:PSBTYPE="C"
"RTN","PSBOMH",164,0)
 ..F  D  Q:PSBDT>PSBSTOP
"RTN","PSBOMH",165,0)
 ...S X=PSBDT D H^%DTC S PSBWEEK=%H
"RTN","PSBOMH",166,0)
 ...S ^TMP("PSB",$J,PSBWEEK,PSBONX)=""
"RTN","PSBOMH",167,0)
 ...; Odd schd - msg
"RTN","PSBOMH",168,0)
 ...S PSBIDOW=0 I PSBONX["U"!("PCS"[PSBIVT) S PSBIDOW=1
"RTN","PSBOMH",169,0)
 ...I PSBADST="",PSBIDOW,(PSBODD) D
"RTN","PSBOMH",170,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",0)=7
"RTN","PSBOMH",171,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",1)="odd"
"RTN","PSBOMH",172,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",2)="sched"
"RTN","PSBOMH",173,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",3)=$E(PSBSCH,1,5)
"RTN","PSBOMH",174,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",4)="no"
"RTN","PSBOMH",175,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",5)="fixed"
"RTN","PSBOMH",176,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",6)="admin"
"RTN","PSBOMH",177,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",7)="times"
"RTN","PSBOMH",178,0)
 ...I PSBADST'="",PSBADST'="0000",+$G(PSBFREQ)>0,+$G(PSBFREQ)<45 D
"RTN","PSBOMH",179,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",0)=5
"RTN","PSBOMH",180,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",1)="Due"
"RTN","PSBOMH",181,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",2)="every"
"RTN","PSBOMH",182,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",3)=$E(PSBFREQ,1,5)
"RTN","PSBOMH",183,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",4)="mins."
"RTN","PSBOMH",184,0)
 ....S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",5)=" "
"RTN","PSBOMH",185,0)
 ...S PSBATCNT=0    ; # times to print...
"RTN","PSBOMH",186,0)
 ...I PSBADST'="",((+$G(PSBFREQ)>44)!(PSBFREQ="")!(PSBADST="0000")) F PSBXX=0:1  Q:$G(^TMP("PSB",$J,"GETADMIN",PSBXX))=""  D
"RTN","PSBOMH",187,0)
 ....S PSBADST2=$G(^TMP("PSB",$J,"GETADMIN",PSBXX))
"RTN","PSBOMH",188,0)
 ....F Y=1:1:$L(PSBADST2,"-") D
"RTN","PSBOMH",189,0)
 .....Q:($P(PSBADST2,"-",Y)'?2N)&($P(PSBADST2,"-",Y)'?4N)  S PSBATCNT=PSBATCNT+1,^TMP("PSB",$J,"ORDERS",PSBONX,"AT",PSBATCNT)=$P(PSBADST2,"-",Y)
"RTN","PSBOMH",190,0)
 ...;*70   Insert Xorders IM or CO flag (1 or 2) into Sort control
"RTN","PSBOMH",191,0)
 ...I PSBADST'="",PSBFREQ>44 S ^TMP("PSB",$J,"ORDERS",PSBONX,"AT",0)=PSBATCNT
"RTN","PSBOMH",192,0)
 ...S ^TMP("PSB",$J,PSBWEEK,"SORT",XORDERS,PSBTYPE,PSBOITX,PSBX)=""
"RTN","PSBOMH",193,0)
 ...F PSBDOW=0:1:6 D  Q:X>(PSBSTOP-1)
"RTN","PSBOMH",194,0)
 ....S %H=PSBWEEK+PSBDOW D YMD^%DTC
"RTN","PSBOMH",195,0)
 ....S ^TMP("PSB",$J,PSBWEEK,PSBONX,X,0)=0
"RTN","PSBOMH",196,0)
 ....I '$D(^TMP("PSB",$J,PSBWEEK,"HDR",X)) S ^TMP("PSB",$J,PSBWEEK,"HDR",X)=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3))
"RTN","PSBOMH",197,0)
 ...S %H=PSBWEEK+7 D YMD^%DTC S PSBDT=X
"RTN","PSBOMH",198,0)
 .D:PSBTYPE'="C"
"RTN","PSBOMH",199,0)
 ..S X=PSBDT D H^%DTC S PSBWEEK=%H
"RTN","PSBOMH",200,0)
 ..S (^TMP("PSB",$J,PSBWEEK,PSBONX),^TMP("PSB",$J,PSBWEEK,PSBONX,"AT",0))=""
"RTN","PSBOMH",201,0)
 ..;*70   Insert Xorders IM or CO flag (1 or 2) into Sort control
"RTN","PSBOMH",202,0)
 ..S ^TMP("PSB",$J,PSBWEEK,"SORT",XORDERS,PSBTYPE,PSBOITX,PSBX)=""
"RTN","PSBOMH",203,0)
 D EN^PSBOMH1
"RTN","PSBOMH",204,0)
 D EN^PSBOMH2
"RTN","PSBOMH",205,0)
 Q
"RTN","PSBOMH",206,0)
INSTR S PSBINIT=PSBINIT_"*"
"RTN","PSBOMH",207,0)
 S PSBNAME=PSBNAME_"/"_$P(^PSB(53.79,PSBIEN,.9,$P(PSBDT,"."),0),U,3)_"  "_$$GET1^DIQ(53.79,PSBIEN_",",.06)
"RTN","PSBOMH",208,0)
 Q
"RTN","PSBOMH1")
0^24^B93853760^B84411239
"RTN","PSBOMH1",1,0)
PSBOMH1 ;BIRMINGHAM/EFC-MAH ;03/06/16 3:06pm
"RTN","PSBOMH1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,3,9,11,26,38,45,51,50,57,67,64,72,83**;Mar 2004;Build 89
"RTN","PSBOMH1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBOMH1",4,0)
 ;
"RTN","PSBOMH1",5,0)
 ; Reference/IA
"RTN","PSBOMH1",6,0)
 ; ^DILF/2054
"RTN","PSBOMH1",7,0)
 ; File 200/10060
"RTN","PSBOMH1",8,0)
 ;
"RTN","PSBOMH1",9,0)
 ;*83 - add Remove events per Give events when occurred.
"RTN","PSBOMH1",10,0)
 ;
"RTN","PSBOMH1",11,0)
EN ;
"RTN","PSBOMH1",12,0)
 ; Load administrations
"RTN","PSBOMH1",13,0)
 N PSBDT,X,Y,Z
"RTN","PSBOMH1",14,0)
 S (PSBORD,PSBIEN,PSBR1,PSBADIEN,PSBABR)="",PSBDT=PSBSTRT
"RTN","PSBOMH1",15,0)
 K PSBTSA
"RTN","PSBOMH1",16,0)
 F  S PSBDT=$O(^PSB(53.79,"AADT",DFN,PSBDT)) Q:'PSBDT!(PSBDT>PSBSTOP)  D
"RTN","PSBOMH1",17,0)
 .F  S PSBIEN=$O(^PSB(53.79,"AADT",DFN,PSBDT,PSBIEN)) Q:'PSBIEN  Q:'$D(^PSB(53.79,PSBIEN))  I $P(^PSB(53.79,PSBIEN,0),U,9)]"" D  ;Remove Lock as file is only read, PSB*3*64
"RTN","PSBOMH1",18,0)
 ..Q:'$P($G(^PSB(53.79,PSBIEN,0)),U,6)  ; Bad IEN -no evnt dt
"RTN","PSBOMH1",19,0)
 ..Q:$P(^PSB(53.79,PSBIEN,0),U,9)="N"  ;NGiven
"RTN","PSBOMH1",20,0)
 ..S PSBORD=$P($G(^PSB(53.79,PSBIEN,.1)),U,1)
"RTN","PSBOMH1",21,0)
 ..;PSB*3*45 Anyone on the audit log should be in the legend
"RTN","PSBOMH1",22,0)
 ..N TMPCT S TMPCT=0 F  S TMPCT=$O(^PSB(53.79,PSBIEN,.9,TMPCT)) Q:'TMPCT  D
"RTN","PSBOMH1",23,0)
 ...S PSBINIT=$$GET1^DIQ(53.799,TMPCT_","_PSBIEN,"USER:INITIAL"),PSBNAME=$$GET1^DIQ(53.799,TMPCT_","_PSBIEN_",","USER")
"RTN","PSBOMH1",24,0)
 ...S:PSBINIT="" PSBINIT=99
"RTN","PSBOMH1",25,0)
 ...S ^TMP("PSB",$J,"LEGEND",PSBINIT,PSBNAME)=""
"RTN","PSBOMH1",26,0)
 ..; Continuous
"RTN","PSBOMH1",27,0)
 ..D:$P($G(^PSB(53.79,PSBIEN,.1)),U,2)="C"
"RTN","PSBOMH1",28,0)
 ...S X=PSBDT D H^%DTC S PSBWEEK=PSBAR(%H) D CLEAN^PSBVT,PSJ1^PSBVT($P(^PSB(53.79,PSBIEN,0),U,1),$P(^PSB(53.79,PSBIEN,.1),U,1))
"RTN","PSBOMH1",29,0)
 ...I $P(^PSB(53.79,PSBIEN,0),U,6)'=PSBDT,'$$IVPTAB^PSBVDLU3(PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,PSBIVPSH) D  D CLEAN^PSBVT Q  ;chck IV audit
"RTN","PSBOMH1",30,0)
 ....S PSBSIEN=PSBIEN
"RTN","PSBOMH1",31,0)
 ....I $P(^PSB(53.79,PSBIEN,0),"^",10)]"" D BAGDTL^PSBRPC2(.PSBAUD,$P(^PSB(53.79,PSBIEN,0),U,10),$P(^PSB(53.79,PSBIEN,.1),U,1))
"RTN","PSBOMH1",32,0)
 ....S PSBIEN=PSBSIEN K PSBSIEN
"RTN","PSBOMH1",33,0)
 ....S X=0 F  S X=$O(PSBAUD(X)) Q:X=""  I $P(PSBAUD(X),U,3)="" K PSBAUD(X)
"RTN","PSBOMH1",34,0)
 ....S X=0 F  S X=$O(PSBAUD(X)) Q:X=""  Q:$P(PSBAUD(X),U,1)=PSBDT
"RTN","PSBOMH1",35,0)
 ....I X="" K PSBAUD Q
"RTN","PSBOMH1",36,0)
 ....I '$D(PSBAUD(X)) K PSBAUD Q
"RTN","PSBOMH1",37,0)
 ....S PSBS=$P(PSBAUD(X),U,3)
"RTN","PSBOMH1",38,0)
 ....I PSBS="GIVEN",$P($G(PSBAUD(X-1)),U,3)="NOT GIVEN" Q
"RTN","PSBOMH1",39,0)
 ....I PSBS="NOT GIVEN" Q
"RTN","PSBOMH1",40,0)
 ....S PSBS=$S(PSBS="INFUSING":"I",PSBS="GIVEN":"G",PSBS="COMPLETED":"C",PSBS="HELD":"H",PSBS="REFUSED":"R",PSBS="REMOVED":"RM",PSBS="STOPPED":"S",PSBS["MISSING":"M",1:"NOACTION")
"RTN","PSBOMH1",41,0)
 ....D PSBSTIV^PSBOMH2
"RTN","PSBOMH1",42,0)
 ....S X=PSBDT_U_$P(PSBAUD(X),U,2)_U_PSBS_U_PSBIEN
"RTN","PSBOMH1",43,0)
 ....S Y=$O(^TMP("PSB",$J,PSBWEEK,PSBORD,PSBDT\1,""),-1)+1
"RTN","PSBOMH1",44,0)
 ....S ^TMP("PSB",$J,PSBWEEK,PSBORD,PSBDT\1,Y)=X ;PSB*3*67
"RTN","PSBOMH1",45,0)
 ....S ^TMP("PSB",$J,PSBWEEK,PSBORD,PSBDT\1,0)=Y
"RTN","PSBOMH1",46,0)
 ....D PSBOUT($P((X),"^",1),$P((X),"^",2))
"RTN","PSBOMH1",47,0)
 ....K PSBAUD
"RTN","PSBOMH1",48,0)
 ...S PSBINIT=$$GETINIT^PSBCSUTX(PSBIEN,"I") ;Get initials of who took action, PSB*3*72
"RTN","PSBOMH1",49,0)
 ...S PSBNAME=$$GETINIT^PSBCSUTX(PSBIEN,"N") ;Get name of who took action, PSB*3*72
"RTN","PSBOMH1",50,0)
 ...I PSBINIT="" S PSBINIT=99
"RTN","PSBOMH1",51,0)
 ...;get instrc info - audt log
"RTN","PSBOMH1",52,0)
 ...I $D(^PSB(53.79,PSBIEN,.9,$P(PSBDT,"."))) D
"RTN","PSBOMH1",53,0)
 ....D INSTR^PSBOMH
"RTN","PSBOMH1",54,0)
 ....S ^TMP("PSB",$J,"LEGEND",PSBINIT,PSBNAME)=""
"RTN","PSBOMH1",55,0)
 ...I PSBINIT[99 S PSBINIT=""
"RTN","PSBOMH1",56,0)
 ...I $P(^PSB(53.79,PSBIEN,0),U,9)="G",PSBDT=$P(^PSB(53.79,PSBIEN,0),U,6)  D PSBCK1^PSBOMH2("A")
"RTN","PSBOMH1",57,0)
 ...I $P(^PSB(53.79,PSBIEN,0),U,9)'="G",PSBDT=$P(^PSB(53.79,PSBIEN,0),U,6)  D PSBCK1^PSBOMH2("B")
"RTN","PSBOMH1",58,0)
 ...I PSBDT'=$P(^PSB(53.79,PSBIEN,0),U,6),$P(^PSB(53.79,PSBIEN,0),U,9)="RM" D
"RTN","PSBOMH1",59,0)
 ....D DDAUD
"RTN","PSBOMH1",60,0)
 ....S I="" F  S I=$O(PSBTAR(I),-1) Q:I=""  I $P(PSBTAR(I),U,1)=PSBDT D
"RTN","PSBOMH1",61,0)
 .....S PSBS=$P(PSBTAR(I),U,3)
"RTN","PSBOMH1",62,0)
 .....I PSBS="GIVEN",$P($G(PSBTAR(I-1)),U,3)="NOT GIVEN" Q  ; canceled - not given
"RTN","PSBOMH1",63,0)
 .....I PSBS="NOT GIVEN" Q
"RTN","PSBOMH1",64,0)
 .....S PSBS=$S(PSBS="INFUSING":"I",PSBS="GIVEN":"G",PSBS="COMPLETED":"C",PSBS="HELD":"H",PSBS="REFUSED":"R",PSBS="REMOVED":"RM",PSBS="STOPPED":"S",PSBS["MISSING":"M",1:"NO ACTION")
"RTN","PSBOMH1",65,0)
 .....D PSBCTAR^PSBOMH2
"RTN","PSBOMH1",66,0)
 .....S X=$P(PSBTAR(I),U,1,2)_U_PSBS_U_PSBIEN
"RTN","PSBOMH1",67,0)
 ...Q:'+X  ;Quit if invalid data is returned, PSB*3*67
"RTN","PSBOMH1",68,0)
 ...;
"RTN","PSBOMH1",69,0)
 ...;Remove event, insert Give 1st, then re-add Remove event       *83
"RTN","PSBOMH1",70,0)
 ...I $P(X,U,3)="RM" D
"RTN","PSBOMH1",71,0)
 ....S Z=X                               ;save remove event
"RTN","PSBOMH1",72,0)
 ....S X=$$FINDGIVE^PSBUTL($P(Z,U,4))     ;find Give and add to grid
"RTN","PSBOMH1",73,0)
 ....S Y=$O(^TMP("PSB",$J,PSBWEEK,PSBORD,$P(X,".",1)\1,""),-1)+1
"RTN","PSBOMH1",74,0)
 ....S ^TMP("PSB",$J,PSBWEEK,PSBORD,$P(X,U)\1,Y)=X
"RTN","PSBOMH1",75,0)
 ....S ^TMP("PSB",$J,PSBWEEK,PSBORD,$P(X,U)\1,0)=Y
"RTN","PSBOMH1",76,0)
 ....D PSBOUT($P((X),"^",1),$P((X),"^",2))
"RTN","PSBOMH1",77,0)
 ....S X=Z                               ;restore remove event to grid
"RTN","PSBOMH1",78,0)
 ...;
"RTN","PSBOMH1",79,0)
 ...S Y=$O(^TMP("PSB",$J,PSBWEEK,PSBORD,PSBDT\1,""),-1)+1
"RTN","PSBOMH1",80,0)
 ...S ^TMP("PSB",$J,PSBWEEK,PSBORD,PSBDT\1,Y)=X ;PSB*3*67
"RTN","PSBOMH1",81,0)
 ...S ^TMP("PSB",$J,PSBWEEK,PSBORD,PSBDT\1,0)=Y
"RTN","PSBOMH1",82,0)
 ...D PSBOUT($P((X),"^",1),$P((X),"^",2))
"RTN","PSBOMH1",83,0)
 ...Q
"RTN","PSBOMH1",84,0)
 ..;
"RTN","PSBOMH1",85,0)
 ..; 1-Time On Call or PRN
"RTN","PSBOMH1",86,0)
 ..D:$P($G(^PSB(53.79,PSBIEN,.1)),U,2)'="C"
"RTN","PSBOMH1",87,0)
 ...I PSBDT'=$$GET1^DIQ(53.79,PSBIEN_",",.06,"I") Q
"RTN","PSBOMH1",88,0)
 ...S PSBINIT=$$GETINIT^PSBCSUTX(PSBIEN,"I") ;Get initials of who took action, PSB*3*72
"RTN","PSBOMH1",89,0)
 ...S PSBNAME=$$GETINIT^PSBCSUTX(PSBIEN,"N") ;Get name of who took action, PSB*3*72
"RTN","PSBOMH1",90,0)
 ...I PSBINIT="" S PSBINIT=99
"RTN","PSBOMH1",91,0)
 ...S (PSBXA,PSBM)=1,(PSBZ,PSBT,PSBFLG)=""
"RTN","PSBOMH1",92,0)
 ...I $$GET1^DIQ(53.79,PSBIEN_",",.09)="REMOVED"  D
"RTN","PSBOMH1",93,0)
 ....F I=1:1 S PSBXA=$O(^PSB(53.79,PSBIEN,.9,PSBXA)) Q:PSBXA=""  I PSBXA?1.3N  S PSBZ=PSBZ+1,PSBT(PSBZ)=^PSB(53.79,PSBIEN,.9,PSBXA,0)
"RTN","PSBOMH1",94,0)
 ....F S=1:1 Q:PSBM<1  S PSBM=PSBZ-S  I (PSBM>0) I (PSBT(PSBM)["GIVEN")  S PSBFLG="1" S PRELINE1=$P(PSBT(PSBM),"'",2)_" "_$$GET1^DIQ(53.79,PSBIEN_",",.04)_" "_$E($P(PSBT(PSBM),"'",4),1,3) Q
"RTN","PSBOMH1",95,0)
 ...I $D(^PSB(53.79,PSBIEN,.9,$P(PSBDT,"."))) D
"RTN","PSBOMH1",96,0)
 ....D INSTR^PSBOMH
"RTN","PSBOMH1",97,0)
 ....S ^TMP("PSB",$J,"LEGEND",PSBINIT,PSBNAME)=""
"RTN","PSBOMH1",98,0)
 ...I '$D(^PSB(53.79,PSBIEN,.9,$P(PSBDT,".")))  D PSBOUT(PSBDT,PSBINIT)
"RTN","PSBOMH1",99,0)
 ...S PSBLINE1=$$GET1^DIQ(53.79,PSBIEN_",",.09)_" "_$$GET1^DIQ(53.79,PSBIEN_",",.06)_" "_PSBINIT_"            "_$$GET1^DIQ(53.79,PSBIEN_",",.21),PSBLINE2=""
"RTN","PSBOMH1",100,0)
 ...I PSBINIT[99 S PSBINIT=""
"RTN","PSBOMH1",101,0)
 ...D:$P($G(^PSB(53.79,PSBIEN,.1)),U,2)="P"
"RTN","PSBOMH1",102,0)
 ....I $P($G(^PSB(53.79,PSBIEN,.2)),U,2)="" S PSBLINE2="  Results: <No PRN Results On File>"
"RTN","PSBOMH1",103,0)
 ....E  D
"RTN","PSBOMH1",104,0)
 .....S PSBINIT=$$GET1^DIQ(53.79,PSBIEN_",","PRN EFFECTIVENESS ENTERED BY:INITIAL")
"RTN","PSBOMH1",105,0)
 .....S PSBNAME=$$GET1^DIQ(53.79,PSBIEN_",","PRN EFFECTIVENESS ENTERED BY:NAME")
"RTN","PSBOMH1",106,0)
 .....I PSBINIT="" S PSBINIT=99
"RTN","PSBOMH1",107,0)
 .....I $D(^PSB(53.79,PSBIEN,.9,$P(PSBDT,"."))) D
"RTN","PSBOMH1",108,0)
 ......S PSBINIT=PSBINIT_"*",PSBNAME=PSBNAME_"/"_$P(^PSB(53.79,PSBIEN,.9,$P(PSBDT,"."),0),U,3)_"  "_$$GET1^DIQ(53.79,PSBIEN_",",.24)
"RTN","PSBOMH1",109,0)
 ......S ^TMP("PSB",$J,"LEGEND",PSBINIT,PSBNAME)=""
"RTN","PSBOMH1",110,0)
 .....I '$D(^PSB(53.79,PSBIEN,.9,$P(PSBDT,".")))  D
"RTN","PSBOMH1",111,0)
 ......D:$D(^PSB(53.79,PSBIEN,.9,0))
"RTN","PSBOMH1",112,0)
 .......S (PSBXA2,PSBFG)=0,PSBEFFDT=$P(^PSB(53.79,PSBIEN,.2),U,4) F  S PSBXA2=$O(^PSB(53.79,PSBIEN,.9,PSBXA2)) Q:+PSBXA2'>0  D  Q:PSBFG=1
"RTN","PSBOMH1",113,0)
 ........D:($P(^PSB(53.79,PSBIEN,.9,PSBXA2,0),U)=PSBEFFDT)&($P(^PSB(53.79,PSBIEN,.9,PSBXA2,0),U,3)["Instruct")&($P(^PSB(53.79,PSBIEN,.2),U,3)=$P(^PSB(53.79,PSBIEN,.9,PSBXA2,0),U,2))
"RTN","PSBOMH1",114,0)
 .........S PSBINIT=PSBINIT_"*",PSBNAME=PSBNAME_"/"_$P(^PSB(53.79,PSBIEN,.9,PSBXA2,0),U,3)_"  "_$$GET1^DIQ(53.79,PSBIEN_",",.24)
"RTN","PSBOMH1",115,0)
 .........S ^TMP("PSB",$J,"LEGEND",PSBINIT,PSBNAME)="",PSBFG=1
"RTN","PSBOMH1",116,0)
 .....S PSBLINE2="  Results: "_$$GET1^DIQ(53.79,PSBIEN_",",.22)
"RTN","PSBOMH1",117,0)
 .....S PSBRTXTW="     Entered By "_PSBINIT_" on "_$$GET1^DIQ(53.79,PSBIEN_",",.24)
"RTN","PSBOMH1",118,0)
 .....N PSBEIECMT,PSBCMTCH S PSBEIECMT="",PSBCMTCH=0 F  S PSBCMTCH=$O(^PSB(53.79,PSBIEN,.3,PSBCMTCH)) Q:'PSBCMTCH  D
"RTN","PSBOMH1",119,0)
 ......I $P($G(^PSB(53.79,PSBIEN,.3,PSBCMTCH,0)),U)["**Pain Score of" S PSBEIECMT=" **This Pain Score may have been Entered in Error. See Vitals Package.**"
"RTN","PSBOMH1",120,0)
 .....S PSBLINE2=PSBLINE2_PSBEIECMT
"RTN","PSBOMH1",121,0)
 .....I PSBINIT[99 S PSBINIT=""
"RTN","PSBOMH1",122,0)
 ...S X=PSBDT D H^%DTC F PSBWEEK=PSBAR(%H):-7 Q:$D(^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",0))!('$D(PSBAR(PSBWEEK)))
"RTN","PSBOMH1",123,0)
 ...S X=$O(^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",""),-1)+1
"RTN","PSBOMH1",124,0)
 ...I PSBFLG="1" S ^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X)=PRELINE1
"RTN","PSBOMH1",125,0)
 ...S ^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X+1)=PSBLINE1
"RTN","PSBOMH1",126,0)
 ...I $G(PSBLINE2)]"" D
"RTN","PSBOMH1",127,0)
 ....I $L(PSBLINE2)<=90 S ^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X+2)=PSBLINE2 S:$$GET1^DIQ(53.79,PSBIEN_",",.24)'="" ^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X+3)="      "_PSBRTXTW
"RTN","PSBOMH1",128,0)
 ....I $L(PSBLINE2)>90 D
"RTN","PSBOMH1",129,0)
 .....S ^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X+2)=$E(PSBLINE2,1,90)
"RTN","PSBOMH1",130,0)
 .....S ^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X+3)="           "_$E(PSBLINE2,91,169)
"RTN","PSBOMH1",131,0)
 .....I $L(PSBLINE2)'>169 S ^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X+4)="     "_PSBRTXTW
"RTN","PSBOMH1",132,0)
 .....I $L(PSBLINE2)>169 S ^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X+4)="           "_$E(PSBLINE2,170,245),^TMP("PSB",$J,PSBWEEK,PSBORD,"AT",X+5)="     "_PSBRTXTW
"RTN","PSBOMH1",133,0)
 D RELINE^PSBOMH3(PSBWEEK) ;Line up administrations with their admin times - PSB*3*67
"RTN","PSBOMH1",134,0)
 Q
"RTN","PSBOMH1",135,0)
 ;
"RTN","PSBOMH1",136,0)
DDAUD ;  audits for dispen drugs
"RTN","PSBOMH1",137,0)
 ;
"RTN","PSBOMH1",138,0)
 M PSBMLA=^PSB(53.79,PSBIEN)
"RTN","PSBOMH1",139,0)
 S PSBGA="" I $D(PSBMLA(.9,0)) D
"RTN","PSBOMH1",140,0)
 .F PSBX=1:1 Q:'$D(PSBMLA(.9,PSBX))  I ((PSBMLA(.9,PSBX,0)["ACTION STATUS")!(PSBMLA(.9,PSBX,0)["ADMINISTRATION STATUS")) D  Q
"RTN","PSBOMH1",141,0)
 ..I $D(PSBMLA(.9,PSBX-2,0)) D DT^DILF("ENPST",$P(PSBMLA(.9,PSBX-2,0),"'",2),.PSBDATE)
"RTN","PSBOMH1",142,0)
 ..I '$D(PSBMLA(.9,PSBX-2,0)) S PSBDATE=$P(^PSB(53.79,PSBIEN,0),U,6)
"RTN","PSBOMH1",143,0)
 ..S PSBTMP(10000000-PSBDATE,"B")=PSBDATE_U_$$INITIAL^PSBRPC2($P(PSBMLA(0),U,5))_U_$P(PSBMLA(.9,PSBX,0),"'",2)
"RTN","PSBOMH1",144,0)
 ..S PSBGA=1
"RTN","PSBOMH1",145,0)
 .F PSBX=1:1 Q:'$D(PSBMLA(.9,PSBX))  I ((PSBMLA(.9,PSBX,0)["ACTION STATUS")!(PSBMLA(.9,PSBX,0)["ADMINISTRATION STATUS")) D
"RTN","PSBOMH1",146,0)
 ..S PSBTMP(10000000-$P(PSBMLA(.9,PSBX,0),U,1),"B")=$P(PSBMLA(.9,PSBX,0),U,1)_U_$$INITIAL^PSBRPC2($P(PSBMLA(.9,PSBX,0),U,2))_U_$P($P(PSBMLA(.9,PSBX,0),U,3),"'",2)
"RTN","PSBOMH1",147,0)
 ..S PSBGA=1
"RTN","PSBOMH1",148,0)
 ;PSB*3*45 Remove Use of $Q(<>,-1)
"RTN","PSBOMH1",149,0)
 N PSBTMQ
"RTN","PSBOMH1",150,0)
 I PSBGA'=1 S PSBTMP(10000000-$P(PSBMLA(0),U,6),"A")=$P(PSBMLA(0),U,6)_U_$$INITIAL^PSBRPC2($P(PSBMLA(0),U,7))
"RTN","PSBOMH1",151,0)
 S PSBQRY="PSBTMP",PSBCNT=1 F  S PSBTMQ=PSBQRY,PSBQRY=$Q(@PSBQRY) Q:PSBQRY=""  D  ; does comment go with action
"RTN","PSBOMH1",152,0)
 .S PSBPQRY=$G(PSBTMQ)
"RTN","PSBOMH1",153,0)
 .I PSBPQRY="" S PSBTAR(PSBCNT)=@PSBQRY,PSBCNT=PSBCNT+1 Q  ; no prev action
"RTN","PSBOMH1",154,0)
 .I $QS(PSBPQRY,2)="C"  S PSBTAR(PSBCNT)=@PSBQRY,PSBCNT=PSBCNT+1 Q  ; prev line = comment
"RTN","PSBOMH1",155,0)
 .I $QS(PSBQRY,2)="C",$E($P(@PSBTMQ,U,1),1,12)=$E($P(@PSBQRY,U,1),1,12),$P(@PSBTMQ,U,2)=$P(@PSBQRY,U,2) D  Q
"RTN","PSBOMH1",156,0)
 ..S X=$P(@PSBQRY,U,4) S:X[":" X=$P(X,":",2) S $P(PSBTAR(PSBCNT-1),U,4)=X Q
"RTN","PSBOMH1",157,0)
 .S PSBTAR(PSBCNT)=@PSBQRY,PSBCNT=PSBCNT+1
"RTN","PSBOMH1",158,0)
 Q
"RTN","PSBOMH1",159,0)
 ;
"RTN","PSBOMH1",160,0)
PSBOUT(PSBTET,PSBOT1) ;
"RTN","PSBOMH1",161,0)
 I '$D(^PSB(53.79,PSBIEN,.9,0))  D PSBENT^PSBOMH2(PSBOT1)
"RTN","PSBOMH1",162,0)
 S PSBIDA="" I $P(^PSB(53.79,PSBIEN,0),U,6)=PSBTET S PSBIDA=$P(^PSB(53.79,PSBIEN,0),U,7),PSBOT1=$P(^VA(200,PSBIDA,0),"^",2),PSBNAME=$P(^VA(200,PSBIDA,0),"^",1)
"RTN","PSBOMH1",163,0)
 S PSBXA1=0
"RTN","PSBOMH1",164,0)
 F  S PSBXA1=$O(^PSB(53.79,PSBIEN,.9,PSBXA1)) Q:+PSBXA1'>0  I PSBXA1'=0  D  Q:$G(PSBOT1)["*"
"RTN","PSBOMH1",165,0)
 .I $L(PSBXA1)<4  D
"RTN","PSBOMH1",166,0)
 ..I $P(^PSB(53.79,PSBIEN,.9,PSBXA1,0),"^",1)=PSBTET  D
"RTN","PSBOMH1",167,0)
 ...S:$G(PSBIDA)="" PSBIDA=$P(^PSB(53.79,PSBIEN,.9,PSBXA1,0),"^",2),PSBOT1=$P(^VA(200,PSBIDA,0),"^",2),PSBNAME=$P(^VA(200,PSBIDA,0),"^",1)
"RTN","PSBOMH1",168,0)
 ...I (PSBIDA=$P(^PSB(53.79,PSBIEN,.9,PSBXA1,0),"^",2)),$P(^PSB(53.79,PSBIEN,.9,PSBXA1,0),"^",3)["Instruct"  D
"RTN","PSBOMH1",169,0)
 ....S INSDD=$P(^PSB(53.79,PSBIEN,.9,PSBXA1,0),"^",1),Y=INSDD D DD^%DT S INSDD=Y
"RTN","PSBOMH1",170,0)
 ....S PSBOT1=PSBOT1_"*",PSBNAME=PSBNAME_"/"_$P(^PSB(53.79,PSBIEN,.9,PSBXA1,0),U,3)_" "_INSDD
"RTN","PSBOMH1",171,0)
 I $G(PSBIDA)="",$P(^PSB(53.79,PSBIEN,0),U,4)=PSBTET D
"RTN","PSBOMH1",172,0)
 .S PSBIDA=$P(^PSB(53.79,PSBIEN,0),U,5),PSBOT1=$P(^VA(200,PSBIDA,0),"^",2),PSBNAME=$P(^VA(200,PSBIDA,0),"^",1)
"RTN","PSBOMH1",173,0)
 I $G(PSBNAME)="" D
"RTN","PSBOMH1",174,0)
 . S PSBIDA=$P(^PSB(53.79,PSBIEN,0),U,5),PSBOT1=$P(^VA(200,PSBIDA,0),"^",2),PSBNAME=$P(^VA(200,PSBIDA,0),"^",1)
"RTN","PSBOMH1",175,0)
 S ^TMP("PSB",$J,"LEGEND",$S($G(PSBOT1)="":99,1:PSBOT1),PSBNAME)=""
"RTN","PSBOMH1",176,0)
 Q
"RTN","PSBOMH1",177,0)
 ;
"RTN","PSBOML")
0^25^B88385252^B64746915
"RTN","PSBOML",1,0)
PSBOML ;BIRMINGHAM/EFC-MEDICATION LOG ;03/06/16 3:06pm
"RTN","PSBOML",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,11,50,54,70,72,83**;Mar 2004;Build 89
"RTN","PSBOML",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBOML",4,0)
 ;
"RTN","PSBOML",5,0)
 ; Reference/IA
"RTN","PSBOML",6,0)
 ; ^DPT/10035
"RTN","PSBOML",7,0)
 ; SENDMSG^XMXAPI/2729
"RTN","PSBOML",8,0)
 ; ^XLFDT/10103
"RTN","PSBOML",9,0)
 ;
"RTN","PSBOML",10,0)
 ;*70 - Add Witness for High Risk Drug to report
"RTN","PSBOML",11,0)
 ;    - print Clinic name with each order that occurred in a clinic
"RTN","PSBOML",12,0)
 ;    - set psbclinord=2 for dual hdr text
"RTN","PSBOML",13,0)
 ;    - create var for Search list and use for both IM & CO, pass to
"RTN","PSBOML",14,0)
 ;      PSBOHDR api
"RTN","PSBOML",15,0)
 ;    - 1489: Blended PSB*3*54 with PSB*3*70
"RTN","PSBOML",16,0)
 ;*83 - Add MRR meds remove times to report.
"RTN","PSBOML",17,0)
 ;
"RTN","PSBOML",18,0)
EN ; Begin printing
"RTN","PSBOML",19,0)
 N PSBSTRT,PSBSTOP,PSBHDR,DFN,PSBSORT,PSBSRCHL
"RTN","PSBOML",20,0)
 S PSBSORT=$P(PSBRPT(.1),U,1)                                     ;*70
"RTN","PSBOML",21,0)
 S PSBSTRT=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,7)
"RTN","PSBOML",22,0)
 S PSBSTOP=$P(PSBRPT(.1),U,8)+$P(PSBRPT(.1),U,9)
"RTN","PSBOML",23,0)
 S PSBAUDF=$P(PSBRPT(.2),U,9)
"RTN","PSBOML",24,0)
 S PSBHDR(0)="Medication Log Report for "_$$FMTE^XLFDT(PSBSTRT)_" to "_$$FMTE^XLFDT(PSBSTOP) ;Add time frame for report header, PSB*3*72
"RTN","PSBOML",25,0)
 S PSBHDR(1)="Continuing/PRN/Stat/One Time Medication/Treatment Record (Detailed Log) (VAF 10-2970 B, C, D)"
"RTN","PSBOML",26,0)
 ;check Clinic or Nurs Unit search list                *70
"RTN","PSBOML",27,0)
 S PSBSRCHL=$$SRCHLIST^PSBOHDR()
"RTN","PSBOML",28,0)
 ;
"RTN","PSBOML",29,0)
 ; Patient Report
"RTN","PSBOML",30,0)
 ;
"RTN","PSBOML",31,0)
 D:PSBSORT="P"
"RTN","PSBOML",32,0)
 .S PSBHDR(2)="Log Type: INDIVIDUAL PATIENT"
"RTN","PSBOML",33,0)
 .S DFN=+$P(PSBRPT(.1),U,2)
"RTN","PSBOML",34,0)
 .W $$PTHDR()
"RTN","PSBOML",35,0)
 .S X=$O(^PSB(53.79,"AADT",DFN,PSBSTRT-.0000001))
"RTN","PSBOML",36,0)
 .I X>PSBSTOP!(X="") W !!?10,"<<<< NO MEDICATIONS FOUND FOR THIS TIME FRAME >>>>",!! Q
"RTN","PSBOML",37,0)
 .S PSBGBL=$NAME(^PSB(53.79,"AADT",DFN,PSBSTRT-.0000001))
"RTN","PSBOML",38,0)
 .F  S PSBGBL=$Q(@PSBGBL) Q:PSBGBL=""  Q:$QS(PSBGBL,2)'="AADT"!($QS(PSBGBL,3)'=DFN)!($QS(PSBGBL,4)>PSBSTOP)  D
"RTN","PSBOML",39,0)
 ..S PSBIEN=$QS(PSBGBL,5) Q:'$D(^PSB(53.79,PSBIEN))
"RTN","PSBOML",40,0)
 ..I $P(^PSB(53.79,PSBIEN,0),U,6)'=$QS(PSBGBL,4) Q
"RTN","PSBOML",41,0)
 ..I $Y>(IOSL-10) W $$PTFTR^PSBOHDR(),$$PTHDR()
"RTN","PSBOML",42,0)
 ..W $$LINE(PSBIEN)
"RTN","PSBOML",43,0)
 .W $$PTFTR^PSBOHDR()
"RTN","PSBOML",44,0)
 ;
"RTN","PSBOML",45,0)
 ; Ward Output
"RTN","PSBOML",46,0)
 ;
"RTN","PSBOML",47,0)
 D:PSBSORT="W"
"RTN","PSBOML",48,0)
 .S PSBHDR(2)="LOG TYPE: WARD"
"RTN","PSBOML",49,0)
 .W $$WDHDR(PSBWRD)
"RTN","PSBOML",50,0)
 .S PSBTMPG=$NAME(^TMP("PSBO",$J,"B"))
"RTN","PSBOML",51,0)
 .F  S PSBTMPG=$Q(@PSBTMPG) Q:PSBTMPG=""  Q:$QS(PSBTMPG,1)'="PSBO"!($QS(PSBTMPG,2)'=$J)  D
"RTN","PSBOML",52,0)
 ..S DFN=$QS(PSBTMPG,5)
"RTN","PSBOML",53,0)
 ..I $Y>(IOSL-14) W $$WDHDR(PSBWRD)
"RTN","PSBOML",54,0)
 ..W !,$P(^DPT(DFN,0),U),"  (",$P(^(0),U,9),")"
"RTN","PSBOML",55,0)
 ..W !,"Ward: ",$G(^DPT(DFN,.1),"***"),"  Rm-Bed: ",$G(^DPT(DFN,.101),"***"),!
"RTN","PSBOML",56,0)
 ..S X=$O(^PSB(53.79,"AADT",DFN,PSBSTRT-.0000001))
"RTN","PSBOML",57,0)
 ..I X>PSBSTOP!(X="") W !!?10,"<<<< NO MEDICATIONS FOUND FOR THIS TIME FRAME >>>>",!! Q
"RTN","PSBOML",58,0)
 ..S PSBGBL=$NAME(^PSB(53.79,"AADT",DFN,PSBSTRT-.0000001))
"RTN","PSBOML",59,0)
 ..F  S PSBGBL=$Q(@PSBGBL) Q:PSBGBL=""  Q:$QS(PSBGBL,2)'="AADT"!($QS(PSBGBL,3)'=DFN)!($QS(PSBGBL,4)>PSBSTOP)  D
"RTN","PSBOML",60,0)
 ...S PSBIEN=$QS(PSBGBL,5) I $P(^PSB(53.79,PSBIEN,0),U,6)'=$QS(PSBGBL,4) Q
"RTN","PSBOML",61,0)
 ...W:$Y>(IOSL-10) $$WDHDR(PSBWRD)
"RTN","PSBOML",62,0)
 ...W $$LINE(PSBIEN)
"RTN","PSBOML",63,0)
 Q
"RTN","PSBOML",64,0)
 ;
"RTN","PSBOML",65,0)
LINE(PSBIEN) ; Displays the med log entry in PSBIEN
"RTN","PSBOML",66,0)
 N PSBX,PSBASTUS,PSBMME,PSBEXIST
"RTN","PSBOML",67,0)
 S X=$P($G(^PSB(53.79,PSBIEN,.1)),U)
"RTN","PSBOML",68,0)
 I X="" W !,"Error: Med Log Entry ",PSBIEN," has no order reference number!" Q ""
"RTN","PSBOML",69,0)
 I 'PSBAUDF,$P(^PSB(53.79,PSBIEN,0),U,9)="N" Q ""
"RTN","PSBOML",70,0)
 D CLEAN^PSBVT
"RTN","PSBOML",71,0)
 D PSJ1^PSBVT(DFN,X,,.PSBEXIST)
"RTN","PSBOML",72,0)
 ;   ;[*70-1489]...start
"RTN","PSBOML",73,0)
 I '$G(PSBEXIST),($G(PSBSCRT)="-1") D  ;send email to BCMA UKNOWN ACTIONS group if order given in BCMA does not have a corresponding # 55 file entry
"RTN","PSBOML",74,0)
 .N XMDUZ,XMSUB,XMTEXT,XMY,PSBERR,PSBPARAM,PSBMG
"RTN","PSBOML",75,0)
 .S XMSUB="Order given in BCMA does not exist in Pharmacy Patient file"
"RTN","PSBOML",76,0)
 .S XMDUZ=DUZ
"RTN","PSBOML",77,0)
 .S XMTEXT="PSBERR"
"RTN","PSBOML",78,0)
 .S PSBMG=$$GET^XPAR("DIV","PSB MG ADMIN ERROR",,"E"),PSBMG="G."_PSBMG
"RTN","PSBOML",79,0)
 .S XMY(PSBMG)=""
"RTN","PSBOML",80,0)
 .S PSBERR(1)="Order #"_$G(PSBIEN)_" given in BCMA no longer has"
"RTN","PSBOML",81,0)
 .S PSBERR(2)="a corresponding entry in the Pharmacy Patient (#55) file."
"RTN","PSBOML",82,0)
 .S PSBERR(3)="Please submit a remedy ticket for this issue."
"RTN","PSBOML",83,0)
 .D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY)
"RTN","PSBOML",84,0)
 .Q
"RTN","PSBOML",85,0)
  ;   ;[*70-1489]...end
"RTN","PSBOML",86,0)
 I PSBDFN="-1" W !,"Error: Inpatient Meds API Failure!" Q ""
"RTN","PSBOML",87,0)
 M PSBX=^PSB(53.79,PSBIEN)
"RTN","PSBOML",88,0)
 S Y=$P(PSBX(0),U,4)+.0000001
"RTN","PSBOML",89,0)
 ;*70 print location name per each clinic order
"RTN","PSBOML",90,0)
 S PSBMME=$$MME(+$G(PSBIEN)) I $G(PSBMME),($TR($P(PSBX(0),U,2)," ","")="") S $P(PSBX(0),U,2)="MME/UNKNOWN LOCATION"
"RTN","PSBOML",91,0)
 W:$P(PSBX(0),U,2)]"" !,?3,$P(PSBX(0),U,2)
"RTN","PSBOML",92,0)
 W !,$E(Y,4,5),"/",$E(Y,6,7),"/",$E(Y,2,3)
"RTN","PSBOML",93,0)
 W " ",$E(Y,9,10),":",$E(Y,11,12)
"RTN","PSBOML",94,0)
 S Y=$$GET1^DIQ(53.79,PSBIEN_",",.08)
"RTN","PSBOML",95,0)
 S Y=Y_" ["_$G(PSBDOSE)_$G(PSBIFR)_" "_$G(PSBSCH)   ;[*70-1489]
"RTN","PSBOML",96,0)
 S Y=Y_" "_$G(PSBMRAB)                              ;[*70-1489]
"RTN","PSBOML",97,0)
 I $P($G(^PSB(53.79,PSBIEN,.1)),U,8)]"" D   ;Inj or Derm site info *83
"RTN","PSBOML",98,0)
 .S Y=Y_" Derm Site: "_$P(^(.1),U,8)
"RTN","PSBOML",99,0)
 E  D
"RTN","PSBOML",100,0)
 .S:$P(^(.1),U,6)]"" Y=Y_" Inj Site: "_$P(^(.1),U,6)
"RTN","PSBOML",101,0)
 ;
"RTN","PSBOML",102,0)
 S Y=Y_"]"
"RTN","PSBOML",103,0)
 W $$WRAP^PSBO(16,32,Y)
"RTN","PSBOML",104,0)
 W ?50,$$GETINIT^PSBCSUTX(PSBIEN,"I") ;Get initials of who took action, PSB*3*72
"RTN","PSBOML",105,0)
 S X=$P(PSBX(0),U,9)
"RTN","PSBOML",106,0)
 S PSBASTUS=$S(X="G":"Given",X="H":"Held",X="R":"Refused",X="I":"Infusing",X="C":"Completed",X="S":"Stopped",X="N":"Not Given",X="RM":"Removed",X="M":"Missing dose",1:"Status Unknown")
"RTN","PSBOML",107,0)
 S Y=$P(PSBX(0),U,6)+.0000001
"RTN","PSBOML",108,0)
 S Y=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)_" "_$E(Y,9,10)_":"_$E(Y,11,12)
"RTN","PSBOML",109,0)
 S Y=Y_" "_$G(PSBASTUS)   ;[*70-1489]
"RTN","PSBOML",110,0)
 W $$WRAP^PSBO(57,15,Y)
"RTN","PSBOML",111,0)
 W:$G(^XTMP("PSB DEBUG",0)) "  (",PSBIEN,") "   ;debug write 53.79 ien
"RTN","PSBOML",112,0)
 ;
"RTN","PSBOML",113,0)
 D:PSBASTUS["Removed"      ;find Give associated with remove event *83
"RTN","PSBOML",114,0)
 .N RMEV,INI
"RTN","PSBOML",115,0)
 .S RMEV=$$FINDGIVE^PSBUTL(PSBIEN)
"RTN","PSBOML",116,0)
 .S Y=$P(RMEV,U)+.0000001     ;give dt/tm
"RTN","PSBOML",117,0)
 .S INI=$P(RMEV,U,2)          ;give by ini
"RTN","PSBOML",118,0)
 .S X=$P(RMEV,U,3)            ;give sts code
"RTN","PSBOML",119,0)
 .S PSBASTUS=$S(X="G":"Given",X="H":"Held",X="R":"Refused",X="I":"Infusing",X="C":"Completed",X="S":"Stopped",X="N":"Not Given",X="RM":"Removed",X="M":"Missing dose",1:"Status Unknown")
"RTN","PSBOML",120,0)
 .W !,?50,INI
"RTN","PSBOML",121,0)
 .S Y=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)_" "_$E(Y,9,10)_":"_$E(Y,11,12)
"RTN","PSBOML",122,0)
 .S Y=Y_" "_$G(PSBASTUS)
"RTN","PSBOML",123,0)
 .W $$WRAP^PSBO(57,15,Y)
"RTN","PSBOML",124,0)
 ;
"RTN","PSBOML",125,0)
 W:$P(PSBX(.1),U)["V" ?75,"Bag ID #",$$GET1^DIQ(53.79,PSBIEN,"IV UNIQUE ID")
"RTN","PSBOML",126,0)
 W:$P(PSBX(.1),U)["V" ?107,"NA",?115,"NA",?120,"NA"
"RTN","PSBOML",127,0)
 W !,$TR($$FMTE^XLFDT($G(PSBOST),2),"@"," ")_">"   ;[*70-1489]
"RTN","PSBOML",128,0)
 F PSBZ=.5,.6,.7 S PSBDHIT=0 F PSBY=0:0 S PSBY=$O(PSBX(PSBZ,PSBY)) Q:'PSBY  D
"RTN","PSBOML",129,0)
 .W:$X>75 !
"RTN","PSBOML",130,0)
 .S PSBDD=$S(PSBZ=.5:53.795,PSBZ=.6:53.796,1:53.797)
"RTN","PSBOML",131,0)
 .S Y=$$EXTERNAL^DILFD(PSBDD,.01,"",$P(PSBX(PSBZ,PSBY,0),U,1))
"RTN","PSBOML",132,0)
 .W $$WRAP^PSBO(75,28,Y)
"RTN","PSBOML",133,0)
 .I $P(PSBX(.1),U)["U" W ?105,$J($P(PSBX(PSBZ,PSBY,0),U,2),6,2),?113,$J($P(PSBX(PSBZ,PSBY,0),U,3),6,2) W $$WRAP^PSBO(120,12,$P(PSBX(PSBZ,PSBY,0),U,4)) S PSBDHIT=1
"RTN","PSBOML",134,0)
 .W:$P(PSBX(.1),U)["V"&($X+3+$L($P(PSBX(PSBZ,PSBY,0),U,3))>105) !?75
"RTN","PSBOML",135,0)
 .W:$P(PSBX(.1),U)["V" " - ",$P(PSBX(PSBZ,PSBY,0),U,2) ;Use units ordered field for IV's, PSB*3*72
"RTN","PSBOML",136,0)
 D:$P($G(^PSB(53.79,PSBIEN,.1)),U,2)="P"
"RTN","PSBOML",137,0)
 .W !?16,"PRN Reason: ",?30,$$GET1^DIQ(53.79,PSBIEN_",",.21)
"RTN","PSBOML",138,0)
 .W !?16,"PRN Effectiveness: "
"RTN","PSBOML",139,0)
 .I $P($G(^PSB(53.79,PSBIEN,.2)),U,2)="" W "<No PRN Effectiveness Entered>" Q
"RTN","PSBOML",140,0)
 .N PSBEIECMT S PSBEIECMT="" I $P($G(^PSB(53.79,PSBIEN,.2)),U,2)'="",$P(PSBRPT(.2),U,8)=0 S PSBEIECMT=$$PRNEFF^PSBO(PSBEIECMT,PSBIEN)
"RTN","PSBOML",141,0)
 .W $$WRAP^PSBO(20,100,$$GET1^DIQ(53.79,PSBIEN_",",.22)_PSBEIECMT)
"RTN","PSBOML",142,0)
 .W !?20,"Entered By: ",$$GET1^DIQ(53.79,PSBIEN_",",.23)
"RTN","PSBOML",143,0)
 .W " Date/Time: ",$$GET1^DIQ(53.79,PSBIEN_",",.24)
"RTN","PSBOML",144,0)
 .W " Minutes: ",$$GET1^DIQ(53.79,PSBIEN_",",.25)
"RTN","PSBOML",145,0)
 D:$P(PSBRPT(.2),U,8)
"RTN","PSBOML",146,0)
 .W !?16,"Comments: ",?30 I '$O(PSBX(.3,0)) W "<No Comments>"
"RTN","PSBOML",147,0)
 .F PSBY=0:0 S PSBY=$O(PSBX(.3,PSBY)) Q:'PSBY  D
"RTN","PSBOML",148,0)
 ..W:$X>30 !?30
"RTN","PSBOML",149,0)
 ..S Y=$P(PSBX(.3,PSBY,0),U,3)+.0000001
"RTN","PSBOML",150,0)
 ..W $E(Y,4,5),"/",$E(Y,6,7),"/",$E(Y,2,3)
"RTN","PSBOML",151,0)
 ..W " ",$E(Y,9,10),":",$E(Y,11,12)
"RTN","PSBOML",152,0)
 ..W ?46,$$GET1^DIQ(53.793,PSBY_","_PSBIEN_",","ENTERED BY:INITIAL")
"RTN","PSBOML",153,0)
 ..W $$WRAP^PSBO(52,70,$P(PSBX(.3,PSBY,0),U,1))
"RTN","PSBOML",154,0)
 .;*70 Witness new line after Comments section chosen
"RTN","PSBOML",155,0)
 .N WITBY,WITDT,WITCM,WITHR,WITFL
"RTN","PSBOML",156,0)
 .S WITBY=$$GET1^DIQ(53.79,PSBIEN_",",.29)
"RTN","PSBOML",157,0)
 .S WITDT=$$GET1^DIQ(53.79,PSBIEN_",",.28,"I")
"RTN","PSBOML",158,0)
 .S WITCM=$$GET1^DIQ(53.79,PSBIEN_",",.31)
"RTN","PSBOML",159,0)
 .S WITHR=$$GET1^DIQ(53.79,PSBIEN_",",.32)
"RTN","PSBOML",160,0)
 .S WITFL=$$GET1^DIQ(53.79,PSBIEN_",",.33)
"RTN","PSBOML",161,0)
 .I WITBY]"" D
"RTN","PSBOML",162,0)
 ..W !?16,"Witnessed by:",?30,WITBY," on "
"RTN","PSBOML",163,0)
 ..W $P($$FMTE^XLFDT($$GET1^DIQ(53.79,PSBIEN_",",.28,"I"),2),":",1,2)
"RTN","PSBOML",164,0)
 .I WITFL="NO",WITBY="" D
"RTN","PSBOML",165,0)
 ..W !?16,"Witnessed?:",?30,WITFL
"RTN","PSBOML",166,0)
 .W:WITCM]"" !,$$WRAP^PSBO(30,102,WITCM)
"RTN","PSBOML",167,0)
 .;
"RTN","PSBOML",168,0)
 .W !,$TR($$FMTE^XLFDT($G(PSBOSP),2),"@"," ")_"<"   ;[*70-1489]
"RTN","PSBOML",169,0)
 .;
"RTN","PSBOML",170,0)
 D:PSBAUDF
"RTN","PSBOML",171,0)
 .W !?16,"Audits: ",?30 I '$O(PSBX(.9,0)) W "<No Audits>" Q
"RTN","PSBOML",172,0)
 .F PSBY=0:0 S PSBY=$O(PSBX(.9,PSBY)) Q:'PSBY  D
"RTN","PSBOML",173,0)
 ..W:$X>30 !?30
"RTN","PSBOML",174,0)
 ..S Y=$P(PSBX(.9,PSBY,0),U,1)+.0000001
"RTN","PSBOML",175,0)
 ..W $E(Y,4,5),"/",$E(Y,6,7),"/",$E(Y,2,3)
"RTN","PSBOML",176,0)
 ..W " ",$E(Y,9,10),":",$E(Y,11,12)
"RTN","PSBOML",177,0)
 ..W ?46,$$GET1^DIQ(53.799,PSBY_","_PSBIEN_",","USER:INITIAL")
"RTN","PSBOML",178,0)
 ..;*83 special case to alter the how reports Action Status Give from
"RTN","PSBOML",179,0)
 ..;the word "deleted" to "changed" only when a Remove occurs
"RTN","PSBOML",180,0)
 ..;(vs an Undo Give) that triggered the deleted.  "deleted" is a key
"RTN","PSBOML",181,0)
 ..;word that other routines test for, fixed via reporting only.
"RTN","PSBOML",182,0)
 ..N ALIN,NXALIN
"RTN","PSBOML",183,0)
 ..S ALIN=$P(PSBX(.9,PSBY,0),U,3)
"RTN","PSBOML",184,0)
 ..S NXALIN=$O(PSBX(.9,PSBY))
"RTN","PSBOML",185,0)
 ..S NXALIN=$S(NXALIN="":"",1:$P(PSBX(.9,NXALIN,0),U,3))
"RTN","PSBOML",186,0)
 ..;if next action is RM then report Give changed instead of deleted.
"RTN","PSBOML",187,0)
 ..I ALIN["ACTION STATUS",ALIN["deleted",NXALIN["REMOVED" D
"RTN","PSBOML",188,0)
 ...S XX=$P($P(PSBX(.9,PSBY,0),U,3),"deleted"),XX=XX_"changed."
"RTN","PSBOML",189,0)
 ...W $$WRAP^PSBO(52,70,XX)
"RTN","PSBOML",190,0)
 ..E  D
"RTN","PSBOML",191,0)
 ...W $$WRAP^PSBO(52,70,$P(PSBX(.9,PSBY,0),U,3))
"RTN","PSBOML",192,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBOML",193,0)
 Q ""
"RTN","PSBOML",194,0)
 ;
"RTN","PSBOML",195,0)
WDHDR(PSBWARD) ;
"RTN","PSBOML",196,0)
 N PSBCLINORD S PSBCLINORD=2              ;2=both order type hdr   *70
"RTN","PSBOML",197,0)
 S PSBHDR(3)="",PSBHDR(4)="Ward Location: "
"RTN","PSBOML",198,0)
 D WARD^PSBOHDR(PSBWARD,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOML",199,0)
 W $$SUB()
"RTN","PSBOML",200,0)
 Q ""
"RTN","PSBOML",201,0)
 ;
"RTN","PSBOML",202,0)
PTHDR() ;
"RTN","PSBOML",203,0)
 N PSBCLINORD S PSBCLINORD=2              ;2=both order type hdr   *70
"RTN","PSBOML",204,0)
 S:$G(PSBSRCHL)]"" PSBHDR(3)="",PSBHDR(4)="Ward Location: "
"RTN","PSBOML",205,0)
 D PT^PSBOHDR(DFN,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOML",206,0)
 W $$SUB()
"RTN","PSBOML",207,0)
 Q ""
"RTN","PSBOML",208,0)
 ;
"RTN","PSBOML",209,0)
SUB() ; Med Log Sub Header
"RTN","PSBOML",210,0)
 W:$X>1 !
"RTN","PSBOML",211,0)
 W "Location",!
"RTN","PSBOML",212,0)
 W "Activity Date",?16,"Orderable Item",?50,"Action",?57,"Action"
"RTN","PSBOML",213,0)
 W !,"Start Date>",?16,"[Dose/Sched/Route/Body Site]",?50,"By"
"RTN","PSBOML",214,0)
 W ?57,"Date/Time",?75,"Drug/Additive/Solution",?105," U/Ord"
"RTN","PSBOML",215,0)
 W ?113," U/Gvn",?120,"Unit",!,"Stop Date<"
"RTN","PSBOML",216,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBOML",217,0)
 Q ""
"RTN","PSBOML",218,0)
 ;
"RTN","PSBOML",219,0)
MME(PSBIEN) ; Administered via Manual Med Entry?
"RTN","PSBOML",220,0)
 N MME,CMMT,CMMTND S MME=0
"RTN","PSBOML",221,0)
 S CMMT="" F  S CMMT=$O(^PSB(53.79,+PSBIEN,.3,CMMT)) Q:CMMT=""!$G(MME)  D
"RTN","PSBOML",222,0)
 .S CMMTND=$G(^PSB(53.79,+PSBIEN,.3,CMMT,0)) I CMMTND["Entry created with 'Manual Medication Entry'" S MME=1
"RTN","PSBOML",223,0)
 Q $S($G(MME):1,1:0)
"RTN","PSBOMM")
0^26^B187931933^B145771681
"RTN","PSBOMM",1,0)
PSBOMM ;BIRMINGHAM/EFC-MISSED MEDS ;03/06/16 3:06pm
"RTN","PSBOMM",2,0)
 ;;3.0;BAR CODE MED ADMIN;**26,32,56,52,58,70,76,83**;Mar 2004;Build 89
"RTN","PSBOMM",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBOMM",4,0)
 ;
"RTN","PSBOMM",5,0)
 ; Reference/IA
"RTN","PSBOMM",6,0)
 ; ^DPT/10035
"RTN","PSBOMM",7,0)
 ; EN^PSJBCMA/2828
"RTN","PSBOMM",8,0)
 ; EN^PSJBCMA2/2830
"RTN","PSBOMM",9,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBOMM",10,0)
 ;
"RTN","PSBOMM",11,0)
 ;*58 - insert Verified by Column with nurse initials else "***"
"RTN","PSBOMM",12,0)
 ;*70 - add test for PSBCLINORD flag and filter accordingly
"RTN","PSBOMM",13,0)
 ;*83 - new tag to find MRR type meds needing removal
"RTN","PSBOMM",14,0)
 ;
"RTN","PSBOMM",15,0)
EN ;
"RTN","PSBOMM",16,0)
 N PSBSTRT,PSBSTOP,DFN,PSBODATE,PSBFLAG,PSBCNT,PSBEDIT,PSBFUTR,RMV,PSBSTART,PSBSTXP,PSBS,PSBSRT
"RTN","PSBOMM",17,0)
 S PSBSTART=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,7),PSBSTOP=$P(PSBRPT(.1),U,8)+$P(PSBRPT(.1),U,9)
"RTN","PSBOMM",18,0)
 D DEFLT^PSBOMM2
"RTN","PSBOMM",19,0)
 K PSBOCRIT,PSBACRIT,PSBS
"RTN","PSBOMM",20,0)
 S PSBOCRIT="^A^H^O^R" ;PSB*3*56 Adds the On Call Status to the Missed Meds Report, PSB*3*76 adds Renewed Status
"RTN","PSBOMM",21,0)
 S:$P(PSBFUTR,U,8) PSBOCRIT=PSBOCRIT_"^D^DE" S:$P(PSBFUTR,U,7) PSBOCRIT=PSBOCRIT_"^E"
"RTN","PSBOMM",22,0)
 S PSBACRIT="MG"
"RTN","PSBOMM",23,0)
 S:$P(PSBFUTR,U,17) PSBACRIT=PSBACRIT_"H" S:$P(PSBFUTR,U,18) PSBACRIT=PSBACRIT_"R"
"RTN","PSBOMM",24,0)
 S PSBINCC=0 S:$P(PSBRPT(.2),U,8) PSBINCC=1
"RTN","PSBOMM",25,0)
 K ^TMP("PSJ",$J),^TMP("PSB",$J),^TMP("PSB1",$J)
"RTN","PSBOMM",26,0)
 S PSBSTRT=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,7)-.0000001
"RTN","PSBOMM",27,0)
 S PSBSRT=$P(PSBRPT(.1),U)   ;init sort var here, needed for Removes
"RTN","PSBOMM",28,0)
 ;call Removes to add meds needing removal                         *83
"RTN","PSBOMM",29,0)
 F DFN=0:0 S DFN=$O(^TMP("PSBO",$J,DFN)) Q:'DFN  D EN1,REMOVES^PSBUTL(DFN,PSBSRT)
"RTN","PSBOMM",30,0)
 D PRINT
"RTN","PSBOMM",31,0)
 K ^TMP("PSJ",$J),^TMP("PSB",$J),^TMP("PSBO",$J),PSBS
"RTN","PSBOMM",32,0)
 Q
"RTN","PSBOMM",33,0)
EN1 ;
"RTN","PSBOMM",34,0)
 N PSBGBL,PSBHDR,PSBX,PSBDFN,PSBDT,PSBEVDT,PSBH
"RTN","PSBOMM",35,0)
 K ^TMP("PSJ",$J) S PSBEVDT=PSBSTRT
"RTN","PSBOMM",36,0)
 D EN^PSJBCMA(DFN,PSBSTRT)
"RTN","PSBOMM",37,0)
 ;Filter in/out Clinic Orders               *70
"RTN","PSBOMM",38,0)
 D:PSBCLINORD
"RTN","PSBOMM",39,0)
 . I $D(PSBRPT(2)) D FILTERCO^PSBO Q
"RTN","PSBOMM",40,0)
 . D INCLUDCO^PSBVDLU1
"RTN","PSBOMM",41,0)
 D:'PSBCLINORD REMOVECO^PSBVDLU1
"RTN","PSBOMM",42,0)
 ;
"RTN","PSBOMM",43,0)
 Q:^TMP("PSJ",$J,1,0)=-1
"RTN","PSBOMM",44,0)
 S PSBX=""
"RTN","PSBOMM",45,0)
 F  S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:PSBX=""  D
"RTN","PSBOMM",46,0)
 .Q:^TMP("PSJ",$J,PSBX,0)=-1
"RTN","PSBOMM",47,0)
 .D NOW^%DTC
"RTN","PSBOMM",48,0)
 .D CLEAN^PSBVT
"RTN","PSBOMM",49,0)
 .D PSJ^PSBVT(PSBX)
"RTN","PSBOMM",50,0)
 .Q:PSBIVT="A"
"RTN","PSBOMM",51,0)
 .Q:PSBIVT="H"
"RTN","PSBOMM",52,0)
 .I PSBIVT["S",PSBISYR'=1 Q
"RTN","PSBOMM",53,0)
 .I PSBIVT["C",PSBCHEMT'="P",PSBISYR'=1 Q
"RTN","PSBOMM",54,0)
 .I PSBIVT["C",PSBCHEMT="A" Q
"RTN","PSBOMM",55,0)
 .Q:PSBONX["P"
"RTN","PSBOMM",56,0)
 .Q:PSBOSP<PSBSTART
"RTN","PSBOMM",57,0)
 .I %>PSBOSP,PSBOSTS'="D",PSBOSTS'="DE",PSBOSTS'="H" S PSBOSTS="E"
"RTN","PSBOMM",58,0)
 .;
"RTN","PSBOMM",59,0)
 .;process Continuous schedules
"RTN","PSBOMM",60,0)
 .I PSBSCHT="C" D  Q
"RTN","PSBOMM",61,0)
 ..S (PSBYES,PSBODD)=0
"RTN","PSBOMM",62,0)
 ..S PSBDOW="SU^MO^TU^WE^TH^FR^SA" F I=1:1:7 I $P(PSBDOW,"^",I)=$E(PSBSCH,1,2) S PSBYES=1
"RTN","PSBOMM",63,0)
 ..I PSBYES,PSBADST="" Q
"RTN","PSBOMM",64,0)
 ..F I=1:1 Q:$P(PSBSCH,"-",I)=""  I $P(PSBSCH,"-",I)?2N!($P(PSBSCH,"-",I)?4N) S PSBYES=1
"RTN","PSBOMM",65,0)
 ..S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBOMM",66,0)
 ..I PSBFREQ="O" S PSBYES=1,PSBFREQ=1440
"RTN","PSBOMM",67,0)
 ..I 'PSBYES,PSBADST="",PSBFREQ<1 Q
"RTN","PSBOMM",68,0)
 ..I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBOMM",69,0)
 ..I PSBODD,PSBADST'="" Q
"RTN","PSBOMM",70,0)
 ..Q:PSBOCRIT'[PSBOSTS
"RTN","PSBOMM",71,0)
 ..Q:PSBNGF
"RTN","PSBOMM",72,0)
 ..Q:PSBOSTS="N"
"RTN","PSBOMM",73,0)
 ..Q:PSBSM
"RTN","PSBOMM",74,0)
 ..S PSBS(DFN,PSBONX,$S(PSBOSTS="A":"Active",PSBOSTS="H":"On Hold",PSBOSTS="D":"DC'd",PSBOSTS="DE":"DC'd (Edit)",PSBOSTS="E":"Expired",PSBOSTS="O":"On Call",PSBOSTS="R":"Renewed",1:"*Unknown*"))="" ;PSB*3*76 adds Renewed as status
"RTN","PSBOMM",75,0)
 ..S PSBSTXP(PSBONX,DFN,$$DTFMT^PSBOMM2(PSBOSP))="" ;DFN added to PSBSTXP array in PSB*3*52
"RTN","PSBOMM",76,0)
 ..S PSBCADM=0
"RTN","PSBOMM",77,0)
 ..I PSBADST="" D  Q:$G(PSBADST)=""  S PSBCADM=1
"RTN","PSBOMM",78,0)
 ...S X=PSBOST D H^%DTC S X1=((%H*24)*60)+(%T/60)
"RTN","PSBOMM",79,0)
 ...S X=PSBSTRT,X3=0 D H^%DTC S X2=((%H*24)*60)+(%T/60)
"RTN","PSBOMM",80,0)
 ...I X2'<X1 S X3=X2-X1 S PSBOST=$$FMADD^XLFDT(PSBSTRT,,,(-1*(X3#PSBFREQ)))
"RTN","PSBOMM",81,0)
 ...K PSBADST S PSBOST2=PSBOST,PSBDT2=PSBSTRT
"RTN","PSBOMM",82,0)
 ...F XZ=0:1 S PSBADST(XZ,PSBDT2)=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST2,PSBFREQ,PSBDT2) D  Q:PSBDT2>PSBSTOP
"RTN","PSBOMM",83,0)
 ....I ($L(PSBADST(XZ,PSBDT2),"-")>$L($G(PSBADST),"-"))!($G(PSBADST)="") S PSBADST=PSBADST(XZ,PSBDT2)
"RTN","PSBOMM",84,0)
 ....S Z=PSBDT2\1,J=$P(PSBADST(XZ,PSBDT2),"-",($L(PSBADST(XZ,PSBDT2),"-"))) S:J]"" PSBOST2=Z_"."_J
"RTN","PSBOMM",85,0)
 ....S PSBDT2=($$FMADD^XLFDT(Z,1))+.2400
"RTN","PSBOMM",86,0)
 ....S PSBDT2=$S($G(FLG):(PSBSTOP\1)+.2401,PSBDT2>PSBOSP:PSBOSP,1:PSBDT2) K FLG I PSBDT2=PSBOSP S FLG=1
"RTN","PSBOMM",87,0)
 ..S Z=PSBADST I Z]"" K ^TMP("PSB",$J,"GETADMIN") S ^TMP("PSB",$J,"GETADMIN",0)=Z
"RTN","PSBOMM",88,0)
 ..F Y=1:1:$L(Z,"-") D
"RTN","PSBOMM",89,0)
 ...Q:($P(Z,"-",Y)'?2N)&($P(Z,"-",Y)'?4N)
"RTN","PSBOMM",90,0)
 ..K PSBOACTL,^TMP("PSB1",$J) D EN^PSJBCMA2(DFN,PSBONX,1) I ^TMP("PSJ2",$J,0)'=1 M PSBOACTL=^TMP("PSJ2",$J) K ^TMP("PSJ2",$J)
"RTN","PSBOMM",91,0)
 ..;
"RTN","PSBOMM",92,0)
 ..;process Not ODD sched
"RTN","PSBOMM",93,0)
 ..I 'PSBODD D
"RTN","PSBOMM",94,0)
 ...F XX=0:1 Q:'$D(^TMP("PSB",$J,"GETADMIN",XX))  S (PSBADST,Z)=$G(^TMP("PSB",$J,"GETADMIN",XX)) D
"RTN","PSBOMM",95,0)
 ....D MISSED^PSBOMM2(Z,.PSBEDIT,PSBSTRT)
"RTN","PSBOMM",96,0)
 ..;
"RTN","PSBOMM",97,0)
 ..; process ODD sched
"RTN","PSBOMM",98,0)
 ..I PSBODD F XX=0:1 Q:'$D(PSBADST(XX))  S XXX=$O(PSBADST(XX,"")) S (PSBADST,Z)=PSBADST(XX,XXX) D
"RTN","PSBOMM",99,0)
 ...I Z]"" D MISSED^PSBOMM2(Z,.PSBEDIT,XXX)
"RTN","PSBOMM",100,0)
 .;
"RTN","PSBOMM",101,0)
 .;process One time schedules
"RTN","PSBOMM",102,0)
 .K PSBHDDT,PSBUNHD,^TMP("PSB1",$J)
"RTN","PSBOMM",103,0)
 .I PSBSCHT="O" D  Q
"RTN","PSBOMM",104,0)
 ..Q:PSBOSTS="N"
"RTN","PSBOMM",105,0)
 ..Q:PSBNGF
"RTN","PSBOMM",106,0)
 ..Q:PSBSM
"RTN","PSBOMM",107,0)
 ..Q:(PSBOSP=PSBOST)&(PSBOCRIT'["E")
"RTN","PSBOMM",108,0)
 ..Q:PSBOST'<PSBSTOP
"RTN","PSBOMM",109,0)
 ..S PSBDT="*** ONE-TIME ***"
"RTN","PSBOMM",110,0)
 ..S (PSBSTXP(PSBONX,DFN,$$DTFMT^PSBOMM2(PSBOSP)),PSBSTXT(PSBONX,DFN,$$DTFMT^PSBOMM2(PSBOST)))="" ;DFN added to PSBSTXP array in PSB*3*52
"RTN","PSBOMM",111,0)
 ..S (PSBG,X,Y,PSBXSTS)="" K PSBEXST
"RTN","PSBOMM",112,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBOMM",113,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  D
"RTN","PSBOMM",114,0)
 ....S PSBXSTS=$P(^PSB(53.79,Y,0),U,9)
"RTN","PSBOMM",115,0)
 ....I $P(^PSB(53.79,Y,.1),U)=PSBONX,PSBXSTS'="N",PSBXSTS'="M" S PSBG=1,PSBG(PSBONX,DFN,Y)="",(X,Y)=0 ;DFN added to PSBG array in PSB*3*52
"RTN","PSBOMM",116,0)
 ..I PSBG D PARTG1^PSBOMM2($O(PSBG(PSBONX,DFN,""))) ;DFN added to PSBG array in PSB*3*52
"RTN","PSBOMM",117,0)
 ..D NOW^%DTC
"RTN","PSBOMM",118,0)
 ..Q:(PSBOCRIT'[PSBOSTS)
"RTN","PSBOMM",119,0)
 ..S PSBS(DFN,PSBONX,$S(PSBOSTS="A":"Active",PSBOSTS="H":"On Hold",PSBOSTS="D":"DC'd",PSBOSTS="DE":"DC'd (Edit)",PSBOSTS="E":"Expired",PSBOSTS="O":"On Call",PSBOSTS="R":"Renewed",1:" * ERROR * "))="" ;PSB*3*76 adds Renewed as status
"RTN","PSBOMM",120,0)
 ..D:'PSBG!(PSBACRIT[$G(PSBXSTS,1))
"RTN","PSBOMM",121,0)
 ...S VAR=""
"RTN","PSBOMM",122,0)
 ...K ^TMP("PSJ2",$J),^TMP("PSB1",$J),PSBOACTL D EN^PSJBCMA2(DFN,PSBONX,1) I ^TMP("PSJ2",$J,0)'=1 D
"RTN","PSBOMM",123,0)
 ....M PSBOACTL=^TMP("PSJ2",$J)
"RTN","PSBOMM",124,0)
 ....D UDONE^PSBOMM2
"RTN","PSBOMM",125,0)
 ....I PSBFLAG=1 S VAR="(On Hold) "_$$DTFMT^PSBOMM2(PSBHDDT)
"RTN","PSBOMM",126,0)
 ....I PSBFLAG=2 S VAR="(On Hold) "_$$DTFMT^PSBOMM2(PSBHDDT)_"  (Off Hold) "_$$DTFMT^PSBOMM2(PSBUNHD)
"RTN","PSBOMM",127,0)
 ...I '$G(PSBEXST,0)!(PSBXSTS="M") S $P(^TMP("PSB",$J,DFN,"*** ONE-TIME ***",PSBOITX,PSBONX),U,1,4)=VAR
"RTN","PSBOMM",128,0)
 ...I $G(PSBEXST,0) D
"RTN","PSBOMM",129,0)
 ....S VAR1=$G(^TMP("PSB",$J,DFN,"*** ONE-TIME ***","* "_PSBOITX,PSBONX)) I VAR1]"" S $P(VAR1,U,1,4)=VAR_VAR1
"RTN","PSBOMM",130,0)
 ...K PSBHDDT,PSBUNHD,^TMP("PSB1",$J),PSBCNT
"RTN","PSBOMM",131,0)
 K PSBOACTL
"RTN","PSBOMM",132,0)
 Q
"RTN","PSBOMM",133,0)
PRINT ;
"RTN","PSBOMM",134,0)
 N PSBHDR,PSBDT,PSBOITX,PSBONX,DFN,PSBVNI,PSBSORT,PSBSRCHL
"RTN","PSBOMM",135,0)
 K PSBNPG
"RTN","PSBOMM",136,0)
 S Y=$S($P(PSBRPT(.1),U,8)]"":$P(PSBRPT(.1),U,8),1:$P(PSBRPT(.1),U,6))
"RTN","PSBOMM",137,0)
 S PSBHDR(1)="MISSED MEDICATIONS REPORT for "_$$FMTE^XLFDT($P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,7))_" to "_$$FMTE^XLFDT(Y+$P(PSBRPT(.1),U,9))
"RTN","PSBOMM",138,0)
 S PSBHDR(2)="Order Status(es): --"
"RTN","PSBOMM",139,0)
 F Y=5,8,7 I $P(PSBFUTR,U,Y) S $P(PSBHDR(2),": ",2)=$P(PSBHDR(2),": ",2)_$S(PSBHDR(2)["--":"",1:"/ ")_$P("^^^^Active^^Expired^DC'd^^^^^^^^^^",U,Y)_" " S PSBHDR(2)=$TR(PSBHDR(2),"-","")
"RTN","PSBOMM",140,0)
 S PSBHDR(3)="Admin Status(es): --"
"RTN","PSBOMM",141,0)
 F Y=16,17,18 I $P(PSBFUTR,U,Y) S $P(PSBHDR(3),": ",2)=$P(PSBHDR(3),": ",2)_$S(PSBHDR(3)["--":"",1:"/ ")_$P("^^^^^^^^^^^^^^^Missing Dose^Held^Refused",U,Y)_" " S PSBHDR(3)=$TR(PSBHDR(3),"-","")
"RTN","PSBOMM",142,0)
 I PSBINCC S PSBHDR(4)="Include Comments/Reasons"
"RTN","PSBOMM",143,0)
 ;check Clinic or Nurs Unit search list                *70
"RTN","PSBOMM",144,0)
 S PSBSRCHL=$$SRCHLIST^PSBOHDR()
"RTN","PSBOMM",145,0)
 D:PSBSRCHL]""
"RTN","PSBOMM",146,0)
 .S PSBHDR(5)=""
"RTN","PSBOMM",147,0)
 .S:$P(PSBRPT(4),U,2)="C" PSBHDR(6)="Clinic Search List: "
"RTN","PSBOMM",148,0)
 .S:$P(PSBRPT(4),U,2)="I" PSBHDR(6)="Ward Location: "
"RTN","PSBOMM",149,0)
 ;
"RTN","PSBOMM",150,0)
 ;* * *  Print by Patient  * * *
"RTN","PSBOMM",151,0)
 D:PSBSRT="P"
"RTN","PSBOMM",152,0)
 .S DFN=$P(PSBRPT(.1),U,2)
"RTN","PSBOMM",153,0)
 .;
"RTN","PSBOMM",154,0)
 .W $$PTHDR()
"RTN","PSBOMM",155,0)
 .I $G(PSBEDIT) W !?7,"*Administration Times have been edited*"
"RTN","PSBOMM",156,0)
 .I $O(^TMP("PSB",$J,DFN,""))="" W !,"No Missed Medications Found",$$PTFTR^PSBOHDR() Q
"RTN","PSBOMM",157,0)
 .S PSBDT=""
"RTN","PSBOMM",158,0)
 .F  S PSBDT=$O(^TMP("PSB",$J,DFN,PSBDT)) Q:PSBDT=""  D
"RTN","PSBOMM",159,0)
 ..W !
"RTN","PSBOMM",160,0)
 ..S PSBOITX=""
"RTN","PSBOMM",161,0)
 ..F  S PSBOITX=$O(^TMP("PSB",$J,DFN,PSBDT,PSBOITX)) Q:PSBOITX=""  D
"RTN","PSBOMM",162,0)
 ...S PSBONX=""
"RTN","PSBOMM",163,0)
 ...F  S PSBONX=$O(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX)) Q:PSBONX=""  D
"RTN","PSBOMM",164,0)
 ....;if previously held/refused lines printed, need line feed *58
"RTN","PSBOMM",165,0)
 ....;*83 except after a remove line
"RTN","PSBOMM",166,0)
 ....I ($G(VAR1)]"")!($G(VAR2)]"")!($G(VAR3)]"") W:'$G(RMV) ! K RMV
"RTN","PSBOMM",167,0)
 ....K VAR1,VAR2,VAR3,SP I $Y>(IOSL-9) W $$PTFTR^PSBOHDR(),$$PTHDR()
"RTN","PSBOMM",168,0)
 ....S VAR1=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX))
"RTN","PSBOMM",169,0)
 ....S VAR2=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"X"))
"RTN","PSBOMM",170,0)
 ....S VAR3=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,.3))
"RTN","PSBOMM",171,0)
 ....D PSJ1^PSBVT(DFN,PSBONX) S PSBVNI=$S(PSBVNI]"":PSBVNI,1:"***")
"RTN","PSBOMM",172,0)
 ....;     print remove line 1st           *83
"RTN","PSBOMM",173,0)
 ....S RMV=0
"RTN","PSBOMM",174,0)
 ....D:$D(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"RM"))  ;RM exists
"RTN","PSBOMM",175,0)
 .....W !,$O(PSBS(DFN,PSBONX,"")),?15,PSBVNI,?21,$S(+PSBDT>0:$$DTFMT^PSBOMM2(PSBDT),1:PSBDT),?38,PSBOITX,?85,$O(PSBSTXP(PSBONX,DFN,"")),?103,PSBCLORD
"RTN","PSBOMM",176,0)
 .....W !,?41,"(Remove)" S RMV=1
"RTN","PSBOMM",177,0)
 ....I PSBDT["ONE-TIME" D  Q
"RTN","PSBOMM",178,0)
 .....W !
"RTN","PSBOMM",179,0)
 .....W !,$O(PSBS(DFN,PSBONX,"")),?15,PSBVNI,?21,PSBDT,?38,PSBOITX,?103,PSBCLORD,!                       ;*70
"RTN","PSBOMM",180,0)
 .....I VAR1]"" W ?41,VAR1 S SP=1
"RTN","PSBOMM",181,0)
 .....I VAR2]"" W:$G(SP) ! W ?41,VAR2
"RTN","PSBOMM",182,0)
 .....I VAR3]"" W !,$$WRAP^PSBO(41,79,VAR3)
"RTN","PSBOMM",183,0)
 .....W !?3,"Start Date/Time:  ",?22,$O(PSBSTXT(PSBONX,DFN,"")) ;DFN added to PSBSTXT array in PSB*3*52
"RTN","PSBOMM",184,0)
 .....W !?3,"Stop Date/Time:  ",?22,$O(PSBSTXP(PSBONX,DFN,"")) ;DFN added to PSBSTXP array in PSB*3*52
"RTN","PSBOMM",185,0)
 ....;
"RTN","PSBOMM",186,0)
 ....;print Give if exists for a RM just printed, or no RM printed
"RTN","PSBOMM",187,0)
 ....I 'RMV!(RMV&$D(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX))=11) D
"RTN","PSBOMM",188,0)
 .....W !,$O(PSBS(DFN,PSBONX,"")),?15,PSBVNI,?21,$S(+PSBDT>0:$$DTFMT^PSBOMM2(PSBDT),1:PSBDT),?38,PSBOITX,?85,$O(PSBSTXP(PSBONX,DFN,"")) ;DFN added to PSBSTXP array in PSB*3*52
"RTN","PSBOMM",189,0)
 .....W ?103,PSBCLORD,!                     ;*70 clinic name
"RTN","PSBOMM",190,0)
 ....I VAR1]"" W ?41,VAR1 S SP=1
"RTN","PSBOMM",191,0)
 ....I VAR2]"" W:$G(SP) ! W ?41,VAR2
"RTN","PSBOMM",192,0)
 ....I VAR3]"" W !,$$WRAP^PSBO(41,79,VAR3)
"RTN","PSBOMM",193,0)
 .W $$PTFTR^PSBOHDR()
"RTN","PSBOMM",194,0)
 .Q
"RTN","PSBOMM",195,0)
 ;
"RTN","PSBOMM",196,0)
 ;* * *  Print by Ward  * * *
"RTN","PSBOMM",197,0)
 D:PSBSRT="W"
"RTN","PSBOMM",198,0)
 .S PSBWARD=$P(PSBRPT(.1),U,3)
"RTN","PSBOMM",199,0)
 .W $$WRDHDR()
"RTN","PSBOMM",200,0)
 .I '$O(^TMP("PSB",$J,0)) W !,"No Missed Medications Found" Q
"RTN","PSBOMM",201,0)
 .S PSBSORT=$P(PSBRPT(.1),U,5)
"RTN","PSBOMM",202,0)
 .F DFN=0:0 S DFN=$O(^TMP("PSB",$J,DFN)) Q:'DFN  D
"RTN","PSBOMM",203,0)
 ..S PSBDX=$S(PSBSORT="P":$P(^DPT(DFN,0),U),1:$G(^DPT(DFN,.1))_" "_$G(^(.101)))
"RTN","PSBOMM",204,0)
 ..S:PSBDX="" PSBDX=$P(^DPT(DFN,0),U)
"RTN","PSBOMM",205,0)
 ..S ^TMP("PSB",$J,"B",PSBDX,DFN)=""
"RTN","PSBOMM",206,0)
 .S PSBDX=""
"RTN","PSBOMM",207,0)
 .F  S PSBDX=$O(^TMP("PSB",$J,"B",PSBDX)) Q:PSBDX=""  D
"RTN","PSBOMM",208,0)
 ..F DFN=0:0 S DFN=$O(^TMP("PSB",$J,"B",PSBDX,DFN)) Q:'DFN  D
"RTN","PSBOMM",209,0)
 ...W !
"RTN","PSBOMM",210,0)
 ...S PSBDT=""
"RTN","PSBOMM",211,0)
 ...F  S PSBDT=$O(^TMP("PSB",$J,DFN,PSBDT)) Q:PSBDT=""  D
"RTN","PSBOMM",212,0)
 ....W !
"RTN","PSBOMM",213,0)
 ....K VAR1,VAR2,VAR3    ;reset held/refused to prevent line feed
"RTN","PSBOMM",214,0)
 ....W:PSBDT["ONE-TIME" !
"RTN","PSBOMM",215,0)
 ....S PSBOITX=""
"RTN","PSBOMM",216,0)
 ....F  S PSBOITX=$O(^TMP("PSB",$J,DFN,PSBDT,PSBOITX)) Q:PSBOITX=""  D
"RTN","PSBOMM",217,0)
 .....S PSBONX=""
"RTN","PSBOMM",218,0)
 .....F  S PSBONX=$O(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX)) Q:PSBONX=""  D
"RTN","PSBOMM",219,0)
 ......;if previously held/refused lines printed, need line feed *58
"RTN","PSBOMM",220,0)
 ......I ($G(VAR1)]"")!($G(VAR2)]"")!($G(VAR3)]"") W:'$G(RMV) ! K RMV
"RTN","PSBOMM",221,0)
 ......K VAR1,VAR2,VAR3,SP I $Y>(IOSL-9) W $$WRDHDR()
"RTN","PSBOMM",222,0)
 ......D PSJ1^PSBVT(DFN,PSBONX)
"RTN","PSBOMM",223,0)
 ......S PSBVNI=$S(PSBVNI]"":PSBVNI,1:"***")
"RTN","PSBOMM",224,0)
 ......;     print remove line 1st           *83
"RTN","PSBOMM",225,0)
 ......S RMV=0
"RTN","PSBOMM",226,0)
 ......D:$D(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"RM"))
"RTN","PSBOMM",227,0)
 .......W !,$O(PSBS(DFN,PSBONX,"")),?15,PSBVNI,?22,$G(^DPT(DFN,.101),"**"),?42,$P(^DPT(DFN,0),U)," (",$E($P(^(0),U,9),6,9),")"
"RTN","PSBOMM",228,0)
 .......W ?74,$S(+PSBDT>0:$$DTFMT^PSBOMM2(PSBDT),1:PSBDT),?92,PSBOITX S SP=1
"RTN","PSBOMM",229,0)
 .......W !,?95,"(Remove)" S RMV=1
"RTN","PSBOMM",230,0)
 ......;print Give if exists for a RM just printed, or no RM printed
"RTN","PSBOMM",231,0)
 ......I 'RMV!(RMV&$D(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX))=11) D
"RTN","PSBOMM",232,0)
 .......W !,$O(PSBS(DFN,PSBONX,"")),?15,PSBVNI,?22,$G(^DPT(DFN,.101),"**"),?42,$P(^DPT(DFN,0),U)," (",$E($P(^(0),U,9),6,9),")"
"RTN","PSBOMM",233,0)
 .......W:PSBDT'["ONE-TIME" ?74,$S(+PSBDT>0:$$DTFMT^PSBOMM2(PSBDT),1:PSBDT),?92,PSBOITX S SP=1
"RTN","PSBOMM",234,0)
 ......S VAR1=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX))
"RTN","PSBOMM",235,0)
 ......S VAR2=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"X"))
"RTN","PSBOMM",236,0)
 ......S VAR3=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,.3))
"RTN","PSBOMM",237,0)
 ......I PSBDT["ONE-TIME" D  Q
"RTN","PSBOMM",238,0)
 .......W !,PSBDT,?37,PSBOITX S SP=1
"RTN","PSBOMM",239,0)
 .......I VAR1]"" W !,?37,$P(VAR1,U,1) S SP=1
"RTN","PSBOMM",240,0)
 .......I VAR2]"" W:$G(SP) ! W ?37,VAR2
"RTN","PSBOMM",241,0)
 .......I VAR3]"" W !,$$WRAP^PSBO(37,102,VAR3)
"RTN","PSBOMM",242,0)
 .......W !?3,"Start Date/Time:  ",?21,$O(PSBSTXT(PSBONX,DFN,"")) ;DFN added to PSBSTXT array in PSB*3*52
"RTN","PSBOMM",243,0)
 .......W !?3,"Stop Date/Time:  ",?21,$O(PSBSTXP(PSBONX,DFN,"")) ;DFN added to PSBSTXP array in PSB*3*52
"RTN","PSBOMM",244,0)
 .......W !
"RTN","PSBOMM",245,0)
 ......I VAR1]"" W !,?57,VAR1 S SP=1
"RTN","PSBOMM",246,0)
 ......I VAR2]"" W:$G(SP) ! W ?57,VAR2
"RTN","PSBOMM",247,0)
 ......I VAR3]"" W !,$$WRAP^PSBO(57,82,VAR3)
"RTN","PSBOMM",248,0)
 ;
"RTN","PSBOMM",249,0)
 ;* * *  Print by Clinic  * * *
"RTN","PSBOMM",250,0)
 D:PSBSRT="C"
"RTN","PSBOMM",251,0)
 .W $$CLNHDR()
"RTN","PSBOMM",252,0)
 .I '$O(^TMP("PSB",$J,0)) W !,"No Missed Medications Found" Q
"RTN","PSBOMM",253,0)
 .S PSBSORT=$P(PSBRPT(.1),U,5)
"RTN","PSBOMM",254,0)
 .F DFN=0:0 S DFN=$O(^TMP("PSB",$J,DFN)) Q:'DFN  D
"RTN","PSBOMM",255,0)
 ..S PSBDX=$S(PSBSORT="P":$P(^DPT(DFN,0),U),1:$G(^DPT(DFN,.1))_" "_$G(^(.101)))
"RTN","PSBOMM",256,0)
 ..S:PSBDX="" PSBDX=$P(^DPT(DFN,0),U)
"RTN","PSBOMM",257,0)
 ..S ^TMP("PSB",$J,"B",PSBDX,DFN)=""
"RTN","PSBOMM",258,0)
 .S PSBDX=""
"RTN","PSBOMM",259,0)
 .F  S PSBDX=$O(^TMP("PSB",$J,"B",PSBDX)) Q:PSBDX=""  D
"RTN","PSBOMM",260,0)
 ..F DFN=0:0 S DFN=$O(^TMP("PSB",$J,"B",PSBDX,DFN)) Q:'DFN  D
"RTN","PSBOMM",261,0)
 ...W !
"RTN","PSBOMM",262,0)
 ...S PSBDT=""
"RTN","PSBOMM",263,0)
 ...F  S PSBDT=$O(^TMP("PSB",$J,DFN,PSBDT)) Q:PSBDT=""  D
"RTN","PSBOMM",264,0)
 ....W !
"RTN","PSBOMM",265,0)
 ....K VAR1,VAR2,VAR3    ;reset held/refused to prevent line feed
"RTN","PSBOMM",266,0)
 ....W:PSBDT["ONE-TIME" !
"RTN","PSBOMM",267,0)
 ....S PSBOITX=""
"RTN","PSBOMM",268,0)
 ....F  S PSBOITX=$O(^TMP("PSB",$J,DFN,PSBDT,PSBOITX)) Q:PSBOITX=""  D
"RTN","PSBOMM",269,0)
 .....S PSBONX=""
"RTN","PSBOMM",270,0)
 .....F  S PSBONX=$O(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX)) Q:PSBONX=""  D
"RTN","PSBOMM",271,0)
 ......;if previously held/refused lines printed, need line feed *58
"RTN","PSBOMM",272,0)
 ......I ($G(VAR1)]"")!($G(VAR2)]"")!($G(VAR3)]"") W:'$G(RMV) ! K RMV
"RTN","PSBOMM",273,0)
 ......K VAR1,VAR2,VAR3,SP I $Y>(IOSL-9) W $$CLNHDR()
"RTN","PSBOMM",274,0)
 ......D PSJ1^PSBVT(DFN,PSBONX)
"RTN","PSBOMM",275,0)
 ......S PSBVNI=$S(PSBVNI]"":PSBVNI,1:"***")
"RTN","PSBOMM",276,0)
 ......;     print remove line 1st           *83
"RTN","PSBOMM",277,0)
 ......S RMV=0
"RTN","PSBOMM",278,0)
 ......D:$D(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"RM"))
"RTN","PSBOMM",279,0)
 .......W !,$O(PSBS(DFN,PSBONX,"")),?11,PSBVNI,?17,$P(^DPT(DFN,0),U)
"RTN","PSBOMM",280,0)
 .......W ?49,$S(+PSBDT>0:$$DTFMT^PSBOMM2(PSBDT),1:PSBDT),?66,PSBOITX
"RTN","PSBOMM",281,0)
 .......W ?103,PSBCLORD
"RTN","PSBOMM",282,0)
 .......W !,?69,"(Remove)" S RMV=1
"RTN","PSBOMM",283,0)
 ......;print Give if exists for a RM just printed, or no RM printed
"RTN","PSBOMM",284,0)
 ......I 'RMV!(RMV&$D(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX))=11) D
"RTN","PSBOMM",285,0)
 .......W !,$O(PSBS(DFN,PSBONX,"")),?11,PSBVNI,?17,$P(^DPT(DFN,0),U)
"RTN","PSBOMM",286,0)
 .......W:PSBDT'["ONE-TIME" ?49,$S(+PSBDT>0:$$DTFMT^PSBOMM2(PSBDT),1:PSBDT),?66,PSBOITX
"RTN","PSBOMM",287,0)
 .......W:PSBDT'["ONE-TIME" ?103,PSBCLORD
"RTN","PSBOMM",288,0)
 ......S VAR1=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX))
"RTN","PSBOMM",289,0)
 ......S VAR2=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"X"))
"RTN","PSBOMM",290,0)
 ......S VAR3=$G(^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,.3))
"RTN","PSBOMM",291,0)
 ......I PSBDT["ONE-TIME" D  Q
"RTN","PSBOMM",292,0)
 .......W !,PSBDT,?37,PSBOITX S SP=1 W:PSBCLINORD ?103,PSBCLORD
"RTN","PSBOMM",293,0)
 .......I VAR1]"" W !,?37,$P(VAR1,U,1) S SP=1
"RTN","PSBOMM",294,0)
 .......I VAR2]"" W:$G(SP) ! W ?37,VAR2
"RTN","PSBOMM",295,0)
 .......I VAR3]"" W !,$$WRAP^PSBO(37,102,VAR3)
"RTN","PSBOMM",296,0)
 .......W !?3,"Start Date/Time:  ",?21,$O(PSBSTXT(PSBONX,DFN,"")) ;DFN added to PSBSTXT array in PSB*3*52
"RTN","PSBOMM",297,0)
 .......W !?3,"Stop Date/Time:  ",?21,$O(PSBSTXP(PSBONX,DFN,"")) ;DFN added to PSBSTXP array in PSB*3*52
"RTN","PSBOMM",298,0)
 .......W !
"RTN","PSBOMM",299,0)
 ......;detail line additional info
"RTN","PSBOMM",300,0)
 ......S SP=1
"RTN","PSBOMM",301,0)
 ......I VAR1]"" W !,?57,VAR1 S SP=1
"RTN","PSBOMM",302,0)
 ......I VAR2]"" W:$G(SP) ! W ?57,VAR2
"RTN","PSBOMM",303,0)
 ......I VAR3]"" W !,$$WRAP^PSBO(57,82,VAR3)
"RTN","PSBOMM",304,0)
 Q
"RTN","PSBOMM",305,0)
WRDHDR() ;
"RTN","PSBOMM",306,0)
 D WARD^PSBOHDR(PSBWRD,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOMM",307,0)
 W !,"Order Status",?15,"Ver",?22,"Room-Bed",?42,"Patient",?74,"Missed Date/Time",?92,"Medication"
"RTN","PSBOMM",308,0)
 D LN1^PSBOMM2
"RTN","PSBOMM",309,0)
 Q ""
"RTN","PSBOMM",310,0)
CLNHDR() ;
"RTN","PSBOMM",311,0)
 D CLINIC^PSBOHDR(.PSBRPT,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOMM",312,0)
 W !,"Order Sts",?11,"Ver",?17,"Patient",?49,"Missed Date/Time",?66,"Medication",?103,"Location"
"RTN","PSBOMM",313,0)
 D LN1^PSBOMM2
"RTN","PSBOMM",314,0)
 Q ""
"RTN","PSBOMM",315,0)
PTHDR() ;
"RTN","PSBOMM",316,0)
 D PT^PSBOHDR(DFN,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOMM",317,0)
 W !,"Order Status",?15,"Ver",?21,"Missed Date/Time",?38,"Medication",?85,"Order Stop Date"
"RTN","PSBOMM",318,0)
 W:PSBCLINORD ?103,"Location"
"RTN","PSBOMM",319,0)
 D LN1^PSBOMM2
"RTN","PSBOMM",320,0)
 Q ""
"RTN","PSBOMT")
0^47^B104162476^B93970205
"RTN","PSBOMT",1,0)
PSBOMT ;BIRMINGHAM/TEJ-BCMA MEDICATION THERAPY REPORT ;03/06/16 3:06pm
"RTN","PSBOMT",2,0)
 ;;3.0;BAR CODE MED ADMIN;**32,50,70,72,83**;Mar 2004;Build 89
"RTN","PSBOMT",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBOMT",4,0)
 ;
"RTN","PSBOMT",5,0)
 ; Reference/IA
"RTN","PSBOMT",6,0)
 ; File 50.7/2880
"RTN","PSBOMT",7,0)
 ; File 52.6/436
"RTN","PSBOMT",8,0)
 ; File 52.7/437
"RTN","PSBOMT",9,0)
 ; File 200/10060
"RTN","PSBOMT",10,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBOMT",11,0)
 ; IEN^PSN50P65/4543
"RTN","PSBOMT",12,0)
 ; DRGIEN^PSS50P7/4662
"RTN","PSBOMT",13,0)
 ; VAC^PSS50/4533
"RTN","PSBOMT",14,0)
 ; ^PSDRUG(/221 
"RTN","PSBOMT",15,0)
 ;
"RTN","PSBOMT",16,0)
 ;*70 - reset PSBCLINORD = 2 to signify combined orders report
"RTN","PSBOMT",17,0)
 ;*83 - Add MRR meds remove times to report.
"RTN","PSBOMT",18,0)
 ;
"RTN","PSBOMT",19,0)
EN ;
"RTN","PSBOMT",20,0)
 N PSBHDR,PSBORDS,PSBORD,PSBOIP
"RTN","PSBOMT",21,0)
 N TMP
"RTN","PSBOMT",22,0)
 K TMP("PSBOIS",$J),TMP("VA CLASS",$J),TMP("PSBADDS",$J),TMP("PSBSOLS",$J),PSBLGD,PSBOIL,PSBDDL,PSBSOLL,PSBADDL
"RTN","PSBOMT",23,0)
 S PSBCLSS=0,PSBCFLG=0
"RTN","PSBOMT",24,0)
 S PSBXDFN=$P(PSBRPT(.1),U,2)
"RTN","PSBOMT",25,0)
 S PSBSTRT=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,7),PSBSTOP=$P(PSBRPT(.1),U,8)+$P(PSBRPT(.1),U,9)
"RTN","PSBOMT",26,0)
 K PSBOCRIT F Y=1:1:4 I $P(PSBRPT(.2),U,Y) S PSBOCRIT=$G(PSBOCRIT,"")_$P("C^P^OC^O",U,Y)_"^"
"RTN","PSBOMT",27,0)
 D NOW^%DTC S (Y,PSBNOWX)=% D DD^%DT S PSBDTTM=$E(Y,1,18)
"RTN","PSBOMT",28,0)
 S:+PSBSTRT'>0 PSBSTRT=$$FMADD^XLFDT(X,-1)
"RTN","PSBOMT",29,0)
 S:+PSBSTOP'>0 PSBSTOP=$P(%,".")
"RTN","PSBOMT",30,0)
 I $D(PSBRPT(.2)) I $P(PSBRPT(.2),U,8) S PSBCFLG=1
"RTN","PSBOMT",31,0)
 I $D(PSBRPT(2)) F XD=$O(PSBRPT(2,0)):1:$O(PSBRPT(2,"B"),-1) S PSBRPT(2,XD,0)=$TR(PSBRPT(2,XD,0),"~",U) D:$P(PSBRPT(2,XD,0),U)="MT"
"RTN","PSBOMT",32,0)
 .I $P(PSBRPT(2,XD,0),U,2)="OIT" D  Q
"RTN","PSBOMT",33,0)
 ..S PSBSRCHL="ORDERABLE ITEM SEARCH LIST:",PSBOIL(+$P(PSBRPT(2,XD,0),U,3))=""
"RTN","PSBOMT",34,0)
 ..S PSB=$P(PSBRPT(2,XD,0),U,3) F X=1:1:$L(PSB,",") Q:$P(PSB,",",X)=""  S (TMP("PSBOIS",$J,$P(PSB,",",X)),PSBOIP("OIP",$P(PSB,",",X)))=""
"RTN","PSBOMT",35,0)
 .I $P(PSBRPT(2,XD,0),U,2)="ADD" D  Q
"RTN","PSBOMT",36,0)
 ..S PSBSRCHL="IV MEDICATION SEARCH LIST:"
"RTN","PSBOMT",37,0)
 ..I $D(^PSDRUG("A526",$P(PSBRPT(2,XD,0),U,3))) S X2=$O(^PSDRUG("A526",$P(PSBRPT(2,XD,0),U,3),"")) S PSBADDL(X2)="",TMP("PSBOIS",$J,$$OFROMA(X2))=""
"RTN","PSBOMT",38,0)
 .I $P(PSBRPT(2,XD,0),U,2)="SOL" D  Q
"RTN","PSBOMT",39,0)
 ..S PSBSRCHL="IV MEDICATION SEARCH LIST:"
"RTN","PSBOMT",40,0)
 ..I $D(^PSDRUG("A527",$P(PSBRPT(2,XD,0),U,3))) S X2=$O(^PSDRUG("A527",$P(PSBRPT(2,XD,0),U,3),"")) S PSBSOLL(X2)="",TMP("PSBOIS",$J,$$OFROMS(X2))=""
"RTN","PSBOMT",41,0)
 .I $P(PSBRPT(2,XD,0),U,2)="DD" D  K PSBDRGS Q
"RTN","PSBOMT",42,0)
 ..S PSBSRCHL="DISPENSED DRUG SEARCH LIST:",PSBDDL($P(PSBRPT(2,XD,0),U,3))=""
"RTN","PSBOMT",43,0)
 ..K PSBDRGS S PSBDRGS="" D OILST^PSBRPCMO(.PSBDRGS,$P(PSBRPT(2,XD,0),U,3),"UD")
"RTN","PSBOMT",44,0)
 ..F X2=PSBDRGS(0):1:$O(PSBDRGS(""),-1) I +PSBDRGS(1)'<0 S TMP("PSBOIS",$J,$P(PSBDRGS(X2),U,4))=""
"RTN","PSBOMT",45,0)
 .I $P(PSBRPT(2,XD,0),U,2)="VAC" D
"RTN","PSBOMT",46,0)
 ..S PSBSRCHL="VA DRUG CLASS SEARCH LIST:"
"RTN","PSBOMT",47,0)
 ..S PSBCLS=$P(PSBRPT(2,XD,0),U,3) D GETCLSS(PSBCLS) K PSBDDRG("VAC") M TMP("VA CLASS",$J,PSBCLS,"DDRG")=PSBDDRG K PSBDDRG
"RTN","PSBOMT",48,0)
 ..S PSBCLSS=1
"RTN","PSBOMT",49,0)
 M PSBOIP("OIP")=TMP("PSBOIS",$J)
"RTN","PSBOMT",50,0)
 D OUT(PSBXDFN,PSBSTRT,PSBSTOP)
"RTN","PSBOMT",51,0)
 Q
"RTN","PSBOMT",52,0)
OUT(PSBXDFN,PSBSTRT,PSBSTOP) ;
"RTN","PSBOMT",53,0)
 D:PSBCLSS GETOIS  ; POSSBLE CLASS ITEMS VIA AVAIL ORDERS
"RTN","PSBOMT",54,0)
 D GETADSO^PSBOMT1 ; ALL ADDS AND SOLS
"RTN","PSBOMT",55,0)
 D FINDIENS^PSBOMT1 ; FIND ALL MED LOG ENTRS
"RTN","PSBOMT",56,0)
 D PREOUT ;   WRIT TO GLOBL
"RTN","PSBOMT",57,0)
 D WRITEOT
"RTN","PSBOMT",58,0)
 D CLEANSUM^PSBOMT1
"RTN","PSBOMT",59,0)
 D CLEANALL^PSBOMT1
"RTN","PSBOMT",60,0)
 Q
"RTN","PSBOMT",61,0)
GETOIS ;
"RTN","PSBOMT",62,0)
 K ^TMP("PSJ",$J),PSBTMP
"RTN","PSBOMT",63,0)
 D EN^PSJBCMA(PSBXDFN,PSBSTRT)
"RTN","PSBOMT",64,0)
 Q:^TMP("PSJ",$J,1,0)<0
"RTN","PSBOMT",65,0)
 M PSBTMP=^TMP("PSJ",$J) K ^TMP("PSJ",$J)
"RTN","PSBOMT",66,0)
 S X=0 F  S X=$O(PSBTMP(X)) Q:+X=0  D
"RTN","PSBOMT",67,0)
 .Q:$G(PSBOCRIT,"")'[$P(PSBTMP(X,1),U,2)_"^"
"RTN","PSBOMT",68,0)
 .S PSBORDN=$P(PSBTMP(X,0),U,3) S PSBORDS(PSBORDN)=""
"RTN","PSBOMT",69,0)
 .I $D(PSBTMP(X,700)) D  Q
"RTN","PSBOMT",70,0)
 ..F XX=1:1:PSBTMP(X,700,0) D
"RTN","PSBOMT",71,0)
 ...S PSBCLS="" F  S PSBCLS=$O(TMP("VA CLASS",$J,PSBCLS)) Q:+PSBCLS=0  D
"RTN","PSBOMT",72,0)
 ....I '$D(TMP("VA CLASS",$J,PSBCLS,"DDRG",$P(PSBTMP(X,700,XX,0),U))) Q
"RTN","PSBOMT",73,0)
 ....S PSBORDS(PSBORDN,"DD",$P(PSBTMP(X,700,XX,0),U))=""
"RTN","PSBOMT",74,0)
 ....S PSBORDS(PSBORDN,"OIP",$P(PSBTMP(X,3),U))=""
"RTN","PSBOMT",75,0)
 ..M PSBOIP("OIP")=PSBORDS(PSBORDN,"OIP")
"RTN","PSBOMT",76,0)
 .I $D(PSBTMP(X,850)) M PSBORDS(PSBORDN,"ADD")=PSBTMP(X,850) D
"RTN","PSBOMT",77,0)
 ..F XX=1:1:PSBORDS(PSBORDN,"ADD",0) S PSBORDS(PSBORDN,"OIP",$$OFROMA($P(PSBORDS(PSBORDN,"ADD",XX,0),U)))=""
"RTN","PSBOMT",78,0)
 ..M PSBOIP("OIP")=PSBORDS(PSBORDN,"OIP")
"RTN","PSBOMT",79,0)
 .I $D(PSBTMP(X,950)) M PSBORDS(PSBORDN,"SOL")=PSBTMP(X,950) D
"RTN","PSBOMT",80,0)
 ..F XX=1:1:PSBORDS(PSBORDN,"SOL",0) S PSBORDS(PSBORDN,"OIP",$$OFROMS($P(PSBORDS(PSBORDN,"SOL",XX,0),U)))=""
"RTN","PSBOMT",81,0)
 ..M PSBOIP("OIP")=PSBORDS(PSBORDN,"OIP")
"RTN","PSBOMT",82,0)
 K PSBTMP
"RTN","PSBOMT",83,0)
 M TMP("PSBOIS",$J)=PSBOIP("OIP")
"RTN","PSBOMT",84,0)
 Q
"RTN","PSBOMT",85,0)
OFROMA(PSBADD) ;OITEM FROM AN ADDITIVE
"RTN","PSBOMT",86,0)
 S X1=$$GET1^DIQ(52.6,PSBADD_",",15,"I")
"RTN","PSBOMT",87,0)
 I PSBCLSS D
"RTN","PSBOMT",88,0)
 .S X2=$$GETDRN(X1)
"RTN","PSBOMT",89,0)
 .S PSBCLS="" K X3 F  Q:$D(X3)  S PSBCLS=$O(TMP("VA CLASS",$J,PSBCLS)) Q:+PSBCLS=0  D
"RTN","PSBOMT",90,0)
 ..I $D(TMP("VA CLASS",$J,PSBCLS,"DDRG",X2)) S X3=X1
"RTN","PSBOMT",91,0)
 .I '$D(X3) S X3=0
"RTN","PSBOMT",92,0)
 Q $G(X3,X1)
"RTN","PSBOMT",93,0)
OFROMS(PSBSOL) ;OITEM FROM A SOLUTION
"RTN","PSBOMT",94,0)
 S X1=$$GET1^DIQ(52.7,PSBSOL_",",9,"I")
"RTN","PSBOMT",95,0)
 I PSBCLSS D
"RTN","PSBOMT",96,0)
 .S X2=$$GETDRN(X1)
"RTN","PSBOMT",97,0)
 .S PSBCLS="" K X3 F  Q:$D(X3)  S PSBCLS=$O(TMP("VA CLASS",$J,PSBCLS)) Q:+PSBCLS=0  D
"RTN","PSBOMT",98,0)
 ..I $D(TMP("VA CLASS",$J,PSBCLS,"DDRG",X2)) S X3=X1
"RTN","PSBOMT",99,0)
 .I '$D(X3) S X3=0
"RTN","PSBOMT",100,0)
 Q $G(X3,X1)
"RTN","PSBOMT",101,0)
PREOUT ;
"RTN","PSBOMT",102,0)
 K PSBUNK S XDT="" F  S XDT=$O(TMP("PSBIENS",$J,XDT),-1) Q:XDT=""  S XIEN="",XIEN=$O(TMP("PSBIENS",$J,XDT,XIEN)) D
"RTN","PSBOMT",103,0)
 .Q:$$NONSTS(PSBXDFN,XIEN)
"RTN","PSBOMT",104,0)
 .S PSBIEN=XIEN
"RTN","PSBOMT",105,0)
 .S PSBIENS=PSBIEN_","
"RTN","PSBOMT",106,0)
 .D OUTPUT
"RTN","PSBOMT",107,0)
 Q
"RTN","PSBOMT",108,0)
OUTPUT ;
"RTN","PSBOMT",109,0)
 S PSBSPC=$J("",80)
"RTN","PSBOMT",110,0)
 S W=$E($$GET1^DIQ(53.79,PSBIENS,.02)_PSBSPC,1,20)_" "
"RTN","PSBOMT",111,0)
 S W=W_$S($P(^PSB(53.79,PSBIEN,0),U,9)="":"?? ",1:$E($P(^PSB(53.79,PSBIEN,0),U,9)_"  ",1,2)_" ")
"RTN","PSBOMT",112,0)
 S:$P(^PSB(53.79,PSBIEN,0),U,9)="" PSBUNK=1
"RTN","PSBOMT",113,0)
 S W=W_$E($P($G(^PSB(53.79,PSBIEN,.1)),U,2)_PSBSPC,1,2)_"  "
"RTN","PSBOMT",114,0)
 S W=W_$E($E($$GET1^DIQ(53.79,PSBIENS,.06),1,18)_PSBSPC,1,21)_" "
"RTN","PSBOMT",115,0)
 S W=W_$E($$GETINIT^PSBCSUTX(PSBIEN,"I")_PSBSPC,1,10)_" ",PSBLGD("INITIALS",$$GETINIT^PSBCSUTX(PSBIEN,"II"))="" ;Get IEN and initials of who took action, PSB*3*72
"RTN","PSBOMT",116,0)
 ;Inj or Derm site info *83
"RTN","PSBOMT",117,0)
 S W=W_$S($P($G(^PSB(53.79,PSBIEN,.1)),U,8)]"":$P(^(.1),U,8),1:$P(^(.1),U,6))
"RTN","PSBOMT",118,0)
 ;
"RTN","PSBOMT",119,0)
 D ADD(W)
"RTN","PSBOMT",120,0)
 S W=$J("",56)
"RTN","PSBOMT",121,0)
 ;
"RTN","PSBOMT",122,0)
 ;find Give associated with remove event *83
"RTN","PSBOMT",123,0)
 D:$P(^PSB(53.79,PSBIEN,0),U,9)="RM"
"RTN","PSBOMT",124,0)
 .N RMEV,INI
"RTN","PSBOMT",125,0)
 .S RMEV=$$FINDGIVE^PSBUTL(PSBIEN)
"RTN","PSBOMT",126,0)
 .S Y=$P(RMEV,U)+.0000001     ;give dt/tm
"RTN","PSBOMT",127,0)
 .S INI=$P(RMEV,U,2)          ;give by ini
"RTN","PSBOMT",128,0)
 .S X=$P(RMEV,U,3)            ;give sts code
"RTN","PSBOMT",129,0)
 .S W=$E(PSBSPC,1,21)_$E(X_" ",1,2)_" "
"RTN","PSBOMT",130,0)
 .S W=W_$E($P($G(^PSB(53.79,PSBIEN,.1)),U,2)_PSBSPC,1,2)_"  "
"RTN","PSBOMT",131,0)
 .S W=W_$$UP^XLFSTR($E($$FMTE^XLFDT(Y),1,18))_"    "_$E(INI_PSBSPC,1,6)
"RTN","PSBOMT",132,0)
 ;
"RTN","PSBOMT",133,0)
 K PSBV
"RTN","PSBOMT",134,0)
 F PSBNODE=.5,.6,.7 D
"RTN","PSBOMT",135,0)
 .S PSBDD=$S(PSBNODE=.5:53.795,PSBNODE=.6:53.796,1:53.797)
"RTN","PSBOMT",136,0)
 .F PSBY=0:0 S PSBY=$O(^PSB(53.79,PSBIEN,PSBNODE,PSBY)) Q:'PSBY  D
"RTN","PSBOMT",137,0)
 ..I $$GET1^DIQ(53.79,PSBIENS,.11)["V" S PSBV=1
"RTN","PSBOMT",138,0)
 ..;add W possible remove string to wrapmeds  *83
"RTN","PSBOMT",139,0)
 ..D WRAPMEDS(W,$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.01),$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.03),$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.02),$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.04))
"RTN","PSBOMT",140,0)
 D PRNEFF
"RTN","PSBOMT",141,0)
 I PSBCFLG=1 D COMNTS
"RTN","PSBOMT",142,0)
 D ADD("")
"RTN","PSBOMT",143,0)
 Q
"RTN","PSBOMT",144,0)
PRNEFF ;Add PRN Effectiveness to Medication theropy Report  - PSB*3*50
"RTN","PSBOMT",145,0)
 N PSBPRN,PSBEIECMT,PSBLINE1,PSBLINE2
"RTN","PSBOMT",146,0)
 S PSBEIECMT=""
"RTN","PSBOMT",147,0)
 I $P($G(PSBRPT(.2)),U,8)=0,$D(^PSB(53.79,PSBIEN,.2)) S PSBEIECMT=$$PRNEFF^PSBO(PSBEIECMT,PSBIEN)
"RTN","PSBOMT",148,0)
 I $D(^PSB(53.79,PSBIEN,.2)) D
"RTN","PSBOMT",149,0)
 .D ADD("")
"RTN","PSBOMT",150,0)
 .D ADD($J("",35)_"PRN Effectiveness: "_$$MAKELINE^PSBOMT1("-",78))
"RTN","PSBOMT",151,0)
 .I $P(^PSB(53.79,PSBIEN,.2),U,2)'="" D
"RTN","PSBOMT",152,0)
 ..S PSBPRN=$P(^PSB(53.79,PSBIEN,.2),U,2)
"RTN","PSBOMT",153,0)
 .I $P(^PSB(53.79,PSBIEN,.2),U,2)="" S PSBPRN="<No PRN Effectiveness Entered>"
"RTN","PSBOMT",154,0)
 .S PSBLINE1=$E(PSBPRN_PSBEIECMT,1,75),PSBLINE2=$E(PSBPRN_PSBEIECMT,76,245) D WRAP(PSBLINE2,PSBLINE1,PSBIEN)
"RTN","PSBOMT",155,0)
 Q 
"RTN","PSBOMT",156,0)
COMNTS ;
"RTN","PSBOMT",157,0)
 N Z,CNT
"RTN","PSBOMT",158,0)
 S Z="",CNT=0
"RTN","PSBOMT",159,0)
 I $D(^PSB(53.79,PSBIEN,.3,0)) D
"RTN","PSBOMT",160,0)
 .D ADD("")
"RTN","PSBOMT",161,0)
 .D ADD($J("",45)_"Comments: "_$$MAKELINE^PSBOMT1("-",78))
"RTN","PSBOMT",162,0)
 .S XT="" F  S XT=$O(^PSB(53.79,PSBIEN,.3,XT)) Q:XT=""  I XT'=0  D
"RTN","PSBOMT",163,0)
 ..D:CNT=1 ADD("")
"RTN","PSBOMT",164,0)
 ..S Y=$P(^PSB(53.79,PSBIEN,.3,XT,0),"^",3) D DD^%DT S XBR=Y
"RTN","PSBOMT",165,0)
 ..S Z=XBR_"   "_$P(^VA(200,$P(^PSB(53.79,PSBIEN,.3,XT,0),"^",2),0),"^",2)
"RTN","PSBOMT",166,0)
 ..D WRAP($P(^PSB(53.79,PSBIEN,.3,XT,0),"^",1),Z,PSBIEN)
"RTN","PSBOMT",167,0)
 ..S CNT=1
"RTN","PSBOMT",168,0)
 ..S PSBLGD("INITIALS",$$GET1^DIQ(53.793,XT_","_PSBIEN_",",.02,"I"))="" ;Get name for legend for those who entered comments
"RTN","PSBOMT",169,0)
 .D ADD($J("",55)_$$MAKELINE^PSBOMT1("-",78))
"RTN","PSBOMT",170,0)
 Q
"RTN","PSBOMT",171,0)
WRAPMEDS(W,MED,UG,UO,UOA) ;insert parm W (possible RM string) to print on line 1 *83
"RTN","PSBOMT",172,0)
 ;THIS WILL CREATE UPTO 3 LINES
"RTN","PSBOMT",173,0)
 S MED=$E(MED_$J("",40),1,40)
"RTN","PSBOMT",174,0)
 N UGWRAP,ORWRAP
"RTN","PSBOMT",175,0)
 S (CNTX,UOA1,UOA16,UOA31)=""
"RTN","PSBOMT",176,0)
 I +$G(UG)?1"."1.N S UG=0_+UG
"RTN","PSBOMT",177,0)
 I +$G(UO)?1"."1.N S UO=0_+UO
"RTN","PSBOMT",178,0)
 I $G(PSBV,0) S UO="NA"
"RTN","PSBOMT",179,0)
 F CNT=1:15:45  D
"RTN","PSBOMT",180,0)
 .D PARSE^PSBOMT1(UOA,CNT)
"RTN","PSBOMT",181,0)
 .S UGWRAP=$E(UG,CNT,(CNT+7)),UOWRAP=$E(UO,CNT,(CNT+7))
"RTN","PSBOMT",182,0)
 .I CNT=1 D ADD(W_MED_" "_$$PAD^PSBOMT1(UOWRAP,8)_" "_$$PAD^PSBOMT1(UGWRAP,8)_"  "_$$PAD^PSBOMT1(UOA1,15))  ;*83
"RTN","PSBOMT",183,0)
 .I (CNT>1),($L(UGWRAP)>0!$L(@("UOA"_CNT))>0) D ADD($J("",94)_$$PAD^PSBOMT1(UOWRAP,8)_" "_$$PAD^PSBOMT1(UGWRAP,8)_"  "_$$PAD^PSBOMT1(@("UOA"_CNT),15))
"RTN","PSBOMT",184,0)
 Q
"RTN","PSBOMT",185,0)
HEADA ;
"RTN","PSBOMT",186,0)
 W !
"RTN","PSBOMT",187,0)
 W "Location",?21,"St Sch Administration Date",?50,"By",?61,"Body Site",?96,"Units",?104,"Units",?113,"Units of"  ;*83
"RTN","PSBOMT",188,0)
 W !,?56,"Medication & Dosage",?96,"Ordered",?104,"Given",?113,"Administration"
"RTN","PSBOMT",189,0)
 W !
"RTN","PSBOMT",190,0)
 W $$MAKELINE^PSBOMT1("-",132)
"RTN","PSBOMT",191,0)
 Q
"RTN","PSBOMT",192,0)
NONSTS(PSBX,PSBY) ;
"RTN","PSBOMT",193,0)
 D CLEAN^PSBVT,PSJ1^PSBVT(PSBX,$$GET1^DIQ(53.79,PSBY_",","ORDER REFERENCE NUMBER","I"))
"RTN","PSBOMT",194,0)
 Q PSBOCRIT'[PSBSCHT_"^"
"RTN","PSBOMT",195,0)
WRITEOT ;
"RTN","PSBOMT",196,0)
 D HDR^PSBOMT1
"RTN","PSBOMT",197,0)
 D MEDS
"RTN","PSBOMT",198,0)
 N PSBCLINORD S PSBCLINORD=2             ;2 = both order types   *70
"RTN","PSBOMT",199,0)
 D PT^PSBOHDR(PSBXDFN,.PSBHDR),HEADA
"RTN","PSBOMT",200,0)
 I '$D(TMP("PSBIENS",$J)) D ADD("<<<< NO HISTORY FOUND FOR THIS TIME FRAME >>>>")
"RTN","PSBOMT",201,0)
 S EX="" F  S EX=$O(^TMP("PSB",$J,EX)) Q:EX=""  D
"RTN","PSBOMT",202,0)
 .I $Y>(IOSL-5) D
"RTN","PSBOMT",203,0)
 ..W $$PTFTR^PSBOHDR()
"RTN","PSBOMT",204,0)
 ..D PT^PSBOHDR(PSBXDFN,.PSBHDR),HEADA
"RTN","PSBOMT",205,0)
 .W !,$G(^TMP("PSB",$J,EX))
"RTN","PSBOMT",206,0)
 D:$D(TMP("PSBIENS",$J)) LEGEND^PSBOMT1
"RTN","PSBOMT",207,0)
 D FTR^PSBOMT1
"RTN","PSBOMT",208,0)
 Q
"RTN","PSBOMT",209,0)
MEDS ;
"RTN","PSBOMT",210,0)
 N MED,XA,XB
"RTN","PSBOMT",211,0)
 S MED="",XB=$O(PSBHDR(""),-1)+1
"RTN","PSBOMT",212,0)
 S PSBHDR(XB)=PSBSRCHL
"RTN","PSBOMT",213,0)
 I PSBCLSS S XA=0 K PSBGOT F  S XA=$O(TMP("VA CLASS",$J,XA)) Q:+XA=0  D
"RTN","PSBOMT",214,0)
 .K ^TMP($J,"PSBLIST") D IEN^PSN50P65(XA,"??","PSBLIST")
"RTN","PSBOMT",215,0)
 .I ^TMP($J,"PSBLIST",0)>0 S MED=^TMP($J,"PSBLIST",XA,1) Q:$D(PSBGOT(MED))  K ^TMP($J,"PSBLIST")
"RTN","PSBOMT",216,0)
 .I $L(PSBHDR(XB)_" "_$G(MED," * NO DATA FOUND * "))+3>IOM D  Q
"RTN","PSBOMT",217,0)
 ..S XB=XB+1,PSBHDR(XB)="                         / "_MED S PSBGOT(MED)=""
"RTN","PSBOMT",218,0)
 .S PSBHDR(XB)=PSBHDR(XB)_$S(($L(PSBHDR(XB),":")=2)&($P(PSBHDR(XB),":",2)=""):" ",1:" / ")_MED,PSBGOT(MED)=""
"RTN","PSBOMT",219,0)
 I $D(PSBOIL) S XA="" K PSBGOT F  S XA=$O(PSBOIL(XA)) Q:XA=""  D
"RTN","PSBOMT",220,0)
 .S MED=$$GET1^DIQ(50.7,XA,.01) Q:$D(PSBGOT(MED))  S PSBGOT(MED)=""
"RTN","PSBOMT",221,0)
 .I $L(PSBHDR(XB)_" / "_MED)+3>IOM D  Q
"RTN","PSBOMT",222,0)
 ..S XB=XB+1,PSBHDR(XB)="                         / "_MED
"RTN","PSBOMT",223,0)
 .S PSBHDR(XB)=PSBHDR(XB)_$S(($L(PSBHDR(XB),":")=2)&($P(PSBHDR(XB),":",2)=""):" ",1:" / ")_MED
"RTN","PSBOMT",224,0)
 I $D(PSBADDL) S XA="" K PSBGOT F  S XA=$O(PSBADDL(XA)) Q:XA=""  D
"RTN","PSBOMT",225,0)
 .S MED=$$GET1^DIQ(52.6,XA,.01) Q:$D(PSBGOT(MED))  S PSBGOT(MED)=""
"RTN","PSBOMT",226,0)
 .I $L(PSBHDR(XB)_" / "_MED)+3>IOM D  Q
"RTN","PSBOMT",227,0)
 ..S XB=XB+1,PSBHDR(XB)="                         / "_MED
"RTN","PSBOMT",228,0)
 .S PSBHDR(XB)=PSBHDR(XB)_$S(($L(PSBHDR(XB),":")=2)&($P(PSBHDR(XB),":",2)=""):" ",1:" / ")_MED
"RTN","PSBOMT",229,0)
 I $D(PSBSOLL) S XA="" K PSBGOT F  S XA=$O(PSBSOLL(XA)) Q:XA=""  D
"RTN","PSBOMT",230,0)
 .S MED=$$GET1^DIQ(52.7,XA,.01) Q:$D(PSBGOT(MED))  S PSBGOT(MED)=""
"RTN","PSBOMT",231,0)
 .I $L(PSBHDR(XB)_" / "_MED)+3>IOM D  Q
"RTN","PSBOMT",232,0)
 ..S XB=XB+1,PSBHDR(XB)="                         / "_MED
"RTN","PSBOMT",233,0)
 .S PSBHDR(XB)=PSBHDR(XB)_$S(($L(PSBHDR(XB),":")=2)&($P(PSBHDR(XB),":",2)=""):" ",1:" / ")_MED
"RTN","PSBOMT",234,0)
 I $D(PSBDDL) S XA="" F  S XA=$O(PSBDDL(XA)) Q:XA=""  D
"RTN","PSBOMT",235,0)
 .S MED=$$GET1^DIQ(50,XA,.01)
"RTN","PSBOMT",236,0)
 .I $L(PSBHDR(XB)_" / "_MED)+3>IOM D  Q
"RTN","PSBOMT",237,0)
 ..S XB=XB+1,PSBHDR(XB)="                         / "_MED
"RTN","PSBOMT",238,0)
 .S PSBHDR(XB)=PSBHDR(XB)_$S(($L(PSBHDR(XB),":")=2)&($P(PSBHDR(XB),":",2)=""):" ",1:" / ")_MED
"RTN","PSBOMT",239,0)
 Q
"RTN","PSBOMT",240,0)
WRAP(SIZE,ZP,BRIEN) ;
"RTN","PSBOMT",241,0)
 D ADD($J("",56)_ZP)
"RTN","PSBOMT",242,0)
 D ADD($J("",56)_$E(SIZE,1,75))
"RTN","PSBOMT",243,0)
 I $L(SIZE)>75 D ADD($J("",56)_$E(SIZE,76,150))
"RTN","PSBOMT",244,0)
 Q
"RTN","PSBOMT",245,0)
ADD(XE) ;
"RTN","PSBOMT",246,0)
 S ^TMP("PSB",$J,$O(^TMP("PSB",$J,""),-1)+1)=XE
"RTN","PSBOMT",247,0)
 Q
"RTN","PSBOMT",248,0)
GETDRN(IEN1) ;
"RTN","PSBOMT",249,0)
 ; Get the Drug IEN (p50) via OI IEN (p50.7)
"RTN","PSBOMT",250,0)
 K ^TMP($J,"PSBLIST")
"RTN","PSBOMT",251,0)
 D DRGIEN^PSS50P7(IEN1,,"PSBLIST")
"RTN","PSBOMT",252,0)
 S DN=$O(^TMP($J,"PSBLIST",0))
"RTN","PSBOMT",253,0)
 K ^TMP($J,"PSBLIST")
"RTN","PSBOMT",254,0)
 Q DN
"RTN","PSBOMT",255,0)
GETCLSS(IEN1) ;
"RTN","PSBOMT",256,0)
 ; Get the Items w/i VA Class
"RTN","PSBOMT",257,0)
 K ^TMP($J,"PSBLIST")
"RTN","PSBOMT",258,0)
 D VAC^PSS50(IEN1,,,"PSBLIST")
"RTN","PSBOMT",259,0)
 M PSBDDRG=^TMP($J,"PSBLIST")
"RTN","PSBOMT",260,0)
 K ^TMP($J,"PSBLIST")
"RTN","PSBOMT",261,0)
 Q
"RTN","PSBOMV")
0^34^B64401243^B58207995
"RTN","PSBOMV",1,0)
PSBOMV ;BIRMINGHAM/EFC-BCMA UNIT DOSE VIRTUAL DUE LIST FUNCTIONS ;03/06/16 3:06pm
"RTN","PSBOMV",2,0)
 ;;3.0;BAR CODE MED ADMIN;**60,78,72,86,83**;Mar 2004;Build 89
"RTN","PSBOMV",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBOMV",4,0)
 ;
"RTN","PSBOMV",5,0)
 ; Reference/IA
"RTN","PSBOMV",6,0)
 ; ^DPT/10035
"RTN","PSBOMV",7,0)
 ; ^NURSF(211.4/1409
"RTN","PSBOMV",8,0)
 ; ^XLFDT/10103
"RTN","PSBOMV",9,0)
 ;
"RTN","PSBOMV",10,0)
 ;*83 - add ablility to print Removal of meds variances now.
"RTN","PSBOMV",11,0)
EN ;
"RTN","PSBOMV",12,0)
 N CNT,PSBHDR,PSBPT,PSBINDX,DFN,PSBY,PSBSORT,PSBPRINT,PSBDT,PSBEV,PSBLOG,PSBPRCX,PSBRB,PSBSTOP,PSBSTRT,PSBTIME,PSBWLF,PSBWRD,PSBWRDA,PSBX,PSBY,PSBXX
"RTN","PSBOMV",13,0)
 ;
"RTN","PSBOMV",14,0)
 K ^TMP("PSBO",$J)
"RTN","PSBOMV",15,0)
 S PSBSTRT=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,7)
"RTN","PSBOMV",16,0)
 S PSBSTOP=$P(PSBRPT(.1),U,8)+$P(PSBRPT(.1),U,9)
"RTN","PSBOMV",17,0)
 S CNT=0,PSBPRINT=$P($G(PSBRPT(.1)),U)
"RTN","PSBOMV",18,0)
 I PSBPRINT="P" S PSBPT=$P(PSBRPT(.1),U,2)
"RTN","PSBOMV",19,0)
 I PSBPRINT="W" S PSBSORT=$P($G(PSBRPT(.1)),U,5),PSBWRD=$P(PSBRPT(.1),U,3) Q:'PSBWRD  D WARD^NURSUT5("L^"_PSBWRD,.PSBWRDA)
"RTN","PSBOMV",20,0)
 ;
"RTN","PSBOMV",21,0)
RANGE ;Locate data between date range.
"RTN","PSBOMV",22,0)
 N PSBTMDF
"RTN","PSBOMV",23,0)
 S PSBX=PSBSTRT F  S PSBX=$O(^PSB(53.78,"ADT",PSBX)) Q:'PSBX!(PSBX>PSBSTOP)  D
"RTN","PSBOMV",24,0)
 .F PSBY=0:0 S PSBY=$O(^PSB(53.78,"ADT",PSBX,PSBY)) Q:'PSBY  D
"RTN","PSBOMV",25,0)
 ..S DFN=+^PSB(53.78,PSBY,0),PSBWLF=$P($G(^(0)),U,9),PSBTIME=$P($G(^(0)),U,4),PSBLOG=$P($G(^(0)),U,8)
"RTN","PSBOMV",26,0)
CHECK ..;Ward IEN must exist in Ward Field # 9.
"RTN","PSBOMV",27,0)
 ..Q:'$G(PSBWLF)
"RTN","PSBOMV",28,0)
 ..Q:'$G(PSBLOG)
"RTN","PSBOMV",29,0)
 ..;*83
"RTN","PSBOMV",30,0)
 ..; Fix *60 no longer applies, Removals are now tracked by event code
"RTN","PSBOMV",31,0)
 ..; & added to the Var Log file similar to how a Give would be.
"RTN","PSBOMV",32,0)
 ..; ORDER ADMINISTRATION VARIANCE field (#.14) in file (#53.79), now
"RTN","PSBOMV",33,0)
 ..; also contains Variance of Removes.  Calculated remove time vs
"RTN","PSBOMV",34,0)
 ..; Scheduled remove time and passes in a Removal type event code.
"RTN","PSBOMV",35,0)
 ..;    see DD 53.79 trigger xrefs.
"RTN","PSBOMV",36,0)
 ..;
"RTN","PSBOMV",37,0)
 ..;;PSB*3*60 adds code to allow a variance equal to system variable DILOCKTM when checking for removal of a patch
"RTN","PSBOMV",38,0)
 ..;;S PSBTMDF=$$FMDIFF^XLFDT($P($G(^PSB(53.79,PSBLOG,0)),U,6),$G(PSBTIME),2) ;PSB*3*60
"RTN","PSBOMV",39,0)
 ..;;I PSBTMDF>=-($S($G(DILOCKTM)>0:DILOCKTM,1:3)),PSBTMDF<=$S($G(DILOCKTM)>0:DILOCKTM,1:3),$P($G(^PSB(53.79,PSBLOG,0)),U,9)="RM" Q  ;PSB*3*60
"RTN","PSBOMV",40,0)
 ..;
"RTN","PSBOMV",41,0)
 ..;Quit if Ward IEN is not in Nurse Location file.
"RTN","PSBOMV",42,0)
 ..I PSBPRINT="W",'$O(^NURSF(211.4,"C",PSBWLF,PSBWRD,0)) Q
"RTN","PSBOMV",43,0)
 ..;Compare date/time and Quit if order status set to Remove.
"RTN","PSBOMV",44,0)
 ..;
"RTN","PSBOMV",45,0)
BUILD ..I $G(PSBSORT)'="B" S ^TMP("PSBO",$J,DFN,PSBX,PSBY)=""
"RTN","PSBOMV",46,0)
 ..I PSBPRINT="P",DFN=PSBPT S ^TMP("PSBO",$J,"B",$P(^DPT(DFN,0),U),DFN)="" Q
"RTN","PSBOMV",47,0)
 ..S ^TMP("PSBO",$J,DFN,0)=^DPT(DFN,0)
"RTN","PSBOMV",48,0)
 ..I PSBPRINT="W" D SORTING
"RTN","PSBOMV",49,0)
 ;
"RTN","PSBOMV",50,0)
BYWDPT ;Print by Ward and Sort by Patient.
"RTN","PSBOMV",51,0)
 I $G(PSBPRINT)="W",$G(PSBSORT)'="B" D
"RTN","PSBOMV",52,0)
 .;Print report by the selected ward name.
"RTN","PSBOMV",53,0)
 .W $$WRDHDR()
"RTN","PSBOMV",54,0)
 .S PSBINDX=""
"RTN","PSBOMV",55,0)
 .F  S PSBINDX=$O(^TMP("PSBO",$J,"B",PSBINDX)) Q:PSBINDX=""  D
"RTN","PSBOMV",56,0)
 ..F DFN=0:0 S DFN=$O(^TMP("PSBO",$J,"B",PSBINDX,DFN)) Q:'DFN  D
"RTN","PSBOMV",57,0)
 ...W:$Y>(IOSL-10) $$WRDHDR()
"RTN","PSBOMV",58,0)
 ...F PSBDT=0:0 S PSBDT=$O(^TMP("PSBO",$J,DFN,PSBDT)) Q:'PSBDT  D
"RTN","PSBOMV",59,0)
 ....F PSBY=0:0 S PSBY=$O(^TMP("PSBO",$J,DFN,PSBDT,PSBY)) Q:'PSBY  D
"RTN","PSBOMV",60,0)
 .....D EVENTS  ;Set Total Number of Events
"RTN","PSBOMV",61,0)
 .....S PSBRB=$$GET1^DIQ(53.78,PSBY_",",.02)
"RTN","PSBOMV",62,0)
 .....W !,PSBRB
"RTN","PSBOMV",63,0)
 .....W ?20,$P(^TMP("PSBO",$J,DFN,0),U,1)
"RTN","PSBOMV",64,0)
 .....W ?48,$$GET1^DIQ(53.78,PSBY_",",.04)
"RTN","PSBOMV",65,0)
 .....W ?75,$$GET1^DIQ(53.78,PSBY_",",.05)
"RTN","PSBOMV",66,0)
 .....W ?95,$$GET1^DIQ(53.78,PSBY_",",.06)
"RTN","PSBOMV",67,0)
 .....;W ?102,$$GET1^DIQ(53.78,PSBY_",",.07) - Remove .07 since medication is written through pointer, PSB*3*86
"RTN","PSBOMV",68,0)
 .....W ?102,$$GET1^DIQ(53.78,PSBY_",","MED LOG PTR:ADMINISTRATION MEDICATION")
"RTN","PSBOMV",69,0)
 .....D VCOM ;Print Ward and Comments from Med Log.
"RTN","PSBOMV",70,0)
 .....W !?52
"RTN","PSBOMV",71,0)
 .W !!  D EVEPRNT
"RTN","PSBOMV",72,0)
 ;
"RTN","PSBOMV",73,0)
BYWDRB ;Print by Ward and Sort by Room and Bed.
"RTN","PSBOMV",74,0)
 I $G(PSBPRINT)="W",$G(PSBSORT)="B" D
"RTN","PSBOMV",75,0)
 .;Print report by the selected ward name.
"RTN","PSBOMV",76,0)
 .W $$WRDHDR()
"RTN","PSBOMV",77,0)
 .S PSBINDX=""
"RTN","PSBOMV",78,0)
 .F  S PSBINDX=$O(^TMP("PSBO",$J,"B",PSBINDX)) Q:PSBINDX=""  D
"RTN","PSBOMV",79,0)
 ..F DFN=0:0 S DFN=$O(^TMP("PSBO",$J,"B",PSBINDX,DFN)) Q:'DFN  D
"RTN","PSBOMV",80,0)
 ...W:$Y>(IOSL-10) $$WRDHDR()
"RTN","PSBOMV",81,0)
 ...F PSBDT=0:0 S PSBDT=$O(^TMP("PSBO",$J,"B",PSBINDX,DFN,PSBDT)) Q:'PSBDT  D
"RTN","PSBOMV",82,0)
 ....F PSBY=0:0 S PSBY=$O(^TMP("PSBO",$J,"B",PSBINDX,DFN,PSBDT,PSBY)) Q:'PSBY  D
"RTN","PSBOMV",83,0)
 .....D EVENTS  ;Set Total Number of Events
"RTN","PSBOMV",84,0)
 .....S PSBRB=$$GET1^DIQ(53.78,PSBY_",",.02)
"RTN","PSBOMV",85,0)
 .....W !,PSBRB
"RTN","PSBOMV",86,0)
 .....W ?20,$P(^TMP("PSBO",$J,DFN,0),U,1)
"RTN","PSBOMV",87,0)
 .....W ?48,$$GET1^DIQ(53.78,PSBY_",",.04)
"RTN","PSBOMV",88,0)
 .....W ?75,$$GET1^DIQ(53.78,PSBY_",",.05)
"RTN","PSBOMV",89,0)
 .....W ?95,$$GET1^DIQ(53.78,PSBY_",",.06)
"RTN","PSBOMV",90,0)
 .....;W ?102,$$GET1^DIQ(53.78,PSBY_",",.07) - Remove .07 since medication is written through pointer, PSB*3*86
"RTN","PSBOMV",91,0)
 .....W ?102,$$GET1^DIQ(53.78,PSBY_",","MED LOG PTR:ADMINISTRATION MEDICATION")
"RTN","PSBOMV",92,0)
 .....D VCOM ;Print Ward and Comments from Med Log.
"RTN","PSBOMV",93,0)
 .....W !?52
"RTN","PSBOMV",94,0)
 .W !!  D EVEPRNT
"RTN","PSBOMV",95,0)
 ;
"RTN","PSBOMV",96,0)
BYDFN ;Print by Patient.
"RTN","PSBOMV",97,0)
 D:$G(PSBPRINT)="P"
"RTN","PSBOMV",98,0)
 .W $$PTHDR()
"RTN","PSBOMV",99,0)
 .S PSBINDX=""
"RTN","PSBOMV",100,0)
 .F  S PSBINDX=$O(^TMP("PSBO",$J,"B",PSBINDX)) Q:PSBINDX=""  D
"RTN","PSBOMV",101,0)
 ..F DFN=0:0 S DFN=$O(^TMP("PSBO",$J,"B",PSBINDX,DFN)) Q:'DFN  D
"RTN","PSBOMV",102,0)
 ...W:$Y>(IOSL-10) $$PTHDR()
"RTN","PSBOMV",103,0)
 ...F PSBDT=0:0 S PSBDT=$O(^TMP("PSBO",$J,DFN,PSBDT)) Q:'PSBDT  D
"RTN","PSBOMV",104,0)
 ....F PSBY=0:0 S PSBY=$O(^TMP("PSBO",$J,DFN,PSBDT,PSBY)) Q:'PSBY  D
"RTN","PSBOMV",105,0)
 .....D EVENTS  ;Set Total Number of Events
"RTN","PSBOMV",106,0)
 .....W !,$$GET1^DIQ(53.78,PSBY_",",.04)
"RTN","PSBOMV",107,0)
 .....W ?23,$$GET1^DIQ(53.78,PSBY_",",.05)
"RTN","PSBOMV",108,0)
 .....W ?43,$$GET1^DIQ(53.78,PSBY_",",.06)
"RTN","PSBOMV",109,0)
 .....;W ?50,$$GET1^DIQ(53.78,PSBY_",",.07) - Remove .07 since medication is written through pointer, PSB*3*86
"RTN","PSBOMV",110,0)
 .....W ?50,$$GET1^DIQ(53.78,PSBY_",","MED LOG PTR:ADMINISTRATION MEDICATION")
"RTN","PSBOMV",111,0)
 .....D VCOM ;Print Ward and Comments from Med Log.
"RTN","PSBOMV",112,0)
 .W !!  D EVEPRNT
"RTN","PSBOMV",113,0)
 .W $$PTFTR^PSBOHDR()
"RTN","PSBOMV",114,0)
 Q
"RTN","PSBOMV",115,0)
 ;
"RTN","PSBOMV",116,0)
WRDHDR() ;
"RTN","PSBOMV",117,0)
 N PSBSRCHL ;Add PSBSRCHL variable and additional PSBHDR array spacers for PSBOHDR call, PSB*3*78
"RTN","PSBOMV",118,0)
 S PSBHDR(1)="MEDICATION VARIANCE LOG for "_$$FMTE^XLFDT(PSBSTRT)_" to "_$$FMTE^XLFDT(PSBSTOP) ;Add time frame for report header, PSB*3*72
"RTN","PSBOMV",119,0)
 S PSBSRCHL=$$SRCHLIST^PSBOHDR()
"RTN","PSBOMV",120,0)
 S PSBHDR(2)="",PSBHDR(3)="",PSBHDR(4)="Ward Location: "
"RTN","PSBOMV",121,0)
 D WARD^PSBOHDR(PSBWRD,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOMV",122,0)
 W !,"Rm-Bed",?20,"Patient Name",?48,"Event Date/Time",?75,"Event",?95,"Var",?102,"Medication",!,$TR($J("",IOM)," ","-")
"RTN","PSBOMV",123,0)
 Q ""
"RTN","PSBOMV",124,0)
 ;
"RTN","PSBOMV",125,0)
PTHDR() ;
"RTN","PSBOMV",126,0)
 S PSBHDR(1)="MEDICATION VARIANCE LOG for "_$$FMTE^XLFDT(PSBSTRT)_" to "_$$FMTE^XLFDT(PSBSTOP) ;Add time frame for report header, PSB*3*72
"RTN","PSBOMV",127,0)
 D PT^PSBOHDR(PSBDFN,.PSBHDR)
"RTN","PSBOMV",128,0)
 W !,"Event Date/Time",?23,"Event",?43,"Var",?50,"Medication",!,$TR($J("",IOM)," ","-")
"RTN","PSBOMV",129,0)
 Q ""
"RTN","PSBOMV",130,0)
 ;
"RTN","PSBOMV",131,0)
VCOM ;Print Ward and Comments from Med Log on Variance Report.
"RTN","PSBOMV",132,0)
 N PSBCOM,PSBML,Y
"RTN","PSBOMV",133,0)
 Q:'$P($G(^PSB(53.78,PSBY,0)),"^",8)  S PSBML=$P(^(0),"^",8)
"RTN","PSBOMV",134,0)
 I $P(PSBRPT(.1),U)="P" W !,?23,"Ward:      ",?34 D
"RTN","PSBOMV",135,0)
 .I $P($G(^PSB(53.79,PSBML,0)),U,2)=""  W "<No Ward>" Q
"RTN","PSBOMV",136,0)
 .W $P($G(^PSB(53.79,PSBML,0)),U,2)
"RTN","PSBOMV",137,0)
 W !,?23,"Comments:  ",?34 I '$O(^PSB(53.79,PSBML,.3,0))  W "<No Comments>" I $Y>(IOSL-10) D  Q  ;correct page breaks, PSB*3*60
"RTN","PSBOMV",138,0)
 .I $G(PSBPRINT)="P" W $$PTFTR^PSBOHDR(),!,$$PTHDR()  ;correct page breaks, PSB*3*60
"RTN","PSBOMV",139,0)
 .I $G(PSBPRINT)="W" W !,$$WRDHDR()  ;correct page breaks, PSB*3*60
"RTN","PSBOMV",140,0)
 F PSBCOM=0:0 S PSBCOM=$O(^PSB(53.79,PSBML,.3,PSBCOM)) Q:'PSBCOM  D
"RTN","PSBOMV",141,0)
 .W:$X>34 !?34
"RTN","PSBOMV",142,0)
 .S Y=$P(^PSB(53.79,PSBML,.3,PSBCOM,0),U,3)+.0000001
"RTN","PSBOMV",143,0)
 .W $E(Y,4,5),"/",$E(Y,6,7),"/",$E(Y,2,3)," ",$E(Y,9,10),":",$E(Y,11,12),?50,"By: ",$$GET1^DIQ(53.793,PSBCOM_","_PSBML_",","ENTERED BY:INITIAL"),$$WRAP^PSBO(60,75,$P(^PSB(53.79,PSBML,.3,PSBCOM,0),U,1))
"RTN","PSBOMV",144,0)
 .I $Y>(IOSL-10) D  ;correct page breaks, PSB*3*60
"RTN","PSBOMV",145,0)
 ..I $G(PSBPRINT)="P" W $$PTFTR^PSBOHDR(),!,$$PTHDR()  ;correct page breaks, PSB*3*60
"RTN","PSBOMV",146,0)
 ..I $G(PSBPRINT)="W" W !,$$WRDHDR()  ;correct page breaks, PSB*3*60
"RTN","PSBOMV",147,0)
 Q
"RTN","PSBOMV",148,0)
 ;
"RTN","PSBOMV",149,0)
EVENTS ;Record total number of events.
"RTN","PSBOMV",150,0)
 S PSBEV=$P($G(^PSB(53.78,PSBY,0)),U,5) Q:'$G(PSBEV)
"RTN","PSBOMV",151,0)
 S ^TMP("PSBO",$J,"EVENTS",PSBEV,0)=$P($G(^TMP("PSBO",$J,"EVENTS",PSBEV,0)),U)+1
"RTN","PSBOMV",152,0)
 S CNT=CNT+1,^TMP("PSBO",$J,"EVENTSTOT",0)=CNT
"RTN","PSBOMV",153,0)
 Q
"RTN","PSBOMV",154,0)
EVEPRNT ;Display Total and Percentage of Events.
"RTN","PSBOMV",155,0)
 ;
"RTN","PSBOMV",156,0)
 Q:'$D(^TMP("PSBO",$J,"EVENTSTOT"))  ;Quit if there are no events
"RTN","PSBOMV",157,0)
 W !,"Total Number of Events for the reporting period is: "_$P(^TMP("PSBO",$J,"EVENTSTOT",0),U)_".",!
"RTN","PSBOMV",158,0)
 F PSBXX=0:0 S PSBXX=$O(^TMP("PSBO",$J,"EVENTS",PSBXX)) Q:'PSBXX  D
"RTN","PSBOMV",159,0)
 .W !,"Total number of "_$$EXTERNAL^DILFD(53.78,.05,"",PSBXX)_" events is "_$P($G(^TMP("PSBO",$J,"EVENTS",PSBXX,0)),U)_"."
"RTN","PSBOMV",160,0)
 .S PSBPRCX=$E($FN($P(^TMP("PSBO",$J,"EVENTS",PSBXX,0),U)/$P(^TMP("PSBO",$J,"EVENTSTOT",0),U),"",2),3,4)
"RTN","PSBOMV",161,0)
 .W !,"Percentage of Total Events: "_$S(PSBPRCX="00":"100",1:PSBPRCX)_"%",!
"RTN","PSBOMV",162,0)
 Q
"RTN","PSBOMV",163,0)
 ;
"RTN","PSBOMV",164,0)
SORTING ;Sort by Patient or Room and Bed Information
"RTN","PSBOMV",165,0)
 ;
"RTN","PSBOMV",166,0)
 I $G(PSBSORT)="P"!($G(PSBSORT)="") S PSBINDX=$P(^DPT(DFN,0),U),^TMP("PSBO",$J,"B",PSBINDX,DFN)="" Q
"RTN","PSBOMV",167,0)
 I $G(PSBSORT)="B" S PSBINDX=$P($G(^PSB(53.78,+PSBY,0)),U,2) S:PSBINDX="" PSBINDX="** NO ROOM/BED **" S ^TMP("PSBO",$J,"B",PSBINDX,DFN,PSBX,PSBY)=""
"RTN","PSBOMV",168,0)
 Q 
"RTN","PSBOPM")
0^27^B106114461^B93804999
"RTN","PSBOPM",1,0)
PSBOPM ;BIRMINGHAM/BSR-BCMA OIT HISTORY ;03/06/16 3:06pm
"RTN","PSBOPM",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,9,13,17,40,70,72,83**;Mar 2004;Build 89
"RTN","PSBOPM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBOPM",4,0)
 ;
"RTN","PSBOPM",5,0)
 ; Reference/IA
"RTN","PSBOPM",6,0)
 ; File 50.7/2880
"RTN","PSBOPM",7,0)
 ; File 52.6/436
"RTN","PSBOPM",8,0)
 ; File 52.7/437
"RTN","PSBOPM",9,0)
 ; File 200/10060
"RTN","PSBOPM",10,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBOPM",11,0)
 ;
"RTN","PSBOPM",12,0)
 ;*70 - reset PSBCLINORD = 2 to signify combined orders report
"RTN","PSBOPM",13,0)
 ;*83 - add Give info associated with a Remove and print
"RTN","PSBOPM",14,0)
 ;
"RTN","PSBOPM",15,0)
EN ;
"RTN","PSBOPM",16,0)
 N PSBHDR,DFN
"RTN","PSBOPM",17,0)
 S PSBGBL="^TMP(""PSBO"",$J,""B"")"
"RTN","PSBOPM",18,0)
 F  S PSBGBL=$Q(@PSBGBL) Q:PSBGBL=""  Q:$QS(PSBGBL,2)'=$J  Q:$QS(PSBGBL,1)'["PSBO"  D
"RTN","PSBOPM",19,0)
 .S DFN=$QS(PSBGBL,5)
"RTN","PSBOPM",20,0)
 I '$G(DFN) W !,("Error: No Patient IEN")  Q
"RTN","PSBOPM",21,0)
 S PSBSTRT=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,7)
"RTN","PSBOPM",22,0)
 S PSBSTOP=$P(PSBRPT(.1),U,8)+$P(PSBRPT(.1),U,9)
"RTN","PSBOPM",23,0)
 S PSBCOM=$P(PSBRPT(.2),"^",8)   ;COMMENT FLAG 1 MEANS YES
"RTN","PSBOPM",24,0)
 I PSBSTRT="0" D
"RTN","PSBOPM",25,0)
 .D NOW^%DTC S PSBSTOP=%
"RTN","PSBOPM",26,0)
 .S X1=((PSBSTOP)\1) S X2=-$$GET^XPAR("ALL","PSB MED HIST DAYS BACK")
"RTN","PSBOPM",27,0)
 .S:X2'<0 X2=-30 D C^%DTC  S PSBSTRT=X
"RTN","PSBOPM",28,0)
 .S PSBCOM=$$GET^XPAR("ALL","PSB RPT INCL COMMENTS")
"RTN","PSBOPM",29,0)
 D OUT(DFN,PSBSTRT,PSBSTOP,PSBORDNM)
"RTN","PSBOPM",30,0)
 Q
"RTN","PSBOPM",31,0)
 ;
"RTN","PSBOPM",32,0)
OUT(DFN,PSBSTRT,PSBSTOP,PSBORDNM)        ;
"RTN","PSBOPM",33,0)
 D CLEANALL ;CLEAN UP VARIABLES AND TMP ARRAY
"RTN","PSBOPM",34,0)
 ;
"RTN","PSBOPM",35,0)
 ;IF PSBORDNM DOESN'T CONTAIN A "U" OR A "V", SKIP THE ORDER LOOKUP
"RTN","PSBOPM",36,0)
 S PSBOR=1
"RTN","PSBOPM",37,0)
 I PSBORDNM'["U",PSBORDNM'["V" D
"RTN","PSBOPM",38,0)
 .S:'$$GETORD^PSBOPM1(.PSBORDNM) PSBOR=0
"RTN","PSBOPM",39,0)
 .I 'PSBOR&(PSBORDNM]"") S TMP("PSBOIS",$J,PSBORDNM)=""
"RTN","PSBOPM",40,0)
 I PSBOR D
"RTN","PSBOPM",41,0)
 .D GETORDN
"RTN","PSBOPM",42,0)
 .D GETOIS
"RTN","PSBOPM",43,0)
 D GETADSO ;  GET ALL ADDITIVES AND SOLUTIONS
"RTN","PSBOPM",44,0)
 D FINDIENS^PSBOPM1 ; FIND EVERY MED LOG ENTRIES THAT SHOULD BE ON THE RPT
"RTN","PSBOPM",45,0)
 D PREOUT ;   WRITE DATA TO GLOBAL
"RTN","PSBOPM",46,0)
 D WRITEOT ;
"RTN","PSBOPM",47,0)
 D CLEANSUM ; CLEAN UP AND LEAVE LIST OF IENS FOR THE REPORT.
"RTN","PSBOPM",48,0)
 Q
"RTN","PSBOPM",49,0)
 ;
"RTN","PSBOPM",50,0)
GETORDN ;
"RTN","PSBOPM",51,0)
 K ^TMP("PSJ1",$J)
"RTN","PSBOPM",52,0)
 D EN^PSJBCMA1(DFN,PSBORDNM,1)
"RTN","PSBOPM",53,0)
 Q
"RTN","PSBOPM",54,0)
 ;
"RTN","PSBOPM",55,0)
GETOIS  ; LOAD PSBOIS(#) WITH ALL OF THE ORDERABLE ITEMS
"RTN","PSBOPM",56,0)
 I PSBORDNM["U" D
"RTN","PSBOPM",57,0)
 .;GET UNIT DOSE ORDERS
"RTN","PSBOPM",58,0)
 .I $D(^TMP("PSJ1",$J,2)) D
"RTN","PSBOPM",59,0)
 ..S PSBOI=$P(^TMP("PSJ1",$J,2),"^")
"RTN","PSBOPM",60,0)
 ..S PSBOI=$S(PSBOI["U":$TR(PSBOI,"U",""),PSBOI["V":$TR(PSBOI,"V",""),1:PSBOI)
"RTN","PSBOPM",61,0)
 ..S TMP("PSBOIS",$J,PSBOI)=""
"RTN","PSBOPM",62,0)
 ;
"RTN","PSBOPM",63,0)
 ;IV ORDERS NEED TO USE THE ADDITIVE AND SOLUTION NUMBER TO BACK
"RTN","PSBOPM",64,0)
 ;TRACK TO THE OI ASSOCIATED WITH IT
"RTN","PSBOPM",65,0)
 I PSBORDNM["V" D
"RTN","PSBOPM",66,0)
 .;GET ADDITIVES OFF THE ORDER
"RTN","PSBOPM",67,0)
 .I $G(^TMP("PSJ1",$J,850,0))  D
"RTN","PSBOPM",68,0)
 ..S XXX="" F  S XXX=$O(^TMP("PSJ1",$J,850,XXX)) Q:XXX=""  D
"RTN","PSBOPM",69,0)
 ...S XXY="" F  S XXY=$O(^TMP("PSJ1",$J,850,XXX,XXY)) Q:XXY=""  D
"RTN","PSBOPM",70,0)
 ....S PSBADD=$P(^TMP("PSJ1",$J,850,XXX,XXY),"^")
"RTN","PSBOPM",71,0)
 ....;CONVERT ADDITIVE TO ORDERABLE ITEM AND ADD TO LIST
"RTN","PSBOPM",72,0)
 ....S TMP("PSBOIS",$J,$$OFROMA(PSBADD))=""
"RTN","PSBOPM",73,0)
 .;   GET SOLUTIONS OFF THE ORDER
"RTN","PSBOPM",74,0)
 .I $G(^TMP("PSJ1",$J,950,0))  D
"RTN","PSBOPM",75,0)
 ..S XXX="" F  S XXX=$O(^TMP("PSJ1",$J,950,XXX)) Q:XXX=""  D
"RTN","PSBOPM",76,0)
 ...S XXY="" F  S XXY=$O(^TMP("PSJ1",$J,950,XXX,XXY)) Q:XXY=""  D
"RTN","PSBOPM",77,0)
 ....S PSBSOL=$P(^TMP("PSJ1",$J,950,XXX,XXY),"^")
"RTN","PSBOPM",78,0)
 ....;
"RTN","PSBOPM",79,0)
 ....;CONVERT SOLUTIOIN TO ORDERABLE ITEM AND ADD TO LIST
"RTN","PSBOPM",80,0)
 ....S TMP("PSBOIS",$J,$$OFROMS(PSBSOL))=""
"RTN","PSBOPM",81,0)
 Q
"RTN","PSBOPM",82,0)
 ;
"RTN","PSBOPM",83,0)
OFROMA(PSBADD) ;GET ORDERABLE ITEM FROM AN ADDITIVE
"RTN","PSBOPM",84,0)
 Q $$GET1^DIQ(52.6,PSBADD_",",15,"I")
"RTN","PSBOPM",85,0)
 ; 
"RTN","PSBOPM",86,0)
OFROMS(PSBSOL) ; GET ORDERABLE ITEM FROM A SOLUTION
"RTN","PSBOPM",87,0)
 Q $$GET1^DIQ(52.7,PSBSOL_",",9,"I")
"RTN","PSBOPM",88,0)
 ;
"RTN","PSBOPM",89,0)
GETADSO ; GET ALL ADDITIVES FOR ALL ORDERABLE ITEMS
"RTN","PSBOPM",90,0)
 K PSBAOUT,PSBSOUT
"RTN","PSBOPM",91,0)
 S XA="" F  S XA=$O(TMP("PSBOIS",$J,XA)) Q:XA=""  D
"RTN","PSBOPM",92,0)
 .D LIST^DIC(52.6,"","@;15I","QPI","","","","AOI","","","PSBAOUT")
"RTN","PSBOPM",93,0)
 .S XB=0 F  S XB=$O(PSBAOUT("DILIST",XB)) Q:XB=""  D
"RTN","PSBOPM",94,0)
 ..I $P(PSBAOUT("DILIST",XB,0),"^",2)=XA D
"RTN","PSBOPM",95,0)
 ...S TMP("PSBADDS",$J,$P(PSBAOUT("DILIST",XB,0),"^",1))=""
"RTN","PSBOPM",96,0)
 K PSBAOUT
"RTN","PSBOPM",97,0)
 ; GET ALL SOLUTIONS FOR ALL ORDERABLE ITEMS
"RTN","PSBOPM",98,0)
 S XA="" F  S XA=$O(TMP("PSBOIS",$J,XA)) Q:XA=""  D
"RTN","PSBOPM",99,0)
 .D LIST^DIC(52.7,"","@;9I","QPI","","","","AOI","","","PSBSOUT")
"RTN","PSBOPM",100,0)
 .S XB=0 F  S XB=$O(PSBSOUT("DILIST",XB)) Q:XB=""  D
"RTN","PSBOPM",101,0)
 ..I $P(PSBSOUT("DILIST",XB,0),"^",2)=XA D
"RTN","PSBOPM",102,0)
 ...S TMP("PSBSOLS",$J,$P(PSBSOUT("DILIST",XB,0),"^",1))=""
"RTN","PSBOPM",103,0)
 K PSBSOUT
"RTN","PSBOPM",104,0)
 Q
"RTN","PSBOPM",105,0)
 ;
"RTN","PSBOPM",106,0)
PREOUT ;
"RTN","PSBOPM",107,0)
 N TYP
"RTN","PSBOPM",108,0)
 F TYP="UD","ADD","SOL"  D
"RTN","PSBOPM",109,0)
 .Q:'$D(TMP("PSBIENS",$J,TYP))
"RTN","PSBOPM",110,0)
 .K PSBUNK S XDT="" F  S XDT=$O(TMP("PSBIENS",$J,TYP,XDT),-1) Q:XDT=""  D
"RTN","PSBOPM",111,0)
 ..S I="" F  S I=$O(TMP("PSBIENS",$J,TYP,XDT,I)) Q:I=""  D
"RTN","PSBOPM",112,0)
 ...I TYP="UD" Q:$D(TMP("PSBIENS",$J,"ADD",XDT,I))  Q:$D(TMP("PSBIENS",$J,"SOL",XDT,I))
"RTN","PSBOPM",113,0)
 ...S PSBIEN=I
"RTN","PSBOPM",114,0)
 ...S PSBIENS=PSBIEN_","
"RTN","PSBOPM",115,0)
 ...D OUTPUT(TYP)
"RTN","PSBOPM",116,0)
 Q
"RTN","PSBOPM",117,0)
 ;
"RTN","PSBOPM",118,0)
OUTPUT(TYP) ;
"RTN","PSBOPM",119,0)
 N GIVE,G1,G2,G3,G4
"RTN","PSBOPM",120,0)
 S PSBSPC=$J("",80)
"RTN","PSBOPM",121,0)
 S W=$E($$GET1^DIQ(53.79,PSBIENS,.02)_PSBSPC,1,20)_" "
"RTN","PSBOPM",122,0)
 I $TR(W," ")="",$$MME^PSBOML(+PSBIENS) S W="MME/UNKNOWN LOCATION "
"RTN","PSBOPM",123,0)
 S W=W_$S($P(^PSB(53.79,PSBIEN,0),U,9)="":"?? ",1:$E($P(^PSB(53.79,PSBIEN,0),U,9)_"  ",1,2)_" ")
"RTN","PSBOPM",124,0)
 S:$P(^PSB(53.79,PSBIEN,0),U,9)="" PSBUNK=1
"RTN","PSBOPM",125,0)
 S W=W_$E($P($G(^PSB(53.79,PSBIEN,.1)),U,2)_PSBSPC,1,2)_"  "
"RTN","PSBOPM",126,0)
 S W=W_$E($E($$GET1^DIQ(53.79,PSBIENS,.06),1,18)_PSBSPC,1,21)_" "
"RTN","PSBOPM",127,0)
 S W=W_$E($$GETINIT^PSBCSUTX(PSBIEN,"I")_PSBSPC,1,10)_" " ;Get initials of who took action, PSB*3*72
"RTN","PSBOPM",128,0)
 ;*83 body site info
"RTN","PSBOPM",129,0)
 N SITE
"RTN","PSBOPM",130,0)
 S SITE=$$GET1^DIQ(53.79,PSBIENS,.18)
"RTN","PSBOPM",131,0)
 S:SITE="" SITE=$$GET1^DIQ(53.79,PSBIENS,.16)
"RTN","PSBOPM",132,0)
 S W=W_SITE
"RTN","PSBOPM",133,0)
 ;
"RTN","PSBOPM",134,0)
 D ADD(W,TYP)
"RTN","PSBOPM",135,0)
 S W=$J("",56)
"RTN","PSBOPM",136,0)
 ;Remove, find associated Give                                     *83
"RTN","PSBOPM",137,0)
 I $P(^PSB(53.79,PSBIEN,0),U,9)="RM" D
"RTN","PSBOPM",138,0)
 .S GIVE=$$FINDGIVE^PSBUTL(PSBIEN)
"RTN","PSBOPM",139,0)
 .S G1=$E($P(GIVE,U,3)_PSBSPC,1,3)
"RTN","PSBOPM",140,0)
 .S G2=$E($P($G(^PSB(53.79,PSBIEN,.1)),U,2)_PSBSPC,1,4)
"RTN","PSBOPM",141,0)
 .S G3=$P(GIVE,U),G3=$E($$UP^XLFSTR($$FMTE^XLFDT(G3,1)),1,18)_$J("",4)
"RTN","PSBOPM",142,0)
 .S G4=$E($P(GIVE,U,2)_PSBSPC,1,6)
"RTN","PSBOPM",143,0)
 .S W=$J("",21)
"RTN","PSBOPM",144,0)
 .S W=W_G1_G2_G3_G4
"RTN","PSBOPM",145,0)
 ;
"RTN","PSBOPM",146,0)
 F PSBNODE=.5,.6,.7 D
"RTN","PSBOPM",147,0)
 .S PSBDD=$S(PSBNODE=.5:53.795,PSBNODE=.6:53.796,1:53.797)
"RTN","PSBOPM",148,0)
 .F PSBY=0:0 S PSBY=$O(^PSB(53.79,PSBIEN,PSBNODE,PSBY)) Q:'PSBY  D  ;Include units ordered for IV's
"RTN","PSBOPM",149,0)
 ..D:PSBDD=53.795 WRAPMEDS(W,$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.01),$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.03),$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.04),TYP)  ;insert W to Wrapmeds tag *83
"RTN","PSBOPM",150,0)
 ..D:PSBDD=53.796!(PSBDD=53.797) WRAPMEDS(W,$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.01)_" - "_$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.02),$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.03),$$GET1^DIQ(PSBDD,PSBY_","_PSBIENS,.04),TYP)  ;insert W to wrapmeds *83
"RTN","PSBOPM",151,0)
 I PSBCOM=1  D COMNTS   ;GETS COMMENTS
"RTN","PSBOPM",152,0)
 D ADD("",TYP)
"RTN","PSBOPM",153,0)
 Q
"RTN","PSBOPM",154,0)
 ;
"RTN","PSBOPM",155,0)
COMNTS  ;
"RTN","PSBOPM",156,0)
 N Z,CNT
"RTN","PSBOPM",157,0)
 S Z="",CNT=0
"RTN","PSBOPM",158,0)
 I $D(^PSB(53.79,PSBIEN,.3,0)) D
"RTN","PSBOPM",159,0)
 .D ADD("",TYP)
"RTN","PSBOPM",160,0)
 .D ADD($J("",45)_"Comments: "_$$MAKELINE("-",78),TYP)
"RTN","PSBOPM",161,0)
 .S XT="" F  S XT=$O(^PSB(53.79,PSBIEN,.3,XT)) Q:XT=""  I XT'=0  D
"RTN","PSBOPM",162,0)
 ..D:CNT=1 ADD("",TYP)
"RTN","PSBOPM",163,0)
 ..S Y=$P(^PSB(53.79,PSBIEN,.3,XT,0),"^",3) D DD^%DT S XBR=Y
"RTN","PSBOPM",164,0)
 ..S Z=XBR_"   "_$P(^VA(200,$P(^PSB(53.79,PSBIEN,.3,XT,0),"^",2),0),"^",2)
"RTN","PSBOPM",165,0)
 ..D WRAP($P(^PSB(53.79,PSBIEN,.3,XT,0),"^",1),Z,PSBIEN)
"RTN","PSBOPM",166,0)
 ..S CNT=1
"RTN","PSBOPM",167,0)
 .D ADD($J("",55)_$$MAKELINE("-",78),TYP)
"RTN","PSBOPM",168,0)
 Q
"RTN","PSBOPM",169,0)
        ;
"RTN","PSBOPM",170,0)
WRAP(SIZE,ZP,BRIEN)         ;
"RTN","PSBOPM",171,0)
 D ADD($J("",56)_ZP,TYP)
"RTN","PSBOPM",172,0)
 D ADD($J("",56)_$E(SIZE,1,75),TYP)
"RTN","PSBOPM",173,0)
 I $L(SIZE)>75 D ADD($J("",56)_$E(SIZE,76,150),TYP)
"RTN","PSBOPM",174,0)
 Q
"RTN","PSBOPM",175,0)
 ;
"RTN","PSBOPM",176,0)
HEADA ;
"RTN","PSBOPM",177,0)
 W !
"RTN","PSBOPM",178,0)
 W "Location",?21,"St Sch Administration Date",?50,"By",?61,"Body Site",?96,"Units",?112,"Units of"     ;*83
"RTN","PSBOPM",179,0)
 W !,?56,"Medication & Dosage",?96,"GIVEN",?112,"Administration"
"RTN","PSBOPM",180,0)
 W !
"RTN","PSBOPM",181,0)
 W $$MAKELINE("-",132)
"RTN","PSBOPM",182,0)
 Q
"RTN","PSBOPM",183,0)
 ;
"RTN","PSBOPM",184,0)
ADD(XE,TYP)  ;
"RTN","PSBOPM",185,0)
 S ^TMP("PSB",$J,TYP,$O(^TMP("PSB",$J,TYP,""),-1)+1)=XE
"RTN","PSBOPM",186,0)
 Q
"RTN","PSBOPM",187,0)
 ;
"RTN","PSBOPM",188,0)
WRAPMEDS(W,MED,UG,UOA,TYP)  ;insert parm W (possible RM string) to print on line 1 *83
"RTN","PSBOPM",189,0)
 ;MED IS NOT WRAPPED: MAX LENGTH IN PSDRUG/52.6/52.7 IS 40
"RTN","PSBOPM",190,0)
 ;UG/UOA MAX AT 30/40 AND WILL BE WRAPPED AT 15 EACH
"RTN","PSBOPM",191,0)
 ;THIS WILL CREATE UPTO 3 LINES
"RTN","PSBOPM",192,0)
 S MED=$S($L(MED)>40:$E(MED_$J("",80),1,80),1:$E(MED_$J("",40),1,40)) ;Add wrapping for med/units ordered
"RTN","PSBOPM",193,0)
 N UGWRAP,PSBMED1,PSBMED41,PSBMED81,PSBCNT
"RTN","PSBOPM",194,0)
 S (CNTX,UOA1,UOA16,UOA31,PSBMED1,PSBMED41,PSBMED81)=""
"RTN","PSBOPM",195,0)
 I +$G(UG)?1"."1.N S UG=0_+UG
"RTN","PSBOPM",196,0)
 F CNT=1:15:45  D
"RTN","PSBOPM",197,0)
 .S PSBCNT=$S(CNT=1:1,CNT=16:41,CNT=31:81,1:120)
"RTN","PSBOPM",198,0)
 .D PARSEM(MED,PSBCNT)
"RTN","PSBOPM",199,0)
 .D PARSE(UOA,CNT)
"RTN","PSBOPM",200,0)
 .S UGWRAP=$E(UG,CNT,(CNT+14))
"RTN","PSBOPM",201,0)
 .I CNT=1 D ADD(W_MED_" "_$$PAD(UGWRAP,15)_" "_$$PAD(UOA1,15),TYP)
"RTN","PSBOPM",202,0)
 .I (CNT>1),($L(UGWRAP)>0!$L(@("UOA"_CNT))>0) D ADD($J("",96)_$$PAD(UGWRAP,15)_" "_$$PAD(@("UOA"_CNT),15),TYP)
"RTN","PSBOPM",203,0)
 Q
"RTN","PSBOPM",204,0)
 ;
"RTN","PSBOPM",205,0)
PAD(X,CNT) ;
"RTN","PSBOPM",206,0)
 Q $E(X_$J("",CNT),1,CNT)
"RTN","PSBOPM",207,0)
WRITEOT ;
"RTN","PSBOPM",208,0)
 N TPE
"RTN","PSBOPM",209,0)
 S Y=$P(PSBSTRT,".",1)  D D^DIQ  S PSTRTA=Y
"RTN","PSBOPM",210,0)
 S Y=$P(PSBSTOP,".",1)  D D^DIQ  S PSTP=Y
"RTN","PSBOPM",211,0)
 S PSBHDR(1)="MEDICATION HISTORY for "_PSTRTA_"  to  "_PSTP
"RTN","PSBOPM",212,0)
 I '$D(TMP("PSBIENS",$J)) D ADD("<<<< NO HISTORY FOUND FOR THIS TIME FRAME >>>>","UD")
"RTN","PSBOPM",213,0)
 S TPE="" F  S TPE=$O(^TMP("PSB",$J,TPE)) Q:TPE=""  D
"RTN","PSBOPM",214,0)
 .D MEDS(TPE)
"RTN","PSBOPM",215,0)
 .N PSBCLINORD S PSBCLINORD=2 D PT^PSBOHDR(DFN,.PSBHDR),HEADA     ;*70
"RTN","PSBOPM",216,0)
 .S EX="" F  S EX=$O(^TMP("PSB",$J,TPE,EX)) Q:EX=""  D
"RTN","PSBOPM",217,0)
 ..I $Y>(IOSL-5) D
"RTN","PSBOPM",218,0)
 ...W $$PTFTR^PSBOHDR()
"RTN","PSBOPM",219,0)
 ...D PT^PSBOHDR(DFN,.PSBHDR),HEADA
"RTN","PSBOPM",220,0)
 ..W !,$G(^TMP("PSB",$J,TPE,EX))
"RTN","PSBOPM",221,0)
 W $$PTFTR^PSBOHDR()
"RTN","PSBOPM",222,0)
 Q
"RTN","PSBOPM",223,0)
 ;
"RTN","PSBOPM",224,0)
FTR() ;
"RTN","PSBOPM",225,0)
 I (IOSL<100) F  Q:$Y>(IOSL-10)  W !
"RTN","PSBOPM",226,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","PSBOPM",227,0)
 S X="Ward: "_PSBHDR("WARD")_"  Room-Bed: "_PSBHDR("ROOM")
"RTN","PSBOPM",228,0)
 W !,PSBHDR("NAME"),?(IOM-11\2),PSBHDR("SSN"),?(IOM-$L(X)),X
"RTN","PSBOPM",229,0)
 Q ""
"RTN","PSBOPM",230,0)
 ;
"RTN","PSBOPM",231,0)
MEDS(TYP) ;
"RTN","PSBOPM",232,0)
 N MED,XA,XB,DPTR,DRG,FLE,SBSC
"RTN","PSBOPM",233,0)
 S MED="",XB=3,DRG=""
"RTN","PSBOPM",234,0)
 S PSBHDR(3)="MEDICATIONS SEARCH LIST:"
"RTN","PSBOPM",235,0)
 S XA="" F  S XA=$O(TMP("PSBOIS",$J,XA)) Q:XA=""  D
"RTN","PSBOPM",236,0)
 .S MED=$$GET1^DIQ(50.7,XA,.01)
"RTN","PSBOPM",237,0)
 .I $L(PSBHDR(XB)_" "_MED)>IOM D
"RTN","PSBOPM",238,0)
 ..S XB=XB+1,PSBHDR(XB)="                         "_MED
"RTN","PSBOPM",239,0)
 .E  S PSBHDR(XB)=PSBHDR(XB)_$S($L(PSBHDR(XB))<26:" ",1:"; ")_MED
"RTN","PSBOPM",240,0)
 S XA=999 F  S XA=$O(PSBHDR(XA),-1) Q:XA=XB  K PSBHDR(XA)
"RTN","PSBOPM",241,0)
 I TYP'="" D
"RTN","PSBOPM",242,0)
 .I TYP["UD" S TYP="UNIT DOSE",SBSC="PSBOIS",FLE=50.7
"RTN","PSBOPM",243,0)
 .I TYP["AD" S TYP="ADDITIVE",SBSC="PSBADDS",FLE=52.6
"RTN","PSBOPM",244,0)
 .I TYP["SO" S TYP="SOLUTION",SBSC="PSBSOLS",FLE=52.7
"RTN","PSBOPM",245,0)
 .S DPTR="" F  S DPTR=$O(TMP(SBSC,$J,DPTR)) Q:DPTR=""  I TMP(SBSC,$J,DPTR) D
"RTN","PSBOPM",246,0)
 ..S DRG=$$GET1^DIQ(FLE,DPTR,.01)
"RTN","PSBOPM",247,0)
 ..S PSBHDR($O(PSBHDR(999),-1)+1)=$S(TYP="UNIT DOSE":"",1:"SEARCH FOR "_TYP_": "_DRG)
"RTN","PSBOPM",248,0)
 .K TMP(SBSC,$J)
"RTN","PSBOPM",249,0)
 Q
"RTN","PSBOPM",250,0)
 ;
"RTN","PSBOPM",251,0)
CLEANALL        ; KILL ALL TMP LEVELS USED VARIABLES
"RTN","PSBOPM",252,0)
 K ^TMP("PSB",$J),^TMP("PSJ1",$J),TMP("PSBOIS",$J),TMP("PSBADDS",$J),TMP("PSBSOLS",$J),TMP("PSBIENS",$J),TMP("ARY",$J),DRG,DPTR,PSBOR,FLE,SBSC,TPE
"RTN","PSBOPM",253,0)
 Q
"RTN","PSBOPM",254,0)
 ;
"RTN","PSBOPM",255,0)
CLEANSUM        ; KILLL ALL BUT THE "PSBIENS" LEVEL
"RTN","PSBOPM",256,0)
 K ^TMP("PSB",$J),^TMP("PSJ1",$J),TMP("PSBIENS",$J),TMP("PSBOIS",$J),TMP("PSBADDS",$J),TMP("PSBSOLS",$J)
"RTN","PSBOPM",257,0)
 Q
"RTN","PSBOPM",258,0)
MAKELINE(X,CNT) ;LINE OF WHAT'S PASSED IN CNT TIMES
"RTN","PSBOPM",259,0)
 N Y,Z
"RTN","PSBOPM",260,0)
 S Y=""
"RTN","PSBOPM",261,0)
 F Z=1:1:CNT S Y=Y_X
"RTN","PSBOPM",262,0)
 Q Y
"RTN","PSBOPM",263,0)
 ;
"RTN","PSBOPM",264,0)
PARSE(X,CNT) ;Split text for wrapping.
"RTN","PSBOPM",265,0)
 S CNTX="UOA"_CNT,@CNTX=@CNTX_$E(X,CNT,(CNT+14)),UOAX=""
"RTN","PSBOPM",266,0)
 F  S:$F(@CNTX,", ",+UOAX)>0 UOAX=$F(@CNTX,", ",+UOAX)  Q:'$F(@CNTX,", ",+UOAX)
"RTN","PSBOPM",267,0)
 I UOAX<1 F  S:$F(@CNTX," ",+UOAX)>0 UOAX=$F(@CNTX," ",+UOAX)  Q:'$F(@CNTX," ",+UOAX)
"RTN","PSBOPM",268,0)
 I UOAX>1,(($L(UOA)-(CNT+14))>0) S CNTXX=$E(@CNTX,1,UOAX-1),@("UOA"_(CNT+15))=$E(@CNTX,UOAX,UOAX+14),@CNTX=CNTXX
"RTN","PSBOPM",269,0)
 Q
"RTN","PSBOPM",270,0)
 ;
"RTN","PSBOPM",271,0)
PARSEM(PSBMED,PSBCNT) ;Split text for wrapping meds, PSB*3*72
"RTN","PSBOPM",272,0)
 N PSBCNTX,PSBMEDX,PSBMEDX,PSBCNTXX
"RTN","PSBOPM",273,0)
 S PSBCNTX="PSBMED"_PSBCNT,@PSBCNTX=@PSBCNTX_$E(PSBMED,PSBCNT,(PSBCNT+39)),PSBMEDX=""
"RTN","PSBOPM",274,0)
 F  S:$F(@PSBCNTX,", ",+PSBMEDX)>0 PSBMEDX=$F(@PSBCNTX,", ",+PSBMEDX)  Q:'$F(@PSBCNTX,", ",+PSBMEDX)
"RTN","PSBOPM",275,0)
 I PSBMEDX<1 F  S:$F(@PSBCNTX," ",+PSBMEDX)>0 PSBMEDX=$F(@PSBCNTX," ",+PSBMEDX)  Q:'$F(@PSBCNTX," ",+PSBMEDX)
"RTN","PSBOPM",276,0)
 I PSBMEDX>1,(($L(MED)-(PSBCNT+39))>0) S PSBCNTXX=$E(@PSBCNTX,1,PSBMEDX-1),@("PSBMED"_(PSBCNT+40))=$E(@PSBCNTX,PSBMEDX,PSBMEDX+39),@PSBCNTX=PSBCNTXX
"RTN","PSBOPM",277,0)
 Q
"RTN","PSBOWA")
0^31^B170448047^B133947862
"RTN","PSBOWA",1,0)
PSBOWA ;BIRMINGHAM/EFC-WARD ADMINISTRATION TIMES ;03/06/16 3:06pm
"RTN","PSBOWA",2,0)
 ;;3.0;BAR CODE MED ADMIN;**9,32,56,70,80,83**;Mar 2004;Build 89
"RTN","PSBOWA",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBOWA",4,0)
 ;
"RTN","PSBOWA",5,0)
 ; Reference/IA
"RTN","PSBOWA",6,0)
 ; ^DPT/10035
"RTN","PSBOWA",7,0)
 ; EN^PSJBCMA/2828
"RTN","PSBOWA",8,0)
 ;
"RTN","PSBOWA",9,0)
 ;*70 - add Clinic filter and clinic name into array
"RTN","PSBOWA",10,0)
 ;      1480: Add clinic to header and breakdown by clinic in detail.
"RTN","PSBOWA",11,0)
 ;*83 - add ability to print Scheduled Removals on Patient report
"RTN","PSBOWA",12,0)
 ;    - count Removes in the Ward & Clinic reports.
"RTN","PSBOWA",13,0)
EN ;
"RTN","PSBOWA",14,0)
 N PSBHDR,PSBGTOT,PSBTOT,PSBINDX,DFN,PSBX,PSBY,PSBSM,PSBADST,PSBZ
"RTN","PSBOWA",15,0)
 N PSBSRCHL,PSBSORT,PSBCL                                      ;*70
"RTN","PSBOWA",16,0)
 N RMDT,PSBIEN
"RTN","PSBOWA",17,0)
 S PSBSORT=$P(PSBRPT(.1),U,1)                   ;init PSBSORT  ;*70
"RTN","PSBOWA",18,0)
 S (Y,PSBEVDT)=$P(PSBRPT(.1),U,6) D D^DIQ
"RTN","PSBOWA",19,0)
 S PSBHDR(2)="ADMINISTRATION DATE: "_Y
"RTN","PSBOWA",20,0)
 ;check Clinic or Nurs Unit search list                        ;*70
"RTN","PSBOWA",21,0)
 S PSBSRCHL=$$SRCHLIST^PSBOHDR()
"RTN","PSBOWA",22,0)
 D:$G(PSBSRCHL)]""
"RTN","PSBOWA",23,0)
 .S PSBHDR(3)=""
"RTN","PSBOWA",24,0)
 .S:$P(PSBRPT(4),U,2)="C" PSBHDR(4)="Clinic Search List: "
"RTN","PSBOWA",25,0)
 .S:$P(PSBRPT(4),U,2)="I" PSBHDR(4)="Ward Location: "
"RTN","PSBOWA",26,0)
 ;
"RTN","PSBOWA",27,0)
 S (Y,PSBEVDT2)=$S($P(PSBRPT(.1),U,8)']"":PSBEVDT,1:$P(PSBRPT(.1),U,8)) D D^DIQ
"RTN","PSBOWA",28,0)
 S PSBHDR(2)=PSBHDR(2)_" to "_Y
"RTN","PSBOWA",29,0)
 ;
"RTN","PSBOWA",30,0)
 I PSBSORT="P" D PATIENT
"RTN","PSBOWA",31,0)
 I PSBSORT="W" D WARD
"RTN","PSBOWA",32,0)
 I PSBSORT="C" D CLINIC
"RTN","PSBOWA",33,0)
 D QUIT
"RTN","PSBOWA",34,0)
 Q
"RTN","PSBOWA",35,0)
 ;
"RTN","PSBOWA",36,0)
PATIENT ;* * *  Print By Patient  * * *
"RTN","PSBOWA",37,0)
 F PSBIX=0:1 S PSBRPDT=$$FMADD^XLFDT(PSBEVDT,PSBIX) Q:PSBRPDT>PSBEVDT2!(PSBRPDT="-1")  D
"RTN","PSBOWA",38,0)
 .; * * *  Print By Patient  * * *
"RTN","PSBOWA",39,0)
 .D:PSBSORT="P"
"RTN","PSBOWA",40,0)
 ..S DFN=PSBDFN
"RTN","PSBOWA",41,0)
 ..K ^TMP("PSJ",$J)
"RTN","PSBOWA",42,0)
 ..D EN^PSJBCMA(PSBDFN,PSBRPDT,"")
"RTN","PSBOWA",43,0)
 ..D:PSBCLINORD                                     ;*70 filer clinics
"RTN","PSBOWA",44,0)
 ... I $D(PSBRPT(2)) D FILTERCO^PSBO Q
"RTN","PSBOWA",45,0)
 ... D INCLUDCO^PSBVDLU1
"RTN","PSBOWA",46,0)
 ..I 'PSBCLINORD D REMOVECO^PSBVDLU1                ;*70
"RTN","PSBOWA",47,0)
 ..F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:'PSBX  D
"RTN","PSBOWA",48,0)
 ...Q:^TMP("PSJ",$J,PSBX,0)=-1  ; No Orders
"RTN","PSBOWA",49,0)
 ...D CLEAN^PSBVT
"RTN","PSBOWA",50,0)
 ...D PSJ^PSBVT(PSBX)
"RTN","PSBOWA",51,0)
 ...Q:PSBSCHT'="C"  ; Not a Continuous
"RTN","PSBOWA",52,0)
 ...Q:PSBOSTS'="A"&(PSBOSTS'="R")&(PSBOSTS'="O")  ; Active? - PSB*3*56 adds on call as an active status
"RTN","PSBOWA",53,0)
 ...S (PSBCADM,PSBYES,PSBODD)=0
"RTN","PSBOWA",54,0)
 ...S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBOWA",55,0)
 ...S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1
"RTN","PSBOWA",56,0)
 ...F I=1:1 Q:$P(PSBSCH,"-",I)=""  I ($P(PSBSCH,"-",I)?2N)!($P(PSBSCH,"-",I)?4N) S PSBYES=1
"RTN","PSBOWA",57,0)
 ...I PSBYES,PSBADST="",PSBSCHT'="O",PSBSCHT'="OC",PSBSCHT'="P" D  Q
"RTN","PSBOWA",58,0)
 ....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Admin times required",PSBSCH)
"RTN","PSBOWA",59,0)
 ...I "PCS"'[PSBIVT,PSBONX'["U" Q
"RTN","PSBOWA",60,0)
 ...I PSBIVT["S",PSBISYR'=1 Q  ;    allow intermittent syringe only
"RTN","PSBOWA",61,0)
 ...I PSBIVT["C",PSBCHEMT'="P",PSBISYR'=1 Q
"RTN","PSBOWA",62,0)
 ...I PSBIVT["C",PSBCHEMT="A" Q  ;     allow Chemo with intermittent syringe or Piggyback type only
"RTN","PSBOWA",63,0)
 ...I PSBFREQ="D" S PSBFREQ=""
"RTN","PSBOWA",64,0)
 ...I 'PSBYES,PSBFREQ<1 D  Q
"RTN","PSBOWA",65,0)
 ....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid frequency received from order",PSBSCH)
"RTN","PSBOWA",66,0)
 ...I +PSBFREQ>0 D
"RTN","PSBOWA",67,0)
 ....I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBOWA",68,0)
 ...I PSBODD,PSBADST'="" D  Q
"RTN","PSBOWA",69,0)
 ....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Administration Times on ODD SCHEDULE",PSBSCH)
"RTN","PSBOWA",70,0)
 ...K ^TMP("PSB",$J,"GETADMIN")
"RTN","PSBOWA",71,0)
 ...I PSBADST="",+$G(PSBFREQ)>0,$G(PSBFREQ)<30 S PSBADST="MESSAGE",$P(PSBTOT(PSBADST,PSBOITX,PSBONX),2)="Due every "_PSBFREQ_" Mins" Q
"RTN","PSBOWA",72,0)
 ...I PSBADST="",+$G(PSBFREQ)'<30 S PSBADST=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBRPDT) S:PSBADST'="" PSBCADM=1
"RTN","PSBOWA",73,0)
 ...E  S ^TMP("PSB",$J,"GETADMIN",0)=PSBADST
"RTN","PSBOWA",74,0)
 ...Q:PSBADST=""
"RTN","PSBOWA",75,0)
 ...I PSBONX'["V" D  Q:'$$OKAY^PSBVDLU1(PSBOST,PSBRPDT,PSBSCH,PSBONX,PSBOIT,PSBFREQ)
"RTN","PSBOWA",76,0)
 ...I PSBONX["V",PSBSCH'=""  Q:'$$OKAY^PSBVDLU1(PSBOST,PSBRPDT,PSBSCH,PSBONX,PSBOIT,PSBFREQ)
"RTN","PSBOWA",77,0)
 ...F PSBXX=0:1 Q:'$D(^TMP("PSB",$J,"GETADMIN",PSBXX))  S PSBADST=$G(^TMP("PSB",$J,"GETADMIN",PSBXX)) D
"RTN","PSBOWA",78,0)
 ....F Y=1:1:$L(PSBADST,"-") S Z=+("."_$P(PSBADST,"-",Y)) D
"RTN","PSBOWA",79,0)
 .....Q:(PSBRPDT+Z)<$E(PSBOST,1,12)  ; Start Date
"RTN","PSBOWA",80,0)
 .....Q:(PSBRPDT+Z)'<$E(PSBOSP,1,12)  ; Stop Date
"RTN","PSBOWA",81,0)
 .....;For Invalid admin times
"RTN","PSBOWA",82,0)
 .....D:($P(PSBADST,"-",Y)'?2N)&($P(PSBADST,"-",Y)'?4N)
"RTN","PSBOWA",83,0)
 ......D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid Admin times",PSBSCH)
"RTN","PSBOWA",84,0)
 .....S PSBSM=$S(PSBHSM=1:"HSM",PSBSM=1:"SM",1:"")
"RTN","PSBOWA",85,0)
 .....;*** Local array to include order no  
"RTN","PSBOWA",86,0)
 .....S PSBTOT(PSBRPDT+Z,PSBOITX_"[sort2]",PSBONX)=PSBSM_U_"Dosage: "_PSBDOSE_"  Route: "_PSBMR_"  "_PSBIFR_U_PSBCLORD         ;add clinic name *70   ;sort Gives 2nd *83
"RTN","PSBOWA",87,0)
 ;
"RTN","PSBOWA",88,0)
 ;process removes for MRR meds and add to print array if applies
"RTN","PSBOWA",89,0)
 K ^TMP("PSB",$J,"RM")
"RTN","PSBOWA",90,0)
 D GETREMOV^PSBO1(DFN)
"RTN","PSBOWA",91,0)
 ;
"RTN","PSBOWA",92,0)
 D:$D(^TMP("PSB",$J,"RM"))
"RTN","PSBOWA",93,0)
 .F PSBIEN=0:0 S PSBIEN=$O(^TMP("PSB",$J,"RM",PSBIEN)) Q:'PSBIEN  D
"RTN","PSBOWA",94,0)
 ..S RMDT=$P(^TMP("PSB",$J,"RM",PSBIEN),U,1)
"RTN","PSBOWA",95,0)
 ..Q:($P(RMDT,".")<PSBEVDT)!($P(RMDT,".")>PSBEVDT2)
"RTN","PSBOWA",96,0)
 ..S PSBCLORD=$P(^TMP("PSB",$J,"RM",PSBIEN),U,6)  ;CLOR
"RTN","PSBOWA",97,0)
 ..Q:(PSBCLINORD)&(PSBCLORD="")
"RTN","PSBOWA",98,0)
 ..Q:('PSBCLINORD)&(PSBCLORD]"")
"RTN","PSBOWA",99,0)
 ..S PSBONX=$P(^TMP("PSB",$J,"RM",PSBIEN),U,2)    ;ONX
"RTN","PSBOWA",100,0)
 ..S PSBOITX=$P(^TMP("PSB",$J,"RM",PSBIEN),U,3)   ;OITX
"RTN","PSBOWA",101,0)
 ..S PSBOSTS=$P(^TMP("PSB",$J,"RM",PSBIEN),U,4)   ;OSTS
"RTN","PSBOWA",102,0)
 ..S PSBOSP=$P(^TMP("PSB",$J,"RM",PSBIEN),U,5)    ;OSP
"RTN","PSBOWA",103,0)
 ..S PSBDOSE=$P(^TMP("PSB",$J,"RM",PSBIEN),U,7)   ;DOSE
"RTN","PSBOWA",104,0)
 ..S PSBMR=$P(^TMP("PSB",$J,"RM",PSBIEN),U,8)     ;MR
"RTN","PSBOWA",105,0)
 ..S PSBSM=$P(^TMP("PSB",$J,"RM",PSBIEN),U,9)     ;SM
"RTN","PSBOWA",106,0)
 ..S PSBSM=$S($G(PSBHSM)=1:"HSM",PSBSM=1:"SM",1:"")
"RTN","PSBOWA",107,0)
 ..S PSBIFR=""                             ;infuse rt n/a for MRR meds
"RTN","PSBOWA",108,0)
 ..S PSBTOT(RMDT,PSBOITX_"[sort1]",PSBONX)=PSBSM_U_"Dosage: "_PSBDOSE_"  Route: "_PSBMR_"  "_PSBIFR_U_PSBCLORD_U_"(RM)"   ;sort RMs 1st *83
"RTN","PSBOWA",109,0)
 ;
"RTN","PSBOWA",110,0)
 ;print the patient report
"RTN","PSBOWA",111,0)
 N PREVRPDT                                                       ;*83
"RTN","PSBOWA",112,0)
 S PSBHDR(1)="WARD ADMINISTRATION TIMES"
"RTN","PSBOWA",113,0)
 S Y=$P(PSBRPT(.1),U,6) D D^DIQ S PSBHDR(2)="ADMINISTRATION DATE: "_Y
"RTN","PSBOWA",114,0)
 S Y=PSBEVDT2 D D^DIQ S PSBHDR(2)=PSBHDR(2)_" to "_Y
"RTN","PSBOWA",115,0)
 S PREVRPDT=""
"RTN","PSBOWA",116,0)
 W:'$D(PSBTOT) $$PTHDR()    ;insure a header when no records found
"RTN","PSBOWA",117,0)
 S PSBX="" F  S PSBX=$O(PSBTOT(PSBX)) Q:PSBX=""  D
"RTN","PSBOWA",118,0)
 .S PSBRPDT=$P(PSBX,".")
"RTN","PSBOWA",119,0)
 .;write hdr for each date found
"RTN","PSBOWA",120,0)
 .I PREVRPDT'=PSBRPDT W $$PTHDR() S PREVRPDT=PSBRPDT
"RTN","PSBOWA",121,0)
 .W !
"RTN","PSBOWA",122,0)
 .S PSBY="" F  S PSBY=$O(PSBTOT(PSBX,PSBY)) Q:PSBY=""  D
"RTN","PSBOWA",123,0)
 ..S PSBZ="" F  S PSBZ=$O(PSBTOT(PSBX,PSBY,PSBZ)) Q:PSBZ=""  D
"RTN","PSBOWA",124,0)
 ...W:$Y>(IOSL-6) $$PTFTR^PSBOHDR(),$$PTHDR()
"RTN","PSBOWA",125,0)
 ...I PSBX="MESSAGE" W !,$P(PSBTOT(PSBX,PSBY,PSBZ),U,1),?20,PSBY Q
"RTN","PSBOWA",126,0)
 ...W:PSBCLINORD !,$P(PSBTOT(PSBX,PSBY,PSBZ),U,3)
"RTN","PSBOWA",127,0)
 ...W !,$$TIMEOUT^PSBUTL(PSBX)," ",$P(PSBTOT(PSBX,PSBY,PSBZ),U,4),?13  ;remove code piece 4 if exists *83
"RTN","PSBOWA",128,0)
 ...W $P(PSBTOT(PSBX,PSBY,PSBZ),U,1),?20,$P(PSBY,"[sort"),?55,$P(PSBTOT(PSBX,PSBY,PSBZ),U,2)   ;*83
"RTN","PSBOWA",129,0)
 W $$PTFTR^PSBOHDR()        ;write end of rpt footer
"RTN","PSBOWA",130,0)
 Q
"RTN","PSBOWA",131,0)
 ;
"RTN","PSBOWA",132,0)
WARD ;* * * *  Print By Ward  * * *
"RTN","PSBOWA",133,0)
 F PSBIX=0:1 S PSBRPDT=$$FMADD^XLFDT(PSBEVDT,PSBIX) Q:PSBRPDT>PSBEVDT2!(PSBRPDT="-1")  D
"RTN","PSBOWA",134,0)
 .F X=0,.01:.01:.24 S PSBGTOT(X)=""
"RTN","PSBOWA",135,0)
 .W $$WRDHDR()
"RTN","PSBOWA",136,0)
 .S PSBINDX=""
"RTN","PSBOWA",137,0)
 .F  S PSBINDX=$O(^TMP("PSBO",$J,"B",PSBINDX)) Q:PSBINDX=""  D
"RTN","PSBOWA",138,0)
 ..F DFN=0:0 S DFN=$O(^TMP("PSBO",$J,"B",PSBINDX,DFN)) Q:'DFN  D
"RTN","PSBOWA",139,0)
 ...W:$Y>(IOSL-10) $$WRDHDR()
"RTN","PSBOWA",140,0)
 ...W !,$P(^DPT(DFN,0),U,1),!,"SSN: ",$P(^(0),U,9)
"RTN","PSBOWA",141,0)
 ...W !,"Ward: ",$E($G(^DPT(DFN,.1)),1,25),!,"Room-Bed:  ",$E($G(^(.101)),1,21)
"RTN","PSBOWA",142,0)
 ...W ?32
"RTN","PSBOWA",143,0)
 ...F X=0,.01:.01:.24 S PSBTOT(X)=""
"RTN","PSBOWA",144,0)
 ...K ^TMP("PSJ",$J)
"RTN","PSBOWA",145,0)
 ...D EN^PSJBCMA(DFN,$P(PSBRPT(.1),U,6))
"RTN","PSBOWA",146,0)
 ...D REMOVECO^PSBVDLU1        ;*70 always remove CO orders from ward
"RTN","PSBOWA",147,0)
 ...F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:'PSBX  D
"RTN","PSBOWA",148,0)
 ....Q:^TMP("PSJ",$J,PSBX,0)=-1  ; No Orders
"RTN","PSBOWA",149,0)
 ....D CLEAN^PSBVT
"RTN","PSBOWA",150,0)
 ....D PSJ^PSBVT(PSBX)
"RTN","PSBOWA",151,0)
 ....Q:PSBSCHT'="C"  ; Not a Continuous
"RTN","PSBOWA",152,0)
 ....Q:PSBOSTS'="A"&(PSBOSTS'="R")&(PSBOSTS'="O")  ; Active? - PSB*3*56 adds on call as an active status
"RTN","PSBOWA",153,0)
 ....Q:PSBSM=1  ;Self med?
"RTN","PSBOWA",154,0)
 ....S (PSBCADM,PSBYES,PSBODD)=0
"RTN","PSBOWA",155,0)
 ....S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBOWA",156,0)
 ....S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1
"RTN","PSBOWA",157,0)
 ....F I=1:1 Q:$P(PSBSCH,"-",I)=""  I ($P(PSBSCH,"-",I)?2N)!($P(PSBSCH,"-",I)?4N) S PSBYES=1
"RTN","PSBOWA",158,0)
 ....I PSBYES,PSBADST="",PSBSCHT'="O",PSBSCHT'="OC",PSBSCHT'="P" D  Q
"RTN","PSBOWA",159,0)
 .....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Admin times required",PSBSCH)
"RTN","PSBOWA",160,0)
 ....I "PCS"'[PSBIVT,PSBONX'["U" Q
"RTN","PSBOWA",161,0)
 ....I PSBIVT["S",PSBISYR'=1 Q  ;    allow intermittent syringe only
"RTN","PSBOWA",162,0)
 ....I PSBIVT["C",PSBCHEMT'="P",PSBISYR'=1 Q
"RTN","PSBOWA",163,0)
 ....I PSBIVT["C",PSBCHEMT="A" Q  ;     allow Chemo with intermittent syringe or Piggyback type only
"RTN","PSBOWA",164,0)
 ....I PSBFREQ="D" S PSBFREQ=""
"RTN","PSBOWA",165,0)
 ....I 'PSBYES,PSBFREQ<1 D  Q
"RTN","PSBOWA",166,0)
 .....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid frequency received from order",PSBSCH)
"RTN","PSBOWA",167,0)
 ....I +PSBFREQ>0 D
"RTN","PSBOWA",168,0)
 .....I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBOWA",169,0)
 ....I PSBODD,PSBADST'="" D  Q
"RTN","PSBOWA",170,0)
 .....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Administration Times on ODD SCHEDULE",PSBSCH)
"RTN","PSBOWA",171,0)
 ....K ^TMP("PSB",$J,"GETADMIN")
"RTN","PSBOWA",172,0)
 ....I PSBADST="" S PSBADST=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBRPDT) S:PSBADST'="" PSBCADM=1
"RTN","PSBOWA",173,0)
 ....E  S ^TMP("PSB",$J,"GETADMIN",0)=PSBADST
"RTN","PSBOWA",174,0)
 ....Q:PSBADST=""
"RTN","PSBOWA",175,0)
 ....I PSBONX'["V" D  Q:'$$OKAY^PSBVDLU1(PSBOST,PSBRPDT,PSBSCH,PSBONX,PSBOIT,PSBFREQ)           ;*70
"RTN","PSBOWA",176,0)
 ....I PSBONX["V",PSBSCH'=""  Q:'$$OKAY^PSBVDLU1(PSBOST,PSBRPDT,PSBSCH,PSBONX,PSBOIT,PSBFREQ)   ;*70
"RTN","PSBOWA",177,0)
 ....F PSBXX=0:1 Q:'$D(^TMP("PSB",$J,"GETADMIN",PSBXX))  S PSBADST=$G(^TMP("PSB",$J,"GETADMIN",PSBXX)) D
"RTN","PSBOWA",178,0)
 .....F Y=1:1:$L(PSBADST,"-") S Z=+("."_$E($P(PSBADST,"-",Y),1,2)) D
"RTN","PSBOWA",179,0)
 ......Q:((PSBRPDT+Z)<$E(PSBOST,1,12))&($G(Z)'=0)    ;Start Date
"RTN","PSBOWA",180,0)
 ......Q:(PSBRPDT+Z)'<$E(PSBOSP,1,12)                ;Stop Date
"RTN","PSBOWA",181,0)
 ......;For invalid admin times
"RTN","PSBOWA",182,0)
 ......D:($P(PSBADST,"-",Y)'?2N)&($P(PSBADST,"-",Y)'?4N)
"RTN","PSBOWA",183,0)
 .......D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid Admin times",PSBSCH)
"RTN","PSBOWA",184,0)
 ......S PSBTOT(Z)=PSBTOT(Z)+1
"RTN","PSBOWA",185,0)
 ......S PSBGTOT(Z)=PSBGTOT(Z)+1
"RTN","PSBOWA",186,0)
 ......D:PSBMRRFL      ;mrr meds admins have a Remove, count it *83
"RTN","PSBOWA",187,0)
 .......S PSBTOT(Z)=PSBTOT(Z)+1
"RTN","PSBOWA",188,0)
 .......S PSBGTOT(Z)=PSBGTOT(Z)+1
"RTN","PSBOWA",189,0)
 ...;print ward stats rpt from array
"RTN","PSBOWA",190,0)
 ...S PSBX="" F  S PSBX=$O(PSBTOT(PSBX)) Q:$G(PSBX)=""  W $J(PSBTOT(PSBX),4)
"RTN","PSBOWA",191,0)
 ...W !,$TR($J("",IOM)," ","-")
"RTN","PSBOWA",192,0)
 .W !!,$TR($J("",IOM)," ","=")
"RTN","PSBOWA",193,0)
 .W !?32 F X=0,.01:.01:.24 W $J($E(X_"00",2,3),4)
"RTN","PSBOWA",194,0)
 .W !,"Hourly Totals:",?32
"RTN","PSBOWA",195,0)
 .S PSBGTOT=0
"RTN","PSBOWA",196,0)
 .S PSBX="" F  S PSBX=$O(PSBGTOT(PSBX)) Q:$G(PSBX)=""  D
"RTN","PSBOWA",197,0)
 ..W $J(PSBGTOT(PSBX),4)
"RTN","PSBOWA",198,0)
 ..S PSBGTOT=PSBGTOT+PSBGTOT(PSBX)
"RTN","PSBOWA",199,0)
 .W !!,"Ward Total:",?32,$J(PSBGTOT,4)
"RTN","PSBOWA",200,0)
 .W !!,$TR($J("",IOM)," ","-")
"RTN","PSBOWA",201,0)
 Q
"RTN","PSBOWA",202,0)
 ;
"RTN","PSBOWA",203,0)
CLINIC ;* * *  Print By Clinic  * * *                              ;*70-1480
"RTN","PSBOWA",204,0)
 F PSBIX=0:1 S PSBRPDT=$$FMADD^XLFDT(PSBEVDT,PSBIX) Q:PSBRPDT>PSBEVDT2!(PSBRPDT="-1")  D
"RTN","PSBOWA",205,0)
 .F X=0,.01:.01:.24 S PSBGTOT(PSBRPDT,X)=""
"RTN","PSBOWA",206,0)
 .S PSBINDX=""
"RTN","PSBOWA",207,0)
 .F  S PSBINDX=$O(^TMP("PSBO",$J,"B",PSBINDX)) Q:PSBINDX=""  D
"RTN","PSBOWA",208,0)
 ..F DFN=0:0 S DFN=$O(^TMP("PSBO",$J,"B",PSBINDX,DFN)) Q:'DFN  D
"RTN","PSBOWA",209,0)
 ...K ^TMP("PSJ",$J)
"RTN","PSBOWA",210,0)
 ...D EN^PSJBCMA(DFN,$P(PSBRPT(.1),U,6))
"RTN","PSBOWA",211,0)
 ...;Filter in/out Clinic Orders               *70
"RTN","PSBOWA",212,0)
 ...D:PSBCLINORD
"RTN","PSBOWA",213,0)
 ....I $D(PSBRPT(2)) D FILTERCO^PSBO Q
"RTN","PSBOWA",214,0)
 ....D INCLUDCO^PSBVDLU1
"RTN","PSBOWA",215,0)
 ...F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:'PSBX  D
"RTN","PSBOWA",216,0)
 ....S PSBCL=$P($G(^TMP("PSJ",$J,PSBX,0)),U,11)
"RTN","PSBOWA",217,0)
 ....I PSBCL]"" F X=0,.01:.01:.24 S PSBTOT(PSBRPDT,DFN,PSBCL,X)=""
"RTN","PSBOWA",218,0)
 ...F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:'PSBX  D
"RTN","PSBOWA",219,0)
 ....S PSBCL=$P($G(^TMP("PSJ",$J,PSBX,0)),U,11)
"RTN","PSBOWA",220,0)
 ....Q:^TMP("PSJ",$J,PSBX,0)=-1  ; No Orders
"RTN","PSBOWA",221,0)
 ....D CLEAN^PSBVT
"RTN","PSBOWA",222,0)
 ....D PSJ^PSBVT(PSBX)
"RTN","PSBOWA",223,0)
 ....Q:PSBSCHT'="C"  ; Not a Continuous
"RTN","PSBOWA",224,0)
 ....Q:PSBOSTS'="A"&(PSBOSTS'="R")&(PSBOSTS'="O")  ; Active? - PSB*3*56 adds on call as an active status
"RTN","PSBOWA",225,0)
 ....Q:PSBSM=1  ;Self med?
"RTN","PSBOWA",226,0)
 ....S (PSBCADM,PSBYES,PSBODD)=0
"RTN","PSBOWA",227,0)
 ....S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBOWA",228,0)
 ....S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1
"RTN","PSBOWA",229,0)
 ....F I=1:1 Q:$P(PSBSCH,"-",I)=""  I ($P(PSBSCH,"-",I)?2N)!($P(PSBSCH,"-",I)?4N) S PSBYES=1
"RTN","PSBOWA",230,0)
 ....I PSBYES,PSBADST="",PSBSCHT'="O",PSBSCHT'="OC",PSBSCHT'="P" D  Q
"RTN","PSBOWA",231,0)
 .....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Admin times required",PSBSCH)
"RTN","PSBOWA",232,0)
 ....I "PCS"'[PSBIVT,PSBONX'["U" Q
"RTN","PSBOWA",233,0)
 ....I PSBIVT["S",PSBISYR'=1 Q  ;    allow intermittent syringe only
"RTN","PSBOWA",234,0)
 ....I PSBIVT["C",PSBCHEMT'="P",PSBISYR'=1 Q
"RTN","PSBOWA",235,0)
 ....I PSBIVT["C",PSBCHEMT="A" Q  ;     allow Chemo with intermittent syringe or Piggyback type only
"RTN","PSBOWA",236,0)
 ....I PSBFREQ="D" S PSBFREQ=""
"RTN","PSBOWA",237,0)
 ....I 'PSBYES,PSBFREQ<1 D  Q
"RTN","PSBOWA",238,0)
 .....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid frequency received from order",PSBSCH)
"RTN","PSBOWA",239,0)
 ....I +PSBFREQ>0 D
"RTN","PSBOWA",240,0)
 .....I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBOWA",241,0)
 ....I PSBODD,PSBADST'="" D  Q
"RTN","PSBOWA",242,0)
 .....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Administration Times on ODD SCHEDULE",PSBSCH)
"RTN","PSBOWA",243,0)
 ....K ^TMP("PSB",$J,"GETADMIN")
"RTN","PSBOWA",244,0)
 ....I PSBADST="" S PSBADST=$$GETADMIN^PSBVDLU1(DFN,PSBONX,PSBOST,PSBFREQ,PSBRPDT) S:PSBADST'="" PSBCADM=1
"RTN","PSBOWA",245,0)
 ....E  S ^TMP("PSB",$J,"GETADMIN",0)=PSBADST
"RTN","PSBOWA",246,0)
 ....Q:PSBADST=""
"RTN","PSBOWA",247,0)
 ....I PSBONX'["V" D  Q:'$$OKAY^PSBVDLU1(PSBOST,PSBRPDT,PSBSCH,PSBONX,PSBOIT,PSBFREQ)
"RTN","PSBOWA",248,0)
 ....I PSBONX["V",PSBSCH'=""  Q:'$$OKAY^PSBVDLU1(PSBOST,PSBRPDT,PSBSCH,PSBONX,PSBOIT,PSBFREQ)
"RTN","PSBOWA",249,0)
 ....F PSBXX=0:1 Q:'$D(^TMP("PSB",$J,"GETADMIN",PSBXX))  S PSBADST=$G(^TMP("PSB",$J,"GETADMIN",PSBXX)) D
"RTN","PSBOWA",250,0)
 .....F Y=1:1:$L(PSBADST,"-") S Z=+("."_$E($P(PSBADST,"-",Y),1,2)) D
"RTN","PSBOWA",251,0)
 ......Q:((PSBRPDT)<$E(PSBOST,1,12))&($G(Z)'=0)  ;Start Date
"RTN","PSBOWA",252,0)
 ......Q:(PSBRPDT)'<$E(PSBOSP,1,12)              ;Stop Date
"RTN","PSBOWA",253,0)
 ......;For invalid admin times
"RTN","PSBOWA",254,0)
 ......D:($P(PSBADST,"-",Y)'?2N)&($P(PSBADST,"-",Y)'?4N)
"RTN","PSBOWA",255,0)
 .......D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid Admin times",PSBSCH)
"RTN","PSBOWA",256,0)
 ......S PSBTOT(PSBRPDT,DFN,PSBCL,Z)=PSBTOT(PSBRPDT,DFN,PSBCL,Z)+1
"RTN","PSBOWA",257,0)
 ......S PSBGTOT(PSBRPDT,Z)=PSBGTOT(PSBRPDT,Z)+1
"RTN","PSBOWA",258,0)
 ......D:PSBMRRFL       ;mrr meds admins have a Remove, count it *83
"RTN","PSBOWA",259,0)
 .......S PSBTOT(PSBRPDT,DFN,PSBCL,Z)=PSBTOT(PSBRPDT,DFN,PSBCL,Z)+1
"RTN","PSBOWA",260,0)
 .......S PSBGTOT(PSBRPDT,Z)=PSBGTOT(PSBRPDT,Z)+1
"RTN","PSBOWA",261,0)
 .;
"RTN","PSBOWA",262,0)
 .;print clinic stats rpt from array
"RTN","PSBOWA",263,0)
 .S PSBRPDT="" F  S PSBRPDT=$O(PSBTOT(PSBRPDT)) Q:PSBRPDT=""  D
"RTN","PSBOWA",264,0)
 ..W $$CLNHDR()
"RTN","PSBOWA",265,0)
 ..S DFN="" F  S DFN=$O(PSBTOT(PSBRPDT,DFN)) Q:DFN=""  D
"RTN","PSBOWA",266,0)
 ...W:$Y>(IOSL-10) $$CLNHDR()
"RTN","PSBOWA",267,0)
 ...W !,$P(^DPT(DFN,0),U),!,$P(^(0),U,9)
"RTN","PSBOWA",268,0)
 ...S PSBCL="" F  S PSBCL=$O(PSBTOT(PSBRPDT,DFN,PSBCL)) Q:PSBCL=""  D
"RTN","PSBOWA",269,0)
 ....W:$Y>(IOSL-10) $$CLNHDR()
"RTN","PSBOWA",270,0)
 ....W !,PSBCL,?32
"RTN","PSBOWA",271,0)
 ....S PSBX=""  F  S PSBX=$O(PSBTOT(PSBRPDT,DFN,PSBCL,PSBX)) Q:PSBX=""  D
"RTN","PSBOWA",272,0)
 .....W:$Y>(IOSL-10) $$CLNHDR()
"RTN","PSBOWA",273,0)
 .....W $J(PSBTOT(PSBRPDT,DFN,PSBCL,PSBX),4)
"RTN","PSBOWA",274,0)
 ...W !,$TR($J("",IOM)," ","-")
"RTN","PSBOWA",275,0)
 ..W !!,$TR($J("",IOM)," ","=")
"RTN","PSBOWA",276,0)
 ..W !?32 F X=0,.01:.01:.24 W $J($E(X_"00",2,3),4)
"RTN","PSBOWA",277,0)
 ..W !,"Hourly Totals:",?32
"RTN","PSBOWA",278,0)
 ..S PSBGTOT=0
"RTN","PSBOWA",279,0)
 ..S PSBX="" F  S PSBX=$O(PSBGTOT(PSBRPDT,PSBX)) Q:$G(PSBX)=""  D
"RTN","PSBOWA",280,0)
 ...W $J(PSBGTOT(PSBRPDT,PSBX),4)
"RTN","PSBOWA",281,0)
 ...S PSBGTOT=PSBGTOT+PSBGTOT(PSBRPDT,PSBX)
"RTN","PSBOWA",282,0)
 ..W !!,"Report Date Total:",?32,$J(PSBGTOT,4)
"RTN","PSBOWA",283,0)
 ..W !!,$TR($J("",IOM)," ","-")
"RTN","PSBOWA",284,0)
 Q
"RTN","PSBOWA",285,0)
 ;
"RTN","PSBOWA",286,0)
QUIT D CLEAN^PSBVT
"RTN","PSBOWA",287,0)
 K I,^TMP("PSJ",$J),^TMP("PSB",$J)
"RTN","PSBOWA",288,0)
 Q
"RTN","PSBOWA",289,0)
 ;
"RTN","PSBOWA",290,0)
 ;
"RTN","PSBOWA",291,0)
WRDHDR() ;
"RTN","PSBOWA",292,0)
 S PSBHDR(1)="WARD ADMINISTRATION TIMES"
"RTN","PSBOWA",293,0)
 D WARD^PSBOHDR(PSBWRD,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOWA",294,0)
 S Y=PSBRPDT D D^DIQ
"RTN","PSBOWA",295,0)
 W !,"Patient Name",?64,Y_" Administration Times"
"RTN","PSBOWA",296,0)
 W !,"Room-Bed",?32
"RTN","PSBOWA",297,0)
 F X=0,.01:.01:.24 W $J($E(X_"00",2,3),4)
"RTN","PSBOWA",298,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBOWA",299,0)
 Q ""
"RTN","PSBOWA",300,0)
 ;
"RTN","PSBOWA",301,0)
CLNHDR() ;
"RTN","PSBOWA",302,0)
 S PSBHDR(1)="CLINIC ADMINISTRATION TIMES"
"RTN","PSBOWA",303,0)
 D CLINIC^PSBOHDR(.PSBRPT,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOWA",304,0)
 ;
"RTN","PSBOWA",305,0)
 S Y=PSBRPDT D D^DIQ
"RTN","PSBOWA",306,0)
 W !,"Patient Name",?64,Y_" Administration Times"
"RTN","PSBOWA",307,0)
 W !,"SSN",!,"Location",?32                       ;*70
"RTN","PSBOWA",308,0)
 F X=0,.01:.01:.24 W $J($E(X_"00",2,3),4)
"RTN","PSBOWA",309,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBOWA",310,0)
 Q ""
"RTN","PSBOWA",311,0)
 ;
"RTN","PSBOWA",312,0)
PTHDR() ;
"RTN","PSBOWA",313,0)
 S PSBHDR(1)="PATIENT ADMINISTRATION TIMES"
"RTN","PSBOWA",314,0)
 D PT^PSBOHDR(PSBDFN,.PSBHDR,,,PSBSRCHL)
"RTN","PSBOWA",315,0)
 W:PSBCLINORD !,"Location"
"RTN","PSBOWA",316,0)
 W !,"Date/Time",?10,"Self Med",?20,"Medication",?55,"Dose/Route"
"RTN","PSBOWA",317,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBOWA",318,0)
 S Y=PSBRPDT D D^DIQ
"RTN","PSBOWA",319,0)
 W !!,Y,!
"RTN","PSBOWA",320,0)
 Q ""
"RTN","PSBPAR")
0^41^B31414192^B22807367
"RTN","PSBPAR",1,0)
PSBPAR ;BIRMINGHAM/EFC-BCMA PARAMETER MANAGEMENT ;03/06/16 3:06pm
"RTN","PSBPAR",2,0)
 ;;3.0;BAR CODE MED ADMIN;**13,28,83**;Mar 2004;Build 89
"RTN","PSBPAR",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBPAR",4,0)
 ;
"RTN","PSBPAR",5,0)
 ;*83 - Add RPC tags to store and retrieve the Body diagram.
"RTN","PSBPAR",6,0)
 ;
"RTN","PSBPAR",7,0)
EN ; Standard editting of parameters
"RTN","PSBPAR",8,0)
 K PSBDIV,PSBLIST,DIC
"RTN","PSBPAR",9,0)
 W !!,"BCMA Parameters Management",!!
"RTN","PSBPAR",10,0)
 W "You are currently logged onto Division: "_DUZ(2)
"RTN","PSBPAR",11,0)
 S DIC="^DIC(4,",DIC(0)="AEQM",DIC("A")="Select Division: " D ^DIC Q:+Y<1
"RTN","PSBPAR",12,0)
 S PSBDIV=+Y_";DIC(4,"
"RTN","PSBPAR",13,0)
 K DIR S DIR(0)="Y",DIR("A")="Edit Divisional Parameters",DIR("B")="Yes"
"RTN","PSBPAR",14,0)
 D ^DIR K DIR I Y D TED^XPAREDIT("PSB DIVISION","AB",PSBDIV)
"RTN","PSBPAR",15,0)
 K DIR S DIR(0)="Y",DIR("A")="Edit Default Lists",DIR("B")="Yes"
"RTN","PSBPAR",16,0)
 D ^DIR K DIR D:Y
"RTN","PSBPAR",17,0)
 .S DIR(0)="SO^1:Reasons Given PRN;2:Reasons Held;3:Reasons Refused;4:Injection Sites"
"RTN","PSBPAR",18,0)
 .S DIR("A")="Select Default List"
"RTN","PSBPAR",19,0)
 .F  W @IOF,!,"BCMA Default Lists",! D ^DIR Q:'Y  D
"RTN","PSBPAR",20,0)
 ..N DIR
"RTN","PSBPAR",21,0)
 ..I Y=1 D TED^XPAREDIT("PSB LIST REASONS GIVEN PRN","AB",PSBDIV) Q
"RTN","PSBPAR",22,0)
 ..I Y=2 D TED^XPAREDIT("PSB LIST REASONS HELD","AB",PSBDIV) Q
"RTN","PSBPAR",23,0)
 ..I Y=3 D TED^XPAREDIT("PSB LIST REASONS REFUSED","AB",PSBDIV) Q
"RTN","PSBPAR",24,0)
 ..I Y=4 D TED^XPAREDIT("PSB LIST INJECTION SITES","AB",PSBDIV) Q
"RTN","PSBPAR",25,0)
 Q
"RTN","PSBPAR",26,0)
 ;
"RTN","PSBPAR",27,0)
RPC(RESULTS,PSBCMD,PSBENT,PSBPAR,PSBINS,PSBVAL) ; Main RPC Hit Point
"RTN","PSBPAR",28,0)
 ;
"RTN","PSBPAR",29,0)
 ; RPC: PSB PARAMETER
"RTN","PSBPAR",30,0)
 ;
"RTN","PSBPAR",31,0)
 ; Description:
"RTN","PSBPAR",32,0)
 ; Called by client to return or set parameters
"RTN","PSBPAR",33,0)
 ;
"RTN","PSBPAR",34,0)
 N PSBERR,PSBTMP
"RTN","PSBPAR",35,0)
 D:PSBCMD="GETPAR" GETPAR(PSBENT,PSBPAR)
"RTN","PSBPAR",36,0)
 D:PSBCMD="GETLST" GETLST(PSBENT,PSBPAR)
"RTN","PSBPAR",37,0)
 D:PSBCMD="SETPAR" SETPAR(PSBENT,PSBPAR,PSBINS,PSBVAL)
"RTN","PSBPAR",38,0)
 D:PSBCMD="DELLST" DELLST(PSBENT,PSBPAR)
"RTN","PSBPAR",39,0)
 D:PSBCMD="GETDIV" GETDIV(PSBENT)
"RTN","PSBPAR",40,0)
 S:'$D(RESULTS) RESULTS(0)="-1^Unknown Internal Error "_PSBCMD
"RTN","PSBPAR",41,0)
 Q
"RTN","PSBPAR",42,0)
 ;
"RTN","PSBPAR",43,0)
GETDIV(PSBENT) ; Return a valid Entity pointer from user input
"RTN","PSBPAR",44,0)
 S X=$$FIND1^DIC(4,"","MX",PSBENT)
"RTN","PSBPAR",45,0)
 I +X<1 S RESULTS(0)="-1^Error, Station # "_PSBENT_" not found." Q
"RTN","PSBPAR",46,0)
 S RESULTS(0)="1^"_(+X)_";DIC(4,"
"RTN","PSBPAR",47,0)
 S RESULTS(1)=$$GET1^DIQ(4,+X_",",.01)_" ("_$$GET1^DIQ(4,+X_",",99)_")"
"RTN","PSBPAR",48,0)
 S RESULTS(2)=$$GET1^DIQ(4,+X_",",1.01)
"RTN","PSBPAR",49,0)
 S RESULTS(3)=$$GET1^DIQ(4,+X_",",1.02)
"RTN","PSBPAR",50,0)
 S RESULTS(4)=$$GET1^DIQ(4,+X_",",1.03)
"RTN","PSBPAR",51,0)
 S RESULTS(5)=$$GET1^DIQ(4,+X_",",.02)
"RTN","PSBPAR",52,0)
 S RESULTS(6)=$$GET1^DIQ(4,+X_",",1.04)
"RTN","PSBPAR",53,0)
 S PSBEDIV=+X  ;do NOT kill this variable - needed until gui context ends
"RTN","PSBPAR",54,0)
 Q
"RTN","PSBPAR",55,0)
 ;
"RTN","PSBPAR",56,0)
GETPAR(PSBENT,PSBPAR) ; Return a parameter
"RTN","PSBPAR",57,0)
 I PSBPAR="PSB 5 RIGHTS IV" S RESULTS(0)=$$GET^XPAR(PSBENT,PSBPAR,,"I") Q
"RTN","PSBPAR",58,0)
 I PSBPAR="PSB 5 RIGHTS UNITDOSE" S RESULTS(0)=$$GET^XPAR(PSBENT,PSBPAR,,"I") Q
"RTN","PSBPAR",59,0)
 S RESULTS(0)=$$GET^XPAR(PSBENT,PSBPAR,,"B")
"RTN","PSBPAR",60,0)
 Q
"RTN","PSBPAR",61,0)
 ;
"RTN","PSBPAR",62,0)
GETLST(PSBENT,PSBPAR) ; Return a parameter list
"RTN","PSBPAR",63,0)
 D GETLST^XPAR(.PSBTMP,PSBENT,PSBPAR,,.PSBERR)
"RTN","PSBPAR",64,0)
 I PSBERR S RESULTS(0)="-1^Error: "_(+PSBERR)_" "_$P(PSBERR,"^",2) Q
"RTN","PSBPAR",65,0)
 S RESULTS(0)=PSBTMP
"RTN","PSBPAR",66,0)
 F Y=0:0 S Y=$O(PSBTMP(Y)) Q:'Y  S RESULTS(Y)=$P(PSBTMP(Y),"^",2)
"RTN","PSBPAR",67,0)
 Q
"RTN","PSBPAR",68,0)
 ;
"RTN","PSBPAR",69,0)
SETPAR(PSBENT,PSBPAR,PSBINS,PSBVAL) ; Set a new parameter
"RTN","PSBPAR",70,0)
 D EN^XPAR(PSBENT,PSBPAR,PSBINS,PSBVAL,.PSBERR)
"RTN","PSBPAR",71,0)
 I 'PSBERR S RESULTS(0)="1^Success"
"RTN","PSBPAR",72,0)
 E  S RESULTS(0)="-1^Error: "_(+PSBERR)_" "_$P(PSBERR,"^",2)
"RTN","PSBPAR",73,0)
 Q
"RTN","PSBPAR",74,0)
 ;
"RTN","PSBPAR",75,0)
DELLST(PSBENT,PSBPAR) ; Clear a list
"RTN","PSBPAR",76,0)
 D NDEL^XPAR(PSBENT,PSBPAR,.PSBERR)
"RTN","PSBPAR",77,0)
 I 'PSBERR S RESULTS(0)="1^Success"
"RTN","PSBPAR",78,0)
 E  S RESULTS(0)="-1^Error: "_(+PSBERR)_" "_$P(PSBERR,"^",2)
"RTN","PSBPAR",79,0)
 Q
"RTN","PSBPAR",80,0)
 ;
"RTN","PSBPAR",81,0)
USRDEF(PSBPAR) ; Return a parameter for the user
"RTN","PSBPAR",82,0)
 Q $$GET^XPAR("ALL",PSBPAR)
"RTN","PSBPAR",83,0)
 ;
"RTN","PSBPAR",84,0)
RSTUSR ; Reset all a users parameters
"RTN","PSBPAR",85,0)
 N PSBUSR,PSBENT,RESULTS
"RTN","PSBPAR",86,0)
 S DIC="^VA(200,",DIC(0)="AEQM",DIC("A")="Select User to Reset: "
"RTN","PSBPAR",87,0)
 D ^DIC K DIC Q:+Y<1  S PSBUSR=+Y
"RTN","PSBPAR",88,0)
 W !!,"Are you sure you want to reset all parameters for this user"
"RTN","PSBPAR",89,0)
 S %=2 D YN^DICN Q:%'=1
"RTN","PSBPAR",90,0)
 W !,"Resetting..."
"RTN","PSBPAR",91,0)
 S PSBENT=PSBUSR_";VA(200,"
"RTN","PSBPAR",92,0)
 D DEL^XPAR(PSBENT,"PSB PRINTER USER DEFAULT",1)
"RTN","PSBPAR",93,0)
 D DEL^XPAR(PSBENT,"PSB VDL INCL BLANKS",1)
"RTN","PSBPAR",94,0)
 D DEL^XPAR(PSBENT,"PSB VDL INCL CONT",1)
"RTN","PSBPAR",95,0)
 D DEL^XPAR(PSBENT,"PSB VDL INCL IV MEDS",1)
"RTN","PSBPAR",96,0)
 D DEL^XPAR(PSBENT,"PSB VDL INCL ON-CALL",1)
"RTN","PSBPAR",97,0)
 D DEL^XPAR(PSBENT,"PSB VDL INCL ONE-TIME",1)
"RTN","PSBPAR",98,0)
 D DEL^XPAR(PSBENT,"PSB VDL INCL PRN",1)
"RTN","PSBPAR",99,0)
 D DEL^XPAR(PSBENT,"PSB VDL INCL UD MEDS",1)
"RTN","PSBPAR",100,0)
 D DEL^XPAR(PSBENT,"PSB VDL START TIME",1)
"RTN","PSBPAR",101,0)
 D DEL^XPAR(PSBENT,"PSB VDL STOP TIME",1)
"RTN","PSBPAR",102,0)
 D DEL^XPAR(PSBENT,"PSB WINDOW",1)
"RTN","PSBPAR",103,0)
 D DEL^XPAR(PSBENT,"PSB UNIT DOSE COLUMN WIDTHS",1)
"RTN","PSBPAR",104,0)
 D DEL^XPAR(PSBENT,"PSB VDL SORT COLUMN",1)
"RTN","PSBPAR",105,0)
 D DEL^XPAR(PSBENT,"PSB VDL PB SORT COLUMN",1)
"RTN","PSBPAR",106,0)
 D DEL^XPAR(PSBENT,"PSB VDL IV SORT COLUMN",1)
"RTN","PSBPAR",107,0)
 D DEL^XPAR(PSBENT,"PSB IV COLUMN WIDTHS",1)
"RTN","PSBPAR",108,0)
 D DEL^XPAR(PSBENT,"PSB IVPB COLUMN WIDTHS",1)
"RTN","PSBPAR",109,0)
 D DEL^XPAR(PSBENT,"PSB HKEY",1)
"RTN","PSBPAR",110,0)
 D DEL^XPAR(PSBENT,"PSB IDLE TIMEOUT",1)
"RTN","PSBPAR",111,0)
 D DEL^XPAR(PSBENT,"PSB GUI DEFAULT PRINTER",1)
"RTN","PSBPAR",112,0)
 D DEL^XPAR(PSBENT,"PSB COVERSHEET VIEWS COL SORT",1)
"RTN","PSBPAR",113,0)
 D DEL^XPAR(PSBENT,"PSB COVERSHEET V1 COL WIDTHS",1)
"RTN","PSBPAR",114,0)
 D DEL^XPAR(PSBENT,"PSB COVERSHEET V2 COL WIDTHS",1)
"RTN","PSBPAR",115,0)
 D DEL^XPAR(PSBENT,"PSB COVERSHEET V3 COL WIDTHS",1)
"RTN","PSBPAR",116,0)
 D DEL^XPAR(PSBENT,"PSB COVERSHEET V4 COL WIDTHS",1)
"RTN","PSBPAR",117,0)
 W "Done.",!
"RTN","PSBPAR",118,0)
 Q
"RTN","PSBPAR",119,0)
 ;
"RTN","PSBPAR",120,0)
 ;*83 Below tags for Body diagram map
"RTN","PSBPAR",121,0)
MDRPC(RESULTS,OPTION,ENT,PAR,INST,VAL) ; [Procedure] Main RPC Hit Point    *83
"RTN","PSBPAR",122,0)
 ;
"RTN","PSBPAR",123,0)
 ; Input parameters
"RTN","PSBPAR",124,0)
 ;  1. RESULTS [Literal/Required] No description
"RTN","PSBPAR",125,0)
 ;  2. OPTION [Literal/Required] No description
"RTN","PSBPAR",126,0)
 ;  3. ENT [Literal/Required] No description
"RTN","PSBPAR",127,0)
 ;  4. PAR [Literal/Required] No description
"RTN","PSBPAR",128,0)
 ;  5. INST [Literal/Required] No description
"RTN","PSBPAR",129,0)
 ;  6. VAL [Literal/Required] No description
"RTN","PSBPAR",130,0)
 ;
"RTN","PSBPAR",131,0)
 N ERR,TMP,RET,TXT,IEN,IENS,ROOT,MDD
"RTN","PSBPAR",132,0)
 S INST=$G(INST,1)
"RTN","PSBPAR",133,0)
 S PAR=$G(PAR)
"RTN","PSBPAR",134,0)
 S RESULTS=$NA(^TMP($J)) K @RESULTS
"RTN","PSBPAR",135,0)
 I PAR'?1"PSB".E S ^TMP($J,0)="-1^Non PSB Parameter" Q
"RTN","PSBPAR",136,0)
 D:OPTION="SETWP" SETWP
"RTN","PSBPAR",137,0)
 D:OPTION="GETWP" GETWP
"RTN","PSBPAR",138,0)
 I +$G(ERR) K ^TMP($J,0) S ^(0)="-1^Error: "_(+ERR)_" "_$P(ERR,U,2)
"RTN","PSBPAR",139,0)
 S:'$D(^TMP($J)) @RESULTS@(0)="-1^Error calling RPC: PSB GETSETWP at "_OPTION
"RTN","PSBPAR",140,0)
 D CLEAN^DILF
"RTN","PSBPAR",141,0)
 Q
"RTN","PSBPAR",142,0)
 ;
"RTN","PSBPAR",143,0)
SETWP ; [Procedure] Set WP text into a parameter     *83
"RTN","PSBPAR",144,0)
 S TXT=INST,TMP=""
"RTN","PSBPAR",145,0)
 F  S TMP=$O(VAL(TMP)) Q:TMP=""  D
"RTN","PSBPAR",146,0)
 .S TXT($O(TXT(""),-1)+1,0)=VAL(TMP)
"RTN","PSBPAR",147,0)
 D EN^XPAR(ENT,PAR,INST,.TXT,.ERR)
"RTN","PSBPAR",148,0)
 S:'$G(ERR) @RESULTS@(0)="1^WP Text Saved"
"RTN","PSBPAR",149,0)
 Q
"RTN","PSBPAR",150,0)
 ;
"RTN","PSBPAR",151,0)
GETWP ; [Procedure] Returns WP text for a parameter   *83
"RTN","PSBPAR",152,0)
 D GETWP^XPAR(.RET,ENT,PAR,INST,.ERR)
"RTN","PSBPAR",153,0)
 Q:$G(ERR,0)
"RTN","PSBPAR",154,0)
 S TMP="RET"
"RTN","PSBPAR",155,0)
 F  S TMP=$Q(@TMP) Q:TMP=""  D
"RTN","PSBPAR",156,0)
 .S @RESULTS@($O(@RESULTS@(""),-1)+1)=@TMP
"RTN","PSBPAR",157,0)
 S @RESULTS@(0)=$O(@RESULTS@(""),-1)_U_INST
"RTN","PSBPAR",158,0)
 Q
"RTN","PSBPAR",159,0)
 ; 
"RTN","PSBRPC3")
0^5^B291911^B291796
"RTN","PSBRPC3",1,0)
PSBRPC3 ;BIRMINGHAM/VRN - BCMA RPC BROKER CALLS ;03/06/16 3:06pm
"RTN","PSBRPC3",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,3,4,16,13,10,32,28,42,58,68,70,83**;Mar 2004;Build 89
"RTN","PSBRPC3",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBRPC3",4,0)
 ;
"RTN","PSBRPC3",5,0)
GUICHK(RESULTS,DUMMY) ;
"RTN","PSBRPC3",6,0)
 ;
"RTN","PSBRPC3",7,0)
 ; RPC : PSB VERSION CHECK
"RTN","PSBRPC3",8,0)
 ;
"RTN","PSBRPC3",9,0)
 K RESULTS
"RTN","PSBRPC3",10,0)
 N PSBCURR,PSBPREV,PSBCNT
"RTN","PSBRPC3",11,0)
 S PSBCURR="3.0.83.*"
"RTN","PSBRPC3",12,0)
 S PSBPREV="",PSBCNT=0
"RTN","PSBRPC3",13,0)
 S PSBCNT=PSBCNT+1
"RTN","PSBRPC3",14,0)
 S RESULTS(PSBCNT)=PSBCURR_U_PSBPREV
"RTN","PSBRPC3",15,0)
 S RESULTS(0)=PSBCNT
"RTN","PSBRPC3",16,0)
 Q
"RTN","PSBRPC3",17,0)
 ;
"RTN","PSBUTL")
0^6^B243063193^B87531522
"RTN","PSBUTL",1,0)
PSBUTL ;BIRMINGHAM/EFC-BCMA UTILITIES ;03/06/16 3:06pm 
"RTN","PSBUTL",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,9,13,38,45,46,63,83**;Mar 2004;Build 89
"RTN","PSBUTL",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBUTL",4,0)
 ;
"RTN","PSBUTL",5,0)
 ; Reference/IA
"RTN","PSBUTL",6,0)
 ; $$PATCH & $$VERSION^XPDUTL/10141
"RTN","PSBUTL",7,0)
 ; File 50/221
"RTN","PSBUTL",8,0)
 ; File 200/10060
"RTN","PSBUTL",9,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBUTL",10,0)
 ;
"RTN","PSBUTL",11,0)
 ;*83 - Add tags called by DD trigger xrefs
"RTN","PSBUTL",12,0)
 ;    - Add FIXADM to add to coversheet Results the G give action.
"RTN","PSBUTL",13,0)
 ;
"RTN","PSBUTL",14,0)
DIWP(X,Y,PSB,PSBARGN) ; 
"RTN","PSBUTL",15,0)
 K ^UTILITY($J,"W")
"RTN","PSBUTL",16,0)
 S DIWL=0,DIWR=Y,DIWF="C"_Y D ^DIWP
"RTN","PSBUTL",17,0)
 F X=0:0 S X=$O(^UTILITY($J,"W",0,X)) Q:'X  D
"RTN","PSBUTL",18,0)
 .S Y=$O(@PSB@(""),-1)+1
"RTN","PSBUTL",19,0)
 .; Naked Ref ^UTILITY($J,"W",0,X)
"RTN","PSBUTL",20,0)
 .S @PSB@(Y)=$J("",+$G(PSBARGN))_^(X,0)
"RTN","PSBUTL",21,0)
 S @PSB@(0)=+$O(@PSB@(""),-1)
"RTN","PSBUTL",22,0)
 K ^UTILITY($J,"W"),DIWL,DIWR,DIWF
"RTN","PSBUTL",23,0)
 Q
"RTN","PSBUTL",24,0)
 ;
"RTN","PSBUTL",25,0)
SATURDAY(X,PSBDISP) ; 
"RTN","PSBUTL",26,0)
 S X=X\1 D H^%DTC ; Convert to $H
"RTN","PSBUTL",27,0)
 S %H=%H+(6-%Y) ;   Set it forward to Saturday
"RTN","PSBUTL",28,0)
 D YMD^%DTC ;       Back to FM Format
"RTN","PSBUTL",29,0)
 I $G(PSBDISP) S PSBDISP=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3)) D EN^DDIOL("Actual date is Saturday "_PSBDISP)
"RTN","PSBUTL",30,0)
 Q X
"RTN","PSBUTL",31,0)
 ;
"RTN","PSBUTL",32,0)
SUNDAY(X,PSBDISP) ; 
"RTN","PSBUTL",33,0)
 S X=X\1 D H^%DTC ; Convert to $H
"RTN","PSBUTL",34,0)
 S %H=%H-%Y ;       Set it back to Sunday
"RTN","PSBUTL",35,0)
 D YMD^%DTC ;       Back to FM Format
"RTN","PSBUTL",36,0)
 I $G(PSBDISP) S PSBDISP=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3)) D EN^DDIOL("Actual date is Sunday "_PSBDISP)
"RTN","PSBUTL",37,0)
 Q X
"RTN","PSBUTL",38,0)
 ;
"RTN","PSBUTL",39,0)
CLOCK(RESULTS,X) ; Verify Client/Server Date/Times are close enough
"RTN","PSBUTL",40,0)
 ;
"RTN","PSBUTL",41,0)
 ; RPC: PSB SERVER CLOCK VARIANCE
"RTN","PSBUTL",42,0)
 ;
"RTN","PSBUTL",43,0)
 ; Description:
"RTN","PSBUTL",44,0)
 ; Returns variance from server to client in minutes
"RTN","PSBUTL",45,0)
 ;
"RTN","PSBUTL",46,0)
 N PSBCLNT,PSBSRVR,PSBDIFF,PSBMDNT
"RTN","PSBUTL",47,0)
 S PSBMDNT=0
"RTN","PSBUTL",48,0)
 I $P(X,"@",2)="0000" S $P(X,"@",2)="2400",PSBMDNT=1 ;Change Delphi time for midnight from 0000 to 2400 in PSB*3.0*63
"RTN","PSBUTL",49,0)
 S %DT="RS" D ^%DT S PSBCLNT=Y
"RTN","PSBUTL",50,0)
 D NOW^%DTC S PSBSRVR=%
"RTN","PSBUTL",51,0)
 S:$G(PSBMDNT) PSBCLNT=$$FMADD^XLFDT(PSBCLNT,-1,0,0,0) ;Change Delphi date for midnight from day following midnight to day previous to midnight in PSB*3.0*63
"RTN","PSBUTL",52,0)
 S PSBDIFF=$$DIFF(PSBSRVR,PSBCLNT)
"RTN","PSBUTL",53,0)
 S X=$$GET^XPAR("DIV","PSB SERVER CLOCK VARIANCE")
"RTN","PSBUTL",54,0)
 I PSBDIFF>X!(PSBDIFF<(X*-1)) S RESULTS(0)="-1^"_PSBDIFF
"RTN","PSBUTL",55,0)
 E  S RESULTS(0)="1^"_PSBDIFF
"RTN","PSBUTL",56,0)
 Q
"RTN","PSBUTL",57,0)
 ;
"RTN","PSBUTL",58,0)
DIFF(X,X1) ; Difference in minutes between 2 FM dates
"RTN","PSBUTL",59,0)
 ; Code copied from Fileman Function MINUTES
"RTN","PSBUTL",60,0)
 S Y=$E(X1_"000",9,10)-$E(X_"000",9,10)*60+$E(X1_"00000",11,12)-$E(X_"00000",11,12),X2=X,X=$P(X,".",1)'=$P(X1,".",1) D ^%DTC:X S X=X*1440+Y
"RTN","PSBUTL",61,0)
 Q X
"RTN","PSBUTL",62,0)
 ;
"RTN","PSBUTL",63,0)
DRUGINQ ; Drug File Inquiry
"RTN","PSBUTL",64,0)
 N PSBRET,PSBIEN,DIC,DIR,IOINORM,IOINHI
"RTN","PSBUTL",65,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","PSBUTL",66,0)
 S X=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","PSBUTL",67,0)
 S DIC="^PSDRUG(",DIC(0)="AEQMVTN",DIC("T")="",D="B^C^VAPN^VAC^NDC^XATC",DIC("A")="Select DRUG: "
"RTN","PSBUTL",68,0)
 ; Display active drugs and those for appl packages IV and Unit Dose
"RTN","PSBUTL",69,0)
 S DIC("S")="I '$G(^PSDRUG(+Y,""I""))!($G(^(""I""))>DT),$P($G(^PSDRUG(+Y,2)),U,3)[""I""!($P($G(^PSDRUG(+Y,2)),U,3)[""U"")"
"RTN","PSBUTL",70,0)
 F  W @IOF,!,"DRUG FILE INQUIRY",! D ^DIC  Q:+Y<1  D
"RTN","PSBUTL",71,0)
 .K PSBRET
"RTN","PSBUTL",72,0)
 .S PSBIEN=+Y_","
"RTN","PSBUTL",73,0)
 .D GETS^DIQ(50,PSBIEN,".01;16;25;51;215;213;101;9*","","PSBRET")
"RTN","PSBUTL",74,0)
 .W @IOF,!,"DRUG NAME: ",IOINHI,PSBRET(50,PSBIEN,.01)
"RTN","PSBUTL",75,0)
 .W "  (IEN: ",+PSBIEN,")",IOINORM,!,$TR($J("",IOM)," ","-"),!
"RTN","PSBUTL",76,0)
 .F X=16,25,51,215,213,101 D
"RTN","PSBUTL",77,0)
 ..D FIELD^DID(50,X,"","LABEL","PSBRET")
"RTN","PSBUTL",78,0)
 ..W !,PSBRET("LABEL"),":",?30,IOINHI
"RTN","PSBUTL",79,0)
 ..D:$L(PSBRET(50,PSBIEN,X))>49
"RTN","PSBUTL",80,0)
 ...F Y=1:1 Q:$L($P(PSBRET(50,PSBIEN,X)," ",1,Y))>49
"RTN","PSBUTL",81,0)
 ...W $P(PSBRET(50,PSBIEN,X)," ",1,Y-1),!?30
"RTN","PSBUTL",82,0)
 ...S PSBRET(50,PSBIEN,X)=$P(PSBRET(50,PSBIEN,X)," ",Y,250)
"RTN","PSBUTL",83,0)
 ..W ?30,PSBRET(50,PSBIEN,X),IOINORM
"RTN","PSBUTL",84,0)
 .W !!,"SYNONYMS:",IOINHI,!?15
"RTN","PSBUTL",85,0)
 .S X="" F  S X=$O(PSBRET(50.1,X)) Q:X=""  W:$X>40 !?15 W:$X>15 ?40 W PSBRET(50.1,X,.01)
"RTN","PSBUTL",86,0)
 .W IOINORM
"RTN","PSBUTL",87,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","PSBUTL",88,0)
 .S DIR(0)="E" D ^DIR
"RTN","PSBUTL",89,0)
 Q
"RTN","PSBUTL",90,0)
 ;
"RTN","PSBUTL",91,0)
DPTSET ; Set Logic for pt-merge x-ref on patient field in file 53.79
"RTN","PSBUTL",92,0)
 ;
"RTN","PSBUTL",93,0)
 ; Entered Date/Time
"RTN","PSBUTL",94,0)
 I $P(^PSB(53.79,DA,0),U,4) S ^PSB(53.79,"AEDT",X,$P(^PSB(53.79,DA,0),U,4),DA)=""
"RTN","PSBUTL",95,0)
 ;
"RTN","PSBUTL",96,0)
 ; Administration Date/Time
"RTN","PSBUTL",97,0)
 D:$P(^PSB(53.79,DA,0),U,6)
"RTN","PSBUTL",98,0)
 .S ^PSB(53.79,"AADT",X,$P(^PSB(53.79,DA,0),U,6),DA)=""
"RTN","PSBUTL",99,0)
 .;
"RTN","PSBUTL",100,0)
 .; Orderable Item + Administration Date/Time
"RTN","PSBUTL",101,0)
 .I $P(^PSB(53.79,DA,0),U,8) S ^PSB(53.79,"AOIP",X,$P(^PSB(53.79,DA,0),U,8),$P(^PSB(53.79,DA,0),U,6),DA)=""
"RTN","PSBUTL",102,0)
 ;
"RTN","PSBUTL",103,0)
 ; PRN's by entered date/time
"RTN","PSBUTL",104,0)
 I $P($G(^PSB(53.79,DA,.1)),U,2)="P"&($P(^(0),U,4)) S ^PSB(53.79,"APRN",X,$P(^PSB(53.79,DA,0),U,4),DA)=""
"RTN","PSBUTL",105,0)
 ;
"RTN","PSBUTL",106,0)
 ; Order+Administration Date and Time
"RTN","PSBUTL",107,0)
 I $P($G(^PSB(53.79,DA,.1)),U)]""&($P($G(^PSB(53.79,DA,.1)),U,3)) S ^PSB(53.79,"AORD",X,$P(^PSB(53.79,DA,.1),U),$P(^PSB(53.79,DA,.1),U,3),DA)=""
"RTN","PSBUTL",108,0)
 Q
"RTN","PSBUTL",109,0)
 ;
"RTN","PSBUTL",110,0)
DPTKILL ; Kill Logic for pt-merge x-ref on patient field in file 53.79
"RTN","PSBUTL",111,0)
 ;
"RTN","PSBUTL",112,0)
 ; Entered Date/Time
"RTN","PSBUTL",113,0)
 I $P(^PSB(53.79,DA,0),U,4) K ^PSB(53.79,"AEDT",X,$P(^PSB(53.79,DA,0),U,4),DA)
"RTN","PSBUTL",114,0)
 ;
"RTN","PSBUTL",115,0)
 ; Administration Date/Time
"RTN","PSBUTL",116,0)
 D:$P(^PSB(53.79,DA,0),U,6)
"RTN","PSBUTL",117,0)
 .K ^PSB(53.79,"AADT",X,$P(^PSB(53.79,DA,0),U,6),DA)
"RTN","PSBUTL",118,0)
 .;
"RTN","PSBUTL",119,0)
 .; Orderable Item + Administration Date/Time
"RTN","PSBUTL",120,0)
 .I $P(^PSB(53.79,DA,0),U,8) K ^PSB(53.79,"AOIP",X,$P(^PSB(53.79,DA,0),U,8),$P(^PSB(53.79,DA,0),U,6),DA)
"RTN","PSBUTL",121,0)
 ;
"RTN","PSBUTL",122,0)
 ; PRN's by entered date/time
"RTN","PSBUTL",123,0)
 I $P($G(^PSB(53.79,DA,.1)),U,2)="P"&($P(^(0),U,4)) K ^PSB(53.79,"APRN",X,$P(^PSB(53.79,DA,0),U,4),DA)
"RTN","PSBUTL",124,0)
 ;
"RTN","PSBUTL",125,0)
 ; Order+Administration Date and Time
"RTN","PSBUTL",126,0)
 I $P($G(^PSB(53.79,DA,.1)),U)]""&($P($G(^PSB(53.79,DA,.1)),U,3)) K ^PSB(53.79,"AORD",X,$P(^PSB(53.79,DA,.1),U),$P(^PSB(53.79,DA,.1),U,3),DA)
"RTN","PSBUTL",127,0)
 Q
"RTN","PSBUTL",128,0)
 ;
"RTN","PSBUTL",129,0)
TIMEIN ;
"RTN","PSBUTL",130,0)
 X ^%ZOSF("UPPERCASE") S X=Y
"RTN","PSBUTL",131,0)
 I X="NOON" S X=.12 Q
"RTN","PSBUTL",132,0)
 I X="MID" S X=.24 Q
"RTN","PSBUTL",133,0)
 I (X="NOW")!(X="N") D NOW^%DTC S X=$E($P(%,".",2)_"0000",1,4)
"RTN","PSBUTL",134,0)
 S X="T@"_X,%DT="R" D ^%DT
"RTN","PSBUTL",135,0)
 I Y<1 K X Q
"RTN","PSBUTL",136,0)
 S X=Y-DT
"RTN","PSBUTL",137,0)
 Q
"RTN","PSBUTL",138,0)
 ;
"RTN","PSBUTL",139,0)
TIMEOUT(X) ; 
"RTN","PSBUTL",140,0)
 N HOUR,MIN,AMPM
"RTN","PSBUTL",141,0)
 S X=$E($P(X,".",2)_"0000",1,4)
"RTN","PSBUTL",142,0)
 I X="2400" Q "12:00m"
"RTN","PSBUTL",143,0)
 I X="1200" Q "12:00n"
"RTN","PSBUTL",144,0)
 S HOUR=+$E(X,1,2),MIN=$E(X,3,4)
"RTN","PSBUTL",145,0)
 S AMPM="a"
"RTN","PSBUTL",146,0)
 S AMPM=$S(HOUR<12:"a",HOUR>11:"p",1:"**")
"RTN","PSBUTL",147,0)
 S:HOUR>12 HOUR=HOUR-12
"RTN","PSBUTL",148,0)
 Q HOUR_":"_MIN_AMPM
"RTN","PSBUTL",149,0)
 ;
"RTN","PSBUTL",150,0)
HFSOPEN(HANDLE) ; 
"RTN","PSBUTL",151,0)
 N PSBDIR,PSBFILE
"RTN","PSBUTL",152,0)
 S PSBDIR=$$DEFDIR^%ZISH()
"RTN","PSBUTL",153,0)
 S PSBFILE="PSB"_DUZ_".DAT"
"RTN","PSBUTL",154,0)
 D OPEN^%ZISH(HANDLE,PSBDIR,PSBFILE,"W") Q:POP
"RTN","PSBUTL",155,0)
 S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF=""""""
"RTN","PSBUTL",156,0)
 Q
"RTN","PSBUTL",157,0)
 ;
"RTN","PSBUTL",158,0)
HFSCLOSE(HANDLE) ; 
"RTN","PSBUTL",159,0)
 N PSBDIR,PSBFILE,PSBDEL
"RTN","PSBUTL",160,0)
 D CLOSE^%ZISH(HANDLE)
"RTN","PSBUTL",161,0)
 K ^TMP("PSBO",$J)
"RTN","PSBUTL",162,0)
 S PSBDIR=$$DEFDIR^%ZISH()
"RTN","PSBUTL",163,0)
 S PSBFILE="PSB"_DUZ_".DAT",PSBDEL(PSBFILE)=""
"RTN","PSBUTL",164,0)
 S X=$$FTG^%ZISH(PSBDIR,PSBFILE,$NAME(^TMP("PSBO",$J,2)),3)
"RTN","PSBUTL",165,0)
 S X=$$DEL^%ZISH(PSBDIR,$NA(PSBDEL))
"RTN","PSBUTL",166,0)
 Q
"RTN","PSBUTL",167,0)
 ;
"RTN","PSBUTL",168,0)
AUDIT(PSBREC,PSBDD,PSBFLD,PSBDATA,PSBSK) ; Med Log Audit
"RTN","PSBUTL",169,0)
 ; used by cross references to 53.79 to track changes to fields in Med Log file
"RTN","PSBUTL",170,0)
 ; xref AU05, AU06, AU09, AU16, AU21, AU22 pass the value 53.79 as PSBDD
"RTN","PSBUTL",171,0)
 ; xref AU303, AU304 pass the value 53.795 as PSBDD
"RTN","PSBUTL",172,0)
 ; xref AU603, AU604 pass the value 53.796 as PSBDD
"RTN","PSBUTL",173,0)
 ; xref AU703, AU704 pass the value 53.797 as PSBDD
"RTN","PSBUTL",174,0)
 ;
"RTN","PSBUTL",175,0)
 N PSBDT,PSBTMP
"RTN","PSBUTL",176,0)
 I '$D(PSBOLSTS) S PSBOLSTS=$P(^PSB(53.79,PSBREC,0),U,9)
"RTN","PSBUTL",177,0)
 I '$D(PSBOLDUZ) S PSBOLDUZ=$P(^PSB(53.79,PSBREC,0),U,5)
"RTN","PSBUTL",178,0)
 Q:$G(PSBDATA)=""!('$G(PSBAUDIT))
"RTN","PSBUTL",179,0)
 D NOW^%DTC S PSBDT=%
"RTN","PSBUTL",180,0)
 S PSBDATA=$$EXTERNAL^DILFD(PSBDD,PSBFLD,"",PSBDATA)  ; PSBDD=53.79, 53.795, 53.796, or 53.797 see comment AUDIT
"RTN","PSBUTL",181,0)
 D FIELD^DID(PSBDD,PSBFLD,"","LABEL","PSBTMP")  ; PSBDD=53.79, 53.795, 53.796, or 53.797 see comment AUDIT
"RTN","PSBUTL",182,0)
 S:'$D(^PSB(53.79,PSBREC,.9,0)) ^(0)="^53.799^^"
"RTN","PSBUTL",183,0)
 S Y=$O(^PSB(53.79,PSBREC,.9,""),-1)+1,X=""
"RTN","PSBUTL",184,0)
 I PSBTMP("LABEL")["ACTION STATUS" D  Q
"RTN","PSBUTL",185,0)
 .I PSBSK["K" S XY=Y F  S XY=$O(^PSB(53.79,PSBREC,.9,XY),-1) Q:($D(PSBGOON))!(+XY'>0)  D
"RTN","PSBUTL",186,0)
 ..I ^PSB(53.79,PSBREC,.9,XY,0)["ACTION STATUS Set to '" D  Q
"RTN","PSBUTL",187,0)
 ...S PSBGOON=1,PSBOLDUZ=$P(^PSB(53.79,PSBREC,.9,XY,0),U,2),X=$P(^PSB(53.79,PSBREC,.9,XY,0),"'",2)
"RTN","PSBUTL",188,0)
 .S:$L(X)'>2 X=PSBOLSTS,X=$S(X="G":"GIVEN",X="H":"HELD",X="R":"REFUSED",X="I":"INFUSING",X="C":"COMPLETED",X="S":"STOPPED",X="N":"NOT GIVEN",X="RM":"REMOVED",X="M":"MISSING DOSE",X="":PSBOLSTS)
"RTN","PSBUTL",189,0)
 .I PSBSK["K" S ^PSB(53.79,PSBREC,.9,Y,0)=PSBDT_U_DUZ_U_"Field: "_PSBTMP("LABEL")_" '"_PSBDATA_"' by '"_$$GET1^DIQ(200,PSBOLDUZ,"INITIAL")_"' deleted."
"RTN","PSBUTL",190,0)
 .;PSB*3*45 Store Action status and last given fields.
"RTN","PSBUTL",191,0)
 .E  S ^PSB(53.79,PSBREC,.9,Y,0)=PSBDT_U_DUZ_U_"Field: "_PSBTMP("LABEL")_" Set to '"_PSBDATA_"' by '"_$$GET1^DIQ(200,DUZ,"INITIAL")_"'."_U_PSBDATA_U_$P(^PSB(53.79,PSBREC,0),"^",7)
"RTN","PSBUTL",192,0)
 I PSBSK["K" S ^PSB(53.79,PSBREC,.9,Y,0)=PSBDT_U_DUZ_U_"Field: "_PSBTMP("LABEL")_" '"_PSBDATA_"' deleted."
"RTN","PSBUTL",193,0)
 E  S ^PSB(53.79,PSBREC,.9,Y,0)=PSBDT_U_DUZ_U_"Field: "_PSBTMP("LABEL")_$S(PSBTMP("LABEL")["DISPENSE DRUG":" Added '",1:" Set to '")_PSBDATA_"'."
"RTN","PSBUTL",194,0)
 K XY,PSBGOON
"RTN","PSBUTL",195,0)
 Q
"RTN","PSBUTL",196,0)
 ;
"RTN","PSBUTL",197,0)
CHECK(RESULTS,PSBWHAT,PSBDATA) ; Checks for KIDS Patch or Build
"RTN","PSBUTL",198,0)
 ; Module added in Patch PSB*1.0*3 DP/TOPEKA 22-DEC-1999 11:51:22 
"RTN","PSBUTL",199,0)
 ; PSBWHAT: B = Returns Build Version for packages by Namespace
"RTN","PSBUTL",200,0)
 ;          P = Returns if Patch is installed
"RTN","PSBUTL",201,0)
 ; PSBDATA: Build/Package namespace (i.e. PSB) or Patch Number
"RTN","PSBUTL",202,0)
 ;         (i.e. PSB*1.0*1)
"RTN","PSBUTL",203,0)
 ;
"RTN","PSBUTL",204,0)
 S RESULTS(0)="-1^Unknown Parameter "_$G(PSBWHAT,"<PSBWHAT Undefined>")
"RTN","PSBUTL",205,0)
 S PSBWHAT=$G(PSBWHAT),PSBDATA=$G(PSBDATA)
"RTN","PSBUTL",206,0)
 D:PSBWHAT="B"
"RTN","PSBUTL",207,0)
 .S X=$$VERSION^XPDUTL(PSBDATA)
"RTN","PSBUTL",208,0)
 .S RESULTS(0)=$S(X="":"-1^Unknown Package/Build",1:"1^"_X)
"RTN","PSBUTL",209,0)
 D:PSBWHAT="P"
"RTN","PSBUTL",210,0)
 .S X=$$PATCH^XPDUTL(PSBDATA)
"RTN","PSBUTL",211,0)
 .S RESULTS(0)=$S(X:"1^Patch Is Installed",1:"-1^Patch Is Not Installed")
"RTN","PSBUTL",212,0)
 Q
"RTN","PSBUTL",213,0)
 ;
"RTN","PSBUTL",214,0)
VERSION() ; [Extrinsic] 
"RTN","PSBUTL",215,0)
 ; Returns V#.# for display purposes
"RTN","PSBUTL",216,0)
 Q "V"_$J(2,0,1)
"RTN","PSBUTL",217,0)
 ;
"RTN","PSBUTL",218,0)
RESETADM ;
"RTN","PSBUTL",219,0)
 ;
"RTN","PSBUTL",220,0)
 ;  This Subroutine will reset a medication order's resources
"RTN","PSBUTL",221,0)
 ;  based on Med Log New Entry or Edit Med Log activity.
"RTN","PSBUTL",222,0)
 ;
"RTN","PSBUTL",223,0)
 ;  No input is necessary. Environment should be setup at call.
"RTN","PSBUTL",224,0)
 ;
"RTN","PSBUTL",225,0)
 I '$G(PSBMMEN) S X=$S($P(PSBIEN,",",2)]"":$P(PSBIEN,",",2),1:+PSBIEN) D CLEAN^PSBVT,PSJ1^PSBVT($P(^PSB(53.79,X,0),U),$P(^PSB(53.79,X,.1),U)) D:($$IVPTAB^PSBVDLU3(PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,+$G(PSBIVPSH)))  D CLEAN^PSBVT
"RTN","PSBUTL",226,0)
 .S X=PSBIEN,X2=X_$S(X="+1":",",1:"") Q:'$D(PSBFDA(53.79,X2,.09))  I $F("HR",PSBFDA(53.79,X2,.09))>1 S PSBFDA(53.79,X2,.26)=""
"RTN","PSBUTL",227,0)
 I $G(PSBMMEN),PSBIEN="+1",$G(PSBONX)["V" S PSBWSID=PSBFDA(53.79,"+1,",.26) K PSBFDA(53.79,"+1,",.26),PSBFDA(53.79,"+1,",.09)
"RTN","PSBUTL",228,0)
 I $G(PSBMMEN) I ($D(PSBWSID))&($G(Y(0))="SAVE") D
"RTN","PSBUTL",229,0)
 .S:(PSBREC(3)="G") PSBFDAX(53.79,X,.26)=PSBWSID
"RTN","PSBUTL",230,0)
 .S:$F("HR",PSBREC(3))>1 PSBFDAX(53.79,X,.26)=""
"RTN","PSBUTL",231,0)
 .S X=$P(PSBIEN,"+1,",2)
"RTN","PSBUTL",232,0)
 .D UPDATE^DIE("","PSBFDAX","X","PSBMSG")
"RTN","PSBUTL",233,0)
 Q
"RTN","PSBUTL",234,0)
 ;
"RTN","PSBUTL",235,0)
SCRNPTCH ;
"RTN","PSBUTL",236,0)
 ;
"RTN","PSBUTL",237,0)
 ; Maintain the "APATCH" index from SCREENMAN and Manual Med Entry.
"RTN","PSBUTL",238,0)
 ;
"RTN","PSBUTL",239,0)
 I Y(0)'="GIVEN" S PSBGPTCH=0 Q
"RTN","PSBUTL",240,0)
 S PSBX=0 F  S PSBX=$O(^PSB(53.79,DA,.5,PSBX))  Q:+PSBX=0  Q:$P(^PSB(53.79,DA,.5,+PSBX,0),U,4)="PATCH"
"RTN","PSBUTL",241,0)
 Q:+PSBX=0
"RTN","PSBUTL",242,0)
 S PSBGPTCH=1
"RTN","PSBUTL",243,0)
 Q
"RTN","PSBUTL",244,0)
 ;
"RTN","PSBUTL",245,0)
GIVEPTCH ;
"RTN","PSBUTL",246,0)
 I $D(^PSB(53.79,"AORD",DFN,PSBONX)) N PSBX S PSBX="" F  S PSBX=$O(^PSB(53.79,"AORD",DFN,PSBONX,PSBX)) Q:+PSBX=0  D:$D(^PSB(53.79,"AORD",DFN,PSBONX,PSBX,DA))  Q:'$D(PSBX)
"RTN","PSBUTL",247,0)
 .I $D(^PSB(53.79,"AORD",DFN,PSBONX,PSBX,DA)) D
"RTN","PSBUTL",248,0)
 ..S PSBX=$P(^PSB(53.79,DA,0),U,6)
"RTN","PSBUTL",249,0)
 ..I PSBGPTCH S ^PSB(53.79,"APATCH",DFN,PSBX,DA)="" K PSBX,PSBGPTCH Q
"RTN","PSBUTL",250,0)
 ..I 'PSBGPTCH K ^PSB(53.79,"APATCH",DFN,PSBX,DA),PSBX,PSBGPTCH
"RTN","PSBUTL",251,0)
 Q
"RTN","PSBUTL",252,0)
 ;
"RTN","PSBUTL",253,0)
VALGIV() ;Validate Give, variance time set during a Trigger call      *83
"RTN","PSBUTL",254,0)
 Q:'$P($G(^PSB(53.79,DA,0)),U,6) 0
"RTN","PSBUTL",255,0)
 Q ($P($G(^PSB(53.79,DA,.1)),U,2)="C"&($P($G(^(.1)),U,3)]"")&($G(PSBACTN)="G"))
"RTN","PSBUTL",256,0)
 ;
"RTN","PSBUTL",257,0)
VALREM() ;Validate Remove, variance time set during a Trigger call    *83
"RTN","PSBUTL",258,0)
 Q:'$P($G(^PSB(53.79,DA,0)),U,6) 0
"RTN","PSBUTL",259,0)
 Q ($P($G(^PSB(53.79,DA,.1)),U,2)="C"&($P($G(^(.1)),U,7)]"")&($G(PSBACTN)="RM"))
"RTN","PSBUTL",260,0)
 ;
"RTN","PSBUTL",261,0)
REMSTR(A,D,TY,SP,PRSP) ;build remove time string from admin time string via DOA value *83
"RTN","PSBUTL",262,0)
 ;    A = admin time strg e.g. "0900-2100"
"RTN","PSBUTL",263,0)
 ;    D = Duration of Admin (DOA)
"RTN","PSBUTL",264,0)
 ;   TY = sched type
"RTN","PSBUTL",265,0)
 ;   SP = order stop date
"RTN","PSBUTL",266,0)
 ; PRSP = previous stop date
"RTN","PSBUTL",267,0)
 ;
"RTN","PSBUTL",268,0)
 N RMTM,RMSTR,Q
"RTN","PSBUTL",269,0)
 S RMSTR="",TY=$G(TY),SP=$G(SP),PRSP=$G(PRSP)
"RTN","PSBUTL",270,0)
 ;
"RTN","PSBUTL",271,0)
 ;no admin time, return null RMSTR
"RTN","PSBUTL",272,0)
 Q:(TY'="O")&('A) RMSTR
"RTN","PSBUTL",273,0)
 ;
"RTN","PSBUTL",274,0)
 ;sched typ is One Time, return Ord stop time as RMSTR
"RTN","PSBUTL",275,0)
 I TY="O" D  Q RMSTR
"RTN","PSBUTL",276,0)
 .S RMSTR=$S(PRSP:PRSP,1:SP),RMSTR=$E($P(RMSTR,".",2)_"0000",1,4)
"RTN","PSBUTL",277,0)
 ;
"RTN","PSBUTL",278,0)
 ;continuous schedules with valid admin times
"RTN","PSBUTL",279,0)
 F Q=1:1:$L(A,"-") D
"RTN","PSBUTL",280,0)
 .S RMTM=DT_"."_$P(A,"-",Q)
"RTN","PSBUTL",281,0)
 .S RMTM=$$FMADD^XLFDT(RMTM,,,D)
"RTN","PSBUTL",282,0)
 .S RMTM=$P(RMTM,".",2),RMTM=$E(RMTM_"0000",1,4)
"RTN","PSBUTL",283,0)
 .S $P(RMSTR,"-",Q)=RMTM
"RTN","PSBUTL",284,0)
 Q RMSTR
"RTN","PSBUTL",285,0)
 ;
"RTN","PSBUTL",286,0)
CNVRT4(STR,SEP) ;Converts a time string to 4 digit for consistency         *83
"RTN","PSBUTL",287,0)
 ;  STR - string of times
"RTN","PSBUTL",288,0)
 ;  SEP - separator character between times
"RTN","PSBUTL",289,0)
 ;
"RTN","PSBUTL",290,0)
 N QQ
"RTN","PSBUTL",291,0)
 F QQ=1:1:$L(STR,SEP) S $P(STR,SEP,QQ)=$E($P(STR,SEP,QQ)_"0000",1,4)
"RTN","PSBUTL",292,0)
 Q STR
"RTN","PSBUTL",293,0)
 ;
"RTN","PSBUTL",294,0)
FINDGIVE(IEN) ;Finds the last Give date/time in the Audit log for a RM sts *83
"RTN","PSBUTL",295,0)
 ;   When a Remove action occurs and saved to 53.79, the Give Action
"RTN","PSBUTL",296,0)
 ;   Status & Action Date/Time are overwritten. This Function will
"RTN","PSBUTL",297,0)
 ;   retrieve that Give info.
"RTN","PSBUTL",298,0)
 ;
"RTN","PSBUTL",299,0)
 ; Function returns - string formatted as the MAH report uses
"RTN","PSBUTL",300,0)
 ;     date/time ^ by initials ^ action code ^ ien of 53.79 file
"RTN","PSBUTL",301,0)
 ;
"RTN","PSBUTL",302,0)
 Q:$P(^PSB(53.79,IEN,0),U,9)'="RM" ""
"RTN","PSBUTL",303,0)
 N DA,DAT,GIVE,FOUND,STR,QQ,PRVDA,PRVDAT,SKIP
"RTN","PSBUTL",304,0)
 S (FOUND,STR,GIVE)=""
"RTN","PSBUTL",305,0)
 F DA=99999:0 S DA=$O(^PSB(53.79,IEN,.9,DA),-1) Q:'DA  D  Q:FOUND
"RTN","PSBUTL",306,0)
 .S DAT=^PSB(53.79,IEN,.9,DA,0),SKIP=0
"RTN","PSBUTL",307,0)
 .; check for previous audit to be an Undo RM, if so skip it
"RTN","PSBUTL",308,0)
 .I DAT["ACTION STATUS Set to 'GIVEN'" D  Q
"RTN","PSBUTL",309,0)
 ..S PRVDA=$O(^PSB(53.79,IEN,.9,DA),-1) ;previous audit DA
"RTN","PSBUTL",310,0)
 ..D:PRVDA
"RTN","PSBUTL",311,0)
 ...S PRVDAT=^PSB(53.79,IEN,.9,PRVDA,0)
"RTN","PSBUTL",312,0)
 ...I PRVDAT["ACTION STATUS 'REMOVED'",PRVDAT["deleted" S SKIP=1
"RTN","PSBUTL",313,0)
 ..Q:SKIP
"RTN","PSBUTL",314,0)
 ..S $P(STR,U,1)=$P(DAT,U,1)            ;init date just in case
"RTN","PSBUTL",315,0)
 ..S $P(STR,U,2)=$P(DAT,"'",4)          ;by initials
"RTN","PSBUTL",316,0)
 ..S $P(STR,U,3)="G"                    ;action sts Give
"RTN","PSBUTL",317,0)
 ..S $P(STR,U,4)=IEN                    ;ien of transaction
"RTN","PSBUTL",318,0)
 ..S GIVE=1
"RTN","PSBUTL",319,0)
 .Q:SKIP
"RTN","PSBUTL",320,0)
 .;
"RTN","PSBUTL",321,0)
 .;preferred date of action is in external form, as manual med edits
"RTN","PSBUTL",322,0)
 .;can be back dated and show up here vs audit date/time for the Give
"RTN","PSBUTL",323,0)
 .D:GIVE
"RTN","PSBUTL",324,0)
 ..Q:DAT'["DATE/TIME Set to"
"RTN","PSBUTL",325,0)
 ..S:DAT?.E1"@".E $P(STR,U,1)=$$ETFM($P(^(0),"'",2))
"RTN","PSBUTL",326,0)
 ..;found real date
"RTN","PSBUTL",327,0)
 ..S FOUND=1
"RTN","PSBUTL",328,0)
 Q STR
"RTN","PSBUTL",329,0)
 ;
"RTN","PSBUTL",330,0)
ETFM(EX) ;convert external to FM date format
"RTN","PSBUTL",331,0)
 N M,MM,MTH,TM,DY,Y,Y1,Y2,YYY,YYYY,Q
"RTN","PSBUTL",332,0)
 S MTH=$E(EX,1,3)
"RTN","PSBUTL",333,0)
 S Q=0
"RTN","PSBUTL",334,0)
 F M="JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC" S Q=Q+.01,MM(M)=Q
"RTN","PSBUTL",335,0)
 S MM=$E($P(MM(MTH),".",2)_"0",1,2)
"RTN","PSBUTL",336,0)
 ;
"RTN","PSBUTL",337,0)
 S DY=$P(EX," ",2),DY=$TR(DY,",","")
"RTN","PSBUTL",338,0)
 S Y=$P(EX," ",3),YYYY=$P(Y,"@"),Y1=$E(YYYY,1,2)-17,Y2=$E(YYYY,3,4),YYYY=Y1_Y2
"RTN","PSBUTL",339,0)
 S TM=$P(Y,"@",2),TM=$TR(TM,":","")
"RTN","PSBUTL",340,0)
 Q $E(YYYY_MM_DY_"."_TM,1,12)
"RTN","PSBUTL",341,0)
 ;
"RTN","PSBUTL",342,0)
MEDHIST(LIST,DFN,OI,MAX) ;Last nn admin actions per a patients Orderable Item
"RTN","PSBUTL",343,0)
 ;
"RTN","PSBUTL",344,0)
 ; Reference/IA
"RTN","PSBUTL",345,0)
 ; #6271 for Inpatient Medications to call into BCMA   *83
"RTN","PSBUTL",346,0)
 ;   ** NOTE **
"RTN","PSBUTL",347,0)
 ;     THIS API IS DIRECTLY/INDIRECTLY DEPENDANT ON 3 OTHER INTERNAL
"RTN","PSBUTL",348,0)
 ;     API's: LASTSITE^PSBINJEC, RPC^PSBVDLUD, & FINDGIVE^PSBUTL
"RTN","PSBUTL",349,0)
 ;   
"RTN","PSBUTL",350,0)
 ; Input:
"RTN","PSBUTL",351,0)
 ;   DFN - Patient num
"RTN","PSBUTL",352,0)
 ;   OI  - Inpatient Meds Orderable Item ien
"RTN","PSBUTL",353,0)
 ;   MAX - Max days back to search
"RTN","PSBUTL",354,0)
 ; Output:
"RTN","PSBUTL",355,0)
 ;   LIST - Array of actions formatted as :
"RTN","PSBUTL",356,0)
 ;     DATE^ACTION^ORDNO^LSTSITE^LOCATION^NURSINITL
"RTN","PSBUTL",357,0)
 ;
"RTN","PSBUTL",358,0)
 K LIST
"RTN","PSBUTL",359,0)
 N DTE,CNT,IEN,ACTN,GIVE,DATE,LSITE,ACTBY,NURINI,ORDN,LOC
"RTN","PSBUTL",360,0)
 ;
"RTN","PSBUTL",361,0)
 S DTE=DT+1
"RTN","PSBUTL",362,0)
 F  S DTE=$O(^PSB(53.79,"AOIP",DFN,OI,DTE),-1) Q:'DTE  D  Q:$$FMDIFF^XLFDT($$NOW^XLFDT,DTE,1)>MAX
"RTN","PSBUTL",363,0)
 .S IEN=0
"RTN","PSBUTL",364,0)
 .F  S IEN=$O(^PSB(53.79,"AOIP",DFN,OI,DTE,IEN)) Q:'IEN  D  Q:$$FMDIFF^XLFDT($$NOW^XLFDT,DTE,1)>MAX
"RTN","PSBUTL",365,0)
 ..S ACTN=$$GET1^DIQ(53.79,IEN,.09)
"RTN","PSBUTL",366,0)
 ..S ORDN=$$GET1^DIQ(53.79,IEN,.11)
"RTN","PSBUTL",367,0)
 ..S LOC=$$GET1^DIQ(53.79,IEN,.02)
"RTN","PSBUTL",368,0)
 ..S ACTBY=$$GET1^DIQ(53.79,IEN,.07,"I")
"RTN","PSBUTL",369,0)
 ..S NURINI=$$GET1^DIQ(200,ACTBY,1)
"RTN","PSBUTL",370,0)
 ..Q:ACTN="NOT GIVEN"
"RTN","PSBUTL",371,0)
 ..Q:$$FMDIFF^XLFDT($$NOW^XLFDT,DTE,1)>MAX
"RTN","PSBUTL",372,0)
 ..S LSITE=$$LASTSITE^PSBINJEC(DFN,OI)
"RTN","PSBUTL",373,0)
 ..S LIST(DTE)=DTE_U_ACTN_U_ORDN_U_LSITE_U_LOC_U_NURINI
"RTN","PSBUTL",374,0)
 ..I ACTN="REMOVED" D
"RTN","PSBUTL",375,0)
 ...S GIVE=$$FINDGIVE(IEN)
"RTN","PSBUTL",376,0)
 ...S DATE=$P(GIVE,U)
"RTN","PSBUTL",377,0)
 ...S NURINI=$P(GIVE,U,2)
"RTN","PSBUTL",378,0)
 ...Q:$$FMDIFF^XLFDT($$NOW^XLFDT,DATE,1)>MAX
"RTN","PSBUTL",379,0)
 ...S LIST(DATE)=DATE_U_"GIVEN"_U_ORDN_U_LSITE_U_LOC_U_NURINI
"RTN","PSBUTL",380,0)
 Q
"RTN","PSBUTL",381,0)
 ;
"RTN","PSBUTL",382,0)
FIXADM ;Update ORD seg with GIVE status based on ALL ADM Records         *83
"RTN","PSBUTL",383,0)
 ;  If any ADM's contain G then remove required for this ORDER
"RTN","PSBUTL",384,0)
 N QQ,MRR,ADSTS,ADIEN,OIEN,RMTM
"RTN","PSBUTL",385,0)
 S MRR=0,ADSTS=""
"RTN","PSBUTL",386,0)
 F QQ=1:1:+$G(^TMP("PSB",$J,"CVRSHT",0)) D
"RTN","PSBUTL",387,0)
 .Q:$E(^TMP("PSB",$J,"CVRSHT",QQ),1,3)="END"
"RTN","PSBUTL",388,0)
 .I $E(^TMP("PSB",$J,"CVRSHT",QQ),1,3)="ORD" S OIEN=QQ,MRR=0 Q
"RTN","PSBUTL",389,0)
 .I $E(^TMP("PSB",$J,"CVRSHT",QQ),1,2)="DD" D
"RTN","PSBUTL",390,0)
 ..S MRR=$P(^TMP("PSB",$J,"CVRSHT",QQ),U,8)
"RTN","PSBUTL",391,0)
 .;only update sts in ORD.14 if G found for any med
"RTN","PSBUTL",392,0)
 .I $E(^TMP("PSB",$J,"CVRSHT",QQ),1,3)="ADM" D  Q:ADSTS="G"
"RTN","PSBUTL",393,0)
 ..S ADSTS=$P(^TMP("PSB",$J,"CVRSHT",QQ),U,5)
"RTN","PSBUTL",394,0)
 ..S ADIEN=$P(^TMP("PSB",$J,"CVRSHT",QQ),U,4)
"RTN","PSBUTL",395,0)
 ..S:ADIEN RMTM=$P(^PSB(53.79,ADIEN,.1),U,7)
"RTN","PSBUTL",396,0)
 ..;if a Give & MRR med, then the Remove time needs to be retrieved
"RTN","PSBUTL",397,0)
 ..;again from 53.79.  The last info found by PSBVDLUD may not be for
"RTN","PSBUTL",398,0)
 ..;this medlog record.
"RTN","PSBUTL",399,0)
 ..D:ADSTS="G"&MRR
"RTN","PSBUTL",400,0)
 ...S $P(^TMP("PSB",$J,"CVRSHT",OIEN),U,14)=ADSTS
"RTN","PSBUTL",401,0)
 ...S $P(^TMP("PSB",$J,"CVRSHT",OIEN),U,36)=RMTM
"RTN","PSBUTL",402,0)
 Q
"RTN","PSBUTL",403,0)
 ;
"RTN","PSBUTL",404,0)
REMOVES(DFN,TYPE) ;Searches xrefs for MRR type meds needing removal and adds    *83
"RTN","PSBUTL",405,0)
 ;
"RTN","PSBUTL",406,0)
 ;Type = (P)atient, (W)ard, (C)linic
"RTN","PSBUTL",407,0)
 ;
"RTN","PSBUTL",408,0)
 N PSBGNODE,PSBIEN,PSBZON,PSBRMDT,PSBMRRFL,PSBONX,PSBOITX,PSBOSP,PSBOSTS
"RTN","PSBUTL",409,0)
 ;
"RTN","PSBUTL",410,0)
 ;Xref APATCH search (backwards compatible xref)
"RTN","PSBUTL",411,0)
 S PSBGNODE="^PSB(53.79,"_"""APATCH"""_","_DFN_")"
"RTN","PSBUTL",412,0)
 F  S PSBGNODE=$Q(@PSBGNODE) Q:PSBGNODE']""  Q:($QS(PSBGNODE,2)'="APATCH")!($QS(PSBGNODE,3)'=DFN)  D
"RTN","PSBUTL",413,0)
 .S PSBIEN=$QS(PSBGNODE,5),PSBONX=$P(^PSB(53.79,PSBIEN,.1),U)
"RTN","PSBUTL",414,0)
 .D PSJ1^PSBVT(DFN,PSBONX)
"RTN","PSBUTL",415,0)
 .Q:(TYPE="C")&('PSBCLIEN)                      ;not a clinic order
"RTN","PSBUTL",416,0)
 .Q:'$D(^PSB(53.79,PSBIEN,.5,1))                ;no disp drug
"RTN","PSBUTL",417,0)
 .Q:$P(^PSB(53.79,PSBIEN,.5,1,0),U,4)'="PATCH"  ;not a Patch
"RTN","PSBUTL",418,0)
 .Q:$P(^PSB(53.79,PSBIEN,0),U,9)'="G"           ;not Given
"RTN","PSBUTL",419,0)
 .D SETMRR
"RTN","PSBUTL",420,0)
 ;
"RTN","PSBUTL",421,0)
 ;Xref AMRR search   (new xref for transdermal meds)
"RTN","PSBUTL",422,0)
 S PSBGNODE="^PSB(53.79,"_"""AMRR"""_","_DFN_")"
"RTN","PSBUTL",423,0)
 F  S PSBGNODE=$Q(@PSBGNODE) Q:PSBGNODE']""  Q:($QS(PSBGNODE,2)'="AMRR")!($QS(PSBGNODE,3)'=DFN)  D
"RTN","PSBUTL",424,0)
 .S PSBIEN=$QS(PSBGNODE,5),PSBONX=$P(^PSB(53.79,PSBIEN,.1),U)
"RTN","PSBUTL",425,0)
 .D PSJ1^PSBVT(DFN,PSBONX)
"RTN","PSBUTL",426,0)
 .Q:(TYPE="C")&('PSBCLIEN)                      ;not a clinic order
"RTN","PSBUTL",427,0)
 .Q:$P(^PSB(53.79,PSBIEN,.5,1,0),U,4)="PATCH"   ;Is patch already seen
"RTN","PSBUTL",428,0)
 .Q:'$D(^PSB(53.79,PSBIEN,.5,1))                ;no disp drug
"RTN","PSBUTL",429,0)
 .Q:'$P(^PSB(53.79,PSBIEN,.5,1,0),U,6)          ;no MRR flag
"RTN","PSBUTL",430,0)
 .Q:$P(^PSB(53.79,PSBIEN,0),U,9)'="G"           ;not Given
"RTN","PSBUTL",431,0)
 .D SETMRR
"RTN","PSBUTL",432,0)
 ;
"RTN","PSBUTL",433,0)
 D CLEAN^PSBVT
"RTN","PSBUTL",434,0)
 Q
"RTN","PSBUTL",435,0)
 ;
"RTN","PSBUTL",436,0)
SETMRR ;Get and set MRR info for printing Removals
"RTN","PSBUTL",437,0)
 ; If clinic order mode, skip removes for locations not on clinic list
"RTN","PSBUTL",438,0)
 ;   If No list then All clinics desired.
"RTN","PSBUTL",439,0)
 N CLNAM S CLNAM=$P(^PSB(53.79,PSBIEN,0),U,2)
"RTN","PSBUTL",440,0)
 I '$G(PSBIENS) N PSBIENS S PSBIENS=PSBRPT
"RTN","PSBUTL",441,0)
 I PSBCLINORD,$D(^PSB(53.69,+PSBIENS,2,"B")),CLNAM]"",'$D(^PSB(53.69,+PSBIENS,2,"B",CLNAM)) Q   ;not on selection list when list is present
"RTN","PSBUTL",442,0)
 S PSBZON=$P(^PSB(53.79,PSBIEN,.1),"^")
"RTN","PSBUTL",443,0)
 S PSBRMDT=$P(^PSB(53.79,PSBIEN,.1),"^",7)
"RTN","PSBUTL",444,0)
 Q:'PSBRMDT
"RTN","PSBUTL",445,0)
 Q:(PSBRMDT<PSBSTART)!(PSBRMDT>PSBSTOP)
"RTN","PSBUTL",446,0)
 K ^TMP("PSJ1",$J) D EN^PSJBCMA1(DFN,PSBZON,1)
"RTN","PSBUTL",447,0)
 Q:$G(^TMP("PSJ1",$J,0))=-1
"RTN","PSBUTL",448,0)
 S PSBONX=$P(^TMP("PSJ1",$J,0),U,3)     ; ord num w/  type "U" or "V"
"RTN","PSBUTL",449,0)
 S PSBOSTS=$P(^TMP("PSJ1",$J,1),U,10)   ; ord status
"RTN","PSBUTL",450,0)
 S PSBOITX=$P(^TMP("PSJ1",$J,2),U,2)    ; order item (expanded)
"RTN","PSBUTL",451,0)
 S PSBOSP=$P(^TMP("PSJ1",$J,4),U,7)     ; stop date FM
"RTN","PSBUTL",452,0)
 S ^TMP("PSB",$J,DFN,PSBRMDT,PSBOITX,PSBONX,"RM")=""
"RTN","PSBUTL",453,0)
 S PSBS(DFN,PSBONX,$S(PSBOSTS="A":"Active",PSBOSTS="H":"On Hold",PSBOSTS="D":"DC'd",PSBOSTS="DE":"DC'd (Edit)",PSBOSTS="E":"Expired",PSBOSTS="O":"On Call",PSBOSTS="R":"Renewed",1:"*Unknown*"))="" ;PSB*3*76 adds Renewed as status
"RTN","PSBUTL",454,0)
 S PSBSTXP(PSBONX,DFN,$$DTFMT^PSBOMM2(PSBOSP))=""
"RTN","PSBUTL",455,0)
 Q
"RTN","PSBVAR")
0^12^B16360454^B15546139
"RTN","PSBVAR",1,0)
PSBVAR ;BIRMINGHAM/EFC-BCMA VARIANCE LOG FUNCTIONS ;03/06/16 3:06pm
"RTN","PSBVAR",2,0)
 ;;3.0;BAR CODE MED ADMIN;*31,70,80,83*;Mar 2004;Build 89
"RTN","PSBVAR",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBVAR",4,0)
 ;
"RTN","PSBVAR",5,0)
 ; Reference/IA
"RTN","PSBVAR",6,0)
 ; ^DPT/10035
"RTN","PSBVAR",7,0)
 ; ^DIC(42/10039
"RTN","PSBVAR",8,0)
 ;
"RTN","PSBVAR",9,0)
 ;*70 - alter DD trigger code so Clinic Orders do not update variances
"RTN","PSBVAR",10,0)
 ;*83 - add new event to 53.78 var file code 4 Early/Late Remove and
"RTN","PSBVAR",11,0)
 ;      track this event.
"RTN","PSBVAR",12,0)
 ;
"RTN","PSBVAR",13,0)
EN ;
"RTN","PSBVAR",14,0)
 Q
"RTN","PSBVAR",15,0)
 ;
"RTN","PSBVAR",16,0)
CHKPRN(DFN,PSBMIN,PSBLOG) ;
"RTN","PSBVAR",17,0)
 Q:PSBMIN=""
"RTN","PSBVAR",18,0)
 Q:PSBMIN'>$$GET^XPAR("DIV","PSB ADMIN PRN EFFECT")
"RTN","PSBVAR",19,0)
 D ADD(.RESULTS,DFN,3,PSBMIN,"",PSBLOG)
"RTN","PSBVAR",20,0)
 Q
"RTN","PSBVAR",21,0)
 ;
"RTN","PSBVAR",22,0)
 ;CHECK^PSBVAR() calling point is used to create a new variance entry.
"RTN","PSBVAR",23,0)
 ;  Triggered by Order Administration Variance Field # .14 in the BCMA
"RTN","PSBVAR",24,0)
 ;  Medication Log File (#53.79).
"RTN","PSBVAR",25,0)
 ;
"RTN","PSBVAR",26,0)
CHECK(DFN,PSBMIN,PSBLOG) ;
"RTN","PSBVAR",27,0)
 Q:PSBMIN=""
"RTN","PSBVAR",28,0)
 N RESULTS,EV
"RTN","PSBVAR",29,0)
 ; Checks the timing from the Med Log Entry X-Ref
"RTN","PSBVAR",30,0)
 S EV=$S(PSBACTN="RM":4,1:2)      ;create EV var and pass into ADD *83
"RTN","PSBVAR",31,0)
 S PSBDRUG=$$GET1^DIQ(53.79,PSBLOG_",",.08,"I")
"RTN","PSBVAR",32,0)
 I PSBMIN<0 D:(PSBMIN*-1)>$$GET^XPAR("DIV","PSB ADMIN BEFORE") ADD(.RESULTS,DFN,EV,PSBMIN,PSBDRUG,PSBLOG)
"RTN","PSBVAR",33,0)
 I PSBMIN>0 D:PSBMIN>$$GET^XPAR("DIV","PSB ADMIN AFTER") ADD(.RESULTS,DFN,EV,PSBMIN,PSBDRUG,PSBLOG)
"RTN","PSBVAR",34,0)
 Q
"RTN","PSBVAR",35,0)
 ;
"RTN","PSBVAR",36,0)
ADD(RESULTS,DFN,PSBEVNT,PSBMIN,PSBDRUG,PSBLOG) ;
"RTN","PSBVAR",37,0)
 ;
"RTN","PSBVAR",38,0)
 ; DFN:      Patient File (#2) Pointer
"RTN","PSBVAR",39,0)
 ; PSBEVNT:  Event Code (See DD for 53.78)
"RTN","PSBVAR",40,0)
 ; PSBMIN:   Minutes off of schedule (Optional)
"RTN","PSBVAR",41,0)
 ; PSBDRUG:  Drug File (#50) Pointer (Optional)
"RTN","PSBVAR",42,0)
 ; PSBLOG:   BCMA Med Log IEN (Optional)
"RTN","PSBVAR",43,0)
 ;
"RTN","PSBVAR",44,0)
 ;Do not create variance for below events:
"RTN","PSBVAR",45,0)
 ;   Med order with missing dose status.
"RTN","PSBVAR",46,0)
 ;   Clinic orders
"RTN","PSBVAR",47,0)
 ;
"RTN","PSBVAR",48,0)
 I $G(PSBLOG),$P($G(^PSB(53.79,PSBLOG,0)),U,9)="M" Q
"RTN","PSBVAR",49,0)
 Q:($G(PSBCLIN)]"")!($G(PSBCLORD)]"")  ;Clin Flags defined - PSBML *70
"RTN","PSBVAR",50,0)
 ;
"RTN","PSBVAR",51,0)
 N PSBDT,PSBRB,PSBWRD,PSBXX
"RTN","PSBVAR",52,0)
 ;
"RTN","PSBVAR",53,0)
 D EN^DDIOL("Filing Variance...")
"RTN","PSBVAR",54,0)
 D NOW^%DTC
"RTN","PSBVAR",55,0)
 L +(^PSB(53.78,0)):5 E  S RESULTS(0)="-1^Variance Log Locked" Q
"RTN","PSBVAR",56,0)
 S PSBXX=$O(^PSB(53.78,"A"),-1)+1
"RTN","PSBVAR",57,0)
 S $P(^PSB(53.78,0),U,3)=PSBXX
"RTN","PSBVAR",58,0)
 S $P(^PSB(53.78,0),U,4)=$P(^PSB(53.78,0),U,4)+1
"RTN","PSBVAR",59,0)
 ;
"RTN","PSBVAR",60,0)
WARD ;Extract the ward and room/bed information.
"RTN","PSBVAR",61,0)
 ;DFN is pre-defined.
"RTN","PSBVAR",62,0)
 S PSBRB=$P($G(^DPT(DFN,.101)),U)
"RTN","PSBVAR",63,0)
 S PSBRB=$S(PSBRB'="":PSBRB,1:"***")
"RTN","PSBVAR",64,0)
 S PSBWRD=$P($G(^DPT(DFN,.1)),U)
"RTN","PSBVAR",65,0)
 ;Convert Ward Name to Ward IEN
"RTN","PSBVAR",66,0)
 I PSBWRD'="" D
"RTN","PSBVAR",67,0)
 . S PSBDT=%
"RTN","PSBVAR",68,0)
 . S PSBWRD=$$FIND1^DIC(42,"","X",PSBWRD,"","","ERR")
"RTN","PSBVAR",69,0)
 . S %=PSBDT ;reset after $$FIND1^DIC fileman call
"RTN","PSBVAR",70,0)
 S PSBWRD=$S($G(PSBWRD):PSBWRD,1:"***")
"RTN","PSBVAR",71,0)
 ;
"RTN","PSBVAR",72,0)
 ; Set Variance Entry
"RTN","PSBVAR",73,0)
 S ^PSB(53.78,PSBXX,0)=DFN_U_PSBRB_U_DUZ_U_%_U_PSBEVNT_U_$G(PSBMIN)_U_$G(PSBDRUG)_U_$G(PSBLOG)_U_PSBWRD
"RTN","PSBVAR",74,0)
 ;
"RTN","PSBVAR",75,0)
 S ^PSB(53.78,"ADT",%,PSBXX)=""
"RTN","PSBVAR",76,0)
 S ^PSB(53.78,"B",DFN,PSBXX)=""
"RTN","PSBVAR",77,0)
 L -(^PSB(53.78,0))
"RTN","PSBVAR",78,0)
 S RESULTS(0)="1^Data Filed"
"RTN","PSBVAR",79,0)
 Q
"RTN","PSBVAR",80,0)
 ;
"RTN","PSBVAR",81,0)
 ; Unable to UPDATE^DIE WHILE IN UPDATE^DIE
"RTN","PSBVAR",82,0)
 W !,"Filing Variance..."
"RTN","PSBVAR",83,0)
 D EN^DDIOL("Filing Variance...")
"RTN","PSBVAR",84,0)
 N PSBVFDA,PSBVMSG,PSBVIEN
"RTN","PSBVAR",85,0)
 D VAL(.01,"`"_DFN) ; Patient Pointer
"RTN","PSBVAR",86,0)
 S Y=$G(^DPT(DFN,.1),"Unk Ward")_" "_$G(^DPT(DFN,.101),"Unk Bed")
"RTN","PSBVAR",87,0)
 D VAL(.02,Y) ; Patient Location
"RTN","PSBVAR",88,0)
 D VAL(.03,"`"_DUZ) ; New Person Pointer
"RTN","PSBVAR",89,0)
 D VAL(.04,"NOW") ; DT Entered
"RTN","PSBVAR",90,0)
 D VAL(.05,PSBEVNT) ; Event Code
"RTN","PSBVAR",91,0)
 D:$G(PSBMIN) VAL(.06,PSBMIN) ; Minutes Early/Late
"RTN","PSBVAR",92,0)
 D:$G(PSBDRUG) VAL(.07,"`"_PSBDRUG) ; Drug File Pointer
"RTN","PSBVAR",93,0)
 D:$G(PSBLOG) VAL(.08,"`"_PSBLOG)
"RTN","PSBVAR",94,0)
 ; Call UPDATE^DIE and set Results(0)
"RTN","PSBVAR",95,0)
 D UPDATE^DIE("","PSBVFDA","PSBVIEN","PSBVMSG")  ; PSBVFDA set into file 53.68, BCMA MEDICATION VARIANCE LOG at VAL+3
"RTN","PSBVAR",96,0)
 I $D(PSBVMSG) S RESULTS(0)="-1^"_PSBVMSG("DIERR",1)_": "_PSBVMSG("DIERR",1,"TEXT",1)
"RTN","PSBVAR",97,0)
 E  S RESULTS(0)="1^Data Successfully Filed^"_PSBVIEN(1)
"RTN","PSBVAR",98,0)
 W !,RESULTS(0)
"RTN","PSBVAR",99,0)
 Q
"RTN","PSBVAR",100,0)
 ;
"RTN","PSBVAR",101,0)
VAL(PSBVFLD,PSBVVAL) ;
"RTN","PSBVAR",102,0)
 N PSBVRET
"RTN","PSBVAR",103,0)
 K ^TMP("DIERR",$J)
"RTN","PSBVAR",104,0)
 D VAL^DIE(53.78,"+1,",PSBVFLD,"F",PSBVVAL,.PSBVRET,"PSBVFDA")
"RTN","PSBVAR",105,0)
 I PSBVRET="^" F X=0:0 S X=$O(^TMP("DIERR",$J,X)) Q:'X  S Y=^TMP("DIERR",$J,X)_": "_$G(^(X,"TEXT",1),"**"),RESULTS($O(RESULTS(""),-1)+1)="Data Validation Error: "_Y
"RTN","PSBVAR",106,0)
 K ^TMP("DIERR",$J)
"RTN","PSBVAR",107,0)
 Q
"RTN","PSBVAR",108,0)
 ;
"RTN","PSBVDLIV")
0^45^B82920936^B81051093
"RTN","PSBVDLIV",1,0)
PSBVDLIV ;BIRMINGHAM/EFC-BCMA IV VIRTUAL DUE LIST ;03/06/16 3:06pm
"RTN","PSBVDLIV",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,38,32,58,70,83**;Mar 2004;Build 89
"RTN","PSBVDLIV",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBVDLIV",4,0)
 ;
"RTN","PSBVDLIV",5,0)
 ; Reference/IA
"RTN","PSBVDLIV",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBVDLIV",7,0)
 ; EN^PSJBCMA1/2829 
"RTN","PSBVDLIV",8,0)
 ; GETPROVL^PSGSICH1/5653
"RTN","PSBVDLIV",9,0)
 ; INTRDIC^PSGSICH1/5654
"RTN","PSBVDLIV",10,0)
 ;
"RTN","PSBVDLIV",11,0)
 ;*58 - add 29th piece to Results for Override/Intervention flag 1/0
"RTN","PSBVDLIV",12,0)
 ;*70 - add 32nd piece to Results for Clinic Order name
"RTN","PSBVDLIV",13,0)
 ;    - add 33rd piece to Results for Clinic ien ptr to file #44
"RTN","PSBVDLIV",14,0)
 ;*83 - Clinic Orders should show up on VDL's when start order date
"RTN","PSBVDLIV",15,0)
 ;      is Today now ignores the time portion of that field.
"RTN","PSBVDLIV",16,0)
 ;
"RTN","PSBVDLIV",17,0)
EN(DFN,PSBDT) ; Default Order List Return for Today
"RTN","PSBVDLIV",18,0)
 ;
"RTN","PSBVDLIV",19,0)
 ; RPC: PSB GETORDERLIST
"RTN","PSBVDLIV",20,0)
 ;
"RTN","PSBVDLIV",21,0)
 ; Description:
"RTN","PSBVDLIV",22,0)
 ; Returns the current IV order set for today to display on the
"RTN","PSBVDLIV",23,0)
 ; client VDL
"RTN","PSBVDLIV",24,0)
 ;
"RTN","PSBVDLIV",25,0)
 N PSBDATA,PSBTBOUT,PSBDOADD,PSBDT2,X,PSHIST                ;*70
"RTN","PSBVDLIV",26,0)
 S PSBTBOUT=0,PSBDOADD=0
"RTN","PSBVDLIV",27,0)
 S:PSBTAB="IVTAB" PSBDOADD=1
"RTN","PSBVDLIV",28,0)
 ;
"RTN","PSBVDLIV",29,0)
 ; Passing PSBDT as 3rd parameter turns off the V.1.0 One-Time lookback
"RTN","PSBVDLIV",30,0)
 K ^TMP("PSJ",$J),^TMP("PSB",$J,"ON IVTAB")
"RTN","PSBVDLIV",31,0)
 S PSBHIST=$S(PSBCLINORD:-7,1:-3)          ;*70 default hist days back
"RTN","PSBVDLIV",32,0)
 S X1=PSBDT,X2=PSBHIST D C^%DTC S PSBDT2=X                  ;*70
"RTN","PSBVDLIV",33,0)
 D EN^PSJBCMA(DFN,PSBDT2,PSBDT)
"RTN","PSBVDLIV",34,0)
 ;Filter in/out Clinic Orders                               ;*70
"RTN","PSBVDLIV",35,0)
 D:PSBCLINORD INCLUDCO^PSBVDLU1
"RTN","PSBVDLIV",36,0)
 D:'PSBCLINORD REMOVECO^PSBVDLU1
"RTN","PSBVDLIV",37,0)
 ;
"RTN","PSBVDLIV",38,0)
 I $G(^TMP("PSJ",$J,1,0))=-1 Q  ; No orders
"RTN","PSBVDLIV",39,0)
 ;
"RTN","PSBVDLIV",40,0)
 F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:('PSBX)!(PSBTBOUT)  D
"RTN","PSBVDLIV",41,0)
 .N PSBRTNOW S PSBRTNOW=$$NOW^XLFDT()
"RTN","PSBVDLIV",42,0)
 .D CLEAN^PSBVT,PSJ^PSBVT(PSBX)
"RTN","PSBVDLIV",43,0)
 .;
"RTN","PSBVDLIV",44,0)
 .; << Standard checks for ALL orders >>
"RTN","PSBVDLIV",45,0)
 .;
"RTN","PSBVDLIV",46,0)
 .Q:PSBONX'["V"  ; IVs only
"RTN","PSBVDLIV",47,0)
 .Q:PSBIVT["P"  ; No piggybacks
"RTN","PSBVDLIV",48,0)
 .Q:PSBONX["P"  ;     No Pending Orders
"RTN","PSBVDLIV",49,0)
 .Q:('PSBCLINORD)&(PSBOST>($$FMADD^XLFDT($$NOW^XLFDT,,,$$GET^XPAR("DIV","PSB ADMIN BEFORE"))))    ;*70 don't check this for CO's
"RTN","PSBVDLIV",50,0)
 .;CO Order future start check now based on the date only Not time *83
"RTN","PSBVDLIV",51,0)
 .Q:($G(PSBCLORD)]"")&($P(PSBOST,".")>$P(PSBRTNOW,"."))
"RTN","PSBVDLIV",52,0)
 .;
"RTN","PSBVDLIV",53,0)
 .; Need to see if "last order" in chain is active/not pending.
"RTN","PSBVDLIV",54,0)
 .S PSBFON1=PSBFON,PSBLOOP=0 I $G(PSBFON)]"" S PSBLACTV=$S($G(PSBFON)["P":0,1:1) S PSBFON2=$G(PSBFON) I 'PSBLACTV F  D  Q:($G(PSBFON)="")!($G(PSBFON1)=$G(PSBFON2))!(PSBLOOP)!(PSBLACTV)  ;
"RTN","PSBVDLIV",55,0)
 ..I $G(PSBFON)["P" K ^TMP("PSJ1",$J) D EN^PSJBCMA1(DFN,PSBFON2,1) I ^TMP("PSJ1",$J,0)=-1 S PSBFON=""
"RTN","PSBVDLIV",56,0)
 ..D:$G(PSBFON)["" CLEAN^PSBVT,PSJ1^PSBVT(DFN,PSBFON2)
"RTN","PSBVDLIV",57,0)
 ..I PSBFON=PSBFON2 S PSBLOOP=1,PSBLACTV=0 Q
"RTN","PSBVDLIV",58,0)
 ..S PSBLACTV=$S($G(PSBFON)["P":0,$G(PSBFON)']"":PSBLACTV,1:1),PSBFON2=$G(PSBFON)
"RTN","PSBVDLIV",59,0)
 ..S:(PSBLACTV)&($G(PSBOST)>($$FMADD^XLFDT($$NOW^XLFDT,,,$$GET^XPAR("DIV","PSB ADMIN BEFORE")))) PSBLACTV=0
"RTN","PSBVDLIV",60,0)
 .D CLEAN^PSBVT,PSJ^PSBVT(PSBX) ;Refresh data
"RTN","PSBVDLIV",61,0)
 .K PSBCOMP,PSBCOMPX,PSBINFDT,PSBINFST D INFUSING^PSBVDLU2
"RTN","PSBVDLIV",62,0)
 .D NOW^%DTC
"RTN","PSBVDLIV",63,0)
 .I ((PSBOSTS="A")!(PSBOSTS="R"))&(PSBOSP<%) S PSBOSTS="E"
"RTN","PSBVDLIV",64,0)
 .I (PSBOSTS["D")&(PSBCOMP=0) Q  ;     Is it DC'd and not infusing or stopped
"RTN","PSBVDLIV",65,0)
 .I PSBOSTS="E",PSBCOMP=0 Q  ; Is expired and not infusing or stopped
"RTN","PSBVDLIV",66,0)
 .I PSBOSTS="D",PSBCOMP=1,($G(PSBFON)]""),PSBLACTV Q  ; order is DC'ed   will be picked up by following order
"RTN","PSBVDLIV",67,0)
 .I PSBOSTS="E",PSBCOMP=1,($G(PSBFON)]""),PSBLACTV Q  ; order is expired will be picked up by following order
"RTN","PSBVDLIV",68,0)
 .I PSBOSTS="R",PSBFOR="R",PSBOSP<PSBWBEG Q  ; order is renewed bag picked up by following order
"RTN","PSBVDLIV",69,0)
 .Q:$G(^TMP("PSB",$J,"ON IVTAB",PSBDFN,PSBONX))=1  ; The "previous order" is displayed on the VDL!
"RTN","PSBVDLIV",70,0)
 .I (PSBOSTS["E")&(PSBCOMP=0) Q  ;     Is it expired and not infusing
"RTN","PSBVDLIV",71,0)
 .I PSBIVT["S",PSBISYR=1 Q  ;     No intermittent syringes - done on PB tab
"RTN","PSBVDLIV",72,0)
 .I PSBIVT["C",PSBISYR=1 Q  ;     No intermittent syringes - done on PB tab
"RTN","PSBVDLIV",73,0)
 .I PSBIVT["C",PSBCHEMT="P" Q  ;  No Piggyback Chemos
"RTN","PSBVDLIV",74,0)
 .I PSBNGF&(PSBCOMP=1) Q  ;         Is it marked DO NOT GIVE!
"RTN","PSBVDLIV",75,0)
 .;
"RTN","PSBVDLIV",76,0)
 .; Non One-Times with stop date/time < now
"RTN","PSBVDLIV",77,0)
 .;
"RTN","PSBVDLIV",78,0)
 .D NOW^%DTC
"RTN","PSBVDLIV",79,0)
 .I PSBOSP<%,PSBOSTS'="R",PSBCOMP'=1 Q
"RTN","PSBVDLIV",80,0)
 .;
"RTN","PSBVDLIV",81,0)
 .; include Active, Renewed, ReInstated and On Call and Hold and Expired infusing
"RTN","PSBVDLIV",82,0)
 .; (Is it not one time)&(Is it not active or renewed or On Call or Hold)
"RTN","PSBVDLIV",83,0)
 .Q:PSBSCHT'="O"&((PSBOSTS'="A")&(PSBOSTS'="R")&(PSBOSTS'="RE")&(PSBOSTS'="O")&(PSBOSTS'="D")&(PSBOSTS'="H")&(PSBOSTS'="E"))
"RTN","PSBVDLIV",84,0)
 .;
"RTN","PSBVDLIV",85,0)
 .; Is One Time Given
"RTN","PSBVDLIV",86,0)
 .;
"RTN","PSBVDLIV",87,0)
 .I PSBSCHT="O" D  Q:PSBGVN
"RTN","PSBVDLIV",88,0)
 ..S (PSBGVN,X,Y)=""
"RTN","PSBVDLIV",89,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBVDLIV",90,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  D
"RTN","PSBVDLIV",91,0)
 ....I $P(^PSB(53.79,Y,.1),U)=PSBON,$P(^PSB(53.79,Y,0),U,9)="G" S PSBGVN=1,(X,Y)=0
"RTN","PSBVDLIV",92,0)
 .;
"RTN","PSBVDLIV",93,0)
 .; Is On-Call Given, Can it be given more than once
"RTN","PSBVDLIV",94,0)
 .;
"RTN","PSBVDLIV",95,0)
 .I PSBSCHT="OC" D  Q:PSBGVN&('$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL"))
"RTN","PSBVDLIV",96,0)
 ..S (PSBGVN,X,Y)=""
"RTN","PSBVDLIV",97,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBVDLIV",98,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  D
"RTN","PSBVDLIV",99,0)
 ....I $P(^PSB(53.79,Y,.1),U)=PSBON,$P(^PSB(53.79,Y,0),U,9)="G" S PSBGVN=1,(X,Y)=0
"RTN","PSBVDLIV",100,0)
 .;
"RTN","PSBVDLIV",101,0)
OK .S PSBSTRT=PSBOST ; Order Start Date/Time
"RTN","PSBVDLIV",102,0)
 .S PSBSTOP=PSBOSP ; Order Stop Date/Time
"RTN","PSBVDLIV",103,0)
 .;
"RTN","PSBVDLIV",104,0)
 .S PSBREC=""
"RTN","PSBVDLIV",105,0)
 .S $P(PSBREC,U,1)=DFN ; dfn
"RTN","PSBVDLIV",106,0)
 .S $P(PSBREC,U,2)=PSBONX ; Order
"RTN","PSBVDLIV",107,0)
 .S $P(PSBREC,U,3)=+PSBON ; order ien
"RTN","PSBVDLIV",108,0)
 .S $P(PSBREC,U,4)=PSBOTYP ; iv/ud/pending
"RTN","PSBVDLIV",109,0)
 .S $P(PSBREC,U,5)=PSBSCHT ; schedule type
"RTN","PSBVDLIV",110,0)
 .S $P(PSBREC,U,6)=PSBSCH ; schedule
"RTN","PSBVDLIV",111,0)
 .S Y=""
"RTN","PSBVDLIV",112,0)
 .S:PSBSM Y="SM"
"RTN","PSBVDLIV",113,0)
 .S:PSBHSM Y="HSM"
"RTN","PSBVDLIV",114,0)
 .S $P(PSBREC,U,7)=Y ; self med
"RTN","PSBVDLIV",115,0)
 .S $P(PSBREC,U,8)=PSBOITX ; drugname
"RTN","PSBVDLIV",116,0)
 .S $P(PSBREC,U,9)=PSBDOSE_" "_PSBIFR ; dosage
"RTN","PSBVDLIV",117,0)
 .S $P(PSBREC,U,10)=PSBMR ; med route
"RTN","PSBVDLIV",118,0)
 .; IV Information Column *new*  -  status date/time
"RTN","PSBVDLIV",119,0)
 .; (only stopped or infusing)
"RTN","PSBVDLIV",120,0)
 .;
"RTN","PSBVDLIV",121,0)
 .D:PSBCOMP 
"RTN","PSBVDLIV",122,0)
 ..S $P(PSBREC,U,11)=PSBINFDT K PSBINFDT
"RTN","PSBVDLIV",123,0)
 ..S PSBSTUS=PSBINFST,$P(PSBREC,U,20)=PSBSTUS K PSBINFST
"RTN","PSBVDLIV",124,0)
 .S $P(PSBREC,U,14)="" ; admin date inserted below
"RTN","PSBVDLIV",125,0)
 .S $P(PSBREC,U,15)=PSBOIT ; OI Pointer
"RTN","PSBVDLIV",126,0)
 .S $P(PSBREC,U,16)=PSBNJECT  ;Set injectable med route flag
"RTN","PSBVDLIV",127,0)
 .; Variable dosage entered as ####-####?
"RTN","PSBVDLIV",128,0)
 .I $P(PSBREC,U,9)?1.4N1"-"1.4N.E S $P(PSBREC,U,17)=1
"RTN","PSBVDLIV",129,0)
 .E  S $P(PSBREC,U,17)=0
"RTN","PSBVDLIV",130,0)
 .S $P(PSBREC,U,18)=PSBIVT  ;IV TYPE
"RTN","PSBVDLIV",131,0)
 .S $P(PSBREC,U,21)=PSBOST
"RTN","PSBVDLIV",132,0)
 .S $P(PSBREC,U,22)=PSBOSTS
"RTN","PSBVDLIV",133,0)
 .S $P(PSBREC,U,26)=PSBSTOP
"RTN","PSBVDLIV",134,0)
 .S $P(PSBREC,U,27)=$$LASTG^PSBCSUTL(DFN,PSBOIT)
"RTN","PSBVDLIV",135,0)
 .;*58 determine if override or intervn exists, send 1/0 (true/false)
"RTN","PSBVDLIV",136,0)
 .N PSBARR D GETPROVL^PSGSICH1(DFN,PSBONX,.PSBARR)
"RTN","PSBVDLIV",137,0)
 .I $O(PSBARR(""))="" D INTRDIC^PSGSICH1(DFN,PSBONX,.PSBARR,2)
"RTN","PSBVDLIV",138,0)
 .S $P(PSBREC,U,29)=$S($O(PSBARR(""))]"":1,1:0)
"RTN","PSBVDLIV",139,0)
 .;       piece 30 reserved by UNIT DOSE tab for last injection
"RTN","PSBVDLIV",140,0)
 .;       piece 31 reserved by IVPB tab for injection flag
"RTN","PSBVDLIV",141,0)
 .S $P(PSBREC,U,32)=$G(PSBCLORD)                 ;clinic name          *70
"RTN","PSBVDLIV",142,0)
 .S $P(PSBREC,U,33)=$G(PSBCLIEN)                 ;clinic ien ptr       *70
"RTN","PSBVDLIV",143,0)
 .;
"RTN","PSBVDLIV",144,0)
 .; Gather Dispense Drugs
"RTN","PSBVDLIV",145,0)
 .D NOW^%DTC
"RTN","PSBVDLIV",146,0)
 .S (PSBDDS,PSBSOLS,PSBADDS)="0"
"RTN","PSBVDLIV",147,0)
 .F Y=0:0 S Y=$O(PSBDDA(Y)) Q:'Y  D
"RTN","PSBVDLIV",148,0)
 ..Q:$P(PSBDDA(Y),U,4)&($P(PSBDDA(Y),U,4)<%)  ; Inactive
"RTN","PSBVDLIV",149,0)
 ..S:$P(PSBDDA(Y),U,3)="" $P(PSBDDA(Y),U,3)=1
"RTN","PSBVDLIV",150,0)
 ..S PSBDDS=PSBDDS_U_$P(PSBDDA(Y),U,1,3)
"RTN","PSBVDLIV",151,0)
 ..S $P(PSBDDS,U,1)=PSBDDS+1
"RTN","PSBVDLIV",152,0)
 .; On-Call One Time PRN orders
"RTN","PSBVDLIV",153,0)
 .S PSBQRR=0
"RTN","PSBVDLIV",154,0)
 .I "^O^OC^P^"[(U_PSBSCHT_U) D  Q
"RTN","PSBVDLIV",155,0)
 ..I 'PSBDOADD S PSBTBOUT=1,^TMP("PSB",$J,"IVTAB",0)=2,^TMP("PSB",$J,"IVTAB",1)=1,^TMP("PSB",$J,"IVTAB",2)=1 Q
"RTN","PSBVDLIV",156,0)
 ..D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSBNOW\1,PSBDDS,PSBSOLS,PSBADDS,"IVTAB")
"RTN","PSBVDLIV",157,0)
 ..S:$G(PSBFON)'="" ^TMP("PSB",$J,"ON IVTAB",PSBDFN,PSBFON)=1  ; Now do not have to place "following order" on VDL!
"RTN","PSBVDLIV",158,0)
 .;
"RTN","PSBVDLIV",159,0)
 .; IV's - don't worry about admin times if blank
"RTN","PSBVDLIV",160,0)
 .I PSBONX["V",PSBIVT'="P",PSBADST="" D  Q
"RTN","PSBVDLIV",161,0)
 ..I 'PSBDOADD S PSBTBOUT=1,^TMP("PSB",$J,"IVTAB",0)=2,^TMP("PSB",$J,"IVTAB",1)=1,^TMP("PSB",$J,"IVTAB",2)=1 Q
"RTN","PSBVDLIV",162,0)
 ..D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSBNOW\1_".",PSBDDS,PSBSOLS,PSBADDS,"IVTAB")
"RTN","PSBVDLIV",163,0)
 ..S:$G(PSBFON)'="" ^TMP("PSB",$J,"ON IVTAB",PSBDFN,PSBFON)=1  ; Now do not have to place "following order" on VDL!
"RTN","PSBVDLIV",164,0)
 .;
"RTN","PSBVDLIV",165,0)
 .; Now we deal with only continuous
"RTN","PSBVDLIV",166,0)
 .; process admintimes
"RTN","PSBVDLIV",167,0)
 .S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBVDLIV",168,0)
 .S PSBADMIN=PSBADST
"RTN","PSBVDLIV",169,0)
 .; process admin times against beginning and ending date
"RTN","PSBVDLIV",170,0)
 .; build all orders for both days.
"RTN","PSBVDLIV",171,0)
 .F PSBY=1:1 Q:$P(PSBADMIN,"-",PSBY)=""  D
"RTN","PSBVDLIV",172,0)
 ..; apply this time to the beginning window date
"RTN","PSBVDLIV",173,0)
 ..S PSB=+(PSBWBEG\1_"."_$P(PSBADMIN,"-",PSBY))
"RTN","PSBVDLIV",174,0)
 ..D:(PSB'<PSBWBEG)&(PSB'>PSBWEND)  ; Make sure it is in the window
"RTN","PSBVDLIV",175,0)
 ...D:(PSB'<PSBSTRT)&(PSB<PSBSTOP)  ; Make sure this time is active
"RTN","PSBVDLIV",176,0)
 ....D:$$OKAY^PSBVDLU1(PSBSTRT,$P(PSB,"."),PSBSCH,PSBON,PSBOITX,PSBFREQ)  ; Okay on this date?
"RTN","PSBVDLIV",177,0)
 .....I 'PSBDOADD S PSBTBOUT=1,^TMP("PSB",$J,"IVTAB",0)=2,^TMP("PSB",$J,"IVTAB",1)=1,^TMP("PSB",$J,"IVTAB",2)=1 Q
"RTN","PSBVDLIV",178,0)
 .....D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSB,PSBDDS,PSBSOLS,PSBADDS,"IVTAB")
"RTN","PSBVDLIV",179,0)
 .....S:$G(PSBFON)'="" ^TMP("PSB",$J,"ON IVTAB",PSBDFN,PSBFON)=1  ; Now do not have to place "following order" on VDL!
"RTN","PSBVDLIV",180,0)
 ..;
"RTN","PSBVDLIV",181,0)
 ..Q:(PSBWBEG\1)=(PSBWEND\1)  ; Window only has one day rare but possible
"RTN","PSBVDLIV",182,0)
 ..;
"RTN","PSBVDLIV",183,0)
 ..; apply this time to the ending window date
"RTN","PSBVDLIV",184,0)
 ..S PSB=+(PSBWEND\1_"."_$P(PSBADMIN,"-",PSBY))
"RTN","PSBVDLIV",185,0)
 ..D:(PSB'<PSBWBEG)&(PSB'>PSBWEND)  ; Make sure it is in the window
"RTN","PSBVDLIV",186,0)
 ...D:(PSB'<PSBSTRT)&(PSB<PSBSTOP)  ; Make sure this time is active
"RTN","PSBVDLIV",187,0)
 ....D:$$OKAY^PSBVDLU1(PSBSTRT,$P(PSB,"."),PSBSCH,PSBON,PSBOITX,PSBFREQ)  ; Okay on this date?
"RTN","PSBVDLIV",188,0)
 .....I 'PSBDOADD S PSBTBOUT=1,^TMP("PSB",$J,"IVTAB",0)=2,^TMP("PSB",$J,"IVTAB",1)=1,^TMP("PSB",$J,"IVTAB",2)=1 Q
"RTN","PSBVDLIV",189,0)
 .....D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSB,PSBDDS,PSBSOLS,PSBADDS,"IVTAB")
"RTN","PSBVDLIV",190,0)
 .....S:$G(PSBFON)'="" ^TMP("PSB",$J,"ON IVTAB",PSBDFN,PSBFON)=1  ; Now do not have to place "following order" on VDL!
"RTN","PSBVDLIV",191,0)
 K ^TMP("PSB",$J,"ON IVTAB")
"RTN","PSBVDLIV",192,0)
 ;
"RTN","PSBVDLIV",193,0)
 ;add initials of verifying pharmacist/verifying nurse
"RTN","PSBVDLIV",194,0)
 D:PSBDOADD VNURSE^PSBVDLU1("IVTAB")
"RTN","PSBVDLIV",195,0)
 Q
"RTN","PSBVDLIV",196,0)
 ;
"RTN","PSBVDLPA")
0^7^B24345187^B22291163
"RTN","PSBVDLPA",1,0)
PSBVDLPA ;BIRMINGHAM/EFC-BCMA UNIT DOSE VIRTUAL DUE LIST FUNCTIONS;03/06/16 3:06pm
"RTN","PSBVDLPA",2,0)
 ;;3.0;BAR CODE MED ADMIN;**5,16,13,38,32,58,70,83**;Mar 2004;Build 89
"RTN","PSBVDLPA",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBVDLPA",4,0)
 ;
"RTN","PSBVDLPA",5,0)
 ; called by PSBVDLUD to find patches not removed
"RTN","PSBVDLPA",6,0)
 ;
"RTN","PSBVDLPA",7,0)
 ; Reference/IA
"RTN","PSBVDLPA",8,0)
 ; $$GET^XPAR/2263
"RTN","PSBVDLPA",9,0)
 ; $$FMADD^XLFDT/10103
"RTN","PSBVDLPA",10,0)
 ; GETPROVL^PSGSICH1/5653
"RTN","PSBVDLPA",11,0)
 ; INTRDIC^PSGSICH1/5654
"RTN","PSBVDLPA",12,0)
 ; PHARMACY OI file #(50.7)/2180
"RTN","PSBVDLPA",13,0)
 ;
"RTN","PSBVDLPA",14,0)
 ;*58 - add 29th piece to Results for Override/Intervention flag 1/0
"RTN","PSBVDLPA",15,0)
 ;*70 - add 30th piece for consistency with psbvdlud routine.
"RTN","PSBVDLPA",16,0)
 ;    - add 32nd piece for clinic name for CO meds and a patch.
"RTN","PSBVDLPA",17,0)
 ;    - add 33rd piece to Results for Clinic ien ptr to file #44
"RTN","PSBVDLPA",18,0)
 ;*83 - add 34th & 35th piece to Results.  Remove flag & Remove time
"RTN","PSBVDLPA",19,0)
 ;      
"RTN","PSBVDLPA",20,0)
EN ;Search the Medlog file for patches that were Given and not Removed.
"RTN","PSBVDLPA",21,0)
 ; Place these meds into the return Results array.
"RTN","PSBVDLPA",22,0)
 ;
"RTN","PSBVDLPA",23,0)
 N PSBGNODE,PSBIEN,PSBXDTI,PSBXXDTI,PSBZON,X,Y,PSBPBK             ;*83
"RTN","PSBVDLPA",24,0)
 S PSBGNODE="^PSB(53.79,"_"""APATCH"""_","_DFN_")"
"RTN","PSBVDLPA",25,0)
 F  S PSBGNODE=$Q(@PSBGNODE) Q:PSBGNODE']""  Q:($QS(PSBGNODE,2)'="APATCH")!($QS(PSBGNODE,3)'=DFN)  D
"RTN","PSBVDLPA",26,0)
 .S PSBIEN=$QS(PSBGNODE,5)
"RTN","PSBVDLPA",27,0)
 .I '$D(^PSB(53.79,PSBIEN,.5,1)) Q
"RTN","PSBVDLPA",28,0)
 .I $P(^PSB(53.79,PSBIEN,.5,1,0),U,4)'="PATCH" Q
"RTN","PSBVDLPA",29,0)
 .I "G"'[$P(^PSB(53.79,PSBIEN,0),U,9)!($D(PSBONVDL(PSBIEN))) Q
"RTN","PSBVDLPA",30,0)
 .S PSBZON=$P(^PSB(53.79,PSBIEN,.1),"^")
"RTN","PSBVDLPA",31,0)
 .D CLEAN^PSBVT
"RTN","PSBVDLPA",32,0)
 .D PSJ1^PSBVT(DFN,PSBZON) Q:$G(PSBSCRT)=-1
"RTN","PSBVDLPA",33,0)
 .;
"RTN","PSBVDLPA",34,0)
 .S PSBPBK=+($$GET^XPAR("DIV","PSB VDL PATCH DAYS"))
"RTN","PSBVDLPA",35,0)
 .I PSBPBK D NOW^%DTC I ($$FMADD^XLFDT($P(PSBOSP,"."),(PSBPBK))<X) Q
"RTN","PSBVDLPA",36,0)
 .S $P(PSBREC,U,1)=DFN  ; dfn
"RTN","PSBVDLPA",37,0)
 .S $P(PSBREC,U,2)=PSBONX  ; order numer
"RTN","PSBVDLPA",38,0)
 .S $P(PSBREC,U,3)=PSBON  ; order ien
"RTN","PSBVDLPA",39,0)
 .S $P(PSBREC,U,4)="U"  ; order type U unit dose
"RTN","PSBVDLPA",40,0)
 .S $P(PSBREC,U,5)=PSBSCHT
"RTN","PSBVDLPA",41,0)
 .S $P(PSBREC,U,6)=PSBSCH
"RTN","PSBVDLPA",42,0)
 .S $P(PSBREC,U,7)=$S(PSBHSM:"HSM",PSBSM:"SM",1:"")
"RTN","PSBVDLPA",43,0)
 .S $P(PSBREC,U,8)=PSBOITX
"RTN","PSBVDLPA",44,0)
 .S $P(PSBREC,U,9)=PSBDOSE
"RTN","PSBVDLPA",45,0)
 .S $P(PSBREC,U,10)=PSBMR
"RTN","PSBVDLPA",46,0)
 .S:$D(PSBHSTAX(PSBOIT)) $P(PSBREC,U,11)=$O(PSBHSTAX(PSBOIT,""),-1),$P(PSBREC,U,20)=$O(PSBHSTAX(PSBOIT,$P(PSBREC,U,11),""),-1)
"RTN","PSBVDLPA",47,0)
 .D:'$D(PSBHSTAX(PSBOIT))
"RTN","PSBVDLPA",48,0)
 ..N PSBX,PSBY,PSBDONE S PSBDONE=0,PSBX="" F  S PSBX=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,PSBX),-1) Q:PSBX=""  D:'PSBDONE
"RTN","PSBVDLPA",49,0)
 ...S PSBY="" F  S PSBY=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,PSBX,PSBY),-1) Q:PSBY=""  D:'PSBDONE
"RTN","PSBVDLPA",50,0)
 ....S:$P(^PSB(53.79,PSBY,0),U,9)'="N" $P(PSBREC,U,20)=$P(^PSB(53.79,PSBY,0),U,9) S:($P(PSBREC,U,20)'="N")&($P(PSBREC,U,20)]"") $P(PSBREC,U,11)=PSBX,PSBDONE=1
"RTN","PSBVDLPA",51,0)
 .S $P(PSBREC,U,12)=PSBIEN
"RTN","PSBVDLPA",52,0)
 .S $P(PSBREC,U,13)="G"
"RTN","PSBVDLPA",53,0)
 .S $P(PSBREC,U,14)=$P(^PSB(53.79,PSBIEN,.1),U,3)
"RTN","PSBVDLPA",54,0)
 .I $P(PSBREC,U,14)="" S $P(PSBREC,U,14)=PSBNOW\1
"RTN","PSBVDLPA",55,0)
 .S $P(PSBREC,U,15)=PSBOIT
"RTN","PSBVDLPA",56,0)
 .D:($G(PSBTAB)="CVRSHT")!($G(PSBTAB)="UDTAB")
"RTN","PSBVDLPA",57,0)
 ..S $P(PSBREC,U,16)=PSBNJECT            ;always send this flag   *70
"RTN","PSBVDLPA",58,0)
 ..I $P(PSBREC,U,9)?1.4N1"-"1.4N.E S $P(PSBREC,U,17)=1
"RTN","PSBVDLPA",59,0)
 ..E  S $P(PSBREC,U,17)=0
"RTN","PSBVDLPA",60,0)
 ..S $P(PSBREC,U,19)=$S(PSBVNI]"":PSBVNI,PSBVNI']"":"***")
"RTN","PSBVDLPA",61,0)
 ..S $P(PSBREC,U,23)=""
"RTN","PSBVDLPA",62,0)
 ..S $P(PSBREC,U,26)=PSBOSP
"RTN","PSBVDLPA",63,0)
 ..S $P(PSBREC,U,27)=$$LASTG^PSBCSUTL($P(PSBREC,U),$P(PSBREC,U,15))
"RTN","PSBVDLPA",64,0)
 ..S $P(PSBREC,U,28)=0
"RTN","PSBVDLPA",65,0)
 ..I ($G(PSBTAB)="CVRSHT") S $P(PSBREC,U,28)=1
"RTN","PSBVDLPA",66,0)
 ..I ($G(PSBTAB)="UDTAB") I PSBSCHT'="O" S:(PSBOSTS="E")!(PSBOSTS["D") $P(PSBREC,U,28)=1
"RTN","PSBVDLPA",67,0)
 ..;*58 determine if override or intervn exists, send 1/0 (true/false)
"RTN","PSBVDLPA",68,0)
 ..N PSBARR D GETPROVL^PSGSICH1(DFN,PSBONX,.PSBARR)
"RTN","PSBVDLPA",69,0)
 ..I $O(PSBARR(""))="" D INTRDIC^PSGSICH1(DFN,PSBONX,.PSBARR,2)
"RTN","PSBVDLPA",70,0)
 ..S $P(PSBREC,U,29)=$S($O(PSBARR(""))]"":1,1:0)
"RTN","PSBVDLPA",71,0)
 ..;add last site                                              *70/*83
"RTN","PSBVDLPA",72,0)
 ..S $P(PSBREC,U,30)=$$LASTSITE^PSBINJEC(DFN,PSBOIT)              ;*83
"RTN","PSBVDLPA",73,0)
 ..;    piece 31 special IVPB use in vdl's not for coversheet
"RTN","PSBVDLPA",74,0)
 ..I $G(PSBTAB)="CVRSHT" D      ;If from coversheet use offset -1  *70
"RTN","PSBVDLPA",75,0)
 ...S $P(PSBREC,U,31)=$G(PSBCLORD)            ;clinic name
"RTN","PSBVDLPA",76,0)
 ...S $P(PSBREC,U,32)=$G(PSBCLIEN)            ;clinic ien ptr
"RTN","PSBVDLPA",77,0)
 ..I $G(PSBTAB)="UDTAB" D       ;Else must be Unit does VDL calling
"RTN","PSBVDLPA",78,0)
 ...S $P(PSBREC,U,32)=$G(PSBCLORD)            ;clinic name
"RTN","PSBVDLPA",79,0)
 ...S $P(PSBREC,U,33)=$G(PSBCLIEN)            ;clinic ien ptr
"RTN","PSBVDLPA",80,0)
 ...S $P(PSBREC,U,35)=$P(^PSB(53.79,PSBIEN,.1),U,7)  ;existing RM time
"RTN","PSBVDLPA",81,0)
 ...;
"RTN","PSBVDLPA",82,0)
 ..; Place into Coversheet activity ARRAY
"RTN","PSBVDLPA",83,0)
 ..S PSBDIDX="" I $D(^PSB(53.79,"AORD",DFN,PSBONX)) D
"RTN","PSBVDLPA",84,0)
 ...S PSBXDTI="",PSBXDTI=$O(^PSB(53.79,"AORD",DFN,PSBONX,PSBXDTI),-1)
"RTN","PSBVDLPA",85,0)
 ...Q:'$D(^PSB(53.79,"AORD",DFN,PSBONX,PSBXDTI,PSBIEN))
"RTN","PSBVDLPA",86,0)
 ...S PSBADMX(PSBONX,PSBXDTI,PSBIEN)="",PSBDIDX=1
"RTN","PSBVDLPA",87,0)
 ..I ('PSBDIDX)&$D(^PSB(53.79,"AORDX",DFN,PSBONX)) D
"RTN","PSBVDLPA",88,0)
 ...S PSBXXDTI="",PSBXXDTI=$O(^PSB(53.79,"AORDX",DFN,PSBONX,PSBXXDTI),-1)
"RTN","PSBVDLPA",89,0)
 ...Q:'$D(^PSB(53.79,"AORDX",DFN,PSBONX,PSBXXDTI,PSBIEN))
"RTN","PSBVDLPA",90,0)
 ...S PSBADMX(PSBONX,PSBXXDTI,PSBIEN)=""
"RTN","PSBVDLPA",91,0)
 .S $P(PSBREC,U,18)="PATCH"
"RTN","PSBVDLPA",92,0)
 .S $P(PSBREC,U,21)=PSBOST
"RTN","PSBVDLPA",93,0)
 .S $P(PSBREC,U,22)=PSBOSTS
"RTN","PSBVDLPA",94,0)
 .S PSBDDS="" F Y=0:0 S Y=$O(PSBDDA(Y)) Q:'Y  S:$P(PSBDDA(Y),U,4)="" $P(PSBDDA(Y),U,4)=1 S PSBDDS=PSBDDS_U_$P(PSBDDA(Y),U,1,4),$P(PSBDDS,U,1)=PSBDDS+1
"RTN","PSBVDLPA",95,0)
 .S PSBQRR=1
"RTN","PSBVDLPA",96,0)
 .; *83 Api below now calcs & adds MRR code & Remove time to (34,35)
"RTN","PSBVDLPA",97,0)
 .D ADD^PSBVDLU1(PSBREC,PSBOTXT,$P(PSBREC,U,14),PSBDDS,"","",$S($G(PSBTAB)="CVRSHT":"CVRSHT",1:"UDTAB"))
"RTN","PSBVDLPA",98,0)
 Q
"RTN","PSBVDLPB")
0^46^B108251396^B106147258
"RTN","PSBVDLPB",1,0)
PSBVDLPB ;BIRMINGHAM/EFC-BCMA IV VIRTUAL DUE ;03/06/16 3:06pm
"RTN","PSBVDLPB",2,0)
 ;;3.0;BAR CODE MED ADMIN;**11,13,38,32,58,68,70,83**;Mar 2004;Build 89
"RTN","PSBVDLPB",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBVDLPB",4,0)
 ;
"RTN","PSBVDLPB",5,0)
 ; Reference/IA
"RTN","PSBVDLPB",6,0)
 ; $$GET^XPAR/2263
"RTN","PSBVDLPB",7,0)
 ; File 200/10060
"RTN","PSBVDLPB",8,0)
 ; GETPROVL^PSGSICH1/5653
"RTN","PSBVDLPB",9,0)
 ; INTRDIC^PSGSICH1/5654
"RTN","PSBVDLPB",10,0)
 ;
"RTN","PSBVDLPB",11,0)
 ;*58 - add 29th piece to Results for Override/Intervention flag 1/0
"RTN","PSBVDLPB",12,0)
 ;*68 - add 30th piece to Results for Last Injection Site and
"RTN","PSBVDLPB",13,0)
 ;    - add 31st piece to Results for Piggyback tab to know the IV
"RTN","PSBVDLPB",14,0)
 ;      order is rotation type injectable.
"RTN","PSBVDLPB",15,0)
 ;*70 - add 32nd piece to Results for Clinic Order name
"RTN","PSBVDLPB",16,0)
 ;    - add 33rd piece to Results for Clinic ien ptr to file #44
"RTN","PSBVDLPB",17,0)
 ;*83 - Clinic Orders should show up on VDL's when start order date
"RTN","PSBVDLPB",18,0)
 ;      is Today now ignores the time portion of that field.
"RTN","PSBVDLPB",19,0)
 ;
"RTN","PSBVDLPB",20,0)
EN(DFN,PSBDT) ; Default Order List Return for Today
"RTN","PSBVDLPB",21,0)
 ;
"RTN","PSBVDLPB",22,0)
 ; RPC: PSB GETORDERLIST
"RTN","PSBVDLPB",23,0)
 ;
"RTN","PSBVDLPB",24,0)
 ; Description:
"RTN","PSBVDLPB",25,0)
 ; Returns the current IV order set for today to display on the
"RTN","PSBVDLPB",26,0)
 ; client VDL
"RTN","PSBVDLPB",27,0)
 ;
"RTN","PSBVDLPB",28,0)
 ;
"RTN","PSBVDLPB",29,0)
 N PSBDATA,PSBTBOUT
"RTN","PSBVDLPB",30,0)
 S PSBTBOUT=0,PSBDOADD=0
"RTN","PSBVDLPB",31,0)
 S:PSBTAB="PBTAB" PSBDOADD=1
"RTN","PSBVDLPB",32,0)
 ;
"RTN","PSBVDLPB",33,0)
 ;This routine now re-uses the ^TMP("PSJ",$J global built in PSBVDLTB
"RTN","PSBVDLPB",34,0)
 ;
"RTN","PSBVDLPB",35,0)
 I $G(^TMP("PSJ",$J,1,0))=-1 Q  ; No orders
"RTN","PSBVDLPB",36,0)
 ;
"RTN","PSBVDLPB",37,0)
 N RTBL D BLDTBL^PSBINJEC(.RTBL)  ;build valid IV rotable inj *68
"RTN","PSBVDLPB",38,0)
 ;
"RTN","PSBVDLPB",39,0)
 F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:('PSBX)!(PSBTBOUT)  D
"RTN","PSBVDLPB",40,0)
 .N PSBRTNOW S PSBRTNOW=$$NOW^XLFDT()
"RTN","PSBVDLPB",41,0)
 .D CLEAN^PSBVT,PSJ^PSBVT(PSBX)
"RTN","PSBVDLPB",42,0)
 .;
"RTN","PSBVDLPB",43,0)
 .; << Standard checks for ALL orders >>
"RTN","PSBVDLPB",44,0)
 .;
"RTN","PSBVDLPB",45,0)
 .Q:PSBONX["P"              ;No Pending Orders
"RTN","PSBVDLPB",46,0)
 .Q:'$$IVPTAB^PSBVDLU3(PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,PSBIVPSH)  ;Is Piggyback
"RTN","PSBVDLPB",47,0)
 .Q:PSBOST>PSBWADM          ;Order Start Date/Time > admin window
"RTN","PSBVDLPB",48,0)
 .;CO Order future start check now based on the date only Not time *83
"RTN","PSBVDLPB",49,0)
 .Q:($G(PSBCLORD)]"")&($P(PSBOST,".")>$P(PSBRTNOW,"."))
"RTN","PSBVDLPB",50,0)
 .Q:PSBOSP<PSBWBEG          ;For all Order Stop Date/Time < vdl window
"RTN","PSBVDLPB",51,0)
 .Q:PSBOSTS["D"             ;Is it DC'd
"RTN","PSBVDLPB",52,0)
 .Q:PSBNGF                  ;Is it marked DO NOT GIVE!
"RTN","PSBVDLPB",53,0)
 .; Non One-Times with stop date/time < now
"RTN","PSBVDLPB",54,0)
 .;
"RTN","PSBVDLPB",55,0)
 .D NOW^%DTC
"RTN","PSBVDLPB",56,0)
 .Q:PSBOSP<%
"RTN","PSBVDLPB",57,0)
 .;
"RTN","PSBVDLPB",58,0)
 .; include Active, Renewed, ReInstated and On Call
"RTN","PSBVDLPB",59,0)
 .; (Is it not one time)&(Is it not active or renewed or On Call)
"RTN","PSBVDLPB",60,0)
 .Q:PSBSCHT'="O"&((PSBOSTS'="A")&(PSBOSTS'="R")&(PSBOSTS'="RE")&(PSBOSTS'="O")&(PSBOSTS'="H"))
"RTN","PSBVDLPB",61,0)
 .;
"RTN","PSBVDLPB",62,0)
 .; Is One Time Given
"RTN","PSBVDLPB",63,0)
 .;
"RTN","PSBVDLPB",64,0)
 .I PSBSCHT="O" D  Q:PSBGVN
"RTN","PSBVDLPB",65,0)
 ..S (PSBGVN,X,Y)=""
"RTN","PSBVDLPB",66,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBVDLPB",67,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  S:($P(^PSB(53.79,Y,.1),U)=PSBONX)&($P(^PSB(53.79,Y,0),U,9)="G") PSBGVN=1,(X,Y)=0
"RTN","PSBVDLPB",68,0)
 .;
"RTN","PSBVDLPB",69,0)
 .; How long does One Time remain on VDL ?
"RTN","PSBVDLPB",70,0)
 .S PSBRMN=1
"RTN","PSBVDLPB",71,0)
 .I PSBSCHT="O",PSBOSP'=PSBOST,%>PSBOSP S PSBRMN=0
"RTN","PSBVDLPB",72,0)
 .Q:'PSBRMN
"RTN","PSBVDLPB",73,0)
 .;
"RTN","PSBVDLPB",74,0)
 .; Is On-Call Given, Can it be given more than once
"RTN","PSBVDLPB",75,0)
 .;
"RTN","PSBVDLPB",76,0)
 .I PSBSCHT="OC" D  Q:PSBGVN&('$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL"))
"RTN","PSBVDLPB",77,0)
 ..S (PSBGVN,X,Y)=""
"RTN","PSBVDLPB",78,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBVDLPB",79,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  S:($P(^PSB(53.79,Y,.1),U)=PSBON)&($P(^PSB(53.79,Y,0),U,9)="G") PSBGVN=1,(X,Y)=0
"RTN","PSBVDLPB",80,0)
 .;
"RTN","PSBVDLPB",81,0)
 .S PSBSTRT=PSBOST ; Order Start Date/Time
"RTN","PSBVDLPB",82,0)
 .S PSBSTOP=PSBOSP ; Order Stop Date/Time
"RTN","PSBVDLPB",83,0)
 .;
"RTN","PSBVDLPB",84,0)
 .S PSBREC=""
"RTN","PSBVDLPB",85,0)
 .S $P(PSBREC,U,1)=DFN ; dfn
"RTN","PSBVDLPB",86,0)
 .S $P(PSBREC,U,2)=PSBONX ; Order
"RTN","PSBVDLPB",87,0)
 .S $P(PSBREC,U,3)=+PSBON ; order ien
"RTN","PSBVDLPB",88,0)
 .S $P(PSBREC,U,4)=PSBOTYP ; iv/ud/pending
"RTN","PSBVDLPB",89,0)
 .S $P(PSBREC,U,5)=PSBSCHT ; schedule type
"RTN","PSBVDLPB",90,0)
 .S $P(PSBREC,U,6)=PSBSCH ; schedule
"RTN","PSBVDLPB",91,0)
 .S Y=""
"RTN","PSBVDLPB",92,0)
 .S:PSBSM Y="SM"
"RTN","PSBVDLPB",93,0)
 .S:PSBHSM Y="HSM"
"RTN","PSBVDLPB",94,0)
 .S $P(PSBREC,U,7)=Y ; self med
"RTN","PSBVDLPB",95,0)
 .S $P(PSBREC,U,8)=PSBOITX ; drugname
"RTN","PSBVDLPB",96,0)
 .S $P(PSBREC,U,9)=PSBDOSE_" "_PSBIFR ; dosage
"RTN","PSBVDLPB",97,0)
 .S $P(PSBREC,U,10)=PSBMR ;med route
"RTN","PSBVDLPB",98,0)
 .; Last Given from the AOIP X-Ref - not given status not excepted
"RTN","PSBVDLPB",99,0)
 .S (YZ,PSBSTUS,PSBADMER)="" K PSBHSTA,PSBHSTAX
"RTN","PSBVDLPB",100,0)
 .F XZ=1:1:20 S YZ=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,YZ),-1),(PSBCNT,PSBFLAG)=0 Q:YZ=""  D
"RTN","PSBVDLPB",101,0)
 ..S:YZ>0 $P(PSBREC,U,11)=YZ
"RTN","PSBVDLPB",102,0)
 ..S X="" F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,YZ,X),-1) Q:X=""  D
"RTN","PSBVDLPB",103,0)
 ...K PSBLCK L +^PSB(53.79,X):1  I  L -^PSB(53.79,X) S PSBLCK=1
"RTN","PSBVDLPB",104,0)
 ...S PSBSTUS=$P(^PSB(53.79,X,0),U,9)
"RTN","PSBVDLPB",105,0)
 ...I $G(PSBSTUS)="" S:'$G(PSBLCK) PSBSTUS="X" I $G(PSBLCK) S PSBADMER=1 D
"RTN","PSBVDLPB",106,0)
 ....K PSBPARM3,PSBPARM5,PSBPARM6,PSBPARM7
"RTN","PSBVDLPB",107,0)
 ....S PSBPARM6=X,Y=$P(^PSB(53.79,X,.1),U,3) D DD^%DT S PSBPARM3=Y,Y=$P(^PSB(53.79,X,0),U,6) D DD^%DT S PSBPARM5=Y
"RTN","PSBVDLPB",108,0)
 ....S PSBPARM7=$P(^PSB(53.79,X,0),U,7) S PSBPARM7="( # "_PSBPARM7_" ) "_$$GET1^DIQ(200,PSBPARM7_",",.01)
"RTN","PSBVDLPB",109,0)
 ....K PSBXTMP S PSBXTMP=PSBONX
"RTN","PSBVDLPB",110,0)
 ....D CLEAN^PSBVT,PSJ1^PSBVT(DFN,$$GET1^DIQ(53.79,PSBPARM6_",",.11))
"RTN","PSBVDLPB",111,0)
 ....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,PSBPARM3_" admin's ACTION STATUS is ""UNKNOWN"".",PSBSCH,PSBPARM5,PSBPARM6,PSBPARM7) ;  SEND AN E-MAIL
"RTN","PSBVDLPB",112,0)
 ....D CLEAN^PSBVT,PSJ1^PSBVT(DFN,PSBXTMP)  ;Reset Variables
"RTN","PSBVDLPB",113,0)
 ....S X=PSBPARM6 K PSBPARM3,PSBPARM5,PSBPARM6,PSBPARM7
"RTN","PSBVDLPB",114,0)
 ...K PSBLCK S:(PSBSTUS']"") PSBSTUS="U"  I PSBSTUS'="N",($G(PSBSTUS)'="X") S PSBFLAG=1,PSBHSTA(YZ,$G(PSBSTUS))="ORIG"_U_X
"RTN","PSBVDLPB",115,0)
 ...D:PSBSTUS="N"
"RTN","PSBVDLPB",116,0)
 ....S $P(PSBREC,U,11)=""
"RTN","PSBVDLPB",117,0)
 ....S Z="" F  S Z=$O(^PSB(53.79,X,.9,Z),-1) Q:'Z  Q:PSBFLAG=1  S PSBDATA=$G(^(Z,0)) D
"RTN","PSBVDLPB",118,0)
 .....I (PSBDATA["Set to 'NOT GIVEN'")!(PSBDATA["Set to 'GIVEN'")!(PSBDATA["Set to 'REFUSED'")!(PSBDATA["Set to 'HELD'")!(PSBDATA["Set to 'MISSING DOSE'")!(PSBDATA["Set to 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBVDLPB",119,0)
 .....I (PSBDATA["STATUS 'HELD'")!(PSBDATA["STATUS 'GIVEN'")!(PSBDATA["STATUS 'REFUSED'")!(PSBDATA["STATUS 'MISSING DOSE'")!(PSBDATA["STATUS 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBVDLPB",120,0)
 .....I PSBCNT#2=0,PSBDATA["'REFUSED'" S PSBSTUS="R" D LAST^PSBVDLU1
"RTN","PSBVDLPB",121,0)
 .....I PSBCNT#2=0,PSBDATA["'HELD'" S PSBSTUS="H" D LAST^PSBVDLU1
"RTN","PSBVDLPB",122,0)
 .....I PSBCNT#2=0,PSBDATA["'MISSING DOSE'" S PSBSTUS="M" D LAST^PSBVDLU1
"RTN","PSBVDLPB",123,0)
 .....I PSBCNT#2=0,PSBDATA["'REMOVED'" S PSBSTUS="RM" D LAST^PSBVDLU1
"RTN","PSBVDLPB",124,0)
 .....I PSBFLAG=1,'$D(PSBHSTA($P(PSBREC,U,11),$G(PSBSTUS))) S PSBHSTA($P(PSBREC,U,11),$G(PSBSTUS))=Z_U_X
"RTN","PSBVDLPB",125,0)
 .I $D(PSBHSTA) S $P(PSBREC,U,11)=$O(PSBHSTA(""),-1),PSBSTUS=$O(PSBHSTA($P(PSBREC,U,11),""),-1) M PSBHSTAX(PSBOIT)=PSBHSTA K PSBHSTA  ;last action date/time
"RTN","PSBVDLPB",126,0)
 .S $P(PSBREC,U,12)=""  ;med log ien inserted below for actual date
"RTN","PSBVDLPB",127,0)
 .S $P(PSBREC,U,13)=""  ;med log status inserted below for actual date
"RTN","PSBVDLPB",128,0)
 .S $P(PSBREC,U,14)="" ;admin date inserted below
"RTN","PSBVDLPB",129,0)
 .S $P(PSBREC,U,15)=PSBOIT ; OI Pointer
"RTN","PSBVDLPB",130,0)
 .S $P(PSBREC,U,16)=PSBNJECT  ;Set injectable med route flag
"RTN","PSBVDLPB",131,0)
 .; Variable dosage entered as ####-####?
"RTN","PSBVDLPB",132,0)
 .I $P(PSBREC,U,9)?1.4N1"-"1.4N.E S $P(PSBREC,U,17)=1
"RTN","PSBVDLPB",133,0)
 .E  S $P(PSBREC,U,17)=0
"RTN","PSBVDLPB",134,0)
 .S $P(PSBREC,U,18)=PSBIVT  ;IV TYPE - dosage form
"RTN","PSBVDLPB",135,0)
 .S $P(PSBREC,U,20)=$S((PSBSTUS="X")!(PSBSTUS="N"):"",1:PSBSTUS) ;last action status
"RTN","PSBVDLPB",136,0)
 .S $P(PSBREC,U,21)=PSBOST
"RTN","PSBVDLPB",137,0)
 .S $P(PSBREC,U,22)=PSBOSTS
"RTN","PSBVDLPB",138,0)
 .S $P(PSBREC,U,26)=PSBSTOP
"RTN","PSBVDLPB",139,0)
 .S $P(PSBREC,U,27)=$$LASTG^PSBCSUTL(DFN,PSBOIT)
"RTN","PSBVDLPB",140,0)
 .;*58 determine if override exists, send 1/0 (true/false)
"RTN","PSBVDLPB",141,0)
 .N PSBARR D GETPROVL^PSGSICH1(DFN,PSBONX,.PSBARR)
"RTN","PSBVDLPB",142,0)
 .I $O(PSBARR(""))="" D INTRDIC^PSGSICH1(DFN,PSBONX,.PSBARR,2)
"RTN","PSBVDLPB",143,0)
 .S $P(PSBREC,U,29)=$S($O(PSBARR(""))]"":1,1:0)
"RTN","PSBVDLPB",144,0)
 .;*68 inject rotation flag, send 1/0 (true/false)
"RTN","PSBVDLPB",145,0)
 .I PSBONX["V" D
"RTN","PSBVDLPB",146,0)
 ..N STDRTE S STDRTE=$$GET1^DIQ(51.2,PSBMRIEN,10)
"RTN","PSBVDLPB",147,0)
 ..S $P(PSBREC,U,31)=$$IVROTATN^PSBINJEC(.RTBL,STDRTE,PSBIVT,PSBISYR)
"RTN","PSBVDLPB",148,0)
 ..;*68 if param 31 is 1 then go get last injection site for param 30
"RTN","PSBVDLPB",149,0)
 ..I $P(PSBREC,U,31)=1 D
"RTN","PSBVDLPB",150,0)
 ...N LI D RPC^PSBINJEC(.LI,DFN,PSBOIT,9999999,1)
"RTN","PSBVDLPB",151,0)
 ...S $P(PSBREC,U,30)=$P(LI(1),U,6)   ;if no inj's, 6th will be null
"RTN","PSBVDLPB",152,0)
 .S $P(PSBREC,U,32)=$G(PSBCLORD)  ;clinic name          *70
"RTN","PSBVDLPB",153,0)
 .S $P(PSBREC,U,33)=$G(PSBCLIEN)  ;clinic ien ptr       *70
"RTN","PSBVDLPB",154,0)
 .;
"RTN","PSBVDLPB",155,0)
 .; Gather Dispense Drugs
"RTN","PSBVDLPB",156,0)
 .D NOW^%DTC
"RTN","PSBVDLPB",157,0)
 .S (PSBDDS,PSBSOLS,PSBADDS)="0"
"RTN","PSBVDLPB",158,0)
 .F Y=0:0 S Y=$O(PSBDDA(Y)) Q:'Y  D
"RTN","PSBVDLPB",159,0)
 ..Q:$P(PSBDDA(Y),U,4)&($P(PSBDDA(Y),U,4)<%)  ; Inactive
"RTN","PSBVDLPB",160,0)
 ..S:$P(PSBDDA(Y),U,3)="" $P(PSBDDA(Y),U,3)=1
"RTN","PSBVDLPB",161,0)
 ..S PSBDDS=PSBDDS_U_$P(PSBDDA(Y),U,1,3)
"RTN","PSBVDLPB",162,0)
 ..S $P(PSBDDS,U,1)=PSBDDS+1
"RTN","PSBVDLPB",163,0)
 .; On-Call One Time PRN orders
"RTN","PSBVDLPB",164,0)
 .S PSBQRR=0
"RTN","PSBVDLPB",165,0)
 .;*70 if Order start dates > than the day being viewed, don't show
"RTN","PSBVDLPB",166,0)
 .I "^O^OC^P^"[(U_PSBSCHT_U) D  Q
"RTN","PSBVDLPB",167,0)
 ..Q:PSBCLINORD&($P(PSBOST,".")>PSBDT)           ;*70
"RTN","PSBVDLPB",168,0)
 ..I 'PSBDOADD S PSBTBOUT=1,^TMP("PSB",$J,"PBTAB",0)=2,^TMP("PSB",$J,"PBTAB",1)=1,^TMP("PSB",$J,"PBTAB",2)=1 Q
"RTN","PSBVDLPB",169,0)
 ..D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSBNOW\1,PSBDDS,PSBSOLS,PSBADDS,"PBTAB")
"RTN","PSBVDLPB",170,0)
 .;
"RTN","PSBVDLPB",171,0)
 .; IV's - don't worry about admin times if blank
"RTN","PSBVDLPB",172,0)
 .I PSBONX["V","PSC"'[PSBIVT,PSBADST="" D  Q
"RTN","PSBVDLPB",173,0)
 ..I 'PSBDOADD S PSBTBOUT=1,^TMP("PSB",$J,"PBTAB",0)=2,^TMP("PSB",$J,"PBTAB",1)=1,^TMP("PSB",$J,"PBTAB",2)=1 Q
"RTN","PSBVDLPB",174,0)
 ..D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSBNOW\1_".",PSBDDS,PSBSOLS,PSBADDS,"PBTAB")
"RTN","PSBVDLPB",175,0)
 .;
"RTN","PSBVDLPB",176,0)
 .; Now we deal with only continuous
"RTN","PSBVDLPB",177,0)
 .; process admintimes
"RTN","PSBVDLPB",178,0)
 .S (PSBYES,PSBODD,PSBYTF)=0
"RTN","PSBVDLPB",179,0)
 .S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1
"RTN","PSBVDLPB",180,0)
 .I PSBYES,PSBADST="" D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Admin times required",PSBSCH) Q
"RTN","PSBVDLPB",181,0)
 .F I=1:1 Q:$P(PSBSCH,"-",I)=""  I $P(PSBSCH,"-",I)?2N!($P(PSBSCH,"-",I)?4N) S PSBYES=1,PSBYTF=1
"RTN","PSBVDLPB",182,0)
 .I PSBSCHT="C",PSBYTF="1",PSBADST="" D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Admin times required",PSBSCH) Q
"RTN","PSBVDLPB",183,0)
 .S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBVDLPB",184,0)
 .I PSBFREQ="O" S PSBFREQ=1440
"RTN","PSBVDLPB",185,0)
 .I PSBFREQ="D" S PSBFREQ=""
"RTN","PSBVDLPB",186,0)
 .I 'PSBYES,PSBFREQ<1 D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid frequency received from order",PSBSCH) Q
"RTN","PSBVDLPB",187,0)
 .S PSBADMIN=PSBADST
"RTN","PSBVDLPB",188,0)
 .I (PSBADMIN="")&(+PSBFREQ>0) D ODDSCH^PSBVDLU1("PBTAB") Q  ;calculate admin times based on frequency
"RTN","PSBVDLPB",189,0)
 .; No admin times, MAYDAY MAYDAY!!
"RTN","PSBVDLPB",190,0)
 .I +PSBFREQ>0 I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBVDLPB",191,0)
 .I PSBODD,PSBADST'="" D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Administration Times on ODD SCHEDULE",PSBSCH) Q
"RTN","PSBVDLPB",192,0)
 .; process admin times against beginning and ending date
"RTN","PSBVDLPB",193,0)
 .; build all orders for both days.
"RTN","PSBVDLPB",194,0)
 .F PSBY=1:1 Q:$P(PSBADMIN,"-",PSBY)=""  D
"RTN","PSBVDLPB",195,0)
 ..;For invalid admin times
"RTN","PSBVDLPB",196,0)
 ..I ($P(PSBADST,"-",PSBY)'?2N)&($P(PSBADST,"-",PSBY)'?4N) D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid Admin times",PSBSCH)
"RTN","PSBVDLPB",197,0)
 ..; apply this time to the beginning window date
"RTN","PSBVDLPB",198,0)
 ..S PSB=+(PSBWBEG\1_"."_$P(PSBADMIN,"-",PSBY))
"RTN","PSBVDLPB",199,0)
 ..D:(PSB'<PSBWBEG)&(PSB'>PSBWEND)  ; Make sure it is in the window
"RTN","PSBVDLPB",200,0)
 ...D:(PSB'<PSBSTRT)&(PSB<PSBSTOP)  ; Make sure this time is active
"RTN","PSBVDLPB",201,0)
 ....D:$$OKAY^PSBVDLU1(PSBSTRT,PSB,PSBSCH,PSBON,PSBOITX,PSBFREQ,PSBOSTS)  ; Okay on this date?
"RTN","PSBVDLPB",202,0)
 .....I 'PSBDOADD S PSBTBOUT=1,^TMP("PSB",$J,"PBTAB",0)=2,^TMP("PSB",$J,"PBTAB",1)=1,^TMP("PSB",$J,"PBTAB",2)=1 Q
"RTN","PSBVDLPB",203,0)
 .....D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSB,PSBDDS,PSBSOLS,PSBADDS,"PBTAB")
"RTN","PSBVDLPB",204,0)
 ..;
"RTN","PSBVDLPB",205,0)
 ..Q:(PSBWBEG\1)=(PSBWEND\1)  ; Window only has one day rare but possible
"RTN","PSBVDLPB",206,0)
 ..;
"RTN","PSBVDLPB",207,0)
 ..; apply this time to the ending window date
"RTN","PSBVDLPB",208,0)
 ..S PSB=+(PSBWEND\1_"."_$P(PSBADMIN,"-",PSBY))
"RTN","PSBVDLPB",209,0)
 ..D:(PSB'<PSBWBEG)&(PSB'>PSBWEND)  ; Make sure it is in the window
"RTN","PSBVDLPB",210,0)
 ...D:(PSB'<PSBSTRT)&(PSB<PSBSTOP)  ; Make sure this time is active
"RTN","PSBVDLPB",211,0)
 ....D:$$OKAY^PSBVDLU1(PSBSTRT,PSB,PSBSCH,PSBON,PSBOITX,PSBFREQ,PSBOSTS)  ; Okay on this date?
"RTN","PSBVDLPB",212,0)
 .....I 'PSBDOADD S PSBTBOUT=1,^TMP("PSB",$J,"PBTAB",0)=2,^TMP("PSB",$J,"PBTAB",1)=1,^TMP("PSB",$J,"PBTAB",2)=1 Q
"RTN","PSBVDLPB",213,0)
 .....D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSB,PSBDDS,PSBSOLS,PSBADDS,"PBTAB")
"RTN","PSBVDLPB",214,0)
 ;
"RTN","PSBVDLPB",215,0)
 ;add initials of verifying pharmacist/verifying nurse
"RTN","PSBVDLPB",216,0)
 D:PSBDOADD VNURSE^PSBVDLU1("PBTAB")
"RTN","PSBVDLPB",217,0)
 Q
"RTN","PSBVDLPB",218,0)
 ;
"RTN","PSBVDLRM")
0^11^B23619193^n/a
"RTN","PSBVDLRM",1,0)
PSBVDLRM ;BIRMINGHAM/EFC-BCMA UNIT DOSE VIRTUAL DUE LIST REMOVE MEDS ;03/06/16 3:06pm
"RTN","PSBVDLRM",2,0)
 ;;3.0;BAR CODE MED ADMIN;**83**;Mar 2004;Build 89
"RTN","PSBVDLRM",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBVDLRM",4,0)
 ;
"RTN","PSBVDLRM",5,0)
 ; called by PSBVDLUD to find Medications needing removal (MRR) then
"RTN","PSBVDLRM",6,0)
 ; add to Results for VDL display.
"RTN","PSBVDLRM",7,0)
 ;
"RTN","PSBVDLRM",8,0)
 ; Reference/IA
"RTN","PSBVDLRM",9,0)
 ; $$GET^XPAR/2263
"RTN","PSBVDLRM",10,0)
 ; $$FMADD^XLFDT/10103
"RTN","PSBVDLRM",11,0)
 ; GETPROVL^PSGSICH1/5653
"RTN","PSBVDLRM",12,0)
 ; INTRDIC^PSGSICH1/5654
"RTN","PSBVDLRM",13,0)
 ;
"RTN","PSBVDLRM",14,0)
 ;*83 - Read Medlog for remove medications types MRR, other than form
"RTN","PSBVDLRM",15,0)
 ;      of PATCH, and add 34th & 35th piece to Results.
"RTN","PSBVDLRM",16,0)
 ;      Remove flag & Remove time
"RTN","PSBVDLRM",17,0)
 ;      
"RTN","PSBVDLRM",18,0)
EN ;Search the Medlog file for MRR meds (not patches) that were Given
"RTN","PSBVDLRM",19,0)
 ; and not Removed. Place these meds into the return Results array.
"RTN","PSBVDLRM",20,0)
 ;
"RTN","PSBVDLRM",21,0)
 N PSBGNODE,PSBIEN,PSBXDTI,PSBXXDTI,PSBZON,X,Y,PSBPBK             ;*83
"RTN","PSBVDLRM",22,0)
 S PSBGNODE="^PSB(53.79,"_"""AMRR"""_","_DFN_")"
"RTN","PSBVDLRM",23,0)
 F  S PSBGNODE=$Q(@PSBGNODE) Q:PSBGNODE']""  Q:($QS(PSBGNODE,2)'="AMRR")!($QS(PSBGNODE,3)'=DFN)  D
"RTN","PSBVDLRM",24,0)
 .S PSBIEN=$QS(PSBGNODE,5)
"RTN","PSBVDLRM",25,0)
 .I '$D(^PSB(53.79,PSBIEN,.5,1)) Q
"RTN","PSBVDLRM",26,0)
 .I "G"'[$P(^PSB(53.79,PSBIEN,0),U,9)!($D(PSBONVDL(PSBIEN))) Q
"RTN","PSBVDLRM",27,0)
 .;
"RTN","PSBVDLRM",28,0)
 .S PSBZON=$P(^PSB(53.79,PSBIEN,.1),"^")
"RTN","PSBVDLRM",29,0)
 .D CLEAN^PSBVT
"RTN","PSBVDLRM",30,0)
 .D PSJ1^PSBVT(DFN,PSBZON) Q:$G(PSBSCRT)=-1
"RTN","PSBVDLRM",31,0)
 .S PSBPBK=+($$GET^XPAR("DIV","PSB VDL PATCH DAYS"))
"RTN","PSBVDLRM",32,0)
 .I PSBPBK D NOW^%DTC I ($$FMADD^XLFDT($P(PSBOSP,"."),(PSBPBK))<X) Q
"RTN","PSBVDLRM",33,0)
 .;
"RTN","PSBVDLRM",34,0)
 .S $P(PSBREC,U,1)=DFN  ; dfn
"RTN","PSBVDLRM",35,0)
 .S $P(PSBREC,U,2)=PSBONX  ; order numer
"RTN","PSBVDLRM",36,0)
 .S $P(PSBREC,U,3)=PSBON  ; order ien
"RTN","PSBVDLRM",37,0)
 .S $P(PSBREC,U,4)="U"  ; order type U unit dose
"RTN","PSBVDLRM",38,0)
 .S $P(PSBREC,U,5)=PSBSCHT
"RTN","PSBVDLRM",39,0)
 .S $P(PSBREC,U,6)=PSBSCH
"RTN","PSBVDLRM",40,0)
 .S $P(PSBREC,U,7)=$S(PSBHSM:"HSM",PSBSM:"SM",1:"")
"RTN","PSBVDLRM",41,0)
 .S $P(PSBREC,U,8)=PSBOITX
"RTN","PSBVDLRM",42,0)
 .S $P(PSBREC,U,9)=PSBDOSE
"RTN","PSBVDLRM",43,0)
 .S $P(PSBREC,U,10)=PSBMR
"RTN","PSBVDLRM",44,0)
 .S:$D(PSBHSTAX(PSBOIT)) $P(PSBREC,U,11)=$O(PSBHSTAX(PSBOIT,""),-1),$P(PSBREC,U,20)=$O(PSBHSTAX(PSBOIT,$P(PSBREC,U,11),""),-1)
"RTN","PSBVDLRM",45,0)
 .D:'$D(PSBHSTAX(PSBOIT))
"RTN","PSBVDLRM",46,0)
 ..N PSBX,PSBY,PSBDONE S PSBDONE=0,PSBX="" F  S PSBX=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,PSBX),-1) Q:PSBX=""  D:'PSBDONE
"RTN","PSBVDLRM",47,0)
 ...S PSBY="" F  S PSBY=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,PSBX,PSBY),-1) Q:PSBY=""  D:'PSBDONE
"RTN","PSBVDLRM",48,0)
 ....S:$P(^PSB(53.79,PSBY,0),U,9)'="N" $P(PSBREC,U,20)=$P(^PSB(53.79,PSBY,0),U,9) S:($P(PSBREC,U,20)'="N")&($P(PSBREC,U,20)]"") $P(PSBREC,U,11)=PSBX,PSBDONE=1
"RTN","PSBVDLRM",49,0)
 .S $P(PSBREC,U,12)=PSBIEN
"RTN","PSBVDLRM",50,0)
 .S $P(PSBREC,U,13)="G"
"RTN","PSBVDLRM",51,0)
 .S $P(PSBREC,U,14)=$P(^PSB(53.79,PSBIEN,.1),U,3)
"RTN","PSBVDLRM",52,0)
 .I $P(PSBREC,U,14)="" S $P(PSBREC,U,14)=PSBNOW\1
"RTN","PSBVDLRM",53,0)
 .S $P(PSBREC,U,15)=PSBOIT
"RTN","PSBVDLRM",54,0)
 .D:($G(PSBTAB)="CVRSHT")!($G(PSBTAB)="UDTAB")
"RTN","PSBVDLRM",55,0)
 ..S $P(PSBREC,U,16)=PSBNJECT            ;always send this flag   *70
"RTN","PSBVDLRM",56,0)
 ..I $P(PSBREC,U,9)?1.4N1"-"1.4N.E S $P(PSBREC,U,17)=1
"RTN","PSBVDLRM",57,0)
 ..E  S $P(PSBREC,U,17)=0
"RTN","PSBVDLRM",58,0)
 ..S $P(PSBREC,U,19)=$S(PSBVNI]"":PSBVNI,PSBVNI']"":"***")
"RTN","PSBVDLRM",59,0)
 ..S $P(PSBREC,U,23)=""
"RTN","PSBVDLRM",60,0)
 ..S $P(PSBREC,U,26)=PSBOSP
"RTN","PSBVDLRM",61,0)
 ..S $P(PSBREC,U,27)=$$LASTG^PSBCSUTL($P(PSBREC,U),$P(PSBREC,U,15))
"RTN","PSBVDLRM",62,0)
 ..S $P(PSBREC,U,28)=0
"RTN","PSBVDLRM",63,0)
 ..I ($G(PSBTAB)="CVRSHT") S $P(PSBREC,U,28)=1
"RTN","PSBVDLRM",64,0)
 ..I ($G(PSBTAB)="UDTAB") I PSBSCHT'="O" S:(PSBOSTS="E")!(PSBOSTS["D") $P(PSBREC,U,28)=1
"RTN","PSBVDLRM",65,0)
 ..;*58 determine if override or intervn exists, send 1/0 (true/false)
"RTN","PSBVDLRM",66,0)
 ..N PSBARR D GETPROVL^PSGSICH1(DFN,PSBONX,.PSBARR)
"RTN","PSBVDLRM",67,0)
 ..I $O(PSBARR(""))="" D INTRDIC^PSGSICH1(DFN,PSBONX,.PSBARR,2)
"RTN","PSBVDLRM",68,0)
 ..S $P(PSBREC,U,29)=$S($O(PSBARR(""))]"":1,1:0)
"RTN","PSBVDLRM",69,0)
 ..;add last site                                              *70/*83
"RTN","PSBVDLRM",70,0)
 ..S $P(PSBREC,U,30)=$$LASTSITE^PSBINJEC(DFN,PSBOIT)              ;*83
"RTN","PSBVDLRM",71,0)
 ..;    piece 31 special IVPB use in vdl's not for coversheet
"RTN","PSBVDLRM",72,0)
 ..I $G(PSBTAB)="CVRSHT" D      ;If from coversheet use offset -1  *70
"RTN","PSBVDLRM",73,0)
 ...S $P(PSBREC,U,31)=$G(PSBCLORD)            ;clinic name
"RTN","PSBVDLRM",74,0)
 ...S $P(PSBREC,U,32)=$G(PSBCLIEN)            ;clinic ien ptr
"RTN","PSBVDLRM",75,0)
 ..I $G(PSBTAB)="UDTAB" D       ;Else must be Unit does VDL calling
"RTN","PSBVDLRM",76,0)
 ...S $P(PSBREC,U,32)=$G(PSBCLORD)            ;clinic name
"RTN","PSBVDLRM",77,0)
 ...S $P(PSBREC,U,33)=$G(PSBCLIEN)            ;clinic ien ptr
"RTN","PSBVDLRM",78,0)
 ...S $P(PSBREC,U,35)=$P(^PSB(53.79,PSBIEN,.1),U,7)  ;existing RM time
"RTN","PSBVDLRM",79,0)
 ...;
"RTN","PSBVDLRM",80,0)
 ..; Place into Coversheet activity ARRAY
"RTN","PSBVDLRM",81,0)
 ..S PSBDIDX="" I $D(^PSB(53.79,"AORD",DFN,PSBONX)) D
"RTN","PSBVDLRM",82,0)
 ...S PSBXDTI="",PSBXDTI=$O(^PSB(53.79,"AORD",DFN,PSBONX,PSBXDTI),-1)
"RTN","PSBVDLRM",83,0)
 ...Q:'$D(^PSB(53.79,"AORD",DFN,PSBONX,PSBXDTI,PSBIEN))
"RTN","PSBVDLRM",84,0)
 ...S PSBADMX(PSBONX,PSBXDTI,PSBIEN)="",PSBDIDX=1
"RTN","PSBVDLRM",85,0)
 ..I ('PSBDIDX)&$D(^PSB(53.79,"AORDX",DFN,PSBONX)) D
"RTN","PSBVDLRM",86,0)
 ...S PSBXXDTI="",PSBXXDTI=$O(^PSB(53.79,"AORDX",DFN,PSBONX,PSBXXDTI),-1)
"RTN","PSBVDLRM",87,0)
 ...Q:'$D(^PSB(53.79,"AORDX",DFN,PSBONX,PSBXXDTI,PSBIEN))
"RTN","PSBVDLRM",88,0)
 ...S PSBADMX(PSBONX,PSBXXDTI,PSBIEN)=""
"RTN","PSBVDLRM",89,0)
 .S $P(PSBREC,U,18)="PATCH"
"RTN","PSBVDLRM",90,0)
 .S $P(PSBREC,U,21)=PSBOST
"RTN","PSBVDLRM",91,0)
 .S $P(PSBREC,U,22)=PSBOSTS
"RTN","PSBVDLRM",92,0)
 .S PSBDDS="" F Y=0:0 S Y=$O(PSBDDA(Y)) Q:'Y  S:$P(PSBDDA(Y),U,4)="" $P(PSBDDA(Y),U,4)=1 S PSBDDS=PSBDDS_U_$P(PSBDDA(Y),U,1,4),$P(PSBDDS,U,1)=PSBDDS+1
"RTN","PSBVDLRM",93,0)
 .S PSBQRR=1
"RTN","PSBVDLRM",94,0)
 .; *83 Api below calcs & adds MRR code & Remove time to (34,35)
"RTN","PSBVDLRM",95,0)
 .D ADD^PSBVDLU1(PSBREC,PSBOTXT,$P(PSBREC,U,14),PSBDDS,"","",$S($G(PSBTAB)="CVRSHT":"CVRSHT",1:"UDTAB"))
"RTN","PSBVDLRM",96,0)
 Q
"RTN","PSBVDLTB")
0^29^B35153765^B34445687
"RTN","PSBVDLTB",1,0)
PSBVDLTB ;BIRMINGHAM/EFC-BCMA VIRTUAL DUE LIST FUNCTIONS (CONT) ;03/06/16 3:06pm
"RTN","PSBVDLTB",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,4,16,68,70,78,83**;Mar 2004;Build 89
"RTN","PSBVDLTB",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBVDLTB",4,0)
 ;
"RTN","PSBVDLTB",5,0)
 ; Reference/IA
"RTN","PSBVDLTB",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBVDLTB",7,0)
 ; IN5^VADPT/10061
"RTN","PSBVDLTB",8,0)
 ; DEM^VADPT/10061
"RTN","PSBVDLTB",9,0)
 ; INP^VADPT/10061
"RTN","PSBVDLTB",10,0)
 ; $$FMADD^XLFDT/10103
"RTN","PSBVDLTB",11,0)
 ; $$GET^XPAR/2263
"RTN","PSBVDLTB",12,0)
 ; 
"RTN","PSBVDLTB",13,0)
 ;*68 - add new parameter to use new SI/OPI word processing fields
"RTN","PSBVDLTB",14,0)
 ;*70 - add Clinic order request IN param flag (true/false 0/1).
"RTN","PSBVDLTB",15,0)
 ;      also add to return array(1) 6th, 7th piece = IM & CO ord count
"RTN","PSBVDLTB",16,0)
 ;      also add to return array order line 32 piece, Clinic name for 
"RTN","PSBVDLTB",17,0)
 ;      CO orders.
"RTN","PSBVDLTB",18,0)
 ;*83 - cleanup variables here instead of in each tab rtn
"RTN","PSBVDLTB",19,0)
 ;
"RTN","PSBVDLTB",20,0)
 ; ** Warning: PSBSIOPI & PSBCLINORD will be used as global variables
"RTN","PSBVDLTB",21,0)
 ;             for all down stream calls from this RPC tag.
"RTN","PSBVDLTB",22,0)
 ;
"RTN","PSBVDLTB",23,0)
RPC(RESULTS,DFN,PSBTAB,PSBDT,PSBSIOPI,PSBCLINORD,PSBSRCHDIR) ;
"RTN","PSBVDLTB",24,0)
 N PSBCNT,PSBORDCNT,PSBPATCH,PSBINFUS,PSBIVSTP,PSBA               ;*70
"RTN","PSBVDLTB",25,0)
 N PSBNOW                                                         ;*83
"RTN","PSBVDLTB",26,0)
 K RESULTS,^TMP("PSB",$J),^TMP("PSJ",$J)
"RTN","PSBVDLTB",27,0)
 S PSBSIOPI=+$G(PSBSIOPI)   ;*68 init to 0 if not present or 1 if sent
"RTN","PSBVDLTB",28,0)
 S PSBCLINORD=+$G(PSBCLINORD)                   ;*70 set to 0 if NULL
"RTN","PSBVDLTB",29,0)
 S PSBSRCHDIR=$$UP^XLFSTR($G(PSBSRCHDIR))       ;*70 set to NULL/upper
"RTN","PSBVDLTB",30,0)
 S PSBTRFL=0
"RTN","PSBVDLTB",31,0)
 S RESULTS=$NAME(^TMP("PSB",$J,PSBTAB))
"RTN","PSBVDLTB",32,0)
 ;
"RTN","PSBVDLTB",33,0)
 Q:$$DECEASED(DFN)
"RTN","PSBVDLTB",34,0)
 ;
"RTN","PSBVDLTB",35,0)
 ;Set date & time window varaibles
"RTN","PSBVDLTB",36,0)
 ;
"RTN","PSBVDLTB",37,0)
 S PSBNOW=+$G(PSBDT)
"RTN","PSBVDLTB",38,0)
 I 'PSBNOW D NOW^%DTC S PSBNOW=+$E(%,1,10)
"RTN","PSBVDLTB",39,0)
 S PSBDT=$P(PSBNOW,".",1)
"RTN","PSBVDLTB",40,0)
 ;
"RTN","PSBVDLTB",41,0)
 ;check if fast search requested and valid direction passed, then
"RTN","PSBVDLTB",42,0)
 ; get the next date tha order data exists and Not Given
"RTN","PSBVDLTB",43,0)
 I PSBCLINORD,(PSBSRCHDIR="B")!(PSBSRCHDIR="F") D
"RTN","PSBVDLTB",44,0)
 . N PSBSRCHDT,SRCHDIR
"RTN","PSBVDLTB",45,0)
 . S SRCHDIR=$S(PSBSRCHDIR="B":-1,1:1)
"RTN","PSBVDLTB",46,0)
 . S PSBSRCHDT=$$FINDORD^PSBVDLU1(SRCHDIR,DFN,PSBDT,PSBTAB)
"RTN","PSBVDLTB",47,0)
 . S:PSBSRCHDT'=-1 (PSBNOW,PSBDT)=PSBSRCHDT
"RTN","PSBVDLTB",48,0)
 ;
"RTN","PSBVDLTB",49,0)
 ;*70 - if CO, set window of time to the entire day
"RTN","PSBVDLTB",50,0)
 I PSBCLINORD D
"RTN","PSBVDLTB",51,0)
 .S PSBWBEG=$P(PSBDT,".")_".0000"
"RTN","PSBVDLTB",52,0)
 .S PSBWEND=$P(PSBDT,".")_".2400"
"RTN","PSBVDLTB",53,0)
 E  D
"RTN","PSBVDLTB",54,0)
 .S PSBWBEG=$$FMADD^XLFDT(PSBNOW,"",-12)
"RTN","PSBVDLTB",55,0)
 .S PSBWEND=$$FMADD^XLFDT(PSBNOW,"",12)
"RTN","PSBVDLTB",56,0)
 ;
"RTN","PSBVDLTB",57,0)
 ;Create variable for valid order start date/time against admin window
"RTN","PSBVDLTB",58,0)
 S PSBWADM=$$GET^XPAR("DIV","PSB ADMIN BEFORE")
"RTN","PSBVDLTB",59,0)
 S:PSBCLINORD PSBWADM=99999
"RTN","PSBVDLTB",60,0)
 D NOW^%DTC S PSBWADM=$$FMADD^XLFDT(%,"","",+PSBWADM) ; correction for start date issue, PSB*3*78
"RTN","PSBVDLTB",61,0)
 ;
"RTN","PSBVDLTB",62,0)
 ;Use last movement for API
"RTN","PSBVDLTB",63,0)
 S VAIP("D")="LAST" D IN5^VADPT S PSBTRDT=+VAIP(3),PSBTRTYP=$P(VAIP(2),U,2),PSBMVTYP=$P(VAIP(4),U,2) K VAIP
"RTN","PSBVDLTB",64,0)
 ;
"RTN","PSBVDLTB",65,0)
 ;Get patient transfer notification timeframe to determine pop-up box
"RTN","PSBVDLTB",66,0)
 S PSBPTTR=$$GET^XPAR("DIV","PSB PATIENT TRANSFER") I PSBPTTR="" S PSBPTTR=72
"RTN","PSBVDLTB",67,0)
 D NOW^%DTC S PSBNTDT=$$FMADD^XLFDT(%,"",-PSBPTTR) I PSBNTDT'>PSBTRDT S PSBTRFL=1
"RTN","PSBVDLTB",68,0)
 ;
"RTN","PSBVDLTB",69,0)
 ;Passing PSBDT as 3rd parameter turns off the V.1.0 One-Time lookback
"RTN","PSBVDLTB",70,0)
 ;*70 check if IM or CO orders exists for mode lights
"RTN","PSBVDLTB",71,0)
 S PSBORDCNT=$$MODELITE^PSBVDLU1                ;mode lights
"RTN","PSBVDLTB",72,0)
 S PSBPATCH=$$PATCHON^PSBVDLU1(DFN,.PSBA)       ;patch on light
"RTN","PSBVDLTB",73,0)
 S:PSBA("I") $P(PSBORDCNT,U)=1 S:PSBA("C") $P(PSBORDCNT,U,2)=1
"RTN","PSBVDLTB",74,0)
 S PSBIVSTP=$$STOPPED^PSBVDLU1(DFN,.PSBA)       ;IV stopped light
"RTN","PSBVDLTB",75,0)
 S:PSBA("I") $P(PSBORDCNT,U)=1 S:PSBA("C") $P(PSBORDCNT,U,2)=1
"RTN","PSBVDLTB",76,0)
 S PSBINFUS=$$INFUSING^PSBVDLU1(DFN,.PSBA)      ;IV infusing light
"RTN","PSBVDLTB",77,0)
 S:PSBA("I") $P(PSBORDCNT,U)=1 S:PSBA("C") $P(PSBORDCNT,U,2)=1
"RTN","PSBVDLTB",78,0)
 ;
"RTN","PSBVDLTB",79,0)
 ; Setup the ^TMP("PSJ",$J global for use below 
"RTN","PSBVDLTB",80,0)
 K ^TMP("PSJ",$J)
"RTN","PSBVDLTB",81,0)
 D EN^PSJBCMA(DFN,PSBNOW,PSBDT)
"RTN","PSBVDLTB",82,0)
 D:PSBCLINORD INCLUDCO^PSBVDLU1
"RTN","PSBVDLTB",83,0)
 D:'PSBCLINORD REMOVECO^PSBVDLU1
"RTN","PSBVDLTB",84,0)
 ;
"RTN","PSBVDLTB",85,0)
 ;initialize tabs
"RTN","PSBVDLTB",86,0)
 D TABINIT
"RTN","PSBVDLTB",87,0)
 ;
"RTN","PSBVDLTB",88,0)
 ;The following calls must be made in the order below since the ^TMP global is reused
"RTN","PSBVDLTB",89,0)
 D EN^PSBVDLUD(DFN,PSBDT)
"RTN","PSBVDLTB",90,0)
 D EN^PSBVDLPB(DFN,PSBDT)
"RTN","PSBVDLTB",91,0)
 D EN^PSBVDLIV(DFN,PSBDT)
"RTN","PSBVDLTB",92,0)
 ; adding a special check for lighting the Unit Dose Tab light.
"RTN","PSBVDLTB",93,0)
 ; Patches sent to GUI via this API will send both IM and CO patches
"RTN","PSBVDLTB",94,0)
 ; that are expired/dc'd and are still on the patient. So there is a
"RTN","PSBVDLTB",95,0)
 ; a scenario when a unit dose patch can be on TMP global and it is
"RTN","PSBVDLTB",96,0)
 ; the only order in TMP but was for a different mode than currently
"RTN","PSBVDLTB",97,0)
 ; viewing.  In this case CNT will = 0 and use it to turn on the light
"RTN","PSBVDLTB",98,0)
 N CNT,QQ,NODE S CNT=0
"RTN","PSBVDLTB",99,0)
 I $D(^TMP("PSB",$J,"UDTAB",2))>0 D           ;unit dose tab check *70
"RTN","PSBVDLTB",100,0)
 . F QQ=2:1  Q:'$D(^TMP("PSB",$J,"UDTAB",QQ))  D  Q:CNT
"RTN","PSBVDLTB",101,0)
 .. S NODE=^TMP("PSB",$J,"UDTAB",QQ)
"RTN","PSBVDLTB",102,0)
 .. I $L(NODE,U)>27,$P(NODE,U,2)?.N1A D
"RTN","PSBVDLTB",103,0)
 ... ;  first order found Activ per correct mode, then quit with cnt=1
"RTN","PSBVDLTB",104,0)
 ... I PSBCLINORD,$P(NODE,U,33),$P(NODE,U,22)="A" S CNT=1 Q
"RTN","PSBVDLTB",105,0)
 ... I 'PSBCLINORD,'$P(NODE,U,33),$P(NODE,U,22)="A" S CNT=1 Q
"RTN","PSBVDLTB",106,0)
 ... Q:'$P(NODE,U,28)  ;not a given patch
"RTN","PSBVDLTB",107,0)
 ... I PSBCLINORD,$P($P(NODE,U,26),".")'>DT,'$P(NODE,U,33) Q
"RTN","PSBVDLTB",108,0)
 ... I 'PSBCLINORD,$P($P(NODE,U,26),".")'>DT,$P(NODE,U,33) Q
"RTN","PSBVDLTB",109,0)
 ... S CNT=1
"RTN","PSBVDLTB",110,0)
 S $P(PSBATAB,U,1)=$S(CNT:1,1:0)            ;*70 use CNT for UD light
"RTN","PSBVDLTB",111,0)
 S $P(PSBATAB,U,2)=$S($D(^TMP("PSB",$J,"PBTAB",2))>0:1,1:0)
"RTN","PSBVDLTB",112,0)
 S $P(PSBATAB,U,3)=$S($D(^TMP("PSB",$J,"IVTAB",2))>0:1,1:0)
"RTN","PSBVDLTB",113,0)
 S:PSBTAB="UDTAB" PSBCNT=$O(^TMP("PSB",$J,"UDTAB",""),-1)
"RTN","PSBVDLTB",114,0)
 S:PSBTAB="IVTAB" PSBCNT=$O(^TMP("PSB",$J,"IVTAB",""),-1)
"RTN","PSBVDLTB",115,0)
 S:PSBTAB="PBTAB" PSBCNT=$O(^TMP("PSB",$J,"PBTAB",""),-1)
"RTN","PSBVDLTB",116,0)
 ;
"RTN","PSBVDLTB",117,0)
 I PSBTAB="NO TAB" D
"RTN","PSBVDLTB",118,0)
 .S ^TMP("PSB",$J,PSBTAB,0)=1
"RTN","PSBVDLTB",119,0)
 .S ^TMP("PSB",$J,PSBTAB,1)=PSBATAB
"RTN","PSBVDLTB",120,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,5,6)=PSBORDCNT  ;*70 Cvsht offset cnt
"RTN","PSBVDLTB",121,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,7)=PSBINFUS     ;*70 IV infuse light
"RTN","PSBVDLTB",122,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,8)=PSBIVSTP     ;*70 IV stop light
"RTN","PSBVDLTB",123,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,9)=PSBPATCH     ;*70 patch light
"RTN","PSBVDLTB",124,0)
 E  D
"RTN","PSBVDLTB",125,0)
 .I $G(PSBCNT)>0 S ^TMP("PSB",$J,PSBTAB,0)=PSBCNT
"RTN","PSBVDLTB",126,0)
 .I $G(PSBCNT)>1 S ^TMP("PSB",$J,PSBTAB,1)=PSBATAB_U_$S(PSBTRFL:PSBTRTYP_U_PSBMVTYP,1:"")
"RTN","PSBVDLTB",127,0)
 .I $G(PSBCNT)'>1 S ^TMP("PSB",$J,PSBTAB,1)=PSBATAB
"RTN","PSBVDLTB",128,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,6,7)=PSBORDCNT   ;*70 Tabs Ord cnt
"RTN","PSBVDLTB",129,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,8)=PSBINFUS      ;*70 IV infuse light
"RTN","PSBVDLTB",130,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,9)=PSBIVSTP      ;*70 IV stop light
"RTN","PSBVDLTB",131,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,10)=PSBPATCH     ;*70 patch light
"RTN","PSBVDLTB",132,0)
 ;
"RTN","PSBVDLTB",133,0)
 F X="UDTAB","PBTAB","IVTAB" I X'=PSBTAB K ^TMP("PSB",$J,X)
"RTN","PSBVDLTB",134,0)
 D CLEAN^PSBVT
"RTN","PSBVDLTB",135,0)
 K ^TMP("PSJ",$J),PSBATAB,PSBWADM,PSBWBEG,PSBWEND,PSBNOW,PSBTRDT,PSBPTTR,PSBTRFL,PSBNTDT,PSBTRTYP,PSBMVTYP  ;*83
"RTN","PSBVDLTB",136,0)
 Q
"RTN","PSBVDLTB",137,0)
 ;
"RTN","PSBVDLTB",138,0)
TABINIT ;
"RTN","PSBVDLTB",139,0)
 F PSBX="UDTAB","PBTAB","IVTAB" D
"RTN","PSBVDLTB",140,0)
 .K ^TMP("PSB",$J,PSBX)
"RTN","PSBVDLTB",141,0)
 .S ^TMP("PSB",$J,PSBX,0)=1
"RTN","PSBVDLTB",142,0)
 .S ^TMP("PSB",$J,PSBX,1)="-1^No Administration(s) due at this time." Q
"RTN","PSBVDLTB",143,0)
 ;
"RTN","PSBVDLTB",144,0)
DECEASED(DFN) ; Patient Deceased?
"RTN","PSBVDLTB",145,0)
 ;
"RTN","PSBVDLTB",146,0)
 S DECEASED=0
"RTN","PSBVDLTB",147,0)
 D DEM^VADPT I VADM(6)]"" S DECEASED=1 K VADM D  Q DECEASED
"RTN","PSBVDLTB",148,0)
 .F PSBX="UDTAB","PBTAB","IVTAB","NO TAB" D
"RTN","PSBVDLTB",149,0)
 ..K ^TMP("PSB",$J,PSBX)
"RTN","PSBVDLTB",150,0)
 ..S ^TMP("PSB",$J,PSBX,0)=1,^TMP("PSB",$J,PSBX,1)="0^0^0^-1^A ""DATE OF DEATH"" has been logged for this patient."
"RTN","PSBVDLTB",151,0)
 Q DECEASED
"RTN","PSBVDLU1")
0^8^B192703576^B171179505
"RTN","PSBVDLU1",1,0)
PSBVDLU1 ;BIRMINGHAM/EFC-VIRTUAL DUE LIST (VDL) UTILITIES ;03/06/16 3:06pm
"RTN","PSBVDLU1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**13,32,68,70,83**;Mar 2004;Build 89
"RTN","PSBVDLU1",3,0)
 ;
"RTN","PSBVDLU1",4,0)
 ; Reference/IA
"RTN","PSBVDLU1",5,0)
 ; EN^PSJBCMA/2828
"RTN","PSBVDLU1",6,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBVDLU1",7,0)
 ; GETSIOPI^PSJBCMA5/5763
"RTN","PSBVDLU1",8,0)
 ;
"RTN","PSBVDLU1",9,0)
 ;*68 - add call to add special instructions (SI) entries to the
"RTN","PSBVDLU1",10,0)
 ;      ^TMP("PSB")  global that ends up in the RESULTS ARRAY of
"RTN","PSBVDLU1",11,0)
 ;      RPC PSB GETORDERTAB.
"RTN","PSBVDLU1",12,0)
 ;*70 - add tags to rebuild TMP array built by PSJBCMA to filter
"RTN","PSBVDLU1",13,0)
 ;      in or out Clinic Orders per request.
"RTN","PSBVDLU1",14,0)
 ;*83 - define new var PSBDOA (duration On time in min for MRR meds)
"RTN","PSBVDLU1",15,0)
 ;        and add flag and remove time to PSBREC(34 & 35)
"RTN","PSBVDLU1",16,0)
 ;
"RTN","PSBVDLU1",17,0)
ODDSCH(PSBTABX) ;
"RTN","PSBVDLU1",18,0)
 I (PSBOST'<PSBWBEG)&(PSBOST'>PSBWEND) D ADD(PSBREC,PSBOTXT,PSBOST,PSBDDS,PSBSOLS,PSBADDS,PSBTABX)  ;Include start date/time as admin
"RTN","PSBVDLU1",19,0)
 S PSBQUIT=0,PSBCDT=PSBOST F  S PSBCDT=$$FMADD^XLFDT(PSBCDT,"","",PSBFREQ) Q:PSBQUIT=1  D
"RTN","PSBVDLU1",20,0)
 .I $P(PSBCDT,".",2)="" S PSBCDT=PSBCDT-1_".24"
"RTN","PSBVDLU1",21,0)
 .I PSBCDT>PSBWEND S PSBQUIT=1 Q
"RTN","PSBVDLU1",22,0)
 .I PSBCDT'<PSBWBEG,PSBCDT<PSBOSP D ADD(PSBREC,PSBOTXT,PSBCDT,PSBDDS,PSBSOLS,PSBADDS,PSBTABX) Q
"RTN","PSBVDLU1",23,0)
 Q
"RTN","PSBVDLU1",24,0)
GETFREQ(PSBDFN,PSBORDN) ;
"RTN","PSBVDLU1",25,0)
 K ^TMP("PSJ1",$J)
"RTN","PSBVDLU1",26,0)
 D EN^PSJBCMA1(PSBDFN,PSBORDN,1)
"RTN","PSBVDLU1",27,0)
 S PSBFREQ=$P(^TMP("PSJ1",$J,4),U,11)
"RTN","PSBVDLU1",28,0)
 S PSBSCHBR=$P(^TMP("PSJ1",$J,2),"^",5)
"RTN","PSBVDLU1",29,0)
 I $$PSBDCHK1^PSBVT1(PSBSCHBR) S PSBFREQ=""
"RTN","PSBVDLU1",30,0)
 K ^TMP("PSJ1",$J)
"RTN","PSBVDLU1",31,0)
 Q PSBFREQ
"RTN","PSBVDLU1",32,0)
 ;
"RTN","PSBVDLU1",33,0)
GETADMIN(PSBDFN,PSBORDN,PSBSTRT,PSBFREQ,PSBEVDT) ;
"RTN","PSBVDLU1",34,0)
 ;Determine administration times of an odd schedule for today
"RTN","PSBVDLU1",35,0)
 N PSBADMIN
"RTN","PSBVDLU1",36,0)
 K ^TMP("PSB",$J,"GETADMIN")
"RTN","PSBVDLU1",37,0)
 D EN^PSJBCMA1(PSBDFN,PSBORDN,1)
"RTN","PSBVDLU1",38,0)
 S PSBADMIN=$P(^TMP("PSJ1",$J,4),U,9),PSBFREQ=$P(^TMP("PSJ1",$J,4),U,11),^TMP("PSB",$J,"GETADMIN",0)=PSBADMIN
"RTN","PSBVDLU1",39,0)
 I $E(PSBFREQ)'?1N K ^TMP("PSJ1",$J) Q $G(^TMP("PSB",$J,"GETADMIN",0))
"RTN","PSBVDLU1",40,0)
 I PSBFREQ=0 K ^TMP("PSJ1",$J) Q $G(^TMP("PSB",$J,"GETADMIN",0))
"RTN","PSBVDLU1",41,0)
 I PSBSTRT'<PSBEVDT S PSBADMIN=$E($P(PSBSTRT,".",2)_"0000",1,4),^TMP("PSB",$J,"GETADMIN",0)=PSBADMIN
"RTN","PSBVDLU1",42,0)
 S PSBCDT=PSBSTRT,(PSBADTMX,PSBQUIT)=0 F  S PSBCDT=$$FMADD^XLFDT(PSBCDT,"","",PSBFREQ) D  Q:PSBQUIT=1
"RTN","PSBVDLU1",43,0)
 .I $P(PSBCDT,".",2)="" S PSBCDT=PSBCDT-1_".24"
"RTN","PSBVDLU1",44,0)
 .I (PSBCDT\1)>(PSBEVDT\1) S PSBQUIT=1 Q
"RTN","PSBVDLU1",45,0)
 .I (PSBCDT\1)=(PSBEVDT\1) S PSBADMIN=PSBADMIN_$S(PSBADMIN="":"",1:"-")_$E($P(PSBCDT,".",2)_"0000",1,4)
"RTN","PSBVDLU1",46,0)
 .S ^TMP("PSB",$J,"GETADMIN",PSBADTMX)=PSBADMIN
"RTN","PSBVDLU1",47,0)
 .S:($L(PSBADMIN)+5)>255 PSBADTMX=PSBADTMX+1,PSBADMIN=""
"RTN","PSBVDLU1",48,0)
 K ^TMP("PSJ1",$J),PSBADTMX
"RTN","PSBVDLU1",49,0)
 Q $G(^TMP("PSB",$J,"GETADMIN",0))
"RTN","PSBVDLU1",50,0)
 ;
"RTN","PSBVDLU1",51,0)
ADD(PSBREC,PSBSI,PSBDT,PSBDD,PSBSOL,PSBADD,PSBTAB) ;
"RTN","PSBVDLU1",52,0)
 ;
"RTN","PSBVDLU1",53,0)
 ; Description: Add order to ^TMP("PSB",$J,PSBTAB,...) for RPC Return RESULTS
"RTN","PSBVDLU1",54,0)
 ;
"RTN","PSBVDLU1",55,0)
 ; PSBREC=order hdr from above
"RTN","PSBVDLU1",56,0)
 ; PSBSI=special instructions
"RTN","PSBVDLU1",57,0)
 ; PSBDT=admin date/time
"RTN","PSBVDLU1",58,0)
 ; PSBDD=Dispense Drugs
"RTN","PSBVDLU1",59,0)
 ; PSBSOL=Solutions
"RTN","PSBVDLU1",60,0)
 ; PSBADD=Additives
"RTN","PSBVDLU1",61,0)
 ;
"RTN","PSBVDLU1",62,0)
 N PSB
"RTN","PSBVDLU1",63,0)
 S PSBDT=$E(PSBDT,1,12),PSBQR=0
"RTN","PSBVDLU1",64,0)
 S PSB=$O(^TMP("PSB",$J,PSBTAB,""),-1) ; Get next node
"RTN","PSBVDLU1",65,0)
 S $P(PSBREC,U,14)=PSBDT ; Admin Time sits in ^14
"RTN","PSBVDLU1",66,0)
 ;
"RTN","PSBVDLU1",67,0)
 ; *83 If MRR Med, add Remove code & Remove time, (34,35)
"RTN","PSBVDLU1",68,0)
 D REMOVETM(PSBMRRFL,PSBSCHT)
"RTN","PSBVDLU1",69,0)
 ;
"RTN","PSBVDLU1",70,0)
 I $P(PSBREC,U,5)'="O" S X=$O(^PSB(53.79,"AORD",DFN,PSBONX,PSBDT,0)) D:X
"RTN","PSBVDLU1",71,0)
 .S $P(PSBREC,U,12)=X
"RTN","PSBVDLU1",72,0)
 .K PSBLCK L +^PSB(53.79,X):1  I  L -^PSB(53.79,X) S PSBLCK=1
"RTN","PSBVDLU1",73,0)
 .S PSBSTUS=$P(^PSB(53.79,X,0),U,9),$P(PSBREC,U,13)=$S(PSBSTUS="N":"",(PSBSTUS="")&$G(PSBLCK):"U",1:PSBSTUS),$P(PSBREC,U,23)=$P(^PSB(53.79,X,0),U,10),$P(PSBREC,U,24)=$P(^PSB(53.79,X,0),U,7)
"RTN","PSBVDLU1",74,0)
 .I $D(^PSB(53.79,X)) I PSBDOSEF="PATCH",PSBSTUS="G",PSBDT=$P(^PSB(53.79,X,.1),U,3),PSBQRR=0 S PSBQR=1
"RTN","PSBVDLU1",75,0)
 .I PSBSTUS="G",$G(PSBFLAG) D CHECK ;Get the correct dispense drug
"RTN","PSBVDLU1",76,0)
 I ($P(PSBREC,U,5)="O") D
"RTN","PSBVDLU1",77,0)
 .S X=$O(^PSB(53.79,"AORDX",DFN,PSBONX,"")) Q:X=""
"RTN","PSBVDLU1",78,0)
 .S Y=$O(^PSB(53.79,"AORDX",DFN,PSBONX,X,"")) Q:Y=""  S $P(PSBREC,U,12)=Y
"RTN","PSBVDLU1",79,0)
 .K PSBLCK L +^PSB(53.79,Y):1  I  L -^PSB(53.79,Y) S PSBLCK=1
"RTN","PSBVDLU1",80,0)
 .S PSBSTUS=$P(^PSB(53.79,Y,0),U,9),$P(PSBREC,U,13)=$S(PSBSTUS="N":"",(PSBSTUS="")&$G(PSBLCK):"U",1:PSBSTUS),$P(PSBREC,U,24)=$P(^PSB(53.79,Y,0),U,7)
"RTN","PSBVDLU1",81,0)
 .I $D(^PSB(53.79,Y)) I PSBDOSEF="PATCH",PSBSTUS="G",PSBDT=$P(^PSB(53.79,Y,.1),U,3),PSBQRR=0 S PSBQR=1
"RTN","PSBVDLU1",82,0)
 .I PSBSTUS="G",$G(PSBFLAG) D CHECK
"RTN","PSBVDLU1",83,0)
 Q:PSBQR=1
"RTN","PSBVDLU1",84,0)
 ;
"RTN","PSBVDLU1",85,0)
 S $P(PSBREC,U,25)=0 I $G(PSBTRFL),$P(PSBREC,U,11)]"",$P(PSBREC,U,11)'<$G(PSBNTDT),$P(PSBREC,U,11)'>$G(PSBTRDT) S $P(PSBREC,U,25)=1
"RTN","PSBVDLU1",86,0)
 S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBREC ; Order Hdr
"RTN","PSBVDLU1",87,0)
 I $P(PSBREC,U,12)]"" S PSBONVDL($P(PSBREC,U,12))=""
"RTN","PSBVDLU1",88,0)
 S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBSI ; Special Instructions
"RTN","PSBVDLU1",89,0)
 ; add dispense drugs
"RTN","PSBVDLU1",90,0)
 I $D(PSBDDA) S X="" F  S X=$O(PSBDDA(X)) Q:X=""  S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBDDA(X)
"RTN","PSBVDLU1",91,0)
 S PSBCHDT=0
"RTN","PSBVDLU1",92,0)
 I (PSBTAB'["CVRSHT"),(PSBONX["V"),(PSBOSTS="D"),($G(PSBFOR)="") D  Q  ;get infusing bag from DCed but not DEed orders
"RTN","PSBVDLU1",93,0)
 .D PSJ^PSBVT(PSBX)
"RTN","PSBVDLU1",94,0)
 .D INFUSING^PSBVDLU2 I PSBCOMP=0 Q
"RTN","PSBVDLU1",95,0)
 .I $D(PSBSOLA) S X="" F  S X=$O(PSBSOLA(X)) Q:X=""  S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBSOLA(X)
"RTN","PSBVDLU1",96,0)
 .I $D(PSBADA) S X="" F  S X=$O(PSBADA(X)) Q:X=""  S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBADA(X)
"RTN","PSBVDLU1",97,0)
 .S X="" F  S X=$O(PSBPORA(PSBONX,X)) S PSBUID=$P(PSBPORA(PSBONX,X),U,1) Q:PSBUID]""  Q:X=""
"RTN","PSBVDLU1",98,0)
 .I PSBUID["P" Q
"RTN","PSBVDLU1",99,0)
 .I PSBUID["WS" D
"RTN","PSBVDLU1",100,0)
 ..S PSBNODE=$O(^PSB(53.79,"AUID",DFN,X,PSBUID,""))
"RTN","PSBVDLU1",101,0)
 ..S PSBUIDA(PSBUID)="ID"_U_PSBUID
"RTN","PSBVDLU1",102,0)
 ..S X=0 F  S X=$O(^PSB(53.79,PSBNODE,.6,X)) Q:'X  S PSBUIDA(PSBUID)=PSBUIDA(PSBUID)_U_"ADD;"_$P(^PSB(53.79,PSBNODE,.6,X,0),U,1)
"RTN","PSBVDLU1",103,0)
 ..S X=0 F  S X=$O(^PSB(53.79,PSBNODE,.7,X)) Q:'X  S PSBUIDA(PSBUID)=PSBUIDA(PSBUID)_U_"SOL;"_$P(^PSB(53.79,PSBNODE,.7,X,0),U,1)
"RTN","PSBVDLU1",104,0)
 .S PSBSONX=PSBONX
"RTN","PSBVDLU1",105,0)
 .I '$D(PSBUIDA(PSBUID)) S PSBCKOR="" F  S PSBCKOR=$O(PSBPORA(PSBSONX,PSBCKOR)) Q:PSBCKOR=""  D CLEAN^PSBVT,PSJ1^PSBVT(DFN,PSBCKOR) Q:$D(PSBUIDA(PSBUID))
"RTN","PSBVDLU1",106,0)
 .S PSBONX=PSBSONX
"RTN","PSBVDLU1",107,0)
 .S:$D(PSBUIDA(PSBUID)) PSB=PSB+2,^TMP("PSB",$J,PSBTAB,PSB-1)=PSBUIDA(PSBUID),^TMP("PSB",$J,PSBTAB,PSB)="END"
"RTN","PSBVDLU1",108,0)
 .D CLEAN^PSBVT,PSJ1^PSBVT(DFN,$O(PSBPORA("")))
"RTN","PSBVDLU1",109,0)
 ; add additives
"RTN","PSBVDLU1",110,0)
 I $D(PSBADA) S X="" F  S X=$O(PSBADA(X)) Q:X=""  S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBADA(X)
"RTN","PSBVDLU1",111,0)
 ; add solutions
"RTN","PSBVDLU1",112,0)
 I $D(PSBSOLA) S X="" F  S X=$O(PSBSOLA(X)) Q:X=""  S $P(PSBSOLA(X),U,5)="",PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBSOLA(X)
"RTN","PSBVDLU1",113,0)
 I PSBONX["V" D EN^PSBPOIV(DFN,PSBONX)  ; get bags
"RTN","PSBVDLU1",114,0)
 I $D(^TMP("PSBAR",$J)) S PSBUID=DFN_"V"_99999 F  S PSBUID=$O(^TMP("PSBAR",$J,PSBUID),-1) Q:PSBUID=""  D
"RTN","PSBVDLU1",115,0)
 .S PSBUIDS=^TMP("PSBAR",$J,PSBUID)
"RTN","PSBVDLU1",116,0)
 .I $P(PSBUIDS,U,1)="I",$P(PSBUIDS,U,2)'="I",$P(PSBUIDS,U,2)'="S" Q  ; bag has invalid IV parameter, is not infusing or stopped
"RTN","PSBVDLU1",117,0)
 .I $P(PSBUIDS,U,2)'="I",$P(PSBUIDS,U,2)'="S",$P(PSBUIDS,U,8)'="" Q  ; label is no longer valid, bag is not infusing or stopped
"RTN","PSBVDLU1",118,0)
 .I $P(PSBUIDS,U,2)="C" Q  ; bag is completed
"RTN","PSBVDLU1",119,0)
 .I $P(PSBUIDS,U,2)="G" Q  ; bag is given (PBTAB)
"RTN","PSBVDLU1",120,0)
 .S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=$P(PSBUIDS,U,10,999)
"RTN","PSBVDLU1",121,0)
 K ^TMP("PSBAR",$J)
"RTN","PSBVDLU1",122,0)
 D:PSBSIOPI GETSI(DFN,PSBONX,PSBTAB)                    ;*68
"RTN","PSBVDLU1",123,0)
 S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)="END"
"RTN","PSBVDLU1",124,0)
 S ^TMP("PSB",$J,PSBTAB,0)=PSB
"RTN","PSBVDLU1",125,0)
 Q
"RTN","PSBVDLU1",126,0)
 ;
"RTN","PSBVDLU1",127,0)
CHECK S FILE=53.795,PSBNODE=.5,PSBIENS=X_","
"RTN","PSBVDLU1",128,0)
 F I=0:0 S I=$O(^PSB(53.79,X,PSBNODE,I)) Q:'I  S $P(PSBDDS,U,3,4)=$$GET1^DIQ(FILE,I_","_PSBIENS,.01,"I")_U_$$GET1^DIQ(FILE,I_","_PSBIENS,.01)
"RTN","PSBVDLU1",129,0)
 Q
"RTN","PSBVDLU1",130,0)
 ;
"RTN","PSBVDLU1",131,0)
VNURSE(PSBTAB) ;add initials of verifying pharmacist/verifying nurse
"RTN","PSBVDLU1",132,0)
 F PSBLP=1:1:$P(^TMP("PSB",$J,PSBTAB,0),U,1) S X=^TMP("PSB",$J,PSBTAB,PSBLP) I $P(X,U)=DFN D
"RTN","PSBVDLU1",133,0)
 .K ^TMP("PSJ1",$J)
"RTN","PSBVDLU1",134,0)
 .D PSJ1^PSBVT(DFN,$P(X,U,2))
"RTN","PSBVDLU1",135,0)
 .S $P(^TMP("PSB",$J,PSBTAB,PSBLP),U,19)=$S(PSBVNI]"":PSBVNI,1:"***")
"RTN","PSBVDLU1",136,0)
 K PSBLP,PSBTAB
"RTN","PSBVDLU1",137,0)
 Q
"RTN","PSBVDLU1",138,0)
 ;
"RTN","PSBVDLU1",139,0)
OKAY(PSBSTRT,PSBADMIN,PSBSCH,PSBORDER,PSBDRUG,PSBFREQ,PSBOSTS) ;
"RTN","PSBVDLU1",140,0)
 ;
"RTN","PSBVDLU1",141,0)
 ; Description: Determines if an order schedule is valid for
"RTN","PSBVDLU1",142,0)
 ;  the date in PSBADMIN (i.e. Q4D, is it valid today)
"RTN","PSBVDLU1",143,0)
 ;
"RTN","PSBVDLU1",144,0)
 ; PSBSTRT:  Start Date of order (Time ignored)
"RTN","PSBVDLU1",145,0)
 ; PSBADMIN: Date of administration to check (Time ignored)
"RTN","PSBVDLU1",146,0)
 ; PSBSCH:  Schedule (i.e. MO-WE-FR@0900 or Q48H...)
"RTN","PSBVDLU1",147,0)
 ; PSBORDER: Order reference
"RTN","PSBVDLU1",148,0)
 ; PSBDRUG:  Drug ordered (Orderable Item)
"RTN","PSBVDLU1",149,0)
 ; PSBOSTS: The status of the order
"RTN","PSBVDLU1",150,0)
 ;
"RTN","PSBVDLU1",151,0)
 N PSBOKAY,PSBDAYS,PSBDOW
"RTN","PSBVDLU1",152,0)
 S PSBOSTS=$G(PSBOSTS)
"RTN","PSBVDLU1",153,0)
 ;
"RTN","PSBVDLU1",154,0)
 S PSBOKAY=0  ; Default Flag
"RTN","PSBVDLU1",155,0)
 I PSBFREQ'="",PSBFREQ'="D",PSBFREQ'>1440 Q 1
"RTN","PSBVDLU1",156,0)
 ;PRN and ONE TIMES show everyday
"RTN","PSBVDLU1",157,0)
 I (PSBSCHT="P")!(PSBSCHT="O") Q 1
"RTN","PSBVDLU1",158,0)
 S PSBDAYS=$$DAYS(PSBSCH)
"RTN","PSBVDLU1",159,0)
 ;
"RTN","PSBVDLU1",160,0)
 I PSBDAYS=1 S PSBOKAY=1 Q PSBOKAY  ; Order is everyday
"RTN","PSBVDLU1",161,0)
 ;
"RTN","PSBVDLU1",162,0)
 ; find out if today is a good day for multi days
"RTN","PSBVDLU1",163,0)
 S PSBOKAY=0,PSBRDTE=PSBSTRT
"RTN","PSBVDLU1",164,0)
 S PSBADBR=PSBADMIN\1
"RTN","PSBVDLU1",165,0)
 S PSBENR=(PSBADMIN\1)+1
"RTN","PSBVDLU1",166,0)
 I PSBDAYS>1 D  Q PSBOKAY
"RTN","PSBVDLU1",167,0)
 .I PSBADBR=(PSBSTRT\1) S PSBOKAY=1
"RTN","PSBVDLU1",168,0)
 .F  S PSBRDTE=$$FMADD^XLFDT(PSBRDTE,"","",PSBFREQ) Q:PSBRDTE>PSBENR  D
"RTN","PSBVDLU1",169,0)
 ..I $P(PSBRDTE,".",2)="" S PSBRDTE=PSBRDTE-1_".24"
"RTN","PSBVDLU1",170,0)
 ..I PSBRDTE\1=PSBADBR S PSBOKAY=1
"RTN","PSBVDLU1",171,0)
 ..I PSBOKAY="1" Q
"RTN","PSBVDLU1",172,0)
 ;
"RTN","PSBVDLU1",173,0)
 ; Try the MO-WE-FR@0800 thing as last resort
"RTN","PSBVDLU1",174,0)
 S X=PSBADMIN D H^%DTC I %Y=-1 D  Q PSBOKAY  ; Error
"RTN","PSBVDLU1",175,0)
 .S PSBOKAY=0
"RTN","PSBVDLU1",176,0)
 .Q:PSBOSTS="E"
"RTN","PSBVDLU1",177,0)
 .Q:$G(PSBMHND)="PSBOMH"
"RTN","PSBVDLU1",178,0)
 .D ERROR^PSBMLU($G(PSBORDER,"UNKNOWN"),$G(PSBDRUG,""),DFN,"Unable to determine schedule "_PSBSCH,PSBSCH)
"RTN","PSBVDLU1",179,0)
 S PSBDOW=$P("SU^MO^TU^WE^TH^FR^SA",U,%Y+1)
"RTN","PSBVDLU1",180,0)
 I $F(PSBSCH,PSBDOW)>0 S PSBOKAY=1 Q PSBOKAY
"RTN","PSBVDLU1",181,0)
 S PSBOKAY=0
"RTN","PSBVDLU1",182,0)
 Q PSBOKAY
"RTN","PSBVDLU1",183,0)
 ;
"RTN","PSBVDLU1",184,0)
DAYS(PSB) ; Return days between doses (-1: error, 1:everyday 2: QOD...)
"RTN","PSBVDLU1",185,0)
 ;
"RTN","PSBVDLU1",186,0)
 ; Is it a PRN
"RTN","PSBVDLU1",187,0)
 I PSB?.E1"PRN".E Q 1  ; Straight PRN - As Needed
"RTN","PSBVDLU1",188,0)
 ;
"RTN","PSBVDLU1",189,0)
 S PSB=$TR(PSB," ","")
"RTN","PSBVDLU1",190,0)
 I PSB?2.4N.E Q 1
"RTN","PSBVDLU1",191,0)
 S X=PSBFREQ/1440 Q X
"RTN","PSBVDLU1",192,0)
 ;
"RTN","PSBVDLU1",193,0)
 Q
"RTN","PSBVDLU1",194,0)
 ;
"RTN","PSBVDLU1",195,0)
LAST ;
"RTN","PSBVDLU1",196,0)
 S PSBCC=0
"RTN","PSBVDLU1",197,0)
 S ZZ="" F  S ZZ=$O(^PSB(53.79,X,.3,ZZ),-1) Q:'ZZ  Q:PSBFLAG=1  S PSBDATA2=$G(^(ZZ,0)) D
"RTN","PSBVDLU1",198,0)
 .S PSBCC=PSBCC+1
"RTN","PSBVDLU1",199,0)
 .I (PSBCC=2)!($P($P(PSBDATA2,U)," ")="Refused:")!($P($P(PSBDATA2,U)," ")="Held:") S $P(PSBREC,U,11)=$P(PSBDATA2,U,3),PSBFLAG=1
"RTN","PSBVDLU1",200,0)
 Q
"RTN","PSBVDLU1",201,0)
 ;
"RTN","PSBVDLU1",202,0)
GETSI(DFN,ORD,TAB) ;Get Special Instructions/Other Print Info from IM   ;*68
"RTN","PSBVDLU1",203,0)
 ;
"RTN","PSBVDLU1",204,0)
 ; This Tag will load the SIOPI WP text into the TMP global used by
"RTN","PSBVDLU1",205,0)
 ; the PSB GETORDERTAB RPC, which ends up in the RESULTS array passed
"RTN","PSBVDLU1",206,0)
 ; back to the BCMA GUI.
"RTN","PSBVDLU1",207,0)
 ;
"RTN","PSBVDLU1",208,0)
 N QQ
"RTN","PSBVDLU1",209,0)
 K ^TMP("PSJBCMA5",$J,DFN,ORD)
"RTN","PSBVDLU1",210,0)
 D GETSIOPI^PSJBCMA5(DFN,ORD,1)
"RTN","PSBVDLU1",211,0)
 Q:'$D(^TMP("PSJBCMA5",$J,DFN,ORD))
"RTN","PSBVDLU1",212,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJBCMA5",$J,DFN,ORD,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",213,0)
 .S PSB=PSB+1
"RTN","PSBVDLU1",214,0)
 .S ^TMP("PSB",$J,TAB,PSB)="SI^"_^TMP("PSJBCMA5",$J,DFN,ORD,QQ)
"RTN","PSBVDLU1",215,0)
 K ^TMP("PSJBCMA5",$J,DFN,ORD)
"RTN","PSBVDLU1",216,0)
 Q
"RTN","PSBVDLU1",217,0)
 ;
"RTN","PSBVDLU1",218,0)
INCLUDCO ;Rebuild TMP global from PSJBCMA, RETAIN CLINC ORDERS ONLY  *70
"RTN","PSBVDLU1",219,0)
 N QQ,IMCNT,COCNT
"RTN","PSBVDLU1",220,0)
 S (IMCNT,COCNT)=0 K ^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",221,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",222,0)
 . I $P($G(^TMP("PSJ",$J,QQ,0)),U,11)]"" D
"RTN","PSBVDLU1",223,0)
 .. S COCNT=COCNT+1
"RTN","PSBVDLU1",224,0)
 .. M ^TMP("PSJTMP",$J,COCNT)=^TMP("PSJ",$J,QQ)
"RTN","PSBVDLU1",225,0)
 K ^TMP("PSJ",$J) M ^TMP("PSJ",$J)=^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",226,0)
 K ^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",227,0)
 S:'$D(^TMP("PSJ",$J)) ^TMP("PSJ",$J,1,0)=-1
"RTN","PSBVDLU1",228,0)
 Q
"RTN","PSBVDLU1",229,0)
 ;
"RTN","PSBVDLU1",230,0)
REMOVECO ;Rebuild TMP global from PSJBCMA, RETAIN IM ORDERS ONLY         *70
"RTN","PSBVDLU1",231,0)
 N QQ,IMCNT
"RTN","PSBVDLU1",232,0)
 S IMCNT=0 K ^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",233,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",234,0)
 . I $P($G(^TMP("PSJ",$J,QQ,0)),U,11)="" D  Q
"RTN","PSBVDLU1",235,0)
 .. S IMCNT=IMCNT+1
"RTN","PSBVDLU1",236,0)
 .. M ^TMP("PSJTMP",$J,IMCNT)=^TMP("PSJ",$J,QQ)
"RTN","PSBVDLU1",237,0)
 K ^TMP("PSJ",$J) M ^TMP("PSJ",$J)=^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",238,0)
 K ^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",239,0)
 S:'$D(^TMP("PSJ",$J)) ^TMP("PSJ",$J,1,0)=-1
"RTN","PSBVDLU1",240,0)
 Q
"RTN","PSBVDLU1",241,0)
 ;
"RTN","PSBVDLU1",242,0)
MODELITE() ;
"RTN","PSBVDLU1",243,0)
 N ORDCNT,CLIN,ORDNO,STRT,STOP,STAT,PSBIMNOW,PSBIMDT
"RTN","PSBVDLU1",244,0)
 S ORDCNT=""
"RTN","PSBVDLU1",245,0)
 K ^TMP("PSJ",$J)
"RTN","PSBVDLU1",246,0)
 S PSBIMNOW=+$E($$NOW^XLFDT,1,10),PSBIMDT=$P(PSBIMNOW,".")
"RTN","PSBVDLU1",247,0)
 D EN^PSJBCMA(DFN,PSBIMNOW,PSBIMDT)
"RTN","PSBVDLU1",248,0)
 Q:^TMP("PSJ",$J,1,0)=-1 ""
"RTN","PSBVDLU1",249,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",250,0)
 . S CLIN=$P(^TMP("PSJ",$J,QQ,0),U,11)
"RTN","PSBVDLU1",251,0)
 . S ORDNO=$P(^TMP("PSJ",$J,QQ,0),U,3)
"RTN","PSBVDLU1",252,0)
 . S STRT=$P($P(^TMP("PSJ",$J,QQ,1),U,4),".")
"RTN","PSBVDLU1",253,0)
 . S STOP=$P($P(^TMP("PSJ",$J,QQ,1),U,5),".")
"RTN","PSBVDLU1",254,0)
 . S STAT=$P(^TMP("PSJ",$J,QQ,1),U,7)
"RTN","PSBVDLU1",255,0)
 . D:CLIN]""
"RTN","PSBVDLU1",256,0)
 .. I ORDNO'["P",STAT="A",STRT'>DT,STOP'<DT S $P(ORDCNT,U,2)=1
"RTN","PSBVDLU1",257,0)
 . D:CLIN=""
"RTN","PSBVDLU1",258,0)
 .. I ORDNO'["P",STAT="A",STRT'>DT,STOP'<DT S $P(ORDCNT,U)=1
"RTN","PSBVDLU1",259,0)
 Q ORDCNT
"RTN","PSBVDLU1",260,0)
 ;
"RTN","PSBVDLU1",261,0)
INITTAB ;*70
"RTN","PSBVDLU1",262,0)
 K ^TMP("PSB",$J,PSBTAB)
"RTN","PSBVDLU1",263,0)
 S ^TMP("PSB",$J,PSBTAB,0)=1
"RTN","PSBVDLU1",264,0)
 S ^TMP("PSB",$J,PSBTAB,1)="-1^No Administration(s) due at this time."
"RTN","PSBVDLU1",265,0)
 Q
"RTN","PSBVDLU1",266,0)
 ;
"RTN","PSBVDLU1",267,0)
FINDORD(BWDFWD,DFN,PSBDT,PSBTAB) ;Search a patient's orders Bwd or Fwd    *70
"RTN","PSBVDLU1",268,0)
 ; Find the next day that contains an Active admin time not Given.
"RTN","PSBVDLU1",269,0)
 ;
"RTN","PSBVDLU1",270,0)
 N QQ,SPDT,STARTDT,STDT,STOPDT,STPDT
"RTN","PSBVDLU1",271,0)
 S PSBSIOPI="",PSBCLINORD=1
"RTN","PSBVDLU1",272,0)
 N NODE1,ENDDT,STRDT,STOPDT,STDT,SPDT,STARTDT,STOPDT,SDT,QUIT,REC,QQ
"RTN","PSBVDLU1",273,0)
 N PSBWBEG,PSBWEND,PSBWADM,FOUND,GIVE,PDT
"RTN","PSBVDLU1",274,0)
 K ^TMP("PSJ",$J)
"RTN","PSBVDLU1",275,0)
 D EN^PSJBCMA(DFN,PSBDT,PSBDT),INCLUDCO^PSBVDLU1
"RTN","PSBVDLU1",276,0)
 Q:^TMP("PSJ",$J,1,0)=-1 -1
"RTN","PSBVDLU1",277,0)
 ;
"RTN","PSBVDLU1",278,0)
 ;read thru psj tmp and create start date xref
"RTN","PSBVDLU1",279,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",280,0)
 . S NODE1=$G(^TMP("PSJ",$J,QQ,1))
"RTN","PSBVDLU1",281,0)
 . Q:$P(NODE1,U,7)'="A"              ;not active sts
"RTN","PSBVDLU1",282,0)
 . S STRDT=$P($P(NODE1,U,4),"."),STDT(STRDT)=""
"RTN","PSBVDLU1",283,0)
 . S STPDT=$P($P(NODE1,U,5),"."),SPDT(STPDT)=""
"RTN","PSBVDLU1",284,0)
 S STARTDT=+$O(STDT(0))
"RTN","PSBVDLU1",285,0)
 Q:(BWDFWD=-1)&('STARTDT) -1
"RTN","PSBVDLU1",286,0)
 S STOPDT=+$O(SPDT(999999999),-1)
"RTN","PSBVDLU1",287,0)
 Q:(BWDFWD=1)&('STOPDT) -1
"RTN","PSBVDLU1",288,0)
 ;
"RTN","PSBVDLU1",289,0)
 D:BWDFWD=-1 LOOPBWD
"RTN","PSBVDLU1",290,0)
 D:BWDFWD=1 LOOPFWD
"RTN","PSBVDLU1",291,0)
 Q PDT
"RTN","PSBVDLU1",292,0)
 ;
"RTN","PSBVDLU1",293,0)
LOOPBWD ; Loop thru days backwards and quit when pass End date.    *70
"RTN","PSBVDLU1",294,0)
 S (REC,QUIT,FOUND)=0
"RTN","PSBVDLU1",295,0)
 F QQ=BWDFWD:BWDFWD S PDT=$$FMADD^XLFDT(PSBDT,QQ) Q:PDT<STARTDT  D  Q:FOUND!QUIT
"RTN","PSBVDLU1",296,0)
 . I PDT<STARTDT S QUIT=1 Q
"RTN","PSBVDLU1",297,0)
 . D INITTAB^PSBVDLU1
"RTN","PSBVDLU1",298,0)
 . S PSBWBEG=$P(PDT,".")_".0000"
"RTN","PSBVDLU1",299,0)
 . S PSBWEND=$P(PDT,".")_".2400"
"RTN","PSBVDLU1",300,0)
 . S PSBWADM=99999
"RTN","PSBVDLU1",301,0)
 . S PSBWADM=$$FMADD^XLFDT(PDT,"","",+PSBWADM)
"RTN","PSBVDLU1",302,0)
 . D:PSBTAB="UDTAB" EN^PSBVDLUD(DFN,PDT)
"RTN","PSBVDLU1",303,0)
 . D:PSBTAB="PBTAB" EN^PSBVDLPB(DFN,PDT)
"RTN","PSBVDLU1",304,0)
 . S FOUND=+$G(^TMP("PSB",$J,PSBTAB,2))          ;=dfn, if data found
"RTN","PSBVDLU1",305,0)
 . S GIVE=$P($G(^TMP("PSB",$J,PSBTAB,2)),U,13)   ;get give sts
"RTN","PSBVDLU1",306,0)
 . S:GIVE="G" FOUND=0                            ;skip, as was given
"RTN","PSBVDLU1",307,0)
 S:'FOUND PDT=-1
"RTN","PSBVDLU1",308,0)
 Q
"RTN","PSBVDLU1",309,0)
 ;
"RTN","PSBVDLU1",310,0)
LOOPFWD ; Loop thru days forwards and quit when pass End date.    *70
"RTN","PSBVDLU1",311,0)
 S (REC,QUIT,FOUND)=0
"RTN","PSBVDLU1",312,0)
 F QQ=BWDFWD:BWDFWD S PDT=$$FMADD^XLFDT(PSBDT,QQ) Q:PDT>STOPDT  D  Q:FOUND!QUIT
"RTN","PSBVDLU1",313,0)
 . I PDT>STOPDT S QUIT=1 Q
"RTN","PSBVDLU1",314,0)
 . D INITTAB^PSBVDLU1
"RTN","PSBVDLU1",315,0)
 . S PSBWBEG=$P(PDT,".")_".0000"
"RTN","PSBVDLU1",316,0)
 . S PSBWEND=$P(PDT,".")_".2400"
"RTN","PSBVDLU1",317,0)
 . S PSBWADM=99999
"RTN","PSBVDLU1",318,0)
 . S PSBWADM=$$FMADD^XLFDT(PDT,"","",+PSBWADM)
"RTN","PSBVDLU1",319,0)
 . D:PSBTAB="UDTAB" EN^PSBVDLUD(DFN,PDT)
"RTN","PSBVDLU1",320,0)
 . D:PSBTAB="PBTAB" EN^PSBVDLPB(DFN,PDT)
"RTN","PSBVDLU1",321,0)
 . S FOUND=+$G(^TMP("PSB",$J,PSBTAB,2))          ;=dfn, if data found
"RTN","PSBVDLU1",322,0)
 . S GIVE=$P($G(^TMP("PSB",$J,PSBTAB,2)),U,13)   ;get give sts
"RTN","PSBVDLU1",323,0)
 . S:GIVE="G" FOUND=0                            ;skip, as was given
"RTN","PSBVDLU1",324,0)
 S:'FOUND PDT=-1
"RTN","PSBVDLU1",325,0)
 Q
"RTN","PSBVDLU1",326,0)
 ;
"RTN","PSBVDLU1",327,0)
PATCHON(DFN,ORDR) ;check if any patches are still Given & Not Removed per this patient
"RTN","PSBVDLU1",328,0)
 ;  Return values:
"RTN","PSBVDLU1",329,0)
 ;    Func:   True/False (1/0) for patches do exist on a patient.
"RTN","PSBVDLU1",330,0)
 ;    ORDR(): array element "C"linic or "I"npatient order = 1 when
"RTN","PSBVDLU1",331,0)
 ;             at least 1 order of this type exists.
"RTN","PSBVDLU1",332,0)
 ;
"RTN","PSBVDLU1",333,0)
 N ON,DAYSBK,ORDNO,STOPDT,IMCL
"RTN","PSBVDLU1",334,0)
 S ON=0,ORDR("C")=0,ORDR("I")=0
"RTN","PSBVDLU1",335,0)
 Q:'$D(^PSB(53.79,"APATCH",DFN)) ON
"RTN","PSBVDLU1",336,0)
 F QQ=0:0 S QQ=$O(^PSB(53.79,"APATCH",DFN,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",337,0)
 . F RR=0:0 S RR=$O(^PSB(53.79,"APATCH",DFN,QQ,RR)) Q:'RR  D
"RTN","PSBVDLU1",338,0)
 .. I $P(^PSB(53.79,RR,0),U,9)="G" D
"RTN","PSBVDLU1",339,0)
 ... S ORDNO=$P(^PSB(53.79,RR,.1),"^")
"RTN","PSBVDLU1",340,0)
 ... D CLEAN^PSBVT
"RTN","PSBVDLU1",341,0)
 ... D PSJ1^PSBVT(DFN,ORDNO) Q:'$G(PSBOSP)
"RTN","PSBVDLU1",342,0)
 ... S STOPDT=PSBOSP
"RTN","PSBVDLU1",343,0)
 ... S DAYSBK=+($$GET^XPAR("DIV","PSB VDL PATCH DAYS"))
"RTN","PSBVDLU1",344,0)
 ...; simulate PSBVDLPA logic to look back Kernel param days
"RTN","PSBVDLU1",345,0)
 ... I DAYSBK D NOW^%DTC I $$FMADD^XLFDT($P(STOPDT,"."),DAYSBK)<X Q
"RTN","PSBVDLU1",346,0)
 ... S ON=1
"RTN","PSBVDLU1",347,0)
 ... S IMCL=$S($G(PSBCLORD)]"":"C",1:"I"),ORDR(IMCL)=1
"RTN","PSBVDLU1",348,0)
 ... D CLEAN^PSBVT
"RTN","PSBVDLU1",349,0)
 Q ON
"RTN","PSBVDLU1",350,0)
 ;
"RTN","PSBVDLU1",351,0)
INFUSING(DFN,ORDR) ;check if any IV's have bags infusing per this patient
"RTN","PSBVDLU1",352,0)
 ;  Return values:
"RTN","PSBVDLU1",353,0)
 ;    Func:   True/False (1/0) for patches do exist on a patient.
"RTN","PSBVDLU1",354,0)
 ;    ORDR(): array element "C"linic or "I"npatient order = 1 when
"RTN","PSBVDLU1",355,0)
 ;             at least 1 order of this type exists.
"RTN","PSBVDLU1",356,0)
 ;
"RTN","PSBVDLU1",357,0)
 N ON,DAYSBK,ORDNO,STOPDT,IMCL,PSBCLIEN
"RTN","PSBVDLU1",358,0)
 S ON=0,ORDR("C")=0,ORDR("I")=0
"RTN","PSBVDLU1",359,0)
 Q:'$D(^PSB(53.79,"AINFUSING",DFN)) ON
"RTN","PSBVDLU1",360,0)
 F QQ=0:0 S QQ=$O(^PSB(53.79,"AINFUSING",DFN,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",361,0)
 . F RR=0:0 S RR=$O(^PSB(53.79,"AINFUSING",DFN,QQ,RR)) Q:'RR  D
"RTN","PSBVDLU1",362,0)
 .. S ORDNO=$P(^PSB(53.79,RR,.1),"^")
"RTN","PSBVDLU1",363,0)
 .. D CLEAN^PSBVT
"RTN","PSBVDLU1",364,0)
 .. D PSJ1^PSBVT(DFN,ORDNO) Q:'$G(PSBOSP)
"RTN","PSBVDLU1",365,0)
 .. S STOPDT=PSBOSP
"RTN","PSBVDLU1",366,0)
 .. ; simulate IV VDL logic to look 3 days back for IM meds or 7 days
"RTN","PSBVDLU1",367,0)
 .. ; for CO med.
"RTN","PSBVDLU1",368,0)
 .. D NOW^%DTC
"RTN","PSBVDLU1",369,0)
 .. I '$G(PSBCLIEN),$$FMADD^XLFDT($P(STOPDT,"."),3)<X Q
"RTN","PSBVDLU1",370,0)
 .. I $G(PSBCLIEN),$$FMADD^XLFDT($P(STOPDT,"."),7)<X Q
"RTN","PSBVDLU1",371,0)
 .. S ON=1
"RTN","PSBVDLU1",372,0)
 .. S IMCL=$S($G(PSBCLORD)]"":"C",1:"I"),ORDR(IMCL)=1
"RTN","PSBVDLU1",373,0)
 .. D CLEAN^PSBVT
"RTN","PSBVDLU1",374,0)
 Q ON
"RTN","PSBVDLU1",375,0)
 ;
"RTN","PSBVDLU1",376,0)
STOPPED(DFN,ORDR) ;check if any IV's have bags infusing per this patient
"RTN","PSBVDLU1",377,0)
 ;  Return values:
"RTN","PSBVDLU1",378,0)
 ;    Func:   True/False (1/0) for patches do exist on a patient.
"RTN","PSBVDLU1",379,0)
 ;    ORDR(): array element "C"linic or "I"npatient order = 1 when
"RTN","PSBVDLU1",380,0)
 ;             at least 1 order of this type exists.
"RTN","PSBVDLU1",381,0)
 ;
"RTN","PSBVDLU1",382,0)
 N ON,DAYSBK,ORDNO,STOPDT,IMCL,PSBCLIEN
"RTN","PSBVDLU1",383,0)
 S ON=0,ORDR("C")=0,ORDR("I")=0
"RTN","PSBVDLU1",384,0)
 Q:'$D(^PSB(53.79,"ASTOPPED",DFN)) ON
"RTN","PSBVDLU1",385,0)
 F QQ=0:0 S QQ=$O(^PSB(53.79,"ASTOPPED",DFN,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",386,0)
 . F RR=0:0 S RR=$O(^PSB(53.79,"ASTOPPED",DFN,QQ,RR)) Q:'RR  D
"RTN","PSBVDLU1",387,0)
 .. S ORDNO=$P(^PSB(53.79,RR,.1),"^")
"RTN","PSBVDLU1",388,0)
 .. D CLEAN^PSBVT
"RTN","PSBVDLU1",389,0)
 .. D PSJ1^PSBVT(DFN,ORDNO) Q:'$G(PSBOSP)
"RTN","PSBVDLU1",390,0)
 .. S STOPDT=PSBOSP
"RTN","PSBVDLU1",391,0)
 .. ; simulate IV VDL logic to look 3 days back for IM meds or 7 days
"RTN","PSBVDLU1",392,0)
 .. ; for CO med.
"RTN","PSBVDLU1",393,0)
 .. D NOW^%DTC
"RTN","PSBVDLU1",394,0)
 .. I 'PSBCLIEN,$$FMADD^XLFDT($P(STOPDT,"."),3)<X Q
"RTN","PSBVDLU1",395,0)
 .. I PSBCLIEN,$$FMADD^XLFDT($P(STOPDT,"."),7)<X Q
"RTN","PSBVDLU1",396,0)
 .. S ON=1
"RTN","PSBVDLU1",397,0)
 .. S IMCL=$S($G(PSBCLORD)]"":"C",1:"I"),ORDR(IMCL)=1
"RTN","PSBVDLU1",398,0)
 .. D CLEAN^PSBVT
"RTN","PSBVDLU1",399,0)
 Q ON
"RTN","PSBVDLU1",400,0)
 ;
"RTN","PSBVDLU1",401,0)
REMOVETM(MRR,STYP) ;** Check if MRR med & add to Results array (34,35)   *83
"RTN","PSBVDLU1",402,0)
 ;
"RTN","PSBVDLU1",403,0)
 ; Add MRR code to Results(34) and if MRR > 0 then add remove time
"RTN","PSBVDLU1",404,0)
 ; to Results(35).
"RTN","PSBVDLU1",405,0)
 ;
"RTN","PSBVDLU1",406,0)
 N RMDT,RMTIM
"RTN","PSBVDLU1",407,0)
 S $P(PSBREC,U,34)=MRR           ;set MRR flag in 34
"RTN","PSBVDLU1",408,0)
 ;
"RTN","PSBVDLU1",409,0)
 Q:'MRR                          ;Quit, not MRR med, no remove time
"RTN","PSBVDLU1",410,0)
 Q:(PSBSCHT="OC")!(PSBSCHT="P")  ;Quit, schd types have no admin times
"RTN","PSBVDLU1",411,0)
 Q:$P(PSBREC,U,35)               ;Quit, already set from get MRR rtns
"RTN","PSBVDLU1",412,0)
 ;
"RTN","PSBVDLU1",413,0)
 ; Remove date/time Calculation method will correctly compute a future
"RTN","PSBVDLU1",414,0)
 ;  Remove date/time per this admin time, by using the FMADD function
"RTN","PSBVDLU1",415,0)
 ;  to add the DOA value to the admin time.  DOA value is the time the
"RTN","PSBVDLU1",416,0)
 ;  med is to be on the patient and must be removed after that time.
"RTN","PSBVDLU1",417,0)
 ;
"RTN","PSBVDLU1",418,0)
 ; **Notice: Sched Type of "O", Remove time = Order Stop date/time
"RTN","PSBVDLU1",419,0)
 ;
"RTN","PSBVDLU1",420,0)
 ;   e.g.  if sched is Q7D and Freq=10080, then DOA=10080 also, and is
"RTN","PSBVDLU1",421,0)
 ;         returned by PSJBCMA1
"RTN","PSBVDLU1",422,0)
 ;
"RTN","PSBVDLU1",423,0)
 S ADMTIM=$P(PSBREC,U,14)                      ;admin time
"RTN","PSBVDLU1",424,0)
 S:PSBDOA RMTIM=$$FMADD^XLFDT(ADMTIM,,,PSBDOA) ;calc RM time if DOA
"RTN","PSBVDLU1",425,0)
 I PSBDOA<1,STYP="O" S RMTIM=PSBOSP            ;RM time for One-Times
"RTN","PSBVDLU1",426,0)
 S $P(PSBREC,U,35)=$G(RMTIM)                   ;Add RM date/time
"RTN","PSBVDLU1",427,0)
 Q
"RTN","PSBVDLUD")
0^9^B102373199^B91521932
"RTN","PSBVDLUD",1,0)
PSBVDLUD ;BIRMINGHAM/EFC-BCMA UNIT DOSE VIRTUAL DUE LIST FUNCTIONS ;03/06/16 3:06pm
"RTN","PSBVDLUD",2,0)
 ;;3.0;BAR CODE MED ADMIN;**11,13,38,32,58,68,70,83**;Mar 2004;Build 89
"RTN","PSBVDLUD",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBVDLUD",4,0)
 ;
"RTN","PSBVDLUD",5,0)
 ; Reference/IA
"RTN","PSBVDLUD",6,0)
 ; $$GET^XPAR/2263
"RTN","PSBVDLUD",7,0)
 ; GETPROVL^PSGSICH1/5653
"RTN","PSBVDLUD",8,0)
 ; INTRDIC^PSGSICH1/5654
"RTN","PSBVDLUD",9,0)
 ;
"RTN","PSBVDLUD",10,0)
 ;*58 - add 29th piece to Results for Override/Intervention flag 1/0
"RTN","PSBVDLUD",11,0)
 ;*68 - add 30th piece to Results for Last Injection Site
"RTN","PSBVDLUD",12,0)
 ;*70 - add 32nd piece to Results for Clinic Order name for CO's
"RTN","PSBVDLUD",13,0)
 ;    - add 33rd piece to Results for Clinic ien ptr to file #44
"RTN","PSBVDLUD",14,0)
 ;*83 - add 34th & 35th piece to Results via ADD^PSBVDLU1
"RTN","PSBVDLUD",15,0)
 ;      add call to new routine PSBVDLRM for placing MRR meds on VDL
"RTN","PSBVDLUD",16,0)
 ;    - Clinic Orders should show up on VDL's when start order date
"RTN","PSBVDLUD",17,0)
 ;      is Today now ignores the time portion of that field.
"RTN","PSBVDLUD",18,0)
 ;
"RTN","PSBVDLUD",19,0)
EN(DFN,PSBDT) ;
"RTN","PSBVDLUD",20,0)
 ;
"RTN","PSBVDLUD",21,0)
 ; Description:
"RTN","PSBVDLUD",22,0)
 ; Returns the current unit dose order set for today to display
"RTN","PSBVDLUD",23,0)
 ; on the client VDL
"RTN","PSBVDLUD",24,0)
 ;
"RTN","PSBVDLUD",25,0)
 N PSBDATA,PSBTBOUT
"RTN","PSBVDLUD",26,0)
 N PSBONVDL                    ;new here instead of kill in PA rtn *83
"RTN","PSBVDLUD",27,0)
 N ADM,MISSED,IEN,STUS
"RTN","PSBVDLUD",28,0)
 S PSBTBOUT=0
"RTN","PSBVDLUD",29,0)
 ;
"RTN","PSBVDLUD",30,0)
 ;This routine now re-uses the ^TMP("PSJ",$J global built in PSBVDLTB
"RTN","PSBVDLUD",31,0)
 ;
"RTN","PSBVDLUD",32,0)
 G:$G(^TMP("PSJ",$J,1,0))=-1 1
"RTN","PSBVDLUD",33,0)
 F PSBX=0:0 S PSBX=$O(^TMP("PSJ",$J,PSBX)) Q:('PSBX)!(PSBTBOUT)  D
"RTN","PSBVDLUD",34,0)
 .N PSBRTNOW S PSBRTNOW=$$NOW^XLFDT()
"RTN","PSBVDLUD",35,0)
 .S:(PSBTAB'="UDTAB")&($G(^TMP("PSB",$J,"UDTAB",2))>0) PSBTBOUT=1
"RTN","PSBVDLUD",36,0)
 .D CLEAN^PSBVT,PSJ^PSBVT(PSBX)
"RTN","PSBVDLUD",37,0)
 .;
"RTN","PSBVDLUD",38,0)
 .; << Standard checks for ALL orders >>
"RTN","PSBVDLUD",39,0)
 .;
"RTN","PSBVDLUD",40,0)
 .Q:PSBONX["V"              ;No IVs on UD tab
"RTN","PSBVDLUD",41,0)
 .Q:PSBONX["P"              ;No Pending Orders
"RTN","PSBVDLUD",42,0)
 .Q:PSBOST>PSBWADM          ;Order Start Date/Time > admin window
"RTN","PSBVDLUD",43,0)
 .;CO Order future start check now based on the date only Not time *83
"RTN","PSBVDLUD",44,0)
 .Q:($G(PSBCLORD)]"")&($P(PSBOST,".")>$P(PSBRTNOW,"."))
"RTN","PSBVDLUD",45,0)
 .Q:PSBOSP<PSBWBEG  ;For Non one-times Order Stop Date/Time < vdl window
"RTN","PSBVDLUD",46,0)
 .Q:PSBOSTS["D"             ;Is it DC'd
"RTN","PSBVDLUD",47,0)
 .Q:PSBNGF                  ;Is it marked DO NOT GIVE!
"RTN","PSBVDLUD",48,0)
 .Q:PSBIVPSH                ;Is it IV push
"RTN","PSBVDLUD",49,0)
 .;
"RTN","PSBVDLUD",50,0)
 .; Non One-Times with stop date/time < now
"RTN","PSBVDLUD",51,0)
 .;
"RTN","PSBVDLUD",52,0)
 .D NOW^%DTC
"RTN","PSBVDLUD",53,0)
 .Q:PSBOSP<%
"RTN","PSBVDLUD",54,0)
 .;
"RTN","PSBVDLUD",55,0)
 .; include Active, Renewed, ReInstated and On Call
"RTN","PSBVDLUD",56,0)
 .; (Is it not one time)&(Is it not active or renewed or On Call)
"RTN","PSBVDLUD",57,0)
 .I PSBSCHT'="O",PSBOSTS'="A",PSBOSTS'="H",PSBOSTS'="R",PSBOSTS'="RE",PSBOSTS'="O" Q
"RTN","PSBVDLUD",58,0)
 .;
"RTN","PSBVDLUD",59,0)
 .; Is One Time Given
"RTN","PSBVDLUD",60,0)
 .;
"RTN","PSBVDLUD",61,0)
 .I PSBSCHT="O" D  Q:PSBGVN
"RTN","PSBVDLUD",62,0)
 ..S (PSBGVN,X,Y)=""
"RTN","PSBVDLUD",63,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBVDLUD",64,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  D
"RTN","PSBVDLUD",65,0)
 ....I $P(^PSB(53.79,Y,.1),U)=PSBONX,$P(^PSB(53.79,Y,0),U,9)="G" S PSBGVN=1,(X,Y)=0
"RTN","PSBVDLUD",66,0)
 .;
"RTN","PSBVDLUD",67,0)
 .; How long does One Time remain on VDL ??
"RTN","PSBVDLUD",68,0)
 .S PSBRMN=1
"RTN","PSBVDLUD",69,0)
 .I PSBSCHT="O",PSBOSP'=PSBOST&(%>PSBOSP) S PSBRMN=0
"RTN","PSBVDLUD",70,0)
 .Q:'PSBRMN
"RTN","PSBVDLUD",71,0)
 .; Is On-Call Given, Can it be given more than once
"RTN","PSBVDLUD",72,0)
 .;
"RTN","PSBVDLUD",73,0)
 .I PSBSCHT="OC" D  Q:PSBGVN&('$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL"))
"RTN","PSBVDLUD",74,0)
 ..S (PSBGVN,X,Y)=""
"RTN","PSBVDLUD",75,0)
 ..F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1) Q:'X  D
"RTN","PSBVDLUD",76,0)
 ...F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  D
"RTN","PSBVDLUD",77,0)
 ....I $P(^PSB(53.79,Y,.1),U)=PSBONX,$P(^PSB(53.79,Y,0),U,9)="G" S PSBGVN=1,(X,Y)=0
"RTN","PSBVDLUD",78,0)
 .;
"RTN","PSBVDLUD",79,0)
 .S PSBREC=""
"RTN","PSBVDLUD",80,0)
 .S $P(PSBREC,U,1)=DFN ; dfn
"RTN","PSBVDLUD",81,0)
 .S $P(PSBREC,U,2)=PSBONX ; order
"RTN","PSBVDLUD",82,0)
 .S $P(PSBREC,U,3)=PSBON ; order ien
"RTN","PSBVDLUD",83,0)
 .S $P(PSBREC,U,4)=PSBOTYP ; iv/ud/pending
"RTN","PSBVDLUD",84,0)
 .S $P(PSBREC,U,5)=PSBSCHT ; schedule type
"RTN","PSBVDLUD",85,0)
 .S $P(PSBREC,U,6)=PSBSCH ; schedule
"RTN","PSBVDLUD",86,0)
 .S $P(PSBREC,U,7)=$S(PSBHSM:"HSM",PSBSM:"SM",1:"") ; self med
"RTN","PSBVDLUD",87,0)
 .S $P(PSBREC,U,8)=PSBOITX ; drugname
"RTN","PSBVDLUD",88,0)
 .S $P(PSBREC,U,9)=PSBDOSE_" "_PSBIFR ; dosage
"RTN","PSBVDLUD",89,0)
 .S $P(PSBREC,U,10)=PSBMR ; med route
"RTN","PSBVDLUD",90,0)
 .; Last Given from the AOIP X-Ref - not given status not excepted
"RTN","PSBVDLUD",91,0)
 .S (PSBCNT,PSBFLAG)=0,(YZ,PSBSTUS,PSBADMER)="" K PSBHSTA,PSBHSTAX
"RTN","PSBVDLUD",92,0)
 .F XZ=1:1:20 S YZ=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,YZ),-1),(PSBCNT,PSBFLAG)=0 Q:YZ=""  D
"RTN","PSBVDLUD",93,0)
 ..S:YZ>0 $P(PSBREC,U,11)=YZ
"RTN","PSBVDLUD",94,0)
 ..S X="" F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,YZ,X),-1) Q:X=""  D
"RTN","PSBVDLUD",95,0)
 ...K PSBLCK L +^PSB(53.79,X):1  I  L -^PSB(53.79,X) S PSBLCK=1
"RTN","PSBVDLUD",96,0)
 ...S PSBSTUS=$P(^PSB(53.79,X,0),U,9)
"RTN","PSBVDLUD",97,0)
 ...I $G(PSBSTUS)="" S:'$G(PSBLCK) PSBSTUS="X" I $G(PSBLCK) S PSBADMER=1 D
"RTN","PSBVDLUD",98,0)
 ....K PSBPARM3,PSBPARM5,PSBPARM6,PSBPARM7
"RTN","PSBVDLUD",99,0)
 ....S PSBPARM6=X,Y=$P(^PSB(53.79,X,.1),U,3) D DD^%DT S PSBPARM3=Y,Y=$P(^PSB(53.79,X,0),U,6) D DD^%DT S PSBPARM5=Y
"RTN","PSBVDLUD",100,0)
 ....S PSBPARM7=$P(^PSB(53.79,X,0),U,7) S PSBPARM7="( # "_PSBPARM7_" ) "_$$GET1^DIQ(200,PSBPARM7_",",.01)
"RTN","PSBVDLUD",101,0)
 ....K PSBXTMP S PSBXTMP=PSBONX
"RTN","PSBVDLUD",102,0)
 ....D CLEAN^PSBVT,PSJ1^PSBVT(DFN,$$GET1^DIQ(53.79,PSBPARM6_",",.11))
"RTN","PSBVDLUD",103,0)
 ....D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,PSBPARM3_" admin's ACTION STATUS is ""UNKNOWN"".",PSBSCH,PSBPARM5,PSBPARM6,PSBPARM7) ;  SEND AN E-MAIL
"RTN","PSBVDLUD",104,0)
 ....D CLEAN^PSBVT,PSJ1^PSBVT(DFN,PSBXTMP)  ;Reset Variables
"RTN","PSBVDLUD",105,0)
 ....S X=PSBPARM6 K PSBPARM3,PSBPARM5,PSBPARM6,PSBPARM7
"RTN","PSBVDLUD",106,0)
 ...K PSBLCK S:(PSBSTUS']"") PSBSTUS="U"  I PSBSTUS'="N",($G(PSBSTUS)'="X") S PSBFLAG=1,PSBHSTA(YZ,$G(PSBSTUS))="ORIG"_U_X
"RTN","PSBVDLUD",107,0)
 ...D:PSBSTUS="N"
"RTN","PSBVDLUD",108,0)
 ....S $P(PSBREC,U,11)=""
"RTN","PSBVDLUD",109,0)
 ....S Z="" F  S Z=$O(^PSB(53.79,X,.9,Z),-1) Q:'Z  Q:PSBFLAG=1  S PSBDATA=$G(^(Z,0)) D
"RTN","PSBVDLUD",110,0)
 .....I (PSBDATA["Set to 'NOT GIVEN'")!(PSBDATA["Set to 'GIVEN'")!(PSBDATA["Set to 'REFUSED'")!(PSBDATA["Set to 'HELD'")!(PSBDATA["Set to 'MISSING DOSE'")!(PSBDATA["Set to 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBVDLUD",111,0)
 .....I (PSBDATA["STATUS 'HELD'")!(PSBDATA["STATUS 'GIVEN'")!(PSBDATA["STATUS 'REFUSED'")!(PSBDATA["STATUS 'MISSING DOSE'")!(PSBDATA["STATUS 'REMOVED'") S PSBCNT=PSBCNT+1
"RTN","PSBVDLUD",112,0)
 .....I PSBCNT#2=0,PSBDATA["'REFUSED'" S PSBSTUS="R" D LAST^PSBVDLU1
"RTN","PSBVDLUD",113,0)
 .....I PSBCNT#2=0,PSBDATA["'HELD'" S PSBSTUS="H" D LAST^PSBVDLU1
"RTN","PSBVDLUD",114,0)
 .....I PSBCNT#2=0,PSBDATA["'MISSING DOSE'" S PSBSTUS="M" D LAST^PSBVDLU1
"RTN","PSBVDLUD",115,0)
 .....I PSBFLAG=1,'$D(PSBHSTA($P(PSBREC,U,11),$G(PSBSTUS))) S PSBHSTA($P(PSBREC,U,11),$G(PSBSTUS))=Z_U_X
"RTN","PSBVDLUD",116,0)
 .I $D(PSBHSTA) S $P(PSBREC,U,11)=$O(PSBHSTA(""),-1),PSBSTUS=$O(PSBHSTA($P(PSBREC,U,11),""),-1) M PSBHSTAX(PSBOIT)=PSBHSTA K PSBHSTA  ;last action date/time
"RTN","PSBVDLUD",117,0)
 .S $P(PSBREC,U,12)=""  ;med log ien inserted below for actual date
"RTN","PSBVDLUD",118,0)
 .S $P(PSBREC,U,13)=""  ;med log status inserted below for actual date
"RTN","PSBVDLUD",119,0)
 .S $P(PSBREC,U,14)="" ; admin date inserted below
"RTN","PSBVDLUD",120,0)
 .S $P(PSBREC,U,15)=PSBOIT ; OI Pointer
"RTN","PSBVDLUD",121,0)
 .S $P(PSBREC,U,16)=PSBNJECT  ;med route injectable flag
"RTN","PSBVDLUD",122,0)
 .; Variable dosage entered as ####-####?
"RTN","PSBVDLUD",123,0)
 .I $P(PSBREC,U,9)?1.4N1"-"1.4N.E S $P(PSBREC,U,17)=1
"RTN","PSBVDLUD",124,0)
 .E  S $P(PSBREC,U,17)=0
"RTN","PSBVDLUD",125,0)
 .S:PSBDOSEF?1"CAP".E!(PSBDOSEF?1"TAB".E)!(PSBDOSEF="PATCH")!(PSBDOSEF="GUM,CHEWABLE") $P(PSBREC,U,18)=PSBDOSEF   ;dosage form, add Gum,Chewable for HD208693
"RTN","PSBVDLUD",126,0)
 .S $P(PSBREC,U,20)=$S((PSBSTUS="X")!(PSBSTUS="N"):"",1:PSBSTUS) ; last action status
"RTN","PSBVDLUD",127,0)
 .S $P(PSBREC,U,21)=PSBOST
"RTN","PSBVDLUD",128,0)
 .S $P(PSBREC,U,22)=PSBOSTS
"RTN","PSBVDLUD",129,0)
 .S $P(PSBREC,U,26)=PSBOSP
"RTN","PSBVDLUD",130,0)
 .S $P(PSBREC,U,27)=$$LASTG^PSBCSUTL(DFN,PSBOIT)
"RTN","PSBVDLUD",131,0)
 .;*58 determine if override or intervn exists, send 1/0 (true/false)
"RTN","PSBVDLUD",132,0)
 .N PSBARR D GETPROVL^PSGSICH1(DFN,PSBONX,.PSBARR)
"RTN","PSBVDLUD",133,0)
 .I $O(PSBARR(""))="" D INTRDIC^PSGSICH1(DFN,PSBONX,.PSBARR,2)
"RTN","PSBVDLUD",134,0)
 .S $P(PSBREC,U,29)=$S($O(PSBARR(""))]"":1,1:0)
"RTN","PSBVDLUD",135,0)
 .;*68 add last injection site/dermal site                         *83
"RTN","PSBVDLUD",136,0)
 .S $P(PSBREC,U,30)=$$LASTSITE^PSBINJEC(DFN,PSBOIT)   ;can be null *83
"RTN","PSBVDLUD",137,0)
 .;       piece 31 reserved by IVPB tab
"RTN","PSBVDLUD",138,0)
 .S $P(PSBREC,U,32)=$G(PSBCLORD)  ;clinic name          *70
"RTN","PSBVDLUD",139,0)
 .S $P(PSBREC,U,33)=$G(PSBCLIEN)  ;clinic ien ptr       *70
"RTN","PSBVDLUD",140,0)
 .;
"RTN","PSBVDLUD",141,0)
 .; Gather Dispense Drugs
"RTN","PSBVDLUD",142,0)
 .D NOW^%DTC
"RTN","PSBVDLUD",143,0)
 .S (PSBDDS,PSBSOLS,PSBADDS,PSBFLAG)="0"
"RTN","PSBVDLUD",144,0)
 .F Y=0:0 S Y=$O(PSBDDA(Y)) Q:'Y  D
"RTN","PSBVDLUD",145,0)
 ..I $P(PSBDDA(Y),U,5)=$P(%,".") S PSBFLAG=1 ;If drug was inactivated
"RTN","PSBVDLUD",146,0)
 ..Q:$P(PSBDDA(Y),U,5)&($P(PSBDDA(Y),U,5)<%)  ; Inactive
"RTN","PSBVDLUD",147,0)
 ..S:$P(PSBDDA(Y),U,4)="" $P(PSBDDA(Y),U,4)=1
"RTN","PSBVDLUD",148,0)
 ..S PSBDDS=PSBDDS_U_$P(PSBDDA(Y),U,1,4)
"RTN","PSBVDLUD",149,0)
 ..S $P(PSBDDS,U,1)=PSBDDS+1
"RTN","PSBVDLUD",150,0)
 .;
"RTN","PSBVDLUD",151,0)
 .;** Begin admin time calculations & add to TMP for Results to GUI **
"RTN","PSBVDLUD",152,0)
 .;
"RTN","PSBVDLUD",153,0)
 .; On-Call One Time PRN orders
"RTN","PSBVDLUD",154,0)
 .S PSBQRR=0
"RTN","PSBVDLUD",155,0)
 .;*70 if Order start dates > than the day being viewed, don't show
"RTN","PSBVDLUD",156,0)
 .I "^O^OC^P^"[(U_PSBSCHT_U) D  Q
"RTN","PSBVDLUD",157,0)
 ..Q:PSBCLINORD&($P(PSBOST,".")>PSBDT)                ;*70
"RTN","PSBVDLUD",158,0)
 ..D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSBNOW\1,PSBDDS,PSBSOLS,PSBADDS,"UDTAB")
"RTN","PSBVDLUD",159,0)
 .;
"RTN","PSBVDLUD",160,0)
 .; Now we deal with only continuous
"RTN","PSBVDLUD",161,0)
 .; process admin times
"RTN","PSBVDLUD",162,0)
 .;
"RTN","PSBVDLUD",163,0)
 .; Display an order on the VDL based on the frequency received from IPM **PSB*2.0*3
"RTN","PSBVDLUD",164,0)
 .S (PSBYES,PSBODD,PSBYTF)=0
"RTN","PSBVDLUD",165,0)
 .I PSBSCH="" D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"No Schedule on this order")
"RTN","PSBVDLUD",166,0)
 .S:$$PSBDCHK1^PSBVT1(PSBSCH) PSBYES=1
"RTN","PSBVDLUD",167,0)
 .I PSBYES,PSBADST="" D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Admin times required",PSBSCH) Q
"RTN","PSBVDLUD",168,0)
 .F I=1:1 Q:$P(PSBSCH,"-",I)=""  I $P(PSBSCH,"-",I)?2N!($P(PSBSCH,"-",I)?4N) S PSBYES=1,PSBYTF=1
"RTN","PSBVDLUD",169,0)
 .I PSBSCHT="C",PSBYTF="1",PSBADST="" D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Admin times required",PSBSCH) Q
"RTN","PSBVDLUD",170,0)
 .S PSBFREQ=$$GETFREQ^PSBVDLU1(DFN,PSBONX)
"RTN","PSBVDLUD",171,0)
 .I PSBFREQ="O" S PSBFREQ=1440
"RTN","PSBVDLUD",172,0)
 .I PSBFREQ="D" S PSBFREQ=""
"RTN","PSBVDLUD",173,0)
 .I 'PSBYES,PSBFREQ<1 D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid frequency received from order",PSBSCH) Q
"RTN","PSBVDLUD",174,0)
 .I (PSBADST="")&(+PSBFREQ>0) D ODDSCH^PSBVDLU1("UDTAB") Q  ;calculate admin times based on frequency
"RTN","PSBVDLUD",175,0)
 .; No admin times, MAYDAY MAYDAY!!
"RTN","PSBVDLUD",176,0)
 .I +PSBFREQ>0 I (PSBFREQ#1440'=0),(1440#PSBFREQ'=0) S PSBODD=1
"RTN","PSBVDLUD",177,0)
 .I PSBODD,PSBADST'="" D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Administration Times on ODD SCHEDULE",PSBSCH) Q
"RTN","PSBVDLUD",178,0)
 .;
"RTN","PSBVDLUD",179,0)
 .;** Process admin times against beginning and ending date
"RTN","PSBVDLUD",180,0)
 .;   build all orders for both days.
"RTN","PSBVDLUD",181,0)
 .;
"RTN","PSBVDLUD",182,0)
 .;loop through admin times string and add to Results
"RTN","PSBVDLUD",183,0)
 .F PSBY=1:1 Q:$P(PSBADST,"-",PSBY)=""  D
"RTN","PSBVDLUD",184,0)
 ..;For invalid admin times
"RTN","PSBVDLUD",185,0)
 ..I ($P(PSBADST,"-",PSBY)'?2N)&($P(PSBADST,"-",PSBY)'?4N) D ERROR^PSBMLU(PSBONX,PSBOITX,DFN,"Invalid Admin times",PSBSCH)
"RTN","PSBVDLUD",186,0)
 ..;
"RTN","PSBVDLUD",187,0)
 ..; apply this time to beginning window date
"RTN","PSBVDLUD",188,0)
 ..S PSB=+(PSBWBEG\1_"."_$P(PSBADST,"-",PSBY))
"RTN","PSBVDLUD",189,0)
 ..;
"RTN","PSBVDLUD",190,0)
 ..D:(PSB'<PSBWBEG)&(PSB'>PSBWEND)     ;Make sure in the 12hr window
"RTN","PSBVDLUD",191,0)
 ...D:(PSB'<PSBOST)&(PSB<PSBOSP)       ;Make sure this time is active
"RTN","PSBVDLUD",192,0)
 ....D:$$OKAY^PSBVDLU1(PSBOST,PSB,PSBSCH,PSBONX,PSBOITX,PSBFREQ,PSBOSTS)  ; Okay on this date?
"RTN","PSBVDLUD",193,0)
 .....;*83 ADD Api now will calc & add MRR remove code & time to 34^35
"RTN","PSBVDLUD",194,0)
 .....D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSB,PSBDDS,PSBSOLS,PSBADDS,"UDTAB")
"RTN","PSBVDLUD",195,0)
 ..;
"RTN","PSBVDLUD",196,0)
 ..Q:(PSBWBEG\1)=(PSBWEND\1)  ; Window only has one day rare but possible
"RTN","PSBVDLUD",197,0)
 ..;
"RTN","PSBVDLUD",198,0)
 ..; apply this time to the ending window date
"RTN","PSBVDLUD",199,0)
 ..S PSB=+(PSBWEND\1_"."_$P(PSBADST,"-",PSBY))
"RTN","PSBVDLUD",200,0)
 ..D:(PSB'<PSBWBEG)&(PSB'>PSBWEND)  ; Make sure it is in the window
"RTN","PSBVDLUD",201,0)
 ...D:(PSB'<PSBOST)&(PSB<PSBOSP)  ; Make sure this time is active
"RTN","PSBVDLUD",202,0)
 ....D:$$OKAY^PSBVDLU1(PSBOST,PSB,PSBSCH,PSBONX,PSBOITX,PSBFREQ,PSBOSTS)  ; Okay on this date?
"RTN","PSBVDLUD",203,0)
 .....D ADD^PSBVDLU1(PSBREC,PSBOTXT,PSB,PSBDDS,PSBSOLS,PSBADDS,"UDTAB")
"RTN","PSBVDLUD",204,0)
 .;
"RTN","PSBVDLUD",205,0)
 .K PSBSTUS
"RTN","PSBVDLUD",206,0)
 ;
"RTN","PSBVDLUD",207,0)
1 K PSBREC
"RTN","PSBVDLUD",208,0)
 D EN^PSBVDLPA     ;find patches Given not removed and add to VDL
"RTN","PSBVDLUD",209,0)
 D EN^PSBVDLRM     ;find MRR meds Given not removed and add to VDL *83
"RTN","PSBVDLUD",210,0)
 ;
"RTN","PSBVDLUD",211,0)
 ;add initials of verifying pharmacist/verifying nurse
"RTN","PSBVDLUD",212,0)
 D:PSBTAB="UDTAB" VNURSE^PSBVDLU1("UDTAB")
"RTN","PSBVDLUD",213,0)
 D CLEAN^PSBVT     ;kills all PSB variables
"RTN","PSBVDLUD",214,0)
 Q
"RTN","PSBVDLVL")
0^13^B151829804^B74523979
"RTN","PSBVDLVL",1,0)
PSBVDLVL ;BIRMINGHAM/EFC-BCMA VIRTUAL DUE LIST FUNCTIONS ;03/06/16 3:06pm
"RTN","PSBVDLVL",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,3,12,11,13,32,25,61,70,83**;Mar 2004;Build 89
"RTN","PSBVDLVL",3,0)
 ;Per VHA Directive 2004-038 (or future revisions regarding same), this routine should not be modified.
"RTN","PSBVDLVL",4,0)
 ;
"RTN","PSBVDLVL",5,0)
 ;
"RTN","PSBVDLVL",6,0)
 ; Reference/IA
"RTN","PSBVDLVL",7,0)
 ; $$GET^XPAR/2263
"RTN","PSBVDLVL",8,0)
 ; 
"RTN","PSBVDLVL",9,0)
 ;*70 - Clinic Orders will use an Admin Early/Late calc of any day
"RTN","PSBVDLVL",10,0)
 ;      before or After TODAY instead of minutes as in IM meds.
"RTN","PSBVDLVL",11,0)
 ;*83 - Add ability to do Remove Early/Late tests on Sched Remove time
"RTN","PSBVDLVL",12,0)
 ;     -add a 10 param, sched remove time
"RTN","PSBVDLVL",13,0)
 ;     -add check for meds not removed for other orders (by OI)
"RTN","PSBVDLVL",14,0)
 ;
"RTN","PSBVDLVL",15,0)
EN(RESULTS,DFN,PSBXOR,PSBTYPE,PSBADMIN,PSBTAB,PSBUID,PSBASTS,PSBORSTS,PSBRMV,PSBRMT) ;
"RTN","PSBVDLVL",16,0)
 ;
"RTN","PSBVDLVL",17,0)
 ; RPC: PSB VALIDATE ORDER
"RTN","PSBVDLVL",18,0)
 ;
"RTN","PSBVDLVL",19,0)
 ; Description: Final check of order against an actual administration
"RTN","PSBVDLVL",20,0)
 ;              date/time used immediately after scanned med has been
"RTN","PSBVDLVL",21,0)
 ;              validated to be a good un-administered order.
"RTN","PSBVDLVL",22,0)
 ;
"RTN","PSBVDLVL",23,0)
 K PSBTST
"RTN","PSBVDLVL",24,0)
 N PSBFLAG,FOUND,LSTACTN,PSBLSTGV,PSBLADT,PSBLAIEN,X,CLORD        ;*83
"RTN","PSBVDLVL",25,0)
 I PSBRMV="I" D GETOHIST^PSBRPC2(.PSBTST,DFN,PSBXOR_PSBTYPE) S I=0 F  S I=$O(PSBTST(I)) Q:I=""  I $P(PSBTST(I),U,5)="I" S RESULTS(0)=1,RESULTS(1)="-2^" K PSBTST Q
"RTN","PSBVDLVL",26,0)
 K PSBOKAY D CLEAN^PSBVT,PSJ1^PSBVT(DFN,PSBXOR_PSBTYPE) S PSB=0
"RTN","PSBVDLVL",27,0)
 S CLORD=$S($G(PSBCLORD)]"":1,1:0)       ;if a Clinc ord, 1 else 0 *83
"RTN","PSBVDLVL",28,0)
 S RESULTS(0)=1,RESULTS(1)="-1^***Unable to determine administration" ; Default Flag will be overwritten by anything
"RTN","PSBVDLVL",29,0)
 D NOW^%DTC
"RTN","PSBVDLVL",30,0)
 I ((PSBOSTS="A")!(PSBOSTS="R"))&(PSBOSP<%) S PSBOSTS="E"
"RTN","PSBVDLVL",31,0)
 I PSBORSTS'=PSBOSTS,((PSBSCHT'="O")&(PSBOSTS'="E")) S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)="-2^ORDER STATUS MISMATCH" Q
"RTN","PSBVDLVL",32,0)
 ;
"RTN","PSBVDLVL",33,0)
 ;patch/MRR removal does not follow The Rest of validation rules
"RTN","PSBVDLVL",34,0)
 ;  special tests for RM added  *83
"RTN","PSBVDLVL",35,0)
 I ((PSBTAB="UDTAB")!(PSBTAB="PBTAB")),((PSBRMV="RM")!(PSBRMV="N")) D  Q
"RTN","PSBVDLVL",36,0)
 .D:PSBRMV="N"
"RTN","PSBVDLVL",37,0)
 ..S PSB=PSB+1,RESULTS(0)=PSB
"RTN","PSBVDLVL",38,0)
 ..S RESULTS(PSB)="0^Okay to Undo"
"RTN","PSBVDLVL",39,0)
 .I PSBASTS="" Q  ;status is not given - don't check for mismatch
"RTN","PSBVDLVL",40,0)
 .;check for admin status mismatch
"RTN","PSBVDLVL",41,0)
 .I $D(^PSB(53.79,"AORD",DFN,PSBXOR_PSBTYPE,+PSBADMIN)) S X=$O(^PSB(53.79,"AORD",DFN,PSBXOR_PSBTYPE,+PSBADMIN,"")) I $P($G(^PSB(53.79,+X,0)),U,9)'=PSBASTS D  Q    ;Quit if -2 err, dont fall thru to RM logic
"RTN","PSBVDLVL",42,0)
 ..S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)="-2^Admin status mismatch"
"RTN","PSBVDLVL",43,0)
 .;
"RTN","PSBVDLVL",44,0)
 .;  RM logic quits after it runs and does not fall thru
"RTN","PSBVDLVL",45,0)
 .;IM order Remove, Do variance check   *83
"RTN","PSBVDLVL",46,0)
 .I PSBRMV="RM",'CLORD D  Q
"RTN","PSBVDLVL",47,0)
 ..S PSBOKAY=$$VARIANCE(PSBRMV,PSBRMT)
"RTN","PSBVDLVL",48,0)
 ..S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)=PSBOKAY
"RTN","PSBVDLVL",49,0)
 .;
"RTN","PSBVDLVL",50,0)
 .;CO order Remove, No variance check   *83
"RTN","PSBVDLVL",51,0)
 .I PSBRMV="RM",CLORD D  Q
"RTN","PSBVDLVL",52,0)
 ..S RESULTS(0)=1,RESULTS(1)="0^Okay to Remove"
"RTN","PSBVDLVL",53,0)
 ;
"RTN","PSBVDLVL",54,0)
 ;    The Rest of the validation rules
"RTN","PSBVDLVL",55,0)
 I PSBTYPE="V",PSBSCHT'="P",((PSBUID="")!(PSBUID["WS")) S RESULTS(0)=1,RESULTS(1)="0^Okay to administer" Q:PSBTAB="IVTAB"
"RTN","PSBVDLVL",56,0)
 I PSBTYPE="V",PSBUID'="" D  Q:PSBTAB="IVTAB"  ; validate IV bags Piggybacks have additional tests
"RTN","PSBVDLVL",57,0)
 .S PSB=0,PSBSUID=PSBUID D EN^PSBPOIV(DFN,PSBXOR_PSBTYPE)
"RTN","PSBVDLVL",58,0)
 .S X="" F  S X=$O(^TMP("PSBAR",$J,X)) Q:X=""  D
"RTN","PSBVDLVL",59,0)
 ..I PSBSUID'=X Q
"RTN","PSBVDLVL",60,0)
 ..S PSBUIDS=^TMP("PSBAR",$J,X)
"RTN","PSBVDLVL",61,0)
 ..I $P(PSBUIDS,U,2)="I"!($P(PSBUIDS,U,2)="S") S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)="0^Okay to administer" Q  ; is infusing or stopped
"RTN","PSBVDLVL",62,0)
 ..I $P(PSBUIDS,U,1)="I" S Y=$P(^TMP("PSBAR",$J,"I"),U,2) D DD^%DT S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)=$P(^TMP("PSBAR",$J,"I"),U,3,99)_"  "_Y Q
"RTN","PSBVDLVL",63,0)
 ..I $P(PSBUIDS,U,1)["W" S PSBWS=$P(PSBUIDS,U,1) F PSBWM=2:1 Q:$P(PSBWS,";",PSBWM)=""  D
"RTN","PSBVDLVL",64,0)
 ...S Y=$P(^TMP("PSBAR",$J,"W",$P(PSBWS,";",PSBWM)),U,2) D DD^%DT S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)=$P(^TMP("PSBAR",$J,"W",$P(PSBWS,";",PSBWM)),U,3,99)_" "_Y
"RTN","PSBVDLVL",65,0)
 ..S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)="0^Okay to administer"
"RTN","PSBVDLVL",66,0)
 .K ^TMP("PSBAR",$J)
"RTN","PSBVDLVL",67,0)
 ;
"RTN","PSBVDLVL",68,0)
 ; no IV orders
"RTN","PSBVDLVL",69,0)
 ;
"RTN","PSBVDLVL",70,0)
 D NOW^%DTC
"RTN","PSBVDLVL",71,0)
 I PSBOSTS="H" S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)="0^Order is on Provider Hold" Q
"RTN","PSBVDLVL",72,0)
 ;
"RTN","PSBVDLVL",73,0)
 ;test for non-one time orders   admin prior to start date of order
"RTN","PSBVDLVL",74,0)
 ;
"RTN","PSBVDLVL",75,0)
 ;CO orders, check if start order date is > today
"RTN","PSBVDLVL",76,0)
 I CLORD,PSBSCHT'="O"&($P(PSBOST,".")>DT) S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)="-1^Order Not Active" Q         ;CO > today *83
"RTN","PSBVDLVL",77,0)
 ;IM orders, check start order date/time > Now
"RTN","PSBVDLVL",78,0)
 I 'CLORD,PSBSCHT'="O"&(%<($$FMADD^XLFDT(PSBOST,"","",$$GET^XPAR("ALL","PSB ADMIN BEFORE")*-1))) S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)="-1^Order Not Active" Q         ;IM > now  *83
"RTN","PSBVDLVL",79,0)
 ;All orders, check stop order date/time > Now
"RTN","PSBVDLVL",80,0)
 I (%>PSBOSP) S PSB=PSB+1,RESULTS(0)=PSB,RESULTS(PSB)="-1^Order Not Active, expired" Q
"RTN","PSBVDLVL",81,0)
 ;
"RTN","PSBVDLVL",82,0)
 ;tests sched types of continuous or prns that are MRRs
"RTN","PSBVDLVL",83,0)
 I (PSBSCHT="C")!((PSBSCHT="P")&(PSBMRRFL>0)) D
"RTN","PSBVDLVL",84,0)
 .S PSBOKAY="0^Okay to administer"
"RTN","PSBVDLVL",85,0)
 .I PSBASTS["*UNKNOWN*" S PSBOKAY="-1^This administration has *UNKNOWN* status" Q
"RTN","PSBVDLVL",86,0)
 .I PSBOSTS'="A",PSBOSTS'="R",PSBOSTS'="O" S PSBOKAY="-1^Order Not Active" Q
"RTN","PSBVDLVL",87,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE" Q
"RTN","PSBVDLVL",88,0)
 .;set special action flag
"RTN","PSBVDLVL",89,0)
 .S PSBFLAG=0 I PSBRMV="M"!(PSBRMV="H")!(PSBRMV="R") S PSBFLAG=1
"RTN","PSBVDLVL",90,0)
 .;
"RTN","PSBVDLVL",91,0)
 .;*** Check for errors vs. last valid completed action this order.
"RTN","PSBVDLVL",92,0)
 .;        completed = Given or Removed, end of a UD admin life cycle
"RTN","PSBVDLVL",93,0)
 .I $D(^PSB(53.79,"AORDX",DFN,PSBXOR_PSBTYPE)) D  Q:X
"RTN","PSBVDLVL",94,0)
 ..S X=0,LSTACTN="",PSBLAIEN=0
"RTN","PSBVDLVL",95,0)
 ..S PSBLADT="",FOUND=0
"RTN","PSBVDLVL",96,0)
 ..F  S PSBLADT=$O(^PSB(53.79,"AORDX",DFN,PSBXOR_PSBTYPE,PSBLADT),-1) Q:'PSBLADT  D  Q:FOUND
"RTN","PSBVDLVL",97,0)
 ...S PSBLAIEN=$O(^PSB(53.79,"AORDX",DFN,PSBXOR_PSBTYPE,PSBLADT,""),-1)
"RTN","PSBVDLVL",98,0)
 ...S LSTACTN=$P($G(^PSB(53.79,PSBLAIEN,0)),U,9)
"RTN","PSBVDLVL",99,0)
 ...I (LSTACTN="G")!(LSTACTN="RM") S FOUND=1    ;found a previous G/RM
"RTN","PSBVDLVL",100,0)
 ..Q:'FOUND     ;quit, no last valid completed type last action found
"RTN","PSBVDLVL",101,0)
 ..;
"RTN","PSBVDLVL",102,0)
 ..;MRR - Previous Admin NOT REMOVED tests
"RTN","PSBVDLVL",103,0)
 ..I LSTACTN="G",PSBFLAG=0 D
"RTN","PSBVDLVL",104,0)
 ...I $P($G(^PSB(53.79,PSBLAIEN,.5,1,0)),U,4)="PATCH" D NOTREMVD
"RTN","PSBVDLVL",105,0)
 ...I 'X,$P($G(^PSB(53.79,PSBLAIEN,.5,1,0)),U,6)>0 D NOTREMVD
"RTN","PSBVDLVL",106,0)
 ..;
"RTN","PSBVDLVL",107,0)
 ..;if trying to Give an earlier dose after a later admin Given   *83
"RTN","PSBVDLVL",108,0)
 ..S PSBLSTGV=$P(^PSB(53.79,PSBLAIEN,.1),U,3)
"RTN","PSBVDLVL",109,0)
 ..I PSBADMIN<PSBLSTGV,PSBFLAG=0 D
"RTN","PSBVDLVL",110,0)
 ...S X=1
"RTN","PSBVDLVL",111,0)
 ...S PSBOKAY="-1^A later dose scheduled at ("_$$FMTE^XLFDT(PSBLSTGV,2)_") was given "_($$FMDIFF^XLFDT($$NOW^XLFDT,$P(^PSB(53.79,PSBLAIEN,0),U,6),2)\60)_" minutes ago."
"RTN","PSBVDLVL",112,0)
 .;****
"RTN","PSBVDLVL",113,0)
 .;
"RTN","PSBVDLVL",114,0)
 .I $D(^PSB(53.79,"AORD",DFN,PSBXOR_PSBTYPE,+PSBADMIN)) D  Q:+PSBOKAY<0
"RTN","PSBVDLVL",115,0)
 ..S X=$O(^PSB(53.79,"AORD",DFN,PSBXOR_PSBTYPE,+PSBADMIN,""))
"RTN","PSBVDLVL",116,0)
 ..L +^PSB(53.79,+X):1
"RTN","PSBVDLVL",117,0)
 ..I  L -^PSB(53.79,+X)
"RTN","PSBVDLVL",118,0)
 ..E  S PSBOKAY="-1^The "_$$GET1^DIQ(53.79,+X_",",.13)_" administration is being edited by another" Q
"RTN","PSBVDLVL",119,0)
 ..I $G(PSBASTS)]"" D  Q:+PSBOKAY<0
"RTN","PSBVDLVL",120,0)
 ...I $P($G(^PSB(53.79,+X,0)),U,9)="" Q
"RTN","PSBVDLVL",121,0)
 ...I $P($G(^PSB(53.79,+X,0)),U,9)'=PSBASTS S PSBOKAY="-2^Admin status mismatch" Q
"RTN","PSBVDLVL",122,0)
 .;*70 perform early/late admin testing for IM & CO orders
"RTN","PSBVDLVL",123,0)
 .;
"RTN","PSBVDLVL",124,0)
 .;*83 call tag for non-removal actions - IM orders only
"RTN","PSBVDLVL",125,0)
 .I 'CLORD,PSBRMV'="RM",'PSBFLAG S PSBOKAY=$$VARIANCE(PSBRMV,PSBADMIN)
"RTN","PSBVDLVL",126,0)
 .;
"RTN","PSBVDLVL",127,0)
 .D:CLORD          ;CO order new logic 
"RTN","PSBVDLVL",128,0)
 ..N ADMINDT S ADMINDT=$P(PSBADMIN,".")
"RTN","PSBVDLVL",129,0)
 ..S PSBOKAY="1^You are about to give a medication that "
"RTN","PSBVDLVL",130,0)
 ..I ADMINDT>DT D  Q
"RTN","PSBVDLVL",131,0)
 ...S PSBOKAY=PSBOKAY_"is scheduled for "_$$DOW^XLFDT(ADMINDT)_", "_$$FMTE^XLFDT(ADMINDT,5)_"."
"RTN","PSBVDLVL",132,0)
 ..I ADMINDT<DT D  Q
"RTN","PSBVDLVL",133,0)
 ...S PSBOKAY=PSBOKAY_"was scheduled for "_$$DOW^XLFDT(ADMINDT)_", "_$$FMTE^XLFDT(ADMINDT,5)_"."
"RTN","PSBVDLVL",134,0)
 ..S PSBOKAY="0^Okay to administer"
"RTN","PSBVDLVL",135,0)
 .;*70 end early/late logic
"RTN","PSBVDLVL",136,0)
 ;
"RTN","PSBVDLVL",137,0)
 ; Validate a PRN Order
"RTN","PSBVDLVL",138,0)
 D:(PSBSCHT="P")
"RTN","PSBVDLVL",139,0)
 .I PSBOSTS'="A",PSBOSTS'="R",PSBOSTS'="O" S PSBOKAY="-1^Order Not Active" Q
"RTN","PSBVDLVL",140,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE" Q
"RTN","PSBVDLVL",141,0)
 .I (+($G(PSBOKAY))<0)&(PSBDOSEF="PATCH") Q  ;A Patch may have to be removed.
"RTN","PSBVDLVL",142,0)
 .I (+($G(PSBOKAY))<0)&(PSBMRRFL>0) Q        ;MRR may need removal *83
"RTN","PSBVDLVL",143,0)
 .S PSBOKAY="1^"
"RTN","PSBVDLVL",144,0)
 .; Get Last Four Givens
"RTN","PSBVDLVL",145,0)
 .S PSBDT=""
"RTN","PSBVDLVL",146,0)
 .F  S PSBDT=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,PSBDT),-1) Q:PSBDT=""  D
"RTN","PSBVDLVL",147,0)
 ..S PSBDA=""
"RTN","PSBVDLVL",148,0)
 ..F  S PSBDA=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,PSBDT,PSBDA),-1) Q:'PSBDA  D
"RTN","PSBVDLVL",149,0)
 ...S (PSBCNT1,PSBCNT2,PSBCNT3)=0
"RTN","PSBVDLVL",150,0)
 ...S PSBLADT=$$GET1^DIQ(53.79,PSBDA_",",.06,"I")
"RTN","PSBVDLVL",151,0)
 ...S PSBSTUS=$$GET1^DIQ(53.79,PSBDA_",",.09)
"RTN","PSBVDLVL",152,0)
 ...S:PSBSTUS="" PSBSTUS="U"
"RTN","PSBVDLVL",153,0)
 ...S PSBSCH=$$GET1^DIQ(53.79,PSBDA_",",.12)
"RTN","PSBVDLVL",154,0)
 ...S PSBRSN=$$GET1^DIQ(53.79,PSBDA_",",.21)
"RTN","PSBVDLVL",155,0)
 ...S PSBINJ=$$GET1^DIQ(53.79,PSBDA_",",.16)
"RTN","PSBVDLVL",156,0)
 ...Q:$P(^PSB(53.79,PSBDA,0),U,9)="N"
"RTN","PSBVDLVL",157,0)
 ...F PSBZ=.5,.6,.7 F PSBY=0:0 S PSBY=$O(^PSB(53.79,PSBDA,PSBZ,PSBY)) Q:'PSBY  D
"RTN","PSBVDLVL",158,0)
 ....Q:'$D(^PSB(53.79,PSBDA,PSBZ,PSBY))
"RTN","PSBVDLVL",159,0)
 ....S PSBDD=$S(PSBZ=.5:53.795,PSBZ=.6:53.796,1:53.797)
"RTN","PSBVDLVL",160,0)
 ....S PSBUNIT=$$GET1^DIQ(PSBDD,PSBY_","_PSBDA_",",.03) S:PSBUNIT>0&(PSBUNIT<1) PSBUNIT="0"_+PSBUNIT ;Add leading 0 for decimal values less than 1, PSB*3*61
"RTN","PSBVDLVL",161,0)
 ....S PSBUNFR=$$GET1^DIQ(PSBDD,PSBY_","_PSBDA_",",.04)
"RTN","PSBVDLVL",162,0)
 ....I PSBZ=.5 S PSBCNT1=PSBCNT1+1
"RTN","PSBVDLVL",163,0)
 ....I PSBZ=.6 S PSBCNT2=PSBCNT2+1
"RTN","PSBVDLVL",164,0)
 ....I PSBZ=.7 S PSBCNT3=PSBCNT3+1
"RTN","PSBVDLVL",165,0)
 ...;Units given or free text not to display for multiple dispense drugs or additives and solution
"RTN","PSBVDLVL",166,0)
 ...I (PSBCNT1>1)!(PSBCNT2>0)!(PSBCNT3>0) S (PSBUNIT,PSBUNFR)=""
"RTN","PSBVDLVL",167,0)
 ...S X=PSBLADT_U
"RTN","PSBVDLVL",168,0)
 ...S X=X_PSBSTUS_U_PSBSCH_U_$G(PSBRSN)_U_$G(PSBINJ)_U_$G(PSBUNIT)_U_$G(PSBUNFR)
"RTN","PSBVDLVL",169,0)
 ...S PSBOKAY($O(PSBOKAY(""),-1)+1)=3_U_X
"RTN","PSBVDLVL",170,0)
 ...S:$D(PSBOKAY(4)) PSBDT=0
"RTN","PSBVDLVL",171,0)
 .S X1=$$LASTG^PSBCSUTL(DFN,+PSBOIT) I X1>0 S PSBOKAY($O(PSBOKAY(""),-1)+1)=4_U_X1
"RTN","PSBVDLVL",172,0)
 ;
"RTN","PSBVDLVL",173,0)
 ; Validate a One-Time Order
"RTN","PSBVDLVL",174,0)
 D:PSBSCHT="O"
"RTN","PSBVDLVL",175,0)
 .S (PSBGVN,X,Y)=""
"RTN","PSBVDLVL",176,0)
 .F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1)  Q:'X  F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  I $P(^PSB(53.79,Y,.1),U)=PSBONX,"G"[$P(^PSB(53.79,Y,0),U,9) S PSBGVN=1,(X,Y)=0
"RTN","PSBVDLVL",177,0)
 .I PSBGVN S PSBOKAY="-1^Dose Already on medication Log" Q
"RTN","PSBVDLVL",178,0)
 .; One Time are automatically expired so we don't check STATUS here
"RTN","PSBVDLVL",179,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE" Q
"RTN","PSBVDLVL",180,0)
 .S PSBOKAY="0^Okay to administer"
"RTN","PSBVDLVL",181,0)
 ;
"RTN","PSBVDLVL",182,0)
 ; Validate an On Call Order
"RTN","PSBVDLVL",183,0)
 D:PSBSCHT="OC"
"RTN","PSBVDLVL",184,0)
 .S PSBOKAY="0^Okay to administer"
"RTN","PSBVDLVL",185,0)
 .S (PSBGVN,X,Y)=""
"RTN","PSBVDLVL",186,0)
 .F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1)  Q:'X  F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  I $P(^PSB(53.79,Y,.1),U)=PSBONX,"G"[$P(^PSB(53.79,Y,0),U,9) S PSBGVN=1,(X,Y)=0
"RTN","PSBVDLVL",187,0)
 .I PSBGVN&('$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL")) S PSBOKAY="-1^Dose Already on medication Log" Q
"RTN","PSBVDLVL",188,0)
 .I PSBOSTS'="A",PSBOSTS'="R",PSBOSTS'="O" S PSBOKAY="-1^Order Not Active" Q
"RTN","PSBVDLVL",189,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE" Q
"RTN","PSBVDLVL",190,0)
 .S X=0
"RTN","PSBVDLVL",191,0)
 .I PSBGVN,$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL") D  Q:X
"RTN","PSBVDLVL",192,0)
 ..I PSBDOSEF="PATCH" D NOTREMVD Q                                ;*83
"RTN","PSBVDLVL",193,0)
 ..I PSBMRRFL>0 D NOTREMVD Q                                      ;*83
"RTN","PSBVDLVL",194,0)
 .S PSBOKAY="0^Okay to administer"
"RTN","PSBVDLVL",195,0)
 ;
"RTN","PSBVDLVL",196,0)
 D:+PSBOKAY'<0
"RTN","PSBVDLVL",197,0)
 .N PSBDIFF,Y
"RTN","PSBVDLVL",198,0)
 .D:(PSBSCHT="C")!(PSBSCHT="OC"&('$G(PSBGVN)))
"RTN","PSBVDLVL",199,0)
 ..; On-call or cont and not on the log.
"RTN","PSBVDLVL",200,0)
 ..S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,""),-1)
"RTN","PSBVDLVL",201,0)
 ..;Check for the status of the medication and insert status into text
"RTN","PSBVDLVL",202,0)
 ..I Y]"" S X=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,Y,""),-1),PSBSTUS=$P(^PSB(53.79,X,0),U,9)
"RTN","PSBVDLVL",203,0)
 ..S:Y']"" PSBSTUS=""
"RTN","PSBVDLVL",204,0)
 ..I PSBSTUS="N" D  Q:$G(PSBQUIT)
"RTN","PSBVDLVL",205,0)
 ...S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,Y,X),-1)
"RTN","PSBVDLVL",206,0)
 ...D:X']""
"RTN","PSBVDLVL",207,0)
 ....S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,Y),-1) I Y']"" S PSBQUIT=1 Q
"RTN","PSBVDLVL",208,0)
 ....S X=$O(^PSB(53.79,"AOIP",DFN,+PSBOIT,Y,""),-1),PSBSTUS=$P(^PSB(53.79,X,0),U,9)
"RTN","PSBVDLVL",209,0)
 ..S PSBDIFF=$$FMDIFF^XLFDT($$NOW^XLFDT(),Y,2)
"RTN","PSBVDLVL",210,0)
 ..Q:PSBDIFF>7200  ; Greater than 2 hours
"RTN","PSBVDLVL",211,0)
 ..;remove "RM" sts previous action test for this warning          *83
"RTN","PSBVDLVL",212,0)
 ..I (PSBSTUS="G")!(PSBSTUS="H")!(PSBSTUS="R") D
"RTN","PSBVDLVL",213,0)
 ...S PSBSTUS=$$GET1^DIQ(53.79,X_",",.09)
"RTN","PSBVDLVL",214,0)
 ...I PSBSTUS'="" D
"RTN","PSBVDLVL",215,0)
 ....S Y="1^*** NOTICE, "_PSBOITX_" was "_PSBSTUS_" "_(PSBDIFF\60)_" minutes ago."
"RTN","PSBVDLVL",216,0)
 ....I +PSBOKAY=1 S PSBOKAY(1)=Y
"RTN","PSBVDLVL",217,0)
 ....E  S PSBOKAY=Y
"RTN","PSBVDLVL",218,0)
 .;
"RTN","PSBVDLVL",219,0)
 .;check for same OI medication MRR not removed, warning           *83
"RTN","PSBVDLVL",220,0)
 .N LST
"RTN","PSBVDLVL",221,0)
 .I PSBMRRFL,$$OIREMVD(DFN,PSBOIT,.LST) D
"RTN","PSBVDLVL",222,0)
 ..;find last ien in psbokay, so won't overwrite with new OI msgs  *83
"RTN","PSBVDLVL",223,0)
 ..N Q S Q=$O(PSBOKAY(""),-1)
"RTN","PSBVDLVL",224,0)
 ..F X=0:0 S X=$O(LST(X)) Q:'X  D
"RTN","PSBVDLVL",225,0)
 ...S PSBOKAY(Q+X)="1^Medication "_$P(LST(X),U,2)_" for scheduled administration "_$P(LST(X),U)_" has NOT been removed. "
"RTN","PSBVDLVL",226,0)
 ;
"RTN","PSBVDLVL",227,0)
 ;adds fall thru err msg text to Results
"RTN","PSBVDLVL",228,0)
 S PSB=PSB+1,RESULTS(PSB)=PSBOKAY
"RTN","PSBVDLVL",229,0)
 ;
"RTN","PSBVDLVL",230,0)
 ;overwrite 0^okay text with 1^warning text IF array PSBOKAY populated
"RTN","PSBVDLVL",231,0)
 I RESULTS(1)["0^Okay",$D(PSBOKAY)>9 S PSB=0
"RTN","PSBVDLVL",232,0)
 F X=0:0 S X=$O(PSBOKAY(X)) Q:'X  D
"RTN","PSBVDLVL",233,0)
 .S PSB=PSB+1,RESULTS(PSB)=PSBOKAY(X)
"RTN","PSBVDLVL",234,0)
 ;
"RTN","PSBVDLVL",235,0)
 S RESULTS(0)=$O(RESULTS(999),-1)      ;set to always agree to content
"RTN","PSBVDLVL",236,0)
 Q
"RTN","PSBVDLVL",237,0)
 ;
"RTN","PSBVDLVL",238,0)
NOTREMVD ;Standard "Not Removed" MRR error msg & special pre-warning test *83
"RTN","PSBVDLVL",239,0)
 S PSBOKAY=""
"RTN","PSBVDLVL",240,0)
 I PSBRMV'="RM" S PSBOKAY=$$VARIANCE(PSBRMV,PSBADMIN)
"RTN","PSBVDLVL",241,0)
 ;check special case of Early Admin - move Early error msg to Results
"RTN","PSBVDLVL",242,0)
 ;array so PSBOKAY can be reused for later dual -1 errmsg: early admin
"RTN","PSBVDLVL",243,0)
 ;
"RTN","PSBVDLVL",244,0)
 I PSBOKAY["Admin",PSBOKAY["before" D
"RTN","PSBVDLVL",245,0)
 .S PSB=PSB+1,RESULTS(PSB)=PSBOKAY,RESULTS(0)=PSB
"RTN","PSBVDLVL",246,0)
 S X=1
"RTN","PSBVDLVL",247,0)
 S PSBOKAY="-1^Cannot Give medication until previous administration has been removed."
"RTN","PSBVDLVL",248,0)
 Q
"RTN","PSBVDLVL",249,0)
 ;
"RTN","PSBVDLVL",250,0)
VARIANCE(ACTION,DATETM) ;check for variance to exceed Early/Late window    *83
"RTN","PSBVDLVL",251,0)
 N MSG
"RTN","PSBVDLVL",252,0)
 S PSBWIN1=$$GET^XPAR("DIV","PSB ADMIN BEFORE")*-1    ;Minutes before
"RTN","PSBVDLVL",253,0)
 S PSBWIN2=$$GET^XPAR("DIV","PSB ADMIN AFTER")        ;Minutes After
"RTN","PSBVDLVL",254,0)
 D NOW^%DTC
"RTN","PSBVDLVL",255,0)
 S PSBMIN=$S($P(DATETM,".",2):$$DIFF^PSBUTL(DATETM,%),1:0)
"RTN","PSBVDLVL",256,0)
 ;
"RTN","PSBVDLVL",257,0)
 D:ACTION'="RM"   ;Not a Removal
"RTN","PSBVDLVL",258,0)
 .I PSBMIN<PSBWIN1 S MSG="1^Admin is "_(PSBMIN*-1)_" minutes before the scheduled administration time" Q
"RTN","PSBVDLVL",259,0)
 .I PSBMIN>PSBWIN2 S MSG="1^Admin is "_(PSBMIN)_" minutes after the scheduled administration time" Q
"RTN","PSBVDLVL",260,0)
 .S MSG="0^Okay to "_$S(ACTION="H":"Hold",ACTION="R":"Refuse",1:"administer")
"RTN","PSBVDLVL",261,0)
 ;
"RTN","PSBVDLVL",262,0)
 D:ACTION="RM"    ;Removal: use a new code #5 for RED txt (Early RM)
"RTN","PSBVDLVL",263,0)
 .S MSG="0^Okay to Remove"
"RTN","PSBVDLVL",264,0)
 .I PSBMIN<PSBWIN1 S MSG="5^Removal is "_(PSBMIN*-1)_" minutes before the scheduled removal time" Q
"RTN","PSBVDLVL",265,0)
 .I PSBMIN>PSBWIN2 S MSG="1^Removal is "_(PSBMIN)_" minutes after the scheduled removal time" Q
"RTN","PSBVDLVL",266,0)
 ;
"RTN","PSBVDLVL",267,0)
 Q MSG
"RTN","PSBVDLVL",268,0)
 ;
"RTN","PSBVDLVL",269,0)
OIREMVD(DFN,OI,REM) ;Is another OI MRR not removed?
"RTN","PSBVDLVL",270,0)
 ; Input:
"RTN","PSBVDLVL",271,0)
 ;    DFN = patient ien
"RTN","PSBVDLVL",272,0)
 ;     OI = Ordreable Item Ien
"RTN","PSBVDLVL",273,0)
 ;Output:
"RTN","PSBVDLVL",274,0)
 ;    Function - false/true
"RTN","PSBVDLVL",275,0)
 ;    parm- REM(ien), IEN of file 53.79 array of meds needing Removal
"RTN","PSBVDLVL",276,0)
 ;           formatted: Sched Admin date/time ^ Disp drug name ^Ordno
"RTN","PSBVDLVL",277,0)
 ;    if One time sched, then set Sched Admin = actual given date/time
"RTN","PSBVDLVL",278,0)
 ;
"RTN","PSBVDLVL",279,0)
 ;check for previous MRR type 1 med not removed                  *83
"RTN","PSBVDLVL",280,0)
 N CNT,PSBBK,DTE,IEN,QQ,MEDNM,ORDNO,SCHADM
"RTN","PSBVDLVL",281,0)
 S PSBBK=$$GET^XPAR("DIV","PSB VDL PATCH DAYS")
"RTN","PSBVDLVL",282,0)
 S PSBBK=$$FMADD^XLFDT(DT,-$S(PSBBK>0:PSBBK,1:30))
"RTN","PSBVDLVL",283,0)
 S DTE="",CNT=0
"RTN","PSBVDLVL",284,0)
 F  S DTE=$O(^PSB(53.79,"AOIP",DFN,OI,DTE),-1) Q:('DTE)!((DTE\1)<PSBBK)  D
"RTN","PSBVDLVL",285,0)
 .S IEN=""
"RTN","PSBVDLVL",286,0)
 .F  S IEN=$O(^PSB(53.79,"AOIP",DFN,OI,DTE,IEN),-1) Q:'IEN  D
"RTN","PSBVDLVL",287,0)
 ..Q:$P($G(^PSB(53.79,IEN,0)),U,9)'="G"
"RTN","PSBVDLVL",288,0)
 ..S CNT=CNT+1
"RTN","PSBVDLVL",289,0)
 ..S SCHADM=$$GET1^DIQ(53.79,+IEN,"SCHEDULED ADMINISTRATION TIME")
"RTN","PSBVDLVL",290,0)
 ..S:'SCHADM SCHADM=$E($$GET1^DIQ(53.79,+IEN,"ACTION DATE/TIME"),1,18)
"RTN","PSBVDLVL",291,0)
 ..S QQ=$O(^PSB(53.79,IEN,.5,0))
"RTN","PSBVDLVL",292,0)
 ..S:QQ MEDNM=$$GET1^DIQ(53.795,QQ_","_IEN,"DISPENSE DRUG")
"RTN","PSBVDLVL",293,0)
 ..S ORDNO=$$GET1^DIQ(53.79,+IEN,"ORDER REFERENCE NUMBER")
"RTN","PSBVDLVL",294,0)
 ..S REM(CNT)=SCHADM_U_MEDNM_U_ORDNO
"RTN","PSBVDLVL",295,0)
 Q $D(REM)
"RTN","PSBVT")
0^30^B117105095^B98717272
"RTN","PSBVT",1,0)
PSBVT ;BIRMINGHAM/EFC-BCMA ORDER VARIABLES UTILITY ;03/06/16 3:06pm
"RTN","PSBVT",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,3,38,68,74,70,83**;Mar 2004;Build 89
"RTN","PSBVT",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PSBVT",4,0)
 ;
"RTN","PSBVT",5,0)
 ; Reference/IA
"RTN","PSBVT",6,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBVT",7,0)
 ; ^TMP("PSJ",$J/2828
"RTN","PSBVT",8,0)
 ;
"RTN","PSBVT",9,0)
 ;*68 Define New Variable (IEN from Med Route file) in Tag PSJ which
"RTN","PSBVT",10,0)
 ;    uses the TMP global built by a previous call to PSJBCMA Api.
"RTN","PSBVT",11,0)
 ;*70 - define new variable, 1/0 flag for is a Clinic order
"RTN","PSBVT",12,0)
 ;    - 1489: Blended PSB*3*74 with PSB*3*70
"RTN","PSBVT",13,0)
 ;*83 - create remove string var from new rmst passed PSJBCMA1
"RTN","PSBVT",14,0)
 ;
"RTN","PSBVT",15,0)
PSJ(PSBX1) ;
"RTN","PSBVT",16,0)
 S ^TMP("TK PSJ",PSBX1)=""
"RTN","PSBVT",17,0)
 S PSBSCRT="^TMP(""PSB"",$J,""PSBORDA"")"
"RTN","PSBVT",18,0)
 K @PSBSCRT M @PSBSCRT=^TMP("PSJ",$J,PSBX1)
"RTN","PSBVT",19,0)
 S PSBDFN=DFN
"RTN","PSBVT",20,0)
 ;
"RTN","PSBVT",21,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",0))
"RTN","PSBVT",22,0)
 S PSBON=+$P(PSBSCRT,U,3)        ; ord num w/o type
"RTN","PSBVT",23,0)
 S PSBONX=$P(PSBSCRT,U,3)        ; ord num w/  type "U" or "V"
"RTN","PSBVT",24,0)
 S PSBOTYP=$E(PSBONX,$L(PSBONX)) ; "U" or "V"
"RTN","PSBVT",25,0)
 S PSBPONX=$P(PSBSCRT,U,4)       ; prev ord num
"RTN","PSBVT",26,0)
 S PSBFON=$P(PSBSCRT,U,5)        ; foll ord num
"RTN","PSBVT",27,0)
 S PSBIVT=$P(PSBSCRT,U,6)        ; IV type
"RTN","PSBVT",28,0)
 S PSBISYR=$P(PSBSCRT,U,7)       ; intermit syrg
"RTN","PSBVT",29,0)
 S PSBCHEMT=$P(PSBSCRT,U,8)      ; chemo type
"RTN","PSBVT",30,0)
 S PSBCPRS=$P(PSBSCRT,U,9)       ; ords file entry (CPRS order #)
"RTN","PSBVT",31,0)
 S PSBFOR=$P(PSBSCRT,U,10)       ; reason for foll order
"RTN","PSBVT",32,0)
 S PSBCLORD=$P(PSBSCRT,U,11)     ; clinic order Name (is a CO)     *70
"RTN","PSBVT",33,0)
 ;  send clinic file #44 ien ptr                                   *70
"RTN","PSBVT",34,0)
 S PSBCLIEN=$P(PSBSCRT,U,12)                 ;*70
"RTN","PSBVT",35,0)
 Q:PSBSCRT=-1
"RTN","PSBVT",36,0)
 ;
"RTN","PSBVT",37,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",1))
"RTN","PSBVT",38,0)
 S PSBMR=$P($G(^TMP("PSB",$J,"PSBORDA",1,0)),U,2)     ; med rt
"RTN","PSBVT",39,0)
 S PSBMRAB=$P(PSBSCRT,U,1)       ; med rt abbr
"RTN","PSBVT",40,0)
 S PSBMRIEN=+$P($G(^TMP("PSB",$J,"PSBORDA",1,0)),U,4) ; med rt ien *68
"RTN","PSBVT",41,0)
 S PSBNJECT=+$G(^TMP("PSB",$J,"PSBORDA",1,0))         ; Inj site
"RTN","PSBVT",42,0)
 S PSBIVPSH=+$P($G(^TMP("PSB",$J,"PSBORDA",1,0)),U,3) ; IV PUSH
"RTN","PSBVT",43,0)
 S PSBSCHT=$P(PSBSCRT,U,2)       ; sched type conversion
"RTN","PSBVT",44,0)
 S PSBSCH=$P(PSBSCRT,U,3)        ; sched
"RTN","PSBVT",45,0)
 S PSBOST=$P(PSBSCRT,U,4)        ; strt dte FM
"RTN","PSBVT",46,0)
 S PSBOSP=$P(PSBSCRT,U,5)        ; stp dte FM
"RTN","PSBVT",47,0)
 S PSBADST=$P(PSBSCRT,U,6)       ; admin times str in NNNN- format
"RTN","PSBVT",48,0)
 S PSBOSTS=$P(PSBSCRT,U,7)       ; status
"RTN","PSBVT",49,0)
 S PSBNGF=$P(PSBSCRT,U,8)        ; not to be given flag
"RTN","PSBVT",50,0)
 S PSBOSCHT=$P(PSBSCRT,U,9)      ; origin sched type
"RTN","PSBVT",51,0)
 ;define 4 new MRR type fields                                     *83
"RTN","PSBVT",52,0)
 S PSBDOA=$P(PSBSCRT,U,12)       ; duration of administration
"RTN","PSBVT",53,0)
 S PSBRMST=$P(PSBSCRT,U,13)      ; removal times str in NNNN- format
"RTN","PSBVT",54,0)
 S PSBMRRFL=$P(PSBSCRT,U,14)     ; MRR flag (prompt removal bcma)
"RTN","PSBVT",55,0)
 S PSBOPRSP=$P(PSBSCRT,U,15)     ; Order previous Stop date/time
"RTN","PSBVT",56,0)
 ;
"RTN","PSBVT",57,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",2))
"RTN","PSBVT",58,0)
 S PSBDOSE=$P(PSBSCRT,U,1)       ; dosage ordered
"RTN","PSBVT",59,0)
 S PSBIFR=$P(PSBSCRT,U,2)        ; infusn rate
"RTN","PSBVT",60,0)
 S PSBSM=$P(PSBSCRT,U,3)         ; self med
"RTN","PSBVT",61,0)
 S PSBHSM=$P(PSBSCRT,U,4)        ; hospital supplied self med
"RTN","PSBVT",62,0)
 ;
"RTN","PSBVT",63,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",3))
"RTN","PSBVT",64,0)
 S PSBOIT=$P(PSBSCRT,U,1)        ; order item IEN - > ^ORD(101.43)
"RTN","PSBVT",65,0)
 S PSBOITX=$P(PSBSCRT,U,2)       ; order item (expand)_" "_dosage form
"RTN","PSBVT",66,0)
 I PSBOITX="" S PSBOITX="ZZZZ NO ORDERABLE ITEM"
"RTN","PSBVT",67,0)
 S PSBDOSEF=$P(PSBSCRT,U,3)      ; dosage form
"RTN","PSBVT",68,0)
 ;
"RTN","PSBVT",69,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",4))
"RTN","PSBVT",70,0)
 S PSBOTXT=PSBSCRT               ; special inst/other print info
"RTN","PSBVT",71,0)
 ; get disp drug
"RTN","PSBVT",72,0)
 I $G(^TMP("PSB",$J,"PSBORDA",700,0)) F PSBX2=1:1:^TMP("PSB",$J,"PSBORDA",700,0) M PSBDDA(PSBX2)=^TMP("PSB",$J,"PSBORDA",700,PSBX2,0) S PSBDDA(PSBX2)="DD^"_PSBDDA(PSBX2)  ; # of DDrug
"RTN","PSBVT",73,0)
 ;     "DD"^dispensed drug IEN -> ^PSDRUG() DRUG^dispensed drug name^units per dose^inactive date
"RTN","PSBVT",74,0)
 ; build unique id list
"RTN","PSBVT",75,0)
 ; add addits
"RTN","PSBVT",76,0)
 I $D(^TMP("PSB",$J,"PSBORDA",800)) S PSBX2="" F  S PSBX2=$O(^TMP("PSB",$J,"PSBORDA",800,PSBX2)) Q:PSBX2=""!(PSBX2="ERROR")  D
"RTN","PSBVT",77,0)
 .S PSBUIDA(PSBX2)="ID^"_PSBX2 F J=1:1:^TMP("PSB",$J,"PSBORDA",800,PSBX2,0) S PSBUIDA(PSBX2)=PSBUIDA(PSBX2)_"^"_"ADD;"_$P(^TMP("PSB",$J,"PSBORDA",800,PSBX2,J),U,1)
"RTN","PSBVT",78,0)
 ; add solutions
"RTN","PSBVT",79,0)
 I $D(^TMP("PSB",$J,"PSBORDA",900)) S PSBX2="" F  S PSBX2=$O(^TMP("PSB",$J,"PSBORDA",900,PSBX2)) Q:PSBX2=""!(PSBX2="ERROR")  D
"RTN","PSBVT",80,0)
 .I '$D(PSBUIDA(PSBX2)) S PSBUIDA(PSBX2)="ID^"_PSBX2
"RTN","PSBVT",81,0)
 .F J=1:1:^TMP("PSB",$J,"PSBORDA",900,PSBX2,0) S PSBUIDA(PSBX2)=PSBUIDA(PSBX2)_"^"_"SOL;"_$P(^TMP("PSB",$J,"PSBORDA",900,PSBX2,J),U,1)
"RTN","PSBVT",82,0)
 ;     "ID"   ^   (piece 2,3,)... = type;IEN of each add/sol for this ID ex. "SOL;4"
"RTN","PSBVT",83,0)
 ; get addits
"RTN","PSBVT",84,0)
 I $G(^TMP("PSB",$J,"PSBORDA",850,0)) F PSBX2=1:1:^TMP("PSB",$J,"PSBORDA",850,0) D
"RTN","PSBVT",85,0)
 .M PSBADA(PSBX2)=^TMP("PSB",$J,"PSBORDA",850,PSBX2,0)  ; number od additives (exists only for IV)
"RTN","PSBVT",86,0)
 .S PSBADA(PSBX2)="ADD^"_PSBADA(PSBX2)
"RTN","PSBVT",87,0)
 .S PSBBAGS=$P(PSBADA(PSBX2),U,5) I PSBBAGS'="" S PSBBAG=" IN BAG "_$P(PSBBAGS,",",1) F I=2:1 S X=$P(PSBBAGS,",",I) Q:X=""  S PSBBAG=PSBBAG_" AND "_X
"RTN","PSBVT",88,0)
 .S:PSBBAGS'="" $P(PSBADA(PSBX2),U,5)=PSBBAG,$P(PSBADA(PSBX2),U,6)=PSBBAGS
"RTN","PSBVT",89,0)
 .D ZADD(2)          ;*only executes for TEST accounts
"RTN","PSBVT",90,0)
 ;
"RTN","PSBVT",91,0)
 ; "ADD"^add IEN PS(52.6)^additive name^strength ^bottle^high risk
"RTN","PSBVT",92,0)
 ;
"RTN","PSBVT",93,0)
 ; get soluts
"RTN","PSBVT",94,0)
 I $G(^TMP("PSB",$J,"PSBORDA",950,0)) D
"RTN","PSBVT",95,0)
 .F PSBX2=1:1:^TMP("PSB",$J,"PSBORDA",950,0) D
"RTN","PSBVT",96,0)
 ..M PSBSOLA(PSBX2)=^TMP("PSB",$J,"PSBORDA",950,PSBX2,0)
"RTN","PSBVT",97,0)
 ..S PSBSOLA(PSBX2)="SOL^"_PSBSOLA(PSBX2)    ;# of SOL
"RTN","PSBVT",98,0)
 ..D ZSOL(2)         ;*only executes for TEST accounts
"RTN","PSBVT",99,0)
 ; "SOL"^solution IEN PS(52.7)^solution name^volume^^high risk drg
"RTN","PSBVT",100,0)
 ;
"RTN","PSBVT",101,0)
 K ^TMP("PSB",$J,"PSBORDA"),PSBX1,PSBX2
"RTN","PSBVT",102,0)
 Q
"RTN","PSBVT",103,0)
 ;
"RTN","PSBVT",104,0)
PSJ1(PSBPAR1,PSBPAR2,PSBIGS2B,PSBEXIST) ; set the variables for an individual order
"RTN","PSBVT",105,0)
 S ^TMP("TK PSJ1",PSBPAR1,PSBPAR2)=""
"RTN","PSBVT",106,0)
 ;     PSBPAR1 = DFN
"RTN","PSBVT",107,0)
 ;     PSBPAR2 = ORDER NUMBER 
"RTN","PSBVT",108,0)
 ;     PSBPAR3 = IGNORE "SEND TO BCMA" CLINIC PARAMETER (Label Invalidation)
"RTN","PSBVT",109,0)
 S PSBSCRT="^TMP(""PSB"",$J,""PSBORDA"")"
"RTN","PSBVT",110,0)
 K @PSBSCRT
"RTN","PSBVT",111,0)
 N PSBX
"RTN","PSBVT",112,0)
 K ^TMP("PSJ1",$J) D EN^PSJBCMA1(PSBPAR1,PSBPAR2,1,$G(PSBIGS2B),.PSBEXIST)
"RTN","PSBVT",113,0)
 M @PSBSCRT=^TMP("PSJ1",$J) K ^TMP("PSJ1",$J)
"RTN","PSBVT",114,0)
 ;
"RTN","PSBVT",115,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",0))
"RTN","PSBVT",116,0)
 S PSBDFN=PSBPAR1
"RTN","PSBVT",117,0)
 S PSBON=+$P(PSBSCRT,U,3)        ; ord num w/o type
"RTN","PSBVT",118,0)
 S PSBONX=$P(PSBSCRT,U,3)        ; ord num w/  type "U" or "V"
"RTN","PSBVT",119,0)
 S PSBOTYP=$E(PSBONX,$L(PSBONX))
"RTN","PSBVT",120,0)
 S PSBPONX=$P(PSBSCRT,U,4)       ; prev ord num
"RTN","PSBVT",121,0)
 S PSBFON=$P(PSBSCRT,U,5)        ; foll ord num
"RTN","PSBVT",122,0)
 S PSBIVT=$P(PSBSCRT,U,6)        ; IV type
"RTN","PSBVT",123,0)
 S PSBISYR=$P(PSBSCRT,U,7)       ; intermit syrg
"RTN","PSBVT",124,0)
 S PSBCHEMT=$P(PSBSCRT,U,8)      ; chemo type
"RTN","PSBVT",125,0)
 S PSBCPRS=$P(PSBSCRT,U,9)       ; ord file entry (CPRS order #)
"RTN","PSBVT",126,0)
 S PSBCLORD=$P(PSBSCRT,U,11)     ; clinic order Name (is a CO)     *70
"RTN","PSBVT",127,0)
 ;  send clinic file #44 ien ptr                                   *70
"RTN","PSBVT",128,0)
 S PSBCLIEN=$S(PSBCLORD]"":$P(PSBSCRT,U,12),1:"")                 ;*70
"RTN","PSBVT",129,0)
 Q:PSBSCRT=-1
"RTN","PSBVT",130,0)
 ;
"RTN","PSBVT",131,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",1))
"RTN","PSBVT",132,0)
 S PSBMD=$P(PSBSCRT,U,1)         ; prov IEN -> ^VA(200)
"RTN","PSBVT",133,0)
 S PSBMDX=$P(PSBSCRT,U,2)        ; prov name
"RTN","PSBVT",134,0)
 S PSBMR=$P(PSBSCRT,U,3)         ; med rt IEN -> ^PS(51.2)
"RTN","PSBVT",135,0)
 I $G(PSBMR)'="" S PSBMR=$P(PSBSCRT,U,13)              ; med rt
"RTN","PSBVT",136,0)
 S PSBMRAB=$P(PSBSCRT,U,4)  ;med rt abbr
"RTN","PSBVT",137,0)
 S PSBMRIEN=+$P($G(^TMP("PSB",$J,"PSBORDA",1,0)),U,4)  ; med rt ien added in PSB*3*74   ;[*70-1489]
"RTN","PSBVT",138,0)
 S PSBNJECT=+$G(^TMP("PSB",$J,"PSBORDA",1,0))          ; Inj site
"RTN","PSBVT",139,0)
 S PSBIVPSH=+$P($G(^TMP("PSB",$J,"PSBORDA",1,0)),U,2)  ; IV PUSH
"RTN","PSBVT",140,0)
 S PSBSM=$P(PSBSCRT,U,5)         ; self med
"RTN","PSBVT",141,0)
 S PSBSMX=$P(PSBSCRT,U,6)        ; expnd to YES/NO
"RTN","PSBVT",142,0)
 S PSBHSM=$P(PSBSCRT,U,7)        ; hospital supplied self med
"RTN","PSBVT",143,0)
 S PSBHSMX=$P(PSBSCRT,U,8)       ; expnd to YES/NO
"RTN","PSBVT",144,0)
 S PSBNGF=$P(PSBSCRT,U,9)        ; not to be given flag
"RTN","PSBVT",145,0)
 S PSBOSTS=$P(PSBSCRT,U,10)      ; ord status
"RTN","PSBVT",146,0)
 S PSBOSTSX=$P(PSBSCRT,U,11)     ; ord status expans
"RTN","PSBVT",147,0)
 ;
"RTN","PSBVT",148,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",2))
"RTN","PSBVT",149,0)
 S PSBOIT=$P(PSBSCRT,U,1)        ; orderable item IEN -> ^ORD(101.43) ORDERABLE ITEM
"RTN","PSBVT",150,0)
 S PSBOITX=$P(PSBSCRT,U,2)       ; orderable item (expaned)_" "_ dosage form
"RTN","PSBVT",151,0)
 I PSBOITX="" S PSBOITX="ZZZZ NO ORDERABLE ITEM"
"RTN","PSBVT",152,0)
 S PSBDOSE=$P(PSBSCRT,U,3)       ; dosage ordered
"RTN","PSBVT",153,0)
 S PSBIFR=$P(PSBSCRT,U,4)        ; infusion rate
"RTN","PSBVT",154,0)
 S PSBSCH=$P(PSBSCRT,U,5)        ; sched
"RTN","PSBVT",155,0)
 S PSBDOSEF=$P(PSBSCRT,U,6)      ; dosage form
"RTN","PSBVT",156,0)
 ;
"RTN","PSBVT",157,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",3))
"RTN","PSBVT",158,0)
 S PSBOTXT=$P(PSBSCRT,U,1)       ; UD specl inst or IV oth print info
"RTN","PSBVT",159,0)
 ;
"RTN","PSBVT",160,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",4))
"RTN","PSBVT",161,0)
 S PSBSCHT=$P(PSBSCRT,U,1)       ; sched type conversion
"RTN","PSBVT",162,0)
 S PSBSCHTX=$P(PSBSCRT,U,2)      ; sched type expansion
"RTN","PSBVT",163,0)
 S PSBLDT=$P(PSBSCRT,U,3)        ; log-in date FM
"RTN","PSBVT",164,0)
 S PSBLDTX=$P(PSBSCRT,U,4)       ; exp MM/DD/YYYY HH:MM
"RTN","PSBVT",165,0)
 S PSBOST=$P(PSBSCRT,U,5)        ; start date FM
"RTN","PSBVT",166,0)
 S PSBOSTX=$P(PSBSCRT,U,6)       ; exp MM/DD/YYYY HH:MM
"RTN","PSBVT",167,0)
 S PSBOSP=$P(PSBSCRT,U,7)        ; stop date FM
"RTN","PSBVT",168,0)
 S PSBOSPX=$P(PSBSCRT,U,8)       ; exp MM/DD/YYYY HH:MM
"RTN","PSBVT",169,0)
 S PSBADST=$P(PSBSCRT,U,9)       ; admin times string in NNNN- format
"RTN","PSBVT",170,0)
 S PSBOSCHT=$P(PSBSCRT,U,10)     ; original schedule type
"RTN","PSBVT",171,0)
 S PSBFREQ=$P(PSBSCRT,U,11)      ; frequency
"RTN","PSBVT",172,0)
 ;define 4 new MRR type fields                                     *83
"RTN","PSBVT",173,0)
 S PSBDOA=$P(PSBSCRT,U,12)       ; duration of administration
"RTN","PSBVT",174,0)
 S PSBRMST=$P(PSBSCRT,U,13)      ; removal times str in NNNN- format
"RTN","PSBVT",175,0)
 S PSBMRRFL=$P(PSBSCRT,U,14)     ; MRR flag (prompt removal bcma)
"RTN","PSBVT",176,0)
 S PSBOPRSP=$P(PSBSCRT,U,15)     ; Order previous Stop date/time
"RTN","PSBVT",177,0)
 ;
"RTN","PSBVT",178,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",5))
"RTN","PSBVT",179,0)
 S PSBVN=$P(PSBSCRT,U,1)         ; verify nurse IEN -> ^VA(200)
"RTN","PSBVT",180,0)
 S PSBVNX=$P(PSBSCRT,U,2)        ; nurse name
"RTN","PSBVT",181,0)
 S PSBVNI=$P(PSBSCRT,U,3)        ; nurse initials
"RTN","PSBVT",182,0)
 S PSBVPH=$P(PSBSCRT,U,4)        ; verify pharm IEN -> ^VA(200)
"RTN","PSBVT",183,0)
 S PSBVPHX=$P(PSBSCRT,U,5)       ; pharm name
"RTN","PSBVT",184,0)
 S PSBVPHI=$P(PSBSCRT,U,6)       ; pharm initials
"RTN","PSBVT",185,0)
 ;
"RTN","PSBVT",186,0)
 S PSBSCRT=$G(^TMP("PSB",$J,"PSBORDA",6))
"RTN","PSBVT",187,0)
 S PSBRMRK=$G(PSBSCRT)
"RTN","PSBVT",188,0)
 ;If DayOFWeek set frequen to NULL
"RTN","PSBVT",189,0)
 I $$PSBDCHK1^PSBVT1(PSBSCH) S PSBFREQ=""
"RTN","PSBVT",190,0)
 ; get dispensed drug
"RTN","PSBVT",191,0)
 I $G(^TMP("PSB",$J,"PSBORDA",700,0)) F PSBX=1:1:^TMP("PSB",$J,"PSBORDA",700,0) M PSBDDA(PSBX)=^TMP("PSB",$J,"PSBORDA",700,PSBX,0) S PSBDDA(PSBX)="DD^"_PSBDDA(PSBX) ; # of DDrug
"RTN","PSBVT",192,0)
 ;     "DD"^dispensed drug IEN -> ^PSDRUG() DRUG^dispensed drug name^units per dose^inactive date
"RTN","PSBVT",193,0)
 ; build unique id list
"RTN","PSBVT",194,0)
 ; add addits
"RTN","PSBVT",195,0)
 I $D(^TMP("PSB",$J,"PSBORDA",800)) S PSBX2="" F  S PSBX2=$O(^TMP("PSB",$J,"PSBORDA",800,PSBX2)) Q:PSBX2=""!(PSBX2="ERROR")  D
"RTN","PSBVT",196,0)
 .S PSBUIDA(PSBX2)="ID^"_PSBX2 F J=1:1:^TMP("PSB",$J,"PSBORDA",800,PSBX2,0) S PSBUIDA(PSBX2)=PSBUIDA(PSBX2)_"^"_"ADD;"_$P(^TMP("PSB",$J,"PSBORDA",800,PSBX2,J),U,1)
"RTN","PSBVT",197,0)
 ; add soluts
"RTN","PSBVT",198,0)
 I $D(^TMP("PSB",$J,"PSBORDA",900)) S PSBX2="" F  S PSBX2=$O(^TMP("PSB",$J,"PSBORDA",900,PSBX2)) Q:PSBX2=""!(PSBX2="ERROR")  D
"RTN","PSBVT",199,0)
 .I '$D(PSBUIDA(PSBX2)) S PSBUIDA(PSBX2)="ID^"_PSBX2
"RTN","PSBVT",200,0)
 .F J=1:1:^TMP("PSB",$J,"PSBORDA",900,PSBX2,0) S PSBUIDA(PSBX2)=PSBUIDA(PSBX2)_"^"_"SOL;"_$P(^TMP("PSB",$J,"PSBORDA",900,PSBX2,J),U,1)
"RTN","PSBVT",201,0)
 ;     "ID"   ^   (piece 2,3),... = type;IEN of each add/sol for this ID ex. "SOL;4"
"RTN","PSBVT",202,0)
 ; get addits
"RTN","PSBVT",203,0)
 I $G(^TMP("PSB",$J,"PSBORDA",850,0)) F PSBX=1:1:^TMP("PSB",$J,"PSBORDA",850,0) D
"RTN","PSBVT",204,0)
 .M PSBADA(PSBX)=^TMP("PSB",$J,"PSBORDA",850,PSBX,0)  ; num of addits
"RTN","PSBVT",205,0)
 .S PSBADA(PSBX)="ADD^"_PSBADA(PSBX)
"RTN","PSBVT",206,0)
 .S PSBBAGS=$P(PSBADA(PSBX),U,5) I PSBBAGS'="" S PSBBAG=" IN BAG "_$P(PSBBAGS,",",1) D
"RTN","PSBVT",207,0)
 ..F I=2:1 S X=$P(PSBBAGS,",",I) Q:X=""  S PSBBAG=PSBBAG_" AND "_X
"RTN","PSBVT",208,0)
 .S:PSBBAGS'="" $P(PSBADA(PSBX),U,5)=PSBBAG
"RTN","PSBVT",209,0)
 .D ZADD(1)          ;*only executes for TEST accounts
"RTN","PSBVT",210,0)
 ; "ADD"^add IEN -> ^PS(52.6)^additive name^strength ^bottle^high risk
"RTN","PSBVT",211,0)
 ;
"RTN","PSBVT",212,0)
 ; get soluts
"RTN","PSBVT",213,0)
 I $G(^TMP("PSB",$J,"PSBORDA",950,0)) D
"RTN","PSBVT",214,0)
 .F PSBX=1:1:^TMP("PSB",$J,"PSBORDA",950,0) D
"RTN","PSBVT",215,0)
 ..M PSBSOLA(PSBX)=^TMP("PSB",$J,"PSBORDA",950,PSBX,0)
"RTN","PSBVT",216,0)
 ..S PSBSOLA(PSBX)="SOL^"_PSBSOLA(PSBX)  ; # of SOLs
"RTN","PSBVT",217,0)
 ..D ZSOL(1)         ;*only executes for TEST accounts
"RTN","PSBVT",218,0)
 ; "SOL"^solution IEN -> ^PS(52.7) IV SOLUTIONS^solution name^volume
"RTN","PSBVT",219,0)
 ;
"RTN","PSBVT",220,0)
 ; get label
"RTN","PSBVT",221,0)
 I $D(^TMP("PSB",$J,"PSBORDA",1000)) M PSBLBLA=^TMP("PSB",$J,"PSBORDA",1000)
"RTN","PSBVT",222,0)
 K ^TMP("PSB",$J,"PSBORDA")
"RTN","PSBVT",223,0)
 Q
"RTN","PSBVT",224,0)
 ;
"RTN","PSBVT",225,0)
LACTION ; get last action info
"RTN","PSBVT",226,0)
 S (PSBLADT,PSBLAIEN,PSBLASTS)=""
"RTN","PSBVT",227,0)
 I '$D(^PSB(53.79,"AORDX",PSBDFN,PSBONX)) Q
"RTN","PSBVT",228,0)
 S PSBLADT=$O(^PSB(53.79,"AORDX",PSBDFN,PSBONX,""),-1)
"RTN","PSBVT",229,0)
 S PSBLAIEN=$O(^PSB(53.79,"AORDX",PSBDFN,PSBONX,PSBLADT,""))
"RTN","PSBVT",230,0)
 S PSBLASTS=$P(^PSB(53.79,PSBLAIEN,0),U,9)
"RTN","PSBVT",231,0)
 Q
"RTN","PSBVT",232,0)
 ;
"RTN","PSBVT",233,0)
CLEAN ;
"RTN","PSBVT",234,0)
 K PSBONX,PSBPONX,PSBFON,PSBOTYP,PSBIVT,PSBISYR,PSBCHEMT,PSBMD,PSBMDX,PSBMR,PSBMRAB,PSBSM,PSBSMX,PSBHSM,PSBHSMX
"RTN","PSBVT",235,0)
 K PSBDFN,PSBNGF,PSBOSTS,PSBOSTSX,PSBOIT,PSBOITX,PSBDOSE,PSBIFR,PSBSCH,PSBDOSEF,PSBOTXT,PSBSCHT,PSBSCHTX
"RTN","PSBVT",236,0)
 K PSBLDT,PSBLDTX,PSBOST,PSBOSTX,PSBOSP,PSBOSPX,PSBADST,PSBOSCHT,PSBFREQ,PSBVN,PSBVNX,PSBVNI
"RTN","PSBVT",237,0)
 K PSBVPH,PSBVPHX,PSBVPHI,PSBDDA,PSBADA,PSBSOLA,PSBUIDA,PSBCPRS,PSBON,PSBRMRK,PSBNJECT,PSBIVPSH
"RTN","PSBVT",238,0)
 K PSBLADT,PSBLAIEN,PSBLASTS,PSBBAG,PSBBAGS,PSBLBLA,PSBFOR,PSBSCRT
"RTN","PSBVT",239,0)
 K PSBCLIEN,PSBCLORD   ;*70
"RTN","PSBVT",240,0)
 K PSBMRIEN   ;*68
"RTN","PSBVT",241,0)
 K PSBDOA,PSBRMST,PSBMRRFL,PSBOPRSP   ;*83
"RTN","PSBVT",242,0)
 Q
"RTN","PSBVT",243,0)
 ;
"RTN","PSBVT",244,0)
ZADD(XX) ;appends pointer to Drug file #50 for additives - Results(9)
"RTN","PSBVT",245,0)
 ;*test mode only, drug ien stuffed in
"RTN","PSBVT",246,0)
 Q:$$PROD^XUPROD    ;quit if a production account
"RTN","PSBVT",247,0)
 S:XX=1 $P(PSBADA(PSBX),U,9)=$P($G(^PS(52.6,$P(PSBADA(PSBX),U,2),0)),U,2)
"RTN","PSBVT",248,0)
 S:XX=2 $P(PSBADA(PSBX2),U,9)=$P($G(^PS(52.6,$P(PSBADA(PSBX2),U,2),0)),U,2)
"RTN","PSBVT",249,0)
 Q
"RTN","PSBVT",250,0)
 ;
"RTN","PSBVT",251,0)
ZSOL(XX) ;appends pointer to Drug file #50 for solutions - Results(9)
"RTN","PSBVT",252,0)
 ;*test mode only, drug ien stuffed in
"RTN","PSBVT",253,0)
 Q:$$PROD^XUPROD    ;quit if a production account
"RTN","PSBVT",254,0)
 S:XX=1 $P(PSBSOLA(PSBX),U,9)=$P($G(^PS(52.7,$P(PSBSOLA(PSBX),U,2),0)),U,2)
"RTN","PSBVT",255,0)
 S:XX=2 $P(PSBSOLA(PSBX2),U,9)=$P($G(^PS(52.7,$P(PSBSOLA(PSBX2),U,2),0)),U,2)
"RTN","PSBVT",256,0)
 Q
"UP",53.79,53.795,-1)
53.79^.5
"UP",53.79,53.795,0)
53.795
"VER")
8.0^22.0
"^DD",53.78,53.78,.05,0)
EVENT^S^1:WRONG MED;2:EARLY/LATE DOSE;3:LATE PRN EFFECT;4:EARLY/LATE REMOVE;^0;5^Q
"^DD",53.78,53.78,.05,3)
Enter a valid code describing this variance event.
"^DD",53.78,53.78,.05,21,0)
^^1^1^3150805^^^
"^DD",53.78,53.78,.05,21,1,0)
Set of codes describing the variance.
"^DD",53.78,53.78,.05,"DT")
3150805
"^DD",53.79,53.79,.06,0)
ACTION DATE/TIME^RD^^0;6^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",53.79,53.79,.06,1,0)
^.1
"^DD",53.79,53.79,.06,1,1,0)
53.79^AADT^MUMPS
"^DD",53.79,53.79,.06,1,1,1)
S ^PSB(53.79,"AADT",$P(^PSB(53.79,DA,0),U),X,DA)=""
"^DD",53.79,53.79,.06,1,1,2)
K ^PSB(53.79,"AADT",$P(^PSB(53.79,DA,0),U),X,DA)
"^DD",53.79,53.79,.06,1,1,"%D",0)
^.101^3^3^3150903^^^^
"^DD",53.79,53.79,.06,1,1,"%D",1,0)
Creates a cross reference by patient for administration times
"^DD",53.79,53.79,.06,1,1,"%D",2,0)
 
"^DD",53.79,53.79,.06,1,1,"%D",3,0)
  ^PSB(53.79,"AADT",dfn,administration d/t,DA)=""
"^DD",53.79,53.79,.06,1,1,"DT")
3150903
"^DD",53.79,53.79,.06,1,2,0)
53.79^AOIP1^MUMPS^^^^^^G
"^DD",53.79,53.79,.06,1,2,1)
I $P(^PSB(53.79,DA,0),U,8) S ^PSB(53.79,"AOIP",$P(^PSB(53.79,DA,0),U),$P(^PSB(53.79,DA,0),U,8),X,DA)=""
"^DD",53.79,53.79,.06,1,2,2)
I $P(^PSB(53.79,DA,0),U,8) K ^PSB(53.79,"AOIP",$P(^PSB(53.79,DA,0),U),$P(^PSB(53.79,DA,0),U,8),X,DA)
"^DD",53.79,53.79,.06,1,2,"%D",0)
^.101^6^6^3020410^^
"^DD",53.79,53.79,.06,1,2,"%D",1,0)
Creates a cross reference by patient for orderable items and
"^DD",53.79,53.79,.06,1,2,"%D",2,0)
administration date/time
"^DD",53.79,53.79,.06,1,2,"%D",3,0)
 
"^DD",53.79,53.79,.06,1,2,"%D",4,0)
  ^PSB(53.79,"AOIP",dfn,orderable item,administration d/t,DA)=""
"^DD",53.79,53.79,.06,1,2,"%D",5,0)
 
"^DD",53.79,53.79,.06,1,2,"%D",6,0)
Same as field ADMINISTRATION MEDICATION (#.08)
"^DD",53.79,53.79,.06,1,2,"DT")
2990427
"^DD",53.79,53.79,.06,1,4,0)
53.79^AU06^MUMPS
"^DD",53.79,53.79,.06,1,4,1)
D AUDIT^PSBUTL(DA,53.79,.06,X,"S")
"^DD",53.79,53.79,.06,1,4,2)
D AUDIT^PSBUTL(DA,53.79,.06,X,"K")
"^DD",53.79,53.79,.06,1,4,"%D",0)
^.101^1^1^3020412^^^^
"^DD",53.79,53.79,.06,1,4,"%D",1,0)
Creates an entry in this items audit log whenever changed or deleted.
"^DD",53.79,53.79,.06,1,4,"DT")
2990409
"^DD",53.79,53.79,.06,1,8,0)
^^TRIGGER^53.79^.14
"^DD",53.79,53.79,.06,1,8,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$VALGIV^PSBUTL I X S X=DIV S Y(1)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y X ^DD(53.79,.06,1,8,1.1) X ^DD(53.79,.06,1,8,1.4)
"^DD",53.79,53.79,.06,1,8,1.1)
S X=DIV X ^DD(53.79,.06,1,8,49.2) S X1=Y(1) S Y=$E(X1_"000",9,10)-$E(X_"000",9,10)*60+$E(X1_"00000",11,12)-$E(X_"00000",11,12),X2=X,X=$P(X,".",1)'=$P(X1,".",1) D ^%DTC:X S X=X*1440+Y
"^DD",53.79,53.79,.06,1,8,1.4)
S DIH=$G(^PSB(53.79,DIV(0),.1)),DIV=X S $P(^(.1),U,4)=DIV,DIH=53.79,DIG=.14 D ^DICR
"^DD",53.79,53.79,.06,1,8,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$VALGIV^PSBUTL I X S X=DIV S Y(1)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(53.79,.06,1,8,2.4)
"^DD",53.79,53.79,.06,1,8,2.4)
S DIH=$G(^PSB(53.79,DIV(0),.1)),DIV=X S $P(^(.1),U,4)=DIV,DIH=53.79,DIG=.14 D ^DICR
"^DD",53.79,53.79,.06,1,8,49.2)
S Y(2)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=DIV,Y(1)=$G(X) S X=$P(Y(2),U,3)
"^DD",53.79,53.79,.06,1,8,"%D",0)
^^3^3^3150701^
"^DD",53.79,53.79,.06,1,8,"%D",1,0)
Create field ORDER ADMINISTRATION VARIANCE #.14 value in the difference 
"^DD",53.79,53.79,.06,1,8,"%D",2,0)
of minutes from the ACTION DATE/TIME #.06 and the SCHEDULED 
"^DD",53.79,53.79,.06,1,8,"%D",3,0)
ADMINISTRATION TIME #.13.
"^DD",53.79,53.79,.06,1,8,"CREATE CONDITION")
I $$VALGIV^PSBUTL
"^DD",53.79,53.79,.06,1,8,"CREATE VALUE")
MINUTES(#.06,#.13)
"^DD",53.79,53.79,.06,1,8,"DELETE CONDITION")
I $$VALGIV^PSBUTL
"^DD",53.79,53.79,.06,1,8,"DELETE VALUE")
@
"^DD",53.79,53.79,.06,1,8,"DT")
3150701
"^DD",53.79,53.79,.06,1,8,"FIELD")
ORDER ADMINISTRATION VARIANCE
"^DD",53.79,53.79,.06,1,9,0)
^^TRIGGER^53.79^.14
"^DD",53.79,53.79,.06,1,9,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$VALREM^PSBUTL I X S X=DIV S Y(1)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y X ^DD(53.79,.06,1,9,1.1) X ^DD(53.79,.06,1,9,1.4)
"^DD",53.79,53.79,.06,1,9,1.1)
S X=DIV X ^DD(53.79,.06,1,9,49.2) S X1=Y(1) S Y=$E(X1_"000",9,10)-$E(X_"000",9,10)*60+$E(X1_"00000",11,12)-$E(X_"00000",11,12),X2=X,X=$P(X,".",1)'=$P(X1,".",1) D ^%DTC:X S X=X*1440+Y
"^DD",53.79,53.79,.06,1,9,1.4)
S DIH=$G(^PSB(53.79,DIV(0),.1)),DIV=X S $P(^(.1),U,4)=DIV,DIH=53.79,DIG=.14 D ^DICR
"^DD",53.79,53.79,.06,1,9,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$VALREM^PSBUTL I X S X=DIV S Y(1)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(53.79,.06,1,9,2.4)
"^DD",53.79,53.79,.06,1,9,2.4)
S DIH=$G(^PSB(53.79,DIV(0),.1)),DIV=X S $P(^(.1),U,4)=DIV,DIH=53.79,DIG=.14 D ^DICR
"^DD",53.79,53.79,.06,1,9,49.2)
S Y(2)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=DIV,Y(1)=$G(X) S X=$P(Y(2),U,7)
"^DD",53.79,53.79,.06,1,9,"%D",0)
^^3^3^3150701^
"^DD",53.79,53.79,.06,1,9,"%D",1,0)
Create field ORDER ADMINISTRATION VARIANCE #.14 value in the difference 
"^DD",53.79,53.79,.06,1,9,"%D",2,0)
of minutes from the ACTION DATE/TIME #.06 and the SCHEDULED 
"^DD",53.79,53.79,.06,1,9,"%D",3,0)
REMOVAL TIME #.17.
"^DD",53.79,53.79,.06,1,9,"CREATE CONDITION")
I $$VALREM^PSBUTL
"^DD",53.79,53.79,.06,1,9,"CREATE VALUE")
MINUTES(#.06,#.17)
"^DD",53.79,53.79,.06,1,9,"DELETE CONDITION")
I $$VALREM^PSBUTL
"^DD",53.79,53.79,.06,1,9,"DELETE VALUE")
@
"^DD",53.79,53.79,.06,1,9,"DT")
3150701
"^DD",53.79,53.79,.06,1,9,"FIELD")
ORDER ADMINISTRATION VARIANCE
"^DD",53.79,53.79,.06,3)
Enter the date/time the medication was administered.
"^DD",53.79,53.79,.06,21,0)
^.001^1^1^3020711^^^^
"^DD",53.79,53.79,.06,21,1,0)
Fileman Date/Time containing the actual time the med was administered.
"^DD",53.79,53.79,.06,"DT")
3151019
"^DD",53.79,53.79,.13,0)
SCHEDULED ADMINISTRATION TIME^D^^.1;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",53.79,53.79,.13,1,0)
^.1
"^DD",53.79,53.79,.13,1,1,0)
53.79^AORD2^MUMPS
"^DD",53.79,53.79,.13,1,1,1)
I $P($G(^PSB(53.79,DA,.1)),U,1)]"" S ^PSB(53.79,"AORD",$P(^PSB(53.79,DA,0),U),$P(^PSB(53.79,DA,.1),U),X,DA)=""
"^DD",53.79,53.79,.13,1,1,2)
I $P($G(^PSB(53.79,DA,.1)),U,1)]"" K ^PSB(53.79,"AORD",$P(^PSB(53.79,DA,0),U),$P(^PSB(53.79,DA,.1),U),X,DA)
"^DD",53.79,53.79,.13,1,1,"%D",0)
^.101^4^4^3150624^^
"^DD",53.79,53.79,.13,1,1,"%D",1,0)
Creates an index by patient for Order reference number and administration
"^DD",53.79,53.79,.13,1,1,"%D",2,0)
time.
"^DD",53.79,53.79,.13,1,1,"%D",3,0)
 
"^DD",53.79,53.79,.13,1,1,"%D",4,0)
  ^PSB(53.79,"AORD",dfn,order reference,administration date/time,DA)=""
"^DD",53.79,53.79,.13,1,1,"DT")
2990427
"^DD",53.79,53.79,.13,1,8,0)
^^TRIGGER^53.79^.14
"^DD",53.79,53.79,.13,1,8,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$VALGIV^PSBUTL I X S X=DIV S Y(1)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y X ^DD(53.79,.13,1,8,1.1) X ^DD(53.79,.13,1,8,1.4)
"^DD",53.79,53.79,.13,1,8,1.1)
S X=DIV X ^DD(53.79,.13,1,8,49.2) S X1=Y(2) S Y=$E(X1_"000",9,10)-$E(X_"000",9,10)*60+$E(X1_"00000",11,12)-$E(X_"00000",11,12),X2=X,X=$P(X,".",1)'=$P(X1,".",1) D ^%DTC:X S X=X*1440+Y
"^DD",53.79,53.79,.13,1,8,1.4)
S DIH=$G(^PSB(53.79,DIV(0),.1)),DIV=X S $P(^(.1),U,4)=DIV,DIH=53.79,DIG=.14 D ^DICR
"^DD",53.79,53.79,.13,1,8,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$VALGIV^PSBUTL I X S X=DIV S Y(1)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(53.79,.13,1,8,2.4)
"^DD",53.79,53.79,.13,1,8,2.4)
S DIH=$G(^PSB(53.79,DIV(0),.1)),DIV=X S $P(^(.1),U,4)=DIV,DIH=53.79,DIG=.14 D ^DICR
"^DD",53.79,53.79,.13,1,8,49.2)
S Y(1)=$S($D(^PSB(53.79,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),Y(2)=$G(X) S X=DIV
"^DD",53.79,53.79,.13,1,8,"%D",0)
^^3^3^3150701^
"^DD",53.79,53.79,.13,1,8,"%D",1,0)
Create field ORDER ADMINISTRATION VARIANCE #.14 value in the difference 
"^DD",53.79,53.79,.13,1,8,"%D",2,0)
of minutes from the ACTION DATE/TIME #.06 and the SCHEDULED 
"^DD",53.79,53.79,.13,1,8,"%D",3,0)
ADMINISTRATION TIME #.13.
"^DD",53.79,53.79,.13,1,8,"CREATE CONDITION")
I $$VALGIV^PSBUTL
"^DD",53.79,53.79,.13,1,8,"CREATE VALUE")
MINUTES(#.06,#.13)
"^DD",53.79,53.79,.13,1,8,"DELETE CONDITION")
I $$VALGIV^PSBUTL
"^DD",53.79,53.79,.13,1,8,"DELETE VALUE")
@
"^DD",53.79,53.79,.13,1,8,"DT")
3150701
"^DD",53.79,53.79,.13,1,8,"FIELD")
ORDER ADMINISTRATION VARIANCE
"^DD",53.79,53.79,.13,3)
Enter the Scheduled administration time being administered.
"^DD",53.79,53.79,.13,21,0)
^^2^2^2990805^
"^DD",53.79,53.79,.13,21,1,0)
If a continuous order this field will contain the actual administration
"^DD",53.79,53.79,.13,21,2,0)
date and time the medication was ordered for.
"^DD",53.79,53.79,.13,"DT")
3150805
"^DD",53.79,53.79,.17,0)
SCHEDULED REMOVAL TIME^D^^.1;7^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",53.79,53.79,.17,1,0)
^.1
"^DD",53.79,53.79,.17,1,9,0)
^^TRIGGER^53.79^.14
"^DD",53.79,53.79,.17,1,9,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$VALREM^PSBUTL I X S X=DIV S Y(1)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y X ^DD(53.79,.17,1,9,1.1) X ^DD(53.79,.17,1,9,1.4)
"^DD",53.79,53.79,.17,1,9,1.1)
S X=DIV X ^DD(53.79,.17,1,9,49.2) S X1=Y(2) S Y=$E(X1_"000",9,10)-$E(X_"000",9,10)*60+$E(X1_"00000",11,12)-$E(X_"00000",11,12),X2=X,X=$P(X,".",1)'=$P(X1,".",1) D ^%DTC:X S X=X*1440+Y
"^DD",53.79,53.79,.17,1,9,1.4)
S DIH=$G(^PSB(53.79,DIV(0),.1)),DIV=X S $P(^(.1),U,4)=DIV,DIH=53.79,DIG=.14 D ^DICR
"^DD",53.79,53.79,.17,1,9,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$VALREM^PSBUTL I X S X=DIV S Y(1)=$S($D(^PSB(53.79,D0,.1)):^(.1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(53.79,.17,1,9,2.4)
"^DD",53.79,53.79,.17,1,9,2.4)
S DIH=$G(^PSB(53.79,DIV(0),.1)),DIV=X S $P(^(.1),U,4)=DIV,DIH=53.79,DIG=.14 D ^DICR
"^DD",53.79,53.79,.17,1,9,49.2)
S Y(1)=$S($D(^PSB(53.79,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),Y(2)=$G(X) S X=DIV
"^DD",53.79,53.79,.17,1,9,"%D",0)
^^3^3^3150701^
"^DD",53.79,53.79,.17,1,9,"%D",1,0)
Create field ORDER ADMINISTRATION VARIANCE #.14 value in the difference 
"^DD",53.79,53.79,.17,1,9,"%D",2,0)
of minutes from the ACTION DATE/TIME #.06 and the SCHEDULED 
"^DD",53.79,53.79,.17,1,9,"%D",3,0)
REMOVAL TIME #.17.
"^DD",53.79,53.79,.17,1,9,"CREATE CONDITION")
I $$VALREM^PSBUTL
"^DD",53.79,53.79,.17,1,9,"CREATE VALUE")
MINUTES(#.06,#.17)
"^DD",53.79,53.79,.17,1,9,"DELETE CONDITION")
I $$VALREM^PSBUTL
"^DD",53.79,53.79,.17,1,9,"DELETE VALUE")
@
"^DD",53.79,53.79,.17,1,9,"DT")
3150701
"^DD",53.79,53.79,.17,1,9,"FIELD")
ORDER ADMINISTRATION VARIANCE
"^DD",53.79,53.79,.17,3)
The time this Medication is scheduled to be removed after it was given.
"^DD",53.79,53.79,.17,21,0)
^^4^4^3150827^
"^DD",53.79,53.79,.17,21,1,0)
Medications Requiring Removal (MRR) have times that they are to be removed
"^DD",53.79,53.79,.17,21,2,0)
from the patient after they were previously Given.  These medications are
"^DD",53.79,53.79,.17,21,3,0)
only those that point to an Orderable Item file entry that has the Prompt 
"^DD",53.79,53.79,.17,21,4,0)
For Removal In BCMA field set to value 1-3.
"^DD",53.79,53.79,.17,23,0)
^^3^3^3150827^
"^DD",53.79,53.79,.17,23,1,0)
Scheduled date and time to remove a Medications Requiring Removal (MRR)
"^DD",53.79,53.79,.17,23,2,0)
that is associated with a PHARMACY ORDERABLE ITEM (#50.7) file item when
"^DD",53.79,53.79,.17,23,3,0)
PROMPT FOR REMOVAL IN BCMA (#12) field is set to a value of 1-3.  
"^DD",53.79,53.79,.17,"DT")
3150827
"^DD",53.79,53.79,.18,0)
DERMAL SITE^F^^.1;8^K:$L(X)>30!($L(X)<1) X
"^DD",53.79,53.79,.18,3)
Answer must be 1-30 characters in length.
"^DD",53.79,53.79,.18,21,0)
^^1^1^3151029^
"^DD",53.79,53.79,.18,21,1,0)
Free text body location where a Dermal medication was applied.
"^DD",53.79,53.79,.18,"DT")
3151029
"^DD",53.79,53.795,.06,0)
PROMPT FOR REMOVAL IN BCMA^S^0:No Removal Required Prior to Next Administration;1:Removal at Next Administration;3:Removal Period Required Prior to Next Administration;^0;6^Q
"^DD",53.79,53.795,.06,3)
Enter a valid Prompt for Removal code for this Dispense Drug.
"^DD",53.79,53.795,.06,21,0)
^^3^3^3150827^
"^DD",53.79,53.795,.06,21,1,0)
This is the value of the PROMPT FOR REMOVAL IN BCMA (#12) field for this 
"^DD",53.79,53.795,.06,21,2,0)
dispense drug that was saved in the PHARMACY PATIENT (#55) file when the
"^DD",53.79,53.795,.06,21,3,0)
Inpatient order was Finished in Inpatient Pharmacy.
"^DD",53.79,53.795,.06,"DT")
3160412
"BLD",9243,6)
^75
**END**
**END**

