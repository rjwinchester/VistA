Released PSB*3*92 SEQ #80
Extracted from mail message
**KIDS**:PSB*3.0*92^

**INSTALL NAME**
PSB*3.0*92
"BLD",10410,0)
PSB*3.0*92^BAR CODE MED ADMIN^0^3170216^y
"BLD",10410,1,0)
^^16^16^3170216^
"BLD",10410,1,1,0)
This patch will resolve the following issues:
"BLD",10410,1,2,0)
 
"BLD",10410,1,3,0)
1. The Bar Code Medication Administration (BCMA) Order Mode indicator
"BLD",10410,1,4,0)
   light is not displaying when the only active orders have a pharmacy
"BLD",10410,1,5,0)
   status of renewed, on call, or provider hold.
"BLD",10410,1,6,0)
 
"BLD",10410,1,7,0)
2. The BCMA Active Order Indicator light is not displaying for the Unit 
"BLD",10410,1,8,0)
   Dose tab when the only active orders have a Pharmacy Status of Renewed
"BLD",10410,1,9,0)
   or Provider Hold.
"BLD",10410,1,10,0)
 
"BLD",10410,1,11,0)
3. Medications cannot be administered in BCMA after Nurse's initials 
"BLD",10410,1,12,0)
   deleted.
"BLD",10410,1,13,0)
 
"BLD",10410,1,14,0)
4. Medications Orders requiring removal with a schedule type of "One-Time"
"BLD",10410,1,15,0)
   and Frequency greater than zero do not display the correct removal
"BLD",10410,1,16,0)
   time in the "Next Dose Action" field on the BCMA VDL.
"BLD",10410,4,0)
^9.64PA^^
"BLD",10410,6.3)
9
"BLD",10410,"KRN",0)
^9.67PA^779.2^20
"BLD",10410,"KRN",.4,0)
.4
"BLD",10410,"KRN",.401,0)
.401
"BLD",10410,"KRN",.402,0)
.402
"BLD",10410,"KRN",.403,0)
.403
"BLD",10410,"KRN",.5,0)
.5
"BLD",10410,"KRN",.84,0)
.84
"BLD",10410,"KRN",3.6,0)
3.6
"BLD",10410,"KRN",3.8,0)
3.8
"BLD",10410,"KRN",9.2,0)
9.2
"BLD",10410,"KRN",9.8,0)
9.8
"BLD",10410,"KRN",9.8,"NM",0)
^9.68A^4^2
"BLD",10410,"KRN",9.8,"NM",1,0)
PSBVDLTB^^0^B35995802
"BLD",10410,"KRN",9.8,"NM",4,0)
PSBVDLU1^^0^B203085262
"BLD",10410,"KRN",9.8,"NM","B","PSBVDLTB",1)

"BLD",10410,"KRN",9.8,"NM","B","PSBVDLU1",4)

"BLD",10410,"KRN",19,0)
19
"BLD",10410,"KRN",19.1,0)
19.1
"BLD",10410,"KRN",101,0)
101
"BLD",10410,"KRN",409.61,0)
409.61
"BLD",10410,"KRN",771,0)
771
"BLD",10410,"KRN",779.2,0)
779.2
"BLD",10410,"KRN",870,0)
870
"BLD",10410,"KRN",8989.51,0)
8989.51
"BLD",10410,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",10410,"KRN",8989.52,0)
8989.52
"BLD",10410,"KRN",8994,0)
8994
"BLD",10410,"KRN","B",.4,.4)

"BLD",10410,"KRN","B",.401,.401)

"BLD",10410,"KRN","B",.402,.402)

"BLD",10410,"KRN","B",.403,.403)

"BLD",10410,"KRN","B",.5,.5)

"BLD",10410,"KRN","B",.84,.84)

"BLD",10410,"KRN","B",3.6,3.6)

"BLD",10410,"KRN","B",3.8,3.8)

"BLD",10410,"KRN","B",9.2,9.2)

"BLD",10410,"KRN","B",9.8,9.8)

"BLD",10410,"KRN","B",19,19)

"BLD",10410,"KRN","B",19.1,19.1)

"BLD",10410,"KRN","B",101,101)

"BLD",10410,"KRN","B",409.61,409.61)

"BLD",10410,"KRN","B",771,771)

"BLD",10410,"KRN","B",779.2,779.2)

"BLD",10410,"KRN","B",870,870)

"BLD",10410,"KRN","B",8989.51,8989.51)

"BLD",10410,"KRN","B",8989.52,8989.52)

"BLD",10410,"KRN","B",8994,8994)

"BLD",10410,"QUES",0)
^9.62^^
"BLD",10410,"REQB",0)
^9.611^1^1
"BLD",10410,"REQB",1,0)
PSB*3.0*83^2
"BLD",10410,"REQB","B","PSB*3.0*83",1)

"MBREQ")
0
"PKG",550,-1)
1^1
"PKG",550,0)
BAR CODE MED ADMIN^PSB^BAR CODE MEDICATION ADMINISTRATION
"PKG",550,20,0)
^9.402P^^
"PKG",550,22,0)
^9.49I^1^1
"PKG",550,22,1,0)
3.0^3040224^3040311^66481
"PKG",550,22,1,"PAH",1,0)
92^3170216
"PKG",550,22,1,"PAH",1,1,0)
^^16^16^3170216
"PKG",550,22,1,"PAH",1,1,1,0)
This patch will resolve the following issues:
"PKG",550,22,1,"PAH",1,1,2,0)
 
"PKG",550,22,1,"PAH",1,1,3,0)
1. The Bar Code Medication Administration (BCMA) Order Mode indicator
"PKG",550,22,1,"PAH",1,1,4,0)
   light is not displaying when the only active orders have a pharmacy
"PKG",550,22,1,"PAH",1,1,5,0)
   status of renewed, on call, or provider hold.
"PKG",550,22,1,"PAH",1,1,6,0)
 
"PKG",550,22,1,"PAH",1,1,7,0)
2. The BCMA Active Order Indicator light is not displaying for the Unit 
"PKG",550,22,1,"PAH",1,1,8,0)
   Dose tab when the only active orders have a Pharmacy Status of Renewed
"PKG",550,22,1,"PAH",1,1,9,0)
   or Provider Hold.
"PKG",550,22,1,"PAH",1,1,10,0)
 
"PKG",550,22,1,"PAH",1,1,11,0)
3. Medications cannot be administered in BCMA after Nurse's initials 
"PKG",550,22,1,"PAH",1,1,12,0)
   deleted.
"PKG",550,22,1,"PAH",1,1,13,0)
 
"PKG",550,22,1,"PAH",1,1,14,0)
4. Medications Orders requiring removal with a schedule type of "One-Time"
"PKG",550,22,1,"PAH",1,1,15,0)
   and Frequency greater than zero do not display the correct removal
"PKG",550,22,1,"PAH",1,1,16,0)
   time in the "Next Dose Action" field on the BCMA VDL.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","PSBVDLTB")
0^1^B35995802^B35153765
"RTN","PSBVDLTB",1,0)
PSBVDLTB ;BIRMINGHAM/EFC-BCMA VIRTUAL DUE LIST FUNCTIONS (CONT) ;03/06/16 3:06pm
"RTN","PSBVDLTB",2,0)
 ;;3.0;BAR CODE MED ADMIN;**3,4,16,68,70,78,83,92**;Mar 2004;Build 9
"RTN","PSBVDLTB",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PSBVDLTB",4,0)
 ;
"RTN","PSBVDLTB",5,0)
 ; Reference/IA
"RTN","PSBVDLTB",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBVDLTB",7,0)
 ; IN5^VADPT/10061
"RTN","PSBVDLTB",8,0)
 ; DEM^VADPT/10061
"RTN","PSBVDLTB",9,0)
 ; INP^VADPT/10061
"RTN","PSBVDLTB",10,0)
 ; $$FMADD^XLFDT/10103
"RTN","PSBVDLTB",11,0)
 ; $$GET^XPAR/2263
"RTN","PSBVDLTB",12,0)
 ; 
"RTN","PSBVDLTB",13,0)
 ;*68 - add new parameter to use new SI/OPI word processing fields
"RTN","PSBVDLTB",14,0)
 ;*70 - add Clinic order request IN param flag (true/false 0/1).
"RTN","PSBVDLTB",15,0)
 ;      also add to return array(1) 6th, 7th piece = IM & CO ord count
"RTN","PSBVDLTB",16,0)
 ;      also add to return array order line 32 piece, Clinic name for 
"RTN","PSBVDLTB",17,0)
 ;      CO orders.
"RTN","PSBVDLTB",18,0)
 ;*83 - cleanup variables here instead of in each tab rtn
"RTN","PSBVDLTB",19,0)
 ;
"RTN","PSBVDLTB",20,0)
 ; ** Warning: PSBSIOPI & PSBCLINORD will be used as global variables
"RTN","PSBVDLTB",21,0)
 ;             for all down stream calls from this RPC tag.
"RTN","PSBVDLTB",22,0)
 ;
"RTN","PSBVDLTB",23,0)
RPC(RESULTS,DFN,PSBTAB,PSBDT,PSBSIOPI,PSBCLINORD,PSBSRCHDIR) ;
"RTN","PSBVDLTB",24,0)
 N PSBCNT,PSBORDCNT,PSBPATCH,PSBINFUS,PSBIVSTP,PSBA               ;*70
"RTN","PSBVDLTB",25,0)
 N PSBNOW                                                         ;*83
"RTN","PSBVDLTB",26,0)
 K RESULTS,^TMP("PSB",$J),^TMP("PSJ",$J)
"RTN","PSBVDLTB",27,0)
 S PSBSIOPI=+$G(PSBSIOPI)   ;*68 init to 0 if not present or 1 if sent
"RTN","PSBVDLTB",28,0)
 S PSBCLINORD=+$G(PSBCLINORD)                   ;*70 set to 0 if NULL
"RTN","PSBVDLTB",29,0)
 S PSBSRCHDIR=$$UP^XLFSTR($G(PSBSRCHDIR))       ;*70 set to NULL/upper
"RTN","PSBVDLTB",30,0)
 S PSBTRFL=0
"RTN","PSBVDLTB",31,0)
 S RESULTS=$NAME(^TMP("PSB",$J,PSBTAB))
"RTN","PSBVDLTB",32,0)
 ;
"RTN","PSBVDLTB",33,0)
 Q:$$DECEASED(DFN)
"RTN","PSBVDLTB",34,0)
 ;
"RTN","PSBVDLTB",35,0)
 ;Set date & time window varaibles
"RTN","PSBVDLTB",36,0)
 ;
"RTN","PSBVDLTB",37,0)
 S PSBNOW=+$G(PSBDT)
"RTN","PSBVDLTB",38,0)
 I 'PSBNOW D NOW^%DTC S PSBNOW=+$E(%,1,10)
"RTN","PSBVDLTB",39,0)
 S PSBDT=$P(PSBNOW,".",1)
"RTN","PSBVDLTB",40,0)
 ;
"RTN","PSBVDLTB",41,0)
 ;check if fast search requested and valid direction passed, then
"RTN","PSBVDLTB",42,0)
 ; get the next date tha order data exists and Not Given
"RTN","PSBVDLTB",43,0)
 I PSBCLINORD,(PSBSRCHDIR="B")!(PSBSRCHDIR="F") D
"RTN","PSBVDLTB",44,0)
 . N PSBSRCHDT,SRCHDIR
"RTN","PSBVDLTB",45,0)
 . S SRCHDIR=$S(PSBSRCHDIR="B":-1,1:1)
"RTN","PSBVDLTB",46,0)
 . S PSBSRCHDT=$$FINDORD^PSBVDLU1(SRCHDIR,DFN,PSBDT,PSBTAB)
"RTN","PSBVDLTB",47,0)
 . S:PSBSRCHDT'=-1 (PSBNOW,PSBDT)=PSBSRCHDT
"RTN","PSBVDLTB",48,0)
 ;
"RTN","PSBVDLTB",49,0)
 ;*70 - if CO, set window of time to the entire day
"RTN","PSBVDLTB",50,0)
 I PSBCLINORD D
"RTN","PSBVDLTB",51,0)
 .S PSBWBEG=$P(PSBDT,".")_".0000"
"RTN","PSBVDLTB",52,0)
 .S PSBWEND=$P(PSBDT,".")_".2400"
"RTN","PSBVDLTB",53,0)
 E  D
"RTN","PSBVDLTB",54,0)
 .S PSBWBEG=$$FMADD^XLFDT(PSBNOW,"",-12)
"RTN","PSBVDLTB",55,0)
 .S PSBWEND=$$FMADD^XLFDT(PSBNOW,"",12)
"RTN","PSBVDLTB",56,0)
 ;
"RTN","PSBVDLTB",57,0)
 ;Create variable for valid order start date/time against admin window
"RTN","PSBVDLTB",58,0)
 S PSBWADM=$$GET^XPAR("DIV","PSB ADMIN BEFORE")
"RTN","PSBVDLTB",59,0)
 S:PSBCLINORD PSBWADM=99999
"RTN","PSBVDLTB",60,0)
 D NOW^%DTC S PSBWADM=$$FMADD^XLFDT(%,"","",+PSBWADM) ; correction for start date issue, PSB*3*78
"RTN","PSBVDLTB",61,0)
 ;
"RTN","PSBVDLTB",62,0)
 ;Use last movement for API
"RTN","PSBVDLTB",63,0)
 S VAIP("D")="LAST" D IN5^VADPT S PSBTRDT=+VAIP(3),PSBTRTYP=$P(VAIP(2),U,2),PSBMVTYP=$P(VAIP(4),U,2) K VAIP
"RTN","PSBVDLTB",64,0)
 ;
"RTN","PSBVDLTB",65,0)
 ;Get patient transfer notification timeframe to determine pop-up box
"RTN","PSBVDLTB",66,0)
 S PSBPTTR=$$GET^XPAR("DIV","PSB PATIENT TRANSFER") I PSBPTTR="" S PSBPTTR=72
"RTN","PSBVDLTB",67,0)
 D NOW^%DTC S PSBNTDT=$$FMADD^XLFDT(%,"",-PSBPTTR) I PSBNTDT'>PSBTRDT S PSBTRFL=1
"RTN","PSBVDLTB",68,0)
 ;
"RTN","PSBVDLTB",69,0)
 ;Passing PSBDT as 3rd parameter turns off the V.1.0 One-Time lookback
"RTN","PSBVDLTB",70,0)
 ;*70 check if IM or CO orders exists for mode lights
"RTN","PSBVDLTB",71,0)
 S PSBORDCNT=$$MODELITE^PSBVDLU1                ;mode lights
"RTN","PSBVDLTB",72,0)
 S PSBPATCH=$$PATCHON^PSBVDLU1(DFN,.PSBA)       ;patch on light
"RTN","PSBVDLTB",73,0)
 S:PSBA("I") $P(PSBORDCNT,U)=1 S:PSBA("C") $P(PSBORDCNT,U,2)=1
"RTN","PSBVDLTB",74,0)
 S PSBIVSTP=$$STOPPED^PSBVDLU1(DFN,.PSBA)       ;IV stopped light
"RTN","PSBVDLTB",75,0)
 S:PSBA("I") $P(PSBORDCNT,U)=1 S:PSBA("C") $P(PSBORDCNT,U,2)=1
"RTN","PSBVDLTB",76,0)
 S PSBINFUS=$$INFUSING^PSBVDLU1(DFN,.PSBA)      ;IV infusing light
"RTN","PSBVDLTB",77,0)
 S:PSBA("I") $P(PSBORDCNT,U)=1 S:PSBA("C") $P(PSBORDCNT,U,2)=1
"RTN","PSBVDLTB",78,0)
 ;
"RTN","PSBVDLTB",79,0)
 ; Setup the ^TMP("PSJ",$J global for use below 
"RTN","PSBVDLTB",80,0)
 K ^TMP("PSJ",$J)
"RTN","PSBVDLTB",81,0)
 D EN^PSJBCMA(DFN,PSBNOW,PSBDT)
"RTN","PSBVDLTB",82,0)
 D:PSBCLINORD INCLUDCO^PSBVDLU1
"RTN","PSBVDLTB",83,0)
 D:'PSBCLINORD REMOVECO^PSBVDLU1
"RTN","PSBVDLTB",84,0)
 ;
"RTN","PSBVDLTB",85,0)
 ;initialize tabs
"RTN","PSBVDLTB",86,0)
 D TABINIT
"RTN","PSBVDLTB",87,0)
 ;
"RTN","PSBVDLTB",88,0)
 ;The following calls must be made in the order below since the ^TMP global is reused
"RTN","PSBVDLTB",89,0)
 D EN^PSBVDLUD(DFN,PSBDT)
"RTN","PSBVDLTB",90,0)
 D EN^PSBVDLPB(DFN,PSBDT)
"RTN","PSBVDLTB",91,0)
 D EN^PSBVDLIV(DFN,PSBDT)
"RTN","PSBVDLTB",92,0)
 ; adding a special check for lighting the Unit Dose Tab light.
"RTN","PSBVDLTB",93,0)
 ; Patches sent to GUI via this API will send both IM and CO patches
"RTN","PSBVDLTB",94,0)
 ; that are expired/dc'd and are still on the patient. So there is a
"RTN","PSBVDLTB",95,0)
 ; a scenario when a unit dose patch can be on TMP global and it is
"RTN","PSBVDLTB",96,0)
 ; the only order in TMP but was for a different mode than currently
"RTN","PSBVDLTB",97,0)
 ; viewing.  In this case CNT will = 0 and use it to turn on the light
"RTN","PSBVDLTB",98,0)
 N CNT,QQ,NODE S CNT=0
"RTN","PSBVDLTB",99,0)
 I $D(^TMP("PSB",$J,"UDTAB",2))>0 D           ;unit dose tab check *70
"RTN","PSBVDLTB",100,0)
 . F QQ=2:1  Q:'$D(^TMP("PSB",$J,"UDTAB",QQ))  D  Q:CNT
"RTN","PSBVDLTB",101,0)
 .. S NODE=^TMP("PSB",$J,"UDTAB",QQ)
"RTN","PSBVDLTB",102,0)
 .. I $L(NODE,U)>27,$P(NODE,U,2)?.N1A D
"RTN","PSBVDLTB",103,0)
 ... ;  first order found Activ per correct mode, then quit with cnt=1
"RTN","PSBVDLTB",104,0)
 ... I PSBCLINORD,$P(NODE,U,33),($P(NODE,U,22)="A"!($P(NODE,U,22)="H")!($P(NODE,U,22)="R")) S CNT=1 Q
"RTN","PSBVDLTB",105,0)
 ... I 'PSBCLINORD,'$P(NODE,U,33),($P(NODE,U,22)="A"!($P(NODE,U,22)="H")!($P(NODE,U,22)="R")) S CNT=1 Q
"RTN","PSBVDLTB",106,0)
 ... Q:'$P(NODE,U,28)  ;not a given patch
"RTN","PSBVDLTB",107,0)
 ... I PSBCLINORD,$P($P(NODE,U,26),".")'>DT,'$P(NODE,U,33) Q
"RTN","PSBVDLTB",108,0)
 ... I 'PSBCLINORD,$P($P(NODE,U,26),".")'>DT,$P(NODE,U,33) Q
"RTN","PSBVDLTB",109,0)
 ... S CNT=1
"RTN","PSBVDLTB",110,0)
 S $P(PSBATAB,U,1)=$S(CNT:1,1:0)            ;*70 use CNT for UD light
"RTN","PSBVDLTB",111,0)
 S $P(PSBATAB,U,2)=$S($D(^TMP("PSB",$J,"PBTAB",2))>0:1,1:0)
"RTN","PSBVDLTB",112,0)
 S $P(PSBATAB,U,3)=$S($D(^TMP("PSB",$J,"IVTAB",2))>0:1,1:0)
"RTN","PSBVDLTB",113,0)
 S:PSBTAB="UDTAB" PSBCNT=$O(^TMP("PSB",$J,"UDTAB",""),-1)
"RTN","PSBVDLTB",114,0)
 S:PSBTAB="IVTAB" PSBCNT=$O(^TMP("PSB",$J,"IVTAB",""),-1)
"RTN","PSBVDLTB",115,0)
 S:PSBTAB="PBTAB" PSBCNT=$O(^TMP("PSB",$J,"PBTAB",""),-1)
"RTN","PSBVDLTB",116,0)
 ;
"RTN","PSBVDLTB",117,0)
 I PSBTAB="NO TAB" D
"RTN","PSBVDLTB",118,0)
 .S ^TMP("PSB",$J,PSBTAB,0)=1
"RTN","PSBVDLTB",119,0)
 .S ^TMP("PSB",$J,PSBTAB,1)=PSBATAB
"RTN","PSBVDLTB",120,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,5,6)=PSBORDCNT  ;*70 Cvsht offset cnt
"RTN","PSBVDLTB",121,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,7)=PSBINFUS     ;*70 IV infuse light
"RTN","PSBVDLTB",122,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,8)=PSBIVSTP     ;*70 IV stop light
"RTN","PSBVDLTB",123,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,9)=PSBPATCH     ;*70 patch light
"RTN","PSBVDLTB",124,0)
 E  D
"RTN","PSBVDLTB",125,0)
 .I $G(PSBCNT)>0 S ^TMP("PSB",$J,PSBTAB,0)=PSBCNT
"RTN","PSBVDLTB",126,0)
 .I $G(PSBCNT)>1 S ^TMP("PSB",$J,PSBTAB,1)=PSBATAB_U_$S(PSBTRFL:PSBTRTYP_U_PSBMVTYP,1:"")
"RTN","PSBVDLTB",127,0)
 .I $G(PSBCNT)'>1 S ^TMP("PSB",$J,PSBTAB,1)=PSBATAB
"RTN","PSBVDLTB",128,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,6,7)=PSBORDCNT   ;*70 Tabs Ord cnt
"RTN","PSBVDLTB",129,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,8)=PSBINFUS      ;*70 IV infuse light
"RTN","PSBVDLTB",130,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,9)=PSBIVSTP      ;*70 IV stop light
"RTN","PSBVDLTB",131,0)
 .S $P(^TMP("PSB",$J,PSBTAB,1),U,10)=PSBPATCH     ;*70 patch light
"RTN","PSBVDLTB",132,0)
 ;
"RTN","PSBVDLTB",133,0)
 F X="UDTAB","PBTAB","IVTAB" I X'=PSBTAB K ^TMP("PSB",$J,X)
"RTN","PSBVDLTB",134,0)
 D CLEAN^PSBVT
"RTN","PSBVDLTB",135,0)
 K ^TMP("PSJ",$J),PSBATAB,PSBWADM,PSBWBEG,PSBWEND,PSBNOW,PSBTRDT,PSBPTTR,PSBTRFL,PSBNTDT,PSBTRTYP,PSBMVTYP  ;*83
"RTN","PSBVDLTB",136,0)
 Q
"RTN","PSBVDLTB",137,0)
 ;
"RTN","PSBVDLTB",138,0)
TABINIT ;
"RTN","PSBVDLTB",139,0)
 F PSBX="UDTAB","PBTAB","IVTAB" D
"RTN","PSBVDLTB",140,0)
 .K ^TMP("PSB",$J,PSBX)
"RTN","PSBVDLTB",141,0)
 .S ^TMP("PSB",$J,PSBX,0)=1
"RTN","PSBVDLTB",142,0)
 .S ^TMP("PSB",$J,PSBX,1)="-1^No Administration(s) due at this time." Q
"RTN","PSBVDLTB",143,0)
 ;
"RTN","PSBVDLTB",144,0)
DECEASED(DFN) ; Patient Deceased?
"RTN","PSBVDLTB",145,0)
 ;
"RTN","PSBVDLTB",146,0)
 S DECEASED=0
"RTN","PSBVDLTB",147,0)
 D DEM^VADPT I VADM(6)]"" S DECEASED=1 K VADM D  Q DECEASED
"RTN","PSBVDLTB",148,0)
 .F PSBX="UDTAB","PBTAB","IVTAB","NO TAB" D
"RTN","PSBVDLTB",149,0)
 ..K ^TMP("PSB",$J,PSBX)
"RTN","PSBVDLTB",150,0)
 ..S ^TMP("PSB",$J,PSBX,0)=1,^TMP("PSB",$J,PSBX,1)="0^0^0^-1^A ""DATE OF DEATH"" has been logged for this patient."
"RTN","PSBVDLTB",151,0)
 Q DECEASED
"RTN","PSBVDLU1")
0^4^B203085262^B192703576
"RTN","PSBVDLU1",1,0)
PSBVDLU1 ;BIRMINGHAM/EFC-VIRTUAL DUE LIST (VDL) UTILITIES ;03/06/16 3:06pm
"RTN","PSBVDLU1",2,0)
 ;;3.0;BAR CODE MED ADMIN;**13,32,68,70,83,92**;Mar 2004;Build 9
"RTN","PSBVDLU1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PSBVDLU1",4,0)
 ;
"RTN","PSBVDLU1",5,0)
 ; Reference/IA
"RTN","PSBVDLU1",6,0)
 ; EN^PSJBCMA/2828
"RTN","PSBVDLU1",7,0)
 ; EN^PSJBCMA1/2829
"RTN","PSBVDLU1",8,0)
 ; GETSIOPI^PSJBCMA5/5763
"RTN","PSBVDLU1",9,0)
 ;
"RTN","PSBVDLU1",10,0)
 ;*68 - add call to add special instructions (SI) entries to the
"RTN","PSBVDLU1",11,0)
 ;      ^TMP("PSB")  global that ends up in the RESULTS ARRAY of
"RTN","PSBVDLU1",12,0)
 ;      RPC PSB GETORDERTAB.
"RTN","PSBVDLU1",13,0)
 ;*70 - add tags to rebuild TMP array built by PSJBCMA to filter
"RTN","PSBVDLU1",14,0)
 ;      in or out Clinic Orders per request.
"RTN","PSBVDLU1",15,0)
 ;*83 - define new var PSBDOA (duration On time in min for MRR meds)
"RTN","PSBVDLU1",16,0)
 ;        and add flag and remove time to PSBREC(34 & 35)
"RTN","PSBVDLU1",17,0)
 ;
"RTN","PSBVDLU1",18,0)
ODDSCH(PSBTABX) ;
"RTN","PSBVDLU1",19,0)
 I (PSBOST'<PSBWBEG)&(PSBOST'>PSBWEND) D ADD(PSBREC,PSBOTXT,PSBOST,PSBDDS,PSBSOLS,PSBADDS,PSBTABX)  ;Include start date/time as admin
"RTN","PSBVDLU1",20,0)
 S PSBQUIT=0,PSBCDT=PSBOST F  S PSBCDT=$$FMADD^XLFDT(PSBCDT,"","",PSBFREQ) Q:PSBQUIT=1  D
"RTN","PSBVDLU1",21,0)
 .I $P(PSBCDT,".",2)="" S PSBCDT=PSBCDT-1_".24"
"RTN","PSBVDLU1",22,0)
 .I PSBCDT>PSBWEND S PSBQUIT=1 Q
"RTN","PSBVDLU1",23,0)
 .I PSBCDT'<PSBWBEG,PSBCDT<PSBOSP D ADD(PSBREC,PSBOTXT,PSBCDT,PSBDDS,PSBSOLS,PSBADDS,PSBTABX) Q
"RTN","PSBVDLU1",24,0)
 Q
"RTN","PSBVDLU1",25,0)
GETFREQ(PSBDFN,PSBORDN) ;
"RTN","PSBVDLU1",26,0)
 K ^TMP("PSJ1",$J)
"RTN","PSBVDLU1",27,0)
 D EN^PSJBCMA1(PSBDFN,PSBORDN,1)
"RTN","PSBVDLU1",28,0)
 S PSBFREQ=$P(^TMP("PSJ1",$J,4),U,11)
"RTN","PSBVDLU1",29,0)
 S PSBSCHBR=$P(^TMP("PSJ1",$J,2),"^",5)
"RTN","PSBVDLU1",30,0)
 I $$PSBDCHK1^PSBVT1(PSBSCHBR) S PSBFREQ=""
"RTN","PSBVDLU1",31,0)
 K ^TMP("PSJ1",$J)
"RTN","PSBVDLU1",32,0)
 Q PSBFREQ
"RTN","PSBVDLU1",33,0)
 ;
"RTN","PSBVDLU1",34,0)
GETADMIN(PSBDFN,PSBORDN,PSBSTRT,PSBFREQ,PSBEVDT) ;
"RTN","PSBVDLU1",35,0)
 ;Determine administration times of an odd schedule for today
"RTN","PSBVDLU1",36,0)
 N PSBADMIN
"RTN","PSBVDLU1",37,0)
 K ^TMP("PSB",$J,"GETADMIN")
"RTN","PSBVDLU1",38,0)
 D EN^PSJBCMA1(PSBDFN,PSBORDN,1)
"RTN","PSBVDLU1",39,0)
 S PSBADMIN=$P(^TMP("PSJ1",$J,4),U,9),PSBFREQ=$P(^TMP("PSJ1",$J,4),U,11),^TMP("PSB",$J,"GETADMIN",0)=PSBADMIN
"RTN","PSBVDLU1",40,0)
 I $E(PSBFREQ)'?1N K ^TMP("PSJ1",$J) Q $G(^TMP("PSB",$J,"GETADMIN",0))
"RTN","PSBVDLU1",41,0)
 I PSBFREQ=0 K ^TMP("PSJ1",$J) Q $G(^TMP("PSB",$J,"GETADMIN",0))
"RTN","PSBVDLU1",42,0)
 I PSBSTRT'<PSBEVDT S PSBADMIN=$E($P(PSBSTRT,".",2)_"0000",1,4),^TMP("PSB",$J,"GETADMIN",0)=PSBADMIN
"RTN","PSBVDLU1",43,0)
 S PSBCDT=PSBSTRT,(PSBADTMX,PSBQUIT)=0 F  S PSBCDT=$$FMADD^XLFDT(PSBCDT,"","",PSBFREQ) D  Q:PSBQUIT=1
"RTN","PSBVDLU1",44,0)
 .I $P(PSBCDT,".",2)="" S PSBCDT=PSBCDT-1_".24"
"RTN","PSBVDLU1",45,0)
 .I (PSBCDT\1)>(PSBEVDT\1) S PSBQUIT=1 Q
"RTN","PSBVDLU1",46,0)
 .I (PSBCDT\1)=(PSBEVDT\1) S PSBADMIN=PSBADMIN_$S(PSBADMIN="":"",1:"-")_$E($P(PSBCDT,".",2)_"0000",1,4)
"RTN","PSBVDLU1",47,0)
 .S ^TMP("PSB",$J,"GETADMIN",PSBADTMX)=PSBADMIN
"RTN","PSBVDLU1",48,0)
 .S:($L(PSBADMIN)+5)>255 PSBADTMX=PSBADTMX+1,PSBADMIN=""
"RTN","PSBVDLU1",49,0)
 K ^TMP("PSJ1",$J),PSBADTMX
"RTN","PSBVDLU1",50,0)
 Q $G(^TMP("PSB",$J,"GETADMIN",0))
"RTN","PSBVDLU1",51,0)
 ;
"RTN","PSBVDLU1",52,0)
ADD(PSBREC,PSBSI,PSBDT,PSBDD,PSBSOL,PSBADD,PSBTAB) ;
"RTN","PSBVDLU1",53,0)
 ;
"RTN","PSBVDLU1",54,0)
 ; Description: Add order to ^TMP("PSB",$J,PSBTAB,...) for RPC Return RESULTS
"RTN","PSBVDLU1",55,0)
 ;
"RTN","PSBVDLU1",56,0)
 ; PSBREC=order hdr from above
"RTN","PSBVDLU1",57,0)
 ; PSBSI=special instructions
"RTN","PSBVDLU1",58,0)
 ; PSBDT=admin date/time
"RTN","PSBVDLU1",59,0)
 ; PSBDD=Dispense Drugs
"RTN","PSBVDLU1",60,0)
 ; PSBSOL=Solutions
"RTN","PSBVDLU1",61,0)
 ; PSBADD=Additives
"RTN","PSBVDLU1",62,0)
 ;
"RTN","PSBVDLU1",63,0)
 N PSB
"RTN","PSBVDLU1",64,0)
 S PSBDT=$E(PSBDT,1,12),PSBQR=0
"RTN","PSBVDLU1",65,0)
 S PSB=$O(^TMP("PSB",$J,PSBTAB,""),-1) ; Get next node
"RTN","PSBVDLU1",66,0)
 S $P(PSBREC,U,14)=PSBDT ; Admin Time sits in ^14
"RTN","PSBVDLU1",67,0)
 ;
"RTN","PSBVDLU1",68,0)
 ; *83 If MRR Med, add Remove code & Remove time, (34,35)
"RTN","PSBVDLU1",69,0)
 D REMOVETM(PSBMRRFL,PSBSCHT)
"RTN","PSBVDLU1",70,0)
 ;
"RTN","PSBVDLU1",71,0)
 I $P(PSBREC,U,5)'="O" S X=$O(^PSB(53.79,"AORD",DFN,PSBONX,PSBDT,0)) D:X
"RTN","PSBVDLU1",72,0)
 .S $P(PSBREC,U,12)=X
"RTN","PSBVDLU1",73,0)
 .K PSBLCK L +^PSB(53.79,X):1  I  L -^PSB(53.79,X) S PSBLCK=1
"RTN","PSBVDLU1",74,0)
 .S PSBSTUS=$P(^PSB(53.79,X,0),U,9),$P(PSBREC,U,13)=$S(PSBSTUS="N":"",(PSBSTUS="")&$G(PSBLCK):"U",1:PSBSTUS),$P(PSBREC,U,23)=$P(^PSB(53.79,X,0),U,10),$P(PSBREC,U,24)=$P(^PSB(53.79,X,0),U,7)
"RTN","PSBVDLU1",75,0)
 .I $D(^PSB(53.79,X)) I PSBDOSEF="PATCH",PSBSTUS="G",PSBDT=$P(^PSB(53.79,X,.1),U,3),PSBQRR=0 S PSBQR=1
"RTN","PSBVDLU1",76,0)
 .I PSBSTUS="G",$G(PSBFLAG) D CHECK ;Get the correct dispense drug
"RTN","PSBVDLU1",77,0)
 I ($P(PSBREC,U,5)="O") D
"RTN","PSBVDLU1",78,0)
 .S X=$O(^PSB(53.79,"AORDX",DFN,PSBONX,"")) Q:X=""
"RTN","PSBVDLU1",79,0)
 .S Y=$O(^PSB(53.79,"AORDX",DFN,PSBONX,X,"")) Q:Y=""  S $P(PSBREC,U,12)=Y
"RTN","PSBVDLU1",80,0)
 .K PSBLCK L +^PSB(53.79,Y):1  I  L -^PSB(53.79,Y) S PSBLCK=1
"RTN","PSBVDLU1",81,0)
 .S PSBSTUS=$P(^PSB(53.79,Y,0),U,9),$P(PSBREC,U,13)=$S(PSBSTUS="N":"",(PSBSTUS="")&$G(PSBLCK):"U",1:PSBSTUS),$P(PSBREC,U,24)=$P(^PSB(53.79,Y,0),U,7)
"RTN","PSBVDLU1",82,0)
 .I $D(^PSB(53.79,Y)) I PSBDOSEF="PATCH",PSBSTUS="G",PSBDT=$P(^PSB(53.79,Y,.1),U,3),PSBQRR=0 S PSBQR=1
"RTN","PSBVDLU1",83,0)
 .I PSBSTUS="G",$G(PSBFLAG) D CHECK
"RTN","PSBVDLU1",84,0)
 Q:PSBQR=1
"RTN","PSBVDLU1",85,0)
 ;
"RTN","PSBVDLU1",86,0)
 S $P(PSBREC,U,25)=0 I $G(PSBTRFL),$P(PSBREC,U,11)]"",$P(PSBREC,U,11)'<$G(PSBNTDT),$P(PSBREC,U,11)'>$G(PSBTRDT) S $P(PSBREC,U,25)=1
"RTN","PSBVDLU1",87,0)
 S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBREC ; Order Hdr
"RTN","PSBVDLU1",88,0)
 I $P(PSBREC,U,12)]"" S PSBONVDL($P(PSBREC,U,12))=""
"RTN","PSBVDLU1",89,0)
 S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBSI ; Special Instructions
"RTN","PSBVDLU1",90,0)
 ; add dispense drugs
"RTN","PSBVDLU1",91,0)
 I $D(PSBDDA) S X="" F  S X=$O(PSBDDA(X)) Q:X=""  S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBDDA(X)
"RTN","PSBVDLU1",92,0)
 S PSBCHDT=0
"RTN","PSBVDLU1",93,0)
 I (PSBTAB'["CVRSHT"),(PSBONX["V"),(PSBOSTS="D"),($G(PSBFOR)="") D  Q  ;get infusing bag from DCed but not DEed orders
"RTN","PSBVDLU1",94,0)
 .D PSJ^PSBVT(PSBX)
"RTN","PSBVDLU1",95,0)
 .D INFUSING^PSBVDLU2 I PSBCOMP=0 Q
"RTN","PSBVDLU1",96,0)
 .I $D(PSBSOLA) S X="" F  S X=$O(PSBSOLA(X)) Q:X=""  S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBSOLA(X)
"RTN","PSBVDLU1",97,0)
 .I $D(PSBADA) S X="" F  S X=$O(PSBADA(X)) Q:X=""  S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBADA(X)
"RTN","PSBVDLU1",98,0)
 .S X="" F  S X=$O(PSBPORA(PSBONX,X)) S PSBUID=$P(PSBPORA(PSBONX,X),U,1) Q:PSBUID]""  Q:X=""
"RTN","PSBVDLU1",99,0)
 .I PSBUID["P" Q
"RTN","PSBVDLU1",100,0)
 .I PSBUID["WS" D
"RTN","PSBVDLU1",101,0)
 ..S PSBNODE=$O(^PSB(53.79,"AUID",DFN,X,PSBUID,""))
"RTN","PSBVDLU1",102,0)
 ..S PSBUIDA(PSBUID)="ID"_U_PSBUID
"RTN","PSBVDLU1",103,0)
 ..S X=0 F  S X=$O(^PSB(53.79,PSBNODE,.6,X)) Q:'X  S PSBUIDA(PSBUID)=PSBUIDA(PSBUID)_U_"ADD;"_$P(^PSB(53.79,PSBNODE,.6,X,0),U,1)
"RTN","PSBVDLU1",104,0)
 ..S X=0 F  S X=$O(^PSB(53.79,PSBNODE,.7,X)) Q:'X  S PSBUIDA(PSBUID)=PSBUIDA(PSBUID)_U_"SOL;"_$P(^PSB(53.79,PSBNODE,.7,X,0),U,1)
"RTN","PSBVDLU1",105,0)
 .S PSBSONX=PSBONX
"RTN","PSBVDLU1",106,0)
 .I '$D(PSBUIDA(PSBUID)) S PSBCKOR="" F  S PSBCKOR=$O(PSBPORA(PSBSONX,PSBCKOR)) Q:PSBCKOR=""  D CLEAN^PSBVT,PSJ1^PSBVT(DFN,PSBCKOR) Q:$D(PSBUIDA(PSBUID))
"RTN","PSBVDLU1",107,0)
 .S PSBONX=PSBSONX
"RTN","PSBVDLU1",108,0)
 .S:$D(PSBUIDA(PSBUID)) PSB=PSB+2,^TMP("PSB",$J,PSBTAB,PSB-1)=PSBUIDA(PSBUID),^TMP("PSB",$J,PSBTAB,PSB)="END"
"RTN","PSBVDLU1",109,0)
 .D CLEAN^PSBVT,PSJ1^PSBVT(DFN,$O(PSBPORA("")))
"RTN","PSBVDLU1",110,0)
 ; add additives
"RTN","PSBVDLU1",111,0)
 I $D(PSBADA) S X="" F  S X=$O(PSBADA(X)) Q:X=""  S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBADA(X)
"RTN","PSBVDLU1",112,0)
 ; add solutions
"RTN","PSBVDLU1",113,0)
 I $D(PSBSOLA) S X="" F  S X=$O(PSBSOLA(X)) Q:X=""  S $P(PSBSOLA(X),U,5)="",PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=PSBSOLA(X)
"RTN","PSBVDLU1",114,0)
 I PSBONX["V" D EN^PSBPOIV(DFN,PSBONX)  ; get bags
"RTN","PSBVDLU1",115,0)
 I $D(^TMP("PSBAR",$J)) S PSBUID=DFN_"V"_99999 F  S PSBUID=$O(^TMP("PSBAR",$J,PSBUID),-1) Q:PSBUID=""  D
"RTN","PSBVDLU1",116,0)
 .S PSBUIDS=^TMP("PSBAR",$J,PSBUID)
"RTN","PSBVDLU1",117,0)
 .I $P(PSBUIDS,U,1)="I",$P(PSBUIDS,U,2)'="I",$P(PSBUIDS,U,2)'="S" Q  ; bag has invalid IV parameter, is not infusing or stopped
"RTN","PSBVDLU1",118,0)
 .I $P(PSBUIDS,U,2)'="I",$P(PSBUIDS,U,2)'="S",$P(PSBUIDS,U,8)'="" Q  ; label is no longer valid, bag is not infusing or stopped
"RTN","PSBVDLU1",119,0)
 .I $P(PSBUIDS,U,2)="C" Q  ; bag is completed
"RTN","PSBVDLU1",120,0)
 .I $P(PSBUIDS,U,2)="G" Q  ; bag is given (PBTAB)
"RTN","PSBVDLU1",121,0)
 .S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)=$P(PSBUIDS,U,10,999)
"RTN","PSBVDLU1",122,0)
 K ^TMP("PSBAR",$J)
"RTN","PSBVDLU1",123,0)
 D:PSBSIOPI GETSI(DFN,PSBONX,PSBTAB)                    ;*68
"RTN","PSBVDLU1",124,0)
 S PSB=PSB+1,^TMP("PSB",$J,PSBTAB,PSB)="END"
"RTN","PSBVDLU1",125,0)
 S ^TMP("PSB",$J,PSBTAB,0)=PSB
"RTN","PSBVDLU1",126,0)
 Q
"RTN","PSBVDLU1",127,0)
 ;
"RTN","PSBVDLU1",128,0)
CHECK S FILE=53.795,PSBNODE=.5,PSBIENS=X_","
"RTN","PSBVDLU1",129,0)
 F I=0:0 S I=$O(^PSB(53.79,X,PSBNODE,I)) Q:'I  S $P(PSBDDS,U,3,4)=$$GET1^DIQ(FILE,I_","_PSBIENS,.01,"I")_U_$$GET1^DIQ(FILE,I_","_PSBIENS,.01)
"RTN","PSBVDLU1",130,0)
 Q
"RTN","PSBVDLU1",131,0)
 ;
"RTN","PSBVDLU1",132,0)
VNURSE(PSBTAB) ;add initials of verifying pharmacist/verifying nurse
"RTN","PSBVDLU1",133,0)
 F PSBLP=1:1:$P(^TMP("PSB",$J,PSBTAB,0),U,1) S X=^TMP("PSB",$J,PSBTAB,PSBLP) I $P(X,U)=DFN D
"RTN","PSBVDLU1",134,0)
 .K ^TMP("PSJ1",$J)
"RTN","PSBVDLU1",135,0)
 .D PSJ1^PSBVT(DFN,$P(X,U,2))
"RTN","PSBVDLU1",136,0)
 .S $P(^TMP("PSB",$J,PSBTAB,PSBLP),U,19)=$S(PSBVNI]"":PSBVNI,PSBVNX]"":$E($P(PSBVNX,",",2))_$E(PSBVNX),1:"***") ;Use first and last initial from name field if Initial field blank, PSB*3*92
"RTN","PSBVDLU1",137,0)
 K PSBLP,PSBTAB
"RTN","PSBVDLU1",138,0)
 Q
"RTN","PSBVDLU1",139,0)
 ;
"RTN","PSBVDLU1",140,0)
OKAY(PSBSTRT,PSBADMIN,PSBSCH,PSBORDER,PSBDRUG,PSBFREQ,PSBOSTS) ;
"RTN","PSBVDLU1",141,0)
 ;
"RTN","PSBVDLU1",142,0)
 ; Description: Determines if an order schedule is valid for
"RTN","PSBVDLU1",143,0)
 ;  the date in PSBADMIN (i.e. Q4D, is it valid today)
"RTN","PSBVDLU1",144,0)
 ;
"RTN","PSBVDLU1",145,0)
 ; PSBSTRT:  Start Date of order (Time ignored)
"RTN","PSBVDLU1",146,0)
 ; PSBADMIN: Date of administration to check (Time ignored)
"RTN","PSBVDLU1",147,0)
 ; PSBSCH:  Schedule (i.e. MO-WE-FR@0900 or Q48H...)
"RTN","PSBVDLU1",148,0)
 ; PSBORDER: Order reference
"RTN","PSBVDLU1",149,0)
 ; PSBDRUG:  Drug ordered (Orderable Item)
"RTN","PSBVDLU1",150,0)
 ; PSBOSTS: The status of the order
"RTN","PSBVDLU1",151,0)
 ;
"RTN","PSBVDLU1",152,0)
 N PSBOKAY,PSBDAYS,PSBDOW
"RTN","PSBVDLU1",153,0)
 S PSBOSTS=$G(PSBOSTS)
"RTN","PSBVDLU1",154,0)
 ;
"RTN","PSBVDLU1",155,0)
 S PSBOKAY=0  ; Default Flag
"RTN","PSBVDLU1",156,0)
 I PSBFREQ'="",PSBFREQ'="D",PSBFREQ'>1440 Q 1
"RTN","PSBVDLU1",157,0)
 ;PRN and ONE TIMES show everyday
"RTN","PSBVDLU1",158,0)
 I (PSBSCHT="P")!(PSBSCHT="O") Q 1
"RTN","PSBVDLU1",159,0)
 S PSBDAYS=$$DAYS(PSBSCH)
"RTN","PSBVDLU1",160,0)
 ;
"RTN","PSBVDLU1",161,0)
 I PSBDAYS=1 S PSBOKAY=1 Q PSBOKAY  ; Order is everyday
"RTN","PSBVDLU1",162,0)
 ;
"RTN","PSBVDLU1",163,0)
 ; find out if today is a good day for multi days
"RTN","PSBVDLU1",164,0)
 S PSBOKAY=0,PSBRDTE=PSBSTRT
"RTN","PSBVDLU1",165,0)
 S PSBADBR=PSBADMIN\1
"RTN","PSBVDLU1",166,0)
 S PSBENR=(PSBADMIN\1)+1
"RTN","PSBVDLU1",167,0)
 I PSBDAYS>1 D  Q PSBOKAY
"RTN","PSBVDLU1",168,0)
 .I PSBADBR=(PSBSTRT\1) S PSBOKAY=1
"RTN","PSBVDLU1",169,0)
 .F  S PSBRDTE=$$FMADD^XLFDT(PSBRDTE,"","",PSBFREQ) Q:PSBRDTE>PSBENR  D
"RTN","PSBVDLU1",170,0)
 ..I $P(PSBRDTE,".",2)="" S PSBRDTE=PSBRDTE-1_".24"
"RTN","PSBVDLU1",171,0)
 ..I PSBRDTE\1=PSBADBR S PSBOKAY=1
"RTN","PSBVDLU1",172,0)
 ..I PSBOKAY="1" Q
"RTN","PSBVDLU1",173,0)
 ;
"RTN","PSBVDLU1",174,0)
 ; Try the MO-WE-FR@0800 thing as last resort
"RTN","PSBVDLU1",175,0)
 S X=PSBADMIN D H^%DTC I %Y=-1 D  Q PSBOKAY  ; Error
"RTN","PSBVDLU1",176,0)
 .S PSBOKAY=0
"RTN","PSBVDLU1",177,0)
 .Q:PSBOSTS="E"
"RTN","PSBVDLU1",178,0)
 .Q:$G(PSBMHND)="PSBOMH"
"RTN","PSBVDLU1",179,0)
 .D ERROR^PSBMLU($G(PSBORDER,"UNKNOWN"),$G(PSBDRUG,""),DFN,"Unable to determine schedule "_PSBSCH,PSBSCH)
"RTN","PSBVDLU1",180,0)
 S PSBDOW=$P("SU^MO^TU^WE^TH^FR^SA",U,%Y+1)
"RTN","PSBVDLU1",181,0)
 I $F(PSBSCH,PSBDOW)>0 S PSBOKAY=1 Q PSBOKAY
"RTN","PSBVDLU1",182,0)
 S PSBOKAY=0
"RTN","PSBVDLU1",183,0)
 Q PSBOKAY
"RTN","PSBVDLU1",184,0)
 ;
"RTN","PSBVDLU1",185,0)
DAYS(PSB) ; Return days between doses (-1: error, 1:everyday 2: QOD...)
"RTN","PSBVDLU1",186,0)
 ;
"RTN","PSBVDLU1",187,0)
 ; Is it a PRN
"RTN","PSBVDLU1",188,0)
 I PSB?.E1"PRN".E Q 1  ; Straight PRN - As Needed
"RTN","PSBVDLU1",189,0)
 ;
"RTN","PSBVDLU1",190,0)
 S PSB=$TR(PSB," ","")
"RTN","PSBVDLU1",191,0)
 I PSB?2.4N.E Q 1
"RTN","PSBVDLU1",192,0)
 S X=PSBFREQ/1440 Q X
"RTN","PSBVDLU1",193,0)
 ;
"RTN","PSBVDLU1",194,0)
 Q
"RTN","PSBVDLU1",195,0)
 ;
"RTN","PSBVDLU1",196,0)
LAST ;
"RTN","PSBVDLU1",197,0)
 S PSBCC=0
"RTN","PSBVDLU1",198,0)
 S ZZ="" F  S ZZ=$O(^PSB(53.79,X,.3,ZZ),-1) Q:'ZZ  Q:PSBFLAG=1  S PSBDATA2=$G(^(ZZ,0)) D
"RTN","PSBVDLU1",199,0)
 .S PSBCC=PSBCC+1
"RTN","PSBVDLU1",200,0)
 .I (PSBCC=2)!($P($P(PSBDATA2,U)," ")="Refused:")!($P($P(PSBDATA2,U)," ")="Held:") S $P(PSBREC,U,11)=$P(PSBDATA2,U,3),PSBFLAG=1
"RTN","PSBVDLU1",201,0)
 Q
"RTN","PSBVDLU1",202,0)
 ;
"RTN","PSBVDLU1",203,0)
GETSI(DFN,ORD,TAB) ;Get Special Instructions/Other Print Info from IM   ;*68
"RTN","PSBVDLU1",204,0)
 ;
"RTN","PSBVDLU1",205,0)
 ; This Tag will load the SIOPI WP text into the TMP global used by
"RTN","PSBVDLU1",206,0)
 ; the PSB GETORDERTAB RPC, which ends up in the RESULTS array passed
"RTN","PSBVDLU1",207,0)
 ; back to the BCMA GUI.
"RTN","PSBVDLU1",208,0)
 ;
"RTN","PSBVDLU1",209,0)
 N QQ
"RTN","PSBVDLU1",210,0)
 K ^TMP("PSJBCMA5",$J,DFN,ORD)
"RTN","PSBVDLU1",211,0)
 D GETSIOPI^PSJBCMA5(DFN,ORD,1)
"RTN","PSBVDLU1",212,0)
 Q:'$D(^TMP("PSJBCMA5",$J,DFN,ORD))
"RTN","PSBVDLU1",213,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJBCMA5",$J,DFN,ORD,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",214,0)
 .S PSB=PSB+1
"RTN","PSBVDLU1",215,0)
 .S ^TMP("PSB",$J,TAB,PSB)="SI^"_^TMP("PSJBCMA5",$J,DFN,ORD,QQ)
"RTN","PSBVDLU1",216,0)
 K ^TMP("PSJBCMA5",$J,DFN,ORD)
"RTN","PSBVDLU1",217,0)
 Q
"RTN","PSBVDLU1",218,0)
 ;
"RTN","PSBVDLU1",219,0)
INCLUDCO ;Rebuild TMP global from PSJBCMA, RETAIN CLINC ORDERS ONLY  *70
"RTN","PSBVDLU1",220,0)
 N QQ,IMCNT,COCNT
"RTN","PSBVDLU1",221,0)
 S (IMCNT,COCNT)=0 K ^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",222,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",223,0)
 . I $P($G(^TMP("PSJ",$J,QQ,0)),U,11)]"" D
"RTN","PSBVDLU1",224,0)
 .. S COCNT=COCNT+1
"RTN","PSBVDLU1",225,0)
 .. M ^TMP("PSJTMP",$J,COCNT)=^TMP("PSJ",$J,QQ)
"RTN","PSBVDLU1",226,0)
 K ^TMP("PSJ",$J) M ^TMP("PSJ",$J)=^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",227,0)
 K ^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",228,0)
 S:'$D(^TMP("PSJ",$J)) ^TMP("PSJ",$J,1,0)=-1
"RTN","PSBVDLU1",229,0)
 Q
"RTN","PSBVDLU1",230,0)
 ;
"RTN","PSBVDLU1",231,0)
REMOVECO ;Rebuild TMP global from PSJBCMA, RETAIN IM ORDERS ONLY         *70
"RTN","PSBVDLU1",232,0)
 N QQ,IMCNT
"RTN","PSBVDLU1",233,0)
 S IMCNT=0 K ^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",234,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",235,0)
 . I $P($G(^TMP("PSJ",$J,QQ,0)),U,11)="" D  Q
"RTN","PSBVDLU1",236,0)
 .. S IMCNT=IMCNT+1
"RTN","PSBVDLU1",237,0)
 .. M ^TMP("PSJTMP",$J,IMCNT)=^TMP("PSJ",$J,QQ)
"RTN","PSBVDLU1",238,0)
 K ^TMP("PSJ",$J) M ^TMP("PSJ",$J)=^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",239,0)
 K ^TMP("PSJTMP",$J)
"RTN","PSBVDLU1",240,0)
 S:'$D(^TMP("PSJ",$J)) ^TMP("PSJ",$J,1,0)=-1
"RTN","PSBVDLU1",241,0)
 Q
"RTN","PSBVDLU1",242,0)
 ;
"RTN","PSBVDLU1",243,0)
MODELITE() ;
"RTN","PSBVDLU1",244,0)
 N ORDCNT,CLIN,ORDNO,STRT,STOP,STAT,PSBIMNOW,PSBIMDT
"RTN","PSBVDLU1",245,0)
 S ORDCNT=""
"RTN","PSBVDLU1",246,0)
 K ^TMP("PSJ",$J)
"RTN","PSBVDLU1",247,0)
 S PSBIMNOW=+$E($$NOW^XLFDT,1,10),PSBIMDT=$P(PSBIMNOW,".")
"RTN","PSBVDLU1",248,0)
 D EN^PSJBCMA(DFN,PSBIMNOW,PSBIMDT)
"RTN","PSBVDLU1",249,0)
 Q:^TMP("PSJ",$J,1,0)=-1 ""
"RTN","PSBVDLU1",250,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",251,0)
 . S CLIN=$P(^TMP("PSJ",$J,QQ,0),U,11)
"RTN","PSBVDLU1",252,0)
 . S ORDNO=$P(^TMP("PSJ",$J,QQ,0),U,3)
"RTN","PSBVDLU1",253,0)
 . S STRT=$P($P(^TMP("PSJ",$J,QQ,1),U,4),".")
"RTN","PSBVDLU1",254,0)
 . S STOP=$P($P(^TMP("PSJ",$J,QQ,1),U,5),".")
"RTN","PSBVDLU1",255,0)
 . S STAT=$P(^TMP("PSJ",$J,QQ,1),U,7)
"RTN","PSBVDLU1",256,0)
 . D:CLIN]""
"RTN","PSBVDLU1",257,0)
 .. I ORDNO'["P",(STAT="A"!(STAT="H")!(STAT="R")!(STAT="O")),STRT'>DT,STOP'<DT S $P(ORDCNT,U,2)=1 ;modelite display for held, renewed, and on call PSB*3*92
"RTN","PSBVDLU1",258,0)
 . D:CLIN=""
"RTN","PSBVDLU1",259,0)
 .. I ORDNO'["P",(STAT="A"!(STAT="H")!(STAT="R")!(STAT="O")),STRT'>DT,STOP'<DT S $P(ORDCNT,U)=1 ;modelite display for held and renewed, and on call PSB*3*92
"RTN","PSBVDLU1",260,0)
 Q ORDCNT
"RTN","PSBVDLU1",261,0)
 ;
"RTN","PSBVDLU1",262,0)
INITTAB ;*70
"RTN","PSBVDLU1",263,0)
 K ^TMP("PSB",$J,PSBTAB)
"RTN","PSBVDLU1",264,0)
 S ^TMP("PSB",$J,PSBTAB,0)=1
"RTN","PSBVDLU1",265,0)
 S ^TMP("PSB",$J,PSBTAB,1)="-1^No Administration(s) due at this time."
"RTN","PSBVDLU1",266,0)
 Q
"RTN","PSBVDLU1",267,0)
 ;
"RTN","PSBVDLU1",268,0)
FINDORD(BWDFWD,DFN,PSBDT,PSBTAB) ;Search a patient's orders Bwd or Fwd    *70
"RTN","PSBVDLU1",269,0)
 ; Find the next day that contains an Active admin time not Given.
"RTN","PSBVDLU1",270,0)
 ;
"RTN","PSBVDLU1",271,0)
 N QQ,SPDT,STARTDT,STDT,STOPDT,STPDT
"RTN","PSBVDLU1",272,0)
 S PSBSIOPI="",PSBCLINORD=1
"RTN","PSBVDLU1",273,0)
 N NODE1,ENDDT,STRDT,STOPDT,STDT,SPDT,STARTDT,STOPDT,SDT,QUIT,REC,QQ
"RTN","PSBVDLU1",274,0)
 N PSBWBEG,PSBWEND,PSBWADM,FOUND,GIVE,PDT
"RTN","PSBVDLU1",275,0)
 K ^TMP("PSJ",$J)
"RTN","PSBVDLU1",276,0)
 D EN^PSJBCMA(DFN,PSBDT,PSBDT),INCLUDCO^PSBVDLU1
"RTN","PSBVDLU1",277,0)
 Q:^TMP("PSJ",$J,1,0)=-1 -1
"RTN","PSBVDLU1",278,0)
 ;
"RTN","PSBVDLU1",279,0)
 ;read thru psj tmp and create start date xref
"RTN","PSBVDLU1",280,0)
 F QQ=0:0 S QQ=$O(^TMP("PSJ",$J,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",281,0)
 . S NODE1=$G(^TMP("PSJ",$J,QQ,1))
"RTN","PSBVDLU1",282,0)
 . Q:$P(NODE1,U,7)'="A"              ;not active sts
"RTN","PSBVDLU1",283,0)
 . S STRDT=$P($P(NODE1,U,4),"."),STDT(STRDT)=""
"RTN","PSBVDLU1",284,0)
 . S STPDT=$P($P(NODE1,U,5),"."),SPDT(STPDT)=""
"RTN","PSBVDLU1",285,0)
 S STARTDT=+$O(STDT(0))
"RTN","PSBVDLU1",286,0)
 Q:(BWDFWD=-1)&('STARTDT) -1
"RTN","PSBVDLU1",287,0)
 S STOPDT=+$O(SPDT(999999999),-1)
"RTN","PSBVDLU1",288,0)
 Q:(BWDFWD=1)&('STOPDT) -1
"RTN","PSBVDLU1",289,0)
 ;
"RTN","PSBVDLU1",290,0)
 D:BWDFWD=-1 LOOPBWD
"RTN","PSBVDLU1",291,0)
 D:BWDFWD=1 LOOPFWD
"RTN","PSBVDLU1",292,0)
 Q PDT
"RTN","PSBVDLU1",293,0)
 ;
"RTN","PSBVDLU1",294,0)
LOOPBWD ; Loop thru days backwards and quit when pass End date.    *70
"RTN","PSBVDLU1",295,0)
 S (REC,QUIT,FOUND)=0
"RTN","PSBVDLU1",296,0)
 F QQ=BWDFWD:BWDFWD S PDT=$$FMADD^XLFDT(PSBDT,QQ) Q:PDT<STARTDT  D  Q:FOUND!QUIT
"RTN","PSBVDLU1",297,0)
 . I PDT<STARTDT S QUIT=1 Q
"RTN","PSBVDLU1",298,0)
 . D INITTAB^PSBVDLU1
"RTN","PSBVDLU1",299,0)
 . S PSBWBEG=$P(PDT,".")_".0000"
"RTN","PSBVDLU1",300,0)
 . S PSBWEND=$P(PDT,".")_".2400"
"RTN","PSBVDLU1",301,0)
 . S PSBWADM=99999
"RTN","PSBVDLU1",302,0)
 . S PSBWADM=$$FMADD^XLFDT(PDT,"","",+PSBWADM)
"RTN","PSBVDLU1",303,0)
 . D:PSBTAB="UDTAB" EN^PSBVDLUD(DFN,PDT)
"RTN","PSBVDLU1",304,0)
 . D:PSBTAB="PBTAB" EN^PSBVDLPB(DFN,PDT)
"RTN","PSBVDLU1",305,0)
 . S FOUND=+$G(^TMP("PSB",$J,PSBTAB,2))          ;=dfn, if data found
"RTN","PSBVDLU1",306,0)
 . S GIVE=$P($G(^TMP("PSB",$J,PSBTAB,2)),U,13)   ;get give sts
"RTN","PSBVDLU1",307,0)
 . S:GIVE="G" FOUND=0                            ;skip, as was given
"RTN","PSBVDLU1",308,0)
 S:'FOUND PDT=-1
"RTN","PSBVDLU1",309,0)
 Q
"RTN","PSBVDLU1",310,0)
 ;
"RTN","PSBVDLU1",311,0)
LOOPFWD ; Loop thru days forwards and quit when pass End date.    *70
"RTN","PSBVDLU1",312,0)
 S (REC,QUIT,FOUND)=0
"RTN","PSBVDLU1",313,0)
 F QQ=BWDFWD:BWDFWD S PDT=$$FMADD^XLFDT(PSBDT,QQ) Q:PDT>STOPDT  D  Q:FOUND!QUIT
"RTN","PSBVDLU1",314,0)
 . I PDT>STOPDT S QUIT=1 Q
"RTN","PSBVDLU1",315,0)
 . D INITTAB^PSBVDLU1
"RTN","PSBVDLU1",316,0)
 . S PSBWBEG=$P(PDT,".")_".0000"
"RTN","PSBVDLU1",317,0)
 . S PSBWEND=$P(PDT,".")_".2400"
"RTN","PSBVDLU1",318,0)
 . S PSBWADM=99999
"RTN","PSBVDLU1",319,0)
 . S PSBWADM=$$FMADD^XLFDT(PDT,"","",+PSBWADM)
"RTN","PSBVDLU1",320,0)
 . D:PSBTAB="UDTAB" EN^PSBVDLUD(DFN,PDT)
"RTN","PSBVDLU1",321,0)
 . D:PSBTAB="PBTAB" EN^PSBVDLPB(DFN,PDT)
"RTN","PSBVDLU1",322,0)
 . S FOUND=+$G(^TMP("PSB",$J,PSBTAB,2))          ;=dfn, if data found
"RTN","PSBVDLU1",323,0)
 . S GIVE=$P($G(^TMP("PSB",$J,PSBTAB,2)),U,13)   ;get give sts
"RTN","PSBVDLU1",324,0)
 . S:GIVE="G" FOUND=0                            ;skip, as was given
"RTN","PSBVDLU1",325,0)
 S:'FOUND PDT=-1
"RTN","PSBVDLU1",326,0)
 Q
"RTN","PSBVDLU1",327,0)
 ;
"RTN","PSBVDLU1",328,0)
PATCHON(DFN,ORDR) ;check if any patches are still Given & Not Removed per this patient
"RTN","PSBVDLU1",329,0)
 ;  Return values:
"RTN","PSBVDLU1",330,0)
 ;    Func:   True/False (1/0) for patches do exist on a patient.
"RTN","PSBVDLU1",331,0)
 ;    ORDR(): array element "C"linic or "I"npatient order = 1 when
"RTN","PSBVDLU1",332,0)
 ;             at least 1 order of this type exists.
"RTN","PSBVDLU1",333,0)
 ;
"RTN","PSBVDLU1",334,0)
 N ON,DAYSBK,ORDNO,STOPDT,IMCL
"RTN","PSBVDLU1",335,0)
 S ON=0,ORDR("C")=0,ORDR("I")=0
"RTN","PSBVDLU1",336,0)
 Q:'$D(^PSB(53.79,"APATCH",DFN)) ON
"RTN","PSBVDLU1",337,0)
 F QQ=0:0 S QQ=$O(^PSB(53.79,"APATCH",DFN,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",338,0)
 . F RR=0:0 S RR=$O(^PSB(53.79,"APATCH",DFN,QQ,RR)) Q:'RR  D
"RTN","PSBVDLU1",339,0)
 .. I $P(^PSB(53.79,RR,0),U,9)="G" D
"RTN","PSBVDLU1",340,0)
 ... S ORDNO=$P(^PSB(53.79,RR,.1),"^")
"RTN","PSBVDLU1",341,0)
 ... D CLEAN^PSBVT
"RTN","PSBVDLU1",342,0)
 ... D PSJ1^PSBVT(DFN,ORDNO) Q:'$G(PSBOSP)
"RTN","PSBVDLU1",343,0)
 ... S STOPDT=PSBOSP
"RTN","PSBVDLU1",344,0)
 ... S DAYSBK=+($$GET^XPAR("DIV","PSB VDL PATCH DAYS"))
"RTN","PSBVDLU1",345,0)
 ...; simulate PSBVDLPA logic to look back Kernel param days
"RTN","PSBVDLU1",346,0)
 ... I DAYSBK D NOW^%DTC I $$FMADD^XLFDT($P(STOPDT,"."),DAYSBK)<X Q
"RTN","PSBVDLU1",347,0)
 ... S ON=1
"RTN","PSBVDLU1",348,0)
 ... S IMCL=$S($G(PSBCLORD)]"":"C",1:"I"),ORDR(IMCL)=1
"RTN","PSBVDLU1",349,0)
 ... D CLEAN^PSBVT
"RTN","PSBVDLU1",350,0)
 Q ON
"RTN","PSBVDLU1",351,0)
 ;
"RTN","PSBVDLU1",352,0)
INFUSING(DFN,ORDR) ;check if any IV's have bags infusing per this patient
"RTN","PSBVDLU1",353,0)
 ;  Return values:
"RTN","PSBVDLU1",354,0)
 ;    Func:   True/False (1/0) for patches do exist on a patient.
"RTN","PSBVDLU1",355,0)
 ;    ORDR(): array element "C"linic or "I"npatient order = 1 when
"RTN","PSBVDLU1",356,0)
 ;             at least 1 order of this type exists.
"RTN","PSBVDLU1",357,0)
 ;
"RTN","PSBVDLU1",358,0)
 N ON,DAYSBK,ORDNO,STOPDT,IMCL,PSBCLIEN
"RTN","PSBVDLU1",359,0)
 S ON=0,ORDR("C")=0,ORDR("I")=0
"RTN","PSBVDLU1",360,0)
 Q:'$D(^PSB(53.79,"AINFUSING",DFN)) ON
"RTN","PSBVDLU1",361,0)
 F QQ=0:0 S QQ=$O(^PSB(53.79,"AINFUSING",DFN,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",362,0)
 . F RR=0:0 S RR=$O(^PSB(53.79,"AINFUSING",DFN,QQ,RR)) Q:'RR  D
"RTN","PSBVDLU1",363,0)
 .. S ORDNO=$P(^PSB(53.79,RR,.1),"^")
"RTN","PSBVDLU1",364,0)
 .. D CLEAN^PSBVT
"RTN","PSBVDLU1",365,0)
 .. D PSJ1^PSBVT(DFN,ORDNO) Q:'$G(PSBOSP)
"RTN","PSBVDLU1",366,0)
 .. S STOPDT=PSBOSP
"RTN","PSBVDLU1",367,0)
 .. ; simulate IV VDL logic to look 3 days back for IM meds or 7 days
"RTN","PSBVDLU1",368,0)
 .. ; for CO med.
"RTN","PSBVDLU1",369,0)
 .. D NOW^%DTC
"RTN","PSBVDLU1",370,0)
 .. I '$G(PSBCLIEN),$$FMADD^XLFDT($P(STOPDT,"."),3)<X Q
"RTN","PSBVDLU1",371,0)
 .. I $G(PSBCLIEN),$$FMADD^XLFDT($P(STOPDT,"."),7)<X Q
"RTN","PSBVDLU1",372,0)
 .. S ON=1
"RTN","PSBVDLU1",373,0)
 .. S IMCL=$S($G(PSBCLORD)]"":"C",1:"I"),ORDR(IMCL)=1
"RTN","PSBVDLU1",374,0)
 .. D CLEAN^PSBVT
"RTN","PSBVDLU1",375,0)
 Q ON
"RTN","PSBVDLU1",376,0)
 ;
"RTN","PSBVDLU1",377,0)
STOPPED(DFN,ORDR) ;check if any IV's have bags infusing per this patient
"RTN","PSBVDLU1",378,0)
 ;  Return values:
"RTN","PSBVDLU1",379,0)
 ;    Func:   True/False (1/0) for patches do exist on a patient.
"RTN","PSBVDLU1",380,0)
 ;    ORDR(): array element "C"linic or "I"npatient order = 1 when
"RTN","PSBVDLU1",381,0)
 ;             at least 1 order of this type exists.
"RTN","PSBVDLU1",382,0)
 ;
"RTN","PSBVDLU1",383,0)
 N ON,DAYSBK,ORDNO,STOPDT,IMCL,PSBCLIEN
"RTN","PSBVDLU1",384,0)
 S ON=0,ORDR("C")=0,ORDR("I")=0
"RTN","PSBVDLU1",385,0)
 Q:'$D(^PSB(53.79,"ASTOPPED",DFN)) ON
"RTN","PSBVDLU1",386,0)
 F QQ=0:0 S QQ=$O(^PSB(53.79,"ASTOPPED",DFN,QQ)) Q:'QQ  D
"RTN","PSBVDLU1",387,0)
 . F RR=0:0 S RR=$O(^PSB(53.79,"ASTOPPED",DFN,QQ,RR)) Q:'RR  D
"RTN","PSBVDLU1",388,0)
 .. S ORDNO=$P(^PSB(53.79,RR,.1),"^")
"RTN","PSBVDLU1",389,0)
 .. D CLEAN^PSBVT
"RTN","PSBVDLU1",390,0)
 .. D PSJ1^PSBVT(DFN,ORDNO) Q:'$G(PSBOSP)
"RTN","PSBVDLU1",391,0)
 .. S STOPDT=PSBOSP
"RTN","PSBVDLU1",392,0)
 .. ; simulate IV VDL logic to look 3 days back for IM meds or 7 days
"RTN","PSBVDLU1",393,0)
 .. ; for CO med.
"RTN","PSBVDLU1",394,0)
 .. D NOW^%DTC
"RTN","PSBVDLU1",395,0)
 .. I 'PSBCLIEN,$$FMADD^XLFDT($P(STOPDT,"."),3)<X Q
"RTN","PSBVDLU1",396,0)
 .. I PSBCLIEN,$$FMADD^XLFDT($P(STOPDT,"."),7)<X Q
"RTN","PSBVDLU1",397,0)
 .. S ON=1
"RTN","PSBVDLU1",398,0)
 .. S IMCL=$S($G(PSBCLORD)]"":"C",1:"I"),ORDR(IMCL)=1
"RTN","PSBVDLU1",399,0)
 .. D CLEAN^PSBVT
"RTN","PSBVDLU1",400,0)
 Q ON
"RTN","PSBVDLU1",401,0)
 ;
"RTN","PSBVDLU1",402,0)
REMOVETM(MRR,STYP) ;** Check if MRR med & add to Results array (34,35)   *83
"RTN","PSBVDLU1",403,0)
 ;
"RTN","PSBVDLU1",404,0)
 ; Add MRR code to Results(34) and if MRR > 0 then add remove time
"RTN","PSBVDLU1",405,0)
 ; to Results(35).
"RTN","PSBVDLU1",406,0)
 ;
"RTN","PSBVDLU1",407,0)
 N RMDT,RMTIM
"RTN","PSBVDLU1",408,0)
 S $P(PSBREC,U,34)=MRR           ;set MRR flag in 34
"RTN","PSBVDLU1",409,0)
 ;
"RTN","PSBVDLU1",410,0)
 Q:'MRR                          ;Quit, not MRR med, no remove time
"RTN","PSBVDLU1",411,0)
 Q:(PSBSCHT="OC")!(PSBSCHT="P")  ;Quit, schd types have no admin times
"RTN","PSBVDLU1",412,0)
 Q:$P(PSBREC,U,35)               ;Quit, already set from get MRR rtns
"RTN","PSBVDLU1",413,0)
 ;
"RTN","PSBVDLU1",414,0)
 ; Remove date/time Calculation method will correctly compute a future
"RTN","PSBVDLU1",415,0)
 ;  Remove date/time per this admin time, by using the FMADD function
"RTN","PSBVDLU1",416,0)
 ;  to add the DOA value to the admin time.  DOA value is the time the
"RTN","PSBVDLU1",417,0)
 ;  med is to be on the patient and must be removed after that time.
"RTN","PSBVDLU1",418,0)
 ;
"RTN","PSBVDLU1",419,0)
 ; **Notice: Sched Type of "O", Remove time = Order Stop date/time
"RTN","PSBVDLU1",420,0)
 ;
"RTN","PSBVDLU1",421,0)
 ;   e.g.  if sched is Q7D and Freq=10080, then DOA=10080 also, and is
"RTN","PSBVDLU1",422,0)
 ;         returned by PSJBCMA1
"RTN","PSBVDLU1",423,0)
 ;
"RTN","PSBVDLU1",424,0)
 S ADMTIM=$P(PSBREC,U,14)                      ;admin time
"RTN","PSBVDLU1",425,0)
 S:PSBDOA RMTIM=$$FMADD^XLFDT(ADMTIM,,,PSBDOA) ;calc RM time if DOA
"RTN","PSBVDLU1",426,0)
 I (PSBDOA<1!(PSBOSP>$$NOW^XLFDT)),STYP="O" S RMTIM=PSBOSP ;RM time for One-Time, non-expired orders, PSB*3*92 
"RTN","PSBVDLU1",427,0)
 S $P(PSBREC,U,35)=$G(RMTIM)                   ;Add RM date/time
"RTN","PSBVDLU1",428,0)
 Q
"VER")
8.0^22.0
"BLD",10410,6)
^80
**END**
**END**

