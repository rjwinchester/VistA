Released PSB*3*88 SEQ #77
Extracted from mail message
**KIDS**:PSB*3.0*88^

**INSTALL NAME**
PSB*3.0*88
"BLD",10089,0)
PSB*3.0*88^BAR CODE MED ADMIN^0^3160817^y
"BLD",10089,1,0)
^^16^16^3160817^
"BLD",10089,1,1,0)
This patch will resolve the following issues:
"BLD",10089,1,2,0)
 
"BLD",10089,1,3,0)
1. The Bar code Medication Administration (BCMA) Due List Report does not
"BLD",10089,1,4,0)
   display Intravenous Piggy Back (IVPB) orders  with an Inpatient 
"BLD",10089,1,5,0)
   Pharmacy Status of "On Call".
"BLD",10089,1,6,0)
 
"BLD",10089,1,7,0)
2. The Missed Medication Report shows missed administrations prior to an 
"BLD",10089,1,8,0)
   edit when an order's Administration time are edited.
"BLD",10089,1,9,0)
 
"BLD",10089,1,10,0)
3. The BCMA Drug IEN Synonym Check [PSB DRUG IEN CHECK] option needs to
"BLD",10089,1,11,0)
   be added to the Medication Administration Menu Pharmacy [PSB PHARMACY]
"BLD",10089,1,12,0)
   menu.
"BLD",10089,1,13,0)
 
"BLD",10089,1,14,0)
4. The IV Bag Detail on the IV tab does not display for a patient when 
"BLD",10089,1,15,0)
   opening the patient's Virtual Due List (VDL) after having another 
"BLD",10089,1,16,0)
   patient's VDL open.
"BLD",10089,4,0)
^9.64PA^^
"BLD",10089,6.3)
11
"BLD",10089,"ABPKG")
n
"BLD",10089,"INID")
^n
"BLD",10089,"INIT")
ADDMENU^PSB388P
"BLD",10089,"KRN",0)
^9.67PA^779.2^20
"BLD",10089,"KRN",.4,0)
.4
"BLD",10089,"KRN",.401,0)
.401
"BLD",10089,"KRN",.402,0)
.402
"BLD",10089,"KRN",.403,0)
.403
"BLD",10089,"KRN",.5,0)
.5
"BLD",10089,"KRN",.84,0)
.84
"BLD",10089,"KRN",3.6,0)
3.6
"BLD",10089,"KRN",3.8,0)
3.8
"BLD",10089,"KRN",9.2,0)
9.2
"BLD",10089,"KRN",9.8,0)
9.8
"BLD",10089,"KRN",9.8,"NM",0)
^9.68A^5^4
"BLD",10089,"KRN",9.8,"NM",1,0)
PSBMLVAL^^0^B29312769
"BLD",10089,"KRN",9.8,"NM",2,0)
PSBOMM2^^0^B40652428
"BLD",10089,"KRN",9.8,"NM",4,0)
PSBRPC2^^0^B48881506
"BLD",10089,"KRN",9.8,"NM",5,0)
PSB388P^^0^B1943420
"BLD",10089,"KRN",9.8,"NM","B","PSB388P",5)

"BLD",10089,"KRN",9.8,"NM","B","PSBMLVAL",1)

"BLD",10089,"KRN",9.8,"NM","B","PSBOMM2",2)

"BLD",10089,"KRN",9.8,"NM","B","PSBRPC2",4)

"BLD",10089,"KRN",19,0)
19
"BLD",10089,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",10089,"KRN",19,"NM",1,0)
PSB DRUG IEN CHECK^^0
"BLD",10089,"KRN",19,"NM","B","PSB DRUG IEN CHECK",1)

"BLD",10089,"KRN",19.1,0)
19.1
"BLD",10089,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",10089,"KRN",101,0)
101
"BLD",10089,"KRN",409.61,0)
409.61
"BLD",10089,"KRN",771,0)
771
"BLD",10089,"KRN",779.2,0)
779.2
"BLD",10089,"KRN",870,0)
870
"BLD",10089,"KRN",8989.51,0)
8989.51
"BLD",10089,"KRN",8989.52,0)
8989.52
"BLD",10089,"KRN",8994,0)
8994
"BLD",10089,"KRN","B",.4,.4)

"BLD",10089,"KRN","B",.401,.401)

"BLD",10089,"KRN","B",.402,.402)

"BLD",10089,"KRN","B",.403,.403)

"BLD",10089,"KRN","B",.5,.5)

"BLD",10089,"KRN","B",.84,.84)

"BLD",10089,"KRN","B",3.6,3.6)

"BLD",10089,"KRN","B",3.8,3.8)

"BLD",10089,"KRN","B",9.2,9.2)

"BLD",10089,"KRN","B",9.8,9.8)

"BLD",10089,"KRN","B",19,19)

"BLD",10089,"KRN","B",19.1,19.1)

"BLD",10089,"KRN","B",101,101)

"BLD",10089,"KRN","B",409.61,409.61)

"BLD",10089,"KRN","B",771,771)

"BLD",10089,"KRN","B",779.2,779.2)

"BLD",10089,"KRN","B",870,870)

"BLD",10089,"KRN","B",8989.51,8989.51)

"BLD",10089,"KRN","B",8989.52,8989.52)

"BLD",10089,"KRN","B",8994,8994)

"BLD",10089,"QDEF")
^^^^^^^^
"BLD",10089,"QUES",0)
^9.62^^
"BLD",10089,"REQB",0)
^9.611^3^2
"BLD",10089,"REQB",2,0)
PSB*3.0*74^2
"BLD",10089,"REQB",3,0)
PSB*3.0*61^2
"BLD",10089,"REQB","B","PSB*3.0*61",3)

"BLD",10089,"REQB","B","PSB*3.0*74",2)

"INIT")
ADDMENU^PSB388P
"KRN",19,14031,-1)
0^1
"KRN",19,14031,0)
PSB DRUG IEN CHECK^BCMA Drug IEN Synonym Check^^R^^^^^^^^BAR CODE MED ADMIN
"KRN",19,14031,1,0)
^^3^3^3160114^
"KRN",19,14031,1,1,0)
This option checks a specific drug in the DRUG (#50) file by using its 
"KRN",19,14031,1,2,0)
IEN to search for other entries that match or contain the IEN as its
"KRN",19,14031,1,3,0)
synonym.
"KRN",19,14031,25)
SCANNER^PSBMLTS
"KRN",19,14031,"U")
BCMA DRUG IEN SYNONYM CHECK
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",550,-1)
1^1
"PKG",550,0)
BAR CODE MED ADMIN^PSB^BAR CODE MEDICATION ADMINISTRATION
"PKG",550,20,0)
^9.402P^^
"PKG",550,22,0)
^9.49I^1^1
"PKG",550,22,1,0)
3.0^3040224^3040311^66481
"PKG",550,22,1,"PAH",1,0)
88^3160817
"PKG",550,22,1,"PAH",1,1,0)
^^16^16^3160817
"PKG",550,22,1,"PAH",1,1,1,0)
This patch will resolve the following issues:
"PKG",550,22,1,"PAH",1,1,2,0)
 
"PKG",550,22,1,"PAH",1,1,3,0)
1. The Bar code Medication Administration (BCMA) Due List Report does not
"PKG",550,22,1,"PAH",1,1,4,0)
   display Intravenous Piggy Back (IVPB) orders  with an Inpatient 
"PKG",550,22,1,"PAH",1,1,5,0)
   Pharmacy Status of "On Call".
"PKG",550,22,1,"PAH",1,1,6,0)
 
"PKG",550,22,1,"PAH",1,1,7,0)
2. The Missed Medication Report shows missed administrations prior to an 
"PKG",550,22,1,"PAH",1,1,8,0)
   edit when an order's Administration time are edited.
"PKG",550,22,1,"PAH",1,1,9,0)
 
"PKG",550,22,1,"PAH",1,1,10,0)
3. The BCMA Drug IEN Synonym Check [PSB DRUG IEN CHECK] option needs to
"PKG",550,22,1,"PAH",1,1,11,0)
   be added to the Medication Administration Menu Pharmacy [PSB PHARMACY]
"PKG",550,22,1,"PAH",1,1,12,0)
   menu.
"PKG",550,22,1,"PAH",1,1,13,0)
 
"PKG",550,22,1,"PAH",1,1,14,0)
4. The IV Bag Detail on the IV tab does not display for a patient when 
"PKG",550,22,1,"PAH",1,1,15,0)
   opening the patient's Virtual Due List (VDL) after having another 
"PKG",550,22,1,"PAH",1,1,16,0)
   patient's VDL open.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","PSB388P")
0^5^B1943420^n/a
"RTN","PSB388P",1,0)
PSB388P ;ALBANY/BJR-Add Menu ;May 2016
"RTN","PSB388P",2,0)
 ;;3.0;BAR CODE MED ADMIN;**88**;Mar 2004;Build 11
"RTN","PSB388P",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PSB388P",4,0)
 ;
"RTN","PSB388P",5,0)
 ;References to ^XPDMENU supported by DBIA #1157
"RTN","PSB388P",6,0)
 Q
"RTN","PSB388P",7,0)
 ;
"RTN","PSB388P",8,0)
 ;Post-init routine to add new option to primary menu
"RTN","PSB388P",9,0)
 ;
"RTN","PSB388P",10,0)
 ;
"RTN","PSB388P",11,0)
ADDMENU ;Add option to main menu
"RTN","PSB388P",12,0)
 N PSBOM,PSBMN,PSBOPT,PSBCHK
"RTN","PSB388P",13,0)
 S PSBOM="" F PSBOM=1:1 S PSBMN=$P($TEXT(MENULST+PSBOM),";;",2),PSBOPT=$P($TEXT(OPTLIST+PSBOM),";;",2) Q:PSBMN="$$END"!(PSBOM="")  D
"RTN","PSB388P",14,0)
 .S PSBCHK=$$ADD^XPDMENU(PSBMN,PSBOPT,11)
"RTN","PSB388P",15,0)
 I PSBCHK D BMES^XPDUTL("The PSB DRUG IEN CHECK option has been added to the PSB PHARMACY menu.")
"RTN","PSB388P",16,0)
 I 'PSBCHK D BMES^XPDUTL("The PSB DRUG IEN CHECK option could not be added to the PSB PHARMACY menu.")
"RTN","PSB388P",17,0)
 Q
"RTN","PSB388P",18,0)
 ;
"RTN","PSB388P",19,0)
OPTLIST ;Options list
"RTN","PSB388P",20,0)
 ;;PSB DRUG IEN CHECK
"RTN","PSB388P",21,0)
 ;;$$END
"RTN","PSB388P",22,0)
 ;
"RTN","PSB388P",23,0)
MENULST ;Menu List
"RTN","PSB388P",24,0)
 ;;PSB PHARMACY
"RTN","PSB388P",25,0)
 ;;$$END
"RTN","PSB388P",26,0)
 ;
"RTN","PSBMLVAL")
0^1^B29312769^B28829804
"RTN","PSBMLVAL",1,0)
PSBMLVAL ;BIRMINGHAM/EFC-BCMA MED LOG VALIDATION ;Mar 2004
"RTN","PSBMLVAL",2,0)
 ;;3.0;BAR CODE MED ADMIN;**88**;Mar 2004;Build 11
"RTN","PSBMLVAL",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PSBMLVAL",4,0)
 ;
"RTN","PSBMLVAL",5,0)
 ;
"RTN","PSBMLVAL",6,0)
VAL(RESULTS,DFN,PSBIEN,PSBTYPE,PSBADMIN) ;
"RTN","PSBMLVAL",7,0)
 ;
"RTN","PSBMLVAL",8,0)
 ; RPC: PSB VALIDATE ORDER
"RTN","PSBMLVAL",9,0)
 ;
"RTN","PSBMLVAL",10,0)
 ; Description: Final check of order against an actual administration
"RTN","PSBMLVAL",11,0)
 ;              date/time used immediately after scanned med has been
"RTN","PSBMLVAL",12,0)
 ;              validated to be a good unadministered order and by the
"RTN","PSBMLVAL",13,0)
 ;              PSBODL (Due List) output.
"RTN","PSBMLVAL",14,0)
 ;
"RTN","PSBMLVAL",15,0)
 ; Variables:   DFN:      Patient IEN
"RTN","PSBMLVAL",16,0)
 ;              PSBIEN:   Order IEN
"RTN","PSBMLVAL",17,0)
 ;              PSBTYPE:  U:Unit Dose/V:IV
"RTN","PSBMLVAL",18,0)
 ;              PSBADMIN: Scheduled Administration Time
"RTN","PSBMLVAL",19,0)
 ;
"RTN","PSBMLVAL",20,0)
 N PSBOKAY,PSBORD,PSBSCHT,PSBOST,PSBOSP,PSBDT,PSBDA,PSBNOW
"RTN","PSBMLVAL",21,0)
 ;
"RTN","PSBMLVAL",22,0)
 K PSBORD
"RTN","PSBMLVAL",23,0)
 D PSJ1^PSBVT(DFN,PSBIEN_PSBTYPE)
"RTN","PSBMLVAL",24,0)
 S PSBCNT=0
"RTN","PSBMLVAL",25,0)
 S PSBOKAY="-1^***Unable to determine administration" ; Default Flag
"RTN","PSBMLVAL",26,0)
 D NOW^%DTC
"RTN","PSBMLVAL",27,0)
 ;
"RTN","PSBMLVAL",28,0)
 ;
"RTN","PSBMLVAL",29,0)
 I PSBSCHT'="O"&(%>PSBOSP) S RESULTS(0)="-1^Order Not Active",PSBCNT=2 Q
"RTN","PSBMLVAL",30,0)
 ; Validate an IV
"RTN","PSBMLVAL",31,0)
 I PSBONX?.N1"V" D  S RESULTS(0)=PSBOKAY Q
"RTN","PSBMLVAL",32,0)
 .I PSBOSTS'="A"&(PSBOSTS'="R")&(PSBOSTS'="O") S PSBOKAY="-1^Order Not Active",PSBCNT=2 Q  ;Include On Call Orders, PSB*3*88
"RTN","PSBMLVAL",33,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE",PSBCNT=2 Q
"RTN","PSBMLVAL",34,0)
 .I PSBSCHT="O" D  Q  ; Make sure One Time is not given.
"RTN","PSBMLVAL",35,0)
 ..I $D(^PSB(53.79,"AORD",DFN,PSBONX)) S PSBOKAY="-1^Already Given",PSBCNT=2
"RTN","PSBMLVAL",36,0)
 ..E  S PSBOKAY="0^Okay to administer"
"RTN","PSBMLVAL",37,0)
 .S PSBOKAY="0^Okay to administer"
"RTN","PSBMLVAL",38,0)
 ; Validate a Continuous Order
"RTN","PSBMLVAL",39,0)
 D:PSBSCHT="C"
"RTN","PSBMLVAL",40,0)
 .S (PSBGVN,X,Y)=""
"RTN","PSBMLVAL",41,0)
 .I PSBOSTS'="A"&(PSBOSTS'="R") S PSBOKAY="-1^Order Not Active",PSBCNT=2 Q
"RTN","PSBMLVAL",42,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE",PSBCNT=2 Q
"RTN","PSBMLVAL",43,0)
 .I $D(^PSB(53.79,"AORD",DFN,PSBIEN_PSBTYPE,PSBADMIN)) D  Q:X
"RTN","PSBMLVAL",44,0)
 ..S X=$O(^PSB(53.79,"AORD",DFN,PSBIEN_PSBTYPE,PSBADMIN,X)) Q:'X
"RTN","PSBMLVAL",45,0)
 ..S X=$S($P($G(^PSB(53.79,+X,0)),U,9)="G":1,1:0) Q:'X
"RTN","PSBMLVAL",46,0)
 ..S PSBOKAY="-1^Dose already on medication log",PSBCNT=2
"RTN","PSBMLVAL",47,0)
 .; Minutes before
"RTN","PSBMLVAL",48,0)
 .S PSBWIN1=$$GET^XPAR("DIV","PSB ADMIN BEFORE")*-1
"RTN","PSBMLVAL",49,0)
 .; Minutes After
"RTN","PSBMLVAL",50,0)
 .S PSBWIN2=$$GET^XPAR("DIV","PSB ADMIN AFTER")
"RTN","PSBMLVAL",51,0)
 .D NOW^%DTC S PSBMIN=$$DIFF^PSBUTL(PSBADMIN,%)
"RTN","PSBMLVAL",52,0)
 .; PENDING A PC SOLUTION!
"RTN","PSBMLVAL",53,0)
 .I PSBMIN<PSBWIN1 S PSBOKAY="1^Admin is "_(PSBMIN*-1)_" minutes before the scheduled administration time" Q
"RTN","PSBMLVAL",54,0)
 .I PSBMIN>PSBWIN2 S PSBOKAY="1^Admin is "_(PSBMIN)_" minutes after the scheduled administration time" Q
"RTN","PSBMLVAL",55,0)
 .S PSBOKAY="0^Okay to administer"
"RTN","PSBMLVAL",56,0)
 ; Validate a PRN Order
"RTN","PSBMLVAL",57,0)
 D:PSBSCHT="P"
"RTN","PSBMLVAL",58,0)
 .I PSBOSTS'="A"&(PSBOSTS'="R") S PSBOKAY="-1^Order Not Active",PSBCNT=2 Q
"RTN","PSBMLVAL",59,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE",PSBCNT=2 Q
"RTN","PSBMLVAL",60,0)
 .; CHECK Q4H STUFF SEND 1^TO SOON IF TOO SOON.
"RTN","PSBMLVAL",61,0)
 .S PSBOKAY="1^Brief Administration History"
"RTN","PSBMLVAL",62,0)
 .; Get Last Four Givens
"RTN","PSBMLVAL",63,0)
 .S PSBDT=""
"RTN","PSBMLVAL",64,0)
 .F  S PSBDT=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,PSBDT),-1) Q:PSBDT=""  D
"RTN","PSBMLVAL",65,0)
 ..S PSBDA=""
"RTN","PSBMLVAL",66,0)
 ..F  S PSBDA=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,PSBDT,PSBDA),-1) Q:'PSBDA  D
"RTN","PSBMLVAL",67,0)
 ...Q:$P(^PSB(53.79,PSBDA,0),U,9)="N"
"RTN","PSBMLVAL",68,0)
 ...S X=$$GET1^DIQ(53.79,PSBDA_",",.06)_"  "
"RTN","PSBMLVAL",69,0)
 ...S X=X_$$GET1^DIQ(53.79,PSBDA_",",.09)_"  "
"RTN","PSBMLVAL",70,0)
 ...S X=X_$$GET1^DIQ(53.79,PSBDA_",",.12)_"  "
"RTN","PSBMLVAL",71,0)
 ...S X=X_$$GET1^DIQ(53.79,PSBDA_",",.21)_"  "
"RTN","PSBMLVAL",72,0)
 ...S X=X_$$GET1^DIQ(53.79,PSBDA_",",.16)_"  "
"RTN","PSBMLVAL",73,0)
 ...S PSBOKAY($O(PSBOKAY(""),-1)+1)=X
"RTN","PSBMLVAL",74,0)
 ...S:$D(PSBOKAY(4)) PSBDT=0
"RTN","PSBMLVAL",75,0)
 ; Validate a One-Time Order
"RTN","PSBMLVAL",76,0)
 D:PSBSCHT="O"
"RTN","PSBMLVAL",77,0)
 .S (PSBGVN,X,Y)=""
"RTN","PSBMLVAL",78,0)
 .F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1)  Q:'X  D
"RTN","PSBMLVAL",79,0)
 ..F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  S:($P(^PSB(53.79,Y,.1),U)=PSBONX)&($P(^PSB(53.79,Y,0),U,9)="G") PSBGVN=1,(X,Y)=0
"RTN","PSBMLVAL",80,0)
 .I PSBGVN S PSBOKAY="-1^Dose Already on medication Log",PSBCNT=2 Q
"RTN","PSBMLVAL",81,0)
 .; One Time are automatically expired so we don't check STATUS here
"RTN","PSBMLVAL",82,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE",PSBCNT=2 Q
"RTN","PSBMLVAL",83,0)
 .S PSBOKAY="0^Okay to administer"
"RTN","PSBMLVAL",84,0)
 ; Validate an On Call Order
"RTN","PSBMLVAL",85,0)
 D:PSBSCHT="OC"
"RTN","PSBMLVAL",86,0)
 .S PSBOKAY="0^Okay to administer",(PSBGVN,X,Y)=""
"RTN","PSBMLVAL",87,0)
 .F  S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X),-1)  Q:'X  D
"RTN","PSBMLVAL",88,0)
 ..F  S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,X,Y),-1) Q:'Y  S:$P(^PSB(53.79,Y,.1),U)=PSBONX PSBGVN=1,(X,Y)=0
"RTN","PSBMLVAL",89,0)
 .I PSBGVN&('$$GET^XPAR("DIV","PSB ADMIN MULTIPLE ONCALL")) S PSBOKAY="-1^Dose Already on medication Log",PSBCNT=2 Q
"RTN","PSBMLVAL",90,0)
 .I PSBOSTS'="A"&(PSBOSTS'="R") S PSBOKAY="-1^Order Not Active",PSBCNT=2 Q
"RTN","PSBMLVAL",91,0)
 .I PSBNGF S PSBOKAY="-1^marked DO NOT GIVE",PSBCNT=2 Q
"RTN","PSBMLVAL",92,0)
 .S PSBOKAY="0^Okay to administer"
"RTN","PSBMLVAL",93,0)
 ;
"RTN","PSBMLVAL",94,0)
 D:+PSBOKAY'=-1
"RTN","PSBMLVAL",95,0)
 .N PSBDIFF,Y,X,PSBSTUS
"RTN","PSBMLVAL",96,0)
 .; Ok, now we know it is on-call or cont and not on the log.
"RTN","PSBMLVAL",97,0)
 .D:(PSBSCHT="C")!(PSBSCHT="OC"&('$G(PSBGVN)))
"RTN","PSBMLVAL",98,0)
 ..S Y=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,""),-1)
"RTN","PSBMLVAL",99,0)
 ..S PSBDIFF=$$FMDIFF^XLFDT($$NOW^XLFDT(),Y,2)
"RTN","PSBMLVAL",100,0)
 ..Q:PSBDIFF>7200  ; Greater than 2 hours
"RTN","PSBMLVAL",101,0)
 ..;Check for the status of the medication and insert status in the text
"RTN","PSBMLVAL",102,0)
 ..I Y]"" S X=$O(^PSB(53.79,"AOIP",DFN,PSBOIT,Y,""),-1),PSBSTUS=$P(^PSB(53.79,X,0),U,9)
"RTN","PSBMLVAL",103,0)
 ..S PSBSTUS=$S(PSBSTUS="G":"GIVEN",PSBSTUS="H":"HELD",1:"REFUSED")
"RTN","PSBMLVAL",104,0)
 ..S Y="*** NOTICE, "_PSBOITX_" was "_PSBSTUS_" "_(PSBDIFF\60)_" minutes ago."
"RTN","PSBMLVAL",105,0)
 ..I +PSBOKAY=1 S PSBOKAY(1)=Y
"RTN","PSBMLVAL",106,0)
 ..E  S PSBOKAY="1^"_Y
"RTN","PSBMLVAL",107,0)
 ;
"RTN","PSBMLVAL",108,0)
 D NOW^%DTC
"RTN","PSBMLVAL",109,0)
 I PSBSCHT'="O"&(%<($$FMADD^XLFDT(PSBOST,"","",$$GET^XPAR("ALL","PSB ADMIN BEFORE")*-1))) S RESULTS(0)="-1^Order Not Active" I PSBCNT=0 S PSBCNT=1 Q
"RTN","PSBMLVAL",110,0)
 ;
"RTN","PSBMLVAL",111,0)
 S RESULTS(0)=PSBOKAY
"RTN","PSBMLVAL",112,0)
 F X=1:1 Q:'$D(PSBOKAY(X))  S RESULTS($O(RESULTS(""),-1)+1)=PSBOKAY(X)
"RTN","PSBMLVAL",113,0)
 Q
"RTN","PSBMLVAL",114,0)
 ;
"RTN","PSBOMM2")
0^2^B40652428^B40365491
"RTN","PSBOMM2",1,0)
PSBOMM2 ;BIRMINGHAM/EFC-MISSED MEDS ;Mar 2004
"RTN","PSBOMM2",2,0)
 ;;3.0;BAR CODE MED ADMIN;**26,32,51,62,74,88**;Mar 2004;Build 11
"RTN","PSBOMM2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PSBOMM2",4,0)
 ;
"RTN","PSBOMM2",5,0)
MISSED(PSBADMN,PSBEDIT,PSBXDT) ;
"RTN","PSBOMM2",6,0)
 N PSBMISD,PSBAUDT,PSBSTRT2
"RTN","PSBOMM2",7,0)
 S PSBSTRT2=(PSBXDT\1) F  D  Q:PSBODD  S PSBSTRT2=$$FMADD^XLFDT(PSBSTRT2,1) Q:PSBSTRT2>PSBSTOP
"RTN","PSBOMM2",8,0)
 .F Y=1:1:$L(PSBADMN,"-") S PSBDT=+("."_$P(PSBADMN,"-",Y))+(PSBSTRT2) D
"RTN","PSBOMM2",9,0)
 ..S PSBMISD=$$CHECK(PSBDT)
"RTN","PSBOMM2",10,0)
 ..;Check Audited Admin Times for Missed Med
"RTN","PSBOMM2",11,0)
 ..I PSBMISD F I=1:1:$P(PSBOACTL(0),U,4) I $P($G(PSBOACTL(I,1)),U,3)["ADMIN TIMES" D  Q:'PSBMISD
"RTN","PSBOMM2",12,0)
 ...Q:$P(PSBOACTL(I,1),U)<PSBSTRT2
"RTN","PSBOMM2",13,0)
 ...;Q:$P(PSBOACTL(I,1),U)>((PSBSTOP\1)+.2400) - remove ending date check, all audits should affect report, PSB*3*88
"RTN","PSBOMM2",14,0)
 ...Q:$P(PSBOACTL(I,1),U)<PSBDT
"RTN","PSBOMM2",15,0)
 ...S PSBAUDT=+("."_$P(PSBOACTL(I,2),"-",Y))+(PSBSTRT2\1)
"RTN","PSBOMM2",16,0)
 ...S PSBMISD=$$CHECK(PSBAUDT),PSBEDIT=1
"RTN","PSBOMM2",17,0)
 ..I PSBMISD D
"RTN","PSBOMM2",18,0)
 ...Q:'$$OKAY^PSBVDLU1(PSBOST,PSBSTRT2,PSBSCH,PSBONX,$P(^TMP("PSJ",$J,PSBX,3),U,2),PSBFREQ,PSBOSTS)
"RTN","PSBOMM2",19,0)
 ...S:'$D(^TMP("PSB",$J,DFN,PSBDT,"* "_PSBOITX,PSBONX)) ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX)=""
"RTN","PSBOMM2",20,0)
 ...D UDCONT
"RTN","PSBOMM2",21,0)
 Q
"RTN","PSBOMM2",22,0)
CHECK(PSBDT) ;
"RTN","PSBOMM2",23,0)
 I PSBDT<PSBOST Q 0 ; Order Start Date
"RTN","PSBOMM2",24,0)
 I PSBDT'<PSBOSP Q 0 ; Order Stop Date
"RTN","PSBOMM2",25,0)
 I PSBDT<PSBSTRT Q 0 ; Report Window
"RTN","PSBOMM2",26,0)
 I PSBDT>PSBSTOP Q 0 ; Report Window
"RTN","PSBOMM2",27,0)
 I $D(^PSB(53.79,"AORD",DFN,PSBONX,PSBDT)) D  Q:PSBSTUS'="N" $G(PART,0)
"RTN","PSBOMM2",28,0)
 .K PART S PSBIX=$O(^PSB(53.79,"AORD",DFN,PSBONX,PSBDT,"")),PSBSTUS=$P(^PSB(53.79,PSBIX,0),U,9)
"RTN","PSBOMM2",29,0)
 .I PSBOCRIT[PSBOSTS D:(PSBACRIT[PSBSTUS)  Q
"RTN","PSBOMM2",30,0)
 ..I (PSBSTUS="G")&$D(^PSB(53.79,PSBIX,.5)) D
"RTN","PSBOMM2",31,0)
 ...S X=0 F  S X=$O(^PSB(53.79,PSBIX,.5,X)) Q:+X=0  D
"RTN","PSBOMM2",32,0)
 ....I $P(^PSB(53.79,PSBIX,.5,X,0),U,2)>$P(^PSB(53.79,PSBIX,.5,X,0),U,3) D  S PSBOITX=$E(PSBOITX,3,999)
"RTN","PSBOMM2",33,0)
 .....S PSBOITX="* "_PSBOITX S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"X")="Units Ordered: "_$P(^PSB(53.79,PSBIX,.5,X,0),U,2)_"   Units Given: "_$P(^PSB(53.79,PSBIX,.5,X,0),U,3)_"    Admin. Status: * Partial (Given)"
"RTN","PSBOMM2",34,0)
 .....S PART=1
"RTN","PSBOMM2",35,0)
 .....D:PSBINCC GCMNTS(PSBIX)
"RTN","PSBOMM2",36,0)
 ..I PSBSTUS'="G"  I PSBACRIT[PSBSTUS S PART=1 S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"X")="Admin. Status: ("_$S(PSBSTUS="":" *UNKNOWN* ",PSBSTUS="M":"Missing Dose",PSBSTUS="H":"Held",PSBSTUS="R":"Refused")_")" D:PSBINCC GCMNTS(PSBIX)
"RTN","PSBOMM2",37,0)
 Q 1
"RTN","PSBOMM2",38,0)
UDCONT ;
"RTN","PSBOMM2",39,0)
 S PSBFLAG=0,J=1
"RTN","PSBOMM2",40,0)
 K ^TMP("PSB1",$J)
"RTN","PSBOMM2",41,0)
 F I=1:1:$P(PSBOACTL(0),U,4) D
"RTN","PSBOMM2",42,0)
 . I $P($G(PSBOACTL(I,1)),U,4)["ON HOLD"!($P($G(PSBOACTL(I,1)),U,4)="HOLD") S ^TMP("PSB1",$J,DFN,J)="HOLD"_U_$E($P($G(PSBOACTL(I,1)),U,1),1,12)
"RTN","PSBOMM2",43,0)
 . I $P($G(PSBOACTL(I,1)),U,4)["TAKEN OFF HOLD"!($P($G(PSBOACTL(I,1)),U,4)["UNHOLD") S $P(^TMP("PSB1",$J,DFN,J),U,3)="OFF HOLD"_U_$E($P($G(PSBOACTL(I,1)),U,1),1,12),J=J+1
"RTN","PSBOMM2",44,0)
 D:$D(^TMP("PSB1",$J,DFN))&($P(PSBOACTL(0),U,4)'=1)
"RTN","PSBOMM2",45,0)
 .S J=0 F  S J=$O(^TMP("PSB1",$J,DFN,J)) Q:'J  Q:PSBFLAG  D
"RTN","PSBOMM2",46,0)
 ..S PSBHDDT=$P(^TMP("PSB1",$J,DFN,J),U,2)
"RTN","PSBOMM2",47,0)
 ..S PSBHDST=$P(^TMP("PSB1",$J,DFN,J),U)
"RTN","PSBOMM2",48,0)
 ..S PSBOFDT=$P(^TMP("PSB1",$J,DFN,J),U,4)
"RTN","PSBOMM2",49,0)
 ..S PSBOFST=$P(^TMP("PSB1",$J,DFN,J),U,3)
"RTN","PSBOMM2",50,0)
 ..I PSBDT>PSBHDDT,PSBHDST="HOLD",PSBOFST'="" I PSBDT<PSBOFDT,PSBOFST="OFF HOLD" S PSBFLAG=2,PSBUNHD=PSBOFDT
"RTN","PSBOMM2",51,0)
 ..I PSBDT>PSBHDDT,PSBHDST="HOLD",PSBOFST="" S PSBFLAG=1
"RTN","PSBOMM2",52,0)
 K PSBCNT,TMP("PSB1",$J)
"RTN","PSBOMM2",53,0)
 S PSBOITX2=PSBOITX
"RTN","PSBOMM2",54,0)
 I $D(^TMP("PSB",$J,DFN,PSBDT,"* "_PSBOITX,PSBONX)) S PSBOITX="* "_PSBOITX
"RTN","PSBOMM2",55,0)
 I PSBFLAG=1 S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX)="(On Hold) "_$$DTFMT(PSBHDDT)
"RTN","PSBOMM2",56,0)
 I PSBFLAG=2 S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX)="(On Hold) "_$$DTFMT(PSBHDDT)_"  "_"(Off Hold) "_$$DTFMT(PSBUNHD)
"RTN","PSBOMM2",57,0)
 S PSBOITX=PSBOITX2
"RTN","PSBOMM2",58,0)
 Q
"RTN","PSBOMM2",59,0)
 ;
"RTN","PSBOMM2",60,0)
UDONE ;
"RTN","PSBOMM2",61,0)
 S PSBFLAG=0,J=1
"RTN","PSBOMM2",62,0)
 F I=1:1:$P(PSBOACTL(0),U,4) D
"RTN","PSBOMM2",63,0)
 .I $P($G(PSBOACTL(I,1)),U,4)["ON HOLD"!($P($G(PSBOACTL(I,1)),U,4)="HOLD") S ^TMP("PSB1",$J,DFN,J)="HOLD"_U_$E($P($G(PSBOACTL(I,1)),U,1),1,12)
"RTN","PSBOMM2",64,0)
 .I $P($G(PSBOACTL(I,1)),U,4)["TAKEN OFF HOLD"!($P($G(PSBOACTL(I,1)),U,4)["UNHOLD") S $P(^TMP("PSB1",$J,DFN,J),U,3)="OFF HOLD"_U_$E($P($G(PSBOACTL(I,1)),U,1),1,12),J=J+1
"RTN","PSBOMM2",65,0)
 D:$D(^TMP("PSB1",$J,DFN))&($P(PSBOACTL(0),U,4)'=1)
"RTN","PSBOMM2",66,0)
 .S J="" F  S J=$O(^TMP("PSB1",$J,DFN,J)) Q:'J  Q:PSBFLAG  D
"RTN","PSBOMM2",67,0)
 ..S PSBHDDT=$P(^TMP("PSB1",$J,DFN,J),U,2)
"RTN","PSBOMM2",68,0)
 ..S PSBHDST=$P(^TMP("PSB1",$J,DFN,J),U)
"RTN","PSBOMM2",69,0)
 ..S PSBOFDT=$P(^TMP("PSB1",$J,DFN,J),U,4)
"RTN","PSBOMM2",70,0)
 ..S PSBOFST=$P(^TMP("PSB1",$J,DFN,J),U,3)
"RTN","PSBOMM2",71,0)
 ..I PSBOSTS="A",PSBHDST="HOLD",PSBOFST'="",'$D(^TMP("PSB1",$J,DFN,J+1)) I PSBSTOP>PSBOFDT,PSBOFST="OFF HOLD" S PSBFLAG=2,PSBUNHD=PSBOFDT
"RTN","PSBOMM2",72,0)
 ..I PSBOSTS="A",PSBHDST="HOLD",PSBOFST'="",PSBOFDT'<PSBSTOP S PSBFLAG=1
"RTN","PSBOMM2",73,0)
 ..I PSBOSTS="H",PSBHDST="HOLD",'$D(^TMP("PSB1",$J,DFN,J+1)) S PSBFLAG=1
"RTN","PSBOMM2",74,0)
 K PSBCNT,^TMP("PSB1",$J)
"RTN","PSBOMM2",75,0)
 S PSBOITX2=PSBOITX
"RTN","PSBOMM2",76,0)
 I $D(^TMP("PSB",$J,DFN,PSBDT,"* "_PSBOITX,PSBONX)) S PSBOITX="* "_PSBOITX
"RTN","PSBOMM2",77,0)
 I PSBFLAG=1 S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX)="(On Hold) "_$$DTFMT(PSBHDDT)
"RTN","PSBOMM2",78,0)
 I PSBFLAG=2 S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX)="(On Hold) "_$$DTFMT(PSBHDDT)_"  "_"(Off Hold) "_$$DTFMT(PSBUNHD)
"RTN","PSBOMM2",79,0)
 S PSBOITX=PSBOITX2
"RTN","PSBOMM2",80,0)
 Q
"RTN","PSBOMM2",81,0)
GCMNTS(XIEN) ;
"RTN","PSBOMM2",82,0)
 Q:'$D(^PSB(53.79,XIEN,.3,1))
"RTN","PSBOMM2",83,0)
 N X
"RTN","PSBOMM2",84,0)
 S X=$O(^PSB(53.79,XIEN,.3,""),-1) Q:+X=0  S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,.3)="Comment: "_$P(^PSB(53.79,XIEN,.3,X,0),U)
"RTN","PSBOMM2",85,0)
 Q
"RTN","PSBOMM2",86,0)
PARTG1(XIEN) ;
"RTN","PSBOMM2",87,0)
 I $D(^PSB(53.79,XIEN)) D
"RTN","PSBOMM2",88,0)
 .S PSBSTUS=$P(^PSB(53.79,XIEN,0),U,9)
"RTN","PSBOMM2",89,0)
 .I PSBOCRIT[PSBOSTS I PSBACRIT[PSBSTUS D  S PSBEXST=1 Q
"RTN","PSBOMM2",90,0)
 ..I (PSBSTUS="G")&$D(^PSB(53.79,XIEN,.5)) D
"RTN","PSBOMM2",91,0)
 ...S X=0 F  S X=$O(^PSB(53.79,XIEN,.5,X)) Q:+X=0  D
"RTN","PSBOMM2",92,0)
 ....I $P(^PSB(53.79,XIEN,.5,X,0),U,2)>$P(^PSB(53.79,XIEN,.5,X,0),U,3) D  S PSBOITX=$E(PSBOITX,3,999),PSBGVN=0
"RTN","PSBOMM2",93,0)
 .....S PSBOITX="* "_PSBOITX S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"X")="Units Ordered: "_$P(^PSB(53.79,XIEN,.5,X,0),U,2)_"   Units Given: "_$P(^PSB(53.79,XIEN,.5,X,0),U,3)_"    Admin. Status: * Partial (Given)"
"RTN","PSBOMM2",94,0)
 .....I PSBINCC D GCMNTS(XIEN)
"RTN","PSBOMM2",95,0)
 ..I PSBSTUS'="G" D  S PSBGVN=0
"RTN","PSBOMM2",96,0)
 ...I PSBACRIT[PSBSTUS S ^TMP("PSB",$J,DFN,PSBDT,PSBOITX,PSBONX,"X")="Admin. Status: ("_$S(PSBSTUS="":" *UNKNOWN* ",PSBSTUS="M":"Missing Dose",PSBSTUS="H":"Held",PSBSTUS="R":"Refused")_")"
"RTN","PSBOMM2",97,0)
 ...I PSBINCC D GCMNTS(XIEN)
"RTN","PSBOMM2",98,0)
 Q
"RTN","PSBOMM2",99,0)
LN1 ;
"RTN","PSBOMM2",100,0)
 W !,$TR($J("",IOM)," ","-")
"RTN","PSBOMM2",101,0)
 Q
"RTN","PSBOMM2",102,0)
DEFLT ;
"RTN","PSBOMM2",103,0)
 S PSBFUTR=$TR(PSBRPT(1),"~","^")
"RTN","PSBOMM2",104,0)
 Q:PSBRPT(1)]""
"RTN","PSBOMM2",105,0)
 S PSBFUTR="^^^^1^^1^1^^^^^^^^1^1^1"  ;default MM Report settings Per GUI MM report...
"RTN","PSBOMM2",106,0)
 S X01=""
"RTN","PSBOMM2",107,0)
 D RPC^PSBPAR(.X01,"GETPAR","ALL","PSB RPT INCL COMMENTS")
"RTN","PSBOMM2",108,0)
 S $P(PSBRPT(.2),U,8)=+X01(0)
"RTN","PSBOMM2",109,0)
 K PSBSTOP S PSBSTOP=$P(PSBRPT(.1),U,6)+$P(PSBRPT(.1),U,9)
"RTN","PSBOMM2",110,0)
 Q
"RTN","PSBOMM2",111,0)
DTFMT(DT) ;
"RTN","PSBOMM2",112,0)
 N Y,X
"RTN","PSBOMM2",113,0)
 I +DT'>0 S DTFMT=DT Q DTFMT
"RTN","PSBOMM2",114,0)
 S Y=DT,X=$E($P(Y,".",2)_"0000",1,4)
"RTN","PSBOMM2",115,0)
 S DTFMT=$TR($J(+$E(Y,4,5),2)_"/"_$J(+$E(Y,6,7),2)_"/"_($E(Y,1,3)+1700)," ","0")_"@"_X
"RTN","PSBOMM2",116,0)
 Q DTFMT
"RTN","PSBRPC2")
0^4^B48881506^B48539831
"RTN","PSBRPC2",1,0)
PSBRPC2 ;BIRMINGHAM/EFC-BCMA RPC BROKER CALLS ;Mar 2004
"RTN","PSBRPC2",2,0)
 ;;3.0;BAR CODE MED ADMIN;**6,3,16,32,61,88**;Mar 2004;Build 11
"RTN","PSBRPC2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PSBRPC2",4,0)
 ;
"RTN","PSBRPC2",5,0)
 ; Reference/IA
"RTN","PSBRPC2",6,0)
 ; File 50/221
"RTN","PSBRPC2",7,0)
 ; File 52.6/436
"RTN","PSBRPC2",8,0)
 ; File 52.7/437
"RTN","PSBRPC2",9,0)
 ; File 200/10060
"RTN","PSBRPC2",10,0)
GETOHIST(RESULTS,DFN,PSBORD) ;
"RTN","PSBRPC2",11,0)
 S RESULTS=$NAME(^TMP("PSB",$J)),PSB=0 K ^TMP("PSB",$J)
"RTN","PSBRPC2",12,0)
 S ^TMP("PSB",$J,0)=1,^TMP("PSB",$J,1)="-1^No History On File"
"RTN","PSBRPC2",13,0)
 D NOW^%DTC S PSBNOW=$P(%,".",1),PSBNOWZ=%
"RTN","PSBRPC2",14,0)
 D EN^PSBPOIV(DFN,PSBORD)
"RTN","PSBRPC2",15,0)
 S PSBUID=DFN_"V"_99999 F  S PSBUID=$O(^TMP("PSBAR",$J,PSBUID),-1) Q:PSBUID=""  D
"RTN","PSBRPC2",16,0)
 .S PSBUIDS=^TMP("PSBAR",$J,PSBUID)
"RTN","PSBRPC2",17,0)
 .I ((PSBOSTS="D")!(PSBOSTS="E")),$P(PSBUIDS,U,2)'="I",$P(PSBUIDS,U,2)'="S" Q   ; only want the infusing bag on a dc'ed order
"RTN","PSBRPC2",18,0)
 .I (PSBOSTS="A"),(PSBOSP<PSBNOWZ),$P(PSBUIDS,U,2)'="I",$P(PSBUIDS,U,2)'="S" S PSBOSTS="E" Q  ; only want the infusing bag on an expired order
"RTN","PSBRPC2",19,0)
 .I $P(PSBUIDS,U,2)'="" D  Q  ; get orders from med log (53.79)
"RTN","PSBRPC2",20,0)
 ..S PSBMLOR=$P(PSBUIDS,U,4),PSBIEN=$O(^PSB(53.79,"AUID",DFN,PSBMLOR,PSBUID,""))
"RTN","PSBRPC2",21,0)
 ..S PSBLADT=$P(^PSB(53.79,PSBIEN,0),U,6)
"RTN","PSBRPC2",22,0)
 ..S PSBLASTS=$P(^PSB(53.79,PSBIEN,0),U,9)
"RTN","PSBRPC2",23,0)
 ..I PSBLASTS="M",$P(PSBUIDS,U,8)'="" Q
"RTN","PSBRPC2",24,0)
 ..S PSBINJS=$P(^PSB(53.79,PSBIEN,.1),U,6)
"RTN","PSBRPC2",25,0)
 ..S PSB=PSB+1,^TMP("PSB",$J,PSB)=PSBORD_U_PSBUID_U_PSBIEN_U_PSBLADT_U_PSBLASTS_U_PSBINJS
"RTN","PSBRPC2",26,0)
 ..F PSBL=1:1 Q:'$D(^PSB(53.79,PSBIEN,.6,PSBL,0))  S PSB=PSB+1,^TMP("PSB",$J,PSB)="ADD^"_^PSB(53.79,PSBIEN,.6,PSBL,0)
"RTN","PSBRPC2",27,0)
 ..F PSBL=1:1 Q:'$D(^PSB(53.79,PSBIEN,.7,PSBL,0))  S PSB=PSB+1,^TMP("PSB",$J,PSB)="SOL^"_^PSB(53.79,PSBIEN,.7,PSBL,0)
"RTN","PSBRPC2",28,0)
 ..S PSB=PSB+1,^TMP("PSB",$J,PSB)="END"
"RTN","PSBRPC2",29,0)
 .I $P(PSBUIDS,U,1)="I" Q  ; IV parameters say bag is invalid
"RTN","PSBRPC2",30,0)
 .I $P(PSBUIDS,U,8)'="",$P(PSBUIDS,U,2)'="I",$P(PSBUIDS,U,2)'="S" Q  ; label has been reprinted/destroyed etc. - bag is not infusing or stopped
"RTN","PSBRPC2",31,0)
 .S PSB=PSB+1,^TMP("PSB",$J,PSB)=$P(PSBUIDS,U,5)_U_PSBUID_U_U_PSBNOW_U_"A"
"RTN","PSBRPC2",32,0)
 .S PSBUIDP=$P(PSBUIDS,U,10,999)
"RTN","PSBRPC2",33,0)
 .F Y=3:1 S PSBMEDTY=$P(PSBUIDP,U,Y) Q:PSBMEDTY=""  D
"RTN","PSBRPC2",34,0)
 ..D CLEAN^PSBVT,PSJ1^PSBVT(DFN,$P(PSBUIDS,U,5))
"RTN","PSBRPC2",35,0)
 ..I $P(PSBMEDTY,";",1)="ADD" F Z=1:1 S PSBAD=$G(PSBADA(Z)) Q:PSBAD=""  I $P(PSBADA(Z),U,2)=$P(PSBMEDTY,";",2) S PSB=PSB+1,^TMP("PSB",$J,PSB)=PSBADA(Z) Q
"RTN","PSBRPC2",36,0)
 ..I $P(PSBMEDTY,";",1)="SOL" F Z=1:1 S PSBSOL=$G(PSBSOLA(Z)) Q:PSBSOL=""  I $P(PSBSOLA(Z),U,2)=$P(PSBMEDTY,";",2) S PSB=PSB+1,^TMP("PSB",$J,PSB)=PSBSOLA(Z) Q
"RTN","PSBRPC2",37,0)
 .D CLEAN^PSBVT,PSJ1^PSBVT(DFN,PSBORD)
"RTN","PSBRPC2",38,0)
 .S PSB=PSB+1,^TMP("PSB",$J,PSB)="END"
"RTN","PSBRPC2",39,0)
 F II=1:1 S I=$P(PSBONXS,U,II) Q:I=""  D  ; get ward stocks
"RTN","PSBRPC2",40,0)
 .S PSBUID="" F  S PSBUID=$O(^PSB(53.79,"AUID",DFN,I,PSBUID)) Q:PSBUID=""  D
"RTN","PSBRPC2",41,0)
 ..I PSBUID'["WS" Q  ; not a ward stock
"RTN","PSBRPC2",42,0)
 ..S PSBIEN=$O(^PSB(53.79,"AUID",DFN,I,PSBUID,""))
"RTN","PSBRPC2",43,0)
 ..S PSBLADT=$P(^PSB(53.79,PSBIEN,0),U,6)
"RTN","PSBRPC2",44,0)
 ..S PSBLASTS=$P(^PSB(53.79,PSBIEN,0),U,9)
"RTN","PSBRPC2",45,0)
 ..I PSBOSTS="D",PSBLASTS'="I",PSBLASTS'="S" Q  ; want "not completed" on DC'ed orders
"RTN","PSBRPC2",46,0)
 ..I (PSBOSTS="A"),(PSBOSP<PSBNOWZ),PSBLASTS'="I",PSBLASTS'="S" Q
"RTN","PSBRPC2",47,0)
 ..S PSBINJS=$P(^PSB(53.79,PSBIEN,.1),U,6)
"RTN","PSBRPC2",48,0)
 ..S PSB=PSB+1,^TMP("PSB",$J,PSB)=PSBORD_U_PSBUID_U_PSBIEN_U_PSBLADT_U_PSBLASTS_U_PSBINJS
"RTN","PSBRPC2",49,0)
 ..F PSBL=1:1 Q:'$D(^PSB(53.79,PSBIEN,.6,PSBL,0))  S PSB=PSB+1,^TMP("PSB",$J,PSB)="ADD^"_^PSB(53.79,PSBIEN,.6,PSBL,0)
"RTN","PSBRPC2",50,0)
 ..F PSBL=1:1 Q:'$D(^PSB(53.79,PSBIEN,.7,PSBL,0))  S PSB=PSB+1,^TMP("PSB",$J,PSB)="SOL^"_^PSB(53.79,PSBIEN,.7,PSBL,0)
"RTN","PSBRPC2",51,0)
 ..S PSB=PSB+1,^TMP("PSB",$J,PSB)="END"
"RTN","PSBRPC2",52,0)
 S ^TMP("PSB",$J,0)=PSB
"RTN","PSBRPC2",53,0)
 K ^TMP("PSBAR",$J)
"RTN","PSBRPC2",54,0)
 Q
"RTN","PSBRPC2",55,0)
 ;
"RTN","PSBRPC2",56,0)
BAGDTL(RESULTS,PSBUID,PSBORD)  ; bag detail
"RTN","PSBRPC2",57,0)
 S:PSBUID DFN=+PSBUID ;ensure if DFN is passed, it is used PSB*88
"RTN","PSBRPC2",58,0)
 S (PSBIEN,X)="" F  S X=$O(^PSB(53.79,"AUID",DFN,X)) Q:X=""  S:$D(^PSB(53.79,"AUID",DFN,X,PSBUID)) PSBIEN=$O(^PSB(53.79,"AUID",DFN,X,PSBUID,"")) Q:PSBIEN]""
"RTN","PSBRPC2",59,0)
 I PSBIEN'>0 S RESULTS(0)=1,RESULTS(1)="-1^No History On File" Q
"RTN","PSBRPC2",60,0)
 M PSBMLA=^PSB(53.79,PSBIEN)
"RTN","PSBRPC2",61,0)
 S X=$P(^PSB(53.79,PSBIEN,0),U,9)
"RTN","PSBRPC2",62,0)
 S PSBLAC=$S(X="I":"INFUSING",X="G":"GIVEN",X="C":"COMPLETE",X="H":"HELD",X="R":"REFUSED",X="RM":"REMOVED",X="S":"STOPPED",X="M":"MISSING",1:"NO ACTION")
"RTN","PSBRPC2",63,0)
 ; comments
"RTN","PSBRPC2",64,0)
 S PSBX="0" F  S PSBX=$O(PSBMLA(.3,PSBX)) Q:PSBX=""  S PSBTMP(10000000-$P(PSBMLA(.3,PSBX,0),U,3),"C")=$P(PSBMLA(.3,PSBX,0),U,3)_U_$$INITIAL($P(PSBMLA(.3,PSBX,0),U,2))_U_U_$P(PSBMLA(.3,PSBX,0),U,1)
"RTN","PSBRPC2",65,0)
 ; audit
"RTN","PSBRPC2",66,0)
 S PSBGA="" I $D(PSBMLA(.9,0)) D
"RTN","PSBRPC2",67,0)
 .S PSBX="0" F  S PSBX=$O(PSBMLA(.9,PSBX)) Q:PSBX=""  I ((PSBMLA(.9,PSBX,0)["ACTION STATUS")!(PSBMLA(.9,PSBX,0)["ADMINISTRATION STATUS")) D  Q
"RTN","PSBRPC2",68,0)
 ..S PSBDATE=$P(PSBMLA(0),U,4) I (PSBX-2)>0&(PSBMLA(.9,1,0)["ACTION STATUS"!(PSBMLA(.9,1,0)["ADMINISTRATION STATUS")) D DT^DILF("ENPST",$P(PSBMLA(.9,PSBX-2,0),"'",2),.PSBDATE) ;verify entry is an action- PSB*3*61
"RTN","PSBRPC2",69,0)
 ..S PSBTMP(10000000-PSBDATE,"B")=PSBDATE_U_$$INITIAL($P(PSBMLA(0),U,5))_U_$P(PSBMLA(.9,PSBX,0),"'",2)
"RTN","PSBRPC2",70,0)
 ..S PSBGA=1
"RTN","PSBRPC2",71,0)
 .S PSBX=$G(PSBX,0) F  S PSBX=$O(PSBMLA(.9,PSBX)) Q:PSBX=""  I ((PSBMLA(.9,PSBX,0)["ACTION STATUS")!(PSBMLA(.9,PSBX,0)["ADMINISTRATION STATUS"))  D  ;start at next node in audit log from where you left off - PSB*3*61
"RTN","PSBRPC2",72,0)
 ..S PSBTMP(10000000-$P(PSBMLA(.9,PSBX,0),U,1),"B")=$P(PSBMLA(.9,PSBX,0),U,1)_U_$$INITIAL($P(PSBMLA(.9,PSBX,0),U,2))_U_$P($P(PSBMLA(.9,PSBX,0),U,3),"'",2)
"RTN","PSBRPC2",73,0)
 ..S PSBGA=1
"RTN","PSBRPC2",74,0)
 I PSBGA'=1 S PSBTMP(10000000-$P(PSBMLA(0),U,6),"A")=$P(PSBMLA(0),U,6)_U_$$INITIAL($P(PSBMLA(0),U,7))_U_PSBLAC
"RTN","PSBRPC2",75,0)
 S PSBQRY="PSBTMP",PSBCNT=1 F  S PSBQRY=$Q(@PSBQRY) Q:PSBQRY=""  D  ; does comment go with action
"RTN","PSBRPC2",76,0)
 .S PSBPQRY=$Q(@PSBQRY,-1)
"RTN","PSBRPC2",77,0)
 .I PSBPQRY="" S RESULTS(PSBCNT)=@PSBQRY,PSBCNT=PSBCNT+1 Q  ; no previous action
"RTN","PSBRPC2",78,0)
 .I $QS(PSBPQRY,2)="C"  S RESULTS(PSBCNT)=@PSBQRY,PSBCNT=PSBCNT+1 Q  ; previous line is a comment
"RTN","PSBRPC2",79,0)
 .I $QS(PSBQRY,2)="C",$E($P(@$Q(@PSBQRY,-1),U,1),1,12)=$E($P(@PSBQRY,U,1),1,12),$P(@$Q(@PSBQRY,-1),U,2)=$P(@PSBQRY,U,2) S X=$P(@PSBQRY,U,4),$P(RESULTS(PSBCNT-1),U,4)=X Q
"RTN","PSBRPC2",80,0)
 .S RESULTS(PSBCNT)=@PSBQRY,PSBCNT=PSBCNT+1
"RTN","PSBRPC2",81,0)
 S RESULTS(0)=PSBCNT-1
"RTN","PSBRPC2",82,0)
 K PSBMLA,PSBIEN,PSBTMP,PSBQRY
"RTN","PSBRPC2",83,0)
 Q
"RTN","PSBRPC2",84,0)
 ;
"RTN","PSBRPC2",85,0)
INITIAL(PSBDUZ) ;
"RTN","PSBRPC2",86,0)
 Q $$GET1^DIQ(200,PSBDUZ,"INITIAL")
"RTN","PSBRPC2",87,0)
SCANMED(RESULTS,PSBDIEN,PSBTAB)  ; Lookup Medication
"RTN","PSBRPC2",88,0)
 ;
"RTN","PSBRPC2",89,0)
 ; RPC: PSB SCANMED
"RTN","PSBRPC2",90,0)
 ;
"RTN","PSBRPC2",91,0)
 ; Description:
"RTN","PSBRPC2",92,0)
 ; Does a lookup on file 50 returns -1 on invalid lookup or
"RTN","PSBRPC2",93,0)
 ; IEN^DrugName on success
"RTN","PSBRPC2",94,0)
 ;
"RTN","PSBRPC2",95,0)
 D NOW^%DTC S PSBDT=%
"RTN","PSBRPC2",96,0)
 S PSBCNT=0
"RTN","PSBRPC2",97,0)
 I $L(PSBDIEN)>40 S PSBDIEN=$E(PSBDIEN,1,40)
"RTN","PSBRPC2",98,0)
 S RESULTS(PSBCNT)=1
"RTN","PSBRPC2",99,0)
 S PSBCNT=PSBCNT+1,RESULTS(PSBCNT)="-1^Invalid Medication Lookup"
"RTN","PSBRPC2",100,0)
 I $$GET^XPAR("DIV","PSB ROBOT RX"),PSBDIEN?1"3"15N!(PSBDIEN?1"3"17N),123[$E(PSBDIEN,12) S PSBDIEN=$E(PSBDIEN,2,11)
"RTN","PSBRPC2",101,0)
 Q:PSBDIEN=" "
"RTN","PSBRPC2",102,0)
 I PSBTAB="UDTAB" D  Q
"RTN","PSBRPC2",103,0)
 .S X=$$FIND1^DIC(50,"","AX",PSBDIEN,"B^C")
"RTN","PSBRPC2",104,0)
 .I X<1 Q
"RTN","PSBRPC2",105,0)
 .E  S RESULTS(PSBCNT)="DD"_U_X_U_$$GET1^DIQ(50,X_",",.01)
"RTN","PSBRPC2",106,0)
 ;
"RTN","PSBRPC2",107,0)
 ; IV/IVPB ward stock scan
"RTN","PSBRPC2",108,0)
 ;
"RTN","PSBRPC2",109,0)
 S PSBDIEN=$$FIND1^DIC(50,"","AX",PSBDIEN,"B^C") I PSBDIEN<1 Q
"RTN","PSBRPC2",110,0)
 S PSBOIT=$$GET1^DIQ(50,PSBDIEN,"PHARMACY ORDERABLE ITEM","I")
"RTN","PSBRPC2",111,0)
 I $D(^PSDRUG("A527",PSBDIEN)) S X="" F  S X=$O(^PSDRUG("A527",PSBDIEN,X)) Q:X=""  D
"RTN","PSBRPC2",112,0)
 .S PSBINACT=$$GET1^DIQ(52.7,X,8,"I") I PSBINACT]"",PSBINACT'>PSBDT Q
"RTN","PSBRPC2",113,0)
 .S RESULTS(PSBCNT)="SOL"_U_X_U_$$GET1^DIQ(50,PSBDIEN_",",.01),PSBCNT=PSBCNT+1,RESULTS(0)=PSBCNT-1
"RTN","PSBRPC2",114,0)
 I $D(^PSDRUG("A526",PSBDIEN)) S X="" F  S X=$O(^PSDRUG("A526",PSBDIEN,X)) Q:X=""  D
"RTN","PSBRPC2",115,0)
 .S PSBINACT=$$GET1^DIQ(52.6,X,12,"I") I PSBINACT]"",PSBINACT'>PSBDT Q
"RTN","PSBRPC2",116,0)
 .S RESULTS(PSBCNT)="ADD"_U_X_U_$$GET1^DIQ(50,PSBDIEN_",",.01),PSBCNT=PSBCNT+1,RESULTS(0)=PSBCNT-1
"RTN","PSBRPC2",117,0)
 ;
"RTN","PSBRPC2",118,0)
 I PSBTAB="PBTAB",$$FIND1^DIC(50,"","AX",PSBDIEN,"B^C")'<1 S X=$$FIND1^DIC(50,"","AX",PSBDIEN,"B^C"),RESULTS(PSBCNT)="DD"_U_X_U_$$GET1^DIQ(50,X_",",.01),PSBCNT=PSBCNT+1,RESULTS(0)=PSBCNT-1
"RTN","PSBRPC2",119,0)
 Q
"RTN","PSBRPC2",120,0)
 ;
"VER")
8.0^22.0
"BLD",10089,6)
^77
**END**
**END**

