Released XT*7.3*137 SEQ #110
Extracted from mail message
**KIDS**:XT*7.3*137^

**INSTALL NAME**
XT*7.3*137
"BLD",9620,0)
XT*7.3*137^TOOLKIT^0^3140630^y
"BLD",9620,1,0)
^^7^7^3140203^
"BLD",9620,1,1,0)
Patch XT*7.3*137 addresses 4 issues:
"BLD",9620,1,2,0)
 
"BLD",9620,1,3,0)
       1.  Fields failing validation and preventing patient merge
"BLD",9620,1,4,0)
       2.  Patient file pointer, .01 DINUMed fields that are new style 
"BLD",9620,1,5,0)
           xrefs are not merging properly on patient merge
"BLD",9620,1,6,0)
       3.  Aliases duplicated on patient merge
"BLD",9620,1,7,0)
       4.  'Test patient Indicator' field being copied on patient merge
"BLD",9620,4,0)
^9.64PA^^
"BLD",9620,6.3)
10
"BLD",9620,"ABPKG")
n
"BLD",9620,"KRN",0)
^9.67PA^779.2^20
"BLD",9620,"KRN",.4,0)
.4
"BLD",9620,"KRN",.401,0)
.401
"BLD",9620,"KRN",.402,0)
.402
"BLD",9620,"KRN",.403,0)
.403
"BLD",9620,"KRN",.5,0)
.5
"BLD",9620,"KRN",.84,0)
.84
"BLD",9620,"KRN",3.6,0)
3.6
"BLD",9620,"KRN",3.8,0)
3.8
"BLD",9620,"KRN",9.2,0)
9.2
"BLD",9620,"KRN",9.8,0)
9.8
"BLD",9620,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9620,"KRN",9.8,"NM",1,0)
XDRMERG2^^0^B75408024
"BLD",9620,"KRN",9.8,"NM",2,0)
XDRMERGA^^0^B98063543
"BLD",9620,"KRN",9.8,"NM",3,0)
XDRMERGB^^0^B79750683
"BLD",9620,"KRN",9.8,"NM","B","XDRMERG2",1)

"BLD",9620,"KRN",9.8,"NM","B","XDRMERGA",2)

"BLD",9620,"KRN",9.8,"NM","B","XDRMERGB",3)

"BLD",9620,"KRN",19,0)
19
"BLD",9620,"KRN",19.1,0)
19.1
"BLD",9620,"KRN",101,0)
101
"BLD",9620,"KRN",409.61,0)
409.61
"BLD",9620,"KRN",771,0)
771
"BLD",9620,"KRN",779.2,0)
779.2
"BLD",9620,"KRN",870,0)
870
"BLD",9620,"KRN",8989.51,0)
8989.51
"BLD",9620,"KRN",8989.52,0)
8989.52
"BLD",9620,"KRN",8994,0)
8994
"BLD",9620,"KRN","B",.4,.4)

"BLD",9620,"KRN","B",.401,.401)

"BLD",9620,"KRN","B",.402,.402)

"BLD",9620,"KRN","B",.403,.403)

"BLD",9620,"KRN","B",.5,.5)

"BLD",9620,"KRN","B",.84,.84)

"BLD",9620,"KRN","B",3.6,3.6)

"BLD",9620,"KRN","B",3.8,3.8)

"BLD",9620,"KRN","B",9.2,9.2)

"BLD",9620,"KRN","B",9.8,9.8)

"BLD",9620,"KRN","B",19,19)

"BLD",9620,"KRN","B",19.1,19.1)

"BLD",9620,"KRN","B",101,101)

"BLD",9620,"KRN","B",409.61,409.61)

"BLD",9620,"KRN","B",771,771)

"BLD",9620,"KRN","B",779.2,779.2)

"BLD",9620,"KRN","B",870,870)

"BLD",9620,"KRN","B",8989.51,8989.51)

"BLD",9620,"KRN","B",8989.52,8989.52)

"BLD",9620,"KRN","B",8994,8994)

"BLD",9620,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",9620,"QUES",0)
^9.62^^
"BLD",9620,"REQB",0)
^9.611^2^2
"BLD",9620,"REQB",1,0)
XT*7.3*45^2
"BLD",9620,"REQB",2,0)
XT*7.3*62^2
"BLD",9620,"REQB","B","XT*7.3*45",1)

"BLD",9620,"REQB","B","XT*7.3*62",2)

"MBREQ")
0
"PKG",283,-1)
1^1
"PKG",283,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP
"PKG",283,20,0)
^9.402P^^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
7.3^2950403^2950726
"PKG",283,22,1,"PAH",1,0)
137^3140630^1230
"PKG",283,22,1,"PAH",1,1,0)
^^7^7^3140630
"PKG",283,22,1,"PAH",1,1,1,0)
Patch XT*7.3*137 addresses 4 issues:
"PKG",283,22,1,"PAH",1,1,2,0)
 
"PKG",283,22,1,"PAH",1,1,3,0)
       1.  Fields failing validation and preventing patient merge
"PKG",283,22,1,"PAH",1,1,4,0)
       2.  Patient file pointer, .01 DINUMed fields that are new style 
"PKG",283,22,1,"PAH",1,1,5,0)
           xrefs are not merging properly on patient merge
"PKG",283,22,1,"PAH",1,1,6,0)
       3.  Aliases duplicated on patient merge
"PKG",283,22,1,"PAH",1,1,7,0)
       4.  'Test patient Indicator' field being copied on patient merge
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XDRMERG2")
0^1^B75408024^B64126230
"RTN","XDRMERG2",1,0)
XDRMERG2 ;SF-IRMFO.SEA/JLI - TENATIVE UPDATE POINTER NODES ; [6/12/02 9:48am]
"RTN","XDRMERG2",2,0)
 ;;7.3;TOOLKIT;**23,38,40,42,46,62,137**;Apr 25, 1995;Build 10
"RTN","XDRMERG2",3,0)
 ;;
"RTN","XDRMERG2",4,0)
 Q
"RTN","XDRMERG2",5,0)
 ;
"RTN","XDRMERG2",6,0)
 ; XDRXFLG is referenced in a few places, but not defined - it was
"RTN","XDRMERG2",7,0)
 ;    used where it was set at the time the run started to identify
"RTN","XDRMERG2",8,0)
 ;    entries which were referenced in one or more files and to
"RTN","XDRMERG2",9,0)
 ;    remove them from a list of entries which were not referenced
"RTN","XDRMERG2",10,0)
 ;    by any files within the database
"RTN","XDRMERG2",11,0)
 ;
"RTN","XDRMERG2",12,0)
DINUM(XVAL,XR,XDRIENS) ; FIND AND MERGE DINUMMED POINTERS
"RTN","XDRMERG2",13,0)
 N IENOLD,IENNEW,FILEI,FLDJ,XREF,VREF
"RTN","XDRMERG2",14,0)
 ;
"RTN","XDRMERG2",15,0)
 D SETVALS
"RTN","XDRMERG2",16,0)
 F IENOLD=0:0 S IENOLD=$O(@FROM@(IENOLD)) Q:IENOLD'>0  D
"RTN","XDRMERG2",17,0)
 . I '$D(@(XVAL_IENOLD_",0)")) Q
"RTN","XDRMERG2",18,0)
 . I $D(XDRXFLG) S @FROM@(IENOLD,"R",FILEI)=$G(@FROM@(IENOLD,"R",FILEI))+1 Q  ; POINTER WAS FOUND MARK ENTRY FOR FILE
"RTN","XDRMERG2",19,0)
 . S IENNEW=$O(@FROM@(IENOLD,"")) Q:IENNEW'>0
"RTN","XDRMERG2",20,0)
 . ; N I F I=IENOLD,IENNEW M @("^XDRM(I,""M"",FILEI,I)="_XVAL_I_")") ; OLD SAVE IMAGE BY SIMPLY MERGING
"RTN","XDRMERG2",21,0)
 . D SAVEMERG^XDRMERGB(FILEI,IENOLD,IENNEW)
"RTN","XDRMERG2",22,0)
 . I '$D(@(XVAL_IENNEW_",0)")) D
"RTN","XDRMERG2",23,0)
 . . N DD,DO,DIC,X,DINUM,DA
"RTN","XDRMERG2",24,0)
 . . S DIC=XVAL,DIC(0)="L",X=IENNEW,DINUM=IENNEW D FILE^DICN D:$D(^DD("IX","F",FILEI,FLDJ))  Q:Y'>0  ;LLS 09-DEC-2013 - Added the conditional 'Do' to handle .01, DIMUMed, new style cross references to the Patient file
"RTN","XDRMERG2",25,0)
 . . . ;LLS - 09-DEC-2013 begin added section:
"RTN","XDRMERG2",26,0)
 . . . ;need to get the new style cross reference key values from the "FROM" patient and move to the "TO" Patient
"RTN","XDRMERG2",27,0)
 . . . N XDRINDSB,XDRFFLD,XDRFLDI,Y,XDRARR
"RTN","XDRMERG2",28,0)
 . . . S XDRINDSB=$O(^DD("IX","F",FILEI,FLDJ,"")) ;INDEX file subscript
"RTN","XDRMERG2",29,0)
 . . . S XDRFLDI="" F  S XDRFLDI=$O(^DD("IX","F",FILEI,XDRFLDI)) Q:XDRFLDI=""  D:$D(^DD("IX","F",FILEI,XDRFLDI,XDRINDSB))  ;XDRFLDI will hold the field number that we want to file
"RTN","XDRMERG2",30,0)
 . . . . S XDRFFLD=$$GET1^DIQ(FILEI,IENOLD_",",XDRFLDI,"I") ;get internal value of the field from "FROM" patient
"RTN","XDRMERG2",31,0)
 . . . . S:XDRFLDI=FLDJ XDRFFLD=IENNEW ;want the pointer to the patient file set to the "TO" IEN not the "FROM" IEN
"RTN","XDRMERG2",32,0)
 . . . . S XDRARR(FILEI,IENNEW_",",XDRFLDI)=XDRFFLD D UPDATE^DIE("","XDRARR") ;Set the internal value into "TO" patient
"RTN","XDRMERG2",33,0)
 . . . ;LLS - 09-DEC-2013 end added section
"RTN","XDRMERG2",34,0)
 . D OVRWRI(FILEI,IENOLD,IENNEW)
"RTN","XDRMERG2",35,0)
 . D MERGEIT(XVAL,IENOLD,IENNEW)
"RTN","XDRMERG2",36,0)
 . D TIMSTAMP(2,FILEI,IENOLD)
"RTN","XDRMERG2",37,0)
 Q
"RTN","XDRMERG2",38,0)
MERGEIT(XDRDIC,IENFROM,IENTO) ; MERGE TWO ENTRIES IN FILE
"RTN","XDRMERG2",39,0)
 N NODE,NODE1,NODE2,NODEA,SFILE,XDRFROM,XDRTO,NODEA,VALUE,XVALUE,XDRXX,XDRYY,NODEB,DIK,DA,I,Y,VREF,XNN,XFILNO,IENTOSTR,DFN
"RTN","XDRMERG2",40,0)
 ;
"RTN","XDRMERG2",41,0)
 D MERGEIT^XDRMERGB
"RTN","XDRMERG2",42,0)
 Q
"RTN","XDRMERG2",43,0)
TIMSTAMP(PHASE,FILE,IEN) ;
"RTN","XDRMERG2",44,0)
 S XDRYT=$$NOW^XLFDT()
"RTN","XDRMERG2",45,0)
 I $$FMDIFF^XLFDT(XDRYT,+$G(XDRXT),2)>5 D
"RTN","XDRMERG2",46,0)
 . I $D(XDRFDA) D  I 1
"RTN","XDRMERG2",47,0)
 . . S ^VA(15.2,XDRFDA,3,XDRFDA1,1)=XDRYT_U_PHASE_U_FILE_U_IEN
"RTN","XDRMERG2",48,0)
 . E  D
"RTN","XDRMERG2",49,0)
 . . S ^XTMP("XDRSTAT",XDRGID,"TIME",$J)=XDRYT_U_PHASE_U_FILE_U_IEN
"RTN","XDRMERG2",50,0)
 . S XDRXT=XDRYT
"RTN","XDRMERG2",51,0)
 Q
"RTN","XDRMERG2",52,0)
XREFS(XVAL,XR,XDRIENS) ; FIND POINTERS BASED ON KNOWN X-REFS FOR FILE
"RTN","XDRMERG2",53,0)
 D XREFS^XDRMERG1
"RTN","XDRMERG2",54,0)
 Q
"RTN","XDRMERG2",55,0)
 ;
"RTN","XDRMERG2",56,0)
SETVALS ; IDENTIFY THE LOCATIONS OF POINTERS (NODE, PIECE, AND X-REF I ANY)
"RTN","XDRMERG2",57,0)
 S FILEI=$O(^TMP($J,"XGLOB",XR,"")),FLDJ=$O(^TMP($J,"XGLOB",XR,FILEI,""))
"RTN","XDRMERG2",58,0)
 S FILEI=^TMP($J,"XGLOB",XR,FILEI,FLDJ),FLDJ=+$P(FILEI,U,2)
"RTN","XDRMERG2",59,0)
 S XREF=$P(FILEI,U,3),FILEI=+FILEI
"RTN","XDRMERG2",60,0)
 S VREF="" I $P(^DD(FILEI,FLDJ,0),U,2)["V" S VREF=";"_$E(XDRFGLOB,2,99)
"RTN","XDRMERG2",61,0)
 Q
"RTN","XDRMERG2",62,0)
 ;
"RTN","XDRMERG2",63,0)
DOMAIN(FILE,FROM) ; MERGE ACTUAL ENTRIES IN THE FILE (THE ONES POINTED TO)
"RTN","XDRMERG2",64,0)
 N IENFROM,IENTO,XDRVAL,XDRIENS
"RTN","XDRMERG2",65,0)
 I '$D(XDRTESTK) S XDRTESTK=0 S ^XTMP("XDRTESTK",0)=$$FMADD^XLFDT(DT,30)_U_DT ; DEBUG STATEMENT
"RTN","XDRMERG2",66,0)
 S XFILNO=FILE
"RTN","XDRMERG2",67,0)
 I $D(XDRXFLG) Q
"RTN","XDRMERG2",68,0)
 S XDRIENS=""
"RTN","XDRMERG2",69,0)
 S XDRDIC=$G(^DIC(FILE,0,"GL")) Q:XDRDIC=""
"RTN","XDRMERG2",70,0)
 S IENFROM=0
"RTN","XDRMERG2",71,0)
 F  S IENFROM=$O(@FROM@(IENFROM)) Q:IENFROM'>0  D
"RTN","XDRMERG2",72,0)
 . I '$D(@(XDRDIC_IENFROM_")")) Q
"RTN","XDRMERG2",73,0)
 . S IENTO=$O(@FROM@(IENFROM,"")) Q:IENTO'>0
"RTN","XDRMERG2",74,0)
 . I $D(@(XDRDIC_IENFROM_",-9)"))!$D(@(XDRDIC_IENTO_",-9)")) Q  ; ALREADY MERGED
"RTN","XDRMERG2",75,0)
 . S XDRVAL=$P($G(@(XDRDIC_IENFROM_",0)")),U)
"RTN","XDRMERG2",76,0)
 . S XDRVAL=$P($G(@(XDRDIC_IENFROM_",0)")),U)
"RTN","XDRMERG2",77,0)
 . I $E(XDRVAL,1,12)="MERGING INTO" D
"RTN","XDRMERG2",78,0)
 . . N X S X=XDRVAL
"RTN","XDRMERG2",79,0)
 . . F  Q:X'["MERGING INTO"  S X=$P(X,"(",2,99),X=$E(X,1,$L(X)-1)
"RTN","XDRMERG2",80,0)
 . . S $P(@(XDRDIC_IENFROM_",0)"),U)=X
"RTN","XDRMERG2",81,0)
 . . S XDRVAL=X
"RTN","XDRMERG2",82,0)
 . D GETSSN ; GET SSN FOR SELECTED MAIN FILES
"RTN","XDRMERG2",83,0)
 . S IENTO=$O(@FROM@(IENFROM,"")) Q:IENTO'>0  S DFN=IENTO D
"RTN","XDRMERG2",84,0)
 . . ; N I F I=IENFROM,IENTO M @("^XDRM(I,""M"",FILE,I)="_XDRDIC_I_")") ; ORIGINAL VERSION SAVE IMAGE BY SIMPLY MERGING
"RTN","XDRMERG2",85,0)
 . . D SAVEMERG^XDRMERGB(FILE,IENFROM,IENTO) ; SAVE IMAGE IN FM COMPATIBLE STRUCTURE
"RTN","XDRMERG2",86,0)
 . . N XDRVAL
"RTN","XDRMERG2",87,0)
 . . D OVRWRI(XFILNO,IENFROM,IENTO) ;       LOOK FOR DATA TO BE OVERWRITTEN
"RTN","XDRMERG2",88,0)
 . . D MERGEIT(XDRDIC,IENFROM,IENTO)
"RTN","XDRMERG2",89,0)
 . S @(XDRDIC_IENFROM_",0)")=XDRVAL
"RTN","XDRMERG2",90,0)
 . S @(XDRDIC_IENFROM_",-9)")=IENTO
"RTN","XDRMERG2",91,0)
 . D SETALIAS ; SET UP ALIAS ENTRY IN SELECTED FILES
"RTN","XDRMERG2",92,0)
 . N VALUE,XDRXX,XDRYY
"RTN","XDRMERG2",93,0)
 . S VALUE=$$FIND1^DIC(15.3,",","Q",FILE)
"RTN","XDRMERG2",94,0)
 . I VALUE'>0 D
"RTN","XDRMERG2",95,0)
 . . S XDRXX(15.3,"+1,",.01)=FILE
"RTN","XDRMERG2",96,0)
 . . K XDRYY S XDRYY(1)=FILE
"RTN","XDRMERG2",97,0)
 . . D UPDATE^DIE("","XDRXX","XDRYY")
"RTN","XDRMERG2",98,0)
 . K XDRXX,XDRYY
"RTN","XDRMERG2",99,0)
 . S XDRXX(15.31,"+1,"_FILE_",",.01)=IENFROM
"RTN","XDRMERG2",100,0)
 . S XDRXX(15.31,"+1,"_FILE_",",.02)=IENTO
"RTN","XDRMERG2",101,0)
 . D UPDATE^DIE("","XDRXX","XDRYY","XDRMM")
"RTN","XDRMERG2",102,0)
 . D TIMSTAMP(1,FILE,IENFROM)
"RTN","XDRMERG2",103,0)
 Q
"RTN","XDRMERG2",104,0)
 ;
"RTN","XDRMERG2",105,0)
CHKFROM(FROM,FILE) ;
"RTN","XDRMERG2",106,0)
 D CHKFROM^XDRMERGC(FROM,FILE)
"RTN","XDRMERG2",107,0)
 Q
"RTN","XDRMERG2",108,0)
 ;
"RTN","XDRMERG2",109,0)
GETSSN ; For files 2 and 200, get SSN value for XDRFROM entry
"RTN","XDRMERG2",110,0)
 I FILE=2 S XDRVAL("SSN")=$P(^DPT(IENFROM,0),U,9) Q
"RTN","XDRMERG2",111,0)
 I FILE=200 S XDRVAL("SSN")=$P(^VA(200,IENFROM,1),U,9) Q
"RTN","XDRMERG2",112,0)
 Q
"RTN","XDRMERG2",113,0)
 ;
"RTN","XDRMERG2",114,0)
OVRWRI(FILE,IENFR,IENTO) ;
"RTN","XDRMERG2",115,0)
 N XNI,XDRARR,XDRARR1,IENSF,I,XNN,IENA,IENB ;      THIS WOULD BE ONLY TOP LEVEL
"RTN","XDRMERG2",116,0)
 ;
"RTN","XDRMERG2",117,0)
 S IENA=$O(@FROM@(IENFR,IENTO,"")) Q:IENA=""
"RTN","XDRMERG2",118,0)
 S IENB=$O(@FROM@(IENFR,IENTO,IENA,"")) Q:IENB=""
"RTN","XDRMERG2",119,0)
 S XNN=@FROM@(IENFR,IENTO,IENA,IENB) Q:XNN'>0
"RTN","XDRMERG2",120,0)
 S XNI="",IENSF=IENFR_","
"RTN","XDRMERG2",121,0)
 F I=0:0 S I=$O(^VA(15,XNN,3,FILE,1,I)) Q:I'>0  S XNI=XNI_^(I,0)_";"
"RTN","XDRMERG2",122,0)
 I XNI'="" D
"RTN","XDRMERG2",123,0)
 . D GETS^DIQ(FILE,IENSF,XNI,"I","XDRARR")
"RTN","XDRMERG2",124,0)
 . F I=0:0 S I=$O(XDRARR(FILE,IENSF,I)) Q:I'>0  D
"RTN","XDRMERG2",125,0)
 . . S XDRARR1(FILE,(IENTO_","),I)=XDRARR(FILE,IENSF,I,"I")
"RTN","XDRMERG2",126,0)
 . I FILE=2!(FILE=200),$D(XDRARR1(FILE,(IENTO_","),$S(FILE=2:.09,1:9))) D
"RTN","XDRMERG2",127,0)
 . . N IENST,XDRARR2 S IENST=IENTO_","
"RTN","XDRMERG2",128,0)
 . . D GETS^DIQ(FILE,IENST,$S(FILE=2:.09,1:9),"I","XDRARR2")
"RTN","XDRMERG2",129,0)
 . . I $D(XDRARR2(FILE,IENST,$S(FILE=2:.09,1:9),"I")) D
"RTN","XDRMERG2",130,0)
 . . . S XDRARR1(FILE,IENSF,$S(FILE=2:.09,1:9))=XDRARR2(FILE,IENST,$S(FILE=2:.09,1:9),"I")
"RTN","XDRMERG2",131,0)
 . . . Q
"RTN","XDRMERG2",132,0)
 . . Q
"RTN","XDRMERG2",133,0)
 . D FILE^DIE("","XDRARR1")
"RTN","XDRMERG2",134,0)
 Q
"RTN","XDRMERG2",135,0)
SETALIAS ; For selected files place data into alias field of TO entry
"RTN","XDRMERG2",136,0)
 N XDRARR
"RTN","XDRMERG2",137,0)
 I FILE=2 D
"RTN","XDRMERG2",138,0)
 . S XDRARR(2.01,"+1,"_IENTO_",",.01)=XDRVAL
"RTN","XDRMERG2",139,0)
 . S XDRARR(2.01,"+1,"_IENTO_",",1)=XDRVAL("SSN")
"RTN","XDRMERG2",140,0)
 . D UPDATE^DIE("","XDRARR")
"RTN","XDRMERG2",141,0)
 I FILE=200 D
"RTN","XDRMERG2",142,0)
 . S XDRARR(200.04,"+1,"_IENTO_",",.01)=XDRVAL
"RTN","XDRMERG2",143,0)
 . D FILE^DIE("","XDRARR")
"RTN","XDRMERG2",144,0)
 Q
"RTN","XDRMERG2",145,0)
 ;
"RTN","XDRMERG2",146,0)
CHKLOCAL ; CHECK STATUS FOR LOCAL MERGE PROCESSES (EVEN IF SOME DATA EXISTS IN MERGE PROCESS FILE)
"RTN","XDRMERG2",147,0)
 N XJOB,X,N,XNAME,XSTAT,XDRFIL,DIRUT,CHKLOCAL
"RTN","XDRMERG2",148,0)
 S CHKLOCAL=1,XDRFIL="^XTMP(""XDRSTAT"","
"RTN","XDRMERG2",149,0)
 G CHK1
"RTN","XDRMERG2",150,0)
 ;
"RTN","XDRMERG2",151,0)
CHECK ;
"RTN","XDRMERG2",152,0)
 N XJOB,X,N,M,BA,XNAME,XDRFIL,DIRUT,START,XDRFIL1,XDRFIL2
"RTN","XDRMERG2",153,0)
CHK1 ;
"RTN","XDRMERG2",154,0)
 I '$D(CHKLOCAL) S XDRFIL=$S($O(^VA(15.2,0))>0:"^VA(15.2,",1:"^XTMP(""XDRSTAT"",")
"RTN","XDRMERG2",155,0)
 S N=0,BA=""
"RTN","XDRMERG2",156,0)
 W @IOF
"RTN","XDRMERG2",157,0)
 S M=":" F  S M=$O(@(XDRFIL_""""_M_""")"),-1) Q:M'>0  D
"RTN","XDRMERG2",158,0)
 . I XDRFIL["VA(15.2",$P(^VA(15.2,M,0),U,4)="S" Q
"RTN","XDRMERG2",159,0)
 . S XDRFIL1=$S(XDRFIL["VA":$NA(@(XDRFIL_M_")")),1:$NA(^XTMP("XDRSTAT",M)))
"RTN","XDRMERG2",160,0)
 . S N=$S($D(^TMP($J,"BDT",N)):N+1,1:N) S XNAME="",XJOB="",N=N+1
"RTN","XDRMERG2",161,0)
 . D ONESET(XDRFIL1,0)
"RTN","XDRMERG2",162,0)
 . I XDRFIL["VA" D
"RTN","XDRMERG2",163,0)
 . . F J=0:0 S J=$O(@XDRFIL1@(3,J)) Q:J'>0  D
"RTN","XDRMERG2",164,0)
 . . . S XDRFIL2=$NA(@XDRFIL1@(3,J))
"RTN","XDRMERG2",165,0)
 . . . D ONESET(XDRFIL2,1)
"RTN","XDRMERG2",166,0)
 D HEADER
"RTN","XDRMERG2",167,0)
 F N=0:0 S N=$O(^TMP($J,"BDT",N)) Q:N'>0  D  Q:$D(DIRUT)
"RTN","XDRMERG2",168,0)
 .I (IOSL-$Y)<6 D:IOST["C-"  Q:$D(DIRUT)  W @IOF,! D HEADER ;REM -9/25/96 page breaks
"RTN","XDRMERG2",169,0)
 ..W ! S DIR(0)="E" D ^DIR K DIR
"RTN","XDRMERG2",170,0)
 . S XNAME=$P($G(^TMP($J,"BDT",N)),"~",2)
"RTN","XDRMERG2",171,0)
 . S START=$P($G(^TMP($J,"BDT",N)),"~",3)
"RTN","XDRMERG2",172,0)
 . S XJOB=$P($G(^TMP($J,"BDT",N)),"~",4)
"RTN","XDRMERG2",173,0)
 . I BA'="",BA'=$P($G(START),"."),START'="" W !
"RTN","XDRMERG2",174,0)
 . S BA=$P($G(START),".")
"RTN","XDRMERG2",175,0)
 . S:XNAME["THREAD" XNAME="  "_XNAME
"RTN","XDRMERG2",176,0)
 . W !,XNAME Q:XNAME=""  I $L(XNAME)>18 W !
"RTN","XDRMERG2",177,0)
 . S X=START D DATE8 W ?20,X,"  ",$P(^TMP($J,"BDT",N),"~") W:START="" !
"RTN","XDRMERG2",178,0)
 . S X=$P(XJOB,U) I X'="" D DATE8 W ?36,X
"RTN","XDRMERG2",179,0)
 . I X="" D
"RTN","XDRMERG2",180,0)
 . . S X=$P(XJOB,U,2) D DATE8 W ?36,X
"RTN","XDRMERG2",181,0)
 . . W ?50,$P(XJOB,U,3),?55,$P(XJOB,U,4),?64," ",$P(XJOB,U,5)
"RTN","XDRMERG2",182,0)
 . . I $P(^TMP($J,"BDT",N),"~")="E" S N=N+1 W !?5,"ERROR: ",$E($P(^TMP($J,"BDT",N),"~"),1,230),!
"RTN","XDRMERG2",183,0)
 K ^TMP($J,"BDT")
"RTN","XDRMERG2",184,0)
 Q
"RTN","XDRMERG2",185,0)
 ;
"RTN","XDRMERG2",186,0)
HEADER ;REM -9/25/96 Write header.
"RTN","XDRMERG2",187,0)
 W !,?55,"Current",?65,"Current"
"RTN","XDRMERG2",188,0)
 W !,"Merge Set             Start    Stat   Last Chk  Phase  File      Entry",!
"RTN","XDRMERG2",189,0)
 Q
"RTN","XDRMERG2",190,0)
 ;
"RTN","XDRMERG2",191,0)
DATE8 ;
"RTN","XDRMERG2",192,0)
 N X1
"RTN","XDRMERG2",193,0)
 I X="" S X="           " Q
"RTN","XDRMERG2",194,0)
 S X1=X
"RTN","XDRMERG2",195,0)
 S X=$E(X1,4,5)_"/"_$E(X1,6,7)_" "
"RTN","XDRMERG2",196,0)
 S X1=$P(X1,".",2)_"000000"
"RTN","XDRMERG2",197,0)
 S X=X_$E(X1,1,2)_":"_$E(X1,3,4)
"RTN","XDRMERG2",198,0)
 Q
"RTN","XDRMERG2",199,0)
 ;
"RTN","XDRMERG2",200,0)
ONESET(FILE,SPECIAL) ;
"RTN","XDRMERG2",201,0)
 N JOBNUM,JVAL
"RTN","XDRMERG2",202,0)
 I FILE'["VA" S JVAL=0 F JOBNUM=0:0 S JOBNUM=$O(@FILE@("START",JOBNUM)) Q:JOBNUM'>0  S JVAL=JVAL+1 D LOOP
"RTN","XDRMERG2",203,0)
 I FILE'["VA" Q
"RTN","XDRMERG2",204,0)
LOOP S N=N+1 I $D(^TMP($J,"BDT",N)) G LOOP
"RTN","XDRMERG2",205,0)
 I 'SPECIAL S START=$S(FILE'["VA":@FILE@("START",JOBNUM),$P(@FILE@(0),U,5)>0:$P(^(0),U,5),1:$P(^(0),U,3)) I 1
"RTN","XDRMERG2",206,0)
 I SPECIAL S START=$S($P(@FILE@(0),U,4)>0:$P(^(0),U,4),1:$P(^(0),U,2))
"RTN","XDRMERG2",207,0)
 S XNAME=$S(XDRFIL'["VA":XJOB_" J"_JVAL_"  ",'SPECIAL:$P(@FILE@(0),U),1:"  "_$E($P(@FILE@(0),U),1,15))
"RTN","XDRMERG2",208,0)
 I XDRFIL["VA" S ^TMP($J,"BDT",N)=$S('SPECIAL:$P(@FILE@(0),U,4),1:$P(@FILE@(0),U,3))
"RTN","XDRMERG2",209,0)
 E  S ^TMP($J,"BDT",N)=$S($D(@FILE@("DONE",JOBNUM)):"C",1:"A")
"RTN","XDRMERG2",210,0)
 I ^TMP($J,"BDT",N)="E" S ^TMP($J,"BDT",N+1)=$G(@FILE@(2))
"RTN","XDRMERG2",211,0)
 S XJOB=$S(XDRFIL'["VA":$G(@FILE@("DONE",JOBNUM)),'SPECIAL:$P(@FILE@(0),U,6),1:$P(@FILE@(0),U,5))
"RTN","XDRMERG2",212,0)
 I XJOB="" D
"RTN","XDRMERG2",213,0)
 . S XJOB=XJOB_U_$S(XDRFIL'["VA":$G(@FILE@("TIME",JOBNUM)),1:$G(@FILE@(1)))
"RTN","XDRMERG2",214,0)
 . I XDRFIL'["VA"!SPECIAL,^TMP($J,"BDT",N)="A",$$FMDIFF^XLFDT($$NOW^XLFDT(),$P(XJOB,U,2),2)>43000 D
"RTN","XDRMERG2",215,0)
 . . S ^TMP($J,"BDT",N)="U"
"RTN","XDRMERG2",216,0)
 . . I XDRFIL["VA" D
"RTN","XDRMERG2",217,0)
 . . . S $P(@FILE@(0),U,3)="U"
"RTN","XDRMERG2",218,0)
 . I ^TMP($J,"BDT",N)="U",XDRFIL["VA",SPECIAL,$$FMDIFF^XLFDT($$NOW^XLFDT(),$P(XJOB,U,2),2)'>43000 S ^TMP($J,"BDT",N)="A",$P(@FILE@(0),U,3)="A"
"RTN","XDRMERG2",219,0)
 S ^TMP($J,"BDT",N)=$P(^TMP($J,"BDT",N),"~")_"~"_XNAME_"~"_START_"~"_XJOB
"RTN","XDRMERG2",220,0)
 Q
"RTN","XDRMERGA")
0^2^B98063543^B63181099
"RTN","XDRMERGA",1,0)
XDRMERGA ;SF-IRMFO.SEA/JLI - START OF NON-INTERACTIVE BATCH MERGE ;01/31/2000  09:14
"RTN","XDRMERGA",2,0)
 ;;7.3;TOOLKIT;**23,28,37,40,45,137**;Apr 25, 1995;Build 10
"RTN","XDRMERGA",3,0)
 ;;
"RTN","XDRMERGA",4,0)
 Q
"RTN","XDRMERGA",5,0)
APPROVE ; This is the entry point for approving a duplicate pair for merge
"RTN","XDRMERGA",6,0)
 K DIRUT,DUOUT,DTOUT ;
"RTN","XDRMERGA",7,0)
 D EN^XDRVCHEK ; update verified and/or ready to merge statuses if necessary
"RTN","XDRMERGA",8,0)
 ;
"RTN","XDRMERGA",9,0)
 N XDRXX,XDRYY,XDRMA,DIE,DIC,DIR,DR,ZTDTH,ZTSK
"RTN","XDRMERGA",10,0)
 N XDRX,XDRY,XDRFIL,XDRGLOB,X,Y,XDRNAME
"RTN","XDRMERGA",11,0)
 N XDRFDA,XDRIENS,XDRI,XDRJ,XDRK,DA,DIK
"RTN","XDRMERGA",12,0)
 ;
"RTN","XDRMERGA",13,0)
 S XDRFIL=$$FILE^XDRDPICK() Q:XDRFIL'>0
"RTN","XDRMERGA",14,0)
 S XDRDIC=^DIC(XDRFIL,0,"GL")
"RTN","XDRMERGA",15,0)
 S XDRGLOB=$E(XDRDIC,2,999)
"RTN","XDRMERGA",16,0)
 S X=""
"RTN","XDRMERGA",17,0)
 S XNCNT=0,XNCNT0=0
"RTN","XDRMERGA",18,0)
 F  S X=$O(^VA(15,"AVDUP",XDRGLOB,X)) Q:X=""  S Y=$O(^(X,0)) D
"RTN","XDRMERGA",19,0)
 . N YVAL S YVAL=^VA(15,Y,0)
"RTN","XDRMERGA",20,0)
 . I $P(YVAL,U,20)>0 Q  ; ALREADY DONE OR SCHEDULED
"RTN","XDRMERGA",21,0)
 . I $P(YVAL,U,3)'="V" Q  ; TAKE ONLY VERIFIED
"RTN","XDRMERGA",22,0)
 . I $P(YVAL,U,5)'=1 Q  ; TAKE ONLY IF MARKED READY TO MERGE
"RTN","XDRMERGA",23,0)
 . I $P(YVAL,U,4)="" D  Q  ; MAKE SURE MERGE DIRECTION IS DEFINED
"RTN","XDRMERGA",24,0)
 . . W !,"Entry `",Y," DOES NOT HAVE MERGE DIRECTION DEFINED - CAN'T APPROVE"
"RTN","XDRMERGA",25,0)
 . . N XDRDICA S XDRDICA=U_$P($P(YVAL,U),";",2)
"RTN","XDRMERGA",26,0)
 . . I '$D(@(XDRDICA_(+YVAL)_",0)"))!$D(@(XDRDICA_(+YVAL)_",-9)"))!'$D(@(XDRDICA_(+$P(YVAL,U,2))_",0)"))!$D(@(XDRDICA_(+$P(YVAL,U,2))_",-9)")) D  Q
"RTN","XDRMERGA",27,0)
 . . . D RESET^XDRDPICK(Y)
"RTN","XDRMERGA",28,0)
 . I $P(YVAL,U,13)'>0 D
"RTN","XDRMERGA",29,0)
 . . I $P(YVAL,U,4)'=2 S XDRY(+YVAL,+$P(YVAL,U,2))=Y
"RTN","XDRMERGA",30,0)
 . . E  S XDRY(+$P(YVAL,U,2),+YVAL)=Y
"RTN","XDRMERGA",31,0)
 . . S XNCNT0=XNCNT0+1
"RTN","XDRMERGA",32,0)
 I XNCNT0>0 W !!,XNCNT0,"  Entries are awaiting approval for merging  Return to continue..." R X:DTIME
"RTN","XDRMERGA",33,0)
 I $D(XDRY) D CHKBKUP I $D(DUOUT)!$D(DTOUT) Q
"RTN","XDRMERGA",34,0)
 K XDRY
"RTN","XDRMERGA",35,0)
 Q
"RTN","XDRMERGA",36,0)
 ;
"RTN","XDRMERGA",37,0)
STOP ;
"RTN","XDRMERGA",38,0)
 N XDRI,DIE,DA,DR,DIR,XDRC
"RTN","XDRMERGA",39,0)
 S XDRC=0 F XDRI=0:0 S XDRI=$O(^VA(15.2,XDRI)) Q:XDRI'>0  I $P(^(XDRI,0),U,4)="A" D
"RTN","XDRMERGA",40,0)
 . S XDRC=XDRC+1
"RTN","XDRMERGA",41,0)
 . S DIR(0)="Y",DIR("A")="Do you want to stop "_$P(^VA(15.2,XDRI,0),U)
"RTN","XDRMERGA",42,0)
 . D ^DIR K DIR I Y'>0 Q
"RTN","XDRMERGA",43,0)
 . S DIE="^VA(15.2,",DA=XDRI,DR=".09///1" D ^DIE
"RTN","XDRMERGA",44,0)
 . K DIE,DR
"RTN","XDRMERGA",45,0)
 I XDRC'>0 W !!,$C(7),"No active merge processes were found.",!!
"RTN","XDRMERGA",46,0)
 Q
"RTN","XDRMERGA",47,0)
 ;
"RTN","XDRMERGA",48,0)
CHKBKUP ; Check if backups have been generated for outstanding pairs
"RTN","XDRMERGA",49,0)
 N I,J,X,Y,X1,X2,XNCNT,I,J,K,L,M,N,XX
"RTN","XDRMERGA",50,0)
 K DIR
"RTN","XDRMERGA",51,0)
 ;S DIR("A")="Do you want to check pairs awaiting backups (Y/N)"
"RTN","XDRMERGA",52,0)
 ;S DIR("?")="Indication that a backup of the data for the entries for a duplicate pair is required prior to merging the entries.  You may review entries to see if any should be marked as completed."
"RTN","XDRMERGA",53,0)
 ;S DIR(0)="Y" D ^DIR K DIR Q:Y'>0
"RTN","XDRMERGA",54,0)
 S ASKNAME="ASK1" D CHECK
"RTN","XDRMERGA",55,0)
 Q
"RTN","XDRMERGA",56,0)
 ;
"RTN","XDRMERGA",57,0)
CHECK ;
"RTN","XDRMERGA",58,0)
 W @IOF
"RTN","XDRMERGA",59,0)
 S XNCNT=0
"RTN","XDRMERGA",60,0)
 F I=0:0 S I=$O(XDRY(I)) Q:I'>0  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","XDRMERGA",61,0)
 . F J=0:0 S J=$O(XDRY(I,J)) Q:J'>0  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","XDRMERGA",62,0)
 . . S X01=$G(@(XDRDIC_I_",0)")),X1=$P(X01,U),X1S=$P(X01,U,9),X1S=$E(X1S,1,3)_"-"_$E(X1S,4,5)_"-"_$E(X1S,6,15)
"RTN","XDRMERGA",63,0)
 . . S X02=$G(@(XDRDIC_J_",0)")),X2=$P(X02,U),X2S=$P(X02,U,9),X2S=$E(X2S,1,3)_"-"_$E(X2S,4,5)_"-"_$E(X2S,6,15)
"RTN","XDRMERGA",64,0)
 . . I X1=""!(X2="") K XDRY(I,J) Q
"RTN","XDRMERGA",65,0)
 . . F  Q:X1'["MERGING INTO"  S X1=$P($P(X1,"(",2,10),")",1,$L(X1,")")-1)
"RTN","XDRMERGA",66,0)
 . . S XNCNT=XNCNT+1,XX(XNCNT)=I_U_J
"RTN","XDRMERGA",67,0)
 . . W !!,$J(XNCNT,3),"  ",?8,X1,?42,X1S,?60,"[",I,"]"
"RTN","XDRMERGA",68,0)
 . . W !,?8,X2,?42,X2S,?60,"[",J,"]"
"RTN","XDRMERGA",69,0)
 . . S ^TMP("XDR",$J,XNCNT)=X1_U_X1S_U_I_U_X2_U_X2S_U_J ;LLS 07-NOV-2013 - save for possible verification prompt
"RTN","XDRMERGA",70,0)
 . . I '(XNCNT#6) D @ASKNAME Q:$D(DUOUT)!$D(DTOUT)  W @IOF
"RTN","XDRMERGA",71,0)
 I '($D(DUOUT)!$D(DTOUT)) D @ASKNAME
"RTN","XDRMERGA",72,0)
 Q
"RTN","XDRMERGA",73,0)
 ;
"RTN","XDRMERGA",74,0)
ASK1 ;
"RTN","XDRMERGA",75,0)
 W ! S DIR(0)="LO^1:"_XNCNT,DIR("A")="Select entries to approve them for merging"
"RTN","XDRMERGA",76,0)
 ;W !,"TEST"
"RTN","XDRMERGA",77,0)
 D ^DIR K DIR K DIRUT Q:$D(DUOUT)!$D(DTOUT)
"RTN","XDRMERGA",78,0)
 S K="" F  S K=$O(Y(K)) Q:K=""  S Y=Y(K) K Y(K) D
"RTN","XDRMERGA",79,0)
 . F M=1:1 S N=$P(Y,",",M) Q:N=""  D
"RTN","XDRMERGA",80,0)
 . . S N1=+XX(N),N2=$P(XX(N),U,2)
"RTN","XDRMERGA",81,0)
 . . I $$TESTPAT^VADPT(N1)=1,$$TESTPAT^VADPT(N2)'=1 D  Q:Y'=1  ;LLS - trying to merge test patient into real patient
"RTN","XDRMERGA",82,0)
 . . . N XDRFLDI,XDRPC
"RTN","XDRMERGA",83,0)
 . . . F XDRFLDI=1:1:6 S XDRPC(XDRFLDI)=$P(^TMP("XDR",$J,XNCNT),U,XDRFLDI) ;LLS 07-NOV-2013
"RTN","XDRMERGA",84,0)
 . . . W !!,$J(N,3),"  ",?8,XDRPC(1),?42,XDRPC(2),?60,"[",XDRPC(3),"]" ;LLS 07-NOV-2013
"RTN","XDRMERGA",85,0)
 . . . W !,?8,XDRPC(4),?42,XDRPC(5),?60,"[",XDRPC(6),"]" ;LLS 07-NOV-2013
"RTN","XDRMERGA",86,0)
 . . . W !!!! S DIR(0)="Y^"_XNCNT,DIR("A")="Merge the above pair (a test patient into a real patient) SURE" ;LLS 07-NOV-2013
"RTN","XDRMERGA",87,0)
 . . . D ^DIR K DIR ;LLS 07-NOV-2013
"RTN","XDRMERGA",88,0)
 . . . I Y'=1 W !!,"*****[",XDRPC(3),"] WILL NOT BE MERGED INTO [",XDRPC(6),"]" ;LLS 07-NOV-2013
"RTN","XDRMERGA",89,0)
 . . S (DA,XDRX(N1,N2))=XDRY(N1,N2)
"RTN","XDRMERGA",90,0)
 . . N I,J,K,M,N,N1,N2,X1,X2,X,DIE,DR,Y
"RTN","XDRMERGA",91,0)
 . . S DIE="^VA(15,"
"RTN","XDRMERGA",92,0)
 . . S X=DT,X=$$FMTE^XLFDT(X,"2D")
"RTN","XDRMERGA",93,0)
 . . S X=$P($P(^VA(200,DUZ,0),U),",",2)_" "_$P($P(^(0),U),",")_" (DUZ="_DUZ_") "_X
"RTN","XDRMERGA",94,0)
 . . S DR=".13///1;.14///"_X
"RTN","XDRMERGA",95,0)
 . . D ^DIE
"RTN","XDRMERGA",96,0)
 Q
"RTN","XDRMERGA",97,0)
 ;
"RTN","XDRMERGA",98,0)
RESTART ;  Entry point to restart non-completed merges
"RTN","XDRMERGA",99,0)
 N NC,N S NC=0
"RTN","XDRMERGA",100,0)
 F XDRFDA=0:0 S XDRFDA=$O(^VA(15.2,XDRFDA)) Q:XDRFDA'>0  D
"RTN","XDRMERGA",101,0)
 . S X=$P(^VA(15.2,XDRFDA,0),U,4) I X="C"!(X="A") S N=1 D  Q:N=1
"RTN","XDRMERGA",102,0)
 . . F J=0:0 S J=$O(^VA(15.2,XDRFDA,3,J)) Q:J'>0  I "CA"'[$P(^(J,0),U,3) S N=0 Q
"RTN","XDRMERGA",103,0)
 . S NC=NC+1
"RTN","XDRMERGA",104,0)
 . S DIR(0)="Y",DIR("A")="Do you want to RESTART merge process "_$P(^VA(15.2,XDRFDA,0),U),DIR("B")="NO"
"RTN","XDRMERGA",105,0)
 . D ^DIR K DIR Q:Y'>0
"RTN","XDRMERGA",106,0)
 . S ZTRTN="DQ^XDRMERG0",ZTSAVE("XDRFDA")="",ZTIO="NULL"
"RTN","XDRMERGA",107,0)
 . D ^%ZTLOAD I '$D(ZTSK) W !!,$C(7),"RESTART **NOT** QUEUED" Q
"RTN","XDRMERGA",108,0)
 . S $P(^VA(15.2,XDRFDA,0),U,8,9)=ZTSK_U ; SET TASK NUMBER AND REMOVE HALT FLAG IF SET
"RTN","XDRMERGA",109,0)
 . W !,"Restart queued as task ",ZTSK,!
"RTN","XDRMERGA",110,0)
 I NC'>0 W !!,$C(7),"No merge processes found that needed restarting.",!!
"RTN","XDRMERGA",111,0)
 Q
"RTN","XDRMERGA",112,0)
 ;
"RTN","XDRMERGA",113,0)
 ;
"RTN","XDRMERGA",114,0)
DOSUBS(XDRFROM,XDRTO,IENTOSTR,XDRDASEQ) ;
"RTN","XDRMERGA",115,0)
 N NODEA,SFILE,VALUE,XVALUE,XDRXX,XDRYY,YVALUE,XENTOSTR
"RTN","XDRMERGA",116,0)
 N XDRAA,XDRZZ ; DEBUG STATEMENT
"RTN","XDRMERGA",117,0)
 N XDRALY1,XDRALY2,XDRALY1,XDRALY2,XDRALY1A,XDRALY2A,XDRDUPAF,XDRDUPAT,XDRALYSS,XDRALYNM,XDR1,NODEB ;;LLS 17-OCT-2013 - my new arrays and NODEB was not NEWed and thought it should be
"RTN","XDRMERGA",118,0)
 S SFILE=+$P($G(@(XDRFROM_"0)")),U,2)
"RTN","XDRMERGA",119,0)
 I SFILE'>0 Q  ; NO FILE NUMBER, NOT FILE MANAGER COMPATIBLE
"RTN","XDRMERGA",120,0)
 ;
"RTN","XDRMERGA",121,0)
 ;LLS 17-OCT-2013 added this section to setup arrays for fix duplicate (same Name & Social Security Number) aliases being merged:
"RTN","XDRMERGA",122,0)
 I $G(FILE)=2,SFILE="2.01" D
"RTN","XDRMERGA",123,0)
 . D GETS^DIQ(FILE,$P(XDRGID,U,2)_",","1*","","XDRALY1") ;Put 'FROM' patient ALIAS data into XDRALY1 array
"RTN","XDRMERGA",124,0)
 . M XDRALY1A=XDRALY1(SFILE) ;strip first subscript
"RTN","XDRMERGA",125,0)
 . D GETS^DIQ(FILE,$P(XDRGID,U,3)_",","1*","","XDRALY2") ;Put 'TO' patient ALIAS data into XDRALY2 array
"RTN","XDRMERGA",126,0)
 . M XDRALY2A=XDRALY2(SFILE) ;strip first subscript
"RTN","XDRMERGA",127,0)
 . S XDR1="" F  S XDR1=$O(XDRALY1A(XDR1)) Q:XDR1=""  D  ;Create new 'FROM' patient alias array subscripted by NAME^SSN
"RTN","XDRMERGA",128,0)
 . . S XDRALYSS=XDRALY1A(XDR1,1),XDRALYNM=XDRALY1A(XDR1,.01)
"RTN","XDRMERGA",129,0)
 . . S XDRDUPAF(XDRALYNM_U_XDRALYSS)=$P(XDR1,",",1) ;'FROM' array format: XDRDUPAF(NAME^SSN)=node
"RTN","XDRMERGA",130,0)
 . S XDR1="" F  S XDR1=$O(XDRALY2A(XDR1)) Q:XDR1=""  D  ;Create new 'TO' patient alias array subscripted by NAME^SSN
"RTN","XDRMERGA",131,0)
 . . S XDRALYSS=XDRALY2A(XDR1,1),XDRALYNM=XDRALY2A(XDR1,.01)
"RTN","XDRMERGA",132,0)
 . . S XDRDUPAT(XDRALYNM_U_XDRALYSS)=$P(XDR1,",",1) ;'TO' array format: XDRDUPAT(NAME^SSN)=node 
"RTN","XDRMERGA",133,0)
 ;LLS 17-OCT-2013 end of added section
"RTN","XDRMERGA",134,0)
 ;
"RTN","XDRMERGA",135,0)
 I $P($G(^DD(SFILE,.01,0)),U,2)["W" D  Q  ; HANDLE WORD PROCESSING FIELDS
"RTN","XDRMERGA",136,0)
 . N XF,XT S XT=$E(XDRTO,1,$L(XDRTO)-1)_")"
"RTN","XDRMERGA",137,0)
 . I '$D(@XT) D
"RTN","XDRMERGA",138,0)
 . . S XF=$E(XDRFROM,1,$L(XDRFROM)-1)_")"
"RTN","XDRMERGA",139,0)
 . . M @XT=@XF
"RTN","XDRMERGA",140,0)
 . . Q
"RTN","XDRMERGA",141,0)
 . Q
"RTN","XDRMERGA",142,0)
 F NODEA=0:0 S NODEA=$O(@(XDRFROM_NODEA_")")) Q:NODEA'>0  D
"RTN","XDRMERGA",143,0)
 . ;LLS 17-OCT-2013 - the following line of code was added to check patient alias multiple (file #2.01) and
"RTN","XDRMERGA",144,0)
 . ;           skip moving this alias because it already exists in the 'merge to' patient file.
"RTN","XDRMERGA",145,0)
 . ;           XDRDUPAF array contains 'FROM' file aliases and XDRDUPAT contains 'TO' file aliases
"RTN","XDRMERGA",146,0)
 . I SFILE=2.01,$D(XDRDUPAF($P($G(@(XDRFROM_NODEA_",0)"),"*"),U,1,2))),$D(XDRDUPAT($P($G(@(XDRFROM_NODEA_",0)"),"*"),U,1,2))) Q  ;LLS 17-OCT-2013 - added
"RTN","XDRMERGA",147,0)
 . S VALUE=$P($G(@(XDRFROM_NODEA_",0)")),U) ; GET .01 VALUE
"RTN","XDRMERGA",148,0)
 . N XDRDT S XDRDT=^DD(SFILE,.01,0)
"RTN","XDRMERGA",149,0)
 . I $P(XDRDT,U,2)["D" S XDRDT=$P(XDRDT,U,5,999),XDRDINUM=$S(XDRDT["DINUM":1,1:0) I XDRDINUM S XDRDT=0 D DINUMDAT Q:XDRDT  ; HANDLE DINUMED DATES BY SIMPLY MOVING THEM
"RTN","XDRMERGA",150,0)
 . S YVALUE=0,XVALUE=0 I $D(^DD(SFILE,.001,0)) S YVALUE=NODEA I $D(@(XDRTO_NODEA_")")) S XVALUE=YVALUE
"RTN","XDRMERGA",151,0)
 . I XVALUE=0,$P(^DD(SFILE,.01,0),U,5,99)["DINUM",$D(@(XDRTO_NODEA_")")) S XVALUE=NODEA
"RTN","XDRMERGA",152,0)
 . I XVALUE=0 S XVALUE=+$$FIND1^DIC(SFILE,(","_IENTOSTR),"Q",VALUE) ; FIND CURRENT ENTRY NUMBER, IF PRESENT
"RTN","XDRMERGA",153,0)
 . I XVALUE>0 D  Q  ; SUBFILE EXISTS IN IENTO, CHECK FOR LOWER SUBFILES
"RTN","XDRMERGA",154,0)
 . . N X,X1,NODE,NEWFROM,NEWTO,NEWTOIEN
"RTN","XDRMERGA",155,0)
 . . S NODE=""
"RTN","XDRMERGA",156,0)
 . . F  S NODE=$O(@(XDRFROM_NODEA_","""_NODE_""")")) Q:NODE=""  D
"RTN","XDRMERGA",157,0)
 . . . I $D(@(XDRFROM_NODEA_","""_NODE_""")"))'>1 Q
"RTN","XDRMERGA",158,0)
 . . . S NEWFROM=XDRFROM_NODEA_","""_NODE_""","
"RTN","XDRMERGA",159,0)
 . . . S NEWTO=XDRTO_XVALUE_","""_NODE_""","
"RTN","XDRMERGA",160,0)
 . . . S NEWTOIEN=XVALUE_","_IENTOSTR
"RTN","XDRMERGA",161,0)
 . . . D DOSUBS(NEWFROM,NEWTO,NEWTOIEN,(XVALUE_U_XDRDASEQ))
"RTN","XDRMERGA",162,0)
 . K XDRYY I YVALUE>0 S XDRYY(1)=YVALUE
"RTN","XDRMERGA",163,0)
 . S XENTOSTR="+1,"_IENTOSTR
"RTN","XDRMERGA",164,0)
 . S XDRFILTY=$P($G(^DD(SFILE,.01,0)),U,2)
"RTN","XDRMERGA",165,0)
 . I XDRFILTY["P" S VALUE="`"_VALUE
"RTN","XDRMERGA",166,0)
 . I XDRFILTY["V" D
"RTN","XDRMERGA",167,0)
 . . N Y S Y=$P(VALUE,";",2) Q:Y=""
"RTN","XDRMERGA",168,0)
 . . S Y=$P($G(@("^"_Y_"0)")),U) Q:Y=""
"RTN","XDRMERGA",169,0)
 . . S VALUE=Y_".`"_(+VALUE)
"RTN","XDRMERGA",170,0)
 . . Q
"RTN","XDRMERGA",171,0)
 . I SFILE=70.03 S XDRFILTY="D" ;use internal data for file 70.03
"RTN","XDRMERGA",172,0)
 . I XDRFILTY'["P"&(XDRFILTY'["V"),XDRFILTY'["D" S VALUE=$$GETEXT(XDRFROM,NODEA,SFILE)
"RTN","XDRMERGA",173,0)
 . S XDRXX(SFILE,XENTOSTR,.01)=VALUE
"RTN","XDRMERGA",174,0)
 . I $O(^DD(SFILE,0,"ID",0))>0  D
"RTN","XDRMERGA",175,0)
 . . ;CODE FOR ADDING IDENTIFIERS
"RTN","XDRMERGA",176,0)
 . . N I,N,XDRFROM1,IENFR
"RTN","XDRMERGA",177,0)
 . . S N=0,I=SFILE F  S I=$G(^DD(I,0,"UP")) Q:I'>0  S N=N+1
"RTN","XDRMERGA",178,0)
 . . S XDRFROM1=$P(XDRFROM,"(",2,99),IENFR=NODEA_","
"RTN","XDRMERGA",179,0)
 . . F I=$L(XDRFROM1,",")-2:-2 Q:N'>0  S IENFR=IENFR_$P(XDRFROM1,",",I)_",",N=N-1
"RTN","XDRMERGA",180,0)
 . . ;
"RTN","XDRMERGA",181,0)
 . . F XDRID=0:0 S XDRID=$O(^DD(SFILE,0,"ID",XDRID)) Q:XDRID'>0  D
"RTN","XDRMERGA",182,0)
 . . . S N=$$GET1^DIQ(SFILE,IENFR,XDRID)
"RTN","XDRMERGA",183,0)
 . . . I N'="" S XDRXX(SFILE,XENTOSTR,XDRID)=N
"RTN","XDRMERGA",184,0)
 . . . Q
"RTN","XDRMERGA",185,0)
 . . Q
"RTN","XDRMERGA",186,0)
 . ;
"RTN","XDRMERGA",187,0)
 . K XDRAA,XDRZZ I $D(XDRTESTK) M XDRAA=XDRXX ; DEBUG STATEMENT
"RTN","XDRMERGA",188,0)
 . ; DATES THAT ARE DINUMED HAVE BEEN HANDLED ABOVE, SO CAN PASS A DATE IN AS AN INTERNAL VALUE
"RTN","XDRMERGA",189,0)
 . D UPDATE^DIE($S(XDRFILTY["D":"",1:"E"),"XDRXX","XDRYY","XDRZZ") ; CREATE A NEW ENTRY IN IENTO FOR VALUE
"RTN","XDRMERGA",190,0)
 . I $D(XDRZZ),$D(XDRTESTK),SFILE'=2.0361 S XDRTESTK=XDRTESTK+1 M ^XTMP("XDRTESTK",$$NOW^XLFDT(),XDRTESTK,"XX")=XDRAA,^("ZZ")=XDRZZ ; DEBUG STATEMENT
"RTN","XDRMERGA",191,0)
 . S NODEB=$G(XDRYY(1)) I NODEB'>0 Q
"RTN","XDRMERGA",192,0)
 . M @(XDRTO_NODEB_")")=@(XDRFROM_NODEA_")")
"RTN","XDRMERGA",193,0)
 . S DIK=XDRTO,DA=NODEB D
"RTN","XDRMERGA",194,0)
 . . F I=1:1 S DA(I)=$P(XDRDASEQ,U,I) I DA(I)="" K DA(I) Q
"RTN","XDRMERGA",195,0)
 . I SFILE=55.06 N DIU S DIU(0)=1 F DIK(1)=".01^B","10^AUDS","34^AUD","64^AUDDD","7^ACR1" D EN1^DIK
"RTN","XDRMERGA",196,0)
 . I SFILE'=55.06 N DIU S DIU(0)=1 D IX^DIK
"RTN","XDRMERGA",197,0)
 Q
"RTN","XDRMERGA",198,0)
 ;
"RTN","XDRMERGA",199,0)
GETEXT(DICA,DA,FILNUM) ; GET EXTERNAL VALUE FOR .01 FIELD
"RTN","XDRMERGA",200,0)
 N DIC,DIQ,DR,XDRQ
"RTN","XDRMERGA",201,0)
 S DIC=DICA,DIC("P")=FILNUM,DR=.01,DIQ="XDRQ",DIQ(0)="E"
"RTN","XDRMERGA",202,0)
 D EN^DIQ1
"RTN","XDRMERGA",203,0)
 Q $G(XDRQ(FILNUM,DA,.01,"E"))
"RTN","XDRMERGA",204,0)
 ;
"RTN","XDRMERGA",205,0)
DINUMDAT ; PROCESS ENTRIES WITH SAMPLE DATE/TIMES WITH SECONDS, NEEDS DINUM
"RTN","XDRMERGA",206,0)
 N NEWVAL,NODETO
"RTN","XDRMERGA",207,0)
 S NODETO=NODEA
"RTN","XDRMERGA",208,0)
 I $D(@(XDRTO_NODEA_")")) Q:(SFILE'=63.04)  D
"RTN","XDRMERGA",209,0)
 . S NEWVAL=VALUE
"RTN","XDRMERGA",210,0)
 . F  Q:'$D(@(XDRTO_NODETO_")"))  S NODETO=NODETO-.000001,NEWVAL=NEWVAL+.000001
"RTN","XDRMERGA",211,0)
 M @(XDRTO_NODETO_")")=@(XDRFROM_NODEA_")")
"RTN","XDRMERGA",212,0)
 I $D(NEWVAL) S $P(@(XDRTO_NODETO_",0)"),U)=NEWVAL
"RTN","XDRMERGA",213,0)
 S DIK=XDRTO,DA=NODEA D  D IX^DIK
"RTN","XDRMERGA",214,0)
 . F I=1:1 S DA(I)=$P(XDRDASEQ,U,I) I DA(I)="" K DA(I) Q
"RTN","XDRMERGA",215,0)
 S XDRDT=1
"RTN","XDRMERGA",216,0)
 Q
"RTN","XDRMERGA",217,0)
 ;
"RTN","XDRMERGA",218,0)
DODIS ; CODE TO HANDLE DISPOSITION ENTRIES IN PATIENT FILE
"RTN","XDRMERGA",219,0)
 N XDRI,DA,DIK
"RTN","XDRMERGA",220,0)
 F XDRI=0:0 S XDRI=$O(@(XDRDIC_IENFROM_",""DIS"","_XDRI_")")) Q:XDRI'>0  D
"RTN","XDRMERGA",221,0)
 . I $D(@(XDRDIC_IENTO_",""DIS"","_XDRI_")")) Q
"RTN","XDRMERGA",222,0)
 . M @(XDRDIC_IENTO_",""DIS"","_XDRI_")")=@(XDRDIC_IENFROM_",""DIS"","_XDRI_")")
"RTN","XDRMERGA",223,0)
 . S DA=XDRI,DA(1)=IENTO,DIK=XDRDIC_IENTO_",""DIS""," D IX^DIK
"RTN","XDRMERGA",224,0)
 . Q
"RTN","XDRMERGA",225,0)
 Q
"RTN","XDRMERGA",226,0)
 ;
"RTN","XDRMERGB")
0^3^B79750683^B76785661
"RTN","XDRMERGB",1,0)
XDRMERGB ;SF-IRMFO.SEA/JLI - TENATIVE UPDATE POINTER NODES ;5/14/98  10:30
"RTN","XDRMERGB",2,0)
 ;;7.3;TOOLKIT;**23,137**;Apr 25, 1995;Build 10
"RTN","XDRMERGB",3,0)
 ;;
"RTN","XDRMERGB",4,0)
 Q
"RTN","XDRMERGB",5,0)
 ;
"RTN","XDRMERGB",6,0)
MERGEIT ; MERGE TWO ENTRIES IN FILE
"RTN","XDRMERGB",7,0)
 N NODE,NODE1,NODE2,NODEA,SFILE,XDRFROM,XDRTO,NODEA,VALUE,XVALUE,XDRXX,NODEB,DIK,DA,I,Y,VREF,XNN,XFILNO,IENTOSTR,DFN,XDRZZ
"RTN","XDRMERGB",8,0)
 N XDRAA ; DEBUG STATEMENT
"RTN","XDRMERGB",9,0)
 ;
"RTN","XDRMERGB",10,0)
 S XFILNO=+$P(@(XDRDIC_"0)"),U,2)
"RTN","XDRMERGB",11,0)
 S IENTOSTR=IENTO_","_XDRIENS
"RTN","XDRMERGB",12,0)
 S DFN=IENTO
"RTN","XDRMERGB",13,0)
 ;
"RTN","XDRMERGB",14,0)
 ; NOW MERGE DATA GOING NODE BY NODE
"RTN","XDRMERGB",15,0)
 ;
"RTN","XDRMERGB",16,0)
 S NODE=""
"RTN","XDRMERGB",17,0)
 F  D  Q:NODE=""
"RTN","XDRMERGB",18,0)
 . S NODE1=$O(@(XDRDIC_IENFROM_","""_NODE_""")"))
"RTN","XDRMERGB",19,0)
 . I NODE1="" S NODE="" Q  ; NOTHING MORE TO MOVE OVER
"RTN","XDRMERGB",20,0)
 . S NODE2=$O(@(XDRDIC_IENTO_","""_NODE_""")"))
"RTN","XDRMERGB",21,0)
 . I NODE2'="",NODE1]NODE2 S NODE=NODE2 Q  ; NODE ON TO, BUT NOT ON FROM - GO TO NEXT
"RTN","XDRMERGB",22,0)
 . S NODE=NODE1
"RTN","XDRMERGB",23,0)
 . I $D(@(XDRDIC_IENFROM_","""_NODE_""")"))=1 D  Q  ; SINGLE NODE, MERGE DATA
"RTN","XDRMERGB",24,0)
 . . I NODE2]NODE1!(NODE2="") D  Q  ;  MISSING NODE, JUST MOVE IT OVER
"RTN","XDRMERGB",25,0)
 . . . N XDRXX,FLD,N,J
"RTN","XDRMERGB",26,0)
 . . . F N=0:0 S N=$O(^DD(XFILNO,"GL",NODE,N)) Q:N'>0  S FLD=$O(^(N,0)) I $O(^DD(XFILNO,FLD,1,0))>0 D
"RTN","XDRMERGB",27,0)
 . . . . S X=0 F J=0:0 S J=$O(^DD(XFILNO,FLD,1,J)) Q:J'>0  I $O(^(J,0))>0 S X=1 Q
"RTN","XDRMERGB",28,0)
 . . . . I X>0 D
"RTN","XDRMERGB",29,0)
 . . . . . S XDRXX(XFILNO,IENTOSTR,FLD)=$P(@(XDRDIC_IENFROM_","""_NODE_""")"),U,N)
"RTN","XDRMERGB",30,0)
 . . . K XDRAA I $D(XDRTESTK),$D(XDRXX) M XDRAA=XDRXX ; DEBUT STATEMENT
"RTN","XDRMERGB",31,0)
 . . . K XDRZZ
"RTN","XDRMERGB",32,0)
 . . . I $D(XDRXX) D FILE^DIE("","XDRXX","XDRZZ")
"RTN","XDRMERGB",33,0)
 . . . I $D(XDRTESTK),$D(XDRZZ) S XDRTESTK=XDRTESTK+1 M ^XTMP("XDRTESTK",$$NOW^XLFDT(),XDRTESTK,"XX")=XDRAA,^("ZZ")=XDRZZ ; DEBUG STATMENT
"RTN","XDRMERGB",34,0)
 . . . M @(XDRDIC_IENTO_","""_NODE_""")")=@(XDRDIC_IENFROM_","""_NODE_""")")
"RTN","XDRMERGB",35,0)
 . . I $D(@(XDRDIC_IENTO_","""_NODE_""")"))>1 Q  ; MISMATCH SO QUIT
"RTN","XDRMERGB",36,0)
 . . N XDRXX,FLD
"RTN","XDRMERGB",37,0)
 . . S X1=@(XDRDIC_IENFROM_","""_NODE_""")")
"RTN","XDRMERGB",38,0)
 . . S (X2,X3)=@(XDRDIC_IENTO_","""_NODE_""")")
"RTN","XDRMERGB",39,0)
 . . F I=1:1 Q:X1=""  S X=$P(X1,U),X1=$P(X1,U,2,999) I X'="" D
"RTN","XDRMERGB",40,0)
 . . . S Y=$P(X2,U,I)
"RTN","XDRMERGB",41,0)
 . . . I Y=""  D
"RTN","XDRMERGB",42,0)
 . . . . ;S $P(X2,U,I)=X ;LLS 26-OCT-2013 replaced with conditional SET below
"RTN","XDRMERGB",43,0)
 . . . . S FLD=$O(^DD(XFILNO,"GL",NODE,I,0)) S JXFLD=FLD
"RTN","XDRMERGB",44,0)
 . . . . I (XFILNO'=2)!(FLD'=.6) S $P(X2,U,I)=X ;LLS 26-OCT-2013 - replaced set of X2 so do not move 'test patient indicator'
"RTN","XDRMERGB",45,0)
 . . . . I XFILNO=2,FLD=.6 Q  ;LLS 26-OCT-2013 - Do not want to move 'test patient indicator' 
"RTN","XDRMERGB",46,0)
 . . . . I FLD>0,$O(^DD(XFILNO,FLD,1,0))>0 S XDRXX(XFILNO,IENTOSTR,FLD)=X
"RTN","XDRMERGB",47,0)
 . . I X2'=X3 D
"RTN","XDRMERGB",48,0)
 . . . I $D(XDRXX) D
"RTN","XDRMERGB",49,0)
 . . . . K XDRAA I $D(XDRTESTK) M XDRAA=XDRXX ; DEBUG STATEMENT
"RTN","XDRMERGB",50,0)
 . . . . K XDRZZ
"RTN","XDRMERGB",51,0)
 . . . . N X2 D FILE^DIE("","XDRXX","XDRZZ")
"RTN","XDRMERGB",52,0)
 . . . . I $D(XDRTESTK),$D(XDRZZ) S XDRTESTK=XDRTESTK+1 M ^XTMP("XDRTESTK",$$NOW^XLFDT(),XDRTESTK,"XX")=XDRAA,^("ZZ")=XDRZZ ; DEBUG STATMENT
"RTN","XDRMERGB",53,0)
 . . . S @(XDRDIC_IENTO_","""_NODE_""")")=X2 ; SET MERGED DATA ON NODE
"RTN","XDRMERGB",54,0)
 . ;
"RTN","XDRMERGB",55,0)
 . ; THE FOLLOWING HANDLES NODES THAT HAVE MULTIPLES
"RTN","XDRMERGB",56,0)
 . ;
"RTN","XDRMERGB",57,0)
 . S XDRFROM=XDRDIC_IENFROM_","""_NODE_""","
"RTN","XDRMERGB",58,0)
 . S XDRTO=XDRDIC_IENTO_","""_NODE_""","
"RTN","XDRMERGB",59,0)
 . I NODE="DIS",XFILNO=2 D DODIS^XDRMERGA Q
"RTN","XDRMERGB",60,0)
 . S IENTOSTR=IENTO_","_XDRIENS
"RTN","XDRMERGB",61,0)
 . D DOSUBS^XDRMERGA(XDRFROM,XDRTO,IENTOSTR,IENTO)
"RTN","XDRMERGB",62,0)
 S XDRXX=$P(@(XDRDIC_IENFROM_",0)"),U)
"RTN","XDRMERGB",63,0)
 K DA N DIU S DIU(0)=1 S DIK=XDRDIC,DA=IENFROM,DFN=DA D ^DIK ; KILL OFF MERGED FROM ENTRY
"RTN","XDRMERGB",64,0)
 S @(XDRDIC_IENFROM_",0)")=XDRXX
"RTN","XDRMERGB",65,0)
 Q
"RTN","XDRMERGB",66,0)
 ;
"RTN","XDRMERGB",67,0)
SAVEMERG(FILE,IENFROM,IENTO) ;
"RTN","XDRMERGB",68,0)
 N IENS,XDRFILE,YYY,ZZZ,XDRFDA,FROMARG,TOARG,XDRDA,Q,Q1,IENVAL,XDRSUB
"RTN","XDRMERGB",69,0)
 S FROMARG=$O(@FROM@(IENFROM,IENTO,"")) Q:FROMARG=""
"RTN","XDRMERGB",70,0)
 S TOARG=$O(@FROM@(IENFROM,IENTO,FROMARG,""))
"RTN","XDRMERGB",71,0)
 S XDRDA=$$FIND1^DIC(15.4,"","Q",FROMARG)
"RTN","XDRMERGB",72,0)
 I XDRDA>0,$P(^XDRM(XDRDA,0),U)'=FROMARG S XDRDA=0
"RTN","XDRMERGB",73,0)
 I XDRDA'>0 D
"RTN","XDRMERGB",74,0)
 . N XDRFDA
"RTN","XDRMERGB",75,0)
 . S XDRFDA(15.4,"+1,",.01)=FROMARG
"RTN","XDRMERGB",76,0)
 . S XDRFDA(15.4,"+1,",.02)=TOARG
"RTN","XDRMERGB",77,0)
 . S XDRFDA(15.4,"+1,",.03)=DT
"RTN","XDRMERGB",78,0)
 . D UPDATE^DIE("","XDRFDA","YYY") S IENS=YYY(1)
"RTN","XDRMERGB",79,0)
 . S XDRDA=YYY(1)
"RTN","XDRMERGB",80,0)
 S XDRFILE=$P(^DIC(FILE,0),U)
"RTN","XDRMERGB",81,0)
 S IENS=$$FIND1^DIC(15.41,","_XDRDA_",","Q",XDRFILE)
"RTN","XDRMERGB",82,0)
 I IENS'>0 D
"RTN","XDRMERGB",83,0)
 . S IENS="+1,"_XDRDA_","
"RTN","XDRMERGB",84,0)
 . S XDRFDA(15.41,IENS,.01)=XDRFILE
"RTN","XDRMERGB",85,0)
 . I IENFROM>0 S XDRFDA(15.41,IENS,.02)=IENFROM
"RTN","XDRMERGB",86,0)
 . K YYY
"RTN","XDRMERGB",87,0)
 . D UPDATE^DIE("","XDRFDA","YYY","ZZZ") S IENS=YYY(1)
"RTN","XDRMERGB",88,0)
 I IENFROM>0 D
"RTN","XDRMERGB",89,0)
 . S XDRSUB=15.411,IENVAL=IENFROM
"RTN","XDRMERGB",90,0)
 . D STORMERG
"RTN","XDRMERGB",91,0)
 K XDRFDA
"RTN","XDRMERGB",92,0)
 S IENS=$$FIND1^DIC(15.42,","_XDRDA_",","Q",XDRFILE)
"RTN","XDRMERGB",93,0)
 I IENS'>0 D
"RTN","XDRMERGB",94,0)
 . S IENS="+1,"_XDRDA_","
"RTN","XDRMERGB",95,0)
 . S XDRFDA(15.42,IENS,.01)=XDRFILE
"RTN","XDRMERGB",96,0)
 . I IENTO>0 S XDRFDA(15.42,IENS,.02)=IENTO
"RTN","XDRMERGB",97,0)
 . K YYY,ZZZ
"RTN","XDRMERGB",98,0)
 . D UPDATE^DIE("","XDRFDA","YYY","ZZZ") S IENS=YYY(1)
"RTN","XDRMERGB",99,0)
 I IENTO>0 D
"RTN","XDRMERGB",100,0)
 . S XDRSUB=15.421,IENVAL=IENTO
"RTN","XDRMERGB",101,0)
 . D STORMERG
"RTN","XDRMERGB",102,0)
 Q
"RTN","XDRMERGB",103,0)
STORMERG ;
"RTN","XDRMERGB",104,0)
 K ^VA(15.4,XDRDA,$S(XDRSUB=15.411:1,1:2),IENS,1) ; REMOVE ANY PREVIOUS TRIES
"RTN","XDRMERGB",105,0)
 S IENS="+1,"_IENS_","_XDRDA_","
"RTN","XDRMERGB",106,0)
 S Q=^DIC(FILE,0,"GL")_IENVAL_")",Q1=$E(Q,1,$L(Q)-1)
"RTN","XDRMERGB",107,0)
 F  S Q=$Q(@Q) Q:Q'[Q1  D
"RTN","XDRMERGB",108,0)
 . K XDRFDA
"RTN","XDRMERGB",109,0)
 . S XDRFDA(XDRSUB,IENS,.01)=$E(Q,2,$L(Q))
"RTN","XDRMERGB",110,0)
 . I @Q'="" S XDRFDA(XDRSUB,IENS,1.01)=@Q
"RTN","XDRMERGB",111,0)
 . D UPDATE^DIE("","XDRFDA")
"RTN","XDRMERGB",112,0)
 Q
"RTN","XDRMERGB",113,0)
 ;
"RTN","XDRMERGB",114,0)
SAVEPNTR(IENFROM,IENTO,FILE,IENS,FIELD,VALUE) ;
"RTN","XDRMERGB",115,0)
 N XDRFDA,XDRDA,FROMARG
"RTN","XDRMERGB",116,0)
 S FROMARG=$O(@FROM@(IENFROM,IENTO,"")) Q:FROMARG=""
"RTN","XDRMERGB",117,0)
 S XDRDA=$$FIND1^DIC(15.4,"","Q",FROMARG)
"RTN","XDRMERGB",118,0)
 S X=FILE_";"_IENS_";"_FIELD
"RTN","XDRMERGB",119,0)
 S XDRFDA(15.43,"+1,"_XDRDA_",",.01)=X
"RTN","XDRMERGB",120,0)
 S XDRFDA(15.43,"+1,"_XDRDA_",",1.01)=VALUE
"RTN","XDRMERGB",121,0)
 D UPDATE^DIE("","XDRFDA")
"RTN","XDRMERGB",122,0)
 Q
"RTN","XDRMERGB",123,0)
SNDMSG(XDRFDA) ;Sends msg when merge process has completed.
"RTN","XDRMERGB",124,0)
 N XDRGRP,XMTEXT,XMSUB,XMDUZ,XDRNAME
"RTN","XDRMERGB",125,0)
 S XDRNAME=$$GET1^DIQ(15.2,XDRFDA,.01)
"RTN","XDRMERGB",126,0)
 S R(1,0)=XDRNAME_" merge process has completed."
"RTN","XDRMERGB",127,0)
 S XDRGRP=$$GET1^DIQ(15.1,"2,",.29,"I")
"RTN","XDRMERGB",128,0)
 S:XDRGRP>0 XDRGRPN=$$GET1^DIQ(3.8,XDRGRP,.01)
"RTN","XDRMERGB",129,0)
 S XDRGRP=$S(XDRGRP>0:"G."_XDRGRPN,1:"")
"RTN","XDRMERGB",130,0)
 S:XDRGRP'="" XMY(XDRGRP)=""
"RTN","XDRMERGB",131,0)
 S:XDRGRP="" XMY(.5)="" ;If no mail grp found, send msg to postmaster
"RTN","XDRMERGB",132,0)
 S XMTEXT="R(",XMSUB=XDRNAME_" Completed",XMDUZ=.5,XMCHAN=1
"RTN","XDRMERGB",133,0)
 D ^XMD
"RTN","XDRMERGB",134,0)
 Q
"RTN","XDRMERGB",135,0)
 ;
"RTN","XDRMERGB",136,0)
QUE ;  (Moved from XDRMERG0)
"RTN","XDRMERGB",137,0)
 ;
"RTN","XDRMERGB",138,0)
 N XDRXX,XDRYY,XDRMA,DIE,DIC,DIR,DR,ZTDTH,ZTSK
"RTN","XDRMERGB",139,0)
 N XDRX,XDRY,XDRFIL,XDRGLOB,X,Y,XDRNAME
"RTN","XDRMERGB",140,0)
 N XDRFDA,XDRIENS,XDRI,XDRJ,XDRK,DA,DIK
"RTN","XDRMERGB",141,0)
 ;
"RTN","XDRMERGB",142,0)
 S XDRFIL=$$FILE^XDRDPICK() Q:XDRFIL'>0
"RTN","XDRMERGB",143,0)
 I XDRFIL=2 D  Q:Y
"RTN","XDRMERGB",144,0)
 . N X,XDRKEY
"RTN","XDRMERGB",145,0)
 . S (X,XDRKEY)=0 F  S X=$O(^VA(200,DUZ,51,"B",X)) Q:X'>0!(XDRKEY)  D
"RTN","XDRMERGB",146,0)
 . . I $$GET1^DIQ(19.1,X,.01)="DG ELIGIBILITY" S XDRKEY=1
"RTN","XDRMERGB",147,0)
 . . Q
"RTN","XDRMERGB",148,0)
 . S Y=0 I 'XDRKEY W !!,"You should hold the 'DG ELIGIBILITY' key to run a patient file merge." S Y=1
"RTN","XDRMERGB",149,0)
 . Q
"RTN","XDRMERGB",150,0)
 S XDRDIC=^DIC(XDRFIL,0,"GL")
"RTN","XDRMERGB",151,0)
 S XDRGLOB=$E(XDRDIC,2,999)
"RTN","XDRMERGB",152,0)
 S X=""
"RTN","XDRMERGB",153,0)
 S XNCNT=0,XNCNT0=0
"RTN","XDRMERGB",154,0)
 F  S X=$O(^VA(15,"AVDUP",XDRGLOB,X)) Q:X=""  S Y=$O(^(X,0)) D
"RTN","XDRMERGB",155,0)
 . N YVAL S YVAL=^VA(15,Y,0)
"RTN","XDRMERGB",156,0)
 . I $P(YVAL,U,20)>0 Q  ; ALREADY DONE OR SCHEDULED
"RTN","XDRMERGB",157,0)
 . I $P(YVAL,U,3)'="V" Q  ; TAKE ONLY VERIFIED
"RTN","XDRMERGB",158,0)
 . I $P(YVAL,U,5)'=1 Q  ; TAKE ONLY IF MARKED READY TO MERGE
"RTN","XDRMERGB",159,0)
 . I $P(YVAL,U,13)>0 D
"RTN","XDRMERGB",160,0)
 . . I '$D(@(XDRDIC_(+YVAL)_",0)"))!'$D(@(XDRDIC_(+$P(YVAL,U,2))_",0)")) Q
"RTN","XDRMERGB",161,0)
 . . I $P(YVAL,U,4)'=2 S XDRX(+YVAL,+$P(YVAL,U,2))=Y ; get ien numbers from duplicate file
"RTN","XDRMERGB",162,0)
 . . E  S XDRX(+$P(YVAL,U,2),+YVAL)=Y ; Reverse - merge to switched
"RTN","XDRMERGB",163,0)
 . . S XNCNT=XNCNT+1
"RTN","XDRMERGB",164,0)
 W !!,XNCNT,"  Entries Ready to be included in merge"
"RTN","XDRMERGB",165,0)
 I $O(XDRX(0))'>0 D  Q
"RTN","XDRMERGB",166,0)
 . W !!?15,$C(7),"No Verified Duplicates included in merge",$C(7),!!
"RTN","XDRMERGB",167,0)
 ;
"RTN","XDRMERGB",168,0)
 K DIR S DIR(0)="Y"
"RTN","XDRMERGB",169,0)
 S DIR("A",1)="This process will take a **LONG** time (usually over 15 hours, and sometimes"
"RTN","XDRMERGB",170,0)
 S DIR("A",2)="considerably longer), but you CAN stop and restart the process when you"
"RTN","XDRMERGB",171,0)
 S DIR("A")="want using the options.  OK"
"RTN","XDRMERGB",172,0)
 D ^DIR K DIR Q:Y'>0
"RTN","XDRMERGB",173,0)
NAME W !! S DIR(0)="F^2:30"
"RTN","XDRMERGB",174,0)
 S DIR("A")="Name for Merge Process"
"RTN","XDRMERGB",175,0)
 S DIR("?",1)="Enter a unique name by which the MERGE PROCESS will be identified"
"RTN","XDRMERGB",176,0)
 S DIR("?")="This name should be 2 to 30 characters in length"
"RTN","XDRMERGB",177,0)
 D ^DIR
"RTN","XDRMERGB",178,0)
 K DIR Q:Y=U  S XDRNAME=Y
"RTN","XDRMERGB",179,0)
 I $$FIND1^DIC(15.2,",","Q",XDRNAME)>0 D  G NAME
"RTN","XDRMERGB",180,0)
 . W !!,$C(7),"The name entered has already been used.  The name must be unique.",!!
"RTN","XDRMERGB",181,0)
 ;
"RTN","XDRMERGB",182,0)
 ; CREATE PROCESS ENTRY
"RTN","XDRMERGB",183,0)
 ;
"RTN","XDRMERGB",184,0)
 S XDRXX(15.2,"+1,",.01)=XDRNAME
"RTN","XDRMERGB",185,0)
 S XDRXX(15.2,"+1,",.02)=XDRFIL
"RTN","XDRMERGB",186,0)
 D UPDATE^DIE("","XDRXX","XDRYY","XDRMA")
"RTN","XDRMERGB",187,0)
 S XDRFDA=$G(XDRYY(1))
"RTN","XDRMERGB",188,0)
 ;
"RTN","XDRMERGB",189,0)
 ; NOW MOVE LIST OF DUPLICATES TO BE PROCESSED INTO THIS ENTRY
"RTN","XDRMERGB",190,0)
 S XDRIENS="+1,"_XDRFDA_","
"RTN","XDRMERGB",191,0)
 F XDRI=0:0 S XDRI=$O(XDRX(XDRI)) Q:XDRI'>0  D
"RTN","XDRMERGB",192,0)
 . S XDRJ=$O(XDRX(XDRI,0))
"RTN","XDRMERGB",193,0)
 . S XDRK=XDRX(XDRI,XDRJ)
"RTN","XDRMERGB",194,0)
 . K XDRXX,XDRYY
"RTN","XDRMERGB",195,0)
 . S XDRXX(15.22,XDRIENS,.01)=XDRI ; IEN1
"RTN","XDRMERGB",196,0)
 . S XDRXX(15.22,XDRIENS,.02)=XDRJ ; IEN2
"RTN","XDRMERGB",197,0)
 . S XDRXX(15.22,XDRIENS,.03)=XDRK ; ENTRY # IN FILE 15
"RTN","XDRMERGB",198,0)
 . D UPDATE^DIE("","XDRXX","XDRYY","XDRMA")
"RTN","XDRMERGB",199,0)
 . K XDRXX,XDRYY,XDRMA
"RTN","XDRMERGB",200,0)
 . ;    AND MARK THEM AS IN THIS MERGE PROCESS IN FILE 15
"RTN","XDRMERGB",201,0)
 . S XDRXX(15,XDRK_",",.05)=3
"RTN","XDRMERGB",202,0)
 . S XDRXX(15,XDRK_",",.2)=XDRFDA
"RTN","XDRMERGB",203,0)
 . D FILE^DIE("","XDRXX")
"RTN","XDRMERGB",204,0)
 . ; JLI 3/12/98 - FOR SOME REASON THE .05 FIELD STILL DOESN'T SEEM TO BE GETTING SET TO 3, SO CHECK IT AND IF THAT IS THE CASE, HARDSET IT.
"RTN","XDRMERGB",205,0)
 . I $P(^VA(15,XDRK,0),U,5)'=3 S $P(^(0),U,5)=3
"RTN","XDRMERGB",206,0)
 ;
"RTN","XDRMERGB",207,0)
 K DR S DR=".03;.04///S;" ; GET DESIRED START TIME AND MARK PROCESS AS SCHEDULED
"RTN","XDRMERGB",208,0)
 S DIE="^VA(15.2,"
"RTN","XDRMERGB",209,0)
 S DA=XDRFDA
"RTN","XDRMERGB",210,0)
 D ^DIE
"RTN","XDRMERGB",211,0)
 S ZTDTH=$P(^VA(15.2,XDRFDA,0),U,3) ; TAKE DESIRED TIME
"RTN","XDRMERGB",212,0)
 I ZTDTH>0 D  Q:$G(ZTSK)>0  ;         AND SET UP TASK
"RTN","XDRMERGB",213,0)
 . S ZTRTN="DQ^XDRMERG0",ZTDESC="MERGE PROCESS "_XDRNAME
"RTN","XDRMERGB",214,0)
 . S ZTIO="NULL",ZTSAVE("XDRFDA")=""
"RTN","XDRMERGB",215,0)
 . D ^%ZTLOAD
"RTN","XDRMERGB",216,0)
 . I $G(ZTSK)>0 D
"RTN","XDRMERGB",217,0)
 . . K DR S DR=".08///"_ZTSK_";",DIE="^VA(15.2,",DA=XDRFDA D ^DIE
"RTN","XDRMERGB",218,0)
 . . W !!,"Merge process '",$P(^VA(15.2,XDRFDA,0),U),"' for Verified Duplicates in File ",XDRFIL," scheduled",!,"as task ",ZTSK,".",!
"RTN","XDRMERGB",219,0)
 ;
"RTN","XDRMERGB",220,0)
 ;  TASK INFO, TIME, ETC. NOT COMPLETE - SO REVERSE IT
"RTN","XDRMERGB",221,0)
 ;
"RTN","XDRMERGB",222,0)
 F XDRI=0:0 S XDRI=$O(XDRX(XDRI)) Q:XDRI'>0  D
"RTN","XDRMERGB",223,0)
 . S XDRJ=$O(XDRX(XDRI,0))
"RTN","XDRMERGB",224,0)
 . S XDRK=XDRX(XDRI,XDRJ)
"RTN","XDRMERGB",225,0)
 . K XDRXX,XDRYY
"RTN","XDRMERGB",226,0)
 . S XDRXX(15,XDRK_",",.2)="@" ; UNMARK ENTRY IN FILE 15
"RTN","XDRMERGB",227,0)
 . S XDRXX(15,XDRK_",",.05)=1
"RTN","XDRMERGB",228,0)
 . D UPDATE^DIE("","XDRXX")
"RTN","XDRMERGB",229,0)
 S DA=XDRFDA
"RTN","XDRMERGB",230,0)
 S DIK="^VA(15.2,"
"RTN","XDRMERGB",231,0)
 D ^DIK
"RTN","XDRMERGB",232,0)
 W !!,$C(7),"The Merge Process has been aborted, no changes made."
"RTN","XDRMERGB",233,0)
 Q
"RTN","XDRMERGB",234,0)
 ;
"VER")
8.0^22.0
"BLD",9620,6)
^110
**END**
**END**

