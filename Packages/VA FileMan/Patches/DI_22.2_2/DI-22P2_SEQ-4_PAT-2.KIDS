Released DI*22.2*2 SEQ #4
Extracted from mail message
**KIDS**:DI*22.2*2^

**INSTALL NAME**
DI*22.2*2
"BLD",9892,0)
DI*22.2*2^VA FILEMAN^0^3170220^y
"BLD",9892,1,0)
^^1^1^3161122^^
"BLD",9892,1,1,0)
Extensible Data Types and Meta Data Dictionary enhancements
"BLD",9892,4,0)
^9.64PA^4^5
"BLD",9892,4,.81,0)
.81
"BLD",9892,4,.81,222)
y^n^f^^y^^y^o^n
"BLD",9892,4,.81,224)
I Y>10&(Y<100)
"BLD",9892,4,.81,21400)
0
"BLD",9892,4,.9,0)
.9
"BLD",9892,4,.9,2,0)
^9.641^.9^1
"BLD",9892,4,.9,2,.9,0)
META DATA DICTIONARY  (File-top level)
"BLD",9892,4,.9,2,.9,1,0)
^9.6411^.07^3
"BLD",9892,4,.9,2,.9,1,.01,0)
NAME
"BLD",9892,4,.9,2,.9,1,.06,0)
OBJECT NAME
"BLD",9892,4,.9,2,.9,1,.07,0)
LAST UPDATED
"BLD",9892,4,.9,222)
y^y^p^^^^n^^n
"BLD",9892,4,.9,224)

"BLD",9892,4,1.71,0)
1.71
"BLD",9892,4,1.71,222)
y^y^f^^n^^y^o^n
"BLD",9892,4,1.72,0)
1.72
"BLD",9892,4,1.72,222)
y^y^f^^n^^y^o^n
"BLD",9892,4,4,0)
4
"BLD",9892,4,4,2,0)
^9.641^4^1
"BLD",9892,4,4,2,4,0)
INSTITUTION  (File-top level)
"BLD",9892,4,4,2,4,1,0)
^9.6411^802^3
"BLD",9892,4,4,2,4,1,800,0)
LOCATION TIMEZONE
"BLD",9892,4,4,2,4,1,801,0)
COUNTRY
"BLD",9892,4,4,2,4,1,802,0)
TIMEZONE EXCEPTION
"BLD",9892,4,4,222)
y^y^p^^^^n^^n
"BLD",9892,4,4,224)

"BLD",9892,4,"APDD",.9,.9)

"BLD",9892,4,"APDD",.9,.9,.01)

"BLD",9892,4,"APDD",.9,.9,.06)

"BLD",9892,4,"APDD",.9,.9,.07)

"BLD",9892,4,"APDD",4,4)

"BLD",9892,4,"APDD",4,4,800)

"BLD",9892,4,"APDD",4,4,801)

"BLD",9892,4,"APDD",4,4,802)

"BLD",9892,4,"B",.81,.81)

"BLD",9892,4,"B",.9,.9)

"BLD",9892,4,"B",1.71,1.71)

"BLD",9892,4,"B",1.72,1.72)

"BLD",9892,4,"B",4,4)

"BLD",9892,6.3)
139
"BLD",9892,"ABPKG")
n
"BLD",9892,"INID")
^n
"BLD",9892,"INIT")
POST23^DINIT220
"BLD",9892,"KRN",0)
^9.67PA^779.2^20
"BLD",9892,"KRN",.4,0)
.4
"BLD",9892,"KRN",.401,0)
.401
"BLD",9892,"KRN",.402,0)
.402
"BLD",9892,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",9892,"KRN",.402,"NM",1,0)
DIP81IT    FILE #.81^.81^0
"BLD",9892,"KRN",.402,"NM",2,0)
DIP86IT    FILE #.86^.86^0
"BLD",9892,"KRN",.402,"NM",3,0)
DIP87IT    FILE #.87^.87^0
"BLD",9892,"KRN",.402,"NM","B","DIP81IT    FILE #.81",1)

"BLD",9892,"KRN",.402,"NM","B","DIP86IT    FILE #.86",2)

"BLD",9892,"KRN",.402,"NM","B","DIP87IT    FILE #.87",3)

"BLD",9892,"KRN",.403,0)
.403
"BLD",9892,"KRN",.403,"NM",0)
^9.68A^3^3
"BLD",9892,"KRN",.403,"NM",1,0)
DIP81S    FILE #.81^.81^0
"BLD",9892,"KRN",.403,"NM",2,0)
DIP86S    FILE #.86^.86^0
"BLD",9892,"KRN",.403,"NM",3,0)
DIP87S    FILE #.87^.87^0
"BLD",9892,"KRN",.403,"NM","B","DIP81S    FILE #.81",1)

"BLD",9892,"KRN",.403,"NM","B","DIP86S    FILE #.86",2)

"BLD",9892,"KRN",.403,"NM","B","DIP87S    FILE #.87",3)

"BLD",9892,"KRN",.5,0)
.5
"BLD",9892,"KRN",.84,0)
.84
"BLD",9892,"KRN",3.6,0)
3.6
"BLD",9892,"KRN",3.8,0)
3.8
"BLD",9892,"KRN",9.2,0)
9.2
"BLD",9892,"KRN",9.8,0)
9.8
"BLD",9892,"KRN",9.8,"NM",0)
^9.68A^60^58
"BLD",9892,"KRN",9.8,"NM",1,0)
DINIT22^^0^B85231093
"BLD",9892,"KRN",9.8,"NM",2,0)
DINIT221^^0^B30934674
"BLD",9892,"KRN",9.8,"NM",3,0)
DINIT3^^0^B18851473
"BLD",9892,"KRN",9.8,"NM",5,0)
DIR2^^0^B25328921
"BLD",9892,"KRN",9.8,"NM",6,0)
DIR1^^0^B35848051
"BLD",9892,"KRN",9.8,"NM",7,0)
DIETLIB^^0^B10469878
"BLD",9892,"KRN",9.8,"NM",8,0)
DIED^^0^B46622564
"BLD",9892,"KRN",9.8,"NM",9,0)
DID1^^0^B31885031
"BLD",9892,"KRN",9.8,"NM",10,0)
DIDX^^0^B17887310
"BLD",9892,"KRN",9.8,"NM",11,0)
DIQ^^0^B72627374
"BLD",9892,"KRN",9.8,"NM",12,0)
DIDU^^0^B42137549
"BLD",9892,"KRN",9.8,"NM",13,0)
DILL^^0^B12021545
"BLD",9892,"KRN",9.8,"NM",14,0)
DIEQ^^0^B16717159
"BLD",9892,"KRN",9.8,"NM",15,0)
DIVR^^0^B53639781
"BLD",9892,"KRN",9.8,"NM",16,0)
DIEZ0^^0^B21633440
"BLD",9892,"KRN",9.8,"NM",17,0)
DDS02^^0^B17251992
"BLD",9892,"KRN",9.8,"NM",18,0)
DICATT^^0^B17681814
"BLD",9892,"KRN",9.8,"NM",19,0)
DICATT2^^0^B24899508
"BLD",9892,"KRN",9.8,"NM",20,0)
DICATTUD^^0^B30897711
"BLD",9892,"KRN",9.8,"NM",21,0)
DICATTD^^0^B31284098
"BLD",9892,"KRN",9.8,"NM",22,0)
DINIT0F4^^0^B57627834
"BLD",9892,"KRN",9.8,"NM",23,0)
DIETLIBF^^0^B29058396
"BLD",9892,"KRN",9.8,"NM",24,0)
DDS11^^0^B30783133
"BLD",9892,"KRN",9.8,"NM",25,0)
DINIT220^^0^B42217569
"BLD",9892,"KRN",9.8,"NM",26,0)
DIOU^^0^B16733665
"BLD",9892,"KRN",9.8,"NM",27,0)
DIO0^^0^B24212232
"BLD",9892,"KRN",9.8,"NM",28,0)
DIP^^0^B34427455
"BLD",9892,"KRN",9.8,"NM",29,0)
DICN^^0^B20243838
"BLD",9892,"KRN",9.8,"NM",31,0)
DIALOGZ^^0^B33930495
"BLD",9892,"KRN",9.8,"NM",32,0)
DIR^^0^B43983355
"BLD",9892,"KRN",9.8,"NM",33,0)
DIQG^^0^B42177802
"BLD",9892,"KRN",9.8,"NM",34,0)
DIQGDD^^0^B36441864
"BLD",9892,"KRN",9.8,"NM",35,0)
DINIT0^^0^B12079842
"BLD",9892,"KRN",9.8,"NM",36,0)
DIQGDDU^^0^B6195883
"BLD",9892,"KRN",9.8,"NM",37,0)
DIP12^^0^B20018859
"BLD",9892,"KRN",9.8,"NM",38,0)
DIS^^0^B25712783
"BLD",9892,"KRN",9.8,"NM",39,0)
DICATT22^^0^B15001986
"BLD",9892,"KRN",9.8,"NM",40,0)
DICATTDE^^0^B35121776
"BLD",9892,"KRN",9.8,"NM",41,0)
DICOMP0^^0^B23489999
"BLD",9892,"KRN",9.8,"NM",42,0)
DICATTD0^^0^B3051910
"BLD",9892,"KRN",9.8,"NM",43,0)
DI^^0^B1411380
"BLD",9892,"KRN",9.8,"NM",44,0)
DINIT295^^0^B60779583
"BLD",9892,"KRN",9.8,"NM",45,0)
DICM1^^0^B19854007
"BLD",9892,"KRN",9.8,"NM",46,0)
DICQ1^^0^B38289362
"BLD",9892,"KRN",9.8,"NM",47,0)
DICATT4^^0^B28807089
"BLD",9892,"KRN",9.8,"NM",48,0)
DINIT11^^0^B20730978
"BLD",9892,"KRN",9.8,"NM",49,0)
DDGFU^^0^B19558122
"BLD",9892,"KRN",9.8,"NM",50,0)
DICUIX^^0^B27430806
"BLD",9892,"KRN",9.8,"NM",51,0)
DDD^^0^B37277699
"BLD",9892,"KRN",9.8,"NM",52,0)
DIFMEDT1^^0^B1665680
"BLD",9892,"KRN",9.8,"NM",53,0)
DINIT11C^^0^B22917372
"BLD",9892,"KRN",9.8,"NM",54,0)
DICATTDM^^0^B14727373
"BLD",9892,"KRN",9.8,"NM",55,0)
DICATT1^^0^B15744567
"BLD",9892,"KRN",9.8,"NM",56,0)
DINIT20^^0^B30255167
"BLD",9892,"KRN",9.8,"NM",57,0)
DIUTC^^0^B31448968
"BLD",9892,"KRN",9.8,"NM",58,0)
DICF2^^0^B32547668
"BLD",9892,"KRN",9.8,"NM",59,0)
DITIME^^0^B1307675
"BLD",9892,"KRN",9.8,"NM",60,0)
DIU31^^0^B17160493
"BLD",9892,"KRN",9.8,"NM","B","DDD",51)

"BLD",9892,"KRN",9.8,"NM","B","DDGFU",49)

"BLD",9892,"KRN",9.8,"NM","B","DDS02",17)

"BLD",9892,"KRN",9.8,"NM","B","DDS11",24)

"BLD",9892,"KRN",9.8,"NM","B","DI",43)

"BLD",9892,"KRN",9.8,"NM","B","DIALOGZ",31)

"BLD",9892,"KRN",9.8,"NM","B","DICATT",18)

"BLD",9892,"KRN",9.8,"NM","B","DICATT1",55)

"BLD",9892,"KRN",9.8,"NM","B","DICATT2",19)

"BLD",9892,"KRN",9.8,"NM","B","DICATT22",39)

"BLD",9892,"KRN",9.8,"NM","B","DICATT4",47)

"BLD",9892,"KRN",9.8,"NM","B","DICATTD",21)

"BLD",9892,"KRN",9.8,"NM","B","DICATTD0",42)

"BLD",9892,"KRN",9.8,"NM","B","DICATTDE",40)

"BLD",9892,"KRN",9.8,"NM","B","DICATTDM",54)

"BLD",9892,"KRN",9.8,"NM","B","DICATTUD",20)

"BLD",9892,"KRN",9.8,"NM","B","DICF2",58)

"BLD",9892,"KRN",9.8,"NM","B","DICM1",45)

"BLD",9892,"KRN",9.8,"NM","B","DICN",29)

"BLD",9892,"KRN",9.8,"NM","B","DICOMP0",41)

"BLD",9892,"KRN",9.8,"NM","B","DICQ1",46)

"BLD",9892,"KRN",9.8,"NM","B","DICUIX",50)

"BLD",9892,"KRN",9.8,"NM","B","DID1",9)

"BLD",9892,"KRN",9.8,"NM","B","DIDU",12)

"BLD",9892,"KRN",9.8,"NM","B","DIDX",10)

"BLD",9892,"KRN",9.8,"NM","B","DIED",8)

"BLD",9892,"KRN",9.8,"NM","B","DIEQ",14)

"BLD",9892,"KRN",9.8,"NM","B","DIETLIB",7)

"BLD",9892,"KRN",9.8,"NM","B","DIETLIBF",23)

"BLD",9892,"KRN",9.8,"NM","B","DIEZ0",16)

"BLD",9892,"KRN",9.8,"NM","B","DIFMEDT1",52)

"BLD",9892,"KRN",9.8,"NM","B","DILL",13)

"BLD",9892,"KRN",9.8,"NM","B","DINIT0",35)

"BLD",9892,"KRN",9.8,"NM","B","DINIT0F4",22)

"BLD",9892,"KRN",9.8,"NM","B","DINIT11",48)

"BLD",9892,"KRN",9.8,"NM","B","DINIT11C",53)

"BLD",9892,"KRN",9.8,"NM","B","DINIT20",56)

"BLD",9892,"KRN",9.8,"NM","B","DINIT22",1)

"BLD",9892,"KRN",9.8,"NM","B","DINIT220",25)

"BLD",9892,"KRN",9.8,"NM","B","DINIT221",2)

"BLD",9892,"KRN",9.8,"NM","B","DINIT295",44)

"BLD",9892,"KRN",9.8,"NM","B","DINIT3",3)

"BLD",9892,"KRN",9.8,"NM","B","DIO0",27)

"BLD",9892,"KRN",9.8,"NM","B","DIOU",26)

"BLD",9892,"KRN",9.8,"NM","B","DIP",28)

"BLD",9892,"KRN",9.8,"NM","B","DIP12",37)

"BLD",9892,"KRN",9.8,"NM","B","DIQ",11)

"BLD",9892,"KRN",9.8,"NM","B","DIQG",33)

"BLD",9892,"KRN",9.8,"NM","B","DIQGDD",34)

"BLD",9892,"KRN",9.8,"NM","B","DIQGDDU",36)

"BLD",9892,"KRN",9.8,"NM","B","DIR",32)

"BLD",9892,"KRN",9.8,"NM","B","DIR1",6)

"BLD",9892,"KRN",9.8,"NM","B","DIR2",5)

"BLD",9892,"KRN",9.8,"NM","B","DIS",38)

"BLD",9892,"KRN",9.8,"NM","B","DITIME",59)

"BLD",9892,"KRN",9.8,"NM","B","DIU31",60)

"BLD",9892,"KRN",9.8,"NM","B","DIUTC",57)

"BLD",9892,"KRN",9.8,"NM","B","DIVR",15)

"BLD",9892,"KRN",19,0)
19
"BLD",9892,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",9892,"KRN",19,"NM",1,0)
DI DATA TYPE FILE^^0
"BLD",9892,"KRN",19,"NM",2,0)
DI DATA TYPE METHOD FILE^^0
"BLD",9892,"KRN",19,"NM",3,0)
DI DATA TYPE OPTIONS^^0
"BLD",9892,"KRN",19,"NM",4,0)
DI DATA TYPE PROPERTY FILE^^0
"BLD",9892,"KRN",19,"NM","B","DI DATA TYPE FILE",1)

"BLD",9892,"KRN",19,"NM","B","DI DATA TYPE METHOD FILE",2)

"BLD",9892,"KRN",19,"NM","B","DI DATA TYPE OPTIONS",3)

"BLD",9892,"KRN",19,"NM","B","DI DATA TYPE PROPERTY FILE",4)

"BLD",9892,"KRN",19.1,0)
19.1
"BLD",9892,"KRN",101,0)
101
"BLD",9892,"KRN",409.61,0)
409.61
"BLD",9892,"KRN",771,0)
771
"BLD",9892,"KRN",779.2,0)
779.2
"BLD",9892,"KRN",870,0)
870
"BLD",9892,"KRN",8989.51,0)
8989.51
"BLD",9892,"KRN",8989.52,0)
8989.52
"BLD",9892,"KRN",8994,0)
8994
"BLD",9892,"KRN","B",.4,.4)

"BLD",9892,"KRN","B",.401,.401)

"BLD",9892,"KRN","B",.402,.402)

"BLD",9892,"KRN","B",.403,.403)

"BLD",9892,"KRN","B",.5,.5)

"BLD",9892,"KRN","B",.84,.84)

"BLD",9892,"KRN","B",3.6,3.6)

"BLD",9892,"KRN","B",3.8,3.8)

"BLD",9892,"KRN","B",9.2,9.2)

"BLD",9892,"KRN","B",9.8,9.8)

"BLD",9892,"KRN","B",19,19)

"BLD",9892,"KRN","B",19.1,19.1)

"BLD",9892,"KRN","B",101,101)

"BLD",9892,"KRN","B",409.61,409.61)

"BLD",9892,"KRN","B",771,771)

"BLD",9892,"KRN","B",779.2,779.2)

"BLD",9892,"KRN","B",870,870)

"BLD",9892,"KRN","B",8989.51,8989.51)

"BLD",9892,"KRN","B",8989.52,8989.52)

"BLD",9892,"KRN","B",8994,8994)

"BLD",9892,"MSC")
C:\R\E23\DI_23_1R6.KID
"BLD",9892,"MSCOM")
FROM GFT
"BLD",9892,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9892,"QUES",0)
^9.62^^
"BLD",9892,"REQB",0)
^9.611^3^2
"BLD",9892,"REQB",2,0)
DI*22.2*4^2
"BLD",9892,"REQB",3,0)
DI*22.2*3^2
"BLD",9892,"REQB","B","DI*22.2*3",3)

"BLD",9892,"REQB","B","DI*22.2*4",2)

"DATA",.81,11,0)
BOOLEAN^S^Enter 'YES' or 'NO'^1
"DATA",.81,11,11)
Value is either true (YES) or false (NO)
"DATA",.81,11,101,0)
^.81101P^5^3
"DATA",.81,11,101,1,0)
1
"DATA",.81,11,101,1,31)
3
"DATA",.81,11,101,3,0)
3
"DATA",.81,11,101,3,31)
1
"DATA",.81,11,101,5,0)
5^3
"DATA",.81,11,101,5,31)
1:YES;0:NO
"DATA",.81,11,201,0)
^.81201P^3^1
"DATA",.81,11,201,3,0)
3
"DATA",.81,11,201,3,31)
S:Y]"" Y=$P("NO^YES",U,Y+1)
"DATA",.81,12,0)
LABEL REFERENCE^F^^0
"DATA",.81,12,11)
Must be in the form of a MUMPS label, like "P^DI"
"DATA",.81,12,101,0)
^.81101P^7.1^3
"DATA",.81,12,101,1,0)
1
"DATA",.81,12,101,1,31)
99
"DATA",.81,12,101,3,0)
3
"DATA",.81,12,101,3,31)
99
"DATA",.81,12,101,7.1,0)
7.1^1
"DATA",.81,12,201,0)
^.81201P^23^3
"DATA",.81,12,201,2,0)
2
"DATA",.81,12,201,2,31)
K:$P(X,"(")'?1(1"%",1U).15UN1"^"1(1"%",1U).15UN X I $D(X),X["(" K:$E(X,$L(X))'=")"!'$G(DIPA("PARAMETERS ALLOWED")) X I $D(X) S X="D "_X D ^DIM I $D(X) S X=$E(X,3,999)
"DATA",.81,12,201,4,0)
4
"DATA",.81,12,201,4,31)
I $G(DIPA("PARAMETERS ALLOWED")) W !?5,"You may enter (ACTUAL PARAMETERS) after the reference."
"DATA",.81,12,201,23,0)
23
"DATA",.81,12,201,23,31)
S:X]"" X=$P(X,U,2)_"."_$P(X,U)
"DATA",.81,13,0)
TIME^F^Time of Day
"DATA",.81,13,11)
Enter a time (no date), e.g., "NOON"
"DATA",.81,13,101,0)
^.81101P^6.1^3
"DATA",.81,13,101,1,0)
1
"DATA",.81,13,101,1,31)
8
"DATA",.81,13,101,3,0)
3
"DATA",.81,13,101,3,31)
6
"DATA",.81,13,101,6.1,0)
6.1^1
"DATA",.81,13,101,6.1,33)
1
"DATA",.81,13,201,0)
^.81201P^4^3
"DATA",.81,13,201,2,0)
2
"DATA",.81,13,201,2,31)
D ^DITIME
"DATA",.81,13,201,3,0)
3
"DATA",.81,13,201,3,31)
S:Y]"" Y=$E(Y,1,2)_":"_$E(Y,3,9) S:$L(Y)>5 Y=$E(Y,1,5)_":"_$E(Y,6,9)
"DATA",.81,13,201,4,0)
4
"DATA",.81,13,201,4,31)
W "Enter 'NOW' or some valid time like '2:33PM'" I $G(DIPA("SECONDS ALLOWED"))'=0 W !?14,"Time may include seconds."
"DATA",.81,14,0)
YEAR^D^^0
"DATA",.81,14,11)
A date in FileMan DATE format that is precise only to the year (e.g., 2016)
"DATA",.81,14,101,0)
^.81101P^6.2^3
"DATA",.81,14,101,1,0)
1
"DATA",.81,14,101,1,31)
4
"DATA",.81,14,101,3,0)
3
"DATA",.81,14,101,3,31)
7
"DATA",.81,14,101,6.2,0)
6.2^1
"DATA",.81,14,201,0)
^.81201P^4^3
"DATA",.81,14,201,2,0)
2
"DATA",.81,14,201,2,31)
K:X'?1(1"1",1"2")3N!(X<1800) X I $D(X) S X=X-1700_"0000" K:$E($G(DIPA("EARLIEST DATE")),1,3)_"0000">X X
"DATA",.81,14,201,3,0)
3
"DATA",.81,14,201,3,31)
X ^DD("DD")
"DATA",.81,14,201,4,0)
4
"DATA",.81,14,201,4,31)
W !?5,"Enter a 4-digit year, e.g., '2015'."  I $G(DIPA("EARLIEST DATE")) W !?5,"Must not be earlier than ",$$DATE^DIUTL(DIPA("EARLIEST DATE"))
"DATA",.81,15,0)
UNIVERSAL TIME^D
"DATA",.81,15,101,0)
^.81101P^1^1
"DATA",.81,15,101,1,0)
1
"DATA",.81,15,101,1,31)
26
"DATA",.81,15,201,0)
^.81201P^4^3
"DATA",.81,15,201,2,0)
2
"DATA",.81,15,201,2,31)
N %DT S %DT="EXSTR" D ^%DT K:Y<0 X I $D(X) S X=$$UTC^DIUTC(X) K:+X=-1 X
"DATA",.81,15,201,3,0)
3
"DATA",.81,15,201,3,31)
N %Y S %Y=$E(Y_"00000000000",15,17) X ^DD("DD") I %Y S Y=Y_" (UTC"_(%Y-500/12)_":00)"
"DATA",.81,15,201,4,0)
4
"DATA",.81,15,201,4,31)
D DT^DIEH1("TR",1)
"DATA",.81,16,0)
FT POINTER^F^FILE ROOT^1
"DATA",.81,16,101,0)
^.81101P^4.1^2
"DATA",.81,16,101,4,0)
4^1
"DATA",.81,16,101,4,10)
I 1
"DATA",.81,16,101,4.1,0)
4.1^2
"DATA",.81,16,101,4.1,10)
I 1
"DATA",.81,16,101,4.1,33)
1
"DATA",.81,16,201,0)
^.81201P^4^3
"DATA",.81,16,201,2,0)
2
"DATA",.81,16,201,2,31)
D DIC^DIETLIBF K:Y<0 X S:$D(X) X=@("^"_DIPA("POINTER")_+Y_",0)"),X=$P(X,U)
"DATA",.81,16,201,2.1,0)
2.1
"DATA",.81,16,201,4,0)
4
"DATA",.81,16,201,4,31)
S X="?" D DIC^DIETLIBF
"DATA",.81,17,0)
FT DATE^F
"DATA",.81,17,11)
ENTER AN EXPRESSION THAT CAN BE INTERPRETED AS A DATE/TIME (E.G., "NOW")
"DATA",.81,17,101,0)
^.81101P^6.5^5
"DATA",.81,17,101,6.1,0)
6.1^5
"DATA",.81,17,101,6.1,33)
1
"DATA",.81,17,101,6.2,0)
6.2^1
"DATA",.81,17,101,6.3,0)
6.3^4
"DATA",.81,17,101,6.4,0)
6.4^2
"DATA",.81,17,101,6.4,33)
0
"DATA",.81,17,101,6.5,0)
6.5^3
"DATA",.81,17,101,6.5,33)
1
"DATA",.81,17,201,0)
^.81201P^4^2
"DATA",.81,17,201,2,0)
2
"DATA",.81,17,201,2,31)
N %DT X $$%DT^DIETLIBF("E") D ^%DT K:Y<1 X
"DATA",.81,17,201,4,0)
4
"DATA",.81,17,201,4,31)
N %DT X $$%DT^DIETLIBF("E") D HELP^%DTC
"DATA",.81,18,0)
RATIO^F
"DATA",.81,18,11)
TWO INTEGERS, SEPARATED BY ":"
"DATA",.81,18,101,0)
^.81101P^1.4^4
"DATA",.81,18,101,1.1,0)
1.1^1
"DATA",.81,18,101,1.2,0)
1.2^2
"DATA",.81,18,101,1.3,0)
1.3^3
"DATA",.81,18,101,1.4,0)
1.4^4
"DATA",.81,18,201,0)
^.81201P^2^1
"DATA",.81,18,201,2,0)
2
"DATA",.81,18,201,2,31)
K:X'?1.N1":"1.N X I $D(X),+X<DIPA("LEFT SIDE MINIMUM")!(X>DIPA("LEFT SIDE MAXIMUM"))!($P(X,":",2)<DIPA("RIGHT SIDE MINIMUM"))!($P(X,":",2)>DIPA("RIGHT SIDE MAXIMUM")) K X
"DATA",.81,99,0)
RESERVED FOR FILEMAN
"DATA",1.71,1,0)
ATLANTIC
"DATA",1.71,1,1,0)
^1.711S^2^2
"DATA",1.71,1,1,1,0)
SST^-0400^AST
"DATA",1.71,1,1,1,1,0)
^1.7111P^8^8
"DATA",1.71,1,1,1,1,1,0)
64
"DATA",1.71,1,1,1,1,2,0)
19
"DATA",1.71,1,1,1,1,3,0)
210
"DATA",1.71,1,1,1,1,4,0)
90
"DATA",1.71,1,1,1,1,5,0)
89
"DATA",1.71,1,1,1,1,6,0)
39
"DATA",1.71,1,1,1,1,7,0)
21
"DATA",1.71,1,1,1,1,8,0)
1
"DATA",1.71,1,1,2,0)
DST^-0300^ADT
"DATA",1.71,1,1,2,1,0)
^1.7111P^5^5
"DATA",1.71,1,1,2,1,1,0)
39
"DATA",1.71,1,1,2,1,2,0)
89
"DATA",1.71,1,1,2,1,3,0)
21
"DATA",1.71,1,1,2,1,4,0)
19
"DATA",1.71,1,1,2,1,5,0)
64
"DATA",1.71,2,0)
EASTERN
"DATA",1.71,2,1,0)
^1.711S^2^2
"DATA",1.71,2,1,1,0)
SST^-0500^EST
"DATA",1.71,2,1,1,1,0)
^1.7111P^6^6
"DATA",1.71,2,1,1,1,1,0)
1
"DATA",1.71,2,1,1,1,2,0)
39
"DATA",1.71,2,1,1,1,3,0)
95
"DATA",1.71,2,1,1,1,4,0)
163
"DATA",1.71,2,1,1,1,5,0)
110
"DATA",1.71,2,1,1,1,6,0)
41
"DATA",1.71,2,1,2,0)
DST^-0400^EDT
"DATA",1.71,2,1,2,1,0)
^1.7111P^2^2
"DATA",1.71,2,1,2,1,1,0)
1
"DATA",1.71,2,1,2,1,2,0)
39
"DATA",1.71,3,0)
CENTRAL
"DATA",1.71,3,1,0)
^1.711S^2^2
"DATA",1.71,3,1,1,0)
SST^-0600^CST
"DATA",1.71,3,1,1,1,0)
^1.7111P^9^9
"DATA",1.71,3,1,1,1,1,0)
138
"DATA",1.71,3,1,1,1,2,0)
39
"DATA",1.71,3,1,1,1,3,0)
1
"DATA",1.71,3,1,1,1,4,0)
28
"DATA",1.71,3,1,1,1,5,0)
155
"DATA",1.71,3,1,1,1,6,0)
92
"DATA",1.71,3,1,1,1,7,0)
98
"DATA",1.71,3,1,1,1,8,0)
66
"DATA",1.71,3,1,1,1,9,0)
56
"DATA",1.71,3,1,2,0)
DST^-0500^CDT
"DATA",1.71,3,1,2,1,0)
^1.7111P^3^3
"DATA",1.71,3,1,2,1,1,0)
1
"DATA",1.71,3,1,2,1,2,0)
39
"DATA",1.71,3,1,2,1,3,0)
138
"DATA",1.71,4,0)
FERNANDO DE NORONHA
"DATA",1.71,4,1,0)
^1.711S^1^1
"DATA",1.71,4,1,1,0)
SST^-0200^FNT
"DATA",1.71,4,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,4,1,1,1,1,0)
27
"DATA",1.71,5,0)
ACRE
"DATA",1.71,5,1,0)
^1.711S^1^1
"DATA",1.71,5,1,1,0)
SST^-0500^ACT
"DATA",1.71,5,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,5,1,1,1,1,0)
27
"DATA",1.71,6,0)
AMAZON
"DATA",1.71,6,1,0)
^1.711S^2^2
"DATA",1.71,6,1,1,0)
SST^-0400^AMT
"DATA",1.71,6,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,6,1,1,1,1,0)
27
"DATA",1.71,6,1,2,0)
SUM^-0300^AMST
"DATA",1.71,6,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,6,1,2,1,1,0)
27
"DATA",1.71,7,0)
BRASILIA
"DATA",1.71,7,1,0)
^1.711S^2^2
"DATA",1.71,7,1,1,0)
SST^-0300^BRT
"DATA",1.71,7,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,7,1,1,1,1,0)
27
"DATA",1.71,7,1,2,0)
SUM^-0200^BRST
"DATA",1.71,7,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,7,1,2,1,1,0)
27
"DATA",1.71,8,0)
MOUNTAIN
"DATA",1.71,8,1,0)
^1.711S^2^2
"DATA",1.71,8,1,1,0)
SST^-0700^MST
"DATA",1.71,8,1,1,1,0)
^1.7111P^3^3
"DATA",1.71,8,1,1,1,1,0)
1
"DATA",1.71,8,1,1,1,2,0)
39
"DATA",1.71,8,1,1,1,3,0)
138
"DATA",1.71,8,1,2,0)
DST^-0600^MDT
"DATA",1.71,8,1,2,1,0)
^1.7111P^3^3
"DATA",1.71,8,1,2,1,1,0)
1
"DATA",1.71,8,1,2,1,2,0)
39
"DATA",1.71,8,1,2,1,3,0)
138
"DATA",1.71,9,0)
NEWFOUNDLAND
"DATA",1.71,9,1,0)
^1.711S^2^2
"DATA",1.71,9,1,1,0)
SST^-0330^NST
"DATA",1.71,9,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,9,1,1,1,1,0)
39
"DATA",1.71,9,1,2,0)
DST^-0230^NDT
"DATA",1.71,9,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,9,1,2,1,1,0)
39
"DATA",1.71,10,0)
PACIFIC
"DATA",1.71,10,1,0)
^1.711S^2^2
"DATA",1.71,10,1,1,0)
SST^-0800^PST
"DATA",1.71,10,1,1,1,0)
^1.7111P^3^3
"DATA",1.71,10,1,1,1,1,0)
1
"DATA",1.71,10,1,1,1,2,0)
39
"DATA",1.71,10,1,1,1,3,0)
138
"DATA",1.71,10,1,2,0)
DST^-0700^PDT
"DATA",1.71,10,1,2,1,0)
^1.7111P^3^3
"DATA",1.71,10,1,2,1,1,0)
1
"DATA",1.71,10,1,2,1,2,0)
39
"DATA",1.71,10,1,2,1,3,0)
138
"DATA",1.71,11,0)
ALASKA
"DATA",1.71,11,1,0)
^1.711S^2^2
"DATA",1.71,11,1,1,0)
SST^-0900^AKST
"DATA",1.71,11,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,11,1,1,1,1,0)
1
"DATA",1.71,11,1,2,0)
DST^-0800^AKDT
"DATA",1.71,11,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,11,1,2,1,1,0)
1
"DATA",1.71,12,0)
HAWAII-ALEUTIAN
"DATA",1.71,12,1,0)
^1.711S^2^2
"DATA",1.71,12,1,1,0)
SST^-1000^HAST
"DATA",1.71,12,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,12,1,1,1,1,0)
1
"DATA",1.71,12,1,2,0)
DST^-0900^HADT
"DATA",1.71,12,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,12,1,2,1,1,0)
1
"DATA",1.71,13,0)
CUBA
"DATA",1.71,13,1,0)
^1.711S^2^2
"DATA",1.71,13,1,1,0)
SST^-0500^CST
"DATA",1.71,13,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,13,1,1,1,1,0)
58
"DATA",1.71,13,1,2,0)
DST^-0400^CDT
"DATA",1.71,13,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,13,1,2,1,1,0)
58
"DATA",1.71,14,0)
ARGENTINA
"DATA",1.71,14,1,0)
^1.711S^1^1
"DATA",1.71,14,1,1,0)
SST^-0300^ART
"DATA",1.71,14,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,14,1,1,1,1,0)
12
"DATA",1.71,15,0)
EASTERN EUROPEAN
"DATA",1.71,15,1,0)
^1.711S^2^2
"DATA",1.71,15,1,1,0)
SST^+0200^EET
"DATA",1.71,15,1,1,1,0)
^1.7111P^5^5
"DATA",1.71,15,1,1,1,1,0)
220
"DATA",1.71,15,1,1,1,2,0)
70
"DATA",1.71,15,1,1,1,3,0)
88
"DATA",1.71,15,1,1,1,4,0)
213
"DATA",1.71,15,1,1,1,5,0)
75
"DATA",1.71,15,1,2,0)
SUM^+0300^EEST
"DATA",1.71,15,1,2,1,0)
^1.7111P^4^4
"DATA",1.71,15,1,2,1,1,0)
75
"DATA",1.71,15,1,2,1,2,0)
70
"DATA",1.71,15,1,2,1,3,0)
88
"DATA",1.71,15,1,2,1,4,0)
213
"DATA",1.71,16,0)
GREENWICH
"DATA",1.71,16,1,0)
^1.711S^2^2
"DATA",1.71,16,1,1,0)
SST^+0000^GMT
"DATA",1.71,16,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,16,1,1,1,1,0)
221
"DATA",1.71,16,1,2,0)
DST^+0000^GMT
"DATA",1.71,16,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,16,1,2,1,1,0)
106
"DATA",1.71,17,0)
WESTERN EUROPEAN
"DATA",1.71,17,1,0)
^1.711S^2^2
"DATA",1.71,17,1,1,0)
SST^+0000^WET
"DATA",1.71,17,1,2,0)
SUM^+0100^WEST
"DATA",1.71,17,1,2,1,0)
^1.7111P^2^2
"DATA",1.71,17,1,2,1,1,0)
197
"DATA",1.71,17,1,2,1,2,0)
170
"DATA",1.71,18,0)
CENTRAL EUROPEAN
"DATA",1.71,18,1,0)
^1.711S^2^2
"DATA",1.71,18,1,1,0)
SST^+0100^CET
"DATA",1.71,18,1,1,1,0)
^1.7111P^11^11
"DATA",1.71,18,1,1,1,1,0)
84
"DATA",1.71,18,1,1,1,2,0)
108
"DATA",1.71,18,1,1,1,3,0)
14
"DATA",1.71,18,1,1,1,4,0)
203
"DATA",1.71,18,1,1,1,5,0)
169
"DATA",1.71,18,1,1,1,6,0)
76
"DATA",1.71,18,1,1,1,7,0)
197
"DATA",1.71,18,1,1,1,8,0)
160
"DATA",1.71,18,1,1,1,9,0)
202
"DATA",1.71,18,1,1,1,10,0)
62
"DATA",1.71,18,1,1,1,11,0)
60
"DATA",1.71,18,1,2,0)
SUM^+0200^CEST
"DATA",1.71,18,1,2,1,0)
^1.7111P^11^11
"DATA",1.71,18,1,2,1,1,0)
84
"DATA",1.71,18,1,2,1,2,0)
108
"DATA",1.71,18,1,2,1,3,0)
14
"DATA",1.71,18,1,2,1,4,0)
203
"DATA",1.71,18,1,2,1,5,0)
169
"DATA",1.71,18,1,2,1,6,0)
76
"DATA",1.71,18,1,2,1,7,0)
197
"DATA",1.71,18,1,2,1,8,0)
160
"DATA",1.71,18,1,2,1,9,0)
202
"DATA",1.71,18,1,2,1,10,0)
62
"DATA",1.71,18,1,2,1,11,0)
60
"DATA",1.71,19,0)
COCOS ISLANDS
"DATA",1.71,19,1,0)
^1.711S^1^1
"DATA",1.71,19,1,1,0)
SST^+0630^CCT
"DATA",1.71,20,0)
CENTRAL AFRICAN
"DATA",1.71,20,1,0)
^1.711S^1^1
"DATA",1.71,20,1,1,0)
SST^+0200^CAT
"DATA",1.71,21,0)
CHATHAM ISLAND
"DATA",1.71,21,1,0)
^1.711S^2^2
"DATA",1.71,21,1,1,0)
SST^+1245^CHAST
"DATA",1.71,21,1,2,0)
DST^+1345^CHADT
"DATA",1.71,22,0)
AZORES
"DATA",1.71,22,1,0)
^1.711S^2^2
"DATA",1.71,22,1,1,0)
SST^-0100^AZOT
"DATA",1.71,22,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,22,1,1,1,1,0)
170
"DATA",1.71,22,1,2,0)
SUM^+0000^AZOST
"DATA",1.71,22,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,22,1,2,1,1,0)
170
"DATA",1.71,23,0)
IRISH
"DATA",1.71,23,1,0)
^1.711S^1^1
"DATA",1.71,23,1,1,0)
SST^+0100^IST
"DATA",1.71,23,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,23,1,1,1,1,0)
106
"DATA",1.71,24,0)
BRITISH
"DATA",1.71,24,1,0)
^1.711S^1^1
"DATA",1.71,24,1,1,0)
SUM^+0100^BST
"DATA",1.71,24,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,24,1,1,1,1,0)
221
"DATA",1.71,25,0)
ISRAEL
"DATA",1.71,25,1,0)
^1.711S^2^2
"DATA",1.71,25,1,1,0)
SST^+0200^IST
"DATA",1.71,25,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,25,1,1,1,1,0)
107
"DATA",1.71,25,1,2,0)
DST^+0300^IDT
"DATA",1.71,25,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,25,1,2,1,1,0)
107
"DATA",1.71,26,0)
ARABIA
"DATA",1.71,26,1,0)
^1.711S^1^1
"DATA",1.71,26,1,1,0)
SST^+0300^AST
"DATA",1.71,26,1,1,1,0)
^1.7111P^4^4
"DATA",1.71,26,1,1,1,1,0)
113
"DATA",1.71,26,1,1,1,2,0)
105
"DATA",1.71,26,1,1,1,3,0)
186
"DATA",1.71,26,1,1,1,4,0)
228
"DATA",1.71,27,0)
PHILIPPINE
"DATA",1.71,27,1,0)
^1.711S^2^2
"DATA",1.71,27,1,1,0)
SST^+0800^PHT
"DATA",1.71,27,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,27,1,1,1,1,0)
167
"DATA",1.71,27,1,2,0)
DST^+0900^PHST
"DATA",1.71,27,1,2,1,0)
^1.7111P^1^1
"DATA",1.71,27,1,2,1,1,0)
167
"DATA",1.71,28,0)
SAMOA
"DATA",1.71,28,1,0)
^1.711S^1^1
"DATA",1.71,28,1,1,0)
SST^-1100^SST
"DATA",1.71,28,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,28,1,1,1,1,0)
1
"DATA",1.71,29,0)
CHAMORRO
"DATA",1.71,29,1,0)
^1.711S^1^1
"DATA",1.71,29,1,1,0)
SST^+1000^ChST
"DATA",1.71,29,1,1,1,0)
^1.7111P^1^1
"DATA",1.71,29,1,1,1,1,0)
1
"DATA",1.72,1,0)
1
"DATA",1.72,1,1,0)
^1.721^53^53
"DATA",1.72,1,1,1,0)
1977^2770424.02^2771030.02
"DATA",1.72,1,1,2,0)
1978^2780430.02^2781029.02
"DATA",1.72,1,1,3,0)
1979^2790429.02^2791028.02
"DATA",1.72,1,1,4,0)
1980^2800427.02^2801026.02
"DATA",1.72,1,1,5,0)
1981^2810426.02^2811025.02
"DATA",1.72,1,1,6,0)
1982^2820425.02^2821031.02
"DATA",1.72,1,1,7,0)
1983^2830424.02^2831030.02
"DATA",1.72,1,1,8,0)
1984^2840429.02^2841028.02
"DATA",1.72,1,1,9,0)
1985^2850428.02^2851027.02
"DATA",1.72,1,1,10,0)
1986^2860427.02^2861026.02
"DATA",1.72,1,1,11,0)
1987^2870405.02^2871025.02
"DATA",1.72,1,1,12,0)
1988^2880403.02^2881030.02
"DATA",1.72,1,1,13,0)
1989^2890402.02^2891029.02
"DATA",1.72,1,1,14,0)
1990^2900401.02^2901028.02
"DATA",1.72,1,1,15,0)
1991^2910407.02^2911027.02
"DATA",1.72,1,1,16,0)
1992^2920405.02^2921025.02
"DATA",1.72,1,1,17,0)
1993^2930404.02^2931031.02
"DATA",1.72,1,1,18,0)
1994^2940403.02^2941030.02
"DATA",1.72,1,1,19,0)
1995^2950402.02^2951029.02
"DATA",1.72,1,1,20,0)
1996^2960407.02^2961027.02
"DATA",1.72,1,1,21,0)
1997^2970406.02^2971026.02
"DATA",1.72,1,1,22,0)
1998^2980405.02^2981025.02
"DATA",1.72,1,1,23,0)
1999^2990404.02^2991031.02
"DATA",1.72,1,1,24,0)
2000^3000402.02^3001029.02
"DATA",1.72,1,1,25,0)
2001^3010401.02^3011028.02
"DATA",1.72,1,1,26,0)
2002^3020407.02^3021027.02
"DATA",1.72,1,1,27,0)
2003^3030406.02^3031026.02
"DATA",1.72,1,1,28,0)
2004^3040404.02^3041031.02
"DATA",1.72,1,1,29,0)
2005^3050403.02^3051030.02
"DATA",1.72,1,1,30,0)
2006^3060402.02^3061029.02
"DATA",1.72,1,1,31,0)
2007^3070311.02^3071104.02
"DATA",1.72,1,1,32,0)
2008^3080309.02^3081102.02
"DATA",1.72,1,1,33,0)
2009^3090308.02^3091101.02
"DATA",1.72,1,1,34,0)
2010^3100314.02^3101107.02
"DATA",1.72,1,1,35,0)
2011^3110313.02^3111106.02
"DATA",1.72,1,1,36,0)
2012^3120311.02^3121104.02
"DATA",1.72,1,1,37,0)
2013^3130310.02^3131103.02
"DATA",1.72,1,1,38,0)
2014^3140309.02^3141102.02
"DATA",1.72,1,1,39,0)
2015^3150308.02^3151101.02
"DATA",1.72,1,1,40,0)
2016^3160313.02^3161106.02
"DATA",1.72,1,1,41,0)
2017^3170312.02^3171105.02
"DATA",1.72,1,1,42,0)
2018^3180311.02^3181104.02
"DATA",1.72,1,1,43,0)
2019^3190310.02^3191103.02
"DATA",1.72,1,1,44,0)
2020^3200308.02^3201101.02
"DATA",1.72,1,1,45,0)
2021^3210314.02^3211107.02
"DATA",1.72,1,1,46,0)
2022^3220313.02^3221106.02
"DATA",1.72,1,1,47,0)
2023^3230312.02^3231105.02
"DATA",1.72,1,1,48,0)
2024^3240310.02^3241103.02
"DATA",1.72,1,1,49,0)
2025^3250309.02^3251102.02
"DATA",1.72,1,1,50,0)
2026^3260308.02^3261101.02
"DATA",1.72,1,1,51,0)
2027^3270314.02^3271107.02
"DATA",1.72,1,1,52,0)
2028^3280312.02^3281105.02
"DATA",1.72,1,1,53,0)
2029^3290311.02^3291104.02
"DATA",1.72,2,0)
39
"DATA",1.72,3,0)
138
"DATA",1.72,3,1,0)
^1.721^40^40
"DATA",1.72,3,1,1,0)
2016^3160403.02^3161030.02
"DATA",1.72,3,1,2,0)
2017^3170402.02^3171029.02
"DATA",1.72,3,1,3,0)
2018^3180401.02^3181028.02
"DATA",1.72,3,1,4,0)
2019^3190407.02^3191027.02
"DATA",1.72,3,1,5,0)
2020^3200405.02^3201025.02
"DATA",1.72,3,1,6,0)
2021^3210404.02^3211031.02
"DATA",1.72,3,1,7,0)
2022^3220403.02^3221030.02
"DATA",1.72,3,1,8,0)
2023^3230402.02^3231029.02
"DATA",1.72,3,1,9,0)
2024^3240407.02^3241027.02
"DATA",1.72,3,1,10,0)
2025^3250406.02^3251026.02
"DATA",1.72,3,1,11,0)
2026^3260405.02^3261025.02
"DATA",1.72,3,1,12,0)
2027^3270404.02^3271031.02
"DATA",1.72,3,1,13,0)
2028^3280402.02^3281029.02
"DATA",1.72,3,1,14,0)
2029^3290401.02^3291028.02
"DATA",1.72,3,1,15,0)
2015^3150405.02^3151025.02
"DATA",1.72,3,1,16,0)
2014^3140406.02^3141026.02
"DATA",1.72,3,1,17,0)
2013^3130407.02^3131027.02
"DATA",1.72,3,1,18,0)
2012^3120401.02^3121028.02
"DATA",1.72,3,1,19,0)
2011^3110403.02^3111030.02
"DATA",1.72,3,1,20,0)
2010^3100404.02^3101031.02
"DATA",1.72,3,1,21,0)
2009^3090405.02^3091025.02
"DATA",1.72,3,1,22,0)
2008^3080406.02^3081026.02
"DATA",1.72,3,1,23,0)
2007^3070401.02^3071028.02
"DATA",1.72,3,1,24,0)
2006^3060402.02^3061029.02
"DATA",1.72,3,1,25,0)
2005^3050403.02^3051030.02
"DATA",1.72,3,1,26,0)
2004^3040404.02^3041031.02
"DATA",1.72,3,1,27,0)
2003^3030406.02^3031026.02
"DATA",1.72,3,1,28,0)
2002^3020407.02^3021027.02
"DATA",1.72,3,1,29,0)
2001^3010505.02^3010930.02
"DATA",1.72,3,1,30,0)
2000^3000402.02^3001029.02
"DATA",1.72,3,1,31,0)
1999^2990404.02^2991031.02
"DATA",1.72,3,1,32,0)
1998^2980405.02^2981025.02
"DATA",1.72,3,1,33,0)
1997^2970406.02^2971026.02
"DATA",1.72,3,1,34,0)
1996^2960407.02^2961027.02
"DATA",1.72,3,1,35,0)
1995^2950402.02^2951029.02
"DATA",1.72,3,1,36,0)
1994^2940403.02^2941030.02
"DATA",1.72,3,1,37,0)
1993^2930404.02^2931031.02
"DATA",1.72,3,1,38,0)
1992^2920405.02^2921025.02
"DATA",1.72,3,1,39,0)
1991^2910407.02^2911027.02
"DATA",1.72,3,1,40,0)
1990^2900401.02^2901028.02
"DATA",1.72,4,0)
89
"DATA",1.72,4,1,0)
^1.721^20^20
"DATA",1.72,4,1,1,0)
2016^3160326.22^3161029.23
"DATA",1.72,4,1,2,0)
2015^3150328.22^3151024.23
"DATA",1.72,4,1,3,0)
2017^3170325.22^3171028.23
"DATA",1.72,4,1,4,0)
2014^3140329.22^3141025.23
"DATA",1.72,4,1,5,0)
2018^3180324.22^3181027.23
"DATA",1.72,4,1,6,0)
2019^3190330.22^3191026.23
"DATA",1.72,4,1,7,0)
2020^3200328.22^3201024.23
"DATA",1.72,4,1,8,0)
2021^3210327.22^3211030.23
"DATA",1.72,4,1,9,0)
2022^3220326^3221029
"DATA",1.72,4,1,10,0)
2023^3230325.22^3231028.23
"DATA",1.72,4,1,11,0)
2024^3240330.22^3241026.23
"DATA",1.72,4,1,12,0)
2025^3250329.22^3251025.23
"DATA",1.72,4,1,13,0)
2026^3260328.22^3261024.23
"DATA",1.72,4,1,14,0)
2027^3270327.22^3271030.23
"DATA",1.72,4,1,15,0)
2028^3280325.22^3281028.23
"DATA",1.72,4,1,16,0)
2029^3290324.22^3291027.23
"DATA",1.72,4,1,17,0)
2013^3130330.22^3131026.23
"DATA",1.72,4,1,18,0)
2012^3120324.22^3121027
"DATA",1.72,4,1,19,0)
2011^3110326.22^3111029.23
"DATA",1.72,4,1,20,0)
2010^3100327.22^3101030.23
"DATA",1.72,5,0)
19
"DATA",1.72,5,1,0)
^1.721^4^4
"DATA",1.72,5,1,1,0)
1980^2800420.02^2800925.02
"DATA",1.72,5,1,2,0)
1977^2770612.02^2771002.02
"DATA",1.72,5,1,3,0)
1978^2780416.02^2781001.02
"DATA",1.72,5,1,4,0)
1979^2790415.02^2790930.02
"DATA",1.72,6,0)
64
"DATA",1.72,6,1,0)
^1.721^7^7
"DATA",1.72,6,1,1,0)
1966^2661030.24
"DATA",1.72,6,1,2,0)
1967^^2670228.24
"DATA",1.72,6,1,3,0)
1969^2691026.24^2700221.24
"DATA",1.72,6,1,4,0)
1970^2701025.24^2710120.24
"DATA",1.72,6,1,5,0)
1971^2711031.24^2720121.24
"DATA",1.72,6,1,6,0)
1972^2721029.24^2730121.24
"DATA",1.72,6,1,7,0)
1973^2731028.24^2740121.24
"DATA",1.72,7,0)
27
"DATA",1.72,7,1,0)
^1.721^45^45
"DATA",1.72,7,1,1,0)
1985^2851102.24^2860315.24
"DATA",1.72,7,1,2,0)
1986^2861025.24^2870214.24
"DATA",1.72,7,1,3,0)
1987^2871025.24^2880207.24
"DATA",1.72,7,1,4,0)
1988^2881016.24^2890129.24
"DATA",1.72,7,1,5,0)
1989^2891015.24^2900201.24
"DATA",1.72,7,1,6,0)
1990^2901021.24^2910217.24
"DATA",1.72,7,1,7,0)
1991^2911020.24^2920209.24
"DATA",1.72,7,1,8,0)
1992^2921025.24^2930131.24
"DATA",1.72,7,1,9,0)
1993^2931017.24^2940220.24
"DATA",1.72,7,1,10,0)
1994^2941016.24^2950219.24
"DATA",1.72,7,1,11,0)
1995^2951015.24^2960211.24
"DATA",1.72,7,1,12,0)
1996^2961006.24^2970216.24
"DATA",1.72,7,1,13,0)
1997^2971006.24^2980301.24
"DATA",1.72,7,1,14,0)
1998^2981011.24^2990221.24
"DATA",1.72,7,1,15,0)
1999^2991003.24^3000227.24
"DATA",1.72,7,1,16,0)
2000^3001008.24^3010218.24
"DATA",1.72,7,1,17,0)
2001^3011014.24^3020217.24
"DATA",1.72,7,1,18,0)
2002^3021103.24^3030216.24
"DATA",1.72,7,1,19,0)
2003^3031019.24^3040215.24
"DATA",1.72,7,1,20,0)
2004^3041102.24^3050220.24
"DATA",1.72,7,1,21,0)
2005^3051016.24^3060219.24
"DATA",1.72,7,1,22,0)
2006^3061105.24^3070225.24
"DATA",1.72,7,1,23,0)
2007^3071024.24^3080217.24
"DATA",1.72,7,1,24,0)
2008^3081019.24^3090215.24
"DATA",1.72,7,1,25,0)
2009^3091018.24^3100221.24
"DATA",1.72,7,1,26,0)
2010^3101017.24^3110220.24
"DATA",1.72,7,1,27,0)
2011^3111016.24^3120226.24
"DATA",1.72,7,1,28,0)
2012^3121021.24^3130217.24
"DATA",1.72,7,1,29,0)
2013^3131020.24^3140216.24
"DATA",1.72,7,1,30,0)
2014^3141019.24^3150222.24
"DATA",1.72,7,1,31,0)
2015^3151018.24^3160221.24
"DATA",1.72,7,1,32,0)
2016^3161016.24^3170219.24
"DATA",1.72,7,1,33,0)
2017^3171015.24^3180218.24
"DATA",1.72,7,1,34,0)
2018^3181021.24^3190217.24
"DATA",1.72,7,1,35,0)
2019^3191020.24^3200216.24
"DATA",1.72,7,1,36,0)
2020^3201018.24^3210221.24
"DATA",1.72,7,1,37,0)
2021^3211017.24^3220220.24
"DATA",1.72,7,1,38,0)
2022^3221016.24^3230226.24
"DATA",1.72,7,1,39,0)
2023^3231015.24^3240218.24
"DATA",1.72,7,1,40,0)
2024^3241020.24^3250216.24
"DATA",1.72,7,1,41,0)
2025^3251019.24^3260222.24
"DATA",1.72,7,1,42,0)
2026^3261018.24^3270221.24
"DATA",1.72,7,1,43,0)
2027^3271017.24^3280220.24
"DATA",1.72,7,1,44,0)
2028^3281015.24^3290218.24
"DATA",1.72,7,1,45,0)
2029^3291021.24
"DATA",1.72,8,0)
12
"DATA",1.72,8,1,0)
^1.721^3^3
"DATA",1.72,8,1,1,0)
2008^3081019.24^3090315.24
"DATA",1.72,8,1,2,0)
2007^3071230.24^3080316.24
"DATA",1.72,8,1,3,0)
1999^2991003.24^3000305.24
"DATA",1.72,9,0)
84
"DATA",1.72,9,1,0)
^1.721^32^32
"DATA",1.72,9,1,1,0)
2016^3160327.02^3161030.03
"DATA",1.72,9,1,2,0)
2017^3170326.02^3171029.03
"DATA",1.72,9,1,3,0)
2018^3180326.02^3181028.03
"DATA",1.72,9,1,4,0)
2019^3190331.02^3191027.03
"DATA",1.72,9,1,5,0)
2020^3200329.02^3201025.03
"DATA",1.72,9,1,6,0)
2021^3210328.02^3211031.03
"DATA",1.72,9,1,7,0)
2022^3220327.02^3221030.03
"DATA",1.72,9,1,8,0)
2023^3230326.02^3231029.03
"DATA",1.72,9,1,9,0)
2024^3240331.02^3241027.03
"DATA",1.72,9,1,10,0)
2025^3250330.02^3251026.03
"DATA",1.72,9,1,11,0)
2026^3260329.02^3261025.03
"DATA",1.72,9,1,12,0)
2027^3270328.02^3271031.03
"DATA",1.72,9,1,13,0)
2028^3280326.02^3281029.03
"DATA",1.72,9,1,14,0)
2029^3290325.02^3291028.03
"DATA",1.72,9,1,15,0)
1998^2980329.02^2981025.03
"DATA",1.72,9,1,16,0)
1999^2990328.02^2991031.03
"DATA",1.72,9,1,17,0)
2000^3000326.02^3001029.03
"DATA",1.72,9,1,18,0)
2001^3010325.02^3011028.03
"DATA",1.72,9,1,19,0)
2002^3020331.02^3021027.03
"DATA",1.72,9,1,20,0)
2003^3030330.02^3031026.03
"DATA",1.72,9,1,21,0)
2004^3040328.02^3041031.03
"DATA",1.72,9,1,22,0)
2005^3050327.02^3051030.03
"DATA",1.72,9,1,23,0)
2006^3060326.02^3061029.03
"DATA",1.72,9,1,24,0)
2007^3070325.02^3071028.03
"DATA",1.72,9,1,25,0)
2008^3080330.02^3081026.03
"DATA",1.72,9,1,26,0)
2009^3090329.02^3091025.03
"DATA",1.72,9,1,27,0)
2010^3100328.02^3101031.03
"DATA",1.72,9,1,28,0)
2011^3110327.02^3111030.03
"DATA",1.72,9,1,29,0)
2012^3120325.02^3121028.03
"DATA",1.72,9,1,30,0)
2013^3130331.02^3131027.03
"DATA",1.72,9,1,31,0)
2014^3140330.02^3141026.03
"DATA",1.72,9,1,32,0)
2015^3150329.02^3151025.03
"DATA",1.72,10,0)
108^^84
"DATA",1.72,11,0)
167
"DATA",1.72,11,1,0)
^1.721^2^2
"DATA",1.72,11,1,1,0)
1978^2780322.24^2780921.24
"DATA",1.72,11,1,2,0)
1990^2900521.24^2900729.24
"DATA",1.72,12,0)
75
"DATA",1.72,12,1,0)
^1.721^7^7
"DATA",1.72,12,1,1,0)
2016^3160327.03^3161030.04
"DATA",1.72,12,1,2,0)
2017^3170326.03^3171029.04
"DATA",1.72,12,1,3,0)
2015^3150329.03^3151025.04
"DATA",1.72,12,1,4,0)
2018^3180325.03^3181028.04
"DATA",1.72,12,1,5,0)
2014^3140330.03^3141026.04
"DATA",1.72,12,1,6,0)
2019^3190331.03^3191027.04
"DATA",1.72,12,1,7,0)
2020^3200329.03^3201025.04
"DATA",1.72,13,0)
70^^75
"DATA",1.72,14,0)
76^^84
"DATA",1.72,15,0)
14^^84
"DATA",1.72,16,0)
203^^84
"DATA",1.72,17,0)
169^^84
"DATA",1.72,18,0)
197^^84
"DATA",1.72,19,0)
160^^84
"DATA",1.72,20,0)
202^^84
"DATA",1.72,21,0)
62^^84
"DATA",1.72,22,0)
60^^84
"FIA",.81)
DATA TYPE
"FIA",.81,0)
^DI(.81,
"FIA",.81,0,0)
.81
"FIA",.81,0,1)
y^n^f^^y^^y^o^n
"FIA",.81,0,10)

"FIA",.81,0,11)
I Y>10&(Y<100)
"FIA",.81,0,"RLRO")

"FIA",.81,0,"VR")
22.2^DI
"FIA",.81,.81)
0
"FIA",.81,.81101)
0
"FIA",.81,.81201)
0
"FIA",.81,.8121)
0
"FIA",.81,.81215)
0
"FIA",.9)
META DATA DICTIONARY
"FIA",.9,0)
^DDD(
"FIA",.9,0,0)
.9I
"FIA",.9,0,1)
y^y^p^^^^n^^n
"FIA",.9,0,10)

"FIA",.9,0,11)

"FIA",.9,0,"RLRO")

"FIA",.9,0,"VR")
22.2^DI
"FIA",.9,.9)
1
"FIA",.9,.9,.01)

"FIA",.9,.9,.06)

"FIA",.9,.9,.07)

"FIA",1.71)
WORLD TIMEZONES
"FIA",1.71,0)
^DIT(1.71,
"FIA",1.71,0,0)
1.71
"FIA",1.71,0,1)
y^y^f^^n^^y^o^n
"FIA",1.71,0,10)

"FIA",1.71,0,11)

"FIA",1.71,0,"RLRO")

"FIA",1.71,0,"VR")
22.2^DI
"FIA",1.71,1.71)
0
"FIA",1.71,1.711)
0
"FIA",1.71,1.7111)
0
"FIA",1.72)
WORLD DAYLIGHT SAVINGS
"FIA",1.72,0)
^DIT(1.72,
"FIA",1.72,0,0)
1.72P
"FIA",1.72,0,1)
y^y^f^^n^^y^o^n
"FIA",1.72,0,10)

"FIA",1.72,0,11)

"FIA",1.72,0,"RLRO")

"FIA",1.72,0,"VR")
22.2^DI
"FIA",1.72,1.72)
0
"FIA",1.72,1.721)
0
"FIA",4)
INSTITUTION
"FIA",4,0)
^DIC(4,
"FIA",4,0,0)
4Is
"FIA",4,0,1)
y^y^p^^^^n^^n
"FIA",4,0,10)

"FIA",4,0,11)

"FIA",4,0,"RLRO")

"FIA",4,0,"VR")
22.2^DI
"FIA",4,4)
1
"FIA",4,4,800)

"FIA",4,4,801)

"FIA",4,4,802)

"INIT")
POST23^DINIT220
"KRN",.402,2795,-1)
0^1
"KRN",.402,2795,0)
DIP81IT^3151027.1226^@^.81^^@^3151111
"KRN",.402,2795,"DR",1,.81)
.01;1;2;3;11;21;101;201;
"KRN",.402,2795,"DR",2,.81101)
.01;1;10;31;
"KRN",.402,2795,"DR",2,.81201)
.01;31;
"KRN",.402,2796,-1)
0^3
"KRN",.402,2796,0)
DIP87IT^3151027.1332^@^.87^^@^3151028
"KRN",.402,2796,"DR",1,.87)
.01;11;21;
"KRN",.402,2797,-1)
0^2
"KRN",.402,2797,0)
DIP86IT^3151027.1334^@^.86^^@^3151028
"KRN",.402,2797,"DR",1,.86)
.01;1;11;21;41;42;
"KRN",.403,154,-1)
0^1
"KRN",.403,154,0)
DIP81S^@^@^^3151027.1232^^^.81^0^0^1
"KRN",.403,154,40,0)
^.4031I^5^5
"KRN",.403,154,40,1,0)
1^^1,1^2^3
"KRN",.403,154,40,1,1)
Page 1
"KRN",.403,154,40,1,40,0)
^.4032IP^561^2
"KRN",.403,154,40,1,40,560,0)
DIP81SMAIN1^1^1,1^d
"KRN",.403,154,40,1,40,561,0)
DIP81SBODYP1^2^3,1^e
"KRN",.403,154,40,2,0)
2^^1,1^3^1
"KRN",.403,154,40,2,1)
Page 2
"KRN",.403,154,40,2,40,0)
^.4032IP^566^2
"KRN",.403,154,40,2,40,560,0)
DIP81SMAIN1^1^1,1^d
"KRN",.403,154,40,2,40,566,0)
DIP81SBODYP2^2^4,1^e
"KRN",.403,154,40,3,0)
3^^1,1^1^2
"KRN",.403,154,40,3,1)
Page 3
"KRN",.403,154,40,3,40,0)
^.4032IP^568^2
"KRN",.403,154,40,3,40,560,0)
DIP81SMAIN1^1^1,1^d
"KRN",.403,154,40,3,40,568,0)
DIP81SBODYP3^2^4,1^e
"KRN",.403,154,40,4,0)
2.5^^5,5^^^1^15,75
"KRN",.403,154,40,4,1)
Page 2.5^PROPERTY,DIP81SBODYP2,2
"KRN",.403,154,40,4,40,0)
^.4032IP^567^1
"KRN",.403,154,40,4,40,567,0)
DIP81SBODYP2.5^1^2,2^e
"KRN",.403,154,40,5,0)
3.5^^5,5^^^1^15,75
"KRN",.403,154,40,5,1)
Page 3.5^METHOD,DIP81SBODYP3,3
"KRN",.403,154,40,5,40,0)
^.4032IP^569^1
"KRN",.403,154,40,5,40,569,0)
DIP81SBODYP3.5^1^2,2^e
"KRN",.403,155,-1)
0^2
"KRN",.403,155,0)
DIP86S^@^@^^3151028.1255^^^.86^0^0^1
"KRN",.403,155,40,0)
^.4031I^1^1
"KRN",.403,155,40,1,0)
1^^1,1
"KRN",.403,155,40,1,1)
Page 1
"KRN",.403,155,40,1,40,0)
^.4032IP^563^2
"KRN",.403,155,40,1,40,562,0)
DIP86SMAIN1^1^1,1^d
"KRN",.403,155,40,1,40,563,0)
DIP86SBODY1^2^3,1^e
"KRN",.403,156,-1)
0^3
"KRN",.403,156,0)
DIP87S^@^@^^3151028.1309^^^.87^0^0^1
"KRN",.403,156,40,0)
^.4031I^1^1
"KRN",.403,156,40,1,0)
1^^1,1
"KRN",.403,156,40,1,1)
Page 1
"KRN",.403,156,40,1,40,0)
^.4032IP^565^2
"KRN",.403,156,40,1,40,564,0)
DIP87SMAIN1^1^1,1^d
"KRN",.403,156,40,1,40,565,0)
DIP87SBODY1^2^3,1^e
"KRN",.404,560,0)
DIP81SMAIN1^.81^
"KRN",.404,560,40,0)
^.4044I^5^3
"KRN",.404,560,40,1,0)
1^DATA TYPE^1
"KRN",.404,560,40,1,2)
^^1,34
"KRN",.404,560,40,4,0)
4^-------------------------------------------------------------------------------^1
"KRN",.404,560,40,4,2)
^^3,1
"KRN",.404,560,40,5,0)
5^NUMBER^3
"KRN",.404,560,40,5,1)
.001
"KRN",.404,560,40,5,2)
2,9^16^2,1
"KRN",.404,561,0)
DIP81SBODYP1^.81
"KRN",.404,561,40,0)
^.4044I^8^6
"KRN",.404,561,40,3,0)
3^NAME^3
"KRN",.404,561,40,3,1)
.01
"KRN",.404,561,40,3,2)
2,7^30^2,1
"KRN",.404,561,40,4,0)
4^INTERNAL REPRESENTATION^3
"KRN",.404,561,40,4,1)
1
"KRN",.404,561,40,4,2)
4,26^1^4,1
"KRN",.404,561,40,5,0)
5^STANDARD PROMPT^3
"KRN",.404,561,40,5,1)
2
"KRN",.404,561,40,5,2)
6,18^62^6,1
"KRN",.404,561,40,6,0)
6^SORT BY EXTERNAL?^3
"KRN",.404,561,40,6,1)
3
"KRN",.404,561,40,6,2)
8,20^3^8,1
"KRN",.404,561,40,7,0)
7^SHORT DESCRIPTION^3
"KRN",.404,561,40,7,1)
11
"KRN",.404,561,40,7,2)
10,20^60^10,1
"KRN",.404,561,40,8,0)
8^DESCRIPTION^3
"KRN",.404,561,40,8,1)
21
"KRN",.404,561,40,8,2)
12,14^1^12,1
"KRN",.404,562,0)
DIP86SMAIN1^.86^
"KRN",.404,562,40,0)
^.4044I^2^2
"KRN",.404,562,40,1,0)
1^DATA TYPE PROPERTY^1
"KRN",.404,562,40,1,2)
^^1,31
"KRN",.404,562,40,2,0)
2^-------------------------------------------------------------------------------^1
"KRN",.404,562,40,2,2)
^^2,1
"KRN",.404,563,0)
DIP86SBODY1^.86
"KRN",.404,563,40,0)
^.4044I^6^6
"KRN",.404,563,40,1,0)
1^NAME^3
"KRN",.404,563,40,1,1)
.01
"KRN",.404,563,40,1,2)
1,7^30^1,1
"KRN",.404,563,40,2,0)
2^ABBREVIATION^3
"KRN",.404,563,40,2,1)
1
"KRN",.404,563,40,2,2)
3,15^10^3,1
"KRN",.404,563,40,3,0)
3^SHORT DESCRIPTION^3
"KRN",.404,563,40,3,1)
11
"KRN",.404,563,40,3,2)
5,20^60^5,1
"KRN",.404,563,40,4,0)
4^DESCRIPTION^3
"KRN",.404,563,40,4,1)
21
"KRN",.404,563,40,4,2)
7,14^1^7,1
"KRN",.404,563,40,5,0)
5^DATA TYPE^3
"KRN",.404,563,40,5,1)
41
"KRN",.404,563,40,5,2)
9,12^30^9,1
"KRN",.404,563,40,6,0)
6^DIR(0)^3
"KRN",.404,563,40,6,1)
42
"KRN",.404,563,40,6,2)
11,9^71^11,1
"KRN",.404,564,0)
DIP87SMAIN1^.87^
"KRN",.404,564,40,0)
^.4044I^2^2
"KRN",.404,564,40,1,0)
1^DATA TYPE METHOD^1
"KRN",.404,564,40,1,2)
^^1,32
"KRN",.404,564,40,2,0)
2^-------------------------------------------------------------------------------^1
"KRN",.404,564,40,2,2)
^^2,1
"KRN",.404,565,0)
DIP87SBODY1^.87
"KRN",.404,565,40,0)
^.4044I^3^3
"KRN",.404,565,40,1,0)
1^NAME^3
"KRN",.404,565,40,1,1)
.01
"KRN",.404,565,40,1,2)
1,7^50^1,1
"KRN",.404,565,40,2,0)
2^SHORT DESCRIPTION^3
"KRN",.404,565,40,2,1)
11
"KRN",.404,565,40,2,2)
3,20^60^3,1
"KRN",.404,565,40,3,0)
3^DESCRIPTION^3
"KRN",.404,565,40,3,1)
21
"KRN",.404,565,40,3,2)
5,14^1^5,1
"KRN",.404,566,0)
DIP81SBODYP2^.81
"KRN",.404,566,40,0)
^.4044I^1^1
"KRN",.404,566,40,1,0)
1^Select PROPERTY^3
"KRN",.404,566,40,1,1)
101
"KRN",.404,566,40,1,2)
1,18^30^1,1
"KRN",.404,567,0)
DIP81SBODYP2.5^.81101
"KRN",.404,567,40,0)
^.4044I^5^5
"KRN",.404,567,40,1,0)
1^DATA TYPE PROPERTY MULTIPLE^1
"KRN",.404,567,40,1,2)
^^1,22
"KRN",.404,567,40,2,0)
2^PROPERTY^3
"KRN",.404,567,40,2,1)
.01
"KRN",.404,567,40,2,2)
3,11^30^3,1
"KRN",.404,567,40,3,0)
3^ORDER^3
"KRN",.404,567,40,3,1)
1
"KRN",.404,567,40,3,2)
5,8^4^5,1
"KRN",.404,567,40,4,0)
4^PROMPT?^3
"KRN",.404,567,40,4,1)
10
"KRN",.404,567,40,4,2)
7,10^60^7,1
"KRN",.404,567,40,5,0)
5^VALUE^3
"KRN",.404,567,40,5,1)
31
"KRN",.404,567,40,5,2)
9,8^62^9,1
"KRN",.404,568,0)
DIP81SBODYP3^.81
"KRN",.404,568,40,0)
^.4044I^1^1
"KRN",.404,568,40,1,0)
1^Select METHOD^3
"KRN",.404,568,40,1,1)
201
"KRN",.404,568,40,1,2)
1,16^30^1,1
"KRN",.404,569,0)
DIP81SBODYP3.5^.81201
"KRN",.404,569,40,0)
^.4044I^3^3
"KRN",.404,569,40,1,0)
1^DATA TYPE METHOD MULTIPLE^1
"KRN",.404,569,40,1,2)
^^1,21
"KRN",.404,569,40,2,0)
2^METHOD^3
"KRN",.404,569,40,2,1)
.01
"KRN",.404,569,40,2,2)
3,9^50^3,1
"KRN",.404,569,40,3,0)
3^M CODE^3
"KRN",.404,569,40,3,1)
31
"KRN",.404,569,40,3,2)
5,9^60^5,1
"KRN",19,2921730,-1)
0^1
"KRN",19,2921730,0)
DI DATA TYPE FILE^ENTER OR EDIT DATA TYPE FILE^^R^^^^^^^^^^^
"KRN",19,2921730,15)

"KRN",19,2921730,20)

"KRN",19,2921730,25)
ENP81^DIFMEDT1
"KRN",19,2921730,"U")
ENTER OR EDIT DATA TYPE FILE
"KRN",19,2921731,-1)
0^2
"KRN",19,2921731,0)
DI DATA TYPE METHOD FILE^ENTER OR EDIT DATA TYPE METHOD FILE^^R^^^^^^^^
"KRN",19,2921731,25)
ENP87^DIFMEDT1
"KRN",19,2921731,"U")
ENTER OR EDIT DATA TYPE METHOD
"KRN",19,2921732,-1)
0^4
"KRN",19,2921732,0)
DI DATA TYPE PROPERTY FILE^ENTER OR EDIT DATA TYPE PROPERTY FILE^^R^^^^^^^^
"KRN",19,2921732,25)
ENP86^DIFMEDT1
"KRN",19,2921732,"U")
ENTER OR EDIT DATA TYPE PROPER
"KRN",19,2921733,-1)
0^3
"KRN",19,2921733,0)
DI DATA TYPE OPTIONS^DATA TYPE OPTIONS^^M^^^^^^^^
"KRN",19,2921733,10,0)
^19.01IP^3^3
"KRN",19,2921733,10,1,0)
2921730^1^1
"KRN",19,2921733,10,1,"^")
DI DATA TYPE FILE
"KRN",19,2921733,10,2,0)
2921731^2^2
"KRN",19,2921733,10,2,"^")
DI DATA TYPE METHOD FILE
"KRN",19,2921733,10,3,0)
2921732^3^3
"KRN",19,2921733,10,3,"^")
DI DATA TYPE PROPERTY FILE
"KRN",19,2921733,99)
64331,48128
"KRN",19,2921733,"U")
DATA TYPE OPTIONS
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",1,-1)
1^1
"PKG",1,0)
VA FILEMAN^DI^FM INIT
"PKG",1,22,0)
^9.49I^1^1
"PKG",1,22,1,0)
22.2^3160105^3170217^520736440
"PKG",1,22,1,"PAH",1,0)
2^3170220^520736440
"PKG",1,22,1,"PAH",1,1,0)
^^1^1^3170220
"PKG",1,22,1,"PAH",1,1,1,0)
Extensible Data Types and Meta Data Dictionary enhancements
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
58
"RTN","DDD")
0^51^B37277699^B10838418
"RTN","DDD",1,0)
DDD ;O-OIFO/GFT - Build Meta Data Dictionary ;20JAN2013
"RTN","DDD",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DDD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDD",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDD",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDD",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDD",7,0)
 ;;GFT;**1045**
"RTN","DDD",8,0)
 ;;12/8/2015 lg modifications to accomodate OBJECT NAME field
"RTN","DDD",9,0)
 ;;12/8/2015 lg added CAMCASE module
"RTN","DDD",10,0)
 ;;12/17/2015 removed line MAKE+2 - I '$D(^DDD(0)) D ^DDDINIT Q:'$D(^DDD(0))  ; before 12/17/2015 -lg
"RTN","DDD",11,0)
 ;;PARTIAL,CLEAN,ADD,GETFILES,F1,XREF modules added for partial updates ; 12/28/2015 -lg
"RTN","DDD",12,0)
 ;;PART(ARRAY) entry point added to send a specific list of files to update ; 12/28/15 -lg
"RTN","DDD",13,0)
 ;;ADDED variable STDT for start date/time to stamp LAST UPDATED field #.07 that was added to ^DD ; 12/28/15 -lg
"RTN","DDD",14,0)
 ;;Rearranged and separated FILELIST and PARTIAL1 code, ADDED PARTIAL2 12/29/2015
"RTN","DDD",15,0)
 ;
"RTN","DDD",16,0)
MAKE ;
"RTN","DDD",17,0)
 N DDD,FLD,Z,I,L,F,STDT D DT^DICRW,NOW^%DTC S STDT=% ; 12/28/15 -lg
"RTN","DDD",18,0)
 I '$D(^DDD(0)) W !!,"Your Meta Data Dictionary files are missing.",!,"Please contact your IRM to fix the problem and then try again.",!! Q  ;D ^DDDINIT Q:'$D(^DDD(0))
"RTN","DDD",19,0)
 G AC:$D(^DIC("AC","DDD")) W !,"SINCE NO FILE IS IN APPLICATION GROUP 'DDD',",!,"the entire FileMan database will be scanned, and"
"RTN","DDD",20,0)
 D OK Q:'$D(%)
"RTN","DDD",21,0)
 F DDD=1.99:0 S DDD=$O(^DIC(DDD)) Q:'DDD  D BLD
"RTN","DDD",22,0)
 G END
"RTN","DDD",23,0)
 ;
"RTN","DDD",24,0)
AC W !,"Based on all Files identified as belonging to the 'DDD' Application Group," D OK Q:'$D(%)
"RTN","DDD",25,0)
 F DDD=0:0 S DDD=$O(^DIC("AC","DDD",DDD)) Q:DDD=""  D BLD
"RTN","DDD",26,0)
END S DIK="^DDD(" D IXALL^DIK W !,"<DONE>"
"RTN","DDD",27,0)
 D NOW^%DTC S ^DDD("MSC")=%  ; stamp last run date 12/22/15 -lg
"RTN","DDD",28,0)
 Q
"RTN","DDD",29,0)
 ;
"RTN","DDD",30,0)
BLD N FILE S FILE=DDD,F=$P(^DIC(DDD,0),"^")_"_"
"RTN","DDD",31,0)
FILE W "." F FLD=0:0 S FLD=$O(^DD(FILE,FLD)) Q:'FLD  S I=I+1 D FLD,XREF:$D(PARTIAL) ; added XREF during PARTIAL 12/23/15 -lg
"RTN","DDD",32,0)
 I $D(FILE)>9  S FILE=$O(FILE(0)) S F=FILE(FILE) K FILE(FILE) G FILE
"RTN","DDD",33,0)
 Q:$D(PARTIAL)  ; 12/22/15 -lg
"RTN","DDD",34,0)
DDDA N FN,IEN Q:'$D(^DIC("AC","DDDA",DDD))
"RTN","DDD",35,0)
 S FN=$$CREF^DILF(^DIC(DDD,0,"GL")),F=$P(^DIC(DDD,0),U)
"RTN","DDD",36,0)
 F IEN=0:0 S IEN=$O(@FN@(IEN)) Q:'IEN  S L=$P(@FN@(IEN,0),U),I=$O(^DDD("A"),-1)+1,^DDD(I,0)=F_"_"_L_U_L_U_DDD_U_.01_U_1_U_$$CAMCASE(F_L)  ; lg 12/22/15 see FLD+1 change
"RTN","DDD",37,0)
 Q
"RTN","DDD",38,0)
 ;
"RTN","DDD",39,0)
FLD Q:'$D(^DD(FILE,FLD,0))  S Z=^(0),%=$P(Z,U,2) I % Q:'$D(^DD(+%,.01,0))  S:$P(^(0),U,2)'["W" FILE(+%)=F_$P(Z,U)_"_"
"RTN","DDD",40,0)
 S ^DDD(I,0)=F_$P(Z,U)_U_$P(Z,U)_U_FILE_U_FLD_U_U_$$CAMCASE(F_$P(Z,U))_U_STDT ; lg 12/28/15
"RTN","DDD",41,0)
 S L=0
"RTN","DDD",42,0)
DESCR I $D(^DD(FILE,FLD,3)),^(3)]"" S L=1,^DDD(I,1,1,0)=^(3)
"RTN","DDD",43,0)
 F Z=0:0 S Z=$O(^DD(FILE,FLD,21,Z)) Q:'Z  S L=L+1,^DDD(I,1,L,0)=$E(" ",L=2)_^(Z,0)
"RTN","DDD",44,0)
 I L=0,%["P" S Z=+$P(%,"P",2) I $D(^DD(Z,.01,0)) S %=$P(^(0),U,2) N FILE,FLD S FILE=Z,FLD=.01 D DESCR
"RTN","DDD",45,0)
 S ^DDD(I,1,0)="^^"_L_U_L_U_DT
"RTN","DDD",46,0)
 Q
"RTN","DDD",47,0)
 ;
"RTN","DDD",48,0)
OK W !,"a Central Data Dictionary will now be compiled."
"RTN","DDD",49,0)
 K %
"RTN","DDD",50,0)
 N DIR
"RTN","DDD",51,0)
 S DIR(0)="Y"
"RTN","DDD",52,0)
 S DIR("A")="OK"
"RTN","DDD",53,0)
 S DIR("B")="No"
"RTN","DDD",54,0)
 S DIR("?",1)="If you say YES, File .9 will be re-constructed, "
"RTN","DDD",55,0)
 S DIR("?",2)="using the existing field definitions in your FileMan files."
"RTN","DDD",56,0)
 S DIR("?")="This process will take some time and use system resources."
"RTN","DDD",57,0)
 D ^DIR Q:Y'=1  S %=Y
"RTN","DDD",58,0)
 S I=0
"RTN","DDD",59,0)
 S ^DDD(0)=$P(^DDD(0),U,1,2)
"RTN","DDD",60,0)
 N J F J=0:0 S J=$O(^DDD(J)) Q:J=""  K ^(J) ; Kill all nodes including indexes.
"RTN","DDD",61,0)
 Q
"RTN","DDD",62,0)
 ;
"RTN","DDD",63,0)
BUILDS(FILE,FIELD) ;BUILDs in which a field appears
"RTN","DDD",64,0)
 Q:'FILE!'FIELD
"RTN","DDD",65,0)
 N D,I,J D IJ^DIUTL(FILE) F D=0:0 S D=$O(^XPD(9.6,D)) Q:'D  I $D(^(D,4,J(0),2,FILE,1,FIELD)) N D0 S D0=D,X=$P(^XPD(9.6,D,0),U) X DICMX Q:'$D(D)
"RTN","DDD",66,0)
 Q  ; lg 12/08/15
"RTN","DDD",67,0)
 ;
"RTN","DDD",68,0)
FILELIST(ARRAY) ; entry point to send a specific list of files by reference to update in array(file#)=""
"RTN","DDD",69,0)
 ; 12/28/15
"RTN","DDD",70,0)
 Q:$D(ARRAY)<9
"RTN","DDD",71,0)
 N DDD,FLD,Z,I,L,F,PARTIAL,UFILE,KREF,STDT
"RTN","DDD",72,0)
 D DT^DICRW,NOW^%DTC S STDT=% ; 12/28/15 -lg
"RTN","DDD",73,0)
 S PARTIAL="" ; flag indicating this process is a "PARTIAL" update
"RTN","DDD",74,0)
 S DDD=0 F  S DDD=$O(ARRAY(DDD)) Q:'DDD  S (UFILE(DDD),KREF(DDD))="" D GETFILES(DDD) K ARRAY(DDD)
"RTN","DDD",75,0)
 D CLEAN,ADD
"RTN","DDD",76,0)
 Q
"RTN","DDD",77,0)
 ;
"RTN","DDD",78,0)
PARTIAL1 ; entry point for a partial build 12/28/15 -lg
"RTN","DDD",79,0)
 N DDD,FLD,Z,I,L,F,PARTIAL,UFILE,KREF,STDT D DT^DICRW,NOW^%DTC S STDT=% ; 12/28/15 -lg
"RTN","DDD",80,0)
 S PARTIAL="" ; flag indicating this process is a "PARTIAL" update
"RTN","DDD",81,0)
 S DTCHK=$G(^DDD("MSC"))  ; date of last ^DDD run (full or partial)
"RTN","DDD",82,0)
 F DDD=1.99:0 S DDD=$O(^DIC(DDD)) Q:'DDD  I $G(^DIC(DDD,"%MSC"))>DTCHK S (UFILE(DDD),KREF(DDD))="" D GETFILES(DDD)
"RTN","DDD",83,0)
 Q:'$D(UFILE)
"RTN","DDD",84,0)
 D CLEAN,ADD
"RTN","DDD",85,0)
 D NOW^%DTC S ^DDD("MSC")=%  ; stamp last run date
"RTN","DDD",86,0)
 Q
"RTN","DDD",87,0)
 ;
"RTN","DDD",88,0)
PARTIAL2 ; Entry point for a partial build using ^DD(FILE,FIELD,"DT") 12/29/2015 BI
"RTN","DDD",89,0)
 N FILE,FIELD,DTCHK,CHGDATE,TOP
"RTN","DDD",90,0)
 S DTCHK=$P($G(^DDD("MSC")),".",1)  ; date of last ^DDD run (FULL, PARTIAL1, or PARTIAL2)
"RTN","DDD",91,0)
 S FILE=$O(^DD(2),-1)
"RTN","DDD",92,0)
 F  S FILE=$O(^DD(FILE)) Q:'FILE  D
"RTN","DDD",93,0)
 . S FIELD=0
"RTN","DDD",94,0)
 . F  S FIELD=$O(^DD(FILE,FIELD)) Q:'FIELD  D
"RTN","DDD",95,0)
 .. S CHGDATE=$G(^DD(FILE,FIELD,"DT"))
"RTN","DDD",96,0)
 .. I (CHGDATE>DTCHK)!(CHGDATE=DTCHK) D
"RTN","DDD",97,0)
 ... S TOP=FILE
"RTN","DDD",98,0)
 ... I '$D(^DIC(TOP,0)) F  S TOP=$G(^DD(TOP,0,"UP")) Q:TOP=""  Q:$D(^DIC(TOP,0))
"RTN","DDD",99,0)
 ... S:TOP ARRAY(TOP)=""
"RTN","DDD",100,0)
 D FILELIST(.ARRAY)
"RTN","DDD",101,0)
 D NOW^%DTC S ^DDD("MSC")=%  ; stamp last run date
"RTN","DDD",102,0)
 Q
"RTN","DDD",103,0)
 ;
"RTN","DDD",104,0)
GETFILES(FILE) ; get the sub-files for the parent file during a PARTIAL update
"RTN","DDD",105,0)
F1 ; 12/28/15 -lg
"RTN","DDD",106,0)
 F FLD=0:0 S FLD=$O(^DD(FILE,FLD)) Q:'FLD  S Z=$G(^(FLD,0)),%=$P(Z,U,2) I % Q:'$D(^DD(+%,.01,0))  S:$P(^(0),U,2)'["W" (KREF(+%),FILE(+%))=""
"RTN","DDD",107,0)
 I $D(FILE)>9  S FILE=$O(FILE(0)) K FILE(FILE) G F1
"RTN","DDD",108,0)
 Q
"RTN","DDD",109,0)
 ;
"RTN","DDD",110,0)
XREF ; cross-references individual field and update the ^DDD(0) with record ien and count during PARTIAL update
"RTN","DDD",111,0)
 ; 12/28/15 -lg
"RTN","DDD",112,0)
 N DIK,DA S DA=I,DIK="^DDD(" D IX1^DIK
"RTN","DDD",113,0)
 S $P(^DDD(0),U,3)=I,$P(^(0),U,4)=$P(^DDD(0),U,4)+1
"RTN","DDD",114,0)
 Q
"RTN","DDD",115,0)
 ;
"RTN","DDD",116,0)
ADD ; add records back to MDD during a PARTIAL update
"RTN","DDD",117,0)
 ; 12/28/15 -lg
"RTN","DDD",118,0)
 N FILE S I=$O(^DDD("A"),-1)
"RTN","DDD",119,0)
 S DDD=0 F  S DDD=$O(UFILE(DDD)) Q:'DDD  D BLD
"RTN","DDD",120,0)
 Q
"RTN","DDD",121,0)
CLEAN ; remove existing record entries and cross-references during a PARTIAL update
"RTN","DDD",122,0)
 ; new records will be added for the changed file at the end of the MDD.
"RTN","DDD",123,0)
 ; 12/28/15 -lg
"RTN","DDD",124,0)
 N NODE,DIK,DA
"RTN","DDD",125,0)
 S DDD=0,DIK="^DDD("
"RTN","DDD",126,0)
 F  S DDD=$O(KREF(DDD)) Q:'DDD  S NODE="^DDD(""AFF"",DDD)" F  S NODE=$Q(@NODE) Q:$QS(NODE,2)'=DDD  S DA=$QS(NODE,4) D ^DIK
"RTN","DDD",127,0)
 Q
"RTN","DDD",128,0)
 ;
"RTN","DDD",129,0)
CAMCASE(INTEXT)  ; lg 12/08/15
"RTN","DDD",130,0)
 N X,OUTTEXT
"RTN","DDD",131,0)
 S INTEXT=$TR(INTEXT,".","")
"RTN","DDD",132,0)
 S INTEXT=$TR(INTEXT,"/\-#?$()&[]","           ")
"RTN","DDD",133,0)
 S OUTTEXT=""
"RTN","DDD",134,0)
 F X=1:1:$L(INTEXT,"_") D
"RTN","DDD",135,0)
 . S:X'=$L(INTEXT,"_") OUTTEXT=OUTTEXT_$$CONVERT($P(INTEXT,"_",X))_"."
"RTN","DDD",136,0)
 . S:X=$L(INTEXT,"_") OUTTEXT=OUTTEXT_$$CONVERT($P(INTEXT,"_",X))
"RTN","DDD",137,0)
 Q OUTTEXT
"RTN","DDD",138,0)
 ;
"RTN","DDD",139,0)
CONVERT(INTEXT) ; lg 12/08/15
"RTN","DDD",140,0)
 N X,OUTTEXT
"RTN","DDD",141,0)
 S INTEXT=$$TRIM^XLFSTR(INTEXT)
"RTN","DDD",142,0)
 S INTEXT=$$LOW^XLFSTR(INTEXT)
"RTN","DDD",143,0)
 S OUTTEXT=""
"RTN","DDD",144,0)
 F X=1:1:$L(INTEXT," ") D
"RTN","DDD",145,0)
 . I X=1,$P(INTEXT," ",X)'="" S OUTTEXT=OUTTEXT_$P(INTEXT," ",X)
"RTN","DDD",146,0)
 . I X'=1,$P(INTEXT," ",X)'="" S OUTTEXT=OUTTEXT_$$UP^XLFSTR($E($P(INTEXT," ",X),1))_$E($P(INTEXT," ",X),2,999)
"RTN","DDD",147,0)
 Q OUTTEXT
"RTN","DDGFU")
0^49^B19558122^B30665174
"RTN","DDGFU",1,0)
DDGFU ;SFISC/MKO - CALLED FROM THE FORMS ;25DEC2015
"RTN","DDGFU",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DDGFU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGFU",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDGFU",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDGFU",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDGFU",7,0)
 ;
"RTN","DDGFU",8,0)
 ;
"RTN","DDGFU",9,0)
VAL1 ;Data validation code
"RTN","DDGFU",10,0)
 ;Form: DDS FIELD ADD
"RTN","DDGFU",11,0)
 I $$GET^DDSVALF("BLOCK","DDGF FIELD ADD")]"",$$GET^DDSVALF("FIELD ORDER","DDGF FIELD ADD")]"",$$GET^DDSVALF("FIELD TYPE","DDGF FIELD ADD")]"" Q
"RTN","DDGFU",12,0)
 ;
"RTN","DDGFU",13,0)
 S DDGFT(1)=$C(7)_"Unable to save values."
"RTN","DDGFU",14,0)
 S DDGFT(2)="All values must be filled in order to add a new field."
"RTN","DDGFU",15,0)
 D HLP^DDSUTL(.DDGFT)
"RTN","DDGFU",16,0)
 S DDSERROR=1
"RTN","DDGFU",17,0)
 K DDGFT
"RTN","DDGFU",18,0)
 Q
"RTN","DDGFU",19,0)
 ;
"RTN","DDGFU",20,0)
DDCAP ;Caption, Post action on change
"RTN","DDGFU",21,0)
 ;Form:  DDGF FIELD DD
"RTN","DDGFU",22,0)
 N DDGFOPG
"RTN","DDGFU",23,0)
 S DDGFOPG=$$OTHPG
"RTN","DDGFU",24,0)
 D:DDSOLD="!M" PUT^DDSVAL(.4044,.DA,1.1,"")
"RTN","DDGFU",25,0)
 ;
"RTN","DDGFU",26,0)
 D:X="" CAPNULL(DDGFOPG)
"RTN","DDGFU",27,0)
 D:X]"" UPDDC(DDGFOPG)
"RTN","DDGFU",28,0)
 Q
"RTN","DDGFU",29,0)
 ;
"RTN","DDGFU",30,0)
OTHPG() ;Return Other Params page#
"RTN","DDGFU",31,0)
 N FLD,SUB,OPG
"RTN","DDGFU",32,0)
 S FLD=$$GET^DDSVAL(.4044,.DA,4)
"RTN","DDGFU",33,0)
 I FLD D
"RTN","DDGFU",34,0)
 . S OPG=11
"RTN","DDGFU",35,0)
 . S SUB=+$P($G(^DD(DDGFDD,FLD,0)),U,2)
"RTN","DDGFU",36,0)
 . S:SUB OPG=$S(SUB_$P($G(^DD(SUB,.01,0)),U,2)'["W":21,1:31)
"RTN","DDGFU",37,0)
 Q $G(OPG)
"RTN","DDGFU",38,0)
 ;
"RTN","DDGFU",39,0)
FOCAP ;Caption, Post action on change
"RTN","DDGFU",40,0)
 ;Form:  DDGF FIELD FORM ONLY
"RTN","DDGFU",41,0)
 D:X'="!M" PUT^DDSVAL(.4044,.DA,1.1,"")
"RTN","DDGFU",42,0)
 ;
"RTN","DDGFU",43,0)
 D:X="" CAPNULL(21)
"RTN","DDGFU",44,0)
 D:X]"" UPDDC(21)
"RTN","DDGFU",45,0)
 Q
"RTN","DDGFU",46,0)
 ;
"RTN","DDGFU",47,0)
COMPCAP ;Caption, Post action on change
"RTN","DDGFU",48,0)
 ;Form:  DDGF FIELD COMPUTED
"RTN","DDGFU",49,0)
 D:X'="!M" PUT^DDSVAL(.4044,.DA,1.1,"")
"RTN","DDGFU",50,0)
 ;
"RTN","DDGFU",51,0)
 D:X="" CAPNULL(11)
"RTN","DDGFU",52,0)
 D:X]"" UPDDC(11)
"RTN","DDGFU",53,0)
 Q
"RTN","DDGFU",54,0)
 ;
"RTN","DDGFU",55,0)
CAPNULL(OPG) ;Caption changed to null
"RTN","DDGFU",56,0)
 N DC,SC
"RTN","DDGFU",57,0)
 ;
"RTN","DDGFU",58,0)
 ;Clear suppress colon
"RTN","DDGFU",59,0)
 S SC=$$GET^DDSVALF("SUPPRESS COLON AFTER CAPTION?")
"RTN","DDGFU",60,0)
 D PUT^DDSVALF("SUPPRESS COLON AFTER CAPTION?","","","","I")
"RTN","DDGFU",61,0)
 Q:'$G(OPG)
"RTN","DDGFU",62,0)
 ;
"RTN","DDGFU",63,0)
 ;Clear caption coords
"RTN","DDGFU",64,0)
 D PUT^DDSVALF("CAPTION COORDINATE",1,OPG,"")
"RTN","DDGFU",65,0)
 ;
"RTN","DDGFU",66,0)
 ;Move data to the left
"RTN","DDGFU",67,0)
 S DC=$$GET^DDSVALF("DATA COORDINATE",1,OPG)
"RTN","DDGFU",68,0)
 S $P(DC,",",2)=$P(DC,",",2)-$L(DDSOLD)-1-'SC
"RTN","DDGFU",69,0)
 S:$P(DC,",",2)<1 $P(DC,",",2)=1
"RTN","DDGFU",70,0)
 D PUT^DDSVALF("DATA COORDINATE",1,OPG,DC,"I")
"RTN","DDGFU",71,0)
 Q
"RTN","DDGFU",72,0)
 ;
"RTN","DDGFU",73,0)
UPDDC(OPG) ;Update data coords
"RTN","DDGFU",74,0)
 N DC,COL
"RTN","DDGFU",75,0)
 S DC=$$GET^DDSVALF("DATA COORDINATE",1,OPG)
"RTN","DDGFU",76,0)
 S COL=$P(DC,",",2),COL=COL+$L(X)-$L(DDSOLD)
"RTN","DDGFU",77,0)
 I DDSOLD="" D
"RTN","DDGFU",78,0)
 . D PUT^DDSVALF("CAPTION COORDINATE",1,OPG,DC,"I")
"RTN","DDGFU",79,0)
 . S COL=COL+2
"RTN","DDGFU",80,0)
 S:COL<1 COL=1
"RTN","DDGFU",81,0)
 S $P(DC,",",2)=COL
"RTN","DDGFU",82,0)
 D PUT^DDSVALF("DATA COORDINATE",1,OPG,DC)
"RTN","DDGFU",83,0)
 Q
"RTN","DDGFU",84,0)
 ;
"RTN","DDGFU",85,0)
POSTCH1 ;Field, Post Action On Change
"RTN","DDGFU",86,0)
 ;Form: DDGF FIELD DD
"RTN","DDGFU",87,0)
 ;
"RTN","DDGFU",88,0)
 ;Reset (if caption not !M): caption, caption and data coords,
"RTN","DDGFU",89,0)
 ; data length
"RTN","DDGFU",90,0)
 ;Input:
"RTN","DDGFU",91,0)
 ; DDGFPG = Page #
"RTN","DDGFU",92,0)
 ; DA(1)  = Block #
"RTN","DDGFU",93,0)
 ; DA     = Field order
"RTN","DDGFU",94,0)
 ; X      = Fld #
"RTN","DDGFU",95,0)
 ; DDSOLD = Prev fld #
"RTN","DDGFU",96,0)
 ;
"RTN","DDGFU",97,0)
 Q:X=""
"RTN","DDGFU",98,0)
 N FILE,FLD,DD,C,C0,CC,DC,SC,L,OPG,OPG0,PLRC
"RTN","DDGFU",99,0)
 ;
"RTN","DDGFU",100,0)
 S FLD=X
"RTN","DDGFU",101,0)
 S FILE=+$P(^DIST(.404,DA(1),0),U,2) Q:'FILE
"RTN","DDGFU",102,0)
 S DD=$G(^DD(FILE,FLD,0)) Q:DD?."^"
"RTN","DDGFU",103,0)
 S OPG=$$OTHPG
"RTN","DDGFU",104,0)
 ;
"RTN","DDGFU",105,0)
 S OPG0=11
"RTN","DDGFU",106,0)
 I $G(DDSOLD)]"" D
"RTN","DDGFU",107,0)
 . N SUB
"RTN","DDGFU",108,0)
 . S SUB=+$P($G(^DD(FILE,DDSOLD,0)),U,2)
"RTN","DDGFU",109,0)
 . S:SUB OPG0=$S(SUB_$P($G(^DD(SUB,.01,0)),U,2)'["W":21,1:31)
"RTN","DDGFU",110,0)
 ;
"RTN","DDGFU",111,0)
 S (C,C0)=$$GET^DDSVALF("CAPTION",1,1)
"RTN","DDGFU",112,0)
 S:C]"" CC=$$GET^DDSVALF("CAPTION COORDINATE",1,OPG0)
"RTN","DDGFU",113,0)
 S DC=$$GET^DDSVALF("DATA COORDINATE",1,OPG0)
"RTN","DDGFU",114,0)
 ;
"RTN","DDGFU",115,0)
 I OPG'=OPG0 D
"RTN","DDGFU",116,0)
 . D:C]"" PUT^DDSVALF("CAPTION COORDINATE",1,OPG,CC)
"RTN","DDGFU",117,0)
 . D:DC]"" PUT^DDSVALF("DATA COORDINATE",1,OPG,DC)
"RTN","DDGFU",118,0)
 . D DESTROY^DDSUTL(OPG0)
"RTN","DDGFU",119,0)
 . 
"RTN","DDGFU",120,0)
 ;
"RTN","DDGFU",121,0)
 I $D(DDGFREF),$D(DDGFPG) S PLRC=$P($G(@DDGFREF@("F",DDGFPG)),U,4)
"RTN","DDGFU",122,0)
 S PLRC=$S($G(PLRC)]"":PLRC-1,1:IOM-2)-$P($G(@DDGFREF@("F",DDGFPG,DA(1))),U,2)
"RTN","DDGFU",123,0)
L S L=$$GET1^DID(FILE,FLD,,"FIELD LENGTH")  S:'L L=1 ;S L=$$LENGTH(FILE,FLD)
"RTN","DDGFU",124,0)
 ;
"RTN","DDGFU",125,0)
 I C'="!M",$P(DD,U)]"" D
"RTN","DDGFU",126,0)
 . S C=$P(DD,U)
"RTN","DDGFU",127,0)
 . I $P(DD,U,2),$P($G(^DD(+$P(DD,U,2),.01,0)),U,2)'["W" S C="Select "_C
"RTN","DDGFU",128,0)
 . D PUT^DDSVALF("CAPTION",1,1,C)
"RTN","DDGFU",129,0)
 . ;
"RTN","DDGFU",130,0)
 . I C0="" D
"RTN","DDGFU",131,0)
 .. S CC=DC
"RTN","DDGFU",132,0)
 .. S $P(DC,",",2)=$P(DC,",",2)+2
"RTN","DDGFU",133,0)
 .. D PUT^DDSVALF("CAPTION COORDINATE",1,OPG,CC)
"RTN","DDGFU",134,0)
 . E  Q:$P(CC,",")'=$P(DC,",")
"RTN","DDGFU",135,0)
 . ;
"RTN","DDGFU",136,0)
 . S $P(DC,",",2)=$P(DC,",",2)+$L(C)-$L(C0)
"RTN","DDGFU",137,0)
 . S:$P(DC,",",2)<1 $P(DC,",",2)=1
"RTN","DDGFU",138,0)
 . D PUT^DDSVALF("DATA COORDINATE",1,OPG,DC)
"RTN","DDGFU",139,0)
 ;
"RTN","DDGFU",140,0)
 I C0'="!M",$P(DC,",",2)-2+L>PLRC S L=PLRC-$P(DC,",",2)+2
"RTN","DDGFU",141,0)
 D PUT^DDSVALF("DATA LENGTH",1,OPG,L)
"RTN","DDGFU",142,0)
 Q
"RTN","DDGFU",143,0)
 ;
"RTN","DDGFU",144,0)
HBVAL ;Validate hdr blk
"RTN","DDGFU",145,0)
 Q:X=""  Q:'$O(@(DIE_DA_",40,""B"",X,"""")"))
"RTN","DDGFU",146,0)
 S DDSERROR=1
"RTN","DDGFU",147,0)
 D HLP^DDSUTL($C(7)_DDSEXT_" already exists on this page.")
"RTN","DDGFU",148,0)
 Q
"RTN","DDGFU",149,0)
 ;
"RTN","DDGFU",150,0)
LENGTH(DIFILE,DIFLD) ;Find max field length   -NO LONGER USED!
"RTN","DDGFU",151,0)
 ;...
"RTN","DDS02")
0^17^B17251992^B17073915
"RTN","DDS02",1,0)
DDS02 ;SFISC/MKO - OVERFLOW FROM ^DDS01 ;24JUL2015
"RTN","DDS02",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DDS02",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDS02",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDS02",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDS02",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDS02",7,0)
REFRESH(DDSPG) ;Refreshes the setup for page
"RTN","DDS02",8,0)
 N B,D,I,DIE,DDSDA,DDP
"RTN","DDS02",9,0)
 F B=0:0 S B=$O(@DDSREFT@(DDSPG,B)) Q:'B  D
"RTN","DDS02",10,0)
 .I '$D(DDSDA) S DDSDA=^(B),DIE=^(B,DDSDA,"GL"),DDP=$P(@DDSREFS@(DDSPG,B),U,3) ;GET THE ORIGINAL PAGE DATA
"RTN","DDS02",11,0)
 .S D="" F  S D=$O(@DDSREFT@(DDSPG,B,D)) Q:D=""  I +$G(^(D))=1 S $P(^(D),U)=0 ;REMEMBER TO RELOAD BLOCKS ON THIS PAGE!
"RTN","DDS02",12,0)
 .S I="" F  S I=$O(@DDSREFT@("F0",I)) Q:I=""  F  S D=$O(@DDSREFT@("F0",I,D)) Q:D=""  I $P(D,",",2)=B,$G(^(D,"F"))=3 K @DDSREFT@("F0",I,D) ;KILL OLD FORM-ONLY VALUE
"RTN","DDS02",13,0)
 I $D(D) D EN^DDS1(DDSPG)
"RTN","DDS02",14,0)
 Q
"RTN","DDS02",15,0)
 ;
"RTN","DDS02",16,0)
 ;
"RTN","DDS02",17,0)
 ;
"RTN","DDS02",18,0)
SV ;Save
"RTN","DDS02",19,0)
 S DDACT="N"
"RTN","DDS02",20,0)
 I $G(DDSDN)=1,DDO D ERR3^DDS3 Q
"RTN","DDS02",21,0)
 I DDSSC'>1,'$P(DDSSC(DDSSC),U,4) D S^DDS3 Q  ;INCLUDED '$G(DDSSEL)
"RTN","DDS02",22,0)
 D MSG^DDSMSG($$EZBLD^DIALOG(3093),1) ;**CANNOT SAVE
"RTN","DDS02",23,0)
 Q
"RTN","DDS02",24,0)
 ;
"RTN","DDS02",25,0)
EXT ;Process external form
"RTN","DDS02",26,0)
 I '$P($G(DDSU("DD")),U,2),$P($G(DDSU("DD")),U,2)["P" D PT
"RTN","DDS02",27,0)
 I $P($G(DDSO(0)),U,3)=2,$E($P($G(DDSO(20)),U))="P" D PTFO
"RTN","DDS02",28,0)
 ;
"RTN","DDS02",29,0)
 S:DDSOLD=Y DIR0N=1
"RTN","DDS02",30,0)
 S DDSX=X,DDSY=Y
"RTN","DDS02",31,0)
 I Y]"",$P($G(DDSU("DD")),U,2)["O"!($P($G(DDSU("DD")),U,2)["t") X $$OUTPUT^DIETLIBF(DDP,DDSFLD) S Y(0)=Y ;OUTPUT TRANSFORM
"RTN","DDS02",32,0)
 ;
"RTN","DDS02",33,0)
 S DDSEXT=$G(Y(0,0),$G(Y(0),Y)),X=DDSY
"RTN","DDS02",34,0)
 ;
"RTN","DDS02",35,0)
 I $D(DDSO(14)) K DDSERROR X DDSO(14) I $D(DDSERROR)#2 D  Q
"RTN","DDS02",36,0)
 . K DDSERROR,DDSY S DIR0("L")=DDSEXT,DDSCHKQ=1
"RTN","DDS02",37,0)
 ;
"RTN","DDS02",38,0)
 I DDSY="",DDSFLD'=.01 D  Q:'$D(DDSY)
"RTN","DDS02",39,0)
 . N DDSREQ,DDSKEY
"RTN","DDS02",40,0)
 . S DDSREQ=$P($G(DDSU("A")),U)
"RTN","DDS02",41,0)
 . S:DDSREQ="" DDSREQ=$P($G(DDSO(4)),U)
"RTN","DDS02",42,0)
 . S:DDSREQ="" DDSREQ=$P($G(DDSU("DD")),U,2)["R"
"RTN","DDS02",43,0)
 . S DDSKEY=$D(^DD("KEY","F",DDP,DDSFLD))>0
"RTN","DDS02",44,0)
 . I 'DDSREQ,'DDSKEY Q
"RTN","DDS02",45,0)
 . K DDSY
"RTN","DDS02",46,0)
 . S DDSCHKQ=1,DIR0("L")=DDSEXT
"RTN","DDS02",47,0)
 . D MSG^DDSMSG($$EZBLD^DIALOG($S(DDSKEY:3092.2,1:3092.1)),1) ;'REQUIRED KEY FIELD'
"RTN","DDS02",48,0)
 ;
"RTN","DDS02",49,0)
 S DY=$P(DIR0,U),DX=$P(DIR0,U,2)
"RTN","DDS02",50,0)
REPNT I DDSEXT'=DDSX!$G(DDSREPNT) D  K DDSREPNT ;WRITE OUT NEW VALUE, IF IT DIFFERS FROM WHAT WAS INPUT
"RTN","DDS02",51,0)
 . X IOXY
"RTN","DDS02",52,0)
 . S DDSX=$E(DDSEXT,1,$P(DIR0,U,3))
"RTN","DDS02",53,0)
 . I '$P(DIR0,U,6) S DDSX=DDSX_$J("",$P(DIR0,U,3)-$L(DDSEXT))
"RTN","DDS02",54,0)
 . E  S DDSX=$J("",$P(DIR0,U,3)-$L(DDSEXT))_DDSX
"RTN","DDS02",55,0)
 . W $P(DDGLVID,DDGLDEL)_DDSX_$P(DDGLVID,DDGLDEL,10)
"RTN","DDS02",56,0)
 ;
"RTN","DDS02",57,0)
CHECKEY I $G(DDSU("K")),DDSY]""!(DDSFLD'=.01) D  Q:'$D(DDSY)  ;CHECK KEY
"RTN","DDS02",58,0)
 . N DDSFXR,DDSUI,DDSUNIQ,DDSVSV,DIIENS
"RTN","DDS02",59,0)
 . D LOADXREF^DIKC1(DDP,"","",DDSU("K"),$NA(@DDSREFT@("F"))_"_","DDSFXR")
"RTN","DDS02",60,0)
 . S:$D(@DDSREFT@("F"_DDP,DDSDA,DDSFLD,"D"))#2 DDSVSV=^("D") S ^("D")=DDSY
"RTN","DDS02",61,0)
 . S DDSUNIQ=1,DDSUI=0
"RTN","DDS02",62,0)
 . F  S DDSUI=$O(DDSFXR(DDP,DDSUI)) Q:'DDSUI  D  Q:'DDSUNIQ
"RTN","DDS02",63,0)
 .. S DIIENS=DDSDA
"RTN","DDS02",64,0)
 .. D SETXARR^DIKC(DDP,DDSUI,"DDSFXR","","D")
"RTN","DDS02",65,0)
 .. S DDSUNIQ=$$UNIQUE^DIKK2(DDP,DDSUI,.X,.DA,"DDSFXR")
"RTN","DDS02",66,0)
 . I 'DDSUNIQ D
"RTN","DDS02",67,0)
 .. K DDSY
"RTN","DDS02",68,0)
 .. S DDSCHKQ=1,DIR0("L")=DDSEXT
"RTN","DDS02",69,0)
 .. D MSG^DDSMSG($$EZBLD^DIALOG(3094),1) ;"Another Entry already exists with this KEY value."
"RTN","DDS02",70,0)
 .. K @DDSREFT@("F"_DDP,DDSDA,DDSFLD,"D") S:$D(DDSVSV)#2 ^("D")=DDSVSV
"RTN","DDS02",71,0)
 ;
"RTN","DDS02",72,0)
 D:$G(DDSDA)!'$D(DDSREP)
"RTN","DDS02",73,0)
 . S:$D(Y(0)) @DDSREFT@("F"_DDP,DDSDA,DDSFLD,"X")=DDSEXT
"RTN","DDS02",74,0)
 . S @DDSREFT@("F"_DDP,DDSDA,DDSFLD,"D")=DDSY I DDSY="",$D(DDSU("X")) S ^("X")="" ;CHANGE THE DATA!
"RTN","DDS02",75,0)
 K DDSY
"RTN","DDS02",76,0)
 Q
"RTN","DDS02",77,0)
 ;
"RTN","DDS02",78,0)
DEC(FILE,FIELD,DEC) ;NOT USED (??)
"RTN","DDS02",79,0)
 S DEC="S X=$G(@DDSREFT@(""F"_FILE_""",DIIENS,"_FIELD_",""D""),"_$E(DEC,5,999)_")"
"RTN","DDS02",80,0)
 Q
"RTN","DDS02",81,0)
 ;
"RTN","DDS02",82,0)
PT ;Modify Y for pointer type fields
"RTN","DDS02",83,0)
 I $P(Y,U,3)=1 D
"RTN","DDS02",84,0)
 . S ^("ADD")=$G(@DDSREFT@("ADD"))+1,^("ADD",^("ADD"))=+Y_","_U_$P(DDSU("DD"),U,3)
"RTN","DDS02",85,0)
 S Y=$P(Y,U)
"RTN","DDS02",86,0)
 Q
"RTN","DDS02",87,0)
 ;
"RTN","DDS02",88,0)
PTFO ;Modify Y for pointer type form only fields
"RTN","DDS02",89,0)
 I $P(Y,U,3)=1 D
"RTN","DDS02",90,0)
 . N R,I S R=""
"RTN","DDS02",91,0)
 . F I=1:1 Q:$D(DA(I))[0  S R=R_DA(I)_","
"RTN","DDS02",92,0)
 . S ^("ADD")=$G(@DDSREFT@("ADD"))+1,@DDSREFT@("ADD",@DDSREFT@("ADD"))=+Y_","_R_$S($P(DDSO(20),U,3):^DIC(+$P(DDSO(20),U,3),0,"GL"),1:U_$P($P(DDSO(20),U,3),":"))
"RTN","DDS02",93,0)
 S Y=$S(Y=-1:"",1:$P(Y,U))
"RTN","DDS02",94,0)
 Q
"RTN","DDS11")
0^24^B30783133^B29500378
"RTN","DDS11",1,0)
DDS11 ;SFISC/MLH,MKO - LOAD DATA TO BE SHOWN ON SCREEN ;01MAR2016
"RTN","DDS11",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DDS11",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDS11",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDS11",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDS11",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDS11",7,0)
 ;Input variables:
"RTN","DDS11",8,0)
 ;  DDSBK   = Block #
"RTN","DDS11",9,0)
 ;  DDSPG   = Page # (needed for form-only fields)
"RTN","DDS11",10,0)
 ;  DDSREFT = Temporary global location
"RTN","DDS11",11,0)
 ;  DDP     = File number of block
"RTN","DDS11",12,0)
 ;  DIE     = Global root of block
"RTN","DDS11",13,0)
 ;  DDSDA   = DA,DA(1),...
"RTN","DDS11",14,0)
 ;  DDSNFO  = Flag means don't reload form only fields
"RTN","DDS11",15,0)
 ;
"RTN","DDS11",16,0)
BEGIN N X,Y
"RTN","DDS11",17,0)
 S DDS1REFD=$NA(@DDSREFT@("F"_DDP,DDSDA))
"RTN","DDS11",18,0)
 ;
"RTN","DDS11",19,0)
 S DDS1FO=0
"RTN","DDS11",20,0)
 F  S DDS1FO=$O(^DIST(.404,DDSBK,40,DDS1FO)) Q:'DDS1FO  D LD
"RTN","DDS11",21,0)
 ;
"RTN","DDS11",22,0)
 I DDP,DDSDA S @DDS1REFD@("GL")=DIE
"RTN","DDS11",23,0)
 ;
"RTN","DDS11",24,0)
 K DDS1REFD,DDS1FLD,DDS1FO,DDS1KEY,DDS1LN,DDS1ND,DDS1PC,DDS1UI,DDS1DV
"RTN","DDS11",25,0)
 K DDS1D1,DDS1D2,DDS1D3
"RTN","DDS11",26,0)
 Q
"RTN","DDS11",27,0)
 ;
"RTN","DDS11",28,0)
 ;
"RTN","DDS11",29,0)
 ;
"RTN","DDS11",30,0)
 ;
"RTN","DDS11",31,0)
EN(DDSBK,DDSNFO) ;Main Entry Point for VEN version
"RTN","DDS11",32,0)
 G BEGIN
"RTN","DDS11",33,0)
 ;
"RTN","DDS11",34,0)
 ;
"RTN","DDS11",35,0)
LD ;Load data for a field
"RTN","DDS11",36,0)
 ;
"RTN","DDS11",37,0)
 ;Get form only fields
"RTN","DDS11",38,0)
 I $P($G(^DIST(.404,DDSBK,40,DDS1FO,0)),U,3)=2,$P($G(^(20)),U)]"" D  Q
"RTN","DDS11",39,0)
 . Q:$G(DDSNFO)
"RTN","DDS11",40,0)
 . N DDP
"RTN","DDS11",41,0)
 . S DDP=0,DDS1FLD=DDS1FO_","_DDSBK
"RTN","DDS11",42,0)
 . Q:"^1^3^"[(U_$G(@DDSREFT@("F0",DDSDA,DDS1FLD,"F"))_U)
"RTN","DDS11",43,0)
 . S Y=""
"RTN","DDS11",44,0)
 . I $D(@DDSREFT@("F0",DDSDA,DDS1FLD,"F"))[0,$G(^DIST(.404,DDSBK,40,DDS1FO,3))]"" D DEF(^(3),$G(^(3.1)))
"RTN","DDS11",45,0)
 . S (@DDSREFT@("F0",DDSDA,DDS1FLD,"D"),^("O"))=Y
"RTN","DDS11",46,0)
 ;
"RTN","DDS11",47,0)
 ;Get DD fields
"RTN","DDS11",48,0)
 S DDS1FLD=$G(^DIST(.404,DDSBK,40,DDS1FO,1)) Q:DDS1FLD?."^"
"RTN","DDS11",49,0)
 Q:"^1^3^"[(U_$G(@DDS1REFD@(DDS1FLD,"F"))_U)
"RTN","DDS11",50,0)
 ;
"RTN","DDS11",51,0)
 S DDS1LN=$G(^DD(DDP,DDS1FLD,0)) Q:DDS1LN?."^"
"RTN","DDS11",52,0)
 S DDS1PC=$P(DDS1LN,U,4),DDS1ND=$P(DDS1PC,";"),DDS1PC=$P(DDS1PC,";",2)
"RTN","DDS11",53,0)
 S DDS1DV=$P(DDS1LN,U,2),X=$P(DDS1LN,U,3)
"RTN","DDS11",54,0)
 ;
"RTN","DDS11",55,0)
 D @($S(DDS1FLD=.001:"L3",DDS1PC=0:"L2",1:"L1"))
"RTN","DDS11",56,0)
 ;
"RTN","DDS11",57,0)
 I DDS1DV["O"!(DDS1DV["P")!(DDS1DV["V")!(DDS1DV["D")!(DDS1DV["S")!(DDS1DV["t") D
"RTN","DDS11",58,0)
 . Q:$D(@DDS1REFD@(DDS1FLD,"X"))
"RTN","DDS11",59,0)
 . D:Y]"" XFORM
"RTN","DDS11",60,0)
 . S @DDS1REFD@(DDS1FLD,"X")=Y
"RTN","DDS11",61,0)
 ;
"RTN","DDS11",62,0)
 I DDS1PC=0,DDS1DV,DDS1DV'["W",$D(@DDS1REFD@(DDS1FLD,"X"))[0 S ^("X")=Y
"RTN","DDS11",63,0)
 Q
"RTN","DDS11",64,0)
 ;
"RTN","DDS11",65,0)
L1 ;Get non-multiple field
"RTN","DDS11",66,0)
 S DDS1LN=$G(@(DIE_"DA,DDS1ND)"))
"RTN","DDS11",67,0)
 I $E(DDS1PC)'="E" S Y=$P(DDS1LN,U,DDS1PC)
"RTN","DDS11",68,0)
 E  S Y=$E(DDS1LN,+$E(DDS1PC,2,999),$P(DDS1PC,",",2)) S:Y?." " Y=""
"RTN","DDS11",69,0)
 ;
"RTN","DDS11",70,0)
 K @DDS1REFD@(DDS1FLD,"X")
"RTN","DDS11",71,0)
 I Y="",$D(@DDS1REFD@(DDS1FLD,"F"))[0,$D(^DIST(.404,DDSBK,40,DDS1FO,3))#2 D DEF(^(3),$G(^(3.1)))
"RTN","DDS11",72,0)
MUMPS I $G(DUZ(0))'="@",DDS1DV["K" S $P(@DDS1REFD@(DDS1FLD,"A"),U,4)=1,Y=$TR($J("",$L(Y))," ","*") ;**151
"RTN","DDS11",73,0)
 S @DDS1REFD@(DDS1FLD,"D")=Y
"RTN","DDS11",74,0)
 ;
"RTN","DDS11",75,0)
 ;Get key info
"RTN","DDS11",76,0)
 I '$D(@DDS1REFD@(DDS1FLD,"K")) D
"RTN","DDS11",77,0)
 . S DDS1KEY=0
"RTN","DDS11",78,0)
 . F  S DDS1KEY=$O(^DD("KEY","F",DDP,DDS1FLD,DDS1KEY)) Q:'DDS1KEY  D
"RTN","DDS11",79,0)
 .. S DDS1UI=$P(^DD("KEY",DDS1KEY,0),U,4) Q:'DDS1UI
"RTN","DDS11",80,0)
 .. Q:$P($G(^DD("IX",DDS1UI,0)),U,6)'="F"
"RTN","DDS11",81,0)
 .. S ^("K")=$G(@DDS1REFD@(DDS1FLD,"K"))_DDS1UI_U
"RTN","DDS11",82,0)
 Q
"RTN","DDS11",83,0)
 ;
"RTN","DDS11",84,0)
L2 ;Get multiple field
"RTN","DDS11",85,0)
 S DDS1SUB=+$P(DDS1LN,U,2) Q:$D(^DD(DDS1SUB,.01,0))[0
"RTN","DDS11",86,0)
 S DDS1DV=DDS1SUB_$P(^DD(DDS1SUB,.01,0),U,2),X=$P(^(0),U,3)
"RTN","DDS11",87,0)
 S DDS1DIC=DIE_DA_","""_DDS1ND_""","
"RTN","DDS11",88,0)
 ;
"RTN","DDS11",89,0)
 D:DDS1DV'["W"
"RTN","DDS11",90,0)
 . I $D(^DIST(.404,DDSBK,40,DDS1FO,3))#2 D  D L22
"RTN","DDS11",91,0)
 .. D DEF(^DIST(.404,DDSBK,40,DDS1FO,3),$G(^(3.1)),1)
"RTN","DDS11",92,0)
 .. S DDS1RN=$S($G(Y)="FIRST":$O(@(DDS1DIC_"0)")),$G(Y)="LAST":$O(@(DDS1DIC_""" "")"),-1),1:+$G(Y))
"RTN","DDS11",93,0)
 . E  I $D(DUZ)#2,$L(DDS1DIC)<29,$D(^DISV(DUZ,DDS1DIC))#2 S DDS1RN=^(DDS1DIC) D L22
"RTN","DDS11",94,0)
 . E  S DDS1RN=$S($D(@(DDS1DIC_"0)"))#2:$P(^(0),U,3),1:$O(^(0))) D L22
"RTN","DDS11",95,0)
 . E  S (Y,@DDS1REFD@(DDS1FLD,"D"))=""
"RTN","DDS11",96,0)
 ;
"RTN","DDS11",97,0)
 S @DDS1REFD@(DDS1FLD,"M")=$S(DDS1DV["W":0,1:1)_DDS1DIC_U_DDS1SUB
"RTN","DDS11",98,0)
 K DDS1DIC,DDS1RN,DDS1SUB
"RTN","DDS11",99,0)
 Q
"RTN","DDS11",100,0)
L22 ;
"RTN","DDS11",101,0)
 I DDS1RN>0,$D(@(DDS1DIC_+DDS1RN_",0)"))#2 S Y=$P(^(0),U),@DDS1REFD@(DDS1FLD,"D")=+DDS1RN
"RTN","DDS11",102,0)
 Q
"RTN","DDS11",103,0)
 ;
"RTN","DDS11",104,0)
DEF(DDS1LN3,DDS1LN31,DDS1MULT) ;Get default
"RTN","DDS11",105,0)
 N DDS1PTR,DDS1OT
"RTN","DDS11",106,0)
 Q:DDS1LN3=""
"RTN","DDS11",107,0)
 I DDS1LN3'="!M" S Y=DDS1LN3
"RTN","DDS11",108,0)
 E  I DDS1LN31'?."^" X DDS1LN31 S:$D(Y)[0 Y=""
"RTN","DDS11",109,0)
 Q:Y=""!$G(DDS1MULT)
"RTN","DDS11",110,0)
 ;
"RTN","DDS11",111,0)
 K DIR
"RTN","DDS11",112,0)
 I DDS1FLD["," D
"RTN","DDS11",113,0)
 . S DIR(0)=$P(^DIST(.404,DDSBK,40,DDS1FO,20),U)_$P(^(20),U,2,3)
"RTN","DDS11",114,0)
 . S:DIR(0)?1"DD".E DIR(0)=$P(DIR(0),U,2,999)
"RTN","DDS11",115,0)
 . I $E($P(DIR(0),U))="P" S DDS1PTR=1
"RTN","DDS11",116,0)
 E  D
"RTN","DDS11",117,0)
 . S DIR(0)=DDP_","_DDS1FLD
"RTN","DDS11",118,0)
 . S DDS1PTR=$P($G(^DD(DDP,DDS1FLD,0)),U,2)
"RTN","DDS11",119,0)
 . S DDS1OT=DDS1PTR["O",DDS1PTR=DDS1PTR["P"
"RTN","DDS11",120,0)
 S DIR("V")="",(X,DIR("B"))=Y
"RTN","DDS11",121,0)
 D ^DIR
"RTN","DDS11",122,0)
 ;
"RTN","DDS11",123,0)
 I DDER S Y=""
"RTN","DDS11",124,0)
 I Y]"" D
"RTN","DDS11",125,0)
 . I $G(DDS1PTR) S Y=$P(Y,U)
"RTN","DDS11",126,0)
 . S $P(@DDSREFT@("F"_DDP,DDSDA,DDS1FLD,"F"),U)=3
"RTN","DDS11",127,0)
 . I $G(DDS1PTR),$G(DDS1OT),$D(^DD(DDP,DDS1FLD,2))#2 K Y(0),Y(0,0)
"RTN","DDS11",128,0)
 . S:$D(Y(0)) @DDSREFT@("F"_DDP,DDSDA,DDS1FLD,"X")=$S($D(Y(0,0))#2:Y(0,0),1:Y(0))
"RTN","DDS11",129,0)
 . S DDSCHG=1
"RTN","DDS11",130,0)
 K DDER,DIR
"RTN","DDS11",131,0)
 Q
"RTN","DDS11",132,0)
 ;
"RTN","DDS11",133,0)
L3 ;Get number field
"RTN","DDS11",134,0)
 S (@DDS1REFD@(.001,"D"),Y)=DA
"RTN","DDS11",135,0)
 Q
"RTN","DDS11",136,0)
 ;
"RTN","DDS11",137,0)
EXT(DDP,DDS1FLD,Y) ;Return external form of Y
"RTN","DDS11",138,0)
 N DDS1DV,X
"RTN","DDS11",139,0)
 S DDS1DV=$P(^DD(DDP,DDS1FLD,0),U,2),X=$P(^(0),U,3)
"RTN","DDS11",140,0)
 I DDS1DV'["O",DDS1DV'["P",DDS1DV'["V",DDS1DV'["D",DDS1DV'["S",DDS1DV'["t" Q Y
"RTN","DDS11",141,0)
 I DDS1DV'["O",Y="" Q ""
"RTN","DDS11",142,0)
 D XFORM
"RTN","DDS11",143,0)
 Q Y
"RTN","DDS11",144,0)
 ;
"RTN","DDS11",145,0)
XFORM ;
"RTN","DDS11",146,0)
 N DDS1N
"RTN","DDS11",147,0)
 I DDS1DV["O"!(DDS1DV["t") X $$OUTPUT^DIETLIBF(DDP,+DDS1FLD) Q
"RTN","DDS11",148,0)
 I DDS1DV["P",@("$D(^"_X_"0))") S X=+$P(^(0),U,2) Q:'$D(^(Y,0))  S Y=$P(^(0),U),X=$P(^DD(X,.01,0),U,3),DDS1DV=$P(^(0),U,2) G XFORM
"RTN","DDS11",149,0)
 I DDS1DV["V",+$P(Y,"E"),$P(Y,";",2)["(",$D(@(U_$P(Y,";",2)_"0)"))#2 S X=+$P($P(^(0),U,2),"E") Q:$D(^(+$P(Y,"E"),0))[0  S Y=$P(^(0),U) I $D(^DD(+$P(X,"E"),.01,0))#2 S DDS1DV=$P(^(0),U,2),X=$P(^(0),U,3) G XFORM
"RTN","DDS11",150,0)
 I DDS1DV["D" X ^DD("DD")
"RTN","DDS11",151,0)
 I DDS1DV["S" D
"RTN","DDS11",152,0)
 .I +DDS1FLD,$G(^DD(DDP,+DDS1FLD,0))[X S Y=$$SET^DIQ(DDP,+DDS1FLD,Y) ;FOREIGN-LANGUAGE SET VALUE
"RTN","DDS11",153,0)
 .E  D PARSET^DIQ(X,.Y)
"RTN","DDS11",154,0)
 Q
"RTN","DI")
0^43^B1411380^B1429151
"RTN","DI",1,0)
DI ;SFISC/GFT - DIRECT ENTRY TO VA FILEMAN ;4JAN2016
"RTN","DI",2,0)
V ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DI",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DI",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DI",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DI",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DI",7,0)
 ;
"RTN","DI",8,0)
 G QQ:$G(^DI(.84,0))']""
"RTN","DI",9,0)
C G QQ:$G(^DI(.84,0))']"" K (DTIME,DUZ) G ^DII
"RTN","DI",10,0)
D G QQ:$G(^DI(.84,0))']"" G ^DII
"RTN","DI",11,0)
P G QQ:$G(^DI(.84,0))']"" K (DTIME,DUZ)
"RTN","DI",12,0)
Q G QQ:$G(^DI(.84,0))']"" S DUZ(0)="@" G ^DII
"RTN","DI",13,0)
VERSION ;
"RTN","DI",14,0)
 S VERSION=$P($T(V),";",3),X=$P($T(V),";",4)_" "_VERSION Q
"RTN","DI",15,0)
 ;
"RTN","DI",16,0)
QQ ;
"RTN","DI",17,0)
 W $C(7),!!,"You must run ^DINIT first."
"RTN","DI",18,0)
 Q
"RTN","DIALOGZ")
0^31^B33930495^B31531395
"RTN","DIALOGZ",1,0)
DIALOGZ ;O-OIFO/GFT - CREATE AND USE FOREIGN-LANGUAGE ADDITIONS TO THE DATA DICTIONARY ;1JUNE2016
"RTN","DIALOGZ",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIALOGZ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIALOGZ",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIALOGZ",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIALOGZ",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIALOGZ",7,0)
 ;GFT;**1004,1020,1042,1053**
"RTN","DIALOGZ",8,0)
 ;
"RTN","DIALOGZ",9,0)
 ;FOREIGN-LANGUAGE UTILITES
"RTN","DIALOGZ",10,0)
 ;
"RTN","DIALOGZ",11,0)
 D LANG($G(DUZ("LANG"),1)) Q
"RTN","DIALOGZ",12,0)
 ;
"RTN","DIALOGZ",13,0)
ENGLISH ;
"RTN","DIALOGZ",14,0)
 D LANG(1) Q
"RTN","DIALOGZ",15,0)
GERMAN ;
"RTN","DIALOGZ",16,0)
 D LANG(2) Q
"RTN","DIALOGZ",17,0)
SPANISH ;
"RTN","DIALOGZ",18,0)
 D LANG(3) Q
"RTN","DIALOGZ",19,0)
FINNISH ;
"RTN","DIALOGZ",20,0)
 D LANG(5) Q
"RTN","DIALOGZ",21,0)
PORTUG ;
"RTN","DIALOGZ",22,0)
 D LANG(7) Q
"RTN","DIALOGZ",23,0)
ARABIC ;
"RTN","DIALOGZ",24,0)
 D LANG(10) Q
"RTN","DIALOGZ",25,0)
 ;
"RTN","DIALOGZ",26,0)
LANG(LANG) ;
"RTN","DIALOGZ",27,0)
 N DIC,DIR,DIAL,Y,DLAYGO,DIF,DIE,DSTART,DIALFILE,DA,DR,DIALDD,DUOUT
"RTN","DIALOGZ",28,0)
 S U="^",LANG(0)=$G(^DI(.85,LANG,0))
"RTN","DIALOGZ",29,0)
 I LANG(0) S DIAL=$P(LANG(0),U,2) ;EITHER VERSION OF THE LANGUAGE FILE WILL GET DIAL=LANGUAGE NAME
"RTN","DIALOGZ",30,0)
 E  Q:'$$GOODLANG(.LANG)  S DIAL=$P(LANG(0),U)
"RTN","DIALOGZ",31,0)
 D D^DICRW Q:Y<1
"RTN","DIALOGZ",32,0)
FILE S (DIALFILE,DSTART)=+Y,DIF=$P(Y,U,2) I $D(^DIC(DIALFILE,"ALANG",LANG,0)) S DIR("B")=^(0)
"RTN","DIALOGZ",33,0)
 D DIR(60) I X="@"!'$D(DUOUT)  D
"RTN","DIALOGZ",34,0)
 .I $D(DIR("B")) K ^DIC("ALANG"_LANG,DIR("B"),DIALFILE)
"RTN","DIALOGZ",35,0)
 .I Y="" K ^DIC(DIALFILE,"ALANG",LANG) W "  <DELETED!>" Q
"RTN","DIALOGZ",36,0)
 .S ^DIC("ALANG"_LANG,Y,DIALFILE)="",^DIC(DIALFILE,"ALANG",LANG,0)=Y
"RTN","DIALOGZ",37,0)
 K DIR
"RTN","DIALOGZ",38,0)
FIELDS F  D  Q:'$D(DSTART)
"RTN","DIALOGZ",39,0)
 .S DIC="^DD(DIALFILE,",DIC(0)="AEQM"
"RTN","DIALOGZ",40,0)
 .D DICW(DIALFILE)
"RTN","DIALOGZ",41,0)
 .W !! D ^DIC I Y<0 D  Q
"RTN","DIALOGZ",42,0)
 ..I DIALFILE=DSTART K DSTART Q
"RTN","DIALOGZ",43,0)
 ..S DIALFILE=DSTART
"RTN","DIALOGZ",44,0)
 .K DIR,DUOUT S DIALDD=+Y,DIF=$P(Y,U,2)
"RTN","DIALOGZ",45,0)
 .I $D(^DD(DIALFILE,DIALDD,.008,LANG,0)) S DIR("B")=^(0)
"RTN","DIALOGZ",46,0)
 .D DIR(60) K DIR I X="@"!'$D(DUOUT) D
"RTN","DIALOGZ",47,0)
 ..S ^DD(DIALFILE,DIALDD,.008,LANG,0)=Y
"RTN","DIALOGZ",48,0)
 ..I Y="" K ^(0) W "  <DELETED!>"
"RTN","DIALOGZ",49,0)
 .S Y=+$P(^DD(DIALFILE,DIALDD,0),U,2) I Y,$D(^DD(Y,.01,0)),$P(^(0),U,2)'["W" S DIALFILE=Y Q  ;GO DOWN INTO MULTIPLE
"RTN","DIALOGZ",50,0)
HLP .D:$G(^DD(DIALFILE,DIALDD,3))]""  Q:$D(DUOUT)
"RTN","DIALOGZ",51,0)
 ..W !!,"Current ",DIF," Field Help " S DIF="Prompt" W DIF,": "
"RTN","DIALOGZ",52,0)
 ..W:$X+$L(^(3))>75 !?2 W ^(3) D
"RTN","DIALOGZ",53,0)
 ...N DUZ S DUZ("LANG")=LANG I $D(^(.009,LANG,0)) S DIR("B")=^(0)
"RTN","DIALOGZ",54,0)
 ..D DIR(240) Q:X'="@"&$D(DUOUT)
"RTN","DIALOGZ",55,0)
 ..K DIR S ^DD(DIALFILE,DIALDD,.009,LANG,0)=Y
"RTN","DIALOGZ",56,0)
 ..I Y="" K ^(0) W "  <DELETED!>"
"RTN","DIALOGZ",57,0)
SET .D:$P(^DD(DIALFILE,DIALDD,0),U,2)["S"
"RTN","DIALOGZ",58,0)
 ..N SET
"RTN","DIALOGZ",59,0)
 ..S SET=$$SL($P(^(0),U,3)),DIF="SET values"
"RTN","DIALOGZ",60,0)
 ..W !!,"Current ",DIF,": " W:$X+$L(SET)>75 !?2 W SET
"RTN","DIALOGZ",61,0)
 ..I $D(^(.007,LANG,0)) S DIR("B")=^(0)
"RTN","DIALOGZ",62,0)
 ..S DIR("?")="YOU MUST ENTER "_$L($$SL(SET),";")_" EXTERNAL VALUES, SEPARATED BY SEMICOLONS(;)"
"RTN","DIALOGZ",63,0)
 ..D DIR("240^S X=$$SL^DIALOGZ(X) K:$L(X,"";"")-$L(SET,"";"")!(X["":"") X") Q:X'="@"&$D(DUOUT)
"RTN","DIALOGZ",64,0)
 ..K DIR S ^DD(DIALFILE,DIALDD,.007,LANG,0)=Y
"RTN","DIALOGZ",65,0)
 ..I Y="" K ^(0) W "  <DELETED!>"
"RTN","DIALOGZ",66,0)
 W !!! Q
"RTN","DIALOGZ",67,0)
 ;
"RTN","DIALOGZ",68,0)
SL(S) ;
"RTN","DIALOGZ",69,0)
 I S?.E1";" S S=$E(S,1,$L(S)-1)
"RTN","DIALOGZ",70,0)
 Q S
"RTN","DIALOGZ",71,0)
 ;
"RTN","DIALOGZ",72,0)
 ;
"RTN","DIALOGZ",73,0)
DIR(LN) S DIR("A")=DIAL_" translation of "_DIF,DIR(0)="FO^2:"_LN
"RTN","DIALOGZ",74,0)
 K DUOUT G ^DIR
"RTN","DIALOGZ",75,0)
 ;
"RTN","DIALOGZ",76,0)
FILENAME(FILE) ;
"RTN","DIALOGZ",77,0)
 N N,F
"RTN","DIALOGZ",78,0)
 I 'FILE Q "FIELD"
"RTN","DIALOGZ",79,0)
 I $D(^DIC(FILE,0))#2 D  Q F
"RTN","DIALOGZ",80,0)
 .S F=$P(^(0),"^")
"RTN","DIALOGZ",81,0)
 .I $G(DUZ("LANG")),$D(^("ALANG",DUZ("LANG"),0))#2 S F=^(0)
"RTN","DIALOGZ",82,0)
 S N=$G(^DD(FILE,0,"UP")) I N]"" S F=$O(^DD(N,"SB",FILE,0)) I F Q $$LABEL(N,F)
"RTN","DIALOGZ",83,0)
 Q ""
"RTN","DIALOGZ",84,0)
 ;
"RTN","DIALOGZ",85,0)
 ;
"RTN","DIALOGZ",86,0)
LABEL(FILE,FIELD) ;Called many places to return the foreign-language FIELD NAME
"RTN","DIALOGZ",87,0)
 N N
"RTN","DIALOGZ",88,0)
 S N=$P($G(^DD(FILE,FIELD,0)),"^") I N="" Q N
"RTN","DIALOGZ",89,0)
 I $P(^(0),"^",2)["W",$G(^DD(FILE,0,"UP")) Q $$LABEL(^("UP"),$O(^DD(^("UP"),"SB",FILE,0)))
"RTN","DIALOGZ",90,0)
 I $G(DUZ("LANG")),$D(^(.008,DUZ("LANG"),0))#2 Q ^(0)
"RTN","DIALOGZ",91,0)
 Q N
"RTN","DIALOGZ",92,0)
 ;
"RTN","DIALOGZ",93,0)
HELP(FILE,FIELD) ;
"RTN","DIALOGZ",94,0)
 G 3:FILE<2!'$G(DUZ("LANG")),3:$G(^DD(FILE,FIELD,3))'?.P&(DUZ("LANG")'>1)
"RTN","DIALOGZ",95,0)
 I $D(^DD(FILE,FIELD,.009,DUZ("LANG"),0))#2 Q ^(0)
"RTN","DIALOGZ",96,0)
 N Y,DICATT5,DICATT2,P
"RTN","DIALOGZ",97,0)
 S DICATT2=$P(^DD(FILE,FIELD,0),U,2),DICATT5=$P(^(0),U,5,999)
"RTN","DIALOGZ",98,0)
EXT I DICATT2["t" S Y=$G(^DI(.81,+$P(DICATT2,"t",2),11)) G Y ;GET SHORT DESCRIPTION OF DATA TYPE!
"RTN","DIALOGZ",99,0)
 I DICATT2["D" D
"RTN","DIALOGZ",100,0)
 .D EARLY^DICATTD1 S:$D(Y) P(1)=Y D LATEST^DICATTD1 S:$D(Y) P(2)=Y
"RTN","DIALOGZ",101,0)
 .K Y I $D(P(1)) S Y=$$EZBLD^DIALOG($S($D(P(2)):9114,1:9114.01),.P)
"RTN","DIALOGZ",102,0)
 I DICATT2["N" D
"RTN","DIALOGZ",103,0)
 .S P(1)=+$P(DICATT5,"X<",2) Q:'P(1)
"RTN","DIALOGZ",104,0)
 .S P(2)=+$P(DICATT5,"X>",2)
"RTN","DIALOGZ",105,0)
 .S P(3)=$P(DICATT5,"1"".""",2)-1 I P(3)<0 S P(3)=0 S:DICATT5["""$""" P(3)=2
"RTN","DIALOGZ",106,0)
 .S Y=$$EZBLD^DIALOG($S(DICATT5["""$""":9118.1,1:9118),.P)
"RTN","DIALOGZ",107,0)
 I DICATT2["F" D
"RTN","DIALOGZ",108,0)
 .S P(1)=+$P(DICATT5,"$L(X)<",2) I P(1) S P(2)=+$P(DICATT5,"$L(X)>",2) I P(2) S Y=$$EZBLD^DIALOG($S(P(1)=P(2):9119.1,1:9119),.P) ;"ENTER FROM |1| TO |2| CHARACTERS ..."
"RTN","DIALOGZ",109,0)
 I $D(Y) S ^DD(FILE,FIELD,.009,DUZ("LANG"),0)=Y
"RTN","DIALOGZ",110,0)
Y I $G(Y)]"" Q Y
"RTN","DIALOGZ",111,0)
3 Q $G(^DD(FILE,FIELD,3))
"RTN","DIALOGZ",112,0)
 ;
"RTN","DIALOGZ",113,0)
DICW(FILE) ;
"RTN","DIALOGZ",114,0)
 S DIC("W")="N % S %=$P(^(0),U,2)" ; + NEXT 2 LINES  WRITE OUT FIELD NAME IN 2 LANGUAGES
"RTN","DIALOGZ",115,0)
 I $G(DUZ("LANG"))>1 S DIC("W")=DIC("W")_" W:$D(^(.008,DUZ(""LANG""),0)) ?37,$$LABEL^DIALOGZ("_FILE_",+Y)"
"RTN","DIALOGZ",116,0)
 S DIC("W")=DIC("W")_" W:% $P(""  (multiple)^  (word-processing)"",U,$P($G(^DD(+%,.01,0)),U,2)[""W""+1)"
"RTN","DIALOGZ",117,0)
 Q
"RTN","DIALOGZ",118,0)
 ;
"RTN","DIALOGZ",119,0)
 ;
"RTN","DIALOGZ",120,0)
SETIN() ;NAKED REFERENCE  Builds the SET STRING user sees, with  1,2,3...
"RTN","DIALOGZ",121,0)
 N C,P
"RTN","DIALOGZ",122,0)
 S C=$P(^(0),U,3)
"RTN","DIALOGZ",123,0)
 I $D(^(.007,DUZ("LANG"),0)) D
"RTN","DIALOGZ",124,0)
 .S C=^(0) F P=1:1:$L(C,";") S $P(C,";",P)=P_":"_$P(C,";",P)
"RTN","DIALOGZ",125,0)
 E  D
"RTN","DIALOGZ",126,0)
 .N TRY,OUT,O
"RTN","DIALOGZ",127,0)
 .S TRY="" F P=1:1 Q:$P(C,";",P)=""  S O=$P($P(C,";",P),":",2),OUT=$$YESORNO(O),TRY=TRY_P_":"_OUT_";" I OUT=O K TRY Q
"RTN","DIALOGZ",128,0)
 .I $D(TRY) S C=TRY
"RTN","DIALOGZ",129,0)
 Q C
"RTN","DIALOGZ",130,0)
 ;
"RTN","DIALOGZ",131,0)
SETOUT() ;NAKED REFERENCE    Builds the SET STRING that converts INTERNAL to user's EXTERNAL
"RTN","DIALOGZ",132,0)
 N P,V,C
"RTN","DIALOGZ",133,0)
 S C=$P(^(0),U,3)
"RTN","DIALOGZ",134,0)
 I $D(^(.007,DUZ("LANG"),0)) D
"RTN","DIALOGZ",135,0)
 .F P=1:1:$L(^(0),";") S V=$P(C,";",P),$P(V,":",2)=$P(^(0),";",P),$P(C,";",P)=V
"RTN","DIALOGZ",136,0)
 E  F P=1:1:$L(C,";") S V=$P(C,";",P),$P(V,":",2)=$$YESORNO($P(V,":",2)),$P(C,";",P)=V
"RTN","DIALOGZ",137,0)
 Q C
"RTN","DIALOGZ",138,0)
 ;
"RTN","DIALOGZ",139,0)
YESORNO(Y) ;TRY TO TURN YES OR NO INTO 'SI', WHATEVER
"RTN","DIALOGZ",140,0)
 Q:'$G(DUZ("LANG")) Y
"RTN","DIALOGZ",141,0)
 I $$UP^DILIBF(Y)="YES",$D(^DI(.84,7001,4,DUZ("LANG"),1,1,0)) Q $P(^(0),U)
"RTN","DIALOGZ",142,0)
 I $$UP^DILIBF(Y)="NO",$D(^DI(.84,7001,4,DUZ("LANG"),1,1,0)) Q $P(^(0),U,2)
"RTN","DIALOGZ",143,0)
 Q Y
"RTN","DIALOGZ",144,0)
 ;
"RTN","DIALOGZ",145,0)
GOODLANG(Y)  ;Check for language available for translation -- DPC
"RTN","DIALOGZ",146,0)
 ;Input = user's input ID NUMBER and zero node of language file entry
"RTN","DIALOGZ",147,0)
 ;Returns 1 for good language, 0 for no translation
"RTN","DIALOGZ",148,0)
 ;Only living languages can be translated
"RTN","DIALOGZ",149,0)
 I Y(0)="" W Y_" is not an ID NUMBER of a language in the Language file." Q 0
"RTN","DIALOGZ",150,0)
 I $P(Y(0),U,7)'="L" W $P(Y(0),U)_" is not a living language. Translating is prohibited." Q 0
"RTN","DIALOGZ",151,0)
 Q 1
"RTN","DIALOGZ",152,0)
 ;
"RTN","DICATT")
0^18^B17681814^B17660563
"RTN","DICATT",1,0)
DICATT ;SFISC/GFT,XAK - MODIFY FILE ATTR ;25MAY2012
"RTN","DICATT",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATT",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATT",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATT",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATT",7,0)
 I $D(DIAX) S %=2
"RTN","DICATT",8,0)
 E  S %=$$SCREEN^DIBT("^D SCREENQ^DICATT") Q:%=U  S %=2-%
"RTN","DICATT",9,0)
 G ^DICATTD:%=1 Q:%<2  ;JUMP TO THE SCREENMAN EDITOR
"RTN","DICATT",10,0)
 S DLAYGO=1 D D^DICRW Q:Y<0  I $P($G(^DD(+Y,0,"DI")),U)["Y",($P(@(^DIC(+Y,0,"GL")_"0)"),U,4)) W !!,$C(7),"DATA DICTIONARY MODIFICATIONS ON ARCHIVE FILES ARE NOT ALLOWED!" Q
"RTN","DICATT",11,0)
 I '$D(DIC) D DIE^DIB Q:'$D(DG)  S DIC=DG
"RTN","DICATT",12,0)
 S:$D(DIAX) DIAXDIC=+$P(@(DIC_"0)"),U,2)
"RTN","DICATT",13,0)
EN ;
"RTN","DICATT",14,0)
 K I S Q="""",I(0)=DIC,B=+$P(@(DIC_"0)"),U,2),S=";"
"RTN","DICATT",15,0)
B ;
"RTN","DICATT",16,0)
 K DA,J,DIU0,DDA S A=B,DICL=0,J(0)=B,DDA=""
"RTN","DICATT",17,0)
M ;
"RTN","DICATT",18,0)
 I $G(Z)["W",A-B G B
"RTN","DICATT",19,0)
 W !!! K O,DQ,DIC,DIE,DG,M G Q^DIB:$D(DTOUT)
"RTN","DICATT",20,0)
 S O=1,E=0,DIC(0)="ALEQIZ",DIC="^DD("_A_"," S:$D(DICS) DIC("S")=DICS
"RTN","DICATT",21,0)
 S DIC("W")="S %=$P(^(0),U,2) I % W $P(""  (multiple)^  (word-processing)"",U,$P(^DD(+%,.01,0),U,2)[""W""+1)"
"RTN","DICATT",22,0)
 I $P(^DD(A,.01,0),U,2)["W" S DIC(0)="AEQZ",DIC("B")=.01
"RTN","DICATT",23,0)
 E  I $D(DA),$D(^DD(A,DA,0)),'$P(^(0),U,2),$P(^(0),U,4)'?.P S E=DA
"RTN","DICATT",24,0)
 D ^DIC S:$P(Y,U,3) DDA="N" I Y<0 G B:A-B,Q^DICATT2 ;IF NO FIELD IS CHOSEN, POP UP.  IF AT TOP LEVEL OF FILE, QUIT OUT
"RTN","DICATT",25,0)
SV I '$P(Y,U,3) S DIU0=A,O(1)=$P(^DD(A,+Y,0),U,1,2),O(2)=$S($D(^(.1)):$P(^(.1),U),1:""),DDA="E" D SV^DICATTA
"RTN","DICATT",26,0)
 S DDA(1)=A
"RTN","DICATT",27,0)
 S DIAC="AUDIT",DIFILE=A D ^DIAC S O=+% K DIAC,DIFILE
"RTN","DICATT",28,0)
SKP S (D0,DA)=+Y,DA(1)=A,DIE=DIC,M=Y(0),T=$P(M,U,2) S:T["C"!(T["W") O=0
"RTN","DICATT",29,0)
 S DR=$P(".01:.1;",U,DUZ(0)="@"!'$F(T,"X"))_$P("1.1;",U,T'["C")_$S(DUZ(0)="@"&(T'["C"):"1.2;",1:"")_$S(T["C":"8;",1:"8:9;10:")_"11;20:29"
"RTN","DICATT",30,0)
 S O=$S($P(Y,U,3):0,1:1_U_$P(M,U,2,99)),F=$P(M,U) K DIC,DQI
"RTN","DICATT",31,0)
 S X=0 F  S X=$O(^DD(A,DA,1,X)) Q:X'>0  I +^(X,0)=B,$P(^(0),B,2)?1"^"1.A S DQI=$P(^(0),U,2)
"RTN","DICATT",32,0)
 G MULTIPLE:T
"RTN","DICATT",33,0)
 I O D  Q:$D(DTOUT)  I '$D(DA) G N:$P(O,U,4)?.P,^DICATT4 ;IF DELETING THE FIELD, CLEANUP IN 'DICATT4' UNLESS IT WAS A COMPUTED FIELD
"RTN","DICATT",34,0)
 .N DICASPEC S DICASPEC=$P(^DD(A,DA,0),U,2)
"RTN","DICATT",35,0)
 .D DIE ;EDIT THE CHARACTERISTICS OF A SINGLE-VALUED FIELD
"RTN","DICATT",36,0)
 .I '$D(DA) S DDA="D" Q
"RTN","DICATT",37,0)
 .I DICASPEC'=$P(^DD(A,DA,0),U,2),$G(^DD(B,0,"DIK"))]"" D
"RTN","DICATT",38,0)
 ..N A D EN2^DIKZ(B,"",^("DIK")) ;Recompile CROSS-REFS if auditing changes
"RTN","DICATT",39,0)
 G TYPE^DICATT2
"RTN","DICATT",40,0)
 ;
"RTN","DICATT",41,0)
MULTIPLE ;EDIT THE CHARACTERISTICS OF A MULTIPLE FIELD
"RTN","DICATT",42,0)
 S DR=".01;8;9;10:11;20:29" D DIE I '$D(DA) S DDA="D" S DQ(+T)=0 G NEW^DICATT4
"RTN","DICATT",43,0)
 S X=$P($P(M,U,4),";"),M=^DD(A,DA,0),E=$P(M,U),A=+T,DICL=DICL+1,J(DICL)=A,Y=$E(Q,+X'=X),I(DICL)=Y_X_Y I E'=F S ^(0)=E_" SUB-FIELD^"_$P(^DD(A,0),U,2,9) K ^(0,"NM") S ^("NM",E)=""
"RTN","DICATT",44,0)
 G 5:$P(M,U,2)["W",N ;NOW WE ARE DOWN TO LOWER-LEVEL MULTIPLE
"RTN","DICATT",45,0)
 ;
"RTN","DICATT",46,0)
 ;
"RTN","DICATT",47,0)
E S DE=^DD(A,E,0) W $P(DE,U) Q
"RTN","DICATT",48,0)
 ;
"RTN","DICATT",49,0)
P S DI=DIU0 D:$D(O(1))
"RTN","DICATT",50,0)
 .I '$D(DA) S DA=D0 D DIPZ^DIU0 Q
"RTN","DICATT",51,0)
 .I $D(^DD(DI,DA,0)),O(1)'=$P(^(0),U,1,2) D DIPZ^DIU0 Q
"RTN","DICATT",52,0)
 .I $D(^(.1)),O(2)'=$P(^(.1),U) D DIPZ^DIU0 Q
"RTN","DICATT",53,0)
 K DIU0 Q
"RTN","DICATT",54,0)
 ;
"RTN","DICATT",55,0)
N ;COME BACK HERE FROM DICATT22
"RTN","DICATT",56,0)
 D:DDA]"" AUDIT^DICATT22(DDA(1),D0,DDA) ;FINISH THIS FIELD, GO BACK TO RE-ASK ANOTHER FIELD
"RTN","DICATT",57,0)
 D:$D(DIU0) P S DIZZ=$S(('O&$D(DIZ)):DIZ,1:$P(O,U,2,3)) G M
"RTN","DICATT",58,0)
 ;
"RTN","DICATT",59,0)
X W $C(7),"    '",F,"' DELETED!" S DDA=$S(DDA="":"D",1:"")
"RTN","DICATT",60,0)
 S DIK="^DD(A,",DA(1)=A D ^DIK G N
"RTN","DICATT",61,0)
 ;
"RTN","DICATT",62,0)
CHECK G:$P(^DD(A,DA,0),U,2)']"" X:$D(DTOUT) G NO^DICATT2
"RTN","DICATT",63,0)
 ;
"RTN","DICATT",64,0)
DIE ;
"RTN","DICATT",65,0)
 N I,J,DICATTED,A,B
"RTN","DICATT",66,0)
 S DICATTED=1 D ^DIE ;'DA' VARIABLE IS KILLED IF USER KILLS THE FIELD BY DELETING THE LABEL
"RTN","DICATT",67,0)
 Q
"RTN","DICATT",68,0)
 ;
"RTN","DICATT",69,0)
 ;
"RTN","DICATT",70,0)
 ;
"RTN","DICATT",71,0)
0 S C=$P(O,U,5,99) I N>10 G ^DICATTUD ;COME HERE FROM 2 PLACES IN DICATT2.  
"RTN","DICATT",72,0)
 G @N ;GO DEPENDS ON DATA TYPE (1-9 or FILE .81)
"RTN","DICATT",73,0)
1 ;
"RTN","DICATT",74,0)
2 G ^DICATT0
"RTN","DICATT",75,0)
3 ;
"RTN","DICATT",76,0)
4 G ^DICATT6
"RTN","DICATT",77,0)
5 S W="0;1",(Z,DIZ)="W^",C="Q",V=1,L=1 G ^DICATT2:O,SUB^DICATT1
"RTN","DICATT",78,0)
6 G ^DICATT3 ;COMPUTED
"RTN","DICATT",79,0)
7 G ^DICATT5
"RTN","DICATT",80,0)
8 G VP^DICATT4
"RTN","DICATT",81,0)
9 S (Z,DIZ)="K^",V=0,C="K:$L(X)>245 X D:$D(X) ^DIM",L=245
"RTN","DICATT",82,0)
 S:$P(^DD(A,DA,0),U,4)]"" W=$P(^(0),U,4) G ^DICATT2:O,SUB^DICATT1
"RTN","DICATT",83,0)
 ;
"RTN","DICATT",84,0)
SCREENQ ;
"RTN","DICATT",85,0)
 W !,"'YES' will invoke the ScreenMan editor.",!,"The same questions are asked in both screen & scrolling mode."
"RTN","DICATT1")
0^55^B15744567^B11875453
"RTN","DICATT1",1,0)
DICATT1 ;SFISC/GFT - XAK-NODE AND PIECE, SUBFILE ;8APR2016
"RTN","DICATT1",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATT1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATT1",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATT1",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATT1",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATT1",7,0)
 ;;GFT;**1032,1055**
"RTN","DICATT1",8,0)
 ;
"RTN","DICATT1",9,0)
 I DA=.001 S W=" " G 2
"RTN","DICATT1",10,0)
 S (DG,W)=$P(O,U,4) G M:W="" S T=0,DP=DA,Y=$P(W,";"),N=$P(W,";",2) D MX S L=L-T D MAX I T+3<$G(^DD("STRING_LIMIT"),255) S W=DG G ^DICATT2
"RTN","DICATT1",11,0)
 D TOO G NO^DICATT2
"RTN","DICATT1",12,0)
 ;
"RTN","DICATT1",13,0)
M K DE,DG W !,"WILL "_F_" FIELD BE MULTIPLE" S %=2 D YN^DICN I % S V=%=1 G BACK:%<0,SUB
"RTN","DICATT1",14,0)
 W !,"FOR A GIVEN ENTRY, WILL THERE BE MORE THAN 1 "_F,!," ON FILE AT ONCE?" G M
"RTN","DICATT1",15,0)
 ;
"RTN","DICATT1",16,0)
E ;FROM DICATT2 WHEN <SPACEBAR> DUPLICATES A FIELD
"RTN","DICATT1",17,0)
 S V=0,DE(3)=$S($D(^(3)):^(3),1:""),T=0,DP=E,N=$P($P(DE,U,4),";",2) D MX S L=T
"RTN","DICATT1",18,0)
 ;
"RTN","DICATT1",19,0)
SUB ;Ask which SUBSCRIPT  --  FROM ABOVE, AND FROM 9+1^DICATT ('MUMPS') TYPE
"RTN","DICATT1",20,0)
 S:$P(DIZ,"^")["K" V=1 S T=0 F Y=0:1 Q:'$D(^DD(A,"GL",Y+1))
"RTN","DICATT1",21,0)
 D MAX:'V I $D(^DD(A,"GL",Y,0))!V!(T>245)!($$ESTORE(DIZ)&$O(^(""))) S Y=$S(+Y=Y:Y+1,1:$C($A(Y)+1)) ;GET THE NEXT UNUSED SUBSCRIPT
"RTN","DICATT1",22,0)
 G SB:DUZ(0)'="@"
"RTN","DICATT1",23,0)
 W !!,"SUBSCRIPT: ",Y,"// " R X:DTIME S:'$T X=U,DTOUT=1 S:X="" X=Y
"RTN","DICATT1",24,0)
 I X'?.ANP W !?5,$C(7),"Control Characters are not allowed." G SUB
"RTN","DICATT1",25,0)
 I +X'=X G BACK:X[U,DICATT1^DIQQQ:X["?" I X?1P.E!(X[",")!(X[":")!(X[S)!(X[Q)!(X["=") G SUB
"RTN","DICATT1",26,0)
 I Y'=X S Y=X D MAX I T+5>$G(^DD("STRING_LIMIT"),255) D TOO G SUB
"RTN","DICATT1",27,0)
SB S W=Y,X=0 G V:V,U:$D(^DD(A,"GL",W,0)),SUB:$$ESTORE(DIZ)&$O(^(""))
"RTN","DICATT1",28,0)
PIECE S Y=1,P=0,V=0
"RTN","DICATT1",29,0)
PC S X=$O(^DD(A,"GL",W,X)) I X'="" S P=$P(X,",",2),Y=$S(Y>P:Y,1:P+1) S:P V=1 G PC
"RTN","DICATT1",30,0)
 I V!$$ESTORE(DIZ) S Y="E"_Y_","_(L+Y-1)
"RTN","DICATT1",31,0)
 E  F Y=1:1 Q:'$D(^DD(A,"GL",W,Y))
"RTN","DICATT1",32,0)
 S X=-1,P=Y I DUZ(0)="@" W !,"^-PIECE POSITION: ",Y,"// " R P:DTIME S:'$T DTOUT=1 G CHECK^DICATT:$D(DTOUT) S:P="" P=Y
"RTN","DICATT1",33,0)
 G PQ:P["?" I P?1"E"1N.N1","1N.N S N=$P(P,",",2)-$E(P,2,9)+1 G PIECE:$O(^DD(A,"GL",W,0)),USED:N'<L W $C(7),!,"CAN'T BE <",L G PIECE
"RTN","DICATT1",34,0)
 I P>0,P<100,P\1=P G PIECE:Y?1"E".E,USED ;DON'T ENTER A PIECE NUMBER, IF OTHER DATA IS STORED BY EXTRACT!
"RTN","DICATT1",35,0)
 S W="" I X'[U W $C(7),"??" G SUB
"RTN","DICATT1",36,0)
BACK G CHECK^DICATT:$D(DTOUT),TYPE^DICATT2
"RTN","DICATT1",37,0)
 ;
"RTN","DICATT1",38,0)
PQ W "  TYPE A NUMBER FROM 1 TO 99"
"RTN","DICATT1",39,0)
 I Y=1 W !?9,"OR AN $EXTRACT RANGE (E.G., ""E2,4"")"
"RTN","DICATT1",40,0)
 E  W !?15,"CURRENTLY ASSIGNED:",! S Y="" F P=0:0 S Y=$O(^DD(A,"GL",W,Y)) Q:Y=""  S P=$O(^(Y,0)) I $D(^DD(A,P,0)) W ?11,$S(Y:"PIECE ",1:"")_Y,?22,"FIELD #"_P_", '"_$P(^(0),U,1)_"'",!
"RTN","DICATT1",41,0)
 G PIECE
"RTN","DICATT1",42,0)
 ;
"RTN","DICATT1",43,0)
USED S W=W_S_P,X=P G DE:'$D(^(X))
"RTN","DICATT1",44,0)
U W !,$C(7),X_" ALREADY USED FOR "_$P(^DD(A,$O(^(X,0)),0),U,1) G SUB
"RTN","DICATT1",45,0)
 ;
"RTN","DICATT1",46,0)
MAX S N=0 F T=L:0 S N=$O(^DD(A,"GL",Y,N)) Q:N=""  S DP=$O(^(N,0)) D MX ;GO THRU ALL THE FIELDS STORED ON SUBSCRIPT 'Y'
"RTN","DICATT1",47,0)
 S N=-1 Q
"RTN","DICATT1",48,0)
 ;
"RTN","DICATT1",49,0)
MX I N?1"E".E S T=T+$P(N,",",2)-$E(N,2,9)+1
"RTN","DICATT1",50,0)
 Q:'N  S P=$P(^DD(A,DP,0),U,2),W=$S(P["J":$P(P,"J",2),P["P":9,P["N":14,P["D":7,1:0) G W:W
"RTN","DICATT1",51,0)
 I P["S" F P=1:1 S X=$L($P($P($P(^(0),U,3),";",P),":",1)) S:X>W W=X G W:'X
"RTN","DICATT1",52,0)
 S W=$P(^(0),"$L(X)>",2),W='W*30+W
"RTN","DICATT1",53,0)
W S T=T+W+1 Q  ;return the Total characters stored for field 'DP'
"RTN","DICATT1",54,0)
 ;
"RTN","DICATT1",55,0)
 ;
"RTN","DICATT1",56,0)
 ;
"RTN","DICATT1",57,0)
V I $D(^DD(A,"GL",W)) W $C(7),!?9,"CAN'T STORE A "_$S($P(DIZ,U)["K":"MUMPS",1:"MULTIPLE")_" FIELD IN AN ALREADY-USED SUBSCRIPT!" G SUB
"RTN","DICATT1",58,0)
 I $P(Z,U)'["K" S W=W_S_0 S:$P(DIZ,U)["K" W=$P(W,";")_";E1,245"
"RTN","DICATT1",59,0)
DE I $D(DE) S ^DD(A,DA,0)=F_U_$P(DE,U,2,3)_U_W_U_$P(DE,U,5,99),DIK="^DD(A,",DA(1)=A,^(3)=DE(3),^("DT")=DT D IX1^DIK G N^DICATT
"RTN","DICATT1",60,0)
2 S:$P(Z,U)["K" V=0,W=W_";E1,245",M="This is Standard MUMPS code." G ^DICATT2
"RTN","DICATT1",61,0)
 ;
"RTN","DICATT1",62,0)
TOO W $C(7),!," TOO MUCH TO STORE AT THAT SUBSCRIPT!"
"RTN","DICATT1",63,0)
 Q
"RTN","DICATT1",64,0)
 ;
"RTN","DICATT1",65,0)
ESTORE(DIZ) ;also called from DICATTDM for screen mode
"RTN","DICATT1",66,0)
 I +$P(DIZ,"t",2)=12!(DIZ["K") Q 1 ;TYPES 'LABEL REFERENCE' AND 'MUMPS' MUST BE STORED BY E
"RTN","DICATT1",67,0)
 Q 0
"RTN","DICATT2")
0^19^B24899508^B23559444
"RTN","DICATT2",1,0)
DICATT2 ;SFISC/GFT,XAK - DEFINING MULTIPLES ;12NOV2015
"RTN","DICATT2",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATT2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATT2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATT2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATT2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATT2",7,0)
 ;
"RTN","DICATT2",8,0)
 S T=$E(Z) G CHECK^DICATT:$D(DTOUT)
"RTN","DICATT2",9,0)
 F P="I","O","L","x" S:$P(O,U,2)[P Z=$P(Z,U)_P_U_$P(Z,U,2)
"RTN","DICATT2",10,0)
1 K DS S:$P(Z,U)'["K" V=W[";0"
"RTN","DICATT2",11,0)
 S P=0,N=DICL,DQ=4,DP=6,DQI=" S:$D(X) DINUM=+X",DREF=$F(O,DQI)-1=$L(O),DE(7,0)="NO",DG(7)="N"
"RTN","DICATT2",12,0)
 S:T="*" T=$S($P(Z,U)["S":"S",1:"P") G 1^DICATT22:DA=.001
"RTN","DICATT2",13,0)
 G W:T="W" S:$D(DTIME)[0 DTIME=300
"RTN","DICATT2",14,0)
 I T'["F",T'["S",T'["K",'O!DREF S:DREF DE(7,0)="YES",DG(7)="Y"
"RTN","DICATT2",15,0)
S F Y=4:1:6 S DQ(Y)=$P($T(DQ+Y),";",3)_F_$P($T(DQ+Y),";",4)_" (Y/N)^RS^Y:YES;N:NO^"_Y_"^Q" I 'V,DA-.01!'N Q
"RTN","DICATT2",16,0)
 S DG(5)="Y",DE(4,0)="NO",DP=-1,DL=1
"RTN","DICATT2",17,0)
 I T["P"!(T["N") S DE(5,0)="YES"
"RTN","DICATT2",18,0)
 I O S DE(6,0)=$E("NY",$P(O,U,2)["M"+1) S:$P(O,U,2)["R" DE(4,0)="Y" I DA=.01,N S P=$O(^DD(J(N-1),"SB",A,0)) S:P="" P=-1 S Y=$P(^DD(J(N-1),P,0),U,2),DE(5,0)=$E("YN",Y["A"+1)
"RTN","DICATT2",19,0)
 K Y S DIFLD=-1 D RE^DIED K DQ,DIFLD G:$D(Y) N^DICATT:$P(Z,U)["X",CHECK^DICATT I $D(DTOUT) K DTOUT G CHECK^DICATT
"RTN","DICATT2",20,0)
 S:DG(5)="N" T=T_"A" I DG(4)="Y",$P(Z,U)'["R" S Z="R"_Z
"RTN","DICATT2",21,0)
 I $D(DG(6)),DG(6)="Y",$P(Z,U)'["M" S Z="M"_Z
"RTN","DICATT2",22,0)
G S DIZ=Z G ^DICATT22
"RTN","DICATT2",23,0)
Q ;
"RTN","DICATT2",24,0)
 K T,B,A,J,DA,DIC,E,DR,W,S,Q,P,N,V,I,L,F,DQI,DIK,C,Z,Y,DE,O,DICS,DICL,DDA Q
"RTN","DICATT2",25,0)
 ;
"RTN","DICATT2",26,0)
W S %=Z["L"+1 W !,"SHALL THIS TEXT NORMALLY APPEAR IN WORD-WRAP MODE" D YN^DICN
"RTN","DICATT2",27,0)
 G CHECK^DICATT:%<0 I % S Z=$P($TR(Z,"L"),U)_$E("L",%=2)_U G WINDOW
"RTN","DICATT2",28,0)
 W !,"ANSWER 'YES' IF THE INTERNALLY-STORED '"_F_"' TEXT"
"RTN","DICATT2",29,0)
 W !?5,"SHOULD NORMALLY BE PRINTED OUT IN FULL LINES, BREAKING AT WORD BOUNDARIES."
"RTN","DICATT2",30,0)
 W !?2,"ANSWER 'NO' IF THE INTERNAL TEXT SHOULD NORMALLY BE PRINTED OUT"
"RTN","DICATT2",31,0)
 W !?5,"LINE-FOR-LINE AS IT STANDS.",! G W
"RTN","DICATT2",32,0)
 ;
"RTN","DICATT2",33,0)
 ;
"RTN","DICATT2",34,0)
WINDOW S %=2-(Z["x"!'O) W !,"SHALL ""|"" CHARACTERS IN THIS TEXT BE TREATED LIKE ANY OTHER CHARACTERS" D YN^DICN
"RTN","DICATT2",35,0)
 G CHECK^DICATT:%<0 I % S Z=$P($TR(Z,"x"),U)_$E("x",%=1)_U G G
"RTN","DICATT2",36,0)
 W !,"ANSWER 'YES' IF THE INTERNALLY-STORED '"_F_"' TEXT MAY HAVE ""|"" CHARACTERS"
"RTN","DICATT2",37,0)
 W !?3,"IN IT (SUCH AS HL7 MESSAGES) THAT NEED TO DISPLAY EXACTLY AS THEY ARE STORED."
"RTN","DICATT2",38,0)
 W !,"ANSWER 'NO' IF THE INTERNAL TEXT SHOULD NORMALLY BE PRINTED OUT WITH ANYTHING"
"RTN","DICATT2",39,0)
 W !?3,"THAT IS DELIMITED BY ""|"" CHARACTERS INTERPRETED AS VARIABLE TEXT.",! G WINDOW
"RTN","DICATT2",40,0)
 ;
"RTN","DICATT2",41,0)
 ;
"RTN","DICATT2",42,0)
 ;
"RTN","DICATT2",43,0)
X ;
"RTN","DICATT2",44,0)
 W "   (FIELD DEFINITION IS NOT EDITABLE)"
"RTN","DICATT2",45,0)
 I N=4 K DIRUT D LENGTH(A,DA) I $D(DIRUT) K DIRUT G N^DICATT
"RTN","DICATT2",46,0)
 S T=$E(^DOPT("DICATT",N,0)),Y=^DD(A,DA,0),Z=$TR($P(Y,U,2),"MR")_U_$P(Y,U,3),W=$P(Y,U,4),C=$P(Y,U,5,99) S:Z["K" V=0
"RTN","DICATT2",47,0)
 G N^DICATT:N=6,1
"RTN","DICATT2",48,0)
 ;
"RTN","DICATT2",49,0)
LENGTH(DI,DIFIELD) ;
"RTN","DICATT2",50,0)
 N DIR,DICY,Y,X,A0,B0,A1,A2
"RTN","DICATT2",51,0)
 S DICY=$G(^DD(DI,DIFIELD,0)) I $P(DICY,U,2)'["F" Q
"RTN","DICATT2",52,0)
 S A0=250,A1=$P($P($P(DICY,U,4),";",2),"E",2) I A1 S A2=$P(A1,",",2) I A2 S A0=A2-A1+1,DIR("?",1)="Data is stored by '$E"_A1_"'"
"RTN","DICATT2",53,0)
 S DIR("A")="MAXIMUM LENGTH OF '"_$P(DICY,U)_"'",DIR(0)="N^1:"_A0,DIR("B")=$$FL^DIQGDDU(DI,DIFIELD)
"RTN","DICATT2",54,0)
 S DIR("?")="THIS MAXIMUM WILL BE USED FOR OUTPUT PURPOSES, BUT WILL NOT BE PART OF THE INPUT CHECK FOR THE FIELD"
"RTN","DICATT2",55,0)
 D ^DIR Q:'Y
"RTN","DICATT2",56,0)
 N F S X=$P(DICY,U,2),F=$F(X,"J") I F Q:+$E(X,F,99)=Y  F  Q:$E(X,F)'?1N  S X=$E(X,1,F-1)_$E(X,F+1,99)
"RTN","DICATT2",57,0)
 S X=$TR(X,"J")_"J"_Y,$P(^DD(DI,DIFIELD,0),U,2)=X
"RTN","DICATT2",58,0)
 I $D(DDA) S DDA="E",A0="LENGTH^.23",A1=DIR("B"),A2=Y D IT^DICATTA
"RTN","DICATT2",59,0)
 Q
"RTN","DICATT2",60,0)
 ;
"RTN","DICATT2",61,0)
NO ;
"RTN","DICATT2",62,0)
 W !,$C(7),"  <DATA DEFINITION UNCHANGED>" I $P(Z,U)["K"&(DUZ(0)'="@") G N^DICATT
"RTN","DICATT2",63,0)
TYPE K Y,M,DE,DIE,DQ,DG G Q^DIB:$D(DTOUT) S N=0,DQI=DICL+9,Y=^DD(A,DA,0),F=$P(Y,U),Z="" W !!,"DATA TYPE OF ",F,": "
"RTN","DICATT2",64,0)
 I 'O R X:DTIME S:'$T DTOUT=1 G X^DICATT:X[U!'$T S DIC("S")="I Y-99,Y-10,Y<10!$O(^(201,0))!$O(^DI(.81,Y,101,0))" S:DUZ(0)'="@" DIC("S")="I Y-9,Y-99,Y<10!$O(^(201,0))" S:DA=.001 DIC("S")="I Y<4!(Y=7)" G NEW
"RTN","DICATT2",65,0)
 I $P(Y,U,2)["t" S N=+$P($P(Y,U,2),"t",2)
"RTN","DICATT2",66,0)
 E  F N=9:-1:5,1:1:4 Q:$P(Y,U,2)[$E("DNSFWCPVK",N)
"RTN","DICATT2",67,0)
 W $P(^DI(.81,N,0),U) ;Data type
"RTN","DICATT2",68,0)
 G X:$P(Y,U,2)["K"&(DUZ(0)'="@") ;non-programmer can't edit MUMPS type
"RTN","DICATT2",69,0)
 G X:$P(Y,U,2)["X",6^DICATT:N=6 R "// ",X:DTIME S:'$T DTOUT=1 G N^DICATT:X[U!'$T,0^DICATT:X=""
"RTN","DICATT2",70,0)
 S DIC("S")="I Y-6,Y-10,Y<10!$O(^(201,0))!$O(^DI(.81,Y,101,0)),Y-9"_$P(",Y-5",U,N\2-2!(A=B)!(DA-.01)!$O(^DD(A,DA))>0),DIC("S")=DIC("S")_$S(N=7:",Y-8",N=8:",Y-7",1:"")
"RTN","DICATT2",71,0)
NEW I 'O,X=" ",E,$P(^DD(A,E,0),U,2)'["P",$P(^(0),U,2)'["V" D  G E^DICATT1
"RTN","DICATT2",72,0)
 .W " <",$C(7) D E^DICATT W " DUPLICATED>" S $P(DE,U,2)=$TR($P(DE,U,2),"a"),DIZ=$G(DIZ,DIZZ) ;DO NOT DUPLICATE AUDITING
"RTN","DICATT2",73,0)
 S DIC(0)="QEI",DIC="^DI(.81," D ^DIC K DIC ;Look up X in Data Type file
"RTN","DICATT2",74,0)
 I Y>0 S:N-Y&O M="",O=$P(O,U,1,2)_U_U_$P(O,U,4) S N=+Y G 0^DICATT
"RTN","DICATT2",75,0)
 I 'O,X["?",E,$P(^DD(A,E,0),U,2)'["P",$P(^(0),U,2)'["V" D DICATT^DIQQQ,E^DICATT W ", JUST HIT THE SPACE KEY"
"RTN","DICATT2",76,0)
 G TYPE
"RTN","DICATT2",77,0)
 ;
"RTN","DICATT2",78,0)
DQ ;;
"RTN","DICATT2",79,0)
 ;
"RTN","DICATT2",80,0)
 ;
"RTN","DICATT2",81,0)
 ;
"RTN","DICATT2",82,0)
 ;;IS ; ENTRY MANDATORY
"RTN","DICATT2",83,0)
 ;;SHOULD USER SEE AN "ADDING A NEW ;?" MESSAGE FOR NEW ENTRIES
"RTN","DICATT2",84,0)
 ;;HAVING ENTERED OR EDITED ONE ;, SHOULD USER BE ASKED ANOTHER
"RTN","DICATT22")
0^39^B15001986^B11464555
"RTN","DICATT22",1,0)
DICATT22 ;SFISC/GFT - CREATE A SUBFILE ;6MAY2016
"RTN","DICATT22",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATT22",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATT22",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATT22",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATT22",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATT22",7,0)
 ;;GFT;**42,52,89,999,1004,1024**
"RTN","DICATT22",8,0)
 ;
"RTN","DICATT22",9,0)
 ;FINISH MODIFYING A FIELD'S ATTRIBUTES
"RTN","DICATT22",10,0)
 ;
"RTN","DICATT22",11,0)
 G M:V I P,$D(^DD(J(N-1),P,0)) S I=A_$E("I",$P(^(0),U,2)["I") D P
"RTN","DICATT22",12,0)
 I O,DA=.01,'N S I=$P(@(I(0)_"0)"),U,2) D P
"RTN","DICATT22",13,0)
1 ;
"RTN","DICATT22",14,0)
 S %=$L(F)+$L(W)+$L(C)+$L(Z) I %>242 W $C(7),!?5,"Field Definition is TOO LONG by ",%-242," characters!" G TYPE^DICATT2
"RTN","DICATT22",15,0)
 ;READY TO SAVE IT!
"RTN","DICATT22",16,0)
 I O K DIK,^DD(A,DA,101),^(201) S DA(1)=A,DIK="^DD("_A_",",DIK(1)=.2 D EN2^DIK K DIK ;DO THE KILL LOGIC FOR THE OLD SPECIFIER!
"RTN","DICATT22",17,0)
 S ^DD(A,DA,0)=F_U_Z_U_W_U_C S:$P(Z,U)["K" ^(9)="@" ;SET THE FIELD.  IF IT IS 'MUMPS' TYPE, ONLY PROGRAMMERS HAVE WRITE ACCESS
"RTN","DICATT22",18,0)
M101 I Z["t" M ^DD(A,DA)=DICATTPM K DICATTPM ;PROPERTIES (101) AND METHODS (102)
"RTN","DICATT22",19,0)
 D SDIK,I G N^DICATT ;CROSS-REFERENCE FIELD ATTRIBUTES
"RTN","DICATT22",20,0)
 ;
"RTN","DICATT22",21,0)
Q W $C(7),!,"NUMBER MUST BE BETWEEN ",A," & ",%+1," AND NOT ALREADY IN USE"
"RTN","DICATT22",22,0)
M S %=$P(A,"."),DE=%_"."_+$P(A,".",2)_DA I +DE'=DE!$D(^DD(DE)) F DE=A+.01:.01:%+.7,%+.7:.001:%+.9,%+.9:.0001 Q:DE>A&'$D(^DD(DE))
"RTN","DICATT22",23,0)
 I DUZ(0)="@" W !,"SUB-DICTIONARY NUMBER: "_DE_"// " R DG:DTIME S:'$T DTOUT=1 G:DG=U!'$T ^DICATT2 S:DG]"" DE=DG G Q:+DE'=DE!(DE<A)
"RTN","DICATT22",24,0)
 G Q:%+1'>DE!$D(^DD(DE)) S I=DE,^(I,0)=F_" SUB-FIELD^^.01^1",^(0,"UP")=A,^("NM",F)="",%X="^DD("_A_","_DA_")",@%X@(0)=F_"^^^"_W D P
"RTN","DICATT22",25,0)
 S W=$P(W,";") D SDIK S:+W'=W W=""""_W_""""
"RTN","DICATT22",26,0)
 S DICATT22=DA,(N,DICL)=N+1,I(N)=W,J(N)=DE,DA=.01,^DD(DE,DA,0)=F_U_Z_"^0;1^"_C,%Y="^DD("_DE_",.01)"
"RTN","DICATT22",27,0)
VARPOINT I T["V" D
"RTN","DICATT22",28,0)
 . N I,FI,FD,P
"RTN","DICATT22",29,0)
 . S FI=$QS(%X,1),FD=$QS(%X,2)
"RTN","DICATT22",30,0)
 . S I=0
"RTN","DICATT22",31,0)
 . F  S I=$O(@%X@("V",I)) Q:'I  S P=+$G(^(I,0)) K:P ^DD(P,0,"PT",FI,FD)
"RTN","DICATT22",32,0)
 . M @%Y@("V")=@%X@("V") K @%X@("V")
"RTN","DICATT22",33,0)
POINT I T["P" F %=12,12.1 I $D(@%X@(%)) S @%Y@(%)=@%X@(%) K @%X@(%)
"RTN","DICATT22",34,0)
 K %X,%Y
"RTN","DICATT22",35,0)
 I T'["W" D
"RTN","DICATT22",36,0)
 .S ^DD(DE,DA,1,0)="^.1",^(1,0)=DE_"^B",DIK=W_",""B"",$E(X,1,30),DA)"
"RTN","DICATT22",37,0)
 .F %=DICL-1:-1 S DIK=I(%)_$E(",",1,%)_"DA("_(DICL-%)_"),"_DIK I '% S ^(1)="S "_DIK_"=""""",^(2)="K "_DIK S:T["V" ^(3)="Required Index for Variable Pointer" Q
"RTN","DICATT22",38,0)
 D SDIK,I S DICL=DICL-1
"RTN","DICATT22",39,0)
 D AUDIT(DA(1),.01,"N") S DA=DICATT22 K DICATT22 ;AUDIT THE NEW .01 FIELD AT THE LOWER LEVEL
"RTN","DICATT22",40,0)
 G N^DICATT
"RTN","DICATT22",41,0)
 ;
"RTN","DICATT22",42,0)
AUDIT(DIFILE,DIFIELD,DITYPE) ;DATA DICTIONARY AUDIT
"RTN","DICATT22",43,0)
 N DDA,DA,B0,A0
"RTN","DICATT22",44,0)
 S DDA(1)=DIFILE,DA=DIFIELD,DDA=$G(DITYPE,"E")
"RTN","DICATT22",45,0)
 D AUDT^DICATTA
"RTN","DICATT22",46,0)
 Q
"RTN","DICATT22",47,0)
 ;
"RTN","DICATT22",48,0)
 ;
"RTN","DICATT22",49,0)
 ;
"RTN","DICATT22",50,0)
I K DR,DG,DB,DQ,DQI,^DD(U,$J),^UTILITY("DIVR",$J) S DG=$P(^DD(J(N),DA,0),U,2,99)
"RTN","DICATT22",51,0)
 I $P(O,U,2,99)'=DG S:$D(M)#2 ^DD(J(N),DA,3)=M S M(1)=0 ;IF WE HAVE NEW DEFINITION, WE HAVE A NEW HELP-PROMPT 
"RTN","DICATT22",52,0)
 ;K ^DD(DA(1),DA,.009) ; GET RID OF FOREIGN-LANGUAGE HELP MESSAGE WHEN THE BASIC ENGLISH ONE IS BEING RE-EDITED??
"RTN","DICATT22",53,0)
 S DIE=DIK,DR=$P(";21",U,'O) ;IF FIELD IS NEW, ASK DESCRIPTION
"RTN","DICATT22",54,0)
 S DR=$S(DUZ(0)="@"&($P(DG,U)'["t"):"3;4",1:3)_DR ;EXTENSIBLE DATA TYPE WILL HOLD XECUTABLE HELP.  OTHERWISE ASK THEM
"RTN","DICATT22",55,0)
 D
"RTN","DICATT22",56,0)
 .N I,J,T
"RTN","DICATT22",57,0)
 .D ^DIE
"RTN","DICATT22",58,0)
 I T="W" K DE
"RTN","DICATT22",59,0)
 I $D(M)>9,O S V=DICL,DR=$P(Z,U),Z=$P(Z,U,2) D  ;It's not clear that we need these variables set, now we are calling DIVR^DIUTL 12/01
"RTN","DICATT22",60,0)
V .N D0 S DI=J(N) D DIPZ^DIU0 Q:$D(DTOUT)!'$D(DIZ)  ;NEEDS 'DI' & 'DA'
"RTN","DICATT22",61,0)
 .D DIVR^DIUTL(A,DA)
"RTN","DICATT22",62,0)
 K DR,M Q
"RTN","DICATT22",63,0)
 ;
"RTN","DICATT22",64,0)
 ;
"RTN","DICATT22",65,0)
P F Y="S","D","P","A","V" S:I[Y I=$P(I,Y)_$P(I,Y,2)_$P(I,Y,3) S:T[Y I=I_Y
"RTN","DICATT22",66,0)
 S ^(0)=$P(^(0),U)_U_I_U_$P(^(0),U,3,99) Q
"RTN","DICATT22",67,0)
 ;
"RTN","DICATT22",68,0)
SDIK N %X
"RTN","DICATT22",69,0)
 S DA(1)=J(DICL),DIK="^DD("_DA(1)_"," I O K ^DD(DA(1),"RQ",DA)
"RTN","DICATT22",70,0)
 W !,"...." G IX1^DIK
"RTN","DICATT4")
0^47^B28807089^B28137187
"RTN","DICATT4",1,0)
DICATT4 ;SFISC/XAK - DELETE A FIELD ;12NOV2015
"RTN","DICATT4",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATT4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATT4",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATT4",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATT4",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATT4",7,0)
 ;
"RTN","DICATT4",8,0)
DIEZ S DI=A,DA=D0 D DIPZ^DIU0
"RTN","DICATT4",9,0)
 K ^DD(A,0,"ID",D0),^DD(A,0,"SP",D0)
"RTN","DICATT4",10,0)
EN I $O(@(I(0)_"0)"))>0 D
"RTN","DICATT4",11,0)
 .N X,T,Y,Z,MUL
"RTN","DICATT4",12,0)
 .S MUL=+$P(O,U,2)
"RTN","DICATT4",13,0)
 .S %=1,Y=$P(O,U,4),X=$P(Y,";"),Y=$P(Y,";",2),Z=$S(+X=X:X,1:""""_X_"""")_")",E="^("_Z
"RTN","DICATT4",14,0)
 .I $O(^DD(A,"GL",X,""))="" S T="K ^(M,"_Z G F
"RTN","DICATT4",15,0)
 .I Y S T="U_$P("_E_",U,"_(Y+1)_",999) K:"_E_"?.""^"" "_E S:Y>1 T="$P("_E_",U,1,"_(Y-1)_")_U_"_T
"RTN","DICATT4",16,0)
 .E  S X=+$E(Y,2,4),Y=+$P(Y,",",2) Q:'X!'Y  S T="$E("_E_",1,"_(X-1)_")_$J("""","_(Y-X+1)_")_$E("_E_","_(Y+1)_",999)"
"RTN","DICATT4",17,0)
 .S T="I $D(^(M,"_Z_")#2 S "_E_"="_T
"RTN","DICATT4",18,0)
F .I '$D(DIU(0)) W $C(7),!,"OK TO DELETE '",$P(M,U),"' FIELDS IN THE EXISTING ENTRIES" D YN^DICN I %-1 D:'$D(DIU) DELXRF(A,D0) Q
"RTN","DICATT4",19,0)
KILLIX .I $D(DICATT4M) D  S M="" F  S M=$O(^DD(J(0),0,"IX",M)) Q:M=""  I $O(^(M,MUL,0)) K @(I(0)_""""_M_""")")
"RTN","DICATT4",20,0)
 ..D INDEX^DIKC(J(0),"","","","KiRW"_MUL)
"RTN","DICATT4",21,0)
 .E  D:'$D(DIU) DELXRF(A,D0,1,J(0))
"RTN","DICATT4",22,0)
 .S M="",X=DICL,Y=I(0) I $D(DQI) K @(I(0)_""""_DQI_""")")
"RTN","DICATT4",23,0)
L .S O="M" S:X O=O_"("_X_")" S Y=Y_O,M=M_"F "_O_"=0:0 S "_O_"=$O("_Y_")) Q:"_O_"'>0  "
"RTN","DICATT4",24,0)
 .S X=X-1 I X+1 S Y=Y_","_I(DICL-X)_"," G L
"RTN","DICATT4",25,0)
 .S M=M_"X T"_$P(" W "".""",U,$S('$D(DIU(0)):1,DIU(0)["E":1,1:0))
"RTN","DICATT4",26,0)
 .X M ;HERE'S THE LOOP WHERE WE KILL THE VALUES!
"RTN","DICATT4",27,0)
N Q:$D(DIU)!$D(DICATT4M)  G N^DICATT
"RTN","DICATT4",28,0)
 ;
"RTN","DICATT4",29,0)
NEW ;Delete the data in the multiple
"RTN","DICATT4",30,0)
 S DICATT4M=$NA(^DD(A,D0))
"RTN","DICATT4",31,0)
 S DICATT4M("SB")=$NA(^DD(A,"SB",+$P(O,U,2),D0))
"RTN","DICATT4",32,0)
 S ^DD(A,D0,0)=O,^DD(A,"SB",+$P(O,U,2),D0)=""
"RTN","DICATT4",33,0)
 D DICATT4
"RTN","DICATT4",34,0)
 K @DICATT4M,@DICATT4M("SB"),DICATT4M
"RTN","DICATT4",35,0)
 ;
"RTN","DICATT4",36,0)
 ;Kill the DD globals and go back to N^DICATT
"RTN","DICATT4",37,0)
 D KDD G N^DICATT
"RTN","DICATT4",38,0)
 ;
"RTN","DICATT4",39,0)
VP ; VARIABLE POINTER
"RTN","DICATT4",40,0)
 S DA(2)=DA(1),DA(1)=DA,DICATT=DA I $D(DICS) S DICSS=DICS K DICS
"RTN","DICATT4",41,0)
V S DA(2)=A,DA(1)=DICATT,DIC="^DD("_A_","_DICATT_",""V"",",DIC("P")=".12P",DIC(0)="QEAMLI",DIC("W")="W:$S($D(^DIC(+^(0),0)):$P(^(0),U)'=$P(^DD(DA(2),DA(1),""V"",+Y,0),U,2),1:0) ?30,$P(^(0),U,2)" D ^DIC S DIE=DIC K DIC
"RTN","DICATT4",42,0)
 I Y>0 S DA=+Y,Z="P",DR=".01:.04;"_$S($P($G(^DD(+$P(Y,U,2),0,"DI")),U,2)["Y":".06///n",1:".06T")_";S:DUZ(0)'=""@"" Y=0;.05;I ""n""[X K ^DD(DA(2),DA(1),""V"",DA,1),^(2) S Y=0;S DIE(""NO^"")=""BACK"";1;2;" S:$P(Y,U,3) DIE("NO^")=""
"RTN","DICATT4",43,0)
 I Y>0 D ^DIE K DIE W ! S:$D(DTOUT) DA=DICATT G CHECK^DICATT:$D(DTOUT),V
"RTN","DICATT4",44,0)
 S Z="V^",DIZ=Z,C="Q",L=18,DA=DICATT,DA(1)=A S:$D(DICSS) DICS=DICSS K DICSS,DR,DIE,DA(2),DICATT G CHECK^DICATT:$D(DTOUT)!(X=U),^DICATT1
"RTN","DICATT4",45,0)
 Q
"RTN","DICATT4",46,0)
HELP ;
"RTN","DICATT4",47,0)
 W !?5,"Enter a MUMPS statement that sets DIC(""S"") to code that sets $T."
"RTN","DICATT4",48,0)
 W !?5,"Those entries for which $T=1 will be selectable."
"RTN","DICATT4",49,0)
 I Z?1"P".E D  Q
"RTN","DICATT4",50,0)
 . W !?5,"The naked reference will be at the zeroeth node of the pointed to"
"RTN","DICATT4",51,0)
 . W !?5,"file, e.g., ^DIZ(9999,Entry Number,0).  The internal entry number"
"RTN","DICATT4",52,0)
 . W !?5,"of the entry that is being processed in the pointed to file will be"
"RTN","DICATT4",53,0)
 . W !?5,"in the variable Y."
"RTN","DICATT4",54,0)
 W !?5,"The variable Y will be equal to the internally-stored code of the item"
"RTN","DICATT4",55,0)
 W !?5,"in the set which is being processed."
"RTN","DICATT4",56,0)
 Q
"RTN","DICATT4",57,0)
KDD ;
"RTN","DICATT4",58,0)
 I '$D(DIANC) S X=A F  S DIANC(X)="" Q:$D(^DD(X,0,"UP"))[0  S X=^("UP")
"RTN","DICATT4",59,0)
 S DQ=$O(DQ(0)),X=0 I DQ="" S DQ=-1 K DIANC Q
"RTN","DICATT4",60,0)
 D KIX(.DIANC,DQ)
"RTN","DICATT4",61,0)
 F  S X=$O(^DD(DQ,"SB",X)) Q:'X  S DQ(X)=0
"RTN","DICATT4",62,0)
 N DIFLD S DIFLD=0 F  S DIFLD=$O(^DD(DQ,DIFLD)) Q:'DIFLD  D
"RTN","DICATT4",63,0)
 . I $D(^DD(DQ,DIFLD,9.01)) S X=^(9.01),Y=DIFLD D KACOMP
"RTN","DICATT4",64,0)
 . D KTRB(.DIANC,DQ,DIFLD)
"RTN","DICATT4",65,0)
 . S X=$P($G(^DD(DQ,DIFLD,0)),U,2) I X["t" D AFDEFDEL^DIETLIB(DQ,DIFLD) Q  ;DELETE EXTENDED DATA TYPE CROSS-REFERENCE
"RTN","DICATT4",66,0)
 . I X["P" S X=+$P(X,"P",2) K:X ^DD(X,0,"PT",DQ,DIFLD) Q
"RTN","DICATT4",67,0)
 . F %=0:0 S %=$O(^DD(DQ,DIFLD,"V",%)) Q:'%  S X=+$G(^(%,0)) K:X ^DD(X,0,"PT",DQ,DIFLD)
"RTN","DICATT4",68,0)
 . Q
"RTN","DICATT4",69,0)
 K DQ(DQ),^DD(DQ),^DD("ACOMP",DQ),^DDA(DQ)
"RTN","DICATT4",70,0)
 S Y=0 F  S Y=$O(DIANC(Y)) Q:'Y  K ^DD(Y,"TRB",DQ)
"RTN","DICATT4",71,0)
 D DELXR(DQ)
"RTN","DICATT4",72,0)
 S Y=0 F  S Y=$O(^DIE("AF",DQ,Y)) Q:Y=""  S %=0 F  S %=$O(^DIE("AF",DQ,Y,0)) Q:%=""  K ^(%),^DIE(%,"ROU")
"RTN","DICATT4",73,0)
 S Y=0 F  S Y=$O(^DIPT("AF",DQ,Y)) G KDD:Y="" S %=0 F  S %=$O(^DIPT("AF",DQ,Y,0)) Q:%=""  K ^(%),^DIPT(%,"ROU")
"RTN","DICATT4",74,0)
 ;
"RTN","DICATT4",75,0)
KIX(DIANC,DIFIL) ;
"RTN","DICATT4",76,0)
 N F,NM
"RTN","DICATT4",77,0)
 S F=0 F  S F=$O(DIANC(F)) Q:'F  D
"RTN","DICATT4",78,0)
 . S NM="" F  S NM=$O(^DD(F,0,"IX",NM)) Q:NM=""  K:$D(^(NM,DIFIL)) ^(DIFIL)
"RTN","DICATT4",79,0)
 Q
"RTN","DICATT4",80,0)
KACOMP N DA,I,% S DA(1)=DQ,DA=Y X ^DD(0,9.01,1,1,2) Q
"RTN","DICATT4",81,0)
 ;
"RTN","DICATT4",82,0)
KTRB(DIANC,DIFIL,DIFLD) ;Kill 5 node of triggered field
"RTN","DICATT4",83,0)
 ;Also kill "TRB" nodes here if triggered field is in another file
"RTN","DICATT4",84,0)
 N %,F,DITFLD,DITFIL,DIXR,DIXR0
"RTN","DICATT4",85,0)
 S DIXR=0
"RTN","DICATT4",86,0)
 F  S DIXR=$O(^DD(DIFIL,DIFLD,1,DIXR)) Q:'DIXR  S DIXR0=$G(^(DIXR,0)) D:$P(DIXR0,U,3)="TRIGGER"
"RTN","DICATT4",87,0)
 . S DITFIL=$P(DIXR0,U,4),DITFLD=$P(DIXR0,U,5) Q:'DITFIL!'DITFLD
"RTN","DICATT4",88,0)
 . S %=0
"RTN","DICATT4",89,0)
 . F  S %=$O(^DD(DITFIL,DITFLD,5,%)) Q:'%  I $P($G(^(%,0)),U,1,3)=(DIFIL_U_DIFLD_U_DIXR) D  Q
"RTN","DICATT4",90,0)
 .. K ^DD(DITFIL,DITFLD,5,%) Q:DITFIL=DIFIL!$D(DIANC(DITFIL))
"RTN","DICATT4",91,0)
 .. S F=DITFIL
"RTN","DICATT4",92,0)
 .. F  K ^DD(F,"TRB",DIFIL) S F=$G(^DD(F,0,"UP")) Q:'F!$D(DIANC(+F))
"RTN","DICATT4",93,0)
 Q
"RTN","DICATT4",94,0)
DELXR(DIFIL) ;Delete the Key and Index file entries for file DIFIL
"RTN","DICATT4",95,0)
 Q:'$G(DIFIL)
"RTN","DICATT4",96,0)
 N DA,DIK
"RTN","DICATT4",97,0)
 ;
"RTN","DICATT4",98,0)
 ;Kill keys on file DIFIL
"RTN","DICATT4",99,0)
 S DIK="^DD(""KEY"","
"RTN","DICATT4",100,0)
 S DA=0 F  S DA=$O(^DD("KEY","B",DIFIL,DA)) Q:'DA  D ^DIK
"RTN","DICATT4",101,0)
 ;
"RTN","DICATT4",102,0)
 ;Kill indexes on file DIFIL
"RTN","DICATT4",103,0)
 S DIK="^DD(""IX"","
"RTN","DICATT4",104,0)
 S DA=0 F  S DA=$O(^DD("IX","AC",DIFIL,DA)) Q:'DA  D ^DIK
"RTN","DICATT4",105,0)
 Q
"RTN","DICATT4",106,0)
 ;
"RTN","DICATT4",107,0)
DELXRF(DIFIL,DIFLD,DIFLG,DITOPFIL) ;Delete Keys and Indexes on field
"RTN","DICATT4",108,0)
 ;If DIFLG=1, also delete the Indexes from the data global.
"RTN","DICATT4",109,0)
 Q:'$G(DIFIL)!'$G(DIFLD)
"RTN","DICATT4",110,0)
 N DA,DIK
"RTN","DICATT4",111,0)
 ;
"RTN","DICATT4",112,0)
 ;Execute the kill logic for all indexes defined on the field
"RTN","DICATT4",113,0)
 ;for all entries in the file.
"RTN","DICATT4",114,0)
 I $G(DIFLG) D
"RTN","DICATT4",115,0)
 . S:$G(DITOPFIL)="" DITOPFIL=$$FNO^DILIBF(DIFIL)
"RTN","DICATT4",116,0)
 . D:DITOPFIL INDEX^DIKC(DITOPFIL,"",DIFLD,"","RKW"_DIFIL)
"RTN","DICATT4",117,0)
 ;
"RTN","DICATT4",118,0)
 ;Kill keys on file/field
"RTN","DICATT4",119,0)
 S DIK="^DD(""KEY"","
"RTN","DICATT4",120,0)
 S DA=0 F  S DA=$O(^DD("KEY","F",DIFIL,DIFLD,DA)) Q:'DA  D ^DIK
"RTN","DICATT4",121,0)
 ;
"RTN","DICATT4",122,0)
 ;Kill indexes on file/field
"RTN","DICATT4",123,0)
 S DIK="^DD(""IX"","
"RTN","DICATT4",124,0)
 S DA=0 F  S DA=$O(^DD("IX","F",DIFIL,DIFLD,DA)) Q:'DA  D ^DIK
"RTN","DICATT4",125,0)
 Q
"RTN","DICATTD")
0^21^B31284098^B27978166
"RTN","DICATTD",1,0)
DICATTD ;SFISC/GFT - SCREEN-MODE 'MODIFY FILE ATTRIBUTES' ;22DEC2015
"RTN","DICATTD",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATTD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTD",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATTD",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATTD",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATTD",7,0)
 ;
"RTN","DICATTD",8,0)
 N DG,DLAYGO,DIC,DICATTB,DICATTA,DICATTF,DA,DDA
"RTN","DICATTD",9,0)
 K ^UTILITY("DICATTD",$J),^UTILITY("DDA",$J) ;auditing
"RTN","DICATTD",10,0)
 S DLAYGO=1 D D^DICRW Q:Y<0  I $P($G(^DD(+Y,0,"DI")),U)["Y",$P(@(^DIC(+Y,0,"GL")_"0)"),U,4) W !!,$C(7),"DATA DICTIONARY MODIFICATIONS ON ARCHIVE FILES ARE NOT ALLOWED!" Q
"RTN","DICATTD",11,0)
 I '$D(DIC) D DIE^DIB Q:'$D(DG)  S DIC=DG
"RTN","DICATTD",12,0)
LOCK S (DA,DICATTB,DICATTA)=+$P(@(DIC_"0)"),U,2) L +^DICATTD(DA):1 E  W !!,"SOMEONE ELSE IS EDITING THIS FILE" Q  ;N.B.--There is no such Global as ^DICATTD
"RTN","DICATTD",13,0)
DDA S DDA="" ;DD auditing
"RTN","DICATTD",14,0)
ASKLOOP F  K DICATTF D M I $S('$D(DICATTF):1,'$D(^DD(DICATTA)):1,DICATTF-.01:0,1:$P(^DD(DICATTA,DICATTF,0),U,2)["W") Q:DICATTA=DICATTB  S DICATTA=DICATTB
"RTN","DICATTD",15,0)
END L -^DICATTD(DICATTB) Q
"RTN","DICATTD",16,0)
 ;
"RTN","DICATTD",17,0)
M N DICATTVP,DICATTDK,DICATT2N,DICATTMN,DICATTDW,DDSERROR,DICS,DICATTSC
"RTN","DICATTD",18,0)
 N DICATT2,DICATT4,DICATT3,DICATT3N,DICATTL,DICATTLN,DICATT5,DICATT5N,DICATT5P
"RTN","DICATTD",19,0)
 N O,DIU0,I,J,DR,A,DQ
"RTN","DICATTD",20,0)
 N DDSFILE,DIMSG,DUOUT,DTOUT,DDSPAGE,DDSPARM,DDSSAVE,DICATTNW
"RTN","DICATTD",21,0)
FIELD W !!! K DIC,O,^UTILITY("DICATTD",$J) ;clean WP buffer
"RTN","DICATTD",22,0)
 S DIC(0)="ALEQIZ",DIC="^DD("_DICATTA_"," S:$D(DICS) DIC("S")=DICS
"RTN","DICATTD",23,0)
 S DIC("W")="S %=$P(^(0),U,2) I % W $P(""  (multiple)^  (word-processing)"",U,$P(^DD(+%,.01,0),U,2)[""W""+1)"
"RTN","DICATTD",24,0)
 I $P(^DD(DICATTA,.01,0),U,2)["W" S DIC(0)="AEQZ",DIC("B")=.01
"RTN","DICATTD",25,0)
 D ^DIC K DIC I Y<0 K DICATTF Q  ;look-up
"RTN","DICATTD",26,0)
NEWFIELD I $P(Y,U,3) S DICATTNW=1 S:$D(DDA) DDA="N"
"RTN","DICATTD",27,0)
 E  S DIU0=DICATTA,O(1)=$P(^(0),U,1,2),O(2)=$G(^(.1)) I $D(DDA) D
"RTN","DICATTD",28,0)
 .N A S A=DIU0 S DDA="E" D SV^DICATTA
"RTN","DICATTD",29,0)
 S:$D(DDA) DDA(1)=DICATTA
"RTN","DICATTD",30,0)
 S DICATTF=+Y
"RTN","DICATTD",31,0)
 D GET
"RTN","DICATTD",32,0)
MUL I DICATT2 D  Q:'DICATTA!'$D(^DD(DICATTA))  G FIELD ;If it's multiple...
"RTN","DICATTD",33,0)
 .N DICATT2N,DDSPAGE,DDSPARM,DDSSAVE
"RTN","DICATTD",34,0)
 .S DDSPARM="S",DDSPAGE=10 D DDS ;...we do Page 10
"RTN","DICATTD",35,0)
 .I $G(DDSSAVE) S DICATTA=+$G(DICATT2) ;Go down into multiple unless they aborted  with F1-Q
"RTN","DICATTD",36,0)
DDS K DDSSAVE,DIMSG S DDSPARM="S",DA="",DR="[DICATT]",DDSFILE=1
"RTN","DICATTD",37,0)
 D ^DDS ;invoke SCREENMAN!
"RTN","DICATTD",38,0)
 Q:'$D(^DD(DICATTA,DICATTF,0))
"RTN","DICATTD",39,0)
 S DICATT2N=$P(^(0),U,2) I DICATT2N="",DICATTF-.01 D DELFLD^DICATTDK(DICATTA,DICATTF) Q  ;delete field
"RTN","DICATTD",40,0)
VERIFY I '$D(DTOUT),'$D(DIMSG),$D(DDSSAVE) D N^DICATTDE I 'DICATT2N,'$G(DICATTNW),$D(DICATTMN) D DIVR^DIUTL(DICATTA,DICATTF) ;re-verify fields
"RTN","DICATTD",41,0)
 Q
"RTN","DICATTD",42,0)
 ;
"RTN","DICATTD",43,0)
GET ;SET UP THE VARIABLES ABOUT THIS FIELD
"RTN","DICATTD",44,0)
 K DICATT2N,DICATT3N,DICATT5N,DICATTLN,DICATT5P
"RTN","DICATTD",45,0)
 S DICATT2=$P(^DD(DICATTA,DICATTF,0),U,2),DICATT3=$P(^(0),U,3),DICATT4=$P(^(0),U,4),DICATT5=$P(^(0),U,5,99)
"RTN","DICATTD",46,0)
 I $D(^DD(DICATTA,DICATTF,"V")) D GET^DICATTD8 ;Variable-pointer
"RTN","DICATTD",47,0)
 Q
"RTN","DICATTD",48,0)
 ;
"RTN","DICATTD",49,0)
PRE ;PRE-ACTION of first block
"RTN","DICATTD",50,0)
 N DIAC,DIFILE
"RTN","DICATTD",51,0)
 I DICATTF=.01 D REQ^DDSUTL(1,"DICATT",1,1) ;for now
"RTN","DICATTD",52,0)
 I DICATT2["C" D CUNED^DICATTD6(DICATT2)
"RTN","DICATTD",53,0)
 I DICATT2["W" F X=18 D UNED(X)
"RTN","DICATTD",54,0)
 S X=1 I DICATTF=.01,DICATTA-DICATTB S X=2
"RTN","DICATTD",55,0)
 D UNED^DDSUTL(20.5,"DICATT",1,X) ;2 means REACHABLE but not EDITABLE
"RTN","DICATTD",56,0)
 S DIAC="AUDIT",DIFILE=DICATTB D ^DIAC I %-1 D UNED(3) ;check AUDIT ACCESS
"RTN","DICATTD",57,0)
 I DUZ(0)'="@" D  ;only programmers can...
"RTN","DICATTD",58,0)
 .D UNED(4),UNED(99) ; ..edit AUDIT CONDITION, XECUTABLE HELP, or ...
"RTN","DICATTD",59,0)
 .I DICATT2["X" D X,UNED(1),UNED(2) ;edit LABEL of 'X' field,  or ...
"RTN","DICATTD",60,0)
 .I $$TYPE=9 D UNED(20) ;edit a MUMPS type
"RTN","DICATTD",61,0)
 .F I=4,5 D UNED^DDSUTL(I,"DICATTVP",8,1) ;build VARIABLE-POINTER SCREEN
"RTN","DICATTD",62,0)
 .F I=16,17 D UNED^DDSUTL(I,"DICATTM",3,1) ;specify location of
"RTN","DICATTD",63,0)
 .F I=76,76.1 D UNED^DDSUTL(I,"DICATTS",4,1) ;...data
"RTN","DICATTD",64,0)
 Q:DICATT2'["X"
"RTN","DICATTD",65,0)
X I DICATT2'["F" D UNED(20) D HLP^DDSUTL("NOTE THAT THIS FIELD'S DEFINITION IS NOT EDITABLE") Q
"RTN","DICATTD",66,0)
 D UNED^DDSUTL(20,"DICATT",1,2) ;FREE-TEXT DATA TYPE REACHABLE BUT NOT EDITABLE
"RTN","DICATTD",67,0)
 F I=68,70 D UNED^DDSUTL(I,"DICATT4",2.4,1) ;MINIMUM LENGTH & PATTERN MATCH NOT EDITABLE
"RTN","DICATTD",68,0)
 S DICATT5="$L(X)>"_$$FL^DIQGDDU(DICATTA,DICATTF)
"RTN","DICATTD",69,0)
 Q
"RTN","DICATTD",70,0)
 ;
"RTN","DICATTD",71,0)
UNED(I) D UNED^DDSUTL(I,"DICATT",1,1) Q
"RTN","DICATTD",72,0)
 ;
"RTN","DICATTD",73,0)
NUMBER ;
"RTN","DICATTD",74,0)
 D IJ^DIUTL(DICATTA) S Y=" File #"_J(0)
"RTN","DICATTD",75,0)
 F I=1:1 Q:'$D(J(I))  S Y=" Sub-File #"_J(I)_" of"_Y
"RTN","DICATTD",76,0)
 S Y="Field #"_DICATTF_" in"_Y
"RTN","DICATTD",77,0)
 I $P($G(^DD(DICATTA,DICATTF,0)),U,2) S Y="Multiple "_Y
"RTN","DICATTD",78,0)
 S Y=$J("",78-$L(Y)\2)_Y Q
"RTN","DICATTD",79,0)
 ;
"RTN","DICATTD",80,0)
TYPE() ;Figure out TYPE from the second piece of the zero node
"RTN","DICATTD",81,0)
 I DICATT2="" Q ""
"RTN","DICATTD",82,0)
 I DICATT2["t" S N=+$P(DICATT2,"t",2)
"RTN","DICATTD",83,0)
 E  F N=9:-1:5,1:1:4,100 I DICATT2[$E("DNSFWCPVK",N) Q
"RTN","DICATTD",84,0)
 E  S:N=100 N=4
"RTN","DICATTD",85,0)
 Q N
"RTN","DICATTD",86,0)
 ;
"RTN","DICATTD",87,0)
SCREEN ;
"RTN","DICATTD",88,0)
 N N
"RTN","DICATTD",89,0)
 I DICATTF=.001 S DIR("S")="I Y<4!(Y=7)" Q
"RTN","DICATTD",90,0)
 S N=$$TYPE I N="" S DIR("S")="I Y<10!$O(^(201,0))!$O(^DI(.81,Y,101,0))" S:DUZ(0)'="@" DIR("S")=DIR("S")_",Y-9" Q  ;IF FIELD IS NEW, ONLY A PROGRAMMER CAN CREATE 'MUMPS' TYPE
"RTN","DICATTD",91,0)
 I N=6 S DIR("S")="I Y=6" Q  ;can't change a COMPUTED FIELD's type
"RTN","DICATTD",92,0)
 S DIR("S")="I Y-6,Y-9,Y-99,Y<10!$O(^(201,0))!$O(^DI(.81,Y,101,0))"_$P(",Y-5",U,N\2-2!'$D(^DD(DICATTA,0,"UP"))!(DICATTF-.01)!($O(^DD(DICATTA,DICATTF))>0))_$S(N=7:",Y-8",N=8:",Y-7",1:"")
"RTN","DICATTD",93,0)
 Q
"RTN","DICATTD",94,0)
 ;
"RTN","DICATTD",95,0)
BRANCH ;given X=TYPE
"RTN","DICATTD",96,0)
 F I=31,32 D REQ^DDSUTL(I,"DICATT2",2.2,X=2) ;UPPER BOUND & LOWER BOUND if we are doing a NUMERIC
"RTN","DICATTD",97,0)
 F I=68,69 D REQ^DDSUTL(I,"DICATT4",2.4,X=4&(DICATT2'["X")) ;MAX LENGTH & MIN LENGTH if we are doing a FREE TEXT (but not if UNEDITABLE)
"RTN","DICATTD",98,0)
 I X=9 G ^DICATTD9
"RTN","DICATTD",99,0)
 I DICATT4="",DICATTF>.001 D UNED^DDSUTL(20.5,"DICATT",1,X=5) ;W-P doesn't ask MULTIPLE
"RTN","DICATTD",100,0)
 K DICATTSC
"RTN","DICATTD",101,0)
 I X>9 S:$G(DICATT2)="" DDSBR=20.5 D  Q
"RTN","DICATTD",102,0)
 .D SCREENMN^DICATTUD ;EXTENSIBLE DATA TYPE
"RTN","DICATTD",103,0)
 E  S DDSSTACK="2."_X Q  ;For types 1-8, go to PAGE 2.1 - 2.8
"RTN","DICATTD",104,0)
 ;
"RTN","DICATTD",105,0)
CHNG I DICATT5N=DICATT5 K DICATTMN ;No DICATTMN means no change
"RTN","DICATTD",106,0)
 D:$D(DICATTMN) PUT^DDSVALF(98,"DICATT",1,DICATTMN) ;HELP-PROMPT prompted
"RTN","DICATTD",107,0)
 Q
"RTN","DICATTD",108,0)
 ;
"RTN","DICATTD0")
0^42^B3051910^B2307008
"RTN","DICATTD0",1,0)
DICATTD0 ;O-OIFO/GFT - CREATE WORD-PROCESSING ATTRIBUTES IN SCREENMAN ;29AUG2015
"RTN","DICATTD0",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATTD0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTD0",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATTD0",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATTD0",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATTD0",7,0)
 ;;GFT;**1053**;
"RTN","DICATTD0",8,0)
 ;
"RTN","DICATTD0",9,0)
 ;
"RTN","DICATTD0",10,0)
WORD(DICT) ;DICT=21 or 23  for DESCRIPTION and TECHNICAL DESCRIPTION
"RTN","DICATTD0",11,0)
 N DIC,DUOUT,DTOUT,DICR,DIWETXT
"RTN","DICATTD0",12,0)
 D DICR
"RTN","DICATTD0",13,0)
 I $D(@DICR)=0 M @DICR=^DD(DICATTA,DICATTF,DICT) S DICATTDW(DICT)=1 I $D(@DICR)=0 S @DICR@(0)=0
"RTN","DICATTD0",14,0)
 S DIWETXT="Editing '"_$P(^DD(DICATTA,DICATTF,0),U)_"' "_$P(^DD(0,DICT,0),U)
"RTN","DICATTD0",15,0)
 S DIC=$P(DICR,")")_"," D EN^DIWE
"RTN","DICATTD0",16,0)
 I $D(DUOUT)!$D(DTOUT) K @DICR,DICATTDW(DICT) W $$EZBLD^DIALOG(8077)
"RTN","DICATTD0",17,0)
 S DDSCHG=1 Q
"RTN","DICATTD0",18,0)
 ;
"RTN","DICATTD0",19,0)
DICR S DICR="^UTILITY(""DICATTD"",$J,DICT)" Q
"RTN","DICATTD0",20,0)
 ;
"RTN","DICATTD0",21,0)
 ;
"RTN","DICATTD0",22,0)
WPLUS(DICT) ;FROM PAGE 1 OF 'DICATT' FORM    DICT=21 OR 23  DESCRIPTION OR TECHNICAL DESCRIPTION
"RTN","DICATTD0",23,0)
 D DICR I $O(@DICR@(0)) Q "+" ;IF THERE IS TEXT IN THE TEMPORARY GLOBAL
"RTN","DICATTD0",24,0)
 I $O(^DD(DICATTA,DICATTF,DICT,0)) Q "+" ;IF THERE IS TEXT IN THE FIELD ITSELF
"RTN","DICATTD0",25,0)
 Q ""
"RTN","DICATTD0",26,0)
 ;
"RTN","DICATTD0",27,0)
 ;
"RTN","DICATTD0",28,0)
 ;
"RTN","DICATTD0",29,0)
FILEWORD ;when we're done
"RTN","DICATTD0",30,0)
 N DICT,DICR
"RTN","DICATTD0",31,0)
 D DICR
"RTN","DICATTD0",32,0)
 F DICT=21,23 D
"RTN","DICATTD0",33,0)
 .I $D(DICATTDW(DICT)) K ^DD(DICATTA,DICATTF,DICT) M ^DD(DICATTA,DICATTF,DICT)=@DICR
"RTN","DICATTD0",34,0)
 Q
"RTN","DICATTD0",35,0)
 ;
"RTN","DICATTDE")
0^40^B35121776^B32549326
"RTN","DICATTDE",1,0)
DICATTDE ;O-OIFO/GFT - END screen edit ;6MAY2016
"RTN","DICATTDE",2,0)
 ;;22.2;VA FileMan;**3,2**;Jan 05, 2016;Build 139
"RTN","DICATTDE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTDE",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATTDE",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATTDE",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATTDE",7,0)
 ;;GFT;**1,42,83,103,999,1004,1027,1028,1032,1042,1043,1055**
"RTN","DICATTDE",8,0)
 ;
"RTN","DICATTDE",9,0)
LAYGODEF ;should user see 'ADDING NEW'?
"RTN","DICATTDE",10,0)
 N %
"RTN","DICATTDE",11,0)
 I DICATTF=.01,$G(^DD(DICATTA,0,"UP")) S Y=^("UP"),%=$O(^DD(Y,"SB",DICATTA,0)) I %,$P($G(^DD(Y,%,0)),U,2)["A" S Y="NO" Q
"RTN","DICATTDE",12,0)
 S Y="YES"
"RTN","DICATTDE",13,0)
 Q
"RTN","DICATTDE",14,0)
 ;
"RTN","DICATTDE",15,0)
POST ;This is the DATA VALIDATION of the DICATT FORM
"RTN","DICATTDE",16,0)
 N DICATT1N,DICATTM,DICATT4N,DICATT4S,DICATTED,X,T,G,DIC,DIE,DR,DA
"RTN","DICATTDE",17,0)
 K DDSBR,DDSERROR
"RTN","DICATTDE",18,0)
 I DICATT2 G MULEDIT^DICATTDD
"RTN","DICATTDE",19,0)
VP I $$G(20)=8 D POSTVP^DICATTD8 I $D(DDSBR) S DDSERROR=1,DDSBR=DDSBR_"^DICATT8^2.8" Q
"RTN","DICATTDE",20,0)
 S DICATT1N=$$G(1)
"RTN","DICATTDE",21,0)
 I DICATT1N="" G ^DICATTDK:$D(DICATTDK) S DDSBR=1,DDSERROR=1 Q
"RTN","DICATTDE",22,0)
 I DICATT1N=$$G(2) S DDSERROR=1,DDSBR=1 D HLP^DDSUTL("NAME AND TITLE MUST BE DIFFERENT") Q
"RTN","DICATTDE",23,0)
 I $G(DICATTLN) D  I $D(DDSERROR) D HLP^DDSUTL("YOUR REDEFINITION OF THE FIELD WOULD CAUSE TOO MUCH DATA STORAGE!") Q
"RTN","DICATTDE",24,0)
 .N W,DP,N,A,L,Y
"RTN","DICATTDE",25,0)
 .S A=DICATTA,DP=DICATTF,W=$P(^DD(A,DP,0),U,4),Y=$P(W,";"),N=$P(W,";",2),T=0,L=DICATTLN Q:W=""
"RTN","DICATTDE",26,0)
 .D MX^DICATT1
"RTN","DICATTDE",27,0)
TOOMUCH .I $$MAX^DICATTDM(L-T,Y)>($G(^DD("STRING_LIMIT"),255)-4) S DDSERROR=1,DDSBR=20
"RTN","DICATTDE",28,0)
NEW I DICATT4="",'$D(DICATT4N)  D  I $D(DDSERROR) D HLP^DDSUTL("DATA-STORAGE INFO INCOMPLETE") Q
"RTN","DICATTDE",29,0)
 .I DICATTF=.001 S DICATT4N=" " Q
"RTN","DICATTDE",30,0)
 .S G=$$G(20) I G=6 S DICATT4N=" ; " Q
"RTN","DICATTDE",31,0)
 .I G=5!$$G(20.5) D  Q:$D(DDSERROR)  S DICATT4N=DICATTM(76)_";0" Q  ;Note that we can $$GET the defaulted values for storage, even if user has not seen Pages 3 or 4
"RTN","DICATTDE",32,0)
 ..F T=76,76.1 S DICATTM(T)=$$GET^DDSVALF(T,"DICATTS",4,"","") I DICATTM(T)="" S DDSERROR=1,DDSBR="76^DICATTS^4" Q
"RTN","DICATTDE",33,0)
 .S G=$$GET^DDSVALF(16,"DICATTM",3,"",""),T=$$GET^DDSVALF(17,"DICATTM",3,"","")
"RTN","DICATTDE",34,0)
 .I G=""!(T="") S DDSERROR=1,DDSBR="16^DICATTM^3" Q
"RTN","DICATTDE",35,0)
 .S DICATT4N=G_";"_T Q
"RTN","DICATTDE",36,0)
 S X=^DD(DICATTA,DICATTF,0) D  I $D(DDSERROR) D HLP^DDSUTL("FIELD DEFINITION IS TOO LONG!") Q  ;Can't fit it into the zero node
"RTN","DICATTDE",37,0)
 .S T=$L(DICATT1N)+$L($S($D(DICATT2N):DICATT2N,1:$P(X,U,2)))+$L($S($D(DICATT3N):DICATT3N,1:$P(X,U,3)))+$L($S($D(DICATT4N):DICATT4N,1:$P(X,U,4)))+$L($S($D(DICATT5N)#2:DICATT5N,1:$P(X,U,5,999)))
"RTN","DICATTDE",38,0)
 .I T>($G(^DD("STRING_LIMIT"),255)-13) S DDSERROR=1
"RTN","DICATTDE",39,0)
 ;
"RTN","DICATTDE",40,0)
FILE ;Everything's good!   We're gonna file it
"RTN","DICATTDE",41,0)
 I $G(DICATT2N)["t" M ^DD(DICATTA,DICATTF)=DICATTPM K DICATTPM
"RTN","DICATTDE",42,0)
 I $D(DICATT4N) S $P(^DD(DICATTA,DICATTF,0),U,4)=DICATT4N I DICATT4N'?.P S DICATT4S=$P(DICATT4N,";"),^DD(DICATTA,"GL",DICATT4S,$P(DICATT4N,";",2),DICATTF)="" ;new Piece 4
"RTN","DICATTDE",43,0)
 I $D(DICATTM),$D(DICATT4S) D  Q  ;make a MULTIPLE
"RTN","DICATTDE",44,0)
 .N TYPE S TYPE=$$G(20)
"RTN","DICATTDE",45,0)
 .D MULMAKE^DICATTDD(DICATTM(76.1),TYPE)
"RTN","DICATTDE",46,0)
WP .I TYPE=5 N DICATTA,DICATTF S:'$D(DICATT2N) DICATT2N="W" ;so we'll bounce back up from W-P multiple
"RTN","DICATTDE",47,0)
 .S DICATTA=DICATTM(76.1),DICATTF=.01,DICATTMN="" D CHANGED ;make the .01 Field of the new multiple
"RTN","DICATTDE",48,0)
 ;
"RTN","DICATTDE",49,0)
CHANGED S X=$E("R",$$G(18)) I DICATT2["R"'=$L(X)!$D(DICATTMN) D
"RTN","DICATTDE",50,0)
 .F %=DICATTA:0  S ^DD(%,0,"DT")=DT Q:'$D(^("UP"))  S %=^("UP") Q:'$D(^DD(%))
"RTN","DICATTDE",51,0)
 .S DICATTMN="" K ^DD(DICATTA,"RQ",DICATTF) I X["R" S ^(DICATTF)=""
"RTN","DICATTDE",52,0)
 .I '$D(DICATT2N) S DICATT2N=$TR(DICATT2,"R") I DICATT2["W" S DICATT2N="W"
"RTN","DICATTDE",53,0)
 .S DICATT2N=X_DICATT2N_$E("I",$G(DICATT2)["I")
"RTN","DICATTDE",54,0)
 .S %=$P(DICATT2,"P",2) I % K ^DD(+%,0,"PT",DICATTA,DICATTF) ;remove old PT node
"RTN","DICATTDE",55,0)
 .S %=$P(DICATT2N,"P",2) I % S ^DD(+%,0,"PT",DICATTA,DICATTF)=""
"RTN","DICATTDE",56,0)
DIK2 .I DICATT2["t" D AFDEFDEL^DIETLIB(DICATTA,DICATTF)
"RTN","DICATTDE",57,0)
COMPUTED .I DICATT2N["C" D
"RTN","DICATTDE",58,0)
 ..N DICOMPX,A,DA
"RTN","DICATTDE",59,0)
 ..S A=+$P(DICATT2,"p",2) I A,$D(^DD(A,0)) K ^(0,"PTC",DICATTA,DICATTF)
"RTN","DICATTDE",60,0)
 ..S A=+$P(DICATT2N,"p",2) I A,$D(^DD(A,0)) S ^(0,"PTC",DICATTA,DICATTF)=""
"RTN","DICATTDE",61,0)
 ..S (DA(1),A)=DICATTA,DA=DICATTF,DICOMPX=$G(DICATT5N(9.01)) K ^DD(A,DA,9.02) D ACOMP^DICATT3
"RTN","DICATTDE",62,0)
 .I DICATTF=.01 D
"RTN","DICATTDE",63,0)
 ..I DICATTA=DICATTB D  Q
"RTN","DICATTDE",64,0)
 ...I $D(^DIC(DICATTA,0,"GL")),$D(@(^("GL")_"0)")) D UP2("",DICATT2N)
"RTN","DICATTDE",65,0)
 ..S Y=$$GET^DDSVALF(2,"DICATTMUL",5,"I","") I Y?1N S DICATT2N=$E("M",Y=1)_DICATT2N
"RTN","DICATTDE",66,0)
 ..S DR=$$GET^DDSVALF(1,"DICATTMUL",5,"I","")
"RTN","DICATTDE",67,0)
 ..I $G(^DD(DICATTA,0,"UP")) S Y=^("UP"),%=$O(^DD(Y,"SB",DICATTA,0)) I Y,%,$D(^DD(Y,%,0)) D UP2(DR,DICATT2N) ;Reset the MULTIPLE field at the higher level
"RTN","DICATTDE",68,0)
 .S $P(^DD(DICATTA,DICATTF,0),U,2)=DICATT2N ;SET THE SPECIFIER!
"RTN","DICATTDE",69,0)
PIECE3 .I $D(DICATT3N) S $P(^(0),U,3)=$G(DICATT3N)
"RTN","DICATTDE",70,0)
 .I $D(DICATTVP) D FILE^DICATTD8
"RTN","DICATTDE",71,0)
DIK1 .N DIK,DA S DA=DICATTF,DA(1)=DICATTA,DIK="^DD("_DICATTA_",",DIK(1)=.2 D EN1^DIK ;CROSS-REFERENCE THE SPECIFIER!
"RTN","DICATTDE",72,0)
 ;
"RTN","DICATTDE",73,0)
SCREEN S %=$$GET^DDSVALF(65,"DICATT SCREEN",6,"I",""),X=$P(^DD(DICATTA,DICATTF,0),U,2) I %=0!(%="NO")!(X'["P"&(X'["S")) K ^(12),^(12.1)
"RTN","DICATTDE",74,0)
COMPNODS S %=9.2 F  K ^DD(DICATTA,DICATTF,%) S %=$O(^(%)) Q:%\1-9  ;KILL ALL THE 9.2 NODES
"RTN","DICATTDE",75,0)
 F %=8:0 S %=$O(DICATT5N(%)) Q:'%  S ^DD(DICATTA,DICATTF,%)=DICATT5N(%) ;SET THE 9.2 NODES
"RTN","DICATTDE",76,0)
 I $D(DICATT5N)#2 S $P(^(0),U,5,99)=DICATT5N
"RTN","DICATTDE",77,0)
 S DR="50////^S X=DT" F X=1:1:8 D 0
"RTN","DICATTDE",78,0)
 D DIE
"RTN","DICATTDE",79,0)
EGP ;K ^DD(DICATTA,DICATTF,.009) ;WHEN FIELD CHANGES, KILL OFF ITS HELP TRANSLATIONS
"RTN","DICATTDE",80,0)
 S DR="Q",X=98 D 0,DIE
"RTN","DICATTDE",81,0)
 S DR="Q",X=99 D 0,DIE
"RTN","DICATTDE",82,0)
 D FILEWORD^DICATTD0
"RTN","DICATTDE",83,0)
MUMPS I $P(^DD(DICATTA,DICATTF,0),U,2)["K" S ^(9)="@" ;**151
"RTN","DICATTDE",84,0)
AUDIT I $G(DICATT2)]"",$P(^(0),U,2)'=DICATT2,$G(^DD(DICATTB,0,"DIK"))]"" D EN2^DIKZ(DICATTB,"",^("DIK")) ;Recompile CROSS-REFS if auditing changes
"RTN","DICATTDE",85,0)
RESET D GET^DICATTD ;now that we have filed, the NEW is OLD, in case they keep editing!
"RTN","DICATTDE",86,0)
Q Q
"RTN","DICATTDE",87,0)
 ;
"RTN","DICATTDE",88,0)
UP2(A,X) N T,Y ;A=0 if NO LAYGO  X=SPECIFIER
"RTN","DICATTDE",89,0)
 S Y=$P(^(0),U,2),Y=$TR(Y,"SDPV")
"RTN","DICATTDE",90,0)
 F T="S","V","P","D" I X[T S Y=Y_T Q
"RTN","DICATTDE",91,0)
 I A?1N S Y=$TR(Y,"A")_$E("A",DR=0)
"RTN","DICATTDE",92,0)
 S $P(^(0),U,2)=Y
"RTN","DICATTDE",93,0)
 Q
"RTN","DICATTDE",94,0)
 ;
"RTN","DICATTDE",95,0)
0 S T=$T(@X),G=$TR($$G(X),";") Q:G="@"!(G="^")  S:G="" G="@" S DR=DR_$P(T,";",2,3)_"////"_G Q  ;Re-file NAME, TITLE, etc.  Delete if they are now gone.  Leave "@" alone
"RTN","DICATTDE",96,0)
1 ;;.01
"RTN","DICATTDE",97,0)
2 ;;.1
"RTN","DICATTDE",98,0)
3 ;;1.1
"RTN","DICATTDE",99,0)
4 ;;1.2
"RTN","DICATTDE",100,0)
5 ;;8
"RTN","DICATTDE",101,0)
6 ;;8.5
"RTN","DICATTDE",102,0)
7 ;;9
"RTN","DICATTDE",103,0)
8 ;;10
"RTN","DICATTDE",104,0)
98 ;;3
"RTN","DICATTDE",105,0)
99 ;;4
"RTN","DICATTDE",106,0)
 ;
"RTN","DICATTDE",107,0)
DIE S DICATTED=1,DA=DICATTF,DA(1)=DICATTA,(DIC,DIE)="^DD(DICATTA,"
"RTN","DICATTDE",108,0)
 D ^DIE
"RTN","DICATTDE",109,0)
 Q
"RTN","DICATTDE",110,0)
 ;
"RTN","DICATTDE",111,0)
N ;
"RTN","DICATTDE",112,0)
 S DA=DICATTF I $G(DDA(1))]"" S:$G(DICATTA) DDA(1)=DICATTA S:'$D(^DD(DDA(1),DA)) DDA="D" D AUDT^DICATTA
"RTN","DICATTDE",113,0)
 I $D(DIU0) N DI D IJ^DIUTL(DICATTA),P^DICATT
"RTN","DICATTDE",114,0)
 Q
"RTN","DICATTDE",115,0)
 ;
"RTN","DICATTDE",116,0)
G(I) N X Q $$GET^DDSVALF(I,"DICATT",1,"I","")
"RTN","DICATTDM")
0^54^B14727373^B12766660
"RTN","DICATTDM",1,0)
DICATTDM ;SFISC/GFT - SUBSCRIPT AND PIECE-POSITION FOR STORAGE OF SINGLE-VALUED DATA IN SCREENMAN ;10APR2016
"RTN","DICATTDM",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATTDM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTDM",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATTDM",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATTDM",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATTDM",7,0)
 ;;GFT;**42,118,1014,1044**
"RTN","DICATTDM",8,0)
 ;
"RTN","DICATTDM",9,0)
 ;
"RTN","DICATTDM",10,0)
SUBDEF ;EXECUTABLE DEFAULT for FIELD 16 (SUBSCRIPT)
"RTN","DICATTDM",11,0)
 S Y=$O(^DD(DICATTA,"GL",""),-1) ;find the highest subscript now used for storage of this File's data
"RTN","DICATTDM",12,0)
 I $$CHKSUB(Y,1) Q
"RTN","DICATTDM",13,0)
NXT I Y S Y=Y+1 Q  ;get a new subscript
"RTN","DICATTDM",14,0)
 F Y=+$O(^DD(DICATTA,"GL","A"),-1):1 Q:'$D(^(Y))
"RTN","DICATTDM",15,0)
 Q
"RTN","DICATTDM",16,0)
 ;
"RTN","DICATTDM",17,0)
PIECDEF ;
"RTN","DICATTDM",18,0)
 I $E($G(DICATT2N))="K" S Y="E1,245" Q
"RTN","DICATTDM",19,0)
 S Y=$$G(16) I Y]"" S Y=$$P(Y)
"RTN","DICATTDM",20,0)
 Q
"RTN","DICATTDM",21,0)
 ;
"RTN","DICATTDM",22,0)
P(Y) ;given SUBSCRIPT Y, return PIECE prompt
"RTN","DICATTDM",23,0)
 N P,X,%
"RTN","DICATTDM",24,0)
 S X=0,%=1,P=0
"RTN","DICATTDM",25,0)
PC S X=$O(^DD(DICATTA,"GL",Y,X)) I X'="" S P=$P(X,",",2),%=$S(%>P:%,1:P+1) G PC
"RTN","DICATTDM",26,0)
 I P!$$ESTORE^DICATT1(DICATT2N) S %="E"_%_","_(DICATTLN+%-1)
"RTN","DICATTDM",27,0)
 E  S %=$O(^(99999),-1)+1
"RTN","DICATTDM",28,0)
 Q %
"RTN","DICATTDM",29,0)
 ;
"RTN","DICATTDM",30,0)
SUBHELP ;
"RTN","DICATTDM",31,0)
 S Y=$E($G(DICATT2N))="K" D UNED^DDSUTL(17,"DICATTM",3,Y)
"RTN","DICATTDM",32,0)
 N X,Y,T
"RTN","DICATTDM",33,0)
 S X(1)="Enter name of MUMPS Global subscript where this Field's data will be stored."
"RTN","DICATTDM",34,0)
 S X(2)="Already assigned:"
"RTN","DICATTDM",35,0)
 S Y="",T=3
"RTN","DICATTDM",36,0)
 F  S Y=$O(^DD(DICATTA,"GL",Y)) Q:Y=""  S X(T)=$G(X(T))_$J(Y,9) I $L(X(T))>66 S T=T+1
"RTN","DICATTDM",37,0)
 D HLP^DDSUTL(.X)
"RTN","DICATTDM",38,0)
 Q
"RTN","DICATTDM",39,0)
 ;
"RTN","DICATTDM",40,0)
CHKSUB(X,DISHORT) ;used as INPUT TRANSFORM for Fields 16 (SUBSCRIPT) & 76 (MUL SUBSCRIPT)  X is the subscript name.  DISHORT says 'don't go beyond 250'
"RTN","DICATTDM",41,0)
 N M
"RTN","DICATTDM",42,0)
 S M=$$GET^DDSVALF(20.5,"DICATT",1,"","") ;'Is this field Multiple?'
"RTN","DICATTDM",43,0)
 I $D(^DD(DICATTA,"GL",X)),M Q "Another Field is already stored at '"_X_"'"
"RTN","DICATTDM",44,0)
 I $D(^(X,0)) Q "A multiple field is already stored at '"_X_"'"
"RTN","DICATTDM",45,0)
 I $O(^(0)),$$ESTORE^DICATT1($G(DICATT2N)) Q "Can't this kind of data in this subscript"
"RTN","DICATTDM",46,0)
 I '$G(DICATTLN) Q 1 ;if we do not have a current length for the field, we are OK
"RTN","DICATTDM",47,0)
 S M=$S($G(DISHORT):250,1:$G(^DD("STRING_LIMIT"),255)-5) I $$MAX(DICATTLN,X)>M Q "Too much to store at the '"_X_"' subscript"
"RTN","DICATTDM",48,0)
 Q 1
"RTN","DICATTDM",49,0)
 ;
"RTN","DICATTDM",50,0)
MAX(L,Y) ;given L=length of new data, Y=subscript name
"RTN","DICATTDM",51,0)
 N T,A,DP,N,W
"RTN","DICATTDM",52,0)
 S A=DICATTA,DP=DICATTF
"RTN","DICATTDM",53,0)
 D MAX^DICATT1 Q T  ;returns maximum length of subscript's data
"RTN","DICATTDM",54,0)
 ;
"RTN","DICATTDM",55,0)
CHKPIEC(P) ;
"RTN","DICATTDM",56,0)
 N N,S
"RTN","DICATTDM",57,0)
 S S=$$G(16) I S="" Q S  ;must have subscript
"RTN","DICATTDM",58,0)
 I P?1"E"1.N1","1.N S N=$P(P,",",2)-$E(P,2,9)+1 G USED:N'<$G(DICATTLN) Q "Can't be less than "_DICATTLN
"RTN","DICATTDM",59,0)
 I P>0,P<100,P?.N,+P=P N Y D PIECDEF G USED:Y'?1"E".E Q "Must be stored by EXTRACT position"
"RTN","DICATTDM",60,0)
 Q ""
"RTN","DICATTDM",61,0)
USED I $D(^DD(DICATTA,"GL",S,P)) Q "Already used for '"_$P(^DD(DICATTA,$O(^(P,0)),0),U)_"'"
"RTN","DICATTDM",62,0)
 I P["E",$O(^(0)) Q "Can't store by $EXTRACT in the same subscript with $PIECES"
"RTN","DICATTDM",63,0)
 Q 1
"RTN","DICATTDM",64,0)
 ;
"RTN","DICATTDM",65,0)
PIECHELP ;
"RTN","DICATTDM",66,0)
 N X,G,Y,P,T
"RTN","DICATTDM",67,0)
 S G=$$G(16) Q:G=""
"RTN","DICATTDM",68,0)
 S X(1)="Enter a number from 1 to 99",T=" an $EXTRACT range such as ""E1,4""."
"RTN","DICATTDM",69,0)
 I $$ESTORE^DICATT1(DICATT2N) S X(1)="Enter"_T
"RTN","DICATTDM",70,0)
 E  I '$D(^DD(DICATTA,"GL",G)) S X(1)=X(1)_" or "_T Q
"RTN","DICATTDM",71,0)
 S X(1)=X(1)_".",X(2)="Currently assigned: ",Y="",T=2
"RTN","DICATTDM",72,0)
 F  S Y=$O(^DD(DICATTA,"GL",G,Y)) Q:Y=""  S P=$O(^(Y,0)) I $D(^DD(DICATTA,P,0)) S X(T)=$G(X(T))_$J(Y,8) I $L(X(T))>66 S T=T+1
"RTN","DICATTDM",73,0)
 D HLP^DDSUTL(.X)
"RTN","DICATTDM",74,0)
 Q
"RTN","DICATTDM",75,0)
 ;
"RTN","DICATTDM",76,0)
POST ;POST-ACTION of Page 3
"RTN","DICATTDM",77,0)
 N %
"RTN","DICATTDM",78,0)
 S %=$$CHKPIEC($$G(17)) I '% S DDSBR=% K % S %(1)=DDSBR,DDSBR=16 D H(.%)
"RTN","DICATTDM",79,0)
 Q
"RTN","DICATTDM",80,0)
 ;
"RTN","DICATTDM",81,0)
H(%) S %($O(%(""),-1)+1)="$$EOP"
"RTN","DICATTDM",82,0)
 D HLP^DDSUTL(.%)
"RTN","DICATTDM",83,0)
 Q
"RTN","DICATTDM",84,0)
 ;
"RTN","DICATTDM",85,0)
G(I) Q $$GET^DDSVALF(I,"DICATTM",3,"","")
"RTN","DICATTUD")
0^20^B30897711^n/a
"RTN","DICATTUD",1,0)
DICATTUD ;SFISC/MKO - USER DEFINED DATA TYPES ;25OCT2016
"RTN","DICATTUD",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICATTUD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTUD",4,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATTUD",5,0)
 ;
"RTN","DICATTUD",6,0)
BEGIN D EN(A,DA,N,O) I $G(DTOUT) K DTOUT G CHECK^DICATT ;Come from DICATT (roll-and-scroll mode)
"RTN","DICATTUD",7,0)
 G ^DICATT1
"RTN","DICATTUD",8,0)
 ;
"RTN","DICATTUD",9,0)
 ;
"RTN","DICATTUD",10,0)
 ;
"RTN","DICATTUD",11,0)
SCREENMN ;Come from DICATTD (ScreenMan mode)
"RTN","DICATTUD",12,0)
 N L,M,C,Z,DIZ,DIALLVAL,DIVAL,DTOUT
"RTN","DICATTUD",13,0)
 D CLRMSG^DDS
"RTN","DICATTUD",14,0)
 D EN(DICATTA,DICATTF,X,DICATT4]"") I $G(DTOUT) QUIT
"RTN","DICATTUD",15,0)
 S DICATT2N=$P(DIZ,U),DICATT3N="" I $$ESTORE^DICATT1(DICATT2N) D UNED^DDSUTL(20.5,"DICATT",1,2) ;don't allow 'MULTIPLE'
"RTN","DICATTUD",16,0)
 S DICATT5N=C,DICATTLN=L
"RTN","DICATTUD",17,0)
 S DICATTMN="" D PUT^DDSVALF(98,"DICATT",1,DICATTMN) ;HERE IS THE HELP-PROMPT, NULLED OUT FOR NOW
"RTN","DICATTUD",18,0)
 QUIT
"RTN","DICATTUD",19,0)
 ;
"RTN","DICATTUD",20,0)
 ;
"RTN","DICATTUD",21,0)
 ;
"RTN","DICATTUD",22,0)
 ;
"RTN","DICATTUD",23,0)
 ;
"RTN","DICATTUD",24,0)
 ;In: N  = data type number
"RTN","DICATTUD",25,0)
 ;    O  = 0 : if new field
"RTN","DICATTUD",26,0)
 ;    A  = file #
"RTN","DICATTUD",27,0)
 ;    DA = field #
"RTN","DICATTUD",28,0)
 ;
"RTN","DICATTUD",29,0)
 ;Out: DICATTPM array (to be merged into ^DD(file#,field#)
"RTN","DICATTUD",30,0)
 ;     e.g., DICATTPM(101,4,0)="4^",  DICATTPM(101,4,31)="DPT("  says that POINTER property is "DPT("
"RTN","DICATTUD",31,0)
 ;     L = Maximum internal length
"RTN","DICATTUD",32,0)
 ;     M = Help text
"RTN","DICATTUD",33,0)
 ;  M(2) = 1 : user changed a default on an old field
"RTN","DICATTUD",34,0)
 ;     C = Old input transform (5-99)
"RTN","DICATTUD",35,0)
 ; DIZ,Z = dataTypeAbbrev_t#, where # is the data type number
"RTN","DICATTUD",36,0)
 ;
"RTN","DICATTUD",37,0)
 ;Variables used:
"RTN","DICATTUD",38,0)
 ; DIVAL = obtained property value
"RTN","DICATTUD",39,0)
 ; DIVALS(abbrev) = array of property values (already obtained)
"RTN","DICATTUD",40,0)
 ; DIVALS("DIDEF") = default property value presented to user
"RTN","DICATTUD",41,0)
 ; DICHANGE = 1 : if user changed a default value (set in PROP)
"RTN","DICATTUD",42,0)
 ;
"RTN","DICATTUD",43,0)
EN(A,DA,N,O) ;
"RTN","DICATTUD",44,0)
 K DICATTPM,M(2),DTOUT
"RTN","DICATTUD",45,0)
 N DIMETH,DIORD,DIPROP,DIVALS,DICHANGE,DDS
"RTN","DICATTUD",46,0)
 M DICATTPM(101)=^DD(A,DA,101),DICATTPM(201)=^DD(A,DA,201) ;GRAB THE EXISTING VALUES OF THE PROPERTIES AND METHODS
"RTN","DICATTUD",47,0)
 ;
"RTN","DICATTUD",48,0)
 ;Loop through properties in Data Type file, by ORDER, and get values
"RTN","DICATTUD",49,0)
 S DIORD=""
"RTN","DICATTUD",50,0)
 F  S DIORD=$O(^DI(.81,N,101,"AC",DIORD)) Q:'DIORD!$D(DUOUT)!$D(DTOUT)  D
"RTN","DICATTUD",51,0)
 .S DIPROP=$O(^DI(.81,N,101,"AC",DIORD,"")) Q:'DIPROP  D PROPMETH("P",N,DIPROP,.DIVALS)
"RTN","DICATTUD",52,0)
 ;If user ^-d or timed out, go back to delete field and reprompt
"RTN","DICATTUD",53,0)
 I $D(DUOUT)!$D(DTOUT) K DUOUT,DICATTPM S DTOUT=1 Q
"RTN","DICATTUD",54,0)
 ;Loop through methods in Data Type file
"RTN","DICATTUD",55,0)
 S DIMETH=0
"RTN","DICATTUD",56,0)
 I DUZ(0)="@" F  S DIMETH=$O(^DI(.81,N,201,DIMETH)) Q:'DIMETH  D:$G(^(DIMETH,31))="" PROPMETH("M",N,DIMETH,.DIVALS)
"RTN","DICATTUD",57,0)
DONE ;
"RTN","DICATTUD",58,0)
 ;Set L and M
"RTN","DICATTUD",59,0)
 K M
"RTN","DICATTUD",60,0)
 S L=$$PROP4TYP^DIETLIBF("INTERNAL LENGTH",N) S:'L L=30 ;$G(DIVALS("MAXL"),30)
"RTN","DICATTUD",61,0)
 ;S:$G(DIVALS("HELP"))]"" M=DIVALS("HELP")
"RTN","DICATTUD",62,0)
 ;I $G(DICHANGE),O S M(2)=1
"RTN","DICATTUD",63,0)
 ;
"RTN","DICATTUD",64,0)
 ;Put input transform in C; don't need to store in ^DD(file#,field#,201)
"RTN","DICATTUD",65,0)
 ;Set Z and DIZ
"RTN","DICATTUD",66,0)
 S C="Q" ;$G(DICAT201(1,1),"Q") K DICAT201(1)
"RTN","DICATTUD",67,0)
 S Z=$$GET1^DIQ(.81,N,"INTERNAL REPRESENTATION") S:Z="" Z="F"
"RTN","DICATTUD",68,0)
 S (DIZ,Z)=Z_"t"_N_U
"RTN","DICATTUD",69,0)
 QUIT
"RTN","DICATTUD",70,0)
 ;
"RTN","DICATTUD",71,0)
 ;
"RTN","DICATTUD",72,0)
 ;
"RTN","DICATTUD",73,0)
PROPMETH(PROPMETH,N,DIPROP,DIVALS) ;For DATA TYPE N, get a PROPERTY (PROPMETH="P") or METHOD
"RTN","DICATTUD",74,0)
 N DIPROMPT,DIVAL,DIEXEC,DIDD,DIGL
"RTN","DICATTUD",75,0)
 K DIVALS("DIDEF")
"RTN","DICATTUD",76,0)
 S DIDD=$S(PROPMETH="M":.87,1:.86),DIGL=$S(PROPMETH="M":201,1:101) ;CHANGED FROM '102'
"RTN","DICATTUD",77,0)
 ;If there's an Executable Default, get value
"RTN","DICATTUD",78,0)
 I $G(^DI(.81,N,DIGL,DIPROP,31.2))'?."^" D
"RTN","DICATTUD",79,0)
 . S DIEXEC=1
"RTN","DICATTUD",80,0)
 . S DIVAL=$G(^DD(A,DA,DIGL,DIPROP,2)) ;DIGL WILL BE 201, NOT 102
"RTN","DICATTUD",81,0)
 . ;I 'O!$G(DICHANGE),^DI(.81,N,101,DIPROP,31.2)["|" S DIVAL=$$PARSE^DIETLIB(^(31.2),.DIVALS)
"RTN","DICATTUD",82,0)
 . S DIVALS("DIDEF")=DIVAL
"RTN","DICATTUD",83,0)
 ;
"RTN","DICATTUD",84,0)
 ;Otherwise, get regular default
"RTN","DICATTUD",85,0)
 E  S (DIVAL,DIVALS("DIDEF"))=$$GETDEF(N,DIPROP,.DIVALS)
"RTN","DICATTUD",86,0)
 ;
"RTN","DICATTUD",87,0)
 ;Should user be prompted for value?
"RTN","DICATTUD",88,0)
 S DIPROMPT=$G(^DI(.81,N,DIGL,DIPROP,31))="" ;PROMPT IF THERE IS NO VALUE
"RTN","DICATTUD",89,0)
 I $G(^DI(.81,N,DIGL,DIPROP,10))'?."^" X $$PARSE^DIETLIB(^(10)) S DIPROMPT=$T
"RTN","DICATTUD",90,0)
 ;
"RTN","DICATTUD",91,0)
 ;If so, prompt for DIVAL
"RTN","DICATTUD",92,0)
 I DIPROMPT D
"RTN","DICATTUD",93,0)
 . ;If there's Get Code, execute it
"RTN","DICATTUD",94,0)
 . I $G(^DI(DIDD,DIPROP,51))'?."^" D
"RTN","DICATTUD",95,0)
 .. D XCODEM^DIETLIB(^DI(DIDD,DIPROP,51),.DIVALS,.DIVAL)
"RTN","DICATTUD",96,0)
 .. S:$D(DIVAL)[0 DUOUT=1
"RTN","DICATTUD",97,0)
 . ;
"RTN","DICATTUD",98,0)
 . ;Otherwise, use ^DIR to get value of property
"RTN","DICATTUD",99,0)
 . E  S DIVAL=$$DIR(DIPROP,.DIVALS)
"RTN","DICATTUD",100,0)
 . Q:$D(DUOUT)!$D(DTOUT)
"RTN","DICATTUD",101,0)
 . S:DIVAL'=DIVALS("DIDEF") DICHANGE=1
"RTN","DICATTUD",102,0)
 ;
"RTN","DICATTUD",103,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","DICATTUD",104,0)
 D SAVE(DIPROP,.DIVAL,.DIVALS,.DIGL,$G(DIEXEC))
"RTN","DICATTUD",105,0)
 Q
"RTN","DICATTUD",106,0)
 ;
"RTN","DICATTUD",107,0)
DIR(DIPROP,DIVALS) ;Do a ^DIR read to get value for property or method
"RTN","DICATTUD",108,0)
 N I,J,X,Y,DIR,DIRUT,DIROUT
"RTN","DICATTUD",109,0)
 ;
"RTN","DICATTUD",110,0)
 ;Get DIR(0) from the PROPERTY or METHOD, (convert |abbr| to values)
"RTN","DICATTUD",111,0)
 S DIR(0)=$$PARSE^DIETLIB($G(^DI(DIDD,DIPROP,42)),.DIVALS)
"RTN","DICATTUD",112,0)
 Q:DIR(0)="" ""
"RTN","DICATTUD",113,0)
A ;Put Prompt into DIR("A")
"RTN","DICATTUD",114,0)
 S I=0
"RTN","DICATTUD",115,0)
 S J=1,DIR("A",1)=$P($G(^DI(DIDD,DIPROP,0)),U)
"RTN","DICATTUD",116,0)
 F  S I=$O(^DI(DIDD,DIPROP,43,I)) Q:'I  D:$D(^(I,0))#2
"RTN","DICATTUD",117,0)
 . S J=J+1
"RTN","DICATTUD",118,0)
 . S DIR("A",J)=^DI(DIDD,DIPROP,43,I,0)
"RTN","DICATTUD",119,0)
 I J S DIR("A")=DIR("A",J) K DIR("A",J)
"RTN","DICATTUD",120,0)
H ;Put Help into DIR("?")
"RTN","DICATTUD",121,0)
 S (I,J)=0
"RTN","DICATTUD",122,0)
 I $G(^DI(DIDD,DIPROP,11))]"" S J=1,DIR("?",1)=^(11)
"RTN","DICATTUD",123,0)
 F  S I=$O(^DI(DIDD,DIPROP,44,I)) Q:'I  D:$D(^(I,0))#2
"RTN","DICATTUD",124,0)
 . S J=J+1
"RTN","DICATTUD",125,0)
 . S DIR("?",J)=^DI(DIDD,DIPROP,44,I,0)
"RTN","DICATTUD",126,0)
 I J S DIR("?")=DIR("?",J) K DIR("?",J)
"RTN","DICATTUD",127,0)
B ;Put default into DIR("B")
"RTN","DICATTUD",128,0)
 S I=$G(DICATTPM(DIGL,DIPROP,31)) ;get the current VALUE
"RTN","DICATTUD",129,0)
 I I="" S I=$G(DIVALS("DIDEF")) ;or get the DEFAULT from node 33 of the PROPERTY for this DATA TYPE
"RTN","DICATTUD",130,0)
 I I]"" D  S DIR("B")=I
"RTN","DICATTUD",131,0)
 .I DIGL=101 D
"RTN","DICATTUD",132,0)
 ..N T S T=+$G(^DI(.86,DIPROP,41)) ;get the TYPE
"RTN","DICATTUD",133,0)
 ..I T=1 S I=$$DATE^DIUTL(I)
"RTN","DICATTUD",134,0)
 ..I T=3 S I=$P($P($P(DIR(0),U,2),I_":",2),";")
"RTN","DICATTUD",135,0)
 ;S:$G(DIVALS("DIDEF"))]"" DIR("B")=DIVALS("DIDEF")
"RTN","DICATTUD",136,0)
 S:$G(^DI(DIDD,DIPROP,45))]"" DIR("S")=^(45)
"RTN","DICATTUD",137,0)
 S:$G(^DI(DIDD,DIPROP,46))]"" DIR("T")=^(46)
"RTN","DICATTUD",138,0)
 D ^DIR
"RTN","DICATTUD",139,0)
 Q Y
"RTN","DICATTUD",140,0)
 ;
"RTN","DICATTUD",141,0)
 ;
"RTN","DICATTUD",142,0)
SAVE(DIPROP,DIVAL,DIVALS,DICAT101,DIEXEC) ;Save the value of the property
"RTN","DICATTUD",143,0)
 ; in DIVALS(abbr) and DICAT101
"RTN","DICATTUD",144,0)
 ;DIVAL is the value of the property
"RTN","DICATTUD",145,0)
 ;DIEXEC = 1 : if value is an executable
"RTN","DICATTUD",146,0)
 ;
"RTN","DICATTUD",147,0)
 ;Returns:
"RTN","DICATTUD",148,0)
 ;  DIVALS(abbr)= array property values
"RTN","DICATTUD",149,0)
 ;  DICATTPM(DIGL,prop#,0)=prop#^abbrev
"RTN","DICATTUD",150,0)
 ;  DICATTPM(DIGL,prop#,31)=value
"RTN","DICATTUD",151,0)
 ;   or         2)=executable value
"RTN","DICATTUD",152,0)
 ;  DICATTPM(DIGL,prop#,3,n,0) = descendent node n of DIVAL
"RTN","DICATTUD",153,0)
 ;
"RTN","DICATTUD",154,0)
 N DIABBR
"RTN","DICATTUD",155,0)
 ;
"RTN","DICATTUD",156,0)
 ;Set the DIVALS array
"RTN","DICATTUD",157,0)
 S DIABBR=$P(^DI(DIDD,DIPROP,0),U,2)
"RTN","DICATTUD",158,0)
 S:DIABBR]"" DIVALS(DIABBR)=DIVAL
"RTN","DICATTUD",159,0)
 ;
"RTN","DICATTUD",160,0)
 ;Set the DICATTPM array
"RTN","DICATTUD",161,0)
 I DIVAL]"" D
"RTN","DICATTUD",162,0)
 .N I,Z S Z=0 F I=1:1 S Z=$O(DICATTPM(DIGL,Z)) Q:'Z
"RTN","DICATTUD",163,0)
 .S DICATTPM(DIGL,0)="^."_DIGL_"01P^"_DIPROP_"^"_I ;remember that DIGL=101 or 201
"RTN","DICATTUD",164,0)
 . S DICATTPM(DIGL,DIPROP,0)=DIPROP_U_DIABBR
"RTN","DICATTUD",165,0)
 . S DICATTPM(DIGL,DIPROP,31+$G(DIEXEC))=DIVAL
"RTN","DICATTUD",166,0)
 . I $D(DIVAL)>9 S I="" F  S I=$O(DIVAL(I)) Q:I=""  D
"RTN","DICATTUD",167,0)
 .. I $D(DIVAL(I))#2 S DICATTPM(DIGL,DIPROP,3,I,0)=DIVAL(I)
"RTN","DICATTUD",168,0)
 .. E  I $D(DIVAL(I,0))#2 S DICATTPM(DIGL,DIPROP,3,I,0)=DIVAL(I,0)
"RTN","DICATTUD",169,0)
 .. E  Q
"RTN","DICATTUD",170,0)
 ;
"RTN","DICATTUD",171,0)
 ;Execute the post action
"RTN","DICATTUD",172,0)
 ;X:$G(^DI(.81,N,101,DIPROP,61))'?."^" $$PARSE^DIETLIB(^(61))
"RTN","DICATTUD",173,0)
 Q
"RTN","DICATTUD",174,0)
 ;
"RTN","DICATTUD",175,0)
 ;
"RTN","DICATTUD",176,0)
GETDEF(N,DIPROP,DIVALS) ;Get defaults for a property.
"RTN","DICATTUD",177,0)
 ;May come from the ^DD or the data type file.
"RTN","DICATTUD",178,0)
 N DIDEF
"RTN","DICATTUD",179,0)
 ;
"RTN","DICATTUD",180,0)
 ;Get value from ^DD
"RTN","DICATTUD",181,0)
 S DIDEF=$S(DIPROP=3:$G(^DD(A,DA,3)),1:$G(^DD(A,DA,101,DIPROP,31)))
"RTN","DICATTUD",182,0)
 ;
"RTN","DICATTUD",183,0)
 ;For existing fields, return default from ^DD(file#,field#)
"RTN","DICATTUD",184,0)
 ;if the user hasn't changed any property values
"RTN","DICATTUD",185,0)
 I O,'$G(DICHANGE) Q DIDEF
"RTN","DICATTUD",186,0)
 ;
"RTN","DICATTUD",187,0)
 ;Otherwise, look at default from Data Type file.
"RTN","DICATTUD",188,0)
 ;For existing fields where default contains no |abbr|,
"RTN","DICATTUD",189,0)
 ;return value from DD.
"RTN","DICATTUD",190,0)
 ;
"RTN","DICATTUD",191,0)
 ;Default
"RTN","DICATTUD",192,0)
 S DIDEF=$G(^DI(.81,N,101,DIPROP,33))
"RTN","DICATTUD",193,0)
 ;Q:$G(^DI(.81,N,101,DIPROP,31))]"" $S(^(31)'["|"&O:DIDEF,1:$$PARSE^DIETLIB(^(31),.DIVALS))
"RTN","DICATTUD",194,0)
 ;
"RTN","DICATTUD",195,0)
 ;Build Default
"RTN","DICATTUD",196,0)
 ;Q:$G(^DI(.81,N,101,DIPROP,31.1))]"" $S(^(31.1)'["|"&O:DIDEF,1:$$XCODE^DIETLIB(^(31.1),.DIVALS)) ;NOT THERE ANY MORE
"RTN","DICATTUD",197,0)
 ;
"RTN","DICATTUD",198,0)
 Q DIDEF
"RTN","DICF2")
0^58^B32547668^B31296383
"RTN","DICF2",1,0)
DICF2 ;SEA/TOAD,SF/TKW - VA FileMan: Finder, Part 3 (All Indexes) ;24SEP2016
"RTN","DICF2",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICF2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICF2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICF2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICF2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICF2",7,0)
 ;;GFT;**4,20**;
"RTN","DICF2",8,0)
 ;
"RTN","DICF2",9,0)
 ;
"RTN","DICF2",10,0)
CHKALL(DIFILE,DIEN,DIFIEN,DIFLAGS,DIVALUE,DISCREEN,DINUMBER,DIFORCE,DINDEX,DIDENT,DILIST,DIC,DIY,DIYX) ;
"RTN","DICF2",11,0)
 ; Loop through all indexes to be searched, perform data type
"RTN","DICF2",12,0)
 ; transforms on lookup values.
"RTN","DICF2",13,0)
 N DIOUT
"RTN","DICF2",14,0)
 I DIFLAGS["O",DIFLAGS'["p" S DIOUT=DIFLAGS N DIFLAGS S DIFLAGS=DIOUT_"X"
"RTN","DICF2",15,0)
 S DIOUT=0 N DISKIP
"RTN","DICF2",16,0)
41 F  D  Q:$G(DIERR)!($G(DINDEX("DONE")))!DIOUT
"RTN","DICF2",17,0)
 . S DISKIP=0
"RTN","DICF2",18,0)
 . N DILINK S DILINK=DIFILE_U_DINDEX
"RTN","DICF2",19,0)
 . I DINDEX="#" D
"RTN","DICF2",20,0)
 . . S DIFILE("CHAIN",DILINK)=""
"RTN","DICF2",21,0)
 . . Q:+$P(DIVALUE,"E")'=DIVALUE  Q:'$D(@DIFILE(DIFILE)@(DIVALUE))
"RTN","DICF2",22,0)
 . . N DIEN S DIEN=DIVALUE D ENTRY^DICF1 Q
"RTN","DICF2",23,0)
 . I '$D(DIFILE("CHAIN",DILINK)) D  K DIFILE("CHAIN",DILINK)
"RTN","DICF2",24,0)
 . . S DIFILE("CHAIN",DILINK)=""
"RTN","DICF2",25,0)
 . . D:DIFLAGS'["Q" PREPIX(.DIFILE,DIFLAGS,.DINDEX,.DIVALUE,.DISKIP)
"RTN","DICF2",26,0)
 . . I 'DISKIP D CHKONE^DICF3(.DIFLAGS,.DIVALUE,.DINDEX,.DIDENT,.DIFILE,.DIEN,DIFIEN,.DISCREEN,.DILIST,.DIC,.DIY,.DIYX)
"RTN","DICF2",27,0)
 . . D CLEANIX(.DINDEX,.DIVALUE) Q
"RTN","DICF2",28,0)
43 . I $G(DIERR)!($G(DINDEX("DONE"))) Q
"RTN","DICF2",29,0)
 . I DIFLAGS["l" S (DIOUT,DINDEX("DONE"))=1 Q
"RTN","DICF2",30,0)
 . D NXTINDX(.DINDEX,.DIFORCE,.DIFILE,.DIFLAGS,.DIVALUE,DINUMBER)
"RTN","DICF2",31,0)
 . I DINDEX="" D  Q:DINDEX=""
"RTN","DICF2",32,0)
 . . S DIOUT=1
"RTN","DICF2",33,0)
 . . Q:DIFLAGS'["O"  Q:DIFLAGS'["X"  Q:DIFLAGS["p"  Q:DIDENT(-1)
"RTN","DICF2",34,0)
 . . S DIFLAGS=$TR(DIFLAGS,"X"),DIOUT=0,DIFORCE(1)=1
"RTN","DICF2",35,0)
 . . S DINDEX=$S(DIFLAGS["l":DINDEX("START"),DIFORCE:$P(DIFORCE(0),U),1:$$DINDEX^DICL(DIFILE,DIFLAGS))
"RTN","DICF2",36,0)
 . . I DINDEX="" S DIOUT=1 Q
"RTN","DICF2",37,0)
 . . D FIRSTIDX(.DINDEX,.DIFORCE,.DIFILE,DIFLAGS,.DIVALUE,DINUMBER)
"RTN","DICF2",38,0)
 . . Q
"RTN","DICF2",39,0)
 . D
"RTN","DICF2",40,0)
 . . N DICRSR S DICRSR=0
"RTN","DICF2",41,0)
 . . I DIFLAGS["P" D  Q:'DICRSR
"RTN","DICF2",42,0)
 . . . F  S DICRSR=$O(DIDENT(DICRSR)) Q:'DICRSR  Q:$D(DIDENT(DICRSR,0,1,"E"))
"RTN","DICF2",43,0)
 . . . Q
"RTN","DICF2",44,0)
 . . Q:'$D(DIDENT(DICRSR,0,1,"E"))
"RTN","DICF2",45,0)
 . . N DISAVNO,DISAVENT S DISAVNO=DINDEX("#"),DINDEX("#")=1,DISAVENT=$G(DIDENT),DIDENT="IXE"
"RTN","DICF2",46,0)
 . . D THROW^DICU11(DIFLAGS,.DIDENT,"IXE",DICRSR,1,"E",.DINDEX,1)
"RTN","DICF2",47,0)
 . . S DINDEX("#")=DISAVNO,DIDENT=DISAVENT Q
"RTN","DICF2",48,0)
 . Q
"RTN","DICF2",49,0)
 Q
"RTN","DICF2",50,0)
 ;
"RTN","DICF2",51,0)
PREPIX(DIFILE,DIFLAGS,DINDEX,DIVALUE,DISKIP) ;
"RTN","DICF2",52,0)
 ; CHKALL--lookup index data type, add transform values to list
"RTN","DICF2",53,0)
 N DISUB,DITYPE,DITRANEX
"RTN","DICF2",54,0)
 F DISUB=1:1:DINDEX("#") D:DIVALUE(DISUB)]""  Q:$G(DIERR)
"RTN","DICF2",55,0)
 . I $G(DINDEX("IXTYPE"))="S" D  Q
"RTN","DICF2",56,0)
 . . N X S X=$$SOUNDEX^DICF5(DINDEX(DISUB)) Q:'X
"RTN","DICF2",57,0)
 . . S DIVALUE(DISUB,5)=X Q
"RTN","DICF2",58,0)
 . S DITYPE=DINDEX(DISUB,"TYPE"),DITRANEX=$G(DINDEX(DISUB,"TRANEX"))
"RTN","DICF2",59,0)
 . I DITYPE["F"!(DITYPE["N")!(DITRANEX]"") D
"RTN","DICF2",60,0)
 . .N X,IX S IX=$G(DINDEX(DISUB,"TRANCODE")) I IX="" S IX=DITRANEX
"RTN","DICF2",61,0)
 . . Q:IX=""
"RTN","DICF2",62,0)
 . . S X=DIVALUE(DISUB) X IX Q:X=""
"RTN","DICF2",63,0)
 . . S DIVALUE(DISUB,5)=X
"RTN","DICF2",64,0)
 . . Q
"RTN","DICF2",65,0)
 . N DINODE S DINODE=$G(^DD(+DINDEX(DISUB,"FILE"),+DINDEX(DISUB,"FIELD"),0))
"RTN","DICF2",66,0)
 . I DITYPE["D" D PREPD^DICF5(DISUB,.DINDEX,DINODE,.DIVALUE) Q
"RTN","DICF2",67,0)
 . I DITYPE["S" D PREPS^DICF5(DIFLAGS,DISUB,.DINDEX,DINODE,.DIVALUE) Q
"RTN","DICF2",68,0)
 . I DITYPE'["P",DITYPE'["V" Q
"RTN","DICF2",69,0)
 . I DISUB'=1 D POINT^DICF5(DISUB,DIFLAGS,.DIFILE,.DINDEX,.DIVALUE,.DISCREEN) Q
"RTN","DICF2",70,0)
 . D POINT^DICF4(.DIFILE,.DIFLAGS,.DINDEX,.DIDENT,.DIEN,DIFIEN,.DISCREEN,.DIVALUE,.DIC,.DIFORCE)
"RTN","DICF2",71,0)
 . I '$D(DINDEX(1,"IXROOT"))!($G(DIERR)) S DISKIP=1
"RTN","DICF2",72,0)
 . I $G(DTOUT)!($G(DIROUT)) S (DISKIP,DINDEX("DONE"))=1
"RTN","DICF2",73,0)
 . Q:DISKIP
"RTN","DICF2",74,0)
 . Q:$G(DINDEX(1,"TRANCODE"))=""
"RTN","DICF2",75,0)
 . N DII,X
"RTN","DICF2",76,0)
 . S DII="" F  S DII=$O(@DINDEX(1,"ROOT")@(DII)) Q:DII=""  D
"RTN","DICF2",77,0)
 . . K @DINDEX(1,"ROOT")@(DII)
"RTN","DICF2",78,0)
 . . S X=$P(DII,"^",2) X DINDEX(1,"TRANCODE") Q:X=""
"RTN","DICF2",79,0)
 . . S X=$P(DII,"^")_"^"_X,@DINDEX(1,"ROOT")@(X)="" Q
"RTN","DICF2",80,0)
 . Q
"RTN","DICF2",81,0)
 Q
"RTN","DICF2",82,0)
 ;
"RTN","DICF2",83,0)
CLEANIX(DINDEX,DIVALUE) ;
"RTN","DICF2",84,0)
 ; CHKALL--clear transform values for this index from DIVALUE arrays
"RTN","DICF2",85,0)
 ; clear temporary list of pointed-to entries.
"RTN","DICF2",86,0)
 N I,DISUB
"RTN","DICF2",87,0)
 F DISUB=1:1:DINDEX("#") D
"RTN","DICF2",88,0)
 . I $G(DINDEX(DISUB,"IXROOT"))]"" D
"RTN","DICF2",89,0)
 . . I DISUB=1,DIFLAGS["l" S I=$O(@DINDEX(DISUB,"ROOT")@("")),DS("INT")=$P(I,U,2)
"RTN","DICF2",90,0)
 . . S I=$P(DINDEX(DISUB,"ROOT"),",""B"")",1) Q:I=""
"RTN","DICF2",91,0)
 . . K @(I_")") Q
"RTN","DICF2",92,0)
 . S I=4
"RTN","DICF2",93,0)
 . F  S I=$O(DIVALUE(DISUB,I)) Q:'I  K DIVALUE(DISUB,I)
"RTN","DICF2",94,0)
 . Q
"RTN","DICF2",95,0)
 Q
"RTN","DICF2",96,0)
 ;
"RTN","DICF2",97,0)
FIRSTIDX(DINDEX,DIFORCE,DIFILE,DIFLAGS,DIVALUE,DINUMBER) ;
"RTN","DICF2",98,0)
 ; Return data for starting index before second loop when flags["O"
"RTN","DICF2",99,0)
 D N3 Q
"RTN","DICF2",100,0)
 ;
"RTN","DICF2",101,0)
NXTINDX(DINDEX,DIFORCE,DIFILE,DIFLAGS,DIVALUE,DINUMBER) ;
"RTN","DICF2",102,0)
 ; Return next index
"RTN","DICF2",103,0)
 N D,DIGO,I,J,K,DIX1,DIX2,DIOK,DIOLDL
"RTN","DICF2",104,0)
 S D=DINDEX,I=$G(DINDEX("START")),K=$G(DINDEX("MAXSUB"))
"RTN","DICF2",105,0)
 D:DIFLAGS'["h"
"RTN","DICF2",106,0)
 . F J=1:1:DINDEX("#") S DIOLDL(J)=DINDEX(J,"LENGTH")
"RTN","DICF2",107,0)
 K DINDEX S DINDEX=D,DINDEX("WAY")=1
"RTN","DICF2",108,0)
 S:I]"" DINDEX("START")=I S:K]"" DINDEX("MAXSUB")=K
"RTN","DICF2",109,0)
 S (DIGO,DIOK)=0
"RTN","DICF2",110,0)
N1 I DIFORCE F  D  Q:DIOK!(DIGO)
"RTN","DICF2",111,0)
 . I DIFLAGS["M",DIFORCE(1)=1,$P(DIFORCE(0),U,2)="" S DIGO=1 Q
"RTN","DICF2",112,0)
 . S DIFORCE(1)=DIFORCE(1)+1,DINDEX=$P(DIFORCE(0),U,DIFORCE(1))
"RTN","DICF2",113,0)
 . I DINDEX="#",DIFLAGS'["l",DIFLAGS'["h" S DIOK=1 Q
"RTN","DICF2",114,0)
 . S:DINDEX=-1 DINDEX="" I DINDEX="" S DIOK=1 Q
"RTN","DICF2",115,0)
 . I $O(^DD(DIFILE,0,"IX",DINDEX,0)),$$IDXOK(DIFILE,DINDEX) S DIOK=1 Q
"RTN","DICF2",116,0)
 . S I=$O(^DD("IX","BB",DIFILE,DINDEX,0)) Q:'I
"RTN","DICF2",117,0)
 . S DIOK=1 Q
"RTN","DICF2",118,0)
N2 I ('DIFORCE)!DIGO D
"RTN","DICF2",119,0)
 . S (DIX1,DIX2)=DINDEX
"RTN","DICF2",120,0)
 . F  S DIX1=$O(^DD(DIFILE,0,"IX",DIX1)) Q:DIX1=""  Q:$$IDXOK(DIFILE,DIX1)
"RTN","DICF2",121,0)
 . S DIOK=0 F  S DIX2=$O(^DD("IX","BB",DIFILE,DIX2)) Q:DIX2=""  D  Q:DIOK
"RTN","DICF2",122,0)
 . . S I=$O(^DD("IX","BB",DIFILE,DIX2,0)) Q:'I
"RTN","DICF2",123,0)
 . . Q:$P($G(^DD("IX",I,0)),U,14)'["L"
"RTN","DICF2",124,0)
 . . S J=$O(^DD("IX",I,11.1,"AC",1,0)) Q:'J  Q:$G(^DD("IX",I,11.1,J,0))=""
"RTN","DICF2",125,0)
 . . S DIOK=1 Q
"RTN","DICF2",126,0)
 . I DIX1'="",DIX2=""!(DIX2]DIX1) S DINDEX=DIX1 Q
"RTN","DICF2",127,0)
 . S DINDEX=DIX2 Q
"RTN","DICF2",128,0)
 . Q
"RTN","DICF2",129,0)
N3 Q:DINDEX=""  Q:DIFLAGS["h"
"RTN","DICF2",130,0)
 D INDEX^DICUIX(.DIFILE,DIFLAGS,.DINDEX,"",.DIVALUE,DINUMBER,.DISCREEN)
"RTN","DICF2",131,0)
 I DINDEX("#")>1 F D=1:1:DINDEX("#") S DIVALUE(D)=$G(DIVALUE(D))
"RTN","DICF2",132,0)
 N DINEWVAL S DINEWVAL=0 D
"RTN","DICF2",133,0)
 . N J F J=1:1:DINDEX("#") I DIVALUE(J)]"",DINDEX(J,"LENGTH")'=$G(DIOLDL(J)) S DINEWVAL=1 Q
"RTN","DICF2",134,0)
 . I DINEWVAL D XFORM^DICF1(DIFLAGS,.DIVALUE,.DISCREEN,.DINDEX)
"RTN","DICF2",135,0)
 Q
"RTN","DICF2",136,0)
 ;
"RTN","DICF2",137,0)
IDXOK(DIFILE,%) ; See whether selected index exists in 1 nodes of DD
"RTN","DICF2",138,0)
 N DIX,%Y,DD,X Q:%="" 0
"RTN","DICF2",139,0)
 S DIX=$O(^DD(DIFILE,0,"IX",%,0)) Q:'DIX 0
"RTN","DICF2",140,0)
 S %Y=$O(^DD(DIFILE,0,"IX",%,DIX,0)) Q:'%Y 0
"RTN","DICF2",141,0)
 F DD=0:0 S DD=$O(^DD(DIX,%Y,1,DD)) Q:'DD  S X=$P($G(^(DD,0)),U,2) Q:X=%
"RTN","DICF2",142,0)
 Q:'DD 0
"RTN","DICF2",143,0)
 Q 1
"RTN","DICF2",144,0)
 ;
"RTN","DICM1")
0^45^B19854007^B18002840
"RTN","DICM1",1,0)
DICM1 ;SFISC/XAK,TKW - LOOKUP WHEN INPUT MUST BE TRANSFORMED ;01MAR2016
"RTN","DICM1",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICM1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICM1",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICM1",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICM1",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICM1",7,0)
 ;
"RTN","DICM1",8,0)
 G @Y
"RTN","DICM1",9,0)
 ;
"RTN","DICM1",10,0)
P ;POINTERS
"RTN","DICM1",11,0)
 G P^DICM0
"RTN","DICM1",12,0)
 ;
"RTN","DICM1",13,0)
D ;DATES
"RTN","DICM1",14,0)
 S %=DS I %["t",$G(^DI(.81,+$P(DS,"t",2),201,2,31))["%DT" S %=^(31) ;MAY BE EXTENDED TYPE THAT IS DATE-VALUED (LIKE UTC), SO GET INPUT TRANSFORM
"RTN","DICM1",15,0)
 I $S(X'?.N:1,$L(X)>15:0,1:1) S %DT=$S($D(^DD(+DO(2),.001)):"N",1:"")_$P($P(%,"%DT=""",2),"""") F %="E","R" S %DT=$P(%DT,%)_$P(%DT,%,2)
"RTN","DICM1",16,0)
 I  D ^%DT S X=Y K %DT I X>1 D  Q
"RTN","DICM1",17,0)
 . I $D(DINDEX(1,"TRANCODE"))#2 D  Q
"RTN","DICM1",18,0)
 . . X DINDEX(1,"TRANCODE") I $G(X)="" K X S Y=-1 Q
"RTN","DICM1",19,0)
 . . I ('$D(DINDEX(1,"TRANOUT"))#2)!(DIC(0)'["E")!($D(DDS)) Q
"RTN","DICM1",20,0)
 . . N % S %=X N X S X=% X DINDEX(1,"TRANOUT") W "   ",X Q
"RTN","DICM1",21,0)
 . Q:DIC(0)'["E"
"RTN","DICM1",22,0)
 . I '$D(DDS) W "   " D DT^DIQ
"RTN","DICM1",23,0)
 . S DIDA=1 Q
"RTN","DICM1",24,0)
 K X Q
"RTN","DICM1",25,0)
 ;
"RTN","DICM1",26,0)
S ;SETS
"RTN","DICM1",27,0)
 N A8,A9,DDH S DDH=0
"RTN","DICM1",28,0)
 I $P(DS,U,2)["*"!($D(DIC("S"))) D SC
"RTN","DICM1",29,0)
 S DICR(DICR,1)=1,I=$P(DS,U,3),DD=+$P($P(DS,U,2),"t",2) I I="",DD S I=$$PROP4TYP^DIETLIBF("SET OF CODES",DD)
"RTN","DICM1",30,0)
 S DD=$P(";"_I,";"_X_":",2) ;SEE IF 'X' IS AN INTERNAL CODE
"RTN","DICM1",31,0)
 N DS S DS=0
"RTN","DICM1",32,0)
 I DD]"" S Y=X X:$D(A9) A9 I  D SDSP,SK Q
"RTN","DICM1",33,0)
SS S DICMF=0
"RTN","DICM1",34,0)
 F DICM=1:1 S DD=$P(I,";",DICM) Q:DD=""  I $P($P(DD,":",2),X)="" D  ;SEE IF 'X' IS AN EXTERNAL CODE
"RTN","DICM1",35,0)
 . S Y=$P(DD,":"),DD=$P(DD,":",2) Q:DIC(0)["X"&(DD'=X)
"RTN","DICM1",36,0)
 . I $D(A9) X A9 E  Q
"RTN","DICM1",37,0)
 . I DIC(0)["O"!(DIC(0)'["E") S:DD=X DICMF=1 I DD'=X,DICMF=1 Q
"RTN","DICM1",38,0)
 . S DS=DS+1 D SDSP
"RTN","DICM1",39,0)
 . S DS(DS)=Y_"^     "_DDH_"   "_DDH(DDH,Y)
"RTN","DICM1",40,0)
 G:DDH=0 NO
"RTN","DICM1",41,0)
 I DDH=1 D  G SK
"RTN","DICM1",42,0)
 . S X=$O(DDH(1,""))
"RTN","DICM1",43,0)
 . W:DIC(0)["E"&('$D(DDS)) "  ("_DDH(1,X)_")"
"RTN","DICM1",44,0)
 . S:$D(DS(1,"T")) X=DS(1,"T") Q
"RTN","DICM1",45,0)
 G:DIC(0)'["E" NO
"RTN","DICM1",46,0)
 I $D(DDS) S DD=DDH,DDD=2 K DDQ D LIST^DDSU K DDD,DDQ G:$D(DTOUT) NO
"RTN","DICM1",47,0)
 I '$D(DDS) F  D  Q:DICM'="AGN"
"RTN","DICM1",48,0)
 . F DICM=1:1:DDH W !,$P(DS(DICM),U,2,999)
"RTN","DICM1",49,0)
 . W !,"CHOOSE 1-"_DDH_": "
"RTN","DICM1",50,0)
 . R DIY:$S($D(DTIME):DTIME,1:300) E  Q
"RTN","DICM1",51,0)
 . Q:U[DIY!(DIY[U)  I DIY?1.N,$D(DS(+DIY)) Q
"RTN","DICM1",52,0)
 . W $C(7),"??" S DICM="AGN"
"RTN","DICM1",53,0)
 G:+$P(DIY,"E")'=DIY NO G:'$D(DS(+DIY)) NO
"RTN","DICM1",54,0)
 S X=$P(DS(DIY),U)
"RTN","DICM1",55,0)
 I '$D(DDS) W "   "_DDH(DIY,X),!
"RTN","DICM1",56,0)
 S:$D(DS(DIY,"T")) X=DS(DIY,"T")
"RTN","DICM1",57,0)
 G SK
"RTN","DICM1",58,0)
 ;
"RTN","DICM1",59,0)
NO K X,Y S Y=-1
"RTN","DICM1",60,0)
SK K DIC("S") S:$D(A8) DIC("S")=A8
"RTN","DICM1",61,0)
 K DDH,DICM,DICMF,DICMS
"RTN","DICM1",62,0)
 Q
"RTN","DICM1",63,0)
SC ;SCREENS ON SETS
"RTN","DICM1",64,0)
 S:$D(DIC("S")) A8=DIC("S") Q:$P(DS,U,2)'["*"
"RTN","DICM1",65,0)
 Q:'$D(^DD(+DO(2),.01,12.1))  X ^(12.1) Q:'$D(DIC("S"))
"RTN","DICM1",66,0)
 S Y="("_DIC,I="DIC"_DICR,%=""""_%_"""",A9="X DIC(""S"")"
"RTN","DICM1",67,0)
 Q:$G(DICR(DICR))?1"""".E1""""
"RTN","DICM1",68,0)
 ;I DS["DINUM=X" S D=D_" E  I $D"_Y_"Y,0))" Q
"RTN","DICM1",69,0)
 S A9=A9_" E  F "_I_"=0:0 S "_I_"=$O"_Y
"RTN","DICM1",70,0)
 I @("$O"_Y_%_",0))'=""""") S A9=A9_%_",Y,"_I_")) Q:"_I_"=""""  "_$S($D(A8):"X ""N Y S Y="_I_" ""_A8 I $T,",1:"I ")_"$D"_Y_I_",0)) Q" Q
"RTN","DICM1",71,0)
 S A9=A9_I_")) Q:'"_I_"  "_$S($D(A8):"X ""N Y S Y="_I_" ""_A8 I $T,",1:"I ")_"$P(^("_I_",0),U)=Y Q" Q
"RTN","DICM1",72,0)
 ;
"RTN","DICM1",73,0)
SDSP ; Execute screen, transform, set up output for display
"RTN","DICM1",74,0)
 N DISAVX,DISAVY,DIXX,DIOUT S DIOUT=0,DIXX=Y
"RTN","DICM1",75,0)
 S DDH=DDH+1,DDH(DDH,Y)=$P("  (^",U,(DS=0))_Y
"RTN","DICM1",76,0)
 I $D(DINDEX(1,"TRANCODE"))#2 D  S:'DIOUT&('DS) X=DIXX I DIOUT S Y=-1 Q
"RTN","DICM1",77,0)
 . S DISAVY=Y N X,Y S X=DISAVY
"RTN","DICM1",78,0)
 . X DINDEX(1,"TRANCODE") I $G(X)="" S DIOUT=1 Q
"RTN","DICM1",79,0)
 . S DIXX=X I DS S DS(DS,"T")=X Q
"RTN","DICM1",80,0)
 I $G(DINDEX(1,"TRANOUT"))]"" D
"RTN","DICM1",81,0)
 . S DISAVY=Y N X,Y S X=DIXX X DINDEX(1,"TRANOUT")
"RTN","DICM1",82,0)
 . S DDH(DDH,DISAVY)=$P("  (^",U,(DS=0))_$G(X) Q
"RTN","DICM1",83,0)
 S DDH(DDH,Y)=DDH(DDH,Y)_"   "_$P(DD,";")_$P(")^",U,(DS=0))
"RTN","DICM1",84,0)
 I DS=0,DIC(0)["E",'$D(DDS) W DDH(DDH,Y)
"RTN","DICM1",85,0)
 Q
"RTN","DICM1",86,0)
 ;
"RTN","DICM1",87,0)
V ;VARIABLE POINTER
"RTN","DICM1",88,0)
 I X["?BAD" K X Q
"RTN","DICM1",89,0)
 D ^DICM2,DO^DIC1
"RTN","DICM1",90,0)
 Q
"RTN","DICM1",91,0)
 ;
"RTN","DICM1",92,0)
T ; Execute TRANSFORM code for indexes other than Pointers, Date, VP or Sets.
"RTN","DICM1",93,0)
 N DIXX S DIXX=X
"RTN","DICM1",94,0)
 X DINDEX(1,"TRANCODE") I $G(X)="" K X S Y=-1 Q
"RTN","DICM1",95,0)
 I DIXX=X K X S Y=-1
"RTN","DICM1",96,0)
 Q
"RTN","DICM1",97,0)
 ;
"RTN","DICM1",98,0)
SOU ;
"RTN","DICM1",99,0)
 S DSOU="01230129022455012623019202",DSOV=X,X=$C($A(X)-(X?1L.E*32)),DIX=$E(DSOU,$A(X)-64) F DIY=2:1 S Y=$E(DSOV,DIY) Q:","[Y  I Y?1A S %=$E(DSOU,$A(Y)-$S(Y?1U:64,1:96)) I %-DIX,%-9 S DIX=% I % S X=X_% Q:$L(X)=4
"RTN","DICM1",100,0)
 S X=$E(X_"000",1,4) K DSOU,DSOV Q
"RTN","DICM1",101,0)
 ;
"RTN","DICM1",102,0)
ACT ;
"RTN","DICM1",103,0)
 S DIY=Y,DIY(1)=DIC,DIC("W")="",DIX=X
"RTN","DICM1",104,0)
A I $G(DO(2)) X:$D(^DD(+DO(2),0,"ACT")) ^("ACT")
"RTN","DICM1",105,0)
 I Y<0 S DIC=DIY(1),X=DIX G W
"RTN","DICM1",106,0)
 I $G(DO(2))["P" N % S %=^DD(+DO(2),.01,0) I $P(%,U,2)["P",$P(%,U,3)]"" S DIC=U_$P(%,U,3) D DO I $D(@(DIC_+$P(Y,U,2)_",0)")) S Y=+$P(Y,U,2)_U_$P(^(0),U) G A
"RTN","DICM1",107,0)
 S Y=DIY,DIC=DIY(1),X=DIX
"RTN","DICM1",108,0)
W K DIC("W")
"RTN","DICM1",109,0)
DO K DO D DO^DIC1
"RTN","DICM1",110,0)
 Q
"RTN","DICN")
0^29^B20243838^B19431875
"RTN","DICN",1,0)
DICN ;SFISC/GFT,XAK,TKW,SEA/TOAD - ADD NEW ENTRY ;2NOV2015
"RTN","DICN",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICN",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICN",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICN",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICN",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICN",7,0)
 ;
"RTN","DICN",8,0)
 ;COME HERE FROM L^DICM
"RTN","DICN",9,0)
 N DIENTRY,DIFILE,DIAC D:'$D(DO(2)) GETFA^DIC1(.DIC,.DO) S DO(1)=1
"RTN","DICN",10,0)
 I '$D(DINDEX) N DINDEX S DINDEX("#")=1,DINDEX("START")="B"
"RTN","DICN",11,0)
 N DISUBVAL,V
"RTN","DICN",12,0)
 I DINDEX("#")>1 M V=X N X D  I X="",DIC(0)'["E"!('$D(DISUBVAL)) D BAD^DIC1 Q
"RTN","DICN",13,0)
 . D VALIX(+DO(2),.DINDEX,.V,.DISUBVAL,.X,.DS) K V Q
"RTN","DICN",14,0)
 I $S($D(DLAYGO):DO(2)\1-(DLAYGO\1),1:1) S %=1 D B1 I '% D BAD^DIC1 Q
"RTN","DICN",15,0)
USR D DS S DIX=X
"RTN","DICN",16,0)
 I X'?16.N,X?.NP,X,DIC(0)["E",'$G(DICR),DS'["DINUM",$P(DS,U,2)'["N",DIC(0)["N"!$D(^DD(+DO(2),.001,0)) D N^DICN1 I $D(X) S DIENTRY=X G I
"RTN","DICN",17,0)
 S X=DIX D:DINDEX("#")'>1 VAL G I:$D(X)
"RTN","DICN",18,0)
 S X=DIX
"RTN","DICN",19,0)
B D BAD^DIC1 S Y=-1 Q
"RTN","DICN",20,0)
 ;
"RTN","DICN",21,0)
B1 Q:'DO(2)  Q:$D(^DD(+DO(2),0,"UP"))!(DO(2)=".12P")
"RTN","DICN",22,0)
 S DIFILE=+DO(2),DIAC="LAYGO" D ^DIAC K DIAC,DIFILE
"RTN","DICN",23,0)
 Q
"RTN","DICN",24,0)
 ;
"RTN","DICN",25,0)
1 I '$D(DIC("S")) D  ;CALLED FROM I+2. 'ARE YOU ADDING'? THRU NEXT 4 LINES
"RTN","DICN",26,0)
 .N M
"RTN","DICN",27,0)
 .S M=$$EZBLD^DIALOG(8058,$$OUT^DIALOGU(Y,"ORD")) ;" (the 14th" or whatever
"RTN","DICN",28,0)
 .S:$D(^DD(+DO(2),0,"UP")) M=M_$$EZBLD^DIALOG(8059,$$FILENAME^DIALOGZ(^("UP"))) S M=M_")"
"RTN","DICN",29,0)
 .I $L(M)+$L(DST)'>$S($G(IOM):IOM,1:80) S DST=DST_M
"RTN","DICN",30,0)
Y I $D(DDS) S A1="Q",DST=%_U_DST D H^DDSU Q
"RTN","DICN",31,0)
 W !,DST K DST
"RTN","DICN",32,0)
YN ;
"RTN","DICN",33,0)
 N %1 S %1=$$EZBLD^DIALOG(7001) S:'$D(%) %=0 W "? " W:(%>0) $P(%1,U,%),"// "
"RTN","DICN",34,0)
RX R %Y:$S($D(DTIME):DTIME,1:300) E  S DTOUT=1,%Y=U W $C(7)
"RTN","DICN",35,0)
 I %Y]""!'% S %=+$$PRS^DIALOGU(7001,%Y) S:(%<0&($A(%Y)'=94)) %=0
"RTN","DICN",36,0)
 I '%,%Y'?."?" W $C(7),"??",!?4,$$EZBLD^DIALOG(8040),": " G RX
"RTN","DICN",37,0)
 W:$X>73 ! W:% $S(%>0:"  ("_$P(%1,U,%)_")",1:"") Q
"RTN","DICN",38,0)
 ;
"RTN","DICN",39,0)
DS S DS=^DD(+DO(2),.01,0) Q
"RTN","DICN",40,0)
 ;
"RTN","DICN",41,0)
VAL I X'?.ANP K X Q
"RTN","DICN",42,0)
 I X[""""!(X["^") K X Q
"RTN","DICN",43,0)
 I $P(DS,U,2)'["N",$A(X)=45 K X Q
"RTN","DICN",44,0)
 I $P(DS,U,2)["*" S:DS["DINUM" DINUM=X Q
"RTN","DICN",45,0)
 S %=$$VALEXTS^DIETLIBF(+DO(2),.01) D  ;FOR VERSION 23
"RTN","DICN",46,0)
 .N DS,%T,%DT,C,DIG,DIH,DIU,DIV,DICR ;PRESERVE VARIABLES WHILE WE XECUTE INPUT TRANSFORM ON THE .01 FIELD
"RTN","DICN",47,0)
 .X %
"RTN","DICN",48,0)
 ;S %=$F(DS,"%DT=""E"),DS=$E(DS,1,%-2)_$E(DS,%,999) N DICTST S DICTST=DS["+X=X"&(X?16.N) K:DICTST X X:'DICTST $P(DS,U,5,99)
"RTN","DICN",49,0)
UNIQ I $P(DS,U,2)["U",$D(X),$D(@(DIC_"""B"",X)")) K X
"RTN","DICN",50,0)
 Q
"RTN","DICN",51,0)
 ;
"RTN","DICN",52,0)
I1 S DST=$C(7)_$$EZBLD^DIALOG(8060)
"RTN","DICN",53,0)
 I '$D(DIENTRY),Y]"" S DST=DST_$$EZBLD^DIALOG(8061,Y)
"RTN","DICN",54,0)
 S %=$$FILENAME^DIALOGZ(+DO(2)) I $L(DST)+$L(%)'>55 S DST=DST_$$EZBLD^DIALOG(8062,%) Q  ;**CCO/NI FILE NAME
"RTN","DICN",55,0)
 W:'$D(DDS) !,DST K A1 D:$D(DDS) H^DIC2 S DST="    "_$$EZBLD^DIALOG(8062,%) Q
"RTN","DICN",56,0)
 ;
"RTN","DICN",57,0)
I ;COME HERE FROM USR+2, ABOVE
"RTN","DICN",58,0)
 I DIC(0)["E",DO(2)'["A",DIC(0)'["W" K DTOUT,DUOUT D  G OUT^DICN0:$G(DTOUT)!($G(DUOUT)) I %'=1 S Y=-1 D BAD^DIC1 Q
"RTN","DICN",59,0)
 . S (Y,DIX)=X I Y]"" N C S C=$P(^DD(+DO(2),.01,0),U,2) D Y^DIQ ;TRANSFORM INTERNAL TO EXTERNAL IN ORDER TO DISPLAY IT
"RTN","DICN",60,0)
 . D I1 S %=2,Y=$P(DO,U,4)+1,X=DIX D 1
"RTN","DICN",61,0)
I2 . Q:%>0!($G(DTOUT))  I %=-1 S DUOUT=1 Q
"RTN","DICN",62,0)
 . W:'$D(DDS) $C(7)_"??",!?4,$$EZBLD^DIALOG(8040) D YN G I2
"RTN","DICN",63,0)
 G NEW:'$D(DIENTRY)
"RTN","DICN",64,0)
R D DS S DST="   "_$P(DS,U,1)_": "
"RTN","DICN",65,0)
 I '$D(DDS) W !,DST K DST R X:DTIME S:$E(X)=U DUOUT=1,Y=-1 S:'$T X=U,DTOUT=1,Y=-1
"RTN","DICN",66,0)
 I $D(DDS) S A1="Q",DST="3^"_DST D H^DDSU S X=% I $D(DTOUT) S X=U,Y=-1
"RTN","DICN",67,0)
 I X[U D BAD^DIC1 Q
"RTN","DICN",68,0)
 I X="" G R
"RTN","DICN",69,0)
 D VAL
"RTN","DICN",70,0)
HELP I '$D(X) D  G R ;INPUT NOT VALID.  SHOW HELP MESSAGE FOR .01 FIELD, WHEN TELLING USER HOW TO LAYGO A NEW ONE
"RTN","DICN",71,0)
 .W $C(7) W:'$D(DDS) "??" S DST=$$HELP^DIALOGZ(+DO(2),.01) Q:DST=""
"RTN","DICN",72,0)
 .S DST="    "_DST W:'$D(DDS) !,DST D:$D(DDS) H^DDSU
"RTN","DICN",73,0)
 ;
"RTN","DICN",74,0)
NEW ; try to add a new record to the file
"RTN","DICN",75,0)
 G NEW^DICN0
"RTN","DICN",76,0)
 ;
"RTN","DICN",77,0)
FILE ; DOCUMENTED ENTRY POINT: add a new record to a file
"RTN","DICN",78,0)
 ;
"RTN","DICN",79,0)
 N DIENTRY,DS,DIAC,DIFILE D NEW^DICN0,Q^DIC2 Q
"RTN","DICN",80,0)
 ;
"RTN","DICN",81,0)
FIRE ; fire the SET logic of a bulletin or trigger xref (in DZ)
"RTN","DICN",82,0)
 ; STORLIST^%RCR (called by NEW^DICN0)
"RTN","DICN",83,0)
 ;
"RTN","DICN",84,0)
 X DZ
"RTN","DICN",85,0)
 Q
"RTN","DICN",86,0)
 ;
"RTN","DICN",87,0)
VALIX(DIFILEI,DINDEX,V,DISUBVAL,X,DS) ;
"RTN","DICN",88,0)
 ; Save lookup values in array by field no. so we can update the fields on the new record.
"RTN","DICN",89,0)
 N VI,DISUB,DIERR,DIFILE,DIFIELD,DO,DIOK
"RTN","DICN",90,0)
 S X="" I $G(V)]"",$G(V(1))="" S V(1)=V
"RTN","DICN",91,0)
 F DISUB=1:1:DINDEX("#") I $G(V(DISUB))]"" D
"RTN","DICN",92,0)
 . S DIFILE=$G(DINDEX(DISUB,"FILE")),DIFIELD=$G(DINDEX(DISUB,"FIELD"))
"RTN","DICN",93,0)
 . S DIOK=0 I 'DIFILE!('DIFIELD) Q
"RTN","DICN",94,0)
 . S V=V(DISUB)
"RTN","DICN",95,0)
 . I DISUB=1 D  I DIOK S:DIOK'=2 DISUBVAL(DIFILE,DIFIELD)=V Q
"RTN","DICN",96,0)
 . . I $A(V)=34,V?.E1"""" S V=$E(V,2,($L(V))-1)
"RTN","DICN",97,0)
 . . I $G(DS("INT"))="",'$G(DICRS) S:"VP"[$G(DINDEX(1,"TYPE")) DIOK=2 Q
"RTN","DICN",98,0)
 . . S DIOK=1
"RTN","DICN",99,0)
 . . I DIFILE=DIFILEI,DIFIELD=.01 S X=$S($G(DICRS):V,1:DS("INT")) Q
"RTN","DICN",100,0)
 . . S DISUBVAL(DIFILE,DIFIELD,"INT")=$S($G(DICRS):V,1:DS("INT"))
"RTN","DICN",101,0)
 . . Q
"RTN","DICN",102,0)
 . S DISUBVAL(DIFILE,DIFIELD)=V
"RTN","DICN",103,0)
 . D CHK^DIE(DIFILE,DIFIELD,"",V,.VI,"DIERR") Q:VI="^"
"RTN","DICN",104,0)
 . I DIFILE=DIFILEI,DIFIELD=.01 S X=VI K DISUBVAL(DIFILE,.01) Q
"RTN","DICN",105,0)
 . S DISUBVAL(DIFILE,DIFIELD,"INT")=VI
"RTN","DICN",106,0)
 . Q
"RTN","DICN",107,0)
 Q
"RTN","DICN",108,0)
 ;
"RTN","DICN",109,0)
 ;#7001   Yes/No question
"RTN","DICN",110,0)
 ;#8040   Answer with 'Yes' or 'No'
"RTN","DICN",111,0)
 ;#8058   (the |entry number|
"RTN","DICN",112,0)
 ;#8059   for this |filename|
"RTN","DICN",113,0)
 ;#8060   Are you adding
"RTN","DICN",114,0)
 ;#8061   '|.01 field value|' as
"RTN","DICN",115,0)
 ;#8062   a new |filename|
"RTN","DICOMP0")
0^41^B23489999^B23226068
"RTN","DICOMP0",1,0)
DICOMP0 ;SFISC/GFT - EVALUATE COMPUTED FLD EXPR ;20JAN2016
"RTN","DICOMP0",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICOMP0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICOMP0",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICOMP0",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICOMP0",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICOMP0",7,0)
 ;
"RTN","DICOMP0",8,0)
 ;
"RTN","DICOMP0",9,0)
 N DICOMPI
"RTN","DICOMP0",10,0)
SETFUNC I DPS,$D(DPS(DPS,"SET")),'$D(W(DPS)) S T="""",D=$P(X,T)_$P(X,T,2) G BAD:$L(D)+2\5-1!(D'?.UN)!(D?1"D".E)!(DUZ(0)'="@") S X=T_D_T,DICOMPX(D)=D,Y=0 Q
"RTN","DICOMP0",11,0)
LIT I X?1"""".E1"""" S Y=0,%=$E(X,2,$L(X)-1) K:%[""" X "!(%[""" D @") Y S X=""""_$$CONVQQ^DILIBF(%)_"""" Q
"RTN","DICOMP0",12,0)
L S T=DLV,DICN=X
"RTN","DICOMP0",13,0)
TRY G M:'$D(J(T))!'$D(I(T)),M:+J(T)'=J(T),M:$G(^DD(J(T),.01,0))="",UP:$P(^(0),U,2)["W" S DIC="^DD("_J(T)_",",DG=$O(^DD(J(T),0,"NM",0))_" "
"RTN","DICOMP0",14,0)
 S DIC("S")=$S(W="["!($E(I,M,M+1)="'[")!$D(DICMX):"I ",1:"S %=$P(^(0),U,2) I '%,%'[""m"",")_"$$SCREEN^DICOMP0"
"RTN","DICOMP0",15,0)
 D DICS^DICOMPY:DUZ(0)'="@"
"RTN","DICOMP0",16,0)
R I X?1"#"1.NP S X=$E(X,2,99) D ^DIC G:Y>0 A:DLV,X S X="#"_X ;HERE IS WHERE WE PROCESS THE NUMBER OR NAME OF A FIELD
"RTN","DICOMP0",17,0)
 D ^DIC G A:Y>0
"RTN","DICOMP0",18,0)
N I $P(X,DG)="",X=DICN S X=$P(X,DG,2,9) G R
"RTN","DICOMP0",19,0)
NUMBER I X=$$EZBLD^DIALOG(7099) S Y=.001,Y(0)=0 G D ;**CCO/NI THE WORD 'NUMBER' IN A COMPUTED EXPRESSION
"RTN","DICOMP0",20,0)
UP S T=T-1,X=DICN G M:T<0,TRY:$D(J(T)) F T=T-99:1 G TRY:'$D(J(T+1))
"RTN","DICOMP0",21,0)
 ;
"RTN","DICOMP0",22,0)
A F D=M:1:$L(I)+1 Q:$F(X,$E(I,1,D))-1-D  S W=$E(I,D+1)
"RTN","DICOMP0",23,0)
 I DICOMP["?",DICN'="#.01",$P(Y,U,2)'=DICN,DG_$P(Y,U,2)'=DICN D  G BAD:%<0,N:%-1
"RTN","DICOMP0",24,0)
 .N N S N(1)=DICN,N(2)=DG,N(3)=$P(Y,U,2) W !,$$EZBLD^DIALOG(8201,.N) S %=1 D YN^DICN ;**CCO/NI (SAME)
"RTN","DICOMP0",25,0)
 E  S DICO("BACK",T)=+Y
"RTN","DICOMP0",26,0)
 S M=D
"RTN","DICOMP0",27,0)
X I $D(DICOMPX)#2 S %Y=J(T)_U_+Y_$E(";",1,$L(DICOMPX)) S:";"_DICOMPX_";"'[(";"_%Y) DICOMPX=%Y_DICOMPX
"RTN","DICOMP0",28,0)
 ;Take internal value of V-P Field for VPFILE Function --forgot about it when we realized that FILE Function exits!
"RTN","DICOMP0",29,0)
D S D=$P(Y(0),"^",2),%=T\100*100,DICN=+Y,DICOMPI=W=")" I D["V"&DICOMPI&$D(DPS($$NEST^DICOMP,"VPFILE")) S DICO("PT")=1
"RTN","DICOMP0",30,0)
 E  S DICOMPI=DICOMPI&$D(DPS($$NEST^DICOMP,"INTERNAL"))
"RTN","DICOMP0",31,0)
 D DATE:D["D"&'DICOMPI
"RTN","DICOMP0",32,0)
 I D["m"!D D MUL^DICOMPZ(D) Q
"RTN","DICOMP0",33,0)
 I $D(DICOMPX(1,J(T),+Y)) S X=DICOMPX(1,J(T),+Y) G O
"RTN","DICOMP0",34,0)
 I D["C" S:'$D(DG(%,T,+Y)) DG(%)=DG(%)+1,DG(%,T,+Y)=DG(%) S X=DQI_DG(%,T,+Y)_")" Q:D'["p"!DICOMPI  S DICN=+$P(D,"p",2),%Y=$G(^DIC(DICN,0,"GL")) Q:%Y=""  G POINT
"RTN","DICOMP0",35,0)
GET I DICOMP["G",T#100=0 S X="$$GET^DDSVAL("_J(T)_",D0,"_+Y_",,"""_$E("E",'DICOMPI)_""")" G O
"RTN","DICOMP0",36,0)
 D G^DICOMPY ;This will set return value X equal to something like "$P(Y(2),U,3)"
"RTN","DICOMP0",37,0)
O Q:DICOMPI
"RTN","DICOMP0",38,0)
 S T=J(T)
"RTN","DICOMP0",39,0)
S ;
"RTN","DICOMP0",40,0)
 S %=DLV0,DG=W=":"&'$D(DPS(DPS,"$S"))
"RTN","DICOMP0",41,0)
OUT I D["t"!(D["O"&(D'["P"!'DG))!(D["V"&'$D(DPS(DPS,"FILE"))) D  Q  ;OUTPUT TRANSFORM ON FIELD
"RTN","DICOMP0",42,0)
 .K DATE(K+1) S X="$$EXTERNAL^DIDU("_T_","_DICN_","""","_X_")",DICO("DIERR")=1 ;$$EXTERNAL may set an error condition, so stifle DIERR
"RTN","DICOMP0",43,0)
SET I D["S" S DG(%)=DG(%)+1,DG(%,DG(%))="$C(59)_$P($G(^DD("_T_","_DICN_",0)),U,3)",X="$P($P("_DQI_DG(%)_"),$C(59)_"_X_"_"":"",2),$C(59))" ;S X="$$SET^DIQ("_T_","_DICN_","_X_")"
"RTN","DICOMP0",44,0)
 Q:D'["P"  S %Y=U_$P(Y(0),U,3),DICN=+$P(@(%Y_"0)"),U,2)
"RTN","DICOMP0",45,0)
POINT I W=":" G MR:'$$OKFILE^DICOMPX(DICN,DICOMP)
"RTN","DICOMP0",46,0)
 I W'=":" S D=$P($G(^DD(DICN,.01,0)),U,2) I D'["V",D'["S",D'["P" D DATE:D["D" S X="$P($G("_%Y_"+"_X_",0)),U)" Q
"RTN","DICOMP0",47,0)
P G P^DICOMPX
"RTN","DICOMP0",48,0)
 ;
"RTN","DICOMP0",49,0)
M S T=$F(X," IN ") I T S X=$E(X,1,T-5),W=":",M=T-4,I=X_W_$E(I,T,999),T=$F(I," FILE",M) S:T&$F(DPUNC,$E(I,T)) I=$E(I,1,T-6)_$E(I,T,999) G DICOMP0
"RTN","DICOMP0",50,0)
 G MR:$L(X)>30 S DICF=X,T=$O(^DD("FUNC","B",X,0))
"RTN","DICOMP0",51,0)
 G LITDATE:'$D(^DD("FUNC",+T,3)),LITDATE:^(3)
"RTN","DICOMP0",52,0)
 I $G(^(1))'="" D 2^DICOMP S Y(0)=0,K=K+1,K(K)=X D DATE:$G(^(2))?1"D".E,DPS^DICOMPW Q
"RTN","DICOMP0",53,0)
 G MR:X'?1"PRIOR"4.U S Y=X,X="$P($$LAST^DIAUTL("_J(DLV0)_",D0,""*""),U)" I Y["USER",$D(^VA(200)) S $E(X,$L(X))=",2)",DICN=200,%Y="^VA(200," G POINT
"RTN","DICOMP0",54,0)
 G DATE
"RTN","DICOMP0",55,0)
 ;
"RTN","DICOMP0",56,0)
LITDATE S %DT="T" I $L(X)>2 D ^%DT I Y>0 S X=Y,Y(0)=0 D DATE Q  ;may be a literal date like "30DEC1944"
"RTN","DICOMP0",57,0)
BACKPNT S T=$O(^DIC("B",X)) I T]"",$P(T,X)=""!$D(^(X)),$D(J(0)) S T=DLV0 D ^DICOMPV I D>0 Q  ;try backwards-pointer  TOOK OFF CHECK FOR DICOMPW VARIABLE 3/28/2000
"RTN","DICOMP0",58,0)
MR I M'>$L(I),+X'=X D MR^DICOMP G L:X]""
"RTN","DICOMP0",59,0)
DDD I DICOMP["?",$D(^DDD("C")),DICOMP'["d" ; S T=$$^DICOMPU(X,.J,DICOMP,.DICMX) G BAD:$D(DUOUT) I T]"" W "  (",T,")" D   I $D(X),$D(Y) S:Y["m" DIMW="m" D:Y["D" DATE S K=K+1,K(K)=X_" S X=X" D DPS^DICOMPW S DLV=+Y Q
"RTN","DICOMP0",60,0)
 ;.D ST^DICOMPX S D=$E(I,M,999),DICOMP=$TR(DICOMP,"?")_"d" D RCR^DICOMPZ(T) S M=0,I=D
"RTN","DICOMP0",61,0)
BAD K Y Q
"RTN","DICOMP0",62,0)
 ;
"RTN","DICOMP0",63,0)
DATE ;
"RTN","DICOMP0",64,0)
 S DATE(K+1)=1 Q
"RTN","DICOMP0",65,0)
 ;
"RTN","DICOMP0",66,0)
SCREEN() ;Screen out certain fields as we process an atom
"RTN","DICOMP0",67,0)
 I $D(DICO("BACK"))=11,$G(DICO("BACK",T))=Y Q 0
"RTN","DICOMP0",68,0)
 I Y=DA,DICO(1)=T Q 0 ;Computed field cannot refer to itself!
"RTN","DICOMP0",69,0)
 I $P(^(0),U,2) Q '$G(DBOOL) ;A multiple cannot be manipulated as a Boolean!
"RTN","DICOMP0",70,0)
 I $P(^(0),U,2)'["P" Q 1
"RTN","DICOMP0",71,0)
 N P S P=$P(^(0),U,3) I P]"",$D(@(U_P_"0)")) Q 1 ;Only allow a pointer that points to an existing file!
"RTN","DICOMP0",72,0)
 Q 0
"RTN","DICQ1")
0^46^B38289362^B37466935
"RTN","DICQ1",1,0)
DICQ1 ;SFISC/GFT,TKW - HELP FOR LOOKUPS ;01MAR2016
"RTN","DICQ1",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICQ1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICQ1",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICQ1",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICQ1",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICQ1",7,0)
 ;
"RTN","DICQ1",8,0)
EN ; Set up parameters for lister call, then display current entries.
"RTN","DICQ1",9,0)
 I 'DIRECUR,'$D(DDS) D Z^DDSU
"RTN","DICQ1",10,0)
 I DICNT>1,$D(DZ)#2 S DST=" " D:DZ["??"&'$D(DDS) %^DICQ S DST=$$EZBLD^DIALOG(8068) D %^DICQ
"RTN","DICQ1",11,0)
 N DISCR S:$G(DIC("S"))]"" DISCR("S")=DIC("S")
"RTN","DICQ1",12,0)
 I $D(DIC("V")) M DISCR("V")=DIC("V")
"RTN","DICQ1",13,0)
 S %=$G(DIC("?PARAM",DIFILEI,"INDEX")) I %]"" D
"RTN","DICQ1",14,0)
 . S (DIX,DIBEGIX)=%,DIX("WAY")=1 D INDEX^DICUIX(.DIFILEI,"hl",.DIX) Q
"RTN","DICQ1",15,0)
 I $O(DIC("?PARAM",DIFILEI,"PART",0)) S DIPART(1)="",%=0 D
"RTN","DICQ1",16,0)
 . F  S %=$O(DIC("?PARAM",DIFILEI,"PART",%)) Q:'%  I '(%#1) S DIPART(%)=DIC("?PARAM",DIFILEI,"PART",%)
"RTN","DICQ1",17,0)
 . S DIPART=DIPART(1) Q
"RTN","DICQ1",18,0)
 N DIFLAGS,DIFIELDS,DIIENS S DIFLAGS="MPh"
"RTN","DICQ1",19,0)
 I 'DIUPRITE,"PV"[$G(DIX(1,"TYPE")) D
"RTN","DICQ1",20,0)
 . N DIFRPRT S DIFRPRT=DIFROM_$G(DIC("?PARAM",DIFILEI,"FROM",1))_$G(DIPART)
"RTN","DICQ1",21,0)
 . Q:'$$CHKP^DICUIX1(.DIFILEI,.DIX,DDC,DIFRPRT,.DISCR,1)
"RTN","DICQ1",22,0)
 . S DIFLAGS="MPQh" K DIFROM S DIFROM="" Q
"RTN","DICQ1",23,0)
 I DIUPRITE S DID01=0,DIBEGIX="#"
"RTN","DICQ1",24,0)
 S DIIENS=$S(DIC(0)["p":",",1:DIENS)
"RTN","DICQ1",25,0)
W S DIFIELDS="@;IX" D
"RTN","DICQ1",26,0)
 .I 'DIUPRITE,DID01!(DIC(0)["S") K DID01 Q
"RTN","DICQ1",27,0)
 .N EXT S EXT="$$EXT^DIC2("_DIFILEI_",.01,$P("_DIC_"Y,0),U))"
"RTN","DICQ1",28,0)
 .I '$D(DDS)!'$D(DDSMOUSY) S DIC("DID01")="W ""   "","_EXT Q
"RTN","DICQ1",29,0)
 .S DIC("DID01")="W ""   "" D WRITMOUS^DDSU("_EXT_")"
"RTN","DICQ1",30,0)
E1 K DDD S DD="",DIY=99,DDD=$S($D(DDS):1,1:5),(DIZ,DILN)=21
"RTN","DICQ1",31,0)
 I $D(DDH)>10 D LIST^DDSU Q:$D(DDSQ)
"RTN","DICQ1",32,0)
 I DIFROM]"" D  S DIFROM(1)=DIFROM
"RTN","DICQ1",33,0)
 . I +$P(DIFROM,"E")=DIFROM S DIFROM=DIFROM-.00000001 Q
"RTN","DICQ1",34,0)
 . N M F %=$L(DIFROM):-1:1 S M=$A(DIFROM,%) I M>32 S DIFROM=$E(DIFROM,1,%-1)_$C(M-1)_$C(122) Q
"RTN","DICQ1",35,0)
 . Q
"RTN","DICQ1",36,0)
 I DIFLAGS'["Q" S %=$G(DIC("?PARAM",DIFILEI,"FROM",1)) I %]"" D
"RTN","DICQ1",37,0)
 . S:DIFROM="" (DIFROM,DIFROM(1))=% S %=1
"RTN","DICQ1",38,0)
 . F  S %=$O(DIC("?PARAM",DIFILEI,"FROM",%)) Q:'%  I '(%#1) S DIFROM(%)=DIC("?PARAM",DIFILEI,"FROM",%)
"RTN","DICQ1",39,0)
 . Q
"RTN","DICQ1",40,0)
 ;
"RTN","DICQ1",41,0)
L ; List current entries in the file.
"RTN","DICQ1",42,0)
 N DICQ
"RTN","DICQ1",43,0)
 D LIST^DICL(.DIFILEI,DIIENS,DIFIELDS,DIFLAGS,DDC,.DIFROM,.DIPART,DIBEGIX,.DISCR,"","DICQ","",.DIC)
"RTN","DICQ1",44,0)
 K DIC("DID01"),DICQ
"RTN","DICQ1",45,0)
 D BK^DIEQ S:'$D(DDS) DDD=3 ;D LIST^DDSU ***
"RTN","DICQ1",46,0)
 K DDH Q:$D(DDSQ)!($G(DTOUT))
"RTN","DICQ1",47,0)
 D 0 Q
"RTN","DICQ1",48,0)
 ;
"RTN","DICQ1",49,0)
DSP(DINDEX,DICQ,DIC,DIFILE) ; Display entries from DICQ array
"RTN","DICQ1",50,0)
 ; note: this routine is called from the lister, DICLIX & DICL1.
"RTN","DICQ1",51,0)
 N I,J,F,X,Y,DD,DDD,DIY,DILN,DIZ,DIMAP,DDH,DID01,DIQUIET,DIPGM,DST,DISPACE,DIERR,DP
"RTN","DICQ1",52,0)
 S DIMAP=$G(DICQ(0,"MAP")),DDH=0,DST="",DIPGM="DICQ1",$P(DISPACE," ",10)=""
"RTN","DICQ1",53,0)
 S:$G(DIC("DID01"))]"" DID01=DIC("DID01")
"RTN","DICQ1",54,0)
 N DIKEYL,DIKEY I $O(DIFILE(DIFILE,"KEY",DIFILE,0)),DIC(0)'["S" M DIKEYL=DIFILE(DIFILE,"KEY",DIFILE)
"RTN","DICQ1",55,0)
 I $D(DIC("W"))!($D(DID01))!($D(DIKEYL)) D ID
"RTN","DICQ1",56,0)
 F I=0:0 S I=$O(DICQ(I)) Q:'I  S X=$G(DICQ(I,0)) I X]"" D
"RTN","DICQ1",57,0)
 . S DST=""
"RTN","DICQ1",58,0)
 . I DINDEX="#" S DST=$P(X,U)_"  " S:$L(DST)<7 DST=DST_$E(DISPACE,($L(DST)+1),7)
"RTN","DICQ1",59,0)
 . I $D(DIKEYL) S DIKEY(+X)="" F J=0:0 S J=$O(DIKEYL(J)) Q:'J!$G(DIERR)  F F=0:0 S F=$O(DIKEYL(J,F)) Q:'F!$G(DIERR)  D
"RTN","DICQ1",60,0)
 . . I (F=.01&($D(DID01))!(DINDEX("FLISTD")[("^"_F_"^"))) D  Q
"RTN","DICQ1",61,0)
 . . . S:DIKEY(+X)="" DIKEY(+X)=" " Q
"RTN","DICQ1",62,0)
 . . S Y=$$GET1^DIQ(DIFILE,+X_DIFILE(DIFILE,"KEY","IEN"),F,"","","DIERR") Q:$G(DIERR)
"RTN","DICQ1",63,0)
 . . I ($L(DIKEY(+X)))+($L(Y))+2>240 S DIERR=1 Q
"RTN","DICQ1",64,0)
 . . S DIKEY(+X)=DIKEY(+X)_$P("  ^",U,DIKEY(+X)]"")_Y Q
"RTN","DICQ1",65,0)
 . F J=2:1 Q:$P(DIMAP,U,J)=""  S Y=$P(X,U,J) D:$P(DIMAP,U,J+1)]""  S:$L(DST_Y)<240 DST=DST_Y
"RTN","DICQ1",66,0)
 . . S Y=Y_"   "
"RTN","DICQ1",67,0)
 . . I J=(DINDEX("#")+1) S Y=Y_"   "
"RTN","DICQ1",68,0)
 . . Q
"RTN","DICQ1",69,0)
 . I DST]"" S Y=+X,DDH=DDH+1,DDH(DDH,Y)=DST_"   "
"RTN","DICQ1",70,0)
 . Q
"RTN","DICQ1",71,0)
 S DD="",DIY=99,DDD=5,DP=DIFILE
"RTN","DICQ1",72,0)
 I '$G(DIC("?N",DIFILE)) S (DIZ,DILN)=21
"RTN","DICQ1",73,0)
 E  S (DIZ,DILN)=999
"RTN","DICQ1",74,0)
 D LIST^DDSU K DICQ
"RTN","DICQ1",75,0)
 K DIERR,^TMP("DIERR",$J)
"RTN","DICQ1",76,0)
 Q
"RTN","DICQ1",77,0)
 ;
"RTN","DICQ1",78,0)
ID ; Put code to display .01 field and Identifiers into DDH array.
"RTN","DICQ1",79,0)
 S DIY="I $D("_DIC_"Y,0))" I $D(DID01) S DIY=DIY_" "_DID01_" "_DIY
"RTN","DICQ1",80,0)
 I $D(DIKEYL) S:$D(DID01) DIY=DIY_" W ""  """ S DIY=DIY_" W DIKEY(Y)"
"RTN","DICQ1",81,0)
 I '$D(DIC("W")) S DDH("ID")=DIY Q
"RTN","DICQ1",82,0)
 S DIY=DIY_" "
"RTN","DICQ1",83,0)
 I $L(DIC("W"))+$L(DIY)<240 S DDH("ID")=DIY_DIC("W") Q
"RTN","DICQ1",84,0)
 S DDH("ID")=DIY_"X DDH(""ID"",1)" S DDH("ID",1)=DIC("W") Q
"RTN","DICQ1",85,0)
 ;
"RTN","DICQ1",86,0)
WOV N DIC,Y,DI1X,DIY,DIYX,%,C,DINAME S DIC=DIGBL,Y=DIEN,DI1X=0
"RTN","DICQ1",87,0)
W1 F  S DI1X=$O(^DD(DIFILEI,0,"ID",DI1X)) Q:DI1X=""  S %=^(DI1X) D
"RTN","DICQ1",88,0)
 . X "W ""  "",$E("_DIGBL_DIEN_",0),0)",%
"RTN","DICQ1",89,0)
 Q
"RTN","DICQ1",90,0)
 ;
"RTN","DICQ1",91,0)
0 ; If LAYGO allowed, display additional help.
"RTN","DICQ1",92,0)
 K DDC,DIEQ,DIW,DS I DIC(0)'["L" D QQ Q
"RTN","DICQ1",93,0)
 I $D(%Y)#2 S:%Y="??" DZ=%Y S:%Y?1P DZ="?"
"RTN","DICQ1",94,0)
 S DDH=+$G(DDH) N A1,DIACCESS S DIACCESS=1
"RTN","DICQ1",95,0)
 I $S($D(DLAYGO):DIFILEI-DLAYGO\1,1:1),DUZ(0)'="@",'$D(^DD(DIFILEI,0,"UP")) D CHKACC
"RTN","DICQ1",96,0)
 I '$G(DIACCESS) D RCR Q
"RTN","DICQ1",97,0)
10 ; Tell user that they may enter new entries to the file
"RTN","DICQ1",98,0)
 I DZ?1."?" S DST=" " D DS^DIEQ S DST=$$EZBLD^DIALOG(8069,$P(DO,U)) D DS^DIEQ D:DZ="?" HP
"RTN","DICQ1",99,0)
 D H
"RTN","DICQ1",100,0)
 I DO(2)["S" S DST=$$EZBLD^DIALOG(8068)_" " D %^DICQ D
"RTN","DICQ1",101,0)
 . N X,Y,I,A2,DST,DISETOC,DIMAXL,DIC
"RTN","DICQ1",102,0)
 . ; Build list of selectable codes into DISETOC for online help.
"RTN","DICQ1",103,0)
 . ;  If set-of-codes field has a screen, execute it.
"RTN","DICQ1",104,0)
 . S DIMAXL=0,DISETOC=""
"RTN","DICQ1",105,0)
 . I $G(^DD(+DO(2),.01,12.1))]"" X ^(12.1)
"RTN","DICQ1",106,0)
 . S X=$P(^DD(+DO(2),.01,0),U,3),I=+$P($P(^(0),U,2),"t",2) I X="",I S X=$$PROP4TYP^DIETLIBF("SET OF CODES",I)
"RTN","DICQ1",107,0)
 . I '$D(DIC("S")) S DISETOC=X
"RTN","DICQ1",108,0)
 . E  F I=1:1 S Y=$P($P(X,";",I),":") Q:Y=""  X DIC("S") I $T S DISETOC=DISETOC_$P(X,";",I)_";"
"RTN","DICQ1",109,0)
 . K DIC("S")
"RTN","DICQ1",110,0)
 . F X=1:1 S Y=$P($P(DISETOC,";",X),":") Q:Y=""  S:$L(Y)>DIMAXL DIMAXL=$L(Y)
"RTN","DICQ1",111,0)
 . S DIMAXL=DIMAXL+4
"RTN","DICQ1",112,0)
 . F X=1:1 S Y=$P(DISETOC,";",X) Q:Y=""  S A2="",$P(A2," ",DIMAXL-$L($P(Y,":")))=" ",DST="  "_$P(Y,":")_A2_$P(Y,":",2) D DS^DIEQ
"RTN","DICQ1",113,0)
 . Q
"RTN","DICQ1",114,0)
 I DO(2)["V" D
"RTN","DICQ1",115,0)
 . N DG,DU,D
"RTN","DICQ1",116,0)
 . S DU=+DO(2),D=.01 D V^DIEQ Q
"RTN","DICQ1",117,0)
 ;
"RTN","DICQ1",118,0)
RCR ; Recursive call to display entries on pointed-to file.
"RTN","DICQ1",119,0)
 I DO(2)'["P"!($G(DZ(1))=0) D QQ Q
"RTN","DICQ1",120,0)
 N %,D,DS,DIPTRIX S D=""
"RTN","DICQ1",121,0)
 S DS=^DD(+DO(2),.01,0)
"RTN","DICQ1",122,0)
 S DIPTRIX=$G(DIC("PTRIX",+DO(2),.01,+$P($P(DS,U,2),"P",2)))
"RTN","DICQ1",123,0)
 M %=DIC("PTRIX"),%(1)=DIC("?N"),%(2)=DIC("?PARAM")
"RTN","DICQ1",124,0)
 N DIC M DIC("PTRIX")=%,DIC("?N")=%(1),DIC("?PARAM")=%(2) K %
"RTN","DICQ1",125,0)
 S DIC=U_$P(DS,U,3),DIC(0)=$E("L",$P(DS,U,2)'["'")
"RTN","DICQ1",126,0)
 I $P(DS,U,2)["*" D
"RTN","DICQ1",127,0)
 . N DILCV,DICP,DIPTRIX,DISAV0 S DISAV0=DIC(0)
"RTN","DICQ1",128,0)
 . F DILCV=" D ^DIC"," D IX^DIC"," D MIX^DIC1" S DICP=$F(DS,DILCV) I DICP D  S DIC(0)=DISAV0
"RTN","DICQ1",129,0)
 . . X $P($E(DS,1,DICP-$L(DILCV)-1),U,5,99) Q
"RTN","DICQ1",130,0)
 . S D=$P($G(D),U) Q
"RTN","DICQ1",131,0)
 S:DIPTRIX]"" D=$P(DIPTRIX,U) K DIPTRIX,DS
"RTN","DICQ1",132,0)
 N DO,DIFILEI,DINDEX I D="" S D="B"
"RTN","DICQ1",133,0)
 S DIRECUR=DIRECUR+1
"RTN","DICQ1",134,0)
 D DQ^DICQ
"RTN","DICQ1",135,0)
QQ Q:$D(DDH)'>10
"RTN","DICQ1",136,0)
 K DDD S DD="",DIY=99,DDD=$S($D(DDS):1,1:5),(DIZ,DILN)=21
"RTN","DICQ1",137,0)
 S:$D(DDS) DDC=-1 D LIST^DDSU K DDC Q
"RTN","DICQ1",138,0)
 ;
"RTN","DICQ1",139,0)
HP N DG,X,%,DST
"RTN","DICQ1",140,0)
EGP S X=$$HELP^DIALOGZ(+DO(2),.01) D  S X=$G(^DD(+DO(2),.01,12)) D  ;**CCO/NI PLUS NEXT LINE   WRITE HELP MESSAGE FOR .01 FIELD
"RTN","DICQ1",141,0)
 .I X]"" F %=$L(X," "):-1:1 I $L($P(X," ",1,%))<70 S DST=$P(X," ",1,%) D DS^DIEQ,P1 Q
"RTN","DICQ1",142,0)
 Q
"RTN","DICQ1",143,0)
 ;
"RTN","DICQ1",144,0)
P1 I %'=$L(X," ") S DST=$P(X," ",%+1,99) D DS^DIEQ
"RTN","DICQ1",145,0)
 Q
"RTN","DICQ1",146,0)
 ;
"RTN","DICQ1",147,0)
H ; Display eXecutable help and long description for .01 field.
"RTN","DICQ1",148,0)
 N %,X,DIPGM S %=DIC,X=DZ,DIPGM="DICQ1" D
"RTN","DICQ1",149,0)
 . N DIC,D,DP,DIFILEI,DINDEX,DZ S DZ=X
"RTN","DICQ1",150,0)
 . S DIC=%,D=.01,DP=+DO(2) D H^DIEQ Q
"RTN","DICQ1",151,0)
 Q
"RTN","DICQ1",152,0)
 ;
"RTN","DICQ1",153,0)
CHKACC ;Check file access
"RTN","DICQ1",154,0)
 N A1,DIFILE,DIAC,% S DIFILE=+DO(2),DIAC="LAYGO",%=0 D ^DIAC
"RTN","DICQ1",155,0)
 S:% DIACCESS=1 Q
"RTN","DICQ1",156,0)
 ;
"RTN","DICQ1",157,0)
 ;#8069  You may enter a new |filename|, if you wish
"RTN","DICQ1",158,0)
 ;#8068  Choose from
"RTN","DICUIX")
0^50^B27430806^B22242347
"RTN","DICUIX",1,0)
DICUIX ;SEA/TOAD,SF/TKW - FileMan: Lookup Tools, Indexes ;24SEP2016
"RTN","DICUIX",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DICUIX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICUIX",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICUIX",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICUIX",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICUIX",7,0)
 ;;GFT;**20,28,67,165,1035,1041**
"RTN","DICUIX",8,0)
 ;
"RTN","DICUIX",9,0)
 ;
"RTN","DICUIX",10,0)
INDEX(DIFILE,DIFLAGS,DINDEX,DIFROM,DIPART,DINUMBER,DISCREEN,DILIST,DIOUT) ;
"RTN","DICUIX",11,0)
 ;
"RTN","DICUIX",12,0)
 ; build DINDEX array data for index
"RTN","DICUIX",13,0)
 ;
"RTN","DICUIX",14,0)
I1 ; try to find Index in Index file
"RTN","DICUIX",15,0)
 ;
"RTN","DICUIX",16,0)
 N DICODE,DIGET,DILENGTH,DINODE,DISUB,DITEMP,DITEMP2,DITO,DITOIEN,DITYPE,DIWAY,DIXIEN
"RTN","DICUIX",17,0)
 S DINDEX("FLIST")="",DINDEX("AT")=1,DIFROM("IEN")=+$G(DIFROM("IEN")),DIXIEN="",DIGET=1
"RTN","DICUIX",18,0)
 S:DINDEX'="#" DIXIEN=$O(^DD("IX","BB",DIFILE,DINDEX,""))
"RTN","DICUIX",19,0)
 I 'DIXIEN D XREF(.DIFILE,.DIFLAGS,.DINDEX,.DIPART,.DIFROM) Q
"RTN","DICUIX",20,0)
 ;
"RTN","DICUIX",21,0)
I2 ; in Index file, build list of subscript data
"RTN","DICUIX",22,0)
 ;
"RTN","DICUIX",23,0)
 S DINODE=^DD("IX",DIXIEN,0)
"RTN","DICUIX",24,0)
 S DINDEX("IXTYPE")=$P(DINODE,U,4) S:DIFLAGS["4" DINDEX("IXFILE")=DIXIEN
"RTN","DICUIX",25,0)
 S DINDEX("#")=0
"RTN","DICUIX",26,0)
 S DISUB=$O(^DD("IX",DIXIEN,11.1,"AC","Z"),-1)
"RTN","DICUIX",27,0)
 I $G(DIFROM(DISUB+1)) M DIFROM("IEN")=DIFROM(DISUB+1)
"RTN","DICUIX",28,0)
 S (DISUB,DIOUT)=0 N S
"RTN","DICUIX",29,0)
 F  D  Q:'DISUB  Q:DIOUT
"RTN","DICUIX",30,0)
 . S DISUB=$O(^DD("IX",DIXIEN,11.1,"AC",DISUB)) Q:'DISUB  S S=$O(^(DISUB,0)) Q:'S
"RTN","DICUIX",31,0)
 . S DINDEX("#")=DISUB,DIGET=1
"RTN","DICUIX",32,0)
 . S DINODE=$G(^DD("IX",DIXIEN,11.1,S,0))
"RTN","DICUIX",33,0)
 . I DIFLAGS["l" N X D  S DINDEX(DISUB,"PROMPT")=X
"RTN","DICUIX",34,0)
 . . S X=$P(DINODE,U,8) Q:X]""
"RTN","DICUIX",35,0)
EGP . . I $P(DINODE,U,3),$P(DINODE,U,4) S X=$$LABEL^DIALOGZ($P(DINODE,U,3),$P(DINODE,U,4)) ;**
"RTN","DICUIX",36,0)
 . . Q
"RTN","DICUIX",37,0)
 . S DINDEX(DISUB,"FIELD")=$P(DINODE,U,4)
"RTN","DICUIX",38,0)
 . S DINDEX(DISUB,"FILE")=$P(DINODE,U,3)
"RTN","DICUIX",39,0)
 . I $P(DINODE,U,2)["C"!(DINDEX(DISUB,"FILE")="") S DINDEX(DISUB,"FIELD")=""
"RTN","DICUIX",40,0)
 . I DINDEX(DISUB,"FILE"),DINDEX(DISUB,"FIELD") D
"RTN","DICUIX",41,0)
 . . I $G(^DD("IX",DIXIEN,11.1,S,4))]"" S DINDEX(DISUB,"TRANCODE")=^(4) ;TRANSFORM FOR LOOKUP
"RTN","DICUIX",42,0)
 . . I $G(^DD("IX",DIXIEN,11.1,S,2))]"" D
"RTN","DICUIX",43,0)
 . . . I $G(^DD("IX",DIXIEN,11.1,S,3))="" S DIGET=0 Q
"RTN","DICUIX",44,0)
 . . . S DINDEX(DISUB,"TRANOUT")=^DD("IX",DIXIEN,11.1,S,3),DIGET=3 Q  ;TRANSFORM FOR DISPLAY
"RTN","DICUIX",45,0)
 . . I "KSMU"[DINDEX("IXTYPE") S DIGET=2
"RTN","DICUIX",46,0)
 . . Q
"RTN","DICUIX",47,0)
 . S DILENGTH=$P(DINODE,U,5) I 'DILENGTH S DILENGTH=30 ;!(DILENGTH>100) ;GETS THE LENGTH FROM THE DEFINITION OF THE INDEX
"RTN","DICUIX",48,0)
 . S DIWAY=$S($P(DINODE,U,7)="B":-1,1:1)
"RTN","DICUIX",49,0)
 . D COMMON1^DICUIX2
"RTN","DICUIX",50,0)
 . Q
"RTN","DICUIX",51,0)
 I DIOUT S @DILIST@(0)="0^"_DINUMBER_"^0" D OUT^DICL Q
"RTN","DICUIX",52,0)
 D:DIFLAGS'["q" COMMON2^DICUIX2
"RTN","DICUIX",53,0)
 S DINDEX("FLIST")=DINDEX("FLIST")_"^"
"RTN","DICUIX",54,0)
 I DIFLAGS'["l",DIFLAGS'["h" Q
"RTN","DICUIX",55,0)
 N F,F1,F2,I S F=DINDEX("FLIST")
"RTN","DICUIX",56,0)
 F I=1:1:DINDEX("#") I $G(DINDEX(I,"GETEXT"))=0 S F1=$G(DINDEX(I,"FILE")),F2=$G(DINDEX(I,"FIELD")) I F1=DIFILEI,F2 D
"RTN","DICUIX",57,0)
 . S F1=$F(F,("^"_F2_"^")) Q:'F1  S F1=F1-2
"RTN","DICUIX",58,0)
 . S $E(F,(F1-$L(F2)),F1)="" Q
"RTN","DICUIX",59,0)
 S DINDEX("FLISTD")=F Q
"RTN","DICUIX",60,0)
 ;
"RTN","DICUIX",61,0)
 ;
"RTN","DICUIX",62,0)
 ;
"RTN","DICUIX",63,0)
XREF(DIFILE,DIFLAGS,DINDEX,DIPART,DIFROM) ;
"RTN","DICUIX",64,0)
 ; Index is in "IX" nodes
"RTN","DICUIX",65,0)
 ;
"RTN","DICUIX",66,0)
X1 ; Set DINDEX for search through upright file
"RTN","DICUIX",67,0)
 ;
"RTN","DICUIX",68,0)
 I DINDEX="#" D  Q
"RTN","DICUIX",69,0)
 . S DINDEX("#")=0,DINDEX(1,"FILE")=DIFILE,DINDEX(1,"ROOT")=DIFILE(DIFILE),DINDEX(1,"TYPE")="N"
"RTN","DICUIX",70,0)
 . N X S X=$S($G(DIFROM(1)):DIFROM(1),DIPART(1):DIPART(1),1:$G(DIFROM("IEN")))
"RTN","DICUIX",71,0)
 . S (DIFROM,DIFROM(1))=X S:X DIFROM("IEN")=X
"RTN","DICUIX",72,0)
 . I DIFLAGS["l"!(DIFLAGS["h") S DINDEX("FLISTD")=""
"RTN","DICUIX",73,0)
 . D:DIFLAGS'["q" COMMON2^DICUIX2 Q
"RTN","DICUIX",74,0)
 S DINDEX("#")=1,DINDEX("IXTYPE")="R"
"RTN","DICUIX",75,0)
 S DINDEX(1,"FILE")=$O(^DD(DIFILE,0,"IX",DINDEX,""))
"RTN","DICUIX",76,0)
 ;
"RTN","DICUIX",77,0)
X2 ; Build DINDEX for index in IX nodes.
"RTN","DICUIX",78,0)
 ;
"RTN","DICUIX",79,0)
 S DIOUT=0,DILENGTH=30
"RTN","DICUIX",80,0)
 S DINDEX(1,"FIELD")=""
"RTN","DICUIX",81,0)
 I DINDEX(1,"FILE") S DINDEX(1,"FIELD")=$O(^DD(DIFILE,0,"IX",DINDEX,DINDEX(1,"FILE"),""))
"RTN","DICUIX",82,0)
 I DINDEX(1,"FIELD")="",DINDEX="B" D
"RTN","DICUIX",83,0)
 . S DINDEX(1,"FILE")=DIFILE
"RTN","DICUIX",84,0)
 . S DINDEX(1,"FIELD")=.01 Q
"RTN","DICUIX",85,0)
 I DIFLAGS[3,DINDEX="B",'$D(@DIFILE(DIFILE)@("B")) D
"RTN","DICUIX",86,0)
 . D TMPB^DICUIX1(.DITEMP,DIFILE)
"RTN","DICUIX",87,0)
 . S DIFILE(DIFILE,"NO B")=DITEMP Q
"RTN","DICUIX",88,0)
 I DIFLAGS["l" S DINDEX(1,"PROMPT")=""
"RTN","DICUIX",89,0)
 I DINDEX(1,"FILE"),DINDEX(1,"FIELD") D  I DINDEX("IXTYPE")="*" K DINDEX S DINDEX="" Q
"RTN","DICUIX",90,0)
EGP2 . I DIFLAGS["l" S DINDEX(1,"PROMPT")=$$LABEL^DIALOGZ(DINDEX(1,"FILE"),DINDEX(1,"FIELD")) ;** FIELD LABEL
"RTN","DICUIX",91,0)
 . N I,X,Y,DIXFILE,DIXFIELD S DIXFILE=DINDEX(1,"FILE"),DIXFIELD=DINDEX(1,"FIELD")
"RTN","DICUIX",92,0)
 . F I=0:0 S I=$O(^DD(DINDEX(1,"FILE"),DINDEX(1,"FIELD"),1,I)) Q:'I  S X=$G(^(I,0)) I $P(X,U,2)=DINDEX S Y=$G(^(1)) D  Q
"RTN","DICUIX",93,0)
 . . S X=$E($P(X,U,3),1,2)
"RTN","DICUIX",94,0)
 . . S DINDEX("IXTYPE")=$S(X="":"R",X="KW":"K",X="SO":"S",(X="TR")!(X="BU"):"*",X]"":X,1:"R") ;WHAT KIND OF CROSS-REF IS IT?
"RTN","DICUIX",95,0)
 . . I "KSMU"[DINDEX("IXTYPE") S DIGET=2
"RTN","DICUIX",96,0)
 . . S DILENGTH=+$P(Y,"$E(X,1,",2)
"RTN","DICUIX",97,0)
 . . S:'DILENGTH DILENGTH=30 ;!(DILENGTH>100)
"RTN","DICUIX",98,0)
 . . S X=$P($P(^DD(DINDEX(1,"FILE"),DINDEX(1,"FIELD"),0),U,2),"t",2) I X,$G(^DI(.81,+X,201,2,31))]"" D  ;V 23.0: EXTENDED DATA TYPE INPUT TRANSFORM
"RTN","DICUIX",99,0)
 ...S DINDEX(1,"TRANEX","EXTENDED")=^(31)
"RTN","DICUIX",100,0)
 ...S DINDEX(1,"TRANEX")="N DIPA,DIQUIET S DIQUIET=1  D DIPA^DIETLIBF("_DIXFILE_","_DIXFIELD_") X DINDEX(1,""TRANEX"",""EXTENDED"") I '$D(X) S X="""""
"RTN","DICUIX",101,0)
 I $G(DIFROM(2)) S DIFROM("IEN")=DIFROM(2)
"RTN","DICUIX",102,0)
 S DISUB=1,DIWAY=1,DIOUT=0
"RTN","DICUIX",103,0)
 N I,X,Y
"RTN","DICUIX",104,0)
 D COMMON1^DICUIX2
"RTN","DICUIX",105,0)
 I DIOUT S @DILIST@(0)="0^"_DINUMBER_"^0" D OUT^DICL Q
"RTN","DICUIX",106,0)
 D:DIFLAGS'["q" COMMON2^DICUIX2
"RTN","DICUIX",107,0)
 S DINDEX("FLIST")=DINDEX("FLIST")_"^"
"RTN","DICUIX",108,0)
 I DIFLAGS["l"!(DIFLAGS["h") D
"RTN","DICUIX",109,0)
 . I DIGET=2 S DINDEX("FLISTD")="^^" Q
"RTN","DICUIX",110,0)
 . S DINDEX("FLISTD")=DINDEX("FLIST") Q
"RTN","DICUIX",111,0)
 S DITEMP=$G(DIFILE(DIFILE,"NO B")) I DITEMP]"" D BLDB^DICUIX1(DIFILE(DIFILE),DITEMP)
"RTN","DICUIX",112,0)
 Q
"RTN","DICUIX",113,0)
 ;
"RTN","DICUIX",114,0)
 ;
"RTN","DID1")
0^9^B31885031^B28866184
"RTN","DID1",1,0)
DID1 ;SFISC/XAK,JLT,GFT - STD DD LIST ;25OCT2016
"RTN","DID1",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DID1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DID1",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DID1",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DID1",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DID1",7,0)
 ;GFT;**7,76,105,152,999,1003,1004,1021,1039,1044,1046,1053**
"RTN","DID1",8,0)
 ;
"RTN","DID1",9,0)
 S DJ(Z)=D0,DDL1=14,DDL2=32 G B
"RTN","DID1",10,0)
 ;
"RTN","DID1",11,0)
L S DJ(Z)=0
"RTN","DID1",12,0)
A S DJ(Z)=$O(^DD(F(Z),DJ(Z))) I DJ(Z)'>0 S:DJ(Z)="" DJ(Z)=-1 W !! S Z=Z-1 Q
"RTN","DID1",13,0)
B S N=^DD(F(Z),DJ(Z),0) K DDF I $D(DIGR),Z<2!(DJ(Z)-.01) X DIGR E  G ND
"RTN","DID1",14,0)
 D HD:$Y+$L(X)+6>IOSL Q:M=U  W !!,F(Z),",",DJ(Z)
"RTN","DID1",15,0)
LABEL W ?(Z+Z+12),$P(N,U),?DDL2+4," "_$P(N,U,4)
"RTN","DID1",16,0)
 F X=0:0 S X=$O(^DD(F(Z),DJ(Z),.008,X)) Q:'X  S W=$P($G(^(X,0)),U) I W]"",$D(^DI(.85,X,0)) S I=$P(^(0),U,2)_": " W !?(Z+Z+12-$L(I)),I,W ;DISPLAY FOREIGN LABELS
"RTN","DID1",17,0)
 S X=$P(N,U,2)
"RTN","DID1",18,0)
WP I X,$D(^DD(+X,.01,0)) S W=$P(^(0),U,2) I W["W" D  S X=""
"RTN","DID1",19,0)
 .S X="WORD-PROCESSING #"_+X D  S X="(NOWRAP)" D:W["L"  S X="(IGNORE ""|"")" D:W["X"!(W["x")  S X="(UNEDITABLE)" D:W["I"  S X="(AUDITED)" D:$G(^("AUDIT"))]""
"RTN","DID1",20,0)
 ..W:$L(X)+$X+5>IOM !?18 W "   ",X
"RTN","DID1",21,0)
 F W="BOOLEAN","COMPUTED","FREE TEXT","SET","DATE","NUMBER","POINTER","K","VARIABLE POINTER","m","p" I X[$E(W) D VP^DIDX:$E(W)="V" S:W="K" W="MUMPS" S:W="p" W="POINTER" S:W="m" W="MULTIPLE" W ?40," "_W G ND:M=U
"RTN","DID1",22,0)
TYPE S W=+$P(X,"t",2) I W,$D(^DI(.81,W,0)) S W=" ("_$P(^(0),U)_" Data Type)" D W D  G ND:M=U
"RTN","DID1",23,0)
 .N X,Y F X=0:0 S X=$O(^DD(F(Z),DJ(Z),101,X)) Q:'X  I $D(^DI(.86,X,0)) W !?DDL1,"PROPERTY: ",?DDL2,$P(^(0),U) D  Q:M=U
"RTN","DID1",24,0)
 ..I $G(^DD(F(Z),DJ(Z),101,X,31))]"" S Y=^(31) X:$G(^DI(.86,X,41))=1 ^DD("DD") S W=" (Value = "_Y_")" D W
"RTN","DID1",25,0)
 .F X=0:0 S X=$O(^DD(F(Z),DJ(Z),201,X)) Q:'X  S Y=$G(^(X,31)) I Y]"",$D(^DI(.87,X,0)) W !?DDL1,$P(^(0),U),": ",Y
"RTN","DID1",26,0)
 I +X S W=" Multiple" S W=W_" #"_+X D W G ND:M=U
"RTN","DID1",27,0)
 I X["V" S I=0 F  S I=$O(^DD(F(Z),D0,"V",I)) Q:I'>0  S %Y=$P(^(I,0),U) I $D(^DIC(%Y,0)),$D(@(^(0,"GL")_"0)")) S ^UTILITY($J,"P",$E($P(^(0),U),1,30),0)=%Y,^(F(Z),DJ(Z))=0
"RTN","DID1",28,0)
 I 'X D
"RTN","DID1",29,0)
P .N Y,NM S:X["P" Y=U_$P(N,U,3),NM=+$P(X,"P",2) I X["C" S NM=+$P(X,"p",2) I NM S Y=$G(^DIC(NM,0,"GL"))
"RTN","DID1",30,0)
 .Q:'$D(Y)  N PF I Y[U,$D(@(Y_"0)")) S W=" TO "_$P(^(0),U)_" FILE (#"_NM_")",PF=$E($P(^(0),U),1,30)
"RTN","DID1",31,0)
 .E  S PF="UNDEFINED FILE"_$S(NM:" (#"_NM_")",1:""),W="  ***** TO AN "_PF_$S(Y[U:", STORED IN "_$$CREF^DILF(Y),1:"")_" *******",PF="}"_PF,NM="" W:($L(W)+$X)'<IOM !
"RTN","DID1",32,0)
 .S ^UTILITY($J,"P",PF,0)=NM,^(F(Z),DJ(Z))=0
"RTN","DID1",33,0)
 .D W
"RTN","DID1",34,0)
MP I X'["V" D RT^DIDX G:M=U ND
"RTN","DID1",35,0)
S I X["S" D  G ND:M=U
"RTN","DID1",36,0)
 .N N1,LANG
"RTN","DID1",37,0)
 .S N1=$P(N,U,3) F %1=1:1 S Y=$P(N1,";",%1) Q:Y=""  W ! S W="'"_$P(Y,":")_"' FOR "_$P(Y,":",2)_"; " D W Q:M=U  D
"RTN","DID1",38,0)
 ..F LANG=0:0 S LANG=$O(^DD(F(Z),DJ(Z),.007,LANG)) Q:'LANG  I $D(^(LANG,0)) W " (",$P(^(0),";",%1),")"
"RTN","DID1",39,0)
 G RD:$D(DINM) I X["C" S W=$P(N,U,5,99) W !?DDL1,"MUMPS CODE: " D W G ND:M=U G RD
"RTN","DID1",40,0)
 I "Q"'[$P(N,U,5) W !?DDL1,"INPUT TRANSFORM:" S W=$P(N,U,5,99) D W G ND:M=U
"RTN","DID1",41,0)
J S W=$P(N,U,2) I W'["N" S W=+$P(W,"J",2) I W W !?DDL1,"MAXIMUM LENGTH:   "  D W G ND:M=U
"RTN","DID1",42,0)
OT I $D(^DD(F(Z),DJ(Z),2))#2 W !?DDL1,"OUTPUT TRANSFORM:" D  D W G ND:M=U
"RTN","DID1",43,0)
 .I $P(^(0),U,2)'["O" S W="NOT EXECUTABLE!!  -- SPECIFIER NEEDS AN ""O""!"
"RTN","DID1",44,0)
 .E  S W=$S($D(^DD(F(Z),DJ(Z),2.1)):^(2.1),1:^(2))
"RTN","DID1",45,0)
RD D ^DID2:$O(^DD(F(Z),DJ(Z),2.99))]"" G ND:M=U I 'X S W="UNEDITABLE" W:X["I" ! D W:X["I" G N
"RTN","DID1",46,0)
 I $O(^DD(+X,0,"ID",""))]"" W !?DDL1,"IDENTIFIED BY:" S W="" F %=0:0 S %=$O(^DD(+X,0,"ID",%)) S:%>0 W=W_$P(^DD(+X,%,0),U)_"(#"_%_")"_$S($P(^(0),U,2)["R":"[R]",1:"")_", " I %'>0 S:W?.E1", " W=$E(W,1,$L(W)-2) D W G ND:M=U Q
"RTN","DID1",47,0)
 ;
"RTN","DID1",48,0)
 ;Print "WRITE" identifiers
"RTN","DID1",49,0)
 I '$D(DINM) S %=" " F  S %=$O(^DD(+X,0,"ID",%)) Q:%=""  D  Q:M=U
"RTN","DID1",50,0)
 . N DIDLN,DIDPG
"RTN","DID1",51,0)
 . S DIDLN(1)=$G(^DD(+X,0,"ID",%)) Q:DIDLN(1)?."^"
"RTN","DID1",52,0)
 . S DIDLN(0)=""""_%_""":    "
"RTN","DID1",53,0)
 . S DIDLN(0)=$J("",DDL2-DDL1-$L(DIDLN(0)))_DIDLN(0)
"RTN","DID1",54,0)
 . S DIDPG("H")="W """" D H^DIDH S:M=U PAGE(U)=1"
"RTN","DID1",55,0)
 . D WRPHI^DIKCP1(.DIDLN,IOM-1-DDL2,DDL1,DDL2-DDL1,1,.DIDPG)
"RTN","DID1",56,0)
 G:M=U ND
"RTN","DID1",57,0)
 ;
"RTN","DID1",58,0)
 I $D(^DD("KEY","B",+X)) D  G:M=U ND
"RTN","DID1",59,0)
 . N DIDPG
"RTN","DID1",60,0)
 . S DIDPG("H")="W """" S DC=DC+1 D ^DIDH1 S:M=U PAGE(U)=1"
"RTN","DID1",61,0)
 . D PRINT^DIKKP(+X,"","L"_DDL1_"C"_(DDL2-DDL1),.DIDPG)
"RTN","DID1",62,0)
 I $D(^DD("IX","B",+X)) D  G:M=U ND
"RTN","DID1",63,0)
 . N DIDPG
"RTN","DID1",64,0)
 . S DIDPG("H")="W """" S DC=DC+1 D ^DIDH1 S:M=U PAGE(U)=1"
"RTN","DID1",65,0)
 . D LIST^DIKCP(+X,"","L"_DDL1_"C"_(DDL2-DDL1),.DIDPG)
"RTN","DID1",66,0)
 S Z=Z+1,DDL1=DDL1+2,DDL2=DDL2+2,F(Z)=+X
"RTN","DID1",67,0)
 D L
"RTN","DID1",68,0)
N K DDN1 I X["X" S DDN1=1 W !,?DDL1,"NOTES:",?DDL2,"XXXX--CAN'T BE ALTERED EXCEPT BY PROGRAMMER" W ! G ND:M=U
"RTN","DID1",69,0)
 S W=0 I $O(^DD(F(Z),DJ(Z),5,W))'="",'$D(DDN1) W !?DDL1,"NOTES:"
"RTN","DID1",70,0)
TR S W=$O(^DD(F(Z),DJ(Z),5,W)) S:W="" W=-1 G IX:W'>0 S I=^(W,0),%=+I I '$D(^DD(%,$P(I,U,2),0))!$D(W(I)) K ^DD(F(Z),DJ(Z),5,W) G TR
"RTN","DID1",71,0)
 S W(I)=0 S WS=W D WR^DIDH1 W ! S W=WS K WS G TR
"RTN","DID1",72,0)
IX S F=0 F  G ND:M=U S F=$O(^DD(F(Z),DJ(Z),1,F)) Q:F'>0  W !?DDL1,"CROSS-REFERENCE:" D IX1
"RTN","DID1",73,0)
 S:F="" F=-1
"RTN","DID1",74,0)
 I $D(^DD("IX","F",F(Z),DJ(Z))) D  S:M=U DN=0
"RTN","DID1",75,0)
 . N DIDPG,DIDFLAG
"RTN","DID1",76,0)
 . S DIDPG("H")="W """" S DC=DC+1 D ^DIDH1 S:M=U PAGE(U)=1"
"RTN","DID1",77,0)
 . S DIDFLAG="L"_DDL1_"C"_(DDL2-DDL1)_"T1"
"RTN","DID1",78,0)
 . D PRINT^DIKCP(F(Z),DJ(Z),$E("R",$G(DIDRANGE))_"FS"_DIDFLAG_$E("N",$D(DINM)#2),.DIDPG) Q:M=U
"RTN","DID1",79,0)
 . D:'$G(DIDRANGE) LIST^DIKCP(F(Z),DJ(Z),"RS"_DIDFLAG,.DIDPG)
"RTN","DID1",80,0)
ND S X="" G:M'=U A:Z>1 Q
"RTN","DID1",81,0)
IX1 S W=^(F,0)_" " K DDF W ?DDL2,W,! G ND:M=U D TP:$P(W,U,3)["TRIG" I '$D(DINM) S X=0 F %=0:0 S X=$O(^DD(F(Z),DJ(Z),1,F,X)) Q:X=""  I X'="%D",X'="DT" S W=^(X) S:$L(W)<248 W=X_")= "_W K:X=3 DDF D W W ! G ND:M=U
"RTN","DID1",82,0)
 Q:'$D(^("%D"))
"RTN","DID1",83,0)
 ;
"RTN","DID1",84,0)
 N DIDI,DIDN,DIDZ,DIWF,DIWL,DIWR,X
"RTN","DID1",85,0)
 K ^UTILITY($J,"W")
"RTN","DID1",86,0)
 S DIWF="W",DIWL=DDL2+1,DIWR=IOM,DIDZ=Z
"RTN","DID1",87,0)
 S DIDN=$P($G(^DD(F(DIDZ),DJ(DIDZ),1,F,"%D",0)),U,3),DIDI=0
"RTN","DID1",88,0)
 F  S DIDI=$O(^DD(F(DIDZ),DJ(DIDZ),1,F,"%D",DIDI)) Q:'DIDI!(DIDN&(DIDI>DIDN))  S X=^(DIDI,0) D ^DIWP I $D(DN),'DN S M=U Q
"RTN","DID1",89,0)
 I M'=U D ^DIWW I $D(DN),'DN S M=U
"RTN","DID1",90,0)
 I M'=U W !
"RTN","DID1",91,0)
 E  K DIOEND
"RTN","DID1",92,0)
 S Z=DIDZ
"RTN","DID1",93,0)
 K ^UTILITY($J,"W")
"RTN","DID1",94,0)
 Q
"RTN","DID1",95,0)
 ;
"RTN","DID1",96,0)
TP ;TRIGGER POINTER.    SHOULD BE A DO-DOT UNDER IX1
"RTN","DID1",97,0)
 S X=+$P(^(0),U,4) I F(Z)-X,$D(^DIC(X,0))#2 S ^UTILITY($J,"P",$E($P(^(0),U,1),1,30),0)=X,^(F(Z),DJ(Z))=6
"RTN","DID1",98,0)
 Q
"RTN","DID1",99,0)
W F K=0:0 W:$D(DDF) ! S:(($L(W)+DDL2)>IOM) DDL2=32 W ?DDL2 S %Y=$E(W,IOM-$X,999) W $E(W,1,IOM-$X-1) Q:%Y=""  S W=%Y,DDF=1
"RTN","DID1",100,0)
 K:'X DDF Q:$Y+6<IOSL
"RTN","DID1",101,0)
HD S DC=DC+1 D ^DIDH Q
"RTN","DIDU")
0^12^B42137549^B40609213
"RTN","DIDU",1,0)
DIDU ;SEA/TOAD - VA FileMan: DD Tools, External Format ;5NOV2012
"RTN","DIDU",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIDU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIDU",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIDU",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIDU",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIDU",7,0)
 ;
"RTN","DIDU",8,0)
EXTERNAL(DIFILE,DIFIELD,DIFLAGS,DINTERNL,DIMSGA) ;
"RTN","DIDU",9,0)
 ;DIFLAGS       Flags (to control output transforms on pointers)
"RTN","DIDU",10,0)
 ;                ("F"=execute first output transform, "L"=execute last output transform, "i"=return internal value of field at end of pointer chain,
"RTN","DIDU",11,0)
 ;                 "h"=return external value but don't execute output transform).
"RTN","DIDU",12,0)
 ;
"RTN","DIDU",13,0)
 ; convert a value from internal to external format
"RTN","DIDU",14,0)
 ; used all over lookup routines
"RTN","DIDU",15,0)
 ;
"RTN","DIDU",16,0)
XTRNLX ;
"RTN","DIDU",17,0)
 ;
"RTN","DIDU",18,0)
 ; support for documented entry point $$EXTERNAL^DILFD
"RTN","DIDU",19,0)
 ; branch from DILFD or DIQGU
"RTN","DIDU",20,0)
 ;
"RTN","DIDU",21,0)
E1 ; set up DBS environment variables
"RTN","DIDU",22,0)
 ;
"RTN","DIDU",23,0)
 I '$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIDU",24,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DIDU",25,0)
 N DICLERR S DICLERR=$G(DIERR) K DIERR
"RTN","DIDU",26,0)
 ;
"RTN","DIDU",27,0)
E2 ; handle bad input variables
"RTN","DIDU",28,0)
 ;
"RTN","DIDU",29,0)
 I $G(DINTERNL)="" Q ""
"RTN","DIDU",30,0)
 S DIMSGA=$G(DIMSGA)
"RTN","DIDU",31,0)
 S DIFLAGS=$G(DIFLAGS)
"RTN","DIDU",32,0)
 I DIFLAGS'?.1(1"F",1"L",1"U",1"i",1"h",1"A") D ERR(DIMSGA,301,"","","",DIFLAGS) Q ""
"RTN","DIDU",33,0)
 I $G(DIFIELD)'>0 D ERR(DIMSGA,202,"","","","FIELD") Q ""
"RTN","DIDU",34,0)
 ;
"RTN","DIDU",35,0)
E3 ; get field definition and type, handle bad file or field
"RTN","DIDU",36,0)
 ;
"RTN","DIDU",37,0)
 I $G(DIFILE)<0 D ERR(DIMSGA,202,"","","","FILE") Q ""
"RTN","DIDU",38,0)
 N DINODE S DINODE=$G(^DD(DIFILE,DIFIELD,0))
"RTN","DIDU",39,0)
 I DINODE="" D  Q ""
"RTN","DIDU",40,0)
 . I '$D(^DD(DIFILE)) D ERR(DIMSGA,401,DIFILE)
"RTN","DIDU",41,0)
 . E  D ERR(DIMSGA,501,DIFILE,"",DIFIELD,DIFIELD)
"RTN","DIDU",42,0)
 N DITYPE S DITYPE=$P(DINODE,U,2)
"RTN","DIDU",43,0)
 ;
"RTN","DIDU",44,0)
E4 ; initialize loop control, transform code, pointer chain window,
"RTN","DIDU",45,0)
 ; pointer file info, and resolved value variables
"RTN","DIDU",46,0)
 ;
"RTN","DIDU",47,0)
 N DICHAIN,DIDONE,DIOUT S (DICHAIN,DIDONE,DIOUT)=0
"RTN","DIDU",48,0)
 N DIXFORM S DIXFORM=""
"RTN","DIDU",49,0)
 N DINEXT,DIPREV,DIPREVF S (DINEXT,DIPREV,DIPREVF)=""
"RTN","DIDU",50,0)
 N DIEN,DIHEAD,DIROOT S DIEN=""
"RTN","DIDU",51,0)
 N DIEXTRNL S DIEXTRNL=""
"RTN","DIDU",52,0)
 ;
"RTN","DIDU",53,0)
E5 ; handle output transforms (see docs for effects of flags)
"RTN","DIDU",54,0)
 ; under right conditions, execute output transform on value & quit
"RTN","DIDU",55,0)
 ;
"RTN","DIDU",56,0)
 F  D  I DIDONE!$G(DIERR)!DIOUT Q
"RTN","DIDU",57,0)
 . I DIFLAGS["U",DIXFORM'="",DITYPE'["P",DITYPE'["V" S DITYPE=DITYPE_"O"
"RTN","DIDU",58,0)
TYPE . I DITYPE["O"!(DITYPE["t"),DIFLAGS'["i",DIFLAGS'["h" D  I DIDONE!$G(DIERR) Q
"RTN","DIDU",59,0)
 . . I DIFLAGS["F",DICHAIN Q
"RTN","DIDU",60,0)
 . . I DIFLAGS["L",DITYPE["P"!(DITYPE["V") Q
"RTN","DIDU",61,0)
 . . I DIXFORM=""!(DIFLAGS'["U") S DIXFORM=$G(^DD(DIFILE,DIFIELD,2)) I DITYPE["t" S DIXFORM=$$OUTPUT^DIETLIBF
"RTN","DIDU",62,0)
 . . I DIXFORM="" Q
"RTN","DIDU",63,0)
 . . I DIFLAGS["U",DITYPE["P"!(DITYPE["V") Q
"RTN","DIDU",64,0)
 . . N Y S Y=DINTERNL X DIXFORM
"RTN","DIDU",65,0)
 . . I $G(DIERR) D ERR^DICF4(120,DIFILE,DIEN,"","Output Transform") Q
"RTN","DIDU",66,0)
 . . S DIEXTRNL=Y,DIDONE=1
"RTN","DIDU",67,0)
 .
"RTN","DIDU",68,0)
E6 . ; continue with loop only for pointers or variable pointers
"RTN","DIDU",69,0)
 .
"RTN","DIDU",70,0)
 . I DITYPE S DIOUT=1 Q
"RTN","DIDU",71,0)
 . I DITYPE'["P",DITYPE'["V" S DIOUT=1 Q
"RTN","DIDU",72,0)
 .
"RTN","DIDU",73,0)
E7 . ; if the value's not numeric, it's not valid; note that throughout
"RTN","DIDU",74,0)
 . ; module we return two different errors depending on whether the
"RTN","DIDU",75,0)
 . ; value passed in is bad, or one found in the pointer chain is
"RTN","DIDU",76,0)
 .
"RTN","DIDU",77,0)
 . I 'DINTERNL D  Q
"RTN","DIDU",78,0)
 . . I 'DICHAIN D ERR(DIMSGA,330,"","","",DINTERNL,"pointer") Q
"RTN","DIDU",79,0)
 . . D ERR(DIMSGA,630,DIFILE,"",DIFIELD,DIEN,DINTERNL,"pointer")
"RTN","DIDU",80,0)
 .
"RTN","DIDU",81,0)
E8 . ; get pointed to file's root and #
"RTN","DIDU",82,0)
 .
"RTN","DIDU",83,0)
 . I DITYPE["P" S DIROOT=$P(DINODE,U,3),DINEXT=+$P($P(DINODE,U,2),"P",2) D  Q:$G(DIERR)
"RTN","DIDU",84,0)
 . . I DIROOT="DIC(.2," S DINEXT=.2
"RTN","DIDU",85,0)
 . . I 'DINEXT!(DIROOT="") D ERR(DIMSGA,537,DIFILE,,DIFIELD)
"RTN","DIDU",86,0)
 . . Q
"RTN","DIDU",87,0)
 . I DITYPE["V" S DIROOT=$P(DINTERNL,";",2),DINEXT="" D  Q:$G(DIERR)
"RTN","DIDU",88,0)
 . . I DIROOT="" D ERR(DIMSGA,348,,,,DINTERNL) Q
"RTN","DIDU",89,0)
 . . S DIHEAD=$G(@(U_DIROOT_"0)"))
"RTN","DIDU",90,0)
 . . I DIHEAD="" D  Q
"RTN","DIDU",91,0)
 . . . D HEADER(DIFILE,DIEN,DIFIELD,DITYPE,DICHAIN,DINTERNL,DINEXT)
"RTN","DIDU",92,0)
 . . S DINEXT=+$P(DIHEAD,U,2) I 'DINEXT D  Q
"RTN","DIDU",93,0)
 . . . D ERR(DIMSGA,404,"","","",$$CREF^DILF(U_DIROOT))
"RTN","DIDU",94,0)
 .
"RTN","DIDU",95,0)
E9 . ; ensure pointed to data file exists, and advance file #s
"RTN","DIDU",96,0)
 .
"RTN","DIDU",97,0)
 . I '$D(@(U_DIROOT_"+DINTERNL)")) D  Q
"RTN","DIDU",98,0)
 . . N DI S DI="pointer to File #"
"RTN","DIDU",99,0)
 . . I 'DICHAIN D ERR(DIMSGA,330,"","","",DINTERNL,DI_DINEXT) Q
"RTN","DIDU",100,0)
 . . D ERR(DIMSGA,630,DIFILE,DIFIELD,"",DIEN,DINTERNL,DI_DINEXT)
"RTN","DIDU",101,0)
 . S DIPREV=DIFILE,DIFILE=DINEXT
"RTN","DIDU",102,0)
 .
"RTN","DIDU",103,0)
E10 . ; advance pointer value, file characteristics, & pointer window
"RTN","DIDU",104,0)
 . ; ensure pointed to record exists, & its .01 has a DD
"RTN","DIDU",105,0)
 . ; set flag that we are now in the pointer chain
"RTN","DIDU",106,0)
 .
"RTN","DIDU",107,0)
 . S DIEN=+DINTERNL
"RTN","DIDU",108,0)
 . S DINTERNL=$P($G(^(DIEN,0)),U) ;***** Naked *****
"RTN","DIDU",109,0)
 . I DINTERNL="" D ERR(DIMSGA,603,DIFILE,"",.01,DIEN) Q
"RTN","DIDU",110,0)
 . S DINODE=$G(^DD(DIFILE,.01,0))
"RTN","DIDU",111,0)
 . S DITYPE=$P(DINODE,U,2)
"RTN","DIDU",112,0)
 . I DITYPE="" D ERR(DIMSGA,510,DIFILE,"",.01) Q
"RTN","DIDU",113,0)
 . S DIPREVF=DIFIELD,DIFIELD=.01
"RTN","DIDU",114,0)
 . S DICHAIN=1
"RTN","DIDU",115,0)
 . S:DIFILE=.2 DIDONE=1 Q
"RTN","DIDU",116,0)
 ;
"RTN","DIDU",117,0)
E11 ; exit if we executed an output transform or ran into an error
"RTN","DIDU",118,0)
 ;
"RTN","DIDU",119,0)
 ; Special "i" flag returns internal value at end of pointer chain
"RTN","DIDU",120,0)
 I DIFLAGS["i" Q DINTERNL
"RTN","DIDU",121,0)
 I DIFILE=.2 Q DINTERNL
"RTN","DIDU",122,0)
 I DIDONE Q DIEXTRNL
"RTN","DIDU",123,0)
 I $G(DIERR) Q ""
"RTN","DIDU",124,0)
 ;
"RTN","DIDU",125,0)
E12 ; handle illegal data types (pointers, word processings, and multiples)
"RTN","DIDU",126,0)
 ;
"RTN","DIDU",127,0)
 I DITYPE["C" D ERRPTR("Computed") Q ""
"RTN","DIDU",128,0)
 I DITYPE["W" D ERRPTR("Word Processing") Q ""
"RTN","DIDU",129,0)
 I DITYPE S DITYPE=$P($G(^DD(+DITYPE,.01,0)),U,2) D  Q ""
"RTN","DIDU",130,0)
 . I DITYPE["W" D ERRPTR("Word Processing") Q
"RTN","DIDU",131,0)
 . D ERRPTR("Multiple") Q
"RTN","DIDU",132,0)
 ;
"RTN","DIDU",133,0)
E13 ; handle sets of codes
"RTN","DIDU",134,0)
 ;
"RTN","DIDU",135,0)
 I DITYPE["S" D  Q DIEXTRNL
"RTN","DIDU",136,0)
 . N DICODES S DICODES=$P(DINODE,U,3)
"RTN","DIDU",137,0)
 . N DISTART S DISTART=$F(";"_DICODES,";"_DINTERNL_":")
"RTN","DIDU",138,0)
 . I 'DISTART S DIEXTRNL="" D  Q
"RTN","DIDU",139,0)
 . . I 'DICHAIN D ERR(DIMSGA,730,DIFILE,"",DIFIELD,DINTERNL,"code") Q
"RTN","DIDU",140,0)
 . . D ERR(DIMSGA,630,DIFILE,DIFIELD,"",DIEN,DINTERNL,"code")
"RTN","DIDU",141,0)
SET . S DISTART=DINTERNL D PARSET^DIQ(DICODES,.DISTART) S DIEXTRNL=DISTART
"RTN","DIDU",142,0)
 ;
"RTN","DIDU",143,0)
E14 ; handle dates, and return all others as they are
"RTN","DIDU",144,0)
 ;
"RTN","DIDU",145,0)
 I DITYPE["D",DINTERNL D  Q DIEXTRNL
"RTN","DIDU",146,0)
 . S DIEXTRNL=$$DATE^DIUTL(DINTERNL) ;**CCO/NI
"RTN","DIDU",147,0)
 . I DIEXTRNL'="" Q
"RTN","DIDU",148,0)
 . I 'DICHAIN D ERR(DIMSGA,330,"","","",DINTERNL,"date") Q
"RTN","DIDU",149,0)
 . D ERR(DIMSGA,630,DIFILE,"",DIFIELD,DIEN,DINTERNL,"date")
"RTN","DIDU",150,0)
 I DICLERR'=""!$G(DIERR) D
"RTN","DIDU",151,0)
 . S DIERR=$G(DIERR)+DICLERR_U_($P($G(DIERR),U,2)+$P(DICLERR,U,2))
"RTN","DIDU",152,0)
 Q DINTERNL
"RTN","DIDU",153,0)
 ;
"RTN","DIDU",154,0)
HEADER(DIFILE,DIEN,DIFIELD,DITYPE,DICHAIN,DINTERNL,DINEXT) ;
"RTN","DIDU",155,0)
 ;
"RTN","DIDU",156,0)
 ; pick a header error and log it
"RTN","DIDU",157,0)
 ; EXTERNAL
"RTN","DIDU",158,0)
 ;
"RTN","DIDU",159,0)
 I DITYPE["P" D  ; pointer
"RTN","DIDU",160,0)
 . I 'DINEXT!'$D(^DD(DINEXT)) D ERR(DIMSGA,537,DIFILE,"",DIFIELD) Q
"RTN","DIDU",161,0)
 . D ERR(DIMSGA,403,DINEXT)
"RTN","DIDU",162,0)
 ;
"RTN","DIDU",163,0)
 E  D            ; variable pointer
"RTN","DIDU",164,0)
 . I DICHAIN D ERR(DIMSGA,648,DIFILE,"",DIFIELD,DIEN,DINTERNL) Q
"RTN","DIDU",165,0)
 . D ERR(DIMSGA,348,"","","",DINTERNL)
"RTN","DIDU",166,0)
 Q
"RTN","DIDU",167,0)
 ;
"RTN","DIDU",168,0)
ERR(DIMSGA,DIERN,DIFILE,DIIENS,DIFIELD,DI1,DI2,DI3) ;
"RTN","DIDU",169,0)
 ;
"RTN","DIDU",170,0)
 ; error logging procedure
"RTN","DIDU",171,0)
 ; EXTERNAL
"RTN","DIDU",172,0)
 ;
"RTN","DIDU",173,0)
 I $G(DIFLAGS)["A",$$ALLOW(DIERN) S DIDONE=1 Q
"RTN","DIDU",174,0)
 N DIPE,DI F DI="FILE","IENS","FIELD",1:1:3 S DIPE(DI)=$G(@("DI"_DI))
"RTN","DIDU",175,0)
 D BLD^DIALOG(DIERN,.DIPE,.DIPE,DIMSGA,"F")
"RTN","DIDU",176,0)
 S DIERR=$G(DIERR)+DICLERR_U_($P($G(DIERR),U,2)+$P(DICLERR,U,2))
"RTN","DIDU",177,0)
 Q
"RTN","DIDU",178,0)
 ;
"RTN","DIDU",179,0)
ERRPTR(DITYPE) ;
"RTN","DIDU",180,0)
 ;
"RTN","DIDU",181,0)
 ; error logging shell for errors 520 & 537
"RTN","DIDU",182,0)
 ; EXTERNAL
"RTN","DIDU",183,0)
 ;
"RTN","DIDU",184,0)
 I DICHAIN D ERR(DIMSGA,537,DIPREV,"",DIPREVF) Q
"RTN","DIDU",185,0)
 D ERR(DIMSGA,520,DIFILE,"",DIFIELD,DITYPE)
"RTN","DIDU",186,0)
 Q
"RTN","DIDU",187,0)
 ;
"RTN","DIDU",188,0)
ALLOW(X) ;If ALLOW appears, do not call erroneous data an error
"RTN","DIDU",189,0)
 N I,T F I=3:1 S T=$T(ALLOW+I) Q:T?.P  I T[X Q:T'["ALLOW"  K T Q
"RTN","DIDU",190,0)
 Q '$D(T)
"RTN","DIDU",191,0)
 ; 202    The input parameter that identifies the |1
"RTN","DIDU",192,0)
 ; 301    The passed flag(s) '|1|' are unknown or in
"RTN","DIDU",193,0)
 ; 330    The value '|1|' is not a valid |2|.           ALLOW
"RTN","DIDU",194,0)
 ; 348    The passed value '|1|' points to a file th
"RTN","DIDU",195,0)
 ; 401    File #|FILE| does not exist.
"RTN","DIDU",196,0)
 ; 403    File #|FILE| lacks a Header Node.
"RTN","DIDU",197,0)
 ; 404    The File Header node of the file stored at
"RTN","DIDU",198,0)
 ; 501    File #|FILE| does not contain a field |1|.
"RTN","DIDU",199,0)
 ; 510    The data type for Field #|FIELD| in File #
"RTN","DIDU",200,0)
 ; 520    A |1| field cannot be processed by this ut
"RTN","DIDU",201,0)
 ; 537    Field #|FIELD| in File #|FILE| has a corru
"RTN","DIDU",202,0)
 ; 603    Entry #|1| in File #|FILE| lacks the requi
"RTN","DIDU",203,0)
 ; 630    In Entry #|1| of File #|FILE|, the value '    ALLOW
"RTN","DIDU",204,0)
 ; 648    In Entry #|1| of File #|FILE|, the value '
"RTN","DIDU",205,0)
 ; 730    The value '|1|' is not a valid |2| accordi    ALLOW
"RTN","DIDU",206,0)
 ;
"RTN","DIDX")
0^10^B17887310^B16519592
"RTN","DIDX",1,0)
DIDX ;SFISC/XAK - BRIEF DD ;4NOV2012
"RTN","DIDX",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIDX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIDX",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIDX",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIDX",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIDX",7,0)
 ;
"RTN","DIDX",8,0)
 ;
"RTN","DIDX",9,0)
 S D1=D0,DINM=1,DDRG=1,DDL1=14,DDL2=32 G B
"RTN","DIDX",10,0)
 ;
"RTN","DIDX",11,0)
L S DJ(Z)=0
"RTN","DIDX",12,0)
A I DIDX D  G:D1>0 A:^DD(F(Z),"B",DJ(Z),D1)
"RTN","DIDX",13,0)
 . S DJ(Z)=$O(^DD(F(Z),"B",DJ(Z))) S:DJ(Z)="" D1="" Q:DJ(Z)=""  S D1=$O(^(DJ(Z),0))
"RTN","DIDX",14,0)
 . Q
"RTN","DIDX",15,0)
 E  S (D1,DJ(Z))=$O(^DD(F(Z),DJ(Z)))
"RTN","DIDX",16,0)
 I D1'>0 W ! S Z=Z-1 Q
"RTN","DIDX",17,0)
B I $D(DIGR),D1-.01!'DID X DIGR E  G END
"RTN","DIDX",18,0)
 S N=^DD(F(Z),D1,0) D HD:$Y+9>IOSL Q:M=U  W !!?Z+Z-2,$P(N,U,1),?30,S,F(Z),",",D1,S,S
"RTN","DIDX",19,0)
 S X=$P(N,U,2) I X W ?M,$J(+X,8) I $D(^DD(+X,.01,0)),$P(^(0),U,2)["W" W "  WORD-PROCESSING" S X=""
"RTN","DIDX",20,0)
 W ?M,S,S F W="BOOLEAN","COMPUTED","FREE TEXT","SET","DATE","NUMBER","POINTER","VARIABLE POINTER","K","p","m" I X[$E(W) S:W="K" W="MUMPS" S:W="p" W="POINTER" S:W="m" W="MULTIPLE" D W1 I X["V" D VP0
"RTN","DIDX",21,0)
TYPE S W=+$P(X,"t",2) I W,$D(^DI(.81,W,0)) S W=" ("_$P(^(0),U)_" Data Type)" D W1
"RTN","DIDX",22,0)
 I 'X D
"RTN","DIDX",23,0)
 .N Y,NM S:X["P" Y=U_$P(N,U,3),NM=+$P(X,"P",2) I X["C" S NM=+$P(X,"p",2) I NM S Y=$G(^DIC(NM,0,"GL"))
"RTN","DIDX",24,0)
 .Q:'$D(Y)  I Y[U,$D(@(Y_"0)")) S W="TO "_$P(^(0),U)_" FILE (#"_NM_")"
"RTN","DIDX",25,0)
 .E  S W="***** TO A FILE THAT IS UNDEFINED *******"
"RTN","DIDX",26,0)
 .D W1
"RTN","DIDX",27,0)
T ;
"RTN","DIDX",28,0)
 S W=0
"RTN","DIDX",29,0)
H ;
"RTN","DIDX",30,0)
 W ! I $D(^DD(F(Z),D1,.1))#2 W ?(Z*2),^(.1),"   ",?M
"RTN","DIDX",31,0)
 I X["S" S N=$P(N,U,3) F I=1:1 S Y=$P(N,";",I) Q:Y=""  S W="'"_$P(Y,":")_"' FOR "_$P(Y,":",2)_";" W ?M,"  "_W,!
"RTN","DIDX",32,0)
 I $D(^DD(F(Z),D1,3))#2 S W=^(3) W ?M D W1
"RTN","DIDX",33,0)
RD ;
"RTN","DIDX",34,0)
 I X S Z=Z+1,DDL1=DDL1+2,DDL2=DDL2+2,F(Z)=+X,W="   Multiple" D W1,L ;L is called recursively for a multiple, pushing down a stack
"RTN","DIDX",35,0)
END S X="" G:M'=U A:Z>1 Q
"RTN","DIDX",36,0)
 ;
"RTN","DIDX",37,0)
W1 W:$X+$L(W)+3>IOM !,?$S(IOM-$L(W)-5<M:IOM-5-$L(W),1:M),S S %Y=$E(W,IOM-$X,999) W $E(W,1,IOM-$X-1),S I %Y]"" S W=%Y G W1
"RTN","DIDX",38,0)
 D:$Y>IOSL HD Q
"RTN","DIDX",39,0)
 ;
"RTN","DIDX",40,0)
HD S DC=DC+1 D ^DIDH
"RTN","DIDX",41,0)
 Q
"RTN","DIDX",42,0)
VP ;Variable Pointer
"RTN","DIDX",43,0)
 W ?50,W S D1=DJ(Z)
"RTN","DIDX",44,0)
VP0 I '$D(^DD(F(Z),D1,"V",0)) S W="" Q
"RTN","DIDX",45,0)
 S DID1=0,DIMU=0,DID2=0 I '$D(DDRG) D RT
"RTN","DIDX",46,0)
 S W="FILE  ORDER  PREFIX    LAYGO  MESSAGE" W !?(Z+Z+12),W G Q:M=U
"RTN","DIDX",47,0)
VP1 S DID2=$O(^DD(F(Z),D1,"V",DID2)) S:DID2="" DID2=-1 G:DID2'>0 VP2 S DIDV=^(DID2,0) I '$D(^DIC(+DIDV,0)) S DIDV(+DIDV)=""
"RTN","DIDX",48,0)
 S DIVP=$P(DIDV,U),DDLF=(Z+Z+15) I $L(DIVP)>4 W !?(DDLF-$L(DIVP))+1,DIVP
"RTN","DIDX",49,0)
 E  W !?DDLF,DIVP
"RTN","DIDX",50,0)
 W ?(DDLF+5),$P(DIDV,U,3),?(DDLF+10),$P(DIDV,U,4),?(DDLF+23),$P(DIDV,U,6) S DDL3=DDL2,DDL2=DDLF+27,W=$P(DIDV,U,2) D W1^DIDH1 S DDL2=DDL3 S:$P(DIDV,U,5)["y" DIMU=1 D:$Y+4>IOSL HD G ND^DID1:M=U,VP1
"RTN","DIDX",51,0)
VP2 I DIMU S DIDVI=0 F  S DIDVI=$O(^DD(F(Z),D1,"V",DIDVI)) Q:DIDVI'>0  I $D(^(DIDVI,1)) S %=^(0) D VP3 Q:M=U
"RTN","DIDX",52,0)
 S DIDV=0 F  S DIDV=$O(DIDV(DIDV)) Q:DIDV'>0  S W="!! FILE "_DIDV_" DOES NOT EXIST !!" D W^DID1 Q:M=U
"RTN","DIDX",53,0)
Q W ! K DID2,DIMU,DID1,DIDV,DIDVI S W="" Q
"RTN","DIDX",54,0)
VP3 ;
"RTN","DIDX",55,0)
 W !?(Z+Z+12),"SCREEN"_$S('$D(DINM):" ON FILE "_$P(%,U)_":",1:" EXPLANATION ON FILE "_$P(%,U)_":") S W=" "_$S('$D(DINM):^(1),1:$S($D(^(2)):^(2),1:"")) D W^DID1:'$D(DINM),W^DIDH:$D(DINM)
"RTN","DIDX",56,0)
 Q
"RTN","DIDX",57,0)
RT F W="Required","Add New Entry without Asking","Multiply asked","audited" I X[$E(W,1) S W=" ("_W_")" W:($L(W)+$X)'<IOM ! D W^DID1 G ND^DID1:M=U
"RTN","DIDX",58,0)
 I $D(^DD("KEY","F",F(Z),DJ(Z))) S W=" (Key field)" W:($L(W)+$X)'<IOM ! D W^DID1 G ND^DID1:M=U
"RTN","DIDX",59,0)
 W ! I $D(^DD(F(Z),DJ(Z),.1)),^(.1)]"" W !?(Z+Z+12),^(.1),"   ",?M
"RTN","DIDX",60,0)
 Q
"RTN","DIDX",61,0)
AH W !,"ALPHABETICALLY BY LABEL" D YN^DICN Q:%<0  S:%=1 DIDX=1,BY="@.01"
"RTN","DIDX",62,0)
 I '% W !?5,"Enter YES to list the fields ALPHABETICALLY BY LABEL.",!?5,"Enter NO to list the fields by NUMBER." S %=2 G AH
"RTN","DIDX",63,0)
 Q
"RTN","DIED")
0^8^B46622564^B41585163
"RTN","DIED",1,0)
DIED ;SFISC/GFT,XAK - MAJOR INPUT PROCESSOR ;9MAY2016
"RTN","DIED",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIED",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIED",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIED",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIED",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIED",7,0)
 ;;GFT;**4,21,11,59,96,999,1004,1022,1052**
"RTN","DIED",8,0)
 ;
"RTN","DIED",9,0)
O D W W Y W:$X>48 !?9
"RTN","DIED",10,0)
 I $L(Y)>19,'DV,DV'["I",(DV["F"!(DV["K")) G RW^DIR2
"RTN","DIED",11,0)
 I Y]"" W "// " I 'DV,DV["I",$D(DE(DQ))#2 K X S X("FIELD")=DIFLD,X("FILE")=DP,X="  ("_$$EZBLD^DIALOG(3090,$$LABEL^DIALOGZ(DP,DIFLD))_")" W:$L(X)+$X>78 !?9 W X K X S X="" Q  ;**
"RTN","DIED",12,0)
TR Q:$P(DQ(DQ),U,2)["K"&(DUZ(0)'="@")  R X:DTIME E  S (DTOUT,X)=U W $C(7)
"RTN","DIED",13,0)
 Q
"RTN","DIED",14,0)
W I $P(DQ(DQ),U,2)["K"&(DUZ(0)'="@") Q
"RTN","DIED",15,0)
 I $D(DIE("W")) X DIE("W") Q
"RTN","DIED",16,0)
 W !?DL+DL-2,$P(DQ(DQ),U,1)_": " Q
"RTN","DIED",17,0)
 ;
"RTN","DIED",18,0)
DQ ;
"RTN","DIED",19,0)
 S:$D(DTIME)[0 DTIME=300 S DQ=1 G B
"RTN","DIED",20,0)
A K DQ(DQ) S DQ=DQ+1
"RTN","DIED",21,0)
B ;COME BACK HERE FROM DIE2
"RTN","DIED",22,0)
 S DIFLD=$S($D(DIFLD(DQ)):DIFLD(DQ),1:-1)
"RTN","DIED",23,0)
 I '$D(DQ(DQ)) G E^DIE1:'$D(DQ(0,DQ)),BR^DIE0
"RTN","DIED",24,0)
RE ;
"RTN","DIED",25,0)
 S DIP=$P(DQ(DQ),U,1),DV=$P(DQ(DQ),U,2),DU=$P(DQ(DQ),U,3) G:DV["K"&(DUZ(0)'="@") A G PR:$D(DE(DQ)) D W,TR I $D(DTOUT) K DQ,DG G QY^DIE1
"RTN","DIED",26,0)
N I X="" G NKEY:$D(^DD("KEY","F",DP,DIFLD)),A:DV'["R",X:'DV,X:$P(DC,U,2)-DP(0),A
"RTN","DIED",27,0)
RD G ^DIE0:X[U I X="@" G:DV'["I"!'DV ^DIE2 D NO^DIE0 G B ;You can't delete an uneditable MULTIPLE
"RTN","DIED",28,0)
 I X?."?" G A:$D(DB(DQ)),^DIEQ ;MAC-1201-61253
"RTN","DIED",29,0)
 I X=" ",DV["d",DV'["P",$D(^DISV(DUZ,"DIE",DIP)) S X=^(DIP) I DV'["D",DV'["S" W "  "_X
"RTN","DIED",30,0)
T G M^DIE1:DV,^DIE3:DV["V",X:X'?.ANP
"RTN","DIED",31,0)
 I DV["t" D  G UNIQ ;EXTENSIBLE DATA TYPES
"RTN","DIED",32,0)
 .X $S($D(DB(DQ)):$$VALEXTS^DIETLIBF(DP,DIFLD),1:$$VALEXT^DIETLIBF(DP,DIFLD)) K DIPA ;presence of DB array tells that value is stuffed (Silent)
"RTN","DIED",33,0)
 I DV["S" D SET G V:'DDER K DDER G X
"RTN","DIED",34,0)
P I DV["P" S DIC=U_DU,DIC(0)=$E("EN",$D(DB(DQ))+1)_"M"_$E("L",DV'["'") S:DIC(0)["L" DLAYGO=+$P(DV,"P",2) G AST:DV["*" D NOSCR S X=+Y,DIC=DIE G X:X<0
"RTN","DIED",35,0)
 G V:DV'["N" I $L($P(X,"."))>24 K X G Z
"RTN","DIED",36,0)
 I $P(DQ(DQ),U,5,99)'["$",X?.1"-".N.1".".N,$P(DQ(DQ),U,5,99)["+X'=X" S X=+X
"RTN","DIED",37,0)
V S DIER=1 X $P(DQ(DQ),U,5,99) K DIER,YS
"RTN","DIED",38,0)
UNIQ I $P(DQ(DQ),U,2)["U",$D(X),DIFLD=.01 K % M %=@(DIE_"""B"",X)") K %(DA) K:$O(%(0)) X
"RTN","DIED",39,0)
Z K DIC("S"),DLAYGO I $D(X),X?.ANP,X'=U D LOADXR G:'$$KEYCHK UNIQFERR S DG($P(DQ(DQ),U,4))=X S:DV["d" ^DISV(DUZ,"DIE",DIP)=X G A
"RTN","DIED",40,0)
X W:'$D(ZTQUEUED) $C(7) W:'$D(DDS)&'$D(ZTQUEUED) "??"
"RTN","DIED",41,0)
 G B^DIE1
"RTN","DIED",42,0)
 ;
"RTN","DIED",43,0)
PR I $D(DE(DQ,0)) S Y=DE(DQ,0) G F:Y?1"/".E I $D(DE(DQ))=10 D Y:$E(Y)=U,O G RD:"@"'[X,A:DV'["R"&(X="@"),X:X="@" S X=Y G N
"RTN","DIED",44,0)
 S DG=DV,Y=DE(DQ),X=DU I DG["O",$D(^DD(DP,DIFLD,2)) X ^(2) G S
"RTN","DIED",45,0)
 I DG["t" X $$OUTPUT^DIETLIBF(DP,DIFLD) K DIPA G S
"RTN","DIED",46,0)
R I DG["P",@("$D(^"_X_"0))") S X=+$P(^(0),U,2) G S:'$D(^(Y,0)) S Y=$P(^(0),U,1),X=$P(^DD(X,.01,0),U,3),DG=$P(^(0),U,2) G R
"RTN","DIED",47,0)
 I DG["V",+Y,$P(Y,";",2)["(",$D(@(U_$P(Y,";",2)_"0)")) S X=+$P(^(0),U,2) G S:'$D(^(+Y,0)) S Y=$P(^(0),U,1) I $D(^DD(+X,.01,0)) S DG=$P(^(0),U,2),X=$P(^(0),U,3) G R
"RTN","DIED",48,0)
 X:DG["D" ^DD("DD")
"RTN","DIED",49,0)
 I DG["S" S %=$P($P(";"_X,";"_Y_":",2),";") I %]"" S Y=$S($G(DUZ("LANG"))'>1:%,'DIFLD:%,1:$$SET^DIQ(DP,DIFLD,Y))
"RTN","DIED",50,0)
S D O I $D(DTOUT) K DQ,DG G QY^DIE1
"RTN","DIED",51,0)
 I X="" S X=DE(DQ) X:$D(DICATTZ) $P(DQ(DQ),U,5,99) G A:'DV,A:DC<2 G N^DIE1
"RTN","DIED",52,0)
 G RD:DQ(DQ)'["DINUM" D E^DIE0 G RD:$D(X),PR
"RTN","DIED",53,0)
 ;
"RTN","DIED",54,0)
F S DB(DQ)=1,X=$E(Y,2,999),DH=$F(DQ(DQ),"%DT=""E") I DH S DQ(DQ)=$E(DQ(DQ),1,DH-2)_$E(DQ(DQ),DH,999)
"RTN","DIED",55,0)
 I X?1"/".E S X=$E(X,2,999),DH=""
"RTN","DIED",56,0)
 X:$E(X,1)=U $E(X,2,999) G:X="" A:'DV,A:'$P(DC,U,4),N^DIE1 I $D(DE(DQ))#2,DV["I"!(DQ(DQ)["DINUM") D E^DIE0
"RTN","DIED",57,0)
 G X:'$D(X),RD:DH]"",RD:X="@",M^DIE1:DV,Z
"RTN","DIED",58,0)
 ;
"RTN","DIED",59,0)
Y X $E(Y,2,999) S Y=X I DV["D",Y?7N.NP X ^DD("DD")
"RTN","DIED",60,0)
Q Q
"RTN","DIED",61,0)
 ;
"RTN","DIED",62,0)
SET ;FROM COMPILED TEMPLATES,TOO
"RTN","DIED",63,0)
 N DILANG
"RTN","DIED",64,0)
 I $D(DB(DQ)),'$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIED",65,0)
 I $G(DUZ("LANG"))>1,$D(^DD(DP,+$G(DIFLD),0)) S DILANG=$$SETIN^DIALOGZ D
"RTN","DIED",66,0)
 .I DILANG'=DU S DU=DILANG Q
"RTN","DIED",67,0)
 .K DILANG
"RTN","DIED",68,0)
 I $D(^DD(DP,DIFLD,12.1)) X ^(12.1) ;CODE TO SET POINTER SCREEN DIC("S") IS SAME AS SET SCREEN
"RTN","DIED",69,0)
 D READSET(.X,DU,$G(DIC("S"))) S DDER='$D(X)
"RTN","DIED",70,0)
 Q
"RTN","DIED",71,0)
 ;
"RTN","DIED",72,0)
READSET(X,DU,DISCR) ;X=INCOMING VALUE, DU=SET OF CODES, DISCR=SCREENING LOGIC   X IS KILLED IF BAD
"RTN","DIED",73,0)
 N DIR,Y,%,DDER
"RTN","DIED",74,0)
 S DIR(0)="SV"_$E("o",$G(DIQUIET))_U_DU,DIR("V")=1 S:$G(DISCR)]"" DIR("S")=DISCR D ^DIR I DDER K X Q  ;Call the READER
"RTN","DIED",75,0)
 I $D(DILANG) S %=$F(";"_DILANG,";"_Y) I % S Y=$P($P($P(^DD(DP,DIFLD,0),U,3),";",Y),":") ;Return the 'REAL' internal value
"RTN","DIED",76,0)
 S %=Y(0),X=Y
"RTN","DIED",77,0)
 W:'$G(DIQUIET) "  "_%
"RTN","DIED",78,0)
 Q
"RTN","DIED",79,0)
 ;
"RTN","DIED",80,0)
 ;
"RTN","DIED",81,0)
AST ;G V:DV["'",AST^DIE9
"RTN","DIED",82,0)
 I DV["'" D
"RTN","DIED",83,0)
 . D SCRNL(.DICONT)
"RTN","DIED",84,0)
 E  D SCRL(.DICONT)
"RTN","DIED",85,0)
 I DICONT="V" K DICONT G V:$D(DNM)[0,@("V^"_DNM)
"RTN","DIED",86,0)
 I DICONT="X" K DICONT G X:$D(DNM)[0,@("X^"_DNM)
"RTN","DIED",87,0)
 I DICONT="Z" K DICONT G Z:$D(DNM)[0,@("Z^"_DNM)
"RTN","DIED",88,0)
 Q
"RTN","DIED",89,0)
 ;
"RTN","DIED",90,0)
RW G RW^DIR2
"RTN","DIED",91,0)
 ;
"RTN","DIED",92,0)
LOADXR ;Load all index file xrefs for a field
"RTN","DIED",93,0)
 Q:$D(DIETMP)[0
"RTN","DIED",94,0)
 N FLIST,RLIST,OLD
"RTN","DIED",95,0)
 ;
"RTN","DIED",96,0)
 I $G(DICRREC)]"" N DP,DIFLD,DIIENS S OLD=DIU,DP=DIH,DIFLD=DIG,DIIENS=DICRIENS
"RTN","DIED",97,0)
 E  S OLD=$G(DE(DQ))
"RTN","DIED",98,0)
 ;
"RTN","DIED",99,0)
 ;Get field- and record-level xrefs
"RTN","DIED",100,0)
 D LOADFLD^DIKC1(DP,DIFLD,"KS","",$NA(@DIETMP@("V")),"DIEFXREF",$NA(@DIETMP@("R")),.FLIST,.RLIST)
"RTN","DIED",101,0)
 I FLIST="",RLIST="" Q
"RTN","DIED",102,0)
 S:RLIST]"" @DIETMP@("R",DP,DIIENS)=DIE
"RTN","DIED",103,0)
 ;
"RTN","DIED",104,0)
 ;Save the old value of the field
"RTN","DIED",105,0)
 S @DIETMP@("V",DP,DIIENS,DIFLD,"O")=OLD S:$D(^("F"))[0 ^("F")=OLD
"RTN","DIED",106,0)
 I $G(DICRREC)="",$G(DE(DQ,0))?1"//".E S @DIETMP@("V",DP,DIIENS,DIFLD,"4/")=""
"RTN","DIED",107,0)
 E  K @DIETMP@("V",DP,DIIENS,DIFLD,"4/")
"RTN","DIED",108,0)
 Q
"RTN","DIED",109,0)
 ;
"RTN","DIED",110,0)
KEYCHK() ;If this is a key field, return 0 if not unique.
"RTN","DIED",111,0)
 N DIEKCHK
"RTN","DIED",112,0)
 Q:$D(DIETMP)[0 1
"RTN","DIED",113,0)
 Q:'$D(DIEFXREF) 1
"RTN","DIED",114,0)
 Q:$G(DE(DQ,0))?1"//".E 1
"RTN","DIED",115,0)
 S @DIETMP@("V",DP,DIIENS,DIFLD,"N")=X
"RTN","DIED",116,0)
 S DIEKCHK=$$KEYCHK^DIKK2(DP,.DA,DIFLD,"DIEFXREF",DIIENS,"","N")
"RTN","DIED",117,0)
 K @DIETMP@("V",DP,DIIENS,DIFLD,"N")
"RTN","DIED",118,0)
 Q DIEKCHK
"RTN","DIED",119,0)
 ;
"RTN","DIED",120,0)
UNIQFERR ;The field is part of a key and is not unique
"RTN","DIED",121,0)
 I '$D(ZTQUEUED),'$D(DDS) D
"RTN","DIED",122,0)
 . W $C(7)_"??"
"RTN","DIED",123,0)
 . W:'$D(DB(DQ)) !,"     ",$$EZBLD^DIALOG(3094)
"RTN","DIED",124,0)
 K DIEFXREF S ^("N")=@DIETMP@("V",DP,DIIENS,DIFLD,"O")
"RTN","DIED",125,0)
 G B^DIE1
"RTN","DIED",126,0)
 ;
"RTN","DIED",127,0)
NKEY ;No value was assigned to this key field
"RTN","DIED",128,0)
 I '$D(ZTQUEUED),'$D(DDS) W $C(7)_"??  ",$$EZBLD^DIALOG(3092.2)
"RTN","DIED",129,0)
 G B^DIE1
"RTN","DIED",130,0)
 ;
"RTN","DIED",131,0)
NOSCR ;No screen
"RTN","DIED",132,0)
 N DIXRL
"RTN","DIED",133,0)
 D GETXRL(DP,DIFLD,+$P(DV,"P",2),.DIXRL)
"RTN","DIED",134,0)
 I DV'["'",$G(DIXRL)]"",(U_DIXRL_U)'["^B^" S DIXRL=DIXRL_"^B"
"RTN","DIED",135,0)
 D DIC($G(DIXRL))
"RTN","DIED",136,0)
 Q
"RTN","DIED",137,0)
 ;
"RTN","DIED",138,0)
SCRNL(DICONT) ;Screen, No LAYGO allowed
"RTN","DIED",139,0)
 N DIFRST,DILAST,DIXRL
"RTN","DIED",140,0)
 K DICONT
"RTN","DIED",141,0)
 ;
"RTN","DIED",142,0)
 D GETXRL(DP,DIFLD,+$P(DV,"P",2),.DIXRL)
"RTN","DIED",143,0)
 G:$G(DIXRL)="" EXIT
"RTN","DIED",144,0)
 ;
"RTN","DIED",145,0)
 D:$D(DNM)#2 @("D^"_DNM)
"RTN","DIED",146,0)
 D PARSE($P(DQ(DQ),U,5,999),.DIFRST,.DILAST)
"RTN","DIED",147,0)
 G:'$D(DIFRST) EXIT
"RTN","DIED",148,0)
 ;
"RTN","DIED",149,0)
 X DIFRST
"RTN","DIED",150,0)
 D DIC(DIXRL) S X=+Y
"RTN","DIED",151,0)
 X:Y>0 DILAST
"RTN","DIED",152,0)
 S DICONT=$S('$D(X):"X",X<0:"X",1:"Z")
"RTN","DIED",153,0)
 Q
"RTN","DIED",154,0)
 ;
"RTN","DIED",155,0)
SCRL(DICONT) ;Screen, LAYGO allowed
"RTN","DIED",156,0)
 N DICALL,DICSS,DIFRST,DILAST,DIXRL
"RTN","DIED",157,0)
 K DICONT
"RTN","DIED",158,0)
 ;
"RTN","DIED",159,0)
 D GETXRL(DP,DIFLD,+$P(DV,"P",2),.DIXRL)
"RTN","DIED",160,0)
 D:$D(DNM) @("D^"_DNM)
"RTN","DIED",161,0)
 D PARSE($P(DQ(DQ),U,5,999),.DIFRST,.DILAST)
"RTN","DIED",162,0)
 G:'$D(DIFRST) EXIT
"RTN","DIED",163,0)
 ;
"RTN","DIED",164,0)
 K D X DIFRST I '$D(DIC("S")),$G(DIXRL)="" S DICONT="V" Q
"RTN","DIED",165,0)
 S DICSS=$G(DIC("S"))
"RTN","DIED",166,0)
 ;
"RTN","DIED",167,0)
 I $G(DIXRL)="" S DIXRL=$G(D)
"RTN","DIED",168,0)
 E  S:(U_DIXRL_U)'["^B^" DIXRL=DIXRL_"^B"
"RTN","DIED",169,0)
 D DIC($G(DIXRL))
"RTN","DIED",170,0)
 S X=+Y
"RTN","DIED",171,0)
 ;
"RTN","DIED",172,0)
 I $P(Y,U,3) S Y=+Y X:$D(@(DIC_Y_",0)")) DICSS E  D  S DICONT="X" Q
"RTN","DIED",173,0)
 . N DV,DU,DA
"RTN","DIED",174,0)
 . S DA=Y,DIK=DIC D ^DIK
"RTN","DIED",175,0)
 ;
"RTN","DIED",176,0)
 X:Y>0 DILAST
"RTN","DIED",177,0)
 S DICONT=$S('$D(X):"X",X<0:"X",1:"Z")
"RTN","DIED",178,0)
 Q
"RTN","DIED",179,0)
 ;
"RTN","DIED",180,0)
EXIT ;Cleanup and set flag to continue by executing the input transform
"RTN","DIED",181,0)
 K DIC("PTRIX")
"RTN","DIED",182,0)
 S DICONT="V"
"RTN","DIED",183,0)
 Q
"RTN","DIED",184,0)
 ;
"RTN","DIED",185,0)
DIC(D) ;Make the appropriate ^DIC call based on D
"RTN","DIED",186,0)
 I $G(D)]"",$P(D,U,2)="" S DIC(0)=$TR(DIC(0),"M")
"RTN","DIED",187,0)
 E  S:DIC(0)'["M" DIC(0)="M"_DIC(0)
"RTN","DIED",188,0)
 ;
"RTN","DIED",189,0)
 I $P($G(D),U)="" D
"RTN","DIED",190,0)
 . D ^DIC
"RTN","DIED",191,0)
 E  I $P(D,U,2)]"" D
"RTN","DIED",192,0)
 . D MIX^DIC1
"RTN","DIED",193,0)
 E  D IX^DIC
"RTN","DIED",194,0)
 K DIC("PTRIX")
"RTN","DIED",195,0)
 Q
"RTN","DIED",196,0)
 ;
"RTN","DIED",197,0)
PARSE(IT,FRST,LAST) ;Parse input transform
"RTN","DIED",198,0)
 N CALL,I
"RTN","DIED",199,0)
 F CALL=" D ^DIC"," D IX^DIC"," D MIX^DIC1","" Q:IT[CALL
"RTN","DIED",200,0)
 I CALL="" K FRST,LAST Q
"RTN","DIED",201,0)
 S FRST=$P(IT,CALL),LAST=$P(IT,CALL_" ",2,999)
"RTN","DIED",202,0)
 I FRST?.E1" " D  S FRST=$E(FRST,1,I)
"RTN","DIED",203,0)
 . F I=$L(FRST)-1:-1:0 Q:$E(FRST,I)'=" "
"RTN","DIED",204,0)
 Q
"RTN","DIED",205,0)
 ;
"RTN","DIED",206,0)
GETXRL(FIL,FLD,PFIL,LIST) ;Get list of indexes from DIE("PTRIX")
"RTN","DIED",207,0)
 K DIC("PTRIX"),LIST Q:'$D(DIE("PTRIX"))
"RTN","DIED",208,0)
 M DIC("PTRIX")=DIE("PTRIX")
"RTN","DIED",209,0)
 ;
"RTN","DIED",210,0)
 S LIST=$G(DIE("PTRIX",FIL,FLD,PFIL))
"RTN","DIED",211,0)
 K:LIST="" LIST
"RTN","DIED",212,0)
 Q
"RTN","DIEQ")
0^14^B16717159^B14901755
"RTN","DIEQ",1,0)
DIEQ ;SFISC/XAK,YJK - HELP DURING INPUT ;21NOV2016
"RTN","DIEQ",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIEQ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIEQ",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIEQ",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIEQ",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIEQ",7,0)
 ;;GFT;**4,3,59,999,1004,1024
"RTN","DIEQ",8,0)
 ;
"RTN","DIEQ",9,0)
BN S D=$P(DQ(DQ),U,4) S:DP+1 D=DIFLD
"RTN","DIEQ",10,0)
 S DZ=X D EN1 G B^DIED
"RTN","DIEQ",11,0)
QQ ;
"RTN","DIEQ",12,0)
 I DV,DV["*",$D(^DD(+DV,.01,0)) S DQ(DQ)=$P(DQ(DQ),U,1,4)_U_$P(^(0),U,5,99)
"RTN","DIEQ",13,0)
EN1 N DDH,DST,A1 S DDH=0 G M:DV I DP<0 D HP G P
"RTN","DIEQ",14,0)
HELP I X="?"!(X["BAD") S X=$$HELP^DIALOGZ(DP,D),A1="T" D N:X]"" I '$G(DISORT),$D(^DD(DP,D,12)) S X=^(12) D N ;HELP MESSAGE
"RTN","DIEQ",15,0)
 D H G:'$D(DZ) Q
"RTN","DIEQ",16,0)
 ;
"RTN","DIEQ",17,0)
P I DV["P" K DO S DIC=U_DU,D="B",DIC(0)="M"_$E("L",DV'["'") G AST:DV["*"&('$G(DISORT)) D DQ^DICQ D % G Q
"RTN","DIEQ",18,0)
VP S DU=DP S:DV DU=+DO(2),D=.01 I DV["V" D V G Q
"RTN","DIEQ",19,0)
D I DV["D" S %(0)=0,%("X")=$P(DQ(DQ),U,5,9) I DV'["t" D DT^DIEH1($P($P(%("X"),"%DT=""",2),""""),1) ;ONCE WAS A CALL TO HELP^%DTC
"RTN","DIEQ",20,0)
 ;.I %("X")="" S %("X")=$$GETMETH^DIETLIBF(DU,D,"INPUT TRANSFORM")
"RTN","DIEQ",21,0)
S I DV["S" D:'$G(DISORT) SETSCR^DIR(DU,D) S A1="T",DST=$$EZBLD^DIALOG(8068)_" " D DS D  K DIC("S")
"RTN","DIEQ",22,0)
 .N A,A1,A2
"RTN","DIEQ",23,0)
 .S A=$P(DQ(DQ),U,3) I DV["t" S DG=$$GETPROP^DIETLIBF(DU,D,"SET OF CODES") I DG]"" S A=DG
"RTN","DIEQ",24,0)
 .I $G(DUZ("LANG"))>1,A=$P(^DD(DP,D,0),U,3) S A=$$SETIN^DIALOGZ_";" ;NAKED
"RTN","DIEQ",25,0)
 .F DG=1:1 S Y=$P(A,";",DG) Q:Y=""  S D=$P(Y,":",2),Y=$P(Y,":") I 1 X:$D(DIC("S")) DIC("S") I  S A2="",$P(A2," ",15-($L(Y)+7))=" ",DST="  "_Y_A2_" "_D D DS
"RTN","DIEQ",26,0)
Q K DST,A1 S:$D(DIE) DIC=DIE S D=0 I $D(DDH)>10 D LIST^DDSU
"RTN","DIEQ",27,0)
 D:DV UDA
"RTN","DIEQ",28,0)
 Q
"RTN","DIEQ",29,0)
 ;
"RTN","DIEQ",30,0)
 ;
"RTN","DIEQ",31,0)
 ;
"RTN","DIEQ",32,0)
N F  Q:X=""  F %=$L(X," "):-1:1 I $L($P(X," ",1,%))<75 S DST=$P(X," ",1,%) D DS D:X'="" N1 Q
"RTN","DIEQ",33,0)
 S X=DZ
"RTN","DIEQ",34,0)
 Q
"RTN","DIEQ",35,0)
 ;
"RTN","DIEQ",36,0)
N1 S X=$P(X," ",%+1,$L(X," ")) Q
"RTN","DIEQ",37,0)
 ;
"RTN","DIEQ",38,0)
DS S:'$D(A1) A1="T" S DDH=$G(DDH)+1,DDH(DDH,A1)=$S(A1="X":"",1:"     ")_DST K A1,DST Q
"RTN","DIEQ",39,0)
 ;
"RTN","DIEQ",40,0)
HP I $D(DQ(DQ,3)) S A1="T",DST=DQ(DQ,3) D DS
"RTN","DIEQ",41,0)
 I $D(DQ(DQ,4)) S A1="X",DST=DQ(DQ,4) D DS
"RTN","DIEQ",42,0)
 Q
"RTN","DIEQ",43,0)
 ;
"RTN","DIEQ",44,0)
% S %=$G(DIC("V")) K DIC S:%]"" DIC("V")=% Q
"RTN","DIEQ",45,0)
 ;
"RTN","DIEQ",46,0)
AST S:$D(X)[0 X="?" X $P(DQ(DQ),U,5,99) K DIC G Q
"RTN","DIEQ",47,0)
 D ^DIC K DIC,DICS,DICW G Q
"RTN","DIEQ",48,0)
 ;
"RTN","DIEQ",49,0)
M ;COME HERE FROM EN1 ABOVE WHEN WE'RE IN A MULTIPLE FIELD
"RTN","DIEQ",50,0)
 K DO S DZ=X,DIC=DIE_DA_","_$S(+$P(DC,U,3)=$P(DC,U,3):$P(DC,U,3),1:$C(34)_$P(DC,U,3)_$C(34))_",",D="B",DIC(0)="LM",DZ(1)=0
"RTN","DIEQ",51,0)
 I '$D(@(DIC_"0)")) S DO=U_$P(DC,U,2) D DO2^DIC1
"RTN","DIEQ",52,0)
 D:'$D(DO) DO^DIC1
"RTN","DIEQ",53,0)
 D DDA,DQ^DICQ D % G Q:'$D(DZ)!(DV["S") S X=DZ G P
"RTN","DIEQ",54,0)
 ;
"RTN","DIEQ",55,0)
H I '$G(DISORT) D  Q:'$D(DZ)
"RTN","DIEQ",56,0)
 . I $G(DV)["t" S DST=$$XHELP^DIETLIBF(DP,D)
"RTN","DIEQ",57,0)
 . E  S DST=$G(^DD(DP,D,4))
"RTN","DIEQ",58,0)
 . I DST'?."^" S A1="X" D DS,LIST^DDSU
"RTN","DIEQ",59,0)
 I $G(X)?1"??".E,X'["BAD" D
"RTN","DIEQ",60,0)
 . N DIDG,DG,DDD,DD,DIY,DIZ,DUOUT
"RTN","DIEQ",61,0)
 . S DIDG=$P($G(^DD(DP,D,21,0)),U,3)
"RTN","DIEQ",62,0)
 . K DDSQ
"RTN","DIEQ",63,0)
 . I '$D(DDS) S DDD=5,DD="",DIY=99,DIZ=21 I $G(DIPGM)'="DICQ1" N DIPGM S DIPGM="DIEQ" D Z^DDSU
"RTN","DIEQ",64,0)
 . F DG=1:1 Q:'$D(^DD(DP,D,21,DG,0))  Q:+DIDG&(DG>DIDG)  D  Q:$D(DDSQ)
"RTN","DIEQ",65,0)
 . . I '($G(DDH)#15) D LIST^DDSU I $G(DTOUT)!($G(DUOUT)) S DDSQ=1
"RTN","DIEQ",66,0)
 . . Q:$D(DDSQ)
"RTN","DIEQ",67,0)
 . . S DDH=$G(DDH)+1,DDH(DDH,"T")=^DD(DP,D,21,DG,0) ;S DST=^DD(DP,D,21,DG,0) D DS Q  ;GRAB DESCRIPTION NODE BY NODE
"RTN","DIEQ",68,0)
 . I '$D(DDSQ) Q:$D(DDH)'>10  D LIST^DDSU
"RTN","DIEQ",69,0)
 . I $D(DDSQ) K DDSQ,DDH
"RTN","DIEQ",70,0)
 . Q
"RTN","DIEQ",71,0)
 Q
"RTN","DIEQ",72,0)
 ;
"RTN","DIEQ",73,0)
BK S DDH=$G(DDH)+1,DDH(DDH,"T")=" " Q
"RTN","DIEQ",74,0)
 ;
"RTN","DIEQ",75,0)
V S DDH=+$G(DDH),A1="T",DST=$$EZBLD^DIALOG(8071) D DS
"RTN","DIEQ",76,0)
EGP F Y=0:0 S Y=$O(^DD(DU,D,"V",Y)) Q:Y'>0  I $D(^(Y,0)) S Y(0)=^(0) X:$D(DIC("V")) DIC("V") I  I $D(^DIC(+Y(0),0)) S Y(1)=$P(Y(0),U,4),Y(2)=$$FILENAME^DIALOGZ(+Y(0)),DST=$$EZBLD^DIALOG(8072,.Y) K Y(1),Y(2) D DS ;**CCO/NI V-P FILE NAMES
"RTN","DIEQ",77,0)
 D BK S DST=$$EZBLD^DIALOG(8073) D DS S DU="" D BK I DZ'?1"??".E K X,DZ Q
"RTN","DIEQ",78,0)
 D T^DIEQ1 K X,DZ Q
"RTN","DIEQ",79,0)
 ;
"RTN","DIEQ",80,0)
DDA N T,%
"RTN","DIEQ",81,0)
 S T=$T
"RTN","DIEQ",82,0)
 F %=+$O(DA(" "),-1):-1:1 K DA(%+1) S:$D(DA(%))#2 DA(%+1)=DA(%)
"RTN","DIEQ",83,0)
 K DA(1) S:$D(DA)#2 DA(1)=DA
"RTN","DIEQ",84,0)
 I T
"RTN","DIEQ",85,0)
 Q
"RTN","DIEQ",86,0)
 ;
"RTN","DIEQ",87,0)
UDA N T,%
"RTN","DIEQ",88,0)
 S T=$T
"RTN","DIEQ",89,0)
 S DA=$G(DA(1)) ;K DA(1)
"RTN","DIEQ",90,0)
 F %=2:1:+$O(DA(" "),-1) I $D(DA(%))#2 S DA(%-1)=DA(%) K DA(%)
"RTN","DIEQ",91,0)
 I T
"RTN","DIEQ",92,0)
 Q
"RTN","DIEQ",93,0)
 ;
"RTN","DIEQ",94,0)
 ;#8071  Enter one of the following
"RTN","DIEQ",95,0)
 ;#8072  |Prefix|.EntryName to select a |filename|
"RTN","DIEQ",96,0)
 ;#8073  To see the entries in any particular file type <Prefix.?>
"RTN","DIETLIB")
0^7^B10469878^n/a
"RTN","DIETLIB",1,0)
DIETLIB ;SFISC/MKO,O-OIFO/GFT - LIBRARY OF APIs FOR USER DEFINED DATA TYPES ;04MAR2016
"RTN","DIETLIB",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIETLIB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIETLIB",4,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIETLIB",5,0)
 ;
"RTN","DIETLIB",6,0)
 ;*************************************************************
"RTN","DIETLIB",7,0)
 ;
"RTN","DIETLIB",8,0)
 ;THESE CALLS DEAL WITH NODE 41 IN FILE .81, 'FIELD DEFINED BY THIS TYPE'
"RTN","DIETLIB",9,0)
 ;
"RTN","DIETLIB",10,0)
AFDEF(FILE,FIELD) ; --'SET' CROSS-REFERENCE ON SPECIFIER
"RTN","DIETLIB",11,0)
 N T,FF,I
"RTN","DIETLIB",12,0)
 S T=+$P($P($G(^DD(FILE,FIELD,0)),U,2),"t",2) Q:'T!'$D(^DI(.81,T,0))  ;GET THE EXTENDED TYPE
"RTN","DIETLIB",13,0)
 S I=$O(^DI(.81,T,41,"A"),-1)+1,FF=FILE_","_FIELD
"RTN","DIETLIB",14,0)
 I '$D(^DI(.81,"AFDEF",T,FF))  S ^(FF,I)="",^DI(.81,T,41,0)="^.81215^"_I_U_I,^(I,0)=FF ;ADD FIELD TO LIST OF DATATYPES FOR IT
"RTN","DIETLIB",15,0)
 S $P(^DD(FILE,FIELD,0),U,5,99)="",$P(^(0),U,3)="" K ^(12) ;DELETE INPUT TRANSFORM, POINTER,SCREEN EXPLANATION FOR A FIELD THAT IS NOW 'EXTENDED'
"RTN","DIETLIB",16,0)
 Q
"RTN","DIETLIB",17,0)
 ;
"RTN","DIETLIB",18,0)
AFDEFDEL(FILE,FIELD) ;'KILL' CROSS-REFERENCE ON SPECIFIER
"RTN","DIETLIB",19,0)
 N T,FF,I,Z
"RTN","DIETLIB",20,0)
 S T=+$P($P($G(^DD(FILE,FIELD,0)),U,2),"t",2) Q:'T!'$D(^DI(.81,T,0))
"RTN","DIETLIB",21,0)
 S FF=FILE_","_FIELD
"RTN","DIETLIB",22,0)
 F I=0:0 S I=$O(^DI(.81,"AFDEF",T,FF,I)) Q:'I  I $G(^DI(.81,T,41,I,0))=FF K ^(0) S Z=$G(^DI(.81,T,41,0)),^(0)="^.81215^"_$O(^("A"),-1)_"^"_($P(Z,U,4)-1)
"RTN","DIETLIB",23,0)
 K ^DI(.81,"AFDEF",T,FF)
"RTN","DIETLIB",24,0)
 Q
"RTN","DIETLIB",25,0)
 ;
"RTN","DIETLIB",26,0)
 ;
"RTN","DIETLIB",27,0)
DELETEQ ;CANNOT DELETE A DATA TYPE IN USE
"RTN","DIETLIB",28,0)
 IF DA<100 Q
"RTN","DIETLIB",29,0)
 IF $D(^DI(.81,"AFDEF",DA))
"RTN","DIETLIB",30,0)
 IF  W !?3,"SORRY!  DATA TYPES IN USE CANNOT BE DELETED!!",!
"RTN","DIETLIB",31,0)
 QUIT
"RTN","DIETLIB",32,0)
 ;
"RTN","DIETLIB",33,0)
 ;
"RTN","DIETLIB",34,0)
CLEANDEF ; POST-INSTALL CAN CALL THIS TO MAKE SURE THAT 'FIELD DEFINED BY THIS TYPE' DOES NOT HAVE EXTRA MULTIPLES
"RTN","DIETLIB",35,0)
 N TY,I,FI,FL
"RTN","DIETLIB",36,0)
 F TY=0:0 S TY=$O(^DI(.81,TY)) Q:'TY  F I=0:0 S I=$O(^DI(.81,TY,41,I)) Q:'I  I $D(^(I,0)) S Z=^(0) D
"RTN","DIETLIB",37,0)
 .S FI=+Z,FL=+$P(Z,",",2) I $D(^DD(FI,FL,0)),$P($P(^(0),"^",2),"t",2)=TY Q
"RTN","DIETLIB",38,0)
 .K ^DI(.81,"AFDEF",TY,Z,I),^DI(.81,TY,41,I)
"RTN","DIETLIB",39,0)
 Q
"RTN","DIETLIB",40,0)
 ;
"RTN","DIETLIB",41,0)
 ;
"RTN","DIETLIB",42,0)
 ;
"RTN","DIETLIB",43,0)
 ;
"RTN","DIETLIB",44,0)
 ;****************************************************************
"RTN","DIETLIB",45,0)
 ;called from DICATTUD & DIRUD
"RTN","DIETLIB",46,0)
PARSE(DDTSTR,DDTVALS) ;Parse DDTSTR, replacing |abbr| with DDTVALS(abbr)
"RTN","DIETLIB",47,0)
 ;Two consecutive |s are replaced with a single |
"RTN","DIETLIB",48,0)
 ;|#FILE#| is replaced with DDTVALS("#FILE#")
"RTN","DIETLIB",49,0)
 ;|#FIELD#| is replaced with DDTVALS("#FIELD#")
"RTN","DIETLIB",50,0)
 Q:$G(DDTSTR)="" ""
"RTN","DIETLIB",51,0)
 Q:DDTSTR'["|" DDTSTR
"RTN","DIETLIB",52,0)
 ;
"RTN","DIETLIB",53,0)
 N I,J,DDTABBR,DDTVAL,L,DDTWIND
"RTN","DIETLIB",54,0)
 ;
"RTN","DIETLIB",55,0)
 S I=1 F  D  Q:'I
"RTN","DIETLIB",56,0)
 . ;Find the next |
"RTN","DIETLIB",57,0)
 . S I=$F(DDTSTR,"|",I) Q:'I
"RTN","DIETLIB",58,0)
 . ;
"RTN","DIETLIB",59,0)
 . ;Replace || with |
"RTN","DIETLIB",60,0)
 . I $E(DDTSTR,I)="|" S $E(DDTSTR,I-1,I)="|" Q
"RTN","DIETLIB",61,0)
 . ;
"RTN","DIETLIB",62,0)
 . ;Find the next |, get the abbreviation and the property value
"RTN","DIETLIB",63,0)
 . S J=$F(DDTSTR,"|",I) I 'J S I=0 Q
"RTN","DIETLIB",64,0)
 . S DDTWIND=$E(DDTSTR,I,J-2)
"RTN","DIETLIB",65,0)
 . S L=+$P(DDTWIND,",",2),DDTABBR=$P(DDTWIND,",")
"RTN","DIETLIB",66,0)
 . S DDTVAL=$G(DDTVALS(DDTABBR))
"RTN","DIETLIB",67,0)
 . S:L DDTVAL=$$QT(DDTVAL,L)
"RTN","DIETLIB",68,0)
 . ;
"RTN","DIETLIB",69,0)
 . ;Replace |abbr| with the value, update I
"RTN","DIETLIB",70,0)
 . S $E(DDTSTR,I-1,J-1)=DDTVAL
"RTN","DIETLIB",71,0)
 . S I=J+$L(DDTVAL)-$L(DDTWIND)-2
"RTN","DIETLIB",72,0)
 Q DDTSTR
"RTN","DIETLIB",73,0)
 ;
"RTN","DIETLIB",74,0)
QT(X,L) ;Return X with one quote replaced with 2 quotes.Repeat the process L times}
"RTN","DIETLIB",75,0)
 N I,J,K
"RTN","DIETLIB",76,0)
 Q:$G(L)=0 X
"RTN","DIETLIB",77,0)
 S:'$G(L) L=1
"RTN","DIETLIB",78,0)
 ;
"RTN","DIETLIB",79,0)
 F I=1:1:L D
"RTN","DIETLIB",80,0)
 . S Y=""
"RTN","DIETLIB",81,0)
 . S J=1,K=1 F  S K=$F(X,"""",J) Q:'K  D
"RTN","DIETLIB",82,0)
 .. S Y=Y_$E(X,J,K-1)_""""
"RTN","DIETLIB",83,0)
 .. S J=K
"RTN","DIETLIB",84,0)
 . S X=Y_$E(X,J,999)
"RTN","DIETLIB",85,0)
 Q X
"RTN","DIETLIB",86,0)
 ;
"RTN","DIETLIB",87,0)
 ;
"RTN","DIETLIB",88,0)
 ;
"RTN","DIETLIB",89,0)
XCODE(DDTCODE,DDTVALS) ;Execute DDTCODE, return value of X   Called by DICATTUD,DIRUD
"RTN","DIETLIB",90,0)
 N X
"RTN","DIETLIB",91,0)
 Q:$G(DDTCODE)="" ""
"RTN","DIETLIB",92,0)
 ;
"RTN","DIETLIB",93,0)
 S DDTCODE=$$PARSE(DDTCODE,.DDTVALS)
"RTN","DIETLIB",94,0)
 X DDTCODE
"RTN","DIETLIB",95,0)
 Q $G(X)
"RTN","DIETLIB",96,0)
 ;
"RTN","DIETLIB",97,0)
XCODEM(DDTCODE,DDTVALS,DDTOUT) ;Execute DDTCODE,
"RTN","DIETLIB",98,0)
 ;  Return values in DDTOUT array
"RTN","DIETLIB",99,0)
 ;In:
"RTN","DIETLIB",100,0)
 ;  DDTCODE = code to execute (may contain |s); sets X or X array
"RTN","DIETLIB",101,0)
 ;  DDTVALS(abbrev) = array of property values
"RTN","DIETLIB",102,0)
 ;Out:
"RTN","DIETLIB",103,0)
 ;  .DDTOUT = X array set by DDTCODE
"RTN","DIETLIB",104,0)
 ;
"RTN","DIETLIB",105,0)
 N X K DDTOUT
"RTN","DIETLIB",106,0)
 Q:$G(DDTCODE)="" ""
"RTN","DIETLIB",107,0)
 ;
"RTN","DIETLIB",108,0)
 S DDTCODE=$$PARSE(DDTCODE,.DDTVALS)
"RTN","DIETLIB",109,0)
 X DDTCODE
"RTN","DIETLIB",110,0)
 K DDTOUT M DDTOUT=X
"RTN","DIETLIB",111,0)
 Q
"RTN","DIETLIB",112,0)
 ;
"RTN","DIETLIB",113,0)
 ;*************************************************************
"RTN","DIETLIB",114,0)
 ;
"RTN","DIETLIBF")
0^23^B29058396^n/a
"RTN","DIETLIBF",1,0)
DIETLIBF ;SFISC/MKO,GFT - LIBRARY FOR FIELD ATTRIBUTES ;25OCT2016
"RTN","DIETLIBF",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIETLIBF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIETLIBF",4,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIETLIBF",5,0)
 ;
"RTN","DIETLIBF",6,0)
 ;The following functions return, for a given file and field,
"RTN","DIETLIBF",7,0)
 ;code to do something, such as validate user input, or validate
"RTN","DIETLIBF",8,0)
 ;the internal form of data. The actual code to perform these
"RTN","DIETLIBF",9,0)
 ;functions may reside under one of several methods, so a list of
"RTN","DIETLIBF",10,0)
 ;methods need to be searched.
"RTN","DIETLIBF",11,0)
 ;
"RTN","DIETLIBF",12,0)
 ;Input to these methods are:
"RTN","DIETLIBF",13,0)
 ;  DDTFILE = File #
"RTN","DIETLIBF",14,0)
 ;  DDTFIELD = Field #
"RTN","DIETLIBF",15,0)
 ;
"RTN","DIETLIBF",16,0)
 ;Returned is:
"RTN","DIETLIBF",17,0)
 ;  Code for method or null
"RTN","DIETLIBF",18,0)
 ;
"RTN","DIETLIBF",19,0)
VALEXT(DDTFILE,DDTFIELD) ;Return code to validate and transform user input  --PERHAPS INTERACTIVELY
"RTN","DIETLIBF",20,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$VALEXTL)
"RTN","DIETLIBF",21,0)
 ;
"RTN","DIETLIBF",22,0)
VALEXTS(DDTFILE,DDTFIELD) ;Return code to SILENTLY validate and transform user input
"RTN","DIETLIBF",23,0)
 ;Non-interactive
"RTN","DIETLIBF",24,0)
 N D,%
"RTN","DIETLIBF",25,0)
 S %=$$GETMETH(.DDTFILE,.DDTFIELD,$$VALEXTSL) I %["+X" S %="K:X?16.N.E X I $D(X) "_% ;DON'T TRY TO "+" A HUGE NUMBER
"RTN","DIETLIBF",26,0)
 S D=$F(%,"%DT=""E") I D>0 S %=$E(%,1,D-2)_$E(%,D,9999)
"RTN","DIETLIBF",27,0)
 Q "N %T,%DT,C,DIG,DIH,DIU,DIV,DICR,DIQUIET S DIQUIET=1 "_% ;PRESERVE VARIABLES 
"RTN","DIETLIBF",28,0)
 ;
"RTN","DIETLIBF",29,0)
VALINT(DDTFILE,DDTFIELD) ;Return code to validate internal form
"RTN","DIETLIBF",30,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$VALINTL)
"RTN","DIETLIBF",31,0)
 ;
"RTN","DIETLIBF",32,0)
XHELP(DDTFILE,DDTFIELD) ;Return the executable help of a field
"RTN","DIETLIBF",33,0)
 D DIPA(DDTFILE,DDTFIELD) ;I $D(^DI(.81,+$P($P(^DD(DDTFILE,DDTFIELD,0),U,2),"t",2),101,4,0)) S DIPA("POINTER")=$$GETPROP(DDTFILE,DDTFIELD,"POINTER")
"RTN","DIETLIBF",34,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$XHELPL)
"RTN","DIETLIBF",35,0)
 ;
"RTN","DIETLIBF",36,0)
OUTPUT(DDTFILE,DDTFIELD) ;Return the executable code to output a field's value.  No arguments means ^DD(DDTFILE,DDTFIELD,0) is already in naked ref
"RTN","DIETLIBF",37,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$OUTPUTL)
"RTN","DIETLIBF",38,0)
 ;
"RTN","DIETLIBF",39,0)
 ;
"RTN","DIETLIBF",40,0)
 ;
"RTN","DIETLIBF",41,0)
DIPA(DDTFILE,DDTFIELD) ;CREATE DIPA NODES FROM PROPERTIES IN THE FIELD
"RTN","DIETLIBF",42,0)
 N T,P,V,N
"RTN","DIETLIBF",43,0)
 S T=+$P($P(^DD(DDTFILE,DDTFIELD,0),U,2),"t",2) Q:'T  ;ONLY HAPPENS FOR EXTENDED DATA TYPES
"RTN","DIETLIBF",44,0)
 F P=0:0 S P=$O(^DD(DDTFILE,DDTFIELD,101,P)) Q:'P  S V=$G(^(P,31)) I V]"" S N=$P($G(^DI(.86,P,0)),U) I N]"" S DIPA(N)=V ;E.G., DIPA("POINTER")="DIC(5,"
"RTN","DIETLIBF",45,0)
 F P=0:0 S P=$O(^DD(DDTFILE,DDTFIELD,201,P)) Q:'P  S V=$G(^(P,31)) I V]"" S N=$P($G(^DI(.87,P,0)),U) I N]"" S DIPA(N)=V ;E.G., DIPA("CODE TO SET POINTER SCREEN")="I 1"
"RTN","DIETLIBF",46,0)
 Q
"RTN","DIETLIBF",47,0)
 ;
"RTN","DIETLIBF",48,0)
 ;****************************************************************
"RTN","DIETLIBF",49,0)
 ;The following functions return a string of methods to search
"RTN","DIETLIBF",50,0)
 ;
"RTN","DIETLIBF",51,0)
VALEXTL() Q "INTERACTIVE VALIDATE AND INPUT TRANSFORM;VALIDATE AND TRANSFORM INPUT;INPUT TRANSFORM"
"RTN","DIETLIBF",52,0)
VALEXTSL() Q "VALIDATE AND TRANSFORM INPUT;INPUT TRANSFORM"
"RTN","DIETLIBF",53,0)
VALINTL() Q "VALIDATE INTERNAL FORM;INPUT TRANSFORM"
"RTN","DIETLIBF",54,0)
XHELPL() Q "INTERACTIVE EXECUTABLE HELP;XECUTABLE HELP"
"RTN","DIETLIBF",55,0)
OUTPUTL() Q "OUTPUT TRANSFORM"
"RTN","DIETLIBF",56,0)
 ;
"RTN","DIETLIBF",57,0)
 ;****************************************************************
"RTN","DIETLIBF",58,0)
 ;
"RTN","DIETLIBF",59,0)
GETMETH(DDTFILE,DDTFIELD,DDTMETL) ;Look for methods in the ;-delimited string
"RTN","DIETLIBF",60,0)
 ;of method numbers.
"RTN","DIETLIBF",61,0)
 ;Return the code for the first non-null method found.
"RTN","DIETLIBF",62,0)
 ;In:
"RTN","DIETLIBF",63,0)
 ;  DDTFILE  = file #
"RTN","DIETLIBF",64,0)
 ;  DDTFIELD = field #
"RTN","DIETLIBF",65,0)
 ;  DDTMETL  =  ;-delimited list of methods to search for
"RTN","DIETLIBF",66,0)
 ;
"RTN","DIETLIBF",67,0)
 N REF,DDTCOD,DDTMET,DDTP,DDTPC,I
"RTN","DIETLIBF",68,0)
 Q:" "[$G(DDTMETL) ""
"RTN","DIETLIBF",69,0)
 ; The use of the naked reference is needed here, regardless of its obscurity. MSC/DKA 2016-03-04
"RTN","DIETLIBF",70,0)
 I '$G(DDTFILE)!'$G(DDTFIELD) S REF=$NA(^(0)) ;^DD(DDTFILE,DDTFIELD,0) is already in naked ref  -- MAYBE!     LET'S NOT USE THIS 'NAKED' TRICK
"RTN","DIETLIBF",71,0)
 E  S REF=$NA(^DD(DDTFILE,DDTFIELD,0))
"RTN","DIETLIBF",72,0)
 Q:REF'?1"^DD(".E ""
"RTN","DIETLIBF",73,0)
 F DDTPC=1:1:$L(DDTMETL,";") S DDTMET=$P(DDTMETL,";",DDTPC) D:DDTMET]""  Q:$G(DDTCOD)]""
"RTN","DIETLIBF",74,0)
 . S I=+$P($P($G(@REF),U,2),"t",2)
"RTN","DIETLIBF",75,0)
 . S DDTP=$O(^DI(.87,"B",DDTMET,""),-1) I DDTP,$P($G(^DI(.81,I,201,DDTP,31)),";")'?."^" S DDTCOD=^(31) ;Q  ;FIRST TRY TO GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",76,0)
 . I DDTMET="INPUT TRANSFORM" D  Q:$D(DDTCOD)
"RTN","DIETLIBF",77,0)
 ..D DIPA(DDTFILE,DDTFIELD) ;SET UP THE PARAMETERS
"RTN","DIETLIBF",78,0)
 ..S DDTP=$$PROP4TYP("SET OF CODES",I) I DDTP]"" S DDTCOD="D READSET^DIED(.X,"""_DDTP_""")" Q  ;M CODE: D READSET^DIED(.X,$$PROP4TYP^DIETLIBF("SET OF CODES",11)
"RTN","DIETLIBF",79,0)
 ..I "Q"'[$P($G(@REF),U,5,999) S DDTCOD=$P(^(0),U,5,999) ;from regular field, get the old input transform
"RTN","DIETLIBF",80,0)
 . I DDTMET="OUTPUT TRANSFORM",$G(@REF)]"",$G(^(2))'?."^" S DDTCOD=^(2) Q
"RTN","DIETLIBF",81,0)
 . I DDTMET="XECUTABLE HELP",$G(@REF)]"",$G(^(4))'?."^" S DDTCOD=^(4) Q
"RTN","DIETLIBF",82,0)
 Q $G(DDTCOD)
"RTN","DIETLIBF",83,0)
 ;
"RTN","DIETLIBF",84,0)
 ;
"RTN","DIETLIBF",85,0)
%DT(PARAM) ;CREATE CODE TO SET THE %DT VARIABLE FROM PARAMETERS, INCLUDING 'PARAM', WHICH MAY BE "E"
"RTN","DIETLIBF",86,0)
 N EARLY
"RTN","DIETLIBF",87,0)
 S EARLY="",PARAM=$TR(PARAM,"""")
"RTN","DIETLIBF",88,0)
 I $G(DIPA("EARLIEST DATE")) S EARLY=",%DT(0)="_DIPA("EARLIEST DATE")
"RTN","DIETLIBF",89,0)
 I $G(DIPA("TIME REQUIRED")) S PARAM=PARAM_"R"
"RTN","DIETLIBF",90,0)
 I $G(DIPA("SECONDS ALLOWED")) S PARAM=PARAM_"S"
"RTN","DIETLIBF",91,0)
 I $G(DIPA("TIME OF DAY")) S PARAM=PARAM_"T"
"RTN","DIETLIBF",92,0)
 I '$G(DIPA("IMPRECISE DATE")) S PARAM=PARAM_"X"
"RTN","DIETLIBF",93,0)
 Q "SET %DT="""_PARAM_""""_EARLY
"RTN","DIETLIBF",94,0)
 ;
"RTN","DIETLIBF",95,0)
DIC ;SET THE DIC VARIABLE FROM PARAMETERS
"RTN","DIETLIBF",96,0)
 I $G(DIPA("POINTER"))'["(" S Y=-1 Q
"RTN","DIETLIBF",97,0)
 N DIS,DIC,DIFILE ;DIFILE SHOULD REALLY BE NEWED BY ^DIC ITSELF
"RTN","DIETLIBF",98,0)
 X $G(DIPA("CODE TO SET POINTER SCREEN")) ;S DIC("S")
"RTN","DIETLIBF",99,0)
 S DIC="^"_DIPA("POINTER"),DIC(0)="M"_$E("L",$G(DIPA("LAYGO"))) I '$D(DIQUIET) S DIC(0)=DIC(0)_"EQ"
"RTN","DIETLIBF",100,0)
 D ^DIC
"RTN","DIETLIBF",101,0)
 Q
"RTN","DIETLIBF",102,0)
 ;
"RTN","DIETLIBF",103,0)
 ;
"RTN","DIETLIBF",104,0)
GETPROP(DDTFILE,DDTFIELD,DDTPROL) ;Look for PROPERTIES in the ;-delimited string
"RTN","DIETLIBF",105,0)
 ;Return the string for the first non-null property found.
"RTN","DIETLIBF",106,0)
 ;In:
"RTN","DIETLIBF",107,0)
 ;  DDTFILE  = file #
"RTN","DIETLIBF",108,0)
 ;  DDTFIELD = field #
"RTN","DIETLIBF",109,0)
 ;  DDTPROL  =  ;-delimited list of properties to search for
"RTN","DIETLIBF",110,0)
 ;
"RTN","DIETLIBF",111,0)
 N REF
"RTN","DIETLIBF",112,0)
 Q:" "[$G(DDTPROL) ""
"RTN","DIETLIBF",113,0)
 I '$G(DDTFILE)!'$G(DDTFIELD) S REF=$NA(^(0))  ;^DD(DDTFILE,DDTFIELD,0) is already in naked ref
"RTN","DIETLIBF",114,0)
 E  S REF=$NA(^DD(DDTFILE,DDTFIELD,0))
"RTN","DIETLIBF",115,0)
 Q:REF'?1"^DD(".E ""
"RTN","DIETLIBF",116,0)
 N DDTCOD,DDTP,DDTPC,I,DIP
"RTN","DIETLIBF",117,0)
 S I=+$P($P($G(@REF),U,2),"t",2)
"RTN","DIETLIBF",118,0)
 F DDTPC=1:1:$L(DDTPROL,";") S DDTP=$P(DDTPROL,";",DDTPC) I DDTP]"" D  Q:$G(DDTCOD)]""
"RTN","DIETLIBF",119,0)
 .I $D(@REF),$O(^(101,0)) S DIP=$O(^DI(.86,"B",DDTP,""),-1) I DIP,$D(@REF),$G(^(101,DIP,31))]"" S DDTCOD=^(31) Q  ;GET PROPERTY FROM THE FIELD ITSELF
"RTN","DIETLIBF",120,0)
 .S DDTCOD=$$PROP4TYP(DDTP,I)
"RTN","DIETLIBF",121,0)
 Q $G(DDTCOD)
"RTN","DIETLIBF",122,0)
 ;
"RTN","DIETLIBF",123,0)
PROP4TYP(T,I) ;FOR PROPERTY 'T' IN DATA TYPE 'I', RETURN THE VALUE
"RTN","DIETLIBF",124,0)
 S T=$O(^DI(.86,"B",T,""),-1) I T,$G(^DI(.81,I,101,T,31))'?."^" Q ^(31) ;GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",125,0)
 Q ""
"RTN","DIETLIBF",126,0)
 ;
"RTN","DIETLIBF",127,0)
 ;
"RTN","DIETLIBF",128,0)
METH4TYP(T,I) ;FOR METHOD 'T' IN DATA TYPE 'I', RETURN THE VALUE
"RTN","DIETLIBF",129,0)
 S T=$O(^DI(.87,"B",T,""),-1) I T,$G(^DI(.81,I,201,T,31))'?."^" Q ^(31) ;GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",130,0)
 Q ""
"RTN","DIEZ0")
0^16^B21633440^B20800523
"RTN","DIEZ0",1,0)
DIEZ0 ;SFISC/GFT - COMPILE INPUT TEMPLATE ;5DEC2012
"RTN","DIEZ0",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIEZ0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIEZ0",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIEZ0",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIEZ0",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIEZ0",7,0)
 ;
"RTN","DIEZ0",8,0)
 D L
"RTN","DIEZ0",9,0)
DL S DQ=0,DK=0,DQFF=0
"RTN","DIEZ0",10,0)
MR S DK=DK+1,DH=$P(DR,";",DK),DI=$P(DH,":",1),(DIEZP,DIEZDUP,DIEZR)="" G:'DI K:DI=0,PB S DPR=$P(DH,"//",2,99),DM=+DI S:DPR]"" DI=$P(DI,"//",1),DH=""
"RTN","DIEZ0",11,0)
 G K:DM=DI S Y=$P(DI,DM,2,99) G MR:Y=""!'$D(^DD(DP,DM,0)) F %=1:1 S X=$P(Y,$C(126),%) Q:X=""  S:X="d" DIEZDUP=X S:X="R" DIEZR=X S:X'="d"&(X'="R")&(X'="T") DIEZP=X D:X="T"
"RTN","DIEZ0",12,0)
 .I $D(^DD(DP,DM,.1)) S DIEZP=^(.1) Q
"RTN","DIEZ0",13,0)
 .I +$P(^DD(DP,DM,0),U,2),$P(^DD(+$P(^(0),U,2),.01,0),U,2)["W",$D(^(.1)) S DIEZP=^(.1)
"RTN","DIEZ0",14,0)
 .Q
"RTN","DIEZ0",15,0)
 S (DI,DM)=+DI G S
"RTN","DIEZ0",16,0)
K S DM=$P(DH,":",2),DM=$S(DM:DM,1:+DI) I DI,$D(^DD(DP,+DI)) G S
"RTN","DIEZ0",17,0)
NX ;
"RTN","DIEZ0",18,0)
 S DI=$O(^DD(DP,+DI)),DIEZP="" S:DI="" DI=-1 G MR:DI'>0,MR:DI>DM
"RTN","DIEZ0",19,0)
S S Y=^DD(DP,+DI,0),DV=$P(Y,U,2)_$E("#",Y["DINUM")_DIEZR_DIEZDUP ;**CCO/NI FIELD NAME (THRU NEXT 2 LINES)
"RTN","DIEZ0",20,0)
 S X=$S(DIEZP=""&'DV:"$$LABEL^DIALOGZ(DP,DIFLD)",1:""""_DIEZP_"""")
"RTN","DIEZ0",21,0)
 S DW=$P(Y,U,4) G NX:$A(DW)=32 I T>DMAX D SV G:DIEZQ K^DIEZ2 G S
"RTN","DIEZ0",22,0)
 W:'$G(DIEZS) "." S DQ=DQ+1,DI=+DI,DU=$P(Y,U,3),%=" S "
"RTN","DIEZ0",23,0)
 K DIEZOT I DV["O",$D(^(2)) D O^DIEZ2
"RTN","DIEZ0",24,0)
 I DQFF S %=" D:$D(DG)>9 F^DIE17,DE S DQ="_DQ_",",DQFF=0
"RTN","DIEZ0",25,0)
 I DV S Y=X,X=DQ_%_"D=0 K DE(1) ;"_DI D L,DRN G MUL^DIEZ2
"RTN","DIEZ0",26,0)
VARS S ^UTILITY($J,U,$P(DW,";",1),$P(DW,";",2),DQ)="",T=T+35,X=DQ_%_"DW="""_DW_""",DV="""_DV_""",DU="""",DIFLD="_DI_",DLB="_X D L ;**CCO/NI COMPILE 'SET DLB=$$LABEL^DIALOGZ...' RATHER THAN FIELD NAME, SO IT WORKS FOR ANY LANGUAGE
"RTN","DIEZ0",27,0)
 I $D(DIEZOT) S X=DIEZOT D L K DIEZOT
"RTN","DIEZ0",28,0)
 S DIEZXREF=$O(^DD("IX","F",DP,DI,0))
"RTN","DIEZ0",29,0)
 I $O(^DD(DP,DI,1,0))>0!(DV["a")!DIEZXREF D
"RTN","DIEZ0",30,0)
 . S DQFF=1,X=" S DE(DW)=""C"_DQ_U_DNM_DRN_""""
"RTN","DIEZ0",31,0)
 . S:DIEZXREF X=X_",DE(DW,""INDEX"")=1"
"RTN","DIEZ0",32,0)
 . ;Determine whether this field is part of a field-level key.
"RTN","DIEZ0",33,0)
 . ;Also, build list: DIEZKEY(uniquenessIndex)=""
"RTN","DIEZ0",34,0)
 . ;for those indexes that are uniqueness indexes for keys.
"RTN","DIEZ0",35,0)
 . N DIEZK,DIEZUI
"RTN","DIEZ0",36,0)
 . K DIEZKEY S DIEZK=0
"RTN","DIEZ0",37,0)
 . F  S DIEZK=$O(^DD("KEY","F",DP,DI,DIEZK)) Q:'DIEZK  D
"RTN","DIEZ0",38,0)
 .. S DIEZUI=$P($G(^DD("KEY",DIEZK,0)),U,4) Q:'DIEZUI
"RTN","DIEZ0",39,0)
 .. S:$P($G(^DD("IX",DIEZUI,0)),U,6)="F" DIEZKEY(DIEZUI)=""
"RTN","DIEZ0",40,0)
 . S:$D(DIEZKEY) X=X_",DE(DW,""KEY"")=""$$K"_DQ_""""
"RTN","DIEZ0",41,0)
 . D L
"RTN","DIEZ0",42,0)
 K DIEZXREF
"RTN","DIEZ0",43,0)
X D PR,XREF^DIEZ2:DQFF
"RTN","DIEZ0",44,0)
 I DPR?1"//".E S %=""
"RTN","DIEZ0",45,0)
TYPE E  I DV["t" D
"RTN","DIEZ0",46,0)
 . I DPR?1"/".E S %=$$VALEXTS^DIETLIBF(DP,DI)
"RTN","DIEZ0",47,0)
 . E  S %=$$VALEXT^DIETLIBF(DP,DI)
"RTN","DIEZ0",48,0)
 E  D
"RTN","DIEZ0",49,0)
 . S %=$P(Y,U,5,99),X=$F(%,"%DT=""") I X,DPR?1"/".E S Y=$F(%,"E",X) I Y S %=$E(%,1,Y-2)_$E(%,Y,999)
"RTN","DIEZ0",50,0)
 D AF^DIEZ2 S X="X"_DQ_" " I "Q"[% S X=X_"Q" D L G NX
"RTN","DIEZ0",51,0)
 S X=X_% D L I DV["F"!(DV["t") S X=" I $D(X),X'?.ANP K X" D L
"RTN","DIEZ0",52,0)
 S X=" Q" D L S X=" ;" D L G NX
"RTN","DIEZ0",53,0)
 ;
"RTN","DIEZ0",54,0)
PB I DH="" S:'$D(DOV(DL)) DOV(DL)=0 S DOV(DL)=$O(^DIE(DIEZ,"DR",DIER,DP,DOV(DL))) S:DOV(DL)="" DOV(DL)=-1 G UP:DOV(DL)<0 S DR=^(DOV(DL)),DK=0 G MR
"RTN","DIEZ0",55,0)
 S DQ=DQ+1 I DH?1"@".N S X=DQ_" S DQ="_(DQ+1)_" ;"_DH,^UTILITY($J,"AB",DIEZAB,DH)=DQ_U_DNM_DRN G M
"RTN","DIEZ0",56,0)
 S X=DQ_" D:$D(DG)>9 F^DIE17,DE S Y=U,DQ="_DQ_" " I "Q"[DH S X=X_"G A" G M
"RTN","DIEZ0",57,0)
 I DH?1"^".E S F=0,X=X_$P(DH,U,5,999),Q=$P(DH,U,1,3) D L,DRN,QFF^DIEZ2,DIERN^DIEZ2 S X=" S DGO=""^"_DNM_%_""",DC="_Q_" G DIEZ^DIE0",DRN(%)=$P(DH,U,2)_U_DIERN_U_$P(DH,U,3)_U_U_DQ_U_DRN D L S X="R"_DQ_" D DE G A" D L S X=" ;" G M
"RTN","DIEZ0",58,0)
 S X=X_"D X"_DQ_" D:$D(DIEFIRE)#2 FIREREC^DIE17 G A:$D(Y)[0,A:Y=U S X=Y,DIC(0)=""F"",DW=DQ G OUT^DIE17" D L S X="X"_DQ_" "_DH D L S X=" Q"
"RTN","DIEZ0",59,0)
M D L G MR
"RTN","DIEZ0",60,0)
 ;
"RTN","DIEZ0",61,0)
UP S DQ=DQ+1,X=DQ_" G "_(DL>1)_"^DIE17" D L,^DIEZ1 G:DIEZQ K^DIEZ2 S Y=0
"RTN","DIEZ0",62,0)
LV S Y=$O(DRN(Y)) S:Y="" Y=-1 I Y<0 G ^DIEZ2
"RTN","DIEZ0",63,0)
 S X=DRN(Y) G LV:X=U S DRN=Y,DP=+X,DIER=$P(X,U,2),DL=DIER\1,DIE=U_$P(X,U,3),DIEZL=+$P(X,U,4),DIEZAB=$P(X,U,5)_U_DNM_$P(X,U,6),DR=$S($D(^DIE(DIEZ,"DR",DIER,DP)):^(DP),1:"0:9999999"),DRN(Y)=U D N S:+DR=.01!(DR?1"0:".E) ^(3)=^(3)_"+D G B" G DL
"RTN","DIEZ0",64,0)
 ;
"RTN","DIEZ0",65,0)
PR ;
"RTN","DIEZ0",66,0)
 D DU^DIEZ2:DU]"" S X=" G RE" I DW="0;1",DL>1,DQ=1 S X=X_":'D S DQ=2 G 2"
"RTN","DIEZ0",67,0)
 D PR^DIEZ2:DPR]""
"RTN","DIEZ0",68,0)
L S L=L+1,^UTILITY($J,0,L)=X,T=T+$L(X)+2 S:X?1N.E T=T+15 Q
"RTN","DIEZ0",69,0)
 ;
"RTN","DIEZ0",70,0)
SV D DRN
"RTN","DIEZ0",71,0)
 S X=DQ+1_" D:$D(DG)>9 F^DIE17 G ^"_DNM_%,DQ=% D L,^DIEZ1 Q:DIEZQ
"RTN","DIEZ0",72,0)
N G NEWROU^DIEZ
"RTN","DIEZ0",73,0)
 ;
"RTN","DIEZ0",74,0)
DRN F %=DRN+1:1 Q:'$D(DRN(%))
"RTN","DIFMEDT1")
0^52^B1665680^n/a
"RTN","DIFMEDT1",1,0)
DIFMEDT1 ;O-OIFO/BI - FM23 Extensible Data Types ;27-Oct-2015
"RTN","DIFMEDT1",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIFMEDT1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIFMEDT1",4,0)
 Q
"RTN","DIFMEDT1",5,0)
 ;
"RTN","DIFMEDT1",6,0)
ENP81 ; Entry Point to Enter or Edit DATA TYPE FILE (#.81)
"RTN","DIFMEDT1",7,0)
 D MAIN(.81) Q
"RTN","DIFMEDT1",8,0)
 ;
"RTN","DIFMEDT1",9,0)
ENP86 ; Entry Point to Enter or Edit DATA TYPE PROPERTY FILE (#.86)
"RTN","DIFMEDT1",10,0)
 D MAIN(.86) Q
"RTN","DIFMEDT1",11,0)
 ;
"RTN","DIFMEDT1",12,0)
ENP87 ; Entry Point to Enter or Edit DATA TYPE METHOD FILE (#.87)
"RTN","DIFMEDT1",13,0)
 D MAIN(.87) Q
"RTN","DIFMEDT1",14,0)
 ;
"RTN","DIFMEDT1",15,0)
MAIN(FILE) ; Private Entry Point
"RTN","DIFMEDT1",16,0)
 N DIC,DIR,SCREEN,Y
"RTN","DIFMEDT1",17,0)
 S SCREEN=0
"RTN","DIFMEDT1",18,0)
 ;
"RTN","DIFMEDT1",19,0)
 ; Ask about using Screen-Mode
"RTN","DIFMEDT1",20,0)
 S DIR(0)="Y"
"RTN","DIFMEDT1",21,0)
 S DIR("A")="Do you want to use the screen-mode version"
"RTN","DIFMEDT1",22,0)
 S DIR("B")="YES"
"RTN","DIFMEDT1",23,0)
 D ^DIR
"RTN","DIFMEDT1",24,0)
 S:Y>0 SCREEN=1
"RTN","DIFMEDT1",25,0)
 ;
"RTN","DIFMEDT1",26,0)
SELECT ; Private Loop for user input
"RTN","DIFMEDT1",27,0)
 ; Select Prompt
"RTN","DIFMEDT1",28,0)
 S DIC="^DI("_FILE_",",DIC(0)="AELMQ" D ^DIC
"RTN","DIFMEDT1",29,0)
 ;
"RTN","DIFMEDT1",30,0)
 ; Exit if nothing is selected
"RTN","DIFMEDT1",31,0)
 Q:Y<1
"RTN","DIFMEDT1",32,0)
 ;
"RTN","DIFMEDT1",33,0)
 ; Use Screen-Mode
"RTN","DIFMEDT1",34,0)
 D:SCREEN
"RTN","DIFMEDT1",35,0)
 . N DIC,DIE,DR,DA,DDSPARM,DDSFILE,DDSPAGE
"RTN","DIFMEDT1",36,0)
 . S DA=+Y,DDSFILE=FILE,DR="[DIP"_$P(FILE,".",2)_"S]",DDSPAGE=1
"RTN","DIFMEDT1",37,0)
 . D ^DDS
"RTN","DIFMEDT1",38,0)
 ;
"RTN","DIFMEDT1",39,0)
 ; Use Roll-And-Scroll Mode
"RTN","DIFMEDT1",40,0)
 D:'SCREEN
"RTN","DIFMEDT1",41,0)
 . S DIE="^DI("_FILE_",",DA=+Y,DR="[DIP"_$P(FILE,".",2)_"IT]" D ^DIE
"RTN","DIFMEDT1",42,0)
 . W !!
"RTN","DIFMEDT1",43,0)
 G SELECT
"RTN","DIFMEDT1",44,0)
 Q
"RTN","DILL")
0^13^B12021545^B11498371
"RTN","DILL",1,0)
DILL ;SFISC/GFT - TURN PRINT FLDS INTO CODE ;01MAR2016
"RTN","DILL",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DILL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DILL",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DILL",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DILL",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DILL",7,0)
 ;
"RTN","DILL",8,0)
BEGIN ;NEEDS 'W' FOR SORT SPECIFIER AND 'Y' FOR PULLING THE VARIABLE -- E.G. DIOO1   CREATES WRITE CODE IN 'Y'
"RTN","DILL",9,0)
 ;THIS SUBROUTINE WILL RETURN 'Y' AS CODE TO DO THE WRITING OF THE VALUE OF THE FIELD, AND 'DLN' AS THE MAX LENGTH OF THE FIELD VALUE
"RTN","DILL",10,0)
  S:$G(DXSET) DXS=1
"RTN","DILL",11,0)
V ;
"RTN","DILL",12,0)
 I $G(X)'[U S X=$G(^DD(DILLFILE,DILLFLD,0))
"RTN","DILL",13,0)
TYPE S V=$P(X,U,2) I V["O"!(V["t") S Y=Y_" "_$$OUTPUT^DIETLIBF(DILLFILE,DILLFLD),DIO=1,D1="",DLN=30,DRJ=0 D SY G J
"RTN","DILL",14,0)
 S DRJ=$F(V,"P")
"RTN","DILL",15,0)
 G CLC:V["C",D:'DRJ S V=+$E(V,DRJ,99),D1=$P(X,U,3) I 'V S DRJ=0,@("V=$D(^"_D1_"0))") G D:'V S V=+$P(^(0),U,2)
"RTN","DILL",16,0)
POINTR D Y S Y=Y_" S Y=$S(Y="""":Y,$D(^"_D1_"Y,0))#2:$P(^(0),U),1:Y)" I $D(^DD(V,.01,0)) S X=$P(X,U)_U_$P(^(0),U,2,9) G V
"RTN","DILL",17,0)
D I V["V" D Y S Y=$P(Y," S Y=$S(Y="""":Y,$D(^")_" S C=$P(^DD("_DP_","_+W_",0),U,2) D Y^DIQ:Y S C="","""
"RTN","DILL",18,0)
 I V["D" D  G SY
"RTN","DILL",19,0)
 .S DLN=$P($P(X,"%DT=""",2),"""",1),DLN=$S(DLN["S":21,DLN["T":18,1:11) D W
"RTN","DILL",20,0)
 .S D1=" D DT" S:DLN>11&DRJ D1=" W ?("_DLN_"-$S(Y#1:18,1:11)+$X)"_D1 ;HERE IS WRITE CODE, INCLUDING DT^DIO2
"RTN","DILL",21,0)
 .S:W[";W" Y=Y_" X ^DD(""DD"") S:Y[""@"" Y=$P(Y,""@"")_""  ""_$P(Y,""@"",2)"
"RTN","DILL",22,0)
 I $P(X,"X>",2) S DLN=$L(+$P(X,"X>",2))+3,DRJ=1 G J
"RTN","DILL",23,0)
 S DLN=+$P(X,"$L(X)>",2) I 'DLN S D1=$P($P(X,U,4),";",2) I D1?1"E"1N.N1","1N.N S DLN=$P(D1,",",2)-D1+1
"RTN","DILL",24,0)
FJ I V'["S" S I=+$P(V,"J",2) S:V["F"&I DLN=I S:'DLN DLN=30 G J
"RTN","DILL",25,0)
 D W N D1,D2,D3 S D1=$P(X,U,3)
"RTN","DILL",26,0)
 S D2=$G(DUZ("LANG")) I D2>1,$G(^DD(DILLFILE,DILLFLD,.007,D2,0))[";" S D1=^(0) F D2=1:1:$L(D1,";") S $P(D1,";",D2)=":"_$P(D1,";",D2) ;GRAB TRANSLATED SET VALUES
"RTN","DILL",27,0)
S I D1]"",W[";W"!'$D(DNP) S D2=$P(D1,";"),D1=$P(D1,";",2,99),D3=$P(D2,":"),D2=$P(D2,":",2) S:$L(D2)>DLN&'$P(W,";L",2)&'$P(W,";R",2) DLN=$L(D2) G S
"RTN","DILL",28,0)
SET S D1="$$SET^DIQ("_DILLFILE_","_DILLFLD_",Y)" S D1=$S(DRJ:"$J("_D1_","_DLN_")",DLN:"$E("_D1_",1,"_DLN_")",1:D1)
"RTN","DILL",29,0)
 S:W[";W" Y=Y_" S:Y]"""" Y="_D1 S:W'[";W" D1=" W:Y]"""" "_D1
"RTN","DILL",30,0)
SY D Y S Y=Y_$S($D(DNP):"",1:D1) K D1 Q
"RTN","DILL",31,0)
 ;
"RTN","DILL",32,0)
Y I DXS S Y=" S Y="_Y,DXS="Y"
"RTN","DILL",33,0)
Q Q
"RTN","DILL",34,0)
 ;
"RTN","DILL",35,0)
 ;
"RTN","DILL",36,0)
 ;
"RTN","DILL",37,0)
W ;
"RTN","DILL",38,0)
 F I=";W",";L" I W[I S DRJ=0 S:$P(W,I,2)?1N.E DLN=+$P(W,I,2),I="" G Q
"RTN","DILL",39,0)
 I $P(X,U,2)["J",$P(X,U,2)'["F" S I=$P($P(X,U,2),"J",2),W=W_";R"_$P(I+1,U,I>0) I $P(X,U,2)'["O",I["," S W=W_";D"_+$P(I,",",2)
"RTN","DILL",40,0)
 I W[";R" S DRJ=1 S:$P(W,";R",2) DLN=+$P(W,";R",2)
"RTN","DILL",41,0)
 S I=$P($P(W,";D",2),";",1) S:I]"" DRJ=1,I=","_+I Q
"RTN","DILL",42,0)
 ;
"RTN","DILL",43,0)
CLC ;
"RTN","DILL",44,0)
 S Y=" "_$P(X,U,5,99),DXS="X" I V["D" S Y=Y_" S Y=X" G D
"RTN","DILL",45,0)
 I V["p" S V=$P(V,"p",2),D1=$P($G(^DIC(+V,0,"GL")),U,2) I D1]"" S Y=Y_" S Y=X",DXS="Y" G POINTR ;computed pointer
"RTN","DILL",46,0)
 I V?.E1"J"1N.E,W'[";X",W'[";R",V'["," S W=W_";L"_+$P(V,"J",2)
"RTN","DILL",47,0)
 ;
"RTN","DILL",48,0)
J D W Q:V["m"!$D(DNP)  I '$D(DLN) S Y=Y_" W X" Q  ;HERE IS WRITE CODE
"RTN","DILL",49,0)
 I 'DLN S DLN=$S(V["B":1,W[";L0":0,1:8)
"RTN","DILL",50,0)
 S D2="" I 'DRJ S V="E(",D3="1,"_DLN
"RTN","DILL",51,0)
 E  S V="J(",D3=DLN_I I I]"" D Y S D2=":Y]""""" I DXS="X" S D2=":X'?.""*"""
"RTN","DILL",52,0)
 S Y=$S(DXS:",$"_V_Y,1:Y_" W"_D2_" $"_V_DXS)_","_D3_")" ;HERE IS WRITE CODE
"RTN","DILL",53,0)
 I $P(X,U,2)["C",$L(Y)<225 S Y=Y_" K Y("_DP_","_+W_")"
"RTN","DILL",54,0)
 I $G(DDXP)=4 S Y=$$DJTOPY^DDXP4(Y)
"RTN","DILL",55,0)
K K D2,D3 Q
"RTN","DILL",56,0)
 ;
"RTN","DILL",57,0)
 ;
"RTN","DILL",58,0)
EN(DILLFILE,DILLFLD,DXSET) ; Entry Point for VEN version
"RTN","DILL",59,0)
 G BEGIN
"RTN","DINIT0")
0^35^B12079842^B11557024
"RTN","DINIT0",1,0)
DINIT0 ;SFISC/GFT,XAK - INITIALIZE VA FILEMAN ;23AUG2015
"RTN","DINIT0",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT0",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT0",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT0",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT0",7,0)
 ;
"RTN","DINIT0",8,0)
 I '$D(^DD("SETPTCNODE")) S ^("SETPTCNODE")=$H W !! F I=0:0 S I=$O(^DD(I)) Q:'I  F J=0:0 S J=$O(^DD(I,J)) Q:'J  S %=+$P($P($G(^(J,0)),U,2),"p",2) I %,$D(^DD(%,0)) S ^(0,"PTC",I,J)="" ;COMPUTED POINTER
"RTN","DINIT0",9,0)
DD F I=1:1 S X=$T(DD+I),Y=$P(X," ",3,99) G ^DINIT1:X?.P S @("^DD(0,"_$E($P(X," ",2),3,99)_")=Y")
"RTN","DINIT0",10,0)
 ;;0 ATTRIBUTE^N
"RTN","DINIT0",11,0)
 ;;"SB",.1,1
"RTN","DINIT0",12,0)
 ;;.001,0 NUMBER^N^^ ^K:$L(X)>12 X
"RTN","DINIT0",13,0)
 ;;.01,0 LABEL^RF^^0;1^K:$L(X)>30!(X?1E)!(X["""")!(X["=") X
"RTN","DINIT0",14,0)
 ;;.01,1,0 ^.1^1^1
"RTN","DINIT0",15,0)
 ;;.01,1,1,0 DA(2)^B
"RTN","DINIT0",16,0)
 ;;.01,1,1,1 S @(DIC_"""B"",X,DA)=""""")
"RTN","DINIT0",17,0)
 ;;.01,1,1,2 K @(DIC_"""B"",X,DA)")
"RTN","DINIT0",18,0)
 ;;.01,"DEL",.2,0 I DUZ(0)'="@",$P(^DD(DA(1),DA,0),"^",2)["X" W !,$C(7),"ONLY A PROGRAMMER CAN DELETE THIS FIELD!"
"RTN","DINIT0",19,0)
 ;;.01,"DEL",.3,0 W:$D(^DD("ACOMP",DA(1),DA)) !,$C(7),"WARNING-- A COMPUTED FIELD USES THIS FIELD!" I 0
"RTN","DINIT0",20,0)
 ;;.01,"DEL",1,0 I DA=.01 W $C(7),"??"
"RTN","DINIT0",21,0)
 ;;.01,"DEL","TRB",0 S %=+$P(^DD(DA(1),DA,0),U,2) I %,$D(^DD(%,"TRB")) S DA(0)=DA,DA=% D TRIG^DIDH S DA=DA(0)
"RTN","DINIT0",22,0)
 ;;.01,"DEL","T",0 I $O(^DD(DA(1),DA,5,0))>0 W $C(7),!,"CAN'T DELETE A FIELD THAT HAS A 'TRIGGER' POINTING TO IT!"
"RTN","DINIT0",23,0)
 ;;.01,"DEL","ID",0 I $D(^DD(DA(1),0,"ID",DA)) W !,"CAN'T DELETE IDENTIFIER!"
"RTN","DINIT0",24,0)
 ;;.1,0 TITLE^F^^.1;E1,999^K:$L(X)>100!(+X=X) X I $D(X),$L(X)<32,@("$D("_DIC_"""B"",X,DA))") K X
"RTN","DINIT0",25,0)
 ;;.1,1,0 ^.1^1^1
"RTN","DINIT0",26,0)
 ;;.1,1,1,0 DA(2)^B
"RTN","DINIT0",27,0)
 ;;.1,1,1,1 S:$L(X)<31 @(DIC_"""B"",X,DA)=1")
"RTN","DINIT0",28,0)
 ;;.1,1,1,2 K:$L(X)<31 @(DIC_"""B"",X,DA)")
"RTN","DINIT0",29,0)
 ;;.1,3 (OPTIONAL) FULL FIELD NAME  (MUST BE DIFFERENT FROM LABEL)
"RTN","DINIT0",30,0)
 ;;.12,0 VARIABLE POINTER^.12^^V;0
"RTN","DINIT0",31,0)
 ;;.2,0 SPECIFIER^F^^0;2
"RTN","DINIT0",32,0)
 ;;.2,1,0 ^.1^4^4
"RTN","DINIT0",33,0)
 ;;.2,1,1,0 DA(2)^SB^ (SUBFILE USED)
"RTN","DINIT0",34,0)
 ;;.2,1,1,1 S:X @(DIC_"""SB"",+X,DA)=""""")
"RTN","DINIT0",35,0)
 ;;.2,1,1,2 K:X @(DIC_"""SB"",+X,DA)")
"RTN","DINIT0",36,0)
 ;;.2,1,2,0 DA(2)^RQ^
"RTN","DINIT0",37,0)
 ;;.2,1,2,1 S:X["R" @(DIC_"""RQ"",DA)=""""")
"RTN","DINIT0",38,0)
 ;;.2,1,2,2 K:X["R" @(DIC_"""RQ"",DA)")
"RTN","DINIT0",39,0)
 ;;.2,1,3,0 ^
"RTN","DINIT0",40,0)
 ;;.2,1,3,1 S %=$P(X,"P",2) S:$A(%)=48!%&$D(^DD(+%,0)) ^(0,"PT",DA(1),DA)=""
"RTN","DINIT0",41,0)
 ;;.2,1,3,2 S %=$P(X,"P",2) K:$A(%)=48!% ^DD(+%,0,"PT",DA(1),DA)
"RTN","DINIT0",42,0)
 ;;.2,1,41,0 ^
"RTN","DINIT0",43,0)
 ;;.2,1,41,1 I X["t" D AFDEF^DIETLIB(DA(1),DA)
"RTN","DINIT0",44,0)
 ;;.2,1,41,2 I X["t" D AFDEFDEL^DIETLIB(DA(1),DA)
"RTN","DINIT0",45,0)
 ;;.2,1,666,0 ^
"RTN","DINIT0",46,0)
 ;;.2,1,666,1 N % S %=+$P(X,"p",2) I %,$D(^DD(%,0)) S ^(0,"PTC",DA(1),DA)="" ;COMPUTED POINTER
"RTN","DINIT0",47,0)
 ;;.2,1,666,2 N % S %=+$P(X,"p",2) I %,$D(^DD(%,0)) K ^(0,"PTC",DA(1),DA)
"RTN","DINIT0",48,0)
 ;;.2,9 ^
"RTN","DINIT0",49,0)
 ;;.23,0 LENGTH^CJ3^^ ; ^S X=$S($D(@(DCC_"D0,0)")):$P(^(0),U,2),1:""),X=$P(X,"J",2),X=$S(X:+X,1:"")
"RTN","DINIT0",50,0)
 ;;.23,9 ^
"RTN","DINIT0",51,0)
 ;;.24,0 DECIMAL DEFAULT^CJ1^^ ; ^S @("X=$P($G("_DCC_"D0,0)),U,2)"),X=$P($P(X,"J",2),",",2)
"RTN","DINIT0",52,0)
 ;;.25,0 TYPE^CJ15^^ ; ^S X=$P($G(@(DCC_"D0,0)")),U,2),X=$S(X["C":6,X["N":2,X["P":7,X["S":3,X["D":1,X["V":8,X["K":9,X["W"!$S('X:0,'$D(^DD(+X,.01,0)):0,1:$P(^(0),U,2)["W"):5,1:0),X=$S($D(^DOPT("DICATT",X,0)):$P(^(0)," "),1:"FREE TEXT")
"RTN","DINIT0",53,0)
 ;;.25,9 ^
"RTN","DINIT0F4")
0^22^B57627834^B55946103
"RTN","DINIT0F4",1,0)
DINIT0F4 ;SFISC/MKO - DATA FOR FORM AND BLOCK FILES ;29AUG2015
"RTN","DINIT0F4",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT0F4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT0F4",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT0F4",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT0F4",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT0F4",7,0)
 ;
"RTN","DINIT0F4",8,0)
 F I=1:2 S X=$T(ENTRY+I) G:X="" ^DINIT0F5 S Y=$E($T(ENTRY+I+1),5,999),X=$E(X,4,999),@X=Y
"RTN","DINIT0F4",9,0)
 Q
"RTN","DINIT0F4",10,0)
ENTRY ;
"RTN","DINIT0F4",11,0)
 ;;^DIST(.404,.00101,0)
"RTN","DINIT0F4",12,0)
 ;;=DICATT^1
"RTN","DINIT0F4",13,0)
 ;;^DIST(.404,.00101,40,0)
"RTN","DINIT0F4",14,0)
 ;;=^.4044I^17^16
"RTN","DINIT0F4",15,0)
 ;;^DIST(.404,.00101,40,1,0)
"RTN","DINIT0F4",16,0)
 ;;=1^FIELD LABEL^2^^LABEL
"RTN","DINIT0F4",17,0)
 ;;^DIST(.404,.00101,40,1,2)
"RTN","DINIT0F4",18,0)
 ;;=2,14^30^2,1
"RTN","DINIT0F4",19,0)
 ;;^DIST(.404,.00101,40,1,3)
"RTN","DINIT0F4",20,0)
 ;;=!M
"RTN","DINIT0F4",21,0)
 ;;^DIST(.404,.00101,40,1,3.1)
"RTN","DINIT0F4",22,0)
 ;;=S Y=$P($G(^DD(DICATTA,DICATTF,0)),U)
"RTN","DINIT0F4",23,0)
 ;;^DIST(.404,.00101,40,1,10)
"RTN","DINIT0F4",24,0)
 ;;=S DDSBR=20 I X="" S DDSSTACK=9
"RTN","DINIT0F4",25,0)
 ;;^DIST(.404,.00101,40,1,20)
"RTN","DINIT0F4",26,0)
 ;;=DD^^0,.01
"RTN","DINIT0F4",27,0)
 ;;^DIST(.404,.00101,40,2,0)
"RTN","DINIT0F4",28,0)
 ;;=2^TITLE^2^^TITLE
"RTN","DINIT0F4",29,0)
 ;;^DIST(.404,.00101,40,2,2)
"RTN","DINIT0F4",30,0)
 ;;=4,18^60^4,11
"RTN","DINIT0F4",31,0)
 ;;^DIST(.404,.00101,40,2,3)
"RTN","DINIT0F4",32,0)
 ;;=!M
"RTN","DINIT0F4",33,0)
 ;;^DIST(.404,.00101,40,2,3.1)
"RTN","DINIT0F4",34,0)
 ;;=S Y=$G(^DD(DICATTA,DICATTF,.1))
"RTN","DINIT0F4",35,0)
 ;;^DIST(.404,.00101,40,2,11)
"RTN","DINIT0F4",36,0)
 ;;=I $$GET^DDSVALF(1)="" S DDACT="EX"
"RTN","DINIT0F4",37,0)
 ;;^DIST(.404,.00101,40,2,20)
"RTN","DINIT0F4",38,0)
 ;;=F^^1:99
"RTN","DINIT0F4",39,0)
 ;;^DIST(.404,.00101,40,2,22)
"RTN","DINIT0F4",40,0)
 ;;=I +X=X K X
"RTN","DINIT0F4",41,0)
 ;;^DIST(.404,.00101,40,3,0)
"RTN","DINIT0F4",42,0)
 ;;=11^DESCRIPTION...^2^^DESCRIPTION
"RTN","DINIT0F4",43,0)
 ;;^DIST(.404,.00101,40,3,2)
"RTN","DINIT0F4",44,0)
 ;;=11,17^1^11,2^1
"RTN","DINIT0F4",45,0)
 ;;^DIST(.404,.00101,40,3,3)
"RTN","DINIT0F4",46,0)
 ;;=!M
"RTN","DINIT0F4",47,0)
 ;;^DIST(.404,.00101,40,3,3.1)
"RTN","DINIT0F4",48,0)
 ;;=S Y=$$WPLUS^DICATTD0(21)
"RTN","DINIT0F4",49,0)
 ;;^DIST(.404,.00101,40,3,10)
"RTN","DINIT0F4",50,0)
 ;;=S DDSSTACK=1.1
"RTN","DINIT0F4",51,0)
 ;;^DIST(.404,.00101,40,3,20)
"RTN","DINIT0F4",52,0)
 ;;=F^^1:1
"RTN","DINIT0F4",53,0)
 ;;^DIST(.404,.00101,40,4,0)
"RTN","DINIT0F4",54,0)
 ;;=3^AUDIT^2^^AUDIT
"RTN","DINIT0F4",55,0)
 ;;^DIST(.404,.00101,40,4,2)
"RTN","DINIT0F4",56,0)
 ;;=5,18^16^5,11
"RTN","DINIT0F4",57,0)
 ;;^DIST(.404,.00101,40,4,3)
"RTN","DINIT0F4",58,0)
 ;;=!M
"RTN","DINIT0F4",59,0)
 ;;^DIST(.404,.00101,40,4,3.1)
"RTN","DINIT0F4",60,0)
 ;;=S Y=$P($G(^DD(DICATTA,DICATTF,"AUDIT")),U)
"RTN","DINIT0F4",61,0)
 ;;^DIST(.404,.00101,40,4,20)
"RTN","DINIT0F4",62,0)
 ;;=DD^^0,1.1
"RTN","DINIT0F4",63,0)
 ;;^DIST(.404,.00101,40,5,0)
"RTN","DINIT0F4",64,0)
 ;;=4^AUDIT CONDITION^2^^AUDIT CONDITION
"RTN","DINIT0F4",65,0)
 ;;^DIST(.404,.00101,40,5,2)
"RTN","DINIT0F4",66,0)
 ;;=6,18^60^6,1
"RTN","DINIT0F4",67,0)
 ;;^DIST(.404,.00101,40,5,3)
"RTN","DINIT0F4",68,0)
 ;;=!M
"RTN","DINIT0F4",69,0)
 ;;^DIST(.404,.00101,40,5,3.1)
"RTN","DINIT0F4",70,0)
 ;;=S Y=$G(^DD(DICATTA,DICATTF,"AX"))
"RTN","DINIT0F4",71,0)
 ;;^DIST(.404,.00101,40,5,20)
"RTN","DINIT0F4",72,0)
 ;;=DD^^0,1.2
"RTN","DINIT0F4",73,0)
 ;;^DIST(.404,.00101,40,6,0)
"RTN","DINIT0F4",74,0)
 ;;=5^READ ACCESS^2^^READ ACCESS
"RTN","DINIT0F4",75,0)
 ;;^DIST(.404,.00101,40,6,2)
"RTN","DINIT0F4",76,0)
 ;;=7,18^13^7,5
"RTN","DINIT0F4",77,0)
 ;;^DIST(.404,.00101,40,6,3)
"RTN","DINIT0F4",78,0)
 ;;=!M
"RTN","DINIT0F4",79,0)
 ;;^DIST(.404,.00101,40,6,3.1)
"RTN","DINIT0F4",80,0)
 ;;=S Y=$G(^DD(DICATTA,DICATTF,8))
"RTN","DINIT0F4",81,0)
 ;;^DIST(.404,.00101,40,6,20)
"RTN","DINIT0F4",82,0)
 ;;=DD^^0,8
"RTN","DINIT0F4",83,0)
 ;;^DIST(.404,.00101,40,7,0)
"RTN","DINIT0F4",84,0)
 ;;=6^DELETE ACCESS^2^^DELETE ACCESS
"RTN","DINIT0F4",85,0)
 ;;^DIST(.404,.00101,40,7,2)
"RTN","DINIT0F4",86,0)
 ;;=8,18^13^8,3
"RTN","DINIT0F4",87,0)
 ;;^DIST(.404,.00101,40,7,3)
"RTN","DINIT0F4",88,0)
 ;;=!M
"RTN","DINIT0F4",89,0)
 ;;^DIST(.404,.00101,40,7,3.1)
"RTN","DINIT0F4",90,0)
 ;;=S Y=$G(^DD(DICATTA,DICATTF,8.5))
"RTN","DINIT0F4",91,0)
 ;;^DIST(.404,.00101,40,7,20)
"RTN","DINIT0F4",92,0)
 ;;=DD^^0,8.5
"RTN","DINIT0F4",93,0)
 ;;^DIST(.404,.00101,40,8,0)
"RTN","DINIT0F4",94,0)
 ;;=7^WRITE ACCESS^2^^WRITE ACCESS
"RTN","DINIT0F4",95,0)
 ;;^DIST(.404,.00101,40,8,2)
"RTN","DINIT0F4",96,0)
 ;;=9,18^13^9,4
"RTN","DINIT0F4",97,0)
 ;;^DIST(.404,.00101,40,8,3)
"RTN","DINIT0F4",98,0)
 ;;=!M
"RTN","DINIT0F4",99,0)
 ;;^DIST(.404,.00101,40,8,3.1)
"RTN","DINIT0F4",100,0)
 ;;=S Y=$G(^DD(DICATTA,DICATTF,9))
"RTN","DINIT0F4",101,0)
 ;;^DIST(.404,.00101,40,8,20)
"RTN","DINIT0F4",102,0)
 ;;=DD^^0,9
"RTN","DINIT0F4",103,0)
 ;;^DIST(.404,.00101,40,9,0)
"RTN","DINIT0F4",104,0)
 ;;=12^TECHNICAL DESCRIPTION...^2
"RTN","DINIT0F4",105,0)
 ;;^DIST(.404,.00101,40,9,2)
"RTN","DINIT0F4",106,0)
 ;;=11,49^1^11,24^1
"RTN","DINIT0F4",107,0)
 ;;^DIST(.404,.00101,40,9,3)
"RTN","DINIT0F4",108,0)
 ;;=!M
"RTN","DINIT0F4",109,0)
 ;;^DIST(.404,.00101,40,9,3.1)
"RTN","DINIT0F4",110,0)
 ;;=S Y=$$WPLUS^DICATTD0(23)
"RTN","DINIT0F4",111,0)
 ;;^DIST(.404,.00101,40,9,10)
"RTN","DINIT0F4",112,0)
 ;;=S DDSSTACK=1.2
"RTN","DINIT0F4",113,0)
 ;;^DIST(.404,.00101,40,9,20)
"RTN","DINIT0F4",114,0)
 ;;=F^^1:1
"RTN","DINIT0F4",115,0)
 ;;^DIST(.404,.00101,40,10,0)
"RTN","DINIT0F4",116,0)
 ;;=18^MANDATORY^2^^MANDATORY
"RTN","DINIT0F4",117,0)
 ;;^DIST(.404,.00101,40,10,2)
"RTN","DINIT0F4",118,0)
 ;;=15,17^3^15,6
"RTN","DINIT0F4",119,0)
 ;;^DIST(.404,.00101,40,10,3)
"RTN","DINIT0F4",120,0)
 ;;=!M
"RTN","DINIT0F4",121,0)
 ;;^DIST(.404,.00101,40,10,3.1)
"RTN","DINIT0F4",122,0)
 ;;=S Y=$S(DICATT2["R":"YES",DICATT2'["C"&'DICATT2:"NO",1:"")
"RTN","DINIT0F4",123,0)
 ;;^DIST(.404,.00101,40,10,10)
"RTN","DINIT0F4",124,0)
 ;;=S DDSBR=98
"RTN","DINIT0F4",125,0)
 ;;^DIST(.404,.00101,40,10,20)
"RTN","DINIT0F4",126,0)
 ;;=Y
"RTN","DINIT0F4",127,0)
 ;;^DIST(.404,.00101,40,12,0)
"RTN","DINIT0F4",128,0)
 ;;=98^HELP-PROMPT^2^^HELP-PROMPT
"RTN","DINIT0F4",129,0)
 ;;^DIST(.404,.00101,40,12,2)
"RTN","DINIT0F4",130,0)
 ;;=16,17^61^16,4
"RTN","DINIT0F4",131,0)
 ;;^DIST(.404,.00101,40,12,3)
"RTN","DINIT0F4",132,0)
 ;;=!M
"RTN","DINIT0F4",133,0)
 ;;^DIST(.404,.00101,40,12,3.1)
"RTN","DINIT0F4",134,0)
 ;;=S Y=$G(^DD(DICATTA,DICATTF,3))
"RTN","DINIT0F4",135,0)
 ;;^DIST(.404,.00101,40,12,20)
"RTN","DINIT0F4",136,0)
 ;;=DD^^0,3
"RTN","DINIT0F4",137,0)
 ;;^DIST(.404,.00101,40,13,0)
"RTN","DINIT0F4",138,0)
 ;;=99^XECUTABLE HELP^2^^XECUTABLE HELP
"RTN","DINIT0F4",139,0)
 ;;^DIST(.404,.00101,40,13,2)
"RTN","DINIT0F4",140,0)
 ;;=17,17^61^17,1
"RTN","DINIT0F4",141,0)
 ;;^DIST(.404,.00101,40,13,3)
"RTN","DINIT0F4",142,0)
 ;;=!M
"RTN","DINIT0F4",143,0)
 ;;^DIST(.404,.00101,40,13,3.1)
"RTN","DINIT0F4",144,0)
 ;;=S Y=$G(^DD(DICATTA,DICATTF,4))
"RTN","DINIT0F4",145,0)
 ;;^DIST(.404,.00101,40,13,20)
"RTN","DINIT0F4",146,0)
 ;;=DD^^0,4
"RTN","DINIT0F4",147,0)
 ;;^DIST(.404,.00101,40,14,0)
"RTN","DINIT0F4",148,0)
 ;;=20^DATA TYPE...^2^^TYPE
"RTN","DINIT0F4",149,0)
 ;;^DIST(.404,.00101,40,14,2)
"RTN","DINIT0F4",150,0)
 ;;=2,60^20^2,47^1
"RTN","DINIT0F4",151,0)
 ;;^DIST(.404,.00101,40,14,3)
"RTN","DINIT0F4",152,0)
 ;;=!M
"RTN","DINIT0F4",153,0)
 ;;^DIST(.404,.00101,40,14,3.1)
"RTN","DINIT0F4",154,0)
 ;;=S Y=$$TYPE^DICATTD
"RTN","DINIT0F4",155,0)
 ;;^DIST(.404,.00101,40,14,4)
"RTN","DINIT0F4",156,0)
 ;;=1
"RTN","DINIT0F4",157,0)
 ;;^DIST(.404,.00101,40,14,10)
"RTN","DINIT0F4",158,0)
 ;;=S DDSBR=18 D BRANCH^DICATTD
"RTN","DINIT0F4",159,0)
 ;;^DIST(.404,.00101,40,14,11)
"RTN","DINIT0F4",160,0)
 ;;=I $G(DICATTDK) S DDACT="EX"
"RTN","DINIT0F4",161,0)
 ;;^DIST(.404,.00101,40,14,20)
"RTN","DINIT0F4",162,0)
 ;;=P^M^.81:EOFIZ
"RTN","DINIT0F4",163,0)
 ;;^DIST(.404,.00101,40,14,24)
"RTN","DINIT0F4",164,0)
 ;;=D SCREEN^DICATTD
"RTN","DINIT0F4",165,0)
 ;;^DIST(.404,.00101,40,15,0)
"RTN","DINIT0F4",166,0)
 ;;=.5^^4^^FIELD NUMBER
"RTN","DINIT0F4",167,0)
 ;;^DIST(.404,.00101,40,15,2)
"RTN","DINIT0F4",168,0)
 ;;=1,1^77
"RTN","DINIT0F4",169,0)
 ;;^DIST(.404,.00101,40,15,30)
"RTN","DINIT0F4",170,0)
 ;;=D NUMBER^DICATTD
"RTN","DINIT0F4",171,0)
 ;;^DIST(.404,.00101,40,16,0)
"RTN","DINIT0F4",172,0)
 ;;=8^SOURCE^2^^SOURCE
"RTN","DINIT0F4",173,0)
 ;;^DIST(.404,.00101,40,16,2)
"RTN","DINIT0F4",174,0)
 ;;=10,18^61^10,10
"RTN","DINIT0F4",175,0)
 ;;^DIST(.404,.00101,40,16,3)
"RTN","DINIT0F4",176,0)
 ;;=!M
"RTN","DINIT0F4",177,0)
 ;;^DIST(.404,.00101,40,16,3.1)
"RTN","DINIT0F4",178,0)
 ;;=S Y=$G(^DD(DICATTA,DICATTF,10))
"RTN","DINIT0F4",179,0)
 ;;^DIST(.404,.00101,40,16,20)
"RTN","DINIT0F4",180,0)
 ;;=DD^^0,10
"RTN","DINIT0F4",181,0)
 ;;^DIST(.404,.00101,40,17,0)
"RTN","DINIT0F4",182,0)
 ;;=20.5^IS THIS FIELD MULTIPLE...^2^^MULTIPLE
"RTN","DINIT0F4",183,0)
 ;;^DIST(.404,.00101,40,17,2)
"RTN","DINIT0F4",184,0)
 ;;=13,49^3^13,23^1
"RTN","DINIT0F4",185,0)
 ;;^DIST(.404,.00101,40,17,3)
"RTN","DINIT0F4",186,0)
 ;;=!M
"RTN","DINIT0F4",187,0)
 ;;^DIST(.404,.00101,40,17,3.1)
"RTN","DINIT0F4",188,0)
 ;;=S Y="N"
"RTN","DINIT0F4",189,0)
 ;;^DIST(.404,.00101,40,17,4)
"RTN","DINIT0F4",190,0)
 ;;=^^^0
"RTN","DINIT0F4",191,0)
 ;;^DIST(.404,.00101,40,17,10)
"RTN","DINIT0F4",192,0)
 ;;=S:DICATT2'["X"&X DDSSTACK=5 I DICATT4="",DUZ(0)="@" S DDSSTACK=$S(X:5,1:3)
"RTN","DINIT0F4",193,0)
 ;;^DIST(.404,.00101,40,17,11)
"RTN","DINIT0F4",194,0)
 ;;=I DICATT4="",'$G(DICATTLN) S DDSBR=98
"RTN","DINIT0F4",195,0)
 ;;^DIST(.404,.00101,40,17,20)
"RTN","DINIT0F4",196,0)
 ;;=Y
"RTN","DINIT0F4",197,0)
 ;;^DIST(.404,.00102,0)
"RTN","DINIT0F4",198,0)
 ;;=DICATT1^1
"RTN","DINIT0F4",199,0)
 ;;^DIST(.404,.00102,40,0)
"RTN","DINIT0F4",200,0)
 ;;=^.4044I^6^6
"RTN","DINIT0F4",201,0)
 ;;^DIST(.404,.00102,40,1,0)
"RTN","DINIT0F4",202,0)
 ;;=21^EARLIEST DATE^2^^EARLIEST DATE
"RTN","DINIT0F4",203,0)
 ;;^DIST(.404,.00102,40,1,2)
"RTN","DINIT0F4",204,0)
 ;;=1,29^18^1,14
"RTN","DINIT0F4",205,0)
 ;;^DIST(.404,.00102,40,1,3)
"RTN","DINIT0F4",206,0)
 ;;=!M
"RTN","DINIT0F4",207,0)
 ;;^DIST(.404,.00102,40,1,3.1)
"RTN","DINIT0F4",208,0)
 ;;=D EARLY^DICATTD1
"RTN","DINIT0F4",209,0)
 ;;^DIST(.404,.00102,40,1,10)
"RTN","DINIT0F4",210,0)
 ;;=S:'Y DDSBR=23
"RTN","DINIT0F4",211,0)
 ;;^DIST(.404,.00102,40,1,20)
"RTN","DINIT0F4",212,0)
 ;;=F
"RTN","DINIT0F4",213,0)
 ;;^DIST(.404,.00102,40,1,21,0)
"RTN","DINIT0F4",214,0)
 ;;=^^1^1^2981103
"RTN","DINIT0F4",215,0)
 ;;^DIST(.404,.00102,40,1,21,1,0)
"RTN","DINIT0F4",216,0)
 ;;=Enter a date, or "DT" to mean the current date at time of data entry
"RTN","DINIT0F4",217,0)
 ;;^DIST(.404,.00102,40,1,22)
"RTN","DINIT0F4",218,0)
 ;;=N Y,%DT I X'="DT" S %DT="" D ^%DT K:Y<0 X
"RTN","DINIT0F4",219,0)
 ;;^DIST(.404,.00102,40,2,0)
"RTN","DINIT0F4",220,0)
 ;;=22^LATEST DATE^2^^LATEST DATE
"RTN","DINIT0F4",221,0)
 ;;^DIST(.404,.00102,40,2,2)
"RTN","DINIT0F4",222,0)
 ;;=2,29^20^2,16
"RTN","DINIT0F4",223,0)
 ;;^DIST(.404,.00102,40,2,3)
"RTN","DINIT0F4",224,0)
 ;;=!M
"RTN","DINIT0F4",225,0)
 ;;^DIST(.404,.00102,40,2,3.1)
"RTN","DINIT0F4",226,0)
 ;;=D LATEST^DICATTD1
"RTN","DINIT0F4",227,0)
 ;;^DIST(.404,.00102,40,2,20)
"RTN","DINIT0F4",228,0)
 ;;=F
"RTN","DINIT0F4",229,0)
 ;;^DIST(.404,.00102,40,2,21,0)
"RTN","DINIT0F4",230,0)
 ;;=^^1^1^2981103
"RTN","DINIT0F4",231,0)
 ;;^DIST(.404,.00102,40,2,21,1,0)
"RTN","DINIT0F4",232,0)
 ;;=Enter a date, or "DT" to mean the current date at time of data entry
"RTN","DINIT0F4",233,0)
 ;;^DIST(.404,.00102,40,2,22)
"RTN","DINIT0F4",234,0)
 ;;=N Y,%DT I X'="DT" S %DT="" D ^%DT K:Y<0 X
"RTN","DINIT0F4",235,0)
 ;;^DIST(.404,.00102,40,3,0)
"RTN","DINIT0F4",236,0)
 ;;=23^CAN DATE BE IMPRECISE^2^^CAN DATE BE IMPRECISE
"RTN","DINIT0F4",237,0)
 ;;^DIST(.404,.00102,40,3,2)
"RTN","DINIT0F4",238,0)
 ;;=3,29^3^3,6
"RTN","DINIT0F4",239,0)
 ;;^DIST(.404,.00102,40,3,3)
"RTN","DINIT0F4",240,0)
 ;;=!M
"RTN","DINIT0F4",241,0)
 ;;^DIST(.404,.00102,40,3,3.1)
"RTN","DINIT0F4",242,0)
 ;;=S Y=$E("YN",$P(DICATT5,"""",2)["X"+1)
"RTN","DINIT0F4",243,0)
 ;;^DIST(.404,.00102,40,3,20)
"RTN","DINIT0F4",244,0)
 ;;=Y
"RTN","DINIT0F4",245,0)
 ;;^DIST(.404,.00102,40,3,21,0)
"RTN","DINIT0F4",246,0)
 ;;=^^1^1^2981031
"RTN","DINIT0F4",247,0)
 ;;^DIST(.404,.00102,40,3,21,1,0)
"RTN","DINIT0F4",248,0)
 ;;=E.G., Would 'FEB, 1999' be allowed?
"RTN","DINIT0F4",249,0)
 ;;^DIST(.404,.00102,40,4,0)
"RTN","DINIT0F4",250,0)
 ;;=24^CAN TIME OF DAY BE ENTERED^2^^CAN TIME OF DAY BE ENTERED
"RTN","DINIT0F4",251,0)
 ;;^DIST(.404,.00102,40,4,2)
"RTN","DINIT0F4",252,0)
 ;;=4,29^3^4,1
"RTN","DINIT0F4",253,0)
 ;;^DIST(.404,.00102,40,4,3)
"RTN","DINIT0F4",254,0)
 ;;=!M
"RTN","DINIT0F4",255,0)
 ;;^DIST(.404,.00102,40,4,3.1)
"RTN","DINIT0F4",256,0)
 ;;=S Y=$E("NY",$P(DICATT5,"""",2)["T"+1)
"RTN","DINIT0F4",257,0)
 ;;^DIST(.404,.00102,40,4,10)
"RTN","DINIT0F4",258,0)
 ;;=S:X=2 DDSBR="COM"
"RTN","DINIT11")
0^48^B20730978^B18791706
"RTN","DINIT11",1,0)
DINIT11 ;SFISC/GFT,XAK - INITIALIZE VA FILEMAN ;26OCT2016
"RTN","DINIT11",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT11",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT11",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT11",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT11",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT11",7,0)
 ;;GFT;**167**
"RTN","DINIT11",8,0)
 ;
"RTN","DINIT11",9,0)
DD F I=1:1 S X=$T(DD+I),Y=$P(X," ",3,99) G ^DINIT11A:X?.P S @("^DD("_$E($P(X," ",2),3,99)_")=Y")
"RTN","DINIT11",10,0)
 ;;0,23,0 TECHNICAL DESCRIPTION^.001^^23;0
"RTN","DINIT11",11,0)
 ;;0,50,0 DATE FIELD LAST EDITED^D^^DT;1^Q
"RTN","DINIT11",12,0)
 ;;0,50,9 ^
"RTN","DINIT11",13,0)
 ;;0,101,0 PROPERTY^.10101P^^101;0
"RTN","DINIT11",14,0)
 ;;0,102,0 METHOD^.10201P^^201;0
"RTN","DINIT11",15,0)
 ;;0,999,0 TRIGGERED-BY POINTER^.15^^5;0
"RTN","DINIT11",16,0)
 ;;0,999,9 ^
"RTN","DINIT11",17,0)
 ;;.1,0,"NM","CROSS-REFERENCE"
"RTN","DINIT11",18,0)
 ;;.1,0 CROSS-REFERENCE^
"RTN","DINIT11",19,0)
 ;;.1,.01,0 INDEX^F^^0;E1,245^Q
"RTN","DINIT11",20,0)
 ;;.1,.01,1,0 ^.1^3^3
"RTN","DINIT11",21,0)
 ;;.1,.01,1,1,0 0^IX
"RTN","DINIT11",22,0)
 ;;.1,.01,1,1,1 S:$P(X,U,2)]"" @("^DD("_$P(X,"^",1)_",0,""IX"",$P(X,""^"",2),DA(2),DA(1))=""""")
"RTN","DINIT11",23,0)
 ;;.1,.01,1,1,2 K:$P(X,U,2)]"" @("^DD("_$P(X,"^",1)_",0,""IX"",$P(X,""^"",2),DA(2),DA(1))")
"RTN","DINIT11",24,0)
 ;;.1,.01,1,2,0 DA(2)^IX
"RTN","DINIT11",25,0)
 ;;.1,.01,1,2,1 S ^DD(DA(2),"IX",DA(1))=""
"RTN","DINIT11",26,0)
 ;;.1,.01,1,2,2 I $O(^DD(DA(2),DA(1),1,0))=DA,$O(^(DA))="" K ^DD(DA(2),"IX",DA(1))
"RTN","DINIT11",27,0)
 ;;.1,.01,1,3,0 ^^TRIGGER
"RTN","DINIT11",28,0)
 ;;.1,.01,1,3,1 S Y=$P(X,U,5),X=$P(X,U,4),Z=DA(2)_U_DA(1)_U_DA I Y F %=1:1 Q:'%  S %1=$S($D(^DD(X,Y,5,%,0)):^(0),1:0) Q:%1=Z  I '%1 S ^(0)=Z F %=-1:0 S ^DD(X,"TRB",DA(2),DA(1),DA,Y)="",Y=X Q:'$D(^DD(X,0,"UP"))  S X=^("UP"),Y=$O(^DD(X,"SB",Y,0))
"RTN","DINIT11",29,0)
 ;;.1,.01,1,3,2 S Y=$P(X,"^",5),X=$P(X,"^",4) I Y S %=0 F  S %=$O(^DD(X,Y,5,%)) Q:%=""  Q:'$D(^(%,0))  I DA(2)_"^"_DA(1)_"^"_DA=^(0) K ^DD(X,Y,5,%) F  K ^DD(X,"TRB",DA(2),DA(1),DA,Y) Q:'$D(^DD(X,0,"UP"))  S Y=X,X=^("UP"),Y=$O(^DD(X,"SB",Y,0))
"RTN","DINIT11",30,0)
 ;;.1,1,0 SET STATEMENT^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"RTN","DINIT11",31,0)
 ;;.1,1,3 This is Standard MUMPS code.
"RTN","DINIT11",32,0)
 ;;.1,1,21,0 ^^3^3^2890802^
"RTN","DINIT11",33,0)
 ;;.1,1,21,1,0 Enter Standard MUMPS code which will set this cross-reference.
"RTN","DINIT11",34,0)
 ;;.1,1,21,2,0 You may use X to reference the data in this field and DA-array
"RTN","DINIT11",35,0)
 ;;.1,1,21,3,0 to reference the internal entry numbers in the file.
"RTN","DINIT11",36,0)
 ;;.1,1,"DEL",1,0 I 1 W $C(7),!,"CAN'T DELETE THIS NODE."
"RTN","DINIT11",37,0)
 ;;.1,2,0 KILL STATEMENT^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"RTN","DINIT11",38,0)
 ;;.1,2,3 This is Standard MUMPS code.
"RTN","DINIT11",39,0)
 ;;.1,2,21,0 ^^3^3^2890802^
"RTN","DINIT11",40,0)
 ;;.1,2,21,1,0 Enter Standard MUMPS code which will kill this cross-reference.
"RTN","DINIT11",41,0)
 ;;.1,2,21,2,0 You may use X to reference the data in this field and the DA-array
"RTN","DINIT11",42,0)
 ;;.1,2,21,3,0 to reference the internal entry numbers in the file.
"RTN","DINIT11",43,0)
 ;;.1,2,"DEL",1,0 I 1 W $C(7),!,"CAN'T DELETE THIS NODE."
"RTN","DINIT11",44,0)
 ;;.1,3,0 NO-DELETION MESSAGE^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>245!($L(X)<3) X
"RTN","DINIT11",45,0)
 ;;.1,3,1,0 ^.1
"RTN","DINIT11",46,0)
 ;;.1,3,1,1,0 .1^AC^MUMPS
"RTN","DINIT11",47,0)
 ;;.1,3,1,1,1 Q
"RTN","DINIT11",48,0)
 ;;.1,3,1,1,2 K:^DD(DA(2),DA(1),1,DA,3)']"" ^(3)
"RTN","DINIT11",49,0)
 ;;.1,3,3 Answer must be 3-245 characters in length.
"RTN","DINIT11",50,0)
 ;;.1,3,21,0 ^^2^2^2890803^^
"RTN","DINIT11",51,0)
 ;;.1,3,21,1,0 Enter a message if you want to prevent this cross-reference from being
"RTN","DINIT11",52,0)
 ;;.1,3,21,2,0 deleted.
"RTN","DINIT11",53,0)
 ;;.1,4,0 DATE UPDATED^D^^DT;1^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"RTN","DINIT11",54,0)
 ;;.1,10,0 DESCRIPTION^.101^^%D;0
"RTN","DINIT11",55,0)
 ;;.1,"IX",.01
"RTN","DINIT11",56,0)
 ;;.1,666,0 RE-INDEXING^SI^1:NO RE-INDEXING ALLOWED;0:ALLOW REINDEXING^NOREINDEX;1
"RTN","DINIT11",57,0)
 ;;.1,666,3 Should the re-indexing of this cross reference be prohibited?
"RTN","DINIT11",58,0)
 ;;.1,666,21,0 ^^5^5
"RTN","DINIT11",59,0)
 ;;.1,666,21,1,0 If you answer '1', this cross reference will not be re-indexed during a
"RTN","DINIT11",60,0)
 ;;.1,666,21,2,0 general re-indexing of this file, whether it's done via API or
"RTN","DINIT11",61,0)
 ;;.1,666,21,3,0 interactively. If you answer '0', which is the default, it will. A cross
"RTN","DINIT11",62,0)
 ;;.1,666,21,4,0 reference will be re-indexed if it is specifically named in an API call.
"RTN","DINIT11",63,0)
 ;;.1,666,21,5,0 For those APIs which re-index a single record, this restriction is ignored.
"RTN","DINIT11",64,0)
 ;;.101,0 DESCRIPTION SUB-FIELD^^.01^1
"RTN","DINIT11",65,0)
 ;;.101,0,"UP" .1
"RTN","DINIT11",66,0)
 ;;.101,.01,0 DESCRIPTION^W^^0;1^Q
"RTN","DINIT11",67,0)
 ;;.10101,0 PROPERTY SUB-FIELD^^.01^1
"RTN","DINIT11",68,0)
 ;;.10101,.01,0 PROPERTY^P.86^DI(.86,^0;1^
"RTN","DINIT11",69,0)
 ;;.10101,31,0 VALUE^F^^31;E1,245
"RTN","DINIT11",70,0)
 ;;.10201,0 METHOD SUB-FIELD^^.01^1
"RTN","DINIT11",71,0)
 ;;.10201,.01,0 METHOD^P.87^DI(.87,^0;1^
"RTN","DINIT11",72,0)
 ;;.10201,31,0 VALUE^K^^31;E1,245 
"RTN","DINIT11C")
0^53^B22917372^B22387975
"RTN","DINIT11C",1,0)
DINIT11C ;SFISC/GFT - DCM-INITIALIZE FILE #1 ;3JUN2016
"RTN","DINIT11C",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT11C",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT11C",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT11C",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT11C",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT11C",7,0)
 ;GFT;**999,1004,1008,1013,1020,1043,1053,1055**
"RTN","DINIT11C",8,0)
 ;
"RTN","DINIT11C",9,0)
 F I=1:1:6 S D=$P("DD^RD^WR^DEL^LAYGO^AUDIT",U,I),^DD(1,30+I,0)=D_" ACCESS^C^^ ; ^S X=$S($D(^DIC(D0,0,"""_D_""")):^("""_D_"""),1:"""")"
"RTN","DINIT11C",10,0)
 S ^DD(1,50,0)="LOOKUP PROGRAM^C^^ ; ^S X=$S($D(^DD(D0,0,""DIC"")):^(""DIC""),1:"""")"
"RTN","DINIT11C",11,0)
 S ^DD(1,51,0)="VERSION^CJ8^^ ; ^S X=$P($G(^DD(D0,0,""VR"")),U)"
"RTN","DINIT11C",12,0)
 S ^DD(1,51.1,0)="DISTRIBUTION PACKAGE^CJ30^^ ; ^S X=$G(^DD(D0,0,""VRPK""))"
"RTN","DINIT11C",13,0)
 S ^DD(1,51.2,0)="PACKAGE REVISION DATA^CJ240^^ ; ^S X=$G(^DD(D0,0,""VRRV""))"
"RTN","DINIT11C",14,0)
 ;S ^DD(1,53,0)="RESTRICT EDITING OF FILE^C^^ ; ^S X=$S($D(^DD(D0,0,""DI"")):$P(^(""DI""),U,2),1:"""")"
"RTN","DINIT11C",15,0)
 S ^DD(1,54,0)="ARCHIVE FILE^C^^ ; ^S X=$S($D(^DD(D0,0,""DI"")):$P(^(""DI""),U),1:"""")"
"RTN","DINIT11C",16,0)
 S ^DD(1,1815,0)="COMPILED X-REF ROUTINE^CJ9^^ ; ^S X=$G(^DD(D0,0,""DIK""))"
"RTN","DINIT11C",17,0)
 S ^DD(1,1816,0)="OLD COMPILED X-REF ROUTINE^CJ8^^ ; ^S X=$G(^DD(D0,0,""DIKOLD""))"
"RTN","DINIT11C",18,0)
 S ^DD(1,1819,0)="COMPILED CROSS-REFERENCES^CJ3^^ ; ^S X=$S($G(^DD(D0,0,""DIK""))]"""":""YES"",1:""NO"")"
"RTN","DINIT11C",19,0)
 S ^DD(1,1819,21,0)="^^3^3^2930709^",^(1,0)="Computed field that indicates whether or not cross-references are",^DD(1,1819,21,2,0)="compiled.  This field can be seen when doing an INQUIRE to the FILE "
"RTN","DINIT11C",20,0)
 S ^DD(1,1819,21,3,0)="file (file #1, sometimes referred to as the file of files.)"
"RTN","DINIT11C",21,0)
 F I=1815,1816,1819 S ^DD(1,I,9)="^",^(9.01)="",^(9.1)=$P(^(0),U,5,99)
"RTN","DINIT11C",22,0)
BUILD S ^DD(1,21400,0)="BUILD^Cmp9.6^^ ; ^N D,DIF S DIF=D0 F D=0:0 S D=$O(^XPD(9.6,D)) Q:'D  I $D(^(D,4,DIF)) N D0 S D0=D,X=$P(^XPD(9.6,D,0),U) X DICMX Q:'$D(D)",^(9)=U
"RTN","DINIT11C",23,0)
 S ^DD(1,21400,21,0)="^^3^3^3160119^"
"RTN","DINIT11C",24,0)
 S ^DD(1,21400,21,1,0)="The Build File (#9.6) is searched for Builds containing the File.  "
"RTN","DINIT11C",25,0)
 S ^DD(1,21400,21,2,0)="A list of the identified Builds is created for display.  "
"RTN","DINIT11C",26,0)
 S ^DD(1,21400,21,3,0)="Multiple Builds will be shown if appropriate."
"RTN","DINIT11C",27,0)
 S $P(^DIC(0),U,1,2)="FILE^1",^DIC(1,0)="FILE^1",^(0,"GL")="^DIC(" D A
"RTN","DINIT11C",28,0)
 S ^DIC(1,"%D",0)="^^2^2^2940908^"
"RTN","DINIT11C",29,0)
 S ^DIC(1,"%D",1,0)="This file stores the descriptive information for all files in the FileMan"
"RTN","DINIT11C",30,0)
 S ^DIC(1,"%D",2,0)="managed database."
"RTN","DINIT11C",31,0)
 S ^DD(1,.001,0)="NUMBER^N^^ ^K:X<2!$D(^DD(X)) X I $D(X),$D(^VA(200,DUZ,1))#2,$P(^(1),U)]"""" I X<$P(^(1),""-"")!(X>$P($P(^(1),U),""-"",2)) K X"
"RTN","DINIT11C",32,0)
 S ^(4)="W !?5,""Enter an unused number"" I $D(^VA(200,DUZ,1)),$P(^(1),U)]"""" W "" within the range, "",$P(^(1),U)"
"RTN","DINIT11C",33,0)
 ;
"RTN","DINIT11C",34,0)
EGP K ^DD(1,"GL",1.008),^DD(1.008,"B") S ^DD(1,1.008,0)="TRANSLATION^1.008^^ALANG;0" ;NEXT 31 LINES BUILD DD DEFINITIONS OF FILE, FIELD AND HELP TRANSLATIONS INTO FOREIGN LANGUAGES
"RTN","DINIT11C",35,0)
 S ^DD(1,1,008,21,0)="^^1^1^3151205^"
"RTN","DINIT11C",36,0)
 S ^DD(1,1.008,21,1,0)="This multiple contains the renderings of the File's NAME in various languages."
"RTN","DINIT11C",37,0)
 S ^DD(1,1.008,23,0)="^^3^3^3160119"
"RTN","DINIT11C",38,0)
 S ^DD(1,1.008,23,1,0)="Translations are entered using calls to the DIALOGZ routine.  "
"RTN","DINIT11C",39,0)
 S ^DD(1,1.008,23,2,0)="Only Languages with a TYPE=Living can be used for Translations."
"RTN","DINIT11C",40,0)
 S ^DD(1.008,0)="TRANSLATION^^"
"RTN","DINIT11C",41,0)
 S ^DD(1.008,0,"UP")=1
"RTN","DINIT11C",42,0)
 S ^DD(1.008,.001,0)="LANGUAGE^P.85^DI(.85,^ ^Q"
"RTN","DINIT11C",43,0)
 S ^DD(1.008,.001,3)="Enter a language for the translation."
"RTN","DINIT11C",44,0)
 S ^DD(1.008,.001,21,0)="^^1^1^3151205^"
"RTN","DINIT11C",45,0)
 S ^DD(1.008,.001,21,1,0)="The language into which the File NAME is translated."
"RTN","DINIT11C",46,0)
 S ^DD(1.008,.01,0)="TRANSLATION^F^^0;1^K:$L(X)>30 X"
"RTN","DINIT11C",47,0)
 S ^DD(1.008,.01,1,0)="^.1^1^1"
"RTN","DINIT11C",48,0)
 S ^DD(1.008,.01,1,1,0)="1^ALANG^MUMPS"
"RTN","DINIT11C",49,0)
 S ^DD(1.008,.01,1,1,1)="S ^DIC(""ALANG""_DA,X,DA(1))="""""
"RTN","DINIT11C",50,0)
 S ^DD(1.008,.01,1,1,2)="K ^DIC(""ALANG""_DA,X,DA(1))"
"RTN","DINIT11C",51,0)
 S ^DD(1.008,.01,3)="Enter the translation, 1-30 characters."
"RTN","DINIT11C",52,0)
 S ^DD(1.008,.01,21,0)="^^1^1^3151205^"
"RTN","DINIT11C",53,0)
 S ^DD(1.008,.01,21,1,0)="The translation of the File's NAME into another language."
"RTN","DINIT11C",54,0)
DD S ^DD(0,1.008,0)="TRANSLATION^.008^^.008;0"
"RTN","DINIT11C",55,0)
 S ^DD(.008,0)="TRANSLATION^^"
"RTN","DINIT11C",56,0)
 S ^DD(.008,0,"UP")=0
"RTN","DINIT11C",57,0)
 S ^DD(.008,.001,0)="LANGUAGE^P.85^DI(.85,^ ^Q"
"RTN","DINIT11C",58,0)
 S ^DD(.008,.01,0)="TRANSLATION^F^^0;1^K:$L(X)>30 X"
"RTN","DINIT11C",59,0)
HELP S ^DD(0,1.009,0)="HELP TRANSLATION^.009^^.009;0"
"RTN","DINIT11C",60,0)
 S ^DD(.009,0)="TRANSLATION^^"
"RTN","DINIT11C",61,0)
 S ^DD(.009,0,"UP")=0
"RTN","DINIT11C",62,0)
 S ^DD(.009,.001,0)="LANGUAGE^P.85^DI(.85,^ ^Q"
"RTN","DINIT11C",63,0)
 S ^DD(.009,.01,0)="HELP MESSAGE^F^^0;1^K:$L(X)>240 X"
"RTN","DINIT11C",64,0)
SET S ^DD(0,1.007,0)="SET TRANSLATION^.007^^.007;0"
"RTN","DINIT11C",65,0)
 S ^DD(.007,0)="TRANSLATION^^"
"RTN","DINIT11C",66,0)
 S ^DD(.007,0,"UP")=0
"RTN","DINIT11C",67,0)
 S ^DD(.007,.001,0)="LANGUAGE^P.85^DI(.85,^ ^Q"
"RTN","DINIT11C",68,0)
 S ^DD(.007,.01,0)="SET VALUES^F^^0;1^K:$L(X)>240 X"
"RTN","DINIT11C",69,0)
 ;
"RTN","DINIT11C",70,0)
 F I=.1,0 D XX,XX
"RTN","DINIT11C",71,0)
DIK F I=.001,.007,.008,.009,.1,.12,.15,.101,.10101,.10201,.3,1,1.005,1.01,1.008 I $D(^DD(I)) D XX
"RTN","DINIT11C",72,0)
 ;
"RTN","DINIT11C",73,0)
 Q
"RTN","DINIT11C",74,0)
 ;
"RTN","DINIT11C",75,0)
XX S DA(1)=I,DIK="^DD("_I_","
"RTN","DINIT11C",76,0)
X W ".." D IXALL^DIK
"RTN","DINIT11C",77,0)
 Q
"RTN","DINIT11C",78,0)
 ;
"RTN","DINIT11C",79,0)
A S (^("RD"),^("LAYGO"),^("WR"),^("DD"))=U Q
"RTN","DINIT11C",80,0)
A1 S (^("DEL"),^("LAYGO"),^("WR"),^("DD"))=U Q
"RTN","DINIT11C",81,0)
 ;
"RTN","DINIT20")
0^56^B30255167^B36574363
"RTN","DINIT20",1,0)
DINIT20 ;SFISC/XAK - INITIALIZE VA FILEMAN ;9JAN2016
"RTN","DINIT20",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT20",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT20",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT20",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT20",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT20",7,0)
 ;GFT;**999,1001,1009,1040,1045,1053,1054**
"RTN","DINIT20",8,0)
 ;
"RTN","DINIT20",9,0)
DD F I=1:1 S X=$T(DD+I),Y=$P(X," ",3,99) G ^DINIT22:X?.P S @("^DD(1.1,"_$E($P(X," ",2),3,99)_")=Y")
"RTN","DINIT20",10,0)
 ;;0 FIELD^^4.2^16
"RTN","DINIT20",11,0)
 ;;0,"ID","WRITE" N % S %=$P(^(0),U,2) D EN^DDIOL("   "_$$NAKED^DIUTL("$$DATE^DIUTL(%)"),"","?0")
"RTN","DINIT20",12,0)
 ;;0,"NM","AUDIT"
"RTN","DINIT20",13,0)
 ;;.001,0 NUMBER^NJ7,0^^ ^K:+X'=X!(X<1)!(X?.E1"."1N.N) X
"RTN","DINIT20",14,0)
 ;;.001,3 A whole number greater than 1.
"RTN","DINIT20",15,0)
 ;;.01,0 INTERNAL ENTRY NUMBER^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>16!($L(X)<1)!'(X'?1P.E) X
"RTN","DINIT20",16,0)
 ;;.01,.1 The Internal Number of the Entry that has been audited.
"RTN","DINIT20",17,0)
 ;;.01,1,0 ^.1
"RTN","DINIT20",18,0)
 ;;.01,1,1,0 1.1^B
"RTN","DINIT20",19,0)
 ;;.01,1,1,1 S ^DIA(DIA,"B",$E(X,1,30),DA)=""
"RTN","DINIT20",20,0)
 ;;.01,1,1,2 K ^DIA(DIA,"B",$E(X,1,30),DA)
"RTN","DINIT20",21,0)
 ;;.02,0 DATE/TIME RECORDED^RD^^0;2^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"RTN","DINIT20",22,0)
 ;;.02,1,0 ^.1
"RTN","DINIT20",23,0)
 ;;.02,1,1,0 1.1^C
"RTN","DINIT20",24,0)
 ;;.02,1,1,1 S ^DIA(DIA,"C",$E(X,1,30),DA)=""
"RTN","DINIT20",25,0)
 ;;.02,1,1,2 K ^DIA(DIA,"C",$E(X,1,30),DA)
"RTN","DINIT20",26,0)
 ;;.03,0 FIELD NUMBER^RF^^0;3^K:$L(X)>10!$L(X)<1) X
"RTN","DINIT20",27,0)
 ;;.03,3 The number of the field that was audited.
"RTN","DINIT20",28,0)
 ;;.04,0 USER^RP200'^VA(200,^0;4^Q
"RTN","DINIT20",29,0)
 ;;.04,1,0 ^.1
"RTN","DINIT20",30,0)
 ;;.04,1,1,0 1.1^D
"RTN","DINIT20",31,0)
 ;;.04,1,1,1 S ^DIA(DIA,"D",$E(X,1,30),DA)=""
"RTN","DINIT20",32,0)
 ;;.04,1,1,2 K ^DIA(DIA,"D",$E(X,1,30),DA)
"RTN","DINIT20",33,0)
 ;;.05,0 RECORD ADDED^S^A:Added Record;^0;5^Q
"RTN","DINIT20",34,0)
 ;;.05,21,0 ^^2^2^2981028^
"RTN","DINIT20",35,0)
 ;;.05,21,1,0 When a new recorded is added to a file (sub-file) and the .01 field is
"RTN","DINIT20",36,0)
 ;;.05,21,2,0 being audited, then this field will be set to an 'A'.
"RTN","DINIT20",37,0)
 ;;.06,0 ACCESSED^S^i:INQUIRED TO ENTRY^0;6
"RTN","DINIT20",38,0)
 ;;.06,3 This field should only have a value if the audit event represents an inquiry that DID NOT CHANGE DATA
"RTN","DINIT20",39,0)
 ;;.06,21,0 ^^2^2
"RTN","DINIT20",40,0)
 ;;.06,21,1,0 This flag (settable by ACCESSED^DIET) is designed to record that a user LOOKED UP the Entry, without necessarily
"RTN","DINIT20",41,0)
 ;;.06,21,2,0 changing it.  Such an audit might be set by the POST-SELECTION ACTION of a File, e.g. for HIPAA.
"RTN","DINIT20",42,0)
 ;;1,0 ENTRY NAME^CJ30^^ ; ^N C,Y S Y=^DIC(DIA,0,"GL"),X=^DIA(DIA,D0,0),Y=$P($G(@(Y_+X_",0)")),U),C=$P($G(^DD(DIA,.01,0)),U,2) D Y^DIQ:C]"" S X=Y
"RTN","DINIT20",43,0)
 ;;1,9 ^
"RTN","DINIT20",44,0)
 ;;1.1,0 FIELD NAME^CJ50X^^ ; ^S Y(1.1,1.1)=$S($D(^DIA(DIA,D0,0)):$P(^(0),U,3),1:""),X="" Q:$P($G(^(0)),U,6)="i"  X ^DD(1.1,1.1,9.2) K Y(1.1) S X=$E(X,1,$L(X)-1)
"RTN","DINIT20",45,0)
 ;;1.1,9 ^
"RTN","DINIT20",46,0)
 ;;1.1,9.2 X ^DD(1.1,1.1,9.3) S X="" F %=1:1:%-1 S X=X_Y(1.1,%)_","
"RTN","DINIT20",47,0)
 ;;1.1,9.3 S X1=DIA F %=1:1 S X=$P(Y(1.1,1.1),",",%) Q:X=""  S Y(1.1,%)=$S($D(^DD(X1,X,0)):$P(^(0),U,1,2),1:"????"),X1=+$P(Y(1.1,%),U,2),Y(1.1,%)=$P(Y(1.1,%),U,1)
"RTN","DINIT20",48,0)
 ;;2,0 OLD VALUE^CJ80^^ ; ^S X=$G(^DIA(DIA,D0,2)) I X="" Q:$P($G(^(0)),U,6)="i"!$D(^(2.14))  S X="<no previous value>"
"RTN","DINIT20",49,0)
 ;;2,9 ^
"RTN","DINIT20",50,0)
 ;;2.1,0 OLD INTERNAL VALUE^F^^2.1;1^K:$L(X)>30 X
"RTN","DINIT20",51,0)
 ;;2.2,0 DATATYPE OF OLD VALUE^S^S:SET;P:POINTER;V:VARIABLE POINTER;^2.1;2^Q
"RTN","DINIT20",52,0)
 ;;2.14,0 OLD W-P TEXT^Cm^^ ; ^X "N I,X F I=0:0 S I=$O(^DIA(DIA,D0,2.14,I)) Q:'I  S X=$G(^(I,0)) X DICMX"
"RTN","DINIT20",53,0)
 ;;2.14,21,0 ^^1^1
"RTN","DINIT20",54,0)
 ;;2.14,21,1,0 Tells what the entire multi-line text field looked like BEFORE it was changed by the audited event.
"RTN","DINIT20",55,0)
 ;;2.9,0 PATIENT^Cp2^^ ; ^N A,% S %=$G(^DIC(DIA,0,"GL")),A=+$G(^DIA(DIA,D0,0)) X ^DD(1.1,2.9,9.2)
"RTN","DINIT20",56,0)
 ;;2.9,9 ^
"RTN","DINIT20",57,0)
 ;;2.9,9.1 N A,% S %=$G(^DIC(DIA,0,"GL")),A=+$G(^DIA(DIA,D0,0)) X ^DD(1.1,2.9,9.2)
"RTN","DINIT20",58,0)
 ;;2.9,9.2 S X="",X=$S(DIA=2:A,DIA=9000001:A,1:"") X ^DD(1.1,2.9,9.3):'X
"RTN","DINIT20",59,0)
 ;;2.9,9.3 N I,GL S I=$S($O(^DD(2,0,"PT",DIA,0)):+$O(^(0)),1:$O(^DD(9000001,0,"PT",DIA,0))) I I S GL=$P($G(^DD(DIA,I,0)),U,4) I GL'="" X ^DD(1.1,2.9,9.5)
"RTN","DINIT20",60,0)
 ;;2.9,9.4 S X=$S(X[";DPT(":+X,X[";AUPNPAT(":+X,1:"")
"RTN","DINIT20",61,0)
 ;;2.9,9.5 S X=$P(GL,";"),X=$S($D(@(%_+A_","""_X_""")")):$P(^(X),U,+$P(GL,";",2)),1:"") X:X[";" ^DD(1.1,2.9,9.4)
"RTN","DINIT20",62,0)
 ;;2.9,21,0 ^^2^2
"RTN","DINIT20",63,0)
 ;;2.9,21,1,0 If the audited File is #2 or #9000001, or if there is a pointer back to either of these Files from the audited File,
"RTN","DINIT20",64,0)
 ;;2.9,21,2,0 then this field shows which particular Patient is involved in the audited data.
"RTN","DINIT20",65,0)
 ;;3,0 NEW VALUE^CJ80^^ ; ^S X=$G(^DIA(DIA,D0,3)) I X="",$G(^(2))]"" S X="<deleted>"
"RTN","DINIT20",66,0)
 ;;3,9 ^
"RTN","DINIT20",67,0)
 ;;3.1,0 NEW INTERNAL VALUE^F^^3.1;1^K:$L(X)>30 X
"RTN","DINIT20",68,0)
 ;;3.2,0 DATATYPE OF NEW VALUE^S^S:SET;P:POINTER;V:VARIABLE POINTER;^3.1;2^Q
"RTN","DINIT20",69,0)
 ;;4.1,0 MENU OPTION USED^P19'^DIC(19,^4.1;1^Q
"RTN","DINIT20",70,0)
 ;;4.1,21,0 ^^2^2^2981021^^
"RTN","DINIT20",71,0)
 ;;4.1,21,1,0 This is the Option that the Kernel menu system used to change the audited
"RTN","DINIT20",72,0)
 ;;4.1,21,2,0 data.
"RTN","DINIT20",73,0)
 ;;4.1,23,0 ^^2^2^2981021^
"RTN","DINIT20",74,0)
 ;;4.1,23,1,0 This field contains the value of +XQY and is a direct pointer to the
"RTN","DINIT20",75,0)
 ;;4.1,23,2,0 OPTION FILE (#19).
"RTN","DINIT20",76,0)
 ;;4.2,0 PROTOCOL or OPTION USED^V^^4.1;2^Q
"RTN","DINIT20",77,0)
 ;;4.2,3 Answer must be 1-63 characters in length.
"RTN","DINIT20",78,0)
 ;;4.2,21,0 ^^2^2^2981021^
"RTN","DINIT20",79,0)
 ;;4.2,21,1,0 This is the Protocol or Option (type Protocol) that was used when the
"RTN","DINIT20",80,0)
 ;;4.2,21,2,0 audit took place.
"RTN","DINIT20",81,0)
 ;;4.2,23,0 ^^3^3^2981021^^
"RTN","DINIT20",82,0)
 ;;4.2,23,1,0 This is a Variable Pointer field whose value is obtained from the local
"RTN","DINIT20",83,0)
 ;;4.2,23,2,0 variable XQORNOD, which is in the form ien;global root.  It can either
"RTN","DINIT20",84,0)
 ;;4.2,23,3,0 point to the Option file or to the Protocol file.
"RTN","DINIT20",85,0)
 ;;4.2,"V",0 ^.12P^2^2
"RTN","DINIT20",86,0)
 ;;4.2,"V",1,0 19^What Option was used?^1^O^^n
"RTN","DINIT20",87,0)
 ;;4.2,"V",2,0 101^What Protocol was used?^2^P^^n
"RTN","DINIT22")
0^1^B85231093^B5025069
"RTN","DINIT22",1,0)
DINIT22 ;SFISC/DPC - DATA TYPE FILE DD ;23NOV2016
"RTN","DINIT22",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT22",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT22",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT22",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT22",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT22",7,0)
 ;
"RTN","DINIT22",8,0)
 K ^DD(.81101,"GL")
"RTN","DINIT22",9,0)
 F I=1:2 S X=$T(Q+I) G ^DINIT221:X="" S Y=$E($T(Q+I+1),5,999),X=$E(X,4,999),@X=Y
"RTN","DINIT22",10,0)
Q Q
"RTN","DINIT22",11,0)
 ;;^DIC(.81,0,"GL")
"RTN","DINIT22",12,0)
 ;;=^DI(.81,
"RTN","DINIT22",13,0)
 ;;^DIC("B","DATA TYPE",.81)
"RTN","DINIT22",14,0)
 ;;=
"RTN","DINIT22",15,0)
 ;;^DIC(.81,"%D",0)
"RTN","DINIT22",16,0)
 ;;=^^2^2^2940908^
"RTN","DINIT22",17,0)
 ;;^DIC(.81,"%D",1,0)
"RTN","DINIT22",18,0)
 ;;=This file stores all of the data types that VA FileMan allows in the
"RTN","DINIT22",19,0)
 ;;^DIC(.81,"%D",2,0)
"RTN","DINIT22",20,0)
 ;;=MODIFY FILE ATTRIBUTES option.
"RTN","DINIT22",21,0)
 ;;^DD(.81,0)
"RTN","DINIT22",22,0)
 ;;=FIELD^^201^9
"RTN","DINIT22",23,0)
 ;;^DD(.81,0,"DDA")
"RTN","DINIT22",24,0)
 ;;=N
"RTN","DINIT22",25,0)
 ;;^DD(.81,0,"IX","B",.81,.01)
"RTN","DINIT22",26,0)
 ;;=
"RTN","DINIT22",27,0)
 ;;^DD(.81,0,"IX","C",.81,1)
"RTN","DINIT22",28,0)
 ;;=
"RTN","DINIT22",29,0)
 ;;^DD(.81,0,"NM","DATA TYPE")
"RTN","DINIT22",30,0)
 ;;=
"RTN","DINIT22",31,0)
 ;;^DD(.81,0,"PT",.4014,15)
"RTN","DINIT22",32,0)
 ;;=
"RTN","DINIT22",33,0)
 ;;^DD(.81,0,"PT",.42,1)
"RTN","DINIT22",34,0)
 ;;=
"RTN","DINIT22",35,0)
 ;;^DD(.81,0,"PT",.86,41)
"RTN","DINIT22",36,0)
 ;;=
"RTN","DINIT22",37,0)
 ;;^DD(.81,.001,0)
"RTN","DINIT22",38,0)
 ;;=NUMBER^NJ16,2^^ ^K:+X'=X!(X>9999999999999.99)!(X<1)!(X?.E1"."3N.N) X
"RTN","DINIT22",39,0)
 ;;^DD(.81,.001,3)
"RTN","DINIT22",40,0)
 ;;=Type a Number between 1 and 9999999999999.99, 2 Decimal Digits
"RTN","DINIT22",41,0)
 ;;^DD(.81,.01,0)
"RTN","DINIT22",42,0)
 ;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"RTN","DINIT22",43,0)
 ;;^DD(.81,.01,1,0)
"RTN","DINIT22",44,0)
 ;;=^.1
"RTN","DINIT22",45,0)
 ;;^DD(.81,.01,1,1,0)
"RTN","DINIT22",46,0)
 ;;=.81^B
"RTN","DINIT22",47,0)
 ;;^DD(.81,.01,1,1,1)
"RTN","DINIT22",48,0)
 ;;=S ^DI(.81,"B",$E(X,1,30),DA)=""
"RTN","DINIT22",49,0)
 ;;^DD(.81,.01,1,1,2)
"RTN","DINIT22",50,0)
 ;;=K ^DI(.81,"B",$E(X,1,30),DA)
"RTN","DINIT22",51,0)
 ;;^DD(.81,.01,3)
"RTN","DINIT22",52,0)
 ;;=NAME MUST BE 3-30 CHARACTERS
"RTN","DINIT22",53,0)
 ;;^DD(.81,.01,"DEL",1,0)
"RTN","DINIT22",54,0)
 ;;=D DELETEQ^DIETLIB
"RTN","DINIT22",55,0)
 ;;^DD(.81,1,0)
"RTN","DINIT22",56,0)
 ;;=INTERNAL REPRESENTATION^F^^0;2^I ",N,F,D,S,P,K,"'[X!($L(X)>1) K X
"RTN","DINIT22",57,0)
 ;;^DD(.81,1,1,0)
"RTN","DINIT22",58,0)
 ;;=^.1
"RTN","DINIT22",59,0)
 ;;^DD(.81,1,1,1,0)
"RTN","DINIT22",60,0)
 ;;=.81^C
"RTN","DINIT22",61,0)
 ;;^DD(.81,1,1,1,1)
"RTN","DINIT22",62,0)
 ;;=S ^DI(.81,"C",$E(X,1,30),DA)=""
"RTN","DINIT22",63,0)
 ;;^DD(.81,1,1,1,2)
"RTN","DINIT22",64,0)
 ;;=K ^DI(.81,"C",$E(X,1,30),DA)
"RTN","DINIT22",65,0)
 ;;^DD(.81,1,3)
"RTN","DINIT22",66,0)
 ;;=MUST BE ONE OF THE BASIC CODES (N,F,D,S,P,K) DENOTING FILEMAN FIELD TYPES
"RTN","DINIT22",67,0)
 ;;^DD(.81,2,0)
"RTN","DINIT22",68,0)
 ;;=STANDARD PROMPT^F^^0;3^K:$L(X)>70!($L(X)<1) X
"RTN","DINIT22",69,0)
 ;;^DD(.81,2,3)
"RTN","DINIT22",70,0)
 ;;=Answer must be 1-70 characters in length.
"RTN","DINIT22",71,0)
 ;;^DD(.81,2,21,0)
"RTN","DINIT22",72,0)
 ;;=^^2^2^2960124^
"RTN","DINIT22",73,0)
 ;;^DD(.81,2,21,1,0)
"RTN","DINIT22",74,0)
 ;;=This is the default prompt used during a Reader (^DIR) call of this
"RTN","DINIT22",75,0)
 ;;^DD(.81,2,21,2,0)
"RTN","DINIT22",76,0)
 ;;=data type, when no prompt is supplied in DIR("A").
"RTN","DINIT22",77,0)
 ;;^DD(.81,3,0)
"RTN","DINIT22",78,0)
 ;;=SORT BY EXTERNAL?^S^0:NO;1:YES;^0;4^Q
"RTN","DINIT22",79,0)
 ;;^DD(.81,3,21,0)
"RTN","DINIT22",80,0)
 ;;=^^2^2^2960806^
"RTN","DINIT22",81,0)
 ;;^DD(.81,3,21,1,0)
"RTN","DINIT22",82,0)
 ;;=Enter 'YES' if, by default, data of this data type should sort by its
"RTN","DINIT22",83,0)
 ;;^DD(.81,3,21,2,0)
"RTN","DINIT22",84,0)
 ;;=external rather than internal form.
"RTN","DINIT22",85,0)
 ;;^DD(.81,11,0)
"RTN","DINIT22",86,0)
 ;;=SHORT DESCRIPTION^F^^11;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT22",87,0)
 ;;^DD(.81,11,3)
"RTN","DINIT22",88,0)
 ;;=Answer must be 1-245 characters in length.
"RTN","DINIT22",89,0)
 ;;^DD(.81,21,0)
"RTN","DINIT22",90,0)
 ;;=DESCRIPTION^.8121^^21;0
"RTN","DINIT22",91,0)
 ;;^DD(.81,41,0)
"RTN","DINIT22",92,0)
 ;;=FIELDS DEFINED BY THIS TYPE^.81215^^41;0
"RTN","DINIT22",93,0)
 ;;^DD(.81,41,9)
"RTN","DINIT22",94,0)
 ;;=^
"RTN","DINIT22",95,0)
 ;;^DD(.81,41,21,0)
"RTN","DINIT22",96,0)
 ;;=^^2^2^
"RTN","DINIT22",97,0)
 ;;^DD(.81,41,21,1,0)
"RTN","DINIT22",98,0)
 ;;=This multiple field list all fields in this database that point to this DATA TYPE.  These are not editable here.
"RTN","DINIT22",99,0)
 ;;^DD(.81,41,21,2,0)
"RTN","DINIT22",100,0)
 ;;=The values are stuffed automatically when a field using this DATA TYPE is created under 'MODIFY FILE ATTRIBUTES'.
"RTN","DINIT22",101,0)
 ;;^DD(.81,101,0)
"RTN","DINIT22",102,0)
 ;;=PROPERTY^.81101P^^101;0
"RTN","DINIT22",103,0)
 ;;^DD(.81,101,21,0)
"RTN","DINIT22",104,0)
 ;;=^^1^1
"RTN","DINIT22",105,0)
 ;;^DD(.81,101,21,1,0)
"RTN","DINIT22",106,0)
 ;;=This multiple lists all the PROPERTIES that specify what this DATA TYPE does.
"RTN","DINIT22",107,0)
 ;;^DD(.81,201,0)
"RTN","DINIT22",108,0)
 ;;=METHOD^.81201P^^201;0
"RTN","DINIT22",109,0)
 ;;^DD(.81,201,21,0)
"RTN","DINIT22",110,0)
 ;;=^^1^1
"RTN","DINIT22",111,0)
 ;;^DD(.81,201,21,1,0)
"RTN","DINIT22",112,0)
 ;;=This multiple lists all the METHODS that specify what this DATA TYPE does.
"RTN","DINIT22",113,0)
 ;;^DD(.81101,0)
"RTN","DINIT22",114,0)
 ;;=PROPERTY SUB-FIELD^^61^8
"RTN","DINIT22",115,0)
 ;;^DD(.81101,0,"IX","AC",.81101,1)
"RTN","DINIT22",116,0)
 ;;=
"RTN","DINIT22",117,0)
 ;;^DD(.81101,0,"IX","B",.81101,.01)
"RTN","DINIT22",118,0)
 ;;=
"RTN","DINIT22",119,0)
 ;;^DD(.81101,0,"NM","PROPERTY")
"RTN","DINIT22",120,0)
 ;;=
"RTN","DINIT22",121,0)
 ;;^DD(.81101,0,"UP")
"RTN","DINIT22",122,0)
 ;;=.81
"RTN","DINIT22",123,0)
 ;;^DD(.81101,.01,0)
"RTN","DINIT22",124,0)
 ;;=PROPERTY^MP.86X^DI(.86,^0;1^S DINUM=X
"RTN","DINIT22",125,0)
 ;;^DD(.81101,.01,1,0)
"RTN","DINIT22",126,0)
 ;;=^.1
"RTN","DINIT22",127,0)
 ;;^DD(.81101,.01,1,1,0)
"RTN","DINIT22",128,0)
 ;;=.81101^B
"RTN","DINIT22",129,0)
 ;;^DD(.81101,.01,1,1,1)
"RTN","DINIT22",130,0)
 ;;=S ^DI(.81,DA(1),101,"B",$E(X,1,30),DA)=""
"RTN","DINIT22",131,0)
 ;;^DD(.81101,.01,1,1,2)
"RTN","DINIT22",132,0)
 ;;=K ^DI(.81,DA(1),101,"B",$E(X,1,30),DA)
"RTN","DINIT22",133,0)
 ;;^DD(.81101,.01,3)
"RTN","DINIT22",134,0)
 ;;=Select a PROPERTY that needs to have a VALUE for this DATA TYPE.
"RTN","DINIT22",135,0)
 ;;^DD(.81101,.01,21,0)
"RTN","DINIT22",136,0)
 ;;=^^2^2
"RTN","DINIT22",137,0)
 ;;^DD(.81101,.01,21,1,0)
"RTN","DINIT22",138,0)
 ;;=Existing PROPERTY names should only be edited with great care.
"RTN","DINIT22",139,0)
 ;;^DD(.81101,.01,21,2,0)
"RTN","DINIT22",140,0)
 ;;=A PROPERTY is a string or number that defines something about the Data Type.
"RTN","DINIT22",141,0)
 ;;^DD(.81101,1,0)
"RTN","DINIT22",142,0)
 ;;=ORDER^NJ4,1^^0;2^K:+X'=X!(X>99.9)!(X<1)!(X?.E1"."2N.N) X
"RTN","DINIT22",143,0)
 ;;^DD(.81101,1,1,0)
"RTN","DINIT22",144,0)
 ;;=^.1
"RTN","DINIT22",145,0)
 ;;^DD(.81101,1,1,1,0)
"RTN","DINIT22",146,0)
 ;;=.81101^AC
"RTN","DINIT22",147,0)
 ;;^DD(.81101,1,1,1,1)
"RTN","DINIT22",148,0)
 ;;=S ^DI(.81,DA(1),101,"AC",$E(X,1,30),DA)=""
"RTN","DINIT22",149,0)
 ;;^DD(.81101,1,1,1,2)
"RTN","DINIT22",150,0)
 ;;=K ^DI(.81,DA(1),101,"AC",$E(X,1,30),DA)
"RTN","DINIT22",151,0)
 ;;^DD(.81101,1,1,1,"%D",0)
"RTN","DINIT22",152,0)
 ;;=^^1^1^
"RTN","DINIT22",153,0)
 ;;^DD(.81101,1,1,1,"%D",1,0)
"RTN","DINIT22",154,0)
 ;;=This cross reference allows sorting PROPERTIES by the ORDER in which they should be presented.
"RTN","DINIT22",155,0)
 ;;^DD(.81101,1,3)
"RTN","DINIT22",156,0)
 ;;=Type a Number between 1 and 99.9, 1 Decimal Digit
"RTN","DINIT22",157,0)
 ;;^DD(.81101,1,21,0)
"RTN","DINIT22",158,0)
 ;;=^^2^2^2951205^
"RTN","DINIT22",159,0)
 ;;^DD(.81101,1,21,1,0)
"RTN","DINIT22",160,0)
 ;;=Enter the relative order in which FileMan should prompt for this property
"RTN","DINIT22",161,0)
 ;;^DD(.81101,1,21,2,0)
"RTN","DINIT22",162,0)
 ;;=at field creation.
"RTN","DINIT22",163,0)
 ;;^DD(.81101,10,0)
"RTN","DINIT22",164,0)
 ;;=PROMPT?^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"RTN","DINIT22",165,0)
 ;;^DD(.81101,10,3)
"RTN","DINIT22",166,0)
 ;;=This is Standard MUMPS code.
"RTN","DINIT22",167,0)
 ;;^DD(.81101,10,9)
"RTN","DINIT22",168,0)
 ;;=@
"RTN","DINIT22",169,0)
 ;;^DD(.81101,10,21,0)
"RTN","DINIT22",170,0)
 ;;=^^3^3^2951205^
"RTN","DINIT22",171,0)
 ;;^DD(.81101,10,21,1,0)
"RTN","DINIT22",172,0)
 ;;=Enter MUMPS code that sets $T.  If $T evaluates to TRUE, then FileMan
"RTN","DINIT22",173,0)
 ;;^DD(.81101,10,21,2,0)
"RTN","DINIT22",174,0)
 ;;=will prompt for this property when a field of this Data Type is created.
"RTN","DINIT22",175,0)
 ;;^DD(.81101,10,21,3,0)
"RTN","DINIT22",176,0)
 ;;=A null value is equivalent to "I 1".
"RTN","DINIT22",177,0)
 ;;^DD(.81101,31,0)
"RTN","DINIT22",178,0)
 ;;=VALUE^F^^31;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT22",179,0)
 ;;^DD(.81101,31,3)
"RTN","DINIT22",180,0)
 ;;=Enter the string that will become the default value for this PROPERTY, 1 to 245 characters.
"RTN","DINIT22",181,0)
 ;;^DD(.81101,31,21,0)
"RTN","DINIT22",182,0)
 ;;=^^3^3
"RTN","DINIT22",183,0)
 ;;^DD(.81101,31,21,1,0)
"RTN","DINIT22",184,0)
 ;;=This value will be inserted into the definition of fields defined by this Data Type Property.
"RTN","DINIT22",185,0)
 ;;^DD(.81101,31,21,2,0)
"RTN","DINIT22",186,0)
 ;;=For a PROPERTY like FIELD LENGTH, the VALUE will be a number.
"RTN","DINIT22",187,0)
 ;;^DD(.81101,31,21,3,0)
"RTN","DINIT22",188,0)
 ;;=For a PROPERTY like SET OF CODES, the VALUE will be a string (like "1:TRUE;0:FALSE")
"RTN","DINIT22",189,0)
 ;;^DD(.81101,33,0)
"RTN","DINIT22",190,0)
 ;;=DEFAULT VALUE PROMPTED^F^^33;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT22",191,0)
 ;;^DD(.81101,33,3)
"RTN","DINIT22",192,0)
 ;;=Enter the string that will show as the expected value (internal form) for this PROPERTY, 1 to 245 characters.
"RTN","DINIT22",193,0)
 ;;^DD(.81101,33,21,0)
"RTN","DINIT22",194,0)
 ;;=^^3^3
"RTN","DINIT22",195,0)
 ;;^DD(.81101,33,21,1,0)
"RTN","DINIT22",196,0)
 ;;=This field should have a value only if, when a new FileMan field is being created (MODIFY FILE ATTRIBUTES),
"RTN","DINIT22",197,0)
 ;;^DD(.81101,33,21,2,0)
"RTN","DINIT22",198,0)
 ;;=the PROPERTY should be prompted with a default.  For example, if a true/false PROPERTY normally takes a 'NO' value,
"RTN","DINIT22",199,0)
 ;;^DD(.81101,33,21,3,0)
"RTN","DINIT22",200,0)
 ;;=then this field has the value '0', which is usually the internal form of 'NO'.
"RTN","DINIT22",201,0)
 ;;^DD(.81201,0)
"RTN","DINIT22",202,0)
 ;;=METHOD SUB-FIELD^^31.1^4
"RTN","DINIT22",203,0)
 ;;^DD(.81201,0,"IX","B",.81201,.01)
"RTN","DINIT22",204,0)
 ;;=
"RTN","DINIT22",205,0)
 ;;^DD(.81201,0,"NM","METHOD")
"RTN","DINIT22",206,0)
 ;;=
"RTN","DINIT22",207,0)
 ;;^DD(.81201,0,"UP")
"RTN","DINIT22",208,0)
 ;;=.81
"RTN","DINIT22",209,0)
 ;;^DD(.81201,.01,0)
"RTN","DINIT22",210,0)
 ;;=METHOD^MP.87X^DI(.87,^0;1^S DINUM=X
"RTN","DINIT22",211,0)
 ;;^DD(.81201,.01,1,0)
"RTN","DINIT22",212,0)
 ;;=^.1
"RTN","DINIT22",213,0)
 ;;^DD(.81201,.01,1,1,0)
"RTN","DINIT22",214,0)
 ;;=.81201^B
"RTN","DINIT22",215,0)
 ;;^DD(.81201,.01,1,1,1)
"RTN","DINIT22",216,0)
 ;;=S ^DI(.81,DA(1),201,"B",$E(X,1,30),DA)=""
"RTN","DINIT22",217,0)
 ;;^DD(.81201,.01,1,1,2)
"RTN","DINIT22",218,0)
 ;;=K ^DI(.81,DA(1),201,"B",$E(X,1,30),DA)
"RTN","DINIT22",219,0)
 ;;^DD(.81201,.01,3)
"RTN","DINIT22",220,0)
 ;;=Select a METHOD that needs to have MUMPS code for this DATA TYPE.
"RTN","DINIT22",221,0)
 ;;^DD(.81201,.01,21,0)
"RTN","DINIT22",222,0)
 ;;=^^1^1
"RTN","DINIT22",223,0)
 ;;^DD(.81201,.01,21,1,0)
"RTN","DINIT22",224,0)
 ;;=This step allows a programmer to change the name of or specify the METHOD.
"RTN","DINIT22",225,0)
 ;;^DD(.81201,31,0)
"RTN","DINIT22",226,0)
 ;;=M CODE^F^^31;E1,245^D ^DIM
"RTN","DINIT22",227,0)
 ;;^DD(.81201,31,3)
"RTN","DINIT22",228,0)
 ;;=Enter MUMPS code that will perform the METHOD
"RTN","DINIT22",229,0)
 ;;^DD(.81201,31,9)
"RTN","DINIT22",230,0)
 ;;=@
"RTN","DINIT22",231,0)
 ;;^DD(.81201,31,21,0)
"RTN","DINIT22",232,0)
 ;;=^^1^1
"RTN","DINIT22",233,0)
 ;;^DD(.81201,31,21,1,0)
"RTN","DINIT22",234,0)
 ;;=Code that will do what the METHOD requires.
"RTN","DINIT22",235,0)
 ;;^DD(.8121,0)
"RTN","DINIT22",236,0)
 ;;=DESCRIPTION SUB-FIELD^^.01^1
"RTN","DINIT22",237,0)
 ;;^DD(.8121,0,"NM","DESCRIPTION")
"RTN","DINIT22",238,0)
 ;;=
"RTN","DINIT22",239,0)
 ;;^DD(.8121,0,"UP")
"RTN","DINIT22",240,0)
 ;;=.81
"RTN","DINIT22",241,0)
 ;;^DD(.8121,.01,0)
"RTN","DINIT22",242,0)
 ;;=DESCRIPTION^W^^0;1^Q
"RTN","DINIT22",243,0)
 ;;^DD(.81215,0)
"RTN","DINIT22",244,0)
 ;;=FIELD DEFINED BY THIS TYPE SUB-FIELD^^.01^1
"RTN","DINIT22",245,0)
 ;;^DD(.81215,0,"NM","FIELD DEFINED BY THIS TYPE")
"RTN","DINIT22",246,0)
 ;;=
"RTN","DINIT22",247,0)
 ;;^DD(.81215,0,"UP")
"RTN","DINIT22",248,0)
 ;;=.81
"RTN","DINIT22",249,0)
 ;;^DD(.81215,.01,0)
"RTN","DINIT22",250,0)
 ;;=FIELD DEFINED BY THIS TYPE^F^^0;1^I X'?1.NP1","1.NP K X
"RTN","DINIT22",251,0)
 ;;^DD(.81215,.01,1,0)
"RTN","DINIT22",252,0)
 ;;=^.1
"RTN","DINIT22",253,0)
 ;;^DD(.81215,.01,1,1,0)
"RTN","DINIT22",254,0)
 ;;=.81^AFDEF
"RTN","DINIT22",255,0)
 ;;^DD(.81215,.01,1,1,1)
"RTN","DINIT22",256,0)
 ;;=S ^DI(.81,"AFDEF",DA(1),$E(X,1,30),DA)=""
"RTN","DINIT22",257,0)
 ;;^DD(.81215,.01,1,1,2)
"RTN","DINIT22",258,0)
 ;;=K ^DI(.81,"AFDEF",DA(1),$E(X,1,30),DA)
"RTN","DINIT22",259,0)
 ;;^DD(.81215,.01,3)
"RTN","DINIT22",260,0)
 ;;=Enter a file number, then comma, then field number, of a field defined by this DATA TYPE
"RTN","DINIT220")
0^25^B42217569^B2043695
"RTN","DINIT220",1,0)
DINIT220 ;SFISC/DPC - LOAD DATA FOR DATA TYPE FILE ;25NOV2016
"RTN","DINIT220",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT220",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT220",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT220",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT220",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT220",7,0)
 ;
"RTN","DINIT220",8,0)
 F I=1:2 S X=$T(ENTRY+I) G:X="" ^DINIT24 S Y=$E($T(ENTRY+I+1),5,999),X=$E(X,4,999),@X=Y
"RTN","DINIT220",9,0)
 Q
"RTN","DINIT220",10,0)
 ;
"RTN","DINIT220",11,0)
POST23 ;POST-INIT FOR EXTENDED-DATA-TYPE PATCH.  SO WE DO NOT HAVE TO BRING ALONG THE DINIT ROUTINE ITSELF
"RTN","DINIT220",12,0)
 D CLEANDEF^DIETLIB
"RTN","DINIT220",13,0)
 D NOASK^DINIT
"RTN","DINIT220",14,0)
 S DIMODE="y" F DIFILE=.81,.81101,.81201,.86,.87 F DIFIELD=0:0 S DIFIELD=$O(^DD(DIFILE,DIFIELD)) Q:'DIFIELD  D ON^DIAUTL
"RTN","DINIT220",15,0)
 ;I $G(^DIC(9.4,13,0))["FILEMAN" S ^("VERSION")="23.0"
"RTN","DINIT220",16,0)
 Q
"RTN","DINIT220",17,0)
 ;
"RTN","DINIT220",18,0)
ENTRY ;
"RTN","DINIT220",19,0)
 ;;^DI(.81,0)
"RTN","DINIT220",20,0)
 ;;=DATA TYPE^.81^
"RTN","DINIT220",21,0)
 ;;^DI(.81,1,0)
"RTN","DINIT220",22,0)
 ;;=DATE/TIME^D
"RTN","DINIT220",23,0)
 ;;^DI(.81,2,0)
"RTN","DINIT220",24,0)
 ;;=NUMERIC^N
"RTN","DINIT220",25,0)
 ;;^DI(.81,3,0)
"RTN","DINIT220",26,0)
 ;;=SET OF CODES^S
"RTN","DINIT220",27,0)
 ;;^DI(.81,1,0)
"RTN","DINIT220",28,0)
 ;;=DATE/TIME^D
"RTN","DINIT220",29,0)
 ;;^DI(.81,2,0)
"RTN","DINIT220",30,0)
 ;;=NUMERIC^N
"RTN","DINIT220",31,0)
 ;;^DI(.81,3,0)
"RTN","DINIT220",32,0)
 ;;=SET OF CODES^S
"RTN","DINIT220",33,0)
 ;;^DI(.81,4,0)
"RTN","DINIT220",34,0)
 ;;=FREE TEXT^F
"RTN","DINIT220",35,0)
 ;;^DI(.81,5,0)
"RTN","DINIT220",36,0)
 ;;=WORD-PROCESSING^W
"RTN","DINIT220",37,0)
 ;;^DI(.81,6,0)
"RTN","DINIT220",38,0)
 ;;=COMPUTED^C
"RTN","DINIT220",39,0)
 ;;^DI(.81,7,0)
"RTN","DINIT220",40,0)
 ;;=POINTER TO A FILE^P
"RTN","DINIT220",41,0)
 ;;^DI(.81,8,0)
"RTN","DINIT220",42,0)
 ;;=VARIABLE-POINTER^V
"RTN","DINIT220",43,0)
 ;;^DI(.81,9,0)
"RTN","DINIT220",44,0)
 ;;=MUMPS^K
"RTN","DINIT220",45,0)
 ;;^DI(.81,99,0)
"RTN","DINIT220",46,0)
 ;;=RESERVED FOR FILEMAN
"RTN","DINIT220",47,0)
 ;;^DI(.87,0)
"RTN","DINIT220",48,0)
 ;;=DATA TYPE METHOD^.87^
"RTN","DINIT220",49,0)
 ;;^DI(.87,1,0)
"RTN","DINIT220",50,0)
 ;;=VALIDATE INTERNAL FORM
"RTN","DINIT220",51,0)
 ;;^DI(.87,2,0)
"RTN","DINIT220",52,0)
 ;;=INPUT TRANSFORM
"RTN","DINIT220",53,0)
 ;;^DI(.87,2,11)
"RTN","DINIT220",54,0)
 ;;=MUMPS CODE THAT TRANSFORMS X TO X, AND KILLS X IF IT IS INVALID
"RTN","DINIT220",55,0)
 ;;^DI(.87,2,21,0)
"RTN","DINIT220",56,0)
 ;;=^.871
"RTN","DINIT220",57,0)
 ;;^DI(.87,2.1,0)
"RTN","DINIT220",58,0)
 ;;=CODE TO SET POINTER SCREEN
"RTN","DINIT220",59,0)
 ;;^DI(.87,2.1,11)
"RTN","DINIT220",60,0)
 ;;=MUMPS CODE THAT SETS DIC("S")
"RTN","DINIT220",61,0)
 ;;^DI(.87,2.1,21,0)
"RTN","DINIT220",62,0)
 ;;=^.871
"RTN","DINIT220",63,0)
 ;;^DI(.87,2.1,41)
"RTN","DINIT220",64,0)
 ;;=1
"RTN","DINIT220",65,0)
 ;;^DI(.87,2.1,42)
"RTN","DINIT220",66,0)
 ;;=FOUr^3:245^D ^DIM
"RTN","DINIT220",67,0)
 ;;^DI(.87,3,0)
"RTN","DINIT220",68,0)
 ;;=OUTPUT TRANSFORM
"RTN","DINIT220",69,0)
 ;;^DI(.87,3,11)
"RTN","DINIT220",70,0)
 ;;=MUMPS CODE THAT TRANSFORMS Y TO Y.
"RTN","DINIT220",71,0)
 ;;^DI(.87,3,21,0)
"RTN","DINIT220",72,0)
 ;;=^.871
"RTN","DINIT220",73,0)
 ;;^DI(.87,3,21,1,0)
"RTN","DINIT220",74,0)
 ;;='Y COMES IN AS THE INTERNAL VALUE OF THE FIELD.  THE TRANSFORMED 'Y' IS THE USUAL EXTERNAL VALUE.
"RTN","DINIT220",75,0)
 ;;^DI(.87,4,0)
"RTN","DINIT220",76,0)
 ;;=XECUTABLE HELP
"RTN","DINIT220",77,0)
 ;;^DI(.87,4,11)
"RTN","DINIT220",78,0)
 ;;=MUMPS CODE THAT DOES A 'WRITE' TO TELL THE USER HOW TO ENTER DATA FOR THE FIELD
"RTN","DINIT220",79,0)
 ;;^DI(.87,4,21,0)
"RTN","DINIT220",80,0)
 ;;=^.871
"RTN","DINIT220",81,0)
 ;;^DI(.87,4,21,1,0)
"RTN","DINIT220",82,0)
 ;;=AT THE TIME THE XECUTABLE HELP IS EXECUTED, D0 IS THE ENTRY NUMBER IN THE FILE
"RTN","DINIT220",83,0)
 ;;^DI(.87,23,0)
"RTN","DINIT220",84,0)
 ;;=TRANSFORM FOR SORT
"RTN","DINIT220",85,0)
 ;;^DI(.87,23,11)
"RTN","DINIT220",86,0)
 ;;=MUMPS CODE THAT TRANSFORMS X TO X.
"RTN","DINIT220",87,0)
 ;;^DI(.87,23,21,0)
"RTN","DINIT220",88,0)
 ;;=^.871
"RTN","DINIT220",89,0)
 ;;^DI(.87,23,21,1,0)
"RTN","DINIT220",90,0)
 ;;=THE TRANSFORMED X IS THE VALUE USED FOR SORTING PURPOSES FOR FIELDS DEFINED WITH THIS METHOD.  'SET X=X' MEANS USE THE INTERNAL VALUE, AS WITH A DATE
"RTN","DINIT220",91,0)
 ;;^DI(.86,0)
"RTN","DINIT220",92,0)
 ;;=DATA TYPE PROPERTY^.86
"RTN","DINIT220",93,0)
 ;;^DI(.86,1,0)
"RTN","DINIT220",94,0)
 ;;=FIELD LENGTH
"RTN","DINIT220",95,0)
 ;;^DI(.86,1,11)
"RTN","DINIT220",96,0)
 ;;=THIS IS THE MAXIMUM LENGTH OF THE EXTERNAL VALUE OF THE FIELD.  E.G., '6' FOR MALE/FEMALE
"RTN","DINIT220",97,0)
 ;;^DI(.86,1,41)
"RTN","DINIT220",98,0)
 ;;=2
"RTN","DINIT220",99,0)
 ;;^DI(.86,1,42)
"RTN","DINIT220",100,0)
 ;;=N^1:999
"RTN","DINIT220",101,0)
 ;;^DI(.86,2,0)
"RTN","DINIT220",102,0)
 ;;=DECIMAL DEFAULT
"RTN","DINIT220",103,0)
 ;;^DI(.86,2,11)
"RTN","DINIT220",104,0)
 ;;=MAXIMUM NUMBER OF DECIMAL DIGITS THAT CAN OCCUR IN THE FIELD
"RTN","DINIT220",105,0)
 ;;^DI(.86,2,41)
"RTN","DINIT220",106,0)
 ;;=2
"RTN","DINIT220",107,0)
 ;;^DI(.86,2,42)
"RTN","DINIT220",108,0)
 ;;=N^1:3
"RTN","DINIT220",109,0)
 ;;^DI(.86,3,0)
"RTN","DINIT220",110,0)
 ;;=INTERNAL LENGTH
"RTN","DINIT220",111,0)
 ;;^DI(.86,3,11)
"RTN","DINIT220",112,0)
 ;;=THIS IS THE MAXIMUM LENGTH OF THE INTERNAL VALUE OF THE FIELD.  E.G., '1' FOR M/F
"RTN","DINIT220",113,0)
 ;;^DI(.86,3,41)
"RTN","DINIT220",114,0)
 ;;=2
"RTN","DINIT220",115,0)
 ;;^DI(.86,3,42)
"RTN","DINIT220",116,0)
 ;;=N^1:999 
"RTN","DINIT220",117,0)
 ;;^DI(.86,4,0)
"RTN","DINIT220",118,0)
 ;;=POINTER
"RTN","DINIT220",119,0)
 ;;^DI(.86,4,11)
"RTN","DINIT220",120,0)
 ;;=A File number or an open global reference without the "^" (e.g., "DPT(")
"RTN","DINIT220",121,0)
 ;;^DI(.86,4,41)
"RTN","DINIT220",122,0)
 ;;=4
"RTN","DINIT220",123,0)
 ;;^DI(.86,4,42)
"RTN","DINIT220",124,0)
 ;;=F^1:30^S:X X=$P($G(^DIC(X,0,"GL")),U,2),Y=X K:X'["("!("(,"'[$E(X,$L(X))) X I $D(X),$D(@("^"_X_"0)")) W "  (",$P(^(0),U),")"
"RTN","DINIT220",125,0)
 ;;^DI(.86,5,0)
"RTN","DINIT220",126,0)
 ;;=SET OF CODES
"RTN","DINIT220",127,0)
 ;;^DI(.86,5,41)
"RTN","DINIT220",128,0)
 ;;=4
"RTN","DINIT220",129,0)
 ;;^DI(.86,5,42)
"RTN","DINIT220",130,0)
 ;;=FU^5:245^I $L(X,";")<2!($L(X,";")-$L(X,":")) K X
"RTN","DINIT220",131,0)
 ;;^DI(.86,1.1,0)
"RTN","DINIT220",132,0)
 ;;=LEFT SIDE MINIMUM
"RTN","DINIT220",133,0)
 ;;^DI(.86,1.1,11)
"RTN","DINIT220",134,0)
 ;;=LOWEST NUMERIC VALUE OF LEFT SIDE
"RTN","DINIT220",135,0)
 ;;^DI(.86,1.1,41)
"RTN","DINIT220",136,0)
 ;;=2
"RTN","DINIT220",137,0)
 ;;^DI(.86,1.1,42)
"RTN","DINIT220",138,0)
 ;;=N^0:9999
"RTN","DINIT220",139,0)
 ;;^DI(.86,1.2,0)
"RTN","DINIT220",140,0)
 ;;=LEFT SIDE MAXIMUM
"RTN","DINIT220",141,0)
 ;;^DI(.86,1.2,11)
"RTN","DINIT220",142,0)
 ;;=HIGHEST NUMERIC VALUE OF LEFT SIDE
"RTN","DINIT220",143,0)
 ;;^DI(.86,1.2,41)
"RTN","DINIT220",144,0)
 ;;=2
"RTN","DINIT220",145,0)
 ;;^DI(.86,1.2,42)
"RTN","DINIT220",146,0)
 ;;=N^1:99999
"RTN","DINIT220",147,0)
 ;;^DI(.86,1.3,0)
"RTN","DINIT220",148,0)
 ;;=RIGHT SIDE MINIMUM
"RTN","DINIT220",149,0)
 ;;^DI(.86,1.3,11)
"RTN","DINIT220",150,0)
 ;;=LOWEST NUMERIC VALUE OF RIGHT SIDE
"RTN","DINIT220",151,0)
 ;;^DI(.86,1.3,41)
"RTN","DINIT220",152,0)
 ;;=2
"RTN","DINIT220",153,0)
 ;;^DI(.86,1.3,42)
"RTN","DINIT220",154,0)
 ;;=N^1:9999
"RTN","DINIT220",155,0)
 ;;^DI(.86,1.4,0)
"RTN","DINIT220",156,0)
 ;;=RIGHT SIDE MAXIMUM
"RTN","DINIT220",157,0)
 ;;^DI(.86,1.4,11)
"RTN","DINIT220",158,0)
 ;;=HIGHEST NUMERIC VALUE OF RIGHT SIDE
"RTN","DINIT220",159,0)
 ;;^DI(.86,1.4,41)
"RTN","DINIT220",160,0)
 ;;=2
"RTN","DINIT220",161,0)
 ;;^DI(.86,1.4,42)
"RTN","DINIT220",162,0)
 ;;=N^1:99999
"RTN","DINIT220",163,0)
 ;;^DI(.86,4.1,0)
"RTN","DINIT220",164,0)
 ;;=LAYGO
"RTN","DINIT220",165,0)
 ;;^DI(.86,4.1,11)
"RTN","DINIT220",166,0)
 ;;='YES' IF ADDING A NEW ENTRY TO THE POINTED-TO FILE IS PERMITTED
"RTN","DINIT220",167,0)
 ;;^DI(.86,4.1,41)
"RTN","DINIT220",168,0)
 ;;=3
"RTN","DINIT220",169,0)
 ;;^DI(.86,4.1,42)
"RTN","DINIT220",170,0)
 ;;=SOB^1:YES;0:NO
"RTN","DINIT220",171,0)
 ;;^DI(.86,7.1,0)
"RTN","DINIT220",172,0)
 ;;=PARAMETERS ALLOWED
"RTN","DINIT220",173,0)
 ;;^DI(.86,7.1,11)
"RTN","DINIT220",174,0)
 ;;='YES' if a label reference is allowed to include parameters in parentheses following the tag
"RTN","DINIT220",175,0)
 ;;^DI(.86,7.1,41)
"RTN","DINIT220",176,0)
 ;;=3
"RTN","DINIT220",177,0)
 ;;^DI(.86,7.1,42)
"RTN","DINIT220",178,0)
 ;;=SOB^1:YES;0:NO
"RTN","DINIT220",179,0)
 ;;^DI(.86,6.1,0)
"RTN","DINIT220",180,0)
 ;;=SECONDS ALLOWED
"RTN","DINIT220",181,0)
 ;;^DI(.86,6.1,11)
"RTN","DINIT220",182,0)
 ;;='YES' if a time value may be entered including SECONDS (e.g., '10:33:45')
"RTN","DINIT220",183,0)
 ;;^DI(.86,6.1,41)
"RTN","DINIT220",184,0)
 ;;=3
"RTN","DINIT220",185,0)
 ;;^DI(.86,6.1,42)
"RTN","DINIT220",186,0)
 ;;=SOB^1:YES;0:NO 
"RTN","DINIT220",187,0)
 ;;^DI(.86,6.2,0)
"RTN","DINIT220",188,0)
 ;;=EARLIEST DATE
"RTN","DINIT220",189,0)
 ;;^DI(.86,6.2,11)
"RTN","DINIT220",190,0)
 ;;=A date value representing the lowest possible value to be entered (e.g. '1/1/1841')
"RTN","DINIT220",191,0)
 ;;^DI(.86,6.2,41)
"RTN","DINIT220",192,0)
 ;;=1
"RTN","DINIT220",193,0)
 ;;^DI(.86,6.2,42)
"RTN","DINIT220",194,0)
 ;;=DO^
"RTN","DINIT220",195,0)
 ;;^DI(.86,6.3,0)
"RTN","DINIT220",196,0)
 ;;=TIME REQUIRED
"RTN","DINIT220",197,0)
 ;;^DI(.86,6.3,11)
"RTN","DINIT220",198,0)
 ;;='YES' if a time value must be entered
"RTN","DINIT220",199,0)
 ;;^DI(.86,6.3,41)
"RTN","DINIT220",200,0)
 ;;=3
"RTN","DINIT220",201,0)
 ;;^DI(.86,6.3,42)
"RTN","DINIT220",202,0)
 ;;=SOB^1:YES;0:NO
"RTN","DINIT220",203,0)
 ;;^DI(.86,6.4,0)
"RTN","DINIT220",204,0)
 ;;=IMPRECISE DATE
"RTN","DINIT220",205,0)
 ;;^DI(.86,6.4,11)
"RTN","DINIT220",206,0)
 ;;='YES' if the date being entered does NOT require a day of the month
"RTN","DINIT220",207,0)
 ;;^DI(.86,6.4,41)
"RTN","DINIT220",208,0)
 ;;=3
"RTN","DINIT220",209,0)
 ;;^DI(.86,6.4,42)
"RTN","DINIT220",210,0)
 ;;=SOB^1:YES;0:NO
"RTN","DINIT220",211,0)
 ;;^DI(.86,6.5,0)
"RTN","DINIT220",212,0)
 ;;=TIME OF DAY
"RTN","DINIT220",213,0)
 ;;^DI(.86,6.5,11)
"RTN","DINIT220",214,0)
 ;;='YES' if a time value MAY be entered along with the date
"RTN","DINIT220",215,0)
 ;;^DI(.86,6.5,41)
"RTN","DINIT220",216,0)
 ;;=3
"RTN","DINIT220",217,0)
 ;;^DI(.86,6.5,42)
"RTN","DINIT220",218,0)
 ;;=SOB^1:YES;0:NO
"RTN","DINIT221")
0^2^B30934674^n/a
"RTN","DINIT221",1,0)
DINIT221 ;SFISC/DPC - 'DATA TYPE PROPERTY' AND 'DATA TYPE METHOD' FILE DDs ;10MAR2016
"RTN","DINIT221",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT221",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT221",4,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT221",5,0)
 ;
"RTN","DINIT221",6,0)
 F I=1:2 S X=$T(Q+I) G ^DINIT220:X="" S Y=$E($T(Q+I+1),5,999),X=$E(X,4,999),@X=Y
"RTN","DINIT221",7,0)
Q Q
"RTN","DINIT221",8,0)
 ;;^DIC(.86,0,"GL")
"RTN","DINIT221",9,0)
 ;;=^DI(.86,
"RTN","DINIT221",10,0)
 ;;^DIC("B","DATA TYPE PROPERTY",.86)
"RTN","DINIT221",11,0)
 ;;=
"RTN","DINIT221",12,0)
 ;;^DIC(.86,"%D",0)
"RTN","DINIT221",13,0)
 ;;=^^1^1^
"RTN","DINIT221",14,0)
 ;;^DIC(.86,"%D",1,0)
"RTN","DINIT221",15,0)
 ;;=This file stores the names of different kinds of STRINGS that describe data.
"RTN","DINIT221",16,0)
 ;;^DD(.86,0)
"RTN","DINIT221",17,0)
 ;;=FIELD^^51^12
"RTN","DINIT221",18,0)
 ;;^DD(.86,0,"DDA")
"RTN","DINIT221",19,0)
 ;;=N
"RTN","DINIT221",20,0)
 ;;^DD(.86,0,"ID",1)
"RTN","DINIT221",21,0)
 ;;=W "   ",$P(^(0),U,2)
"RTN","DINIT221",22,0)
 ;;^DD(.86,0,"IX","B",.86,.01)
"RTN","DINIT221",23,0)
 ;;=
"RTN","DINIT221",24,0)
 ;;^DD(.86,0,"IX","C",.86,1)
"RTN","DINIT221",25,0)
 ;;=
"RTN","DINIT221",26,0)
 ;;^DD(.86,0,"NM","DATA TYPE PROPERTY")
"RTN","DINIT221",27,0)
 ;;=
"RTN","DINIT221",28,0)
 ;;^DD(.86,0,"PT",.81101,.01)
"RTN","DINIT221",29,0)
 ;;=
"RTN","DINIT221",30,0)
 ;;^DD(.86,.001,0)
"RTN","DINIT221",31,0)
 ;;=NUMBER^NJ16,2^^ ^K:+X'=X!(X>9999999999999.99)!(X<1)!(X?.E1"."3N.N) X
"RTN","DINIT221",32,0)
 ;;^DD(.86,.001,3)
"RTN","DINIT221",33,0)
 ;;=Type a Number between 1 and 9999999999999.99, 2 Decimal Digits
"RTN","DINIT221",34,0)
 ;;^DD(.86,.001,21,0)
"RTN","DINIT221",35,0)
 ;;=^^1^1^^
"RTN","DINIT221",36,0)
 ;;^DD(.86,.001,21,1,0)
"RTN","DINIT221",37,0)
 ;;=This NUMBER should be number-spaced to your institution, if you create a new one.
"RTN","DINIT221",38,0)
 ;;^DD(.86,.01,0)
"RTN","DINIT221",39,0)
 ;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"RTN","DINIT221",40,0)
 ;;^DD(.86,.01,1,0)
"RTN","DINIT221",41,0)
 ;;=^.1
"RTN","DINIT221",42,0)
 ;;^DD(.86,.01,1,1,0)
"RTN","DINIT221",43,0)
 ;;=.86^B
"RTN","DINIT221",44,0)
 ;;^DD(.86,.01,1,1,1)
"RTN","DINIT221",45,0)
 ;;=S ^DI(.86,"B",$E(X,1,30),DA)=""
"RTN","DINIT221",46,0)
 ;;^DD(.86,.01,1,1,2)
"RTN","DINIT221",47,0)
 ;;=K ^DI(.86,"B",$E(X,1,30),DA)
"RTN","DINIT221",48,0)
 ;;^DD(.86,.01,3)
"RTN","DINIT221",49,0)
 ;;=Enter 3-30 characters, a unique name for the PROPERTY.
"RTN","DINIT221",50,0)
 ;;^DD(.86,.01,21,0)
"RTN","DINIT221",51,0)
 ;;=^^1^1^^
"RTN","DINIT221",52,0)
 ;;^DD(.86,.01,21,1,0)
"RTN","DINIT221",53,0)
 ;;=This NAME will appear in a list of PROPERTIES  (e.g., "FIELD LENGTH")
"RTN","DINIT221",54,0)
 ;;^DD(.86,1,0)
"RTN","DINIT221",55,0)
 ;;=ABBREVIATION^FIX^^0;2^K:$L(X)>10!($L(X)<2)!(X=+$P(X,"E")) X
"RTN","DINIT221",56,0)
 ;;^DD(.86,1,1,0)
"RTN","DINIT221",57,0)
 ;;=^.1
"RTN","DINIT221",58,0)
 ;;^DD(.86,1,1,1,0)
"RTN","DINIT221",59,0)
 ;;=.86^C
"RTN","DINIT221",60,0)
 ;;^DD(.86,1,1,1,1)
"RTN","DINIT221",61,0)
 ;;=S ^DI(.86,"C",$E(X,1,30),DA)=""
"RTN","DINIT221",62,0)
 ;;^DD(.86,1,1,1,2)
"RTN","DINIT221",63,0)
 ;;=K ^DI(.86,"C",$E(X,1,30),DA)
"RTN","DINIT221",64,0)
 ;;^DD(.86,1,1,1,"%D",0)
"RTN","DINIT221",65,0)
 ;;=^^1^1^
"RTN","DINIT221",66,0)
 ;;^DD(.86,1,1,1,"%D",1,0)
"RTN","DINIT221",67,0)
 ;;=This cross reference allows looking up a METHOD by its short ABBREVIATION, if there is one.
"RTN","DINIT221",68,0)
 ;;^DD(.86,1,3)
"RTN","DINIT221",69,0)
 ;;=Answer must be 2-10 characters in length.
"RTN","DINIT221",70,0)
 ;;^DD(.86,1,21,1,0)
"RTN","DINIT221",71,0)
 ;;=Enter an abbreviation for this property.  
"RTN","DINIT221",72,0)
 ;;^DD(.86,11,0)
"RTN","DINIT221",73,0)
 ;;=SHORT DESCRIPTION^F^^11;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT221",74,0)
 ;;^DD(.86,11,3)
"RTN","DINIT221",75,0)
 ;;=Answer must be 1-245 characters in length.
"RTN","DINIT221",76,0)
 ;;^DD(.86,11,21,0)
"RTN","DINIT221",77,0)
 ;;=^^1^1^^
"RTN","DINIT221",78,0)
 ;;^DD(.86,11,21,1,0)
"RTN","DINIT221",79,0)
 ;;=This should tell briefly what the PROPERTY is used for.
"RTN","DINIT221",80,0)
 ;;^DD(.86,21,0)
"RTN","DINIT221",81,0)
 ;;=DESCRIPTION^.861^^21;0
"RTN","DINIT221",82,0)
 ;;^DD(.86,41,0)
"RTN","DINIT221",83,0)
 ;;=DATA TYPE^P.81'^DI(.81,^41;1^Q
"RTN","DINIT221",84,0)
 ;;^DD(.86,41,3)
"RTN","DINIT221",85,0)
 ;;=Enter the data type (numeric or free-text, usually) of this PROPERTY.
"RTN","DINIT221",86,0)
 ;;^DD(.86,41,21,0)
"RTN","DINIT221",87,0)
 ;;=^^1^1^
"RTN","DINIT221",88,0)
 ;;^DD(.86,41,21,1,0)
"RTN","DINIT221",89,0)
 ;;=This should tell the attribute of the PROPERTY.
"RTN","DINIT221",90,0)
 ;;^DD(.86,42,0)
"RTN","DINIT221",91,0)
 ;;=DIR(0)^F^^42;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT221",92,0)
 ;;^DD(.86,42,3)
"RTN","DINIT221",93,0)
 ;;=Answer must be 1-245 characters in length.
"RTN","DINIT221",94,0)
 ;;^DD(.86,42,21,0)
"RTN","DINIT221",95,0)
 ;;=^^1^1^2951214^
"RTN","DINIT221",96,0)
 ;;^DD(.86,42,21,1,0)
"RTN","DINIT221",97,0)
 ;;=Enter the string that goes into DIR(0) for a ^DIR call.
"RTN","DINIT221",98,0)
 ;;^DD(.861,0)
"RTN","DINIT221",99,0)
 ;;=DESCRIPTION SUB-FIELD^^.01^1
"RTN","DINIT221",100,0)
 ;;^DD(.861,0,"NM","DESCRIPTION")
"RTN","DINIT221",101,0)
 ;;=
"RTN","DINIT221",102,0)
 ;;^DD(.861,0,"UP")
"RTN","DINIT221",103,0)
 ;;=.86
"RTN","DINIT221",104,0)
 ;;^DD(.861,.01,0)
"RTN","DINIT221",105,0)
 ;;=DESCRIPTION^W^^0;1^Q
"RTN","DINIT221",106,0)
 ;;^DIC(.87,0,"GL")
"RTN","DINIT221",107,0)
 ;;=^DI(.87,
"RTN","DINIT221",108,0)
 ;;^DIC("B","DATA TYPE METHOD",.87)
"RTN","DINIT221",109,0)
 ;;=
"RTN","DINIT221",110,0)
 ;;^DIC(.87,"%D",0)
"RTN","DINIT221",111,0)
 ;;=^^1^1
"RTN","DINIT221",112,0)
 ;;^DIC(.87,"%D",1,0)
"RTN","DINIT221",113,0)
 ;;=This file stores the names of different kinds of lines of MUMPS code that are used in the definitions of DATA TYPES
"RTN","DINIT221",114,0)
 ;;^DD(.87,0)
"RTN","DINIT221",115,0)
 ;;=FIELD^^.001^4
"RTN","DINIT221",116,0)
 ;;^DD(.87,0,"IX","B",.87,.01)
"RTN","DINIT221",117,0)
 ;;=
"RTN","DINIT221",118,0)
 ;;^DD(.87,0,"NM","DATA TYPE METHOD")
"RTN","DINIT221",119,0)
 ;;=
"RTN","DINIT221",120,0)
 ;;^DD(.87,0,"PT",.81201,.01)
"RTN","DINIT221",121,0)
 ;;=
"RTN","DINIT221",122,0)
 ;;^DD(.87,.001,0)
"RTN","DINIT221",123,0)
 ;;=NUMBER^NJ16,2^^ ^K:+X'=X!(X>9999999999999.99)!(X<1)!(X?.E1"."3N.N) X
"RTN","DINIT221",124,0)
 ;;^DD(.87,.001,3)
"RTN","DINIT221",125,0)
 ;;=Type a Number between 1 and 9999999999999.99, 2 Decimal Digits
"RTN","DINIT221",126,0)
 ;;^DD(.87,.001,21,0)
"RTN","DINIT221",127,0)
 ;;=^^1^1^^
"RTN","DINIT221",128,0)
 ;;^DD(.87,.001,21,1,0)
"RTN","DINIT221",129,0)
 ;;=This NUMBER should be number-spaced to your institution, if you create a new one.
"RTN","DINIT221",130,0)
 ;;^DD(.87,.01,0)
"RTN","DINIT221",131,0)
 ;;=NAME^RF^^0;1^K:$L(X)>50!($L(X)<3)!'(X'?1P.E) X
"RTN","DINIT221",132,0)
 ;;^DD(.87,.01,1,0)
"RTN","DINIT221",133,0)
 ;;=^.1
"RTN","DINIT221",134,0)
 ;;^DD(.87,.01,1,1,0)
"RTN","DINIT221",135,0)
 ;;=.87^B
"RTN","DINIT221",136,0)
 ;;^DD(.87,.01,1,1,1)
"RTN","DINIT221",137,0)
 ;;=S ^DI(.87,"B",$E(X,1,30),DA)=""
"RTN","DINIT221",138,0)
 ;;^DD(.87,.01,1,1,2)
"RTN","DINIT221",139,0)
 ;;=K ^DI(.87,"B",$E(X,1,30),DA)
"RTN","DINIT221",140,0)
 ;;^DD(.87,.01,3)
"RTN","DINIT221",141,0)
 ;;=Answer with a NAME 3-50 characters in length.
"RTN","DINIT221",142,0)
 ;;^DD(.87,.01,21,0)
"RTN","DINIT221",143,0)
 ;;=^^1^1^^
"RTN","DINIT221",144,0)
 ;;^DD(.87,.01,21,1,0)
"RTN","DINIT221",145,0)
 ;;=This NAME will appear in a list of METHODs  (e.g., "INPUT TRANSFORM")
"RTN","DINIT221",146,0)
 ;;^DD(.87,11,0)
"RTN","DINIT221",147,0)
 ;;=SHORT DESCRIPTION^F^^11;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT221",148,0)
 ;;^DD(.87,11,3)
"RTN","DINIT221",149,0)
 ;;=Answer must be 1-245 characters in length.
"RTN","DINIT221",150,0)
 ;;^DD(.87,11,21,0)
"RTN","DINIT221",151,0)
 ;;=^^1^1^^
"RTN","DINIT221",152,0)
 ;;^DD(.87,11,21,1,0)
"RTN","DINIT221",153,0)
 ;;=This should tell briefly what the METHOD is used for.
"RTN","DINIT221",154,0)
 ;;^DD(.87,21,0)
"RTN","DINIT221",155,0)
 ;;=DESCRIPTION^.871^^21;0
"RTN","DINIT221",156,0)
 ;;^DD(.871,0)
"RTN","DINIT221",157,0)
 ;;=DESCRIPTION SUB-FIELD^^.01^1
"RTN","DINIT221",158,0)
 ;;^DD(.871,0,"NM","DESCRIPTION")
"RTN","DINIT221",159,0)
 ;;=
"RTN","DINIT221",160,0)
 ;;^DD(.871,0,"UP")
"RTN","DINIT221",161,0)
 ;;=.87
"RTN","DINIT221",162,0)
 ;;^DD(.871,.01,0)
"RTN","DINIT221",163,0)
 ;;=DESCRIPTION^W^^0;1^Q
"RTN","DINIT295")
0^44^B60779583^B61001773
"RTN","DINIT295",1,0)
DINIT295 ;SFISC/MKO - FORM AND BLOCK FILES ;2NOV2015
"RTN","DINIT295",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT295",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT295",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT295",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT295",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT295",7,0)
 ;
"RTN","DINIT295",8,0)
 ;
"RTN","DINIT295",9,0)
 ;
"RTN","DINIT295",10,0)
 ;
"RTN","DINIT295",11,0)
 ;
"RTN","DINIT295",12,0)
 F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) S @X=Y
"RTN","DINIT295",13,0)
 G ^DINIT296
"RTN","DINIT295",14,0)
Q Q
"RTN","DINIT295",15,0)
 ;;^DIC(.404,0,"GL")
"RTN","DINIT295",16,0)
 ;;=^DIST(.404,
"RTN","DINIT295",17,0)
 ;;^DIC("B","BLOCK",.404)
"RTN","DINIT295",18,0)
 ;;=
"RTN","DINIT295",19,0)
 ;;^DIC(.404,"%D",0)
"RTN","DINIT295",20,0)
 ;;=^^2^2^2940914^
"RTN","DINIT295",21,0)
 ;;^DIC(.404,"%D",1,0)
"RTN","DINIT295",22,0)
 ;;=This file stores ScreenMan blocks, which are used to build forms in the
"RTN","DINIT295",23,0)
 ;;^DIC(.404,"%D",2,0)
"RTN","DINIT295",24,0)
 ;;=Form file.
"RTN","DINIT295",25,0)
 ;;^DD(.404,0)
"RTN","DINIT295",26,0)
 ;;=FIELD^^40^7
"RTN","DINIT295",27,0)
 ;;^DD(.404,0,"DT")
"RTN","DINIT295",28,0)
 ;;=2940625
"RTN","DINIT295",29,0)
 ;;^DD(.404,0,"IX","B",.404,.01)
"RTN","DINIT295",30,0)
 ;;=
"RTN","DINIT295",31,0)
 ;;^DD(.404,0,"NM","BLOCK")
"RTN","DINIT295",32,0)
 ;;=
"RTN","DINIT295",33,0)
 ;;^DD(.404,0,"PT",.4031,1)
"RTN","DINIT295",34,0)
 ;;=
"RTN","DINIT295",35,0)
 ;;^DD(.404,0,"PT",.4032,.01)
"RTN","DINIT295",36,0)
 ;;=
"RTN","DINIT295",37,0)
 ;;^DD(.404,.01,0)
"RTN","DINIT295",38,0)
 ;;=NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!(X?1P.E)!(X=+$P(X,"E")) X I $D(X),$S($D(DDS)&$G(DA):$P($G(^DIST(.404,DA,0)),U)'=X,1:1),$D(^DIST(.404,"B",X)) K X
"RTN","DINIT295",39,0)
 ;;^DD(.404,.01,1,0)
"RTN","DINIT295",40,0)
 ;;=^.1
"RTN","DINIT295",41,0)
 ;;^DD(.404,.01,1,1,0)
"RTN","DINIT295",42,0)
 ;;=.404^B
"RTN","DINIT295",43,0)
 ;;^DD(.404,.01,1,1,1)
"RTN","DINIT295",44,0)
 ;;=S ^DIST(.404,"B",$E(X,1,30),DA)=""
"RTN","DINIT295",45,0)
 ;;^DD(.404,.01,1,1,2)
"RTN","DINIT295",46,0)
 ;;=K ^DIST(.404,"B",$E(X,1,30),DA)
"RTN","DINIT295",47,0)
 ;;^DD(.404,.01,1,1,"DT")
"RTN","DINIT295",48,0)
 ;;=2900912
"RTN","DINIT295",49,0)
 ;;^DD(.404,.01,3)
"RTN","DINIT295",50,0)
 ;;=Answer must be 3-30 characters in length.
"RTN","DINIT295",51,0)
 ;;^DD(.404,.01,21,0)
"RTN","DINIT295",52,0)
 ;;=^^2^2^2940907^^
"RTN","DINIT295",53,0)
 ;;^DD(.404,.01,21,1,0)
"RTN","DINIT295",54,0)
 ;;=Enter the name of the block, 3-30 characters in length.  The block name
"RTN","DINIT295",55,0)
 ;;^DD(.404,.01,21,2,0)
"RTN","DINIT295",56,0)
 ;;=must be unique and cannot be numeric or start with punctuation.
"RTN","DINIT295",57,0)
 ;;^DD(.404,.01,"DEL",1,0)
"RTN","DINIT295",58,0)
 ;;=I '$D(DDSDEL) D EN^DDIOL($C(7)_"You must use the FileMan options to delete blocks.") I 1
"RTN","DINIT295",59,0)
 ;;^DD(.404,.01,"DT")
"RTN","DINIT295",60,0)
 ;;=2931020
"RTN","DINIT295",61,0)
 ;;^DD(.404,1,0)
"RTN","DINIT295",62,0)
 ;;=DATA DICTIONARY NUMBER^FX^^0;2^K:X'=+$P(X,"E")!(X<2)!($L(X)>16)!'$D(^DD(X))&(X'?1".81".N) X
"RTN","DINIT295",63,0)
 ;;^DD(.404,1,3)
"RTN","DINIT295",64,0)
 ;;=Answer must be 1-16 characters in length.
"RTN","DINIT295",65,0)
 ;;^DD(.404,1,21,0)
"RTN","DINIT295",66,0)
 ;;=^^3^3^2940907^
"RTN","DINIT295",67,0)
 ;;^DD(.404,1,21,1,0)
"RTN","DINIT295",68,0)
 ;;=Enter the data dictionary number of the file or subfile that contains the
"RTN","DINIT295",69,0)
 ;;^DD(.404,1,21,2,0)
"RTN","DINIT295",70,0)
 ;;=fields that are placed on this block.  A block can contain fields from
"RTN","DINIT295",71,0)
 ;;^DD(.404,1,21,3,0)
"RTN","DINIT295",72,0)
 ;;=only one file or subfile.
"RTN","DINIT295",73,0)
 ;;^DD(.404,1,"DT")
"RTN","DINIT295",74,0)
 ;;=3151102
"RTN","DINIT295",75,0)
 ;;^DD(.404,2,0)
"RTN","DINIT295",76,0)
 ;;=DISABLE NAVIGATION^S^0:NO;1:YES;2:OUTOK;^0;3^Q
"RTN","DINIT295",77,0)
 ;;^DD(.404,2,3)
"RTN","DINIT295",78,0)
 ;;=
"RTN","DINIT295",79,0)
 ;;^DD(.404,2,21,0)
"RTN","DINIT295",80,0)
 ;;=^^8^8^2940907^^
"RTN","DINIT295",81,0)
 ;;^DD(.404,2,21,1,0)
"RTN","DINIT295",82,0)
 ;;=Enter 'YES' if navigation within the block should be disabled.  When
"RTN","DINIT295",83,0)
 ;;^DD(.404,2,21,2,0)
"RTN","DINIT295",84,0)
 ;;=navigation is disabled, user cannot ^-jump to other fields, they cannot
"RTN","DINIT295",85,0)
 ;;^DD(.404,2,21,3,0)
"RTN","DINIT295",86,0)
 ;;=^-jump to the Command Line, and the <Up>, <Down>, <Tab>, and <F4> keys
"RTN","DINIT295",87,0)
 ;;^DD(.404,2,21,4,0)
"RTN","DINIT295",88,0)
 ;;=traverse the fields in the same order as the <RET> key -- that is, in the
"RTN","DINIT295",89,0)
 ;;^DD(.404,2,21,5,0)
"RTN","DINIT295",90,0)
 ;;=order established by the Field Order property of the fields.
"RTN","DINIT295",91,0)
 ;;^DD(.404,2,21,6,0)
"RTN","DINIT295",92,0)
 ;;= 
"RTN","DINIT295",93,0)
 ;;^DD(.404,2,21,7,0)
"RTN","DINIT295",94,0)
 ;;=Enter 'OUTOK' to disable navigation, but allow the user to ^-jump to the
"RTN","DINIT295",95,0)
 ;;^DD(.404,2,21,8,0)
"RTN","DINIT295",96,0)
 ;;=Command Line.
"RTN","DINIT295",97,0)
 ;;^DD(.404,11,0)
"RTN","DINIT295",98,0)
 ;;=PRE ACTION^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"RTN","DINIT295",99,0)
 ;;^DD(.404,11,3)
"RTN","DINIT295",100,0)
 ;;=Enter standard MUMPS code that will be executed when the user navigates to the block.
"RTN","DINIT295",101,0)
 ;;^DD(.404,11,9)
"RTN","DINIT295",102,0)
 ;;=@
"RTN","DINIT295",103,0)
 ;;^DD(.404,11,21,0)
"RTN","DINIT295",104,0)
 ;;=^^6^6^2940907^^
"RTN","DINIT295",105,0)
 ;;^DD(.404,11,21,1,0)
"RTN","DINIT295",106,0)
 ;;=This is MUMPS code that is executed when the user navigates to the
"RTN","DINIT295",107,0)
 ;;^DD(.404,11,21,2,0)
"RTN","DINIT295",108,0)
 ;;=block.
"RTN","DINIT295",109,0)
 ;;^DD(.404,11,21,3,0)
"RTN","DINIT295",110,0)
 ;;= 
"RTN","DINIT295",111,0)
 ;;^DD(.404,11,21,4,0)
"RTN","DINIT295",112,0)
 ;;=This pre-action is part of the block definition itself, so if this
"RTN","DINIT295",113,0)
 ;;^DD(.404,11,21,5,0)
"RTN","DINIT295",114,0)
 ;;=block is used on another page or another form, the pre-action still
"RTN","DINIT295",115,0)
 ;;^DD(.404,11,21,6,0)
"RTN","DINIT295",116,0)
 ;;=applies.
"RTN","DINIT295",117,0)
 ;;^DD(.404,12,0)
"RTN","DINIT295",118,0)
 ;;=POST ACTION^K^^12;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"RTN","DINIT295",119,0)
 ;;^DD(.404,12,3)
"RTN","DINIT295",120,0)
 ;;=Enter standard MUMPS that will be executed when the user leaves the block.
"RTN","DINIT295",121,0)
 ;;^DD(.404,12,9)
"RTN","DINIT295",122,0)
 ;;=@
"RTN","DINIT295",123,0)
 ;;^DD(.404,12,21,0)
"RTN","DINIT295",124,0)
 ;;=^^5^5^2940907^^
"RTN","DINIT295",125,0)
 ;;^DD(.404,12,21,1,0)
"RTN","DINIT295",126,0)
 ;;=This is MUMPS code that is executed when the user leaves the block.
"RTN","DINIT295",127,0)
 ;;^DD(.404,12,21,2,0)
"RTN","DINIT295",128,0)
 ;;= 
"RTN","DINIT295",129,0)
 ;;^DD(.404,12,21,3,0)
"RTN","DINIT295",130,0)
 ;;=This post-action is part of the block definition itself, so if the
"RTN","DINIT295",131,0)
 ;;^DD(.404,12,21,4,0)
"RTN","DINIT295",132,0)
 ;;=block is used on another page or on another form, the post-action still
"RTN","DINIT295",133,0)
 ;;^DD(.404,12,21,5,0)
"RTN","DINIT295",134,0)
 ;;=applies.
"RTN","DINIT295",135,0)
 ;;^DD(.404,15,0)
"RTN","DINIT295",136,0)
 ;;=DESCRIPTION^.40415^^15;0
"RTN","DINIT295",137,0)
 ;;^DD(.404,40,0)
"RTN","DINIT295",138,0)
 ;;=FIELD^.4044I^^40;0
"RTN","DINIT295",139,0)
 ;;^DD(.40415,0)
"RTN","DINIT295",140,0)
 ;;=DESCRIPTION SUB-FIELD^^.01^1
"RTN","DINIT295",141,0)
 ;;^DD(.40415,0,"NM","DESCRIPTION")
"RTN","DINIT295",142,0)
 ;;=
"RTN","DINIT295",143,0)
 ;;^DD(.40415,0,"UP")
"RTN","DINIT295",144,0)
 ;;=.404
"RTN","DINIT295",145,0)
 ;;^DD(.40415,.01,0)
"RTN","DINIT295",146,0)
 ;;=DESCRIPTION^W^^0;1^Q
"RTN","DINIT295",147,0)
 ;;^DD(.40415,.01,3)
"RTN","DINIT295",148,0)
 ;;=
"RTN","DINIT295",149,0)
 ;;^DD(.40415,.01,21,0)
"RTN","DINIT295",150,0)
 ;;=^^1^1^2940908^^^
"RTN","DINIT295",151,0)
 ;;^DD(.40415,.01,21,1,0)
"RTN","DINIT295",152,0)
 ;;=Enter text that describes this block.
"RTN","DINIT295",153,0)
 ;;^DD(.4044,0)
"RTN","DINIT295",154,0)
 ;;=FIELD SUB-FIELD^^30^33
"RTN","DINIT295",155,0)
 ;;^DD(.4044,0,"ID","WRITE")
"RTN","DINIT295",156,0)
 ;;=D EN^DDIOL($S($P(^(0),U,2)?1"Select "1.E:$E($P(^(0),U,2),8,999),1:$S($P(^(0),U,2)="!M":$G(^(.1)),1:$P(^(0),U,2)))_$S($P(^(0),U,4)]"":"  ("_$P(^(0),U,4)_")",1:""),"","?9")
"RTN","DINIT295",157,0)
 ;;^DD(.4044,0,"ID","WRITE1")
"RTN","DINIT295",158,0)
 ;;=D EN^DDIOL($S($P($G(^(7)),U,2):"  (Sub Page Link defined)",1:"")_$S($G(^(1)):"   (Field #"_^(1)_")",1:"")_$S($P(^(0),U,5)]"":"  ("_$P(^(0),U,5)_")",1:""),"","?0")
"RTN","DINIT295",159,0)
 ;;^DD(.4044,0,"IX","B",.4044,.01)
"RTN","DINIT295",160,0)
 ;;=
"RTN","DINIT295",161,0)
 ;;^DD(.4044,0,"IX","C",.4044,1)
"RTN","DINIT295",162,0)
 ;;=
"RTN","DINIT295",163,0)
 ;;^DD(.4044,0,"IX","D",.4044,3.1)
"RTN","DINIT295",164,0)
 ;;=
"RTN","DINIT295",165,0)
 ;;^DD(.4044,0,"NM","FIELD")
"RTN","DINIT295",166,0)
 ;;=
"RTN","DINIT295",167,0)
 ;;^DD(.4044,0,"UP")
"RTN","DINIT295",168,0)
 ;;=.404
"RTN","DINIT295",169,0)
 ;;^DD(.4044,.01,0)
"RTN","DINIT295",170,0)
 ;;=FIELD ORDER^MNJ4,1X^^0;1^K:X'=+$P(X,"E")!(X>99.9)!(X<0)!(X?.E1"."2N.N) X I $D(X),$D(^DIST(.404,DA(1),40,"B",X)) K X
"RTN","DINIT295",171,0)
 ;;^DD(.4044,.01,1,0)
"RTN","DINIT295",172,0)
 ;;=^.1
"RTN","DINIT295",173,0)
 ;;^DD(.4044,.01,1,1,0)
"RTN","DINIT295",174,0)
 ;;=.4044^B
"RTN","DINIT295",175,0)
 ;;^DD(.4044,.01,1,1,1)
"RTN","DINIT295",176,0)
 ;;=S ^DIST(.404,DA(1),40,"B",$E(X,1,30),DA)=""
"RTN","DINIT295",177,0)
 ;;^DD(.4044,.01,1,1,2)
"RTN","DINIT295",178,0)
 ;;=K ^DIST(.404,DA(1),40,"B",$E(X,1,30),DA)
"RTN","DINIT295",179,0)
 ;;^DD(.4044,.01,3)
"RTN","DINIT295",180,0)
 ;;=Enter a unique number between 0 and 99.9, inclusive, which represents the order in which the fields will be edited.
"RTN","DINIT295",181,0)
 ;;^DD(.4044,.01,21,0)
"RTN","DINIT295",182,0)
 ;;=^^2^2^2940907^
"RTN","DINIT295",183,0)
 ;;^DD(.4044,.01,21,1,0)
"RTN","DINIT295",184,0)
 ;;=The Field Order number determines the order in which users traverse the
"RTN","DINIT295",185,0)
 ;;^DD(.4044,.01,21,2,0)
"RTN","DINIT295",186,0)
 ;;=fields in the block as they press <RET>.
"RTN","DINIT295",187,0)
 ;;^DD(.4044,1,0)
"RTN","DINIT295",188,0)
 ;;=CAPTION^FX^^0;2^K:$L(X)>80!($L(X)<1) X S:$E($G(X))="!"&($G(X)'="!M") X=$$FUNC^DDSCAP(X)
"RTN","DINIT295",189,0)
 ;;^DD(.4044,1,1,0)
"RTN","DINIT295",190,0)
 ;;=^.1^^-1
"RTN","DINIT295",191,0)
 ;;^DD(.4044,1,1,2,0)
"RTN","DINIT295",192,0)
 ;;=.4044^C^MUMPS
"RTN","DINIT295",193,0)
 ;;^DD(.4044,1,1,2,1)
"RTN","DINIT295",194,0)
 ;;=S:X'="!M" ^DIST(.404,DA(1),40,"C",$$UP^DILIBF($E($S(X?1"Select "1.E:$P(X,"Select ",2,99),1:X),1,63)),DA)=""
"RTN","DINIT295",195,0)
 ;;^DD(.4044,1,1,2,2)
"RTN","DINIT295",196,0)
 ;;=K:X'="!M" ^DIST(.404,DA(1),40,"C",$$UP^DILIBF($E($S(X?1"Select "1.E:$P(X,"Select ",2,99),1:X),1,63)),DA)
"RTN","DINIT295",197,0)
 ;;^DD(.4044,1,1,2,3)
"RTN","DINIT295",198,0)
 ;;=Programmer only
"RTN","DINIT295",199,0)
 ;;^DD(.4044,1,1,2,"%D",0)
"RTN","DINIT295",200,0)
 ;;=^^2^2^2931029^^^^
"RTN","DINIT295",201,0)
 ;;^DD(.4044,1,1,2,"%D",1,0)
"RTN","DINIT295",202,0)
 ;;=This cross referenced is used to allow selection of fields by caption name
"RTN","DINIT295",203,0)
 ;;^DD(.4044,1,1,2,"%D",2,0)
"RTN","DINIT295",204,0)
 ;;=as well as by order number when entering new fields in the block.
"RTN","DINIT3")
0^3^B18851473^B17341309
"RTN","DINIT3",1,0)
DINIT3 ;SFISC/GFT - INITIALIZE VA FILEMAN ;10AUG2015
"RTN","DINIT3",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DINIT3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT3",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DINIT3",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DINIT3",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DINIT3",7,0)
 ;
"RTN","DINIT3",8,0)
 S ^DIC(.2,0)="DESTINATION^.21^",^(0,"GL")="^DIC(.2,"  S ^DIC(.5,0)="FUNCTION^.5I",^(0,"GL")="^DD(""FUNC"",",(^("LAYGO"),^("WR"))="@",^("DD")=U
"RTN","DINIT3",9,0)
 S ^DIC(.2,"%D",0)="^^2^2^2940908^"
"RTN","DINIT3",10,0)
 S ^DIC(.2,"%D",1,0)="This file stores destinations of data (e.g., a specific form or"
"RTN","DINIT3",11,0)
 S ^DIC(.2,"%D",2,0)="system).  A field can be associated with a destination of its data."
"RTN","DINIT3",12,0)
 S $P(^DIC(1.1,0),U,1,2)="AUDIT^1.1",^(0,"GL")="^DIA(" D A1
"RTN","DINIT3",13,0)
 S ^DIC(1.1,"%D",0)="^^1^1^2940908^"
"RTN","DINIT3",14,0)
 S ^DIC(1.1,"%D",1,0)="This file stores an audit trail of changes made to data fields."
"RTN","DINIT3",15,0)
 S $P(^DIAR(1.11,0),U,1,2)="ARCHIVAL ACTIVITY^1.11I",$P(^DIC(1.11,0),U,1,2)="ARCHIVAL ACTIVITY^1.11I",^(0,"GL")="^DIAR(1.11," D A1
"RTN","DINIT3",16,0)
 S $P(^DIAR(1.12,0),U,1,2)="FILEGRAM HISTORY^1.12DI",$P(^DIC(1.12,0),U,1,2)="FILEGRAM HISTORY^1.12DI",^(0,"GL")="^DIAR(1.12," D A1
"RTN","DINIT3",17,0)
 S $P(^DIAR(1.13,0),U,1,2)="FILEGRAM ERROR LOG^1.13",$P(^DIC(1.13,0),U,1,2)="FILEGRAM ERROR LOG^1.13",^(0,"GL")="^DIAR(1.13," D A1
"RTN","DINIT3",18,0)
 S $P(^DDA(0),U,1,2)="DD AUDIT^.6I",^DIC(.6,0,"GL")="^DDA(" D A1
"RTN","DINIT3",19,0)
 D A2("FORM",.403,"I")
"RTN","DINIT3",20,0)
 D A2("BLOCK",.404)
"RTN","DINIT3",21,0)
 S $P(^DIST(1.2,0),U,1,2)="ALTERNATE EDITOR^1.2",^DIC(1.2,0)="ALTERNATE EDITOR^1.2",^(0,"GL")="^DIST(1.2," D A1
"RTN","DINIT3",22,0)
 S $P(^DI(.81,0),U,1,2)="DATA TYPE^.81",^DIC(.81,0)="DATA TYPE^.81",^(0,"GL")="^DI(.81," D A1
"RTN","DINIT3",23,0)
 S $P(^DI(.86,0),U,1,2)="DATA TYPE PROPERTY^.86",^DIC(.86,0)="DATA TYPE PROPERTY^.86I",^(0,"GL")="^DI(.86," D A1
"RTN","DINIT3",24,0)
 S $P(^DI(.87,0),U,1,2)="DATA TYPE METHOD^.87",^DIC(.87,0)="DATA TYPE METHOD^.87",^(0,"GL")="^DI(.87," D A1
"RTN","DINIT3",25,0)
 S $P(^DIST(.44,0),U,1,2)="FOREIGN FORMAT^.44I",^DIC(.44,0)="FOREIGN FORMAT^.44",^(0,"GL")="^DIST(.44," D A1
"RTN","DINIT3",26,0)
 S $P(^DI(.83,0),U,1,2)="COMPILED ROUTINE^.83",$P(^DIC(.83,0),U,1,2)="COMPILED ROUTINE^.83",^(0,"GL")="^DI(.83," D A1
"RTN","DINIT3",27,0)
 D A2("INDEX",.11,"I")
"RTN","DINIT3",28,0)
 D A2("KEY",.31)
"RTN","DINIT3",29,0)
 D A2("IMPORT TEMPLATE",.46,"IA")
"RTN","DINIT3",30,0)
 D A2("SQLI_SCHEMA",1.521,"A")
"RTN","DINIT3",31,0)
 D A2("SQLI_KEY_WORD",1.52101,"O")
"RTN","DINIT3",32,0)
 D A2("SQLI_DATA_TYPE",1.5211,"A")
"RTN","DINIT3",33,0)
 D A2("SQLI_DOMAIN",1.5212,"AO")
"RTN","DINIT3",34,0)
 D A2("SQLI_KEY_FORMAT",1.5213,"AO")
"RTN","DINIT3",35,0)
 D A2("SQLI_OUTPUT_FORMAT",1.5214,"AO")
"RTN","DINIT3",36,0)
 D A2("SQLI_TABLE",1.5215,"A")
"RTN","DINIT3",37,0)
 D A2("SQLI_TABLE_ELEMENT",1.5216,"A")
"RTN","DINIT3",38,0)
 D A2("SQLI_COLUMN",1.5217,"PO")
"RTN","DINIT3",39,0)
 D A2("SQLI_PRIMARY_KEY",1.5218,"PA")
"RTN","DINIT3",40,0)
 D A2("SQLI_FOREIGN_KEY",1.5219,"PO")
"RTN","DINIT3",41,0)
 D A2("SQLI_ERROR_TEXT",1.52191)
"RTN","DINIT3",42,0)
 D A2("SQLI_ERROR_LOG",1.52192)
"RTN","DINIT3",43,0)
 S D=0 F I="^DIPT(","^DIBT(","^DIE(" S X=$P("PRINT^SORT^INPUT",U,D+1)_" TEMPLATE",Y=D/1000+.4,^DD(Y,0,"NM",X)="",^DD(Y,.01,1,1,0)=Y_"^B",@("$P("_I_"0),U,1,2)=X_U_Y_""I"""),^DIC(Y,0)=X_"^"_Y,^(0,"GL")=I,D=D+1,^("WR")=U,^("DD")=U,^DIC("B",X,Y)=""
"RTN","DINIT3",44,0)
 ;
"RTN","DINIT3",45,0)
DIK F I=.2,.4,.5,.6,.7,.601,.602,.401,.4001,.4011,.4012,.402,.4021,.4011624,.41,.411,.21,1,1.005,1.01,1.1,1.11,1.113,1.1132,1.12,1.13,1.1321,1.14,.403,.4031,.403115,.40315,.4032,.404,.40415,.4044,1.2,1.207 D XX
"RTN","DINIT3",46,0)
 F I=.44,.441,.4411,.447,.448,.42,.81,.81101,.81201,.8121,.81215,.86,.87,.4014,.40141,.401418,.401419,.83,.404421 D XX
"RTN","DINIT3",47,0)
 F I=.11,.111,.112,.114,.31,.312 D XX
"RTN","DINIT3",48,0)
 F I=.46,.461,.463 D XX
"RTN","DINIT3",49,0)
 F I=1.521,1.52101,1.5211,1.5212,1.5213,1.5214,1.5215,1.5216,1.5217,1.5218,1.5219,1.52191,1.52192 D XX
"RTN","DINIT3",50,0)
 F DIK="^DIC(.2,","^DIPT(","^DIST(1.2,","^DIST(.44,","^DI(.81,","^DI(.86,","^DI(.87,","^DIST(.403,","^DIST(.404,","^DIST(.46,","^DI(.85,","^DD(""IX"",","^DD(""KEY""," D X
"RTN","DINIT3",51,0)
 I $D(^DD("VERSION"))#2 K ^DIC("B") S DIK="^DIC(",DIK(1)=".01^B" D ENALL^DIK
"RTN","DINIT3",52,0)
 I '$D(^DD("VERSION"))#2 F DIK="^DIC(","^DIBT(","^DIE(" D X
"RTN","DINIT3",53,0)
 S ^DD("FUNC",0)="FUNCTION^.5^"
"RTN","DINIT3",54,0)
 I $D(^DD("FUNC",7,1)),$D(^DD("VERSION")),^("VERSION")>15.4
"RTN","DINIT3",55,0)
 E  S ^DD("FUNC",7,1)="C X S X="""""
"RTN","DINIT3",56,0)
 G ^DINIT4
"RTN","DINIT3",57,0)
 ;
"RTN","DINIT3",58,0)
XX S DA(1)=I,DIK="^DD("_I_","
"RTN","DINIT3",59,0)
X W ".." G IXALL^DIK
"RTN","DINIT3",60,0)
 ;
"RTN","DINIT3",61,0)
A S (^("RD"),^("LAYGO"),^("WR"),^("DD"))=U Q
"RTN","DINIT3",62,0)
A1 S (^("DEL"),^("LAYGO"),^("WR"),^("DD"))=U Q
"RTN","DINIT3",63,0)
A2(NAM,NUM,SP) ;
"RTN","DINIT3",64,0)
 S $P(@(^DIC(NUM,0,"GL")_"0)"),U,1,2)=NAM_U_NUM_$G(SP)
"RTN","DINIT3",65,0)
 S ^DIC(NUM,0)=NAM_U_NUM,(^(0,"DEL"),^("LAYGO"),^("WR"),^("DD"))=U
"RTN","DINIT3",66,0)
 Q
"RTN","DINIT3",67,0)
 ;
"RTN","DIO0")
0^27^B24212232^B21842242
"RTN","DIO0",1,0)
DIO0 ;SFISC/GFT,TKW - BUILD SORT AND SUB-HDR ;01MAR2016
"RTN","DIO0",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIO0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIO0",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIO0",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIO0",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIO0",7,0)
 ;
"RTN","DIO0",8,0)
 S Z=Z+1,DE=$P(DN,",",Z)_"=$O("_DI_$P(DN,",",1,Z)_")),DN="_(Z+1)
"RTN","DIO0",9,0)
 I Z=1,$G(DPP(DJK,"PTRIX"))]"" D
"RTN","DIO0",10,0)
DIOO1 . S DE="DIOO1=$O("_DPP(DJK,"PTRIX")_"DIOO1)),DN=1.5,DD00=0"
"RTN","DIO0",11,0)
 . S DY(1.5)="S DD00=$O("_DPP(DJK,"PTRIX")_"DIOO1,DD00)),DN=2 S:'DD00 DN=1"
"RTN","DIO0",12,0)
 . I DPP(DJK,"PTRIX")?.E1"""B""," S DY(1.5)=DY(1.5)_" S:DD00&($G(^(+DD00))!('($D(^(+DD00))=1))) DN=1"
"RTN","DIO0",13,0)
 . Q
"RTN","DIO0",14,0)
 I DPQ,Z=1,$D(DPP(DJK,"IX")),$O(DPP(DJK,0)) D
"RTN","DIO0",15,0)
 .S DXIX=$P(DPP(DJK),U) Q:'DXIX  S DXIX(DXIX)=U_$P(DPP(DJK,"IX"),U,2)_$S($D(DPP(DJK,"PTRIX")):"DD00,D0",1:DN)
"RTN","DIO0",16,0)
 .S W=0,%(1)="" F %=0:0 S W=$O(DPP(DJK,W)) Q:'W  S %=%+1,%(1)=%(1)_",D"_%
"RTN","DIO0",17,0)
 .S DXIX(DXIX)=DXIX(DXIX)_%(1)
"RTN","DIO0",18,0)
 .K %,W Q
"RTN","DIO0",19,0)
 I Z<$G(DPP(0)) S Y=$P($G(DPP(Z+1,"F")),U) I Y]""!($G(DPP(Z+1,"T"))]"") S:+$P(Y,"E")'=Y Y=""""_Y_"""" S DE=DE_","_$P(DN,",",Z+1)_"="_Y
"RTN","DIO0",20,0)
 I 'DPQ,$D(DPP(Z)) D H
"RTN","DIO0",21,0)
 I DPQ,Z=DD S DE=DE_" S:D0 DISTP=DISTP+1 D:'(DISTP#100) CSTP"_$P("^DIO2",1,$D(DIBTPGM))_" Q:'DN "
"RTN","DIO0",22,0)
 S X=DE_" I "_$P(DN,",",Z)_$S(DD=Z:"'>0",1:"=""""")
"RTN","DIO0",23,0)
 S Y="" D
"RTN","DIO0",24,0)
 .I Z=1,$D(DPP(DJK,"T")),$D(DPP(DJK,"IX")) S Y=$P(DPP(DJK,"T"),U)
"RTN","DIO0",25,0)
 .I $G(DPP(0)),Z<(DPP(0)+1) S Y=$P($G(DPP(Z,"T")),U)
"RTN","DIO0",26,0)
 .I Y]"",Y'="@",Y'="z" S X=X_"!("_$$AFT^DIOC($P(DN,",",Z),Y)_")"
"RTN","DIO0",27,0)
 .Q
"RTN","DIO0",28,0)
D0 S X=X_" S DN="_$S(Z=DD&($D(DPP(DJK,"PTRIX"))):1.5,1:(Z-1)),Y=Z-1 I Z=1 S X=X_",D0=-1" I $D(DPP(DJK,"PTRIX")) S X=X_" K DD00",$P(DN,",")="DD00"
"RTN","DIO0",29,0)
 I 'DPQ,$D(DPP(Y)) S:$P(DPP(Y),U,4)["!" X="DRK=DRK+1,"_X_",DRK=0",DRK=0 D SUB
"RTN","DIO0",30,0)
 S DY(Z)="S "_X
"RTN","DIO0",31,0)
 I $D(DIBTPGM) D
"RTN","DIO0",32,0)
 . S DY(Z)=$S(Z'=1:"DY"_Z,1:"EN")_" Q:'DN  "_DY(Z)_$S(Z=1:" Q",Z=2&($D(DPP(DJK,"PTRIX"))):" G DYP",Z=2:" G EN",1:" G DY"_(Z-1))
"RTN","DIO0",33,0)
 . I $D(DPP(DJK,"PTRIX")),Z=1 S DY(1.5)="DYP Q:'DN  "_DY(1.5)_" G:DN=1 EN"
"RTN","DIO0",34,0)
 . Q
"RTN","DIO0",35,0)
 G DIO0:Z<DD ;THIS IS A LOOP
"RTN","DIO0",36,0)
 ;
"RTN","DIO0",37,0)
 F %=1:1 Q:'$D(DPP(%))  K DPP(%,"PTRIX")
"RTN","DIO0",38,0)
 S %=$S($G(DIO("SCR"))=1:"O",$D(DIS)<9:"O",$D(DIS)=11:"SCR",1:"SEARCH")
"RTN","DIO0",39,0)
 S DY(Z+1)="S DN="_Z_" " I DJ["""B"",^" S DY(Z+1)=DY(Z+1)_"I $D("_DI_$P(DN,",",1,Z)_"))'[0,'^(D0) "
"RTN","DIO0",40,0)
 S DY(Z+1)=DY(Z+1)_"D "_%,Y=Z,X=""
"RTN","DIO0",41,0)
 I 'DPQ,$D(DPP(Y)),$P(DPP(Y),U,2)=0 D SUB I  S DY(Z+1)=DY(Z+1)_" S "_$E(X,2,99)
"RTN","DIO0",42,0)
 I A=1 D:$D(DIBTPGM) SETU Q
"RTN","DIO0",43,0)
 S X="," F W=1:1:A-1 S ^DOSV(0,IO(0),"BY",W)=DPP(A(W)),X=X_$P(DN,",",A(W))_",",A(W)="Q"
"RTN","DIO0",44,0)
 S A(W)="S ^DOSV(0,IO(0),"_W_X_"V,DE)=Y"
"RTN","DIO0",45,0)
HD I $G(DIOSTAHD),$G(^UTILITY($J,2))?1"W ".E S ^DOSV(0,IO(0),"HD")=^(2)
"RTN","DIO0",46,0)
 F W=1:1:DPP S X=$$CONVQ^DILIBF($G(DPP(W,"TXT"))) I X]"",$P(DPP(W),U,4)'["+" D  S:X]"" ^("SHD")=$S($D(^DOSV(0,IO(0),"SHD")):^("SHD")_"  BY ",1:"")_X
"RTN","DIO0",47,0)
 .N F,C S C=$F($P(DPP(W),U,5),";""")
"RTN","DIO0",48,0)
 .I C S Y=$P(DPP(W),U,3),F=$F(X,Y) I Y]"",F S C=$E(X,0,F-$L(Y)-1)_$P($E($P(DPP(W),U,5),C,99),"""") S X=$S(C]"":C_$E(X,F,999),1:"")
"RTN","DIO0",49,0)
 D:$D(DIBTPGM) SETU Q
"RTN","DIO0",50,0)
 ;
"RTN","DIO0",51,0)
SUB I $P($G(DPP(Y)),U,4)["+" S A(A)=Y,X=X_",A="_A_" D"_$S($D(DIS)<9:"",1:":$D(DIPASS)")_" ^DIO3"_$S($D(DIS)<9:"",1:" K DIPASS"),A=A+1
"RTN","DIO0",52,0)
 Q
"RTN","DIO0",53,0)
 ;
"RTN","DIO0",54,0)
H S DOP=0 I $D(DNP) F W=1:1 G Q:'$D(DPP(W)) I DPP(W)["+" K DNP S DOP=1 Q
"RTN","DIO0",55,0)
 S Y=$P(DN,",",Z),F=$P(DPP(Z),U,5),W=$P(DPP(Z),U,4),X=$P(W,"""",2),V=+$P(DPP(Z),U,2) S:W["-" Y="(-"_Y_")"
"RTN","DIO0",56,0)
 I F'[""""&'$D(DPQ(+DPP(Z),V+X))&'DOP!(W["@")!(W["'")!$D(DISH) S (Y,V)="" G F:F]"",U
"RTN","DIO0",57,0)
 I F[";TXT" S Y="$E("_Y_",2,$L("_Y_"))"
"RTN","DIO0",58,0)
EGP I '$D(^DD(+DPP(Z),V,0)) S X=$P(DPP(Z),U,6,9)
"RTN","DIO0",59,0)
 E  D
"RTN","DIO0",60,0)
 .N N,T
"RTN","DIO0",61,0)
 .S X=^DD(+DPP(Z),V,0),N=$P(X,U)
"RTN","DIO0",62,0)
 .S T=$$LABEL^DIALOGZ(+DPP(Z),V),$P(X,U)=T
"RTN","DIO0",63,0)
 .I N=$P(DPP(Z),U,3) S $P(DPP(Z),U,3)=T
"RTN","DIO0",64,0)
DT I $P(X,U,2)["D" S Y=" S Y="_Y_" D:Y<9999999 DT"
"RTN","DIO0",65,0)
 E  I $G(DPP(Z,"OUT"))]"" S DPP(Z,"OUT")=" S Y="_Y_" "_DPP(Z,"OUT"),Y=",Y" ;THIS WILL HANDLE 'TRANSFORM FOR SORT' FIELDS THAT NEED REVERSE-TRANSFORM!
"RTN","DIO0",66,0)
 E  I $P(X,U,2)["O"!($P(X,U,4)?.P)!($P(X,U,2)["t"&($P(X,U,2)'["S")) S Y=","_Y ;IF IT HAS BEEN OUTPUT-TRANSFORMED, OR IF IT IS COMPUTED, IT IS ALREADY DISPLAYABLE
"RTN","DIO0",67,0)
DILL E  D EN^DILL(+DPP(Z),V,1) ;CREATES A WRITE STATEMENT IN 'Y' VARIABLE
"RTN","DIO0",68,0)
 S V=$P(F,";C",2),V="?"_$S(V:V-1,1:Z*3+5)
"RTN","DIO0",69,0)
F I F[";S" S %=$P(F,";S",2) S:'% %=1 S V=$E("!!!!!!!!!!!!!!!!!!!!!!!!!!!!",1,%)_V,M=M+% ;SKIP a number of lines of output
"RTN","DIO0",70,0)
 S F=$P(F,";""",2),%=$S(W["@":"",W["'":"",F]"":$P(F,"""",1,$L(F,"""")-1),Y]"":$P($P(DPP(Z),U,3),"""",1)_": ",1:"") ;CAPTION OF SUBHEADER
"RTN","DIO0",71,0)
 S Y=V_$S(%_Y]"":$E(",",V]"")_""""_%_"""",1:"")_Y
"RTN","DIO0",72,0)
 I Y]"" S Y=" I DN D T"_$G(DPP(Z,"OUT"))_" W "_Y ;STOP IF THEY TYPE "^"
"RTN","DIO0",73,0)
U S W=W'["#" I W,Y="",$D(DPP(Z+1)) G E
"RTN","DIO0",74,0)
 S ^UTILITY($J,"H",Z)="X ^UTILITY($J,1)"_$P(":$Y>"_(DIOSL-M-2-DD+Z)_"!(DC["","")",U,W)_Y,Y="D H:DI<DN ",DE=DE_$S(Z=1:",DI=0",1:" S:DI>"_Z_" DI="_Z)
"RTN","DIO0",75,0)
 S:^UTILITY($J,99,0)'[Y ^(0)=Y_^(0)
"RTN","DIO0",76,0)
E I DOP S DNP=""
"RTN","DIO0",77,0)
Q K DOP Q
"RTN","DIO0",78,0)
 ;
"RTN","DIO0",79,0)
SETU ;PUT DY ARRAY INTO ^UTILITY FOR LATER COMPILATION
"RTN","DIO0",80,0)
 N DN
"RTN","DIO0",81,0)
 F DN=0:0 S DN=$O(DY(DN)) Q:'DN  D
"RTN","DIO0",82,0)
 .S ^TMP("DIBTC",$J,0,DICNT)=$E(" ",'$O(DY(DN)))_DY(DN),DICNT=DICNT+1
"RTN","DIO0",83,0)
 .I '$O(DY(DN)) S ^TMP("DIBTC",$J,0,DICNT)=$S(DN>2:" G DY"_(DN-1),1:" G EN"),DICNT=DICNT+1
"RTN","DIO0",84,0)
 .Q
"RTN","DIO0",85,0)
 Q
"RTN","DIOU")
0^26^B16733665^B13380985
"RTN","DIOU",1,0)
DIOU ;SFISC/TKW - GENERIC FILEMAN CODE GENERATION UTILITIES ;18SEP2015
"RTN","DIOU",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIOU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIOU",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIOU",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIOU",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIOU",7,0)
 ;
"RTN","DIOU",8,0)
BIJ(S,F,I,J) ;BUILD I & J ARRAY.  S=(SUB)FILE#, F=FIELD#
"RTN","DIOU",9,0)
 N X,Y,% S X=0,(Y,J(0))=S F  Q:'$D(^DD(Y,0,"UP"))  S X=X+1,Y=^("UP")
"RTN","DIOU",10,0)
 I X=0 G X
"RTN","DIOU",11,0)
 F %=X:-1:1 S Y=$G(^DD(S,0,"UP")) Q:'Y  S I(S)=%,I(S,0)=Y,F=$O(^DD(Y,"SB",S,0)) Q:'F  S I(S,1)=$P($P($G(^DD(Y,F,0)),U,4),";"),S=Y
"RTN","DIOU",12,0)
X S J=$G(^DIC(S,0,"GL")),I(S)=0
"RTN","DIOU",13,0)
 I $G(DCC)?1"^"1.A1"(".E,((J="")!($P(DCC,J,2)]"")) S J=DCC
"RTN","DIOU",14,0)
 Q
"RTN","DIOU",15,0)
 ;
"RTN","DIOU",16,0)
GREF(I,J,F) ;BUILD GLOBAL REFERENCE (I & J ARRAY FROM BIJ, CODE RETURNED IN F)
"RTN","DIOU",17,0)
 N %,Y S F="",%=J(0) F Y=I(%):-1 S F="D"_Y_F Q:'Y  S F=","_$G(I(%,1))_","_F,%=$G(I(%,0)) Q:%=""!('$D(^DD(+%)))
"RTN","DIOU",18,0)
 S F=$S($D(I(%,8)):I(%,8),1:J)_F Q
"RTN","DIOU",19,0)
 ;
"RTN","DIOU",20,0)
GLRF(S,F,X,%) ;BUILD GLOBAL REFERENCE (S=(SUB)FILE#,F=FIELD NO.,%=CLOSE PARENTHESIS, RETURN PIECE IN %, X=OUTPUT VARIABLE.)
"RTN","DIOU",21,0)
 Q:'$D(^DD($G(S),$G(F),0))  N I,J,K,L,Y D BIJ(S,F,.I,.J)
"RTN","DIOU",22,0)
 S X="",K=J(0) F Y=I(K):-1 S X="D"_Y_X Q:'Y  S L=$G(I(K,1)) S:L]""&(+$P(L,"E")'=L) L=$$QUOTE^DILIBF(L) S:L]"" X=","_L_","_X S K=+$G(I(K,0)) Q:'K
"RTN","DIOU",23,0)
 S X=J_X_"," Q:$G(%)=""
"RTN","DIOU",24,0)
 S %=$P($P(^DD(S,F,0),U,4),";") I %]"",+$P(%,"E")'=% S %=$$QUOTE^DILIBF(%)
"RTN","DIOU",25,0)
 S X=X_%_")"
"RTN","DIOU",26,0)
 S %=$P($P(^DD(S,F,0),U,4),";",2) S:$P(^(0),U,2)["W" %="W" S:F=.001 %(1)=I(J(0))
"RTN","DIOU",27,0)
 Q
"RTN","DIOU",28,0)
 ;
"RTN","DIOU",29,0)
GET(S,F,X,Y,DIFLAG) ;
"RTN","DIOU",30,0)
 ;Called by ^DIP12
"RTN","DIOU",31,0)
 ;BUILD CODE TO EXTRACT FIELD.  S=FILE/SUBFILE#, F=FIELD#, X=LOCAL VARIABLE NAME WHERE FIELD WILL BE STORED.  CODE RETURNED IN Y
"RTN","DIOU",32,0)
 ; DIFLAG["I" if internal value of field (no output transform)
"RTN","DIOU",33,0)
 N % K Y Q:'$D(^DD(+$G(S),+$G(F),0))  S %=^(0),%(2)=$G(^(2))
"RTN","DIOU",34,0)
 N P,DN,I,J,E
"RTN","DIOU",35,0)
 S P=1 D GLRF(S,F,.Y,.P)
"RTN","DIOU",36,0)
 I F=.001,P="" S Y="S "_X_"=D"_P(1) Q
"RTN","DIOU",37,0)
 I P=" " G CAL
"RTN","DIOU",38,0)
 S (DN,E)=""
"RTN","DIOU",39,0)
 I P S DN="$P(",E="),U"_$S(P=1:")",1:","_P_")")
"RTN","DIOU",40,0)
 I $E(P)="E" S DN="$E(",E="),"_$E(P,2,9)_")"
"RTN","DIOU",41,0)
 I P="W" S E=")"
"RTN","DIOU",42,0)
 I E="" K Y Q
"RTN","DIOU",43,0)
 S Y="S "_X_"="_DN_"$G("_Y_E
"RTN","DIOU",44,0)
 Q:$G(DIFLAG)["I"  Q:$P(%,U,2)["D"
"RTN","DIOU",45,0)
 ;NOW IF IT HAS AN OUTPUT TRANSFORM, AND IS NOT A DATE, DO THE OUTPUT TRANSFORM.  Compare with DT+2^DIO0
"RTN","DIOU",46,0)
 S E=",Y="_X_" "_$$OUTPUT^DIETLIBF(S,F)_" S "_X_"=Y"
"RTN","DIOU",47,0)
 I $P(%,U,2)["t"&($P(%,U,2)'["S")!($P(%,U,2)["O") S Y=Y_E
"RTN","DIOU",48,0)
 Q
"RTN","DIOU",49,0)
 ;
"RTN","DIOU",50,0)
CAL S Y=$P(%,U,5,99),E=$P($P(%,U,2),"p",2) ;IT'S A COMPUTED FIELD WE ARE AFTER
"RTN","DIOU",51,0)
 I E,$D(^DIC(+E,0,"GL")) S E=" S "_X_"=$S(X="""":X,$D("_^("GL")_"X,0))#2:$P(^(0),U),1:X)" S:$L(Y)+$L(E)>225 Y="X $P(^DD("_S_","_F_",0),U,5,99)" S Y=Y_E Q  ;computed pointer
"RTN","DIOU",52,0)
 S Y=Y_" S "_X_"=X" Q
"RTN","DIOU",53,0)
 ;
"RTN","DIOU",54,0)
DTYP(S,F,Y) ;RETURN DATA TYPES(S) INTO 'Y' FOR A FIELD S,F    CALLED FROM DIP,DIP1,DIEV, ETC
"RTN","DIOU",55,0)
 K Y S Y=""
"RTN","DIOU",56,0)
 I $G(F)=.001,$G(^DD(+$G(S),F,0))="" S Y=2 Q  ;AN IEN IS NUMERIC
"RTN","DIOU",57,0)
D2 Q:$G(^DD(+$G(S),+$G(F),0))=""
"RTN","DIOU",58,0)
 N %,%X,%Y,X,I,J,DITYP,DISETST,DIIT
"RTN","DIOU",59,0)
 S %=$P(^(0),U,2),DISETST=$P(^(0),U,3),DIIT=$P(^(0),U,5,99),DITYP=""
"RTN","DIOU",60,0)
TYPE I %["t" S DITYP=+$P(%,"t",2) I $D(^DI(.81,DITYP,0)) S Y=DITYP,%=$P(^(0),U,2),DISETST=$$GETPROP^DIETLIBF(S,F,"SET OF CODES") ;EXTENSIBLE DATA TYPE
"RTN","DIOU",61,0)
 I '% S I="" F  S I=$O(^DI(.81,"C",I)) Q:I=""  I %[I S DITYP=$O(^(I,0)) Q  ;LOOK THRU THE ABBREVIATIONS ("N", "S", etc)
"RTN","DIOU",62,0)
 I DITYP="",% D  Q
"RTN","DIOU",63,0)
 . I $P($G(^DD(+%,.01,0)),U,2)["W" S Y=5 Q
"RTN","DIOU",64,0)
 . S Y=10,Y(+%)="" Q  ;MULTIPLE
"RTN","DIOU",65,0)
 S:DITYP="" DITYP=4 ;'FREE-TEXT' IS THE DEFAULT
"RTN","DIOU",66,0)
 S:Y="" Y=DITYP
"RTN","DIOU",67,0)
 I DITYP=1 S Y("D")="",DIIT=$P($P(DIIT,"%DT=",2),"""",2) S:DIIT["T"!(DIIT["R")!(DIIT="") Y("D")=Y("D")_"T" S:DIIT["S" Y("D")=Y("D")_"S" G QD
"RTN","DIOU",68,0)
 I DITYP,"2,4,5,9"[DITYP G QD
"RTN","DIOU",69,0)
 Q:Y=""
"RTN","DIOU",70,0)
 I DITYP=6 S Y("T")=$S(%["D":1,%["B":2,%?.E1"J".N1","1N.E:2,%["p":7,1:4) Q
"RTN","DIOU",71,0)
P I DITYP=7 S I=+$P(%,"P",2),%(2)="Y(" D Y S S=I,F=.01 K % G D2
"RTN","DIOU",72,0)
V I DITYP=8 S X=0 D V2 Q
"RTN","DIOU",73,0)
S I DITYP=3 F I=1:1 S X=$P(DISETST,";",I),X(1)=$P(X,":"),X=$P(X,":",2) Q:X=""!(X(1)="")  S Y("S","I",X(1))=X,Y("S","E",X)=X(1)
"RTN","DIOU",74,0)
QD I $O(Y(-1)) S Y("T")=DITYP
"RTN","DIOU",75,0)
 Q
"RTN","DIOU",76,0)
 ;
"RTN","DIOU",77,0)
 ;
"RTN","DIOU",78,0)
Y S %(3)=$O(@(%(2)_"0)")) I %(3)]"",%(3)'="T" S %(2)=%(2)_%(3)_"," G Y
"RTN","DIOU",79,0)
 S %(2)=%(2)_I,@(%(2)_")")="" Q
"RTN","DIOU",80,0)
V2 S X=$O(^DD(S,F,"V",X)) Q:'X  S I=$P($G(^DD(S,F,"V",X,0)),U) G:'I V2
"RTN","DIOU",81,0)
 S:'$D(Y("V"_X)) Y("V"_X)="" S %(2)="Y("_"""V"_X_"""," D Y
"RTN","DIOU",82,0)
 D DTYP(.I,.01,.J)
"RTN","DIOU",83,0)
 I J>0 S (Y("T"),Y("V"_X,"T"))=$S($G(J("T"))]"":J("T"),1:J) K J("T") S %X="J(",%Y=%(2)_"," D %XY^%RCR
"RTN","DIOU",84,0)
 K %,J G V2
"RTN","DIP")
0^28^B34427455^B34639315
"RTN","DIP",1,0)
DIP ;SFISC/XAK,TKW - GET SORT SPECS ;23MAR2013
"RTN","DIP",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIP",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIP",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIP",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIP",7,0)
 ;
"RTN","DIP",8,0)
 K %ZIS,BY,FLDS,DX,DIS,DISV,DHIT,DTOUT,DIFF D ^DICRW G Q:$D(DTOUT),EN:$D(DIC)
"RTN","DIP",9,0)
 ;
"RTN","DIP",10,0)
Q K DIJ,DIOEND,DIOBEG,DISTOP,DISTXT,DI,DICS,DJ,BY,A,DICSS,ZTSK,FR,TO,FLDS,DHD,DHIT,DIS,PG,DCOPIES,L,DISUPNO,DIPCRIT,DCC,DNP
"RTN","DIP",11,0)
 K %,%H,%I,%X,%Y,%DT,B,D0,DD,DIAC,DIFILE,DM,DP,DQ S I=$G(X) K X S:I]"" X=I
"RTN","DIP",12,0)
 D CLEAN^DIEFU
"RTN","DIP",13,0)
QQ K DIPR,DIBT,DIBT1,DIBT2,DIBTOLD,DIEDT,DIQ,DIWF,DIPZ,DIL,DXS,DALL,DSC,DCL,DPP,DPQ,DIC,DU,DQI,DY,DITYP,DINS,DIPT,DISX
"RTN","DIP",14,0)
 K S,DC,DL,DV,DE,DA,DK,DIFF,Y,R,C,D,I,J,Q,M,P,N,Q S:$D(DID) M=U Q
"RTN","DIP",15,0)
 ;
"RTN","DIP",16,0)
INIT S DIQUIET=1 Q:$D(ZTQUEUED)  I L!('$D(FLDS)#2)!($D(DIASKHD))!($G(IOP)="") K DIQUIET Q
"RTN","DIP",17,0)
 I $G(BY)="" K:$G(BY(0))="" DIQUIET Q
"RTN","DIP",18,0)
 N I,X F I=1:1 Q:'$G(DIQUIET)  S X=$P(BY,",",I) Q:X=""  K:X="@" DIQUIET D:$G(DIQUIET)
"RTN","DIP",19,0)
 . I $D(FR)#2 K:$P(FR,",",I)="?" DIQUIET I '$D(TO)#2 K DIQUIET Q
"RTN","DIP",20,0)
 . I $D(TO)#2 K:$P(TO,",",I)="?"!('$D(FR)#2) DIQUIET Q
"RTN","DIP",21,0)
 . I '$D(FR(I))#2!($G(FR(I))="?") K DIQUIET Q
"RTN","DIP",22,0)
 . I '$D(TO(I))#2!($G(TO(I))="?") K DIQUIET
"RTN","DIP",23,0)
 . Q
"RTN","DIP",24,0)
 Q
"RTN","DIP",25,0)
 ;
"RTN","DIP",26,0)
EN S L=1 N DIERR
"RTN","DIP",27,0)
EN1 ;
"RTN","DIP",28,0)
 S:DIC DIC=$G(^DIC(DIC,0,"GL")) G Q:DIC=""
"RTN","DIP",29,0)
 I "^DIA(^DDA("[$E(DIC,1,5),'$G(DIA) S DIA=+$P(DIC,"(",2) G Q:'DIA
"RTN","DIP",30,0)
 S:$D(L)[0 L=0 N DIFM S DIFM=+L N DIFMSTOP D CLEAN^DIEFU I '$D(DIQUIET) N DIQUIET D INIT
"RTN","DIP",31,0)
 S DJ=1,U="^",(DCC,DI)=DIC,DNP="" D QQ I '$D(DISYS) N DISYS D OS^DII
"RTN","DIP",32,0)
 I $G(BY)="@" S %=$G(BY(0)),DNP=BY K BY S:%]"" BY(0)=% K %
"RTN","DIP",33,0)
 S:'$D(DTIME) DTIME=300
"RTN","DIP",34,0)
I ;
"RTN","DIP",35,0)
 G Q:'$D(@(DI_"0)")) S S=+$P(^(0),U,2)
"RTN","DIP",36,0)
SORT S Q="""",C=",",DC=0,DIJ=0,DE=$S(L=0!L!(L="]"):$$EZBLD^DIALOG(7062),1:L),DIL(S)=U ;'SORT'
"RTN","DIP",37,0)
 I $D(BY(0)) D EN^DIP10 G Q:'$D(BY(0)) I $G(BY)="" S DPP=DPP(0) G N^DIP1
"RTN","DIP",38,0)
LEVELS F DJ=DJ:1:7 D DJ Q:$G(X)=""!($D(DTOUT))!($D(DUOUT))!'$D(DJ)  G FTEM^DIP1:X?1"[".E
"RTN","DIP",39,0)
 I $D(DUOUT)!($D(DTOUT))!('$D(DJ)) G Q
"RTN","DIP",40,0)
 G DUP^DIP1
"RTN","DIP",41,0)
 ;
"RTN","DIP",42,0)
DJ ;Process one SORT BY level  (DJ=level)
"RTN","DIP",43,0)
 K DPP(DJ),DL,DV,I,J S I(0)=DI,(DL,J(0))=S,(N,DU)=0,Y=.01
"RTN","DIP",44,0)
 I DJ>1!($G(DPP(0))=0) D  G Q:$D(DTOUT)!($D(DUOUT)) Q:X="@"  G:$D(DIPP) ADD:X?1"^"1.E G D:X]"" Q
"RTN","DIP",45,0)
 . S DIPR=$S($D(DIPR):DIPR,$G(DPP(0))]"":"BY(0)",1:$P(DPP(DJ-1),U,3))
"RTN","DIP",46,0)
EGP .D  D L^DIP0 K DIPR Q  ;**CCO/NI
"RTN","DIP",47,0)
 ..N X S X(1)=DIPR,X(2)=DE,DV=$J("",DJ*2-2)_$$EZBLD^DIALOG(7060,.X) ;**CCO/NI  'WITHIN --- SORT BY: '
"RTN","DIP",48,0)
SN S P=$P(^DD(DL,.01,0),U,1,2)  D:'$D(DIPP) XR:$P(P,U,2)'["P"&($P(P,U,2)'["V") I 'DU S Y=S,DV(1)=$S($D(^DD(DL,.001,0)):$$LABEL^DIALOGZ(DL,.001),1:$$EZBLD^DIALOG(7099)) ;"NUMBER" FIELD
"RTN","DIP",49,0)
D1 S DPP(DJ)=$S($D(DIPP(DIJ)):DIPP(DIJ),1:Y_U_DU_U_DV(1)_U)
"RTN","DIP",50,0)
BY S DV=$$EZBLD^DIALOG(7061,DE) D L^DIP0 G Q:$D(DTOUT)!($D(DUOUT)) I X="" D DJ^DIP1 Q  ;'BY'
"RTN","DIP",51,0)
 G:$D(DIPP) ADD:X?1"^"1.E Q:X="@"
"RTN","DIP",52,0)
D K DPP(DJ,"IX"),DPP(DJ,"PTRIX") S R=U,P=DNP I X="]" S DXS=1,DJ=DJ-1 Q
"RTN","DIP",53,0)
Y I X'=$$EZBLD^DIALOG(7099) D ^DIC K DUOUT G Q:$D(DTOUT)!(X=U) G G:Y>0,TEM^DIP11:X?1"[".E&'$D(DIPP)&($G(DIEDT)'=1),B:X="" ;IF INPUT ISN'T 'NUMBER'
"RTN","DIP",54,0)
 I $G(DUZ(0))="@",X="BY(0)",DJ=1,'$D(DIPP),DL=S D  G:$G(DTOUT)!($G(DIROUT)) Q  G:Y=1 DJ S X="",DPP=DPP(0) Q 
"RTN","DIP",55,0)
 . N X D ENBY0^DIP100 I $G(BY(0))="" S Y=1 Q
"RTN","DIP",56,0)
 . S DIR(0)="Y",DIR("A")="Enter additional sort fields",DIR("B")="NO",DIR("?")="Enter YES if you wish to sort by fields in addition to BY(0)." D ^DIR K DIR
"RTN","DIP",57,0)
 . W ! Q
"RTN","DIP",58,0)
STRIP D  G:'$D(D) Y S X=$RE(X) D  S X=$RE(X) G:'$D(D) Y  ;from front, then from back
"RTN","DIP",59,0)
 .F D="]","-","#","+","!","@","'" I $E(X)=D S P=P_D,X=$E(X,2,999) S:D="]" DXS=1 K D Q
"RTN","DIP",60,0)
 I X[";" S R=X,X=$P(X,";"),R=U_$P(R,X,2,9) G Y
"RTN","DIP",61,0)
NUM S D=$$EZBLD^DIALOG(7099),Y=0_U_D I $P(D,X)="" W $P(D,X,2) G S ;THEY'RE SORTING BY 'NUMBER'
"RTN","DIP",62,0)
 G ^DIP0
"RTN","DIP",63,0)
 ;
"RTN","DIP",64,0)
BB S DPP(DJ,"F")=0,DPP(DJ,"T")=1,P=P_$S(P["@":"B",1:"@B"),R=R_$S(R'[";L1":";L1",1:"") K DATE Q
"RTN","DIP",65,0)
 ;
"RTN","DIP",66,0)
G S X=$P(Y(0),U,2),D=$P($P(Y(0),U,4),";") G NM:'X
"RTN","DIP",67,0)
 S N=N+1,DPP(DJ,DL)=D,DIL(+X)=DL,I(N)=$S(+D=D:D,1:Q_D_Q),(DL,J(N))=+X,Y=.01_U_$P(^DD(DL,.01,0),U) I $D(DIPP(DIJ))#2 S %=$P(DIPP(DIJ),U,3),$P(DIPP(DIJ),U,3)=$S($D(DIPP(DIJ,DL)):DIPP(DIJ,DL),1:%)
"RTN","DIP",68,0)
 I $O(^DD(DL,0))>0!$S($D(BY):BY?1U.E1" ".E,1:0) S DV=$J("",DJ*2-2)_$P(^(0),U) D L^DIP0 G Q:$D(DTOUT)!($D(DUOUT)) Q:X="@"  G Y
"RTN","DIP",69,0)
NM D BB:X["B" I X["P"!(X["V") S P=P_Q_+Y,I=$P(Y,U,2),DPP(DJ)=DL_U_Y_U_P D DPQ^DIP1 S X="#"_$P(P,Q,$L(P,Q)),DPP=I G C^DIP0
"RTN","DIP",70,0)
 I +Y=.001 S Y=0_U_$P(Y,U,2),R=R_U_U_X
"RTN","DIP",71,0)
S ;from DIP0
"RTN","DIP",72,0)
 S X=DL_U_+Y,DPP(DJ)=DL_U_Y_U_P_R I P'["-",R'[";TXT",$P(Y,U,3)="" D XR
"RTN","DIP",73,0)
 D DJ^DIP1 S:X'=U X=1 Q
"RTN","DIP",74,0)
 ;
"RTN","DIP",75,0)
B G Q:$D(DIQUIET) W $C(7),"??" Q:$D(DIJS)  G DJ
"RTN","DIP",76,0)
 ;
"RTN","DIP",77,0)
XR I $P($G(DPP(DJ)),U,3)=$$EZBLD^DIALOG(7099),+DPP(DJ)=S,$P(DPP(DJ),U,2)=0 S DPP(DJ,"IX")=DI_DI_U_1 Q  ;'NUMBER'
"RTN","DIP",78,0)
 I 'Y S Y=+$P($P(DPP(DJ),U,4),"""",2) Q:'Y  D
"RTN","DIP",79,0)
 . N P,X,Z S Z=+$P($P(^DD(+DPP(DJ),Y,0),U,2),"P",2) G:'Z XER
"RTN","DIP",80,0)
 . D DTYP^DIOU(Z,.01,.P) G:P>4 XER S P=$P($G(^DD(Z,.01,0)),U,2) I P["O",P'[D G XER
"RTN","DIP",81,0)
 . F P=0:0 S P=$O(^DD(Z,.01,1,P)) Q:'P  I +^(P,0)=Z,$P(^(0),U,2,9)="B" Q
"RTN","DIP",82,0)
 . I 'P S P=$O(^DD("IX","BB",Z,"B",0)) I P S P=$$IDXOK(P,Z,Z,.01)
"RTN","DIP",83,0)
 . G:'P XER S P=$G(^DIC(Z,0,"GL")) G:P="" XER
"RTN","DIP",84,0)
 . S DPP(DJ,"PTRIX")=P_Q_"B"_Q_C Q
"RTN","DIP",85,0)
XER . S Y="" Q
"RTN","DIP",86,0)
 S P=$P($G(^DD(DL,+Y,0)),U,2) D
"RTN","DIP",87,0)
 . I P["O"!(P["t"),P'["D" Q   ;DO NOT OFFER TO SORT BY A TRANSFORMED FIELD
"RTN","DIP",88,0)
 . I P?.E1"NJ"1.N1",2".E,$P($G(^DD(DL,+Y,0)),U,5,99)["""$""" Q
"RTN","DIP",89,0)
 . F P=0:0 S P=$O(^DD(DL,+Y,1,P)) Q:P'>0  I +^(P,0)=S S X=$P(^(0),U,2,9) I X?1A.AN S DPP(DJ,"IX")=DI_Q_X_Q_C_DI_U_2,Y=+$O(^DD(S,0,"IX",X,-1)),DU=+$O(^(Y,-1)),DV(1)=$P(^DD(Y,DU,0),U) Q
"RTN","DIP",90,0)
 . Q:P
"RTN","DIP",91,0)
 . N DIOUT S DIOUT=0
"RTN","DIP",92,0)
 . F  S P=$O(^DD("IX","F",DL,+Y,P)) Q:'P  S X=$P($G(^DD("IX",P,0)),U,2) I X]"" D  Q:DIOUT
"RTN","DIP",93,0)
 . . Q:'$$IDXOK(P,S,DL,+Y)
"RTN","DIP",94,0)
 . . S DPP(DJ,"IX")=DI_Q_X_Q_C_DI_U_2
"RTN","DIP",95,0)
 . . S DU=+Y,Y=DL,DV(1)=$P(^DD(DL,DU,0),U),DIOUT=1 Q 
"RTN","DIP",96,0)
 . Q
"RTN","DIP",97,0)
 I $D(DPP(DJ,"PTRIX")),'$D(DPP(DJ,"IX")) K DPP(DJ,"PTRIX")
"RTN","DIP",98,0)
 Q
"RTN","DIP",99,0)
 ;
"RTN","DIP",100,0)
IDXOK(DIEN,DIFILE,DISUB,DIFIELD) ;
"RTN","DIP",101,0)
 N X S X=$G(^DD("IX",DIEN,0))
"RTN","DIP",102,0)
 Q:$P(X,U,14)'["S" 0
"RTN","DIP",103,0)
 Q:+X'=DIFILE 0
"RTN","DIP",104,0)
 N J S J=$O(^DD("IX",DIEN,11.1,0)) Q:'J 0
"RTN","DIP",105,0)
 I $O(^DD("IX",DIEN,11.1,J)) Q 0
"RTN","DIP",106,0)
 S X=$G(^DD("IX",DIEN,11.1,J,0))
"RTN","DIP",107,0)
 I ('$P(X,U,6))!($P(X,U,3)'=DISUB)!($P(X,U,4)'=DIFIELD) Q 0
"RTN","DIP",108,0)
 I $D(^DD("IX",DIEN,11.1,J,1.5))!($D(^(2))) Q 0
"RTN","DIP",109,0)
 Q 1
"RTN","DIP",110,0)
 ;
"RTN","DIP",111,0)
ADD S X=$E(X,2,99),DIJS=DIJ,DIJ=0 D D I $G(X)=U!($D(DTOUT)) K DIJS Q
"RTN","DIP",112,0)
 S:$D(X) DJ=DJ+1 S DIJ=DIJS K DIJS G DJ
"RTN","DIP12")
0^37^B20018859^B17779972
"RTN","DIP12",1,0)
DIP12 ;SFISC/TKW - PROCESS FROM-TO (CONT.) ;2SEP2015
"RTN","DIP12",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIP12",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIP12",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIP12",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIP12",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIP12",7,0)
 ;
"RTN","DIP12",8,0)
OPT ;For one SORT level (#DJ), build code to extract field & test sort criteria, build sort description.  Called from DIP1 & DIP11
"RTN","DIP12",9,0)
 N S,F,X,%,F1,F2,F3,T1,T2,T3,N,DIRANGE
"RTN","DIP12",10,0)
 S S=$P(DPP(DJ),U),F=$P(DPP(DJ),U,2),N=$P(DPP(DJ),U,3) S:N["""" N=$$CONVQQ^DILIBF(N),DIRANGE=""
"RTN","DIP12",11,0)
 S X="DISX("_DJ_")",DPP(DJ,"GET")=""
"RTN","DIP12",12,0)
GET I +$P(S,"E")=S,F D
"RTN","DIP12",13,0)
 .N DIT,DIFLAG,DITT
"RTN","DIP12",14,0)
 .S DIT=$$GETMETH^DIETLIBF(S,F,"TRANSFORM FOR SORT") I DIT]"" S DIFLAG="I"
"RTN","DIP12",15,0)
 .D GET^DIOU(S,F,X,.%,$G(DIFLAG))
"RTN","DIP12",16,0)
 .I '$D(%) S $P(DPP(DJ),U,2)=0,DPP(DJ,"GET")="S "_X_"=""""" Q  ;IF THERE IS NO SUCH FIELD ANYMORE
"RTN","DIP12",17,0)
 .I DIT]"" D  ;TRANSFORM FOR SORT PURPOSES
"RTN","DIP12",18,0)
 ..S DITT="^UTILITY($J,""TRANSF"","_DJ_",",DPP(DJ,"OUT")="S:Y]"""" Y=$G("_DITT_"Y))"
"RTN","DIP12",19,0)
 ..S %=%_" N X,DIT S (X,DIT)="_X_" "_DIT_" S "_X_"=X S:X]"""" "_DITT_"X)=DIT"
"RTN","DIP12",20,0)
 .S DPP(DJ,"GET")=%
"RTN","DIP12",21,0)
 .I N=$P($G(^DD(S,F,0)),U) S %=$$LABEL^DIALOGZ(S,F) I %]"" S DPP(DJ,"LANG")=N,(DPP(DJ,"LANG",+$G(DUZ("LANG"))),N)=%,$P(DPP(DJ),U,3)=N ;FIELD LABEL
"RTN","DIP12",22,0)
 I $D(DPP(DJ,"CM")) S DPP(DJ,"GET")=DPP(DJ,"CM")
"RTN","DIP12",23,0)
 I $G(DPP(DJ,"SRTTXT"))="SORT" S DPP(DJ,"GET")=DPP(DJ,"GET")_" S:"_X_"]"""" "_X_"="_""" ""_"_X
"RTN","DIP12",24,0)
 I +$P(S,"E")=S,F,$P(DPP(DJ),U,10)=2 D
"RTN","DIP12",25,0)
 . N % S %=$P($G(^DD(S,F,0)),U,2) I %'["C",%'["N" Q
"RTN","DIP12",26,0)
 . S DPP(DJ,"GET")=DPP(DJ,"GET")_" S:"_X_"]"""" "_X_"=+"_X
"RTN","DIP12",27,0)
 . Q
"RTN","DIP12",28,0)
 I $P(DPP(DJ),U,4)["@B" S %=X,DPP(DJ,"TXT")=N G O2 ;SORTING BY A BOOLEAN EXPRESSION, SO NO 'FROM' OR 'TO'
"RTN","DIP12",29,0)
 I S,F=0 D BIJ^DIOU(S,.01,.%,.F) S X="D"_$G(%(S)) K %,F ;SORTING BY IEN
"RTN","DIP12",30,0)
NOTNULL I '$D(DPP(DJ,"F")) S %=$$NULL^DIOC(X,"'"),DPP(DJ,"TXT")=$$EZBLD^DIALOG(7093,N) G O2 ;'NOT NULL'
"RTN","DIP12",31,0)
RANGE D FT S DIRANGE="" S:$G(DPP(DJ,"SRTTXT"))="RANGE" DIRANGE=""" ""_"
"RTN","DIP12",32,0)
 S %=""
"RTN","DIP12",33,0)
 I F1="?z" D  G O2
"RTN","DIP12",34,0)
ALL . I T1="z" S %="1",DPP(DJ,"TXT")="All "_N_$$EZBLD^DIALOG(7094) Q  ;'INCLUDES NULLS'
"RTN","DIP12",35,0)
NULL . I T1="@" S %=$$NULL^DIOC(X),DPP(DJ,"TXT")=$$EZBLD^DIALOG(7092,N) Q  ;'IS NULL'
"RTN","DIP12",36,0)
 . S %=$$AFT^DIOC(DIRANGE_X,T1,"'")
"RTN","DIP12",37,0)
NULLPLUS . S DPP(DJ,"TXT")=N_$S(T3]"":" to "_T3,1:"")_$$EZBLD^DIALOG(7094) ;'INCLUDES NULLS'
"RTN","DIP12",38,0)
 . Q
"RTN","DIP12",39,0)
 S DPP(DJ,"TXT")=N_$S(F3]"":" from "_F3,1:"")
"RTN","DIP12",40,0)
 I T1="@"!(T1="z") D  G O2
"RTN","DIP12",41,0)
 . S %="" I T1="@" S DPP(DJ,"TXT")=DPP(DJ,"TXT")_$$EZBLD^DIALOG(7094),%=$$NULL^DIOC(X)_"!("
"RTN","DIP12",42,0)
 . S %=%_$$AFT^DIOC(DIRANGE_X,F1) S:T1="@" %=%_")"
"RTN","DIP12",43,0)
 . Q
"RTN","DIP12",44,0)
 I F3]"",F3=T3 S %=$$EQ^DIOC(X,T1),DPP(DJ,"TXT")=N_" equals "_F3 G O2
"RTN","DIP12",45,0)
 S %=$$BTWI^DIOC(DIRANGE_X,F1,T1,"","SORT")
"RTN","DIP12",46,0)
 I T3]"" S DPP(DJ,"TXT")=DPP(DJ,"TXT")_" to "_T3
"RTN","DIP12",47,0)
O2 S DPP(DJ,"QCON")="I "_%
"RTN","DIP12",48,0)
 K DITYP Q
"RTN","DIP12",49,0)
 ;
"RTN","DIP12",50,0)
FT ;'FROM' AND 'TO' VALUES.  ALSO CALLED BY DIP1
"RTN","DIP12",51,0)
 ;BUILD 'F1', THE INTERNAL VALUE OF 'FROM'
"RTN","DIP12",52,0)
 S %=$G(DPP(DJ,"F")) I %="" S %=$G(DIPP(+$G(DIJ),"F"))
"RTN","DIP12",53,0)
 S F1=$P(%,U),F2=$P(%,U,2),F3=$P(%,U,3) S:F3="" F3=F2 S:$E(F1)="""" F1=""""_F1
"RTN","DIP12",54,0)
 I $G(DPP(DJ,"FCOMPUTED"))]"" N X M X=DPP(DJ,"FCOMPUTED") X X S Y=X D PAR^DIP1(1,Y),FRV^DIP1 S $P(DPP(1,"F"),U)=Y,(F2,F1)=X ;DO COMPUTATION NOW!!
"RTN","DIP12",55,0)
 ;BUILD 'T1', THE INTERNAL VALUE OF 'TO'
"RTN","DIP12",56,0)
 S %=$G(DPP(DJ,"T")) I %="" S %=$G(DIPP(+$G(DIJ),"T"))
"RTN","DIP12",57,0)
 S T1=$P(%,U),T2=$P(%,U,2),T3=$P(%,U,3) S:T3="" T3=T2
"RTN","DIP12",58,0)
 I $G(DPP(DJ,"TCOMPUTED"))]"" N X M X=DPP(DJ,"TCOMPUTED") X X S Y=X D PAR^DIP1(2,Y) S:DITYP=1&Y&(Y'[".") Y=Y_".24" S $P(DPP(1,"T"),U)=Y,(T2,T1)=X ;DO COMPUTATION NOW!!
"RTN","DIP12",59,0)
 Q 
"RTN","DIP12",60,0)
 ;
"RTN","DIP12",61,0)
CK ;VALIDATE FIELDS/DATA. CALLED BY DIP1
"RTN","DIP12",62,0)
 G QQ:X[U I X="@" S Y=X K DPP(DJ,"IX"),DPP(DJ,"PTRIX") Q
"RTN","DIP12",63,0)
 I $D(DITYP("D")) D  G:Y=-1 QQ Q  ;ASK FOR A DATE   EXTENDED DATA TYPE MIGHT BE DATE-VALUED
"RTN","DIP12",64,0)
 .N %DT S %DT=""
"RTN","DIP12",65,0)
 .S:$G(DITYP("D"))["T" %DT="T"
"RTN","DIP12",66,0)
 .S:$G(DITYP("D"))["S" %DT=%DT_"S"
"RTN","DIP12",67,0)
 .S %DT=%DT_$E("E",(DIFRTO="?"))
"RTN","DIP12",68,0)
 .D ^%DT I Y>0 D  S Y(0)=%DT
"RTN","DIP12",69,0)
 ..S %DT=Y N Y S Y=%DT X ^DD("DD") S %DT=Y
"RTN","DIP12",70,0)
 I $D(DITYP("S"))>9 D  G:Y=-1 QQ Q  ;ASK FOR A 'SET' VALUE   EXTENDED DATA TYPE MIGHT HAVE 'SET OF CODES'
"RTN","DIP12",71,0)
 . S Y=$G(DITYP("S","E",X)) I Y]"" S Y(0)=Y_" ("_X_")" W:DIFRTO="?" "    ",$$EZBLD^DIALOG(8146,Y) Q
"RTN","DIP12",72,0)
 . I $D(DITYP("S","I",X)) S Y=X,Y(0)=X_" ("_DITYP("S","I",X)_")" W:DIFRTO="?" "  "_DITYP("S","I",X) Q
"RTN","DIP12",73,0)
 . S D=$O(DITYP("S","E",X)) I D]"",$P(D,X)="" S Y=DITYP("S","E",D),Y(0)=Y_" ("_D_")" W:DIFRTO="?" $P(D,X,2,9)_"    ",$$EZBLD^DIALOG(8146,Y) Q  ;'USES INTERNAL CODE SUCH&SUCH'
"RTN","DIP12",74,0)
 . I DIFRTO'="?" S Y=X Q
"RTN","DIP12",75,0)
 . S Y=-1 Q
"RTN","DIP12",76,0)
 I +$P(X,"E")=X!(DITYP'=2) S Y=X Q
"RTN","DIP12",77,0)
QQ S Y=-1 D  Q:$G(DIQUIET)
"RTN","DIP12",78,0)
 .N I S I(1)=X,I(2)=$P($G(^DI(.81,DITYP,0)),U),DIERR=$$EZBLD^DIALOG(330,.I) ;'INVALID ENTRY'
"RTN","DIP12",79,0)
 W $C(7),"??",!?8,DIERR Q
"RTN","DIQ")
0^11^B72627374^B71954744
"RTN","DIQ",1,0)
DIQ ;SFISC/GFT - CAPTIONED TEMPLATE ;28NOV2016
"RTN","DIQ",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIQ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIQ",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIQ",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIQ",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIQ",7,0)
 ;GFT;;**19,64,74,81,99,129,133,999,1021,1035,1037,1053,1054**;
"RTN","DIQ",8,0)
 ;
"RTN","DIQ",9,0)
 ;
"RTN","DIQ",10,0)
 G INQ^DII
"RTN","DIQ",11,0)
 ;
"RTN","DIQ",12,0)
GET1(DIQGR,DA,DR,DIQGPARM,DIQGETA,DIQGERRA,DIQGIPAR) ;Extrinsic Function
"RTN","DIQ",13,0)
 ; file,record,field,parm,targetarray,errortargetarray,internal
"RTN","DIQ",14,0)
 I '$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIQ",15,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DIQ",16,0)
 G DDENTRY^DIQG
"RTN","DIQ",17,0)
 ;
"RTN","DIQ",18,0)
GETS(DIQGR,DA,DR,DIQGPARM,DIQGTA,DIQGERRA,DIQGIPAR) ;Procedure Call
"RTN","DIQ",19,0)
 ; file,record,field,parm,targetarray,errortargetarray,internal
"RTN","DIQ",20,0)
 I '$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIQ",21,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DIQ",22,0)
 N DIQGQERR
"RTN","DIQ",23,0)
 D DDENTRY^DIQGQ
"RTN","DIQ",24,0)
 I $G(DIQGQERR)]"" S DIERR=DIQGQERR
"RTN","DIQ",25,0)
 D:$G(DIQGERRA)]"" CALLOUT^DIEFU(DIQGERRA)
"RTN","DIQ",26,0)
 Q
"RTN","DIQ",27,0)
 ;
"RTN","DIQ",28,0)
 ;
"RTN","DIQ",29,0)
CAPTION(DD,DA,A,N,E) ;
"RTN","DIQ",30,0)
 ; Newing of Line Counter 'S' needs to be before call
"RTN","DIQ",31,0)
 N D0,DIQ,DIC,DIQS
"RTN","DIQ",32,0)
 S DIQ(0)=$G(A),DIC=^DIC(DD,0,"GL") I $G(DIA),DD=.6!(DD=1.1) S DIC=DIC_DIA_"," ;In DIQ(0), 'A' means AUDIT, 'R' means SHOW RECORD NUMBER
"RTN","DIQ",33,0)
 S E=$S($G(E)="":"N<0",1:"N]]"""_E_"""")
"RTN","DIQ",34,0)
 S N=$S($G(N)="":-1,1:$O(@(DIC_"DA,N)"),-1))
"RTN","DIQ",35,0)
 D R
"RTN","DIQ",36,0)
 S X=""
"RTN","DIQ",37,0)
 Q
"RTN","DIQ",38,0)
 ;
"RTN","DIQ",39,0)
GUY ;from DII
"RTN","DIQ",40,0)
 N N S N=-1
"RTN","DIQ",41,0)
R S:'$G(IOM) IOM=80 S:'$G(IOSL) IOSL=24,IOST="C-OTHER"
"RTN","DIQ",42,0)
 S:'$D(DTIME) DTIME=300 K DTOUT,DUOUT,DIRUT,DIR
"RTN","DIQ",43,0)
 N DIQDD,DIQAUDE,DIQAUDD,DIQZ,D,DL,D1,D2,D3,D4,D5,D6,D7,D8,D9,DIQE
"RTN","DIQ",44,0)
 S D0=DA,D=DIC_DA_",",DL=1,DIQDD=DD S:'$G(S) S=3
"RTN","DIQ",45,0)
 I '$D(DIQS) W !
"RTN","DIQ",46,0)
 E  D
"RTN","DIQ",47,0)
 .S DIQZ=0,A=0 F  S @("DIQZ=$O("_DIQS_"DIQZ))") Q:DIQZ=""  S @(DIQS_"DIQZ)=""""")
"RTN","DIQ",48,0)
 D 1(DA)
"RTN","DIQ",49,0)
 G Q
"RTN","DIQ",50,0)
 ;
"RTN","DIQ",51,0)
1(DA) ;recursive, for 1 entry or subentry
"RTN","DIQ",52,0)
 N DIQAUD
"RTN","DIQ",53,0)
 I $D(DIQS) D  ;old parameter -- undocumented
"RTN","DIQ",54,0)
 .S DIQZ=0,A=0 F  S @("DIQZ=$O("_DIQS_"DIQZ))") Q:DIQZ=""  D
"RTN","DIQ",55,0)
 ..S A=$O(^DD(DD,"B",DIQZ,0)) Q:'A
"RTN","DIQ",56,0)
 ..I $D(^DD(DD,A,0)) S C=$P(^(0),U,2) I C["C" D COM S @(DIQS_"DIQZ)=X")
"RTN","DIQ",57,0)
 I N<0,$D(^DD(DD,.001,0)) S W=.001,A=-1,Y=@("D"_(DL\2)) D W Q:'S  G A
"RTN","DIQ",58,0)
NUMBER I $G(DIQ(0))["R",DL=1 S W=.001,A=-1,O=$$EZBLD^DIALOG(7099),Y=D0 D W2 Q:'S  ;**CCO/NI THE WORD 'NUMBER'
"RTN","DIQ",59,0)
A I DIQ(0)["A" D  ;Get AUDIT TRAIL data
"RTN","DIQ",60,0)
 .N Z,D,SUB
"RTN","DIQ",61,0)
 .I DL=1 S DIQAUDD="",(DIQAUDE(0),DIQAUDE)=D0 F Z=2:2 Q:'$D(^DD(DIQDD,0,"UP"))  D
"RTN","DIQ",62,0)
 ..S A=DIQDD,DIQDD=^("UP"),(DIQAUDE,DIQAUDE(0))=$P(DIC,",",$L(DIC,",")-Z)_","_DIQAUDE,(DIQAUDD(0),DIQAUDD)=$O(^DD(DIQDD,"SB",A,0))_","_DIQAUDD
"RTN","DIQ",63,0)
 .E  S DIQAUDD=$G(DIQAUDD(0)),DIQAUDE=DIQAUDE(0) F A=3:2:DL S DIQAUDE=DIQAUDE_","_(@("D"_(A\2))),DIQAUDD=DIQAUDD_DIQAUDD(A-1)_","
"RTN","DIQ",64,0)
 .F Z=0:0 S Z=$O(^DIA(DIQDD,"B",DIQAUDE,Z)) Q:'Z  D
"RTN","DIQ",65,0)
 ..S D=$P($G(^DIA(DIQDD,Z,0)),U,3) Q:'D  ;get field number
"RTN","DIQ",66,0)
 ..I DIQAUDD]"" S D=$P(D,DIQAUDD,2,9)
"RTN","DIQ",67,0)
 ..E  I E["]]"!(N]]0) S SUB=$P($P($G(^DD(DIQDD,+D,0)),U,4),";") D
"RTN","DIQ",68,0)
 ...I N]]SUB S D=0 Q
"RTN","DIQ",69,0)
 ...N N S N=SUB I @E S D=0 Q
"RTN","DIQ",70,0)
 ..I D,D'["," S DIQAUD(D,Z)="" Q
"RTN","DIQ",71,0)
N S @("N=$O("_D_"N))") I N="" S N=-1 G END:DL#2,MISSAUD
"RTN","DIQ",72,0)
 I DL=1,@E G END
"RTN","DIQ",73,0)
 S DIQZ=$G(^(N)) I DIQZ]"" S A="" F  S A=$O(^DD(DD,"GL",N,A)) G N:A="" D  G Q:'S ;write out what's on one data node
"RTN","DIQ",74,0)
 .S W=$O(^(A,0)) Q:'W  I A S Y=$P(DIQZ,U,A) Q:Y=""
"RTN","DIQ",75,0)
 .E  S Y=$E(DIQZ,+$E(A,2,9),$P(A,",",2)) Q:Y?." "
"RTN","DIQ",76,0)
 .D W
"RTN","DIQ",77,0)
 I DL#2 S DIQZ=$O(^DD(DD,"GL",N,0,0)) G N:DIQZ="" S O=0,X=+$P(^DD(DD,DIQZ,0),U,2) X:$D(DICS) DICS E  G N
"RTN","DIQ",78,0)
 E  G MISSAUD:N'>0 S X=DD,O=-1,@("D"_(DL\2)_"=N") Q:$$STOP  I $D(DSC(X)) X DSC(X) E  G N ;we've found a new sub-entry
"RTN","DIQ",79,0)
 S DD(DL)=DD,D(DL)=D,N(DL)=N,DL=DL+1,DIQAUDD(DL)=DIQZ S:+N'=N N=""""_N_"""" S D=D_N_",",N=O,DD=X ;down a level
"RTN","DIQ",80,0)
FIND1 I DL#2=0 S N=0 N DIQAUDR K:$G(DIQAUDE) @("DIQE("_DIQAUDE_")") G N ;let's look for the 1st multiple
"RTN","DIQ",81,0)
WP I '$D(DIQS),$P(^DD(DD,.01,0),U,2)["W" S O=$$LABEL^DIALOGZ(DD,.01),C=$P(^DD(DD,.01,0),U,2) D  S DL=DL-1 D WPAUD($G(DIQAUDD(DL)),1) G UP:S Q
"RTN","DIQ",82,0)
 .N DIWF,DIWL,DIWR,DN,N,DD ;Word-processing field
"RTN","DIQ",83,0)
 .D DIQ^DIWW I $D(DN),'DN S S=0
"RTN","DIQ",84,0)
 S N=-1 D 1(DA) Q:'S
"RTN","DIQ",85,0)
UP S DL=DL-1,D=D(DL),DD=DD(DL),N=N(DL) Q:$$STOP  G N ;go back UP a level
"RTN","DIQ",86,0)
 ;
"RTN","DIQ",87,0)
MISSAUD I $G(DIQAUDE) S DIQE=DIQAUDE(0)_"," F  S DIQE=$O(^DIA(DIQDD,"B",DIQE)) Q:'DIQE  Q:DIQE-DIQAUDE  Q:$$STOP  I '$D(@("DIQE("_DIQE_")")) D  ;SHOW MISSING ENTRIES THAT WERE CAPTURED BY AUDIT TRAIL
"RTN","DIQ",88,0)
 .N E,DIQEMISS
"RTN","DIQ",89,0)
 .S E="" F  S E=$O(^DIA(DIQDD,"B",DIQE,E),-1) Q:'E  Q:$$STOP  I $P($G(^DIA(DIQDD,E,0)),U,3)=(DIQAUDD(DL)_",.01") D:'$G(DIQEMISS)  D WRITEAUD
"RTN","DIQ",90,0)
 ..D WRITE($$LABEL^DIALOGZ(DD,.01)_":") W ! S DIQEMISS=1 ;Write the label of the missing multiple
"RTN","DIQ",91,0)
 G UP
"RTN","DIQ",92,0)
 ;
"RTN","DIQ",93,0)
 ;
"RTN","DIQ",94,0)
WPAUD(FLD,DIQCHNGD) N DIWF,DIWL,DIWR,E,O,Z,W,N ;DIQCHNGD=0 means FLD is currently deleted.
"RTN","DIQ",95,0)
 Q:'$G(FLD)
"RTN","DIQ",96,0)
 S E="",DIWF=$E("N",C["L")_"W|",DIWL=7,DIWR=IOM
"RTN","DIQ",97,0)
 F  S E=$O(DIQAUD(FLD,E),-1) Q:'E  Q:$$STOP  D
"RTN","DIQ",98,0)
 .S W=""
"RTN","DIQ",99,0)
 .I $D(^DIA(DIQDD,E,0)) S Z=$P(^(0),U,4),W=W_" on "_$$FMTE^DILIBF($P(^(0),U,2),"IL") I Z]"" S W=W_" by User #"_Z
"RTN","DIQ",100,0)
 .S Z=$G(^(4.1)),O=$P(Z,U),Z=$P(Z,U,2) I O,$D(^DIC(19,O,0)) S W=W_"  ("_$P(^(0),U)_" Option)"
"RTN","DIQ",101,0)
 .I Z S O=+Z,Z=$P(Z,";",2) I Z]"",$D(@(U_Z_O_",0)")) S W=W_"  ("_$P(^(0),U)_" Protocol)"
"RTN","DIQ",102,0)
 .S X=$O(^DIA(DIQDD,E,2.14,0)) ;Do we have old text stored for this audited event?
"RTN","DIQ",103,0)
 .I 'DIQCHNGD,X S W=$TR($$EZBLD^DIALOG(8197.1),"""")_W_":" S DIQCHNGD=1 ;'DELETED'
"RTN","DIQ",104,0)
 .E  I X S W="Changed"_W_" from:" S DIQCHNGD=1
"RTN","DIQ",105,0)
 .E  S W=$$EZBLD^DIALOG(8197.3)_W S DIQCHNGD=0 ;'CREATED'
"RTN","DIQ",106,0)
 .W ?4 D WRITE(W)
"RTN","DIQ",107,0)
 .S W=0,X="" F  D  S W=$O(^DIA(DIQDD,E,2.14,W)) Q:W'>0!(S=0)  S X=^(W,0) D ^DIWP D
"RTN","DIQ",108,0)
 ..N W D LF
"RTN","DIQ",109,0)
 .D ^DIWW
"RTN","DIQ",110,0)
 K DIQAUD(FLD)
"RTN","DIQ",111,0)
 D LF Q
"RTN","DIQ",112,0)
 ;
"RTN","DIQ",113,0)
END Q:$$STOP
"RTN","DIQ",114,0)
 F DIQZ=0:0 S DIQZ=$O(DIQAUD(DIQZ)) Q:'DIQZ  I $D(^DD(DD,DIQZ,0)) D  ;write out audited DELETED fields
"RTN","DIQ",115,0)
 .N D W ?2,$P(^(0),U),":" I $P(^(0),U,2) D WPAUD(DIQZ,0) Q
"RTN","DIQ",116,0)
 .D PRINTAUD(DIQZ) Q:$$STOP
"RTN","DIQ",117,0)
 I S,$G(DIQ(0))["C",$D(@(D_"0)")) D ^DIQ1 ;Computed fields at this level -- ONLY IF ENTRY EXISTS
"RTN","DIQ",118,0)
 Q
"RTN","DIQ",119,0)
 ;
"RTN","DIQ",120,0)
W S O=$$LABEL^DIALOGZ(DD,W),C=$P(^DD(DD,W,0),U,2) I $D(DICS) X DICS E  Q
"RTN","DIQ",121,0)
VP I C["V" D  I $D(^DD(DD,W,0)) ;get naked back
"RTN","DIQ",122,0)
 .N F S F=$P(Y,";",2) I F["(",$D(@("^"_F_"0)"))#2 S F=+$P(^(0),U,2) I F S F=$O(^DD(DD,W,"V","B",F,0)) I F,$D(^DD(DD,W,"V",F,0)) S O=O_" ("_$P(^(0),U,4)_")"
"RTN","DIQ",123,0)
 D Y
"RTN","DIQ",124,0)
 I $D(DIQS) S:$D(@(DIQS_"O)")) @(DIQS_"O)=Y") S:$D(^(W)) @(DIQS_"W)=Y") Q
"RTN","DIQ",125,0)
W2 ;from DIQ1
"RTN","DIQ",126,0)
 N DIQX
"RTN","DIQ",127,0)
 S O=$E(O,1,253-$L(Y))_": "_Y
"RTN","DIQ",128,0)
 D  I $L(O)+DIQX>IOM!$D(DIQAUD(W)) Q:$$STOP  D
"RTN","DIQ",129,0)
 .S DIQX=$S($X:$X+1\40+1*40,W=.01!(W=.001):0,1:2)
"RTN","DIQ",130,0)
 W ?DIQX
"RTN","DIQ",131,0)
 D WRITE(O) D:$D(DIQAUD(W)) PRINTAUD(W) Q
"RTN","DIQ",132,0)
 ;
"RTN","DIQ",133,0)
PRINTAUD(FLD) N E
"RTN","DIQ",134,0)
 S E="" F  S E=$O(DIQAUD(FLD,E),-1) Q:'E  Q:$$STOP  D WRITEAUD
"RTN","DIQ",135,0)
 K DIQAUD(FLD) S @("DIQE("_DIQAUDE_")")=""
"RTN","DIQ",136,0)
 D LF Q
"RTN","DIQ",137,0)
 ;
"RTN","DIQ",138,0)
WRITEAUD N O,Z,W,N ;WRITE AN ENTRY FROM THE AUDIT TRAIL
"RTN","DIQ",139,0)
 S O=$G(^DIA(DIQDD,E,2)),N=$G(^(3))
"RTN","DIQ",140,0)
 I N="" S W=$$EZBLD^DIALOG(8197.1,O) ;**CCO/NI 'DELETED'
"RTN","DIQ",141,0)
 E  S W=$S(O]"":$$EZBLD^DIALOG(8197.2,O),1:$$EZBLD^DIALOG(8197.3)) ;**CCO/NI 'CHANGED FROM' OR 'CREATED'
"RTN","DIQ",142,0)
 I $D(^DIA(DIQDD,E,0)) S:$P(^(0),U,6)="i" W=$$EZBLD^DIALOG(8197.5) K Z S Z(3)=$P(^(0),U,4),Z(2)=$$DATE^DIUTL($P(^(0),U,2)),Z(1)=W,W=$$EZBLD^DIALOG(8197.4,.Z) ;**'ACCESSED'; CCO/NI  WHEN, WHO
"RTN","DIQ",143,0)
 W ?4 D WRITE(W)
"RTN","DIQ",144,0)
 K W S Z=$G(^DIA(DIQDD,E,4.1)),O=$P(Z,U),Z=$P(Z,U,2) I O,$D(^DIC(19,O,0)) S W="  ("_$P(^(0),U)_" Option)"
"RTN","DIQ",145,0)
 I Z S O=+Z,Z=$P(Z,";",2) I Z]"",$D(@(U_Z_O_",0)")) S W="  ("_$P(^(0),U)_" Protocol)"
"RTN","DIQ",146,0)
 I $D(W) D:$X+$L(W)>79 LF Q:'S  W ?(79-$L(W)),W
"RTN","DIQ",147,0)
 Q
"RTN","DIQ",148,0)
 ;
"RTN","DIQ",149,0)
WRITE(DIQW) N DIQWL
"RTN","DIQ",150,0)
 F  S DIQWL=IOM-$X W $E(DIQW,1,DIQWL) S DIQW=$E(DIQW,DIQWL+1,999) Q:DIQW=""  Q:$$STOP
"RTN","DIQ",151,0)
 Q
"RTN","DIQ",152,0)
 ;
"RTN","DIQ",153,0)
Y ;PRINT TEMPLATES CALL HERE    NAKED REFERENCE IS TO ^DD(FILE#,FIELD#,0)
"RTN","DIQ",154,0)
 I $G(Y)="" S Y="" Q
"RTN","DIQ",155,0)
TYPE I C["t" X $$OUTPUT^DIETLIBF Q  ;DATA TYPE IS IN FILE .81!
"RTN","DIQ",156,0)
 I C["O",$D(^(2)) X ^(2) Q
"RTN","DIQ",157,0)
S I C["S" D PARSET($$LANGSET,.Y) Q
"RTN","DIQ",158,0)
 I C["P",$D(@("^"_$P(^(0),U,3)_"0)")) S C=$P(^(0),U,2) Q:'$D(^(+Y,0))  S Y=$P(^(0),U) I $D(^DD(+C,.01,0)) S C=$P(^(0),U,2) G S
"RTN","DIQ",159,0)
 I C["V",+Y,Y["(",$D(@("^"_$P(Y,";",2)_"0)")) S C=$P(^(0),U,2) Q:'$D(^(+Y,0))  S Y=$P(^(0),U) I $D(^DD(+C,.01,0)) S C=$P(^(0),U,2) G S
"RTN","DIQ",160,0)
 Q:C'["D"  Q:'Y
"RTN","DIQ",161,0)
D S Y=$$NAKED^DIUTL("$$DATE^DIUTL(Y)") Q  ;GENERAL DATE OUTPUT --NEEDS TO PRESERVE THE NAKED INDICATOR
"RTN","DIQ",162,0)
 ;
"RTN","DIQ",163,0)
 ;
"RTN","DIQ",164,0)
 ;
"RTN","DIQ",165,0)
SET(FILE,FIELD,Y) ;GET EXTERNAL VERSION OF 'Y' FOR A SET FIELD
"RTN","DIQ",166,0)
 I $D(^DD(FILE,FIELD,0)) D PARSET($$LANGSET,.Y)
"RTN","DIQ",167,0)
 Q Y
"RTN","DIQ",168,0)
 ;
"RTN","DIQ",169,0)
PARSET(C,Y) ;FOR SPECIFIER C, CHANGE Y TO ITS EXTERNAL VALUE  called from DIDU & DDS11
"RTN","DIQ",170,0)
 N DIN,%
"RTN","DIQ",171,0)
 S DIN=Y,C=";"_C,%=$F(C,";"_Y_":") I % S Y=$P($E(C,%,999),";")
"RTN","DIQ",172,0)
 Q
"RTN","DIQ",173,0)
 ;
"RTN","DIQ",174,0)
LANGSET() ;USES NAKED REFERENCE TO ^DD(FILE,FIELD,0)
"RTN","DIQ",175,0)
 N C S C=$P(^(0),U,3)
"RTN","DIQ",176,0)
 I $G(DUZ("LANG"))>1 Q $$NAKED^DIUTL("$$SETOUT^DIALOGZ")
"RTN","DIQ",177,0)
 Q C
"RTN","DIQ",178,0)
 ;
"RTN","DIQ",179,0)
 ;
"RTN","DIQ",180,0)
DT D D:Y W Y Q
"RTN","DIQ",181,0)
H G H^DIO2
"RTN","DIQ",182,0)
 ;
"RTN","DIQ",183,0)
STOP() D LF Q 'S
"RTN","DIQ",184,0)
LF I '$D(DIQS),$X W ! S S=S+1
"RTN","DIQ",185,0)
 I '$D(DIOT(2)),$G(IOSL),$S('$D(DIWF):1,$P(DIWF,"B",2):$P(DIWF,"B",2),1:1)+$Y'<IOSL D
"RTN","DIQ",186,0)
 .I '$D(DX(0)),$G(IOST)?1"C".E D:S>(IOSL-3)  Q
"RTN","DIQ",187,0)
 ..N X,Y,DIR S DIR(0)="E" D ^DIR W ! S S='$D(DIRUT)
"RTN","DIQ",188,0)
 .I $G(^UTILITY($J,1))?1U1P1E.E D  S:Y=U!($D(DTOUT))!($D(DUOUT)) S=0
"RTN","DIQ",189,0)
 ..N S X ^(1)
"RTN","DIQ",190,0)
 .S $Y=0
"RTN","DIQ",191,0)
 Q
"RTN","DIQ",192,0)
 ;
"RTN","DIQ",193,0)
EN1 S DRX=DR
"RTN","DIQ",194,0)
EN2 S DR=$P(DRX,";",1),DRX=$P(DRX,";",2,999) D EN W ! G EN2:DRX]""&S
"RTN","DIQ",195,0)
 K DRX Q
"RTN","DIQ",196,0)
EN ;
"RTN","DIQ",197,0)
 N C,O,W,N,E,Z,D,DD S S=0 S:$D(DICSS) DICS=DICSS
"RTN","DIQ",198,0)
 I '$D(IOST)!'$D(IOSL)!'$D(IOM) S IOP="HOME" D ^%ZIS Q:POP  S:'$G(IOM) IOM=80
"RTN","DIQ",199,0)
 G Q:'$D(@(DIC_"0)")) S U="^",DD=+$P(^(0),U,2),DK=DD
"RTN","DIQ",200,0)
 I '$D(DR) S N=-1,O=""
"RTN","DIQ",201,0)
 E  S N=$P(DR,":"),N=$S(0[N:-1,+N=N:N-.000001,1:$E(N,1,$L(N)-1)_$C($A(N,$L(N))-1)),O=$P(DR,":",DR[":"+1) G EN1:DR[";"
"RTN","DIQ",202,0)
 S E="N<0" I O]"" S E=E_"!(N]"""_$S(+O=O:"?"")!(N>"_O_")",1:O_""")")
"RTN","DIQ",203,0)
 I '$D(DIQ(0)) N DIQ S DIQ(0)=""
"RTN","DIQ",204,0)
 D R S DA=D0
"RTN","DIQ",205,0)
Q K C,O,W,N,E,Z,D,DD,IOP Q
"RTN","DIQ",206,0)
 ;
"RTN","DIQ",207,0)
COM X $P(^(0),U,5,99) S C=$P($P(C,"J",2),",",2) I C?1N.E,X S X=$J(X,0,C)
"RTN","DIQG")
0^33^B42177802^B41416251
"RTN","DIQG",1,0)
DIQG ;SFISC/DCL - DATA RETRIEVAL PRIMITIVE ;7AUG2015
"RTN","DIQG",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIQG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIQG",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIQG",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIQG",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIQG",7,0)
 ;
"RTN","DIQG",8,0)
GET(DIQGR,DA,DR,DIQGPARM,DIQGETA,DIQGERRA,DIQGIPAR) ; file,rec,fld,parm,targetarray,errarray,int
"RTN","DIQG",9,0)
DDENTRY I $G(U)'="^" N U S U="^" ;COME HERE FROM EN3+11^DIQGDD AS WELL AS GET1+4^DIQ
"RTN","DIQG",10,0)
 I '$G(DA) N X S X(1)="RECORD" Q $$F(.X,2)
"RTN","DIQG",11,0)
 S DIQGIPAR=$G(DIQGIPAR),DIQGPARM=$G(DIQGPARM)
"RTN","DIQG",12,0)
 I 'DIQGIPAR N DIQGAUDR,DIQGAUDD S DIQGAUDD=+$P(DIQGPARM,"A",2) I DIQGAUDD D GET^DIAUTL(DIQGR,DA,DIQGAUDD,"DIQGAUDR")
"RTN","DIQG",13,0)
 N DFF,DIQGSI,DIQGDD,DIQGWPB,DIQGWPO S DIQGDD=DIQGPARM["D",DIQGWPB=DIQGPARM["B"
"RTN","DIQG",14,0)
 S DIQGWPO=1
"RTN","DIQG",15,0)
 N DIQGEY S DIQGEY("FILE")=$G(DIQGR),DIQGEY("RECORD")=$G(DA),DIQGEY("FIELD")=$G(DR)
"RTN","DIQG",16,0)
 I '$D(DIQGR) N X S X(1)="FILE" Q $$F(.X,1)
"RTN","DIQG",17,0)
 I 'DIQGR,'DIQGIPAR N X S X(1)="FILE" Q $$F(.X,12)
"RTN","DIQG",18,0)
DA D:$G(DA)["," IEN(DA,.DA)
"RTN","DIQG",19,0)
 I $G(DR)="" N X S X(1)="FIELD" Q $$F(.X,10)
"RTN","DIQG",20,0)
 I 'DIQGIPAR,'DIQGDD Q:$$N9^DIQGU(DIQGR,.DA) $$F(.DIQGEY,16) I '$D(^DD(DIQGR)) N X S X(1)="FILE" Q $$F(.X,18)
"RTN","DIQG",21,0)
 S DIQGETA=$G(DIQGETA) I DIQGETA["("&(DIQGETA'[")") N X S X(1)="TARGET ARRAY" Q $$F(.X,14)
"RTN","DIQG",22,0)
 I DIQGR S DFF=DIQGR,DIQGR=$S(DIQGDD:$$DDROOT(DIQGR),1:$$ROOT^DIQGU(DIQGR,.DA)) I DIQGR="" N X S X(1)="FILE and/or IEN" Q $$F(.X,4)
"RTN","DIQG",23,0)
DFF S DIQGSI=$$CREF(DIQGR) I '$D(DFF) S DFF=+$P($G(@DIQGSI@(0)),U,2) I 'DFF,DIQGPARM'["D" N X S X("FILE")=DIQGSI Q $$F(.X,6)  ;does the file exist?
"RTN","DIQG",24,0)
 I '$D(@DIQGSI@(DA)),'DIQGIPAR,DIQGPARM'["A" Q $$F(.DIQGEY,19)  ;Entry may have existed audited in the past
"RTN","DIQG",25,0)
 I '$G(DT) N DT S DT=$$DT^DIQGU($H)
"RTN","DIQG",26,0)
 N DIQGPI,DIQGZN S DIQGPI=DIQGPARM["I",DIQGZN=DIQGPARM["Z"
"RTN","DIQG",27,0)
 N %,%H,%T,I,J,N,X
"RTN","DIQG",28,0)
D0 S X=0,N="D0" F  S X=$O(DA(X)) Q:X'>0  S I=X,N=N_",D"_X
"RTN","DIQG",29,0)
 N @N
"RTN","DIQG",30,0)
 S @("D"_+$G(I)_"=DA") I $G(I) F J=I-1:-1:0 S @("D"_J_"=DA(I-J)")
"RTN","DIQG",31,0)
 N C,P,Y,DIQGDN,DIQGD4,DIQGDRN
"RTN","DIQG",32,0)
 S (X,Y)="",DIQGDRN=DR
"RTN","DIQG",33,0)
DD S DIQGDN="^DD("_$S(DIQGPARM["D":0,1:DFF)_")" ;name of ^DD
"RTN","DIQG",34,0)
FIELD I DR'?.N,$D(@DIQGDN@("B",DR)) S DIQGDRN=$O(^(DR,"")) I $O(^(DIQGDRN)) N X S X("FILE")=DIQGDN,X(1)=DR Q $$F(.X,15)
"RTN","DIQG",35,0)
 I DIQGDD,DIQGDRN'>0 D  I $E(DIQGDRN,1,6)="$$$ NO" N X S X(1)="ATTRIBUTE" Q $$F(.X,17)
"RTN","DIQG",36,0)
 .S DIQGDRN=$$DDN^DIQGU0(DR) Q:$E(DIQGDRN,1,6)="$$$ NO"
"RTN","DIQG",37,0)
 .S DIQGDN="^DD("_$P(DIQGDRN,"^")_")",DIQGDRN=$P(DIQGDRN,"^",2)
"RTN","DIQG",38,0)
 I DIQGDRN>0,$D(@DIQGDN@(DIQGDRN,0)) S DIQGD4=$P(^(0),"^",4),C=$P(^(0),"^",2),P=$P(DIQGD4,";") G:$P(DIQGD4,";",2)'>0 DIQ S Y=$P($G(@DIQGSI@(DA,P)),"^",$P(DIQGD4,";",2)) G DIQ
"RTN","DIQG",39,0)
TRYCOMP N X,DIQGS I 'DIQGIPAR D EXPR(DFF,DR) ;DON'T ALLOW COMPUTED EXPRESSIONS EXCEPT FROM $$GET1^DIQ
"RTN","DIQG",40,0)
 I $D(X) S C=Y G C:C["m" D CMPAUD(DR,$G(X("USED"))) I $D(X) X X Q X
"RTN","DIQG",41,0)
GIVEUP Q $$F(.DIQGEY,7)
"RTN","DIQG",42,0)
 ;
"RTN","DIQG",43,0)
DIQ I DIQGDRN=.001 S Y=DA ;AT THIS POINT, 'Y' IS THE VALUE OF THE ATTRIBUTE WE WANT
"RTN","DIQG",44,0)
 G BMW:C,REAL:C'["C"
"RTN","DIQG",45,0)
C I C["m" N X D  G:'$D(X) FE Q:DIQGWPO $NA(@DIQGETA) Q "" ;S X(1)="MULTILINE COMPUTED" Q $$F(.X,3)
"RTN","DIQG",46,0)
 .N D,DICMX
"RTN","DIQG",47,0)
 .I DIQGETA="" S X(1)="TARGET ARRAY for the MULTI-LINE COMPUTED FIELD" D BLD^DIALOG(202,.X) K X Q
"RTN","DIQG",48,0)
 .S DICMX="S @DIQGETA@(D"_$S(DIQGZN:",0",1:"")_")=X" ;"Z" PARAMETER SAYS TO PUT ZERO NODES IN MULTIPLE
"RTN","DIQG",49,0)
 .X $P(@DIQGDN@(DIQGDRN,0),U,5,999) ;XECUTE COMPUTED MULTIPLE
"RTN","DIQG",50,0)
 I DIQGDN="^DD(1.005)",DIQGDRN=1 S X=@DIQGSI@(DA,0)
"RTN","DIQG",51,0)
 N DCC,DIQGH,X,DFF S DIQGH=$G(DIERR),DCC=DIQGR,DFF=+$P(DCC,"(",2)
"RTN","DIQG",52,0)
 I $D(@DIQGDN@(DIQGDRN,9.01)),$D(^(9.1)) D CMPAUD(^(9.1),^(9.01)) I $D(X) X X I 1
"RTN","DIQG",53,0)
 E  S X="" X $P(@DIQGDN@(DIQGDRN,0),"^",5,999) ;HELLEVI
"RTN","DIQG",54,0)
 D:DIQGH'=$G(DIERR)
"RTN","DIQG",55,0)
 .N X
"RTN","DIQG",56,0)
 .D BLD^DIALOG(120,"FIELD")
"RTN","DIQG",57,0)
 I $G(X)=""!DIQGPI Q $G(X)
"RTN","DIQG",58,0)
CP I C["p",X S C=+$P(C,"p",2) I C,$D(^DIC(C,0,"GL")),$D(@(^("GL")_"0)")),$D(^(X,0)) Q $$EXTERNAL^DIDU(C,.01,"",$P(^(0),U))
"RTN","DIQG",59,0)
 Q $S(C["D":$$DATE^DIUTL(X),1:X)  ;***
"RTN","DIQG",60,0)
 ;
"RTN","DIQG",61,0)
REAL I $E($P(DIQGD4,";",2))="E" S Y=$E($G(@DIQGSI@(DA,P)),$E($P($P(DIQGD4,";",2),","),2,99),$P($P(DIQGD4,";",2),",",2)) S:Y?." " Y="" ;SPACES ARE NULL
"RTN","DIQG",62,0)
AUDIT I $G(DIQGAUDD) D  ;Is there an AUDIT TRAIL for the field?
"RTN","DIQG",63,0)
 .I $G(DIQGAUDR(DFF,$$DA^DIQGQ(.DA))) S Y="" Q  ;If entry was created after DIQGAUDD, we know there were no FIELD values!
"RTN","DIQG",64,0)
 .S P=$G(DIQGAUDR(DFF,$$DA^DIQGQ(.DA),DIQGDRN))
"RTN","DIQG",65,0)
 .I P S Y=$$DIA^DIAUTL(DIQGAUDD,DIQGAUDR,P)
"RTN","DIQG",66,0)
 .Q:C'["P"!'Y  N F S F=+$P(C,"P",2) Q:F=DIQGEY("FILE")&(Y=DA)
"RTN","DIQG",67,0)
 .S Y=$$GET1^DIQ(F,Y_",",.01,"A"_DIQGAUDD),C=$TR(C,"PO") ;Recurse to get old POINTER value (as long as recursion isn't infinite!)
"RTN","DIQG",68,0)
OUT I 'DIQGPI&(C["O"!(C["S")!(C["P")!(C["V")!(C["D")!(C["t"))&($D(@DIQGDN@(DIQGDRN,0))) S C=$P(^(0),"^",2) Q $$EXTERNAL^DIDU(+$P(DIQGDN,"(",2),DIQGDRN,"A",Y)  ;"ALLOW" bad data
"RTN","DIQG",69,0)
 Q $G(Y)
"RTN","DIQG",70,0)
 ;
"RTN","DIQG",71,0)
BMW ;PUT WORD-PROCESSING FIELD INTO @DIQGETA
"RTN","DIQG",72,0)
 I C,$P(^DD(+C,.01,0),"^",2)["W" Q:DIQGWPB "$CREF$"_DIQGR_DA_","_$$Q^DIQGU(P)_")" D  G:X="" FE Q:DIQGWPO $NA(@DIQGETA) Q:DIQGIPAR "$WP$" Q ""
"RTN","DIQG",73,0)
 .I DIQGETA']"" K X S X(1)="TARGET ARRAY" D BLD^DIALOG(202,.X) S X="" Q
"RTN","DIQG",74,0)
 .S X=DIQGR_DA_","_$$Q^DIQGU(P)_")"
"RTN","DIQG",75,0)
 .I '$O(@X@(0)) S X="" Q
"RTN","DIQG",76,0)
 .I DIQGZN M @DIQGETA=@X K @DIQGETA@(0) Q
"RTN","DIQG",77,0)
 .S Y=0 F  S Y=$O(@X@(Y)) Q:Y'>0  I $D(^(Y,0)) S @DIQGETA@(Y)=^(0)
"RTN","DIQG",78,0)
 .Q
"RTN","DIQG",79,0)
 I C,$P(^DD(+C,.01,0),"^",2)["M" Q $$F(.DIQGEY,11)
"RTN","DIQG",80,0)
 I DIQGPI!(DIQGDD) Q $G(Y)
"RTN","DIQG",81,0)
 Q $$F(.DIQGEY,8)
"RTN","DIQG",82,0)
CREF(X) N L,X1,X2,X3 S X1=$P(X,"("),X2=$P(X,"(",2,99),L=$L(X2),X3=$TR($E(X2,L),",)"),X2=$E(X2,1,(L-1))_X3 Q X1_$S(X2]"":"("_X2_")",1:"")
"RTN","DIQG",83,0)
WP(DIQGSA,DIQGTA,DIQGZN,DIQGP) N DIQG S DIQG=0 F  S DIQG=$O(@DIQGSA@(DIQG)) Q:DIQG'>0  I $D(^(DIQG,0)) S @$S(DIQGZN:"@DIQGTA@(DIQG,0)",1:"@DIQGTA@(DIQG)")=^(0)
"RTN","DIQG",84,0)
 Q:DIQGP "$WP$" Q ""
"RTN","DIQG",85,0)
DY(Y) Q $$DATE^DIUTL(Y)  ;***
"RTN","DIQG",86,0)
IEN(IEN,DA) S DA=$P(IEN,",") N I F I=2:1 Q:$P(IEN,",",I)=""  S DA(I-1)=$P(IEN,",",I)
"RTN","DIQG",87,0)
 Q
"RTN","DIQG",88,0)
DDROOT(X) Q:'$D(^DD(X)) "" Q "^DD("_X_","
"RTN","DIQG",89,0)
 ;
"RTN","DIQG",90,0)
CMPAUD(DEXPR,DIQGS) ;DEXPR is Expression, DIQGS is string of Fields used
"RTN","DIQG",91,0)
 Q:'$G(DIQGAUDD)
"RTN","DIQG",92,0)
 N I,F,FD,A
"RTN","DIQG",93,0)
 F I=1:1 S F=$P(DIQGS,";",I) Q:F=""  D
"RTN","DIQG",94,0)
 .S A=$G(DIQGAUDR(+F,$$DA^DIQGQ(.DA),$P(F,U,2)))
"RTN","DIQG",95,0)
 .I A S DIQGS(1,+F,$P(F,U,2))=""""_$$CONVQQ^DILIBF($$DIA^DIAUTL(DIQGAUDD,+F,A))_""""
"RTN","DIQG",96,0)
 S DIQGS("TODAY")=DIQGAUDD\1,DIQGS("TODAY","DATE")=1,DIQGS("NOW")=DIQGAUDD,DIQGS("NOW","DATE")=1 ;'TODAY' is the old date!
"RTN","DIQG",97,0)
 ;now we call DICOMP with old (audit) values plugged in to the field's Computed Expression --
"RTN","DIQG",98,0)
 D EXPR(DIQGAUDR,DEXPR)
"RTN","DIQG",99,0)
 Q
"RTN","DIQG",100,0)
EXPR(DIFILE,DIEXPR) I DIQGPI K X Q:$TR(DIEXPR," 1234567890.?")=""  S DIEXPR="INTERNAL("_DIEXPR_")"
"RTN","DIQG",101,0)
 D EXPR^DICOMP(DIFILE,"",DIEXPR,.DIQGS)
"RTN","DIQG",102,0)
 I 'DIQGPI,$G(Y)["D",Y'["m",$D(X)#2 S X=X_" S X=$$DATE^DIUTL(X)"
"RTN","DIQG",103,0)
 Q
"RTN","DIQG",104,0)
 ;
"RTN","DIQG",105,0)
F(DIQGEY,X) D BLD^DIALOG($P($T(TXT+X),";",4),.DIQGEY)
"RTN","DIQG",106,0)
FE I $G(DIQGERRA)]"" D CALLOUT^DIEFU(DIQGERRA)
"RTN","DIQG",107,0)
 Q ""
"RTN","DIQG",108,0)
TXT ;;
"RTN","DIQG",109,0)
 ;;file root/ref invalid;202;1
"RTN","DIQG",110,0)
 ;;record invalid;202;2
"RTN","DIQG",111,0)
 ;;multiline computed;520;3
"RTN","DIQG",112,0)
 ;;file ref invalid;202;4
"RTN","DIQG",113,0)
 ;;field name/number invalid;202;5
"RTN","DIQG",114,0)
 ;;DD ref for file/field invalid;401;6
"RTN","DIQG",115,0)
 ;;unable to find field name;200;7
"RTN","DIQG",116,0)
 ;;unable to identify type of data in DD;510;8
"RTN","DIQG",117,0)
 ;;unable to resolve extended ref;501;9
"RTN","DIQG",118,0)
 ;;field ref missing;202;10
"RTN","DIQG",119,0)
 ;;multiple field - invalid parameters;309;11
"RTN","DIQG",120,0)
 ;;file number not passed or invalid;202;12
"RTN","DIQG",121,0)
 ;;;;13
"RTN","DIQG",122,0)
 ;;invalid target array;202;14
"RTN","DIQG",123,0)
 ;;ambiguous field name;505;15
"RTN","DIQG",124,0)
 ;;record unavailable;602;16
"RTN","DIQG",125,0)
 ;;invalid attribute;202;17
"RTN","DIQG",126,0)
 ;;file not found;202;18
"RTN","DIQG",127,0)
 ;;record entry does not exist;601;19
"RTN","DIQG",128,0)
 ;;;;20
"RTN","DIQGDD")
0^34^B36441864^B18255834
"RTN","DIQGDD",1,0)
DIQGDD ;SFISC/DCL - DATA DICTIONARY ATTRIBUTE RETRIEVER ;7FEB2017
"RTN","DIQGDD",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2015;Build 139
"RTN","DIQGDD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIQGDD",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIQGDD",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIQGDD",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIQGDD",7,0)
 ;
"RTN","DIQGDD",8,0)
 ;
"RTN","DIQGDD",9,0)
GET(DIQGR,DA,DR,DIQGPARM,DIQGETA,DIQGERRA,DIQGIPAR) ;
"RTN","DIQGDD",10,0)
EN3 I $G(U)'="^" N U S U="^" ;COME HERE FROM GET1^DID
"RTN","DIQGDD",11,0)
 I $G(DIQGIPAR)'["A" K DIERR,^TMP("DIERR",$J)
"RTN","DIQGDD",12,0)
 I $G(DIQGR)'>0 N X S X(1)="FILE" Q $$F^DIQG(.X,1)
"RTN","DIQGDD",13,0)
 I DIQGR=1,DA]"" S DIQGR=DA,DA="" ; BACKWARD COMPATIBILITY TO HANDLE FILE 1 $$GET1^DID(1,62.3,"","GLOBAL NAME") ;p7
"RTN","DIQGDD",14,0)
 N DIFILE I $G(DA)="" S DA=DIQGR,DIQGR=1,DIFILE=1 I '$D(^DIC(DA,0)) S X(1)="FILE" Q $$F^DIQG(.X,1) ;LOOK IT UP IN FILE OF FILES (#1)
"RTN","DIQGDD",15,0)
 ;S DIQGPARM=$G(DIQGPARM)_"D"
"RTN","DIQGDD",16,0)
 I DA'?.N,$D(^DD(DIQGR,"B",DA)) S DA=$O(^(DA,"")) I $O(^(DA)) D 200 Q ""
"RTN","DIQGDD",17,0)
 I DA'>0 D 200 Q ""
"RTN","DIQGDD",18,0)
 I DR="REQUIRED IDENTIFIERS" G RI^DIQGDDU
"RTN","DIQGDD",19,0)
 N DIQGSAL ;N DRSV S DRSV=DR N DR
"RTN","DIQGDD",20,0)
 D BLDSAL($G(DIFILE),DR,.DIQGSAL) I $D(DIQGSAL)<9 D 202("ATTRIBUTE") Q ""
"RTN","DIQGDD",21,0)
 S DIQGSAL=DR
"RTN","DIQGDD",22,0)
 I '$G(DIFILE) N DR S DIQGPARM=$G(DIQGPARM)_"D" Q $$ONEATT(DIQGR,DA,.DIQGSAL,.DIQGETA) ;WE'RE GETTING AN ATTRIBUTE OF A FIELD
"RTN","DIQGDD",23,0)
 ;
"RTN","DIQGDD",24,0)
 S DR=$$ATRBT(1,DR) I 'DR D 202("ATTRIBUTE") Q ""
"RTN","DIQGDD",25,0)
 G DDENTRY^DIQG ;WE'RE GETTING AN ATTRIBUTE OF AN ENTIRE FILE
"RTN","DIQGDD",26,0)
 ;
"RTN","DIQGDD",27,0)
 ;
"RTN","DIQGDD",28,0)
FIELD(DIQGR,DA,DR,DIQGPARM,DIQGTA,DIQGERRA,DIQGIPAR) ;
"RTN","DIQGDD",29,0)
EN1 N DIQGERR,DIQGEY,DIQGSAL,DIQGFNUL,DIQGSALX ;FROM FIELD^DID
"RTN","DIQGDD",30,0)
 S DIQGEY(1)=$G(DIQGR)
"RTN","DIQGDD",31,0)
 I $G(U)'="^" N U S U="^"
"RTN","DIQGDD",32,0)
 I $G(DIQGIPAR)'["A" K DIERR,^TMP("DIERR",$J)
"RTN","DIQGDD",33,0)
 I $G(DIQGR)'>0 D 202("FILE") Q
"RTN","DIQGDD",34,0)
 I $G(DA)']"" D 202("FIELD") Q
"RTN","DIQGDD",35,0)
 I $D(^DD(DIQGR,0))[0 D 202("FILE") Q
"RTN","DIQGDD",36,0)
 I $G(DIQGTA)']"" D 202("TARGET ARRAY") Q
"RTN","DIQGDD",37,0)
 S DIQGPARM=$G(DIQGPARM)_"D",DIQGFNUL=DIQGPARM["N" ;DO WE WANT NULL VALUES?
"RTN","DIQGDD",38,0)
 I DA'?.N,$D(^DD(DIQGR,"B",DA)) S DA=$O(^(DA,"")) I $O(^(DA)) N X S X(1)=DA,X("FILE")=DIQGR D BLD^DIALOG(505,.X),FE Q
"RTN","DIQGDD",39,0)
 I DA'>0 S DIQGEY(3)=DA D 200 Q
"RTN","DIQGDD",40,0)
 I $D(^DD(DIQGR,DA,0))[0 S DIQGEY(3)=DA D 200 Q
"RTN","DIQGDD",41,0)
 D BLDSAL(0,.DR,.DIQGSAL)
"RTN","DIQGDD",42,0)
 I '$D(DIQGSAL),'$D(DIERR) D 200 Q
"RTN","DIQGDD",43,0)
 I '$D(DIQGSAL) Q
"RTN","DIQGDD",44,0)
 S DIQGSAL="" F  S DIQGSAL=$O(DIQGSAL(DIQGSAL)) Q:DIQGSAL=""  D  ;NOW DIQGSAL HOLDS LIST OF ATTRIBUTES FOR WHICH WE WANT VALUES
"RTN","DIQGDD",45,0)
 .S DIQGSALX=$$ONEATT(DIQGR,DA,.DIQGSAL,.DIQGTA)
"RTN","DIQGDD",46,0)
 .I DIQGSALX]"" S @DIQGTA@(DIQGSAL)=DIQGSALX Q
"RTN","DIQGDD",47,0)
 .Q:DIQGFNUL
"RTN","DIQGDD",48,0)
 .S @DIQGTA@(DIQGSAL)=DIQGSALX
"RTN","DIQGDD",49,0)
 .Q
"RTN","DIQGDD",50,0)
 Q
"RTN","DIQGDD",51,0)
 ;
"RTN","DIQGDD",52,0)
 ;
"RTN","DIQGDD",53,0)
ONEATT(DIQGR,DA,DIQGSAL,DIQGTA) ;FOR FIELD DA IN FILE DIQGR, GET ATTRIBUTE 'DIQGSAL'
"RTN","DIQGDD",54,0)
 N A,T,DIQGSALX,DIQGTAXX
"RTN","DIQGDD",55,0)
 S:$G(DIQGTA)]"" DIQGTAXX=$S('$D(DIQGSAL(DIQGSAL,"#(word-processing)")):DIQGTA,1:$$OREF(DIQGTA)_$$Q(DIQGSAL)_")")
"RTN","DIQGDD",56,0)
 I '$D(^DD(DIQGR,DA,0)) D BLD^DIALOG(601),FE Q ""
"RTN","DIQGDD",57,0)
 I $P($P(^DD(DIQGR,DA,0),U,2),"t",2) D  I $G(DIQGSALX)]"" Q DIQGSALX ;GFT: IS THIS AN EXTENDED DATA TYPE?
"RTN","DIQGDD",58,0)
 .S A=$$GETMETH^DIETLIBF(DIQGR,DA,DIQGSAL) I A]"" S DIQGSALX=A Q  ;FIND THE ATTRIBUTE AS A 'METHOD'
"RTN","DIQGDD",59,0)
 .S A=$$GETPROP^DIETLIBF(DIQGR,DA,DIQGSAL) I A]"" S DIQGSALX=A  ;FIND THE ATTRIBUTE AS A 'PROPERTY'
"RTN","DIQGDD",60,0)
 .I DIQGSAL="TYPE" S DIQGSALX=$P(^DI(.81,+$P($P(^DD(DIQGR,DA,0),U,2),"t",2),0),U) ;'TYPE' EQUALS AN ENTRY IN FILE .81
"RTN","DIQGDD",61,0)
 S A=$P(^DD(DIQGR,DA,0),U,2),T=$P(^(0),U,5,99)
"RTN","DIQGDD",62,0)
 ;This line temporarily removed until functionality can be documented in the Developer Guide
"RTN","DIQGDD",63,0)
 ;I DIQGSAL="POINTER" I A'["P",A'["p" Q "" ;DON'T SHOW A 'SET OF CODES' FOR A 'POINTER'
"RTN","DIQGDD",64,0)
 I DIQGSAL="SET OF CODES",A["S" Q $P(^(0),U,3)
"RTN","DIQGDD",65,0)
 I DIQGSAL="LAYGO",A["P" Q $S(A["'":"NO",1:"YES")
"RTN","DIQGDD",66,0)
 I DIQGSAL="EARLIEST DATE",A["D" N Y S Y="<X!(",Y=$S(T'[Y:"",1:+$P($P(T,Y,2),">X")) X ^DD("DD") Q Y
"RTN","DIQGDD",67,0)
 I DIQGSAL="SECONDS ALLOWED",A["D" Q $P("NO^YES",U,$P(T,"""",2)["S"+1)
"RTN","DIQGDD",68,0)
 I DIQGSAL="TIME OF DAY",A["D" Q $P("NO^YES",U,$P(T,"""",2)["T"+1)
"RTN","DIQGDD",69,0)
 I DIQGSAL="TIME REQUIRED",A["D" Q $P("NO^YES",U,$P(T,"""",2)["R"+1)
"RTN","DIQGDD",70,0)
 I DIQGSAL="IMPRECISE DATE",A["D" Q $P("YES^NO",U,$P(T,"""",2)["X"+1)
"RTN","DIQGDD",71,0)
 I DIQGSAL="CODE TO SET POINTER SCREEN",A["P" Q $G(^(12.1))
"RTN","DIQGDD",72,0)
 I DIQGSAL="FIELD LENGTH" Q $$FL^DIQGDDU(DIQGR,DA)
"RTN","DIQGDD",73,0)
 I $D(DIQGSAL(DIQGSAL))#2 Q $$GET^DIQG("^DD("_DIQGR_",",DA,DIQGSAL(DIQGSAL),DIQGPARM,.DIQGTAXX,"","1A") ;GET ATTRIBUTES FROM DATA DICTIONARY
"RTN","DIQGDD",74,0)
 Q $G(DIQGSALX)
"RTN","DIQGDD",75,0)
 ;
"RTN","DIQGDD",76,0)
 ;
"RTN","DIQGDD",77,0)
 ;
"RTN","DIQGDD",78,0)
BLDSAL(DIQGTYPE,DIQGDR,DIQGVALA) ;DIQGTYPE=1 for FILE and 0 for FIELD, DIQGDR=string/array, DIQGVALA= OUTPUT: valid attribute list array
"RTN","DIQGDD",79,0)
 ; If DIQGDR is an array pass by reference
"RTN","DIQGDD",80,0)
 I $G(DIQGDR)="*" D LIST^DIQGDDT($S(DIQGTYPE=1:"FILETXT",1:"FIELDTXT"),.DIQGVALA,"",3) M:DIQGTYPE'=1 DIQGVALA=^DI(.86,"B"),DIQGVALA=^DI(.87,"B") Q  ;GET ALL ATTRIBUTE NAMES, INCLUDING METHODS AND PROPERTIES
"RTN","DIQGDD",81,0)
 N DIQGER,DIQGI,DIQGX,DIQGY D LIST^DIQGDDT($S(DIQGTYPE=1:"FILETXT",1:"FIELDTXT"),.DIQGX,"",3) ;PUT LIST OF ATTRIBUTES INTO DIQGX ARRAY!
"RTN","DIQGDD",82,0)
 M DIQGX=^DI(.86,"B"),DIQGX=^DI(.87,"B") ;MOVE PROPERTY AND METHOD NAMES INTO THE ARRAY, TOO!
"RTN","DIQGDD",83,0)
 I $G(DIQGDR)]"" F DIQGI=1:1 S DIQGY=$P(DIQGDR,";",DIQGI) Q:DIQGY=""  D
"RTN","DIQGDD",84,0)
 .I '$D(DIQGX(DIQGY)) S DIQGER(4)=DIQGY D 200 Q
"RTN","DIQGDD",85,0)
 .S DIQGVALA(DIQGY)=$G(DIQGX(DIQGY)) S:$D(DIQGX(DIQGY,"#(word-processing)")) DIQGVALA(DIQGY,"#(word-processing)")=DIQGX(DIQGY)
"RTN","DIQGDD",86,0)
 Q:$D(DIQGVALA)
"RTN","DIQGDD",87,0)
 S DIQGY="" F  S DIQGY=$O(DIQGDR(DIQGY)) Q:DIQGY=""  D
"RTN","DIQGDD",88,0)
 .I '$D(DIQGX(DIQGY)) S DIQGER(4)=DIQGY D 200 Q
"RTN","DIQGDD",89,0)
 .S DIQGVALA(DIQGY)=DIQGX(DIQGY) S:$D(DIQGX(DIQGY,"#(word-processing)")) DIQGVALA(DIQGY,"#(word-processing)")=DIQGX(DIQGY)
"RTN","DIQGDD",90,0)
 .Q
"RTN","DIQGDD",91,0)
 Q
"RTN","DIQGDD",92,0)
 ;
"RTN","DIQGDD",93,0)
XDR(DIQGR,DR,DIQGERR) ;DIQGR DD FILE NUMBER EITHER 1 OR 0
"RTN","DIQGDD",94,0)
 ;DR IS DR STRING TO CONVERT TO NUMERIC DR STRING
"RTN","DIQGDD",95,0)
 S DIQGR=+$G(DIQGR),DR=$G(DR)
"RTN","DIQGDD",96,0)
 N I,X,XDR D LIST^DIQGDDT($S(DIQGR=1:"FILETXT",1:"FIELDTXT"),.X,4,3)
"RTN","DIQGDD",97,0)
 I $G(DR)]"" S (X,XDR)="" F I=1:1 S X=$P(DR,";",I) Q:X=""  D
"RTN","DIQGDD",98,0)
 .I '$D(X(X)) S DIQGERR(X)="" Q
"RTN","DIQGDD",99,0)
 .S XDR=XDR_X(X)_";" Q
"RTN","DIQGDD",100,0)
 I $D(DR)>1 S (X,XDR)="" F  S X=$O(DR(X)) Q:X=""  D:'$D(X(X))  S:X]"" XDR=XDR_X(X)_";"
"RTN","DIQGDD",101,0)
 .I '$D(X(X)) S DIQGERR(X)="" Q
"RTN","DIQGDD",102,0)
 .S XDR=XDR_X(X)_";" Q
"RTN","DIQGDD",103,0)
 Q XDR
"RTN","DIQGDD",104,0)
 ;
"RTN","DIQGDD",105,0)
ATRBT(TYPE,ATRIB) ;EXTRINSIC FUNCTION $$TEST IF VALID ATTRIBUTE
"RTN","DIQGDD",106,0)
 ;TYPE 0 OR 1 - FIELD=0, FILE=1 (^DD(0) OR ^DD(1))
"RTN","DIQGDD",107,0)
 ;ATRIB=ATTRIBUTE BEING REQUESTED
"RTN","DIQGDD",108,0)
 Q:ATRIB']"" 0
"RTN","DIQGDD",109,0)
 N X D LIST^DIQGDDT($S(TYPE=1:"FILETXT",1:"FIELDTXT"),.X,,3)
"RTN","DIQGDD",110,0)
 Q $G(X(ATRIB))
"RTN","DIQGDD",111,0)
 ;
"RTN","DIQGDD",112,0)
 ;
"RTN","DIQGDD",113,0)
DR(TYPE) ;TYPE=1,FILE OR 0,FIELD AND RETURNS DR STRING FOR ALL ATTRIBUTES IN INTERNAL FORM (ATTRIBUTE FIELD NUMBERS 3RD ;-PIECE
"RTN","DIQGDD",114,0)
 S TYPE=+$G(TYPE)
"RTN","DIQGDD",115,0)
 N X,Y
"RTN","DIQGDD",116,0)
 D LIST^DIQGDDT($S(TYPE=1:"FILETXT",1:"FIELDTXT"),.X,3)
"RTN","DIQGDD",117,0)
 S (X,Y)=.01 F  S Y=$O(X(Y)) Q:Y'>0  S X=X_";"_Y
"RTN","DIQGDD",118,0)
 Q X
"RTN","DIQGDD",119,0)
 ;
"RTN","DIQGDD",120,0)
FILELST(DIDARRAY) ;PASS TARGET ARRAY BY REFERENCE * * LIST FILE ATTRIBUTES * *
"RTN","DIQGDD",121,0)
EN4 N EQL,TP,TYPE,DIQGDFLG
"RTN","DIQGDD",122,0)
 S TYPE="FILETXT",DIQGDFLG="L"
"RTN","DIQGDD",123,0)
 G ENLST^DIQGDDT
"RTN","DIQGDD",124,0)
 ;
"RTN","DIQGDD",125,0)
FIELDLST(DIDARRAY) ;PASS TARGET ARRAY BY REFERENCE * * LIST FIELD ATTRIBUTES * *
"RTN","DIQGDD",126,0)
EN5 N EQL,TP,TYPE,DIQGDFLG
"RTN","DIQGDD",127,0)
 S TYPE="FIELDTXT",DIQGDFLG="L"
"RTN","DIQGDD",128,0)
 G ENLST^DIQGDDT
"RTN","DIQGDD",129,0)
 ;
"RTN","DIQGDD",130,0)
OREF(X) N X1,X2 S X1=$P(X,"(")_"(",X2=$$OR2($P(X,"(",2)) Q:X2="" X1 Q X1_X2_","
"RTN","DIQGDD",131,0)
 ;
"RTN","DIQGDD",132,0)
OR2(%) Q:%=")"!(%=",") "" Q:$L(%)=1 %  S:"),"[$E(%,$L(%)) %=$E(%,1,$L(%)-1) Q %
"RTN","DIQGDD",133,0)
 ;
"RTN","DIQGDD",134,0)
Q(%Z) S %Z(%Z)="",%Z=$Q(%Z("")) Q $E(%Z,4,$L(%Z)-1)
"RTN","DIQGDD",135,0)
 ;
"RTN","DIQGDD",136,0)
200 D BLD^DIALOG(200),FE Q  ;ERROR MESSAGE
"RTN","DIQGDD",137,0)
 ;
"RTN","DIQGDD",138,0)
202(E) N X S X(1)=E
"RTN","DIQGDD",139,0)
 D BLD^DIALOG(202,.X),FE
"RTN","DIQGDD",140,0)
 Q
"RTN","DIQGDD",141,0)
FE I $G(DIQGERRA)]"" D CALLOUT^DIEFU(DIQGERRA)
"RTN","DIQGDD",142,0)
 Q
"RTN","DIQGDDU")
0^36^B6195883^B5433403
"RTN","DIQGDDU",1,0)
DIQGDDU ;SFISC/DCL - DATA DICTIONARY UTILITIES ;13AUG2015
"RTN","DIQGDDU",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIQGDDU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIQGDDU",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIQGDDU",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIQGDDU",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIQGDDU",7,0)
 ;
"RTN","DIQGDDU",8,0)
 Q
"RTN","DIQGDDU",9,0)
FL(DIQGFILE,DIQGFLD) ;Return field length
"RTN","DIQGDDU",10,0)
 ;Short version of DIOS1
"RTN","DIQGDDU",11,0)
 ;In:
"RTN","DIQGDDU",12,0)
 ;  DIQGFILE = file#
"RTN","DIQGDDU",13,0)
 ;  DIQGFLD  = field#
"RTN","DIQGDDU",14,0)
 ;
"RTN","DIQGDDU",15,0)
 I $G(DIQGFILE)'>0 D ERR202("FILE NUMBER") Q ""
"RTN","DIQGDDU",16,0)
 I $G(DIQGFLD)'>0 D ERR202("FIELD NUMBER") Q ""
"RTN","DIQGDDU",17,0)
 ;
"RTN","DIQGDDU",18,0)
 N DD,DIIT,DN,W
"RTN","DIQGDDU",19,0)
 S DD=$G(^DD(DIQGFILE,DIQGFLD,0))
"RTN","DIQGDDU",20,0)
 I DD?."^" D ERR1700("DD FOR FILE#"_DIQGFILE_", FIELD#"_DIQGFLD_" DOES NOT EXIST") Q ""
"RTN","DIQGDDU",21,0)
 ;
"RTN","DIQGDDU",22,0)
 S W=0,DN=$P(DD,"^",2),DIIT=$P(DD,"^",5,999)
"RTN","DIQGDDU",23,0)
 ;
"RTN","DIQGDDU",24,0)
 I DN S W=$$FL(+DN,.01)
"RTN","DIQGDDU",25,0)
 E  I DN["t",$$GETPROP^DIETLIBF(DIQGFILE,DIQGFLD,"FIELD LENGTH")]"" S W=$$GETPROP^DIETLIBF(DIQGFILE,DIQGFLD,"FIELD LENGTH")
"RTN","DIQGDDU",26,0)
 E  I DN["W" S W=""
"RTN","DIQGDDU",27,0)
 E  I DN["P" S W=$$FL(+$P(DN,"P",2),.01)
"RTN","DIQGDDU",28,0)
 E  I DN["J" S W=+$P(DN,"J",2)
"RTN","DIQGDDU",29,0)
 ;
"RTN","DIQGDDU",30,0)
 E  I DN["S" D
"RTN","DIQGDDU",31,0)
 . N C,C1,P
"RTN","DIQGDDU",32,0)
 . S C=$P(DD,U,3)
"RTN","DIQGDDU",33,0)
 . F P=1:1 S C1=$P(C,";",P) Q:C1=""  S W=$$MAX(W,$L($P(C1,":",2)))
"RTN","DIQGDDU",34,0)
 ;
"RTN","DIQGDDU",35,0)
 E  I DN["D" D
"RTN","DIQGDDU",36,0)
 . N D
"RTN","DIQGDDU",37,0)
 . S D=$P($P(DIIT,"S %DT=""",2,999),"""")
"RTN","DIQGDDU",38,0)
 . S W=$S(D["S"&(D["T"):21,D["T":18,1:12)
"RTN","DIQGDDU",39,0)
 ;
"RTN","DIQGDDU",40,0)
 E  I DN["V" D
"RTN","DIQGDDU",41,0)
 . N N
"RTN","DIQGDDU",42,0)
 . S N=0
"RTN","DIQGDDU",43,0)
 . F  S N=$O(^DD(DIQGFILE,DIQGFLD,"V",N)) Q:'N  S:$G(^(N,0)) W=$$MAX(W,$$FL(+^(0),.01))
"RTN","DIQGDDU",44,0)
 ;
"RTN","DIQGDDU",45,0)
 E  I DIIT["$L(X)>" S W=+$P(DIIT,"$L(X)>",2)
"RTN","DIQGDDU",46,0)
 E  S W=+$P($P($P($P(DD,"^",4),";",2),"E",2),",")
"RTN","DIQGDDU",47,0)
 ;
"RTN","DIQGDDU",48,0)
 S:W=0 W=30
"RTN","DIQGDDU",49,0)
 Q W
"RTN","DIQGDDU",50,0)
 ;
"RTN","DIQGDDU",51,0)
MAX(X,Y,Z) ;Return maximum of 2 or 3 numbers
"RTN","DIQGDDU",52,0)
 N M
"RTN","DIQGDDU",53,0)
 S M=$S(X>Y:+X,1:+Y),M=$S(M>$G(Z):M,1:+$G(Z))
"RTN","DIQGDDU",54,0)
 Q M
"RTN","DIQGDDU",55,0)
 ;
"RTN","DIQGDDU",56,0)
ERR202(DIQGERR) ;Error processing
"RTN","DIQGDDU",57,0)
 N P S P(1)=DIQGERR
"RTN","DIQGDDU",58,0)
 D BLD^DIALOG(202,.P)
"RTN","DIQGDDU",59,0)
 Q
"RTN","DIQGDDU",60,0)
ERR1700(DIQGERR) ;Error processing
"RTN","DIQGDDU",61,0)
 N P S P(1)=DIQGERR
"RTN","DIQGDDU",62,0)
 D BLD^DIALOG(1700,.P)
"RTN","DIQGDDU",63,0)
 Q
"RTN","DIQGDDU",64,0)
 ;
"RTN","DIQGDDU",65,0)
RIF(DA,DR,DIQGETA) ;FUNCTION CALL FOR RI
"RTN","DIQGDDU",66,0)
RI ;REQUIRED IDENTIFIERS - CALLED BY EN3^DIQGDD
"RTN","DIQGDDU",67,0)
 ;DA=FILENR,DR="REQUIRED IDENTIFIERS",DIQGETA=TARGET_ARRAY
"RTN","DIQGDDU",68,0)
 N DIQGRIA,DIQGRI,DIQGR
"RTN","DIQGDDU",69,0)
 D REQIDS^DICU(DA,"DIQGRIA")
"RTN","DIQGDDU",70,0)
 S DIQGRIA="",DIQGRI=0
"RTN","DIQGDDU",71,0)
 F  S DIQGRIA=$O(DIQGRIA(DR,DIQGRIA)) Q:DIQGRIA=""  D
"RTN","DIQGDDU",72,0)
 .S DIQGRI=DIQGRI+1,@DIQGETA@(DR,DIQGRI,"FIELD")=DIQGRIA
"RTN","DIQGDDU",73,0)
 .Q
"RTN","DIQGDDU",74,0)
 Q $S(DIQGRI:$NA(@DIQGETA@(DR)),1:"")
"RTN","DIR")
0^32^B43983355^B39110200
"RTN","DIR",1,0)
DIR ;SFISC/XAK - READER, HELP ;3NOV2016
"RTN","DIR",2,0)
 ;;22.2;VA FileMan;**4,2**;Jan 05, 2016;Build 139
"RTN","DIR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIR",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIR",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIR",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIR",7,0)
 ;;GFT;**30,170,999,1004,1037,1038,1044,1046**
"RTN","DIR",8,0)
 ;
"RTN","DIR",9,0)
 N %,%A,%B,%B1,%B2,%B3,%BA,%C,%E,%G,%H,%I,%J,%N,%P,%S,%T,%W,%X,%Y,A0,C,D,DD,DDH,DDQ,DDSV,DG,DH,DIC,DIFLD,DIRO,DO,DP,DQ,DU,DZ,X1,XQH,DIX,DIY,DISYS,%BU,%J1,%A0,%W0,%D1,%D2,%DT,%K,%M,DIRCOUNT
"RTN","DIR",10,0)
 S:$D(DDH)[0 DDH=0 Q:'$D(DIR(0))  D ^DIR2 G Q:%T=""
"RTN","DIR",11,0)
 I $D(DIR("V"))#2 D ^DIR1 S DDER=%E G Q
"RTN","DIR",12,0)
A I $D(DDM) K:DDM DDQ S:'DDM DDQ=$G(DDSHBX,IOSL-7) ;RETURN TO THIS LINE AFTER A "?" HELP
"RTN","DIR",13,0)
 I $G(DDH) D LIST^DDSU
"RTN","DIR",14,0)
 D W:%A'["V" I $D(DDS),$D(DIR0) S DDACT=Y I DDO=.5 S DDM=1 G Q
"RTN","DIR",15,0)
TOOMANY S DIRCOUNT=$G(DIRCOUNT)+1 I DIRCOUNT>49 S (X,Y)=U,(DUOUT,DIRUT)=1 G Q
"RTN","DIR",16,0)
 I %A'["V",%E D QUES S A0="" D MSG D:$G(DDH) LIST^DDSU G A
"RTN","DIR",17,0)
 I $D(DTOUT) K Y S DIRUT=1,Y="" G Q
"RTN","DIR",18,0)
 I %T'="E",X?1."^".E K Y S (DUOUT,DIRUT)=1,Y=X S:X="^^" DIROUT=1 S:%T="Y" %=-1 G Q
"RTN","DIR",19,0)
 I %T'="E","@"[X,%A["O" S Y="",DIRUT=1 S:%T="P" Y=-1 G Q
"RTN","DIR",20,0)
 I %A'["O","@"[X,%T'="E" S A0=$C(7)_%A0 D MSG G A ;IF NOT OPTIONAL, A RESPONSE IS REQUIRED,  SO LOOP!
"RTN","DIR",21,0)
 I $D(DDS),$D(DIR0),DIR0N G Q
"RTN","DIR",22,0)
 I $D(%G),$D(DIR("B")),X=DIR("B") S Y=%G G Q
"RTN","DIR",23,0)
X I X'?1."?" K DDQ D ^DIR1 D
"RTN","DIR",24,0)
 .I $D(DICQRETA) S DIR0N=1,%E=0,X="",DDACT=DICQRETA K DICQRETA Q
"RTN","DIR",25,0)
 .I '%E,$P(DIR(0),U,3)]"" S %X=X D  S:'$D(X) %E=1 S X=%X ;^DIR1 will evaluate input
"RTN","DIR",26,0)
 ..N %A,%B,%B1,%B2,%B3,%E,%N,%P,%T,%X,%W,%W0
"RTN","DIR",27,0)
 ..X $P(DIR(0),U,3,99) ;INPUT TRANSFORM if any
"RTN","DIR",28,0)
 I %A["V" K:%E Y G Q
"RTN","DIR",29,0)
 I X'?1."?",'%E G Q ;If no error or "?", quit
"RTN","DIR",30,0)
 D QUES:%E'<0&'$G(DUOUT)&'$G(DTOUT) S A0="" D MSG D:$G(DDH) LIST^DDSU ;**170
"RTN","DIR",31,0)
 ;VARIABLES DICQRETV & DICQRETA ARE SET IN DDSU ROUTINE
"RTN","DIR",32,0)
 I $D(DICQRETV) S (X,DIR0A)=DICQRETV,DDSREPNT=1,DDACT="" K DICQRETV,DICQRETA G X ;RETURN VALUE from drop-down list is sent back for evaluation (and echoing)
"RTN","DIR",33,0)
 I $D(DICQRETA) S DIR0N=1,DDACT=DICQRETA K DICQRETA G Q
"RTN","DIR",34,0)
 G A
"RTN","DIR",35,0)
 ;
"RTN","DIR",36,0)
 ;
"RTN","DIR",37,0)
 ;
"RTN","DIR",38,0)
W ; write the prompt and read the user's response.  Called from A+2 above
"RTN","DIR",39,0)
 S %W=%W0,%N=$E(%W)=U
"RTN","DIR",40,0)
SCREEN K DTOUT,DUOUT,DIRUT,DIROUT S %E=0 I $D(DDS),$D(DIR0) D ^DIR0 Q:'$D(DIR("PRE"))  X DIR("PRE") S:'$D(X) %E=1,X="" Q  ;READ in DIR01 via DIR0
"RTN","DIR",41,0)
 I %T="S",%A'["A",%A'["B" D S
"RTN","DIR",42,0)
 I $D(DIR("A"))=11 F %=0:0 S %=$O(DIR("A",%)) Q:%'>0  W !,DIR("A",%)
"RTN","DIR",43,0)
 W ! W:$L(%P) %P
"RTN","DIR",44,0)
 I $L($G(DIR("B")))>19,%A'["r",%T'="D",%T'="S",(%B'["D"&%T)!'%T,%B'["P"!'$P(%A,",",2) W DIR("B") S Y=DIR("B") D RW^DIR2 S:X="" X=DIR("B") Q  ;NOV2009: NO REPLACE-WITH FOR POINTERS
"RTN","DIR",45,0)
DIRB N DIRB I $D(DIR("B")) S DIRB=DIR("B") D  W DIRB_"// " ;**
"RTN","DIR",46,0)
 .I %T="Y",$G(DUZ("LANG"))>1,$G(%B)]"" N X S X=$F("YN",$$UP^DILIBF($E(DIRB))) S:X DIRB=$P($P(%B,";",X-1),":",2) ;YES/NO in FOREIGN LANGUAGE
"RTN","DIR",47,0)
 R X:$S($D(DIR("T")):DIR("T"),'$D(DTIME):300,1:DTIME) I '$T S DTOUT=1 ;>>>HERE IS THE READER'S 'READ'!<<<
"RTN","DIR",48,0)
 I $D(DIR("PRE")) X DIR("PRE") I '$D(X) S %E=1,X="" Q
"RTN","DIR",49,0)
 I X="",$D(DIRB) S X=DIRB I %T'="D",%B'["D"&%T W X
"RTN","DIR",50,0)
 I X'?.ANP S X="?"
"RTN","DIR",51,0)
 Q
"RTN","DIR",52,0)
 ;
"RTN","DIR",53,0)
QU I %E!(X="?")!($O(^DD(%B1,%B2,21,0))'>0) K %Y S A0="" D MSG S X1=$$HELP^DIALOGZ(%B1,%B2) D   I $D(^DD(%B1,%B2,12)) S X1=^(12) D  ;** FIELD HELP FOR A FIELD-TYPE QUESTION
"RTN","DIR",54,0)
 .S %J=75,%Y=1 D W1
"RTN","DIR",55,0)
 N DIPB,DIPA
"RTN","DIR",56,0)
 S DIPB=$P(^DD(%B1,%B2,0),U,2) I $D(^(4)) S A0=^(4),A0(0)=1 D MSG
"RTN","DIR",57,0)
 I DIPB["t" S A0=$$XHELP^DIETLIBF(%B1,%B2),A0(0)=1 D MSG N DIPB,%T S (%T,DIPB)="S" D  ;XECUTABLE HELP FOR EXTENDED DATA TYPE
"RTN","DIR",58,0)
 .I DIPB="S" S $P(%B3,U,3)=$$GETPROP^DIETLIBF(%B1,%B2,"SET OF CODES")
"RTN","DIR",59,0)
 I X?1"??".E D
"RTN","DIR",60,0)
 . I $D(DDS) N DDC,DDSQ S DDC=7
"RTN","DIR",61,0)
 . S A0="" D MSG S %C=0
"RTN","DIR",62,0)
 . F  S %C=$O(^DD(%B1,%B2,21,%C)) Q:'%C!$D(DDSQ)  S A0=^(%C,0) D
"RTN","DIR",63,0)
 .. I $D(DDS),$G(DDH),'(DDH#DDC) D LIST^DDSU Q:$D(DDSQ)
"RTN","DIR",64,0)
 .. D MSG
"RTN","DIR",65,0)
 I %B["P" K DO S DIC=U_$P(%B3,U,3),DIC(0)="M"_$E("L",%B'["'") D AST:%B["*",DQ
"RTN","DIR",66,0)
 I %B["D" S %DT=$P($P(%B3,U,5,99),"%DT=""",2) I %DT]"" S %DT=$P(%DT,"""") D HELP^%DTC ;EXTENDED TYPE LIKE 'YEAR' SHOULDN'T GIVE STANDARD DATE HELP MESSAGE
"RTN","DIR",67,0)
FLDSET I %B["S" D  ;SET-VALUED PROMPT
"RTN","DIR",68,0)
 .D SETSCR(%B1,%B2) S A0=$$EZBLD^DIALOG(8068)_" " D MSG
"RTN","DIR",69,0)
 .I $D(^DD(%B1,%B2,0)),$G(DUZ("LANG"))>1 N %B3 S $P(%B3,U,3)=$$SETIN^DIALOGZ
"RTN","DIR",70,0)
 .F %C=1:1 S Y=$P($P(%B3,U,3),";",%C) Q:Y=""  D
"RTN","DIR",71,0)
 ..S %I=$P(Y,":",2),Y=$P(Y,":") I 1 X:$D(DIC("S")) DIC("S") E  Q
"RTN","DIR",72,0)
 ..I $G(DDS),$G(DDSMOUSY) S DDH=$G(DDH)+1,DDH(DDH,"XT")="W ! D WRITMOUS("""_Y_""") W ""    "" D WRITMOUS("""_%I_""")" Q  ;MOUSE REMEMBERS SET VALUES
"RTN","DIR",73,0)
 ..S A0=Y_$E("         ",$L(Y)+1,999)_%I D MSG
"RTN","DIR",74,0)
 I %B["V" S A0="" D MSG S X1=X,DU=%B1,D=%B2,DZ=X D V^DIEQ S X=X1
"RTN","DIR",75,0)
 Q
"RTN","DIR",76,0)
 ;
"RTN","DIR",77,0)
AST F %=" D ^DIC"," D IX^DIC"," D MIX^DIC1" S Y=$F(%B3,%),%=$L(%)+1 Q:Y
"RTN","DIR",78,0)
 Q:'Y
"RTN","DIR",79,0)
 I $D(DDS) S A0=" " D MSG
"RTN","DIR",80,0)
 X $P($E(%B3,1,Y-%),U,5,99)
"RTN","DIR",81,0)
 Q
"RTN","DIR",82,0)
 ;
"RTN","DIR",83,0)
SETSCR(DIRFIL,DIRFLD) ;SET UP DIC("S")
"RTN","DIR",84,0)
 Q:'$D(^DD(DIRFIL,DIRFLD,12.1))
"RTN","DIR",85,0)
 X ^(12.1)
"RTN","DIR",86,0)
 Q:$G(DUZ("LANG"))'>1!'$D(DIC("S"))
"RTN","DIR",87,0)
 S DIC("S",1.007)=$P(^DD(DIRFIL,DIRFLD,0),U,3),DIC("S",0)=";"_$$SETIN^DIALOGZ,DIC("S",2.007)=DIC("S")
"RTN","DIR",88,0)
 S DIC("S")="N S,I S S=DIC(""S"",0),I=$L($E(S,1,$F(S,"";""_Y_"":"")),"";"")-1,S=$P($P(DIC(""S"",1.007),"";"",I),"":"") N Y S Y=S X DIC(""S"",2.007)"
"RTN","DIR",89,0)
 Q
"RTN","DIR",90,0)
 ;
"RTN","DIR",91,0)
 ;
"RTN","DIR",92,0)
DQ N %W K DICQRETV
"RTN","DIR",93,0)
 S:$D(D)[0 D="B" S (X1,DZ)=X D DQ^DICQ S DDSV=DIC K DD,% S:$D(X1) X=X1
"RTN","DIR",94,0)
 Q
"RTN","DIR",95,0)
 ;
"RTN","DIR",96,0)
QUES ;
"RTN","DIR",97,0)
 I %T D QU I $D(DICQRETV)!$D(DICQRETA) Q
"RTN","DIR",98,0)
 I X="??",$D(DIR("??")) D:$P(DIR("??"),U)]"" HF S:$P(DIR("??"),U,2)]"" A0(0)=1,A0=$P(DIR("??"),U,2,99) D:$P(DIR("??"),U,2)]"" MSG Q
"RTN","DIR",99,0)
 I X="??",%T="D" D  Q
"RTN","DIR",100,0)
 . N DIHELP,DIJUNK,DILINE,DIROOT
"RTN","DIR",101,0)
 . D DT^DILF(%DT,"?",.DIJUNK,"","DIROOT")
"RTN","DIR",102,0)
 . S A0="" D MSG
"RTN","DIR",103,0)
 . F DILINE=1:1:DIHELP S A0=DIROOT("DIHELP",DILINE) D MSG
"RTN","DIR",104,0)
 I %T="P" S DIC=%B1,DIC(0)=%B2 S:$D(DIR("S"))#2 DIC("S")=DIR("S") D DQ K DIC("S")
"RTN","DIR",105,0)
 I '%N S A0="" D MSG
"RTN","DIR",106,0)
 I X'["?" W $C(7)
"RTN","DIR",107,0)
 I %N S A0(0)=1,A0=$E(%W,2,999) D MSG
"RTN","DIR",108,0)
 D:'%N WRAP:%W]"" I %T["S",(%A["A"!(%A["B")) D S
"RTN","DIR",109,0)
 Q
"RTN","DIR",110,0)
 ;
"RTN","DIR",111,0)
WRAP I $D(DIR("?"))=11 F %I=1:1 Q:'$D(DIR("?",%I))  S A0=DIR("?",%I) D MSG
"RTN","DIR",112,0)
 K %Y S %J=$S($G(IOM,80)>6:$G(IOM,80)-6,IOM>1:IOM,1:2),%Y=1 S X1=$S(($D(DIR("?"))&'%N):DIR("?"),1:%W)
"RTN","DIR",113,0)
 I '%N,$D(DIR("?"))'=11,$E(X1,$L(X1))'="." S X1=X1_"."
"RTN","DIR",114,0)
W1 I $L(X1)<%J S %Y(%Y)=X1
"RTN","DIR",115,0)
 E  D  G W1
"RTN","DIR",116,0)
 . I $E(X1,1,%J-1)'?.E1P.E S %I=%J-1
"RTN","DIR",117,0)
 . E  F %I=%J-1:-1:1 Q:$E(X1,%I)?1P
"RTN","DIR",118,0)
 . S %Y(%Y)=$E(X1,1,%I),X1=$E(X1,%I+1,999),%Y=%Y+1
"RTN","DIR",119,0)
 F %I=1:1:%Y S A0=%Y(%I) D MSG
"RTN","DIR",120,0)
 I $D(DDS),%T="S" D
"RTN","DIR",121,0)
SET . S A0=$$EZBLD^DIALOG(8068) D MSG
"RTN","DIR",122,0)
 . F %I=1:1 Q:$P(%B,";",%I,999)=""  D
"RTN","DIR",123,0)
 .. S %Y=$P(%B,";",%I),Y=$P(%Y,":") Q:Y=""
"RTN","DIR",124,0)
 .. I $D(DIR("S"))#2 X DIR("S") E  Q
"RTN","DIR",125,0)
 ..I $G(DDS),$G(DDSMOUSY) S DDH=$G(DDH)+1,DDH(DDH,"XT")="D WRITMOUS("""_Y_""") W ""   "" D WRITMOUS("""_$P(%Y,":",2)_""")" Q  ;MOUSE REMEMBERS FORM-ONLY SET VALUE!
"RTN","DIR",126,0)
 .. S A0=Y_$J("",9-$L(Y))_$P(%Y,":",2) D MSG
"RTN","DIR",127,0)
 K %Y,%,X1
"RTN","DIR",128,0)
 Q
"RTN","DIR",129,0)
HF S XQH=$P(DIR("??"),U) N %A,%B,%E,DIR D EN1^XQH
"RTN","DIR",130,0)
 Q
"RTN","DIR",131,0)
MSG ;WRITE OUT 'A0'
"RTN","DIR",132,0)
 I $D(DDS),A0]"" D
"RTN","DIR",133,0)
 . S DDH=$G(DDH)+1
"RTN","DIR",134,0)
 . I $D(A0)>9 S DDH(DDH,"T")="",DDH=DDH+1,DDH(DDH,"X")=A0
"RTN","DIR",135,0)
 . E  S DDH(DDH,"T")=A0
"RTN","DIR",136,0)
 I '$D(DDS),$D(A0)>9 W:$X ! X A0
"RTN","DIR",137,0)
 I '$D(DDS),$D(A0)=1 W !,A0
"RTN","DIR",138,0)
 K A0
"RTN","DIR",139,0)
 Q
"RTN","DIR",140,0)
 ;
"RTN","DIR",141,0)
 ;
"RTN","DIR",142,0)
S W:$G(X)'?1."?"!(%A["A") !
"RTN","DIR",143,0)
 I $D(DIR("L"))#2 D
"RTN","DIR",144,0)
 . I $D(DIR("L"))=11 F %=0:0 S %=$O(DIR("L",%)) Q:%'>0  W !,DIR("L",%)
"RTN","DIR",145,0)
 . W !,DIR("L")
"RTN","DIR",146,0)
 E  I %B'[":",$O(DIR("C",""))]"" D
"RTN","DIR",147,0)
 . W !?5,$$EZBLD^DIALOG(8046),! ;**
"RTN","DIR",148,0)
 . S %I="" F  S %I=$O(DIR("C",%I)) Q:%I=""  D
"RTN","DIR",149,0)
 .. S Y=$P(DIR("C",%I),":")
"RTN","DIR",150,0)
 .. I $D(DIR("S"))#2 X DIR("S") E  Q
"RTN","DIR",151,0)
 .. W !?10,Y,?20,$P(DIR("C",%I),":",2)
"RTN","DIR",152,0)
 E  D
"RTN","DIR",153,0)
 . W !?5,$$EZBLD^DIALOG(8046),! ;**
"RTN","DIR",154,0)
 . F %I=1:1 Q:$P(%B,";",%I,999)=""  D
"RTN","DIR",155,0)
 .. S Y=$P($P(%B,";",%I),":") Q:'$L($P(%B,";",%I,999))
"RTN","DIR",156,0)
 .. I $D(DIR("S"))#2 X DIR("S") E  Q
"RTN","DIR",157,0)
 .. W !?10,Y,?20,$P($P(%B,";",%I),":",2)
"RTN","DIR",158,0)
 W:%A'["A" !
"RTN","DIR",159,0)
 Q
"RTN","DIR",160,0)
Q G ^DIRQ
"RTN","DIR",161,0)
 ;
"RTN","DIR",162,0)
 ;#8068  Choose from
"RTN","DIR1")
0^6^B35848051^B33938437
"RTN","DIR1",1,0)
DIR1 ;SFISC/XAK - PROCESS DATATYPE ;9MAY2016
"RTN","DIR1",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIR1",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIR1",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIR1",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIR1",7,0)
 ;;GFT;**1,5,73,999,1004,1022,1024,1037,1053,1054**
"RTN","DIR1",8,0)
 ;
"RTN","DIR1",9,0)
 S %E=0 D @%T
"RTN","DIR1",10,0)
 S:X?.E1C.E %E=1 Q:'%E!(X'?.E1L.E)!(%A["S")!(%A["Y")!((%T=1)&((%B["P")!(%B["S")))!(%A["P")
"RTN","DIR1",11,0)
 S X=$$UP^DILIBF(X) ;**CCO/NI UPPERCASE TRANSLATION
"RTN","DIR1",12,0)
 G DIR1
"RTN","DIR1",13,0)
0 Q
"RTN","DIR1",14,0)
 ;
"RTN","DIR1",15,0)
 ;
"RTN","DIR1",16,0)
Y ; YES/NO
"RTN","DIR1",17,0)
 ;I $G(DUZ("LANG"))>1,$G(%B)]"" S %J=$F("YN",$$UP^DILIBF($E(X))) I %J S X=$P($P(%B,";",%J-1),":",2) ;YES/NO in FOREIGN LANGUAGE -- defect 265656
"RTN","DIR1",18,0)
 ;FALL THRU HERE BECAUSE 'YES/NO' IS A FORM OF A 'SET' TYPE
"RTN","DIR1",19,0)
S ; SET
"RTN","DIR1",20,0)
 N %BU,%K,%M,%J,DDH
"RTN","DIR1",21,0)
 I $L(X)>245 S %E=1,Y="" Q  ;DI*156
"RTN","DIR1",22,0)
 I %T="S",$D(DIR("S"))#2 S DIC("S")=DIR("S")
"RTN","DIR1",23,0)
 S %BA=$S($D(DIC("S")):DIC("S"),1:"I 1") ;SCREEN the input
"RTN","DIR1",24,0)
 S (%J,%K,DDH)=0
"RTN","DIR1",25,0)
 I %B'[":",$O(DIR("C",""))]"" D
"RTN","DIR1",26,0)
 . ;Look for match on internal code
"RTN","DIR1",27,0)
 . S %I="" F  S %I=$O(DIR("C",%I)) Q:%I=""  S %J=DIR("C",%I) I X=$P(%J,":") S Y=X,Y(0)=$P(%J,":",2) X %BA S:'$T %I="" Q
"RTN","DIR1",28,0)
 . ;If not found, look for match on external code
"RTN","DIR1",29,0)
 . I %I="" F  S %I=$O(DIR("C",%I)) Q:%I=""  S %J=DIR("C",%I) I $F(%J,":"_X) S Y=$P(%J,":") X %BA I  S %K=%K+1,%K(%K)=%J Q:%A["o"  I $D(DIQUIET),X=$P(%J,":",2) Q
"RTN","DIR1",30,0)
 . ;If still no match, convert X and choices to uppercase, search again
"RTN","DIR1",31,0)
 . I %I="",%A'["X",'%K D
"RTN","DIR1",32,0)
 .. S %M=X N X S X=$$UP^DILIBF(%M)
"RTN","DIR1",33,0)
 .. F  S %I=$O(DIR("C",%I)) Q:%I=""  S %J1=DIR("C",%I),%J=$$UP^DILIBF(%J1) I X=$P(%J,":") S Y=$P(%J1,":"),Y(0)=$P(%J1,":",2) X %BA S:'$T %I="" Q
"RTN","DIR1",34,0)
 .. I %I="" F  S %I=$O(DIR("C",%I)) Q:%I=""  S %J1=DIR("C",%I),%J=$$UP^DILIBF(%J1) I $F(%J,":"_X) S Y=$P(%J1,":") X %BA I  S %K=%K+1,%K(%K)=%J1 Q:%A["o"  I $D(DIQUIET),X=$P(%J,":",2) Q
"RTN","DIR1",35,0)
 . S %J=%I
"RTN","DIR1",36,0)
 E  D
"RTN","DIR1",37,0)
 . S Y(0)=$P($P(";"_%B,";"_X_":",2),";") I Y(0)]"" S Y=X X %BA I  S %J=1
"RTN","DIR1",38,0)
 . I '%J F %I=1:1 S %J=$P(%B,";",%I) Q:%J=""  S Y=$F(%J,":"_X) I Y S Y=$P(%J,":") X %BA I  S %K=%K+1,%K(%K)=%J Q:%A["o"  I $D(DIQUIET),X=$P(%J,":",2) Q
"RTN","DIR1",39,0)
 . I %J="",%A'["X",'%K D
"RTN","DIR1",40,0)
 .. S %BU=$$UP^DILIBF(%B),%M=X N X S X=$$UP^DILIBF(%M)
"RTN","DIR1",41,0)
 .. S Y=$F(";"_%BU,";"_X_":") I Y D  X %BA I  S %J=1 Q
"RTN","DIR1",42,0)
 ... S Y(0)=$P($E(";"_%B,Y,999),";")
"RTN","DIR1",43,0)
 ... S Y=$L($E(";"_%B,1,Y-1),";"),Y=$P($P(";"_%B,";",Y),":")
"RTN","DIR1",44,0)
 .. F %I=1:1 S %J=$P(%BU,";",%I),%J1=$P(%B,";",%I) Q:%J=""  S Y=$F(%J,":"_X) I Y S Y=$P(%J1,":") X %BA I  S %K=%K+1,%K(%K)=%J1 Q:%A["o"  I $D(DIQUIET),X=$P(%J,":",2) Q
"RTN","DIR1",45,0)
 I %K=1 S Y=$P(%K(1),":"),Y(0)=$P(%K(1),":",2)
"RTN","DIR1",46,0)
 I %K>1,$G(DIQUIET) S %E=1 Q
"RTN","DIR1",47,0)
 I %K>1 D CH Q:%E=1  I '$D(%K(%I)) S X=%I G S
"RTN","DIR1",48,0)
 I %J="",'%K S %E=1 Q
"RTN","DIR1",49,0)
 I %A'["V",$D(DDS)[0 W $S((%K=1!('%K))&($P(Y(0),X)=""):$E(Y(0),$L(X)+1,99),1:"  "_Y(0)) ;HERE WRITE OUT THE REST OF WHAT THEY TYPED
"RTN","DIR1",50,0)
7001 I %T="Y" S Y="" D  ;S (%,Y)=+$$PRS^DIALOGU(7001,$E(X)) S:%=2 Y=0 D:%<0  ;DIALOG 7001 may not have translation
"RTN","DIR1",51,0)
 .S:$P($P(%B,";"),":",2)=Y(0) Y=1 S:$P($P(%B,";",2),":",2)=Y(0) Y=0 S %=Y ;1=YES,0=NO
"RTN","DIR1",52,0)
 Q
"RTN","DIR1",53,0)
 ;
"RTN","DIR1",54,0)
CH ;
"RTN","DIR1",55,0)
 N DIY,DDD,DDC,DS,DD
"RTN","DIR1",56,0)
 F %I=1:1:%K S A0="     "_%I_"   "_$P(%K(%I),":",2) D MSG
"RTN","DIR1",57,0)
 I '$D(DDS) S DIY(1)=1,DIY(2)=%K,A0=$$EZBLD^DIALOG(8088,.DIY) K DIY D MSG R %I:$S($D(DIR("T")):DIR("T"),'$D(DTIME):300,1:DTIME) ;'CHOOSE 1-N'
"RTN","DIR1",58,0)
 I $D(DDS) S DDD=2,DDC=5,(DS,DD)=%K D LIST^DDSU S %I=DIY
"RTN","DIR1",59,0)
 I U[%I!(%I?1."?") S X="?",%E=1 Q
"RTN","DIR1",60,0)
 I $D(%K(%I)) S Y=$P(%K(%I),":"),Y(0)=$P(%K(%I),":",2) Q
"RTN","DIR1",61,0)
 I %I?.N S %E=1
"RTN","DIR1",62,0)
 Q
"RTN","DIR1",63,0)
 ;
"RTN","DIR1",64,0)
MSG ;
"RTN","DIR1",65,0)
 I $D(DDS),A0]"" S DDH=$G(DDH)+1,DS(DDH)=$P(%K(%I),":"),DDH(DDH,DDH)=$P(%K(%I),":",2)
"RTN","DIR1",66,0)
 I '$D(DDS) W !,A0
"RTN","DIR1",67,0)
 K A0
"RTN","DIR1",68,0)
 Q
"RTN","DIR1",69,0)
 ;
"RTN","DIR1",70,0)
L ; LIST OR RANGE
"RTN","DIR1",71,0)
 D L^DIR3
"RTN","DIR1",72,0)
 Q
"RTN","DIR1",73,0)
D ; DATE
"RTN","DIR1",74,0)
 D ^%DT I Y<0 S %E=1 Q
"RTN","DIR1",75,0)
 I %D1["NOW"!(%D2["NOW")&($P("NOW",$$UP^DILIBF(X))="") S:%D1["NOW" %B1=Y S:%D2["NOW" %B2=Y
"RTN","DIR1",76,0)
 I %B1,Y<%B1 S %E=1 S:'%N %W=$$EZBLD^DIALOG(9114.1,$$DATE^DIUTL(%B1)) Q  ;**CCO/NI 'RESPONSE MUST NOT PRECEDE (DATE)'
"RTN","DIR1",77,0)
 I Y>%B2 S %E=1 S:'%N %W=$$EZBLD^DIALOG(9114.2,$$DATE^DIUTL(%B2)) ;**CCO/NI 'RESPONSE MUST NOT FOLLOW (DATE)'
"RTN","DIR1",78,0)
 S Y(1)=Y X ^DD("DD") S Y(0)=Y,Y=Y(1) K Y(1)
"RTN","DIR1",79,0)
 Q
"RTN","DIR1",80,0)
 ;
"RTN","DIR1",81,0)
N ; NUMERIC
"RTN","DIR1",82,0)
 I $L($P(X,"."))>24 S %E=1 Q
"RTN","DIR1",83,0)
 I X'?.1"-".N.1".".N S %E=1 Q
"RTN","DIR1",84,0)
GL I X>%B2!(X<%B1) S %E=1 D:'%N  Q  ;**CCO/NI 'RESPONSE MUST NOT BE BIGGER/SMALLER'
"RTN","DIR1",85,0)
 .N I S I(1)=+%B1,I(2)=+%B2,%W=$$EZBLD^DIALOG(212,.I) ;**CCO/NI 'DECIMAL DIGITS' (plus next line)
"RTN","DIR1",86,0)
DEC I '%E,($L($P(+X,".",2))>%B3) S %E=1 S:'%N %W=$$EZBLD^DIALOG(211,+%B3) Q
"RTN","DIR1",87,0)
 S Y=+X
"RTN","DIR1",88,0)
 Q
"RTN","DIR1",89,0)
 ;
"RTN","DIR1",90,0)
F ; FREETEXT
"RTN","DIR1",91,0)
 S Y=X I X[U,%A'["U" S %E=1
"RTN","DIR1",92,0)
 I '%N N I S I(1)=+%B1,I(2)=+%B2,%W=$$EZBLD^DIALOG(213,.I) S:%A'["U" %W=%W_"   "_$$EZBLD^DIALOG(214) ;**CCO/NI  EMBEDDED UPARROW
"RTN","DIR1",93,0)
 I $L(X)<%B1!($L(X)>%B2) S %E=1
"RTN","DIR1",94,0)
 Q
"RTN","DIR1",95,0)
 ;
"RTN","DIR1",96,0)
E ; END-OF-PAGE
"RTN","DIR1",97,0)
 S Y=X="" S:X=U (DUOUT,DIRUT)=1 I $L(X),X'=U S %E=1
"RTN","DIR1",98,0)
 Q
"RTN","DIR1",99,0)
 ;
"RTN","DIR1",100,0)
P ; POINTER
"RTN","DIR1",101,0)
 S:'$D(DDS) %B2=$P(%B2,"L")_$P(%B2,"L",2)
"RTN","DIR1",102,0)
 I %B2["A" S %B2=$P(%B2,"A")_$P(%B2,"A",2)
"RTN","DIR1",103,0)
 S:$D(DIR("S"))#2 DIC("S")=DIR("S")
"RTN","DIR1",104,0)
 S DIC=%B1,DIC(0)=%B2,%C=X D P1
"RTN","DIR1",105,0)
 I $D(X)#2,X="",Y<0 S %E=-1
"RTN","DIR1",106,0)
 E  S %E=Y<0
"RTN","DIR1",107,0)
 S X=%C
"RTN","DIR1",108,0)
 Q
"RTN","DIR1",109,0)
P1 N %A,%B,%C,%N,%P,%T,%W
"RTN","DIR1",110,0)
 F  K DICQRETV,DICQRETA D ^DIC Q:Y>0!'$D(DICQRETV)  S X=DICQRETV,DIC(0)=DIC(0)_"O" ;MOUSE MIGHT CLICK ON AN PARTIAL MATCH
"RTN","DIR1",111,0)
 Q
"RTN","DIR1",112,0)
 ;
"RTN","DIR1",113,0)
1 ; DATA-DICTIONARY TYPE OF READ
"RTN","DIR1",114,0)
 S %C=X N %W I %B["P"!(%B["V") N DIE
"RTN","DIR1",115,0)
 I %B["F" S Y=X I X[U,$P($P(%B3,U,4),";",2)'?1"E"1.N1","1.N S %E=1 Q  ;CAN'T CONTAIN "^" UNLESS STORED BY $E
"RTN","DIR1",116,0)
 G R:$P(%B,"t",2) ;EXTENSIBLE DATA TYPE
"RTN","DIR1",117,0)
 I %B["S" S %B=$P(%B3,U,3) D  S X=Y,%B=$P(%B3,U,2) G R
"RTN","DIR1",118,0)
 .N DILANG
"RTN","DIR1",119,0)
 .I $G(DUZ("LANG"))>1,$D(^DD(%B1,%B2,0)) S DILANG=$$SETIN^DIALOGZ D
"RTN","DIR1",120,0)
 ..I DILANG'=%B S %B=DILANG Q
"RTN","DIR1",121,0)
 ..K DILANG
"RTN","DIR1",122,0)
 .S %BU=$$UP^DILIBF(%B) D SETSCR^DIR(%B1,%B2),S
"RTN","DIR1",123,0)
 .I $D(DILANG) N % S %=$F(";"_DILANG,";"_Y) I % S Y=$P($P($P(^DD(%B1,%B2,0),U,3),";",Y),":") ;Return the 'REAL' internal value
"RTN","DIR1",124,0)
 I %B["P" S DIC=U_$P(%B3,U,3),DIE=DIC,DIC(0)=$E("L",%B'["'"&$D(DDS))_$E("E",$D(DIR("V"))[0)_"MZ" I %B'["*" D P1 S X=+Y,%E=Y<0
"RTN","DIR1",125,0)
 I %B["V" D
"RTN","DIR1",126,0)
 . N %A,%B,%C,%N,%P,%T,%W
"RTN","DIR1",127,0)
 . S (DIE,DP)=%B1,DIFLD=%B2,DQ=1
"RTN","DIR1",128,0)
 . D ^DIE3
"RTN","DIR1",129,0)
 . S %E=Y'>0 S:Y>0 Y(0)=$P(Y,U,2)
"RTN","DIR1",130,0)
R D IT:'%E S X=%C
"RTN","DIR1",131,0)
 Q
"RTN","DIR1",132,0)
 ;
"RTN","DIR1",133,0)
IT D  ;INPUT TRANSFORM
"RTN","DIR1",134,0)
 . N %A,%B,%C,%N,%P,%T,%W,DIPA N:'$G(DIRDINUM) DINUM
"RTN","DIR1",135,0)
 . I $P(%B3,U,2)["N",$P(%B3,U,5,99)'["$",X?.1"-".N.1".".N,$P(%B3,U,5,99)["+X'=X" S X=+X
"RTN","DIR1",136,0)
 .I $D(DDS) N DIQUIET S DIQUIET=1
"RTN","DIR1",137,0)
 .X $S($P(%B3,U,2)'["t":$P(%B3,U,5,99),1:$$VALEXT^DIETLIBF(%B1,%B2)) ;E.G., D READSET^DIED(.X,"1:TRUE;0:FALSE;")
"RTN","DIR1",138,0)
 S %E='$D(X)
"RTN","DIR1",139,0)
 I '%E,%B'["P" S Y=X
"RTN","DIR1",140,0)
 I '%E,%B["D" X ^DD("DD") S Y(0)=Y,Y=X
"RTN","DIR1",141,0)
 Q
"RTN","DIR1",142,0)
 ;
"RTN","DIR1",143,0)
 ;#7001  Yes/No question
"RTN","DIR2")
0^5^B25328921^B21976864
"RTN","DIR2",1,0)
DIR2 ;SFISC/XAK - READER (SETUP VARS,REPLACE...WITH) ;29NOV2016
"RTN","DIR2",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIR2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIR2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIR2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIR2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIR2",7,0)
 ;CALLED FROM THE TOP OF THE READER (DIR)
"RTN","DIR2",8,0)
 K Y,% S U="^"
"RTN","DIR2",9,0)
 D DIR("A"),DIR("?"),DIR("L"),DIR("B") ;**
"RTN","DIR2",10,0)
 S %T=$E(DIR(0)),%A=$P(DIR(0),U),%B=$P(DIR(0),U,2),%N=%A'["V"
"RTN","DIR2",11,0)
 K:$D(DIR("A"))=10 DIR("A") K:$D(DIR("?"))=10 DIR("?")
"RTN","DIR2",12,0)
 S %W0=$S($D(DIR("?")):DIR("?"),%T'?.AN:"",'$P($T(@(%T_1)),";",5):"",1:$$EZBLD^DIALOG($P($T(@(%T_1)),";",5)))
"RTN","DIR2",13,0)
 S %A0=$$EZBLD^DIALOG(8041) ;'REQUIRED RESPONSE'
"RTN","DIR2",14,0)
FIELD I %A?.NP1",".ANP S %B1=$P(%A,","),%B2=+$P(%A,",",2) D  G EO:'$D(%A),NN ;SPECIFICATION OF READ IS 'DATA DICTIONARY', SO GET FIELD PROPERTIES
"RTN","DIR2",15,0)
 .I '$D(^DD(%B1,%B2,0)) K %A Q
"RTN","DIR2",16,0)
 .S %B3=^(0),%B=$P(%B3,U,2) I %B["C"!%B K %A Q  ;%B IS USED LATER, IN DIR1 ROUTINE
"RTN","DIR2",17,0)
 .D:'$D(DIR("B")) DA^DIRQ:$D(DA)#2
"RTN","DIR2",18,0)
 .S:'$D(DIR("A")) %P=$$LABEL^DIALOGZ(%B1,%B2)_": " S:$P(%B3,U,2)'["R" %A=%A_"O"
"RTN","DIR2",19,0)
 .S %T=1 ;IN DIR1, "1"=DATA DICTIONARY
"RTN","DIR2",20,0)
 .N I S I=+$P(%B,"t",2),I=$P($G(^DI(.81,I,0)),U,2) I I="S" S I=$$GETPROP^DIETLIBF(%B1,%B2,"SET OF CODES") D:I]"" S0(I):%A'["A" ;if this a user-defined data type read
"RTN","DIR2",21,0)
 I "FSYENDLP"'[%T G EO
"RTN","DIR2",22,0)
 S %B1=$P(%B,":"),%B2=$P(%B,":",2),%B3=$P(%B,":",3)
"RTN","DIR2",23,0)
 S:'$L(%B2) %B2=$S(%T="D":9991231,%T="F":245,1:999999999999)
"RTN","DIR2",24,0)
 I %T="F",%B2>245 S %B2=245
"RTN","DIR2",25,0)
 I %T="Y" S %B=$$EZBLD^DIALOG(7003)
"RTN","DIR2",26,0)
 I %T="D" S %DT=$P(%B3,"A")_$P(%B3,"A",2)
"RTN","DIR2",27,0)
 I %T="D",'$D(DIR("?")) S %W0=%W0_$S(%B3["R":$$EZBLD^DIALOG(8043),%B3["T":$$EZBLD^DIALOG(8044),1:"")
"RTN","DIR2",28,0)
 I %T="D" S %D1=%B1,%D2=%B2 I %B["NOW"!(%B["DT") D NOW^%DTC K %I,%H S DT=X S:%B1["NOW" %B1=% S:%B1["DT" %B1=X S:%B2["NOW" %B2=% S:%B2["DT" %B2=X K %
"RTN","DIR2",29,0)
 I %T="P" S %B1=$S('%B1:U_%B1,'$D(^DIC(+%B1,0,"GL")):U,1:^("GL")) G EO:%B1=U,EO:'$D(@(%B1_"0)")) I '$D(DIR("A")) S %P=$$EZBLD^DIALOG(8042,$O(^DD(+$P(^(0),U,2),0,"NM",0))) Q
"RTN","DIR2",30,0)
NN I %T="S" D S0(%B):%A'["A"
"RTN","DIR2",31,0)
 Q:$D(%P)
"RTN","DIR2",32,0)
 S %P="" I %A["A" S:$D(DIR("A")) %P=DIR("A") Q
"RTN","DIR2",33,0)
 I '$D(DIR("A")) S %P=$$EZBLD^DIALOG($P($T(@%T),";",4)) I %T="D" S %P=%P_$S(%B3["R":$$EZBLD^DIALOG(8043),%B3["T":$$EZBLD^DIALOG(8044),1:"")
"RTN","DIR2",34,0)
 S:$D(DIR("A")) %P=$S(%T="Y":DIR("A")_"? ",%T="S":$$EZBLD^DIALOG(8045,DIR("A")),1:DIR("A")_": ")
"RTN","DIR2",35,0)
 I "LND"'[%T Q  ;'LIST', 'NUMERIC', 'DATE' types
"RTN","DIR2",36,0)
 I $L(%B1) S %P=%P_" ("_$S(%T="D":$$DATE^DIUTL(%B1)_"-"_$$DATE^DIUTL(%B2),1:%B1_"-"_%B2)_")" ;**
"RTN","DIR2",37,0)
 S %P=%P_$S("?: "[$E(%P,$L(%P)):"",1:":")_" "
"RTN","DIR2",38,0)
 Q
"RTN","DIR2",39,0)
 ;
"RTN","DIR2",40,0)
 ;
"RTN","DIR2",41,0)
S0(%B) ;CREATE PROMPT FOR READING A 'SET' TYPE.  %B is the SET OF CODES
"RTN","DIR2",42,0)
 S %P=$S($D(DIR("A")):DIR("A")_": ",%A["B":$$EZBLD^DIALOG(8046),1:$$EZBLD^DIALOG($P($T(S),";",4)))
"RTN","DIR2",43,0)
 Q:%A'["B"  ;"B" PARAMETER SHOWS THE CHOICES SEPARATED BY "/"S
"RTN","DIR2",44,0)
 S %P=%P_" ("
"RTN","DIR2",45,0)
 I %B'[":",$O(DIR("C",""))]"" S %I="" F  S %I=$O(DIR("C",%I)) Q:%I=""  D
"RTN","DIR2",46,0)
 . N Y S Y=$P(DIR("C",%I),":") Q:Y=""
"RTN","DIR2",47,0)
 . I $D(DIR("S"))#2 X DIR("S") E  Q
"RTN","DIR2",48,0)
 . S %P=%P_Y_"/"
"RTN","DIR2",49,0)
 E  F %I=1:1 Q:$P(%B,";",%I,999)=""  D
"RTN","DIR2",50,0)
 . N Y S Y=$P($P(%B,";",%I),":") Q:Y=""
"RTN","DIR2",51,0)
 . I $D(DIR("S"))#2 X DIR("S") E  Q
"RTN","DIR2",52,0)
 . S %P=%P_Y_"/"
"RTN","DIR2",53,0)
 S %P=$E(%P,1,$L(%P)-(%P?.E1"/"))_"): "
"RTN","DIR2",54,0)
 Q
"RTN","DIR2",55,0)
 ;
"RTN","DIR2",56,0)
 ;
"RTN","DIR2",57,0)
EO S %T="",Y=-1 Q  ;ABORT
"RTN","DIR2",58,0)
 ;
"RTN","DIR2",59,0)
DIR(DIALA) ;** INSERTS DIALOGS INTO DIR ARRAY
"RTN","DIR2",60,0)
 N DIALN,DIALP
"RTN","DIR2",61,0)
 S DIALN=$G(DIR("DIALOG",DIALA))
"RTN","DIR2",62,0)
 Q:'$D(^DI(.84,0))  Q:+DIALN'=DIALN  Q:'$D(^(DIALN,2))  ;GIVES US A MAKED REFERENCE PRIOR TO CALLING $$EZBLD^DIALOG
"RTN","DIR2",63,0)
 I $D(DIR("DIALOG",DIALA))>9 M DIALP=DIR("DIALOG",DIALA)
"RTN","DIR2",64,0)
 K DIR(DIALA) D BLD^DIALOG(DIALN,.DIALP,,"DIR(DIALA)","F")
"RTN","DIR2",65,0)
 Q
"RTN","DIR2",66,0)
 ;
"RTN","DIR2",67,0)
 ;
"RTN","DIR2",68,0)
RW ; Replace...With...   ENTER WITH 'Y', EXIT WITH 'Y' CHANGED.   CALLED FROM MANY ROUTINES
"RTN","DIR2",69,0)
 N %,L,DINAKED S DINAKED=$NA(^(0)),DG=Y S:$D(DTIME)[0 DTIME=999
"RTN","DIR2",70,0)
A W:$X>50 ! K DTOUT W $$EZBLD^DIALOG(8047) R X:DTIME E  S DTOUT=1,X=""
"RTN","DIR2",71,0)
 G B:X="",Q:X?1."^",Q:$E(X)=U&($D(DIRWP)[0)&(Y'[X),Q:X?."?",Q:X="@"
"RTN","DIR2",72,0)
 I X="END"!(X="end")!(X=$$UP^DILIBF($$EZBLD^DIALOG(7097))) S L=0 D H S:'%&'$D(DTOUT) Y=Y_X G A ;**CCO/NI 'END'
"RTN","DIR2",73,0)
 I Y[X S D=X,L=$L(X) D H S:'%&'$D(DTOUT) Y=$P(Y,D,1)_X_$P(Y,D,2,999) G A
"RTN","DIR2",74,0)
 S D=$P(X,"...",1),DH=$F(Y,D) I DH S X=$P(X,"...",2,99),X=$S(X="":$L(Y)+1,1:$F(Y,X,DH)) I X S DH=DH-$L(D)-1,D=X,L=D-DH-1 D H S:'%&'$D(DTOUT) Y=$E(Y,1,DH)_X_$E(Y,D,999) G A
"RTN","DIR2",75,0)
 W $C(7)," ??" G A
"RTN","DIR2",76,0)
 ;
"RTN","DIR2",77,0)
H N DIMAX
"RTN","DIR2",78,0)
WITH W $$EZBLD^DIALOG(8048) R X:DTIME E  S DTOUT=1,X="",%=0 W $C(7)," ??" Q
"RTN","DIR2",79,0)
 S DIMAX=$G(^DD("STRING_LIMIT"),255)-10,%=$L(Y)-L+$L(X)>DIMAX
"RTN","DIR2",80,0)
 I % W $C(7),$S($L(Y)-L'>DIMAX:$$EZBLD^DIALOG(349,($L(Y)-L+$L(X)-DIMAX)),X'=U:$$EZBLD^DIALOG(350),1:" ??") Q:$L(Y)-L>DIMAX&(X=U)  G WITH
"RTN","DIR2",81,0)
 Q:X?.ANP  W $C(7)," ??" G WITH
"RTN","DIR2",82,0)
 ;
"RTN","DIR2",83,0)
B W:$D(DTOUT) $C(7) I DG'=Y S X=Y W !?3 W X I X="" S X="@"
"RTN","DIR2",84,0)
 D:$D(DINAKED)
"RTN","DIR2",85,0)
 .I $D(@DINAKED)
"RTN","DIR2",86,0)
Q Q
"RTN","DIR2",87,0)
 ;
"RTN","DIR2",88,0)
F ;;Enter response: ;8051
"RTN","DIR2",89,0)
S ;;Enter response: ;8051
"RTN","DIR2",90,0)
Y ;;Enter Yes or No: ;8052
"RTN","DIR2",91,0)
E ;;Press RETURN to continue or '^' to exit: ;8053
"RTN","DIR2",92,0)
N ;;Enter a number;8054
"RTN","DIR2",93,0)
D ;;Enter a date;8055
"RTN","DIR2",94,0)
L ;;Enter a list or range of numbers;8056
"RTN","DIR2",95,0)
P ;;Select: ;8057
"RTN","DIR2",96,0)
F1 ;;;This response can be free text;9031
"RTN","DIR2",97,0)
S1 ;;;Enter a code from the list.;9032
"RTN","DIR2",98,0)
Y1 ;;;Enter either 'Y' or 'N'.;9040
"RTN","DIR2",99,0)
E1 ;;;Enter either RETURN or '^';9033
"RTN","DIR2",100,0)
N1 ;;;This response must be a number;9034
"RTN","DIR2",101,0)
D1 ;;;This response must be a date;9035
"RTN","DIR2",102,0)
L1 ;;;This response must be a list or range, e.g., 1,3,5 or 2-4,8;9036
"RTN","DIR2",103,0)
 ;
"RTN","DIR2",104,0)
 ;#349   String too long by |nuber| character(s)!
"RTN","DIR2",105,0)
 ;#350   String too long! '^' to quit.
"RTN","DIR2",106,0)
 ;#8041  This is a required response...
"RTN","DIR2",107,0)
 ;#8042  Select |1|
"RTN","DIR2",108,0)
 ;#8043  and time
"RTN","DIR2",109,0)
 ;#8044  and optional time
"RTN","DIR2",110,0)
 ;#8045  Enter |1|
"RTN","DIR2",111,0)
 ;#8046  Select one of the following
"RTN","DIR2",112,0)
 ;#8047  Replace
"RTN","DIR2",113,0)
 ;#8048  With
"RTN","DIS")
0^38^B25712783^B24614952
"RTN","DIS",1,0)
DIS ;SFISC/GFT - GATHER SEARCH CRITERIA ;24AUG2015
"RTN","DIS",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIS",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIS",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIS",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIS",7,0)
 ;
"RTN","DIS",8,0)
 K ^UTILITY($J),DC,DIS,%ZIS,O,N,R D ^DICRW
"RTN","DIS",9,0)
 G Q:'$D(DIC)!$D(DTOUT)
"RTN","DIS",10,0)
EN ;
"RTN","DIS",11,0)
 S:DIC DIC=$G(^DIC(DIC,0,"GL")) Q:DIC=""
"RTN","DIS",12,0)
 K DI,DX,DY,I,J,DL,DC,DA,DTOUT,^UTILITY($J) G Q:'$D(@(DIC_"0)"))
"RTN","DIS",13,0)
 S (R,DI,I(0))=DIC,(DL,DC)=1,DY=999,N=0,Q="""",DV=""
"RTN","DIS",14,0)
R ;
"RTN","DIS",15,0)
 I +R=R S (J(N),DK)=R,R=""
"RTN","DIS",16,0)
 E  S @("(J(N),DK)=+$P("_R_"0),U,2)"),R=$P(^(0),U)
"RTN","DIS",17,0)
F ;
"RTN","DIS",18,0)
 G UP:DC>58
"RTN","DIS",19,0)
 W ! K X,DIC,DISPOINT,DE D W
"RTN","DIS",20,0)
 S DIC(0)="EZ",C=",",DIC="^DD("_DK_",",DIC("W")="S %=$P(^(0),U,2) W:% $S($P(^DD(+%,.01,0),U,2)[""W"":""   (word-processing)"",1:""   (multiple)"")",DIC("S")="I $P(^(0),U,2)'[""m"""_$S($D(DICS):" "_DICS,1:""),DU=""
"RTN","DIS",21,0)
 W "SEARCH FOR "_R_" "_$P(^DD(DK,0),U)_": "
"RTN","DIS",22,0)
 R X:DTIME S:'$T DTOUT=1 G Q:X=U!'$T,TEM^DIS2:X?1"[".E D
"RTN","DIS",23,0)
 .N DISVX S DISVX=X D ^DIC S:Y=-1 X=DISVX Q
"RTN","DIS",24,0)
 I Y>0 K DISPOINT S DE=Y(0),O(DC)=$P(DE,U),DU=+Y,Z=$P(DE,U,3),E=$P(DE,U,2) D:E["t"  G G
"RTN","DIS",25,0)
 .I E["S" S X=$$GETPROP^DIETLIBF(DK,+Y,"SET OF CODES") I X]"" S Z=X
"RTN","DIS",26,0)
HARD G UP:X="",F:X?."?",Q:X=U!($D(DTOUT)),COMP^DIS2
"RTN","DIS",27,0)
 Q
"RTN","DIS",28,0)
G ;^DOPT("DIS",1,0)=NULL
"RTN","DIS",29,0)
 ;^DOPT("DIS",2,0)=CONTAINS
"RTN","DIS",30,0)
 ;^DOPT("DIS",3,0)=MATCHES
"RTN","DIS",31,0)
 ;^DOPT("DIS",4,0)=LESS THAN
"RTN","DIS",32,0)
 ;^DOPT("DIS",5,0)=EQUALS
"RTN","DIS",33,0)
 ;^DOPT("DIS",6,0)=GREATER THAN
"RTN","DIS",34,0)
 K X,DIC S DIC="^DOPT(""DIS"",",DIC(0)="QEZ" I E["B" S X="" G OK
"RTN","DIS",35,0)
 I E S N(DL)=N,N=N+1,DV(DL)=DV,DL(DL)=DK,DK=+E,J(N)=DK,X=$P($P(DE,U,4),";"),I(N)=$S(+X=X:X,1:""""_X_""""),Y(0)=^DD(DK,.01,0),DL=DL+1 G WP:$P(Y(0),U,2)["W" S DV=DV_+Y_"," G F
"RTN","DIS",36,0)
 S X=$P(E,"p",2) I X,$D(^DIC(+X,0,"GL")) S DISPOINT=$S(Y:+Y,1:-DC)_U_U_^("GL") ;Y will be FIELD lookup, unless it's COMPUTED EXPRESSION from ^DIS2
"RTN","DIS",37,0)
 I E["P" S DISPOINT=+Y_U_Y(0) S X=+$P(E,"P",2) F  Q:'X  D
"RTN","DIS",38,0)
 .S DA=$P($G(^DD(X,.01,0)),U,2) I DA["D" S E="D"_E,X="" Q
"RTN","DIS",39,0)
 .S X=+$P(DA,"P",2)
"RTN","DIS",40,0)
 I $D(DISPOINT),Y>0 S X="(#"_+Y_")",DA="DIS("""_$C(DC+64)_DL_""",",DICOMP=N S:$D(O(DC))[0 O(DC)=X D EN^DICOMP G X:'$D(X) S DA(DC)=X,DU=-DC F %=0:0 S %=$O(X(%)) Q:'%  S @(DA_%_")")=X(%)
"RTN","DIS",41,0)
 ;
"RTN","DIS",42,0)
C K X D W R "CONDITION: ",X:DTIME S:'$T DTOUT=1 G Q:X[U!'$T
"RTN","DIS",43,0)
 S DN=$S("'-"[$E(X):"'",1:""),X=$E(X,DN]""+1,99)
"RTN","DIS",44,0)
 S:E["S" DIC("S")="I Y<3!(Y=5)" D ^DIC K DIC("S") ;A 'SET' TYPE IS NULL, EQUALS, OR CONTAINS
"RTN","DIS",45,0)
 G:Y<0 Q:X[U,B:X="",DISC^DIQQQ:X["?",C
"RTN","DIS",46,0)
 S O=$P("NOT ",U,DN]"")_$P(Y,U,2)
"RTN","DIS",47,0)
 I +Y=1 S X=DN_"?."" """,O(DC)=O(DC)_" "_O G OK
"RTN","DIS",48,0)
 S DQ=Y
"RTN","DIS",49,0)
 ;
"RTN","DIS",50,0)
VALUE D W W O I E["D",Y-3 R " DATE: ",X:DTIME S:'$T DTOUT=1 G F:X=U,Q:'$T S %DT="TE" D ^%DT S X=Y_U_X G X:Y<0 X ^DD("DD") S Y=X_U_Y G GOT
"RTN","DIS",51,0)
 ;POINTERS
"RTN","DIS",52,0)
PT I $D(DISPOINT),+DQ=5 K DIC,DIS($C(DC+64)_DL) S DIC=U_$P(DISPOINT,U,4),DIC(0)="EMQ",DU=+DISPOINT W " "_$P(@(DIC_"0)"),U)_": " R X:DTIME S:'$T DTOUT=1 G F:U[X,Q:'$T D ^DIC G GOT:Y>0,PT
"RTN","DIS",53,0)
 R ": ",Y:DTIME E  S DTOUT=1 G Q
"RTN","DIS",54,0)
 G X:Y="" I Y[U,$P($G(DE),U,4)'[";E",'$P($G(DE),U,2),E'["C" G F ;We can look for "^" in WP or $E-stored actual data
"RTN","DIS",55,0)
 I +DQ=3 S X="I X?"_Y D ^DIM G GOT:$D(X) S Y="?" ;Is it a good PATTERN-MATCH?
"RTN","DIS",56,0)
 I DQ=4!(DQ=6),+Y'=Y G X ;> or < have to be numeric
"RTN","DIS",57,0)
 I Y?."?" D DIS^DIQQQ G VALUE
"RTN","DIS",58,0)
 W:Y[""""&($L(Y)>1) "    (Your answer includes quotes)"
"RTN","DIS",59,0)
SET I E["S" D  K DIS("XFORM",DC) G GOT:$D(X) K DIS(U,DC) D DIS^DIQQQ G VALUE
"RTN","DIS",60,0)
 .N D S X=1 I +DQ=5!(Y["""") D  K:D="" X Q
"RTN","DIS",61,0)
 ..N DIR,DDER
"RTN","DIS",62,0)
 ..S X=Y,DIR(0)="S^"_Z,DIR("V")=1 D ^DIR I $G(DDER) S D="" Q
"RTN","DIS",63,0)
 ..F X=1:1 S D=$P(Z,";",X) Q:D=""  I Y=$P(D,":") S Y=""""_$$CONVQQ^DILIBF($P(D,":"))_"""^"_$P(D,":",2) Q
"RTN","DIS",64,0)
 .N N,%,C W !?7 S Y=""""_Y_"""",N="DE"_DN_$E(" [?<=>",DQ)_Y
"RTN","DIS",65,0)
 .F X=1:1 S D=$P(Z,";",X),DE=$P(D,":",2) Q:D=""  S DIS(U,DC,$P(D,":"))=DE I @N S:'$D(%) %="[ Will match" W % S C=$G(C)+1,%="'"_DE_"'" W:C>1 "," W " " W:$X+$L(%)>73 !?7
"RTN","DIS",66,0)
 .I '$D(%) K X Q
"RTN","DIS",67,0)
 .W:C>1 "and " W %_" ]"
"RTN","DIS",68,0)
 I Y?.E2A.E S DIS("XFORM",DC)="$$UP^DILIBF(;)",Y=$$UP^DILIBF(Y)
"RTN","DIS",69,0)
 D
"RTN","DIS",70,0)
 .N P,YY,C S C="""",YY=C_$$CONVQQ^DILIBF($P(Y,U)) F P=2:1:$L(Y,U)  S YY="("_YY_"""_$C(94)_"""_$$CONVQQ^DILIBF($P(Y,U,P)),C=C_")"
"RTN","DIS",71,0)
 .S Y=YY_C
"RTN","DIS",72,0)
GOT S X=DN_$E(" [?<=>",DQ)_$P(Y,U) I E["D" D
"RTN","DIS",73,0)
 .I $P(Y,U)'[".",$E(Y,6,7) S %=$P("^^^^ any time during^ the entire day",U,DQ) I %]"" S DIS("XFORM",DC)="$P(;,""."")",O=O_%
"RTN","DIS",74,0)
 .S Y=$P(Y,U,3)_U_$P(Y,U,2)
"RTN","DIS",75,0)
 I $G(DIS("XFORM",DC))="$$UP^DILIBF(;)" S O=O_" (case-insensitive)"
"RTN","DIS",76,0)
 S O(DC)=O(DC)_" "_O_" "_Y
"RTN","DIS",77,0)
OK S DC(DC)=DV_DU_U_X,%=DL-1_U_(N#100)
"RTN","DIS",78,0)
 I DL>1,O(DC)'[R S O(DC)=R_" "_O(DC)
"RTN","DIS",79,0)
 S:DU["W" %=DL-2_U_(N#100-1) S DX(DC)=%,DC=DC+1 S:DC=27 DC=33 ;go from "Z" to "a"
"RTN","DIS",80,0)
B G F:(DU'["W"&(DC<59))
"RTN","DIS",81,0)
UP I DC>1 G ^DIS0:DL<$S('$D(DIARF0):2,1:2) S DL=DL-1,DV=DV(DL),DK=DL(DL),N=N(DL),R=$S($D(R(DL)):R(DL),1:R) K R(DL) S %=N F  S %=$O(I(%)) S:%="" %=-1 G F:%<0 K I(%),J(%)
"RTN","DIS",82,0)
Q G Q^DIS2:'$D(DIARU),^DIS2
"RTN","DIS",83,0)
 ;
"RTN","DIS",84,0)
WP S DIC("S")="I Y<3",DU=+Y_"W" G C
"RTN","DIS",85,0)
 ;
"RTN","DIS",86,0)
X ;
"RTN","DIS",87,0)
 W $C(7),"??",!! K O(DC) G B
"RTN","DIS",88,0)
 ;
"RTN","DIS",89,0)
W W !?DL*2,"-"_$C(DC+64)_"- " Q
"RTN","DIS",90,0)
 ;
"RTN","DIS",91,0)
 ;
"RTN","DIS",92,0)
 ;
"RTN","DIS",93,0)
 ;
"RTN","DIS",94,0)
 ;
"RTN","DIS",95,0)
 ;
"RTN","DIS",96,0)
 ;
"RTN","DIS",97,0)
ENS ; ENTRY POINT FOR RE-DOING THE SORT USING AN EXISTING SORT TEMPLATE
"RTN","DIS",98,0)
 G EN^DIS3
"RTN","DITIME")
0^59^B1307675^n/a
"RTN","DITIME",1,0)
DITIME ;O-OIFO/GFT - INPUT TRANSFROM FOR 'TIME' DATA TYPE ;05OCT2016
"RTN","DITIME",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DITIME",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DITIME",4,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DITIME",5,0)
 ;
"RTN","DITIME",6,0)
 ;ENTER WITH X
"RTN","DITIME",7,0)
 N Y,%DT I X?1.A1(1"+",1"-")1.N1(1"D",1"M",1"W") G KX  ;NO DAYS, WEEKS, OR MONTHS
"RTN","DITIME",8,0)
 I X?.N D  Q:'$D(X)
"RTN","DITIME",9,0)
 .S Y=$G(DIPA("SECONDS ALLOWED"))
"RTN","DITIME",10,0)
 .I 'Y S Y=$E(X,5,999),X=$E(X,1,4) I Y'="00"&(Y]"") K X Q
"RTN","DITIME",11,0)
 .S X=$E(X,1,6)
"RTN","DITIME",12,0)
 S:X?1N.E X="T@"_X
"RTN","DITIME",13,0)
 S %DT=$P("S",U,$G(DIPA("SECONDS ALLOWED"))'=0)_"R"
"RTN","DITIME",14,0)
 D ^%DT
"RTN","DITIME",15,0)
 S X=$E(Y_"000000",9,14)
"RTN","DITIME",16,0)
 G:Y<0 KX
"RTN","DITIME",17,0)
 I '$D(DIQUIET) S Y=X X $$METH4TYP^DIETLIBF("OUTPUT TRANSFORM",13) W "  (",Y,")"
"RTN","DITIME",18,0)
 Q
"RTN","DITIME",19,0)
KX K X Q
"RTN","DITIME",20,0)
 ;
"RTN","DITIME",21,0)
 ;
"RTN","DIU31")
0^60^B17160493^B14822365
"RTN","DIU31",1,0)
DIU31 ;SFISC/GFT - UNEDITABLE, INPUT TRANS., OUTPUT TRANS. ;24OCT2016
"RTN","DIU31",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIU31",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIU31",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIU31",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIU31",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIU31",7,0)
 ;;GFT;**127,1046,1051,MSC,1702**
"RTN","DIU31",8,0)
 ;
"RTN","DIU31",9,0)
9 ;
"RTN","DIU31",10,0)
 S %=2,DA=+Y
"RTN","DIU31",11,0)
 I $P(Y(0),U,2)["I" W !,$C(7),"FIELD IS ALREADY UNEDITABLE",!,"DO YOU WANT TO ALLOW EDITING AGAIN" D YN^DICN Q:%-1  S X=$P(^(0),U,2),^(0)=$P(^(0),U,1)_U_$P(X,"I",1)_$P(X,"I",2)_$P(X,"I",3)_U_$P(^(0),U,3,99) W "  ..OK" S %=1 G 2
"RTN","DIU31",12,0)
 W !,"WANT TO PREVENT ALL USERS FROM CHANGING OR DELETING DATA VALUES",!
"RTN","DIU31",13,0)
 W "THAT ARE ENTERED FOR THE '"_$P(Y,U,2)_"' FIELD" D YN^DICN Q:%-1  S ^(0)=$P(^(0),U,1,2)_"I^"_$P(^(0),U,3,99) W $C(7),!?9,"...FIELD IS NOW UNEDITABLE!" S %=2
"RTN","DIU31",14,0)
2 I $D(DDA) S A0="UNEDITABLE^",(A1,A2)="",@("A"_%)="I" D IT^DICATTA
"RTN","DIU31",15,0)
 G DIEZ^DIU0
"RTN","DIU31",16,0)
 ;
"RTN","DIU31",17,0)
5 ;FROM 5+1^DIU
"RTN","DIU31",18,0)
 I $P($P(Y(0),U,2),"t",2) D EXTENDED G Q
"RTN","DIU31",19,0)
 W !,$P(Y,U,2) S DA=+Y,Y=$P(Y(0),U,5,99) S:$D(DDA) DDA=Y
"RTN","DIU31",20,0)
 W " INPUT TRANSFORM: ",Y D RW^DIR2 G MORE:X="" S %=$L($P(Y(0),U,1,4))+$L(X) I %>244 W !!?5,$C(7),"Input Transform is TOO LONG by ",%-244," characters.",! K X S Y=DA_U_$P(Y(0),U) G 5
"RTN","DIU31",21,0)
 I $P(Y(0),U,2)["K",X'[" ^DIM" K X S Y=DA_U_$P(Y(0),U) W $C(7),!?5,"Input Transform must contain D ^DIM",! G 5
"RTN","DIU31",22,0)
 I $P(Y(0),U,2)["F",X["DINUM" W $C(7),!?5,"DINUM on a Freetext field can cause database",!?5,"problems unless you are sure DINUM is numeric."
"RTN","DIU31",23,0)
 D ^DIM I '$D(X) W $C(7),"??" S Y=DA_U_$P(Y(0),U) G 5
"RTN","DIU31",24,0)
 S ^DD(DI,DA,0)=$P(Y(0),U,1,2)_$E("X",$P(Y(0),U,2)'["X")_U_$P(Y(0),U,3,4)_U_X
"RTN","DIU31",25,0)
 I $D(DDA),DDA'=X S A0="INPUT TRANSFORM^.5",A1=DDA,A2=X D IT^DICATTA
"RTN","DIU31",26,0)
 I $P(Y(0),U,2)["C" D PZ^DIU0 G Q
"RTN","DIU31",27,0)
MORE I $P(Y(0),U,2)["C" G Q
"RTN","DIU31",28,0)
 S DIE=DIC,DR="3:4" I $P(Y(0),U,2)["P" S %=$F(X," D ^DIC") I % S X=$E(X,1,%-8),%=$F(X,"DIC(""S"")=") I % S X=$E(X,%-9,$L(X)),^(12.1)="S "_X,DR=DR_";12EXPLANATION OF SCREEN"
"RTN","DIU31",29,0)
 F %=3,4,12.1 S:$D(^DD(DI,DA,%)) ^UTILITY("DDA",$J,DI,DA,%)=^(%)
"RTN","DIU31",30,0)
 D  D IT1^DICATTA,DIEZ^DIU0,LENGTH^DICATT2(DI,DA) G Q
"RTN","DIU31",31,0)
 .N DI D ^DIE
"RTN","DIU31",32,0)
 ;
"RTN","DIU31",33,0)
O ;FROM 7+1^DIU
"RTN","DIU31",34,0)
 I $P($P(Y(0),U,2),"t",2) D EXTENDED G Q
"RTN","DIU31",35,0)
 S DIK=1,DJJ=+Y W !,$P(Y,U,2)_" OUTPUT TRANSFORM: "
"RTN","DIU31",36,0)
 I '$D(^DD(DI,DJJ,2)) R X:DTIME I '$T S DTOUT=1 G Q
"RTN","DIU31",37,0)
 I $D(^(2)) S (DIK,Y)=^(2) S:$D(DDA) DDA=Y S:$D(^(2.1)) Y=^(2.1) W Y D RW^DIR2 I X="@" W !?9,"DELETED!" K ^DD(DI,DJJ,2),^(2.1) S Y=$P(^(0),U,2),$P(^(0),U,2)=$P(Y,"O")_$P(Y,"O",2),%="" G EX
"RTN","DIU31",38,0)
 G Q:X="" I X?."?" S Y=DJJ_U_$P(^(0),U) W !?4,"Enter a computed-field expression using '"_$P(Y,U,2)_"'",! W:DUZ(0)="@" ?4,"or MUMPS code that takes Y and transforms it to a different Y.",! G O
"RTN","DIU31",39,0)
 K ^DD(DI,DJJ,2) S DICOMPX(1,DI,DJJ)="Y(0)",DA=DIC_DJJ_",2,",DGG=X,DQI="Y(" ;!!!!!  NAKED ^(2) KILLED ^DD(2)!!!!!
"RTN","DIU31",40,0)
 D ^DICOMP K DQI,DICOMPX F %=9.2:.1 Q:'$D(X(%))  S @(DA_"%)=X(%)")
"RTN","DIU31",41,0)
 I $D(X) S ^DD(DI,DJJ,2)="S Y(0)=Y "_X_$P(" S Y=X",U,Y'["X"),^(2.1)=DGG S:$P(^(0),U,2)'["O" $P(^(0),U,2)=$P(^(0),U,2)_"O" S %=^(2) G EX
"RTN","DIU31",42,0)
 S:'DIK ^DD(DI,DJJ,2)=DIK
"RTN","DIU31",43,0)
X W $C(7),"??" Q
"RTN","DIU31",44,0)
 ;
"RTN","DIU31",45,0)
EX S DA=DJJ I $D(DDA),DDA'=% S A1=DDA,A2=%,A0="OUTPUT TRANSFORM^2" D IT^DICATTA ;AUDIT CHANGE TO OUTPUT TRANSFORM
"RTN","DIU31",46,0)
 D PZ^DIU0
"RTN","DIU31",47,0)
Q G Q^DIU
"RTN","DIU31",48,0)
 ;
"RTN","DIU31",49,0)
 ;
"RTN","DIU31",50,0)
 ;
"RTN","DIU31",51,0)
EXTENDED W !!,"THIS FIELD IS DEFINED AS AN EXTENDED DATA TYPE (",$P($G(^DI(.81,+$P($P(Y(0),U,2),"t",2),0)),U),")."
"RTN","DIU31",52,0)
 W !,"ITS INPUT AND OUTPUT TRANSFORMS ARE PART OF THE DEFINITION OF THAT DATA TYPE." Q
"RTN","DIUTC")
0^57^B31448968^n/a
"RTN","DIUTC",1,0)
DIUTC ;O-OIFO/ALA/LG - UTC Timezone API ;Dec 16, 2015  10:00 AM
"RTN","DIUTC",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIUTC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIUTC",4,0)
 ;
"RTN","DIUTC",5,0)
UTC(DTM,TMZ,INST,CNTRY,EXT) ;PEP - Return UTC value
"RTN","DIUTC",6,0)
 ;
"RTN","DIUTC",7,0)
 ; Input Parameters - DATE/TIME (DTM) is (*REQUIRED*) all other parameters are (Optional)
"RTN","DIUTC",8,0)
 ;
"RTN","DIUTC",9,0)
 ;   DTM   - Standard Date/Time; FileMan Internal and External; FileMan-specific e.g. NOW, T+1@12A
"RTN","DIUTC",10,0)
 ;   TMZ   - TimeZone ? Either Full Name (e.g., EASTERN; EASTERN EUPOREAN; ESTONIA; YUKON)
"RTN","DIUTC",11,0)
 ;           or Pointer to the WORLD TIMEZONE (#1.71) file.
"RTN","DIUTC",12,0)
 ;           Note: Time Zone Abbreviation (e.g. EST) can be ambiguous so is not used
"RTN","DIUTC",13,0)
 ;   INST  - Pointer to Institution (#4) file
"RTN","DIUTC",14,0)
 ;   CNTRY - Country Name or Pointer to the COUNTRY CODE (#779.004) file.
"RTN","DIUTC",15,0)
 ;           If Country Name is passed in, it must match the name in the HL7 COUNTRY file  
"RTN","DIUTC",16,0)
 ;   EXT   - Extended return value
"RTN","DIUTC",17,0)
 ;           Null=Default returns GMT with offset (internal FM format)
"RTN","DIUTC",18,0)
 ;           1 returns GMT with offset (internal FM format) with additional external values (multi-part)
"RTN","DIUTC",19,0)
 ;
"RTN","DIUTC",20,0)
 ; Output 
"RTN","DIUTC",21,0)
 ;   returns GMT with offset (internal FM format), if EXT=1 returns additional external values
"RTN","DIUTC",22,0)
 ;
"RTN","DIUTC",23,0)
 ;
"RTN","DIUTC",24,0)
 N %DT,XX,H,M,X,Y
"RTN","DIUTC",25,0)
 N CODE,DTME,GMT,GMTE,GMTO,INSTE,OFF,TMFRM,TMZE,CNTRYE,TMZEXC
"RTN","DIUTC",26,0)
 ;
"RTN","DIUTC",27,0)
 ; get values for all possible parameters
"RTN","DIUTC",28,0)
 F XX="DTM","TMZ","INST","CNTRY","EXT" S @XX=$G(@XX)
"RTN","DIUTC",29,0)
 ;
"RTN","DIUTC",30,0)
 I DTM="" Q -1_"^Date/Time parameter is missing."
"RTN","DIUTC",31,0)
 I INST]"",(TMZ]""!(CNTRY]"")) Q -1_"^Institution parameter cannot include Country or Timezone parameter."
"RTN","DIUTC",32,0)
 I TMZ]"",CNTRY="" Q -1_"^Timezone parameter must include Country parameter."
"RTN","DIUTC",33,0)
 I CNTRY]"",TMZ="" Q -1_"^Country parameter must include Timezone parameter."
"RTN","DIUTC",34,0)
 I EXT'="",(EXT'=1) Q -1_"^Extended parameter must be NULL or a 1 for extended output."
"RTN","DIUTC",35,0)
 ;
"RTN","DIUTC",36,0)
 S %DT="RSTX",X=DTM D ^%DT
"RTN","DIUTC",37,0)
 I Y<0 Q Y_"^Invalid Date/Time"
"RTN","DIUTC",38,0)
 S DTM=$E(Y_"00000",1,14)
"RTN","DIUTC",39,0)
 S Y=DTM D DD^%DT S DTME=Y ; External Date/Time
"RTN","DIUTC",40,0)
 ;
"RTN","DIUTC",41,0)
 ; Find offset if timezone and country parameteres are passed
"RTN","DIUTC",42,0)
 I TMZ]"" D  ;
"RTN","DIUTC",43,0)
 . I +TMZ'=TMZ S TMZ=$$FIND1^DIC(1.71,"","X",TMZ,"","","ERROR")
"RTN","DIUTC",44,0)
 . S TMZE=$$GET1^DIQ(1.71,TMZ_",",.01,"E")
"RTN","DIUTC",45,0)
 I CNTRY]"" D  ;
"RTN","DIUTC",46,0)
 . I +CNTRY'=CNTRY S CNTRY=$$FIND1^DIC(779.004,"","MX",CNTRY,"D","","ERROR")
"RTN","DIUTC",47,0)
 ;
"RTN","DIUTC",48,0)
 ; If no timezone param, no country param, look for institution param
"RTN","DIUTC",49,0)
 ; If the institution param exists get values:
"RTN","DIUTC",50,0)
 ; institution (external), timezone (internal/external), country (internal), timezone exception (internal)
"RTN","DIUTC",51,0)
 ; If no institution param, try to get data from default instituion stored in DUZ(2)
"RTN","DIUTC",52,0)
 I TMZ="",CNTRY="" N MSG D  I $D(MSG) Q -1_MSG
"RTN","DIUTC",53,0)
 . I INST D  Q  ; if Institution is passed get data from Institution file #4
"RTN","DIUTC",54,0)
 . . S INSTE=$$GET1^DIQ(4,INST_",",.01,"E")
"RTN","DIUTC",55,0)
 . . S TMZ=$$GET1^DIQ(4,INST_",",800,"I")
"RTN","DIUTC",56,0)
 . . S TMZE=$$GET1^DIQ(4,INST_",",800,"E")
"RTN","DIUTC",57,0)
 . . S CNTRY=$$GET1^DIQ(4,INST_",",801,"I")
"RTN","DIUTC",58,0)
 . . S TMZEXC=$$GET1^DIQ(4,INST_",",802,"I")
"RTN","DIUTC",59,0)
 . . I 'TMZ!'CNTRY S MSG="^Cannot determine Country and Timezone from the Institution."
"RTN","DIUTC",60,0)
 . ; if Institution not passed try default Institution in DUZ(2)
"RTN","DIUTC",61,0)
 . I +$G(DUZ(2))=0 S MSG="^Cannot determine User location." Q  ; quit if DUZ(2) not defined with message
"RTN","DIUTC",62,0)
 . S INSTE=$$GET1^DIQ(4,+DUZ(2)_",",.01,"E")
"RTN","DIUTC",63,0)
 . S TMZ=$$GET1^DIQ(4,+DUZ(2)_",",800,"I")
"RTN","DIUTC",64,0)
 . S TMZE=$$GET1^DIQ(4,+DUZ(2)_",",800,"E")
"RTN","DIUTC",65,0)
 . S CNTRY=$$GET1^DIQ(4,+DUZ(2)_",",801,"I")
"RTN","DIUTC",66,0)
 . S TMZEXC=$$GET1^DIQ(4,+DUZ(2)_",",802,"I")
"RTN","DIUTC",67,0)
 . I 'TMZ!'CNTRY S MSG="^Cannot determine Country and Timezone from User location."
"RTN","DIUTC",68,0)
 ;
"RTN","DIUTC",69,0)
 ; uppercase the external value for Country from Description field (#2) in file (#779.004)
"RTN","DIUTC",70,0)
 I CNTRY S CNTRYE=$$UP^XLFSTR($$GET1^DIQ(779.004,CNTRY_",",2,"E"))
"RTN","DIUTC",71,0)
 ;
"RTN","DIUTC",72,0)
 I 'TMZ Q -1_"^Invalid Timezone."
"RTN","DIUTC",73,0)
 I 'CNTRY Q -1_"^Invalid Country."
"RTN","DIUTC",74,0)
 I '$D(^DIT(1.71,"AB",CNTRY,TMZ)) Q -1_"^Mismatch of Country and Timezone."
"RTN","DIUTC",75,0)
 ;
"RTN","DIUTC",76,0)
 D CHECKDST ; check for daylight savings, standard, or summer timeframe
"RTN","DIUTC",77,0)
 D GMT ; convert input time to Greenwich Mean Time based on Offset
"RTN","DIUTC",78,0)
 ;
"RTN","DIUTC",79,0)
 ; Quit with GMT+Offset only (internal value)
"RTN","DIUTC",80,0)
 I 'EXT Q GMT_GMTO
"RTN","DIUTC",81,0)
 ;
"RTN","DIUTC",82,0)
 ; Quit with "Extended" output
"RTN","DIUTC",83,0)
 Q GMT_GMTO_U_GMTE_" (UTC"_OFF_")"_U_OFF_U_$G(TMZE)_U_$G(CNTRYE)_U_$G(CODE)_U_$G(TMFRM)_U_$G(INSTE)
"RTN","DIUTC",84,0)
 ;
"RTN","DIUTC",85,0)
 ;GMT+OFFSET ^ GMT+OFFSET EXT ^ OFFSET ^ TIMEZONE EXT ^ COUTRY EXT ^ TIMEZONE ABBREV ^ TIMEFRAME EXT (DAYLIGHT,STANDARD,SUMMER) ^ INSTITUTION EXT
"RTN","DIUTC",86,0)
 ;
"RTN","DIUTC",87,0)
GMT ; calculate GMT time
"RTN","DIUTC",88,0)
 ;
"RTN","DIUTC",89,0)
 I '$D(OFF) Q  ; quit if we don't have the Offset
"RTN","DIUTC",90,0)
 ;
"RTN","DIUTC",91,0)
 S H=$E(OFF,2,3),M=$E(OFF,4,5) ; get hour and minutes from GMT offset
"RTN","DIUTC",92,0)
 S H=$TR($E(OFF),"-+","+-")_H
"RTN","DIUTC",93,0)
 S M=$TR($E(OFF),"-+","+-")_M
"RTN","DIUTC",94,0)
 S GMT=$$FMADD^XLFDT(DTM,,H,M,) ; GMT internal Date/Time value
"RTN","DIUTC",95,0)
 S GMT=$E(GMT_"00000",1,14)
"RTN","DIUTC",96,0)
 S Y=GMT D DD^%DT S GMTE=Y ; GMT External Date/Time value
"RTN","DIUTC",97,0)
 S GMTO=OFF,M=$E(GMTO,4,5)
"RTN","DIUTC",98,0)
 S GMTO=$E(GMTO,1,3)*60+M/5+500
"RTN","DIUTC",99,0)
 ;(+/-hours x 60 + minutes) / 5 = value    then   500 +/- value = offset
"RTN","DIUTC",100,0)
 ;
"RTN","DIUTC",101,0)
 ; massage offset for output
"RTN","DIUTC",102,0)
 S OFF=$E(OFF,1,3)_":"_$E(OFF,4,5)
"RTN","DIUTC",103,0)
 Q
"RTN","DIUTC",104,0)
 ;
"RTN","DIUTC",105,0)
CHECKDST ;
"RTN","DIUTC",106,0)
 ; Check if this timezone changes to daylight (or summer) time or not
"RTN","DIUTC",107,0)
 ; (TDST=1, DOES NOT CHANGE, TDST=0, does change)
"RTN","DIUTC",108,0)
 ;
"RTN","DIUTC",109,0)
 N TDST,SIEN,DIEN,CIEN,DSIEN,YEAR,YIEN,STAN,SDTM,EDTM,DST,DSAV,SAME
"RTN","DIUTC",110,0)
 ;
"RTN","DIUTC",111,0)
 S TDST=1
"RTN","DIUTC",112,0)
 S SIEN=$O(^DIT(1.71,TMZ,1,"B","SST",""))
"RTN","DIUTC",113,0)
 S DIEN=$O(^DIT(1.71,TMZ,1,"B","DST",""))
"RTN","DIUTC",114,0)
 I 'DIEN S DIEN=$O(^DIT(1.71,TMZ,1,"B","SUM",""))
"RTN","DIUTC",115,0)
 I DIEN S CIEN=$O(^DIT(1.71,TMZ,1,DIEN,1,"B",CNTRY,""))
"RTN","DIUTC",116,0)
 I $G(CIEN) S TDST=0,DST=1
"RTN","DIUTC",117,0)
 I '$G(CIEN) S TDST=1
"RTN","DIUTC",118,0)
 ; If the timezone does not change, then DST would be zero for standard time (SST)
"RTN","DIUTC",119,0)
 I $G(TDST) S DST=0
"RTN","DIUTC",120,0)
 ; retrieve the offset for daylight savings (DST=1) OR standard (DST=0)
"RTN","DIUTC",121,0)
 S STAN=^DIT(1.71,TMZ,1,SIEN,0) I DIEN'="" S DSAV=^DIT(1.71,TMZ,1,DIEN,0)
"RTN","DIUTC",122,0)
 I 'TDST D
"RTN","DIUTC",123,0)
 . S DSIEN=$O(^DIT(1.72,"B",CNTRY,""))
"RTN","DIUTC",124,0)
 . I 'DSIEN Q  ; quit if country timeframes not found in world daylight savings file #1.72
"RTN","DIUTC",125,0)
 . S SAME=$P(^DIT(1.72,DSIEN,0),"^",3)
"RTN","DIUTC",126,0)
 . I SAME'="" S DSIEN=$O(^DIT(1.72,"B",SAME,""))
"RTN","DIUTC",127,0)
 ;
"RTN","DIUTC",128,0)
 ; using the year from the date, determine the start and end date/time of world daylight savings from file #1.72
"RTN","DIUTC",129,0)
 I $G(DSIEN) D
"RTN","DIUTC",130,0)
 . S YEAR=$P($$FMTE^XLFDT(DTM\1,5),"/",3)
"RTN","DIUTC",131,0)
 . S YIEN=$O(^DIT(1.72,DSIEN,1,"B",YEAR,""))
"RTN","DIUTC",132,0)
 . I YIEN'="" S SDTM=$P(^DIT(1.72,DSIEN,1,YIEN,0),"^",2),EDTM=$P(^(0),"^",3)
"RTN","DIUTC",133,0)
 . I YIEN="" Q  ; quit if year data not found
"RTN","DIUTC",134,0)
 . ; if DST=1, daylight savings in affect, DST=0, standard time in affect
"RTN","DIUTC",135,0)
 . I DTM<SDTM!(DTM'<EDTM) S DST=0
"RTN","DIUTC",136,0)
 . I DTM'<SDTM,DTM<EDTM S DST=1
"RTN","DIUTC",137,0)
 ;
"RTN","DIUTC",138,0)
 I $G(TMZEXC)=0 S DST=0 ; Timezone Exception from Institution file #4
"RTN","DIUTC",139,0)
 ;
"RTN","DIUTC",140,0)
 I 'DST S OFF=$P(STAN,"^",2),CODE=$P(STAN,"^",3),TMFRM=$P(STAN,U)
"RTN","DIUTC",141,0)
 I DST S OFF=$P(DSAV,"^",2),CODE=$P(DSAV,"^",3),TMFRM=$P(DSAV,U)
"RTN","DIUTC",142,0)
 S TMFRM=$S(TMFRM="SST":"STANDARD",TMFRM="DST":"DAYLIGHT SAVINGS",TMFRM="SUM":"SUMMER",1:"") ; set Timeframe
"RTN","DIUTC",143,0)
 Q
"RTN","DIVR")
0^15^B53639781^B50776190
"RTN","DIVR",1,0)
DIVR ;O-OIFO/GFT - VERIFY FIELD DIFLD, DATA DICTIONARY A ;6SEP2016
"RTN","DIVR",2,0)
 ;;22.2;VA FileMan;**2**;Jan 05, 2016;Build 139
"RTN","DIVR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIVR",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIVR",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIVR",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIVR",7,0)
 ;;GFT;**7,999,1004,1014,1015,1038,1041,1053,1054**
"RTN","DIVR",8,0)
 ;
"RTN","DIVR",9,0)
 ;NOT SURE IF 'DQI' PARAMETER IS EVER USED
"RTN","DIVR",10,0)
BEGIN I $D(DIVFIL)[0 N DIVDAT,DIVFIL,DIVMODE,DIVPG,POP D  G:$G(POP) Q^DIV
"RTN","DIVR",11,0)
 . S DIVMODE="C"
"RTN","DIVR",12,0)
 . D DEVSEL^DIV Q:$G(POP)
"RTN","DIVR",13,0)
 . D INIT^DIV
"RTN","DIVR",14,0)
 N W,I,J,V,DIVREQK,DIVTYPE,DIVTMP,DG,DIVRIX,T,TYP,E,DDC,DIVZ,DE,DR,P4,M,DIDANGL,DIVROUTT,DIPA
"RTN","DIVR",15,0)
 S TYP=$P($G(^DD(A,DIFLD,0)),U,2) I TYP="" Q
"RTN","DIVR",16,0)
 D IJ^DIUTL(A) S V=$O(J(""),-1)
"RTN","DIVR",17,0)
 F T="N","D","P","S","V","F" Q:TYP[T
"RTN","DIVR",18,0)
 F W="FREE TEXT","SET OF CODES","DATE","NUMERIC","POINTER","VARIABLE POINTER","K" I TYP[$E(W) S:W="K" T=W,W="MUMPS" Q
"RTN","DIVR",19,0)
 I TYP["C" Q
"RTN","DIVR",20,0)
TYPE S %=+$P(TYP,"t",2) I %,$D(^DI(.81,%,0)) S T="F",W=$P(^(0),U)_" Data Type"
"RTN","DIVR",21,0)
 W "--FIELD #",DIFLD," ",$$LABEL^DIALOGZ(A,DIFLD),"--  (",W,")"
"RTN","DIVR",22,0)
 S W="W !,""ENTRY#"_$S(V:"'S",1:"")_""",?10,"""_$$LABEL^DIALOGZ(A,.01)_""",?40,""ERROR"",!"
"RTN","DIVR",23,0)
 D LF Q:$D(DIRUT)  S T=$E(T),DIVZ=$P(^DD(A,DIFLD,0),U,3),DDC=$P(^(0),U,5,999),DR=$P(^(0),U,2),P4=$P(^(0),U,4)
"RTN","DIVR",24,0)
 I DR["t" S DDC="N DIQUIET S DIQUIET=1 "_$$VALINT^DIETLIBF(A,DIFLD),DIVROUTT=$$OUTPUT^DIETLIBF(A,DIFLD)
"RTN","DIVR",25,0)
OUTT E  I $G(^DD(A,DIFLD,2))]"" S DIVROUTT=^(2)
"RTN","DIVR",26,0)
 S DIVREQK=$D(^DD("KEY","F",A,DIFLD))>9
"RTN","DIVR",27,0)
 I $D(^DD("IX","F",A,DIFLD)) D
"RTN","DIVR",28,0)
 . S DIVTYPE=T,T="INDEX",DIVROOT=$$FROOTDA^DIKCU(A)
"RTN","DIVR",29,0)
 . D LOADVER^DIVC(A,DIFLD,"DIVTMP")
"RTN","DIVR",30,0)
 F %=0:0 S %=$O(^DD(A,DIFLD,1,%)) Q:%'>0  I $D(^(%,1)) D
"RTN","DIVR",31,0)
 .N X S X=$P(^(0),U,2,9) Q:X'?1.A
"RTN","DIVR",32,0)
 .I ^(2)?1"K ^".E1")",^(1)?1"S ^".E D
"RTN","DIVR",33,0)
 ..S DG(%)="I $D("_$E(^(2),3,99)_"),"_$E(^(1),3,99) I 'V S DIVRIX(X)="" ;Only looks at top-level X-refs
"RTN","DIVR",34,0)
UNIQ ..I DR["U",DIFLD=.01,X="B" S DDC="K % M %="_DIU_"""B"",X) K %(DA) K:$O(%(0)) X I $D(X) "_DDC
"RTN","DIVR",35,0)
 I T'="INDEX",'$D(^(+$O(^DD(A,DIFLD,1,0)),1)) G E
"RTN","DIVR",36,0)
 I T'="INDEX",'$D(DG) W $C(7)_"(CANNOT CHECK"
"RTN","DIVR",37,0)
 E  W "(CHECKING"
"RTN","DIVR",38,0)
 W " CROSS-REFERENCE)" D LF I $D(DIRUT) Q:$D(DQI)  G Q
"RTN","DIVR",39,0)
 I $D(DG) D
"RTN","DIVR",40,0)
 . I T="INDEX" S E=DIVTYPE,DIVTYPE="IX"
"RTN","DIVR",41,0)
 . E  S E=T,T="IX"
"RTN","DIVR",42,0)
E F Y=$F(DDC,"%DT="""):1 S X=$E(DDC,Y) Q:""""[X  I X="E" S $E(DDC,Y)="" Q  ;Take out "E"
"RTN","DIVR",43,0)
 I DR["*" S DDC="Q" I $D(^DD(A,DIFLD,12.1)) X ^(12.1) I $D(DIC("S")) S DDC(1)=DIC("S"),DDC="X DDC(1) E  K X"
"RTN","DIVR",44,0)
 D 0 S X=P4,Y=$P(X,";",2),X=$P(X,";")
"RTN","DIVR",45,0)
 I +X'=X S X=""""_X_"""" I Y="" S DE=DE_"S X=DA D R" G XEC
"RTN","DIVR",46,0)
 S DIDANGL="S X=$S($D(^(DA,"_X_")):$"_$S(Y:"P(^("_X_"),U,"_Y,1:"E(^("_X_"),"_$E(Y,2,9))_"),1:"""")",M=DIDANGL_" D R"
"RTN","DIVR",47,0)
 I $L(M)+$L(DE)>250 S DE=DE_"X DE(1)",DE(1)=M
"RTN","DIVR",48,0)
 E  S DE=DE_M
"RTN","DIVR",49,0)
XEC K DIC,M,Y XECUTE DE_"  Q:$G(DIRUT)" Q:$G(DIRUT)
"RTN","DIVR",50,0)
 ;
"RTN","DIVR",51,0)
DANGL S DIVRIX="A" F  S DIVRIX=$O(DIVRIX(DIVRIX)) Q:DIVRIX=""  D  Q:$G(DIRUT)  ;LOOK FOR BAD CROSS-REFERENCES
"RTN","DIVR",52,0)
 .N IX,SN,SX,DA
"RTN","DIVR",53,0)
 .S IX=I(0)_""""_DIVRIX_""")",SN=$QL(IX)
"RTN","DIVR",54,0)
 .K ^UTILITY("DIVRIX",$J)
"RTN","DIVR",55,0)
 .F  S IX=$Q(@IX) Q:IX=""  Q:$QS(IX,SN)'=DIVRIX  D  Q:$G(DIRUT)
"RTN","DIVR",56,0)
 ..I @IX]"" Q
"RTN","DIVR",57,0)
 ..S DA=$QS(IX,SN+2),SX=" """_DIVRIX_""" CROSS-REF '"_$QS(IX,SN+1)_"'"
"RTN","DIVR",58,0)
 ..I '$D(@(I(0)_DA_")")) S M="DANGLING"_SX D X Q
"RTN","DIVR",59,0)
 ..X DIDANGL I $E($QS(IX,SN+1),1,30)'=$E(X,1,30) S M="WRONG"_SX D X Q
"RTN","DIVR",60,0)
 ..I $D(^UTILITY("DIVRIX",$J,DA)) S M="DUPLICATE"_SX D X
"RTN","DIVR",61,0)
 ..S ^(DA)=""
"RTN","DIVR",62,0)
 Q:$D(DQI)
"RTN","DIVR",63,0)
 W:'$D(M) $C(7),!,"NO PROBLEMS"
"RTN","DIVR",64,0)
Q S M=$O(^UTILITY("DIVR",$J,0)),E=$O(^(M)),DK=J(0)
"RTN","DIVR",65,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DIVR",66,0)
 E  I $T(^%ZISC)]"" D
"RTN","DIVR",67,0)
 . D ^%ZISC
"RTN","DIVR",68,0)
 E  X $G(^%ZIS("C"))
"RTN","DIVR",69,0)
 G:'E!$D(DIRUT)!$D(ZTQUEUED) QX K DIBT,DISV D
"RTN","DIVR",70,0)
 . N C,D,I,J,L,O,Q,S,D0,DDA,DICL,DIFLD,DIU0
"RTN","DIVR",71,0)
 . W ! D S2^DIBT1 Q  ;STORE ENTRIES IN TEMPLATE??
"RTN","DIVR",72,0)
 S DDC=0 I '$D(DIRUT) G Q:Y<0 F E=0:0 S E=$O(^UTILITY("DIVR",$J,E)) Q:E=""  S DDC=DDC+1,^DIBT(+Y,1,E)=""
"RTN","DIVR",73,0)
 S:DDC>0 ^DIBT(+Y,"QR")=DT_U_DDC
"RTN","DIVR",74,0)
QX K DIVINDEX,DIVKEY,DIVREQK,DIVROOT,DIVTMP,DIVTYPE
"RTN","DIVR",75,0)
 K ^UTILITY("DIVR",$J),^UTILITY("DIVRIX",$J),DIRUT,DIROUT,DTOUT,DUOUT,DK,DQ,P,DR Q
"RTN","DIVR",76,0)
 ;
"RTN","DIVR",77,0)
R Q:$D(DIRUT)  ;Tag XEC will send us here, for every entry in the file
"RTN","DIVR",78,0)
 I X?." " Q:DR'["R"&'DIVREQK  D  G X
"RTN","DIVR",79,0)
 . I X="" S M="Missing"_$S(DIVREQK:" key value",1:"")
"RTN","DIVR",80,0)
 . E  S M="Equals only 1 or more spaces"
"RTN","DIVR",81,0)
 GOTO @T ;'T' = 'N' or 'F' or 'S', etc
"RTN","DIVR",82,0)
 ;
"RTN","DIVR",83,0)
P I @("$D(^"_DIVZ_"X,0))") S Y=X G F
"RTN","DIVR",84,0)
 S M="No '"_X_"' in pointed-to File" G X
"RTN","DIVR",85,0)
 ;
"RTN","DIVR",86,0)
S S Y=X X DDC I '$D(X) S M=""""_Y_""" fails screen" G X
"RTN","DIVR",87,0)
 Q:";"_DIVZ[(";"_X_":")  S M=""""_X_""" not in Set" G X
"RTN","DIVR",88,0)
 ;
"RTN","DIVR",89,0)
D S X=$$DATE^DIUTL(X) ;**
"RTN","DIVR",90,0)
N ;
"RTN","DIVR",91,0)
K ;
"RTN","DIVR",92,0)
F S DQ=X I X'?.ANP S M="Non-printing character" G X
"RTN","DIVR",93,0)
 X DDC Q:$D(X)  ;TRY INPUT TRANSFORM
"RTN","DIVR",94,0)
 I $G(DIVROUTT)]"" D  Q:$D(X)
"RTN","DIVR",95,0)
 .N Y S Y=DQ X DIVROUTT S X=Y X DDC ;TRY OUTPUT-TRANSFORMING, THEN INPUT TRANSFORM (AS WITH ^DD(2,.117), 'COUNTY')
"RTN","DIVR",96,0)
 S M=""""_DQ_$S($G(DR)["t":""" is not a valid value",1:""" fails Input Transform")
"RTN","DIVR",97,0)
X I $O(^UTILITY("DIVR",$J,0))="" X W
"RTN","DIVR",98,0)
 S X=$S(V:DA(V),1:DA),^UTILITY("DIVR",$J,X)=""
"RTN","DIVR",99,0)
 S X=V I @(I(0)_"0)")
"RTN","DIVR",100,0)
DA I 'X D  Q
"RTN","DIVR",101,0)
 . D LF Q:$D(DIRUT)
"RTN","DIVR",102,0)
 . W DA,?10,$S($D(^(DA,0)):$E($P(^(0),U),1,30),1:DA),?40,$E(M,1,IOM-40) ;'M' is the message!
"RTN","DIVR",103,0)
 . D:V LF
"RTN","DIVR",104,0)
 D LF Q:$D(DIRUT)  W DA(X),?10,$S($G(^(DA(X),0))]"":$P(^(0),U),1:"***NO ZERO NODE***") S X=X-1,@("Y=$D(^("_I(V-X)_",0))") G DA
"RTN","DIVR",105,0)
 ;
"RTN","DIVR",106,0)
0 ;
"RTN","DIVR",107,0)
 S Y=I(0),DE="",X=V
"RTN","DIVR",108,0)
L S DA="DA" S:X DA=DA_"("_X_")" S Y=Y_DA,DE=DE_"F "_DA_"=0:0 ",%="S "_DA_"=$O("_Y_"))" I V>2 S DE(X+X)=%,DE=DE_"X DE("_(X+X)_")"
"RTN","DIVR",109,0)
 E  S DE=DE_%
"RTN","DIVR",110,0)
 S DE=DE_" Q:"_DA_"'>0  S D"_(V-X)_"="_DA_" "
"RTN","DIVR",111,0)
 ;I X=1,DIFLD=.01 S DE=DE_"X P:$D(^(DA(1),"_I(V)_",0)) ",P="S $P(^(0),U,2)="""_$P(^DD(J(V-1),P,0),U,2)_Q
"RTN","DIVR",112,0)
 S X=X-1 Q:X<0  S Y=Y_","_I(V-X)_"," G L
"RTN","DIVR",113,0)
 ;
"RTN","DIVR",114,0)
IX F %=0:0 S %=$O(DG(%)) Q:+%'>0  X DG(%) I '$T S M=""""_X_""" not properly Cross-referenced" G X
"RTN","DIVR",115,0)
 G @E
"RTN","DIVR",116,0)
 ;
"RTN","DIVR",117,0)
V I $P(X,";",2)'?1A.AN1"(".ANP,$P(X,";",2)'?1"%".AN1"(".ANP S M=""""_X_""""_" has the wrong format" G X
"RTN","DIVR",118,0)
 S M=$S($D(@(U_$P(X,";",2)_"0)")):^(0),1:"")
"RTN","DIVR",119,0)
 I '$D(^DD(A,DIFLD,"V","B",+$P(M,U,2))) S M=$P(M,U)_" FILE not in the DD" G X
"RTN","DIVR",120,0)
 I '$D(@(U_$P(X,";",2)_+X_",0)")) S M=U_$P(X,";",2)_+X_",0) does not exist" G X
"RTN","DIVR",121,0)
 G F
"RTN","DIVR",122,0)
 ;
"RTN","DIVR",123,0)
INDEX ;Check new indexes
"RTN","DIVR",124,0)
 ;
"RTN","DIVR",125,0)
 ;Set DIVINDEX(indexName,index#) = "" for indexes aren't set
"RTN","DIVR",126,0)
 ;Set DIVKEY(file#,keyName,uiNumber) = "null" : if key field is null
"RTN","DIVR",127,0)
 ;                                     "uniq" : if key is not unique
"RTN","DIVR",128,0)
 K DIVKEY,DIINDEX
"RTN","DIVR",129,0)
 D VER^DIVC(A,DIVROOT,.DA,"DIVTMP",.DIVINDEX,.DIVKEY)
"RTN","DIVR",130,0)
 ;
"RTN","DIVR",131,0)
 ;If some indexes aren't set properly, print index info
"RTN","DIVR",132,0)
 I $D(DIVINDEX) D  K DIVINDEX Q:$D(DIRUT)
"RTN","DIVR",133,0)
 . N DIVNAME,DIVNUM
"RTN","DIVR",134,0)
 . S DIVNAME="" F  S DIVNAME=$O(DIVINDEX(DIVNAME)) Q:DIVNAME=""  D  Q:$D(DIRUT)
"RTN","DIVR",135,0)
 .. S DIVNUM=0 F  S DIVNUM=$O(DIVINDEX(DIVNAME,DIVNUM)) Q:'DIVNUM  D  Q:$D(DIRUT)
"RTN","DIVR",136,0)
 ... S M=""""_X_""": "_DIVNAME_" index (#"_DIVNUM_") not properly set"
"RTN","DIVR",137,0)
 ... D IER
"RTN","DIVR",138,0)
 ;
"RTN","DIVR",139,0)
 ;If keys integrity is violated, print key info
"RTN","DIVR",140,0)
 I $D(DIVKEY) D  K DIVKEY Q:$D(DIRUT)
"RTN","DIVR",141,0)
 . N DIVFILE,DIVKNM,DIVPROB,DIVXRNM
"RTN","DIVR",142,0)
 . S DIVFILE="" F  S DIVFILE=$O(DIVKEY(DIVFILE)) Q:DIVFILE=""  D  Q:$D(DIRUT)
"RTN","DIVR",143,0)
 .. S DIVKNM="" F  S DIVKNM=$O(DIVKEY(DIVFILE,DIVKNM)) Q:DIVKNM=""  D  Q:$D(DIRUT)
"RTN","DIVR",144,0)
 ... S DIVXRNM="" F  S DIVXRNM=$O(DIVKEY(DIVFILE,DIVKNM,DIVXRNM)) Q:DIVXRNM=""  D  Q:$D(DIRUT)
"RTN","DIVR",145,0)
 .... S DIVPROB=DIVKEY(DIVFILE,DIVKNM,DIVXRNM)
"RTN","DIVR",146,0)
 .... S M=""""_X_""": "_$S(DIVPROB="null":"Key values are missing.",1:"Key is not unique.")
"RTN","DIVR",147,0)
 .... S M=M_" (File #"_DIVFILE_", Key "_DIVKNM_", Index "_DIVXRNM_")"
"RTN","DIVR",148,0)
 .... D IER
"RTN","DIVR",149,0)
 ;
"RTN","DIVR",150,0)
 ;Continue with checking traditional xrefs (if any) and data type
"RTN","DIVR",151,0)
 G @DIVTYPE
"RTN","DIVR",152,0)
 ;
"RTN","DIVR",153,0)
IER ;Print info about invalid indexes. (Modeled after DA subroutine above)
"RTN","DIVR",154,0)
 N DIVTXT,DIVI,X
"RTN","DIVR",155,0)
 ;
"RTN","DIVR",156,0)
 ;Wrap message M to within 40 columns
"RTN","DIVR",157,0)
 S DIVTXT(0)=M D WRAP^DIKCU2(.DIVTXT,40)
"RTN","DIVR",158,0)
 ;
"RTN","DIVR",159,0)
 ;If nothing was written yet, write column headers
"RTN","DIVR",160,0)
 I $O(^UTILITY("DIVR",$J,0))="" X W
"RTN","DIVR",161,0)
 ;
"RTN","DIVR",162,0)
 ;Set ^UTILITY("DIVR",$J,topIen)="", X = level#, naked = top level root
"RTN","DIVR",163,0)
 S X=$S(V:DA(V),1:DA),^UTILITY("DIVR",$J,X)=""
"RTN","DIVR",164,0)
 S X=V I @(I(0)_"0)")
"RTN","DIVR",165,0)
 ;
"RTN","DIVR",166,0)
IER1 ;If top level, write record info and message
"RTN","DIVR",167,0)
 I 'X D  Q
"RTN","DIVR",168,0)
 . D LF Q:$D(DIRUT)  W DA,?10,$S($D(^(DA,0)):$P(^(0),U),1:DA)
"RTN","DIVR",169,0)
 . F DIVI=0:1 Q:$D(DIVTXT(DIVI))[0  D  Q:$D(DIRUT)
"RTN","DIVR",170,0)
 .. I DIVI D LF Q:$D(DIRUT)
"RTN","DIVR",171,0)
 .. W ?40,DIVTXT(DIVI)
"RTN","DIVR",172,0)
 . D:V LF
"RTN","DIVR",173,0)
 ;
"RTN","DIVR",174,0)
 ;Else write subrecord info, decrement level, set naked = ^naked(node,0)
"RTN","DIVR",175,0)
 D LF Q:$D(DIRUT)
"RTN","DIVR",176,0)
 W DA(X),?10,$P(^(DA(X),0),U) S X=X-1,@("Y=$D(^("_I(V-X)_",0))")
"RTN","DIVR",177,0)
 G IER1
"RTN","DIVR",178,0)
 ;
"RTN","DIVR",179,0)
LF ;Issue a line feed or EOP read
"RTN","DIVR",180,0)
 I $Y+3<IOSL W ! Q
"RTN","DIVR",181,0)
 N DINAKED S DINAKED=$NA(^(0))
"RTN","DIVR",182,0)
 I IOST?1"C-".E D
"RTN","DIVR",183,0)
 . N DIR,X,Y
"RTN","DIVR",184,0)
 . S DIR(0)="E" W ! D ^DIR
"RTN","DIVR",185,0)
 ;
"RTN","DIVR",186,0)
 I '$D(DIRUT) D
"RTN","DIVR",187,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DIRUT)=1
"RTN","DIVR",188,0)
 . E  W @IOF D HDR
"RTN","DIVR",189,0)
 S:DINAKED]"" DINAKED=$S(DINAKED["""""":$O(@DINAKED),1:$D(@DINAKED))
"RTN","DIVR",190,0)
 Q
"RTN","DIVR",191,0)
 ;
"RTN","DIVR",192,0)
HDR ;Print header
"RTN","DIVR",193,0)
 N DIVTAB
"RTN","DIVR",194,0)
 S DIVPG=$G(DIVPG)+1
"RTN","DIVR",195,0)
 W "VERIFY FIELDS REPORT"
"RTN","DIVR",196,0)
 ;
"RTN","DIVR",197,0)
 S DIVTAB=IOM-1-$L(DIVFIL)-$L(DIVDAT)-$L(DIVPG)
"RTN","DIVR",198,0)
 I DIVTAB>1 W !,DIVFIL_$J("",DIVTAB)_DIVDAT_DIVPG
"RTN","DIVR",199,0)
 E  W !,DIVFIL,!,$J("",IOM-1-$L(DIVDAT)-$L(DIVPG))_DIVDAT_DIVPG
"RTN","DIVR",200,0)
 W !,$TR($J("",IOM-1)," ","-"),!
"RTN","DIVR",201,0)
 Q
"RTN","DIVR",202,0)
 ;
"RTN","DIVR",203,0)
 ;
"RTN","DIVR",204,0)
 ;
"RTN","DIVR",205,0)
EN(A,DIFLD,DQI) ;Main Entry Point for VEN version
"RTN","DIVR",206,0)
 G BEGIN
"SEC","^DIC",1.71,1.71,0,"AUDIT")
@
"SEC","^DIC",1.71,1.71,0,"DD")
@
"SEC","^DIC",1.71,1.71,0,"DEL")
@
"SEC","^DIC",1.71,1.71,0,"LAYGO")
@
"SEC","^DIC",1.71,1.71,0,"RD")
@
"SEC","^DIC",1.71,1.71,0,"WR")
@
"SEC","^DIC",1.72,1.72,0,"AUDIT")
@
"SEC","^DIC",1.72,1.72,0,"DD")
@
"SEC","^DIC",1.72,1.72,0,"DEL")
@
"SEC","^DIC",1.72,1.72,0,"LAYGO")
@
"SEC","^DIC",1.72,1.72,0,"RD")
@
"SEC","^DIC",1.72,1.72,0,"WR")
@
"VER")
8.0^22.2
"^DD",.81,.81,0)
FIELD^^201^10
"^DD",.81,.81,0,"DDA")
N
"^DD",.81,.81,0,"DT")
3170217
"^DD",.81,.81,0,"IX","AFDEF",.81215,.01)

"^DD",.81,.81,0,"IX","B",.81,.01)

"^DD",.81,.81,0,"IX","C",.81,1)

"^DD",.81,.81,0,"NM","DATA TYPE")

"^DD",.81,.81,0,"PT",.4014,15)

"^DD",.81,.81,0,"PT",.42,1)

"^DD",.81,.81,0,"PT",.86,41)

"^DD",.81,.81,.001,0)
NUMBER^NJ16,2^^ ^K:+X'=X!(X>9999999999999.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",.81,.81,.001,3)
Type a Number between 1 and 9999999999999.99, 2 Decimal Digits
"^DD",.81,.81,.01,0)
NAME^RFa^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",.81,.81,.01,1,0)
^.1
"^DD",.81,.81,.01,1,1,0)
.81^B
"^DD",.81,.81,.01,1,1,1)
S ^DI(.81,"B",$E(X,1,30),DA)=""
"^DD",.81,.81,.01,1,1,2)
K ^DI(.81,"B",$E(X,1,30),DA)
"^DD",.81,.81,.01,3)
NAME MUST BE 3-30 CHARACTERS
"^DD",.81,.81,.01,"AUDIT")
y
"^DD",.81,.81,.01,"DEL",1,0)
D DELETEQ^DIETLIB
"^DD",.81,.81,.01,"DT")
3170217
"^DD",.81,.81,1,0)
INTERNAL REPRESENTATION^Fa^^0;2^I ",N,F,D,S,P,K,"'[X!($L(X)>1) K X
"^DD",.81,.81,1,1,0)
^.1
"^DD",.81,.81,1,1,1,0)
.81^C
"^DD",.81,.81,1,1,1,1)
S ^DI(.81,"C",$E(X,1,30),DA)=""
"^DD",.81,.81,1,1,1,2)
K ^DI(.81,"C",$E(X,1,30),DA)
"^DD",.81,.81,1,3)
MUST BE ONE OF THE BASIC CODES (N,F,D,S,P,K) DENOTING FILEMAN FIELD TYPES
"^DD",.81,.81,1,"AUDIT")
y
"^DD",.81,.81,1,"DT")
3170217
"^DD",.81,.81,2,0)
STANDARD PROMPT^Fa^^0;3^K:$L(X)>70!($L(X)<1) X
"^DD",.81,.81,2,3)
Answer must be 1-70 characters in length.
"^DD",.81,.81,2,21,0)
^^2^2^2960124^
"^DD",.81,.81,2,21,1,0)
This is the default prompt used during a Reader (^DIR) call of this
"^DD",.81,.81,2,21,2,0)
data type, when no prompt is supplied in DIR("A").
"^DD",.81,.81,2,"AUDIT")
y
"^DD",.81,.81,2,"DT")
3170217
"^DD",.81,.81,3,0)
SORT BY EXTERNAL?^Sa^0:NO;1:YES;^0;4^Q
"^DD",.81,.81,3,21,0)
^^2^2^2960806^
"^DD",.81,.81,3,21,1,0)
Enter 'YES' if, by default, data of this data type should sort by its
"^DD",.81,.81,3,21,2,0)
external rather than internal form.
"^DD",.81,.81,3,"AUDIT")
y
"^DD",.81,.81,3,"DT")
3170217
"^DD",.81,.81,11,0)
SHORT DESCRIPTION^Fa^^11;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",.81,.81,11,3)
Answer must be 1-245 characters in length.
"^DD",.81,.81,11,"AUDIT")
y
"^DD",.81,.81,11,"DT")
3170217
"^DD",.81,.81,21,0)
DESCRIPTION^.8121^^21;0
"^DD",.81,.81,41,0)
FIELDS DEFINED BY THIS TYPE^.81215^^41;0
"^DD",.81,.81,41,9)
^
"^DD",.81,.81,41,21,0)
^^2^2^
"^DD",.81,.81,41,21,1,0)
This multiple field list all fields in this database that point to this DATA TYPE.  These are not editable here.
"^DD",.81,.81,41,21,2,0)
The values are stuffed automatically when a field using this DATA TYPE is created under 'MODIFY FILE ATTRIBUTES'.
"^DD",.81,.81,101,0)
PROPERTY^.81101P^^101;0
"^DD",.81,.81,101,21,0)
^^1^1
"^DD",.81,.81,101,21,1,0)
This multiple lists all the PROPERTIES that specify what this DATA TYPE does.
"^DD",.81,.81,201,0)
METHOD^.81201P^^201;0
"^DD",.81,.81,201,21,0)
^^1^1
"^DD",.81,.81,201,21,1,0)
This multiple lists all the METHODS that specify what this DATA TYPE does.
"^DD",.81,.81101,0)
PROPERTY SUB-FIELD^^61^5
"^DD",.81,.81101,0,"DT")
3160929
"^DD",.81,.81101,0,"IX","AC",.81101,1)

"^DD",.81,.81101,0,"IX","B",.81101,.01)

"^DD",.81,.81101,0,"NM","PROPERTY")

"^DD",.81,.81101,0,"UP")
.81
"^DD",.81,.81101,.01,0)
PROPERTY^MP.86Xa^DI(.86,^0;1^S DINUM=X
"^DD",.81,.81101,.01,1,0)
^.1
"^DD",.81,.81101,.01,1,1,0)
.81101^B
"^DD",.81,.81101,.01,1,1,1)
S ^DI(.81,DA(1),101,"B",$E(X,1,30),DA)=""
"^DD",.81,.81101,.01,1,1,2)
K ^DI(.81,DA(1),101,"B",$E(X,1,30),DA)
"^DD",.81,.81101,.01,3)
Select a PROPERTY that needs to have a VALUE for this DATA TYPE.
"^DD",.81,.81101,.01,21,0)
^^2^2
"^DD",.81,.81101,.01,21,1,0)
Existing PROPERTY names should only be edited with great care.
"^DD",.81,.81101,.01,21,2,0)
A PROPERTY is a string or number that defines something about the Data Type.
"^DD",.81,.81101,.01,"AUDIT")
y
"^DD",.81,.81101,.01,"DT")
3150913
"^DD",.81,.81101,1,0)
ORDER^NJ4,1a^^0;2^K:+X'=X!(X>99.9)!(X<1)!(X?.E1"."2N.N) X
"^DD",.81,.81101,1,1,0)
^.1
"^DD",.81,.81101,1,1,1,0)
.81101^AC
"^DD",.81,.81101,1,1,1,1)
S ^DI(.81,DA(1),101,"AC",$E(X,1,30),DA)=""
"^DD",.81,.81101,1,1,1,2)
K ^DI(.81,DA(1),101,"AC",$E(X,1,30),DA)
"^DD",.81,.81101,1,1,1,"%D",0)
^^1^1^
"^DD",.81,.81101,1,1,1,"%D",1,0)
This cross reference allows sorting PROPERTIES by the ORDER in which they should be presented.
"^DD",.81,.81101,1,3)
Type a Number between 1 and 99.9, 1 Decimal Digit
"^DD",.81,.81101,1,21,0)
^^2^2^2951205^
"^DD",.81,.81101,1,21,1,0)
Enter the relative order in which FileMan should prompt for this property
"^DD",.81,.81101,1,21,2,0)
at field creation.
"^DD",.81,.81101,1,"AUDIT")
y
"^DD",.81,.81101,1,"DT")
3150913
"^DD",.81,.81101,10,0)
PROMPT?^Ka^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",.81,.81101,10,3)
This is Standard MUMPS code.
"^DD",.81,.81101,10,9)
@
"^DD",.81,.81101,10,21,0)
^^3^3^2951205^
"^DD",.81,.81101,10,21,1,0)
Enter MUMPS code that sets $T.  If $T evaluates to TRUE, then FileMan
"^DD",.81,.81101,10,21,2,0)
will prompt for this property when a field of this Data Type is created.
"^DD",.81,.81101,10,21,3,0)
A null value is equivalent to "I 1".
"^DD",.81,.81101,10,"AUDIT")
y
"^DD",.81,.81101,10,"DT")
3150913
"^DD",.81,.81101,31,0)
VALUE^Fa^^31;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",.81,.81101,31,3)
Enter the string that will become the default value for this PROPERTY, 1 to 245 characters.
"^DD",.81,.81101,31,21,0)
^^3^3
"^DD",.81,.81101,31,21,1,0)
This value will be inserted into the definition of fields defined by this Data Type Property.
"^DD",.81,.81101,31,21,2,0)
For a PROPERTY like FIELD LENGTH, the VALUE will be a number.
"^DD",.81,.81101,31,21,3,0)
For a PROPERTY like SET OF CODES, the VALUE will be a string (like "1:TRUE;0:FALSE")
"^DD",.81,.81101,31,"AUDIT")
y
"^DD",.81,.81101,31,"DT")
3150913
"^DD",.81,.81101,33,0)
DEFAULT VALUE PROMPTED^Fa^^33;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",.81,.81101,33,3)
Enter the string that will show as the expected value (internal form) for this PROPERTY, 1 to 245 characters.
"^DD",.81,.81101,33,21,0)
^^3^3
"^DD",.81,.81101,33,21,1,0)
This field should have a value only if, when a new FileMan field is being created (MODIFY FILE ATTRIBUTES),
"^DD",.81,.81101,33,21,2,0)
the PROPERTY should be prompted with a default.  For example, if a true/false PROPERTY normally takes a 'NO' value,
"^DD",.81,.81101,33,21,3,0)
then this field has the value '0', which is usually the internal form of 'NO'.
"^DD",.81,.81101,33,"AUDIT")
y
"^DD",.81,.81101,33,"DT")
3160929
"^DD",.81,.81201,0)
METHOD SUB-FIELD^^31.1^2
"^DD",.81,.81201,0,"DT")
3150913
"^DD",.81,.81201,0,"IX","B",.81201,.01)

"^DD",.81,.81201,0,"NM","METHOD")

"^DD",.81,.81201,0,"UP")
.81
"^DD",.81,.81201,.01,0)
METHOD^MP.87Xa^DI(.87,^0;1^S DINUM=X
"^DD",.81,.81201,.01,1,0)
^.1
"^DD",.81,.81201,.01,1,1,0)
.81201^B
"^DD",.81,.81201,.01,1,1,1)
S ^DI(.81,DA(1),201,"B",$E(X,1,30),DA)=""
"^DD",.81,.81201,.01,1,1,2)
K ^DI(.81,DA(1),201,"B",$E(X,1,30),DA)
"^DD",.81,.81201,.01,3)
Select a METHOD that needs to have MUMPS code for this DATA TYPE.
"^DD",.81,.81201,.01,21,0)
^^1^1
"^DD",.81,.81201,.01,21,1,0)
This step allows a programmer to change the name of or specify the METHOD.
"^DD",.81,.81201,.01,"AUDIT")
y
"^DD",.81,.81201,.01,"DT")
3150913
"^DD",.81,.81201,31,0)
M CODE^Fa^^31;E1,245^D ^DIM
"^DD",.81,.81201,31,3)
Enter MUMPS code that will perform the METHOD
"^DD",.81,.81201,31,9)
@
"^DD",.81,.81201,31,21,0)
^^1^1
"^DD",.81,.81201,31,21,1,0)
Code that will do what the METHOD requires.
"^DD",.81,.81201,31,"AUDIT")
y
"^DD",.81,.81201,31,"DT")
3150913
"^DD",.81,.8121,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",.81,.8121,0,"DT")
2951026
"^DD",.81,.8121,0,"NM","DESCRIPTION")

"^DD",.81,.8121,0,"UP")
.81
"^DD",.81,.8121,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",.81,.8121,.01,"DT")
2951026
"^DD",.81,.81215,0)
FIELD DEFINED BY THIS TYPE SUB-FIELD^^.01^1
"^DD",.81,.81215,0,"NM","FIELD DEFINED BY THIS TYPE")

"^DD",.81,.81215,0,"UP")
.81
"^DD",.81,.81215,.01,0)
FIELD DEFINED BY THIS TYPE^F^^0;1^I X'?1.NP1","1.NP K X
"^DD",.81,.81215,.01,1,0)
^.1
"^DD",.81,.81215,.01,1,1,0)
.81^AFDEF
"^DD",.81,.81215,.01,1,1,1)
S ^DI(.81,"AFDEF",DA(1),$E(X,1,30),DA)=""
"^DD",.81,.81215,.01,1,1,2)
K ^DI(.81,"AFDEF",DA(1),$E(X,1,30),DA)
"^DD",.81,.81215,.01,3)
Enter a file number, then comma, then field number, of a field defined by this DATA TYPE
"^DD",.9,.9,.01,0)
NAME^RFJ150^^0;1^K:$L(X)>150!($L(X)<3)!'(X'?1P.E) X
"^DD",.9,.9,.01,1,0)
^.1
"^DD",.9,.9,.01,1,1,0)
.9^B
"^DD",.9,.9,.01,1,1,1)
S ^DDD("B",$E(X,1,150),DA)=""
"^DD",.9,.9,.01,1,1,2)
K ^DDD("B",$E(X,1,150),DA)
"^DD",.9,.9,.01,1,1,"DT")
3150807
"^DD",.9,.9,.01,3)
Enter NAME as a combination of the FILENAME_FIELDNAME being referenced.
"^DD",.9,.9,.01,21,0)
^.001^4^4^3160211^^^^
"^DD",.9,.9,.01,21,1,0)
The NAME is a unique combination of FILENAME_FIELDNAME used to map file data structures.
"^DD",.9,.9,.01,21,2,0)
Examples:
"^DD",.9,.9,.01,21,3,0)
NEW PERSON_DEFINED FORMATS FOR LM
"^DD",.9,.9,.01,21,4,0)
NEW PERSON_DEFINED FORMATS FOR LM_DEFAULT
"^DD",.9,.9,.01,"DT")
3160211
"^DD",.9,.9,.06,0)
OBJECT NAME^FJ150^^0;6^K:$L(X)>150!($L(X)<3)!'(X'?1P.E) X
"^DD",.9,.9,.06,1,0)
^.1
"^DD",.9,.9,.06,1,1,0)
.9^D
"^DD",.9,.9,.06,1,1,1)
S ^DDD("D",$E(X,1,150),DA)=""
"^DD",.9,.9,.06,1,1,2)
K ^DDD("D",$E(X,1,150),DA)
"^DD",.9,.9,.06,1,1,"%D",0)
^.101^2^2^3160211^^^^
"^DD",.9,.9,.06,1,1,"%D",1,0)
The D cross reference is to give developers a quick file.field lookup
"^DD",.9,.9,.06,1,1,"%D",2,0)
in camel case notation to connect to data files and fields.
"^DD",.9,.9,.06,1,1,"DT")
3150807
"^DD",.9,.9,.06,3)
Enter this record's NAME field using camel case notation.
"^DD",.9,.9,.06,21,0)
^.001^5^5^3160211^^^^
"^DD",.9,.9,.06,21,1,0)
The OBJECT NAME is the NAME field (.01) converted to camel case notation.
"^DD",.9,.9,.06,21,2,0)
The OBJECT NAME will be used to connect to data files and fields.
"^DD",.9,.9,.06,21,3,0)
Examples:
"^DD",.9,.9,.06,21,4,0)
newPerson.definedFormatsForLm
"^DD",.9,.9,.06,21,5,0)
newPerson.definedFormatsForLm.default
"^DD",.9,.9,.06,"DT")
3160211
"^DD",.9,.9,.07,0)
LAST UPDATED^D^^0;7^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",.9,.9,.07,3)
Enter the date/time of the most recent update to this record
"^DD",.9,.9,.07,21,0)
^^2^2^3160210^
"^DD",.9,.9,.07,21,1,0)
This is the most recent date/time that ^DDD ran and
"^DD",.9,.9,.07,21,2,0)
updated this record.
"^DD",.9,.9,.07,"DT")
3160210
"^DD",1.71,1.71,0)
FIELD^^1^2
"^DD",1.71,1.71,0,"DT")
3170217
"^DD",1.71,1.71,0,"IX","AB",1.7111,.01)

"^DD",1.71,1.71,0,"IX","B",1.71,.01)

"^DD",1.71,1.71,0,"NM","WORLD TIMEZONES")

"^DD",1.71,1.71,0,"PT",4,800)

"^DD",1.71,1.71,0,"VRPK")
DI
"^DD",1.71,1.71,.01,0)
NAME^RFJ40^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",1.71,1.71,.01,1,0)
^.1
"^DD",1.71,1.71,.01,1,1,0)
1.71^B
"^DD",1.71,1.71,.01,1,1,1)
S ^DIT(1.71,"B",$E(X,1,30),DA)=""
"^DD",1.71,1.71,.01,1,1,2)
K ^DIT(1.71,"B",$E(X,1,30),DA)
"^DD",1.71,1.71,.01,3)
Enter the unique full name of a timezone (3-40 characters).
"^DD",1.71,1.71,.01,21,0)
^^1^1^3160803^
"^DD",1.71,1.71,.01,21,1,0)
This is the name of the timezone.
"^DD",1.71,1.71,.01,"DT")
3160804
"^DD",1.71,1.71,1,0)
TIMEFRAME^1.711S^^1;0
"^DD",1.71,1.71,1,21,0)
^.001^2^2^3160815^^^^
"^DD",1.71,1.71,1,21,1,0)
This multiple contains all the occurrences of timeframe that may exist
"^DD",1.71,1.71,1,21,2,0)
for the given time zone.
"^DD",1.71,1.711,0)
TIMEFRAME SUB-FIELD^^1^4
"^DD",1.71,1.711,0,"DT")
3160815
"^DD",1.71,1.711,0,"IX","B",1.711,.01)

"^DD",1.71,1.711,0,"NM","TIMEFRAME")

"^DD",1.71,1.711,0,"UP")
1.71
"^DD",1.71,1.711,.01,0)
TIMEFRAME^MS^SST:STANDARD;DST:DAYLIGHT SAVINGS;SUM:SUMMER;^0;1^Q
"^DD",1.71,1.711,.01,1,0)
^.1
"^DD",1.71,1.711,.01,1,1,0)
1.711^B
"^DD",1.71,1.711,.01,1,1,1)
S ^DIT(1.71,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",1.71,1.711,.01,1,1,2)
K ^DIT(1.71,DA(1),1,"B",$E(X,1,30),DA)
"^DD",1.71,1.711,.01,3)
Enter the appropriate code for STANDARD, DAYLIGHT SAVINGS, or SUMMER.
"^DD",1.71,1.711,.01,21,0)
^.001^4^4^3160805^^^^
"^DD",1.71,1.711,.01,21,1,0)
The timeframe of the timezone indicates what times a timezone may
"^DD",1.71,1.711,.01,21,2,0)
follow.  All timezones should include a STANDARD timeframe.
"^DD",1.71,1.711,.01,21,3,0)
Some timezones may additionally have DAYLIGHT SAVINGS or SUMMER
"^DD",1.71,1.711,.01,21,4,0)
timeframe (as it may be known in other parts of the world).
"^DD",1.71,1.711,.01,"DT")
3160804
"^DD",1.71,1.711,.02,0)
OFFSET^FJ5^^0;2^K:$L(X)>5!($L(X)<5)!'(X?1"+"4N!(X?1"-"4N)) X
"^DD",1.71,1.711,.02,3)
Enter the full offset starting with - or + and 4 digits.
"^DD",1.71,1.711,.02,21,0)
^.001^5^5^3160815^^^^
"^DD",1.71,1.711,.02,21,1,0)
This is the full offset value associated with a timeframe for a specific
"^DD",1.71,1.711,.02,21,2,0)
timezone. It will have a + or a - depending on the timezone's location to 
"^DD",1.71,1.711,.02,21,3,0)
Greenwich. Then the full numeric hours/minutes from Greenwich.  It should
"^DD",1.71,1.711,.02,21,4,0)
have leading/trailing zeros as needed.
"^DD",1.71,1.711,.02,21,5,0)
Examples: -0330, +1030, +0845, -0700.
"^DD",1.71,1.711,.02,"DT")
3160815
"^DD",1.71,1.711,.03,0)
CODE^FJ5^^0;3^K:$L(X)>5!($L(X)<2) X
"^DD",1.71,1.711,.03,3)
Answer must be 2-5 characters in length.
"^DD",1.71,1.711,.03,21,0)
^^3^3^3160804^
"^DD",1.71,1.711,.03,21,1,0)
The code that can be used for the timezone/timeframe.
"^DD",1.71,1.711,.03,21,2,0)
This could be duplicated code.
"^DD",1.71,1.711,.03,21,3,0)
Example: ACT = Australian Central Time OR ACT = Acre Time.
"^DD",1.71,1.711,.03,"DT")
3160804
"^DD",1.71,1.711,1,0)
COUNTRY^1.7111P^^1;0
"^DD",1.71,1.711,1,21,0)
^.001^4^4^3160815^^^
"^DD",1.71,1.711,1,21,1,0)
Country is found under timeframe because while all countries 
"^DD",1.71,1.711,1,21,2,0)
follow STANDARD timeframe, not every country in the same 
"^DD",1.71,1.711,1,21,3,0)
timezone follows DAYLIGHT SAVINGS or SUMMER timeframe.
"^DD",1.71,1.711,1,21,4,0)
A country should be listed under one or more timeframes that they follow.
"^DD",1.71,1.7111,0)
COUNTRY SUB-FIELD^^.01^1
"^DD",1.71,1.7111,0,"DT")
3160808
"^DD",1.71,1.7111,0,"IX","B",1.7111,.01)

"^DD",1.71,1.7111,0,"NM","COUNTRY")

"^DD",1.71,1.7111,0,"UP")
1.711
"^DD",1.71,1.7111,.01,0)
COUNTRY^MP779.004'^HL(779.004,^0;1^Q
"^DD",1.71,1.7111,.01,1,0)
^.1
"^DD",1.71,1.7111,.01,1,1,0)
1.7111^B
"^DD",1.71,1.7111,.01,1,1,1)
S ^DIT(1.71,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",1.71,1.7111,.01,1,1,2)
K ^DIT(1.71,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",1.71,1.7111,.01,1,2,0)
1.71^AB
"^DD",1.71,1.7111,.01,1,2,1)
S ^DIT(1.71,"AB",$E(X,1,30),DA(2),DA(1),DA)=""
"^DD",1.71,1.7111,.01,1,2,2)
K ^DIT(1.71,"AB",$E(X,1,30),DA(2),DA(1),DA)
"^DD",1.71,1.7111,.01,1,2,"%D",0)
^.101^2^2^3160808^^
"^DD",1.71,1.7111,.01,1,2,"%D",1,0)
This is used to verify that the Country and Timezone are a Valid input
"^DD",1.71,1.7111,.01,1,2,"%D",2,0)
Combination.
"^DD",1.71,1.7111,.01,1,2,"DT")
3160808
"^DD",1.71,1.7111,.01,3)
Select the country.
"^DD",1.71,1.7111,.01,21,0)
^.001^1^1^3160815^^
"^DD",1.71,1.7111,.01,21,1,0)
Standard country reference.
"^DD",1.71,1.7111,.01,"DT")
3160808
"^DD",1.72,1.72,0)
FIELD^^1^4
"^DD",1.72,1.72,0,"DT")
3170217
"^DD",1.72,1.72,0,"IX","B",1.72,.01)

"^DD",1.72,1.72,0,"NM","WORLD DAYLIGHT SAVINGS")

"^DD",1.72,1.72,0,"VRPK")
DI
"^DD",1.72,1.72,.01,0)
COUNTRY^RP779.004'^HL(779.004,^0;1^Q
"^DD",1.72,1.72,.01,1,0)
^.1
"^DD",1.72,1.72,.01,1,1,0)
1.72^B
"^DD",1.72,1.72,.01,1,1,1)
S ^DIT(1.72,"B",$E(X,1,30),DA)=""
"^DD",1.72,1.72,.01,1,1,2)
K ^DIT(1.72,"B",$E(X,1,30),DA)
"^DD",1.72,1.72,.01,3)
Select the country.
"^DD",1.72,1.72,.01,21,0)
^.001^1^1^3160810^^
"^DD",1.72,1.72,.01,21,1,0)
The country that may follow DAYLIGHT SAVINGS, STANDARD, or SUMMER time.
"^DD",1.72,1.72,.01,"DT")
3160804
"^DD",1.72,1.72,.02,0)
COUNTRY NAME^CJ8^^ ; ^X ^DD(1.72,.02,9.2) S Y(1.72,.02,101)=$S($D(^HL(779.004,D0,0)):^(0),1:"") S X=$P(Y(1.72,.02,101),U,1) S D0=Y(1.72,.02,80)
"^DD",1.72,1.72,.02,9)
^
"^DD",1.72,1.72,.02,9.01)
779.004^.01;1.72^.01
"^DD",1.72,1.72,.02,9.1)
#.01:.01
"^DD",1.72,1.72,.02,9.2)
S Y(1.72,.02,80)=$G(D0),Y(1.72,.02,1)=$S($D(^DIT(1.72,D0,0)):^(0),1:""),D0=$P(Y(1.72,.02,1),U,1) S:'D0!'$D(^HL(779.004,+D0,0)) D0=-1 S D0=D0
"^DD",1.72,1.72,.02,21,0)
^^1^1^3160810^
"^DD",1.72,1.72,.02,21,1,0)
This is the name of the country as shown in the COUNTRY CODE file.
"^DD",1.72,1.72,.02,"DT")
3160810
"^DD",1.72,1.72,.03,0)
TIME SAME AS^P779.004'^HL(779.004,^0;3^Q
"^DD",1.72,1.72,.03,3)
Select the country that shares the same DAYLIGHT, STANDARD, or SUMMER settings.
"^DD",1.72,1.72,.03,21,0)
^.001^7^7^3160810^^
"^DD",1.72,1.72,.03,21,1,0)
Some countries follow the same date and time that a timezone's timeframe changes.
"^DD",1.72,1.72,.03,21,2,0)
Having this flag saves duplication of data entry for those countries.
"^DD",1.72,1.72,.03,21,3,0)
 
"^DD",1.72,1.72,.03,21,4,0)
Example: USA, Canada and Mexico have overlapping timezones.
"^DD",1.72,1.72,.03,21,5,0)
If the date and time that those timezones change from STANDARD to
"^DD",1.72,1.72,.03,21,6,0)
DAYLIGHT SAVINGS (and vice versa) is the same, then it is only necessary to have that
"^DD",1.72,1.72,.03,21,7,0)
information entered once.
"^DD",1.72,1.72,.03,"DT")
3160810
"^DD",1.72,1.72,1,0)
YEAR^1.721^^1;0
"^DD",1.72,1.72,1,21,0)
^.001^4^4^3160815^^^^
"^DD",1.72,1.72,1,21,1,0)
Some countries change their timeframe every year and sometimes
"^DD",1.72,1.72,1,21,2,0)
there are gaps or they stop altogether.  The year indicates whether
"^DD",1.72,1.72,1,21,3,0)
this specific country changed their timeframe on the specific date
"^DD",1.72,1.72,1,21,4,0)
and time listed.
"^DD",1.72,1.721,0)
YEAR SUB-FIELD^^.03^3
"^DD",1.72,1.721,0,"DT")
3160815
"^DD",1.72,1.721,0,"IX","B",1.721,.01)

"^DD",1.72,1.721,0,"NM","YEAR")

"^DD",1.72,1.721,0,"UP")
1.72
"^DD",1.72,1.721,.01,0)
YEAR^MNJ4,0^^0;1^K:+X'=X!(X>9999)!(X<1000)!(X?.E1"."1N.N) X
"^DD",1.72,1.721,.01,1,0)
^.1
"^DD",1.72,1.721,.01,1,1,0)
1.721^B
"^DD",1.72,1.721,.01,1,1,1)
S ^DIT(1.72,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",1.72,1.721,.01,1,1,2)
K ^DIT(1.72,DA(1),1,"B",$E(X,1,30),DA)
"^DD",1.72,1.721,.01,3)
Enter the 4-digit year.
"^DD",1.72,1.721,.01,21,0)
^.001^2^2^3160815^^^^
"^DD",1.72,1.721,.01,21,1,0)
The year indicates whether this specific country changed the timeframe on
"^DD",1.72,1.721,.01,21,2,0)
the specific date and time listed.
"^DD",1.72,1.721,.01,"DT")
3160815
"^DD",1.72,1.721,.02,0)
START DATE/TIME^D^^0;2^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",1.72,1.721,.02,3)
Enter the appropriate START/DATE TIME.
"^DD",1.72,1.721,.02,21,0)
^.001^1^1^3160815^^
"^DD",1.72,1.721,.02,21,1,0)
This is the date and time that this country's timeframe changed from STANDARD.
"^DD",1.72,1.721,.02,"DT")
3160815
"^DD",1.72,1.721,.03,0)
END DATE/TIME^D^^0;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",1.72,1.721,.03,3)
Enter the appropriate END/DATE TIME.
"^DD",1.72,1.721,.03,21,0)
^.001^1^1^3160805^^^
"^DD",1.72,1.721,.03,21,1,0)
This is the date and time that this country's timeframe changed back to STANDARD.
"^DD",1.72,1.721,.03,"DT")
3160805
"^DD",4,4,800,0)
LOCATION TIMEZONE^P1.71'^DIT(1.71,^8;1^Q
"^DD",4,4,800,3)
Enter the timezone or '?' to list timezones
"^DD",4,4,800,21,0)
^.001^1^1^3160815^^^
"^DD",4,4,800,21,1,0)
This is the timezone of this specific location.
"^DD",4,4,800,"DT")
3160810
"^DD",4,4,801,0)
COUNTRY^P779.004'^HL(779.004,^8;2^Q
"^DD",4,4,801,3)
Enter the country, or '?' to list countries
"^DD",4,4,801,21,0)
^.001^1^1^3160815^^
"^DD",4,4,801,21,1,0)
Country of this location
"^DD",4,4,801,"DT")
3160815
"^DD",4,4,802,0)
TIMEZONE EXCEPTION^S^0:SST Only;^8;3^Q
"^DD",4,4,802,3)
Enter 0 if this is for Standard Time only.
"^DD",4,4,802,21,0)
^^13^13^3160809^
"^DD",4,4,802,21,1,0)
This location does not follow the timezone and
"^DD",4,4,802,21,2,0)
country timeframe changes therefore only follows
"^DD",4,4,802,21,3,0)
STANDARD time.
"^DD",4,4,802,21,4,0)
Example:
"^DD",4,4,802,21,5,0)
Some locations in the USA do not follow the change
"^DD",4,4,802,21,6,0)
to DAYLIGHT SAVINGS but remain STANDARD all year long.
"^DD",4,4,802,21,7,0)
Those locations would need this exception defined.
"^DD",4,4,802,21,8,0)
Puerto Rico's timezone is Atlantic which is also used
"^DD",4,4,802,21,9,0)
by Canada, Dominican Republic, and Bermuda.
"^DD",4,4,802,21,10,0)
Canada and Bermuda change timeframes and Puerto Rico
"^DD",4,4,802,21,11,0)
and Dominican Republic do not.
"^DD",4,4,802,21,12,0)
A location in Puerto Rico or Dominican Republic would
"^DD",4,4,802,21,13,0)
need to have the exception field set to SST only.
"^DD",4,4,802,"DT")
3160809
"^DIC",.81,.81,0)
DATA TYPE^.81
"^DIC",.81,.81,0,"GL")
^DI(.81,
"^DIC",.81,.81,"%D",0)
^^2^2^2940908^
"^DIC",.81,.81,"%D",1,0)
This file stores all of the data types that VA FileMan allows in the
"^DIC",.81,.81,"%D",2,0)
MODIFY FILE ATTRIBUTES option.
"^DIC",.81,"B","DATA TYPE",.81)

"^DIC",1.71,1.71,0)
WORLD TIMEZONES^1.71
"^DIC",1.71,1.71,0,"GL")
^DIT(1.71,
"^DIC",1.71,1.71,"%D",0)
^1.001^1^1^3160808^^
"^DIC",1.71,1.71,"%D",1,0)
This file denotes time zone designations used throughout the world.
"^DIC",1.71,"B","WORLD TIMEZONES",1.71)

"^DIC",1.72,1.72,0)
WORLD DAYLIGHT SAVINGS^1.72
"^DIC",1.72,1.72,0,"GL")
^DIT(1.72,
"^DIC",1.72,1.72,"%D",0)
^1.001^2^2^3160810^^
"^DIC",1.72,1.72,"%D",1,0)
This file is used to track which countries have periods during the year
"^DIC",1.72,1.72,"%D",2,0)
in which they follow DAYLIGHT SAVING TIME, STANDARD TIME, or SUMMER TIME.
"^DIC",1.72,"B","WORLD DAYLIGHT SAVINGS",1.72)

"BLD",9892,6)
^4
**END**
**END**

