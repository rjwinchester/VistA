Released DI*22.2*5 SEQ #6
Extracted from mail message
**KIDS**:DI*22.2*5^

**INSTALL NAME**
DI*22.2*5
"BLD",9894,0)
DI*22.2*5^VA FILEMAN^0^3170329^y
"BLD",9894,1,0)
^^1^1^3161213^
"BLD",9894,1,1,0)
Corrections for three defects in VA FileMan 22.2.
"BLD",9894,4,0)
^9.64PA^.81^1
"BLD",9894,4,.81,0)
.81
"BLD",9894,4,.81,222)
n^n^f^^n^^y^o^n
"BLD",9894,4,.81,224)
I Y=15
"BLD",9894,4,"B",.81,.81)

"BLD",9894,6.3)
28
"BLD",9894,"ABPKG")
n
"BLD",9894,"KRN",0)
^9.67PA^779.2^20
"BLD",9894,"KRN",.4,0)
.4
"BLD",9894,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9894,"KRN",.401,0)
.401
"BLD",9894,"KRN",.402,0)
.402
"BLD",9894,"KRN",.403,0)
.403
"BLD",9894,"KRN",.5,0)
.5
"BLD",9894,"KRN",.84,0)
.84
"BLD",9894,"KRN",3.6,0)
3.6
"BLD",9894,"KRN",3.8,0)
3.8
"BLD",9894,"KRN",9.2,0)
9.2
"BLD",9894,"KRN",9.8,0)
9.8
"BLD",9894,"KRN",9.8,"NM",0)
^9.68A^23^23
"BLD",9894,"KRN",9.8,"NM",1,0)
DDGF2^^0^B31954979
"BLD",9894,"KRN",9.8,"NM",2,0)
DIR2^^0^B25407011
"BLD",9894,"KRN",9.8,"NM",3,0)
DIV^^0^B18251978
"BLD",9894,"KRN",9.8,"NM",4,0)
DIVR^^0^B54678910
"BLD",9894,"KRN",9.8,"NM",5,0)
DDGFFLD^^0^B12769730
"BLD",9894,"KRN",9.8,"NM",6,0)
DDGFFLDA^^0^B22703346
"BLD",9894,"KRN",9.8,"NM",7,0)
DDS^^0^B41736293
"BLD",9894,"KRN",9.8,"NM",8,0)
DDGLIBP^^0^B27766781
"BLD",9894,"KRN",9.8,"NM",9,0)
DDSMSG^^0^B12019021
"BLD",9894,"KRN",9.8,"NM",10,0)
DDSSTK^^0^B3667911
"BLD",9894,"KRN",9.8,"NM",11,0)
DICATT3^^0^B15945248
"BLD",9894,"KRN",9.8,"NM",12,0)
DIFROMS2^^0^B45453261
"BLD",9894,"KRN",9.8,"NM",13,0)
DICU2^^0^B34359418
"BLD",9894,"KRN",9.8,"NM",14,0)
DICATTUD^^0^B30462151
"BLD",9894,"KRN",9.8,"NM",15,0)
DIETLIB^^0^B10149951
"BLD",9894,"KRN",9.8,"NM",16,0)
DIETLIBF^^0^B28622394
"BLD",9894,"KRN",9.8,"NM",17,0)
DINIT221^^0^B30462255
"BLD",9894,"KRN",9.8,"NM",18,0)
DITIME^^0^B1091483
"BLD",9894,"KRN",9.8,"NM",19,0)
DICN^^0^B21489439
"BLD",9894,"KRN",9.8,"NM",20,0)
DIEQ^^0^B16904404
"BLD",9894,"KRN",9.8,"NM",21,0)
DDSCOM^^0^B21761308
"BLD",9894,"KRN",9.8,"NM",22,0)
DDS1^^0^B36653455
"BLD",9894,"KRN",9.8,"NM",23,0)
DDS41^^0^B39822750
"BLD",9894,"KRN",9.8,"NM","B","DDGF2",1)

"BLD",9894,"KRN",9.8,"NM","B","DDGFFLD",5)

"BLD",9894,"KRN",9.8,"NM","B","DDGFFLDA",6)

"BLD",9894,"KRN",9.8,"NM","B","DDGLIBP",8)

"BLD",9894,"KRN",9.8,"NM","B","DDS",7)

"BLD",9894,"KRN",9.8,"NM","B","DDS1",22)

"BLD",9894,"KRN",9.8,"NM","B","DDS41",23)

"BLD",9894,"KRN",9.8,"NM","B","DDSCOM",21)

"BLD",9894,"KRN",9.8,"NM","B","DDSMSG",9)

"BLD",9894,"KRN",9.8,"NM","B","DDSSTK",10)

"BLD",9894,"KRN",9.8,"NM","B","DICATT3",11)

"BLD",9894,"KRN",9.8,"NM","B","DICATTUD",14)

"BLD",9894,"KRN",9.8,"NM","B","DICN",19)

"BLD",9894,"KRN",9.8,"NM","B","DICU2",13)

"BLD",9894,"KRN",9.8,"NM","B","DIEQ",20)

"BLD",9894,"KRN",9.8,"NM","B","DIETLIB",15)

"BLD",9894,"KRN",9.8,"NM","B","DIETLIBF",16)

"BLD",9894,"KRN",9.8,"NM","B","DIFROMS2",12)

"BLD",9894,"KRN",9.8,"NM","B","DINIT221",17)

"BLD",9894,"KRN",9.8,"NM","B","DIR2",2)

"BLD",9894,"KRN",9.8,"NM","B","DITIME",18)

"BLD",9894,"KRN",9.8,"NM","B","DIV",3)

"BLD",9894,"KRN",9.8,"NM","B","DIVR",4)

"BLD",9894,"KRN",19,0)
19
"BLD",9894,"KRN",19.1,0)
19.1
"BLD",9894,"KRN",101,0)
101
"BLD",9894,"KRN",409.61,0)
409.61
"BLD",9894,"KRN",771,0)
771
"BLD",9894,"KRN",779.2,0)
779.2
"BLD",9894,"KRN",870,0)
870
"BLD",9894,"KRN",8989.51,0)
8989.51
"BLD",9894,"KRN",8989.52,0)
8989.52
"BLD",9894,"KRN",8994,0)
8994
"BLD",9894,"KRN","B",.4,.4)

"BLD",9894,"KRN","B",.401,.401)

"BLD",9894,"KRN","B",.402,.402)

"BLD",9894,"KRN","B",.403,.403)

"BLD",9894,"KRN","B",.5,.5)

"BLD",9894,"KRN","B",.84,.84)

"BLD",9894,"KRN","B",3.6,3.6)

"BLD",9894,"KRN","B",3.8,3.8)

"BLD",9894,"KRN","B",9.2,9.2)

"BLD",9894,"KRN","B",9.8,9.8)

"BLD",9894,"KRN","B",19,19)

"BLD",9894,"KRN","B",19.1,19.1)

"BLD",9894,"KRN","B",101,101)

"BLD",9894,"KRN","B",409.61,409.61)

"BLD",9894,"KRN","B",771,771)

"BLD",9894,"KRN","B",779.2,779.2)

"BLD",9894,"KRN","B",870,870)

"BLD",9894,"KRN","B",8989.51,8989.51)

"BLD",9894,"KRN","B",8989.52,8989.52)

"BLD",9894,"KRN","B",8994,8994)

"BLD",9894,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9894,"QUES",0)
^9.62^^
"BLD",9894,"REQB",0)
^9.611^1^1
"BLD",9894,"REQB",1,0)
DI*22.2*7^2
"BLD",9894,"REQB","B","DI*22.2*7",1)

"DATA",.81,15,0)
UNIVERSAL TIME^D
"DATA",.81,15,41,0)
^.81215^1^1
"DATA",.81,15,41,1,0)
442001,1
"DATA",.81,15,101,0)
^.81101P^1^1
"DATA",.81,15,101,1,0)
1
"DATA",.81,15,101,1,31)
26
"DATA",.81,15,201,0)
^.81201P^4^3
"DATA",.81,15,201,2,0)
2
"DATA",.81,15,201,2,31)
N %DT S %DT="EXSTR" D ^%DT K:Y<0 X I $D(X) S X=$$UTC^DIUTC(X) K:+X=-1 X
"DATA",.81,15,201,3,0)
3
"DATA",.81,15,201,3,31)
N %Y S %Y=$E(Y_"00000000000",15,17) X ^DD("DD") I %Y S Y=Y_" (UTC"_(%Y-500/12)_":00)"
"DATA",.81,15,201,4,0)
4
"DATA",.81,15,201,4,31)
N ARR,DDH,I,ZZDDS,ZZDT M ZZDDS=DDS,ZZDT=%DT S DDS=1,%DT=$G(%DT)_"ETRX" D HELP^%DTC F I=1:1:DDH S ARR(I)=DDH(I,"T") I I=DDH K DDS,%DT M DDS=ZZDDS,%DT=ZZDT D EN^DDIOL(.ARR)
"FIA",.81)
DATA TYPE
"FIA",.81,0)
^DI(.81,
"FIA",.81,0,0)
.81
"FIA",.81,0,1)
n^n^f^^n^^y^o^n
"FIA",.81,0,10)

"FIA",.81,0,11)
I Y=15
"FIA",.81,0,"RLRO")

"FIA",.81,0,"VR")
22.2^DI
"FIA",.81,.81)
0
"FIA",.81,.81101)
0
"FIA",.81,.81201)
0
"FIA",.81,.8121)
0
"FIA",.81,.81215)
0
"MBREQ")
0
"PKG",1,-1)
1^1
"PKG",1,0)
VA FILEMAN^DI^FM INIT
"PKG",1,22,0)
^9.49I^1^1
"PKG",1,22,1,0)
22.2^3160105^3170313^520736440
"PKG",1,22,1,"PAH",1,0)
5^3170329^520736440
"PKG",1,22,1,"PAH",1,1,0)
^^1^1^3170329
"PKG",1,22,1,"PAH",1,1,1,0)
Corrections for three defects in VA FileMan 22.2.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
23
"RTN","DDGF2")
0^1^B31954979^B31932302
"RTN","DDGF2",1,0)
DDGF2 ;SFISC/MKO - ACTIONS FOR SELECTED FIELDS ;1FEB2017
"RTN","DDGF2",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DDGF2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGF2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDGF2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDGF2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDGF2",7,0)
 ;GFT;**1055,1057**
"RTN","DDGF2",8,0)
 ;
"RTN","DDGF2",9,0)
 ;Input:
"RTN","DDGF2",10,0)
 ;  B  = internal block number
"RTN","DDGF2",11,0)
 ;  F  = internal field order
"RTN","DDGF2",12,0)
 ;  T  = type of element ("C" = caption, "D" = data)
"RTN","DDGF2",13,0)
 ;  C  = caption
"RTN","DDGF2",14,0)
 ;  C1 = $Y of caption
"RTN","DDGF2",15,0)
 ;  C2 = $X of caption
"RTN","DDGF2",16,0)
 ;  D  = data representation (underlines)
"RTN","DDGF2",17,0)
 ;  D1 = $Y of data
"RTN","DDGF2",18,0)
 ;  D2 = $X of data
"RTN","DDGF2",19,0)
 ;  L  = length of data
"RTN","DDGF2",20,0)
 ;  P1 = page $Y
"RTN","DDGF2",21,0)
 ;  P2 = page $X
"RTN","DDGF2",22,0)
 ; DDGFWID = "P1" or such
"RTN","DDGF2",23,0)
 N DDGFE
"RTN","DDGF2",24,0)
 S DDGFE=0,DDGFLSV=DDGFLIM
"RTN","DDGF2",25,0)
 S DDGFLIM=$P(@DDGFREF@("F",DDGFPG,B),U,1,2)_U_$P(DDGFLIM,U,3,4)
"RTN","DDGF2",26,0)
 ;
"RTN","DDGF2",27,0)
 D PAINTS
"RTN","DDGF2",28,0)
 S DDGFE=0 F  S Y=$$READ W:$T(@Y)="" $C(7) D:$T(@Y)]"" @Y Q:DDGFE  ;MOVE THE FIELD AROUND UNTIL SPACEBAR DESELECTS IT.
"RTN","DDGF2",29,0)
 D END
"RTN","DDGF2",30,0)
 D:$G(DDGFSUBP) SUBPG1^DDGFPG
"RTN","DDGF2",31,0)
 Q
"RTN","DDGF2",32,0)
 ;
"RTN","DDGF2",33,0)
END ;Redraw field 'F' on block 'B'
"RTN","DDGF2",34,0)
 S DDGFLIM=DDGFLSV K DDGFLSV
"RTN","DDGF2",35,0)
 Q:$D(^DIST(.404,B,40,F,0))[0
"RTN","DDGF2",36,0)
 N OLD,NEW,CAP,DATA S (NEW,OLD)=$G(^(2)),CAP=$P(NEW,U,3),DATA=$P(NEW,U,1)
"RTN","DDGF2",37,0)
 ;^DIST(.404,D0,40,D1,2)= (#4.1) DATA COORDINATE [1F] ^ (#4.2) DATA LENGTH [2N] ^ (#5.1) CAPTION COORDINATE [3F] ^ (#5.2) SUPPRESS COLON AFTER CAPTION? [4S] 
"RTN","DDGF2",38,0)
 S $P(NEW,U,2)=$G(L) ;LENGTH WILL NOT BE THERE, IF THIS IS A CAPTION
"RTN","DDGF2",39,0)
 S $P(CAP,",",1)=C1+1,$P(CAP,",",2)=C2+1
"RTN","DDGF2",40,0)
 S C3=C2+$L(C)-1 ;CAPTION END POINT
"RTN","DDGF2",41,0)
 I T="C",C]"" D
"RTN","DDGF2",42,0)
 . D WRITE^DDGLIBW(DDGFWID,C,C1-P1,C2-P2)
"RTN","DDGF2",43,0)
 . S @DDGFREF@("RC",DDGFWID,C1,C2,C3,B,F,"C")=""
"RTN","DDGF2",44,0)
 ;
"RTN","DDGF2",45,0)
 I $D(D) D
"RTN","DDGF2",46,0)
 . S $P(DATA,",",1)=D1+1,$P(DATA,",",2)=D2+1
"RTN","DDGF2",47,0)
 . S D3=D2+L-1 ;DATA END POINT
"RTN","DDGF2",48,0)
 . D WRITE^DDGLIBW(DDGFWID,D,D1-P1,D2-P2)
"RTN","DDGF2",49,0)
 . S @DDGFREF@("RC",DDGFWID,D1,D2,D3,B,F,"D")=""
"RTN","DDGF2",50,0)
 ;
"RTN","DDGF2",51,0)
 S @DDGFREF@("F",DDGFPG,B,F)=C1_U_C2_U_C3_U_C_U_$S($D(D):D1_U_D2_U_D3_U_L,1:"^^^")_U_1,DDGFCHG=1
"RTN","DDGF2",52,0)
 D KILLPGS^DDGFFLDA(B,DDGFWID) ;BLOCK MAY BE ON ANOTHER PAGE
"RTN","DDGF2",53,0)
 ;
"RTN","DDGF2",54,0)
 X IOXY
"RTN","DDGF2",55,0)
 Q
"RTN","DDGF2",56,0)
 ;
"RTN","DDGF2",57,0)
TO ;Time-out
"RTN","DDGF2",58,0)
 W $C(7)
"RTN","DDGF2",59,0)
 G DESELECT
"RTN","DDGF2",60,0)
 ;
"RTN","DDGF2",61,0)
DESELECT ;SPACE-BAR HAS DESELECTED FIELD
"RTN","DDGF2",62,0)
 S DDGFE=1
"RTN","DDGF2",63,0)
 Q
"RTN","DDGF2",64,0)
 ;
"RTN","DDGF2",65,0)
LNU I T="C" Q:C1'>$P(DDGFLIM,U)  ;LINE FEED UP
"RTN","DDGF2",66,0)
 I $D(D),D1'>$P(DDGFLIM,U) Q
"RTN","DDGF2",67,0)
 D REDRAW S:T="C" C1=C1-1
"RTN","DDGF2",68,0)
 S:$D(D) D1=D1-1
"RTN","DDGF2",69,0)
 S DY=DY-1
"RTN","DDGF2",70,0)
 D PAINTS
"RTN","DDGF2",71,0)
 Q
"RTN","DDGF2",72,0)
LND I T="C" Q:C1'<$P(DDGFLIM,U,3)  ;LINE FEED DOWN
"RTN","DDGF2",73,0)
 I $D(D),D1'<$P(DDGFLIM,U,3) Q
"RTN","DDGF2",74,0)
 D REDRAW
"RTN","DDGF2",75,0)
 S:T="C" C1=C1+1
"RTN","DDGF2",76,0)
 S:$D(D) D1=D1+1
"RTN","DDGF2",77,0)
 S DY=DY+1
"RTN","DDGF2",78,0)
 D PAINTS
"RTN","DDGF2",79,0)
 Q
"RTN","DDGF2",80,0)
CHR I T="C" Q:C2+$L(C)>$P(DDGFLIM,U,4)
"RTN","DDGF2",81,0)
 I $D(D),D2+L>$P(DDGFLIM,U,4) Q
"RTN","DDGF2",82,0)
 D REDRAW S:T="C" C2=C2+1
"RTN","DDGF2",83,0)
 S:$D(D) D2=D2+1
"RTN","DDGF2",84,0)
 S DX=DX+1
"RTN","DDGF2",85,0)
 D PAINTS
"RTN","DDGF2",86,0)
 Q
"RTN","DDGF2",87,0)
CHL I T="C" Q:C2'>$P(DDGFLIM,U,2)
"RTN","DDGF2",88,0)
 I $D(D),D2'>$P(DDGFLIM,U,2) Q
"RTN","DDGF2",89,0)
 D REDRAW S:T="C" C2=C2-1
"RTN","DDGF2",90,0)
 S:$D(D) D2=D2-1
"RTN","DDGF2",91,0)
 S DX=DX-1
"RTN","DDGF2",92,0)
 D PAINTS
"RTN","DDGF2",93,0)
 Q
"RTN","DDGF2",94,0)
TBR N X
"RTN","DDGF2",95,0)
 I T="C" Q:C2+$L(C)>$P(DDGFLIM,U,4)
"RTN","DDGF2",96,0)
 I $D(D),D2+L>$P(DDGFLIM,U,4) Q
"RTN","DDGF2",97,0)
 D REDRAW
"RTN","DDGF2",98,0)
 I T="C" D
"RTN","DDGF2",99,0)
 . S X=$$MIN(5,$P(DDGFLIM,U,4)-(C2+$L(C)),$S($D(D):$P(DDGFLIM,U,4)-(D2+L)+1,1:""))
"RTN","DDGF2",100,0)
 . S C2=C2+X
"RTN","DDGF2",101,0)
 E  S X=$$MIN(5,$P(DDGFLIM,U,4)-(D2+L)+1)
"RTN","DDGF2",102,0)
 S:$D(D) D2=D2+X
"RTN","DDGF2",103,0)
 S DX=DX+X
"RTN","DDGF2",104,0)
 D PAINTS
"RTN","DDGF2",105,0)
 Q
"RTN","DDGF2",106,0)
TBL N X
"RTN","DDGF2",107,0)
 I T="C" Q:C2'>$P(DDGFLIM,U,2)
"RTN","DDGF2",108,0)
 I $D(D),D2'>$P(DDGFLIM,U,2) Q
"RTN","DDGF2",109,0)
 D REDRAW
"RTN","DDGF2",110,0)
 I T="C" D
"RTN","DDGF2",111,0)
 . S X=$$MIN(5,C2-$P(DDGFLIM,U,2),$S($D(D):D2-$P(DDGFLIM,U,2),1:""))
"RTN","DDGF2",112,0)
 . S C2=C2-X
"RTN","DDGF2",113,0)
 E  S X=$$MIN(5,D2-$P(DDGFLIM,U,2))
"RTN","DDGF2",114,0)
 S:$D(D) D2=D2-X
"RTN","DDGF2",115,0)
 S DX=DX-X
"RTN","DDGF2",116,0)
 D PAINTS
"RTN","DDGF2",117,0)
 Q
"RTN","DDGF2",118,0)
SCT N Y
"RTN","DDGF2",119,0)
 I T="C" Q:C1'>$P(DDGFLIM,U)
"RTN","DDGF2",120,0)
 I $D(D),D1'>$P(DDGFLIM,U) Q
"RTN","DDGF2",121,0)
 D REDRAW
"RTN","DDGF2",122,0)
 I T="C" S Y=$S('$D(D):C1,C1<D1:C1,1:D1)-$P(DDGFLIM,U),C1=C1-Y
"RTN","DDGF2",123,0)
 E  S Y=D1-$P(DDGFLIM,U)
"RTN","DDGF2",124,0)
 S:$D(D) D1=D1-Y
"RTN","DDGF2",125,0)
 S DY=DY-Y
"RTN","DDGF2",126,0)
 D PAINTS
"RTN","DDGF2",127,0)
 Q
"RTN","DDGF2",128,0)
SCB N Y
"RTN","DDGF2",129,0)
 I T="C" Q:C1'<$P(DDGFLIM,U,3)
"RTN","DDGF2",130,0)
 I $D(D),D1'<$P(DDGFLIM,U,3) Q
"RTN","DDGF2",131,0)
 D REDRAW
"RTN","DDGF2",132,0)
 I T="C" S Y=$P(DDGFLIM,U,3)-$S('$D(D):C1,C1>D1:C1,1:D1),C1=C1+Y
"RTN","DDGF2",133,0)
 E  S Y=$P(DDGFLIM,U,3)-D1
"RTN","DDGF2",134,0)
 S:$D(D) D1=D1+Y
"RTN","DDGF2",135,0)
 S DY=DY+Y
"RTN","DDGF2",136,0)
 D PAINTS
"RTN","DDGF2",137,0)
 Q
"RTN","DDGF2",138,0)
SCR N X
"RTN","DDGF2",139,0)
 I T="C" Q:C2+$L(C)>$P(DDGFLIM,U,4)
"RTN","DDGF2",140,0)
 I $D(D),D2+L>$P(DDGFLIM,U,4) Q
"RTN","DDGF2",141,0)
 D REDRAW
"RTN","DDGF2",142,0)
 I T="C" D
"RTN","DDGF2",143,0)
 . S X=$P(DDGFLIM,U,4)-$S('$D(D):C2+$L(C),C2+$L(C)>(D2+L):C2+$L(C),1:D2+L)+1
"RTN","DDGF2",144,0)
 . S C2=C2+X
"RTN","DDGF2",145,0)
 E  S X=$P(DDGFLIM,U,4)-(D2+L)+1
"RTN","DDGF2",146,0)
 S:$D(D) D2=D2+X
"RTN","DDGF2",147,0)
 S DX=DX+X
"RTN","DDGF2",148,0)
 D PAINTS
"RTN","DDGF2",149,0)
 Q
"RTN","DDGF2",150,0)
SCL N X
"RTN","DDGF2",151,0)
 I T="C" Q:C2'>$P(DDGFLIM,U,2)
"RTN","DDGF2",152,0)
 I $D(D),D2'>$P(DDGFLIM,U,2) Q
"RTN","DDGF2",153,0)
 D REDRAW
"RTN","DDGF2",154,0)
 I T="C" S X=$S('$D(D):C2,C2<D2:C2,1:D2)-$P(DDGFLIM,U,2),C2=C2-X
"RTN","DDGF2",155,0)
 E  S X=D2-$P(DDGFLIM,U,2)
"RTN","DDGF2",156,0)
 S:$D(D) D2=D2-X
"RTN","DDGF2",157,0)
 S DX=DX-X
"RTN","DDGF2",158,0)
 D PAINTS
"RTN","DDGF2",159,0)
 Q
"RTN","DDGF2",160,0)
EDIT ;A SEPARATE SCREENMAN FORM WILL EDIT THIS SINGLE FIELD
"RTN","DDGF2",161,0)
 G EDIT^DDGFFLD
"RTN","DDGF2",162,0)
SUBPG ;
"RTN","DDGF2",163,0)
 G SUBPG^DDGFPG
"RTN","DDGF2",164,0)
 ;
"RTN","DDGF2",165,0)
RC(DDGFY,DDGFX) ;Update status line, reset DX and DY, move cursor
"RTN","DDGF2",166,0)
 N DDGFS
"RTN","DDGF2",167,0)
 I DDGFR D
"RTN","DDGF2",168,0)
 . S DY=IOSL-6,DX=IOM-9,DDGFS="R"_(DDGFY+1)_",C"_(DDGFX+1)
"RTN","DDGF2",169,0)
 . X IOXY W DDGFS_$J("",7-$L(DDGFS))
"RTN","DDGF2",170,0)
 S DY=DDGFY,DX=DDGFX X IOXY
"RTN","DDGF2",171,0)
 Q
"RTN","DDGF2",172,0)
 ;
"RTN","DDGF2",173,0)
REDRAW ;
"RTN","DDGF2",174,0)
 D:T="C" REPAINT^DDGLIBW(DDGFWID,(C1-P1)_U_(C2-P2)_U_1_U_$L(C))
"RTN","DDGF2",175,0)
 D:$D(D) REPAINT^DDGLIBW(DDGFWID,(D1-P1)_U_(D2-P2)_U_1_U_L)
"RTN","DDGF2",176,0)
 Q
"RTN","DDGF2",177,0)
 ;
"RTN","DDGF2",178,0)
PAINTS ;
"RTN","DDGF2",179,0)
 N Y,X
"RTN","DDGF2",180,0)
 S Y=DY,X=DX
"RTN","DDGF2",181,0)
 I T="C" S DY=C1,DX=C2 X IOXY W $P(DDGLVID,DDGLDEL,6)_$E(C,1,$$MIN($L(C),$P(DDGFLIM,U,4)-C2+1))_$P(DDGLVID,DDGLDEL,10)
"RTN","DDGF2",182,0)
 I $D(D) S DY=D1,DX=D2 X IOXY W $P(DDGLVID,DDGLDEL,6)_$E(D,1,$$MIN(L,$P(DDGFLIM,U,4)-D2+1))_$P(DDGLVID,DDGLDEL,10)
"RTN","DDGF2",183,0)
 D RC(Y,X)
"RTN","DDGF2",184,0)
 Q
"RTN","DDGF2",185,0)
 ;
"RTN","DDGF2",186,0)
MIN(X,Y,Z) ;Return the minimum of two or three numbers
"RTN","DDGF2",187,0)
 N A
"RTN","DDGF2",188,0)
 S A=$S(X<Y:X,1:Y)
"RTN","DDGF2",189,0)
 Q:$G(Z)="" A
"RTN","DDGF2",190,0)
 Q $S(A<Z:A,1:Z)
"RTN","DDGF2",191,0)
 ;
"RTN","DDGF2",192,0)
READ() N S,Y
"RTN","DDGF2",193,0)
 F  R *Y:DTIME D C Q:Y'=-1
"RTN","DDGF2",194,0)
 Q Y
"RTN","DDGF2",195,0)
 ;
"RTN","DDGF2",196,0)
C I Y<0 S Y="TO" Q
"RTN","DDGF2",197,0)
 S S=""
"RTN","DDGF2",198,0)
C1 S S=S_$C(Y)
"RTN","DDGF2",199,0)
 I DDGF("SIN")'[(U_S) D  I Y=-1 W $C(7) Q
"RTN","DDGF2",200,0)
 . I $C(Y)'?1L S Y=-1 Q
"RTN","DDGF2",201,0)
 . S S=$E(S,1,$L(S)-1)_$C(Y-32) S:DDGF("SIN")'[(U_S_U) Y=-1
"RTN","DDGF2",202,0)
 ;
"RTN","DDGF2",203,0)
 I DDGF("SIN")[(U_S_U),S'=$C(27) S Y=$P(DDGF("SOUT"),U,$L($P(DDGF("SIN"),U_S_U),U)) Q
"RTN","DDGF2",204,0)
 R *Y:5 G:Y'=-1 C1 W $C(7)
"RTN","DDGF2",205,0)
 Q
"RTN","DDGFFLD")
0^5^B12769730^B11526097
"RTN","DDGFFLD",1,0)
DDGFFLD ;SFISC/MKO - EDIT A FIELD ;19APR2016
"RTN","DDGFFLD",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DDGFFLD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGFFLD",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDGFFLD",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDGFFLD",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDGFFLD",7,0)
 ;GFT;**1055**
"RTN","DDGFFLD",8,0)
 ;
"RTN","DDGFFLD",9,0)
 ;COME IN WITH 'F'=FIELD NUMBER ON BLOCK 'B', PAGE DDGFWID="P4"
"RTN","DDGFFLD",10,0)
 ;
"RTN","DDGFFLD",11,0)
EDIT ;
"RTN","DDGFFLD",12,0)
 Q:$D(^DIST(.404,B,40,F,0))[0
"RTN","DDGFFLD",13,0)
 I T="D" Q:C]""  K @DDGFREF@("F",DDGFPG,B,F)
"RTN","DDGFFLD",14,0)
 ;
"RTN","DDGFFLD",15,0)
 S DDGFDY=DY,DDGFDX=DX
"RTN","DDGFFLD",16,0)
 S DDGFTYPE=$P(^DIST(.404,B,40,F,0),U,3)
"RTN","DDGFFLD",17,0)
 I 'DDGFTYPE D
"RTN","DDGFFLD",18,0)
 . I $G(^DIST(.404,B,40,F,20))'?."^" S DDGFTYPE=2 Q
"RTN","DDGFFLD",19,0)
 . I $P($G(^DIST(.404,B,0)),U,2),$G(^DIST(.404,B,40,F,1)) S DDGFTYPE=3
"RTN","DDGFFLD",20,0)
 G:'DDGFTYPE EDITQ
"RTN","DDGFFLD",21,0)
 ;
"RTN","DDGFFLD",22,0)
 S DDGFB2=@DDGFREF@("F",DDGFPG,B)
"RTN","DDGFFLD",23,0)
 S DDGFB1=$P(DDGFB2,U),DDGFB2=$P(DDGFB2,U,2)
"RTN","DDGFFLD",24,0)
 S DDGFDD=$P(^DIST(.404,B,0),U,2)
"RTN","DDGFFLD",25,0)
 S (DDGFSUP,DDGFSUP0)=$S(C]""&(DDGFTYPE'=1):$E(C,$L(C))'=":",1:"")
"RTN","DDGFFLD",26,0)
 S (DDGFCAP,DDGFCAP0)=$S(DDGFTYPE=1!DDGFSUP0:C,1:$E(C,1,$L(C)-1))
"RTN","DDGFFLD",27,0)
 S (DDGFCC,DDGFCC0)=$S(C]"":C1-DDGFB1+1_","_(C2-DDGFB2+1),1:"")
"RTN","DDGFFLD",28,0)
 I $D(D) D
"RTN","DDGFFLD",29,0)
 . S (DDGFDL,DDGFDL0)=L
"RTN","DDGFFLD",30,0)
 . S (DDGFDC,DDGFDC0)=D1-DDGFB1+1_","_(D2-DDGFB2+1)
"RTN","DDGFFLD",31,0)
 K DDGFB1,DDGFB2
"RTN","DDGFFLD",32,0)
 ;
"RTN","DDGFFLD",33,0)
 S DDSFILE=.404,DDSFILE(1)=.4044,DDSPARM="KSTW"
"RTN","DDGFFLD",34,0)
 S DR="[DDGF FIELD "_$P("CAPTION ONLY^FORM ONLY^DD^COMPUTED",U,DDGFTYPE)_"]"
"RTN","DDGFFLD",35,0)
 S DA=F,DA(1)=B
"RTN","DDGFFLD",36,0)
 D
"RTN","DDGFFLD",37,0)
 . N B,F,T,C,C1,C2,D,D1,D2,L,P1,P2
"RTN","DDGFFLD",38,0)
DDS . D ^DDS K DDSFILE,DDSPARM,DR,DDGFDD ;RECURSIVE CALL TO SCREENMAN FOR A GIVEN FIELD
"RTN","DDGFFLD",39,0)
 ;
"RTN","DDGFFLD",40,0)
 ;If caption, caption coords, data length, data coords, or suppress
"RTN","DDGFFLD",41,0)
 ;colon flag changed we need to update some local variables
"RTN","DDGFFLD",42,0)
 I '$D(DA) D KILLPGS^DDGFFLDA(B,DDGFWID) ;FIELD IS GONE
"RTN","DDGFFLD",43,0)
 I $D(DA)#2,$G(DDSSAVE) D  ;BECAUSE DDSPARM CONTAINED "S", DDSSAVE CAN COME BACK FROM ^DDS
"RTN","DDGFFLD",44,0)
 . S DDGFNDB=$G(@DDGFREF@("F",DDGFPG,B))
"RTN","DDGFFLD",45,0)
 . S:DDGFCAP="" (DDGFSUP,DDGFCC)=""
"RTN","DDGFFLD",46,0)
 . S DR=""
"RTN","DDGFFLD",47,0)
 . ;
"RTN","DDGFFLD",48,0)
 . I DDGFCAP'=DDGFCAP0!(DDGFSUP'=DDGFSUP0) D  ;CAPTION HAS BEEN CHANGED
"RTN","DDGFFLD",49,0)
 .. S C=DDGFCAP_$S(DDGFCAP]""&(DDGFTYPE'=1)&'DDGFSUP:":",1:"")
"RTN","DDGFFLD",50,0)
 .. S:DDGFCAP'=DDGFCAP0 DR=DR_"1////"_$S(DDGFCAP]"":DDGFCAP,1:"@")_";"
"RTN","DDGFFLD",51,0)
 .. S:DDGFSUP'=DDGFSUP0 DR=DR_"5.2////"_$S(DDGFSUP:1,1:"@")_";"
"RTN","DDGFFLD",52,0)
 . ;
"RTN","DDGFFLD",53,0)
 . D:DDGFCC'=DDGFCC0  ;LOCATION OF CAPTION HAS BEEN CHANGED
"RTN","DDGFFLD",54,0)
 .. S C1=$S(DDGFCAP]"":$P(DDGFCC,",")-1+$P(DDGFNDB,U),1:"")
"RTN","DDGFFLD",55,0)
 .. S C2=$S(DDGFCAP]"":$P(DDGFCC,",",2)-1+$P(DDGFNDB,U,2),1:"")
"RTN","DDGFFLD",56,0)
 .. S DR=DR_"5.1////"_$S(DDGFCC]"":DDGFCC,1:"@")_";"
"RTN","DDGFFLD",57,0)
 . ;
"RTN","DDGFFLD",58,0)
 . D:$D(D)
"RTN","DDGFFLD",59,0)
 .. D:DDGFDC'=DDGFDC0
"RTN","DDGFFLD",60,0)
 ... S D1=$P(DDGFDC,",")-1+$P(DDGFNDB,U)
"RTN","DDGFFLD",61,0)
 ... S D2=$P(DDGFDC,",",2)-1+$P(DDGFNDB,U,2)
"RTN","DDGFFLD",62,0)
 ... S DR=DR_"4.1////"_DDGFDC_";"
"RTN","DDGFFLD",63,0)
 .. D:DDGFDL'=DDGFDL0
"RTN","DDGFFLD",64,0)
 ... S L=DDGFDL
"RTN","DDGFFLD",65,0)
 ... S D=$TR($J("",L)," ","_")
"RTN","DDGFFLD",66,0)
 ... S DR=DR_"4.2////"_DDGFDL_";"
"RTN","DDGFFLD",67,0)
 . ;
"RTN","DDGFFLD",68,0)
 . I T="D",C]"" D
"RTN","DDGFFLD",69,0)
 .. D WRITE^DDGLIBW(DDGFWID,C,C1-P1,C2-P2,"",1)
"RTN","DDGFFLD",70,0)
 .. S @DDGFREF@("RC",DDGFWID,C1,C2,C2+$L(C)-1,B,F,"C")=""
"RTN","DDGFFLD",71,0)
 . ;
"RTN","DDGFFLD",72,0)
 . I DR]"" D  D KILLPGS^DDGFFLDA(B,DDGFWID) ;SOMETHING'S CHANGED, SO ERASE OTHER PAGES CONTAINING THIS BLOCK
"RTN","DDGFFLD",73,0)
 .. N B,F,T,C,C1,C2,D,D1,D2,L,P1,P2
"RTN","DDGFFLD",74,0)
 .. S DIE="^DIST(.404,"_DA(1)_",40,"
"RTN","DDGFFLD",75,0)
 .. S DR=$E(DR,1,$L(DR)-1)
"RTN","DDGFFLD",76,0)
 .. D ^DIE
"RTN","DDGFFLD",77,0)
 ;
"RTN","DDGFFLD",78,0)
 K DA,DDGFNDB
"RTN","DDGFFLD",79,0)
 K DDGFSUP,DDGFSUP0,DDGFCAP,DDGFCAP0,DDGFCC,DDGFCC0
"RTN","DDGFFLD",80,0)
 K DDGFDL,DDGFDL0,DDGFDC,DDGFDC0,DDSSAVE
"RTN","DDGFFLD",81,0)
 K DIE,DR
"RTN","DDGFFLD",82,0)
 ;
"RTN","DDGFFLD",83,0)
 D REFRESH^DDGF,RC(DDGFDY,DDGFDX)
"RTN","DDGFFLD",84,0)
EDITQ S DDGFE=1
"RTN","DDGFFLD",85,0)
 K DDGFDY,DDGFDX,DDGFTYPE
"RTN","DDGFFLD",86,0)
 Q
"RTN","DDGFFLD",87,0)
 ;
"RTN","DDGFFLD",88,0)
RC(DDGFY,DDGFX) ;Update status line, reset DX and DY, move cursor
"RTN","DDGFFLD",89,0)
 N S
"RTN","DDGFFLD",90,0)
 I DDGFR D
"RTN","DDGFFLD",91,0)
 . S DY=IOSL-6,DX=IOM-9,S="R"_(DDGFY+1)_",C"_(DDGFX+1)
"RTN","DDGFFLD",92,0)
 . X IOXY W S_$J("",7-$L(S))
"RTN","DDGFFLD",93,0)
 S DY=DDGFY,DX=DDGFX X IOXY
"RTN","DDGFFLD",94,0)
 Q
"RTN","DDGFFLDA")
0^6^B22703346^B21253213
"RTN","DDGFFLDA",1,0)
DDGFFLDA ;SFISC/MKO - ADD A FIELD ;19APR2016
"RTN","DDGFFLDA",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DDGFFLDA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGFFLDA",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDGFFLDA",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDGFFLDA",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDGFFLDA",7,0)
 ;GFT;**1055**
"RTN","DDGFFLDA",8,0)
 ;
"RTN","DDGFFLDA",9,0)
ADD ;Add a field
"RTN","DDGFFLDA",10,0)
 I '$O(^DIST(.403,+DDGFFM,40,DDGFPG,40,0)) D  Q
"RTN","DDGFFLDA",11,0)
 . D MSG^DDGF($C(7)_"There are no blocks defined on this page.  To add a block, press <PF2>B.")
"RTN","DDGFFLDA",12,0)
 . H 2 D MSG^DDGF()
"RTN","DDGFFLDA",13,0)
 S DDGFDY=DY,DDGFDX=DX
"RTN","DDGFFLDA",14,0)
 ;
"RTN","DDGFFLDA",15,0)
 ;Invoke form to select block, field order, field type
"RTN","DDGFFLDA",16,0)
 K DDGFBLCK,DDGFFORD,DDGFTYPE
"RTN","DDGFFLDA",17,0)
 S DDSFILE=.404,DDSFILE(1)=.4044
"RTN","DDGFFLDA",18,0)
 S DR="[DDGF FIELD ADD]",DDSPARM="KTW"
"RTN","DDGFFLDA",19,0)
 D ^DDS K DDSFILE,DA,DR,DDSPARM
"RTN","DDGFFLDA",20,0)
 ;
"RTN","DDGFFLDA",21,0)
 I '$D(DDGFBLCK)!'$D(DDGFFORD)!'$D(DDGFTYPE) G ADDQ
"RTN","DDGFFLDA",22,0)
 ;
"RTN","DDGFFLDA",23,0)
 ;Get relative field coordinates
"RTN","DDGFFLDA",24,0)
 S (DDGFCAP,DDGFCAP0)=""
"RTN","DDGFFLDA",25,0)
 S (DDGFSUP,DDGFSUP0)=""
"RTN","DDGFFLDA",26,0)
 S (DDGFCC,DDGFCC0)=""
"RTN","DDGFFLDA",27,0)
 ;
"RTN","DDGFFLDA",28,0)
 ;E.G. DDGFREF="^TMP("DDGF",$J,"F",1,791,1)="1^0^5^TIMSON"
"RTN","DDGFFLDA",29,0)
 S DDGFB2=@DDGFREF@("F",DDGFPG,DDGFBLCK)
"RTN","DDGFFLDA",30,0)
 S DDGFB1=$P(DDGFB2,U),DDGFB2=$P(DDGFB2,U,2)
"RTN","DDGFFLDA",31,0)
 ;
"RTN","DDGFFLDA",32,0)
 I DDGFTYPE=1 D
"RTN","DDGFFLDA",33,0)
 . S DDGFCC0=DDGFDY-DDGFB1+1_","_(DDGFDX-DDGFB2+1)
"RTN","DDGFFLDA",34,0)
 E  D
"RTN","DDGFFLDA",35,0)
 . S DDGFD1=DDGFDY-DDGFB1+1,DDGFD2=DDGFDX-DDGFB2+1
"RTN","DDGFFLDA",36,0)
 . S (DDGFDC,DDGFDC0)=DDGFD1_","_DDGFD2
"RTN","DDGFFLDA",37,0)
 . S (DDGFDL,DDGFDL0)=1
"RTN","DDGFFLDA",38,0)
 ;
"RTN","DDGFFLDA",39,0)
 I DDGFTYPE'=1,DDGFD1<1!(DDGFD2<1) D  G ADDQ
"RTN","DDGFFLDA",40,0)
 . D MSG^DDGF($C(7)_"Unable to add a field above or to the left of the block.")
"RTN","DDGFFLDA",41,0)
 . H 2 D MSG^DDGF()
"RTN","DDGFFLDA",42,0)
 ;
"RTN","DDGFFLDA",43,0)
 K DDGFD1,DDGFD2
"RTN","DDGFFLDA",44,0)
 ;
"RTN","DDGFFLDA",45,0)
 ;Add field order to block file
"RTN","DDGFFLDA",46,0)
 S DIC="^DIST(.404,"_DDGFBLCK_",40,",DIC(0)="L"
"RTN","DDGFFLDA",47,0)
 S DIC("P")=$P(^DD(.404,40,0),U,2)
"RTN","DDGFFLDA",48,0)
 S DA(1)=DDGFBLCK,X=DDGFFORD
"RTN","DDGFFLDA",49,0)
 K DD,DO D FILE^DICN
"RTN","DDGFFLDA",50,0)
 I Y=-1 K DIC,DA,Y D MSG^DDGF($C(7)_"Unable to add field.") H 2 D MSG^DDGF() G ADDQ
"RTN","DDGFFLDA",51,0)
 ;
"RTN","DDGFFLDA",52,0)
 ;Stuff values for field type, data coordinate, and data length
"RTN","DDGFFLDA",53,0)
 ;If form-only field, also stuff in default read type
"RTN","DDGFFLDA",54,0)
 S DIE=DIC,DA(1)=DDGFBLCK,DA=+Y
"RTN","DDGFFLDA",55,0)
 S DR="2////"_DDGFTYPE
"RTN","DDGFFLDA",56,0)
 S:DDGFTYPE'=1 DR=DR_";4.1////"_DDGFDC_";4.2////1"
"RTN","DDGFFLDA",57,0)
 S:DDGFTYPE=2 DR=DR_";20.1////F"
"RTN","DDGFFLDA",58,0)
 D ^DIE K DIC,DIE,DR,Y
"RTN","DDGFFLDA",59,0)
 ;
"RTN","DDGFFLDA",60,0)
 ;Invoke appropriate form
"RTN","DDGFFLDA",61,0)
 S DDSFILE=.404,DDSFILE(1)=.4044,DDSPARM="CKTW"
"RTN","DDGFFLDA",62,0)
 S DDGFDD=$P(^DIST(.404,DDGFBLCK,0),U,2)
"RTN","DDGFFLDA",63,0)
 S DR="[DDGF FIELD "_$P("CAPTION ONLY^FORM ONLY^DD^COMPUTED",U,DDGFTYPE)_"]" ;4 TYPES OF SCREENMAN FIELDS
"RTN","DDGFFLDA",64,0)
 D ^DDS K DDSFILE,DR,DDSPARM,DDGFDD
"RTN","DDGFFLDA",65,0)
 ;
"RTN","DDGFFLDA",66,0)
 I $D(DA)#2,DDGFTYPE'=1,$G(DDSCHANG)'=1 D
"RTN","DDGFFLDA",67,0)
 . S DIK="^DIST(.404,"_DA(1)_",40,"
"RTN","DDGFFLDA",68,0)
 . D ^DIK K DIK
"RTN","DDGFFLDA",69,0)
 E  I $D(DA)#2 D
"RTN","DDGFFLDA",70,0)
 . D SAVE
"RTN","DDGFFLDA",71,0)
 . D LOADF
"RTN","DDGFFLDA",72,0)
 ;
"RTN","DDGFFLDA",73,0)
ADDQ ;Refresh and cleanup
"RTN","DDGFFLDA",74,0)
 D REFRESH^DDGF
"RTN","DDGFFLDA",75,0)
 D RC(DDGFDY,DDGFDX)
"RTN","DDGFFLDA",76,0)
 ;
"RTN","DDGFFLDA",77,0)
 K DA,DDSCHANG
"RTN","DDGFFLDA",78,0)
 K DDGFB1,DDGFB2,DDGFD1,DDGFD2
"RTN","DDGFFLDA",79,0)
 K DDGFSUP,DDGFSUP0,DDGFCAP,DDGFCAP0,DDGFCC,DDGFCC0
"RTN","DDGFFLDA",80,0)
 K DDGFDL,DDGFDL0,DDGFDC,DDGFDC0
"RTN","DDGFFLDA",81,0)
 K DDGFDY,DDGFDX,DDGFBLCK,DDGFFORD,DDGFTYPE
"RTN","DDGFFLDA",82,0)
 Q
"RTN","DDGFFLDA",83,0)
 ;
"RTN","DDGFFLDA",84,0)
SAVE ;Save changes to caption, coordinates, data length, and suppress
"RTN","DDGFFLDA",85,0)
 ;colon flag
"RTN","DDGFFLDA",86,0)
 S:DDGFCAP="" (DDGFSUP,DDGFCC)=""
"RTN","DDGFFLDA",87,0)
 S DR=""
"RTN","DDGFFLDA",88,0)
 ;
"RTN","DDGFFLDA",89,0)
 S:DDGFCAP]"" DR=DR_"1////"_DDGFCAP_";"
"RTN","DDGFFLDA",90,0)
 S:DDGFCC]"" DR=DR_"5.1////"_DDGFCC_";"
"RTN","DDGFFLDA",91,0)
 S:DDGFSUP DR=DR_"5.2////1;"
"RTN","DDGFFLDA",92,0)
 ;
"RTN","DDGFFLDA",93,0)
 I DDGFTYPE'=1 D
"RTN","DDGFFLDA",94,0)
 . S:DDGFDC'=DDGFDC0 DR=DR_"4.1////"_DDGFDC_";"
"RTN","DDGFFLDA",95,0)
 . S:DDGFDL'=DDGFDL0 DR=DR_"4.2////"_DDGFDL_";"
"RTN","DDGFFLDA",96,0)
 I DR="" K DR Q
"RTN","DDGFFLDA",97,0)
 ;
"RTN","DDGFFLDA",98,0)
 S DIE="^DIST(.404,"_DA(1)_",40,"
"RTN","DDGFFLDA",99,0)
 S DR=$E(DR,1,$L(DR)-1)
"RTN","DDGFFLDA",100,0)
 D ^DIE K DIE,DR,Y
"RTN","DDGFFLDA",101,0)
 Q
"RTN","DDGFFLDA",102,0)
 ;
"RTN","DDGFFLDA",103,0)
LOADF ;Set DDGFREF array and window buffer
"RTN","DDGFFLDA",104,0)
 N C,C1,C2,C3,D,D1,D2,D3,L
"RTN","DDGFFLDA",105,0)
 ;
"RTN","DDGFFLDA",106,0)
 I DDGFCAP="" D
"RTN","DDGFFLDA",107,0)
 . S (C,C1,C2,C3)=""
"RTN","DDGFFLDA",108,0)
 . K @DDGFREF@("F",DDGFPG,DDGFBLCK,DA)
"RTN","DDGFFLDA",109,0)
 E  D
"RTN","DDGFFLDA",110,0)
 . S C=DDGFCAP_$S(DDGFTYPE'=1&'DDGFSUP:":",1:"")
"RTN","DDGFFLDA",111,0)
 . S C1=$P(DDGFCC,",")-1+DDGFB1
"RTN","DDGFFLDA",112,0)
 . S C2=$P(DDGFCC,",",2)-1+DDGFB2
"RTN","DDGFFLDA",113,0)
 . S C3=C2+$L(C)-1
"RTN","DDGFFLDA",114,0)
 . ;
"RTN","DDGFFLDA",115,0)
 . S @DDGFREF@("F",DDGFPG,DDGFBLCK,DA)=C1_U_C2_U_C3_U_C
"RTN","DDGFFLDA",116,0)
 . S @DDGFREF@("RC",DDGFWID,C1,C2,C3,DDGFBLCK,DA,"C")=""
"RTN","DDGFFLDA",117,0)
 . D WRITE^DDGLIBW(DDGFWID,C,C1-$P(DDGFLIM,U),C2-$P(DDGFLIM,U,2),"",1)
"RTN","DDGFFLDA",118,0)
 ;
"RTN","DDGFFLDA",119,0)
 I DDGFTYPE'=1 D  ;IF IT IS NOT CAPTION-ONLY
"RTN","DDGFFLDA",120,0)
 . S D1=$P(DDGFDC,",")-1+DDGFB1
"RTN","DDGFFLDA",121,0)
 . S D2=$P(DDGFDC,",",2)-1+DDGFB2
"RTN","DDGFFLDA",122,0)
 . S D3=D2+DDGFDL-1
"RTN","DDGFFLDA",123,0)
 . ;
"RTN","DDGFFLDA",124,0)
 . S $P(@DDGFREF@("F",DDGFPG,DDGFBLCK,DA),U,5,8)=D1_U_D2_U_D3_U_DDGFDL
"RTN","DDGFFLDA",125,0)
 . I D1]"",D2]"" S @DDGFREF@("RC",DDGFWID,D1,D2,D3,DDGFBLCK,DA,"D")=""
"RTN","DDGFFLDA",126,0)
 .D KILLPGS(DDGFBLCK,DDGFWID)
"RTN","DDGFFLDA",127,0)
 . D:DDGFDL WRITE^DDGLIBW(DDGFWID,$TR($J("",DDGFDL)," ","_"),D1-$P(DDGFLIM,U),D2-$P(DDGFLIM,U,2),"",1)
"RTN","DDGFFLDA",128,0)
 Q
"RTN","DDGFFLDA",129,0)
 ;
"RTN","DDGFFLDA",130,0)
KILLPGS(BLOCK,PPAGE) ;GET RID OF OTHER PAGES THAT HAVE THIS BLOCK ON THEM.  PPAGE="P"_(INTERNAL PAGE)   ALSO COME HERE FROM DDGFFLD
"RTN","DDGFFLDA",131,0)
 N P F P=0:0 S P=$O(@DDGFREF@("F",P)) Q:'P  I $D(^(P,BLOCK)) S P("P"_P)=""
"RTN","DDGFFLDA",132,0)
 S P="" F  S P=$O(P(P)) Q:P=""  I P'=PPAGE K @DDGFREF@("RC",P),@DDGLREF@(P) ;!! E.G., ^TMP("DDGF",$J,"RC","P4") &^TMP("DDGL",$J,"W","P4"). PAGES WILL BE RE-CREATED WHEN NEEDED
"RTN","DDGFFLDA",133,0)
 Q
"RTN","DDGFFLDA",134,0)
 ;
"RTN","DDGFFLDA",135,0)
RC(DDGFY,DDGFX) ;Update status line, reset DX and DY, move cursor
"RTN","DDGFFLDA",136,0)
 N S
"RTN","DDGFFLDA",137,0)
 I DDGFR D
"RTN","DDGFFLDA",138,0)
 . S DY=IOSL-6,DX=IOM-9,S="R"_(DDGFY+1)_",C"_(DDGFX+1)
"RTN","DDGFFLDA",139,0)
 . X IOXY W S_$J("",7-$L(S))
"RTN","DDGFFLDA",140,0)
 S DY=DDGFY,DX=DDGFX X IOXY
"RTN","DDGFFLDA",141,0)
 Q
"RTN","DDGLIBP")
0^8^B27766781^B27768637
"RTN","DDGLIBP",1,0)
DDGLIBP ;SFISC/MKO - PRINT FROM WITHIN SCREEN TOOLS ;13APR2016
"RTN","DDGLIBP",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DDGLIBP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGLIBP",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDGLIBP",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDGLIBP",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDGLIBP",7,0)
 ;;GFT;**169,1055**
"RTN","DDGLIBP",8,0)
 ;
"RTN","DDGLIBP",9,0)
PT(DDGLROOT,DDGLHDR) ;Prompt for device and print
"RTN","DDGLIBP",10,0)
 N POP,DDGLBAR,DDGLFLAG,DDGLHELP,DDGLI,DDGLPHDR,DDGLREF,DDGLWRAP,DX,DY,DIR0,DDS
"RTN","DDGLIBP",11,0)
 N %,%A,%B,%B1,%B2,%B3,%BA,%C,%E,%G,%H,%I,%J,%K,%M,%N
"RTN","DDGLIBP",12,0)
 N %P,%S,%T,%W,%X,%Y
"RTN","DDGLIBP",13,0)
 N %A0,%D1,%D2,%DT,%J1,%W0
"RTN","DDGLIBP",14,0)
 ;
"RTN","DDGLIBP",15,0)
 S DDGLFLAG=""
"RTN","DDGLIBP",16,0)
 ;
"RTN","DDGLIBP",17,0)
 ;Set terminal characterstics for scroll mode
"RTN","DDGLIBP",18,0)
 X DDGLZOSF("EON"),DDGLZOSF("TRMOFF")
"RTN","DDGLIBP",19,0)
 S X=$G(IOM,80) X $G(^%ZOSF("RM"),$G(DDGLZOSF("RM")))
"RTN","DDGLIBP",20,0)
 W $P(DDGLVID,DDGLDEL,9)
"RTN","DDGLIBP",21,0)
 ;
"RTN","DDGLIBP",22,0)
 W:$G(DDGLHDR)]"" "Document: "_DDGLHDR,!
"RTN","DDGLIBP",23,0)
 ;
"RTN","DDGLIBP",24,0)
 ;Prompt whether to print a header
"RTN","DDGLIBP",25,0)
 S DDGLHELP(1)="  Answer 'Y' to print a document title, date/time, and page number"
"RTN","DDGLIBP",26,0)
 S DDGLHELP="  at the top of each page."
"RTN","DDGLIBP",27,0)
 S DDGLPHDR=$$YNREAD("Print a header on each page","N",.DDGLHELP)
"RTN","DDGLIBP",28,0)
 K DDGLHELP
"RTN","DDGLIBP",29,0)
 I DDGLPHDR=-1 D FINISH("Report canceled.") Q
"RTN","DDGLIBP",30,0)
 S:DDGLPHDR DDGLFLAG=DDGLFLAG_"H"
"RTN","DDGLIBP",31,0)
 ;
"RTN","DDGLIBP",32,0)
 ;Prompt whether to wrap text
"RTN","DDGLIBP",33,0)
 S DDGLHELP(1)="  Answer 'Y' to wrap the text at word boundaries to fit within the margins"
"RTN","DDGLIBP",34,0)
 S DDGLHELP(2)="             of the device."
"RTN","DDGLIBP",35,0)
 S DDGLHELP="  Answer 'N' to print the text as-is (no-wrap)."
"RTN","DDGLIBP",36,0)
 S DDGLWRAP=$$YNREAD("Wrap text","N",.DDGLHELP)
"RTN","DDGLIBP",37,0)
 K DDGLHELP
"RTN","DDGLIBP",38,0)
 I DDGLWRAP=-1 D FINISH("Report canceled.") Q
"RTN","DDGLIBP",39,0)
 ;
"RTN","DDGLIBP",40,0)
 ;Prompt whether to interpret word processing (|) windows"
"RTN","DDGLIBP",41,0)
 S DDGLHELP(1)="  Answer 'Y' to have text enclosed within vertical bars (|) interpreted as"
"RTN","DDGLIBP",42,0)
 S DDGLHELP(2)="             word processing windows."
"RTN","DDGLIBP",43,0)
 S DDGLHELP="  Answer 'N' to have vertical bars printed as-is."
"RTN","DDGLIBP",44,0)
 S DDGLBAR=$$YNREAD("Interpret word processing windows (|)","N",.DDGLHELP)
"RTN","DDGLIBP",45,0)
 K DDGLHELP
"RTN","DDGLIBP",46,0)
 I DDGLBAR=-1 D FINISH("Report canceled.") Q
"RTN","DDGLIBP",47,0)
 ;
"RTN","DDGLIBP",48,0)
 ;Set flag for wrap and wp windows
"RTN","DDGLIBP",49,0)
 S DDGLFLAG=DDGLFLAG_$S(DDGLWRAP&'DDGLBAR:"|",'DDGLWRAP&DDGLBAR:"N",'DDGLWRAP&'DDGLBAR:"X",1:"")
"RTN","DDGLIBP",50,0)
 ;
"RTN","DDGLIBP",51,0)
DEVICE ;Device prompt
"RTN","DDGLIBP",52,0)
 N IOF,IOSL
"RTN","DDGLIBP",53,0)
 S IOF="#",IOSL=IOBM-IOTM+1 ;In case help frames are invoked
"RTN","DDGLIBP",54,0)
 S %ZIS=$S($D(^%ZTSK):"Q",1:""),%ZIS("B")=""
"RTN","DDGLIBP",55,0)
 S %ZIS("S")="I $TR($P(^(0),U),""browse"",""BROWSE"")'[""BROWSE"""
"RTN","DDGLIBP",56,0)
 D ^%ZIS K %ZIS
"RTN","DDGLIBP",57,0)
 ;
"RTN","DDGLIBP",58,0)
 I POP D FINISH("Report canceled!") Q
"RTN","DDGLIBP",59,0)
 ;
"RTN","DDGLIBP",60,0)
 ;Get the closed root of the array containing the text, resolve values like $J
"RTN","DDGLIBP",61,0)
 S DDGLREF=$NA(@$$CREF^DILF($G(DDGLROOT)))
"RTN","DDGLIBP",62,0)
 ;
"RTN","DDGLIBP",63,0)
 ;If CRT selected, reset scrolling region to entire screen
"RTN","DDGLIBP",64,0)
 I $E(IOST,1,2)="C-" D
"RTN","DDGLIBP",65,0)
 . I $D(IOSTBM)#2 N IOTM,IOBM S IOTM=0,IOBM=$G(IOSL,24) W @IOSTBM
"RTN","DDGLIBP",66,0)
 . W @IOF
"RTN","DDGLIBP",67,0)
 ;
"RTN","DDGLIBP",68,0)
 ;Queue report
"RTN","DDGLIBP",69,0)
 I $D(IO("Q")),$D(^%ZTSK) D  Q
"RTN","DDGLIBP",70,0)
 . N I,ZTRTN,ZTDESC,ZTSAVE,ZTSK,DDGLMSG
"RTN","DDGLIBP",71,0)
 . S ZTRTN="PRINT^DDGLIBP"
"RTN","DDGLIBP",72,0)
 . S ZTDESC=DDGLHDR
"RTN","DDGLIBP",73,0)
 . F I="DDGLREF","DDGLHDR","DDGLFLAG" S ZTSAVE(I)=""
"RTN","DDGLIBP",74,0)
 . I DDGLREF]"" S ZTSAVE($$OREF^DILF(DDGLREF))=""
"RTN","DDGLIBP",75,0)
 . D ^%ZTLOAD
"RTN","DDGLIBP",76,0)
 . I $D(ZTSK)#2 D
"RTN","DDGLIBP",77,0)
 .. W !,"Report queued!",!,"Task number: "_ZTSK,!
"RTN","DDGLIBP",78,0)
 .. D EOPREAD
"RTN","DDGLIBP",79,0)
 . E  S DDGLMSG="Report canceled!"
"RTN","DDGLIBP",80,0)
 . S IOP="HOME" D ^%ZIS
"RTN","DDGLIBP",81,0)
 . D FINISH($G(DDGLMSG))
"RTN","DDGLIBP",82,0)
 ;
"RTN","DDGLIBP",83,0)
NONQUEUE ;Non-queued report
"RTN","DDGLIBP",84,0)
 D PRINT
"RTN","DDGLIBP",85,0)
 I $E(IOST,1,2)="C-" W @IOF W:$D(IOSTBM)#2 @IOSTBM ; Reset bottom margin
"RTN","DDGLIBP",86,0)
 N %ZISPCX X $G(^%ZIS("C")) ;DON'T DO THE BROWSER'S POST-CLOSE EXECUTE
"RTN","DDGLIBP",87,0)
 D FINISH("Done.")
"RTN","DDGLIBP",88,0)
 Q
"RTN","DDGLIBP",89,0)
 ;
"RTN","DDGLIBP",90,0)
PRINT ;Print the document in DDGLREF, Header text in DDGLHDR
"RTN","DDGLIBP",91,0)
 N DDGLDT,DDGLI,DDGLPAGE,DDGLZN
"RTN","DDGLIBP",92,0)
 I $G(DDGLREF)="" D PRINTQ Q
"RTN","DDGLIBP",93,0)
 I '$D(@DDGLREF) D PRINTQ Q
"RTN","DDGLIBP",94,0)
 ;
"RTN","DDGLIBP",95,0)
 S DDGLZN=$D(@DDGLREF@($O(@DDGLREF@(0)),0))#2
"RTN","DDGLIBP",96,0)
 S DDGLFLAG=$G(DDGLFLAG)
"RTN","DDGLIBP",97,0)
 ;
"RTN","DDGLIBP",98,0)
 ;Format the text, if DDGLFLAG doesn't contain X
"RTN","DDGLIBP",99,0)
 I DDGLFLAG'["X" D
"RTN","DDGLIBP",100,0)
 . D FORMAT(DDGLREF,DDGLZN,DDGLFLAG)
"RTN","DDGLIBP",101,0)
 . S DDGLZN=1
"RTN","DDGLIBP",102,0)
 . S DDGLREF=$NA(^UTILITY($J,"W",1))
"RTN","DDGLIBP",103,0)
 ;
"RTN","DDGLIBP",104,0)
 ;Write the report from the original location or from ^UTILITY
"RTN","DDGLIBP",105,0)
 U IO
"RTN","DDGLIBP",106,0)
 I DDGLFLAG["H" D
"RTN","DDGLIBP",107,0)
 . ;Get current date/time and write first header
"RTN","DDGLIBP",108,0)
 . N %,%H,X,Y
"RTN","DDGLIBP",109,0)
 . S %H=$H D YX^%DTC
"RTN","DDGLIBP",110,0)
 . S DDGLDT=$E(Y,1,18)
"RTN","DDGLIBP",111,0)
 . D HDR
"RTN","DDGLIBP",112,0)
 ;
"RTN","DDGLIBP",113,0)
 ;Print each line
"RTN","DDGLIBP",114,0)
 S DDGLI=0 F  S DDGLI=$O(@DDGLREF@(DDGLI)) Q:'DDGLI  D
"RTN","DDGLIBP",115,0)
 . I DDGLFLAG["H",$Y+6>IOSL W @IOF D HDR
"RTN","DDGLIBP",116,0)
 . W !,$S(DDGLZN:$G(@DDGLREF@(DDGLI,0)),1:$G(@DDGLREF@(DDGLI)))
"RTN","DDGLIBP",117,0)
 ;
"RTN","DDGLIBP",118,0)
 K:$G(DDGLFLAG)'["N" ^UTILITY($J,"W")
"RTN","DDGLIBP",119,0)
 D PRINTQ
"RTN","DDGLIBP",120,0)
 Q
"RTN","DDGLIBP",121,0)
 ;
"RTN","DDGLIBP",122,0)
PRINTQ ;Delete the queued task and quit
"RTN","DDGLIBP",123,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","DDGLIBP",124,0)
 Q
"RTN","DDGLIBP",125,0)
 ;
"RTN","DDGLIBP",126,0)
HDR ;Print the header DDGLHDR; increment DDGLPAGE
"RTN","DDGLIBP",127,0)
 N DDGLCOL,DDGLPSTR
"RTN","DDGLIBP",128,0)
 S DDGLPAGE=$G(DDGLPAGE)+1
"RTN","DDGLIBP",129,0)
 S DDGLPSTR=DDGLDT_"    Page: "_DDGLPAGE
"RTN","DDGLIBP",130,0)
 S DDGLCOL=IOM-$L(DDGLPSTR)-1
"RTN","DDGLIBP",131,0)
 W DDGLHDR
"RTN","DDGLIBP",132,0)
 W:$X+2'<DDGLCOL !
"RTN","DDGLIBP",133,0)
 W ?DDGLCOL,DDGLPSTR
"RTN","DDGLIBP",134,0)
 W !,$TR($J("",IOM-1)," ","-")
"RTN","DDGLIBP",135,0)
 Q
"RTN","DDGLIBP",136,0)
 ;
"RTN","DDGLIBP",137,0)
YNREAD(DDGLPROM,DDGLDEF,DDGLHELP) ;Issue a Yes/No Read
"RTN","DDGLIBP",138,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","DDGLIBP",139,0)
 S DIR(0)="Y"
"RTN","DDGLIBP",140,0)
 S DIR("B")=$S("Nn0"[$E($G(DDGLDEF)):"NO",1:"YES")
"RTN","DDGLIBP",141,0)
 M:$D(DDGLHELP)]"" DIR("?")=DDGLHELP
"RTN","DDGLIBP",142,0)
 S:$G(DDGLPROM)]"" DIR("A")=DDGLPROM
"RTN","DDGLIBP",143,0)
 D ^DIR
"RTN","DDGLIBP",144,0)
 Q $S($D(DIRUT):-1,1:Y)
"RTN","DDGLIBP",145,0)
 ;
"RTN","DDGLIBP",146,0)
EOPREAD ; Issue an End-of-Page Read
"RTN","DDGLIBP",147,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","DDGLIBP",148,0)
 S DIR(0)="E" D ^DIR
"RTN","DDGLIBP",149,0)
 Q
"RTN","DDGLIBP",150,0)
 ;
"RTN","DDGLIBP",151,0)
FORMAT(DDGLREF,DDGLZN,DDGLFLAG) ;Use ^DIWP to format the text
"RTN","DDGLIBP",152,0)
 N DIWL,DIWR,DIWF,X
"RTN","DDGLIBP",153,0)
 K ^UTILITY($J,"W")
"RTN","DDGLIBP",154,0)
 S DIWL=1,DIWR=IOM-1,DIWF=$E("N",DDGLFLAG["N")_$E("|",DDGLFLAG["|")_$E("X",DDGLFLAG["X")
"RTN","DDGLIBP",155,0)
 S DDGLI=0 F  S DDGLI=$O(@DDGLREF@(DDGLI)) Q:'DDGLI  D
"RTN","DDGLIBP",156,0)
 . S X=$S($G(DDGLZN):@DDGLREF@(DDGLI,0),1:$G(@DDGLREF@(DDGLI)))
"RTN","DDGLIBP",157,0)
 . D ^DIWP
"RTN","DDGLIBP",158,0)
 Q
"RTN","DDGLIBP",159,0)
 ;
"RTN","DDGLIBP",160,0)
FINISH(DDGLMSG) ;Print message and reset terminal characteristics
"RTN","DDGLIBP",161,0)
 I $G(DDGLMSG)]"" W !,DDGLMSG H 1
"RTN","DDGLIBP",162,0)
 ;
"RTN","DDGLIBP",163,0)
 ;Reset terminal characteristics for screen handling
"RTN","DDGLIBP",164,0)
 X DDGLZOSF("EOFF"),DDGLZOSF("TRMON")
"RTN","DDGLIBP",165,0)
 S X=0 X $G(^%ZOSF("RM"),$G(DDGLZOSF("RM")))
"RTN","DDGLIBP",166,0)
 W $P(DDGLVID,DDGLDEL,8)
"RTN","DDGLIBP",167,0)
 Q
"RTN","DDS")
0^7^B41736293^B40296142
"RTN","DDS",1,0)
DDS ;SFISC/MLH,MKO - MAIN ROUTINE ;18MAR2017
"RTN","DDS",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DDS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDS",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDS",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDS",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDS",7,0)
 ;GFT;**1003,1004,1028,1043,1045,1055,1057**
"RTN","DDS",8,0)
 ;
"RTN","DDS",9,0)
 N DIE,DX,DY,X,Y,DDSATOP
"RTN","DDS",10,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DDS",11,0)
 ;
"RTN","DDS",12,0)
 D EN^DDS0(.DDSFILE,DR,.DA)
"RTN","DDS",13,0)
 I $G(DIERR) D:$G(DDSPARM)'["E"  G END^DDS0
"RTN","DDS",14,0)
 . W !,$C(7)_$$EZBLD^DIALOG(3000)
"RTN","DDS",15,0)
 . D MSG^DIALOG("BW")
"RTN","DDS",16,0)
 . S DIMSG=""
"RTN","DDS",17,0)
 ;
"RTN","DDS",18,0)
 N DR
"RTN","DDS",19,0)
 X:$G(^DIST(.403,+DDS,11))'?."^" ^(11)
"RTN","DDS",20,0)
 F  D PG Q:DDACT="Q"
"RTN","DDS",21,0)
 X:$G(^DIST(.403,+DDS,12))'?."^" ^(12)
"RTN","DDS",22,0)
 ;
"RTN","DDS",23,0)
 D:$G(@DDSREFT@("HLP"))>0 HLP^DDSMSG()
"RTN","DDS",24,0)
 G END^DDS0
"RTN","DDS",25,0)
 ;
"RTN","DDS",26,0)
PROC ;Main loop  --  do all the PAGES
"RTN","DDS",27,0)
 F  D PG Q:DDACT="Q"
"RTN","DDS",28,0)
 Q
"RTN","DDS",29,0)
 ;
"RTN","DDS",30,0)
PG ;Load page
"RTN","DDS",31,0)
 N DDSMX,DDSMY,DDSMOUSE,FND
"RTN","DDS",32,0)
 S DDACT="N"
"RTN","DDS",33,0)
 D EN^DDS1(DDSPG)
"RTN","DDS",34,0)
 I $G(DIERR) D  Q
"RTN","DDS",35,0)
 . N P S P(1)=$P($G(^DIST(.403,+DDS,40,DDSPG,0)),U),P(2)=$P($G(^(1)),U)
"RTN","DDS",36,0)
 . S:P(2)="" P(2)="unnamed"
"RTN","DDS",37,0)
 . D BLD^DIALOG(3041,.P),ERR^DDSMSG H 2
"RTN","DDS",38,0)
 . S DDACT="Q"
"RTN","DDS",39,0)
 ;
"RTN","DDS",40,0)
 ;Pre-action, save old and get next page
"RTN","DDS",41,0)
 S DDSOPB=DDSPG
"RTN","DDS",42,0)
 I $G(^DIST(.403,+DDS,40,DDSPG,11))'?."^" D PA(^(11)) Q:DDACT="NP"
"RTN","DDS",43,0)
 S DDSNP=$$NP^DDS5(.Y) S:'Y DDSNP=""
"RTN","DDS",44,0)
 ;
"RTN","DDS",45,0)
 ;Get DDO and DDSBK
"RTN","DDS",46,0)
 I $S($D(DDSBR)[0:1,1:$D(@DDSREFS@(DDSPG,$S(DDO:+DDSBK,1:0),DDO,"N"))[0) D
"RTN","DDS",47,0)
 . S DDO=+$G(@DDSREFS@(DDSPG,"FIRST")),DDSBK=$P($G(^("FIRST")),",",2)
"RTN","DDS",48,0)
 I 'DDSBK D  Q
"RTN","DDS",49,0)
 . D BLD^DIALOG(3055,"number "_$P($G(^DIST(.403,+DDS,40,DDSPG,0)),U)_$S($G(^(1))]"":" ("_$P($G(^(1)),U)_")",1:""))
"RTN","DDS",50,0)
 . D ERR^DDSMSG H 2
"RTN","DDS",51,0)
 . S DDACT="Q"
"RTN","DDS",52,0)
 ;
"RTN","DDS",53,0)
 ;Get DDSPOP and update DDSSC array
"RTN","DDS",54,0)
 ;If we're going to another page
"RTN","DDS",55,0)
 I '$D(DDSPGUP) D
"RTN","DDS",56,0)
 . S DDSLN=^DIST(.403,+DDS,40,DDSPG,0),DDSPOP=$P(DDSLN,U,6)
"RTN","DDS",57,0)
 . K:'DDSPOP DDSSC
"RTN","DDS",58,0)
SEL . I $D(DDSSEL) D
"RTN","DDS",59,0)
 .. N P S P=$P($G(^DIST(.403,+DDS,21)),U) Q:P=""  Q:$O(^(40,"B",P,""))'=DDSPG  ;CONVERT PAGE TO ITS INTERNAL NUMBER
"RTN","DDS",60,0)
 .. S DDSDASV=DDSDA,DDSDLSV=DDSDL
"RTN","DDS",61,0)
 .. M DDSORGSV=DDSDAORG
"RTN","DDS",62,0)
 .. K DA,@$$D0(DDSDL),DDSDAORG ;IF IT'S (REALLY) A RECORD SELECTION PAGE FORGET DA
"RTN","DDS",63,0)
 .. S (DA,D0,DDSDAORG)="",DDSDA="0,",DDSDL=0
"RTN","DDS",64,0)
 . I '$D(DDSSC("B",DDSPG)) D
"RTN","DDS",65,0)
 .. S DDSSC=$G(DDSSC)+1,DDSSC(DDSSC)=DDSPG,DDSSC("B",DDSPG,DDSSC)="" ;Stack DDSSC
"RTN","DDS",66,0)
 .. S:DDSPOP $P(DDSSC(DDSSC),U,2,3)=$P(DDSLN,U,3)_U_$P(DDSLN,U,7)
"RTN","DDS",67,0)
 .. I $G(DDSSTK) S $P(DDSSC(DDSSC),U,4)=1 K DDSSTK
"RTN","DDS",68,0)
 .. K DDSPOP
"RTN","DDS",69,0)
 . E  D
"RTN","DDS",70,0)
 .. Q:$P($G(DDSSC(+$G(DDSSC))),U)=DDSPG
"RTN","DDS",71,0)
 .. N I,J,S
"RTN","DDS",72,0)
 .. S I=$O(DDSSC("B",DDSPG,"")),S=DDSSC(I) K DDSSC("B",DDSPG,I)
"RTN","DDS",73,0)
 .. F J=I:1:DDSSC-1 D
"RTN","DDS",74,0)
 ... K DDSSC("B",$P(DDSSC(J+1),U),J)
"RTN","DDS",75,0)
 ... S DDSSC(J)=DDSSC(J+1),DDSSC("B",$P(DDSSC(J),U),J)=""
"RTN","DDS",76,0)
 .. S DDSSC(DDSSC)=S,DDSSC("B",DDSPG,DDSSC)=""
"RTN","DDS",77,0)
 ;
"RTN","DDS",78,0)
 ;If we've moving up from a pop-up page
"RTN","DDS",79,0)
 E  K DDSPGUP
"RTN","DDS",80,0)
 ;
"RTN","DDS",81,0)
 ;Paint the page
"RTN","DDS",82,0)
 D RP^DDSR(DDSSC(DDSSC),DDSSC=1)
"RTN","DDS",83,0)
 ;
"RTN","DDS",84,0)
P1 F  D BLK Q:"^Q^NP^"[(U_DDACT_U)
"RTN","DDS",85,0)
 ;
"RTN","DDS",86,0)
 ;PAGE Post action, print any help
"RTN","DDS",87,0)
 D:$G(^DIST(.403,+DDS,40,+DDSOPB,12))'?."^" PA(^(12))
"RTN","DDS",88,0)
 D:$G(@DDSREFT@("HLP"))>0 HLP^DDSMSG()
"RTN","DDS",89,0)
 G:"^NB^N^"[(U_DDACT_U) P1
"RTN","DDS",90,0)
 ;
"RTN","DDS",91,0)
 I DDACT="Q" D
"RTN","DDS",92,0)
 . I '$P(DDSSC(DDSSC),U,4) D
"RTN","DDS",93,0)
 .. I $G(DDSSEL) D GDA^DDSRSEL Q:'DA  ;Process what came from the RECORD SELECTION PAGE now that we've returned from it
"RTN","DDS",94,0)
 .. D:$G(DDSSC)>1 CLEAR^DDSBOX($P(DDSSC(DDSSC),U,2),$P(DDSSC(DDSSC),U,3))
"RTN","DDS",95,0)
 .. S:DDSSC>1 DDSPG=$P(DDSSC(DDSSC-1),U),DDACT="N",DDSPGUP=1
"RTN","DDS",96,0)
 . K DDSSC("B",$P(DDSSC(DDSSC),U),DDSSC),DDSSC(DDSSC) S DDSSC=DDSSC-1 ;Unstack DDSSC
"RTN","DDS",97,0)
 Q
"RTN","DDS",98,0)
 ;
"RTN","DDS",99,0)
BLK S DDACT="N",DDSOSV=0
"RTN","DDS",100,0)
 ;
"RTN","DDS",101,0)
 I $D(@DDSREFS@(DDSPG,DDSBK))[0 S DDACT="Q" Q
"RTN","DDS",102,0)
 S DDSLN=@DDSREFS@(DDSPG,DDSBK)
"RTN","DDS",103,0)
 ;
"RTN","DDS",104,0)
 S DDSDN=$P(DDSLN,U,4),DDSTP=$P(DDSLN,U,5)
"RTN","DDS",105,0)
 S DDSREP=$P(DDSLN,U,7),DDSPTB=$P(DDSLN,U,8)
"RTN","DDS",106,0)
 K:'DDSDN DDSDN K:DDSTP="e" DDSTP K:'DDSPTB DDSPTB K:DDSREP'>1 DDSREP
"RTN","DDS",107,0)
 ;
"RTN","DDS",108,0)
 I $D(DDSPTB)!$D(DDSREP) N DDP,DDSDA,DIE D  ;NEW WHEN WE GO INTO MULTIPLE!!
"RTN","DDS",109,0)
 . S DDP=$P(DDSLN,U,3)
"RTN","DDS",110,0)
DIE . S DDSDA=$P(@DDSREFT@(DDSPG,DDSBK),U) I DDSDA'>0,$G(^(DDSBK,"COMP MUL"))="" S DIE=$G(DIE) Q  ;Get Entry Number
"RTN","DDS",111,0)
 . S DIE=@DDSREFT@(DDSPG,DDSBK,DDSDA,"GL")
"RTN","DDS",112,0)
 ;
"RTN","DDS",113,0)
 I $D(DDSPTB) N DA,@$$D0(DDSDL),DDSDL D
"RTN","DDS",114,0)
 . S DDSPTB=@DDSREFS@(DDSPG,DDSBK,"PTB")
"RTN","DDS",115,0)
 . S DDSDL=$L(DDSDA,",")-2
"RTN","DDS",116,0)
 . S (D0,DA)=+DDSDA
"RTN","DDS",117,0)
 ;
"RTN","DDS",118,0)
 I $D(DDSREP) N DDSDL,DA D
"RTN","DDS",119,0)
 . S DDSREP=$P(@DDSREFT@(DDSPG,DDSBK,DDSDA),U,2,999)
"RTN","DDS",120,0)
 . S DDSDA=$G(@DDSREFT@(DDSPG,DDSBK,$P(DDSREP,U),$P(DDSREP,U,4)),"0,"_DDSDA) ;2-arg $G -- go to empty line if none other specified
"RTN","DDS",121,0)
 . S:'$P(DDSREP,U,7) DDSDA=$P(DDSDA,",")_","
"RTN","DDS",122,0)
 . S DDSDL=$L(DDSDA,",")-2
"RTN","DDS",123,0)
 I  N @$$D0(DDSDL) D
"RTN","DDS",124,0)
 . D BLDDA(DDSDA)
"RTN","DDS",125,0)
 . S:'DA DDO=+$P(DDSREP,U,8) ;If this is a new subEntry, start at 1st editable field
"RTN","DDS",126,0)
 ;
"RTN","DDS",127,0)
PTB I $D(DDSPTB),'$D(DDSREP),'DDSDA,DDSDAORG  D  Q
"RTN","DDS",128,0)
 . N DDSBK0
"RTN","DDS",129,0)
 . S DDSBK0=DDSBK
"RTN","DDS",130,0)
 . F  S DDSBK=$$NB^DDS5(.Y) Q:DDSBK=DDSBK0!'Y!$G(@DDSREFT@(DDSPG,DDSBK))
"RTN","DDS",131,0)
 . Q:Y
"RTN","DDS",132,0)
 . I DDSNP]"" S DDSPG=DDSNP,DDACT="NP" Q
"RTN","DDS",133,0)
 . S DDSPG=$$PP^DDS5(.Y) I Y S DDACT="NP" Q
"RTN","DDS",134,0)
 . S DDACT="Q"
"RTN","DDS",135,0)
 ;
"RTN","DDS",136,0)
 S $P(DDSOPB,U,2)=DDSBK
"RTN","DDS",137,0)
 I $G(^DIST(.403,+DDS,40,DDSPG,40,DDSBK,11))'?."^" D PA(^(11)) Q:DDACT="NP"
"RTN","DDS",138,0)
 I $G(^DIST(.404,DDSBK,11))'?."^" D PA(^(11)) Q:DDACT="NP"
"RTN","DDS",139,0)
1 I $S($D(DDSBR)[0:1,1:$D(@DDSREFS@(DDSPG,$S(DDO:+DDSBK,1:0),DDO,"N"))[0) D
"RTN","DDS",140,0)
 . S DDO=$P(@DDSREFS@(DDSPG,DDSBK),U,9) ;First field
"RTN","DDS",141,0)
 K DDSLN
"RTN","DDS",142,0)
 ;
"RTN","DDS",143,0)
B1 D ^DDS01
"RTN","DDS",144,0)
 ;
"RTN","DDS",145,0)
 I $G(^DIST(.403,+DDS,40,DDSPG,40,$P(DDSOPB,U,2),12))'?."^" D PA(^(12)) G:DDACT="N" B1
"RTN","DDS",146,0)
 I $G(^DIST(.404,$P(DDSOPB,U,2),12))'?."^" D PA(^(12)) G:DDACT="N" B1
"RTN","DDS",147,0)
 Q
"RTN","DDS",148,0)
 ;
"RTN","DDS",149,0)
BLDDA(DDSDA) ;
"RTN","DDS",150,0)
 N I
"RTN","DDS",151,0)
 S (DA,@("D"_DDSDL))=$P(DDSDA,",")
"RTN","DDS",152,0)
 F I=1:1:DDSDL S (DA(I),@("D"_(DDSDL-I)))=$P(DDSDA,",",I+1)
"RTN","DDS",153,0)
 Q
"RTN","DDS",154,0)
 ;
"RTN","DDS",155,0)
D0(DL) ;Given DL, return string D0,D1,...,Dn
"RTN","DDS",156,0)
 N I,S
"RTN","DDS",157,0)
 S S="" F I=0:1:DL S S=S_"D"_I_","
"RTN","DDS",158,0)
 S:S?.E1"," S=$E(S,1,$L(S)-1)
"RTN","DDS",159,0)
 Q S
"RTN","DDS",160,0)
 ;
"RTN","DDS",161,0)
CLRMSG ;FROM DDSU
"RTN","DDS",162,0)
 I $G(DDSKM) H 2 K DDSKM ;GFT  ** IF WE WERE KEEPING SOMETHING IN HELP AREA, HOLD UP 2 SECONDS  ISB-0603-31054
"RTN","DDS",163,0)
 K DDQ S DDSH=1,(DDM,DX)=0,DY=DDSHBX+1 X DDXY W $P(DDGLCLR,DDGLDEL,3) ;CLEAR WHOLE COMMAND AREA
"RTN","DDS",164,0)
 N I F  S I=$O(DDSMOUSE(DDSHBX)) Q:I+1=IOSL!'I  K DDSMOUSE(I)
"RTN","DDS",165,0)
 Q
"RTN","DDS",166,0)
 ;
"RTN","DDS",167,0)
PA(DDSPA) ;
"RTN","DDS",168,0)
 N DDSBRORG S:$D(DDSBR)#2 DDSBRORG=DDSBR
"RTN","DDS",169,0)
 K DDSBR X DDSPA ;PRE-ACTION OR POST-ACTION
"RTN","DDS",170,0)
 I $D(DDSBR)[0 S:$D(DDSBRORG)#2 DDSBR=DDSBRORG Q
"RTN","DDS",171,0)
 D BR^DDS2
"RTN","DDS",172,0)
 Q
"RTN","DDS",173,0)
 ;
"RTN","DDS",174,0)
 ;
"RTN","DDS",175,0)
 ;
"RTN","DDS",176,0)
 ;
"RTN","DDS",177,0)
 ;
"RTN","DDS",178,0)
 ;
"RTN","DDS",179,0)
RESET ;Programmer entry point to reset terminal and cleanup
"RTN","DDS",180,0)
 D INIT^DDGLIB0() D:$G(DIERR) MSG^DIALOG("BW")
"RTN","DDS",181,0)
 W $P($G(DDGLVID),DDGLDEL,10)
"RTN","DDS",182,0)
 K DDSPARM
"RTN","DDS",183,0)
 S DDSREFT="^TMP(""DDS"",$J)"
"RTN","DDS",184,0)
 D END^DDS0
"RTN","DDS",185,0)
 G RESET^DDGF
"RTN","DDS",186,0)
 ;
"RTN","DDS",187,0)
RUN ;Run a form
"RTN","DDS",188,0)
 G ^DDSRUN
"RTN","DDS",189,0)
CLONE ;Clone a form
"RTN","DDS",190,0)
 G ^DDSCLONE
"RTN","DDS",191,0)
PRINT ;Print a form
"RTN","DDS",192,0)
 G ^DDSPRNT
"RTN","DDS",193,0)
DFRM ;Delete a form
"RTN","DDS",194,0)
 G ^DDSDFRM
"RTN","DDS",195,0)
DBLK ;Delete unused blocks
"RTN","DDS",196,0)
 G ^DDSDBLK
"RTN","DDS1")
0^22^B36653455^B35932494
"RTN","DDS1",1,0)
DDS1 ;SFISC/MKO - LOAD PAGE ;21MAR2017
"RTN","DDS1",2,0)
 ;;22.2;VA FileMan;**5**;Jan 05, 2016;Build 28
"RTN","DDS1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDS1",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDS1",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDS1",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDS1",7,0)
 ;;GFT;**115,1003,1004,1028,1053,1057**
"RTN","DDS1",8,0)
 ;
"RTN","DDS1",9,0)
 ;Input:
"RTN","DDS1",10,0)
 ;  DDS     = Form number^Form name
"RTN","DDS1",11,0)
 ;  DDSPG   = Internal page number
"RTN","DDS1",12,0)
 ;  DA      = Record array
"RTN","DDS1",13,0)
 ;  DDSREFT = Global location where data (temporarily) is stored
"RTN","DDS1",14,0)
 ;  DDP     = Primary file number of form
"RTN","DDS1",15,0)
 ;  DIE     = Global root of form
"RTN","DDS1",16,0)
 ;  DDSDA   = DA,DA(1),... of form
"RTN","DDS1",17,0)
 ;  DDSDL   = Level number
"RTN","DDS1",18,0)
 ;Also needed for pointed-to blocks:
"RTN","DDS1",19,0)
 ;  DDSDAORG
"RTN","DDS1",20,0)
 ;  DDSDLORG
"RTN","DDS1",21,0)
 ;Returns:
"RTN","DDS1",22,0)
 ;  DIERR
"RTN","DDS1",23,0)
 ;
"RTN","DDS1",24,0)
EN(DDSPG,DDSAGAIN) ;entry point moved from 1st line.
"RTN","DDS1",25,0)
 ;
"RTN","DDS1",26,0)
 N DDS1B,DDS1BO K DDSMOUSE S U="^"
"RTN","DDS1",27,0)
 ;
"RTN","DDS1",28,0)
 ;Get header block
"RTN","DDS1",29,0)
 S DDS1B=$P($G(^DIST(.403,+DDS,40,DDSPG,0)),U,2)
"RTN","DDS1",30,0)
 I DDS1B]"" D BLK(DDSPG,DDS1B,"",1) G:$G(DIERR) END
"RTN","DDS1",31,0)
 ;
"RTN","DDS1",32,0)
 ;Get all other blocks on page
"RTN","DDS1",33,0)
 S DDS1BO="" F  S DDS1BO=$O(^DIST(.403,+DDS,40,DDSPG,40,"AC",DDS1BO)) Q:DDS1BO=""  S DDS1B=$O(^(DDS1BO,0)) Q:'DDS1B  D BLK(DDSPG,DDS1B,DDS1BO) G:$G(DIERR) END
"RTN","DDS1",34,0)
 ;
"RTN","DDS1",35,0)
END K DDSMOUSE
"RTN","DDS1",36,0)
 Q
"RTN","DDS1",37,0)
 ;
"RTN","DDS1",38,0)
BLK(DDSPG,DDS1B,DDS1BO,DDS1H,DDS1E) ;Load block
"RTN","DDS1",39,0)
 ;In:  DDS1H  = 1 if a header block
"RTN","DDS1",40,0)
 ;     DDS1E  = 1 if we're loading up a pointed-to block and
"RTN","DDS1",41,0)
 ;              we want interactive dialog (DIC(0)["E") in the lookup
"RTN","DDS1",42,0)
 ;
"RTN","DDS1",43,0)
 I $D(^DIST(.404,DDS1B,0))[0 D BLD^DIALOG(3051,"#"_DDS1B) Q
"RTN","DDS1",44,0)
 ;
"RTN","DDS1",45,0)
 N DDS1PTB,DDS1REP S DDS1PTB=""
"RTN","DDS1",46,0)
 I '$G(DDS1H) D
"RTN","DDS1",47,0)
 . S DDS1PTB=$G(^DIST(.403,+DDS,40,DDSPG,40,DDS1B,1)),DDS1REP=$G(^(2))
"RTN","DDS1",48,0)
 . K:DDS1REP<2 DDS1REP
"RTN","DDS1",49,0)
 ;
"RTN","DDS1",50,0)
 I DDS1PTB]"" N @$$D0(DDSDL),DA,DDP,DIE,DDSDL,DDSDA D  Q:$G(DIERR)
"RTN","DDS1",51,0)
 . I $G(DDS1REP)>1 D
"RTN","DDS1",52,0)
 .. D BK^DDS10(.DDS1B,.DDP) Q:$G(DIERR)
"RTN","DDS1",53,0)
 .. D GDA^DDS10(DDS1B,$G(DDS1E),.DA) Q:$G(DIERR)
"RTN","DDS1",54,0)
 .. S DDP=$G(^DD(DDP,0,"UP"),DDP) ;GFT
"RTN","DDS1",55,0)
 .. D GL^DDS10(DDP,.DA,.DIE,.DDSDL,.DDSDA,1)
"RTN","DDS1",56,0)
 .. D GETD0(.DA,DDSDL)
"RTN","DDS1",57,0)
 . E  D
"RTN","DDS1",58,0)
 .. D SET^DDS10(DDS1B,$G(DDS1E),.DA,.DDP,.DIE,.DDSDL,.DDSDA) ;GO GET THE NEW 'DA' VALUE
"RTN","DDS1",59,0)
 .. I +$G(DIERR)=1,$G(^TMP("DIERR",$J,1))=601 D  Q
"RTN","DDS1",60,0)
 ... L -@(DIE_DA_")")
"RTN","DDS1",61,0)
 ... K ^TMP("DDS",$J,"LOCK",DIE_DA_")")
"RTN","DDS1",62,0)
 ... D CLEAN^DILF
"RTN","DDS1",63,0)
 ... S (DA,D0,DDSDA)=""
"RTN","DDS1",64,0)
 .. Q:$G(DIERR)
"RTN","DDS1",65,0)
 .. I DA="",'$G(DDS1E),$P($G(@DDSREFT@(DDSPG,DDS1B)),U)]"" S DDSDA=$P(^(DDS1B),U),DA=+DDSDA
"RTN","DDS1",66,0)
 .. S D0=DA
"RTN","DDS1",67,0)
 ;
"RTN","DDS1",68,0)
 I $G(DA)!'$G(DDSDAORG),$G(@DDSREFT@(DDSPG,DDS1B,DDSDA))<1 D
"RTN","DDS1",69,0)
 . S $P(@DDSREFT@(DDSPG,DDS1B,DDSDA),U)=1
"RTN","DDS1",70,0)
 . I $G(DDS1REP)>1 D REP Q
"RTN","DDS1",71,0)
 . ;
"RTN","DDS1",72,0)
 . S @DDSREFT@(DDSPG,DDS1B,DDSDA,"GL")=DIE
"RTN","DDS1",73,0)
 . D EN^DDS11(DDS1B)
"RTN","DDS1",74,0)
 ;
"RTN","DDS1",75,0)
 I '$G(DDSAGAIN)!'$D(@DDSREFT@(DDSPG,DDS1B)) S $P(@DDSREFT@(DDSPG,DDS1B),U)=$G(DDSDA)
"RTN","DDS1",76,0)
 Q
"RTN","DDS1",77,0)
 ;
"RTN","DDS1",78,0)
REP ;Load data for repeating block
"RTN","DDS1",79,0)
 N DDS1DDP,DDS1IND,DDS1INI,DDS1MUL,DDS1PDA,DDS1REF,DDS1RT,DDS1SEL
"RTN","DDS1",80,0)
 N DDS1SN,DDS1VAL,DDS1FSCR,DDS1SCNT,DDS1STRT,DDS1Q,DDS1ACT
"RTN","DDS1",81,0)
 S DDS1REF=$NA(@DDSREFT@(DDSPG,DDS1B))
"RTN","DDS1",82,0)
 S DDS1DDP=$P(@DDSREFS@(DDSPG,DDS1B),U,3)
"RTN","DDS1",83,0)
 S DDS1IND=$P(DDS1REP,U,2) S:DDS1IND="" DDS1IND="B"
"RTN","DDS1",84,0)
 S DDS1INI=$P(DDS1REP,U,3)
"RTN","DDS1",85,0)
 S DDS1SEL=$P(@DDSREFS@(DDSPG,DDS1B),U,10)
"RTN","DDS1",86,0)
 S DDS1PDA=DDSDA
"RTN","DDS1",87,0)
 ;
"RTN","DDS1",88,0)
 S DDS1MUL=$O(^DD(+DDP,"SB",DDS1DDP,""))
"RTN","DDS1",89,0)
 S:$G(^DD(DDS1DDP,0,"SCR"))]"" DDS1FSCR=^("SCR")
"RTN","DDS1",90,0)
ACT S:$G(^("ACT"))]"" DDS1ACT=^("ACT")
"RTN","DDS1",91,0)
 ;
"RTN","DDS1",92,0)
 S $P(@DDS1REF@(DDS1PDA),U,7,10)=DDP_U_DDS1MUL_U_DDS1SEL_U_DDS1IND
"RTN","DDS1",93,0)
 S @DDS1REF@(DDSDA,"GL")=$S(DDS1MUL:DIE_+DA_","""_$P($P(^DD(DDP,DDS1MUL,0),U,4),";")_""",",1:^DIC(DDS1DDP,0,"GL"))
"RTN","DDS1",94,0)
 ;
"RTN","DDS1",95,0)
 N DIE,DDP
"RTN","DDS1",96,0)
 S DIE=@DDS1REF@(DDSDA,"GL"),DDS1RT=$$CREF^DILF(DIE),DDP=DDS1DDP
"RTN","DDS1",97,0)
 S DDS1SN=0
"RTN","DDS1",98,0)
 ;
"RTN","DDS1",99,0)
 I DDS1MUL D  ;IT'S A MULTIPLE FIELD WITHIN TOP-LEVEL FILE
"RTN","DDS1",100,0)
 . D DDA^DDS5(0,.DA,.DDSDL)
"RTN","DDS1",101,0)
 . S DDSDA=","_DDSDA
"RTN","DDS1",102,0)
 . S:'$D(@DDS1RT@(DDS1IND)) DDS1IND="!IEN"
"RTN","DDS1",103,0)
 . I DDS1IND="!IEN" D
"RTN","DDS1",104,0)
 .. S DA=0 F  S DA=$O(@DDS1RT@(DA)) Q:'DA  D REPLD
"RTN","DDS1",105,0)
 . E  D
"RTN","DDS1",106,0)
 .. S (DDS1Q,DDS1STRT)=$NA(@DDS1RT@(DDS1IND)),DDS1SCNT=$QL(DDS1Q)
"RTN","DDS1",107,0)
 .. F  S DDS1Q=$Q(@DDS1Q) Q:DDS1Q=""  Q:$NA(@DDS1Q,DDS1SCNT)'=DDS1STRT  D
"RTN","DDS1",108,0)
 ... S DA=$QS(DDS1Q,$QL(DDS1Q)) D REPLD
"RTN","DDS1",109,0)
 ;
"RTN","DDS1",110,0)
GFT E  I $G(^DIST(.403,+DDS,40,DDSPG,40,DDS1B,"COMP MUL"))]"" D  S DDSDA=DDS1PDA,DA=+DDSDA,@DDS1REF@("COMP MUL")=$G(^DIST(.403,+DDS,40,DDSPG,40,DDS1B,"COMP MUL PTR")) ;COMPUTED MULTIPLE BUILDS A REPEATING BLOCK
"RTN","DDS1",111,0)
 .N DICMX,D
"RTN","DDS1",112,0)
 .I $G(^("COMP MUL PTR"))="" S DICMX="S DA=$G(D0,$G(D)) N D D NOFILE^DDS1"
"RTN","DDS1",113,0)
 .E  S DICMX="S DA=$G(D0,$G(D)) N D D REPLD^DDS1"
"RTN","DDS1",114,0)
 .X ^("COMP MUL")
"RTN","DDS1",115,0)
 ;
"RTN","DDS1",116,0)
 E  I $G(DA) S DDS1VAL=DA N D0,DA,DDSDA D  ;IT'S A RELATIONAL JUMP  (DA COULD BE UNDEFINED FOR AN UNRELATED FILE!)
"RTN","DDS1",117,0)
 . S DDSDA=","
"RTN","DDS1",118,0)
 . S (DDS1Q,DDS1STRT)=$NA(@DDS1RT@(DDS1IND,DDS1VAL)),DDS1SCNT=$QL(DDS1Q)
"RTN","DDS1",119,0)
 . F  S DDS1Q=$Q(@DDS1Q) Q:DDS1Q=""  Q:$NA(@DDS1Q,DDS1SCNT)'=DDS1STRT  D
"RTN","DDS1",120,0)
 .. S DA=$QS(DDS1Q,$QL(DDS1Q)) D REPLD
"RTN","DDS1",121,0)
 ;
"RTN","DDS1",122,0)
 E  S DIERR=1 Q
"RTN","DDS1",123,0)
 ;Now set INITIAL POSITION
"RTN","DDS1",124,0)
DISV I DDS1INI="u" S DDS1INI="l" I $G(DUZ)]"",$G(DIE)]"" D  I DDS1INI
"RTN","DDS1",125,0)
 .N T
"RTN","DDS1",126,0)
 .S T=$G(^DISV(DUZ,DIE)) Q:'T  S T=$G(@DDS1REF@(DDS1PDA,"B",T_",")) Q:'T  ;Get entry that SPACE-BAR would return
"RTN","DDS1",127,0)
 .S DDS1SN=T,T=T-DDS1REP+1
"RTN","DDS1",128,0)
 .I T>0 S DDS1INI=T_U_(DDS1SN-T+1)_U_DDS1SN Q
"RTN","DDS1",129,0)
 .S DDS1INI=1_U_DDS1SN_U_DDS1SN
"RTN","DDS1",130,0)
 E  I DDS1INI="l"!(DDS1INI="n") D
"RTN","DDS1",131,0)
 . N N,T
"RTN","DDS1",132,0)
 . S N=DDS1INI="n"
"RTN","DDS1",133,0)
F . S DDS1SN=$O(@DDS1REF@(DDS1PDA," "),-1)+N S:'DDS1SN DDS1SN=1 ;Don't want 1^0^0
"RTN","DDS1",134,0)
 . S T=DDS1SN-DDS1REP+2-N
"RTN","DDS1",135,0)
 . S DDS1INI=$S(T<1:1_U_DDS1SN,1:T_U_(DDS1REP-'N))_U_DDS1SN
"RTN","DDS1",136,0)
 E  S DDS1INI="1^1^1"
"RTN","DDS1",137,0)
 ;
"RTN","DDS1",138,0)
 S $P(@DDS1REF@(DDS1PDA),U,2,6)=DDS1PDA_U_DDS1INI_U_+DDS1REP
"RTN","DDS1",139,0)
 ;
"RTN","DDS1",140,0)
 I DDS1MUL D
"RTN","DDS1",141,0)
 . D UDA^DDS5(.DA,.DDSDL)
"RTN","DDS1",142,0)
 . S DDSDA=$P(DDSDA,",",2,999)
"RTN","DDS1",143,0)
 Q
"RTN","DDS1",144,0)
 ;
"RTN","DDS1",145,0)
REPLD ;Load data
"RTN","DDS1",146,0)
 Q:'$D(@DDS1RT@(DA,0))  I $D(DDS1FSCR) N Y S Y=DA X DDS1FSCR Q:'$T
"RTN","DDS1",147,0)
 I $D(DDS1ACT) D
"RTN","DDS1",148,0)
 .N DIC,Y
"RTN","DDS1",149,0)
 .S DIC(0)="E",Y=DA_U_$P(@DDS1RT@(DA,0),U)
"RTN","DDS1",150,0)
 .X DDS1ACT ;HERE IS WHERE ACCESS AUDITING WOULD TAKE PLACE IF IT IS SET UP IN POST-ACTION!
"RTN","DDS1",151,0)
NOFILE S DDS1SN=DDS1SN+1,$P(DDSDA,",")=DA,@("D"_DDSDL)=DA
"RTN","DDS1",152,0)
 S @DDS1REF@(DDS1PDA,DDS1SN)=DDSDA
"RTN","DDS1",153,0)
 S @DDS1REF@(DDS1PDA,"B",DDSDA)=DDS1SN
"RTN","DDS1",154,0)
 D EN^DDS11(DDS1B)
"RTN","DDS1",155,0)
 Q
"RTN","DDS1",156,0)
 ;
"RTN","DDS1",157,0)
D0(DL) ;Given DL, return string D0,D1,...,Dn
"RTN","DDS1",158,0)
 N I,S
"RTN","DDS1",159,0)
 S S="" F I=0:1:DL S S=S_"D"_I_","
"RTN","DDS1",160,0)
 S:S?.E1"," S=$E(S,1,$L(S)-1)
"RTN","DDS1",161,0)
 Q S
"RTN","DDS1",162,0)
 ;
"RTN","DDS1",163,0)
GETD0(DA,DL) ;Given DA array, set D0,D1...
"RTN","DDS1",164,0)
 N I
"RTN","DDS1",165,0)
 S @("D"_DL)=DA
"RTN","DDS1",166,0)
 F I=1:1:DL-1 S @("D"_(DL-I))=DA(I)
"RTN","DDS1",167,0)
 Q
"RTN","DDS41")
0^23^B39822750^B38730782
"RTN","DDS41",1,0)
DDS41 ;SFISC/MKO - VERIFY DATA ;21MAR2017
"RTN","DDS41",2,0)
 ;;22.2;VA FileMan;**5**;Jan 05, 2016;Build 28
"RTN","DDS41",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDS41",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDS41",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDS41",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDS41",7,0)
 ;;GFT;**8,999,1004,1057**
"RTN","DDS41",8,0)
 ;    
"RTN","DDS41",9,0)
 N DDO,DIERR
"RTN","DDS41",10,0)
 N DDS4B,DDS4DA,DDS4DONE,DDS4ERR,DDS4FLD,DDS4OUT,DDS4PG,DDS4PG1,DDS4TP
"RTN","DDS41",11,0)
 N DDSCAP,DDSERROR,DDSFDA,DDSI,DDSKEY,DDSPID,DDSREQ
"RTN","DDS41",12,0)
 ;
"RTN","DDS41",13,0)
 S DDS4OUT=$NA(@DDSREFT@("VALMSG"))
"RTN","DDS41",14,0)
 S DDS4PG=DDSPG
"RTN","DDS41",15,0)
 ;
"RTN","DDS41",16,0)
 K @DDS4OUT,@DDSREFT@("MSG"),@DDSREFT@("KMSG")
"RTN","DDS41",17,0)
 ;
"RTN","DDS41",18,0)
 I $G(DDSPTB)_$G(DDSREP)]"" N DIE,DDP,DDSDA,DA,DDSDL D
"RTN","DDS41",19,0)
 . S DA=+DDSDAORG,DDSDL=DDSDLORG,DDSDA=DA_"," ;GFT
"RTN","DDS41",20,0)
 . F DDSI=1:1:DDSDL S DA(DDSI)=DDSDAORG(DDSI),DDSDA=DDSDA_DA(DDSI)_","
"RTN","DDS41",21,0)
 . S DDP=$P($G(DDSFLORG),U),DIE=U_$P($G(DDSFLORG),U,2) S:DIE=U DIE=""
"RTN","DDS41",22,0)
 ;
"RTN","DDS41",23,0)
 D LDALL
"RTN","DDS41",24,0)
 I $G(DIERR) D  G END
"RTN","DDS41",25,0)
 . N P
"RTN","DDS41",26,0)
 . S P(1)=$P($G(^DIST(.403,+DDS,40,DDSPG,0)),U),P(2)=$P($G(^(1)),U)
"RTN","DDS41",27,0)
 . S:P(2)="" P(2)="unnamed"
"RTN","DDS41",28,0)
 . D BLD^DIALOG(3041,.P),ERR^DDSMSG
"RTN","DDS41",29,0)
 . S DDS4ERR=1
"RTN","DDS41",30,0)
 ;
"RTN","DDS41",31,0)
 D LP
"RTN","DDS41",32,0)
 ;
"RTN","DDS41",33,0)
 ;Validate keys
"RTN","DDS41",34,0)
 S DDSKEY=1
"RTN","DDS41",35,0)
 I $D(DDSFDA) D
"RTN","DDS41",36,0)
 . S DDSKEY=$$KEYVAL^DIE("","DDSFDA",$NA(@DDSREFT@("KMSG")))
"RTN","DDS41",37,0)
 . I 'DDSKEY,$D(DDS4ERR)[0 S DDS4ERR=1 D BLD^DIALOG(3091,"","",DDS4OUT,"S")
"RTN","DDS41",38,0)
 ;
"RTN","DDS41",39,0)
 S DDSPG=DDS4PG
"RTN","DDS41",40,0)
 I '$G(DDS4ERR),$G(^DIST(.403,+DDS,20))'?."^" X ^(20) ;DATA VALIDATION
"RTN","DDS41",41,0)
 I $G(@DDSREFT@("MSG"))>0!$G(DDS4ERR)!'DDSKEY D PRNT
"RTN","DDS41",42,0)
 ;
"RTN","DDS41",43,0)
END S Y='$D(DDSERROR)&'$G(DDS4ERR)&$G(DDSKEY) ;BRX-0903-10662
"RTN","DDS41",44,0)
 K @DDS4OUT,@DDSREFT@("MSG"),@DDSREFT@("KMSG")
"RTN","DDS41",45,0)
 Q
"RTN","DDS41",46,0)
 ;
"RTN","DDS41",47,0)
LDALL ;Load all pages
"RTN","DDS41",48,0)
 S DX=0,DY=IOSL-1 X IOXY
"RTN","DDS41",49,0)
 W "..."_$P(DDGLCLR,DDGLDEL) ;**'PLEASE WAIT'
"RTN","DDS41",50,0)
 S (DDSPG,DDS4PG1)=$O(^DIST(.403,+DDS,40,"B",$S($G(DDSPAGE)]"":DDSPAGE,1:1),""))
"RTN","DDS41",51,0)
 S Y=1
"RTN","DDS41",52,0)
 F  D EN^DDS1(DDSPG,1) Q:$G(DIERR)  S DDSPG=$$NP^DDS5(.Y) Q:DDSPG=DDS4PG1!'Y  ;DDP MAY BE NULL WHEN CALLING ^DDS, SO THIS WILL CRASH @ LD+16^DDS11
"RTN","DDS41",53,0)
 Q
"RTN","DDS41",54,0)
 ;
"RTN","DDS41",55,0)
LP ;Loop through all pages/blocks
"RTN","DDS41",56,0)
 N DDP
"RTN","DDS41",57,0)
 S DX=0,DY=IOSL-1 X IOXY
"RTN","DDS41",58,0)
 W "..."_$P(DDGLCLR,DDGLDEL) ;**'VERIFYING'
"RTN","DDS41",59,0)
 ;
"RTN","DDS41",60,0)
 S DDSPG=0 F  S DDSPG=$O(@DDSREFT@(DDSPG)) Q:'DDSPG  D
"RTN","DDS41",61,0)
 . S DDS4B=0 F  S DDS4B=$O(@DDSREFT@(DDSPG,DDS4B)) Q:'DDS4B  D
"RTN","DDS41",62,0)
 .. Q:$D(DDS4DONE(DDS4B))  Q:$P(@DDSREFS@(DDSPG,DDS4B),U,5)'="e"
"RTN","DDS41",63,0)
 .. S DDSPID=$S($P($G(^DIST(.403,+DDS,40,DDSPG,1)),U)]"":$P(^(1),U),1:"Page "_$P(^(0),U))
"RTN","DDS41",64,0)
 .. S DDS4DONE(DDS4B)="",DDP=$P(^DIST(.404,DDS4B,0),U,2)
"RTN","DDS41",65,0)
 .. S DDO=0 F  S DDO=$O(^DIST(.404,DDS4B,40,DDO)) Q:'DDO  D VF
"RTN","DDS41",66,0)
 Q
"RTN","DDS41",67,0)
 ;
"RTN","DDS41",68,0)
VF ;Check required and key fields
"RTN","DDS41",69,0)
 Q:$D(^DIST(.404,DDS4B,40,DDO,0))[0  S DDS4TP=$P(^(0),U,3)
"RTN","DDS41",70,0)
 Q:DDS4TP=1  Q:DDS4TP=4
"RTN","DDS41",71,0)
 S DDSCAP=$P(^DIST(.404,DDS4B,40,DDO,0),U,2)_$S($P(^(0),U,4)]"":" ("_$P(^(0),U,4)_")",1:"")
"RTN","DDS41",72,0)
 S DDSREQ=$P($G(^DIST(.404,DDS4B,40,DDO,4)),U)
"RTN","DDS41",73,0)
 S DDSKEY=0
"RTN","DDS41",74,0)
 ;
"RTN","DDS41",75,0)
 I DDS4TP=2 N DDP D
"RTN","DDS41",76,0)
 . S DDP=0,DDS4FLD=DDO_","_DDS4B
"RTN","DDS41",77,0)
 . S:DDSCAP="" DDSCAP=$P(^DIST(.404,DDS4B,40,DDO,0),U,5)
"RTN","DDS41",78,0)
 ;
"RTN","DDS41",79,0)
 E  D  Q:DDS4FLD'=+$P(DDS4FLD,"E")
"RTN","DDS41",80,0)
 . S DDS4FLD=$G(^DIST(.404,DDS4B,40,DDO,1))
"RTN","DDS41",81,0)
 . I $G(^DD(DDP,DDS4FLD,0))?."^" S DDS4FLD="" Q
"RTN","DDS41",82,0)
 . S:DDSCAP="" DDSCAP=$$LABEL^DIALOGZ(DDP,DDS4FLD) ;FOR SOME REASON, HE USED TO GRAB TITLE, IF PRESENT!
"RTN","DDS41",83,0)
 . S:DDSREQ="" DDSREQ=$P(^DD(DDP,DDS4FLD,0),U,2)["R"
"RTN","DDS41",84,0)
 . S DDSKEY=$D(^DD("KEY","F",DDP,DDS4FLD))>0
"RTN","DDS41",85,0)
 ;
"RTN","DDS41",86,0)
 S DDS4DA=" "
"RTN","DDS41",87,0)
DAS F  S DDS4DA=$O(@DDSREFT@(DDSPG,DDS4B,DDS4DA)) Q:DDS4DA'[","  D  ;IGNORE "COMP MUL" NODE
"RTN","DDS41",88,0)
 . I $P(@DDSREFT@(DDSPG,DDS4B,DDS4DA),U,6)<2 D VR Q
"RTN","DDS41",89,0)
 . ;
"RTN","DDS41",90,0)
 . N DDS4PDA S DDS4PDA=DDS4DA N DDS4DA
"RTN","DDS41",91,0)
 . S DDS4DA=""
"RTN","DDS41",92,0)
 . F  S DDS4DA=$O(@DDSREFT@(DDSPG,DDS4B,DDS4PDA,"B",DDS4DA)) Q:'DDS4DA  D VR
"RTN","DDS41",93,0)
 Q
"RTN","DDS41",94,0)
 ;
"RTN","DDS41",95,0)
VR ;Check individual records
"RTN","DDS41",96,0)
 I $P($G(@DDSREFT@("F"_DDP,DDS4DA,DDS4FLD,"A")),U)]"" N DDSREQ S DDSREQ=$P(^("A"),U)
"RTN","DDS41",97,0)
 I 'DDSREQ,'DDSKEY Q
"RTN","DDS41",98,0)
 ;
"RTN","DDS41",99,0)
 ;Required WP fields (quit if mult)
"RTN","DDS41",100,0)
 I DDP,$D(@DDSREFT@("F"_DDP,DDS4DA,DDS4FLD,"M")) D:'^("M")  Q
"RTN","DDS41",101,0)
 . N DDS4I,DDS4REF,DDS4VAL
"RTN","DDS41",102,0)
 . I $G(@DDSREFT@("F"_DDP,DDS4DA,DDS4FLD,"F")) S DDS4REF=$NA(^("D"))
"RTN","DDS41",103,0)
 . E  S DDS4REF=$P(@DDSREFT@("F"_DDP,DDS4DA,DDS4FLD,"M"),U,2),DDS4REF=U_$E(DDS4REF,1,$L(DDS4REF)-1)_")"
"RTN","DDS41",104,0)
 . S (DDS4VAL,DDS4I)=0
"RTN","DDS41",105,0)
 . F  S DDS4I=$O(@DDS4REF@(DDS4I)) Q:'DDS4I  I $G(@DDS4REF@(DDS4I,0))'?." " S DDS4VAL=1 Q
"RTN","DDS41",106,0)
 . D:'DDS4VAL LDERR
"RTN","DDS41",107,0)
 ;
"RTN","DDS41",108,0)
 I $G(@DDSREFT@("F"_DDP,DDS4DA,DDS4FLD,"D"))="" D LDERR Q
"RTN","DDS41",109,0)
 ;
"RTN","DDS41",110,0)
 I DDSKEY,$D(@DDSREFT@("F"_DDP,DDS4DA,DDS4FLD,"F")) S DDSFDA(DDP,DDS4DA,DDS4FLD)=$G(^("D"))
"RTN","DDS41",111,0)
 Q
"RTN","DDS41",112,0)
 ;
"RTN","DDS41",113,0)
LDERR ;Call ^DIALOG to load error
"RTN","DDS41",114,0)
 N P,E
"RTN","DDS41",115,0)
 I $D(DDS4ERR)[0 S DDS4ERR=1 D BLD^DIALOG(3091,"","",DDS4OUT,"S") ;'THE DATA COULD NOT BE FILED.'
"RTN","DDS41",116,0)
 S P(1)=DDSPID,P(2)=DDSCAP
"RTN","DDS41",117,0)
 I $L(DDS4DA,",")>2
"RTN","DDS41",118,0)
 E  S E=$O(@DDSREFT@("F"_DDP,"")) I E]"" S E=$O(^(E)) I E]"" ;ARE THERE MORE THAN ONE OF THESE ENTRIES?
"RTN","DDS41",119,0)
 I  S P(3)=$$GET1^DIQ(DDP,DDS4DA,.01,,,"E") I P(3)]"" S P(3)="("_$$EZBLD^DIALOG(8079)_": "_P(3)_")" ;'SUBRECORD'
"RTN","DDS41",120,0)
 D BLD^DIALOG(3092,.P,"",DDS4OUT,"S") ; '|1|, |2| is a required field |3|'
"RTN","DDS41",121,0)
 Q
"RTN","DDS41",122,0)
 ;
"RTN","DDS41",123,0)
PRNT ;Print messages
"RTN","DDS41",124,0)
 N DDSABT
"RTN","DDS41",125,0)
 S (DDSABT,DX,DY)=0 X IOXY
"RTN","DDS41",126,0)
 W $P(DDGLCLR,DDGLDEL,2)
"RTN","DDS41",127,0)
 S $X=0,$Y=0
"RTN","DDS41",128,0)
 ;
"RTN","DDS41",129,0)
 ;Print required field messages
"RTN","DDS41",130,0)
 I $G(DDS4ERR) S DDSI=0 F  S DDSI=$O(@DDS4OUT@(DDSI)) Q:'DDSI  D  Q:DDSABT
"RTN","DDS41",131,0)
 . D:$G(@DDS4OUT@(DDSI))]"" WLIN(^(DDSI))
"RTN","DDS41",132,0)
 ;
"RTN","DDS41",133,0)
 ;Print duplicate key messages
"RTN","DDS41",134,0)
 S DDSI=0 F  S DDSI=$O(@DDSREFT@("KMSG","DIERR",DDSI)) Q:'DDSI  D  Q:DDSABT
"RTN","DDS41",135,0)
 . D WLIN(" "),WLIN(@DDSREFT@("KMSG","DIERR",DDSI,"TEXT",1))
"RTN","DDS41",136,0)
 . Q:@DDSREFT@("KMSG","DIERR",DDSI)'=740
"RTN","DDS41",137,0)
 . ;
"RTN","DDS41",138,0)
 . N DA,FIL,FILE,FLD,FLDS,FNAME,IENS,J,KEY,LEV,RNAME
"RTN","DDS41",139,0)
 . S FILE=@DDSREFT@("KMSG","DIERR",DDSI,"PARAM","FILE"),IENS=$G(^("IENS")),KEY=$G(^("KEY"))
"RTN","DDS41",140,0)
 . D FRNAME^DIKCU1(FILE,IENS,.FNAME,.RNAME,.LEV)
"RTN","DDS41",141,0)
 . ;
"RTN","DDS41",142,0)
 . I LEV D
"RTN","DDS41",143,0)
 .. S FNAME=$J("",7)_"Subfile: "_FNAME D WLIN(.FNAME,16)
"RTN","DDS41",144,0)
 .. S RNAME=$J("",8)_"Record: "_RNAME D WLIN(.RNAME,16)
"RTN","DDS41",145,0)
 . ;
"RTN","DDS41",146,0)
 . S FLDS="",J=0 F  S J=$O(^DD("KEY",KEY,2,J)) Q:'J  D
"RTN","DDS41",147,0)
 .. Q:'$D(^DD("KEY",KEY,2,J,0))  S FLD=$P(^(0),U),FIL=$P(^(0),U,2)
"RTN","DDS41",148,0)
 .. Q:'$D(^DD(FIL,FLD,0))  S FLDS=FLDS_$P(^(0),U)_" (#"_FLD_"), "
"RTN","DDS41",149,0)
 . D:FLDS]"" WLIN("  Key Field(s): "_$E(FLDS,1,$L(FLDS)-2),16)
"RTN","DDS41",150,0)
 ;
"RTN","DDS41",151,0)
 ;Print developer messages
"RTN","DDS41",152,0)
 S DDSI=0 F  S DDSI=$O(@DDSREFT@("MSG",DDSI)) Q:'DDSI  D  Q:DDSABT
"RTN","DDS41",153,0)
 . D:@DDSREFT@("MSG",DDSI)]"" WLIN(^(DDSI))
"RTN","DDS41",154,0)
 ;
"RTN","DDS41",155,0)
 D EOP
"RTN","DDS41",156,0)
 Q
"RTN","DDS41",157,0)
 ;
"RTN","DDS41",158,0)
WLIN(DDSX,DDSINDNT) ;Write a single line, wrap at word boundaries
"RTN","DDS41",159,0)
 N I
"RTN","DDS41",160,0)
 D WRAP^DIKCU2(.DDSX,IOM-1-$G(DDSINDNT),IOM-1)
"RTN","DDS41",161,0)
 S DDSX(0)=DDSX
"RTN","DDS41",162,0)
 F I=0:1 Q:'$D(DDSX(I))  D  Q:DDSABT
"RTN","DDS41",163,0)
 . I $Y+4>IOSL D EOP I 'Y S DDSABT=1 Q
"RTN","DDS41",164,0)
 . W !,$J("",$S(I:$G(DDSINDNT),1:0))_DDSX(I)
"RTN","DDS41",165,0)
 Q
"RTN","DDS41",166,0)
EOP ;Issue EOP prompt
"RTN","DDS41",167,0)
 N X
"RTN","DDS41",168,0)
 S DX=0,DY=IOSL-1 X IOXY
"RTN","DDS41",169,0)
 W $$EZBLD^DIALOG(8053) R X:DTIME ;**
"RTN","DDS41",170,0)
 S Y=X'[U&$T
"RTN","DDS41",171,0)
 I Y S (DX,DY)=0 X IOXY W $P(DDGLCLR,DDGLDEL,2) S $X=0,$Y=0
"RTN","DDS41",172,0)
 Q
"RTN","DDSCOM")
0^21^B21761308^B19472431
"RTN","DDSCOM",1,0)
DDSCOM ;SFISC/MLH - COMMAND UTILS ;18MAR2017
"RTN","DDSCOM",2,0)
 ;;22.2;VA FileMan;**5**;Jan 05, 2016;Build 28
"RTN","DDSCOM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDSCOM",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDSCOM",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDSCOM",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDSCOM",7,0)
 ;;GFT;**999,1003,1004,1007,1045,1055,1057**
"RTN","DDSCOM",8,0)
 ;
"RTN","DDSCOM",9,0)
COM ;Command line prompt
"RTN","DDSCOM",10,0)
 D:$G(@DDSREFT@("HLP"))>0 HLP^DDSMSG()
"RTN","DDSCOM",11,0)
 N DDSCOM,DIR K DTOUT
"RTN","DDSCOM",12,0)
 D SETUP(.DDSCOM,.X,.DIR)
"RTN","DDSCOM",13,0)
 S DIR("?",1)=X
"RTN","DDSCOM",14,0)
 S DIR("A")=$$EZBLD^DIALOG(8000),DIR("?",2)=" ",DIR("?")=$$EZBLD^DIALOG($S($G(DDSMOUSY):8000.101,1:8000.1)) ;'COMMAND' LINE & 'Enter a COMMAND'
"RTN","DDSCOM",15,0)
 S DIR("??")="^D CHLP^DDSCOM"
"RTN","DDSCOM",16,0)
 D:'$G(DDSKM)
"RTN","DDSCOM",17,0)
 .K DDH,DDQ
"RTN","DDSCOM",18,0)
 .F DDH=1:1:IOSL-DDSHBX-6 S DDH(DDH,"T")=" " ;ERASE EVERYTHING IN HELP AREA...
"RTN","DDSCOM",19,0)
 .S DDH=DDH+1,DDH(DDH,"T")=DIR("?",1)
"RTN","DDSCOM",20,0)
 .S DDH=DDH+1,DDH(DDH,"T")=DIR("?",2)
"RTN","DDSCOM",21,0)
 .S DDH=DDH+1,DDH(DDH,"T")=DIR("?")
"RTN","DDSCOM",22,0)
 .D SC^DDSU
"RTN","DDSCOM",23,0)
 S DDM=1 K DDSKM
"RTN","DDSCOM",24,0)
 S DIR0=IOSL-1_U_($L(DIR("A"))+1)_"^30^"_(IOSL-1)_"^0"
"RTN","DDSCOM",25,0)
 D ^DIR K DUOUT,DIROUT,DIRUT
"RTN","DDSCOM",26,0)
TRANS S:X?1A.E (X,Y,Y(0))=$E("ECSNRPQ",$F(DIR("X"),$E($$UP^DILIBF(X)))-1)
"RTN","DDSCOM",27,0)
 M DDSMOUSE(IOSL-5)=DDSCOM ;...DOWN TO 'Exit  Save....'  REMEMBER WHERE THESE SHOW FOR MOUSE
"RTN","DDSCOM",28,0)
 D:X="C"
"RTN","DDSCOM",29,0)
 . S:DDACT="N" Y="c"
"RTN","DDSCOM",30,0)
 . S Y(0)="CLOSE"
"RTN","DDSCOM",31,0)
 . S:DDACT'="N" (X,Y,Y(0))=""
"RTN","DDSCOM",32,0)
 Q
"RTN","DDSCOM",33,0)
 ;
"RTN","DDSCOM",34,0)
BOT ;from DIR0 & DIR02
"RTN","DDSCOM",35,0)
 I DDS?.N1"^MSCXQSCR" Q  ;!!!!!!
"RTN","DDSCOM",36,0)
 N X,XVIS,I,DIR,M,DIREPLIN
"RTN","DDSCOM",37,0)
 S DY=IOSL-1,DX=0,$X=0 X IOXY W $P(DDGLCLR,DDGLDEL) ;Clear the bottom line
"RTN","DDSCOM",38,0)
 S DIREPLIN=$P($$EZBLD^DIALOG(7002),U,$S($G(DIR0("REP")):2,1:1)) ;INSERT/REPLACE
"RTN","DDSCOM",39,0)
 I '$G(DDSMOUSY) D
"RTN","DDSCOM",40,0)
 .I DDO,'$G(DDM) W $$EZBLD^DIALOG(8000) ;**'COMMAND:'
"RTN","DDSCOM",41,0)
 E  I DDO D
"RTN","DDSCOM",42,0)
 .D SETUP(.M,.X,.DIR)
"RTN","DDSCOM",43,0)
 .K DDSMOUSE(DY) M DDSMOUSE(DY)=M S DX=0 W X
"RTN","DDSCOM",44,0)
 S X=$$EZBLD^DIALOG($G(DDSMOUSY)/10+8074),DX=IOM-$L(DIREPLIN)-3-$L(X) I DX>$X D  ;'F1-H FOR HELP' or 'HELP' if we have room
"RTN","DDSCOM",45,0)
 . X IOXY
"RTN","DDSCOM",46,0)
 . W $P(DDGLVID,DDGLDEL,10)_$P(DDGLVID,DDGLDEL,6)_X_$P(DDGLVID,DDGLDEL,10)
"RTN","DDSCOM",47,0)
 .S DDSMOUSE(DY,DX,DX+$L(X)-1)="H^DIR0H"
"RTN","DDSCOM",48,0)
 S DX=IOM-$L(DIREPLIN)-1 X IOXY
"RTN","DDSCOM",49,0)
 W $S('$D(DDGLVAN):$P(DDGLVID,DDGLDEL,6),1:"")_DIREPLIN_$P(DDGLVID,DDGLDEL,10) ;INSERT/REPLACE
"RTN","DDSCOM",50,0)
 S DDSMOUSE(DY,DX,DX+$L(DIREPLIN)-1)="RPM^DIR01" ;Make 'REPLACE' clickable
"RTN","DDSCOM",51,0)
 Q
"RTN","DDSCOM",52,0)
 ;
"RTN","DDSCOM",53,0)
 ;
"RTN","DDSCOM",54,0)
 ;
"RTN","DDSCOM",55,0)
SETUP(DDSM,X,DIR) ;DDSM, DIR, & X are return variables
"RTN","DDSCOM",56,0)
 ;DDSM shows mouse positions
"RTN","DDSCOM",57,0)
 ;DIR is array
"RTN","DDSCOM",58,0)
 ;X is writeable string
"RTN","DDSCOM",59,0)
 K DDSM,DIR("X") N DDSCH,DDSPP,XVIS
"RTN","DDSCOM",60,0)
 F X=1:1:7 S DDSCH(X)=$$EZBLD^DIALOG(X/100+8000),$E(DIR("X"),X)=$C($A(DDSCH(X))),DDSCH(X,0)=$C($A(DDSCH(X))+32)_":"_$$UP^DILIBF(DDSCH(X)) ;Exit, Close, etc
"RTN","DDSCOM",61,0)
 S DDSPP=$$PP^DDS5(.X) I 'X S DDSPP="" ;Previous Page
"RTN","DDSCOM",62,0)
 S X="" ;This will be the string of COMMANDs, with control sequences to highlight
"RTN","DDSCOM",63,0)
 S XVIS="" ;just visible chars
"RTN","DDSCOM",64,0)
 S DIR(0)="SO^"
"RTN","DDSCOM",65,0)
 I DDSSC>1!($P(^DIST(.403,+DDS,40,+$G(DDSPG),0),U,6)&$G(DDSATOP))!($G(DDSSEL)&'$$MULSELPG^DDSRUN(+DDS)) D  ;)POP-UP PAGE.   DO THIS FOR OLD-STYLE (but not new-style) SELECTION PAGE
"RTN","DDSCOM",66,0)
 .D EXSANEXR(2,"CL"),EXSANEXR(5,"RF") ;"Close" & "Refresh" in Command Line
"RTN","DDSCOM",67,0)
 .S DIR("B")=DDSCH(2) ;Prompt 'Close' on pop-up page
"RTN","DDSCOM",68,0)
 E  D  ;NON-POP-UP PAGE
"RTN","DDSCOM",69,0)
 .D EXSANEXR(1,"EX") D:$D(DDSFDO)[0 EXSANEXR(3,"SV") D:DDSNP]"" EXSANEXR(4,"NP^DDS2") D:DDSPP]"" EXSANEXR(6,"PP") D EXSANEXR(5,"RF") D EXSANEXR(7,"QT")
"RTN","DDSCOM",70,0)
 .S DIR("B")=DDSCH(1) ;Prompt 'Exit' on non-pop-up page
"RTN","DDSCOM",71,0)
 S X=$E(X,1,$L(X)-4)
"RTN","DDSCOM",72,0)
 Q
"RTN","DDSCOM",73,0)
EXSANEXR(N,JUMP) S DIR(0)=DIR(0)_DDSCH(N,0)_";",N=DDSCH(N),DDSM=$L(XVIS)
"RTN","DDSCOM",74,0)
 S XVIS=XVIS_N_"    " ;BUILD 'Exit   Save   ...' STRING
"RTN","DDSCOM",75,0)
 I $G(DDSMOUSY) S X=X_$$HIGH^DDSU(N)_"    "
"RTN","DDSCOM",76,0)
 E  S X=XVIS
"RTN","DDSCOM",77,0)
 S DDSM(DDSM,DDSM+$L(N)-1)=JUMP ;Mouse positions for each character of displayed text
"RTN","DDSCOM",78,0)
 Q
"RTN","DDSCOM",79,0)
 ;
"RTN","DDSCOM",80,0)
 ;
"RTN","DDSCOM",81,0)
 ;
"RTN","DDSCOM",82,0)
CHLP ;
"RTN","DDSCOM",83,0)
 K DDH,DDQ
"RTN","DDSCOM",84,0)
 S DDH=0,DDS3CD=$P(DIR(0),U,2)
"RTN","DDSCOM",85,0)
 F DDS3PC=1:1:$L(DDS3CD,";") D
"RTN","DDSCOM",86,0)
 . S DDS3C=$C($A($P($P(DDS3CD,";",DDS3PC),":"))-32)
"RTN","DDSCOM",87,0)
 . I "^E^C^S^N^R^P^Q^"[(U_DDS3C_U) D
"RTN","DDSCOM",88,0)
 .. S DDH=DDH+1
"RTN","DDSCOM",89,0)
 .. S DDH(DDH,"T")=$E($P($T(@("H"_DDS3C)),";",3)_"           ",1,14)_"- "_$$EZBLD^DIALOG($P($T(@("H"_DDS3C)),";",4)) ;THE DIFFERENT COMMAND-LINE RESPONSES
"RTN","DDSCOM",90,0)
 D:DDH>0 SC^DDSU
"RTN","DDSCOM",91,0)
 K DDS3C,DDS3CD,DDS3PC
"RTN","DDSCOM",92,0)
 Q
"RTN","DDSCOM",93,0)
HE ;;Exit;8000.11;**CCO/NI  CHANGED THRU BOTTOM OF ROUTINE
"RTN","DDSCOM",94,0)
HC ;;Close;8000.12
"RTN","DDSCOM",95,0)
HS ;;Save;8000.13
"RTN","DDSCOM",96,0)
HN ;;Next Page;8000.14
"RTN","DDSCOM",97,0)
HR ;;Refresh;8000.15
"RTN","DDSCOM",98,0)
HP ;;Previous Page;8000.16
"RTN","DDSCOM",99,0)
HQ ;;Quit;8000.17
"RTN","DDSMSG")
0^9^B12019021^B12020877
"RTN","DDSMSG",1,0)
DDSMSG ;SFISC/MKO - PRINT MESSAGES ;12APR2016
"RTN","DDSMSG",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DDSMSG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDSMSG",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDSMSG",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDSMSG",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDSMSG",7,0)
 ;;GFT;**75,1055**
"RTN","DDSMSG",8,0)
 ;
"RTN","DDSMSG",9,0)
ERR ;Print "DIERR" messages in help box
"RTN","DDSMSG",10,0)
 N DDSE,DDSL,DDSLMT,DDSN
"RTN","DDSMSG",11,0)
 K DDH,DDQ
"RTN","DDSMSG",12,0)
 S DDSLMT=$G(DDC,15),DDSE=0
"RTN","DDSMSG",13,0)
 ;
"RTN","DDSMSG",14,0)
 W $C(7)
"RTN","DDSMSG",15,0)
 S DDSN=0
"RTN","DDSMSG",16,0)
 F  S DDSN=$O(^TMP("DIERR",$J,DDSN)) Q:'DDSN!DDSE  D
"RTN","DDSMSG",17,0)
 . S DDSL=0
"RTN","DDSMSG",18,0)
 . F  S DDSL=$O(^TMP("DIERR",$J,DDSN,"TEXT",DDSL)) Q:'DDSL!DDSE  D
"RTN","DDSMSG",19,0)
 .. D LD($G(^TMP("DIERR",$J,DDSN,"TEXT",DDSL)),"!")
"RTN","DDSMSG",20,0)
 .. I DDH'<DDSLMT D SC^DDSU S:$D(DTOUT)!($D(DUOUT)) DDSE=1
"RTN","DDSMSG",21,0)
 ;
"RTN","DDSMSG",22,0)
 I $G(DDH) S:$G(DDH(1,"T"))?1.C DDH(1,"T")="" D SC^DDSU
"RTN","DDSMSG",23,0)
 S DDSKM=1
"RTN","DDSMSG",24,0)
 K DIERR,^TMP("DIERR",$J)
"RTN","DDSMSG",25,0)
 Q
"RTN","DDSMSG",26,0)
 ;
"RTN","DDSMSG",27,0)
HLP(DDSG) ;Print messages from @DDSG in help area
"RTN","DDSMSG",28,0)
 N DDSE,DDSL,DDSLMT,DDSNXTF,DDST
"RTN","DDSMSG",29,0)
 S:$G(DDSG)="" DDSG=$NA(@DDSREFT@("HLP"))
"RTN","DDSMSG",30,0)
 ;
"RTN","DDSMSG",31,0)
 K DDH
"RTN","DDSMSG",32,0)
 I $G(DDQ)-1=DDSHBX,'$X K DDQ
"RTN","DDSMSG",33,0)
 D:$G(DDQ)>DDSHBX SETDDH
"RTN","DDSMSG",34,0)
 S DDSLMT=$G(DDC,15),(DDSE,DDSL)=0
"RTN","DDSMSG",35,0)
 ;
"RTN","DDSMSG",36,0)
 F  S DDSL=$O(@DDSG@(DDSL)) Q:'DDSL!DDSE  D
"RTN","DDSMSG",37,0)
 . S DDST=$G(@DDSG@(DDSL))
"RTN","DDSMSG",38,0)
 . I DDST="$$EOP" S DDH=$G(DDH)+1,DDH(DDH,"E")=""
"RTN","DDSMSG",39,0)
 . E  D LD(DDST,$G(@DDSG@(DDSL,"F"),"!"))
"RTN","DDSMSG",40,0)
 . S DDSNXTF=$G(@DDSG@(DDSL+1,"F"),"!")
"RTN","DDSMSG",41,0)
 . I DDH'<DDSLMT,DDSNXTF["!"!(DDSNXTF'["?") D SC^DDSU S:$D(DTOUT)!($D(DUOUT)) DDSE=1
"RTN","DDSMSG",42,0)
 ;
"RTN","DDSMSG",43,0)
 I $G(DDH) S:$G(DDH(1,"T"))?1.C DDH(1,"T")="" D SC^DDSU
"RTN","DDSMSG",44,0)
 K:DDSG=$NA(@DDSREFT@("HLP")) @DDSG
"RTN","DDSMSG",45,0)
 S:'$D(DDSID) DDSKM=1
"RTN","DDSMSG",46,0)
 Q
"RTN","DDSMSG",47,0)
 ;
"RTN","DDSMSG",48,0)
WP(DDSR) ;Print the contents of a wp field @DDSR in help area
"RTN","DDSMSG",49,0)
 N DDSE,DDSL,DDSLMT,DDSNXTF
"RTN","DDSMSG",50,0)
 ;
"RTN","DDSMSG",51,0)
 K DDH
"RTN","DDSMSG",52,0)
 I $G(DDQ)-1=DDSHBX,'$X K DDQ
"RTN","DDSMSG",53,0)
 D:$G(DDQ)>DDSHBX SETDDH
"RTN","DDSMSG",54,0)
 S DDSLMT=$G(DDC,15),(DDSE,DDSL)=0
"RTN","DDSMSG",55,0)
 ;
"RTN","DDSMSG",56,0)
 F  S DDSL=$O(@DDSR@(DDSL)) Q:'DDSL!DDSE  D
"RTN","DDSMSG",57,0)
 . D LD($G(@DDSR@(DDSL,0)),$G(@DDSR@(DDSL,"F"),"!"))
"RTN","DDSMSG",58,0)
 . S DDSNXTF=$G(@DDSR@(DDSL+1,"F"),"!")
"RTN","DDSMSG",59,0)
 . I DDH'<DDSLMT,DDSNXTF["!"!(DDSNXTF'["?") D SC^DDSU S:$D(DTOUT)!($D(DUOUT)) DDSE=1
"RTN","DDSMSG",60,0)
 ;
"RTN","DDSMSG",61,0)
 I $G(DDH) S:$G(DDH(1,"T"))?1.C DDH(1,"T")="" D SC^DDSU
"RTN","DDSMSG",62,0)
 S:'$D(DDSID) DDSKM=1
"RTN","DDSMSG",63,0)
 Q
"RTN","DDSMSG",64,0)
 ;
"RTN","DDSMSG",65,0)
MSG(DDSMSG,DDSFLG,DDSFMT) ;Print local var or array DDSMSG in help area
"RTN","DDSMSG",66,0)
 ;DDSFLG [ 1 : Write bell
"RTN","DDSMSG",67,0)
 ;DDSFMT : Format if one line is sent
"RTN","DDSMSG",68,0)
 N DDSL
"RTN","DDSMSG",69,0)
 K DDH
"RTN","DDSMSG",70,0)
 I $G(DDQ)-1=DDSHBX,'$X K DDQ
"RTN","DDSMSG",71,0)
 D:$G(DDQ)>DDSHBX SETDDH
"RTN","DDSMSG",72,0)
 ;
"RTN","DDSMSG",73,0)
 I $D(DDSMSG)=1 D
"RTN","DDSMSG",74,0)
 . D LD(DDSMSG,$S($G(DDSFMT)]"":DDSFMT,1:"!"))
"RTN","DDSMSG",75,0)
 ;
"RTN","DDSMSG",76,0)
 E  S DDSL=0 F  S DDSL=$O(DDSMSG(DDSL)) Q:'DDSL  D
"RTN","DDSMSG",77,0)
 . D LD($G(DDSMSG(DDSL)),$G(DDSMSG(DDSL,"F"),"!"))
"RTN","DDSMSG",78,0)
 Q:'$G(DDH)
"RTN","DDSMSG",79,0)
 ;
"RTN","DDSMSG",80,0)
 I $G(DDH) D
"RTN","DDSMSG",81,0)
 . S:$G(DDH(1,"T"))?1.C DDH(1,"T")=""
"RTN","DDSMSG",82,0)
 . S:$G(DDSFLG)[1 DDH(1,"T")=$C(7)_$G(DDH(1,"T"))
"RTN","DDSMSG",83,0)
 . D SC^DDSU
"RTN","DDSMSG",84,0)
 S:'$D(DDSID) DDSKM=1
"RTN","DDSMSG",85,0)
 Q
"RTN","DDSMSG",86,0)
 ;
"RTN","DDSMSG",87,0)
SETDDH ;Setup DDH and DDQ for identifiers and executable help
"RTN","DDSMSG",88,0)
 ;that called EN^DDIOL
"RTN","DDSMSG",89,0)
 S:$X>IOM $X=IOM
"RTN","DDSMSG",90,0)
 S DDH=1
"RTN","DDSMSG",91,0)
 S DDH(1,"T")=$TR($J("",$X)," ",$C(0))
"RTN","DDSMSG",92,0)
 S DDQ=$S(DY>(IOSL-1):IOSL-1,1:DY)-1_U_$X
"RTN","DDSMSG",93,0)
 Q
"RTN","DDSMSG",94,0)
 ;
"RTN","DDSMSG",95,0)
LD(S,F) ;Load string S with format F into DDH array
"RTN","DDSMSG",96,0)
 N A,C,J,L
"RTN","DDSMSG",97,0)
 S DDH=+$G(DDH)
"RTN","DDSMSG",98,0)
 F J=1:1:$L(F,"!")-1 S DDH=DDH+1,DDH(DDH,"T")=""
"RTN","DDSMSG",99,0)
 S:'DDH DDH=1
"RTN","DDSMSG",100,0)
 S:F["?" @("C="_+$P(F,"?",2))
"RTN","DDSMSG",101,0)
 S L=$G(DDH(DDH,"T"))
"RTN","DDSMSG",102,0)
 S S=L_$J("",$G(C)-$L(L))_S
"RTN","DDSMSG",103,0)
 ;
"RTN","DDSMSG",104,0)
 D WRAP(S,.A,IOM-1)
"RTN","DDSMSG",105,0)
 S DDH=DDH-1
"RTN","DDSMSG",106,0)
 F A=1:1:A S DDH=$G(DDH)+1,DDH(DDH,"T")=A(A)
"RTN","DDSMSG",107,0)
 Q
"RTN","DDSMSG",108,0)
 ;
"RTN","DDSMSG",109,0)
WRAP(L,A,M) ;Wrap line at word boundaries
"RTN","DDSMSG",110,0)
 ; L    = Line of text
"RTN","DDSMSG",111,0)
 ; M    = Margin width
"RTN","DDSMSG",112,0)
 ;Return:
"RTN","DDSMSG",113,0)
 ; A    = Number of lines
"RTN","DDSMSG",114,0)
 ; A(n) = Array of text
"RTN","DDSMSG",115,0)
 ;
"RTN","DDSMSG",116,0)
 S:'$G(M) M=$S($G(IOM):IOM-5,1:75)
"RTN","DDSMSG",117,0)
 N I,N
"RTN","DDSMSG",118,0)
 S N=0
"RTN","DDSMSG",119,0)
 F I=$L(L," "):-1:1 D  Q:L=""
"RTN","DDSMSG",120,0)
 . I I=1 S N=N+1,A(N)=$E(L,1,M),L=$E(L,M+1,999) Q
"RTN","DDSMSG",121,0)
 . I $L($P(L," ",1,I))'>M D
"RTN","DDSMSG",122,0)
 .. S N=N+1,A(N)=$P(L," ",1,I),L=$P(L," ",I+1,999)
"RTN","DDSMSG",123,0)
 S A=N
"RTN","DDSMSG",124,0)
 Q
"RTN","DDSSTK")
0^10^B3667911^B4128442
"RTN","DDSSTK",1,0)
DDSSTK ;SFISC/MKO - STACK CONTEXT, GO TO A NEW PAGE ;18MAR2017
"RTN","DDSSTK",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DDSSTK",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDSSTK",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDSSTK",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDSSTK",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDSSTK",7,0)
 ;;GFT;**1028,1055,1057**
"RTN","DDSSTK",8,0)
 ;
"RTN","DDSSTK",9,0)
 ;COME HERE FROM DDS5+11^DDS5 AND NF+8^DDS01 (BECAUSE WE'VE ENCOUNTERED 'DDSSTACK')
"RTN","DDSSTK",10,0)
 N DDO
"RTN","DDSSTK",11,0)
 N DDSBK,DDSDN,DDSFLD,DDSNP,DDSOPB,DDSPG,DDSPTB,DDSREP,DDSTP
"RTN","DDSSTK",12,0)
 ;
"RTN","DDSSTK",13,0)
 I DDSSTACK?1"`".E D
"RTN","DDSSTK",14,0)
 . S DDSSTACK=+$E(DDSSTACK,2,999)
"RTN","DDSSTK",15,0)
 E  I DDSSTACK=+$P(DDSSTACK,"E") D
"RTN","DDSSTK",16,0)
 . S DDSSTACK=+$O(^DIST(.403,+DDS,40,"B",DDSSTACK,""))
"RTN","DDSSTK",17,0)
 E  D
"RTN","DDSSTK",18,0)
UP . S DDSSTACK=$O(^DIST(.403,+DDS,40,"C",$$UP^DILIBF(DDSSTACK),"")) ;**
"RTN","DDSSTK",19,0)
 ;
"RTN","DDSSTK",20,0)
 I 'DDSSTACK!($D(^DIST(.403,+DDS,40,+$G(DDSSTACK),0))[0) D  Q  ;QUIT IF WE CAN'T FIGURE OUT WHAT PAGE TO GO TO
"RTN","DDSSTK",21,0)
 . K DDSSTACK,DDSBR
"RTN","DDSSTK",22,0)
 ;
"RTN","DDSSTK",23,0)
 N DDSDAORG,DDSDLORG,DDSFLORG,DDSPG
"RTN","DDSSTK",24,0)
POPUP I '$P(^DIST(.403,+DDS,40,+DDSSTACK,0),U,6) N DDSSC ;(Page array) if NOT going to a POPUP PAGE
"RTN","DDSSTK",25,0)
 S DDSSTK=1,DDSATOP=1 ;INFLUENCES SEL+9^DDS & THEN SETUP+10^DDSCOM
"RTN","DDSSTK",26,0)
 S DDSPG=DDSSTACK
"RTN","DDSSTK",27,0)
 K DDSSTACK,DDSBR
"RTN","DDSSTK",28,0)
 ;
"RTN","DDSSTK",29,0)
 S DDSDLORG=DDSDL,DDSDAORG=DA
"RTN","DDSSTK",30,0)
 F DDSI=1:1:DDSDL S DDSDAORG(DDSI)=DA(DDSI)
"RTN","DDSSTK",31,0)
 K DDSI
"RTN","DDSSTK",32,0)
 ;
"RTN","DDSSTK",33,0)
 S DDSH=1 ;DDSH tells SM+6^DIR0 to refresh the COMMAND LINE
"RTN","DDSSTK",34,0)
 D PROC^DDS ;RECURSION!
"RTN","DDSSTK",35,0)
 Q
"RTN","DICATT3")
0^11^B15945248^B15947104
"RTN","DICATT3",1,0)
DICATT3 ;SFISC/GFT - COMPUTED FIELDS ;12APR2016
"RTN","DICATT3",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DICATT3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATT3",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATT3",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATT3",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATT3",7,0)
 ;;GFT;**76,118,1035,1055**
"RTN","DICATT3",8,0)
 ;
"RTN","DICATT3",9,0)
 K DIRUT,DTOUT D COMP I $P(^DD(A,DA,0),U,2)["C" G N^DICATT
"RTN","DICATT3",10,0)
 S DTOUT=1 G CHECK^DICATT
"RTN","DICATT3",11,0)
 ;
"RTN","DICATT3",12,0)
COMP N DIR,DICOMPX,DISPEC,DICMIN,DIL,DIJ,DIE,DIDEC
"RTN","DICATT3",13,0)
 S DISPEC=$P($G(^DD(A,DA,0)),U,2)
"RTN","DICATT3",14,0)
 S DIR(0)="FU",DIR("A")="'COMPUTED-FIELD' EXPRESSION"
"RTN","DICATT3",15,0)
 I O,$D(^DD(A,DA,9.1)) S DIR("B")=^(9.1)
"RTN","DICATT3",16,0)
 S DIR("?")="^D DICATT3^DIQQ"
"RTN","DICATT3",17,0)
 D ^DIR Q:$D(DIRUT)
"RTN","DICATT3",18,0)
 I $D(DIR("B")),DIR("B")=Y G GETTYPE
"RTN","DICATT3",19,0)
 K DICOMPX S DICOMPX=""
"RTN","DICATT3",20,0)
 S DICMIN=Y,DQI="Y("_A_","_DA_",",DICMX="X DICMX",DICOMP="?I"
"RTN","DICATT3",21,0)
 D ^DICOMP I '$D(X) W $C(7),"  ...??" G 6
"RTN","DICATT3",22,0)
 I DUZ(0)="@" W !,"TRANSLATES TO THE FOLLOWING CODE:",!,X,!
"RTN","DICATT3",23,0)
 I Y["m" W !,"FIELD IS 'MULTIPLE-VALUED'!",!
"RTN","DICATT3",24,0)
 I O,$D(^DD(A,DA,9.01))!(DICOMPX]"") D ACOMP
"RTN","DICATT3",25,0)
 S DISPEC=$E("D",Y["D")_$E("B",Y["B")_"C"_$S(Y'["m":"",1:"m"_$E("w",Y["w"))_$S(Y["p":"p"_$S($P(Y,"p",2):+$P(Y,"p",2),1:""),1:"")_$S(Y'["B":"",1:"J1")
"RTN","DICATT3",26,0)
 S ^DD(A,DA,0)=F_U_DISPEC_"^^ ; ^"_X,^(9)=U,^(9.1)=DICMIN,^(9.01)=DICOMPX
"RTN","DICATT3",27,0)
 S Y=9.2 F  K ^DD(A,DA,Y) S Y=$O(^(Y)) Q:Y\1-9  ;KILL ALL THE 9.2 NODES
"RTN","DICATT3",28,0)
 F Y=9.2:0 Q:'$D(X(Y))  S ^DD(A,DA,Y)=X(Y),Y=$O(X(Y))
"RTN","DICATT3",29,0)
 K X,DICOMPX
"RTN","DICATT3",30,0)
GETTYPE K DIR S DIR(0)="SBA^S:STRING;N:NUMERIC;B:BOOLEAN;D:DATE;m:MULTIPLE;p:POINTER;mp:MULTIPLE POINTER"
"RTN","DICATT3",31,0)
 S DIR("A")="TYPE OF RESULT: "
"RTN","DICATT3",32,0)
 S DIR("B")=$P($E(DIR(0),$F(DIR(0),$$TYPE(DISPEC)_":"),99),";")
"RTN","DICATT3",33,0)
 D ^DIR I $D(DIRUT) G END
"RTN","DICATT3",34,0)
 S DISPEC=$TR(Y,"SN") I Y="B"!(Y="D") D P(Y) G END
"RTN","DICATT3",35,0)
 I Y["p" D POINT G END
"RTN","DICATT3",36,0)
 S DIJ="",DIE=$P($P(O,U,2),"J",2) F J=0:0 S N=$E(DIE) Q:N?.A  S DIE=$E(DIE,2,99),DIJ=DIJ_N
"RTN","DICATT3",37,0)
 S DIDEC=$P(DIJ,",",2),DIL=$S(DIJ:+DIJ,1:8) S:Y'="N" DIDEC=""
"RTN","DICATT3",38,0)
 I DISPEC["m" D P(DISPEC) G END
"RTN","DICATT3",39,0)
 D DEC:Y="N" I '$D(DIRUT) D LEN
"RTN","DICATT3",40,0)
END I O S DI=A D PZ^DIU0 Q
"RTN","DICATT3",41,0)
 D SDIK^DICATT22
"RTN","DICATT3",42,0)
6 Q  ;leave this here
"RTN","DICATT3",43,0)
 ;
"RTN","DICATT3",44,0)
 ;
"RTN","DICATT3",45,0)
DEC N DG,O,M
"RTN","DICATT3",46,0)
FRAC K DIR S DIR("A")="NUMBER OF FRACTIONAL DIGITS TO OUTPUT: "
"RTN","DICATT3",47,0)
 I DIDEC]"" S DIR("B")=DIDEC
"RTN","DICATT3",48,0)
 S DIR("?")="Enter the number of decimal digits that should normally appear in the result."
"RTN","DICATT3",49,0)
 S DIR(0)="NAO^0:14:0" D ^DIR Q:$D(DIRUT)  S DIDEC=Y
"RTN","DICATT3",50,0)
 S DG=" S X=$J(X,0,",M=$P(^DD(A,DA,0),DG),%=M_DG_DIDEC_")"'=^(0)+1
"RTN","DICATT3",51,0)
 W !,"SHOULD VALUE ALWAYS BE INTERNALLY ROUNDED TO ",DIDEC," DECIMAL PLACE",$E("S",DIDEC'=1)
"RTN","DICATT3",52,0)
 D YN^DICN G FRAC:'% Q:%'>0  S ^DD(A,DA,0)=M_$P(DG_DIDEC_")",U,%)
"RTN","DICATT3",53,0)
S S DQI="Y(",O=$D(^(9.02)),X=^(9.1) K DICOMPX,^(9.02) Q:'$D(^(9.01))
"RTN","DICATT3",54,0)
 F Y=1:1 S M=$P(^(9.01),";",Y) Q:M=""  S DICOMPX(1,+M,+$P(M,U,2))="S("""_M_""")",DICOMPX=""
"RTN","DICATT3",55,0)
 Q:Y<2  I X'["/",X'["\" Q:X'["*"  Q:Y<3
"RTN","DICATT3",56,0)
 D ^DICOMP Q:$D(X)-1
"RTN","DICATT3",57,0)
 S %=2-O W !,"WHEN TOTALLING THIS FIELD, SHOULD THE SUM BE COMPUTED FROM",!?7,"THE SUMS OF THE COMPONENT FIELDS" D YN^DICN
"RTN","DICATT3",58,0)
 I %=1 S ^DD(A,DA,9.02)=X_" S Y=X"
"RTN","DICATT3",59,0)
 S:%<1 DIRUT=1
"RTN","DICATT3",60,0)
 Q
"RTN","DICATT3",61,0)
 ;
"RTN","DICATT3",62,0)
LEN K DIR
"RTN","DICATT3",63,0)
 S DIR(0)="NAO^1::0",DIR("A")="LENGTH OF FIELD: ",DIR("B")=DIL
"RTN","DICATT3",64,0)
 S DIR("?")="Maximum number of character expected to be output."
"RTN","DICATT3",65,0)
 D ^DIR Q:$D(DIRUT)
"RTN","DICATT3",66,0)
 D P($P(DISPEC,"J")_"J"_Y_$E(",",DIDEC]"")_DIDEC_DIE) Q
"RTN","DICATT3",67,0)
 ;
"RTN","DICATT3",68,0)
POINT K DIR
"RTN","DICATT3",69,0)
 S DIR(0)="P^1:QEF",DIR("A")="POINT TO WHAT FILE"
"RTN","DICATT3",70,0)
 S DIR("S")="I $$OKFILE^DICOMPX(Y,""W"")"
"RTN","DICATT3",71,0)
 S X=$P($P(^DD(A,DA,0),U,2),"p",2) I 'X S X=$P($P(O,U,2),"p",2)
"RTN","DICATT3",72,0)
 I X,$D(^DIC(+X,0)) S DIR("B")=$P(^(0),U)
"RTN","DICATT3",73,0)
 D ^DIR I '$D(DIRUT) S $P(DISPEC,"p",2)=+Y D P(DISPEC)
"RTN","DICATT3",74,0)
 Q
"RTN","DICATT3",75,0)
 ;
"RTN","DICATT3",76,0)
P(C) S $P(^DD(A,DA,0),U,2)="C"_$TR(C,"C^") Q
"RTN","DICATT3",77,0)
 ;
"RTN","DICATT3",78,0)
ACOMP ;SET/KILL ACOMP NODES   CALLED FROM DICATTDE
"RTN","DICATT3",79,0)
 N X,I I $G(^DD(A,DA,9.01))]"" S X=^(9.01) X ^DD(0,9.01,1,1,2)
"RTN","DICATT3",80,0)
 I DICOMPX]"" S X=DICOMPX X ^DD(0,9.01,1,1,1)
"RTN","DICATT3",81,0)
 Q
"RTN","DICATT3",82,0)
 ;
"RTN","DICATT3",83,0)
TYPE(S) ;
"RTN","DICATT3",84,0)
 Q $S(S["D":"D",S["B":"B",S["mp":"mp",S["m":"m",S["p":"p",S'["J":"S",S[",":"N",1:"S") ;figure out TYPE OF RESULT
"RTN","DICATTUD")
0^14^B30462151^B30897711
"RTN","DICATTUD",1,0)
DICATTUD ;SFISC/MKO - USER DEFINED DATA TYPES ;25OCT2016
"RTN","DICATTUD",2,0)
 ;;22.2;VA FileMan;**2,5**;Jan 05, 2016;Build 28
"RTN","DICATTUD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTUD",4,0)
 ;
"RTN","DICATTUD",5,0)
BEGIN D EN(A,DA,N,O) I $G(DTOUT) K DTOUT G CHECK^DICATT ;Come from DICATT (roll-and-scroll mode)
"RTN","DICATTUD",6,0)
 G ^DICATT1
"RTN","DICATTUD",7,0)
 ;
"RTN","DICATTUD",8,0)
 ;
"RTN","DICATTUD",9,0)
 ;
"RTN","DICATTUD",10,0)
SCREENMN ;Come from DICATTD (ScreenMan mode)
"RTN","DICATTUD",11,0)
 N L,M,C,Z,DIZ,DIALLVAL,DIVAL,DTOUT
"RTN","DICATTUD",12,0)
 D CLRMSG^DDS
"RTN","DICATTUD",13,0)
 D EN(DICATTA,DICATTF,X,DICATT4]"") I $G(DTOUT) QUIT
"RTN","DICATTUD",14,0)
 S DICATT2N=$P(DIZ,U),DICATT3N="" I $$ESTORE^DICATT1(DICATT2N) D UNED^DDSUTL(20.5,"DICATT",1,2) ;don't allow 'MULTIPLE'
"RTN","DICATTUD",15,0)
 S DICATT5N=C,DICATTLN=L
"RTN","DICATTUD",16,0)
 S DICATTMN="" D PUT^DDSVALF(98,"DICATT",1,DICATTMN) ;HERE IS THE HELP-PROMPT, NULLED OUT FOR NOW
"RTN","DICATTUD",17,0)
 QUIT
"RTN","DICATTUD",18,0)
 ;
"RTN","DICATTUD",19,0)
 ;
"RTN","DICATTUD",20,0)
 ;
"RTN","DICATTUD",21,0)
 ;
"RTN","DICATTUD",22,0)
 ;
"RTN","DICATTUD",23,0)
 ;In: N  = data type number
"RTN","DICATTUD",24,0)
 ;    O  = 0 : if new field
"RTN","DICATTUD",25,0)
 ;    A  = file #
"RTN","DICATTUD",26,0)
 ;    DA = field #
"RTN","DICATTUD",27,0)
 ;
"RTN","DICATTUD",28,0)
 ;Out: DICATTPM array (to be merged into ^DD(file#,field#)
"RTN","DICATTUD",29,0)
 ;     e.g., DICATTPM(101,4,0)="4^",  DICATTPM(101,4,31)="DPT("  says that POINTER property is "DPT("
"RTN","DICATTUD",30,0)
 ;     L = Maximum internal length
"RTN","DICATTUD",31,0)
 ;     M = Help text
"RTN","DICATTUD",32,0)
 ;  M(2) = 1 : user changed a default on an old field
"RTN","DICATTUD",33,0)
 ;     C = Old input transform (5-99)
"RTN","DICATTUD",34,0)
 ; DIZ,Z = dataTypeAbbrev_t#, where # is the data type number
"RTN","DICATTUD",35,0)
 ;
"RTN","DICATTUD",36,0)
 ;Variables used:
"RTN","DICATTUD",37,0)
 ; DIVAL = obtained property value
"RTN","DICATTUD",38,0)
 ; DIVALS(abbrev) = array of property values (already obtained)
"RTN","DICATTUD",39,0)
 ; DIVALS("DIDEF") = default property value presented to user
"RTN","DICATTUD",40,0)
 ; DICHANGE = 1 : if user changed a default value (set in PROP)
"RTN","DICATTUD",41,0)
 ;
"RTN","DICATTUD",42,0)
EN(A,DA,N,O) ;
"RTN","DICATTUD",43,0)
 K DICATTPM,M(2),DTOUT
"RTN","DICATTUD",44,0)
 N DIMETH,DIORD,DIPROP,DIVALS,DICHANGE,DDS
"RTN","DICATTUD",45,0)
 M DICATTPM(101)=^DD(A,DA,101),DICATTPM(201)=^DD(A,DA,201) ;GRAB THE EXISTING VALUES OF THE PROPERTIES AND METHODS
"RTN","DICATTUD",46,0)
 ;
"RTN","DICATTUD",47,0)
 ;Loop through properties in Data Type file, by ORDER, and get values
"RTN","DICATTUD",48,0)
 S DIORD=""
"RTN","DICATTUD",49,0)
 F  S DIORD=$O(^DI(.81,N,101,"AC",DIORD)) Q:'DIORD!$D(DUOUT)!$D(DTOUT)  D
"RTN","DICATTUD",50,0)
 .S DIPROP=$O(^DI(.81,N,101,"AC",DIORD,"")) Q:'DIPROP  D PROPMETH("P",N,DIPROP,.DIVALS)
"RTN","DICATTUD",51,0)
 ;If user ^-d or timed out, go back to delete field and reprompt
"RTN","DICATTUD",52,0)
 I $D(DUOUT)!$D(DTOUT) K DUOUT,DICATTPM S DTOUT=1 Q
"RTN","DICATTUD",53,0)
 ;Loop through methods in Data Type file
"RTN","DICATTUD",54,0)
 S DIMETH=0
"RTN","DICATTUD",55,0)
 I DUZ(0)="@" F  S DIMETH=$O(^DI(.81,N,201,DIMETH)) Q:'DIMETH  D:$G(^(DIMETH,31))="" PROPMETH("M",N,DIMETH,.DIVALS)
"RTN","DICATTUD",56,0)
DONE ;
"RTN","DICATTUD",57,0)
 ;Set L and M
"RTN","DICATTUD",58,0)
 K M
"RTN","DICATTUD",59,0)
 S L=$$PROP4TYP^DIETLIBF("INTERNAL LENGTH",N) S:'L L=30 ;$G(DIVALS("MAXL"),30)
"RTN","DICATTUD",60,0)
 ;S:$G(DIVALS("HELP"))]"" M=DIVALS("HELP")
"RTN","DICATTUD",61,0)
 ;I $G(DICHANGE),O S M(2)=1
"RTN","DICATTUD",62,0)
 ;
"RTN","DICATTUD",63,0)
 ;Put input transform in C; don't need to store in ^DD(file#,field#,201)
"RTN","DICATTUD",64,0)
 ;Set Z and DIZ
"RTN","DICATTUD",65,0)
 S C="Q" ;$G(DICAT201(1,1),"Q") K DICAT201(1)
"RTN","DICATTUD",66,0)
 S Z=$$GET1^DIQ(.81,N,"INTERNAL REPRESENTATION") S:Z="" Z="F"
"RTN","DICATTUD",67,0)
 S (DIZ,Z)=Z_"t"_N_U
"RTN","DICATTUD",68,0)
 QUIT
"RTN","DICATTUD",69,0)
 ;
"RTN","DICATTUD",70,0)
 ;
"RTN","DICATTUD",71,0)
 ;
"RTN","DICATTUD",72,0)
PROPMETH(PROPMETH,N,DIPROP,DIVALS) ;For DATA TYPE N, get a PROPERTY (PROPMETH="P") or METHOD
"RTN","DICATTUD",73,0)
 N DIPROMPT,DIVAL,DIEXEC,DIDD,DIGL
"RTN","DICATTUD",74,0)
 K DIVALS("DIDEF")
"RTN","DICATTUD",75,0)
 S DIDD=$S(PROPMETH="M":.87,1:.86),DIGL=$S(PROPMETH="M":201,1:101) ;CHANGED FROM '102'
"RTN","DICATTUD",76,0)
 ;If there's an Executable Default, get value
"RTN","DICATTUD",77,0)
 I $G(^DI(.81,N,DIGL,DIPROP,31.2))'?."^" D
"RTN","DICATTUD",78,0)
 . S DIEXEC=1
"RTN","DICATTUD",79,0)
 . S DIVAL=$G(^DD(A,DA,DIGL,DIPROP,2)) ;DIGL WILL BE 201, NOT 102
"RTN","DICATTUD",80,0)
 . ;I 'O!$G(DICHANGE),^DI(.81,N,101,DIPROP,31.2)["|" S DIVAL=$$PARSE^DIETLIB(^(31.2),.DIVALS)
"RTN","DICATTUD",81,0)
 . S DIVALS("DIDEF")=DIVAL
"RTN","DICATTUD",82,0)
 ;
"RTN","DICATTUD",83,0)
 ;Otherwise, get regular default
"RTN","DICATTUD",84,0)
 E  S (DIVAL,DIVALS("DIDEF"))=$$GETDEF(N,DIPROP,.DIVALS)
"RTN","DICATTUD",85,0)
 ;
"RTN","DICATTUD",86,0)
 ;Should user be prompted for value?
"RTN","DICATTUD",87,0)
 S DIPROMPT=$G(^DI(.81,N,DIGL,DIPROP,31))="" ;PROMPT IF THERE IS NO VALUE
"RTN","DICATTUD",88,0)
 I $G(^DI(.81,N,DIGL,DIPROP,10))'?."^" X $$PARSE^DIETLIB(^(10)) S DIPROMPT=$T
"RTN","DICATTUD",89,0)
 ;
"RTN","DICATTUD",90,0)
 ;If so, prompt for DIVAL
"RTN","DICATTUD",91,0)
 I DIPROMPT D
"RTN","DICATTUD",92,0)
 . ;If there's Get Code, execute it
"RTN","DICATTUD",93,0)
 . I $G(^DI(DIDD,DIPROP,51))'?."^" D
"RTN","DICATTUD",94,0)
 .. D XCODEM^DIETLIB(^DI(DIDD,DIPROP,51),.DIVALS,.DIVAL)
"RTN","DICATTUD",95,0)
 .. S:$D(DIVAL)[0 DUOUT=1
"RTN","DICATTUD",96,0)
 . ;
"RTN","DICATTUD",97,0)
 . ;Otherwise, use ^DIR to get value of property
"RTN","DICATTUD",98,0)
 . E  S DIVAL=$$DIR(DIPROP,.DIVALS)
"RTN","DICATTUD",99,0)
 . Q:$D(DUOUT)!$D(DTOUT)
"RTN","DICATTUD",100,0)
 . S:DIVAL'=DIVALS("DIDEF") DICHANGE=1
"RTN","DICATTUD",101,0)
 ;
"RTN","DICATTUD",102,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","DICATTUD",103,0)
 D SAVE(DIPROP,.DIVAL,.DIVALS,.DIGL,$G(DIEXEC))
"RTN","DICATTUD",104,0)
 Q
"RTN","DICATTUD",105,0)
 ;
"RTN","DICATTUD",106,0)
DIR(DIPROP,DIVALS) ;Do a ^DIR read to get value for property or method
"RTN","DICATTUD",107,0)
 N I,J,X,Y,DIR,DIRUT,DIROUT
"RTN","DICATTUD",108,0)
 ;
"RTN","DICATTUD",109,0)
 ;Get DIR(0) from the PROPERTY or METHOD, (convert |abbr| to values)
"RTN","DICATTUD",110,0)
 S DIR(0)=$$PARSE^DIETLIB($G(^DI(DIDD,DIPROP,42)),.DIVALS)
"RTN","DICATTUD",111,0)
 Q:DIR(0)="" ""
"RTN","DICATTUD",112,0)
A ;Put Prompt into DIR("A")
"RTN","DICATTUD",113,0)
 S I=0
"RTN","DICATTUD",114,0)
 S J=1,DIR("A",1)=$P($G(^DI(DIDD,DIPROP,0)),U)
"RTN","DICATTUD",115,0)
 F  S I=$O(^DI(DIDD,DIPROP,43,I)) Q:'I  D:$D(^(I,0))#2
"RTN","DICATTUD",116,0)
 . S J=J+1
"RTN","DICATTUD",117,0)
 . S DIR("A",J)=^DI(DIDD,DIPROP,43,I,0)
"RTN","DICATTUD",118,0)
 I J S DIR("A")=DIR("A",J) K DIR("A",J)
"RTN","DICATTUD",119,0)
H ;Put Help into DIR("?")
"RTN","DICATTUD",120,0)
 S (I,J)=0
"RTN","DICATTUD",121,0)
 I $G(^DI(DIDD,DIPROP,11))]"" S J=1,DIR("?",1)=^(11)
"RTN","DICATTUD",122,0)
 F  S I=$O(^DI(DIDD,DIPROP,44,I)) Q:'I  D:$D(^(I,0))#2
"RTN","DICATTUD",123,0)
 . S J=J+1
"RTN","DICATTUD",124,0)
 . S DIR("?",J)=^DI(DIDD,DIPROP,44,I,0)
"RTN","DICATTUD",125,0)
 I J S DIR("?")=DIR("?",J) K DIR("?",J)
"RTN","DICATTUD",126,0)
B ;Put default into DIR("B")
"RTN","DICATTUD",127,0)
 S I=$G(DICATTPM(DIGL,DIPROP,31)) ;get the current VALUE
"RTN","DICATTUD",128,0)
 I I="" S I=$G(DIVALS("DIDEF")) ;or get the DEFAULT from node 33 of the PROPERTY for this DATA TYPE
"RTN","DICATTUD",129,0)
 I I]"" D  S DIR("B")=I
"RTN","DICATTUD",130,0)
 .I DIGL=101 D
"RTN","DICATTUD",131,0)
 ..N T S T=+$G(^DI(.86,DIPROP,41)) ;get the TYPE
"RTN","DICATTUD",132,0)
 ..I T=1 S I=$$DATE^DIUTL(I)
"RTN","DICATTUD",133,0)
 ..I T=3 S I=$P($P($P(DIR(0),U,2),I_":",2),";")
"RTN","DICATTUD",134,0)
 ;S:$G(DIVALS("DIDEF"))]"" DIR("B")=DIVALS("DIDEF")
"RTN","DICATTUD",135,0)
 S:$G(^DI(DIDD,DIPROP,45))]"" DIR("S")=^(45)
"RTN","DICATTUD",136,0)
 S:$G(^DI(DIDD,DIPROP,46))]"" DIR("T")=^(46)
"RTN","DICATTUD",137,0)
 D ^DIR
"RTN","DICATTUD",138,0)
 Q Y
"RTN","DICATTUD",139,0)
 ;
"RTN","DICATTUD",140,0)
 ;
"RTN","DICATTUD",141,0)
SAVE(DIPROP,DIVAL,DIVALS,DICAT101,DIEXEC) ;Save the value of the property
"RTN","DICATTUD",142,0)
 ; in DIVALS(abbr) and DICAT101
"RTN","DICATTUD",143,0)
 ;DIVAL is the value of the property
"RTN","DICATTUD",144,0)
 ;DIEXEC = 1 : if value is an executable
"RTN","DICATTUD",145,0)
 ;
"RTN","DICATTUD",146,0)
 ;Returns:
"RTN","DICATTUD",147,0)
 ;  DIVALS(abbr)= array property values
"RTN","DICATTUD",148,0)
 ;  DICATTPM(DIGL,prop#,0)=prop#^abbrev
"RTN","DICATTUD",149,0)
 ;  DICATTPM(DIGL,prop#,31)=value
"RTN","DICATTUD",150,0)
 ;   or         2)=executable value
"RTN","DICATTUD",151,0)
 ;  DICATTPM(DIGL,prop#,3,n,0) = descendent node n of DIVAL
"RTN","DICATTUD",152,0)
 ;
"RTN","DICATTUD",153,0)
 N DIABBR
"RTN","DICATTUD",154,0)
 ;
"RTN","DICATTUD",155,0)
 ;Set the DIVALS array
"RTN","DICATTUD",156,0)
 S DIABBR=$P(^DI(DIDD,DIPROP,0),U,2)
"RTN","DICATTUD",157,0)
 S:DIABBR]"" DIVALS(DIABBR)=DIVAL
"RTN","DICATTUD",158,0)
 ;
"RTN","DICATTUD",159,0)
 ;Set the DICATTPM array
"RTN","DICATTUD",160,0)
 I DIVAL]"" D
"RTN","DICATTUD",161,0)
 .N I,Z S Z=0 F I=1:1 S Z=$O(DICATTPM(DIGL,Z)) Q:'Z
"RTN","DICATTUD",162,0)
 .S DICATTPM(DIGL,0)="^."_DIGL_"01P^"_DIPROP_"^"_I ;remember that DIGL=101 or 201
"RTN","DICATTUD",163,0)
 . S DICATTPM(DIGL,DIPROP,0)=DIPROP_U_DIABBR
"RTN","DICATTUD",164,0)
 . S DICATTPM(DIGL,DIPROP,31+$G(DIEXEC))=DIVAL
"RTN","DICATTUD",165,0)
 . I $D(DIVAL)>9 S I="" F  S I=$O(DIVAL(I)) Q:I=""  D
"RTN","DICATTUD",166,0)
 .. I $D(DIVAL(I))#2 S DICATTPM(DIGL,DIPROP,3,I,0)=DIVAL(I)
"RTN","DICATTUD",167,0)
 .. E  I $D(DIVAL(I,0))#2 S DICATTPM(DIGL,DIPROP,3,I,0)=DIVAL(I,0)
"RTN","DICATTUD",168,0)
 .. E  Q
"RTN","DICATTUD",169,0)
 ;
"RTN","DICATTUD",170,0)
 ;Execute the post action
"RTN","DICATTUD",171,0)
 ;X:$G(^DI(.81,N,101,DIPROP,61))'?."^" $$PARSE^DIETLIB(^(61))
"RTN","DICATTUD",172,0)
 Q
"RTN","DICATTUD",173,0)
 ;
"RTN","DICATTUD",174,0)
 ;
"RTN","DICATTUD",175,0)
GETDEF(N,DIPROP,DIVALS) ;Get defaults for a property.
"RTN","DICATTUD",176,0)
 ;May come from the ^DD or the data type file.
"RTN","DICATTUD",177,0)
 N DIDEF
"RTN","DICATTUD",178,0)
 ;
"RTN","DICATTUD",179,0)
 ;Get value from ^DD
"RTN","DICATTUD",180,0)
 S DIDEF=$S(DIPROP=3:$G(^DD(A,DA,3)),1:$G(^DD(A,DA,101,DIPROP,31)))
"RTN","DICATTUD",181,0)
 ;
"RTN","DICATTUD",182,0)
 ;For existing fields, return default from ^DD(file#,field#)
"RTN","DICATTUD",183,0)
 ;if the user hasn't changed any property values
"RTN","DICATTUD",184,0)
 I O,'$G(DICHANGE) Q DIDEF
"RTN","DICATTUD",185,0)
 ;
"RTN","DICATTUD",186,0)
 ;Otherwise, look at default from Data Type file.
"RTN","DICATTUD",187,0)
 ;For existing fields where default contains no |abbr|,
"RTN","DICATTUD",188,0)
 ;return value from DD.
"RTN","DICATTUD",189,0)
 ;
"RTN","DICATTUD",190,0)
 ;Default
"RTN","DICATTUD",191,0)
 S DIDEF=$G(^DI(.81,N,101,DIPROP,33))
"RTN","DICATTUD",192,0)
 ;Q:$G(^DI(.81,N,101,DIPROP,31))]"" $S(^(31)'["|"&O:DIDEF,1:$$PARSE^DIETLIB(^(31),.DIVALS))
"RTN","DICATTUD",193,0)
 ;
"RTN","DICATTUD",194,0)
 ;Build Default
"RTN","DICATTUD",195,0)
 ;Q:$G(^DI(.81,N,101,DIPROP,31.1))]"" $S(^(31.1)'["|"&O:DIDEF,1:$$XCODE^DIETLIB(^(31.1),.DIVALS)) ;NOT THERE ANY MORE
"RTN","DICATTUD",196,0)
 ;
"RTN","DICATTUD",197,0)
 Q DIDEF
"RTN","DICN")
0^19^B21489439^B20243838
"RTN","DICN",1,0)
DICN ;SFISC/GFT,XAK,TKW,SEA/TOAD - ADD NEW ENTRY ;9MAR2017
"RTN","DICN",2,0)
 ;;22.2;VA FileMan;**2,5**;Jan 05, 2016;Build 28
"RTN","DICN",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICN",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICN",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICN",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICN",7,0)
 ;;GFT;**4,31,169,999,1022,1044**
"RTN","DICN",8,0)
 ;
"RTN","DICN",9,0)
 ;COME HERE FROM L^DICM
"RTN","DICN",10,0)
 N DIENTRY,DIFILE,DIAC D:'$D(DO(2)) GETFA^DIC1(.DIC,.DO) S DO(1)=1
"RTN","DICN",11,0)
 I '$D(DINDEX) N DINDEX S DINDEX("#")=1,DINDEX("START")="B"
"RTN","DICN",12,0)
 N DISUBVAL,V
"RTN","DICN",13,0)
 I DINDEX("#")>1 M V=X N X D  I X="",DIC(0)'["E"!('$D(DISUBVAL)) D BAD^DIC1 Q
"RTN","DICN",14,0)
 . D VALIX(+DO(2),.DINDEX,.V,.DISUBVAL,.X,.DS) K V Q
"RTN","DICN",15,0)
 I $S($D(DLAYGO):DO(2)\1-(DLAYGO\1),1:1) S %=1 D B1 I '% D BAD^DIC1 Q
"RTN","DICN",16,0)
USR D DS S DIX=X
"RTN","DICN",17,0)
 I X'?16.N,X?.NP,X,DIC(0)["E",'$G(DICR),DS'["DINUM",$P(DS,U,2)'["N",DIC(0)["N"!$D(^DD(+DO(2),.001,0)) D N^DICN1 I $D(X) S DIENTRY=X G I
"RTN","DICN",18,0)
 S X=DIX D:DINDEX("#")'>1 VAL G I:$D(X)
"RTN","DICN",19,0)
 S X=DIX
"RTN","DICN",20,0)
B D BAD^DIC1 S Y=-1 Q
"RTN","DICN",21,0)
 ;
"RTN","DICN",22,0)
B1 Q:'DO(2)  Q:$D(^DD(+DO(2),0,"UP"))!(DO(2)=".12P")
"RTN","DICN",23,0)
 S DIFILE=+DO(2),DIAC="LAYGO" D ^DIAC K DIAC,DIFILE
"RTN","DICN",24,0)
 Q
"RTN","DICN",25,0)
 ;
"RTN","DICN",26,0)
1 I '$D(DIC("S")) D  ;CALLED FROM I+2. 'ARE YOU ADDING'? THRU NEXT 4 LINES
"RTN","DICN",27,0)
 .N M
"RTN","DICN",28,0)
 .S M=$$EZBLD^DIALOG(8058,$$OUT^DIALOGU(Y,"ORD")) ;" (the 14th" or whatever
"RTN","DICN",29,0)
 .S:$D(^DD(+DO(2),0,"UP")) M=M_$$EZBLD^DIALOG(8059,$$FILENAME^DIALOGZ(^("UP"))) S M=M_")"
"RTN","DICN",30,0)
 .I $L(M)+$L(DST)'>$S($G(IOM):IOM,1:80) S DST=DST_M
"RTN","DICN",31,0)
Y I $D(DDS) S A1="Q",DST=%_U_DST D H^DDSU Q
"RTN","DICN",32,0)
 W !,DST K DST
"RTN","DICN",33,0)
YN ;
"RTN","DICN",34,0)
 N %1 S %1=$$EZBLD^DIALOG(7001) S:'$D(%) %=0 W "? " W:(%>0) $P(%1,U,%),"// "
"RTN","DICN",35,0)
RX R %Y:$S($D(DTIME):DTIME,1:300) E  S DTOUT=1,%Y=U W $C(7)
"RTN","DICN",36,0)
 I %Y]""!'% S %=+$$PRS^DIALOGU(7001,%Y) S:(%<0&($A(%Y)'=94)) %=0
"RTN","DICN",37,0)
 I '%,%Y'?."?" W $C(7),"??",!?4,$$EZBLD^DIALOG(8040),": " G RX
"RTN","DICN",38,0)
 W:$X>73 ! W:% $S(%>0:"  ("_$P(%1,U,%)_")",1:"") Q
"RTN","DICN",39,0)
 ;
"RTN","DICN",40,0)
DS S DS=^DD(+DO(2),.01,0) Q
"RTN","DICN",41,0)
 ;
"RTN","DICN",42,0)
VAL I X'?.ANP K X Q
"RTN","DICN",43,0)
 I X[""""!(X["^") K X Q
"RTN","DICN",44,0)
 I $P(DS,U,2)'["N",$A(X)=45 K X Q
"RTN","DICN",45,0)
 I $P(DS,U,2)["*" S:DS["DINUM" DINUM=X Q
"RTN","DICN",46,0)
 I $P($P(DS,U,2),"t",2) S %=$$VALEXTS^DIETLIBF(+DO(2),.01) D  ;FOR VERSION 23
"RTN","DICN",47,0)
 .N DS,%T,%DT,C,DIG,DIH,DIU,DIV,DICR ;PRESERVE VARIABLES WHILE WE XECUTE INPUT TRANSFORM ON THE .01 FIELD
"RTN","DICN",48,0)
 .X %
"RTN","DICN",49,0)
 E  S %=$F(DS,"%DT=""E"),DS=$E(DS,1,%-2)_$E(DS,%,999) N DICTST S DICTST=DS["+X=X"&(X?16.N) K:DICTST X X:'DICTST $P(DS,U,5,99)
"RTN","DICN",50,0)
UNIQ I $P(DS,U,2)["U",$D(X),$D(@(DIC_"""B"",X)")) K X
"RTN","DICN",51,0)
 Q
"RTN","DICN",52,0)
 ;
"RTN","DICN",53,0)
I1 S DST=$C(7)_$$EZBLD^DIALOG(8060)
"RTN","DICN",54,0)
 I '$D(DIENTRY),Y]"" S DST=DST_$$EZBLD^DIALOG(8061,Y)
"RTN","DICN",55,0)
 S %=$$FILENAME^DIALOGZ(+DO(2)) I $L(DST)+$L(%)'>55 S DST=DST_$$EZBLD^DIALOG(8062,%) Q  ;**CCO/NI FILE NAME
"RTN","DICN",56,0)
 W:'$D(DDS) !,DST K A1 D:$D(DDS) H^DIC2 S DST="    "_$$EZBLD^DIALOG(8062,%) Q
"RTN","DICN",57,0)
 ;
"RTN","DICN",58,0)
I ;COME HERE FROM USR+2, ABOVE
"RTN","DICN",59,0)
 I DIC(0)["E",DO(2)'["A",DIC(0)'["W" K DTOUT,DUOUT D  G OUT^DICN0:$G(DTOUT)!($G(DUOUT)) I %'=1 S Y=-1 D BAD^DIC1 Q
"RTN","DICN",60,0)
 . S (Y,DIX)=X I Y]"" N C S C=$P(^DD(+DO(2),.01,0),U,2) D Y^DIQ ;TRANSFORM INTERNAL TO EXTERNAL IN ORDER TO DISPLAY IT
"RTN","DICN",61,0)
 . D I1 S %=2,Y=$P(DO,U,4)+1,X=DIX D 1
"RTN","DICN",62,0)
I2 . Q:%>0!($G(DTOUT))  I %=-1 S DUOUT=1 Q
"RTN","DICN",63,0)
 . W:'$D(DDS) $C(7)_"??",!?4,$$EZBLD^DIALOG(8040) D YN G I2
"RTN","DICN",64,0)
 G NEW:'$D(DIENTRY)
"RTN","DICN",65,0)
R D DS S DST="   "_$P(DS,U,1)_": "
"RTN","DICN",66,0)
 I '$D(DDS) W !,DST K DST R X:DTIME S:$E(X)=U DUOUT=1,Y=-1 S:'$T X=U,DTOUT=1,Y=-1
"RTN","DICN",67,0)
 I $D(DDS) S A1="Q",DST="3^"_DST D H^DDSU S X=% I $D(DTOUT) S X=U,Y=-1
"RTN","DICN",68,0)
 I X[U D BAD^DIC1 Q
"RTN","DICN",69,0)
 I X="" G R
"RTN","DICN",70,0)
 D VAL
"RTN","DICN",71,0)
HELP I '$D(X) D  G R ;INPUT NOT VALID.  SHOW HELP MESSAGE FOR .01 FIELD, WHEN TELLING USER HOW TO LAYGO A NEW ONE
"RTN","DICN",72,0)
 .W $C(7) W:'$D(DDS) "??" S DST=$$HELP^DIALOGZ(+DO(2),.01) Q:DST=""
"RTN","DICN",73,0)
 .S DST="    "_DST W:'$D(DDS) !,DST D:$D(DDS) H^DDSU
"RTN","DICN",74,0)
 ;
"RTN","DICN",75,0)
NEW ; try to add a new record to the file
"RTN","DICN",76,0)
 G NEW^DICN0
"RTN","DICN",77,0)
 ;
"RTN","DICN",78,0)
FILE ; DOCUMENTED ENTRY POINT: add a new record to a file
"RTN","DICN",79,0)
 ;
"RTN","DICN",80,0)
 N DIENTRY,DS,DIAC,DIFILE D NEW^DICN0,Q^DIC2 Q
"RTN","DICN",81,0)
 ;
"RTN","DICN",82,0)
FIRE ; fire the SET logic of a bulletin or trigger xref (in DZ)
"RTN","DICN",83,0)
 ; STORLIST^%RCR (called by NEW^DICN0)
"RTN","DICN",84,0)
 ;
"RTN","DICN",85,0)
 X DZ
"RTN","DICN",86,0)
 Q
"RTN","DICN",87,0)
 ;
"RTN","DICN",88,0)
VALIX(DIFILEI,DINDEX,V,DISUBVAL,X,DS) ;
"RTN","DICN",89,0)
 ; Save lookup values in array by field no. so we can update the fields on the new record.
"RTN","DICN",90,0)
 N VI,DISUB,DIERR,DIFILE,DIFIELD,DO,DIOK
"RTN","DICN",91,0)
 S X="" I $G(V)]"",$G(V(1))="" S V(1)=V
"RTN","DICN",92,0)
 F DISUB=1:1:DINDEX("#") I $G(V(DISUB))]"" D
"RTN","DICN",93,0)
 . S DIFILE=$G(DINDEX(DISUB,"FILE")),DIFIELD=$G(DINDEX(DISUB,"FIELD"))
"RTN","DICN",94,0)
 . S DIOK=0 I 'DIFILE!('DIFIELD) Q
"RTN","DICN",95,0)
 . S V=V(DISUB)
"RTN","DICN",96,0)
 . I DISUB=1 D  I DIOK S:DIOK'=2 DISUBVAL(DIFILE,DIFIELD)=V Q
"RTN","DICN",97,0)
 . . I $A(V)=34,V?.E1"""" S V=$E(V,2,($L(V))-1)
"RTN","DICN",98,0)
 . . I $G(DS("INT"))="",'$G(DICRS) S:"VP"[$G(DINDEX(1,"TYPE")) DIOK=2 Q
"RTN","DICN",99,0)
 . . S DIOK=1
"RTN","DICN",100,0)
 . . I DIFILE=DIFILEI,DIFIELD=.01 S X=$S($G(DICRS):V,1:DS("INT")) Q
"RTN","DICN",101,0)
 . . S DISUBVAL(DIFILE,DIFIELD,"INT")=$S($G(DICRS):V,1:DS("INT"))
"RTN","DICN",102,0)
 . . Q
"RTN","DICN",103,0)
 . S DISUBVAL(DIFILE,DIFIELD)=V
"RTN","DICN",104,0)
 . D CHK^DIE(DIFILE,DIFIELD,"",V,.VI,"DIERR") Q:VI="^"
"RTN","DICN",105,0)
 . I DIFILE=DIFILEI,DIFIELD=.01 S X=VI K DISUBVAL(DIFILE,.01) Q
"RTN","DICN",106,0)
 . S DISUBVAL(DIFILE,DIFIELD,"INT")=VI
"RTN","DICN",107,0)
 . Q
"RTN","DICN",108,0)
 Q
"RTN","DICN",109,0)
 ;
"RTN","DICN",110,0)
 ;#7001   Yes/No question
"RTN","DICN",111,0)
 ;#8040   Answer with 'Yes' or 'No'
"RTN","DICN",112,0)
 ;#8058   (the |entry number|
"RTN","DICN",113,0)
 ;#8059   for this |filename|
"RTN","DICN",114,0)
 ;#8060   Are you adding
"RTN","DICN",115,0)
 ;#8061   '|.01 field value|' as
"RTN","DICN",116,0)
 ;#8062   a new |filename|
"RTN","DICU2")
0^13^B34359418^B34361274
"RTN","DICU2",1,0)
DICU2 ;SEA/TOAD,SF/TKW - VA FileMan: Lookup Tools, Return IDs ;5OCT2016
"RTN","DICU2",2,0)
 ;;22.2;VA FileMan;**4,5**;Jan 05, 2016;Build 28
"RTN","DICU2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICU2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICU2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICU2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICU2",7,0)
 ;;GFT;**126,165,1032,1041,GFT,1042,1045**
"RTN","DICU2",8,0)
 ;
"RTN","DICU2",9,0)
IDS(DIFILE,DIEN,DIFLAGS,DINDEX,DICOUNT,DIDENT,DILIST,DI0NODE) ;
"RTN","DICU2",10,0)
 ;
"RTN","DICU2",11,0)
 ; ENTRY POINT--add an entry's identifiers to output
"RTN","DICU2",12,0)
 ;
"RTN","DICU2",13,0)
I1 ; setup 0-node and ID array interface, and output IEN
"RTN","DICU2",14,0)
 ;
"RTN","DICU2",15,0)
 I DIFLAGS["h" N F,N,I M F=DIFILE S N=$G(DI0NODE),I=+$G(DIEN) N DIFILE,DI0NODE,DIEN M DIFILE=F S DIEN=I S:N]"" DI0NODE=N K F,N,I
"RTN","DICU2",16,0)
 I '$D(DI0NODE) S DI0NODE=$G(@DIFILE(DIFILE)@(+DIEN,0))
"RTN","DICU2",17,0)
 N DID,DIDVAL
"RTN","DICU2",18,0)
 I DIFLAGS["P" N DINODE S DINODE=+DIEN
"RTN","DICU2",19,0)
 E  S @DILIST@(2,DICOUNT)=+DIEN
"RTN","DICU2",20,0)
 ;
"RTN","DICU2",21,0)
I1A ; output primary value (index for Lister, .01 for Finder)
"RTN","DICU2",22,0)
 ;
"RTN","DICU2",23,0)
 I DIFLAGS'["P",$D(DIDENT(-2)) D
"RTN","DICU2",24,0)
 . N DIOUT S DIOUT=$NA(@DILIST@(1,DICOUNT))
"RTN","DICU2",25,0)
 . I DIFLAGS[3 N DISUB D  Q
"RTN","DICU2",26,0)
 . . F DISUB=0:0 S DISUB=$O(DIDENT(0,-2,DISUB)) Q:'DISUB  D
"RTN","DICU2",27,0)
 . . . I DINDEX("#")'>1 D SET(0,-2,DISUB,DIOUT,.DINDEX,.DIFILE) Q
"RTN","DICU2",28,0)
 . . . N I S I=$NA(@DIOUT@(DISUB)) D SET(0,-2,DISUB,I,.DINDEX,.DIFILE)
"RTN","DICU2",29,0)
 . I $D(DIDENT(0,-2,.01)) D SET(0,-2,.01,DIOUT,"",.DIFILE)
"RTN","DICU2",30,0)
 . Q
"RTN","DICU2",31,0)
 ;
"RTN","DICU2",32,0)
I2 ; start loop: loop through output values
"RTN","DICU2",33,0)
 ;
"RTN","DICU2",34,0)
 I DIFLAGS["P" N DILENGTH S DILENGTH=$L(DINODE)
"RTN","DICU2",35,0)
 N DICODE,DICRSR,DIOUT,DISUB S DICRSR=-1
"RTN","DICU2",36,0)
 F  S DICRSR=$O(DIDENT(DICRSR)) Q:DICRSR=""!($G(DIERR))  S DID="" F  S DID=$O(DIDENT(DICRSR,DID)) Q:DID=""!($G(DIERR))  S DISUB="" F  D  Q:DISUB=""!$G(DIERR)
"RTN","DICU2",37,0)
 . I DIFLAGS'["P",DID=-2 Q
"RTN","DICU2",38,0)
 . S DISUB=$O(DIDENT(DICRSR,DID,DISUB)) Q:DISUB=""
"RTN","DICU2",39,0)
 . K DIDVAL
"RTN","DICU2",40,0)
I20 . ; output indexed field if "IX" was in FIELDS parameter
"RTN","DICU2",41,0)
 . I DID=0 D  Q
"RTN","DICU2",42,0)
 . . D SET(DICRSR,DID,DISUB,"DIDVAL",.DINDEX,.DIFILE)
"RTN","DICU2",43,0)
 . . I DIFLAGS["P" D ADD(.DIFLAGS,.DINODE,.DILENGTH,DIDVAL,DIEN,DILIST) Q
"RTN","DICU2",44,0)
 . . M @DILIST@("ID",DICOUNT,0,DISUB)=DIDVAL Q
"RTN","DICU2",45,0)
 .
"RTN","DICU2",46,0)
I3 . ; output field
"RTN","DICU2",47,0)
 . ; distinguish between computed and value fields
"RTN","DICU2",48,0)
 .
"RTN","DICU2",49,0)
 . I DID D  Q:$G(DIERR)
"RTN","DICU2",50,0)
 . . ; process fields that are not computed.
"RTN","DICU2",51,0)
 . . I DIFLAGS["E" N DIERR ;ERROR IN DATA WILL NOT STOP THE LISTING  --GFT
"RTN","DICU2",52,0)
 . . I $G(DIDENT(DICRSR,DID,0,"TYPE"))'="C" D
"RTN","DICU2",53,0)
 . . . D SET(DICRSR,DID,DISUB,"DIDVAL",.DINDEX,.DIFILE) Q
"RTN","DICU2",54,0)
 . .
"RTN","DICU2",55,0)
I4 . . ; computed fields
"RTN","DICU2",56,0)
 . . E  D
"RTN","DICU2",57,0)
 . . . N %,%H,%T,A,B,C,D,DFN,I,X,X1,X2,Y,Z,Z0,Z1
"RTN","DICU2",58,0)
 . . . N DA D DA^DILF(DIEN,.DA) ;M DA=DIEN S DA=$P(DIEN,",")  PATCH 165 MAY,2011
"RTN","DICU2",59,0)
 . . . N DIARG S DIARG="D0"
"RTN","DICU2",60,0)
 . . . N DIMAX S DIMAX=+$O(DA(""),-1)
"RTN","DICU2",61,0)
 . . . N DIDVAR F DIDVAR=1:1:DIMAX S DIARG=DIARG_",D"_DIDVAR
"RTN","DICU2",62,0)
 . . . N @DIARG F DIDVAR=0:1:DIMAX-1 S @("D"_DIDVAR)=DA(DIMAX-DIDVAR)
"RTN","DICU2",63,0)
 . . . S @("D"_DIMAX)=DA
"RTN","DICU2",64,0)
 . . . X DIDENT(DICRSR,DID,0) S DIDVAL=$G(X)
"RTN","DICU2",65,0)
COMPDT . . .I $P($G(^DD(DIFILE,DID,0)),U,2)["D",$O(DIDENT(-3,DID,""))'["I" N Y S Y=DIDVAL X:Y ^DD("DD") S DIDVAL=Y
"RTN","DICU2",66,0)
 . .
"RTN","DICU2",67,0)
I5 . . ; set field into array or pack node
"RTN","DICU2",68,0)
 . .
"RTN","DICU2",69,0)
 . . I DIFLAGS'["P" M @DILIST@("ID",DICOUNT,DID)=DIDVAL
"RTN","DICU2",70,0)
 . . E  D ADD(.DIFLAGS,.DINODE,.DILENGTH,DIDVAL,DIEN,DILIST)
"RTN","DICU2",71,0)
 .
"RTN","DICU2",72,0)
I6 . ; output display-only identifier
"RTN","DICU2",73,0)
 .
"RTN","DICU2",74,0)
 . E  D
"RTN","DICU2",75,0)
 . . N %,D,DIC,X,Y,Y1
"RTN","DICU2",76,0)
 . . S D=DINDEX
"RTN","DICU2",77,0)
 . . S DIC=DIFILE(DIFILE,"O")
"RTN","DICU2",78,0)
 . . S DIC(0)=$TR(DIFLAGS,"2^fglpqtuv104")
"RTN","DICU2",79,0)
 . . M Y=DIEN S Y=$P(DIEN,",")
"RTN","DICU2",80,0)
 . . S Y1=$G(@DIFILE(DIFILE)@(+DIEN,0)),Y1=DIEN
"RTN","DICU2",81,0)
 . .
"RTN","DICU2",82,0)
I7 . . ; execute the identifier's code
"RTN","DICU2",83,0)
 . .
"RTN","DICU2",84,0)
 . . N DIX S DIX=DIDENT(DICRSR,DID,0)
"RTN","DICU2",85,0)
 . . X DIX
"RTN","DICU2",86,0)
 . . I $G(DIERR) D  Q
"RTN","DICU2",87,0)
 . . . N DICONTXT I DID="ZZZ ID" S DICONTXT="Identifier parameter"
"RTN","DICU2",88,0)
 . . . E  S DICONTXT="MUMPS Identifier"
"RTN","DICU2",89,0)
 . . . D ERR^DICF4(120,DIFILE,DIEN,"",DICONTXT)
"RTN","DICU2",90,0)
 . .
"RTN","DICU2",91,0)
I8 . . ; set output from identifier into output array or pack node
"RTN","DICU2",92,0)
 . . N DIGFT S DIGFT=$NA(@DILIST@("ID","WRITE",DICOUNT)) I DID?1"C"1.2N S DIGFT=$NA(@DILIST@("ID",DICOUNT,DID)) ;**GFT
"RTN","DICU2",93,0)
 . . N DI,DILINE,DIEND S DI="" S:DIFLAGS'["P" DIEND=$O(@DIGFT@("z"),-1)
"RTN","DICU2",94,0)
 . . I $O(^TMP("DIMSG",$J,""))="" S ^TMP("DIMSG",$J,1)=""
"RTN","DICU2",95,0)
 . . F  D  Q:DI=""!$G(DIERR)
"RTN","DICU2",96,0)
 . . . S DI=$O(^TMP("DIMSG",$J,DI)) Q:DI=""
"RTN","DICU2",97,0)
 . . . S DILINE=$G(^TMP("DIMSG",$J,DI))
"RTN","DICU2",98,0)
 . . . I DIFLAGS["P" D ADD(.DIFLAGS,.DINODE,.DILENGTH,DILINE,DIEN,DILIST,DI) Q
"RTN","DICU2",99,0)
 . . . S DIEND=DIEND+1,@DIGFT@(DIEND)=DILINE
"RTN","DICU2",100,0)
 . . . Q
"RTN","DICU2",101,0)
 . . K DIMSG,^TMP("DIMSG",$J)
"RTN","DICU2",102,0)
 ;
"RTN","DICU2",103,0)
I9 ; for packed output, set pack node into output array
"RTN","DICU2",104,0)
 ;
"RTN","DICU2",105,0)
 I '$G(DIERR),DIFLAGS["P" S @DILIST@(DICOUNT,0)=DINODE
"RTN","DICU2",106,0)
 Q
"RTN","DICU2",107,0)
 ;
"RTN","DICU2",108,0)
 ;
"RTN","DICU2",109,0)
SET(DICRSR,DIFID,DISUB,DIOUT,DINDEX,DIFILE) ; Move data to DIOUT.
"RTN","DICU2",110,0)
 N F1,F2 M F1=DIFILE N DIFILE M DIFILE=F1
"RTN","DICU2",111,0)
 S F1=$O(DIDENT(DICRSR,DIFID,DISUB,"")),F2=$O(DIDENT(DICRSR,DIFID,DISUB,F1))
"RTN","DICU2",112,0)
 F F1=F1,F2 D:F1]""
"RTN","DICU2",113,0)
 . I DIDENT(DICRSR,DIFID,DISUB,F1)["DIVAL" N DIVAL S @DINDEX(DISUB,"GET")
"RTN","DICU2",114,0)
 . N X S @("X="_DIDENT(DICRSR,DIFID,DISUB,F1))
"RTN","DICU2",115,0)
 . I $G(DIERR),DIFLAGS["h" K DIERR,^TMP("DIERR",$J) S X=DINDEX(DISUB)
"RTN","DICU2",116,0)
 . I X["""" S X=$$CONVQQ^DILIBF(X)
"RTN","DICU2",117,0)
 . I +$P(X,"E")'=X S X=""""_X_""""
"RTN","DICU2",118,0)
 . I F2="" S @(DIOUT_"="_X) Q
"RTN","DICU2",119,0)
 . S O=$NA(@DIOUT@(F1)),@(O_"="_X) Q
"RTN","DICU2",120,0)
 Q
"RTN","DICU2",121,0)
 ;
"RTN","DICU2",122,0)
TRANOUT(DISUB,DIVL) ; Execute TRANSFORM FOR DISPLAY on index value
"RTN","DICU2",123,0)
 N X S X=DIVL
"RTN","DICU2",124,0)
 N DICODE S DICODE=$G(DINDEX(DISUB,"TRANOUT"))
"RTN","DICU2",125,0)
 I DICODE]"" X DICODE
"RTN","DICU2",126,0)
 Q X
"RTN","DICU2",127,0)
 ;
"RTN","DICU2",128,0)
ADD(DIFLAGS,DINODE,DILENGTH,DINEW,DIEN,DILIST,DILCNT) ;
"RTN","DICU2",129,0)
 ;
"RTN","DICU2",130,0)
 ; for Packed output, add DINEW to DINODE, erroring if overflow
"RTN","DICU2",131,0)
 ; xform if it contains ^
"RTN","DICU2",132,0)
 ;
"RTN","DICU2",133,0)
A1 N DINEWLEN,DELIM S DINEWLEN=$L(DINEW),DELIM=$S($G(DILCNT)'>1:"^",1:"~")
"RTN","DICU2",134,0)
 S DILENGTH=DILENGTH+1+DINEWLEN
"RTN","DICU2",135,0)
 I DILENGTH>$G(^DD("STRING_LIMIT"),255) D ERR^DICF4(206,"","","",+DIEN) Q  ;**HERE IS WHERE A PACKED STRING WAS FORCED TO BE ONLY 255 CHARACTERS LONG
"RTN","DICU2",136,0)
 I DIFLAGS'[2,DINEW[U S DIFLAGS="2^"_DIFLAGS D ENCODE(DILIST,.DINODE)
"RTN","DICU2",137,0)
 I DIFLAGS[2,DINEW[U!(DINEW["&") S DINEW=$$HTML^DILF(DINEW) Q:$G(DIERR)
"RTN","DICU2",138,0)
 S DINODE=DINODE_DELIM_DINEW
"RTN","DICU2",139,0)
 Q
"RTN","DICU2",140,0)
 ;
"RTN","DICU2",141,0)
ENCODE(DILIST,DINODE) ;
"RTN","DICU2",142,0)
 ;
"RTN","DICU2",143,0)
 ; ADD: HTML encode records already output (we found an embedded ^)
"RTN","DICU2",144,0)
 ; procedure: loop through list encoding &s
"RTN","DICU2",145,0)
 ;
"RTN","DICU2",146,0)
E1 N DILINE,DIRULE S DIRULE(1,"&")="&amp;"
"RTN","DICU2",147,0)
 N DIREC S DIREC=0 F  S DIREC=$O(@DILIST@(DIREC)) Q:'DIREC  D
"RTN","DICU2",148,0)
 . S DILINE=@DILIST@(DIREC,0) Q:DILINE'["&"
"RTN","DICU2",149,0)
 . S @DILIST@(DIREC,0)=$$TRANSL8^DILF(DILINE,.DIRULE)
"RTN","DICU2",150,0)
 I DINODE["&" S DINODE=$$TRANSL8^DILF(DINODE,.DIRULE)
"RTN","DICU2",151,0)
 Q
"RTN","DICU2",152,0)
 ;
"RTN","DIEQ")
0^20^B16904404^B17086436
"RTN","DIEQ",1,0)
DIEQ ;SFISC/XAK,YJK - HELP DURING INPUT ;14MAR2016
"RTN","DIEQ",2,0)
 ;;22.2;VA FileMan;**2,7,5**;Jan 05, 2016;Build 28
"RTN","DIEQ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIEQ",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIEQ",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIEQ",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIEQ",7,0)
 ;;GFT;**4,3,59,999,1004,1024
"RTN","DIEQ",8,0)
 ;
"RTN","DIEQ",9,0)
BN S D=$P(DQ(DQ),U,4) S:DP+1 D=DIFLD
"RTN","DIEQ",10,0)
 S DZ=X D EN1 G B^DIED
"RTN","DIEQ",11,0)
QQ ;
"RTN","DIEQ",12,0)
 I DV,DV["*",$D(^DD(+DV,.01,0)) S DQ(DQ)=$P(DQ(DQ),U,1,4)_U_$P(^(0),U,5,99)
"RTN","DIEQ",13,0)
EN1 ;N DDH,DST,A1 S DDH=0 G M:DV I DP<0 D HP G P ;p7
"RTN","DIEQ",14,0)
  N DST,A1 S DDH=0 G M:DV I DP<0 D HP G P
"RTN","DIEQ",15,0)
HELP I X="?"!(X["BAD") S X=$$HELP^DIALOGZ(DP,D),A1="T" D N:X]"" I '$G(DISORT),$D(^DD(DP,D,12)) S X=^(12) D N ;HELP MESSAGE
"RTN","DIEQ",16,0)
 D H G:'$D(DZ) Q
"RTN","DIEQ",17,0)
 ;
"RTN","DIEQ",18,0)
P I DV["P" K DO S DIC=U_DU,D="B",DIC(0)="M"_$E("L",DV'["'") G AST:DV["*"&('$G(DISORT)) D DQ^DICQ D % G Q
"RTN","DIEQ",19,0)
VP S DU=DP S:DV DU=+DO(2),D=.01 I DV["V" D V G Q
"RTN","DIEQ",20,0)
D I DV["D" S %(0)=0,%("X")=$P(DQ(DQ),U,5,9) I DV'["t" D DT^DIEH1($P($P(%("X"),"%DT=""",2),""""),1) ;ONCE WAS A CALL TO HELP^%DTC ;p5
"RTN","DIEQ",21,0)
 ;.I %("X")="" S %("X")=$$GETMETH^DIETLIBF(DU,D,"INPUT TRANSFORM") ;p5
"RTN","DIEQ",22,0)
S I DV["S" D:'$G(DISORT) SETSCR^DIR(DU,D) S A1="T",DST=$$EZBLD^DIALOG(8068)_" " D DS D  K DIC("S")
"RTN","DIEQ",23,0)
 .N A,A1,A2
"RTN","DIEQ",24,0)
 .S A=$P(DQ(DQ),U,3) I DV["t" S DG=$$GETPROP^DIETLIBF(DU,D,"SET OF CODES") I DG]"" S A=DG
"RTN","DIEQ",25,0)
 .I $G(DUZ("LANG"))>1,A=$P(^DD(DP,D,0),U,3) S A=$$SETIN^DIALOGZ_";" ;NAKED
"RTN","DIEQ",26,0)
 .F DG=1:1 S Y=$P(A,";",DG) Q:Y=""  S D=$P(Y,":",2),Y=$P(Y,":") I 1 X:$D(DIC("S")) DIC("S") I  S A2="",$P(A2," ",15-($L(Y)+7))=" ",DST="  "_Y_A2_" "_D D DS
"RTN","DIEQ",27,0)
Q K DST,A1 S:$D(DIE) DIC=DIE S D=0 I $D(DDH)>10 D LIST^DDSU
"RTN","DIEQ",28,0)
 D:DV UDA
"RTN","DIEQ",29,0)
 Q
"RTN","DIEQ",30,0)
 ;
"RTN","DIEQ",31,0)
 ;
"RTN","DIEQ",32,0)
 ;
"RTN","DIEQ",33,0)
N F  Q:X=""  F %=$L(X," "):-1:1 I $L($P(X," ",1,%))<75 S DST=$P(X," ",1,%) D DS D:X'="" N1 Q
"RTN","DIEQ",34,0)
 S X=DZ
"RTN","DIEQ",35,0)
 Q
"RTN","DIEQ",36,0)
 ;
"RTN","DIEQ",37,0)
N1 S X=$P(X," ",%+1,$L(X," ")) Q
"RTN","DIEQ",38,0)
 ;
"RTN","DIEQ",39,0)
DS S:'$D(A1) A1="T" S DDH=$G(DDH)+1,DDH(DDH,A1)=$S(A1="X":"",1:"     ")_DST K A1,DST Q
"RTN","DIEQ",40,0)
 ;
"RTN","DIEQ",41,0)
HP I $D(DQ(DQ,3)) S A1="T",DST=DQ(DQ,3) D DS
"RTN","DIEQ",42,0)
 I $D(DQ(DQ,4)) S A1="X",DST=DQ(DQ,4) D DS
"RTN","DIEQ",43,0)
 Q
"RTN","DIEQ",44,0)
 ;
"RTN","DIEQ",45,0)
% S %=$G(DIC("V")) K DIC S:%]"" DIC("V")=% Q
"RTN","DIEQ",46,0)
 ;
"RTN","DIEQ",47,0)
AST S:$D(X)[0 X="?" X $P(DQ(DQ),U,5,99) K DIC G Q
"RTN","DIEQ",48,0)
 D ^DIC K DIC,DICS,DICW G Q
"RTN","DIEQ",49,0)
 ;
"RTN","DIEQ",50,0)
M ;COME HERE FROM EN1 ABOVE WHEN WE'RE IN A MULTIPLE FIELD
"RTN","DIEQ",51,0)
 K DO S DZ=X,DIC=DIE_DA_","_$S(+$P(DC,U,3)=$P(DC,U,3):$P(DC,U,3),1:$C(34)_$P(DC,U,3)_$C(34))_",",D="B",DIC(0)="LM",DZ(1)=0
"RTN","DIEQ",52,0)
 I '$D(@(DIC_"0)")) S DO=U_$P(DC,U,2) D DO2^DIC1
"RTN","DIEQ",53,0)
 D:'$D(DO) DO^DIC1
"RTN","DIEQ",54,0)
 D DDA,DQ^DICQ D % G Q:'$D(DZ)!(DV["S") S X=DZ G P
"RTN","DIEQ",55,0)
 ;
"RTN","DIEQ",56,0)
H I '$G(DISORT) D  Q:'$D(DZ)
"RTN","DIEQ",57,0)
 . I $G(DV)["t" S DST=$$XHELP^DIETLIBF(DP,D)
"RTN","DIEQ",58,0)
 . E  S DST=$G(^DD(DP,D,4))
"RTN","DIEQ",59,0)
 . I DST'?."^" S A1="X" D DS,LIST^DDSU
"RTN","DIEQ",60,0)
 I $G(X)?1"??".E,X'["BAD" D
"RTN","DIEQ",61,0)
 . N DIDG,DG,DDD,DD,DIY,DIZ,DUOUT
"RTN","DIEQ",62,0)
 . S DIDG=$P($G(^DD(DP,D,21,0)),U,3)
"RTN","DIEQ",63,0)
 . K DDSQ
"RTN","DIEQ",64,0)
 . I '$D(DDS) S DDD=5,DD="",DIY=99,DIZ=21 I $G(DIPGM)'="DICQ1" N DIPGM S DIPGM="DIEQ" D Z^DDSU
"RTN","DIEQ",65,0)
 . F DG=1:1 Q:'$D(^DD(DP,D,21,DG,0))  Q:+DIDG&(DG>DIDG)  D  Q:$D(DDSQ)
"RTN","DIEQ",66,0)
 . . I '($G(DDH)#15) D LIST^DDSU I $G(DTOUT)!($G(DUOUT)) S DDSQ=1
"RTN","DIEQ",67,0)
 . . Q:$D(DDSQ)
"RTN","DIEQ",68,0)
 . . S DDH=$G(DDH)+1,DDH(DDH,"T")=^DD(DP,D,21,DG,0) ;S DST=^DD(DP,D,21,DG,0) D DS Q  ;GRAB DESCRIPTION NODE BY NODE
"RTN","DIEQ",69,0)
 . I '$D(DDSQ) Q:$D(DDH)'>10  D LIST^DDSU
"RTN","DIEQ",70,0)
 . I $D(DDSQ) K DDSQ,DDH
"RTN","DIEQ",71,0)
 . Q
"RTN","DIEQ",72,0)
 Q
"RTN","DIEQ",73,0)
 ;
"RTN","DIEQ",74,0)
BK S DDH=$G(DDH)+1,DDH(DDH,"T")=" " Q
"RTN","DIEQ",75,0)
 ;
"RTN","DIEQ",76,0)
V S DDH=+$G(DDH),A1="T",DST=$$EZBLD^DIALOG(8071) D DS
"RTN","DIEQ",77,0)
EGP F Y=0:0 S Y=$O(^DD(DU,D,"V",Y)) Q:Y'>0  I $D(^(Y,0)) S Y(0)=^(0) X:$D(DIC("V")) DIC("V") I  I $D(^DIC(+Y(0),0)) S Y(1)=$P(Y(0),U,4),Y(2)=$$FILENAME^DIALOGZ(+Y(0)),DST=$$EZBLD^DIALOG(8072,.Y) K Y(1),Y(2) D DS ;**CCO/NI V-P FILE NAMES
"RTN","DIEQ",78,0)
 D BK S DST=$$EZBLD^DIALOG(8073) D DS S DU="" D BK I DZ'?1"??".E K X,DZ Q
"RTN","DIEQ",79,0)
 D T^DIEQ1 K X,DZ Q
"RTN","DIEQ",80,0)
 ;
"RTN","DIEQ",81,0)
DDA N T,%
"RTN","DIEQ",82,0)
 S T=$T
"RTN","DIEQ",83,0)
 F %=+$O(DA(" "),-1):-1:1 K DA(%+1) S:$D(DA(%))#2 DA(%+1)=DA(%)
"RTN","DIEQ",84,0)
 K DA(1) S:$D(DA)#2 DA(1)=DA
"RTN","DIEQ",85,0)
 I T
"RTN","DIEQ",86,0)
 Q
"RTN","DIEQ",87,0)
 ;
"RTN","DIEQ",88,0)
UDA N T,%
"RTN","DIEQ",89,0)
 S T=$T
"RTN","DIEQ",90,0)
 S DA=$G(DA(1)) ;K DA(1)
"RTN","DIEQ",91,0)
 F %=2:1:+$O(DA(" "),-1) I $D(DA(%))#2 S DA(%-1)=DA(%) K DA(%)
"RTN","DIEQ",92,0)
 I T
"RTN","DIEQ",93,0)
 Q
"RTN","DIEQ",94,0)
 ;
"RTN","DIEQ",95,0)
 ;#8071  Enter one of the following
"RTN","DIEQ",96,0)
 ;#8072  |Prefix|.EntryName to select a |filename|
"RTN","DIEQ",97,0)
 ;#8073  To see the entries in any particular file type <Prefix.?>
"RTN","DIETLIB")
0^15^B10149951^B10469878
"RTN","DIETLIB",1,0)
DIETLIB ;SFISC/MKO,O-OIFO/GFT - LIBRARY OF APIs FOR USER DEFINED DATA TYPES ;04MAR2016
"RTN","DIETLIB",2,0)
 ;;22.2;VA FileMan;**2,5**;Jan 05, 2016;Build 28
"RTN","DIETLIB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIETLIB",4,0)
 ;
"RTN","DIETLIB",5,0)
 ;*************************************************************
"RTN","DIETLIB",6,0)
 ;
"RTN","DIETLIB",7,0)
 ;THESE CALLS DEAL WITH NODE 41 IN FILE .81, 'FIELD DEFINED BY THIS TYPE'
"RTN","DIETLIB",8,0)
 ;
"RTN","DIETLIB",9,0)
AFDEF(FILE,FIELD) ; --'SET' CROSS-REFERENCE ON SPECIFIER
"RTN","DIETLIB",10,0)
 N T,FF,I
"RTN","DIETLIB",11,0)
 S T=+$P($P($G(^DD(FILE,FIELD,0)),U,2),"t",2) Q:'T!'$D(^DI(.81,T,0))  ;GET THE EXTENDED TYPE
"RTN","DIETLIB",12,0)
 S I=$O(^DI(.81,T,41,"A"),-1)+1,FF=FILE_","_FIELD
"RTN","DIETLIB",13,0)
 I '$D(^DI(.81,"AFDEF",T,FF))  S ^(FF,I)="",^DI(.81,T,41,0)="^.81215^"_I_U_I,^(I,0)=FF ;ADD FIELD TO LIST OF DATATYPES FOR IT
"RTN","DIETLIB",14,0)
 S $P(^DD(FILE,FIELD,0),U,5,99)="",$P(^(0),U,3)="" K ^(12) ;DELETE INPUT TRANSFORM, POINTER,SCREEN EXPLANATION FOR A FIELD THAT IS NOW 'EXTENDED'
"RTN","DIETLIB",15,0)
 Q
"RTN","DIETLIB",16,0)
 ;
"RTN","DIETLIB",17,0)
AFDEFDEL(FILE,FIELD) ;'KILL' CROSS-REFERENCE ON SPECIFIER
"RTN","DIETLIB",18,0)
 N T,FF,I,Z
"RTN","DIETLIB",19,0)
 S T=+$P($P($G(^DD(FILE,FIELD,0)),U,2),"t",2) Q:'T!'$D(^DI(.81,T,0))
"RTN","DIETLIB",20,0)
 S FF=FILE_","_FIELD
"RTN","DIETLIB",21,0)
 F I=0:0 S I=$O(^DI(.81,"AFDEF",T,FF,I)) Q:'I  I $G(^DI(.81,T,41,I,0))=FF K ^(0) S Z=$G(^DI(.81,T,41,0)),^(0)="^.81215^"_$O(^("A"),-1)_"^"_($P(Z,U,4)-1)
"RTN","DIETLIB",22,0)
 K ^DI(.81,"AFDEF",T,FF)
"RTN","DIETLIB",23,0)
 Q
"RTN","DIETLIB",24,0)
 ;
"RTN","DIETLIB",25,0)
 ;
"RTN","DIETLIB",26,0)
DELETEQ ;CANNOT DELETE A DATA TYPE IN USE
"RTN","DIETLIB",27,0)
 IF DA<100 Q
"RTN","DIETLIB",28,0)
 IF $D(^DI(.81,"AFDEF",DA))
"RTN","DIETLIB",29,0)
 IF  W !?3,"SORRY!  DATA TYPES IN USE CANNOT BE DELETED!!",!
"RTN","DIETLIB",30,0)
 QUIT
"RTN","DIETLIB",31,0)
 ;
"RTN","DIETLIB",32,0)
 ;
"RTN","DIETLIB",33,0)
CLEANDEF ; POST-INSTALL CAN CALL THIS TO MAKE SURE THAT 'FIELD DEFINED BY THIS TYPE' DOES NOT HAVE EXTRA MULTIPLES
"RTN","DIETLIB",34,0)
 N TY,I,FI,FL
"RTN","DIETLIB",35,0)
 F TY=0:0 S TY=$O(^DI(.81,TY)) Q:'TY  F I=0:0 S I=$O(^DI(.81,TY,41,I)) Q:'I  I $D(^(I,0)) S Z=^(0) D
"RTN","DIETLIB",36,0)
 .S FI=+Z,FL=+$P(Z,",",2) I $D(^DD(FI,FL,0)),$P($P(^(0),"^",2),"t",2)=TY Q
"RTN","DIETLIB",37,0)
 .K ^DI(.81,"AFDEF",TY,Z,I),^DI(.81,TY,41,I)
"RTN","DIETLIB",38,0)
 Q
"RTN","DIETLIB",39,0)
 ;
"RTN","DIETLIB",40,0)
 ;
"RTN","DIETLIB",41,0)
 ;
"RTN","DIETLIB",42,0)
 ;
"RTN","DIETLIB",43,0)
 ;****************************************************************
"RTN","DIETLIB",44,0)
 ;called from DICATTUD & DIRUD
"RTN","DIETLIB",45,0)
PARSE(DDTSTR,DDTVALS) ;Parse DDTSTR, replacing |abbr| with DDTVALS(abbr)
"RTN","DIETLIB",46,0)
 ;Two consecutive |s are replaced with a single |
"RTN","DIETLIB",47,0)
 ;|#FILE#| is replaced with DDTVALS("#FILE#")
"RTN","DIETLIB",48,0)
 ;|#FIELD#| is replaced with DDTVALS("#FIELD#")
"RTN","DIETLIB",49,0)
 Q:$G(DDTSTR)="" ""
"RTN","DIETLIB",50,0)
 Q:DDTSTR'["|" DDTSTR
"RTN","DIETLIB",51,0)
 ;
"RTN","DIETLIB",52,0)
 N I,J,DDTABBR,DDTVAL,L,DDTWIND
"RTN","DIETLIB",53,0)
 ;
"RTN","DIETLIB",54,0)
 S I=1 F  D  Q:'I
"RTN","DIETLIB",55,0)
 . ;Find the next |
"RTN","DIETLIB",56,0)
 . S I=$F(DDTSTR,"|",I) Q:'I
"RTN","DIETLIB",57,0)
 . ;
"RTN","DIETLIB",58,0)
 . ;Replace || with |
"RTN","DIETLIB",59,0)
 . I $E(DDTSTR,I)="|" S $E(DDTSTR,I-1,I)="|" Q
"RTN","DIETLIB",60,0)
 . ;
"RTN","DIETLIB",61,0)
 . ;Find the next |, get the abbreviation and the property value
"RTN","DIETLIB",62,0)
 . S J=$F(DDTSTR,"|",I) I 'J S I=0 Q
"RTN","DIETLIB",63,0)
 . S DDTWIND=$E(DDTSTR,I,J-2)
"RTN","DIETLIB",64,0)
 . S L=+$P(DDTWIND,",",2),DDTABBR=$P(DDTWIND,",")
"RTN","DIETLIB",65,0)
 . S DDTVAL=$G(DDTVALS(DDTABBR))
"RTN","DIETLIB",66,0)
 . S:L DDTVAL=$$QT(DDTVAL,L)
"RTN","DIETLIB",67,0)
 . ;
"RTN","DIETLIB",68,0)
 . ;Replace |abbr| with the value, update I
"RTN","DIETLIB",69,0)
 . S $E(DDTSTR,I-1,J-1)=DDTVAL
"RTN","DIETLIB",70,0)
 . S I=J+$L(DDTVAL)-$L(DDTWIND)-2
"RTN","DIETLIB",71,0)
 Q DDTSTR
"RTN","DIETLIB",72,0)
 ;
"RTN","DIETLIB",73,0)
QT(X,L) ;Return X with one quote replaced with 2 quotes.Repeat the process L times}
"RTN","DIETLIB",74,0)
 N I,J,K
"RTN","DIETLIB",75,0)
 Q:$G(L)=0 X
"RTN","DIETLIB",76,0)
 S:'$G(L) L=1
"RTN","DIETLIB",77,0)
 ;
"RTN","DIETLIB",78,0)
 F I=1:1:L D
"RTN","DIETLIB",79,0)
 . S Y=""
"RTN","DIETLIB",80,0)
 . S J=1,K=1 F  S K=$F(X,"""",J) Q:'K  D
"RTN","DIETLIB",81,0)
 .. S Y=Y_$E(X,J,K-1)_""""
"RTN","DIETLIB",82,0)
 .. S J=K
"RTN","DIETLIB",83,0)
 . S X=Y_$E(X,J,999)
"RTN","DIETLIB",84,0)
 Q X
"RTN","DIETLIB",85,0)
 ;
"RTN","DIETLIB",86,0)
 ;
"RTN","DIETLIB",87,0)
 ;
"RTN","DIETLIB",88,0)
XCODE(DDTCODE,DDTVALS) ;Execute DDTCODE, return value of X   Called by DICATTUD,DIRUD
"RTN","DIETLIB",89,0)
 N X
"RTN","DIETLIB",90,0)
 Q:$G(DDTCODE)="" ""
"RTN","DIETLIB",91,0)
 ;
"RTN","DIETLIB",92,0)
 S DDTCODE=$$PARSE(DDTCODE,.DDTVALS)
"RTN","DIETLIB",93,0)
 X DDTCODE
"RTN","DIETLIB",94,0)
 Q $G(X)
"RTN","DIETLIB",95,0)
 ;
"RTN","DIETLIB",96,0)
XCODEM(DDTCODE,DDTVALS,DDTOUT) ;Execute DDTCODE,
"RTN","DIETLIB",97,0)
 ;  Return values in DDTOUT array
"RTN","DIETLIB",98,0)
 ;In:
"RTN","DIETLIB",99,0)
 ;  DDTCODE = code to execute (may contain |s); sets X or X array
"RTN","DIETLIB",100,0)
 ;  DDTVALS(abbrev) = array of property values
"RTN","DIETLIB",101,0)
 ;Out:
"RTN","DIETLIB",102,0)
 ;  .DDTOUT = X array set by DDTCODE
"RTN","DIETLIB",103,0)
 ;
"RTN","DIETLIB",104,0)
 N X K DDTOUT
"RTN","DIETLIB",105,0)
 Q:$G(DDTCODE)="" ""
"RTN","DIETLIB",106,0)
 ;
"RTN","DIETLIB",107,0)
 S DDTCODE=$$PARSE(DDTCODE,.DDTVALS)
"RTN","DIETLIB",108,0)
 X DDTCODE
"RTN","DIETLIB",109,0)
 K DDTOUT M DDTOUT=X
"RTN","DIETLIB",110,0)
 Q
"RTN","DIETLIB",111,0)
 ;
"RTN","DIETLIB",112,0)
 ;*************************************************************
"RTN","DIETLIB",113,0)
 ;
"RTN","DIETLIBF")
0^16^B28622394^B29058396
"RTN","DIETLIBF",1,0)
DIETLIBF ;SFISC/MKO,GFT - LIBRARY FOR FIELD ATTRIBUTES ;25OCT2016
"RTN","DIETLIBF",2,0)
 ;;22.2;VA FileMan;**2,5**;Jan 05, 2016;Build 28
"RTN","DIETLIBF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIETLIBF",4,0)
 ;
"RTN","DIETLIBF",5,0)
 ;The following functions return, for a given file and field,
"RTN","DIETLIBF",6,0)
 ;code to do something, such as validate user input, or validate
"RTN","DIETLIBF",7,0)
 ;the internal form of data. The actual code to perform these
"RTN","DIETLIBF",8,0)
 ;functions may reside under one of several methods, so a list of
"RTN","DIETLIBF",9,0)
 ;methods need to be searched.
"RTN","DIETLIBF",10,0)
 ;
"RTN","DIETLIBF",11,0)
 ;Input to these methods are:
"RTN","DIETLIBF",12,0)
 ;  DDTFILE = File #
"RTN","DIETLIBF",13,0)
 ;  DDTFIELD = Field #
"RTN","DIETLIBF",14,0)
 ;
"RTN","DIETLIBF",15,0)
 ;Returned is:
"RTN","DIETLIBF",16,0)
 ;  Code for method or null
"RTN","DIETLIBF",17,0)
 ;
"RTN","DIETLIBF",18,0)
VALEXT(DDTFILE,DDTFIELD) ;Return code to validate and transform user input  --PERHAPS INTERACTIVELY
"RTN","DIETLIBF",19,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$VALEXTL)
"RTN","DIETLIBF",20,0)
 ;
"RTN","DIETLIBF",21,0)
VALEXTS(DDTFILE,DDTFIELD) ;Return code to SILENTLY validate and transform user input
"RTN","DIETLIBF",22,0)
 ;Non-interactive
"RTN","DIETLIBF",23,0)
 N D,%
"RTN","DIETLIBF",24,0)
 S %=$$GETMETH(.DDTFILE,.DDTFIELD,$$VALEXTSL) I %["+X" S %="K:X?16.N.E X I $D(X) "_% ;DON'T TRY TO "+" A HUGE NUMBER
"RTN","DIETLIBF",25,0)
 S D=$F(%,"%DT=""E") I D>0 S %=$E(%,1,D-2)_$E(%,D,9999)
"RTN","DIETLIBF",26,0)
 Q "N %T,%DT,C,DIG,DIH,DIU,DIV,DICR,DIQUIET S DIQUIET=1 "_% ;PRESERVE VARIABLES 
"RTN","DIETLIBF",27,0)
 ;
"RTN","DIETLIBF",28,0)
VALINT(DDTFILE,DDTFIELD) ;Return code to validate internal form
"RTN","DIETLIBF",29,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$VALINTL)
"RTN","DIETLIBF",30,0)
 ;
"RTN","DIETLIBF",31,0)
XHELP(DDTFILE,DDTFIELD) ;Return the executable help of a field
"RTN","DIETLIBF",32,0)
 D DIPA(DDTFILE,DDTFIELD) ;I $D(^DI(.81,+$P($P(^DD(DDTFILE,DDTFIELD,0),U,2),"t",2),101,4,0)) S DIPA("POINTER")=$$GETPROP(DDTFILE,DDTFIELD,"POINTER")
"RTN","DIETLIBF",33,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$XHELPL)
"RTN","DIETLIBF",34,0)
 ;
"RTN","DIETLIBF",35,0)
OUTPUT(DDTFILE,DDTFIELD) ;Return the executable code to output a field's value.  No arguments means ^DD(DDTFILE,DDTFIELD,0) is already in naked ref
"RTN","DIETLIBF",36,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$OUTPUTL)
"RTN","DIETLIBF",37,0)
 ;
"RTN","DIETLIBF",38,0)
 ;
"RTN","DIETLIBF",39,0)
 ;
"RTN","DIETLIBF",40,0)
DIPA(DDTFILE,DDTFIELD) ;CREATE DIPA NODES FROM PROPERTIES IN THE FIELD
"RTN","DIETLIBF",41,0)
 N T,P,V,N
"RTN","DIETLIBF",42,0)
 S T=+$P($P(^DD(DDTFILE,DDTFIELD,0),U,2),"t",2) Q:'T  ;ONLY HAPPENS FOR EXTENDED DATA TYPES
"RTN","DIETLIBF",43,0)
 F P=0:0 S P=$O(^DD(DDTFILE,DDTFIELD,101,P)) Q:'P  S V=$G(^(P,31)) I V]"" S N=$P($G(^DI(.86,P,0)),U) I N]"" S DIPA(N)=V ;E.G., DIPA("POINTER")="DIC(5,"
"RTN","DIETLIBF",44,0)
 F P=0:0 S P=$O(^DD(DDTFILE,DDTFIELD,201,P)) Q:'P  S V=$G(^(P,31)) I V]"" S N=$P($G(^DI(.87,P,0)),U) I N]"" S DIPA(N)=V ;E.G., DIPA("CODE TO SET POINTER SCREEN")="I 1"
"RTN","DIETLIBF",45,0)
 Q
"RTN","DIETLIBF",46,0)
 ;
"RTN","DIETLIBF",47,0)
 ;****************************************************************
"RTN","DIETLIBF",48,0)
 ;The following functions return a string of methods to search
"RTN","DIETLIBF",49,0)
 ;
"RTN","DIETLIBF",50,0)
VALEXTL() Q "INTERACTIVE VALIDATE AND INPUT TRANSFORM;VALIDATE AND TRANSFORM INPUT;INPUT TRANSFORM"
"RTN","DIETLIBF",51,0)
VALEXTSL() Q "VALIDATE AND TRANSFORM INPUT;INPUT TRANSFORM"
"RTN","DIETLIBF",52,0)
VALINTL() Q "VALIDATE INTERNAL FORM;INPUT TRANSFORM"
"RTN","DIETLIBF",53,0)
XHELPL() Q "INTERACTIVE EXECUTABLE HELP;XECUTABLE HELP"
"RTN","DIETLIBF",54,0)
OUTPUTL() Q "OUTPUT TRANSFORM"
"RTN","DIETLIBF",55,0)
 ;
"RTN","DIETLIBF",56,0)
 ;****************************************************************
"RTN","DIETLIBF",57,0)
 ;
"RTN","DIETLIBF",58,0)
GETMETH(DDTFILE,DDTFIELD,DDTMETL) ;Look for methods in the ;-delimited string
"RTN","DIETLIBF",59,0)
 ;of method numbers.
"RTN","DIETLIBF",60,0)
 ;Return the code for the first non-null method found.
"RTN","DIETLIBF",61,0)
 ;In:
"RTN","DIETLIBF",62,0)
 ;  DDTFILE  = file #
"RTN","DIETLIBF",63,0)
 ;  DDTFIELD = field #
"RTN","DIETLIBF",64,0)
 ;  DDTMETL  =  ;-delimited list of methods to search for
"RTN","DIETLIBF",65,0)
 ;
"RTN","DIETLIBF",66,0)
 N REF,DDTCOD,DDTMET,DDTP,DDTPC,I
"RTN","DIETLIBF",67,0)
 Q:" "[$G(DDTMETL) ""
"RTN","DIETLIBF",68,0)
 ; The use of the naked reference is needed here, regardless of its obscurity. MSC/DKA 2016-03-04
"RTN","DIETLIBF",69,0)
 I '$G(DDTFILE)!'$G(DDTFIELD) S REF=$NA(^(0)) ;^DD(DDTFILE,DDTFIELD,0) is already in naked ref  -- MAYBE!     LET'S NOT USE THIS 'NAKED' TRICK
"RTN","DIETLIBF",70,0)
 E  S REF=$NA(^DD(DDTFILE,DDTFIELD,0))
"RTN","DIETLIBF",71,0)
 Q:REF'?1"^DD(".E ""
"RTN","DIETLIBF",72,0)
 F DDTPC=1:1:$L(DDTMETL,";") S DDTMET=$P(DDTMETL,";",DDTPC) D:DDTMET]""  Q:$G(DDTCOD)]""
"RTN","DIETLIBF",73,0)
 . S I=+$P($P($G(@REF),U,2),"t",2)
"RTN","DIETLIBF",74,0)
 . S DDTP=$O(^DI(.87,"B",DDTMET,""),-1) I DDTP,$P($G(^DI(.81,I,201,DDTP,31)),";")'?."^" S DDTCOD=^(31) ;Q  ;FIRST TRY TO GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",75,0)
 . I DDTMET="INPUT TRANSFORM" D  Q:$D(DDTCOD)
"RTN","DIETLIBF",76,0)
 ..D DIPA(DDTFILE,DDTFIELD) ;SET UP THE PARAMETERS
"RTN","DIETLIBF",77,0)
 ..S DDTP=$$PROP4TYP("SET OF CODES",I) I DDTP]"" S DDTCOD="D READSET^DIED(.X,"""_DDTP_""")" Q  ;M CODE: D READSET^DIED(.X,$$PROP4TYP^DIETLIBF("SET OF CODES",11)
"RTN","DIETLIBF",78,0)
 ..I "Q"'[$P($G(@REF),U,5,999) S DDTCOD=$P(^(0),U,5,999) ;from regular field, get the old input transform
"RTN","DIETLIBF",79,0)
 . I DDTMET="OUTPUT TRANSFORM",$G(@REF)]"",$G(^(2))'?."^" S DDTCOD=^(2) Q
"RTN","DIETLIBF",80,0)
 . I DDTMET="XECUTABLE HELP",$G(@REF)]"",$G(^(4))'?."^" S DDTCOD=^(4) Q
"RTN","DIETLIBF",81,0)
 Q $G(DDTCOD)
"RTN","DIETLIBF",82,0)
 ;
"RTN","DIETLIBF",83,0)
 ;
"RTN","DIETLIBF",84,0)
%DT(PARAM) ;CREATE CODE TO SET THE %DT VARIABLE FROM PARAMETERS, INCLUDING 'PARAM', WHICH MAY BE "E"
"RTN","DIETLIBF",85,0)
 N EARLY
"RTN","DIETLIBF",86,0)
 S EARLY="",PARAM=$TR(PARAM,"""")
"RTN","DIETLIBF",87,0)
 I $G(DIPA("EARLIEST DATE")) S EARLY=",%DT(0)="_DIPA("EARLIEST DATE")
"RTN","DIETLIBF",88,0)
 I $G(DIPA("TIME REQUIRED")) S PARAM=PARAM_"R"
"RTN","DIETLIBF",89,0)
 I $G(DIPA("SECONDS ALLOWED")) S PARAM=PARAM_"S"
"RTN","DIETLIBF",90,0)
 I $G(DIPA("TIME OF DAY")) S PARAM=PARAM_"T"
"RTN","DIETLIBF",91,0)
 I '$G(DIPA("IMPRECISE DATE")) S PARAM=PARAM_"X"
"RTN","DIETLIBF",92,0)
 Q "SET %DT="""_PARAM_""""_EARLY
"RTN","DIETLIBF",93,0)
 ;
"RTN","DIETLIBF",94,0)
DIC ;SET THE DIC VARIABLE FROM PARAMETERS
"RTN","DIETLIBF",95,0)
 I $G(DIPA("POINTER"))'["(" S Y=-1 Q
"RTN","DIETLIBF",96,0)
 N DIS,DIC,DIFILE ;DIFILE SHOULD REALLY BE NEWED BY ^DIC ITSELF
"RTN","DIETLIBF",97,0)
 X $G(DIPA("CODE TO SET POINTER SCREEN")) ;S DIC("S")
"RTN","DIETLIBF",98,0)
 S DIC="^"_DIPA("POINTER"),DIC(0)="M"_$E("L",$G(DIPA("LAYGO"))) I '$D(DIQUIET) S DIC(0)=DIC(0)_"EQ"
"RTN","DIETLIBF",99,0)
 D ^DIC
"RTN","DIETLIBF",100,0)
 Q
"RTN","DIETLIBF",101,0)
 ;
"RTN","DIETLIBF",102,0)
 ;
"RTN","DIETLIBF",103,0)
GETPROP(DDTFILE,DDTFIELD,DDTPROL) ;Look for PROPERTIES in the ;-delimited string
"RTN","DIETLIBF",104,0)
 ;Return the string for the first non-null property found.
"RTN","DIETLIBF",105,0)
 ;In:
"RTN","DIETLIBF",106,0)
 ;  DDTFILE  = file #
"RTN","DIETLIBF",107,0)
 ;  DDTFIELD = field #
"RTN","DIETLIBF",108,0)
 ;  DDTPROL  =  ;-delimited list of properties to search for
"RTN","DIETLIBF",109,0)
 ;
"RTN","DIETLIBF",110,0)
 N REF
"RTN","DIETLIBF",111,0)
 Q:" "[$G(DDTPROL) ""
"RTN","DIETLIBF",112,0)
 I '$G(DDTFILE)!'$G(DDTFIELD) S REF=$NA(^(0))  ;^DD(DDTFILE,DDTFIELD,0) is already in naked ref
"RTN","DIETLIBF",113,0)
 E  S REF=$NA(^DD(DDTFILE,DDTFIELD,0))
"RTN","DIETLIBF",114,0)
 Q:REF'?1"^DD(".E ""
"RTN","DIETLIBF",115,0)
 N DDTCOD,DDTP,DDTPC,I,DIP
"RTN","DIETLIBF",116,0)
 S I=+$P($P($G(@REF),U,2),"t",2)
"RTN","DIETLIBF",117,0)
 F DDTPC=1:1:$L(DDTPROL,";") S DDTP=$P(DDTPROL,";",DDTPC) I DDTP]"" D  Q:$G(DDTCOD)]""
"RTN","DIETLIBF",118,0)
 .I $D(@REF),$O(^(101,0)) S DIP=$O(^DI(.86,"B",DDTP,""),-1) I DIP,$D(@REF),$G(^(101,DIP,31))]"" S DDTCOD=^(31) Q  ;GET PROPERTY FROM THE FIELD ITSELF
"RTN","DIETLIBF",119,0)
 .S DDTCOD=$$PROP4TYP(DDTP,I)
"RTN","DIETLIBF",120,0)
 Q $G(DDTCOD)
"RTN","DIETLIBF",121,0)
 ;
"RTN","DIETLIBF",122,0)
PROP4TYP(T,I) ;FOR PROPERTY 'T' IN DATA TYPE 'I', RETURN THE VALUE
"RTN","DIETLIBF",123,0)
 S T=$O(^DI(.86,"B",T,""),-1) I T,$G(^DI(.81,I,101,T,31))'?."^" Q ^(31) ;GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",124,0)
 Q ""
"RTN","DIETLIBF",125,0)
 ;
"RTN","DIETLIBF",126,0)
 ;
"RTN","DIETLIBF",127,0)
METH4TYP(T,I) ;FOR METHOD 'T' IN DATA TYPE 'I', RETURN THE VALUE
"RTN","DIETLIBF",128,0)
 S T=$O(^DI(.87,"B",T,""),-1) I T,$G(^DI(.81,I,201,T,31))'?."^" Q ^(31) ;GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",129,0)
 Q ""
"RTN","DIFROMS2")
0^12^B45453261^B45455117
"RTN","DIFROMS2",1,0)
DIFROMS2 ;SFISC/DCL/TKW - INSTALL DD FROM SOURCE ARRAY ;4SEP2016
"RTN","DIFROMS2",2,0)
 ;;22.2;VA FileMan;**3,5**;Jan 05, 2016;Build 28
"RTN","DIFROMS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIFROMS2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIFROMS2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIFROMS2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIFROMS2",7,0)
 ;;GFT;**11,53,1037,1053,1055**
"RTN","DIFROMS2",8,0)
 ;
"RTN","DIFROMS2",9,0)
 ;
"RTN","DIFROMS2",10,0)
 Q
"RTN","DIFROMS2",11,0)
 ;
"RTN","DIFROMS2",12,0)
 ;
"RTN","DIFROMS2",13,0)
 ;
"RTN","DIFROMS2",14,0)
EN ;CALLED FROM DIFROMS
"RTN","DIFROMS2",15,0)
 ;WHERE, E.G. ^XTMP("XPDI",4861,"^DD",21489,21489,.01,0)="NAME^RF^^0;1^K:$L(X)>30!(X?.N) X
"RTN","DIFROMS2",16,0)
 ;AND THEREFORE DIFRSA=^XTMP("XPDI",4861)
"RTN","DIFROMS2",17,0)
 ;^XTMP("XPDI",4861,"FIA",21489)="MSC ORDERS HL7"
"RTN","DIFROMS2",18,0)
 ;^XTMP("XPDI",4861,"FIA",21489,0)="^MSCH(21489,"
"RTN","DIFROMS2",19,0)
 ;^XTMP("XPDI",4861,"FIA",21489,0,0)=21489
"RTN","DIFROMS2",20,0)
 ;                                1)="y^y^f^^n^^y^o^n"    --  ^XPD(9.6,D0,4,D1,222)
"RTN","DIFROMS2",21,0)
 ;                                2)="1^^0"
"RTN","DIFROMS2",22,0)
 ;^XTMP("XPDI",4861,"FIA",21489,21489)=0
"RTN","DIFROMS2",23,0)
 ;                          21489.01)=0
"RTN","DIFROMS2",24,0)
 ;AND THEREFORE DIFRFIA=^XTMP("XPDI",4861,"FIA")
"RTN","DIFROMS2",25,0)
 I '$D(@DIFRSA) D ERR(5) Q
"RTN","DIFROMS2",26,0)
 I '$D(@DIFRFIA) D ERR(4) Q
"RTN","DIFROMS2",27,0)
 G:$G(DIFRFILE) FCHK
"RTN","DIFROMS2",28,0)
 S DIFRFILE=0 F  S DIFRFILE=$O(@DIFRFIA@(DIFRFILE)) Q:DIFRFILE'>0  D FILE ;LOOP THRU ALL INCOMING TOP-LEVEL FILES
"RTN","DIFROMS2",29,0)
 Q
"RTN","DIFROMS2",30,0)
 ;
"RTN","DIFROMS2",31,0)
 ;
"RTN","DIFROMS2",32,0)
FCHK I '$D(@DIFRFIA@(DIFRFILE)) D ERR(6) Q
"RTN","DIFROMS2",33,0)
FILE ;
"RTN","DIFROMS2",34,0)
 N DIFR01,DIFR02,DIFRVR,DIFRFDD
"RTN","DIFROMS2",35,0)
 S DIFR01=$G(@DIFRFIA@(DIFRFILE,0,1)) ;UPDATE DATA DICTIONARY [1S] ^ (#222.2) SEND SECURITY CODE [2S] ^ (#222.3) SEND FULL
"RTN","DIFROMS2",36,0)
 S DIFR02=$G(@DIFRFIA@(DIFRFILE,0,2))
"RTN","DIFROMS2",37,0)
 I $TR($E(DIFR01),"NY","ny")="n" D ERR(1) Q
"RTN","DIFROMS2",38,0)
 S DIFRFDD=$TR($P(DIFR01,"^",3),"FP","fp")'="p" ;DIFRFDD=0 means PARTIAL DEFINITION
"RTN","DIFROMS2",39,0)
 I 'DIFRFDD,'$D(^DIC(DIFRFILE)) D ERR(7) Q
"RTN","DIFROMS2",40,0)
 I $D(^DIC(DIFRFILE,0)),$G(@DIFRFIA@(DIFRFILE,0,10))]"" X ^(10) I '$T D ERR(3) Q
"RTN","DIFROMS2",41,0)
 ;I $TR($E(@DIFRFIA@(DIFRFILE,0,5)),"NY","ny")="y",$D(^DIC(DIFRFILE)) D ERR(2) Q  ;INSTALL ONLY IF NEW * * PHASING OUT * *
"RTN","DIFROMS2",42,0)
 N %1,DSEC,D,DA,DIC,DIK,DIFRD,DIFRDATA,DIFRFLD,DIFRDIC,DIFRGL,DIFRX,I,X,Y,Z
"RTN","DIFROMS2",43,0)
 S DSEC=$P(DIFR02,"^") ; **>> add file security if new file only <<**
"RTN","DIFROMS2",44,0)
 I 'DSEC,'$D(^DIC(DIFRFILE,0))#2 S DSEC=1 ; Check to see if the file was Deleted during Pre-Install
"RTN","DIFROMS2",45,0)
 ;delete DD wp text for file, field and x-ref description and field tech description
"RTN","DIFROMS2",46,0)
 ;also delete "NM" nodes when installing full DD at specified level
"RTN","DIFROMS2",47,0)
 ; 
"RTN","DIFROMS2",48,0)
 ;^XTMP("XPDI",4861,"^DD",21489,21489,0)="FIELD^^1^2"
"RTN","DIFROMS2",49,0)
 ;^XTMP("XPDI",4861,"^DD",21489,21489,0,"IX","B",21489,.01)=""
"RTN","DIFROMS2",50,0)
 ;^XTMP("XPDI",4861,"^DD",21489,21489,0,"NM","MSC ORDERS HL7")=""
"RTN","DIFROMS2",51,0)
 ;^XTMP("XPDI",4861,"^DD",21489,21489,.01,0)="NAME^RF^^0;1^K:$L(X)>30
"RTN","DIFROMS2",52,0)
 I 'DIFRFDD D
"RTN","DIFROMS2",53,0)
 .K @DIFRSA@("DIFRNI",DIFRFILE)
"RTN","DIFROMS2",54,0)
 .N DIFRD
"RTN","DIFROMS2",55,0)
 .S DIFRD=DIFRFILE
"RTN","DIFROMS2",56,0)
 .F  S DIFRD=$O(@DIFRFIA@(DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",57,0)
 ..Q:$$UP(DIFRSA,DIFRFILE,DIFRD)  ;abort DIFRD subfile if we can't see its parent
"RTN","DIFROMS2",58,0)
 ..S @DIFRSA@("DIFRNI",DIFRFILE,DIFRD)=""
"RTN","DIFROMS2",59,0)
 ..N DIFRNGF,DIFRNGFD
"RTN","DIFROMS2",60,0)
 ..S DIFRNGF=+$G(@DIFRSA@("UP",DIFRFILE,DIFRD,-1))
"RTN","DIFROMS2",61,0)
 ..S DIFRNGFD=.01 F  S DIFRNGFD=$O(@DIFRSA@("^DD",DIFRFILE,DIFRNGF,DIFRNGFD)) Q:DIFRNGFD=""  Q:+$P($G(^(DIFRNGFD,0)),U,2)=DIFRD
"RTN","DIFROMS2",62,0)
 ..I DIFRNGFD'="" K @DIFRSA@("^DD",DIFRFILE,DIFRNGF,DIFRNGFD)
"RTN","DIFROMS2",63,0)
 ..Q
"RTN","DIFROMS2",64,0)
 .Q
"RTN","DIFROMS2",65,0)
 K:DIFRFDD ^DIC(DIFRFILE,"%D")
"RTN","DIFROMS2",66,0)
 S DIFRD=0
"RTN","DIFROMS2",67,0)
 F  S DIFRD=$O(@DIFRSA@("^DD",DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",68,0)
 .I '$D(@DIFRFIA@(DIFRFILE,DIFRD)) S @DIFRFIA@(DIFRFILE,DIFRD)=0 ;MAKE SURE WE WILL CROSS-REFERENCE THIS DD
"RTN","DIFROMS2",69,0)
 .S ^DD(DIFRD,0)="FIELD^NL^"
"RTN","DIFROMS2",70,0)
 .I 'DIFRFDD,$D(@DIFRSA@("DIFRNI",DIFRFILE,DIFRD)) Q
"RTN","DIFROMS2",71,0)
 .K:$D(@DIFRSA@("^DD",DIFRFILE,DIFRD,0,"NM"))\10 ^DD(DIFRD,0,"NM")
"RTN","DIFROMS2",72,0)
 .S DIFRFLD=0
"RTN","DIFROMS2",73,0)
 .F  S DIFRFLD=$O(@DIFRSA@("^DD",DIFRFILE,DIFRD,DIFRFLD)) Q:DIFRFLD'>0  D
"RTN","DIFROMS2",74,0)
 ..K ^DD(DIFRD,DIFRFLD,21),^(23)
"RTN","DIFROMS2",75,0)
 ..S DIFRX=0
"RTN","DIFROMS2",76,0)
 ..F  S DIFRX=$O(@DIFRSA@("^DD",DIFRFILE,DIFRD,DIFRFLD,1,DIFRX)) Q:DIFRX'>0  D
"RTN","DIFROMS2",77,0)
 ...K ^DD(DIFRD,DIFRFLD,1,DIFRX,"%D")
"RTN","DIFROMS2",78,0)
FULL I DIFRFDD F DIFRX="^DIC","^DD" D  ;FULL DEFINITION
"RTN","DIFROMS2",79,0)
 .N X
"RTN","DIFROMS2",80,0)
 .I DIFRX="^DIC",$G(^DIC(DIFRFILE,0))]"" S X=$P(^(0),"^",3,9) ;REMEMBER NODES 3 &4 (LAST^COUNT)
"RTN","DIFROMS2",81,0)
 .D K12:DIFRX="^DD" M @DIFRX=@DIFRSA@(DIFRX,DIFRFILE) D UPDATED^DICATTA(DIFRFILE,-1) ;MOVE IN A WHOLE DD OR DIC NODE
"RTN","DIFROMS2",82,0)
 .I DIFRX="^DIC",$G(X)]"" S $P(^DIC(DIFRFILE,0),"^",3,9)=X
"RTN","DIFROMS2",83,0)
 .I DSEC,$D(@DIFRSA@("SEC",DIFRX,DIFRFILE)) M @DIFRX=@DIFRSA@("SEC",DIFRX,DIFRFILE)
"RTN","DIFROMS2",84,0)
 .Q
"RTN","DIFROMS2",85,0)
PARTIAL I 'DIFRFDD D  ;PARTIAL DEFINITION
"RTN","DIFROMS2",86,0)
 .N DIFRD
"RTN","DIFROMS2",87,0)
 .S DIFRD=0
"RTN","DIFROMS2",88,0)
 .F  S DIFRD=$O(@DIFRSA@("^DD",DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",89,0)
 ..I $D(@DIFRSA@("DIFRNI",DIFRFILE,DIFRD)) Q  ;ABORT
"RTN","DIFROMS2",90,0)
 ..D K12(DIFRD) M ^DD(DIFRD)=@DIFRSA@("^DD",DIFRFILE,DIFRD) ;HERE IS WHERE A WHOLE DD COMES OVER!
"RTN","DIFROMS2",91,0)
 ..D UPDATED^DICATTA(DIFRD,-1) ;SET THE %MSC NODE
"RTN","DIFROMS2",92,0)
SETUP ..I $G(@DIFRSA@("UP",DIFRFILE,DIFRD,-1)) S ^DD(DIFRD,0,"UP")=+^(-1) ;SET THE "UP" NODE, SINCE IT SEEMS NOT TO BE SENT WITH THE REST OF THE ^DD
"RTN","DIFROMS2",93,0)
 ..I DSEC,$D(@DIFRSA@("SEC","^DD",DIFRFILE,DIFRD)) M ^DD(DIFRD)=@DIFRSA@("SEC","^DD",DIFRFILE,DIFRD)
"RTN","DIFROMS2",94,0)
 ..Q
"RTN","DIFROMS2",95,0)
 .Q
"RTN","DIFROMS2",96,0)
 S DIFRD=0 F  S DIFRD=$O(@DIFRFIA@(DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",97,0)
 .I 'DIFRFDD,$D(@DIFRSA@("DIFRNI",DIFRFILE,DIFRD)) Q
"RTN","DIFROMS2",98,0)
 .S D=DIFRD,DIK="A" F  S DIK=$O(^DD(D,DIK)) Q:DIK=""  K ^(DIK)
"RTN","DIFROMS2",99,0)
 .S DA(1)=D,DIK="^DD("_D_"," D IXALL^DIK ;CROSS-REFERENCE THE ^DD THAT WE HAVE BUILT
"RTN","DIFROMS2",100,0)
 .I $D(^DIC(D,"%",0)) S DIK="^DIC(D,""%""," D IXALL^DIK
"RTN","DIFROMS2",101,0)
 .Q
"RTN","DIFROMS2",102,0)
 I 'DIFRFDD D  G IXKEY
"RTN","DIFROMS2",103,0)
 .Q:'$D(@DIFRSA@("^DD",DIFRFILE,DIFRFILE,.01))
"RTN","DIFROMS2",104,0)
 .S $P(@(^DIC(DIFRFILE,0,"GL")_"0)"),"^",2)=$$HDR2P^DIFROMSS(DIFRFILE)
"RTN","DIFROMS2",105,0)
 .Q
"RTN","DIFROMS2",106,0)
 S DIFRGL=^DIC(DIFRFILE,0,"GL"),DIFRDIC=$P(^DIC(DIFRFILE,0),U,1,2)
"RTN","DIFROMS2",107,0)
 S $P(DIFRDIC,"^",2)=@DIFRFIA@(DIFRFILE,0,0)
"RTN","DIFROMS2",108,0)
 I DIFRFDD,+$G(@DIFRFIA@(DIFRFILE,0,"VR")) S DIFRVR=^("VR") D
"RTN","DIFROMS2",109,0)
 .S ^DD(DIFRFILE,0,"VR")=$P(DIFRVR,"^")
"RTN","DIFROMS2",110,0)
 .S ^DD(DIFRFILE,0,"VRPK")=$P(DIFRVR,"^",2)
"RTN","DIFROMS2",111,0)
 .Q
"RTN","DIFROMS2",112,0)
 S DIFRDATA=$D(@(DIFRGL_"0)")),^(0)=DIFRDIC_"^"_$S(DIFRDATA#2:$P(^(0),"^",3,9),1:"^")
"RTN","DIFROMS2",113,0)
 ;
"RTN","DIFROMS2",114,0)
IXKEY ; Bring INDEX and KEY entries
"RTN","DIFROMS2",115,0)
 K ^TMP("DIFROMS2",$J,"TRIG")
"RTN","DIFROMS2",116,0)
 S DIFRD=0
"RTN","DIFROMS2",117,0)
 F  S DIFRD=$O(@DIFRSA@("IX",DIFRFILE,DIFRD)) Q:'DIFRD  D DDIXIN^DIFROMSX(DIFRFILE,DIFRD,DIFRSA)
"RTN","DIFROMS2",118,0)
 K ^TMP("DIFROMS2",$J,"TRIG")
"RTN","DIFROMS2",119,0)
 S DIFRD=0
"RTN","DIFROMS2",120,0)
 F  S DIFRD=$O(@DIFRSA@("KEY",DIFRFILE,DIFRD)) Q:'DIFRD  D DDKEYIN^DIFROMSY(DIFRFILE,DIFRD,DIFRSA)
"RTN","DIFROMS2",121,0)
 ;
"RTN","DIFROMS2",122,0)
DIKZ I $D(^DD(DIFRFILE,0,"DIK")) D
"RTN","DIFROMS2",123,0)
 .N %X,DIKJ,DIR,DMAX,X,Y,DIFRDIKA
"RTN","DIFROMS2",124,0)
 .D EN2^DIKZ(DIFRFILE,"",^DD(DIFRFILE,0,"DIK"),^DD("ROU"),"DIFRDIKA")
"RTN","DIFROMS2",125,0)
 .I $D(DIFRDIKA) M @DIFRSA@("DIKZ",DIFRFILE)=DIFRDIKA
"RTN","DIFROMS2",126,0)
 .S @DIFRSA@("DIKZ",DIFRFILE)=^DD(DIFRFILE,0,"DIK")
"RTN","DIFROMS2",127,0)
 .Q
"RTN","DIFROMS2",128,0)
 I 'DIFRFDD,$D(@DIFRSA@("DIFRNI",DIFRFILE)) D
"RTN","DIFROMS2",129,0)
 .N DIFRD
"RTN","DIFROMS2",130,0)
 .S DIFRD=0
"RTN","DIFROMS2",131,0)
 .F  S DIFRD=$O(@DIFRSA@("DIFRNI",DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",132,0)
 ..N DIFRERR S DIFRERR(1)=DIFRD
"RTN","DIFROMS2",133,0)
 ..D BLD^DIALOG(9512,.DIFRERR) ;"parent DD(s) missing"
"RTN","DIFROMS2",134,0)
 Q
"RTN","DIFROMS2",135,0)
 ;
"RTN","DIFROMS2",136,0)
K12(DIFRD) N DD,D S DIFRD=+$G(DIFRD) ;DIFRD WILL BE THERE FOR A PARTIAL UPDATE
"RTN","DIFROMS2",137,0)
 F DD=0:0 S DD=$O(@DIFRSA@("^DD",DIFRFILE,DD)) Q:'DD  I DIFRD=DD!'DIFRD D
"RTN","DIFROMS2",138,0)
 .F D=0:0 S D=$O(@DIFRSA@("^DD",DIFRFILE,DD,D)) Q:'D  K ^DD(DD,D,12),^(12.1) ;KILL THE 'SCREEN' NODES, BECAUSE THEY MAY NOT BE COMING IN
"RTN","DIFROMS2",139,0)
 Q
"RTN","DIFROMS2",140,0)
 ;
"RTN","DIFROMS2",141,0)
UP(ROOT,FILE,DDN) ;Return 1 or 0 to install
"RTN","DIFROMS2",142,0)
 Q:FILE=DDN 1
"RTN","DIFROMS2",143,0)
 Q:$D(^DD(DDN)) 1
"RTN","DIFROMS2",144,0)
 Q:'$D(@ROOT@("UP",FILE,DDN)) 1
"RTN","DIFROMS2",145,0)
 N MP,PARENT,T,X
"RTN","DIFROMS2",146,0)
 S MP=0,X="",T=0
"RTN","DIFROMS2",147,0)
 F  S X=$O(@ROOT@("UP",FILE,DDN,X)) Q:X=""  S PARENT=+^(X) D  Q:T!(MP)
"RTN","DIFROMS2",148,0)
 .I $D(^DD(PARENT))!$D(@ROOT@("FIA",FILE,PARENT)) S:X>-2 T=1 Q  ;***GFT
"RTN","DIFROMS2",149,0)
 .S MP=1
"RTN","DIFROMS2",150,0)
 .Q
"RTN","DIFROMS2",151,0)
 Q T
"RTN","DIFROMS2",152,0)
 ;
"RTN","DIFROMS2",153,0)
ERR(X) D BLD^DIALOG($P($T(ERR+X),";",5)) Q
"RTN","DIFROMS2",154,0)
 ;;FIA Node Is Set To "No DD Update";1;9503
"RTN","DIFROMS2",155,0)
 ;;Already Exist On Target System (INSTALL ONLY IF NEW);2;9504
"RTN","DIFROMS2",156,0)
 ;;Did Not Pass DD Screen;3;9505
"RTN","DIFROMS2",157,0)
 ;;FIA Array Does Not Exist;4;9511
"RTN","DIFROMS2",158,0)
 ;;Distribution Array Does Not Exist;5;9506
"RTN","DIFROMS2",159,0)
 ;;FIA File Number Invalid;6;9507
"RTN","DIFROMS2",160,0)
 ;;Partial DD/File Does Not Already Exist On Target System;7;9508
"RTN","DINIT221")
0^17^B30462255^B30934674
"RTN","DINIT221",1,0)
DINIT221 ;SFISC/DPC - 'DATA TYPE PROPERTY' AND 'DATA TYPE METHOD' FILE DDs ;10MAR2016
"RTN","DINIT221",2,0)
 ;;22.2;VA FileMan;**2,5**;Jan 05, 2016;Build 28
"RTN","DINIT221",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DINIT221",4,0)
 ;
"RTN","DINIT221",5,0)
 F I=1:2 S X=$T(Q+I) G ^DINIT220:X="" S Y=$E($T(Q+I+1),5,999),X=$E(X,4,999),@X=Y
"RTN","DINIT221",6,0)
Q Q
"RTN","DINIT221",7,0)
 ;;^DIC(.86,0,"GL")
"RTN","DINIT221",8,0)
 ;;=^DI(.86,
"RTN","DINIT221",9,0)
 ;;^DIC("B","DATA TYPE PROPERTY",.86)
"RTN","DINIT221",10,0)
 ;;=
"RTN","DINIT221",11,0)
 ;;^DIC(.86,"%D",0)
"RTN","DINIT221",12,0)
 ;;=^^1^1^
"RTN","DINIT221",13,0)
 ;;^DIC(.86,"%D",1,0)
"RTN","DINIT221",14,0)
 ;;=This file stores the names of different kinds of STRINGS that describe data.
"RTN","DINIT221",15,0)
 ;;^DD(.86,0)
"RTN","DINIT221",16,0)
 ;;=FIELD^^51^12
"RTN","DINIT221",17,0)
 ;;^DD(.86,0,"DDA")
"RTN","DINIT221",18,0)
 ;;=N
"RTN","DINIT221",19,0)
 ;;^DD(.86,0,"ID",1)
"RTN","DINIT221",20,0)
 ;;=W "   ",$P(^(0),U,2)
"RTN","DINIT221",21,0)
 ;;^DD(.86,0,"IX","B",.86,.01)
"RTN","DINIT221",22,0)
 ;;=
"RTN","DINIT221",23,0)
 ;;^DD(.86,0,"IX","C",.86,1)
"RTN","DINIT221",24,0)
 ;;=
"RTN","DINIT221",25,0)
 ;;^DD(.86,0,"NM","DATA TYPE PROPERTY")
"RTN","DINIT221",26,0)
 ;;=
"RTN","DINIT221",27,0)
 ;;^DD(.86,0,"PT",.81101,.01)
"RTN","DINIT221",28,0)
 ;;=
"RTN","DINIT221",29,0)
 ;;^DD(.86,.001,0)
"RTN","DINIT221",30,0)
 ;;=NUMBER^NJ16,2^^ ^K:+X'=X!(X>9999999999999.99)!(X<1)!(X?.E1"."3N.N) X
"RTN","DINIT221",31,0)
 ;;^DD(.86,.001,3)
"RTN","DINIT221",32,0)
 ;;=Type a Number between 1 and 9999999999999.99, 2 Decimal Digits
"RTN","DINIT221",33,0)
 ;;^DD(.86,.001,21,0)
"RTN","DINIT221",34,0)
 ;;=^^1^1^^
"RTN","DINIT221",35,0)
 ;;^DD(.86,.001,21,1,0)
"RTN","DINIT221",36,0)
 ;;=This NUMBER should be number-spaced to your institution, if you create a new one.
"RTN","DINIT221",37,0)
 ;;^DD(.86,.01,0)
"RTN","DINIT221",38,0)
 ;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"RTN","DINIT221",39,0)
 ;;^DD(.86,.01,1,0)
"RTN","DINIT221",40,0)
 ;;=^.1
"RTN","DINIT221",41,0)
 ;;^DD(.86,.01,1,1,0)
"RTN","DINIT221",42,0)
 ;;=.86^B
"RTN","DINIT221",43,0)
 ;;^DD(.86,.01,1,1,1)
"RTN","DINIT221",44,0)
 ;;=S ^DI(.86,"B",$E(X,1,30),DA)=""
"RTN","DINIT221",45,0)
 ;;^DD(.86,.01,1,1,2)
"RTN","DINIT221",46,0)
 ;;=K ^DI(.86,"B",$E(X,1,30),DA)
"RTN","DINIT221",47,0)
 ;;^DD(.86,.01,3)
"RTN","DINIT221",48,0)
 ;;=Enter 3-30 characters, a unique name for the PROPERTY.
"RTN","DINIT221",49,0)
 ;;^DD(.86,.01,21,0)
"RTN","DINIT221",50,0)
 ;;=^^1^1^^
"RTN","DINIT221",51,0)
 ;;^DD(.86,.01,21,1,0)
"RTN","DINIT221",52,0)
 ;;=This NAME will appear in a list of PROPERTIES  (e.g., "FIELD LENGTH")
"RTN","DINIT221",53,0)
 ;;^DD(.86,1,0)
"RTN","DINIT221",54,0)
 ;;=ABBREVIATION^FIX^^0;2^K:$L(X)>10!($L(X)<2)!(X=+$P(X,"E")) X
"RTN","DINIT221",55,0)
 ;;^DD(.86,1,1,0)
"RTN","DINIT221",56,0)
 ;;=^.1
"RTN","DINIT221",57,0)
 ;;^DD(.86,1,1,1,0)
"RTN","DINIT221",58,0)
 ;;=.86^C
"RTN","DINIT221",59,0)
 ;;^DD(.86,1,1,1,1)
"RTN","DINIT221",60,0)
 ;;=S ^DI(.86,"C",$E(X,1,30),DA)=""
"RTN","DINIT221",61,0)
 ;;^DD(.86,1,1,1,2)
"RTN","DINIT221",62,0)
 ;;=K ^DI(.86,"C",$E(X,1,30),DA)
"RTN","DINIT221",63,0)
 ;;^DD(.86,1,1,1,"%D",0)
"RTN","DINIT221",64,0)
 ;;=^^1^1^
"RTN","DINIT221",65,0)
 ;;^DD(.86,1,1,1,"%D",1,0)
"RTN","DINIT221",66,0)
 ;;=This cross reference allows looking up a METHOD by its short ABBREVIATION, if there is one.
"RTN","DINIT221",67,0)
 ;;^DD(.86,1,3)
"RTN","DINIT221",68,0)
 ;;=Answer must be 2-10 characters in length.
"RTN","DINIT221",69,0)
 ;;^DD(.86,1,21,1,0)
"RTN","DINIT221",70,0)
 ;;=Enter an abbreviation for this property.  
"RTN","DINIT221",71,0)
 ;;^DD(.86,11,0)
"RTN","DINIT221",72,0)
 ;;=SHORT DESCRIPTION^F^^11;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT221",73,0)
 ;;^DD(.86,11,3)
"RTN","DINIT221",74,0)
 ;;=Answer must be 1-245 characters in length.
"RTN","DINIT221",75,0)
 ;;^DD(.86,11,21,0)
"RTN","DINIT221",76,0)
 ;;=^^1^1^^
"RTN","DINIT221",77,0)
 ;;^DD(.86,11,21,1,0)
"RTN","DINIT221",78,0)
 ;;=This should tell briefly what the PROPERTY is used for.
"RTN","DINIT221",79,0)
 ;;^DD(.86,21,0)
"RTN","DINIT221",80,0)
 ;;=DESCRIPTION^.861^^21;0
"RTN","DINIT221",81,0)
 ;;^DD(.86,41,0)
"RTN","DINIT221",82,0)
 ;;=DATA TYPE^P.81'^DI(.81,^41;1^Q
"RTN","DINIT221",83,0)
 ;;^DD(.86,41,3)
"RTN","DINIT221",84,0)
 ;;=Enter the data type (numeric or free-text, usually) of this PROPERTY.
"RTN","DINIT221",85,0)
 ;;^DD(.86,41,21,0)
"RTN","DINIT221",86,0)
 ;;=^^1^1^
"RTN","DINIT221",87,0)
 ;;^DD(.86,41,21,1,0)
"RTN","DINIT221",88,0)
 ;;=This should tell the attribute of the PROPERTY.
"RTN","DINIT221",89,0)
 ;;^DD(.86,42,0)
"RTN","DINIT221",90,0)
 ;;=DIR(0)^F^^42;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT221",91,0)
 ;;^DD(.86,42,3)
"RTN","DINIT221",92,0)
 ;;=Answer must be 1-245 characters in length.
"RTN","DINIT221",93,0)
 ;;^DD(.86,42,21,0)
"RTN","DINIT221",94,0)
 ;;=^^1^1^2951214^
"RTN","DINIT221",95,0)
 ;;^DD(.86,42,21,1,0)
"RTN","DINIT221",96,0)
 ;;=Enter the string that goes into DIR(0) for a ^DIR call.
"RTN","DINIT221",97,0)
 ;;^DD(.861,0)
"RTN","DINIT221",98,0)
 ;;=DESCRIPTION SUB-FIELD^^.01^1
"RTN","DINIT221",99,0)
 ;;^DD(.861,0,"NM","DESCRIPTION")
"RTN","DINIT221",100,0)
 ;;=
"RTN","DINIT221",101,0)
 ;;^DD(.861,0,"UP")
"RTN","DINIT221",102,0)
 ;;=.86
"RTN","DINIT221",103,0)
 ;;^DD(.861,.01,0)
"RTN","DINIT221",104,0)
 ;;=DESCRIPTION^W^^0;1^Q
"RTN","DINIT221",105,0)
 ;;^DIC(.87,0,"GL")
"RTN","DINIT221",106,0)
 ;;=^DI(.87,
"RTN","DINIT221",107,0)
 ;;^DIC("B","DATA TYPE METHOD",.87)
"RTN","DINIT221",108,0)
 ;;=
"RTN","DINIT221",109,0)
 ;;^DIC(.87,"%D",0)
"RTN","DINIT221",110,0)
 ;;=^^1^1
"RTN","DINIT221",111,0)
 ;;^DIC(.87,"%D",1,0)
"RTN","DINIT221",112,0)
 ;;=This file stores the names of different kinds of lines of MUMPS code that are used in the definitions of DATA TYPES
"RTN","DINIT221",113,0)
 ;;^DD(.87,0)
"RTN","DINIT221",114,0)
 ;;=FIELD^^.001^4
"RTN","DINIT221",115,0)
 ;;^DD(.87,0,"IX","B",.87,.01)
"RTN","DINIT221",116,0)
 ;;=
"RTN","DINIT221",117,0)
 ;;^DD(.87,0,"NM","DATA TYPE METHOD")
"RTN","DINIT221",118,0)
 ;;=
"RTN","DINIT221",119,0)
 ;;^DD(.87,0,"PT",.81201,.01)
"RTN","DINIT221",120,0)
 ;;=
"RTN","DINIT221",121,0)
 ;;^DD(.87,.001,0)
"RTN","DINIT221",122,0)
 ;;=NUMBER^NJ16,2^^ ^K:+X'=X!(X>9999999999999.99)!(X<1)!(X?.E1"."3N.N) X
"RTN","DINIT221",123,0)
 ;;^DD(.87,.001,3)
"RTN","DINIT221",124,0)
 ;;=Type a Number between 1 and 9999999999999.99, 2 Decimal Digits
"RTN","DINIT221",125,0)
 ;;^DD(.87,.001,21,0)
"RTN","DINIT221",126,0)
 ;;=^^1^1^^
"RTN","DINIT221",127,0)
 ;;^DD(.87,.001,21,1,0)
"RTN","DINIT221",128,0)
 ;;=This NUMBER should be number-spaced to your institution, if you create a new one.
"RTN","DINIT221",129,0)
 ;;^DD(.87,.01,0)
"RTN","DINIT221",130,0)
 ;;=NAME^RF^^0;1^K:$L(X)>50!($L(X)<3)!'(X'?1P.E) X
"RTN","DINIT221",131,0)
 ;;^DD(.87,.01,1,0)
"RTN","DINIT221",132,0)
 ;;=^.1
"RTN","DINIT221",133,0)
 ;;^DD(.87,.01,1,1,0)
"RTN","DINIT221",134,0)
 ;;=.87^B
"RTN","DINIT221",135,0)
 ;;^DD(.87,.01,1,1,1)
"RTN","DINIT221",136,0)
 ;;=S ^DI(.87,"B",$E(X,1,30),DA)=""
"RTN","DINIT221",137,0)
 ;;^DD(.87,.01,1,1,2)
"RTN","DINIT221",138,0)
 ;;=K ^DI(.87,"B",$E(X,1,30),DA)
"RTN","DINIT221",139,0)
 ;;^DD(.87,.01,3)
"RTN","DINIT221",140,0)
 ;;=Answer with a NAME 3-50 characters in length.
"RTN","DINIT221",141,0)
 ;;^DD(.87,.01,21,0)
"RTN","DINIT221",142,0)
 ;;=^^1^1^^
"RTN","DINIT221",143,0)
 ;;^DD(.87,.01,21,1,0)
"RTN","DINIT221",144,0)
 ;;=This NAME will appear in a list of METHODs  (e.g., "INPUT TRANSFORM")
"RTN","DINIT221",145,0)
 ;;^DD(.87,11,0)
"RTN","DINIT221",146,0)
 ;;=SHORT DESCRIPTION^F^^11;E1,245^K:$L(X)>245!($L(X)<1) X
"RTN","DINIT221",147,0)
 ;;^DD(.87,11,3)
"RTN","DINIT221",148,0)
 ;;=Answer must be 1-245 characters in length.
"RTN","DINIT221",149,0)
 ;;^DD(.87,11,21,0)
"RTN","DINIT221",150,0)
 ;;=^^1^1^^
"RTN","DINIT221",151,0)
 ;;^DD(.87,11,21,1,0)
"RTN","DINIT221",152,0)
 ;;=This should tell briefly what the METHOD is used for.
"RTN","DINIT221",153,0)
 ;;^DD(.87,21,0)
"RTN","DINIT221",154,0)
 ;;=DESCRIPTION^.871^^21;0
"RTN","DINIT221",155,0)
 ;;^DD(.871,0)
"RTN","DINIT221",156,0)
 ;;=DESCRIPTION SUB-FIELD^^.01^1
"RTN","DINIT221",157,0)
 ;;^DD(.871,0,"NM","DESCRIPTION")
"RTN","DINIT221",158,0)
 ;;=
"RTN","DINIT221",159,0)
 ;;^DD(.871,0,"UP")
"RTN","DINIT221",160,0)
 ;;=.87
"RTN","DINIT221",161,0)
 ;;^DD(.871,.01,0)
"RTN","DINIT221",162,0)
 ;;=DESCRIPTION^W^^0;1^Q
"RTN","DIR2")
0^2^B25407011^B25328921
"RTN","DIR2",1,0)
DIR2 ;SFISC/XAK - READER (SETUP VARS,REPLACE...WITH) ;2DEC2016
"RTN","DIR2",2,0)
 ;;22.2;VA FileMan;**2,5**;Jan 05, 2016;Build 28
"RTN","DIR2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIR2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIR2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIR2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIR2",7,0)
 ;CALLED FROM THE TOP OF THE READER (DIR)   %P WILL NOT BE DEFINED.
"RTN","DIR2",8,0)
 K Y,% S U="^"
"RTN","DIR2",9,0)
 D DIR("A"),DIR("?"),DIR("L"),DIR("B") ;**
"RTN","DIR2",10,0)
 S %T=$E(DIR(0)),%A=$P(DIR(0),U),%B=$P(DIR(0),U,2),%N=%A'["V"
"RTN","DIR2",11,0)
 K:$D(DIR("A"))=10 DIR("A") K:$D(DIR("?"))=10 DIR("?")
"RTN","DIR2",12,0)
 S %W0=$S($D(DIR("?")):DIR("?"),%T'?.AN:"",'$P($T(@(%T_1)),";",5):"",1:$$EZBLD^DIALOG($P($T(@(%T_1)),";",5)))
"RTN","DIR2",13,0)
 S %A0=$$EZBLD^DIALOG(8041) ;'REQUIRED RESPONSE'
"RTN","DIR2",14,0)
FIELD I %A?.NP1",".ANP S %B1=$P(%A,","),%B2=+$P(%A,",",2) D  G EO:'$D(%A),NN ;SPECIFICATION OF READ IS 'DATA DICTIONARY', SO GET FIELD PROPERTIES
"RTN","DIR2",15,0)
 .I '$D(^DD(%B1,%B2,0)) K %A Q
"RTN","DIR2",16,0)
 .S %B3=^(0),%B=$P(%B3,U,2) I %B["C"!%B K %A Q  ;%B IS USED LATER, IN DIR1 ROUTINE
"RTN","DIR2",17,0)
 .D:'$D(DIR("B")) DA^DIRQ:$D(DA)#2
"RTN","DIR2",18,0)
 .S:'$D(DIR("A")) %P=$$LABEL^DIALOGZ(%B1,%B2)_": " S:$P(%B3,U,2)'["R" %A=%A_"O"
"RTN","DIR2",19,0)
 .S %T=1 ;IN DIR1, "1"=DATA DICTIONARY
"RTN","DIR2",20,0)
 .N I S I=+$P(%B,"t",2),I=$P($G(^DI(.81,I,0)),U,2) I I="S" S I=$$GETPROP^DIETLIBF(%B1,%B2,"SET OF CODES") D:I]"" S0(I):%A'["A" ;if this a user-defined data type read
"RTN","DIR2",21,0)
 I "FSYENDLP"'[%T G EO
"RTN","DIR2",22,0)
 S %B1=$P(%B,":"),%B2=$P(%B,":",2),%B3=$P(%B,":",3)
"RTN","DIR2",23,0)
 S:'$L(%B2) %B2=$S(%T="D":9991231,%T="F":245,1:999999999999)
"RTN","DIR2",24,0)
 I %T="F",%B2>245 S %B2=245
"RTN","DIR2",25,0)
 I %T="Y" S %B=$$EZBLD^DIALOG(7003)
"RTN","DIR2",26,0)
 I %T="D" S %DT=$P(%B3,"A")_$P(%B3,"A",2)
"RTN","DIR2",27,0)
 I %T="D",'$D(DIR("?")) S %W0=%W0_$S(%B3["R":$$EZBLD^DIALOG(8043),%B3["T":$$EZBLD^DIALOG(8044),1:"")
"RTN","DIR2",28,0)
 I %T="D" S %D1=%B1,%D2=%B2 I %B["NOW"!(%B["DT") D NOW^%DTC K %I,%H S DT=X S:%B1["NOW" %B1=% S:%B1["DT" %B1=X S:%B2["NOW" %B2=% S:%B2["DT" %B2=X K %
"RTN","DIR2",29,0)
 I %T="P" S %B1=$S('%B1:U_%B1,'$D(^DIC(+%B1,0,"GL")):U,1:^("GL")) G EO:%B1=U,EO:'$D(@(%B1_"0)")) I '$D(DIR("A")) S %P=$$EZBLD^DIALOG(8042,$O(^DD(+$P(^(0),U,2),0,"NM",0))) Q
"RTN","DIR2",30,0)
NN I %T="S" D S0(%B):%A'["A"
"RTN","DIR2",31,0)
 Q:$D(%P)
"RTN","DIR2",32,0)
 S %P="" I %A["A" S:$D(DIR("A")) %P=DIR("A") Q
"RTN","DIR2",33,0)
 I '$D(DIR("A")) S %P=$$EZBLD^DIALOG($P($T(@%T),";",4)) I %T="D" S %P=%P_$S(%B3["R":$$EZBLD^DIALOG(8043),%B3["T":$$EZBLD^DIALOG(8044),1:"")
"RTN","DIR2",34,0)
 S:$D(DIR("A")) %P=$S(%T="Y":DIR("A")_"? ",%T="S":$$EZBLD^DIALOG(8045,DIR("A")),1:DIR("A")_": ")
"RTN","DIR2",35,0)
 I "LND"'[%T Q  ;'LIST', 'NUMERIC', 'DATE' types
"RTN","DIR2",36,0)
 I $L(%B1) S %P=%P_" ("_$S(%T="D":$$DATE^DIUTL(%B1)_"-"_$$DATE^DIUTL(%B2),1:%B1_"-"_%B2)_")" ;**
"RTN","DIR2",37,0)
 S %P=%P_$S("?: "[$E(%P,$L(%P)):"",1:":")_" "
"RTN","DIR2",38,0)
 Q
"RTN","DIR2",39,0)
 ;
"RTN","DIR2",40,0)
 ;
"RTN","DIR2",41,0)
S0(%B) ;CREATE PROMPT FOR READING A 'SET' TYPE.  %B is the SET OF CODES
"RTN","DIR2",42,0)
 I '$D(%P) S %P=$S($D(DIR("A")):DIR("A")_": ",%A["B":$$EZBLD^DIALOG(8046),1:$$EZBLD^DIALOG($P($T(S),";",4)))
"RTN","DIR2",43,0)
 Q:%A'["B"  ;"B" PARAMETER SHOWS THE CHOICES SEPARATED BY "/"S
"RTN","DIR2",44,0)
 S %P=%P_" ("
"RTN","DIR2",45,0)
 I %B'[":",$O(DIR("C",""))]"" S %I="" F  S %I=$O(DIR("C",%I)) Q:%I=""  D
"RTN","DIR2",46,0)
 . N Y S Y=$P(DIR("C",%I),":") Q:Y=""
"RTN","DIR2",47,0)
 . I $D(DIR("S"))#2 X DIR("S") E  Q
"RTN","DIR2",48,0)
 . S %P=%P_Y_"/"
"RTN","DIR2",49,0)
 E  F %I=1:1 Q:$P(%B,";",%I,999)=""  D
"RTN","DIR2",50,0)
 . N Y S Y=$P($P(%B,";",%I),":") Q:Y=""
"RTN","DIR2",51,0)
 . I $D(DIR("S"))#2 X DIR("S") E  Q
"RTN","DIR2",52,0)
 . S %P=%P_Y_"/"
"RTN","DIR2",53,0)
 S %P=$E(%P,1,$L(%P)-(%P?.E1"/"))_"): "
"RTN","DIR2",54,0)
 Q
"RTN","DIR2",55,0)
 ;
"RTN","DIR2",56,0)
 ;
"RTN","DIR2",57,0)
EO S %T="",Y=-1 Q  ;ABORT
"RTN","DIR2",58,0)
 ;
"RTN","DIR2",59,0)
DIR(DIALA) ;** INSERTS DIALOGS INTO DIR ARRAY
"RTN","DIR2",60,0)
 N DIALN,DIALP
"RTN","DIR2",61,0)
 S DIALN=$G(DIR("DIALOG",DIALA))
"RTN","DIR2",62,0)
 Q:'$D(^DI(.84,0))  Q:+DIALN'=DIALN  Q:'$D(^(DIALN,2))  ;GIVES US A MAKED REFERENCE PRIOR TO CALLING $$EZBLD^DIALOG
"RTN","DIR2",63,0)
 I $D(DIR("DIALOG",DIALA))>9 M DIALP=DIR("DIALOG",DIALA)
"RTN","DIR2",64,0)
 K DIR(DIALA) D BLD^DIALOG(DIALN,.DIALP,,"DIR(DIALA)","F")
"RTN","DIR2",65,0)
 Q
"RTN","DIR2",66,0)
 ;
"RTN","DIR2",67,0)
 ;
"RTN","DIR2",68,0)
RW ; Replace...With...   ENTER WITH 'Y', EXIT WITH 'Y' CHANGED.   CALLED FROM MANY ROUTINES
"RTN","DIR2",69,0)
 N %,L,DINAKED S DINAKED=$NA(^(0)),DG=Y S:$D(DTIME)[0 DTIME=999
"RTN","DIR2",70,0)
A W:$X>50 ! K DTOUT W $$EZBLD^DIALOG(8047) R X:DTIME E  S DTOUT=1,X=""
"RTN","DIR2",71,0)
 G B:X="",Q:X?1."^",Q:$E(X)=U&($D(DIRWP)[0)&(Y'[X),Q:X?."?",Q:X="@"
"RTN","DIR2",72,0)
 I X="END"!(X="end")!(X=$$UP^DILIBF($$EZBLD^DIALOG(7097))) S L=0 D H S:'%&'$D(DTOUT) Y=Y_X G A ;**CCO/NI 'END'
"RTN","DIR2",73,0)
 I Y[X S D=X,L=$L(X) D H S:'%&'$D(DTOUT) Y=$P(Y,D,1)_X_$P(Y,D,2,999) G A
"RTN","DIR2",74,0)
 S D=$P(X,"...",1),DH=$F(Y,D) I DH S X=$P(X,"...",2,99),X=$S(X="":$L(Y)+1,1:$F(Y,X,DH)) I X S DH=DH-$L(D)-1,D=X,L=D-DH-1 D H S:'%&'$D(DTOUT) Y=$E(Y,1,DH)_X_$E(Y,D,999) G A
"RTN","DIR2",75,0)
 W $C(7)," ??" G A
"RTN","DIR2",76,0)
 ;
"RTN","DIR2",77,0)
H N DIMAX
"RTN","DIR2",78,0)
WITH W $$EZBLD^DIALOG(8048) R X:DTIME E  S DTOUT=1,X="",%=0 W $C(7)," ??" Q
"RTN","DIR2",79,0)
 S DIMAX=$G(^DD("STRING_LIMIT"),255)-10,%=$L(Y)-L+$L(X)>DIMAX
"RTN","DIR2",80,0)
 I % W $C(7),$S($L(Y)-L'>DIMAX:$$EZBLD^DIALOG(349,($L(Y)-L+$L(X)-DIMAX)),X'=U:$$EZBLD^DIALOG(350),1:" ??") Q:$L(Y)-L>DIMAX&(X=U)  G WITH
"RTN","DIR2",81,0)
 Q:X?.ANP  W $C(7)," ??" G WITH
"RTN","DIR2",82,0)
 ;
"RTN","DIR2",83,0)
B W:$D(DTOUT) $C(7) I DG'=Y S X=Y W !?3 W X I X="" S X="@"
"RTN","DIR2",84,0)
 D:$D(DINAKED)
"RTN","DIR2",85,0)
 .I $D(@DINAKED)
"RTN","DIR2",86,0)
Q Q
"RTN","DIR2",87,0)
 ;
"RTN","DIR2",88,0)
F ;;Enter response: ;8051
"RTN","DIR2",89,0)
S ;;Enter response: ;8051
"RTN","DIR2",90,0)
Y ;;Enter Yes or No: ;8052
"RTN","DIR2",91,0)
E ;;Press RETURN to continue or '^' to exit: ;8053
"RTN","DIR2",92,0)
N ;;Enter a number;8054
"RTN","DIR2",93,0)
D ;;Enter a date;8055
"RTN","DIR2",94,0)
L ;;Enter a list or range of numbers;8056
"RTN","DIR2",95,0)
P ;;Select: ;8057
"RTN","DIR2",96,0)
F1 ;;;This response can be free text;9031
"RTN","DIR2",97,0)
S1 ;;;Enter a code from the list.;9032
"RTN","DIR2",98,0)
Y1 ;;;Enter either 'Y' or 'N'.;9040
"RTN","DIR2",99,0)
E1 ;;;Enter either RETURN or '^';9033
"RTN","DIR2",100,0)
N1 ;;;This response must be a number;9034
"RTN","DIR2",101,0)
D1 ;;;This response must be a date;9035
"RTN","DIR2",102,0)
L1 ;;;This response must be a list or range, e.g., 1,3,5 or 2-4,8;9036
"RTN","DIR2",103,0)
 ;
"RTN","DIR2",104,0)
 ;#349   String too long by |nuber| character(s)!
"RTN","DIR2",105,0)
 ;#350   String too long! '^' to quit.
"RTN","DIR2",106,0)
 ;#8041  This is a required response...
"RTN","DIR2",107,0)
 ;#8042  Select |1|
"RTN","DIR2",108,0)
 ;#8043  and time
"RTN","DIR2",109,0)
 ;#8044  and optional time
"RTN","DIR2",110,0)
 ;#8045  Enter |1|
"RTN","DIR2",111,0)
 ;#8046  Select one of the following
"RTN","DIR2",112,0)
 ;#8047  Replace
"RTN","DIR2",113,0)
 ;#8048  With
"RTN","DITIME")
0^18^B1091483^B1307675
"RTN","DITIME",1,0)
DITIME ;O-OIFO/GFT - INPUT TRANSFROM FOR 'TIME' DATA TYPE ;05OCT2016
"RTN","DITIME",2,0)
 ;;22.2;VA FileMan;**2,5**;Jan 05, 2016;Build 28
"RTN","DITIME",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DITIME",4,0)
 ;
"RTN","DITIME",5,0)
 ;ENTER WITH X
"RTN","DITIME",6,0)
 N Y,%DT I X?1.A1(1"+",1"-")1.N1(1"D",1"M",1"W") G KX  ;NO DAYS, WEEKS, OR MONTHS
"RTN","DITIME",7,0)
 I X?.N D  Q:'$D(X)
"RTN","DITIME",8,0)
 .S Y=$G(DIPA("SECONDS ALLOWED"))
"RTN","DITIME",9,0)
 .I 'Y S Y=$E(X,5,999),X=$E(X,1,4) I Y'="00"&(Y]"") K X Q
"RTN","DITIME",10,0)
 .S X=$E(X,1,6)
"RTN","DITIME",11,0)
 S:X?1N.E X="T@"_X
"RTN","DITIME",12,0)
 S %DT=$P("S",U,$G(DIPA("SECONDS ALLOWED"))'=0)_"R"
"RTN","DITIME",13,0)
 D ^%DT
"RTN","DITIME",14,0)
 S X=$E(Y_"000000",9,14)
"RTN","DITIME",15,0)
 G:Y<0 KX
"RTN","DITIME",16,0)
 I '$D(DIQUIET) S Y=X X $$METH4TYP^DIETLIBF("OUTPUT TRANSFORM",13) W "  (",Y,")"
"RTN","DITIME",17,0)
 Q
"RTN","DITIME",18,0)
KX K X Q
"RTN","DITIME",19,0)
 ;
"RTN","DITIME",20,0)
 ;
"RTN","DIV")
0^3^B18251978^B17758582
"RTN","DIV",1,0)
DIV ;SFISC/GFT - VERIFY FLDS ;5DEC2016
"RTN","DIV",2,0)
 ;;22.2;VA FileMan;**5**;Jan 05, 2016;Build 28
"RTN","DIV",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIV",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIV",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIV",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIV",7,0)
 ;;GFT;**7,1003,1004,1015,1045,1057**
"RTN","DIV",8,0)
 ;
"RTN","DIV",9,0)
 N DIUTIL,DIVDAT,DIVFIL,DIVMODE,DIVPG,POP S DIUTIL="VERIFY FIELDS"
"RTN","DIV",10,0)
 K J
"RTN","DIV",11,0)
 S V=0,P=0,I(0)=DIU,@("(A,J(0))=+$P("_DIU_"0),U,2)")
"RTN","DIV",12,0)
 I $O(^(0))'>0 W $C(7),"  NO ENTRIES ON FILE!" Q
"RTN","DIV",13,0)
DIC S DIC="^DD("_A_",",DIC(0)="QEZ",DIC("W")="W:$P(^(0),U,2) ""  (multiple)"""
"RTN","DIV",14,0)
 S DIC("S")="S %=$P(^(0),U,2) I %'[""C"",$S('%:1,1:$P(^DD(+%,.01,0),U,2)'[""W"")"
"RTN","DIV",15,0)
 W !,"VERIFY WHICH "_$P(^DD(A,0),U)_": " R X:DTIME Q:U[X
"RTN","DIV",16,0)
 I X="ALL" D ALL G Q:$D(DIRUT) I Y S DIVMODE="A" D DEVSEL G:$G(POP) Q D INIT,ALLFLDS(A) G Q^DIVR:DQI'>0!$D(DIRUT)
"RTN","DIV",17,0)
 D ^DIC K DQI,^UTILITY("DIVR",$J)
"RTN","DIV",18,0)
 I Y<0 W:X?1."?" !?3,"You may enter ALL to verify every field at this level of the file.",! G DIC
"RTN","DIV",19,0)
 S DR=$P(Y(0),U,2) I DR S J(V)=A,P=+Y,V=V+1,A=+DR,I(V)=$P($P(Y(0),U,4),";") S:+I(V)'=I(V) I(V)=""""_I(V)_"""" G DIC
"RTN","DIV",20,0)
 D DEVSEL G:$G(POP) Q D INIT
"RTN","DIV",21,0)
 D EN^DIVR(A,+Y)
"RTN","DIV",22,0)
Q K DIR,DIRUT,N,P
"RTN","DIV",23,0)
 Q
"RTN","DIV",24,0)
 ;
"RTN","DIV",25,0)
ALL S DIR(0)="Y",DIR("??")="^D H^DIV"
"RTN","DIV",26,0)
 S DIR("A")="DO YOU MEAN ALL THE FIELDS IN THE FILE"
"RTN","DIV",27,0)
 D ^DIR K DIR S X="ALL"
"RTN","DIV",28,0)
 Q
"RTN","DIV",29,0)
 ;
"RTN","DIV",30,0)
 ;
"RTN","DIV",31,0)
 ;
"RTN","DIV",32,0)
ALLPOINT ;
"RTN","DIV",33,0)
 N A,DIRUT D DEVSEL Q:$G(POP)
"RTN","DIV",34,0)
 F A=1.9:0 S A=$O(^DIC(A)) Q:'A  D INIT,ALLFLDS(A,"PV") Q:$D(DIRUT)
"RTN","DIV",35,0)
 Q
"RTN","DIV",36,0)
 ;
"RTN","DIV",37,0)
ALLFLDS(A,DIVRTYPE) S DQI=0 F  S DQI=$O(^DD(A,DQI)) Q:DQI'>0  S Y=DQI,Y(0)=^(Y,0),DR=$P(Y(0),U,2) D  Q:$D(DIRUT)
"RTN","DIV",38,0)
 .I DR Q:$P(^DD(+DR,.01,0),U,2)["W"  D NEXTLVL Q
"RTN","DIV",39,0)
 .I $G(DIVRTYPE)]"",$TR(DR,DIVRTYPE)=DR Q
"RTN","DIV",40,0)
 .I DR["C" Q
"RTN","DIV",41,0)
 .I $Y+6>IOSL S $Y=IOSL D LF^DIVR
"RTN","DIV",42,0)
 .W !!!,"--",A,",",Y D EN^DIVR(A,Y,1) Q
"RTN","DIV",43,0)
 Q
"RTN","DIV",44,0)
NEXTLVL ;
"RTN","DIV",45,0)
 N A,P,DE,DA,DQI,I,J,V S DQI=0
"RTN","DIV",46,0)
 S A=+DR,P=+Y N Y,DR D IJ^DIVU(A)
"RTN","DIV",47,0)
 D ALLFLDS(A,$G(DIVRTYPE))
"RTN","DIV",48,0)
 Q
"RTN","DIV",49,0)
H W !!?5,"YES means that every field at this level in the file will"
"RTN","DIV",50,0)
 W !?5,"be checked to see if it conforms to the input transform."
"RTN","DIV",51,0)
 W !!?5,"NO means that ALL will be used to lookup a field in the"
"RTN","DIV",52,0)
 W !?5,"file which begins with the letters ALL, e.g., ALLERGIES."
"RTN","DIV",53,0)
 Q
"RTN","DIV",54,0)
VER(DIVRFILE,DIVRREC,DIVRDR,DIVROUT) ;
"RTN","DIV",55,0)
 ;DIVRFILE = (sub)file number
"RTN","DIV",56,0)
 ;DIVRREC = template, or ien-string of records to be verified
"RTN","DIV",57,0)
 ;DIVRDR = list of fields to be verified (defaults to ALL)
"RTN","DIV",58,0)
 ;DIVROUT = output array listing the records that had problems
"RTN","DIV",59,0)
 G ^DIVR1
"RTN","DIV",60,0)
DIVROUT I $G(DIVROUT)="" D X Q
"RTN","DIV",61,0)
 I $E(DIVROUT)="[" D  Q
"RTN","DIV",62,0)
 . N Y,COUNT,Z
"RTN","DIV",63,0)
 . D DIBT^DIVU(DIVROUT,.Y,DIVRFI0) Q:Y'>0
"RTN","DIV",64,0)
 . K ^DIBT(+Y,1)
"RTN","DIV",65,0)
 . S (COUNT,Z)=0
"RTN","DIV",66,0)
 . F  S Z=$O(^TMP("DIVR1",$J,Z)) Q:Z=""  S COUNT=COUNT+1,^DIBT(+Y,1,Z)=""
"RTN","DIV",67,0)
 . I COUNT S ^DIBT(+Y,"QR")=DT_U_COUNT
"RTN","DIV",68,0)
 . D X
"RTN","DIV",69,0)
 M @DIVROUT@(1)=^TMP("DIVR1",$J)
"RTN","DIV",70,0)
X K ^TMP("DIVR1",$J)
"RTN","DIV",71,0)
 Q
"RTN","DIV",72,0)
 ;
"RTN","DIV",73,0)
INIT ;Get header info and print first header
"RTN","DIV",74,0)
 N %,%H,X,Y
"RTN","DIV",75,0)
 K DIRUT
"RTN","DIV",76,0)
 ;
"RTN","DIV",77,0)
 S %H=$H D YX^%DTC
"RTN","DIV",78,0)
 S DIVDAT=$P(Y,"@")_"  "_$P($P(Y,"@",2),":",1,2)_"    PAGE "
"RTN","DIV",79,0)
 ;
"RTN","DIV",80,0)
 I $D(^DIC(A,0))#2 S DIVFIL=$P(^(0),U)_" FILE (#"_A_")"
"RTN","DIV",81,0)
 E  I $D(^DD(A,0,"NM")) S DIVFIL=$O(^("NM",""))_" SUB-FILE (#"_A_")"
"RTN","DIV",82,0)
 E  S DIVFIL=""
"RTN","DIV",83,0)
 ;
"RTN","DIV",84,0)
 U IO
"RTN","DIV",85,0)
 W:IOST?1"C-".E @IOF
"RTN","DIV",86,0)
 D HDR^DIVR
"RTN","DIV",87,0)
 Q
"RTN","DIV",88,0)
 ;
"RTN","DIV",89,0)
DEVSEL ;Prompt for device
"RTN","DIV",90,0)
 D  Q:$G(POP)
"RTN","DIV",91,0)
 . N %ZIS,A,I,J,T,V,X,Y,Z
"RTN","DIV",92,0)
 . S %ZIS=$E("Q",$D(^%ZTSK)>0)
"RTN","DIV",93,0)
 . W ! D ^%ZIS
"RTN","DIV",94,0)
 ;
"RTN","DIV",95,0)
 I $D(IO("Q")),$D(^%ZTSK) D  S POP=1
"RTN","DIV",96,0)
 . S ZTRTN="ENQUEUE^DIV"
"RTN","DIV",97,0)
 . S ZTDESC="Verify Fields Report for File #"_A
"RTN","DIV",98,0)
 . N %,DIVA,DIVI,DIVJ,DIVT,DIVV,DIVY,DIVZ
"RTN","DIV",99,0)
 . M DIVA=A,DIVI=I,DIVJ=J,DIVT=T,DIVV=V,DIVY=Y,DIVZ=Z
"RTN","DIV",100,0)
 . F %="DIU","DIUTIL","DIVMODE","DIVA","DIVI","DIVI(","DIVJ","DIVJ(","DIVV","DIVZ" S ZTSAVE(%)=""
"RTN","DIV",101,0)
 . I $G(DIVMODE)'="A" F %="DIVY","DIVY(","DR" S ZTSAVE(%)=""
"RTN","DIV",102,0)
 . I $G(DIVMODE)="C" F %="DA","DDC","DIFLD","DIVT" S ZTSAVE(%)=""
"RTN","DIV",103,0)
 . D ^%ZTLOAD
"RTN","DIV",104,0)
 . I $D(ZTSK)#2 W !,"Report queued!",!,"Task number: "_$G(ZTSK),!
"RTN","DIV",105,0)
 . E  W !,"Report canceled!",!
"RTN","DIV",106,0)
 . K ZTSK
"RTN","DIV",107,0)
 . S IOP="HOME" D ^%ZIS
"RTN","DIV",108,0)
 Q
"RTN","DIV",109,0)
 ;
"RTN","DIV",110,0)
ENQUEUE ;Entry point for queued reports
"RTN","DIV",111,0)
 M A=DIVA,I=DIVI,J=DIVJ,T=DIVT,V=DIVV,Y=DIVY,Z=DIVZ
"RTN","DIV",112,0)
 K DIVA,DIVI,DIVJ,DIVT,DIVV,DIVY,DIVZ
"RTN","DIV",113,0)
 S Q="""",S=";"
"RTN","DIV",114,0)
 ;
"RTN","DIV",115,0)
 D INIT
"RTN","DIV",116,0)
 I $G(DIVMODE)="A" D ALLFLDS(A),Q^DIVR Q
"RTN","DIV",117,0)
 I $G(DIVMODE)="C" D EN^DIVR(A,DA) Q
"RTN","DIV",118,0)
 D EN^DIVR(A,+Y)
"RTN","DIV",119,0)
 Q
"RTN","DIVR")
0^4^B54678910^B53639781
"RTN","DIVR",1,0)
DIVR ;O-OIFO/GFT - VERIFY FIELD DIFLD, DATA DICTIONARY A ;5DEC2016
"RTN","DIVR",2,0)
 ;;22.2;VA FileMan;**2,5**;Jan 05, 2016;Build 28
"RTN","DIVR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIVR",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIVR",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIVR",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIVR",7,0)
 ;;GFT;**7,999,1004,1014,1015,1038,1041,1053,1054**
"RTN","DIVR",8,0)
 ;
"RTN","DIVR",9,0)
 ;'DQI' PARAMETER IS '1' WHEN CALLED FROM ALLFLDS+4^DIV
"RTN","DIVR",10,0)
BEGIN I $D(DIVFIL)[0 N DIVDAT,DIVFIL,DIVMODE,DIVPG,POP D  G:$G(POP) Q^DIV
"RTN","DIVR",11,0)
 . S DIVMODE="C"
"RTN","DIVR",12,0)
 . D DEVSEL^DIV Q:$G(POP)
"RTN","DIVR",13,0)
 . D INIT^DIV
"RTN","DIVR",14,0)
 N W,I,J,V,DIVREQK,DIVTYPE,DIVTMP,DG,DIVRIX,T,TYP,E,DDC,DIVZ,DE,DR,P4,M,DIDANGL,DIVROUTT,DIPA
"RTN","DIVR",15,0)
 S TYP=$P($G(^DD(A,DIFLD,0)),U,2) I TYP="" Q
"RTN","DIVR",16,0)
 D IJ^DIUTL(A) S V=$O(J(""),-1)
"RTN","DIVR",17,0)
 F T="N","D","P","S","V","F" Q:TYP[T
"RTN","DIVR",18,0)
 F W="FREE TEXT","SET OF CODES","DATE","NUMERIC","POINTER","VARIABLE POINTER","K","" I TYP[$E(W) S:W="K" T=W,W="MUMPS" Q
"RTN","DIVR",19,0)
 I TYP["C" Q
"RTN","DIVR",20,0)
TYPE S %=+$P(TYP,"t",2) I %,$D(^DI(.81,%,0)) S T="F",W=$P(^(0),U)_" Data Type"
"RTN","DIVR",21,0)
 W "--FIELD #",DIFLD," ",$$LABEL^DIALOGZ(A,DIFLD),"--  (",W,")"
"RTN","DIVR",22,0)
 S W="W !,""ENTRY#"_$S(V:"'S",1:"")_""",?10,"""_$$LABEL^DIALOGZ(A,.01)_""",?40,""ERROR"",!"
"RTN","DIVR",23,0)
 D LF Q:$D(DIRUT)  S T=$E(T),DIVZ=$P(^DD(A,DIFLD,0),U,3),DDC=$P(^(0),U,5,999),DR=$P(^(0),U,2),P4=$P(^(0),U,4)
"RTN","DIVR",24,0)
 I DR["t" S DDC="N DIQUIET S DIQUIET=1 "_$$VALINT^DIETLIBF(A,DIFLD),DIVROUTT=$$OUTPUT^DIETLIBF(A,DIFLD)
"RTN","DIVR",25,0)
OUTT E  I $G(^DD(A,DIFLD,2))]"" S DIVROUTT=^(2)
"RTN","DIVR",26,0)
 S DIVREQK=$D(^DD("KEY","F",A,DIFLD))>9
"RTN","DIVR",27,0)
 I $D(^DD("IX","F",A,DIFLD)) D
"RTN","DIVR",28,0)
 . S DIVTYPE=T,T="INDEX",DIVROOT=$$FROOTDA^DIKCU(A)
"RTN","DIVR",29,0)
 . D LOADVER^DIVC(A,DIFLD,"DIVTMP")
"RTN","DIVR",30,0)
 F %=0:0 S %=$O(^DD(A,DIFLD,1,%)) Q:%'>0  I $D(^(%,1)) D
"RTN","DIVR",31,0)
 .N X S X=$P(^(0),U,2,9) Q:X'?1.A
"RTN","DIVR",32,0)
 .I ^(2)?1"K ^".E1")",^(1)?1"S ^".E D
"RTN","DIVR",33,0)
 ..S DG(%)="I $D("_$E(^(2),3,99)_"),"_$E(^(1),3,99) I 'V S DIVRIX(X)="" ;Only looks at top-level X-refs
"RTN","DIVR",34,0)
UNIQ ..I DR["U",DIFLD=.01,X="B" S DDC="K % M %="_DIU_"""B"",X) K %(DA) K:$O(%(0)) X I $D(X) "_DDC
"RTN","DIVR",35,0)
 I T'="INDEX",'$D(^(+$O(^DD(A,DIFLD,1,0)),1)) G E
"RTN","DIVR",36,0)
 I T'="INDEX",'$D(DG) W $C(7)_"(CANNOT CHECK"
"RTN","DIVR",37,0)
 E  W "(CHECKING"
"RTN","DIVR",38,0)
 W " CROSS-REFERENCE)" D LF I $D(DIRUT) Q:$D(DQI)  G Q
"RTN","DIVR",39,0)
 I $D(DG) D
"RTN","DIVR",40,0)
 . I T="INDEX" S E=DIVTYPE,DIVTYPE="IX"
"RTN","DIVR",41,0)
 . E  S E=T,T="IX"
"RTN","DIVR",42,0)
E F Y=$F(DDC,"%DT="""):1 S X=$E(DDC,Y) Q:""""[X  I X="E" S $E(DDC,Y)="" Q  ;Take out "E"
"RTN","DIVR",43,0)
 I DR["*" S DDC="Q" I $D(^DD(A,DIFLD,12.1)) X ^(12.1) I $D(DIC("S")) S DDC(1)=DIC("S"),DDC="X DDC(1) E  K X"
"RTN","DIVR",44,0)
 D 0 S X=P4,Y=$P(X,";",2),X=$P(X,";")
"RTN","DIVR",45,0)
 I +X'=X S X=""""_X_"""" I Y="" S DE=DE_"S X=DA D R" G XEC
"RTN","DIVR",46,0)
 S DIDANGL="S X=$S($D(^(DA,"_X_")):$"_$S(Y:"P(^("_X_"),U,"_Y,1:"E(^("_X_"),"_$E(Y,2,9))_"),1:"""")",M=DIDANGL_" D R"
"RTN","DIVR",47,0)
 I $L(M)+$L(DE)>250 S DE=DE_"X DE(1)",DE(1)=M
"RTN","DIVR",48,0)
 E  S DE=DE_M
"RTN","DIVR",49,0)
XEC K DIC,M,Y XECUTE DE_"  Q:$G(DIRUT)" Q:$G(DIRUT)
"RTN","DIVR",50,0)
 ;
"RTN","DIVR",51,0)
DANGL S DIVRIX="A" F  S DIVRIX=$O(DIVRIX(DIVRIX)) Q:DIVRIX=""  D  Q:$G(DIRUT)  ;LOOK FOR BAD CROSS-REFERENCES
"RTN","DIVR",52,0)
 .N IX,SN,SX,DA
"RTN","DIVR",53,0)
 .S IX=I(0)_""""_DIVRIX_""")",SN=$QL(IX)
"RTN","DIVR",54,0)
 .K ^UTILITY("DIVRIX",$J)
"RTN","DIVR",55,0)
 .F  S IX=$Q(@IX) Q:IX=""  Q:$QS(IX,SN)'=DIVRIX  D  Q:$G(DIRUT)
"RTN","DIVR",56,0)
 ..I @IX]"" Q
"RTN","DIVR",57,0)
 ..S DA=$QS(IX,SN+2),SX=" """_DIVRIX_""" CROSS-REF '"_$QS(IX,SN+1)_"'"
"RTN","DIVR",58,0)
 ..I '$D(@(I(0)_DA_")")) S M="DANGLING"_SX D X Q
"RTN","DIVR",59,0)
 ..X DIDANGL I $E($QS(IX,SN+1),1,30)'=$E(X,1,30) S M="WRONG"_SX D X Q
"RTN","DIVR",60,0)
 ..I $D(^UTILITY("DIVRIX",$J,DA)) S M="DUPLICATE"_SX D X
"RTN","DIVR",61,0)
 ..S ^(DA)=""
"RTN","DIVR",62,0)
 Q:$D(DQI)
"RTN","DIVR",63,0)
 W:'$D(M) $C(7),!,"NO PROBLEMS"
"RTN","DIVR",64,0)
Q S M=$O(^UTILITY("DIVR",$J,0)),E=$O(^(M)),DK=J(0)
"RTN","DIVR",65,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DIVR",66,0)
 E  I $T(^%ZISC)]"" D
"RTN","DIVR",67,0)
 . D ^%ZISC
"RTN","DIVR",68,0)
 E  X $G(^%ZIS("C"))
"RTN","DIVR",69,0)
 G:'E!$D(DIRUT)!$D(ZTQUEUED) QX K DIBT,DISV D
"RTN","DIVR",70,0)
 . N C,D,I,J,L,O,Q,S,D0,DDA,DICL,DIFLD,DIU0
"RTN","DIVR",71,0)
 . W ! D S2^DIBT1 Q  ;STORE ENTRIES IN TEMPLATE??
"RTN","DIVR",72,0)
 S DDC=0 I '$D(DIRUT) G Q:Y<0 F E=0:0 S E=$O(^UTILITY("DIVR",$J,E)) Q:E=""  S DDC=DDC+1,^DIBT(+Y,1,E)=""
"RTN","DIVR",73,0)
 S:DDC>0 ^DIBT(+Y,"QR")=DT_U_DDC
"RTN","DIVR",74,0)
QX K DIVINDEX,DIVKEY,DIVREQK,DIVROOT,DIVTMP,DIVTYPE
"RTN","DIVR",75,0)
 K ^UTILITY("DIVR",$J),^UTILITY("DIVRIX",$J),DIRUT,DIROUT,DTOUT,DUOUT,DK,DQ,P,DR Q
"RTN","DIVR",76,0)
 ;
"RTN","DIVR",77,0)
R Q:$D(DIRUT)  ;Tag XEC will send us here, for every entry in the file
"RTN","DIVR",78,0)
 I X?." " Q:DR'["R"&'DIVREQK  D  G X
"RTN","DIVR",79,0)
 . I X="" S M="Missing"_$S(DIVREQK:" key value",1:"")
"RTN","DIVR",80,0)
 . E  S M="Equals only 1 or more spaces"
"RTN","DIVR",81,0)
DOTYPE D @T ;WAS A GOTO   'T' = 'N' or 'F' or 'S', etc
"RTN","DIVR",82,0)
 I $Y+4>IOSL D LF
"RTN","DIVR",83,0)
 Q
"RTN","DIVR",84,0)
 ;
"RTN","DIVR",85,0)
P I @("$D(^"_DIVZ_"X,0))") S Y=X G F
"RTN","DIVR",86,0)
 S M="No '"_X_"' in pointed-to File" G X
"RTN","DIVR",87,0)
 ;
"RTN","DIVR",88,0)
S S Y=X X DDC I '$D(X) S M=""""_Y_""" fails screen" G X
"RTN","DIVR",89,0)
 Q:";"_DIVZ[(";"_X_":")  S M=""""_X_""" not in Set" G X
"RTN","DIVR",90,0)
 ;
"RTN","DIVR",91,0)
D S X=$$DATE^DIUTL(X) ;**
"RTN","DIVR",92,0)
N ;
"RTN","DIVR",93,0)
K ;
"RTN","DIVR",94,0)
F S DQ=X I X'?.ANP S M="Non-printing character" G X ;ALL DATA TYPES FALL THRU TO HERE
"RTN","DIVR",95,0)
 X DDC Q:$D(X)  ;TRY INPUT TRANSFORM
"RTN","DIVR",96,0)
 I $G(DIVROUTT)]"" D  Q:$D(X)
"RTN","DIVR",97,0)
 .N Y S Y=DQ X DIVROUTT S X=Y X DDC ;TRY OUTPUT-TRANSFORMING, THEN INPUT TRANSFORM (AS WITH ^DD(2,.117), 'COUNTY')
"RTN","DIVR",98,0)
 S M=""""_DQ_$S($G(DR)["t":""" is not a valid value",1:""" fails Input Transform")
"RTN","DIVR",99,0)
X I $O(^UTILITY("DIVR",$J,0))="" X W
"RTN","DIVR",100,0)
 S X=$S(V:DA(V),1:DA),^UTILITY("DIVR",$J,X)=""
"RTN","DIVR",101,0)
 S X=V I @(I(0)_"0)")
"RTN","DIVR",102,0)
DA I 'X D  Q
"RTN","DIVR",103,0)
 . D LF Q:$D(DIRUT)
"RTN","DIVR",104,0)
 . W DA,?10,$S($D(^(DA,0)):$E($P(^(0),U),1,30),1:DA),?40,$E(M,1,IOM-40) ;'M' is the message!
"RTN","DIVR",105,0)
 . D:V LF
"RTN","DIVR",106,0)
 D LF Q:$D(DIRUT)  W DA(X),?10,$S($G(^(DA(X),0))]"":$P(^(0),U),1:"***NO ZERO NODE***") S X=X-1,@("Y=$D(^("_I(V-X)_",0))") G DA
"RTN","DIVR",107,0)
 ;
"RTN","DIVR",108,0)
0 ;
"RTN","DIVR",109,0)
 S Y=I(0),DE="",X=V
"RTN","DIVR",110,0)
L S DA="DA" S:X DA=DA_"("_X_")" S Y=Y_DA,DE=DE_"F "_DA_"=0:0 ",%="S "_DA_"=$O("_Y_"))" I V>2 S DE(X+X)=%,DE=DE_"X DE("_(X+X)_")"
"RTN","DIVR",111,0)
 E  S DE=DE_%
"RTN","DIVR",112,0)
 S DE=DE_" Q:"_DA_"'>0  S D"_(V-X)_"="_DA_" "
"RTN","DIVR",113,0)
 ;I X=1,DIFLD=.01 S DE=DE_"X P:$D(^(DA(1),"_I(V)_",0)) ",P="S $P(^(0),U,2)="""_$P(^DD(J(V-1),P,0),U,2)_Q
"RTN","DIVR",114,0)
 S X=X-1 Q:X<0  S Y=Y_","_I(V-X)_"," G L
"RTN","DIVR",115,0)
 ;
"RTN","DIVR",116,0)
IX F %=0:0 S %=$O(DG(%)) Q:+%'>0  X DG(%) I '$T S M=""""_X_""" not properly Cross-referenced" G X
"RTN","DIVR",117,0)
 G @E
"RTN","DIVR",118,0)
 ;
"RTN","DIVR",119,0)
V I $P(X,";",2)'?1A.AN1"(".ANP,$P(X,";",2)'?1"%".AN1"(".ANP S M=""""_X_""""_" has the wrong format" G X
"RTN","DIVR",120,0)
 S M=$S($D(@(U_$P(X,";",2)_"0)")):^(0),1:"")
"RTN","DIVR",121,0)
 I '$D(^DD(A,DIFLD,"V","B",+$P(M,U,2))) S M=$P(M,U)_" FILE not in the DD" G X
"RTN","DIVR",122,0)
 I '$D(@(U_$P(X,";",2)_+X_",0)")) S M=U_$P(X,";",2)_+X_",0) does not exist" G X
"RTN","DIVR",123,0)
 G F
"RTN","DIVR",124,0)
 ;
"RTN","DIVR",125,0)
INDEX ;Check new indexes
"RTN","DIVR",126,0)
 ;
"RTN","DIVR",127,0)
 ;Set DIVINDEX(indexName,index#) = "" for indexes aren't set
"RTN","DIVR",128,0)
 ;Set DIVKEY(file#,keyName,uiNumber) = "null" : if key field is null
"RTN","DIVR",129,0)
 ;                                     "uniq" : if key is not unique
"RTN","DIVR",130,0)
 K DIVKEY,DIINDEX
"RTN","DIVR",131,0)
 D VER^DIVC(A,DIVROOT,.DA,"DIVTMP",.DIVINDEX,.DIVKEY)
"RTN","DIVR",132,0)
 ;
"RTN","DIVR",133,0)
 ;If some indexes aren't set properly, print index info
"RTN","DIVR",134,0)
 I $D(DIVINDEX) D  K DIVINDEX Q:$D(DIRUT)
"RTN","DIVR",135,0)
 . N DIVNAME,DIVNUM
"RTN","DIVR",136,0)
 . S DIVNAME="" F  S DIVNAME=$O(DIVINDEX(DIVNAME)) Q:DIVNAME=""  D  Q:$D(DIRUT)
"RTN","DIVR",137,0)
 .. S DIVNUM=0 F  S DIVNUM=$O(DIVINDEX(DIVNAME,DIVNUM)) Q:'DIVNUM  D  Q:$D(DIRUT)
"RTN","DIVR",138,0)
 ... S M=""""_X_""": "_DIVNAME_" index (#"_DIVNUM_") not properly set"
"RTN","DIVR",139,0)
 ... D IER
"RTN","DIVR",140,0)
 ;
"RTN","DIVR",141,0)
 ;If keys integrity is violated, print key info
"RTN","DIVR",142,0)
 I $D(DIVKEY) D  K DIVKEY Q:$D(DIRUT)
"RTN","DIVR",143,0)
 . N DIVFILE,DIVKNM,DIVPROB,DIVXRNM
"RTN","DIVR",144,0)
 . S DIVFILE="" F  S DIVFILE=$O(DIVKEY(DIVFILE)) Q:DIVFILE=""  D  Q:$D(DIRUT)
"RTN","DIVR",145,0)
 .. S DIVKNM="" F  S DIVKNM=$O(DIVKEY(DIVFILE,DIVKNM)) Q:DIVKNM=""  D  Q:$D(DIRUT)
"RTN","DIVR",146,0)
 ... S DIVXRNM="" F  S DIVXRNM=$O(DIVKEY(DIVFILE,DIVKNM,DIVXRNM)) Q:DIVXRNM=""  D  Q:$D(DIRUT)
"RTN","DIVR",147,0)
 .... S DIVPROB=DIVKEY(DIVFILE,DIVKNM,DIVXRNM)
"RTN","DIVR",148,0)
 .... S M=""""_X_""": "_$S(DIVPROB="null":"Key values are missing.",1:"Key is not unique.")
"RTN","DIVR",149,0)
 .... S M=M_" (File #"_DIVFILE_", Key "_DIVKNM_", Index "_DIVXRNM_")"
"RTN","DIVR",150,0)
 .... D IER
"RTN","DIVR",151,0)
 ;
"RTN","DIVR",152,0)
 ;Continue with checking traditional xrefs (if any) and data type
"RTN","DIVR",153,0)
 G @DIVTYPE
"RTN","DIVR",154,0)
 ;
"RTN","DIVR",155,0)
IER ;Print info about invalid indexes. (Modeled after DA subroutine above)
"RTN","DIVR",156,0)
 N DIVTXT,DIVI,X
"RTN","DIVR",157,0)
 ;
"RTN","DIVR",158,0)
 ;Wrap message M to within 40 columns
"RTN","DIVR",159,0)
 S DIVTXT(0)=M D WRAP^DIKCU2(.DIVTXT,40)
"RTN","DIVR",160,0)
 ;
"RTN","DIVR",161,0)
 ;If nothing was written yet, write column headers
"RTN","DIVR",162,0)
 I $O(^UTILITY("DIVR",$J,0))="" X W
"RTN","DIVR",163,0)
 ;
"RTN","DIVR",164,0)
 ;Set ^UTILITY("DIVR",$J,topIen)="", X = level#, naked = top level root
"RTN","DIVR",165,0)
 S X=$S(V:DA(V),1:DA),^UTILITY("DIVR",$J,X)=""
"RTN","DIVR",166,0)
 S X=V I @(I(0)_"0)")
"RTN","DIVR",167,0)
 ;
"RTN","DIVR",168,0)
IER1 ;If top level, write record info and message
"RTN","DIVR",169,0)
 I 'X D  Q
"RTN","DIVR",170,0)
 . D LF Q:$D(DIRUT)  W DA,?10,$S($D(^(DA,0)):$P(^(0),U),1:DA)
"RTN","DIVR",171,0)
 . F DIVI=0:1 Q:$D(DIVTXT(DIVI))[0  D  Q:$D(DIRUT)
"RTN","DIVR",172,0)
 .. I DIVI D LF Q:$D(DIRUT)
"RTN","DIVR",173,0)
 .. W ?40,DIVTXT(DIVI)
"RTN","DIVR",174,0)
 . D:V LF
"RTN","DIVR",175,0)
 ;
"RTN","DIVR",176,0)
 ;Else write subrecord info, decrement level, set naked = ^naked(node,0)
"RTN","DIVR",177,0)
 D LF Q:$D(DIRUT)
"RTN","DIVR",178,0)
 W DA(X),?10,$P(^(DA(X),0),U) S X=X-1,@("Y=$D(^("_I(V-X)_",0))")
"RTN","DIVR",179,0)
 G IER1
"RTN","DIVR",180,0)
 ;
"RTN","DIVR",181,0)
LF ;Issue a line feed or EOP read    CALLED FROM DIV
"RTN","DIVR",182,0)
 I $Y+3<IOSL W ! Q
"RTN","DIVR",183,0)
 N DINAKED S DINAKED=$NA(^(0))
"RTN","DIVR",184,0)
 I IOST?1"C-".E D
"RTN","DIVR",185,0)
 . N DIR,X,Y
"RTN","DIVR",186,0)
 . S DIR(0)="E" W ! D ^DIR
"RTN","DIVR",187,0)
 ;
"RTN","DIVR",188,0)
 I '$D(DIRUT) D
"RTN","DIVR",189,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DIRUT)=1
"RTN","DIVR",190,0)
 . E  W @IOF D HDR
"RTN","DIVR",191,0)
 S:DINAKED]"" DINAKED=$S(DINAKED["""""":$O(@DINAKED),1:$D(@DINAKED))
"RTN","DIVR",192,0)
 Q
"RTN","DIVR",193,0)
 ;
"RTN","DIVR",194,0)
HDR ;Print header
"RTN","DIVR",195,0)
 N DIVTAB
"RTN","DIVR",196,0)
 S DIVPG=$G(DIVPG)+1
"RTN","DIVR",197,0)
 W "VERIFY FIELDS REPORT"
"RTN","DIVR",198,0)
 ;
"RTN","DIVR",199,0)
 S DIVTAB=IOM-1-$L(DIVFIL)-$L(DIVDAT)-$L(DIVPG)
"RTN","DIVR",200,0)
 I DIVTAB>1 W !,DIVFIL_$J("",DIVTAB)_DIVDAT_DIVPG
"RTN","DIVR",201,0)
 E  W !,DIVFIL,!,$J("",IOM-1-$L(DIVDAT)-$L(DIVPG))_DIVDAT_DIVPG
"RTN","DIVR",202,0)
 W !,$TR($J("",IOM-1)," ","-"),!
"RTN","DIVR",203,0)
 Q
"RTN","DIVR",204,0)
 ;
"RTN","DIVR",205,0)
 ;
"RTN","DIVR",206,0)
 ;
"RTN","DIVR",207,0)
EN(A,DIFLD,DQI) ;Main Entry Point for VEN version
"RTN","DIVR",208,0)
 G BEGIN
"VER")
8.0^22.2
"^DD",.81,.81,0)
FIELD^^201^10
"^DD",.81,.81,0,"DDA")
N
"^DD",.81,.81,0,"IX","AFDEF",.81215,.01)

"^DD",.81,.81,0,"IX","B",.81,.01)

"^DD",.81,.81,0,"IX","C",.81,1)

"^DD",.81,.81,0,"NM","DATA TYPE")

"^DD",.81,.81,0,"PT",.4014,15)

"^DD",.81,.81,0,"PT",.42,1)

"^DD",.81,.81,0,"PT",.86,41)

"^DD",.81,.81,.001,0)
NUMBER^NJ16,2^^ ^K:+X'=X!(X>9999999999999.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",.81,.81,.001,3)
Type a Number between 1 and 9999999999999.99, 2 Decimal Digits
"^DD",.81,.81,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",.81,.81,.01,1,0)
^.1
"^DD",.81,.81,.01,1,1,0)
.81^B
"^DD",.81,.81,.01,1,1,1)
S ^DI(.81,"B",$E(X,1,30),DA)=""
"^DD",.81,.81,.01,1,1,2)
K ^DI(.81,"B",$E(X,1,30),DA)
"^DD",.81,.81,.01,3)
NAME MUST BE 3-30 CHARACTERS
"^DD",.81,.81,.01,"DEL",1,0)
D DELETEQ^DIETLIB
"^DD",.81,.81,1,0)
INTERNAL REPRESENTATION^F^^0;2^I ",N,F,D,S,P,K,"'[X!($L(X)>1) K X
"^DD",.81,.81,1,1,0)
^.1
"^DD",.81,.81,1,1,1,0)
.81^C
"^DD",.81,.81,1,1,1,1)
S ^DI(.81,"C",$E(X,1,30),DA)=""
"^DD",.81,.81,1,1,1,2)
K ^DI(.81,"C",$E(X,1,30),DA)
"^DD",.81,.81,1,3)
MUST BE ONE OF THE BASIC CODES (N,F,D,S,P,K) DENOTING FILEMAN FIELD TYPES
"^DD",.81,.81,2,0)
STANDARD PROMPT^F^^0;3^K:$L(X)>70!($L(X)<1) X
"^DD",.81,.81,2,3)
Answer must be 1-70 characters in length.
"^DD",.81,.81,2,21,0)
^^2^2^2960124^
"^DD",.81,.81,2,21,1,0)
This is the default prompt used during a Reader (^DIR) call of this
"^DD",.81,.81,2,21,2,0)
data type, when no prompt is supplied in DIR("A").
"^DD",.81,.81,3,0)
SORT BY EXTERNAL?^S^0:NO;1:YES;^0;4^Q
"^DD",.81,.81,3,21,0)
^^2^2^2960806^
"^DD",.81,.81,3,21,1,0)
Enter 'YES' if, by default, data of this data type should sort by its
"^DD",.81,.81,3,21,2,0)
external rather than internal form.
"^DD",.81,.81,11,0)
SHORT DESCRIPTION^F^^11;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",.81,.81,11,3)
Answer must be 1-245 characters in length.
"^DD",.81,.81,21,0)
DESCRIPTION^.8121^^21;0
"^DD",.81,.81,41,0)
FIELDS DEFINED BY THIS TYPE^.81215^^41;0
"^DD",.81,.81,41,9)
^
"^DD",.81,.81,41,21,0)
^^2^2^
"^DD",.81,.81,41,21,1,0)
This multiple field list all fields in this database that point to this DATA TYPE.  These are not editable here.
"^DD",.81,.81,41,21,2,0)
The values are stuffed automatically when a field using this DATA TYPE is created under 'MODIFY FILE ATTRIBUTES'.
"^DD",.81,.81,101,0)
PROPERTY^.81101P^^101;0
"^DD",.81,.81,101,21,0)
^^1^1
"^DD",.81,.81,101,21,1,0)
This multiple lists all the PROPERTIES that specify what this DATA TYPE does.
"^DD",.81,.81,201,0)
METHOD^.81201P^^201;0
"^DD",.81,.81,201,21,0)
^^1^1
"^DD",.81,.81,201,21,1,0)
This multiple lists all the METHODS that specify what this DATA TYPE does.
"^DD",.81,.81101,0)
PROPERTY SUB-FIELD^^61^5
"^DD",.81,.81101,0,"DT")
3160929
"^DD",.81,.81101,0,"IX","AC",.81101,1)

"^DD",.81,.81101,0,"IX","B",.81101,.01)

"^DD",.81,.81101,0,"NM","PROPERTY")

"^DD",.81,.81101,0,"UP")
.81
"^DD",.81,.81101,.01,0)
PROPERTY^MP.86Xa^DI(.86,^0;1^S DINUM=X
"^DD",.81,.81101,.01,1,0)
^.1
"^DD",.81,.81101,.01,1,1,0)
.81101^B
"^DD",.81,.81101,.01,1,1,1)
S ^DI(.81,DA(1),101,"B",$E(X,1,30),DA)=""
"^DD",.81,.81101,.01,1,1,2)
K ^DI(.81,DA(1),101,"B",$E(X,1,30),DA)
"^DD",.81,.81101,.01,3)
Select a PROPERTY that needs to have a VALUE for this DATA TYPE.
"^DD",.81,.81101,.01,21,0)
^^2^2
"^DD",.81,.81101,.01,21,1,0)
Existing PROPERTY names should only be edited with great care.
"^DD",.81,.81101,.01,21,2,0)
A PROPERTY is a string or number that defines something about the Data Type.
"^DD",.81,.81101,.01,"AUDIT")
y
"^DD",.81,.81101,.01,"DT")
3150913
"^DD",.81,.81101,1,0)
ORDER^NJ4,1a^^0;2^K:+X'=X!(X>99.9)!(X<1)!(X?.E1"."2N.N) X
"^DD",.81,.81101,1,1,0)
^.1
"^DD",.81,.81101,1,1,1,0)
.81101^AC
"^DD",.81,.81101,1,1,1,1)
S ^DI(.81,DA(1),101,"AC",$E(X,1,30),DA)=""
"^DD",.81,.81101,1,1,1,2)
K ^DI(.81,DA(1),101,"AC",$E(X,1,30),DA)
"^DD",.81,.81101,1,1,1,"%D",0)
^^1^1^
"^DD",.81,.81101,1,1,1,"%D",1,0)
This cross reference allows sorting PROPERTIES by the ORDER in which they should be presented.
"^DD",.81,.81101,1,3)
Type a Number between 1 and 99.9, 1 Decimal Digit
"^DD",.81,.81101,1,21,0)
^^2^2^2951205^
"^DD",.81,.81101,1,21,1,0)
Enter the relative order in which FileMan should prompt for this property
"^DD",.81,.81101,1,21,2,0)
at field creation.
"^DD",.81,.81101,1,"AUDIT")
y
"^DD",.81,.81101,1,"DT")
3150913
"^DD",.81,.81101,10,0)
PROMPT?^Ka^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",.81,.81101,10,3)
This is Standard MUMPS code.
"^DD",.81,.81101,10,9)
@
"^DD",.81,.81101,10,21,0)
^^3^3^2951205^
"^DD",.81,.81101,10,21,1,0)
Enter MUMPS code that sets $T.  If $T evaluates to TRUE, then FileMan
"^DD",.81,.81101,10,21,2,0)
will prompt for this property when a field of this Data Type is created.
"^DD",.81,.81101,10,21,3,0)
A null value is equivalent to "I 1".
"^DD",.81,.81101,10,"AUDIT")
y
"^DD",.81,.81101,10,"DT")
3150913
"^DD",.81,.81101,31,0)
VALUE^Fa^^31;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",.81,.81101,31,3)
Enter the string that will become the default value for this PROPERTY, 1 to 245 characters.
"^DD",.81,.81101,31,21,0)
^^3^3
"^DD",.81,.81101,31,21,1,0)
This value will be inserted into the definition of fields defined by this Data Type Property.
"^DD",.81,.81101,31,21,2,0)
For a PROPERTY like FIELD LENGTH, the VALUE will be a number.
"^DD",.81,.81101,31,21,3,0)
For a PROPERTY like SET OF CODES, the VALUE will be a string (like "1:TRUE;0:FALSE")
"^DD",.81,.81101,31,"AUDIT")
y
"^DD",.81,.81101,31,"DT")
3150913
"^DD",.81,.81101,33,0)
DEFAULT VALUE PROMPTED^Fa^^33;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",.81,.81101,33,3)
Enter the string that will show as the expected value (internal form) for this PROPERTY, 1 to 245 characters.
"^DD",.81,.81101,33,21,0)
^^3^3
"^DD",.81,.81101,33,21,1,0)
This field should have a value only if, when a new FileMan field is being created (MODIFY FILE ATTRIBUTES),
"^DD",.81,.81101,33,21,2,0)
the PROPERTY should be prompted with a default.  For example, if a true/false PROPERTY normally takes a 'NO' value,
"^DD",.81,.81101,33,21,3,0)
then this field has the value '0', which is usually the internal form of 'NO'.
"^DD",.81,.81101,33,"AUDIT")
y
"^DD",.81,.81101,33,"DT")
3160929
"^DD",.81,.81201,0)
METHOD SUB-FIELD^^31.1^2
"^DD",.81,.81201,0,"DT")
3150913
"^DD",.81,.81201,0,"IX","B",.81201,.01)

"^DD",.81,.81201,0,"NM","METHOD")

"^DD",.81,.81201,0,"UP")
.81
"^DD",.81,.81201,.01,0)
METHOD^MP.87Xa^DI(.87,^0;1^S DINUM=X
"^DD",.81,.81201,.01,1,0)
^.1
"^DD",.81,.81201,.01,1,1,0)
.81201^B
"^DD",.81,.81201,.01,1,1,1)
S ^DI(.81,DA(1),201,"B",$E(X,1,30),DA)=""
"^DD",.81,.81201,.01,1,1,2)
K ^DI(.81,DA(1),201,"B",$E(X,1,30),DA)
"^DD",.81,.81201,.01,3)
Select a METHOD that needs to have MUMPS code for this DATA TYPE.
"^DD",.81,.81201,.01,21,0)
^^1^1
"^DD",.81,.81201,.01,21,1,0)
This step allows a programmer to change the name of or specify the METHOD.
"^DD",.81,.81201,.01,"AUDIT")
y
"^DD",.81,.81201,.01,"DT")
3150913
"^DD",.81,.81201,31,0)
M CODE^Fa^^31;E1,245^D ^DIM
"^DD",.81,.81201,31,3)
Enter MUMPS code that will perform the METHOD
"^DD",.81,.81201,31,9)
@
"^DD",.81,.81201,31,21,0)
^^1^1
"^DD",.81,.81201,31,21,1,0)
Code that will do what the METHOD requires.
"^DD",.81,.81201,31,"AUDIT")
y
"^DD",.81,.81201,31,"DT")
3150913
"^DD",.81,.8121,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",.81,.8121,0,"DT")
2951026
"^DD",.81,.8121,0,"NM","DESCRIPTION")

"^DD",.81,.8121,0,"UP")
.81
"^DD",.81,.8121,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",.81,.8121,.01,"DT")
2951026
"^DD",.81,.81215,0)
FIELD DEFINED BY THIS TYPE SUB-FIELD^^.01^1
"^DD",.81,.81215,0,"NM","FIELD DEFINED BY THIS TYPE")

"^DD",.81,.81215,0,"UP")
.81
"^DD",.81,.81215,.01,0)
FIELD DEFINED BY THIS TYPE^F^^0;1^I X'?1.NP1","1.NP K X
"^DD",.81,.81215,.01,1,0)
^.1
"^DD",.81,.81215,.01,1,1,0)
.81^AFDEF
"^DD",.81,.81215,.01,1,1,1)
S ^DI(.81,"AFDEF",DA(1),$E(X,1,30),DA)=""
"^DD",.81,.81215,.01,1,1,2)
K ^DI(.81,"AFDEF",DA(1),$E(X,1,30),DA)
"^DD",.81,.81215,.01,3)
Enter a file number, then comma, then field number, of a field defined by this DATA TYPE
"^DIC",.81,.81,0)
DATA TYPE^.81
"^DIC",.81,.81,0,"GL")
^DI(.81,
"^DIC",.81,.81,"%D",0)
^^2^2^2940908^
"^DIC",.81,.81,"%D",1,0)
This file stores all of the data types that VA FileMan allows in the
"^DIC",.81,.81,"%D",2,0)
MODIFY FILE ATTRIBUTES option.
"^DIC",.81,"B","DATA TYPE",.81)

"BLD",9894,6)
^6
**END**
**END**

