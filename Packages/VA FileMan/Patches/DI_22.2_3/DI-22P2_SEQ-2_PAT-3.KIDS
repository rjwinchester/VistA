Released DI*22.2*3 SEQ #2
Extracted from mail message
**KIDS**:DI*22.2*3^

**INSTALL NAME**
DI*22.2*3
"BLD",9890,0)
DI*22.2*3^VA FILEMAN^0^3160909^y
"BLD",9890,1,0)
^^1^1^3160909^
"BLD",9890,1,1,0)
Patch DI*22.2*3 will repair VA FileMan 22.2 defects.
"BLD",9890,4,0)
^9.64PA^^
"BLD",9890,6.3)
17
"BLD",9890,"ABPKG")
n
"BLD",9890,"KRN",0)
^9.67PA^779.2^20
"BLD",9890,"KRN",.4,0)
.4
"BLD",9890,"KRN",.401,0)
.401
"BLD",9890,"KRN",.402,0)
.402
"BLD",9890,"KRN",.403,0)
.403
"BLD",9890,"KRN",.5,0)
.5
"BLD",9890,"KRN",.84,0)
.84
"BLD",9890,"KRN",3.6,0)
3.6
"BLD",9890,"KRN",3.8,0)
3.8
"BLD",9890,"KRN",9.2,0)
9.2
"BLD",9890,"KRN",9.8,0)
9.8
"BLD",9890,"KRN",9.8,"NM",0)
^9.68A^15^13
"BLD",9890,"KRN",9.8,"NM",1,0)
DDSMSG^^0^B12020877
"BLD",9890,"KRN",9.8,"NM",4,0)
DIFROMS2^^0^B45455117
"BLD",9890,"KRN",9.8,"NM",5,0)
DDGLIBP^^0^B27768637
"BLD",9890,"KRN",9.8,"NM",6,0)
DDS^^0^B40296142
"BLD",9890,"KRN",9.8,"NM",7,0)
DDSSTK^^0^B4128442
"BLD",9890,"KRN",9.8,"NM",8,0)
DDGFFLD^^0^B11526097
"BLD",9890,"KRN",9.8,"NM",9,0)
DDGFFLDA^^0^B21253213
"BLD",9890,"KRN",9.8,"NM",10,0)
DDGLIB0^^0^B30266676
"BLD",9890,"KRN",9.8,"NM",11,0)
DDBR^^0^B28946498
"BLD",9890,"KRN",9.8,"NM",12,0)
DICATT3^^0^B15947104
"BLD",9890,"KRN",9.8,"NM",13,0)
DICATTDE^^0^B32549326
"BLD",9890,"KRN",9.8,"NM",14,0)
DIO3^^0^B9326244
"BLD",9890,"KRN",9.8,"NM",15,0)
DDGF2^^0^B31932302
"BLD",9890,"KRN",9.8,"NM","B","DDBR",11)

"BLD",9890,"KRN",9.8,"NM","B","DDGF2",15)

"BLD",9890,"KRN",9.8,"NM","B","DDGFFLD",8)

"BLD",9890,"KRN",9.8,"NM","B","DDGFFLDA",9)

"BLD",9890,"KRN",9.8,"NM","B","DDGLIB0",10)

"BLD",9890,"KRN",9.8,"NM","B","DDGLIBP",5)

"BLD",9890,"KRN",9.8,"NM","B","DDS",6)

"BLD",9890,"KRN",9.8,"NM","B","DDSMSG",1)

"BLD",9890,"KRN",9.8,"NM","B","DDSSTK",7)

"BLD",9890,"KRN",9.8,"NM","B","DICATT3",12)

"BLD",9890,"KRN",9.8,"NM","B","DICATTDE",13)

"BLD",9890,"KRN",9.8,"NM","B","DIFROMS2",4)

"BLD",9890,"KRN",9.8,"NM","B","DIO3",14)

"BLD",9890,"KRN",19,0)
19
"BLD",9890,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9890,"KRN",19,"NM",1,0)
DIVERIFY^^0
"BLD",9890,"KRN",19,"NM","B","DIVERIFY",1)

"BLD",9890,"KRN",19.1,0)
19.1
"BLD",9890,"KRN",101,0)
101
"BLD",9890,"KRN",409.61,0)
409.61
"BLD",9890,"KRN",771,0)
771
"BLD",9890,"KRN",779.2,0)
779.2
"BLD",9890,"KRN",870,0)
870
"BLD",9890,"KRN",8989.51,0)
8989.51
"BLD",9890,"KRN",8989.52,0)
8989.52
"BLD",9890,"KRN",8994,0)
8994
"BLD",9890,"KRN","B",.4,.4)

"BLD",9890,"KRN","B",.401,.401)

"BLD",9890,"KRN","B",.402,.402)

"BLD",9890,"KRN","B",.403,.403)

"BLD",9890,"KRN","B",.5,.5)

"BLD",9890,"KRN","B",.84,.84)

"BLD",9890,"KRN","B",3.6,3.6)

"BLD",9890,"KRN","B",3.8,3.8)

"BLD",9890,"KRN","B",9.2,9.2)

"BLD",9890,"KRN","B",9.8,9.8)

"BLD",9890,"KRN","B",19,19)

"BLD",9890,"KRN","B",19.1,19.1)

"BLD",9890,"KRN","B",101,101)

"BLD",9890,"KRN","B",409.61,409.61)

"BLD",9890,"KRN","B",771,771)

"BLD",9890,"KRN","B",779.2,779.2)

"BLD",9890,"KRN","B",870,870)

"BLD",9890,"KRN","B",8989.51,8989.51)

"BLD",9890,"KRN","B",8989.52,8989.52)

"BLD",9890,"KRN","B",8994,8994)

"BLD",9890,"MSC")
C:\R\E222\DI_22_2_1T3.KID
"BLD",9890,"MSCOM")
FROM GFT
"BLD",9890,"QUES",0)
^9.62^^
"KRN",19,3161,-1)
0^1
"KRN",19,3161,0)
DIVERIFY^Verify Fields^^A^^^^^^^y^^n^1^^
"KRN",19,3161,1,0)
^^4^4^2890316^^^
"KRN",19,3161,1,1,0)
This option is used to double check the data that exists in a field
"KRN",19,3161,1,2,0)
to see that it matches the Data Dictionary specifications.  The user
"KRN",19,3161,1,3,0)
is allowed to store the discrepancies in a search template so that they
"KRN",19,3161,1,4,0)
can easily be retrieved for examination and correction.
"KRN",19,3161,20)
S DI=1 G EN^DIU
"KRN",19,3161,"U")
VERIFY FIELDS
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",1,-1)
1^1
"PKG",1,0)
VA FILEMAN^DI^FM INIT
"PKG",1,22,0)
^9.49I^1^1
"PKG",1,22,1,0)
22.2^3160105^3160909^520736440
"PKG",1,22,1,"PAH",1,0)
3^3160909
"PKG",1,22,1,"PAH",1,1,0)
^^1^1^3160909
"PKG",1,22,1,"PAH",1,1,1,0)
Patch DI*22.2*3 will repair VA FileMan 22.2 defects.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","DDBR")
0^11^B28946498^B27928380
"RTN","DDBR",1,0)
DDBR ;SFISC/DCL - VA FILEMAN BROWSER ;13JUN2016
"RTN","DDBR",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDBR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDBR",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDBR",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDBR",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDBR",7,0)
 ;GFT;**165,999,1055**;
"RTN","DDBR",8,0)
 ;
"RTN","DDBR",9,0)
EN N DDBC,DDBFLG,DDBL,DDBPMSG,DDBSA,DDBX,IOTM,IOBM
"RTN","DDBR",10,0)
 ; I '$$TEST^DDBRT W $C(7),!!,$$EZBLD^DIALOG(830),!! Q  ;VEN/SMH - don't check for supportability
"RTN","DDBR",11,0)
 D LIST^DDBR3(.DDBX)
"RTN","DDBR",12,0)
 I DDBX'>0 W:DDBX=0 $C(7),!!,$$EZBLD^DIALOG(1404),!! Q  ;**
"RTN","DDBR",13,0)
 S DDBSA=DDBX(6)
"RTN","DDBR",14,0)
 S DDBFLG=DDBX(4)
"RTN","DDBR",15,0)
 S DDBPMSG=DDBX(5)
"RTN","DDBR",16,0)
 D CONTNU
"RTN","DDBR",17,0)
 D KTMP^DDBRU
"RTN","DDBR",18,0)
 Q
"RTN","DDBR",19,0)
 ;
"RTN","DDBR",20,0)
WP(DDBFN,DDBRN,DDBFLD,DDBFLG,DDBPMSG,DDBL,DDBC,IOTM,IOBM) N DDBSA
"RTN","DDBR",21,0)
 S DDBSA=$$GET^DIQG($G(DDBFN),$G(DDBRN),$G(DDBFLD),"B")
"RTN","DDBR",22,0)
 I $G(DIERR) D CLEAN Q
"RTN","DDBR",23,0)
 S DDBSA=$P(DDBSA,"$CREF$",2)
"RTN","DDBR",24,0)
 I DDBSA']"" D ERR("FILE, RECORD and/or FIELD") Q
"RTN","DDBR",25,0)
 I '$D(@DDBSA) D ERR("SOURCE ARRAY") Q
"RTN","DDBR",26,0)
 I $G(DDBFLG)["A" D
"RTN","DDBR",27,0)
 .N DDBSAN
"RTN","DDBR",28,0)
 .S DDBSAN=$$NROOT^DDBRAP($NA(@DDBSA))
"RTN","DDBR",29,0)
 .I '$D(@DDBSAN) D WP^DDBRAP($NA(@DDBSA))
"RTN","DDBR",30,0)
 .Q:$G(DDBPMSG)]""
"RTN","DDBR",31,0)
 .I $D(@DDBSAN@("TITLE")) S DDBPMSG=@DDBSAN@("TITLE") Q
"RTN","DDBR",32,0)
 .Q
"RTN","DDBR",33,0)
 S DDBPMSG=$S($G(DDBPMSG)]"":DDBPMSG,1:"VA FileMan Browser (wp) DOCUMENT 1")
"RTN","DDBR",34,0)
 D CONTNU
"RTN","DDBR",35,0)
 D:$G(DDBFLG)'["P" KTMP^DDBRU
"RTN","DDBR",36,0)
 Q
"RTN","DDBR",37,0)
 ;
"RTN","DDBR",38,0)
BROWSE(DDBSA,DDBFLG,DDBPMSG,DDBL,DDBC,IOTM,IOBM) N DDBRLIST
"RTN","DDBR",39,0)
CONTNU I $G(U)'="^" N U S U="^"
"RTN","DDBR",40,0)
 I $G(DDBFLG)["A" D
"RTN","DDBR",41,0)
 .N DDBSAN
"RTN","DDBR",42,0)
 .S DDBSAN=$$NROOT^DDBRAP($NA(@DDBSA))
"RTN","DDBR",43,0)
 .I '$D(@DDBSAN) D WP^DDBRAP($NA(@DDBSA))
"RTN","DDBR",44,0)
 .Q:$G(DDBPMSG)]""
"RTN","DDBR",45,0)
 .I $D(@DDBSAN@("TITLE")) S DDBPMSG=@DDBSAN@("TITLE") Q
"RTN","DDBR",46,0)
 .Q
"RTN","DDBR",47,0)
 S DDBPMSG=$S($G(DDBPMSG)]"":DDBPMSG,1:"VA FileMan Browser DOCUMENT 1")
"RTN","DDBR",48,0)
 N %,D,DX,IOP,XY,X,Y
"RTN","DDBR",49,0)
 D:$G(DDBFLG)'["H" INIT I $G(DIERR) D CLEAN Q
"RTN","DDBR",50,0)
 I $G(DDBSA)']"" D ERR("SOURCE ARRAY") Q
"RTN","DDBR",51,0)
 I '$D(@DDBSA) D ERR("SOURCE ARRAY") Q
"RTN","DDBR",52,0)
 I $G(DDBFLG)'["N",DDBSA'="^TMP(""DDB"",$J)" D
"RTN","DDBR",53,0)
 .I $NA(@DDBSA)=$NA(^TMP("DDB",$J)) S DDBSA="^TMP(""DDB"",$J)" Q
"RTN","DDBR",54,0)
 .K ^TMP("DDB",$J)
"RTN","DDBR",55,0)
 .D XY^%RCR($$OREF(DDBSA),"^TMP(""DDB"",$J,")
"RTN","DDBR",56,0)
 .;M ^TMP("DDB",$J)=@DDBSA
"RTN","DDBR",57,0)
 .S DDBSA="^TMP(""DDB"",$J)"
"RTN","DDBR",58,0)
 .Q
"RTN","DDBR",59,0)
 N DDBRE,DDBRPE,DDBPSA,DDBTO,DDBDM,DDBFNO,I,DDBFLGS,DDBRHT,DDBRHTF
"RTN","DDBR",60,0)
 N DDBHDR,DDBHDRC,DDBFTR,DDBSP,DDBSF,DDBST,DDBTL,DDBTPG,DDBZN
"RTN","DDBR",61,0)
 I '$G(DDBRLIST) N DDBSRL,DDBSX,DDBSY,DDBRSA
"RTN","DDBR",62,0)
 S DDBFTR=$E("Col>     |"_$$EZBLD^DIALOG(8074)_"| Line>                 Screen>"_$J("",IOM),1,IOM) ;**
"RTN","DDBR",63,0)
 I '$G(DDBRLIST) S IOBM=$S($G(IOBM)>0:IOBM,1:$G(IOSL,24))-1,IOTM=$S($G(IOTM)>0:IOTM,1:1)+1
"RTN","DDBR",64,0)
 S DDBRSA=0
"RTN","DDBR",65,0)
 D TB^DDBRS(.IOTM,.IOBM,.DDBRSA)
"RTN","DDBR",66,0)
 S DDBSX="0;4;40;65"
"RTN","DDBR",67,0)
 S DDBSY=DDBRSA(0,"DDBSY")
"RTN","DDBR",68,0)
 I IOBM>(IOSL-1) D ERR($$EZBLD^DIALOG(833)) Q  ;**
"RTN","DDBR",69,0)
 I IOTM<2 D ERR($$EZBLD^DIALOG(832)) Q  ;**
"RTN","DDBR",70,0)
 I IOBM'>IOTM D ERR($$EZBLD^DIALOG(831)) Q  ;**
"RTN","DDBR",71,0)
 S DDBSRL=DDBRSA(0,"DDBSRL")
"RTN","DDBR",72,0)
 I DDBSRL'>4,$G(DDBFLG)'["H" D ERR($$EZBLD^DIALOG(834)) Q  ;**
"RTN","DDBR",73,0)
 I DDBRSA(1,"DDBSRL")'>4 K DDBRSA(1),DDBRSA(2)
"RTN","DDBR",74,0)
 S DDBHDR=$$CTXT(DDBPMSG,$J("",IOM+1),IOM),DDBHDRC=0
"RTN","DDBR",75,0)
 S DDBTL=$P($G(@DDBSA@(0)),"^",3) S:DDBTL'>0 DDBTL=$O(@DDBSA@(" "),-1)
"RTN","DDBR",76,0)
 I DDBTL'>0 D  I DDBTL'>0 D BLD^DIALOG(1700,$$EZBLD^DIALOG(1404)_DDBSA) D CLEAN Q  ;**
"RTN","DDBR",77,0)
 .N I S I=0 F  S I=$O(@DDBSA@(I)) Q:I'>0  S DDBTL=I
"RTN","DDBR",78,0)
 .Q
"RTN","DDBR",79,0)
 S DDBZN=$D(@DDBSA@(DDBTL,0))#2,DDBTPG=DDBTL\DDBSRL+(DDBTL#DDBSRL'<1),DDBSF=1,DDBST=IOM
"RTN","DDBR",80,0)
 S DDBDM=DDBSA="^TMP(""DDB"",$J)"
"RTN","DDBR",81,0)
 I $G(DDBC)=+$G(DDBC) D ERR("TAB (Closed Array Root)") Q
"RTN","DDBR",82,0)
 S:$G(DDBC)="" DDBC="^TMP(""DDBC"",$J)"
"RTN","DDBR",83,0)
 I '$D(@DDBC) F I=1,22:22:176 S @DDBC@(I)=""
"RTN","DDBR",84,0)
 I $D(@DDBC@(1))'>9 N DDBC0,DDBC1 S @DDBC@(1)="",DDBC1=1,DDBC0=DDBC
"RTN","DDBR",85,0)
 S DDBPSA=0,DDBFLG=$G(DDBFLG)
"RTN","DDBR",86,0)
 S DDBFLGS=DDBFLG["S",DDBRHTF=DDBFLG["A"
"RTN","DDBR",87,0)
 I DDBRHTF S $E(DDBFTR,1,9)="HYPER-TXT"
"RTN","DDBR",88,0)
 G EN^DDBRGE
"RTN","DDBR",89,0)
DOCLIST(DDBDSA,DDBFLG,IOTM,IOBM) S IOP="HOME" D ^%ZIS
"RTN","DDBR",90,0)
 N DDBPMSG,DDBL,DDBC,DDBSA,DDBSRL,DDBSX,DDBSY,DDBRSA,DDBRLIST
"RTN","DDBR",91,0)
 S IOBM=$S($G(IOBM)>0:IOBM,1:$G(IOSL,24))-1,IOTM=$S($G(IOTM)>0:IOTM,1:1)+1
"RTN","DDBR",92,0)
 S DDBSX="0;4;40;65"
"RTN","DDBR",93,0)
 S DDBSY=(IOTM-2)_";"_(IOTM-1)_";"_(IOBM-1)_";"_(IOBM)  ;hdr,txttop,txtbot,ftr
"RTN","DDBR",94,0)
 I IOBM>(IOSL-1) D ERR($$EZBLD^DIALOG(833)) Q  ;**
"RTN","DDBR",95,0)
 I IOTM<2 D ERR($$EZBLD^DIALOG(832)) Q  ;**
"RTN","DDBR",96,0)
 I IOBM'>IOTM D ERR($$EZBLD^DIALOG(831)) Q  ;**
"RTN","DDBR",97,0)
 S DDBSRL=(IOBM-IOTM)+1  ;scroll region lines
"RTN","DDBR",98,0)
 I '$D(@DDBDSA) D ERR("DOCUMENT ARRAY INVALID") Q
"RTN","DDBR",99,0)
 S DDBFLG=$TR($G(DDBFLG),"P")_"N"
"RTN","DDBR",100,0)
 S DDBPMSG=$O(@DDBDSA@("")) S:DDBPMSG]"" DDBSA=@DDBDSA@(DDBPMSG)
"RTN","DDBR",101,0)
 I DDBPMSG']""!(DDBSA']"") D ERR("DOCUMENT ARRAY INVALID") Q
"RTN","DDBR",102,0)
 D  I $G(DIERR) K ^TMP("DDBLST",$J) D CLEAN Q
"RTN","DDBR",103,0)
 .N DOC,DOCSA
"RTN","DDBR",104,0)
 .S DOC=""
"RTN","DDBR",105,0)
 .K ^TMP("DDBLST",$J)
"RTN","DDBR",106,0)
 .F  S DOC=$O(@DDBDSA@(DOC)) Q:DOC=""  D
"RTN","DDBR",107,0)
 ..S DOCSA=@DDBDSA@(DOC)
"RTN","DDBR",108,0)
 ..D LOADCL^DDBR4(DOCSA,"",DOC)
"RTN","DDBR",109,0)
 ..Q
"RTN","DDBR",110,0)
 .Q
"RTN","DDBR",111,0)
 Q:$G(DDBENDR)
"RTN","DDBR",112,0)
 S DDBRLIST=1
"RTN","DDBR",113,0)
 G CONTNU
"RTN","DDBR",114,0)
 ;
"RTN","DDBR",115,0)
RTN G DR^DDBRU
"RTN","DDBR",116,0)
 ;
"RTN","DDBR",117,0)
ROOT G EN^DDBRU2
"RTN","DDBR",118,0)
 ;
"RTN","DDBR",119,0)
CTXT(X,T,W) Q:X="" $G(T)
"RTN","DDBR",120,0)
 N HW
"RTN","DDBR",121,0)
 S W=$G(W,79),HW=W\2
"RTN","DDBR",122,0)
 S $E(T,HW-($L(X)\2),HW-($L(X)\2)+$L(X))=X Q $E(T,1,W)
"RTN","DDBR",123,0)
 ;
"RTN","DDBR",124,0)
OREF(X) N X1,X2 S X1=$P(X,"(")_"(",X2=$$OR2($P(X,"(",2)) Q:X2="" X1 Q X1_X2_","
"RTN","DDBR",125,0)
 ;
"RTN","DDBR",126,0)
OR2(%) Q:%=")"!(%=",") "" Q:$L(%)=1 %  S:"),"[$E(%,$L(%)) %=$E(%,1,$L(%)-1) Q %
"RTN","DDBR",127,0)
 ;
"RTN","DDBR",128,0)
INIT I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DDBR",129,0)
 D INIT^DDGLIB0(1)
"RTN","DDBR",130,0)
 I $G(DIERR) Q
"RTN","DDBR",131,0)
 I '$D(IOSTBM)!('$D(IORI)) S X="IOSTBM;IORI" D ENDR^%ZISS
"RTN","DDBR",132,0)
 D:$G(IOSTBM)="" TRMERR^DDGLIB0($$EZBLD^DIALOG(831)) ;**
"RTN","DDBR",133,0)
 D:$G(IORI)="" TRMERR^DDGLIB0($$EZBLD^DIALOG(835))
"RTN","DDBR",134,0)
 W $P(DDGLCLR,DDGLDEL,2) ; VEN/SMH - Clear entire screen.
"RTN","DDBR",135,0)
 ;TODO: Rollback IOSL to 24 if IOSL is >100; restore at exit (prob in CLEAN) - VEN/SMH
"RTN","DDBR",136,0)
 Q
"RTN","DDBR",137,0)
 ;
"RTN","DDBR",138,0)
ERR(DDBERR) N P S P(1)=DDBERR
"RTN","DDBR",139,0)
 I $G(U)="^" N U S U="^"
"RTN","DDBR",140,0)
 D BLD^DIALOG(202,.P),OUT^DDBRU:$D(DDGLDEL)
"RTN","DDBR",141,0)
CLEAN D:'$D(DDS) KILL^DDGLIB0($G(DDBFLG))
"RTN","DDBR",142,0)
 Q
"RTN","DDGF2")
0^15^B31932302^B28408555
"RTN","DDGF2",1,0)
DDGF2 ;SFISC/MKO - ACTIONS FOR SELECTED FIELDS ;7JUL2016
"RTN","DDGF2",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDGF2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGF2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDGF2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDGF2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDGF2",7,0)
 ;
"RTN","DDGF2",8,0)
 ;Input:
"RTN","DDGF2",9,0)
 ;  B  = internal block number
"RTN","DDGF2",10,0)
 ;  F  = internal field order
"RTN","DDGF2",11,0)
 ;  T  = type of element ("C" = caption, "D" = data)
"RTN","DDGF2",12,0)
 ;  C  = caption
"RTN","DDGF2",13,0)
 ;  C1 = $Y of caption
"RTN","DDGF2",14,0)
 ;  C2 = $X of caption
"RTN","DDGF2",15,0)
 ;  D  = data representation (underlines)
"RTN","DDGF2",16,0)
 ;  D1 = $Y of data
"RTN","DDGF2",17,0)
 ;  D2 = $X of data
"RTN","DDGF2",18,0)
 ;  L  = length of data
"RTN","DDGF2",19,0)
 ;  P1 = page $Y
"RTN","DDGF2",20,0)
 ;  P2 = page $X
"RTN","DDGF2",21,0)
 N DDGFE
"RTN","DDGF2",22,0)
 S DDGFE=0,DDGFLSV=DDGFLIM
"RTN","DDGF2",23,0)
 S DDGFLIM=$P(@DDGFREF@("F",DDGFPG,B),U,1,2)_U_$P(DDGFLIM,U,3,4)
"RTN","DDGF2",24,0)
 ;
"RTN","DDGF2",25,0)
 D PAINTS
"RTN","DDGF2",26,0)
 S DDGFE=0 F  S Y=$$READ W:$T(@Y)="" $C(7) D:$T(@Y)]"" @Y Q:DDGFE  ;MOVE THE FIELD AROUND UNTIL SPACEBAR DESELECTS IT.
"RTN","DDGF2",27,0)
 D END
"RTN","DDGF2",28,0)
 D:$G(DDGFSUBP) SUBPG1^DDGFPG
"RTN","DDGF2",29,0)
 Q
"RTN","DDGF2",30,0)
 ;
"RTN","DDGF2",31,0)
END ;Redraw field 'F' on block 'B'
"RTN","DDGF2",32,0)
 S DDGFLIM=DDGFLSV K DDGFLSV
"RTN","DDGF2",33,0)
 Q:$D(^DIST(.404,B,40,F,0))[0
"RTN","DDGF2",34,0)
 N OLD,NEW,CAP,DATA S (NEW,OLD)=$G(^(2)),CAP=$P(NEW,U,3),DATA=$P(NEW,U,1)
"RTN","DDGF2",35,0)
 ;^DIST(.404,D0,40,D1,2)= (#4.1) DATA COORDINATE [1F] ^ (#4.2) DATA LENGTH [2N] ^ (#5.1) CAPTION COORDINATE [3F] ^ (#5.2) SUPPRESS COLON AFTER CAPTION? [4S] 
"RTN","DDGF2",36,0)
 S $P(NEW,U,2)=L ;LENGTH
"RTN","DDGF2",37,0)
 S $P(CAP,",",1)=C1+1,$P(CAP,",",2)=C2+1
"RTN","DDGF2",38,0)
 S C3=C2+$L(C)-1 ;CAPTION END POINT
"RTN","DDGF2",39,0)
 I T="C",C]"" D
"RTN","DDGF2",40,0)
 . D WRITE^DDGLIBW(DDGFWID,C,C1-P1,C2-P2)
"RTN","DDGF2",41,0)
 . S @DDGFREF@("RC",DDGFWID,C1,C2,C3,B,F,"C")=""
"RTN","DDGF2",42,0)
 ;
"RTN","DDGF2",43,0)
 I $D(D) D
"RTN","DDGF2",44,0)
 . S $P(DATA,",",1)=D1+1,$P(DATA,",",2)=D2+1
"RTN","DDGF2",45,0)
 . S D3=D2+L-1 ;DATA END POINT
"RTN","DDGF2",46,0)
 . D WRITE^DDGLIBW(DDGFWID,D,D1-P1,D2-P2)
"RTN","DDGF2",47,0)
 . S @DDGFREF@("RC",DDGFWID,D1,D2,D3,B,F,"D")=""
"RTN","DDGF2",48,0)
 ;
"RTN","DDGF2",49,0)
 S @DDGFREF@("F",DDGFPG,B,F)=C1_U_C2_U_C3_U_C_U_$S($D(D):D1_U_D2_U_D3_U_L,1:"^^^")_U_1,DDGFCHG=1
"RTN","DDGF2",50,0)
 S $P(NEW,U,1)=DATA,$P(NEW,U,3)=CAP I NEW'=OLD S ^DIST(.404,B,40,F,2)=NEW D KILLPGS^DDGFFLDA(B,DDGFWID) ;BLOCK MAY BE ON ANOTHER PAGE
"RTN","DDGF2",51,0)
 ;
"RTN","DDGF2",52,0)
 X IOXY
"RTN","DDGF2",53,0)
 Q
"RTN","DDGF2",54,0)
 ;
"RTN","DDGF2",55,0)
TO ;Time-out
"RTN","DDGF2",56,0)
 W $C(7)
"RTN","DDGF2",57,0)
 G DESELECT
"RTN","DDGF2",58,0)
 ;
"RTN","DDGF2",59,0)
DESELECT ;SPACE-BAR HAS DESELECTED FIELD
"RTN","DDGF2",60,0)
 S DDGFE=1
"RTN","DDGF2",61,0)
 Q
"RTN","DDGF2",62,0)
 ;
"RTN","DDGF2",63,0)
LNU I T="C" Q:C1'>$P(DDGFLIM,U)  ;LINE FEED UP
"RTN","DDGF2",64,0)
 I $D(D),D1'>$P(DDGFLIM,U) Q
"RTN","DDGF2",65,0)
 D REDRAW S:T="C" C1=C1-1
"RTN","DDGF2",66,0)
 S:$D(D) D1=D1-1
"RTN","DDGF2",67,0)
 S DY=DY-1
"RTN","DDGF2",68,0)
 D PAINTS
"RTN","DDGF2",69,0)
 Q
"RTN","DDGF2",70,0)
LND I T="C" Q:C1'<$P(DDGFLIM,U,3)  ;LINE FEED DOWN
"RTN","DDGF2",71,0)
 I $D(D),D1'<$P(DDGFLIM,U,3) Q
"RTN","DDGF2",72,0)
 D REDRAW
"RTN","DDGF2",73,0)
 S:T="C" C1=C1+1
"RTN","DDGF2",74,0)
 S:$D(D) D1=D1+1
"RTN","DDGF2",75,0)
 S DY=DY+1
"RTN","DDGF2",76,0)
 D PAINTS
"RTN","DDGF2",77,0)
 Q
"RTN","DDGF2",78,0)
CHR I T="C" Q:C2+$L(C)>$P(DDGFLIM,U,4)
"RTN","DDGF2",79,0)
 I $D(D),D2+L>$P(DDGFLIM,U,4) Q
"RTN","DDGF2",80,0)
 D REDRAW S:T="C" C2=C2+1
"RTN","DDGF2",81,0)
 S:$D(D) D2=D2+1
"RTN","DDGF2",82,0)
 S DX=DX+1
"RTN","DDGF2",83,0)
 D PAINTS
"RTN","DDGF2",84,0)
 Q
"RTN","DDGF2",85,0)
CHL I T="C" Q:C2'>$P(DDGFLIM,U,2)
"RTN","DDGF2",86,0)
 I $D(D),D2'>$P(DDGFLIM,U,2) Q
"RTN","DDGF2",87,0)
 D REDRAW S:T="C" C2=C2-1
"RTN","DDGF2",88,0)
 S:$D(D) D2=D2-1
"RTN","DDGF2",89,0)
 S DX=DX-1
"RTN","DDGF2",90,0)
 D PAINTS
"RTN","DDGF2",91,0)
 Q
"RTN","DDGF2",92,0)
TBR N X
"RTN","DDGF2",93,0)
 I T="C" Q:C2+$L(C)>$P(DDGFLIM,U,4)
"RTN","DDGF2",94,0)
 I $D(D),D2+L>$P(DDGFLIM,U,4) Q
"RTN","DDGF2",95,0)
 D REDRAW
"RTN","DDGF2",96,0)
 I T="C" D
"RTN","DDGF2",97,0)
 . S X=$$MIN(5,$P(DDGFLIM,U,4)-(C2+$L(C)),$S($D(D):$P(DDGFLIM,U,4)-(D2+L)+1,1:""))
"RTN","DDGF2",98,0)
 . S C2=C2+X
"RTN","DDGF2",99,0)
 E  S X=$$MIN(5,$P(DDGFLIM,U,4)-(D2+L)+1)
"RTN","DDGF2",100,0)
 S:$D(D) D2=D2+X
"RTN","DDGF2",101,0)
 S DX=DX+X
"RTN","DDGF2",102,0)
 D PAINTS
"RTN","DDGF2",103,0)
 Q
"RTN","DDGF2",104,0)
TBL N X
"RTN","DDGF2",105,0)
 I T="C" Q:C2'>$P(DDGFLIM,U,2)
"RTN","DDGF2",106,0)
 I $D(D),D2'>$P(DDGFLIM,U,2) Q
"RTN","DDGF2",107,0)
 D REDRAW
"RTN","DDGF2",108,0)
 I T="C" D
"RTN","DDGF2",109,0)
 . S X=$$MIN(5,C2-$P(DDGFLIM,U,2),$S($D(D):D2-$P(DDGFLIM,U,2),1:""))
"RTN","DDGF2",110,0)
 . S C2=C2-X
"RTN","DDGF2",111,0)
 E  S X=$$MIN(5,D2-$P(DDGFLIM,U,2))
"RTN","DDGF2",112,0)
 S:$D(D) D2=D2-X
"RTN","DDGF2",113,0)
 S DX=DX-X
"RTN","DDGF2",114,0)
 D PAINTS
"RTN","DDGF2",115,0)
 Q
"RTN","DDGF2",116,0)
SCT N Y
"RTN","DDGF2",117,0)
 I T="C" Q:C1'>$P(DDGFLIM,U)
"RTN","DDGF2",118,0)
 I $D(D),D1'>$P(DDGFLIM,U) Q
"RTN","DDGF2",119,0)
 D REDRAW
"RTN","DDGF2",120,0)
 I T="C" S Y=$S('$D(D):C1,C1<D1:C1,1:D1)-$P(DDGFLIM,U),C1=C1-Y
"RTN","DDGF2",121,0)
 E  S Y=D1-$P(DDGFLIM,U)
"RTN","DDGF2",122,0)
 S:$D(D) D1=D1-Y
"RTN","DDGF2",123,0)
 S DY=DY-Y
"RTN","DDGF2",124,0)
 D PAINTS
"RTN","DDGF2",125,0)
 Q
"RTN","DDGF2",126,0)
SCB N Y
"RTN","DDGF2",127,0)
 I T="C" Q:C1'<$P(DDGFLIM,U,3)
"RTN","DDGF2",128,0)
 I $D(D),D1'<$P(DDGFLIM,U,3) Q
"RTN","DDGF2",129,0)
 D REDRAW
"RTN","DDGF2",130,0)
 I T="C" S Y=$P(DDGFLIM,U,3)-$S('$D(D):C1,C1>D1:C1,1:D1),C1=C1+Y
"RTN","DDGF2",131,0)
 E  S Y=$P(DDGFLIM,U,3)-D1
"RTN","DDGF2",132,0)
 S:$D(D) D1=D1+Y
"RTN","DDGF2",133,0)
 S DY=DY+Y
"RTN","DDGF2",134,0)
 D PAINTS
"RTN","DDGF2",135,0)
 Q
"RTN","DDGF2",136,0)
SCR N X
"RTN","DDGF2",137,0)
 I T="C" Q:C2+$L(C)>$P(DDGFLIM,U,4)
"RTN","DDGF2",138,0)
 I $D(D),D2+L>$P(DDGFLIM,U,4) Q
"RTN","DDGF2",139,0)
 D REDRAW
"RTN","DDGF2",140,0)
 I T="C" D
"RTN","DDGF2",141,0)
 . S X=$P(DDGFLIM,U,4)-$S('$D(D):C2+$L(C),C2+$L(C)>(D2+L):C2+$L(C),1:D2+L)+1
"RTN","DDGF2",142,0)
 . S C2=C2+X
"RTN","DDGF2",143,0)
 E  S X=$P(DDGFLIM,U,4)-(D2+L)+1
"RTN","DDGF2",144,0)
 S:$D(D) D2=D2+X
"RTN","DDGF2",145,0)
 S DX=DX+X
"RTN","DDGF2",146,0)
 D PAINTS
"RTN","DDGF2",147,0)
 Q
"RTN","DDGF2",148,0)
SCL N X
"RTN","DDGF2",149,0)
 I T="C" Q:C2'>$P(DDGFLIM,U,2)
"RTN","DDGF2",150,0)
 I $D(D),D2'>$P(DDGFLIM,U,2) Q
"RTN","DDGF2",151,0)
 D REDRAW
"RTN","DDGF2",152,0)
 I T="C" S X=$S('$D(D):C2,C2<D2:C2,1:D2)-$P(DDGFLIM,U,2),C2=C2-X
"RTN","DDGF2",153,0)
 E  S X=D2-$P(DDGFLIM,U,2)
"RTN","DDGF2",154,0)
 S:$D(D) D2=D2-X
"RTN","DDGF2",155,0)
 S DX=DX-X
"RTN","DDGF2",156,0)
 D PAINTS
"RTN","DDGF2",157,0)
 Q
"RTN","DDGF2",158,0)
EDIT ;A SEPARATE SCREENMAN FORM WILL EDIT THIS SINGLE FIELD
"RTN","DDGF2",159,0)
 G EDIT^DDGFFLD
"RTN","DDGF2",160,0)
SUBPG ;
"RTN","DDGF2",161,0)
 G SUBPG^DDGFPG
"RTN","DDGF2",162,0)
 ;
"RTN","DDGF2",163,0)
RC(DDGFY,DDGFX) ;Update status line, reset DX and DY, move cursor
"RTN","DDGF2",164,0)
 N DDGFS
"RTN","DDGF2",165,0)
 I DDGFR D
"RTN","DDGF2",166,0)
 . S DY=IOSL-6,DX=IOM-9,DDGFS="R"_(DDGFY+1)_",C"_(DDGFX+1)
"RTN","DDGF2",167,0)
 . X IOXY W DDGFS_$J("",7-$L(DDGFS))
"RTN","DDGF2",168,0)
 S DY=DDGFY,DX=DDGFX X IOXY
"RTN","DDGF2",169,0)
 Q
"RTN","DDGF2",170,0)
 ;
"RTN","DDGF2",171,0)
REDRAW ;
"RTN","DDGF2",172,0)
 D:T="C" REPAINT^DDGLIBW(DDGFWID,(C1-P1)_U_(C2-P2)_U_1_U_$L(C))
"RTN","DDGF2",173,0)
 D:$D(D) REPAINT^DDGLIBW(DDGFWID,(D1-P1)_U_(D2-P2)_U_1_U_L)
"RTN","DDGF2",174,0)
 Q
"RTN","DDGF2",175,0)
 ;
"RTN","DDGF2",176,0)
PAINTS ;
"RTN","DDGF2",177,0)
 N Y,X
"RTN","DDGF2",178,0)
 S Y=DY,X=DX
"RTN","DDGF2",179,0)
 I T="C" S DY=C1,DX=C2 X IOXY W $P(DDGLVID,DDGLDEL,6)_$E(C,1,$$MIN($L(C),$P(DDGFLIM,U,4)-C2+1))_$P(DDGLVID,DDGLDEL,10)
"RTN","DDGF2",180,0)
 I $D(D) S DY=D1,DX=D2 X IOXY W $P(DDGLVID,DDGLDEL,6)_$E(D,1,$$MIN(L,$P(DDGFLIM,U,4)-D2+1))_$P(DDGLVID,DDGLDEL,10)
"RTN","DDGF2",181,0)
 D RC(Y,X)
"RTN","DDGF2",182,0)
 Q
"RTN","DDGF2",183,0)
 ;
"RTN","DDGF2",184,0)
MIN(X,Y,Z) ;Return the minimum of two or three numbers
"RTN","DDGF2",185,0)
 N A
"RTN","DDGF2",186,0)
 S A=$S(X<Y:X,1:Y)
"RTN","DDGF2",187,0)
 Q:$G(Z)="" A
"RTN","DDGF2",188,0)
 Q $S(A<Z:A,1:Z)
"RTN","DDGF2",189,0)
 ;
"RTN","DDGF2",190,0)
READ() N S,Y
"RTN","DDGF2",191,0)
 F  R *Y:DTIME D C Q:Y'=-1
"RTN","DDGF2",192,0)
 Q Y
"RTN","DDGF2",193,0)
 ;
"RTN","DDGF2",194,0)
C I Y<0 S Y="TO" Q
"RTN","DDGF2",195,0)
 S S=""
"RTN","DDGF2",196,0)
C1 S S=S_$C(Y)
"RTN","DDGF2",197,0)
 I DDGF("SIN")'[(U_S) D  I Y=-1 W $C(7) Q
"RTN","DDGF2",198,0)
 . I $C(Y)'?1L S Y=-1 Q
"RTN","DDGF2",199,0)
 . S S=$E(S,1,$L(S)-1)_$C(Y-32) S:DDGF("SIN")'[(U_S_U) Y=-1
"RTN","DDGF2",200,0)
 ;
"RTN","DDGF2",201,0)
 I DDGF("SIN")[(U_S_U),S'=$C(27) S Y=$P(DDGF("SOUT"),U,$L($P(DDGF("SIN"),U_S_U),U)) Q
"RTN","DDGF2",202,0)
 R *Y:5 G:Y'=-1 C1 W $C(7)
"RTN","DDGF2",203,0)
 Q
"RTN","DDGFFLD")
0^8^B11526097^B9993556
"RTN","DDGFFLD",1,0)
DDGFFLD ;SFISC/MKO - EDIT A FIELD ;19APR2016
"RTN","DDGFFLD",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDGFFLD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGFFLD",4,0)
 ;COME IN WITH 'F'=FIELD NUMBER ON BLOCK 'B', PAGE DDGFWID="P4"
"RTN","DDGFFLD",5,0)
 ;GFT;**1055**
"RTN","DDGFFLD",6,0)
 ;
"RTN","DDGFFLD",7,0)
EDIT ;
"RTN","DDGFFLD",8,0)
 Q:$D(^DIST(.404,B,40,F,0))[0
"RTN","DDGFFLD",9,0)
 I T="D" Q:C]""  K @DDGFREF@("F",DDGFPG,B,F)
"RTN","DDGFFLD",10,0)
 ;
"RTN","DDGFFLD",11,0)
 S DDGFDY=DY,DDGFDX=DX
"RTN","DDGFFLD",12,0)
 S DDGFTYPE=$P(^DIST(.404,B,40,F,0),U,3)
"RTN","DDGFFLD",13,0)
 I 'DDGFTYPE D
"RTN","DDGFFLD",14,0)
 . I $G(^DIST(.404,B,40,F,20))'?."^" S DDGFTYPE=2 Q
"RTN","DDGFFLD",15,0)
 . I $P($G(^DIST(.404,B,0)),U,2),$G(^DIST(.404,B,40,F,1)) S DDGFTYPE=3
"RTN","DDGFFLD",16,0)
 G:'DDGFTYPE EDITQ
"RTN","DDGFFLD",17,0)
 ;
"RTN","DDGFFLD",18,0)
 S DDGFB2=@DDGFREF@("F",DDGFPG,B)
"RTN","DDGFFLD",19,0)
 S DDGFB1=$P(DDGFB2,U),DDGFB2=$P(DDGFB2,U,2)
"RTN","DDGFFLD",20,0)
 S DDGFDD=$P(^DIST(.404,B,0),U,2)
"RTN","DDGFFLD",21,0)
 S (DDGFSUP,DDGFSUP0)=$S(C]""&(DDGFTYPE'=1):$E(C,$L(C))'=":",1:"")
"RTN","DDGFFLD",22,0)
 S (DDGFCAP,DDGFCAP0)=$S(DDGFTYPE=1!DDGFSUP0:C,1:$E(C,1,$L(C)-1))
"RTN","DDGFFLD",23,0)
 S (DDGFCC,DDGFCC0)=$S(C]"":C1-DDGFB1+1_","_(C2-DDGFB2+1),1:"")
"RTN","DDGFFLD",24,0)
 I $D(D) D
"RTN","DDGFFLD",25,0)
 . S (DDGFDL,DDGFDL0)=L
"RTN","DDGFFLD",26,0)
 . S (DDGFDC,DDGFDC0)=D1-DDGFB1+1_","_(D2-DDGFB2+1)
"RTN","DDGFFLD",27,0)
 K DDGFB1,DDGFB2
"RTN","DDGFFLD",28,0)
 ;
"RTN","DDGFFLD",29,0)
 S DDSFILE=.404,DDSFILE(1)=.4044,DDSPARM="KSTW"
"RTN","DDGFFLD",30,0)
 S DR="[DDGF FIELD "_$P("CAPTION ONLY^FORM ONLY^DD^COMPUTED",U,DDGFTYPE)_"]"
"RTN","DDGFFLD",31,0)
 S DA=F,DA(1)=B
"RTN","DDGFFLD",32,0)
 D
"RTN","DDGFFLD",33,0)
 . N B,F,T,C,C1,C2,D,D1,D2,L,P1,P2
"RTN","DDGFFLD",34,0)
DDS . D ^DDS K DDSFILE,DDSPARM,DR,DDGFDD ;RECURSIVE CALL TO SCREENMAN FOR A GIVEN FIELD
"RTN","DDGFFLD",35,0)
 ;
"RTN","DDGFFLD",36,0)
 ;If caption, caption coords, data length, data coords, or suppress
"RTN","DDGFFLD",37,0)
 ;colon flag changed we need to update some local variables
"RTN","DDGFFLD",38,0)
 I '$D(DA) D KILLPGS^DDGFFLDA(B,DDGFWID) ;FIELD IS GONE
"RTN","DDGFFLD",39,0)
 I $D(DA)#2,$G(DDSSAVE) D  ;BECAUSE DDSPARM CONTAINED "S", DDSSAVE CAN COME BACK FROM ^DDS
"RTN","DDGFFLD",40,0)
 . S DDGFNDB=$G(@DDGFREF@("F",DDGFPG,B))
"RTN","DDGFFLD",41,0)
 . S:DDGFCAP="" (DDGFSUP,DDGFCC)=""
"RTN","DDGFFLD",42,0)
 . S DR=""
"RTN","DDGFFLD",43,0)
 . ;
"RTN","DDGFFLD",44,0)
 . I DDGFCAP'=DDGFCAP0!(DDGFSUP'=DDGFSUP0) D  ;CAPTION HAS BEEN CHANGED
"RTN","DDGFFLD",45,0)
 .. S C=DDGFCAP_$S(DDGFCAP]""&(DDGFTYPE'=1)&'DDGFSUP:":",1:"")
"RTN","DDGFFLD",46,0)
 .. S:DDGFCAP'=DDGFCAP0 DR=DR_"1////"_$S(DDGFCAP]"":DDGFCAP,1:"@")_";"
"RTN","DDGFFLD",47,0)
 .. S:DDGFSUP'=DDGFSUP0 DR=DR_"5.2////"_$S(DDGFSUP:1,1:"@")_";"
"RTN","DDGFFLD",48,0)
 . ;
"RTN","DDGFFLD",49,0)
 . D:DDGFCC'=DDGFCC0  ;LOCATION OF CAPTION HAS BEEN CHANGED
"RTN","DDGFFLD",50,0)
 .. S C1=$S(DDGFCAP]"":$P(DDGFCC,",")-1+$P(DDGFNDB,U),1:"")
"RTN","DDGFFLD",51,0)
 .. S C2=$S(DDGFCAP]"":$P(DDGFCC,",",2)-1+$P(DDGFNDB,U,2),1:"")
"RTN","DDGFFLD",52,0)
 .. S DR=DR_"5.1////"_$S(DDGFCC]"":DDGFCC,1:"@")_";"
"RTN","DDGFFLD",53,0)
 . ;
"RTN","DDGFFLD",54,0)
 . D:$D(D)
"RTN","DDGFFLD",55,0)
 .. D:DDGFDC'=DDGFDC0
"RTN","DDGFFLD",56,0)
 ... S D1=$P(DDGFDC,",")-1+$P(DDGFNDB,U)
"RTN","DDGFFLD",57,0)
 ... S D2=$P(DDGFDC,",",2)-1+$P(DDGFNDB,U,2)
"RTN","DDGFFLD",58,0)
 ... S DR=DR_"4.1////"_DDGFDC_";"
"RTN","DDGFFLD",59,0)
 .. D:DDGFDL'=DDGFDL0
"RTN","DDGFFLD",60,0)
 ... S L=DDGFDL
"RTN","DDGFFLD",61,0)
 ... S D=$TR($J("",L)," ","_")
"RTN","DDGFFLD",62,0)
 ... S DR=DR_"4.2////"_DDGFDL_";"
"RTN","DDGFFLD",63,0)
 . ;
"RTN","DDGFFLD",64,0)
 . I T="D",C]"" D
"RTN","DDGFFLD",65,0)
 .. D WRITE^DDGLIBW(DDGFWID,C,C1-P1,C2-P2,"",1)
"RTN","DDGFFLD",66,0)
 .. S @DDGFREF@("RC",DDGFWID,C1,C2,C2+$L(C)-1,B,F,"C")=""
"RTN","DDGFFLD",67,0)
 . ;
"RTN","DDGFFLD",68,0)
 . I DR]"" D  D KILLPGS^DDGFFLDA(B,DDGFWID) ;SOMETHING'S CHANGED, SO ERASE OTHER PAGES CONTAINING THIS BLOCK
"RTN","DDGFFLD",69,0)
 .. N B,F,T,C,C1,C2,D,D1,D2,L,P1,P2
"RTN","DDGFFLD",70,0)
 .. S DIE="^DIST(.404,"_DA(1)_",40,"
"RTN","DDGFFLD",71,0)
 .. S DR=$E(DR,1,$L(DR)-1)
"RTN","DDGFFLD",72,0)
 .. D ^DIE
"RTN","DDGFFLD",73,0)
 ;
"RTN","DDGFFLD",74,0)
 K DA,DDGFNDB
"RTN","DDGFFLD",75,0)
 K DDGFSUP,DDGFSUP0,DDGFCAP,DDGFCAP0,DDGFCC,DDGFCC0
"RTN","DDGFFLD",76,0)
 K DDGFDL,DDGFDL0,DDGFDC,DDGFDC0,DDSSAVE
"RTN","DDGFFLD",77,0)
 K DIE,DR
"RTN","DDGFFLD",78,0)
 ;
"RTN","DDGFFLD",79,0)
 D REFRESH^DDGF,RC(DDGFDY,DDGFDX)
"RTN","DDGFFLD",80,0)
EDITQ S DDGFE=1
"RTN","DDGFFLD",81,0)
 K DDGFDY,DDGFDX,DDGFTYPE
"RTN","DDGFFLD",82,0)
 Q
"RTN","DDGFFLD",83,0)
 ;
"RTN","DDGFFLD",84,0)
RC(DDGFY,DDGFX) ;Update status line, reset DX and DY, move cursor
"RTN","DDGFFLD",85,0)
 N S
"RTN","DDGFFLD",86,0)
 I DDGFR D
"RTN","DDGFFLD",87,0)
 . S DY=IOSL-6,DX=IOM-9,S="R"_(DDGFY+1)_",C"_(DDGFX+1)
"RTN","DDGFFLD",88,0)
 . X IOXY W S_$J("",7-$L(S))
"RTN","DDGFFLD",89,0)
 S DY=DDGFY,DX=DDGFX X IOXY
"RTN","DDGFFLD",90,0)
 Q
"RTN","DDGFFLDA")
0^9^B21253213^B18284414
"RTN","DDGFFLDA",1,0)
DDGFFLDA ;SFISC/MKO - ADD A FIELD ;19APR2016
"RTN","DDGFFLDA",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDGFFLDA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGFFLDA",4,0)
 ;GFT;**1055**
"RTN","DDGFFLDA",5,0)
ADD ;Add a field
"RTN","DDGFFLDA",6,0)
 I '$O(^DIST(.403,+DDGFFM,40,DDGFPG,40,0)) D  Q
"RTN","DDGFFLDA",7,0)
 . D MSG^DDGF($C(7)_"There are no blocks defined on this page.  To add a block, press <PF2>B.")
"RTN","DDGFFLDA",8,0)
 . H 2 D MSG^DDGF()
"RTN","DDGFFLDA",9,0)
 S DDGFDY=DY,DDGFDX=DX
"RTN","DDGFFLDA",10,0)
 ;
"RTN","DDGFFLDA",11,0)
 ;Invoke form to select block, field order, field type
"RTN","DDGFFLDA",12,0)
 K DDGFBLCK,DDGFFORD,DDGFTYPE
"RTN","DDGFFLDA",13,0)
 S DDSFILE=.404,DDSFILE(1)=.4044
"RTN","DDGFFLDA",14,0)
 S DR="[DDGF FIELD ADD]",DDSPARM="KTW"
"RTN","DDGFFLDA",15,0)
 D ^DDS K DDSFILE,DA,DR,DDSPARM
"RTN","DDGFFLDA",16,0)
 ;
"RTN","DDGFFLDA",17,0)
 I '$D(DDGFBLCK)!'$D(DDGFFORD)!'$D(DDGFTYPE) G ADDQ
"RTN","DDGFFLDA",18,0)
 ;
"RTN","DDGFFLDA",19,0)
 ;Get relative field coordinates
"RTN","DDGFFLDA",20,0)
 S (DDGFCAP,DDGFCAP0)=""
"RTN","DDGFFLDA",21,0)
 S (DDGFSUP,DDGFSUP0)=""
"RTN","DDGFFLDA",22,0)
 S (DDGFCC,DDGFCC0)=""
"RTN","DDGFFLDA",23,0)
 ;
"RTN","DDGFFLDA",24,0)
 ;E.G. DDGFREF="^TMP("DDGF",$J,"F",1,791,1)="1^0^5^TIMSON"
"RTN","DDGFFLDA",25,0)
 S DDGFB2=@DDGFREF@("F",DDGFPG,DDGFBLCK)
"RTN","DDGFFLDA",26,0)
 S DDGFB1=$P(DDGFB2,U),DDGFB2=$P(DDGFB2,U,2)
"RTN","DDGFFLDA",27,0)
 ;
"RTN","DDGFFLDA",28,0)
 I DDGFTYPE=1 D
"RTN","DDGFFLDA",29,0)
 . S DDGFCC0=DDGFDY-DDGFB1+1_","_(DDGFDX-DDGFB2+1)
"RTN","DDGFFLDA",30,0)
 E  D
"RTN","DDGFFLDA",31,0)
 . S DDGFD1=DDGFDY-DDGFB1+1,DDGFD2=DDGFDX-DDGFB2+1
"RTN","DDGFFLDA",32,0)
 . S (DDGFDC,DDGFDC0)=DDGFD1_","_DDGFD2
"RTN","DDGFFLDA",33,0)
 . S (DDGFDL,DDGFDL0)=1
"RTN","DDGFFLDA",34,0)
 ;
"RTN","DDGFFLDA",35,0)
 I DDGFTYPE'=1,DDGFD1<1!(DDGFD2<1) D  G ADDQ
"RTN","DDGFFLDA",36,0)
 . D MSG^DDGF($C(7)_"Unable to add a field above or to the left of the block.")
"RTN","DDGFFLDA",37,0)
 . H 2 D MSG^DDGF()
"RTN","DDGFFLDA",38,0)
 ;
"RTN","DDGFFLDA",39,0)
 K DDGFD1,DDGFD2
"RTN","DDGFFLDA",40,0)
 ;
"RTN","DDGFFLDA",41,0)
 ;Add field order to block file
"RTN","DDGFFLDA",42,0)
 S DIC="^DIST(.404,"_DDGFBLCK_",40,",DIC(0)="L"
"RTN","DDGFFLDA",43,0)
 S DIC("P")=$P(^DD(.404,40,0),U,2)
"RTN","DDGFFLDA",44,0)
 S DA(1)=DDGFBLCK,X=DDGFFORD
"RTN","DDGFFLDA",45,0)
 K DD,DO D FILE^DICN
"RTN","DDGFFLDA",46,0)
 I Y=-1 K DIC,DA,Y D MSG^DDGF($C(7)_"Unable to add field.") H 2 D MSG^DDGF() G ADDQ
"RTN","DDGFFLDA",47,0)
 ;
"RTN","DDGFFLDA",48,0)
 ;Stuff values for field type, data coordinate, and data length
"RTN","DDGFFLDA",49,0)
 ;If form-only field, also stuff in default read type
"RTN","DDGFFLDA",50,0)
 S DIE=DIC,DA(1)=DDGFBLCK,DA=+Y
"RTN","DDGFFLDA",51,0)
 S DR="2////"_DDGFTYPE
"RTN","DDGFFLDA",52,0)
 S:DDGFTYPE'=1 DR=DR_";4.1////"_DDGFDC_";4.2////1"
"RTN","DDGFFLDA",53,0)
 S:DDGFTYPE=2 DR=DR_";20.1////F"
"RTN","DDGFFLDA",54,0)
 D ^DIE K DIC,DIE,DR,Y
"RTN","DDGFFLDA",55,0)
 ;
"RTN","DDGFFLDA",56,0)
 ;Invoke appropriate form
"RTN","DDGFFLDA",57,0)
 S DDSFILE=.404,DDSFILE(1)=.4044,DDSPARM="CKTW"
"RTN","DDGFFLDA",58,0)
 S DDGFDD=$P(^DIST(.404,DDGFBLCK,0),U,2)
"RTN","DDGFFLDA",59,0)
 S DR="[DDGF FIELD "_$P("CAPTION ONLY^FORM ONLY^DD^COMPUTED",U,DDGFTYPE)_"]" ;4 TYPES OF SCREENMAN FIELDS
"RTN","DDGFFLDA",60,0)
 D ^DDS K DDSFILE,DR,DDSPARM,DDGFDD
"RTN","DDGFFLDA",61,0)
 ;
"RTN","DDGFFLDA",62,0)
 I $D(DA)#2,DDGFTYPE'=1,$G(DDSCHANG)'=1 D
"RTN","DDGFFLDA",63,0)
 . S DIK="^DIST(.404,"_DA(1)_",40,"
"RTN","DDGFFLDA",64,0)
 . D ^DIK K DIK
"RTN","DDGFFLDA",65,0)
 E  I $D(DA)#2 D
"RTN","DDGFFLDA",66,0)
 . D SAVE
"RTN","DDGFFLDA",67,0)
 . D LOADF
"RTN","DDGFFLDA",68,0)
 ;
"RTN","DDGFFLDA",69,0)
ADDQ ;Refresh and cleanup
"RTN","DDGFFLDA",70,0)
 D REFRESH^DDGF
"RTN","DDGFFLDA",71,0)
 D RC(DDGFDY,DDGFDX)
"RTN","DDGFFLDA",72,0)
 ;
"RTN","DDGFFLDA",73,0)
 K DA,DDSCHANG
"RTN","DDGFFLDA",74,0)
 K DDGFB1,DDGFB2,DDGFD1,DDGFD2
"RTN","DDGFFLDA",75,0)
 K DDGFSUP,DDGFSUP0,DDGFCAP,DDGFCAP0,DDGFCC,DDGFCC0
"RTN","DDGFFLDA",76,0)
 K DDGFDL,DDGFDL0,DDGFDC,DDGFDC0
"RTN","DDGFFLDA",77,0)
 K DDGFDY,DDGFDX,DDGFBLCK,DDGFFORD,DDGFTYPE
"RTN","DDGFFLDA",78,0)
 Q
"RTN","DDGFFLDA",79,0)
 ;
"RTN","DDGFFLDA",80,0)
SAVE ;Save changes to caption, coordinates, data length, and suppress
"RTN","DDGFFLDA",81,0)
 ;colon flag
"RTN","DDGFFLDA",82,0)
 S:DDGFCAP="" (DDGFSUP,DDGFCC)=""
"RTN","DDGFFLDA",83,0)
 S DR=""
"RTN","DDGFFLDA",84,0)
 ;
"RTN","DDGFFLDA",85,0)
 S:DDGFCAP]"" DR=DR_"1////"_DDGFCAP_";"
"RTN","DDGFFLDA",86,0)
 S:DDGFCC]"" DR=DR_"5.1////"_DDGFCC_";"
"RTN","DDGFFLDA",87,0)
 S:DDGFSUP DR=DR_"5.2////1;"
"RTN","DDGFFLDA",88,0)
 ;
"RTN","DDGFFLDA",89,0)
 I DDGFTYPE'=1 D
"RTN","DDGFFLDA",90,0)
 . S:DDGFDC'=DDGFDC0 DR=DR_"4.1////"_DDGFDC_";"
"RTN","DDGFFLDA",91,0)
 . S:DDGFDL'=DDGFDL0 DR=DR_"4.2////"_DDGFDL_";"
"RTN","DDGFFLDA",92,0)
 I DR="" K DR Q
"RTN","DDGFFLDA",93,0)
 ;
"RTN","DDGFFLDA",94,0)
 S DIE="^DIST(.404,"_DA(1)_",40,"
"RTN","DDGFFLDA",95,0)
 S DR=$E(DR,1,$L(DR)-1)
"RTN","DDGFFLDA",96,0)
 D ^DIE K DIE,DR,Y
"RTN","DDGFFLDA",97,0)
 Q
"RTN","DDGFFLDA",98,0)
 ;
"RTN","DDGFFLDA",99,0)
LOADF ;Set DDGFREF array and window buffer
"RTN","DDGFFLDA",100,0)
 N C,C1,C2,C3,D,D1,D2,D3,L
"RTN","DDGFFLDA",101,0)
 ;
"RTN","DDGFFLDA",102,0)
 I DDGFCAP="" D
"RTN","DDGFFLDA",103,0)
 . S (C,C1,C2,C3)=""
"RTN","DDGFFLDA",104,0)
 . K @DDGFREF@("F",DDGFPG,DDGFBLCK,DA)
"RTN","DDGFFLDA",105,0)
 E  D
"RTN","DDGFFLDA",106,0)
 . S C=DDGFCAP_$S(DDGFTYPE'=1&'DDGFSUP:":",1:"")
"RTN","DDGFFLDA",107,0)
 . S C1=$P(DDGFCC,",")-1+DDGFB1
"RTN","DDGFFLDA",108,0)
 . S C2=$P(DDGFCC,",",2)-1+DDGFB2
"RTN","DDGFFLDA",109,0)
 . S C3=C2+$L(C)-1
"RTN","DDGFFLDA",110,0)
 . ;
"RTN","DDGFFLDA",111,0)
 . S @DDGFREF@("F",DDGFPG,DDGFBLCK,DA)=C1_U_C2_U_C3_U_C
"RTN","DDGFFLDA",112,0)
 . S @DDGFREF@("RC",DDGFWID,C1,C2,C3,DDGFBLCK,DA,"C")=""
"RTN","DDGFFLDA",113,0)
 . D WRITE^DDGLIBW(DDGFWID,C,C1-$P(DDGFLIM,U),C2-$P(DDGFLIM,U,2),"",1)
"RTN","DDGFFLDA",114,0)
 ;
"RTN","DDGFFLDA",115,0)
 I DDGFTYPE'=1 D  ;IF IT IS NOT CAPTION-ONLY
"RTN","DDGFFLDA",116,0)
 . S D1=$P(DDGFDC,",")-1+DDGFB1
"RTN","DDGFFLDA",117,0)
 . S D2=$P(DDGFDC,",",2)-1+DDGFB2
"RTN","DDGFFLDA",118,0)
 . S D3=D2+DDGFDL-1
"RTN","DDGFFLDA",119,0)
 . ;
"RTN","DDGFFLDA",120,0)
 . S $P(@DDGFREF@("F",DDGFPG,DDGFBLCK,DA),U,5,8)=D1_U_D2_U_D3_U_DDGFDL
"RTN","DDGFFLDA",121,0)
 . I D1]"",D2]"" S @DDGFREF@("RC",DDGFWID,D1,D2,D3,DDGFBLCK,DA,"D")=""
"RTN","DDGFFLDA",122,0)
 .D KILLPGS(DDGFBLCK,DDGFWID)
"RTN","DDGFFLDA",123,0)
 . D:DDGFDL WRITE^DDGLIBW(DDGFWID,$TR($J("",DDGFDL)," ","_"),D1-$P(DDGFLIM,U),D2-$P(DDGFLIM,U,2),"",1)
"RTN","DDGFFLDA",124,0)
 Q
"RTN","DDGFFLDA",125,0)
 ;
"RTN","DDGFFLDA",126,0)
KILLPGS(BLOCK,PPAGE) ;GET RID OF OTHER PAGES THAT HAVE THIS BLOCK ON THEM.  PPAGE="P"_(INTERNAL PAGE)   ALSO COME HERE FROM DDGFFLD
"RTN","DDGFFLDA",127,0)
 N P F P=0:0 S P=$O(@DDGFREF@("F",P)) Q:'P  I $D(^(P,BLOCK)) S P("P"_P)=""
"RTN","DDGFFLDA",128,0)
 S P="" F  S P=$O(P(P)) Q:P=""  I P'=PPAGE K @DDGFREF@("RC",P),@DDGLREF@(P) ;!! E.G., ^TMP("DDGF",$J,"RC","P4") &^TMP("DDGL",$J,"W","P4"). PAGES WILL BE RE-CREATED WHEN NEEDED
"RTN","DDGFFLDA",129,0)
 Q
"RTN","DDGFFLDA",130,0)
 ;
"RTN","DDGFFLDA",131,0)
RC(DDGFY,DDGFX) ;Update status line, reset DX and DY, move cursor
"RTN","DDGFFLDA",132,0)
 N S
"RTN","DDGFFLDA",133,0)
 I DDGFR D
"RTN","DDGFFLDA",134,0)
 . S DY=IOSL-6,DX=IOM-9,S="R"_(DDGFY+1)_",C"_(DDGFX+1)
"RTN","DDGFFLDA",135,0)
 . X IOXY W S_$J("",7-$L(S))
"RTN","DDGFFLDA",136,0)
 S DY=DDGFY,DX=DDGFX X IOXY
"RTN","DDGFFLDA",137,0)
 Q
"RTN","DDGLIB0")
0^10^B30266676^B29674136
"RTN","DDGLIB0",1,0)
DDGLIB0 ;SFISC/MKO - SETUP AND CLEANUP FOR WINDOWS ;14JUN2016
"RTN","DDGLIB0",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDGLIB0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGLIB0",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDGLIB0",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDGLIB0",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDGLIB0",7,0)
 ;
"RTN","DDGLIB0",8,0)
INIT(DDGLBROW) ;Setup required variables
"RTN","DDGLIB0",9,0)
 ;Set margin to 0
"RTN","DDGLIB0",10,0)
 ;Turn autowrap off
"RTN","DDGLIB0",11,0)
 ;Turn type-ahead on
"RTN","DDGLIB0",12,0)
 ;Variables set:
"RTN","DDGLIB0",13,0)
 ;  DDGLDEL  = delimiter for other DDGL variables
"RTN","DDGLIB0",14,0)
 ;  DDGLVID  = codes that turn on/off video attributes
"RTN","DDGLIB0",15,0)
 ;  DDGLED   = codes for editing
"RTN","DDGLIB0",16,0)
 ;  DDGLCLR  = codes to erase characters
"RTN","DDGLIB0",17,0)
 ;  DDGLGRA  = codes for graphics characters
"RTN","DDGLIB0",18,0)
 ;  DDGLZOSF = array of code from %ZOSF (as of V22.2 - array comes from OS file)
"RTN","DDGLIB0",19,0)
 ;  DDGLREF  = global where window image is stored
"RTN","DDGLIB0",20,0)
 ;  DDGLKEY  = codes for non-alphanumeric keys
"RTN","DDGLIB0",21,0)
 ;  DDGLSCR  = array containing list of visible windows on screen
"RTN","DDGLIB0",22,0)
 ;
"RTN","DDGLIB0",23,0)
 N X
"RTN","DDGLIB0",24,0)
 I $D(DDGLDEL)[0 D SET Q:$G(DIERR)
"RTN","DDGLIB0",25,0)
 S X=0 X DDGLZOSF("RM"),DDGLZOSF("TYPE-AHEAD")
"RTN","DDGLIB0",26,0)
 W $P(DDGLVID,DDGLDEL,8)
"RTN","DDGLIB0",27,0)
 Q
"RTN","DDGLIB0",28,0)
 ;
"RTN","DDGLIB0",29,0)
SET ;Setup screen handling variables
"RTN","DDGLIB0",30,0)
 K DIERR,DDGLSCR
"RTN","DDGLIB0",31,0)
 S U="^",DDGLDEL=$C(127)
"RTN","DDGLIB0",32,0)
 ;
"RTN","DDGLIB0",33,0)
 ; VEN/SMH - remove reliance on %ZOSF node -- next 3 lines changed v 22.2
"RTN","DDGLIB0",34,0)
 D:'$D(DISYS) OS^DII ; garb OS from %ZOSF or Fileman in this sequence
"RTN","DDGLIB0",35,0)
 F X="EOFF","EON","TRMOFF","TRMON","TRMRD","RM","TYPE-AHEAD","NO-TYPE-AHEAD" D  G:$G(DIERR) ABT
"RTN","DDGLIB0",36,0)
 . S DDGLZOSF(X)=$G(^DD("OS",DISYS,X))
"RTN","DDGLIB0",37,0)
 ;
"RTN","DDGLIB0",38,0)
ZIS N %ZIS,IOP S IOP="HOME" D ^%ZIS I POP D BLD^DIALOG(845) G ABT
"RTN","DDGLIB0",39,0)
 I $D(^%ZIS(2)),'$O(^%ZIS(2,+$G(IOST(0)),0)) D BLD^DIALOG(840,"#"_+$G(IOST(0))) G ABT
"RTN","DDGLIB0",40,0)
 ;
"RTN","DDGLIB0",41,0)
 D:$G(IOXY)="" TRMERR("Cursor positioning (XY CRT)")
"RTN","DDGLIB0",42,0)
 ;
"RTN","DDGLIB0",43,0)
 S X="IORVON;IORVOFF;IOELEOL;IOEDEOP;IOUON;IOUOFF;IOSGR0;IOINHI;IOINLOW;IOINORM;IOCUU;IOCUD;IOCUF;IOCUB;IODL;IOIL;IODCH;IOICH;IOEDALL;IOELALL;IORI;IOAWM1;IOAWM0;IOSTBM;IOPF1;IOPF2;IOPF3;IOPF4;IOFIND;IOSELECT;IOINSERT;IOREMOVE;IOPREVSC;IONEXTSC"
"RTN","DDGLIB0",44,0)
 N @$TR(X,";",",")
"RTN","DDGLIB0",45,0)
 N IOBLC,IOBRC,IOBT,IOG1,IOG0,IOHL,IOLT,IOMT,IORT,IOTLC,IOTRC,IOTT,IOVL
"RTN","DDGLIB0",46,0)
 D ENDR^%ZISS,GSET^%ZISS
"RTN","DDGLIB0",47,0)
 I $G(IOPREVSC)="" D  ;"^C-VT220^C-VT320^"[(U_IOST_U) D   IOST MIGHT BE VT-100
"RTN","DDGLIB0",48,0)
 . S IOPREVSC=$C(27)_"[5~"
"RTN","DDGLIB0",49,0)
 . S IONEXTSC=$C(27)_"[6~"
"RTN","DDGLIB0",50,0)
 ;
"RTN","DDGLIB0",51,0)
ATT ;GET COLOR ATTRIBUTES FOR SCREENMAN...
"RTN","DDGLIB0",52,0)
 N A,B I '$D(DDGLBROW) D  ;...BUT NOT FOR THE BROWSER (see INIT+1^DDBR)
"RTN","DDGLIB0",53,0)
 .S A(1)=$C(27,91)_"40m",A(2)=$C(27,91)_"41m",A(3)=$C(27,91)_"45m" ;Defaults 
"RTN","DDGLIB0",54,0)
 .I $G(^XTV(8989.5,0))?1"PARAM".E F X=1,2,3 S A=$$GET^XPAR("ALL","DI SCREENMAN COLORS",X),B=$$GET^XPAR("ALL","DI SCREENMAN COLORS",X+3) S:B]"" A(X)=$C(27,91)_(10+B)_"m" S:A]"" A(X)=A(X)_$C(27,91)_+A_"m"
"RTN","DDGLIB0",55,0)
 .S IOUON=IOINHI_A(1) ;REQ CAPTION BACKGROUND (BLACK)
"RTN","DDGLIB0",56,0)
 .S IOINHI=IOINHI_A(2) ;DATA BACKGROUND (RED)
"RTN","DDGLIB0",57,0)
 .S IORVON=IOINHI_A(3) ;CLICKABLE BACKGROUND (MAGENTA)
"RTN","DDGLIB0",58,0)
 .S (IORVOFF,IOUOFF)=IOINORM
"RTN","DDGLIB0",59,0)
 S DDGLVID=IOINHI_DDGLDEL_IOINLOW_DDGLDEL_IOINORM_DDGLDEL_IOUON_DDGLDEL_IOUOFF_DDGLDEL_IORVON_DDGLDEL_IORVOFF_DDGLDEL_IOAWM0_DDGLDEL_IOAWM1_DDGLDEL_$G(IOSGR0)
"RTN","DDGLIB0",60,0)
 S DDGLED=$G(IORI)_DDGLDEL_$G(IOSTBM)_DDGLDEL_$G(IOIL)_DDGLDEL_$G(IODL)_DDGLDEL_$G(IOICH)_DDGLDEL_$G(IODCH)
"RTN","DDGLIB0",61,0)
 S DDGLCLR=IOELEOL_DDGLDEL_IOEDALL_DDGLDEL_IOEDEOP_DDGLDEL_$G(IOELALL)
"RTN","DDGLIB0",62,0)
 S DDGLKEY=U_IOCUU_U_IOCUD_U_IOCUF_U_IOCUB_U_IOPF1_U_IOPF2_U_IOPF3_U_IOPF4_U_$G(IOFIND)_U_$G(IOSELECT)_U_$G(IOINSERT)_U_$G(IOREMOVE)_U_$G(IOPREVSC)_U_$G(IONEXTSC)_U
"RTN","DDGLIB0",63,0)
 S DDGLGRA=IOG1_DDGLDEL_IOG0_DDGLDEL_IOHL_DDGLDEL_IOVL_DDGLDEL_IOTLC_DDGLDEL_IOTRC_DDGLDEL_IOBLC_DDGLDEL_IOBRC
"RTN","DDGLIB0",64,0)
 S:DDGLDEL_$P(DDGLGRA,DDGLDEL,3,999)_DDGLDEL[(DDGLDEL_DDGLDEL) DDGLGRA=DDGLDEL_DDGLDEL_"-"_DDGLDEL_"|"_DDGLDEL_"+"_DDGLDEL_"+"_DDGLDEL_"+"_DDGLDEL_"+"
"RTN","DDGLIB0",65,0)
 ;
"RTN","DDGLIB0",66,0)
 D:$P(DDGLKEY,U,1,5)_U[(U_U) TRMERR("Cursor keys")
"RTN","DDGLIB0",67,0)
 D:U_$P(DDGLKEY,U,6,9)_U[(U_U) TRMERR("PF keys")
"RTN","DDGLIB0",68,0)
 D:IOELEOL="" TRMERR("Erase to End of Line")
"RTN","DDGLIB0",69,0)
 D:IOEDALL="" TRMERR("Erase Entire Page")
"RTN","DDGLIB0",70,0)
 D:IOEDEOP="" TRMERR("Erase to End of Page")
"RTN","DDGLIB0",71,0)
 G:$G(DIERR) ABT
"RTN","DDGLIB0",72,0)
 ;
"RTN","DDGLIB0",73,0)
 S DDGLREF="^TMP(""DDGL"",$J,""W"")" K @DDGLREF
"RTN","DDGLIB0",74,0)
 ;
"RTN","DDGLIB0",75,0)
 I "^C-QUME^C-QVT102^C-WYSE75^"[(U_$TR(IOST," ","")_U) D
"RTN","DDGLIB0",76,0)
 . S DDGLVAN=1
"RTN","DDGLIB0",77,0)
 . S $P(DDGLVID,DDGLDEL,4,7)=$S($TR(IOST," ","")="C-WYSE75":IOINHI_DDGLDEL_IOINLOW_DDGLDEL_IOINHI_DDGLDEL_IOINLOW,1:IOINLOW_DDGLDEL_IOINHI_DDGLDEL_IOINLOW_DDGLDEL_IOINHI)
"RTN","DDGLIB0",78,0)
 . S $P(DDGLVID,DDGLDEL,10)=IOINORM
"RTN","DDGLIB0",79,0)
 ;
"RTN","DDGLIB0",80,0)
 D:'$D(^%ZTSK)!($D(^%ZOSF("MGR"))[0) KILL^%ZISS
"RTN","DDGLIB0",81,0)
MOUSEON ;I $G(DDS)>0 W *27,"[?1000h" NOW DONE IN DDS0
"RTN","DDGLIB0",82,0)
 Q
"RTN","DDGLIB0",83,0)
 ;
"RTN","DDGLIB0",84,0)
 ;
"RTN","DDGLIB0",85,0)
ASKIOSL ; not used
"RTN","DDGLIB0",86,0)
 ;N X
"RTN","DDGLIB0",87,0)
 ;X ^%ZOSF("EOFF")
"RTN","DDGLIB0",88,0)
 R X:0 S XX=""
"RTN","DDGLIB0",89,0)
 W $C(27)_7_$C(27)_"[r"_$C(27)_"[999;999H"_$C(27)_"[6n" R X ; R *X:1 R:$T XX S X=$C(X)_XX
"RTN","DDGLIB0",90,0)
 ;S X=+$E(X,3,5) I X S IOSL=X
"RTN","DDGLIB0",91,0)
 Q
"RTN","DDGLIB0",92,0)
 ;
"RTN","DDGLIB0",93,0)
 ;
"RTN","DDGLIB0",94,0)
 ;
"RTN","DDGLIB0",95,0)
TRMERR(DDGLCH) ;Terminal type errors
"RTN","DDGLIB0",96,0)
 N P
"RTN","DDGLIB0",97,0)
 S P(1)=DDGLCH,P(2)=IOST
"RTN","DDGLIB0",98,0)
 D BLD^DIALOG(842,.P)
"RTN","DDGLIB0",99,0)
 Q
"RTN","DDGLIB0",100,0)
 ;
"RTN","DDGLIB0",101,0)
 ;
"RTN","DDGLIB0",102,0)
 ;
"RTN","DDGLIB0",103,0)
KILL(DDGLPARM) ;Cleanup variables
"RTN","DDGLIB0",104,0)
 ;Set margin to IOM
"RTN","DDGLIB0",105,0)
 ;Turn off type-ahead if New Person file so indicates
"RTN","DDGLIB0",106,0)
 ;Turn autowrap on
"RTN","DDGLIB0",107,0)
 ;Reset character attributes
"RTN","DDGLIB0",108,0)
 ;Turn echo on
"RTN","DDGLIB0",109,0)
 ;Turn terminators off
"RTN","DDGLIB0",110,0)
 N X
"RTN","DDGLIB0",111,0)
 D:'$D(DISYS) OS^DII ; garb OS from %ZOSF or Fileman in this sequence
"RTN","DDGLIB0",112,0)
 I $G(DDGLPARM)'["W" D
"RTN","DDGLIB0",113,0)
 . S X=$S($D(IOM)#2:IOM,1:80) X $G(DDGLZOSF("RM"))
"RTN","DDGLIB0",114,0)
 . I $D(DUZ)#2,$D(^VA(200,DUZ,0))#2,$P($G(^(200)),U,9)'="Y" D
"RTN","DDGLIB0",115,0)
 .. I '$G(DUZ("BUF"),1) X $G(DDGLZOSF("NO-TYPE-AHEAD"))
"RTN","DDGLIB0",116,0)
 . W $P($G(DDGLVID),$G(DDGLDEL),9),$P($G(DDGLVID),$G(DDGLDEL),10)
"RTN","DDGLIB0",117,0)
 ;
"RTN","DDGLIB0",118,0)
 I $G(DDGLPARM)'["T" D
"RTN","DDGLIB0",119,0)
 . X $G(DDGLZOSF("EON")),$G(DDGLZOSF("TRMOFF"))
"RTN","DDGLIB0",120,0)
 E  X $G(DDGLZOSF("EOFF")),$G(DDGLZOSF("TRMON"))
"RTN","DDGLIB0",121,0)
 ;
"RTN","DDGLIB0",122,0)
MOUSEOFF ;W *27,"[?1000l"  NOW DONE IN DDS0
"RTN","DDGLIB0",123,0)
ABT K DX,DY,POP
"RTN","DDGLIB0",124,0)
 I '$G(DIERR),$G(DDGLPARM)["K" Q
"RTN","DDGLIB0",125,0)
 K:$G(DDGLREF)]"" @DDGLREF
"RTN","DDGLIB0",126,0)
 D:'$D(^%ZTSK)!($D(^%ZOSF("MGR"))[0) KILL^%ZISS
"RTN","DDGLIB0",127,0)
 ;
"RTN","DDGLIB0",128,0)
 K DDGLDEL,DDGLVID,DDGLED,DDGLCLR,DDGLGRA,DDGLZOSF,DDGLREF
"RTN","DDGLIB0",129,0)
 K DDGLKEY,DDGLSCR,DDGLVAN,DDGLH
"RTN","DDGLIB0",130,0)
 ;
"RTN","DDGLIB0",131,0)
 K DIR0
"RTN","DDGLIBP")
0^5^B27768637^B26667130
"RTN","DDGLIBP",1,0)
DDGLIBP ;SFISC/MKO - PRINT FROM WITHIN SCREEN TOOLS ;13APR2016
"RTN","DDGLIBP",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDGLIBP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDGLIBP",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDGLIBP",5,0)
 ;;Based on Medsphere Systems Corporation's MSC Fileman 1051.
"RTN","DDGLIBP",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDGLIBP",7,0)
 ;;GFT;**169,1055**
"RTN","DDGLIBP",8,0)
 ;
"RTN","DDGLIBP",9,0)
PT(DDGLROOT,DDGLHDR) ;Prompt for device and print
"RTN","DDGLIBP",10,0)
 N POP,DDGLBAR,DDGLFLAG,DDGLHELP,DDGLI,DDGLPHDR,DDGLREF,DDGLWRAP,DX,DY,DIR0,DDS
"RTN","DDGLIBP",11,0)
 N %,%A,%B,%B1,%B2,%B3,%BA,%C,%E,%G,%H,%I,%J,%K,%M,%N
"RTN","DDGLIBP",12,0)
 N %P,%S,%T,%W,%X,%Y
"RTN","DDGLIBP",13,0)
 N %A0,%D1,%D2,%DT,%J1,%W0
"RTN","DDGLIBP",14,0)
 ;
"RTN","DDGLIBP",15,0)
 S DDGLFLAG=""
"RTN","DDGLIBP",16,0)
 ;
"RTN","DDGLIBP",17,0)
 ;Set terminal characterstics for scroll mode
"RTN","DDGLIBP",18,0)
 X DDGLZOSF("EON"),DDGLZOSF("TRMOFF")
"RTN","DDGLIBP",19,0)
 S X=$G(IOM,80) X $G(^%ZOSF("RM"),$G(DDGLZOSF("RM")))
"RTN","DDGLIBP",20,0)
 W $P(DDGLVID,DDGLDEL,9)
"RTN","DDGLIBP",21,0)
 ;
"RTN","DDGLIBP",22,0)
 W:$G(DDGLHDR)]"" "Document: "_DDGLHDR,!
"RTN","DDGLIBP",23,0)
 ;
"RTN","DDGLIBP",24,0)
 ;Prompt whether to print a header
"RTN","DDGLIBP",25,0)
 S DDGLHELP(1)="  Answer 'Y' to print a document title, date/time, and page number"
"RTN","DDGLIBP",26,0)
 S DDGLHELP="  at the top of each page."
"RTN","DDGLIBP",27,0)
 S DDGLPHDR=$$YNREAD("Print a header on each page","N",.DDGLHELP)
"RTN","DDGLIBP",28,0)
 K DDGLHELP
"RTN","DDGLIBP",29,0)
 I DDGLPHDR=-1 D FINISH("Report canceled.") Q
"RTN","DDGLIBP",30,0)
 S:DDGLPHDR DDGLFLAG=DDGLFLAG_"H"
"RTN","DDGLIBP",31,0)
 ;
"RTN","DDGLIBP",32,0)
 ;Prompt whether to wrap text
"RTN","DDGLIBP",33,0)
 S DDGLHELP(1)="  Answer 'Y' to wrap the text at word boundaries to fit within the margins"
"RTN","DDGLIBP",34,0)
 S DDGLHELP(2)="             of the device."
"RTN","DDGLIBP",35,0)
 S DDGLHELP="  Answer 'N' to print the text as-is (no-wrap)."
"RTN","DDGLIBP",36,0)
 S DDGLWRAP=$$YNREAD("Wrap text","N",.DDGLHELP)
"RTN","DDGLIBP",37,0)
 K DDGLHELP
"RTN","DDGLIBP",38,0)
 I DDGLWRAP=-1 D FINISH("Report canceled.") Q
"RTN","DDGLIBP",39,0)
 ;
"RTN","DDGLIBP",40,0)
 ;Prompt whether to interpret word processing (|) windows"
"RTN","DDGLIBP",41,0)
 S DDGLHELP(1)="  Answer 'Y' to have text enclosed within vertical bars (|) interpreted as"
"RTN","DDGLIBP",42,0)
 S DDGLHELP(2)="             word processing windows."
"RTN","DDGLIBP",43,0)
 S DDGLHELP="  Answer 'N' to have vertical bars printed as-is."
"RTN","DDGLIBP",44,0)
 S DDGLBAR=$$YNREAD("Interpret word processing windows (|)","N",.DDGLHELP)
"RTN","DDGLIBP",45,0)
 K DDGLHELP
"RTN","DDGLIBP",46,0)
 I DDGLBAR=-1 D FINISH("Report canceled.") Q
"RTN","DDGLIBP",47,0)
 ;
"RTN","DDGLIBP",48,0)
 ;Set flag for wrap and wp windows
"RTN","DDGLIBP",49,0)
 S DDGLFLAG=DDGLFLAG_$S(DDGLWRAP&'DDGLBAR:"|",'DDGLWRAP&DDGLBAR:"N",'DDGLWRAP&'DDGLBAR:"X",1:"")
"RTN","DDGLIBP",50,0)
 ;
"RTN","DDGLIBP",51,0)
DEVICE ;Device prompt
"RTN","DDGLIBP",52,0)
 N IOF,IOSL
"RTN","DDGLIBP",53,0)
 S IOF="#",IOSL=IOBM-IOTM+1 ;In case help frames are invoked
"RTN","DDGLIBP",54,0)
 S %ZIS=$S($D(^%ZTSK):"Q",1:""),%ZIS("B")=""
"RTN","DDGLIBP",55,0)
 S %ZIS("S")="I $TR($P(^(0),U),""browse"",""BROWSE"")'[""BROWSE"""
"RTN","DDGLIBP",56,0)
 D ^%ZIS K %ZIS
"RTN","DDGLIBP",57,0)
 ;
"RTN","DDGLIBP",58,0)
 I POP D FINISH("Report canceled!") Q
"RTN","DDGLIBP",59,0)
 ;
"RTN","DDGLIBP",60,0)
 ;Get the closed root of the array containing the text, resolve values like $J
"RTN","DDGLIBP",61,0)
 S DDGLREF=$NA(@$$CREF^DILF($G(DDGLROOT)))
"RTN","DDGLIBP",62,0)
 ;
"RTN","DDGLIBP",63,0)
 ;If CRT selected, reset scrolling region to entire screen
"RTN","DDGLIBP",64,0)
 I $E(IOST,1,2)="C-" D
"RTN","DDGLIBP",65,0)
 . I $D(IOSTBM)#2 N IOTM,IOBM S IOTM=0,IOBM=$G(IOSL,24) W @IOSTBM
"RTN","DDGLIBP",66,0)
 . W @IOF
"RTN","DDGLIBP",67,0)
 ;
"RTN","DDGLIBP",68,0)
 ;Queue report
"RTN","DDGLIBP",69,0)
 I $D(IO("Q")),$D(^%ZTSK) D  Q
"RTN","DDGLIBP",70,0)
 . N I,ZTRTN,ZTDESC,ZTSAVE,ZTSK,DDGLMSG
"RTN","DDGLIBP",71,0)
 . S ZTRTN="PRINT^DDGLIBP"
"RTN","DDGLIBP",72,0)
 . S ZTDESC=DDGLHDR
"RTN","DDGLIBP",73,0)
 . F I="DDGLREF","DDGLHDR","DDGLFLAG" S ZTSAVE(I)=""
"RTN","DDGLIBP",74,0)
 . I DDGLREF]"" S ZTSAVE($$OREF^DILF(DDGLREF))=""
"RTN","DDGLIBP",75,0)
 . D ^%ZTLOAD
"RTN","DDGLIBP",76,0)
 . I $D(ZTSK)#2 D
"RTN","DDGLIBP",77,0)
 .. W !,"Report queued!",!,"Task number: "_ZTSK,!
"RTN","DDGLIBP",78,0)
 .. D EOPREAD
"RTN","DDGLIBP",79,0)
 . E  S DDGLMSG="Report canceled!"
"RTN","DDGLIBP",80,0)
 . S IOP="HOME" D ^%ZIS
"RTN","DDGLIBP",81,0)
 . D FINISH($G(DDGLMSG))
"RTN","DDGLIBP",82,0)
 ;
"RTN","DDGLIBP",83,0)
NONQUEUE ;Non-queued report
"RTN","DDGLIBP",84,0)
 D PRINT
"RTN","DDGLIBP",85,0)
 I $E(IOST,1,2)="C-" W @IOF W:$D(IOSTBM)#2 @IOSTBM ; Reset bottom margin
"RTN","DDGLIBP",86,0)
 N %ZISPCX X $G(^%ZIS("C")) ;DON'T DO THE BROWSER'S POST-CLOSE EXECUTE
"RTN","DDGLIBP",87,0)
 D FINISH("Done.")
"RTN","DDGLIBP",88,0)
 Q
"RTN","DDGLIBP",89,0)
 ;
"RTN","DDGLIBP",90,0)
PRINT ;Print the document in DDGLREF, Header text in DDGLHDR
"RTN","DDGLIBP",91,0)
 N DDGLDT,DDGLI,DDGLPAGE,DDGLZN
"RTN","DDGLIBP",92,0)
 I $G(DDGLREF)="" D PRINTQ Q
"RTN","DDGLIBP",93,0)
 I '$D(@DDGLREF) D PRINTQ Q
"RTN","DDGLIBP",94,0)
 ;
"RTN","DDGLIBP",95,0)
 S DDGLZN=$D(@DDGLREF@($O(@DDGLREF@(0)),0))#2
"RTN","DDGLIBP",96,0)
 S DDGLFLAG=$G(DDGLFLAG)
"RTN","DDGLIBP",97,0)
 ;
"RTN","DDGLIBP",98,0)
 ;Format the text, if DDGLFLAG doesn't contain X
"RTN","DDGLIBP",99,0)
 I DDGLFLAG'["X" D
"RTN","DDGLIBP",100,0)
 . D FORMAT(DDGLREF,DDGLZN,DDGLFLAG)
"RTN","DDGLIBP",101,0)
 . S DDGLZN=1
"RTN","DDGLIBP",102,0)
 . S DDGLREF=$NA(^UTILITY($J,"W",1))
"RTN","DDGLIBP",103,0)
 ;
"RTN","DDGLIBP",104,0)
 ;Write the report from the original location or from ^UTILITY
"RTN","DDGLIBP",105,0)
 U IO
"RTN","DDGLIBP",106,0)
 I DDGLFLAG["H" D
"RTN","DDGLIBP",107,0)
 . ;Get current date/time and write first header
"RTN","DDGLIBP",108,0)
 . N %,%H,X,Y
"RTN","DDGLIBP",109,0)
 . S %H=$H D YX^%DTC
"RTN","DDGLIBP",110,0)
 . S DDGLDT=$E(Y,1,18)
"RTN","DDGLIBP",111,0)
 . D HDR
"RTN","DDGLIBP",112,0)
 ;
"RTN","DDGLIBP",113,0)
 ;Print each line
"RTN","DDGLIBP",114,0)
 S DDGLI=0 F  S DDGLI=$O(@DDGLREF@(DDGLI)) Q:'DDGLI  D
"RTN","DDGLIBP",115,0)
 . I DDGLFLAG["H",$Y+6>IOSL W @IOF D HDR
"RTN","DDGLIBP",116,0)
 . W !,$S(DDGLZN:$G(@DDGLREF@(DDGLI,0)),1:$G(@DDGLREF@(DDGLI)))
"RTN","DDGLIBP",117,0)
 ;
"RTN","DDGLIBP",118,0)
 K:$G(DDGLFLAG)'["N" ^UTILITY($J,"W")
"RTN","DDGLIBP",119,0)
 D PRINTQ
"RTN","DDGLIBP",120,0)
 Q
"RTN","DDGLIBP",121,0)
 ;
"RTN","DDGLIBP",122,0)
PRINTQ ;Delete the queued task and quit
"RTN","DDGLIBP",123,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","DDGLIBP",124,0)
 Q
"RTN","DDGLIBP",125,0)
 ;
"RTN","DDGLIBP",126,0)
HDR ;Print the header DDGLHDR; increment DDGLPAGE
"RTN","DDGLIBP",127,0)
 N DDGLCOL,DDGLPSTR
"RTN","DDGLIBP",128,0)
 S DDGLPAGE=$G(DDGLPAGE)+1
"RTN","DDGLIBP",129,0)
 S DDGLPSTR=DDGLDT_"    Page: "_DDGLPAGE
"RTN","DDGLIBP",130,0)
 S DDGLCOL=IOM-$L(DDGLPSTR)-1
"RTN","DDGLIBP",131,0)
 W DDGLHDR
"RTN","DDGLIBP",132,0)
 W:$X+2'<DDGLCOL !
"RTN","DDGLIBP",133,0)
 W ?DDGLCOL,DDGLPSTR
"RTN","DDGLIBP",134,0)
 W !,$TR($J("",IOM-1)," ","-")
"RTN","DDGLIBP",135,0)
 Q
"RTN","DDGLIBP",136,0)
 ;
"RTN","DDGLIBP",137,0)
YNREAD(DDGLPROM,DDGLDEF,DDGLHELP) ;Issue a Yes/No Read
"RTN","DDGLIBP",138,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","DDGLIBP",139,0)
 S DIR(0)="Y"
"RTN","DDGLIBP",140,0)
 S DIR("B")=$S("Nn0"[$E($G(DDGLDEF)):"NO",1:"YES")
"RTN","DDGLIBP",141,0)
 M:$D(DDGLHELP)]"" DIR("?")=DDGLHELP
"RTN","DDGLIBP",142,0)
 S:$G(DDGLPROM)]"" DIR("A")=DDGLPROM
"RTN","DDGLIBP",143,0)
 D ^DIR
"RTN","DDGLIBP",144,0)
 Q $S($D(DIRUT):-1,1:Y)
"RTN","DDGLIBP",145,0)
 ;
"RTN","DDGLIBP",146,0)
EOPREAD ; Issue an End-of-Page Read
"RTN","DDGLIBP",147,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","DDGLIBP",148,0)
 S DIR(0)="E" D ^DIR
"RTN","DDGLIBP",149,0)
 Q
"RTN","DDGLIBP",150,0)
 ;
"RTN","DDGLIBP",151,0)
FORMAT(DDGLREF,DDGLZN,DDGLFLAG) ;Use ^DIWP to format the text
"RTN","DDGLIBP",152,0)
 N DIWL,DIWR,DIWF,X
"RTN","DDGLIBP",153,0)
 K ^UTILITY($J,"W")
"RTN","DDGLIBP",154,0)
 S DIWL=1,DIWR=IOM-1,DIWF=$E("N",DDGLFLAG["N")_$E("|",DDGLFLAG["|")_$E("X",DDGLFLAG["X")
"RTN","DDGLIBP",155,0)
 S DDGLI=0 F  S DDGLI=$O(@DDGLREF@(DDGLI)) Q:'DDGLI  D
"RTN","DDGLIBP",156,0)
 . S X=$S($G(DDGLZN):@DDGLREF@(DDGLI,0),1:$G(@DDGLREF@(DDGLI)))
"RTN","DDGLIBP",157,0)
 . D ^DIWP
"RTN","DDGLIBP",158,0)
 Q
"RTN","DDGLIBP",159,0)
 ;
"RTN","DDGLIBP",160,0)
FINISH(DDGLMSG) ;Print message and reset terminal characteristics
"RTN","DDGLIBP",161,0)
 I $G(DDGLMSG)]"" W !,DDGLMSG H 1
"RTN","DDGLIBP",162,0)
 ;
"RTN","DDGLIBP",163,0)
 ;Reset terminal characteristics for screen handling
"RTN","DDGLIBP",164,0)
 X DDGLZOSF("EOFF"),DDGLZOSF("TRMON")
"RTN","DDGLIBP",165,0)
 S X=0 X $G(^%ZOSF("RM"),$G(DDGLZOSF("RM")))
"RTN","DDGLIBP",166,0)
 W $P(DDGLVID,DDGLDEL,8)
"RTN","DDGLIBP",167,0)
 Q
"RTN","DDS")
0^6^B40296142^B41055756
"RTN","DDS",1,0)
DDS ;SFISC/MLH,MKO - MAIN ROUTINE ;14JUN2016
"RTN","DDS",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDS",4,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDS",5,0)
 ;GFT;**1003,1004,1028,1043,1045,1055**
"RTN","DDS",6,0)
 ;
"RTN","DDS",7,0)
 N DIE,DX,DY,X,Y
"RTN","DDS",8,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DDS",9,0)
 ;
"RTN","DDS",10,0)
 D EN^DDS0(.DDSFILE,DR,.DA)
"RTN","DDS",11,0)
 I $G(DIERR) D:$G(DDSPARM)'["E"  G END^DDS0
"RTN","DDS",12,0)
 . W !,$C(7)_$$EZBLD^DIALOG(3000)
"RTN","DDS",13,0)
 . D MSG^DIALOG("BW")
"RTN","DDS",14,0)
 . S DIMSG=""
"RTN","DDS",15,0)
 ;
"RTN","DDS",16,0)
 N DR
"RTN","DDS",17,0)
 X:$G(^DIST(.403,+DDS,11))'?."^" ^(11)
"RTN","DDS",18,0)
 F  D PG Q:DDACT="Q"
"RTN","DDS",19,0)
 X:$G(^DIST(.403,+DDS,12))'?."^" ^(12)
"RTN","DDS",20,0)
 ;
"RTN","DDS",21,0)
 D:$G(@DDSREFT@("HLP"))>0 HLP^DDSMSG()
"RTN","DDS",22,0)
 G END^DDS0
"RTN","DDS",23,0)
 ;
"RTN","DDS",24,0)
PROC ;Main loop  --  do all the PAGES
"RTN","DDS",25,0)
 F  D PG Q:DDACT="Q"
"RTN","DDS",26,0)
 Q
"RTN","DDS",27,0)
 ;
"RTN","DDS",28,0)
PG ;Load page
"RTN","DDS",29,0)
 N DDSMX,DDSMY,DDSMOUSE,FND
"RTN","DDS",30,0)
 S DDACT="N"
"RTN","DDS",31,0)
 D EN^DDS1(DDSPG)
"RTN","DDS",32,0)
 I $G(DIERR) D  Q
"RTN","DDS",33,0)
 . N P S P(1)=$P($G(^DIST(.403,+DDS,40,DDSPG,0)),U),P(2)=$P($G(^(1)),U)
"RTN","DDS",34,0)
 . S:P(2)="" P(2)="unnamed"
"RTN","DDS",35,0)
 . D BLD^DIALOG(3041,.P),ERR^DDSMSG H 2
"RTN","DDS",36,0)
 . S DDACT="Q"
"RTN","DDS",37,0)
 ;
"RTN","DDS",38,0)
 ;Pre-action, save old and get next page
"RTN","DDS",39,0)
 S DDSOPB=DDSPG
"RTN","DDS",40,0)
 I $G(^DIST(.403,+DDS,40,DDSPG,11))'?."^" D PA(^(11)) Q:DDACT="NP"
"RTN","DDS",41,0)
 S DDSNP=$$NP^DDS5(.Y) S:'Y DDSNP=""
"RTN","DDS",42,0)
 ;
"RTN","DDS",43,0)
 ;Get DDO and DDSBK
"RTN","DDS",44,0)
 I $S($D(DDSBR)[0:1,1:$D(@DDSREFS@(DDSPG,$S(DDO:+DDSBK,1:0),DDO,"N"))[0) D
"RTN","DDS",45,0)
 . S DDO=+$G(@DDSREFS@(DDSPG,"FIRST")),DDSBK=$P($G(^("FIRST")),",",2)
"RTN","DDS",46,0)
 I 'DDSBK D  Q
"RTN","DDS",47,0)
 . D BLD^DIALOG(3055,"number "_$P($G(^DIST(.403,+DDS,40,DDSPG,0)),U)_$S($G(^(1))]"":" ("_$P($G(^(1)),U)_")",1:""))
"RTN","DDS",48,0)
 . D ERR^DDSMSG H 2
"RTN","DDS",49,0)
 . S DDACT="Q"
"RTN","DDS",50,0)
 ;
"RTN","DDS",51,0)
 ;Get DDSPOP and update DDSSC array
"RTN","DDS",52,0)
 ;If we're going to another page
"RTN","DDS",53,0)
 I '$D(DDSPGUP) D
"RTN","DDS",54,0)
 . S DDSLN=^DIST(.403,+DDS,40,DDSPG,0),DDSPOP=$P(DDSLN,U,6)
"RTN","DDS",55,0)
 . K:'DDSPOP DDSSC
"RTN","DDS",56,0)
SEL . I $D(DDSSEL) D
"RTN","DDS",57,0)
 .. N P S P=$P($G(^DIST(.403,+DDS,21)),U) Q:P=""  Q:$O(^(40,"B",P,""))'=DDSPG  ;CONVERT PAGE TO ITS INTERNAL NUMBER
"RTN","DDS",58,0)
 .. S DDSDASV=DDSDA,DDSDLSV=DDSDL
"RTN","DDS",59,0)
 .. M DDSORGSV=DDSDAORG
"RTN","DDS",60,0)
 .. K DA,@$$D0(DDSDL),DDSDAORG ;IF IT'S (REALLY) A RECORD SELECTION PAGE FORGET DA
"RTN","DDS",61,0)
 .. S (DA,D0,DDSDAORG)="",DDSDA="0,",DDSDL=0
"RTN","DDS",62,0)
 . I '$D(DDSSC("B",DDSPG)) D
"RTN","DDS",63,0)
 .. S DDSSC=$G(DDSSC)+1,DDSSC(DDSSC)=DDSPG,DDSSC("B",DDSPG,DDSSC)=""
"RTN","DDS",64,0)
 .. S:DDSPOP $P(DDSSC(DDSSC),U,2,3)=$P(DDSLN,U,3)_U_$P(DDSLN,U,7)
"RTN","DDS",65,0)
 .. S $P(DDSSC(DDSSC),U,4)=$G(DDSSTK) K DDSSTK
"RTN","DDS",66,0)
 .. K DDSPOP
"RTN","DDS",67,0)
 . E  D
"RTN","DDS",68,0)
 .. Q:$P($G(DDSSC(+$G(DDSSC))),U)=DDSPG
"RTN","DDS",69,0)
 .. N I,J,S
"RTN","DDS",70,0)
 .. S I=$O(DDSSC("B",DDSPG,"")),S=DDSSC(I) K DDSSC("B",DDSPG,I)
"RTN","DDS",71,0)
 .. F J=I:1:DDSSC-1 D
"RTN","DDS",72,0)
 ... K DDSSC("B",$P(DDSSC(J+1),U),J)
"RTN","DDS",73,0)
 ... S DDSSC(J)=DDSSC(J+1),DDSSC("B",$P(DDSSC(J),U),J)=""
"RTN","DDS",74,0)
 .. S DDSSC(DDSSC)=S,DDSSC("B",DDSPG,DDSSC)=""
"RTN","DDS",75,0)
 ;
"RTN","DDS",76,0)
 ;If we've moving up from a pop-up page
"RTN","DDS",77,0)
 E  K DDSPGUP
"RTN","DDS",78,0)
 ;
"RTN","DDS",79,0)
 ;Paint the page
"RTN","DDS",80,0)
 D RP^DDSR(DDSSC(DDSSC),DDSSC=1)
"RTN","DDS",81,0)
 ;
"RTN","DDS",82,0)
P1 F  D BLK Q:"^Q^NP^"[(U_DDACT_U)
"RTN","DDS",83,0)
 ;
"RTN","DDS",84,0)
 ;PAGE Post action, print any help
"RTN","DDS",85,0)
 D:$G(^DIST(.403,+DDS,40,+DDSOPB,12))'?."^" PA(^(12))
"RTN","DDS",86,0)
 D:$G(@DDSREFT@("HLP"))>0 HLP^DDSMSG()
"RTN","DDS",87,0)
 G:"^NB^N^"[(U_DDACT_U) P1
"RTN","DDS",88,0)
 ;
"RTN","DDS",89,0)
 I DDACT="Q" D
"RTN","DDS",90,0)
 . I '$P(DDSSC(DDSSC),U,4) D
"RTN","DDS",91,0)
 .. I $G(DDSSEL) D GDA^DDSRSEL Q:'DA  ;Process what came from the RECORD SELECTION PAGE now that we've returned from it
"RTN","DDS",92,0)
 .. D:$G(DDSSC)>1 CLEAR^DDSBOX($P(DDSSC(DDSSC),U,2),$P(DDSSC(DDSSC),U,3))
"RTN","DDS",93,0)
 .. S:DDSSC>1 DDSPG=$P(DDSSC(DDSSC-1),U),DDACT="N",DDSPGUP=1
"RTN","DDS",94,0)
 . K DDSSC("B",$P(DDSSC(DDSSC),U),DDSSC),DDSSC(DDSSC) S DDSSC=DDSSC-1
"RTN","DDS",95,0)
 Q
"RTN","DDS",96,0)
 ;
"RTN","DDS",97,0)
BLK S DDACT="N",DDSOSV=0
"RTN","DDS",98,0)
 ;
"RTN","DDS",99,0)
 I $D(@DDSREFS@(DDSPG,DDSBK))[0 S DDACT="Q" Q
"RTN","DDS",100,0)
 S DDSLN=@DDSREFS@(DDSPG,DDSBK)
"RTN","DDS",101,0)
 ;
"RTN","DDS",102,0)
 S DDSDN=$P(DDSLN,U,4),DDSTP=$P(DDSLN,U,5)
"RTN","DDS",103,0)
 S DDSREP=$P(DDSLN,U,7),DDSPTB=$P(DDSLN,U,8)
"RTN","DDS",104,0)
 K:'DDSDN DDSDN K:DDSTP="e" DDSTP K:'DDSPTB DDSPTB K:DDSREP'>1 DDSREP
"RTN","DDS",105,0)
 ;
"RTN","DDS",106,0)
 I $D(DDSPTB)!$D(DDSREP) N DDP,DDSDA,DIE D  ;NEW WHEN WE GO INTO MULTIPLE!!
"RTN","DDS",107,0)
 . S DDP=$P(DDSLN,U,3)
"RTN","DDS",108,0)
DIE . S DDSDA=$P(@DDSREFT@(DDSPG,DDSBK),U) I DDSDA'>0,$G(^(DDSBK,"COMP MUL"))="" S DIE=$G(DIE) Q  ;Get Entry Number
"RTN","DDS",109,0)
 . S DIE=@DDSREFT@(DDSPG,DDSBK,DDSDA,"GL")
"RTN","DDS",110,0)
 ;
"RTN","DDS",111,0)
 I $D(DDSPTB) N DA,@$$D0(DDSDL),DDSDL D
"RTN","DDS",112,0)
 . S DDSPTB=@DDSREFS@(DDSPG,DDSBK,"PTB")
"RTN","DDS",113,0)
 . S DDSDL=$L(DDSDA,",")-2
"RTN","DDS",114,0)
 . S (D0,DA)=+DDSDA
"RTN","DDS",115,0)
 ;
"RTN","DDS",116,0)
 I $D(DDSREP) N DDSDL,DA D
"RTN","DDS",117,0)
 . S DDSREP=$P(@DDSREFT@(DDSPG,DDSBK,DDSDA),U,2,999)
"RTN","DDS",118,0)
 . S DDSDA=$G(@DDSREFT@(DDSPG,DDSBK,$P(DDSREP,U),$P(DDSREP,U,4)),"0,"_DDSDA) ;2-arg $G -- go to empty line if none other specified
"RTN","DDS",119,0)
 . S:'$P(DDSREP,U,7) DDSDA=$P(DDSDA,",")_","
"RTN","DDS",120,0)
 . S DDSDL=$L(DDSDA,",")-2
"RTN","DDS",121,0)
 I  N @$$D0(DDSDL) D
"RTN","DDS",122,0)
 . D BLDDA(DDSDA)
"RTN","DDS",123,0)
 . S:'DA DDO=+$P(DDSREP,U,8) ;If this is a new subEntry, start at 1st editable field
"RTN","DDS",124,0)
 ;
"RTN","DDS",125,0)
PTB I $D(DDSPTB),'$D(DDSREP),'DDSDA,DDSDAORG  D  Q
"RTN","DDS",126,0)
 . N DDSBK0
"RTN","DDS",127,0)
 . S DDSBK0=DDSBK
"RTN","DDS",128,0)
 . F  S DDSBK=$$NB^DDS5(.Y) Q:DDSBK=DDSBK0!'Y!$G(@DDSREFT@(DDSPG,DDSBK))
"RTN","DDS",129,0)
 . Q:Y
"RTN","DDS",130,0)
 . I DDSNP]"" S DDSPG=DDSNP,DDACT="NP" Q
"RTN","DDS",131,0)
 . S DDSPG=$$PP^DDS5(.Y) I Y S DDACT="NP" Q
"RTN","DDS",132,0)
 . S DDACT="Q"
"RTN","DDS",133,0)
 ;
"RTN","DDS",134,0)
 S $P(DDSOPB,U,2)=DDSBK
"RTN","DDS",135,0)
 I $G(^DIST(.403,+DDS,40,DDSPG,40,DDSBK,11))'?."^" D PA(^(11)) Q:DDACT="NP"
"RTN","DDS",136,0)
 I $G(^DIST(.404,DDSBK,11))'?."^" D PA(^(11)) Q:DDACT="NP"
"RTN","DDS",137,0)
1 I $S($D(DDSBR)[0:1,1:$D(@DDSREFS@(DDSPG,$S(DDO:+DDSBK,1:0),DDO,"N"))[0) D
"RTN","DDS",138,0)
 . S DDO=$P(@DDSREFS@(DDSPG,DDSBK),U,9) ;First field
"RTN","DDS",139,0)
 K DDSLN
"RTN","DDS",140,0)
 ;
"RTN","DDS",141,0)
B1 D ^DDS01
"RTN","DDS",142,0)
 ;
"RTN","DDS",143,0)
 I $G(^DIST(.403,+DDS,40,DDSPG,40,$P(DDSOPB,U,2),12))'?."^" D PA(^(12)) G:DDACT="N" B1
"RTN","DDS",144,0)
 I $G(^DIST(.404,$P(DDSOPB,U,2),12))'?."^" D PA(^(12)) G:DDACT="N" B1
"RTN","DDS",145,0)
 Q
"RTN","DDS",146,0)
 ;
"RTN","DDS",147,0)
BLDDA(DDSDA) ;
"RTN","DDS",148,0)
 N I
"RTN","DDS",149,0)
 S (DA,@("D"_DDSDL))=$P(DDSDA,",")
"RTN","DDS",150,0)
 F I=1:1:DDSDL S (DA(I),@("D"_(DDSDL-I)))=$P(DDSDA,",",I+1)
"RTN","DDS",151,0)
 Q
"RTN","DDS",152,0)
 ;
"RTN","DDS",153,0)
D0(DL) ;Given DL, return string D0,D1,...,Dn
"RTN","DDS",154,0)
 N I,S
"RTN","DDS",155,0)
 S S="" F I=0:1:DL S S=S_"D"_I_","
"RTN","DDS",156,0)
 S:S?.E1"," S=$E(S,1,$L(S)-1)
"RTN","DDS",157,0)
 Q S
"RTN","DDS",158,0)
 ;
"RTN","DDS",159,0)
CLRMSG ;FROM DDSU
"RTN","DDS",160,0)
 I $G(DDSKM) H 2 K DDSKM ;GFT  ** IF WE WERE KEEPING SOMETHING IN HELP AREA, HOLD UP 2 SECONDS  ISB-0603-31054
"RTN","DDS",161,0)
 K DDQ S DDSH=1,(DDM,DX)=0,DY=DDSHBX+1 X DDXY W $P(DDGLCLR,DDGLDEL,3) ;CLEAR WHOLE COMMAND AREA
"RTN","DDS",162,0)
 N I F  S I=$O(DDSMOUSE(DDSHBX)) Q:I+1=IOSL!'I  K DDSMOUSE(I)
"RTN","DDS",163,0)
 Q
"RTN","DDS",164,0)
 ;
"RTN","DDS",165,0)
PA(DDSPA) ;
"RTN","DDS",166,0)
 N DDSBRORG S:$D(DDSBR)#2 DDSBRORG=DDSBR
"RTN","DDS",167,0)
 K DDSBR X DDSPA ;PRE-ACTION OR POST-ACTION
"RTN","DDS",168,0)
 I $D(DDSBR)[0 S:$D(DDSBRORG)#2 DDSBR=DDSBRORG Q
"RTN","DDS",169,0)
 D BR^DDS2
"RTN","DDS",170,0)
 Q
"RTN","DDS",171,0)
 ;
"RTN","DDS",172,0)
 ;
"RTN","DDS",173,0)
 ;
"RTN","DDS",174,0)
 ;
"RTN","DDS",175,0)
 ;
"RTN","DDS",176,0)
 ;
"RTN","DDS",177,0)
RESET ;Programmer entry point to reset terminal and cleanup
"RTN","DDS",178,0)
 D INIT^DDGLIB0() D:$G(DIERR) MSG^DIALOG("BW")
"RTN","DDS",179,0)
 W $P($G(DDGLVID),DDGLDEL,10)
"RTN","DDS",180,0)
 K DDSPARM
"RTN","DDS",181,0)
 S DDSREFT="^TMP(""DDS"",$J)"
"RTN","DDS",182,0)
 D END^DDS0
"RTN","DDS",183,0)
 G RESET^DDGF
"RTN","DDS",184,0)
 ;
"RTN","DDS",185,0)
RUN ;Run a form
"RTN","DDS",186,0)
 G ^DDSRUN
"RTN","DDS",187,0)
CLONE ;Clone a form
"RTN","DDS",188,0)
 G ^DDSCLONE
"RTN","DDS",189,0)
PRINT ;Print a form
"RTN","DDS",190,0)
 G ^DDSPRNT
"RTN","DDS",191,0)
DFRM ;Delete a form
"RTN","DDS",192,0)
 G ^DDSDFRM
"RTN","DDS",193,0)
DBLK ;Delete unused blocks
"RTN","DDS",194,0)
 G ^DDSDBLK
"RTN","DDSMSG")
0^1^B12020877^B11858691
"RTN","DDSMSG",1,0)
DDSMSG ;SFISC/MKO - PRINT MESSAGES ;12APR2016
"RTN","DDSMSG",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDSMSG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDSMSG",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDSMSG",5,0)
 ;;Based on Medsphere Systems Corporation's MSC Fileman 1051.
"RTN","DDSMSG",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDSMSG",7,0)
 ;;GFT;**75,1055**
"RTN","DDSMSG",8,0)
 ;
"RTN","DDSMSG",9,0)
ERR ;Print "DIERR" messages in help box
"RTN","DDSMSG",10,0)
 N DDSE,DDSL,DDSLMT,DDSN
"RTN","DDSMSG",11,0)
 K DDH,DDQ
"RTN","DDSMSG",12,0)
 S DDSLMT=$G(DDC,15),DDSE=0
"RTN","DDSMSG",13,0)
 ;
"RTN","DDSMSG",14,0)
 W $C(7)
"RTN","DDSMSG",15,0)
 S DDSN=0
"RTN","DDSMSG",16,0)
 F  S DDSN=$O(^TMP("DIERR",$J,DDSN)) Q:'DDSN!DDSE  D
"RTN","DDSMSG",17,0)
 . S DDSL=0
"RTN","DDSMSG",18,0)
 . F  S DDSL=$O(^TMP("DIERR",$J,DDSN,"TEXT",DDSL)) Q:'DDSL!DDSE  D
"RTN","DDSMSG",19,0)
 .. D LD($G(^TMP("DIERR",$J,DDSN,"TEXT",DDSL)),"!")
"RTN","DDSMSG",20,0)
 .. I DDH'<DDSLMT D SC^DDSU S:$D(DTOUT)!($D(DUOUT)) DDSE=1
"RTN","DDSMSG",21,0)
 ;
"RTN","DDSMSG",22,0)
 I $G(DDH) S:$G(DDH(1,"T"))?1.C DDH(1,"T")="" D SC^DDSU
"RTN","DDSMSG",23,0)
 S DDSKM=1
"RTN","DDSMSG",24,0)
 K DIERR,^TMP("DIERR",$J)
"RTN","DDSMSG",25,0)
 Q
"RTN","DDSMSG",26,0)
 ;
"RTN","DDSMSG",27,0)
HLP(DDSG) ;Print messages from @DDSG in help area
"RTN","DDSMSG",28,0)
 N DDSE,DDSL,DDSLMT,DDSNXTF,DDST
"RTN","DDSMSG",29,0)
 S:$G(DDSG)="" DDSG=$NA(@DDSREFT@("HLP"))
"RTN","DDSMSG",30,0)
 ;
"RTN","DDSMSG",31,0)
 K DDH
"RTN","DDSMSG",32,0)
 I $G(DDQ)-1=DDSHBX,'$X K DDQ
"RTN","DDSMSG",33,0)
 D:$G(DDQ)>DDSHBX SETDDH
"RTN","DDSMSG",34,0)
 S DDSLMT=$G(DDC,15),(DDSE,DDSL)=0
"RTN","DDSMSG",35,0)
 ;
"RTN","DDSMSG",36,0)
 F  S DDSL=$O(@DDSG@(DDSL)) Q:'DDSL!DDSE  D
"RTN","DDSMSG",37,0)
 . S DDST=$G(@DDSG@(DDSL))
"RTN","DDSMSG",38,0)
 . I DDST="$$EOP" S DDH=$G(DDH)+1,DDH(DDH,"E")=""
"RTN","DDSMSG",39,0)
 . E  D LD(DDST,$G(@DDSG@(DDSL,"F"),"!"))
"RTN","DDSMSG",40,0)
 . S DDSNXTF=$G(@DDSG@(DDSL+1,"F"),"!")
"RTN","DDSMSG",41,0)
 . I DDH'<DDSLMT,DDSNXTF["!"!(DDSNXTF'["?") D SC^DDSU S:$D(DTOUT)!($D(DUOUT)) DDSE=1
"RTN","DDSMSG",42,0)
 ;
"RTN","DDSMSG",43,0)
 I $G(DDH) S:$G(DDH(1,"T"))?1.C DDH(1,"T")="" D SC^DDSU
"RTN","DDSMSG",44,0)
 K:DDSG=$NA(@DDSREFT@("HLP")) @DDSG
"RTN","DDSMSG",45,0)
 S:'$D(DDSID) DDSKM=1
"RTN","DDSMSG",46,0)
 Q
"RTN","DDSMSG",47,0)
 ;
"RTN","DDSMSG",48,0)
WP(DDSR) ;Print the contents of a wp field @DDSR in help area
"RTN","DDSMSG",49,0)
 N DDSE,DDSL,DDSLMT,DDSNXTF
"RTN","DDSMSG",50,0)
 ;
"RTN","DDSMSG",51,0)
 K DDH
"RTN","DDSMSG",52,0)
 I $G(DDQ)-1=DDSHBX,'$X K DDQ
"RTN","DDSMSG",53,0)
 D:$G(DDQ)>DDSHBX SETDDH
"RTN","DDSMSG",54,0)
 S DDSLMT=$G(DDC,15),(DDSE,DDSL)=0
"RTN","DDSMSG",55,0)
 ;
"RTN","DDSMSG",56,0)
 F  S DDSL=$O(@DDSR@(DDSL)) Q:'DDSL!DDSE  D
"RTN","DDSMSG",57,0)
 . D LD($G(@DDSR@(DDSL,0)),$G(@DDSR@(DDSL,"F"),"!"))
"RTN","DDSMSG",58,0)
 . S DDSNXTF=$G(@DDSR@(DDSL+1,"F"),"!")
"RTN","DDSMSG",59,0)
 . I DDH'<DDSLMT,DDSNXTF["!"!(DDSNXTF'["?") D SC^DDSU S:$D(DTOUT)!($D(DUOUT)) DDSE=1
"RTN","DDSMSG",60,0)
 ;
"RTN","DDSMSG",61,0)
 I $G(DDH) S:$G(DDH(1,"T"))?1.C DDH(1,"T")="" D SC^DDSU
"RTN","DDSMSG",62,0)
 S:'$D(DDSID) DDSKM=1
"RTN","DDSMSG",63,0)
 Q
"RTN","DDSMSG",64,0)
 ;
"RTN","DDSMSG",65,0)
MSG(DDSMSG,DDSFLG,DDSFMT) ;Print local var or array DDSMSG in help area
"RTN","DDSMSG",66,0)
 ;DDSFLG [ 1 : Write bell
"RTN","DDSMSG",67,0)
 ;DDSFMT : Format if one line is sent
"RTN","DDSMSG",68,0)
 N DDSL
"RTN","DDSMSG",69,0)
 K DDH
"RTN","DDSMSG",70,0)
 I $G(DDQ)-1=DDSHBX,'$X K DDQ
"RTN","DDSMSG",71,0)
 D:$G(DDQ)>DDSHBX SETDDH
"RTN","DDSMSG",72,0)
 ;
"RTN","DDSMSG",73,0)
 I $D(DDSMSG)=1 D
"RTN","DDSMSG",74,0)
 . D LD(DDSMSG,$S($G(DDSFMT)]"":DDSFMT,1:"!"))
"RTN","DDSMSG",75,0)
 ;
"RTN","DDSMSG",76,0)
 E  S DDSL=0 F  S DDSL=$O(DDSMSG(DDSL)) Q:'DDSL  D
"RTN","DDSMSG",77,0)
 . D LD($G(DDSMSG(DDSL)),$G(DDSMSG(DDSL,"F"),"!"))
"RTN","DDSMSG",78,0)
 Q:'$G(DDH)
"RTN","DDSMSG",79,0)
 ;
"RTN","DDSMSG",80,0)
 I $G(DDH) D
"RTN","DDSMSG",81,0)
 . S:$G(DDH(1,"T"))?1.C DDH(1,"T")=""
"RTN","DDSMSG",82,0)
 . S:$G(DDSFLG)[1 DDH(1,"T")=$C(7)_$G(DDH(1,"T"))
"RTN","DDSMSG",83,0)
 . D SC^DDSU
"RTN","DDSMSG",84,0)
 S:'$D(DDSID) DDSKM=1
"RTN","DDSMSG",85,0)
 Q
"RTN","DDSMSG",86,0)
 ;
"RTN","DDSMSG",87,0)
SETDDH ;Setup DDH and DDQ for identifiers and executable help
"RTN","DDSMSG",88,0)
 ;that called EN^DDIOL
"RTN","DDSMSG",89,0)
 S:$X>IOM $X=IOM
"RTN","DDSMSG",90,0)
 S DDH=1
"RTN","DDSMSG",91,0)
 S DDH(1,"T")=$TR($J("",$X)," ",$C(0))
"RTN","DDSMSG",92,0)
 S DDQ=$S(DY>(IOSL-1):IOSL-1,1:DY)-1_U_$X
"RTN","DDSMSG",93,0)
 Q
"RTN","DDSMSG",94,0)
 ;
"RTN","DDSMSG",95,0)
LD(S,F) ;Load string S with format F into DDH array
"RTN","DDSMSG",96,0)
 N A,C,J,L
"RTN","DDSMSG",97,0)
 S DDH=+$G(DDH)
"RTN","DDSMSG",98,0)
 F J=1:1:$L(F,"!")-1 S DDH=DDH+1,DDH(DDH,"T")=""
"RTN","DDSMSG",99,0)
 S:'DDH DDH=1
"RTN","DDSMSG",100,0)
 S:F["?" @("C="_+$P(F,"?",2))
"RTN","DDSMSG",101,0)
 S L=$G(DDH(DDH,"T"))
"RTN","DDSMSG",102,0)
 S S=L_$J("",$G(C)-$L(L))_S
"RTN","DDSMSG",103,0)
 ;
"RTN","DDSMSG",104,0)
 D WRAP(S,.A,IOM-1)
"RTN","DDSMSG",105,0)
 S DDH=DDH-1
"RTN","DDSMSG",106,0)
 F A=1:1:A S DDH=$G(DDH)+1,DDH(DDH,"T")=A(A)
"RTN","DDSMSG",107,0)
 Q
"RTN","DDSMSG",108,0)
 ;
"RTN","DDSMSG",109,0)
WRAP(L,A,M) ;Wrap line at word boundaries
"RTN","DDSMSG",110,0)
 ; L    = Line of text
"RTN","DDSMSG",111,0)
 ; M    = Margin width
"RTN","DDSMSG",112,0)
 ;Return:
"RTN","DDSMSG",113,0)
 ; A    = Number of lines
"RTN","DDSMSG",114,0)
 ; A(n) = Array of text
"RTN","DDSMSG",115,0)
 ;
"RTN","DDSMSG",116,0)
 S:'$G(M) M=$S($G(IOM):IOM-5,1:75)
"RTN","DDSMSG",117,0)
 N I,N
"RTN","DDSMSG",118,0)
 S N=0
"RTN","DDSMSG",119,0)
 F I=$L(L," "):-1:1 D  Q:L=""
"RTN","DDSMSG",120,0)
 . I I=1 S N=N+1,A(N)=$E(L,1,M),L=$E(L,M+1,999) Q
"RTN","DDSMSG",121,0)
 . I $L($P(L," ",1,I))'>M D
"RTN","DDSMSG",122,0)
 .. S N=N+1,A(N)=$P(L," ",1,I),L=$P(L," ",I+1,999)
"RTN","DDSMSG",123,0)
 S A=N
"RTN","DDSMSG",124,0)
 Q
"RTN","DDSSTK")
0^7^B4128442^B3056649
"RTN","DDSSTK",1,0)
DDSSTK ;SFISC/MKO - STACK CONTEXT, GO TO A NEW PAGE ;22APR2016
"RTN","DDSSTK",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DDSSTK",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDSSTK",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDSSTK",5,0)
 ;;Based on Medsphere Systems Corporation's MSC Fileman 1051.
"RTN","DDSSTK",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDSSTK",7,0)
 ;;GFT;**1028,1055**
"RTN","DDSSTK",8,0)
 ;
"RTN","DDSSTK",9,0)
 ;COME HERE FROM DDS5+11^DDS5 AND NF+8^DDS01 (BECAUSE WE'VE ENCOUNTERED 'DDSSTACK')
"RTN","DDSSTK",10,0)
 N DDO
"RTN","DDSSTK",11,0)
 N DDSBK,DDSDN,DDSFLD,DDSNP,DDSOPB,DDSPG,DDSPTB,DDSREP,DDSTP
"RTN","DDSSTK",12,0)
 ;
"RTN","DDSSTK",13,0)
 I DDSSTACK?1"`".E D
"RTN","DDSSTK",14,0)
 . S DDSSTACK=+$E(DDSSTACK,2,999)
"RTN","DDSSTK",15,0)
 E  I DDSSTACK=+$P(DDSSTACK,"E") D
"RTN","DDSSTK",16,0)
 . S DDSSTACK=+$O(^DIST(.403,+DDS,40,"B",DDSSTACK,""))
"RTN","DDSSTK",17,0)
 E  D
"RTN","DDSSTK",18,0)
UP . S DDSSTACK=$O(^DIST(.403,+DDS,40,"C",$$UP^DILIBF(DDSSTACK),"")) ;**
"RTN","DDSSTK",19,0)
 ;
"RTN","DDSSTK",20,0)
 I 'DDSSTACK!($D(^DIST(.403,+DDS,40,+$G(DDSSTACK),0))[0) D  Q  ;QUIT IF WE CAN'T FIGURE OUT WHAT PAGE TO GO TO
"RTN","DDSSTK",21,0)
 . K DDSSTACK,DDSBR
"RTN","DDSSTK",22,0)
 ;
"RTN","DDSSTK",23,0)
 N DDSDAORG,DDSDLORG,DDSFLORG,DDSPG
"RTN","DDSSTK",24,0)
POPUP I '$P(^DIST(.403,+DDS,40,+DDSSTACK,0),U,6) N DDSSC ;N DDSSC (Page array) if NOT going to a POPUP PAGE
"RTN","DDSSTK",25,0)
 E  S DDSSTK=1 ;THIS WILL ALLOW JUST 'CLOSE' AND 'REFRESH' IN COMMAND LINE BECAUSE OF SEL+9^DDS & THEN SETUP+10^DDSCOM
"RTN","DDSSTK",26,0)
 S DDSPG=DDSSTACK
"RTN","DDSSTK",27,0)
 K DDSSTACK,DDSBR
"RTN","DDSSTK",28,0)
 ;
"RTN","DDSSTK",29,0)
 S DDSDLORG=DDSDL,DDSDAORG=DA
"RTN","DDSSTK",30,0)
 F DDSI=1:1:DDSDL S DDSDAORG(DDSI)=DA(DDSI)
"RTN","DDSSTK",31,0)
 K DDSI
"RTN","DDSSTK",32,0)
 ;
"RTN","DDSSTK",33,0)
 S DDSH=1 ;DDSH tells SM+6^DIR0 to refresh the COMMAND LINE
"RTN","DDSSTK",34,0)
 D PROC^DDS ;RECURSION!
"RTN","DDSSTK",35,0)
 Q
"RTN","DICATT3")
0^12^B15947104^B15287897
"RTN","DICATT3",1,0)
DICATT3 ;SFISC/GFT - COMPUTED FIELDS ;12APR2016
"RTN","DICATT3",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DICATT3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATT3",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATT3",5,0)
 ;;Based on Medsphere Systems Corporation's MSC Fileman 1051.
"RTN","DICATT3",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATT3",7,0)
 ;;GFT;**76,118,1035,1055**
"RTN","DICATT3",8,0)
 ;
"RTN","DICATT3",9,0)
 K DIRUT,DTOUT D COMP I $P(^DD(A,DA,0),U,2)["C" G N^DICATT
"RTN","DICATT3",10,0)
 S DTOUT=1 G CHECK^DICATT
"RTN","DICATT3",11,0)
 ;
"RTN","DICATT3",12,0)
COMP N DIR,DICOMPX,DISPEC,DICMIN,DIL,DIJ,DIE,DIDEC
"RTN","DICATT3",13,0)
 S DISPEC=$P($G(^DD(A,DA,0)),U,2)
"RTN","DICATT3",14,0)
 S DIR(0)="FU",DIR("A")="'COMPUTED-FIELD' EXPRESSION"
"RTN","DICATT3",15,0)
 I O,$D(^DD(A,DA,9.1)) S DIR("B")=^(9.1)
"RTN","DICATT3",16,0)
 S DIR("?")="^D DICATT3^DIQQ"
"RTN","DICATT3",17,0)
 D ^DIR Q:$D(DIRUT)
"RTN","DICATT3",18,0)
 I $D(DIR("B")),DIR("B")=Y G GETTYPE
"RTN","DICATT3",19,0)
 K DICOMPX S DICOMPX=""
"RTN","DICATT3",20,0)
 S DICMIN=Y,DQI="Y("_A_","_DA_",",DICMX="X DICMX",DICOMP="?I"
"RTN","DICATT3",21,0)
 D ^DICOMP I '$D(X) W $C(7),"  ...??" G 6
"RTN","DICATT3",22,0)
 I DUZ(0)="@" W !,"TRANSLATES TO THE FOLLOWING CODE:",!,X,!
"RTN","DICATT3",23,0)
 I Y["m" W !,"FIELD IS 'MULTIPLE-VALUED'!",!
"RTN","DICATT3",24,0)
 I O,$D(^DD(A,DA,9.01))!(DICOMPX]"") D ACOMP
"RTN","DICATT3",25,0)
 S DISPEC=$E("D",Y["D")_$E("B",Y["B")_"C"_$S(Y'["m":"",1:"m"_$E("w",Y["w"))_$S(Y["p":"p"_$S($P(Y,"p",2):+$P(Y,"p",2),1:""),1:"")_$S(Y'["B":"",1:"J1")
"RTN","DICATT3",26,0)
 S ^DD(A,DA,0)=F_U_DISPEC_"^^ ; ^"_X,^(9)=U,^(9.1)=DICMIN,^(9.01)=DICOMPX
"RTN","DICATT3",27,0)
 S Y=9.2 F  K ^DD(A,DA,Y) S Y=$O(^(Y)) Q:Y\1-9  ;KILL ALL THE 9.2 NODES
"RTN","DICATT3",28,0)
 F Y=9.2:0 Q:'$D(X(Y))  S ^DD(A,DA,Y)=X(Y),Y=$O(X(Y))
"RTN","DICATT3",29,0)
 K X,DICOMPX
"RTN","DICATT3",30,0)
GETTYPE K DIR S DIR(0)="SBA^S:STRING;N:NUMERIC;B:BOOLEAN;D:DATE;m:MULTIPLE;p:POINTER;mp:MULTIPLE POINTER"
"RTN","DICATT3",31,0)
 S DIR("A")="TYPE OF RESULT: "
"RTN","DICATT3",32,0)
 S DIR("B")=$P($E(DIR(0),$F(DIR(0),$$TYPE(DISPEC)_":"),99),";")
"RTN","DICATT3",33,0)
 D ^DIR I $D(DIRUT) G END
"RTN","DICATT3",34,0)
 S DISPEC=$TR(Y,"SN") I Y="B"!(Y="D") D P(Y) G END
"RTN","DICATT3",35,0)
 I Y["p" D POINT G END
"RTN","DICATT3",36,0)
 S DIJ="",DIE=$P($P(O,U,2),"J",2) F J=0:0 S N=$E(DIE) Q:N?.A  S DIE=$E(DIE,2,99),DIJ=DIJ_N
"RTN","DICATT3",37,0)
 S DIDEC=$P(DIJ,",",2),DIL=$S(DIJ:+DIJ,1:8) S:Y'="N" DIDEC=""
"RTN","DICATT3",38,0)
 I DISPEC["m" D P(DISPEC) G END
"RTN","DICATT3",39,0)
 D DEC:Y="N" I '$D(DIRUT) D LEN
"RTN","DICATT3",40,0)
END I O S DI=A D PZ^DIU0 Q
"RTN","DICATT3",41,0)
 D SDIK^DICATT22
"RTN","DICATT3",42,0)
6 Q  ;leave this here
"RTN","DICATT3",43,0)
 ;
"RTN","DICATT3",44,0)
 ;
"RTN","DICATT3",45,0)
DEC N DG,O,M
"RTN","DICATT3",46,0)
FRAC K DIR S DIR("A")="NUMBER OF FRACTIONAL DIGITS TO OUTPUT: "
"RTN","DICATT3",47,0)
 I DIDEC]"" S DIR("B")=DIDEC
"RTN","DICATT3",48,0)
 S DIR("?")="Enter the number of decimal digits that should normally appear in the result."
"RTN","DICATT3",49,0)
 S DIR(0)="NAO^0:14:0" D ^DIR Q:$D(DIRUT)  S DIDEC=Y
"RTN","DICATT3",50,0)
 S DG=" S X=$J(X,0,",M=$P(^DD(A,DA,0),DG),%=M_DG_DIDEC_")"'=^(0)+1
"RTN","DICATT3",51,0)
 W !,"SHOULD VALUE ALWAYS BE INTERNALLY ROUNDED TO ",DIDEC," DECIMAL PLACE",$E("S",DIDEC'=1)
"RTN","DICATT3",52,0)
 D YN^DICN G FRAC:'% Q:%'>0  S ^DD(A,DA,0)=M_$P(DG_DIDEC_")",U,%)
"RTN","DICATT3",53,0)
S S DQI="Y(",O=$D(^(9.02)),X=^(9.1) K DICOMPX,^(9.02) Q:'$D(^(9.01))
"RTN","DICATT3",54,0)
 F Y=1:1 S M=$P(^(9.01),";",Y) Q:M=""  S DICOMPX(1,+M,+$P(M,U,2))="S("""_M_""")",DICOMPX=""
"RTN","DICATT3",55,0)
 Q:Y<2  I X'["/",X'["\" Q:X'["*"  Q:Y<3
"RTN","DICATT3",56,0)
 D ^DICOMP Q:$D(X)-1
"RTN","DICATT3",57,0)
 S %=2-O W !,"WHEN TOTALLING THIS FIELD, SHOULD THE SUM BE COMPUTED FROM",!?7,"THE SUMS OF THE COMPONENT FIELDS" D YN^DICN
"RTN","DICATT3",58,0)
 I %=1 S ^DD(A,DA,9.02)=X_" S Y=X"
"RTN","DICATT3",59,0)
 S:%<1 DIRUT=1
"RTN","DICATT3",60,0)
 Q
"RTN","DICATT3",61,0)
 ;
"RTN","DICATT3",62,0)
LEN K DIR
"RTN","DICATT3",63,0)
 S DIR(0)="NAO^1::0",DIR("A")="LENGTH OF FIELD: ",DIR("B")=DIL
"RTN","DICATT3",64,0)
 S DIR("?")="Maximum number of character expected to be output."
"RTN","DICATT3",65,0)
 D ^DIR Q:$D(DIRUT)
"RTN","DICATT3",66,0)
 D P($P(DISPEC,"J")_"J"_Y_$E(",",DIDEC]"")_DIDEC_DIE) Q
"RTN","DICATT3",67,0)
 ;
"RTN","DICATT3",68,0)
POINT K DIR
"RTN","DICATT3",69,0)
 S DIR(0)="P^1:QEF",DIR("A")="POINT TO WHAT FILE"
"RTN","DICATT3",70,0)
 S DIR("S")="I $$OKFILE^DICOMPX(Y,""W"")"
"RTN","DICATT3",71,0)
 S X=$P($P(^DD(A,DA,0),U,2),"p",2) I 'X S X=$P($P(O,U,2),"p",2)
"RTN","DICATT3",72,0)
 I X,$D(^DIC(+X,0)) S DIR("B")=$P(^(0),U)
"RTN","DICATT3",73,0)
 D ^DIR I '$D(DIRUT) S $P(DISPEC,"p",2)=+Y D P(DISPEC)
"RTN","DICATT3",74,0)
 Q
"RTN","DICATT3",75,0)
 ;
"RTN","DICATT3",76,0)
P(C) S $P(^DD(A,DA,0),U,2)="C"_$TR(C,"C^") Q
"RTN","DICATT3",77,0)
 ;
"RTN","DICATT3",78,0)
ACOMP ;SET/KILL ACOMP NODES   CALLED FROM DICATTDE
"RTN","DICATT3",79,0)
 N X,I I $G(^DD(A,DA,9.01))]"" S X=^(9.01) X ^DD(0,9.01,1,1,2)
"RTN","DICATT3",80,0)
 I DICOMPX]"" S X=DICOMPX X ^DD(0,9.01,1,1,1)
"RTN","DICATT3",81,0)
 Q
"RTN","DICATT3",82,0)
 ;
"RTN","DICATT3",83,0)
TYPE(S) ;
"RTN","DICATT3",84,0)
 Q $S(S["D":"D",S["B":"B",S["mp":"mp",S["m":"m",S["p":"p",S'["J":"S",S[",":"N",1:"S") ;figure out TYPE OF RESULT
"RTN","DICATTDE")
0^13^B32549326^B31229801
"RTN","DICATTDE",1,0)
DICATTDE ;SFISC/GFT - END screen edit;30JUN2012
"RTN","DICATTDE",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DICATTDE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTDE",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATTDE",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATTDE",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATTDE",7,0)
 ;GFT;**1,42,83,103,999,1004,1027,1028,1032,1042,1043,1055**
"RTN","DICATTDE",8,0)
 ;
"RTN","DICATTDE",9,0)
LAYGODEF ;should user see 'ADDING NEW'?
"RTN","DICATTDE",10,0)
 N %
"RTN","DICATTDE",11,0)
 I DICATTF=.01,$G(^DD(DICATTA,0,"UP")) S Y=^("UP"),%=$O(^DD(Y,"SB",DICATTA,0)) I %,$P($G(^DD(Y,%,0)),U,2)["A" S Y="NO" Q
"RTN","DICATTDE",12,0)
 S Y="YES"
"RTN","DICATTDE",13,0)
 Q
"RTN","DICATTDE",14,0)
 ;
"RTN","DICATTDE",15,0)
POST ;This is the DATA VALIDATION of the DICATT FORM
"RTN","DICATTDE",16,0)
 N DICATT1N,DICATTM,DICATT4N,DICATT4S,DICATTED,X,T,G,DIC,DIE,DR,DA
"RTN","DICATTDE",17,0)
 K DDSBR,DDSERROR
"RTN","DICATTDE",18,0)
 I DICATT2 G MULEDIT^DICATTDD
"RTN","DICATTDE",19,0)
VP I $$G(20)=8 D POSTVP^DICATTD8 I $D(DDSBR) S DDSERROR=1,DDSBR=DDSBR_"^DICATT8^2.8" Q
"RTN","DICATTDE",20,0)
 S DICATT1N=$$G(1)
"RTN","DICATTDE",21,0)
 I DICATT1N="" G ^DICATTDK:$D(DICATTDK) S DDSBR=1,DDSERROR=1 Q
"RTN","DICATTDE",22,0)
 I DICATT1N=$$G(2) S DDSERROR=1,DDSBR=1 D HLP^DDSUTL("NAME AND TITLE MUST BE DIFFERENT") Q
"RTN","DICATTDE",23,0)
 I $G(DICATTLN) D  I $D(DDSERROR) D HLP^DDSUTL("YOUR REDEFINITION OF THE FIELD WOULD CAUSE TOO MUCH DATA STORAGE!") Q
"RTN","DICATTDE",24,0)
 .N W,DP,N,A,L,Y
"RTN","DICATTDE",25,0)
 .S A=DICATTA,DP=DICATTF,W=$P(^DD(A,DP,0),U,4),Y=$P(W,";"),N=$P(W,";",2),T=0,L=DICATTLN Q:W=""
"RTN","DICATTDE",26,0)
 .D MX^DICATT1
"RTN","DICATTDE",27,0)
TOOMUCH .I $$MAX^DICATTDM(L-T,Y)>($G(^DD("STRING_LIMIT"),255)-4) S DDSERROR=1,DDSBR=20
"RTN","DICATTDE",28,0)
NEW I DICATT4="",'$D(DICATT4N)  D  I $D(DDSERROR) D HLP^DDSUTL("DATA-STORAGE INFO INCOMPLETE") Q
"RTN","DICATTDE",29,0)
 .I DICATTF=.001 S DICATT4N=" " Q
"RTN","DICATTDE",30,0)
 .S G=$$G(20) I G=6 S DICATT4N=" ; " Q
"RTN","DICATTDE",31,0)
 .I G=5!$$G(20.5) D  Q:$D(DDSERROR)  S DICATT4N=DICATTM(76)_";0" Q  ;Note that we can $$GET the defaulted values for storage, even if user has not seen Pages 3 or 4
"RTN","DICATTDE",32,0)
 ..F T=76,76.1 S DICATTM(T)=$$GET^DDSVALF(T,"DICATTS",4,"","") I DICATTM(T)="" S DDSERROR=1,DDSBR="76^DICATTS^4" Q
"RTN","DICATTDE",33,0)
 .S G=$$GET^DDSVALF(16,"DICATTM",3,"",""),T=$$GET^DDSVALF(17,"DICATTM",3,"","")
"RTN","DICATTDE",34,0)
 .I G=""!(T="") S DDSERROR=1,DDSBR="16^DICATTM^3" Q
"RTN","DICATTDE",35,0)
 .S DICATT4N=G_";"_T Q
"RTN","DICATTDE",36,0)
 S X=^DD(DICATTA,DICATTF,0) D  I $D(DDSERROR) D HLP^DDSUTL("FIELD DEFINITION IS TOO LONG!") Q  ;Can't fit it into the zero node
"RTN","DICATTDE",37,0)
 .S T=$L(DICATT1N)+$L($S($D(DICATT2N):DICATT2N,1:$P(X,U,2)))+$L($S($D(DICATT3N):DICATT3N,1:$P(X,U,3)))+$L($S($D(DICATT4N):DICATT4N,1:$P(X,U,4)))+$L($S($D(DICATT5N)#2:DICATT5N,1:$P(X,U,5,999)))
"RTN","DICATTDE",38,0)
 .I T>($G(^DD("STRING_LIMIT"),255)-13) S DDSERROR=1
"RTN","DICATTDE",39,0)
FILE ;Everything's good!   We're gonna file it
"RTN","DICATTDE",40,0)
 I $D(DICATT4N) S $P(^DD(DICATTA,DICATTF,0),U,4)=DICATT4N I DICATT4N'?.P S DICATT4S=$P(DICATT4N,";"),^DD(DICATTA,"GL",DICATT4S,$P(DICATT4N,";",2),DICATTF)="" ;new Piece 4
"RTN","DICATTDE",41,0)
 I $D(DICATTM),$D(DICATT4S) D  Q  ;make a MULTIPLE
"RTN","DICATTDE",42,0)
 .N TYPE S TYPE=$$G(20)
"RTN","DICATTDE",43,0)
 .D MULMAKE^DICATTDD(DICATTM(76.1),TYPE)
"RTN","DICATTDE",44,0)
WP .I TYPE=5 N DICATTA,DICATTF S:'$D(DICATT2N) DICATT2N="W" ;so we'll bounce back up from W-P multiple
"RTN","DICATTDE",45,0)
 .S DICATTA=DICATTM(76.1),DICATTF=.01,DICATTMN="" D CHANGED ;make the .01 Field of the new multiple
"RTN","DICATTDE",46,0)
CHANGED S X=$E("R",$$G(18)) I DICATT2["R"'=$L(X)!$D(DICATTMN) D
"RTN","DICATTDE",47,0)
 .S DICATTMN="" K ^DD(DICATTA,"RQ",DICATTF) I X["R" S ^(DICATTF)=""
"RTN","DICATTDE",48,0)
 .I '$D(DICATT2N) S DICATT2N=$TR(DICATT2,"R") I DICATT2["W" S DICATT2N="W"
"RTN","DICATTDE",49,0)
 .S DICATT2N=X_DICATT2N_$E("I",$G(DICATT2)["I")
"RTN","DICATTDE",50,0)
 .S %=$P(DICATT2,"P",2) I % K ^DD(+%,0,"PT",DICATTA,DICATTF) ;remove old PT node
"RTN","DICATTDE",51,0)
 .F %=DICATTA:0  S ^DD(%,0,"DT")=DT Q:'$D(^("UP"))  S %=^("UP") Q:'$D(^DD(%))
"RTN","DICATTDE",52,0)
 .S %=$P(DICATT2N,"P",2) I % S ^DD(+%,0,"PT",DICATTA,DICATTF)=""
"RTN","DICATTDE",53,0)
COMPUTED .I DICATT2N["C" D
"RTN","DICATTDE",54,0)
 ..N DICOMPX,A,DA
"RTN","DICATTDE",55,0)
 ..S A=+$P(DICATT2,"p",2) I A,$D(^DD(A,0)) K ^(0,"PTC",DICATTA,DICATTF)
"RTN","DICATTDE",56,0)
 ..S A=+$P(DICATT2N,"p",2) I A,$D(^DD(A,0)) S ^(0,"PTC",DICATTA,DICATTF)=""
"RTN","DICATTDE",57,0)
 ..S (DA(1),A)=DICATTA,DA=DICATTF,DICOMPX=$G(DICATT5N(9.01)) K ^DD(A,DA,9.02) D ACOMP^DICATT3
"RTN","DICATTDE",58,0)
 .I DICATTF=.01 D
"RTN","DICATTDE",59,0)
 ..I DICATTA=DICATTB D  Q
"RTN","DICATTDE",60,0)
 ...I $D(^DIC(DICATTA,0,"GL")),$D(@(^("GL")_"0)")) D UP2("",DICATT2N)
"RTN","DICATTDE",61,0)
 ..S Y=$$GET^DDSVALF(2,"DICATTMUL",5,"I","") I Y?1N S DICATT2N=$E("M",Y=1)_DICATT2N
"RTN","DICATTDE",62,0)
 ..S DR=$$GET^DDSVALF(1,"DICATTMUL",5,"I","")
"RTN","DICATTDE",63,0)
 ..I $G(^DD(DICATTA,0,"UP")) S Y=^("UP"),%=$O(^DD(Y,"SB",DICATTA,0)) I Y,%,$D(^DD(Y,%,0)) D UP2(DR,DICATT2N) ;Reset the MULTIPLE field at the higher level
"RTN","DICATTDE",64,0)
 .S $P(^DD(DICATTA,DICATTF,0),U,2)=DICATT2N ;SET THE SPECIFIER!
"RTN","DICATTDE",65,0)
PIECE3 .I $D(DICATT3N) S $P(^(0),U,3)=$G(DICATT3N)
"RTN","DICATTDE",66,0)
 .I $D(DICATTVP) D FILE^DICATTD8
"RTN","DICATTDE",67,0)
SCREEN S %=$$GET^DDSVALF(65,"DICATT SCREEN",6,"I",""),X=$P(^DD(DICATTA,DICATTF,0),U,2) I %=0!(%="NO")!(X'["P"&(X'["S")) K ^(12),^(12.1)
"RTN","DICATTDE",68,0)
COMPNODS S %=9.2 F  K ^DD(DICATTA,DICATTF,%) S %=$O(^(%)) Q:%\1-9  ;KILL ALL THE 9.2 NODES
"RTN","DICATTDE",69,0)
 F %=8:0 S %=$O(DICATT5N(%)) Q:'%  S ^DD(DICATTA,DICATTF,%)=DICATT5N(%) ;SET THE 9.2 NODES
"RTN","DICATTDE",70,0)
 I $D(DICATT5N)#2 S $P(^(0),U,5,99)=DICATT5N
"RTN","DICATTDE",71,0)
 S DR="50////^S X=DT" F X=1:1:8 D 0
"RTN","DICATTDE",72,0)
 D DIE
"RTN","DICATTDE",73,0)
EGP ;K ^DD(DICATTA,DICATTF,.009) ;WHEN FIELD CHANGES, KILL OFF ITS HELP TRANSLATIONS
"RTN","DICATTDE",74,0)
 S DR="Q",X=98 D 0,DIE
"RTN","DICATTDE",75,0)
 S DR="Q",X=99 D 0,DIE
"RTN","DICATTDE",76,0)
 D FILEWORD^DICATTD0
"RTN","DICATTDE",77,0)
MUMPS I $P(^DD(DICATTA,DICATTF,0),U,2)["K" S ^(9)="@" ;**151
"RTN","DICATTDE",78,0)
AUDIT I $G(DICATT2)]"",$P(^(0),U,2)'=DICATT2,$G(^DD(DICATTB,0,"DIK"))]"" D EN2^DIKZ(DICATTB,"",^("DIK")) ;Recompile CROSS-REFS if auditing changes
"RTN","DICATTDE",79,0)
RESET D GET^DICATTD ;now that we have filed, the NEW is OLD, in case they keep editing!
"RTN","DICATTDE",80,0)
Q Q
"RTN","DICATTDE",81,0)
 ;
"RTN","DICATTDE",82,0)
UP2(A,X) N T,Y ;A=0 if NO LAYGO  X=SPECIFIER
"RTN","DICATTDE",83,0)
 S Y=$P(^(0),U,2),Y=$TR(Y,"SDPV")
"RTN","DICATTDE",84,0)
 F T="S","V","P","D" I X[T S Y=Y_T Q
"RTN","DICATTDE",85,0)
 I A?1N S Y=$TR(Y,"A")_$E("A",DR=0)
"RTN","DICATTDE",86,0)
 S $P(^(0),U,2)=Y
"RTN","DICATTDE",87,0)
 Q
"RTN","DICATTDE",88,0)
 ;
"RTN","DICATTDE",89,0)
0 S T=$T(@X),G=$TR($$G(X),";") Q:G="@"!(G="^")  S:G="" G="@" S DR=DR_$P(T,";",2,3)_"////"_G Q  ;Re-file NAME, TITLE, etc.  Delete if they are now gone.  Leave "@" alone
"RTN","DICATTDE",90,0)
1 ;;.01
"RTN","DICATTDE",91,0)
2 ;;.1
"RTN","DICATTDE",92,0)
3 ;;1.1
"RTN","DICATTDE",93,0)
4 ;;1.2
"RTN","DICATTDE",94,0)
5 ;;8
"RTN","DICATTDE",95,0)
6 ;;8.5
"RTN","DICATTDE",96,0)
7 ;;9
"RTN","DICATTDE",97,0)
8 ;;10
"RTN","DICATTDE",98,0)
98 ;;3
"RTN","DICATTDE",99,0)
99 ;;4
"RTN","DICATTDE",100,0)
 ;
"RTN","DICATTDE",101,0)
DIE S DICATTED=1,DA=DICATTF,DA(1)=DICATTA,(DIC,DIE)="^DD(DICATTA,"
"RTN","DICATTDE",102,0)
 D ^DIE
"RTN","DICATTDE",103,0)
 Q
"RTN","DICATTDE",104,0)
 ;
"RTN","DICATTDE",105,0)
N ;
"RTN","DICATTDE",106,0)
 S DA=DICATTF I $G(DDA(1))]"" S:$G(DICATTA) DDA(1)=DICATTA S:'$D(^DD(DDA(1),DA)) DDA="D" D AUDT^DICATTA
"RTN","DICATTDE",107,0)
 I $D(DIU0) N DI D IJ^DIUTL(DICATTA),P^DICATT
"RTN","DICATTDE",108,0)
 Q
"RTN","DICATTDE",109,0)
 ;
"RTN","DICATTDE",110,0)
G(I) N X Q $$GET^DDSVALF(I,"DICATT",1,"I","")
"RTN","DIFROMS2")
0^4^B45455117^B31819880
"RTN","DIFROMS2",1,0)
DIFROMS2 ;SFISC/DCL/TKW-INSTALL DD FROM SOURCE ARRAY ;4SEP2016
"RTN","DIFROMS2",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DIFROMS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIFROMS2",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIFROMS2",5,0)
 ;;Based on Medsphere Systems Corporation's MSC Fileman 1051.
"RTN","DIFROMS2",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIFROMS2",7,0)
 ;;GFT;**11,53,1037,1053,1055**
"RTN","DIFROMS2",8,0)
 ;
"RTN","DIFROMS2",9,0)
 ;
"RTN","DIFROMS2",10,0)
 Q
"RTN","DIFROMS2",11,0)
 ;
"RTN","DIFROMS2",12,0)
 ;
"RTN","DIFROMS2",13,0)
 ;
"RTN","DIFROMS2",14,0)
EN ;CALLED FROM DIFROMS
"RTN","DIFROMS2",15,0)
 ;WHERE, E.G. ^XTMP("XPDI",4861,"^DD",21489,21489,.01,0)="NAME^RF^^0;1^K:$L(X)>30!(X?.N) X
"RTN","DIFROMS2",16,0)
 ;AND THEREFORE DIFRSA=^XTMP("XPDI",4861)
"RTN","DIFROMS2",17,0)
 ;^XTMP("XPDI",4861,"FIA",21489)="MSC ORDERS HL7"
"RTN","DIFROMS2",18,0)
 ;^XTMP("XPDI",4861,"FIA",21489,0)="^MSCH(21489,"
"RTN","DIFROMS2",19,0)
 ;^XTMP("XPDI",4861,"FIA",21489,0,0)=21489
"RTN","DIFROMS2",20,0)
 ;                                1)="y^y^f^^n^^y^o^n"    --  ^XPD(9.6,D0,4,D1,222)
"RTN","DIFROMS2",21,0)
 ;                                2)="1^^0"
"RTN","DIFROMS2",22,0)
 ;^XTMP("XPDI",4861,"FIA",21489,21489)=0
"RTN","DIFROMS2",23,0)
 ;                          21489.01)=0
"RTN","DIFROMS2",24,0)
 ;AND THEREFORE DIFRFIA=^XTMP("XPDI",4861,"FIA")
"RTN","DIFROMS2",25,0)
 I '$D(@DIFRSA) D ERR(5) Q
"RTN","DIFROMS2",26,0)
 I '$D(@DIFRFIA) D ERR(4) Q
"RTN","DIFROMS2",27,0)
 G:$G(DIFRFILE) FCHK
"RTN","DIFROMS2",28,0)
 S DIFRFILE=0 F  S DIFRFILE=$O(@DIFRFIA@(DIFRFILE)) Q:DIFRFILE'>0  D FILE ;LOOP THRU ALL INCOMING TOP-LEVEL FILES
"RTN","DIFROMS2",29,0)
 Q
"RTN","DIFROMS2",30,0)
 ;
"RTN","DIFROMS2",31,0)
 ;
"RTN","DIFROMS2",32,0)
FCHK I '$D(@DIFRFIA@(DIFRFILE)) D ERR(6) Q
"RTN","DIFROMS2",33,0)
FILE ;
"RTN","DIFROMS2",34,0)
 N DIFR01,DIFR02,DIFRVR,DIFRFDD
"RTN","DIFROMS2",35,0)
 S DIFR01=$G(@DIFRFIA@(DIFRFILE,0,1)) ;UPDATE DATA DICTIONARY [1S] ^ (#222.2) SEND SECURITY CODE [2S] ^ (#222.3) SEND FULL
"RTN","DIFROMS2",36,0)
 S DIFR02=$G(@DIFRFIA@(DIFRFILE,0,2))
"RTN","DIFROMS2",37,0)
 I $TR($E(DIFR01),"NY","ny")="n" D ERR(1) Q
"RTN","DIFROMS2",38,0)
 S DIFRFDD=$TR($P(DIFR01,"^",3),"FP","fp")'="p" ;DIFRFDD=0 means PARTIAL DEFINITION
"RTN","DIFROMS2",39,0)
 I 'DIFRFDD,'$D(^DIC(DIFRFILE)) D ERR(7) Q
"RTN","DIFROMS2",40,0)
 I $D(^DIC(DIFRFILE,0)),$G(@DIFRFIA@(DIFRFILE,0,10))]"" X ^(10) I '$T D ERR(3) Q
"RTN","DIFROMS2",41,0)
 ;I $TR($E(@DIFRFIA@(DIFRFILE,0,5)),"NY","ny")="y",$D(^DIC(DIFRFILE)) D ERR(2) Q  ;INSTALL ONLY IF NEW * * PHASING OUT * *
"RTN","DIFROMS2",42,0)
 N %1,DSEC,D,DA,DIC,DIK,DIFRD,DIFRDATA,DIFRFLD,DIFRDIC,DIFRGL,DIFRX,I,X,Y,Z
"RTN","DIFROMS2",43,0)
 S DSEC=$P(DIFR02,"^") ; **>> add file security if new file only <<**
"RTN","DIFROMS2",44,0)
 I 'DSEC,'$D(^DIC(DIFRFILE,0))#2 S DSEC=1 ; Check to see if the file was Deleted during Pre-Install
"RTN","DIFROMS2",45,0)
 ;delete DD wp text for file, field and x-ref description and field tech description
"RTN","DIFROMS2",46,0)
 ;also delete "NM" nodes when installing full DD at specified level
"RTN","DIFROMS2",47,0)
 ; 
"RTN","DIFROMS2",48,0)
 ;^XTMP("XPDI",4861,"^DD",21489,21489,0)="FIELD^^1^2"
"RTN","DIFROMS2",49,0)
 ;^XTMP("XPDI",4861,"^DD",21489,21489,0,"IX","B",21489,.01)=""
"RTN","DIFROMS2",50,0)
 ;^XTMP("XPDI",4861,"^DD",21489,21489,0,"NM","MSC ORDERS HL7")=""
"RTN","DIFROMS2",51,0)
 ;^XTMP("XPDI",4861,"^DD",21489,21489,.01,0)="NAME^RF^^0;1^K:$L(X)>30
"RTN","DIFROMS2",52,0)
 I 'DIFRFDD D
"RTN","DIFROMS2",53,0)
 .K @DIFRSA@("DIFRNI",DIFRFILE)
"RTN","DIFROMS2",54,0)
 .N DIFRD
"RTN","DIFROMS2",55,0)
 .S DIFRD=DIFRFILE
"RTN","DIFROMS2",56,0)
 .F  S DIFRD=$O(@DIFRFIA@(DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",57,0)
 ..Q:$$UP(DIFRSA,DIFRFILE,DIFRD)  ;abort DIFRD subfile if we can't see its parent
"RTN","DIFROMS2",58,0)
 ..S @DIFRSA@("DIFRNI",DIFRFILE,DIFRD)=""
"RTN","DIFROMS2",59,0)
 ..N DIFRNGF,DIFRNGFD
"RTN","DIFROMS2",60,0)
 ..S DIFRNGF=+$G(@DIFRSA@("UP",DIFRFILE,DIFRD,-1))
"RTN","DIFROMS2",61,0)
 ..S DIFRNGFD=.01 F  S DIFRNGFD=$O(@DIFRSA@("^DD",DIFRFILE,DIFRNGF,DIFRNGFD)) Q:DIFRNGFD=""  Q:+$P($G(^(DIFRNGFD,0)),U,2)=DIFRD
"RTN","DIFROMS2",62,0)
 ..I DIFRNGFD'="" K @DIFRSA@("^DD",DIFRFILE,DIFRNGF,DIFRNGFD)
"RTN","DIFROMS2",63,0)
 ..Q
"RTN","DIFROMS2",64,0)
 .Q
"RTN","DIFROMS2",65,0)
 K:DIFRFDD ^DIC(DIFRFILE,"%D")
"RTN","DIFROMS2",66,0)
 S DIFRD=0
"RTN","DIFROMS2",67,0)
 F  S DIFRD=$O(@DIFRSA@("^DD",DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",68,0)
 .I '$D(@DIFRFIA@(DIFRFILE,DIFRD)) S @DIFRFIA@(DIFRFILE,DIFRD)=0 ;MAKE SURE WE WILL CROSS-REFERENCE THIS DD
"RTN","DIFROMS2",69,0)
 .S ^DD(DIFRD,0)="FIELD^NL^"
"RTN","DIFROMS2",70,0)
 .I 'DIFRFDD,$D(@DIFRSA@("DIFRNI",DIFRFILE,DIFRD)) Q
"RTN","DIFROMS2",71,0)
 .K:$D(@DIFRSA@("^DD",DIFRFILE,DIFRD,0,"NM"))\10 ^DD(DIFRD,0,"NM")
"RTN","DIFROMS2",72,0)
 .S DIFRFLD=0
"RTN","DIFROMS2",73,0)
 .F  S DIFRFLD=$O(@DIFRSA@("^DD",DIFRFILE,DIFRD,DIFRFLD)) Q:DIFRFLD'>0  D
"RTN","DIFROMS2",74,0)
 ..K ^DD(DIFRD,DIFRFLD,21),^(23)
"RTN","DIFROMS2",75,0)
 ..S DIFRX=0
"RTN","DIFROMS2",76,0)
 ..F  S DIFRX=$O(@DIFRSA@("^DD",DIFRFILE,DIFRD,DIFRFLD,1,DIFRX)) Q:DIFRX'>0  D
"RTN","DIFROMS2",77,0)
 ...K ^DD(DIFRD,DIFRFLD,1,DIFRX,"%D")
"RTN","DIFROMS2",78,0)
FULL I DIFRFDD F DIFRX="^DIC","^DD" D  ;FULL DEFINITION
"RTN","DIFROMS2",79,0)
 .N X
"RTN","DIFROMS2",80,0)
 .I DIFRX="^DIC",$G(^DIC(DIFRFILE,0))]"" S X=$P(^(0),"^",3,9) ;REMEMBER NODES 3 &4 (LAST^COUNT)
"RTN","DIFROMS2",81,0)
 .D K12:DIFRX="^DD" M @DIFRX=@DIFRSA@(DIFRX,DIFRFILE) D UPDATED^DICATTA(DIFRFILE,-1) ;MOVE IN A WHOLE DD OR DIC NODE
"RTN","DIFROMS2",82,0)
 .I DIFRX="^DIC",$G(X)]"" S $P(^DIC(DIFRFILE,0),"^",3,9)=X
"RTN","DIFROMS2",83,0)
 .I DSEC,$D(@DIFRSA@("SEC",DIFRX,DIFRFILE)) M @DIFRX=@DIFRSA@("SEC",DIFRX,DIFRFILE)
"RTN","DIFROMS2",84,0)
 .Q
"RTN","DIFROMS2",85,0)
PARTIAL I 'DIFRFDD D  ;PARTIAL DEFINITION
"RTN","DIFROMS2",86,0)
 .N DIFRD
"RTN","DIFROMS2",87,0)
 .S DIFRD=0
"RTN","DIFROMS2",88,0)
 .F  S DIFRD=$O(@DIFRSA@("^DD",DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",89,0)
 ..I $D(@DIFRSA@("DIFRNI",DIFRFILE,DIFRD)) Q  ;ABORT
"RTN","DIFROMS2",90,0)
 ..D K12(DIFRD) M ^DD(DIFRD)=@DIFRSA@("^DD",DIFRFILE,DIFRD) ;HERE IS WHERE A WHOLE DD COMES OVER!
"RTN","DIFROMS2",91,0)
 ..D UPDATED^DICATTA(DIFRD,-1) ;SET THE %MSC NODE
"RTN","DIFROMS2",92,0)
SETUP ..I $G(@DIFRSA@("UP",DIFRFILE,DIFRD,-1)) S ^DD(DIFRD,0,"UP")=+^(-1) ;SET THE "UP" NODE, SINCE IT SEEMS NOT TO BE SENT WITH THE REST OF THE ^DD
"RTN","DIFROMS2",93,0)
 ..I DSEC,$D(@DIFRSA@("SEC","^DD",DIFRFILE,DIFRD)) M ^DD(DIFRD)=@DIFRSA@("SEC","^DD",DIFRFILE,DIFRD)
"RTN","DIFROMS2",94,0)
 ..Q
"RTN","DIFROMS2",95,0)
 .Q
"RTN","DIFROMS2",96,0)
 S DIFRD=0 F  S DIFRD=$O(@DIFRFIA@(DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",97,0)
 .I 'DIFRFDD,$D(@DIFRSA@("DIFRNI",DIFRFILE,DIFRD)) Q
"RTN","DIFROMS2",98,0)
 .S D=DIFRD,DIK="A" F  S DIK=$O(^DD(D,DIK)) Q:DIK=""  K ^(DIK)
"RTN","DIFROMS2",99,0)
 .S DA(1)=D,DIK="^DD("_D_"," D IXALL^DIK ;CROSS-REFERENCE THE ^DD THAT WE HAVE BUILT
"RTN","DIFROMS2",100,0)
 .I $D(^DIC(D,"%",0)) S DIK="^DIC(D,""%""," D IXALL^DIK
"RTN","DIFROMS2",101,0)
 .Q
"RTN","DIFROMS2",102,0)
 I 'DIFRFDD D  G IXKEY
"RTN","DIFROMS2",103,0)
 .Q:'$D(@DIFRSA@("^DD",DIFRFILE,DIFRFILE,.01))
"RTN","DIFROMS2",104,0)
 .S $P(@(^DIC(DIFRFILE,0,"GL")_"0)"),"^",2)=$$HDR2P^DIFROMSS(DIFRFILE)
"RTN","DIFROMS2",105,0)
 .Q
"RTN","DIFROMS2",106,0)
 S DIFRGL=^DIC(DIFRFILE,0,"GL"),DIFRDIC=$P(^DIC(DIFRFILE,0),U,1,2)
"RTN","DIFROMS2",107,0)
 S $P(DIFRDIC,"^",2)=@DIFRFIA@(DIFRFILE,0,0)
"RTN","DIFROMS2",108,0)
 I DIFRFDD,+$G(@DIFRFIA@(DIFRFILE,0,"VR")) S DIFRVR=^("VR") D
"RTN","DIFROMS2",109,0)
 .S ^DD(DIFRFILE,0,"VR")=$P(DIFRVR,"^")
"RTN","DIFROMS2",110,0)
 .S ^DD(DIFRFILE,0,"VRPK")=$P(DIFRVR,"^",2)
"RTN","DIFROMS2",111,0)
 .Q
"RTN","DIFROMS2",112,0)
 S DIFRDATA=$D(@(DIFRGL_"0)")),^(0)=DIFRDIC_"^"_$S(DIFRDATA#2:$P(^(0),"^",3,9),1:"^")
"RTN","DIFROMS2",113,0)
 ;
"RTN","DIFROMS2",114,0)
IXKEY ; Bring INDEX and KEY entries
"RTN","DIFROMS2",115,0)
 K ^TMP("DIFROMS2",$J,"TRIG")
"RTN","DIFROMS2",116,0)
 S DIFRD=0
"RTN","DIFROMS2",117,0)
 F  S DIFRD=$O(@DIFRSA@("IX",DIFRFILE,DIFRD)) Q:'DIFRD  D DDIXIN^DIFROMSX(DIFRFILE,DIFRD,DIFRSA)
"RTN","DIFROMS2",118,0)
 K ^TMP("DIFROMS2",$J,"TRIG")
"RTN","DIFROMS2",119,0)
 S DIFRD=0
"RTN","DIFROMS2",120,0)
 F  S DIFRD=$O(@DIFRSA@("KEY",DIFRFILE,DIFRD)) Q:'DIFRD  D DDKEYIN^DIFROMSY(DIFRFILE,DIFRD,DIFRSA)
"RTN","DIFROMS2",121,0)
 ;
"RTN","DIFROMS2",122,0)
DIKZ I $D(^DD(DIFRFILE,0,"DIK")) D
"RTN","DIFROMS2",123,0)
 .N %X,DIKJ,DIR,DMAX,X,Y,DIFRDIKA
"RTN","DIFROMS2",124,0)
 .D EN2^DIKZ(DIFRFILE,"",^DD(DIFRFILE,0,"DIK"),^DD("ROU"),"DIFRDIKA")
"RTN","DIFROMS2",125,0)
 .I $D(DIFRDIKA) M @DIFRSA@("DIKZ",DIFRFILE)=DIFRDIKA
"RTN","DIFROMS2",126,0)
 .S @DIFRSA@("DIKZ",DIFRFILE)=^DD(DIFRFILE,0,"DIK")
"RTN","DIFROMS2",127,0)
 .Q
"RTN","DIFROMS2",128,0)
 I 'DIFRFDD,$D(@DIFRSA@("DIFRNI",DIFRFILE)) D
"RTN","DIFROMS2",129,0)
 .N DIFRD
"RTN","DIFROMS2",130,0)
 .S DIFRD=0
"RTN","DIFROMS2",131,0)
 .F  S DIFRD=$O(@DIFRSA@("DIFRNI",DIFRFILE,DIFRD)) Q:DIFRD'>0  D
"RTN","DIFROMS2",132,0)
 ..N DIFRERR S DIFRERR(1)=DIFRD
"RTN","DIFROMS2",133,0)
 ..D BLD^DIALOG(9512,.DIFRERR) ;"parent DD(s) missing"
"RTN","DIFROMS2",134,0)
 Q
"RTN","DIFROMS2",135,0)
 ;
"RTN","DIFROMS2",136,0)
K12(DIFRD) N DD,D S DIFRD=+$G(DIFRD) ;DIFRD WILL BE THERE FOR A PARTIAL UPDATE
"RTN","DIFROMS2",137,0)
 F DD=0:0 S DD=$O(@DIFRSA@("^DD",DIFRFILE,DD)) Q:'DD  I DIFRD=DD!'DIFRD D
"RTN","DIFROMS2",138,0)
 .F D=0:0 S D=$O(@DIFRSA@("^DD",DIFRFILE,DD,D)) Q:'D  K ^DD(DD,D,12),^(12.1) ;KILL THE 'SCREEN' NODES, BECAUSE THEY MAY NOT BE COMING IN
"RTN","DIFROMS2",139,0)
 Q
"RTN","DIFROMS2",140,0)
 ;
"RTN","DIFROMS2",141,0)
UP(ROOT,FILE,DDN) ;Return 1 or 0 to install
"RTN","DIFROMS2",142,0)
 Q:FILE=DDN 1
"RTN","DIFROMS2",143,0)
 Q:$D(^DD(DDN)) 1
"RTN","DIFROMS2",144,0)
 Q:'$D(@ROOT@("UP",FILE,DDN)) 1
"RTN","DIFROMS2",145,0)
 N MP,PARENT,T,X
"RTN","DIFROMS2",146,0)
 S MP=0,X="",T=0
"RTN","DIFROMS2",147,0)
 F  S X=$O(@ROOT@("UP",FILE,DDN,X)) Q:X=""  S PARENT=+^(X) D  Q:T!(MP)
"RTN","DIFROMS2",148,0)
 .I $D(^DD(PARENT))!$D(@ROOT@("FIA",FILE,PARENT)) S:X>-2 T=1 Q  ;***GFT
"RTN","DIFROMS2",149,0)
 .S MP=1
"RTN","DIFROMS2",150,0)
 .Q
"RTN","DIFROMS2",151,0)
 Q T
"RTN","DIFROMS2",152,0)
 ;
"RTN","DIFROMS2",153,0)
ERR(X) D BLD^DIALOG($P($T(ERR+X),";",5)) Q
"RTN","DIFROMS2",154,0)
 ;;FIA Node Is Set To "No DD Update";1;9503
"RTN","DIFROMS2",155,0)
 ;;Already Exist On Target System (INSTALL ONLY IF NEW);2;9504
"RTN","DIFROMS2",156,0)
 ;;Did Not Pass DD Screen;3;9505
"RTN","DIFROMS2",157,0)
 ;;FIA Array Does Not Exist;4;9511
"RTN","DIFROMS2",158,0)
 ;;Distribution Array Does Not Exist;5;9506
"RTN","DIFROMS2",159,0)
 ;;FIA File Number Invalid;6;9507
"RTN","DIFROMS2",160,0)
 ;;Partial DD/File Does Not Already Exist On Target System;7;9508
"RTN","DIO3")
0^14^B9326244^B8830579
"RTN","DIO3",1,0)
DIO3 ;SFISC/GFT - TTLS, SUBTTLS ;22JUN2016
"RTN","DIO3",2,0)
 ;;22.2;VA FileMan;**3**;Jan 05, 2016;Build 17
"RTN","DIO3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIO3",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DIO3",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DIO3",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DIO3",7,0)
 ;GFT;**2,999,1005,1047,1055**;
"RTN","DIO3",8,0)
 ;
"RTN","DIO3",9,0)
SUB ;
"RTN","DIO3",10,0)
 N TYPE,V ;**CCO/NI This whole subroutine re-written for 'TOTAL', 'SUBTOTAL', 'COUNT', SUBCOUNT', ETC.
"RTN","DIO3",11,0)
 I '$D(DNP) W:$X !
"RTN","DIO3",12,0)
 I 'A F X=1:1:$G(DIONOSUB) W !
"RTN","DIO3",13,0)
 K X
"RTN","DIO3",14,0)
 I $D(^UTILITY($J,"SV",A+1)) F Y="S","N","Q","H","L" S C=Y_"(V)" F V=0:0 S V=$O(@C) Q:V=""  I $D(^UTILITY($J,"SV",A+1,V,Y)) S @C=^(Y),^(Y)=$S(Y="H":-99999999,Y="L":99999999,1:0)
"RTN","DIO3",15,0)
 S %X="" F  S %X=$O(^UTILITY($J,"T",%X)) Q:%X=""  D
"RTN","DIO3",16,0)
 .S Z=^(%X),V=$P(Z,U,2) Q:$D(V(V))
"RTN","DIO3",17,0)
 .S V(V)="",TYPE=$P(Z,U,4)
"RTN","DIO3",18,0)
U .F I=1:1:6 S DE=$P($T(@I),";",4),Y=DE_"(V)" I $D(@Y)#2 S Y=@Y,C=$P(Z,U,5) D @I
"RTN","DIO3",19,0)
 .I '$D(DNP),$D(X)>9 W ?%X F I=1:1:Z W "-"
"RTN","DIO3",20,0)
 S Z=A I $D(A(A)) F DE="S","N" S I=DE_"(V)" F V=0:0 S V=$O(@I) Q:V=""  S Y=@I I '$D(DNP)!Y S:'$D(V(V)) ^(DE)=$G(^UTILITY($J,"SV",A,V,DE))+Y S @I=0,Z=0 X A(A)
"RTN","DIO3",21,0)
 S X=-1 G K:$D(X)<9!Z F I=0:0 S I=$O(X(I)),X=X+1 Q:I=""
"RTN","DIO3",22,0)
 I X+$Y>IOSL X ^UTILITY($J,1)
"RTN","DIO3",23,0)
EGP F I=0:0 S I=$O(X(I)) Q:I=""  W:$X ! D
"RTN","DIO3",24,0)
 .N TITLE
"RTN","DIO3",25,0)
 .S TITLE=$$EZBLD^DIALOG($P($T(@I),";",6))
"RTN","DIO3",26,0)
 .I A>0 S TITLE=$$EZBLD^DIALOG(7098,TITLE)
"RTN","DIO3",27,0)
 .W:'$G(DIONOSUB) TITLE," " S X="" F  S X=$O(X(I,X)) Q:X=""  W ?X,X(I,X)
"RTN","DIO3",28,0)
 W !
"RTN","DIO3",29,0)
K K Z,X,V,C Q
"RTN","DIO3",30,0)
 ;
"RTN","DIO3",31,0)
1 ;;TOTAL;S;;7090
"RTN","DIO3",32,0)
 I $P(Z,U,6)]"" X $P(Z,U,6,99) S S(V)=Y
"RTN","DIO3",33,0)
 S ^(DE)=$S($S(A:$D(^UTILITY($J,"SV",A,V,DE)),1:$D(^DOSV(0,IO(0),0,V,DE))):^(DE),1:0)+Y
"RTN","DIO3",34,0)
 Q:TYPE["D"  Q:TYPE["F"&(Y=0)  ;TOTALS FOR DATES AND (USUALLY) FREE-TEXT DON'T MAKE SENSE
"RTN","DIO3",35,0)
O I C]""!$P(Z,U,3) D  ;Q
"RTN","DIO3",36,0)
 .N F,OUTRANSF
"RTN","DIO3",37,0)
 .S F=$G(^DOSV(0,IO(0),"F",I))
"RTN","DIO3",38,0)
 .S OUTRANSF="Q"
"RTN","DIO3",39,0)
 .I $P($G(^DD(+F,+$P(F,U,2),0)),U,2)["O" S OUTRANSF=$G(^(2))
"RTN","DIO3",40,0)
 .X OUTRANSF
"RTN","DIO3",41,0)
 .S @("Y=$J(Y,+Z"_C_")")
"RTN","DIO3",42,0)
 S X(I,%X)=Y
"RTN","DIO3",43,0)
 Q
"RTN","DIO3",44,0)
2 ;;COUNT;N;;7089
"RTN","DIO3",45,0)
 S ^(DE)=$S($S(A:$D(^UTILITY($J,"SV",A,V,DE)),1:$D(^DOSV(0,IO(0),0,V,DE))):^(DE),1:0)+Y
"RTN","DIO3",46,0)
 S C=$P(",0",U,C]"") G O
"RTN","DIO3",47,0)
3 ;;MEAN;N;;7088
"RTN","DIO3",48,0)
 Q:TYPE["D"!'Y!$L($P(Z,U,6))!'$D(S(V))  Q:TYPE["F"!A&(S(V)=0)  S Y=$J(S(V)/Y,0,2) G O
"RTN","DIO3",49,0)
4 ;;MINIMUM;L;;7087
"RTN","DIO3",50,0)
 S ^(DE)=$S('$D(^(DE)):Y,^(DE)>Y:Y,1:^(DE)),L(V)=99999999 G M
"RTN","DIO3",51,0)
5 ;;MAXIMUM;H;;7086
"RTN","DIO3",52,0)
 S ^(DE)=$S('$D(^(DE)):Y,^(DE)<Y:Y,1:^(DE)),H(V)=-99999999
"RTN","DIO3",53,0)
M Q:Y[9999999!(N(V)<2)  D D:TYPE["D" G O
"RTN","DIO3",54,0)
6 ;;DEV.;Q;;7085
"RTN","DIO3",55,0)
 Q:TYPE["D"  S ^(DE)=$G(^(DE))+Y,Q(V)=0 Q:N(V)<2  S DE=Y-((S(V)*S(V))/N(V))/(N(V)-1),Y=1+DE/2 Q:DE'>0
"RTN","DIO3",56,0)
L S %=Y,Y=DE/%+%/2 G L:Y<%,O
"RTN","DIO3",57,0)
 ;
"RTN","DIO3",58,0)
DT D D:Y W Y Q
"RTN","DIO3",59,0)
D X ^DD("DD") Q  ;**CCO/NI  DATE FORMAT
"RTN","DIO3",60,0)
N W !
"RTN","DIO3",61,0)
T Q
"VER")
8.0^22.2
"BLD",9890,6)
^2
**END**
**END**

