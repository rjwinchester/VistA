Released DI*22.2*13 SEQ #8
Extracted from mail message
**KIDS**:DI*22.2*13^

**INSTALL NAME**
DI*22.2*13
"BLD",9895,0)
DI*22.2*13^VA FILEMAN^0^3170626^y
"BLD",9895,1,0)
^^1^1^3170623^
"BLD",9895,1,1,0)
Seven routines with corrections to five defects in VA FileMan 22.2
"BLD",9895,4,0)
^9.64PA^^
"BLD",9895,6.3)
4
"BLD",9895,"KRN",0)
^9.67PA^779.2^20
"BLD",9895,"KRN",.4,0)
.4
"BLD",9895,"KRN",.401,0)
.401
"BLD",9895,"KRN",.402,0)
.402
"BLD",9895,"KRN",.403,0)
.403
"BLD",9895,"KRN",.5,0)
.5
"BLD",9895,"KRN",.84,0)
.84
"BLD",9895,"KRN",3.6,0)
3.6
"BLD",9895,"KRN",3.8,0)
3.8
"BLD",9895,"KRN",9.2,0)
9.2
"BLD",9895,"KRN",9.8,0)
9.8
"BLD",9895,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",9895,"KRN",9.8,"NM",1,0)
DDSCOM^^0^B21823002
"BLD",9895,"KRN",9.8,"NM",2,0)
DICATT22^^0^B15509236
"BLD",9895,"KRN",9.8,"NM",3,0)
DICATTDE^^0^B35044915
"BLD",9895,"KRN",9.8,"NM",4,0)
DICATTDM^^0^B14787758
"BLD",9895,"KRN",9.8,"NM",5,0)
DICATTUD^^0^B31808223
"BLD",9895,"KRN",9.8,"NM",6,0)
DICN^^0^B21480119
"BLD",9895,"KRN",9.8,"NM",7,0)
DIETLIBF^^0^B28699638
"BLD",9895,"KRN",9.8,"NM","B","DDSCOM",1)

"BLD",9895,"KRN",9.8,"NM","B","DICATT22",2)

"BLD",9895,"KRN",9.8,"NM","B","DICATTDE",3)

"BLD",9895,"KRN",9.8,"NM","B","DICATTDM",4)

"BLD",9895,"KRN",9.8,"NM","B","DICATTUD",5)

"BLD",9895,"KRN",9.8,"NM","B","DICN",6)

"BLD",9895,"KRN",9.8,"NM","B","DIETLIBF",7)

"BLD",9895,"KRN",19,0)
19
"BLD",9895,"KRN",19.1,0)
19.1
"BLD",9895,"KRN",101,0)
101
"BLD",9895,"KRN",409.61,0)
409.61
"BLD",9895,"KRN",771,0)
771
"BLD",9895,"KRN",779.2,0)
779.2
"BLD",9895,"KRN",870,0)
870
"BLD",9895,"KRN",8989.51,0)
8989.51
"BLD",9895,"KRN",8989.52,0)
8989.52
"BLD",9895,"KRN",8994,0)
8994
"BLD",9895,"KRN","B",.4,.4)

"BLD",9895,"KRN","B",.401,.401)

"BLD",9895,"KRN","B",.402,.402)

"BLD",9895,"KRN","B",.403,.403)

"BLD",9895,"KRN","B",.5,.5)

"BLD",9895,"KRN","B",.84,.84)

"BLD",9895,"KRN","B",3.6,3.6)

"BLD",9895,"KRN","B",3.8,3.8)

"BLD",9895,"KRN","B",9.2,9.2)

"BLD",9895,"KRN","B",9.8,9.8)

"BLD",9895,"KRN","B",19,19)

"BLD",9895,"KRN","B",19.1,19.1)

"BLD",9895,"KRN","B",101,101)

"BLD",9895,"KRN","B",409.61,409.61)

"BLD",9895,"KRN","B",771,771)

"BLD",9895,"KRN","B",779.2,779.2)

"BLD",9895,"KRN","B",870,870)

"BLD",9895,"KRN","B",8989.51,8989.51)

"BLD",9895,"KRN","B",8989.52,8989.52)

"BLD",9895,"KRN","B",8994,8994)

"BLD",9895,"QUES",0)
^9.62^^
"BLD",9895,"REQB",0)
^9.611^1^1
"BLD",9895,"REQB",1,0)
DI*22.2*5^2
"BLD",9895,"REQB","B","DI*22.2*5",1)

"MBREQ")
0
"PKG",1,-1)
1^1
"PKG",1,0)
VA FILEMAN^DI^FM INIT
"PKG",1,22,0)
^9.49I^1^1
"PKG",1,22,1,0)
22.2^3160105^3170621^520736440
"PKG",1,22,1,"PAH",1,0)
13^3170626
"PKG",1,22,1,"PAH",1,1,0)
^^1^1^3170626
"PKG",1,22,1,"PAH",1,1,1,0)
Seven routines with corrections to five defects in VA FileMan 22.2
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","DDSCOM")
0^1^B21823002^B21761308
"RTN","DDSCOM",1,0)
DDSCOM ;SFISC/MLH - COMMAND UTILS ;23JUN2017
"RTN","DDSCOM",2,0)
 ;;22.2;VA FileMan;**5,13**;Jan 05, 2016;Build 4
"RTN","DDSCOM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDSCOM",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DDSCOM",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DDSCOM",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DDSCOM",7,0)
 ;;GFT;**999,1003,1004,1007,1045,1055,1057**
"RTN","DDSCOM",8,0)
 ;
"RTN","DDSCOM",9,0)
COM ;Command line prompt
"RTN","DDSCOM",10,0)
 D:$G(@DDSREFT@("HLP"))>0 HLP^DDSMSG()
"RTN","DDSCOM",11,0)
 N DDSCOM,DIR K DTOUT
"RTN","DDSCOM",12,0)
 D SETUP(.DDSCOM,.X,.DIR)
"RTN","DDSCOM",13,0)
 S DIR("?",1)=X
"RTN","DDSCOM",14,0)
 S DIR("A")=$$EZBLD^DIALOG(8000),DIR("?",2)=" ",DIR("?")=$$EZBLD^DIALOG($S($G(DDSMOUSY):8000.101,1:8000.1)) ;'COMMAND' LINE & 'Enter a COMMAND'
"RTN","DDSCOM",15,0)
 S DIR("??")="^D CHLP^DDSCOM"
"RTN","DDSCOM",16,0)
 D:'$G(DDSKM)
"RTN","DDSCOM",17,0)
 .K DDH,DDQ
"RTN","DDSCOM",18,0)
 .F DDH=1:1:IOSL-DDSHBX-6 S DDH(DDH,"T")=" " ;ERASE EVERYTHING IN HELP AREA...
"RTN","DDSCOM",19,0)
 .S DDH=DDH+1,DDH(DDH,"T")=DIR("?",1)
"RTN","DDSCOM",20,0)
 .S DDH=DDH+1,DDH(DDH,"T")=DIR("?",2)
"RTN","DDSCOM",21,0)
 .S DDH=DDH+1,DDH(DDH,"T")=DIR("?")
"RTN","DDSCOM",22,0)
 .D SC^DDSU
"RTN","DDSCOM",23,0)
 S DDM=1 K DDSKM
"RTN","DDSCOM",24,0)
 S DIR0=IOSL-1_U_($L(DIR("A"))+1)_"^30^"_(IOSL-1)_"^0"
"RTN","DDSCOM",25,0)
 D ^DIR K DUOUT,DIROUT,DIRUT
"RTN","DDSCOM",26,0)
TRANS S:X?1A.E (X,Y,Y(0))=$E("ECSNRPQ",$F(DIR("X"),$E($$UP^DILIBF(X)))-1)
"RTN","DDSCOM",27,0)
 M DDSMOUSE(IOSL-5)=DDSCOM ;...DOWN TO 'Exit  Save....'  REMEMBER WHERE THESE SHOW FOR MOUSE
"RTN","DDSCOM",28,0)
 D:X="C"
"RTN","DDSCOM",29,0)
 . S:DDACT="N" Y="c"
"RTN","DDSCOM",30,0)
 . S Y(0)="CLOSE"
"RTN","DDSCOM",31,0)
 . S:DDACT'="N" (X,Y,Y(0))=""
"RTN","DDSCOM",32,0)
 Q
"RTN","DDSCOM",33,0)
 ;
"RTN","DDSCOM",34,0)
BOT ;from DIR0 & DIR02
"RTN","DDSCOM",35,0)
 I DDS?.N1"^MSCXQSCR" Q  ;!!!!!!
"RTN","DDSCOM",36,0)
 N X,XVIS,I,DIR,M,DIREPLIN
"RTN","DDSCOM",37,0)
 S DY=IOSL-1,DX=0,$X=0 X IOXY W $P(DDGLCLR,DDGLDEL) ;Clear the bottom line
"RTN","DDSCOM",38,0)
 S DIREPLIN=$P($$EZBLD^DIALOG(7002),U,$S($G(DIR0("REP")):2,1:1)) ;INSERT/REPLACE
"RTN","DDSCOM",39,0)
 I '$G(DDSMOUSY) D
"RTN","DDSCOM",40,0)
 .I DDO,'$G(DDM) W $$EZBLD^DIALOG(8000) ;**'COMMAND:'
"RTN","DDSCOM",41,0)
 E  I DDO D
"RTN","DDSCOM",42,0)
 .D SETUP(.M,.X,.DIR)
"RTN","DDSCOM",43,0)
 .K DDSMOUSE(DY) M DDSMOUSE(DY)=M S DX=0 W X
"RTN","DDSCOM",44,0)
 S X=$$EZBLD^DIALOG($G(DDSMOUSY)/10+8074),DX=IOM-$L(DIREPLIN)-3-$L(X) I DX>$X D  ;'F1-H FOR HELP' or 'HELP' if we have room
"RTN","DDSCOM",45,0)
 . X IOXY
"RTN","DDSCOM",46,0)
 . W $P(DDGLVID,DDGLDEL,10)_$P(DDGLVID,DDGLDEL,6)_X_$P(DDGLVID,DDGLDEL,10)
"RTN","DDSCOM",47,0)
 .S DDSMOUSE(DY,DX,DX+$L(X)-1)="H^DIR0H"
"RTN","DDSCOM",48,0)
 S DX=IOM-$L(DIREPLIN)-1 X IOXY
"RTN","DDSCOM",49,0)
 W $S('$D(DDGLVAN):$P(DDGLVID,DDGLDEL,6),1:"")_DIREPLIN_$P(DDGLVID,DDGLDEL,10) ;INSERT/REPLACE
"RTN","DDSCOM",50,0)
 S DDSMOUSE(DY,DX,DX+$L(DIREPLIN)-1)="RPM^DIR01" ;Make 'REPLACE' clickable
"RTN","DDSCOM",51,0)
 Q
"RTN","DDSCOM",52,0)
 ;
"RTN","DDSCOM",53,0)
 ;
"RTN","DDSCOM",54,0)
 ;
"RTN","DDSCOM",55,0)
SETUP(DDSM,X,DIR) ;DDSM, DIR, & X are return variables
"RTN","DDSCOM",56,0)
 ;DDSM shows mouse positions
"RTN","DDSCOM",57,0)
 ;DIR is array
"RTN","DDSCOM",58,0)
 ;X is writeable string
"RTN","DDSCOM",59,0)
 K DDSM,DIR("X") N DDSCH,DDSPP,XVIS
"RTN","DDSCOM",60,0)
 F X=1:1:7 S DDSCH(X)=$$EZBLD^DIALOG(X/100+8000),$E(DIR("X"),X)=$C($A(DDSCH(X))),DDSCH(X,0)=$C($A(DDSCH(X))+32)_":"_$$UP^DILIBF(DDSCH(X)) ;Exit, Close, etc
"RTN","DDSCOM",61,0)
 S DDSPP=$$PP^DDS5(.X) I 'X S DDSPP="" ;Previous Page
"RTN","DDSCOM",62,0)
 S X="" ;This will be the string of COMMANDs, with control sequences to highlight
"RTN","DDSCOM",63,0)
 S XVIS="" ;just visible chars
"RTN","DDSCOM",64,0)
 S DIR(0)="SO^"
"RTN","DDSCOM",65,0)
 I DDSSC>1!($P(^DIST(.403,+DDS,40,+$G(DDSPG),0),U,6)&$G(DDSATOP))!($G(DDSSEL)&'$$MULSELPG^DDSRUN(+DDS)) D  ;)POP-UP PAGE.   DO THIS FOR OLD-STYLE (but not new-style) SELECTION PAGE
"RTN","DDSCOM",66,0)
 .D EXSANEXR(2,"CL"),EXSANEXR(5,"RF") ;"Close" & "Refresh" in Command Line
"RTN","DDSCOM",67,0)
 .S DIR("B")=DDSCH(2) ;Prompt 'Close' on pop-up page
"RTN","DDSCOM",68,0)
 E  D  ;NON-POP-UP PAGE
"RTN","DDSCOM",69,0)
 .D EXSANEXR(1,"EX") D:$D(DDSFDO)[0 EXSANEXR(3,"SV") D:DDSNP]"" EXSANEXR(4,"NP^DDS2") D:DDSPP]"" EXSANEXR(6,"PP") D EXSANEXR(5,"RF") D EXSANEXR(7,"QT")
"RTN","DDSCOM",70,0)
 .;S DIR("B")=DDSCH(1) ;Prompt 'Exit' on non-pop-up page **DKA**
"RTN","DDSCOM",71,0)
 S X=$E(X,1,$L(X)-4)
"RTN","DDSCOM",72,0)
 Q
"RTN","DDSCOM",73,0)
EXSANEXR(N,JUMP) S DIR(0)=DIR(0)_DDSCH(N,0)_";",N=DDSCH(N),DDSM=$L(XVIS)
"RTN","DDSCOM",74,0)
 S XVIS=XVIS_N_"    " ;BUILD 'Exit   Save   ...' STRING
"RTN","DDSCOM",75,0)
 I $G(DDSMOUSY) S X=X_$$HIGH^DDSU(N)_"    "
"RTN","DDSCOM",76,0)
 E  S X=XVIS
"RTN","DDSCOM",77,0)
 S DDSM(DDSM,DDSM+$L(N)-1)=JUMP ;Mouse positions for each character of displayed text
"RTN","DDSCOM",78,0)
 Q
"RTN","DDSCOM",79,0)
 ;
"RTN","DDSCOM",80,0)
 ;
"RTN","DDSCOM",81,0)
 ;
"RTN","DDSCOM",82,0)
CHLP ;
"RTN","DDSCOM",83,0)
 K DDH,DDQ
"RTN","DDSCOM",84,0)
 S DDH=0,DDS3CD=$P(DIR(0),U,2)
"RTN","DDSCOM",85,0)
 F DDS3PC=1:1:$L(DDS3CD,";") D
"RTN","DDSCOM",86,0)
 . S DDS3C=$C($A($P($P(DDS3CD,";",DDS3PC),":"))-32)
"RTN","DDSCOM",87,0)
 . I "^E^C^S^N^R^P^Q^"[(U_DDS3C_U) D
"RTN","DDSCOM",88,0)
 .. S DDH=DDH+1
"RTN","DDSCOM",89,0)
 .. S DDH(DDH,"T")=$E($P($T(@("H"_DDS3C)),";",3)_"           ",1,14)_"- "_$$EZBLD^DIALOG($P($T(@("H"_DDS3C)),";",4)) ;THE DIFFERENT COMMAND-LINE RESPONSES
"RTN","DDSCOM",90,0)
 D:DDH>0 SC^DDSU
"RTN","DDSCOM",91,0)
 K DDS3C,DDS3CD,DDS3PC
"RTN","DDSCOM",92,0)
 Q
"RTN","DDSCOM",93,0)
HE ;;Exit;8000.11;**CCO/NI  CHANGED THRU BOTTOM OF ROUTINE
"RTN","DDSCOM",94,0)
HC ;;Close;8000.12
"RTN","DDSCOM",95,0)
HS ;;Save;8000.13
"RTN","DDSCOM",96,0)
HN ;;Next Page;8000.14
"RTN","DDSCOM",97,0)
HR ;;Refresh;8000.15
"RTN","DDSCOM",98,0)
HP ;;Previous Page;8000.16
"RTN","DDSCOM",99,0)
HQ ;;Quit;8000.17
"RTN","DICATT22")
0^2^B15509236^B15001986
"RTN","DICATT22",1,0)
DICATT22 ;SFISC/GFT - CREATE A SUBFILE ;23JUN2017
"RTN","DICATT22",2,0)
 ;;22.2;VA FileMan;**2,13**;Jan 05, 2016;Build 4
"RTN","DICATT22",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATT22",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATT22",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATT22",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATT22",7,0)
 ;;GFT;**42,52,89,999,1004,1024**
"RTN","DICATT22",8,0)
 ;
"RTN","DICATT22",9,0)
 ;FINISH MODIFYING A FIELD'S ATTRIBUTES
"RTN","DICATT22",10,0)
 ;
"RTN","DICATT22",11,0)
 G M:V I P,$D(^DD(J(N-1),P,0)) S I=A_$E("I",$P(^(0),U,2)["I") D P
"RTN","DICATT22",12,0)
 I O,DA=.01,'N S I=$P(@(I(0)_"0)"),U,2) D P
"RTN","DICATT22",13,0)
1 ;
"RTN","DICATT22",14,0)
 S %=$L(F)+$L(W)+$L(C)+$L(Z) I %>242 W $C(7),!?5,"Field Definition is TOO LONG by ",%-242," characters!" G TYPE^DICATT2
"RTN","DICATT22",15,0)
 ;READY TO SAVE IT!
"RTN","DICATT22",16,0)
 I O K DIK,^DD(A,DA,101),^(201) S DA(1)=A,DIK="^DD("_A_",",DIK(1)=.2 D EN2^DIK K DIK ;DO THE KILL LOGIC FOR THE OLD SPECIFIER!
"RTN","DICATT22",17,0)
 S ^DD(A,DA,0)=F_U_Z_U_W_U_C S:$P(Z,U)["K" ^(9)="@" ;SET THE FIELD.  IF IT IS 'MUMPS' TYPE, ONLY PROGRAMMERS HAVE WRITE ACCESS
"RTN","DICATT22",18,0)
M101 I Z["t" M ^DD(A,DA)=DICATTPM K DICATTPM ;PROPERTIES (101) AND METHODS (102)
"RTN","DICATT22",19,0)
 D SDIK,I G N^DICATT ;CROSS-REFERENCE FIELD ATTRIBUTES
"RTN","DICATT22",20,0)
 ;
"RTN","DICATT22",21,0)
Q W $C(7),!,"NUMBER MUST BE BETWEEN ",A," & ",%+1," AND NOT ALREADY IN USE"
"RTN","DICATT22",22,0)
M S %=$P(A,"."),DE=%_"."_+$P(A,".",2)_DA I +DE'=DE!$D(^DD(DE)) F DE=A+.01:.01:%+.7,%+.7:.001:%+.9,%+.9:.0001 Q:DE>A&'$D(^DD(DE))
"RTN","DICATT22",23,0)
 I DUZ(0)="@" W !,"SUB-DICTIONARY NUMBER: "_DE_"// " R DG:DTIME S:'$T DTOUT=1 G:DG=U!'$T ^DICATT2 S:DG]"" DE=DG G Q:+DE'=DE!(DE<A)
"RTN","DICATT22",24,0)
 G Q:%+1'>DE!$D(^DD(DE)) S I=DE,^(I,0)=F_" SUB-FIELD^^.01^1",^(0,"UP")=A,^("NM",F)="",%X="^DD("_A_","_DA_")",@%X@(0)=F_"^^^"_W D P
"RTN","DICATT22",25,0)
 S W=$P(W,";") D SDIK S:+W'=W W=""""_W_""""
"RTN","DICATT22",26,0)
 S DICATT22=DA,(N,DICL)=N+1,I(N)=W,J(N)=DE,DA=.01,^DD(DE,DA,0)=F_U_Z_"^0;1^"_C,%Y="^DD("_DE_",.01)"
"RTN","DICATT22",27,0)
VARPOINT I T["V" D
"RTN","DICATT22",28,0)
 . N I,FI,FD,P
"RTN","DICATT22",29,0)
 . S FI=$QS(%X,1),FD=$QS(%X,2)
"RTN","DICATT22",30,0)
 . S I=0
"RTN","DICATT22",31,0)
 . F  S I=$O(@%X@("V",I)) Q:'I  S P=+$G(^(I,0)) K:P ^DD(P,0,"PT",FI,FD)
"RTN","DICATT22",32,0)
 . M @%Y@("V")=@%X@("V") K @%X@("V")
"RTN","DICATT22",33,0)
POINT I T["P" F %=12,12.1 I $D(@%X@(%)) S @%Y@(%)=@%X@(%) K @%X@(%)
"RTN","DICATT22",34,0)
 I Z["t" M @%Y=DICATTPM K DICATTPM ;PROPERTIES (101) AND METHODS (102) FOR A MULTIPLE FIELD
"RTN","DICATT22",35,0)
 K %X,%Y
"RTN","DICATT22",36,0)
 I T'["W" D
"RTN","DICATT22",37,0)
 .S ^DD(DE,DA,1,0)="^.1",^(1,0)=DE_"^B",DIK=W_",""B"",$E(X,1,30),DA)"
"RTN","DICATT22",38,0)
 .F %=DICL-1:-1 S DIK=I(%)_$E(",",1,%)_"DA("_(DICL-%)_"),"_DIK I '% S ^(1)="S "_DIK_"=""""",^(2)="K "_DIK S:T["V" ^(3)="Required Index for Variable Pointer" Q
"RTN","DICATT22",39,0)
 D SDIK,I S DICL=DICL-1
"RTN","DICATT22",40,0)
 D AUDIT(DA(1),.01,"N") S DA=DICATT22 K DICATT22 ;AUDIT THE NEW .01 FIELD AT THE LOWER LEVEL
"RTN","DICATT22",41,0)
 G N^DICATT
"RTN","DICATT22",42,0)
 ;
"RTN","DICATT22",43,0)
AUDIT(DIFILE,DIFIELD,DITYPE) ;DATA DICTIONARY AUDIT
"RTN","DICATT22",44,0)
 N DDA,DA,B0,A0
"RTN","DICATT22",45,0)
 S DDA(1)=DIFILE,DA=DIFIELD,DDA=$G(DITYPE,"E")
"RTN","DICATT22",46,0)
 D AUDT^DICATTA
"RTN","DICATT22",47,0)
 Q
"RTN","DICATT22",48,0)
 ;
"RTN","DICATT22",49,0)
 ;
"RTN","DICATT22",50,0)
 ;
"RTN","DICATT22",51,0)
I K DR,DG,DB,DQ,DQI,^DD(U,$J),^UTILITY("DIVR",$J) S DG=$P(^DD(J(N),DA,0),U,2,99)
"RTN","DICATT22",52,0)
 I $P(O,U,2,99)'=DG S:$D(M)#2 ^DD(J(N),DA,3)=M S M(1)=0 ;IF WE HAVE NEW DEFINITION, WE HAVE A NEW HELP-PROMPT 
"RTN","DICATT22",53,0)
 S DIE=DIK,DR=$P(";21",U,'O) ;IF FIELD IS NEW, ASK DESCRIPTION
"RTN","DICATT22",54,0)
 S DR=$S(DUZ(0)="@"&($P(DG,U)'["t"):"3;4",1:3)_DR ;EXTENSIBLE DATA TYPE WILL HOLD XECUTABLE HELP.  OTHERWISE ASK THEM
"RTN","DICATT22",55,0)
 D
"RTN","DICATT22",56,0)
 .N I,J,T
"RTN","DICATT22",57,0)
 .D ^DIE
"RTN","DICATT22",58,0)
 I T="W" K DE
"RTN","DICATT22",59,0)
 I $D(M)>9,O S V=DICL,DR=$P(Z,U),Z=$P(Z,U,2) D  ;It's not clear that we need these variables set, now we are calling DIVR^DIUTL 12/01
"RTN","DICATT22",60,0)
V .N D0 S DI=J(N) D DIPZ^DIU0 Q:$D(DTOUT)!'$D(DIZ)  ;NEEDS 'DI' & 'DA'
"RTN","DICATT22",61,0)
 .D DIVR^DIUTL(A,DA)
"RTN","DICATT22",62,0)
 K DR,M Q
"RTN","DICATT22",63,0)
 ;
"RTN","DICATT22",64,0)
 ;
"RTN","DICATT22",65,0)
P F Y="S","D","P","A","V" S:I[Y I=$P(I,Y)_$P(I,Y,2)_$P(I,Y,3) S:T[Y I=I_Y
"RTN","DICATT22",66,0)
 S ^(0)=$P(^(0),U)_U_I_U_$P(^(0),U,3,99) Q
"RTN","DICATT22",67,0)
 ;
"RTN","DICATT22",68,0)
SDIK N %X
"RTN","DICATT22",69,0)
 S DA(1)=J(DICL),DIK="^DD("_DA(1)_"," I O K ^DD(DA(1),"RQ",DA)
"RTN","DICATT22",70,0)
 W !,"...." G IX1^DIK
"RTN","DICATTDE")
0^3^B35044915^B35121776
"RTN","DICATTDE",1,0)
DICATTDE ;O-OIFO/GFT - END screen edit ;23JUN2017
"RTN","DICATTDE",2,0)
 ;;22.2;VA FileMan;**3,2,13**;Jan 05, 2016;Build 4
"RTN","DICATTDE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTDE",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATTDE",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATTDE",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATTDE",7,0)
 ;;GFT;**1,42,83,103,999,1004,1027,1028,1032,1042,1043,1055,1058**
"RTN","DICATTDE",8,0)
 ;
"RTN","DICATTDE",9,0)
LAYGODEF ;should user see 'ADDING NEW'?
"RTN","DICATTDE",10,0)
 N %
"RTN","DICATTDE",11,0)
 I DICATTF=.01,$G(^DD(DICATTA,0,"UP")) S Y=^("UP"),%=$O(^DD(Y,"SB",DICATTA,0)) I %,$P($G(^DD(Y,%,0)),U,2)["A" S Y="NO" Q
"RTN","DICATTDE",12,0)
 S Y="YES"
"RTN","DICATTDE",13,0)
 Q
"RTN","DICATTDE",14,0)
 ;
"RTN","DICATTDE",15,0)
POST ;This is the DATA VALIDATION of the DICATT FORM
"RTN","DICATTDE",16,0)
 N DICATT1N,DICATTM,DICATT4N,DICATT4S,DICATTED,X,T,G,DIC,DIE,DR,DA
"RTN","DICATTDE",17,0)
 K DDSBR,DDSERROR
"RTN","DICATTDE",18,0)
 I DICATT2 G MULEDIT^DICATTDD
"RTN","DICATTDE",19,0)
VP I $$G(20)=8 D POSTVP^DICATTD8 I $D(DDSBR) S DDSERROR=1,DDSBR=DDSBR_"^DICATT8^2.8" Q
"RTN","DICATTDE",20,0)
 S DICATT1N=$$G(1)
"RTN","DICATTDE",21,0)
 I DICATT1N="" G ^DICATTDK:$D(DICATTDK) S DDSBR=1,DDSERROR=1 Q
"RTN","DICATTDE",22,0)
 I DICATT1N=$$G(2) S DDSERROR=1,DDSBR=1 D HLP^DDSUTL("NAME AND TITLE MUST BE DIFFERENT") Q
"RTN","DICATTDE",23,0)
 I $G(DICATTLN) D  I $D(DDSERROR) D HLP^DDSUTL("YOUR REDEFINITION OF THE FIELD WOULD CAUSE TOO MUCH DATA STORAGE!") Q
"RTN","DICATTDE",24,0)
 .N W,DP,N,A,L,Y
"RTN","DICATTDE",25,0)
 .S A=DICATTA,DP=DICATTF,W=$P(^DD(A,DP,0),U,4),Y=$P(W,";"),N=$P(W,";",2),T=0,L=DICATTLN Q:W=""
"RTN","DICATTDE",26,0)
 .D MX^DICATT1
"RTN","DICATTDE",27,0)
TOOMUCH .I $$MAX^DICATTDM(L-T,Y)>($G(^DD("STRING_LIMIT"),255)-4) S DDSERROR=1,DDSBR=20
"RTN","DICATTDE",28,0)
NEW I DICATT4="",'$D(DICATT4N)  D  I $D(DDSERROR) D HLP^DDSUTL("DATA-STORAGE INFO INCOMPLETE") Q
"RTN","DICATTDE",29,0)
 .I DICATTF=.001 S DICATT4N=" " Q
"RTN","DICATTDE",30,0)
 .S G=$$G(20) I G=6 S DICATT4N=" ; " Q
"RTN","DICATTDE",31,0)
 .I G=5!$$G(20.5) D  Q:$D(DDSERROR)  S DICATT4N=DICATTM(76)_";0" Q  ;Note that we can $$GET the defaulted values for storage, even if user has not seen Pages 3 or 4
"RTN","DICATTDE",32,0)
 ..F T=76,76.1 S DICATTM(T)=$$GET^DDSVALF(T,"DICATTS",4,"","") I DICATTM(T)="" S DDSERROR=1,DDSBR="76^DICATTS^4" Q
"RTN","DICATTDE",33,0)
 .S G=$$GET^DDSVALF(16,"DICATTM",3,"",""),T=$$GET^DDSVALF(17,"DICATTM",3,"","")
"RTN","DICATTDE",34,0)
 .I G=""!(T="") S DDSERROR=1,DDSBR="16^DICATTM^3" Q
"RTN","DICATTDE",35,0)
 .S DICATT4N=G_";"_T Q
"RTN","DICATTDE",36,0)
 S X=^DD(DICATTA,DICATTF,0) D  I $D(DDSERROR) D HLP^DDSUTL("FIELD DEFINITION IS TOO LONG!") Q  ;Can't fit it into the zero node
"RTN","DICATTDE",37,0)
 .S T=$L(DICATT1N)+$L($S($D(DICATT2N):DICATT2N,1:$P(X,U,2)))+$L($S($D(DICATT3N):DICATT3N,1:$P(X,U,3)))+$L($S($D(DICATT4N):DICATT4N,1:$P(X,U,4)))+$L($S($D(DICATT5N)#2:DICATT5N,1:$P(X,U,5,999)))
"RTN","DICATTDE",38,0)
 .I T>($G(^DD("STRING_LIMIT"),255)-13) S DDSERROR=1
"RTN","DICATTDE",39,0)
 ;
"RTN","DICATTDE",40,0)
FILE ;Everything's good!   We're gonna file it
"RTN","DICATTDE",41,0)
 I $D(DICATT4N) S $P(^DD(DICATTA,DICATTF,0),U,4)=DICATT4N I DICATT4N'?.P S DICATT4S=$P(DICATT4N,";"),^DD(DICATTA,"GL",DICATT4S,$P(DICATT4N,";",2),DICATTF)="" ;new Piece 4
"RTN","DICATTDE",42,0)
 I $D(DICATTM),$D(DICATT4S) D  Q  ;make a MULTIPLE
"RTN","DICATTDE",43,0)
 .N TYPE S TYPE=$$G(20)
"RTN","DICATTDE",44,0)
 .D MULMAKE^DICATTDD(DICATTM(76.1),TYPE)
"RTN","DICATTDE",45,0)
WP .I TYPE=5 N DICATTA,DICATTF S:'$D(DICATT2N) DICATT2N="W" ;so we'll bounce back up from W-P multiple
"RTN","DICATTDE",46,0)
 .S DICATTA=DICATTM(76.1),DICATTF=.01,DICATTMN="" ;make the .01 Field of the new multiple
"RTN","DICATTDE",47,0)
 .D M101 Q
"RTN","DICATTDE",48,0)
M101 I $G(DICATT2N)["t" M ^DD(DICATTA,DICATTF)=DICATTPM K DICATTPM
"RTN","DICATTDE",49,0)
 S X=$E("R",$$G(18)) I DICATT2["R"'=$L(X)!$D(DICATTMN) D
"RTN","DICATTDE",50,0)
 .F %=DICATTA:0  S ^DD(%,0,"DT")=DT Q:'$D(^("UP"))  S %=^("UP") Q:'$D(^DD(%))
"RTN","DICATTDE",51,0)
 .S DICATTMN="" K ^DD(DICATTA,"RQ",DICATTF) I X["R" S ^(DICATTF)=""
"RTN","DICATTDE",52,0)
 .I '$D(DICATT2N) S DICATT2N=$TR(DICATT2,"R") I DICATT2["W" S DICATT2N="W"
"RTN","DICATTDE",53,0)
 .S DICATT2N=X_DICATT2N_$E("I",$G(DICATT2)["I")
"RTN","DICATTDE",54,0)
 .S %=$P(DICATT2,"P",2) I % K ^DD(+%,0,"PT",DICATTA,DICATTF) ;remove old PT node
"RTN","DICATTDE",55,0)
 .S %=$P(DICATT2N,"P",2) I % S ^DD(+%,0,"PT",DICATTA,DICATTF)=""
"RTN","DICATTDE",56,0)
DIK2 .I DICATT2["t" D AFDEFDEL^DIETLIB(DICATTA,DICATTF)
"RTN","DICATTDE",57,0)
COMPUTED .I DICATT2N["C" D
"RTN","DICATTDE",58,0)
 ..N DICOMPX,A,DA
"RTN","DICATTDE",59,0)
 ..S A=+$P(DICATT2,"p",2) I A,$D(^DD(A,0)) K ^(0,"PTC",DICATTA,DICATTF)
"RTN","DICATTDE",60,0)
 ..S A=+$P(DICATT2N,"p",2) I A,$D(^DD(A,0)) S ^(0,"PTC",DICATTA,DICATTF)=""
"RTN","DICATTDE",61,0)
 ..S (DA(1),A)=DICATTA,DA=DICATTF,DICOMPX=$G(DICATT5N(9.01)) K ^DD(A,DA,9.02) D ACOMP^DICATT3
"RTN","DICATTDE",62,0)
 .I DICATTF=.01 D
"RTN","DICATTDE",63,0)
 ..I DICATTA=DICATTB D  Q
"RTN","DICATTDE",64,0)
 ...I $D(^DIC(DICATTA,0,"GL")),$D(@(^("GL")_"0)")) D UP2("",DICATT2N)
"RTN","DICATTDE",65,0)
 ..S Y=$$GET^DDSVALF(2,"DICATTMUL",5,"I","") I Y?1N S DICATT2N=$E("M",Y=1)_DICATT2N
"RTN","DICATTDE",66,0)
 ..S DR=$$GET^DDSVALF(1,"DICATTMUL",5,"I","")
"RTN","DICATTDE",67,0)
 ..I $G(^DD(DICATTA,0,"UP")) S Y=^("UP"),%=$O(^DD(Y,"SB",DICATTA,0)) I Y,%,$D(^DD(Y,%,0)) D UP2(DR,DICATT2N) ;Reset the MULTIPLE field at the higher level
"RTN","DICATTDE",68,0)
 .S $P(^DD(DICATTA,DICATTF,0),U,2)=DICATT2N ;SET THE SPECIFIER!
"RTN","DICATTDE",69,0)
PIECE3 .I $D(DICATT3N) S $P(^(0),U,3)=$G(DICATT3N)
"RTN","DICATTDE",70,0)
 .I $D(DICATTVP) D FILE^DICATTD8
"RTN","DICATTDE",71,0)
DIK1 .N DIK,DA S DA=DICATTF,DA(1)=DICATTA,DIK="^DD("_DICATTA_",",DIK(1)=.2 D EN1^DIK ;CROSS-REFERENCE THE SPECIFIER!
"RTN","DICATTDE",72,0)
 ;
"RTN","DICATTDE",73,0)
SCREEN S %=$$GET^DDSVALF(65,"DICATT SCREEN",6,"I",""),X=$P(^DD(DICATTA,DICATTF,0),U,2) I %=0!(%="NO")!(X'["P"&(X'["S")) K ^(12),^(12.1)
"RTN","DICATTDE",74,0)
COMPNODS S %=9.2 F  K ^DD(DICATTA,DICATTF,%) S %=$O(^(%)) Q:%\1-9  ;KILL ALL THE 9.2 NODES
"RTN","DICATTDE",75,0)
 F %=8:0 S %=$O(DICATT5N(%)) Q:'%  S ^DD(DICATTA,DICATTF,%)=DICATT5N(%) ;SET THE 9.2 NODES
"RTN","DICATTDE",76,0)
 I $D(DICATT5N)#2 S $P(^(0),U,5,99)=DICATT5N
"RTN","DICATTDE",77,0)
 S DR="50////^S X=DT" F X=1:1:8 D 0
"RTN","DICATTDE",78,0)
 D DIE
"RTN","DICATTDE",79,0)
EGP ;K ^DD(DICATTA,DICATTF,.009) ;WHEN FIELD CHANGES, KILL OFF ITS HELP TRANSLATIONS
"RTN","DICATTDE",80,0)
 S DR="Q",X=98 D 0,DIE
"RTN","DICATTDE",81,0)
 S DR="Q",X=99 D 0,DIE
"RTN","DICATTDE",82,0)
 D FILEWORD^DICATTD0
"RTN","DICATTDE",83,0)
MUMPS I $P(^DD(DICATTA,DICATTF,0),U,2)["K" S ^(9)="@" ;**151
"RTN","DICATTDE",84,0)
AUDIT I $G(DICATT2)]"",$P(^(0),U,2)'=DICATT2,$G(^DD(DICATTB,0,"DIK"))]"" D EN2^DIKZ(DICATTB,"",^("DIK")) ;Recompile CROSS-REFS if auditing changes
"RTN","DICATTDE",85,0)
RESET D GET^DICATTD ;now that we have filed, the NEW is OLD, in case they keep editing!
"RTN","DICATTDE",86,0)
Q Q
"RTN","DICATTDE",87,0)
 ;
"RTN","DICATTDE",88,0)
UP2(A,X) N T,Y ;A=0 if NO LAYGO  X=SPECIFIER
"RTN","DICATTDE",89,0)
 S Y=$P(^(0),U,2),Y=$TR(Y,"SDPV")
"RTN","DICATTDE",90,0)
 F T="S","V","P","D" I X[T S Y=Y_T Q
"RTN","DICATTDE",91,0)
 I A?1N S Y=$TR(Y,"A")_$E("A",DR=0)
"RTN","DICATTDE",92,0)
 S $P(^(0),U,2)=Y
"RTN","DICATTDE",93,0)
 Q
"RTN","DICATTDE",94,0)
 ;
"RTN","DICATTDE",95,0)
0 S T=$T(@X),G=$TR($$G(X),";") Q:G="@"!(G="^")  S:G="" G="@" S DR=DR_$P(T,";",2,3)_"////"_G Q  ;Re-file NAME, TITLE, etc.  Delete if they are now gone.  Leave "@" alone
"RTN","DICATTDE",96,0)
1 ;;.01
"RTN","DICATTDE",97,0)
2 ;;.1
"RTN","DICATTDE",98,0)
3 ;;1.1
"RTN","DICATTDE",99,0)
4 ;;1.2
"RTN","DICATTDE",100,0)
5 ;;8
"RTN","DICATTDE",101,0)
6 ;;8.5
"RTN","DICATTDE",102,0)
7 ;;9
"RTN","DICATTDE",103,0)
8 ;;10
"RTN","DICATTDE",104,0)
98 ;;3
"RTN","DICATTDE",105,0)
99 ;;4
"RTN","DICATTDE",106,0)
 ;
"RTN","DICATTDE",107,0)
DIE S DICATTED=1,DA=DICATTF,DA(1)=DICATTA,(DIC,DIE)="^DD(DICATTA,"
"RTN","DICATTDE",108,0)
 D ^DIE
"RTN","DICATTDE",109,0)
 Q
"RTN","DICATTDE",110,0)
 ;
"RTN","DICATTDE",111,0)
N ;
"RTN","DICATTDE",112,0)
 S DA=DICATTF I $G(DDA(1))]"" S:$G(DICATTA) DDA(1)=DICATTA S:'$D(^DD(DDA(1),DA)) DDA="D" D AUDT^DICATTA
"RTN","DICATTDE",113,0)
 I $D(DIU0) N DI D IJ^DIUTL(DICATTA),P^DICATT
"RTN","DICATTDE",114,0)
 Q
"RTN","DICATTDE",115,0)
 ;
"RTN","DICATTDE",116,0)
G(I) N X Q $$GET^DDSVALF(I,"DICATT",1,"I","")
"RTN","DICATTDM")
0^4^B14787758^B14727373
"RTN","DICATTDM",1,0)
DICATTDM ;SFISC/GFT - SUBSCRIPT AND PIECE-POSITION FOR STORAGE OF SINGLE-VALUED DATA IN SCREENMAN ;23JUN2017
"RTN","DICATTDM",2,0)
 ;;22.2;VA FileMan;**2,13**;Jan 05, 2016;Build 4
"RTN","DICATTDM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTDM",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICATTDM",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICATTDM",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICATTDM",7,0)
 ;;GFT;**42,118,1014,1044**
"RTN","DICATTDM",8,0)
 ;
"RTN","DICATTDM",9,0)
 ;
"RTN","DICATTDM",10,0)
SUBDEF ;EXECUTABLE DEFAULT for FIELD 16 (SUBSCRIPT)
"RTN","DICATTDM",11,0)
 S Y=$O(^DD(DICATTA,"GL",""),-1) ;find the highest subscript now used for storage of this File's data
"RTN","DICATTDM",12,0)
 I $$CHKSUB(Y,1) Q
"RTN","DICATTDM",13,0)
NXT I Y S Y=Y+1 Q  ;get a new subscript
"RTN","DICATTDM",14,0)
 F Y=+$O(^DD(DICATTA,"GL","A"),-1):1 Q:'$D(^(Y))
"RTN","DICATTDM",15,0)
 Q
"RTN","DICATTDM",16,0)
 ;
"RTN","DICATTDM",17,0)
PIECDEF ;
"RTN","DICATTDM",18,0)
 I $E($G(DICATT2N))="K" S Y="E1,245" Q
"RTN","DICATTDM",19,0)
 S Y=$$G(16) I Y]"" S Y=$$P(Y)
"RTN","DICATTDM",20,0)
 Q
"RTN","DICATTDM",21,0)
 ;
"RTN","DICATTDM",22,0)
P(Y) ;given SUBSCRIPT Y, return PIECE prompt
"RTN","DICATTDM",23,0)
 N P,X,%
"RTN","DICATTDM",24,0)
 S X=0,%=1,P=0
"RTN","DICATTDM",25,0)
PC S X=$O(^DD(DICATTA,"GL",Y,X)) I X'="" S P=$P(X,",",2),%=$S(%>P:%,1:P+1) G PC
"RTN","DICATTDM",26,0)
 I P!$$ESTORE^DICATT1($G(DICATT2N)) S %="E"_%_","_($G(DICATTLN)+%-1)
"RTN","DICATTDM",27,0)
 E  S %=$O(^(99999),-1)+1
"RTN","DICATTDM",28,0)
 Q %
"RTN","DICATTDM",29,0)
 ;
"RTN","DICATTDM",30,0)
SUBHELP ;
"RTN","DICATTDM",31,0)
 S Y=$E($G(DICATT2N))="K" D UNED^DDSUTL(17,"DICATTM",3,Y)
"RTN","DICATTDM",32,0)
 N X,Y,T
"RTN","DICATTDM",33,0)
 S X(1)="Enter name of MUMPS Global subscript where this Field's data will be stored."
"RTN","DICATTDM",34,0)
 S X(2)="Already assigned:"
"RTN","DICATTDM",35,0)
 S Y="",T=3
"RTN","DICATTDM",36,0)
 F  S Y=$O(^DD(DICATTA,"GL",Y)) Q:Y=""  S X(T)=$G(X(T))_$J(Y,9) I $L(X(T))>66 S T=T+1
"RTN","DICATTDM",37,0)
 D HLP^DDSUTL(.X)
"RTN","DICATTDM",38,0)
 Q
"RTN","DICATTDM",39,0)
 ;
"RTN","DICATTDM",40,0)
CHKSUB(X,DISHORT) ;used as INPUT TRANSFORM for Fields 16 (SUBSCRIPT) & 76 (MUL SUBSCRIPT)  X is the subscript name.  DISHORT says 'don't go beyond 250'
"RTN","DICATTDM",41,0)
 N M
"RTN","DICATTDM",42,0)
 S M=$$GET^DDSVALF(20.5,"DICATT",1,"","") ;'Is this field Multiple?'
"RTN","DICATTDM",43,0)
 I $D(^DD(DICATTA,"GL",X)),M Q "Another Field is already stored at '"_X_"'"
"RTN","DICATTDM",44,0)
 I $D(^(X,0)) Q "A multiple field is already stored at '"_X_"'"
"RTN","DICATTDM",45,0)
 I $O(^(0)),$$ESTORE^DICATT1($G(DICATT2N)) Q "Can't this kind of data in this subscript"
"RTN","DICATTDM",46,0)
 I '$G(DICATTLN) Q 1 ;if we do not have a current length for the field, we are OK
"RTN","DICATTDM",47,0)
 S M=$S($G(DISHORT):250,1:$G(^DD("STRING_LIMIT"),255)-5) I $$MAX(DICATTLN,X)>M Q "Too much to store at the '"_X_"' subscript"
"RTN","DICATTDM",48,0)
 Q 1
"RTN","DICATTDM",49,0)
 ;
"RTN","DICATTDM",50,0)
MAX(L,Y) ;given L=length of new data, Y=subscript name
"RTN","DICATTDM",51,0)
 N T,A,DP,N,W
"RTN","DICATTDM",52,0)
 S A=DICATTA,DP=DICATTF
"RTN","DICATTDM",53,0)
 D MAX^DICATT1 Q T  ;returns maximum length of subscript's data
"RTN","DICATTDM",54,0)
 ;
"RTN","DICATTDM",55,0)
CHKPIEC(P) ;
"RTN","DICATTDM",56,0)
 N N,S
"RTN","DICATTDM",57,0)
 S S=$$G(16) I S="" Q S  ;must have subscript
"RTN","DICATTDM",58,0)
 I P?1"E"1.N1","1.N S N=$P(P,",",2)-$E(P,2,9)+1 G USED:N'<$G(DICATTLN) Q "Can't be less than "_DICATTLN
"RTN","DICATTDM",59,0)
 I P>0,P<100,P?.N,+P=P N Y D PIECDEF G USED:Y'?1"E".E Q "Must be stored by EXTRACT position"
"RTN","DICATTDM",60,0)
 Q ""
"RTN","DICATTDM",61,0)
USED I $D(^DD(DICATTA,"GL",S,P)) Q "Already used for '"_$P(^DD(DICATTA,$O(^(P,0)),0),U)_"'"
"RTN","DICATTDM",62,0)
 I P["E",$O(^(0)) Q "Can't store by $EXTRACT in the same subscript with $PIECES"
"RTN","DICATTDM",63,0)
 Q 1
"RTN","DICATTDM",64,0)
 ;
"RTN","DICATTDM",65,0)
PIECHELP ;
"RTN","DICATTDM",66,0)
 N X,G,Y,P,T
"RTN","DICATTDM",67,0)
 S G=$$G(16) Q:G=""
"RTN","DICATTDM",68,0)
 S X(1)="Enter a number from 1 to 99",T=" an $EXTRACT range such as ""E1,4""."
"RTN","DICATTDM",69,0)
 I $$ESTORE^DICATT1($G(DICATT2N)) S X(1)="Enter"_T
"RTN","DICATTDM",70,0)
 E  I '$D(^DD(DICATTA,"GL",G)) S X(1)=X(1)_" or "_T Q
"RTN","DICATTDM",71,0)
 S X(1)=X(1)_".",X(2)="Currently assigned: ",Y="",T=2
"RTN","DICATTDM",72,0)
 F  S Y=$O(^DD(DICATTA,"GL",G,Y)) Q:Y=""  S P=$O(^(Y,0)) I $D(^DD(DICATTA,P,0)) S X(T)=$G(X(T))_$J(Y,8) I $L(X(T))>66 S T=T+1
"RTN","DICATTDM",73,0)
 D HLP^DDSUTL(.X)
"RTN","DICATTDM",74,0)
 Q
"RTN","DICATTDM",75,0)
 ;
"RTN","DICATTDM",76,0)
POST ;POST-ACTION of Page 3
"RTN","DICATTDM",77,0)
 N %
"RTN","DICATTDM",78,0)
 S %=$$CHKPIEC($$G(17)) I '% S DDSBR=% K % S %(1)=DDSBR,DDSBR=16 D H(.%)
"RTN","DICATTDM",79,0)
 Q
"RTN","DICATTDM",80,0)
 ;
"RTN","DICATTDM",81,0)
H(%) S %($O(%(""),-1)+1)="$$EOP"
"RTN","DICATTDM",82,0)
 D HLP^DDSUTL(.%)
"RTN","DICATTDM",83,0)
 Q
"RTN","DICATTDM",84,0)
 ;
"RTN","DICATTDM",85,0)
G(I) Q $$GET^DDSVALF(I,"DICATTM",3,"","")
"RTN","DICATTUD")
0^5^B31808223^B30462151
"RTN","DICATTUD",1,0)
DICATTUD ;SFISC/MKO - USER DEFINED DATA TYPES ;24JUN2017
"RTN","DICATTUD",2,0)
 ;;22.2;VA FileMan;**2,5,13**;Jan 05, 2016;Build 4
"RTN","DICATTUD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICATTUD",4,0)
 ;
"RTN","DICATTUD",5,0)
BEGIN D EN(A,DA,N,O) I $G(DTOUT) K DTOUT G CHECK^DICATT ;Come from DICATT (roll-and-scroll mode)
"RTN","DICATTUD",6,0)
 G ^DICATT1
"RTN","DICATTUD",7,0)
 ;
"RTN","DICATTUD",8,0)
 ;
"RTN","DICATTUD",9,0)
 ;
"RTN","DICATTUD",10,0)
SCREENMN ;Come from DICATTD (ScreenMan mode)
"RTN","DICATTUD",11,0)
 N L,M,C,Z,DIZ,DIALLVAL,DIVAL,DTOUT,IOTM,IOBT
"RTN","DICATTUD",12,0)
 D  D CLRMSG^DDS ;Set the scrolling region in the command area
"RTN","DICATTUD",13,0)
 .N X S IOTM=19,IOBM=$G(IOSL,24)-1,X="IOSTBM" D ENDR^%ZISS I $G(IOSTBM)]"" W @IOSTBM
"RTN","DICATTUD",14,0)
 D EN(DICATTA,DICATTF,X,DICATT4]"")
"RTN","DICATTUD",15,0)
 I $G(IOSTBM)]"" S IOTM=1,IOBM=$G(IOSL,24) W @IOSTBM
"RTN","DICATTUD",16,0)
 I $G(DTOUT) QUIT
"RTN","DICATTUD",17,0)
 S DICATT2N=$P(DIZ,U),DICATT3N="" I $$ESTORE^DICATT1(DICATT2N) D UNED^DDSUTL(20.5,"DICATT",1,2) ;don't allow 'MULTIPLE'
"RTN","DICATTUD",18,0)
 S DICATT5N=C,DICATTLN=L
"RTN","DICATTUD",19,0)
 S DICATTMN="" D PUT^DDSVALF(98,"DICATT",1,DICATTMN) ;HERE IS THE HELP-PROMPT, NULLED OUT FOR NOW
"RTN","DICATTUD",20,0)
 QUIT
"RTN","DICATTUD",21,0)
 ;
"RTN","DICATTUD",22,0)
 ;
"RTN","DICATTUD",23,0)
 ;
"RTN","DICATTUD",24,0)
 ;
"RTN","DICATTUD",25,0)
 ;
"RTN","DICATTUD",26,0)
 ;In: N  = data type number
"RTN","DICATTUD",27,0)
 ;    O  = 0 : if new field
"RTN","DICATTUD",28,0)
 ;    A  = file #
"RTN","DICATTUD",29,0)
 ;    DA = field #
"RTN","DICATTUD",30,0)
 ;
"RTN","DICATTUD",31,0)
 ;Out: DICATTPM array (to be merged into ^DD(file#,field#)
"RTN","DICATTUD",32,0)
 ;     e.g., DICATTPM(101,4,0)="4^",  DICATTPM(101,4,31)="DPT("  says that POINTER property is "DPT("
"RTN","DICATTUD",33,0)
 ;     L = Maximum internal length
"RTN","DICATTUD",34,0)
 ;     M = Help text
"RTN","DICATTUD",35,0)
 ;  M(2) = 1 : user changed a default on an old field
"RTN","DICATTUD",36,0)
 ;     C = Old input transform (5-99)
"RTN","DICATTUD",37,0)
 ; DIZ,Z = dataTypeAbbrev_t#, where # is the data type number
"RTN","DICATTUD",38,0)
 ;
"RTN","DICATTUD",39,0)
 ;Variables used:
"RTN","DICATTUD",40,0)
 ; DIVAL = obtained property value
"RTN","DICATTUD",41,0)
 ; DIVALS(abbrev) = array of property values (already obtained)
"RTN","DICATTUD",42,0)
 ; DIVALS("DIDEF") = default property value presented to user
"RTN","DICATTUD",43,0)
 ; DICHANGE = 1 : if user changed a default value (set in PROP)
"RTN","DICATTUD",44,0)
 ;
"RTN","DICATTUD",45,0)
EN(A,DA,N,O) ;
"RTN","DICATTUD",46,0)
 K DICATTPM,M(2),DTOUT
"RTN","DICATTUD",47,0)
 N DIMETH,DIORD,DIPROP,DIVALS,DICHANGE,DDS
"RTN","DICATTUD",48,0)
 M DICATTPM(101)=^DD(A,DA,101),DICATTPM(201)=^DD(A,DA,201) ;GRAB THE EXISTING VALUES OF THE PROPERTIES AND METHODS
"RTN","DICATTUD",49,0)
 ;
"RTN","DICATTUD",50,0)
 ;Loop through properties in Data Type file, by ORDER, and get values
"RTN","DICATTUD",51,0)
 S DIORD=""
"RTN","DICATTUD",52,0)
 F  S DIORD=$O(^DI(.81,N,101,"AC",DIORD)) Q:'DIORD!$D(DUOUT)!$D(DTOUT)  D
"RTN","DICATTUD",53,0)
 .S DIPROP=$O(^DI(.81,N,101,"AC",DIORD,"")) Q:'DIPROP  D PROPMETH("P",N,DIPROP,.DIVALS)
"RTN","DICATTUD",54,0)
 ;If user ^-d or timed out, go back to delete field and reprompt
"RTN","DICATTUD",55,0)
 I $D(DUOUT)!$D(DTOUT) K DUOUT,DICATTPM S DTOUT=1 Q
"RTN","DICATTUD",56,0)
 ;Loop through methods in Data Type file
"RTN","DICATTUD",57,0)
 S DIMETH=0
"RTN","DICATTUD",58,0)
 I DUZ(0)="@" F  S DIMETH=$O(^DI(.81,N,201,DIMETH)) Q:'DIMETH  D:$G(^(DIMETH,31))="" PROPMETH("M",N,DIMETH,.DIVALS)
"RTN","DICATTUD",59,0)
DONE ;
"RTN","DICATTUD",60,0)
 ;Set L and M
"RTN","DICATTUD",61,0)
 K M
"RTN","DICATTUD",62,0)
 S L=$$PROP4TYP^DIETLIBF("INTERNAL LENGTH",N) S:'L L=30 ;$G(DIVALS("MAXL"),30)
"RTN","DICATTUD",63,0)
 ;S:$G(DIVALS("HELP"))]"" M=DIVALS("HELP")
"RTN","DICATTUD",64,0)
 ;I $G(DICHANGE),O S M(2)=1
"RTN","DICATTUD",65,0)
 ;
"RTN","DICATTUD",66,0)
 ;Put input transform in C; don't need to store in ^DD(file#,field#,201)
"RTN","DICATTUD",67,0)
 ;Set Z and DIZ
"RTN","DICATTUD",68,0)
 S C="Q" ;$G(DICAT201(1,1),"Q") K DICAT201(1)
"RTN","DICATTUD",69,0)
 S Z=$$GET1^DIQ(.81,N,"INTERNAL REPRESENTATION") S:Z="" Z="F"
"RTN","DICATTUD",70,0)
 S (DIZ,Z)=Z_"t"_N_U
"RTN","DICATTUD",71,0)
 QUIT
"RTN","DICATTUD",72,0)
 ;
"RTN","DICATTUD",73,0)
 ;
"RTN","DICATTUD",74,0)
 ;
"RTN","DICATTUD",75,0)
PROPMETH(PROPMETH,N,DIPROP,DIVALS) ;For DATA TYPE N, get a PROPERTY (PROPMETH="P") or METHOD
"RTN","DICATTUD",76,0)
 N DIPROMPT,DIVAL,DIEXEC,DIDD,DIGL
"RTN","DICATTUD",77,0)
 K DIVALS("DIDEF")
"RTN","DICATTUD",78,0)
 S DIDD=$S(PROPMETH="M":.87,1:.86),DIGL=$S(PROPMETH="M":201,1:101) ;CHANGED FROM '102'
"RTN","DICATTUD",79,0)
 ;If there's an Executable Default, get value
"RTN","DICATTUD",80,0)
 I $G(^DI(.81,N,DIGL,DIPROP,31.2))'?."^" D
"RTN","DICATTUD",81,0)
 . S DIEXEC=1
"RTN","DICATTUD",82,0)
 . S DIVAL=$G(^DD(A,DA,DIGL,DIPROP,2)) ;DIGL WILL BE 201, NOT 102
"RTN","DICATTUD",83,0)
 . ;I 'O!$G(DICHANGE),^DI(.81,N,101,DIPROP,31.2)["|" S DIVAL=$$PARSE^DIETLIB(^(31.2),.DIVALS)
"RTN","DICATTUD",84,0)
 . S DIVALS("DIDEF")=DIVAL
"RTN","DICATTUD",85,0)
 ;
"RTN","DICATTUD",86,0)
 ;Otherwise, get regular default
"RTN","DICATTUD",87,0)
 E  S (DIVAL,DIVALS("DIDEF"))=$$GETDEF(N,DIPROP,.DIVALS)
"RTN","DICATTUD",88,0)
 ;
"RTN","DICATTUD",89,0)
 ;Should user be prompted for value?
"RTN","DICATTUD",90,0)
 S DIPROMPT=$G(^DI(.81,N,DIGL,DIPROP,31))="" ;PROMPT IF THERE IS NO VALUE
"RTN","DICATTUD",91,0)
 I $G(^DI(.81,N,DIGL,DIPROP,10))'?."^" X $$PARSE^DIETLIB(^(10)) S DIPROMPT=$T
"RTN","DICATTUD",92,0)
 ;
"RTN","DICATTUD",93,0)
 ;If so, prompt for DIVAL
"RTN","DICATTUD",94,0)
 I DIPROMPT D
"RTN","DICATTUD",95,0)
 . ;If there's Get Code, execute it
"RTN","DICATTUD",96,0)
 . I $G(^DI(DIDD,DIPROP,51))'?."^" D
"RTN","DICATTUD",97,0)
 .. D XCODEM^DIETLIB(^DI(DIDD,DIPROP,51),.DIVALS,.DIVAL)
"RTN","DICATTUD",98,0)
 .. S:$D(DIVAL)[0 DUOUT=1
"RTN","DICATTUD",99,0)
 . ;
"RTN","DICATTUD",100,0)
 . ;Otherwise, use ^DIR to get value of property
"RTN","DICATTUD",101,0)
 . E  S DIVAL=$$DIR(DIPROP,.DIVALS)
"RTN","DICATTUD",102,0)
 . Q:$D(DUOUT)!$D(DTOUT)
"RTN","DICATTUD",103,0)
 . S:DIVAL'=DIVALS("DIDEF") DICHANGE=1
"RTN","DICATTUD",104,0)
 ;
"RTN","DICATTUD",105,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","DICATTUD",106,0)
 D SAVE(DIPROP,.DIVAL,.DIVALS,.DIGL,$G(DIEXEC))
"RTN","DICATTUD",107,0)
 Q
"RTN","DICATTUD",108,0)
 ;
"RTN","DICATTUD",109,0)
DIR(DIPROP,DIVALS) ;Do a ^DIR read to get value for property or method
"RTN","DICATTUD",110,0)
 N I,J,X,Y,DIR,DIRUT,DIROUT
"RTN","DICATTUD",111,0)
 ;
"RTN","DICATTUD",112,0)
 ;Get DIR(0) from the PROPERTY or METHOD, (convert |abbr| to values)
"RTN","DICATTUD",113,0)
 S DIR(0)=$$PARSE^DIETLIB($G(^DI(DIDD,DIPROP,42)),.DIVALS)
"RTN","DICATTUD",114,0)
 Q:DIR(0)="" ""
"RTN","DICATTUD",115,0)
A ;Put Prompt into DIR("A")
"RTN","DICATTUD",116,0)
 S I=0
"RTN","DICATTUD",117,0)
 S J=1,DIR("A",1)=$P($G(^DI(DIDD,DIPROP,0)),U)
"RTN","DICATTUD",118,0)
 F  S I=$O(^DI(DIDD,DIPROP,43,I)) Q:'I  D:$D(^(I,0))#2
"RTN","DICATTUD",119,0)
 . S J=J+1
"RTN","DICATTUD",120,0)
 . S DIR("A",J)=^DI(DIDD,DIPROP,43,I,0)
"RTN","DICATTUD",121,0)
 I J S DIR("A")=DIR("A",J) K DIR("A",J)
"RTN","DICATTUD",122,0)
H ;Put Help into DIR("?")
"RTN","DICATTUD",123,0)
 S (I,J)=0
"RTN","DICATTUD",124,0)
 I $G(^DI(DIDD,DIPROP,11))]"" S J=1,DIR("?",1)=^(11)
"RTN","DICATTUD",125,0)
 F  S I=$O(^DI(DIDD,DIPROP,44,I)) Q:'I  D:$D(^(I,0))#2
"RTN","DICATTUD",126,0)
 . S J=J+1
"RTN","DICATTUD",127,0)
 . S DIR("?",J)=^DI(DIDD,DIPROP,44,I,0)
"RTN","DICATTUD",128,0)
 I J S DIR("?")=DIR("?",J) K DIR("?",J)
"RTN","DICATTUD",129,0)
B ;Put default into DIR("B")
"RTN","DICATTUD",130,0)
 S I=$G(DICATTPM(DIGL,DIPROP,31)) ;get the current VALUE
"RTN","DICATTUD",131,0)
 I I="" S I=$G(DIVALS("DIDEF")) ;or get the DEFAULT from node 33 of the PROPERTY for this DATA TYPE
"RTN","DICATTUD",132,0)
 I I]"" D  S DIR("B")=I
"RTN","DICATTUD",133,0)
 .I DIGL=101 D
"RTN","DICATTUD",134,0)
 ..N T S T=+$G(^DI(.86,DIPROP,41)) ;get the TYPE
"RTN","DICATTUD",135,0)
 ..I T=1 S I=$$DATE^DIUTL(I)
"RTN","DICATTUD",136,0)
 ..I T=3 S I=$P($P($P(DIR(0),U,2),I_":",2),";")
"RTN","DICATTUD",137,0)
 ;S:$G(DIVALS("DIDEF"))]"" DIR("B")=DIVALS("DIDEF")
"RTN","DICATTUD",138,0)
 S:$G(^DI(DIDD,DIPROP,45))]"" DIR("S")=^(45)
"RTN","DICATTUD",139,0)
 S:$G(^DI(DIDD,DIPROP,46))]"" DIR("T")=^(46)
"RTN","DICATTUD",140,0)
 D ^DIR
"RTN","DICATTUD",141,0)
 Q Y
"RTN","DICATTUD",142,0)
 ;
"RTN","DICATTUD",143,0)
 ;
"RTN","DICATTUD",144,0)
SAVE(DIPROP,DIVAL,DIVALS,DICAT101,DIEXEC) ;Save the value of the property
"RTN","DICATTUD",145,0)
 ; in DIVALS(abbr) and DICAT101
"RTN","DICATTUD",146,0)
 ;DIVAL is the value of the property
"RTN","DICATTUD",147,0)
 ;DIEXEC = 1 : if value is an executable
"RTN","DICATTUD",148,0)
 ;
"RTN","DICATTUD",149,0)
 ;Returns:
"RTN","DICATTUD",150,0)
 ;  DIVALS(abbr)= array property values
"RTN","DICATTUD",151,0)
 ;  DICATTPM(DIGL,prop#,0)=prop#^abbrev
"RTN","DICATTUD",152,0)
 ;  DICATTPM(DIGL,prop#,31)=value
"RTN","DICATTUD",153,0)
 ;   or         2)=executable value
"RTN","DICATTUD",154,0)
 ;  DICATTPM(DIGL,prop#,3,n,0) = descendent node n of DIVAL
"RTN","DICATTUD",155,0)
 ;
"RTN","DICATTUD",156,0)
 N DIABBR
"RTN","DICATTUD",157,0)
 ;
"RTN","DICATTUD",158,0)
 ;Set the DIVALS array
"RTN","DICATTUD",159,0)
 S DIABBR=$P(^DI(DIDD,DIPROP,0),U,2)
"RTN","DICATTUD",160,0)
 S:DIABBR]"" DIVALS(DIABBR)=DIVAL
"RTN","DICATTUD",161,0)
 ;
"RTN","DICATTUD",162,0)
 ;Set the DICATTPM array
"RTN","DICATTUD",163,0)
 I DIVAL]"" D
"RTN","DICATTUD",164,0)
 .N I,Z S Z=0 F I=1:1 S Z=$O(DICATTPM(DIGL,Z)) Q:'Z
"RTN","DICATTUD",165,0)
 .S DICATTPM(DIGL,0)="^."_DIGL_"01P^"_DIPROP_"^"_I ;remember that DIGL=101 or 201
"RTN","DICATTUD",166,0)
 . S DICATTPM(DIGL,DIPROP,0)=DIPROP_U_DIABBR
"RTN","DICATTUD",167,0)
 . S DICATTPM(DIGL,DIPROP,31+$G(DIEXEC))=DIVAL
"RTN","DICATTUD",168,0)
 . I $D(DIVAL)>9 S I="" F  S I=$O(DIVAL(I)) Q:I=""  D
"RTN","DICATTUD",169,0)
 .. I $D(DIVAL(I))#2 S DICATTPM(DIGL,DIPROP,3,I,0)=DIVAL(I)
"RTN","DICATTUD",170,0)
 .. E  I $D(DIVAL(I,0))#2 S DICATTPM(DIGL,DIPROP,3,I,0)=DIVAL(I,0)
"RTN","DICATTUD",171,0)
 .. E  Q
"RTN","DICATTUD",172,0)
 ;
"RTN","DICATTUD",173,0)
 ;Execute the post action
"RTN","DICATTUD",174,0)
 ;X:$G(^DI(.81,N,101,DIPROP,61))'?."^" $$PARSE^DIETLIB(^(61))
"RTN","DICATTUD",175,0)
 Q
"RTN","DICATTUD",176,0)
 ;
"RTN","DICATTUD",177,0)
 ;
"RTN","DICATTUD",178,0)
GETDEF(N,DIPROP,DIVALS) ;Get defaults for a property.
"RTN","DICATTUD",179,0)
 ;May come from the ^DD or the data type file.
"RTN","DICATTUD",180,0)
 N DIDEF
"RTN","DICATTUD",181,0)
 ;
"RTN","DICATTUD",182,0)
 ;Get value from ^DD
"RTN","DICATTUD",183,0)
 S DIDEF=$S(DIPROP=3:$G(^DD(A,DA,3)),1:$G(^DD(A,DA,101,DIPROP,31)))
"RTN","DICATTUD",184,0)
 ;
"RTN","DICATTUD",185,0)
 ;For existing fields, return default from ^DD(file#,field#)
"RTN","DICATTUD",186,0)
 ;if the user hasn't changed any property values
"RTN","DICATTUD",187,0)
 I O,'$G(DICHANGE) Q DIDEF
"RTN","DICATTUD",188,0)
 ;
"RTN","DICATTUD",189,0)
 ;Otherwise, look at default from Data Type file.
"RTN","DICATTUD",190,0)
 ;For existing fields where default contains no |abbr|,
"RTN","DICATTUD",191,0)
 ;return value from DD.
"RTN","DICATTUD",192,0)
 ;
"RTN","DICATTUD",193,0)
 ;Default
"RTN","DICATTUD",194,0)
 S DIDEF=$G(^DI(.81,N,101,DIPROP,33))
"RTN","DICATTUD",195,0)
 ;Q:$G(^DI(.81,N,101,DIPROP,31))]"" $S(^(31)'["|"&O:DIDEF,1:$$PARSE^DIETLIB(^(31),.DIVALS))
"RTN","DICATTUD",196,0)
 ;
"RTN","DICATTUD",197,0)
 ;Build Default
"RTN","DICATTUD",198,0)
 ;Q:$G(^DI(.81,N,101,DIPROP,31.1))]"" $S(^(31.1)'["|"&O:DIDEF,1:$$XCODE^DIETLIB(^(31.1),.DIVALS)) ;NOT THERE ANY MORE
"RTN","DICATTUD",199,0)
 ;
"RTN","DICATTUD",200,0)
 Q DIDEF
"RTN","DICN")
0^6^B21480119^B21489439
"RTN","DICN",1,0)
DICN ;SFISC/GFT,XAK,TKW,SEA/TOAD - ADD NEW ENTRY ;23JUN2017
"RTN","DICN",2,0)
 ;;22.2;VA FileMan;**2,5,13**;Jan 05, 2016;Build 4
"RTN","DICN",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DICN",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DICN",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DICN",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DICN",7,0)
 ;;GFT;**4,31,169,999,1022,1044**
"RTN","DICN",8,0)
 ;
"RTN","DICN",9,0)
 ;COME HERE FROM L^DICM
"RTN","DICN",10,0)
 N DIENTRY,DIFILE,DIAC D:'$D(DO(2)) GETFA^DIC1(.DIC,.DO) S DO(1)=1
"RTN","DICN",11,0)
 I '$D(DINDEX) N DINDEX S DINDEX("#")=1,DINDEX("START")="B"
"RTN","DICN",12,0)
 N DISUBVAL,V
"RTN","DICN",13,0)
 I DINDEX("#")>1 M V=X N X D  I X="",DIC(0)'["E"!('$D(DISUBVAL)) D BAD^DIC1 Q
"RTN","DICN",14,0)
 . D VALIX(+DO(2),.DINDEX,.V,.DISUBVAL,.X,.DS) K V Q
"RTN","DICN",15,0)
 I $S($D(DLAYGO):DO(2)\1-(DLAYGO\1),1:1) S %=1 D B1 I '% D BAD^DIC1 Q
"RTN","DICN",16,0)
USR D DS S DIX=X
"RTN","DICN",17,0)
 I X'?16.N,X?.NP,X,DIC(0)["E",'$G(DICR),DS'["DINUM",$P(DS,U,2)'["N",DIC(0)["N"!$D(^DD(+DO(2),.001,0)) D N^DICN1 I $D(X) S DIENTRY=X G I
"RTN","DICN",18,0)
 S X=DIX D:DINDEX("#")'>1 VAL G I:$D(X)
"RTN","DICN",19,0)
 S X=DIX
"RTN","DICN",20,0)
B D BAD^DIC1 S Y=-1 Q
"RTN","DICN",21,0)
 ;
"RTN","DICN",22,0)
B1 Q:'DO(2)  Q:$D(^DD(+DO(2),0,"UP"))!(DO(2)=".12P")
"RTN","DICN",23,0)
 S DIFILE=+DO(2),DIAC="LAYGO" D ^DIAC K DIAC,DIFILE
"RTN","DICN",24,0)
 Q
"RTN","DICN",25,0)
 ;
"RTN","DICN",26,0)
1 I '$D(DIC("S")) D  ;CALLED FROM I+2. 'ARE YOU ADDING'? THRU NEXT 4 LINES
"RTN","DICN",27,0)
 .N M
"RTN","DICN",28,0)
 .S M=$$EZBLD^DIALOG(8058,$$OUT^DIALOGU(Y,"ORD")) ;" (the 14th" or whatever
"RTN","DICN",29,0)
 .S:$D(^DD(+DO(2),0,"UP")) M=M_$$EZBLD^DIALOG(8059,$$FILENAME^DIALOGZ(^("UP"))) S M=M_")"
"RTN","DICN",30,0)
 .I $L(M)+$L(DST)'>$S($G(IOM):IOM,1:80) S DST=DST_M
"RTN","DICN",31,0)
Y I $D(DDS) S A1="Q",DST=%_U_DST D H^DDSU Q
"RTN","DICN",32,0)
 W !,DST K DST
"RTN","DICN",33,0)
YN ;
"RTN","DICN",34,0)
 N %1 S %1=$$EZBLD^DIALOG(7001) S:'$D(%) %=0 W "? " W:(%>0) $P(%1,U,%),"// "
"RTN","DICN",35,0)
RX R %Y:$S($D(DTIME):DTIME,1:300) E  S DTOUT=1,%Y=U W $C(7)
"RTN","DICN",36,0)
 I %Y]""!'% S %=+$$PRS^DIALOGU(7001,%Y) S:(%<0&($A(%Y)'=94)) %=0
"RTN","DICN",37,0)
 I '%,%Y'?."?" W $C(7),"??",!?4,$$EZBLD^DIALOG(8040),": " G RX
"RTN","DICN",38,0)
 W:$X>73 ! W:% $S(%>0:"  ("_$P(%1,U,%)_")",1:"") Q
"RTN","DICN",39,0)
 ;
"RTN","DICN",40,0)
DS S DS=^DD(+DO(2),.01,0) Q
"RTN","DICN",41,0)
 ;
"RTN","DICN",42,0)
VAL I X'?.ANP K X Q
"RTN","DICN",43,0)
 I X[""""!(X["^") K X Q
"RTN","DICN",44,0)
 I $P(DS,U,2)'["N",$A(X)=45 K X Q
"RTN","DICN",45,0)
 I $P(DS,U,2)["*" S:DS["DINUM" DINUM=X Q
"RTN","DICN",46,0)
 I $P($P(DS,U,2),"t",2) S %=$$VALEXT^DIETLIBF(+DO(2),.01) D  ;FOR VERSION 23
"RTN","DICN",47,0)
 .N DS,%T,%DT,C,DIG,DIH,DIU,DIV,DICR ;PRESERVE VARIABLES WHILE WE XECUTE INPUT TRANSFORM ON THE .01 FIELD
"RTN","DICN",48,0)
 .X %
"RTN","DICN",49,0)
 E  S %=$F(DS,"%DT=""E"),DS=$E(DS,1,%-2)_$E(DS,%,999) N DICTST S DICTST=DS["+X=X"&(X?16.N) K:DICTST X X:'DICTST $P(DS,U,5,99)
"RTN","DICN",50,0)
UNIQ I $P(DS,U,2)["U",$D(X),$D(@(DIC_"""B"",X)")) K X
"RTN","DICN",51,0)
 Q
"RTN","DICN",52,0)
 ;
"RTN","DICN",53,0)
I1 S DST=$C(7)_$$EZBLD^DIALOG(8060)
"RTN","DICN",54,0)
 I '$D(DIENTRY),Y]"" S DST=DST_$$EZBLD^DIALOG(8061,Y)
"RTN","DICN",55,0)
 S %=$$FILENAME^DIALOGZ(+DO(2)) I $L(DST)+$L(%)'>55 S DST=DST_$$EZBLD^DIALOG(8062,%) Q  ;**CCO/NI FILE NAME
"RTN","DICN",56,0)
 W:'$D(DDS) !,DST K A1 D:$D(DDS) H^DIC2 S DST="    "_$$EZBLD^DIALOG(8062,%) Q
"RTN","DICN",57,0)
 ;
"RTN","DICN",58,0)
I ;COME HERE FROM USR+2, ABOVE
"RTN","DICN",59,0)
 I DIC(0)["E",DO(2)'["A",DIC(0)'["W" K DTOUT,DUOUT D  G OUT^DICN0:$G(DTOUT)!($G(DUOUT)) I %'=1 S Y=-1 D BAD^DIC1 Q
"RTN","DICN",60,0)
 . S (Y,DIX)=X I Y]"" N C S C=$P(^DD(+DO(2),.01,0),U,2) D Y^DIQ ;TRANSFORM INTERNAL TO EXTERNAL IN ORDER TO DISPLAY IT
"RTN","DICN",61,0)
 . D I1 S %=2,Y=$P(DO,U,4)+1,X=DIX D 1
"RTN","DICN",62,0)
I2 . Q:%>0!($G(DTOUT))  I %=-1 S DUOUT=1 Q
"RTN","DICN",63,0)
 . W:'$D(DDS) $C(7)_"??",!?4,$$EZBLD^DIALOG(8040) D YN G I2
"RTN","DICN",64,0)
 G NEW:'$D(DIENTRY)
"RTN","DICN",65,0)
R D DS S DST="   "_$P(DS,U,1)_": "
"RTN","DICN",66,0)
 I '$D(DDS) W !,DST K DST R X:DTIME S:$E(X)=U DUOUT=1,Y=-1 S:'$T X=U,DTOUT=1,Y=-1
"RTN","DICN",67,0)
 I $D(DDS) S A1="Q",DST="3^"_DST D H^DDSU S X=% I $D(DTOUT) S X=U,Y=-1
"RTN","DICN",68,0)
 I X[U D BAD^DIC1 Q
"RTN","DICN",69,0)
 I X="" G R
"RTN","DICN",70,0)
 D VAL
"RTN","DICN",71,0)
HELP I '$D(X) D  G R ;INPUT NOT VALID.  SHOW HELP MESSAGE FOR .01 FIELD, WHEN TELLING USER HOW TO LAYGO A NEW ONE
"RTN","DICN",72,0)
 .W $C(7) W:'$D(DDS) "??" S DST=$$HELP^DIALOGZ(+DO(2),.01) Q:DST=""
"RTN","DICN",73,0)
 .S DST="    "_DST W:'$D(DDS) !,DST D:$D(DDS) H^DDSU
"RTN","DICN",74,0)
 ;
"RTN","DICN",75,0)
NEW ; try to add a new record to the file
"RTN","DICN",76,0)
 G NEW^DICN0
"RTN","DICN",77,0)
 ;
"RTN","DICN",78,0)
FILE ; DOCUMENTED ENTRY POINT: add a new record to a file
"RTN","DICN",79,0)
 ;
"RTN","DICN",80,0)
 N DIENTRY,DS,DIAC,DIFILE D NEW^DICN0,Q^DIC2 Q
"RTN","DICN",81,0)
 ;
"RTN","DICN",82,0)
FIRE ; fire the SET logic of a bulletin or trigger xref (in DZ)
"RTN","DICN",83,0)
 ; STORLIST^%RCR (called by NEW^DICN0)
"RTN","DICN",84,0)
 ;
"RTN","DICN",85,0)
 X DZ
"RTN","DICN",86,0)
 Q
"RTN","DICN",87,0)
 ;
"RTN","DICN",88,0)
VALIX(DIFILEI,DINDEX,V,DISUBVAL,X,DS) ;
"RTN","DICN",89,0)
 ; Save lookup values in array by field no. so we can update the fields on the new record.
"RTN","DICN",90,0)
 N VI,DISUB,DIERR,DIFILE,DIFIELD,DO,DIOK
"RTN","DICN",91,0)
 S X="" I $G(V)]"",$G(V(1))="" S V(1)=V
"RTN","DICN",92,0)
 F DISUB=1:1:DINDEX("#") I $G(V(DISUB))]"" D
"RTN","DICN",93,0)
 . S DIFILE=$G(DINDEX(DISUB,"FILE")),DIFIELD=$G(DINDEX(DISUB,"FIELD"))
"RTN","DICN",94,0)
 . S DIOK=0 I 'DIFILE!('DIFIELD) Q
"RTN","DICN",95,0)
 . S V=V(DISUB)
"RTN","DICN",96,0)
 . I DISUB=1 D  I DIOK S:DIOK'=2 DISUBVAL(DIFILE,DIFIELD)=V Q
"RTN","DICN",97,0)
 . . I $A(V)=34,V?.E1"""" S V=$E(V,2,($L(V))-1)
"RTN","DICN",98,0)
 . . I $G(DS("INT"))="",'$G(DICRS) S:"VP"[$G(DINDEX(1,"TYPE")) DIOK=2 Q
"RTN","DICN",99,0)
 . . S DIOK=1
"RTN","DICN",100,0)
 . . I DIFILE=DIFILEI,DIFIELD=.01 S X=$S($G(DICRS):V,1:DS("INT")) Q
"RTN","DICN",101,0)
 . . S DISUBVAL(DIFILE,DIFIELD,"INT")=$S($G(DICRS):V,1:DS("INT"))
"RTN","DICN",102,0)
 . . Q
"RTN","DICN",103,0)
 . S DISUBVAL(DIFILE,DIFIELD)=V
"RTN","DICN",104,0)
 . D CHK^DIE(DIFILE,DIFIELD,"",V,.VI,"DIERR") Q:VI="^"
"RTN","DICN",105,0)
 . I DIFILE=DIFILEI,DIFIELD=.01 S X=VI K DISUBVAL(DIFILE,.01) Q
"RTN","DICN",106,0)
 . S DISUBVAL(DIFILE,DIFIELD,"INT")=VI
"RTN","DICN",107,0)
 . Q
"RTN","DICN",108,0)
 Q
"RTN","DICN",109,0)
 ;
"RTN","DICN",110,0)
 ;#7001   Yes/No question
"RTN","DICN",111,0)
 ;#8040   Answer with 'Yes' or 'No'
"RTN","DICN",112,0)
 ;#8058   (the |entry number|
"RTN","DICN",113,0)
 ;#8059   for this |filename|
"RTN","DICN",114,0)
 ;#8060   Are you adding
"RTN","DICN",115,0)
 ;#8061   '|.01 field value|' as
"RTN","DICN",116,0)
 ;#8062   a new |filename|
"RTN","DIETLIBF")
0^7^B28699638^B28622394
"RTN","DIETLIBF",1,0)
DIETLIBF ;SFISC/MKO,GFT - LIBRARY FOR FIELD ATTRIBUTES ;23JUN2017
"RTN","DIETLIBF",2,0)
 ;;22.2;VA FileMan;**2,5,13**;Jan 05, 2016;Build 4
"RTN","DIETLIBF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DIETLIBF",4,0)
 ;
"RTN","DIETLIBF",5,0)
 ;The following functions return, for a given file and field,
"RTN","DIETLIBF",6,0)
 ;code to do something, such as validate user input, or validate
"RTN","DIETLIBF",7,0)
 ;the internal form of data. The actual code to perform these
"RTN","DIETLIBF",8,0)
 ;functions may reside under one of several methods, so a list of
"RTN","DIETLIBF",9,0)
 ;methods need to be searched.
"RTN","DIETLIBF",10,0)
 ;
"RTN","DIETLIBF",11,0)
 ;Input to these methods are:
"RTN","DIETLIBF",12,0)
 ;  DDTFILE = File #
"RTN","DIETLIBF",13,0)
 ;  DDTFIELD = Field #
"RTN","DIETLIBF",14,0)
 ;
"RTN","DIETLIBF",15,0)
 ;Returned is:
"RTN","DIETLIBF",16,0)
 ;  Code for method or null
"RTN","DIETLIBF",17,0)
 ;
"RTN","DIETLIBF",18,0)
VALEXT(DDTFILE,DDTFIELD) ;Return code to validate and transform user input  --PERHAPS INTERACTIVELY
"RTN","DIETLIBF",19,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$VALEXTL)
"RTN","DIETLIBF",20,0)
 ;
"RTN","DIETLIBF",21,0)
VALEXTS(DDTFILE,DDTFIELD) ;Return code to SILENTLY validate and transform user input
"RTN","DIETLIBF",22,0)
 ;Non-interactive
"RTN","DIETLIBF",23,0)
 N D,%
"RTN","DIETLIBF",24,0)
 S %=$$GETMETH(.DDTFILE,.DDTFIELD,$$VALEXTSL) I %["+X" S %="K:X?16.N.E X I $D(X) "_% ;DON'T TRY TO "+" A HUGE NUMBER
"RTN","DIETLIBF",25,0)
 S D=$F(%,"%DT=""E") I D>0 S %=$E(%,1,D-2)_$E(%,D,9999)
"RTN","DIETLIBF",26,0)
 Q "N %T,%DT,C,DIG,DIH,DIU,DIV,DICR,DIQUIET S DIQUIET=1 "_% ;PRESERVE VARIABLES 
"RTN","DIETLIBF",27,0)
 ;
"RTN","DIETLIBF",28,0)
VALINT(DDTFILE,DDTFIELD) ;Return code to validate internal form
"RTN","DIETLIBF",29,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$VALINTL)
"RTN","DIETLIBF",30,0)
 ;
"RTN","DIETLIBF",31,0)
XHELP(DDTFILE,DDTFIELD) ;Return the executable help of a field
"RTN","DIETLIBF",32,0)
 D DIPA(DDTFILE,DDTFIELD) ;I $D(^DI(.81,+$P($P(^DD(DDTFILE,DDTFIELD,0),U,2),"t",2),101,4,0)) S DIPA("POINTER")=$$GETPROP(DDTFILE,DDTFIELD,"POINTER")
"RTN","DIETLIBF",33,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$XHELPL)
"RTN","DIETLIBF",34,0)
 ;
"RTN","DIETLIBF",35,0)
OUTPUT(DDTFILE,DDTFIELD) ;Return the executable code to output a field's value.  No arguments means ^DD(DDTFILE,DDTFIELD,0) is already in naked ref
"RTN","DIETLIBF",36,0)
 Q $$GETMETH(.DDTFILE,.DDTFIELD,$$OUTPUTL)
"RTN","DIETLIBF",37,0)
 ;
"RTN","DIETLIBF",38,0)
 ;
"RTN","DIETLIBF",39,0)
 ;
"RTN","DIETLIBF",40,0)
DIPA(DDTFILE,DDTFIELD) ;CREATE DIPA NODES FROM PROPERTIES IN THE FIELD
"RTN","DIETLIBF",41,0)
 N T,P,V,N
"RTN","DIETLIBF",42,0)
 S T=+$P($P(^DD(DDTFILE,DDTFIELD,0),U,2),"t",2) Q:'T  ;ONLY HAPPENS FOR EXTENDED DATA TYPES
"RTN","DIETLIBF",43,0)
 F P=0:0 S P=$O(^DD(DDTFILE,DDTFIELD,101,P)) Q:'P  S V=$G(^(P,31)) I V]"" S N=$P($G(^DI(.86,P,0)),U) I N]"" S DIPA(N)=V ;E.G., DIPA("POINTER")="DIC(5,"
"RTN","DIETLIBF",44,0)
 F P=0:0 S P=$O(^DD(DDTFILE,DDTFIELD,201,P)) Q:'P  S V=$G(^(P,31)) I V]"" S N=$P($G(^DI(.87,P,0)),U) I N]"" S DIPA(N)=V ;E.G., DIPA("CODE TO SET POINTER SCREEN")="I 1"
"RTN","DIETLIBF",45,0)
 Q
"RTN","DIETLIBF",46,0)
 ;
"RTN","DIETLIBF",47,0)
 ;****************************************************************
"RTN","DIETLIBF",48,0)
 ;The following functions return a string of methods to search
"RTN","DIETLIBF",49,0)
 ;
"RTN","DIETLIBF",50,0)
VALEXTL() Q "INTERACTIVE VALIDATE AND INPUT TRANSFORM;VALIDATE AND TRANSFORM INPUT;INPUT TRANSFORM"
"RTN","DIETLIBF",51,0)
VALEXTSL() Q "VALIDATE AND TRANSFORM INPUT;INPUT TRANSFORM"
"RTN","DIETLIBF",52,0)
VALINTL() Q "VALIDATE INTERNAL FORM;INPUT TRANSFORM"
"RTN","DIETLIBF",53,0)
XHELPL() Q "INTERACTIVE EXECUTABLE HELP;XECUTABLE HELP"
"RTN","DIETLIBF",54,0)
OUTPUTL() Q "OUTPUT TRANSFORM"
"RTN","DIETLIBF",55,0)
 ;
"RTN","DIETLIBF",56,0)
 ;****************************************************************
"RTN","DIETLIBF",57,0)
 ;
"RTN","DIETLIBF",58,0)
GETMETH(DDTFILE,DDTFIELD,DDTMETL) ;Look for methods in the ;-delimited string
"RTN","DIETLIBF",59,0)
 ;of method numbers.
"RTN","DIETLIBF",60,0)
 ;Return the code for the first non-null method found.
"RTN","DIETLIBF",61,0)
 ;In:
"RTN","DIETLIBF",62,0)
 ;  DDTFILE  = file #
"RTN","DIETLIBF",63,0)
 ;  DDTFIELD = field #
"RTN","DIETLIBF",64,0)
 ;  DDTMETL  =  ;-delimited list of methods to search for
"RTN","DIETLIBF",65,0)
 ;
"RTN","DIETLIBF",66,0)
 N REF,DDTCOD,DDTMET,DDTP,DDTPC,I
"RTN","DIETLIBF",67,0)
 Q:" "[$G(DDTMETL) ""
"RTN","DIETLIBF",68,0)
 ; The use of the naked reference is needed here, regardless of its obscurity. MSC/DKA 2016-03-04
"RTN","DIETLIBF",69,0)
 I '$G(DDTFILE)!'$G(DDTFIELD) S REF=$NA(^(0)) ;^DD(DDTFILE,DDTFIELD,0) is already in naked ref  -- MAYBE!     LET'S NOT USE THIS 'NAKED' TRICK
"RTN","DIETLIBF",70,0)
 E  S REF=$NA(^DD(DDTFILE,DDTFIELD,0))
"RTN","DIETLIBF",71,0)
 Q:REF'?1"^DD(".E ""
"RTN","DIETLIBF",72,0)
 F DDTPC=1:1:$L(DDTMETL,";") S DDTMET=$P(DDTMETL,";",DDTPC) D:DDTMET]""  Q:$G(DDTCOD)]""
"RTN","DIETLIBF",73,0)
 . S I=+$P($P($G(@REF),U,2),"t",2)
"RTN","DIETLIBF",74,0)
 . S DDTP=$O(^DI(.87,"B",DDTMET,""),-1) I DDTP,$P($G(^DI(.81,I,201,DDTP,31)),";")'?."^" S DDTCOD=^(31) ;Q  ;FIRST TRY TO GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",75,0)
 . I DDTMET="INPUT TRANSFORM" D  Q:$D(DDTCOD)
"RTN","DIETLIBF",76,0)
 ..D DIPA(DDTFILE,DDTFIELD) ;SET UP THE PARAMETERS
"RTN","DIETLIBF",77,0)
 ..S DDTP=$$PROP4TYP("SET OF CODES",I) I DDTP]"" S DDTCOD="D READSET^DIED(.X,"""_DDTP_""")" Q  ;M CODE: D READSET^DIED(.X,$$PROP4TYP^DIETLIBF("SET OF CODES",11)
"RTN","DIETLIBF",78,0)
 ..I "Q"'[$P($G(@REF),U,5,999) S DDTCOD=$P(^(0),U,5,999) ;from regular field, get the old input transform
"RTN","DIETLIBF",79,0)
 . I DDTMET="OUTPUT TRANSFORM",$G(@REF)]"",$G(^(2))'?."^" S DDTCOD=^(2) Q
"RTN","DIETLIBF",80,0)
 . I DDTMET="XECUTABLE HELP",$G(@REF)]"",$G(^(4))'?."^" S DDTCOD=^(4) Q
"RTN","DIETLIBF",81,0)
 Q $G(DDTCOD)
"RTN","DIETLIBF",82,0)
 ;
"RTN","DIETLIBF",83,0)
 ;
"RTN","DIETLIBF",84,0)
%DT(PARAM) ;CREATE CODE TO SET THE %DT VARIABLE FROM PARAMETERS, INCLUDING 'PARAM', WHICH MAY BE "E"
"RTN","DIETLIBF",85,0)
 N EARLY
"RTN","DIETLIBF",86,0)
 S EARLY="",PARAM=$TR(PARAM,"""")
"RTN","DIETLIBF",87,0)
 I $G(DIPA("EARLIEST DATE")) S EARLY=",%DT(0)="_DIPA("EARLIEST DATE")
"RTN","DIETLIBF",88,0)
 I $G(DIPA("TIME REQUIRED")) S PARAM=PARAM_"R"
"RTN","DIETLIBF",89,0)
 I $G(DIPA("SECONDS ALLOWED")) S PARAM=PARAM_"S"
"RTN","DIETLIBF",90,0)
 I $G(DIPA("TIME OF DAY")) S PARAM=PARAM_"T"
"RTN","DIETLIBF",91,0)
 I '$G(DIPA("IMPRECISE DATE")) S PARAM=PARAM_"X"
"RTN","DIETLIBF",92,0)
 Q "SET %DT="""_PARAM_""""_EARLY
"RTN","DIETLIBF",93,0)
 ;
"RTN","DIETLIBF",94,0)
DIC ;SET THE DIC VARIABLE FROM PARAMETERS
"RTN","DIETLIBF",95,0)
 I $G(DIPA("POINTER"))'["(" S Y=-1 Q
"RTN","DIETLIBF",96,0)
 N DIS,DIC,DIFILE,DIBTDH ;DIFILE SHOULD REALLY BE NEWED BY ^DIC ITSELF
"RTN","DIETLIBF",97,0)
 X $G(DIPA("CODE TO SET POINTER SCREEN")) ;S DIC("S")
"RTN","DIETLIBF",98,0)
 S DIC="^"_DIPA("POINTER"),DIC(0)="M"_$E("L",$G(DIPA("LAYGO"))) I '$D(DIQUIET) S DIC(0)=DIC(0)_"EQ"
"RTN","DIETLIBF",99,0)
 D ^DIC
"RTN","DIETLIBF",100,0)
 Q
"RTN","DIETLIBF",101,0)
 ;
"RTN","DIETLIBF",102,0)
 ;
"RTN","DIETLIBF",103,0)
GETPROP(DDTFILE,DDTFIELD,DDTPROL) ;Look for PROPERTIES in the ;-delimited string
"RTN","DIETLIBF",104,0)
 ;Return the string for the first non-null property found.
"RTN","DIETLIBF",105,0)
 ;In:
"RTN","DIETLIBF",106,0)
 ;  DDTFILE  = file #
"RTN","DIETLIBF",107,0)
 ;  DDTFIELD = field #
"RTN","DIETLIBF",108,0)
 ;  DDTPROL  =  ;-delimited list of properties to search for
"RTN","DIETLIBF",109,0)
 ;
"RTN","DIETLIBF",110,0)
 N REF
"RTN","DIETLIBF",111,0)
 Q:" "[$G(DDTPROL) ""
"RTN","DIETLIBF",112,0)
 I '$G(DDTFILE)!'$G(DDTFIELD) S REF=$NA(^(0))  ;^DD(DDTFILE,DDTFIELD,0) is already in naked ref
"RTN","DIETLIBF",113,0)
 E  S REF=$NA(^DD(DDTFILE,DDTFIELD,0))
"RTN","DIETLIBF",114,0)
 Q:REF'?1"^DD(".E ""
"RTN","DIETLIBF",115,0)
 N DDTCOD,DDTP,DDTPC,I,DIP
"RTN","DIETLIBF",116,0)
 S I=+$P($P($G(@REF),U,2),"t",2)
"RTN","DIETLIBF",117,0)
 F DDTPC=1:1:$L(DDTPROL,";") S DDTP=$P(DDTPROL,";",DDTPC) I DDTP]"" D  Q:$G(DDTCOD)]""
"RTN","DIETLIBF",118,0)
 .I $D(@REF),$O(^(101,0)) S DIP=$O(^DI(.86,"B",DDTP,""),-1) I DIP,$D(@REF),$G(^(101,DIP,31))]"" S DDTCOD=^(31) Q  ;GET PROPERTY FROM THE FIELD ITSELF
"RTN","DIETLIBF",119,0)
 .S DDTCOD=$$PROP4TYP(DDTP,I)
"RTN","DIETLIBF",120,0)
 Q $G(DDTCOD)
"RTN","DIETLIBF",121,0)
 ;
"RTN","DIETLIBF",122,0)
PROP4TYP(T,I) ;FOR PROPERTY 'T' IN DATA TYPE 'I', RETURN THE VALUE
"RTN","DIETLIBF",123,0)
 S T=$O(^DI(.86,"B",T,""),-1) I T,$G(^DI(.81,I,101,T,31))'?."^" Q ^(31) ;GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",124,0)
 Q ""
"RTN","DIETLIBF",125,0)
 ;
"RTN","DIETLIBF",126,0)
 ;
"RTN","DIETLIBF",127,0)
METH4TYP(T,I) ;FOR METHOD 'T' IN DATA TYPE 'I', RETURN THE VALUE
"RTN","DIETLIBF",128,0)
 S T=$O(^DI(.87,"B",T,""),-1) I T,$G(^DI(.81,I,201,T,31))'?."^" Q ^(31) ;GET IT FROM THE DEFINITION IN .81
"RTN","DIETLIBF",129,0)
 Q ""
"VER")
8.0^22.2
"BLD",9895,6)
^8
**END**
**END**

