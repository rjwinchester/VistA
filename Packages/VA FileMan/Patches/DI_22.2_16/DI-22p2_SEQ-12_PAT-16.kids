Released DI*22.2*16 SEQ #12
Extracted from mail message
**KIDS**:DI*22.2*16^

**INSTALL NAME**
DI*22.2*16
"BLD",9475,0)
DI*22.2*16^VA FILEMAN^0^3190626^y
"BLD",9475,4,0)
^9.64PA^1.5^1
"BLD",9475,4,1.5,0)
1.5
"BLD",9475,4,1.5,2,0)
^9.641^1.51^2
"BLD",9475,4,1.5,2,1.5,0)
ENTITY  (File-top level)
"BLD",9475,4,1.5,2,1.5,1,0)
^9.6411^18^14
"BLD",9475,4,1.5,2,1.5,1,2,0)
GET ENTRY ACTION
"BLD",9475,4,1.5,2,1.5,1,3,0)
GET EXIT ACTION
"BLD",9475,4,1.5,2,1.5,1,4,0)
GET ID ACTION
"BLD",9475,4,1.5,2,1.5,1,6,0)
PUT ENTRY ACTION
"BLD",9475,4,1.5,2,1.5,1,7,0)
PUT EXIT ACTION
"BLD",9475,4,1.5,2,1.5,1,8,0)
PUT ID ACTION
"BLD",9475,4,1.5,2,1.5,1,10,0)
PUT CREATE ACTION
"BLD",9475,4,1.5,2,1.5,1,11,0)
DELETE ENTRY ACTION
"BLD",9475,4,1.5,2,1.5,1,12,0)
DELETE EXIT ACTION
"BLD",9475,4,1.5,2,1.5,1,13,0)
DELETE ID ACTION
"BLD",9475,4,1.5,2,1.5,1,14,0)
POST ENTRY ACTION
"BLD",9475,4,1.5,2,1.5,1,15,0)
POST EXIT ACTION
"BLD",9475,4,1.5,2,1.5,1,16,0)
POST ID ACTION
"BLD",9475,4,1.5,2,1.5,1,18,0)
POST CREATE ACTION
"BLD",9475,4,1.5,2,1.51,0)
ITEM  (sub-file)
"BLD",9475,4,1.5,2,1.51,1,0)
^9.6411^8^3
"BLD",9475,4,1.5,2,1.51,1,6,0)
GET ACTION
"BLD",9475,4,1.5,2,1.51,1,7,0)
PUT ACTION
"BLD",9475,4,1.5,2,1.51,1,8,0)
POST ACTION
"BLD",9475,4,1.5,222)
y^n^p^^^^n^^n
"BLD",9475,4,1.5,224)

"BLD",9475,4,"APDD",1.5,1.5)

"BLD",9475,4,"APDD",1.5,1.5,2)

"BLD",9475,4,"APDD",1.5,1.5,3)

"BLD",9475,4,"APDD",1.5,1.5,4)

"BLD",9475,4,"APDD",1.5,1.5,6)

"BLD",9475,4,"APDD",1.5,1.5,7)

"BLD",9475,4,"APDD",1.5,1.5,8)

"BLD",9475,4,"APDD",1.5,1.5,10)

"BLD",9475,4,"APDD",1.5,1.5,11)

"BLD",9475,4,"APDD",1.5,1.5,12)

"BLD",9475,4,"APDD",1.5,1.5,13)

"BLD",9475,4,"APDD",1.5,1.5,14)

"BLD",9475,4,"APDD",1.5,1.5,15)

"BLD",9475,4,"APDD",1.5,1.5,16)

"BLD",9475,4,"APDD",1.5,1.5,18)

"BLD",9475,4,"APDD",1.5,1.51)

"BLD",9475,4,"APDD",1.5,1.51,6)

"BLD",9475,4,"APDD",1.5,1.51,7)

"BLD",9475,4,"APDD",1.5,1.51,8)

"BLD",9475,4,"B",1.5,1.5)

"BLD",9475,6.3)
10
"BLD",9475,"KRN",0)
^9.67PA^1.5^24
"BLD",9475,"KRN",.4,0)
.4
"BLD",9475,"KRN",.401,0)
.401
"BLD",9475,"KRN",.402,0)
.402
"BLD",9475,"KRN",.403,0)
.403
"BLD",9475,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",9475,"KRN",.403,"NM",1,0)
DDE ENTITY ENTER/EDIT    FILE #1.5^1.5^0
"BLD",9475,"KRN",.403,"NM","B","DDE ENTITY ENTER/EDIT    FILE #1.5",1)

"BLD",9475,"KRN",.5,0)
.5
"BLD",9475,"KRN",.84,0)
.84
"BLD",9475,"KRN",1.5,0)
1.5
"BLD",9475,"KRN",1.6,0)
1.6
"BLD",9475,"KRN",1.61,0)
1.61
"BLD",9475,"KRN",1.62,0)
1.62
"BLD",9475,"KRN",3.6,0)
3.6
"BLD",9475,"KRN",3.8,0)
3.8
"BLD",9475,"KRN",9.2,0)
9.2
"BLD",9475,"KRN",9.8,0)
9.8
"BLD",9475,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9475,"KRN",9.8,"NM",1,0)
DDEG^^0^B128480515
"BLD",9475,"KRN",9.8,"NM",2,0)
DDEOPT^^0^B885922
"BLD",9475,"KRN",9.8,"NM",3,0)
DDEPRT^^0^B48500922
"BLD",9475,"KRN",9.8,"NM","B","DDEG",1)

"BLD",9475,"KRN",9.8,"NM","B","DDEOPT",2)

"BLD",9475,"KRN",9.8,"NM","B","DDEPRT",3)

"BLD",9475,"KRN",19,0)
19
"BLD",9475,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",9475,"KRN",19,"NM",1,0)
DDE ENTITY INQUIRE^^0
"BLD",9475,"KRN",19,"NM",2,0)
DDE ENTITY MAPPING^^2
"BLD",9475,"KRN",19,"NM",3,0)
DDE AUTO GEN ENTITY FOR A DD #^^0
"BLD",9475,"KRN",19,"NM","B","DDE AUTO GEN ENTITY FOR A DD #",3)

"BLD",9475,"KRN",19,"NM","B","DDE ENTITY INQUIRE",1)

"BLD",9475,"KRN",19,"NM","B","DDE ENTITY MAPPING",2)

"BLD",9475,"KRN",19.1,0)
19.1
"BLD",9475,"KRN",101,0)
101
"BLD",9475,"KRN",409.61,0)
409.61
"BLD",9475,"KRN",771,0)
771
"BLD",9475,"KRN",779.2,0)
779.2
"BLD",9475,"KRN",870,0)
870
"BLD",9475,"KRN",8989.51,0)
8989.51
"BLD",9475,"KRN",8989.52,0)
8989.52
"BLD",9475,"KRN",8994,0)
8994
"BLD",9475,"KRN","B",.4,.4)

"BLD",9475,"KRN","B",.401,.401)

"BLD",9475,"KRN","B",.402,.402)

"BLD",9475,"KRN","B",.403,.403)

"BLD",9475,"KRN","B",.5,.5)

"BLD",9475,"KRN","B",.84,.84)

"BLD",9475,"KRN","B",1.5,1.5)

"BLD",9475,"KRN","B",1.6,1.6)

"BLD",9475,"KRN","B",1.61,1.61)

"BLD",9475,"KRN","B",1.62,1.62)

"BLD",9475,"KRN","B",3.6,3.6)

"BLD",9475,"KRN","B",3.8,3.8)

"BLD",9475,"KRN","B",9.2,9.2)

"BLD",9475,"KRN","B",9.8,9.8)

"BLD",9475,"KRN","B",19,19)

"BLD",9475,"KRN","B",19.1,19.1)

"BLD",9475,"KRN","B",101,101)

"BLD",9475,"KRN","B",409.61,409.61)

"BLD",9475,"KRN","B",771,771)

"BLD",9475,"KRN","B",779.2,779.2)

"BLD",9475,"KRN","B",870,870)

"BLD",9475,"KRN","B",8989.51,8989.51)

"BLD",9475,"KRN","B",8989.52,8989.52)

"BLD",9475,"KRN","B",8994,8994)

"BLD",9475,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9475,"QUES",0)
^9.62^^
"BLD",9475,"REQB",0)
^9.611^1^1
"BLD",9475,"REQB",1,0)
DI*22.2*9^1
"BLD",9475,"REQB","B","DI*22.2*9",1)

"FIA",1.5)
ENTITY
"FIA",1.5,0)
^DDE(
"FIA",1.5,0,0)
1.5I
"FIA",1.5,0,1)
y^n^p^^^^n^^n
"FIA",1.5,0,10)

"FIA",1.5,0,11)

"FIA",1.5,0,"RLRO")

"FIA",1.5,0,"VR")
22.2^DI
"FIA",1.5,1.5)
1
"FIA",1.5,1.5,2)

"FIA",1.5,1.5,3)

"FIA",1.5,1.5,4)

"FIA",1.5,1.5,6)

"FIA",1.5,1.5,7)

"FIA",1.5,1.5,8)

"FIA",1.5,1.5,10)

"FIA",1.5,1.5,11)

"FIA",1.5,1.5,12)

"FIA",1.5,1.5,13)

"FIA",1.5,1.5,14)

"FIA",1.5,1.5,15)

"FIA",1.5,1.5,16)

"FIA",1.5,1.5,18)

"FIA",1.5,1.51)
1
"FIA",1.5,1.51,6)

"FIA",1.5,1.51,7)

"FIA",1.5,1.51,8)

"KRN",.403,144,-1)
0^1
"KRN",.403,144,0)
DDE ENTITY ENTER/EDIT^@^@^^3180306.1434^^^1.5^0^0^1
"KRN",.403,144,11)
S DDEFILE=$P($G(^DDE(DA,0)),U,2)
"KRN",.403,144,12)
K DDEFILE
"KRN",.403,144,40,0)
^.4031I^12^12
"KRN",.403,144,40,1,0)
1^^1,1^2^3
"KRN",.403,144,40,1,1)
Page 1
"KRN",.403,144,40,1,40,0)
^.4032IP^541^2
"KRN",.403,144,40,1,40,540,0)
DDE ENTITY HEADER^1^1,1^d
"KRN",.403,144,40,1,40,541,0)
DDE ENTITY 1^2^1,1^e
"KRN",.403,144,40,2,0)
2^^1,1^3^1
"KRN",.403,144,40,2,1)
Page 2
"KRN",.403,144,40,2,40,0)
^.4032IP^543^3
"KRN",.403,144,40,2,40,540,0)
DDE ENTITY HEADER^1^1,1^d
"KRN",.403,144,40,2,40,542,0)
DDE ITEMS^3^6,1^e
"KRN",.403,144,40,2,40,542,2)
12^B^f
"KRN",.403,144,40,2,40,543,0)
DDE ENTITY 2^2^1,1^d
"KRN",.403,144,40,3,0)
3^^1,1^1^2
"KRN",.403,144,40,3,1)
Page 3
"KRN",.403,144,40,3,40,0)
^.4032IP^544^2
"KRN",.403,144,40,3,40,540,0)
DDE ENTITY HEADER^1^1,1^d
"KRN",.403,144,40,3,40,544,0)
DDE ENTITY 3^2^1,1^e
"KRN",.403,144,40,4,0)
2.1^^6,1^^^1^17,79
"KRN",.403,144,40,4,1)
Page 2.1
"KRN",.403,144,40,4,40,0)
^.4032IP^546^1
"KRN",.403,144,40,4,40,546,0)
DDE ITEM FIXED^1^2,2^e
"KRN",.403,144,40,5,0)
2.2^^6,1^^^1^17,79
"KRN",.403,144,40,5,1)
Page 2.2
"KRN",.403,144,40,5,40,0)
^.4032IP^547^1
"KRN",.403,144,40,5,40,547,0)
DDE ITEM ID^1^2,2^e
"KRN",.403,144,40,6,0)
2.3^^6,1^^^1^17,79
"KRN",.403,144,40,6,1)
Page 2.3
"KRN",.403,144,40,6,40,0)
^.4032IP^548^1
"KRN",.403,144,40,6,40,548,0)
DDE ITEM SIMPLE^1^2,2^e
"KRN",.403,144,40,7,0)
2.4^^6,1^^^1^15,79
"KRN",.403,144,40,7,1)
Page 2.4
"KRN",.403,144,40,7,40,0)
^.4032IP^549^1
"KRN",.403,144,40,7,40,549,0)
DDE ITEM WORD PROC^1^2,2^e
"KRN",.403,144,40,8,0)
2.5^^6,1^^^1^17,79
"KRN",.403,144,40,8,1)
Page 2.5
"KRN",.403,144,40,8,40,0)
^.4032IP^553^2
"KRN",.403,144,40,8,40,550,0)
DDE ITEM COMPLEX^1^2,2^e
"KRN",.403,144,40,8,40,553,0)
DDE COMPLEX LIST^2^6,2^e
"KRN",.403,144,40,8,40,553,2)
6^B^f
"KRN",.403,144,40,8,40,553,"COMP MUL")

"KRN",.403,144,40,8,40,553,"COMP MUL PTR")

"KRN",.403,144,40,9,0)
2.6^^6,1^^^1^17,79
"KRN",.403,144,40,9,1)
Page 2.6
"KRN",.403,144,40,9,40,0)
^.4032IP^551^1
"KRN",.403,144,40,9,40,551,0)
DDE ITEM ENTITY^1^2,2^e
"KRN",.403,144,40,10,0)
2.7^^6,1^^^1^17,79
"KRN",.403,144,40,10,1)
Page 2.7
"KRN",.403,144,40,10,40,0)
^.4032IP^552^1
"KRN",.403,144,40,10,40,552,0)
DDE ITEM LIST^1^2,2^e
"KRN",.403,144,40,11,0)
2.8^^7,2^^^1^16,77
"KRN",.403,144,40,11,1)
Page 2.8
"KRN",.403,144,40,11,40,0)
^.4032IP^554^1
"KRN",.403,144,40,11,40,554,0)
DDE LIST FILE^1^2,2^e
"KRN",.403,144,40,12,0)
2.9^^7,2^^^1^16,77
"KRN",.403,144,40,12,1)
Page 2.9
"KRN",.403,144,40,12,12)

"KRN",.403,144,40,12,40,0)
^.4032IP^557^2
"KRN",.403,144,40,12,40,555,0)
DDE LIST COMPLEX^1^2,2^e
"KRN",.403,144,40,12,40,557,0)
DDE LIST COMPLEX ITEMS^2^5,2^e
"KRN",.403,144,40,12,40,557,2)
5^B^f
"KRN",.403,144,40,12,40,557,"COMP MUL")

"KRN",.403,144,40,12,40,557,"COMP MUL PTR")

"KRN",.404,540,0)
DDE ENTITY HEADER^1.5^
"KRN",.404,540,40,0)
^.4044I^4^4
"KRN",.404,540,40,1,0)
1^Edit Entity^1
"KRN",.404,540,40,1,2)
^^1,35
"KRN",.404,540,40,2,0)
2^NAME^3
"KRN",.404,540,40,2,1)
.01
"KRN",.404,540,40,2,2)
2,7^30^2,1
"KRN",.404,540,40,2,4)
1^^^1
"KRN",.404,540,40,3,0)
3^Page   of 3^1
"KRN",.404,540,40,3,2)
^^2,69
"KRN",.404,540,40,4,0)
4^!M^1
"KRN",.404,540,40,4,.1)
S $P(Y,"-",80)=""
"KRN",.404,540,40,4,2)
^^3,1
"KRN",.404,541,0)
DDE ENTITY 1^1.5
"KRN",.404,541,40,0)
^.4044I^11^11
"KRN",.404,541,40,1,0)
1^1^1
"KRN",.404,541,40,1,2)
^^2,74
"KRN",.404,541,40,2,0)
2^NAME^3
"KRN",.404,541,40,2,1)
.01
"KRN",.404,541,40,2,2)
5,16^30^5,10
"KRN",.404,541,40,3,0)
3^ DISPLAY NAME^3
"KRN",.404,541,40,3,1)
.1
"KRN",.404,541,40,3,2)
6,16^65^6,1
"KRN",.404,541,40,4,0)
4^DEFAULT FILE^3
"KRN",.404,541,40,4,1)
.02
"KRN",.404,541,40,4,2)
8,16^21^8,2
"KRN",.404,541,40,4,12)
S DDEFILE=X
"KRN",.404,541,40,5,0)
5^SORT BY^3
"KRN",.404,541,40,5,1)
.03
"KRN",.404,541,40,5,2)
10,16^15^10,7
"KRN",.404,541,40,6,0)
6^FILTER BY^3
"KRN",.404,541,40,6,1)
.04
"KRN",.404,541,40,6,2)
11,16^8^11,5
"KRN",.404,541,40,7,0)
8^DATA MODEL^3
"KRN",.404,541,40,7,1)
.06
"KRN",.404,541,40,7,2)
10,58^4^10,46
"KRN",.404,541,40,8,0)
9^READ ONLY^3
"KRN",.404,541,40,8,1)
.05
"KRN",.404,541,40,8,2)
11,58^8^11,47
"KRN",.404,541,40,9,0)
7^ SCREEN^3
"KRN",.404,541,40,9,1)
5.1
"KRN",.404,541,40,9,2)
12,16^65^12,7
"KRN",.404,541,40,10,0)
10^QUERY ROUTINE^3
"KRN",.404,541,40,10,1)
5
"KRN",.404,541,40,10,2)
14,16^55^14,1
"KRN",.404,541,40,11,0)
11^DESCRIPTION^3
"KRN",.404,541,40,11,1)
19
"KRN",.404,541,40,11,2)
16,16^1^16,3
"KRN",.404,542,0)
DDE ITEMS^1.51
"KRN",.404,542,40,0)
^.4044I^5^5
"KRN",.404,542,40,1,0)
2^^3
"KRN",.404,542,40,1,1)
.02
"KRN",.404,542,40,1,2)
1,32^5
"KRN",.404,542,40,2,0)
1^^3
"KRN",.404,542,40,2,1)
.01
"KRN",.404,542,40,2,2)
1,1^30
"KRN",.404,542,40,3,0)
3^^3
"KRN",.404,542,40,3,1)
.03
"KRN",.404,542,40,3,2)
1,40^1
"KRN",.404,542,40,3,10)
S:X'="" DDSSTACK=$S(X="F":2.1,X="I":2.2,X="S":2.3,X="W":2.4,X="C":2.5,X="E":2.6,X="L":2.7,1:2.3)
"KRN",.404,542,40,4,0)
4^^3
"KRN",.404,542,40,4,1)
.05
"KRN",.404,542,40,4,2)
1,44^11
"KRN",.404,542,40,4,4)
^^^1
"KRN",.404,542,40,5,0)
5^^3
"KRN",.404,542,40,5,1)
.04
"KRN",.404,542,40,5,2)
1,56^11
"KRN",.404,542,40,5,4)
^^^1
"KRN",.404,543,0)
DDE ENTITY 2^1.5^
"KRN",.404,543,40,0)
^.4044I^6^6
"KRN",.404,543,40,1,0)
1^2^1
"KRN",.404,543,40,1,2)
^^2,74
"KRN",.404,543,40,2,0)
2^Item^1
"KRN",.404,543,40,2,2)
^^5,1
"KRN",.404,543,40,3,0)
3^Seq^1
"KRN",.404,543,40,3,2)
^^5,32
"KRN",.404,543,40,4,0)
4^Type^1
"KRN",.404,543,40,4,2)
^^5,38
"KRN",.404,543,40,5,0)
5^Field^1
"KRN",.404,543,40,5,2)
^^5,44
"KRN",.404,543,40,6,0)
6^Sub/File^1
"KRN",.404,543,40,6,2)
^^5,56
"KRN",.404,544,0)
DDE ENTITY 3^1.5
"KRN",.404,544,40,0)
^.4044I^9^9
"KRN",.404,544,40,1,0)
1^3^1
"KRN",.404,544,40,1,2)
^^2,74
"KRN",.404,544,40,2,0)
2^GET ENTRY ACTION^3
"KRN",.404,544,40,2,1)
2
"KRN",.404,544,40,2,2)
5,19^59^5,1
"KRN",.404,544,40,3,0)
3^GET EXIT ACTION^3
"KRN",.404,544,40,3,1)
3
"KRN",.404,544,40,3,2)
6,19^58^6,2
"KRN",.404,544,40,4,0)
4^GET ID ACTION^3
"KRN",.404,544,40,4,1)
4
"KRN",.404,544,40,4,2)
7,19^60^7,4
"KRN",.404,544,40,5,0)
5^GET POLICY^3
"KRN",.404,544,40,5,1)
19.1
"KRN",.404,544,40,5,2)
9,19^30^9,7
"KRN",.404,544,40,6,0)
6^PUT ENTRY ACTION^3
"KRN",.404,544,40,6,1)
6
"KRN",.404,544,40,6,2)
12,19^59^12,1
"KRN",.404,544,40,7,0)
7^PUT EXIT ACTION^3
"KRN",.404,544,40,7,1)
7
"KRN",.404,544,40,7,2)
13,19^58^13,2
"KRN",.404,544,40,8,0)
8^PUT ID ACTION^3
"KRN",.404,544,40,8,1)
8
"KRN",.404,544,40,8,2)
14,19^60^14,4
"KRN",.404,544,40,9,0)
9^PUT POLICY^3
"KRN",.404,544,40,9,1)
19.2
"KRN",.404,544,40,9,2)
16,19^30^16,7
"KRN",.404,546,0)
DDE ITEM FIXED^1.51
"KRN",.404,546,40,0)
^.4044I^2^2
"KRN",.404,546,40,1,0)
1^FIXED RESPONSE^3
"KRN",.404,546,40,1,1)
2
"KRN",.404,546,40,1,2)
2,17^57^2,1
"KRN",.404,546,40,2,0)
2^GET ACTION^3
"KRN",.404,546,40,2,1)
6
"KRN",.404,546,40,2,2)
5,17^57^5,5
"KRN",.404,547,0)
DDE ITEM ID^1.51
"KRN",.404,547,40,0)
^.4044I^3^3
"KRN",.404,547,40,1,0)
2^OUTPUT TRANSFORM^3
"KRN",.404,547,40,1,1)
4
"KRN",.404,547,40,1,2)
5,19^57^5,1
"KRN",.404,547,40,2,0)
3^INPUT TRANSFORM^3
"KRN",.404,547,40,2,1)
5
"KRN",.404,547,40,2,2)
6,19^57^6,2
"KRN",.404,547,40,3,0)
1^GET ACTION^3
"KRN",.404,547,40,3,1)
6
"KRN",.404,547,40,3,2)
2,19^57^2,7
"KRN",.404,548,0)
DDE ITEM SIMPLE^1.51
"KRN",.404,548,40,0)
^.4044I^7^4
"KRN",.404,548,40,1,0)
1^FILE#^3
"KRN",.404,548,40,1,1)
.04
"KRN",.404,548,40,1,2)
2,50^21^2,43
"KRN",.404,548,40,1,3)
!M
"KRN",.404,548,40,1,3.1)
S Y=$G(DDEFILE)
"KRN",.404,548,40,1,12)
S DDEFN=X
"KRN",.404,548,40,2,0)
2^FIELD#^3
"KRN",.404,548,40,2,1)
.05
"KRN",.404,548,40,2,2)
2,19^21^2,11
"KRN",.404,548,40,2,14)
I $G(X),$G(DDEFN),'($D(^DD(+DDEFN,X,0))#2) S DDSERROR=1
"KRN",.404,548,40,3,0)
3^EXT PTR LKUP^3
"KRN",.404,548,40,3,1)
.06
"KRN",.404,548,40,3,2)
3,19^21^3,5
"KRN",.404,548,40,4,0)
4^INTERNAL VALUE^3
"KRN",.404,548,40,4,1)
.07
"KRN",.404,548,40,4,2)
4,19^3^4,3
"KRN",.404,548,40,5,0)
6^OUTPUT TRANSFORM^3
"KRN",.404,548,40,5,1)
4
"KRN",.404,548,40,5,2)
8,19^57^8,1
"KRN",.404,548,40,6,0)
7^INPUT TRANSFORM^3
"KRN",.404,548,40,6,1)
5
"KRN",.404,548,40,6,2)
9,19^57^9,2
"KRN",.404,548,40,7,0)
5^GET ACTION^3
"KRN",.404,548,40,7,1)
6
"KRN",.404,548,40,7,2)
6,19^57^6,7
"KRN",.404,549,0)
DDE ITEM WORD PROC^1.51
"KRN",.404,549,40,0)
^.4044I^5^5
"KRN",.404,549,40,1,0)
1^FILE#^3
"KRN",.404,549,40,1,1)
.04
"KRN",.404,549,40,1,2)
2,50^21^2,43
"KRN",.404,549,40,1,3)
!M
"KRN",.404,549,40,1,3.1)
S Y=$G(DDEFILE)
"KRN",.404,549,40,1,12)
S DDEFN=X
"KRN",.404,549,40,2,0)
2^FIELD#^3
"KRN",.404,549,40,2,1)
.05
"KRN",.404,549,40,2,2)
2,15^21^2,7
"KRN",.404,549,40,2,14)
I $G(X),$G(DDEFN),'($D(^DD(+DDEFN,+X,0))#2) S DDSERROR=1
"KRN",.404,549,40,3,0)
5^GET ACTION^3
"KRN",.404,549,40,3,1)
6
"KRN",.404,549,40,3,2)
6,15^57^6,3
"KRN",.404,549,40,4,0)
3^EXT PTR LKUP^3
"KRN",.404,549,40,4,1)
.06
"KRN",.404,549,40,4,2)
3,15^21^3,1
"KRN",.404,549,40,5,0)
4^WORD WRAP^3
"KRN",.404,549,40,5,1)
.09
"KRN",.404,549,40,5,2)
4,15^3^4,4
"KRN",.404,550,0)
DDE ITEM COMPLEX^1.51
"KRN",.404,550,40,0)
^.4044I^2^2
"KRN",.404,550,40,1,0)
1^GET ACTION^3
"KRN",.404,550,40,1,1)
6
"KRN",.404,550,40,1,2)
2,14^57^2,2
"KRN",.404,550,40,2,0)
2^Seq   Item^1
"KRN",.404,550,40,2,2)
^^4,4
"KRN",.404,551,0)
DDE ITEM ENTITY^1.51
"KRN",.404,551,40,0)
^.4044I^8^8
"KRN",.404,551,40,1,0)
1^FILE#^3
"KRN",.404,551,40,1,1)
.04
"KRN",.404,551,40,1,2)
1,50^21^1,43
"KRN",.404,551,40,1,3)
!M
"KRN",.404,551,40,1,3.1)
S Y=$G(DDEFILE)
"KRN",.404,551,40,1,12)
S DDEFN=X
"KRN",.404,551,40,2,0)
8^ENTITY^3
"KRN",.404,551,40,2,1)
.08
"KRN",.404,551,40,2,2)
10,19^30^10,11
"KRN",.404,551,40,3,0)
2^FIELD#^3
"KRN",.404,551,40,3,1)
.05
"KRN",.404,551,40,3,2)
1,19^21^1,11
"KRN",.404,551,40,3,14)
I $G(X),$G(DDEFN),'($D(^DD(+DDEFN,+X,0))#2) S DDSERROR=1
"KRN",.404,551,40,4,0)
3^EXT PTR LKUP^3
"KRN",.404,551,40,4,1)
.06
"KRN",.404,551,40,4,2)
2,19^21^2,5
"KRN",.404,551,40,5,0)
4^INTERNAL VALUE^3
"KRN",.404,551,40,5,1)
.07
"KRN",.404,551,40,5,2)
3,19^3^3,3
"KRN",.404,551,40,6,0)
5^GET ACTION^3
"KRN",.404,551,40,6,1)
6
"KRN",.404,551,40,6,2)
5,19^59^5,7
"KRN",.404,551,40,7,0)
6^OUTPUT TRANSFORM^3
"KRN",.404,551,40,7,1)
4
"KRN",.404,551,40,7,2)
7,19^59^7,1
"KRN",.404,551,40,8,0)
7^INPUT TRANSFORM^3
"KRN",.404,551,40,8,1)
5
"KRN",.404,551,40,8,2)
8,19^59^8,2
"KRN",.404,552,0)
DDE ITEM LIST^1.51
"KRN",.404,552,40,0)
^.4044I^8^8
"KRN",.404,552,40,1,0)
1^LIST TYPE^3
"KRN",.404,552,40,1,1)
1.01
"KRN",.404,552,40,1,2)
1,13^7^1,2
"KRN",.404,552,40,1,10)
S:X=3 DDSSTACK=2.9 S:X<3 DDSSTACK=2.8
"KRN",.404,552,40,1,12)
S DDELST=X
"KRN",.404,552,40,2,0)
2^GET ACTION^3
"KRN",.404,552,40,2,1)
6
"KRN",.404,552,40,2,2)
3,13^57^3,1
"KRN",.404,552,40,2,10)
S:DDELST=3 DDSBR="XML TAG"
"KRN",.404,552,40,3,0)
4^ENTITY^3
"KRN",.404,552,40,3,1)
.08
"KRN",.404,552,40,3,2)
6,13^30^6,5
"KRN",.404,552,40,4,0)
8^XML TAG^3
"KRN",.404,552,40,4,1)
1.02
"KRN",.404,552,40,4,2)
10,13^57^10,4
"KRN",.404,552,40,5,0)
3^Select the Entity or Field to be returned for each record:^1
"KRN",.404,552,40,5,2)
^^5,2
"KRN",.404,552,40,6,0)
5^FIELD#^3
"KRN",.404,552,40,6,1)
.05
"KRN",.404,552,40,6,2)
6,54^21^6,46
"KRN",.404,552,40,6,14)
I $G(DDEFN),'($D(^DD(+DDEFN,X,0))#2) S DDSERROR=1
"KRN",.404,552,40,7,0)
6^EXT PTR^3
"KRN",.404,552,40,7,1)
.06
"KRN",.404,552,40,7,2)
7,54^13^7,45
"KRN",.404,552,40,8,0)
7^INT VAL^3
"KRN",.404,552,40,8,1)
.07
"KRN",.404,552,40,8,2)
8,54^3^8,45
"KRN",.404,553,0)
DDE COMPLEX LIST^1.513
"KRN",.404,553,40,0)
^.4044I^2^2
"KRN",.404,553,40,1,0)
1^^3
"KRN",.404,553,40,1,1)
.01
"KRN",.404,553,40,1,2)
1,2^5
"KRN",.404,553,40,1,4)
^^1
"KRN",.404,553,40,2,0)
2^^3
"KRN",.404,553,40,2,1)
.02
"KRN",.404,553,40,2,2)
1,10^48
"KRN",.404,554,0)
DDE LIST FILE^1.51
"KRN",.404,554,40,0)
^.4044I^9^5
"KRN",.404,554,40,1,0)
2^FILE#^3
"KRN",.404,554,40,1,1)
.04
"KRN",.404,554,40,1,2)
3,12^21^3,5
"KRN",.404,554,40,1,12)
S DDEFN=X
"KRN",.404,554,40,6,0)
3^XREF^3
"KRN",.404,554,40,6,1)
1.03
"KRN",.404,554,40,6,2)
4,12^15^4,6
"KRN",.404,554,40,7,0)
4^FILTER BY^3
"KRN",.404,554,40,7,1)
1.04
"KRN",.404,554,40,7,2)
5,12^8^5,1
"KRN",.404,554,40,8,0)
5^SCREEN^3
"KRN",.404,554,40,8,1)
1.1
"KRN",.404,554,40,8,2)
7,12^60^7,4
"KRN",.404,554,40,9,0)
1^Define the sub/file search for the desired records:^1
"KRN",.404,554,40,9,2)
^^1,1
"KRN",.404,555,0)
DDE LIST COMPLEX^1.51
"KRN",.404,555,40,0)
^.4044I^2^2
"KRN",.404,555,40,1,0)
2^Seq  Item^1
"KRN",.404,555,40,1,2)
^^3,6
"KRN",.404,555,40,2,0)
1^Select the Entity Items to return the desired values for this list:^1
"KRN",.404,555,40,2,2)
^^1,2
"KRN",.404,557,0)
DDE LIST COMPLEX ITEMS^1.513
"KRN",.404,557,40,0)
^.4044I^2^2
"KRN",.404,557,40,1,0)
1^^3
"KRN",.404,557,40,1,1)
.01
"KRN",.404,557,40,1,2)
1,2^7
"KRN",.404,557,40,1,4)
^^1
"KRN",.404,557,40,2,0)
2^^3
"KRN",.404,557,40,2,1)
.02
"KRN",.404,557,40,2,2)
1,11^44
"KRN",19,14405,-1)
2^2
"KRN",19,14405,0)
DDE ENTITY MAPPING^Entity Mapping^^M^50^^^^^^^11
"KRN",19,14405,10,0)
^19.01IP^3^3
"KRN",19,14405,10,2,0)
14406^^3
"KRN",19,14405,10,2,"^")
DDE AUTO GEN ENTITY FOR A DD #
"KRN",19,14405,10,3,0)
14416^^2
"KRN",19,14405,10,3,"^")
DDE ENTITY INQUIRE
"KRN",19,14405,"U")
ENTITY MAPPING
"KRN",19,14406,-1)
0^3
"KRN",19,14406,0)
DDE AUTO GEN ENTITY FOR A DD #^Auto Gen Entity For A DD #^^R^^^^^^^^VA FILEMAN
"KRN",19,14406,1,0)
^19.06^2^2^3190522^^^^
"KRN",19,14406,1,1,0)
This option will generate an Entity for a user selected Data Dictionary # 
"KRN",19,14406,1,2,0)
(DD #).
"KRN",19,14406,25)
MAIN^DDEMAP
"KRN",19,14406,"U")
AUTO GEN ENTITY FOR A DD #
"KRN",19,14416,-1)
0^1
"KRN",19,14416,0)
DDE ENTITY INQUIRE^Inquire to Entity File^^R^^^^^^^^
"KRN",19,14416,1,0)
^^1^1^3190522^
"KRN",19,14416,1,1,0)
This option will prompt for an ENTITY File (#1.5) entry and then display the information.
"KRN",19,14416,25)
EN^DDEPRT
"KRN",19,14416,"U")
INQUIRE TO ENTITY FILE
"MBREQ")
0
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",11,-1)
1^1
"PKG",11,0)
VA FILEMAN^DI^FM INIT
"PKG",11,22,0)
^9.49I^1^1
"PKG",11,22,1,0)
22.2^3160105^3170227^1114
"PKG",11,22,1,"PAH",1,0)
16^3190626
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DDEG")
0^1^B128480515^B122631592
"RTN","DDEG",1,0)
DDEG ;SPFO/RAM,MKB - Entity GET Extract ;AUG 1, 2018  12:37
"RTN","DDEG",2,0)
 ;;22.2;VA FileMan;**9,16**;Jan 05, 2016;Build 10
"RTN","DDEG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDEG",4,0)
 Q
"RTN","DDEG",5,0)
 ;
"RTN","DDEG",6,0)
 ; $$EN1 called from ^DDEGET, assumes validated input parameters:
"RTN","DDEG",7,0)
 ;   DIENTY = Entity file #1.5 ien
"RTN","DDEG",8,0)
 ;   DIEN   = ID of entity instance to return
"RTN","DDEG",9,0)
 ;   NOTAG  = 1 if entity is a list item (omit tags)
"RTN","DDEG",10,0)
 ;   ERROR  = returns '-1^message' if error, else ""
"RTN","DDEG",11,0)
 ;   DFORM  = format for results (0, 1, 2); default is 0=JSON
"RTN","DDEG",12,0)
 ;
"RTN","DDEG",13,0)
EN1(DIENTY,DIEN,NOTAG,ERROR) ; -- return a single Entity (expects DFORM=0/1/2)
"RTN","DDEG",14,0)
 N DIFN,DNAME,DDEOUT,DAC,DSEQ,DITM,DRES,X
"RTN","DDEG",15,0)
 S DFORM=+$G(DFORM),(DRES,ERROR)=""
"RTN","DDEG",16,0)
 S DIENTY=+$G(DIENTY),DIEN=$G(DIEN)
"RTN","DDEG",17,0)
 S DIFN=$P($G(^DDE(DIENTY,0)),U,2)
"RTN","DDEG",18,0)
 S DNAME=$G(^DDE(DIENTY,.1)) S:DNAME="" DNAME=$P($G(^(0)),U)
"RTN","DDEG",19,0)
 ;
"RTN","DDEG",20,0)
 D IENPROC I $G(DDEOUT) K DDEOUT Q ""
"RTN","DDEG",21,0)
 I $G(DIEN)="" S ERROR="-1^Record "_$G(DIEN)_" not found" G ENQ
"RTN","DDEG",22,0)
 ;
"RTN","DDEG",23,0)
 S DAC=$P($G(^DDE(+DIENTY,"GET")),U,3) I DAC D  G:ERROR ENQ
"RTN","DDEG",24,0)
 . N DDETXT,DDERR
"RTN","DDEG",25,0)
 . S DAC=$$CANDO^DIAC1(DIFN,DIEN,DAC,DUZ,,,"DDETXT","DDERR")
"RTN","DDEG",26,0)
 . S ERROR=$S(DAC<0:"-1^"_$G(DDERR(1)),'DAC:"-1^"_$G(DDETXT(1)),1:0)
"RTN","DDEG",27,0)
 ;
"RTN","DDEG",28,0)
 ; loop through items
"RTN","DDEG",29,0)
 S DSEQ=0 F  S DSEQ=$O(^DDE(DIENTY,1,"SEQ",DSEQ)) Q:'DSEQ  D  Q:ERROR
"RTN","DDEG",30,0)
 . S DITM=0 F  S DITM=$O(^DDE(DIENTY,1,"SEQ",DSEQ,DITM)) Q:'DITM  D  Q:ERROR
"RTN","DDEG",31,0)
 .. S X=$$VALUE(DITM) Q:X=""  Q:ERROR
"RTN","DDEG",32,0)
 .. S DRES=$$ADD(DRES,X,DSEQ)
"RTN","DDEG",33,0)
 ;
"RTN","DDEG",34,0)
 I $L(DRES) D
"RTN","DDEG",35,0)
 . S:'DFORM DRES="{"_DRES_"}"
"RTN","DDEG",36,0)
 . Q:$G(NOTAG)  ;for embedded items
"RTN","DDEG",37,0)
 . S DRES=$$ELEMENT("",DNAME,DRES,,,"C")
"RTN","DDEG",38,0)
ENQ ;
"RTN","DDEG",39,0)
 Q DRES
"RTN","DDEG",40,0)
 ;
"RTN","DDEG",41,0)
VALUE(ITM,NOTAG) ; -- build a complete ITEM value
"RTN","DDEG",42,0)
 N ITM0,TAG,ITEM,TYPE,FILE,FIELD,IEN
"RTN","DDEG",43,0)
 ;
"RTN","DDEG",44,0)
 S ITM0=$G(^DDE(+DIENTY,1,+ITM,0)),IEN=$G(DIEN)
"RTN","DDEG",45,0)
 S TAG=$P(ITM0,U),FILE=$P(ITM0,U,4),FIELD=$P(ITM0,U,5)
"RTN","DDEG",46,0)
 S:'FILE FILE=DIFN ;default file#
"RTN","DDEG",47,0)
 S TYPE=$P($$GET1^DIQ(1.51,(+ITM_","_+DIENTY_","),.03)," ")
"RTN","DDEG",48,0)
 ;
"RTN","DDEG",49,0)
 S ITEM="" I $L(TYPE),$L($T(@TYPE)) D @TYPE G VQ ;build ITEM
"RTN","DDEG",50,0)
 D SIMPLE
"RTN","DDEG",51,0)
VQ ;
"RTN","DDEG",52,0)
 Q ITEM
"RTN","DDEG",53,0)
 ;
"RTN","DDEG",54,0)
SIMPLE ; -- retrieve simple ITEM (from $$VALUE)
"RTN","DDEG",55,0)
 N VALUE,LKUP,FMT,XFRM
"RTN","DDEG",56,0)
 S VALUE="",XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",57,0)
 ;
"RTN","DDEG",58,0)
 ; get VALUE via code or field
"RTN","DDEG",59,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",60,0)
 I VALUE="",$G(FIELD) D  Q:VALUE=""
"RTN","DDEG",61,0)
 . S LKUP=$P(ITM0,U,6) S:LKUP'="" FIELD=FIELD_":"_LKUP
"RTN","DDEG",62,0)
 . S FMT=$S(+$P(ITM0,U,7):"I",1:"E")
"RTN","DDEG",63,0)
 . S VALUE=$$GET1^DIQ(FILE,IEN_",",FIELD,FMT)
"RTN","DDEG",64,0)
 ;
"RTN","DDEG",65,0)
 ; apply output transform
"RTN","DDEG",66,0)
 I $L(VALUE),$L(XFRM) X XFRM
"RTN","DDEG",67,0)
 ;
"RTN","DDEG",68,0)
 I $$VALID(VALUE) D  ;add tags
"RTN","DDEG",69,0)
 . S VALUE=$$ESC(VALUE)
"RTN","DDEG",70,0)
 . I 'DFORM,$G(NOTAG) S ITEM=VALUE Q  ;for List items
"RTN","DDEG",71,0)
 . S ITEM=$$ELEMENT("",TAG,VALUE)
"RTN","DDEG",72,0)
 Q
"RTN","DDEG",73,0)
 ;
"RTN","DDEG",74,0)
FIXED ; -- build one FIXED item (from $$VALUE)
"RTN","DDEG",75,0)
 N VALUE S VALUE=""
"RTN","DDEG",76,0)
 ;
"RTN","DDEG",77,0)
 ; get VALUE via code or string
"RTN","DDEG",78,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",79,0)
 S:VALUE="" VALUE=$G(^DDE(+DIENTY,1,+ITM,2)) ;Fixed Response
"RTN","DDEG",80,0)
 ;
"RTN","DDEG",81,0)
 I $$VALID(VALUE) D  ;add tags
"RTN","DDEG",82,0)
 . S VALUE=$$ESC(VALUE)
"RTN","DDEG",83,0)
 . I 'DFORM,$G(NOTAG) S ITEM=VALUE Q  ;for List items
"RTN","DDEG",84,0)
 . S ITEM=$$ELEMENT("",TAG,VALUE)
"RTN","DDEG",85,0)
 Q
"RTN","DDEG",86,0)
 ;
"RTN","DDEG",87,0)
ID ; -- build one ID item (from $$VALUE)
"RTN","DDEG",88,0)
 N VALUE,XFRM
"RTN","DDEG",89,0)
 S VALUE="",XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",90,0)
 ;
"RTN","DDEG",91,0)
 ; get VALUE via code or IEN
"RTN","DDEG",92,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",93,0)
 S:VALUE="" VALUE=IEN
"RTN","DDEG",94,0)
 ;
"RTN","DDEG",95,0)
 ; apply output transform
"RTN","DDEG",96,0)
 I $L(VALUE),$L(XFRM) X XFRM
"RTN","DDEG",97,0)
 ;
"RTN","DDEG",98,0)
 I $$VALID(VALUE) D  ;add tags
"RTN","DDEG",99,0)
 . S VALUE=$$ESC(VALUE)
"RTN","DDEG",100,0)
 . I 'DFORM,$G(NOTAG) S ITEM=VALUE Q  ;for List items
"RTN","DDEG",101,0)
 . S ITEM=$$ELEMENT("",TAG,VALUE)
"RTN","DDEG",102,0)
 Q
"RTN","DDEG",103,0)
 ;
"RTN","DDEG",104,0)
WORD ; -- build one WP ITEM (from $$VALUE)
"RTN","DDEG",105,0)
 N WP,LKUP,CRLF,I,X,VALUE S VALUE="",I=0
"RTN","DDEG",106,0)
 ;
"RTN","DDEG",107,0)
 ; get WP(n) or WP(n,0) via code or field
"RTN","DDEG",108,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",109,0)
 I '$D(WP),$G(FIELD) D  Q:'$D(WP)
"RTN","DDEG",110,0)
 . S LKUP=$P(ITM0,U,6) S:LKUP'="" FIELD=FIELD_":"_LKUP
"RTN","DDEG",111,0)
 . S I=$$GET1^DIQ(FILE,IEN_",",FIELD,,"WP")
"RTN","DDEG",112,0)
 ;
"RTN","DDEG",113,0)
 S CRLF='$P(ITM0,U,9)
"RTN","DDEG",114,0)
 S I=+$O(WP(0)),X=$S($D(WP(I,0)):WP(I,0),1:$G(WP(I)))
"RTN","DDEG",115,0)
 S VALUE=X
"RTN","DDEG",116,0)
 F  S I=$O(WP(I)) Q:I<1  D
"RTN","DDEG",117,0)
 . S X=$S($D(WP(I,0)):WP(I,0),1:WP(I))
"RTN","DDEG",118,0)
 . I $E(X)=" " S VALUE=VALUE_$C(13,10)_X Q
"RTN","DDEG",119,0)
 . I CRLF S VALUE=VALUE_$C(13,10)_X Q
"RTN","DDEG",120,0)
 . S VALUE=VALUE_$S($E(VALUE,$L(VALUE))=" ":"",1:" ")_X
"RTN","DDEG",121,0)
 ;
"RTN","DDEG",122,0)
 I $$VALID(VALUE) D  Q  ;add tags
"RTN","DDEG",123,0)
 . I $L(VALUE)>2999999 S VALUE="Text exceeds 3 megabyte limit and could not be saved. Please contact the site for full original text." ;p16
"RTN","DDEG",124,0)
 . S VALUE=$$ESC(VALUE)
"RTN","DDEG",125,0)
 . I 'DFORM,$G(NOTAG) S ITEM=VALUE Q  ;for List items
"RTN","DDEG",126,0)
 . S ITEM=$$ELEMENT("",TAG,VALUE)
"RTN","DDEG",127,0)
 Q
"RTN","DDEG",128,0)
 ;
"RTN","DDEG",129,0)
ENTITY ; -- build an entity ITEM (from $$VALUE)
"RTN","DDEG",130,0)
 N ENTITY,ERR,VALUE,DATA,LKUP,FMT,XFRM,ID
"RTN","DDEG",131,0)
 S ENTITY=$P(ITM0,U,8) Q:ENTITY=""
"RTN","DDEG",132,0)
 S (VALUE,ERR)="",XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",133,0)
 ;
"RTN","DDEG",134,0)
 ; get VALUE via code or field, for Entity ID
"RTN","DDEG",135,0)
 ; DATA can also be defined here, to pass to Entity
"RTN","DDEG",136,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",137,0)
 I VALUE="",$G(FIELD) D  Q:VALUE=""
"RTN","DDEG",138,0)
 . S LKUP=$P(ITM0,U,6) S:LKUP'="" FIELD=FIELD_":"_LKUP
"RTN","DDEG",139,0)
 . S FMT=$S(+$P(ITM0,U,7):"I",1:"E")
"RTN","DDEG",140,0)
 . S VALUE=$$GET1^DIQ(FILE,IEN_",",FIELD,FMT)
"RTN","DDEG",141,0)
 I $L(VALUE),$L(XFRM) X XFRM
"RTN","DDEG",142,0)
 Q:VALUE=""  S ID=VALUE
"RTN","DDEG",143,0)
 ;
"RTN","DDEG",144,0)
 D PREPROC(+ENTITY) ;Pre-Processing
"RTN","DDEG",145,0)
 S VALUE=$$EN1^DDEG(+ENTITY,ID,1)
"RTN","DDEG",146,0)
 D POST(+ENTITY)    ;Post-Processing
"RTN","DDEG",147,0)
 ;
"RTN","DDEG",148,0)
 I $L(VALUE) D  Q   ;add tags
"RTN","DDEG",149,0)
 . I VALUE<0 S ERROR=VALUE Q
"RTN","DDEG",150,0)
 . I $G(NOTAG) S ITEM=VALUE Q  ;for embedded or list items
"RTN","DDEG",151,0)
 . S ITEM=$$ELEMENT("",TAG,VALUE,,,"C")
"RTN","DDEG",152,0)
 Q
"RTN","DDEG",153,0)
 ;
"RTN","DDEG",154,0)
COMPLEX ; -- build a complex ITEM (from $$VALUE)
"RTN","DDEG",155,0)
 N SEQ,IDX1,TAG1,IDX0,VALUE
"RTN","DDEG",156,0)
 ;
"RTN","DDEG",157,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",158,0)
 ;
"RTN","DDEG",159,0)
 S SEQ=0 F  S SEQ=$O(^DDE(DIENTY,1,ITM,3,"B",SEQ)) Q:'SEQ  D  Q:$G(ERROR)
"RTN","DDEG",160,0)
 . S IDX1=$O(^DDE(DIENTY,1,ITM,3,"B",SEQ,0))
"RTN","DDEG",161,0)
 . S TAG1=$P(^DDE(DIENTY,1,ITM,3,IDX1,0),U,2) Q:TAG1=""
"RTN","DDEG",162,0)
 . S IDX0=+$O(^DDE(DIENTY,1,"B",TAG1,0))
"RTN","DDEG",163,0)
 . I IDX0<1!'$D(^DDE(DIENTY,1,IDX0,0)) Q
"RTN","DDEG",164,0)
 . ;
"RTN","DDEG",165,0)
 . S VALUE=$$VALUE(IDX0) Q:$G(ERROR)
"RTN","DDEG",166,0)
 . S:VALUE'="" ITEM=$$ADD(ITEM,VALUE,SEQ)
"RTN","DDEG",167,0)
 ;
"RTN","DDEG",168,0)
 Q:$G(ERROR)  I $L(ITEM) D  ;add tags
"RTN","DDEG",169,0)
 . S:'DFORM ITEM="{"_ITEM_"}" Q:$G(NOTAG)  ;for List items
"RTN","DDEG",170,0)
 . S ITEM=$$ELEMENT("",TAG,ITEM,,,"C")
"RTN","DDEG",171,0)
 Q
"RTN","DDEG",172,0)
 ;
"RTN","DDEG",173,0)
LIST ; -- build an array of values in ITEM (from $$VALUE)
"RTN","DDEG",174,0)
 N ITM1 S ITM1=$G(^DDE(+DIENTY,1,+ITM,1))
"RTN","DDEG",175,0)
 ;
"RTN","DDEG",176,0)
 D @("LIST"_+ITM1) ;LIST_type#
"RTN","DDEG",177,0)
 ;
"RTN","DDEG",178,0)
 Q:$G(ERROR)  I $L(ITEM) D  ;add tags
"RTN","DDEG",179,0)
 . S:'DFORM ITEM="["_ITEM_"]" Q:$G(NOTAG)  ;for List items
"RTN","DDEG",180,0)
 . S ITEM=$$ELEMENT("",TAG,ITEM,,,"L")
"RTN","DDEG",181,0)
 Q
"RTN","DDEG",182,0)
 ;
"RTN","DDEG",183,0)
LIST1 ; -- list of values in FILE (from LIST)
"RTN","DDEG",184,0)
 N C,TAG,XREF,FILTER,SCREEN,FMT,XFRM,ENTITY,QUERY,DDELIST,DLIST,SEQ,IEN1,VALUE,ERR
"RTN","DDEG",185,0)
 S C=","
"RTN","DDEG",186,0)
 S TAG=$P(ITM1,U,2),XREF=$P(ITM1,U,3),FILTER=$P(ITM1,U,4)
"RTN","DDEG",187,0)
 S SCREEN=$G(^DDE(+DIENTY,1,+ITM,1.1))
"RTN","DDEG",188,0)
 ;
"RTN","DDEG",189,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",190,0)
 ;
"RTN","DDEG",191,0)
 ; set up for results: single FIELD or multi-field (record) ENTITY
"RTN","DDEG",192,0)
 I FIELD S FMT=$S(+$P(ITM0,U,7):"I",1:"E"),XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",193,0)
 E  D  Q:'ENTITY
"RTN","DDEG",194,0)
 . S ENTITY=+$P(ITM0,U,8) Q:'ENTITY
"RTN","DDEG",195,0)
 . N X0 S X0=$G(^DDE(ENTITY,0)) S:'$L(TAG) TAG=$G(^(.1))
"RTN","DDEG",196,0)
 . ; get defaults from Entity if not defined in Item
"RTN","DDEG",197,0)
 . S:'$L(XREF) XREF=$P(X0,U,3)
"RTN","DDEG",198,0)
 . S:'$L(FILTER) FILTER=$P(X0,U,4)
"RTN","DDEG",199,0)
 . S:'$L(SCREEN) SCREEN=$G(^DDE(ENTITY,5.1))
"RTN","DDEG",200,0)
 . S QUERY=$G(^DDE(ENTITY,5))
"RTN","DDEG",201,0)
 . D PREPROC(ENTITY)
"RTN","DDEG",202,0)
 I $L(FILTER) S FILTER=$S($D(@FILTER):@FILTER,1:FILTER)
"RTN","DDEG",203,0)
 S:TAG="" TAG=$P(ITM0,U)
"RTN","DDEG",204,0)
 ;
"RTN","DDEG",205,0)
L1 ; find appropriate records and process
"RTN","DDEG",206,0)
 I $L(QUERY)>1,$L($T(@($P(QUERY,"(")))) D @QUERY I 1
"RTN","DDEG",207,0)
 E  D FIND^DIC(FILE,,"@","Q",.FILTER,,XREF,SCREEN,,"DDELIST") M DLIST=DDELIST("DILIST",2)
"RTN","DDEG",208,0)
 S SEQ=0 F  S SEQ=$O(DLIST(SEQ)) Q:'SEQ  D
"RTN","DDEG",209,0)
 . S IEN1=$G(DLIST(SEQ))
"RTN","DDEG",210,0)
 . S (VALUE,ERR)=""
"RTN","DDEG",211,0)
 . I FIELD D
"RTN","DDEG",212,0)
 .. S VALUE=$$GET1^DIQ(FILE,(IEN1_C),FIELD,FMT)
"RTN","DDEG",213,0)
 .. I $L(VALUE),$L(XFRM) X XFRM ;output transform
"RTN","DDEG",214,0)
 .. S:'$$VALID(VALUE) VALUE=""
"RTN","DDEG",215,0)
 . I 'FIELD,ENTITY S VALUE=$$EN1^DDEG(ENTITY,IEN1,1,.ERR)
"RTN","DDEG",216,0)
 . ;
"RTN","DDEG",217,0)
 . Q:VALUE=""  Q:$G(ERR)
"RTN","DDEG",218,0)
 . S ITEM=$$ELEMENT(ITEM,TAG,VALUE,SEQ,"addList")
"RTN","DDEG",219,0)
 ;
"RTN","DDEG",220,0)
 D:ENTITY POST(ENTITY)
"RTN","DDEG",221,0)
 Q
"RTN","DDEG",222,0)
 ;
"RTN","DDEG",223,0)
LIST2 ; -- list of values in SUBFILE (from LIST)
"RTN","DDEG",224,0)
 N IENS,C,TAG,SCREEN,FMT,XFRM,ENTITY,DLIST,SEQ,IEN1,VALUE,ERR
"RTN","DDEG",225,0)
 S IENS=","_IEN,C=","
"RTN","DDEG",226,0)
 S TAG=$P(ITM1,U,2),SCREEN=$G(^DDE(+DIENTY,1,+ITM,1.1))
"RTN","DDEG",227,0)
 ;
"RTN","DDEG",228,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",229,0)
 ;
"RTN","DDEG",230,0)
 ; set up for results: single FIELD or multi-field ENTITY
"RTN","DDEG",231,0)
 I FIELD S FMT=$S(+$P(ITM0,U,7):"I",1:"E"),XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",232,0)
 E  D  Q:'ENTITY
"RTN","DDEG",233,0)
 . S ENTITY=$P(ITM0,U,8) Q:'ENTITY
"RTN","DDEG",234,0)
 . S:'$L(TAG) TAG=$G(^DDE(ENTITY,.1)) ;defaults
"RTN","DDEG",235,0)
 . S:'$L(SCREEN) SCREEN=$G(^DDE(ENTITY,5.1))
"RTN","DDEG",236,0)
 . D PREPROC(ENTITY)
"RTN","DDEG",237,0)
 S:TAG="" TAG=$P(ITM0,U)
"RTN","DDEG",238,0)
 ;
"RTN","DDEG",239,0)
L2 ; find appropriate records and process
"RTN","DDEG",240,0)
 D LIST^DIC(FILE,IENS_C,"@","Q",,,,,SCREEN,,"DLIST")
"RTN","DDEG",241,0)
 S SEQ=0 F  S SEQ=$O(DLIST("DILIST",2,SEQ)) Q:'SEQ  D  Q:$G(ERR)
"RTN","DDEG",242,0)
 . S IEN1=$G(DLIST("DILIST",2,SEQ))_IENS
"RTN","DDEG",243,0)
 . S (VALUE,ERR)=""
"RTN","DDEG",244,0)
 . I FIELD D
"RTN","DDEG",245,0)
 .. S VALUE=$$GET1^DIQ(FILE,(IEN1_C),FIELD,FMT)
"RTN","DDEG",246,0)
 .. I $L(VALUE),$L(XFRM) X XFRM ;output transform
"RTN","DDEG",247,0)
 .. S:'$$VALID(VALUE) VALUE=""
"RTN","DDEG",248,0)
 . I 'FIELD,ENTITY S VALUE=$$EN1^DDEG(ENTITY,IEN1,1,.ERR)
"RTN","DDEG",249,0)
 . ;
"RTN","DDEG",250,0)
 . Q:VALUE=""  Q:$G(ERR)
"RTN","DDEG",251,0)
 . S ITEM=$$ELEMENT(ITEM,TAG,VALUE,SEQ,"addList")
"RTN","DDEG",252,0)
 ;
"RTN","DDEG",253,0)
 D:ENTITY POST(ENTITY)
"RTN","DDEG",254,0)
 Q
"RTN","DDEG",255,0)
 ;
"RTN","DDEG",256,0)
LIST3 ; -- list of values in COMPLEX FIELDS (from LIST)
"RTN","DDEG",257,0)
 N TAG,SEQ,IDX1,NM1,IDX0,VALUE
"RTN","DDEG",258,0)
 S TAG=$P(ITM1,U,2) S:TAG="" TAG=$P(ITM0,U)
"RTN","DDEG",259,0)
 ;
"RTN","DDEG",260,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",261,0)
 ;
"RTN","DDEG",262,0)
 ; process list Items
"RTN","DDEG",263,0)
 S SEQ=0 F  S SEQ=$O(^DDE(DIENTY,1,ITM,3,"B",SEQ)) Q:'SEQ  D  Q:$G(ERROR)
"RTN","DDEG",264,0)
 . S IDX1=$O(^DDE(DIENTY,1,ITM,3,"B",SEQ,0))
"RTN","DDEG",265,0)
 . S NM1=$P(^DDE(DIENTY,1,ITM,3,IDX1,0),U,2) Q:NM1=""
"RTN","DDEG",266,0)
 . S IDX0=+$O(^DDE(DIENTY,1,"B",NM1,0))
"RTN","DDEG",267,0)
 . I IDX0<1!'$D(^DDE(DIENTY,1,IDX0,0)) Q
"RTN","DDEG",268,0)
 . ;
"RTN","DDEG",269,0)
 . S VALUE=$$VALUE(IDX0,1)
"RTN","DDEG",270,0)
 . ;
"RTN","DDEG",271,0)
 . Q:VALUE=""  Q:$G(ERROR)
"RTN","DDEG",272,0)
 . S ITEM=$$ELEMENT(ITEM,TAG,VALUE,SEQ,"addList")
"RTN","DDEG",273,0)
 Q
"RTN","DDEG",274,0)
 ;
"RTN","DDEG",275,0)
LIST4 ; -- list of values in DLIST()
"RTN","DDEG",276,0)
 N DLIST,TAG,ENTITY,SEQ,X,VALUE,ERR
"RTN","DDEG",277,0)
 S TAG=$P(ITM1,U,2)
"RTN","DDEG",278,0)
 ;
"RTN","DDEG",279,0)
 ;create DLIST()=data value or ID for Entity
"RTN","DDEG",280,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",281,0)
 ;
"RTN","DDEG",282,0)
 ; set up for results: single FIELD or multi-field ENTITY
"RTN","DDEG",283,0)
 S ENTITY=$P(ITM0,U,8) I ENTITY D
"RTN","DDEG",284,0)
 . S:'$L(TAG) TAG=$G(^DDE(ENTITY,.1))
"RTN","DDEG",285,0)
 . D PREPROC(ENTITY)
"RTN","DDEG",286,0)
 I TAG="" S TAG=$P(ITM0,U)
"RTN","DDEG",287,0)
 ;
"RTN","DDEG",288,0)
 ; process list items
"RTN","DDEG",289,0)
 S SEQ=0 F  S SEQ=$O(DLIST(SEQ)) Q:'SEQ  D  Q:$G(ERR)
"RTN","DDEG",290,0)
 . S X=$G(DLIST(SEQ))
"RTN","DDEG",291,0)
 . S (VALUE,ERR)=""
"RTN","DDEG",292,0)
 . I 'ENTITY,$$VALID(X) S VALUE=X
"RTN","DDEG",293,0)
 . E  S VALUE=$$EN1^DDEG(ENTITY,X,1,.ERR)
"RTN","DDEG",294,0)
 . ;
"RTN","DDEG",295,0)
 . Q:VALUE=""  Q:$G(ERR)
"RTN","DDEG",296,0)
 . S ITEM=$$ELEMENT(ITEM,TAG,VALUE,SEQ,"addList")
"RTN","DDEG",297,0)
 ;
"RTN","DDEG",298,0)
 D:ENTITY POST(ENTITY)
"RTN","DDEG",299,0)
 Q
"RTN","DDEG",300,0)
 ;
"RTN","DDEG",301,0)
ADD(STRING,ELEMENT,SEQ) ; -- add ELEMENT to result STRING
"RTN","DDEG",302,0)
 Q:$G(ELEMENT)="" STRING
"RTN","DDEG",303,0)
 ;
"RTN","DDEG",304,0)
 ; JSON:0  XML:1  TEXT:2
"RTN","DDEG",305,0)
 S DFORM=+$G(DFORM),SEQ=+$G(SEQ)
"RTN","DDEG",306,0)
 ;
"RTN","DDEG",307,0)
 N RES S RES=$G(STRING)
"RTN","DDEG",308,0)
 I DFORM=0 S RES=RES_$S($L($G(STRING)):", ",1:"")_ELEMENT ;SEQ>1
"RTN","DDEG",309,0)
 I DFORM=1 S RES=RES_ELEMENT
"RTN","DDEG",310,0)
 I DFORM=2 S RES=RES_$S($L($G(STRING)):U,1:"")_ELEMENT ;SEQ>1
"RTN","DDEG",311,0)
 Q RES
"RTN","DDEG",312,0)
 ;
"RTN","DDEG",313,0)
ELEMENT(STRING,NAME,VALUE,SEQ,OPTION,DTYPE) ; -- build an element STRING
"RTN","DDEG",314,0)
 ; STRING=SERIALIZED RESPONSE
"RTN","DDEG",315,0)
 S STRING=$G(STRING) Q:$G(NAME)="" STRING
"RTN","DDEG",316,0)
 S:NAME["." NAME=$P(NAME,".",2)
"RTN","DDEG",317,0)
 S VALUE=$G(VALUE)
"RTN","DDEG",318,0)
 S SEQ=+$G(SEQ),OPTION=$G(OPTION,"addTags")
"RTN","DDEG",319,0)
 ;
"RTN","DDEG",320,0)
 ; does DataTYPE not require quotes?
"RTN","DDEG",321,0)
 S DTYPE=$S($G(DTYPE)="C":1,$G(DTYPE)="L":1,"[{"[$E(VALUE):1,VALUE?1.N1"E"1N.E:0,+VALUE=VALUE:1,1:0)
"RTN","DDEG",322,0)
 N X,Y S X="""",Y=$S(DTYPE:"",1:"""")
"RTN","DDEG",323,0)
 ;
"RTN","DDEG",324,0)
 S DFORM=+$G(DFORM) ; JSON:0  XML:1  TEXT:2
"RTN","DDEG",325,0)
 I OPTION="addTags" D  Q STRING
"RTN","DDEG",326,0)
 . S:DFORM=0 STRING=X_NAME_X_":"_Y_VALUE_Y
"RTN","DDEG",327,0)
 . S:DFORM=1 STRING="<"_NAME_">"_VALUE_"</"_NAME_">"
"RTN","DDEG",328,0)
 . S:DFORM=2 STRING=VALUE
"RTN","DDEG",329,0)
 ;
"RTN","DDEG",330,0)
 I OPTION="addList" D  Q STRING
"RTN","DDEG",331,0)
 . S:DFORM=0 STRING=STRING_$S($L(STRING):", ",1:"")_Y_VALUE_Y ;SEQ>1
"RTN","DDEG",332,0)
 . S:DFORM=1 STRING=STRING_"<"_NAME_">"_VALUE_"</"_NAME_">"
"RTN","DDEG",333,0)
 . S:DFORM=2 STRING=STRING_$S($L(STRING):"~",1:"")_Y_VALUE_Y ;SEQ>1
"RTN","DDEG",334,0)
 ;
"RTN","DDEG",335,0)
 Q STRING
"RTN","DDEG",336,0)
 ;
"RTN","DDEG",337,0)
VALID(X) ; -- return 1 or 0, if X is a valid string
"RTN","DDEG",338,0)
 ; Cannot be null or only white space
"RTN","DDEG",339,0)
 S X=$G(X)
"RTN","DDEG",340,0)
 I X="" Q 0
"RTN","DDEG",341,0)
 I X?." " Q 0
"RTN","DDEG",342,0)
 ;I X?.P Q 0
"RTN","DDEG",343,0)
 Q 1
"RTN","DDEG",344,0)
 ;
"RTN","DDEG",345,0)
ESC(X) ; -- convert key characters for outgoing XML/JSON
"RTN","DDEG",346,0)
 Q:DFORM=2 X
"RTN","DDEG",347,0)
 I DFORM=0 Q $$ESC^XLFJSON(X)
"RTN","DDEG",348,0)
 ; DFORM=1 XML
"RTN","DDEG",349,0)
 N I,Y,QOT S QOT=""""
"RTN","DDEG",350,0)
 ; strip control characters ;p16 add $C(0)
"RTN","DDEG",351,0)
 F I=0:1:8,11,12,14:1:31 I X[$C(I) S X=$TR(X,$C(I))
"RTN","DDEG",352,0)
 ; handle special characters:
"RTN","DDEG",353,0)
 ;  DDESC = 1 ('&' only), 2 ('&' + CDATA), or
"RTN","DDEG",354,0)
 ;  default (0/null/undefined) = CDATA only
"RTN","DDEG",355,0)
 I (X["&")!(X["<")!(X[">")!(X["'")!(X[QOT) D  Q Y
"RTN","DDEG",356,0)
 . I $G(DDESC) D  Q:DDESC=1  S X=Y
"RTN","DDEG",357,0)
 .. S Y=$P(X,"&") F I=2:1:$L(X,"&") S Y=Y_"&amp;"_$P(X,"&",I)
"RTN","DDEG",358,0)
 .. S X=Y,Y=$P(X,"<") F I=2:1:$L(X,"<") S Y=Y_"&lt;"_$P(X,"<",I)
"RTN","DDEG",359,0)
 .. S X=Y,Y=$P(X,">") F I=2:1:$L(X,">") S Y=Y_"&gt;"_$P(X,">",I)
"RTN","DDEG",360,0)
 .. S X=Y,Y=$P(X,"'") F I=2:1:$L(X,"'") S Y=Y_"&apos;"_$P(X,"'",I)
"RTN","DDEG",361,0)
 .. S X=Y,Y=$P(X,QOT) F I=2:1:$L(X,QOT) S Y=Y_"&quot;"_$P(X,QOT,I)
"RTN","DDEG",362,0)
 . I X["]]>" D  S X=Y ;p16 strip end brackets from transcription upload
"RTN","DDEG",363,0)
 .. S Y=$P(X,"]]>") F I=2:1:$L(X,"]]>") S Y=Y_$P(X,"]]>",I)
"RTN","DDEG",364,0)
 . S Y="<![CDATA["_X_"]]>"
"RTN","DDEG",365,0)
 Q X
"RTN","DDEG",366,0)
 ;
"RTN","DDEG",367,0)
PREPROC(DIENTY) ; -- pre-processing logic
"RTN","DDEG",368,0)
 N X
"RTN","DDEG",369,0)
 S X=$G(^DDE(+DIENTY,2)) X:X'="" X
"RTN","DDEG",370,0)
 Q
"RTN","DDEG",371,0)
 ;
"RTN","DDEG",372,0)
IENPROC ; -- IEN processing logic
"RTN","DDEG",373,0)
 ; setting DDEOUT will cause this record (IEN) to not be returned
"RTN","DDEG",374,0)
 N X
"RTN","DDEG",375,0)
 S X=$G(^DDE(+DIENTY,4)) X:X'="" X
"RTN","DDEG",376,0)
 Q
"RTN","DDEG",377,0)
 ;
"RTN","DDEG",378,0)
ITMPROC ; -- ITEM processing logic
"RTN","DDEG",379,0)
 ; setting DDEOUT will cause this item to not be returned
"RTN","DDEG",380,0)
 N X
"RTN","DDEG",381,0)
 S X=$G(^DDE(+DIENTY,1,+ITM,6)) X:X'="" X
"RTN","DDEG",382,0)
 Q
"RTN","DDEG",383,0)
 ;
"RTN","DDEG",384,0)
POST(DIENTY) ; -- post-processing logic
"RTN","DDEG",385,0)
 N X
"RTN","DDEG",386,0)
 S X=$G(^DDE(+DIENTY,3)) X:X'="" X
"RTN","DDEG",387,0)
 Q
"RTN","DDEOPT")
0^2^B885922^B794105
"RTN","DDEOPT",1,0)
DDEOPT ;SPFO/RAM - DDE OPTIONS ;AUG 1, 2018
"RTN","DDEOPT",2,0)
 ;;22.2;VA FileMan;**9,16**;;Build 10;Build 42
"RTN","DDEOPT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDEOPT",4,0)
 ;
"RTN","DDEOPT",5,0)
0 S DIC="^DOPT(""DDE"","
"RTN","DDEOPT",6,0)
 G OPT:$D(^DOPT("DDE",3)) S ^(0)="ENTITY MAPPING OPTION^1.0" K ^("B")
"RTN","DDEOPT",7,0)
 F X=1:1:3 S ^DOPT("DDE",X,0)=$P($T(@X),";;",2)
"RTN","DDEOPT",8,0)
 S DIK=DIC D IXALL^DIK
"RTN","DDEOPT",9,0)
OPT ;
"RTN","DDEOPT",10,0)
 S DIC(0)="AEQIZ" D ^DIC G Q:Y<0 S DI=+Y D EN G 0
"RTN","DDEOPT",11,0)
 ;
"RTN","DDEOPT",12,0)
EN ;Entry point for all data access control options
"RTN","DDEOPT",13,0)
 D @DI W !!
"RTN","DDEOPT",14,0)
Q K %,DI,DIC,DIK,X,Y Q
"RTN","DDEOPT",15,0)
 ;
"RTN","DDEOPT",16,0)
1 ;;ENTITY ENTER/EDIT
"RTN","DDEOPT",17,0)
 G EN^DDE1A
"RTN","DDEOPT",18,0)
 ;
"RTN","DDEOPT",19,0)
2 ;;INQUIRE TO ENTITY FILE
"RTN","DDEOPT",20,0)
 D EN^DDEPRT
"RTN","DDEOPT",21,0)
 Q
"RTN","DDEOPT",22,0)
3 ;;AUTO GEN ENTITY FOR A DD #
"RTN","DDEOPT",23,0)
 D MAIN^DDEMAP
"RTN","DDEOPT",24,0)
 Q
"RTN","DDEPRT")
0^3^B48500922^n/a
"RTN","DDEPRT",1,0)
DDEPRT ;SLC/MKB -- Entity Print Utilities ;09/18/18 4:36pm
"RTN","DDEPRT",2,0)
 ;;22.2;VA FileMan;**16**;Jan 05, 2016;Build 10
"RTN","DDEPRT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDEPRT",4,0)
 ;
"RTN","DDEPRT",5,0)
 ; External References          DBIA#
"RTN","DDEPRT",6,0)
 ; -------------------          -----
"RTN","DDEPRT",7,0)
 ; %ZIS                         10086
"RTN","DDEPRT",8,0)
 ; %ZTLOAD                      10063
"RTN","DDEPRT",9,0)
 ; XLFDT                        10103
"RTN","DDEPRT",10,0)
 ; XLFSTR                       10104
"RTN","DDEPRT",11,0)
 ;
"RTN","DDEPRT",12,0)
EN ; -- enter here to print a SDA entity
"RTN","DDEPRT",13,0)
 N DDENT,DDEFMT
"RTN","DDEPRT",14,0)
 D ENTITY(.DDENT) Q:"^"[DDENT
"RTN","DDEPRT",15,0)
 S DDEFMT=$$FORMAT Q:"^"[DDEFMT
"RTN","DDEPRT",16,0)
 ;
"RTN","DDEPRT",17,0)
 ;Device
"RTN","DDEPRT",18,0)
 S %ZIS=$S($D(^%ZTSK):"Q",1:"")
"RTN","DDEPRT",19,0)
 W ! D ^%ZIS K %ZIS I $G(POP) K POP Q
"RTN","DDEPRT",20,0)
 K POP
"RTN","DDEPRT",21,0)
 ;
"RTN","DDEPRT",22,0)
 ;Queue report?
"RTN","DDEPRT",23,0)
 I $D(IO("Q")),$D(^%ZTSK) D  G END
"RTN","DDEPRT",24,0)
 . N ZTRTN,ZTDESC,ZTSAVE
"RTN","DDEPRT",25,0)
 . S ZTRTN="ENP^DDEPRT"
"RTN","DDEPRT",26,0)
 . S ZTDESC="Report of Entity "_$P(DDENT,U,2)
"RTN","DDEPRT",27,0)
 . S ZTSAVE("DDENT")="",ZTSAVE("DDEFMT")=""
"RTN","DDEPRT",28,0)
 . D ^%ZTLOAD
"RTN","DDEPRT",29,0)
 . I $D(ZTSK)#2 W !,"Report queued!",!,"Task number: "_$G(ZTSK),!
"RTN","DDEPRT",30,0)
 . E  W !,"Report canceled!",!
"RTN","DDEPRT",31,0)
 . K ZTSK
"RTN","DDEPRT",32,0)
 . S IOP="HOME" D ^%ZIS
"RTN","DDEPRT",33,0)
 ;
"RTN","DDEPRT",34,0)
 U IO
"RTN","DDEPRT",35,0)
 ;
"RTN","DDEPRT",36,0)
ENP ; -- entry point for [queued] report
"RTN","DDEPRT",37,0)
 N DDEFN,DDEFILE,DDEDT,DDEPG,DDECRT
"RTN","DDEPRT",38,0)
 ;
"RTN","DDEPRT",39,0)
 S DDEFN=+$P($G(DDENT(0)),U,2),DDEDT=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","DDEPRT",40,0)
 S DDEFILE=$S(DDEFN:DDEFN_U_$$NAME(DDEFN),1:"")
"RTN","DDEPRT",41,0)
 S DDECRT=$E(IOST,1,2)="C-",DDEPG=0
"RTN","DDEPRT",42,0)
 K DIRUT,DUOUT,DTOUT
"RTN","DDEPRT",43,0)
 ;
"RTN","DDEPRT",44,0)
 D @("HDR"_(2-DDECRT))
"RTN","DDEPRT",45,0)
 D @DDEFMT
"RTN","DDEPRT",46,0)
END ;
"RTN","DDEPRT",47,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DDEPRT",48,0)
 E  X $G(^%ZIS("C"))
"RTN","DDEPRT",49,0)
 K DIRUT,DUOUT,DTOUT
"RTN","DDEPRT",50,0)
 Q
"RTN","DDEPRT",51,0)
 ;
"RTN","DDEPRT",52,0)
ENTITY(Y) ; -- select an entity
"RTN","DDEPRT",53,0)
 N X,DIC
"RTN","DDEPRT",54,0)
 S DIC=1.5,DIC(0)="AEQMZ" D ^DIC
"RTN","DDEPRT",55,0)
 I Y<1 S Y="^"
"RTN","DDEPRT",56,0)
 Q Y
"RTN","DDEPRT",57,0)
 ;
"RTN","DDEPRT",58,0)
FORMAT() ; -- summary or details?
"RTN","DDEPRT",59,0)
 N X,Y,DIR,DUOUT,DTOUT,DIRUT
"RTN","DDEPRT",60,0)
 S DIR(0)="SA^SUM:Summary;DET:Detailed;"
"RTN","DDEPRT",61,0)
 S DIR("A")="Print item summary or details? "
"RTN","DDEPRT",62,0)
 S DIR("?")="Select Summary for a simple list of item names in sequence"
"RTN","DDEPRT",63,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","DDEPRT",64,0)
 Q Y
"RTN","DDEPRT",65,0)
 ;
"RTN","DDEPRT",66,0)
SUM ; -- print summary of ENTity
"RTN","DDEPRT",67,0)
 N DSEQ,DITM
"RTN","DDEPRT",68,0)
 D MAIN Q:$D(DIRUT)
"RTN","DDEPRT",69,0)
 W !!,"Seq  Item                        Type Field  Sub/File   Entity"
"RTN","DDEPRT",70,0)
 W !,$$REPEAT^XLFSTR("-",79)
"RTN","DDEPRT",71,0)
 S DSEQ=0 F  S DSEQ=$O(^DDE(+DDENT,1,"SEQ",DSEQ)) Q:'DSEQ  D  Q:$D(DIRUT)
"RTN","DDEPRT",72,0)
 . S DITM=0 F  S DITM=$O(^DDE(+DDENT,1,"SEQ",DSEQ,DITM)) Q:'DITM  D LINE(DITM) Q:$D(DIRUT)
"RTN","DDEPRT",73,0)
 Q
"RTN","DDEPRT",74,0)
 ;
"RTN","DDEPRT",75,0)
LINE(DA) ; -- print single item row
"RTN","DDEPRT",76,0)
 N X0 S X0=$G(^DDE(+DDENT,1,DA,0))
"RTN","DDEPRT",77,0)
 D PG Q:$D(DIRUT)
"RTN","DDEPRT",78,0)
 W !,$P(X0,U,2),?5,$P(X0,U),?35,$P(X0,U,3),$$RJ^XLFSTR($P(X0,U,5),7),"  ",$P(X0,U,4)
"RTN","DDEPRT",79,0)
 W:$P(X0,U,8) ?56,$E($P($G(^DDE(+$P(X0,U,8),0)),U),1,24)
"RTN","DDEPRT",80,0)
 ; look for complex items
"RTN","DDEPRT",81,0)
 I $P(X0,U,3)="C" D
"RTN","DDEPRT",82,0)
 . N CSEQ,CITM
"RTN","DDEPRT",83,0)
 . S CSEQ=0 F  S CSEQ=$O(^DDE(+DDENT,1,DA,3,"B",CSEQ)) Q:CSEQ<1  D
"RTN","DDEPRT",84,0)
 .. S CITM=0 F  S CITM=$O(^DDE(+DDENT,1,DA,3,"B",CSEQ,CITM)) Q:CITM<1  D
"RTN","DDEPRT",85,0)
 ... S CNM=$P($G(^DDE(+DDENT,1,DA,3,CITM,0)),U,2) Q:CNM=""
"RTN","DDEPRT",86,0)
 ... S CDA=$O(^DDE(+DDENT,1,"B",CNM,0)) D LINE(CDA)
"RTN","DDEPRT",87,0)
 Q
"RTN","DDEPRT",88,0)
 ;
"RTN","DDEPRT",89,0)
DET ; -- print details of ENTity
"RTN","DDEPRT",90,0)
 N DDELN,DSEQ,DITM
"RTN","DDEPRT",91,0)
 D DESC Q:$D(DIRUT)
"RTN","DDEPRT",92,0)
 D MAIN Q:$D(DIRUT)
"RTN","DDEPRT",93,0)
 W !!,"Seq     Item",!,"Number  Properties",!,"------  ----------"
"RTN","DDEPRT",94,0)
 S DSEQ=0 F  S DSEQ=$O(^DDE(+DDENT,1,"SEQ",DSEQ)) Q:'DSEQ  D  Q:$D(DIRUT)
"RTN","DDEPRT",95,0)
 . S DITM=0 F  S DITM=$O(^DDE(+DDENT,1,"SEQ",DSEQ,DITM)) Q:'DITM  D ITEM(DITM,DSEQ) Q:$D(DIRUT)
"RTN","DDEPRT",96,0)
 Q
"RTN","DDEPRT",97,0)
 ;
"RTN","DDEPRT",98,0)
DESC ; -- description
"RTN","DDEPRT",99,0)
 N I S I=0
"RTN","DDEPRT",100,0)
 F  S I=$O(^DDE(+DDENT,19,I)) Q:I<1  D PG Q:$D(DIRUT)  W !,$G(^(I,0))
"RTN","DDEPRT",101,0)
 Q
"RTN","DDEPRT",102,0)
 ;
"RTN","DDEPRT",103,0)
MAIN ; -- main Entity properties
"RTN","DDEPRT",104,0)
 N X0 S X0=$G(DDENT(0)) D PG Q:$D(DIRUT)
"RTN","DDEPRT",105,0)
 W !!," DISPLAY NAME: "_$G(^DDE(+DDENT,.1))
"RTN","DDEPRT",106,0)
 D PG Q:$D(DIRUT)
"RTN","DDEPRT",107,0)
 W !!,"      SORT BY: "_$P(X0,U,3)
"RTN","DDEPRT",108,0)
 W ?40,"DATA MODEL: "_$S($P(X0,U,6)="S":"SDA",$P(X0,U,6)="F":"FHIR",1:"")
"RTN","DDEPRT",109,0)
 D PG Q:$D(DIRUT)
"RTN","DDEPRT",110,0)
 W !,"    FILTER BY: "_$P(X0,U,4)
"RTN","DDEPRT",111,0)
 W ?41,"READ ONLY: "_$S($P(X0,U,5):"YES",1:"NO")
"RTN","DDEPRT",112,0)
 D PG Q:$D(DIRUT)
"RTN","DDEPRT",113,0)
 D MCODE("       SCREEN: ",$G(^DDE(+DDENT,5.1))) Q:$D(DIRUT)
"RTN","DDEPRT",114,0)
 D PG Q:$D(DIRUT)  W !,"QUERY ROUTINE: "_$G(^DDE(+DDENT,5)),!
"RTN","DDEPRT",115,0)
 D MCODE(" ENTRY ACTION: ",$G(^DDE(+DDENT,2))) Q:$D(DIRUT)
"RTN","DDEPRT",116,0)
 D MCODE("    ID ACTION: ",$G(^DDE(+DDENT,4))) Q:$D(DIRUT)
"RTN","DDEPRT",117,0)
 D MCODE("  EXIT ACTION: ",$G(^DDE(+DDENT,3))) Q:$D(DIRUT)
"RTN","DDEPRT",118,0)
 Q
"RTN","DDEPRT",119,0)
 ;
"RTN","DDEPRT",120,0)
ITEM(DA,NUM,LVL) ; -- print single item
"RTN","DDEPRT",121,0)
 N X0,X1,TYPE,FN,FLD,TAB,CDA,CNM,I,NM
"RTN","DDEPRT",122,0)
 S LVL=+$G(LVL),TAB=$S(LVL:$$REPEAT^XLFSTR(" ",(LVL*9)),1:"")
"RTN","DDEPRT",123,0)
 S X0=$G(^DDE(+DDENT,1,DA,0)),X1=$G(^(1)),TYPE=$P(X0,U,3)
"RTN","DDEPRT",124,0)
 D PG Q:$D(DIRUT)  W !!,TAB,$$LJ^XLFSTR($G(NUM),9),"NAME:    "_$P(X0,U)
"RTN","DDEPRT",125,0)
 S TAB=TAB_"         "
"RTN","DDEPRT",126,0)
 D PG Q:$D(DIRUT)  W !,TAB,"TYPE:    "_$$TYPE(TYPE,+X1)
"RTN","DDEPRT",127,0)
 ;
"RTN","DDEPRT",128,0)
 S FN=$P(X0,U,4),FLD=$P(X0,U,5) I FLD D  Q:$D(DIRUT)
"RTN","DDEPRT",129,0)
 . D PG Q:$D(DIRUT)
"RTN","DDEPRT",130,0)
 . W !,TAB,"FIELD:   "_$$GET1^DID(FN,FLD,,"LABEL")_" (#"_FLD_")"
"RTN","DDEPRT",131,0)
 . I $P(X0,U,6) D  ;extended ptr
"RTN","DDEPRT",132,0)
 .. N GBL S GBL=U_$$GET1^DID(FN,FLD,,"POINTER")_"0)"
"RTN","DDEPRT",133,0)
 .. S FN=+$P(@GBL,U,2),FLD=$P(X0,U,6)
"RTN","DDEPRT",134,0)
 .. W " > "_$$GET1^DID(FN,FLD,,"LABEL")_" (#"_FLD_")"
"RTN","DDEPRT",135,0)
 . I $P(X0,U,7) W " [internal]"
"RTN","DDEPRT",136,0)
 . I TYPE="W",$P(X0,U,9) W " [word wrap]"
"RTN","DDEPRT",137,0)
 . Q:FN=+DDEFILE
"RTN","DDEPRT",138,0)
 . D PG Q:$D(DIRUT)  W !,TAB,"          in "_$$NAME(FN)_" (#"_FN_")"
"RTN","DDEPRT",139,0)
 ;
"RTN","DDEPRT",140,0)
 I 'FLD,TYPE="L",FN,FN'=+DDEFILE D  Q:$D(DIRUT)
"RTN","DDEPRT",141,0)
 . I +X1=1 D PG Q:$D(DIRUT)  W !,TAB,"FILE:    "_$$NAME(FN)_" (#"_FN_")"
"RTN","DDEPRT",142,0)
 . I +X1=2 D PG Q:$D(DIRUT)  W !,TAB,"SUBFILE: "_$$NAME(FN)_" (#"_FN_")"
"RTN","DDEPRT",143,0)
 . I $L($P(X1,U,3)) D PG Q:$D(DIRUT)  W !,TAB,"XREF:    "_$P(X1,U,3)
"RTN","DDEPRT",144,0)
 . I $L($P(X1,U,4)) D PG Q:$D(DIRUT)  W !,TAB,"FILTER:  "_$P(X1,U,4)
"RTN","DDEPRT",145,0)
 ;
"RTN","DDEPRT",146,0)
 I $L($G(^DDE(+DDENT,1,DA,6))) D MCODE(TAB_"ACTION:  ",^(6)) Q:$D(DIRUT)
"RTN","DDEPRT",147,0)
 I TYPE="F" D:$L($G(^DDE(+DDENT,1,DA,2)))  Q
"RTN","DDEPRT",148,0)
 . D PG Q:$D(DIRUT)
"RTN","DDEPRT",149,0)
 . W !,TAB,"VALUE:   "_^DDE(+DDENT,1,DA,2)
"RTN","DDEPRT",150,0)
 I $L($G(^DDE(+DDENT,1,DA,4))) D MCODE(TAB_"XFORM:   ",^(4)) Q:$D(DIRUT)
"RTN","DDEPRT",151,0)
 I $P(X0,U,8) D PG Q:$D(DIRUT)  W !,TAB,"ENTITY:  "_$P($G(^DDE(+$P(X0,U,8),0)),U)
"RTN","DDEPRT",152,0)
 I TYPE="L",$L($P(X1,U,2)) D PG Q:$D(DIRUT)  W !,TAB,"TAG:     "_$P(X1,U,2) Q:X1>2
"RTN","DDEPRT",153,0)
 ;
"RTN","DDEPRT",154,0)
 I TYPE="C"!(TYPE="L"&(+X1=3)) D  Q:$D(DIRUT)
"RTN","DDEPRT",155,0)
 . D PG Q:$D(DIRUT)  W !!,TAB,"Group    Item"
"RTN","DDEPRT",156,0)
 . D PG Q:$D(DIRUT)  W !,TAB,"Order    Properties"
"RTN","DDEPRT",157,0)
 . D PG Q:$D(DIRUT)  W !,TAB,"-----    ----------"
"RTN","DDEPRT",158,0)
 . S CSEQ=0 F  S CSEQ=$O(^DDE(+DDENT,1,DA,3,"B",CSEQ)) Q:'CSEQ  D
"RTN","DDEPRT",159,0)
 .. S I=$O(^DDE(+DDENT,1,DA,3,"B",CSEQ,0))
"RTN","DDEPRT",160,0)
 .. S NM=$P(^DDE(+DDENT,1,DA,3,I,0),U,2) Q:NM=""
"RTN","DDEPRT",161,0)
 .. S CDA=+$O(^DDE(+DDENT,1,"B",NM,0))
"RTN","DDEPRT",162,0)
 .. I CDA<1!'$D(^DDE(+DDENT,1,CDA,0)) Q
"RTN","DDEPRT",163,0)
 .. D ITEM(CDA,CSEQ,(LVL+1))
"RTN","DDEPRT",164,0)
 Q
"RTN","DDEPRT",165,0)
 ;
"RTN","DDEPRT",166,0)
TYPE(X,L) ; -- return display name of item type X
"RTN","DDEPRT",167,0)
 N Y S X=$G(X),Y=""
"RTN","DDEPRT",168,0)
 I X="I" S Y="ID"
"RTN","DDEPRT",169,0)
 I X="F" S Y="FIXED STRING"
"RTN","DDEPRT",170,0)
 I X="W" S Y="FIELD/WP"
"RTN","DDEPRT",171,0)
 I X="S" S Y="FIELD"
"RTN","DDEPRT",172,0)
 I X="C" S Y="GROUP"
"RTN","DDEPRT",173,0)
 I X="E" S Y="ENTITY"
"RTN","DDEPRT",174,0)
 I X="L" S Y="LIST",L=+$G(L) D
"RTN","DDEPRT",175,0)
 . S Y=$S(L=1:"FILE ",L=2:"SUB-FILE ",L=3:"GROUP AS A ",1:"")_Y
"RTN","DDEPRT",176,0)
 Q Y
"RTN","DDEPRT",177,0)
 ;
"RTN","DDEPRT",178,0)
NAME(NUM) ; -- return name of sub/file
"RTN","DDEPRT",179,0)
 Q $O(^DD(+$G(NUM),0,"NM",""))
"RTN","DDEPRT",180,0)
 ;
"RTN","DDEPRT",181,0)
MCODE(CAPTION,CODE) ; -- print code fields
"RTN","DDEPRT",182,0)
 N WIDTH S WIDTH=79-$L(CAPTION)
"RTN","DDEPRT",183,0)
 D PG Q:$D(DIRUT)
"RTN","DDEPRT",184,0)
 W !,CAPTION,$E(CODE,1,WIDTH) Q:$L(CODE)'>WIDTH
"RTN","DDEPRT",185,0)
 S CAPTION=$$REPEAT^XLFSTR(" ",$L(CAPTION))
"RTN","DDEPRT",186,0)
 F  S CODE=$E(CODE,WIDTH+1,999) Q:CODE=""  D PG Q:$D(DIRUT)  W !,CAPTION,$E(CODE,1,WIDTH)
"RTN","DDEPRT",187,0)
 Q
"RTN","DDEPRT",188,0)
 ;
"RTN","DDEPRT",189,0)
PG ; -- check line count for new page
"RTN","DDEPRT",190,0)
 I $Y+3'<IOSL D HEADER Q:$D(DIRUT)
"RTN","DDEPRT",191,0)
 Q
"RTN","DDEPRT",192,0)
 ;
"RTN","DDEPRT",193,0)
HEADER ; -- all headers except first
"RTN","DDEPRT",194,0)
 I DDECRT D  Q:$D(DIRUT)
"RTN","DDEPRT",195,0)
 . N DIR,X,Y
"RTN","DDEPRT",196,0)
 . S DIR(0)="E" W ! D ^DIR
"RTN","DDEPRT",197,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DIRUT)=1 Q
"RTN","DDEPRT",198,0)
HDR1 ;first header for CRTs
"RTN","DDEPRT",199,0)
 W @IOF
"RTN","DDEPRT",200,0)
HDR2 ;first header for non-CRTs
"RTN","DDEPRT",201,0)
 N X1,X2,Y S DDEPG=$G(DDEPG)+1
"RTN","DDEPRT",202,0)
 S X1="ENTITY: "_$P(DDENT,U,2)_" (#"_+DDENT_")"
"RTN","DDEPRT",203,0)
 S X2="  FILE: "_$P(DDEFILE,U,2)_" (#"_+DDEFILE_")"
"RTN","DDEPRT",204,0)
 S Y=DDEDT_"   PAGE "_DDEPG
"RTN","DDEPRT",205,0)
 W X1,!,X2,$$RJ^XLFSTR(Y,79-$L(X2))
"RTN","DDEPRT",206,0)
 W !,$$REPEAT^XLFSTR("-",79)
"RTN","DDEPRT",207,0)
 Q
"UP",1.5,1.51,-1)
1.5^1
"UP",1.5,1.51,0)
1.51
"VER")
8.0^22.2
"^DD",1.5,1.5,2,0)
GET ENTRY ACTION^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,2,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,2,9)
@
"^DD",1.5,1.5,2,21,0)
^^8^8^3181120^
"^DD",1.5,1.5,2,21,1,0)
This is code that will be executed prior to any other processing for the 
"^DD",1.5,1.5,2,21,2,0)
GET method. If you set any additional variables here for use inside the 
"^DD",1.5,1.5,2,21,3,0)
Entity, remember to kill them in the GET POST PROCESSING.
"^DD",1.5,1.5,2,21,4,0)
 
"^DD",1.5,1.5,2,21,5,0)
If this Entity is being processed inside another one, the local variable 
"^DD",1.5,1.5,2,21,6,0)
ID holds the string that the parent entity will be passing into this one 
"^DD",1.5,1.5,2,21,7,0)
(i.e., a pointer from a field value that is being expanded into a full 
"^DD",1.5,1.5,2,21,8,0)
coded element by this entity).
"^DD",1.5,1.5,2,"DT")
3190522
"^DD",1.5,1.5,3,0)
GET EXIT ACTION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,3,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,3,9)
@
"^DD",1.5,1.5,3,21,0)
^^3^3^3181120^
"^DD",1.5,1.5,3,21,1,0)
This is code that will be executed after all other processing for the
"^DD",1.5,1.5,3,21,2,0)
GET method. Be sure to kill any variables set in the GET PRE PROCESSING 
"^DD",1.5,1.5,3,21,3,0)
field.
"^DD",1.5,1.5,3,"DT")
3190522
"^DD",1.5,1.5,4,0)
GET ID ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,4,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,4,9)
@
"^DD",1.5,1.5,4,21,0)
^^5^5^3181120^
"^DD",1.5,1.5,4,21,1,0)
This is code that will be executed for each record, to identify or
"^DD",1.5,1.5,4,21,2,0)
validate it. Local variable DIEN contains the id value or string passed 
"^DD",1.5,1.5,4,21,3,0)
into this Entity to operate on.
"^DD",1.5,1.5,4,21,4,0)
 
"^DD",1.5,1.5,4,21,5,0)
Set DDEOUT=1 to skip or omit this entire record from the results.
"^DD",1.5,1.5,4,"DT")
3190522
"^DD",1.5,1.5,6,0)
PUT ENTRY ACTION^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,6,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,6,9)
@
"^DD",1.5,1.5,6,21,0)
^.001^2^2^3180208^^^^
"^DD",1.5,1.5,6,21,1,0)
This is code that will be executed prior to any other processing for the
"^DD",1.5,1.5,6,21,2,0)
PUT method.
"^DD",1.5,1.5,6,"DT")
3190522
"^DD",1.5,1.5,7,0)
PUT EXIT ACTION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,7,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,7,9)
@
"^DD",1.5,1.5,7,21,0)
^.001^2^2^3180208^^^
"^DD",1.5,1.5,7,21,1,0)
This is code that will be executed after all other processing for the
"^DD",1.5,1.5,7,21,2,0)
PUT method.
"^DD",1.5,1.5,7,"DT")
3190522
"^DD",1.5,1.5,8,0)
PUT ID ACTION^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,8,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,8,9)
@
"^DD",1.5,1.5,8,21,0)
^.001^2^2^3180208^^^
"^DD",1.5,1.5,8,21,1,0)
This is code that will be executed for each record, to identify or
"^DD",1.5,1.5,8,21,2,0)
validate it.
"^DD",1.5,1.5,8,"DT")
3190522
"^DD",1.5,1.5,10,0)
PUT CREATE ACTION^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,10,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,10,9)
@
"^DD",1.5,1.5,10,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,10,21,1,0)
This is code that will be executed whenever a new record is created via
"^DD",1.5,1.5,10,21,2,0)
the PUT method.
"^DD",1.5,1.5,10,"DT")
3190522
"^DD",1.5,1.5,11,0)
DELETE ENTRY ACTION^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,11,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,11,9)
@
"^DD",1.5,1.5,11,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,11,21,1,0)
This is code that will be executed prior to any other processing for the
"^DD",1.5,1.5,11,21,2,0)
DELETE method.
"^DD",1.5,1.5,11,"DT")
3190522
"^DD",1.5,1.5,12,0)
DELETE EXIT ACTION^K^^12;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,12,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,12,9)
@
"^DD",1.5,1.5,12,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,12,21,1,0)
This is code that will be executed after all other processing for the
"^DD",1.5,1.5,12,21,2,0)
DELETE method.
"^DD",1.5,1.5,12,"DT")
3190522
"^DD",1.5,1.5,13,0)
DELETE ID ACTION^K^^13;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,13,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,13,9)
@
"^DD",1.5,1.5,13,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,13,21,1,0)
This is code that will be executed for each record, to identify or
"^DD",1.5,1.5,13,21,2,0)
validate it.
"^DD",1.5,1.5,13,"DT")
3190522
"^DD",1.5,1.5,14,0)
POST ENTRY ACTION^K^^14;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,14,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,14,9)
@
"^DD",1.5,1.5,14,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,14,21,1,0)
This is code that will be executed prior to any other processing for the
"^DD",1.5,1.5,14,21,2,0)
POST method.
"^DD",1.5,1.5,14,"DT")
3190522
"^DD",1.5,1.5,15,0)
POST EXIT ACTION^K^^15;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,15,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,15,9)
@
"^DD",1.5,1.5,15,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,15,21,1,0)
This is code that will be executed after all other processing for the
"^DD",1.5,1.5,15,21,2,0)
POST method.
"^DD",1.5,1.5,15,"DT")
3190522
"^DD",1.5,1.5,16,0)
POST ID ACTION^K^^16;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,16,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,16,9)
@
"^DD",1.5,1.5,16,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,16,21,1,0)
This is code that will be executed for each record, to identify or
"^DD",1.5,1.5,16,21,2,0)
validate it.
"^DD",1.5,1.5,16,"DT")
3190522
"^DD",1.5,1.5,18,0)
POST CREATE ACTION^K^^18;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,18,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,18,9)
@
"^DD",1.5,1.5,18,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,18,21,1,0)
This is code that will be executed whenever a new record is created via
"^DD",1.5,1.5,18,21,2,0)
the POST method.
"^DD",1.5,1.5,18,"DT")
3190522
"^DD",1.5,1.51,6,0)
GET ACTION^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,6,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,6,9)
@
"^DD",1.5,1.51,6,21,0)
^.001^18^18^3190610^^^^
"^DD",1.5,1.51,6,21,1,0)
This is code that will be executed when extracting this item from VistA.
"^DD",1.5,1.51,6,21,2,0)
It may do additional set up tasks for non-simple elements, or even
"^DD",1.5,1.51,6,21,3,0)
create the return value itself for simple fields that cannot be pulled
"^DD",1.5,1.51,6,21,4,0)
directly from VistA.
"^DD",1.5,1.51,6,21,5,0)
 
"^DD",1.5,1.51,6,21,6,0)
At the time this code is executed within ^DDE, the following variables 
"^DD",1.5,1.51,6,21,7,0)
may be referenced:
"^DD",1.5,1.51,6,21,8,0)
  TAG   = name of property (XML or JSON tag)
"^DD",1.5,1.51,6,21,9,0)
  IEN   = internal entry number of record, or the string being processed
"^DD",1.5,1.51,6,21,10,0)
  FILE  = VistA source sub/file number
"^DD",1.5,1.51,6,21,11,0)
  FIELD = VistA source field number
"^DD",1.5,1.51,6,21,12,0)
  
"^DD",1.5,1.51,6,21,13,0)
The variable VALUE may be returned as the value of this property. If 
"^DD",1.5,1.51,6,21,14,0)
VALUE is not set here, then $$GET1^DIQ will be called using the Item's 
"^DD",1.5,1.51,6,21,15,0)
properties to determine a value.
"^DD",1.5,1.51,6,21,16,0)
  
"^DD",1.5,1.51,6,21,17,0)
If a value for this Item cannot or should not be returned, set DDEOUT=1 
"^DD",1.5,1.51,6,21,18,0)
to cause ^DDE to quit the item and go on to the next one.
"^DD",1.5,1.51,6,"DT")
3190522
"^DD",1.5,1.51,7,0)
PUT ACTION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,7,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,7,9)
@
"^DD",1.5,1.51,7,21,0)
^^2^2^3180208^
"^DD",1.5,1.51,7,21,1,0)
For the PUT method, you may add logic for each item to set the value,
"^DD",1.5,1.51,7,21,2,0)
transform, validate, or enforce business logic.
"^DD",1.5,1.51,7,"DT")
3190522
"^DD",1.5,1.51,8,0)
POST ACTION^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,8,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,8,9)
@
"^DD",1.5,1.51,8,21,0)
^^2^2^3180208^
"^DD",1.5,1.51,8,21,1,0)
For the POST method, you may add logic for each Item to set the value,
"^DD",1.5,1.51,8,21,2,0)
transform, validate, or enforce business logic.
"^DD",1.5,1.51,8,"DT")
3190522
"BLD",9475,6)
^12
**END**
**END**

