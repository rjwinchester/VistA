Released XWB*1.1*63 SEQ #48
Extracted from mail message
**KIDS**:XWB*1.1*63^

**INSTALL NAME**
XWB*1.1*63
"BLD",1510,0)
XWB*1.1*63^RPC BROKER^0^3140107^y
"BLD",1510,1,0)
^^5^5^3140107^^^^
"BLD",1510,1,1,0)
See Forum for the description
"BLD",1510,1,2,0)

"BLD",1510,1,3,0)

"BLD",1510,1,4,0)

"BLD",1510,1,5,0)

"BLD",1510,4,0)
^9.64PA^^
"BLD",1510,6.3)
4
"BLD",1510,"KRN",0)
^9.67PA^9002226^22
"BLD",1510,"KRN",.4,0)
.4
"BLD",1510,"KRN",.401,0)
.401
"BLD",1510,"KRN",.402,0)
.402
"BLD",1510,"KRN",.403,0)
.403
"BLD",1510,"KRN",.5,0)
.5
"BLD",1510,"KRN",.84,0)
.84
"BLD",1510,"KRN",3.6,0)
3.6
"BLD",1510,"KRN",3.8,0)
3.8
"BLD",1510,"KRN",9.2,0)
9.2
"BLD",1510,"KRN",9.8,0)
9.8
"BLD",1510,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",1510,"KRN",9.8,"NM",1,0)
XWBVLL^^0^B17237977
"BLD",1510,"KRN",9.8,"NM","B","XWBVLL",1)

"BLD",1510,"KRN",19,0)
19
"BLD",1510,"KRN",19.1,0)
19.1
"BLD",1510,"KRN",101,0)
101
"BLD",1510,"KRN",409.61,0)
409.61
"BLD",1510,"KRN",771,0)
771
"BLD",1510,"KRN",779.2,0)
779.2
"BLD",1510,"KRN",870,0)
870
"BLD",1510,"KRN",8989.51,0)
8989.51
"BLD",1510,"KRN",8989.52,0)
8989.52
"BLD",1510,"KRN",8993,0)
8993
"BLD",1510,"KRN",8994,0)
8994
"BLD",1510,"KRN",9002226,0)
9002226
"BLD",1510,"KRN","B",.4,.4)

"BLD",1510,"KRN","B",.401,.401)

"BLD",1510,"KRN","B",.402,.402)

"BLD",1510,"KRN","B",.403,.403)

"BLD",1510,"KRN","B",.5,.5)

"BLD",1510,"KRN","B",.84,.84)

"BLD",1510,"KRN","B",3.6,3.6)

"BLD",1510,"KRN","B",3.8,3.8)

"BLD",1510,"KRN","B",9.2,9.2)

"BLD",1510,"KRN","B",9.8,9.8)

"BLD",1510,"KRN","B",19,19)

"BLD",1510,"KRN","B",19.1,19.1)

"BLD",1510,"KRN","B",101,101)

"BLD",1510,"KRN","B",409.61,409.61)

"BLD",1510,"KRN","B",771,771)

"BLD",1510,"KRN","B",779.2,779.2)

"BLD",1510,"KRN","B",870,870)

"BLD",1510,"KRN","B",8989.51,8989.51)

"BLD",1510,"KRN","B",8989.52,8989.52)

"BLD",1510,"KRN","B",8993,8993)

"BLD",1510,"KRN","B",8994,8994)

"BLD",1510,"KRN","B",9002226,9002226)

"BLD",1510,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1510,"QUES",0)
^9.62^^
"BLD",1510,"REQB",0)
^9.611^1^1
"BLD",1510,"REQB",1,0)
XWB*1.1*62^1
"BLD",1510,"REQB","B","XWB*1.1*62",1)

"MBREQ")
0
"PKG",8,-1)
1^1
"PKG",8,0)
RPC BROKER^XWB^Remote Procedure Call Broker^
"PKG",8,20,0)
^9.402P^^
"PKG",8,22,0)
^9.49I^1^1
"PKG",8,22,1,0)
1.1^2970918^2971120^7
"PKG",8,22,1,"PAH",1,0)
63^3140107
"PKG",8,22,1,"PAH",1,1,0)
^^5^5^3140107
"PKG",8,22,1,"PAH",1,1,1,0)
See Forum for the description
"PKG",8,22,1,"PAH",1,1,2,0)

"PKG",8,22,1,"PAH",1,1,3,0)

"PKG",8,22,1,"PAH",1,1,4,0)

"PKG",8,22,1,"PAH",1,1,5,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","XWBVLL")
0^1^B17237977^B17198371
"RTN","XWBVLL",1,0)
XWBVLL ;OIFO-Oakland/REM - M2M Broker Listener  ;12/29/2010
"RTN","XWBVLL",2,0)
 ;;1.1;RPC BROKER;**28,41,34,62,63**;Mar 28, 1997;Build 4
"RTN","XWBVLL",3,0)
 ;Per VHA Directive 6402, this routine should not be modified
"RTN","XWBVLL",4,0)
 ;
"RTN","XWBVLL",5,0)
 QUIT
"RTN","XWBVLL",6,0)
 ;
"RTN","XWBVLL",7,0)
 ;p41 - fixed infinite loop bug in SYSERR.
"RTN","XWBVLL",8,0)
 ;    - new Cache/VMS tcpip entry point, called from XWBSERVER_START.COM file.
"RTN","XWBVLL",9,0)
 ;p34 - added "BrokerM2M" in message type - SYSERR.
"RTN","XWBVLL",10,0)
 ;    - removed the quotes (") after 'M:' - SYSERRS.
"RTN","XWBVLL",11,0)
 ;    - new entry point to job off the listener for Cashe- STRT^XWBVLL(PORT).
"RTN","XWBVLL",12,0)
 ;    - clear locks when error occurs - SYSERR.
"RTN","XWBVLL",13,0)
 ;    - halt for read/write errors - SYSERR
"RTN","XWBVLL",14,0)
 ; 
"RTN","XWBVLL",15,0)
START(SOCKET) ;Entry point for Cache/NT
"RTN","XWBVLL",16,0)
 ;May be called directly to start the listener.
"RTN","XWBVLL",17,0)
 ;SOCKET -is the port# to start the listener on.
"RTN","XWBVLL",18,0)
 I ^%ZOSF("OS")'["OpenM" Q  ;Quits if not a Cache OS.
"RTN","XWBVLL",19,0)
 D LISTEN^%ZISTCPS(SOCKET,"SPAWN^XWBVLL")
"RTN","XWBVLL",20,0)
 Q
"RTN","XWBVLL",21,0)
 ;
"RTN","XWBVLL",22,0)
UCX ;Old entry point NOT used anymore.  *p55*
"RTN","XWBVLL",23,0)
 ;DMS/VMS UCX entry point, called from XWBSERVER_START.COM file,
"RTN","XWBVLL",24,0)
 ;listener,  % = <input variable>
"RTN","XWBVLL",25,0)
 ;IF $G(%)="" DO ^%ZTER QUIT
"RTN","XWBVLL",26,0)
 SET (IO,IO(0))="SYS$NET"
"RTN","XWBVLL",27,0)
 ; **VMS specific code, need to share device**
"RTN","XWBVLL",28,0)
 OPEN IO:(TCPDEV):60 ELSE  SET ^TMP("XWB DSM CONNECT FAILURE",$H)="" QUIT
"RTN","XWBVLL",29,0)
 USE IO
"RTN","XWBVLL",30,0)
 DO SPAWN
"RTN","XWBVLL",31,0)
 QUIT
"RTN","XWBVLL",32,0)
 ;
"RTN","XWBVLL",33,0)
STRT(PORT) ;*p34-This entry is called from option "XWB M2M CACHE LISTENER" and jobs off the listener for Cashe/NT.  Will call START.
"RTN","XWBVLL",34,0)
 ;PORT -is the port# to start the listener on.
"RTN","XWBVLL",35,0)
 J START^XWBVLL(PORT)::5 ;Used in place of TaskMan
"RTN","XWBVLL",36,0)
 Q
"RTN","XWBVLL",37,0)
 ;
"RTN","XWBVLL",38,0)
CACHEVMS ;Cache/VMS tcpip entry point, called from XWBSERVER_START.COM fLle *p41*
"RTN","XWBVLL",39,0)
 ;Update the SET (IO)="SYS$NET" *p55*
"RTN","XWBVLL",40,0)
 SET (IO,IO(0))=$S($ZV["VMS":"SYS$NET",1:$P) ;Support for both VMS/TCPIP and Linux/xinetd *p55*
"RTN","XWBVLL",41,0)
 ; **CACHE/VMS specific code**
"RTN","XWBVLL",42,0)
 OPEN IO::60 ELSE  SET ^TMP("XWB DSM CONNECT FAILURE",$H)="" QUIT
"RTN","XWBVLL",43,0)
 X "U IO:(::""-M"")" ;Packet mode like DSM
"RTN","XWBVLL",44,0)
 DO SPAWN
"RTN","XWBVLL",45,0)
 QUIT
"RTN","XWBVLL",46,0)
 ;
"RTN","XWBVLL",47,0)
SPAWN ; -- spawned process
"RTN","XWBVLL",48,0)
 NEW U,DTIME,XWBROOT,XWBAVC,XWBSTOP
"RTN","XWBVLL",49,0)
 SET U="^",DUZ=0,DUZ(0)="",DTIME=900,XWBROOT=$NA(^TMP("XWBVLL",$J)),XWBSTOP=0
"RTN","XWBVLL",50,0)
 ;
"RTN","XWBVLL",51,0)
 ; -- initialize tcp processing variables
"RTN","XWBVLL",52,0)
 DO INIT^XWBRL
"RTN","XWBVLL",53,0)
 ;
"RTN","XWBVLL",54,0)
 ; -- set error trap
"RTN","XWBVLL",55,0)
 NEW $ESTACK,$ETRAP S $ETRAP="D SYSERR^XWBVLL"
"RTN","XWBVLL",56,0)
 ;Get IP from client
"RTN","XWBVLL",57,0)
 S IO("IP")=$$GETPEER^%ZOSV()
"RTN","XWBVLL",58,0)
 ; -- change job name if possible
"RTN","XWBVLL",59,0)
 ;DO SETNM^%ZOSV("XWBSERVER: Server") ;**M2M - comment out for now
"RTN","XWBVLL",60,0)
 DO SAVDEV^%ZISUTL("XWBM2M SERVER") ;**M2M save off server IO
"RTN","XWBVLL",61,0)
 S XWBDEBUG=$$GET^XPAR("SYS","XWBDEBUG",,"Q")
"RTN","XWBVLL",62,0)
 I XWBDEBUG D LOG^XWBRPC("Server Start @ "_$$NOW^XLFDT)
"RTN","XWBVLL",63,0)
 ;check that XUS AV CODE is the 1st or 2nd RPC call P62
"RTN","XWBVLL",64,0)
 I '$$GET^XPAR("SYS","XWB62",1,"Q") F XWBAVC=1:1:2 D NXTCALL Q:DUZ
"RTN","XWBVLL",65,0)
 S XWBAVC=0
"RTN","XWBVLL",66,0)
 ; process rest of messages; loop until told to stop
"RTN","XWBVLL",67,0)
 D
"RTN","XWBVLL",68,0)
 .I '$$GET^XPAR("SYS","XWB62",1,"Q") Q:'DUZ
"RTN","XWBVLL",69,0)
 .F  DO NXTCALL QUIT:XWBSTOP
"RTN","XWBVLL",70,0)
 ;
"RTN","XWBVLL",71,0)
 ; -- final/clean tcp processing variables
"RTN","XWBVLL",72,0)
 D RMDEV^%ZISUTL("XWBM2M SERVER") ;**M2M remove server IO
"RTN","XWBVLL",73,0)
 Q
"RTN","XWBVLL",74,0)
 ;
"RTN","XWBVLL",75,0)
NXTCALL ; -- do next call
"RTN","XWBVLL",76,0)
 NEW DT,X,XWBREAD,XWBTO,XWBFIRST,XWBOK,XWBRL,BUG
"RTN","XWBVLL",77,0)
 ;
"RTN","XWBVLL",78,0)
 ; -- setup environment variables
"RTN","XWBVLL",79,0)
 SET DT=$$DT^XLFDT(),XWBREAD=20,XWBTO=36000,XWBFIRST=1 ;p63
"RTN","XWBVLL",80,0)
 ;
"RTN","XWBVLL",81,0)
 ; -- clean intake global - root is request data
"RTN","XWBVLL",82,0)
 KILL @XWBROOT
"RTN","XWBVLL",83,0)
 ;
"RTN","XWBVLL",84,0)
 ; -- set parameters for RawLink
"RTN","XWBVLL",85,0)
 SET XWBRL("TIME OUT")=36000
"RTN","XWBVLL",86,0)
 SET XWBRL("READ CHARACTERS")=20
"RTN","XWBVLL",87,0)
 SET XWBRL("FIRST READ")=1
"RTN","XWBVLL",88,0)
 SET XWBRL("STORE")=XWBROOT
"RTN","XWBVLL",89,0)
 SET XWBRL("STOP FLAG")=XWBSTOP
"RTN","XWBVLL",90,0)
 ;
"RTN","XWBVLL",91,0)
 ; -- read from socket
"RTN","XWBVLL",92,0)
 SET XWBOK=$$READ^XWBRL(XWBROOT,.XWBREAD,.XWBTO,.XWBFIRST,.XWBSTOP)
"RTN","XWBVLL",93,0)
 ;
"RTN","XWBVLL",94,0)
 ;**TESTING **REM
"RTN","XWBVLL",95,0)
 ;For debugging - hard set ^TMP(..."DEBUG") and ^TMP(..."CNT") to 1
"RTN","XWBVLL",96,0)
 I $G(^TMP("XWBM2M","DEBUG")) D
"RTN","XWBVLL",97,0)
 . S XWBCNT=(^TMP("XWBM2M","CNT"))+1
"RTN","XWBVLL",98,0)
 . M ^TMP("XWBM2MSV","REQUEST",XWBCNT)=^TMP("XWBVLL",$J)
"RTN","XWBVLL",99,0)
 . S ^TMP("XWBM2M","CNT")=XWBCNT
"RTN","XWBVLL",100,0)
 . Q
"RTN","XWBVLL",101,0)
 ;
"RTN","XWBVLL",102,0)
 ;**TESING **RWF
"RTN","XWBVLL",103,0)
 I $G(XWBDEBUG) D
"RTN","XWBVLL",104,0)
 . N CNT
"RTN","XWBVLL",105,0)
 . S CNT=$G(^TMP("XWBM2ML",$J))+1,^($J)=CNT
"RTN","XWBVLL",106,0)
 . M ^TMP("XWBM2ML",$J,CNT)=^TMP("XWBVLL",$J)
"RTN","XWBVLL",107,0)
 . Q
"RTN","XWBVLL",108,0)
 ;
"RTN","XWBVLL",109,0)
 IF 'XWBOK GOTO NXTCALLQ
"RTN","XWBVLL",110,0)
 ;
"RTN","XWBVLL",111,0)
 ; -- call request manager           
"RTN","XWBVLL",112,0)
 SET XWBOK=$$EN^XWBRM(XWBROOT)
"RTN","XWBVLL",113,0)
 ; 
"RTN","XWBVLL",114,0)
NXTCALLQ ; -- exit
"RTN","XWBVLL",115,0)
 ;
"RTN","XWBVLL",116,0)
 QUIT
"RTN","XWBVLL",117,0)
 ;
"RTN","XWBVLL",118,0)
 ; ---------------------------------------------------------------------
"RTN","XWBVLL",119,0)
 ;                                System Error Handler
"RTN","XWBVLL",120,0)
 ; ---------------------------------------------------------------------
"RTN","XWBVLL",121,0)
SYSERR ; -- send system error message
"RTN","XWBVLL",122,0)
 ;p41-don't new $Etrap, it was causing infinite loop.
"RTN","XWBVLL",123,0)
 ;p34-added "BrokerM2M" in message type in SYSERR.
"RTN","XWBVLL",124,0)
 ;   -halt for read/write errors
"RTN","XWBVLL",125,0)
 NEW XWBDAT,XWBMSG ;,$ETRAP ;*p41
"RTN","XWBVLL",126,0)
 S $ETRAP="D ^%ZTER HALT" ;If we get an error in the error handler just Halt
"RTN","XWBVLL",127,0)
 SET XWBMSG=$$EC^%ZOSV ;Get the error code
"RTN","XWBVLL",128,0)
 D ^%ZTER ;Save off the error
"RTN","XWBVLL",129,0)
 SET XWBDAT("MESSAGE TYPE")="Gov.VA.Med.BrokerM2M.Errors" ;*34
"RTN","XWBVLL",130,0)
 SET XWBDAT("ERRORS",1,"CODE")=1
"RTN","XWBVLL",131,0)
 SET XWBDAT("ERRORS",1,"ERROR TYPE")="system"
"RTN","XWBVLL",132,0)
 SET XWBDAT("ERRORS",1,"CDATA")=1
"RTN","XWBVLL",133,0)
 SET XWBDAT("ERRORS",1,"MESSAGE",1)=$P($TEXT(SYSERRS+1),";;",2)_XWBMSG
"RTN","XWBVLL",134,0)
 ;*p34-will halt for read/write errors
"RTN","XWBVLL",135,0)
 I XWBMSG["<READ>" HALT
"RTN","XWBVLL",136,0)
 DO ERROR^XWBUTL(.XWBDAT)
"RTN","XWBVLL",137,0)
 D UNWIND^%ZTER ;Return to NXTCALL loop
"RTN","XWBVLL",138,0)
 L  ;Clear locks *p34
"RTN","XWBVLL",139,0)
 Q
"RTN","XWBVLL",140,0)
 ;
"RTN","XWBVLL",141,0)
SYSERRS ; -- application errors
"RTN","XWBVLL",142,0)
 ;*p34-removed the quotes (") after 'M:'
"RTN","XWBVLL",143,0)
 ;;A system error occurred in M:
"VER")
8.0^22.0
"BLD",1510,6)
^48
**END**
**END**

