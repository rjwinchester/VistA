EMERGENCY Released MHV*1*29 SEQ #26
Extracted from mail message
**KIDS**:MHV*1.0*29^

**INSTALL NAME**
MHV*1.0*29
"BLD",8330,0)
MHV*1.0*29^My HealtheVet^0^3170719^y
"BLD",8330,1,0)
^^25^25^3170123^
"BLD",8330,1,1,0)
 
"BLD",8330,1,2,0)
 
"BLD",8330,1,3,0)
 
"BLD",8330,1,4,0)
 
"BLD",8330,1,5,0)
 
"BLD",8330,1,6,0)
 MHV Secure Messaging (SM)
"BLD",8330,1,7,0)
 
"BLD",8330,1,8,0)
 
"BLD",8330,1,9,0)
EMERGENCY Issues Fix.
"BLD",8330,1,10,0)
Issue Description:
"BLD",8330,1,11,0)
==================
"BLD",8330,1,12,0)
JAZZ Story: 409966
"BLD",8330,1,13,0)
This patch addresses the issue related to retrieving User Name Components 
"BLD",8330,1,14,0)
that contain space characters, and  enhancing the user query by 
"BLD",8330,1,15,0)
retrieving more fields from New User File #200.
"BLD",8330,1,16,0)
 
"BLD",8330,1,17,0)
 
"BLD",8330,1,18,0)
 
"BLD",8330,1,19,0)
 
"BLD",8330,1,20,0)
 
"BLD",8330,1,21,0)
 
"BLD",8330,1,22,0)
Business Impact Description:
"BLD",8330,1,23,0)
============================
"BLD",8330,1,24,0)
The  impact for the providers who are using SM cannot be added to the 
"BLD",8330,1,25,0)
SM Triage Groups if their names  contain a space.
"BLD",8330,4,0)
^9.64PA^^
"BLD",8330,6.3)
73
"BLD",8330,"ABPKG")
n
"BLD",8330,"INI")

"BLD",8330,"INID")
^^
"BLD",8330,"INIT")

"BLD",8330,"KRN",0)
^9.67PA^779.2^20
"BLD",8330,"KRN",.4,0)
.4
"BLD",8330,"KRN",.401,0)
.401
"BLD",8330,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",8330,"KRN",.402,0)
.402
"BLD",8330,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",8330,"KRN",.403,0)
.403
"BLD",8330,"KRN",.5,0)
.5
"BLD",8330,"KRN",.84,0)
.84
"BLD",8330,"KRN",3.6,0)
3.6
"BLD",8330,"KRN",3.8,0)
3.8
"BLD",8330,"KRN",9.2,0)
9.2
"BLD",8330,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",8330,"KRN",9.8,0)
9.8
"BLD",8330,"KRN",9.8,"NM",0)
^9.68A^26^6
"BLD",8330,"KRN",9.8,"NM",21,0)
MHV7B9A^^0^B54975976
"BLD",8330,"KRN",9.8,"NM",22,0)
MHV7BU^^0^B23281675
"BLD",8330,"KRN",9.8,"NM",23,0)
MHVUMRPC^^0^B58872124
"BLD",8330,"KRN",9.8,"NM",24,0)
MHVXUSR^^0^B33090883
"BLD",8330,"KRN",9.8,"NM",25,0)
MHVXPRV^^0^B8530469
"BLD",8330,"KRN",9.8,"NM",26,0)
MHV7B1M^^0^B6609616
"BLD",8330,"KRN",9.8,"NM","B","MHV7B1M",26)

"BLD",8330,"KRN",9.8,"NM","B","MHV7B9A",21)

"BLD",8330,"KRN",9.8,"NM","B","MHV7BU",22)

"BLD",8330,"KRN",9.8,"NM","B","MHVUMRPC",23)

"BLD",8330,"KRN",9.8,"NM","B","MHVXPRV",25)

"BLD",8330,"KRN",9.8,"NM","B","MHVXUSR",24)

"BLD",8330,"KRN",19,0)
19
"BLD",8330,"KRN",19,"NM",0)
^9.68A^^0
"BLD",8330,"KRN",19.1,0)
19.1
"BLD",8330,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",8330,"KRN",101,0)
101
"BLD",8330,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8330,"KRN",409.61,0)
409.61
"BLD",8330,"KRN",771,0)
771
"BLD",8330,"KRN",771,"NM",0)
^9.68A^^0
"BLD",8330,"KRN",779.2,0)
779.2
"BLD",8330,"KRN",870,0)
870
"BLD",8330,"KRN",870,"NM",0)
^9.68A^^0
"BLD",8330,"KRN",8989.51,0)
8989.51
"BLD",8330,"KRN",8989.52,0)
8989.52
"BLD",8330,"KRN",8994,0)
8994
"BLD",8330,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",8330,"KRN","B",.4,.4)

"BLD",8330,"KRN","B",.401,.401)

"BLD",8330,"KRN","B",.402,.402)

"BLD",8330,"KRN","B",.403,.403)

"BLD",8330,"KRN","B",.5,.5)

"BLD",8330,"KRN","B",.84,.84)

"BLD",8330,"KRN","B",3.6,3.6)

"BLD",8330,"KRN","B",3.8,3.8)

"BLD",8330,"KRN","B",9.2,9.2)

"BLD",8330,"KRN","B",9.8,9.8)

"BLD",8330,"KRN","B",19,19)

"BLD",8330,"KRN","B",19.1,19.1)

"BLD",8330,"KRN","B",101,101)

"BLD",8330,"KRN","B",409.61,409.61)

"BLD",8330,"KRN","B",771,771)

"BLD",8330,"KRN","B",779.2,779.2)

"BLD",8330,"KRN","B",870,870)

"BLD",8330,"KRN","B",8989.51,8989.51)

"BLD",8330,"KRN","B",8989.52,8989.52)

"BLD",8330,"KRN","B",8994,8994)

"BLD",8330,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8330,"QUES",0)
^9.62^^
"BLD",8330,"REQB",0)
^9.611^^0
"MBREQ")
0
"PKG",594,-1)
1^1
"PKG",594,0)
My HealtheVet^MHV^Support for My HealtheVet web site.
"PKG",594,20,0)
^9.402P^^
"PKG",594,22,0)
^9.49I^1^1
"PKG",594,22,1,0)
1.0^3050823^3080526^50209
"PKG",594,22,1,"PAH",1,0)
29^3170719
"PKG",594,22,1,"PAH",1,1,0)
^^25^25^3170719
"PKG",594,22,1,"PAH",1,1,1,0)
 
"PKG",594,22,1,"PAH",1,1,2,0)
 
"PKG",594,22,1,"PAH",1,1,3,0)
 
"PKG",594,22,1,"PAH",1,1,4,0)
 
"PKG",594,22,1,"PAH",1,1,5,0)
 
"PKG",594,22,1,"PAH",1,1,6,0)
 MHV Secure Messaging (SM)
"PKG",594,22,1,"PAH",1,1,7,0)
 
"PKG",594,22,1,"PAH",1,1,8,0)
 
"PKG",594,22,1,"PAH",1,1,9,0)
EMERGENCY Issues Fix.
"PKG",594,22,1,"PAH",1,1,10,0)
Issue Description:
"PKG",594,22,1,"PAH",1,1,11,0)
==================
"PKG",594,22,1,"PAH",1,1,12,0)
JAZZ Story: 409966
"PKG",594,22,1,"PAH",1,1,13,0)
This patch addresses the issue related to retrieving User Name Components 
"PKG",594,22,1,"PAH",1,1,14,0)
that contain space characters, and  enhancing the user query by 
"PKG",594,22,1,"PAH",1,1,15,0)
retrieving more fields from New User File #200.
"PKG",594,22,1,"PAH",1,1,16,0)
 
"PKG",594,22,1,"PAH",1,1,17,0)
 
"PKG",594,22,1,"PAH",1,1,18,0)
 
"PKG",594,22,1,"PAH",1,1,19,0)
 
"PKG",594,22,1,"PAH",1,1,20,0)
 
"PKG",594,22,1,"PAH",1,1,21,0)
 
"PKG",594,22,1,"PAH",1,1,22,0)
Business Impact Description:
"PKG",594,22,1,"PAH",1,1,23,0)
============================
"PKG",594,22,1,"PAH",1,1,24,0)
The  impact for the providers who are using SM cannot be added to the 
"PKG",594,22,1,"PAH",1,1,25,0)
SM Triage Groups if their names  contain a space.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","MHV7B1M")
0^26^B6609616^B5731809
"RTN","MHV7B1M",1,0)
MHV7B1M ;KUM - HL7 message builder ACK^P03 Patient Eligibility and Classificaiton ; 10/30/14 3:06pm
"RTN","MHV7B1M",2,0)
 ;;1.0;My HealtheVet;**11,29**;July 10, 2017;Build 73
"RTN","MHV7B1M",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHV7B1M",4,0)
 ;
"RTN","MHV7B1M",5,0)
 Q
"RTN","MHV7B1M",6,0)
 ;
"RTN","MHV7B1M",7,0)
ZEL(MSGROOT,DATAROOT,CNT,LEN,HL) ;  Build ZEL segments for Patient Eligibility and Classificaiton data
"RTN","MHV7B1M",8,0)
 ;
"RTN","MHV7B1M",9,0)
 ; Walks data in DATAROOT to populate MSGROOT with RDT segments
"RTN","MHV7B1M",10,0)
 ; sequentially numbered starting at CNT
"RTN","MHV7B1M",11,0)
 ;
"RTN","MHV7B1M",12,0)
 ;  Integration Agreements:
"RTN","MHV7B1M",13,0)
 ;        10103 : FMTHL7^XLFDT
"RTN","MHV7B1M",14,0)
 ;
"RTN","MHV7B1M",15,0)
 ;  Input:
"RTN","MHV7B1M",16,0)
 ;   MSGROOT - Root of array holding the message
"RTN","MHV7B1M",17,0)
 ;  DATAROOT - Root of array to hold extract data
"RTN","MHV7B1M",18,0)
 ;       CNT - Current message line counter
"RTN","MHV7B1M",19,0)
 ;       LEN - Current message length
"RTN","MHV7B1M",20,0)
 ;        HL - HL7 package array variable
"RTN","MHV7B1M",21,0)
 ;
"RTN","MHV7B1M",22,0)
 ;  Output:
"RTN","MHV7B1M",23,0)
 ;           - Populated message array
"RTN","MHV7B1M",24,0)
 ;           - Updated LEN and CNT
"RTN","MHV7B1M",25,0)
 ;
"RTN","MHV7B1M",26,0)
 ; POPULATE SEQUENCE NUMBER
"RTN","MHV7B1M",27,0)
 N I,APP,RDT
"RTN","MHV7B1M",28,0)
 D LOG^MHVUL2("MHV7B1M","BEGIN ZEL","S","TRACE")
"RTN","MHV7B1M",29,0)
 F I=1:1 Q:'$D(@DATAROOT@(I))  D
"RTN","MHV7B1M",30,0)
 . S APP=@DATAROOT@(I)
"RTN","MHV7B1M",31,0)
 . S ZEL(0)="ZEL"
"RTN","MHV7B1M",32,0)
 . I I=1  D
"RTN","MHV7B1M",33,0)
 . . S ZEL(9)=$$ESCAPE^MHV7U($P(APP,"^",1),.HL)   ;Patient Status
"RTN","MHV7B1M",34,0)
 . . S ZEL(18)=$$ESCAPE^MHV7U($P(APP,"^",2),.HL)  ;Agent Orange
"RTN","MHV7B1M",35,0)
 . . S ZEL(19)=$$ESCAPE^MHV7U($P(APP,"^",3),.HL)  ;Ionizing Radiation
"RTN","MHV7B1M",36,0)
 . . S ZEL(31)=$$ESCAPE^MHV7U($P(APP,"^",4),.HL)  ;SC Condition 
"RTN","MHV7B1M",37,0)
 . . S ZEL(20)=$$ESCAPE^MHV7U($P(APP,"^",5),.HL)  ;Environmental Contamination
"RTN","MHV7B1M",38,0)
 . . S ZEL(23)=$$ESCAPE^MHV7U($P(APP,"^",6),.HL)  ;Military Sexual Truama
"RTN","MHV7B1M",39,0)
 . . S ZEL(42)=$$ESCAPE^MHV7U($P(APP,"^",7),.HL)  ;Head/Neck Cancer
"RTN","MHV7B1M",40,0)
 . . ;Jazz 329293 - SM WLC Encounter Filed Triggers CPRS Action
"RTN","MHV7B1M",41,0)
 . . ;S ZEL(37)=$$ESCAPE^MHV7U($P(APP,"^",8),.HL)  ;Combat Veteran
"RTN","MHV7B1M",42,0)
 . . S ZEL(37)=$$ESCAPE^MHV7U($E($P($P(APP,"^",8),"~",1),1),.HL)  ;Combat Veteran
"RTN","MHV7B1M",43,0)
 . . S ZEL(44)=$$ESCAPE^MHV7U($P($P(APP,"^",9),"~",1),.HL)  ;Project 112/SHAD
"RTN","MHV7B1M",44,0)
 . I I>1  D
"RTN","MHV7B1M",45,0)
 . . S ZEL(1)=$$ESCAPE^MHV7U($P(APP,"^",1),.HL)   ;Primary/Secondary Flag  
"RTN","MHV7B1M",46,0)
 . . S ZEL(3)=$$ESCAPE^MHV7U($P(APP,"^",2),.HL)   ;Eligibility Code IEN
"RTN","MHV7B1M",47,0)
 . . S ZEL(2)=$$ESCAPE^MHV7U($P(APP,"^",3),.HL)   ;Eligibility Description
"RTN","MHV7B1M",48,0)
 . . S CNT=CNT+1
"RTN","MHV7B1M",49,0)
 . . S @MSGROOT@(CNT)=$$BLDSEG^MHV7U(.ZEL,.HL)
"RTN","MHV7B1M",50,0)
 . . S LEN=LEN+$L(@MSGROOT@(CNT))
"RTN","MHV7B1M",51,0)
 . . K ZEL
"RTN","MHV7B1M",52,0)
 . Q
"RTN","MHV7B1M",53,0)
 D LOG^MHVUL2("MHV7B1M","END ZEL","S","TRACE")
"RTN","MHV7B1M",54,0)
 Q
"RTN","MHV7B1M",55,0)
 ;
"RTN","MHV7B9A")
0^21^B54975976^B32497735
"RTN","MHV7B9A",1,0)
MHV7B9A ;WAS/DLF/KUM - HL7 message builder secure messaging ; 9/25/08 4:08pm
"RTN","MHV7B9A",2,0)
 ;;1.0;My HealtheVet;**6,10,29**;July 10, 2017;Build 73
"RTN","MHV7B9A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHV7B9A",4,0)
 ;
"RTN","MHV7B9A",5,0)
 Q
"RTN","MHV7B9A",6,0)
 ;
"RTN","MHV7B9A",7,0)
PTREL(MSGROOT,DATAROOT,CNT,LEN,HL)      ;Build ORG, STF, and AIP segments
"RTN","MHV7B9A",8,0)
 D ORG(MSGROOT,DATAROOT,.CNT,.LEN,.HL)
"RTN","MHV7B9A",9,0)
 S DATAROOT=$P(DATAROOT,",",1,3)
"RTN","MHV7B9A",10,0)
 S DATAROOT=$TR(DATAROOT,")","")_","_"""PROVIDERS"""_")"
"RTN","MHV7B9A",11,0)
 D STF(MSGROOT,DATAROOT,.CNT,.LEN,.HL)
"RTN","MHV7B9A",12,0)
 D AIP(MSGROOT,DATAROOT,.CNT,.LEN,.HL)
"RTN","MHV7B9A",13,0)
 Q
"RTN","MHV7B9A",14,0)
PID(MSGROOT,DATAROOT,CNT,LEN,HL) ;Build PID segments for user data
"RTN","MHV7B9A",15,0)
 ;
"RTN","MHV7B9A",16,0)
 ; Walks data in DATAROOT to populate MSGROOT with PID segments
"RTN","MHV7B9A",17,0)
 ; sequentially numbered starting at CNT
"RTN","MHV7B9A",18,0)
 ;
"RTN","MHV7B9A",19,0)
 ;  Integration Agreements:
"RTN","MHV7B9A",20,0)
 ;        10103 : FMTHL7^XLFDT
"RTN","MHV7B9A",21,0)
 ;
"RTN","MHV7B9A",22,0)
 ;  Input:
"RTN","MHV7B9A",23,0)
 ;   MSGROOT - Root of array holding the message
"RTN","MHV7B9A",24,0)
 ;  DATAROOT - Root of array to hold extract data
"RTN","MHV7B9A",25,0)
 ;       CNT - Current message line counter
"RTN","MHV7B9A",26,0)
 ;       LEN - Current message length
"RTN","MHV7B9A",27,0)
 ;        HL - HL7 package array variable
"RTN","MHV7B9A",28,0)
 ;
"RTN","MHV7B9A",29,0)
 ;  Output:
"RTN","MHV7B9A",30,0)
 ;           - Populated message array
"RTN","MHV7B9A",31,0)
 ;           - Updated LEN and CNT
"RTN","MHV7B9A",32,0)
 ;
"RTN","MHV7B9A",33,0)
 N I,USR,PID,NMARR,PNAME
"RTN","MHV7B9A",34,0)
 D LOG^MHVUL2("MHV7B9A","BEGIN PID","S","TRACE")
"RTN","MHV7B9A",35,0)
 F I=1:1 Q:'$D(@DATAROOT@(I))  D
"RTN","MHV7B9A",36,0)
 . S USR=@DATAROOT@(I)
"RTN","MHV7B9A",37,0)
 . S PID(0)="PID"
"RTN","MHV7B9A",38,0)
 . ; IEN+ICN+SSN
"RTN","MHV7B9A",39,0)
 . S PID(3,1,1)=$P(USR,"^")
"RTN","MHV7B9A",40,0)
 . S PID(3,2,1)=$P(USR,"^",4)
"RTN","MHV7B9A",41,0)
 . S PID(3,3,1)=$P(USR,"^",5)
"RTN","MHV7B9A",42,0)
 . S PNAME=$P(USR,"^",3)
"RTN","MHV7B9A",43,0)
 . D FMTNAME^MHV7BU(PNAME,.NMARR,.HL,"XPN")
"RTN","MHV7B9A",44,0)
 . S PID(5,1,1)=NMARR(1)
"RTN","MHV7B9A",45,0)
 . S PID(5,1,2)=NMARR(2)
"RTN","MHV7B9A",46,0)
 . S PID(5,1,3)=NMARR(3)  ;Name in HL7 Format
"RTN","MHV7B9A",47,0)
 . D LOG^MHVUL2("MHV7B9A",PNAME,"S","TRACE")
"RTN","MHV7B9A",48,0)
 . S CNT=CNT+1
"RTN","MHV7B9A",49,0)
 . S @MSGROOT@(CNT)=$$BLDSEG^MHV7U(.PID,.HL)
"RTN","MHV7B9A",50,0)
 . S LEN=LEN+$L(@MSGROOT@(CNT))
"RTN","MHV7B9A",51,0)
 . Q
"RTN","MHV7B9A",52,0)
 D LOG^MHVUL2("MHV7B9A","END PID","S","TRACE")
"RTN","MHV7B9A",53,0)
 Q
"RTN","MHV7B9A",54,0)
STF(MSGROOT,DATAROOT,CNT,LEN,HL) ;Build STF segments for provider data
"RTN","MHV7B9A",55,0)
 ;
"RTN","MHV7B9A",56,0)
 ; Walks data in DATAROOT to populate MSGROOT with STF segments
"RTN","MHV7B9A",57,0)
 ; sequentially numbered starting at CNT
"RTN","MHV7B9A",58,0)
 ;
"RTN","MHV7B9A",59,0)
 ;  Integration Agreements:
"RTN","MHV7B9A",60,0)
 ;        10103 : FMTHL7^XLFDT
"RTN","MHV7B9A",61,0)
 ;
"RTN","MHV7B9A",62,0)
 ;  Input:
"RTN","MHV7B9A",63,0)
 ;   MSGROOT - Root of array holding the message
"RTN","MHV7B9A",64,0)
 ;  DATAROOT - Root of array to hold extract data
"RTN","MHV7B9A",65,0)
 ;       CNT - Current message line counter
"RTN","MHV7B9A",66,0)
 ;       LEN - Current message length
"RTN","MHV7B9A",67,0)
 ;        HL - HL7 package array variable
"RTN","MHV7B9A",68,0)
 ;
"RTN","MHV7B9A",69,0)
 ;  Output:
"RTN","MHV7B9A",70,0)
 ;           - Populated message array
"RTN","MHV7B9A",71,0)
 ;           - Updated LEN and CNT
"RTN","MHV7B9A",72,0)
 ;
"RTN","MHV7B9A",73,0)
 N I,USR,STF,NMARR,PNAME
"RTN","MHV7B9A",74,0)
 N J,DIV,DIVS
"RTN","MHV7B9A",75,0)
 D LOG^MHVUL2("MHV7B9A","BEGIN STF","S","TRACE")
"RTN","MHV7B9A",76,0)
 F I=1:1 Q:'$D(@DATAROOT@(I))  D
"RTN","MHV7B9A",77,0)
 . S USR=@DATAROOT@(I)
"RTN","MHV7B9A",78,0)
 . S STF(0)="STF"
"RTN","MHV7B9A",79,0)
 . S STF(2)=$P(USR,"^",1)            ;IEN
"RTN","MHV7B9A",80,0)
 . S PNAME=$P(USR,"^",2)             ;Provider name
"RTN","MHV7B9A",81,0)
 . ;JAZZ#409966-Fix Names with Space in SM queries;and more User Fields
"RTN","MHV7B9A",82,0)
 . ;D FMTNAME^MHV7BU(PNAME,.NMARR,.HL,"XPN")- CHANGE THE CALL TO the HL7 formatting API
"RTN","MHV7B9A",83,0)
 . D FMTNAME3^MHV7BU(STF(2),200,.NMARR,.HL,"XPN")
"RTN","MHV7B9A",84,0)
 . ;-----------------------------------------------------------------------------------
"RTN","MHV7B9A",85,0)
 . ;USR=USRIEN_U_USRNAME_U_PRV_U_PRVCLS_U_PROVSPEC_U_REQSIG_U_PPHONE_U_SSECTION_U_TTITLE
"RTN","MHV7B9A",86,0)
 . ;
"RTN","MHV7B9A",87,0)
 . ;     (1)       (2)     (3)    (4)       (5)       (6)       (7)        (8)      (9)
"RTN","MHV7B9A",88,0)
 . ;_U_NETWKID   PERSCLS_U_PCEFDT_U_PCEXDT_U_PROVDIVS*
"RTN","MHV7B9A",89,0)
 . ;     (10)     (11)      (12)     (13)       (14) . ; * Multiples;
"RTN","MHV7B9A",90,0)
 . ;-----------------------------------------------------------------------------------
"RTN","MHV7B9A",91,0)
 . S STF(3,1,1)=$G(NMARR(1)) ;Last (Family)Name in HL7 Format
"RTN","MHV7B9A",92,0)
 . S STF(3,1,2)=$G(NMARR(2)) ;Given(First)Name in HL7 Format
"RTN","MHV7B9A",93,0)
 . S STF(3,1,3)=$G(NMARR(3)) ;Middle Name in HL7 Format
"RTN","MHV7B9A",94,0)
 . S STF(3,1,4)=$G(NMARR(4)) ;Name Suffix in HL7 Format - ;JAZZ#409966
"RTN","MHV7B9A",95,0)
 . S STF(3,1,5)=$G(NMARR(5)) ;Name Prefix in HL7 Format - ;JAZZ#409966
"RTN","MHV7B9A",96,0)
 . S STF(3,1,6)=$G(NMARR(6)) ;Degree in HL7 Format - ;JAZZ#409966 
"RTN","MHV7B9A",97,0)
 . S STF(3,1,9,4)=$P(USR,"^",10) ;NETWKID - StaffName.namecontext.alternateidentifie;JAZZ#409966
"RTN","MHV7B9A",98,0)
 . S STF(4,1)=$P(USR,"^",3) ;Staff type 1 -IF PROVIDER KEY exists='PROVIDER'-JAZZ#409966
"RTN","MHV7B9A",99,0)
 . S STF(4,3)=$P(USR,"^",6) ;Staff type 3 -REQSIG-JAZZ#409966
"RTN","MHV7B9A",100,0)
 . S STF(7)=+$$ACTIVE^XUSER($P(USR,"^",1)) ;Active/Inactive Flag-(lb)-JAZZ#409966
"RTN","MHV7B9A",101,0)
 . ;S STF(8)=$P(USR,"^",8) ;Section/Department
"RTN","MHV7B9A",102,0)
 . S STF(8,1)=$P(USR,"^",8) ;Section/Department-use 1st piece -JAZZ#409966
"RTN","MHV7B9A",103,0)
 . S STF(8,2)=$P(USR,"^",5) ;Staff type 2-PROVSPEC -JAZZ#409966
"RTN","MHV7B9A",104,0)
 . S STF(8,5)=$P(USR,"^",11) ;JobClass- PERSCLS-Current active- JAZZ#409966
"RTN","MHV7B9A",105,0)
 . S DIV="",DIVS=$P(USR,"^",14) ;DIVISIONS -JAZZ#409966 
"RTN","MHV7B9A",106,0)
 . I $G(DIVS)'="" F J=1:1 Q:$P(DIVS,"_",J)=""  D 
"RTN","MHV7B9A",107,0)
 . . S STF(9,J,2)=$P($P(DIVS,"_",J),"~",1) ;HospitalService - DIVISONS
"RTN","MHV7B9A",108,0)
 . . S STF(9,J,5)=$P($P(DIVS,"_",J),"~",2) ;HospitalService - DIVISONS-Default=yes/no/null 
"RTN","MHV7B9A",109,0)
 . S STF(10)=$P(USR,"^",7) ;Office Phone
"RTN","MHV7B9A",110,0)
 . S STF(12)="",STF(13)=""
"RTN","MHV7B9A",111,0)
 . ;InstitutionActivationDate -PCEFDT
"RTN","MHV7B9A",112,0)
 . I +($P(USR,"^",12))>0 S STF(12)=$$FMTHL7^MHV7BU($P(USR,"^",12))
"RTN","MHV7B9A",113,0)
 . ;InstitutionInactivationDate -PCEXDT
"RTN","MHV7B9A",114,0)
 . I +($P(USR,"^",13))>0 S STF(13)=$$FMTHL7^MHV7BU($P(USR,"^",13))
"RTN","MHV7B9A",115,0)
 . S STF(18)=$P(USR,"^",9) ;Job Title -JAZZ#409966
"RTN","MHV7B9A",116,0)
 . S STF(20,2)=$P(USR,"^",4) ;EmploymentStatusCode -PRVCLS-JAZZ#409966
"RTN","MHV7B9A",117,0)
 . S CNT=CNT+1
"RTN","MHV7B9A",118,0)
 . S @MSGROOT@(CNT)=$$BLDSEG^MHV7U(.STF,.HL)
"RTN","MHV7B9A",119,0)
 . S LEN=LEN+$L(@MSGROOT@(CNT))
"RTN","MHV7B9A",120,0)
 . Q
"RTN","MHV7B9A",121,0)
 D LOG^MHVUL2("MHV7B9A","END STF","S","TRACE")
"RTN","MHV7B9A",122,0)
 Q
"RTN","MHV7B9A",123,0)
AIP(MSGROOT,DATAROOT,CNT,LEN,HL)  ;Build AIP segments for team
"RTN","MHV7B9A",124,0)
 ;
"RTN","MHV7B9A",125,0)
 ; Walks data in DATAROOT to populate MSGROOT with AIP segments
"RTN","MHV7B9A",126,0)
 ; sequentially numbered starting at CNT
"RTN","MHV7B9A",127,0)
 ;
"RTN","MHV7B9A",128,0)
 ;  Integration Agreements:
"RTN","MHV7B9A",129,0)
 ;        10103 : FMTHL7^XLFDT
"RTN","MHV7B9A",130,0)
 ;
"RTN","MHV7B9A",131,0)
 ;  Input:
"RTN","MHV7B9A",132,0)
 ;   MSGROOT - Root of array holding the message
"RTN","MHV7B9A",133,0)
 ;  DATAROOT - Root of array to hold extract data
"RTN","MHV7B9A",134,0)
 ;       CNT - Current message line counter
"RTN","MHV7B9A",135,0)
 ;       LEN - Current message length
"RTN","MHV7B9A",136,0)
 ;        HL - HL7 package array variable
"RTN","MHV7B9A",137,0)
 ;
"RTN","MHV7B9A",138,0)
 ;  Output:
"RTN","MHV7B9A",139,0)
 ;           - Populated message array
"RTN","MHV7B9A",140,0)
 ;           - Updated LEN and CNT
"RTN","MHV7B9A",141,0)
 ;
"RTN","MHV7B9A",142,0)
 N I,USR,AIP
"RTN","MHV7B9A",143,0)
 S DATAROOT=$P(DATAROOT,",",1,3)
"RTN","MHV7B9A",144,0)
 S DATAROOT=$TR(DATAROOT,")","")_","_"""TEAMS"""_")"
"RTN","MHV7B9A",145,0)
 D LOG^MHVUL2("MHV7B9A","BEGIN AIP","S","TRACE")
"RTN","MHV7B9A",146,0)
 F I=1:1 Q:'$D(@DATAROOT@(I))  D
"RTN","MHV7B9A",147,0)
 . S USR=@DATAROOT@(I)
"RTN","MHV7B9A",148,0)
 . S AIP(0)="AIP"
"RTN","MHV7B9A",149,0)
 . S AIP(3)=$P(USR,"^",1)                                ;IEN
"RTN","MHV7B9A",150,0)
 . S AIP(5)=$$ESCAPE^MHV7U($P(USR,"^",2),.HL)            ;TEAM NAME
"RTN","MHV7B9A",151,0)
 . S CNT=CNT+1
"RTN","MHV7B9A",152,0)
 . S @MSGROOT@(CNT)=$$BLDSEG^MHV7U(.AIP,.HL)
"RTN","MHV7B9A",153,0)
 . S LEN=LEN+$L(@MSGROOT@(CNT))
"RTN","MHV7B9A",154,0)
 . Q
"RTN","MHV7B9A",155,0)
 D LOG^MHVUL2("MHV7B9A","END AIP","S","TRACE")
"RTN","MHV7B9A",156,0)
 Q
"RTN","MHV7B9A",157,0)
ORG(MSGROOT,DATAROOT,CNT,LEN,HL) ;Build ORG segments for clinics
"RTN","MHV7B9A",158,0)
 ;
"RTN","MHV7B9A",159,0)
 ; Walks data in DATAROOT to populate MSGROOT with ORG segments
"RTN","MHV7B9A",160,0)
 ; sequentially numbered starting at CNT
"RTN","MHV7B9A",161,0)
 ;
"RTN","MHV7B9A",162,0)
 ;  Integration Agreements:
"RTN","MHV7B9A",163,0)
 ;        10103 : FMTHL7^XLFDT
"RTN","MHV7B9A",164,0)
 ;
"RTN","MHV7B9A",165,0)
 ;  Input:
"RTN","MHV7B9A",166,0)
 ;   MSGROOT - Root of array holding the message
"RTN","MHV7B9A",167,0)
 ;  DATAROOT - Root of array to hold extract data
"RTN","MHV7B9A",168,0)
 ;       CNT - Current message line counter
"RTN","MHV7B9A",169,0)
 ;       LEN - Current message length
"RTN","MHV7B9A",170,0)
 ;        HL - HL7 package array variable
"RTN","MHV7B9A",171,0)
 ;
"RTN","MHV7B9A",172,0)
 ;  Output:
"RTN","MHV7B9A",173,0)
 ;           - Populated message array
"RTN","MHV7B9A",174,0)
 ;           - Updated LEN and CNT
"RTN","MHV7B9A",175,0)
 ;
"RTN","MHV7B9A",176,0)
 N I,USR,ORG
"RTN","MHV7B9A",177,0)
 D LOG^MHVUL2("MHV7B9A","BEGIN ORG","S","TRACE")
"RTN","MHV7B9A",178,0)
 S DATAROOT=$P(DATAROOT,",",1,3)
"RTN","MHV7B9A",179,0)
 S DATAROOT=$TR(DATAROOT,")","")_","_"""CLINICS"""_")"
"RTN","MHV7B9A",180,0)
 F I=1:1 Q:'$D(@DATAROOT@(I))  D
"RTN","MHV7B9A",181,0)
 . S USR=@DATAROOT@(I)
"RTN","MHV7B9A",182,0)
 . S ORG(0)="ORG"
"RTN","MHV7B9A",183,0)
 . S ORG(2,1,1)=$P(USR,"^",1)
"RTN","MHV7B9A",184,0)
 . S ORG(2,1,2)=$$ESCAPE^MHV7U($P(USR,"^",2),.HL)
"RTN","MHV7B9A",185,0)
 . S CNT=CNT+1
"RTN","MHV7B9A",186,0)
 . S @MSGROOT@(CNT)=$$BLDSEG^MHV7U(.ORG,.HL)
"RTN","MHV7B9A",187,0)
 . S LEN=LEN+$L(@MSGROOT@(CNT))
"RTN","MHV7B9A",188,0)
 . Q
"RTN","MHV7B9A",189,0)
 D LOG^MHVUL2("MHV7B9A","END ORG","S","TRACE")
"RTN","MHV7B9A",190,0)
 Q
"RTN","MHV7B9A",191,0)
SMORG(MSGROOT,DATAROOT,CNT,LEN,HL) ;Build ORG segments for clinics
"RTN","MHV7B9A",192,0)
 ;
"RTN","MHV7B9A",193,0)
 ; Walks data in DATAROOT to populate MSGROOT with ORG segments
"RTN","MHV7B9A",194,0)
 ; sequentially numbered starting at CNT
"RTN","MHV7B9A",195,0)
 ;
"RTN","MHV7B9A",196,0)
 ;  Input:
"RTN","MHV7B9A",197,0)
 ;   MSGROOT - Root of array holding the message
"RTN","MHV7B9A",198,0)
 ;  DATAROOT - Root of array to hold extract data
"RTN","MHV7B9A",199,0)
 ;       CNT - Current message line counter
"RTN","MHV7B9A",200,0)
 ;       LEN - Current message length
"RTN","MHV7B9A",201,0)
 ;        HL - HL7 package array variable
"RTN","MHV7B9A",202,0)
 ;
"RTN","MHV7B9A",203,0)
 ;  Output:
"RTN","MHV7B9A",204,0)
 ;           - Populated message array
"RTN","MHV7B9A",205,0)
 ;           - Updated LEN and CNT
"RTN","MHV7B9A",206,0)
 ;
"RTN","MHV7B9A",207,0)
 N I,USR,ORG
"RTN","MHV7B9A",208,0)
 D LOG^MHVUL2("MHV7B9A","BEGIN ORG","S","TRACE")
"RTN","MHV7B9A",209,0)
 S DATAROOT=$P(DATAROOT,",",1,3)
"RTN","MHV7B9A",210,0)
 F I=1:1 Q:'$D(@DATAROOT@(I))  D
"RTN","MHV7B9A",211,0)
 . S USR=@DATAROOT@(I)
"RTN","MHV7B9A",212,0)
 . S ORG(0)="ORG"
"RTN","MHV7B9A",213,0)
 . S ORG(2,1,1)=$P(USR,"^",1)
"RTN","MHV7B9A",214,0)
 . S ORG(2,1,2)=$$ESCAPE^MHV7U($P(USR,"^",2),.HL)
"RTN","MHV7B9A",215,0)
 . I $P($G(USR),"^",3)'="" S ORG(3,1,1)=$$ESCAPE^MHV7U($P(USR,"^",3),.HL)
"RTN","MHV7B9A",216,0)
 . I $P($G(USR),"^",4)'="" S ORG(3,1,2)=$$ESCAPE^MHV7U($P(USR,"^",4),.HL)
"RTN","MHV7B9A",217,0)
 . I $P($G(USR),"^",5)'="" S ORG(3,1,5)=$$ESCAPE^MHV7U($P(USR,"^",5),.HL)
"RTN","MHV7B9A",218,0)
 . S CNT=CNT+1
"RTN","MHV7B9A",219,0)
 . S @MSGROOT@(CNT)=$$BLDSEG^MHV7U(.ORG,.HL)
"RTN","MHV7B9A",220,0)
 . S LEN=LEN+$L(@MSGROOT@(CNT))
"RTN","MHV7B9A",221,0)
 . Q
"RTN","MHV7B9A",222,0)
 D LOG^MHVUL2("MHV7B9A","END ORG","S","TRACE")
"RTN","MHV7B9A",223,0)
 Q
"RTN","MHV7B9A",224,0)
PRA(MSGROOT,DATAROOT,CNT,LEN,HL)    ;Build PRA segments for providers
"RTN","MHV7B9A",225,0)
 ;
"RTN","MHV7B9A",226,0)
 ; Walks data in DATAROOT to populate MSGROOT with PRA segments
"RTN","MHV7B9A",227,0)
 ; sequentially numbered starting at CNT
"RTN","MHV7B9A",228,0)
 ;
"RTN","MHV7B9A",229,0)
 ;  Integration Agreements:
"RTN","MHV7B9A",230,0)
 ;        10103 : FMTHL7^XLFDT
"RTN","MHV7B9A",231,0)
 ;
"RTN","MHV7B9A",232,0)
 ;  Input:
"RTN","MHV7B9A",233,0)
 ;   MSGROOT - Root of array holding the message
"RTN","MHV7B9A",234,0)
 ;  DATAROOT - Root of array to hold extract data
"RTN","MHV7B9A",235,0)
 ;       CNT - Current message line counter
"RTN","MHV7B9A",236,0)
 ;       LEN - Current message length
"RTN","MHV7B9A",237,0)
 ;        HL - HL7 package array variable
"RTN","MHV7B9A",238,0)
 ;
"RTN","MHV7B9A",239,0)
 ;  Output:
"RTN","MHV7B9A",240,0)
 ;           - Populated message array
"RTN","MHV7B9A",241,0)
 ;           - Updated LEN and CNT
"RTN","MHV7B9A",242,0)
 ;
"RTN","MHV7B9A",243,0)
 N I,USR,PRA
"RTN","MHV7B9A",244,0)
 D LOG^MHVUL2("MHV7B9A","BEGIN PRA","S","TRACE")
"RTN","MHV7B9A",245,0)
 S DATAROOT=$P(DATAROOT,",",1,3)
"RTN","MHV7B9A",246,0)
 S DATAROOT=$TR(DATAROOT,")","")_","_"""PROVIDERS"""_")"
"RTN","MHV7B9A",247,0)
 F I=1:1 Q:'$D(@DATAROOT@(I))  D
"RTN","MHV7B9A",248,0)
 . S USR=@DATAROOT@(I)
"RTN","MHV7B9A",249,0)
 . S PRA(0)="PRA"
"RTN","MHV7B9A",250,0)
 . S PRA(2,1,1)=$P(USR,"^",1)   ;IEN
"RTN","MHV7B9A",251,0)
 . S PRA(2,1,2)=$P(USR,"^",2)   ;NAME
"RTN","MHV7B9A",252,0)
 . S CNT=CNT+1
"RTN","MHV7B9A",253,0)
 . S @MSGROOT@(CNT)=$$BLDSEG^MHV7U(.PRA,.HL)
"RTN","MHV7B9A",254,0)
 . S LEN=LEN+$L(@MSGROOT@(CNT))
"RTN","MHV7B9A",255,0)
 . Q
"RTN","MHV7B9A",256,0)
 D LOG^MHVUL2("MHV7B9A","END PRA","S","TRACE")
"RTN","MHV7B9A",257,0)
 Q
"RTN","MHV7BU")
0^22^B23281675^B16434586
"RTN","MHV7BU",1,0)
MHV7BU ;WAS/EFJ - HL7 message builder UTILITY ; [12/14/06 11:10am]
"RTN","MHV7BU",2,0)
 ;;1.0;My HealtheVet;**2,29**;July 10, 2017;Build 73
"RTN","MHV7BU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHV7BU",4,0)
 ;
"RTN","MHV7BU",5,0)
 ; Utilities common to message and segment builders.
"RTN","MHV7BU",6,0)
 ;
"RTN","MHV7BU",7,0)
 Q
"RTN","MHV7BU",8,0)
 ;
"RTN","MHV7BU",9,0)
PID3(PID,ICN,DFN,SSN) ;Build PID3 - Patient Identifier List
"RTN","MHV7BU",10,0)
 ;  Populates PID array with Patient Identifier List Entries for 
"RTN","MHV7BU",11,0)
 ; ICN, DFN, and SSN.
"RTN","MHV7BU",12,0)
 ;
"RTN","MHV7BU",13,0)
 ;  Integration Agreements:
"RTN","MHV7BU",14,0)
 ;        10112 : $$SITE^VASITE
"RTN","MHV7BU",15,0)
 ;
"RTN","MHV7BU",16,0)
 ;  Input:
"RTN","MHV7BU",17,0)
 ;     ICN, DFN, SSN - Identifiers
"RTN","MHV7BU",18,0)
 ;
"RTN","MHV7BU",19,0)
 ;  Output:
"RTN","MHV7BU",20,0)
 ;     PID - PID array
"RTN","MHV7BU",21,0)
 ;
"RTN","MHV7BU",22,0)
 N STATION,IDCNT
"RTN","MHV7BU",23,0)
 S STATION=$P($$SITE^VASITE,"^",3)
"RTN","MHV7BU",24,0)
 S IDCNT=0
"RTN","MHV7BU",25,0)
 I ICN'="" D
"RTN","MHV7BU",26,0)
 . S IDCNT=IDCNT+1
"RTN","MHV7BU",27,0)
 . S PID(3,IDCNT,1)=ICN                 ;Patient ID - ICN
"RTN","MHV7BU",28,0)
 . S PID(3,IDCNT,4,1)="USVHA"           ;assigning authority ID
"RTN","MHV7BU",29,0)
 . S PID(3,IDCNT,4,3)="HL70363"         ;assigning authority type
"RTN","MHV7BU",30,0)
 . S PID(3,IDCNT,5)="NI"                ;Patient ID type
"RTN","MHV7BU",31,0)
 . S PID(3,IDCNT,6,1)="VA FACILITY ID"  ;assigning facility
"RTN","MHV7BU",32,0)
 . S PID(3,IDCNT,6,2)=STATION           ;Station number
"RTN","MHV7BU",33,0)
 . S PID(3,IDCNT,6,3)="L"               ;facility ID type
"RTN","MHV7BU",34,0)
 ;
"RTN","MHV7BU",35,0)
 I DFN'="" D
"RTN","MHV7BU",36,0)
 . S IDCNT=IDCNT+1
"RTN","MHV7BU",37,0)
 . S PID(3,IDCNT,1)=DFN                 ;Patient ID - DFN
"RTN","MHV7BU",38,0)
 . S PID(3,IDCNT,4,1)="USVHA"           ;assigning authority ID
"RTN","MHV7BU",39,0)
 . S PID(3,IDCNT,4,3)="HL70363"         ;assigning authority type
"RTN","MHV7BU",40,0)
 . S PID(3,IDCNT,5)="PI"                ;Patient ID type
"RTN","MHV7BU",41,0)
 . S PID(3,IDCNT,6,1)="VA FACILITY ID"  ;assigning facility
"RTN","MHV7BU",42,0)
 . S PID(3,IDCNT,6,2)=STATION           ;Station number
"RTN","MHV7BU",43,0)
 . S PID(3,IDCNT,6,3)="L"               ;facility ID type
"RTN","MHV7BU",44,0)
 ;
"RTN","MHV7BU",45,0)
 I SSN'="" D
"RTN","MHV7BU",46,0)
 . S IDCNT=IDCNT+1
"RTN","MHV7BU",47,0)
 . S PID(3,IDCNT,1)=SSN                 ;Patient ID - SSN
"RTN","MHV7BU",48,0)
 . S PID(3,IDCNT,4,1)="USSSA"           ;assigning authority ID
"RTN","MHV7BU",49,0)
 . S PID(3,IDCNT,4,3)="HL70363"         ;assigning authority type
"RTN","MHV7BU",50,0)
 . S PID(3,IDCNT,5)="SS"                ;Patient ID type
"RTN","MHV7BU",51,0)
 . S PID(3,IDCNT,6,1)="VA FACILITY ID"  ;assigning facility
"RTN","MHV7BU",52,0)
 . S PID(3,IDCNT,6,2)=STATION           ;Station number
"RTN","MHV7BU",53,0)
 . S PID(3,IDCNT,6,3)="L"               ;facility ID type
"RTN","MHV7BU",54,0)
 Q
"RTN","MHV7BU",55,0)
 ;
"RTN","MHV7BU",56,0)
FMTNAME(NAME,SUBSEG,HL,DATATYPE) ;Format comma/space delimited name
"RTN","MHV7BU",57,0)
 ;  Populates SUBSEG array with formatted and escaped name components
"RTN","MHV7BU",58,0)
 ; based on the DATATYPE passed.  XCN types and XPN types differ in
"RTN","MHV7BU",59,0)
 ; that XCN has an ID in the first component effectively shifting the
"RTN","MHV7BU",60,0)
 ; name components by one.
"RTN","MHV7BU",61,0)
 ;
"RTN","MHV7BU",62,0)
 ;  Integration Agreements:
"RTN","MHV7BU",63,0)
 ;         3065 : NAMEFMT^XLFNAME
"RTN","MHV7BU",64,0)
 ;
"RTN","MHV7BU",65,0)
 ;  Input:
"RTN","MHV7BU",66,0)
 ;         NAME - FileMan formatted name  Ex: PATIENT,FIRST M
"RTN","MHV7BU",67,0)
 ;           HL - HL7 package array variable
"RTN","MHV7BU",68,0)
 ;     DATATYPE - HL7 data type to be formatted Ex: XCN, XPN
"RTN","MHV7BU",69,0)
 ;
"RTN","MHV7BU",70,0)
 ;  Output:
"RTN","MHV7BU",71,0)
 ;       SUBSEG - Array to hold the formatted name.
"RTN","MHV7BU",72,0)
 ;
"RTN","MHV7BU",73,0)
 ; Example Usage:
"RTN","MHV7BU",74,0)
 ;      S NAME="SMITH,BOB A"
"RTN","MHV7BU",75,0)
 ;      K NMARR
"RTN","MHV7BU",76,0)
 ;      D FMTNAME^MHV7BU(NAME,.NMARR,.HL,"XCN")
"RTN","MHV7BU",77,0)
 ;      M PD1(4,1)=NMARR
"RTN","MHV7BU",78,0)
 ;
"RTN","MHV7BU",79,0)
 N OFFSET
"RTN","MHV7BU",80,0)
 S OFFSET=(DATATYPE="XCN")
"RTN","MHV7BU",81,0)
 S NAME=$$NAMEFMT^XLFNAME(.NAME,"F","DSP")
"RTN","MHV7BU",82,0)
 S SUBSEG(1+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",1),.HL)  ;family
"RTN","MHV7BU",83,0)
 S SUBSEG(2+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",2),.HL)  ;given
"RTN","MHV7BU",84,0)
 S SUBSEG(3+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",3),.HL)  ;middle
"RTN","MHV7BU",85,0)
 S SUBSEG(4+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",4),.HL)  ;suffix
"RTN","MHV7BU",86,0)
 S SUBSEG(5+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",5),.HL)  ;prefix
"RTN","MHV7BU",87,0)
 S SUBSEG(6+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",6),.HL)  ;degree
"RTN","MHV7BU",88,0)
 Q
"RTN","MHV7BU",89,0)
 ;
"RTN","MHV7BU",90,0)
FMTNAME2(IEN,FILE,SUBSEG,HL,DATATYPE) ;Lookup and format name
"RTN","MHV7BU",91,0)
 ;  Looks up name components based on IEN and FILE passed.
"RTN","MHV7BU",92,0)
 ; Populates SUBSEG array with formatted and escaped name components
"RTN","MHV7BU",93,0)
 ; based on the DATATYPE passed.  XCN types and XPN types differ in
"RTN","MHV7BU",94,0)
 ; that XCN has an ID in the first component effectively shifting the
"RTN","MHV7BU",95,0)
 ; name components by one.
"RTN","MHV7BU",96,0)
 ;
"RTN","MHV7BU",97,0)
 ;  Integration Agreements:
"RTN","MHV7BU",98,0)
 ;         3065 : NAMEFMT^XLFNAME
"RTN","MHV7BU",99,0)
 ;
"RTN","MHV7BU",100,0)
 ;  Input:
"RTN","MHV7BU",101,0)
 ;          IEN - IEN of patient/person in FILE
"RTN","MHV7BU",102,0)
 ;         FILE - File number of file   Ex: 2 - PATIENT file
"RTN","MHV7BU",103,0)
 ;           HL - HL7 package array variable
"RTN","MHV7BU",104,0)
 ;     DATATYPE - HL7 data type to be formatted Ex: XCN, XPN
"RTN","MHV7BU",105,0)
 ;
"RTN","MHV7BU",106,0)
 ;  Output:
"RTN","MHV7BU",107,0)
 ;       SUBSEG - Array to hold the formatted name.
"RTN","MHV7BU",108,0)
 ;
"RTN","MHV7BU",109,0)
 ; Example Usage:
"RTN","MHV7BU",110,0)
 ;      K NMARR
"RTN","MHV7BU",111,0)
 ;      D FMTNAME^MHV7BU(DFN,2,.NMARR,.HL,"XPN")
"RTN","MHV7BU",112,0)
 ;      M PID(5,1)=NMARR
"RTN","MHV7BU",113,0)
 ;
"RTN","MHV7BU",114,0)
 N NAME,OFFSET
"RTN","MHV7BU",115,0)
 S OFFSET=(DATATYPE="XCN")
"RTN","MHV7BU",116,0)
 S NAME("FILE")=FILE,NAME("FIELD")=.01,NAME("IENS")=IEN_","
"RTN","MHV7BU",117,0)
 S NAME=$$NAMEFMT^XLFNAME(.NAME,"F","DSP")
"RTN","MHV7BU",118,0)
 S SUBSEG(1+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",1),.HL)  ;family
"RTN","MHV7BU",119,0)
 S SUBSEG(2+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",2),.HL)  ;given
"RTN","MHV7BU",120,0)
 S SUBSEG(3+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",3),.HL)  ;middle
"RTN","MHV7BU",121,0)
 S SUBSEG(4+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",4),.HL)  ;suffix
"RTN","MHV7BU",122,0)
 S SUBSEG(5+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",5),.HL)  ;prefix
"RTN","MHV7BU",123,0)
 S SUBSEG(6+OFFSET)=$$ESCAPE^MHV7U($P(NAME," ",6),.HL)  ;degree
"RTN","MHV7BU",124,0)
 Q
"RTN","MHV7BU",125,0)
 ;
"RTN","MHV7BU",126,0)
FMTNAME3(IEN,FILE,SUBSEG,HL,DATATYPE) ;Lookup and format name
"RTN","MHV7BU",127,0)
 ;JAZZ#409966 -NeW Function for Names with Space not showing in SM queries
"RTN","MHV7BU",128,0)
 ;========================================================================
"RTN","MHV7BU",129,0)
 ;  Looks up name components based on IEN and FILE passed.
"RTN","MHV7BU",130,0)
 ; Populates SUBSEG array with formatted and escaped name components
"RTN","MHV7BU",131,0)
 ; based on the DATATYPE passed.  XCN types and XPN types differ in
"RTN","MHV7BU",132,0)
 ; that XCN has an ID in the first component effectively shifting the
"RTN","MHV7BU",133,0)
 ; name components by one.
"RTN","MHV7BU",134,0)
 ;
"RTN","MHV7BU",135,0)
 ;  Integration Agreements:
"RTN","MHV7BU",136,0)
 ;         3065 : NAMEFMT^XLFNAME
"RTN","MHV7BU",137,0)
 ;
"RTN","MHV7BU",138,0)
 ;  Input:
"RTN","MHV7BU",139,0)
 ;          IEN - IEN of patient/person in FILE
"RTN","MHV7BU",140,0)
 ;         FILE - File number of file   Ex: 2 - PATIENT file
"RTN","MHV7BU",141,0)
 ;           HL - HL7 package array variable
"RTN","MHV7BU",142,0)
 ;     DATATYPE - HL7 data type to be formatted Ex: XCN, XPN
"RTN","MHV7BU",143,0)
 ;
"RTN","MHV7BU",144,0)
 ;  Output:
"RTN","MHV7BU",145,0)
 ;       SUBSEG - Array to hold the formatted name.
"RTN","MHV7BU",146,0)
 ;
"RTN","MHV7BU",147,0)
 ; Example Usage:
"RTN","MHV7BU",148,0)
 ;      K NMARR
"RTN","MHV7BU",149,0)
 ;      D FMTNAME^MHV7BU(DFN,2,.NMARR,.HL,"XPN")
"RTN","MHV7BU",150,0)
 ;      M PID(5,1)=NMARR
"RTN","MHV7BU",151,0)
 ;
"RTN","MHV7BU",152,0)
 N NAME,OFFSET
"RTN","MHV7BU",153,0)
 S OFFSET=(DATATYPE="XCN")
"RTN","MHV7BU",154,0)
 S NAME("FILE")=FILE,NAME("FIELD")=.01,NAME("IENS")=IEN_","
"RTN","MHV7BU",155,0)
 S NAME=$$HLNAME^XLFNAME(.NAME)
"RTN","MHV7BU",156,0)
 S SUBSEG(1+OFFSET)=$$ESCAPE^MHV7U($P(NAME,"^",1),.HL)  ;family
"RTN","MHV7BU",157,0)
 S SUBSEG(2+OFFSET)=$$ESCAPE^MHV7U($P(NAME,"^",2),.HL)  ;given
"RTN","MHV7BU",158,0)
 S SUBSEG(3+OFFSET)=$$ESCAPE^MHV7U($P(NAME,"^",3),.HL)  ;middle
"RTN","MHV7BU",159,0)
 S SUBSEG(4+OFFSET)=$$ESCAPE^MHV7U($P(NAME,"^",4),.HL)  ;suffix
"RTN","MHV7BU",160,0)
 S SUBSEG(5+OFFSET)=$$ESCAPE^MHV7U($P(NAME,"^",5),.HL)  ;prefix
"RTN","MHV7BU",161,0)
 S SUBSEG(6+OFFSET)=$$ESCAPE^MHV7U($P(NAME,"^",6),.HL)  ;degree
"RTN","MHV7BU",162,0)
 Q
"RTN","MHV7BU",163,0)
 ;
"RTN","MHV7BU",164,0)
FMTHL7(DT) ;Convert Fileman formatted dates to HL7 format
"RTN","MHV7BU",165,0)
 ; Handles imprecise dates properly because $$FMTHL7^XLFDT does not.
"RTN","MHV7BU",166,0)
 ; Strips Timezone offset
"RTN","MHV7BU",167,0)
 ;
"RTN","MHV7BU",168,0)
 ;  Integration Agreements:
"RTN","MHV7BU",169,0)
 ;        10103 : FMTHL7^XLFDT
"RTN","MHV7BU",170,0)
 ;
"RTN","MHV7BU",171,0)
 ;  Input:
"RTN","MHV7BU",172,0)
 ;     DT - Fileman formatted date/time
"RTN","MHV7BU",173,0)
 ;
"RTN","MHV7BU",174,0)
 ;  Output:  Returns HL7 formatted date/time
"RTN","MHV7BU",175,0)
 ;
"RTN","MHV7BU",176,0)
 S DT=$$FMTHL7^XLFDT(DT)
"RTN","MHV7BU",177,0)
 I $E(DT,7,8)="00" S DT=$E(DT,1,6)
"RTN","MHV7BU",178,0)
 I $E(DT,5,6)="00" S DT=$E(DT,1,4)
"RTN","MHV7BU",179,0)
 S DT=$P(DT,"-")
"RTN","MHV7BU",180,0)
 S DT=$P(DT,"+")
"RTN","MHV7BU",181,0)
 Q DT
"RTN","MHV7BU",182,0)
 ;
"RTN","MHVUMRPC")
0^23^B58872124^B53770789
"RTN","MHVUMRPC",1,0)
MHVUMRPC ;KUM/LB - myHealtheVet Management Utilities ; 6/18/2013
"RTN","MHVUMRPC",2,0)
 ;;1.0;My HealtheVet;**11,22,24,29**;July 10, 2017;Build 73
"RTN","MHVUMRPC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","MHVUMRPC",4,0)
 ;
"RTN","MHVUMRPC",5,0)
 Q
"RTN","MHVUMRPC",6,0)
 ;
"RTN","MHVUMRPC",7,0)
 ;  Integration Agreements:
"RTN","MHVUMRPC",8,0)
 ;
"RTN","MHVUMRPC",9,0)
 ;                5266 : ^SC(D0
"RTN","MHVUMRPC",10,0)
 ;                6013 : ^ECD(D0
"RTN","MHVUMRPC",11,0)
 ;                2051 : LIST^DIC
"RTN","MHVUMRPC",12,0)
 ;                6009 : ^ECJ(D0
"RTN","MHVUMRPC",13,0)
 ;                6009 : ^ECJ("AP"
"RTN","MHVUMRPC",14,0)
 ;                6010 : Event Capture API $$ELIG^ECUERPC
"RTN","MHVUMRPC",15,0)
 ;                6011 : Event Capture API $$PATCLAST^ECUERPC1
"RTN","MHVUMRPC",16,0)
 ;                6016 : Event Capture API $$SRCLST^ECUMRPC1
"RTN","MHVUMRPC",17,0)
 ;                2701 : $$GETDFN^MPIF001
"RTN","MHVUMRPC",18,0)
 ;                1874 : ^EC(725,D0
"RTN","MHVUMRPC",19,0)
 ;                1873 : Read File 721
"RTN","MHVUMRPC",20,0)
 ;                2741 : OE/RR Calls to GMPLUTL2
"RTN","MHVUMRPC",21,0)
 ;                1995 : CPT Code APIs
"RTN","MHVUMRPC",22,0)
 ;                3990 : ICD Code APIs
"RTN","MHVUMRPC",23,0)
 ;                6155 : Read access to DMMS Units in NEW PERSON File 
"RTN","MHVUMRPC",24,0)
 ;               10004 : $$GET1^DIQ
"RTN","MHVUMRPC",25,0)
 ;
"RTN","MHVUMRPC",26,0)
 Q
"RTN","MHVUMRPC",27,0)
DSSUNT(RESULTS,MHVSTRING) ;
"RTN","MHVUMRPC",28,0)
 ;
"RTN","MHVUMRPC",29,0)
 ;This broker entry point returns DSS units from file 724
"RTN","MHVUMRPC",30,0)
 ;        RPC: MHV GETDSSUNIT
"RTN","MHVUMRPC",31,0)
 ;INPUTS         MHVARY - Contains the following subscripted elements
"RTN","MHVUMRPC",32,0)
 ;                ACLNIEN   - Associated Clinic IEN (required) and PRVDUZ - Provider
"RTN","MHVUMRPC",33,0)
 ;               
"RTN","MHVUMRPC",34,0)
 ;OUTPUTS        RESULTS - Array of DSS units. Data pieces as follows:-
"RTN","MHVUMRPC",35,0)
 ;               PIECE - Description
"RTN","MHVUMRPC",36,0)
 ;                 1     IEN of Location
"RTN","MHVUMRPC",37,0)
 ;                 2     Name of Location
"RTN","MHVUMRPC",38,0)
 ;                 3     IEN of DSS Unit
"RTN","MHVUMRPC",39,0)
 ;                 4     Name of DSS Unit
"RTN","MHVUMRPC",40,0)
 ;                 5     Inactive flag (1-Yes/0-No)
"RTN","MHVUMRPC",41,0)
 ;                 6     Send to PCE flag
"RTN","MHVUMRPC",42,0)
 ;
"RTN","MHVUMRPC",43,0)
 N MHVLIEN,MHVLNAM,MHVCIEN,MHVDIEN,MHVDNAM,MHVCNT,MHVDIACT,MHVCHKF,MHVDPCE,MHVR1
"RTN","MHVUMRPC",44,0)
 N MHVR1E,MHVR1C,MHVDIV,MHVDIVN,MHVPDUZ
"RTN","MHVUMRPC",45,0)
 S MHVCNT=0
"RTN","MHVUMRPC",46,0)
 S MHVDPCE=0
"RTN","MHVUMRPC",47,0)
 ;JAZZ#409966-Fix Names with Space in SM queries
"RTN","MHVUMRPC",48,0)
 ;S MHVCIEN=+$P(MHVSTRING,"^",1)
"RTN","MHVUMRPC",49,0)
 S MHVCIEN=$P(MHVSTRING,"^",1)
"RTN","MHVUMRPC",50,0)
 I MHVCIEN='"*" S MHVCIEN=+MHVCIEN
"RTN","MHVUMRPC",51,0)
 ;--------------------------------
"RTN","MHVUMRPC",52,0)
 S MHVPDUZ=+$P(MHVSTRING,"^",2)
"RTN","MHVUMRPC",53,0)
 K ^TMP($J,"MHVDUNT")
"RTN","MHVUMRPC",54,0)
 ; Fetch Location IEN and Location Name
"RTN","MHVUMRPC",55,0)
 ;JAZZ#409966-Fix Names with Space in SM queries
"RTN","MHVUMRPC",56,0)
 ;and more User Fields: Retrieve all (*) User DSS Units
"RTN","MHVUMRPC",57,0)
 ;I '$D(^SC(MHVCIEN,0)) S RESULTS(1)="0^DSS1-No clinic for IEN:"_MHVCIEN Q
"RTN","MHVUMRPC",58,0)
 I '$D(^SC(MHVCIEN,0)),$G(MHVCIEN)'="*" S RESULTS(1)="0^DSS1-No clinic for IEN:"_MHVCIEN Q
"RTN","MHVUMRPC",59,0)
 I $G(MHVCIEN)'="*" D  ;JAZZ#409966
"RTN","MHVUMRPC",60,0)
 . S MHVLIEN=$$GET1^DIQ(44,+MHVCIEN,3,"I")
"RTN","MHVUMRPC",61,0)
 . S MHVLNAM=$$GET1^DIQ(44,+MHVCIEN,3,"E")
"RTN","MHVUMRPC",62,0)
 . S MHVDIV=$$GET1^DIQ(44,+MHVCIEN,3.5,"I")
"RTN","MHVUMRPC",63,0)
 . S MHVDIVN=$$GET1^DIQ(44,+MHVCIEN,3.5,"E")
"RTN","MHVUMRPC",64,0)
 . I +$G(MHVLIEN)=0 S RESULTS(1)="0^DSS1-No Institution found for clinic IEN:"_MHVCIEN Q
"RTN","MHVUMRPC",65,0)
 . I $G(MHVLNAM)="" S RESULTS(1)="0^DSS1-No Institution found for clinic IEN:"_MHVCIEN Q
"RTN","MHVUMRPC",66,0)
 . I +$G(MHVDIV)=0 S RESULTS(1)="0^DSS2-No Division found for clinic IEN:"_MHVCIEN Q
"RTN","MHVUMRPC",67,0)
 . I $G(MHVDIVN)="" S RESULTS(1)="0^DSS2-No Divison found for clinic IEN:"_MHVCIEN Q
"RTN","MHVUMRPC",68,0)
 ; Fetch DSS Unit IEN from file #200
"RTN","MHVUMRPC",69,0)
 D LIST^DIC(200.72,","_MHVPDUZ_",","@","QP","","","","","","","MHVR1","MHVR1E")
"RTN","MHVUMRPC",70,0)
 I $G(MHVR1("DILIST",0))'>0 S RESULTS(1)="0^DSS3-No DSS Units found in New Person File" Q
"RTN","MHVUMRPC",71,0)
 D:$G(MHVR1("DILIST",0))>0
"RTN","MHVUMRPC",72,0)
 . S MHVR1C=0
"RTN","MHVUMRPC",73,0)
 . F  S MHVR1C=$O(MHVR1("DILIST",MHVR1C))  Q:MHVR1C'>0  D
"RTN","MHVUMRPC",74,0)
 . . S MHVDIEN=$G(MHVR1("DILIST",MHVR1C,0))
"RTN","MHVUMRPC",75,0)
 . . I +$G(MHVDIEN)'>0 Q
"RTN","MHVUMRPC",76,0)
 . . S MHVDNAM=$$GET1^DIQ(724,+MHVDIEN,.01)
"RTN","MHVUMRPC",77,0)
 . . S MHVDIACT=$$GET1^DIQ(724,+MHVDIEN,5,"I")
"RTN","MHVUMRPC",78,0)
 . . S MHVDPCE=$$GET1^DIQ(724,+MHVDIEN,13,"I")
"RTN","MHVUMRPC",79,0)
 . . D MHVCHK
"RTN","MHVUMRPC",80,0)
 . . I ($G(MHVCIEN)="*") Q:((+$G(MHVDIACT)=1)!(MHVCHKF=1))   ;JAZZ#409966
"RTN","MHVUMRPC",81,0)
 . . ;I (+$G(MHVDIACT)=1)!(MHVCHKF=1)!('$D(^ECJ("AP",MHVLIEN,MHVDIEN))) Q 
"RTN","MHVUMRPC",82,0)
 . . I ($G(MHVCIEN)'="*"),((+$G(MHVDIACT)=1)!(MHVCHKF=1)!('$D(^ECJ("AP",MHVLIEN,MHVDIEN)))) Q 
"RTN","MHVUMRPC",83,0)
 . . D MHVRST
"RTN","MHVUMRPC",84,0)
 I MHVCNT=0 S RESULTS(1)="0^DSS4-No DSS Units found (Missing Event Code Screen) clinic IEN:"_MHVCIEN Q
"RTN","MHVUMRPC",85,0)
 Q
"RTN","MHVUMRPC",86,0)
MHVRST ;Populate results array
"RTN","MHVUMRPC",87,0)
 S MHVCNT=MHVCNT+1
"RTN","MHVUMRPC",88,0)
 S RESULTS(MHVCNT)=$G(MHVLIEN)_"^"_$G(MHVLNAM)_"^"_$G(MHVDIEN)_"^"_$G(MHVDNAM)_"^"_$G(MHVDIACT)_"^"_$G(MHVDPCE)
"RTN","MHVUMRPC",89,0)
 Q
"RTN","MHVUMRPC",90,0)
MHVCHK ;Check if DSS Unit is already populated in results array
"RTN","MHVUMRPC",91,0)
 S MHVCHKF=0
"RTN","MHVUMRPC",92,0)
 S MHVI=0 F  S MHVI=$O(^TMP($J,"MHVDUNT",MHVI)) Q:'MHVI!MHVCHKF  D
"RTN","MHVUMRPC",93,0)
 . I MHVDIEN=$P(^TMP($J,"MHVDUNT",MHVI),"^",3) S MHVCHKF=1
"RTN","MHVUMRPC",94,0)
 Q
"RTN","MHVUMRPC",95,0)
PRINTRES ; Print Results
"RTN","MHVUMRPC",96,0)
 N I
"RTN","MHVUMRPC",97,0)
 S I="" F  S I=$O(@RESULTS@(I)) Q:I=""  D
"RTN","MHVUMRPC",98,0)
 . W !,"LOCATIONIEN LOCATIONNAME DSSUNITIEN DSSUNITNAME INACTIVE"
"RTN","MHVUMRPC",99,0)
 . W !,@RESULTS@(I)
"RTN","MHVUMRPC",100,0)
 Q
"RTN","MHVUMRPC",101,0)
DSSPROCS(RESULTS,MHVARY) ; Get Procedures from DSS Unit IEN and Locaiton IEN
"RTN","MHVUMRPC",102,0)
 ; MHVARY IS DSS UNIT IEN AND LOCATION IEN
"RTN","MHVUMRPC",103,0)
 ; RESULTS = Procedure IEN^Procedure 5 digit code and description^synonym^Active flag
"RTN","MHVUMRPC",104,0)
 N MHVLOC,MHVECD,MHVCAT,MHVPX,MHVIEN,MHVNODE,MHVPRO,MHVSYN,MHVPN,MHVSTAT,MHVCNT
"RTN","MHVUMRPC",105,0)
 S MHVLOC=+$P(MHVARY,"^",1)
"RTN","MHVUMRPC",106,0)
 S MHVECD=+$P(MHVARY,"^",2)
"RTN","MHVUMRPC",107,0)
 S MHVCNT=0
"RTN","MHVUMRPC",108,0)
 S MHVCAT="" F  S MHVCAT=$O(^ECJ("AP",MHVLOC,MHVECD,MHVCAT)) Q:MHVCAT=""  D
"RTN","MHVUMRPC",109,0)
 . S MHVPX="" F  S MHVPX=$O(^ECJ("AP",MHVLOC,MHVECD,MHVCAT,MHVPX)) Q:MHVPX=""  S MHVIEN=0 D
"RTN","MHVUMRPC",110,0)
 ..F  S MHVIEN=$O(^ECJ("AP",MHVLOC,MHVECD,MHVCAT,MHVPX,MHVIEN)) Q:'MHVIEN  D
"RTN","MHVUMRPC",111,0)
 ...S MHVNODE=$G(^ECJ(MHVIEN,0)) I MHVNODE="" Q
"RTN","MHVUMRPC",112,0)
 ...S MHVPRO=$G(^ECJ(MHVIEN,"PRO")),MHVSYN=$P(MHVPRO,U,2),MHVPN=$P($P(MHVPRO,U),";")
"RTN","MHVUMRPC",113,0)
 ...I $G(MHVPN)="" Q
"RTN","MHVUMRPC",114,0)
 ...I $P(MHVPRO,U)["EC" S MHVPN=$G(^EC(725,MHVPN,0)),MHVPRO=$P(MHVPN,U,2)_" "_$P(MHVPN,U)
"RTN","MHVUMRPC",115,0)
 ...E  S MHVPN=$$CPT^ICPTCOD(MHVPN) S MHVPRO=$P(MHVPN,U,2)_" "_$P(MHVPN,U,3)
"RTN","MHVUMRPC",116,0)
 ...S MHVSTAT=$S($P(MHVNODE,U,2)'="":"No",1:"Yes")
"RTN","MHVUMRPC",117,0)
 ...; STATUS (Y-Active/N-Inactive)
"RTN","MHVUMRPC",118,0)
 ...I $G(MHVSTAT)="No" Q
"RTN","MHVUMRPC",119,0)
 ...S MHVCNT=MHVCNT+1
"RTN","MHVUMRPC",120,0)
 ...S RESULTS(MHVCNT)=$G(MHVPX)_U_$P($G(MHVPN),U)_U_$P($G(MHVPN),U,2)_U_$G(MHVSYN)_U_$G(MHVSTAT)
"RTN","MHVUMRPC",121,0)
 I MHVCNT=0 S RESULTS(1)="0^No Procedures found for DSS Unit IEN:"_MHVECD_" and Location IEN:"_MHVLOC Q
"RTN","MHVUMRPC",122,0)
 Q
"RTN","MHVUMRPC",123,0)
PATECLS(RESULTS,MHVSTRING) ; Get Patient eligibility and Classification data
"RTN","MHVUMRPC",124,0)
 ; MHVSTRING IS PATIENT ICN, DSS UNIT IEN, PROCEDURE DATE AND TIME IN FILEMAN FORMAT
"RTN","MHVUMRPC",125,0)
 ; RESULTS = PATIENT STATUS ^CLASSIFICATION DATA (AGENT ORANCE, IONIZING RADIATION, SC CONDITION, ENVIRONMENTAL CONTAMINANTS, MILITARY SEXUAL TRUMA
"RTN","MHVUMRPC",126,0)
 ; RESULTS(1,2...)=PRIMARY/SECONDARY FLAG (1-PRIMARY,0-SECONDARY)^ELIGIBILITY IEN^ELIGIBILITY DESCRIPTION
"RTN","MHVUMRPC",127,0)
 N MHVPIEN,MHVECD,MHVPDT,MHVI,MHVCNT,MHVPICN,ECARY
"RTN","MHVUMRPC",128,0)
 ; Get Patient IEN from Patient ICN
"RTN","MHVUMRPC",129,0)
 S MHVPICN=+$P(MHVSTRING,"^",1)
"RTN","MHVUMRPC",130,0)
 I $G(MHVPICN)'>0 S RESULTS(1)="0^No Patient ICN" Q
"RTN","MHVUMRPC",131,0)
 S MHVPIEN=$$GETDFN^MPIF001(MHVPICN)
"RTN","MHVUMRPC",132,0)
 I $P($G(MHVPIEN),"^",1)=-1 S RESULTS(1)="0^Patient ICN not in Database" Q
"RTN","MHVUMRPC",133,0)
 ;
"RTN","MHVUMRPC",134,0)
 S $P(MHVSTRING,"^",1)=MHVPIEN
"RTN","MHVUMRPC",135,0)
 S MHVECD=$P(MHVSTRING,"^",2)
"RTN","MHVUMRPC",136,0)
 S MHVPDT=$P(MHVSTRING,"^",3)
"RTN","MHVUMRPC",137,0)
 ; GET PATIENT ELIGIBILITY
"RTN","MHVUMRPC",138,0)
 S ECARY=$G(MHVPIEN)
"RTN","MHVUMRPC",139,0)
 D ELIG^ECUERPC(.RESULTS,.ECARY)
"RTN","MHVUMRPC",140,0)
 I $G(RESULTS)="" S RESULTS(1)="0^No Eligibility codes found for Patient DFN:"_MHVPIEN Q 
"RTN","MHVUMRPC",141,0)
 S MHVCNT=0
"RTN","MHVUMRPC",142,0)
 S MHVI="" F  S MHVI=$O(@RESULTS@(MHVI)) Q:MHVI=""  D
"RTN","MHVUMRPC",143,0)
 . S MHVCNT=MHVCNT+1
"RTN","MHVUMRPC",144,0)
 . S RESULTS(MHVCNT)=@RESULTS@(MHVI)
"RTN","MHVUMRPC",145,0)
 I MHVCNT=0 S RESULTS(1)="0^No Eligibility codes found for Patient DFN:"_MHVPIEN Q 
"RTN","MHVUMRPC",146,0)
 ; GET PATIENT CLASSIFICATION DATA
"RTN","MHVUMRPC",147,0)
 S ECARY=MHVSTRING
"RTN","MHVUMRPC",148,0)
 S RESULTS=""
"RTN","MHVUMRPC",149,0)
 D PATCLAST^ECUERPC1(.RESULTS,.ECARY)
"RTN","MHVUMRPC",150,0)
 S RESULTS(0)=RESULTS
"RTN","MHVUMRPC",151,0)
 I RESULTS="" S RESULTS(1)="0^No Classification data found for Patient DFN:"_MHVPIEN Q
"RTN","MHVUMRPC",152,0)
 Q
"RTN","MHVUMRPC",153,0)
DIAGPL(RESULTS,MHVSTRING) ; Get Patient Diagnosis codes from Patient Probelm list
"RTN","MHVUMRPC",154,0)
 ; MHVSTRING IS PATIENT ICN
"RTN","MHVUMRPC",155,0)
 ; RESULTS = DIAGNOSIS CODE IEN^DIAGNOSIS CODE^SNOMED-CT DESCRIPTION~ICD-10 DESCRIPTION^ICD CODING SYSTEM 
"RTN","MHVUMRPC",156,0)
 N MHVPIEN,MHVPICN,MHVCNT,MHVDCOD,PRB,DCOD
"RTN","MHVUMRPC",157,0)
 ; Get Patient IEN from Patient ICN
"RTN","MHVUMRPC",158,0)
 S MHVPICN=+$P(MHVSTRING,"^",1)
"RTN","MHVUMRPC",159,0)
 I $G(MHVPICN)'>0 S RESULTS(1)="0^No Patient ICN" Q
"RTN","MHVUMRPC",160,0)
 S MHVPIEN=$$GETDFN^MPIF001(MHVPICN)
"RTN","MHVUMRPC",161,0)
 I $P($G(MHVPIEN),"^",1)=-1 S RESULTS(1)="0^Patient ICN not in Database" Q
"RTN","MHVUMRPC",162,0)
 ;
"RTN","MHVUMRPC",163,0)
 S $P(MHVSTRING,"^",1)=$G(MHVPIEN)
"RTN","MHVUMRPC",164,0)
 K MHVROOTP
"RTN","MHVUMRPC",165,0)
 D LIST^GMPLUTL2(.MHVROOTP,MHVPIEN,"A")
"RTN","MHVUMRPC",166,0)
 I $G(MHVROOTP(0))<1 S RESULTS(1)="0^No Diagnosis codes found in Patient Problem List" Q
"RTN","MHVUMRPC",167,0)
 S MHVCNT=0
"RTN","MHVUMRPC",168,0)
 ;Fix for ICD 10 PRODUCTION ISSUE on date switch
"RTN","MHVUMRPC",169,0)
 ;Item#2.Story 223914: SM WLC - ICD10 - SNOMED CT Problem List and Encounter Completion and Workload 
"RTN","MHVUMRPC",170,0)
 F  S MHVCNT=MHVCNT+1 Q:MHVCNT>$G(MHVROOTP(0))  D
"RTN","MHVUMRPC",171,0)
 . S MHVDCOD=$P($P(MHVROOTP(MHVCNT),"^",4),"/",1)
"RTN","MHVUMRPC",172,0)
 . S MHVDIEN=$P($$CODEN^ICDCODE(MHVDCOD,80),"~",1)
"RTN","MHVUMRPC",173,0)
 . ;Story 272695 Emergency Fix 
"RTN","MHVUMRPC",174,0)
 . ;- adding the ICD-10 Description as second " - " piece to Problem SNOMED-CT Description
"RTN","MHVUMRPC",175,0)
 . I $P(MHVROOTP(MHVCNT),"^",13)="10D",$L($G(MHVDCOD)) D
"RTN","MHVUMRPC",176,0)
 . . S DCOD="757.01^"_$G(MHVDCOD)
"RTN","MHVUMRPC",177,0)
 . . D DIAGSRCH(.PRB,.DCOD)
"RTN","MHVUMRPC",178,0)
 . . I $L($G(PRB(1))),($P(PRB(1),"^",2)'=0) S $P(MHVROOTP(MHVCNT),"^",3)=$P(MHVROOTP(MHVCNT),"^",3)_" - "_$P($G(PRB(1)),"^",3)
"RTN","MHVUMRPC",179,0)
 . .;- end of code for Story 272695 Emergency Fix 
"RTN","MHVUMRPC",180,0)
 . S RESULTS(MHVCNT)=$G(MHVDIEN)_"^"_$G(MHVDCOD)_"^"_$P(MHVROOTP(MHVCNT),"^",3)_"^"_$P(MHVROOTP(MHVCNT),"^",13)
"RTN","MHVUMRPC",181,0)
 Q
"RTN","MHVUMRPC",182,0)
DIAGSRCH(RESULTS,MHVSTRING) ; Get Diagnosis codes and description from Search string
"RTN","MHVUMRPC",183,0)
 ; MHVSTRING IS SEARCH STRING AND FILE TO SEARCH
"RTN","MHVUMRPC",184,0)
 ; RESULTS = DIAGNOSIS CODE IEN IN FILE 80^DIAGNOSIS CODE^DESCRIPTION
"RTN","MHVUMRPC",185,0)
 N MHVSTR,MHVCNT
"RTN","MHVUMRPC",186,0)
 K MHVROOT
"RTN","MHVUMRPC",187,0)
 ; FILENAME^ICD
"RTN","MHVUMRPC",188,0)
 ;S MHVSTR=$P(MHVSTRING,U)_"^ICD|"_$P(MHVSTRING,U,2)_"|DT^"
"RTN","MHVUMRPC",189,0)
 ;Fix for ICD 10 PRODUCTION ISSUE on date switch
"RTN","MHVUMRPC",190,0)
 ;Item#1.Story 26244 SM WLC - ICD10 - SNOMED CT Problem List and Encounter Completion and Workload 
"RTN","MHVUMRPC",191,0)
 S MHVSTR=$P(MHVSTRING,U)_"^ICD|"_$P(MHVSTRING,U,2)_"|"_DT_"^"
"RTN","MHVUMRPC",192,0)
 D SRCLST^ECUMRPC1(.MHVROOT,.MHVSTR)
"RTN","MHVUMRPC",193,0)
 I $G(MHVROOT)="" S RESULTS(1)="^0^No results found" Q
"RTN","MHVUMRPC",194,0)
 S MHVCNT=0
"RTN","MHVUMRPC",195,0)
 ;Per Secure Messaging (SM) Change Request (CR)Release 12.15
"RTN","MHVUMRPC",196,0)
 ;User Story:  Problem List ICD-10 enhancement:
"RTN","MHVUMRPC",197,0)
 ;restrict the number of records returned from VistA to 199 or less
"RTN","MHVUMRPC",198,0)
 ;S I="" F  S I=$O(@MHVROOT@(I)) Q:I=""  D
"RTN","MHVUMRPC",199,0)
 S I="" F  S I=$O(@MHVROOT@(I)) Q:(I="")!(MHVCNT>199)  D
"RTN","MHVUMRPC",200,0)
 . S MHVCNT=MHVCNT+1
"RTN","MHVUMRPC",201,0)
 . S RESULTS(I)=@MHVROOT@(I)
"RTN","MHVUMRPC",202,0)
 . S RESULTS(I)=$P(RESULTS(I),"^",3)_"^"_$P(RESULTS(I),"^",1)_"^"_$P(RESULTS(I),"^",2)_"^"_$P($P(RESULTS(I),"(",2),")",1)
"RTN","MHVUMRPC",203,0)
 I MHVCNT=0 S RESULTS(1)="^0^No results found" Q
"RTN","MHVUMRPC",204,0)
 Q
"RTN","MHVXPRV")
0^25^B8530469^B8040639
"RTN","MHVXPRV",1,0)
MHVXPRV ;WAS/DLF - Provider extract ; 9/25/08 4:11pm
"RTN","MHVXPRV",2,0)
 ;;1.0;My HealtheVet;**6,29**;July 10, 2017;Build 73
"RTN","MHVXPRV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHVXPRV",4,0)
 ;
"RTN","MHVXPRV",5,0)
 Q
"RTN","MHVXPRV",6,0)
 ;
"RTN","MHVXPRV",7,0)
 ;  Integration Agreements:
"RTN","MHVXPRV",8,0)
 ;                5250 : TPPR^SCAPMC
"RTN","MHVXPRV",9,0)
 ;               10103 : $$DT^XLFDT
"RTN","MHVXPRV",10,0)
 ;                       $$NOW^XLFDT
"RTN","MHVXPRV",11,0)
 ;               10060 : New Person File #200
"RTN","MHVXPRV",12,0)
 ;               10076 : ^XUSEC
"RTN","MHVXPRV",13,0)
 ;  
"RTN","MHVXPRV",14,0)
 ;
"RTN","MHVXPRV",15,0)
 ;
"RTN","MHVXPRV",16,0)
CMMPRV(QRY,ERR,DATAROOT)        ; return PCMM providers
"RTN","MHVXPRV",17,0)
 ;
"RTN","MHVXPRV",18,0)
 ; Primary Care Management Module interface
"RTN","MHVXPRV",19,0)
 ; return provider data in DATAROOT
"RTN","MHVXPRV",20,0)
 ; QRY, ERR passed by ref.
"RTN","MHVXPRV",21,0)
 ;
"RTN","MHVXPRV",22,0)
 ;  Input:
"RTN","MHVXPRV",23,0)
 ;       QRY - Query array
"RTN","MHVXPRV",24,0)
 ;       ERR - Variable to hold error conditions
"RTN","MHVXPRV",25,0)
 ;       DATAROOT - Root of array to hold extract data
"RTN","MHVXPRV",26,0)
 ;  Output:
"RTN","MHVXPRV",27,0)
 ;       DATAROOT - Populated data array
"RTN","MHVXPRV",28,0)
 ;                  includes number of hits and timestamp
"RTN","MHVXPRV",29,0)
 ;       ERR - Errors during extraction, zero on success
"RTN","MHVXPRV",30,0)
 ;
"RTN","MHVXPRV",31,0)
 ;
"RTN","MHVXPRV",32,0)
 D LOG^MHVUL2("CMMPRV~MHVXPRV","BEGIN","S","TRACE")
"RTN","MHVXPRV",33,0)
 ;
"RTN","MHVXPRV",34,0)
 K @DATAROOT,^TMP("MHVXPRV",$J)  ; clean up residue
"RTN","MHVXPRV",35,0)
 ;
"RTN","MHVXPRV",36,0)
 ; get all PCMM providers for facility, no exclusion
"RTN","MHVXPRV",37,0)
 ;
"RTN","MHVXPRV",38,0)
 N NXT,IIEN,NODE,TEAM,OUT
"RTN","MHVXPRV",39,0)
 N DT,EXTIME,HIT,LOGND,RTN,U,X
"RTN","MHVXPRV",40,0)
 N PRNAME,PRFNAME,PROLE,PRIEN
"RTN","MHVXPRV",41,0)
 ;
"RTN","MHVXPRV",42,0)
 ;
"RTN","MHVXPRV",43,0)
 S NXT=0,IIEN=0
"RTN","MHVXPRV",44,0)
 S U="^",DT=$$DT^XLFDT,ERR=0,EXTIME=$$NOW^XLFDT,HIT=0
"RTN","MHVXPRV",45,0)
 ;
"RTN","MHVXPRV",46,0)
 I QRY("IEN")="" D  ; no IEN, check PROVIDER key holders
"RTN","MHVXPRV",47,0)
 .S PRIEN=""
"RTN","MHVXPRV",48,0)
 .F  S PRIEN=$O(^XUSEC("PROVIDER",PRIEN)) Q:PRIEN=""  D PRVCHK(PRIEN)
"RTN","MHVXPRV",49,0)
 ;
"RTN","MHVXPRV",50,0)
 ; otherwise, check one match
"RTN","MHVXPRV",51,0)
 ;===================================================================
"RTN","MHVXPRV",52,0)
 ;E  D
"RTN","MHVXPRV",53,0)
 ;JAZZ Story#409966-VistA Patch 29
"RTN","MHVXPRV",54,0)
 ;Defect: 504782-Fix PCMM Flag showing for users with NOPTOVIDER KEY
"RTN","MHVXPRV",55,0)
 ;===================================================================
"RTN","MHVXPRV",56,0)
 E  D:+$D(^XUSEC("PROVIDER",(QRY("IEN"))))
"RTN","MHVXPRV",57,0)
 .D PRVCHK(QRY("IEN"))
"RTN","MHVXPRV",58,0)
 ;
"RTN","MHVXPRV",59,0)
 S @DATAROOT=HIT_U_EXTIME  ; count of hits ^ time
"RTN","MHVXPRV",60,0)
 D LOG^MHVUL2("CMMPRV~MHVXPRV",HIT_" HITS","S","TRACE")
"RTN","MHVXPRV",61,0)
 D LOG^MHVUL2("CMMPRV~MHVXPRV","END","S","TRACE")
"RTN","MHVXPRV",62,0)
 Q
"RTN","MHVXPRV",63,0)
 ;
"RTN","MHVXPRV",64,0)
PRVCHK(PRIEN)  ; if provider has roles and matches name paramter,add to the
"RTN","MHVXPRV",65,0)
 ; list to send back
"RTN","MHVXPRV",66,0)
 ;
"RTN","MHVXPRV",67,0)
 N DIERR,PRVOUT,MHVDATES,MHVPURPA,MHVROLEA,MHVERR,MHVLIST,MHVRLS
"RTN","MHVXPRV",68,0)
 N PHNE,SECTN
"RTN","MHVXPRV",69,0)
 S MHVDATES("BEGIN")="",MHVDATES("END")=""
"RTN","MHVXPRV",70,0)
 S MHVDATES("INCL")=0
"RTN","MHVXPRV",71,0)
 S (MHVPURPA,MHVROLEA,MHVERR)=""
"RTN","MHVXPRV",72,0)
 S X=$$TPPR^SCAPMC(PRIEN,.MHVDATES,MHVPURPA,MHVROLEA,"MHVRLS",MHVERR)
"RTN","MHVXPRV",73,0)
 ;
"RTN","MHVXPRV",74,0)
 ;If there are no roles, this person is not a pcmm provider
"RTN","MHVXPRV",75,0)
 ;
"RTN","MHVXPRV",76,0)
 Q:'$D(MHVRLS)
"RTN","MHVXPRV",77,0)
 ;
"RTN","MHVXPRV",78,0)
 S PROLE=$P(MHVRLS(1),"^",8)
"RTN","MHVXPRV",79,0)
 D GETS^DIQ(200,PRIEN_",",".01;.132;29","E","PRVOUT","DIERR")
"RTN","MHVXPRV",80,0)
 Q:$G(DIERR)
"RTN","MHVXPRV",81,0)
 S PRNAME=$G(PRVOUT(200,PRIEN_",",.01,"E"))
"RTN","MHVXPRV",82,0)
 S PRFNAME=$P(PRNAME,",",2)
"RTN","MHVXPRV",83,0)
 Q:$E(PRNAME,1,$L(QRY("LNAME")))'=QRY("LNAME")
"RTN","MHVXPRV",84,0)
 Q:$E(PRFNAME,1,$L(QRY("FNAME")))'=QRY("FNAME")
"RTN","MHVXPRV",85,0)
 S PHNE=$G(PRVOUT(200,PRIEN_",",.132,"E"))
"RTN","MHVXPRV",86,0)
 S SECTN=$G(PRVOUT(200,PRIEN_",",.29,"E"))
"RTN","MHVXPRV",87,0)
 S HIT=HIT+1
"RTN","MHVXPRV",88,0)
 S @DATAROOT@(HIT)=PRIEN_"^"_PRNAME_"^"_PROLE_"^^^^"_PHNE_"^"_SECTN
"RTN","MHVXPRV",89,0)
 Q
"RTN","MHVXUSR")
0^24^B33090883^B6533332
"RTN","MHVXUSR",1,0)
MHVXUSR ;WAS/DLF/MJK - User extract ; 5/6/10 4:12pm
"RTN","MHVXUSR",2,0)
 ;;1.0;My HealtheVet;**6,29**;July 10, 2017;Build 73
"RTN","MHVXUSR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MHVXUSR",4,0)
 ;
"RTN","MHVXUSR",5,0)
 Q
"RTN","MHVXUSR",6,0)
 ;  Integration Agreements:
"RTN","MHVXUSR",7,0)
 ;       10060 : New Person file #200
"RTN","MHVXUSR",8,0)
 ;       2343  : $$ACTIVE^XUSER(Y)
"RTN","MHVXUSR",9,0)
 ;       10103 : $$DT^XLFDT
"RTN","MHVXUSR",10,0)
 ;               $$NOW^XLFDT
"RTN","MHVXUSR",11,0)
 ;       10076 : Read ^XUSEC("PROVIDER",DUZ
"RTN","MHVXUSR",12,0)
 ;       1625  : PERSON CLASS- PROVIDER TYPE - CLASSIFICATION (File #8932.1)
"RTN","MHVXUSR",13,0)
 ;               $$GET^XUA4A72(USRIEN) - Patch 29
"RTN","MHVXUSR",14,0)
 ;       10093 : SERVICE/SECTION file #49
"RTN","MHVXUSR",15,0)
 ;       2533  : $$DIV4^XUSER(.ZZ[,duz])- DIVISIONS - Patch 29
"RTN","MHVXUSR",16,0)
 ;
"RTN","MHVXUSR",17,0)
USERS(QRY,ERR,DATAROOT)        ; return users from file 200
"RTN","MHVXUSR",18,0)
 ;
"RTN","MHVXUSR",19,0)
 ; Primary Care Management Module interface
"RTN","MHVXUSR",20,0)
 ; return user data in DATAROOT
"RTN","MHVXUSR",21,0)
 ; QRY, ERR passed by ref.
"RTN","MHVXUSR",22,0)
 ;
"RTN","MHVXUSR",23,0)
 ;  Input:
"RTN","MHVXUSR",24,0)
 ;       QRY - Query array
"RTN","MHVXUSR",25,0)
 ;       ERR - Variable to hold error conditions
"RTN","MHVXUSR",26,0)
 ;       DATAROOT - Root of array to hold extract data
"RTN","MHVXUSR",27,0)
 ;  Output:
"RTN","MHVXUSR",28,0)
 ;       DATAROOT - Populated data array
"RTN","MHVXUSR",29,0)
 ;                  includes number of hits and timestamp
"RTN","MHVXUSR",30,0)
 ;       ERR - Errors during extraction, zero on success
"RTN","MHVXUSR",31,0)
 ;
"RTN","MHVXUSR",32,0)
 ;
"RTN","MHVXUSR",33,0)
 ;
"RTN","MHVXUSR",34,0)
 D LOG^MHVUL2("USERS~MHVXUSR","BEGIN","S","TRACE")
"RTN","MHVXUSR",35,0)
 ;
"RTN","MHVXUSR",36,0)
 K @DATAROOT,^TMP("MHXUSR",$J)  ; clean up residue
"RTN","MHVXUSR",37,0)
 ;
"RTN","MHVXUSR",38,0)
 N NXT,IIEN,NODE,TEAM,OUT,MHVPURPA,MHVROLEA,MHVLIST,MHVERR
"RTN","MHVXUSR",39,0)
 N DIERR,DT,EXTIME,HIT,LOGND,RTN,TMIEN,NM,U,X
"RTN","MHVXUSR",40,0)
 N USRNAME,USROUT,USRFNAME,OUT,PPHONE,SSECTION,USRIEN,PRV,TTITLE
"RTN","MHVXUSR",41,0)
 N PRVCLS,REQSIG,NETWKID
"RTN","MHVXUSR",42,0)
 N PERSCLS,PCEFDT,PCEXDT,PROVSPEC,PROVDIVS,USERCLS,DATARSTR,I,RETST,SUB
"RTN","MHVXUSR",43,0)
 ;
"RTN","MHVXUSR",44,0)
 S U="^",DT=$$DT^XLFDT,ERR=0,EXTIME=$$NOW^XLFDT,HIT=0
"RTN","MHVXUSR",45,0)
 ;
"RTN","MHVXUSR",46,0)
 S OUT=$NA(^TMP("MHVXUSR",$J))
"RTN","MHVXUSR",47,0)
 S NXT=0,IIEN=0
"RTN","MHVXUSR",48,0)
 K @OUT
"RTN","MHVXUSR",49,0)
 ;
"RTN","MHVXUSR",50,0)
 ;FIND ALL ACTIVE NEW PERSONS THAT MATCH ENTRY
"RTN","MHVXUSR",51,0)
 ;
"RTN","MHVXUSR",52,0)
 I QRY("IEN")=""  D    ; Name lookup
"RTN","MHVXUSR",53,0)
 . ;JAZZ#409966-Fix Names with Space in SM queries;and more User Fields - existing issue
"RTN","MHVXUSR",54,0)
 . ;retrieve only active user patrial match - if Name passed in
"RTN","MHVXUSR",55,0)
 . D LIST^DIC(200,"","","",,QRY("LNAME"),QRY("LNAME"),"B","I $$ACTIVE^XUSER(Y)","",OUT)
"RTN","MHVXUSR",56,0)
 E  D  ; Lookup by IEN
"RTN","MHVXUSR",57,0)
 . ;JAZZ#409966-Fix Names with Space in SM queries;and more User Fields - existing issue
"RTN","MHVXUSR",58,0)
 . ;retrieve both active and inactive user for exact DUZ match -
"RTN","MHVXUSR",59,0)
 . S @OUT@("DILIST",2,1)=QRY("IEN")
"RTN","MHVXUSR",60,0)
 ;
"RTN","MHVXUSR",61,0)
 ;$O through the OUT array to get the IEN to check for roles
"RTN","MHVXUSR",62,0)
 ;
"RTN","MHVXUSR",63,0)
 S IIEN="",HIT=0
"RTN","MHVXUSR",64,0)
 F  S IIEN=$O(@OUT@("DILIST",2,IIEN)) Q:IIEN=""  D
"RTN","MHVXUSR",65,0)
 .S USRIEN=@OUT@("DILIST",2,IIEN)
"RTN","MHVXUSR",66,0)
 . ; Fieds extracted pre-patch 29:
"RTN","MHVXUSR",67,0)
 . ; - #.01 NAME                - AI#10060 New Person file #200
"RTN","MHVXUSR",68,0)
 . ; - #.132 OFFICE PHONE       - AI#10060 New Person file #200
"RTN","MHVXUSR",69,0)
 . ; - #8 TITLE                 - AI#10060 New Person file #200
"RTN","MHVXUSR",70,0)
 . ; - #29 SERVICE/SECTION      - AI#10093 SERVICE/SECTION file #49
"RTN","MHVXUSR",71,0)
 . ;-----------------------------------------------------------------------------------------
"RTN","MHVXUSR",72,0)
 . ;JAZZ#409966-Fix Names with Space in SM queries- existing issue;and more User Fields;ADDED:
"RTN","MHVXUSR",73,0)
 . ; - #53.5-PROVIDER CLASS - POINTER TO #7 PROVIDER CLASS FILE - AI#10060
"RTN","MHVXUSR",74,0)
 . ; - #53.7 REQUIRES COSIGNER - AI#10060
"RTN","MHVXUSR",75,0)
 . ; - #501.1 NETWORK ID - AI#10060
"RTN","MHVXUSR",76,0)
 . ; - #8932.1-PERSON CLASS-PROVIDER TYPE-CLASSIFICATION -today's active-AI#1625
"RTN","MHVXUSR",77,0)
 . ;        .01  Person Class (*P8932.1'a), [0;1]
"RTN","MHVXUSR",78,0)
 . ;         2    Effective Date (RDXa), [0;2]
"RTN","MHVXUSR",79,0)
 . ;         3    Expiration Date (Da), [0;3]
"RTN","MHVXUSR",80,0)
 . ; - #747.111-SPECIALTY -[pointer to SPECIALTY file (#747.9)]-today's active-above call- AI#1625
"RTN","MHVXUSR",81,0)
 . ; - #16- DIVISION (multiple) [pointer to INSTITUTION FILE (#4)] - AI#2533
"RTN","MHVXUSR",82,0)
 . ;        $$DIV4^XUSER(.ZZ[,duz])- DIVISIONS
"RTN","MHVXUSR",83,0)
 . ;-----------------------------------------------------------------------------------------
"RTN","MHVXUSR",84,0)
 .;D GETS^DIQ(200,USRIEN_",",".01;.132;8;29","E","USROUT","DIERR")
"RTN","MHVXUSR",85,0)
 .K DIERR
"RTN","MHVXUSR",86,0)
 .D GETS^DIQ(200,USRIEN_",",".01;.132;8;29;53.5;53.7;501.1","E","USROUT","DIERR")
"RTN","MHVXUSR",87,0)
 .Q:$G(DIERR)
"RTN","MHVXUSR",88,0)
 .S USRNAME=$G(USROUT(200,USRIEN_",",.01,"E"))
"RTN","MHVXUSR",89,0)
 .S USRFNAME=$P(USRNAME,",",2)
"RTN","MHVXUSR",90,0)
 .Q:$E(USRFNAME,1,$L(QRY("FNAME")))'=QRY("FNAME")
"RTN","MHVXUSR",91,0)
 .S PPHONE=$G(USROUT(200,USRIEN_",",.132,"E"))
"RTN","MHVXUSR",92,0)
 .S TTITLE=$G(USROUT(200,USRIEN_",",8,"E"))
"RTN","MHVXUSR",93,0)
 .S SSECTION=$G(USROUT(200,USRIEN_",",29,"E"))
"RTN","MHVXUSR",94,0)
 .S PRV="",PRVCLS="",REQSIG="",NETWKID=""
"RTN","MHVXUSR",95,0)
 .I $D(^XUSEC("PROVIDER",USRIEN)) S PRV="PROVIDER"
"RTN","MHVXUSR",96,0)
 .S PRVCLS=$G(USROUT(200,USRIEN_",",53.5,"E"))
"RTN","MHVXUSR",97,0)
 .S REQSIG=$G(USROUT(200,USRIEN_",",53.7,"E"))
"RTN","MHVXUSR",98,0)
 .S NETWKID=$G(USROUT(200,USRIEN_",",501.1,"E"))
"RTN","MHVXUSR",99,0)
 .;PERSON CLASS-EFFECTIVE DATE;EXPIRATION DATE; SPECIALTY(multiple)-only there is an active entry -#1625
"RTN","MHVXUSR",100,0)
 .S RETST="",PERSCLS="",PCEFDT="",PCEXDT="",PROVSPEC=""
"RTN","MHVXUSR",101,0)
 .S RETST=$$GET^XUA4A72(USRIEN)
"RTN","MHVXUSR",102,0)
 .;PERSON CLASS; EFFECTIVE DATE; EXPIRATION DATE;SPECIALTY- AI#1625
"RTN","MHVXUSR",103,0)
 .I RETST>0 D
"RTN","MHVXUSR",104,0)
 .. S PERSCLS=$P(RETST,"^",2)
"RTN","MHVXUSR",105,0)
 .. S PCEFDT=$P(RETST,"^",5),PCEXDT=$P(RETST,"^",6)
"RTN","MHVXUSR",106,0)
 .. S PROVSPEC=$P(RETST,"^",3)
"RTN","MHVXUSR",107,0)
 .I RETST<=0 D
"RTN","MHVXUSR",108,0)
 .. I RETST=-1 S PERSCLS="Person Class never assigned"
"RTN","MHVXUSR",109,0)
 .. I RETST=-2 S PERSCLS="No active Person Class"
"RTN","MHVXUSR",110,0)
 .;DIVISION (multiple)
"RTN","MHVXUSR",111,0)
 .K DIERR
"RTN","MHVXUSR",112,0)
 .D GETS^DIQ(200,USRIEN_",","16*","E","USROUT","DIERR")
"RTN","MHVXUSR",113,0)
 .S PROVDIVS=""
"RTN","MHVXUSR",114,0)
 .S SUB="0,"_USRIEN_","
"RTN","MHVXUSR",115,0)
 .F  S SUB=$O(USROUT(200.02,SUB)) Q:SUB'[USRIEN_","  D
"RTN","MHVXUSR",116,0)
 .. I $D(USROUT(200.02,SUB))>1 D 
"RTN","MHVXUSR",117,0)
 ... S PROVDIVS=PROVDIVS_$G(USROUT(200.02,SUB,.01,"E"))_"~"_$G(USROUT(200.02,SUB,1,"E"))_"_"
"RTN","MHVXUSR",118,0)
 .S HIT=HIT+1
"RTN","MHVXUSR",119,0)
 .;JAZZ#409966-Fix Names with Space in SM queries- existing issue;and more User Fields
"RTN","MHVXUSR",120,0)
 .;S @DATAROOT@(HIT)=USRIEN_U_USRNAME_U_PRV_U_U_U_U_PPHONE_U_SSECTION_U_TTITLE
"RTN","MHVXUSR",121,0)
 .S DATARSTR=USRIEN_U_USRNAME_U_PRV_U_PRVCLS_U_PROVSPEC_U_REQSIG_U_PPHONE_U_SSECTION_U_TTITLE_U_NETWKID
"RTN","MHVXUSR",122,0)
 .S DATARSTR=DATARSTR_U_PERSCLS_U_PCEFDT_U_PCEXDT_U_PROVDIVS
"RTN","MHVXUSR",123,0)
 .S @DATAROOT@(HIT)=DATARSTR
"RTN","MHVXUSR",124,0)
 ;
"RTN","MHVXUSR",125,0)
 ; Update dataroot with number of hits and
"RTN","MHVXUSR",126,0)
 ; write to the log
"RTN","MHVXUSR",127,0)
 ;
"RTN","MHVXUSR",128,0)
 K @OUT
"RTN","MHVXUSR",129,0)
 S @DATAROOT=HIT_U_EXTIME  ; count of hits ^ time
"RTN","MHVXUSR",130,0)
 D LOG^MHVUL2("USERS~MHVXUSR",HIT_" HITS","S","TRACE")
"RTN","MHVXUSR",131,0)
 D LOG^MHVUL2("USERS~MHVXUSR","END","S","TRACE")
"RTN","MHVXUSR",132,0)
 Q
"VER")
8.0^22.2
"BLD",8330,6)
^26
**END**
**END**

