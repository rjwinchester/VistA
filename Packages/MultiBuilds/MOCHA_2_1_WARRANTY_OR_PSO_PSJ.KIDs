KIDS Distribution saved on May 14, 2018@09:15:01
OR*3*481,PSO*7*518,PSJ*5*358 from [MDEVB] on 5/14/18
**KIDS**:MOCHA 2.1 COMBINED WARRANTY BUILD 1.0^OR*3.0*481^PSO*7.0*518^PSJ*5.0*358^

**INSTALL NAME**
MOCHA 2.1 COMBINED WARRANTY BUILD 1.0
"BLD",10249,0)
MOCHA 2.1 COMBINED WARRANTY BUILD 1.0^^1^3180514^y
"BLD",10249,6.3)
3
"BLD",10249,10,0)
^9.63^3^3
"BLD",10249,10,1,0)
OR*3.0*481^1
"BLD",10249,10,2,0)
PSO*7.0*518^1
"BLD",10249,10,3,0)
PSJ*5.0*358^1
"BLD",10249,10,"B","OR*3.0*481",1)

"BLD",10249,10,"B","PSJ*5.0*358",3)

"BLD",10249,10,"B","PSO*7.0*518",2)

"BLD",10249,"KRN",0)
^9.67PA^779.2^20
"BLD",10249,"KRN",.4,0)
.4
"BLD",10249,"KRN",.401,0)
.401
"BLD",10249,"KRN",.402,0)
.402
"BLD",10249,"KRN",.403,0)
.403
"BLD",10249,"KRN",.5,0)
.5
"BLD",10249,"KRN",.84,0)
.84
"BLD",10249,"KRN",3.6,0)
3.6
"BLD",10249,"KRN",3.8,0)
3.8
"BLD",10249,"KRN",9.2,0)
9.2
"BLD",10249,"KRN",9.8,0)
9.8
"BLD",10249,"KRN",19,0)
19
"BLD",10249,"KRN",19.1,0)
19.1
"BLD",10249,"KRN",101,0)
101
"BLD",10249,"KRN",409.61,0)
409.61
"BLD",10249,"KRN",771,0)
771
"BLD",10249,"KRN",779.2,0)
779.2
"BLD",10249,"KRN",870,0)
870
"BLD",10249,"KRN",8989.51,0)
8989.51
"BLD",10249,"KRN",8989.52,0)
8989.52
"BLD",10249,"KRN",8994,0)
8994
"BLD",10249,"KRN","B",.4,.4)

"BLD",10249,"KRN","B",.401,.401)

"BLD",10249,"KRN","B",.402,.402)

"BLD",10249,"KRN","B",.403,.403)

"BLD",10249,"KRN","B",.5,.5)

"BLD",10249,"KRN","B",.84,.84)

"BLD",10249,"KRN","B",3.6,3.6)

"BLD",10249,"KRN","B",3.8,3.8)

"BLD",10249,"KRN","B",9.2,9.2)

"BLD",10249,"KRN","B",9.8,9.8)

"BLD",10249,"KRN","B",19,19)

"BLD",10249,"KRN","B",19.1,19.1)

"BLD",10249,"KRN","B",101,101)

"BLD",10249,"KRN","B",409.61,409.61)

"BLD",10249,"KRN","B",771,771)

"BLD",10249,"KRN","B",779.2,779.2)

"BLD",10249,"KRN","B",870,870)

"BLD",10249,"KRN","B",8989.51,8989.51)

"BLD",10249,"KRN","B",8989.52,8989.52)

"BLD",10249,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.2
**INSTALL NAME**
OR*3.0*481
"BLD",10246,0)
OR*3.0*481^ORDER ENTRY/RESULTS REPORTING^0^3180514^y
"BLD",10246,1,0)
^^1^1^3180402^
"BLD",10246,1,1,0)
MOCHA 2.1B Warranty Issues
"BLD",10246,4,0)
^9.64PA^^
"BLD",10246,6.3)
3
"BLD",10246,"KRN",0)
^9.67PA^779.2^20
"BLD",10246,"KRN",.4,0)
.4
"BLD",10246,"KRN",.401,0)
.401
"BLD",10246,"KRN",.402,0)
.402
"BLD",10246,"KRN",.403,0)
.403
"BLD",10246,"KRN",.5,0)
.5
"BLD",10246,"KRN",.84,0)
.84
"BLD",10246,"KRN",3.6,0)
3.6
"BLD",10246,"KRN",3.8,0)
3.8
"BLD",10246,"KRN",9.2,0)
9.2
"BLD",10246,"KRN",9.8,0)
9.8
"BLD",10246,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",10246,"KRN",9.8,"NM",1,0)
ORKPS1^^0^B110514189
"BLD",10246,"KRN",9.8,"NM",2,0)
ORKCHK4^^0^B28811607
"BLD",10246,"KRN",9.8,"NM",3,0)
ORKCHK6^^0^B29214406
"BLD",10246,"KRN",9.8,"NM",4,0)
ORDSGCHK^^0^B98434392
"BLD",10246,"KRN",9.8,"NM","B","ORDSGCHK",4)

"BLD",10246,"KRN",9.8,"NM","B","ORKCHK4",2)

"BLD",10246,"KRN",9.8,"NM","B","ORKCHK6",3)

"BLD",10246,"KRN",9.8,"NM","B","ORKPS1",1)

"BLD",10246,"KRN",19,0)
19
"BLD",10246,"KRN",19.1,0)
19.1
"BLD",10246,"KRN",101,0)
101
"BLD",10246,"KRN",409.61,0)
409.61
"BLD",10246,"KRN",771,0)
771
"BLD",10246,"KRN",779.2,0)
779.2
"BLD",10246,"KRN",870,0)
870
"BLD",10246,"KRN",8989.51,0)
8989.51
"BLD",10246,"KRN",8989.52,0)
8989.52
"BLD",10246,"KRN",8994,0)
8994
"BLD",10246,"KRN","B",.4,.4)

"BLD",10246,"KRN","B",.401,.401)

"BLD",10246,"KRN","B",.402,.402)

"BLD",10246,"KRN","B",.403,.403)

"BLD",10246,"KRN","B",.5,.5)

"BLD",10246,"KRN","B",.84,.84)

"BLD",10246,"KRN","B",3.6,3.6)

"BLD",10246,"KRN","B",3.8,3.8)

"BLD",10246,"KRN","B",9.2,9.2)

"BLD",10246,"KRN","B",9.8,9.8)

"BLD",10246,"KRN","B",19,19)

"BLD",10246,"KRN","B",19.1,19.1)

"BLD",10246,"KRN","B",101,101)

"BLD",10246,"KRN","B",409.61,409.61)

"BLD",10246,"KRN","B",771,771)

"BLD",10246,"KRN","B",779.2,779.2)

"BLD",10246,"KRN","B",870,870)

"BLD",10246,"KRN","B",8989.51,8989.51)

"BLD",10246,"KRN","B",8989.52,8989.52)

"BLD",10246,"KRN","B",8994,8994)

"BLD",10246,"QUES",0)
^9.62^^
"BLD",10246,"REQB",0)
^9.611^1^1
"BLD",10246,"REQB",1,0)
OR*3.0*469^2
"BLD",10246,"REQB","B","OR*3.0*469",1)

"MBREQ")
1
"PKG",170,-1)
1^1
"PKG",170,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
3.0^2971217^2980917^11712
"PKG",170,22,1,"PAH",1,0)
481^3180514^11857
"PKG",170,22,1,"PAH",1,1,0)
^^1^1^3180514
"PKG",170,22,1,"PAH",1,1,1,0)
MOCHA 2.1B Warranty Issues
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","ORDSGCHK")
0^4^B98434392
"RTN","ORDSGCHK",1,0)
ORDSGCHK ;SLC/AGP - PRE 0.5 DOSE ORDER CHECKS;03/29/18  05:57
"RTN","ORDSGCHK",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280,352,345,311,384,395,382,481**;Dec 17, 1997;Build 3
"RTN","ORDSGCHK",3,0)
 ;
"RTN","ORDSGCHK",4,0)
EN(ORY,DFN,TYPE,OIL) ;
"RTN","ORDSGCHK",5,0)
 N ARRAY,CNT,NAME
"RTN","ORDSGCHK",6,0)
 ;if renewed order build OIL array
"RTN","ORDSGCHK",7,0)
 I $G(ORREN)=1,+$G(ORIFN)>0 D
"RTN","ORDSGCHK",8,0)
 .;IV orders should only have a null type
"RTN","ORDSGCHK",9,0)
 .I TYPE="" S TYPE="PSIV"
"RTN","ORDSGCHK",10,0)
 .D BLDREN(TYPE,ORIFN,.OIL)
"RTN","ORDSGCHK",11,0)
 ;Build easy array to work with
"RTN","ORDSGCHK",12,0)
 S CNT=0 F  S CNT=$O(OIL(CNT)) Q:CNT'>0  D
"RTN","ORDSGCHK",13,0)
 .S NODE=$G(OIL(CNT)) Q:$P(NODE,U,2)="PSIV"
"RTN","ORDSGCHK",14,0)
 .S NAME=$P(NODE,U,2)
"RTN","ORDSGCHK",15,0)
 .Q:'$P(NODE,U,3)
"RTN","ORDSGCHK",16,0)
 .S ARRAY(NAME,$P(NODE,U,3))=NODE
"RTN","ORDSGCHK",17,0)
 I TYPE="PSH" Q
"RTN","ORDSGCHK",18,0)
 I TYPE="PSIV" D IV(.ORY,DFN,.ARRAY)
"RTN","ORDSGCHK",19,0)
 I TYPE'="PSIV" D NONIV(.ORY,DFN,.ARRAY)
"RTN","ORDSGCHK",20,0)
 Q
"RTN","ORDSGCHK",21,0)
 ;
"RTN","ORDSGCHK",22,0)
BLDREN(TYPE,ORIFN,OUT) ;
"RTN","ORDSGCHK",23,0)
 N CNT,EXTVALUE,ISOI,ITEM,LOC,NAME,NUM,NODE,ORDIALOG,TEXT,VALUE,X0,ORDSGSET
"RTN","ORDSGCHK",24,0)
 S ORDSGSET=0
"RTN","ORDSGCHK",25,0)
 S CNT=$O(OUT(""),-1)
"RTN","ORDSGCHK",26,0)
 S X0=$G(^OR(100,+ORIFN,0))
"RTN","ORDSGCHK",27,0)
 S ORDIALOG=+$P(X0,U,5)
"RTN","ORDSGCHK",28,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORDSGCHK",29,0)
 D GETORDER^ORCD(+ORIFN)
"RTN","ORDSGCHK",30,0)
 S LOC=0 F  S LOC=$O(ORDIALOG(LOC)) Q:LOC'>0  D
"RTN","ORDSGCHK",31,0)
 .S ITEM=$P($G(ORDIALOG(LOC)),U,2)
"RTN","ORDSGCHK",32,0)
 .I ITEM="" Q
"RTN","ORDSGCHK",33,0)
 .I ITEM="COMMENT" Q
"RTN","ORDSGCHK",34,0)
 .S ISOI=$S($G(ORDIALOG(LOC,0))[101.43:1,1:0)
"RTN","ORDSGCHK",35,0)
 .S NUM=0 F  S NUM=$O(ORDIALOG(LOC,NUM)) Q:NUM'>0  D
"RTN","ORDSGCHK",36,0)
 ..I NUM<1 Q
"RTN","ORDSGCHK",37,0)
 ..S VALUE=$G(ORDIALOG(LOC,NUM)),EXTVALUE=""
"RTN","ORDSGCHK",38,0)
 ..I ISOI=1 D
"RTN","ORDSGCHK",39,0)
 ...S EXTVALUE=$P($G(^ORD(101.43,VALUE,0)),U)
"RTN","ORDSGCHK",40,0)
 ...I $P($G(^ORD(101.41,LOC,0)),U)="OR GTX ADDITIVE" S ITEM="ADDITIVE"
"RTN","ORDSGCHK",41,0)
 ..I ITEM="RATE" S EXTVALUE=VALUE
"RTN","ORDSGCHK",42,0)
 ..I ITEM="DOSE" S ORDSGSET=1
"RTN","ORDSGCHK",43,0)
 ..S TEXT=TYPE_U_ITEM_U_NUM_U_VALUE_U_EXTVALUE
"RTN","ORDSGCHK",44,0)
 ..S CNT=CNT+1,OUT(CNT)=TEXT
"RTN","ORDSGCHK",45,0)
 ;SET THE DOSE AS BLANK IN THE OUTPUT ARRAY IF IT WASN'T SET ALREADY
"RTN","ORDSGCHK",46,0)
 I 'ORDSGSET S CNT=CNT+1,OUT(CNT)=TYPE_U_"DOSE^1^^"
"RTN","ORDSGCHK",47,0)
 Q
"RTN","ORDSGCHK",48,0)
 ;
"RTN","ORDSGCHK",49,0)
DURATION(STR) ;
"RTN","ORDSGCHK",50,0)
 N LEN,VAL,UNIT,IVLMT,TVAL
"RTN","ORDSGCHK",51,0)
 S (UNIT,IVLMT)="",VAL=0
"RTN","ORDSGCHK",52,0)
 I $E($$LOW^XLFSTR(STR))="f" D
"RTN","ORDSGCHK",53,0)
 . I STR["for a total of" D  Q
"RTN","ORDSGCHK",54,0)
 . .S VAL=$P(STR," ",5)
"RTN","ORDSGCHK",55,0)
 . .S UNIT=$P(STR," ",6)
"RTN","ORDSGCHK",56,0)
 . .S STR=""
"RTN","ORDSGCHK",57,0)
 . S VAL=$P(STR," ",2)
"RTN","ORDSGCHK",58,0)
 . S UNIT=$E($P(STR," ",3))
"RTN","ORDSGCHK",59,0)
 . S STR=""
"RTN","ORDSGCHK",60,0)
 I $E($$LOW^XLFSTR(STR))="w" D
"RTN","ORDSGCHK",61,0)
 . S TVAL=$P(STR," ",4)
"RTN","ORDSGCHK",62,0)
 . S VAL=+TVAL
"RTN","ORDSGCHK",63,0)
 . S LEN=$F(TVAL,VAL)
"RTN","ORDSGCHK",64,0)
 . I $P(VAL,".")="" S VAL=0_VAL
"RTN","ORDSGCHK",65,0)
 . F  S UNIT=$E(TVAL,LEN) Q:((UNIT'=0)&(UNIT'="."))  D
"RTN","ORDSGCHK",66,0)
 . . S LEN=LEN+1
"RTN","ORDSGCHK",67,0)
 . S STR=""
"RTN","ORDSGCHK",68,0)
 I $L(UNIT),$L(VAL) S IVLMT=VAL_$$UP^XLFSTR(UNIT)
"RTN","ORDSGCHK",69,0)
 I STR'="",IVLMT="" D
"RTN","ORDSGCHK",70,0)
 .I STR["ML" S IVLMT=$P(STR,"M")_"M" Q
"RTN","ORDSGCHK",71,0)
 .I STR["CC" S IVLMT=$P(STR,"C")_"M" Q
"RTN","ORDSGCHK",72,0)
 .S IVLMT=STR
"RTN","ORDSGCHK",73,0)
 Q IVLMT
"RTN","ORDSGCHK",74,0)
 ;
"RTN","ORDSGCHK",75,0)
IV(ORY,DFN,ARRAY) ;
"RTN","ORDSGCHK",76,0)
 N CNT,DRUG,DRUGIEN,DRUGNAME,NAME,NUM,OI,ORBASE,ORPSJARR,STR,STRENGTH,NODE
"RTN","ORDSGCHK",77,0)
 ;
"RTN","ORDSGCHK",78,0)
 I '$D(ARRAY) D  Q
"RTN","ORDSGCHK",79,0)
 . S ORY=$G(ORY)+1,ORY(ORY)="ERR^Incomplete data.  Dosage check could not be performed."
"RTN","ORDSGCHK",80,0)
 ;populate single values from order
"RTN","ORDSGCHK",81,0)
 S ORPSJARR("TVOL_DUR")="",ORPSJARR("SCHEDULE")=""
"RTN","ORDSGCHK",82,0)
 I $D(ARRAY("DAYS")) S ORPSJARR("TVOL_DUR")=$$DURATION($P(ARRAY("DAYS",1),U,4))
"RTN","ORDSGCHK",83,0)
 ;S RATE=$P(ARRAY(NAME,1),U,4)
"RTN","ORDSGCHK",84,0)
 S ORPSJARR("MR_IEN")=$P(ARRAY("ROUTE",1),U,4)
"RTN","ORDSGCHK",85,0)
 I $D(ARRAY("SCHEDULE")) S ORPSJARR("SCHEDULE")=$P(ARRAY("SCHEDULE",1),U,4)
"RTN","ORDSGCHK",86,0)
 S ORPSJARR("IV_TYPE")=$S($P(ARRAY("TYPE",1),U,4)="I":1,1:2)
"RTN","ORDSGCHK",87,0)
 I ORPSJARR("IV_TYPE")=2 S ORPSJARR("INF_RATE")=$P(ARRAY("RATE",1),U,5)
"RTN","ORDSGCHK",88,0)
 ;
"RTN","ORDSGCHK",89,0)
 ;build additive first, Drug, Strength/unit, bag
"RTN","ORDSGCHK",90,0)
 F NAME="ADDITIVE","ORDERABLE" D
"RTN","ORDSGCHK",91,0)
 .K DRUG
"RTN","ORDSGCHK",92,0)
 .S CNT=0,NUM=0
"RTN","ORDSGCHK",93,0)
 .F  S NUM=$O(ARRAY(NAME,NUM)) Q:NUM'>0  D
"RTN","ORDSGCHK",94,0)
 ..S CNT=CNT+1
"RTN","ORDSGCHK",95,0)
 ..S NODE=$G(ARRAY(NAME,NUM)),OI=$P(NODE,U,4)
"RTN","ORDSGCHK",96,0)
 ..;
"RTN","ORDSGCHK",97,0)
 ..S DRUGIEN=+$P(^ORD(101.43,OI,0),U,2) I DRUGIEN="" Q  ;PHARMACY OI FROM 101.43
"RTN","ORDSGCHK",98,0)
 ..S DRUGNAME=$P($G(ARRAY(NAME,NUM)),U,5) ;OI NAME
"RTN","ORDSGCHK",99,0)
 ..;
"RTN","ORDSGCHK",100,0)
 ..I NAME="ADDITIVE" D  Q
"RTN","ORDSGCHK",101,0)
 ...S STRENGTH=$P($G(ARRAY("STRENGTH",NUM)),U,4)_" "_$P($G(ARRAY("UNITS",NUM)),U,4)
"RTN","ORDSGCHK",102,0)
 ...S STR=+DRUGIEN_U_DRUGNAME_U_STRENGTH_U_$P($G(ARRAY("ADDFREQ",NUM)),U,4)
"RTN","ORDSGCHK",103,0)
 ...S ORPSJARR("AD",CNT)=STR_U_0
"RTN","ORDSGCHK",104,0)
 ...;check if enhanced order checks were done for this drug order and if so set ORDRUG(CNT,"ENH")=1
"RTN","ORDSGCHK",105,0)
 ...I $G(^TMP($J,"ORENHCHK"))=1 S ORPSJARR("AD",CNT)=STR_U_1
"RTN","ORDSGCHK",106,0)
 ..;
"RTN","ORDSGCHK",107,0)
 ..;Solution information
"RTN","ORDSGCHK",108,0)
 ..S STR=+DRUGIEN_U_DRUGNAME_U_$P($G(ARRAY("VOLUME",NUM)),U,4)_" ML"
"RTN","ORDSGCHK",109,0)
 ..S ORPSJARR("SOL",CNT)=STR,$P(ORPSJARR("SOL",CNT),U,5)=0
"RTN","ORDSGCHK",110,0)
 ..;check if enhanced order checks were done for this drug order and if so set ORDRUG(CNT,"ENH")=1
"RTN","ORDSGCHK",111,0)
 ..I $G(^TMP($J,"ORENHCHK"))=1 S ORPSJARR("SOL",CNT)=STR,$P(ORPSJARR("SOL",CNT),U,5)=1
"RTN","ORDSGCHK",112,0)
 ;
"RTN","ORDSGCHK",113,0)
 I $D(^TMP($J,"ORDSGCHK_CACHE")) M ^TMP($J,"ORDSGCHK2")=^TMP($J,"ORDSGCHK_CACHE")
"RTN","ORDSGCHK",114,0)
 I '$D(^TMP($J,"ORDSGCHK_CACHE")) D
"RTN","ORDSGCHK",115,0)
 .S ORBASE(1)="ORDSGCHK1"
"RTN","ORDSGCHK",116,0)
 .S ORBASE(2)="ORDSGCHK2"
"RTN","ORDSGCHK",117,0)
 .D DOSE^PSJAPIDS(.ORBASE,DFN,.ORPSJARR)
"RTN","ORDSGCHK",118,0)
 .M ^TMP($J,"ORDSGCHK_CACHE")=^TMP($J,"ORDSGCHK2")
"RTN","ORDSGCHK",119,0)
 D PARSEOUT
"RTN","ORDSGCHK",120,0)
 K ^TMP($J,"ORDSGCHK1"),^TMP($J,"ORDSGCHK2")
"RTN","ORDSGCHK",121,0)
 Q
"RTN","ORDSGCHK",122,0)
 ;
"RTN","ORDSGCHK",123,0)
NONIV(ORY,DFN,ARRAY) ;
"RTN","ORDSGCHK",124,0)
 N CNT,DOSESTR,DRUG,DRUGARR,DRUGIEN,DRUGNAME,DUR,NAME,NODE
"RTN","ORDSGCHK",125,0)
 N OIIEN,ORBASE,ORDRUG,ORPSARR,PACK,PSNODE,SUB,TYPE,ADMIN
"RTN","ORDSGCHK",126,0)
 ;
"RTN","ORDSGCHK",127,0)
 ;assume same drug type used throughout the order dialog
"RTN","ORDSGCHK",128,0)
 ;new free-text dose orders do not have a drug, all other free-text orders do
"RTN","ORDSGCHK",129,0)
 S DRUGIEN=+$P($G(ARRAY("DRUG",1)),U,4)
"RTN","ORDSGCHK",130,0)
 I DRUGIEN>0,$$EXMT^PSSDSAPI(DRUGIEN)=1 Q
"RTN","ORDSGCHK",131,0)
 ;if no ARRAY(DOSE) node set it to null to force free text evaluation
"RTN","ORDSGCHK",132,0)
 N I S I=0 F  S I=$O(ARRAY("INSTR",I)) Q:'I  I '$D(ARRAY("DOSE",I))  S ARRAY("DOSE",I)=$P(ARRAY("INSTR",I),U)_"^DOSE^"_I_"^"
"RTN","ORDSGCHK",133,0)
 ;
"RTN","ORDSGCHK",134,0)
 S ADMIN="",ADMIN("SAVE")=1
"RTN","ORDSGCHK",135,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","ORDSGCHK",136,0)
 .S SUB=$$GETSUB(NAME) I SUB="" Q
"RTN","ORDSGCHK",137,0)
 .S CNT=0 F  S CNT=$O(ARRAY(NAME,CNT)) Q:CNT'>0  D
"RTN","ORDSGCHK",138,0)
 ..S NODE=$G(ARRAY(NAME,CNT))
"RTN","ORDSGCHK",139,0)
 ..;
"RTN","ORDSGCHK",140,0)
 ..;get dose information and drug information from Dose Prompt
"RTN","ORDSGCHK",141,0)
 ..I SUB="DOSE" D
"RTN","ORDSGCHK",142,0)
 ...S PACK=$P(NODE,U)
"RTN","ORDSGCHK",143,0)
 ...S TYPE=$S($P(NODE,U)="PSO":"O",1:"I")
"RTN","ORDSGCHK",144,0)
 ...S DOSESTR=$P(NODE,U,4)
"RTN","ORDSGCHK",145,0)
 ...;free text dose
"RTN","ORDSGCHK",146,0)
 ...I DOSESTR="" D
"RTN","ORDSGCHK",147,0)
 ....S ORDRUG(CNT,"RX_NUM")=TYPE_";1;PROSPECTIVE;"_CNT
"RTN","ORDSGCHK",148,0)
 ....;I DRUGIEN>0 D  Q
"RTN","ORDSGCHK",149,0)
 ....;.S ORPSARR(CNT,"DO")=$P($G(ARRAY("INSTR",CNT)),U,4)
"RTN","ORDSGCHK",150,0)
 ....;.S ORDRUG(CNT,"DRUG_IEN")=DRUGIEN
"RTN","ORDSGCHK",151,0)
 ....;.S ORDRUG(CNT,"DRUG_NM")=$$GETPSNM^ORKPS(DRUGIEN) ;DRUGNAME
"RTN","ORDSGCHK",152,0)
 ....N ORTDOSE,ORTDNAME
"RTN","ORDSGCHK",153,0)
 ....S ARRAY("ORPSA",CNT)=$$OI2DD^ORKPS($P(ARRAY("ORDERABLE",1),U,4),$E($P(ARRAY("ORDERABLE",1),U,1),3),2)
"RTN","ORDSGCHK",154,0)
 ....Q:'$P(ARRAY("ORPSA",CNT),";",1)
"RTN","ORDSGCHK",155,0)
 ....K ^TMP($J,"DRUGARR") D ZERO^PSS50($P(ARRAY("ORPSA",CNT),";",1),,,,,"DRUGARR")
"RTN","ORDSGCHK",156,0)
 ....N ORDRGNM S ORDRGNM=$G(^TMP($J,"DRUGARR",$P(ARRAY("ORPSA",CNT),";",1),.01))
"RTN","ORDSGCHK",157,0)
 ....S ORPSARR(CNT,"DO")=$$TRIM^ORBCMA32($P($P($G(ARRAY("INSTR",CNT)),U,4),ORDRGNM))
"RTN","ORDSGCHK",158,0)
 ....S OIIEN=$P($G(ARRAY("ORDERABLE",1)),U,4) ;orderable only exists for first item (in complex order)
"RTN","ORDSGCHK",159,0)
 ....S ORDRUG("OI")=+$P($G(^ORD(101.43,OIIEN,0)),U,2)
"RTN","ORDSGCHK",160,0)
 ....S ORDRUG("PACKAGE")=$S(PACK="PSO":"O",PACK="PSH":"X",1:"I")
"RTN","ORDSGCHK",161,0)
 ....S PSNODE=$G(^ORD(101.43,OIIEN,"PS"))
"RTN","ORDSGCHK",162,0)
 ....S ORDRUG("OI_USAGE")=$S($P(PSNODE,U,4)=1:"A",1:"")_$S($P(PSNODE,U,3)=1:"B",1:"")
"RTN","ORDSGCHK",163,0)
 ....S ORDRUG(CNT,"DRUG_NM")=$$TRIM^ORBCMA32($P($G(ARRAY("ORDERABLE",1)),U,5))
"RTN","ORDSGCHK",164,0)
 ...;
"RTN","ORDSGCHK",165,0)
 ...;check if enhanced order checks were done for this drug order and if so set ORDRUG(CNT,"ENH")=1
"RTN","ORDSGCHK",166,0)
 ...I $G(^TMP($J,"ORENHCHK"))=1,((DOSESTR=""&$D(ORDRUG))!(DOSESTR'="")) S ORDRUG(CNT,"ENH")=1
"RTN","ORDSGCHK",167,0)
 ...Q:DOSESTR=""
"RTN","ORDSGCHK",168,0)
 ...S DRUGIEN=$P(DOSESTR,"&",6)
"RTN","ORDSGCHK",169,0)
 ...K ^TMP($J,"DRUGARR")
"RTN","ORDSGCHK",170,0)
 ...D ZERO^PSS50(DRUGIEN,,,,,"DRUGARR")
"RTN","ORDSGCHK",171,0)
 ...S DRUGNAME=$G(^TMP($J,"DRUGARR",DRUGIEN,.01))
"RTN","ORDSGCHK",172,0)
 ...K ^TMP($J,"DRUGARR")
"RTN","ORDSGCHK",173,0)
 ...;
"RTN","ORDSGCHK",174,0)
 ...;Local Possible Dose
"RTN","ORDSGCHK",175,0)
 ...I $P(DOSESTR,"&")="" D  Q
"RTN","ORDSGCHK",176,0)
 ....S ORPSARR(CNT,"DO")=$P($G(ARRAY("INSTR",CNT)),U,4)
"RTN","ORDSGCHK",177,0)
 ....S ORDRUG(CNT,"RX_NUM")=TYPE_";1;PROSPECTIVE;"_CNT
"RTN","ORDSGCHK",178,0)
 ....S ORDRUG(CNT,"DRUG_IEN")=DRUGIEN
"RTN","ORDSGCHK",179,0)
 ....S ORDRUG(CNT,"DRUG_NM")=$$GETPSNM^ORKPS(DRUGIEN) ;DRUGNAME
"RTN","ORDSGCHK",180,0)
 ...;
"RTN","ORDSGCHK",181,0)
 ...;Possible Dose
"RTN","ORDSGCHK",182,0)
 ...S ORPSARR(CNT,"DRG_AMT")=$P(DOSESTR,"&")
"RTN","ORDSGCHK",183,0)
 ...S ORPSARR(CNT,"DRG_UNIT")=$P(DOSESTR,"&",2)
"RTN","ORDSGCHK",184,0)
 ...S ORDRUG(CNT,"RX_NUM")=TYPE_";1;PROSPECTIVE;"_CNT
"RTN","ORDSGCHK",185,0)
 ...S ORDRUG(CNT,"DRUG_IEN")=DRUGIEN
"RTN","ORDSGCHK",186,0)
 ...S ORDRUG(CNT,"DRUG_NM")=$$GETPSNM^ORKPS(DRUGIEN) ;DRUGNAME
"RTN","ORDSGCHK",187,0)
 ..;
"RTN","ORDSGCHK",188,0)
 ..;Additional Order Data
"RTN","ORDSGCHK",189,0)
 ..I SUB="DRATE" D  Q
"RTN","ORDSGCHK",190,0)
 ...S DUR=$P($P(NODE,U,4)," ")
"RTN","ORDSGCHK",191,0)
 ...S ORPSARR(CNT,SUB)=DUR_$$DRATESTR($P($P(NODE,U,4)," ",2))
"RTN","ORDSGCHK",192,0)
 ..I SUB="CONJ",$P(NODE,U)="PSI",ADMIN("SAVE") D
"RTN","ORDSGCHK",193,0)
 ...S:$D(ARRAY("SCHEDULE",CNT))=1 ADMIN=ADMIN_";"_$P(ARRAY("SCHEDULE",CNT),U,4)
"RTN","ORDSGCHK",194,0)
 ...I $P($G(ARRAY(SUB,CNT)),U,4)'="A" S ADMIN("SAVE")=0
"RTN","ORDSGCHK",195,0)
 ..S ORPSARR(CNT,SUB)=$P(NODE,U,4)
"RTN","ORDSGCHK",196,0)
 ;
"RTN","ORDSGCHK",197,0)
 ;Get rid of any preceeding or trailing spaces on the dose
"RTN","ORDSGCHK",198,0)
 N ORSPI S ORSPI=0 F  S ORSPI=$O(ORPSARR(ORSPI)) Q:'ORSPI  D
"RTN","ORDSGCHK",199,0)
 .I $D(ORPSARR(ORSPI,"DO")) S ORPSARR(ORSPI,"DO")=$$TRIM^XLFSTR(ORPSARR(ORSPI,"DO"))
"RTN","ORDSGCHK",200,0)
 ;
"RTN","ORDSGCHK",201,0)
 I ADMIN'="" D
"RTN","ORDSGCHK",202,0)
 .N ORAT
"RTN","ORDSGCHK",203,0)
 .D ADMIN^ORWDPS2(.ORAT,DFN,ADMIN,$P($G(ARRAY("ORDERABLE",1)),U,4),+ORL,$P($G(ARRAY("ADMIN",1)),U,4))
"RTN","ORDSGCHK",204,0)
 .I $P(ORAT,U,4)'="" S ORPSARR(1,"EFD")=$P(ORAT,U,4)
"RTN","ORDSGCHK",205,0)
 ;
"RTN","ORDSGCHK",206,0)
 I $D(ORDRUG) D
"RTN","ORDSGCHK",207,0)
 .S ORBASE(1)="ORDSGCHK1",ORBASE(2)="ORDSGCHK2"
"RTN","ORDSGCHK",208,0)
 .S ORPSARR("CONTEXT")="CPRS-UD"
"RTN","ORDSGCHK",209,0)
 .D DOSE^PSSDSAPD(.ORBASE,DFN,.ORPSARR,.ORDRUG),PARSEOUT
"RTN","ORDSGCHK",210,0)
 .K ^TMP($J,"ORDSGCHK1"),^TMP($J,"ORDSGCHK2")
"RTN","ORDSGCHK",211,0)
 Q
"RTN","ORDSGCHK",212,0)
 ;
"RTN","ORDSGCHK",213,0)
PARSEOUT ;PARSE OUTPUT GLOBAL
"RTN","ORDSGCHK",214,0)
 N ORNBP S ORNBP=""
"RTN","ORDSGCHK",215,0)
 I $D(^TMP($J,"ORDSGCHK2")) D
"RTN","ORDSGCHK",216,0)
 .I $P($G(^TMP($J,"ORDSGCHK2","OUT",0)),U)=-1 S ORNBP=$$DSDWNMSG^ORDSGCHK Q
"RTN","ORDSGCHK",217,0)
 .I $D(^TMP($J,"ORDSGCHK2","OUT","ERROR")) D
"RTN","ORDSGCHK",218,0)
 ..N I S I="" F  S I=$O(^TMP($J,"ORDSGCHK2","OUT","ERROR",I)) Q:'$L(I)  D
"RTN","ORDSGCHK",219,0)
 ...N J S J="" F  S J=$O(^TMP($J,"ORDSGCHK2","OUT","ERROR",I,J)) Q:'$L(J)  D
"RTN","ORDSGCHK",220,0)
 ....N K S K="" F  S K=$O(^TMP($J,"ORDSGCHK2","OUT","ERROR",I,J,K)) Q:'$L(K)  D
"RTN","ORDSGCHK",221,0)
 .....I $L($G(^TMP($J,"ORDSGCHK2","OUT","ERROR",I,J,K,"MSG"))) S ORY=$G(ORY)+1,ORY(ORY)="ERR^"_^TMP($J,"ORDSGCHK2","OUT","ERROR",I,J,K,"MSG") D
"RTN","ORDSGCHK",222,0)
 ......I $L($G(^TMP($J,"ORDSGCHK2","OUT","ERROR",I,J,K,"TEXT"))) S ORY(ORY)=ORY(ORY)_"  "_$G(^TMP($J,"ORDSGCHK2","OUT","ERROR",I,J,K,"TEXT"))
"RTN","ORDSGCHK",223,0)
 .I $D(^TMP($J,"ORDSGCHK2","OUT","CHECK")) D
"RTN","ORDSGCHK",224,0)
 .N ORI S ORI=0 F  S ORI=$O(^TMP($J,"ORDSGCHK2","OUT","CHECK",ORI)) Q:'ORI  D
"RTN","ORDSGCHK",225,0)
 ..N ORJ S ORJ="" F  S ORJ=$O(^TMP($J,"ORDSGCHK2","OUT","CHECK",ORI,ORJ)) Q:'$L(ORJ)  D
"RTN","ORDSGCHK",226,0)
 ...N ORK S ORK=0 F  S ORK=$O(^TMP($J,"ORDSGCHK2","OUT","CHECK",ORI,ORJ,ORK)) Q:'ORK  D
"RTN","ORDSGCHK",227,0)
 ....N ORDGTYPE S ORDGTYPE="DS"
"RTN","ORDSGCHK",228,0)
 ....N ORRTTYPE S ORRTTYPE=$P($G(^TMP($J,"ORDSGCHK2","OUT","CHECK",ORI,ORJ,ORK,"ATYPE")),U,2)
"RTN","ORDSGCHK",229,0)
 ....I ORRTTYPE="INFORMATIONAL" S ORDGTYPE="INFO"
"RTN","ORDSGCHK",230,0)
 ....I ORRTTYPE="GENERAL" S ORDGTYPE="INFO"
"RTN","ORDSGCHK",231,0)
 ....I ORRTTYPE="EXCEPTION" S ORDGTYPE="INFO"
"RTN","ORDSGCHK",232,0)
 ....S ORY=$G(ORY)+1,ORY(ORY)=ORDGTYPE_U
"RTN","ORDSGCHK",233,0)
 ....N ORL S ORL=0 F  S ORL=$O(^TMP($J,"ORDSGCHK2","OUT","CHECK",ORI,ORJ,ORK,"MSG",ORL)) Q:'ORL  D
"RTN","ORDSGCHK",234,0)
 .....S ORY(ORY)=ORY(ORY)_^TMP($J,"ORDSGCHK2","OUT","CHECK",ORI,ORJ,ORK,"MSG",ORL)_" "
"RTN","ORDSGCHK",235,0)
 I $L(ORNBP)>1 S ORY=$G(ORY)+1,ORY(ORY)="ERR^"_ORNBP,ORNBP=""
"RTN","ORDSGCHK",236,0)
 Q
"RTN","ORDSGCHK",237,0)
 ;
"RTN","ORDSGCHK",238,0)
GETSUB(NAME) ;
"RTN","ORDSGCHK",239,0)
 I NAME="DAYS" Q "DRATE"
"RTN","ORDSGCHK",240,0)
 I NAME="ROUTE" Q "MR_IEN"
"RTN","ORDSGCHK",241,0)
 I "^CONJ^DOSE^SCHEDULE^"[(U_NAME_U) Q NAME
"RTN","ORDSGCHK",242,0)
 Q ""
"RTN","ORDSGCHK",243,0)
 ;
"RTN","ORDSGCHK",244,0)
DRATESTR(ORIN) ;change the form of the DURATION
"RTN","ORDSGCHK",245,0)
 ;DAYS=D,WEEKS=W,MONTHS=L,HOURS=H,MINUTES=M
"RTN","ORDSGCHK",246,0)
 I $$UP^XLFSTR(ORIN)="MONTHS" Q "L"
"RTN","ORDSGCHK",247,0)
 Q $E($$UP^XLFSTR(ORIN))
"RTN","ORDSGCHK",248,0)
 ;
"RTN","ORDSGCHK",249,0)
DSDWNMSG() ;dosage down message (not displayed to user)
"RTN","ORDSGCHK",250,0)
 Q "Drug Dosage checks were not able to be performed."
"RTN","ORKCHK4")
0^2^B28811607
"RTN","ORKCHK4",1,0)
ORKCHK4 ; SLC/CLA - Support routine called by ORKCHK to do SELECT mode order checks ;03/29/18  06:02
"RTN","ORKCHK4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,87,94,123,162,190,249,272,345,481**;Dec 17, 1997;Build 3
"RTN","ORKCHK4",3,0)
 Q
"RTN","ORKCHK4",4,0)
 ;
"RTN","ORKCHK4",5,0)
EN(ORKS,ORKDFN,ORKA,ORENT,ORKTMODE,OROIL,ORIVRAN,ORDODSG) ;perform order checking for orderable item selection
"RTN","ORKCHK4",6,0)
 ;ORIVRAN: FLAG THAT DENOTES IF CHECK^ORKPS HAS ALREADY RUN FOR THIS INFUSION ORDER
"RTN","ORKCHK4",7,0)
 ;         1 FOR ALREADY EXECUTED
"RTN","ORKCHK4",8,0)
 ;         EMPTY STRING FOR NOT YET EXECUTED
"RTN","ORKCHK4",9,0)
 ;ORDODSG: FLAG THAT DENOTES IF DOSAGE CHECKS SHOULD BE PERFORMED
"RTN","ORKCHK4",10,0)
 ;         1 FOR PERFORM DOSAGE CHECKS
"RTN","ORKCHK4",11,0)
 ;         0 FOR DO NOT PERFORM DOSAGE CHECKS
"RTN","ORKCHK4",12,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORKCHK4",13,0)
 ;
"RTN","ORKCHK4",14,0)
 N OI,ORKDG,HL7,ODT,ORNUM,HL7NPTR,HL7NTXT,HL7NCOD,HL7LPTR,HL7LTXT,HL7LCOD
"RTN","ORKCHK4",15,0)
 N ORKMSG,ORKTXT
"RTN","ORKCHK4",16,0)
 ;
"RTN","ORKCHK4",17,0)
 S OI=$P(ORKA,"|"),ORKDG=$P(ORKA,"|",2)
"RTN","ORKCHK4",18,0)
 S HL7=$P(ORKA,"|",3),ODT=$P(ORKA,"|",4),ORNUM=$P(ORKA,"|",5)
"RTN","ORKCHK4",19,0)
 S HL7NPTR=$P(HL7,U),HL7NTXT=$P(HL7,U,2),HL7NCOD=$P(HL7,U,3)
"RTN","ORKCHK4",20,0)
 S HL7LPTR=$P(HL7,U,4),HL7LTXT=$P(HL7,U,5),HL7LCOD=$P(HL7,U,6)
"RTN","ORKCHK4",21,0)
 ;
"RTN","ORKCHK4",22,0)
 I $E(ORKDG,1,2)="PS" D PHARM
"RTN","ORKCHK4",23,0)
 I $E(ORKDG,1,2)'="PS" D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SELECT")
"RTN","ORKCHK4",24,0)
 Q
"RTN","ORKCHK4",25,0)
 ;
"RTN","ORKCHK4",26,0)
PHARM ;process pharmacy order checks:
"RTN","ORKCHK4",27,0)
 N ORPSPKG,ORPSA,ORKDD
"RTN","ORKCHK4",28,0)
 N ORCRITN,ORCRITF,ORCRITD,ORSIGN,ORSIGF,ORSIGD,ORDUPN,ORDUPF,ORDUPD,ORDUPCN,ORDUPCF,ORDUPCD
"RTN","ORKCHK4",29,0)
 ;
"RTN","ORKCHK4",30,0)
 D PARAMS("CRITICAL DRUG INTERACTION",.ORCRITN,.ORCRITF,.ORCRITD)
"RTN","ORKCHK4",31,0)
 D PARAMS("SIGNIFICANT DRUG INTERACTION",.ORSIGN,.ORSIGF,.ORSIGD)
"RTN","ORKCHK4",32,0)
 D PARAMS("DUPLICATE DRUG ORDER",.ORDUPN,.ORDUPF,.ORDUPD)
"RTN","ORKCHK4",33,0)
 D PARAMS("DUPLICATE DRUG THERAPY",.ORDUPCN,.ORDUPCF,.ORDUPCD)
"RTN","ORKCHK4",34,0)
 ;
"RTN","ORKCHK4",35,0)
 ;dispense drug selected:
"RTN","ORKCHK4",36,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK4",37,0)
 .D RXOCS
"RTN","ORKCHK4",38,0)
 .S:$P(ORKA,"|",7)'="" $P(ORKA,"|",7)=""
"RTN","ORKCHK4",39,0)
 .D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SELECT")
"RTN","ORKCHK4",40,0)
 ;
"RTN","ORKCHK4",41,0)
 ;dispense drug NOT selected, split OI into dispense drugs:
"RTN","ORKCHK4",42,0)
 I '$L($G(HL7LPTR)) D
"RTN","ORKCHK4",43,0)
 .S ORPSPKG=$E(ORKDG,3)
"RTN","ORKCHK4",44,0)
 .I "IOH"[ORPSPKG D
"RTN","ORKCHK4",45,0)
 ..S ORPSA=$$OI2DD^ORKPS(OI,ORPSPKG,1)
"RTN","ORKCHK4",46,0)
 ..I +ORPSA D
"RTN","ORKCHK4",47,0)
 ...S HL7LTXT=$P($G(^ORD(101.43,OI,0)),U)
"RTN","ORKCHK4",48,0)
 ...S HL7NPTR=$P(ORPSA,";",2)
"RTN","ORKCHK4",49,0)
 ...S HL7LPTR=+ORPSA
"RTN","ORKCHK4",50,0)
 ...S HL7LCOD="99PSD",HL7NCOD="99NDF"
"RTN","ORKCHK4",51,0)
 ...S $P(HL7,U)=HL7NPTR,$P(HL7,U,3)=HL7NCOD
"RTN","ORKCHK4",52,0)
 ...S $P(HL7,U,4)=HL7LPTR,$P(HL7,U,5)=HL7LTXT,$P(HL7,U,6)=HL7LCOD
"RTN","ORKCHK4",53,0)
 ...S $P(ORKA,"|",3)=HL7  ;set these for MLM OCX call
"RTN","ORKCHK4",54,0)
 ..D RXOCS
"RTN","ORKCHK4",55,0)
 ..S:$P(ORKA,"|",7)'="" $P(ORKA,"|",7)=""
"RTN","ORKCHK4",56,0)
 ..Q:HL7LTXT=""
"RTN","ORKCHK4",57,0)
 ..D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SELECT")
"RTN","ORKCHK4",58,0)
 ;ONLY DISPLAY THE ERROR MESSAGE FOR A FREE-TEXT DOSAGE WHEN PHARMACY SAYS TO
"RTN","ORKCHK4",59,0)
 I +$P($G(ORPSA),";",5)=1 D
"RTN","ORKCHK4",60,0)
 .N ORKSMSG,OROITXT,ORDOSE
"RTN","ORKCHK4",61,0)
 .S OROITXT=$P($G(^ORD(101.43,OI,0)),U),ORDOSE=$$DS^PSSDSAPI
"RTN","ORKCHK4",62,0)
 .I $L(OROITXT)>0 S OROITXT=" for drug "_$$TRIM^XLFSTR(OROITXT)
"RTN","ORKCHK4",63,0)
 .S ORKMSG="Order checks could not be done"_OROITXT_". Please complete a manual check for Drug Interactions"
"RTN","ORKCHK4",64,0)
 .S ORKMSG=ORKMSG_$S(ORDOSE:",",1:" and")_" Duplicate Therapy"
"RTN","ORKCHK4",65,0)
 .I ORDOSE S ORKMSG=ORKMSG_" and appropriate Dosing"
"RTN","ORKCHK4",66,0)
 .S ORKMSG=ORKMSG_"."
"RTN","ORKCHK4",67,0)
 .S ORKS("ORK",2_$E(ORKMSG,1,225))=ORNUM_U_25_U_3_U_ORKMSG,ORDODSG=0
"RTN","ORKCHK4",68,0)
 Q
"RTN","ORKCHK4",69,0)
 ;
"RTN","ORKCHK4",70,0)
RXOCS ;drug-drug interaction, duplicate drug order, duplicate drug class
"RTN","ORKCHK4",71,0)
 Q:ORCRITF_ORSIGF_ORDUPF_ORDUPCF'["E"  ;quit if none are "E"nabled
"RTN","ORKCHK4",72,0)
 N ORKRX,ORPSNUM,ORY,CHK,XX
"RTN","ORKCHK4",73,0)
 D CHECK^ORKPS(.ORKRX,ORKDFN,HL7LPTR_U_HL7LTXT,OI,ORKDG,.OROIL,+$P($G(ORPSA),";",4),$P(ORKA,"|",7),.ORIVRAN,.ORDODSG)
"RTN","ORKCHK4",74,0)
 S CHK=0,XX="" F  S CHK=$O(ORKRX(CHK)) Q:'CHK  D
"RTN","ORKCHK4",75,0)
 .S XX=ORKRX(CHK)
"RTN","ORKCHK4",76,0)
 .;
"RTN","ORKCHK4",77,0)
 .;get errors/exceptions/checks not done
"RTN","ORKCHK4",78,0)
 .I $P(XX,U)="ERR" D
"RTN","ORKCHK4",79,0)
 ..S ORKS("ORK",2_$E($P(XX,U,2),1,225))=ORNUM_U_25_U_3_U_$P(XX,U,2)
"RTN","ORKCHK4",80,0)
 .;
"RTN","ORKCHK4",81,0)
 .;critical drug interaction:
"RTN","ORKCHK4",82,0)
 .I $P(XX,U)="DI",$P(XX,U,2)="CRITICAL" D
"RTN","ORKCHK4",83,0)
 ..Q:ORCRITF="D"
"RTN","ORKCHK4",84,0)
 ..S ORPSNUM=$P(XX,U,3)
"RTN","ORKCHK4",85,0)
 ..S ORKTXT=$P(XX,U,2)_" drug-drug interaction: "_$P(XX,U,5)
"RTN","ORKCHK4",86,0)
 ..S ORKS("ORK",ORCRITD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKTXT,1,225))=ORNUM_U_ORCRITN_U_ORCRITD_U_ORKTXT
"RTN","ORKCHK4",87,0)
 .;
"RTN","ORKCHK4",88,0)
 .;significant drug interaction:
"RTN","ORKCHK4",89,0)
 .I $P(XX,U)="DI",$P(XX,U,2)="SIGNIFICANT" D
"RTN","ORKCHK4",90,0)
 ..Q:ORSIGF="D"
"RTN","ORKCHK4",91,0)
 ..S ORPSNUM=$P(XX,U,3)
"RTN","ORKCHK4",92,0)
 ..S ORKTXT=$P(XX,U,2)_" drug-drug interaction: "_$P(XX,U,5)
"RTN","ORKCHK4",93,0)
 ..S ORKS("ORK",ORSIGD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKTXT,1,225))=ORNUM_U_ORSIGN_U_ORSIGD_U_ORKTXT
"RTN","ORKCHK4",94,0)
 .;
"RTN","ORKCHK4",95,0)
 .;duplicate drug:
"RTN","ORKCHK4",96,0)
 .I $P(XX,U)="DD" D
"RTN","ORKCHK4",97,0)
 ..Q:ORDUPF="D"
"RTN","ORKCHK4",98,0)
 ..S ORPSNUM=$P(XX,U,4)  ;get the associated order number
"RTN","ORKCHK4",99,0)
 ..S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK4",100,0)
 ..I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) D
"RTN","ORKCHK4",101,0)
 ...D TEXT^ORQ12(.ORY,ORPSNUM,"")
"RTN","ORKCHK4",102,0)
 ...S ORKTXT=ORKTXT_$S($D(ORY(2))=1:" "_$$TRIM^XLFSTR(ORY(2)),1:"")_" ["_$P($G(^ORD(100.01,+$P(^OR(100,+ORPSNUM,3),U,3),0)),U,1)_"]"
"RTN","ORKCHK4",103,0)
 ..S ORKMSG="Duplicate drug order: "_ORKTXT
"RTN","ORKCHK4",104,0)
 ..S ORKS("ORK",ORDUPD_","_$G(ORNUM)_","_ORPSNUM_",Duplicate drug order: "_$E($P(XX,U,3),1,200))=ORNUM_U_ORDUPN_U_ORDUPD_U_ORKMSG_U_$G(ORPSNUM)
"RTN","ORKCHK4",105,0)
 .;
"RTN","ORKCHK4",106,0)
 .;duplicate class: NOW DRUG THERAPY
"RTN","ORKCHK4",107,0)
 .I $P(XX,U)="DC" D
"RTN","ORKCHK4",108,0)
 ..Q:ORDUPCF="D"
"RTN","ORKCHK4",109,0)
 ..S ORPSNUM=$P(XX,U,2)  ;get the associated order number
"RTN","ORKCHK4",110,0)
 ..S ORKMSG=$P(XX,U,4)
"RTN","ORKCHK4",111,0)
 ..N ORKCNT S ORKCNT=1 F  Q:'$D(ORKS("ORK",ORDUPCD_","_$G(ORNUM)_","_ORPSNUM_","_ORKCNT))  S ORKCNT=ORKCNT+1
"RTN","ORKCHK4",112,0)
 ..S ORKS("ORK",ORDUPCD_","_$G(ORNUM)_","_ORPSNUM_","_ORKCNT)=ORNUM_U_ORDUPCN_U_ORDUPCD_U_ORKMSG
"RTN","ORKCHK4",113,0)
 Q
"RTN","ORKCHK4",114,0)
 ;
"RTN","ORKCHK4",115,0)
PARAMS(ORKNAME,ORKNUM,ORKFLAG,ORKDNGR) ; get parameter values for an order chk
"RTN","ORKCHK4",116,0)
 S ORKNUM=0,ORKNUM=$O(^ORD(100.8,"B",ORKNAME,ORKNUM))
"RTN","ORKCHK4",117,0)
 S ORKFLAG=$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",ORKNUM,"I")
"RTN","ORKCHK4",118,0)
 S ORKDNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",ORKNUM,"I")
"RTN","ORKCHK4",119,0)
 Q
"RTN","ORKCHK6")
0^3^B29214406
"RTN","ORKCHK6",1,0)
ORKCHK6 ; SLC/CLA - Support routine called by ORKCHK to do SESSION mode order checks ;03/21/18  06:21
"RTN","ORKCHK6",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,87,94,123,162,190,249,280,272,346,345,269,469,481**;Dec 17, 1997;Build 3
"RTN","ORKCHK6",3,0)
 Q
"RTN","ORKCHK6",4,0)
 ;
"RTN","ORKCHK6",5,0)
EN(ORKS,ORKDFN,ORKA,ORENT,ORKTMODE) ;perform order checking for entire ordering session
"RTN","ORKCHK6",6,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORKCHK6",7,0)
 ;
"RTN","ORKCHK6",8,0)
 N OI,ORKDG,HL7,ODT,ORNUM,HL7NPTR,HL7NTXT,HL7NCOD,HL7LPTR,HL7LTXT,HL7LCOD
"RTN","ORKCHK6",9,0)
 N ORKMSG,ORKDGI,ORKTXT,ORKPDATA,ORIFN
"RTN","ORKCHK6",10,0)
 ;
"RTN","ORKCHK6",11,0)
 S OI=$P(ORKA,"|"),ORKDG=$P(ORKA,"|",2),HL7=$P(ORKA,"|",3)
"RTN","ORKCHK6",12,0)
 S ODT=$P(ORKA,"|",4),ORNUM=$P(ORKA,"|",5),ORKPDATA=$P(ORKA,"|",6)
"RTN","ORKCHK6",13,0)
 S HL7NPTR=$P(HL7,U),HL7NTXT=$P(HL7,U,2),HL7NCOD=$P(HL7,U,3)
"RTN","ORKCHK6",14,0)
 S HL7LPTR=$P(HL7,U,4),HL7LTXT=$P(HL7,U,5),HL7LCOD=$P(HL7,U,6)
"RTN","ORKCHK6",15,0)
 S ORIFN=ORNUM
"RTN","ORKCHK6",16,0)
 ;
"RTN","ORKCHK6",17,0)
 S:ORKDG="PSJ" ORKDG="PSI"
"RTN","ORKCHK6",18,0)
 I $E(ORKDG,1,2)="PS" D PHARM
"RTN","ORKCHK6",19,0)
 I $E(ORKDG,1,2)'="PS" D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",20,0)
 Q
"RTN","ORKCHK6",21,0)
 ;
"RTN","ORKCHK6",22,0)
PHARM ;process pharmacy order checks:
"RTN","ORKCHK6",23,0)
 N ORPSPKG,ORPSA,ORRXDONE
"RTN","ORKCHK6",24,0)
 N ORCRITN,ORCRITF,ORCRITD,ORSIGN,ORSIGF,ORSIGD,ORDUPN,ORDUPF,ORDUPD,ORDUPC,ORDUPCF,ORDUPCD,ORALLRN,ORALLRF,ORALLRD,ORDUPCN
"RTN","ORKCHK6",25,0)
 ;
"RTN","ORKCHK6",26,0)
 D PARAMS("ALLERGY-DRUG INTERACTION",.ORALLRN,.ORALLRF,.ORALLRD)
"RTN","ORKCHK6",27,0)
 D PARAMS("CRITICAL DRUG INTERACTION",.ORCRITN,.ORCRITF,.ORCRITD)
"RTN","ORKCHK6",28,0)
 D PARAMS("SIGNIFICANT DRUG INTERACTION",.ORSIGN,.ORSIGF,.ORSIGD)
"RTN","ORKCHK6",29,0)
 D PARAMS("DUPLICATE DRUG ORDER",.ORDUPN,.ORDUPF,.ORDUPD)
"RTN","ORKCHK6",30,0)
 D PARAMS("DUPLICATE DRUG THERAPY",.ORDUPCN,.ORDUPCF,.ORDUPCD)
"RTN","ORKCHK6",31,0)
 ;
"RTN","ORKCHK6",32,0)
 S ORRXDONE=0 ;flag to set if RXOCS gets called
"RTN","ORKCHK6",33,0)
 ;dispense drug selected:
"RTN","ORKCHK6",34,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK6",35,0)
 .D RXOCS
"RTN","ORKCHK6",36,0)
 .S:$P(ORKA,"|",7)'="" $P(ORKA,"|",7)=""
"RTN","ORKCHK6",37,0)
 .S ORRXDONE=1
"RTN","ORKCHK6",38,0)
 .D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",39,0)
 ;
"RTN","ORKCHK6",40,0)
 ;dispense drug NOT selected, split OI into dispense drugs:
"RTN","ORKCHK6",41,0)
 I '$L($G(HL7LPTR)) D
"RTN","ORKCHK6",42,0)
 .S ORPSPKG=$E(ORKDG,3)
"RTN","ORKCHK6",43,0)
 .I "IOH"[ORPSPKG D
"RTN","ORKCHK6",44,0)
 ..S ORPSA=$$OI2DD^ORKPS(OI,ORPSPKG,1)
"RTN","ORKCHK6",45,0)
 ..I +ORPSA D
"RTN","ORKCHK6",46,0)
 ...S HL7LTXT=$P($G(^ORD(101.43,OI,0)),U)
"RTN","ORKCHK6",47,0)
 ...S HL7NPTR=$P(ORPSA,";",2)
"RTN","ORKCHK6",48,0)
 ...S HL7LPTR=+ORPSA
"RTN","ORKCHK6",49,0)
 ...S HL7LCOD="99PSD",HL7NCOD="99NDF"
"RTN","ORKCHK6",50,0)
 ...S $P(HL7,U)=HL7NPTR,$P(HL7,U,3)=HL7NCOD
"RTN","ORKCHK6",51,0)
 ...S $P(HL7,U,4)=HL7LPTR,$P(HL7,U,5)=HL7LTXT,$P(HL7,U,6)=HL7LCOD
"RTN","ORKCHK6",52,0)
 ...S $P(ORKA,"|",3)=HL7  ;set these for MLM OCX call
"RTN","ORKCHK6",53,0)
 ..D RXOCS
"RTN","ORKCHK6",54,0)
 ..S:$P(ORKA,"|",7)'="" $P(ORKA,"|",7)=""
"RTN","ORKCHK6",55,0)
 ..S ORRXDONE=1
"RTN","ORKCHK6",56,0)
 ..Q:HL7LTXT=""
"RTN","ORKCHK6",57,0)
 ..D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",58,0)
 I ORRXDONE=0 D
"RTN","ORKCHK6",59,0)
 .N ORKSMSG,OROITXT
"RTN","ORKCHK6",60,0)
 .S OROITXT=$P($G(^ORD(101.43,OI,0)),U)
"RTN","ORKCHK6",61,0)
 .I $L(OROITXT)>0 S OROITXT=" for "_$$TRIM^XLFSTR(OROITXT)
"RTN","ORKCHK6",62,0)
 .S ORKMSG="Enhanced order checks cannot be done"_OROITXT_". Please perform a manual check for Drug-Interactions, Duplicate Therapy"
"RTN","ORKCHK6",63,0)
 .I $$DS^PSSDSAPI S ORKMSG=ORKMSG_" and Dosing"
"RTN","ORKCHK6",64,0)
 .S ORKS("ORK",2_$E(ORKMSG,1,225))=ORNUM_U_25_U_3_U_ORKMSG
"RTN","ORKCHK6",65,0)
 Q
"RTN","ORKCHK6",66,0)
 ;
"RTN","ORKCHK6",67,0)
RXOCS ;drug-drug interaction, duplicate drug order, duplicate drug class
"RTN","ORKCHK6",68,0)
 Q:ORCRITF_ORSIGF_ORDUPF_ORDUPCF_ORALLRF'["E"  ;quit if none are "E"nabled
"RTN","ORKCHK6",69,0)
 N ORKRX,ORPSNUM,ORY,CHK,XX
"RTN","ORKCHK6",70,0)
 ;I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK6",71,0)
 I 1 D
"RTN","ORKCHK6",72,0)
 .D CHKSESS^ORKPS(.ORKRX,ORKDFN,HL7LPTR_U_HL7LTXT,OI,ORKPDATA,ORKDG,+$P($G(ORPSA),";",4),$P(ORKA,"|",7))
"RTN","ORKCHK6",73,0)
 .S CHK=0,XX="" F  S CHK=$O(ORKRX(CHK)) Q:'CHK  D
"RTN","ORKCHK6",74,0)
 ..S XX=ORKRX(CHK)
"RTN","ORKCHK6",75,0)
 ..;
"RTN","ORKCHK6",76,0)
 ..;get errors/exceptions/checks not done
"RTN","ORKCHK6",77,0)
 ..I $P(XX,U)="ERR" S ORKS("ORK",2_$E($P(XX,U,2),1,225)_","_$G(ORNUM))=ORNUM_U_25_U_3_U_$P(XX,U,2)
"RTN","ORKCHK6",78,0)
 ..;
"RTN","ORKCHK6",79,0)
 ..;critical drug interaction:
"RTN","ORKCHK6",80,0)
 ..I $P(XX,U)="DI",$P(XX,U,2)="CRITICAL" D
"RTN","ORKCHK6",81,0)
 ...Q:ORCRITF="D"
"RTN","ORKCHK6",82,0)
 ...S ORPSNUM=$P(XX,U,3)
"RTN","ORKCHK6",83,0)
 ...S ORKTXT=$P(XX,U,2)_" drug-drug interaction: "_$P(XX,U,5)
"RTN","ORKCHK6",84,0)
 ...S ORKS("ORK",ORCRITD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKTXT,1,225))=ORNUM_U_ORCRITN_U_ORCRITD_U_ORKTXT
"RTN","ORKCHK6",85,0)
 ..;
"RTN","ORKCHK6",86,0)
 ..;significant drug interaction:
"RTN","ORKCHK6",87,0)
 ..I $P(XX,U)="DI",$P(XX,U,2)="SIGNIFICANT" D
"RTN","ORKCHK6",88,0)
 ...Q:ORSIGF="D"
"RTN","ORKCHK6",89,0)
 ...S ORPSNUM=$P(XX,U,3)
"RTN","ORKCHK6",90,0)
 ...S ORKTXT=$P(XX,U,2)_" drug-drug interaction: "_$P(XX,U,5)
"RTN","ORKCHK6",91,0)
 ...S ORKS("ORK",ORSIGD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKTXT,1,225))=ORNUM_U_ORSIGN_U_ORSIGD_U_ORKTXT
"RTN","ORKCHK6",92,0)
 ..;
"RTN","ORKCHK6",93,0)
 ..;duplicate drug:
"RTN","ORKCHK6",94,0)
 ..I $P(XX,U)="DD" D
"RTN","ORKCHK6",95,0)
 ...Q:ORDUPF="D"
"RTN","ORKCHK6",96,0)
 ...S ORPSNUM=$P(XX,U,4)  ;get the associated order number
"RTN","ORKCHK6",97,0)
 ...S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK6",98,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) D
"RTN","ORKCHK6",99,0)
 ....D TEXT^ORQ12(.ORY,ORPSNUM,"")
"RTN","ORKCHK6",100,0)
 ....S ORKTXT=ORKTXT_$S($D(ORY(2))=1:" "_$$TRIM^XLFSTR(ORY(2)),1:"")_" ["_$P($G(^ORD(100.01,+$P(^OR(100,+ORPSNUM,3),U,3),0)),U,1)_"]"
"RTN","ORKCHK6",101,0)
 ...S ORKMSG="Duplicate drug order: "_ORKTXT
"RTN","ORKCHK6",102,0)
 ...S ORKS("ORK",ORDUPD_","_$G(ORNUM)_","_ORPSNUM_",Duplicate drug order: "_$E($P(XX,U,3),1,200))=ORNUM_U_ORDUPN_U_ORDUPD_U_ORKMSG_U_$G(ORPSNUM)
"RTN","ORKCHK6",103,0)
 ..;
"RTN","ORKCHK6",104,0)
 ..;duplicate class: NOW DRUG THERAPY
"RTN","ORKCHK6",105,0)
 ..I $P(XX,U)="DC" D
"RTN","ORKCHK6",106,0)
 ...Q:ORDUPCF="D"
"RTN","ORKCHK6",107,0)
 ...S ORPSNUM=$P(XX,U,2)  ;get the associated order number
"RTN","ORKCHK6",108,0)
 ...S ORKMSG=$P(XX,U,4)
"RTN","ORKCHK6",109,0)
 ...N ORKCNT S ORKCNT=1 F  Q:'$D(ORKS("ORK",ORDUPCD_","_$G(ORNUM)_","_ORPSNUM_","_ORKCNT))  S ORKCNT=ORKCNT+1
"RTN","ORKCHK6",110,0)
 ...S ORKS("ORK",ORDUPCD_","_$G(ORNUM)_","_ORPSNUM_","_ORKCNT)=ORNUM_U_ORDUPCN_U_ORDUPCD_U_ORKMSG
"RTN","ORKCHK6",111,0)
 D RXOCS^ORKCHK5
"RTN","ORKCHK6",112,0)
 Q
"RTN","ORKCHK6",113,0)
 ;
"RTN","ORKCHK6",114,0)
PARAMS(ORKNAME,ORKNUM,ORKFLAG,ORKDNGR) ; get parameter values for an order chk
"RTN","ORKCHK6",115,0)
 S ORKNUM=0,ORKNUM=$O(^ORD(100.8,"B",ORKNAME,ORKNUM))
"RTN","ORKCHK6",116,0)
 S ORKFLAG=$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",ORKNUM,"I")
"RTN","ORKCHK6",117,0)
 S ORKDNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",ORKNUM,"I")
"RTN","ORKCHK6",118,0)
 Q
"RTN","ORKPS1")
0^1^B110514189
"RTN","ORKPS1",1,0)
ORKPS1 ; SLC/CLA - Order checking support procedures for medications ;03/21/18  06:21
"RTN","ORKPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**232,272,346,352,345,311,402,457,469,481**;Dec 17, 1997;Build 3
"RTN","ORKPS1",3,0)
 Q
"RTN","ORKPS1",4,0)
PROCESS(OI,DFN,ORKDG,ORPROSP,ORGLOBL) ;process data from pharmacy order check API
"RTN","ORKPS1",5,0)
 ;ORPROSP = pharmacy orderable item ien [file #50.7] ^ drug ien [file #50]
"RTN","ORKPS1",6,0)
 ;          NOTE: PIECE 1 WILL ONLY BE FILLED IN FOR ORDERABLE ITEMS THAT RESOLVE TO SUPPLY ITEMS
"RTN","ORKPS1",7,0)
 Q:'$D(^TMP($J))
"RTN","ORKPS1",8,0)
 N II,XX,ZZ,ZZD,ORMTYPE,ORN,ORZ,RCNT,GL,I,J,K,L,M,TDATA,VADMVT,ORX,ORY
"RTN","ORKPS1",9,0)
 S II=1,XX=0,ZZ="",ZZD="",RCNT=0
"RTN","ORKPS1",10,0)
 I $G(^TMP($J,ORGLOBL,"OUT",0))<0 D  Q
"RTN","ORKPS1",11,0)
 .S YY(II)="ERR^Drug-Drug order checks (Duplicate Therapy, Duplicate Drug, Drug Interaction) were not able to be performed. "_$P($G(^TMP($J,ORGLOBL,"OUT",0)),U,2)
"RTN","ORKPS1",12,0)
 .S II=II+1
"RTN","ORKPS1",13,0)
 I $D(^TMP($J,ORGLOBL,"OUT","EXCEPTIONS")) D
"RTN","ORKPS1",14,0)
 .S ORX="" F  S ORX=$O(^TMP($J,ORGLOBL,"OUT","EXCEPTIONS",ORX)) Q:'$L(ORX)  D
"RTN","ORKPS1",15,0)
 ..S ORY=0 F  S ORY=$O(^TMP($J,ORGLOBL,"OUT","EXCEPTIONS",ORX,ORY)) Q:'ORY  D
"RTN","ORKPS1",16,0)
 ...I $L($G(ORIFN))>0,$G(ORIFN)=$P($G(^TMP($J,ORGLOBL,"OUT","EXCEPTIONS",ORX,ORY)),U,5) Q
"RTN","ORKPS1",17,0)
 ...S YY(II)="ERR^"_$P($G(^TMP($J,ORGLOBL,"OUT","EXCEPTIONS",ORX,ORY)),U,7)
"RTN","ORKPS1",18,0)
 ...I $L($P($G(^TMP($J,ORGLOBL,"OUT","EXCEPTIONS",ORX,ORY)),U,10))>0 S YY(II)=YY(II)_"("_$P($G(^TMP($J,ORGLOBL,"OUT","EXCEPTIONS",ORX,ORY)),U,10)_")"
"RTN","ORKPS1",19,0)
 ...S II=II+1
"RTN","ORKPS1",20,0)
 S ORX="" F ORX="DRUGDRUG","THERAPY" D
"RTN","ORKPS1",21,0)
 .Q:'$D(^TMP($J,ORGLOBL,"OUT",ORX,"ERROR"))
"RTN","ORKPS1",22,0)
 .S ORY="" F  S ORY=$O(^TMP($J,ORGLOBL,"OUT",ORX,"ERROR",ORY)) Q:'$L(ORY)  D
"RTN","ORKPS1",23,0)
 ..S ORZ=0 F  S ORZ=$O(^TMP($J,ORGLOBL,"OUT",ORX,"ERROR",ORY,ORZ)) Q:'ORZ  D
"RTN","ORKPS1",24,0)
 ...S YY(II)="ERR^"_$$UPPER^ORWDPS32($G(^TMP($J,ORGLOBL,"OUT",ORX,"ERROR",ORY,ORZ,"SEV")))_": "_$P($G(^TMP($J,ORGLOBL,"OUT",ORX,"ERROR",ORY,ORZ,0)),U)_" - "_$G(^TMP($J,ORGLOBL,"OUT",ORX,"ERROR",ORY,ORZ,"TEXT"))
"RTN","ORKPS1",25,0)
 ...S II=II+1
"RTN","ORKPS1",26,0)
 I +$P(ORPROSP,U,2) D
"RTN","ORKPS1",27,0)
 .;set info about the drug being ordered
"RTN","ORKPS1",28,0)
 .S TDATA("NEW","TXT")=""
"RTN","ORKPS1",29,0)
 .S I="" F  S I=$O(^TMP($J,ORGLOBL,"IN","PROSPECTIVE",I)) Q:'$L(I)  D
"RTN","ORKPS1",30,0)
 ..I $P($G(^TMP($J,ORGLOBL,"IN","PROSPECTIVE",I)),U,5)=+$G(ORIFN),$P($G(^TMP($J,ORGLOBL,"IN","PROSPECTIVE",I)),U,3)=(+$P(ORPROSP,U,2)) D
"RTN","ORKPS1",31,0)
 ...S TDATA("NEW","TXT")=$P($G(^TMP($J,ORGLOBL,"IN","PROSPECTIVE",I)),U,4)
"RTN","ORKPS1",32,0)
 ...S TDATA("NEW","PROSP")=$P(I,";",3,4)
"RTN","ORKPS1",33,0)
 .;if we get here and we don't have anything in TDATA("NEW","PROSP") then we need to set to the first PROSPECTIVE
"RTN","ORKPS1",34,0)
 .I '$L($G(TDATA("NEW","PROSP"))) D
"RTN","ORKPS1",35,0)
 ..S I="" F  S I=$O(^TMP($J,ORGLOBL,"IN","PROSPECTIVE",I)) Q:'$L(I)  I $P($G(^TMP($J,ORGLOBL,"IN","PROSPECTIVE",I)),U,3)=(+$P(ORPROSP,U,2)) D
"RTN","ORKPS1",36,0)
 ...S TDATA("NEW","TXT")=$P($G(^TMP($J,ORGLOBL,"IN","PROSPECTIVE",I)),U,4)
"RTN","ORKPS1",37,0)
 ...S TDATA("NEW","PROSP")=$P(I,";",3,4)
"RTN","ORKPS1",38,0)
 .;/////////////////GET PTYPE RIGHT///////////////////
"RTN","ORKPS1",39,0)
 .S TDATA("NEW","OTYPE")=$S($G(ORKDG)="PSI":"UD",$G(ORKDG)="PSO":"OP",$G(ORKDG)="PSIV":"IV",$G(ORKDG)="PSH":"NV",1:"")
"RTN","ORKPS1",40,0)
 .;initially base PTYPE on display group
"RTN","ORKPS1",41,0)
 .S TDATA("NEW","PTYPE")=$S($G(ORKDG)="PSI":"I",$G(ORKDG)="PSO":"O",$G(ORKDG)="PSIV":"I",$G(ORKDG)="PSH":"O",1:"")
"RTN","ORKPS1",42,0)
 .;if we have an order number then we can accurately determine if it is a Clinic med or not
"RTN","ORKPS1",43,0)
 .I +$G(ORIFN) D
"RTN","ORKPS1",44,0)
 ..I $$ISCLIN(+$G(ORIFN)) S TDATA("NEW","PTYPE")="C" Q
"RTN","ORKPS1",45,0)
 .;if we don't have an order number then if the patient is an outpatient and the OTYPE is UD or IV we assume Clinic med
"RTN","ORKPS1",46,0)
 .I '(+$G(ORIFN)) D
"RTN","ORKPS1",47,0)
 ..I ($G(TDATA("NEW","OTYPE"))="UD")!($G(TDATA("NEW","OTYPE"))="IV") D
"RTN","ORKPS1",48,0)
 ...I $$PATTYPE(DFN)="O" S TDATA("NEW","PTYPE")="C"
"RTN","ORKPS1",49,0)
 .;if PTYPE not set at this point, set it to patient type (catch all for safety)
"RTN","ORKPS1",50,0)
 .I '$L(TDATA("NEW","PTYPE")) D
"RTN","ORKPS1",51,0)
 ..S TDATA("NEW","PTYPE")=$$PATTYPE(DFN)
"RTN","ORKPS1",52,0)
 .;/////////////////END GET PTYPE RIGHT///////////////////
"RTN","ORKPS1",53,0)
 D DD(.TDATA,$S(+ORPROSP>0:0,1:1))
"RTN","ORKPS1",54,0)
 Q:'$L($G(TDATA("NEW","PROSP")))
"RTN","ORKPS1",55,0)
 D DI(.TDATA)
"RTN","ORKPS1",56,0)
 D DT(.TDATA)
"RTN","ORKPS1",57,0)
 Q
"RTN","ORKPS1",58,0)
 ;
"RTN","ORKPS1",59,0)
DI(TDATA) ;add drug interaction checks
"RTN","ORKPS1",60,0)
 N GL,ORSEV,ORDRUG,ORTXT,ORIEN
"RTN","ORKPS1",61,0)
 S GL=$NA(^TMP($J,ORGLOBL,"OUT","DRUGDRUG"))
"RTN","ORKPS1",62,0)
 S J="" F  S J=$O(@GL@(J)) Q:'$L(J)  D
"RTN","ORKPS1",63,0)
 .S K="" F  S K=$O(@GL@(J,K)) Q:'$L(K)  D
"RTN","ORKPS1",64,0)
 ..S L=0 F  S L=$O(@GL@(J,K,L)) Q:'$L(L)  D
"RTN","ORKPS1",65,0)
 ...S M=0 F  S M=$O(@GL@(J,K,L,M)) Q:'M  D
"RTN","ORKPS1",66,0)
 ....N ORNUM,ORSEV,ORDNAME,ORZ,CNT,ORSTAT,ORMON,ORWHICH,ORLINE,ORIDX
"RTN","ORKPS1",67,0)
 ....;get the associated order number
"RTN","ORKPS1",68,0)
 ....S ORNUM=$P(L,";",1,2)
"RTN","ORKPS1",69,0)
 ....;if the status of the associated order is DISCONTINUED then don't add
"RTN","ORKPS1",70,0)
 ....S ORSTAT=$$PHSTAT(DFN,ORNUM)
"RTN","ORKPS1",71,0)
 ....Q:ORSTAT="DISCONTINUED"
"RTN","ORKPS1",72,0)
 ....S ORWHICH=""
"RTN","ORKPS1",73,0)
 ....I $P($P(@GL@(J,K,L,M),U),";",3,4)=TDATA("NEW","PROSP") D
"RTN","ORKPS1",74,0)
 .....S ORWHICH=K_" ["_$S($P(L,";",3)="PROSPECTIVE":"UNRELEASED",1:ORSTAT)_"]"
"RTN","ORKPS1",75,0)
 ....I $P(L,";",3,4)=TDATA("NEW","PROSP") D
"RTN","ORKPS1",76,0)
 .....S ORWHICH=$P(@GL@(J,K,L,M),U,4)_" ["
"RTN","ORKPS1",77,0)
 .....S ORWHICH=ORWHICH_$S($P($P(@GL@(J,K,L,M),U),";",3)="PROSPECTIVE":"UNRELEASED",1:$$PHSTAT(DFN,$P($P(@GL@(J,K,L,M),U),";",1,2)))
"RTN","ORKPS1",78,0)
 .....S ORWHICH=ORWHICH_"]"
"RTN","ORKPS1",79,0)
 ....Q:$L(ORWHICH)<2
"RTN","ORKPS1",80,0)
 ....;get text
"RTN","ORKPS1",81,0)
 ....S ORTXT(J,K_";"_ORNUM)=$S($G(ORTXT(J,K))'="":ORTXT(J,K)_" ",1:"")_$P($G(@GL@(J,K,L,M,"CLIN")),"CLINICAL EFFECTS:  ",2),ORTXT(J,K_";"_ORNUM,"ORWHICH")=ORWHICH ;*457
"RTN","ORKPS1",82,0)
 ....;set the monograph into the temp global
"RTN","ORKPS1",83,0)
 ....I $D(@GL@(J,K,L,M,"PMON")) D
"RTN","ORKPS1",84,0)
 .....S ^TMP($J,"ORMONOGRAPH")=1+$G(^TMP($J,"ORMONOGRAPH"))
"RTN","ORKPS1",85,0)
 .....S ORMON=^TMP($J,"ORMONOGRAPH")
"RTN","ORKPS1",86,0)
 .....S ^TMP($J,"ORMONOGRAPH",ORMON,"INT")=@GL@(J,K,L,M,"INT")
"RTN","ORKPS1",87,0)
 .....S ORIDX="",ORLINE=1 F  S ORIDX=$O(@GL@(J,K,L,M,"PMON",ORIDX)) Q:+$G(ORIDX)=0  D
"RTN","ORKPS1",88,0)
 ......S ^TMP($J,"ORMONOGRAPH",ORMON,"DATA",ORLINE,0)=@GL@(J,K,L,M,"PMON",ORIDX,0),ORLINE=ORLINE+1
"RTN","ORKPS1",89,0)
 .....S ORTXT(J,K_";"_ORNUM,"MONOGRAPH")=1,ORTXT(J,K_";"_ORNUM,"ORMON",ORMON)="" ;*457
"RTN","ORKPS1",90,0)
 ....;get the severity
"RTN","ORKPS1",91,0)
 ....S ORSEV=$$UPPER^ORU($G(@GL@(J,K,L,M,"SEV")))
"RTN","ORKPS1",92,0)
 ....;get the drug name
"RTN","ORKPS1",93,0)
 ....S ORDNAME=K
"RTN","ORKPS1",94,0)
 ....S ORTXT(J,K_";"_ORNUM,"YY")="DI^"_ORSEV_U_ORNUM_U_ORDNAME_U_U_$G(@GL@(J,K,L,M,"INT")) ;*457
"RTN","ORKPS1",95,0)
 ;RETURN DATA IN EXPECTED FORMAT
"RTN","ORKPS1",96,0)
 S ORSEV="" F  S ORSEV=$O(ORTXT(ORSEV)) Q:$G(ORSEV)=""  D
"RTN","ORKPS1",97,0)
 .S ORDRUG="" F  S ORDRUG=$O(ORTXT(ORSEV,ORDRUG)) Q:$G(ORDRUG)=""  D
"RTN","ORKPS1",98,0)
 ..S YY(II)=ORTXT(ORSEV,ORDRUG,"YY")
"RTN","ORKPS1",99,0)
 ..S $P(YY(II),U,5)=TDATA("NEW","TXT")_" and "_ORTXT(ORSEV,ORDRUG,"ORWHICH")_" - "_ORTXT(ORSEV,ORDRUG)
"RTN","ORKPS1",100,0)
 ..S ORIEN=0 F  S ORIEN=$O(ORTXT(ORSEV,ORDRUG,"ORMON",ORIEN)) Q:+$G(ORIEN)=0  D
"RTN","ORKPS1",101,0)
 ...S ^TMP($J,"ORMONOGRAPH",ORIEN,"OC")=$P(YY(II),U,5)
"RTN","ORKPS1",102,0)
 ..S:$G(ORTXT(ORSEV,ORDRUG,"MONOGRAPH")) $P(YY(II),U,5)=$P(YY(II),U,5)_" - Monograph Available"
"RTN","ORKPS1",103,0)
 ..S II=II+1
"RTN","ORKPS1",104,0)
 Q
"RTN","ORKPS1",105,0)
 ;
"RTN","ORKPS1",106,0)
DD(TDATA,ORDPROSP) ;add duplicate drug checks
"RTN","ORKPS1",107,0)
 ;ORDPROSP: PERFORM PROSPECTIVE DRUG CHECK
"RTN","ORKPS1",108,0)
 ;          1 FOR YES
"RTN","ORKPS1",109,0)
 ;          0 FOR NO
"RTN","ORKPS1",110,0)
 S XX=0,ZZ=""
"RTN","ORKPS1",111,0)
 F  S XX=$O(^TMP($J,"DD",XX)) Q:XX<1  D
"RTN","ORKPS1",112,0)
 .N ORREM
"RTN","ORKPS1",113,0)
 .S ZZ=$G(^TMP($J,"DD",XX,0)),ORMTYPE=$P($P(ZZ,U,4),";",2)
"RTN","ORKPS1",114,0)
 .S ORREM=$P($P(ZZ,U,4),";") I (ORREM["Z"),$D(^TMP($J,ORGLOBL,"OUT","REMOTE",+ORREM)) D
"RTN","ORKPS1",115,0)
 ..N ORTXT,ORREM1,ORREMSIG
"RTN","ORKPS1",116,0)
 ..S ORREM1=$G(^TMP($J,ORGLOBL,"OUT","REMOTE",+ORREM))
"RTN","ORKPS1",117,0)
 ..S ORREMSIG=$G(^TMP($J,ORGLOBL,"OUT","REMOTE",+ORREM,"SIG",0))
"RTN","ORKPS1",118,0)
 ..S ORTXT=" "_ORREMSIG_" ["_$P(ORREM1,U,4)_" -  Last Fill: "_$P(ORREM1,U,6)_"  Quantity Dispensed: "_$P(ORREM1,U,8)_"] >>"_$P(ORREM1,U)
"RTN","ORKPS1",119,0)
 ..S $P(ZZ,U,2)=$P(ZZ,U,2)_ORTXT
"RTN","ORKPS1",120,0)
 .I +ORDPROSP,$G(TDATA("NEW","PTYPE"))'=$G(ORMTYPE) Q
"RTN","ORKPS1",121,0)
 .S ORN=$P($P(ZZ,U,3),";"),ORZ=""
"RTN","ORKPS1",122,0)
 .I $L($G(ORN))>0,+$G(ORN)=+$G(ORIFN) Q  ;QUIT if dup med ord # = current ord #
"RTN","ORKPS1",123,0)
 .I +$G(ORIFN),+$G(ORN)=$P(^OR(100,+ORIFN,3),U,5) Q  ;QUIT if dup med ord # = the current order #'s REPLACED ORDER (changing an order)
"RTN","ORKPS1",124,0)
 .I +ORDPROSP,+$P(ORPROSP,U,2)'=+ZZ Q
"RTN","ORKPS1",125,0)
 .I $L(ORN),$D(^OR(100,ORN,8,0)) S ORZ=^OR(100,ORN,8,0)
"RTN","ORKPS1",126,0)
 .I $L($G(ORZ)),($P(^OR(100,ORN,8,$P(ORZ,U,3),0),U,2)="DC") Q
"RTN","ORKPS1",127,0)
 .I $L(ORN),$P(^ORD(100.01,$P(^OR(100,ORN,3),U,3),0),U)="DISCONTINUED" Q
"RTN","ORKPS1",128,0)
 .I ZZ'="" S YY(II)="DD^"_ZZ,II=II+1
"RTN","ORKPS1",129,0)
 .S ^TMP($J,"DD",XX,"OC")="" ;set this if this DD entry turned into an OC
"RTN","ORKPS1",130,0)
 Q
"RTN","ORKPS1",131,0)
 ;
"RTN","ORKPS1",132,0)
DT(TDATA) ;add duplicate therapy checks
"RTN","ORKPS1",133,0)
 N I,GL
"RTN","ORKPS1",134,0)
 S GL=$NA(^TMP($J,ORGLOBL,"OUT","THERAPY"))
"RTN","ORKPS1",135,0)
 S I=0 F  S I=$O(@GL@(I)) Q:'I  D
"RTN","ORKPS1",136,0)
 .N ORDRUGS,J,ORCLASS,ORNUM,ORRETSTR,ORPROSIN S ORPROSIN=0,ORDRUGS="",ORCLASS=""
"RTN","ORKPS1",137,0)
 .S J=0 F  S J=$O(@GL@(I,"DRUGS",J)) Q:'J  D
"RTN","ORKPS1",138,0)
 ..;get the type of the item checked against
"RTN","ORKPS1",139,0)
 ..N ORPTYPE S ORPTYPE=$P($G(@GL@(I,"DRUGS",J)),U,5)
"RTN","ORKPS1",140,0)
 ..;check if item being checked is a clinic med/inf
"RTN","ORKPS1",141,0)
 ..I $E(@GL@(I,"DRUGS",J))="C" S ORPTYPE="C"
"RTN","ORKPS1",142,0)
 ..;get if the item checked against is PROSPECTIVE or PROFILE
"RTN","ORKPS1",143,0)
 ..N ORDTYPE S ORDTYPE=$P($G(@GL@(I,"DRUGS",J)),";",3)
"RTN","ORKPS1",144,0)
 ..;if the item checked against is a PROSPECTIVE then get its type from file 100
"RTN","ORKPS1",145,0)
 ..I ORDTYPE="PROSPECTIVE" D
"RTN","ORKPS1",146,0)
 ...N ORXNUM S ORXNUM=+$P($G(@GL@(I,"DRUGS",J)),U,4)
"RTN","ORKPS1",147,0)
 ...I ORXNUM D
"RTN","ORKPS1",148,0)
 ....N ORKDGIEN S ORKDGIEN=$P($G(^OR(100,ORXNUM,0)),U,11)
"RTN","ORKPS1",149,0)
 ....N ORKDG S ORKDG=$P($G(^ORD(100.98,ORKDGIEN,0)),U,3)
"RTN","ORKPS1",150,0)
 ....S ORPTYPE=$S($G(ORKDG)="UD RX":"I",$G(ORKDG)="I RX":"I",$G(ORKDG)="IV RX":"I",$G(ORKDG)="CI RX":"C",$G(ORKDG)="CL OR":"C",$G(ORKDG)="C RX":"C",$G(ORKDG)="C RX":"C",1:"O")
"RTN","ORKPS1",151,0)
 ..;consider Remote orders in the DRUGS array to be outpatient orders
"RTN","ORKPS1",152,0)
 ..I ORPTYPE="R" S ORPTYPE="O"
"RTN","ORKPS1",153,0)
 ..;if this is the prospective we are checking, set ORPROSIN=1 to indicate the one we are looking at is in this OC from the API
"RTN","ORKPS1",154,0)
 ..I $G(TDATA("NEW","PROSP"))=$P($P($G(@GL@(I,"DRUGS",J)),U),";",3,4) S ORPROSIN=1
"RTN","ORKPS1",155,0)
 ..;if neither the item being checked and the item checked against are not Clinic meds and they do not match in type, don't use it
"RTN","ORKPS1",156,0)
 ..I ($G(TDATA("NEW","PTYPE"))'=ORPTYPE),(ORPTYPE'="C"),($G(TDATA("NEW","PTYPE"))'="C") Q
"RTN","ORKPS1",157,0)
 ..;if this matches the replacement order of the item being checked against, don't use it
"RTN","ORKPS1",158,0)
 ..I $L($P($G(@GL@(I,"DRUGS",J)),U,4))>0,(+$P($G(@GL@(I,"DRUGS",J)),U,4)=$P($G(^OR(100,+$G(ORIFN),3)),U,5)) Q
"RTN","ORKPS1",159,0)
 ..;if this matches the order number of the item being checked against, don't use it
"RTN","ORKPS1",160,0)
 ..I $L($P($G(@GL@(I,"DRUGS",J)),U,4))>0,(+$P($G(@GL@(I,"DRUGS",J)),U,4)=+$G(ORIFN)) Q
"RTN","ORKPS1",161,0)
 ..;if this is the prospective we are checking, don't use it
"RTN","ORKPS1",162,0)
 ..I $G(TDATA("NEW","PROSP"))=$P($P($G(@GL@(I,"DRUGS",J)),U),";",3,4)  Q
"RTN","ORKPS1",163,0)
 ..;if we got here then this order from the DRUGS array should be in the output message
"RTN","ORKPS1",164,0)
 ..S ORNUM=$P($P($G(@GL@(I,"DRUGS",J)),U),";",1,2)
"RTN","ORKPS1",165,0)
 ..S ORDRUGS=ORDRUGS_$S($L(ORDRUGS):", ",1:"")_$P($G(@GL@(I,"DRUGS",J)),U,3)_" ["_$$PHSTAT(DFN,ORNUM)_"]"
"RTN","ORKPS1",166,0)
 .;quit if no drugs have been set into ORDRUGS
"RTN","ORKPS1",167,0)
 .Q:('$L(ORDRUGS))
"RTN","ORKPS1",168,0)
 .;quit if ORPROSIN is still 0 which means the prospective we are looking at was not part of this OC returned from the API
"RTN","ORKPS1",169,0)
 .Q:'ORPROSIN
"RTN","ORKPS1",170,0)
 .;get all classes
"RTN","ORKPS1",171,0)
 .S J=0 F  S J=$O(@GL@(I,J)) Q:'J  D
"RTN","ORKPS1",172,0)
 ..S ORCLASS=ORCLASS_$S($L(ORCLASS):", ",1:"")_$G(@GL@(I,J,"CLASS"))
"RTN","ORKPS1",173,0)
 .;assemble return string ("DC"+ORNUM_U_Classes_U_Classes (drugs))
"RTN","ORKPS1",174,0)
 .S ORRETSTR="Duplicate Therapy: Order(s) exist for {"_ORDRUGS_"} in the same therapeutic categor(ies): "_ORCLASS
"RTN","ORKPS1",175,0)
 .S YY(II)="DC"_U_$G(ORNUM)_U_ORCLASS_U_ORRETSTR,II=II+1
"RTN","ORKPS1",176,0)
 Q
"RTN","ORKPS1",177,0)
 ;
"RTN","ORKPS1",178,0)
PHSTAT(DFN,ORNUM) ;get the status of the order
"RTN","ORKPS1",179,0)
 N RET,J,I
"RTN","ORKPS1",180,0)
 S RET=""
"RTN","ORKPS1",181,0)
 I $P(ORNUM,";")="P" S RET="PENDING"
"RTN","ORKPS1",182,0)
 I $P(ORNUM,";")="N" S RET="ACTIVE NON-VA"
"RTN","ORKPS1",183,0)
 I $P(ORNUM,";")="O" D
"RTN","ORKPS1",184,0)
 .N ORLAST
"RTN","ORKPS1",185,0)
 .I $E($P(ORNUM,";"),1)="C" S ORLAST=$S($E($P(ORNUM,";"),2)=1:"V",$E($P(ORNUM,";"),2)=2:"U",1:"NV")
"RTN","ORKPS1",186,0)
 .E  S ORLAST=$E(ORNUM,$L(ORNUM))
"RTN","ORKPS1",187,0)
 .I ORLAST="0" S RET="UNRELEASED" Q
"RTN","ORKPS1",188,0)
 .I ORLAST="P" S RET="PENDING" Q
"RTN","ORKPS1",189,0)
 .K ^TMP($J,"OROCLST") D RX^PSO52API(DFN,"OROCLST",$P(ORNUM,";",2),,"ST")
"RTN","ORKPS1",190,0)
 .S RET=$P($G(^TMP($J,"OROCLST",DFN,$P(ORNUM,";",2),100)),U,2)
"RTN","ORKPS1",191,0)
 .K ^TMP($J,"OROCLST")
"RTN","ORKPS1",192,0)
 I $P(ORNUM,";")="I"!($E($P(ORNUM,";"),1)="C") D
"RTN","ORKPS1",193,0)
 .N ORLAST,ORPHNUM
"RTN","ORKPS1",194,0)
 .I $E($P(ORNUM,";"),1)="C" S ORLAST=$S($E($P(ORNUM,";"),2)=1:"V",$E($P(ORNUM,";"),2)=2:"U",1:"NV")
"RTN","ORKPS1",195,0)
 .E  S ORLAST=$E(ORNUM,$L(ORNUM))
"RTN","ORKPS1",196,0)
 .I ORLAST="0" S RET="UNRELEASED" Q
"RTN","ORKPS1",197,0)
 .I ORLAST="P" S RET="PENDING" Q
"RTN","ORKPS1",198,0)
 .S ORPHNUM=+$P(ORNUM,";",2)
"RTN","ORKPS1",199,0)
 .I ORLAST="U" D
"RTN","ORKPS1",200,0)
 ..K ^TMP($J,"OR GET STATUS") D PSS431^PSS55(DFN,ORPHNUM,"","","OR GET STATUS")
"RTN","ORKPS1",201,0)
 ..S RET=$P($G(^TMP($J,"OR GET STATUS",ORPHNUM,28)),U,2)
"RTN","ORKPS1",202,0)
 .I ORLAST="V" D
"RTN","ORKPS1",203,0)
 ..K ^TMP($J,"OR GET STATUS") D PSS436^PSS55(DFN,ORPHNUM,"OR GET STATUS")
"RTN","ORKPS1",204,0)
 ..S RET=$P($G(^TMP($J,"OR GET STATUS",ORPHNUM,100)),U,2)
"RTN","ORKPS1",205,0)
 .I ORLAST="NV" D
"RTN","ORKPS1",206,0)
 ..K ^TMP($J,"OR GET STATUS") D PSJ^PSJ53P1(ORPHNUM,"OR GET STATUS")
"RTN","ORKPS1",207,0)
 ..S RET=$P($G(^TMP($J,"OR GET STATUS",ORPHNUM,28)),U,2)
"RTN","ORKPS1",208,0)
 .S:$E($P(ORNUM,";"),1)="C" RET=RET_" CLINIC ORDER"
"RTN","ORKPS1",209,0)
 I $P(ORNUM,";")="R" D
"RTN","ORKPS1",210,0)
 .N ORREMOTE S ORREMOTE=$G(^TMP($J,ORGLOBL,"OUT","REMOTE",$P(ORNUM,";",2)))
"RTN","ORKPS1",211,0)
 .S RET=$P(ORREMOTE,U,4)_" >> "_$P(ORREMOTE,U)
"RTN","ORKPS1",212,0)
 I "^PENDING^NON-VERIFIED^NON VERIFIED^INCOMPLETE^DRUG INTERACTIONS^"[(U_RET_U) S RET="PENDING"
"RTN","ORKPS1",213,0)
 Q RET
"RTN","ORKPS1",214,0)
 ;
"RTN","ORKPS1",215,0)
ISCLIN(ORNUM) ;check if the order number is a clinic order
"RTN","ORKPS1",216,0)
 N ORRET
"RTN","ORKPS1",217,0)
 D IMOOD^ORIMO(.ORRET,+ORNUM)
"RTN","ORKPS1",218,0)
 Q ORRET
"RTN","ORKPS1",219,0)
 ;
"RTN","ORKPS1",220,0)
PATTYPE(DFN) ;return if patient is Inpatient "I" or Outpatient "O"
"RTN","ORKPS1",221,0)
 N ORRET
"RTN","ORKPS1",222,0)
 D ADM^VADPT2
"RTN","ORKPS1",223,0)
 S ORRET=$S(+$G(VADMVT)>0:"I",1:"O")
"RTN","ORKPS1",224,0)
 K VADMVT
"RTN","ORKPS1",225,0)
 Q ORRET
"RTN","ORKPS1",226,0)
 ;
"VER")
8.0^22.2
**INSTALL NAME**
PSO*7.0*518
"BLD",10247,0)
PSO*7.0*518^OUTPATIENT PHARMACY^0^3180514^y
"BLD",10247,4,0)
^9.64PA^^
"BLD",10247,6.3)
3
"BLD",10247,"ABPKG")
n
"BLD",10247,"KRN",0)
^9.67PA^779.2^20
"BLD",10247,"KRN",.4,0)
.4
"BLD",10247,"KRN",.401,0)
.401
"BLD",10247,"KRN",.402,0)
.402
"BLD",10247,"KRN",.403,0)
.403
"BLD",10247,"KRN",.5,0)
.5
"BLD",10247,"KRN",.84,0)
.84
"BLD",10247,"KRN",3.6,0)
3.6
"BLD",10247,"KRN",3.8,0)
3.8
"BLD",10247,"KRN",9.2,0)
9.2
"BLD",10247,"KRN",9.8,0)
9.8
"BLD",10247,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",10247,"KRN",9.8,"NM",1,0)
PSODDPR4^^0^B142943863
"BLD",10247,"KRN",9.8,"NM",2,0)
PSODOSU2^^0^B146172928
"BLD",10247,"KRN",9.8,"NM",3,0)
PSODDPRE^^0^B140358905
"BLD",10247,"KRN",9.8,"NM",4,0)
PSODOSUN^^0^B99557161
"BLD",10247,"KRN",9.8,"NM",5,0)
PSODOSU4^^0^B4847177
"BLD",10247,"KRN",9.8,"NM",6,0)
PSODOSUT^^0^B149828143
"BLD",10247,"KRN",9.8,"NM",7,0)
PSOBKDE1^^0^B8511579
"BLD",10247,"KRN",9.8,"NM",8,0)
PSORENW0^^0^B84933755
"BLD",10247,"KRN",9.8,"NM",9,0)
PSOBKDED^^0^B88808842
"BLD",10247,"KRN",9.8,"NM","B","PSOBKDE1",7)

"BLD",10247,"KRN",9.8,"NM","B","PSOBKDED",9)

"BLD",10247,"KRN",9.8,"NM","B","PSODDPR4",1)

"BLD",10247,"KRN",9.8,"NM","B","PSODDPRE",3)

"BLD",10247,"KRN",9.8,"NM","B","PSODOSU2",2)

"BLD",10247,"KRN",9.8,"NM","B","PSODOSU4",5)

"BLD",10247,"KRN",9.8,"NM","B","PSODOSUN",4)

"BLD",10247,"KRN",9.8,"NM","B","PSODOSUT",6)

"BLD",10247,"KRN",9.8,"NM","B","PSORENW0",8)

"BLD",10247,"KRN",19,0)
19
"BLD",10247,"KRN",19.1,0)
19.1
"BLD",10247,"KRN",101,0)
101
"BLD",10247,"KRN",409.61,0)
409.61
"BLD",10247,"KRN",409.61,"NM",0)
^9.68A^3^3
"BLD",10247,"KRN",409.61,"NM",1,0)
PSO LM BACKDOOR ORDER^^0
"BLD",10247,"KRN",409.61,"NM",2,0)
PSO LM PENDING ORDER^^0
"BLD",10247,"KRN",409.61,"NM",3,0)
PSO LM Patient Information^^0
"BLD",10247,"KRN",409.61,"NM","B","PSO LM BACKDOOR ORDER",1)

"BLD",10247,"KRN",409.61,"NM","B","PSO LM PENDING ORDER",2)

"BLD",10247,"KRN",409.61,"NM","B","PSO LM Patient Information",3)

"BLD",10247,"KRN",771,0)
771
"BLD",10247,"KRN",779.2,0)
779.2
"BLD",10247,"KRN",870,0)
870
"BLD",10247,"KRN",8989.51,0)
8989.51
"BLD",10247,"KRN",8989.52,0)
8989.52
"BLD",10247,"KRN",8994,0)
8994
"BLD",10247,"KRN","B",.4,.4)

"BLD",10247,"KRN","B",.401,.401)

"BLD",10247,"KRN","B",.402,.402)

"BLD",10247,"KRN","B",.403,.403)

"BLD",10247,"KRN","B",.5,.5)

"BLD",10247,"KRN","B",.84,.84)

"BLD",10247,"KRN","B",3.6,3.6)

"BLD",10247,"KRN","B",3.8,3.8)

"BLD",10247,"KRN","B",9.2,9.2)

"BLD",10247,"KRN","B",9.8,9.8)

"BLD",10247,"KRN","B",19,19)

"BLD",10247,"KRN","B",19.1,19.1)

"BLD",10247,"KRN","B",101,101)

"BLD",10247,"KRN","B",409.61,409.61)

"BLD",10247,"KRN","B",771,771)

"BLD",10247,"KRN","B",779.2,779.2)

"BLD",10247,"KRN","B",870,870)

"BLD",10247,"KRN","B",8989.51,8989.51)

"BLD",10247,"KRN","B",8989.52,8989.52)

"BLD",10247,"KRN","B",8994,8994)

"BLD",10247,"QUES",0)
^9.62^^
"BLD",10247,"REQB",0)
^9.611^2^2
"BLD",10247,"REQB",1,0)
PSO*7.0*500^2
"BLD",10247,"REQB",2,0)
PSS*1.0*224^2
"BLD",10247,"REQB","B","PSO*7.0*500",1)

"BLD",10247,"REQB","B","PSS*1.0*224",2)

"KRN",409.61,428,-1)
0^1
"KRN",409.61,428,0)
PSO LM BACKDOOR ORDER^1^^80^8^20^1^1^^PSO LM BACKDOOR MENU^New Prescription^1^^1
"KRN",409.61,428,1)
^PSO HIDDEN ACTIONS #1
"KRN",409.61,428,"ARRAY")
 ^TMP("PSOPO",$J)
"KRN",409.61,428,"COL",0)
^409.621
"KRN",409.61,428,"FNL")
D EXIT^PSOLMPO2
"KRN",409.61,428,"HDR")
D HDR^PSOLMPO2
"KRN",409.61,428,"HLP")
D HELP^PSOLMPO2
"KRN",409.61,428,"INIT")
D INIT^PSOLMPO2
"KRN",409.61,432,-1)
0^2
"KRN",409.61,432,0)
PSO LM PENDING ORDER^1^^80^8^20^1^1^^PSO PENDING ORDER MENU^Pending Orders^1^^1
"KRN",409.61,432,1)
^PSO HIDDEN ACTIONS #3
"KRN",409.61,432,"ARRAY")
 ^TMP("PSOPO",$J)
"KRN",409.61,432,"FNL")
D EXIT^PSOLMPO
"KRN",409.61,432,"HDR")
D HDR^PSOLMPO
"KRN",409.61,432,"HLP")
D HELP^PSOLMPO
"KRN",409.61,432,"INIT")
D INIT^PSOLMPO
"KRN",409.61,434,-1)
0^3
"KRN",409.61,434,0)
PSO LM Patient Information^1^^80^8^20^1^1^^PSO LM PAT INFO MENU^Patient Information^2^^1
"KRN",409.61,434,1)
^PSO HIDDEN ACTIONS #1
"KRN",409.61,434,"ARRAY")
 ^TMP("PSOPI",$J)
"KRN",409.61,434,"COL",0)
^409.621
"KRN",409.61,434,"FNL")
D EXIT^PSOLMPI
"KRN",409.61,434,"HDR")
D HDR^PSOLMPI
"KRN",409.61,434,"HLP")
D HELP^PSOLMPI
"KRN",409.61,434,"INIT")
D INIT^PSOLMPI
"MBREQ")
1
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"PKG",141,-1)
1^1
"PKG",141,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",141,20,0)
^9.402P^^
"PKG",141,22,0)
^9.49I^1^1
"PKG",141,22,1,0)
7.0^2971216^2980917^11712
"PKG",141,22,1,"PAH",1,0)
518^3180514^11857
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","PSOBKDE1")
0^7^B8511579
"RTN","PSOBKDE1",1,0)
PSOBKDE1 ;BIR/MR-Sub-routines for Backdoor Rx Order Edit ;11/25/02
"RTN","PSOBKDE1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**117,133,372,402,500,518**;DEC 1997;Build 3
"RTN","PSOBKDE1",3,0)
 ;
"RTN","PSOBKDE1",4,0)
LST1 ;
"RTN","PSOBKDE1",5,0)
 W @IOF
"RTN","PSOBKDE1",6,0)
 N PSOLCNT,DIRUT,DTOUT,DUOUT,I,PSODOSCT,PSODOSFL,PSOBKDF1
"RTN","PSOBKDE1",7,0)
 W !,"This is the amount of medication the patient is to receive as one dose"
"RTN","PSOBKDE1",8,0)
 W !,"for this order. This can be a numeric value, such as 325 or 650 or an"
"RTN","PSOBKDE1",9,0)
 W !,"amount with a unit of measure such as 325MG or 650MG. You may also enter"
"RTN","PSOBKDE1",10,0)
 W !,"a free text dosage, such as 1 Tablet or 2 Tablets",!
"RTN","PSOBKDE1",11,0)
 S PSOLCNT=5,PSOBKDF1=1
"RTN","PSOBKDE1",12,0)
 ;
"RTN","PSOBKDE1",13,0)
LST ;
"RTN","PSOBKDE1",14,0)
 I '$G(PSOBKDF1) W @IOF S PSOBKDF1=1
"RTN","PSOBKDE1",15,0)
 N DIR I '$D(DOSE("DD")) D  Q
"RTN","PSOBKDE1",16,0)
 . W !," No dosages are available"
"RTN","PSOBKDE1",17,0)
 . N X S X=$$GET1^DIQ(50,PSODRUG("IEN"),100,"I")
"RTN","PSOBKDE1",18,0)
 . W $S(X'=""&(DT>X):" because the Drug is now Inactive.",1:"!")
"RTN","PSOBKDE1",19,0)
 . W !," Please, enter a free text dosage, or You may select a New"
"RTN","PSOBKDE1",20,0)
 . W !," Orderable Item and Dispense Drug for this order, or you can"
"RTN","PSOBKDE1",21,0)
 . W !," enter a New Order with an Active Drug."
"RTN","PSOBKDE1",22,0)
 . S PSOLCNT=$G(PSOLCNT)+4
"RTN","PSOBKDE1",23,0)
 ;
"RTN","PSOBKDE1",24,0)
 I $P(DOSE("DD",PSODRUG("IEN")),"^",5)]"" D
"RTN","PSOBKDE1",25,0)
 .W !,"VERB: "_$P(DOSE("DD",PSODRUG("IEN")),"^",10)
"RTN","PSOBKDE1",26,0)
 .S PSOLCNT=$G(PSOLCNT)+1
"RTN","PSOBKDE1",27,0)
 ;
"RTN","PSOBKDE1",28,0)
LST2 ;
"RTN","PSOBKDE1",29,0)
 I '$G(PSOBKDF1) W @IOF S PSOBKDF1=1
"RTN","PSOBKDE1",30,0)
 N PSOEND
"RTN","PSOBKDE1",31,0)
 S (PSODOSFL,PSODOSCT)=0
"RTN","PSOBKDE1",32,0)
 F I=0:0 S I=$O(DOSE(I)) Q:'I!('$D(DOSE(I)))  S PSODOSCT=I
"RTN","PSOBKDE1",33,0)
 I PSODOSCT=1,$P(DOSE(1),"^")=""&($P(DOSE(1),"^",3)="") S PSODOSFL=1
"RTN","PSOBKDE1",34,0)
 W !!,"There "_$S(PSODOSFL:"are NO",PSODOSCT=1&('PSODOSFL):"is ",1:"are ")_$S(PSODOSFL:"",1:PSODOSCT)_" Available Dosage(s)"_$S(PSODOSFL:".",1:":")
"RTN","PSOBKDE1",35,0)
 F I=0:0 S I=$O(DOSE(I)) Q:'I!('$D(DOSE(I)))  D
"RTN","PSOBKDE1",36,0)
 .S PSOLCNT=$G(PSOLCNT)+1
"RTN","PSOBKDE1",37,0)
 .W:'$G(PSODOSFL) !?5,$J(I,3)_". "_$S($P(DOSE(I),"^"):$P(DOSE(I),"^")_$S($P(DOSE("DD",PSODRUG("IEN")),"^",6)]"":$P(DOSE("DD",PSODRUG("IEN")),"^",6),1:""),$P(DOSE(I),"^",3)'="":$P(DOSE(I),"^",3),1:"Please Enter a Free Text Dosage.")
"RTN","PSOBKDE1",38,0)
 .I ($Y>19),(I>2)&(PSODOSCT>0) D PAUSE S PSOLCNT=0 W !
"RTN","PSOBKDE1",39,0)
 K DIRUT,DIR
"RTN","PSOBKDE1",40,0)
 Q
"RTN","PSOBKDE1",41,0)
 ;
"RTN","PSOBKDE1",42,0)
PAUSE ;
"RTN","PSOBKDE1",43,0)
 Q:PSODOSCT=I
"RTN","PSOBKDE1",44,0)
 N DIR
"RTN","PSOBKDE1",45,0)
 S DIR("A")="Enter RETURN to view additional dosages or '^' to exit the list of dosages"
"RTN","PSOBKDE1",46,0)
 S DIR(0)="E" W !
"RTN","PSOBKDE1",47,0)
 D ^DIR
"RTN","PSOBKDE1",48,0)
 I $D(DTOUT)!($D(DUOUT)) S I=9999 Q
"RTN","PSOBKDE1",49,0)
 W @IOF
"RTN","PSOBKDE1",50,0)
 Q
"RTN","PSOBKDED")
0^9^B88808842
"RTN","PSOBKDED",1,0)
PSOBKDED ;BIR/SAB - Edit backdoor Rx Order entry ;04/17/95
"RTN","PSOBKDED",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**11,46,91,78,99,117,133,143,268,378,416,282,450,402,518**;DEC 1997;Build 3
"RTN","PSOBKDED",3,0)
 ;Ref PS(50.607 IA 2221
"RTN","PSOBKDED",4,0)
 ;Ref PS(50.7 IA 2223
"RTN","PSOBKDED",5,0)
 ;Ref PS(51.2 IA 2226
"RTN","PSOBKDED",6,0)
 ;Ref PSDRUG( IA 221
"RTN","PSOBKDED",7,0)
 ;Ref DOSE^PSSORPH IA 3234
"RTN","PSOBKDED",8,0)
 ;Ref PS(55 IA 2228
"RTN","PSOBKDED",9,0)
1 S %DT="AEX",%DT(0)=-PSONEW("FILL DATE"),Y=PSONEW("ISSUE DATE") X ^DD("DD") S %DT("A")="ISSUE DATE: ",%DT("B")=Y D ^%DT
"RTN","PSOBKDED",10,0)
 I "^"[$E(X) D KX K %DT Q
"RTN","PSOBKDED",11,0)
 G:Y=-1 1 S (PSOID,PSONEW("ISSUE DATE"))=Y D KX K %DT
"RTN","PSOBKDED",12,0)
 Q
"RTN","PSOBKDED",13,0)
2 S PSONEW("FLD")=2 D FILLDT^PSODIR2(.PSONEW) ;Fdt
"RTN","PSOBKDED",14,0)
 Q
"RTN","PSOBKDED",15,0)
3 S:$G(POERR) PSONEW("ISSUE DATE")=PSOID
"RTN","PSOBKDED",16,0)
 S PSONEW("FLD")=3 D PTSTAT^PSODIR1(.PSONEW) ;Sta
"RTN","PSOBKDED",17,0)
 Q
"RTN","PSOBKDED",18,0)
4 S PSONEW("FLD")=4 D PROV^PSODIR(.PSONEW) ;Pro
"RTN","PSOBKDED",19,0)
 Q
"RTN","PSOBKDED",20,0)
5 S PSONEW("FLD")=5 D CLINIC^PSODIR2(.PSONEW) ;Cli
"RTN","PSOBKDED",21,0)
 Q
"RTN","PSOBKDED",22,0)
6 S PSONEW("FLD")=6 D ^PSODRG,EN^PSODIAG ;Drg/ICD
"RTN","PSOBKDED",23,0)
 D 6^PSODRGN
"RTN","PSOBKDED",24,0)
 Q
"RTN","PSOBKDED",25,0)
7 S PSONEW("FLD")=7 D QTY^PSODIR1(.PSONEW) ;Qty
"RTN","PSOBKDED",26,0)
 Q
"RTN","PSOBKDED",27,0)
8 S PSONEW("FLD")=8 D DAYS^PSODIR1(.PSONEW) ;Day
"RTN","PSOBKDED",28,0)
 K PSMAX,PSTMAX D REF^PSOORNEW S PSONEW("N# REF")=PSONEW("# OF REFILLS")
"RTN","PSOBKDED",29,0)
 Q
"RTN","PSOBKDED",30,0)
9 S PSONEW("FLD")=9 D REFILL^PSODIR1(.PSONEW) ;Ref
"RTN","PSOBKDED",31,0)
 K PSMAX,PSTMAX
"RTN","PSOBKDED",32,0)
 Q
"RTN","PSOBKDED",33,0)
10 S PSONEW("FLD")="3A" N PSOEDDOS S PSOEDDOS=1 D DOSE^PSODIR(.PSONEW) ;Dose
"RTN","PSOBKDED",34,0)
 Q
"RTN","PSOBKDED",35,0)
 ;
"RTN","PSOBKDED",36,0)
 Q  I $G(COPY),$G(SIGOK) S PSOFDR=1 K PSONEW("SIG")
"RTN","PSOBKDED",37,0)
 S PSONEW("FLD")=10 D SIG^PSODIR1(.PSONEW) ;Sig
"RTN","PSOBKDED",38,0)
 I $G(COPY) K PSOFDR
"RTN","PSOBKDED",39,0)
 S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR D KV
"RTN","PSOBKDED",40,0)
 Q
"RTN","PSOBKDED",41,0)
INS S PSONEW("FLD")="3B" D INS^PSODIR(.PSONEW) ;Ins
"RTN","PSOBKDED",42,0)
 Q
"RTN","PSOBKDED",43,0)
11 S PSONEW("FLD")=11 D COPIES^PSODIR1(.PSONEW) ;Cop
"RTN","PSOBKDED",44,0)
 Q
"RTN","PSOBKDED",45,0)
12 S PSONEW("FLD")=12 D MW^PSODIR2(.PSONEW) ;M/W
"RTN","PSOBKDED",46,0)
 Q
"RTN","PSOBKDED",47,0)
13 S PSONEW("FLD")=13 D RMK^PSODIR2(.PSONEW) ;Rem
"RTN","PSOBKDED",48,0)
 Q
"RTN","PSOBKDED",49,0)
DOSE ;backdoor
"RTN","PSOBKDED",50,0)
 I '$G(PSONEW("ENT")) S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="  (5) Dosage Ordered: " G INS1
"RTN","PSOBKDED",51,0)
 S SD=1 F I=1:1:PSONEW("ENT") D 
"RTN","PSOBKDED",52,0)
 .I '$G(PSONEW("DOSE ORDERED",I)),$G(PSONEW("VERB",I))]"" S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="                Verb: "_$G(PSONEW("VERB",I))
"RTN","PSOBKDED",53,0)
 .S:$G(SD)=1 IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="  (5)",DS=1 K SD
"RTN","PSOBKDED",54,0)
 .D DOSE1
"RTN","PSOBKDED",55,0)
INS1 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="  (6)Pat Instruction:"
"RTN","PSOBKDED",56,0)
INS2 I $O(PSONEW("SIG",0)) F D=0:0 S D=$O(PSONEW("SIG",D)) Q:'D  D
"RTN","PSOBKDED",57,0)
 .F SG=1:1:$L(PSONEW("SIG",D)) S:$L(^TMP("PSOPO",$J,IEN,0)_" "_$P(PSONEW("SIG",D)," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOPO",$J,IEN,0)," ",21)=" " D
"RTN","PSOBKDED",58,0)
 ..S:$P(PSONEW("SIG",D)," ",SG)'="" ^TMP("PSOPO",$J,IEN,0)=$G(^TMP("PSOPO",$J,IEN,0))_" "_$P(PSONEW("SIG",D)," ",SG)
"RTN","PSOBKDED",59,0)
 I $P($G(^PS(55,PSODFN,"LAN")),"^") D  Q
"RTN","PSOBKDED",60,0)
 .S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" Other Patient Inst.: "
"RTN","PSOBKDED",61,0)
 .I $G(^PSRX(+$G(PSONEW("OIRXN")),"INSS"))]"" S PSONEW("SINS")=^PSRX(PSONEW("OIRXN"),"INSS")
"RTN","PSOBKDED",62,0)
 .S ^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_$G(PSONEW("SINS"))
"RTN","PSOBKDED",63,0)
 Q
"RTN","PSOBKDED",64,0)
 ;
"RTN","PSOBKDED",65,0)
DOSE1 I $G(DS)=1 D  K DS G DU
"RTN","PSOBKDED",66,0)
 .S ^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_" Dosage Ordered: "_$S($E(PSONEW("DOSE",I),1)="."&($G(PSONEW("DOSE ORDERED",I))):"0",1:"")_PSONEW("DOSE",I)_$S($G(PSONEW("UNITS",I))'="":" ("_$P(^PS(50.607,PSONEW("UNITS",I),0),"^")_")",1:"")
"RTN","PSOBKDED",67,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="      Dosage Ordered: "_$S($E(PSONEW("DOSE",I),1)="."&($G(PSONEW("DOSE ORDERED",I))):"0",1:"")_PSONEW("DOSE",I)_$S($G(PSONEW("UNITS",I))'="":" ("_$P(^PS(50.607,PSONEW("UNITS",I),0),"^")_")",1:"")
"RTN","PSOBKDED",68,0)
DU I '$G(PSONEW("DOSE ORDERED",I)),$P($G(^PS(55,PSODFN,"LAN")),"^") S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="   Oth. Lang. Dosage: "_$G(PSONEW("ODOSE",I))
"RTN","PSOBKDED",69,0)
 I $G(PSONEW("DOSE ORDERED",I)),$G(PSONEW("VERB",I))]"" S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="                Verb: "_$G(PSONEW("VERB",I))
"RTN","PSOBKDED",70,0)
 S:$G(PSONEW("DOSE ORDERED",I)) IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="      Dispense Units: "_$S($E($G(PSONEW("DOSE ORDERED",I)),1)=".":"0",1:"")_$G(PSONEW("DOSE ORDERED",I))
"RTN","PSOBKDED",71,0)
 I $G(PSONEW("DOSE ORDERED",I)),$G(PSONEW("NOUN",I))]"" S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="                Noun: "_PSONEW("NOUN",I)
"RTN","PSOBKDED",72,0)
 I $G(PSONEW("ROUTE",I)) S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="               Route: "_$P(^PS(51.2,PSONEW("ROUTE",I),0),"^")
"RTN","PSOBKDED",73,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="            Schedule: "_$G(PSONEW("SCHEDULE",I))
"RTN","PSOBKDED",74,0)
 I $G(PSONEW("DURATION",I))]"" D
"RTN","PSOBKDED",75,0)
 .S IEN=IEN+1
"RTN","PSOBKDED",76,0)
 .S ^TMP("PSOPO",$J,IEN,0)="           *Duration: "_PSONEW("DURATION",I)_" ("_$S(PSONEW("DURATION",I)["M":"MINUTES",PSONEW("DURATION",I)["W":"WEEKS",PSONEW("DURATION",I)["L":"MONTHS",PSONEW("DURATION",I)["H":"HOURS",1:"DAYS")_")"
"RTN","PSOBKDED",77,0)
 I $G(PSONEW("CONJUNCTION",I))]"" S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="         Conjunction: "_$S($G(PSONEW("CONJUNCTION",I))="A":"AND",$G(PSONEW("CONJUNCTION",I))="T":"THEN",$G(PSONEW("CONJUNCTION",I))="X":"EXCEPT",1:"")
"RTN","PSOBKDED",78,0)
 Q
"RTN","PSOBKDED",79,0)
RTE I $G(DRET) S PSORXED("ROUTE",ENT)=""
"RTN","PSOBKDED",80,0)
 I $G(RTE) K RTE
"RTN","PSOBKDED",81,0)
 K DIR,DIRUT S DIR(0)="FO^2:45",DIR("A")="ROUTE",DIR("?")="^D HLP^PSOORED4"
"RTN","PSOBKDED",82,0)
 S DIR("B")=$S($G(PSORXED("ROUTE",ENT)):$P(^PS(51.2,PSORXED("ROUTE",ENT),0),"^"),$G(RTE)]"":RTE,$G(DRET):"",1:"PO") K:DIR("B")="" DIR("B")
"RTN","PSOBKDED",83,0)
 ;I '$G(PSORXED("ROUTE",ENT)),$G(PSOREEDT) K DIR("B")
"RTN","PSOBKDED",84,0)
 D ^DIR I X[U,$L(X)>1 S FIELD="RTE",JUMP=1 K DIRUT,DTOUT Q
"RTN","PSOBKDED",85,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","PSOBKDED",86,0)
 I X="@"!(X="") K RTE,ERTE S DRET=1,PSORXED("ROUTE",ENT)="" Q
"RTN","PSOBKDED",87,0)
 K DRET I X=$P($G(^PS(51.2,+$G(PSORXED("ROUTE",ENT)),0)),"^") S RTE=$P(^PS(51.2,PSORXED("ROUTE",ENT),0),"^"),ERTE=$P(^PS(51.2,PSORXED("ROUTE",ENT),0),"^",2) W X_" "_$G(ERTE) Q
"RTN","PSOBKDED",88,0)
 S DIC=51.2,DIC(0)="QEZM",DIC("S")="I $P(^(0),""^"",4)" D ^DIC Q:X[U  G:Y=-1 RTE W "  "_$P(Y(0),"^",2)
"RTN","PSOBKDED",89,0)
 S:X'="" PSORXED("ROUTE",ENT)=+Y,RTE=Y(0,0),ERTE=$P(Y(0),"^",2)
"RTN","PSOBKDED",90,0)
 Q
"RTN","PSOBKDED",91,0)
ASK K JUMP,UNITN,DOSE D KV D DOSE^PSSORPH(.DOSE,PSODRUG("IEN"),"O",PSODFN)
"RTN","PSOBKDED",92,0)
 N PSODOSCT,PSODOSFL,PSODOSWT D FULL^VALM1  ;402
"RTN","PSOBKDED",93,0)
 I $D(DOSE("DD")) D LST2^PSOBKDE1 G ASK1
"RTN","PSOBKDED",94,0)
 D:$G(PSOFROM)="NEW"&($G(PSORX("EDIT"))']"")!($G(PSOFROM1))!($G(COPY)) LST^PSOBKDE1:$O(DOSE(0))
"RTN","PSOBKDED",95,0)
ASK1 S STRE=$P($G(DOSE("DD",PSODRUG("IEN"))),"^",5),UNITN=$P($G(DOSE("DD",PSODRUG("IEN"))),"^",6),DOSE("LD")=$P($G(DOSE("DD",PSODRUG("IEN"))),"^",11)
"RTN","PSOBKDED",96,0)
 W ! S DIR(0)="F^1:60"
"RTN","PSOBKDED",97,0)
 I '$G(PSODOSCT) D
"RTN","PSOBKDED",98,0)
 .F I=0:0 S I=$O(DOSE(I)) Q:'I!('$D(DOSE(I)))  S PSODOSCT=I
"RTN","PSOBKDED",99,0)
 .I PSODOSCT=1,$P(DOSE(1),"^")=""&($P(DOSE("DD",PSODRUG("IEN")),"^",6)="") S PSODOSFL=1
"RTN","PSOBKDED",100,0)
 S PSODOSWT="",PSODOSWT=$S($G(PSODOSCT)<1:"",$G(PSODOSCT)=1&($G(PSODOSFL)):"",1:" (1-"_$G(PSODOSCT)_")")
"RTN","PSOBKDED",101,0)
 ;S DIR("A",1)="Select from list of Available Dosages"_PSODOSWT_", Enter Free Text Dose",DIR("?")="^D LST1^PSOBKDE1",DIR("A")="or Enter a Question Mark (?) to view list"
"RTN","PSOBKDED",102,0)
 ; next 2 lines 402
"RTN","PSOBKDED",103,0)
 I PSODOSCT=1,($P($G(DOSE(1)),"^")=""&($P($G(DOSE(1)),"^",3)="")) S PSODOSFL=1
"RTN","PSOBKDED",104,0)
 S:$G(PSODOSFL) DIR("A")="     Please Enter a Free Text Dose"
"RTN","PSOBKDED",105,0)
 S:'$G(PSODOSFL) DIR("A",1)="Select from list of Available Dosages"_PSODOSWT_", Enter Free Text Dose",DIR("?")="^D LST1^PSOBKDE1",DIR("A")="or Enter a Question Mark (?) to view list"
"RTN","PSOBKDED",106,0)
 I $G(PSORXED("DOSE",ENT))]"" S DIR("B")=PSORXED("DOSE",ENT) D
"RTN","PSOBKDED",107,0)
 .I $G(PSORXED("UNITS",ENT))]"",DIR("B")'[($P($G(^PS(50.607,PSORXED("UNITS",ENT),0)),"^")) S DIR("B")=DIR("B")_$P($G(^PS(50.607,PSORXED("UNITS",ENT),0)),"^")
"RTN","PSOBKDED",108,0)
 K:$G(PSOREEDQ)!($G(PSOBDRG)) DIR("B")
"RTN","PSOBKDED",109,0)
 D ^DIR
"RTN","PSOBKDED",110,0)
 I X[U,$L(X)>1 S FIELD="ASK",JUMP=1 K DIRUT,DTOUT Q
"RTN","PSOBKDED",111,0)
 I $D(DIRUT) S:$G(ORD) PSODSPL=1 Q
"RTN","PSOBKDED",112,0)
 I X=$G(PSORXED("DOSE",ENT)),$D(DOSE(Y)) G GD1
"RTN","PSOBKDED",113,0)
 I X=$G(PSORXED("DOSE",ENT)) D  G DOS
"RTN","PSOBKDED",114,0)
 .S DOSE=X,UNITS=$G(PSORXED("UNITS",ENT))
"RTN","PSOBKDED",115,0)
 .I DOSE'?.N&(DOSE'?.N1".".N)!'DOSE("LD") S (UNITN,UNITS,PSORXED("UNITS",ENT))="" K PSORXED("DOSE ORDERED",ENT),DUPD,PSORXED("NOUN",ENT)
"RTN","PSOBKDED",116,0)
GD1 N PSORXTE
"RTN","PSOBKDED",117,0)
 I $D(DOSE(Y)) D  G DOS ;from list
"RTN","PSOBKDED",118,0)
 .S DOSE=$S($P(DOSE(Y),"^"):$P(DOSE(Y),"^"),$P(DOSE(Y),"^",3)]"":$P(DOSE(Y),"^",3),1:1),DOLST=Y
"RTN","PSOBKDED",119,0)
 .I $P(DOSE(Y),"^") S UNITS=$P(DOSE(Y),"^",2),DUPD=$P(DOSE(Y),"^",3),UNITN=$P(DOSE("DD",PSODRUG("IEN")),"^",6),PSORXTE("DOSE ORDERED",ENT)=DUPD
"RTN","PSOBKDED",120,0)
 .S PSORXTE("NOUN",ENT)=$P(DOSE(Y),"^",6),PSORXTE("VERB",ENT)=$P(DOSE(Y),"^",8)
"RTN","PSOBKDED",121,0)
 .I DOSE'?.N&(DOSE'?.N1".".N)!'DOSE("LD") D  Q
"RTN","PSOBKDED",122,0)
 ..S (UNITN,UNITS,PSORXED("UNITS",ENT))="" K PSORXED("DOSE ORDERED",ENT),DUPD,PSORXED("NOUN",ENT)
"RTN","PSOBKDED",123,0)
 ..I $P($G(^PS(55,PSODFN,"LAN")),"^"),$G(PSOFROM)="PENDING" D LAN^PSOORED5 Q
"RTN","PSOBKDED",124,0)
 ..I $P($G(^PS(55,PSODFN,"LAN")),"^"),$G(PSOFROM)="NEW" D LAN^PSOORED5
"RTN","PSOBKDED",125,0)
 .S PSORXTE("UNITS",ENT)=$G(UNITS)
"RTN","PSOBKDED",126,0)
 S DOSE=Y,DOLST=0 ;non-numeric and numeric not in list
"RTN","PSOBKDED",127,0)
 I DOSE("LD") D
"RTN","PSOBKDED",128,0)
 .F I=1:1:$L(DOSE)  I $E(DOSE,I)'?.N&($E(DOSE,I)'?1" ")&($E(DOSE,I)'?1".") S DCHK=$G(DCHK)_$E(DOSE,I)
"RTN","PSOBKDED",129,0)
 .I $G(DCHK)]"" D
"RTN","PSOBKDED",130,0)
 ..S DCHK=$TR(DCHK,"qwertyuioplkjhgfdsazxcvbnm","QWERTYUIOPLKJHGFDSAZXCVBNM")
"RTN","PSOBKDED",131,0)
 ..I DCHK=UNITN S DOSE=+DOSE
"RTN","PSOBKDED",132,0)
 K I,DCHK
"RTN","PSOBKDED",133,0)
 S PSOINDT=$$GET1^DIQ(50,PSODRUG("IEN"),100,"I") I PSOINDT,DT>PSOINDT G DOS
"RTN","PSOBKDED",134,0)
 S PSORXTE("NOUN",ENT)=$P(DOSE("DD",PSODRUG("IEN")),"^",9),PSORXTE("VERB",ENT)=$P(DOSE("DD",PSODRUG("IEN")),"^",10)
"RTN","PSOBKDED",135,0)
 I DOSE'?.N&(DOSE'?.N1".".N)!'DOSE("LD") S (UNITN,UNITS,PSORXED("UNITS",ENT))="" K PSORXED("NOUN",ENT),PSORXED("ODOSE",ENT) G DOS
"RTN","PSOBKDED",136,0)
 S:$P(DOSE("DD",PSODRUG("IEN")),"^",6)]"" (PSORXTE("UNITS",ENT),UNITS)=$O(^PS(50.607,"B",$P(DOSE("DD",PSODRUG("IEN")),"^",6),0)),UNITN=$P(DOSE("DD",PSODRUG("IEN")),"^",6)
"RTN","PSOBKDED",137,0)
 S:$P(DOSE("DD",PSODRUG("IEN")),"^",5) DUPD=DOSE/$P(DOSE("DD",PSODRUG("IEN")),"^",5),PSORXTE("DOSE ORDERED",ENT)=DUPD
"RTN","PSOBKDED",138,0)
DOS W " "_$S($E(DOSE,1)="."&($G(UNITN)'=""):"0",1:"")_DOSE W:$G(UNITN)'="" UNITN
"RTN","PSOBKDED",139,0)
 W ! K DIR,DIRUT S DIR(0)="Y",DIR("A")="You entered "_$S($E(DOSE,1)="."&($G(UNITN)'=""):"0",1:"")_DOSE_$S($G(UNITN)'="":UNITN,1:"")_" is this correct",DIR("B")="Yes"
"RTN","PSOBKDED",140,0)
 D ^DIR I 'Y D KX K DOSE,UNITS,PSORXTE,PSOINDT G ASK
"RTN","PSOBKDED",141,0)
 S PSORXED("DOSE",ENT)=DOSE
"RTN","PSOBKDED",142,0)
 S:$G(PSORXTE("DOSE ORDERED",ENT))]"" PSORXED("DOSE ORDERED",ENT)=PSORXTE("DOSE ORDERED",ENT)
"RTN","PSOBKDED",143,0)
 S:$G(PSORXTE("NOUN",ENT))]"" PSORXED("NOUN",ENT)=PSORXTE("NOUN",ENT)
"RTN","PSOBKDED",144,0)
 I $G(PSORX("EDIT"))']"" D  ;PSO*7.0*450
"RTN","PSOBKDED",145,0)
 .S:$G(PSORXTE("VERB",ENT))]"" PSORXED("VERB",ENT)=PSORXTE("VERB",ENT)
"RTN","PSOBKDED",146,0)
 S:$G(PSORXTE("UNITS",ENT))]"" PSORXED("UNITS",ENT)=PSORXTE("UNITS",ENT)
"RTN","PSOBKDED",147,0)
 I $G(PSORXED("DOSE",ENT))'?.N&($G(PSORXED("DOSE",ENT))'?.N1".".N)!'DOSE("LD"),$P($G(^PS(55,PSODFN,"LAN")),"^") D
"RTN","PSOBKDED",148,0)
 .K OTHDOS(ENT) D KX S DIR(0)="52.0113,9"
"RTN","PSOBKDED",149,0)
 .I '$G(OTHDOS(ENT)),$G(PSORXED("ODOSE",ENT))']"" D LAN^PSOORED5
"RTN","PSOBKDED",150,0)
 .I $G(PSORXED("ODOSE",ENT))]"" S DIR("B")=PSORXED("ODOSE",ENT) K:DIR("B")="" DIR("B")
"RTN","PSOBKDED",151,0)
 .K DTOUT,DUOUT,DIRUT,Y,X D ^DIR K DIR K:$G(X)="@"!($G(X)="") DIRUT I $D(DIRUT) Q
"RTN","PSOBKDED",152,0)
 .I X="@" S OTHDOS(ENT)=1 D KX K PSORXED("ODOSE",ENT) Q
"RTN","PSOBKDED",153,0)
 .S:X'="" PSORXED("ODOSE",ENT)=X
"RTN","PSOBKDED",154,0)
 Q
"RTN","PSOBKDED",155,0)
 ;
"RTN","PSOBKDED",156,0)
SCH D KX
"RTN","PSOBKDED",157,0)
 ;*282 Allow multi-word schedules
"RTN","PSOBKDED",158,0)
 S DIR("?")="^D SCHLP^PSOORED4",DIR("A")="Schedule: ",DIR(0)="FA^1:20^I X[""""""""!(X?.E1C.E)!($A(X)=45)!($L(X,"" "")>$S(X[""PRN"":4,1:3))!($L(X)>20)!($L(X)<1) K X"
"RTN","PSOBKDED",159,0)
 I '$D(PSOSCH),'$D(PSORXED("SCHEDULE",ENT)),$P(^PS(50.7,PSODRUG("OI"),0),"^",8)]"" S PSOSCH=$P(^PS(50.7,PSODRUG("OI"),0),"^",8)
"RTN","PSOBKDED",160,0)
 S DIR("B")=$S($D(PSOSCH)&('$D(PSORXED("SCHEDULE",ENT))):PSOSCH,$G(PSORXED("SCHEDULE",ENT))]"":PSORXED("SCHEDULE",ENT),1:"") K:DIR("B")="" DIR("B")
"RTN","PSOBKDED",161,0)
 I $G(PSORXED("SCHEDULE",ENT))']"",$G(PSOREEDT) K DIR("B")
"RTN","PSOBKDED",162,0)
 D ^DIR
"RTN","PSOBKDED",163,0)
 Q
"RTN","PSOBKDED",164,0)
KX K X,Y
"RTN","PSOBKDED",165,0)
KV K DTOUT,DUOUT,DIR,DIRUT
"RTN","PSOBKDED",166,0)
 Q
"RTN","PSODDPR4")
0^1^B142943863
"RTN","PSODDPR4",1,0)
PSODDPR4 ;BHAM - ISC/EJW,SAB - build local OP  & RDI profiles ;07/19/07
"RTN","PSODDPR4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**251,375,387,379,390,372,416,484,500,518**;DEC 1997;Build 3
"RTN","PSODDPR4",3,0)
 ;External references to ^ORRDI1 supported by DBIA 4659
"RTN","PSODDPR4",4,0)
 ;External references to ^XTMP("ORRDI" supported by DBIA 4660
"RTN","PSODDPR4",5,0)
 ;External reference to ^PSDRUG( supported by DBIA 221
"RTN","PSODDPR4",6,0)
 ;External reference to IN^PSJBLDOC supported by DBIA 5306
"RTN","PSODDPR4",7,0)
 ;External references to ^PSSDSAPM supported by DBIA 5570
"RTN","PSODDPR4",8,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSODDPR4",9,0)
 ;External reference to ENCHK^PSJORUT2 supported by DBIA 2376
"RTN","PSODDPR4",10,0)
 ;External reference to IN^PSSHRQ2 supported by DBIA 5369
"RTN","PSODDPR4",11,0)
 ;External reference to ^PS(50.606 supported by DBIA 2174
"RTN","PSODDPR4",12,0)
 ;External reference to ^PS(50.7 supported by DBIA 2223
"RTN","PSODDPR4",13,0)
 ;External reference to SUP^PSSDSAPI supported by DBIA 5425
"RTN","PSODDPR4",14,0)
 ;
"RTN","PSODDPR4",15,0)
BLD(PSODFN,LIST,PDRG,PTY) ;
"RTN","PSODDPR4",16,0)
 ;build OP, RDI, INP MEDS profiles
"RTN","PSODDPR4",17,0)
 ;PTY - P1;P2 where P1="I" for IP & "O" for OP (required), P2=Pharm order# (optional)
"RTN","PSODDPR4",18,0)
 I '$D(PSODFN) W !,"Patient UNDEFINED!",! Q
"RTN","PSODDPR4",19,0)
 I '$D(LIST) W !,"Input Base UNDEFINED!",! Q
"RTN","PSODDPR4",20,0)
 K ^TMP($J,LIST)
"RTN","PSODDPR4",21,0)
ORD N PSODTCUT,X1,X2,ODRG,ORTYP,ORN,DO,IEN,NAME,PROF,PSOON,PSOFRMNM S (PROF,CNT)=0
"RTN","PSODDPR4",22,0)
 F ZI=0:0 S ZI=$O(PDRG(ZI)) Q:'ZI  S IEN=$P(PDRG(ZI),"^"),NAME=$P(PDRG(ZI),"^",2) K PSOFRMNM S:$G(PSOFRMOR) PSOFRMNM=$P(PDRG(ZI),"^",4) D DRG
"RTN","PSODDPR4",23,0)
 I $D(PSJDGCK),'$D(PSGDGCKF) Q:$O(^TMP($J,LIST,"IN","PROSPECTIVE",""))=""   ;no prospective drugs to pass in
"RTN","PSODDPR4",24,0)
 I '$D(PSJDGCK),$O(^TMP($J,LIST,"IN","PROSPECTIVE",""))="" D:$O(PSODUPSP(0)) DRGSUP Q  ;no prospective drugs to pass in and drug is supply, create supply nodes
"RTN","PSODDPR4",25,0)
 S X1=DT,X2=-120 D C^%DTC S PSODTCUT=X D ^PSOBUILD,PROFILE
"RTN","PSODDPR4",26,0)
 K PSOSD D REMOTE D:$P($G(PTY),";")="I" IN^PSJBLDOC(PSODFN,LIST,.PDRG,$G(PTY))
"RTN","PSODDPR4",27,0)
 S ^TMP($J,LIST,"IN","IEN")=PSODFN,^TMP($J,LIST,"IN","DRUGDRUG")="",^TMP($J,LIST,"IN","THERAPY")=""
"RTN","PSODDPR4",28,0)
 S ^TMP($J,LIST,"IN","SOURCE")=$P($G(PTY),";")
"RTN","PSODDPR4",29,0)
 I $P($G(PTY),";")="O" D IMO^PSODDPR7(PSODFN)
"RTN","PSODDPR4",30,0)
 N PSOICT,PSODRUG,PSOY,CNT,ZI
"RTN","PSODDPR4",31,0)
 D IN^PSSHRQ2(LIST) D:$O(PSODUPSP(0)) DRGSUP
"RTN","PSODDPR4",32,0)
 Q
"RTN","PSODDPR4",33,0)
PROFILE ;build profile drug input
"RTN","PSODDPR4",34,0)
 N ID,ORTYP,DD,PSOI,ORN,RECTYP S (STA,DNM)="",DO=0
"RTN","PSODDPR4",35,0)
 F  S STA=$O(PSOSD(STA)) Q:STA=""  F  S DNM=$O(PSOSD(STA,DNM)) Q:DNM=""  D
"RTN","PSODDPR4",36,0)
 .I STA="PENDING" D  Q
"RTN","PSODDPR4",37,0)
 ..Q:$P(^PS(52.41,$P(PSOSD(STA,DNM),"^",10),0),"^",3)="RF"
"RTN","PSODDPR4",38,0)
 ..S RXREC=$P(PSOSD(STA,DNM),"^",10),ORN=$P(^PS(52.41,RXREC,0),"^"),ODRG=$P(^(0),"^",9),ORTYP="P"
"RTN","PSODDPR4",39,0)
 ..I ODRG D  K ODRG Q
"RTN","PSODDPR4",40,0)
 ...I $P($G(^PSDRUG(ODRG,0)),"^",3)["S"!($E($P($G(^PSDRUG(ODRG,0)),"^",2),1,2)="XA") Q
"RTN","PSODDPR4",41,0)
 ...S DRNM=$P(^PSDRUG(ODRG,0),"^"),DO=DO+1 D ID
"RTN","PSODDPR4",42,0)
 ..E  N PSOI,DDRG,ODRG,SEQN,DDRG S PSOI=$P(^PS(52.41,RXREC,0),"^",8) D
"RTN","PSODDPR4",43,0)
 ...S DRNM=$P(^PS(50.7,PSOI,0),"^")_" "_$P(^PS(50.606,$P(^(0),"^",2),0),"^")
"RTN","PSODDPR4",44,0)
 ...S DDRG=$$DRG^PSSDSAPM(PSOI,"O") I '$P(DDRG,";") D:'$$NVATST^PSODDPRE(PSOI,"O") OIX Q
"RTN","PSODDPR4",45,0)
 ...I $P($G(^PSDRUG($P(DDRG,";"),0)),"^",3)["S"!($E($P($G(^PSDRUG($P(DDRG,";"),0)),"^",2),1,2)="XA") Q
"RTN","PSODDPR4",46,0)
 ...S ODRG=$P(DDRG,";"),SEQN=+$P(DDRG,";",3) K PSOI
"RTN","PSODDPR4",47,0)
 ...N ID S ID=+$$GETVUID^XTID(50.68,,+$P($G(^PSDRUG(ODRG,"ND")),"^",3)_",")
"RTN","PSODDPR4",48,0)
 ...D ID1
"RTN","PSODDPR4",49,0)
 .I STA="ZNONVA" D  Q
"RTN","PSODDPR4",50,0)
 ..S RXREC=$P(PSOSD(STA,DNM),"^",10),ODRG=$P(^PS(55,PSODFN,"NVA",RXREC,0),"^",2),ORN=$P($G(^(0)),"^",8),ORTYP="N"
"RTN","PSODDPR4",51,0)
 ..I ODRG D  K ODRG Q
"RTN","PSODDPR4",52,0)
 ...I $P($G(^PSDRUG(ODRG,0)),"^",3)["S"!($E($P($G(^PSDRUG(ODRG,0)),"^",2),1,2)="XA") Q
"RTN","PSODDPR4",53,0)
 ...S DRNM=$P(^PSDRUG(ODRG,0),"^"),DO=DO+1 D ID
"RTN","PSODDPR4",54,0)
  ..E  N PSOI,DDRG,ODRG,SEQN,DDRG,DRNM S PSOI=$P(^PS(55,PSODFN,"NVA",RXREC,0),"^") D
"RTN","PSODDPR4",55,0)
 ...S DRNM=$P(^PS(50.7,PSOI,0),"^")_" "_$P(^PS(50.606,$P(^(0),"^",2),0),"^")
"RTN","PSODDPR4",56,0)
 ...S DDRG=$$DRG^PSSDSAPM(PSOI,"X") I '$P(DDRG,";") D:'$$NVATST^PSODDPRE(PSOI,"X") OIX Q
"RTN","PSODDPR4",57,0)
 ...I $P($G(^PSDRUG($P(DDRG,";"),0)),"^",3)["S"!($E($P($G(^PSDRUG($P(DDRG,";"),0)),"^",2),1,2)="XA") Q
"RTN","PSODDPR4",58,0)
 ...S ODRG=$P(DDRG,";"),SEQN=+$P(DDRG,";",3),DO=DO+1 K PSOI
"RTN","PSODDPR4",59,0)
 ...N ID S ID=+$$GETVUID^XTID(50.68,,+$P($G(^PSDRUG(ODRG,"ND")),"^",3)_",")
"RTN","PSODDPR4",60,0)
 ...D ID1
"RTN","PSODDPR4",61,0)
 .S RXREC=+PSOSD(STA,DNM)
"RTN","PSODDPR4",62,0)
 .I $P($G(PTY),";")="O",$P($G(PTY),";",2)=RXREC Q
"RTN","PSODDPR4",63,0)
 .I $P($G(^PSRX(RXREC,0)),"^",6) S ODRG=$P(^PSRX(RXREC,0),"^",6) D
"RTN","PSODDPR4",64,0)
 ..I $P($G(^PSDRUG(ODRG,0)),"^",3)["S"!($E($P($G(^PSDRUG(ODRG,0)),"^",2),1,2)="XA") Q
"RTN","PSODDPR4",65,0)
 ..I STA="DISCONTINUED" Q:$$DUPTHER^PSODDPRE(RXREC)  ;screen out duplicate therapy for local orders
"RTN","PSODDPR4",66,0)
 ..S ORN=$P($G(^PSRX(RXREC,"OR1")),"^",2),ORTYP="O",DRNM=$P(^PSDRUG(ODRG,0),"^"),DO=DO+1 D ID
"RTN","PSODDPR4",67,0)
 K RXREC,ID,STA,DNM,SEQN,PSOI,PSODD,P1,P3,OR1,P2,PSODRUG,DD,DRNM,DDRG
"RTN","PSODDPR4",68,0)
 Q
"RTN","PSODDPR4",69,0)
ID N ID S ID=+$$GETVUID^XTID(50.68,,+$P($G(^PSDRUG(ODRG,"ND")),"^",3)_",")
"RTN","PSODDPR4",70,0)
 S P1=$P($G(^PSDRUG(ODRG,"ND")),"^"),P2=$P($G(^("ND")),"^",3),X=$$PROD0^PSNAPIS(P1,P2),SEQN=+$P(X,"^",7)
"RTN","PSODDPR4",71,0)
ID1 I '$D(PSJDGCK) S ^TMP($J,LIST,"IN","PROFILE",ORTYP_";"_RXREC_";PROFILE;"_DO)=SEQN_"^"_ID_"^"_ODRG_"^"_DRNM_"^"_ORN_"^O" K ID
"RTN","PSODDPR4",72,0)
 I $D(PSJDGCK) S ^TMP($J,LIST,"IN","PROSPECTIVE",ORTYP_";"_RXREC_";PROSPECTIVE;"_DO)=SEQN_"^"_ID_"^"_ODRG_"^"_DRNM_"^"_ORN_"^O" K ID
"RTN","PSODDPR4",73,0)
 Q
"RTN","PSODDPR4",74,0)
OIX S ^TMP($J,LIST,"IN","EXCEPTIONS","OI",DRNM)=1_"^"_ORTYP_";"_RXREC_";PROFILE;"_DO
"RTN","PSODDPR4",75,0)
 K TU
"RTN","PSODDPR4",76,0)
 Q
"RTN","PSODDPR4",77,0)
REMOTE ;
"RTN","PSODDPR4",78,0)
 I $T(HAVEHDR^ORRDI1)']"" Q
"RTN","PSODDPR4",79,0)
 I '$$HAVEHDR^ORRDI1 Q
"RTN","PSODDPR4",80,0)
 I $D(^XTMP("ORRDI","OUTAGE INFO","DOWN")) D  Q
"RTN","PSODDPR4",81,0)
 .I $T(REMOTE^PSORX1)]"" Q
"RTN","PSODDPR4",82,0)
 .D HD^PSODDPR2():(($Y+5)'>IOSL)
"RTN","PSODDPR4",83,0)
 .W !!,"Remote data not available - Only local order checks processed.",! D HD^PSODDPR2():(($Y+5)'>IOSL)
"RTN","PSODDPR4",84,0)
 I $P($G(^XTMP("ORRDI","PSOO",PSODFN,0)),"^",3)<0 W !!,"Remote data not available - Only local order checks processed." D HD^PSODDPR2():(($Y+5)'>IOSL) Q
"RTN","PSODDPR4",85,0)
 N PSORDI,RDIINST,RDIVUID,RDIRX,RDIDNAM,RDISTA,RDISIG,RDIDAYS,RDIQTY,RDIFILL,RDIEXP,RDIISS,RDIFILL,ZI
"RTN","PSODDPR4",86,0)
 N RDIREF,RDIPHYS,PSOPROD,PSOCLASS,DRNM,RDITMP,PSODC,IT,PSOICT,NDF,RDIDI,PSOPRODA,PSOFILE,PSOSIG,PSOSEQN,X
"RTN","PSODDPR4",87,0)
 I '$G(DT) S DT=$$DT^XLFDT
"RTN","PSODDPR4",88,0)
 S PSORDI=0
"RTN","PSODDPR4",89,0)
 I $T(GET^ORRDI1)]"" S PSORDI=$$GET^ORRDI1(PSODFN,"PSOO")
"RTN","PSODDPR4",90,0)
 I PSORDI<1 Q
"RTN","PSODDPR4",91,0)
 I '$D(^XTMP("ORRDI","PSOO",PSODFN)) Q
"RTN","PSODDPR4",92,0)
 K ^TMP($J,LIST,"OUT","REMOTE")
"RTN","PSODDPR4",93,0)
 D PARSE,FILTER
"RTN","PSODDPR4",94,0)
 I '$D(^TMP($J,LIST,"OUT","REMOTE")) Q
"RTN","PSODDPR4",95,0)
 N DIC D REMO
"RTN","PSODDPR4",96,0)
 Q
"RTN","PSODDPR4",97,0)
REMO ;
"RTN","PSODDPR4",98,0)
  S (PSOON,PSORDI)=0 F  S PSORDI=$O(^TMP($J,LIST,"OUT","REMOTE",PSORDI)) Q:'PSORDI  S RDITMP=^(PSORDI) D  K PSOSEQN
"RTN","PSODDPR4",99,0)
 .Q:$P(RDITMP,"^",2)=""
"RTN","PSODDPR4",100,0)
 .;screen out dc'd remotes
"RTN","PSODDPR4",101,0)
 .I $P($G(^TMP($J,LIST,"OUT","REMOTE",PSORDI)),"^",4)["DISC" D  I $G(PSOON) K PSOON Q
"RTN","PSODDPR4",102,0)
 ..K X,Y,X1,X2
"RTN","PSODDPR4",103,0)
 ..S X=$P(^TMP($J,LIST,"OUT","REMOTE",PSORDI),"^",6) D ^%DT S X1=Y,X2=(+$P(^TMP($J,LIST,"OUT","REMOTE",PSORDI),"^",7)+7)
"RTN","PSODDPR4",104,0)
 ..D C^%DTC I X<DT S PSOON=1 K X,Y,X1,X2
"RTN","PSODDPR4",105,0)
 .;
"RTN","PSODDPR4",106,0)
 .S RDIVUID=$P(RDITMP,"^",2),RDIDNAM=$P(RDITMP,"^",3)
"RTN","PSODDPR4",107,0)
 .I $O(PDRG(0)) F ZI=0:0 S ZI=$O(PDRG(ZI)) Q:'ZI  I $P(^PSDRUG($P(PDRG(ZI),"^"),0),"^")=RDIDNAM S INDD=+$G(INDD)+1,^TMP($J,"DD",INDD,0)=$P(PDRG(ZI),"^")_"^"_RDIDNAM_"^^"_PSORDI_"Z;O"
"RTN","PSODDPR4",108,0)
 .S DO=$G(DO)+1 D GETIREF^XTID(50.68,.01,RDIVUID,"PSOSEQN",1) I 'PSOSEQN S ^TMP($J,LIST,"IN","PROFILE","R;"_PSORDI_";PROFILE;"_DO)=0_"^"_RDIVUID_"^0^"_RDIDNAM_"^^" Q
"RTN","PSODDPR4",109,0)
 .S SEQN="" S SEQN=$O(PSOSEQN(50.68,.01,SEQN)) Q:SEQN=""
"RTN","PSODDPR4",110,0)
 .S P3=+SEQN,SEQN=$P($$PROD0^PSNAPIS(,P3),"^",7)
"RTN","PSODDPR4",111,0)
 .S ^TMP($J,LIST,"IN","PROFILE","R;"_PSORDI_";PROFILE;"_DO)=SEQN_"^"_RDIVUID_"^0^"_RDIDNAM_"^^"
"RTN","PSODDPR4",112,0)
 Q
"RTN","PSODDPR4",113,0)
 ;
"RTN","PSODDPR4",114,0)
PARSE ; PULL INFORMATION FROM ^XTMP
"RTN","PSODDPR4",115,0)
 N PSORDI,LOCAL,NEWISS,BADEXP,PSOPRE,PSO30,NEWDC,NEWEXP
"RTN","PSODDPR4",116,0)
 S PSORDI=0 F  S PSORDI=$O(^XTMP("ORRDI","PSOO",PSODFN,PSORDI)) Q:'PSORDI  D
"RTN","PSODDPR4",117,0)
 .S RDISTA=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,5,0))
"RTN","PSODDPR4",118,0)
 .I RDISTA="DELETED" Q
"RTN","PSODDPR4",119,0)
 .S RDIINST=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,1,0))
"RTN","PSODDPR4",120,0)
 .S RDIDNAM=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,2,0))
"RTN","PSODDPR4",121,0)
 .S RDIVUID=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,3,0))
"RTN","PSODDPR4",122,0)
 .I RDIVUID="" Q
"RTN","PSODDPR4",123,0)
 .D GETPROD^PSOORRDI
"RTN","PSODDPR4",124,0)
 .Q:$E($G(PSOCLASS),1,2)="XA"
"RTN","PSODDPR4",125,0)
 .S RDIRX=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,4,0))
"RTN","PSODDPR4",126,0)
 .S RDIQTY=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,6,0))
"RTN","PSODDPR4",127,0)
 .S RDIDAYS=$P(RDIQTY,";",2),RDIQTY=$P(RDIQTY,";")
"RTN","PSODDPR4",128,0)
 .I $E(RDIDAYS)="D" S RDIDAYS=$P(RDIDAYS,"D",2)
"RTN","PSODDPR4",129,0)
 .S RDIEXP=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,7,0))
"RTN","PSODDPR4",130,0)
 .S RDIISS=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,8,0))
"RTN","PSODDPR4",131,0)
 .I RDIEXP?."/" S BADEXP=1 D  I BADEXP Q
"RTN","PSODDPR4",132,0)
 ..I RDIISS?."/" Q
"RTN","PSODDPR4",133,0)
 ..S PSOPRE=$E(DT) I $P(RDIISS,"/",3)>($E(DT,2,3)+1) S PSOPRE=PSOPRE-1
"RTN","PSODDPR4",134,0)
 ..S NEWISS=PSOPRE_$P(RDIISS,"/",3)_$P(RDIISS,"/")_$P(RDIISS,"/",2) I NEWISS>(DT-10000) S RDIEXP=RDIISS,BADEXP=0
"RTN","PSODDPR4",135,0)
 .I RDISTA["EXPIRE" S PSO30=0 D  I PSO30 Q
"RTN","PSODDPR4",136,0)
 ..S PSOPRE=$E(DT) I $P(RDIEXP,"/",3)>($E(DT,2,3)+1) S PSO30=1 Q
"RTN","PSODDPR4",137,0)
 ..S NEWEXP=PSOPRE_$P(RDIEXP,"/",3)_$P(RDIEXP,"/")_$P(RDIEXP,"/",2)
"RTN","PSODDPR4",138,0)
 ..S X1=NEWEXP,X2=30 D C^%DTC I X<DT S PSO30=1
"RTN","PSODDPR4",139,0)
 .I RDIRX'="" S LOCAL=0 D CHKLOCAL I LOCAL Q
"RTN","PSODDPR4",140,0)
 .S RDIFILL=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,9,0))
"RTN","PSODDPR4",141,0)
 .I RDISTA["DISCONT" S PSO30=0 D  I PSO30 Q
"RTN","PSODDPR4",142,0)
 ..S PSOPRE=$E(DT) I $P(RDIFILL,"/",3)>($E(DT,2,3)+1) S PSO30=1 Q
"RTN","PSODDPR4",143,0)
 ..S NEWDC=PSOPRE_$P(RDIFILL,"/",3)_$P(RDIFILL,"/")_$P(RDIFILL,"/",2)
"RTN","PSODDPR4",144,0)
 ..S X1=NEWDC,X2=30+RDIDAYS D C^%DTC I X<DT S PSO30=1
"RTN","PSODDPR4",145,0)
 .I RDISTA["DRUG INTERACTION" S RDISTA="NON-VERIFIED"
"RTN","PSODDPR4",146,0)
 .S RDIREF=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,10,0))
"RTN","PSODDPR4",147,0)
 .S RDIPHYS=$G(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,11,0))
"RTN","PSODDPR4",148,0)
 .S PSOSIG="" F  S PSOSIG=$O(^XTMP("ORRDI","PSOO",PSODFN,PSORDI,14,PSOSIG)) Q:PSOSIG=""  S PSOSIG(PSOSIG)=^(PSOSIG)
"RTN","PSODDPR4",149,0)
 .S ^TMP($J,LIST,"OUT","REMOTE",PSORDI)=RDIINST_"^"_RDIVUID_"^"_RDIDNAM_"^"_RDISTA_"^"_RDIRX_"^"_RDIFILL_"^"_RDIDAYS_"^"_RDIQTY_"^"_RDIREF_"^"_RDIEXP_"^"_RDIPHYS_"^"_RDIISS
"RTN","PSODDPR4",150,0)
 .S PSOSIG="" F  S PSOSIG=$O(PSOSIG(PSOSIG)) Q:PSOSIG=""  S ^TMP($J,LIST,"OUT","REMOTE",PSORDI,"SIG",PSOSIG)=PSOSIG(PSOSIG)
"RTN","PSODDPR4",151,0)
 Q
"RTN","PSODDPR4",152,0)
 ;
"RTN","PSODDPR4",153,0)
CHKLOCAL ; IF SAME RX NUMBER AND ISSUE DATE - LOCAL RX
"RTN","PSODDPR4",154,0)
 N PSOISS
"RTN","PSODDPR4",155,0)
 I $D(^PSRX("B",RDIRX)) D
"RTN","PSODDPR4",156,0)
 .N PSORX
"RTN","PSODDPR4",157,0)
 .S PSORX=$O(^PSRX("B",RDIRX,"")) I 'PSORX Q
"RTN","PSODDPR4",158,0)
 .S PSOISS=$P($G(^PSRX(PSORX,0)),"^",13)
"RTN","PSODDPR4",159,0)
 .S PSOISS=$E(PSOISS,4,5)_"/"_$E(PSOISS,6,7)_"/"_$E(PSOISS,2,3)
"RTN","PSODDPR4",160,0)
 .I PSOISS=RDIISS S LOCAL=1 Q
"RTN","PSODDPR4",161,0)
 Q
"RTN","PSODDPR4",162,0)
 ;
"RTN","PSODDPR4",163,0)
FILTER ; FOR SAME DRUG VUID FOR SAME SITE, KEEP 1 ENTRY - CHECK BY ACTIVE STATUS FIRST THEN BY GREATEST EXPIRATION DATE
"RTN","PSODDPR4",164,0)
 N XX,RDI,OLDEXP,RDIEXP,RDIEXP2,OLDEXP2,PSORDI,RDISTA,OLDSTA,OLDRDI,ZZ
"RTN","PSODDPR4",165,0)
 S PSORDI=0
"RTN","PSODDPR4",166,0)
 F  S PSORDI=$O(^TMP($J,LIST,"OUT","REMOTE",PSORDI)) Q:'PSORDI  D
"RTN","PSODDPR4",167,0)
 .S XX=$G(^TMP($J,LIST,"OUT","REMOTE",PSORDI)),RDIINST=$P(XX,"^"),RDIVUID=$P(XX,"^",2),RDISTA=$P(XX,"^",4),RDIEXP=$P(XX,"^",10) Q:RDIINST=""  Q:RDIVUID=""  I RDIEXP="" Q
"RTN","PSODDPR4",168,0)
 .I $D(RDI(RDIINST,RDIVUID)) S ZZ=RDI(RDIINST,RDIVUID) D  Q
"RTN","PSODDPR4",169,0)
 ..I RDISTA="ACTIVE"!(RDISTA["SUSPEN") D  Q
"RTN","PSODDPR4",170,0)
 ...S OLDSTA=$P(ZZ,"^",2) I OLDSTA["ACTIVE"!(OLDSTA["SUSPEN") D CHKEXP Q
"RTN","PSODDPR4",171,0)
 ...S OLDRDI=$P(ZZ,"^") K ^TMP($J,LIST,"OUT","REMOTE",OLDRDI) D SETRDI
"RTN","PSODDPR4",172,0)
 ..S OLDSTA=$P(ZZ,"^",2) I OLDSTA["ACTIVE"!(OLDSTA["SUSPEN") K ^TMP($J,LIST,"OUT","REMOTE",PSORDI) Q
"RTN","PSODDPR4",173,0)
 ..D CHKEXP ; ALL OTHER STATUSES - KEEP BY GREATER EXPIRATION DATE
"RTN","PSODDPR4",174,0)
 .D SETRDI
"RTN","PSODDPR4",175,0)
 Q
"RTN","PSODDPR4",176,0)
 ;
"RTN","PSODDPR4",177,0)
CHKEXP ; 
"RTN","PSODDPR4",178,0)
 N PSOPRE
"RTN","PSODDPR4",179,0)
 S OLDEXP=$P(ZZ,"^",3) D  I OLDEXP2>RDIEXP2 K ^TMP($J,"OUT","REMOTE",PSORDI) Q
"RTN","PSODDPR4",180,0)
 .S PSOPRE=$E(DT) I $P(RDIEXP,"/",3)>($E(DT,2,3)+1) S PSOPRE=PSOPRE-1
"RTN","PSODDPR4",181,0)
 .S RDIEXP2=PSOPRE_$P(RDIEXP,"/",3)_$P(RDIEXP,"/")_$P(RDIEXP,"/",2)
"RTN","PSODDPR4",182,0)
 .S PSOPRE=$E(DT) I $P(OLDEXP,"/",3)>($E(DT,2,3)+1) S PSOPRE=PSOPRE-1
"RTN","PSODDPR4",183,0)
 .S OLDEXP2=PSOPRE_$P(OLDEXP,"/",3)_$P(OLDEXP,"/")_$P(OLDEXP,"/",2)
"RTN","PSODDPR4",184,0)
 S OLDRDI=$P(ZZ,"^") K ^TMP($J,LIST,"OUT","REMOTE",OLDRDI) D SETRDI
"RTN","PSODDPR4",185,0)
 Q
"RTN","PSODDPR4",186,0)
 ;
"RTN","PSODDPR4",187,0)
SETRDI ;
"RTN","PSODDPR4",188,0)
 S RDI(RDIINST,RDIVUID)=PSORDI_"^"_RDISTA_"^"_RDIEXP
"RTN","PSODDPR4",189,0)
 Q
"RTN","PSODDPR4",190,0)
CPRS(PSODFN,LIST,PDRG,PTY) ;
"RTN","PSODDPR4",191,0)
 ;PDRG - Drug array in format of PDRG(n)=IEN (#50) ^ Drug name
"RTN","PSODDPR4",192,0)
 ;PTY - P1;P2 where P1="I" for IP & "O" for OP (required), P2=Pharm order# (optional)
"RTN","PSODDPR4",193,0)
 I '$G(PSODFN) W !,"Patient UNDEFINED!",! Q
"RTN","PSODDPR4",194,0)
 I '$O(PDRG(0)) W !,"Dispense Drug(s) UNDEFINED!",! Q
"RTN","PSODDPR4",195,0)
 I '$D(LIST) W !,"Input Base UNDEFINED!",! Q
"RTN","PSODDPR4",196,0)
 S ^TMP($J,LIST,"IN","PING")="" D IN^PSSHRQ2(LIST) I $P(^TMP($J,LIST,"OUT",0),"^")=-1 Q
"RTN","PSODDPR4",197,0)
 K ^TMP($J,"ORDERS"),^TMP($J,"DD"),^TMP($J,LIST) N ZII,INDX,INDD,PSODUPSP,PSODUPSY,PSODUPLS,PSOFRMOR,PSOSUPNN S (INDX,INDD)=0,PSODUPSY=$G(PTY),PSODUPLS=LIST,PSOFRMOR=1
"RTN","PSODDPR4",198,0)
 ;build patient's drug profile outpat/inpat/non-va
"RTN","PSODDPR4",199,0)
 D BLD^PSOORDRG,ENCHK^PSJORUT2(PSODFN,.INDX),NVA^PSOORDRG
"RTN","PSODDPR4",200,0)
 ;dup drug check CPRS ONLY
"RTN","PSODDPR4",201,0)
 S PSOICT="",CNT=0 F ZII=0:0 S ZII=$O(PDRG(ZII)) Q:'ZII  D:$$SUP^PSSDSAPI(+$P(PDRG(ZII),"^"))
"RTN","PSODDPR4",202,0)
 .S PSOY=$P(PDRG(ZII),"^")_"^"_$P($G(^PSDRUG($P(PDRG(ZII),"^"),0)),"^"),PSOY(0)=$G(^PSDRUG(PDRG(ZII),0)),PSOSUPNN=$P(PDRG(ZII),"^",4)
"RTN","PSODDPR4",203,0)
 .S IEN=+PSOY,NAME=$P(PSOY,"^",2),DNM=0 K PSOX1,PSOY
"RTN","PSODDPR4",204,0)
 .F  S DNM=$O(^TMP($J,"ORDERS",DNM)) Q:'DNM  I NAME=$P(^TMP($J,"ORDERS",DNM),"^",3) D
"RTN","PSODDPR4",205,0)
 ..S INDD=$G(INDD)+1,^TMP($J,"DD",INDD,0)=IEN_"^"_NAME_"^"_$P(^TMP($J,"ORDERS",DNM),"^",4)_"^"_$P(^(DNM),"^",5),PSODUPSP(IEN,$S(PSOSUPNN:PSOSUPNN,1:"ACCEPT"))=PSODUPSY,PSODUPSP(IEN,"NAME")=NAME
"RTN","PSODDPR4",206,0)
 K ^TMP($J,"ORDERS")
"RTN","PSODDPR4",207,0)
 D ORD
"RTN","PSODDPR4",208,0)
 Q
"RTN","PSODDPR4",209,0)
DRG ;
"RTN","PSODDPR4",210,0)
 I $$SUP^PSSDSAPI(IEN) Q
"RTN","PSODDPR4",211,0)
 N ID,SEQN S PSODRUG("NDF")=$S($G(^PSDRUG(IEN,"ND"))]"":+^("ND")_"A"_$P(^("ND"),"^",3),1:0)
"RTN","PSODDPR4",212,0)
 S ID=$$GETVUID^XTID(50.68,,+$P($G(PSODRUG("NDF")),"A",2)_",")
"RTN","PSODDPR4",213,0)
 S P1=$P($G(^PSDRUG(IEN,"ND")),"^"),P2=$P($G(^("ND")),"^",3),X=$$PROD0^PSNAPIS(P1,P2),SEQN=$P(X,"^",7)
"RTN","PSODDPR4",214,0)
 I '$D(PSJDGCK) S CNT=$G(CNT)+1,^TMP($J,LIST,"IN","PROSPECTIVE",$P(PTY,";")_";"_$P(PTY,";",2)_";PROSPECTIVE;"_CNT)=SEQN_"^"_+ID_"^"_IEN_"^"_NAME_$S($G(PSOFRMOR):"^"_PSOFRMNM,1:"")
"RTN","PSODDPR4",215,0)
 I $D(PSJDGCK),'$D(PSGDGCKF) S CNT=$G(CNT)+1,^TMP($J,LIST,"IN","PROSPECTIVE",$P(PTY,";")_";"_$P(PTY,";",2)_";PROSPECTIVE;"_CNT)=SEQN_"^"_+ID_"^"_IEN_"^"_NAME
"RTN","PSODDPR4",216,0)
 K ID,SEQN,P1,P2,X,DNM
"RTN","PSODDPR4",217,0)
 Q
"RTN","PSODDPR4",218,0)
 ;
"RTN","PSODDPR4",219,0)
DRGSUP ;Create "prospective" nodes for duplicate supply entries 
"RTN","PSODDPR4",220,0)
 N PSODPSID,PSODPSQN,PSODPSP1,PSODPSP2,PSODPSP3,PSODPSXX,PSODPSLP,PSODPSNF,PSODPSCT,PSODPSC1,PSODPSNM,PSODPSOR
"RTN","PSODDPR4",221,0)
 S PSODPSCT=0
"RTN","PSODDPR4",222,0)
 S PSODPSC1="" F  S PSODPSC1=$O(^TMP($J,PSODUPLS,"IN","PROSPECTIVE",PSODPSC1)) Q:PSODPSC1=""  S PSODPSP3=$P(PSODPSC1,";",4) I PSODPSP3>PSODPSCT S PSODPSCT=PSODPSP3
"RTN","PSODDPR4",223,0)
 S PSODPSLP="" F  S PSODPSLP=$O(PSODUPSP(PSODPSLP)) Q:PSODPSLP=""  D
"RTN","PSODDPR4",224,0)
 .S PSODPSOR="" F  S PSODPSOR=$O(PSODUPSP(PSODPSLP,PSODPSOR)) Q:PSODPSOR=""  D:PSODPSOR'="NAME"
"RTN","PSODDPR4",225,0)
 ..S PSODPSNM=$G(PSODUPSP(PSODPSLP,"NAME"))
"RTN","PSODDPR4",226,0)
 ..S PSODPSNF=$S($G(^PSDRUG(PSODPSLP,"ND"))]"":+^PSDRUG(PSODPSLP,"ND")_"A"_$P(^PSDRUG(PSODPSLP,"ND"),"^",3),1:0)
"RTN","PSODDPR4",227,0)
 ..S PSODPSID=$$GETVUID^XTID(50.68,,+$P($G(PSODPSNF),"A",2)_",")
"RTN","PSODDPR4",228,0)
 ..S PSODPSP1=$P($G(^PSDRUG(PSODPSLP,"ND")),"^"),PSODPSP2=$P($G(^PSDRUG(PSODPSLP,"ND")),"^",3),PSODPSXX=$$PROD0^PSNAPIS(PSODPSP1,PSODPSP2),PSODPSQN=$P(PSODPSXX,"^",7)
"RTN","PSODDPR4",229,0)
 ..S PSODPSCT=$G(PSODPSCT)+1,^TMP($J,PSODUPLS,"IN","PROSPECTIVE",$P(PSODUPSY,";")_";"_$P(PSODUPSY,";",2)_";PROSPECTIVE;"_PSODPSCT)=PSODPSQN_"^"_+PSODPSID_"^"_PSODPSLP_"^"_$G(PSODPSNM)_$S(PSODPSOR="ACCEPT":"",1:"^"_PSODPSOR)
"RTN","PSODDPR4",230,0)
 Q
"RTN","PSODDPR4",231,0)
 ;
"RTN","PSODDPR4",232,0)
RVAGEN ;va generic for remote drugs
"RTN","PSODDPR4",233,0)
 N PSOVUID,PSONDF,PSOVAG,DIC
"RTN","PSODDPR4",234,0)
 S PSOVUID=$P(^TMP($J,"PSOPEPS","OUT","REMOTE",$P(ON,";",2)),"^",2) Q:'$G(PSOVUID)
"RTN","PSODDPR4",235,0)
 K PSORDIID S PSOVAGEN="" D GETIREF^XTID("50.68",".01",PSOVUID,"PSORDIID")
"RTN","PSODDPR4",236,0)
 S PSONDF=$O(PSORDIID(50.68,.01,"")) K PSORDIID
"RTN","PSODDPR4",237,0)
 I +PSONDF D DATA^PSN50P68(+PSONDF,,"PSONDF") D
"RTN","PSODDPR4",238,0)
 .S PSOVAG=$P($G(^TMP($J,"PSONDF",+PSONDF,.05)),U,2) ;*484
"RTN","PSODDPR4",239,0)
 .N ZOT ;*484
"RTN","PSODDPR4",240,0)
 .S ZOT=$S($P(ON,";")["C":1,$P(ON,";")="O":2,$P(ON,";")="R":3,$P(ON,";")="P":4,1:5) ;*484
"RTN","PSODDPR4",241,0)
 .S ZDGDG(SV,ZOT,PSOVAG,DRG)=ON_"^"_CT,ZZDGDG3(SV,PSOVAG,DRG)="" ;*484
"RTN","PSODDPR4",242,0)
 .I '$D(NSRT(SV,PSOVAG)) S NSRT(SV,PSOVAG)=3
"RTN","PSODDPR4",243,0)
 .E  S $P(NSRT(SV,PSOVAG),"^",1)=$P(NSRT(SV,PSOVAG),"^",1)_",3"
"RTN","PSODDPR4",244,0)
 K ^TMP($J,"PSONDF")
"RTN","PSODDPR4",245,0)
 Q
"RTN","PSODDPRE")
0^3^B140358905
"RTN","PSODDPRE",1,0)
PSODDPRE ; BIR/SAB - Enhanced OP order checks ;09/20/06 3:38pm
"RTN","PSODDPRE",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**251,375,387,379,390,372,416,411,518**;DEC 1997;Build 3
"RTN","PSODDPRE",3,0)
 ;External reference to PSOL^PSSLOCK supported by DBIA 2789
"RTN","PSODDPRE",4,0)
 ;External reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSODDPRE",5,0)
 ;External reference to ^PSSDSAPM supported by DBIA 5570
"RTN","PSODDPRE",6,0)
 ;External reference to ^PSSHRQ2 supported by DBIA 5369
"RTN","PSODDPRE",7,0)
 ;External reference to ^PS(50.7 supported by DBIA 2223
"RTN","PSODDPRE",8,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSODDPRE",9,0)
 ;External reference to ^PSDRUG( supported by DBIA 4846
"RTN","PSODDPRE",10,0)
 ;External reference to ^PS(50.606 supported by DBIA 2174
"RTN","PSODDPRE",11,0)
 ;External reference to $$SUP^PSSDSAPI supported by DBIA 5425
"RTN","PSODDPRE",12,0)
 ;External reference to ^PSSDIUTL supported by DBIA 5737
"RTN","PSODDPRE",13,0)
 ;
"RTN","PSODDPRE",14,0)
 W @IOF
"RTN","PSODDPRE",15,0)
 K IT,^TMP("PSORXDC",$J),^TMP("PSORXDD",$J),CLS,^TMP($J,"PSONVADD"),^TMP($J,"PSONRVADD"),^TMP($J,"PSORDI"),^TMP($J,"PSORMDD")
"RTN","PSODDPRE",16,0)
 N PSONULN,PSODLQT,ZZPSODRG S LIST="PSOPEPS",$P(PSONULN,"-",79)="-",(STA,DNM)=""
"RTN","PSODDPRE",17,0)
 D HD^PSODDPR2():(($Y+5)>IOSL) Q:$G(PSODLQT)
"RTN","PSODDPRE",18,0)
 F  S STA=$O(PSOSD(STA)) Q:STA=""  F  S DNM=$O(PSOSD(STA,DNM)) Q:DNM=""!$G(PSORX("DFLG"))  I $P(PSOSD(STA,DNM),"^")'=$G(PSORENW("OIRXN")) D  Q:$G(PSORX("DFLG"))
"RTN","PSODDPRE",19,0)
 .I STA="PENDING" D ^PSODDPR1 Q
"RTN","PSODDPRE",20,0)
 .I STA="ZNONVA" D NVA^PSODDPR1 Q
"RTN","PSODDPRE",21,0)
 .D:PSODRUG("NAME")=$P(DNM,"^")&('$D(^XUSEC("PSORPH",DUZ)))  Q:$G(PSORX("DFLG"))
"RTN","PSODDPRE",22,0)
 ..I '$P(PSOPAR,"^",2),'$P(PSOPAR,"^",16) D DUP I $G(PSOTECCK) S PSORX("DFLG")=1 Q
"RTN","PSODDPRE",23,0)
 ..I '$P(PSOPAR,"^",2),$P(PSOPAR,"^",16),$G(PSOTECCK) D DUP Q
"RTN","PSODDPRE",24,0)
 ..I $P(PSOPAR,"^",2),$G(PSOTECCK) D  Q
"RTN","PSODDPRE",25,0)
 ...S DA=+PSOSD(STA,DNM),PSOCLC=DUZ
"RTN","PSODDPRE",26,0)
 ...S MSG="Discontinued During Reinstating Prescription Entry",ACT="Discontinued during Rx Reinstate."
"RTN","PSODDPRE",27,0)
 ...S ^TMP("PSORXDC",$J,DA,0)="52^"_DA_"^"_MSG_"^C^"_ACT_"^"_STA_"^"_DNM,PSONOOR="D",^TMP("PSORXDD",$J)=DNM
"RTN","PSODDPRE",28,0)
 ..I $P($G(PSOPAR),"^",16) D DUP Q
"RTN","PSODDPRE",29,0)
 ..I $P(PSOPAR,"^",2),'$P(PSOPAR,"^",16) D DUP S PSORX("DFLG")=1 Q
"RTN","PSODDPRE",30,0)
 .D:PSODRUG("NAME")=$P(DNM,"^")&($D(^XUSEC("PSORPH",DUZ))) DUP
"RTN","PSODDPRE",31,0)
 K ^TMP($J,"DD"),^TMP($J,"DC"),^TMP($J,"DI"),^TMP($J,"PSODRDI")
"RTN","PSODDPRE",32,0)
 Q:$G(PSORX("DFLG"))
"RTN","PSODDPRE",33,0)
 M ZZPSODRG=PSODRUG
"RTN","PSODDPRE",34,0)
 S LIST="PSOPEPS" D REMOTE^PSOCPPRE
"RTN","PSODDPRE",35,0)
 M PSODRUG=ZZPSODRG
"RTN","PSODDPRE",36,0)
 Q
"RTN","PSODDPRE",37,0)
OBX  ;process enhanced order checks
"RTN","PSODDPRE",38,0)
 Q:$G(PSOQUIT)!($G(PSORX("DFLG")))
"RTN","PSODDPRE",39,0)
 K ZDGDG,ZTHER,IT
"RTN","PSODDPRE",40,0)
 S LIST="PSOPEPS" K PSODLQT,DTOUT,DUOUT,DIRUT,PSODOSD
"RTN","PSODDPRE",41,0)
 I $P(^TMP($J,LIST,"OUT",0),"^")=-1 G EXIT
"RTN","PSODDPRE",42,0)
 W !,"Now Processing Enhanced Order Checks!  Please wait...",! H 2
"RTN","PSODDPRE",43,0)
 D FDB S PDRG=PSODRUG("IEN"),DO=0 D IN^PSSHRQ2(LIST)    ;call 2 fdb
"RTN","PSODDPRE",44,0)
 ;
"RTN","PSODDPRE",45,0)
 K DIR
"RTN","PSODDPRE",46,0)
 I $P(^TMP($J,LIST,"OUT",0),"^")=-1 D DATACK G EXIT
"RTN","PSODDPRE",47,0)
 I '$D(PSODGCK) D ^PSODDPR2 ;if order checks returned
"RTN","PSODDPRE",48,0)
 I $D(PSODGCK) D PROC^PSSDIUTL Q  ;if running DX option
"RTN","PSODDPRE",49,0)
 I '$G(PSOCOPY)&('$G(PSORENW)),$G(PSOQUIT) D
"RTN","PSODDPRE",50,0)
 .I $G(PSOREINS) Q:$G(PSODLQT)  S PSORX("DFLG")=1
"RTN","PSODDPRE",51,0)
 ;
"RTN","PSODDPRE",52,0)
EXIT ;
"RTN","PSODDPRE",53,0)
 D ^PSOBUILD
"RTN","PSODDPRE",54,0)
 K CAN,DA,DIR,DNM,DUPRX0,ISSD,J,LSTFL,MSG,PHYS,PSOCLC,PSONULN,REA,RFLS,RX0,RX2,RXN,RXREC,ST,Y,ZZ,ACT,PSOCLOZ,PSOLR,PSOLDT,PSOCD,SIG
"RTN","PSODDPRE",55,0)
 K DO,PDRG,IT,PSODLQT,PSOTSTMD
"RTN","PSODDPRE",56,0)
 K ^TMP($J,LIST,"IN","PING"),^TMP($J,LIST,"OUT","EXCEPTIONS"),^TMP($J,"PSOPEPS"),^TMP($J,"PSORDI")
"RTN","PSODDPRE",57,0)
 Q
"RTN","PSODDPRE",58,0)
DUP S:$P(PSOSD(STA,DNM),"^",2)<10!($P(PSOSD(STA,DNM),"^",2)=16) DUP=1 W !,PSONULN,!,$C(7),"Duplicate Drug in Local Rx:",!
"RTN","PSODDPRE",59,0)
 S RXREC=+PSOSD(STA,DNM),MSG="Discontinued During "_$S('$G(PSONV):"New Prescription Entry",1:"Verification")_" - Duplicate Drug"
"RTN","PSODDPRE",60,0)
DATA S DUPRX0=^PSRX(RXREC,0),RFLS=$P(DUPRX0,"^",9),ISSD=$P(^PSRX(RXREC,0),"^",13),RX0=DUPRX0,RX2=^PSRX(RXREC,2),$P(RX0,"^",15)=+$G(^PSRX(RXREC,"STA"))
"RTN","PSODDPRE",61,0)
 S RXRECLOC=$G(RXREC)
"RTN","PSODDPRE",62,0)
 S DA=RXREC
"RTN","PSODDPRE",63,0)
 D HD^PSODDPR2():(($Y+5)>IOSL) Q:$G(PSODLQT)
"RTN","PSODDPRE",64,0)
 W !,$J("Rx: ",24)_$P(^PSRX(+PSOSD(STA,DNM),0),"^")
"RTN","PSODDPRE",65,0)
 W !,$J("Drug: ",24)_$P(DNM,"^")
"RTN","PSODDPRE",66,0)
 K FSIG,BSIG I $P($G(^PSRX(RXREC,"SIG")),"^",2) D FSIG^PSOUTLA("R",RXREC,54) F PSREV=1:1 Q:'$D(FSIG(PSREV))  S BSIG(PSREV)=FSIG(PSREV)
"RTN","PSODDPRE",67,0)
 K FSIG,PSREV I '$P($G(^PSRX(RXREC,"SIG")),"^",2) D EN2^PSOUTLA1(RXREC,54)
"RTN","PSODDPRE",68,0)
 W !,$J("SIG: ",24) W $G(BSIG(1))
"RTN","PSODDPRE",69,0)
 I $O(BSIG(1)) F PSREV=1:0 S PSREV=$O(BSIG(PSREV)) Q:'PSREV  W !?24,$G(BSIG(PSREV))
"RTN","PSODDPRE",70,0)
 K BSIG,PSREV
"RTN","PSODDPRE",71,0)
 D HD^PSODDPR2():(($Y+5)>IOSL) Q:$G(PSODLQT)
"RTN","PSODDPRE",72,0)
 W !,$J("QTY: ",24)_$P(DUPRX0,"^",7),?42,$J("Refills remaining: ",24),RFLS-$S($D(^PSRX(RXREC,1,0)):$P(^(0),"^",4),1:0)
"RTN","PSODDPRE",73,0)
 S PHYS=$S($D(^VA(200,+$P(DUPRX0,"^",4),0)):$P(^(0),"^"),1:"UNKNOWN")
"RTN","PSODDPRE",74,0)
 W !,$J("Provider: ",24)_PHYS,?42,$J("Issued: ",24),$E(ISSD,4,5)_"/"_$E(ISSD,6,7)_"/"_$E(ISSD,2,3)
"RTN","PSODDPRE",75,0)
 W !,$J("Status: ",24) S J=RXREC D STAT^PSOFUNC W ST K RX0,RX2
"RTN","PSODDPRE",76,0)
 S LSTFL=+^PSRX(RXREC,3) W ?42,$J("Last filled: ",24)_$E(LSTFL,4,5)_"/"_$E(LSTFL,6,7)_"/"_$E(LSTFL,2,3)
"RTN","PSODDPRE",77,0)
 D PRSTAT(RXREC)
"RTN","PSODDPRE",78,0)
 W !?42,$J("Days Supply: ",24)_$P(DUPRX0,"^",8)
"RTN","PSODDPRE",79,0)
 W !,PSONULN,! I $P($G(^PS(53,+$P($G(PSORX("PATIENT STATUS")),"^"),0)),"^")["AUTH ABS"!($G(PSORX("PATIENT STATUS"))["AUTH ABS")&'$P(PSOPAR,"^",5) W !,"PATIENT ON AUTHORIZED ABSENCE!" K RXRECLOC Q
"RTN","PSODDPRE",80,0)
ASKCAN I $P(PSOSD(STA,DNM),"^",2)>10,$P(PSOSD(STA,DNM),"^",2)'=16 D  Q  ;PSO*7*411 to comment
"RTN","PSODDPRE",81,0)
 .K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to continue"
"RTN","PSODDPRE",82,0)
 .D ^DIR S:($D(DTOUT))!($D(DUOUT)) (PSODLQT,PSORX("DFLG"))=1 K DIR,DTOUT,DUOUT,DIRUT,RXRECLOC W @IOF
"RTN","PSODDPRE",83,0)
 .S ^TMP("PSORXDD",$J,RXREC,0)=1
"RTN","PSODDPRE",84,0)
 ;
"RTN","PSODDPRE",85,0)
 I '$P(PSOPAR,"^",16),'$D(^XUSEC("PSORPH",DUZ)) D  Q
"RTN","PSODDPRE",86,0)
 .S PSORX("DFLG")=1 K RXRECLOC,DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to continue"
"RTN","PSODDPRE",87,0)
 .D ^DIR K DIR
"RTN","PSODDPRE",88,0)
 I $P(PSOSD(STA,DNM),"^",2)=16,$G(DUP) D  Q
"RTN","PSODDPRE",89,0)
 .W !!,"Prescription "_$P($G(^PSRX(+$G(RXRECLOC),0)),"^")_" is on Provider Hold, it cannot be discontinued.",!
"RTN","PSODDPRE",90,0)
 .K DUP,DIR,RXRECLOC S PSORX("DFLG")=1 S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSODDPRE",91,0)
 D PSOL^PSSLOCK(RXRECLOC) I '$G(PSOMSG) D  K PSOMSG,DIR,DUP,RXRECLOC S DIR("A")="Press Return to continue",DIR(0)="E",DIR("?")="Press Return to continue" D ^DIR K DIR S PSORX("DFLG")=1 Q
"RTN","PSODDPRE",92,0)
 .I $P($G(PSOMSG),"^",2)'="" W !!,$P(PSOMSG,"^",2),! Q
"RTN","PSODDPRE",93,0)
 .W !!,"Another person is editing Rx "_$P($G(^PSRX(RXRECLOC,0)),"^"),!
"RTN","PSODDPRE",94,0)
 I $D(PSODGCK) K RXRECLOC,DUP,CLS,PSONOOR Q
"RTN","PSODDPRE",95,0)
 K PSOMSG S DIR("A")=$S($P(PSOSD(STA,DNM),"^",2)=12:"Reinstate",1:"Discontinue")_" RX # "_$P(^PSRX(+PSOSD(STA,DNM),0),"^")_" "_$P(DNM,"^")_" Y/N",DIR(0)="Y"
"RTN","PSODDPRE",96,0)
 S DIR("?")="Enter Y to "_$S($P(PSOSD(STA,DNM),"^",2)=12:"reinstate",1:"discontinue")_" this RX."
"RTN","PSODDPRE",97,0)
 D ^DIR K DIR S DA=RXREC S ACT=$S($D(SPCANC):"Reinstated during Rx cancel.",1:$S($P(PSOSD(STA,DNM),"^",2)=12:"Reinstated",1:"Discontinued")_" while "_$S('$G(PSONV):"entering",1:"verifying")_" new RX")
"RTN","PSODDPRE",98,0)
 D CMOP^PSOUTL I $G(CMOP("S"))="L" W !,"A CMOP Rx cannot be discontinued during transmission!",! S Y=0 K CMOP
"RTN","PSODDPRE",99,0)
 I 'Y W !,$C(7)," -Prescription was not "_$S($P(PSOSD(STA,DNM),"^",2)=12:"reinstated",1:"discontinued")_"..." D  Q
"RTN","PSODDPRE",100,0)
 .S:'$D(PSOCLC) PSOCLC=DUZ S MSG=ACT,REA=$S($P(PSOSD(STA,DNM),"^",2)=12:"R",1:"C") S:$G(DUP) PSORX("DFLG")=1 K DUP D ULRX K RXRECLOC
"RTN","PSODDPRE",101,0)
 .K ^TMP("PSORXDC",$J,RXREC,0)
"RTN","PSODDPRE",102,0)
 I $P(PSOSD(STA,DNM),"^",2)=16,$G(CLS) W !!,"Prescription "_$P($G(^PSRX(+$G(RXRECLOC),0)),"^")_" is on Provider Hold, it cannot be discontinued.",! D ULRX K CLS,DUP,RXRECLOC S PSORX("DFLG")=1 H 2 Q
"RTN","PSODDPRE",103,0)
 S PSOCLC=DUZ,MSG=$S($G(MSG)]"":MSG,1:ACT_" During New RX "_$S('$G(PSONV):"Entry",1:"Verification")_" - Duplicate Rx"),REA=$S($P(PSOSD(STA,DNM),"^",2)=12:"R",1:"C")
"RTN","PSODDPRE",104,0)
 W !! K ^UTILITY($J,"W") S DIWL=1,DIWR=75,DIWF=""
"RTN","PSODDPRE",105,0)
 S X="Rx #"_$P(^PSRX(+PSOSD(STA,DNM),0),"^")_" "_DNM_" will be discontinued after"_$S('$G(PSOTECCK):" the acceptance of the new order.",1:" reinstating the order.") D ^DIWP
"RTN","PSODDPRE",106,0)
 N ZX F ZX=0:0 S ZX=$O(^UTILITY($J,"W",1,ZX)) Q:'ZX  W !,^UTILITY($J,"W",1,ZX,0)
"RTN","PSODDPRE",107,0)
 K ^UTILITY($J,"W"),X,DIWL,DIWR,DIWF W !
"RTN","PSODDPRE",108,0)
 S ^TMP("PSORXDC",$J,RXREC,0)="52^"_DA_"^"_MSG_"^"_REA_"^"_ACT_"^"_STA_"^"_DNM,PSONOOR="D",^TMP("PSORXDD",$J)=DNM H 2
"RTN","PSODDPRE",109,0)
 K RXRECLOC,DUP,CLS,PSONOOR
"RTN","PSODDPRE",110,0)
 Q
"RTN","PSODDPRE",111,0)
FDB ;build drug check input
"RTN","PSODDPRE",112,0)
 N ID,ORTYP,PSOI,ORN S DFN=PSODFN,CT=0
"RTN","PSODDPRE",113,0)
 S ID=+$$GETVUID^XTID(50.68,,+$P(PSODRUG("NDF"),"A",2)_",")
"RTN","PSODDPRE",114,0)
 S P1=$P(PSODRUG("NDF"),"A"),P2=$P(PSODRUG("NDF"),"A",2),X=$$PROD0^PSNAPIS(P1,P2),SEQN=+$P(X,"^",7)
"RTN","PSODDPRE",115,0)
 I 'SEQN K ^TMP($J,LIST,"OUT","EXCEPTIONS")
"RTN","PSODDPRE",116,0)
 S ^TMP($J,LIST,"IN","PROSPECTIVE","Z;1;PROSPECTIVE;1")=SEQN_"^"_ID_"^"_PSODRUG("IEN")_"^"_$P(^PSDRUG(PSODRUG("IEN"),0),"^")
"RTN","PSODDPRE",117,0)
 I $G(PSODGCKX) K ^TMP($J,LIST,"IN","PROSPECTIVE","Z;1;PROSPECTIVE;1")
"RTN","PSODDPRE",118,0)
 S ^TMP($J,LIST,"IN","IEN")=PSODFN,^TMP($J,LIST,"IN","DRUGDRUG")="",^TMP($J,LIST,"IN","THERAPY")=""
"RTN","PSODDPRE",119,0)
 K ID,P1,P2 N ODRG,TU S (STA,DNM)="" I '$G(PSOCOPY),'$G(SEQN),'$G(PSODGCK) K SEQN Q
"RTN","PSODDPRE",120,0)
 ;build profile drug order checks
"RTN","PSODDPRE",121,0)
 F  S STA=$O(PSOSD(STA)) Q:STA=""  F  S DNM=$O(PSOSD(STA,DNM)) Q:DNM=""   D
"RTN","PSODDPRE",122,0)
 .Q:$P(PSOSD(STA,DNM),"^")=$G(PSORENW("OIRXN"))&('$G(PSOCOPY))
"RTN","PSODDPRE",123,0)
 .S CT=CT+1
"RTN","PSODDPRE",124,0)
 .I STA="PENDING" N DDRG D
"RTN","PSODDPRE",125,0)
 ..Q:$G(^TMP("PSORXDC",$J,$P(PSOSD(STA,DNM),"^",10),0))]""
"RTN","PSODDPRE",126,0)
 ..Q:$G(PSODRUG("IEN"))=$P(^PS(52.41,$P(PSOSD(STA,DNM),"^",10),0),"^",9)
"RTN","PSODDPRE",127,0)
 ..Q:$P(^PS(52.41,$P(PSOSD(STA,DNM),"^",10),0),"^",3)="RF"
"RTN","PSODDPRE",128,0)
 ..Q:$G(^TMP("PSORXPO",$J,$P(PSOSD(STA,DNM),"^",10),0))
"RTN","PSODDPRE",129,0)
 ..S RXREC=$P(PSOSD(STA,DNM),"^",10),ORN=$P(^PS(52.41,RXREC,0),"^"),ODRG=$P(^(0),"^",9),ORTYP="P"
"RTN","PSODDPRE",130,0)
 ..I ODRG D  K ODRG Q
"RTN","PSODDPRE",131,0)
 ...I $P($G(^PSDRUG(ODRG,0)),"^",3)["S"!($E($P($G(^PSDRUG(ODRG,0)),"^",2),1,2)="XA") Q 
"RTN","PSODDPRE",132,0)
 ...S PDNM=$P(^PSDRUG(ODRG,0),"^") D ID
"RTN","PSODDPRE",133,0)
 ..E  N PSOI,DDRG,ODRG,SEQN,DDRG S PSOI=$P(^PS(52.41,RXREC,0),"^",8) D
"RTN","PSODDPRE",134,0)
 ...S PDNM=$P(^PS(50.7,PSOI,0),"^")_" "_$P(^PS(50.606,$P(^(0),"^",2),0),"^")
"RTN","PSODDPRE",135,0)
 ...S DDRG=$$DRG^PSSDSAPM(PSOI,"O") I '$P(DDRG,";") D:'$$NVATST(PSOI,"O") OIX Q
"RTN","PSODDPRE",136,0)
 ...I $P($G(^PSDRUG($P(DDRG,";"),0)),"^",3)["S"!($E($P($G(^PSDRUG($P(DDRG,";"),0)),"^",2),1,2)="XA") Q
"RTN","PSODDPRE",137,0)
 ...S ODRG=$P(DDRG,";"),SEQN=+$P(DDRG,";",3) K PSOI
"RTN","PSODDPRE",138,0)
 ...N ID S ID=+$$GETVUID^XTID(50.68,,+$P($G(^PSDRUG(ODRG,"ND")),"^",3)_",")
"RTN","PSODDPRE",139,0)
 ...D ID1
"RTN","PSODDPRE",140,0)
 .I STA="ZNONVA" D  Q
"RTN","PSODDPRE",141,0)
 ..Q:$G(^TMP($J,"PSONVADD",$P(PSOSD(STA,DNM),"^",10),0))]""
"RTN","PSODDPRE",142,0)
 ..S RXREC=$P(PSOSD(STA,DNM),"^",10),ODRG=$P(^PS(55,PSODFN,"NVA",RXREC,0),"^",2),ORN=$P(^(0),"^",8),ORTYP="N"
"RTN","PSODDPRE",143,0)
 ..I ODRG D  K ODRG Q
"RTN","PSODDPRE",144,0)
 ...I $P($G(^PSDRUG(ODRG,0)),"^",3)["S"!($E($P($G(^PSDRUG(ODRG,0)),"^",2),1,2)="XA") Q
"RTN","PSODDPRE",145,0)
 ...S PDNM=$P(^PSDRUG(ODRG,0),"^") S:CT=1&($G(PSODGCK))&('$G(PSODGCKX)) CT=2 D ID  ;CT=2 prevents overwrite of CK action drug prompt reply
"RTN","PSODDPRE",146,0)
 ..E  N PSOI,DDRG,ODRG,SEQN,DDRG S PSOI=$P(^PS(55,PSODFN,"NVA",RXREC,0),"^") D
"RTN","PSODDPRE",147,0)
 ...S PDNM=$P(^PS(50.7,PSOI,0),"^")_" "_$P(^PS(50.606,$P(^(0),"^",2),0),"^")
"RTN","PSODDPRE",148,0)
 ...S DDRG=$$DRG^PSSDSAPM(PSOI,"X") I '$P(DDRG,";") D:'$$NVATST(PSOI,"X") OIX Q
"RTN","PSODDPRE",149,0)
 ...I $P($G(^PSDRUG($P(DDRG,";"),0)),"^",3)["S"!($E($P($G(^PSDRUG($P(DDRG,";"),0)),"^",2),1,2)="XA") Q
"RTN","PSODDPRE",150,0)
 ...S ODRG=$P(DDRG,";"),SEQN=+$P(DDRG,";",3) K PSOI
"RTN","PSODDPRE",151,0)
 ...N ID S ID=+$$GETVUID^XTID(50.68,,+$P($G(^PSDRUG(ODRG,"ND")),"^",3)_",")
"RTN","PSODDPRE",152,0)
 ...I CT=1,$G(PSODGCK),'$G(PSODGCKX) S CT=2  ;prevents overwrite of CK action drug prompt reply
"RTN","PSODDPRE",153,0)
 ...D ID1
"RTN","PSODDPRE",154,0)
 .I $P($G(^PSRX(+PSOSD(STA,DNM),0)),"^",6) D
"RTN","PSODDPRE",155,0)
 ..Q:$G(^TMP("PSORXDC",$J,$P(PSOSD(STA,DNM),"^"),0))]""
"RTN","PSODDPRE",156,0)
 ..Q:$G(^TMP("PSORXBO",$J,$P(PSOSD(STA,DNM),"^"),0))
"RTN","PSODDPRE",157,0)
 ..Q:$G(^TMP("PSORXDD",$J,$P(PSOSD(STA,DNM),"^"),0))
"RTN","PSODDPRE",158,0)
 ..;I $P(PSOSD(STA,DNM),"^",2)>5,$P(PSOSD(STA,DNM),"^",2)'=16 Q
"RTN","PSODDPRE",159,0)
 ..S RXREC=+PSOSD(STA,DNM),ODRG=$P(^PSRX(RXREC,0),"^",6),ORN=$P($G(^("OR1")),"^",2),ORTYP="O"
"RTN","PSODDPRE",160,0)
 ..I ODRG D
"RTN","PSODDPRE",161,0)
 ...I $P($G(^PSDRUG(ODRG,0)),"^",3)["S"!($E($P($G(^PSDRUG(ODRG,0)),"^",2),1,2)="XA") Q
"RTN","PSODDPRE",162,0)
 ...I STA="DISCONTINUED" Q:$$DUPTHER(RXREC)
"RTN","PSODDPRE",163,0)
 ...S PDNM=$P(^PSDRUG(ODRG,0),"^") D ID
"RTN","PSODDPRE",164,0)
 D IMO^PSODDPR7(PSODFN)
"RTN","PSODDPRE",165,0)
 K RXREC,ID,STA,DNM,PSOI,ORN,ODRG,ORTYP,CT,PDNM,TU,DDRG
"RTN","PSODDPRE",166,0)
 Q
"RTN","PSODDPRE",167,0)
 ;
"RTN","PSODDPRE",168,0)
ID N ID,P1,P2,PSODGCKP S ID=+$$GETVUID^XTID(50.68,,+$P($G(^PSDRUG(ODRG,"ND")),"^",3)_",")
"RTN","PSODDPRE",169,0)
 S P1=$P($G(^PSDRUG(ODRG,"ND")),"^"),P2=$P($G(^("ND")),"^",3),X=$$PROD0^PSNAPIS(P1,P2),SEQN=$P(X,"^",7)
"RTN","PSODDPRE",170,0)
ID1 S PSODGCKP=$S($G(PSODGCK):"PROSPECTIVE",1:"PROFILE")
"RTN","PSODDPRE",171,0)
 S ^TMP($J,LIST,"IN",PSODGCKP,$S($D(PSODGCK):"Z",1:ORTYP)_";"_RXREC_";"_PSODGCKP_";"_CT)=SEQN_"^"_ID_"^"_ODRG_"^"_PDNM_"^"_ORN_"^O" K ID
"RTN","PSODDPRE",172,0)
 Q
"RTN","PSODDPRE",173,0)
DUPTHER(RXREC) ;screen out discontinued/duplicate therapy Rx's greater than business rule calculation (cancel date + days supply +7 days)
"RTN","PSODDPRE",174,0)
 ;Note: If the dup allowance is 1 you have to have at least 3 eligible drug orders (or 2 matches) to produce the dupl. therapy warning
"RTN","PSODDPRE",175,0)
 ;Business rule for expired orders is (expiration date+120 days) which is the length of time expired order currently stay on med profile.  No changes for this.
"RTN","PSODDPRE",176,0)
 N X,Y,X1,X2 S X1=$P($G(^PSRX(RXREC,3)),"^",5),X2=(+$P(^PSRX(RXREC,0),"^",8)+7) D C^%DTC I DT>X Q 1
"RTN","PSODDPRE",177,0)
 Q 0
"RTN","PSODDPRE",178,0)
OIX S ^TMP($J,LIST,"IN","EXCEPTIONS","OI",PDNM)=1_"^"_ORTYP_";"_RXREC_";PROFILE;"_CT
"RTN","PSODDPRE",179,0)
 Q
"RTN","PSODDPRE",180,0)
ULRX ;
"RTN","PSODDPRE",181,0)
 I '$G(RXRECLOC) Q
"RTN","PSODDPRE",182,0)
 D PSOUL^PSSLOCK(RXRECLOC)
"RTN","PSODDPRE",183,0)
 Q
"RTN","PSODDPRE",184,0)
 ;
"RTN","PSODDPRE",185,0)
PRSTAT(DA) ;Displays the prescription's status
"RTN","PSODDPRE",186,0)
 N PSOTRANS,PSOREL,PSOCMOP,RXPSTA,PSOX,RFLZRO,PSOLRD,PSORTS,CMOP
"RTN","PSODDPRE",187,0)
 D HD^PSODDPR2():(($Y+5)>IOSL) Q:$G(PSODLQT)  ;PSO*7*411 to comment
"RTN","PSODDPRE",188,0)
 S RXPSTA="Processing Status: ",PSOLRD=$P($G(^PSRX(RXREC,2)),"^",13)
"RTN","PSODDPRE",189,0)
 ;
"RTN","PSODDPRE",190,0)
 D ^PSOCMOPA I $G(PSOCMOP)]"" D  K CMOP,PSOTRANS,PSOREL
"RTN","PSODDPRE",191,0)
 .S PSOTRANS=$E($P(PSOCMOP,"^",2),4,5)_"/"_$E($P(PSOCMOP,"^",2),6,7)_"/"_$E($P(PSOCMOP,"^",2),2,3)
"RTN","PSODDPRE",192,0)
 .S PSOREL=$S(CMOP("L")=0:$P($G(^PSRX(DA,2)),"^",13),1:$P(^PSRX(DA,1,CMOP("L"),0),"^",18))
"RTN","PSODDPRE",193,0)
 .S PSOREL=$E(PSOREL,4,5)_"/"_$E(PSOREL,6,7)_"/"_$E(PSOREL,2,3)_"@"_$E($P(PSOREL,".",2),1,4)
"RTN","PSODDPRE",194,0)
 .I '$D(IOINORM)!('$D(IOINHI)) S X="IORVOFF;IORVON;IOINHI;IOINORM" D ENDR^%ZISS
"RTN","PSODDPRE",195,0)
 .I $P($G(^PSRX(RXREC,"STA")),"^")=0 W:$$TRANCMOP^PSOUTL(RXREC) ?5,IORVON_IOINHI
"RTN","PSODDPRE",196,0)
 .S:$G(PSODUPF) PSODUPC(ZCT)=PSODUPC(ZCT)+1 W:'$G(PSODUPF) !,$J(RXPSTA,24)_$S($P(PSOCMOP,"^")=0!($P(PSOCMOP,"^")=2):"Transmitted to CMOP on "_PSOTRANS,$P(PSOCMOP,"^")=1:"Released by CMOP on "_PSOREL,1:"Not Dispensed"),IOINORM_IORVOFF
"RTN","PSODDPRE",197,0)
 D HD^PSODDPR2():(($Y+5)>IOSL) Q:$G(PSODLQT)
"RTN","PSODDPRE",198,0)
 I $G(PSOCMOP)']"" D
"RTN","PSODDPRE",199,0)
 .F PSOX=0:0 S PSOX=$O(^PSRX(RXREC,1,PSOX)) Q:'PSOX  D
"RTN","PSODDPRE",200,0)
 ..S RFLZRO=$G(^PSRX(RXREC,1,PSOX,0))
"RTN","PSODDPRE",201,0)
 ..S:$P(RFLZRO,"^",18)'="" PSOLRD=$P(RFLZRO,"^",18) I $P(RFLZRO,"^",16) S PSOLRD=PSOLRD_"^R",PSORTS=$P(RFLZRO,"^",16)
"RTN","PSODDPRE",202,0)
 .I '$O(^PSRX(RXREC,1,0)),$P(^PSRX(RXREC,2),"^",15) S PSOLRD=PSOLRD_"^R",PSORTS=$P(^PSRX(RXREC,2),"^",15)
"RTN","PSODDPRE",203,0)
 .S:$G(PSODUPF) PSODUPC(ZCT)=PSODUPC(ZCT)+1 W:'$G(PSODUPF) !,$J(RXPSTA,24)
"RTN","PSODDPRE",204,0)
 .I +$G(PSORTS) S:$G(PSODUPF) PSODUPC(ZCT)=PSODUPC(ZCT)+1 W:'$G(PSODUPF) "Returned to stock on "_$$FMTE^XLFDT(PSORTS,2) Q
"RTN","PSODDPRE",205,0)
 .S:$G(PSODUPF) PSODUPC(ZCT)=PSODUPC(ZCT)+1 W:'$G(PSODUPF) $S(PSOLRD="":"Not released locally",1:"Released locally on "_$$FMTE^XLFDT($P(PSOLRD,"^"),2)_" "_$P(PSOLRD,"^",2))_$S($P(^PSRX(RXREC,0),"^",11)="W":" (Window)",1:" (Mail)")
"RTN","PSODDPRE",206,0)
 Q
"RTN","PSODDPRE",207,0)
 ;
"RTN","PSODDPRE",208,0)
DATACK ;check FDB returned data to determine whether to continue processing.
"RTN","PSODDPRE",209,0)
 S DIR(0)="E",DIR("A",1)="No Enhanced Order Checks can be performed."
"RTN","PSODDPRE",210,0)
 S DIR("A",2)="   Reason(s): "_$P($G(^TMP($J,LIST,"OUT",0)),"^",2)
"RTN","PSODDPRE",211,0)
 S DIR("A")="Press Return to continue...",DIR("?")="Press Return to continue"
"RTN","PSODDPRE",212,0)
 W ! D ^DIR K DIRUT,DUOUT,DIR,X,Y  W @IOF ;I $P(^TMP($J,LIST,"OUT",0),"^")=1
"RTN","PSODDPRE",213,0)
 Q
"RTN","PSODDPRE",214,0)
 ;
"RTN","PSODDPRE",215,0)
NVATST(PSONVTOI,PSONVTAP) ; Look for any active Non-VA Dispense Drugs not marked as a supply item
"RTN","PSODDPRE",216,0)
 N PSONVT1,PSONVTFL,PSONVTIN
"RTN","PSODDPRE",217,0)
 S PSONVTFL=1
"RTN","PSODDPRE",218,0)
 F PSONVT1=0:0 S PSONVT1=$O(^PSDRUG("ASP",PSONVTOI,PSONVT1)) Q:'PSONVT1!('PSONVTFL)  D
"RTN","PSODDPRE",219,0)
 .I $P($G(^PSDRUG(PSONVT1,2)),"^",3)'[PSONVTAP Q
"RTN","PSODDPRE",220,0)
 .S PSONVTIN=$P($G(^PSDRUG(PSONVT1,"I")),"^") I PSONVTIN,PSONVTIN<DT Q
"RTN","PSODDPRE",221,0)
 .S PSONVTFL=$$SUP^PSSDSAPI(PSONVT1)
"RTN","PSODDPRE",222,0)
 Q PSONVTFL
"RTN","PSODOSU2")
0^2^B146172928
"RTN","PSODOSU2",1,0)
PSODOSU2 ;BIR/RTR - Dose Check Utility routine continued ;11/18/08
"RTN","PSODOSU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**251,375,372,436,402,518**;DEC 1997;Build 3
"RTN","PSODOSU2",3,0)
 ;
"RTN","PSODOSU2",4,0)
 ;Called from PSODOSUT.  The variable PSODTYPE is expected to be defined.
"RTN","PSODOSU2",5,0)
 ; PSODTYPE values can be N for dosing for new order, copy, and renews, E for edited and display of individual complex doses, and C for complex orders
"RTN","PSODOSU2",6,0)
 ;
"RTN","PSODOSU2",7,0)
EN ;new order, copy, renew, and verify orders
"RTN","PSODOSU2",8,0)
 N PSODLERW,PSODLERL,PSODLERS,PSODLERH,PSOCPXRR,PSODLWW,PSODOSER,PSONFRNF,PSOWMSG,PSODLQTC,PSOOFL,PSOOCNT
"RTN","PSODOSU2",9,0)
 N PSODMESE,PSODMESX,PSODMESG,PSODMEST,PSODMESH,PSODMESM,PSORLNF
"RTN","PSODOSU2",10,0)
 S (PSODLERF,PSODSEQ,PSODLWW,PSOOFL,PSORLNF)="",PSOOCNT=0
"RTN","PSODOSU2",11,0)
 F  S PSODSEQ=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ)) Q:PSODSEQ=""!($G(PSORX("DFLG")))!($G(PSODLQTC))  S PSODLNN1=""  D  D HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",12,0)
 .S:PSODTYPE'="N" PSODLQT=0 S PSOLASTS=PSODSEQ
"RTN","PSODOSU2",13,0)
 .I PSODTYPE="C" K PSOCPXRR
"RTN","PSODOSU2",14,0)
 .F  S PSODLNN1=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1)) Q:PSODLNN1=""!($G(PSORX("DFLG")))!($G(PSODLQTC))  D
"RTN","PSODOSU2",15,0)
 ..S:PSODTYPE'="E" PSODLECT=0
"RTN","PSODOSU2",16,0)
 ..I PSODTYPE="E" Q:$P(PSODLNN1,";",4)'=PSODLXNT
"RTN","PSODOSU2",17,0)
 ..S PSOOCNT=PSOOCNT+1 I PSOOCNT>1,PSOCPXB=2!(PSOCPXB=3) W !
"RTN","PSODOSU2",18,0)
 ..D EXCEPT^PSODOSUT,SETV
"RTN","PSODOSU2",19,0)
 ..D ERROR Q:$G(PSODLQTC)  I PSODLERZ,'PSODMESX,'PSODMESM W ! I PSODTYPE'="E" W !
"RTN","PSODOSU2",20,0)
 ..D EXCEPT Q:$G(PSODLQTC)  I PSODLERZ,'PSODMESM W ! I PSODTYPE'="E" W !
"RTN","PSODOSU2",21,0)
 ..D MESSAGE Q:$G(PSODLQTC)
"RTN","PSODOSU2",22,0)
 .K PSODLWW
"RTN","PSODOSU2",23,0)
 Q
"RTN","PSODOSU2",24,0)
 ;
"RTN","PSODOSU2",25,0)
ERROR ;format and write dosing error
"RTN","PSODOSU2",26,0)
 I PSODTYPE'="E" S PSODLECT=0
"RTN","PSODOSU2",27,0)
 F PSODLERA=0:0 S PSODLERA=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"ERROR",PSODLERA)) Q:'PSODLERA!($G(PSORX("DFLG")))  D
"RTN","PSODOSU2",28,0)
 .S:PSODTYPE'="E" PSODLECT=PSODLECT+1
"RTN","PSODOSU2",29,0)
 .S:PSODTYPE'="N" PSODLQT=0
"RTN","PSODOSU2",30,0)
 .F PSODLERX="MSG","TEXT" S PSODLERB=$G(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"ERROR",PSODLERA,PSODLERX)) D  K ^UTILITY($J,"W")
"RTN","PSODOSU2",31,0)
 ..S PSODLERZ=0 Q:PSODLERB=""
"RTN","PSODOSU2",32,0)
 ..I PSODTYPE="C"&(PSOCPXB>3) D ERRCOM Q
"RTN","PSODOSU2",33,0)
 ..I PSODTYPE="E" D ERREDIT Q
"RTN","PSODOSU2",34,0)
 ..I PSODTYPE="N"&(PSOCPXB>3) D ERRNEW Q
"RTN","PSODOSU2",35,0)
 ..Q:PSODTYPE="C"&(PSOCPXB<4)
"RTN","PSODOSU2",36,0)
 ..D ERRNEW
"RTN","PSODOSU2",37,0)
 I PSODTYPE="E",PSODMESG W !
"RTN","PSODOSU2",38,0)
 Q
"RTN","PSODOSU2",39,0)
 ;
"RTN","PSODOSU2",40,0)
ERRCOM ;write dosing errors for complex dose summary after accept of an order
"RTN","PSODOSU2",41,0)
 I PSOCPXC D HD Q:$G(PSODLQTC)  I PSODLERF,PSODLERX="MSG" W:'PSODLQT ! D HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",42,0)
 I 'PSODLERF,PSOCPXB<4 W:'PSODLQT&(PSOCPXC) !
"RTN","PSODOSU2",43,0)
 S PSODLERF=1 D:PSOCPXC HD I PSODLERZ W:'PSODLQT&(PSOCPXC) !
"RTN","PSODOSU2",44,0)
 D:PSOCPXC
"RTN","PSODOSU2",45,0)
 .D HD Q:$G(PSODLQTC)  W:'PSODLQT&(PSODLECT>1) !
"RTN","PSODOSU2",46,0)
 .N X,DIWL,DIWR,DIWF,PSODELXR,PSODELXF
"RTN","PSODOSU2",47,0)
 .D:PSOCPXC HD D:'PSOCPXF&(PSOCPXC) 
"RTN","PSODOSU2",48,0)
 ..Q:$G(PSORENWD)&(PSOCPXB<4)  D SUMM^PSODOSUT
"RTN","PSODOSU2",49,0)
 .D:PSOCPXC HD S PSOCPXG=$P(PSODLNN1,";",4) I PSOCPXC&('$G(PSOCPXRR(PSOCPXG))) D PSOORI,SUB^PSODOSUT W:'PSODLQT&('PSODLERZ) !
"RTN","PSODOSU2",50,0)
 .D:PSOCPXC HD W:'PSODLQT&(PSODLECT'>1)&(PSODLERX="TEXT")&(PSOCPXC) ! S X=PSODLERB,DIWL=1,DIWR=$S(PSODLERX="MSG":76,1:74) K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSU2",51,0)
 .S PSODELXF=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D:PSOCPXC HD W:PSODELXF&('PSODLQT) ! D
"RTN","PSODOSU2",52,0)
 ..D:PSOCPXC HD W:'$G(PSODLQT) $S(PSODLERX="MSG":"   ",1:"     ")_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S (PSODLERR,PSODOSER,PSODLEXR,PSOERROR)=1 D SFD
"RTN","PSODOSU2",53,0)
 .S PSOLASTD(PSOLASTS)=1,PSONFRNF=1
"RTN","PSODOSU2",54,0)
 Q
"RTN","PSODOSU2",55,0)
 ;
"RTN","PSODOSU2",56,0)
ERREDIT ;write dosing errors for edits or display during complex dose entry
"RTN","PSODOSU2",57,0)
 I 'PSODLERF,PSOCPXB<4 W:'PSODLQT !
"RTN","PSODOSU2",58,0)
 D HD Q:$G(PSODLQTC)  I PSODLERF,PSODLERX="MSG" W:'PSODLQT ! D HD Q:$G(PSODLQTC)  I 'PSODLERF W:'PSODLQT !
"RTN","PSODOSU2",59,0)
 S PSODLERF=1 D HD Q:$G(PSODLQTC)  I PSODLERZ W:'PSODLQT !
"RTN","PSODOSU2",60,0)
 D HD Q:$G(PSODLQTC)  W:'PSODLQT !
"RTN","PSODOSU2",61,0)
 N X,DIWL,DIWR,DIWF,PSODELXR,PSODELXF S X=PSODLERB,DIWL=1,DIWR=$S(PSODLERX="MSG":76,1:74) K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSU2",62,0)
 S PSODELXF=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D HD Q:$G(PSODLQTC)  W:PSODELXF&('PSODLQT) ! D HD Q:$G(PSODLQTC)  D
"RTN","PSODOSU2",63,0)
 .W:'PSODLQT $S(PSODLERX="MSG":"   ",1:"     ")_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S (PSODLERR,PSODOSER,PSODLEXR,PSOERROR)=1 D SFD
"RTN","PSODOSU2",64,0)
 S PSOLASTD(PSOLASTS)=1,PSONFRNF=1
"RTN","PSODOSU2",65,0)
 Q
"RTN","PSODOSU2",66,0)
 ;
"RTN","PSODOSU2",67,0)
ERRNEW ;write dosing errors for finish, new, copy, renewal and verify
"RTN","PSODOSU2",68,0)
 D HD Q:$G(PSODLQTC)  I PSODLERF,PSODLERX="MSG" W:'PSODLQT ! D HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",69,0)
 I $L(PSODLERB)>76&(PSOCPXB>1)  S PSODLERL=1
"RTN","PSODOSU2",70,0)
 I 'PSODLERF,PSOCPXB<4 W:'PSODLQT !
"RTN","PSODOSU2",71,0)
 S PSODLERF=1 D HD Q:$G(PSODLQTC)  I PSODLERZ W:'PSODLQT !
"RTN","PSODOSU2",72,0)
 D HD Q:$G(PSODLQTC)  W:'PSODLQT&(PSODLECT>1) ! N X,DIWL,DIWR,DIWF,PSODELXR,PSODELXF
"RTN","PSODOSU2",73,0)
 D:PSOCPXC HD D:'PSOCPXF&(PSOCPXC)
"RTN","PSODOSU2",74,0)
 .Q:$G(PSORENWD)&(PSOCPXB<4)  D SUMM^PSODOSUT
"RTN","PSODOSU2",75,0)
 D HD Q:$G(PSODLQTC)  S PSOCPXG=$P(PSODLNN1,";",4) I '$G(PSOCPXRR(PSOCPXG))&(PSOCPXB>1) D PSOORI,SUB^PSODOSUT W:'PSODLQT&('PSODLERZ) !
"RTN","PSODOSU2",76,0)
 D HD Q:$G(PSODLQTC)  W:'PSODLQT&(PSODLECT'>1)&(PSODLERX="TEXT") ! S X=PSODLERB,DIWL=1,DIWR=$S(PSODLERX="MSG":76,1:74) K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSU2",77,0)
 S PSODELXF=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D HD Q:$G(PSODLQTC)  W:PSODELXF&('PSODLQT) ! D HD Q:$G(PSODLQTC)  D
"RTN","PSODOSU2",78,0)
 .W:'PSODLQT $S(PSODLERX="MSG":"   ",1:"     ")_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S (PSODLERR,PSODOSER,PSODLEXR,PSOERROR)=1 D SFD
"RTN","PSODOSU2",79,0)
 S PSOLASTD(PSOLASTS)=1,PSONFRNF=1
"RTN","PSODOSU2",80,0)
 Q
"RTN","PSODOSU2",81,0)
 ;
"RTN","PSODOSU2",82,0)
SFD ;
"RTN","PSODOSU2",83,0)
 S PSODELXF=1 S:PSODLERX="TEXT" PSODLERZ=1
"RTN","PSODOSU2",84,0)
 Q
"RTN","PSODOSU2",85,0)
 ;
"RTN","PSODOSU2",86,0)
EXCEPT ;format and write exceptions
"RTN","PSODOSU2",87,0)
 I PSODTYPE="E" S (PSODLERZ)=0
"RTN","PSODOSU2",88,0)
 I $G(PSODOSER),PSODTYPE="N",PSODMESX,PSODMESG W !
"RTN","PSODOSU2",89,0)
 I $G(PSODOSER) K PSODOSER I PSODMESX,'PSODMESG W ! ;line feed between error and exceptions
"RTN","PSODOSU2",90,0)
 I PSODTYPE="N" D HD Q:$G(PSODLQTC)  W:PSODLERF&('PSODLQT)&('PSODMESX)&('PSODMESM) ! S PSODLERZ=0
"RTN","PSODOSU2",91,0)
 I PSODTYPE="C"  D:PSOCPXC HD W:PSODLERF&(PSOCPXC)&('PSODLQT)&('PSODMESX)&('PSODMESM)&('$G(PSODLWW)) ! S (PSODLERZ,PSODLESM)=0
"RTN","PSODOSU2",92,0)
 F PSODLERA=0:0 S PSODLERA=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"EXCEPTIONS",PSODLERA)) Q:'PSODLERA  D
"RTN","PSODOSU2",93,0)
 .S PSODLERB=$G(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"EXCEPTIONS",PSODLERA))
"RTN","PSODOSU2",94,0)
 .I PSODTYPE="N" D SBAD^PSODOSUT
"RTN","PSODOSU2",95,0)
 .I PSODTYPE="E"!(PSODTYPE="C") D SBAD^PSODOSUT:PSODLERB'=""
"RTN","PSODOSU2",96,0)
 .Q:PSODLERB=""  I PSODTYPE'="C" D HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",97,0)
 .S (PSODLERF,PSODLALZ)=1
"RTN","PSODOSU2",98,0)
 .;write exceptions for new, copy, renew, verify
"RTN","PSODOSU2",99,0)
 .I PSODTYPE="N" D  Q
"RTN","PSODOSU2",100,0)
 ..D HD Q:$G(PSODLQTC)  I 'PSOCPXF&(PSOCPXC) D
"RTN","PSODOSU2",101,0)
 ...Q:$G(PSORENWD)&(PSOCPXB<4)  D SUMM^PSODOSUT
"RTN","PSODOSU2",102,0)
 ..I 'PSODLERF W:'PSODLQT&('$G(PSODLWW)) ! D HD Q:$G(PSODLQTC)  S PSODLWW=0
"RTN","PSODOSU2",103,0)
 ..S PSOCPXG=$P(PSODLNN1,";",4)
"RTN","PSODOSU2",104,0)
 ..I '$G(PSOCPXRR(PSOCPXG)),PSOCPXB>1 W:'PSODLQT&(PSODLERZ) ! D PSOORI,SUB^PSODOSUT
"RTN","PSODOSU2",105,0)
 ..D HD Q:$G(PSODLQTC)  W:'PSODLQT&('$G(PSODLWW)) ! S PSODLWW=0
"RTN","PSODOSU2",106,0)
 ..D WRITEXC
"RTN","PSODOSU2",107,0)
 .;write dosing exceptions for edits or display during complex dose entry
"RTN","PSODOSU2",108,0)
 .I PSODTYPE="E" D
"RTN","PSODOSU2",109,0)
 ..I PSODLERB["please complete a manual check for appropriate Dosing" S PSODCONT=1
"RTN","PSODOSU2",110,0)
 ..D HD Q:$G(PSODLQTC)  W:'PSODLQT&('$G(PSODLWW)) ! S PSODLWW=0
"RTN","PSODOSU2",111,0)
 ..D WRITEXC
"RTN","PSODOSU2",112,0)
 .;write exceptions for complex orders
"RTN","PSODOSU2",113,0)
 .I PSODTYPE="C"&(PSOCPXB>3) D
"RTN","PSODOSU2",114,0)
 ..D:PSOCPXC HD I 'PSODLERF&('$G(PSODLWW)) W:'PSODLQT&(PSOCPXC) !
"RTN","PSODOSU2",115,0)
 ..D:PSOCPXC
"RTN","PSODOSU2",116,0)
 ...D HD Q:$G(PSODLQTC)  I 'PSOCPXF&(PSOCPXC) D
"RTN","PSODOSU2",117,0)
 ....Q:$G(PSORENWD)&(PSOCPXB<4)  D SUMM^PSODOSUT
"RTN","PSODOSU2",118,0)
 ...S PSOCPXG=$P(PSODLNN1,";",4) I PSOCPXC&('$G(PSOCPXRR(PSOCPXG))) D HD Q:$G(PSODLQTC)  W:'PSODLQT&(PSOCPXC)&(PSODLESM)&('$G(PSODLWW)) ! D PSOORI,SUB^PSODOSUT
"RTN","PSODOSU2",119,0)
 ...S PSODLESM=1 D HD Q:$G(PSODLQTC)  W:'PSODLQT&('$G(PSODLWW)) !
"RTN","PSODOSU2",120,0)
 ...D:PSOCPXC WRITEXC
"RTN","PSODOSU2",121,0)
 Q
"RTN","PSODOSU2",122,0)
 ;
"RTN","PSODOSU2",123,0)
WRITEXC ;format and write exception messages to the screen
"RTN","PSODOSU2",124,0)
 D WRITEXC^PSODOSU4 Q
"RTN","PSODOSU2",125,0)
 ;
"RTN","PSODOSU2",126,0)
MESSAGE ;format and write messages
"RTN","PSODOSU2",127,0)
 I PSODTYPE="N",$$FEED^PSODOSUT D HD Q:$G(PSODLQTC)  W:'PSODLQT !
"RTN","PSODOSU2",128,0)
 I $G(PSODLERZ)&('PSODLQT)&(PSODTYPE'="N") W !  ;line feed for transition between exceptions to messages
"RTN","PSODOSU2",129,0)
 I PSODTYPE="C" I $$FEED^PSODOSUT&(PSOCPXC) D HD Q:$G(PSODLQTC)  W:'PSODLQT !
"RTN","PSODOSU2",130,0)
 S PSODLPL="" F  S PSODLPL=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE",PSODLPL)) Q:PSODLPL=""  D
"RTN","PSODOSU2",131,0)
 .;Add a line feed if there are just Single and General dosing messages
"RTN","PSODOSU2",132,0)
 .I PSODLPL="3_GENERAL" D
"RTN","PSODOSU2",133,0)
 ..I PSODTYPE="N" D  Q
"RTN","PSODOSU2",134,0)
 ...I PSODLINS,'PSODLINR,'PSODLINX W ! Q
"RTN","PSODOSU2",135,0)
 ...I 'PSODLINS,'PSODLINR,'PSODLINX W !!
"RTN","PSODOSU2",136,0)
 ..W !
"RTN","PSODOSU2",137,0)
 .I PSODLPL=".1_INTRO" D
"RTN","PSODOSU2",138,0)
 ..S PSOINTRO="1^"_$G(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE",".1_INTRO"))
"RTN","PSODOSU2",139,0)
 ..I $P(PSOINTRO,U,2)="" S PSOINTRO=0
"RTN","PSODOSU2",140,0)
 .F PSODLP1=0:0 S PSODLP1=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE",PSODLPL,PSODLP1)) Q:'PSODLP1  D
"RTN","PSODOSU2",141,0)
 ..I PSODTYPE'="C",PSODLPL="3_GENERAL" D GENERAL Q
"RTN","PSODOSU2",142,0)
 ..S PSODLMSG=$G(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE",PSODLPL,PSODLP1))
"RTN","PSODOSU2",143,0)
 ..Q:PSODLMSG=""
"RTN","PSODOSU2",144,0)
 ..I 'PSODLERF W:'PSODLQT&('$G(PSODLWW)) ! D HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",145,0)
 ..S PSODLERF=1
"RTN","PSODOSU2",146,0)
 ..I PSODTYPE'="C" D HD Q:$G(PSODLQTC)  I 'PSODLQT,'$G(PSODLWW),$G(PSODLERR),'PSORLNF W ! S PSORLNF=1
"RTN","PSODOSU2",147,0)
 ..I PSODTYPE="C" D  Q:'PSODLQT&(PSOCPXC)&(PSODLESM)  I PSOCPXF&(PSOCPXC) K PSODAILY
"RTN","PSODOSU2",148,0)
 ...D:PSOCPXC HD I '$G(PSODLFLG) W:'PSODLQT&(PSOCPXC)&(PSOCPXF)&('$G(PSODLWW)) !
"RTN","PSODOSU2",149,0)
 ...S PSODLFLG=1 S PSODLEXR=0
"RTN","PSODOSU2",150,0)
 ..I PSODTYPE'="E" S PSODLEXR=0
"RTN","PSODOSU2",151,0)
 ..S PSODLFLG=1 S:PSODLPL="1_SINGLE" PSODLINS=1 S:PSODLPL="2_RANGE" PSODLINR=1 S:PSODLPL="1_SINGLE_RANGE" PSODLINX=1
"RTN","PSODOSU2",152,0)
 ..I PSODTYPE="N" S PSODLFLG=1 D MSGN
"RTN","PSODOSU2",153,0)
 ..I PSODTYPE="E" S PSODLFLG=1 D WRITMSG
"RTN","PSODOSU2",154,0)
 ..I PSODTYPE="C"&(PSOCPXB>3) D MSGC
"RTN","PSODOSU2",155,0)
 .I PSODLPL="4_TRAIL",PSODTYPE="E"!(PSODTYPE="N") D
"RTN","PSODOSU2",156,0)
 ..S PSODLMSG=$G(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","4_TRAIL"))
"RTN","PSODOSU2",157,0)
 ..D WRITMSG
"RTN","PSODOSU2",158,0)
 Q
"RTN","PSODOSU2",159,0)
 ;
"RTN","PSODOSU2",160,0)
MSGN ;write dosing message for new, copy, renew, and verify
"RTN","PSODOSU2",161,0)
 I 'PSOCPXF&(PSOCPXC)&($G(PSOCPXB)>3) S PSOCPXG=$P(PSODLNN1,";",4) D  K PSODAILY S:PSOCPXC&(PSOCPXG=PSOCPXB) PSOCPXH=1
"RTN","PSODOSU2",162,0)
 .Q:$G(PSORENWD)&(PSOCPXB<4)  D SUMM^PSODOSUT
"RTN","PSODOSU2",163,0)
 S PSOCPXG=$P(PSODLNN1,";",4) D HD Q:$G(PSODLQTC)  D:'$G(PSOCPXRR(PSOCPXG))&(PSOCPXB>1) PSOORI,SUB^PSODOSUT D
"RTN","PSODOSU2",164,0)
 .I $G(PSOCPXRR(PSOCPXG))&$P(PSODLNN1,";",5)'="" K PSODAILY
"RTN","PSODOSU2",165,0)
 .I PSODLPL="2_RANGE",'$G(PSODAILY) D DAILY^PSODOSUT I PSOCPXG'=PSOCPXB K PSODAILY
"RTN","PSODOSU2",166,0)
 .I PSODLPL="1_SINGLE_RANGE",'$G(PSODAILY) D DAILY^PSODOSUT I PSOCPXG'=PSOCPXB K PSODAILY
"RTN","PSODOSU2",167,0)
 .D HD Q:$G(PSODLQTC)  D WRITMSG,HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",168,0)
 Q
"RTN","PSODOSU2",169,0)
 ;
"RTN","PSODOSU2",170,0)
MSGC ;write dosing message for edits or display during complex dose entry
"RTN","PSODOSU2",171,0)
 Q:'PSODLQT&(PSOCPXC)&(PSODLESM)  I PSOCPXF&(PSOCPXC) K PSODAILY
"RTN","PSODOSU2",172,0)
 D:PSOCPXC HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",173,0)
 I 'PSOCPXF&(PSOCPXC) S PSOCPXG=$P(PSODLNN1,";",4) D  K PSODAILY S:PSOCPXC&(PSOCPXG=PSOCPXB) PSOCPXH=1
"RTN","PSODOSU2",174,0)
 .Q:$G(PSORENWD)&(PSOCPXB<4)  D SUMM^PSODOSUT
"RTN","PSODOSU2",175,0)
 I PSOCPXC S PSOCPXG=$P(PSODLNN1,";",4) D HD Q:$G(PSODLQTC)  D
"RTN","PSODOSU2",176,0)
 .I $G(PSOCPXRR(PSOCPXG))&$P(PSODLNN1,";",5)'="" K PSODAILY
"RTN","PSODOSU2",177,0)
 .I '$G(PSOCPXRR(PSOCPXG))&('$G(PSOCPXH)) D PSOORI,SUB^PSODOSUT I $G(PSOCOPY)!($G(PSORENW)) S:PSOCPXC&(PSOCPXG=PSOCPXB) PSOCPXH=1
"RTN","PSODOSU2",178,0)
 .I PSODLPL="2_RANGE"&PSODLINR&'$G(PSODAILY) D DAILY^PSODOSUT
"RTN","PSODOSU2",179,0)
 .I PSODLPL="1_SINGLE_RANGE"&PSODLINX&'$G(PSODAILY) D DAILY^PSODOSUT
"RTN","PSODOSU2",180,0)
 .D WRITMSG
"RTN","PSODOSU2",181,0)
 Q
"RTN","PSODOSU2",182,0)
 ;
"RTN","PSODOSU2",183,0)
WRITMSG ;
"RTN","PSODOSU2",184,0)
 W:'PSODLQT&('$G(PSODLWW)) ! S PSODLWW=0
"RTN","PSODOSU2",185,0)
 N X,DIWL,DIWR,DIWF
"RTN","PSODOSU2",186,0)
 IF +$G(PSOINTRO),'$G(PSOOFL) D
"RTN","PSODOSU2",187,0)
 .S X=$P(PSOINTRO,U,2),DIWL=1,DIWR=76 K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSU2",188,0)
 .D WRITMSG1
"RTN","PSODOSU2",189,0)
 .W !
"RTN","PSODOSU2",190,0)
 .S $P(PSOINTRO,U)=0
"RTN","PSODOSU2",191,0)
 S X=PSODLMSG,DIWL=1,DIWR=76 K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSU2",192,0)
 D WRITMSG1
"RTN","PSODOSU2",193,0)
 K ^UTILITY($J,"W") D HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",194,0)
 I PSODTYPE="E",'PSODLQT S PSODELNX=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1)) I '$P($G(PSODELNX),";",5) W !
"RTN","PSODOSU2",195,0)
 I PSODTYPE="C"!(PSODTYPE="N"),'PSODLQT D
"RTN","PSODOSU2",196,0)
 .D HD Q:$G(PSODLQTC)  S PSODELNX=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1)) I '$P($G(PSODELNX),";",5)!($P($G(PSODELNX),";",4)'=PSOCPXG) W ! S PSOLASTD(PSOLASTS)=3
"RTN","PSODOSU2",197,0)
 Q
"RTN","PSODOSU2",198,0)
 ;
"RTN","PSODOSU2",199,0)
WRITMSG1 ;
"RTN","PSODOSU2",200,0)
 N PSODELXR,PSODELXF,PSOSPACE
"RTN","PSODOSU2",201,0)
 S PSODELXF=0
"RTN","PSODOSU2",202,0)
 S PSOSPACE="   "
"RTN","PSODOSU2",203,0)
 I +$G(PSOINTRO),'$G(PSOOFL) S PSOSPACE=""
"RTN","PSODOSU2",204,0)
 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D
"RTN","PSODOSU2",205,0)
 .D HD Q:$G(PSODLQTC)  W:PSODELXF&('PSODLQT) ! W:'PSODLQT PSOSPACE_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S (PSODLFLG,PSODELXF,PSONFRNF,PSOWMSG,PSODLEXR)=1
"RTN","PSODOSU2",206,0)
 I $G(PSODLFLG)&($G(PSOCPXC))&($G(PSOCPXB)>3)!(PSODTYPE="C"&(PSOCPXB>3)) W !
"RTN","PSODOSU2",207,0)
 Q
"RTN","PSODOSU2",208,0)
 ;
"RTN","PSODOSU2",209,0)
WRTINTRO ;
"RTN","PSODOSU2",210,0)
 N PSODELXR
"RTN","PSODOSU2",211,0)
 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR!($G(PSODLQTC))  D
"RTN","PSODOSU2",212,0)
 .D HD Q:$G(PSODLQTC)  W $G(^UTILITY($J,"W",DIWL,PSODELXR,0))
"RTN","PSODOSU2",213,0)
 .I PSODLPL'="3_GENERAL" W !
"RTN","PSODOSU2",214,0)
 .S $P(PSOINTRO,U)=0
"RTN","PSODOSU2",215,0)
 Q
"RTN","PSODOSU2",216,0)
 ;
"RTN","PSODOSU2",217,0)
GENERAL ;general dosing range information
"RTN","PSODOSU2",218,0)
 N PSODLERC,PSODLP2
"RTN","PSODOSU2",219,0)
 I +$G(PSOINTRO) D
"RTN","PSODOSU2",220,0)
 .S X=$P(PSOINTRO,U,2),DIWL=4,DIWR=76 K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSU2",221,0)
 .D WRTINTRO
"RTN","PSODOSU2",222,0)
 F PSODLP2=0:0 S PSODLP2=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE",PSODLPL,PSODLP1,PSODLP2)) Q:'PSODLP2!($G(PSORX("DFLG")))  D
"RTN","PSODOSU2",223,0)
 .S PSODLERC="",PSODLERC=$G(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE",PSODLPL,PSODLP1,PSODLP2))
"RTN","PSODOSU2",224,0)
 .Q:PSODLERC=""
"RTN","PSODOSU2",225,0)
 .D HD Q:$G(PSODLQTC)
"RTN","PSODOSU2",226,0)
 .;I 'PSODLQT,'$G(PSOEDIT) W !
"RTN","PSODOSU2",227,0)
 .N X,DIWL,DIWR,DIWF,DIWL,PSODELXR,PSODELXF S PSODLEXR=1
"RTN","PSODOSU2",228,0)
 .S DIWL=4,DIWR=76 K ^UTILITY($J,"W")
"RTN","PSODOSU2",229,0)
 .S X=PSODLERC D ^DIWP
"RTN","PSODOSU2",230,0)
 .S PSODELXF=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D HD Q:$G(PSODLQTC)  W:PSODELXF&('PSODLQT) ! D HD Q:$G(PSODLQTC)  W:'PSODLQT "   "_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S (PSODELXF,PSODLERZ,PSONFRNF)=1
"RTN","PSODOSU2",231,0)
 .S PSOLASTD(PSOLASTS)=3
"RTN","PSODOSU2",232,0)
 .I '$D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","1_SINGLE")),'$D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","2_RANGE")),'$D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","1_SINGLE_RANGE")) D
"RTN","PSODOSU2",233,0)
 ..I +$G(PSOEXCPT)!(+$G(PSOERROR)) S PSOGENF=1
"RTN","PSODOSU2",234,0)
 .K ^UTILITY($J,"W")
"RTN","PSODOSU2",235,0)
 .W !
"RTN","PSODOSU2",236,0)
 Q
"RTN","PSODOSU2",237,0)
 ;
"RTN","PSODOSU2",238,0)
HD ;
"RTN","PSODOSU2",239,0)
 S:'$G(PSODLQT) PSODLQT=""
"RTN","PSODOSU2",240,0)
 I PSODLQT!(($Y+3)<IOSL)!($G(PSORX("DFLG"))) Q
"RTN","PSODOSU2",241,0)
 W:$G(PSORENWD) !
"RTN","PSODOSU2",242,0)
HD2 ;
"RTN","PSODOSU2",243,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","PSODOSU2",244,0)
 K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue,'^' to exit" D ^DIR K DIR
"RTN","PSODOSU2",245,0)
 I $G(PSOCPXC)&($D(DIRUT)!($D(DUOUT))) S PSODLQTC=1 W @IOF W ! Q  ;user ^'s
"RTN","PSODOSU2",246,0)
 I 'Y!($D(DTOUT))!($D(DUOUT))!($G(DIRUT)) S PSODLQT=1,PSORX("DFLG")=1 Q
"RTN","PSODOSU2",247,0)
 W @IOF W !
"RTN","PSODOSU2",248,0)
 S PSOOFL="" D:$G(PSODELXR) PSOORI W:$G(PSOOFL) !
"RTN","PSODOSU2",249,0)
 Q
"RTN","PSODOSU2",250,0)
 ;
"RTN","PSODOSU2",251,0)
PSOORI ;**writes per orifice intro text to the screen for dosing check summary**
"RTN","PSODOSU2",252,0)
 I +$G(PSOINTRO),'$G(PSOOFL) D
"RTN","PSODOSU2",253,0)
 .W ?3,$P(PSOINTRO,U,2),!
"RTN","PSODOSU2",254,0)
 .S $P(PSOINTRO,U)=0,PSOOFL=1
"RTN","PSODOSU2",255,0)
 Q
"RTN","PSODOSU2",256,0)
 ;
"RTN","PSODOSU2",257,0)
SETV ; Set variables indicating what messages exist
"RTN","PSODOSU2",258,0)
 S (PSODMESE,PSODMESX,PSODMESG,PSODMEST,PSODMESH,PSODMESM)=0
"RTN","PSODOSU2",259,0)
 I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"ERROR")) S PSODMESE=1
"RTN","PSODOSU2",260,0)
 I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"EXCEPTIONS")) S PSODMESX=1
"RTN","PSODOSU2",261,0)
 I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE")) S PSODMESM=1
"RTN","PSODOSU2",262,0)
 I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","3_GENERAL")) S PSODMESG=1
"RTN","PSODOSU2",263,0)
 I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","4_TRAIL")) S PSODMEST=1
"RTN","PSODOSU2",264,0)
 D
"RTN","PSODOSU2",265,0)
 .I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","1_SINGLE")) S PSODMESH=1 Q
"RTN","PSODOSU2",266,0)
 .I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","2_RANGE")) S PSODMESH=1 Q
"RTN","PSODOSU2",267,0)
 .I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE","1_SINGLE_RANGE")) S PSODMESH=1
"RTN","PSODOSU2",268,0)
 Q
"RTN","PSODOSU4")
0^5^B4847177
"RTN","PSODOSU4",1,0)
PSODOSU4 ;BIR/cmf - Dose Check Utility routine continued ;11/18/08
"RTN","PSODOSU4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**402,518**;DEC 1997;Build 3
"RTN","PSODOSU4",3,0)
 ;
"RTN","PSODOSU4",4,0)
 ;Called from PSODOSUT*.  The variable PSODTYPE is expected to be defined.
"RTN","PSODOSU4",5,0)
 ; PSODTYPE values can be N for dosing for new order, copy, and renews, E for edited and display of individual complex doses, and C for complex orders
"RTN","PSODOSU4",6,0)
 ;
"RTN","PSODOSU4",7,0)
WRITEXC ;format and write exception messages to the screen
"RTN","PSODOSU4",8,0)
 N PSORSNT1,PSORSNT3,PSORSNT4 S PSODLWW=0,DIWL=4,DIWR=76 K ^UTILITY($J,"W")
"RTN","PSODOSU4",9,0)
 I PSODLERB["Range Check Error Summary" S PSODLERS=1 I PSODLERZ W:'PSODLQT ! D HD Q:$G(PSODLQTC)
"RTN","PSODOSU4",10,0)
 I $G(PSODLERS),$L(PSODLERB)>76&($G(PSOCPXB)>1)  S PSODLERB=$E(PSODLERB,14,999),DIWR=76,DIWL=17,DIWF="W" S PSODLERW=1
"RTN","PSODOSU4",11,0)
 S X=PSODLERB D:'PSODLQT ^DIWP D HD Q:$G(PSODLQTC)
"RTN","PSODOSU4",12,0)
 I '$G(PSODLERW) S (PSODELXF,PSORSNT1,PSORSNT3)=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D
"RTN","PSODOSU4",13,0)
 .S PSORSNT1=PSORSNT1+1 I PSORSNT1=1 D SPAC
"RTN","PSODOSU4",14,0)
 .W:PSODELXF&('PSODLQT) ! D HD Q:$G(PSODLQTC)  W:'PSODLQT $S(PSORSNT1>1&(PSORSNT3):PSORSNT4,1:"   ")_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S (PSONFRNF,PSODELXF,PSODLERZ,PSODLEXR,PSOEXCPT)=1
"RTN","PSODOSU4",15,0)
 I $G(PSODLERW)&('PSODLQT) D ^DIWW K PSODLERW,PSODLERL S PSODLWW=1 S PSOLASTD(PSOLASTS)=2
"RTN","PSODOSU4",16,0)
 K ^UTILITY($J,"W")
"RTN","PSODOSU4",17,0)
 Q
"RTN","PSODOSU4",18,0)
 ;
"RTN","PSODOSU4",19,0)
SPAC ; See if leading spaces need to be added after line 1
"RTN","PSODOSU4",20,0)
 N PSORSNT2,PSORSNT5
"RTN","PSODOSU4",21,0)
 S PSORSNT2=$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) Q:$E(PSORSNT2)'=" "
"RTN","PSODOSU4",22,0)
 F PSORSNT3=1:1:$L(PSORSNT2) I $E(PSORSNT2,PSORSNT3)'=" " Q
"RTN","PSODOSU4",23,0)
 S:PSORSNT3'=$L(PSORSNT2) PSORSNT3=PSORSNT3+2 S PSORSNT4="" F PSORSNT5=1:1:PSORSNT3 S PSORSNT4=PSORSNT4_" "
"RTN","PSODOSU4",24,0)
 Q
"RTN","PSODOSU4",25,0)
 ;
"RTN","PSODOSU4",26,0)
HD ;
"RTN","PSODOSU4",27,0)
 D HD^PSODOSU2 Q
"RTN","PSODOSU4",28,0)
 ;;
"RTN","PSODOSUN")
0^4^B99557161
"RTN","PSODOSUN",1,0)
PSODOSUN ;BIR/RTR - Dose Check Utility routine ;11/18/08
"RTN","PSODOSUN",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**251,379,372,416,436,402,500,518**;DEC 1997;Build 3
"RTN","PSODOSUN",3,0)
 ;
"RTN","PSODOSUN",4,0)
DOSE() ;Write Dose output for renew, finish, copy, etc.
"RTN","PSODOSUN",5,0)
 N PSODLINS,PSODLINR,PSODLINX,PSODLERA,PSODLERB,PSODLERF,PSODLERZ,PSODLPL,PSODLP1,PSODLMSG,PSODLFLG,PSODLALZ,DIR,DUOUT,DTOUT,DIROUT,DIRUT,X,Y,X1,PSODLOFF
"RTN","PSODOSUN",6,0)
 N PSODLNN1,PSODLERR,PSODLERX,PSODLQT,PSOCPXG,PSOCPXRR,PSODLEXR,PSODELNX,PSODLECT,PSOCPXF,PSODTYPE,PSOCPXC,PSOLASTS,PSOQTOUT,PSOEDOUT,PSODSEQ
"RTN","PSODOSUN",7,0)
 N PSOSIGC,PSOINTRO,PSOEXCPT,PSOERROR
"RTN","PSODOSUN",8,0)
 S (PSODLERF,PSODLERZ,PSODLALZ,PSODLINS,PSODLINR,PSODLINX,PSODLERR,PSODLQT,PSOCPXG,PSOCPXF,PSOLASTS,PSOQTOUT,PSOEDOUT,PSODLOFF,PSOINTRO,PSOEXCPT,PSOERROR)=0,PSODTYPE="N",PSOCPXC=1
"RTN","PSODOSUN",9,0)
 I $G(PSORXED)&$G(PSOEDDOS) S PSOCPXC=0  ;don't show summary before accept of order if edit
"RTN","PSODOSUN",10,0)
 I $G(PSOCPXB)<4 S PSOCPXC=0
"RTN","PSODOSUN",11,0)
 W:$G(PSOEDIT)!$G(PSOCOPY)!($G(PSOFOERR)) @IOF I $P($G(^TMP($J,"PSOPDOSN","OUT",0)),"^")=-1 D  S PSODLFLG=0,PSODLOFF=1 G END
"RTN","PSODOSUN",12,0)
 .D HD N X,DIWL,DIWR,DIWF,PSODELXR,PSODELXF D MESG
"RTN","PSODOSUN",13,0)
 .S X="Reason(s): "_$P(^TMP($J,"PSOPDOSN","OUT",0),"^",2),DIWL=1,DIWR=76 K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSUN",14,0)
 .S PSODELXF=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D HD W:PSODELXF&('PSODLQT) ! D HD W:'PSODLQT "   "_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S PSODELXF=1
"RTN","PSODOSUN",15,0)
 .K ^UTILITY($J,"W")
"RTN","PSODOSUN",16,0)
 ;PSOCPXB = Number of Dosing Seq
"RTN","PSODOSUN",17,0)
 S PSODLQT=0 K PSOCPXRR
"RTN","PSODOSUN",18,0)
 D EN^PSODOSU2
"RTN","PSODOSUN",19,0)
END ;
"RTN","PSODOSUN",20,0)
 I $G(PSORX("DFLG")) Q 0
"RTN","PSODOSUN",21,0)
 I '$G(PSODLALZ),'$G(PSODLFLG),'$G(PSODLERR),'$G(PSODLOFF) Q 0
"RTN","PSODOSUN",22,0)
 I '$G(PSODLFLG) W !
"RTN","PSODOSUN",23,0)
 K PSODAILY,DIR,Y,PSODOSEX
"RTN","PSODOSUN",24,0)
 D PROMPT Q:$G(PSORX("DFLG"))!$G(PSOQTOUT)!$G(PSODLQT) 1
"RTN","PSODOSUN",25,0)
 I '$G(PSODLINS)&('$G(PSODLINR))&('$G(PSODLINX)) Q 0
"RTN","PSODOSUN",26,0)
 I $D(^XUSEC("PSORPH",DUZ)) D  I Y'=1!($D(DTOUT))!($D(DUOUT))!($G(PSRX("DFLG"))) S PSODOSEX=1 S:$G(PSOREINS) PSOQUIT=1 Q 1
"RTN","PSODOSUN",27,0)
 .S DIR("B")="Y",DIR(0)="Y",DIR("A")="Do you want to Continue" D ^DIR K DIR
"RTN","PSODOSUN",28,0)
 I '$G(PSODLINS)&'$G(PSODLINR)&('$G(PSODLINX)) Q 0
"RTN","PSODOSUN",29,0)
 I '$D(^XUSEC("PSORPH",DUZ)) Q 2_"^"_$$EVAL(PSODLINS,PSODLINR,PSODLINX)
"RTN","PSODOSUN",30,0)
 W !!,"Do you want to Process or Cancel medication?" K DIR,Y S DIR("B")="P",DIR(0)="SA^1:PROCESS MEDICATION;0:CANCEL MEDICATION"
"RTN","PSODOSUN",31,0)
 S DIR("A")=$$GETGN^PSODOSUN(PSODRUG("IEN"))_": "  K ^TMP($J,"PSODOSUN GN")
"RTN","PSODOSUN",32,0)
 S DIR("?",1)="Enter '1' or 'P' to Process medication",DIR("?")="      '^' to EXIT",DIR("?",2)="      '0' or 'C' to Cancel Medication"
"RTN","PSODOSUN",33,0)
 D ^DIR K DIR
"RTN","PSODOSUN",34,0)
 I Y'=1!($D(DTOUT))!($D(DUOUT)) S PSODOSEX=1 S:$G(PSOREINS) PSOQUIT=1 Q 1
"RTN","PSODOSUN",35,0)
 ;need to know if user cancelled or not
"RTN","PSODOSUN",36,0)
 I Y=0 Q 3_"^"_$S($G(PSODLINS)&($G(PSODLINR)):"MAX SINGLE DOSE & MAX DAILY DOSE",$G(PSODLINS):"MAX SINGLE DOSE",$G(PSODLINR):"MAX DAILY DOSE",$G(PSODLINX):"MAX SINGLE DOSE & MAX DAILY DOSE",1:"UNKNOWN")
"RTN","PSODOSUN",37,0)
 K PSODOSEX
"RTN","PSODOSUN",38,0)
 S PSOSIGC=0
"RTN","PSODOSUN",39,0)
SIG1 ;
"RTN","PSODOSUN",40,0)
 D SIG^XUSESIG
"RTN","PSODOSUN",41,0)
 I 'PSOSIGC&($G(X1)="") D MSG1 S PSOSIGC=PSOSIGC+1 G SIG1
"RTN","PSODOSUN",42,0)
 I $G(X1)="" D MSG2 Q 1
"RTN","PSODOSUN",43,0)
END2 ;
"RTN","PSODOSUN",44,0)
 I $G(PSORX("DFLG")) Q 0
"RTN","PSODOSUN",45,0)
 Q 2_"^"_$S($G(PSODLINS)&($G(PSODLINR)):"MAX SINGLE DOSE & MAX DAILY DOSE",$G(PSODLINS):"MAX SINGLE DOSE",$G(PSODLINR):"MAX DAILY DOSE",$G(PSODLINX):"MAX SINGLE DOSE & MAX DAILY DOSE",1:"UNKNOWN")
"RTN","PSODOSUN",46,0)
 ;
"RTN","PSODOSUN",47,0)
EVAL(PSODLINS,PSODLINR,PSODLINX) ;
"RTN","PSODOSUN",48,0)
 Q $S($G(PSODLINS)&($G(PSODLINR)):"MAX SINGLE DOSE & MAX DAILY DOSE",$G(PSODLINS):"MAX SINGLE DOSE",$G(PSODLINR):"MAX DAILY DOSE",$G(PSODLINX):"MAX SINGLE DOSE & MAX DAILY DOSE",1:"UNKNOWN")
"RTN","PSODOSUN",49,0)
 ;
"RTN","PSODOSUN",50,0)
DOSEX(PSODLXNT) ;Write Dose exceptions for order entry/edit
"RTN","PSODOSUN",51,0)
 N PSODLINS,PSODLINR,PSODLINX,PSODLERA,PSODLERB,PSODLERF,PSODLERZ,PSODLPL,PSODLP1,PSODLMSG,DIR,DUOUT,DTOUT,DIROUT,DIRUT,X,Y,X1
"RTN","PSODOSUN",52,0)
 N PSODLNN1,PSODLERX,PSODLQT,PSODELNX,PSODTYPE,PSODCONT,PSODSEQ,PSODOSX,PSODLOFF,PSOINTRO,PSOEXCPT,PSOERROR
"RTN","PSODOSUN",53,0)
 W @IOF S (PSODLERF,PSODLERZ,PSODLINS,PSODLINR,PSODLINX,PSODLQT,PSODCONT,PSODLOFF,PSOINTRO,PSOEXCPT,PSOERROR)=0,PSODTYPE="E"
"RTN","PSODOSUN",54,0)
 I $G(PSOEDDOS) Q:$G(PSORXED("CONJUNCTION",1))="" 0  ;don't show messages when simple order before accept of order during edits
"RTN","PSODOSUN",55,0)
 I PSOCPXB>3,$G(PSORXED)&$G(PSOEDDOS) S PSOCPXC=0  ;don't show summary before accept of order if edit
"RTN","PSODOSUN",56,0)
 I $P($G(^TMP($J,"PSOPDOSN","OUT",0)),"^")=-1 D  S PSODLFLG=0,PSODLOFF=1 G ENDX
"RTN","PSODOSUN",57,0)
 .D HD N X,DIWL,DIWR,DIWF,PSODELXR,PSODELXF D MESG
"RTN","PSODOSUN",58,0)
 .S X="Reason(s): "_$P(^TMP($J,"PSOPDOSN","OUT",0),"^",2),DIWL=1,DIWR=76 K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSUN",59,0)
 .S PSODELXF=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D HD W:PSODELXF&('PSODLQT) ! D HD W:'PSODLQT "   "_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S PSODELXF=1
"RTN","PSODOSUN",60,0)
 .K ^UTILITY($J,"W")
"RTN","PSODOSUN",61,0)
 D EN^PSODOSU2
"RTN","PSODOSUN",62,0)
ENDX ;
"RTN","PSODOSUN",63,0)
 S PSODOSX=1
"RTN","PSODOSUN",64,0)
 I $G(PSORX("DFLG")) Q 0
"RTN","PSODOSUN",65,0)
 K PSOCPXRR
"RTN","PSODOSUN",66,0)
 I '$G(PSODLALZ),'$G(PSODLFLG),'$G(PSODLERR),'$G(PSODLOFF) Q 0
"RTN","PSODOSUN",67,0)
 ;
"RTN","PSODOSUN",68,0)
 ;This "return to continue" occurs after the last dosing sequence for a complex order with 4 or more dosing sequences during an edit when finishing, placing a new order, copy or edit
"RTN","PSODOSUN",69,0)
 ;
"RTN","PSODOSUN",70,0)
 I '$G(PSOCKCON)&($G(PSOFOERR)) D  I $G(PSOQTOUT) Q 0
"RTN","PSODOSUN",71,0)
 .Q:($G(PSODLFLG))&$D(^XUSEC("PSORPH",DUZ))  ;messages need the "do you want to continue" prompt instead but need to evaluate here so that it doesn't show up for edits
"RTN","PSODOSUN",72,0)
 .D RETURN
"RTN","PSODOSUN",73,0)
 Q:$G(PSORX("DFLG"))!$G(PSOQTOUT)!$G(PSODLQT) 1
"RTN","PSODOSUN",74,0)
 ;
"RTN","PSODOSUN",75,0)
 I '$G(PSOFOERR) D  I $G(PSOQTOUT) Q 0
"RTN","PSODOSUN",76,0)
 .Q:$G(PSODLFLG)&$D(^XUSEC("PSORPH",DUZ))
"RTN","PSODOSUN",77,0)
 .I '$G(PSOEDIT) Q:$G(PSODOSNW)&'$G(PSOCPXD)&'$G(PSOCOPY)
"RTN","PSODOSUN",78,0)
 .Q:($G(PSOCOPY)!$G(PSOEDIT))&'$G(PSOCPXV)
"RTN","PSODOSUN",79,0)
 .Q:PSOCPXB>3&$G(PSOCPXV)
"RTN","PSODOSUN",80,0)
 .D RETURN
"RTN","PSODOSUN",81,0)
 Q:$G(PSORX("DFLG"))!$G(PSOQTOUT)!$G(PSODLQT) 1
"RTN","PSODOSUN",82,0)
 ;
"RTN","PSODOSUN",83,0)
 I '$G(PSODLFLG) W !
"RTN","PSODOSUN",84,0)
 I '$D(^XUSEC("PSORPH",DUZ)),$G(PSODLINS)!($G(PSODLINR))!($G(PSODLINX)),$G(PSODLFLG) Q 2_"^"_$$EVAL(PSODLINS,PSODLINR,PSODLINX)
"RTN","PSODOSUN",85,0)
 I 'PSODCONT Q:$G(PSOCPXV) 0
"RTN","PSODOSUN",86,0)
 I $G(PSODLBD4)&'$G(PSODLINS)&'$G(PSODLINR)&'$G(PSODLINX)&('$G(PSODLALZ)) S Y=1 G ENDX2
"RTN","PSODOSUN",87,0)
 K DIR,Y I $D(^XUSEC("PSORPH",DUZ)) S DIR("B")="Y",DIR(0)="Y",DIR("A")="Do you want to Continue" D ^DIR K DIR I Y'=1!($D(DTOUT))!($D(DUOUT)) S PSODOSEX=1 S:$G(PSOREINS) PSOQUIT=1 Q 1
"RTN","PSODOSUN",88,0)
ENDX2 ;
"RTN","PSODOSUN",89,0)
 K PSODOSEX
"RTN","PSODOSUN",90,0)
 W !
"RTN","PSODOSUN",91,0)
 Q 0
"RTN","PSODOSUN",92,0)
DOSEZ() ;Write Dose output summary for complex orders
"RTN","PSODOSUN",93,0)
 I $G(PSOEDDOS) Q:$G(PSORXED("CONJUNCTION",1))="" 0  ;don't show messages when simple order before accept of order during edits
"RTN","PSODOSUN",94,0)
 N PSOCPXF,PSOCPXC,PSOCPXRR,PSOCPXG,PSODLESM,PSODELNX,PSOCPXH,PSODTYPE,PSOLASTS,PSOLASTD,PSOQTOUT,PSOEDOUT,PSODSEQ
"RTN","PSODOSUN",95,0)
 N PSODLINS,PSODLINR,PSODLINX,PSODLERA,PSODLERB,PSODLERF,PSODLERZ,PSODLPL,PSODLP1,PSODLMSG,DIR,DUOUT,DTOUT,DIROUT,DIRUT,X,Y,X1
"RTN","PSODOSUN",96,0)
 N PSODLNN1,PSODLERX,PSODLQT,PSODLEXR,PSODLECT,PSODLOFF,PSOINTRO,PSOEXCPT,PSOERROR
"RTN","PSODOSUN",97,0)
 I '$G(PSOTOF) W @IOF
"RTN","PSODOSUN",98,0)
 S (PSODLERF,PSODLERZ,PSODLINS,PSODLINR,PSODLINX,PSOCPXF,PSODLQT,PSOCPXH,PSOLASTS,PSOLASTD,PSOQTOUT,PSOEDOUT,PSODLOFF,PSOINTRO,PSOEXCPT,PSOERROR)=0,PSODTYPE="C",PSOCPXC=1
"RTN","PSODOSUN",99,0)
 I $G(PSORX("EDIT"))!($G(PSORXED)&$G(PSOEDDOS))!($G(PSOCOPY)&$G(PSODLBD4)) S PSOEDOUT=1
"RTN","PSODOSUN",100,0)
 I PSOCPXB>3,$G(PSOEDOUT) S PSOCPXC=0
"RTN","PSODOSUN",101,0)
 ;I PSOCPXB>3,$G(PSOEDDOS) S PSOCPXC=0  ;don't show summary before accept of order if edit
"RTN","PSODOSUN",102,0)
 I $G(PSOCPXB)<4 S PSOCPXC=0
"RTN","PSODOSUN",103,0)
 Q:$G(PSOCPXB)<4&'$G(PSOFOERR)&('$G(PSODLFLG)) 0
"RTN","PSODOSUN",104,0)
 I $P($G(^TMP($J,"PSOPDOSN","OUT",0)),"^")=-1 S PSODLQT=1 D  S PSODLFLG=0,PSODLOFF=1 G ENDZ
"RTN","PSODOSUN",105,0)
 .D:PSOCPXC HD W:'PSODLQT&(PSOCPXC) !! N X,DIWL,DIWR,DIWF,PSODELXR,PSODELXF D MESG
"RTN","PSODOSUN",106,0)
 .S X="Reason(s): "_$P(^TMP($J,"PSOPDOSN","OUT",0),"^",2),DIWL=1,DIWR=76 K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSUN",107,0)
 .S PSODELXF=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D:PSOCPXC HD W:PSODELXF&('PSODLQT)&(PSOCPXC) ! D:PSOCPXC HD W:'PSODLQT&(PSOCPXC) "   "_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S PSODELXF=1
"RTN","PSODOSUN",108,0)
 .K ^UTILITY($J,"W")
"RTN","PSODOSUN",109,0)
 D EN^PSODOSU2
"RTN","PSODOSUN",110,0)
ENDZ ;
"RTN","PSODOSUN",111,0)
 I $G(PSORX("DFLG")) Q 0
"RTN","PSODOSUN",112,0)
 K PSODAILY
"RTN","PSODOSUN",113,0)
 I '$G(PSODLALZ),'$G(PSODLFLG),'$G(PSODLERR),'$G(PSODLOFF) Q 0
"RTN","PSODOSUN",114,0)
 D PROMPT Q:$G(PSORX("DFLG"))!$G(PSOQTOUT)!$G(PSODLQT) 0
"RTN","PSODOSUN",115,0)
 I '$G(PSODLINS)&('$G(PSODLINR))&('$G(PSODLINX)) Q 0
"RTN","PSODOSUN",116,0)
 I '$G(PSOCPXF)&(PSOLASTS'=PSOCPXB),PSOEDOUT Q 0
"RTN","PSODOSUN",117,0)
 K PSODOSEX
"RTN","PSODOSUN",118,0)
 I $D(^XUSEC("PSORPH",DUZ)) D  I Y'=1!($D(DTOUT))!($D(DUOUT))!($G(PSRX("DFLG"))) S PSODOSEX=1 S:$G(PSOREINS) PSOQUIT=1 Q 1
"RTN","PSODOSUN",119,0)
 .K DIR,Y S DIR("B")="Y",DIR(0)="Y",DIR("A")="Do you want to Continue" D ^DIR K DIR
"RTN","PSODOSUN",120,0)
ENDZC ;
"RTN","PSODOSUN",121,0)
 I '$G(PSODLINS)&('$G(PSODLINR))&('$G(PSODLINX)) Q 0
"RTN","PSODOSUN",122,0)
 I '$D(^XUSEC("PSORPH",DUZ)),$G(PSODLINS)!($G(PSODLINR))!($G(PSODLINX)) Q 2_"^"_$$EVAL(PSODLINS,PSODLINR,PSODLINX)
"RTN","PSODOSUN",123,0)
 G ENDZ2:$G(PSORX("EDIT"))!($G(PSORXED)&$G(PSOEDDOS))!($G(PSOCOPY)&$G(PSODLBD4))
"RTN","PSODOSUN",124,0)
 W !!,"Do you want to Process or Cancel medication?" K DIR,Y S DIR("B")="P",DIR(0)="SA^1:PROCESS MEDICATION;0:CANCEL MEDICATION"
"RTN","PSODOSUN",125,0)
 S DIR("A")=$$GETGN(PSODRUG("IEN"))_": "  K ^TMP($J,"PSODOSUN GN")
"RTN","PSODOSUN",126,0)
 S DIR("?",1)="Enter '1' or 'P' to Process medication",DIR("?")="      '^' to EXIT",DIR("?",2)="      '0' or 'C' to Cancel Medication"
"RTN","PSODOSUN",127,0)
 D ^DIR K DIR,PSODOSEX
"RTN","PSODOSUN",128,0)
 I Y'=1!($D(DTOUT))!($D(DUOUT)) S PSODOSEX=1 S:$G(PSOREINS) PSOQUIT=1 Q 1
"RTN","PSODOSUN",129,0)
 S PSOSIGC=0
"RTN","PSODOSUN",130,0)
SIG2 ;
"RTN","PSODOSUN",131,0)
 D SIG^XUSESIG
"RTN","PSODOSUN",132,0)
 I 'PSOSIGC&($G(X1)="") D MSG1 S PSOSIGC=PSOSIGC+1 G SIG2
"RTN","PSODOSUN",133,0)
 I $G(X1)="" D MSG2 Q 1
"RTN","PSODOSUN",134,0)
ENDZ2 ;
"RTN","PSODOSUN",135,0)
 I $G(PSORX("DFLG")) Q 0
"RTN","PSODOSUN",136,0)
 Q 2_"^"_$S($G(PSODLINS)&($G(PSODLINR)):"MAX SINGLE DOSE & MAX DAILY DOSE",$G(PSODLINS):"MAX SINGLE DOSE",$G(PSODLINR):"MAX DAILY DOSE",$G(PSODLINX):"MAX SINGLE DOSE & MAX DAILY DOSE",1:"UNKNOWN")
"RTN","PSODOSUN",137,0)
HD ;
"RTN","PSODOSUN",138,0)
 I PSODLQT!(($Y+5)'>IOSL) Q
"RTN","PSODOSUN",139,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","PSODOSUN",140,0)
 I $D(^XUSEC("PSORPH",DUZ)) D  I Y'=1!($D(DTOUT))!($D(DUOUT)) S PSODOSEX=1 S:$G(PSOREINS) PSOQUIT=1,PSORX("DFLG")=1 Q 1
"RTN","PSODOSUN",141,0)
 .K DIR,Y S DIR("B")="Y",DIR(0)="Y",DIR("A")="Do you want to Continue" D ^DIR K DIR
"RTN","PSODOSUN",142,0)
 W @IOF W !
"RTN","PSODOSUN",143,0)
 Q
"RTN","PSODOSUN",144,0)
MESG ;Write out System error heading
"RTN","PSODOSUN",145,0)
 I 'PSODLQT D HD W !,"Dosing Checks could not be performed.",!
"RTN","PSODOSUN",146,0)
 Q
"RTN","PSODOSUN",147,0)
GETGN(PSODRIEN) ;get generic name
"RTN","PSODOSUN",148,0)
 K ^TMP($J,"PSODOSUN GN")
"RTN","PSODOSUN",149,0)
 D DATA^PSS50(PSODRIEN,,,,,"PSODOSUN GN")
"RTN","PSODOSUN",150,0)
 Q $S($D(^TMP($J,"PSODOSUN GN",PSODRIEN,.01)):^TMP($J,"PSODOSUN GN",PSODRIEN,.01),1:"")
"RTN","PSODOSUN",151,0)
 ;
"RTN","PSODOSUN",152,0)
PROMPT ;
"RTN","PSODOSUN",153,0)
 ;assumes that a previous check was made to verify that errors, exceptions or messages are present
"RTN","PSODOSUN",154,0)
 ;if only warnings (exceptions/errors) then display "Press return to continue"; otherwise display "Do you want to continue" prompt.
"RTN","PSODOSUN",155,0)
 ;FINISH and BACKDOOR are separated below in order keep to a mininum the vast number of scenarios to be tested
"RTN","PSODOSUN",156,0)
 I $G(PSODLOFF)&(($Y+5)>IOSL) D RETURN Q
"RTN","PSODOSUN",157,0)
 I $G(PSOFOERR) D  ;FINISH
"RTN","PSODOSUN",158,0)
 .Q:$D(^XUSEC("PSORPH",DUZ))&('$G(PSORENWD))
"RTN","PSODOSUN",159,0)
 .I '$G(PSODLFLG) D
"RTN","PSODOSUN",160,0)
 ..Q:'$G(PSOEDOUT)&$D(^XUSEC("PSORPH",DUZ))&('$G(PSORENWD))  ;messages need the "do you want to continue" prompt instead but need to evaluate here so that it doesn't show up for edits
"RTN","PSODOSUN",161,0)
 ..I '$G(PSORENWD) Q:PSOCPXB<4&('$G(PSODOSX))
"RTN","PSODOSUN",162,0)
 ..D RETURN
"RTN","PSODOSUN",163,0)
 ;
"RTN","PSODOSUN",164,0)
 I '$G(PSOFOERR)&'$G(PSODLFLG) D  ;BACKDOOR
"RTN","PSODOSUN",165,0)
 .Q:'$G(PSOEDOUT)&$D(^XUSEC("PSORPH",DUZ))&('$G(PSORENWD))  ;messages need the "do you want to continue" prompt instead but need to evaluate here so that it doesn't show up for edits
"RTN","PSODOSUN",166,0)
 .I '$G(PSORENWD),('$D(^XUSEC("PSORPH",DUZ))&'$G(PSODCAN)) Q:PSOCPXB<4&('$G(PSODOSX))
"RTN","PSODOSUN",167,0)
 .D RETURN
"RTN","PSODOSUN",168,0)
 ;
"RTN","PSODOSUN",169,0)
 I $G(PSODLFLG)&'$D(^XUSEC("PSORPH",DUZ)) D
"RTN","PSODOSUN",170,0)
 .I '$G(PSORENWD),('$D(^XUSEC("PSORPH",DUZ))&'$G(PSODCAN)) Q:PSOCPXB<4&('$G(PSODOSX))
"RTN","PSODOSUN",171,0)
 .D RETURN
"RTN","PSODOSUN",172,0)
 Q
"RTN","PSODOSUN",173,0)
 ;
"RTN","PSODOSUN",174,0)
RETURN ;
"RTN","PSODOSUN",175,0)
 Q:'$D(^XUSEC("PSORPH",DUZ))&($Y<10)
"RTN","PSODOSUN",176,0)
 W ! K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue,'^' to exit" D ^DIR K DIR  S:'Y PSODLQT=1,PSOQTOUT=1,PSORX("DFLG")=1 W @IOF
"RTN","PSODOSUN",177,0)
 Q
"RTN","PSODOSUN",178,0)
 ;
"RTN","PSODOSUN",179,0)
HD3(PSOLINES,OVRRID) ;
"RTN","PSODOSUN",180,0)
 N X,Y,DTOUT,DUOUT,DIR
"RTN","PSODOSUN",181,0)
 S:'$G(PSODLQT) PSODLQT=0  S:'$G(OVRRID) OVRRID=0 S:'$G(PSOLINES) PSOLINES=5
"RTN","PSODOSUN",182,0)
 I '$G(OVRRID),$G(PSODLQT)!(($Y+PSOLINES)<IOSL) Q
"RTN","PSODOSUN",183,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y W ! K DIR,Y S DIR(0)="E",DIR("A")="Press return to continue" D ^DIR K DIR,PSOLINES,OVRRID
"RTN","PSODOSUN",184,0)
 I Y'=1!($D(DTOUT))!($D(DUOUT)) S PSODLQT=1,PSORX("DFLG")=1 Q
"RTN","PSODOSUN",185,0)
 W @IOF
"RTN","PSODOSUN",186,0)
 Q
"RTN","PSODOSUN",187,0)
 ;
"RTN","PSODOSUN",188,0)
MSG1 ;
"RTN","PSODOSUN",189,0)
 W !!,"  *** You must enter your Current Signature Code. ***"
"RTN","PSODOSUN",190,0)
 Q
"RTN","PSODOSUN",191,0)
MSG2 ;
"RTN","PSODOSUN",192,0)
 W !!,"  *** A Signature Code must be entered to continue with this order. ***",!
"RTN","PSODOSUN",193,0)
MSG3 ;
"RTN","PSODOSUN",194,0)
 N MSGX,DIR
"RTN","PSODOSUN",195,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press <Enter> to return to the order..." D ^DIR
"RTN","PSODOSUN",196,0)
 S PSODLQT=1,PSOQTOUT=1,PSORX("DFLG")=1
"RTN","PSODOSUN",197,0)
 Q
"RTN","PSODOSUN",198,0)
 ;
"RTN","PSODOSUT")
0^6^B149828143
"RTN","PSODOSUT",1,0)
PSODOSUT ;BIR/RTR - PRE Dose Check Utility routine ;11/18/08
"RTN","PSODOSUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**251,375,372,416,436,402,518**;DEC 1997;Build 3
"RTN","PSODOSUT",3,0)
 ;External reference to ^PSSDSAPI supported by DBIA 5425
"RTN","PSODOSUT",4,0)
 ;
"RTN","PSODOSUT",5,0)
 ;DOSE expect PSODLQT to be defined prior to calling it.
"RTN","PSODOSUT",6,0)
 ; PSODLQT=1 means no data will be written to the screen, but a value will be returned.
"RTN","PSODOSUT",7,0)
 ; PSODLQT=0 means data will be written to the screen and a value is returned 
"RTN","PSODOSUT",8,0)
 ;
"RTN","PSODOSUT",9,0)
 ;EVAL(PSODLINS,PSODLINR) ;
"RTN","PSODOSUT",10,0)
 ;Q $S($G(PSODLINS)&($G(PSODLINR)):"MAX SINGLE DOSE & DAILY DOSE RANGE",$G(PSODLINS):"MAX SINGLE DOSE",$G(PSODLINR):"DAILY DOSE RANGE",1:"UNKNOWN")
"RTN","PSODOSUT",11,0)
 ;
"RTN","PSODOSUT",12,0)
SUMM ;
"RTN","PSODOSUT",13,0)
 I 'PSODLQT W !,"   DOSING CHECK SUMMARY:",!!
"RTN","PSODOSUT",14,0)
 S PSOCPXF=1
"RTN","PSODOSUT",15,0)
 Q
"RTN","PSODOSUT",16,0)
 ;
"RTN","PSODOSUT",17,0)
SUB ;Write sub header; called from PSODOSUN
"RTN","PSODOSUT",18,0)
 D HD^PSODOSU2 Q:$G(PSODLQTC)  I 'PSODLQT,'$G(PSODLEXR) D
"RTN","PSODOSUT",19,0)
 .I '$G(PSOINTRO),$G(PSODLEXR) W ! Q
"RTN","PSODOSUT",20,0)
 .S PSODLEXR=1
"RTN","PSODOSUT",21,0)
 I 'PSODLQT W "   DOSE SEQ "_PSOCPXG_":"
"RTN","PSODOSUT",22,0)
 S PSOCPXRR(PSOCPXG)=1
"RTN","PSODOSUT",23,0)
 Q
"RTN","PSODOSUT",24,0)
 ;
"RTN","PSODOSUT",25,0)
DAILY ;
"RTN","PSODOSUT",26,0)
 Q   ;;removed for Mocha 2.1, might add back for 2.2
"RTN","PSODOSUT",27,0)
 Q:'$G(PSOCPXC)
"RTN","PSODOSUT",28,0)
 I 'PSODLQT W:'$G(PSORENW)!($G(PSOCOPY))!($G(PSORXED)) ! W "   DAILY DOSE RANGE WARNING:"
"RTN","PSODOSUT",29,0)
 S PSODAILY=1
"RTN","PSODOSUT",30,0)
 Q
"RTN","PSODOSUT",31,0)
 ;
"RTN","PSODOSUT",32,0)
COMPLEX ;called from DOSEZ^PSODOSUN
"RTN","PSODOSUT",33,0)
 I 'PSOCPXF&(PSOCPXC) S PSOCPXG=$P(PSODLNN1,";",4) D SUMM K PSODAILY S:PSOCPXC&(PSOCPXG=PSOCPXB) PSOCPXH=1
"RTN","PSODOSUT",34,0)
 I PSOCPXC S PSOCPXG=$P(PSODLNN1,";",4) D HD D
"RTN","PSODOSUT",35,0)
 .I $G(PSOCPXRR(PSOCPXG))&$P(PSODLNN1,";",5)'="" K PSODAILY
"RTN","PSODOSUT",36,0)
 .I '$G(PSOCPXRR(PSOCPXG))&('$G(PSOCPXH)) D SUB I $G(PSOCOPY)!($G(PSORENW)) S:PSOCPXC&(PSOCPXG=PSOCPXB) PSOCPXH=1
"RTN","PSODOSUT",37,0)
 .;I PSODLPL="2_RANGE"&PSODLINR&'$G(PSODAILY) D DAILY          ;removed for Mocha 2.1, might add back for 2.2
"RTN","PSODOSUT",38,0)
 .;I PSODLPL="1_SINGLE_RANGE"&PSODLINX&'$G(PSODAILY) D DAILY   ;removed for Mocha 2.1, might add back for 2.2
"RTN","PSODOSUT",39,0)
 .D HD W:'PSODLQT ! N X,DIWL,DIWR,DIWF S X=PSODLMSG,DIWL=1,DIWR=76 K ^UTILITY($J,"W") D ^DIWP
"RTN","PSODOSUT",40,0)
 .N PSODELXF,PSODELXR S PSODELXF=0 F PSODELXR=0:0 S PSODELXR=$O(^UTILITY($J,"W",DIWL,PSODELXR)) Q:'PSODELXR  D HD W:PSODELXF&('PSODLQT) ! D HD W:'PSODLQT "   "_$G(^UTILITY($J,"W",DIWL,PSODELXR,0)) S PSODELXF=1
"RTN","PSODOSUT",41,0)
 .K ^UTILITY($J,"W")
"RTN","PSODOSUT",42,0)
 .D HD I 'PSODLQT S PSODELNX=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1)) I '$P($G(PSODELNX),";",5)!($P($G(PSODELNX),";",4)'=PSOCPXG) W !
"RTN","PSODOSUT",43,0)
 Q
"RTN","PSODOSUT",44,0)
 ;
"RTN","PSODOSUT",45,0)
HD ;
"RTN","PSODOSUT",46,0)
 I $G(PSODLQT)!(($Y+5)<IOSL)!($G(PSORX("DFLG"))) Q
"RTN","PSODOSUT",47,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","PSODOSUT",48,0)
 W ! K DIR,Y S DIR(0)="E",DIR("A")="Press Return to continue,'^' to exit" D ^DIR K DIR I 'Y!($D(DTOUT))!($D(DUOUT))!($G(DIRUT)) S PSODLQT=1,PSONEW("DFLG")=1,PSORX("DFLG")=1 Q
"RTN","PSODOSUT",49,0)
 W @IOF
"RTN","PSODOSUT",50,0)
 Q
"RTN","PSODOSUT",51,0)
 ;
"RTN","PSODOSUT",52,0)
SFD ;
"RTN","PSODOSUT",53,0)
 S PSODELXF=1 S:PSODLERX="TEXT" PSODLERZ=1
"RTN","PSODOSUT",54,0)
 Q
"RTN","PSODOSUT",55,0)
 ;
"RTN","PSODOSUT",56,0)
SBAD ;Set Bad Drug flag just in case not set in enhanced check, possibly because Dosage edits are done first
"RTN","PSODOSUT",57,0)
 N PSODLBD1,PSODLBD3
"RTN","PSODOSUT",58,0)
 I PSODLERB["GCNSEQNO"!(PSODLERB["Drug not matched to NDF") D
"RTN","PSODOSUT",59,0)
 .S PSODLBD1=$O(^TMP($J,"PSOPDOSA","OUT","EXCEPTIONS","DOSE",PSODSEQ,PSODLNN1,"")) I PSODLBD1 D
"RTN","PSODOSUT",60,0)
 ..S PSODLBD3=$P($G(^TMP($J,"PSOPDOSA","OUT","EXCEPTIONS","DOSE",PSODSEQ,PSODLNN1,PSODLBD1)),"^",3) I PSODLBD3 S PSODRUG("BAD",PSODLBD3)=1
"RTN","PSODOSUT",61,0)
 Q
"RTN","PSODOSUT",62,0)
 ;
"RTN","PSODOSUT",63,0)
EXCEPT ;don't show "not matched to NDF" or "no GCNSEQNO" errors for dosing - when dosage is edited enhanced order checks are performed again so we don't want to display these type messages for dosing.
"RTN","PSODOSUT",64,0)
 N PSODLER1,PSODLER2,PSODLER3
"RTN","PSODOSUT",65,0)
 F PSODLER1=0:0 S PSODLER1=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"EXCEPTIONS",PSODLER1)) Q:'PSODLER1  D
"RTN","PSODOSUT",66,0)
 .S PSODLER2=$G(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"EXCEPTIONS",PSODLER1))
"RTN","PSODOSUT",67,0)
 .I PSODLER2["Drug not matched to NDF"!(PSODLER2["GCNSEQNO") D
"RTN","PSODOSUT",68,0)
 .. S PSODLER3="" F PSODLER3=PSODLER1-1:1:PSODLER1 K ^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"EXCEPTIONS",PSODLER3)
"RTN","PSODOSUT",69,0)
 Q
"RTN","PSODOSUT",70,0)
 ;
"RTN","PSODOSUT",71,0)
FEED() ; Write Line feed after Exceptions if no message globals follow, and next order has no errors or exceptions, only a message
"RTN","PSODOSUT",72,0)
 I PSODLQT Q 0
"RTN","PSODOSUT",73,0)
 N PSODLNN2
"RTN","PSODOSUT",74,0)
 I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1,"MESSAGE")) Q 0
"RTN","PSODOSUT",75,0)
 S PSODLNN2=$O(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN1))
"RTN","PSODOSUT",76,0)
 I PSODLNN2="" Q 0
"RTN","PSODOSUT",77,0)
 I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN2,"ERROR")) Q 0
"RTN","PSODOSUT",78,0)
 I $D(^TMP($J,"PSOPDOSN","OUT",PSODSEQ,PSODLNN2,"EXCEPTIONS")) Q 0
"RTN","PSODOSUT",79,0)
 Q 1
"RTN","PSODOSUT",80,0)
 ;
"RTN","PSODOSUT",81,0)
DCHKN ;Called from PSOORNEW, PSOORNE1 & PSOORNEW; Dose Check for Copying an Order
"RTN","PSODOSUT",82,0)
 N PSOGENF
"RTN","PSODOSUT",83,0)
 S PSOGENF=0
"RTN","PSODOSUT",84,0)
 F PSOCPXA=0:0 S PSOCPXA=$O(PSONEW("DOSE",PSOCPXA)) Q:'PSOCPXA  S PSOCPXB=PSOCPXB+1
"RTN","PSODOSUT",85,0)
 D FIN^PSODOSCL(.PSODLBS1,.PSONEW,.PSODRUG)
"RTN","PSODOSUT",86,0)
 S PSODLNVL=$$DOSE^PSODOSUN K ^TMP($J,"PSOPDOSN") K ^TMP($J,"PSOPDOSA")
"RTN","PSODOSUT",87,0)
 I $P($G(PSODLNVL),"^")=1 S PSORX("DFLG")=1 Q
"RTN","PSODOSUT",88,0)
 I '$G(PSODLNVL) Q
"RTN","PSODOSUT",89,0)
 I '$D(^XUSEC("PSORPH",DUZ)) S:$P($G(PSODLNVL),"^") ^TMP("PSODOSF",$J,0)=1 Q
"RTN","PSODOSUT",90,0)
 S PSODLNVT=$P(PSODLNVL,"^",2)
"RTN","PSODOSUT",91,0)
 I +PSODLNVL=3 S PSORX("DFLG")=1 Q
"RTN","PSODOSUT",92,0)
 ;I +PSODLNVL=3 D CANCEL(PSONEW("OIRXN")) Q  ;CR2724
"RTN","PSODOSUT",93,0)
 I +$G(PSOGENF) Q  ;Do not do intervention on a single General Dose message.
"RTN","PSODOSUT",94,0)
 I $$EN3^PSORXI(PSODLNVT) W !!,"Unable to log intervention, cannot find intervention type.",! K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSODOSUT",95,0)
 Q
"RTN","PSODOSUT",96,0)
 ;
"RTN","PSODOSUT",97,0)
DCHKR ;Renewal Dose Check; Called from PSORENW0
"RTN","PSODOSUT",98,0)
 N PSOGENF
"RTN","PSODOSUT",99,0)
 S PSOGENF=0
"RTN","PSODOSUT",100,0)
 F PSOCPXA=0:0 S PSOCPXA=$O(PSORENW("DOSE",PSOCPXA)) Q:'PSOCPXA  S PSOCPXB=PSOCPXB+1
"RTN","PSODOSUT",101,0)
 D FIN^PSODOSCL(.PSODLBS1,.PSORENW,.PSODRUG)
"RTN","PSODOSUT",102,0)
 S PSODLNVL=$$DOSE^PSODOSUN
"RTN","PSODOSUT",103,0)
 I '$D(^XUSEC("PSORPH",DUZ)) S:$P($G(PSODLNVL),"^") ^TMP("PSODOSF",$J,0)=1
"RTN","PSODOSUT",104,0)
 K ^TMP($J,"PSOPDOSN") K ^TMP($J,"PSOPDOSA") I $P($G(PSODLNVL),"^")=1 S PSORX("DFLG")=1 Q
"RTN","PSODOSUT",105,0)
 D DOSIV
"RTN","PSODOSUT",106,0)
 Q
"RTN","PSODOSUT",107,0)
 ;
"RTN","PSODOSUT",108,0)
DCHKC ;Dose Check on reinstate; Called from PSOCAN2
"RTN","PSODOSUT",109,0)
 N PSODCAN,PSOGENF
"RTN","PSODOSUT",110,0)
 S PSOGENF=0
"RTN","PSODOSUT",111,0)
 I '$D(PSODRUG("IEN")) S:$D(PSORENW("OIRXN")) PSODRUG("IEN")=$$GET1^DIQ(52,PSORENW("OIRXN"),6,"I")
"RTN","PSODOSUT",112,0)
 S PSOCPXB=0 F PSOCPXA=0:0 S PSOCPXA=$O(^PSRX(PSORENW("OIRXN"),6,PSOCPXA)) Q:'PSOCPXA  I $P($G(^PSRX(PSORENW("OIRXN"),6,PSOCPXA,0)),"^")'="" S PSOCPXB=PSOCPXB+1
"RTN","PSODOSUT",113,0)
 D RX^PSODOSCL(.PSODLBS1,PSORENW("OIRXN"))
"RTN","PSODOSUT",114,0)
 S PSODLNNN=PSORENW("OIRXN"),PSODCAN=1
"RTN","PSODOSUT",115,0)
 S PSODLNVL=$$DOSE^PSODOSUN K ^TMP($J,"PSOPDOSN"),^TMP($J,"PSOPDOSA")
"RTN","PSODOSUT",116,0)
 I $P($G(PSODLNVL),"^")=1 S PSORX("DFLG")=1 Q
"RTN","PSODOSUT",117,0)
 D DOSIV
"RTN","PSODOSUT",118,0)
 I +PSODLNVL=3 S PSORX("DFLG")=1
"RTN","PSODOSUT",119,0)
 Q
"RTN","PSODOSUT",120,0)
 ;
"RTN","PSODOSUT",121,0)
DCHK() ;Dose check after entering Null at the conjunction prompt
"RTN","PSODOSUT",122,0)
 ;For complex Dosing, they will eventually enter null too, so change to call if it was not a complex order, and null was entered
"RTN","PSODOSUT",123,0)
 N PSODONOF S PSODONOF="" D DOSEOFF Q:'+PSODONOF 0
"RTN","PSODOSUT",124,0)
 Q:$G(PSORX("DFLG")) 0
"RTN","PSODOSUT",125,0)
 ;D HD:(($Y+5)>IOSL) Q:$G(PSORX("DFLG")) 0
"RTN","PSODOSUT",126,0)
 N PSODLNNN,PSODLENT,PSODLNVL,PSODLNVT,X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,PSODLBS1,PSODLENT,PSOCPXA,PSOCPXV,PSOTOF,PSOCPXB,PSOGENF,PSOEDDOS
"RTN","PSODOSUT",127,0)
 S PSOGENF=0
"RTN","PSODOSUT",128,0)
 I $G(PSOEDIT) S PSOEDDOS=1
"RTN","PSODOSUT",129,0)
 ;Need to make sure Drug Name is what you set in the API
"RTN","PSODOSUT",130,0)
 ;Either pass in name here, or set in PSODOSCL to array name that PSSDSAPD uses, which is still the .01 of File 50
"RTN","PSODOSUT",131,0)
 I $$EXMT^PSSDSAPI(PSODRUG("IEN")) Q 0
"RTN","PSODOSUT",132,0)
 I $G(PSODRUG("BAD",PSODRUG("IEN"))) Q 0
"RTN","PSODOSUT",133,0)
 ;Currently only one prospective drug at a time for Outpatient Dose Check
"RTN","PSODOSUT",134,0)
 ;S PSODLNNN="O;1;PROSPECTIVE;1"
"RTN","PSODOSUT",135,0)
 K ^TMP("PSODOSF",$J)
"RTN","PSODOSUT",136,0)
 K ^TMP($J,"PSOPDOSA") K ^TMP($J,"PSOPDOSN") S PSODLBS1(1)="PSOPDOSA",PSODLBS1(3)="PSOPDOSN"
"RTN","PSODOSUT",137,0)
 D FIN^PSODOSCL(.PSODLBS1,.PSORXED,.PSODRUG)
"RTN","PSODOSUT",138,0)
 S PSODLENT=ENT,PSOCPXV=1,PSOCPXB=0
"RTN","PSODOSUT",139,0)
 S PSOCPXB=0 F PSOCPXA=0:0 S PSOCPXA=$O(PSORXED("DOSE",PSOCPXA)) Q:'PSOCPXA  S PSOCPXB=PSOCPXB+1
"RTN","PSODOSUT",140,0)
 S PSODLNVL=$$DOSEX^PSODOSUN(PSODLENT) S PSOTOF=1 I '$D(^XUSEC("PSORPH",DUZ)) S:$P($G(PSODLNVL),"^") ^TMP("PSODOSF",$J,0)=1
"RTN","PSODOSUT",141,0)
 I $G(PSOEDDOS) D HD:(($Y+5)>IOSL) Q:$G(PSORX("DFLG")) 0
"RTN","PSODOSUT",142,0)
 I $P($G(PSODLNVL),"^")=1 K ^TMP($J,"PSOPDOSA") K ^TMP($J,"PSOPDOSN") Q 1   ;turn of general dosing flag because Intervention is needed
"RTN","PSODOSUT",143,0)
DCHK2 ;Finishing of a complex order
"RTN","PSODOSUT",144,0)
 N PSOCPXC,PSOCPXD
"RTN","PSODOSUT",145,0)
 K PSODLNVL
"RTN","PSODOSUT",146,0)
 S PSOCPXD=1 ;flag for MOCHA 2.0, used to not display enter to continue prompt after errors/exceptions list which displays just after last dose sequence.  MOCHA 2.0 does not display errors or exceptions.
"RTN","PSODOSUT",147,0)
 ;S (PSOCPXB)=0 ;setting PSOCPXB=0 makes dosing summery not display when cycling through individual doses of a complex order.  Dose summary should only show after accept of order.
"RTN","PSODOSUT",148,0)
 S PSODLNVL=$$DOSEZ^PSODOSUN K ^TMP($J,"PSOPDOSA") K ^TMP($J,"PSOPDOSN")
"RTN","PSODOSUT",149,0)
 I $G(PSOEDDOS) D HD:(($Y+5)>IOSL) Q:$G(PSORX("DFLG")) 0
"RTN","PSODOSUT",150,0)
 I $P($G(PSODLNVL),"^")=1 Q 1
"RTN","PSODOSUT",151,0)
 I '$D(^XUSEC("PSORPH",DUZ)) S:$P($G(PSODLNVL),"^")=2 ^TMP("PSODOSF",$J,0)=$$CONVMSG($P(PSODLNVL,"^",2)) W ! Q 0
"RTN","PSODOSUT",152,0)
 I '$G(PSODLNVL) Q 0
"RTN","PSODOSUT",153,0)
 S PSODLNVT=$P(PSODLNVL,"^",2)
"RTN","PSODOSUT",154,0)
 I $D(PSORX("EDIT"))!($G(PSORXED)&$G(PSORXED)&$G(PSOEDDOS))!($G(PSOCOPY)&$G(PSODLBD4)) Q 0
"RTN","PSODOSUT",155,0)
 I +$G(PSOGENF) Q 0  ;Do not do intervention on a single General Dose message.
"RTN","PSODOSUT",156,0)
 I $$EN3^PSORXI(PSODLNVT) W !!,"Unable to log intervention, cannot find intervention type.",! K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSODOSUT",157,0)
 W !
"RTN","PSODOSUT",158,0)
 Q 0
"RTN","PSODOSUT",159,0)
 ;
"RTN","PSODOSUT",160,0)
DCHK1 ;Dose check after entering a value at the Conjunction prompt
"RTN","PSODOSUT",161,0)
 Q:$G(PSORX("DFLG"))!($G(PSODLQT))
"RTN","PSODOSUT",162,0)
 N PSODONOF S PSODONOF="" D DOSEOFF Q:'+PSODONOF
"RTN","PSODOSUT",163,0)
 ;D HD:(($Y+5)>IOSL) Q:$G(PSORX("DFLG"))
"RTN","PSODOSUT",164,0)
 N PSODLNNN,PSODLNVL,PSODLNVT,X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,PSODLBS1,PSODLENT,PSOCPXB,PSOGENF
"RTN","PSODOSUT",165,0)
 S PSOGENF=0
"RTN","PSODOSUT",166,0)
 ;Need to make sure Drug Name is what you set in the API
"RTN","PSODOSUT",167,0)
 ;Either pass in name here, or set in PSODOSCL to array name that PSSDSAPD uses, which is still the .01 of File 50
"RTN","PSODOSUT",168,0)
 I $$EXMT^PSSDSAPI(PSODRUG("IEN")) Q
"RTN","PSODOSUT",169,0)
 I $G(PSODRUG("BAD",PSODRUG("IEN"))) Q
"RTN","PSODOSUT",170,0)
 ;Currently only one prospective drug at a time for Outpatient Dose Check
"RTN","PSODOSUT",171,0)
 ;S PSODLNNN="O;1;PROSPECTIVE;1"
"RTN","PSODOSUT",172,0)
 K ^TMP($J,"PSOPDOSA") K ^TMP($J,"PSOPDOSN") S PSODLBS1(1)="PSOPDOSA",PSODLBS1(3)="PSOPDOSN"
"RTN","PSODOSUT",173,0)
 D FIN^PSODOSCL(.PSODLBS1,.PSORXED,.PSODRUG)
"RTN","PSODOSUT",174,0)
 S PSODLENT=ENT,PSOCPXB=0
"RTN","PSODOSUT",175,0)
 F PSOCPXA=0:0 S PSOCPXA=$O(PSORXED("DOSE",PSOCPXA)) Q:'PSOCPXA  S PSOCPXB=PSOCPXB+1
"RTN","PSODOSUT",176,0)
 S PSODLNVL=$$DOSEX^PSODOSUN(PSODLENT)
"RTN","PSODOSUT",177,0)
 D HD:(($Y+5)>IOSL) Q:$G(PSORX("DFLG"))
"RTN","PSODOSUT",178,0)
 K ^TMP($J,"PSOPDOSA") K ^TMP($J,"PSOPDOSN") I $P($G(PSODLNVL),"^")=1 S PSORXED("DFLG")=1 Q
"RTN","PSODOSUT",179,0)
 I '$G(PSODLNVL) Q
"RTN","PSODOSUT",180,0)
 I '$D(^XUSEC("PSORPH",DUZ)) S:$P($G(PSODLNVL),"^")=2 ^TMP("PSODOSF",$J,0)=$$CONVMSG($P(PSODLNVL,"^",2)) W ! Q
"RTN","PSODOSUT",181,0)
 S PSODLNVT=$P(PSODLNVL,"^",2)
"RTN","PSODOSUT",182,0)
 I +$G(PSOGENF) Q  ;Do not do intervention on a single General Dose message.
"RTN","PSODOSUT",183,0)
 I $$EN3^PSORXI(PSODLNVT) W !!,"Unable to log intervention, cannot find intervention type.",! K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSODOSUT",184,0)
 W !
"RTN","PSODOSUT",185,0)
 Q
"RTN","PSODOSUT",186,0)
 ;
"RTN","PSODOSUT",187,0)
CONVMSG(MESS) ;Convert DOSE CHECK message to numeric value for field 8 of ^PS(52.4
"RTN","PSODOSUT",188,0)
 ;For MOCHA 2.0, only returning "DOSAGE EXCEEDS MAX SINGLE DOSE" when a dosing error is present.
"RTN","PSODOSUT",189,0)
 N PSODOSF
"RTN","PSODOSUT",190,0)
 S MESS="DOSAGE EXCEEDS MAX SINGLE DOSE AND/OR MAX DAILY DOSE"
"RTN","PSODOSUT",191,0)
 S PSODOSF=$S(MESS="DOSAGE EXCEEDS MAX SINGLE DOSE AND/OR MAX DAILY DOSE":4,MESS="MAX SINGLE DOSE & MAX DAILY DOSE":3,MESS="MAX SINGLE DOSE":2,MESS="MAX DAILY DOSE":1,1:"")
"RTN","PSODOSUT",192,0)
 Q PSODOSF
"RTN","PSODOSUT",193,0)
 ;
"RTN","PSODOSUT",194,0)
DCHKV ;Dose check when verifying an order
"RTN","PSODOSUT",195,0)
 N PSODOSF,PSOLINE,PSOVERFL,PSOVCAN,PSOGENF
"RTN","PSODOSUT",196,0)
 S PSOVERFL=1
"RTN","PSODOSUT",197,0)
 S PSOGENF=0
"RTN","PSODOSUT",198,0)
 F PSOCPXA=0:0 S PSOCPXA=$O(^PSRX(PSONV,6,PSOCPXA)) Q:'PSOCPXA  I $P($G(^PSRX(PSONV,6,PSOCPXA,0)),"^")'="" S PSOCPXB=PSOCPXB+1
"RTN","PSODOSUT",199,0)
 D RX^PSODOSCL(.PSODLBS1,PSONV)
"RTN","PSODOSUT",200,0)
 S $P(PSOLINE,"-",79)="-"
"RTN","PSODOSUT",201,0)
 S PSODLNNN=PSONV
"RTN","PSODOSUT",202,0)
 S PSODLNVL=$$DOSE^PSODOSUN K ^TMP($J,"PSOPDOSN") K ^TMP($J,"PSOPDOSA") I $P($G(PSODLNVL),"^")=1 S PSORX("DFLG")=1 Q
"RTN","PSODOSUT",203,0)
 I '$D(^XUSEC("PSORPH",DUZ)) S:$P($G(PSODLNVL),"^")=2 ^TMP("PSODOSF",$J,0)=$$CONVMSG($P(PSODLNVL,"^",2))
"RTN","PSODOSUT",204,0)
 I '$G(PSODLNVL) Q
"RTN","PSODOSUT",205,0)
 I +PSODLNVL=3 D  Q:PSOVCAN
"RTN","PSODOSUT",206,0)
 . D SIG^XUSESIG I X1="" S (PSORX("DFLG"),PSVERFLG)=1 Q
"RTN","PSODOSUT",207,0)
 . D NOOR^PSOCAN4
"RTN","PSODOSUT",208,0)
 . I $G(DIRUT) D UPOUT^PSODGDG1,KILL^PSODGDG1 K PSONORR,PSORX("INTERVENE") Q
"RTN","PSODOSUT",209,0)
 . S PSOVCAN=1
"RTN","PSODOSUT",210,0)
 . S DA=PSONV D RXV^PSODGDG1 S DA=PSONV D INV^PSODGDG1 S DA=PSONV D PSDEL^PSODGDG1,DEL^PSODGDG1
"RTN","PSODOSUT",211,0)
 . K DIK,LST,PSONOOR S PSVERFLG=1
"RTN","PSODOSUT",212,0)
 S PSODLNVT=$P(PSODLNVL,"^",2),PSODOSF=1
"RTN","PSODOSUT",213,0)
 I +PSODLNVL=3 S PSORX("DFLG")=1 Q
"RTN","PSODOSUT",214,0)
 S DA=PSONV,RX=$G(^PSRX(PSONV,0)) D DOSIV  ;CRI^PSODGDG1
"RTN","PSODOSUT",215,0)
 Q
"RTN","PSODOSUT",216,0)
 ;
"RTN","PSODOSUT",217,0)
DOSIV ;DOSE INTERVENTION
"RTN","PSODOSUT",218,0)
 I PSOFROM="C",'$D(^XUSEC("PSORPH",DUZ)) Q
"RTN","PSODOSUT",219,0)
 I '$D(^XUSEC("PSORPH",DUZ)) S:$P($G(PSODLNVL),"^")=2 ^TMP("PSODOSF",$J,0)=$$CONVMSG($P(PSODLNVL,"^",2)) Q
"RTN","PSODOSUT",220,0)
 I '$G(PSODLNVL) Q
"RTN","PSODOSUT",221,0)
 S PSODLNVT=$P(PSODLNVL,"^",2)
"RTN","PSODOSUT",222,0)
DOSIV1 ;
"RTN","PSODOSUT",223,0)
 I +$G(PSOGENF) Q  ;Do not do intervention on a single General Dose message.
"RTN","PSODOSUT",224,0)
 I $$EN3^PSORXI(PSODLNVT) D
"RTN","PSODOSUT",225,0)
 . W !!,"Unable to log intervention, cannot find intervention type.",!
"RTN","PSODOSUT",226,0)
 . K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSODOSUT",227,0)
 Q
"RTN","PSODOSUT",228,0)
 ;
"RTN","PSODOSUT",229,0)
CANCEL(PSONV) ;CR2724 -  where PSONV = RXIEN 
"RTN","PSODOSUT",230,0)
 D SIG^XUSESIG I X1="" S PSORX("DFLG")=1 Q
"RTN","PSODOSUT",231,0)
 D NOOR^PSOCAN4
"RTN","PSODOSUT",232,0)
 I $G(DIRUT) D UPOUT^PSODGDG1,KILL^PSODGDG1 K PSONORR,PSORX("INTERVENE") Q
"RTN","PSODOSUT",233,0)
 S DA=PSONV D INV^PSODGDG1 S DA=PSONV D PSDEL^PSODGDG1,DEL^PSODGDG1
"RTN","PSODOSUT",234,0)
 K DIK,LST,PSONOOR
"RTN","PSODOSUT",235,0)
 Q
"RTN","PSODOSUT",236,0)
 ;
"RTN","PSODOSUT",237,0)
DOSCK(PSOFROM,MSG) ;
"RTN","PSODOSUT",238,0)
 ;D HD
"RTN","PSODOSUT",239,0)
 N PSODONOF S PSODONOF="" D DOSEOFF Q:'+PSODONOF
"RTN","PSODOSUT",240,0)
 I $G(PSORX("DFLG"))!($G(PSODOSD)) S PSORX("DFLG")=1 K PSODOSD Q
"RTN","PSODOSUT",241,0)
 N PSODLNNN,PSODLNVL,PSODLNVT,X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,PSODLBS1,PSOCPXA,PSOCPXB,PSOCPXC
"RTN","PSODOSUT",242,0)
 Q:$$EXMT^PSSDSAPI(PSODRUG("IEN"))
"RTN","PSODOSUT",243,0)
 Q:$G(PSODRUG("BAD",PSODRUG("IEN")))
"RTN","PSODOSUT",244,0)
 K ^TMP($J,"PSOPDOSN"),^TMP($J,"PSOPDOSA"),^TMP("PSODOSF",$J) S PSODLBS1(1)="PSOPDOSA",PSODLBS1(3)="PSOPDOSN"
"RTN","PSODOSUT",245,0)
 I ($D(DTOUT))!($D(DUOUT))!($G(DIRUT))!($G(PSODLQT)) K PSODLQT,DTOUT,DUOUT,DIRUT,PSORX("DFLG") Q
"RTN","PSODOSUT",246,0)
 ;D CLEAR^VALM1
"RTN","PSODOSUT",247,0)
 S PSOCPXB=0
"RTN","PSODOSUT",248,0)
 I PSOFROM="V" D DCHKV Q  ;PSOVER1 - verification 
"RTN","PSODOSUT",249,0)
 I PSOFROM="N" D DCHKN Q  ;PSOORNE1 & PSOORNEW - new & copy
"RTN","PSODOSUT",250,0)
 I PSOFROM="R" D DCHKR Q  ;PSORENW0 - renewal
"RTN","PSODOSUT",251,0)
 I PSOFROM="C" D DCHKC Q  ;PSOCAN2 - cancel
"RTN","PSODOSUT",252,0)
 Q
"RTN","PSODOSUT",253,0)
 ;
"RTN","PSODOSUT",254,0)
RCONVMS(MESS) ;Convert DOSE CHECK from numeric to alpha
"RTN","PSODOSUT",255,0)
 N PSODOSF
"RTN","PSODOSUT",256,0)
 S MESS=4  ;For MOCHA 2.0, only returning "DOSAGE EXCEEDS MAX SINGLE DOSE" when a dosing error is present.
"RTN","PSODOSUT",257,0)
 S PSODOSF=$S(MESS=4:"DOSAGE EXCEEDS MAX SINGLE DOSE AND/OR MAX DAILY DOSE",MESS=3:"MAX SINGLE DOSE & DAILY DOSE RANGE",MESS=2:"MAX SINGLE DOSE",MESS=1:"DAILY DOSE RANGE",1:"")
"RTN","PSODOSUT",258,0)
 Q PSODOSF
"RTN","PSODOSUT",259,0)
 ;
"RTN","PSODOSUT",260,0)
DOSEOFF ;
"RTN","PSODOSUT",261,0)
 S PSODONOF=$$DS^PSSDSAPI
"RTN","PSODOSUT",262,0)
DOSEOFF2 ;
"RTN","PSODOSUT",263,0)
 I $G(PSORX("DOSING OFF")),+PSODONOF K PSORX("DOSING OFF"),PSOREINF,PSOONOFC Q
"RTN","PSODOSUT",264,0)
 Q:+PSODONOF
"RTN","PSODOSUT",265,0)
 I ($G(PSOONOFC)!$G(PSOREINF)),'+PSODONOF S PSORX("DOSING OFF")=1  ;Reinstate news PSORX array so have to work around it
"RTN","PSODOSUT",266,0)
 Q:$G(PSORX("DOSING OFF"))  ;only display 'dosing off' message once per patient 
"RTN","PSODOSUT",267,0)
 N PSODOFFC
"RTN","PSODOSUT",268,0)
 I '+PSODONOF&($P(PSODONOF,"^",2)'="") D
"RTN","PSODOSUT",269,0)
 .S X=$P(PSODONOF,"^",2),DIWL=1,DIWR=73 K ^UTILITY($J,"W") D ^DIWP W !
"RTN","PSODOSUT",270,0)
 .S PSODOFFC=0 F PSODOFFC=0:0 S PSODOFFC=$O(^UTILITY($J,"W",DIWL,PSODOFFC)) Q:'PSODOFFC  W !?5,$G(^UTILITY($J,"W",DIWL,PSODOFFC,0))
"RTN","PSODOSUT",271,0)
 .N DIR,DIRUT,DUOUT,X,Y S DIR(0)="E"
"RTN","PSODOSUT",272,0)
 .S DIR("A")="Press Return to continue...",DIR("?")="Press Return to continue"
"RTN","PSODOSUT",273,0)
 .W ! D ^DIR K DIRUT,DUOUT,DIR,X,Y W !
"RTN","PSODOSUT",274,0)
 .K ^UTILITY($J,"W")
"RTN","PSODOSUT",275,0)
 .S PSORX("DOSING OFF")=1 S:$G(PSOREINS) (PSOREINF,PSOONOFC)=1  ;set this flag to only display 'dosing off' message once per session. 
"RTN","PSODOSUT",276,0)
 Q
"RTN","PSORENW0")
0^8^B84933755
"RTN","PSORENW0",1,0)
PSORENW0 ;IHS/DSD/JCM-renew main driver continuation ;2/8/06 8:40am
"RTN","PSORENW0",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**11,27,32,59,64,46,71,96,100,130,237,206,251,375,379,372,411,518**;DEC 1997;Build 3
"RTN","PSORENW0",3,0)
 ;External reference to ^PS(50.7 supported by DBIA 2223
"RTN","PSORENW0",4,0)
 ;External reference to ^PSDRUG( supported by DBIA 221
"RTN","PSORENW0",5,0)
 ;External reference to PSOL^PSSLOCK supported by DBIA 2789
"RTN","PSORENW0",6,0)
 ;External reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSORENW0",7,0)
 ;
"RTN","PSORENW0",8,0)
 ;PSO*237 was not adding to Clozapine Override file, fix
"RTN","PSORENW0",9,0)
PROCESS ;
"RTN","PSORENW0",10,0)
 D ^PSORENW1
"RTN","PSORENW0",11,0)
 D INST2^PSORENW
"RTN","PSORENW0",12,0)
 I $D(PSORX("BAR CODE")),PSODFN'=PSORENW("PSODFN") D NEWPT
"RTN","PSORENW0",13,0)
 S PSORENW("DFLG")=0,PSORENW("FILL DATE")=PSORNW("FILL DATE")
"RTN","PSORENW0",14,0)
 I $G(PSORNW("MAIL/WINDOW"))]"" S PSORENW("MAIL/WINDOW")=PSORNW("MAIL/WINDOW")
"RTN","PSORENW0",15,0)
 W !!,"Now Renewing Rx # "_PSORENW("ORX #")_"   Drug: "_$P($G(^PSDRUG(+$G(PSORENW("DRUG IEN")),0)),"^"),! H 2
"RTN","PSORENW0",16,0)
 D CHECK G:PSORENW("DFLG") PROCESSX
"RTN","PSORENW0",17,0)
 D FILDATE
"RTN","PSORENW0",18,0)
 D DRUG G:PSORENW("DFLG")!PSORX("DFLG") PROCESSX
"RTN","PSORENW0",19,0)
 D RXN G:PSORENW("DFLG") PROCESSX
"RTN","PSORENW0",20,0)
 D STOP^PSORENW1,OERR^PSORENW1:$G(PSOFDR)
"RTN","PSORENW0",21,0)
DSPL K PSOEDT,PSOLM D DSPLY^PSORENW3 G:PSORENW("DFLG") PROCESSX
"RTN","PSORENW0",22,0)
 S PSORENW("QFLG")=0 D:'$G(PSOFDR) EDIT
"RTN","PSORENW0",23,0)
 G:PSORENW("DFLG")!$G(PSORX("FN")) PROCESSX
"RTN","PSORENW0",24,0)
 G:'$G(PSORX("FN"))&('$G(PSORENW("QFLG"))) DSPL
"RTN","PSORENW0",25,0)
 D:$D(^XUSEC("PSORPH",DUZ))!('$P(PSOPAR,"^",2)) VER1^PSOORNE4(.PSORENW) I PSORENW("DFLG")=1 G PROCESSX
"RTN","PSORENW0",26,0)
 I $G(NEWDOSE),PSORENW("ENT")>0 K NEWDOSE G DSPL
"RTN","PSORENW0",27,0)
 D EN^PSORN52(.PSORENW)
"RTN","PSORENW0",28,0)
 D RNPSOSD^PSOUTIL
"RTN","PSORENW0",29,0)
 D CAN,DCORD^PSONEW2
"RTN","PSORENW0",30,0)
 S BBRN="",BBRN1=$O(^PSRX("B",PSORENW("NRX #"),BBRN)) I $P($G(^PSRX(BBRN1,0)),"^",11)["W" S BINGCRT="Y",BINGRTE="W"
"RTN","PSORENW0",31,0)
 ;PSO*237 add to Clozapine Override file
"RTN","PSORENW0",32,0)
ANQ I $G(ANQDATA)]"" D NOW^%DTC G:$D(^PS(52.52,"B",%)) ANQ D
"RTN","PSORENW0",33,0)
 . K DD,DO S DIC="^PS(52.52,",DIC(0)="L",DLAYGO=52.52,X=%
"RTN","PSORENW0",34,0)
 . D FILE^DICN K DIC,DLAYGO,DD,DO,DA,DR
"RTN","PSORENW0",35,0)
 . N PS52 S (PS52,DA)=+Y,DIE="^PS(52.52,",DR="1////"_PSORENW("IRXN")
"RTN","PSORENW0",36,0)
 . D ^DIE K DIE,DA,DR
"RTN","PSORENW0",37,0)
 . S $P(^PS(52.52,PS52,0),"^",3,6)=ANQDATA
"RTN","PSORENW0",38,0)
 . K ANQDATA,X,Y,%,ANQREM
"RTN","PSORENW0",39,0)
 ;
"RTN","PSORENW0",40,0)
PROCESSX N PSORWRIT I PSORENW("DFLG")!$G(PSORX("DFLG")) S PSOBBCLK=1 W:'$G(POERR) !,$C(7),"RENEWED RX DELETED",! S PSOWRIT=1,PSORERR=1 D
"RTN","PSORENW0",41,0)
 .D:$P($G(PSOLST(+$G(ORN))),"^",2) PSOUL^PSSLOCK($P(PSOLST(ORN),"^",2)) S POERR("DFLG")=1 D CLEAN^PSOVER1 D
"RTN","PSORENW0",42,0)
 ..W !! K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to Continue" D ^DIR K DIR,DTOUT,DUOUT S VALMBCK="Q"
"RTN","PSORENW0",43,0)
 D:$G(PSORENW("OLD FILL DATE"))]"" SUSDATEK^PSOUTIL(.PSORENW)
"RTN","PSORENW0",44,0)
 K PRC,PHI,PSOQUIT,BBRN,BBRN1,PSORENW,PSODRUG,PSORX("PROVIDER NAME"),PSORX("CLINIC"),PSORX("FN")
"RTN","PSORENW0",45,0)
 K PSOEDT,PSOLM S:$G(PSORENW("FROM"))="" (PSORENW("DFLG"),PSORENW("QFLG"))=0
"RTN","PSORENW0",46,0)
 D CLEAN^PSOVER1
"RTN","PSORENW0",47,0)
 Q
"RTN","PSORENW0",48,0)
 ;
"RTN","PSORENW0",49,0)
CHECK ;
"RTN","PSORENW0",50,0)
 I '$D(PSORX("BAR CODE")),PSORENW("PSODFN")'=PSODFN D  G CHECKX
"RTN","PSORENW0",51,0)
 .W !!,?5,$C(7),"Can't renew Rx # "_$P(PSORENW("RX0"),"^")_", it is not for this patient." S PSORENW("DFLG")=1
"RTN","PSORENW0",52,0)
 .S:$G(POERR) VALMSG="Can't renew Rx # "_$P(PSORENW("RX0"),"^")_", not for this patient.",VALMBCK="R"
"RTN","PSORENW0",53,0)
 ;Invalid dosage check
"RTN","PSORENW0",54,0)
 N PSOOCPRX,PSOOLPF,PSOOLPD,PSONOSIG S PSOOCPRX=PSORENW("OIRXN") D CDOSE
"RTN","PSORENW0",55,0)
 I PSOOLPF!(PSONOSIG) D  G CHECKX
"RTN","PSORENW0",56,0)
 .S PSORENW("DFLG")=1
"RTN","PSORENW0",57,0)
 .W !!,$C(7),"Cannot renew Rx # "_$P(PSORENW("RX0"),"^")_$S(PSOOLPF:", invalid dosage of "_$G(PSOOLPD),1:", Missing Sig")
"RTN","PSORENW0",58,0)
 .S:$G(POERR) VALMSG="Cannot renew Rx # "_$P(PSORENW("RX0"),"^")_$S(PSOOLPF:", invalid Dosage of "_$G(PSOOLPD),1:", Missing Sig") S VALMBCK="R"
"RTN","PSORENW0",59,0)
 .I '$G(PSORNSPD) W ! K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to Continue" D ^DIR K DIR
"RTN","PSORENW0",60,0)
 .I $G(PSORNSPD) W !
"RTN","PSORENW0",61,0)
 ;
"RTN","PSORENW0",62,0)
 N PSOS S (PSOS,PSOX,PSOY)="" K ACOM,DIR,DIRUT,DIRUT,DUOUT N DRG
"RTN","PSORENW0",63,0)
 I $G(PSOSD) F  S PSOS=$O(PSOSD(PSOS)) Q:PSOS=""  F  S PSOX=$O(PSOSD(PSOS,PSOX)) Q:PSOX']""!(PSORENW("DFLG"))  I PSORENW("OIRXN")=+PSOSD(PSOS,PSOX) S PSOY=PSOSD(PSOS,PSOX) I $TR($P(PSOY,"^",3),"B")]"" D  K ACOM,DIR,DIRUT,DIRUT,DUOUT
"RTN","PSORENW0",64,0)
 . S PSORENW("DFLG")=1
"RTN","PSORENW0",65,0)
 . W !,$C(7),"Cannot renew Rx # ",$P(PSORENW("RX0"),"^")
"RTN","PSORENW0",66,0)
 . S PSOREA=$P(PSOY,"^",3),PSOSTAT=+PSORENW("STA")
"RTN","PSORENW0",67,0)
 . D STATUS^PSOUTIL(PSOREA,PSOSTAT) K PSOREA,PSOSTAT
"RTN","PSORENW0",68,0)
 .I $G(ACOM)]"" D
"RTN","PSORENW0",69,0)
 ..S DRG=$P(^PSDRUG($P(^PSRX(PSORENW("OIRXN"),0),"^",6),0),"^")
"RTN","PSORENW0",70,0)
 ..W ! S DIR(0)="Y",DIR("A",1)="Do you want to Discontinue this Pending Order",DIR("A")="for "_DRG,DIR("B")="No"
"RTN","PSORENW0",71,0)
 ..D ^DIR I 'Y!($D(DIRUT)) Q
"RTN","PSORENW0",72,0)
 ..D NOOR^PSOCAN4 Q:$D(DIRUT)  D DE^PSOORFI2
"RTN","PSORENW0",73,0)
 .Q
"RTN","PSORENW0",74,0)
 I PSOY="",'$G(PSOORRNW) D
"RTN","PSORENW0",75,0)
 .W !,$C(7),"Cannot renew Rx # ",$P(PSORENW("RX0"),"^")," later Rx exists." S PSORENW("DFLG")=1
"RTN","PSORENW0",76,0)
 .S:$G(POERR) VALMSG="Cannot renew Rx # "_$P(PSORENW("RX0"),"^")_" later Rx exists.",VALMBCK="R"
"RTN","PSORENW0",77,0)
 K PSOX,PSOY G:PSORENW("DFLG") CHECKX
"RTN","PSORENW0",78,0)
 ;
"RTN","PSORENW0",79,0)
 I $A($E(PSORENW("ORX #"),$L(PSORENW("ORX #"))))'<90 D  Q
"RTN","PSORENW0",80,0)
 . W !,$C(7),"Cannot renew Rx # "_PSORENW("ORX #")_", Max number of renewals reached."
"RTN","PSORENW0",81,0)
 .S:$G(POERR)!('$G(SPEED)) (ACOM,VALMSG)="Cannot renew Rx # "_PSORENW("ORX #")_", Max number reached.",VALMBCK="R"
"RTN","PSORENW0",82,0)
 . S PSORENW("DFLG")=1
"RTN","PSORENW0",83,0)
 .I $G(OR0)]"" D
"RTN","PSORENW0",84,0)
 ..S DRG=$P(^PSDRUG($P(^PSRX(PSORENW("OIRXN"),0),"^",6),0),"^")
"RTN","PSORENW0",85,0)
 ..W ! S DIR(0)="Y",DIR("A",1)="Do you want to Discontinue this Pending Order",DIR("A")="for "_DRG,DIR("B")="No"
"RTN","PSORENW0",86,0)
 ..D ^DIR I 'Y!($D(DIRUT)) Q
"RTN","PSORENW0",87,0)
 ..D NOOR^PSOCAN4 Q:$D(DIRUT)  D DE^PSOORFI2
"RTN","PSORENW0",88,0)
 .K ACOM Q
"RTN","PSORENW0",89,0)
 D CHKDIV G:PSORENW("DFLG") CHECKX
"RTN","PSORENW0",90,0)
 ;
"RTN","PSORENW0",91,0)
 D CHKPRV^PSOUTIL
"RTN","PSORENW0",92,0)
CHECKX Q
"RTN","PSORENW0",93,0)
 ;
"RTN","PSORENW0",94,0)
CHKDIV ;
"RTN","PSORENW0",95,0)
 G:$P(PSORENW("RX2"),"^",9)=+PSOSITE CHKDIVX
"RTN","PSORENW0",96,0)
 W !?5,$C(7),"RX # ",$P(PSORENW("RX0"),"^")," is for (",$P(^PS(59,$P(PSORENW("RX2"),"^",9),0),"^"),") division."
"RTN","PSORENW0",97,0)
 I '$P($G(PSOSYS),"^",2) S PSORENW("DFLG")=1 G CHKDIVX
"RTN","PSORENW0",98,0)
 D:$P($G(PSOSYS),"^",3) DIR
"RTN","PSORENW0",99,0)
CHKDIVX Q
"RTN","PSORENW0",100,0)
 ;
"RTN","PSORENW0",101,0)
DRUG ;
"RTN","PSORENW0",102,0)
 K PSOY
"RTN","PSORENW0",103,0)
 S PSOY=PSORENW("DRUG IEN"),PSOY(0)=^PSDRUG(PSOY,0),PSORENWD=1
"RTN","PSORENW0",104,0)
 I '$P($G(^PSDRUG(PSOY,2)),"^") D  Q:$G(PSORX("DFLG"))
"RTN","PSORENW0",105,0)
 .I $P($G(^PSRX(PSORENW("OIRXN"),"OR1")),"^") S PSODRUG("OI")=$P(^PSRX(PSORENW("OIRXN"),"OR1"),"^"),PSODRUG("OIN")=$P(^PS(50.7,+^("OR1"),0),"^") Q
"RTN","PSORENW0",106,0)
 .W !!,"Cannot Renew!!  No Pharmacy Orderable Item!" S VALMSG="Cannot Renew!!  No Pharmacy Orderable Item!",PSORX("DFLG")=1
"RTN","PSORENW0",107,0)
 D SET^PSODRG
"RTN","PSORENW0",108,0)
 D POST^PSODRG D:'PSORX("DFLG") DOSCK^PSODOSUT("R") S:$G(PSORX("DFLG")) PSORENW("DFLG")=1 ;remove order checks for v7. do allergy checks only
"RTN","PSORENW0",109,0)
 S PSONOOR=PSORENW("NOO")
"RTN","PSORENW0",110,0)
 K PSORX("INTERVENE")
"RTN","PSORENW0",111,0)
 S:$D(PSONEW("STATUS")) PSORENW("STATUS")=PSONEW("STATUS")
"RTN","PSORENW0",112,0)
 K PSOY,PSONEW("STATUS"),PSORENWD
"RTN","PSORENW0",113,0)
 Q
"RTN","PSORENW0",114,0)
 ;
"RTN","PSORENW0",115,0)
RXN ;
"RTN","PSORENW0",116,0)
 K PSOX
"RTN","PSORENW0",117,0)
 S PSOX=$E(PSORENW("ORX #"),$L(PSORENW("ORX #")))
"RTN","PSORENW0",118,0)
 S PSORENW("NRX #")=$S(PSOX?1N:PSORENW("ORX #")_"A",1:$E(PSORENW("ORX #"),1,$L(PSORENW("ORX #"))-1)_$C($A(PSOX)+1))
"RTN","PSORENW0",119,0)
RETRY I $O(^PSRX("B",PSORENW("NRX #"),0)) D  G:'$G(PSORENW("DFLG")) RETRY
"RTN","PSORENW0",120,0)
 .W:$A($E(PSORENW("NRX #"),$L(PSORENW("ORX #"))))'=90 !,"Rx # "_PSORENW("NRX #")_" is already on file."
"RTN","PSORENW0",121,0)
 .S:$G(PSOFDR) VALMSG="Rx # "_PSORENW("NRX #")_" is already on file."
"RTN","PSORENW0",122,0)
 .I $A($E(PSORENW("NRX #"),$L(PSORENW("ORX #"))))=90 D
"RTN","PSORENW0",123,0)
 ..W !,"Rx # "_PSORENW("NRX #")_" is already on file. Cannot renew Rx #"_PSORENW("ORX #")_".",!,"A new Rx must be entered.",!
"RTN","PSORENW0",124,0)
 ..S:$G(PSOFDR) VALMSG="Rx # "_PSORENW("NRX #")_" is already on file. Cannot renew Rx #"_PSORENW("ORX #")_". A new Rx must be entered."
"RTN","PSORENW0",125,0)
 ..K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to Continue" D ^DIR K DIR
"RTN","PSORENW0",126,0)
 ..S:$G(POERR)!($G(PSOFDR)) VALMSG="Cannot renew Rx # "_PSORENW("ORX #")_", Max number reached.",VALMBCK="R" S PSORENW("DFLG")=1
"RTN","PSORENW0",127,0)
 .S PSOX=$E(PSORENW("NRX #"),$L(PSORENW("NRX #")))
"RTN","PSORENW0",128,0)
 .S PSORENW("NRX #")=$S(PSOX?1N:PSORENW("NRX #")_"A",1:$E(PSORENW("NRX #"),1,$L(PSORENW("NRX #"))-1)_$C($A(PSOX)+1))
"RTN","PSORENW0",129,0)
RXNX K PSOX
"RTN","PSORENW0",130,0)
 Q
"RTN","PSORENW0",131,0)
 ;
"RTN","PSORENW0",132,0)
FILDATE ;
"RTN","PSORENW0",133,0)
 S PSORENW("IRXN")=PSORENW("OIRXN")
"RTN","PSORENW0",134,0)
 D NEXT^PSOUTIL(.PSORENW)
"RTN","PSORENW0",135,0)
 I PSORENW("FILL DATE")<$P(PSORENW("RX3"),"^",2) D
"RTN","PSORENW0",136,0)
 .D RENFDT^PSOUTIL(.PSORENW)
"RTN","PSORENW0",137,0)
 .I PSORENW("FILL DATE")<DT,PSORENW("FILL DATE")<PSORNW("FILL DATE") S (Y,PSORENW("FILL DATE"))=DT X ^DD("DD") S PSORX("FILL DATE")=Y K Y
"RTN","PSORENW0",138,0)
 K PSORENW("IRXN")
"RTN","PSORENW0",139,0)
 Q
"RTN","PSORENW0",140,0)
 ;
"RTN","PSORENW0",141,0)
EDIT ;
"RTN","PSORENW0",142,0)
 K DIR,X,Y
"RTN","PSORENW0",143,0)
 S DIR(0)="Y",DIR("B")=$S($G(DUZ("AG"))'="I":"Y",$G(PSEXDT):"Y",1:"N")
"RTN","PSORENW0",144,0)
 S DIR("A")="Edit renewed Rx ",DIR("?")="Answer YES to edit the renewed Rx, NO not to."
"RTN","PSORENW0",145,0)
 D ^DIR K DIR S:$D(DIRUT) PSORENW("DFLG")=1
"RTN","PSORENW0",146,0)
 G:PSORENW("DFLG") EDITX
"RTN","PSORENW0",147,0)
 K PSOQUIT,PSORX("FN") I Y S PSORNALL=1 D INIT^PSORENW3,EN^PSOORNE4(.PSORENW) K PSORNALL S:$G(PSOQUIT) PSORENW("DFLG")=1 I '$G(PSORX("FN")) D FULL^VALM1 Q
"RTN","PSORENW0",148,0)
 Q:$G(PSORX("FN"))
"RTN","PSORENW0",149,0)
EDITX S PSOEDT=1,VALMBCK="Q" K X,Y,DIRUT,DTOUT,DUOUT S PSORENW("QFLG")=1
"RTN","PSORENW0",150,0)
 Q
"RTN","PSORENW0",151,0)
 ;
"RTN","PSORENW0",152,0)
DELETE ;
"RTN","PSORENW0",153,0)
 K DA,DIK
"RTN","PSORENW0",154,0)
 S DA=$O(^PS(52.5,"B",PSORENW("OIRXN"),0)),DIK="^PS(52.5,"
"RTN","PSORENW0",155,0)
 D ^DIK K DIK,DIC
"RTN","PSORENW0",156,0)
 Q
"RTN","PSORENW0",157,0)
 ;
"RTN","PSORENW0",158,0)
CAN ;
"RTN","PSORENW0",159,0)
 K REA,DA,MSG
"RTN","PSORENW0",160,0)
 S REA="C",DA=PSORENW("OIRXN")
"RTN","PSORENW0",161,0)
 S MSG="Renewed"_$S($G(PSOFDR):" from CPRS",1:"")
"RTN","PSORENW0",162,0)
 S PSCAN(PSORENW("ORX #"))=DA_"^C"
"RTN","PSORENW0",163,0)
 D CAN^PSOCAN
"RTN","PSORENW0",164,0)
 K REA,DA,MSG,PSCAN
"RTN","PSORENW0",165,0)
 Q
"RTN","PSORENW0",166,0)
 ;
"RTN","PSORENW0",167,0)
DIR ;
"RTN","PSORENW0",168,0)
 S DIR(0)="Y",DIR("A")="CONTINUE ",DIR("B")="N"
"RTN","PSORENW0",169,0)
 S DIR("?")="Answer YES to Continue, NO to bypass"
"RTN","PSORENW0",170,0)
 D ^DIR K DIR
"RTN","PSORENW0",171,0)
 S:$D(DIRUT)!('Y) PSORENW("DFLG")=1
"RTN","PSORENW0",172,0)
DIRX K DIRUT,DTOUT,DUOUT,X,Y
"RTN","PSORENW0",173,0)
 Q
"RTN","PSORENW0",174,0)
NEWPT ;
"RTN","PSORENW0",175,0)
 S PSOQFLG=0 N PSODFN
"RTN","PSORENW0",176,0)
 S PSODFN=PSORENW("PSODFN")
"RTN","PSORENW0",177,0)
 D ^PSOPTPST I PSOQFLG S PSORENW("DFLG")=1,PSOQFLG=0 G NEWPTX
"RTN","PSORENW0",178,0)
 D PROFILE^PSOREF1
"RTN","PSORENW0",179,0)
NEWPTX Q
"RTN","PSORENW0",180,0)
 ;
"RTN","PSORENW0",181,0)
EN(PSORENW)        ; Entry Point for Batch Barcode Option
"RTN","PSORENW0",182,0)
 S PSORENRX=$G(PSOBBC("OIRXN"))
"RTN","PSORENW0",183,0)
 I $G(PSORENRX) D PSOL^PSSLOCK(PSORENRX) I '$G(PSOMSG) D  K DIR,PSOMSG W ! S DIR("A")="Press Return to continue",DIR(0)="E",DIR("?")="Press Return to continue" D ^DIR K DIR W ! Q
"RTN","PSORENW0",184,0)
 .I $P($G(PSOMSG),"^",2)'="" W $C(7),!!,$P(PSOMSG,"^",2) Q
"RTN","PSORENW0",185,0)
 .W $C(7),!!,"Another person is editing Rx "_$P($G(^PSRX(PSORENRX,0)),"^")
"RTN","PSORENW0",186,0)
 K PSOMSG,PSOBBCLK S PSOBARCD=1 D PROCESS K PSOBARCD
"RTN","PSORENW0",187,0)
 D KLIB^PSORENW1
"RTN","PSORENW0",188,0)
 I $G(PSORENRX),$G(PSOBBCLK) D PSOUL^PSSLOCK(PSORENRX)
"RTN","PSORENW0",189,0)
 K PSORENRX,PSOBBCLK
"RTN","PSORENW0",190,0)
 Q
"RTN","PSORENW0",191,0)
CDOSE ;Validate Dosage field on Renewal, Copy, Edit
"RTN","PSORENW0",192,0)
 ;PSOOCPRX must be set to internal Rx number
"RTN","PSORENW0",193,0)
 Q:'$G(PSOOCPRX)
"RTN","PSORENW0",194,0)
 N PSOOLP,PSOOKZ
"RTN","PSORENW0",195,0)
 S PSOOLP="",(PSOOLPF,PSONOSIG)=0 F  S PSOOLP=$O(^PSRX(PSOOCPRX,6,PSOOLP)) Q:PSOOLP=""!(PSOOLPF)  I $P($G(^PSRX(PSOOCPRX,6,PSOOLP,0)),"^")["0.." S PSOOLPD=$P($G(^(0)),"^"),PSOOLPF=1
"RTN","PSORENW0",196,0)
 Q:PSOOLPF
"RTN","PSORENW0",197,0)
 S PSOOKZ=0
"RTN","PSORENW0",198,0)
 I $P($G(^PSRX(PSOOCPRX,"SIG")),"^",2) S PSOOLP="" F  S PSOOLP=$O(^PSRX(PSOOCPRX,"SIG1",PSOOLP)) Q:PSOOLP=""!(PSOOKZ)  I $G(^PSRX(PSOOCPRX,"SIG1",PSOOLP,0))'="" S PSOOKZ=1
"RTN","PSORENW0",199,0)
 I '$P($G(^PSRX(PSOOCPRX,"SIG")),"^",2),$P($G(^("SIG")),"^")'="" S PSOOKZ=1
"RTN","PSORENW0",200,0)
 I 'PSOOKZ S PSONOSIG=1
"RTN","PSORENW0",201,0)
 Q
"RTN","PSORENW0",202,0)
 ;
"VER")
8.0^22.2
**INSTALL NAME**
PSJ*5.0*358
"BLD",10248,0)
PSJ*5.0*358^INPATIENT MEDICATIONS^0^3180514^y
"BLD",10248,1,0)
^^1^1^3170816^
"BLD",10248,1,1,0)
Follow up build to MOCHA 2.1b
"BLD",10248,4,0)
^9.64PA^^
"BLD",10248,6.3)
10
"BLD",10248,"ABPKG")
n
"BLD",10248,"KRN",0)
^9.67PA^779.2^20
"BLD",10248,"KRN",.4,0)
.4
"BLD",10248,"KRN",.4,"NM",0)
^9.68A^^
"BLD",10248,"KRN",.401,0)
.401
"BLD",10248,"KRN",.402,0)
.402
"BLD",10248,"KRN",.403,0)
.403
"BLD",10248,"KRN",.5,0)
.5
"BLD",10248,"KRN",.84,0)
.84
"BLD",10248,"KRN",3.6,0)
3.6
"BLD",10248,"KRN",3.8,0)
3.8
"BLD",10248,"KRN",9.2,0)
9.2
"BLD",10248,"KRN",9.8,0)
9.8
"BLD",10248,"KRN",9.8,"NM",0)
^9.68A^13^7
"BLD",10248,"KRN",9.8,"NM",1,0)
PSIVOCDS^^0^B142090841
"BLD",10248,"KRN",9.8,"NM",7,0)
PSIVSP^^0^B46308315
"BLD",10248,"KRN",9.8,"NM",9,0)
PSGS0^^0^B83569329
"BLD",10248,"KRN",9.8,"NM",10,0)
PSJOCDS^^0^B91566896
"BLD",10248,"KRN",9.8,"NM",11,0)
PSJOCDSD^^0^B28624928
"BLD",10248,"KRN",9.8,"NM",12,0)
PSJORUTL^^0^B21381210
"BLD",10248,"KRN",9.8,"NM",13,0)
PSJAPIDS^^0^B34567938
"BLD",10248,"KRN",9.8,"NM","B","PSGS0",9)

"BLD",10248,"KRN",9.8,"NM","B","PSIVOCDS",1)

"BLD",10248,"KRN",9.8,"NM","B","PSIVSP",7)

"BLD",10248,"KRN",9.8,"NM","B","PSJAPIDS",13)

"BLD",10248,"KRN",9.8,"NM","B","PSJOCDS",10)

"BLD",10248,"KRN",9.8,"NM","B","PSJOCDSD",11)

"BLD",10248,"KRN",9.8,"NM","B","PSJORUTL",12)

"BLD",10248,"KRN",19,0)
19
"BLD",10248,"KRN",19,"NM",0)
^9.68A^^
"BLD",10248,"KRN",19.1,0)
19.1
"BLD",10248,"KRN",101,0)
101
"BLD",10248,"KRN",409.61,0)
409.61
"BLD",10248,"KRN",771,0)
771
"BLD",10248,"KRN",779.2,0)
779.2
"BLD",10248,"KRN",870,0)
870
"BLD",10248,"KRN",8989.51,0)
8989.51
"BLD",10248,"KRN",8989.52,0)
8989.52
"BLD",10248,"KRN",8994,0)
8994
"BLD",10248,"KRN","B",.4,.4)

"BLD",10248,"KRN","B",.401,.401)

"BLD",10248,"KRN","B",.402,.402)

"BLD",10248,"KRN","B",.403,.403)

"BLD",10248,"KRN","B",.5,.5)

"BLD",10248,"KRN","B",.84,.84)

"BLD",10248,"KRN","B",3.6,3.6)

"BLD",10248,"KRN","B",3.8,3.8)

"BLD",10248,"KRN","B",9.2,9.2)

"BLD",10248,"KRN","B",9.8,9.8)

"BLD",10248,"KRN","B",19,19)

"BLD",10248,"KRN","B",19.1,19.1)

"BLD",10248,"KRN","B",101,101)

"BLD",10248,"KRN","B",409.61,409.61)

"BLD",10248,"KRN","B",771,771)

"BLD",10248,"KRN","B",779.2,779.2)

"BLD",10248,"KRN","B",870,870)

"BLD",10248,"KRN","B",8989.51,8989.51)

"BLD",10248,"KRN","B",8989.52,8989.52)

"BLD",10248,"KRN","B",8994,8994)

"BLD",10248,"QUES",0)
^9.62^^
"BLD",10248,"REQB",0)
^9.611^4^2
"BLD",10248,"REQB",3,0)
PSJ*5.0*347^2
"BLD",10248,"REQB",4,0)
PSS*1.0*224^2
"BLD",10248,"REQB","B","PSJ*5.0*347",3)

"BLD",10248,"REQB","B","PSS*1.0*224",4)

"MBREQ")
1
"PKG",197,-1)
1^1
"PKG",197,0)
INPATIENT MEDICATIONS^PSJ^UNIT DOSE AND IVS
"PKG",197,20,0)
^9.402P^^
"PKG",197,22,0)
^9.49I^1^1
"PKG",197,22,1,0)
5.0^2971215^2980917^11712
"PKG",197,22,1,"PAH",1,0)
358^3180514^11857
"PKG",197,22,1,"PAH",1,1,0)
^^1^1^3180514
"PKG",197,22,1,"PAH",1,1,1,0)
Follow up build to MOCHA 2.1b
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","PSGS0")
0^9^B83569329
"RTN","PSGS0",1,0)
PSGS0 ;BIR/CML3 - SCHEDULE PROCESSOR ;06/22/09 7:12 PM
"RTN","PSGS0",2,0)
 ;;5.0;INPATIENT MEDICATIONS;**12,25,26,50,63,74,83,116,110,111,133,138,174,134,213,207,190,113,245,227,256,347,353,358**;16 DEC 97;Build 10
"RTN","PSGS0",3,0)
 ;
"RTN","PSGS0",4,0)
 ; Reference to ^PS(51.1 is supported by DBIA 2177.
"RTN","PSGS0",5,0)
 ; Reference to ^PS(55   is supported by DBIA 2191.
"RTN","PSGS0",6,0)
 ;
"RTN","PSGS0",7,0)
ENA ; entry point for train option
"RTN","PSGS0",8,0)
 D ENCV^PSGSETU Q:$D(XQUIT)
"RTN","PSGS0",9,0)
 F  S (PSGS0Y,PSGS0XT)="" R !!,"Select STANDARD SCHEDULE: ",X:DTIME W:'$T $C(7) S:'$T X="^" Q:"^"[X  D:X?1."?" ENQ^PSGSH I X'?1."?" D EN W:$D(X)[0 $C(7),"  ??" I $D(X)#2,'PSGS0Y,PSGS0XT W "  Every ",PSGS0XT," minutes"
"RTN","PSGS0",10,0)
 K DIC,DIE,PSGS0XT,PSGS0Y,Q,X,Y,PSGDT Q
"RTN","PSGS0",11,0)
 ;
"RTN","PSGS0",12,0)
EN3 ;
"RTN","PSGS0",13,0)
 S PSGST=$P($G(^PS(53.1,DA,0)),"^",7) G EN
"RTN","PSGS0",14,0)
 ;
"RTN","PSGS0",15,0)
EN5 ;
"RTN","PSGS0",16,0)
 S PSGST=$P($G(^PS(55,DA(1),5,DA,0)),"^",7)
"RTN","PSGS0",17,0)
 ;
"RTN","PSGS0",18,0)
EN ; validate
"RTN","PSGS0",19,0)
 K PSGS0Y
"RTN","PSGS0",20,0)
 I X[""""!($A(X)=45)!(X?.E1C.E)!($L(X)>70)!($L(X)<1) K X Q
"RTN","PSGS0",21,0)
 S:X'=" " X=$$TRIM^XLFSTR(X,"R"," ") ;PSJ*5*227 - Prevent schedule crash
"RTN","PSGS0",22,0)
 I X?.E1L.E S X=$$ENLU^PSGMI(X) I '$D(PSGOES) D EN^DDIOL("  ("_X_")")
"RTN","PSGS0",23,0)
 ;
"RTN","PSGS0",24,0)
ENOS ; order set entry
"RTN","PSGS0",25,0)
 N X0,Y0,PSJXI,PSJDIC2,TMPAT
"RTN","PSGS0",26,0)
 I $G(X)="",$G(P(2)),$G(P(3)) S X=$G(P(9))
"RTN","PSGS0",27,0)
 I $G(X)="" Q
"RTN","PSGS0",28,0)
 S PSGXT=$G(PSGS0XT),(PSGS0XT,PSGS0Y,XT,Y,PSJNSS)=""
"RTN","PSGS0",29,0)
 S X0=X I X?2.4N1"-".E!(X?2.4N) D ENCHK S:$D(X) Y=X G Q
"RTN","PSGS0",30,0)
 ; * GUI 27 CHANGES * Check for admin times to be derived from 'base' schedule
"RTN","PSGS0",31,0)
 I X["@" S TMPAT=$P(X,"@",2) I TMPAT]"" D
"RTN","PSGS0",32,0)
 .I '$D(^PS(51.1,"AC","PSJ",TMPAT)) K TMPAT Q
"RTN","PSGS0",33,0)
 .I '$$DOW^PSIVUTL($P(X,"@")) K TMPAT Q
"RTN","PSGS0",34,0)
 .N LYN,ZZND,PSGS0XT,PSGS0Y,X S (PSGS0Y,PSGS0XT,X)=""
"RTN","PSGS0",35,0)
 .S X=TMPAT D DIC I $G(Y0)>0 S TMPAT=Y0
"RTN","PSGS0",36,0)
 I $G(TMPAT) S (PSGS0Y,$P(X,"@",2))=TMPAT,PSGS0XT="D"
"RTN","PSGS0",37,0)
 ; * GUI 27 CHANGES *
"RTN","PSGS0",38,0)
 I X["PRN",$$PRNOK(X),'$D(^PS(51.1,"AC","PSJ",X)) D  G Q
"RTN","PSGS0",39,0)
 .;PSJ*5*190 Check for One-time PRN
"RTN","PSGS0",40,0)
 .I $$ONE^PSJBCMA($G(DFN),$G(ON),X)="O" S XT="O" Q
"RTN","PSGS0",41,0)
 .I X["@"!$$DOW^PSIVUTL($P(X," PRN")) N DOW D  I $G(DOW) S (Y0,Y,PSGS0Y)=$P($P(X,"@",2)," ")
"RTN","PSGS0",42,0)
 ..N TMP S TMP=X N X S X=$P(TMP," PRN") D DW I $G(X)]"" S DOW=1
"RTN","PSGS0",43,0)
 ..I $G(DOW),$G(PSGST)]"" I ",P,R,"'[(","_PSGST_",") S (XT,PSGS0XT)="D"
"RTN","PSGS0",44,0)
 D DIC I $G(XT)]""!$G(Y0)!($G(X)]""&$G(PSJXI)) D  Q:'$D(X)  I $G(X)]"",PSGS0XT'="D" G:$D(^PS(51.1,"AC","PSJ",X)) Q3 I $P(X,"@")]"" G:$D(^PS(51.1,"AC","PSJ",$P(X,"@"))) Q3
"RTN","PSGS0",45,0)
 .S PSGS0XT=XT S:$G(Y0) (Y,PSGS0Y)=Y0 S:'PSGS0Y&((PSGS0XT)="D")&(X["@") PSGS0Y=$P(X,"@",2)
"RTN","PSGS0",46,0)
 .S PSGS0Y=$P(PSGS0Y," ")
"RTN","PSGS0",47,0)
 .; If entering from Verify action, and schedule exists in schedule file, and order's schedule is continuous,
"RTN","PSGS0",48,0)
 .; OR the order's schedule type is fill on request and the order's schedule is defined as continuous in schedule file,
"RTN","PSGS0",49,0)
 .; AND the order's schedule is not a PRN schedule, the order must have admin times.
"RTN","PSGS0",50,0)
 .Q:$G(PSGOES)'=2  Q:'$D(^PS(51.1,"AC","PSJ",X))
"RTN","PSGS0",51,0)
 .I $G(PSGST)="C"!($G(PSGST)="R"&($P($G(ZZND),"^",3))) I ($G(PSGST)'="P"),($G(PSGSCH)'[" PRN"),('$G(PSGAT)&'$G(PSGS0Y)),'$$ODD^PSGS0($G(PSGS0XT)) Q:($P($G(ZZND),"^",5)="O")  Q:$$ODD^PSGS0($P(ZZND,"^",3))  K X Q
"RTN","PSGS0",52,0)
 N TMPSCHX S TMPSCHX=X I $L(X,"@")<3 S TMPX=X D DW I $G(X)]"" K PSJNSS S (PSGS0XT,XT)="D" D  G Q
"RTN","PSGS0",53,0)
 .S Y=$S(($G(TMPSCHX)["@"):$P(TMPSCHX,"@",2),1:"")
"RTN","PSGS0",54,0)
 .I Y,(X'["@"),(TMPSCHX["@") S X=TMPSCHX
"RTN","PSGS0",55,0)
 S X=TMPSCHX
"RTN","PSGS0",56,0)
 I X'="" I $D(^PS(51.1,"AC","PSJ",X)) K PSJNSS G Q
"RTN","PSGS0",57,0)
 ;
"RTN","PSGS0",58,0)
NS I ($G(X)="^")!($G(X)="") K X S Y="" Q
"RTN","PSGS0",59,0)
 N NS S NS=0,PSJNSS=0
"RTN","PSGS0",60,0)
 I $G(Y)'>0 S X=X0,Y="",NS=1,PSJNSS=1
"RTN","PSGS0",61,0)
Q ;
"RTN","PSGS0",62,0)
 S PSGS0XT=$S(XT]"":XT,1:$G(PSGS0XT)),PSGS0Y=$S($G(Y):Y,$G(PSGS0Y):PSGS0Y,1:"") S:PSGS0XT<0 PSGS0XT=""
"RTN","PSGS0",63,0)
 I ('$G(PSGS0Y)&'$G(PSJDIC2)&$G(PSGAT))&'$G(PSJNEWOE)&$G(PSGS0XT) I PSGS0XT<1441 I ($L($G(PSGAT),"-")=PSGS0XT/1440)!($G(X)]""&($G(PSGSCH)=$G(X))) S PSGS0Y=$G(PSGAT)
"RTN","PSGS0",64,0)
Q2 K YY
"RTN","PSGS0",65,0)
 I '$G(PSJNSS),'$G(PSGS0Y),$G(YY) S PSGS0Y=YY
"RTN","PSGS0",66,0)
 I $G(X)]"",$$SCHREQ^PSJLIVFD(.P) D
"RTN","PSGS0",67,0)
 .I $$DOW^PSIVUTL(X)!$$PRNOK(X)!$D(^PS(51.1,"AC","PSJ",X)) S PSJNSS=0 Q
"RTN","PSGS0",68,0)
 .I $G(P(2))&$G(P(3)) D NSSCONT(X,PSGS0XT) S TMPX="" K X
"RTN","PSGS0",69,0)
 I ($G(PSJNSS)&($G(VALMBCK)'="Q"))!($G(PSJNSS)&$G(PSJLIFNI))!($G(PSJNSS)&$G(PSJTUD)) D
"RTN","PSGS0",70,0)
 .I $G(P(2))&$G(P(3)) Q
"RTN","PSGS0",71,0)
 .I ($G(X)]"") I ($G(PSGS0XT)'="D") D NSSCONT(X,PSGS0XT) S TMPX="" K X
"RTN","PSGS0",72,0)
Q3 I $G(X)]"" I $D(^PS(51.1,"AC","PSJ",X)) K PSJNSS
"RTN","PSGS0",73,0)
 K QX,SDW,SWD,X0,XT,Z Q
"RTN","PSGS0",74,0)
 ;
"RTN","PSGS0",75,0)
NSSCONT(SCH,FREQ) ;
"RTN","PSGS0",76,0)
 Q:SCH=""!($G(VALMBCK)]"")!$G(PSGMARSD)!$G(PSIVFN1)
"RTN","PSGS0",77,0)
 I $G(PSGOES),'$G(NSFF) Q
"RTN","PSGS0",78,0)
 N PSGS0XT,PSGSCH,DIR,X,Y S PSGSCH=SCH,PSGS0XT=FREQ,PSJNSS=1
"RTN","PSGS0",79,0)
 D NSSMSG I ($L(PSJNSS)>2),'$G(PSJXI) W !!,PSJNSS,! S PSJNSS=1
"RTN","PSGS0",80,0)
 S DIR(0)="EA",DIR("A")="Press Return to continue..." D ^DIR
"RTN","PSGS0",81,0)
 K NSFF Q
"RTN","PSGS0",82,0)
 ;
"RTN","PSGS0",83,0)
NSSMSG ;
"RTN","PSGS0",84,0)
 Q:$G(PSJXI)
"RTN","PSGS0",85,0)
 I '(",O,"[(","_$G(PSGST)_",")),$G(PSJNSS),$G(PSGSCH)]"" D
"RTN","PSGS0",86,0)
 .S PSJNSS=" WARNING - "_PSGSCH_" is an invalid schedule."
"RTN","PSGS0",87,0)
 S PSGSCH="",PSGS0XT=""
"RTN","PSGS0",88,0)
 Q
"RTN","PSGS0",89,0)
 ;
"RTN","PSGS0",90,0)
NSO(FQ) ;
"RTN","PSGS0",91,0)
 Q:'FQ!(FQ<0)!(",D,O,"[(","_$G(PSGST)_",")) ""
"RTN","PSGS0",92,0)
 K FRQOUT S FRQOUT=$S(FQ<60:(FQ_"minute"),(FQ<1440)&(FQ#60):(FQ_" minute"),(FQ<1440)!(FQ#1440):(FQ/60_" hour"),1:(FQ/1440_" day")) D
"RTN","PSGS0",93,0)
 . S:(+FRQOUT'=1) FRQOUT=FRQOUT_"s"
"RTN","PSGS0",94,0)
 Q FRQOUT
"RTN","PSGS0",95,0)
 ;
"RTN","PSGS0",96,0)
ENCHK ;
"RTN","PSGS0",97,0)
 N H,I
"RTN","PSGS0",98,0)
 I $S($L($P(X,"-"))>4:1,$L(X)>119:1,$L(X)<2:1,X'>0:1,1:X'?.ANP) K X Q
"RTN","PSGS0",99,0)
 S X(1)=$P(X,"-") I X(1)'?2N,X(1)'?4N K X Q
"RTN","PSGS0",100,0)
 S X(1)=$L(X(1)) I X'["-"&((X>$E(2400,1,X(1))!($E(X,3,4)>59))) K X Q
"RTN","PSGS0",101,0)
 F X(2)=2:1:$L(X,"-") S X(3)=$P(X,"-",X(2)) I $S($L(X(3))'=X(1):1,X(3)>$E(2400,1,X(1)):1,$E(X(3),3,4)>59:1,1:X(3)'>$P(X,"-",X(2)-1)) K X Q
"RTN","PSGS0",102,0)
 Q:'$D(X)
"RTN","PSGS0",103,0)
 F X(2)=1:1:$L(X,"-") S X(3)=$P(X,"-",X(2)) I $E(X(3),3,4)>59 K X Q
"RTN","PSGS0",104,0)
 Q:'$D(X)
"RTN","PSGS0",105,0)
 S X(1)=$L(X,"-"),X(2)=$G(PSGS0XT),PSGSCH=$S($G(PSGSCH)]"":PSGSCH,1:$G(P(9)))
"RTN","PSGS0",106,0)
 I $G(PSGSCH)="" Q  ;No schedule info, so just validate the numbers and quit.
"RTN","PSGS0",107,0)
 I $D(^PS(51.1,"AC","PSJ",PSGSCH)) S H=+$O(^PS(51.1,"AC","PSJ",PSGSCH,0)) S I=$P($G(^PS(51.1,H,0)),"^",5)
"RTN","PSGS0",108,0)
 I $G(I)="" S I=$S(PSGSCH["PRN":"P",1:"C")
"RTN","PSGS0",109,0)
 I I="D",$L(X,"-")>0 K:$D(X) X(1),X(2),X(3) S I="C" Q  ;DOW schedules require at least one admin time
"RTN","PSGS0",110,0)
 I $G(I)="O" D  Q  ;One Time schedules
"RTN","PSGS0",111,0)
 . I $L(X,"-")>1 K X Q  ;One Time schedules allow one admin time
"RTN","PSGS0",112,0)
 I X(2)="" Q  ;No frequency - cannot validate admin times to frequency
"RTN","PSGS0",113,0)
 I X(2)>1439,$L(X,"-")>1 K X Q  ;PSJ*5*113 Schedules with frequency greater than 1 day can only have one admin time.
"RTN","PSGS0",114,0)
 I X(2)>0,X(2)<1440,X(1)>(1440/X(2)) K X Q  ;PSJ*5*113 Admin times must match frequency or fewer
"RTN","PSGS0",115,0)
 I X(2)>0,X(2)<1440,1440#X(2)'=0,X(1)>0 K X Q  ;PSJ*5*113 Odd schedules cannot have admin times
"RTN","PSGS0",116,0)
 I X(2)>0,X(2)>1440,X(2)#1440'=0,X(1)>1 K X Q  ;PSJ*5*113 Odd schedules cannot have admin times
"RTN","PSGS0",117,0)
 K:$D(X) X(1),X(2),X(3)
"RTN","PSGS0",118,0)
 Q
"RTN","PSGS0",119,0)
 ;
"RTN","PSGS0",120,0)
DIC ; Check for schedule's existence in ADMINISTRATION SCHEDULE file (#51.1)
"RTN","PSGS0",121,0)
 ; Input:    
"RTN","PSGS0",122,0)
 ;           X = Schedule Name
"RTN","PSGS0",123,0)
 ;     PSJSLUP = If $G(PSJSLUP), perform interactive fileman lookup (optional).
"RTN","PSGS0",124,0)
 ;     PSGSFLG = If $G(PSGSFLG), return schedule IEN in PSGSCIEN variable (optional)
"RTN","PSGS0",125,0)
 ;    PSJLIFNI = Flag indicating a U/D order is being finished as an IV (optional).
"RTN","PSGS0",126,0)
 ;      PSGOES = If PSGOES=1, IX^DIC is called silently. If PSGOES=2, IX^DIC is not called (optional).
"RTN","PSGS0",127,0)
 ;      PSJPWD = IEN of Inpatient Ward associated with the patient/order/schedule combination (optional).
"RTN","PSGS0",128,0)
 ; Output:
"RTN","PSGS0",129,0)
 ;           X = Schedule Name if valid Input Schedule X, undefined if invalid Input Schedule X.
"RTN","PSGS0",130,0)
 ;     PSGS0XT = Frequency of validated schedule.
"RTN","PSGS0",131,0)
 ;     PSGS0Y  = Default Admin Times of validated schedule.
"RTN","PSGS0",132,0)
 ;    PSGSCIEN = IEN of validated schedule, if PSGSLFG is passed in and is evaluated to TRUE.
"RTN","PSGS0",133,0)
 ;
"RTN","PSGS0",134,0)
 K Y0,PSJXI N Y,PSGS0ST
"RTN","PSGS0",135,0)
 S Z=0 F PSJXI=0:1 S Z=$O(^PS(51.1,"AC","PSJ",X,Z)) Q:'Z
"RTN","PSGS0",136,0)
 I $G(X)]"",'$G(PSJSLUP) D
"RTN","PSGS0",137,0)
 .I $D(^PS(51.1,"AC","PSJ",X)) D  Q:$G(PSGS0Y)&($G(PSGS0XT)]"")
"RTN","PSGS0",138,0)
 ..;*** PSJ*5*256
"RTN","PSGS0",139,0)
 ..NEW PSGIEN,PSGSCHX
"RTN","PSGS0",140,0)
 ..S PSGIEN=$O(^PS(51.1,"AC","PSJ",X,0)) I +PSGIEN S PSGSCHX=$G(^PS(51.1,+PSGIEN,0)) I $P(PSGSCHX,U,5)="D" S PSGS0XT="D",PSJNSS=0,PSGS0Y=$P(PSGSCHX,U,2) Q
"RTN","PSGS0",141,0)
 ..I $$DOW^PSIVUTL(X) S PSGS0XT="D",PSJNSS=0 S:X["@" (Y0,PSGS0Y)=$P(X,"@",2) Q
"RTN","PSGS0",142,0)
 ..I $G(NSFF) S Y0=$S($G(PSGS0Y):PSGS0Y,$G(PSGAT)&'$G(PSJNEWOE):PSGAT,1:"") S:Y0 PSGS0Y=Y0
"RTN","PSGS0",143,0)
 .; Check for duplicate schedules - force selection
"RTN","PSGS0",144,0)
 .Q:PSJXI>1&('$G(PSGOES))&($G(PSGS0XT)]"")
"RTN","PSGS0",145,0)
 .I $D(^PS(51.1,"AC","PSJ",X)) N FREQ,ADMATCH S FREQ=$G(PSGS0XT) D
"RTN","PSGS0",146,0)
 ..N PSGS0XT,PSGS0Y,PSGST D ADMIN^PSJORPOE S:$G(PSGS0XT) XT=PSGS0XT S:$G(PSGS0Y) (Y0,Y)=PSGS0Y I $G(PSGST)'="" S PSGS0ST=PSGST
"RTN","PSGS0",147,0)
 ..;Check flag PSGSFLG to determine whether to return the schedule IEN in PSGSCIEN.
"RTN","PSGS0",148,0)
 .S:$G(XT)]"" PSGS0XT=XT S:$G(Y) PSGS0Y=Y
"RTN","PSGS0",149,0)
 .I $$DOW^PSIVUTL(X) S:PSGS0XT="" (XT,PSGS0XT)="D" S:PSGS0Y="" (Y0,PSGS0Y)=$S($P(X,"@",2):$P(X,"@",2),1:"")
"RTN","PSGS0",150,0)
 ;I $G(PSJLIFNI)!($G(P(4))]""&($G(P(2))]"")) I '$D(^PS(51.1,"AC","PSJ",X))!($G(PSJXI)>1) S PSJSLUP=1
"RTN","PSGS0",151,0)
 I $G(P(4))]"" I '$D(^PS(51.1,"AC","PSJ",X))!($G(PSJXI)>1) S PSJSLUP=1
"RTN","PSGS0",152,0)
 I $G(NSFF),$G(PSJXI)>1 D
"RTN","PSGS0",153,0)
 .I $G(PSGS0XT)="",$G(NSFF),$G(PSGXT)]"" S PSGS0XT=PSGXT Q
"RTN","PSGS0",154,0)
 .I $G(PSGS0XT)=""!($G(PSGS0Y)="") S PSJSLUP=1
"RTN","PSGS0",155,0)
 I '$G(PSJSLUP) Q:$G(PSGS0XT)]""&($G(PSGS0Y)]"")  Q:($G(PSGS0XT)="D"&('$D(^PS(51.1,"AC","PSJ",X))))
"RTN","PSGS0",156,0)
 Q:$G(PSGOES)=2
"RTN","PSGS0",157,0)
 Q:$G(PSGS0XT)]""&(PSJXI=1)
"RTN","PSGS0",158,0)
 I $G(PSGS0ST)="O",PSJXI=1 Q  ;one-time order,exact match (PSJ*5*207)
"RTN","PSGS0",159,0)
 K PSJSLUP
"RTN","PSGS0",160,0)
 ;*** PSJ*5*256; "E" is needed FN as IV when multiple entries with same schedule name so the user can select a schedule from it. chk pending so vf not prompt for the schedule again
"RTN","PSGS0",161,0)
 K DIC S DIC="^PS(51.1,",DIC(0)=$S($D(PSGOES):"MZVK",$D(PSJOLDNM):"MZVK",1:"CEMVZK")_$S((+$G(PSJLIFNI)&($G(ON)["P")):"E",1:"")
"RTN","PSGS0",162,0)
 ;*** PSJ*5*358 - Lookup isn't working when edit during finishing UD or IV
"RTN","PSGS0",163,0)
 I (DIC(0)'["E"),($G(PSJOCFG)["FN"),($S($G(PSGOEER)[26:1,$G(EDIT)[26:1,$G(PSGOEEF(26))=1:1,1:"")) S DIC(0)=DIC(0)_"E"
"RTN","PSGS0",164,0)
 ; The naked reference below refers to the full reference inside indirection to ^PS(51.1
"RTN","PSGS0",165,0)
 S DIC("W")="W ""  "","_$S('$D(PSJPWD):"$P(^(0),""^"",2)",'PSJPWD:"$P(^(0),""^"",2)",1:"$S($D(^PS(51.1,+Y,1,+PSJPWD,0)):$P(^(0),""^"",2),1:$P(^PS(51.1,+Y,0),""^"",2))"),D="APPSJ^D"
"RTN","PSGS0",166,0)
 S:$$PATCH^XPDUTL("PSJ*5.0*353") DIC("W")=DIC("W")_",$S($P(^PS(51.1,+Y,0),U,12):"" **INACTIVE**  "",1:"""")"       ;*353 display inactive when needed 
"RTN","PSGS0",167,0)
 S PSJDIC2=1
"RTN","PSGS0",168,0)
 ;D IX^DIC K DIC S:$D(DIE)#2 DIC=DIE I Y'>0 D  Q
"RTN","PSGS0",169,0)
 D MIX^DIC1 K DIC S:$D(DIE)#2 DIC=DIE I Y'>0 D  Q
"RTN","PSGS0",170,0)
 .I '$$DOW^PSIVUTL(X),'$$PRNOK(X),'$$ODD($G(PSGS0XT)),'$$ODD($P($G(ZZND),"^",3)),($P($G(ZZND),"^",5)'="O") S X="",PSJNSS=1,XT="",PSJXI=""
"RTN","PSGS0",171,0)
 S XT=$S("C"[$P(Y(0),"^",5):$P(Y(0),"^",3),1:$P(Y(0),"^",5))
"RTN","PSGS0",172,0)
 S X=+Y,Y="" I $D(PSJPWD),$D(^PS(51.1,+X,1,+PSJPWD,0)) S Y=$P(^(0),"^",2)
"RTN","PSGS0",173,0)
 ;Check flag PSGSFLG to determine whether to return the schedule IEN in PSGSCIEN.
"RTN","PSGS0",174,0)
 I $G(PSGSFLG) S PSGSCIEN=X
"RTN","PSGS0",175,0)
 S (X,X0)=Y(0,0) S:$G(Y)="" Y=$P(Y(0),"^",2)
"RTN","PSGS0",176,0)
 S (PSGS0Y,Y0)=$G(Y),Y0(0)=Y(0) I $P(Y(0),"^",3) S XT=$P(Y(0),"^",3)
"RTN","PSGS0",177,0)
 I $G(PSGS0XT)="",$$DOW^PSIVUTL(X) S (XT,PSGS0XT)="D"
"RTN","PSGS0",178,0)
 Q
"RTN","PSGS0",179,0)
 ;
"RTN","PSGS0",180,0)
DW ;
"RTN","PSGS0",181,0)
 N Y
"RTN","PSGS0",182,0)
 Q:($L(X,"@")>2)
"RTN","PSGS0",183,0)
 N AT I X["@" S AT=$P(X,"@",2)
"RTN","PSGS0",184,0)
 S SWD="SUNDAYS^MONDAYS^TUESDAYS^WEDNESDAYS^THURSDAYS^FRIDAYS^SATURDAYS",SDW=X,X=$P(X,"@",2) N XABB S XABB=""
"RTN","PSGS0",185,0)
 I X]"" D ENCHK Q:'$D(X)
"RTN","PSGS0",186,0)
 S X=$P(SDW,"@"),X(1)="-" I X?.E1P.E,X'["-"  ;F QX=1:1:$L(X) I $E(X,QX)?1P S X(1)=$E(X,QX) Q
"RTN","PSGS0",187,0)
 F Q=1:1:$L(X,X(1)) K:SWD="" X Q:SWD=""  S Z=$P(X,X(1),Q) D DWC Q:'$D(X)
"RTN","PSGS0",188,0)
 I $D(X) F II=1:1:$L(X,X(1)) S XABB=$G(XABB)_$E($P(X,X(1),II),1,2)_"-"
"RTN","PSGS0",189,0)
 K X(1) S:$D(X) X=SDW I $G(X)]"" I $TR(XABB,"-")]"" S X=$E($G(XABB),1,$L(XABB)-1)
"RTN","PSGS0",190,0)
 I $G(AT) S PSGS0Y=AT
"RTN","PSGS0",191,0)
 Q
"RTN","PSGS0",192,0)
DWC I $L(Z)<2 K X Q
"RTN","PSGS0",193,0)
 F QX=1:1:$L(SWD,"^") S Y=$P(SWD,"^",QX) I $P(Y,Z)="" S SWD=$P(SWD,Y,2) S:$L(SWD) SWD=$E(SWD,2,50) Q
"RTN","PSGS0",194,0)
 E  K X
"RTN","PSGS0",195,0)
 Q
"RTN","PSGS0",196,0)
 ;
"RTN","PSGS0",197,0)
PRNOK(PSCH) ;
"RTN","PSGS0",198,0)
 Q:PSCH'["PRN" 0
"RTN","PSGS0",199,0)
 I $TR(PSCH," ")="PRN" Q 1
"RTN","PSGS0",200,0)
 N BASE,I,OK S OK=0 S I=$P(PSCH," PRN") I I]"",$D(^PS(51.1,"AC","PSJ",I)) S OK=1
"RTN","PSGS0",201,0)
 I 'OK D
"RTN","PSGS0",202,0)
 .I PSCH["@" I $D(^PS(51.1,"AC","PSJ",$P(PSCH,"@")))!$$DOW^PSIVUTL($P(PSCH,"@")) S OK=1 Q
"RTN","PSGS0",203,0)
 .I $$DOW^PSIVUTL($P(PSCH," PRN")) S OK=1
"RTN","PSGS0",204,0)
 Q OK
"RTN","PSGS0",205,0)
ODD(PSF) ;determine if this is an odd schedule
"RTN","PSGS0",206,0)
 I PSF>1439,PSF#1440 Q 1
"RTN","PSGS0",207,0)
 I PSF,PSF<1440,1440#PSF Q 1
"RTN","PSGS0",208,0)
 Q 0
"RTN","PSIVOCDS")
0^1^B142090841
"RTN","PSIVOCDS",1,0)
PSIVOCDS ;BIR/MV - PROCESS DOSING ORDER CHECKS FOR IV ;6 Jun 07 / 3:37 PM
"RTN","PSIVOCDS",2,0)
 ;;5.0;INPATIENT MEDICATIONS ;**181,252,257,256,347,358**;16 DEC 97;Build 10
"RTN","PSIVOCDS",3,0)
 ;
"RTN","PSIVOCDS",4,0)
 ; Reference to ^PS(51.1 is supported by DBIA #2177
"RTN","PSIVOCDS",5,0)
 ; Reference to ^PSDRUG( is supported by DBIA #2192.
"RTN","PSIVOCDS",6,0)
 ; Reference to ^PSSDSAPI is supported by DBIA #5425.
"RTN","PSIVOCDS",7,0)
 ; Reference to ^PSSFDBRT is supported by DBIA #5496.
"RTN","PSIVOCDS",8,0)
 ; Reference to $$CONV^PSSDSAPK is supported by DBIA #5497.
"RTN","PSIVOCDS",9,0)
 ;
"RTN","PSIVOCDS",10,0)
IN(PSJBASE) ;
"RTN","PSIVOCDS",11,0)
 ;PSJBASE - Base(Literal value for TMP global)- Required
"RTN","PSIVOCDS",12,0)
 ;PSIVDDSV(AD/SOL,CNT)=P1..P9
"RTN","PSIVOCDS",13,0)
 ; P1=Drug IEN; P2=Dspl name(add/sol or CPRS OI; P3=Numeric dose & unit; P4=Bottle #
"RTN","PSIVOCDS",14,0)
 ; P5=""; P6=""; P7=""; P8=Strength/Vol; P9=Unit
"RTN","PSIVOCDS",15,0)
 ;
"RTN","PSIVOCDS",16,0)
 ;These two flags below are set when stuff freq, duration to 1 & Duration rate = dose rate
"RTN","PSIVOCDS",17,0)
 ;They are used by the output routine to generate the appropriate output messages.
"RTN","PSIVOCDS",18,0)
 ;PSJFDB(PSJCNT,"INF_ERROR")="" & PSJFDB(PSJCNT,"FRQ_ERROR")=""
"RTN","PSIVOCDS",19,0)
 ;
"RTN","PSIVOCDS",20,0)
 NEW ON,PSJCNT,PSJCNTX,PSJONEFG,PSJRT,PSIVAS,PSIVAS0,PSIVDDSV,PSPDRG,PSJALLGY,X,PSJP8,PSJP8NUM,PSJP8UNT,PSJP8TME,PSJOIX
"RTN","PSIVOCDS",21,0)
 K PSJOCDS,PSJFDB,PSIVDDSV,PSPDRG,PSJALLGY
"RTN","PSIVOCDS",22,0)
 S PSJCNT=0
"RTN","PSIVOCDS",23,0)
 ;PSJRT - FDB Route
"RTN","PSIVOCDS",24,0)
 S PSJRT=$P($$MRT^PSSDSAPI(+P("MR")),U,2)
"RTN","PSIVOCDS",25,0)
 ;Set Flag to indicate CPRS OI had no active AD/SOL.
"RTN","PSIVOCDS",26,0)
 S PSJOIX="" F  S PSJOIX=$O(PSJIV("OI_ERROR",PSJOIX)) Q:PSJOIX=""  D
"RTN","PSIVOCDS",27,0)
 . S PSJCNT=PSJCNT+1
"RTN","PSIVOCDS",28,0)
 . S PSJFDB(PSJCNT,"RX_NUM")="I;;PROSPECTIVE;"_PSJCNT
"RTN","PSIVOCDS",29,0)
 . S PSJFDB(PSJCNT,"DRUG_NM")=PSJOIX
"RTN","PSIVOCDS",30,0)
 . S PSJFDB(PSJCNT,"OI")=$P(PSJIV("OI_ERROR",PSJOIX),U,2)
"RTN","PSIVOCDS",31,0)
 . S PSJFDB(PSJCNT,"OI_ERROR",PSJOIX)=$P(PSJIV("OI_ERROR",PSJOIX),U)_U_"I;;PROSPECTIVE;"_PSJCNT
"RTN","PSIVOCDS",32,0)
 D SETDD^PSIVOC(1)
"RTN","PSIVOCDS",33,0)
 I ($G(PSIVDDSV("TOT_VOL"))=""),($G(PSJIV("TOT_VOL"))]"") S PSIVDDSV("TOT_VOL")=PSJIV("TOT_VOL")
"RTN","PSIVOCDS",34,0)
 F PSIVAS="AD","SOL" F PSJCNTX=0:0 S PSJCNTX=$O(PSIVDDSV(PSIVAS,PSJCNTX)) Q:'PSJCNTX  D
"RTN","PSIVOCDS",35,0)
 . S PSIVAS0=$G(PSIVDDSV(PSIVAS,PSJCNTX))
"RTN","PSIVOCDS",36,0)
 .;PSJ*5*252 (6/29/11) - No longer need to convert "ML" to "L" now FDB handles both units for this drug.
"RTN","PSIVOCDS",37,0)
 .;I PSIVAS="SOL" S X=$$LITER($P(PSIVAS0,U,8)) I X]"" D
"RTN","PSIVOCDS",38,0)
 .;. S $P(PSIVAS0,U,8)=$P(X,U)
"RTN","PSIVOCDS",39,0)
 .;. S $P(PSIVAS0,U,9)=$P(X,U,2)
"RTN","PSIVOCDS",40,0)
 . S PSJCNT=PSJCNT+1
"RTN","PSIVOCDS",41,0)
 . D COMMON
"RTN","PSIVOCDS",42,0)
 . I P("DTYP")=1 S PSJOCDS("CONTEXT")="IP-IV-I" D IVPB
"RTN","PSIVOCDS",43,0)
 . I P("DTYP")>1 S PSJOCDS("CONTEXT")="IP-IV-C" D IV
"RTN","PSIVOCDS",44,0)
 Q
"RTN","PSIVOCDS",45,0)
IV ;Setup input data for Continuous IV (admixture, hyperal)
"RTN","PSIVOCDS",46,0)
 NEW PSJXRT,PSJP8ERR
"RTN","PSIVOCDS",47,0)
 S PSJP8=$$P8^PSJMISC2(P(8))
"RTN","PSIVOCDS",48,0)
 D BASIC
"RTN","PSIVOCDS",49,0)
 S PSJP8NUM=+$P(PSJP8,U)
"RTN","PSIVOCDS",50,0)
 S PSJP8UNT=$P(PSJP8,U,2)
"RTN","PSIVOCDS",51,0)
 S PSJP8TME=$P(PSJP8,U,3)
"RTN","PSIVOCDS",52,0)
 ;All premix are using the "Continuous Infusion" Route logic. This is so Potassium gets both single
"RTN","PSIVOCDS",53,0)
 ;and max dosing checks.  Cisplatin premix won't work since FDB can't process as "Continuous Infusion"
"RTN","PSIVOCDS",54,0)
 I PSIVAS="SOL" D PREMIX Q
"RTN","PSIVOCDS",55,0)
 S PSJXRT=$$RTESCRN($P($$MRT^PSSDSAPI(+P("MR")),U,1))
"RTN","PSIVOCDS",56,0)
 I $$ISONEAD(),$$ISALLBAG(),('$$CLASS(PSJFDB(PSJCNT,"DRUG_IEN"))),(PSJXRT'=0),$$FDBRT(PSJFDB(PSJCNT,"DRUG_IEN"),PSJXRT) D ONEAD(PSJXRT) Q
"RTN","PSIVOCDS",57,0)
 I PSJP8="" D FREEDOSE Q
"RTN","PSIVOCDS",58,0)
 D CONTIV
"RTN","PSIVOCDS",59,0)
 Q
"RTN","PSIVOCDS",60,0)
IVPB ;Setup input data for Schedule IV
"RTN","PSIVOCDS",61,0)
 NEW X,PSJP9,PSJP15,PSJX
"RTN","PSIVOCDS",62,0)
 S PSJOCDS(PSJCNT,"DRUG_AMT")=$P(PSIVAS0,U,8)
"RTN","PSIVOCDS",63,0)
 S PSJOCDS(PSJCNT,"DRUG_UNIT")=$P(PSIVAS0,U,9)
"RTN","PSIVOCDS",64,0)
 I '+$G(PSJIV("DUR")) D
"RTN","PSIVOCDS",65,0)
 . S X=$$DURATION()
"RTN","PSIVOCDS",66,0)
 . S PSJOCDS(PSJCNT,"DRATE")=$S(+X:X_"M",1:"")
"RTN","PSIVOCDS",67,0)
 I +$G(PSJIV("DUR"))<1440,(+$G(PSJIV("DUR"))>0) S PSJOCDS(PSJCNT,"DRATE")=PSJIV("DUR")
"RTN","PSIVOCDS",68,0)
 S PSJOCDS(PSJCNT,"MR_IEN")=+P("MR")
"RTN","PSIVOCDS",69,0)
 S PSJOCDS(PSJCNT,"DO")=""
"RTN","PSIVOCDS",70,0)
 S PSJOCDS(PSJCNT,"SCHEDULE")=P(9)
"RTN","PSIVOCDS",71,0)
 ;
"RTN","PSIVOCDS",72,0)
 S PSJFDB(PSJCNT,"DOSE_AMT")=$S('+$P(PSIVAS0,U,8):"",1:$P(PSIVAS0,U,8))
"RTN","PSIVOCDS",73,0)
 S PSJFDB(PSJCNT,"DOSE_RATE")="DAY"
"RTN","PSIVOCDS",74,0)
 S PSJFDB(PSJCNT,"DOSE_UNIT")=$P(PSIVAS0,U,9)
"RTN","PSIVOCDS",75,0)
 ;
"RTN","PSIVOCDS",76,0)
 S PSJONEFG=0
"RTN","PSIVOCDS",77,0)
 ;PSJ*5*347 - P(9) contains " PRN"
"RTN","PSIVOCDS",78,0)
 S PSJP9=P(9)
"RTN","PSIVOCDS",79,0)
 I (P(9)[" PRN"),'$D(^PS(51.1,"APPSJ",P(9))) S PSJP9=$P(P(9)," PRN",1)
"RTN","PSIVOCDS",80,0)
 I $$ONE^PSJORPOE(PSJP9)!$$ONCALL^PSJMISC(PSJP9) S PSJONEFG=1 D SINGLE Q
"RTN","PSIVOCDS",81,0)
 ;I $$ONE^PSJORPOE(P(9))!$$ONCALL^PSJMISC(P(9)) S PSJONEFG=1 D SINGLE Q
"RTN","PSIVOCDS",82,0)
 I +$G(PSJIV("DOSE_CNT")) S PSJFDB(PSJCNT,"FREQ")=$G(PSJIV("DOSE_CNT")) Q
"RTN","PSIVOCDS",83,0)
 I +$G(PSJOCDS(PSJCNT,"DRATE")) D UND24HRS^PSJOCDS(+PSJOCDS(PSJCNT,"DRATE"),$G(P(11)),$G(P(15)),$G(P(2)),$G(P(3)),$G(P(9))) Q
"RTN","PSIVOCDS",84,0)
 I 'PSJONEFG D
"RTN","PSIVOCDS",85,0)
 . S X="",PSJP9=P(9),PSJX=0
"RTN","PSIVOCDS",86,0)
 . S:P(9)]"" PSJX=+$O(^PS(51.1,"AC","PSJ",P(9),0))
"RTN","PSIVOCDS",87,0)
 . S PSJP15=P(15)
"RTN","PSIVOCDS",88,0)
 . I (P(9)["PRN"),'PSJX S PSJP15=""
"RTN","PSIVOCDS",89,0)
 . ;I (P(9)["PRN"),'$O(^PS(51.1,"AC","PSJ",P(9),0)) S PSJP15=""
"RTN","PSIVOCDS",90,0)
 . ;I P(15)="D",(P(11)]"") S $P(PSJP9,"@",2)=P(11)
"RTN","PSIVOCDS",91,0)
 . I 'PSJX&(P(15)="D")&(P(11)]"") S $P(PSJP9,"@",2)=P(11)
"RTN","PSIVOCDS",92,0)
 . ;Check for DOW schedule
"RTN","PSIVOCDS",93,0)
 . I PSJP15="",PSJX S PSJP15=$P($G(^PS(51.1,PSJX,0)),U,5)
"RTN","PSIVOCDS",94,0)
 . I P(9)]"" S X=$P($$FRQ^PSSDSAPI(PSJP9,PSJP15,"I",,PSJFDB(PSJCNT,"DRUG_IEN")),U)
"RTN","PSIVOCDS",95,0)
 . I X="" S X=1 S PSJFDB(PSJCNT,"FRQ_ERROR")=""
"RTN","PSIVOCDS",96,0)
 . S PSJFDB(PSJCNT,"FREQ")=X
"RTN","PSIVOCDS",97,0)
 . S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSIVOCDS",98,0)
 . S PSJFDB(PSJCNT,"DURATION_RT")="DAY"
"RTN","PSIVOCDS",99,0)
 Q
"RTN","PSIVOCDS",100,0)
SINGLE ;Set fields needed for Single Dose type
"RTN","PSIVOCDS",101,0)
 ; Can't get FDB to return correct data for Continuous Infusion /w Single dose so all Continuous will be sent in as Maintenance.
"RTN","PSIVOCDS",102,0)
 I PSJFDB(PSJCNT,"ROUTE")=("CONTINUOUS INFUSION") Q
"RTN","PSIVOCDS",103,0)
 S PSJFDB(PSJCNT,"DOSE_TYPE")="SINGLE DOSE"
"RTN","PSIVOCDS",104,0)
 S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",105,0)
 S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSIVOCDS",106,0)
 S PSJFDB(PSJCNT,"DURATION_RT")=PSJFDB(PSJCNT,"DOSE_RATE")
"RTN","PSIVOCDS",107,0)
 Q
"RTN","PSIVOCDS",108,0)
COMMON ;Set common data for all IV types
"RTN","PSIVOCDS",109,0)
 S PSJFDB(PSJCNT,"RX_NUM")="I;"_$G(PSJPON)_";PROSPECTIVE;"_PSJCNT
"RTN","PSIVOCDS",110,0)
 S PSJFDB(PSJCNT,"DRUG_IEN")=$P(PSIVAS0,U)
"RTN","PSIVOCDS",111,0)
 S PSJFDB(PSJCNT,"DRUG_NM")=$P(PSIVAS0,U,2)_" "_$P(PSIVAS0,U,3)
"RTN","PSIVOCDS",112,0)
 S PSJFDB(PSJCNT,"DOSE_UNIT")=$P(PSIVAS0,U,9)
"RTN","PSIVOCDS",113,0)
 S PSJFDB(PSJCNT,"ROUTE")=PSJRT
"RTN","PSIVOCDS",114,0)
 S PSJFDB(PSJCNT,"DOSE_TYPE")="MAINTENANCE"
"RTN","PSIVOCDS",115,0)
 S PSJFDB(PSJCNT,"SPECIFIC")=1
"RTN","PSIVOCDS",116,0)
 ;This is set when CPRS sends Duration without entering a solution.
"RTN","PSIVOCDS",117,0)
 I $D(PSJIV("FRQ_ERROR")) S PSJFDB(PSJCNT,"FRQ_ERROR")="",PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",118,0)
 Q
"RTN","PSIVOCDS",119,0)
BASIC ;Set basic data for non schedule IVs
"RTN","PSIVOCDS",120,0)
 S PSJFDB(PSJCNT,"DOSE_RATE")="DAY"
"RTN","PSIVOCDS",121,0)
 S PSJFDB(PSJCNT,"FREQ")=""
"RTN","PSIVOCDS",122,0)
 S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSIVOCDS",123,0)
 S PSJFDB(PSJCNT,"DURATION_RT")="DAY"
"RTN","PSIVOCDS",124,0)
 ; SDA is set to the additive strength or volume of the solution.
"RTN","PSIVOCDS",125,0)
 S PSJFDB(PSJCNT,"DOSE_AMT")=$P(PSIVAS0,U,8)
"RTN","PSIVOCDS",126,0)
 Q
"RTN","PSIVOCDS",127,0)
FREEDOSE ;Set data for free text dose
"RTN","PSIVOCDS",128,0)
 ;"GENERAL" info only needed to pass in Dose Route and Dose Type.
"RTN","PSIVOCDS",129,0)
 ;"Exception" node sets here to get the specified error back for free text dosing.
"RTN","PSIVOCDS",130,0)
 S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",131,0)
 S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSIVOCDS",132,0)
 S PSJFDB(PSJCNT,"DURATION_RT")=PSJFDB(PSJCNT,"DOSE_RATE")
"RTN","PSIVOCDS",133,0)
 S PSJFDB(PSJCNT,"INF_ERROR")=""
"RTN","PSIVOCDS",134,0)
 I $G(PSJP8ERR)=2!($G(PSJP8ERR)=4) S PSJFDB(PSJCNT,"WT_ERROR")=""
"RTN","PSIVOCDS",135,0)
 I $G(PSJP8ERR)=3!($G(PSJP8ERR)=4) S PSJFDB(PSJCNT,"HT_ERROR")=""
"RTN","PSIVOCDS",136,0)
 Q
"RTN","PSIVOCDS",137,0)
ONEAD(PSJRT) ;Setup data for 'Continuous Infusion' IV type
"RTN","PSIVOCDS",138,0)
 NEW PSJCLASS,PSJX
"RTN","PSIVOCDS",139,0)
 I $G(PSJRT)=0!($G(PSJRT)="") Q
"RTN","PSIVOCDS",140,0)
 ;Check to make sure the infusion rate is in form of "ml/hr" before applying the calculation
"RTN","PSIVOCDS",141,0)
 S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",142,0)
 S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSIVOCDS",143,0)
 S PSJFDB(PSJCNT,"ROUTE")=PSJRT
"RTN","PSIVOCDS",144,0)
 I PSJP8="" D FREEDOSE Q
"RTN","PSIVOCDS",145,0)
 S PSJFDB(PSJCNT,"DOSE_RATE")=PSJP8TME
"RTN","PSIVOCDS",146,0)
 S PSJFDB(PSJCNT,"DURATION_RT")=PSJP8TME
"RTN","PSIVOCDS",147,0)
 I PSJP8UNT="MILLILITERS",(PSJP8TME="HOUR") D
"RTN","PSIVOCDS",148,0)
 . S PSJFDB(PSJCNT,"DOSE_AMT")=$$SDACI()
"RTN","PSIVOCDS",149,0)
 . S PSJFDB(PSJCNT,"DOSE_UNIT")=$P(PSIVAS0,U,9)
"RTN","PSIVOCDS",150,0)
 I PSJP8UNT'="MILLILITERS" D
"RTN","PSIVOCDS",151,0)
 . S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",152,0)
 . S PSJFDB(PSJCNT,"DOSE_AMT")=PSJP8NUM
"RTN","PSIVOCDS",153,0)
 . S PSJFDB(PSJCNT,"DOSE_UNIT")=PSJP8UNT
"RTN","PSIVOCDS",154,0)
 . S PSJFDB(PSJCNT,"DOSE_RATE")=PSJP8TME
"RTN","PSIVOCDS",155,0)
 . S PSJFDB(PSJCNT,"DURATION_RT")=PSJP8TME
"RTN","PSIVOCDS",156,0)
 Q
"RTN","PSIVOCDS",157,0)
CONTIV ;Set data needed for continuous IV with multiple drugs
"RTN","PSIVOCDS",158,0)
 NEW PSJFREQ,PSJDIFF
"RTN","PSIVOCDS",159,0)
 S PSJDIFF=+$$DURATION()
"RTN","PSIVOCDS",160,0)
 ; Order has duration <24 hrs
"RTN","PSIVOCDS",161,0)
 I PSJDIFF D UND24HRS
"RTN","PSIVOCDS",162,0)
 ; Order has duration >= 24 hrs
"RTN","PSIVOCDS",163,0)
 I 'PSJDIFF S PSJFDB(PSJCNT,"FREQ")=$$IVFREQ
"RTN","PSIVOCDS",164,0)
 ;
"RTN","PSIVOCDS",165,0)
 S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSIVOCDS",166,0)
 S PSJFDB(PSJCNT,"DOSE_RATE")="DAY"
"RTN","PSIVOCDS",167,0)
 S PSJFDB(PSJCNT,"DURATION_RT")="DAY"
"RTN","PSIVOCDS",168,0)
 Q
"RTN","PSIVOCDS",169,0)
ISONEAD() ;Return 1 if there's only one additive
"RTN","PSIVOCDS",170,0)
 NEW X,PSJX
"RTN","PSIVOCDS",171,0)
 I $D(PSIVDDSV("AD")),$D(PSIVDDSV("SOL")) Q 0
"RTN","PSIVOCDS",172,0)
 I $O(PSIVDDSV("SOL",0)) Q 0
"RTN","PSIVOCDS",173,0)
 S PSJX=0
"RTN","PSIVOCDS",174,0)
 F X=0:0 S X=$O(PSIVDDSV("AD",X)) Q:'X  S PSJX=PSJX+1 Q:PSJX>1
"RTN","PSIVOCDS",175,0)
 I PSJX>1 Q 0
"RTN","PSIVOCDS",176,0)
 Q 1
"RTN","PSIVOCDS",177,0)
ISALLBAG() ;Return 1 if not additive not in all bags
"RTN","PSIVOCDS",178,0)
 ;***this call assuming only 1 additive entered in the order
"RTN","PSIVOCDS",179,0)
 ;The bottle field can be either See comments, all bags, null or a numeric value (ex 1,3...)
"RTN","PSIVOCDS",180,0)
 NEW X,PSIVAS0
"RTN","PSIVOCDS",181,0)
 S X=$O(PSIVDDSV("AD",0))
"RTN","PSIVOCDS",182,0)
 S PSIVAS0=$G(PSIVDDSV("AD",X))
"RTN","PSIVOCDS",183,0)
 I +$P(PSIVAS0,U,4) Q 0
"RTN","PSIVOCDS",184,0)
 Q 1
"RTN","PSIVOCDS",185,0)
ISNOADD() ;Return 1 if there's no additives
"RTN","PSIVOCDS",186,0)
 NEW X,PSJX
"RTN","PSIVOCDS",187,0)
 I $O(PSIVDDSV("AD",0)) Q 0
"RTN","PSIVOCDS",188,0)
 I $D(PSIVDDSV("SOL")) Q 1
"RTN","PSIVOCDS",189,0)
 Q 0
"RTN","PSIVOCDS",190,0)
PREMIX ;The route is always set to "Continuous Infusion" & the FREQUENCY must set to 1
"RTN","PSIVOCDS",191,0)
 NEW X
"RTN","PSIVOCDS",192,0)
 S PSJFDB(PSJCNT,"ROUTE")=$$RTESCRN(PSJRT)
"RTN","PSIVOCDS",193,0)
 I PSJFDB(PSJCNT,"ROUTE")=0 S PSJFDB(PSJCNT,"ROUTE")=PSJRT
"RTN","PSIVOCDS",194,0)
 I PSJP8="" D FREEDOSE Q
"RTN","PSIVOCDS",195,0)
 S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",196,0)
 S PSJFDB(PSJCNT,"DOSE_AMT")=PSJP8NUM
"RTN","PSIVOCDS",197,0)
 S PSJFDB(PSJCNT,"DOSE_UNIT")=PSJP8UNT
"RTN","PSIVOCDS",198,0)
 S PSJFDB(PSJCNT,"DOSE_RATE")=PSJP8TME
"RTN","PSIVOCDS",199,0)
 S PSJFDB(PSJCNT,"DURATION_RT")=PSJP8TME
"RTN","PSIVOCDS",200,0)
 ;PSJ*5*252 (6/29/11) - No longer need to convert "ML" to "L" now FDB handles both units for this drug.
"RTN","PSIVOCDS",201,0)
 ;S PSJFDB(PSJCNT,"ROUTE")="CONTINUOUS INFUSION"
"RTN","PSIVOCDS",202,0)
 ;I PSJP8UNT="MILLILITERS" S X=$$LITER(PSJP8NUM) I X]"" D
"RTN","PSIVOCDS",203,0)
 ;. S PSJFDB(PSJCNT,"DOSE_AMT")=$P(X,U)
"RTN","PSIVOCDS",204,0)
 ;. S PSJFDB(PSJCNT,"DOSE_UNIT")=$P(X,U,2)
"RTN","PSIVOCDS",205,0)
 Q
"RTN","PSIVOCDS",206,0)
SDACI() ;Return Single Dose Amount for ad for 'CONTINUOUS INFUSION' FDB Route (Not classed at "VT" or "TN")
"RTN","PSIVOCDS",207,0)
 ;Single Dose Amount(PSJSDA):
"RTN","PSIVOCDS",208,0)
 ; For Additive - PSJSDA=(Strength/Tot vol)*Infusion Rate
"RTN","PSIVOCDS",209,0)
 ; If can't calculate then return null
"RTN","PSIVOCDS",210,0)
 NEW PSJSDA,X
"RTN","PSIVOCDS",211,0)
 S PSJSDA=""
"RTN","PSIVOCDS",212,0)
 I $D(PSIVDDSV("AD")) D
"RTN","PSIVOCDS",213,0)
 . S X=+$G(PSIVDDSV("TOT_VOL")) Q:'X
"RTN","PSIVOCDS",214,0)
 . S PSJSDA=($P(PSIVAS0,U,8)/X)*PSJP8NUM
"RTN","PSIVOCDS",215,0)
 I '+PSJSDA S PSJSDA=$P(PSIVAS0,U,8),PSJFDB(PSJCNT,"INF_ERROR")=""
"RTN","PSIVOCDS",216,0)
 Q PSJSDA
"RTN","PSIVOCDS",217,0)
CLASS(PSJDD) ;Check if the Drug contains "VT" & "TN" classes
"RTN","PSIVOCDS",218,0)
 ;Return 1 if "VT" or "TN"
"RTN","PSIVOCDS",219,0)
 ;Return 0 if not
"RTN","PSIVOCDS",220,0)
 Q:'+$G(PSJDD) 0
"RTN","PSIVOCDS",221,0)
 NEW PSJCLASS
"RTN","PSIVOCDS",222,0)
 S PSJCLASS=$P($G(^PSDRUG(+PSJDD,0)),U,2)
"RTN","PSIVOCDS",223,0)
 ;I (PSJCLASS["TN")!(PSJCLASS["VT") Q 1
"RTN","PSIVOCDS",224,0)
 I PSJCLASS["VT" Q 1
"RTN","PSIVOCDS",225,0)
 Q 0
"RTN","PSIVOCDS",226,0)
IVFREQ() ;Return the frequency for an continuous IV
"RTN","PSIVOCDS",227,0)
 ; Hours needed to run a bag is defined as: Total Volume / Infusion rate
"RTN","PSIVOCDS",228,0)
 ; # of bags needed for a day is defined as: 24 / Hours need to run a bag
"RTN","PSIVOCDS",229,0)
 ; PSJFREQ is either in Q#H or N for # of admin per day
"RTN","PSIVOCDS",230,0)
 NEW PSJFREQ,PSJBOT,PSJX,X,PSJTOTBG,PSJTOTBT,PSJTOTV,PSJBAGX
"RTN","PSIVOCDS",231,0)
 S (PSJFREQ,PSJTOTBG,PSJTOTBT)=0
"RTN","PSIVOCDS",232,0)
 S PSJTOTV=+$G(PSIVDDSV("TOT_VOL"))
"RTN","PSIVOCDS",233,0)
 ;CONV^PSSDSAPK converts # of hours to run a bag to either Q#H or n for number of admin per day
"RTN","PSIVOCDS",234,0)
 I +PSJTOTV,PSJP8NUM D
"RTN","PSIVOCDS",235,0)
 . I +PSJTOTV#PSJP8NUM D
"RTN","PSIVOCDS",236,0)
 .. S PSJFDB(PSJCNT,"DOSE_AMT")=$$ADJSDA(+PSJTOTV,PSJP8NUM,+PSJFDB(PSJCNT,"DOSE_AMT"),1)
"RTN","PSIVOCDS",237,0)
 . S PSJBAGX=PSJTOTV/PSJP8NUM
"RTN","PSIVOCDS",238,0)
 . I PSJBAGX<1 S PSJFREQ="Q1H"
"RTN","PSIVOCDS",239,0)
 . S:PSJBAGX'<1 PSJFREQ=$$CONV^PSSDSAPK(PSJTOTV/PSJP8NUM)
"RTN","PSIVOCDS",240,0)
 . S PSJTOTBG=24/(+PSJTOTV/PSJP8NUM)
"RTN","PSIVOCDS",241,0)
 I PSIVAS="AD" D BOTTLE(PSJTOTBG,$P(PSIVAS0,U,4)) D
"RTN","PSIVOCDS",242,0)
 . I PSJTOTBG<1,'(+PSJTOTV#PSJP8NUM) S PSJFDB(PSJCNT,"DOSE_AMT")=$$ADJSDA(+PSJTOTV,PSJP8NUM,+PSJFDB(PSJCNT,"DOSE_AMT"),0)
"RTN","PSIVOCDS",243,0)
 I PSJFREQ=""!(PSJFREQ=0) S PSJFREQ=1 S PSJFDB(PSJCNT,"FRQ_ERROR")=""
"RTN","PSIVOCDS",244,0)
 Q PSJFREQ
"RTN","PSIVOCDS",245,0)
ADJSDA(PSJTOTV,PSJINFRT,PSJSDA,PSJNOTE) ;Adjust SDA
"RTN","PSIVOCDS",246,0)
 NEW PSJBAGX,X,PSJNOTEV
"RTN","PSIVOCDS",247,0)
 I '+$G(PSJTOTV) Q ""
"RTN","PSIVOCDS",248,0)
 I '+$G(PSJINFRT) Q ""
"RTN","PSIVOCDS",249,0)
 I '+$G(PSJSDA) Q ""
"RTN","PSIVOCDS",250,0)
 S (PSJBAGX,X)=+PSJTOTV/PSJINFRT
"RTN","PSIVOCDS",251,0)
 ;**  Removed for MOCHA 2.0 When it takes < 1 hour to run a bag. May need to bring back for MOCHA 2.1 (Daily dose check).
"RTN","PSIVOCDS",252,0)
 ;I PSJBAGX<1 S PSJSDA=PSJSDA/PSJBAGX
"RTN","PSIVOCDS",253,0)
 I PSJBAGX<1 D
"RTN","PSIVOCDS",254,0)
 . S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",255,0)
 . S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSIVOCDS",256,0)
 . S PSJFDB(PSJCNT,"DOSE_RATE")="DAY"
"RTN","PSIVOCDS",257,0)
 . S PSJFDB(PSJCNT,"DURATION_RT")="DAY"
"RTN","PSIVOCDS",258,0)
 I PSJBAGX'<1 D
"RTN","PSIVOCDS",259,0)
 . S X=$J(PSJBAGX,"",0)
"RTN","PSIVOCDS",260,0)
 . S PSJSDA=PSJSDA/(+PSJTOTV)*PSJINFRT*($S(X<24:X,1:24))
"RTN","PSIVOCDS",261,0)
 . S PSJNOTEV=($S(X<24:X,1:24)*PSJINFRT)_" ML over "_$S(X<24:X,1:24)_" hours)."
"RTN","PSIVOCDS",262,0)
 . I $G(PSJNOTE) D
"RTN","PSIVOCDS",263,0)
 .. S PSJFDB(PSJCNT,"ADJ_MSG")="PLEASE NOTE: The single dose of the IV Additive has been adjusted to reflect the amount of drug infused over the nearest whole number of hours ("_PSJNOTEV
"RTN","PSIVOCDS",264,0)
 . I '$G(PSJNOTE) D
"RTN","PSIVOCDS",265,0)
 .. S PSJFDB(PSJCNT,"ADJ_MSG")="PLEASE NOTE:  The single dose of the IV Additive has been adjusted to reflect the amount of drug infused over the duration of the order or 24 hours; whichever is less ("_PSJNOTEV
"RTN","PSIVOCDS",266,0)
 Q PSJSDA
"RTN","PSIVOCDS",267,0)
UND24HRS ;Calculate freq for order <24 hrs
"RTN","PSIVOCDS",268,0)
 NEW PSJTOTV,PSJBAG,PSJMNBAG,PSJTOTBG,PSJFREQ,PSJHRS,X
"RTN","PSIVOCDS",269,0)
 S (PSJFREQ,PSJBAG,PSJMNBAG)=0
"RTN","PSIVOCDS",270,0)
 S PSJTOTV=+$G(PSIVDDSV("TOT_VOL"))
"RTN","PSIVOCDS",271,0)
 I +PSJTOTV,PSJP8NUM D
"RTN","PSIVOCDS",272,0)
 . S PSJHRS=PSJTOTV/PSJP8NUM
"RTN","PSIVOCDS",273,0)
 . S PSJMNBAG=PSJHRS*60
"RTN","PSIVOCDS",274,0)
 . S PSJTOTBG=24/PSJHRS
"RTN","PSIVOCDS",275,0)
 I '+PSJMNBAG D  Q
"RTN","PSIVOCDS",276,0)
 . S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",277,0)
 . S PSJFDB(PSJCNT,"FRQ_ERROR")=""
"RTN","PSIVOCDS",278,0)
 S:+PSJMNBAG PSJBAG=PSJDIFF/PSJMNBAG
"RTN","PSIVOCDS",279,0)
 ; If the order is for < 24 hrs & Freq < 1 then adjust the SDA & Freq set to 1
"RTN","PSIVOCDS",280,0)
 I PSJBAG<1 D  Q
"RTN","PSIVOCDS",281,0)
 . S X=$J((PSJDIFF/60),"",0)
"RTN","PSIVOCDS",282,0)
 . S PSJNOTEV=($S(X<24:X,1:24)*PSJP8NUM)_" ML over "_$S(X<24:X,1:24)_" hours)."
"RTN","PSIVOCDS",283,0)
 . S PSJFDB(PSJCNT,"ADJ_MSG")="PLEASE NOTE:  The single dose of the IV Additive has been adjusted to reflect the amount of drug infused over the duration of the order or 24 hours; whichever is less ("_PSJNOTEV
"RTN","PSIVOCDS",284,0)
 . S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSIVOCDS",285,0)
 . S PSJFDB(PSJCNT,"DOSE_AMT")=PSJBAG*(PSJFDB(PSJCNT,"DOSE_AMT"))
"RTN","PSIVOCDS",286,0)
 ;
"RTN","PSIVOCDS",287,0)
 S PSJFREQ=$J(PSJBAG,"",0)
"RTN","PSIVOCDS",288,0)
 I PSIVAS="AD" D BOTTLE(PSJFREQ,$P(PSIVAS0,U,4))
"RTN","PSIVOCDS",289,0)
 S PSJFDB(PSJCNT,"FREQ")=PSJFREQ
"RTN","PSIVOCDS",290,0)
 Q
"RTN","PSIVOCDS",291,0)
 ;
"RTN","PSIVOCDS",292,0)
BOTTLE(PSJTOTBG,PSJBOT) ;Set freq to either specified bottle or # needed for the duration/24hrs of the order
"RTN","PSIVOCDS",293,0)
 NEW PSJTOTBT,X,PSJX
"RTN","PSIVOCDS",294,0)
 Q:'+$G(PSJTOTBG)
"RTN","PSIVOCDS",295,0)
 I $$UP^XLFSTR($G(PSJBOT))="ALL BAGS" S:PSJTOTBG<1 PSJFREQ=1 Q
"RTN","PSIVOCDS",296,0)
 I $$UP^XLFSTR($G(PSJBOT))="SEE COMMENTS" S:PSJTOTBG<1 PSJFREQ=1 Q
"RTN","PSIVOCDS",297,0)
 ;
"RTN","PSIVOCDS",298,0)
 ;PSJ*5*252 - ADJSDA already adjusted the SDA so recal SDA is not needed
"RTN","PSIVOCDS",299,0)
 I PSJTOTBG<1 S PSJFREQ=1 Q
"RTN","PSIVOCDS",300,0)
 Q:$G(PSJBOT)=""
"RTN","PSIVOCDS",301,0)
 S PSJTOTBT=0
"RTN","PSIVOCDS",302,0)
 F X=1:1:$L(PSJBOT,",") S PSJX=$P(PSJBOT,",",X) S:+PSJX PSJTOTBT=PSJTOTBT+1
"RTN","PSIVOCDS",303,0)
 S PSJFREQ=$S(PSJTOTBT>PSJTOTBG:PSJTOTBG,1:PSJTOTBT)
"RTN","PSIVOCDS",304,0)
 I PSJTOTV#PSJP8NUM,(PSJTOTBT>PSJTOTBG) D
"RTN","PSIVOCDS",305,0)
 . S PSJFREQ=$$CONV^PSSDSAPK(PSJTOTV/PSJP8NUM)
"RTN","PSIVOCDS",306,0)
 I PSJFREQ=0 S PSJFREQ=1 S PSJFDB(PSJCNT,"FRQ_ERROR")=""
"RTN","PSIVOCDS",307,0)
 Q
"RTN","PSIVOCDS",308,0)
DURATION() ;
"RTN","PSIVOCDS",309,0)
 ;If PSJIV("DUR") is passed in from CPRS then return the minutes if <1440 otherwise return ""
"RTN","PSIVOCDS",310,0)
 ;If not call from CPRS then calculate from start, stop date
"RTN","PSIVOCDS",311,0)
 NEW PSJX,X,PSJP8X
"RTN","PSIVOCDS",312,0)
 S PSJX=""
"RTN","PSIVOCDS",313,0)
 I +$G(PSJIV("DUR")) D  Q X
"RTN","PSIVOCDS",314,0)
 .S PSJX=+$G(PSJIV("DUR"))
"RTN","PSIVOCDS",315,0)
 .S X=$S(PSJX<1440:PSJX,1:"")
"RTN","PSIVOCDS",316,0)
 I +$G(PSJIV("TOT_VOL")) D  Q X
"RTN","PSIVOCDS",317,0)
 . S PSJP8X=$S(+$G(PSJP8NUM):PSJP8NUM,+P(8):+P(8),1:0)
"RTN","PSIVOCDS",318,0)
 . S:PSJP8X PSJX=(+PSJIV("TOT_VOL")/PSJP8X)*60
"RTN","PSIVOCDS",319,0)
 . S X=$S(PSJX<1440:PSJX,1:"")
"RTN","PSIVOCDS",320,0)
 S X=$$DURATION^PSJOCDS($G(P(2)),$G(P(3)))
"RTN","PSIVOCDS",321,0)
 Q X
"RTN","PSIVOCDS",322,0)
FDBRT(PSJDD,PSJRT) ;Check if the ordered route can be admin by FDB for this drug
"RTN","PSIVOCDS",323,0)
 ;PSJDD = Drug IEN
"RTN","PSIVOCDS",324,0)
 ;PSJRT = FDB continuous dose route (ordered MR -> Standard RT ->FDB cont. Rt)
"RTN","PSIVOCDS",325,0)
 ;Return 1 if the route can admin by FDB; 0 if this route is not specify for this drug
"RTN","PSIVOCDS",326,0)
 NEW PSJFDBRT
"RTN","PSIVOCDS",327,0)
 I '+$G(PSJDD)!$G(PSJRT)="" Q 0
"RTN","PSIVOCDS",328,0)
 D GROUTE^PSSFDBRT(PSJDD,.PSJFDBRT)
"RTN","PSIVOCDS",329,0)
 I +$G(PSJFDBRT(0))=-1 Q 1
"RTN","PSIVOCDS",330,0)
 I $D(PSJFDBRT(PSJRT)) Q 1
"RTN","PSIVOCDS",331,0)
 Q 0
"RTN","PSIVOCDS",332,0)
RTESCRN(PSJRT) ; Screen routes for none "VT or "TN"
"RTN","PSIVOCDS",333,0)
 ;Return 0 or FDB continuous dose route if the standard route(mapped to the ordered MR) is one of the six below.
"RTN","PSIVOCDS",334,0)
 ;PSJRT - standard route
"RTN","PSIVOCDS",335,0)
 I $G(PSJRT)="" Q 0
"RTN","PSIVOCDS",336,0)
 I PSJRT="EPIDURAL" Q "CONTINUOUS EPIDURAL"
"RTN","PSIVOCDS",337,0)
 I PSJRT="INTRA-ARTERIAL" Q "CONT INTRAARTER INF"
"RTN","PSIVOCDS",338,0)
 I PSJRT="INFILTRATION" Q "CONTINUOUS INFILTRAT"
"RTN","PSIVOCDS",339,0)
 I PSJRT="INTRACAUDAL" Q "CONT CAUDAL INFUSION"
"RTN","PSIVOCDS",340,0)
 I PSJRT="INTRAOSSEOUS" Q "CONT INTRAOSSEOUS"
"RTN","PSIVOCDS",341,0)
 I PSJRT="INTRATHECAL" Q "CONT INTRATHECAL INF"
"RTN","PSIVOCDS",342,0)
 I PSJRT="INTRAVENOUS" Q "CONTINUOUS INFUSION"
"RTN","PSIVOCDS",343,0)
 I PSJRT="NEBULIZATION" Q "CONT NEBULIZATION"
"RTN","PSIVOCDS",344,0)
 I PSJRT="SUBCUTANEOUS" Q "CONT SUBCUTAN INFUSI"
"RTN","PSIVOCDS",345,0)
 Q 0
"RTN","PSIVOCDS",346,0)
LITER(PSJVOLP8) ; Convert the unit from ML to L for premix contains potassium
"RTN","PSIVOCDS",347,0)
 ; PSJ*5*252 (6/29/11) - No longer need to convert "ML" to "L" for this drug now that FDB handles both units.
"RTN","PSIVOCDS",348,0)
 ; FDB only accept Liter for this type for drug
"RTN","PSIVOCDS",349,0)
 ; PSJVOLP8 - Either = volume or the infusion rate
"RTN","PSIVOCDS",350,0)
 NEW PSJVAGEN,PSJSDA,PSJUNIT
"RTN","PSIVOCDS",351,0)
 Q:$G(PSJVOLP8)=""
"RTN","PSIVOCDS",352,0)
 S PSJVAGEN=$$VAGEN^PSJMISC($P(PSIVAS0,U))
"RTN","PSIVOCDS",353,0)
 I PSJVAGEN["POTASSIUM" D
"RTN","PSIVOCDS",354,0)
 . S PSJSDA=+(PSJVOLP8/1000)
"RTN","PSIVOCDS",355,0)
 . S PSJUNIT="L"
"RTN","PSIVOCDS",356,0)
 I '+$G(PSJSDA)!($G(PSJUNIT)="") Q ""
"RTN","PSIVOCDS",357,0)
 Q PSJSDA_U_PSJUNIT
"RTN","PSIVSP")
0^7^B46308315
"RTN","PSIVSP",1,0)
PSIVSP ;BIR/RGY,PR,CML3 - DOSE PROCESSOR ;1/3/12 3:36pm
"RTN","PSIVSP",2,0)
 ;;5.0;INPATIENT MEDICATIONS;**30,37,41,50,56,74,83,111,133,138,134,213,229,279,305,331,256,347,358**;16 DEC 97;Build 10
"RTN","PSIVSP",3,0)
 ;
"RTN","PSIVSP",4,0)
 ; Reference to ^PS(51.1 is supported by DBIA #2177
"RTN","PSIVSP",5,0)
 ;
"RTN","PSIVSP",6,0)
EN ;
"RTN","PSIVSP",7,0)
 NEW PSJORGX
"RTN","PSIVSP",8,0)
 Q:'$D(X)
"RTN","PSIVSP",9,0)
 S ATZERO=0 I X["@",$P(X,"@",2)=0 S ATZERO=1,X=$P(X,"@")
"RTN","PSIVSP",10,0)
 ;D EN^PSGS0 S (P(9),PSIVSC1)=$S($G(X)]"":X,1:$G(P(9))),P(11)=$S($G(PSGS0Y):PSGS0Y,1:$G(P(11))),(XT,P(15))=$S(($G(PSGS0XT)!($G(PSGS0XT)="O")!($G(PSGS0XT)="D")):$G(PSGS0XT),1:$G(P(15)))
"RTN","PSIVSP",11,0)
 ;PSJ*5*256 - not set P(9) when FN order so the Old schedule name is not auto replaced with .01 value
"RTN","PSIVSP",12,0)
 S PSJORGX=X
"RTN","PSIVSP",13,0)
 ;PSJ*5*358
"RTN","PSIVSP",14,0)
 D EN^PSGS0
"RTN","PSIVSP",15,0)
 I ($G(PSJOCFG)="FN IV"),(($G(P(9))="")&($G(X)]"")) S P(9)=$G(X)
"RTN","PSIVSP",16,0)
 I ($G(PSJOCFG)'="FN IV"),$S((($G(X)]"")&($G(X)'=PSJORGX)):1,$G(PSJOCFG)="":0,1:1) S P(9)=$S($G(X)]"":X,1:$G(P(9)))
"RTN","PSIVSP",17,0)
 S P(11)=$S($G(PSGS0Y):PSGS0Y,1:$G(P(11))),(XT,P(15))=$S(($G(PSGS0XT)!($G(PSGS0XT)="O")!($G(PSGS0XT)="D")):$G(PSGS0XT),1:$G(P(15)))
"RTN","PSIVSP",18,0)
 I $G(ATZERO) S P(7)=1
"RTN","PSIVSP",19,0)
 K ATZERO Q
"RTN","PSIVSP",20,0)
EN1 ;
"RTN","PSIVSP",21,0)
 S (PSIVAT,PSIVWAT,Y)="",XT=-1,X0=X,X=$S(X="ON CALL":X,X="ONCALL":X,X="ON-CALL":X,X="ONETIME":X,X="ONE-TIME":X,X="ONE TIME":X,X="1TIME":X,X="1 TIME":X,X="1-TIME":X,$L(X," ")<3:$P(X," "),1:$P(X," ",1,2))
"RTN","PSIVSP",22,0)
 S:$E(X)="^" X=$E(X,2,999) G:X="" Q S:(X["@0")&($$SCHREQ^PSJLIVFD(.P)) ATZERO=1 S X=$S(X["@0":$P(X,"@"),1:X),P(7)=$S($G(ATZERO):1,1:"") K ATZERO
"RTN","PSIVSP",23,0)
 I $S($D(^PS(51.1,"AC","PSJ",X)):1,1:$E($O(^(X)),1,$L(X))=X) D DIC I Y'<0 G SH
"RTN","PSIVSP",24,0)
NS0 S Y=""
"RTN","PSIVSP",25,0)
 I $E(X,1,2)="AD" S XT=-1 Q
"RTN","PSIVSP",26,0)
 I $E(X,1,3)="BID"!($E(X,1,3)="TID")!($E(X,1,3)="QID") S XT=1440\$F("BTQ",$E(X))
"RTN","PSIVSP",27,0)
 E  S:$E(X)="Q" X=$E(X,2,99) S:'X X=$E(X)["O"+1_X S I=+X,X=$P(X,I,2),XT=I*$S(X["'":1,(X["D"&(X'["AD"))!(X["AM")!(X["PM")!(X["HS"&(X'["THS")):1440,X["H"&(X'["TH"):60,X["AC"!(X["PC"):480,X["W":10080,X["M":40320,1:0),X=X0 D 
"RTN","PSIVSP",28,0)
 . I 'XT,X'="NOW",X'="STAT",X'="ONCE",X'="ONE-TIME",X'="ONE TIME",X'="ONETIME",X'="1-TIME",X'="1 TIME",X'="1TIME",Y="" S XT=-1
"RTN","PSIVSP",29,0)
SH ;
"RTN","PSIVSP",30,0)
 I +Y<1,$E(X0)'="^" W:$G(ON)'["P" "  ",$S(XT=0&($S("^NOW^STAT^ONCE^ONE-TIME^ONETIME^1TIME^1-TIME^"[(U_$P(X," ")_U):1,X["1 TIME":1,1:X["ONE TIME")):"(ONCE ONLY)",XT>0:"Nonstandard schedule",XT<0:"",1:"(??)") W:XT>0 " (",XT," MINUTES)"
"RTN","PSIVSP",31,0)
Q Q:X="ONE TIME"
"RTN","PSIVSP",32,0)
 N I S X0=$P(X," ")_$S($L(X0," ")-1:" ",1:"")_$P(X0," ",2,99) K:XT<0!($L(X0)>22) X S:$D(X) X=X0 K X0 S:$G(P(7)) XT="" Q
"RTN","PSIVSP",33,0)
NEWQ ;N I S X0=$P(X," ")_$S($L(X0," ")-1:" ",1:"")_$P(X0," ",2,99) K:XT<0!($L(X0)>22) X S:$D(X) X=X0 S:P(7) X=X0 K X0 K:XT>0&('P(7)) X Q
"RTN","PSIVSP",34,0)
 Q
"RTN","PSIVSP",35,0)
 ;
"RTN","PSIVSP",36,0)
 ;*229 Add Temp val for dose limit in IOE
"RTN","PSIVSP",37,0)
ENDL N PSIVLIMT W "   Dose limit ....  " S PSIVLIMT="a"_X,PSIVMIN=P(15)*X,PSIVSD=+P(2)
"RTN","PSIVSP",38,0)
 I PSIVMIN<0 W !!," --- There is something wrong with this order !!",!,"     Call inpatient supervisor ....." S Y=-1 K PSIVMIN Q
"RTN","PSIVSP",39,0)
 I P(15)'["D",P(4)="P"!(P(5))!(P(23)="P"),PSIVMIN=0,"^NOW^STAT^ONCE^ONE-TIME^ONE TIME^ON CALL^ONETIME^1TIME^1 TIME^1-TIME^"'[(U_P(9)_U) D DLP G QDL
"RTN","PSIVSP",40,0)
 ;*229 DOW Calc and dose lim should match CPRS, if it's vol limit, we leave old functionality
"RTN","PSIVSP",41,0)
 I $G(P(9))]"",$G(P(11))]"" D ENSTOP^PSIVCAL S Y=X I 1 ;*229 ENSTOP^PSIVCAL returns X, we wanted Y.
"RTN","PSIVSP",42,0)
 E  D ENT^PSIVWL
"RTN","PSIVSP",43,0)
QDL I $D(X) S X=Y X ^DD("DD") W $P(Y,"@")," ",$P(Y,"@",2) S Y=X
"RTN","PSIVSP",44,0)
 Q
"RTN","PSIVSP",45,0)
DLP ;
"RTN","PSIVSP",46,0)
 S X=X+1,$P(PSIVSD,".",2)=$P(PSIVSD,".",2)_$E("0000",1,4-$L($P(PSIVSD,".",2))) D CHK S X2=0,Y=1 I X<2 S Y=+PSIVSD G QDLP
"RTN","PSIVSP",47,0)
 I $P(PSIVSD,".",2)>$P(P(11),"-",$L(P(11),"-")) S X2=1 G OV
"RTN","PSIVSP",48,0)
 G:$P(P(11),"-")>$P(PSIVSD,".",2) OV
"RTN","PSIVSP",49,0)
 F Y=1:1 S X1=$P(P(11),"-",Y) I X1=$P(PSIVSD,".",2)!($P(PSIVSD,".",2)<X1) Q
"RTN","PSIVSP",50,0)
OV I P(11)="" W $C(7)," ???",!?15,"*** You have not defined any administration times !!" K X Q
"RTN","PSIVSP",51,0)
 F Y=Y:1 S:$P(P(11),"-",Y)="" X2=X2+1,Y=0,X=X+1 S X=X-1 Q:X<1
"RTN","PSIVSP",52,0)
 S X=PSIVSD\1 I X2>0 S X1=PSIVSD D C^%DTC S X=$P(X,".") ; install with version 17.3 of fileman
"RTN","PSIVSP",53,0)
 S Y=+(X_"."_$P(P(11),"-",Y))
"RTN","PSIVSP",54,0)
QDLP K X1,X2 Q
"RTN","PSIVSP",55,0)
 ;
"RTN","PSIVSP",56,0)
ENI ;
"RTN","PSIVSP",57,0)
 N PSIZEROX S PSIZEROX=0_+X
"RTN","PSIVSP",58,0)
 K:$L(X)<1!($L(X)>30)!(X["""")!($A(X)=45) X I '$D(X)!'$D(P(4)) Q
"RTN","PSIVSP",59,0)
 ;*229 Reset ATZERO flag.
"RTN","PSIVSP",60,0)
 I $P(X,"@",2)'=0!'$$SCHREQ^PSJLIVFD(.P) S P(7)=""
"RTN","PSIVSP",61,0)
 I P(4)="P"!(P(5))!(P(23)="P") Q:'X  S X="INFUSE OVER "_X_" MINUTE"_$S(X>1:"S",1:"") W "   ",X Q
"RTN","PSIVSP",62,0)
 I $E(X)="." K X Q  ;Enforce leading zero.
"RTN","PSIVSP",63,0)
 I X'=+X!(X'=0_+X),X["@",($P(X,"@",2,999)'=+$P(X,"@",2,999)!(+$P(X,"@",2,999)<0)) K X Q
"RTN","PSIVSP",64,0)
 S SPSOL=$O(DRG("SOL",0)) I 'SPSOL K SPSOL,X W "  You must define at least one solution !!" Q
"RTN","PSIVSP",65,0)
 I (X=+X)!(X=PSIZEROX) I X'["@" S X=X_" ml/hr" W " ml/hr" D SPSOL S P(15)=$S('X:0,1:SPSOL\X*60+(SPSOL#X/X*60+.5)\1) K SPSOL Q
"RTN","PSIVSP",66,0)
 S SPSOL=$S(($P(X,"@",2)?1.N):$P(X,"@",2),1:$G(P("NUMLBL"))) I SPSOL S P("NUMLBL")=+SPSOL
"RTN","PSIVSP",67,0)
 S:$P(X,"@")=+X!($P(X,"@")=PSIZEROX) $P(X,"@")=$P(X,"@")_" ml/hr" W "   ",+SPSOL," Label",$S(SPSOL'=1:"s",1:"")," per day",!?15,"at an infusion rate of: ",$P(X,"@") S P(15)=$S('SPSOL:0,1:1440/SPSOL\1) K SPSOL
"RTN","PSIVSP",68,0)
 I X["@",$P(X,"@",2)=0,$$SCHREQ^PSJLIVFD(.P) S P(7)=1  ; Set ATZERO flag
"RTN","PSIVSP",69,0)
 ;*305
"RTN","PSIVSP",70,0)
 I '$G(PSJEXMSG) D EXPINF^PSIVEDT1(.X)
"RTN","PSIVSP",71,0)
 Q
"RTN","PSIVSP",72,0)
SPSOL S SPSOL=0 F XXX=0:0 S XXX=$O(DRG("SOL",XXX)) Q:'XXX  S SPSOL=SPSOL+$P(DRG("SOL",XXX),U,3)
"RTN","PSIVSP",73,0)
 K XXX Q
"RTN","PSIVSP",74,0)
CHK F Y=1:1 Q:$L(P(11))>240!($P(P(11),"-",Y)="")  S $P(P(11),"-",Y)=$P(P(11),"-",Y)_$E("0000",1,4-$L($P(P(11),"-",Y)))
"RTN","PSIVSP",75,0)
 Q
"RTN","PSIVSP",76,0)
 ;
"RTN","PSIVSP",77,0)
DIC ; 51.1 look-up
"RTN","PSIVSP",78,0)
 N PSJSCH S PSJSCH=X I '$D(WSCHADM) N VAIP D IN5^VADPT S WSCHADM=VAIP(5),X=PSJSCH
"RTN","PSIVSP",79,0)
 K DIC S DIC="^PS(51.1,",DIC(0)=$E("E",'$D(NOECH))_"ISZ"
"RTN","PSIVSP",80,0)
 ; The naked reference below refers to the full reference inside indirection to ^PS(51.1
"RTN","PSIVSP",81,0)
 S DIC("W")="W ""  "","_$S('$D(WSCHADM):"$P(^(0),""^"",2)",'+WSCHADM:"$P(^(0),""^"",2)",1:"$S($D(^PS(51.1,+Y,1,+WSCHADM,0)):$P(^(0),""^"",2),1:$P(^PS(51.1,+Y,0),""^"",2))"),D="APPSJ" S:$D(PSIVSPQF) DIC(0)=DIC(0)_"O"
"RTN","PSIVSP",82,0)
 D IX^DIC K DIC
"RTN","PSIVSP",83,0)
 S:$D(DIE)#2 DIC=DIE Q:Y<0
"RTN","PSIVSP",84,0)
 S X=Y(0,0),ZZY=Y,(XT,Y)="" I $D(WSCHADM),$D(^PS(51.1,+ZZY,1,+WSCHADM,0)),$P(^(0),"^",2)]"" S (PSIVWAT,Y)=$P(^(0),"^",2)
"RTN","PSIVSP",85,0)
 K ZZY,WSCHADM S:Y="" (X,PSIVSC1)=$P(Y(0),U),(PSIVAT,Y)=$P(Y(0),"^",2) S XT=$P(Y(0),"^",3) Q
"RTN","PSIVSP",86,0)
 ;
"RTN","PSIVSP",87,0)
ORINF ;  OERR input transform for Infusion Rate
"RTN","PSIVSP",88,0)
 ;  X=data
"RTN","PSIVSP",89,0)
 N INFUSE
"RTN","PSIVSP",90,0)
 K:$L(X)<1!($L(X)>30)!(X["""")!($A(X)=45) X I '$D(X) Q
"RTN","PSIVSP",91,0)
 I X?.E1L.E S INFUSE=$$ENLU^PSGMI(X) Q:(INFUSE="TITRATE")!(INFUSE="BOLUS")!($P(INFUSE," ")="INFUSE")!($P(INFUSE," ")="Infuse")
"RTN","PSIVSP",92,0)
 Q:(X="TITRATE")!(X="BOLUS")!($P(X," ")="INFUSE")!($P(X," ")="Infuse")
"RTN","PSIVSP",93,0)
 I X["=" D  Q   ; NOIS LOU-0501-42191
"RTN","PSIVSP",94,0)
 .N X2,X1 S X1=$P(X,"="),X2=$P(X,"=",2)
"RTN","PSIVSP",95,0)
 .I X1["ML/HR",(+X1=$P(X1,"ML/HR"))!(+X1=$P(X1," ML/HR")) D
"RTN","PSIVSP",96,0)
 ..S X1=$TR(X1,"ML/HR","ml/hr")
"RTN","PSIVSP",97,0)
 .I X2["ML/HR",(+X2=$P(X2,"ML/HR"))!(+X2=$P(X2," ML/HR")) D
"RTN","PSIVSP",98,0)
 ..S X2=$TR(X2,"ML/HR","ml/hr")
"RTN","PSIVSP",99,0)
 .I X1[" ml/hr",(+X1=$P(X1," ml/hr")) D
"RTN","PSIVSP",100,0)
 ..S X1=$P(X1," ml/hr")_$P(X1," ml/hr",2,9999)
"RTN","PSIVSP",101,0)
 .I X2[" ml/hr",(+X2=$P(X2," ml/hr")) D
"RTN","PSIVSP",102,0)
 ..S X2=$P(X2," ml/hr")_$P(X2," ml/hr",2,9999)
"RTN","PSIVSP",103,0)
 .I X1["ml/hr",(+X1=$P(X1,"ml/hr")) D
"RTN","PSIVSP",104,0)
 ..S X1=$P(X1,"ml/hr")_$P(X1,"ml/hr",2,9999)
"RTN","PSIVSP",105,0)
 .I X2["ml/hr",(+X2=$P(X2,"ml/hr")) D
"RTN","PSIVSP",106,0)
 ..S X2=$P(X2,"ml/hr")_$P(X2,"ml/hr",2,9999)
"RTN","PSIVSP",107,0)
 .I X2'=+X2 D
"RTN","PSIVSP",108,0)
 ..I X2>0&(X2<1) Q
"RTN","PSIVSP",109,0)
 ..I ($P(X2,"@",2,999)'=+$P(X2,"@",2,999)!(+$P(X2,"@",2,999)<0)) K X Q
"RTN","PSIVSP",110,0)
 .I X1>0&(X1<1) I +X1="."_$P(X1,".",2) S X1=X1_" ml/hr"
"RTN","PSIVSP",111,0)
 .I X2>0&(X2<1) I +X2="."_$P(X2,".",2) S X2=X2_" ml/hr"
"RTN","PSIVSP",112,0)
 .I X1=+X1 S X1=X1_" ml/hr"
"RTN","PSIVSP",113,0)
 .I X2=+X2 S X2=X2_" ml/hr"
"RTN","PSIVSP",114,0)
 .S:$P(X2,"@")=+X2 $P(X2,"@")=$P(X2,"@")_" ml/hr"
"RTN","PSIVSP",115,0)
 .S X=X1_"="_X2
"RTN","PSIVSP",116,0)
 I X["ML/HR",(+X=$P(X,"ML/HR"))!(+X=$P(X," ML/HR")) S X=$TR(X,"ML/HR","ml/hr")
"RTN","PSIVSP",117,0)
 I X[" ml/hr",+X=$P(X," ml/hr") S X=$P(X," ml/hr")_$P(X," ml/hr",2,9999)
"RTN","PSIVSP",118,0)
 I X["ml/hr",+X=$P(X,"ml/hr") S X=$P(X,"ml/hr")_$P(X,"ml/hr",2,9999)
"RTN","PSIVSP",119,0)
 I X>0,X<1 D  Q
"RTN","PSIVSP",120,0)
 .I X["ML/HR",(+X=$P($P(X,"ML/HR"),".",2))!(+X=$P($P(X," ML/HR"),".",2)) S X=$TR(X,"ML/HR","ml/hr")
"RTN","PSIVSP",121,0)
 .I X[" ml/hr",(+X=$P($P(X," ml/hr"),".",2)) S X=$P(X," ml/hr")_$P(X," ml/hr",2,9999)
"RTN","PSIVSP",122,0)
 .I X["ml/hr",+X=$P(X,"ml/hr") S X=$P(X,"ml/hr")_$P(X,"ml/hr",2,9999)
"RTN","PSIVSP",123,0)
 .I +X=X S X=X_" ml/hr"
"RTN","PSIVSP",124,0)
 .I $P(X,0,2)=+X S X=X_" ml/hr"
"RTN","PSIVSP",125,0)
 .S X=0_+X_$P(X,+X,2)
"RTN","PSIVSP",126,0)
 I '(X>0&X<1) I X'=+X,($P(X,"@",2,999)'=+$P(X,"@",2,999)!(+$P(X,"@",2,999)<0)) K X Q
"RTN","PSIVSP",127,0)
 I X=+X S X=X_" ml/hr" Q
"RTN","PSIVSP",128,0)
 S:$P(X,"@")=+X $P(X,"@")=$P(X,"@")_" ml/hr"
"RTN","PSIVSP",129,0)
 Q
"RTN","PSJAPIDS")
0^13^B34567938
"RTN","PSJAPIDS",1,0)
PSJAPIDS ;BIR/MV - API TO PROCESS DOSING ORDER CHECKS FOR IV ;6 Jun 07 / 3:37 PM
"RTN","PSJAPIDS",2,0)
 ;;5.0;INPATIENT MEDICATIONS ;**181,252,256,358**;16 DEC 97;Build 10
"RTN","PSJAPIDS",3,0)
 ;
"RTN","PSJAPIDS",4,0)
 ; Reference to ^PSDRUG( is supported by DBIA #2192.
"RTN","PSJAPIDS",5,0)
 ; Reference to ^PS(51.1 is supported by DBIA# 2177.
"RTN","PSJAPIDS",6,0)
 ; Reference to ^PSSDSAPI is supported by DBIA# 5425.
"RTN","PSJAPIDS",7,0)
 ; Reference to DRT^PSSDSAPD is supported by DBIA# 5617.
"RTN","PSJAPIDS",8,0)
 ; Reference to DOSE^PSSDSAPD is supported by DBIA# 5426.
"RTN","PSJAPIDS",9,0)
 ; Reference to IN^PSSHRQ2 is supported by DBIA# 5369.
"RTN","PSJAPIDS",10,0)
 ;
"RTN","PSJAPIDS",11,0)
DOSE(PSJBASE,DFN,PSJIV) ;
"RTN","PSJAPIDS",12,0)
 ;PSJBASE(1)=PSJBASE - Base1(Literal value for TMP global)- Required
"RTN","PSJAPIDS",13,0)
 ;PSJBASE(2)=PSJBASE1 - Base2(Literal value for Screened display TMP global)- Required
"RTN","PSJAPIDS",14,0)
 ;PSJDFN - Patient Internal Entry Number
"RTN","PSJAPIDS",15,0)
 ;PSJIV(Px) - See DBIA #5385...P4 can be "ALL", "See Comments", or bottle number(s)
"RTN","PSJAPIDS",16,0)
 ;PSJIV("TVOL_VOL") - Contains nUnit where n is # & Unit is either H,D,L,M, or DOSES
"RTN","PSJAPIDS",17,0)
 ;PSJIV(X,"OI_ERROR",OI Name) - OI ien ^ Pharm # ^ Enhance flag(use in ENHFLG sub routine)
"RTN","PSJAPIDS",18,0)
 NEW DRG,P,PSIVAS,PSIVNM,PSJDD,PSJFDB,PSJOCDS,PSIVTDUR,PSJTOTVL,X
"RTN","PSJAPIDS",19,0)
 I $$PING()=-1 D  Q
"RTN","PSJAPIDS",20,0)
 . F X=0:0 S X=$O(PSJBASE(X)) Q:'X  D
"RTN","PSJAPIDS",21,0)
 .. M ^TMP($J,PSJBASE(X),"OUT")=^TMP($J,"PSJPRE","OUT")
"RTN","PSJAPIDS",22,0)
 Q:$G(PSJIV("IV_TYPE"))=""
"RTN","PSJAPIDS",23,0)
 Q:'+$G(DFN)
"RTN","PSJAPIDS",24,0)
 S PSJTOTVL=0
"RTN","PSJAPIDS",25,0)
 F X=0:0 S X=$O(PSJBASE(X)) Q:'X  K:PSJBASE(X)]"" ^TMP($J,PSJBASE(1))
"RTN","PSJAPIDS",26,0)
 S P("DTYP")=+PSJIV("IV_TYPE")
"RTN","PSJAPIDS",27,0)
 S P("MR")=$G(PSJIV("MR_IEN"))
"RTN","PSJAPIDS",28,0)
 S P(8)=$G(PSJIV("INF_RATE"))
"RTN","PSJAPIDS",29,0)
 S P(9)=$G(PSJIV("SCHEDULE"))
"RTN","PSJAPIDS",30,0)
 ;Admin times and Freq are not available from CPRS
"RTN","PSJAPIDS",31,0)
 S P(11)=""
"RTN","PSJAPIDS",32,0)
 S P(15)=""
"RTN","PSJAPIDS",33,0)
 D SETDRG
"RTN","PSJAPIDS",34,0)
 S PSJIV("DUR")="",PSJIV("TOT_VOL")=""
"RTN","PSJAPIDS",35,0)
 I PSJIV("TVOL_DUR")]"" D
"RTN","PSJAPIDS",36,0)
 . S PSIVTDUR=$$UP^XLFSTR(PSJIV("TVOL_DUR"))
"RTN","PSJAPIDS",37,0)
 . I PSIVTDUR["M" S PSJIV("TOT_VOL")=+PSIVTDUR
"RTN","PSJAPIDS",38,0)
 . I PSIVTDUR["L" S PSJIV("TOT_VOL")=+PSIVTDUR*1000,PSIVTDUR=PSJIV("TOT_VOL")_"M"
"RTN","PSJAPIDS",39,0)
 . ;get dose count for intermittent
"RTN","PSJAPIDS",40,0)
 . I P("DTYP")=1 D DURATION(PSIVTDUR,P(9)) Q
"RTN","PSJAPIDS",41,0)
 . ;Convert PSJIV("DUR") to minutes
"RTN","PSJAPIDS",42,0)
 . I P("DTYP")=2,$S(PSIVTDUR["H":1,PSIVTDUR["D":1,1:0) S PSJIV("DUR")=$$DRT^PSSDSAPD(PSIVTDUR)
"RTN","PSJAPIDS",43,0)
 D IN^PSIVOCDS(PSJBASE(1))
"RTN","PSJAPIDS",44,0)
 D ENHFLG
"RTN","PSJAPIDS",45,0)
 S PSJOCDS("CONTEXT")="CPRS-IV-"_$S($G(PSJIV("IV_TYPE"))=1:"I",1:"C")
"RTN","PSJAPIDS",46,0)
 I $$CHKDS() S PSJFDB("PACKAGE")="I" D DOSE^PSSDSAPD(.PSJBASE,DFN,.PSJOCDS,.PSJFDB)
"RTN","PSJAPIDS",47,0)
 K ^TMP($J,"PSJPRE")
"RTN","PSJAPIDS",48,0)
 Q
"RTN","PSJAPIDS",49,0)
CHKDS() ;Check if dosing check should be performed
"RTN","PSJAPIDS",50,0)
 ;PSJFLG=1 means dosing check should be performed
"RTN","PSJAPIDS",51,0)
 NEW PSJX,PSJFLG
"RTN","PSJAPIDS",52,0)
 I $G(PSJFDB(1,"ENH"))=0 Q 1
"RTN","PSJAPIDS",53,0)
 S PSJFLG=0
"RTN","PSJAPIDS",54,0)
 F PSJX=0:0 S PSJX=$O(PSJFDB(PSJX)) Q:'PSJX  Q:PSJFLG  D
"RTN","PSJAPIDS",55,0)
 . I '$D(PSJFDB(PSJX,"OI_ERROR")) S PSJFLG=1 Q
"RTN","PSJAPIDS",56,0)
 . I +$G(PSJFDB(PSJX,"OI")),$$SETENH(1,+PSJFDB(PSJX,"OI")) S PSJFLG=1
"RTN","PSJAPIDS",57,0)
 Q PSJFLG
"RTN","PSJAPIDS",58,0)
SETDRG ;
"RTN","PSJAPIDS",59,0)
 NEW PSIVX,PSIVX0,PSJDD,PSGDT,PSJCNT,%
"RTN","PSJAPIDS",60,0)
 D NOW^%DTC S PSGDT=%
"RTN","PSJAPIDS",61,0)
 F PSIVAS="AD","SOL" S PSJCNT=0 F PSIVX=0:0 S PSIVX=$O(PSJIV(PSIVAS,PSIVX)) Q:'PSIVX  D
"RTN","PSJAPIDS",62,0)
 .S PSIVX0=$G(PSJIV(PSIVAS,PSIVX))
"RTN","PSJAPIDS",63,0)
 .D:PSIVAS="AD" SETAD(+PSIVX0,$P(PSIVX0,U,2),$P(PSIVX0,U,5))
"RTN","PSJAPIDS",64,0)
 .D:PSIVAS="SOL" SETSOL(+PSIVX0,$P(PSIVX0,U,2),$P(PSIVX0,U,5))
"RTN","PSJAPIDS",65,0)
 Q
"RTN","PSJAPIDS",66,0)
SETAD(PSJOI,PSJOINM,PSJFLG) ;Check if additive is active then set the DRG array
"RTN","PSJAPIDS",67,0)
 ;PSJOI - 50.7 ien
"RTN","PSJAPIDS",68,0)
 ;PSJOINM - CPRS OI name
"RTN","PSJAPIDS",69,0)
 ;PSJFLG - 1 if the Enhanced order checks were done.  0 if not.
"RTN","PSJAPIDS",70,0)
 ;PSJADDD - 50 ien ^ 52.6 ien or null
"RTN","PSJAPIDS",71,0)
 Q:'+$G(PSJOI)
"RTN","PSJAPIDS",72,0)
 Q:'$D(PSIVX0)
"RTN","PSJAPIDS",73,0)
 NEW PSJADDD,PSIVIEN
"RTN","PSJAPIDS",74,0)
 S PSJADDD=$$ADDD^PSJMISC(PSJOI)
"RTN","PSJAPIDS",75,0)
 I PSJADDD="" S PSJIV("OI_ERROR",$S($G(PSJOINM)]"":PSJOINM,1:"NOT FOUND"))=4_U_PSJOI_U_1 Q
"RTN","PSJAPIDS",76,0)
 S PSIVIEN=$P(PSJADDD,U,2)
"RTN","PSJAPIDS",77,0)
 S PSJCNT=$G(PSJCNT)+1
"RTN","PSJAPIDS",78,0)
 S DRG("AD",PSJCNT)=PSIVIEN_U_$P(PSIVX0,U,2)_U_$P(PSIVX0,U,3)_U_$S($P(PSIVX0,U,4)]"":$P(PSIVX0,U,4),1:"")
"RTN","PSJAPIDS",79,0)
 S PSJIV("DRG",+PSJADDD)=+$G(PSJFLG)
"RTN","PSJAPIDS",80,0)
 Q
"RTN","PSJAPIDS",81,0)
SETSOL(PSJOI,PSJOINM,PSJFLG) ;Check if solution is active then set then DRG array
"RTN","PSJAPIDS",82,0)
 ;PSJOI - 50.7 ien
"RTN","PSJAPIDS",83,0)
 ;PSJOINM - CPRS OI name
"RTN","PSJAPIDS",84,0)
 ;PSJFLG - 1 if the Enhanced order checks were done.  0 if not.
"RTN","PSJAPIDS",85,0)
 ;PSJSOLDD - 50 ien ^ 52.7 ien or null
"RTN","PSJAPIDS",86,0)
 Q:'+$G(PSJOI)
"RTN","PSJAPIDS",87,0)
 Q:'$D(PSIVX0)
"RTN","PSJAPIDS",88,0)
 NEW PSJSOLDD,PSIVIEN
"RTN","PSJAPIDS",89,0)
 S PSJSOLDD=$$SOLDD^PSJMISC(PSJOI,+$P(PSIVX0,U,3))
"RTN","PSJAPIDS",90,0)
 I PSJSOLDD="" S PSJIV("OI_ERROR",$S($G(PSJOINM)]"":PSJOINM,1:"NOT FOUND"))=4_U_PSJOI_U_1 Q
"RTN","PSJAPIDS",91,0)
 S PSIVIEN=$P(PSJSOLDD,U,2)
"RTN","PSJAPIDS",92,0)
 S PSJCNT=$G(PSJCNT)+1
"RTN","PSJAPIDS",93,0)
 S DRG("SOL",PSJCNT)=PSIVIEN_U_$P(PSIVX0,U,2)_U_$P(PSIVX0,U,3)
"RTN","PSJAPIDS",94,0)
 S PSJIV("DRG",+PSJSOLDD)=+$G(PSJFLG)
"RTN","PSJAPIDS",95,0)
 S PSJTOTVL=$G(PSJTOTVL)+(+$P(PSIVX0,U,3))
"RTN","PSJAPIDS",96,0)
 Q
"RTN","PSJAPIDS",97,0)
SETENH(PSJFLG,PSJOI) ;Reset PSJFLG to 0 only if GCN message is needed for the dosing check
"RTN","PSJAPIDS",98,0)
 NEW PSJDD,PSJDDFLG
"RTN","PSJAPIDS",99,0)
 I '+$D(PSJFLG) Q 0
"RTN","PSJAPIDS",100,0)
 I PSJFLG=0 Q 0
"RTN","PSJAPIDS",101,0)
 I '+$G(PSJOI) Q PSJFLG
"RTN","PSJAPIDS",102,0)
 ;If PSJFLG=1 (CPRS did DI & DT) then check if no GCN for any of the DDs tie to OI then reset PSJFLG=0 to signal PDM
"RTN","PSJAPIDS",103,0)
 ; to get the check done for the OI error.
"RTN","PSJAPIDS",104,0)
 S PSJDDFLG=0
"RTN","PSJAPIDS",105,0)
 F PSJDD=0:0 S PSJDD=$O(^PSDRUG("ASP",PSJOI,PSJDD)) Q:'PSJDD  Q:PSJDDFLG  D
"RTN","PSJAPIDS",106,0)
 . I +$$GCN^PSJMISC(PSJDD) S PSJDDFLG=1 Q
"RTN","PSJAPIDS",107,0)
 Q PSJDDFLG
"RTN","PSJAPIDS",108,0)
ENHFLG ;Set the enhance flag so dosing error message won't display if enhance OC already displayed.
"RTN","PSJAPIDS",109,0)
 NEW PSJX,PSJOINM
"RTN","PSJAPIDS",110,0)
 F PSJX=0:0 S PSJX=$O(PSJFDB(PSJX)) Q:'PSJX  D
"RTN","PSJAPIDS",111,0)
 . ;If "OI_ERROR" existed than set the "ENH" flag for that PSJX set
"RTN","PSJAPIDS",112,0)
 . S PSJOINM=$O(PSJFDB(PSJX,"OI_ERROR",""))
"RTN","PSJAPIDS",113,0)
 . I PSJOINM]"" D  Q
"RTN","PSJAPIDS",114,0)
 .. S PSJFDB(PSJX,"ENH")=$P($G(PSJIV("OI_ERROR",PSJOINM)),U,3)
"RTN","PSJAPIDS",115,0)
 . I '$D(PSJFDB(PSJX,"DRUG_IEN")) Q
"RTN","PSJAPIDS",116,0)
 . S PSJFDB(PSJX,"ENH")=+$G(PSJIV("DRG",+PSJFDB(PSJX,"DRUG_IEN")))
"RTN","PSJAPIDS",117,0)
 Q
"RTN","PSJAPIDS",118,0)
DURATION(PSJDUR,PSJSCH) ;Figure out date dose limit send by CPRS for intermittent IV
"RTN","PSJAPIDS",119,0)
 ;Set PSJIV("DOSE_CNT") only for duration < 24 hrs & set PSJIV("DUR") to # minutes specified in the duration field
"RTN","PSJAPIDS",120,0)
 ;PSJDUR1 - Duration in minutes (#_M)
"RTN","PSJAPIDS",121,0)
 ;PSJCNTP3=# of minutes from schedule
"RTN","PSJAPIDS",122,0)
 ;PSJCNTP4=# of doses from schedule
"RTN","PSJAPIDS",123,0)
 NEW PSJDOW,PSJCNT,PSJDUR1,PSJCNTP1,PSJCNTP2,PSJCNTP3,PSJCNTP4,PSJX
"RTN","PSJAPIDS",124,0)
 I $G(PSJDUR)="" Q
"RTN","PSJAPIDS",125,0)
 I $G(PSJSCH)="" Q
"RTN","PSJAPIDS",126,0)
 S PSJDUR=$$UP^XLFSTR(PSJDUR)
"RTN","PSJAPIDS",127,0)
 ;These 'ML', 'L' don't make sense for IVPB & 'Days' is excluded because >24h
"RTN","PSJAPIDS",128,0)
 I $S(PSJDUR["ML":1,PSJDUR["L":1,PSJDUR["DAYS":1,1:0) Q
"RTN","PSJAPIDS",129,0)
 S PSJDUR1=0
"RTN","PSJAPIDS",130,0)
 S PSJDOW=$$DOW(PSJSCH)
"RTN","PSJAPIDS",131,0)
 I PSJDUR["H" Q:(+PSJDUR'<24)  S PSJDUR1=$$DRT^PSSDSAPD(PSJDUR)_"M",PSJIV("DUR")=PSJDUR1
"RTN","PSJAPIDS",132,0)
 ;
"RTN","PSJAPIDS",133,0)
 S PSJCNT=$$FRQ^PSSDSAPI(PSJSCH,PSJDOW,"I",PSJDUR1,$G(PSJDD))
"RTN","PSJAPIDS",134,0)
 S PSJCNTP1=$P(PSJCNT,U)
"RTN","PSJAPIDS",135,0)
 s PSJCNTP2=$P(PSJCNT,U,2)
"RTN","PSJAPIDS",136,0)
 I PSJCNTP2?1N.N S PSJCNTP3=1440/+PSJCNTP2,PSJCNTP4=+PSJCNTP2
"RTN","PSJAPIDS",137,0)
 I PSJCNTP2?1"Q"1N.N1"H" S PSJCNTP3=$P(PSJCNTP2,"Q",2)*60 S:+PSJCNTP3 PSJCNTP4=1440/PSJCNTP3
"RTN","PSJAPIDS",138,0)
 I PSJCNTP2?1"X"1N.N1"D" S:+$P(PSJCNTP2,"Q",2) PSJCNTP3=1440/$P(PSJCNTP2,"Q",2),PSJCNTP4=$P(PSJCNTP2,"Q",2)
"RTN","PSJAPIDS",139,0)
 ;
"RTN","PSJAPIDS",140,0)
 Q:'+$G(PSJCNTP4)
"RTN","PSJAPIDS",141,0)
 I PSJDUR["DOSES",(+PSJDUR<PSJCNTP4) D
"RTN","PSJAPIDS",142,0)
 . S PSJX=(+PSJDUR)*(1440/PSJCNTP4)
"RTN","PSJAPIDS",143,0)
 . I PSJX["." S PSJX=$J((PSJX+.5),0,0)
"RTN","PSJAPIDS",144,0)
 . S PSJIV("DUR")=PSJX_"M"
"RTN","PSJAPIDS",145,0)
 . S PSJIV("DOSE_CNT")=+PSJDUR
"RTN","PSJAPIDS",146,0)
 ;
"RTN","PSJAPIDS",147,0)
 Q:'+$G(PSJCNTP3)
"RTN","PSJAPIDS",148,0)
 I PSJDUR1["M",(+PSJDUR1<+$G(PSJCNTP3)) D
"RTN","PSJAPIDS",149,0)
 . S PSJX=+PSJDUR/(1440/PSJCNTP3)
"RTN","PSJAPIDS",150,0)
 . I PSJX["." S PSJX=$J((PSJX+.5),0,0)
"RTN","PSJAPIDS",151,0)
 . S PSJIV("DOSE_CNT")=PSJX
"RTN","PSJAPIDS",152,0)
 . S PSJIV("DUR")=PSJDUR1
"RTN","PSJAPIDS",153,0)
 Q
"RTN","PSJAPIDS",154,0)
DOW(PSJSCH) ;Check if Schedule is a date of week
"RTN","PSJAPIDS",155,0)
 ;Return "D" if date of week
"RTN","PSJAPIDS",156,0)
 NEW PSJSCHNO,PSJDOW,PSJFOUND
"RTN","PSJAPIDS",157,0)
 I $G(PSJSCH)="" Q ""
"RTN","PSJAPIDS",158,0)
 S PSJDOW=0,PSJFOUND=0
"RTN","PSJAPIDS",159,0)
 F PSJSCHNO=0:0 S PSJSCHNO=$O(^PS(51.1,"APPSJ",PSJSCH,PSJSCHNO)) Q:'PSJSCHNO!(PSJDOW)  D
"RTN","PSJAPIDS",160,0)
 .I $P($G(^PS(51.1,PSJSCHNO,0)),"^",5)="D" S PSJDOW=1
"RTN","PSJAPIDS",161,0)
 .I $D(^PS(51.1,PSJSCHNO,0)) S PSJFOUND=1
"RTN","PSJAPIDS",162,0)
 I PSJDOW Q "D"
"RTN","PSJAPIDS",163,0)
 I PSJFOUND Q ""
"RTN","PSJAPIDS",164,0)
 I PSJSCH["@" Q "D"
"RTN","PSJAPIDS",165,0)
 Q ""
"RTN","PSJAPIDS",166,0)
PING() ;Return -1 if the system is down.
"RTN","PSJAPIDS",167,0)
 S ^TMP($J,"PSJPRE","IN","PING")=""
"RTN","PSJAPIDS",168,0)
 D IN^PSSHRQ2("PSJPRE")
"RTN","PSJAPIDS",169,0)
 Q +$G(^TMP($J,"PSJPRE","OUT",0))
"RTN","PSJOCDS")
0^10^B91566896
"RTN","PSJOCDS",1,0)
PSJOCDS ;BIR/MV - SET INPUT DATA FOR DOSING ORDER CHECKS ;6 Jun 07 / 3:37 PM
"RTN","PSJOCDS",2,0)
 ;;5.0;INPATIENT MEDICATIONS;**181,252,257,256,358**;16 DEC 97;Build 10
"RTN","PSJOCDS",3,0)
 ;
"RTN","PSJOCDS",4,0)
 ; Reference to ^PS(55 is supported by DBIA #2191.
"RTN","PSJOCDS",5,0)
 ; Reference to ^PS(51.1 is supported by DBIA #2177.
"RTN","PSJOCDS",6,0)
 ; Reference to ^PSSORPH is supported by DBIA #3234.
"RTN","PSJOCDS",7,0)
 ; Reference to ^PSSDSAPI is supported by DBIA #5425.
"RTN","PSJOCDS",8,0)
 ; Reference to ^PSSDSAPD is supported by DBIA #5426.
"RTN","PSJOCDS",9,0)
 ; Reference to FULL^VALM1 and PAUSE^VALM1 is supported by DBIA #10116.
"RTN","PSJOCDS",10,0)
 ;
"RTN","PSJOCDS",11,0)
 ;The Dose API will be processed separately than the DD & DT order checks
"RTN","PSJOCDS",12,0)
 ;
"RTN","PSJOCDS",13,0)
IN(PSJPON,PSJTYPE,PSJDD) ;
"RTN","PSJOCDS",14,0)
 ;PSJPON - Order number
"RTN","PSJOCDS",15,0)
 ;PSJPTYPE - UD/IV
"RTN","PSJOCDS",16,0)
 ;PSJDD - Dispense drug IEN (for UD order only)
"RTN","PSJOCDS",17,0)
 ;
"RTN","PSJOCDS",18,0)
 ;PSJOVR array is defined when OVERLAP^PSGOEF2 is called.
"RTN","PSJOCDS",19,0)
 ;
"RTN","PSJOCDS",20,0)
 NEW PSJDSOFF,PSJCNT
"RTN","PSJOCDS",21,0)
 D FULL^VALM1
"RTN","PSJOCDS",22,0)
 S PSJDSOFF=$$DS^PSSDSAPI()
"RTN","PSJOCDS",23,0)
 I '+PSJDSOFF D DOSEOFF^PSJOCDSD($P(PSJDSOFF,U,2)) Q
"RTN","PSJOCDS",24,0)
 NEW PSJOCDS,PSJFDB,PSJBASE,PSJOVR,PSJOVRLP,PSJX
"RTN","PSJOCDS",25,0)
 K PSJOCDS,PSJFDB
"RTN","PSJOCDS",26,0)
 ;I '$$PING^PSJOC("Maximum Single Dose Check could not be performed") Q
"RTN","PSJOCDS",27,0)
 I '$$PING^PSJOC("Dosing Checks could not be performed.") Q
"RTN","PSJOCDS",28,0)
 K ^TMP($J,"PSJPRE"),^TMP($J,"PSJPRE1")
"RTN","PSJOCDS",29,0)
 S PSJBASE(1)="PSJPRE",PSJBASE(3)="PSJPRE1"
"RTN","PSJOCDS",30,0)
 ;
"RTN","PSJOCDS",31,0)
 ;;**** Commented out complex dosing
"RTN","PSJOCDS",32,0)
 ;;PSJOCDSC("CX","PSJCOM") is to flag if dosing checks needs to handle complex orders.
"RTN","PSJOCDS",33,0)
 ;;*I '$D(PSJOCDSC("CX","PSJCOM")) D
"RTN","PSJOCDS",34,0)
 ;;*. I $G(PSJCOM),$$CONJ^PSJOCDSC() S PSJOCDSC("CX","PSJCOM")=1
"RTN","PSJOCDS",35,0)
 ;;*I $G(PSJOCDSC("CX","PSJCOM")),'$D(PSJOCDSC("CX","ACX")) D SETLST^PSJOCDSC(PSJPON)
"RTN","PSJOCDS",36,0)
 ;;*I PSJTYPE="UD" D UD I $G(PSJOCDSC("CX","PSJCOM")) D COMPLEX^PSJOCDSC Q
"RTN","PSJOCDS",37,0)
 ;;*I PSJTYPE="IV" D IN^PSIVOCDS("PSJPRE") D:$G(PSJOCDSC("CX","PSJCOM")) IV^PSJOCDSC(PSJPON),UPDLST^PSJOCDSC(PSJPON,2)
"RTN","PSJOCDS",38,0)
 ;;**** End Complex dosing
"RTN","PSJOCDS",39,0)
 ;
"RTN","PSJOCDS",40,0)
 ;;****To be removed when complex dosing is ready
"RTN","PSJOCDS",41,0)
 I PSJTYPE="UD" D UD
"RTN","PSJOCDS",42,0)
 I PSJTYPE="IV" D IN^PSIVOCDS("PSJPRE")
"RTN","PSJOCDS",43,0)
 ;;****END
"RTN","PSJOCDS",44,0)
 ;
"RTN","PSJOCDS",45,0)
 I '$D(PSJFDB) Q
"RTN","PSJOCDS",46,0)
 ;;*If complex order then set conjunction to "Then" so low dose warning is screened out.
"RTN","PSJOCDS",47,0)
 ;;*I $G(PSJCOM),$$ALLTHEN^PSJOCDSC() D
"RTN","PSJOCDS",48,0)
 ;;*. F PSJX=0:0 S PSJX=$O(PSJOCDS(PSJX)) Q:'PSJX  S PSJOCDS(PSJX,"CONJ")="T"
"RTN","PSJOCDS",49,0)
 D DOSE^PSSDSAPD(.PSJBASE,DFN,.PSJOCDS,.PSJFDB)
"RTN","PSJOCDS",50,0)
 D DISPLAY^PSJOCDSD
"RTN","PSJOCDS",51,0)
 ;I '$G(PSGORQF),(PSJTYPE="IV"),$G(PSJOCDSC("CX","PSJCOM")) D NODAILY^PSJOCDSP(PSJPON)
"RTN","PSJOCDS",52,0)
 K ^TMP($J,"PSJPRE"),^TMP($J,"PSJPRE1")
"RTN","PSJOCDS",53,0)
 Q
"RTN","PSJOCDS",54,0)
UD ;Process data from a UD order
"RTN","PSJOCDS",55,0)
 NEW PSJDS,PSJFREQ,X
"RTN","PSJOCDS",56,0)
 ;At this state a dispense drug should be selected already.  But just incase...
"RTN","PSJOCDS",57,0)
 Q:'+PSJDD
"RTN","PSJOCDS",58,0)
 K PSJOCDS,PSJFDB
"RTN","PSJOCDS",59,0)
 ;If the drug is to be exempted then exclude it from the dose check
"RTN","PSJOCDS",60,0)
 Q:$$EXMT^PSSDSAPI(PSJDD)
"RTN","PSJOCDS",61,0)
 S PSJCNT=1
"RTN","PSJOCDS",62,0)
 S PSJDS=""
"RTN","PSJOCDS",63,0)
 ;
"RTN","PSJOCDS",64,0)
 S PSJOCDS("CONTEXT")="IP-UD"
"RTN","PSJOCDS",65,0)
 S X=$$DOSE()
"RTN","PSJOCDS",66,0)
 S PSJOCDS(PSJCNT,"DRG_AMT")=$P(X,U)
"RTN","PSJOCDS",67,0)
 S PSJOCDS(PSJCNT,"DRG_UNIT")=$P(X,U,2)
"RTN","PSJOCDS",68,0)
 S PSJOCDS(PSJCNT,"DO")=$P(X,U,3)
"RTN","PSJOCDS",69,0)
 ;
"RTN","PSJOCDS",70,0)
 S X=$$DATES(PSJPON)
"RTN","PSJOCDS",71,0)
 S X=$$DURATION($P(X,U),$P(X,U,2))
"RTN","PSJOCDS",72,0)
 ;S X=$$DURATION($G(PSGSD),$G(PSGFD))
"RTN","PSJOCDS",73,0)
 S PSJOCDS(PSJCNT,"DRATE")=$S(+X:X_"M",1:"")
"RTN","PSJOCDS",74,0)
 ;S PSJOCDS(PSJCNT,"DUR")=X
"RTN","PSJOCDS",75,0)
 ;S PSJOCDS(PSJCNT,"DUR_RT")=$S(+X:"MINUTE",1:"")
"RTN","PSJOCDS",76,0)
 S PSJOCDS(PSJCNT,"MR_IEN")=$G(PSGMR)
"RTN","PSJOCDS",77,0)
 S PSJOCDS(PSJCNT,"SCHEDULE")=$G(PSGSCH)
"RTN","PSJOCDS",78,0)
 D FDBDATA
"RTN","PSJOCDS",79,0)
 ;D LITER
"RTN","PSJOCDS",80,0)
 Q
"RTN","PSJOCDS",81,0)
FDBDATA ;Set data needed by FDB's Dose API
"RTN","PSJOCDS",82,0)
 ;Use the OI + Dosage form when display drug name.  If OI IEN doesn't exist, use DD name
"RTN","PSJOCDS",83,0)
 NEW PSJOINM,PSJXSCH,X,PSJSFFG
"RTN","PSJOCDS",84,0)
 S PSJFDB(PSJCNT,"RX_NUM")="I;"_PSJPON_";PROSPECTIVE;"_PSJCNT
"RTN","PSJOCDS",85,0)
 S PSJFDB(PSJCNT,"DRUG_IEN")=PSJDD
"RTN","PSJOCDS",86,0)
 S PSJOINM="",PSJSFFG=0
"RTN","PSJOCDS",87,0)
 ; ^PS(53.45 nodes are not set for speed renew at this point.
"RTN","PSJOCDS",88,0)
 I +$G(PSJSPEED),($G(PSGOEE)="R"),(PSJPON["P") S PSJOINM=$$OINM(PSJPON),PSJSFFG=1
"RTN","PSJOCDS",89,0)
 I 'PSJSFFG S PSJOINM=$$DRGNM^PSGSICHK()
"RTN","PSJOCDS",90,0)
 S PSJFDB(PSJCNT,"DRUG_NM")=$S(PSJOINM]"":PSJOINM,1:$$DN^PSJMISC(+PSJDD))
"RTN","PSJOCDS",91,0)
 I PSJOCDS(PSJCNT,"DO")=(PSJOCDS(PSJCNT,"DRG_AMT")_PSJOCDS(PSJCNT,"DRG_UNIT")) D
"RTN","PSJOCDS",92,0)
 . Q:PSJOCDS(PSJCNT,"DO")=""
"RTN","PSJOCDS",93,0)
 .;Strip off leading zero otherwise FDB triggers an "Invalid or Undefined Dose"
"RTN","PSJOCDS",94,0)
 . S X=PSJOCDS(PSJCNT,"DRG_AMT")
"RTN","PSJOCDS",95,0)
 . S PSJFDB(PSJCNT,"DOSE_AMT")=$S(+X=0:X,1:+X)
"RTN","PSJOCDS",96,0)
 . S PSJFDB(PSJCNT,"DOSE_UNIT")=$$UNIT^PSSDSAPI(PSJOCDS(PSJCNT,"DRG_UNIT"))
"RTN","PSJOCDS",97,0)
 S PSJFDB(PSJCNT,"DOSE_RATE")="DAY"
"RTN","PSJOCDS",98,0)
 ;
"RTN","PSJOCDS",99,0)
 S X="",PSJXSCH=PSGSCH
"RTN","PSJOCDS",100,0)
 I $G(PSGS0XT)="" S PSGS0XT=$$DOW^PSJAPIDS(PSGSCH)
"RTN","PSJOCDS",101,0)
 ;"I $G(PSGS0XT)="D,$G(PSGS0Y)]"" S $P(PSJXSCH,"@",2)=$G(PSGS0Y)
"RTN","PSJOCDS",102,0)
 I $G(PSGS0XT)="D" S PSJXSCH=$$DOWCHK(PSJXSCH,$G(PSGS0Y))
"RTN","PSJOCDS",103,0)
 I $G(PSGSCH)]"" S X=$P($$FRQ^PSSDSAPI(PSJXSCH,$G(PSGS0XT),"I",,PSJDD),U)
"RTN","PSJOCDS",104,0)
 I X="" S X=1 S PSJFDB(PSJCNT,"FRQ_ERROR")=""
"RTN","PSJOCDS",105,0)
 S PSJFDB(PSJCNT,"FREQ")=X
"RTN","PSJOCDS",106,0)
 S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSJOCDS",107,0)
 S PSJFDB(PSJCNT,"DURATION_RT")="DAY"
"RTN","PSJOCDS",108,0)
 S PSJFDB(PSJCNT,"ROUTE")=$P($$MRT^PSSDSAPI($G(PSGMR)),U,2)
"RTN","PSJOCDS",109,0)
 S PSJFDB(PSJCNT,"DOSE_TYPE")="MAINTENANCE"
"RTN","PSJOCDS",110,0)
 S PSJFDB(PSJCNT,"SPECIFIC")=1
"RTN","PSJOCDS",111,0)
 ;Set data for onetime or <24 hours order
"RTN","PSJOCDS",112,0)
 ;PSJ*5*358
"RTN","PSJOCDS",113,0)
 S PSJXSCH=$G(PSJXSCH)
"RTN","PSJOCDS",114,0)
 I ($G(PSGSCH)[" PRN"),'$D(^PS(51.1,"APPSJ",PSGSCH)) S PSJXSCH=$P(PSGSCH," PRN",1)
"RTN","PSJOCDS",115,0)
 S X=$$ONE^PSJORPOE($G(PSJXSCH))
"RTN","PSJOCDS",116,0)
 I +X!($G(PSGST)="O")!+$$ONCALL^PSJMISC($G(PSJXSCH),$G(PSGST)) D  Q
"RTN","PSJOCDS",117,0)
 . K PSJFDB(PSJCNT,"FRQ_ERROR")
"RTN","PSJOCDS",118,0)
 . S PSJFDB(PSJCNT,"DOSE_TYPE")="SINGLE DOSE"
"RTN","PSJOCDS",119,0)
 . S PSJFDB(PSJCNT,"DURATION")=1
"RTN","PSJOCDS",120,0)
 . S PSJFDB(PSJCNT,"DURATION_RT")=PSJFDB(PSJCNT,"DURATION_RT")
"RTN","PSJOCDS",121,0)
 . S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSJOCDS",122,0)
 I +PSJOCDS(PSJCNT,"DRATE") D UND24HRS(+PSJOCDS(PSJCNT,"DRATE"),$G(PSGAT),$G(PSGS0XT),PSGSD,PSGFD,PSGSCH)
"RTN","PSJOCDS",123,0)
 Q
"RTN","PSJOCDS",124,0)
DOWCHK(PSJSCHD,PSJADM) ;Append the admin times to the schedule if it's not defined in 51.1
"RTN","PSJOCDS",125,0)
 ;Assuming the shedule is day of the week
"RTN","PSJOCDS",126,0)
 ;PSJSCHD - the schedule from the order
"RTN","PSJOCDS",127,0)
 ;PSJADM - the admin times from the order
"RTN","PSJOCDS",128,0)
 ;Output - the schedule name (as entered or appended to the schedule)
"RTN","PSJOCDS",129,0)
 I $G(PSJSCHD)="" Q ""
"RTN","PSJOCDS",130,0)
 I $D(^PS(51.1,"B",PSJSCHD)) Q PSJSCHD
"RTN","PSJOCDS",131,0)
 I $G(PSJADM)]"" S $P(PSJSCHD,"@",2)=PSJADM Q PSJSCHD
"RTN","PSJOCDS",132,0)
 Q PSJSCHD
"RTN","PSJOCDS",133,0)
LITER ;FDB requires "L" instead of ML for the particular conditions below
"RTN","PSJOCDS",134,0)
 ;PSJ*5*252 (6/29/11)- This module is longer called since FDB handles either "ML" or "L" now.
"RTN","PSJOCDS",135,0)
 NEW PSJXDO
"RTN","PSJOCDS",136,0)
 Q:'$G(PSJDD)
"RTN","PSJOCDS",137,0)
 Q:$G(PSJFDB(1,"ROUTE"))'="INTRAVENOUS"
"RTN","PSJOCDS",138,0)
 Q:$G(PSGST)'="R"
"RTN","PSJOCDS",139,0)
 Q:$$VAGEN^PSJMISC(PSJDD)'["POTASSIUM"
"RTN","PSJOCDS",140,0)
 Q:$$CLASS^PSJMISC(PSJDD)'="TN102"
"RTN","PSJOCDS",141,0)
 S PSJXDO=PSJOCDS(PSJCNT,"DO")
"RTN","PSJOCDS",142,0)
 I PSJXDO["ML" D
"RTN","PSJOCDS",143,0)
 . Q:'+PSJXDO
"RTN","PSJOCDS",144,0)
 . S (PSJOCDS(PSJCNT,"DRG_AMT"),PSJFDB(PSJCNT,"DOSE_AMT"))=+(+PSJXDO/1000)
"RTN","PSJOCDS",145,0)
 . S (PSJOCDS(1,"DRG_UNIT"),PSJFDB(PSJCNT,"DOSE_UNIT"))="L"
"RTN","PSJOCDS",146,0)
 Q
"RTN","PSJOCDS",147,0)
UND24HRS(PSJDUR,PSGAT,PSGS0XT,PSGSD,PSGFD,PSGSCH) ;
"RTN","PSJOCDS",148,0)
 ;*** This line tag is called by ^PSIVOCDS also ***
"RTN","PSJOCDS",149,0)
 ;PSJDUR - order duration in minutes
"RTN","PSJOCDS",150,0)
 ;PSGAT - admin times
"RTN","PSJOCDS",151,0)
 ;PSGS0XT - Order Frequency
"RTN","PSJOCDS",152,0)
 NEW PSJNDOSE,PSJFRQ1,PSJFRQX,PSJX
"RTN","PSJOCDS",153,0)
 Q:'+$G(PSJDUR)
"RTN","PSJOCDS",154,0)
 ; Set frequency to # of amdin times
"RTN","PSJOCDS",155,0)
 I ($G(PSGAT)]"") D  Q
"RTN","PSJOCDS",156,0)
 . S PSJX=$$DATES(PSJPON)
"RTN","PSJOCDS",157,0)
 . S PSJNDOSE=$$CNTDOSE($P(PSJX,U),$P(PSJX,U,2))
"RTN","PSJOCDS",158,0)
 . I PSJNDOSE S PSJFDB(PSJCNT,"FREQ")=PSJNDOSE Q
"RTN","PSJOCDS",159,0)
 ; Set frequency based on frequency(51.1)
"RTN","PSJOCDS",160,0)
 ; NUMB^PSSDSAPI is removed for MOCHA 2.1. Need to make sure PSJFRQ1 is in numeric value
"RTN","PSJOCDS",161,0)
 ;;S PSJFRQ2=$P($$FRQ^PSSDSAPI($G(PSGSCH),$G(PSGS0XT),"I",PSJDUR_"M",PSJDD),U)
"RTN","PSJOCDS",162,0)
 S PSJFRQ1=$P($$FRQ^PSSDSAPI($G(PSGSCH),$G(PSGS0XT),"I",PSJDUR_"M",PSJDD),U)
"RTN","PSJOCDS",163,0)
 ;;I PSJFRQ2?1"Q"1N.N1"H" S PSJFRQ2=1440/(+$E(PSJFRQ2,2,$L(PSJFRQ2))*60)
"RTN","PSJOCDS",164,0)
 ;;I PSJFRQ2?1"X"1N.N1"D" S PSJFRQ2=+$E(PSJFRQ2,2,$L(PSJFRQ2))
"RTN","PSJOCDS",165,0)
 ;;I +PSJFRQ2 S PSJFRQ1=(PSJFRQ2/24)*(+PSJDUR/60)
"RTN","PSJOCDS",166,0)
 ; If no value returned from FRQ^PSSDSAPI and frequency is there then set freq = duration in min / freq in min
"RTN","PSJOCDS",167,0)
 I '+$G(PSJFRQ1),+$G(PSGS0XT) S PSJFRQ1=(+PSJDUR)/PSGS0XT
"RTN","PSJOCDS",168,0)
 ; Calculate freq from number of dose admin per day (round up)
"RTN","PSJOCDS",169,0)
 S PSJFDB(PSJCNT,"FREQ")=$S(PSJFRQ1?.N:PSJFRQ1,1:$J((+$G(PSJFRQ1)+.5),0,0))
"RTN","PSJOCDS",170,0)
 I PSJFDB(PSJCNT,"FREQ")'=0 Q
"RTN","PSJOCDS",171,0)
 ; If no admin times or frequency(51.1) set error
"RTN","PSJOCDS",172,0)
 S PSJFDB(PSJCNT,"FREQ")=1
"RTN","PSJOCDS",173,0)
 S PSJFDB(PSJCNT,"FRQ_ERROR")=""
"RTN","PSJOCDS",174,0)
 Q
"RTN","PSJOCDS",175,0)
CNTDOSE(PSGSD,PSGFD) ;Count # of admins to set the Freq to
"RTN","PSJOCDS",176,0)
 ;only do this if the start & stop dates are within 24 hours.
"RTN","PSJOCDS",177,0)
 NEW PSJX,PSJADMIN,PSJCNT,PSJSTRTM,PSJSTPTM,PSJDTFLG
"RTN","PSJOCDS",178,0)
 I $G(PSGAT)="" Q 0
"RTN","PSJOCDS",179,0)
 I $G(PSGSD)="" Q 0
"RTN","PSJOCDS",180,0)
 I $G(PSGFD)="" Q 0
"RTN","PSJOCDS",181,0)
 I ($$FMDIFF^XLFDT(PSGFD,PSGSD,2)/60)>1440 Q 0
"RTN","PSJOCDS",182,0)
 S PSJCNT=0
"RTN","PSJOCDS",183,0)
 S PSJSTRTM=$E($P(PSGSD,".",2)_"0000",1,4)
"RTN","PSJOCDS",184,0)
 S PSJSTPTM=$E($P(PSGFD,".",2)_"0000",1,4)
"RTN","PSJOCDS",185,0)
 S PSJDTFLG=0
"RTN","PSJOCDS",186,0)
 I $P(PSGSD,".")=$P(PSGFD,".") S PSJDTFLG=1
"RTN","PSJOCDS",187,0)
 F PSJX=1:1 S PSJADMIN=$P(PSGAT,"-",PSJX) Q:PSJADMIN=""  D
"RTN","PSJOCDS",188,0)
 . S PSJADMIN=$E($P(PSGAT,"-",PSJX)_"0000",1,4)
"RTN","PSJOCDS",189,0)
 . I PSJDTFLG D  Q
"RTN","PSJOCDS",190,0)
 .. I (PSJSTRTM'>PSJADMIN),(PSJADMIN<PSJSTPTM) S PSJCNT=PSJCNT+1
"RTN","PSJOCDS",191,0)
 . I (PSJSTRTM'>PSJADMIN) S PSJCNT=PSJCNT+1
"RTN","PSJOCDS",192,0)
 . I (PSJSTPTM>PSJADMIN) S PSJCNT=PSJCNT+1
"RTN","PSJOCDS",193,0)
 Q PSJCNT
"RTN","PSJOCDS",194,0)
DURATION(PSGSD,PSGFD) ;Figure out the duration from the start, stop dates
"RTN","PSJOCDS",195,0)
 ;Return the diff between Stop - Start date in minutes.  If > 1 day then return null
"RTN","PSJOCDS",196,0)
 NEW PSJDIFF
"RTN","PSJOCDS",197,0)
 I '$D(PSGFD)!'$D(PSGSD) Q ""
"RTN","PSJOCDS",198,0)
 S PSJDIFF=$$FMDIFF^XLFDT(PSGFD,PSGSD,2)/60
"RTN","PSJOCDS",199,0)
 I (PSJDIFF<1440) Q PSJDIFF
"RTN","PSJOCDS",200,0)
 Q ""
"RTN","PSJOCDS",201,0)
DOSE() ;Figure out the dose, unit, & dosage Ordered
"RTN","PSJOCDS",202,0)
 ;Return 3 pieces: Numeric Dose ^ Unit ^ Dosage Ordered
"RTN","PSJOCDS",203,0)
 NEW PSJDS,PSJND0,PSJND2,X,PSJX,PSJXDOX,PSJNDS,PSJALLGY
"RTN","PSJOCDS",204,0)
 S PSJDS=""
"RTN","PSJOCDS",205,0)
 ;Subsequence orders in the Complex order has the PSGDO from the first order. Get new PSGDO
"RTN","PSJOCDS",206,0)
 I $G(PSJPON)["U",$S($G(PSJCOM):1,$G(PSGRENEW):1,1:0) S PSGDO=$P($G(^PS(55,DFN,5,+PSJPON,.2)),U,2)
"RTN","PSJOCDS",207,0)
 ;If the dose & unit exist use them
"RTN","PSJOCDS",208,0)
 I +$G(PSJDOSE("DO"))_$P($G(PSJDOSE("DO")),U,2)=$G(PSGDO) Q PSJDOSE("DO")_U_$G(PSGDO)
"RTN","PSJOCDS",209,0)
 ;Get dd, dose, unit from the order
"RTN","PSJOCDS",210,0)
 I $G(PSGORD)]"",'+$G(PSJDD) D
"RTN","PSJOCDS",211,0)
 . I PSGORD["P" S PSJND2=$G(^PS(53.1,+PSGORD,.2)),PSJDD=$O(^PS(53.1,+PSGORD,1,"B",0))
"RTN","PSJOCDS",212,0)
 . I PSGORD["U" S PSJND2=$G(^PS(55,DFN,5,+PSGORD,.2)),PSJDD=$O(^PS(55,+DFN,5,+PSGORD,1,"B",0))
"RTN","PSJOCDS",213,0)
 ;If no numeric dose and there is a dosage ordered then get dose & unit from the order
"RTN","PSJOCDS",214,0)
 I $D(PSGORD),$G(PSGDO)]"" D
"RTN","PSJOCDS",215,0)
 . S PSJDS=$P($G(PSJND2),U,5,6)
"RTN","PSJOCDS",216,0)
 Q:+PSJDS PSJDS_U_$G(PSGDO)
"RTN","PSJOCDS",217,0)
 ;Get dispense unit per dose and figure out numeric and unit
"RTN","PSJOCDS",218,0)
 I +$G(PSJDD),($G(PSGDO)]"") D
"RTN","PSJOCDS",219,0)
 . S PSJDS=$$DOSE1()
"RTN","PSJOCDS",220,0)
 . I $P($G(PSJXDOX(1)),U,11)=$$UP^XLFSTR(PSGDO) Q:+PSJDS
"RTN","PSJOCDS",221,0)
 . S PSJDS=""
"RTN","PSJOCDS",222,0)
 . S PSJX=$G(PSJXDOX(1))
"RTN","PSJOCDS",223,0)
 . I +PSJX S X=+PSGDO/+PSJX S PSJDS=$$DOSE1(X)
"RTN","PSJOCDS",224,0)
 . I $P($G(PSJXDOX(1)),U,11)=$$UP^XLFSTR(PSGDO) Q:+PSJDS
"RTN","PSJOCDS",225,0)
 . S PSJDS=""
"RTN","PSJOCDS",226,0)
 Q:+PSJDS PSJDS
"RTN","PSJOCDS",227,0)
 I +$G(PSJDD),($G(PSGDO)=""),($G(PSGORD)="") D
"RTN","PSJOCDS",228,0)
 . S PSJDS=$$DOSE1($S(+$G(PSGUD):PSGUD,1:1))
"RTN","PSJOCDS",229,0)
 Q:+PSJDS PSJDS
"RTN","PSJOCDS",230,0)
 ;Figure out dose & unit from the dispense drug.  Dosage Ordered is required for multiple dispense drugs
"RTN","PSJOCDS",231,0)
 I $G(PSGDO)="" D
"RTN","PSJOCDS",232,0)
 . S PSJND0=$$DD53P45^PSJMISC()
"RTN","PSJOCDS",233,0)
 . I PSJND0="" S PSJND0=$G(PSGDRG)
"RTN","PSJOCDS",234,0)
 . S X=+$P(PSJND0,U,2) S PSJDS=$$DOSE1($S(X:X,1:1))
"RTN","PSJOCDS",235,0)
 Q:+PSJDS PSJDS
"RTN","PSJOCDS",236,0)
 Q "^^"_$G(PSGDO)
"RTN","PSJOCDS",237,0)
DOSE1(PSJDUP) ;
"RTN","PSJOCDS",238,0)
 ;PSJDUP - Dispense unit per dose
"RTN","PSJOCDS",239,0)
 NEW PSJDS
"RTN","PSJOCDS",240,0)
 Q:'+$G(PSJDD)
"RTN","PSJOCDS",241,0)
 K PSJXDOX
"RTN","PSJOCDS",242,0)
 S PSJDS=""
"RTN","PSJOCDS",243,0)
 D DOSE^PSSORPH(.PSJXDOX,+PSJDD,"U",,$G(PSJDUP))
"RTN","PSJOCDS",244,0)
 S:$G(PSJXDOX(1)) PSJDS=$P(PSJXDOX(1),U,1,2)_U_$P(PSJXDOX(1),U)_$P(PSJXDOX(1),U,2)
"RTN","PSJOCDS",245,0)
 Q PSJDS
"RTN","PSJOCDS",246,0)
DATES(PSJPON) ;Check the correct Start, Stop dates to use
"RTN","PSJOCDS",247,0)
 ;PSJOCDSC("CX",PSGsd/PSGfd,on)=default PSGsd/PSGfd date _^_ PSGsd/PSGfd _^_PSJFLG
"RTN","PSJOCDS",248,0)
 ;PSJP1 = Start date; PSJP2 = Stop date; PSJFLG = 1 if start or stop date has changed.
"RTN","PSJOCDS",249,0)
 ;For some reasons, PSGSD redefined to cal start date for Complex order (one with duration),
"RTN","PSJOCDS",250,0)
 ; PSGFD redefined to cal stop date.  These 2 fields reflect the default start, stop dates if they
"RTN","PSJOCDS",251,0)
 ; were edited.
"RTN","PSJOCDS",252,0)
 ;
"RTN","PSJOCDS",253,0)
 NEW PSJXSD,PSJXFD,PSJP1,PSJP2,PSJFLG,X
"RTN","PSJOCDS",254,0)
 I '+$G(PSJPON) Q $G(PSGSD)_U_$G(PSGFD)_U_0
"RTN","PSJOCDS",255,0)
 S PSJFLG=0
"RTN","PSJOCDS",256,0)
 S PSJP1=$G(PSGSD),PSJP2=$G(PSGFD)
"RTN","PSJOCDS",257,0)
 I $D(PSJOCDSC("CX","PSGSD")) D
"RTN","PSJOCDS",258,0)
 . S PSJXSD=$G(PSJOCDSC("CX","PSGSD",+PSJPON))
"RTN","PSJOCDS",259,0)
 . S PSJXFD=$G(PSJOCDSC("CX","PSGFD",+PSJPON))
"RTN","PSJOCDS",260,0)
 . I PSGSD=$P(PSJXSD,U,2) S PSJP1=$P(PSJXSD,U)
"RTN","PSJOCDS",261,0)
 .;
"RTN","PSJOCDS",262,0)
 . I $P(PSJXFD,U,2)]"",(PSGFD=$P(PSJXFD,U,2)) S PSJP2=$P(PSJXFD,U)
"RTN","PSJOCDS",263,0)
 . I $P(PSJXFD,U,2)="" S $P(PSJXFD,U,2)=PSGFD,PSJP2=PSGFD
"RTN","PSJOCDS",264,0)
 .;
"RTN","PSJOCDS",265,0)
 .; I $P(PSJXFD,U,2)="" S $P(PSJXFD,U,2)=PSGFD
"RTN","PSJOCDS",266,0)
 .; I PSGFD=$P(PSJXFD,U,2) S PSJP2=$P(PSJXFD,U)
"RTN","PSJOCDS",267,0)
 . I (PSJXSD]"")!(PSJXFD]"") D
"RTN","PSJOCDS",268,0)
 .. I $S($G(PSGSD)'=$P(PSJXSD,U,2):1,$G(PSGFD)'=$P(PSJXFD,U,2):1,1:0) S PSJFLG=1
"RTN","PSJOCDS",269,0)
 . S X=$G(^PS(53.1,+PSJPON,2.5))
"RTN","PSJOCDS",270,0)
 . ;Reset PSJP1 & PSJP2 from the order is needed when complex order defaulted to IV but FN as UD,
"RTN","PSJOCDS",271,0)
 . ; the calc Start/stop dates were used therefore the duration was not considered.
"RTN","PSJOCDS",272,0)
 . I (PSJPON["P"),(PSJFLG=0),($P(X,U,2)]"") S PSJP1=$P(X,U,1),PSJP2=$P(X,U,3)
"RTN","PSJOCDS",273,0)
 Q PSJP1_U_PSJP2_U_PSJFLG
"RTN","PSJOCDS",274,0)
OINM(PSJPON) ;For speed renew, returns OI name if order has multiple DD else returns null
"RTN","PSJOCDS",275,0)
 NEW PSJCNT,PSJDD,PSJOINM,PSJOI
"RTN","PSJOCDS",276,0)
 I $G(PSJPON)'["P" Q
"RTN","PSJOCDS",277,0)
 S PSJCNT=0
"RTN","PSJOCDS",278,0)
 F PSJDD=0:0 S PSJDD=$O(^PS(53.1,+PSJPON,1,PSJDD)) Q:'PSJDD  S PSJCNT=PSJCNT+1
"RTN","PSJOCDS",279,0)
 I PSJCNT>1 S PSJOI=+$G(^PS(53.1,+PSJPON,.2)) S PSJOINM=$$OIDF^PSJLMUT1(+PSJOI)
"RTN","PSJOCDS",280,0)
 Q $G(PSJOINM)
"RTN","PSJOCDSD")
0^11^B28624928
"RTN","PSJOCDSD",1,0)
PSJOCDSD ; BIR/MV,RN - PROCESS DOSING ORDER CHECKS ;6 Jun 07  3:37 PM
"RTN","PSJOCDSD",2,0)
 ;;5.0;INPATIENT MEDICATIONS;**181,252,281,256,347,358**;16 DEC 97;Build 10
"RTN","PSJOCDSD",3,0)
 ;
"RTN","PSJOCDSD",4,0)
DISPLAY ;Display dose checks
"RTN","PSJOCDSD",5,0)
 NEW PSJPON,PSJDSPFG,PSJCNT0,DR,PSJONLST,PSJBRK
"RTN","PSJOCDSD",6,0)
 D FULL^VALM1
"RTN","PSJOCDSD",7,0)
 I $D(^TMP($J,"PSJPRE1","OUT")),'$D(PSJEXCPT("PROSPECTIVE")) W @IOF
"RTN","PSJOCDSD",8,0)
 Q:'$$DSPSERR^PSJOC("Dosing Checks could not be performed.")
"RTN","PSJOCDSD",9,0)
 D EXCEPTN2
"RTN","PSJOCDSD",10,0)
 F PSJCNT0=0:0 S PSJCNT0=$O(^TMP($J,"PSJPRE1","OUT",PSJCNT0)) Q:'PSJCNT0  Q:$G(PSGORQF)  D
"RTN","PSJOCDSD",11,0)
 . S PSJPON="" F  S PSJPON=$O(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON)) Q:PSJPON=""  Q:$G(PSGORQF)  D
"RTN","PSJOCDSD",12,0)
 .. Q:PSJPON=0
"RTN","PSJOCDSD",13,0)
 .. D ERROR
"RTN","PSJOCDSD",14,0)
 .. D EXCEPTN
"RTN","PSJOCDSD",15,0)
 .. D WARNING
"RTN","PSJOCDSD",16,0)
 I $D(^TMP($J,"PSJPRE1","OUT")),('$D(PSJEXCPT("PROSPECTIVE"))!$G(PSJBRK)),'$G(PSJDSPFG) D PAUSE^PSJLMUT1
"RTN","PSJOCDSD",17,0)
 ;I $D(^TMP($J,"PSJPRE1","OUT")),'$G(PSJDSPFG) D PAUSE^PSJLMUT1
"RTN","PSJOCDSD",18,0)
 K PSJDSPFG,PSJEXCPT("PROSPECTIVE")
"RTN","PSJOCDSD",19,0)
 Q
"RTN","PSJOCDSD",20,0)
DOSEOFF(PSJMSG) ;
"RTN","PSJOCDSD",21,0)
 ;Display message if dosing had turned off (once per patient session)
"RTN","PSJOCDSD",22,0)
 Q:$D(PSJEXCPT("DOSE",0))
"RTN","PSJOCDSD",23,0)
 S PSJEXCPT("DOSE",0)=""
"RTN","PSJOCDSD",24,0)
 W !!,$G(PSJMSG),!
"RTN","PSJOCDSD",25,0)
 D PAUSE^PSJLMUT1
"RTN","PSJOCDSD",26,0)
 Q
"RTN","PSJOCDSD",27,0)
WARNING ;Display warning messages
"RTN","PSJOCDSD",28,0)
 NEW PSJSGLE,PSJRNGE,PSJMSG,PSJDD,PSJTYPE,PSJORI
"RTN","PSJOCDSD",29,0)
 ;I ($Y+6)>IOSL D PAUSE^PSJLMUT1 W @IOF
"RTN","PSJOCDSD",30,0)
 S PSJMSG="",PSJORI=""
"RTN","PSJOCDSD",31,0)
 S (PSJSGLE,PSJRNGE)=0
"RTN","PSJOCDSD",32,0)
 S PSJTYPE="" F  S PSJTYPE=$O(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"MESSAGE",PSJTYPE)) Q:PSJTYPE=""  D
"RTN","PSJOCDSD",33,0)
 .IF PSJTYPE=".1_INTRO" SET PSJORI=^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"MESSAGE",PSJTYPE) D  Q
"RTN","PSJOCDSD",34,0)
 ..S PSJBRK=0
"RTN","PSJOCDSD",35,0)
 ..I ($Y+6)>IOSL D PAUSE^PSJLMUT1 W @IOF
"RTN","PSJOCDSD",36,0)
 ..W !
"RTN","PSJOCDSD",37,0)
 ..D WRITE^PSJMISC(PSJORI,1)
"RTN","PSJOCDSD",38,0)
 .I PSJTYPE="4_TRAIL" S PSJMSG=^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"MESSAGE",PSJTYPE) D  Q
"RTN","PSJOCDSD",39,0)
 ..I ($Y+6)>IOSL D PAUSE^PSJLMUT1 W @IOF
"RTN","PSJOCDSD",40,0)
 ..I ($Y+6)'>IOSL W !
"RTN","PSJOCDSD",41,0)
 ..D WRITE^PSJMISC(PSJMSG,3)
"RTN","PSJOCDSD",42,0)
 ..S PSJBRK=1
"RTN","PSJOCDSD",43,0)
 . I ($Y+4)>IOSL D PAUSE^PSJLMUT1 W @IOF
"RTN","PSJOCDSD",44,0)
 . ;Don't display a blank line after Per Orifice text
"RTN","PSJOCDSD",45,0)
 . I $G(PSJORI)=""  W !
"RTN","PSJOCDSD",46,0)
 . K PSJORI
"RTN","PSJOCDSD",47,0)
 . F PSJDD=0:0 S PSJDD=$O(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"MESSAGE",PSJTYPE,PSJDD)) Q:'PSJDD  D
"RTN","PSJOCDSD",48,0)
 .. Q:$G(PSGORQF)
"RTN","PSJOCDSD",49,0)
 .. S PSJMSG=$G(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"MESSAGE",PSJTYPE,PSJDD))
"RTN","PSJOCDSD",50,0)
 .. I PSJTYPE="3_GENERAL" D GENERAL
"RTN","PSJOCDSD",51,0)
 .. I PSJTYPE'="3_GENERAL" D
"RTN","PSJOCDSD",52,0)
 ... S PSJMSG=$G(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"MESSAGE",PSJTYPE,PSJDD))
"RTN","PSJOCDSD",53,0)
 ... D WRITE^PSJMISC(PSJMSG,3)
"RTN","PSJOCDSD",54,0)
 .. I PSJTYPE["1_SINGLE_RANGE" S (PSJSGLE,PSJRNGE)=1_U_PSJDD Q
"RTN","PSJOCDSD",55,0)
 .. S:PSJTYPE["1_SINGLE" PSJSGLE=1_U_PSJDD
"RTN","PSJOCDSD",56,0)
 .. S:PSJTYPE["2_RANGE" PSJRNGE=1_U_PSJDD
"RTN","PSJOCDSD",57,0)
 Q:$G(PSGORQF)
"RTN","PSJOCDSD",58,0)
 D INTERV
"RTN","PSJOCDSD",59,0)
 Q
"RTN","PSJOCDSD",60,0)
INTERV ;Process intervention for dosing check
"RTN","PSJOCDSD",61,0)
 NEW PSJDD
"RTN","PSJOCDSD",62,0)
 S PSJDD=$S(+PSJSGLE:$P(PSJSGLE,U,2),1:$P(PSJRNGE,U,2))
"RTN","PSJOCDSD",63,0)
 I 'PSJDD,'$D(PSJOCFG) Q
"RTN","PSJOCDSD",64,0)
 K PSJDSPFG
"RTN","PSJOCDSD",65,0)
 I +PSJSGLE!+PSJRNGE W ! S PSJDSPFG=1
"RTN","PSJOCDSD",66,0)
 I +PSJSGLE,+PSJRNGE D RINTERV^PSJGMRA("MAX SINGLE DOSE & Max Daily Dose") Q
"RTN","PSJOCDSD",67,0)
 I +PSJRNGE D RINTERV^PSJGMRA("Max Daily Dose") Q
"RTN","PSJOCDSD",68,0)
 I +PSJSGLE D RINTERV^PSJGMRA("MAX SINGLE DOSE") Q
"RTN","PSJOCDSD",69,0)
 Q
"RTN","PSJOCDSD",70,0)
ERROR ; Process errors
"RTN","PSJOCDSD",71,0)
 NEW PSJCNT,PSJNV
"RTN","PSJOCDSD",72,0)
 ;Check for system error one more time.
"RTN","PSJOCDSD",73,0)
 F PSJCNT=0:0 S PSJCNT=$O(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"ERROR",PSJCNT)) Q:'PSJCNT  D
"RTN","PSJOCDSD",74,0)
 . I ($Y+6)>IOSL D PAUSE^PSJLMUT1 W @IOF
"RTN","PSJOCDSD",75,0)
 . I ($Y+6)'>IOSL W !!
"RTN","PSJOCDSD",76,0)
 . S PSJNV=$G(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"ERROR",PSJCNT,"MSG"))
"RTN","PSJOCDSD",77,0)
 . I PSJNV]"" D WRITE^PSJMISC(PSJNV,3)
"RTN","PSJOCDSD",78,0)
 . S PSJNV=$G(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"ERROR",PSJCNT,"TEXT"))
"RTN","PSJOCDSD",79,0)
 . I PSJNV]"" D WRITE^PSJMISC(PSJNV,5)
"RTN","PSJOCDSD",80,0)
 . S PSJNV=$G(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"ERROR",PSJCNT,"TRAIL"))
"RTN","PSJOCDSD",81,0)
 . I PSJNV]"" W ! D WRITE^PSJMISC(PSJNV,3)
"RTN","PSJOCDSD",82,0)
 Q
"RTN","PSJOCDSD",83,0)
EXCEPTN ; Process exceptions
"RTN","PSJOCDSD",84,0)
 NEW PSJCNT,PSJNV,PSJSPACE,PSJQFLG1,PSJDSDRG,PSJXDRG,PSJQUIT
"RTN","PSJOCDSD",85,0)
 ;Check for system error one more time.
"RTN","PSJOCDSD",86,0)
 ;PSJOCFG - flag when order is Renew, Copy or New OE
"RTN","PSJOCDSD",87,0)
 S PSJSPACE=0
"RTN","PSJOCDSD",88,0)
 I $O(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"EXCEPTIONS",0)) D
"RTN","PSJOCDSD",89,0)
 .I ($Y+4)>IOSL D PAUSE^PSJLMUT1 W @IOF
"RTN","PSJOCDSD",90,0)
 F PSJCNT=0:0 S PSJCNT=$O(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"EXCEPTIONS",PSJCNT)) Q:'PSJCNT  D
"RTN","PSJOCDSD",91,0)
 . S PSJQFLG1=0,PSJDSDRG=""
"RTN","PSJOCDSD",92,0)
 . S PSJDSDRG=$P($G(^TMP($J,"PSJPRE","IN","DOSE",PSJPON)),U,3)
"RTN","PSJOCDSD",93,0)
 . S PSJQUIT=0,PSJXDRG="" F  S PSJXDRG=$O(PSJEXCPT("PROSPECTIVE",PSJXDRG)) Q:PSJXDRG=""  I +PSJXDRG=+PSJDSDRG S PSJQUIT=1 Q
"RTN","PSJOCDSD",94,0)
 . Q:PSJQUIT
"RTN","PSJOCDSD",95,0)
 . S PSJNV=$G(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"EXCEPTIONS",PSJCNT))
"RTN","PSJOCDSD",96,0)
 . I PSJNV]"" D
"RTN","PSJOCDSD",97,0)
 .. I $E(PSJNV,1,13)="             " S PSJSPACE=13,PSJNV=$P(PSJNV,"             ",2)
"RTN","PSJOCDSD",98,0)
 .. I (PSJNV'["Reason(s)"),+'$G(PSJSPACE) W !
"RTN","PSJOCDSD",99,0)
 .. I PSJNV["  Reason(s)" S PSJNV=$P(PSJNV,"  ",2),PSJSPACE=2
"RTN","PSJOCDSD",100,0)
 .. D WRITE^PSJMISC(PSJNV,PSJSPACE+3)
"RTN","PSJOCDSD",101,0)
 . S PSJNV=$G(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"EXCEPTIONS",PSJCNT,"TRAIL"))
"RTN","PSJOCDSD",102,0)
 . I PSJNV]"" W ! D WRITE^PSJMISC(PSJNV,PSJSPACE+3)
"RTN","PSJOCDSD",103,0)
 Q
"RTN","PSJOCDSD",104,0)
EXCEPTN2 ; Process exceptions on prospective drug
"RTN","PSJOCDSD",105,0)
 NEW PSJPON,PSJN,PSJNV
"RTN","PSJOCDSD",106,0)
 S PSJPON="" F  S PSJPON=$O(^TMP($J,"PSJPRE1","OUT","EXCEPTIONS",PSJPON)) Q:PSJPON=""  D
"RTN","PSJOCDSD",107,0)
 . F PSJN=0:0 S PSJN=$O(^TMP($J,"PSJPRE1","OUT","EXCEPTIONS",PSJPON,PSJN)) Q:'PSJN  D
"RTN","PSJOCDSD",108,0)
 .. S PSJNV=$G(^TMP($J,"PSJPRE1","OUT","EXCEPTIONS",PSJPON,PSJN))
"RTN","PSJOCDSD",109,0)
 .. I $P(PSJPON,";",3)="PROFILE" Q
"RTN","PSJOCDSD",110,0)
 .. I '$$ERRCHK^PSJOC("PROSPECTIVE",$P(PSJNV,U,3)_$P(PSJNV,U,10)) Q
"RTN","PSJOCDSD",111,0)
 .. Q:'$D(PSJOCFG)
"RTN","PSJOCDSD",112,0)
 .. W !
"RTN","PSJOCDSD",113,0)
 .. D DSPDRGER^PSJOC(1)
"RTN","PSJOCDSD",114,0)
 Q
"RTN","PSJOCDSD",115,0)
GENERAL ;
"RTN","PSJOCDSD",116,0)
 NEW PSJGCNT
"RTN","PSJOCDSD",117,0)
 F PSJGCNT=0:0 S PSJGCNT=$O(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"MESSAGE",PSJTYPE,PSJDD,PSJGCNT)) Q:'PSJGCNT  D
"RTN","PSJOCDSD",118,0)
 . S PSJMSG=$G(^TMP($J,"PSJPRE1","OUT",PSJCNT0,PSJPON,"MESSAGE",PSJTYPE,PSJDD,PSJGCNT))
"RTN","PSJOCDSD",119,0)
 .I ($Y+3)>IOSL D PAUSE^PSJLMUT1 W @IOF
"RTN","PSJOCDSD",120,0)
 . D WRITE^PSJMISC(PSJMSG,3)
"RTN","PSJOCDSD",121,0)
 Q
"RTN","PSJORUTL")
0^12^B21381210
"RTN","PSJORUTL",1,0)
PSJORUTL ;BIR/MLM-MISC. PROCEDURE CALLS FOR OE/RR 3.0 ;24 Feb 99 / 10:43 AM
"RTN","PSJORUTL",2,0)
 ;;5.0;INPATIENT MEDICATIONS ;**4,14,22,256,358**;16 DEC 97;Build 10
"RTN","PSJORUTL",3,0)
 ;
"RTN","PSJORUTL",4,0)
 ;Reference to ^PS(50.416 is supported by DBIA 2196
"RTN","PSJORUTL",5,0)
 ;Reference to ^PS(50.606 is supported by DBIA 2174
"RTN","PSJORUTL",6,0)
 ;Reference to ^PS(52.6 is supported by DBIA 1231
"RTN","PSJORUTL",7,0)
 ;Reference to ^PS(52.7 is supported by DBIA 2173
"RTN","PSJORUTL",8,0)
 ;Reference to ^PSDRUG is supported by DBIA 2192
"RTN","PSJORUTL",9,0)
 ;Reference to ^PSNDF( is supported by DBIA 2195
"RTN","PSJORUTL",10,0)
 ;Reference to ^YSCL(603.01 is supported by DBIA 2697
"RTN","PSJORUTL",11,0)
 ;
"RTN","PSJORUTL",12,0)
ENDD(PD,TYP,PSJ,DFN) ; Find all entries in DRUG file (50) for the passed primary/usage.
"RTN","PSJORUTL",13,0)
 ;Input: PD - NATIONAL DRUG FILE ENTRY (20).PSNDF VA PRODUCT NAME ENTRY
"RTN","PSJORUTL",14,0)
 ;            ^NDF ptr.NDF form ptr^NDF Name^Primary IEN^Primary
"RTN","PSJORUTL",15,0)
 ;            Name^"99PSP".
"RTN","PSJORUTL",16,0)
 ;       TYP- String identifying type of drug (O:OP; U:UD; I:IV etc).
"RTN","PSJORUTL",17,0)
 ;Output:PSJ- Array containing all entries in the DRUG file (50) tied
"RTN","PSJORUTL",18,0)
 ;            to the PD for the type(s) of drugs specified. Array is
"RTN","PSJORUTL",19,0)
 ;            returned: ARRAY(PSJ)=IEN^GENERIC NAME (.01)^PRICE PER
"RTN","PSJORUTL",20,0)
 ;            DISPENSE UNIT (16)^NON-FORMULARY (51)^DISPENSE UNIT (14.5)
"RTN","PSJORUTL",21,0)
 ;            ^MAX NUMBER OF REFILLS ;5.27.97/SAB
"RTN","PSJORUTL",22,0)
 ;            If no 50 entries found, PSJ=0; Else PSJ=# of entries.
"RTN","PSJORUTL",23,0)
 ;
"RTN","PSJORUTL",24,0)
 N MAX,DEA,DEAI,DDRG,INACT,ND,X,Y S PSJ=0,PD=+$P(PD,U,4)
"RTN","PSJORUTL",25,0)
 F DDRG=0:0 S DDRG=$O(^PSDRUG("ASP",PD,DDRG)) Q:'DDRG  S INACT=$G(^PSDRUG(DDRG,"I")) I ('INACT)!(INACT'<DT) S Y=$P($G(^PSDRUG(DDRG,2)),U,3) D
"RTN","PSJORUTL",26,0)
 .F X=1:1:$L(TYP) I Y[$E(TYP,X) S Y=1 Q
"RTN","PSJORUTL",27,0)
 .D:Y
"RTN","PSJORUTL",28,0)
 ..S ND=$G(^PSDRUG(DDRG,0)),Y=$G(^(660)),PSJ=PSJ+1,PSJ(PSJ)=DDRG_U_$P(ND,U)_U_$P(Y,U,6)_U_$P(ND,U,9)_U_$P(Y,U,8) D MAX S PSJ(PSJ)=PSJ(PSJ)_U_MAX K MAX
"RTN","PSJORUTL",29,0)
 Q
"RTN","PSJORUTL",30,0)
 ;
"RTN","PSJORUTL",31,0)
ENDDIV(PD,TYP,VOLUME,PSJ) ; Find all entries in DRUG file (50) for the passed Orderable item, IV additive/solution.
"RTN","PSJORUTL",32,0)
 ;Input: PD - Orderable item Pointer.
"RTN","PSJORUTL",33,0)
 ;       TYP- String identifying type of drug (A:ADDITIVE, B:BASE).
"RTN","PSJORUTL",34,0)
 ;    VOLUME- Volume used to uniquely identify a dispense drug.
"RTN","PSJORUTL",35,0)
 ;Output:PSJ- A string containing all entries in the DRUG file (50) tied
"RTN","PSJORUTL",36,0)
 ;            to the PD for the type(s) of drugs specified. This string
"RTN","PSJORUTL",37,0)
 ;            returned: PSJ=IEN^GENERIC NAME (.01)^PRICE PER DISPENSE
"RTN","PSJORUTL",38,0)
 ;            UNIT (16)^NON-FORMULARY (51)^DISPENSE UNIT (14.5)
"RTN","PSJORUTL",39,0)
 ;
"RTN","PSJORUTL",40,0)
 NEW PSJIENS,Y S PSJ=0
"RTN","PSJORUTL",41,0)
 Q:$G(PD)=""
"RTN","PSJORUTL",42,0)
 Q:$G(TYP)=""
"RTN","PSJORUTL",43,0)
 S:TYP="A" PSJIENS=$$ADDD^PSJMISC(PD)
"RTN","PSJORUTL",44,0)
 S:TYP="B" PSJIENS=$$SOLDD^PSJMISC(PD,$G(VOLUME))
"RTN","PSJORUTL",45,0)
 I PSJIENS="" Q
"RTN","PSJORUTL",46,0)
 S ND=$G(^PSDRUG(+PSJIENS,0)),Y=$G(^(660)),PSJ=+PSJIENS_U_$P(ND,U)_U_$P(Y,U,6)_U_$P(ND,U,9)_U_$P(Y,U,8)
"RTN","PSJORUTL",47,0)
 Q
"RTN","PSJORUTL",48,0)
 ;
"RTN","PSJORUTL",49,0)
ENDCM(DDRG)        ; Find Drug Cost, Message, and VA Product Name IEN
"RTN","PSJORUTL",50,0)
 ;Input:  DDRG - IEN of entry in DRUG file (50).
"RTN","PSJORUTL",51,0)
 ;Output: PRICE PER DISPENSE UNIT(16)^MESSAGE (101)^NATIONAL DRUG FILE
"RTN","PSJORUTL",52,0)
 ;        ENTRY(20).PSNDF VA PRODUCT NAME ENTRY (22)^QTY DISPENSE MESSAGE
"RTN","PSJORUTL",53,0)
 ; If either NDF ptr is not found 0 will be returned instead of 20.22.
"RTN","PSJORUTL",54,0)
 ;
"RTN","PSJORUTL",55,0)
 N X S X=$G(^PSDRUG(+DDRG,"ND"))
"RTN","PSJORUTL",56,0)
 Q $P($G(^PSDRUG(+DDRG,660)),U,3)_U_$P($G(^(0)),U,10)_U_$S('+X:0,'$P(X,U,3):0,1:+X_"."_$P(X,U,3))_U_$P($G(^PSDRUG(+DDRG,5)),"^")
"RTN","PSJORUTL",57,0)
 ;
"RTN","PSJORUTL",58,0)
ENRFA(DDRG,TYP,PSJ)        ; Returns formulary alternatives for a dispense drug.
"RTN","PSJORUTL",59,0)
 ;Input:  DDRG - IEN of entry in DRUG file (50).
"RTN","PSJORUTL",60,0)
 ;         TYP - String identifying type of drug (O:OP; U:UD; I:IV etc).
"RTN","PSJORUTL",61,0)
 ;Output: ARRAY(INDEX#)=IEN of Formulary alternative^Formulary
"RTN","PSJORUTL",62,0)
 ;        alternative name^Formulary alternative cost^Orderable Item
"RTN","PSJORUTL",63,0)
 ;        IEN^Orderable Item name^MAX NUMBER REFILLS.
"RTN","PSJORUTL",64,0)
 ;If no alternatives are found PSJ=0; Else PSJ=# of entries.
"RTN","PSJORUTL",65,0)
 ;
"RTN","PSJORUTL",66,0)
 K PSJ S PSJ=0 Q:'$O(^PSDRUG(+DDRG,65,0))
"RTN","PSJORUTL",67,0)
 N MAX,DEA,DEAI,X,XX,Y,YY S YY=0
"RTN","PSJORUTL",68,0)
 F X=0:0 S X=$O(^PSDRUG(+DDRG,65,X)) Q:'X  S Y=$G(^PSDRUG(+DDRG,65,X,0)) I X D
"RTN","PSJORUTL",69,0)
 .F XX=1:1:$L(TYP) I $P($G(^PSDRUG(+Y,2)),U,3)[$E(TYP,XX) S YY=1 Q
"RTN","PSJORUTL",70,0)
 .D:YY
"RTN","PSJORUTL",71,0)
 ..S YY=+$G(^PSDRUG(+Y,2)),PSJ=PSJ+1,PSJ(+Y)=+Y_U_$$ENDDN^PSGMI(+Y)_U_$P($G(^PSDRUG(+Y,660)),U,6)_U_YY_U_$$OIDF^PSJLMUT1(YY) D MAX S PSJ(+Y)=PSJ(+Y)_U_MAX K MAX
"RTN","PSJORUTL",72,0)
 Q
"RTN","PSJORUTL",73,0)
 ;
"RTN","PSJORUTL",74,0)
ENDF(PN) ; Returns dosage form for the specified VA Product Name.
"RTN","PSJORUTL",75,0)
 ;Input:  PN - NATIONAL DRUG FILE ENTRY (20).PSNDF VA PRODUCT NAME ENTRY
"RTN","PSJORUTL",76,0)
 ;Output: NDF Dosage Form IEN^NDF Dosage From IEN
"RTN","PSJORUTL",77,0)
 ;
"RTN","PSJORUTL",78,0)
 ; NEW NDF CALL
"RTN","PSJORUTL",79,0)
 N X S X="PSNAPIS" X ^%ZOSF("TEST") I  N PSJDF,X1,X2 S X1=+$P(PN,"."),X2=+$P(PN,".",2),PSJDF=$$PSJDF^PSNAPIS(X1,X2) Q $S(PSJDF="":0,1:PSJDF)
"RTN","PSJORUTL",80,0)
 ;
"RTN","PSJORUTL",81,0)
 N PSJNDF,X S X=$P($G(^PSNDF(+$P(PN,"."),5,+$P(PN,".",2),0)),U,2),X=+$G(^PSNDF(+$P(PN,"."),2,+X,0)),PSJDF=$P($G(^PS(50.606,+X,0)),U)
"RTN","PSJORUTL",82,0)
 Q $S(PSJDF="":0,'X:0,1:+X_U_PSJDF)
"RTN","PSJORUTL",83,0)
 ;
"RTN","PSJORUTL",84,0)
ENNDFS(PN) ; Returns STRENGTH from ^PSNDF for the specified VA Product Name.
"RTN","PSJORUTL",85,0)
 ; NEW NDF CALL 
"RTN","PSJORUTL",86,0)
 N X S X="PSNAPIS" X ^%ZOSF("TEST") I  N X1,X2,PNS S X1=+$P(PN,"."),X2=+$P(PN,".",2),PNS=$$PSJST^PSNAPIS(X1,X2) Q $S(PNS="":0,1:PNS)
"RTN","PSJORUTL",87,0)
 ;
"RTN","PSJORUTL",88,0)
 N PNS,X,Y S X=$P($G(^PSNDF(+$P(PN,"."),5,+$P(PN,".",2),0)),U,3),Y=+$P($G(^PSNDF(+$P(PN,"."),5,+$P(PN,".",2),0)),"^",2),PNS=$P($G(^PSNDF(+$P(PN,"."),2,+Y,3,+X,0)),U)
"RTN","PSJORUTL",89,0)
 Q $S(PNS="":0,'X:0,1:+X_U_PNS)
"RTN","PSJORUTL",90,0)
 ;
"RTN","PSJORUTL",91,0)
ENDI(PN,PSJ) ; Find all ingredients for the passed dispense drug.
"RTN","PSJORUTL",92,0)
 ;Input:  PN - VA Product Name IEN
"RTN","PSJORUTL",93,0)
 ;Output: PSJ - Array listing ingredients for the specified PN in the
"RTN","PSJORUTL",94,0)
 ;              form of PSJ(Ing. file ptr (50.416))=Ing IEN^Ing. name
"RTN","PSJORUTL",95,0)
 ;              ^Ing. amt./Ing. units
"RTN","PSJORUTL",96,0)
 ;If no ing. found, PSJ=0. If ing. found, PSJ=1
"RTN","PSJORUTL",97,0)
 ;  NEW NDF CALL 
"RTN","PSJORUTL",98,0)
 N X S X="PSNAPIS" X ^%ZOSF("TEST") I  N X1,X2 S X1=+$P(PN,"."),X2=+$P(PN,".",2),PSJ=$$PSJING^PSNAPIS(X1,X2,.PSJ) Q
"RTN","PSJORUTL",99,0)
 ;
"RTN","PSJORUTL",100,0)
 N GDP,ING,INGND,INGNME,INGPTR,PNP,X,Y
"RTN","PSJORUTL",101,0)
 S PSJ=0,GDP=$P(PN,"."),PNP=$P(PN,".",2)
"RTN","PSJORUTL",102,0)
 F X=1:1:3 S INGND=$G(^PSNDF(+GDP,5,+PNP,X)) F Y=1:1:$L(INGND,",") D
"RTN","PSJORUTL",103,0)
 .S ING=$P(INGND,",",Y),INGNME=$P($G(^PSNDF(+GDP,1,+ING,0)),U),INGPTR=$S(INGNME="":"Not Found",1:$O(^PS(50.416,"B",INGNME,0)))
"RTN","PSJORUTL",104,0)
 .S PSJ=1,PSJ(+INGPTR)=INGPTR_U_INGNME_U_$P(ING,"/",2,3)
"RTN","PSJORUTL",105,0)
 Q
"RTN","PSJORUTL",106,0)
 ;
"RTN","PSJORUTL",107,0)
ENSDC(PSGP) ; Add IV and UD orders to ^TMP global used for order checking.
"RTN","PSJORUTL",108,0)
 ; Input: PSGP - Patient IEN
"RTN","PSJORUTL",109,0)
 ; Output: ^TMP($J("ORDERS",DRUG NAME)=DRUG CLASS CODE^NDF POINTER*
"RTN","PSJORUTL",110,0)
 ;
"RTN","PSJORUTL",111,0)
MAX ;returns max number of refills for outpatient orders ;5.27.97/SAB
"RTN","PSJORUTL",112,0)
 K MAX S DEA=$P($G(^PSDRUG(DDRG,0)),"^",3)
"RTN","PSJORUTL",113,0)
 I $P($G(^PSDRUG(DDRG,"CLOZ1")),"^")="PSOCLO1",$G(DFN) D  Q
"RTN","PSJORUTL",114,0)
 .S CLOZPAT=$O(^YSCL(603.01,"C",DFN,0)) S MAX=$S($P($G(^YSCL(603.01,+CLOZPAT,0)),"^",3)="B":1,1:0) K CLOZPAT
"RTN","PSJORUTL",115,0)
 I DEA["A",DEA'["B" S MAX=0 K DEA Q
"RTN","PSJORUTL",116,0)
 F DEAI=1:1:$L(DEA) I $E(+DEA,DEAI)>1,$E(+DEA,DEAI)<6 S MAX=5
"RTN","PSJORUTL",117,0)
 K DEA,DEAI Q:$G(MAX)=5  S MAX=11
"RTN","PSJORUTL",118,0)
 Q
"VER")
8.0^22.2
**END**
**END**
