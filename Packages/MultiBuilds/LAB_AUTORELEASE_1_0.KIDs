KIDS Distribution saved on Jun 28, 2016@09:38:27
LAB AUTO-RELEASE 1.0
**KIDS**:LA*5.2*88^LR*5.2*458^

**INSTALL NAME**
LA*5.2*88
"BLD",9773,0)
LA*5.2*88^AUTOMATED LAB INSTRUMENTS^0^3160628^y
"BLD",9773,1,0)
^^209^209^3160628^
"BLD",9773,1,1,0)
Associated Patches:  (v)LA*5.2*80 <<= must be installed BEFORE `LA*5.2*88'
"BLD",9773,1,2,0)
                     (v)LA*5.2*84 <<= must be installed BEFORE `LA*5.2*88'
"BLD",9773,1,3,0)
                     (v)LA*5.2*85 <<= must be installed BEFORE `LA*5.2*88'
"BLD",9773,1,4,0)
 
"BLD",9773,1,5,0)
Subject:  AUTOVERIFICATION
"BLD",9773,1,6,0)
 
"BLD",9773,1,7,0)
Category:  ROUTINE
"BLD",9773,1,8,0)
           ENHANCEMENT
"BLD",9773,1,9,0)
           DATA DICTIONARY
"BLD",9773,1,10,0)
 
"BLD",9773,1,11,0)
Description:
"BLD",9773,1,12,0)
===========
"BLD",9773,1,13,0)
The build for this patch is distributed as part of a multi-package build 
"BLD",9773,1,14,0)
that contains LR*5.2*458 and LA*5.2*88.  This contains functionality to 
"BLD",9773,1,15,0)
enable Auto Verification and Auto Release of lab normal lab results and 
"BLD",9773,1,16,0)
was initially developed at the Kansas City VAMC.  This new process 
"BLD",9773,1,17,0)
involves automatic review and release of test results based on a 
"BLD",9773,1,18,0)
lab-established set of boundaries, also referred as rules, rule sets, and 
"BLD",9773,1,19,0)
algorithms.  Lab results that are in a "normal" range, as pre-determined 
"BLD",9773,1,20,0)
by the laboratory, will transmit directly from the middleware to VistA 
"BLD",9773,1,21,0)
lab files and on to Computerized Patient Record System (CPRS) without the 
"BLD",9773,1,22,0)
intermediate step of requiring a lab technologist to manually review and 
"BLD",9773,1,23,0)
sign off on these normal lab results.  This process will eliminate the 
"BLD",9773,1,24,0)
need for a qualified technologist to manually approve all "normal" 
"BLD",9773,1,25,0)
results before those results are filed in VistA Lab files and available 
"BLD",9773,1,26,0)
for clinicians to view in CPRS. 
"BLD",9773,1,27,0)
 
"BLD",9773,1,28,0)
Each VAMC site will determine which instruments will use this 
"BLD",9773,1,29,0)
functionality as it can set up on an instrument by instrument basis.  
"BLD",9773,1,30,0)
Essentially VistA Lab instruments are set up as either being available 
"BLD",9773,1,31,0)
for auto verification or not available for auto verification.  If an 
"BLD",9773,1,32,0)
instrument is set up for auto verification, then a lab result passing the 
"BLD",9773,1,33,0)
rule set will be filed by the middleware in VistA lab files and available 
"BLD",9773,1,34,0)
in CPRS and a lab result that cannot pass the rule set will be held in 
"BLD",9773,1,35,0)
the middleware system for review by a lab technologist. 
"BLD",9773,1,36,0)
 
"BLD",9773,1,37,0)
In support of this auto verification and auto release functionality, this 
"BLD",9773,1,38,0)
patch will add two new application proxy users.  LRLAB AUTO RELEASE is 
"BLD",9773,1,39,0)
used to indicate that the results in VistA Lab were released by an 
"BLD",9773,1,40,0)
automated Lab process without human interventions.  LRLAB, AUTO VERIFY is 
"BLD",9773,1,41,0)
used to indicate that the results were "approved" by an automated process 
"BLD",9773,1,42,0)
using a rules based system.
"BLD",9773,1,43,0)
 
"BLD",9773,1,44,0)
 
"BLD",9773,1,45,0)
Patch Components
"BLD",9773,1,46,0)
================
"BLD",9773,1,47,0)
 
"BLD",9773,1,48,0)
Files & Fields Associated:
"BLD",9773,1,49,0)
 
"BLD",9773,1,50,0)
File Name (Number)       Field Name (Number)     New/Modified/Deleted
"BLD",9773,1,51,0)
------------------       -------------------     --------------------
"BLD",9773,1,52,0)
AUTO INSTRUMENT (#62.4)  AUTO RELEASE (#99)      New
"BLD",9773,1,53,0)
 
"BLD",9773,1,54,0)
LA7 MESSAGE LOG BULLETINS (#62.485)
"BLD",9773,1,55,0)
 
"BLD",9773,1,56,0)
Parameter Definitions Associated:
"BLD",9773,1,57,0)
 
"BLD",9773,1,58,0)
Parameter Definition Name             New/Modified/Deleted
"BLD",9773,1,59,0)
-------------------------             --------------------
"BLD",9773,1,60,0)
LA UI AUTO RELEASE MASTER             New
"BLD",9773,1,61,0)
LA UI PROVIDER CONTACT INFO           New 
"BLD",9773,1,62,0)
 
"BLD",9773,1,63,0)
 
"BLD",9773,1,64,0)
The following are new entries new entry in the file LA7 MESSAGE LOG 
"BLD",9773,1,65,0)
BULLETINS (#62.485):
"BLD",9773,1,66,0)
 
"BLD",9773,1,67,0)
CODE: 301
"BLD",9773,1,68,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] does not own the LRVERIFY security 
"BLD",9773,1,69,0)
key. Auto Release not allowed for accession UID |4|.
"BLD",9773,1,70,0)
SEND ALERT: YES
"BLD",9773,1,71,0)
   
"BLD",9773,1,72,0)
CODE: 302
"BLD",9773,1,73,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] is not an active user on the system. 
"BLD",9773,1,74,0)
Auto Release not allowed for accession UID |4|.
"BLD",9773,1,75,0)
SEND ALERT: YES                      
"BLD",9773,1,76,0)
 
"BLD",9773,1,77,0)
CODE: 303
"BLD",9773,1,78,0)
TEXT: Msg #|1|, No verifying user or application proxy found. Auto 
"BLD",9773,1,79,0)
Release not allowed for accession UID |2|.
"BLD",9773,1,80,0)
SEND ALERT: YES                      
"BLD",9773,1,81,0)
   
"BLD",9773,1,82,0)
CODE: 304
"BLD",9773,1,83,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] is not a valid user to verify 
"BLD",9773,1,84,0)
results. Auto Release not allowed for accession UID |4|.
"BLD",9773,1,85,0)
SEND ALERT: YES                        
"BLD",9773,1,86,0)
 
"BLD",9773,1,87,0)
CODE: 305
"BLD",9773,1,88,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] is not allowed to verify. Only auto 
"BLD",9773,1,89,0)
verification enabled for this instrument. Auto Release not allowed for 
"BLD",9773,1,90,0)
accession UID |4|.
"BLD",9773,1,91,0)
SEND ALERT: YES                        
"BLD",9773,1,92,0)
 
"BLD",9773,1,93,0)
CODE: 306
"BLD",9773,1,94,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] is not allowed to verify. Only tech 
"BLD",9773,1,95,0)
verification enabled for this instrument.  Auto Release not allowed for 
"BLD",9773,1,96,0)
accession UID |4|.
"BLD",9773,1,97,0)
SEND ALERT: YES                        
"BLD",9773,1,98,0)
 
"BLD",9773,1,99,0)
CODE: 307
"BLD",9773,1,100,0)
  TEXT: Msg #|1|, Auto Release not allowed for accession UID |2|. Results 
"BLD",9773,1,101,0)
have previously been released.                
"BLD",9773,1,102,0)
SEND ALERT: YES
"BLD",9773,1,103,0)
 
"BLD",9773,1,104,0)
New Service Requests (NSRs):
"BLD",9773,1,105,0)
==============================
"BLD",9773,1,106,0)
NSR# 20131009: Employ laboratory autoverification in the Veterans Health 
"BLD",9773,1,107,0)
Administration. 
"BLD",9773,1,108,0)
 
"BLD",9773,1,109,0)
Test Sites:
"BLD",9773,1,110,0)
===========
"BLD",9773,1,111,0)
Kansas City VAMC (Alpha)
"BLD",9773,1,112,0)
Tucson (Beta)
"BLD",9773,1,113,0)
Tampa (Beta)
"BLD",9773,1,114,0)
Iowa City (Beta)
"BLD",9773,1,115,0)
Fresno (Beta)
"BLD",9773,1,116,0)
 
"BLD",9773,1,117,0)
 
"BLD",9773,1,118,0)
Software and Documentation Retrieval Information
"BLD",9773,1,119,0)
 ==============================
"BLD",9773,1,120,0)
VistA Laboratory patch LR*5.2*458 software is distributed by Host File, 
"BLD",9773,1,121,0)
along with LA*5.2*88.  Software is available on the ANONYMOUS.SOFTWARE 
"BLD",9773,1,122,0)
directory at one of the following Office of Information (OI) Field 
"BLD",9773,1,123,0)
Offices.  The preferred is to retrieve the file using Secure File Transfer
"BLD",9773,1,124,0)
Protocol (SFTP) from download.domain.ext, which transmits files from
"BLD",9773,1,125,0)
the first available FTP server. Sites may also select to retrieve
"BLD",9773,1,126,0)
documentation directly from a specific server as follows: 
"BLD",9773,1,127,0)
        Albany                     ftp.fo-albany.domain.ext
"BLD",9773,1,128,0)
        Hines                      ftp.fo-hines.domain.ext
"BLD",9773,1,129,0)
        Salt Lake City             ftp.fo-slc.med.domain.ext
"BLD",9773,1,130,0)
                                   
"BLD",9773,1,131,0)
File Name                   Contents               Retrieval Format
"BLD",9773,1,132,0)
------------------          --------------------   ----------------
"BLD",9773,1,133,0)
LAB_AUTORELEASE_1_0.KID     Host File containing       ASCII
"BLD",9773,1,134,0)
                            KIDS software distribution
"BLD",9773,1,135,0)
 
"BLD",9773,1,136,0)
The VistA Documentation Library (VDL) web site will also contain 
"BLD",9773,1,137,0)
 
"BLD",9773,1,138,0)
LR_52_458_LA_52_88 Release Notes                       Binary
"BLD",9773,1,139,0)
 for LR*5.2*458 and LA*5.2*88
"BLD",9773,1,140,0)
 
"BLD",9773,1,141,0)
Lab AutoRelease 1.0 User Guide                         Binary
"BLD",9773,1,142,0)
 
"BLD",9773,1,143,0)
Lab AutoRelease 1.0 Technical Manual                   Binary
"BLD",9773,1,144,0)
 
"BLD",9773,1,145,0)
Lab UI HL V1.6 Upgrade Installation                    Binary
"BLD",9773,1,146,0)
 and User Guide
"BLD",9773,1,147,0)
 
"BLD",9773,1,148,0)
Lab UI HL V1.6 Upgrade Interface                       Binary
"BLD",9773,1,149,0)
 Specifications Document 
"BLD",9773,1,150,0)
 
"BLD",9773,1,151,0)
This website is usually updated within 1-3 days of the patch release date.
"BLD",9773,1,152,0)
The VDL web address for Laboratory Universal Interface user documentation
"BLD",9773,1,153,0)
is: http://www.va.gov/vdl/application.asp?appid=120
"BLD",9773,1,154,0)
 
"BLD",9773,1,155,0)
Installation Instructions
"BLD",9773,1,156,0)
=========================
"BLD",9773,1,157,0)
This patch, LA*5.2*88, is part of a combined build for Laboratory 
"BLD",9773,1,158,0)
Autoverification.  
"BLD",9773,1,159,0)
 
"BLD",9773,1,160,0)
Please refer to patch LR*5.2*458 for installation instructions.
"BLD",9773,1,161,0)
 
"BLD",9773,1,162,0)
Routine Information:
"BLD",9773,1,163,0)
====================
"BLD",9773,1,164,0)
 
"BLD",9773,1,165,0)
 
"BLD",9773,1,166,0)
The second line of each of these routines now looks like:
"BLD",9773,1,167,0)
;;5.2;AUTOMATED LAB INSTRUMENTS;**[Patch List]**;Sep 27, 1994;Build 10
"BLD",9773,1,168,0)
 
"BLD",9773,1,169,0)
The checksums below are new checksums, and
"BLD",9773,1,170,0)
 can be checked with CHECK1^XTSUMBLD.
"BLD",9773,1,171,0)
 
"BLD",9773,1,172,0)
Routine Name: LA7UCFG
"BLD",9773,1,173,0)
    Before:  B4239468   After: B137316017 **66,88**
"BLD",9773,1,174,0)
Routine Name: LA7UCFG1
"BLD",9773,1,175,0)
    Before:       n/a   After: B29526912  **88**
"BLD",9773,1,176,0)
Routine Name: LA7UIO1
"BLD",9773,1,177,0)
    Before: B66837499   After: B75417661  **66,74,88**
"BLD",9773,1,178,0)
Routine Name: LA7UTILB
"BLD",9773,1,179,0)
    Before: B12063183   After: B23365722  **74,88**
"BLD",9773,1,180,0)
Routine Name: LA7VHL
"BLD",9773,1,181,0)
    Before: B32679919   After: B38289473  **27,46,62,64,67,74,88**
"BLD",9773,1,182,0)
Routine Name: LA7VHLU8
"BLD",9773,1,183,0)
    Before: B10483894   After: 60447079   **74,88**
"BLD",9773,1,184,0)
Routine Name: LA7VHLU9
"BLD",9773,1,185,0)
    Before: B19044226   After: B33364706  **68,74,88**
"BLD",9773,1,186,0)
Routine Name: LA7VIN
"BLD",9773,1,187,0)
    Before: B29668237   After: B31997123  **46,67,74,88**
"BLD",9773,1,188,0)
Routine Name: LA7VIN1
"BLD",9773,1,189,0)
    Before: B53484134   After: B65233143  **46,64,74,88**
"BLD",9773,1,190,0)
Routine Name: LA7VIN2
"BLD",9773,1,191,0)
    Before: B44814406   After: B46992282  **46,64,74,88**
"BLD",9773,1,192,0)
Routine Name: LA7VIN2A
"BLD",9773,1,193,0)
    Before: B32994528   After: B34119950  **74,88**
"BLD",9773,1,194,0)
Routine Name: LA7VIN4
"BLD",9773,1,195,0)
    Before: B77376354   After: B81803911  **46,64,67,66,74,85,88**
"BLD",9773,1,196,0)
Routine Name: LA7VIN4A
"BLD",9773,1,197,0)
    Before: B19473776   After: B23154184  **74,80,88**
"BLD",9773,1,198,0)
Routine Name: LA7VIN5
"BLD",9773,1,199,0)
    Before: B69080940   After: B85555425  **46,64,68,74,84,88**
"BLD",9773,1,200,0)
Routine Name: LA7VIN5A
"BLD",9773,1,201,0)
    Before: B32697215   After: B34608326  **46,64,67,72,66,74,88**
"BLD",9773,1,202,0)
Routine Name: LA7VORC
"BLD",9773,1,203,0)
    Before: B18625097   After: B22779822  **46,64,68,88**
"BLD",9773,1,204,0)
Routine Name: LA88
"BLD",9773,1,205,0)
    Before:       n/a   After: B37005513  **88** DELETED AFTER INSTALL
"BLD",9773,1,206,0)
Routine Name: LA88A
"BLD",9773,1,207,0)
    Before:       n/a   After: B100793409 **88** DELETED AFTER INSTALL
"BLD",9773,1,208,0)
 
"BLD",9773,1,209,0)
Routine list of preceding patches: 80, 84, 85
"BLD",9773,4,0)
^9.64PA^62.485^2
"BLD",9773,4,62.4,0)
62.4
"BLD",9773,4,62.4,2,0)
^9.641^62.4^1
"BLD",9773,4,62.4,2,62.4,0)
AUTO INSTRUMENT  (File-top level)
"BLD",9773,4,62.4,2,62.4,1,0)
^9.6411^99^1
"BLD",9773,4,62.4,2,62.4,1,99,0)
AUTO RELEASE
"BLD",9773,4,62.4,222)
y^n^p^^^^n^^n
"BLD",9773,4,62.4,224)

"BLD",9773,4,62.485,0)
62.485
"BLD",9773,4,62.485,222)
n^n^f^^n^^y^o^n
"BLD",9773,4,62.485,224)
I Y>299,Y<400
"BLD",9773,4,"APDD",62.4,62.4)

"BLD",9773,4,"APDD",62.4,62.4,99)

"BLD",9773,4,"B",62.4,62.4)

"BLD",9773,4,"B",62.485,62.485)

"BLD",9773,6.3)
10
"BLD",9773,"ABPKG")
n
"BLD",9773,"INI")

"BLD",9773,"INID")
y^y^
"BLD",9773,"INIT")
POST^LA88
"BLD",9773,"KRN",0)
^9.67PA^779.2^20
"BLD",9773,"KRN",.4,0)
.4
"BLD",9773,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9773,"KRN",.401,0)
.401
"BLD",9773,"KRN",.401,"NM",0)
^9.68A^^
"BLD",9773,"KRN",.402,0)
.402
"BLD",9773,"KRN",.403,0)
.403
"BLD",9773,"KRN",.5,0)
.5
"BLD",9773,"KRN",.84,0)
.84
"BLD",9773,"KRN",3.6,0)
3.6
"BLD",9773,"KRN",3.8,0)
3.8
"BLD",9773,"KRN",9.2,0)
9.2
"BLD",9773,"KRN",9.8,0)
9.8
"BLD",9773,"KRN",9.8,"NM",0)
^9.68A^18^16
"BLD",9773,"KRN",9.8,"NM",1,0)
LA7VIN^^0^B31997123
"BLD",9773,"KRN",9.8,"NM",2,0)
LA7VIN4A^^0^B23154184
"BLD",9773,"KRN",9.8,"NM",3,0)
LA7VIN5^^0^B85555425
"BLD",9773,"KRN",9.8,"NM",4,0)
LA7UIO1^^0^B75417661
"BLD",9773,"KRN",9.8,"NM",5,0)
LA7VORC^^0^B22779822
"BLD",9773,"KRN",9.8,"NM",6,0)
LA7VHLU9^^0^B33364706
"BLD",9773,"KRN",9.8,"NM",7,0)
LA7VIN1^^0^B65233143
"BLD",9773,"KRN",9.8,"NM",8,0)
LA7UCFG^^0^B137316017
"BLD",9773,"KRN",9.8,"NM",11,0)
LA7VIN4^^0^B81803911
"BLD",9773,"KRN",9.8,"NM",12,0)
LA7VIN2^^0^B46992282
"BLD",9773,"KRN",9.8,"NM",13,0)
LA7VHL^^0^B38289473
"BLD",9773,"KRN",9.8,"NM",14,0)
LA7VIN5A^^0^B34608326
"BLD",9773,"KRN",9.8,"NM",15,0)
LA7VIN2A^^0^B34119950
"BLD",9773,"KRN",9.8,"NM",16,0)
LA7UTILB^^0^B23365722
"BLD",9773,"KRN",9.8,"NM",17,0)
LA7VHLU8^^0^B60447079
"BLD",9773,"KRN",9.8,"NM",18,0)
LA7UCFG1^^0^B29526912
"BLD",9773,"KRN",9.8,"NM","B","LA7UCFG",8)

"BLD",9773,"KRN",9.8,"NM","B","LA7UCFG1",18)

"BLD",9773,"KRN",9.8,"NM","B","LA7UIO1",4)

"BLD",9773,"KRN",9.8,"NM","B","LA7UTILB",16)

"BLD",9773,"KRN",9.8,"NM","B","LA7VHL",13)

"BLD",9773,"KRN",9.8,"NM","B","LA7VHLU8",17)

"BLD",9773,"KRN",9.8,"NM","B","LA7VHLU9",6)

"BLD",9773,"KRN",9.8,"NM","B","LA7VIN",1)

"BLD",9773,"KRN",9.8,"NM","B","LA7VIN1",7)

"BLD",9773,"KRN",9.8,"NM","B","LA7VIN2",12)

"BLD",9773,"KRN",9.8,"NM","B","LA7VIN2A",15)

"BLD",9773,"KRN",9.8,"NM","B","LA7VIN4",11)

"BLD",9773,"KRN",9.8,"NM","B","LA7VIN4A",2)

"BLD",9773,"KRN",9.8,"NM","B","LA7VIN5",3)

"BLD",9773,"KRN",9.8,"NM","B","LA7VIN5A",14)

"BLD",9773,"KRN",9.8,"NM","B","LA7VORC",5)

"BLD",9773,"KRN",19,0)
19
"BLD",9773,"KRN",19,"NM",0)
^9.68A^^
"BLD",9773,"KRN",19.1,0)
19.1
"BLD",9773,"KRN",101,0)
101
"BLD",9773,"KRN",409.61,0)
409.61
"BLD",9773,"KRN",771,0)
771
"BLD",9773,"KRN",779.2,0)
779.2
"BLD",9773,"KRN",870,0)
870
"BLD",9773,"KRN",8989.51,0)
8989.51
"BLD",9773,"KRN",8989.51,"NM",0)
^9.68A^2^2
"BLD",9773,"KRN",8989.51,"NM",1,0)
LA UI AUTO RELEASE MASTER^^0
"BLD",9773,"KRN",8989.51,"NM",2,0)
LA UI PROVIDER CONTACT INFO^^0
"BLD",9773,"KRN",8989.51,"NM","B","LA UI AUTO RELEASE MASTER",1)

"BLD",9773,"KRN",8989.51,"NM","B","LA UI PROVIDER CONTACT INFO",2)

"BLD",9773,"KRN",8989.52,0)
8989.52
"BLD",9773,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",9773,"KRN",8994,0)
8994
"BLD",9773,"KRN","B",.4,.4)

"BLD",9773,"KRN","B",.401,.401)

"BLD",9773,"KRN","B",.402,.402)

"BLD",9773,"KRN","B",.403,.403)

"BLD",9773,"KRN","B",.5,.5)

"BLD",9773,"KRN","B",.84,.84)

"BLD",9773,"KRN","B",3.6,3.6)

"BLD",9773,"KRN","B",3.8,3.8)

"BLD",9773,"KRN","B",9.2,9.2)

"BLD",9773,"KRN","B",9.8,9.8)

"BLD",9773,"KRN","B",19,19)

"BLD",9773,"KRN","B",19.1,19.1)

"BLD",9773,"KRN","B",101,101)

"BLD",9773,"KRN","B",409.61,409.61)

"BLD",9773,"KRN","B",771,771)

"BLD",9773,"KRN","B",779.2,779.2)

"BLD",9773,"KRN","B",870,870)

"BLD",9773,"KRN","B",8989.51,8989.51)

"BLD",9773,"KRN","B",8989.52,8989.52)

"BLD",9773,"KRN","B",8994,8994)

"BLD",9773,"PRE")
LA88A
"BLD",9773,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9773,"QUES",0)
^9.62^^0
"BLD",9773,"REQB",0)
^9.611^3^3
"BLD",9773,"REQB",1,0)
LA*5.2*80^2
"BLD",9773,"REQB",2,0)
LA*5.2*84^2
"BLD",9773,"REQB",3,0)
LA*5.2*85^2
"BLD",9773,"REQB","B","LA*5.2*80",1)

"BLD",9773,"REQB","B","LA*5.2*84",2)

"BLD",9773,"REQB","B","LA*5.2*85",3)

"DATA",62.485,301,0)
301^Msg #|1|, User |2| [DUZ: |3|] does not own the LRVERIFY security key. Auto Release not allowed for accession UID |4|.^1
"DATA",62.485,301,1)
S LA7TXT(1)=$G(LA76249,"??"),LA7TXT(2)=$$NAME^XUSER($G(LRDUZ)),LA7TXT(3)=$G(LRDUZ),LA7TXT(4)=$G(LRUID)
"DATA",62.485,302,0)
302^Msg #|1|, User |2| [DUZ: |3|] is not an active user on the system. Auto Release not allowed for accession UID |4|.^1
"DATA",62.485,302,1)
S LA7TXT(1)=$G(LA76249,"??"),LA7TXT(2)=$$NAME^XUSER($G(LRDUZ)),LA7TXT(3)=$G(LRDUZ),LA7TXT(4)=$G(LRUID)
"DATA",62.485,303,0)
303^Msg #|1|, No verifying user or application proxy found. Auto Release not allowed for accession UID |2|.^1
"DATA",62.485,303,1)
S LA7TXT(1)=$G(LA76249,"??"),LA7TXT(2)=$G(LRUID)
"DATA",62.485,304,0)
304^Msg #|1|, User |2| [DUZ: |3|] is not a valid user to verify results. Auto Release not allowed for accession UID |4|.^1
"DATA",62.485,304,1)
S LA7TXT(1)=$G(LA76249,"??"),LA7TXT(2)=$$NAME^XUSER($G(LRDUZ)),LA7TXT(3)=$G(LRDUZ),LA7TXT(4)=$G(LRUID)
"DATA",62.485,305,0)
305^Msg #|1|, User |2| [DUZ: |3|] is not allowed to verify. Only auto verification enabled for this instrument. Auto Release not allowed for accession UID |4|.^1
"DATA",62.485,305,1)
S LA7TXT(1)=$G(LA76249,"??"),LA7TXT(2)=$$NAME^XUSER($G(LRDUZ)),LA7TXT(3)=$G(LRDUZ),LA7TXT(4)=$G(LRUID)
"DATA",62.485,306,0)
306^Msg #|1|, User |2| [DUZ: |3|] is not allowed to verify. Only tech verification enabled for this instrument. Auto Release not allowed for accession UID |4|.^1
"DATA",62.485,306,1)
S LA7TXT(1)=$G(LA76249,"??"),LA7TXT(2)=$$NAME^XUSER($G(LRDUZ)),LA7TXT(3)=$G(LRDUZ),LA7TXT(4)=$G(LRUID)
"DATA",62.485,307,0)
307^Msg #|1|, Auto Release not allowed for accession UID |2|. Results have previously been released.^1
"DATA",62.485,307,1)
S LA7TXT(1)=$G(LA76249,"??"),LA7TXT(2)=$G(LRUID)
"FIA",62.4)
AUTO INSTRUMENT
"FIA",62.4,0)
^LAB(62.4,
"FIA",62.4,0,0)
62.4
"FIA",62.4,0,1)
y^n^p^^^^n^^n
"FIA",62.4,0,10)

"FIA",62.4,0,11)

"FIA",62.4,0,"RLRO")

"FIA",62.4,0,"VR")
5.2^LA
"FIA",62.4,62.4)
1
"FIA",62.4,62.4,99)

"FIA",62.485)
LA7 MESSAGE LOG BULLETINS
"FIA",62.485,0)
^LAHM(62.485,
"FIA",62.485,0,0)
62.485
"FIA",62.485,0,1)
n^n^f^^n^^y^o^n
"FIA",62.485,0,10)

"FIA",62.485,0,11)
I Y>299,Y<400
"FIA",62.485,0,"RLRO")

"FIA",62.485,0,"VR")
5.2^LA
"FIA",62.485,62.485)
0
"INIT")
POST^LA88
"KRN",8989.5,1481,0)
11;DIC(9.4,^LA UI PROVIDER CONTACT INFO^1
"KRN",8989.5,1481,1)
2
"KRN",8989.5,1482,0)
11;DIC(9.4,^LA UI PROVIDER CONTACT INFO^2
"KRN",8989.5,1482,1)
8
"KRN",8989.5,1483,0)
11;DIC(9.4,^LA UI PROVIDER CONTACT INFO^3
"KRN",8989.5,1483,1)
7
"KRN",8989.5,1484,0)
11;DIC(9.4,^LA UI PROVIDER CONTACT INFO^4
"KRN",8989.5,1484,1)
3
"KRN",8989.5,1485,0)
11;DIC(9.4,^LA UI PROVIDER CONTACT INFO^5
"KRN",8989.5,1485,1)
4
"KRN",8989.5,1486,0)
11;DIC(9.4,^LA UI PROVIDER CONTACT INFO^6
"KRN",8989.5,1486,1)
1
"KRN",8989.5,1487,0)
11;DIC(9.4,^LA UI AUTO RELEASE MASTER^1
"KRN",8989.5,1487,1)
0
"KRN",8989.5,1490,0)
11;DIC(9.4,^LA UI PROVIDER CONTACT INFO^7
"KRN",8989.5,1490,1)
6
"KRN",8989.5,1491,0)
11;DIC(9.4,^LA UI PROVIDER CONTACT INFO^8
"KRN",8989.5,1491,1)
5
"KRN",8989.51,794,-1)
0^1
"KRN",8989.51,794,0)
LA UI AUTO RELEASE MASTER^Auto Release Results System Wide^0^^AUTO RELEASE RESULTS SYSTEM WIDE
"KRN",8989.51,794,1)
S^0:NO (DISABLED);1:YES (ENABLED)^Do you want to Auto Release Results System Wide?
"KRN",8989.51,794,6)
^^
"KRN",8989.51,794,20,0)
^8989.512^2^2^3150529^^^^
"KRN",8989.51,794,20,1,0)
This parameter is used to determine whether lab results are sent to the
"KRN",8989.51,794,20,2,0)
auto release process.
"KRN",8989.51,794,30,0)
^8989.513I^2^2
"KRN",8989.51,794,30,1,0)
1^4.2
"KRN",8989.51,794,30,2,0)
10^9.4
"KRN",8989.51,795,-1)
0^2
"KRN",8989.51,795,0)
LA UI PROVIDER CONTACT INFO^Lab Ordering Provider Contact Info^1^Sequence^Type of Phone Contact
"KRN",8989.51,795,1)
S^1:PHONE (HOME);2:OFFICE PHONE;3:PHONE #3;4:PHONE #4;5:COMMERICAL;6:FAX;7:VOICE PAGER;8:DIGITAL PAGER^Specify which method to use to contact the ordering provider.
"KRN",8989.51,795,3)

"KRN",8989.51,795,6)
N^1:8:0^Enter the sequence for the contact info.
"KRN",8989.51,795,20,0)
^^58^58^3150925^
"KRN",8989.51,795,20,1,0)
Contains the list of which contact info for the ordering provider to send 
"KRN",8989.51,795,20,2,0)
in a Lab HL7 Order message from the user's corresponding entry in NEW 
"KRN",8989.51,795,20,3,0)
PERSON file (#200).
"KRN",8989.51,795,20,4,0)
 
"KRN",8989.51,795,20,5,0)
It can be specified at the system or the individual user level. If
"KRN",8989.51,795,20,6,0)
specified at the user level it takes precedence and overrides the setting
"KRN",8989.51,795,20,7,0)
at the system level allowing specific users to have their own specific set
"KRN",8989.51,795,20,8,0)
of contacts to send.
"KRN",8989.51,795,20,9,0)
 
"KRN",8989.51,795,20,10,0)
The sequence specifies the order and info to check, maximum of 6 allowed.
"KRN",8989.51,795,20,11,0)
Only the first 2 with a value will be placed in the message as the HL7
"KRN",8989.51,795,20,12,0)
standard constrains the number of repetitions for this information at 2.
"KRN",8989.51,795,20,13,0)
 
"KRN",8989.51,795,20,14,0)
The value specifies which field from the person's entry in NEW PERSON 
"KRN",8989.51,795,20,15,0)
file (#200) to send in the message.
"KRN",8989.51,795,20,16,0)
 
"KRN",8989.51,795,20,17,0)
These are the fields currently available.
"KRN",8989.51,795,20,18,0)
 
"KRN",8989.51,795,20,19,0)
Field #   Field Name       Description
"KRN",8989.51,795,20,20,0)
 
"KRN",8989.51,795,20,21,0)
.131      PHONE (HOME)     This is the telephone number for the new
"KRN",8989.51,795,20,22,0)
                           person.
"KRN",8989.51,795,20,23,0)
 
"KRN",8989.51,795,20,24,0)
.132      OFFICE PHONE     This is the business/office telephone for the
"KRN",8989.51,795,20,25,0)
                           new person.
"KRN",8989.51,795,20,26,0)
 
"KRN",8989.51,795,20,27,0)
.133      PHONE #3         This is an alternate telephone number where the
"KRN",8989.51,795,20,28,0)
                           new person might also be reached.  
"KRN",8989.51,795,20,29,0)
 
"KRN",8989.51,795,20,30,0)
.134      PHONE #4         This is another alternate telephone number
"KRN",8989.51,795,20,31,0)
                           where the new person might also be reached.
"KRN",8989.51,795,20,32,0)
 
"KRN",8989.51,795,20,33,0)
.135     COMMERCIAL PHONE  This is a commercial phone number.
"KRN",8989.51,795,20,34,0)
 
"KRN",8989.51,795,20,35,0)
.136     FAX NUMBER        This field holds a phone number for a FAX 
"KRN",8989.51,795,20,36,0)
                           machine for this user. It needs to be a format
"KRN",8989.51,795,20,37,0)
                           that can be understood by a sending MODEM.
"KRN",8989.51,795,20,38,0)
 
"KRN",8989.51,795,20,39,0)
.137      VOICE PAGER      This field holds a phone number for an ANALOG
"KRN",8989.51,795,20,40,0)
                           PAGER that this person carries with them.
"KRN",8989.51,795,20,41,0)
 
"KRN",8989.51,795,20,42,0)
.138      DIGITAL PAGER    This field holds a phone number for a DIGITAL
"KRN",8989.51,795,20,43,0)
                           PAGER that this person carries with them.
"KRN",8989.51,795,20,44,0)
 
"KRN",8989.51,795,20,45,0)
 
"KRN",8989.51,795,20,46,0)
The parameter is distributed pre-configured at the package level as 
"KRN",8989.51,795,20,47,0)
follows:
"KRN",8989.51,795,20,48,0)
 
"KRN",8989.51,795,20,49,0)
 Sequence  Value
"KRN",8989.51,795,20,50,0)
 --------  -----
"KRN",8989.51,795,20,51,0)
 1         OFFICE PHONE
"KRN",8989.51,795,20,52,0)
 2         DIGITAL PAGER
"KRN",8989.51,795,20,53,0)
 3         VOICE PAGER
"KRN",8989.51,795,20,54,0)
 4         PHONE #3
"KRN",8989.51,795,20,55,0)
 5         PHONE #4
"KRN",8989.51,795,20,56,0)
 6         PHONE (HOME)
"KRN",8989.51,795,20,57,0)
 7         COMMERICAL PHONE
"KRN",8989.51,795,20,58,0)
 8         FAX NUMBER
"KRN",8989.51,795,30,0)
^8989.513I^4^3
"KRN",8989.51,795,30,1,0)
1^200
"KRN",8989.51,795,30,3,0)
2^4.2
"KRN",8989.51,795,30,4,0)
3^9.4
"MBREQ")
0
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",11,-1)
1^1
"PKG",11,0)
AUTOMATED LAB INSTRUMENTS^LA^Lab Auto-Instrument Package
"PKG",11,20,0)
^9.402P^^
"PKG",11,22,0)
^9.49I^1^1
"PKG",11,22,1,0)
5.2^2940927^2960605
"PKG",11,22,1,"PAH",1,0)
88^3160628
"PKG",11,22,1,"PAH",1,1,0)
^^209^209^3160628
"PKG",11,22,1,"PAH",1,1,1,0)
Associated Patches:  (v)LA*5.2*80 <<= must be installed BEFORE `LA*5.2*88'
"PKG",11,22,1,"PAH",1,1,2,0)
                     (v)LA*5.2*84 <<= must be installed BEFORE `LA*5.2*88'
"PKG",11,22,1,"PAH",1,1,3,0)
                     (v)LA*5.2*85 <<= must be installed BEFORE `LA*5.2*88'
"PKG",11,22,1,"PAH",1,1,4,0)
 
"PKG",11,22,1,"PAH",1,1,5,0)
Subject:  AUTOVERIFICATION
"PKG",11,22,1,"PAH",1,1,6,0)
 
"PKG",11,22,1,"PAH",1,1,7,0)
Category:  ROUTINE
"PKG",11,22,1,"PAH",1,1,8,0)
           ENHANCEMENT
"PKG",11,22,1,"PAH",1,1,9,0)
           DATA DICTIONARY
"PKG",11,22,1,"PAH",1,1,10,0)
 
"PKG",11,22,1,"PAH",1,1,11,0)
Description:
"PKG",11,22,1,"PAH",1,1,12,0)
===========
"PKG",11,22,1,"PAH",1,1,13,0)
The build for this patch is distributed as part of a multi-package build 
"PKG",11,22,1,"PAH",1,1,14,0)
that contains LR*5.2*458 and LA*5.2*88.  This contains functionality to 
"PKG",11,22,1,"PAH",1,1,15,0)
enable Auto Verification and Auto Release of lab normal lab results and 
"PKG",11,22,1,"PAH",1,1,16,0)
was initially developed at the Kansas City VAMC.  This new process 
"PKG",11,22,1,"PAH",1,1,17,0)
involves automatic review and release of test results based on a 
"PKG",11,22,1,"PAH",1,1,18,0)
lab-established set of boundaries, also referred as rules, rule sets, and 
"PKG",11,22,1,"PAH",1,1,19,0)
algorithms.  Lab results that are in a "normal" range, as pre-determined 
"PKG",11,22,1,"PAH",1,1,20,0)
by the laboratory, will transmit directly from the middleware to VistA 
"PKG",11,22,1,"PAH",1,1,21,0)
lab files and on to Computerized Patient Record System (CPRS) without the 
"PKG",11,22,1,"PAH",1,1,22,0)
intermediate step of requiring a lab technologist to manually review and 
"PKG",11,22,1,"PAH",1,1,23,0)
sign off on these normal lab results.  This process will eliminate the 
"PKG",11,22,1,"PAH",1,1,24,0)
need for a qualified technologist to manually approve all "normal" 
"PKG",11,22,1,"PAH",1,1,25,0)
results before those results are filed in VistA Lab files and available 
"PKG",11,22,1,"PAH",1,1,26,0)
for clinicians to view in CPRS. 
"PKG",11,22,1,"PAH",1,1,27,0)
 
"PKG",11,22,1,"PAH",1,1,28,0)
Each VAMC site will determine which instruments will use this 
"PKG",11,22,1,"PAH",1,1,29,0)
functionality as it can set up on an instrument by instrument basis.  
"PKG",11,22,1,"PAH",1,1,30,0)
Essentially VistA Lab instruments are set up as either being available 
"PKG",11,22,1,"PAH",1,1,31,0)
for auto verification or not available for auto verification.  If an 
"PKG",11,22,1,"PAH",1,1,32,0)
instrument is set up for auto verification, then a lab result passing the 
"PKG",11,22,1,"PAH",1,1,33,0)
rule set will be filed by the middleware in VistA lab files and available 
"PKG",11,22,1,"PAH",1,1,34,0)
in CPRS and a lab result that cannot pass the rule set will be held in 
"PKG",11,22,1,"PAH",1,1,35,0)
the middleware system for review by a lab technologist. 
"PKG",11,22,1,"PAH",1,1,36,0)
 
"PKG",11,22,1,"PAH",1,1,37,0)
In support of this auto verification and auto release functionality, this 
"PKG",11,22,1,"PAH",1,1,38,0)
patch will add two new application proxy users.  LRLAB AUTO RELEASE is 
"PKG",11,22,1,"PAH",1,1,39,0)
used to indicate that the results in VistA Lab were released by an 
"PKG",11,22,1,"PAH",1,1,40,0)
automated Lab process without human interventions.  LRLAB, AUTO VERIFY is 
"PKG",11,22,1,"PAH",1,1,41,0)
used to indicate that the results were "approved" by an automated process 
"PKG",11,22,1,"PAH",1,1,42,0)
using a rules based system.
"PKG",11,22,1,"PAH",1,1,43,0)
 
"PKG",11,22,1,"PAH",1,1,44,0)
 
"PKG",11,22,1,"PAH",1,1,45,0)
Patch Components
"PKG",11,22,1,"PAH",1,1,46,0)
================
"PKG",11,22,1,"PAH",1,1,47,0)
 
"PKG",11,22,1,"PAH",1,1,48,0)
Files & Fields Associated:
"PKG",11,22,1,"PAH",1,1,49,0)
 
"PKG",11,22,1,"PAH",1,1,50,0)
File Name (Number)       Field Name (Number)     New/Modified/Deleted
"PKG",11,22,1,"PAH",1,1,51,0)
------------------       -------------------     --------------------
"PKG",11,22,1,"PAH",1,1,52,0)
AUTO INSTRUMENT (#62.4)  AUTO RELEASE (#99)      New
"PKG",11,22,1,"PAH",1,1,53,0)
 
"PKG",11,22,1,"PAH",1,1,54,0)
LA7 MESSAGE LOG BULLETINS (#62.485)
"PKG",11,22,1,"PAH",1,1,55,0)
 
"PKG",11,22,1,"PAH",1,1,56,0)
Parameter Definitions Associated:
"PKG",11,22,1,"PAH",1,1,57,0)
 
"PKG",11,22,1,"PAH",1,1,58,0)
Parameter Definition Name             New/Modified/Deleted
"PKG",11,22,1,"PAH",1,1,59,0)
-------------------------             --------------------
"PKG",11,22,1,"PAH",1,1,60,0)
LA UI AUTO RELEASE MASTER             New
"PKG",11,22,1,"PAH",1,1,61,0)
LA UI PROVIDER CONTACT INFO           New 
"PKG",11,22,1,"PAH",1,1,62,0)
 
"PKG",11,22,1,"PAH",1,1,63,0)
 
"PKG",11,22,1,"PAH",1,1,64,0)
The following are new entries new entry in the file LA7 MESSAGE LOG 
"PKG",11,22,1,"PAH",1,1,65,0)
BULLETINS (#62.485):
"PKG",11,22,1,"PAH",1,1,66,0)
 
"PKG",11,22,1,"PAH",1,1,67,0)
CODE: 301
"PKG",11,22,1,"PAH",1,1,68,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] does not own the LRVERIFY security 
"PKG",11,22,1,"PAH",1,1,69,0)
key. Auto Release not allowed for accession UID |4|.
"PKG",11,22,1,"PAH",1,1,70,0)
SEND ALERT: YES
"PKG",11,22,1,"PAH",1,1,71,0)
   
"PKG",11,22,1,"PAH",1,1,72,0)
CODE: 302
"PKG",11,22,1,"PAH",1,1,73,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] is not an active user on the system. 
"PKG",11,22,1,"PAH",1,1,74,0)
Auto Release not allowed for accession UID |4|.
"PKG",11,22,1,"PAH",1,1,75,0)
SEND ALERT: YES                      
"PKG",11,22,1,"PAH",1,1,76,0)
 
"PKG",11,22,1,"PAH",1,1,77,0)
CODE: 303
"PKG",11,22,1,"PAH",1,1,78,0)
TEXT: Msg #|1|, No verifying user or application proxy found. Auto 
"PKG",11,22,1,"PAH",1,1,79,0)
Release not allowed for accession UID |2|.
"PKG",11,22,1,"PAH",1,1,80,0)
SEND ALERT: YES                      
"PKG",11,22,1,"PAH",1,1,81,0)
   
"PKG",11,22,1,"PAH",1,1,82,0)
CODE: 304
"PKG",11,22,1,"PAH",1,1,83,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] is not a valid user to verify 
"PKG",11,22,1,"PAH",1,1,84,0)
results. Auto Release not allowed for accession UID |4|.
"PKG",11,22,1,"PAH",1,1,85,0)
SEND ALERT: YES                        
"PKG",11,22,1,"PAH",1,1,86,0)
 
"PKG",11,22,1,"PAH",1,1,87,0)
CODE: 305
"PKG",11,22,1,"PAH",1,1,88,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] is not allowed to verify. Only auto 
"PKG",11,22,1,"PAH",1,1,89,0)
verification enabled for this instrument. Auto Release not allowed for 
"PKG",11,22,1,"PAH",1,1,90,0)
accession UID |4|.
"PKG",11,22,1,"PAH",1,1,91,0)
SEND ALERT: YES                        
"PKG",11,22,1,"PAH",1,1,92,0)
 
"PKG",11,22,1,"PAH",1,1,93,0)
CODE: 306
"PKG",11,22,1,"PAH",1,1,94,0)
TEXT: Msg #|1|, User |2| [DUZ: |3|] is not allowed to verify. Only tech 
"PKG",11,22,1,"PAH",1,1,95,0)
verification enabled for this instrument.  Auto Release not allowed for 
"PKG",11,22,1,"PAH",1,1,96,0)
accession UID |4|.
"PKG",11,22,1,"PAH",1,1,97,0)
SEND ALERT: YES                        
"PKG",11,22,1,"PAH",1,1,98,0)
 
"PKG",11,22,1,"PAH",1,1,99,0)
CODE: 307
"PKG",11,22,1,"PAH",1,1,100,0)
  TEXT: Msg #|1|, Auto Release not allowed for accession UID |2|. Results 
"PKG",11,22,1,"PAH",1,1,101,0)
have previously been released.                
"PKG",11,22,1,"PAH",1,1,102,0)
SEND ALERT: YES
"PKG",11,22,1,"PAH",1,1,103,0)
 
"PKG",11,22,1,"PAH",1,1,104,0)
New Service Requests (NSRs):
"PKG",11,22,1,"PAH",1,1,105,0)
==============================
"PKG",11,22,1,"PAH",1,1,106,0)
NSR# 20131009: Employ laboratory autoverification in the Veterans Health 
"PKG",11,22,1,"PAH",1,1,107,0)
Administration. 
"PKG",11,22,1,"PAH",1,1,108,0)
 
"PKG",11,22,1,"PAH",1,1,109,0)
Test Sites:
"PKG",11,22,1,"PAH",1,1,110,0)
===========
"PKG",11,22,1,"PAH",1,1,111,0)
Kansas City VAMC (Alpha)
"PKG",11,22,1,"PAH",1,1,112,0)
Tucson (Beta)
"PKG",11,22,1,"PAH",1,1,113,0)
Tampa (Beta)
"PKG",11,22,1,"PAH",1,1,114,0)
Iowa City (Beta)
"PKG",11,22,1,"PAH",1,1,115,0)
Fresno (Beta)
"PKG",11,22,1,"PAH",1,1,116,0)
 
"PKG",11,22,1,"PAH",1,1,117,0)
 
"PKG",11,22,1,"PAH",1,1,118,0)
Software and Documentation Retrieval Information
"PKG",11,22,1,"PAH",1,1,119,0)
 ==============================
"PKG",11,22,1,"PAH",1,1,120,0)
VistA Laboratory patch LR*5.2*458 software is distributed by Host File, 
"PKG",11,22,1,"PAH",1,1,121,0)
along with LA*5.2*88.  Software is available on the ANONYMOUS.SOFTWARE 
"PKG",11,22,1,"PAH",1,1,122,0)
directory at one of the following Office of Information (OI) Field 
"PKG",11,22,1,"PAH",1,1,123,0)
Offices.  The preferred is to retrieve the file using Secure File Transfer
"PKG",11,22,1,"PAH",1,1,124,0)
Protocol (SFTP) from download.vista.domain.ext, which transmits files from
"PKG",11,22,1,"PAH",1,1,125,0)
the first available FTP server. Sites may also select to retrieve
"PKG",11,22,1,"PAH",1,1,126,0)
documentation directly from a specific server as follows: 
"PKG",11,22,1,"PAH",1,1,127,0)
        Albany                     ftp.fo-albany.domain.ext
"PKG",11,22,1,"PAH",1,1,128,0)
        Hines                      ftp.fo-hines.domain.ext
"PKG",11,22,1,"PAH",1,1,129,0)
        Salt Lake City             ftp.fo-slc.domain.ext
"PKG",11,22,1,"PAH",1,1,130,0)
                                   
"PKG",11,22,1,"PAH",1,1,131,0)
File Name                   Contents               Retrieval Format
"PKG",11,22,1,"PAH",1,1,132,0)
------------------          --------------------   ----------------
"PKG",11,22,1,"PAH",1,1,133,0)
LAB_AUTORELEASE_1_0.KID     Host File containing       ASCII
"PKG",11,22,1,"PAH",1,1,134,0)
                            KIDS software distribution
"PKG",11,22,1,"PAH",1,1,135,0)
 
"PKG",11,22,1,"PAH",1,1,136,0)
The VistA Documentation Library (VDL) web site will also contain 
"PKG",11,22,1,"PAH",1,1,137,0)
 
"PKG",11,22,1,"PAH",1,1,138,0)
LR_52_458_LA_52_88 Release Notes                       Binary
"PKG",11,22,1,"PAH",1,1,139,0)
 for LR*5.2*458 and LA*5.2*88
"PKG",11,22,1,"PAH",1,1,140,0)
 
"PKG",11,22,1,"PAH",1,1,141,0)
Lab AutoRelease 1.0 User Guide                         Binary
"PKG",11,22,1,"PAH",1,1,142,0)
 
"PKG",11,22,1,"PAH",1,1,143,0)
Lab AutoRelease 1.0 Technical Manual                   Binary
"PKG",11,22,1,"PAH",1,1,144,0)
 
"PKG",11,22,1,"PAH",1,1,145,0)
Lab UI HL V1.6 Upgrade Installation                    Binary
"PKG",11,22,1,"PAH",1,1,146,0)
 and User Guide
"PKG",11,22,1,"PAH",1,1,147,0)
 
"PKG",11,22,1,"PAH",1,1,148,0)
Lab UI HL V1.6 Upgrade Interface                       Binary
"PKG",11,22,1,"PAH",1,1,149,0)
 Specifications Document 
"PKG",11,22,1,"PAH",1,1,150,0)
 
"PKG",11,22,1,"PAH",1,1,151,0)
This website is usually updated within 1-3 days of the patch release date.
"PKG",11,22,1,"PAH",1,1,152,0)
The VDL web address for Laboratory Universal Interface user documentation
"PKG",11,22,1,"PAH",1,1,153,0)
is: http://www.va.gov/vdl/application.asp?appid=120
"PKG",11,22,1,"PAH",1,1,154,0)
 
"PKG",11,22,1,"PAH",1,1,155,0)
Installation Instructions
"PKG",11,22,1,"PAH",1,1,156,0)
=========================
"PKG",11,22,1,"PAH",1,1,157,0)
This patch, LA*5.2*88, is part of a combined build for Laboratory 
"PKG",11,22,1,"PAH",1,1,158,0)
Autoverification.  
"PKG",11,22,1,"PAH",1,1,159,0)
 
"PKG",11,22,1,"PAH",1,1,160,0)
Please refer to patch LR*5.2*458 for installation instructions.
"PKG",11,22,1,"PAH",1,1,161,0)
 
"PKG",11,22,1,"PAH",1,1,162,0)
Routine Information:
"PKG",11,22,1,"PAH",1,1,163,0)
====================
"PKG",11,22,1,"PAH",1,1,164,0)
 
"PKG",11,22,1,"PAH",1,1,165,0)
 
"PKG",11,22,1,"PAH",1,1,166,0)
The second line of each of these routines now looks like:
"PKG",11,22,1,"PAH",1,1,167,0)
;;5.2;AUTOMATED LAB INSTRUMENTS;**[Patch List]**;Sep 27, 1994;Build 10
"PKG",11,22,1,"PAH",1,1,168,0)
 
"PKG",11,22,1,"PAH",1,1,169,0)
The checksums below are new checksums, and
"PKG",11,22,1,"PAH",1,1,170,0)
 can be checked with CHECK1^XTSUMBLD.
"PKG",11,22,1,"PAH",1,1,171,0)
 
"PKG",11,22,1,"PAH",1,1,172,0)
Routine Name: LA7UCFG
"PKG",11,22,1,"PAH",1,1,173,0)
    Before:  B4239468   After: B137316017 **66,88**
"PKG",11,22,1,"PAH",1,1,174,0)
Routine Name: LA7UCFG1
"PKG",11,22,1,"PAH",1,1,175,0)
    Before:       n/a   After: B29526912  **88**
"PKG",11,22,1,"PAH",1,1,176,0)
Routine Name: LA7UIO1
"PKG",11,22,1,"PAH",1,1,177,0)
    Before: B66837499   After: B75417661  **66,74,88**
"PKG",11,22,1,"PAH",1,1,178,0)
Routine Name: LA7UTILB
"PKG",11,22,1,"PAH",1,1,179,0)
    Before: B12063183   After: B23365722  **74,88**
"PKG",11,22,1,"PAH",1,1,180,0)
Routine Name: LA7VHL
"PKG",11,22,1,"PAH",1,1,181,0)
    Before: B32679919   After: B38289473  **27,46,62,64,67,74,88**
"PKG",11,22,1,"PAH",1,1,182,0)
Routine Name: LA7VHLU8
"PKG",11,22,1,"PAH",1,1,183,0)
    Before: B10483894   After: 60447079   **74,88**
"PKG",11,22,1,"PAH",1,1,184,0)
Routine Name: LA7VHLU9
"PKG",11,22,1,"PAH",1,1,185,0)
    Before: B19044226   After: B33364706  **68,74,88**
"PKG",11,22,1,"PAH",1,1,186,0)
Routine Name: LA7VIN
"PKG",11,22,1,"PAH",1,1,187,0)
    Before: B29668237   After: B31997123  **46,67,74,88**
"PKG",11,22,1,"PAH",1,1,188,0)
Routine Name: LA7VIN1
"PKG",11,22,1,"PAH",1,1,189,0)
    Before: B53484134   After: B65233143  **46,64,74,88**
"PKG",11,22,1,"PAH",1,1,190,0)
Routine Name: LA7VIN2
"PKG",11,22,1,"PAH",1,1,191,0)
    Before: B44814406   After: B46992282  **46,64,74,88**
"PKG",11,22,1,"PAH",1,1,192,0)
Routine Name: LA7VIN2A
"PKG",11,22,1,"PAH",1,1,193,0)
    Before: B32994528   After: B34119950  **74,88**
"PKG",11,22,1,"PAH",1,1,194,0)
Routine Name: LA7VIN4
"PKG",11,22,1,"PAH",1,1,195,0)
    Before: B77376354   After: B81803911  **46,64,67,66,74,85,88**
"PKG",11,22,1,"PAH",1,1,196,0)
Routine Name: LA7VIN4A
"PKG",11,22,1,"PAH",1,1,197,0)
    Before: B19473776   After: B23154184  **74,80,88**
"PKG",11,22,1,"PAH",1,1,198,0)
Routine Name: LA7VIN5
"PKG",11,22,1,"PAH",1,1,199,0)
    Before: B69080940   After: B85555425  **46,64,68,74,84,88**
"PKG",11,22,1,"PAH",1,1,200,0)
Routine Name: LA7VIN5A
"PKG",11,22,1,"PAH",1,1,201,0)
    Before: B32697215   After: B34608326  **46,64,67,72,66,74,88**
"PKG",11,22,1,"PAH",1,1,202,0)
Routine Name: LA7VORC
"PKG",11,22,1,"PAH",1,1,203,0)
    Before: B18625097   After: B22779822  **46,64,68,88**
"PKG",11,22,1,"PAH",1,1,204,0)
Routine Name: LA88
"PKG",11,22,1,"PAH",1,1,205,0)
    Before:       n/a   After: B37005513  **88** DELETED AFTER INSTALL
"PKG",11,22,1,"PAH",1,1,206,0)
Routine Name: LA88A
"PKG",11,22,1,"PAH",1,1,207,0)
    Before:       n/a   After: B100793409 **88** DELETED AFTER INSTALL
"PKG",11,22,1,"PAH",1,1,208,0)
 
"PKG",11,22,1,"PAH",1,1,209,0)
Routine list of preceding patches: 80, 84, 85
"PRE")
LA88A
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
18
"RTN","LA7UCFG")
0^8^B137316017
"RTN","LA7UCFG",1,0)
LA7UCFG ;DALOI/JMC - Configure Lab Universal Interface ;3/9/16  12:12
"RTN","LA7UCFG",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**66,88**;Sep 27, 1994;Build 10
"RTN","LA7UCFG",3,0)
 ;
"RTN","LA7UCFG",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7UCFG",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7UCFG",6,0)
 ;
"RTN","LA7UCFG",7,0)
 Q
"RTN","LA7UCFG",8,0)
 ;
"RTN","LA7UCFG",9,0)
EN ; Configure files #62.48 and #62.4 and auto release
"RTN","LA7UCFG",10,0)
 N DIR,DIROUT,DIRUT,DUOUT,LA7QUIT,X,Y
"RTN","LA7UCFG",11,0)
 F  D  Q:$D(DIRUT)
"RTN","LA7UCFG",12,0)
 . S DIR(0)="SO^1:LA7 MESSAGE PARAMETER (#62.48);2:AUTO INSTRUMENT (#62.4);3:Auto Release System Parameter;4:Configuration Report (132 COL);5:Holders of Lab keys;6:Ordering Provider Contact Parameter"
"RTN","LA7UCFG",13,0)
 . S DIR(0)=DIR(0)_";7:Convert LAB UI 1.6 to Enhanced Acknowledgement Mode"
"RTN","LA7UCFG",14,0)
 . S DIR("A")="Select which function to configure/report"
"RTN","LA7UCFG",15,0)
 . D ^DIR
"RTN","LA7UCFG",16,0)
 . I $D(DIRUT) Q
"RTN","LA7UCFG",17,0)
 . I Y=1 D E6248 Q
"RTN","LA7UCFG",18,0)
 . I Y=2 D  Q
"RTN","LA7UCFG",19,0)
 . . S LA7QUIT=0
"RTN","LA7UCFG",20,0)
 . . F  D E624 Q:LA7QUIT
"RTN","LA7UCFG",21,0)
 . I Y=3 D EDITPAR^XPAREDIT("LA UI AUTO RELEASE MASTER") Q
"RTN","LA7UCFG",22,0)
 . I Y=4 D PRINT Q
"RTN","LA7UCFG",23,0)
 . I Y=5 D ENKEY Q
"RTN","LA7UCFG",24,0)
 . I Y=6 D EDITPAR^XPAREDIT("LA UI PROVIDER CONTACT INFO") Q
"RTN","LA7UCFG",25,0)
 . I Y=7 D ENACK^LA7UCFG1 Q
"RTN","LA7UCFG",26,0)
 Q
"RTN","LA7UCFG",27,0)
 ;
"RTN","LA7UCFG",28,0)
 ;
"RTN","LA7UCFG",29,0)
E6248 ; Setup/edit file #62.48
"RTN","LA7UCFG",30,0)
 ;
"RTN","LA7UCFG",31,0)
 N DA,DIC,DIE,DLAYGO,DR,LA76248,X,Y
"RTN","LA7UCFG",32,0)
 W !
"RTN","LA7UCFG",33,0)
 S DIC="^LAHM(62.48,",DIC(0)="AELMQ",DIC("S")="I $P(^(0),U,9)=1",DLAYGO=62.48
"RTN","LA7UCFG",34,0)
 D ^DIC K DIC("S")
"RTN","LA7UCFG",35,0)
 I Y<1 Q
"RTN","LA7UCFG",36,0)
 S (DA,LA76248)=+Y
"RTN","LA7UCFG",37,0)
 L +^LAHM(62.48,LA76248):DILOCKTM
"RTN","LA7UCFG",38,0)
 I '$T W !?5,"Another user is editing this entry." Q
"RTN","LA7UCFG",39,0)
 S DIE=DIC,DR="2;3;4;20"
"RTN","LA7UCFG",40,0)
 D ^DIE
"RTN","LA7UCFG",41,0)
 L -^LAHM(62.48,LA76248)
"RTN","LA7UCFG",42,0)
 Q
"RTN","LA7UCFG",43,0)
 ;
"RTN","LA7UCFG",44,0)
 ;
"RTN","LA7UCFG",45,0)
E624 ; Setup/edit file #62.4
"RTN","LA7UCFG",46,0)
 ;
"RTN","LA7UCFG",47,0)
 N DA,DIC,DIE,DLAYGO,DR,FDA,LA7624,LA76248,LA7ERR,X,Y
"RTN","LA7UCFG",48,0)
 ;
"RTN","LA7UCFG",49,0)
 ;ZEXCEPT: LA7QUIT
"RTN","LA7UCFG",50,0)
 ;
"RTN","LA7UCFG",51,0)
 W !
"RTN","LA7UCFG",52,0)
 S DIC="^LAB(62.4,",DIC(0)="AELMQ",DIC("S")="I $P(^(0),U)'[""LA7V"",$P(^(0),U)'[""LA7P""",DLAYGO=62.4
"RTN","LA7UCFG",53,0)
 D ^DIC K DIC("S")
"RTN","LA7UCFG",54,0)
 I Y<1 S LA7QUIT=1 Q
"RTN","LA7UCFG",55,0)
 S (DA,LA7624)=+Y
"RTN","LA7UCFG",56,0)
 ;
"RTN","LA7UCFG",57,0)
 L +^LAB(62.4,LA7624):DILOCKTM
"RTN","LA7UCFG",58,0)
 I '$T W !?5,"Another user is editing this entry." Q
"RTN","LA7UCFG",59,0)
 ;
"RTN","LA7UCFG",60,0)
 S DIE=DIC,DR=".01;3;5;6;8;10;11;12;18;.02;95;98;99;30;107"
"RTN","LA7UCFG",61,0)
 I DUZ(0)="@" S DR(2,62.41)=".01;2;6;15;7;8;9;12;13;14;16;17;18;19"
"RTN","LA7UCFG",62,0)
 E  S DR(2,62.41)=".01;6;15;7;8;9;12;13;14;16;17;18;19"
"RTN","LA7UCFG",63,0)
 D ^DIE
"RTN","LA7UCFG",64,0)
 ;
"RTN","LA7UCFG",65,0)
 ; Stuff file build logic into entry if UI interface
"RTN","LA7UCFG",66,0)
 S LA76248=$P($G(^LAB(62.4,LA7624,0)),"^",8)
"RTN","LA7UCFG",67,0)
 I $D(DA),LA76248,$P($G(^LAHM(62.48,LA76248,0)),"^",9)=1 D
"RTN","LA7UCFG",68,0)
 . W !!,"Setting fields for auto download  FILE BUILD ENTRY (#93) to: EN"
"RTN","LA7UCFG",69,0)
 . W !,"                                FILE BUILD ROUTINE (#94) to: LA7UID"
"RTN","LA7UCFG",70,0)
 . S FDA(1,62.4,LA7624_",",93)="EN"
"RTN","LA7UCFG",71,0)
 . S FDA(1,62.4,LA7624_",",94)="LA7UID"
"RTN","LA7UCFG",72,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7UCFG",73,0)
 . W " ...",$S('$D(LA7ERR(1)):"Done",1:"Update FAILED")
"RTN","LA7UCFG",74,0)
 . I $D(LA7ERR(1)) W !,"Error Reported by FileMan: ",$G(LA7ERR(1,"DIERR",1,"TEXT",1))
"RTN","LA7UCFG",75,0)
 ;
"RTN","LA7UCFG",76,0)
 ; If entry set for Auto Release then check related load list for desginated auto release profile.
"RTN","LA7UCFG",77,0)
 I $P($G(^LAB(62.4,LA7624,9)),U,11) D
"RTN","LA7UCFG",78,0)
 . N DA,DIE,DR,LA7682
"RTN","LA7UCFG",79,0)
 . S LA7682=$P($G(^LAB(62.4,LA7624,0)),U,4)
"RTN","LA7UCFG",80,0)
 . I $D(^LRO(68.2,"AR",1,LA7682)) Q  ; Loadlist already have profile flagged for auto release
"RTN","LA7UCFG",81,0)
 . W !!,"As this auto instrument is configured for auto release,"
"RTN","LA7UCFG",82,0)
 . W !,"please designate the associated load list profile to be used for auto release.",!
"RTN","LA7UCFG",83,0)
 . W !,"Editing load list: ",$P(^LRO(68.2,LA7682,0),U),!
"RTN","LA7UCFG",84,0)
 . S DIE="^LRO(68.2,",DA=LA7682,DR=50,DR(2,68.23)="2.4"
"RTN","LA7UCFG",85,0)
 . D ^DIE
"RTN","LA7UCFG",86,0)
 ;
"RTN","LA7UCFG",87,0)
 L -^LAB(62.4,LA7624)
"RTN","LA7UCFG",88,0)
 Q
"RTN","LA7UCFG",89,0)
 ;
"RTN","LA7UCFG",90,0)
 ;
"RTN","LA7UCFG",91,0)
PRINT ; Print lab universal interface configuration report
"RTN","LA7UCFG",92,0)
 N %ZIS,DIC,LA7624,ZTDTH,ZTSK,ZTRTN,ZTIO,ZTSAVE,X,Y
"RTN","LA7UCFG",93,0)
 ;
"RTN","LA7UCFG",94,0)
 D EN^DDIOL("","","!")
"RTN","LA7UCFG",95,0)
 S DIC="^LAB(62.4,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U)'[""LA7V"",$P(^(0),U)'[""LA7P"""
"RTN","LA7UCFG",96,0)
 D ^DIC
"RTN","LA7UCFG",97,0)
 I Y<1 Q
"RTN","LA7UCFG",98,0)
 S LA7624=+Y
"RTN","LA7UCFG",99,0)
 ;
"RTN","LA7UCFG",100,0)
 S %ZIS="MQ" D ^%ZIS
"RTN","LA7UCFG",101,0)
 I POP D HOME^%ZIS Q
"RTN","LA7UCFG",102,0)
 I $D(IO("Q")) D  Q
"RTN","LA7UCFG",103,0)
 . S ZTRTN="DQP^LA7UCFG",ZTSAVE("LA7624")="",ZTDESC="Print Lab Universal Interface Configuration Report"
"RTN","LA7UCFG",104,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","LA7UCFG",105,0)
 . D EN^DDIOL("Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued"),"","!")
"RTN","LA7UCFG",106,0)
 ;
"RTN","LA7UCFG",107,0)
DQP ; entry point from above and TaskMan
"RTN","LA7UCFG",108,0)
 ;
"RTN","LA7UCFG",109,0)
 N X,Y
"RTN","LA7UCFG",110,0)
 N LA7EXIT,LA7LINE,LA7LINE2,LA7NOW,LA7PAGE
"RTN","LA7UCFG",111,0)
 N LRLL,LRPROF
"RTN","LA7UCFG",112,0)
 S LA7NOW=$$HTE^XLFDT($H),(LA7EXIT,LA7PAGE)=0
"RTN","LA7UCFG",113,0)
 S LA7624(0)=$G(^LAB(62.4,LA7624,0))
"RTN","LA7UCFG",114,0)
 S LA7LINE=$$REPEAT^XLFSTR("=",IOM)
"RTN","LA7UCFG",115,0)
 S LA7LINE2=$$REPEAT^XLFSTR("-",IOM)
"RTN","LA7UCFG",116,0)
 D HDR
"RTN","LA7UCFG",117,0)
 N ARPCNT,LA7PROXY,LA7PROXID,LA7DIV,LA7SITE,LA7VAF,PCNT,LR60,LRD,LRDN,LRX,XURET
"RTN","LA7UCFG",118,0)
 W !,"VistA Lab Auto Release Master: ",$S($$GET^XPAR("SYS^PKG","LA UI AUTO RELEASE MASTER",1,"E")="":"NO (DISABLED)",1:$$GET^XPAR("SYS^PKG","LA UI AUTO RELEASE MASTER",1,"E"))
"RTN","LA7UCFG",119,0)
 ;
"RTN","LA7UCFG",120,0)
 W !!,"VistA Application Proxy",?28,"ID/DUZ",?45,"HL7 encoding format",!,LA7LINE2
"RTN","LA7UCFG",121,0)
 F LA7PROXY="LRLAB, AUTO VERIFY","LRLAB, AUTO RELEASE" D
"RTN","LA7UCFG",122,0)
 . S LA7PROXID=$$FIND1^DIC(200,,"X",LA7PROXY,"B")
"RTN","LA7UCFG",123,0)
 . S LA7DIV=+$$KSP^XUPARAM("INST")
"RTN","LA7UCFG",124,0)
 . S LA7SITE=$$RETFACID^LA7VHLU2(LA7DIV,0,1)
"RTN","LA7UCFG",125,0)
 . S LA7VAF=$$GET1^DIQ(4,LA7DIV_",","AGENCY CODE","I")
"RTN","LA7UCFG",126,0)
 . I LA7VAF="V" S LA7SITE="VA"_LA7SITE
"RTN","LA7UCFG",127,0)
 . W !,?2,LA7PROXY,?25,$S(LA7PROXID'=0:$J(LA7PROXID,10),1:"** NOT DEFINED **")
"RTN","LA7UCFG",128,0)
 . I LA7PROXID'=0 W ?38," ",LA7PROXID_"-"_LA7SITE_"^"_$$HLNAME^XLFNAME(LA7PROXY,"S","^")_"^^^^99VA4"
"RTN","LA7UCFG",129,0)
 W !!,"HL7 Components: <ID Number (ST)> ^ <Family Name (FN)> ^ <Given Name (ST)> ^ ^ ^ ^ ^ <Source Table (IS)> ^"
"RTN","LA7UCFG",130,0)
 ;
"RTN","LA7UCFG",131,0)
 W !!!,"Instrument Auto Download Status.: ",$$GET1^DIQ(62.4,LA7624_",",98)
"RTN","LA7UCFG",132,0)
 I $$GET1^DIQ(62.4,LA7624_",",98)'="YES" W !?10,"**Warning - Auto Download not enabled for auto instrument: ",$P(LA7624(0),"^",1)
"RTN","LA7UCFG",133,0)
 W !,"Instrument Auto Download Routine: ",$S($$GET1^DIQ(62.4,LA7624_",",93)'="":$$GET1^DIQ(62.4,LA7624_",",93),1:"(Entry Not Defined)"),$S($$GET1^DIQ(62.4,LA7624_",",94)'="":"^"_$$GET1^DIQ(62.4,LA7624_",",94),1:"(Routine Not Defined)")
"RTN","LA7UCFG",134,0)
 ;
"RTN","LA7UCFG",135,0)
 W !!,"Instrument Auto Release Status: ",$$GET1^DIQ(62.4,LA7624_",",99)
"RTN","LA7UCFG",136,0)
 ;I $$GET1^DIQ(62.4,LA7624_",",99)'="YES" W !?10,"**Warning - Auto Release not enabled for auto instrument: ",$P(LA7624(0),"^",1)
"RTN","LA7UCFG",137,0)
 ;
"RTN","LA7UCFG",138,0)
 W !!,"Associated Lab UI Message Configuration: ",$$GET1^DIQ(62.4,LA7624_",",8)
"RTN","LA7UCFG",139,0)
 I $$GET1^DIQ(62.4,LA7624_",",8)="" W !?10,"**Warning - Message Configuration not defined for auto instrument: ",$P(LA7624(0),"^",1)
"RTN","LA7UCFG",140,0)
 ;
"RTN","LA7UCFG",141,0)
 W !!,"Associated Load/Work List: ",$$GET1^DIQ(62.4,LA7624_",",3)
"RTN","LA7UCFG",142,0)
 S LRLL=$P(LA7624(0),"^",4) ;load/work list
"RTN","LA7UCFG",143,0)
 I 'LRLL W !?10,"**Warning - No load/work list defined for auto instrument: ",$P(LA7624(0),"^",1)
"RTN","LA7UCFG",144,0)
 ;
"RTN","LA7UCFG",145,0)
 S LRX=$$FIND1^DIC(200,"","OX","LRLAB,AUTO RELEASE","B","") I LRX<1 W !?10,"**Warning - Unable to identify proxy 'LRLAB,AUTO RELEASE' in NEW PERSON file" ;find duz of proxy
"RTN","LA7UCFG",146,0)
 I LRX S XURET=$$DIV4^XUSER(.XURET,.LRX) ;return proxy's divisions
"RTN","LA7UCFG",147,0)
 S PCNT=0,ARPCNT=0,LRPROF=0
"RTN","LA7UCFG",148,0)
 I LRLL F  S LRPROF=$O(^LRO(68.2,LRLL,10,LRPROF)) Q:'LRPROF  D
"RTN","LA7UCFG",149,0)
 . S PCNT=PCNT+1 ; count profiles
"RTN","LA7UCFG",150,0)
 . I $$GET1^DIQ(68.23,LRPROF_","_LRLL_",",2.4)="YES" D
"RTN","LA7UCFG",151,0)
 . . S ARPCNT=ARPCNT+1 ;count auto release profiles
"RTN","LA7UCFG",152,0)
 . . W !?5,"Auto Release Profile: ",$$GET1^DIQ(68.23,LRPROF_","_LRLL_",",.01)
"RTN","LA7UCFG",153,0)
 . . S LRD=+$P($G(^LRO(68.2,LRLL,10,LRPROF,0)),"^",5),LRDN=$$GET1^DIQ(68.23,LRPROF_","_LRLL_",",2.3) ;default reference lab and name
"RTN","LA7UCFG",154,0)
 . . W !?11,"Performing Lab: ",$S(LRDN'="":LRDN,1:"** None Defined **")
"RTN","LA7UCFG",155,0)
 . . I '$D(XURET(LRD)) D
"RTN","LA7UCFG",156,0)
 . . . I LRDN'="" W !?11,"**Warning - 'LRLAB,AUTO RELEASE' proxy has not been assigned division '",LRDN,"' in",!?24,"the file NEW PERSON (#200), field DIVISION (#16)."
"RTN","LA7UCFG",157,0)
 . . . I LRDN="" W !?11,"**Warning - Performing lab required to be specified for Auto Release."
"RTN","LA7UCFG",158,0)
 I 'PCNT W !?10,"**Warning - No profile defined for auto release"
"RTN","LA7UCFG",159,0)
 I 'ARPCNT W !?10,"**Warning - No profile enabled for auto release"
"RTN","LA7UCFG",160,0)
 I ARPCNT>1 W !?10,"**Warning - Multiple profiles enabled for auto release (should only be one)"
"RTN","LA7UCFG",161,0)
 ;
"RTN","LA7UCFG",162,0)
 I ($Y+6)>IOSL D HDR
"RTN","LA7UCFG",163,0)
 I LA7EXIT D CLEAN Q
"RTN","LA7UCFG",164,0)
 D SH1
"RTN","LA7UCFG",165,0)
 S I=0 F  S I=$O(^LAB(62.4,LA7624,3,I)) Q:'I  S X(0)=$G(^(I,0)),X(2)=$G(^(2)) I $P(X(2),"^",4)=1 D  Q:LA7EXIT
"RTN","LA7UCFG",166,0)
 . S LR60=+$P(X(0),"^",1)
"RTN","LA7UCFG",167,0)
 . I ($Y+6)>IOSL D HDR Q:LA7EXIT  D SH1 Q:LA7EXIT
"RTN","LA7UCFG",168,0)
 . W !,$J("["_I_"]",4),?5,$$GET1^DIQ(62.41,I_","_LA7624_",",.01),?45,$$GET1^DIQ(62.41,I_","_LA7624_",",6),?75,$$GET1^DIQ(62.41,I_","_LA7624_",",7),?95,$$GET1^DIQ(60,LR60_",",400)," [",$P($G(^LAB(60,LR60,.2)),"^",1),"]"
"RTN","LA7UCFG",169,0)
 . I $S($P(X(2),"^",13)'="":1,$P(X(2),"^",14)'="":1,1:0) D
"RTN","LA7UCFG",170,0)
 . . W !
"RTN","LA7UCFG",171,0)
 . . I $P(X(2),"^",13)'="" W ?10,"Specimen: ",$$GET1^DIQ(62.41,I_","_LA7624_",",8)
"RTN","LA7UCFG",172,0)
 . . I $P(X(2),"^",14)'="" W ?90,"Urgency: ",$$GET1^DIQ(62.41,I_","_LA7624_",",9)
"RTN","LA7UCFG",173,0)
 ;
"RTN","LA7UCFG",174,0)
 I LA7EXIT D CLEAN Q
"RTN","LA7UCFG",175,0)
 I ($Y+6)>IOSL D HDR
"RTN","LA7UCFG",176,0)
 I LA7EXIT D CLEAN Q
"RTN","LA7UCFG",177,0)
 D SH2
"RTN","LA7UCFG",178,0)
 S I=0 F  S I=$O(^LAB(62.4,LA7624,3,I)) Q:'I  S X(2)=$G(^(I,2)) I $P(X(2),"^",3)'=0 D  Q:LA7EXIT
"RTN","LA7UCFG",179,0)
 . I ($Y+6)>IOSL D HDR Q:LA7EXIT  D SH2 Q:LA7EXIT
"RTN","LA7UCFG",180,0)
 . W !,$J("["_I_"]",4),?5,$$GET1^DIQ(62.41,I_","_LA7624_",",.01),?45,$$GET1^DIQ(62.41,I_","_LA7624_",",6),?75,$J($$GET1^DIQ(62.41,I_","_LA7624_",",12),5),?85,$$GET1^DIQ(62.41,I_","_LA7624_",",13),?95,$$GET1^DIQ(62.41,I_","_LA7624_",",14)
"RTN","LA7UCFG",181,0)
 . W ?105,$$GET1^DIQ(62.41,I_","_LA7624_",",16),?115,$$GET1^DIQ(62.41,I_","_LA7624_",",17),?125,$$GET1^DIQ(62.41,I_","_LA7624_",",18)
"RTN","LA7UCFG",182,0)
 . I $P(X(2),"^",8)'="" W !?10,"Remark Prefix: ",$$GET1^DIQ(62.41,I_","_LA7624_",",19)
"RTN","LA7UCFG",183,0)
 . I $$GET1^DIQ(62.41,I_","_LA7624_",",2)'="" W !?10,"Param 1: ",$$GET1^DIQ(62.41,I_","_LA7624_",",2)
"RTN","LA7UCFG",184,0)
 ;
"RTN","LA7UCFG",185,0)
 I '$D(ZTQUEUED),'LA7EXIT,$E(IOST,1,2)="C-" D TERM
"RTN","LA7UCFG",186,0)
 D CLEAN
"RTN","LA7UCFG",187,0)
 Q
"RTN","LA7UCFG",188,0)
 ;
"RTN","LA7UCFG",189,0)
 ;
"RTN","LA7UCFG",190,0)
CLEAN ; Clean up and quit
"RTN","LA7UCFG",191,0)
 I $E(IOST,1,2)'="C-"  W @IOF
"RTN","LA7UCFG",192,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","LA7UCFG",193,0)
 E  S ZTREQ="@"
"RTN","LA7UCFG",194,0)
 Q
"RTN","LA7UCFG",195,0)
 ;
"RTN","LA7UCFG",196,0)
 ;
"RTN","LA7UCFG",197,0)
HDR ; Header for lab universal interface configuration report
"RTN","LA7UCFG",198,0)
 I '$D(ZTQUEUED),LA7PAGE,$E(IOST,1,2)="C-" D TERM Q:$G(LA7EXIT)
"RTN","LA7UCFG",199,0)
 W @IOF S $X=0
"RTN","LA7UCFG",200,0)
 S LA7PAGE=LA7PAGE+1
"RTN","LA7UCFG",201,0)
 W !,"Lab Universal Interface Configuration Report",?IOM-29," Page: ",LA7PAGE
"RTN","LA7UCFG",202,0)
 W !," for interface: ",$P(LA7624(0),"^"),?IOM-32," Printed: ",LA7NOW
"RTN","LA7UCFG",203,0)
 W !,LA7LINE,!
"RTN","LA7UCFG",204,0)
 Q
"RTN","LA7UCFG",205,0)
 ;
"RTN","LA7UCFG",206,0)
 ;
"RTN","LA7UCFG",207,0)
SH1 ;Sub header #1
"RTN","LA7UCFG",208,0)
 W !!,"ORDERABLE TESTS"
"RTN","LA7UCFG",209,0)
 W !,"Entry",?10,"Name",?45,"UI Test Code",?75,"Accession Area",?95,"Data Name [IEN]"
"RTN","LA7UCFG",210,0)
 W !,LA7LINE2
"RTN","LA7UCFG",211,0)
 Q
"RTN","LA7UCFG",212,0)
 ;
"RTN","LA7UCFG",213,0)
 ;
"RTN","LA7UCFG",214,0)
SH2 ;Sub head #2
"RTN","LA7UCFG",215,0)
 W !!,"REPORTABLE TESTS"
"RTN","LA7UCFG",216,0)
 W ?75,"Decimal",?84,"Result to",?95,"Accept",?105,"Ignore",?115,"Remove",?125,"Store"
"RTN","LA7UCFG",217,0)
 W !,"Entry",?10,"Name",?45,"UI Test Code",?75,"Places",?85,"Remark",?95,"Results",?105,"Results",?115,"Spaces",?125,"Remarks"
"RTN","LA7UCFG",218,0)
 W !,LA7LINE2
"RTN","LA7UCFG",219,0)
 Q
"RTN","LA7UCFG",220,0)
 ;
"RTN","LA7UCFG",221,0)
 ;
"RTN","LA7UCFG",222,0)
TERM ;
"RTN","LA7UCFG",223,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LA7UCFG",224,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT) LA7EXIT=1
"RTN","LA7UCFG",225,0)
 Q
"RTN","LA7UCFG",226,0)
 ;
"RTN","LA7UCFG",227,0)
 ;
"RTN","LA7UCFG",228,0)
ENKEY ;entry point to holder(s) of lab key(s) option
"RTN","LA7UCFG",229,0)
 N DIC,X,Y,LRKEY,LRUSER
"RTN","LA7UCFG",230,0)
 W ! F  S DIC="^DIC(19.1,",DIC(0)="QEAM",DIC("S")="I $E($P(^(0),U,1),1,2)=""LR""",DIC("A")="Select "_$S($D(LRKEY):"Another ",1:"")_"LAB SECURITY KEY NAME: " D  Q:Y<0
"RTN","LA7UCFG",231,0)
 . D ^DIC I Y<0 Q
"RTN","LA7UCFG",232,0)
 . I '$D(^XUSEC($P(Y,"^",2))) W !!?5,"There are no holders of this key." Q
"RTN","LA7UCFG",233,0)
 . S LRKEY($P(Y,"^",2))="" ;array of lab keys
"RTN","LA7UCFG",234,0)
 I '$D(LRKEY) W !!,"No security keys selected." Q
"RTN","LA7UCFG",235,0)
 I X="^" Q
"RTN","LA7UCFG",236,0)
 W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="All USERS" D ^DIR K DIR I $D(DIRUT) Q
"RTN","LA7UCFG",237,0)
 I Y=1 S LRUSER="ALL" ;selecting all lab keys
"RTN","LA7UCFG",238,0)
 I 'Y W ! F  K DIC S DIC="^VA(200,",DIC(0)="QEAM",DIC("A")="Select "_$S($D(LRUSER):"Another ",1:"")_"USER: " D  Q:Y<0
"RTN","LA7UCFG",239,0)
 . D ^DIC I Y<0 Q
"RTN","LA7UCFG",240,0)
 . S LRUSER(+Y)="" ;array of lab keys
"RTN","LA7UCFG",241,0)
 I X="^" Q
"RTN","LA7UCFG",242,0)
 S ZTSAVE("LRKEY")="",ZTSAVE("LRUSER")=""
"RTN","LA7UCFG",243,0)
 W ! D EN^XUTMDEVQ("START^LA7UCFG","USERS HOLDING LAB KEYS",.ZTSAVE,"M") I 'POP Q
"RTN","LA7UCFG",244,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","LA7UCFG",245,0)
 Q
"RTN","LA7UCFG",246,0)
 ;
"RTN","LA7UCFG",247,0)
 ;
"RTN","LA7UCFG",248,0)
START ;print users holding lab keys
"RTN","LA7UCFG",249,0)
 N %,I,JJ,KTAB,LIN,LN,LRID,LRK,LRNAM,PG,POP,PRTDT,QFLG,SS,TAB,X,Y
"RTN","LA7UCFG",250,0)
 S (PG,QFLG)=0,U="^",$P(LN,"-",IOM+1)="" K ^TMP("LA7UCFG",$J)
"RTN","LA7UCFG",251,0)
 D NOW^%DTC S PRTDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","LA7UCFG",252,0)
 ;
"RTN","LA7UCFG",253,0)
 I $G(LRUSER)="ALL" S LRK="" F  S LRK=$O(LRKEY(LRK)) Q:LRK=""  S LRID=0 F  S LRID=$O(^XUSEC(LRK,LRID)) Q:'LRID  D
"RTN","LA7UCFG",254,0)
 . S ^TMP("LA7UCFG",$J,$P($G(^VA(200,LRID,0)),"^",1),LRID,LRK)=""
"RTN","LA7UCFG",255,0)
 I $O(LRUSER(0)) S LRID=0 F  S LRID=$O(LRUSER(LRID)) Q:'LRID  S LRK="" F  S LRK=$O(LRKEY(LRK)) Q:LRK=""  I $D(^XUSEC(LRK,LRID)) D
"RTN","LA7UCFG",256,0)
 . S ^TMP("LA7UCFG",$J,$P($G(^VA(200,LRID,0)),"^",1),LRID,LRK)=""
"RTN","LA7UCFG",257,0)
 ;
"RTN","LA7UCFG",258,0)
 D KEYHDR I QFLG D EXIT Q
"RTN","LA7UCFG",259,0)
 S LRNAM="" F  S LRNAM=$O(^TMP("LA7UCFG",$J,LRNAM)) Q:LRNAM=""!(QFLG)  D
"RTN","LA7UCFG",260,0)
 . S LRID=0 F  S LRID=$O(^TMP("LA7UCFG",$J,LRNAM,LRID)) Q:'LRID  D
"RTN","LA7UCFG",261,0)
 . . I $Y+4>IOSL!'PG D KEYHDR I QFLG Q
"RTN","LA7UCFG",262,0)
 . . W !,$J(LRID,9),?10,LRNAM
"RTN","LA7UCFG",263,0)
 . . S LRK="" F  S LRK=$O(^TMP("LA7UCFG",$J,LRNAM,LRID,LRK)) Q:LRK=""  D
"RTN","LA7UCFG",264,0)
 . . . W ?KTAB(LRK),"X"
"RTN","LA7UCFG",265,0)
 I '$D(^TMP("LA7UCFG",$J)) W !," ** NO USERS FOR SELECTED LAB KEY(S) **"
"RTN","LA7UCFG",266,0)
 ;
"RTN","LA7UCFG",267,0)
 ;
"RTN","LA7UCFG",268,0)
EXIT ;
"RTN","LA7UCFG",269,0)
 K ^TMP("LA7UCFG",$J)
"RTN","LA7UCFG",270,0)
 I $E(IOST,1,2)="C-"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","LA7UCFG",271,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","LA7UCFG",272,0)
 D ^%ZISC
"RTN","LA7UCFG",273,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7UCFG",274,0)
 Q
"RTN","LA7UCFG",275,0)
 ;
"RTN","LA7UCFG",276,0)
 ;
"RTN","LA7UCFG",277,0)
KEYHDR ;header for security key report
"RTN","LA7UCFG",278,0)
 I $E(IOST,1,2)="C-" S SS=22-$Y F JJ=1:1:SS W !
"RTN","LA7UCFG",279,0)
 I $E(IOST,1,2)="C-",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","LA7UCFG",280,0)
 I $Y!($E(IOST,1,2)="C-") W @IOF
"RTN","LA7UCFG",281,0)
 S PG=PG+1
"RTN","LA7UCFG",282,0)
 W !,PRTDT,?IOM-10,"Page: ",PG
"RTN","LA7UCFG",283,0)
 S LIN(1)="HOLDERS OF LAB KEYS"
"RTN","LA7UCFG",284,0)
 F I=1:1 Q:'$D(LIN(I))  W !,?(IOM\2-($L(LIN(I))\2)),LIN(I)
"RTN","LA7UCFG",285,0)
 W !!?1,"DUZ/ID",?10,"NAME" S TAB=40,I="" F  S I=$O(LRKEY(I)) Q:I=""  S KTAB(I)=TAB+($L(I)/2) W ?TAB,I S TAB=TAB+$L(I)+1
"RTN","LA7UCFG",286,0)
 W !,LN
"RTN","LA7UCFG",287,0)
 Q
"RTN","LA7UCFG",288,0)
 ;
"RTN","LA7UCFG",289,0)
 ;
"RTN","LA7UCFG1")
0^18^B29526912
"RTN","LA7UCFG1",1,0)
LA7UCFG1 ;DALOI/JMC - Configure Lab Universal Interface ;3/15/16  15:42
"RTN","LA7UCFG1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**88**;Sep 27, 1994;Build 10
"RTN","LA7UCFG1",3,0)
 ;
"RTN","LA7UCFG1",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7UCFG1",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7UCFG1",6,0)
 ;
"RTN","LA7UCFG1",7,0)
 Q
"RTN","LA7UCFG1",8,0)
 ;
"RTN","LA7UCFG1",9,0)
ENACK ;entry point to enable enhanced ack mode prompts
"RTN","LA7UCFG1",10,0)
 ;
"RTN","LA7UCFG1",11,0)
 N DIR,LA7UPDATE,LANODE,LAHLVERSION,LAHLACKCODE,LA101,LAIEN,LAX,X,Y
"RTN","LA7UCFG1",12,0)
 ;
"RTN","LA7UCFG1",13,0)
 ;I '$$GET^XPAR("SYS^PKG","LA UI AUTO RELEASE MASTER",1,"Q") W !!,"Auto Release of Results is NOT Enabled." Q
"RTN","LA7UCFG1",14,0)
 ;
"RTN","LA7UCFG1",15,0)
 S LAHLVERSION=$$FIND1^DIC(771.5,"","OX","2.5.1")
"RTN","LA7UCFG1",16,0)
 I LAHLVERSION<1 D  Q
"RTN","LA7UCFG1",17,0)
 . W !,"Unable to check/update Lab UI protocols"
"RTN","LA7UCFG1",18,0)
 . W !," - could not identify HL7 v2.5.1 version entry in file #771.5"
"RTN","LA7UCFG1",19,0)
 ;
"RTN","LA7UCFG1",20,0)
 S LAHLACKCODE=$$FIND1^DIC(779.003,"","OX","AL")
"RTN","LA7UCFG1",21,0)
 I LAHLACKCODE<1 D  Q
"RTN","LA7UCFG1",22,0)
 . W !,"Unable to check/update Lab UI protocols"
"RTN","LA7UCFG1",23,0)
 . W !," - could not identify HL7 'AL' ACK condition in file #779.003"
"RTN","LA7UCFG1",24,0)
 ;
"RTN","LA7UCFG1",25,0)
 S LA7UPDATE=0
"RTN","LA7UCFG1",26,0)
 S LANODE="^ORD(101,""B"",""LA7UI"")"
"RTN","LA7UCFG1",27,0)
 F  S LANODE=$Q(@LANODE) Q:LANODE=""  Q:$QS(LANODE,2)'="B"  Q:$QS(LANODE,3)'?1"LA7UI"1.E  D
"RTN","LA7UCFG1",28,0)
 . S LAX=$QS(LANODE,3),LA101=$QS(LANODE,4)
"RTN","LA7UCFG1",29,0)
 . I LAX["2.2" S LA7UPDATE=1 ;not updated to 2.5.1
"RTN","LA7UCFG1",30,0)
 . S LAIEN=LA101_","
"RTN","LA7UCFG1",31,0)
 . I $$GET1^DIQ(101,LAIEN,4,"I")="E",($$GET1^DIQ(101,LAIEN,770.8,"I")'=LAHLACKCODE) S LA7UPDATE=2 ;not updated to enhanced acknowledgement mode
"RTN","LA7UCFG1",32,0)
 ;
"RTN","LA7UCFG1",33,0)
 I 'LA7UPDATE D  Q
"RTN","LA7UCFG1",34,0)
 . W !!,"All Lab UI protocols in file #101 already updated to HL7 version 2.5.1."
"RTN","LA7UCFG1",35,0)
 . W !,"All Lab UI protocols already updated to HL7 Enhanced Mode Acknowledgments."
"RTN","LA7UCFG1",36,0)
 ;
"RTN","LA7UCFG1",37,0)
 W ! S DIR(0)="YO",DIR("B")="No",DIR("A")="Has the Lab UI COTS driver been upgraded to send HL7 v2.5.1 messages"
"RTN","LA7UCFG1",38,0)
 S DIR("?",1)="  Enter either 'Y' or 'N'."
"RTN","LA7UCFG1",39,0)
 S DIR("?",2)=" "
"RTN","LA7UCFG1",40,0)
 S DIR("?",3)="  This normally involves a driver update on the COTS system"
"RTN","LA7UCFG1",41,0)
 S DIR("?",4)="  to allow the COTS system to send HL7 messages indicating"
"RTN","LA7UCFG1",42,0)
 S DIR("?",5)="  either HL7 v2.2 or v2.5.1.  Contact your Laboratory Information"
"RTN","LA7UCFG1",43,0)
 S DIR("?")="  Manager to confirm the status of the driver update."
"RTN","LA7UCFG1",44,0)
 D ^DIR K DIR I $D(DIRUT)!'Y Q
"RTN","LA7UCFG1",45,0)
 ;
"RTN","LA7UCFG1",46,0)
 W ! S DIR(0)="YO",DIR("B")="No",DIR("A")="Implement enhanced acknowledgement mode transmission" D ^DIR K DIR I $D(DIRUT)!'Y Q
"RTN","LA7UCFG1",47,0)
 S LA7UPDATE=2
"RTN","LA7UCFG1",48,0)
 ;
"RTN","LA7UCFG1",49,0)
 D FILE101(LA7UPDATE)
"RTN","LA7UCFG1",50,0)
 ;
"RTN","LA7UCFG1",51,0)
 Q
"RTN","LA7UCFG1",52,0)
 ;
"RTN","LA7UCFG1",53,0)
 ;
"RTN","LA7UCFG1",54,0)
FILE101(LA7UPDATE) ; Update Lab UI protocols to HL7 v2.5.1
"RTN","LA7UCFG1",55,0)
 ;
"RTN","LA7UCFG1",56,0)
 ; Call with LA7UPDATE = 1 (update HL7 version on protocols)
"RTN","LA7UCFG1",57,0)
 ;                       2 (update HL7 version and ACK codes to use enhance mode)
"RTN","LA7UCFG1",58,0)
 ;
"RTN","LA7UCFG1",59,0)
 N DIERR,I,LA101,LAFDA,LAHLACKCODE,LAHLVERSION,LAIEN,LAMSG,LANODE,LATXT,LAX
"RTN","LA7UCFG1",60,0)
 ;
"RTN","LA7UCFG1",61,0)
 ; Reference to file #771.5 supported by ICR DBIA1169-A
"RTN","LA7UCFG1",62,0)
 ; Check LA7UI protocols and set to HL v2.5.1
"RTN","LA7UCFG1",63,0)
 ;
"RTN","LA7UCFG1",64,0)
 D BMES("Starting checking and updating related Lab UI protocols in file #101")
"RTN","LA7UCFG1",65,0)
 ;
"RTN","LA7UCFG1",66,0)
 S LAHLVERSION=$$FIND1^DIC(771.5,"","OX","2.5.1")
"RTN","LA7UCFG1",67,0)
 I LAHLVERSION<1 D  Q
"RTN","LA7UCFG1",68,0)
 . D BMES("Unable to check/update Lab UI protocols")
"RTN","LA7UCFG1",69,0)
 . D BMES(" - could not identify HL7 v2.5.1 version entry in file #771.5")
"RTN","LA7UCFG1",70,0)
 . D BMES("Aborted checking and updating related Lab UI protocols in file #101")
"RTN","LA7UCFG1",71,0)
 ;
"RTN","LA7UCFG1",72,0)
 I LA7UPDATE=2 D  Q:LAHLACKCODE<1
"RTN","LA7UCFG1",73,0)
 . S LAHLACKCODE=$$FIND1^DIC(779.003,"","OX","AL")
"RTN","LA7UCFG1",74,0)
 . I LAHLACKCODE<1 D  Q
"RTN","LA7UCFG1",75,0)
 . . D BMES("Unable to check/update Lab UI protocols")
"RTN","LA7UCFG1",76,0)
 . . D BMES(" - could not identify HL7 'AL' ACK condition in file #779.003")
"RTN","LA7UCFG1",77,0)
 . . D BMES("Aborted checking and updating related Lab UI protocols in file #101")
"RTN","LA7UCFG1",78,0)
 ;
"RTN","LA7UCFG1",79,0)
 S LANODE="^ORD(101,""B"",""LA7UI"")"
"RTN","LA7UCFG1",80,0)
 F  S LANODE=$Q(@LANODE) Q:LANODE=""  Q:$QS(LANODE,2)'="B"  Q:$QS(LANODE,3)'?1"LA7UI"1.E  D
"RTN","LA7UCFG1",81,0)
 . S LAX=$QS(LANODE,3),LA101=$QS(LANODE,4)
"RTN","LA7UCFG1",82,0)
 . I LAX'["2.2" D BMES("Protocol "_LAX_" already updated to HL7 version 2.5.1")
"RTN","LA7UCFG1",83,0)
 . I 'LA101 Q
"RTN","LA7UCFG1",84,0)
 . K LAFDA,LAIEN,DIERR,LAMSG,LATXT
"RTN","LA7UCFG1",85,0)
 . S LAIEN=LA101_","
"RTN","LA7UCFG1",86,0)
 . I LAX["2.2" S LAFDA(1,101,LAIEN,.01)=$P(LAX," 2.2")
"RTN","LA7UCFG1",87,0)
 . I $$GET1^DIQ(101,LAIEN,770.95)="2.2" S LAFDA(1,101,LAIEN,770.95)=LAHLVERSION
"RTN","LA7UCFG1",88,0)
 . I LA7UPDATE=2,$$GET1^DIQ(101,LAIEN,4,"I")="E" D
"RTN","LA7UCFG1",89,0)
 . . S LAFDA(1,101,LAIEN,770.8)=LAHLACKCODE
"RTN","LA7UCFG1",90,0)
 . . S LAFDA(1,101,LAIEN,770.9)=LAHLACKCODE
"RTN","LA7UCFG1",91,0)
 . I '$D(LAFDA) Q
"RTN","LA7UCFG1",92,0)
 . D FILE^DIE("S","LAFDA(1)","LAMSG")
"RTN","LA7UCFG1",93,0)
 . I $G(LAMSG("DIERR")) D  Q
"RTN","LA7UCFG1",94,0)
 . . D BMES("Protocol "_LAX_"could not be updated.")
"RTN","LA7UCFG1",95,0)
 . . D MSG^DIALOG("AEST",.LATXT,80,0,"LAMSG")
"RTN","LA7UCFG1",96,0)
 . . F I=1:1:LATXT D BMES("FileMan error: "_LATXT(I))
"RTN","LA7UCFG1",97,0)
 . I $D(LAFDA(1,101,LAIEN,.01)) D BMES("Protocol "_LAX_" name changed to "_$$GET1^DIQ(101,LAIEN,.01)_".")
"RTN","LA7UCFG1",98,0)
 . I $D(LAFDA(1,101,LAIEN,770.95)) D BMES("Protocol "_LAX_" updated to HL7 version 2.5.1.")
"RTN","LA7UCFG1",99,0)
 . I $D(LAFDA(1,101,LAIEN,770.8)) D BMES("Protocol "_LAX_" updated to HL7 Enhanced Mode Acknowledgments.")
"RTN","LA7UCFG1",100,0)
 . D CHECKWP(LAIEN)
"RTN","LA7UCFG1",101,0)
 ;
"RTN","LA7UCFG1",102,0)
 D BMES("Finished checking and updating related Lab UI protocols in file #101")
"RTN","LA7UCFG1",103,0)
 Q
"RTN","LA7UCFG1",104,0)
 ;
"RTN","LA7UCFG1",105,0)
 ;
"RTN","LA7UCFG1",106,0)
CHECKWP(LAIEN) ; Check description (WP) field on protocol and update text.
"RTN","LA7UCFG1",107,0)
 ; Change reference to v2.2 to v2.5.1 in description.
"RTN","LA7UCFG1",108,0)
 ; Call with LAIEN = IENS of entry in file #101
"RTN","LA7UCFG1",109,0)
 ;
"RTN","LA7UCFG1",110,0)
 N FR,I,LAMSG,LATXT,LAX,WP,X
"RTN","LA7UCFG1",111,0)
 ;
"RTN","LA7UCFG1",112,0)
 S LAX=$$GET1^DIQ(101,LAIEN,.01)
"RTN","LA7UCFG1",113,0)
 S X=$$GET1^DIQ(101,LAIEN,3.5,"","WP")
"RTN","LA7UCFG1",114,0)
 ;
"RTN","LA7UCFG1",115,0)
 S I=0,FR("v2.2")="v2.5.1"
"RTN","LA7UCFG1",116,0)
 F  S I=$O(WP(I)) Q:'I  S WP(I)=$$REPLACE^XLFSTR(WP(I),.FR)
"RTN","LA7UCFG1",117,0)
 ;
"RTN","LA7UCFG1",118,0)
 D WP^DIE(101,LAIEN,3.5,"","WP","LAMSG")
"RTN","LA7UCFG1",119,0)
 I $G(LAMSG("DIERR")) D
"RTN","LA7UCFG1",120,0)
 . D BMES("Protocol "_LAX_" description field (#3.5) could not be updated.")
"RTN","LA7UCFG1",121,0)
 . D MSG^DIALOG("AEST",.LATXT,80,0,"LAMSG")
"RTN","LA7UCFG1",122,0)
 . F I=1:1:LATXT D BMES("FileMan error: "_LATXT(I))
"RTN","LA7UCFG1",123,0)
 ;
"RTN","LA7UCFG1",124,0)
 Q
"RTN","LA7UCFG1",125,0)
 ;
"RTN","LA7UCFG1",126,0)
 ;
"RTN","LA7UCFG1",127,0)
BMES(STR) ;
"RTN","LA7UCFG1",128,0)
 ; Write string
"RTN","LA7UCFG1",129,0)
 D BMES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","LA7UCFG1",130,0)
 Q
"RTN","LA7UCFG1",131,0)
 ;
"RTN","LA7UCFG1",132,0)
 ;
"RTN","LA7UIO1")
0^4^B75417661
"RTN","LA7UIO1",1,0)
LA7UIO1 ;DALOI/JMC - Process Download Message for an entry in 62.48 ;12/11/15  16:39
"RTN","LA7UIO1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**66,74,88**;Sep 27, 1994;Build 10
"RTN","LA7UIO1",3,0)
 ;
"RTN","LA7UIO1",4,0)
 ; Reference to PROTOCOL file (#101) supported by ICR #872
"RTN","LA7UIO1",5,0)
 ;
"RTN","LA7UIO1",6,0)
 Q
"RTN","LA7UIO1",7,0)
 ;
"RTN","LA7UIO1",8,0)
BUILD ; Build one accession into an HL7 message
"RTN","LA7UIO1",9,0)
 ;
"RTN","LA7UIO1",10,0)
 N GBL,HL,I,LA760,LA761,LA7CDT,LA7CMT,LA7CS,LA7ERR,LA7FAC,LA7FS,LA7ECH,LA7HLP,LA7I,LA7ID,LA7LINK,LA7NVAF,LA7OBRSN,LA7PIDSN,LA7SCMT,LA7SID,LA7SPEC,LA7SUB,LA7X,LA7Y
"RTN","LA7UIO1",11,0)
 S GBL="^TMP(""HLS"","_$J_")"
"RTN","LA7UIO1",12,0)
 ;
"RTN","LA7UIO1",13,0)
 I '$D(ZTQUEUED),$G(LRLL) W:$X+5>IOM !,$S($G(LRTYPE):"Cup",1:"Seq"),": " W LA76822,", "
"RTN","LA7UIO1",14,0)
 ;
"RTN","LA7UIO1",15,0)
 S LA7CNT=0
"RTN","LA7UIO1",16,0)
 F I=0,.1,.2,.3,3 S LA76802(I)=$G(^LRO(68,LA768,1,LA76801,1,LA76802,I))
"RTN","LA7UIO1",17,0)
 S LA7X=LA76802(3)
"RTN","LA7UIO1",18,0)
 ; Draw time
"RTN","LA7UIO1",19,0)
 S LA7CDT=+LA7X
"RTN","LA7UIO1",20,0)
 ;
"RTN","LA7UIO1",21,0)
 ; Specimen comment if any, strip "~"
"RTN","LA7UIO1",22,0)
 S LA7SCMT=$TR($P(LA7X,"^",6),"~")
"RTN","LA7UIO1",23,0)
 ;
"RTN","LA7UIO1",24,0)
 ; Specimen
"RTN","LA7UIO1",25,0)
 S LA761=+$G(^LRO(68,LA768,1,LA76801,1,LA76802,5,1,0))
"RTN","LA7UIO1",26,0)
 ; Accession/unique ID - Long (UID) or short (accession #) sample ID
"RTN","LA7UIO1",27,0)
 S LA7ACC=$P(LA76802(.2),"^"),LA7UID=$P(LA76802(.3),"^"),LA7X=$G(^LRO(68,LA768,.4))
"RTN","LA7UIO1",28,0)
 I $P(LA7X,"^",2)="S" S LA7SID=$$RJ^XLFSTR(LA76802,+$P(LA7X,"^",3),"0")
"RTN","LA7UIO1",29,0)
 E  S LA7SID=LA7UID
"RTN","LA7UIO1",30,0)
 ;
"RTN","LA7UIO1",31,0)
 ; Start message
"RTN","LA7UIO1",32,0)
 D INIT Q:$G(HL)
"RTN","LA7UIO1",33,0)
 ;
"RTN","LA7UIO1",34,0)
 ; Setup links and subscriber array for HL7 message generation
"RTN","LA7UIO1",35,0)
 S LA76248(0)=$G(^LAHM(62.48,LA76248,0)),LA7Y=$P(LA76248(0),"^")
"RTN","LA7UIO1",36,0)
 I $E(LA7Y,1,5)'="LA7UI"!($P(LA76248(0),"^",9)'=1) Q
"RTN","LA7UIO1",37,0)
 ;
"RTN","LA7UIO1",38,0)
 ; Check if interface has been updagraded to HL7 v2.5.1 otherwise use v2.2 protocol
"RTN","LA7UIO1",39,0)
 S LA7SUB="LA7UI ORM-O01 SUBS"
"RTN","LA7UIO1",40,0)
 S X=$O(^ORD(101,"B",LA7SUB,0))
"RTN","LA7UIO1",41,0)
 I X<1 S LA7SUB="LA7UI ORM-O01 SUBS 2.2"
"RTN","LA7UIO1",42,0)
 ;
"RTN","LA7UIO1",43,0)
 S LA7LINK=LA7SUB_"^"_LA7Y
"RTN","LA7UIO1",44,0)
 S LA7FAC=$P($$SITE^VASITE(DT),"^",3)
"RTN","LA7UIO1",45,0)
 S LA7HLP("SUBSCRIBER")="^^"_LA7FAC_"^"_LA7Y_"^"
"RTN","LA7UIO1",46,0)
 ; Following line used when debugging
"RTN","LA7UIO1",47,0)
 ;S $P(LA7HLP("SUBSCRIBER"),"^",8)="1-1-2"
"RTN","LA7UIO1",48,0)
 ;
"RTN","LA7UIO1",49,0)
 ; Build segments PID, PV1, and ORC/OBR segment for each test to be sent
"RTN","LA7UIO1",50,0)
 D PID,PV1
"RTN","LA7UIO1",51,0)
 S (LA7I,LA7OBRSN)=0
"RTN","LA7UIO1",52,0)
 F  S LA7I=$O(LA7ACC(LA7I)) Q:'LA7I  D ORC,OBR
"RTN","LA7UIO1",53,0)
 ; Build entry in MESSAGE QUEUE file 62.49
"RTN","LA7UIO1",54,0)
 D SENDMSG
"RTN","LA7UIO1",55,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7UIO1",56,0)
 D KVAR^LRX
"RTN","LA7UIO1",57,0)
 Q
"RTN","LA7UIO1",58,0)
 ;
"RTN","LA7UIO1",59,0)
 ;
"RTN","LA7UIO1",60,0)
INIT ; Create/initialize HL message
"RTN","LA7UIO1",61,0)
 ;
"RTN","LA7UIO1",62,0)
 N LA7EVENT,X
"RTN","LA7UIO1",63,0)
 ;
"RTN","LA7UIO1",64,0)
 K @GBL
"RTN","LA7UIO1",65,0)
 S (LA76249,LA7NVAF,LA7PIDSN)=0
"RTN","LA7UIO1",66,0)
 ;
"RTN","LA7UIO1",67,0)
 ; Check if interface has been updagraded to HL7 v2.5.1 otherwise use v2.2 protocol
"RTN","LA7UIO1",68,0)
 S LA7EVENT="LA7UI ORM-O01 EVENT"
"RTN","LA7UIO1",69,0)
 S X=$O(^ORD(101,"B",LA7EVENT,0))
"RTN","LA7UIO1",70,0)
 I X<1 S LA7EVENT="LA7UI ORM-O01 EVENT 2.2"
"RTN","LA7UIO1",71,0)
 D STARTMSG^LA7VHLU(LA7EVENT,.LA76249)
"RTN","LA7UIO1",72,0)
 ;
"RTN","LA7UIO1",73,0)
 S LA7ID=$P(LRAUTO,"^",1)_"-O-"_LA7UID
"RTN","LA7UIO1",74,0)
 ;
"RTN","LA7UIO1",75,0)
 K ^TMP("LA7-ID",$J)
"RTN","LA7UIO1",76,0)
 D SETID^LA7VHLU1(LA76249,"",LA7ID,1)
"RTN","LA7UIO1",77,0)
 D SETID^LA7VHLU1(LA76249,"",LA7UID,0)
"RTN","LA7UIO1",78,0)
 D SETID^LA7VHLU1(LA76249,"",LA7ACC,0)
"RTN","LA7UIO1",79,0)
 S LA7CS=$E(LA7ECH,1)
"RTN","LA7UIO1",80,0)
 I $G(HL) S LA7ERR=28 D UPDT6249^LA7VORM1
"RTN","LA7UIO1",81,0)
 Q
"RTN","LA7UIO1",82,0)
 ;
"RTN","LA7UIO1",83,0)
 ;
"RTN","LA7UIO1",84,0)
PID ; Build PID segment
"RTN","LA7UIO1",85,0)
 N LA7DATA,LA7FLAG,NAME,PID
"RTN","LA7UIO1",86,0)
 S LRDFN=+LA7ACC0,LRDPF=$P(^LR(LRDFN,0),"^",2),DFN=$P(^(0),"^",3)
"RTN","LA7UIO1",87,0)
 D DEM^LRX
"RTN","LA7UIO1",88,0)
 ;
"RTN","LA7UIO1",89,0)
 S PID(0)="PID"
"RTN","LA7UIO1",90,0)
 S PID(1)=1
"RTN","LA7UIO1",91,0)
 S PID(3)=$$M11^HLFNC(LRDFN)
"RTN","LA7UIO1",92,0)
 ;
"RTN","LA7UIO1",93,0)
 ; Pass patient and referral files through name standardization.
"RTN","LA7UIO1",94,0)
 ; Don't pass lab control and other file's "paient" names thru name standardization as it affects name order.
"RTN","LA7UIO1",95,0)
 I LRDPF?1(1"2",1"67",1"200") S NAME("FILE")=LRDPF,NAME("FIELD")=.01,NAME("IENS")=DFN,LA7FLAG="S"
"RTN","LA7UIO1",96,0)
 E  S NAME("FAMILY")=$P(PNM,","),NAME("GIVEN")=$P(PNM,",",2),LA7FLAG=""
"RTN","LA7UIO1",97,0)
 S PID(5)=$$HLNAME^XLFNAME(.NAME,LA7FLAG,LA7CS)
"RTN","LA7UIO1",98,0)
 ;
"RTN","LA7UIO1",99,0)
 ; Date of birth
"RTN","LA7UIO1",100,0)
 I DOB S PID(7)=$$FMTHL7^XLFDT(DOB)
"RTN","LA7UIO1",101,0)
 S PID(8)=$S(SEX'="":SEX,1:"U")
"RTN","LA7UIO1",102,0)
 ;
"RTN","LA7UIO1",103,0)
 ; Race
"RTN","LA7UIO1",104,0)
 D RACE
"RTN","LA7UIO1",105,0)
 ;
"RTN","LA7UIO1",106,0)
 ; Patient's SSN
"RTN","LA7UIO1",107,0)
 I SSN'="" S PID(19)=SSN
"RTN","LA7UIO1",108,0)
 ;
"RTN","LA7UIO1",109,0)
 D BUILDSEG^LA7VHLU(.PID,.LA7DATA,LA7FS)
"RTN","LA7UIO1",110,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7UIO1",111,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7UIO1",112,0)
 D SETID^LA7VHLU1(LA76249,"",PNM,0)
"RTN","LA7UIO1",113,0)
 Q
"RTN","LA7UIO1",114,0)
 ;
"RTN","LA7UIO1",115,0)
 ;
"RTN","LA7UIO1",116,0)
PV1 ; Build PV1 segment
"RTN","LA7UIO1",117,0)
 N LA7PV1,LA7X
"RTN","LA7UIO1",118,0)
 D PV1^LA7VPID(LRDFN,.LA7PV1,LA7FS,LA7ECH)
"RTN","LA7UIO1",119,0)
 ; If not inpatient use patient location from Accession
"RTN","LA7UIO1",120,0)
 I $P(LA7PV1(0),LA7FS,3)'="I" S LA7X=$P($G(LA76802(0)),"^",7) S LA7X=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH) S $P(LA7PV1(0),LA7FS,4)=LA7X
"RTN","LA7UIO1",121,0)
 ;
"RTN","LA7UIO1",122,0)
 D FILESEG^LA7VHLU(GBL,.LA7PV1)
"RTN","LA7UIO1",123,0)
 D FILE6249^LA7VHLU(LA76249,.LA7PV1)
"RTN","LA7UIO1",124,0)
 Q
"RTN","LA7UIO1",125,0)
 ;
"RTN","LA7UIO1",126,0)
 ;
"RTN","LA7UIO1",127,0)
ORC ; Build ORC segment
"RTN","LA7UIO1",128,0)
 N LA7DATA,ORC
"RTN","LA7UIO1",129,0)
 S ORC(0)="ORC"
"RTN","LA7UIO1",130,0)
 S ORC(1)="NW"
"RTN","LA7UIO1",131,0)
 ;
"RTN","LA7UIO1",132,0)
 ; Placer/filler order number - sample ID
"RTN","LA7UIO1",133,0)
 S ORC(2)=$$ORC2^LA7VORC(LA7SID,LA7FS,LA7ECH)
"RTN","LA7UIO1",134,0)
 S ORC(3)=$$ORC3^LA7VORC(LA7SID,LA7FS,LA7ECH)
"RTN","LA7UIO1",135,0)
 ;
"RTN","LA7UIO1",136,0)
 ; Order/draw time - if no order date/time then try draw time
"RTN","LA7UIO1",137,0)
 I $P(LA76802(0),"^",4) S ORC(9)=$$ORC9^LA7VORC($P(LA76802(0),"^",4))
"RTN","LA7UIO1",138,0)
 I '$P(LA76802(0),"^",4),$P(LA76802(3),"^") S ORC(9)=$$ORC9^LA7VORC($P(LA76802(3),"^"))
"RTN","LA7UIO1",139,0)
 ;
"RTN","LA7UIO1",140,0)
 ; Provider
"RTN","LA7UIO1",141,0)
 S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)
"RTN","LA7UIO1",142,0)
 S ORC(12)=$$ORC12^LA7VORC($P(LA76802(0),"^",8),$P(LA7X,"^",3),LA7FS,LA7ECH,2)
"RTN","LA7UIO1",143,0)
 ; Provider Callback Number ;**88
"RTN","LA7UIO1",144,0)
 S ORC(14)=$$ORC14^LA7VORC($P(LA76802(0),"^",8),DT,LA7FS,LA7ECH)
"RTN","LA7UIO1",145,0)
 D BUILDSEG^LA7VHLU(.ORC,.LA7DATA,LA7FS)
"RTN","LA7UIO1",146,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7UIO1",147,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7UIO1",148,0)
 Q
"RTN","LA7UIO1",149,0)
 ;
"RTN","LA7UIO1",150,0)
 ;
"RTN","LA7UIO1",151,0)
OBR ; Build OBR segment
"RTN","LA7UIO1",152,0)
 N LA764,LA7ALT,LA7CADR,LA7NLT,LA7TCMT
"RTN","LA7UIO1",153,0)
 K OBR
"RTN","LA7UIO1",154,0)
 ;
"RTN","LA7UIO1",155,0)
 S LA760=+LA7ACC(LA7I)
"RTN","LA7UIO1",156,0)
 S LA764=+$P($G(^LAB(60,LA760,64)),"^")
"RTN","LA7UIO1",157,0)
 S LA7NLT=$P($G(^LAM(LA764,0)),"^",2)
"RTN","LA7UIO1",158,0)
 S LA7TMP=$G(^TMP("LA7",$J,LA7INST,LA7I))
"RTN","LA7UIO1",159,0)
 Q:'LA7TMP
"RTN","LA7UIO1",160,0)
 ;
"RTN","LA7UIO1",161,0)
 S LA7CODE=$P(LA7TMP,"^",6),LA7DATA=$P(LA7TMP,"^",7)
"RTN","LA7UIO1",162,0)
 S OBR(0)="OBR"
"RTN","LA7UIO1",163,0)
 S OBR(1)=$$OBR1^LA7VOBR(.LA7OBRSN)
"RTN","LA7UIO1",164,0)
 ; Placer/filler order number - sample ID
"RTN","LA7UIO1",165,0)
 S OBR(2)=$$OBR2^LA7VOBR(LA7SID,LA7FS,LA7ECH)
"RTN","LA7UIO1",166,0)
 S OBR(3)=$$OBR3^LA7VOBR(LA7SID,LA7FS,LA7ECH)
"RTN","LA7UIO1",167,0)
 ; Test order code
"RTN","LA7UIO1",168,0)
 S LA7ALT=LA7CODE_"^"_$$GET1^DIQ(60,LA760_",",.01)_"^"_"99001"
"RTN","LA7UIO1",169,0)
 S OBR(4)=$$OBR4^LA7VOBR(LA7NLT,LA760,LA7ALT,LA7FS,LA7ECH)
"RTN","LA7UIO1",170,0)
 ; Draw time.
"RTN","LA7UIO1",171,0)
 I $G(LA7CDT) S OBR(7)=$$OBR7^LA7VOBR(LA7CDT)
"RTN","LA7UIO1",172,0)
 ; Infection warning.
"RTN","LA7UIO1",173,0)
 S OBR(12)=$$OBR12^LA7VOBR(LRDFN,LA7FS,LA7ECH)
"RTN","LA7UIO1",174,0)
 ;
"RTN","LA7UIO1",175,0)
 ; Specimen comment
"RTN","LA7UIO1",176,0)
 ; If no specimen comment
"RTN","LA7UIO1",177,0)
 ;  then check order for test comments on test
"RTN","LA7UIO1",178,0)
 ;   or parent test if panel exploded
"RTN","LA7UIO1",179,0)
 I LA7SCMT'="" S OBR(13)=$$OBR13^LA7VOBR(LA7SCMT,LA7FS,LA7ECH)
"RTN","LA7UIO1",180,0)
 I LA7SCMT="" D
"RTN","LA7UIO1",181,0)
 . S LA7TCMT=$$TESTCMT(LA768,LA76801,LA76802,LA760)
"RTN","LA7UIO1",182,0)
 . I LA7TCMT="" D
"RTN","LA7UIO1",183,0)
 . . N LA760P
"RTN","LA7UIO1",184,0)
 . . S LA760P=$P(LA7ACC(LA7I),"^",3)
"RTN","LA7UIO1",185,0)
 . . I LA760P>0,LA760'=LA760P S LA7TCMT=$$TESTCMT(LA768,LA76801,LA76802,LA760P)
"RTN","LA7UIO1",186,0)
 . I LA7TCMT'="" S OBR(13)=$$OBR13^LA7VOBR(LA7TCMT,LA7FS,LA7ECH)
"RTN","LA7UIO1",187,0)
 ;
"RTN","LA7UIO1",188,0)
 ; Lab Arrival Time
"RTN","LA7UIO1",189,0)
 S OBR(14)=$$OBR14^LA7VOBR($P(LA76802(3),"^",3))
"RTN","LA7UIO1",190,0)
 ; HL7 code from Topography
"RTN","LA7UIO1",191,0)
 S LA7X=$S(LRDPF=62.3:"^^^CONTROL",1:"")
"RTN","LA7UIO1",192,0)
 S OBR(15)=$$OBR15^LA7VOBR(LA761,"",LA7X,LA7FS,LA7ECH)
"RTN","LA7UIO1",193,0)
 ; Ordering provider
"RTN","LA7UIO1",194,0)
 S LA7X=$$FNDOLOC^LA7VHLU2(LA7UID)
"RTN","LA7UIO1",195,0)
 S OBR(16)=$$ORC12^LA7VORC($P(LA76802(0),"^",8),$P(LA7X,"^",3),LA7FS,LA7ECH,2)
"RTN","LA7UIO1",196,0)
 ; Provider Callback Number ;**88
"RTN","LA7UIO1",197,0)
 S OBR(17)=$$ORC14^LA7VORC($P(LA76802(0),"^",8),DT,LA7FS,LA7ECH)
"RTN","LA7UIO1",198,0)
 ; Placer's field #1 - instrument name^card address
"RTN","LA7UIO1",199,0)
 K LA7X
"RTN","LA7UIO1",200,0)
 S LA7X(1)=$P(LRAUTO,"^")
"RTN","LA7UIO1",201,0)
 S LA7CADR=$P($G(^LAB(62.4,LRINST,9)),U,9)
"RTN","LA7UIO1",202,0)
 I LA7CADR'="" S LA7X(2)=LA7CADR
"RTN","LA7UIO1",203,0)
 S OBR(18)=$$OBR18^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7UIO1",204,0)
 ; Placer's field #2 - tray^cup^lraa^lrad^lran^lracc^lruid
"RTN","LA7UIO1",205,0)
 K LA7X
"RTN","LA7UIO1",206,0)
 ; No tray/cup if don't send tray/cup flag.
"RTN","LA7UIO1",207,0)
 I $G(LRFORCE) S:LA76821 LA7X(1)=LA76821 S:LA76822 LA7X(2)=LA76822
"RTN","LA7UIO1",208,0)
 S LA7X(3)=LA768,LA7X(4)=LA76801,LA7X(5)=LA76802,LA7X(6)=LA7ACC,LA7X(7)=LA7UID
"RTN","LA7UIO1",209,0)
 S OBR(19)=$$OBR19^LA7VOBR(.LA7X,LA7FS,LA7ECH)
"RTN","LA7UIO1",210,0)
 ;
"RTN","LA7UIO1",211,0)
 ; Test urgency
"RTN","LA7UIO1",212,0)
 S OBR(27)=$$OBR27^LA7VOBR("","",+$P(LA7ACC(LA7I),"^",2),LA7FS,LA7ECH)
"RTN","LA7UIO1",213,0)
 ;
"RTN","LA7UIO1",214,0)
 K LA7DATA
"RTN","LA7UIO1",215,0)
 D BUILDSEG^LA7VHLU(.OBR,.LA7DATA,LA7FS)
"RTN","LA7UIO1",216,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7UIO1",217,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7UIO1",218,0)
 Q
"RTN","LA7UIO1",219,0)
 ;
"RTN","LA7UIO1",220,0)
 ;
"RTN","LA7UIO1",221,0)
SENDMSG ; Send the HL7 message.
"RTN","LA7UIO1",222,0)
 N HLL,HLP
"RTN","LA7UIO1",223,0)
 S HLL("LINKS",1)=LA7LINK
"RTN","LA7UIO1",224,0)
 I $D(LA7HLP) M HLP=LA7HLP
"RTN","LA7UIO1",225,0)
 D GEN^LA7VHLU,UPDT6249^LA7VORM1
"RTN","LA7UIO1",226,0)
 Q
"RTN","LA7UIO1",227,0)
 ;
"RTN","LA7UIO1",228,0)
 ;
"RTN","LA7UIO1",229,0)
TESTCMT(LA768,LA76801,LA76802,LA760) ; Check and build order test comments
"RTN","LA7UIO1",230,0)
 ;
"RTN","LA7UIO1",231,0)
 ; Call with LA768 = IEN of accesseion area
"RTN","LA7UIO1",232,0)
 ;         LA76801 = FM accession date
"RTN","LA7UIO1",233,0)
 ;         LA76802 = accession number
"RTN","LA7UIO1",234,0)
 ;           LA760 = IEN of file #60 test
"RTN","LA7UIO1",235,0)
 ;
"RTN","LA7UIO1",236,0)
 ; Returns  LA7CMT = comments in a single string (truncated to 300 characters per HL7 standard)
"RTN","LA7UIO1",237,0)
 ;
"RTN","LA7UIO1",238,0)
 N LA7CMT,LA7I,LA7QUIT,LA7X,LA7Y,LRIEN,LRODT,LRSN
"RTN","LA7UIO1",239,0)
 ;
"RTN","LA7UIO1",240,0)
 S LA7CMT="",LRIEN=0
"RTN","LA7UIO1",241,0)
 S LA7Y=$G(^LRO(68,LA768,1,LA76801,1,LA76802,0))
"RTN","LA7UIO1",242,0)
 S LRODT=+$P(LA7Y,"^",4),LRSN=+$P(LA7Y,"^",5)
"RTN","LA7UIO1",243,0)
 I LRODT>0,LRSN>0 S LRIEN=$O(^LRO(69,LRODT,1,LRSN,2,"B",LA760,0))
"RTN","LA7UIO1",244,0)
 ;
"RTN","LA7UIO1",245,0)
 I LRIEN D
"RTN","LA7UIO1",246,0)
 . S (LA7I,LA7QUIT)=0,LA7X=""
"RTN","LA7UIO1",247,0)
 . F  S LA7I=$O(^LRO(69,LRODT,1,LRSN,2,LRIEN,1,LA7I)) Q:LA7I<1  D  Q:LA7QUIT
"RTN","LA7UIO1",248,0)
 . . S LA7X=$G(^LRO(69,LRODT,1,LRSN,2,LRIEN,1,LA7I,0))
"RTN","LA7UIO1",249,0)
 . . I $E(LA7X,1,10)="~For Test:" Q
"RTN","LA7UIO1",250,0)
 . . I LA7X'="" S LA7X=$TR(LA7X,"~","")
"RTN","LA7UIO1",251,0)
 . . I LA7CMT'="" S LA7X=" "_LA7X
"RTN","LA7UIO1",252,0)
 . . S LA7CMT=LA7CMT_LA7X
"RTN","LA7UIO1",253,0)
 . . I $L(LA7CMT)>300 S LA7CMT=$E(LA7CMT,1,300),LA7QUIT=1
"RTN","LA7UIO1",254,0)
 ;
"RTN","LA7UIO1",255,0)
 Q LA7CMT
"RTN","LA7UIO1",256,0)
 ;
"RTN","LA7UIO1",257,0)
 ;
"RTN","LA7UIO1",258,0)
RACE ; Build RACE field in PID segment
"RTN","LA7UIO1",259,0)
 ;
"RTN","LA7UIO1",260,0)
 N CNT,IEN,LA7X,LA7Y,RACE,RACENUM,X,Y
"RTN","LA7UIO1",261,0)
 ;
"RTN","LA7UIO1",262,0)
 S PID(10)=""
"RTN","LA7UIO1",263,0)
 ;
"RTN","LA7UIO1",264,0)
 ; if from PATIENT file (#2) then check RACE array (VADM(12).
"RTN","LA7UIO1",265,0)
 I LRDPF=2,$G(VADM(12)) D  Q
"RTN","LA7UIO1",266,0)
 . ; Loop through all races (CNT is repetition location)
"RTN","LA7UIO1",267,0)
 . S RACENUM=0
"RTN","LA7UIO1",268,0)
 . F CNT=1:1 S RACENUM=+$O(VADM(12,RACENUM)) Q:'RACENUM  D
"RTN","LA7UIO1",269,0)
 . . ; Fabricate race value -> RACE-METHOD
"RTN","LA7UIO1",270,0)
 . . S RACE=$$PTR2CODE^DGUTL4(+VADM(12,RACENUM),1,2)
"RTN","LA7UIO1",271,0)
 . . S X=$$PTR2CODE^DGUTL4(+$G(VADM(12,RACENUM,1)),3,2)
"RTN","LA7UIO1",272,0)
 . . S:X="" X="UNK"
"RTN","LA7UIO1",273,0)
 . . S RACE=RACE_"-"_X
"RTN","LA7UIO1",274,0)
 . . ; First triplet
"RTN","LA7UIO1",275,0)
 . . S LA7Y(10,CNT,1)=RACE
"RTN","LA7UIO1",276,0)
 . . S LA7Y(10,CNT,2)=$P(VADM(12,RACENUM),"^",2)
"RTN","LA7UIO1",277,0)
 . . S LA7Y(10,CNT,3)="HL70005"
"RTN","LA7UIO1",278,0)
 . . ; Second triplet
"RTN","LA7UIO1",279,0)
 . . S X=$$PTR2CODE^DGUTL4(+VADM(12,RACENUM),1,3)
"RTN","LA7UIO1",280,0)
 . . S LA7Y(10,CNT,4)=X
"RTN","LA7UIO1",281,0)
 . . S LA7Y(10,CNT,5)=$P(VADM(12,RACENUM),"^",2)
"RTN","LA7UIO1",282,0)
 . . S LA7Y(10,CNT,6)="CDC"
"RTN","LA7UIO1",283,0)
 . S IEN=0
"RTN","LA7UIO1",284,0)
 . F  S IEN=$O(LA7Y(10,IEN)) Q:IEN=""  D
"RTN","LA7UIO1",285,0)
 . . S LA7X=""
"RTN","LA7UIO1",286,0)
 . . F CNT=1:1:6 I LA7Y(10,IEN,CNT)'="" S $P(LA7X,$E(LA7ECH,1),CNT)=LA7Y(10,IEN,CNT)
"RTN","LA7UIO1",287,0)
 . . I LA7X="" Q
"RTN","LA7UIO1",288,0)
 . . I PID(10)'="" S PID(10)=PID(10)_$E(LA7ECH,2)
"RTN","LA7UIO1",289,0)
 . . S PID(10)=PID(10)_LA7X
"RTN","LA7UIO1",290,0)
 ;
"RTN","LA7UIO1",291,0)
 ; if from REFERRAL PATIENT file (#67) then check RACE field.
"RTN","LA7UIO1",292,0)
 I LRDPF=67 D  Q
"RTN","LA7UIO1",293,0)
 . S LA7X=$$GET1^DIQ(67,DFN_",",.06,"I")
"RTN","LA7UIO1",294,0)
 . I LA7X<1 Q
"RTN","LA7UIO1",295,0)
 . S PID(10)=$$PTR2CODE^DGUTL4(LA7X,1,2)
"RTN","LA7UIO1",296,0)
 . S $P(PID(10),$E(LA7ECH,1),2)=$$PTR2TEXT^DGUTL4(LA7X,1)
"RTN","LA7UIO1",297,0)
 . S $P(PID(10),$E(LA7ECH,1),3)="HL70005"
"RTN","LA7UIO1",298,0)
 ;
"RTN","LA7UIO1",299,0)
 Q
"RTN","LA7UTILB")
0^16^B23365722
"RTN","LA7UTILB",1,0)
LA7UTILB ;DALOI/JMC - Reprocess Lab HL7 Incoming Messages ;11/18/15  17:19
"RTN","LA7UTILB",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74,88**;Sep 27, 1994;Build 10
"RTN","LA7UTILB",3,0)
 ;
"RTN","LA7UTILB",4,0)
EN ; Select a Lab HL7 message to reprocess.
"RTN","LA7UTILB",5,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,FDA,LA7DIE,LA76248,LA7I,LA7LIST,LA7X,PARAM,X,Y
"RTN","LA7UTILB",6,0)
 ;
"RTN","LA7UTILB",7,0)
 S PARAM("SHOIDS")=$$GET^XPAR("USR^SYS","LA7UTILA SHOIDS",1,"Q")
"RTN","LA7UTILB",8,0)
 S PARAM("SHOIDS LAST")=$$GET^XPAR("USR^SYS","LA7UTILA SHOIDS LAST",1,"Q")
"RTN","LA7UTILB",9,0)
 S X=PARAM("SHOIDS")
"RTN","LA7UTILB",10,0)
 I X="L" S X=PARAM("SHOIDS LAST")
"RTN","LA7UTILB",11,0)
 I X="" S X=PARAM("SHOIDS")
"RTN","LA7UTILB",12,0)
 I X="" S X=1
"RTN","LA7UTILB",13,0)
 I X'=+X S X=$S(X="Y":1,X="N":0,1:1)
"RTN","LA7UTILB",14,0)
 K PARAM
"RTN","LA7UTILB",15,0)
 S DIR("B")=$S(X:"YES",1:"NO")
"RTN","LA7UTILB",16,0)
 S DIR(0)="Y",DIR("A")="Display identifiers during message selection"
"RTN","LA7UTILB",17,0)
 D ^DIR
"RTN","LA7UTILB",18,0)
 I $D(DIRUT) Q
"RTN","LA7UTILB",19,0)
 I Y<1 S DIC("W")="D DICW^LA7UTILA"
"RTN","LA7UTILB",20,0)
 ; save PARAM setting
"RTN","LA7UTILB",21,0)
 D EN^XPAR("USR","LA7UTILA SHOIDS LAST",1,$S(+Y>0:1,1:0))
"RTN","LA7UTILB",22,0)
 S DIC="^LAHM(62.49,",DIC("S")="I $$DICS^LA7UTILB(Y)"
"RTN","LA7UTILB",23,0)
 S DIC(0)="EQMZ"
"RTN","LA7UTILB",24,0)
 S X=$$SELECT^LRUTIL(.DIC,.LA7LIST,"Message",10,0,1,1)
"RTN","LA7UTILB",25,0)
 ;
"RTN","LA7UTILB",26,0)
 K DIC,DIR
"RTN","LA7UTILB",27,0)
 ;
"RTN","LA7UTILB",28,0)
 ; Confirm selection
"RTN","LA7UTILB",29,0)
 I $O(LA7LIST(0)) D
"RTN","LA7UTILB",30,0)
 . S DIR(0)="YO",DIR("A")="Reprocess these messages",DIR("B")="YES"
"RTN","LA7UTILB",31,0)
 . D ^DIR
"RTN","LA7UTILB",32,0)
 . I Y'=1 Q
"RTN","LA7UTILB",33,0)
 . D SETSTAT,TASK
"RTN","LA7UTILB",34,0)
 ;
"RTN","LA7UTILB",35,0)
 I '$O(LA7LIST(0)) D CHECKQ
"RTN","LA7UTILB",36,0)
 ;
"RTN","LA7UTILB",37,0)
 ; Check if auto release master switch parameter is ON (1) then check for any queues needing restarting.
"RTN","LA7UTILB",38,0)
 I $$GET^XPAR("SYS^PKG","LA UI AUTO RELEASE MASTER",1,"Q") D CHECKARQ
"RTN","LA7UTILB",39,0)
 ;
"RTN","LA7UTILB",40,0)
 Q
"RTN","LA7UTILB",41,0)
 ;
"RTN","LA7UTILB",42,0)
 ;
"RTN","LA7UTILB",43,0)
SETSTAT ; Set status of selected messages to queued for processing
"RTN","LA7UTILB",44,0)
 ;
"RTN","LA7UTILB",45,0)
 ;ZEXCEPT: LA76248,LA7LIST
"RTN","LA7UTILB",46,0)
 ;
"RTN","LA7UTILB",47,0)
 N FDA,LA7I,LRDIE
"RTN","LA7UTILB",48,0)
 S LA7I=0
"RTN","LA7UTILB",49,0)
 F  S LA7I=$O(LA7LIST(LA7I)) Q:'LA7I  D
"RTN","LA7UTILB",50,0)
 . K FDA,LRDIE
"RTN","LA7UTILB",51,0)
 . S FDA(1,62.49,LA7I_",",2)="Q"
"RTN","LA7UTILB",52,0)
 . D FILE^DIE("","FDA(1)","LA7DIE(1)")
"RTN","LA7UTILB",53,0)
 . S LA76248=$P($G(^LAHM(62.49,LA7I,.5)),"^")
"RTN","LA7UTILB",54,0)
 . I LA76248 S LA76248(LA76248)=""
"RTN","LA7UTILB",55,0)
 ;
"RTN","LA7UTILB",56,0)
 Q
"RTN","LA7UTILB",57,0)
 ;
"RTN","LA7UTILB",58,0)
 ;
"RTN","LA7UTILB",59,0)
TASK ; Task processing routine for each message's respective configuration
"RTN","LA7UTILB",60,0)
 ;
"RTN","LA7UTILB",61,0)
 ;ZEXCEPT: LA76248
"RTN","LA7UTILB",62,0)
 ;
"RTN","LA7UTILB",63,0)
 N LA7X
"RTN","LA7UTILB",64,0)
 S LA76248=0
"RTN","LA7UTILB",65,0)
 F  S LA76248=$O(LA76248(LA76248)) Q:'LA76248  D
"RTN","LA7UTILB",66,0)
 . S LA7X=$P($G(^LAHM(62.48,LA76248,0)),"^")
"RTN","LA7UTILB",67,0)
 . I $G(^LAHM(62.48,LA76248,1))'="" X ^(1) D EN^DDIOL("Queued processing routine for configuration "_LA7X,"","!") Q
"RTN","LA7UTILB",68,0)
 . D EN^DDIOL($C(7)_"Unable to queue processing routine for configuration "_LA7X_" - No processing routine","","!")
"RTN","LA7UTILB",69,0)
 ;
"RTN","LA7UTILB",70,0)
 Q
"RTN","LA7UTILB",71,0)
 ;
"RTN","LA7UTILB",72,0)
 ;
"RTN","LA7UTILB",73,0)
CHECKQ ; Check "IQ" incoming queued for processing queues in case need to restart.
"RTN","LA7UTILB",74,0)
 N DIR,DIRUT,DTOUT,DUOUT,LA76248,LA7CNT,LA7I,LA7J,LA7K,X,Y
"RTN","LA7UTILB",75,0)
 S (LA7I,LA7J)=0
"RTN","LA7UTILB",76,0)
 F  S LA7I=$O(^LAHM(62.48,LA7I)) Q:LA7I<1  D
"RTN","LA7UTILB",77,0)
 . I '$P(^LAHM(62.48,LA7I,0),"^",3) Q
"RTN","LA7UTILB",78,0)
 . I '$D(^LAHM(62.49,"Q",LA7I,"IQ")) Q
"RTN","LA7UTILB",79,0)
 . S (LA7CNT,LA7K)=0
"RTN","LA7UTILB",80,0)
 . F  S LA7K=$O(^LAHM(62.49,"Q",LA7I,"IQ",LA7K)) Q:LA7K<1  S LA7CNT=LA7CNT+1
"RTN","LA7UTILB",81,0)
 . S LA7J=LA7J+1,LA7J(LA7J)=LA7I,DIR("A",LA7J)=LA7J_"  "_$P(^LAHM(62.48,LA7I,0),"^")_" (Queue size: "_LA7CNT_")"
"RTN","LA7UTILB",82,0)
 I '$O(LA7J(0)) Q
"RTN","LA7UTILB",83,0)
 W !!
"RTN","LA7UTILB",84,0)
 S DIR(0)="LO^1:"_LA7J
"RTN","LA7UTILB",85,0)
 S DIR("A")="Select the number(s) of the configurations to restart"
"RTN","LA7UTILB",86,0)
 S DIR("A",.1)="The following configurations have messages queued for processing:",DIR("A",.2)=" ",DIR("A",LA7J+1)=" "
"RTN","LA7UTILB",87,0)
 D ^DIR
"RTN","LA7UTILB",88,0)
 I $D(DIRUT) Q
"RTN","LA7UTILB",89,0)
 S LA7I=0
"RTN","LA7UTILB",90,0)
 F LA7I=1:1 S LA7J=$P(Y,",",LA7I) Q:LA7J<1  S LA76248(LA7J(LA7J))=""
"RTN","LA7UTILB",91,0)
 I $D(LA76248) D TASK
"RTN","LA7UTILB",92,0)
 Q
"RTN","LA7UTILB",93,0)
 ;
"RTN","LA7UTILB",94,0)
 ;
"RTN","LA7UTILB",95,0)
CHECKARQ ; Check LAH global for pending auto release results in case need to restart
"RTN","LA7UTILB",96,0)
 ;
"RTN","LA7UTILB",97,0)
 N DIR,DIRUT,DTOUT,DUOUT,LA7CNT,LA7I,LA7J,LA7K,LA7X,LRLL,LWL,X,Y
"RTN","LA7UTILB",98,0)
 ;
"RTN","LA7UTILB",99,0)
 S (LA7I,LA7J)=0
"RTN","LA7UTILB",100,0)
 F  S LA7I=$O(^LAH(LA7I)) Q:LA7I<1  D
"RTN","LA7UTILB",101,0)
 . I '$D(^LAH(LA7I,1,"AUTOREL-UID")) Q
"RTN","LA7UTILB",102,0)
 . S (LA7CNT,LA7K)=0
"RTN","LA7UTILB",103,0)
 . F  S LA7K=$O(^LAH(LA7I,1,"AUTOREL-UID",LA7K)) Q:LA7K=""  S LA7CNT=LA7CNT+1
"RTN","LA7UTILB",104,0)
 . S LA7J=LA7J+1,LA7J(LA7J)=LA7I,DIR("A",LA7J)=LA7J_"  "_$P(^LRO(68.2,LA7I,0),"^")_" (Queue size: "_LA7CNT_" accession"_$S(LA7CNT>1:"s",1:"")_")"
"RTN","LA7UTILB",105,0)
 I '$O(LA7J(0)) Q
"RTN","LA7UTILB",106,0)
 ;
"RTN","LA7UTILB",107,0)
 W !!
"RTN","LA7UTILB",108,0)
 S DIR(0)="LO^1:"_LA7J
"RTN","LA7UTILB",109,0)
 S DIR("A")="Select the number(s) of the LOAD/WORK LIST Auto Release to restart"
"RTN","LA7UTILB",110,0)
 S DIR("A",.1)="The following Load Lists have results in the Auto Release queue:",DIR("A",.2)=" ",DIR("A",LA7J+1)=" "
"RTN","LA7UTILB",111,0)
 D ^DIR
"RTN","LA7UTILB",112,0)
 I $D(DIRUT) Q
"RTN","LA7UTILB",113,0)
 ;
"RTN","LA7UTILB",114,0)
 F LA7I=1:1 S LA7J=$P(Y,",",LA7I) Q:LA7J<1  S LRLL(LA7J(LA7J))=""
"RTN","LA7UTILB",115,0)
 ;
"RTN","LA7UTILB",116,0)
 S LWL=0
"RTN","LA7UTILB",117,0)
 F  S LWL=$O(LRLL(LWL)) Q:'LWL  D
"RTN","LA7UTILB",118,0)
 . S LA7X=$P(^LRO(68.2,LWL,0),"^")
"RTN","LA7UTILB",119,0)
 . D QLAH^LA7VIN(LWL,"EN^LRVRAR")
"RTN","LA7UTILB",120,0)
 . D EN^DDIOL("Queued auto release processing for LOAD/WORK LIST "_LA7X,"","!")
"RTN","LA7UTILB",121,0)
 Q
"RTN","LA7UTILB",122,0)
 ;
"RTN","LA7UTILB",123,0)
 ;
"RTN","LA7UTILB",124,0)
DICS(DA) ; Perform FileMan DIC screen on lookup
"RTN","LA7UTILB",125,0)
 ; Call with DA = IEN of entry in file #62.49
"RTN","LA7UTILB",126,0)
 ; Returns LA7Y = 1 if entry should be selected
"RTN","LA7UTILB",127,0)
 ;              = 0 if not selectable
"RTN","LA7UTILB",128,0)
 ; Entry should be type (I)ncoming, have a status of (X)purgable, (E)rror or (Q)ueued for processing and
"RTN","LA7UTILB",129,0)
 ; be related to an message configuration type 1-UI or 10-LEDI.
"RTN","LA7UTILB",130,0)
 ; Messages for other configuration types should not be reprocessed at this time.
"RTN","LA7UTILB",131,0)
 N LA7I,LA7X,LA7Y
"RTN","LA7UTILB",132,0)
 S LA7I(0)=$G(^LAHM(62.49,DA,0)),LA7Y=0
"RTN","LA7UTILB",133,0)
 I $P(LA7I(0),"^",2)="I",$P(LA7I(0),"^",3)?1(1"X",1"E",1"Q") D
"RTN","LA7UTILB",134,0)
 . S LA7X=$P($G(^LAHM(62.49,DA,.5)),"^"),LA7X(0)=$G(^LAHM(62.48,LA7X,0))
"RTN","LA7UTILB",135,0)
 . I $P(LA7X(0),"^",9)>0,$P(LA7X(0),"^",9)<11 S LA7Y=1
"RTN","LA7UTILB",136,0)
 Q LA7Y
"RTN","LA7VHL")
0^13^B38289473
"RTN","LA7VHL",1,0)
LA7VHL ;DALOI/DLR - Main Driver for incoming HL7 V1.6 messages ;04/06/16  16:31
"RTN","LA7VHL",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,62,64,67,74,88**;Sep 27, 1994;Build 10
"RTN","LA7VHL",3,0)
 ;
"RTN","LA7VHL",4,0)
 ; This routine is not meant to be invoked by name
"RTN","LA7VHL",5,0)
 ;
"RTN","LA7VHL",6,0)
 QUIT
"RTN","LA7VHL",7,0)
 ;
"RTN","LA7VHL",8,0)
 ; This routine is called by the HL v1.6 package to process incoming HL7 messages.  Expected variables are those documented in the HL7 package documentation.
"RTN","LA7VHL",9,0)
 ; The line tag is called if it is entered into the PROCESSING ROUTINE field for the server protocol.
"RTN","LA7VHL",10,0)
 ;
"RTN","LA7VHL",11,0)
ORR ; Process incoming ORR messages
"RTN","LA7VHL",12,0)
ACK ; Process incoming ACK messages
"RTN","LA7VHL",13,0)
ORM ; Process incoming ORM messages
"RTN","LA7VHL",14,0)
ORU ; Process incoming ORU messages
"RTN","LA7VHL",15,0)
 ;
"RTN","LA7VHL",16,0)
 N DIQUIET,HLA,HLL,HLP,X,Y
"RTN","LA7VHL",17,0)
 N LA76248,LA76249,LA7AAT,LA7AERR,LA7CS,LA7DT,LA7ECH,LA7ERR,LA7FS,LA7HLS,LA7HLSA,LA7INTYP,LA7MEDT,LA7MTYP,LA7RAP,LA7PRID,LA7RSITE,LA7SAP,LA7SEQ,LA7SSITE,LA7STYP,LA7TYPE,LA7VER,LA7VI,LA7VJ,LA7X,LRQUIET
"RTN","LA7VHL",18,0)
 ;
"RTN","LA7VHL",19,0)
 ; Prevent FileMan from issuing any unwanted WRITE(s).
"RTN","LA7VHL",20,0)
 S (DIQUIET,LRQUIET)=1
"RTN","LA7VHL",21,0)
 ; Insure DT and DILOCKTM is defined
"RTN","LA7VHL",22,0)
 D DT^DICRW
"RTN","LA7VHL",23,0)
 ;
"RTN","LA7VHL",24,0)
 S (LA76248,LA76249,LA7INTYP,LA7SEQ)=0,(LA7AERR,LA7ERR)=""
"RTN","LA7VHL",25,0)
 ;
"RTN","LA7VHL",26,0)
 K ^TMP("HLA",$J)
"RTN","LA7VHL",27,0)
 ;
"RTN","LA7VHL",28,0)
 ; Setup DUZ array to 'non-human' user LRLAB,HL
"RTN","LA7VHL",29,0)
 ; If user not found - send alert to G.LAB MESSAGING
"RTN","LA7VHL",30,0)
 S LA7X=$P($G(^XTMP("LA7 PROXY","LRLAB,HL")),"^")
"RTN","LA7VHL",31,0)
 I LA7X<1 D
"RTN","LA7VHL",32,0)
 . S LA7X=$$FIND1^DIC(200,"","OQUX","LRLAB,HL","B","")
"RTN","LA7VHL",33,0)
 . S ^XTMP("LA7 PROXY",0)=DT_"^"_DT_"^LAB HL7 PROXY USERS"
"RTN","LA7VHL",34,0)
 . I LA7X>0 S ^XTMP("LA7 PROXY","LRLAB,HL")=LA7X
"RTN","LA7VHL",35,0)
 I LA7X<1 D  Q
"RTN","LA7VHL",36,0)
 . N MSG
"RTN","LA7VHL",37,0)
 . S MSG="Lab Messaging - Unable to identify user 'LRLAB,HL' in NEW PERSON file"
"RTN","LA7VHL",38,0)
 . D XQA^LA7UXQA(0,LA76248,0,0,MSG,"",0)
"RTN","LA7VHL",39,0)
 D DUZ^XUP(LA7X)
"RTN","LA7VHL",40,0)
 ;
"RTN","LA7VHL",41,0)
 ; Set up LA7HLS with HL variables to build ACK message.
"RTN","LA7VHL",42,0)
 ; Handle situation when systems use different encoding characters.
"RTN","LA7VHL",43,0)
 D RSPINIT^HLFNC2(HL("EIDS"),.LA7HLS)
"RTN","LA7VHL",44,0)
 ;
"RTN","LA7VHL",45,0)
 ; Move message from HL7 global to Lab global
"RTN","LA7VHL",46,0)
 F LA7VI=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","LA7VHL",47,0)
 . K LA7SEG,LA7STYP
"RTN","LA7VHL",48,0)
 . I HLNODE="" Q
"RTN","LA7VHL",49,0)
 . S LA7SEG(0)=HLNODE,LA7STYP=$E(LA7SEG(0),1,3)
"RTN","LA7VHL",50,0)
 . I LA7STYP'?2U1UN D
"RTN","LA7VHL",51,0)
 . . S LA7ERR=34,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VHL",52,0)
 . . D REJECT($P(LA7AERR,"^",2))
"RTN","LA7VHL",53,0)
 . S LA7VJ=0
"RTN","LA7VHL",54,0)
 . F  S LA7VJ=$O(HLNODE(LA7VJ)) Q:'LA7VJ  S LA7SEG(LA7VJ)=HLNODE(LA7VJ)
"RTN","LA7VHL",55,0)
 . I LA7STYP="MSH" D MSH
"RTN","LA7VHL",56,0)
 . I LA7AERR="",LA7SEQ<1 D REJECT("no MSH segment found") Q
"RTN","LA7VHL",57,0)
 . D FILE6249^LA7VHLU(LA76249,.LA7SEG)
"RTN","LA7VHL",58,0)
 ;
"RTN","LA7VHL",59,0)
 ; Update entry in 62.49
"RTN","LA7VHL",60,0)
 ; Change status to (Q)ueued for processing from (B)uilding
"RTN","LA7VHL",61,0)
 I LA76249>0,$P($G(^LAHM(62.49,LA76249,0)),"^",3)'="E" D
"RTN","LA7VHL",62,0)
 . N FDA,LA7ERR
"RTN","LA7VHL",63,0)
 . S FDA(1,62.49,LA76249_",",2)="Q"
"RTN","LA7VHL",64,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VHL",65,0)
 ;
"RTN","LA7VHL",66,0)
 ; Release lock on file #62.49 entry (tells LA7VIN message is stored).
"RTN","LA7VHL",67,0)
 I LA76249>0 L -^LAHM(62.49,LA76249)
"RTN","LA7VHL",68,0)
 ;
"RTN","LA7VHL",69,0)
 ; Run processing routine
"RTN","LA7VHL",70,0)
 I '$D(^LAHM(62.48,LA76248,1)) S LA7ERR=5,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VHL",71,0)
 I $D(^LAHM(62.48,LA76248,1)) X ^(1)
"RTN","LA7VHL",72,0)
 ;
"RTN","LA7VHL",73,0)
 ; Don't (ACK)nowledge ACK or ORR messages
"RTN","LA7VHL",74,0)
 I $G(LA7MTYP)="ACK"!($G(LA7MTYP)="ORR") Q
"RTN","LA7VHL",75,0)
 ;
"RTN","LA7VHL",76,0)
 ; No application acknowledgement
"RTN","LA7VHL",77,0)
 I $G(LA7AAT(1))="NE" Q
"RTN","LA7VHL",78,0)
 ;
"RTN","LA7VHL",79,0)
 ; Other system only wants ACK on successful completion condition and we found an error.
"RTN","LA7VHL",80,0)
 I $G(LA7AERR)'="",$G(LA7AAT(1))="SU" Q
"RTN","LA7VHL",81,0)
 ;
"RTN","LA7VHL",82,0)
 ; Other system only wants ACK on error/reject condition
"RTN","LA7VHL",83,0)
 I $G(LA7AERR)="",$G(LA7AAT(1))="ER" Q
"RTN","LA7VHL",84,0)
 ;
"RTN","LA7VHL",85,0)
 ; If POC interface and no error then quit - send application ack after processing message.
"RTN","LA7VHL",86,0)
 I $G(LA7AERR)="",LA7INTYP>19,LA7INTYP<30 S X=$$DONTPURG^HLUTIL() Q
"RTN","LA7VHL",87,0)
 ;
"RTN","LA7VHL",88,0)
 ; If LEDI interface and ORM message and no error then quit - send application ack after processing message.
"RTN","LA7VHL",89,0)
 I $G(LA7AERR)="",LA7INTYP=10,$G(LA7MTYP)="ORM" S X=$$DONTPURG^HLUTIL() Q
"RTN","LA7VHL",90,0)
 ;
"RTN","LA7VHL",91,0)
 ; If UI interface using enchanced acknowlegment and ORU message and no error then quit - send application ack after processing message.
"RTN","LA7VHL",92,0)
 I $G(LA7AERR)="",LA7INTYP=1,$G(LA7AAT(1))'="",$G(LA7MTYP)="ORU" S X=$$DONTPURG^HLUTIL() Q
"RTN","LA7VHL",93,0)
 ;
"RTN","LA7VHL",94,0)
 ; If POC interface and error then setup HLL array
"RTN","LA7VHL",95,0)
 I LA7INTYP>19,LA7INTYP<30 D
"RTN","LA7VHL",96,0)
 . S HLL("SET FOR APP ACK")=1
"RTN","LA7VHL",97,0)
 . S HLL("LINKS",1)=HL("EIDS")_"^"_$S($G(LA76248):$P(LA76248(0),"^"),1:$G(LA7SAP))
"RTN","LA7VHL",98,0)
 ;
"RTN","LA7VHL",99,0)
 ; If Lab UI interface using enhanced ack and error then setup HLL array
"RTN","LA7VHL",100,0)
 I LA7INTYP=1,$G(LA7AAT(1))'="" D
"RTN","LA7VHL",101,0)
 . S HLL("SET FOR APP ACK")=1
"RTN","LA7VHL",102,0)
 . S HLL("LINKS",1)=HL("EIDS")_"^"_$S($G(LA76248):$P(LA76248(0),"^"),1:$G(LA7SAP))
"RTN","LA7VHL",103,0)
 ;
"RTN","LA7VHL",104,0)
 ; HL7 returns this as ACK if no errors found
"RTN","LA7VHL",105,0)
 I $G(LA7AERR)="" S HLA("HLA",1)="MSA"_LA7HLS("RFS")_"AA"_LA7HLS("RFS")_HL("MID")
"RTN","LA7VHL",106,0)
 ;
"RTN","LA7VHL",107,0)
 ; Send ACK message
"RTN","LA7VHL",108,0)
 I $D(HLA("HLA")) D
"RTN","LA7VHL",109,0)
 . S HLP("NAMESPACE")="LA"
"RTN","LA7VHL",110,0)
 . S HLP("SUBSCRIBER")="^"_LA7RAP_"^"_LA7RSITE
"RTN","LA7VHL",111,0)
 . D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.LA7HLSA,"",.HLP)
"RTN","LA7VHL",112,0)
 ;
"RTN","LA7VHL",113,0)
 I $D(^TMP("HLA",$J)) D
"RTN","LA7VHL",114,0)
 . S HLP("NAMESPACE")="LA"
"RTN","LA7VHL",115,0)
 . S HLP("SUBSCRIBER")="^"_LA7RAP_"^"_LA7RSITE
"RTN","LA7VHL",116,0)
 . D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.LA7HLSA,"",.HLP)
"RTN","LA7VHL",117,0)
 ;
"RTN","LA7VHL",118,0)
 Q
"RTN","LA7VHL",119,0)
 ;
"RTN","LA7VHL",120,0)
 ;
"RTN","LA7VHL",121,0)
MSH ;;MSH
"RTN","LA7VHL",122,0)
 ;
"RTN","LA7VHL",123,0)
 N LA7CFIG,LA7MID,LA7NOW,X
"RTN","LA7VHL",124,0)
 ;
"RTN","LA7VHL",125,0)
 S LA7SEQ=1
"RTN","LA7VHL",126,0)
 S LA7FS=$E(LA7SEG(0),4)
"RTN","LA7VHL",127,0)
 S LA7ECH=$E(LA7SEG(0),5,8)
"RTN","LA7VHL",128,0)
 S LA7CS=$E(LA7ECH,1)
"RTN","LA7VHL",129,0)
 ; Sending application
"RTN","LA7VHL",130,0)
 S LA7SAP=$P($$P^LA7VHLU(.LA7SEG,3,LA7FS),LA7CS)
"RTN","LA7VHL",131,0)
 ; Sending facility
"RTN","LA7VHL",132,0)
 S LA7SSITE=$P($$P^LA7VHLU(.LA7SEG,4,LA7FS),LA7CS)
"RTN","LA7VHL",133,0)
 ; Receiving application
"RTN","LA7VHL",134,0)
 S LA7RAP=$P($$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7CS)
"RTN","LA7VHL",135,0)
 ; Receiving facility
"RTN","LA7VHL",136,0)
 S LA7RSITE=$P($$P^LA7VHLU(.LA7SEG,6,LA7FS),LA7CS)
"RTN","LA7VHL",137,0)
 ; Date/time of message
"RTN","LA7VHL",138,0)
 S LA7MEDT=$$P^LA7VHLU(.LA7SEG,7,LA7FS)
"RTN","LA7VHL",139,0)
 ; Message type/trigger event/message structure
"RTN","LA7VHL",140,0)
 S X=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VHL",141,0)
 S LA7MTYP=$P(X,LA7CS),LA7MTYP("EVN")=$P(X,LA7CS,2),LA7MTYP("MSGSTR")=$P(X,LA7CS,3)
"RTN","LA7VHL",142,0)
 ; Message Control ID
"RTN","LA7VHL",143,0)
 S LA7MID=$$P^LA7VHLU(.LA7SEG,10,LA7FS)
"RTN","LA7VHL",144,0)
 ; Processing ID
"RTN","LA7VHL",145,0)
 S LA7PRID=$$P^LA7VHLU(.LA7SEG,11,LA7FS)
"RTN","LA7VHL",146,0)
 ; Version ID
"RTN","LA7VHL",147,0)
 S LA7VER=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VHL",148,0)
 ; Accept acknowledgement type
"RTN","LA7VHL",149,0)
 S LA7AAT(0)=$$P^LA7VHLU(.LA7SEG,15,LA7FS)
"RTN","LA7VHL",150,0)
 ; Application acknowledgement type
"RTN","LA7VHL",151,0)
 S LA7AAT(1)=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VHL",152,0)
 ;
"RTN","LA7VHL",153,0)
 S LA7CFIG=LA7SAP_LA7SSITE_LA7RAP_LA7RSITE
"RTN","LA7VHL",154,0)
 S X=LA7CFIG X ^%ZOSF("LPC")
"RTN","LA7VHL",155,0)
 S LA76248=+$O(^LAHM(62.48,"C",$E(LA7CFIG,1,27)_Y,0))
"RTN","LA7VHL",156,0)
 I 'LA76248 S LA76248=+$O(^LAHM(62.48,"B",LA7SAP,0))
"RTN","LA7VHL",157,0)
 I 'LA76248,$E(LA7SAP,1,11)="LA7V REMOTE" S LA76248=+$O(^LAHM(62.48,"B","LA7V COLLECTION "_$P(LA7SAP," ",3),0))
"RTN","LA7VHL",158,0)
 I 'LA76248 D  Q
"RTN","LA7VHL",159,0)
 . S LA7ERR=1,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VHL",160,0)
 . D REJECT("no config in 62.48")
"RTN","LA7VHL",161,0)
 ;
"RTN","LA7VHL",162,0)
 S LA76248(0)=$G(^LAHM(62.48,LA76248,0))
"RTN","LA7VHL",163,0)
 ;
"RTN","LA7VHL",164,0)
 ; Determine interface type
"RTN","LA7VHL",165,0)
 S LA7INTYP=+$P(^LAHM(62.48,LA76248,0),"^",9)
"RTN","LA7VHL",166,0)
 ;
"RTN","LA7VHL",167,0)
 I '$P($G(^LAHM(62.48,LA76248,0)),"^",3) D
"RTN","LA7VHL",168,0)
 . S LA7ERR=3,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VHL",169,0)
 . D REJECT("config is inactive")
"RTN","LA7VHL",170,0)
 ;
"RTN","LA7VHL",171,0)
 ; store incoming message in ^LAHM(62.49)
"RTN","LA7VHL",172,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VHL",173,0)
 I LA76249<1 Q
"RTN","LA7VHL",174,0)
 ;
"RTN","LA7VHL",175,0)
 ; update entry in 62.49
"RTN","LA7VHL",176,0)
 N FDA,LA7FERR
"RTN","LA7VHL",177,0)
 I $G(LA76248) S FDA(1,62.49,LA76249_",",.5)=LA76248
"RTN","LA7VHL",178,0)
 S FDA(1,62.49,LA76249_",",1)="I"
"RTN","LA7VHL",179,0)
 I LA7ERR S FDA(1,62.49,LA76249_",",2)="E"
"RTN","LA7VHL",180,0)
 S FDA(1,62.49,LA76249_",",3)=3
"RTN","LA7VHL",181,0)
 S FDA(1,62.49,LA76249_",",102)=LA7SAP
"RTN","LA7VHL",182,0)
 S FDA(1,62.49,LA76249_",",103)=LA7SSITE
"RTN","LA7VHL",183,0)
 S FDA(1,62.49,LA76249_",",104)=LA7RAP
"RTN","LA7VHL",184,0)
 S FDA(1,62.49,LA76249_",",105)=LA7RSITE
"RTN","LA7VHL",185,0)
 S FDA(1,62.49,LA76249_",",106)=LA7MEDT
"RTN","LA7VHL",186,0)
 S FDA(1,62.49,LA76249_",",108)=LA7MTYP
"RTN","LA7VHL",187,0)
 S FDA(1,62.49,LA76249_",",109)=LA7MID
"RTN","LA7VHL",188,0)
 S FDA(1,62.49,LA76249_",",110)=LA7PRID
"RTN","LA7VHL",189,0)
 S FDA(1,62.49,LA76249_",",111)=LA7VER
"RTN","LA7VHL",190,0)
 S FDA(1,62.49,LA76249_",",700)=HL("EID")_";"_HLMTIENS_";"_HL("EIDS")
"RTN","LA7VHL",191,0)
 D FILE^DIE("","FDA(1)","LA7FERR(1)")
"RTN","LA7VHL",192,0)
 ;
"RTN","LA7VHL",193,0)
 Q
"RTN","LA7VHL",194,0)
 ;
"RTN","LA7VHL",195,0)
 ;
"RTN","LA7VHL",196,0)
REJECT(LA7AR) ; Build a reject segment if the incoming message could not be processed.
"RTN","LA7VHL",197,0)
 ; Setting HLA("HLA",1) conforms to HL7 package rules for acknowledgements
"RTN","LA7VHL",198,0)
 ; LA7AR is a free text string that is included in the reject
"RTN","LA7VHL",199,0)
 ; message for debugging purposes.
"RTN","LA7VHL",200,0)
 ;
"RTN","LA7VHL",201,0)
 S HLA("HLA",1)="MSA"_LA7HLS("RFS")_"AR"_LA7HLS("RFS")_HL("MID")_LA7HLS("RFS")_LA7AR
"RTN","LA7VHL",202,0)
 S LA7AERR=LA7AR
"RTN","LA7VHL",203,0)
 Q
"RTN","LA7VHLU8")
0^17^B60447079
"RTN","LA7VHLU8",1,0)
LA7VHLU8 ;DALOI/JMC - LAB Application Acknowledgment builder;04/06/16  13:00
"RTN","LA7VHLU8",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74,88**;Sep 27, 1994;Build 10
"RTN","LA7VHLU8",3,0)
 ;
"RTN","LA7VHLU8",4,0)
 ; Reference to PROTOCOL file (#101) supported by DBIA #872
"RTN","LA7VHLU8",5,0)
 ;
"RTN","LA7VHLU8",6,0)
 Q
"RTN","LA7VHLU8",7,0)
 ;
"RTN","LA7VHLU8",8,0)
 ;
"RTN","LA7VHLU8",9,0)
ACK(LA7) ; Returns the application acknowledgement to the sending application.
"RTN","LA7VHLU8",10,0)
 ; Indicates any error encountered in processing the message.
"RTN","LA7VHLU8",11,0)
 ; Used when messages are processed separately from when they are received.
"RTN","LA7VHLU8",12,0)
 ;  Examples LEDI ORM message that builds Lab Pending Order file.
"RTN","LA7VHLU8",13,0)
 ;
"RTN","LA7VHLU8",14,0)
 ; Called by routine LA7VIN1,LRVRARU
"RTN","LA7VHLU8",15,0)
 ;
"RTN","LA7VHLU8",16,0)
 ; Call with LA7 array passed by reference
"RTN","LA7VHLU8",17,0)
 ;      LA7(62.4)=ien of related isntrument entry in file #62.4
"RTN","LA7VHLU8",18,0)
 ;      LA7(62.48)=ien of related configuration in file #62.48
"RTN","LA7VHLU8",19,0)
 ;      LA7(62.49)=ien of message in file #62.49 being acknowledged
"RTN","LA7VHLU8",20,0)
 ;      LA7("ACK")=acknowledgment status (AA, AE, AR)
"RTN","LA7VHLU8",21,0)
 ;      LA7("ID",n)= array of related message ids to stre in file #62.49
"RTN","LA7VHLU8",22,0)
 ;      LA7("MSG")=text of error message to be returned
"RTN","LA7VHLU8",23,0)
 ;      LA7("ERR")=if present array to build ERR segment
"RTN","LA7VHLU8",24,0)
 ;
"RTN","LA7VHLU8",25,0)
 N HL,HLMTIENS,I,LA6249,LA76248,LA7X,LA7Y
"RTN","LA7VHLU8",26,0)
 ;
"RTN","LA7VHLU8",27,0)
 ; Check for entry in 62.48
"RTN","LA7VHLU8",28,0)
 S LA76248=+$G(LA7(62.48))
"RTN","LA7VHLU8",29,0)
 I '$G(LA76248)!('$D(^LAHM(62.48,LA76248,0))) Q
"RTN","LA7VHLU8",30,0)
 S LA76248(0)=$G(^LAHM(62.48,LA7(62.48),0)),LA7X=$P(LA76248(0),"^")
"RTN","LA7VHLU8",31,0)
 ;
"RTN","LA7VHLU8",32,0)
 ; Check for entry in 62.49
"RTN","LA7VHLU8",33,0)
 S LA6249=+$G(LA7(62.49))
"RTN","LA7VHLU8",34,0)
 I '$G(LA6249)!('$D(^LAHM(62.49,LA6249,0))) Q
"RTN","LA7VHLU8",35,0)
 F I=0,700 S LA6249(I)=$G(^LAHM(62.49,LA6249,I))
"RTN","LA7VHLU8",36,0)
 ;
"RTN","LA7VHLU8",37,0)
 ; Call reprocess message to build and send ACK and clear purge flag
"RTN","LA7VHLU8",38,0)
 S LA7Y=$$REPROC^HLUTIL($P(LA6249(700),";",2),"D BLDACK^LA7VHLU8")
"RTN","LA7VHLU8",39,0)
 I LA7Y=0 S HLMTIENS=$P(LA6249(700),";",2),LA7X=$$TOPURG^HLUTIL()
"RTN","LA7VHLU8",40,0)
 ;
"RTN","LA7VHLU8",41,0)
 Q
"RTN","LA7VHLU8",42,0)
 ;
"RTN","LA7VHLU8",43,0)
 ;
"RTN","LA7VHLU8",44,0)
BLDACK ; Create/initialize HL ACK (ORR) message
"RTN","LA7VHLU8",45,0)
 ;
"RTN","LA7VHLU8",46,0)
 ;ZEXCEPT: HL,LA7,LA76248
"RTN","LA7VHLU8",47,0)
 ;
"RTN","LA7VHLU8",48,0)
 N GBL,HLL,HLP,I,X
"RTN","LA7VHLU8",49,0)
 N LA76249,LA7AERR,LA7DATA,LA7ECH,LA7ERR,LA7FS,LA7ID,LA7LL,LA7MID,LA7MSA,LA7MSH,LA7X,LA7Y
"RTN","LA7VHLU8",50,0)
 ;
"RTN","LA7VHLU8",51,0)
 ; No application acknowledgement
"RTN","LA7VHLU8",52,0)
 I $G(HL("APAT"))="NE" Q
"RTN","LA7VHLU8",53,0)
 ;
"RTN","LA7VHLU8",54,0)
 ; Other system only wants ACK on successful completion condition and we found an error.
"RTN","LA7VHLU8",55,0)
 I LA7("ACK")'="AA",$G(HL("APAT"))="SU" Q
"RTN","LA7VHLU8",56,0)
 ;
"RTN","LA7VHLU8",57,0)
 ; Other system only wants ACK on error/reject condition
"RTN","LA7VHLU8",58,0)
 I LA7("ACK")="AA",$G(HL("APAT"))="ER" Q
"RTN","LA7VHLU8",59,0)
 ;
"RTN","LA7VHLU8",60,0)
 S GBL="^TMP(""HLA"","_$J_")"
"RTN","LA7VHLU8",61,0)
 K @GBL
"RTN","LA7VHLU8",62,0)
 S LA76249=$$INIT6249^LA7VHLU
"RTN","LA7VHLU8",63,0)
 D RSPINIT^HLFNC2(HL("EIDS"),.HL)
"RTN","LA7VHLU8",64,0)
 S LA7FS=HL("RFS"),LA7ECH=HL("RECH")
"RTN","LA7VHLU8",65,0)
 ;
"RTN","LA7VHLU8",66,0)
 ; Build pseudo MSH for file #62.49 entry
"RTN","LA7VHLU8",67,0)
 S LA7MSH(0)="MSH",LA7MSH(1)=LA7ECH,LA7MSH(2)=HL("RAN"),LA7MSH(3)=HL("RAF"),LA7MSH(4)=HL("SAN"),LA7MSH(5)=HL("SAF")
"RTN","LA7VHLU8",68,0)
 S LA7MSH(9)=HL("RMTN")_$E(LA7ECH,1)_HL("RETN"),LA7MSH(11)=HL("PID"),LA7MSH(12)=HL("VER")
"RTN","LA7VHLU8",69,0)
 S LA7MSH(15)="AL",LA7MSH(16)="NE"
"RTN","LA7VHLU8",70,0)
 D BUILDSEG^LA7VHLU(.LA7MSH,.LA7DATA,LA7FS)
"RTN","LA7VHLU8",71,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VHLU8",72,0)
 ;
"RTN","LA7VHLU8",73,0)
 ; Build and file MSA segment
"RTN","LA7VHLU8",74,0)
 K LA7DATA
"RTN","LA7VHLU8",75,0)
 S LA7MSA(0)="MSA",LA7MSA(1)=LA7("ACK"),LA7MSA(2)=HL("MID")
"RTN","LA7VHLU8",76,0)
 I $G(LA7("MSG"))'="" D
"RTN","LA7VHLU8",77,0)
 . S LA7MSA(3)=$$CHKDATA^LA7VHLU3($P(LA7("MSG"),"^"),LA7FS_LA7ECH)
"RTN","LA7VHLU8",78,0)
 . I $P(LA7("MSG"),"^",2)="" Q
"RTN","LA7VHLU8",79,0)
 . S $P(LA7MSA(3),$E(LA7ECH),2)=$$CHKDATA^LA7VHLU3($P(LA7("MSG"),"^",2),LA7FS_LA7ECH)
"RTN","LA7VHLU8",80,0)
 ;
"RTN","LA7VHLU8",81,0)
 ; Save message ids in file #62.49
"RTN","LA7VHLU8",82,0)
 I $G(LA7(62.4)) S LA7ID=$P(^LAB(62.4,LA7(62.4),0),"^")
"RTN","LA7VHLU8",83,0)
 E  S LA7ID=$P(LA76248(0),"^",1)
"RTN","LA7VHLU8",84,0)
 S LA7ID=LA7ID_"-O-ACK-"
"RTN","LA7VHLU8",85,0)
 D SETID^LA7VHLU1(LA76249,LA7ID,LA7MSA(2),1)
"RTN","LA7VHLU8",86,0)
 D SETID^LA7VHLU1(LA76249,"",LA7MSA(2),0)
"RTN","LA7VHLU8",87,0)
 S I=0
"RTN","LA7VHLU8",88,0)
 F  S I=$O(LA7("ID",I)) Q:I<1  D
"RTN","LA7VHLU8",89,0)
 . D SETID^LA7VHLU1(LA76249,"",LA7("ID",I),0)
"RTN","LA7VHLU8",90,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7("ID",I),0)
"RTN","LA7VHLU8",91,0)
 ;
"RTN","LA7VHLU8",92,0)
 ; Save message ids in file #62.49
"RTN","LA7VHLU8",93,0)
 D BUILDSEG^LA7VHLU(.LA7MSA,.LA7DATA,LA7FS)
"RTN","LA7VHLU8",94,0)
 D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VHLU8",95,0)
 D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VHLU8",96,0)
 ;
"RTN","LA7VHLU8",97,0)
 ; Build and file ERR segment if info present
"RTN","LA7VHLU8",98,0)
 I $D(LA7("ERR")) D
"RTN","LA7VHLU8",99,0)
 . N LABEL,X
"RTN","LA7VHLU8",100,0)
 . K LA7DATA
"RTN","LA7VHLU8",101,0)
 . S LA7ERR(0)="ERR"
"RTN","LA7VHLU8",102,0)
 . I $G(LA7("ERR",3))'="" D
"RTN","LA7VHLU8",103,0)
 . . S LABEL="HLC"_LA7("ERR",3),X=$T(@LABEL)
"RTN","LA7VHLU8",104,0)
 . . S $P(LA7ERR(3),$E(LA7ECH),1)=LA7("ERR",3)
"RTN","LA7VHLU8",105,0)
 . . S $P(LA7ERR(3),$E(LA7ECH),2)=$$CHKDATA^LA7VHLU3($P(X,";;",3),LA7FS_LA7ECH)
"RTN","LA7VHLU8",106,0)
 . . S $P(LA7ERR(3),$E(LA7ECH),3)="HL70357"
"RTN","LA7VHLU8",107,0)
 . I $G(LA7("ERR",4))'="" S LA7ERR(4)=LA7("ERR",4)
"RTN","LA7VHLU8",108,0)
 . I $G(LA7("ERR",5))'="" D
"RTN","LA7VHLU8",109,0)
 . . S $P(LA7ERR(5),$E(LA7ECH),1)=$P(LA7("ERR",5),"^")
"RTN","LA7VHLU8",110,0)
 . . S $P(LA7ERR(5),$E(LA7ECH),2)=$$CHKDATA^LA7VHLU3($P(LA7("ERR",5),"^",2),LA7FS_LA7ECH)
"RTN","LA7VHLU8",111,0)
 . . S $P(LA7ERR(5),$E(LA7ECH),3)="99VA62.485"
"RTN","LA7VHLU8",112,0)
 . I $G(LA7("ERR",8))'="" S LA7ERR(8)=$$CHKDATA^LA7VHLU3(LA7("ERR",8),LA7FS_LA7ECH)
"RTN","LA7VHLU8",113,0)
 . I $G(LA7("ERR",9))'="" S LA7ERR(9)=LA7("ERR",9)
"RTN","LA7VHLU8",114,0)
 . D BUILDSEG^LA7VHLU(.LA7ERR,.LA7DATA,LA7FS)
"RTN","LA7VHLU8",115,0)
 . D FILESEG^LA7VHLU(GBL,.LA7DATA)
"RTN","LA7VHLU8",116,0)
 . D FILE6249^LA7VHLU(LA76249,.LA7DATA)
"RTN","LA7VHLU8",117,0)
 ;
"RTN","LA7VHLU8",118,0)
 ; Send the HL7 message.
"RTN","LA7VHLU8",119,0)
 S HLL("SET FOR APP ACK")=1
"RTN","LA7VHLU8",120,0)
 ;
"RTN","LA7VHLU8",121,0)
 ; If LEDI interface obtain logical link from related protocol.
"RTN","LA7VHLU8",122,0)
 ; If non-LEDI uses dynammic addressing then determine logical link based on #62.48 entry name.
"RTN","LA7VHLU8",123,0)
 I +$P(^LAHM(62.48,LA76248,0),"^",9)=10 S LA7LL=$$GET1^DIQ(101,HL("EIDS")_",",770.7,"I")
"RTN","LA7VHLU8",124,0)
 E   S LA7LL=$P(LA76248(0),"^")
"RTN","LA7VHLU8",125,0)
 ;
"RTN","LA7VHLU8",126,0)
 S HLL("LINKS",1)=HL("EIDS")_"^"_LA7LL
"RTN","LA7VHLU8",127,0)
 S HLP("NAMESPACE")="LA"
"RTN","LA7VHLU8",128,0)
 S HLP("SUBSCRIBER")="^"_HL("RAN")_"^"_HL("RAF")
"RTN","LA7VHLU8",129,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.LA7MID,"",.HLP)
"RTN","LA7VHLU8",130,0)
 ;
"RTN","LA7VHLU8",131,0)
 S HL("MTN")=HL("RMTN"),HL("SAN")=HL("RAN"),HL("SAF")=HL("RAF"),HL("APAT")=""
"RTN","LA7VHLU8",132,0)
 D UPDT6249^LA7VORM1
"RTN","LA7VHLU8",133,0)
 ;
"RTN","LA7VHLU8",134,0)
 L -^LAHM(62.49,LA76249)
"RTN","LA7VHLU8",135,0)
 ;
"RTN","LA7VHLU8",136,0)
 Q
"RTN","LA7VHLU8",137,0)
 ;
"RTN","LA7VHLU8",138,0)
 ;
"RTN","LA7VHLU8",139,0)
BLDERR(LA,LA7ERR) ; Build error info array for ERR segment
"RTN","LA7VHLU8",140,0)
 ; Call with LA = LA array (by reference)
"RTN","LA7VHLU8",141,0)
 ;       LA7ERR = variable containing error code^text based on file #62.485 entries.
"RTN","LA7VHLU8",142,0)
 ;
"RTN","LA7VHLU8",143,0)
 ; Returns LA("ERR") in LA array
"RTN","LA7VHLU8",144,0)
 ;
"RTN","LA7VHLU8",145,0)
 N LA7X
"RTN","LA7VHLU8",146,0)
 S LA7X=+LA7ERR
"RTN","LA7VHLU8",147,0)
 ;
"RTN","LA7VHLU8",148,0)
 ; Initialize ERR-3 to 0 or 207 (catchall) - see HL7 Table 0357
"RTN","LA7VHLU8",149,0)
 S LA("ERR",3)=$S(LA7X>0:207,1:0)
"RTN","LA7VHLU8",150,0)
 ;
"RTN","LA7VHLU8",151,0)
 I LA7X=121 S LA("ERR",3)=102
"RTN","LA7VHLU8",152,0)
 I LA7X=11!(LA7X=26)!(LA7X=27) S LA("ERR",3)=103
"RTN","LA7VHLU8",153,0)
 I LA7X>=106,LA7X<120 S LA("ERR",3)=103
"RTN","LA7VHLU8",154,0)
 I LA7X=12 S LA("ERR",3)=204
"RTN","LA7VHLU8",155,0)
 ;
"RTN","LA7VHLU8",156,0)
 ; Set ERR-4 Severity
"RTN","LA7VHLU8",157,0)
 I LA("ERR",3)=0 S LA("ERR",4)="I"
"RTN","LA7VHLU8",158,0)
 E  S LA("ERR",4)="E"
"RTN","LA7VHLU8",159,0)
 ;
"RTN","LA7VHLU8",160,0)
 I LA7X>0 D
"RTN","LA7VHLU8",161,0)
 . S LA("ERR",5)=LA7ERR
"RTN","LA7VHLU8",162,0)
 . S LA("ERR",8)=$P(LA7ERR,"^",2)
"RTN","LA7VHLU8",163,0)
 . S LA("ERR",9)="USR"
"RTN","LA7VHLU8",164,0)
 ;
"RTN","LA7VHLU8",165,0)
 Q
"RTN","LA7VHLU8",166,0)
 ;
"RTN","LA7VHLU8",167,0)
 ;
"RTN","LA7VHLU8",168,0)
 ; HL70357 Table Message error condition codes - format ;;Value;;Description;;Comment
"RTN","LA7VHLU8",169,0)
HLC0 ;;0;;Message accepted;;Success. Optional, as the AA conveys success. Used for systems that must always return a status code.
"RTN","LA7VHLU8",170,0)
HLC100 ;;100;;Segment sequence error;;Error: The message segments were not in the proper order, or required segments are missing.
"RTN","LA7VHLU8",171,0)
HLC101 ;;101;;Required field missing;;Error: A required field is missing from a segment
"RTN","LA7VHLU8",172,0)
HLC102 ;;102;;Data type error;;Error: The field contained data of the wrong data type, e.g., an NM field contained ?FOO?.
"RTN","LA7VHLU8",173,0)
HLC103 ;;103;;Table value not found;;Error: A field of data type ID or IS was compared against the corresponding table, and no match was found.
"RTN","LA7VHLU8",174,0)
HLC104 ;;104;;Value too long;;Error: a value exceeded the normative length, or the length that the application is able to safely handle.
"RTN","LA7VHLU8",175,0)
HLC200 ;;200;;Unsupported message type;;Rejection: The Message Type is not supported.
"RTN","LA7VHLU8",176,0)
HLC201 ;;201;;Unsupported event code;;Rejection: The Event Code is not supported.
"RTN","LA7VHLU8",177,0)
HLC202 ;;202;;Unsupported processing id;;Rejection: The Processing ID is not supported.
"RTN","LA7VHLU8",178,0)
HLC203 ;;203;;Unsupported version id;;Rejection: The Version ID is not supported.
"RTN","LA7VHLU8",179,0)
HLC204 ;;204;;Unknown key identifier;;Rejection: The ID of the patient, order, etc., was not found. Used for transactions other than additions, e.g., transfer of a non-existent patient.
"RTN","LA7VHLU8",180,0)
HLC205 ;;205;;Duplicate key identifier;;Rejection: The ID of the patient, order, etc., already exists. Used in response to addition transactions (Admit, New Order, etc.).
"RTN","LA7VHLU8",181,0)
HLC206 ;;206;;Application record locked;;Rejection: The transaction could not be performed at the application storage level, e.g., database locked.
"RTN","LA7VHLU8",182,0)
HLC207 ;;207;;Application internal error;;Rejection: A catchall for internal errors not explicitly covered by other codes
"RTN","LA7VHLU9")
0^6^B33364706
"RTN","LA7VHLU9",1,0)
LA7VHLU9 ;DALOI/JMC - HL7 segment builder utility ;09/08/15  15:44
"RTN","LA7VHLU9",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**68,74,88**;Sep 27, 1994;Build 10
"RTN","LA7VHLU9",3,0)
 ;
"RTN","LA7VHLU9",4,0)
 ; Reference to NPI^XUSNPI supported by DBIA #4532
"RTN","LA7VHLU9",5,0)
 ; Reference to QI^XUSNPI supported by DBIA #4532
"RTN","LA7VHLU9",6,0)
 ;
"RTN","LA7VHLU9",7,0)
 ;
"RTN","LA7VHLU9",8,0)
XCN(LA7DUZ,LA7DIV,LA7FS,LA7ECH,LA7DMT,LA7IDTYP) ; Build composite ID and name for person
"RTN","LA7VHLU9",9,0)
 ; Call with   LA7DUZ = DUZ of person
"RTN","LA7VHLU9",10,0)
 ;                      If not pointer to #200, then use as literal
"RTN","LA7VHLU9",11,0)
 ;             LA7DIV = Institution of user
"RTN","LA7VHLU9",12,0)
 ;              LA7FS = HL field separator
"RTN","LA7VHLU9",13,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VHLU9",14,0)
 ;             LA7DMT = flag to indicate delimiters should be demoted
"RTN","LA7VHLU9",15,0)
 ;           LA7IDTYP = id type to return (0:DUZ 1:VPID 2:NPI)
"RTN","LA7VHLU9",16,0)
 ;
"RTN","LA7VHLU9",17,0)
 N I,LA7CS,LA7NPI,LA7SITE,LA7VAF,LA7VPID,LA7X,LA7Y,LA7Z,NAME
"RTN","LA7VHLU9",18,0)
 ;
"RTN","LA7VHLU9",19,0)
 S (LA7Y,LA7Z)="",LA7DMT=+$G(LA7DMT),LA7IDTYP=+$G(LA7IDTYP)
"RTN","LA7VHLU9",20,0)
 ; If demoting delimiters then use sub-component delimiter instead of component delimiter.
"RTN","LA7VHLU9",21,0)
 S LA7CS=$E(LA7ECH,$S(LA7DMT=1:4,1:1))
"RTN","LA7VHLU9",22,0)
 ;
"RTN","LA7VHLU9",23,0)
 ; Check if this field has been built previously for this person
"RTN","LA7VHLU9",24,0)
 I LA7DUZ'="",$D(^TMP($J,"LA7VHLU","99VA200",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)) S LA7Y=^TMP($J,"LA7VHLU","99VA200",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)
"RTN","LA7VHLU9",25,0)
 ;
"RTN","LA7VHLU9",26,0)
 ; Build from file #200
"RTN","LA7VHLU9",27,0)
 I LA7Y="",LA7DUZ>0,LA7DUZ?1.N D
"RTN","LA7VHLU9",28,0)
 . S NAME("FILE")=200,NAME("FIELD")=.01,NAME("IENS")=LA7DUZ
"RTN","LA7VHLU9",29,0)
 . S LA7Z=$$HLNAME^XLFNAME(.NAME,"S",LA7CS)
"RTN","LA7VHLU9",30,0)
 . I LA7IDTYP=2 D  Q:LA7NPI>0
"RTN","LA7VHLU9",31,0)
 . . S LA7NPI=$$NPI^XUSNPI("Individual_ID",LA7DUZ,DT)
"RTN","LA7VHLU9",32,0)
 . . I LA7NPI>0 S $P(LA7Y,LA7CS)=$P(LA7NPI,"^"),$P(LA7Y,LA7CS,9)="USDHHS",$P(LA7Y,LA7CS,11)=$E(LA7NPI,10),$P(LA7Y,LA7CS,12,13)="NPI"_LA7CS_"NPI"
"RTN","LA7VHLU9",33,0)
 . I LA7IDTYP>0 D  Q:LA7VPID'=""
"RTN","LA7VHLU9",34,0)
 . . S LA7VPID=$$VPID^XUPS(LA7DUZ)
"RTN","LA7VHLU9",35,0)
 . . I LA7VPID'="" S $P(LA7Y,LA7CS)=LA7VPID,$P(LA7Y,LA7CS,9)="USVHA",$P(LA7Y,LA7CS,13)="PN"
"RTN","LA7VHLU9",36,0)
 . ; If no institution, use Kernel Site default
"RTN","LA7VHLU9",37,0)
 . I LA7DIV="" S LA7DIV=+$$KSP^XUPARAM("INST")
"RTN","LA7VHLU9",38,0)
 . S LA7SITE=$$RETFACID^LA7VHLU2(LA7DIV,0,1)
"RTN","LA7VHLU9",39,0)
 . I LA7SITE'="" D
"RTN","LA7VHLU9",40,0)
 . . S LA7VAF=$$GET1^DIQ(4,LA7DIV_",","AGENCY CODE","I")
"RTN","LA7VHLU9",41,0)
 . . I LA7VAF="V" S LA7SITE="VA"_LA7SITE
"RTN","LA7VHLU9",42,0)
 . . S LA7DUZ=LA7DUZ_"-"_LA7SITE,$P(LA7Y,LA7CS,8)="99VA4"
"RTN","LA7VHLU9",43,0)
 . S $P(LA7Y,LA7CS)=LA7DUZ
"RTN","LA7VHLU9",44,0)
 ;
"RTN","LA7VHLU9",45,0)
 ; If only name passed
"RTN","LA7VHLU9",46,0)
 I LA7Y="",'LA7DUZ D
"RTN","LA7VHLU9",47,0)
 . S NAME=LA7DUZ
"RTN","LA7VHLU9",48,0)
 . I LA7DUZ["[",LA7DUZ["]" D
"RTN","LA7VHLU9",49,0)
 . . S NAME=$P(LA7DUZ,"["),NAME(1)=$P(LA7DUZ,"[",2),NAME(1)=$P(NAME(1),"]")
"RTN","LA7VHLU9",50,0)
 . . I $P(NAME(1),":",2)?1(1"NPI",1"PN") S $P(LA7Y,LA7CS)=$P(NAME(1),":"),$P(LA7Y,LA7CS,9)=$P(NAME(1),":",4),$P(LA7Y,LA7CS,13)=$P(NAME(1),":",2)
"RTN","LA7VHLU9",51,0)
 . . I $P(NAME(1),":",2)?1(1"99"1.E,1"L") S $P(LA7Y,LA7CS)=$P(NAME(1),":"),$P(LA7Y,LA7CS,8)=$P(NAME(1),":",2)
"RTN","LA7VHLU9",52,0)
 . S NAME=$$CHKDATA^LA7VHLU3(NAME,LA7FS_LA7ECH)
"RTN","LA7VHLU9",53,0)
 . S LA7Z=$$HLNAME^XLFNAME(NAME,"S",LA7CS)
"RTN","LA7VHLU9",54,0)
 ;
"RTN","LA7VHLU9",55,0)
 I LA7Z'="" F I=1:1:6 S $P(LA7Y,LA7CS,I+1)=$P(LA7Z,LA7CS,I)
"RTN","LA7VHLU9",56,0)
 ;
"RTN","LA7VHLU9",57,0)
 ; Save this field to TMP global to use for subsequent calls.
"RTN","LA7VHLU9",58,0)
 I LA7DUZ'="" S ^TMP($J,"LA7VHLU","99VA200",LA7DUZ,LA7FS_LA7ECH,LA7DMT,LA7IDTYP)=LA7Y
"RTN","LA7VHLU9",59,0)
 ;
"RTN","LA7VHLU9",60,0)
 Q LA7Y
"RTN","LA7VHLU9",61,0)
 ;
"RTN","LA7VHLU9",62,0)
 ;
"RTN","LA7VHLU9",63,0)
 ;
"RTN","LA7VHLU9",64,0)
XCNTFM(LA7X,LA7ECH) ; Resolve XCN data type to FileMan (last name, first name, mi [id])
"RTN","LA7VHLU9",65,0)
 ; Call with LA7X = HL7 field containing name
"RTN","LA7VHLU9",66,0)
 ;         LA7ECH = HL7 encoding characters
"RTN","LA7VHLU9",67,0)
 ;
"RTN","LA7VHLU9",68,0)
 ; Returns   LA7Y = ID code^DUZ^FileMan name (DUZ=0 if name not found on local system).
"RTN","LA7VHLU9",69,0)
 ;
"RTN","LA7VHLU9",70,0)
 N LA7DUZ,LA7IDC,LA7Y,LA7Z,X
"RTN","LA7VHLU9",71,0)
 ;
"RTN","LA7VHLU9",72,0)
 ;
"RTN","LA7VHLU9",73,0)
 S LA7DUZ=0
"RTN","LA7VHLU9",74,0)
 ;
"RTN","LA7VHLU9",75,0)
 ; Check for VPID
"RTN","LA7VHLU9",76,0)
 S (LA7IDC,LA7Z)=$P(LA7X,$E(LA7ECH))
"RTN","LA7VHLU9",77,0)
 I $P(LA7X,$E(LA7ECH),9)="USVHA",$P(LA7X,$E(LA7ECH),13)="PN" D
"RTN","LA7VHLU9",78,0)
 . S X=$$IEN^XUPS(LA7IDC)
"RTN","LA7VHLU9",79,0)
 . I X>0 S LA7DUZ=X
"RTN","LA7VHLU9",80,0)
 ;
"RTN","LA7VHLU9",81,0)
 ; Check for NPI
"RTN","LA7VHLU9",82,0)
 I $P(LA7X,$E(LA7ECH),9)="USDHHS",$P(LA7X,$E(LA7ECH),13)="NPI" D
"RTN","LA7VHLU9",83,0)
 . S X=$$QI^XUSNPI(LA7IDC)
"RTN","LA7VHLU9",84,0)
 . I $P(X,"^")="Individual_ID",$P(X,"^",2)>0 S LA7DUZ=$P(X,"^",2)
"RTN","LA7VHLU9",85,0)
 ;
"RTN","LA7VHLU9",86,0)
 ; Check for coding that indicates DUZ from a VA facility
"RTN","LA7VHLU9",87,0)
 I 'LA7DUZ,LA7Z?1.N1"-VA".NU,$$IEN^XUAF4($P(LA7Z,"-VA",2)) D
"RTN","LA7VHLU9",88,0)
 . N LA7DFLTINST,LA7J,LA7K
"RTN","LA7VHLU9",89,0)
 . S LA7Z(1)=$P(LA7Z,"-"),LA7Z(2)=$P(LA7Z,"-",2)
"RTN","LA7VHLU9",90,0)
 . S LA7DFLTINST=$$STA^XUAF4($$KSP^XUPARAM("INST"))
"RTN","LA7VHLU9",91,0)
 . I $E(LA7DFLTINST,1,3)'=$E(LA7Z(2),3,5) Q
"RTN","LA7VHLU9",92,0)
 . I $$ACTIVE^XUSER(LA7Z(1))'="" S LA7DUZ=LA7Z(1)
"RTN","LA7VHLU9",93,0)
 ;
"RTN","LA7VHLU9",94,0)
 ; Check if code resolves to a valid user.
"RTN","LA7VHLU9",95,0)
 I 'LA7DUZ,LA7Z=+LA7Z D
"RTN","LA7VHLU9",96,0)
 . S X=$$ACTIVE^XUSER(LA7Z)
"RTN","LA7VHLU9",97,0)
 . I X,$P(X,"^",2)'="" S LA7DUZ=LA7Z
"RTN","LA7VHLU9",98,0)
 ;
"RTN","LA7VHLU9",99,0)
 S LA7Y=$$FMNAME^HLFNC($P(LA7X,$E(LA7ECH),2,6),LA7ECH)
"RTN","LA7VHLU9",100,0)
 ; HL function sometimes returns trailing "," on name
"RTN","LA7VHLU9",101,0)
 S LA7Y=$$TRIM^XLFSTR(LA7Y,"R",",")
"RTN","LA7VHLU9",102,0)
 ;
"RTN","LA7VHLU9",103,0)
 ; Put identifying code at end of name in "[code:id type:va id type:issuing authority]".
"RTN","LA7VHLU9",104,0)
 I $P(LA7X,$E(LA7ECH))'="",LA7Y'="" D
"RTN","LA7VHLU9",105,0)
 . S X=""
"RTN","LA7VHLU9",106,0)
 . I $P(LA7X,$E(LA7ECH),8)?1(1"99"1.E,1"L") S X=$P(LA7X,$E(LA7ECH),8)
"RTN","LA7VHLU9",107,0)
 . I $P(LA7X,$E(LA7ECH),9)="USVHA",$P(LA7X,$E(LA7ECH),13)="PN" S X="PN:VPID:USVHA"
"RTN","LA7VHLU9",108,0)
 . I $P(LA7X,$E(LA7ECH),9)="USDHHS",$P(LA7X,$E(LA7ECH),13)="NPI" S X="NPI:NPI:USDHHS"
"RTN","LA7VHLU9",109,0)
 . S LA7Y=LA7Y_" ["_$P(LA7X,$E(LA7ECH))_":"_X_"]"
"RTN","LA7VHLU9",110,0)
 ;
"RTN","LA7VHLU9",111,0)
 Q LA7IDC_"^"_LA7DUZ_"^"_LA7Y
"RTN","LA7VHLU9",112,0)
 ;
"RTN","LA7VHLU9",113,0)
 ;
"RTN","LA7VHLU9",114,0)
 ;
"RTN","LA7VHLU9",115,0)
XTN(LA7FN,LA7DA,LA7FLDSEQ,LA7MAXREP,LA7DT,LA7FS,LA7ECH) ; Build extended telecommunication number ;**88
"RTN","LA7VHLU9",116,0)
 ; Call with LA7FN = Source File number
"RTN","LA7VHLU9",117,0)
 ;                   Presently file #2 (PATIENT), #4 (INSTITUTION) or #200 (NEW PERSON)
"RTN","LA7VHLU9",118,0)
 ;           LA7DA = Entry in source file
"RTN","LA7VHLU9",119,0)
 ;       LA7FLDSEQ = List of file #200 fields and sequence to build in field separate by ";"  e.g. ".138;.137;"
"RTN","LA7VHLU9",120,0)
 ;       LA7MAXREP = Maximum # of contact numbers to build in field.
"RTN","LA7VHLU9",121,0)
 ;           LA7DT = As of date in FileMan format
"RTN","LA7VHLU9",122,0)
 ;           LA7FS = HL field separator
"RTN","LA7VHLU9",123,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VHLU9",124,0)
 ;
"RTN","LA7VHLU9",125,0)
 ; Returns extended telecommunication numbers
"RTN","LA7VHLU9",126,0)
 ;
"RTN","LA7VHLU9",127,0)
 N LA7X,LA7Y
"RTN","LA7VHLU9",128,0)
 S LA7Y=""
"RTN","LA7VHLU9",129,0)
 I $G(LA7DT)="" S LA7DT=DT
"RTN","LA7VHLU9",130,0)
 I $G(LA7MAXREP)="" S LA7MAXREP=99
"RTN","LA7VHLU9",131,0)
 ;
"RTN","LA7VHLU9",132,0)
 ; Check if this field has been built previously for this entity
"RTN","LA7VHLU9",133,0)
 I LA7FN,LA7DA,$D(^TMP($J,"LA7VHLU","99VAXTN",LA7FN,LA7DA,LA7FS_LA7ECH)) S LA7Y=^TMP($J,"LA7VHLU","99VAXTN",LA7FN,LA7DA,LA7FS_LA7ECH)
"RTN","LA7VHLU9",134,0)
 ;
"RTN","LA7VHLU9",135,0)
 ; Build from file #200 the following fields:
"RTN","LA7VHLU9",136,0)
 ;   #.131 PHONE (HOME), #.132 OFFICE PHONE, #.133 PHONE #3, #.134 PHONE #4, #.135 COMMERCIAL PHONE, #.136 FAX NUMBER, #.137 VOICE PAGER, #.138 DIGITAL PAGER
"RTN","LA7VHLU9",137,0)
 ;
"RTN","LA7VHLU9",138,0)
 I LA7Y="",LA7FN=200,LA7DA D
"RTN","LA7VHLU9",139,0)
 . N LA7ERR,LA7I,LA7J,LA7REP,LA7XTN
"RTN","LA7VHLU9",140,0)
 . I $G(LA7FLDSEQ)="" S LA7FLDSEQ=".132;.138;.137"
"RTN","LA7VHLU9",141,0)
 . D GETS^DIQ(200,LA7DA_",",LA7FLDSEQ,"E","LA7XTN(LA7DA)","LA7ERR")
"RTN","LA7VHLU9",142,0)
 . S LA7REP=0
"RTN","LA7VHLU9",143,0)
 . F LA7J=1:1 S LA7I=$P(LA7FLDSEQ,";",LA7J) Q:LA7I=""!(LA7REP=LA7MAXREP)  I LA7XTN(LA7DA,200,LA7DA_",",LA7I,"E")'="" D
"RTN","LA7VHLU9",144,0)
 . . S LA7X="",LA7REP=LA7REP+1
"RTN","LA7VHLU9",145,0)
 . . S $P(LA7X,$E(LA7ECH),2)=$S(LA7I=.131:"PRN",LA7I=.138:"BPN",LA7I=.137:"BPN",1:"WPN")
"RTN","LA7VHLU9",146,0)
 . . S $P(LA7X,$E(LA7ECH),3)=$S(LA7I=.138:"BP",LA7I=.137:"BP",LA7X=.136:"FX",1:"PH")
"RTN","LA7VHLU9",147,0)
 . . S $P(LA7X,$E(LA7ECH),9)=$$CHKDATA^LA7VHLU3($$GET1^DID(200,LA7I,"","LABEL")_" (#"_LA7I_")",LA7FS_LA7ECH)
"RTN","LA7VHLU9",148,0)
 . . S $P(LA7X,$E(LA7ECH),12)=$$CHKDATA^LA7VHLU3(LA7XTN(LA7DA,200,LA7DA_",",LA7I,"E"),LA7FS_LA7ECH)
"RTN","LA7VHLU9",149,0)
 . . I LA7REP>1 S LA7Y=LA7Y_$E(LA7ECH,2)_LA7X
"RTN","LA7VHLU9",150,0)
 . . E  S LA7Y=LA7X
"RTN","LA7VHLU9",151,0)
 ;
"RTN","LA7VHLU9",152,0)
 ; Build from file #2
"RTN","LA7VHLU9",153,0)
 I LA7Y="",LA7FN=2,LA7DA D
"RTN","LA7VHLU9",154,0)
 . N DFN,VAHOW,VAPA,VAERR,VAROOT,VATEST
"RTN","LA7VHLU9",155,0)
 . S DFN=LA7DA
"RTN","LA7VHLU9",156,0)
 . I LA7DT S (VATEST("ADD",9),VATEST("ADD",10))=LA7DT
"RTN","LA7VHLU9",157,0)
 . D ADD^VADPT
"RTN","LA7VHLU9",158,0)
 . I VAERR Q
"RTN","LA7VHLU9",159,0)
 . S $P(LA7Y,$E(LA7ECH),1)=""
"RTN","LA7VHLU9",160,0)
 . S $P(LA7Y,$E(LA7ECH),2)="PRN"
"RTN","LA7VHLU9",161,0)
 . S $P(LA7Y,$E(LA7ECH),3)="PH"
"RTN","LA7VHLU9",162,0)
 . S $P(LA7Y,$E(LA7ECH),12)=$$CHKDATA^LA7VHLU3($P(VAPA(8),"^"),LA7FS_LA7ECH)
"RTN","LA7VHLU9",163,0)
 ;
"RTN","LA7VHLU9",164,0)
 ; Build info from file #4
"RTN","LA7VHLU9",165,0)
 I LA7Y="",LA7FN=4,LA7DA D
"RTN","LA7VHLU9",166,0)
 . Q
"RTN","LA7VHLU9",167,0)
 ;
"RTN","LA7VHLU9",168,0)
 ; Save this field to TMP global to use for subsequent calls.
"RTN","LA7VHLU9",169,0)
 I LA7Y'="" S ^TMP($J,"LA7VHLU","99VAXTN",LA7FN,LA7DA,LA7FS_LA7ECH)=LA7Y
"RTN","LA7VHLU9",170,0)
 ;
"RTN","LA7VHLU9",171,0)
 Q LA7Y ;
"RTN","LA7VIN")
0^1^B31997123
"RTN","LA7VIN",1,0)
LA7VIN ;DALOI/JMC - Process Incoming Lab HL7 Messages ;11/18/15  12:29
"RTN","LA7VIN",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,67,74,88**;Sep 27, 1994;Build 10
"RTN","LA7VIN",3,0)
 ;
"RTN","LA7VIN",4,0)
 ; This routine processes incoming messages for various Lab HL7 configurations.
"RTN","LA7VIN",5,0)
 Q
"RTN","LA7VIN",6,0)
 ;
"RTN","LA7VIN",7,0)
EN ; Only one process should run at a time
"RTN","LA7VIN",8,0)
 ;
"RTN","LA7VIN",9,0)
 ; Expects variable LA76248 = internal entry # of message configuration in LA7 MESSAGE PARAMETER file (#62.48)
"RTN","LA7VIN",10,0)
 ;
"RTN","LA7VIN",11,0)
 N DIQUIET,LA76249,LA7I,LA7INTYP,LA7LOOP,LA7X,LRQUIET
"RTN","LA7VIN",12,0)
 ;
"RTN","LA7VIN",13,0)
 ; Prevent FileMan from issuing any unwanted WRITE(s).
"RTN","LA7VIN",14,0)
 S (DIQUIET,LRQUIET)=1
"RTN","LA7VIN",15,0)
 ; Insure DT and DILOCKTM is defined
"RTN","LA7VIN",16,0)
 D DT^DICRW
"RTN","LA7VIN",17,0)
 ;
"RTN","LA7VIN",18,0)
 L +^LAHM(62.48,"Z",LA76248):10
"RTN","LA7VIN",19,0)
 E  S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LA7VIN",20,0)
 ;
"RTN","LA7VIN",21,0)
 ; Setup DUZ array to 'non-human' user LRLAB,HL
"RTN","LA7VIN",22,0)
 ; If user not found - send alert to G.LAB MESSAGING
"RTN","LA7VIN",23,0)
 S LA7X=$P($G(^XTMP("LA7 PROXY","LRLAB,HL")),"^")
"RTN","LA7VIN",24,0)
 I LA7X<1 D
"RTN","LA7VIN",25,0)
 . S LA7X=$$FIND1^DIC(200,"","OQUX","LRLAB,HL","B","")
"RTN","LA7VIN",26,0)
 . S ^XTMP("LA7 PROXY",0)=DT_"^"_DT_"^LAB HL7 PROXY USERS"
"RTN","LA7VIN",27,0)
 . I LA7X>0 S ^XTMP("LA7 PROXY","LRLAB,HL")=LA7X
"RTN","LA7VIN",28,0)
 I LA7X<1 D  Q
"RTN","LA7VIN",29,0)
 . N MSG
"RTN","LA7VIN",30,0)
 . S MSG="Lab Messaging - Unable to identify user 'LRLAB,HL' in NEW PERSON file"
"RTN","LA7VIN",31,0)
 . D XQA^LA7UXQA(0,LA76248,0,0,MSG,"",0)
"RTN","LA7VIN",32,0)
 . L -^LAHM(62.48,"Z",LA76248)
"RTN","LA7VIN",33,0)
 D DUZ^XUP(LA7X)
"RTN","LA7VIN",34,0)
 ;
"RTN","LA7VIN",35,0)
 ; Determine interface type
"RTN","LA7VIN",36,0)
 S LA7INTYP=+$P(^LAHM(62.48,LA76248,0),"^",9)
"RTN","LA7VIN",37,0)
 ;
"RTN","LA7VIN",38,0)
 ; main loop, LA7LOOP reset in GETIN, if no messages for 5 minutes (60x5) then quit
"RTN","LA7VIN",39,0)
 F LA7LOOP=1:1:60 D  Q:$G(ZTSTOP)
"RTN","LA7VIN",40,0)
 . ; Check if task has been requested to stop
"RTN","LA7VIN",41,0)
 . I $$S^%ZTLOAD("Idle - waiting for new messages to process") S ZTSTOP=1 Q
"RTN","LA7VIN",42,0)
 . D GETIN
"RTN","LA7VIN",43,0)
 . I LA7LOOP<60 H 5
"RTN","LA7VIN",44,0)
 ;
"RTN","LA7VIN",45,0)
 ; Release lock
"RTN","LA7VIN",46,0)
 L -^LAHM(62.48,"Z",LA76248)
"RTN","LA7VIN",47,0)
 ;
"RTN","LA7VIN",48,0)
 ; Kill running flag
"RTN","LA7VIN",49,0)
 K ^XTMP("LA7VIN",LA76248)
"RTN","LA7VIN",50,0)
 ;
"RTN","LA7VIN",51,0)
 ; Clean up taskman
"RTN","LA7VIN",52,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LA7VIN",53,0)
 ;
"RTN","LA7VIN",54,0)
 ; Check TaskMan for scheduled lab option
"RTN","LA7VIN",55,0)
 D CHECKTM
"RTN","LA7VIN",56,0)
 ;
"RTN","LA7VIN",57,0)
 ; Check if LAB MESSAGING mail group has active members
"RTN","LA7VIN",58,0)
 D CHECKMG
"RTN","LA7VIN",59,0)
 ;
"RTN","LA7VIN",60,0)
 K LA76248
"RTN","LA7VIN",61,0)
 K CENUM,DPF,ECHOALL,ER,IDE,IDT,LALCT,LANM,LAZZ,LINK,LRTEC,NOW,RMK,T,TC,TP,TSK,WDT
"RTN","LA7VIN",62,0)
 Q
"RTN","LA7VIN",63,0)
 ;
"RTN","LA7VIN",64,0)
 ;
"RTN","LA7VIN",65,0)
GETIN ; Check the incoming queue for messages and then call LA7VIN1 to process the message.
"RTN","LA7VIN",66,0)
 ;
"RTN","LA7VIN",67,0)
 ; LA7MSGPROCESSED is a counter of number of messages processed. Used to insure if volume of messages
"RTN","LA7VIN",68,0)
 ;  being received results in the "IQ" not being empty that the processing routine to process
"RTN","LA7VIN",69,0)
 ;  the information in LAH is periodically tasked for those interfaces (POC, etc) that have such a behavior.
"RTN","LA7VIN",70,0)
 ;
"RTN","LA7VIN",71,0)
 N LA7MSGPROCESSED
"RTN","LA7VIN",72,0)
 S LA7MSGPROCESSED=0
"RTN","LA7VIN",73,0)
 ;
"RTN","LA7VIN",74,0)
 ; Update XTMP entry to let messaging know we're still running for this configuration.
"RTN","LA7VIN",75,0)
 D XTMP
"RTN","LA7VIN",76,0)
 ;
"RTN","LA7VIN",77,0)
 ; Check incoming queue
"RTN","LA7VIN",78,0)
 Q:'$O(^LAHM(62.49,"Q",LA76248,"IQ",0))
"RTN","LA7VIN",79,0)
 ;
"RTN","LA7VIN",80,0)
 ; Reset timeout counter
"RTN","LA7VIN",81,0)
 S LA7LOOP=1
"RTN","LA7VIN",82,0)
 ;
"RTN","LA7VIN",83,0)
 ; Get lock on message, quit if still building, process message then release lock.
"RTN","LA7VIN",84,0)
 F  S LA76249=$O(^LAHM(62.49,"Q",LA76248,"IQ",0)) Q:'LA76249  D  Q:$G(ZTSTOP)
"RTN","LA7VIN",85,0)
 . ; Check if task has been requested to stop
"RTN","LA7VIN",86,0)
 . I $$S^%ZTLOAD("Processing msg #"_LA76249) S ZTSTOP=1 Q
"RTN","LA7VIN",87,0)
 . L +^LAHM(62.49,LA76249):DILOCKTM
"RTN","LA7VIN",88,0)
 . I '$T H 5 Q
"RTN","LA7VIN",89,0)
 . D NXTMSG^LA7VIN1
"RTN","LA7VIN",90,0)
 . L -^LAHM(62.49,LA76249)
"RTN","LA7VIN",91,0)
 . S LA7MSGPROCESSED=LA7MSGPROCESSED+1
"RTN","LA7VIN",92,0)
 . I (LA7MSGPROCESSED#10)=0 D CHKPROC
"RTN","LA7VIN",93,0)
 ;
"RTN","LA7VIN",94,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7VIN",95,0)
 ;
"RTN","LA7VIN",96,0)
 D CHKPROC
"RTN","LA7VIN",97,0)
 ;
"RTN","LA7VIN",98,0)
 Q
"RTN","LA7VIN",99,0)
 ;
"RTN","LA7VIN",100,0)
 ;
"RTN","LA7VIN",101,0)
CHKPROC ; Check if any processing routine need to be tasked to process info in LAH
"RTN","LA7VIN",102,0)
 ;
"RTN","LA7VIN",103,0)
 ; If point of care interface then task job(s) to process results in LAH.
"RTN","LA7VIN",104,0)
 I LA7INTYP>19,LA7INTYP<30,$D(LA7INTYP("LWL")) D
"RTN","LA7VIN",105,0)
 . I $G(ZTSTOP)=1 Q
"RTN","LA7VIN",106,0)
 . S LA7I=0
"RTN","LA7VIN",107,0)
 . F  S LA7I=$O(LA7INTYP("LWL",LA7I)) Q:'LA7I  D
"RTN","LA7VIN",108,0)
 . . D QLAH(LA7I,"EN^LRVRPOC")
"RTN","LA7VIN",109,0)
 . . K LA7INTYP("LWL",LA7I)
"RTN","LA7VIN",110,0)
 ;
"RTN","LA7VIN",111,0)
 ; If universal interface and auto-release turned on then task job(s) to process results in LAH. ;**88
"RTN","LA7VIN",112,0)
 I LA7INTYP=1,$D(LA7INTYP("LWL")) D
"RTN","LA7VIN",113,0)
 . I $G(ZTSTOP)=1 Q
"RTN","LA7VIN",114,0)
 . S LA7I=0
"RTN","LA7VIN",115,0)
 . F  S LA7I=$O(LA7INTYP("LWL",LA7I)) Q:'LA7I  D
"RTN","LA7VIN",116,0)
 . . D QLAH(LA7I,"EN^LRVRAR")
"RTN","LA7VIN",117,0)
 . . K LA7INTYP("LWL",LA7I)
"RTN","LA7VIN",118,0)
 ;
"RTN","LA7VIN",119,0)
 Q
"RTN","LA7VIN",120,0)
 ;
"RTN","LA7VIN",121,0)
 ;
"RTN","LA7VIN",122,0)
QUE ; Call here to queue this processing routine to run in the background.
"RTN","LA7VIN",123,0)
 ; Required variables are:  LA76248 = pointer to configuration in 62.48
"RTN","LA7VIN",124,0)
 ;
"RTN","LA7VIN",125,0)
 ; Check if we recently tasked the processing routine for this configuration.
"RTN","LA7VIN",126,0)
 ; Done to avoid repetitive locking attempts on each new message since the
"RTN","LA7VIN",127,0)
 ; FileMan locking API uses a site-defined timeout which is usually 3 seconds
"RTN","LA7VIN",128,0)
 ; but can be more. Slows down the interface if on each message we are waiting
"RTN","LA7VIN",129,0)
 ; 3 or more seconds for the lock to find out if the processing routine is already
"RTN","LA7VIN",130,0)
 ; running.
"RTN","LA7VIN",131,0)
 N LA7X,LA7Y
"RTN","LA7VIN",132,0)
 S LA7X=$H,LA7Y=$G(^XTMP("LA7VIN",LA76248))
"RTN","LA7VIN",133,0)
 I $P(LA7X,",")=$P(LA7Y,","),($P(LA7X,",",2)-$P(LA7Y,",",2))<240 Q
"RTN","LA7VIN",134,0)
 ;
"RTN","LA7VIN",135,0)
 ; See if already running
"RTN","LA7VIN",136,0)
 L +^LAHM(62.48,"Z",LA76248):DILOCKTM
"RTN","LA7VIN",137,0)
 I '$T Q
"RTN","LA7VIN",138,0)
 ;
"RTN","LA7VIN",139,0)
 N ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTRTN,ZTSK
"RTN","LA7VIN",140,0)
 S ZTRTN="EN^LA7VIN",ZTDTH=$H,ZTIO=""
"RTN","LA7VIN",141,0)
 S ZTDESC="Processing Routine for "_$P(^LAHM(62.48,LA76248,0),"^")
"RTN","LA7VIN",142,0)
 S ZTSAVE("LA76248")=LA76248
"RTN","LA7VIN",143,0)
 D ^%ZTLOAD
"RTN","LA7VIN",144,0)
 ;
"RTN","LA7VIN",145,0)
 D XTMP
"RTN","LA7VIN",146,0)
 ;
"RTN","LA7VIN",147,0)
 L -^LAHM(62.48,"Z",LA76248)
"RTN","LA7VIN",148,0)
 ;
"RTN","LA7VIN",149,0)
 Q
"RTN","LA7VIN",150,0)
 ;
"RTN","LA7VIN",151,0)
 ;
"RTN","LA7VIN",152,0)
QLAH(LWL,ZTRTN) ; Call here to queue result processing routine to run in the background.
"RTN","LA7VIN",153,0)
 ; Call with LWL = pointer to load list in file #68.2
"RTN","LA7VIN",154,0)
 ;         ZTRTN = name of processing routine to task
"RTN","LA7VIN",155,0)
 ;
"RTN","LA7VIN",156,0)
 ;
"RTN","LA7VIN",157,0)
 ; See if already running
"RTN","LA7VIN",158,0)
 L +^LAH("Z",LWL):DILOCKTM
"RTN","LA7VIN",159,0)
 I '$T Q
"RTN","LA7VIN",160,0)
 L -^LAH("Z",LWL)
"RTN","LA7VIN",161,0)
 ;
"RTN","LA7VIN",162,0)
 N ZTDESC,ZTDTH,ZTIO,ZTSAVE,ZTSK
"RTN","LA7VIN",163,0)
 S ZTDTH=$H,ZTIO="",ZTDESC="Result Processing for "_$P(^LRO(68.2,LWL,0),"^")
"RTN","LA7VIN",164,0)
 S ZTSAVE("LRLL")=LWL
"RTN","LA7VIN",165,0)
 D ^%ZTLOAD
"RTN","LA7VIN",166,0)
 ;
"RTN","LA7VIN",167,0)
 Q
"RTN","LA7VIN",168,0)
 ;
"RTN","LA7VIN",169,0)
 ;
"RTN","LA7VIN",170,0)
CHECKTM ; Check is LA7TASK NIGHTY is scheduled in TaskMan.
"RTN","LA7VIN",171,0)
 ;
"RTN","LA7VIN",172,0)
 N LA7TSK,LA7J,MSG,NOW,OK
"RTN","LA7VIN",173,0)
 S (LA7TSK,OK)=0
"RTN","LA7VIN",174,0)
 D OPTSTAT^XUTMOPT("LA7TASK NIGHTY",.LA7TSK)
"RTN","LA7VIN",175,0)
 ;
"RTN","LA7VIN",176,0)
 ; If scheduled check to see if for the future
"RTN","LA7VIN",177,0)
 I LA7TSK>0 D
"RTN","LA7VIN",178,0)
 . S LA7J=0,NOW=$$NOW^XLFDT
"RTN","LA7VIN",179,0)
 . F  S LA7J=$O(LA7TSK(LA7J)) Q:'LA7J  I $P(LA7TSK(LA7J),"^",2)>NOW S OK=1 Q
"RTN","LA7VIN",180,0)
 I OK Q
"RTN","LA7VIN",181,0)
 ;
"RTN","LA7VIN",182,0)
 ; Option is not scheduled - send alert to G.LAB MESSAGING
"RTN","LA7VIN",183,0)
 S MSG="Lab Messaging - Option LA7TASK NIGHTY is not scheduled in TaskMan^LA7-MESSAGE-CHECKTM"
"RTN","LA7VIN",184,0)
 D XQA^LA7UXQA(0,LA76248,0,0,MSG,"",0)
"RTN","LA7VIN",185,0)
 Q
"RTN","LA7VIN",186,0)
 ;
"RTN","LA7VIN",187,0)
 ;
"RTN","LA7VIN",188,0)
CHECKMG ; Check if LAB MESSAGING mail group has active members.
"RTN","LA7VIN",189,0)
 ;
"RTN","LA7VIN",190,0)
 N XMERR,XQA,XQAID,XQAMSG
"RTN","LA7VIN",191,0)
 ;
"RTN","LA7VIN",192,0)
 ; See if mail group check has been done today
"RTN","LA7VIN",193,0)
 I $P($G(^XTMP("LA7CHECKMG",0)),"^",2)=DT Q
"RTN","LA7VIN",194,0)
 ;
"RTN","LA7VIN",195,0)
 ; Set flag that we've check the membership today.
"RTN","LA7VIN",196,0)
 S ^XTMP("LA7CHECKMG",0)=DT_"^"_DT_"^LAB HL7 CHECK LAB MESSAGING MAIL GROUP MEMBERS"
"RTN","LA7VIN",197,0)
 ;
"RTN","LA7VIN",198,0)
 K ^TMP("XMERR",$J)
"RTN","LA7VIN",199,0)
 I $$GOTLOCAL^XMXAPIG("LAB MESSAGING") Q
"RTN","LA7VIN",200,0)
 ;
"RTN","LA7VIN",201,0)
 ; Mail group has no active members
"RTN","LA7VIN",202,0)
 S XQAMSG="Lab Messaging - Mail group LAB MESSAGING has no active members"
"RTN","LA7VIN",203,0)
 ; Delete previous alerts
"RTN","LA7VIN",204,0)
 S XQAID="LA7-MESSAGE-CHECKMG"
"RTN","LA7VIN",205,0)
 D DEL^LA7UXQA(XQAID)
"RTN","LA7VIN",206,0)
 ;
"RTN","LA7VIN",207,0)
 ; Send alert to holders of mail group LMI
"RTN","LA7VIN",208,0)
 I $$GOTLOCAL^XMXAPIG("LMI") D  Q
"RTN","LA7VIN",209,0)
 . S XQA("G.LMI")=""
"RTN","LA7VIN",210,0)
 . D SETUP^XQALERT
"RTN","LA7VIN",211,0)
 . K ^TMP("XMERR",$J)
"RTN","LA7VIN",212,0)
 ;
"RTN","LA7VIN",213,0)
 ; Neither LAB MESSAGING or LMI mail groups have active members - send alert to holders of LRLIASON security key
"RTN","LA7VIN",214,0)
 S XQAMSG="Lab Messaging - Mail groups LAB MESSAGING and LMI have no active members"
"RTN","LA7VIN",215,0)
 M XQA=^XUSEC("LRLIASON")
"RTN","LA7VIN",216,0)
 D SETUP^XQALERT
"RTN","LA7VIN",217,0)
 K ^TMP("XMERR",$J)
"RTN","LA7VIN",218,0)
 ;
"RTN","LA7VIN",219,0)
 Q
"RTN","LA7VIN",220,0)
 ;
"RTN","LA7VIN",221,0)
 ;
"RTN","LA7VIN",222,0)
XTMP ; Set/update XTMP with current run time of this processing routine
"RTN","LA7VIN",223,0)
 ;
"RTN","LA7VIN",224,0)
 S ^XTMP("LA7VIN",0)=DT_"^"_DT_"^LAB HL7 PROCESS TASKING"
"RTN","LA7VIN",225,0)
 S ^XTMP("LA7VIN",LA76248)=$H
"RTN","LA7VIN",226,0)
 Q
"RTN","LA7VIN1")
0^7^B65233143
"RTN","LA7VIN1",1,0)
LA7VIN1 ;DALOI/JMC - Process Incoming UI Msgs, continued ;04/06/16  15:51
"RTN","LA7VIN1",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74,88**;Sep 27, 1994;Build 10
"RTN","LA7VIN1",3,0)
 ;
"RTN","LA7VIN1",4,0)
 ; This routine is a continuation of LA7VIN and is only called from there.
"RTN","LA7VIN1",5,0)
 ; It is called with each message found in the incoming queue.
"RTN","LA7VIN1",6,0)
 Q
"RTN","LA7VIN1",7,0)
 ;
"RTN","LA7VIN1",8,0)
NXTMSG ;
"RTN","LA7VIN1",9,0)
 N FDA,LA7ABORT,LA7AERR,LA7CNT,LA7END,LA7ERR
"RTN","LA7VIN1",10,0)
 N LA7INDX,LA7KILAH,LA7QUIT,LA7SEG,LA7STYP
"RTN","LA7VIN1",11,0)
 ;
"RTN","LA7VIN1",12,0)
 S (LA7AERR,LA7ERR)=""
"RTN","LA7VIN1",13,0)
 S (LA7ABORT,LA7CNT,LA7END,LA7INDX,LA7QUIT,LA7SEQ)=0
"RTN","LA7VIN1",14,0)
 S DT=$$DT^XLFDT
"RTN","LA7VIN1",15,0)
 S LA7ID="UNKNOWN-I-"
"RTN","LA7VIN1",16,0)
 ;
"RTN","LA7VIN1",17,0)
 ; Message built but no text.
"RTN","LA7VIN1",18,0)
 I '$O(^LAHM(62.49,LA76249,150,0)) D  Q
"RTN","LA7VIN1",19,0)
 . S (LA7ABORT,LA7ERR)=6
"RTN","LA7VIN1",20,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",21,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,"UNKNOWN",1)
"RTN","LA7VIN1",22,0)
 ;
"RTN","LA7VIN1",23,0)
 ; Process message segments
"RTN","LA7VIN1",24,0)
 ; Lab currently does not accept segments beginning with the letter "Z" which are reserved for locally-defined messages.
"RTN","LA7VIN1",25,0)
 ; "Z" segments will be ignored by this software.
"RTN","LA7VIN1",26,0)
 F  S LA7END=$$GETSEG^LA7VHLU2(LA76249,.LA7INDX,.LA7SEG) Q:LA7END!(LA7ABORT)  D
"RTN","LA7VIN1",27,0)
 . S LA7STYP=$E(LA7SEG(0),1,3) ; Segment type
"RTN","LA7VIN1",28,0)
 . I $E(LA7STYP,1)="Z" Q
"RTN","LA7VIN1",29,0)
 . ; Not a valid segment type
"RTN","LA7VIN1",30,0)
 . I LA7STYP'?2U1UN D  Q
"RTN","LA7VIN1",31,0)
 . . S LA7ERR=34
"RTN","LA7VIN1",32,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",33,0)
 . ; Segment encoded wrong - field separator does not match
"RTN","LA7VIN1",34,0)
 . I "MSH^FSH^BHS^"'[(LA7STYP_"^"),$E(LA7SEG(0),4)'=LA7FS D  Q
"RTN","LA7VIN1",35,0)
 . . S LA7ERR=35
"RTN","LA7VIN1",36,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",37,0)
 . I $T(@LA7STYP)="" Q  ; No processing logic for this segment type
"RTN","LA7VIN1",38,0)
 . D @LA7STYP
"RTN","LA7VIN1",39,0)
 ;
"RTN","LA7VIN1",40,0)
 ; Send HL7 Application Acknowledgment message for selected interfaces/message types
"RTN","LA7VIN1",41,0)
 I LA7MTYP="ORM",LA7INTYP=10 D SENDACK
"RTN","LA7VIN1",42,0)
 I LA7MTYP="ORU",LA7INTYP=1,LA7AAT(1)'="" D
"RTN","LA7VIN1",43,0)
 . I $G(LA76249("AR")) Q  ; Auto Release will send application ACK.
"RTN","LA7VIN1",44,0)
 . I LA7AAT(1)="NE" Q
"RTN","LA7VIN1",45,0)
 . I LA7AAT(1)="SU",$G(LA7ERR)'="" Q
"RTN","LA7VIN1",46,0)
 . I LA7AAT(1)="ER",$G(LA7ERR)="" Q
"RTN","LA7VIN1",47,0)
 . D SENDACK
"RTN","LA7VIN1",48,0)
 ;
"RTN","LA7VIN1",49,0)
 ; Set id if only MSH segment received.
"RTN","LA7VIN1",50,0)
 I LA7SEQ<5 D
"RTN","LA7VIN1",51,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,"UNKNOWN",1)
"RTN","LA7VIN1",52,0)
 ;
"RTN","LA7VIN1",53,0)
 ; Set status to purgeable if no errors.
"RTN","LA7VIN1",54,0)
 I $P($G(^LAHM(62.49,LA76249,0)),"^",3)'="E" D
"RTN","LA7VIN1",55,0)
 . S FDA(1,62.49,LA76249_",",2)="X"
"RTN","LA7VIN1",56,0)
 . D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VIN1",57,0)
 ;
"RTN","LA7VIN1",58,0)
 ; Store identifier's found in message.
"RTN","LA7VIN1",59,0)
 D UPID^LA7VHLU1(LA76249)
"RTN","LA7VIN1",60,0)
 ;
"RTN","LA7VIN1",61,0)
 ; Send new result alert for ORU messages if turned on.
"RTN","LA7VIN1",62,0)
 I $G(LA7MTYP)="ORU",$D(^LAHM(62.48,+$G(LA76248),20,"B",1)) D
"RTN","LA7VIN1",63,0)
 . N LA7MSG,LA7ROOT
"RTN","LA7VIN1",64,0)
 . S LA7ROOT="^TMP(""LA7-ORU"",$J)"
"RTN","LA7VIN1",65,0)
 . F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7-ORU"!($QS(LA7ROOT,2)'=$J)  D
"RTN","LA7VIN1",66,0)
 . . S LA7MSG(1)=$S($QS(LA7ROOT,5)="CH":"Chemistry/Hematology",$QS(LA7ROOT,5)="MI":"Microbiology",$QS(LA7ROOT,5)="SP":"Surgical Pathology",$QS(LA7ROOT,5)="CY":"Cytology",$QS(LA7ROOT,5)="EM":"Electron Microscopy",1:"")
"RTN","LA7VIN1",67,0)
 . . I LA7MSG(1)'="" S LA7MSG(1)=" "_LA7MSG(1)
"RTN","LA7VIN1",68,0)
 . . S LA7MSG="Lab Msg - New"_LA7MSG(1)_" results received for "_$P($G(^LAHM(62.48,$QS(LA7ROOT,3),0),"UNKNOWN"),"^")_"^"_$QS(LA7ROOT,5)
"RTN","LA7VIN1",69,0)
 . . D XQA^LA7UXQA(1,$QS(LA7ROOT,3),"","",LA7MSG,"",0)
"RTN","LA7VIN1",70,0)
 ;
"RTN","LA7VIN1",71,0)
 ; Send new order alert for ORM messages if turned on.
"RTN","LA7VIN1",72,0)
 I $G(LA7MTYP)="ORM",$D(^LAHM(62.48,+$G(LA76248),20,"B",3)) D
"RTN","LA7VIN1",73,0)
 . N LA7ROOT
"RTN","LA7VIN1",74,0)
 . S LA7ROOT="^TMP(""LA7-ORM"",$J)"
"RTN","LA7VIN1",75,0)
 . F  S LA7ROOT=$Q(@LA7ROOT) Q:LA7ROOT=""  Q:$QS(LA7ROOT,1)'="LA7-ORM"!($QS(LA7ROOT,2)'=$J)  D
"RTN","LA7VIN1",76,0)
 . . D XQA^LA7UXQA(3,$QS(LA7ROOT,3),"",$QS(LA7ROOT,4),"",$QS(LA7ROOT,5))
"RTN","LA7VIN1",77,0)
 ;
"RTN","LA7VIN1",78,0)
 ; Create performing lab comment for entries in LAH.
"RTN","LA7VIN1",79,0)
 ;I $D(^TMP("LA7-PL-NTE",$J)) D PL^LA7VIN1B
"RTN","LA7VIN1",80,0)
 ;
"RTN","LA7VIN1",81,0)
 ; Cleanup shipping config test info used to process orders
"RTN","LA7VIN1",82,0)
 I $G(LA7MTYP)="ORM" K ^TMP("LA7TC",$J)
"RTN","LA7VIN1",83,0)
 ;
"RTN","LA7VIN1",84,0)
 ; If amended results received then send bulletins
"RTN","LA7VIN1",85,0)
 I $D(^TMP("LA7 AMENDED RESULTS",$J)) D SENDARB^LA7VIN1A
"RTN","LA7VIN1",86,0)
 ;
"RTN","LA7VIN1",87,0)
 ; If cancelled orders received then send bulletins
"RTN","LA7VIN1",88,0)
 I $D(^TMP("LA7 ORDER STATUS",$J)) D SENDOSB^LA7VIN1B
"RTN","LA7VIN1",89,0)
 ;
"RTN","LA7VIN1",90,0)
 ; If units/normals changed then send bulletins
"RTN","LA7VIN1",91,0)
 I $D(^TMP("LA7 UNITS/NORMALS CHANGED",$J)) D SENDUNCB^LA7VIN1A
"RTN","LA7VIN1",92,0)
 ;
"RTN","LA7VIN1",93,0)
 ; If abnormal/critical results then send bulletins
"RTN","LA7VIN1",94,0)
 I $D(^TMP("LA7 ABNORMAL RESULTS",$J)) D SENDACB^LA7VIN1A
"RTN","LA7VIN1",95,0)
 ;
"RTN","LA7VIN1",96,0)
 ; If auto release move cross-references to ^LAH from ^TMP to signal available for processing if no error.
"RTN","LA7VIN1",97,0)
 I $D(^TMP("LA7 AR",$J)),$P($G(^LAHM(62.49,LA76249,0)),"^",3)'="E" M ^LAH=^TMP("LA7 AR",$J)
"RTN","LA7VIN1",98,0)
 ;
"RTN","LA7VIN1",99,0)
 D KILLMSH
"RTN","LA7VIN1",100,0)
 ;
"RTN","LA7VIN1",101,0)
 Q
"RTN","LA7VIN1",102,0)
 ;
"RTN","LA7VIN1",103,0)
 ;
"RTN","LA7VIN1",104,0)
MSA ;; Process MSA segment
"RTN","LA7VIN1",105,0)
 ;
"RTN","LA7VIN1",106,0)
 D KILLMSA
"RTN","LA7VIN1",107,0)
 ;
"RTN","LA7VIN1",108,0)
 D MSA^LA7VIN3
"RTN","LA7VIN1",109,0)
 ;
"RTN","LA7VIN1",110,0)
 ; Set sequence flag
"RTN","LA7VIN1",111,0)
 S LA7SEQ=5
"RTN","LA7VIN1",112,0)
 Q
"RTN","LA7VIN1",113,0)
 ;
"RTN","LA7VIN1",114,0)
 ;
"RTN","LA7VIN1",115,0)
BSH ;; Process various HL7 header segments
"RTN","LA7VIN1",116,0)
FSH ;;
"RTN","LA7VIN1",117,0)
MSH ;;
"RTN","LA7VIN1",118,0)
 D KILLMSH
"RTN","LA7VIN1",119,0)
 ;
"RTN","LA7VIN1",120,0)
 D MSH^LA7VIN2
"RTN","LA7VIN1",121,0)
 ;
"RTN","LA7VIN1",122,0)
 ; Set sequence flag
"RTN","LA7VIN1",123,0)
 S LA7SEQ=1
"RTN","LA7VIN1",124,0)
 Q
"RTN","LA7VIN1",125,0)
 ;
"RTN","LA7VIN1",126,0)
 ;
"RTN","LA7VIN1",127,0)
NTE ;; Process NTE segment
"RTN","LA7VIN1",128,0)
 ;
"RTN","LA7VIN1",129,0)
 I LA7SEQ<30 D  Q
"RTN","LA7VIN1",130,0)
 . ; Put code to log error - no OBR/OBX segment
"RTN","LA7VIN1",131,0)
 ;
"RTN","LA7VIN1",132,0)
 ; Flag set that there was problem with OBR segment,
"RTN","LA7VIN1",133,0)
 ; skip associated NTE segments that follow OBR/OBX segments
"RTN","LA7VIN1",134,0)
 I LA7QUIT=2 Q
"RTN","LA7VIN1",135,0)
 ;
"RTN","LA7VIN1",136,0)
 I LA7MTYP="ORU" D NTE^LA7VIN2
"RTN","LA7VIN1",137,0)
 I LA7MTYP="ORM" D NTE^LA7VIN2
"RTN","LA7VIN1",138,0)
 I LA7MTYP="ORR" D NTE^LA7VIN2
"RTN","LA7VIN1",139,0)
 ;
"RTN","LA7VIN1",140,0)
 Q
"RTN","LA7VIN1",141,0)
 ;
"RTN","LA7VIN1",142,0)
 ;
"RTN","LA7VIN1",143,0)
OBR ;; Process OBR segment
"RTN","LA7VIN1",144,0)
 ;
"RTN","LA7VIN1",145,0)
 D KILLOBR
"RTN","LA7VIN1",146,0)
 ;
"RTN","LA7VIN1",147,0)
 ; Clear flag to process this segment
"RTN","LA7VIN1",148,0)
 I LA7QUIT>0 S LA7QUIT=0
"RTN","LA7VIN1",149,0)
 ;
"RTN","LA7VIN1",150,0)
 ; If not UI interface and no PID segment
"RTN","LA7VIN1",151,0)
 I LA7INTYP'=1,LA7SEQ<10 D  Q
"RTN","LA7VIN1",152,0)
 . S (LA7ABORT,LA7ERR)=46
"RTN","LA7VIN1",153,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",154,0)
 ;
"RTN","LA7VIN1",155,0)
 I LA7MTYP="ORR" D OBR^LA7VIN4
"RTN","LA7VIN1",156,0)
 I LA7MTYP="ORU" D OBR^LA7VIN4
"RTN","LA7VIN1",157,0)
 I LA7MTYP="ORM" D OBR^LA7VORM
"RTN","LA7VIN1",158,0)
 ;
"RTN","LA7VIN1",159,0)
 ; Set sequence flag
"RTN","LA7VIN1",160,0)
 S LA7SEQ=30
"RTN","LA7VIN1",161,0)
 Q
"RTN","LA7VIN1",162,0)
 ;
"RTN","LA7VIN1",163,0)
 ;
"RTN","LA7VIN1",164,0)
OBX ;; Process OBX segment
"RTN","LA7VIN1",165,0)
 ;
"RTN","LA7VIN1",166,0)
 D KILLOBX
"RTN","LA7VIN1",167,0)
 ;
"RTN","LA7VIN1",168,0)
 ; No OBR segment, can't process OBX
"RTN","LA7VIN1",169,0)
 I LA7SEQ<30 D  Q
"RTN","LA7VIN1",170,0)
 . S (LA7ABORT,LA7ERR)=9
"RTN","LA7VIN1",171,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",172,0)
 ;
"RTN","LA7VIN1",173,0)
 ; Flag set that there was problem with OBR segment,
"RTN","LA7VIN1",174,0)
 ; skip associated OBX segments that follow OBR segment
"RTN","LA7VIN1",175,0)
 I LA7QUIT=2 Q
"RTN","LA7VIN1",176,0)
 ;
"RTN","LA7VIN1",177,0)
 ; Process result messages (ORU).
"RTN","LA7VIN1",178,0)
 I LA7MTYP="ORU" D
"RTN","LA7VIN1",179,0)
 . I '$G(LA7ISQN) Q  ; No place to store results
"RTN","LA7VIN1",180,0)
 . ; Process "CH" subscript results.
"RTN","LA7VIN1",181,0)
 . I $G(LA7SS)="CH" D OBX^LA7VIN5
"RTN","LA7VIN1",182,0)
 . ;
"RTN","LA7VIN1",183,0)
 . ; Process AP subscripts results. "AU" not currently supported
"RTN","LA7VIN1",184,0)
 . I $G(LA7SS)?1(1"SP",1"CY",1"EM") D OBX^LA7VIN7
"RTN","LA7VIN1",185,0)
 . ;
"RTN","LA7VIN1",186,0)
 . ; Process "MI" subscript results.
"RTN","LA7VIN1",187,0)
 . I $G(LA7SS)="MI" D OBX^LA7VIN7
"RTN","LA7VIN1",188,0)
 . ;
"RTN","LA7VIN1",189,0)
 . ; Process "BB" subscript results - not supported
"RTN","LA7VIN1",190,0)
 . ;
"RTN","LA7VIN1",191,0)
 . ; Update test status on manifest
"RTN","LA7VIN1",192,0)
 . I $G(LA7628),LA7UID'="",$G(LA7OTST) D UTS^LA7VHLU1(LA7628,LA7UID,LA7OTST)
"RTN","LA7VIN1",193,0)
 ;
"RTN","LA7VIN1",194,0)
 ; Process results that accompany orders
"RTN","LA7VIN1",195,0)
 I LA7MTYP="ORM" D OBX^LA7VIN5
"RTN","LA7VIN1",196,0)
 ;
"RTN","LA7VIN1",197,0)
 ; Set sequence flag
"RTN","LA7VIN1",198,0)
 S LA7SEQ=40
"RTN","LA7VIN1",199,0)
 Q
"RTN","LA7VIN1",200,0)
 ;
"RTN","LA7VIN1",201,0)
 ;
"RTN","LA7VIN1",202,0)
ORC ;; Process ORC segment
"RTN","LA7VIN1",203,0)
 ;
"RTN","LA7VIN1",204,0)
 D KILLORC
"RTN","LA7VIN1",205,0)
 ;
"RTN","LA7VIN1",206,0)
 ; If not UI interface and no PID segment
"RTN","LA7VIN1",207,0)
 I LA7INTYP'=1,LA7SEQ<10 D  Q
"RTN","LA7VIN1",208,0)
 . S (LA7ABORT,LA7ERR)=46
"RTN","LA7VIN1",209,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",210,0)
 ;
"RTN","LA7VIN1",211,0)
 D ORC^LA7VIN2
"RTN","LA7VIN1",212,0)
 ;
"RTN","LA7VIN1",213,0)
 ; Set sequence flag
"RTN","LA7VIN1",214,0)
 S LA7SEQ=20
"RTN","LA7VIN1",215,0)
 Q
"RTN","LA7VIN1",216,0)
 ;
"RTN","LA7VIN1",217,0)
 ;
"RTN","LA7VIN1",218,0)
PID ;; Process PID segment
"RTN","LA7VIN1",219,0)
 ;
"RTN","LA7VIN1",220,0)
 D KILLPID
"RTN","LA7VIN1",221,0)
 ;
"RTN","LA7VIN1",222,0)
 ; no MSH segment
"RTN","LA7VIN1",223,0)
 I LA7SEQ<1 D  Q
"RTN","LA7VIN1",224,0)
 . S (LA7ABORT,LA7ERR)=7
"RTN","LA7VIN1",225,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",226,0)
 ;
"RTN","LA7VIN1",227,0)
 ; Clear flag to process this segment
"RTN","LA7VIN1",228,0)
 I LA7QUIT=1 S LA7QUIT=0
"RTN","LA7VIN1",229,0)
 ;
"RTN","LA7VIN1",230,0)
 D PID^LA7VIN2
"RTN","LA7VIN1",231,0)
 ;
"RTN","LA7VIN1",232,0)
 ; Set sequence flag
"RTN","LA7VIN1",233,0)
 S LA7SEQ=10
"RTN","LA7VIN1",234,0)
 Q
"RTN","LA7VIN1",235,0)
 ;
"RTN","LA7VIN1",236,0)
 ;
"RTN","LA7VIN1",237,0)
PV1 ;; Process PV1 segment
"RTN","LA7VIN1",238,0)
 ;
"RTN","LA7VIN1",239,0)
 D KILLPV1
"RTN","LA7VIN1",240,0)
 ;
"RTN","LA7VIN1",241,0)
 ; no PID segment
"RTN","LA7VIN1",242,0)
 I LA7SEQ<10 D  Q
"RTN","LA7VIN1",243,0)
 . S (LA7ABORT,LA7ERR)=46
"RTN","LA7VIN1",244,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN1",245,0)
 ;
"RTN","LA7VIN1",246,0)
 D PV1^LA7VIN2
"RTN","LA7VIN1",247,0)
 ;
"RTN","LA7VIN1",248,0)
 ; Set sequence flag
"RTN","LA7VIN1",249,0)
 S LA7SEQ=11
"RTN","LA7VIN1",250,0)
 Q
"RTN","LA7VIN1",251,0)
 ;
"RTN","LA7VIN1",252,0)
 ;
"RTN","LA7VIN1",253,0)
SENDACK ; Send HL7 Application Acknowledgment message for selected interfaces/message types
"RTN","LA7VIN1",254,0)
 ;
"RTN","LA7VIN1",255,0)
 ;ZEXCEPT: LA7624,LA76248,LA76249,LA7AERR,LA7ERR,LA7UID,PNM,SSN
"RTN","LA7VIN1",256,0)
 ;
"RTN","LA7VIN1",257,0)
 N LA
"RTN","LA7VIN1",258,0)
 S LA(62.48)=LA76248,LA(62.49)=LA76249
"RTN","LA7VIN1",259,0)
 I $G(LA7624) S LA(62.4)=LA7624
"RTN","LA7VIN1",260,0)
 S LA("ACK")=$S(+LA7ERR:"AE",1:"AA")
"RTN","LA7VIN1",261,0)
 I $G(LA7UID)'="" S LA("ID",1)=LA7UID
"RTN","LA7VIN1",262,0)
 I $G(LA7PNM)'="" S LA("ID",2)=LA7PNM
"RTN","LA7VIN1",263,0)
 I $G(LA7SSN)'="" S LA("ID",3)=LA7SSN
"RTN","LA7VIN1",264,0)
 I LA7AERR="" S LA7AERR=LA7ERR
"RTN","LA7VIN1",265,0)
 I LA7AERR>0,$P(LA7AERR,"^",2)="" S $P(LA7AERR,"^",2)="See VistA Lab Universal Interface Log for specific error"
"RTN","LA7VIN1",266,0)
 S LA("MSG")=$P(LA7AERR,"^",2)
"RTN","LA7VIN1",267,0)
 ;
"RTN","LA7VIN1",268,0)
 ; Build info for ERR segment
"RTN","LA7VIN1",269,0)
 D BLDERR^LA7VHLU8(.LA,LA7AERR)
"RTN","LA7VIN1",270,0)
 ;
"RTN","LA7VIN1",271,0)
 D ACK^LA7VHLU8(.LA)
"RTN","LA7VIN1",272,0)
 Q
"RTN","LA7VIN1",273,0)
 ;
"RTN","LA7VIN1",274,0)
 ;
"RTN","LA7VIN1",275,0)
 ; The section below is designed to clean up variables that are created during the processing of a segment type
"RTN","LA7VIN1",276,0)
 ; and any created by processing of segments that are within the message definition.
"RTN","LA7VIN1",277,0)
 ;
"RTN","LA7VIN1",278,0)
KILLMSH ; Clean up variables used by MSH and following segments
"RTN","LA7VIN1",279,0)
 K LA7AAT,LA7CSITE,LA7CS,LA7ECH,LA7FS,LA7HLV,LA7MEDT,LA7MID,LA7MTYP
"RTN","LA7VIN1",280,0)
 K LA7RAP,LA7RFAC,LA7SAP,LA7SEQ,LA7SFAC
"RTN","LA7VIN1",281,0)
 K ^TMP("LA7 AR",$J),^TMP("LA7-ID",$J),^TMP("LA7-ORM",$J),^TMP("LA7-ORU",$J),^TMP("LA7-PL-NTE",$J)
"RTN","LA7VIN1",282,0)
 ;
"RTN","LA7VIN1",283,0)
KILLMSA ; Clean up variables used by MSA and following segments
"RTN","LA7VIN1",284,0)
 K LA7MSATM
"RTN","LA7VIN1",285,0)
 ;
"RTN","LA7VIN1",286,0)
KILLPID ; Clean up variables used by PID and following segments
"RTN","LA7VIN1",287,0)
 K DFN
"RTN","LA7VIN1",288,0)
 K LA7DOB,LA7ICN,LA7PNM,LA7PRACE,LA7PTID2,LA7PTID3,LA7PTID4
"RTN","LA7VIN1",289,0)
 K LA7SEX,LA7SPID,LA7SSN
"RTN","LA7VIN1",290,0)
 K LRDFN,LRTDFN
"RTN","LA7VIN1",291,0)
 ;
"RTN","LA7VIN1",292,0)
KILLPV1 ; Clean up variables used by PV1 and following segments
"RTN","LA7VIN1",293,0)
 K LA7LOC,LA7SPV1,LAPSUBID
"RTN","LA7VIN1",294,0)
 ;
"RTN","LA7VIN1",295,0)
KILLORC ; Clean up variables used by ORC and following segments
"RTN","LA7VIN1",296,0)
 K LA7628,LA7629
"RTN","LA7VIN1",297,0)
 K LA7CSITE,LA7DUR,LA7DURU,LA7ODUR,LA7ODURU,LA7EOL,LA7OCR,LA7ORDT
"RTN","LA7VIN1",298,0)
 K LA7OTYPE,LA7OUR,LA7PEB,LA7PON,LA7POP,LA7PVB,LA7SM
"RTN","LA7VIN1",299,0)
 ;
"RTN","LA7VIN1",300,0)
KILLOBR ; Clean up variables used by OBR and following segments
"RTN","LA7VIN1",301,0)
 K LA70070,LA760,LA761,LA762,LA7624,LA7696
"RTN","LA7VIN1",302,0)
 K LA7AA,LA7AD,LA7ACC,LA7AN,LA7ARI,LA7CDT,LA7FID,LA7ISQN,LA7LWL,LA7ONLT,LA7OTST
"RTN","LA7VIN1",303,0)
 K LA7POC,LA7PRI,LA7RSDT,LA7SAC,LA7SID,LA7SOBR,LA7SPEC,LA7SPTY,LA7SS,LA7TECH,LA7UID,LA7UR
"RTN","LA7VIN1",304,0)
 K LA7OBR25,LA7OBR26,LA7OBR29,LA7OBR32,LA7OBR33,LA7OBR34,LA7OBR49,LA7VPSTG
"RTN","LA7VIN1",305,0)
 ;
"RTN","LA7VIN1",306,0)
KILLOBX ; Clean up variables used by OBX and following segments
"RTN","LA7VIN1",307,0)
 K LA7AUTORELEASE,LA7ORS,LA7PRODID,LA7RLNC,LA7RMK,LA7RNLT,LA7RO,LA7SOBX,LA7SUBID
"RTN","LA7VIN1",308,0)
 ;
"RTN","LA7VIN1",309,0)
KILLBLG ; Clean up variables used by BLG and following segments
"RTN","LA7VIN1",310,0)
 ;
"RTN","LA7VIN1",311,0)
 Q
"RTN","LA7VIN2")
0^12^B46992282
"RTN","LA7VIN2",1,0)
LA7VIN2 ;DALOI/JMC - Process Incoming UI Msgs, continued ;06/22/15  13:02
"RTN","LA7VIN2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74,88**;Sep 27, 1994;Build 10
"RTN","LA7VIN2",3,0)
 ;
"RTN","LA7VIN2",4,0)
 ;This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN2",5,0)
 Q
"RTN","LA7VIN2",6,0)
 ;
"RTN","LA7VIN2",7,0)
MSH ; Process MSH segment
"RTN","LA7VIN2",8,0)
 N LA7X
"RTN","LA7VIN2",9,0)
 ;
"RTN","LA7VIN2",10,0)
 I $E(LA7SEG(0),1,3)'="MSH" D  Q
"RTN","LA7VIN2",11,0)
 . S (LA7ABORT,LA7ERR)=7
"RTN","LA7VIN2",12,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN2",13,0)
 ;
"RTN","LA7VIN2",14,0)
 ; Encoding characters
"RTN","LA7VIN2",15,0)
 S LA7FS=$E(LA7SEG(0),4)
"RTN","LA7VIN2",16,0)
 S LA7CS=$E(LA7SEG(0),5)
"RTN","LA7VIN2",17,0)
 S LA7ECH=$E(LA7SEG(0),5,8)
"RTN","LA7VIN2",18,0)
 ; No field or component separator
"RTN","LA7VIN2",19,0)
 I LA7FS=""!(LA7CS="") D
"RTN","LA7VIN2",20,0)
 . S (LA7ABORT,LA7ERR)=8
"RTN","LA7VIN2",21,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN2",22,0)
 ;
"RTN","LA7VIN2",23,0)
 ; Sending application
"RTN","LA7VIN2",24,0)
 S LA7SAP=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",25,0)
 S LA7ID=LA7SAP_"-I-"
"RTN","LA7VIN2",26,0)
 ;
"RTN","LA7VIN2",27,0)
 ; Sending facility
"RTN","LA7VIN2",28,0)
 S LA7SFAC=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2",29,0)
 ;
"RTN","LA7VIN2",30,0)
 ; Receiving application
"RTN","LA7VIN2",31,0)
 S LA7RAP=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VIN2",32,0)
 ;
"RTN","LA7VIN2",33,0)
 ; Receiving facility
"RTN","LA7VIN2",34,0)
 S LA7RFAC=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN2",35,0)
 ;
"RTN","LA7VIN2",36,0)
 ; Message date/time from first component
"RTN","LA7VIN2",37,0)
 S LA7MEDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,7,LA7FS),LA7CS),"L")
"RTN","LA7VIN2",38,0)
 ;
"RTN","LA7VIN2",39,0)
 ; Message type
"RTN","LA7VIN2",40,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN2",41,0)
 S LA7MTYP=$P(LA7X,LA7CS,1)
"RTN","LA7VIN2",42,0)
 ;
"RTN","LA7VIN2",43,0)
 ; Message Control ID
"RTN","LA7VIN2",44,0)
 S LA7MID=$$P^LA7VHLU(.LA7SEG,10,LA7FS)
"RTN","LA7VIN2",45,0)
 ;
"RTN","LA7VIN2",46,0)
 ; HL7 version
"RTN","LA7VIN2",47,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN2",48,0)
 S LA7HLV=$P(LA7X,LA7CS,1)
"RTN","LA7VIN2",49,0)
 ;
"RTN","LA7VIN2",50,0)
 ; Accept acknowledgement type
"RTN","LA7VIN2",51,0)
 S LA7AAT(0)=$$P^LA7VHLU(.LA7SEG,15,LA7FS)
"RTN","LA7VIN2",52,0)
 ;
"RTN","LA7VIN2",53,0)
 ; Application acknowledgement type
"RTN","LA7VIN2",54,0)
 S LA7AAT(1)=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VIN2",55,0)
 ;
"RTN","LA7VIN2",56,0)
 Q
"RTN","LA7VIN2",57,0)
 ;
"RTN","LA7VIN2",58,0)
 ;
"RTN","LA7VIN2",59,0)
ORC ; Process ORC segment
"RTN","LA7VIN2",60,0)
 N LA7X,LA7Y
"RTN","LA7VIN2",61,0)
 ;
"RTN","LA7VIN2",62,0)
 ; Order control
"RTN","LA7VIN2",63,0)
 S LA7OTYPE=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",64,0)
 ;
"RTN","LA7VIN2",65,0)
 ; Place order number
"RTN","LA7VIN2",66,0)
 S LA7PON=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",67,0)
 ;
"RTN","LA7VIN2",68,0)
 ; Setup shipping manifest variable
"RTN","LA7VIN2",69,0)
 S LA7Y=0
"RTN","LA7VIN2",70,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7CS)
"RTN","LA7VIN2",71,0)
 I LA7X'="" S LA7Y=$O(^LAHM(62.8,"B",LA7X,0))
"RTN","LA7VIN2",72,0)
 I LA7Y S LA7628=LA7Y
"RTN","LA7VIN2",73,0)
 S LA7SM=LA7Y_"^"_LA7X
"RTN","LA7VIN2",74,0)
 ;
"RTN","LA7VIN2",75,0)
 ; Setup shipping configuration variable
"RTN","LA7VIN2",76,0)
 I $P(LA7SM,"^") S LA7629=+$P($G(^LAHM(62.8,$P(LA7SM,"^"),0)),"^",2)
"RTN","LA7VIN2",77,0)
 E  S LA7629=0
"RTN","LA7VIN2",78,0)
 ;
"RTN","LA7VIN2",79,0)
 ; Set new order/shipping manifest received alert/identifiers
"RTN","LA7VIN2",80,0)
 I LA7MTYP="ORM",$P(LA7SM,"^",2)'="" D
"RTN","LA7VIN2",81,0)
 . S ^TMP("LA7-ORM",$J,LA76248,LA76249,$P(LA7SM,"^",2))=""
"RTN","LA7VIN2",82,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,$P(LA7SM,"^",2),1)
"RTN","LA7VIN2",83,0)
 . D SETID^LA7VHLU1(LA76249,"",$P(LA7SM,"^",2),0)
"RTN","LA7VIN2",84,0)
 ;
"RTN","LA7VIN2",85,0)
 ; Order quantity/timing (duration, units, urgency)
"RTN","LA7VIN2",86,0)
 S LA7ODUR=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,3)
"RTN","LA7VIN2",87,0)
 S LA7ODURU=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,4)
"RTN","LA7VIN2",88,0)
 S LA7OUR=$P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS,6)
"RTN","LA7VIN2",89,0)
 ;
"RTN","LA7VIN2",90,0)
 ; Date/time of transaction
"RTN","LA7VIN2",91,0)
 S LA7ORDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,10,LA7FS),LA7CS),"L")
"RTN","LA7VIN2",92,0)
 ;
"RTN","LA7VIN2",93,0)
 ; Placer's entered by (id^duz^last name, first name, mi [id])
"RTN","LA7VIN2",94,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,11,LA7FS)
"RTN","LA7VIN2",95,0)
 S LA7PEB=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN2",96,0)
 I LA7PEB="^0^" S LA7PEB=""
"RTN","LA7VIN2",97,0)
 ;
"RTN","LA7VIN2",98,0)
 ; Placer's verified by (id^duz^last name, first name, mi [id])
"RTN","LA7VIN2",99,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN2",100,0)
 S LA7PVB=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN2",101,0)
 I LA7PVB="^0^" S LA7PVB=""
"RTN","LA7VIN2",102,0)
 ;
"RTN","LA7VIN2",103,0)
 ; Placer's ordering provider (id^duz^last name, first name, mi [id])
"RTN","LA7VIN2",104,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,13,LA7FS)
"RTN","LA7VIN2",105,0)
 S LA7POP=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN2",106,0)
 I LA7POP="^0^" S LA7POP=""
"RTN","LA7VIN2",107,0)
 ;
"RTN","LA7VIN2",108,0)
 ; Enterer's ordering location
"RTN","LA7VIN2",109,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,14,LA7FS)
"RTN","LA7VIN2",110,0)
 S LA7Y=$$PLTFM^LA7VHLU4(LA7X,LA7FS,LA7ECH)
"RTN","LA7VIN2",111,0)
 S LA7EOL=$P(LA7Y,"^",1,3)
"RTN","LA7VIN2",112,0)
 I LA7EOL="^0^" S LA7EOL=""
"RTN","LA7VIN2",113,0)
 ;
"RTN","LA7VIN2",114,0)
 ; Order control code reason
"RTN","LA7VIN2",115,0)
 S LA7OCR=$$P^LA7VHLU(.LA7SEG,17,LA7FS)
"RTN","LA7VIN2",116,0)
 ;
"RTN","LA7VIN2",117,0)
 ;
"RTN","LA7VIN2",118,0)
 ; If ORM order message, determine specimen collecting site from ORC
"RTN","LA7VIN2",119,0)
 ; segment, if none use MSH sending facility value
"RTN","LA7VIN2",120,0)
 S LA7CSITE=""
"RTN","LA7VIN2",121,0)
 I LA7MTYP="ORM" D
"RTN","LA7VIN2",122,0)
 . S LA7X=$P($$P^LA7VHLU(.LA7SEG,18,LA7FS),LA7CS)
"RTN","LA7VIN2",123,0)
 . S LA7CSITE=$$FINDSITE^LA7VHLU2(LA7X,2,1)
"RTN","LA7VIN2",124,0)
 . I LA7CSITE'>0 S LA7CSITE=$$FINDSITE^LA7VHLU2(LA7SFAC,2,0)
"RTN","LA7VIN2",125,0)
 ;
"RTN","LA7VIN2",126,0)
 Q
"RTN","LA7VIN2",127,0)
 ;
"RTN","LA7VIN2",128,0)
 ;
"RTN","LA7VIN2",129,0)
NTE ; Process NTE segment
"RTN","LA7VIN2",130,0)
 ;
"RTN","LA7VIN2",131,0)
 D NTE^LA7VIN2A
"RTN","LA7VIN2",132,0)
 Q
"RTN","LA7VIN2",133,0)
 ;
"RTN","LA7VIN2",134,0)
 ;
"RTN","LA7VIN2",135,0)
PID ; Process PID segment
"RTN","LA7VIN2",136,0)
 N LA7I,LA7X,LA7Y,X,Y
"RTN","LA7VIN2",137,0)
 ;
"RTN","LA7VIN2",138,0)
 S (DFN,LA7DOB,LA7ICN,LA7PRACE,LA7PNM,LA7PTID2,LA7PTID3,LA7PTID4,LA7SEX,LA7SSN,LRDFN,LRTDFN)=""
"RTN","LA7VIN2",139,0)
 ;
"RTN","LA7VIN2",140,0)
 ; PID Set ID
"RTN","LA7VIN2",141,0)
 S LA7SPID=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",142,0)
 ;
"RTN","LA7VIN2",143,0)
 ; Extract patient identifiers
"RTN","LA7VIN2",144,0)
 S LA7PTID2=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2",145,0)
 S LA7PTID3=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2",146,0)
 S LA7PTID4=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VIN2",147,0)
 ; Resolve ICN if identifier is from MPI
"RTN","LA7VIN2",148,0)
 ; Assume SSN is identifier if "SS" or blank
"RTN","LA7VIN2",149,0)
 F LA7I=1:1:$L(LA7PTID3,$E(LA7ECH,2)) D
"RTN","LA7VIN2",150,0)
 . N LA7J,LA7X,LA7ID
"RTN","LA7VIN2",151,0)
 . S X=$P(LA7PTID3,$E(LA7ECH,2),LA7I) Q:'$L(X)
"RTN","LA7VIN2",152,0)
 . S LA7PTID3(LA7I)=X,LA7ID=$P(LA7PTID3(LA7I),$E(LA7ECH),5)
"RTN","LA7VIN2",153,0)
 . I LA7ID'="","NI^PI"[LA7ID D  Q
"RTN","LA7VIN2",154,0)
 . . S Y=$P(LA7PTID3(LA7I),$E(LA7ECH))
"RTN","LA7VIN2",155,0)
 . . I Y?10N1"V"6N S LA7Y=Y
"RTN","LA7VIN2",156,0)
 . . E  S LA7Y=Y_"V"_$P(LA7PTID3(LA7I),$E(LA7ECH),2)
"RTN","LA7VIN2",157,0)
 . . S LA7X=$$CHKICN^LA7VHLU2(LA7Y)
"RTN","LA7VIN2",158,0)
 . . I LA7X>0 S DFN=$P(LA7X,"^"),LA7ICN=$P(LA7X,"^",2)
"RTN","LA7VIN2",159,0)
 . I LA7ID="SS"!(LA7ID="") D  Q
"RTN","LA7VIN2",160,0)
 . . F LA7J=1:1:3 S LA7X(LA7J)=$P(LA7PTID3(LA7I),$E(LA7ECH),LA7J)
"RTN","LA7VIN2",161,0)
 . . I LA7X(1)'?9N.1A Q
"RTN","LA7VIN2",162,0)
 . . I LA7X(3)="M11",LA7X(2)'=$P($$M11^HLFNC(LA7X(1),LA7ECH),$E(LA7ECH),2) Q
"RTN","LA7VIN2",163,0)
 . . S LA7SSN=LA7X(1),DFN=$O(^DPT("SSN",LA7SSN,0))
"RTN","LA7VIN2",164,0)
 ;
"RTN","LA7VIN2",165,0)
 ; Check PID-2 (alternate patient id) if PID-3 did not yield SSN/ICN
"RTN","LA7VIN2",166,0)
 F LA7I=1:1:$L(LA7PTID2,$E(LA7ECH,2)) D
"RTN","LA7VIN2",167,0)
 . N LA7J,LA7X,LA7ID
"RTN","LA7VIN2",168,0)
 . S X=$P(LA7PTID2,$E(LA7ECH,2),LA7I) Q:'$L(X)
"RTN","LA7VIN2",169,0)
 . S LA7PTID2(LA7I)=X,LA7ID=$P(LA7PTID2(LA7I),$E(LA7ECH),5)
"RTN","LA7VIN2",170,0)
 . I LA7ICN="",LA7ID'="","NI^PI"[LA7ID D  Q
"RTN","LA7VIN2",171,0)
 . . S Y=$P(LA7PTID2(LA7I),$E(LA7ECH))
"RTN","LA7VIN2",172,0)
 . . I Y?10N1"V"6N S LA7Y=Y
"RTN","LA7VIN2",173,0)
 . . E  S LA7Y=Y_"V"_$P(LA7PTID2(LA7I),$E(LA7ECH),2)
"RTN","LA7VIN2",174,0)
 . . S LA7X=$$CHKICN^LA7VHLU2(LA7Y)
"RTN","LA7VIN2",175,0)
 . . I LA7X>0 S DFN=$P(LA7X,"^"),LA7ICN=$P(LA7X,"^",2)
"RTN","LA7VIN2",176,0)
 . I LA7SSN="",LA7ID="SS"!(LA7ID="") D  Q
"RTN","LA7VIN2",177,0)
 . . F LA7J=1:1:3 S LA7X(LA7J)=$P(LA7PTID2(LA7I),$E(LA7ECH),LA7J)
"RTN","LA7VIN2",178,0)
 . . I LA7X(1)'?9N.1A Q
"RTN","LA7VIN2",179,0)
 . . I LA7X(3)="M11",LA7X(2)'=$P($$M11^HLFNC(LA7X(1),LA7ECH),$E(LA7ECH),2) Q
"RTN","LA7VIN2",180,0)
 . . S LA7SSN=LA7X(1),DFN=$O(^DPT("SSN",LA7SSN,0))
"RTN","LA7VIN2",181,0)
 ;
"RTN","LA7VIN2",182,0)
 ; Extract patient name
"RTN","LA7VIN2",183,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN2",184,0)
 I LA7X'="" D
"RTN","LA7VIN2",185,0)
 . S LA7PNM=$$FMNAME^HLFNC(LA7X,LA7ECH)
"RTN","LA7VIN2",186,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7PNM,0)
"RTN","LA7VIN2",187,0)
 . D SETID^LA7VHLU1(LA76249,"",LA7PNM,0)
"RTN","LA7VIN2",188,0)
 ;
"RTN","LA7VIN2",189,0)
 ; Extract date of birth
"RTN","LA7VIN2",190,0)
 ; Check for degree of precision in 2nd component to provide backward compatibility with HL7 <v2.3
"RTN","LA7VIN2",191,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,8,LA7FS)
"RTN","LA7VIN2",192,0)
 I LA7X D
"RTN","LA7VIN2",193,0)
 . S LA7Y=$P(LA7X,LA7CS,2),LA7X=$P(LA7X,LA7CS,1)
"RTN","LA7VIN2",194,0)
 . I (LA7Y=""!(LA7Y="D")),$E(LA7X,9,12)="0000" S LA7X=$E(LA7X,1,8)
"RTN","LA7VIN2",195,0)
 . S LA7DOB=$$HL7TFM^XLFDT(LA7X)
"RTN","LA7VIN2",196,0)
 . I LA7DOB<1 S LA7DOB=""
"RTN","LA7VIN2",197,0)
 . I LA7Y="L" S LA7DOB=$E(LA7DOB,1,5)_"00"
"RTN","LA7VIN2",198,0)
 . I LA7Y="Y" S LA7DOB=$E(LA7DOB,1,3)_"0000"
"RTN","LA7VIN2",199,0)
 ;
"RTN","LA7VIN2",200,0)
 ; Extract patient's sex
"RTN","LA7VIN2",201,0)
 S LA7SEX=$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN2",202,0)
 ;
"RTN","LA7VIN2",203,0)
 ; Extract patient's race
"RTN","LA7VIN2",204,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,11,LA7FS)
"RTN","LA7VIN2",205,0)
 I $P(LA7X,LA7CS)'="" D
"RTN","LA7VIN2",206,0)
 . I $P(LA7X,LA7CS,3)="0005" S $P(LA7X,LA7CS,3)="HL70005"
"RTN","LA7VIN2",207,0)
 . S LA7PRACE=$P(LA7X,LA7CS)_":"_$P(LA7X,LA7CS,2)_$S($P(LA7X,LA7CS,3)'="":":"_$P(LA7X,LA7CS,3),1:"")
"RTN","LA7VIN2",208,0)
 ;
"RTN","LA7VIN2",209,0)
 ; Extract patient's SSN and determine DFN
"RTN","LA7VIN2",210,0)
 ; If SSN determined previously from PID-3 then compare SSN's
"RTN","LA7VIN2",211,0)
 ; If DFN determined previously from ICN then check DFN based on SSN.
"RTN","LA7VIN2",212,0)
 S LA7X=$P($$P^LA7VHLU(.LA7SEG,20,LA7FS),LA7CS)
"RTN","LA7VIN2",213,0)
 S LA7X=$TR(LA7X,"-","") ; remove "-" if any
"RTN","LA7VIN2",214,0)
 I LA7X?9N.1A D
"RTN","LA7VIN2",215,0)
 . I LA7SSN'="",LA7X'=LA7SSN Q
"RTN","LA7VIN2",216,0)
 . S LA7SSN=LA7X
"RTN","LA7VIN2",217,0)
 . I DFN,DFN'=$O(^DPT("SSN",LA7SSN,0)) Q
"RTN","LA7VIN2",218,0)
 . S DFN=$O(^DPT("SSN",LA7SSN,0))
"RTN","LA7VIN2",219,0)
 I LA7SSN'="" D
"RTN","LA7VIN2",220,0)
 . I LA7INTYP>19,LA7INTYP<30 D SETID^LA7VHLU1(LA76249,LA7ID,LA7SSN,1) Q
"RTN","LA7VIN2",221,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7SSN,0)
"RTN","LA7VIN2",222,0)
 I DFN S LRDFN=$P($G(^DPT(DFN,"LR")),"^")
"RTN","LA7VIN2",223,0)
 ;
"RTN","LA7VIN2",224,0)
 Q
"RTN","LA7VIN2",225,0)
 ;
"RTN","LA7VIN2",226,0)
 ;
"RTN","LA7VIN2",227,0)
PV1 ; Process PV1 segment
"RTN","LA7VIN2",228,0)
 ;
"RTN","LA7VIN2",229,0)
 ; PV1 Set ID
"RTN","LA7VIN2",230,0)
 S LA7SPV1=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN2",231,0)
 ;
"RTN","LA7VIN2",232,0)
 ; Extract ordering location
"RTN","LA7VIN2",233,0)
 S LA7LOC=$P($$P^LA7VHLU(.LA7SEG,4,LA7FS),LA7CS)
"RTN","LA7VIN2",234,0)
 Q
"RTN","LA7VIN2A")
0^15^B34119950
"RTN","LA7VIN2A",1,0)
LA7VIN2A ;DALOI/JMC - Process Incoming UI Msgs, continued ;09/10/15  09:03
"RTN","LA7VIN2A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74,88**;Sep 27, 1994;Build 10
"RTN","LA7VIN2A",3,0)
 ;
"RTN","LA7VIN2A",4,0)
 ;This routine is a continuation of LA7VIN2 and is only called from there.
"RTN","LA7VIN2A",5,0)
 Q
"RTN","LA7VIN2A",6,0)
 ;
"RTN","LA7VIN2A",7,0)
NTE ; Process NTE segment
"RTN","LA7VIN2A",8,0)
 ; NTE segments contain comments from instruments or other facilities.
"RTN","LA7VIN2A",9,0)
 ; NTE segments following OBR's contain comments which refer to the entire test battery.
"RTN","LA7VIN2A",10,0)
 ; NTE segments following OBX's contain comments which are test specific.
"RTN","LA7VIN2A",11,0)
 ;
"RTN","LA7VIN2A",12,0)
 ; For comments in ORU messages:
"RTN","LA7VIN2A",13,0)
 ;  Test specific comments can be prefaced with a site defined prefix -
"RTN","LA7VIN2A",14,0)
 ;  see field REMARK PREFIX (#19) in CHEM TEST multiple of AUTOMATED INSTRUMENT (#62.4 file.
"RTN","LA7VIN2A",15,0)
 ;  There can be more than one NTE, each will be stored as a comment in ^LAH.
"RTN","LA7VIN2A",16,0)
 ;
"RTN","LA7VIN2A",17,0)
 N LA7,LA7CMTYP,LA7I,LA7NTE,LA7SOC,X,Y
"RTN","LA7VIN2A",18,0)
 ;
"RTN","LA7VIN2A",19,0)
 S LA7SOC=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN2A",20,0)
 S LA7NTE=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN2A",21,0)
 S LA7CMTYP=$$P^LA7VHLU(.LA7SEG,5,LA7FS)
"RTN","LA7VIN2A",22,0)
 D FLD2ARR^LA7VHLU7(.LA7CMTYP,LA7FS_LA7ECH)
"RTN","LA7VIN2A",23,0)
 ;
"RTN","LA7VIN2A",24,0)
 ; Trim trailing spaces.
"RTN","LA7VIN2A",25,0)
 I LA7NTE'="" S LA7NTE=$$TRIM^XLFSTR(LA7NTE,"R"," ")
"RTN","LA7VIN2A",26,0)
 I LA7NTE="" S LA7NTE=" "
"RTN","LA7VIN2A",27,0)
 ;
"RTN","LA7VIN2A",28,0)
 I LA7MTYP="ORM" D OCOM Q
"RTN","LA7VIN2A",29,0)
 ;
"RTN","LA7VIN2A",30,0)
 ; Check for repeating comments in NTE segment and process
"RTN","LA7VIN2A",31,0)
 ; If "^" in remark then translate to "~" to store.
"RTN","LA7VIN2A",32,0)
 F LA7I=1:1:$L(LA7NTE,$E(LA7ECH,2)) D
"RTN","LA7VIN2A",33,0)
 . S LA7RMK=$P(LA7NTE,$E(LA7ECH,2),LA7I)
"RTN","LA7VIN2A",34,0)
 . I LA7RMK="" Q
"RTN","LA7VIN2A",35,0)
 . S LA7RMK=$$UNESC^LA7VHLU3(LA7RMK,LA7FS_LA7ECH)
"RTN","LA7VIN2A",36,0)
 . I LA7RMK["^" S LA7RMK=$TR(LA7RMK,"^","~")
"RTN","LA7VIN2A",37,0)
 . I LA7MTYP="ORU" D RCOM Q
"RTN","LA7VIN2A",38,0)
 . I LA7MTYP="ORR",$G(LA7OTYPE)="UA" D RCOM Q
"RTN","LA7VIN2A",39,0)
 ;
"RTN","LA7VIN2A",40,0)
 ; Clean up LA7RMK except for LA7RMK(0)
"RTN","LA7VIN2A",41,0)
 K X M X=LA7RMK(0) K LA7RMK M LA7RMK(0)=X
"RTN","LA7VIN2A",42,0)
 ;
"RTN","LA7VIN2A",43,0)
 Q
"RTN","LA7VIN2A",44,0)
 ;
"RTN","LA7VIN2A",45,0)
 ;
"RTN","LA7VIN2A",46,0)
RCOM ; Store result comments in ORU messages
"RTN","LA7VIN2A",47,0)
 ;
"RTN","LA7VIN2A",48,0)
 ; Check there's pointers to LAH
"RTN","LA7VIN2A",49,0)
 I $G(LA7LWL)=""!($G(LA7ISQN)="") Q
"RTN","LA7VIN2A",50,0)
 ;
"RTN","LA7VIN2A",51,0)
 ; Don't store remark if same as specimen comment (without "~").
"RTN","LA7VIN2A",52,0)
 I $G(LA7AA),$G(LA7AD),$G(LA7AN),LA7RMK=$TR($P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,3)),"^",6),"~") Q
"RTN","LA7VIN2A",53,0)
 ; Or patient info (#.091 in file 63) - info previously downloaded
"RTN","LA7VIN2A",54,0)
 I $G(LA7AA),$G(LA7AD),$G(LA7AN),LA7RMK=$G(^LR(+$G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),.091)) Q
"RTN","LA7VIN2A",55,0)
 ;
"RTN","LA7VIN2A",56,0)
 ; If test specific, store comment prefix with comments (see LA7VIN5)
"RTN","LA7VIN2A",57,0)
 I $G(LA7SS)="CH",$O(LA7RMK(0,0)) D  Q
"RTN","LA7VIN2A",58,0)
 . N LA7I
"RTN","LA7VIN2A",59,0)
 . S LA7I=0
"RTN","LA7VIN2A",60,0)
 . F  S LA7I=$O(LA7RMK(0,LA7I)) Q:'LA7I  D
"RTN","LA7VIN2A",61,0)
 . . I $G(LA7AUTORELEASE) D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,$P(LA7RMK(0,LA7I),"^",2)) Q
"RTN","LA7VIN2A",62,0)
 . . I '$P(LA7RMK(0,LA7I),"^") Q
"RTN","LA7VIN2A",63,0)
 . . ; Don't store if status not "FINAL"
"RTN","LA7VIN2A",64,0)
 . . I $P(LA7RMK(0,LA7I),"^")=2,"CFUX"'[$G(LA7ORS) Q
"RTN","LA7VIN2A",65,0)
 . . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,$P(LA7RMK(0,LA7I),"^",2))
"RTN","LA7VIN2A",66,0)
 ;
"RTN","LA7VIN2A",67,0)
 ; Store comment in 1 node of ^LAH global
"RTN","LA7VIN2A",68,0)
 I $G(LA7SS)="CH" D  Q
"RTN","LA7VIN2A",69,0)
 . I $P(LA7624(0),"^",17)!($G(LA7AUTORELEASE)) D RMKSET^LASET(LA7LWL,LA7ISQN,LA7RMK,"")
"RTN","LA7VIN2A",70,0)
 ;
"RTN","LA7VIN2A",71,0)
 ; Store "MI" subscript comments/remarks in specific places.
"RTN","LA7VIN2A",72,0)
 ;  - Don't store comments from ORR messages - handled by mail bulletin
"RTN","LA7VIN2A",73,0)
 I $G(LA7SS)="MI",LA7MTYP'="ORR" D  Q
"RTN","LA7VIN2A",74,0)
 . N LA7ISQN2,LA7ISQN3,LA7ISQN4,LA7ND,LACONCPT,LAPREFIX
"RTN","LA7VIN2A",75,0)
 . S (LA7ISQN2,LA7ISQN3,LA7ISQN4,LA7ND)=""
"RTN","LA7VIN2A",76,0)
 . I $G(LA7CMTYP(3))="HL70364",$E($G(LA7CMTYP(1)),1,7)="VA-LRMI" D MISPC
"RTN","LA7VIN2A",77,0)
 . S LACONCPT=$P($G(LA7RMK(0,0)),"^"),LAPREFIX=$P($G(LA7RMK(0,0)),"^",3)
"RTN","LA7VIN2A",78,0)
 . D MICMT,UPD0
"RTN","LA7VIN2A",79,0)
 ;
"RTN","LA7VIN2A",80,0)
 ; Store AP subscripts comments/remarks in specific places.
"RTN","LA7VIN2A",81,0)
 ; - Don't store comments from ORR messages - handled by mail bulletin
"RTN","LA7VIN2A",82,0)
 I $G(LA7SS)'="","SPCYEM"[LA7SS,LA7MTYP'="ORR" D  Q
"RTN","LA7VIN2A",83,0)
 . N LA7ISQN2,LAPREFIX
"RTN","LA7VIN2A",84,0)
 . S LA7ND=99,LAPREFIX=$P($G(LA7RMK(0,0)),"^",3),(LA7ISQN2,LA7ISQN3,LA7ISQN4)=""
"RTN","LA7VIN2A",85,0)
 . S LA7ISQN2=$O(^LAH(LA7LWL,1,LA7ISQN,LA7SS,99,"A"),-1)+1
"RTN","LA7VIN2A",86,0)
 . S ^LAH(LWL,1,LA7ISQN,LA7SS,99,LA7ISQN2,0)=LAPREFIX_LA7RMK
"RTN","LA7VIN2A",87,0)
 . D UPD0
"RTN","LA7VIN2A",88,0)
 ;
"RTN","LA7VIN2A",89,0)
 Q
"RTN","LA7VIN2A",90,0)
 ;
"RTN","LA7VIN2A",91,0)
 ;
"RTN","LA7VIN2A",92,0)
OCOM ; Store order comments from ORM messages in file #69.6
"RTN","LA7VIN2A",93,0)
 ; Check for repeating comments in NTE segment and process
"RTN","LA7VIN2A",94,0)
 ; If "^" in remark then translate to "~" to store.
"RTN","LA7VIN2A",95,0)
 ;
"RTN","LA7VIN2A",96,0)
 ; If source of comment (LA7SOC) is "RQ" then comment is from CHCS which
"RTN","LA7VIN2A",97,0)
 ; uses a composite data type for NTE-3. VistA only extracts component #9
"RTN","LA7VIN2A",98,0)
 ; which contains the external value of the comment.
"RTN","LA7VIN2A",99,0)
 ;
"RTN","LA7VIN2A",100,0)
 N LA7DIE,LA7RMK,LA7WP,X
"RTN","LA7VIN2A",101,0)
 I $G(LA7696)<1 Q
"RTN","LA7VIN2A",102,0)
 F LA7I=1:1:$L(LA7NTE,$E(LA7ECH,2)) D
"RTN","LA7VIN2A",103,0)
 . S LA7RMK=$P(LA7NTE,$E(LA7ECH,2),LA7I)
"RTN","LA7VIN2A",104,0)
 . I LA7SOC="RQ" D
"RTN","LA7VIN2A",105,0)
 . . S X=$P(LA7RMK,$E(LA7ECH),9)
"RTN","LA7VIN2A",106,0)
 . . I X'="" S LA7RMK=X
"RTN","LA7VIN2A",107,0)
 . I LA7RMK="" Q
"RTN","LA7VIN2A",108,0)
 . S LA7RMK=$$UNESC^LA7VHLU3(LA7RMK,LA7FS_LA7ECH)
"RTN","LA7VIN2A",109,0)
 . I LA7RMK["^" S LA7RMK=$TR(LA7RMK,"^","~")
"RTN","LA7VIN2A",110,0)
 . S LA7WP(LA7I,0)=LA7RMK
"RTN","LA7VIN2A",111,0)
 D WP^DIE(69.6,LA7696_",",99,"A","LA7WP","LA7DIE(99)")
"RTN","LA7VIN2A",112,0)
 Q
"RTN","LA7VIN2A",113,0)
 ;
"RTN","LA7VIN2A",114,0)
 ;
"RTN","LA7VIN2A",115,0)
MISPC ; Process special VistA Lab MI preliminary reports/test/remarks comment types
"RTN","LA7VIN2A",116,0)
 ;
"RTN","LA7VIN2A",117,0)
 N LA7I
"RTN","LA7VIN2A",118,0)
 S LA7I=+$E(LA7CMTYP(1),8,99)
"RTN","LA7VIN2A",119,0)
 ;
"RTN","LA7VIN2A",120,0)
 ; Comment on Specimen: VA-LRMI001 node = 99
"RTN","LA7VIN2A",121,0)
 ; Bacterial preliminary/report/tests remark: VA-LRMI010:VA-LRMI013 nodes = 4,19,26,25
"RTN","LA7VIN2A",122,0)
 ; Parasite preliminary/report/tests remark: VA-LRMI020:VA-LRMI023 nodes = 7,21,27,24
"RTN","LA7VIN2A",123,0)
 ; Fungal preliminary/report/tests remark: VA-LRMI030:VA-LRMI033 nodes = 10,22,28,15
"RTN","LA7VIN2A",124,0)
 ; Mycobacteria preliminary/report/tests remark: VA-LRMI040:VA-LRMI042 nodes = 13,23,29
"RTN","LA7VIN2A",125,0)
 ; Viral preliminary/report/tests remark: VA-LRMI050:VA-LRMI052 nodes = 18,20,30
"RTN","LA7VIN2A",126,0)
 ; Sterility Results: VA-LRMI060 node = 31
"RTN","LA7VIN2A",127,0)
 ;
"RTN","LA7VIN2A",128,0)
 S LA7ND=$P("99^^^^^^^^^4^19^26^25^^^^^^^7^21^27^24^^^^^^^10^22^28^15^^^^^^^13^23^29^^^^^^^^18^20^30^^^^^^^^31","^",LA7I)
"RTN","LA7VIN2A",129,0)
 ;
"RTN","LA7VIN2A",130,0)
 Q
"RTN","LA7VIN2A",131,0)
 ;
"RTN","LA7VIN2A",132,0)
 ;
"RTN","LA7VIN2A",133,0)
MICMT ; Store MI comments/remarks
"RTN","LA7VIN2A",134,0)
 ; From above
"RTN","LA7VIN2A",135,0)
 I LACONCPT=13 D  Q
"RTN","LA7VIN2A",136,0)
 . S LA7ND=6,LA7ISQN2=$P($P(LA7RMK(0,0),"^",2),","),LA7ISQN3=$P($P(LA7RMK(0,0),"^",2),",",2)
"RTN","LA7VIN2A",137,0)
 . S LA7ISQN4=$O(^LAH(LWL,1,LA7ISQN,"MI",6,LA7ISQN2,1,LA7ISQN3,1,"A"),-1)+1
"RTN","LA7VIN2A",138,0)
 . S ^LAH(LWL,1,LA7ISQN,"MI",6,LA7ISQN2,1,LA7ISQN3,1,LA7ISQN4,0)=LAPREFIX_LA7RMK
"RTN","LA7VIN2A",139,0)
 ;
"RTN","LA7VIN2A",140,0)
 I LACONCPT=3!(LACONCPT=7)!(LACONCPT=10)!(LACONCPT=4) D  Q
"RTN","LA7VIN2A",141,0)
 . S LA7ND=$S(LACONCPT=4:12,1:3)
"RTN","LA7VIN2A",142,0)
 . S LA7ISQN2=$P($P(LA7RMK(0,0),"^",2),","),LA7ISQN3=$O(^LAH(LWL,1,LA7ISQN,"MI",LA7ND,LA7ISQN2,1,"A"),-1)+1
"RTN","LA7VIN2A",143,0)
 . S ^LAH(LWL,1,LA7ISQN,"MI",LA7ND,LA7ISQN2,1,LA7ISQN3,0)=LAPREFIX_LA7RMK
"RTN","LA7VIN2A",144,0)
 ;
"RTN","LA7VIN2A",145,0)
 ; Store all other concepts here.
"RTN","LA7VIN2A",146,0)
 I LA7ND="" S LA7ND=$S(LACONCPT<2:4,LACONCPT=12:7,LACONCPT=15:10,LACONCPT=22:13,LACONCPT=79:13,LACONCPT=85:13,LACONCPT=30:18,1:4)
"RTN","LA7VIN2A",147,0)
 S LA7ISQN2=$O(^LAH(LWL,1,LA7ISQN,"MI",LA7ND,"A"),-1)+1
"RTN","LA7VIN2A",148,0)
 S ^LAH(LWL,1,LA7ISQN,"MI",LA7ND,LA7ISQN2,0)=LAPREFIX_LA7RMK
"RTN","LA7VIN2A",149,0)
 ;
"RTN","LA7VIN2A",150,0)
 Q
"RTN","LA7VIN2A",151,0)
 ;
"RTN","LA7VIN2A",152,0)
 ;
"RTN","LA7VIN2A",153,0)
UPD0 ; Update the remarks/comments zeroth node with status
"RTN","LA7VIN2A",154,0)
 ;
"RTN","LA7VIN2A",155,0)
 N LA7STAT,LA7PL,LA7X
"RTN","LA7VIN2A",156,0)
 ;
"RTN","LA7VIN2A",157,0)
 ; Attempt to identify performing lab from OBX-15 (NTE following OBX) or OBR-32 (NTE following OBR)
"RTN","LA7VIN2A",158,0)
 S LA7PL=$G(LA7PRODID)
"RTN","LA7VIN2A",159,0)
 I LA7PL="",$G(LA7OBR32(7))'="" S LA7PL=$$RESFID^LA7VHLU2(LA7OBR32(7),LA7SFAC,LA7CS)
"RTN","LA7VIN2A",160,0)
 ;
"RTN","LA7VIN2A",161,0)
 S LA7STAT=$S($G(LA7ORS)'="":LA7ORS,1:$G(LA7OBR25))
"RTN","LA7VIN2A",162,0)
 ;
"RTN","LA7VIN2A",163,0)
 I LA7ISQN4 D  Q
"RTN","LA7VIN2A",164,0)
 . I LA7PL'="" S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,LA7ISQN3,1,0),"^")=LA7PL
"RTN","LA7VIN2A",165,0)
 . I $P($G(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,LA7ISQN3,0)),"^",4)'="" Q
"RTN","LA7VIN2A",166,0)
 . I LA7STAT'="" S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,LA7ISQN3,1,0),"^",4)=LA7STAT
"RTN","LA7VIN2A",167,0)
 ;
"RTN","LA7VIN2A",168,0)
 I LA7ISQN3 D  Q
"RTN","LA7VIN2A",169,0)
 . I LA7PL'="" S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,0),"^")=LA7PL
"RTN","LA7VIN2A",170,0)
 . I $P($G(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,0)),"^",4)'="" Q
"RTN","LA7VIN2A",171,0)
 . S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,LA7ISQN2,1,0),"^",4)=LA7STAT
"RTN","LA7VIN2A",172,0)
 ;
"RTN","LA7VIN2A",173,0)
 I LA7ISQN2 D  Q
"RTN","LA7VIN2A",174,0)
 . I LA7PL'="" S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,0),"^")=LA7PL
"RTN","LA7VIN2A",175,0)
 . I $P($G(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,0)),"^",4)'="" Q
"RTN","LA7VIN2A",176,0)
 . S $P(^LAH(LWL,1,LA7ISQN,LA7SS,LA7ND,0),"^",4)=LA7STAT
"RTN","LA7VIN2A",177,0)
 Q
"RTN","LA7VIN4")
0^11^B81803911
"RTN","LA7VIN4",1,0)
LA7VIN4 ;DALOI/JMC - Process Incoming UI Msgs, continued ;04/19/16  17:15
"RTN","LA7VIN4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,67,66,74,85,88**;Sep 27, 1994;Build 10
"RTN","LA7VIN4",3,0)
 ;
"RTN","LA7VIN4",4,0)
 ; This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN4",5,0)
 ;
"RTN","LA7VIN4",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7VIN4",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7VIN4",8,0)
 ;
"RTN","LA7VIN4",9,0)
 Q
"RTN","LA7VIN4",10,0)
 ;
"RTN","LA7VIN4",11,0)
OBR ; Process OBR segments
"RTN","LA7VIN4",12,0)
 N I,LA7CUP,LA7ENTRY,LA7FF1,LA7FF2,LA7I,LA7IDE,LA7INST,LA7OK,LA7PDUZ,LA7PF1,LA7PF2,LA7TRAY,LA7X,LA7Y
"RTN","LA7VIN4",13,0)
 ;
"RTN","LA7VIN4",14,0)
 ;ZEXCEPT: A,CH,CY,EM,G,LA70070,LA761,LA762,LA7624,LA76248,LA76249
"RTN","LA7VIN4",15,0)
 ;ZEXCEPT: LA7AA,LA7ACC,LA7AD,LA7AERR,LA7AN,LA7ARI,LA7AUTORELEASE,LA7CDT,LA7CS,LA7ECH,LA7ERR,LA7FID,LA7FS,LA7ID,LA7INTYP,LA7ISQN,LA7LWL,LA7MSATM,LA7MTYP
"RTN","LA7VIN4",16,0)
 ;ZEXCEPT: LA7OBR,LA7OBR25,LA7OBR26,LA7OBR29,LA7OBR32,LA7OBR33,LA7OBR34,LA7OBR49,LA7OCR,LA7ONLT,LA7OTYPE,LA7POP,LA7PRI,LA7QUIT
"RTN","LA7VIN4",17,0)
 ;ZEXCEPT: LA7RSDT,LA7SAC,LA7SAP,LA7SEG,LA7SFAC,LA7SID,LA7SM,LA7SOBR,LA7SPEC,LA7SPTY,LA7SS,LA7TECH,LA7UID,LAPSUBID,MI,N,SP
"RTN","LA7VIN4",18,0)
 ;
"RTN","LA7VIN4",19,0)
 ; OBR Set ID
"RTN","LA7VIN4",20,0)
 S LA7SOBR=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN4",21,0)
 ;
"RTN","LA7VIN4",22,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,19,LA7FS)
"RTN","LA7VIN4",23,0)
 S LA7X=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",24,0)
 S LA7624=0,LA7INST=$P(LA7X,"^") ; extracting 1st piece
"RTN","LA7VIN4",25,0)
 ; Look up #62.4 entry from instrument name.
"RTN","LA7VIN4",26,0)
 I LA7INST'="" S LA7624=+$O(^LAB(62.4,"B",LA7INST,0))
"RTN","LA7VIN4",27,0)
 ;
"RTN","LA7VIN4",28,0)
 ; If none then use sending application name to look up #62.4 entry.
"RTN","LA7VIN4",29,0)
 I 'LA7624 S LA7624=+$O(^LAB(62.4,"B",LA7SAP,0))
"RTN","LA7VIN4",30,0)
 ;
"RTN","LA7VIN4",31,0)
 ; Instrument name not found in xref
"RTN","LA7VIN4",32,0)
 I 'LA7624 D  Q
"RTN","LA7VIN4",33,0)
 . I LA7INST="" D  Q
"RTN","LA7VIN4",34,0)
 . . S LA7ERR=10,LA7QUIT=2
"RTN","LA7VIN4",35,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",36,0)
 . S LA7ERR=11,LA7QUIT=2
"RTN","LA7VIN4",37,0)
 . S LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN4",38,0)
 S LA7624(0)=$G(^LAB(62.4,LA7624,0))
"RTN","LA7VIN4",39,0)
 S LA7ID=$P(LA7624(0),"^")_"-I-"
"RTN","LA7VIN4",40,0)
 ;
"RTN","LA7VIN4",41,0)
 S LA7LWL=+$P(LA7624(0),"^",4) ;  Load/Work List
"RTN","LA7VIN4",42,0)
 S LA7ENTRY=$P(LA7624(0),"^",6) ;LOG,LLIST,IDENT or SEQN
"RTN","LA7VIN4",43,0)
 S:LA7ENTRY="" LA7ENTRY="LOG"
"RTN","LA7VIN4",44,0)
 ;
"RTN","LA7VIN4",45,0)
 ; Placer(sender)/filler order numbers
"RTN","LA7VIN4",46,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN4",47,0)
 S LA7SID=$P(LA7X,$E(LA7ECH)) F I=2:1:4 S LA7SID(I)=$P(LA7X,$E(LA7ECH),I)
"RTN","LA7VIN4",48,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN4",49,0)
 S LA7FID=$P(LA7X,$E(LA7ECH)) F I=2:1:4 S LA7FID(I)=$P(LA7X,$E(LA7ECH),I)
"RTN","LA7VIN4",50,0)
 ;
"RTN","LA7VIN4",51,0)
 ; Test order code - find order NLT code
"RTN","LA7VIN4",52,0)
 ; If POC interface then see if NLT is used for ordering code
"RTN","LA7VIN4",53,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7ONLT=""
"RTN","LA7VIN4",54,0)
 F I=1,4 D  Q:LA7ONLT'=""
"RTN","LA7VIN4",55,0)
 . I $P(LA7X,LA7CS,I)'?5N1"."4N Q
"RTN","LA7VIN4",56,0)
 . I $P(LA7X,LA7CS,I+2)="99VA64" S LA7ONLT=$P(LA7X,LA7CS,I),LA7ONLT(0)=$P(LA7X,LA7CS,I+1) Q
"RTN","LA7VIN4",57,0)
 . I LA7INTYP>19,LA7INTYP<30,$P(LA7X,LA7CS,I+2)="" S LA7ONLT=$P(LA7X,LA7CS,I),LA7ONLT(0)=$P(LA7X,LA7CS,I+1) Q
"RTN","LA7VIN4",58,0)
 ;
"RTN","LA7VIN4",59,0)
 ; Specimen collection date/time
"RTN","LA7VIN4",60,0)
 S LA7CDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS),"L")
"RTN","LA7VIN4",61,0)
 ;
"RTN","LA7VIN4",62,0)
 ; Extract filler fields #1&2 and placer fields #1&2
"RTN","LA7VIN4",63,0)
 F LA7I=18:1:21 D
"RTN","LA7VIN4",64,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,LA7I+1,LA7FS)
"RTN","LA7VIN4",65,0)
 . S LA7OBR(LA7I)=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",66,0)
 ;
"RTN","LA7VIN4",67,0)
 ; Pull info from placer field #2 (OBR-19)
"RTN","LA7VIN4",68,0)
 S LA7X=LA7OBR(19)
"RTN","LA7VIN4",69,0)
 S LA7TRAY=+$P(LA7X,"^",1) ;Tray
"RTN","LA7VIN4",70,0)
 S LA7CUP=+$P(LA7X,"^",2) ; Cup
"RTN","LA7VIN4",71,0)
 ; If POC interface set cup to file #62.49 ien
"RTN","LA7VIN4",72,0)
 I LA7INTYP>19,LA7INTYP<30 S LA7CUP=LA76249
"RTN","LA7VIN4",73,0)
 S LA7AA=$P(LA7X,"^",3) ;  Accession Area
"RTN","LA7VIN4",74,0)
 S LA7AD=$P(LA7X,"^",4) ;  Accession Date
"RTN","LA7VIN4",75,0)
 S LA7AN=$P(LA7X,"^",5) ;  Accession Entry
"RTN","LA7VIN4",76,0)
 S LA7ACC=$P(LA7X,"^",6) ;  Accession
"RTN","LA7VIN4",77,0)
 I LA7ACC'="" D SETID^LA7VHLU1(LA76249,LA7ID,LA7ACC,0)
"RTN","LA7VIN4",78,0)
 S LA7UID=$P(LA7X,"^",7) ;  Unique ID
"RTN","LA7VIN4",79,0)
 I $L(LA7UID)<10 S LA7UID=""
"RTN","LA7VIN4",80,0)
 ;
"RTN","LA7VIN4",81,0)
 ; Sequence Number
"RTN","LA7VIN4",82,0)
 ; If point of care interface (20-29) then use file #62.49 ien as IDE
"RTN","LA7VIN4",83,0)
 S LA7IDE=$P(LA7X,LA7CS,8)
"RTN","LA7VIN4",84,0)
 I LA7INTYP>19,LA7INTYP<30 S LA7IDE=LA76249
"RTN","LA7VIN4",85,0)
 ;
"RTN","LA7VIN4",86,0)
 ; UID might come as Sample ID
"RTN","LA7VIN4",87,0)
 I LA7UID="",$L(LA7SID)>9 S LA7UID=LA7SID
"RTN","LA7VIN4",88,0)
 ;
"RTN","LA7VIN4",89,0)
 ; Try to figure out LA7AA LA7AD LA7AN by using the unique ID (UID)
"RTN","LA7VIN4",90,0)
 ; accession may have rolled over, use UID to get current accession info.
"RTN","LA7VIN4",91,0)
 I LA7UID'="" D
"RTN","LA7VIN4",92,0)
 . N X
"RTN","LA7VIN4",93,0)
 . S X=$Q(^LRO(68,"C",LA7UID)) Q:X=""  ; UID not on file
"RTN","LA7VIN4",94,0)
 . I $QS(X,3)'=LA7UID S LA7UID="" Q  ; UID not on file.
"RTN","LA7VIN4",95,0)
 . S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7VIN4",96,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7UID,1)
"RTN","LA7VIN4",97,0)
 . D SETID^LA7VHLU1(LA76249,"",LA7UID,0)
"RTN","LA7VIN4",98,0)
 ;
"RTN","LA7VIN4",99,0)
 ; If still not known, compute from default accession date and area.
"RTN","LA7VIN4",100,0)
 ; Calculate accession date based on accession transform.
"RTN","LA7VIN4",101,0)
 I LA7AA<1!(LA7AD<1)!(LA7AN<1) D
"RTN","LA7VIN4",102,0)
 . N X
"RTN","LA7VIN4",103,0)
 . S LA7AA=+$P(LA7624(0),"^",11)
"RTN","LA7VIN4",104,0)
 . S X=$P($G(^LRO(68,LA7AA,0)),U,3)
"RTN","LA7VIN4",105,0)
 . S LA7AD=$S(X="D":DT,X="M":$E(DT,1,5)_"00",X="Y":$E(DT,1,3)_"0000",X="Q":$E(DT,1,3)_"0000"+(($E(DT,4,5)-1)\3*300+100),1:DT)
"RTN","LA7VIN4",106,0)
 . S LA7AN=+LA7SID
"RTN","LA7VIN4",107,0)
 . I LA7AN>0 D SETID^LA7VHLU1(LA76249,LA7ID,LA7AN,1)
"RTN","LA7VIN4",108,0)
 . I LA7SID'="" D SETID^LA7VHLU1(LA76249,LA7ID,LA7SID,0)
"RTN","LA7VIN4",109,0)
 ;
"RTN","LA7VIN4",110,0)
 ; Zeroth node of accession area.
"RTN","LA7VIN4",111,0)
 S LA7AA(0)=$G(^LRO(68,+LA7AA,0))
"RTN","LA7VIN4",112,0)
 ; Accession's subscript
"RTN","LA7VIN4",113,0)
 S LA7SS=$P(LA7AA(0),"^",2)
"RTN","LA7VIN4",114,0)
 ;
"RTN","LA7VIN4",115,0)
 ; Specimen action code
"RTN","LA7VIN4",116,0)
 S LA7SAC=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN4",117,0)
 ;
"RTN","LA7VIN4",118,0)
 ; Specimen(topography), collection sample, HL7 specimen source
"RTN","LA7VIN4",119,0)
 S (LA761,LA762,LA70070,LA7SPEC)=""
"RTN","LA7VIN4",120,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VIN4",121,0)
 D FLD2ARR^LA7VHLU7(.LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",122,0)
 M LA7SPTY=LA7X(1)
"RTN","LA7VIN4",123,0)
 ;
"RTN","LA7VIN4",124,0)
 ; Look for HL7 Table 0070 code.
"RTN","LA7VIN4",125,0)
 ; If coding system blank then default to table 0070 as coding system per HL7 standard for OBR-15.
"RTN","LA7VIN4",126,0)
 ; If no code and not a standard code set then ignore (remove).
"RTN","LA7VIN4",127,0)
 F I=1,4 D
"RTN","LA7VIN4",128,0)
 . I $G(LA7SPTY(I))="",$G(LA7SPTY(I+2))'?1(1"99".E,1"L") K LA7SPTY(I),LA7SPTY(I+1),LA7SPTY(I+2),LA7SPTY($S(I=1:7,1:8)) Q
"RTN","LA7VIN4",129,0)
 . I $G(LA7SPTY(I+2))="" S LA7SPTY(I+2)="HL70070"
"RTN","LA7VIN4",130,0)
 . I LA7SPTY(I+2)="HL70070" S LA7SPEC=LA7SPTY(I)
"RTN","LA7VIN4",131,0)
 I LA7SPEC="" S LA7SPEC=$G(LA7SPTY)
"RTN","LA7VIN4",132,0)
 ;
"RTN","LA7VIN4",133,0)
 ; Retrieve related specimen/collection sample from accession
"RTN","LA7VIN4",134,0)
 ; Create specimen array to handle multiple AP specimens on orders.
"RTN","LA7VIN4",135,0)
 S I=0
"RTN","LA7VIN4",136,0)
 F  S I=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,I)) Q:'I  D
"RTN","LA7VIN4",137,0)
 . S X=^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,I,0)
"RTN","LA7VIN4",138,0)
 . I $P(X,"^") D
"RTN","LA7VIN4",139,0)
 . . S LA761($P(X,"^"))="" ;spec array
"RTN","LA7VIN4",140,0)
 . . I LA761="" S LA761=$P(X,"^")
"RTN","LA7VIN4",141,0)
 . I $P(X,"^",2) D
"RTN","LA7VIN4",142,0)
 . . S LA762($P(X,"^",2))="" ;sample array
"RTN","LA7VIN4",143,0)
 . . I LA762="" S LA762=$P(X,"^",2)
"RTN","LA7VIN4",144,0)
 ;
"RTN","LA7VIN4",145,0)
 ; Log error when specimen source does not match accession's specimen
"RTN","LA7VIN4",146,0)
 ; Ignore if specimen related to lab control file #62.3
"RTN","LA7VIN4",147,0)
 S LA7OK=1
"RTN","LA7VIN4",148,0)
 I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",2)'=62.3 D
"RTN","LA7VIN4",149,0)
 . N DIERR,LA7MSG
"RTN","LA7VIN4",150,0)
 . F LA7I=1,4 I $G(LA7SPTY(LA7I))'="" D  Q:'LA7OK
"RTN","LA7VIN4",151,0)
 . . I $G(LA7SPTY(LA7I+2))="HL70070" D  Q
"RTN","LA7VIN4",152,0)
 . . . K DIERR,LA7MSG
"RTN","LA7VIN4",153,0)
 . . . S LA70070=$$GET1^DIQ(61,LA761_",","LEDI HL7:HL7 ABBR",,,"LA7MSG")
"RTN","LA7VIN4",154,0)
 . . . I LA70070'="",LA70070'=LA7SPTY(LA7I) S LA7OK=0,LA7OK(0)="HL7 "_LA7SPTY(LA7I)
"RTN","LA7VIN4",155,0)
 . . I $G(LA7SPTY(LA7I+2))="SCT" D OBRSCT Q
"RTN","LA7VIN4",156,0)
 ;
"RTN","LA7VIN4",157,0)
 I 'LA7OK D
"RTN","LA7VIN4",158,0)
 . N LA7MSG
"RTN","LA7VIN4",159,0)
 . S LA7ERR=49,LA7QUIT=2,LA7MSG=LA7OK(0)
"RTN","LA7VIN4",160,0)
 . S LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN4",161,0)
 ;
"RTN","LA7VIN4",162,0)
 ; Don't continue if flag set to skip this segment
"RTN","LA7VIN4",163,0)
 I LA7QUIT Q
"RTN","LA7VIN4",164,0)
 ;
"RTN","LA7VIN4",165,0)
 ; Placer's ordering provider (id^duz^last name, first name, mi [id])
"RTN","LA7VIN4",166,0)
 I $G(LA7POP)="" D
"RTN","LA7VIN4",167,0)
 . S LA7POP="",LA7X=$$P^LA7VHLU(.LA7SEG,17,LA7FS)
"RTN","LA7VIN4",168,0)
 . I LA7X="" Q
"RTN","LA7VIN4",169,0)
 . S LA7POP=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",170,0)
 . I LA7POP="^^" S LA7POP=""
"RTN","LA7VIN4",171,0)
 ;
"RTN","LA7VIN4",172,0)
 ; Results rpt/status chng -  date/time
"RTN","LA7VIN4",173,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,23,LA7FS),LA7RSDT=""
"RTN","LA7VIN4",174,0)
 I LA7X'="" S LA7RSDT=$$HL7TFM^XLFDT(LA7X,"L")
"RTN","LA7VIN4",175,0)
 ;
"RTN","LA7VIN4",176,0)
 ; Result status
"RTN","LA7VIN4",177,0)
 S LA7OBR25=$$P^LA7VHLU(.LA7SEG,26,LA7FS)
"RTN","LA7VIN4",178,0)
 ;
"RTN","LA7VIN4",179,0)
 ; Parent result - CM data type.
"RTN","LA7VIN4",180,0)
 ; Save OBX-4 (sub-id) of parent result in LAPSUBID for subsequent usage by OBX/NTE's.
"RTN","LA7VIN4",181,0)
 S LA7OBR26=$$FIELD^LA7VHLU7(26)
"RTN","LA7VIN4",182,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR26)
"RTN","LA7VIN4",183,0)
 S LAPSUBID=$G(LA7OBR26(2))
"RTN","LA7VIN4",184,0)
 ;
"RTN","LA7VIN4",185,0)
 ; Parent
"RTN","LA7VIN4",186,0)
 S LA7OBR29=$$FIELD^LA7VHLU7(29)
"RTN","LA7VIN4",187,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR29)
"RTN","LA7VIN4",188,0)
 ;
"RTN","LA7VIN4",189,0)
 ; Principle Result interpreter
"RTN","LA7VIN4",190,0)
 S LA7OBR32=$$FIELD^LA7VHLU7(32),LA7PRI=""
"RTN","LA7VIN4",191,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR32)
"RTN","LA7VIN4",192,0)
 I $G(LA7OBR32(1))'="" D
"RTN","LA7VIN4",193,0)
 . S LA7X=$TR(LA7OBR32(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",194,0)
 . S LA7PRI=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",195,0)
 . I LA7PRI="^^" S LA7PRI=""
"RTN","LA7VIN4",196,0)
 ;
"RTN","LA7VIN4",197,0)
 ; Assistant Result Interpreter
"RTN","LA7VIN4",198,0)
 S LA7OBR33=$$FIELD^LA7VHLU7(33),LA7ARI=""
"RTN","LA7VIN4",199,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR33)
"RTN","LA7VIN4",200,0)
 I $G(LA7OBR33(1))'="" D
"RTN","LA7VIN4",201,0)
 . S LA7X=$TR(LA7OBR33(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",202,0)
 . S LA7ARI=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",203,0)
 . I LA7ARI="^^" S LA7ARI=""
"RTN","LA7VIN4",204,0)
 ;
"RTN","LA7VIN4",205,0)
 ; Technician
"RTN","LA7VIN4",206,0)
 S LA7OBR34=$$FIELD^LA7VHLU7(34),LA7TECH=""
"RTN","LA7VIN4",207,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR34)
"RTN","LA7VIN4",208,0)
 I $G(LA7OBR34(1))'="" D
"RTN","LA7VIN4",209,0)
 . S LA7X=$TR(LA7OBR34(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",210,0)
 . S LA7TECH=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",211,0)
 . I LA7TECH="^^" S LA7TECH=""
"RTN","LA7VIN4",212,0)
 ;
"RTN","LA7VIN4",213,0)
 ; Results handling
"RTN","LA7VIN4",214,0)
 ; Usually IS data type however later HL7 versions use CWE data type. Attempt to handle either format.
"RTN","LA7VIN4",215,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,50,LA7FS)
"RTN","LA7VIN4",216,0)
 S LA7OBR49=$P(LA7X,LA7CS,1)
"RTN","LA7VIN4",217,0)
 ;
"RTN","LA7VIN4",218,0)
 ; Set Auto Release flag at OBR level for comments (NTE segments) before processing OBX segment, use "-.0000" in lieu of OBX.17 suffix value
"RTN","LA7VIN4",219,0)
 I LA7MTYP="ORU" S LA7AUTORELEASE=$$ARSTATUS^LA7VIN5(LA7OBR49,"-.0000",LA7624)
"RTN","LA7VIN4",220,0)
 ;
"RTN","LA7VIN4",221,0)
 ; Create entry in LAH for supported subscripts.
"RTN","LA7VIN4",222,0)
 I LA7MTYP="ORR",$G(LA7OTYPE)'="OK",LA7SS?1(1"CH",1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7VIN4",223,0)
 . D LAGEN^LA7VIN4A
"RTN","LA7VIN4",224,0)
 . I $G(LA7ISQN)="" D CREATE^LA7LOG(14) Q
"RTN","LA7VIN4",225,0)
 . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN4",226,0)
 . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",227,0)
 . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",228,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_LA7OTYPE_"^^"_$P($G(LA7SM),"^",2)
"RTN","LA7VIN4",229,0)
 . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",230,0)
 . I $G(LA7OCR)'="" S ^TMP("LA7 ORDER STATUS",$J,LA7I,"OCR")=$TR(LA7OCR,LA7CS,"^")
"RTN","LA7VIN4",231,0)
 . I $G(LA7MSATM)'="" S ^TMP("LA7 ORDER STATUS",$J,LA7I,"MSA")=LA7MSATM
"RTN","LA7VIN4",232,0)
 ;
"RTN","LA7VIN4",233,0)
 I LA7MTYP="ORU",LA7SS?1(1"CH",1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7VIN4",234,0)
 . D LAGEN^LA7VIN4A
"RTN","LA7VIN4",235,0)
 . I $G(LA7ISQN)<1 S LA7ERR=14,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1) Q
"RTN","LA7VIN4",236,0)
 . I LA7INTYP=10,LA7SAC?1(1"A",1"G") D
"RTN","LA7VIN4",237,0)
 . . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1,LA7SAC(0)=LA7I
"RTN","LA7VIN4",238,0)
 . . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",239,0)
 . . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",240,0)
 . . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_$G(LA7OTYPE)_"^"_LA7SAC_"^"_$P($G(LA7SM),"^",2)
"RTN","LA7VIN4",241,0)
 . . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",242,0)
 . I LA7INTYP=10,LA7OBR25?1(1"A",1"X") D
"RTN","LA7VIN4",243,0)
 . . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN4",244,0)
 . . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",245,0)
 . . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",246,0)
 . . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_$G(LA7OTYPE)_"^"_LA7SAC_"^"_$P($G(LA7SM),"^",2)_"^"_LA7OBR25
"RTN","LA7VIN4",247,0)
 . . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",248,0)
 . I LA7INTYP=10,LA7SS?1(1"MI",1"SP",1"CY",1"EM") S ^TMP("LA7-PL-NTE",$J,LA7LWL,LA7ISQN,LA7SS)=LA7SFAC
"RTN","LA7VIN4",249,0)
 ;
"RTN","LA7VIN4",250,0)
 I LA7INTYP=10,$G(LA7SM)'="",$G(LA7UID)'="" D SMUPDT^LA7VIN4A
"RTN","LA7VIN4",251,0)
 Q
"RTN","LA7VIN4",252,0)
 ;
"RTN","LA7VIN4",253,0)
 ;
"RTN","LA7VIN4",254,0)
OBRSCT   ; check if SCT doesn't match any specimen in #68
"RTN","LA7VIN4",255,0)
 ;
"RTN","LA7VIN4",256,0)
 ;ZEXCEPT: LA761,LA76248,LA7I,LA7OK,LA7SPTY
"RTN","LA7VIN4",257,0)
 ;
"RTN","LA7VIN4",258,0)
 N LA761SCT,R61,SCTOK
"RTN","LA7VIN4",259,0)
 S (R61,SCTOK)=0
"RTN","LA7VIN4",260,0)
 F  S R61=$O(LA761(R61)) Q:'R61  D
"RTN","LA7VIN4",261,0)
 . I $D(^LAHM(62.48,LA76248,"SCT","AD1",LA7SPTY(LA7I),R61_";LAB(61,")) S SCTOK=1 Q
"RTN","LA7VIN4",262,0)
 . S LA761SCT=$$IEN2SCT^LA7VHLU6(61,R61,DT,"")
"RTN","LA7VIN4",263,0)
 . I LA761SCT'>0 S SCTOK=1
"RTN","LA7VIN4",264,0)
 . I $P(LA761SCT,"^")=LA7SPTY(LA7I) S SCTOK=1
"RTN","LA7VIN4",265,0)
 ;
"RTN","LA7VIN4",266,0)
 ; If no topography found on accession with a SCT mapping that matches SCT code then flag as error.
"RTN","LA7VIN4",267,0)
 ; Also if SCT code in message has Lexicon exception then record as a separate error.
"RTN","LA7VIN4",268,0)
 I 'SCTOK D
"RTN","LA7VIN4",269,0)
 . N LA7SCT,LA7X,LA7Z
"RTN","LA7VIN4",270,0)
 . S LA7OK=0,LA7OK(0)="SCTID "_LA7SPTY(LA7I)
"RTN","LA7VIN4",271,0)
 . S LA7Z=$$CODE^LEXTRAN(LA7SPTY(LA7I),"SCT",DT,"LA7SCT")
"RTN","LA7VIN4",272,0)
 . I $P(LA7Z,"^",5) D
"RTN","LA7VIN4",273,0)
 . . S LA7X=$P(LA7Z,"^",6)
"RTN","LA7VIN4",274,0)
 . . D CREATE^LA7LOG(37)
"RTN","LA7VIN4",275,0)
 ;
"RTN","LA7VIN4",276,0)
 Q
"RTN","LA7VIN4A")
0^2^B23154184
"RTN","LA7VIN4A",1,0)
LA7VIN4A ;DALOI/JMC - Process Incoming UI Msgs, continued ;04/19/16  16:17
"RTN","LA7VIN4A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**74,80,88**;Sep 27, 1994;Build 10
"RTN","LA7VIN4A",3,0)
 ;
"RTN","LA7VIN4A",4,0)
 ;This routine is a continuation of LA7VIN4 and is only called from there.
"RTN","LA7VIN4A",5,0)
 Q
"RTN","LA7VIN4A",6,0)
 ;
"RTN","LA7VIN4A",7,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7VIN4A",8,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7VIN4A",9,0)
 ;
"RTN","LA7VIN4A",10,0)
LAGEN ; Sets up variables for call to ^LAGEN,  build entry in LAH
"RTN","LA7VIN4A",11,0)
 ; requires LA7INST,LA7TRAY,LA7CUP,LA7AA,LA7AD,LA7AN,LA7LWL
"RTN","LA7VIN4A",12,0)
 ; returns LA7ISQN=subscript to store results in ^LAH global
"RTN","LA7VIN4A",13,0)
 ;
"RTN","LA7VIN4A",14,0)
 I LA7ENTRY="LOG" D
"RTN","LA7VIN4A",15,0)
 . I LA7INTYP>19,LA7INTYP<30 Q
"RTN","LA7VIN4A",16,0)
 . I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)) S LA7ERR=13,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN4A",17,0)
 I LA7ENTRY="LLIST" S:'LA7CUP LA7CUP=LA7IDE ;cup=sequence number
"RTN","LA7VIN4A",18,0)
 ;
"RTN","LA7VIN4A",19,0)
 K LA7ISQN,LADT,LAGEN
"RTN","LA7VIN4A",20,0)
 K TRAY,CUP,LWL,WL,LROVER,METH,LOG,IDENT,ISQN
"RTN","LA7VIN4A",21,0)
 ;
"RTN","LA7VIN4A",22,0)
 S LA7ISQN=""
"RTN","LA7VIN4A",23,0)
 S TRAY=+$G(LA7TRAY) S:'TRAY TRAY=1
"RTN","LA7VIN4A",24,0)
 S CUP=+$G(LA7CUP) S:'CUP CUP=1
"RTN","LA7VIN4A",25,0)
 ;
"RTN","LA7VIN4A",26,0)
 S LWL=LA7LWL
"RTN","LA7VIN4A",27,0)
 I '$D(^LRO(68.2,+LWL,0)) D  Q
"RTN","LA7VIN4A",28,0)
 . S LA7ERR=19,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN4A",29,0)
 ;
"RTN","LA7VIN4A",30,0)
 ; Set accession area to area of specimen, allow multiple areas on same instrument.
"RTN","LA7VIN4A",31,0)
 S WL=LA7AA
"RTN","LA7VIN4A",32,0)
 I '$D(^LRO(68,+WL,0)) D  Q
"RTN","LA7VIN4A",33,0)
 . S LA7ERR=20,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN4A",34,0)
 S LROVER=$P(LA7624(0),"^",12)
"RTN","LA7VIN4A",35,0)
 ;
"RTN","LA7VIN4A",36,0)
 ; LEDI(MI & AP) override #62.4 setting so results never overlay unless same message
"RTN","LA7VIN4A",37,0)
 I LA7INTYP=10 D
"RTN","LA7VIN4A",38,0)
 . I LA7SS'?1(1"MI",1"SP",1"CY",1"EM") Q
"RTN","LA7VIN4A",39,0)
 . ; Use same entry in LAH if handling multiple OBR within same message for same accession/test
"RTN","LA7VIN4A",40,0)
 . I $P($G(LA7INTYP("ISQN",LWL)),"^",1,3)=(LA76249_"^"_LA7UID_"^"_LA7ONLT) S ISQN=$P(LA7INTYP("ISQN",LWL),"^",4),LROVER=2 Q
"RTN","LA7VIN4A",41,0)
 . S LROVER=0
"RTN","LA7VIN4A",42,0)
 S METH=$P(LA7624(0),"^",10)
"RTN","LA7VIN4A",43,0)
 S LOG=LA7AN
"RTN","LA7VIN4A",44,0)
 S IDENT=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",6) ;identity field
"RTN","LA7VIN4A",45,0)
 S IDE=+LA7IDE
"RTN","LA7VIN4A",46,0)
 S LADT=LA7AD
"RTN","LA7VIN4A",47,0)
 ;
"RTN","LA7VIN4A",48,0)
 ; If auto release then set flag to not overlay data in LAH unless from same message.
"RTN","LA7VIN4A",49,0)
 I LA7OBR49="AR" S LROVER=0
"RTN","LA7VIN4A",50,0)
 I $G(LA7UID)'="",$D(^TMP("LA7 AR",$J,LA7LWL,1,"AUTOREL-UID",LA7UID)) D
"RTN","LA7VIN4A",51,0)
 . N I
"RTN","LA7VIN4A",52,0)
 . S I=0
"RTN","LA7VIN4A",53,0)
 . F  S I=$O(^TMP("LA7 AR",$J,LA7LWL,1,"AUTOREL-UID",LA7UID,I)) Q:'I  I $D(^TMP("LA7 AR",$J,LA7LWL,1,"AUTOREL-UID",LA7UID,I,LA76249)) S ISQN=I,LROVER=2 Q
"RTN","LA7VIN4A",54,0)
 ;
"RTN","LA7VIN4A",55,0)
 I LROVER<2 D
"RTN","LA7VIN4A",56,0)
 . N LRDFN ; Protect LRDFN - call into LAGEN can set to 0
"RTN","LA7VIN4A",57,0)
 . ;
"RTN","LA7VIN4A",58,0)
 . ; If POC interface call special entry point
"RTN","LA7VIN4A",59,0)
 . I LA7INTYP>19,LA7INTYP<30 S IDE=LA76249 D POC^LAGEN Q
"RTN","LA7VIN4A",60,0)
 . ;
"RTN","LA7VIN4A",61,0)
 . D @(LA7ENTRY_"^LAGEN") ;this disregards the CROSS LINK field in 62.4
"RTN","LA7VIN4A",62,0)
 ;
"RTN","LA7VIN4A",63,0)
 S LA7ISQN=$G(ISQN)
"RTN","LA7VIN4A",64,0)
 ;
"RTN","LA7VIN4A",65,0)
 I LA7ISQN<1 Q
"RTN","LA7VIN4A",66,0)
 ; Save entry made in LAH for this load list and message for this accession (UID)
"RTN","LA7VIN4A",67,0)
 I LA7INTYP=10 S LA7INTYP("ISQN",LWL)=LA76249_"^"_LA7UID_"^"_LA7ONLT_"^"_LA7ISQN
"RTN","LA7VIN4A",68,0)
 ;
"RTN","LA7VIN4A",69,0)
 ; Build/store patient demographics array
"RTN","LA7VIN4A",70,0)
 N I,J,LA7OBRA,LA7PIDA,X,Y
"RTN","LA7VIN4A",71,0)
 S J="DFN^DOB^ICN^LOC^LRDFN^LRTDFN^PNM^SEX^SSN"
"RTN","LA7VIN4A",72,0)
 S J(0)="DFN^LA7DOB^LA7ICN^LA7LOC^LRDFN^LRTDFN^LA7PNM^LA7SEX^LA7SSN"
"RTN","LA7VIN4A",73,0)
 F I=1:1 S X=$P(J,"^",I) Q:X=""  D
"RTN","LA7VIN4A",74,0)
 . S Y=$P(J(0),"^",I)
"RTN","LA7VIN4A",75,0)
 . I $G(@Y)'="" S LA7PIDA(X)=@Y
"RTN","LA7VIN4A",76,0)
 I $D(LA7PIDA) D POI^LAGEN(LA7LWL,LA7ISQN,"PID",.LA7PIDA)
"RTN","LA7VIN4A",77,0)
 ;
"RTN","LA7VIN4A",78,0)
 ; Build/store order info array
"RTN","LA7VIN4A",79,0)
 N LA7ONLTS
"RTN","LA7VIN4A",80,0)
 I LA7POP'="" S LA7POP=$P(LA7POP," [")
"RTN","LA7VIN4A",81,0)
 S X=$G(^LAH(LA7LWL,1,LA7ISQN,.1,"OBR","ORDNLT"))
"RTN","LA7VIN4A",82,0)
 I X'="",LA7ONLT'="",X'[LA7ONLT S LA7ONLTS=X_"^"_LA7ONLT
"RTN","LA7VIN4A",83,0)
 E  S LA7ONLTS=LA7ONLT
"RTN","LA7VIN4A",84,0)
 S J="EOL^FID^ORCDT^ORDNLT^ORDP^ORDSPEC^PON^SID^PEB^PVB^PRI^ARI^TECH"
"RTN","LA7VIN4A",85,0)
 S J(0)="LA7EOL^LA7FID^LA7CDT^LA7ONLTS^LA7POP^LA7SPEC^LA7PON^LA7SID^LA7PEB^LA7PVB^LA7PRI^LA7ARI^LA7TECH"
"RTN","LA7VIN4A",86,0)
 F I=1:1 S X=$P(J,"^",I) Q:X=""  D
"RTN","LA7VIN4A",87,0)
 . S Y=$P(J(0),"^",I)
"RTN","LA7VIN4A",88,0)
 . I $G(@Y)'="" S LA7OBRA(X)=@Y
"RTN","LA7VIN4A",89,0)
 I $D(LA7OBRA) D POI^LAGEN(LA7LWL,LA7ISQN,"OBR",.LA7OBRA)
"RTN","LA7VIN4A",90,0)
 ;
"RTN","LA7VIN4A",91,0)
 ; Save placer fields 1/2 and filler fields 1/2
"RTN","LA7VIN4A",92,0)
 I LA7SOBR>0 F I=18:1:21 S X=$P("PF1^PF2^FF1^FF2","^",I-17) S ^LAH(LA7LWL,1,LA7ISQN,.1,"OBR",X,LA7SOBR)=LA7OBR(I)
"RTN","LA7VIN4A",93,0)
 ;
"RTN","LA7VIN4A",94,0)
 ; Store interface type with results
"RTN","LA7VIN4A",95,0)
 D LATYP^LAGEN(LA7LWL,LA7ISQN,LA7INTYP)
"RTN","LA7VIN4A",96,0)
 ;
"RTN","LA7VIN4A",97,0)
 ; Store #62.49 ien with results
"RTN","LA7VIN4A",98,0)
 D LAMSGID^LAGEN(LA7LWL,LA7ISQN,LA76249)
"RTN","LA7VIN4A",99,0)
 ;
"RTN","LA7VIN4A",100,0)
 ; Store method name with LAH entry
"RTN","LA7VIN4A",101,0)
 D METH^LAGEN(LA7LWL,LA7ISQN,METH)
"RTN","LA7VIN4A",102,0)
 ;
"RTN","LA7VIN4A",103,0)
 ; Set flag if POC interface to start POC processing routine when
"RTN","LA7VIN4A",104,0)
 ; finished - tasked by LA7VIN before shutdown
"RTN","LA7VIN4A",105,0)
 I LA7INTYP>19,LA7INTYP<30 S LA7INTYP("LWL",LA7LWL)=""
"RTN","LA7VIN4A",106,0)
 ;
"RTN","LA7VIN4A",107,0)
 Q
"RTN","LA7VIN4A",108,0)
 ;
"RTN","LA7VIN4A",109,0)
 ;
"RTN","LA7VIN4A",110,0)
SMUPDT ; Update shipping manifest in shipping event file #62.85
"RTN","LA7VIN4A",111,0)
 N LA7DATA,LA7NCS,LA7TST,LA7USID
"RTN","LA7VIN4A",112,0)
 ;
"RTN","LA7VIN4A",113,0)
 S LA7USID=$$P^LA7VHLU(.LA7SEG,5,LA7FS) ; Universal Service ID (OBR-4)
"RTN","LA7VIN4A",114,0)
 S LA7TST=$P(LA7USID,LA7CS,1) ; Test code
"RTN","LA7VIN4A",115,0)
 S LA7NCS=$P(LA7USID,LA7CS,3) ; Name of coding system
"RTN","LA7VIN4A",116,0)
 S LA7TST(2)=$P(LA7USID,LA7CS,4) ; Alternate test code
"RTN","LA7VIN4A",117,0)
 S LA7NCS(2)=$P(LA7USID,LA7CS,6) ; Alternate coding system
"RTN","LA7VIN4A",118,0)
 ;
"RTN","LA7VIN4A",119,0)
 ; Determine ordered test, check primary and alternate
"RTN","LA7VIN4A",120,0)
 S LA7OTST=$$DOT^LA7SMU1(LA7TST,LA7NCS,LA7UID,$P(LA7SM,"^"))
"RTN","LA7VIN4A",121,0)
 I 'LA7OTST,LA7TST(2)'="" S LA7OTST=$$DOT^LA7SMU1(LA7TST(2),LA7NCS(2),LA7UID,$P(LA7SM,"^"))
"RTN","LA7VIN4A",122,0)
 ;
"RTN","LA7VIN4A",123,0)
 ; Flag the Results Received Event in #62.85
"RTN","LA7VIN4A",124,0)
 I LA7MTYP="ORU" D
"RTN","LA7VIN4A",125,0)
 . S LA7DATA="SM70"_"^"_LA7MEDT_"^"_$G(LA7OTST)_"^"_$P(LA7SM,"^",2)
"RTN","LA7VIN4A",126,0)
 . D SEUP^LA7SMU(LA7UID,"2",LA7DATA)
"RTN","LA7VIN4A",127,0)
 ;
"RTN","LA7VIN4A",128,0)
 ; Flag the Test Received Event in #62.85
"RTN","LA7VIN4A",129,0)
 I LA7MTYP="ORR" D
"RTN","LA7VIN4A",130,0)
 . S LA7DATA="SM55"_"^"_LA7MEDT_"^"_$G(LA7OTST)_"^"_$P(LA7SM,"^",2)
"RTN","LA7VIN4A",131,0)
 . D SEUP^LA7SMU(LA7UID,"2",LA7DATA)
"RTN","LA7VIN4A",132,0)
 Q
"RTN","LA7VIN5")
0^3^B85555425
"RTN","LA7VIN5",1,0)
LA7VIN5 ;DALOI/JMC - Process Incoming UI Msgs, continued ;04/19/16  16:28
"RTN","LA7VIN5",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,74,84,88**;Sep 27, 1994;Build 10
"RTN","LA7VIN5",3,0)
 ;
"RTN","LA7VIN5",4,0)
 ; This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN5",5,0)
 ; It is called to process OBX segments for "CH" subscript tests.
"RTN","LA7VIN5",6,0)
 ;
"RTN","LA7VIN5",7,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7VIN5",8,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7VIN5",9,0)
 Q
"RTN","LA7VIN5",10,0)
 ;
"RTN","LA7VIN5",11,0)
OBX ;
"RTN","LA7VIN5",12,0)
 ;
"RTN","LA7VIN5",13,0)
 N LA76241,LA76304,LA7EII,LA7I,LA7J,LA7LIMIT,LA7OBM,LA7SUBFL,LA7TEST,LA7TREEN,LA7UNITS,LA7VAL,LA7VTYP,LA7X,LA7XFORM,LA7Y
"RTN","LA7VIN5",14,0)
 ;
"RTN","LA7VIN5",15,0)
 K LA7RMK,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",16,0)
 ;
"RTN","LA7VIN5",17,0)
 S LA7SUBFL=63.04
"RTN","LA7VIN5",18,0)
 ;
"RTN","LA7VIN5",19,0)
 ; OBX Set ID
"RTN","LA7VIN5",20,0)
 S LA7SOBX=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN5",21,0)
 ;
"RTN","LA7VIN5",22,0)
 ; Value type - type of data from Table 0125
"RTN","LA7VIN5",23,0)
 S LA7VTYP=$P($$P^LA7VHLU(.LA7SEG,3,LA7FS),LA7CS)
"RTN","LA7VIN5",24,0)
 ;
"RTN","LA7VIN5",25,0)
 ; Determine test result codes - check for primary and alternate codes
"RTN","LA7VIN5",26,0)
 ; For DoD/CHCS interface - do NOT process test codes using 99LRT as coding system per DoD/July 2002.
"RTN","LA7VIN5",27,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS),(LA7RNLT,LA7RLNC)=""
"RTN","LA7VIN5",28,0)
 S LA7TEST=$P(LA7X,LA7CS)
"RTN","LA7VIN5",29,0)
 S LA7TEST(0)=$$UNESC^LA7VHLU3($P(LA7X,LA7CS,2),LA7FS_LA7ECH)
"RTN","LA7VIN5",30,0)
 I LA7TEST(0)["^" S LA7TEST(0)=$TR(LA7TEST(0),"^","~")
"RTN","LA7VIN5",31,0)
 S LA7TEST(0,1)=$P(LA7X,LA7CS,3)
"RTN","LA7VIN5",32,0)
 S LA7TEST(2)=$P(LA7X,LA7CS,4)
"RTN","LA7VIN5",33,0)
 S LA7TEST(2,0)=$$UNESC^LA7VHLU3($P(LA7X,LA7CS,5),LA7FS_LA7ECH)
"RTN","LA7VIN5",34,0)
 I LA7TEST(2,0)["^" S LA7TEST(2,0)=$TR(LA7TEST(2,0),"^","~")
"RTN","LA7VIN5",35,0)
 S LA7TEST(2,1)=$P(LA7X,LA7CS,6)
"RTN","LA7VIN5",36,0)
 F I=3,6 D
"RTN","LA7VIN5",37,0)
 . S LA7Y=$P(LA7X,LA7CS,I-2)
"RTN","LA7VIN5",38,0)
 . I $P(LA7X,LA7CS,I)="LN" D  Q
"RTN","LA7VIN5",39,0)
 . . I $P($G(^LAB(95.3,+LA7Y,0)),"^")=LA7Y S LA7RLNC=+LA7Y Q
"RTN","LA7VIN5",40,0)
 . . I $P($G(^LAB(95.3,+LA7Y,0)),"^")=+LA7Y S LA7RLNC=+LA7Y Q
"RTN","LA7VIN5",41,0)
 . . S LA7J=$O(^LAB(95.3,"B",LA7Y,0))
"RTN","LA7VIN5",42,0)
 . . I LA7J S LA7RLNC=LA7J
"RTN","LA7VIN5",43,0)
 . I $P(LA7X,LA7CS,I)="99VA64" D  Q
"RTN","LA7VIN5",44,0)
 . . I $$FIND1^DIC(64,"","OMX",LA7Y) S LA7RNLT=LA7Y
"RTN","LA7VIN5",45,0)
 . I $P(LA7X,LA7CS,I)="99LRT" D  Q
"RTN","LA7VIN5",46,0)
 . . I LA7TEST(0)="",LA7TEST(2,0)'="" S LA7TEST(0)=LA7TEST(2,0)
"RTN","LA7VIN5",47,0)
 . . I LA7TEST(2,0)="",LA7TEST(0)'="" S LA7TEST(2,0)=LA7TEST(0)
"RTN","LA7VIN5",48,0)
 . . I I=3 S (LA7TEST,LA7TEST(0),LA7TEST(0,1))="" Q
"RTN","LA7VIN5",49,0)
 . . I I=6 S (LA7TEST(2),LA7TEST(2,0),LA7TEST(2,1))="" Q
"RTN","LA7VIN5",50,0)
 I LA7TEST="",LA7TEST(2)'="" D
"RTN","LA7VIN5",51,0)
 . S LA7TEST=LA7TEST(2),LA7TEST(0)=LA7TEST(2,0),LA7TEST(0,1)=LA7TEST(2,1)
"RTN","LA7VIN5",52,0)
 . S (LA7TEST(2),LA7TEST(2,0),LA7TEST(2,1))=""
"RTN","LA7VIN5",53,0)
 ;
"RTN","LA7VIN5",54,0)
 ; No test code in message
"RTN","LA7VIN5",55,0)
 I LA7TEST="",LA7TEST(2)="" D  Q
"RTN","LA7VIN5",56,0)
 . N LA7OBX
"RTN","LA7VIN5",57,0)
 . S LA7OBX=LA7SEG(0)
"RTN","LA7VIN5",58,0)
 . S LA7ERR=15,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN5",59,0)
 ;
"RTN","LA7VIN5",60,0)
 ; Test code not found in auto inst file, also check alternate codes,
"RTN","LA7VIN5",61,0)
 ; and log error if none found.
"RTN","LA7VIN5",62,0)
 I LA7MTYP="ORU" D  Q:LA7TEST=""
"RTN","LA7VIN5",63,0)
 . I LA7TEST'="",$D(^LAB(62.4,LA7624,3,"AC",LA7TEST)) Q
"RTN","LA7VIN5",64,0)
 . I LA7TEST(2)'="",$D(^LAB(62.4,LA7624,3,"AC",LA7TEST(2))) D  Q
"RTN","LA7VIN5",65,0)
 . . S LA7TEST=LA7TEST(2),LA7TEST(0)=LA7TEST(2,0),LA7TEST(0,1)=LA7TEST(2,1)
"RTN","LA7VIN5",66,0)
 . S LA7ERR=16,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1) S LA7TEST=""
"RTN","LA7VIN5",67,0)
 ;
"RTN","LA7VIN5",68,0)
 ; Units - trim leading/trailing spaces
"RTN","LA7VIN5",69,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,7,LA7FS),LA7UNITS=""
"RTN","LA7VIN5",70,0)
 I LA7X'="" D
"RTN","LA7VIN5",71,0)
 . F I=1:1:6 S LA7UNITS(I)=$$UNESC^LA7VHLU3($P(LA7X,LA7CS,I),LA7FS_LA7ECH)
"RTN","LA7VIN5",72,0)
 . S LA7UNITS=$$TRIM^XLFSTR(LA7UNITS(1),"LR"," ")
"RTN","LA7VIN5",73,0)
 . I LA7UNITS["^" D
"RTN","LA7VIN5",74,0)
 . . N LA7STR S LA7STR("^")="~U~"
"RTN","LA7VIN5",75,0)
 . . S LA7UNITS=$$REPLACE^XLFSTR(LA7UNITS,.LA7STR)
"RTN","LA7VIN5",76,0)
 ;
"RTN","LA7VIN5",77,0)
 ; Observation result status - Table 0085
"RTN","LA7VIN5",78,0)
 S LA7ORS=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN5",79,0)
 ;
"RTN","LA7VIN5",80,0)
 ; Responsible observer
"RTN","LA7VIN5",81,0)
 S LA7RO=$$XCNTFM^LA7VHLU9($$P^LA7VHLU(.LA7SEG,17,LA7FS),LA7ECH)
"RTN","LA7VIN5",82,0)
 ;
"RTN","LA7VIN5",83,0)
 ; Observation method
"RTN","LA7VIN5",84,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,18,LA7FS),LA7OBM=""
"RTN","LA7VIN5",85,0)
 I $P(LA7X,LA7CS,3)="99VA64_2" S LA7OBM=$P($P(LA7X,LA7CS,1),".",2),LA7OBM="."_LA7OBM
"RTN","LA7VIN5",86,0)
 ;
"RTN","LA7VIN5",87,0)
 ; Equipment instance identifier
"RTN","LA7VIN5",88,0)
 S LA7EII=$$P^LA7VHLU(.LA7SEG,19,LA7FS)
"RTN","LA7VIN5",89,0)
 I LA7EII'="" D
"RTN","LA7VIN5",90,0)
 . S LA7EII=$$UNESC^LA7VHLU3(LA7EII,LA7FS_LA7ECH)
"RTN","LA7VIN5",91,0)
 . S LA7EII=$TR(LA7EII,"^",";")
"RTN","LA7VIN5",92,0)
 ;
"RTN","LA7VIN5",93,0)
 ; Process ORU message results for all tests which use this test code.
"RTN","LA7VIN5",94,0)
 I LA7MTYP="ORU" D  Q
"RTN","LA7VIN5",95,0)
 . S LA7AUTORELEASE=$$ARSTATUS(LA7OBR49,LA7OBM,LA7624) ; Set Auto Release flag
"RTN","LA7VIN5",96,0)
 . S LA76241=0
"RTN","LA7VIN5",97,0)
 . F  S LA76241=$O(^LAB(62.4,LA7624,3,"AC",LA7TEST,LA76241)) Q:'LA76241  D PROCESS
"RTN","LA7VIN5",98,0)
 ;
"RTN","LA7VIN5",99,0)
 I LA7MTYP="ORM",$G(LA7696)>0 D ORESULTS^LA7VIN5B
"RTN","LA7VIN5",100,0)
 ;
"RTN","LA7VIN5",101,0)
 Q
"RTN","LA7VIN5",102,0)
 ;
"RTN","LA7VIN5",103,0)
 ;
"RTN","LA7VIN5",104,0)
PROCESS ; Process results for a given test code
"RTN","LA7VIN5",105,0)
 F LA7I=0,1,2 S LA76241(LA7I)=$G(^LAB(62.4,LA7624,3,LA76241,LA7I))
"RTN","LA7VIN5",106,0)
 ;
"RTN","LA7VIN5",107,0)
 ; Chem test fields incorrect
"RTN","LA7VIN5",108,0)
 I LA76241(0)="" S LA7ERR=18,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1) Q
"RTN","LA7VIN5",109,0)
 ;
"RTN","LA7VIN5",110,0)
 ; No dataname associated with this test - skip
"RTN","LA7VIN5",111,0)
 S LA76304=$P($G(^LAB(60,+$P(LA76241(0),"^"),.2)),"^")
"RTN","LA7VIN5",112,0)
 I LA76304<1 Q
"RTN","LA7VIN5",113,0)
 ;
"RTN","LA7VIN5",114,0)
 S LA7VAL=$$P^LA7VHLU(.LA7SEG,6,LA7FS)
"RTN","LA7VIN5",115,0)
 I LA7VTYP="CE",$P(LA7VAL,LA7CS,2)'="" S LA7VAL=$P(LA7VAL,LA7CS,2)
"RTN","LA7VIN5",116,0)
 E  S LA7VAL=$P(LA7VAL,LA7CS)
"RTN","LA7VIN5",117,0)
 S LA7VAL=$$UNESC^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VIN5",118,0)
 ;
"RTN","LA7VIN5",119,0)
 ; Setup LA7RMK(0) variable in case comments (NTE) sent with test results.
"RTN","LA7VIN5",120,0)
 S LA7RMK(0,+LA76241(0))=+$P(LA76241(2),"^",7)_"^"_$P(LA76241(2),"^",8)
"RTN","LA7VIN5",121,0)
 ;
"RTN","LA7VIN5",122,0)
 ; Set flag for new results alert
"RTN","LA7VIN5",123,0)
 I LA7ORS'?1(1"C",1"D",1"W") S ^TMP("LA7-ORU",$J,LA76248,LA76249,"CH")=""
"RTN","LA7VIN5",124,0)
 ;
"RTN","LA7VIN5",125,0)
 ; Set flag to send amended results bulletin
"RTN","LA7VIN5",126,0)
 I LA7INTYP=10,LA7ORS?1(1"C",1"D",1"W") D
"RTN","LA7VIN5",127,0)
 . S LA7I=$O(^TMP("LA7 AMENDED RESULTS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN5",128,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA76304_"^"_LA76248_"^"_LA76249_"^"_LA7ORS_"^"_LA7TEST_"^"_$S(LA7TEST(0)'="":LA7TEST(0),1:LA7TEST(2,0))_"^"_$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN5",129,0)
 . S ^TMP("LA7 AMENDED RESULTS",$J,LA7I)=X
"RTN","LA7VIN5",130,0)
 . I LA7UID'="" S ^LAH("LA7 AMENDED RESULTS",LA7UID,LA76304,LA7LWL,LA7ISQN)=X
"RTN","LA7VIN5",131,0)
 ;
"RTN","LA7VIN5",132,0)
 ; NOTE - this array can be set from inside PARAM 1
"RTN","LA7VIN5",133,0)
 K LA7XFORM
"RTN","LA7VIN5",134,0)
 ;
"RTN","LA7VIN5",135,0)
 ; execute PARAM 1 if not a LEDI interface or auto release
"RTN","LA7VIN5",136,0)
 I LA7INTYP'=10,LA7AUTORELEASE<1 X $P(LA76241(0),"^",2)
"RTN","LA7VIN5",137,0)
 ;
"RTN","LA7VIN5",138,0)
 I $P(LA76241(2),"^",3)=0 Q
"RTN","LA7VIN5",139,0)
 I $P(LA76241(2),"^",3)=2,LA7ORS'?1(1"C",1"F",1"U",1"X") Q
"RTN","LA7VIN5",140,0)
 ;
"RTN","LA7VIN5",141,0)
 ; If OBX indicates no result for this test then store VistA "canc" value.
"RTN","LA7VIN5",142,0)
 I LA7ORS="X",LA7VAL="" S LA7VAL="canc"
"RTN","LA7VIN5",143,0)
 ;
"RTN","LA7VIN5",144,0)
 ; No value found
"RTN","LA7VIN5",145,0)
 I LA7VAL="" D  Q
"RTN","LA7VIN5",146,0)
 . S LA7ERR=17,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN5",147,0)
 ;
"RTN","LA7VIN5",148,0)
 ; Transform result based on fields in file 62.4
"RTN","LA7VIN5",149,0)
 D XFORM^LA7VIN5A
"RTN","LA7VIN5",150,0)
 Q:LA7VAL=""
"RTN","LA7VIN5",151,0)
 ;
"RTN","LA7VIN5",152,0)
 ; Check if result passes input transform on data name
"RTN","LA7VIN5",153,0)
 D CHKDIE^LA7VIN5A
"RTN","LA7VIN5",154,0)
 Q:LA7VAL=""
"RTN","LA7VIN5",155,0)
 ;
"RTN","LA7VIN5",156,0)
 ; Set flag to not store comments if it wasn't explicitly ordered.
"RTN","LA7VIN5",157,0)
 I $G(LA7LIMIT)=1 D
"RTN","LA7VIN5",158,0)
 . N LA76804
"RTN","LA7VIN5",159,0)
 . K LA7LIMIT,LA7TREEN,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",160,0)
 . ; Store all tests accessioned in ^TMP
"RTN","LA7VIN5",161,0)
 . S LA76804=0
"RTN","LA7VIN5",162,0)
 . F  S LA76804=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA76804)) Q:'LA76804  D UNWIND^LA7UTIL(LA76804)
"RTN","LA7VIN5",163,0)
 . I '$D(^TMP("LA7TREE",$J,+LA76241(0))) S LA7LIMIT=1 ;wasn't ordered
"RTN","LA7VIN5",164,0)
 I $G(LA7LIMIT) D  Q
"RTN","LA7VIN5",165,0)
 . S $P(LA7RMK(0,+LA76241(0)),"^",1)=0
"RTN","LA7VIN5",166,0)
 . K LA7LIMIT,^TMP("LA7TREE",$J)
"RTN","LA7VIN5",167,0)
 K ^TMP("LA7TREE",$J)
"RTN","LA7VIN5",168,0)
 ;
"RTN","LA7VIN5",169,0)
 ; Check point of care interface for matching specimen type  for this test in #62.4
"RTN","LA7VIN5",170,0)
 I LA7INTYP>19,LA7INTYP<30 D  Q:'LA761
"RTN","LA7VIN5",171,0)
 . N LA70070
"RTN","LA7VIN5",172,0)
 . S LA761="",LA7X=$P(LA76241(2),"^",13) Q:'LA7X
"RTN","LA7VIN5",173,0)
 . S LA70070=$$GET1^DIQ(61,LA7X_",","LEDI HL7:HL7 ABBR")
"RTN","LA7VIN5",174,0)
 . I LA70070=LA7SPEC S LA761=LA7X
"RTN","LA7VIN5",175,0)
 ;
"RTN","LA7VIN5",176,0)
 ; Set data node=test value
"RTN","LA7VIN5",177,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^")=LA7VAL
"RTN","LA7VIN5",178,0)
 ;
"RTN","LA7VIN5",179,0)
 ; Store reference ranges except for UI (LA7INTYP=1) interfaces
"RTN","LA7VIN5",180,0)
 D REFRNG^LA7VIN5A($$P^LA7VHLU(.LA7SEG,8,LA7FS))
"RTN","LA7VIN5",181,0)
 ;
"RTN","LA7VIN5",182,0)
 ; Store order/result codes/observation method except for UI (LA7INTYP=1) interfaces
"RTN","LA7VIN5",183,0)
 I LA7INTYP'=1 D
"RTN","LA7VIN5",184,0)
 . S LA7X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",3)
"RTN","LA7VIN5",185,0)
 . I LA7ONLT S $P(LA7X,"!",1)=LA7ONLT
"RTN","LA7VIN5",186,0)
 . I LA7RNLT S $P(LA7X,"!",2)=LA7RNLT
"RTN","LA7VIN5",187,0)
 . I LA7RLNC S $P(LA7X,"!",3)=LA7RLNC
"RTN","LA7VIN5",188,0)
 . I LA7OBM S $P(LA7X,"!",4)=LA7OBM
"RTN","LA7VIN5",189,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",3)=LA7X
"RTN","LA7VIN5",190,0)
 ;
"RTN","LA7VIN5",191,0)
 ; Store abnormal flags except for UI (LA7INTYP=1) interfaces.
"RTN","LA7VIN5",192,0)
 D ABFLAG^LA7VIN5A($$P^LA7VHLU(.LA7SEG,9,LA7FS))
"RTN","LA7VIN5",193,0)
 ;
"RTN","LA7VIN5",194,0)
 ; Store units except for UI non Auto Release (LA7INTYP=1,LA7AUTORELEASE=1) interfaces which pull values from file #60.
"RTN","LA7VIN5",195,0)
 I LA7UNITS'="" D
"RTN","LA7VIN5",196,0)
 . I LA7INTYP=1,'LA7AUTORELEASE Q
"RTN","LA7VIN5",197,0)
 . S LA7X=$P($G(^LAH(LA7LWL,1,LA7ISQN,LA76304)),"^",5)
"RTN","LA7VIN5",198,0)
 . S $P(LA7X,"!",7)=LA7UNITS
"RTN","LA7VIN5",199,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=LA7X
"RTN","LA7VIN5",200,0)
 ;
"RTN","LA7VIN5",201,0)
 ; Store responsible observer on Lab UI (1) Auto Release, POC (20), POCA (21) interfaces
"RTN","LA7VIN5",202,0)
 I LA7RO'="",$P(LA7RO,"^",2) D
"RTN","LA7VIN5",203,0)
 . I LA7INTYP'?1(1"1",1"20",1"21") Q
"RTN","LA7VIN5",204,0)
 . I LA7INTYP=1,'LA7AUTORELEASE Q
"RTN","LA7VIN5",205,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",4)=$P(LA7RO,"^",2)
"RTN","LA7VIN5",206,0)
 ;
"RTN","LA7VIN5",207,0)
 ; Store specimen type except for UI (LA7INTYP=1) interfaces which pull values from the accession.
"RTN","LA7VIN5",208,0)
 I LA7INTYP'=1,$G(LA761) D
"RTN","LA7VIN5",209,0)
 . S X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)
"RTN","LA7VIN5",210,0)
 . S $P(X,"!")=LA761
"RTN","LA7VIN5",211,0)
 . S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=X
"RTN","LA7VIN5",212,0)
 ;
"RTN","LA7VIN5",213,0)
 ; Store where test was performed except for UI (LA7INTYP=1) interfaces
"RTN","LA7VIN5",214,0)
 ;  also store related filler order number
"RTN","LA7VIN5",215,0)
 I LA7INTYP'=1 D
"RTN","LA7VIN5",216,0)
 . N I,LA7X,LA74
"RTN","LA7VIN5",217,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,24,LA7FS),LA74=""
"RTN","LA7VIN5",218,0)
 . I $P(LA7X,LA7CS,6)="CLIA" D
"RTN","LA7VIN5",219,0)
 . . S LA74=$$IDX^XUAF4("CLIA",$P(LA7X,LA7CS,10))
"RTN","LA7VIN5",220,0)
 . . I LA74 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",9)=LA74
"RTN","LA7VIN5",221,0)
 . . E  S LA74=""
"RTN","LA7VIN5",222,0)
 . I LA74="" D PRDID^LA7VIN5A($$P^LA7VHLU(.LA7SEG,16,LA7FS),LA7SFAC,LA7CS)
"RTN","LA7VIN5",223,0)
 . I LA7FID'="" D FID
"RTN","LA7VIN5",224,0)
 ;
"RTN","LA7VIN5",225,0)
 ; Store equipment instance identifier
"RTN","LA7VIN5",226,0)
 I LA7EII'="" D EII^LA7VIN5A
"RTN","LA7VIN5",227,0)
 ;
"RTN","LA7VIN5",228,0)
 ; If results for LEDI interface (LA7INTYP=10) and site keeps file #60
"RTN","LA7VIN5",229,0)
 ; in sync with reference lab then compare message's units and normals
"RTN","LA7VIN5",230,0)
 ; with site's to detect changes(LA7FLAG=1) and notify site.
"RTN","LA7VIN5",231,0)
 I LA7INTYP=10,$G(LA761),$G(^LAB(60,+$P(LA76241(0),"^"),1,LA761,.1)) D
"RTN","LA7VIN5",232,0)
 . N LA760,LA7FLAG,LA7I,LA7Y,LA7X
"RTN","LA7VIN5",233,0)
 . S LA760=+$P(LA76241(0),"^"),LA7Y=^LAB(60,LA760,1,LA761,0),LA7FLAG=0
"RTN","LA7VIN5",234,0)
 . S LA7X=$P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)
"RTN","LA7VIN5",235,0)
 . I $P(LA7Y,"^",7)'=$P(LA7X,"!",7) S LA7FLAG=1
"RTN","LA7VIN5",236,0)
 . I 'LA7FLAG,$P(LA7Y,"^",2)=$P(LA7X,"!",2),$P(LA7Y,"^",3)=$P(LA7X,"!",3) Q
"RTN","LA7VIN5",237,0)
 . I 'LA7FLAG D
"RTN","LA7VIN5",238,0)
 . . N AGE,DOB,PNM,SEX
"RTN","LA7VIN5",239,0)
 . . N LRDPF,LRNG,LRNGS,LRNG2,LRNG3,LRNG4,LRNG5,LRTREA,LRWRD,LRX,LRY
"RTN","LA7VIN5",240,0)
 . . I $G(LRDFN) D DEM^LRX,KVAR^VADPT
"RTN","LA7VIN5",241,0)
 . . S LRNG=LA7Y D NORM^LRVER5
"RTN","LA7VIN5",242,0)
 . . S LA7Y=$TR(LRNG,$C(34),""),LA7X=$TR(LA7X,$C(34),"")
"RTN","LA7VIN5",243,0)
 . . I $P(LA7Y,"^",2)=$P(LA7X,"!",2),$P(LA7Y,"^",3)=$P(LA7X,"!",3) Q
"RTN","LA7VIN5",244,0)
 . . S LA7FLAG=1
"RTN","LA7VIN5",245,0)
 . I 'LA7FLAG Q
"RTN","LA7VIN5",246,0)
 . S LA7I=$O(^TMP("LA7 UNITS/NORMALS CHANGED",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN5",247,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA76304_"^"_LA76248_"^"_LA76249_"^"_LA7ORS_"^"_LA7TEST_"^"_$S(LA7TEST(0)'="":LA7TEST(0),1:LA7TEST(2,0))_"^"_$$P^LA7VHLU(.LA7SEG,9,LA7FS)_"^"_LA760
"RTN","LA7VIN5",248,0)
 . S ^TMP("LA7 UNITS/NORMALS CHANGED",$J,LA7I)=X
"RTN","LA7VIN5",249,0)
 ;
"RTN","LA7VIN5",250,0)
 ; If LEDI interface and order status change store which results
"RTN","LA7VIN5",251,0)
 ; associated with ordered test. Used to determine if order status
"RTN","LA7VIN5",252,0)
 ; changed bulletin needs to be generated.
"RTN","LA7VIN5",253,0)
 I LA7INTYP=10,LA7SAC?1(1"A",1"G") D
"RTN","LA7VIN5",254,0)
 . S LA7I=$G(LA7SAC(0)) Q:'LA7I
"RTN","LA7VIN5",255,0)
 . S ^TMP("LA7 ORDER STATUS",$J,LA7I,+LA76241(0))=""
"RTN","LA7VIN5",256,0)
 ;
"RTN","LA7VIN5",257,0)
 ; Set flag if Lab UI Auto Release interface to start auto release processing routine when ;**88
"RTN","LA7VIN5",258,0)
 ; finished - tasked by LA7VIN before shutdown
"RTN","LA7VIN5",259,0)
 I LA7INTYP=1,LA7AUTORELEASE,$G(LA7UID)'="" D
"RTN","LA7VIN5",260,0)
 . S LA76249("AR")=LA7AUTORELEASE
"RTN","LA7VIN5",261,0)
 . S LA7INTYP("LWL",LA7LWL)=""
"RTN","LA7VIN5",262,0)
 . S ^TMP("LA7 AR",$J,LA7LWL,1,"AUTOREL",LA7ISQN)=LA7UID_"^"_LA7624
"RTN","LA7VIN5",263,0)
 . S ^TMP("LA7 AR",$J,LA7LWL,1,"AUTOREL",LA7ISQN,LA76304)=LA7624_"^"_LA7AUTORELEASE
"RTN","LA7VIN5",264,0)
 . S ^TMP("LA7 AR",$J,LA7LWL,1,"AUTOREL-UID",LA7UID,LA7ISQN,LA76249)=$G(LA7AAT(1))
"RTN","LA7VIN5",265,0)
 ;
"RTN","LA7VIN5",266,0)
 Q
"RTN","LA7VIN5",267,0)
 ;
"RTN","LA7VIN5",268,0)
 ;
"RTN","LA7VIN5",269,0)
FID ; Store filler id
"RTN","LA7VIN5",270,0)
 ;
"RTN","LA7VIN5",271,0)
 ;ZEXCEPT: LA7LWL,LA76304,LA7FID,LA7ISQN
"RTN","LA7VIN5",272,0)
 N LA7STR,LA7X,I
"RTN","LA7VIN5",273,0)
 ;
"RTN","LA7VIN5",274,0)
 S LA7STR("^")="~U~",LA7X=LA7FID
"RTN","LA7VIN5",275,0)
 ;
"RTN","LA7VIN5",276,0)
 I LA7X["^" S LA7X=$$REPLACE^XLFSTR(LA7X,.LA7STR)
"RTN","LA7VIN5",277,0)
 ;
"RTN","LA7VIN5",278,0)
 F I=2:1:4 D
"RTN","LA7VIN5",279,0)
 . I LA7FID(I)="" Q
"RTN","LA7VIN5",280,0)
 . I LA7FID(I)["^" S $P(LA7X,"^",I)=$$REPLACE^XLFSTR(LA7FID(I),.LA7STR) Q
"RTN","LA7VIN5",281,0)
 . S $P(LA7X,"^",I)=LA7FID(I)
"RTN","LA7VIN5",282,0)
 ;
"RTN","LA7VIN5",283,0)
 S ^LAH(LA7LWL,1,LA7ISQN,.1,"OBR","FID",LA76304)=LA7X
"RTN","LA7VIN5",284,0)
 ;
"RTN","LA7VIN5",285,0)
 Q
"RTN","LA7VIN5",286,0)
 ;
"RTN","LA7VIN5",287,0)
 ;
"RTN","LA7VIN5",288,0)
ARSTATUS(LA7OBR49,LA7OBM,LA7624) ; Determine if LAB UI and auto release enabled and results are to be sent to auto release process.
"RTN","LA7VIN5",289,0)
 ;
"RTN","LA7VIN5",290,0)
 ; Call with LA7OBR49 = result handling code from OBR.49
"RTN","LA7VIN5",291,0)
 ;             LA7OBM = WKLD Suffix code (file #64.2) from OBX.17 - .9750 = auto verification, .9760 = tech verification.
"RTN","LA7VIN5",292,0)
 ;                      If "-.0000" then from OBR segment before OBX segment processed.
"RTN","LA7VIN5",293,0)
 ;             LA7624 = ien of entry in AUTO INSTRUMENT file #62.4
"RTN","LA7VIN5",294,0)
 ;
"RTN","LA7VIN5",295,0)
 N LA7X,STATUS
"RTN","LA7VIN5",296,0)
 ;
"RTN","LA7VIN5",297,0)
 S STATUS=0
"RTN","LA7VIN5",298,0)
 ;
"RTN","LA7VIN5",299,0)
 ; Check if auto release master switch parameter is ON (1).
"RTN","LA7VIN5",300,0)
 S LA7X=$$GET^XPAR("SYS^PKG","LA UI AUTO RELEASE MASTER",1,"Q")
"RTN","LA7VIN5",301,0)
 ;
"RTN","LA7VIN5",302,0)
 I LA7X=1,LA7OBR49="AR" S LA7X=LA7X+1
"RTN","LA7VIN5",303,0)
 ;
"RTN","LA7VIN5",304,0)
 ; Check OBX.17 (LA7OBM) field for WKLD suffix indicating auto or tech verification on middleware.
"RTN","LA7VIN5",305,0)
 ;  If "-.0000" then from OBR segment before OBX segment processed.
"RTN","LA7VIN5",306,0)
 I LA7X=2,$S(LA7OBM=".9750":1,LA7OBM=".9760":1,LA7OBM="-.0000":1,1:"") S LA7X=LA7X+1
"RTN","LA7VIN5",307,0)
 ;
"RTN","LA7VIN5",308,0)
 ; Check if file #62.4 entry is enabled for auto release based on auto or user verify middleware
"RTN","LA7VIN5",309,0)
 I LA7X=3,$P($G(^LAB(62.4,LA7624,9)),U,11) S STATUS=$P(^LAB(62.4,LA7624,9),U,11)
"RTN","LA7VIN5",310,0)
 ;
"RTN","LA7VIN5",311,0)
 Q STATUS
"RTN","LA7VIN5A")
0^14^B34608326
"RTN","LA7VIN5A",1,0)
LA7VIN5A ;DALOI/JMC - Process Incoming UI Msgs, continued ;04/19/16  16:27
"RTN","LA7VIN5A",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,67,72,66,74,88**;Sep 27, 1994;Build 10
"RTN","LA7VIN5A",3,0)
 ;
"RTN","LA7VIN5A",4,0)
 ; This routine is a continuation of LA7VIN5.
"RTN","LA7VIN5A",5,0)
 ; It performs processing of fields in OBX segments.
"RTN","LA7VIN5A",6,0)
 Q
"RTN","LA7VIN5A",7,0)
 ;
"RTN","LA7VIN5A",8,0)
 ;
"RTN","LA7VIN5A",9,0)
XFORM ; Transform the result based on fields 12,13,14,16,17 in the Chem Test
"RTN","LA7VIN5A",10,0)
 ; multiple in the Auto Instrument file (62.4), or set on the fly from PARAM 1
"RTN","LA7VIN5A",11,0)
 ;
"RTN","LA7VIN5A",12,0)
 N LA7I
"RTN","LA7VIN5A",13,0)
 S LA7XFORM=LA76241(2)
"RTN","LA7VIN5A",14,0)
 ;
"RTN","LA7VIN5A",15,0)
 ; get PARAM 1 overrides
"RTN","LA7VIN5A",16,0)
 I $D(LA7XFORM(1)),LA7XFORM(1)?1.N S $P(LA7XFORM,"^")=LA7XFORM(1)
"RTN","LA7VIN5A",17,0)
 F LA7I=2,3,5,6 I $D(LA7XFORM(LA7I)) S $P(LA7XFORM,"^",LA7I)=LA7XFORM(LA7I)
"RTN","LA7VIN5A",18,0)
 ; set up defaults if field was not answered
"RTN","LA7VIN5A",19,0)
 ; accept results,yes
"RTN","LA7VIN5A",20,0)
 I $P(LA7XFORM,"^",3)="" S $P(LA7XFORM,"^",3)=1
"RTN","LA7VIN5A",21,0)
 ; strip spaces,no
"RTN","LA7VIN5A",22,0)
 I $P(LA7XFORM,"^",6)="" S $P(LA7XFORM,"^",6)=0
"RTN","LA7VIN5A",23,0)
 ; now transform
"RTN","LA7VIN5A",24,0)
 ;
"RTN","LA7VIN5A",25,0)
 ; Don't accept results
"RTN","LA7VIN5A",26,0)
 I '$P(LA7XFORM,"^",3) S LA7VAL="" Q
"RTN","LA7VIN5A",27,0)
 ;
"RTN","LA7VIN5A",28,0)
 ; Only accept "FINAL" type results
"RTN","LA7VIN5A",29,0)
 I $P(LA7XFORM,"^",3)=2,"CFUX"'[LA7ORS S LA7VAL="" Q
"RTN","LA7VIN5A",30,0)
 ;
"RTN","LA7VIN5A",31,0)
 ; Accept ordered tests only
"RTN","LA7VIN5A",32,0)
 ; If LEDI interface (10) and message indicates a reflex ("G") or add-on test ("A")
"RTN","LA7VIN5A",33,0)
 ;  then process anyway in case it has not been added to accession.
"RTN","LA7VIN5A",34,0)
 I $P(LA7XFORM,"^",5) D
"RTN","LA7VIN5A",35,0)
 . I LA7INTYP=10,LA7SAC?1(1"A",1"G") Q
"RTN","LA7VIN5A",36,0)
 . S LA7LIMIT=1
"RTN","LA7VIN5A",37,0)
 ; Check if Lab UI and auto release then always set ordered tests only.
"RTN","LA7VIN5A",38,0)
 I LA7INTYP=1,LA7AUTORELEASE S LA7LIMIT=1
"RTN","LA7VIN5A",39,0)
 ;
"RTN","LA7VIN5A",40,0)
 ; Decimal places if number of places defined
"RTN","LA7VIN5A",41,0)
 I $P(LA7XFORM,"^")?1.N D JUSTDEC
"RTN","LA7VIN5A",42,0)
 ;
"RTN","LA7VIN5A",43,0)
 ; Strip spaces
"RTN","LA7VIN5A",44,0)
 I $P(LA7XFORM,"^",6) S LA7VAL=$TR(LA7VAL," ","")
"RTN","LA7VIN5A",45,0)
 ;
"RTN","LA7VIN5A",46,0)
 ; Make result a comment
"RTN","LA7VIN5A",47,0)
 ; Set value to null after making into remark, don't store twice.
"RTN","LA7VIN5A",48,0)
 I $P(LA7XFORM,"^",2) D
"RTN","LA7VIN5A",49,0)
 . N LA7Y
"RTN","LA7VIN5A",50,0)
 . ; Store comment in ^LAH global
"RTN","LA7VIN5A",51,0)
 . S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7VIN5A",52,0)
 . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7VAL,LA7Y)
"RTN","LA7VIN5A",53,0)
 . S LA7VAL=""
"RTN","LA7VIN5A",54,0)
 Q
"RTN","LA7VIN5A",55,0)
 ;
"RTN","LA7VIN5A",56,0)
 ;
"RTN","LA7VIN5A",57,0)
CHKDIE ; Check if value to be stored passes input transform of field in DD
"RTN","LA7VIN5A",58,0)
 N LA7ERR,LA7Y
"RTN","LA7VIN5A",59,0)
 ;
"RTN","LA7VIN5A",60,0)
 ; If result is on a LEDI interface (type=10) then don't check result against FileMan input transform.
"RTN","LA7VIN5A",61,0)
 ; VistA sends "canc" as test result when test is cancelled.
"RTN","LA7VIN5A",62,0)
 ; DoD sends "PL Canceled" --> change to "canc" for VistA storage.
"RTN","LA7VIN5A",63,0)
 I LA7INTYP=10 D  Q
"RTN","LA7VIN5A",64,0)
 . I LA7VAL="PL Cancelled" S LA7VAL="canc" Q
"RTN","LA7VIN5A",65,0)
 . I LA7VAL="PL Canceled" S LA7VAL="canc" Q
"RTN","LA7VIN5A",66,0)
 . I LA7VAL="PLCanceled" S LA7VAL="canc" Q
"RTN","LA7VIN5A",67,0)
 ;
"RTN","LA7VIN5A",68,0)
 ; If canc or comment value received then pass as these are valid results on VistA.
"RTN","LA7VIN5A",69,0)
 I LA7VAL="canc"!(LA7VAL="comment") Q
"RTN","LA7VIN5A",70,0)
 ;
"RTN","LA7VIN5A",71,0)
 ; If value fails data checker then log error and suppress result.
"RTN","LA7VIN5A",72,0)
 D CHK^DIE(LA7SUBFL,LA76304,"H",LA7VAL,.LA7Y,"LA7ERR")
"RTN","LA7VIN5A",73,0)
 I LA7Y="^" D
"RTN","LA7VIN5A",74,0)
 . N LA7X
"RTN","LA7VIN5A",75,0)
 . S LA7X=$G(LA7ERR("DIERR",1,"TEXT",1))
"RTN","LA7VIN5A",76,0)
 . S LA7ERR=37,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN5A",77,0)
 . S LA7VAL=""
"RTN","LA7VIN5A",78,0)
 Q
"RTN","LA7VIN5A",79,0)
 ;
"RTN","LA7VIN5A",80,0)
 ;
"RTN","LA7VIN5A",81,0)
JUSTDEC ; Justify to number of places specified
"RTN","LA7VIN5A",82,0)
 ;
"RTN","LA7VIN5A",83,0)
 N LA7DDTYP,LA7FMT,LA7I,LA7PRFIX,LA7X
"RTN","LA7VIN5A",84,0)
 ;
"RTN","LA7VIN5A",85,0)
 ; If LEDI interface (type=10) then skip decimal adjustment
"RTN","LA7VIN5A",86,0)
 I LA7INTYP=10 Q
"RTN","LA7VIN5A",87,0)
 ;
"RTN","LA7VIN5A",88,0)
 ; Get data name field type from DD
"RTN","LA7VIN5A",89,0)
 ; Only justify if Vista field is numeric or free text.
"RTN","LA7VIN5A",90,0)
 S LA7DDTYP=$$GET1^DID(LA7SUBFL,LA76304,"","TYPE")
"RTN","LA7VIN5A",91,0)
 I "NUMERIC^FREE TEXT"'[LA7DDTYP D  Q
"RTN","LA7VIN5A",92,0)
 . N LA7FLDNM
"RTN","LA7VIN5A",93,0)
 . S LA7FLDNM=$$GET1^DID(63.04,LA76304,"","LABEL")
"RTN","LA7VIN5A",94,0)
 . S LA7ERR=38,LA7AERR=$$CREATE^LA7LOG(LA7ERR,1)
"RTN","LA7VIN5A",95,0)
 ;
"RTN","LA7VIN5A",96,0)
 S LA7X=LA7VAL,(LA7FMT,LA7PRFIX)=""
"RTN","LA7VIN5A",97,0)
 ;
"RTN","LA7VIN5A",98,0)
 ; If comma formatted, strip comma and set flag to add back in.
"RTN","LA7VIN5A",99,0)
 S LA7X=$TR(LA7X,",","")
"RTN","LA7VIN5A",100,0)
 I LA7X'=LA7VAL S LA7FMT="P"
"RTN","LA7VIN5A",101,0)
 ;
"RTN","LA7VIN5A",102,0)
 ; If "<>=" formatted, strip and save to add back in.
"RTN","LA7VIN5A",103,0)
 F LA7I=1:1:$L(LA7X) Q:$E(LA7X,LA7I)'?1(1"<",1">",1"=")
"RTN","LA7VIN5A",104,0)
 I LA7I>1 D
"RTN","LA7VIN5A",105,0)
 . S LA7PRFIX=$E(LA7X,1,LA7I-1)
"RTN","LA7VIN5A",106,0)
 . S LA7X=$E(LA7X,LA7I,$L(LA7X))
"RTN","LA7VIN5A",107,0)
 ;
"RTN","LA7VIN5A",108,0)
 ; Format if starts with number or decimal point, skip other results.
"RTN","LA7VIN5A",109,0)
 I LA7X?1(1.N,.N1"."1.N) D
"RTN","LA7VIN5A",110,0)
 . S LA7X=$FN(LA7X,LA7FMT,+LA7XFORM)
"RTN","LA7VIN5A",111,0)
 . S LA7VAL=LA7PRFIX_LA7X
"RTN","LA7VIN5A",112,0)
 Q
"RTN","LA7VIN5A",113,0)
 ;
"RTN","LA7VIN5A",114,0)
 ;
"RTN","LA7VIN5A",115,0)
PRDID(LA7PRDID,LA7SFAC,LA7CS) ; Process/Store Producer's ID
"RTN","LA7VIN5A",116,0)
 ; Store where test was performed.
"RTN","LA7VIN5A",117,0)
 ; Call with LA7PRDID = Producer's ID field
"RTN","LA7VIN5A",118,0)
 ;            LA7SFAC = sending facility
"RTN","LA7VIN5A",119,0)
 ;              LA7CS = component encoding character
"RTN","LA7VIN5A",120,0)
 ;
"RTN","LA7VIN5A",121,0)
 ; Remove units/reference ranges when Lab UI interface so file #60 settings always used
"RTN","LA7VIN5A",122,0)
 I $G(LA7INTYP)=1 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)="" Q
"RTN","LA7VIN5A",123,0)
 ;
"RTN","LA7VIN5A",124,0)
 N LA74,LA7I,LA7X,LA7Y
"RTN","LA7VIN5A",125,0)
 ;
"RTN","LA7VIN5A",126,0)
 ; Store producer's id in LAH global with results.
"RTN","LA7VIN5A",127,0)
 ; LA7PRODID set with pointer to file #4 to be used by segments (NTE) that follow OBX's.
"RTN","LA7VIN5A",128,0)
 S (LA74,LA7PRODID)=$$RESFID^LA7VHLU2(LA7PRDID,LA7SFAC,LA7CS)
"RTN","LA7VIN5A",129,0)
 I LA74 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",9)=LA74 Q
"RTN","LA7VIN5A",130,0)
 ;
"RTN","LA7VIN5A",131,0)
 ; Don't store producer's id as comment.
"RTN","LA7VIN5A",132,0)
 I '$P(LA76241(2),"^",9) Q
"RTN","LA7VIN5A",133,0)
 ;
"RTN","LA7VIN5A",134,0)
 ; If unable to identify producer in file #4 then store as comment if field STORE PRODUCER'S ID (#20) enabled.
"RTN","LA7VIN5A",135,0)
 S LA7X=$P(LA7PRDID,LA7CS,2)
"RTN","LA7VIN5A",136,0)
 I LA7X="" Q
"RTN","LA7VIN5A",137,0)
 S LA7Y=$P(LA7RMK(0,+LA76241(0)),"^",2)
"RTN","LA7VIN5A",138,0)
 S LA7X=$S(LA7Y="":"P",1:"p")_"erformed by "_LA7X
"RTN","LA7VIN5A",139,0)
 D RMKSET^LASET(LA7LWL,LA7ISQN,LA7X,LA7Y)
"RTN","LA7VIN5A",140,0)
 ;
"RTN","LA7VIN5A",141,0)
 Q
"RTN","LA7VIN5A",142,0)
 ;
"RTN","LA7VIN5A",143,0)
 ;
"RTN","LA7VIN5A",144,0)
REFRNG(LA7X) ; Process/Store References Range.
"RTN","LA7VIN5A",145,0)
 ; Call with LA7X = reference range to store.
"RTN","LA7VIN5A",146,0)
 ;
"RTN","LA7VIN5A",147,0)
 N LA7Y,X,Y
"RTN","LA7VIN5A",148,0)
 ;
"RTN","LA7VIN5A",149,0)
 ; Check if Lab UI and not auto release then quit otherwise store ranges.
"RTN","LA7VIN5A",150,0)
 I LA7INTYP=1,'LA7AUTORELEASE Q
"RTN","LA7VIN5A",151,0)
 ;
"RTN","LA7VIN5A",152,0)
 ; Check if site does not want to store reference ranges on POC test.
"RTN","LA7VIN5A",153,0)
 I LA7INTYP>19,LA7INTYP<30,+$P(LA76241(2),"^",10)=0 Q
"RTN","LA7VIN5A",154,0)
 ;
"RTN","LA7VIN5A",155,0)
 ; Remove leading and trailing quotes from reference range.
"RTN","LA7VIN5A",156,0)
 S LA7X=$$TRIM^XLFSTR($G(LA7X),"RL","""")
"RTN","LA7VIN5A",157,0)
 I LA7X="" Q
"RTN","LA7VIN5A",158,0)
 ;
"RTN","LA7VIN5A",159,0)
 S X=$P($G(^LAH(LA7LWL,1,LA7ISQN,LA76304)),"^",5)
"RTN","LA7VIN5A",160,0)
 ;
"RTN","LA7VIN5A",161,0)
 ; >lower limit (no upper limit e.g. >10) - store as low value
"RTN","LA7VIN5A",162,0)
 I LA7X?1">".N.1".".N S $P(X,"!",2)=$TR(LA7X,">",""),LA7X=""
"RTN","LA7VIN5A",163,0)
 ;
"RTN","LA7VIN5A",164,0)
 ; <upper limit (no lower limit e.g. <15) - store as high value
"RTN","LA7VIN5A",165,0)
 I LA7X?1"<".N.1".".N S $P(X,"!",3)=$TR(LA7X,"<",""),LA7X=""
"RTN","LA7VIN5A",166,0)
 ;
"RTN","LA7VIN5A",167,0)
 ; Alphabetic reference with hyphen
"RTN","LA7VIN5A",168,0)
 I LA7X?1.A1"-"1.A S $P(X,"!",2)=$C(34)_LA7X_$C(34),LA7X=""
"RTN","LA7VIN5A",169,0)
 ;
"RTN","LA7VIN5A",170,0)
 ; Lower limit value
"RTN","LA7VIN5A",171,0)
 S Y=$P(LA7X,"-")
"RTN","LA7VIN5A",172,0)
 I Y'="" D
"RTN","LA7VIN5A",173,0)
 . I Y?.N.1".".N S $P(X,"!",2)=Y
"RTN","LA7VIN5A",174,0)
 . E  S $P(X,"!",2)=$C(34)_$$UNESC^LA7VHLU3(Y,LA7FS_LA7ECH)_$C(34)
"RTN","LA7VIN5A",175,0)
 ;
"RTN","LA7VIN5A",176,0)
 ; Upper limit value
"RTN","LA7VIN5A",177,0)
 S Y=$P(LA7X,"-",2)
"RTN","LA7VIN5A",178,0)
 I Y'="" D
"RTN","LA7VIN5A",179,0)
 . I Y?.N.1".".N S $P(X,"!",3)=Y
"RTN","LA7VIN5A",180,0)
 . E  S $P(X,"!",3)=$C(34)_$$UNESC^LA7VHLU3(Y,LA7FS_LA7ECH)_$C(34)
"RTN","LA7VIN5A",181,0)
 ;
"RTN","LA7VIN5A",182,0)
 ; Store reference range in LAH global with results.
"RTN","LA7VIN5A",183,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",5)=X
"RTN","LA7VIN5A",184,0)
 ;
"RTN","LA7VIN5A",185,0)
 Q
"RTN","LA7VIN5A",186,0)
 ;
"RTN","LA7VIN5A",187,0)
 ;
"RTN","LA7VIN5A",188,0)
ABFLAG(LA7X) ; Process/Store Abnormal Flags.
"RTN","LA7VIN5A",189,0)
 ; Call with LA7X = abnormal flags to store.
"RTN","LA7VIN5A",190,0)
 ; Converts flag to interpretation based on HL7 Table 0078.
"RTN","LA7VIN5A",191,0)
 ; If no match store code instead of interpretation
"RTN","LA7VIN5A",192,0)
 ;
"RTN","LA7VIN5A",193,0)
 N I,LA7I,LA7Y,X
"RTN","LA7VIN5A",194,0)
 ;
"RTN","LA7VIN5A",195,0)
 ; Check if Lab UI and not auto release then quit otherwise store abnormal flags.
"RTN","LA7VIN5A",196,0)
 I LA7INTYP=1,'LA7AUTORELEASE Q
"RTN","LA7VIN5A",197,0)
 ;
"RTN","LA7VIN5A",198,0)
 ; Store abnormal flags in LAH global with results.
"RTN","LA7VIN5A",199,0)
 ; Currently only storing high/low and critical flags
"RTN","LA7VIN5A",200,0)
 S LA7Y=$S(LA7X="L":"L",LA7X="H":"H",LA7X="LL":"L*",LA7X="HH":"H*",1:"")
"RTN","LA7VIN5A",201,0)
 S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",2)=LA7Y
"RTN","LA7VIN5A",202,0)
 ;
"RTN","LA7VIN5A",203,0)
 ; Critical or designated abnormal tests generate bulletin/alert on LEDI (type=10) interfaces.
"RTN","LA7VIN5A",204,0)
 I LA7INTYP=10,LA7Y'="" D
"RTN","LA7VIN5A",205,0)
 . I $E(LA7Y,2)'="*",'$P(LA76241(2),"^",11) Q
"RTN","LA7VIN5A",206,0)
 . S LA7I=$O(^TMP("LA7 ABNORMAL RESULTS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN5A",207,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA76304_"^"_LA76248_"^"_LA76249_"^"_LA7ORS_"^"_LA7TEST_"^"_$S(LA7TEST(0)'="":LA7TEST(0),1:LA7TEST(2,0))_"^"_$$P^LA7VHLU(.LA7SEG,9,LA7FS)
"RTN","LA7VIN5A",208,0)
 . S ^TMP("LA7 ABNORMAL RESULTS",$J,LA7I)=X
"RTN","LA7VIN5A",209,0)
 ;
"RTN","LA7VIN5A",210,0)
 ; If LEDI/POC interface and abnormal flag is not handled by VistA above then store as comment.
"RTN","LA7VIN5A",211,0)
 I LA7INTYP>9,LA7INTYP<30,LA7Y="",LA7X'="",LA7X'="N" D
"RTN","LA7VIN5A",212,0)
 . S X=" L^ H^LL^HH^ <^ >^ N^ A^AA^ U^ D^ B^ W^ S^ R^ I^MS^VS"
"RTN","LA7VIN5A",213,0)
 . S I=$F(X,LA7X)\3
"RTN","LA7VIN5A",214,0)
 . S LA7Y="normalcy status - "_$P($T(ABFLAGS+I^LA7VHLU1),";;",2)
"RTN","LA7VIN5A",215,0)
 . D RMKSET^LASET(LA7LWL,LA7ISQN,LA7Y,$P(LA7RMK(0,+LA76241(0)),"^",2))
"RTN","LA7VIN5A",216,0)
 ;
"RTN","LA7VIN5A",217,0)
 Q
"RTN","LA7VIN5A",218,0)
 ;
"RTN","LA7VIN5A",219,0)
 ;
"RTN","LA7VIN5A",220,0)
EII ; Store equipment instance identifier in LAH global with results.
"RTN","LA7VIN5A",221,0)
 ;
"RTN","LA7VIN5A",222,0)
 N I,LA7X,X
"RTN","LA7VIN5A",223,0)
 ;
"RTN","LA7VIN5A",224,0)
 S LA7X=""
"RTN","LA7VIN5A",225,0)
 F I=1:1:4 D
"RTN","LA7VIN5A",226,0)
 . S X=$P(LA7EII,LA7CS,I)
"RTN","LA7VIN5A",227,0)
 . I X="" Q
"RTN","LA7VIN5A",228,0)
 . S $P(LA7X,"!",I)=$TR(X,"!","~")
"RTN","LA7VIN5A",229,0)
 I LA7X'="" S $P(^LAH(LA7LWL,1,LA7ISQN,LA76304),"^",11)=LA7X
"RTN","LA7VIN5A",230,0)
 Q
"RTN","LA7VORC")
0^5^B22779822
"RTN","LA7VORC",1,0)
LA7VORC ;DALOI/JMC - LAB ORC Segment message builder ;08/20/15  17:26
"RTN","LA7VORC",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,68,88**;Sep 27, 1994;Build 10
"RTN","LA7VORC",3,0)
 ;
"RTN","LA7VORC",4,0)
 Q
"RTN","LA7VORC",5,0)
 ;
"RTN","LA7VORC",6,0)
ORC1(LA7TYP) ; Build ORC-1 sequence - Order control
"RTN","LA7VORC",7,0)
 ; Call with LA7TYP = order type from table 0119
"RTN","LA7VORC",8,0)
 ;
"RTN","LA7VORC",9,0)
 Q LA7TYP
"RTN","LA7VORC",10,0)
 ;
"RTN","LA7VORC",11,0)
 ;
"RTN","LA7VORC",12,0)
ORC2(LA7VAL,LA7FS,LA7ECH) ; Build ORC-2 sequence - Placer order number
"RTN","LA7VORC",13,0)
 ; Call with  LA7VAL = accession number/UID
"RTN","LA7VORC",14,0)
 ;            LA7VAL("NMSP") = application namespace (optional)
"RTN","LA7VORC",15,0)
 ;            LA7VAL("SITE") = placer facility
"RTN","LA7VORC",16,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",17,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",18,0)
 ;
"RTN","LA7VORC",19,0)
 N LA7X,LA7Y
"RTN","LA7VORC",20,0)
 ;
"RTN","LA7VORC",21,0)
 S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VORC",22,0)
 I $G(LA7VAL("NMSP"))'="" S $P(LA7Y,$E(LA7ECH),2)=LA7VAL("NMSP")
"RTN","LA7VORC",23,0)
 I $G(LA7VAL("SITE"))'="" D
"RTN","LA7VORC",24,0)
 . S LA7X=$$FACDNS^LA7VHLU2(LA7VAL("SITE"),LA7FS,LA7ECH,1)
"RTN","LA7VORC",25,0)
 . S $P(LA7Y,$E(LA7ECH),3)=$P(LA7X,$E(LA7ECH),2)
"RTN","LA7VORC",26,0)
 . S $P(LA7Y,$E(LA7ECH),4)=$P(LA7X,$E(LA7ECH),3)
"RTN","LA7VORC",27,0)
 Q LA7Y
"RTN","LA7VORC",28,0)
 ;
"RTN","LA7VORC",29,0)
 ;
"RTN","LA7VORC",30,0)
ORC3(LA7VAL,LA7FS,LA7ECH) ; Build ORC-3 sequence - Filler order number
"RTN","LA7VORC",31,0)
 ; Call with  LA7VAL = accession number/UID
"RTN","LA7VORC",32,0)
 ;            LA7VAL("NMSP") = application namespace (optional)
"RTN","LA7VORC",33,0)
 ;            LA7VAL("SITE") = placer facility
"RTN","LA7VORC",34,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",35,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",36,0)
 ;
"RTN","LA7VORC",37,0)
 N LA7X,LA7Y
"RTN","LA7VORC",38,0)
 ;
"RTN","LA7VORC",39,0)
 S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VORC",40,0)
 I $G(LA7VAL("NMSP"))'="" S $P(LA7Y,$E(LA7ECH),2)=LA7VAL("NMSP")
"RTN","LA7VORC",41,0)
 I $G(LA7VAL("SITE"))'="" D
"RTN","LA7VORC",42,0)
 . S LA7X=$$FACDNS^LA7VHLU2(LA7VAL("SITE"),LA7FS,LA7ECH,1)
"RTN","LA7VORC",43,0)
 . S $P(LA7Y,$E(LA7ECH),3)=$P(LA7X,$E(LA7ECH),2)
"RTN","LA7VORC",44,0)
 . S $P(LA7Y,$E(LA7ECH),4)=$P(LA7X,$E(LA7ECH),3)
"RTN","LA7VORC",45,0)
 ;
"RTN","LA7VORC",46,0)
 Q LA7Y
"RTN","LA7VORC",47,0)
 ;
"RTN","LA7VORC",48,0)
 ;
"RTN","LA7VORC",49,0)
ORC4(LA7VAL,LA7FS,LA7ECH) ; Build ORC-4 sequence - Placer group number
"RTN","LA7VORC",50,0)
 ; Call with  LA7VAL = LEDI - shipping manifest number
"RTN","LA7VORC",51,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",52,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",53,0)
 ; Returns ORD-4 sequence
"RTN","LA7VORC",54,0)
 ;
"RTN","LA7VORC",55,0)
 N LA7Y
"RTN","LA7VORC",56,0)
 ;
"RTN","LA7VORC",57,0)
 S $P(LA7Y,$E(LA7ECH),1)=$$CHKDATA^LA7VHLU3(LA7VAL,LA7FS_LA7ECH)
"RTN","LA7VORC",58,0)
 ;
"RTN","LA7VORC",59,0)
 Q LA7Y
"RTN","LA7VORC",60,0)
 ;
"RTN","LA7VORC",61,0)
 ;
"RTN","LA7VORC",62,0)
ORC5(LA7VAL,LA7FS,LA7ECH) ; Build ORC-5 sequence - Order status
"RTN","LA7VORC",63,0)
 ; Call with  LA7VAL = order status
"RTN","LA7VORC",64,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",65,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",66,0)
 ; Returns ORC-5 sequence
"RTN","LA7VORC",67,0)
 ;
"RTN","LA7VORC",68,0)
 N LA7Y
"RTN","LA7VORC",69,0)
 ;
"RTN","LA7VORC",70,0)
 I LA7VAL="CM" S LA7Y="CM"
"RTN","LA7VORC",71,0)
 ;
"RTN","LA7VORC",72,0)
 Q LA7Y
"RTN","LA7VORC",73,0)
 ;
"RTN","LA7VORC",74,0)
 ;
"RTN","LA7VORC",75,0)
ORC7(LA7DUR,LA7DURU,LA76205,LA7FS,LA7ECH) ; Build ORC-7 sequence - Quantity/Timing
"RTN","LA7VORC",76,0)
 ; Call with  LA7DUR = collection duration
"RTN","LA7VORC",77,0)
 ;           LA7DURU = duration units (pointer to #64.061)
"RTN","LA7VORC",78,0)
 ;           LA76205 = test urgency
"RTN","LA7VORC",79,0)
 ;             LA7FS = HL field separator
"RTN","LA7VORC",80,0)
 ;            LA7ECH = HL encoding characters
"RTN","LA7VORC",81,0)
 ;
"RTN","LA7VORC",82,0)
 ; Returns ORC-7 sequence
"RTN","LA7VORC",83,0)
 ;
"RTN","LA7VORC",84,0)
 N LA7X,LA7Y
"RTN","LA7VORC",85,0)
 S LA7Y=""
"RTN","LA7VORC",86,0)
 ;
"RTN","LA7VORC",87,0)
 I LA7DUR'="",LA7DURU D
"RTN","LA7VORC",88,0)
 . S LA7X=$$GET1^DIQ(64.061,LA7DURU_",",2) ; duration units
"RTN","LA7VORC",89,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)=$$CHKDATA^LA7VHLU3(LA7X_LA7DUR,LA7FS_LA7ECH)
"RTN","LA7VORC",90,0)
 ;
"RTN","LA7VORC",91,0)
 I LA76205 D
"RTN","LA7VORC",92,0)
 . S LA7X=$$GET1^DIQ(64.061,+$$GET1^DIQ(62.05,LA76205_",",4,"I")_",",2) ; Urgency
"RTN","LA7VORC",93,0)
 . S $P(LA7Y,$E(LA7ECH,1),6)=$$CHKDATA^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VORC",94,0)
 ;
"RTN","LA7VORC",95,0)
 Q LA7Y
"RTN","LA7VORC",96,0)
 ;
"RTN","LA7VORC",97,0)
 ;
"RTN","LA7VORC",98,0)
ORC9(LA7DT) ; Build ORC-9 sequence - date/time of transaction
"RTN","LA7VORC",99,0)
 ; Call with LA7DT = order date/time
"RTN","LA7VORC",100,0)
 ;
"RTN","LA7VORC",101,0)
 ; Returns ORC-9 sequence
"RTN","LA7VORC",102,0)
 ;
"RTN","LA7VORC",103,0)
 S LA7DT=$$CHKDT^LA7VHLU1(LA7DT)
"RTN","LA7VORC",104,0)
 Q $$FMTHL7^XLFDT(LA7DT)
"RTN","LA7VORC",105,0)
 ;
"RTN","LA7VORC",106,0)
 ;
"RTN","LA7VORC",107,0)
ORC12(LA7DUZ,LA7DIV,LA7FS,LA7ECH,LA7IDTYP) ; Build ORC-12 sequence - Ordering provider
"RTN","LA7VORC",108,0)
 ; Call with   LA7DUZ = DUZ of ordering provider
"RTN","LA7VORC",109,0)
 ;             LA7DIV = Facility (division) of provider
"RTN","LA7VORC",110,0)
 ;              LA7FS = HL field separator
"RTN","LA7VORC",111,0)
 ;             LA7ECH = HL encoding characters
"RTN","LA7VORC",112,0)
 ;           LA7IDTYP = id type to return (0:DUZ 1:VPID 2:NPI)
"RTN","LA7VORC",113,0)
 ;
"RTN","LA7VORC",114,0)
 ; Returns ORC-12 sequence
"RTN","LA7VORC",115,0)
 ; Also used to build OBR-16 sequence
"RTN","LA7VORC",116,0)
 ;
"RTN","LA7VORC",117,0)
 S LA7IDTYP=+$G(LA7IDTYP)
"RTN","LA7VORC",118,0)
 Q $$XCN^LA7VHLU9(LA7DUZ,LA7DIV,LA7FS,LA7ECH,0,LA7IDTYP)
"RTN","LA7VORC",119,0)
 ;
"RTN","LA7VORC",120,0)
 ;
"RTN","LA7VORC",121,0)
ORC13(LA7J,LA7FS,LA7ECH) ; Build ORC-13 sequence - Enterer's location
"RTN","LA7VORC",122,0)
 ; Call with  LA7J = variable pointer to file #4 or #44
"RTN","LA7VORC",123,0)
 ;           LA7FS = HL field separator
"RTN","LA7VORC",124,0)
 ;          LA7ECH = HL encoding characters
"RTN","LA7VORC",125,0)
 ;
"RTN","LA7VORC",126,0)
 ; Returns ORC-13 sequence
"RTN","LA7VORC",127,0)
 ;
"RTN","LA7VORC",128,0)
 N LA74,LA744,LA7X,LA7Y,LA7Z
"RTN","LA7VORC",129,0)
 ;
"RTN","LA7VORC",130,0)
 S (LA74,LA744,LA7Y)=""
"RTN","LA7VORC",131,0)
 ;
"RTN","LA7VORC",132,0)
 ; Pointer to file #44
"RTN","LA7VORC",133,0)
 I $P(LA7J,";",2)="SC(" D
"RTN","LA7VORC",134,0)
 . S LA744=$P(LA7J,";")
"RTN","LA7VORC",135,0)
 . S LA74=$$GET1^DIQ(44,LA744_",",3,"I")
"RTN","LA7VORC",136,0)
 ;
"RTN","LA7VORC",137,0)
 ; Pointer to file #4
"RTN","LA7VORC",138,0)
 I $P(LA7J,";",2)="DIC(4," S LA74=$P(LA7J,";")
"RTN","LA7VORC",139,0)
 ;
"RTN","LA7VORC",140,0)
 ; Build 1st component (point of care), 6th component (person location type)
"RTN","LA7VORC",141,0)
 I LA744 D
"RTN","LA7VORC",142,0)
 . S LA7Z=$$GET1^DIQ(44,LA744_",",.01)
"RTN","LA7VORC",143,0)
 . S $P(LA7Y,$E(LA7ECH,1),1)=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VORC",144,0)
 . S LA7Z=$$GET1^DIQ(44,LA744_",",2,"I")
"RTN","LA7VORC",145,0)
 . S $P(LA7Y,$E(LA7ECH,1),6)=$S(LA7Z="C":"C",LA7Z="W":"N",1:"D")
"RTN","LA7VORC",146,0)
 ;
"RTN","LA7VORC",147,0)
 ; Build 4th component (facility), demote delimiter from component to sub-component
"RTN","LA7VORC",148,0)
 I LA74 D
"RTN","LA7VORC",149,0)
 . S LA7Z=$$FACDNS^LA7VHLU2(LA74,LA7FS,LA7ECH,2)
"RTN","LA7VORC",150,0)
 . I $P(LA7Z,$E(LA7ECH,4),2)'="" S $P(LA7Y,$E(LA7ECH,1),4)=LA7Z Q
"RTN","LA7VORC",151,0)
 . S LA7Z=$$INST^LA7VHLU4(LA74,LA7FS,LA7ECH)
"RTN","LA7VORC",152,0)
 . I $P(LA7Z,$E(LA7ECH,1),3)="99VA4" S $P(LA7Z,$E(LA7ECH,1),3)="L"
"RTN","LA7VORC",153,0)
 . S $P(LA7Y,$E(LA7ECH,1),4)=$TR(LA7Z,$E(LA7ECH,1),$E(LA7ECH,4))
"RTN","LA7VORC",154,0)
 ;
"RTN","LA7VORC",155,0)
 Q LA7Y
"RTN","LA7VORC",156,0)
 ;
"RTN","LA7VORC",157,0)
 ;
"RTN","LA7VORC",158,0)
ORC14(LA7200,LA7DT,LA7FS,LA7ECH) ; Build ORC-14 sequence - Order Callback Phone Number ;**88
"RTN","LA7VORC",159,0)
 ; Call with LA7200 = ien of provider in file #200
"RTN","LA7VORC",160,0)
 ;            LA7DT = "as of" date in FileMan format
"RTN","LA7VORC",161,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",162,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",163,0)
 ;
"RTN","LA7VORC",164,0)
 ; Returns ORC-14 sequence
"RTN","LA7VORC",165,0)
 ;
"RTN","LA7VORC",166,0)
 N LA7FLDSEQ,LA7ERR,LA7X,LA7Y,X,Y
"RTN","LA7VORC",167,0)
 ;
"RTN","LA7VORC",168,0)
 D GETLST^XPAR(.LA7X,"USR^SYS^PKG","LA UI PROVIDER CONTACT INFO","I",.LA7ERR)
"RTN","LA7VORC",169,0)
 S LA7Y=0,LA7FLDSEQ=""
"RTN","LA7VORC",170,0)
 F  S LA7Y=$O(LA7X(LA7Y)) Q:LA7Y<1  S LA7FLDSEQ=LA7FLDSEQ_".13"_LA7X(LA7Y)_";"
"RTN","LA7VORC",171,0)
 ;
"RTN","LA7VORC",172,0)
 Q $$XTN^LA7VHLU9(200,LA7200,LA7FLDSEQ,2,LA7DT,LA7FS,LA7ECH)
"RTN","LA7VORC",173,0)
 ;
"RTN","LA7VORC",174,0)
 ;
"RTN","LA7VORC",175,0)
ORC17(LA74,LA7FS,LA7ECH) ; Build ORC-17 sequence - Entering organization
"RTN","LA7VORC",176,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",177,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VORC",178,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",179,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",180,0)
 ;
"RTN","LA7VORC",181,0)
 ; Returns ORC-17 sequence (ID^text^99VA4)
"RTN","LA7VORC",182,0)
 ;
"RTN","LA7VORC",183,0)
 Q $$INST^LA7VHLU4(LA74,LA7FS,LA7ECH)
"RTN","LA7VORC",184,0)
 ;
"RTN","LA7VORC",185,0)
 ;
"RTN","LA7VORC",186,0)
ORC21(LA74,LA7FS,LA7ECH) ; Build ORC-21 sequence - Ordering facility name
"RTN","LA7VORC",187,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",188,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",189,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",190,0)
 ;
"RTN","LA7VORC",191,0)
 ; Returns ORC-21 sequence
"RTN","LA7VORC",192,0)
 ;
"RTN","LA7VORC",193,0)
 Q $$XON^LA7VHLU4(4,LA74,0,LA7FS,LA7ECH)
"RTN","LA7VORC",194,0)
 ;
"RTN","LA7VORC",195,0)
 ;
"RTN","LA7VORC",196,0)
ORC22(LA74,LA7DT,LA7FS,LA7ECH) ; Build ORC-22 sequence - Ordering facility address
"RTN","LA7VORC",197,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",198,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VORC",199,0)
 ;            LA7DT = "as of" date in FileMan format
"RTN","LA7VORC",200,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",201,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",202,0)
 ;
"RTN","LA7VORC",203,0)
 ; Returns ORC-22 sequence
"RTN","LA7VORC",204,0)
 ;
"RTN","LA7VORC",205,0)
 Q $$XAD^LA7VHLU4(4,LA74,LA7DT,LA7FS,LA7ECH)
"RTN","LA7VORC",206,0)
 ;
"RTN","LA7VORC",207,0)
 ;
"RTN","LA7VORC",208,0)
ORC23(LA74,LA7DT,LA7FS,LA7ECH) ; Build ORC-23 sequence - Ordering facility phone number
"RTN","LA7VORC",209,0)
 ; Call with   LA74 = ien of institution in file #4
"RTN","LA7VORC",210,0)
 ;                    if null/undefined then use Kernel Site file.
"RTN","LA7VORC",211,0)
 ;            LA7DT = "as of" date in FileMan format
"RTN","LA7VORC",212,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",213,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",214,0)
 ;
"RTN","LA7VORC",215,0)
 ; Returns ORC-23 sequence
"RTN","LA7VORC",216,0)
 ;
"RTN","LA7VORC",217,0)
 N LA7Y
"RTN","LA7VORC",218,0)
 ;
"RTN","LA7VORC",219,0)
 S LA7Y=""
"RTN","LA7VORC",220,0)
 ;
"RTN","LA7VORC",221,0)
 Q LA7Y
"RTN","LA7VORC",222,0)
 ;
"RTN","LA7VORC",223,0)
 ;
"RTN","LA7VORC",224,0)
ORC24(LA7200,LA7DT,LA7FS,LA7ECH) ; Build ORC-24 sequence - Ordering provider address
"RTN","LA7VORC",225,0)
 ; Call with LA7200 = ien of provider in file #200
"RTN","LA7VORC",226,0)
 ;            LA7DT = "as of" date in FileMan format
"RTN","LA7VORC",227,0)
 ;            LA7FS = HL field separator
"RTN","LA7VORC",228,0)
 ;           LA7ECH = HL encoding characters
"RTN","LA7VORC",229,0)
 ;
"RTN","LA7VORC",230,0)
 ; Returns ORC-24 sequence
"RTN","LA7VORC",231,0)
 ;
"RTN","LA7VORC",232,0)
 N LA7Y
"RTN","LA7VORC",233,0)
 ;
"RTN","LA7VORC",234,0)
 S LA7Y=""
"RTN","LA7VORC",235,0)
 ;
"RTN","LA7VORC",236,0)
 Q LA7Y
"RTN","LA88")
0^^B37005513
"RTN","LA88",1,0)
LA88 ;DALOI/JMC - LA*5.2*88 KIDS ROUTINE ;3/4/16  17:15
"RTN","LA88",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**88**;Sep 27, 1994;Build 10
"RTN","LA88",3,0)
 ; Reference to file #771.5 supported by ICR DBIA1169-A
"RTN","LA88",4,0)
 ;
"RTN","LA88",5,0)
PRE ;
"RTN","LA88",6,0)
 Q  ;moved pre-install questions from build to environment check (en^la88a)
"RTN","LA88",7,0)
 ;
"RTN","LA88",8,0)
 ; KIDS Pre install for LA*5.2*88
"RTN","LA88",9,0)
 ;
"RTN","LA88",10,0)
 ;ZEXCEPT: XPDABORT,XPDQUES
"RTN","LA88",11,0)
 ;
"RTN","LA88",12,0)
 D BMES("*** Pre install started ***")
"RTN","LA88",13,0)
 ;
"RTN","LA88",14,0)
 ; If not using Lab UI v1.6 then continue with install to upgrade interface to use HL7 2.5.1
"RTN","LA88",15,0)
 ; If using Lab UI v1.6 and site indicates they have upgraded their COTS to use HL v2.5.1 in HL7 messaging the continue with install.
"RTN","LA88",16,0)
 ; Abort install if site using Lab UI COTS and have not upgraded COTS system to send HL7 v2.5.1 in MSH segment.
"RTN","LA88",17,0)
 I $G(XPDQUES("PRE1 LAB UI V1.6"))=1 D
"RTN","LA88",18,0)
 . I $G(XPDQUES("PRE2 UPGRADED DRIVER"))=1 Q
"RTN","LA88",19,0)
 . D BMES(" ")
"RTN","LA88",20,0)
 . D BMES("Install aborted -- System not ready.")
"RTN","LA88",21,0)
 . D BMES("Installer indicated that site using Lab UI v1.6")
"RTN","LA88",22,0)
 . D MES(" and have not upgraded the LAB UI COTS to send HL7 v2.5.1 messages.")
"RTN","LA88",23,0)
 . D MES("Refer to the Install Guide for more information.")
"RTN","LA88",24,0)
 . D BMES(" ")
"RTN","LA88",25,0)
 . S XPDABORT=1
"RTN","LA88",26,0)
 ;
"RTN","LA88",27,0)
 D BMES("*** Pre install completed ***")
"RTN","LA88",28,0)
 ;
"RTN","LA88",29,0)
 Q
"RTN","LA88",30,0)
 ;
"RTN","LA88",31,0)
 ;
"RTN","LA88",32,0)
POST ;
"RTN","LA88",33,0)
 ; KIDS Post install for LA*5.2*88
"RTN","LA88",34,0)
 ;
"RTN","LA88",35,0)
 ;ZEXCEPT: XPDNM
"RTN","LA88",36,0)
 ;
"RTN","LA88",37,0)
 N STR,LAACTN,LAX,LAMSG,X,I,Y,LAUSR,LARECS,LACNT
"RTN","LA88",38,0)
 N LAFDA,LAIEN,DIERR
"RTN","LA88",39,0)
 D BMES("*** Post install started ***")
"RTN","LA88",40,0)
 ;
"RTN","LA88",41,0)
 ; Add Lab application proxy users to File #200
"RTN","LA88",42,0)
 ; CREATE^XUSAP/4677 (pending)
"RTN","LA88",43,0)
 D BMES("Validating Lab application proxy users:")
"RTN","LA88",44,0)
 F LAUSR="LRLAB,AUTO RELEASE","LRLAB,AUTO VERIFY" D
"RTN","LA88",45,0)
 . S X=$$CREATE^XUSAP(LAUSR,"@",)
"RTN","LA88",46,0)
 . D BMES("Lab application proxy user "_LAUSR_$S('X:" previously added.",X=-1:" **FAILED**",1:" added."))
"RTN","LA88",47,0)
 ;
"RTN","LA88",48,0)
 ; Update Lab UI related protocols in file #101
"RTN","LA88",49,0)
 D FILE101(1)
"RTN","LA88",50,0)
 ;
"RTN","LA88",51,0)
 D BMES("*** Post install completed ***")
"RTN","LA88",52,0)
 D BMES("Sending install completion alert to mail group G.LMI")
"RTN","LA88",53,0)
 S STR="Installation of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LA88",54,0)
 D ALERT(STR)
"RTN","LA88",55,0)
 ;
"RTN","LA88",56,0)
 Q
"RTN","LA88",57,0)
 ;
"RTN","LA88",58,0)
 ;
"RTN","LA88",59,0)
ALERT(MSG,RECIPS) ;
"RTN","LA88",60,0)
 N DA,DIK,XQA,XQAMSG
"RTN","LA88",61,0)
 S XQAMSG=$G(MSG)
"RTN","LA88",62,0)
 I '$$GOTLOCAL^XMXAPIG("LMI") S XQA("G.LMI")=""
"RTN","LA88",63,0)
 E  S XQA(DUZ)=""
"RTN","LA88",64,0)
 I $D(RECIPS) M XQA=RECIPS
"RTN","LA88",65,0)
 D SETUP^XQALERT
"RTN","LA88",66,0)
 Q
"RTN","LA88",67,0)
 ;
"RTN","LA88",68,0)
 ;
"RTN","LA88",69,0)
BMES(STR) ;
"RTN","LA88",70,0)
 ; Write string
"RTN","LA88",71,0)
 D BMES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","LA88",72,0)
 Q
"RTN","LA88",73,0)
 ;
"RTN","LA88",74,0)
 ;
"RTN","LA88",75,0)
PROGRESS(LAST) ;
"RTN","LA88",76,0)
 ; Prints a "." when NOW > LAST + INT
"RTN","LA88",77,0)
 ; Input
"RTN","LA88",78,0)
 ;   LAST : <byref> The last $H when "." was shown
"RTN","LA88",79,0)
 N INT
"RTN","LA88",80,0)
 S INT=1 ;interval in seconds
"RTN","LA88",81,0)
 I $P($H,",",2)>(+$P(LAST,",",2)+INT) S LAST=$H W "."
"RTN","LA88",82,0)
 Q
"RTN","LA88",83,0)
 ;
"RTN","LA88",84,0)
 ;
"RTN","LA88",85,0)
PTG ;
"RTN","LA88",86,0)
 ; Pre-Transport Global routine
"RTN","LA88",87,0)
 Q
"RTN","LA88",88,0)
 ;
"RTN","LA88",89,0)
 ;
"RTN","LA88",90,0)
MES(STR,CJ,LM) ;
"RTN","LA88",91,0)
 ; Display a string using MES^XPDUTL
"RTN","LA88",92,0)
 ;  Inputs
"RTN","LA88",93,0)
 ;  STR: String to display
"RTN","LA88",94,0)
 ;   CJ: Center text?  1=yes 0=1 <dflt=1>
"RTN","LA88",95,0)
 ;   LM: Left Margin (padding)
"RTN","LA88",96,0)
 N X
"RTN","LA88",97,0)
 S STR=$G(STR)
"RTN","LA88",98,0)
 S CJ=$G(CJ,1)
"RTN","LA88",99,0)
 S LM=$G(LM)
"RTN","LA88",100,0)
 I CJ S STR=$$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," ")
"RTN","LA88",101,0)
 I 'CJ I LM S X="" S $P(X," ",LM)=" " S STR=X_STR
"RTN","LA88",102,0)
 D MES^XPDUTL(STR)
"RTN","LA88",103,0)
 Q
"RTN","LA88",104,0)
 ;
"RTN","LA88",105,0)
 ;
"RTN","LA88",106,0)
FILE101(LA7UPDATE) ; Update Lab UI protocols to HL7 v2.5.1
"RTN","LA88",107,0)
 ;
"RTN","LA88",108,0)
 ; Call with LA7UPDATE = 1 (update HL7 version on protocols)
"RTN","LA88",109,0)
 ;                       2 (update HL7 version and ACK codes to use enhance mode)
"RTN","LA88",110,0)
 ;
"RTN","LA88",111,0)
 N DIERR,I,LA101,LAFDA,LAHLACKCODE,LAHLVERSION,LAIEN,LAMSG,LANODE,LATXT,LAX
"RTN","LA88",112,0)
 ;
"RTN","LA88",113,0)
 ; Reference to file #771.5 supported by ICR DBIA1169-A
"RTN","LA88",114,0)
 ; Check LA7UI protocols and set to HL v2.5.1
"RTN","LA88",115,0)
 ;
"RTN","LA88",116,0)
 D BMES("Starting checking and updating related Lab UI protocols in file #101")
"RTN","LA88",117,0)
 ;
"RTN","LA88",118,0)
 S LAHLVERSION=$$FIND1^DIC(771.5,"","OX","2.5.1")
"RTN","LA88",119,0)
 I LAHLVERSION<1 D  Q
"RTN","LA88",120,0)
 . D BMES("Unable to check/update Lab UI protocols")
"RTN","LA88",121,0)
 . D BMES(" - could not identify HL7 v2.5.1 version entry in file #771.5")
"RTN","LA88",122,0)
 . D BMES("Aborted checking and updating related Lab UI protocols in file #101")
"RTN","LA88",123,0)
 ;
"RTN","LA88",124,0)
 I LA7UPDATE=2 D  Q:LAHLACKCODE<1
"RTN","LA88",125,0)
 . S LAHLACKCODE=$$FIND1^DIC(779.003,"","OX","AL")
"RTN","LA88",126,0)
 . I LAHLACKCODE<1 D  Q
"RTN","LA88",127,0)
 . . D BMES("Unable to check/update Lab UI protocols")
"RTN","LA88",128,0)
 . . D BMES(" - could not identify HL7 'AL' ACK condition in file #779.003")
"RTN","LA88",129,0)
 . . D BMES("Aborted checking and updating related Lab UI protocols in file #101")
"RTN","LA88",130,0)
 ;
"RTN","LA88",131,0)
 S LANODE="^ORD(101,""B"",""LA7UI"")"
"RTN","LA88",132,0)
 F  S LANODE=$Q(@LANODE) Q:LANODE=""  Q:$QS(LANODE,2)'="B"  Q:$QS(LANODE,3)'?1"LA7UI"1.E  D
"RTN","LA88",133,0)
 . S LAX=$QS(LANODE,3),LA101=$QS(LANODE,4)
"RTN","LA88",134,0)
 . I LAX'["2.2" D BMES("Protocol "_LAX_" already updated to HL7 version 2.5.1")
"RTN","LA88",135,0)
 . I 'LA101 Q
"RTN","LA88",136,0)
 . K LAFDA,LAIEN,DIERR,LAMSG,LATXT
"RTN","LA88",137,0)
 . S LAIEN=LA101_","
"RTN","LA88",138,0)
 . I LAX["2.2" S LAFDA(1,101,LAIEN,.01)=$P(LAX," 2.2")
"RTN","LA88",139,0)
 . I $$GET1^DIQ(101,LAIEN,770.95)="2.2" S LAFDA(1,101,LAIEN,770.95)=LAHLVERSION
"RTN","LA88",140,0)
 . I LA7UPDATE=2,$$GET1^DIQ(101,LAIEN,4,"I")="E" D
"RTN","LA88",141,0)
 . . S LAFDA(1,101,LAIEN,770.8)=LAHLACKCODE
"RTN","LA88",142,0)
 . . S LAFDA(1,101,LAIEN,770.9)=LAHLACKCODE
"RTN","LA88",143,0)
 . I '$D(LAFDA) Q
"RTN","LA88",144,0)
 . D FILE^DIE("S","LAFDA(1)","LAMSG")
"RTN","LA88",145,0)
 . I $G(LAMSG("DIERR")) D  Q
"RTN","LA88",146,0)
 . . D BMES("Protocol "_LAX_"could not be updated.")
"RTN","LA88",147,0)
 . . D MSG^DIALOG("AEST",.LATXT,80,0,"LAMSG")
"RTN","LA88",148,0)
 . . F I=1:1:LATXT D BMES("FileMan error: "_LATXT(I))
"RTN","LA88",149,0)
 . I $D(LAFDA(1,101,LAIEN,.01)) D BMES("Protocol "_LAX_" name changed to "_$$GET1^DIQ(101,LAIEN,.01)_".")
"RTN","LA88",150,0)
 . I $D(LAFDA(1,101,LAIEN,770.95)) D BMES("Protocol "_LAX_" updated to HL7 version 2.5.1.")
"RTN","LA88",151,0)
 . I $D(LAFDA(1,101,LAIEN,770.8)) D BMES("Protocol "_LAX_" updated to HL7 Enhanced Mode Acknowledgments.")
"RTN","LA88",152,0)
 . D CHECKWP(LAIEN)
"RTN","LA88",153,0)
 ;
"RTN","LA88",154,0)
 D BMES("Finished checking and updating related Lab UI protocols in file #101")
"RTN","LA88",155,0)
 Q
"RTN","LA88",156,0)
 ;
"RTN","LA88",157,0)
 ;
"RTN","LA88",158,0)
CHECKWP(LAIEN) ; Check description (WP) field on protocol and update text.
"RTN","LA88",159,0)
 ; Change reference to v2.2 to v2.5.1 in description.
"RTN","LA88",160,0)
 ; Call with LAIEN = IENS of entry in file #101
"RTN","LA88",161,0)
 ;
"RTN","LA88",162,0)
 N FR,I,LAMSG,LATXT,LAX,WP,X
"RTN","LA88",163,0)
 ;
"RTN","LA88",164,0)
 S LAX=$$GET1^DIQ(101,LAIEN,.01)
"RTN","LA88",165,0)
 S X=$$GET1^DIQ(101,LAIEN,3.5,"","WP")
"RTN","LA88",166,0)
 ;
"RTN","LA88",167,0)
 S I=0,FR("v2.2")="v2.5.1"
"RTN","LA88",168,0)
 F  S I=$O(WP(I)) Q:'I  S WP(I)=$$REPLACE^XLFSTR(WP(I),.FR)
"RTN","LA88",169,0)
 ;
"RTN","LA88",170,0)
 D WP^DIE(101,LAIEN,3.5,"","WP","LAMSG")
"RTN","LA88",171,0)
 I $G(LAMSG("DIERR")) D
"RTN","LA88",172,0)
 . D BMES("Protocol "_LAX_" description field (#3.5) could not be updated.")
"RTN","LA88",173,0)
 . D MSG^DIALOG("AEST",.LATXT,80,0,"LAMSG")
"RTN","LA88",174,0)
 . F I=1:1:LATXT D BMES("FileMan error: "_LATXT(I))
"RTN","LA88",175,0)
 ;
"RTN","LA88",176,0)
 Q
"RTN","LA88A")
0^^B100793409
"RTN","LA88A",1,0)
LA88A ;DALOI/JMC - LA*5.2*88 KIDS ROUTINE ;3/8/16  14:07
"RTN","LA88A",2,0)
 ;;5.2;LAB SERVICE;**88**;Sep 27, 1994;Build 10
"RTN","LA88A",3,0)
 ;
"RTN","LA88A",4,0)
 ; File 19/10156
"RTN","LA88A",5,0)
 ; File ^XUSEC/10076
"RTN","LA88A",6,0)
 ;
"RTN","LA88A",7,0)
EN ;
"RTN","LA88A",8,0)
 ; Does not delete transport global.
"RTN","LA88A",9,0)
 N STR,LRERR,LRLST,LRXUSEC,POS
"RTN","LA88A",10,0)
 S XPDNOQUE=1 ;no queuing
"RTN","LA88A",11,0)
 S POS=$G(IOM,80) S:POS<1 POS=80
"RTN","LA88A",12,0)
 K ^TMP("LA88A",$J)
"RTN","LA88A",13,0)
 ;
"RTN","LA88A",14,0)
 I '$G(XPDENV) D
"RTN","LA88A",15,0)
 . S STR="Transport global for patch "_$G(XPDNM,"Unknown patch")_" loaded on "_$$HTE^XLFDT($H)
"RTN","LA88A",16,0)
 . D ALERT(STR)
"RTN","LA88A",17,0)
 . D BMES("Sending transport global loaded alert to mail group G.LMI")
"RTN","LA88A",18,0)
 ;
"RTN","LA88A",19,0)
 I $G(XPDENV) D
"RTN","LA88A",20,0)
 . D BMES("Sending install started alert to mail group G.LMI")
"RTN","LA88A",21,0)
 . S STR="Installation of patch "_$G(XPDNM,"Unknown patch")_" started on "_$$HTE^XLFDT($H)
"RTN","LA88A",22,0)
 . D ALERT(STR)
"RTN","LA88A",23,0)
 ;
"RTN","LA88A",24,0)
 ; Perform environment checks
"RTN","LA88A",25,0)
 S LRERR=0
"RTN","LA88A",26,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D
"RTN","LA88A",27,0)
 . D BMES("Terminal Device is not defined.")
"RTN","LA88A",28,0)
 . S LRERR=2
"RTN","LA88A",29,0)
 ;
"RTN","LA88A",30,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D
"RTN","LA88A",31,0)
 . D BMES("Please login to set local DUZ variables.")
"RTN","LA88A",32,0)
 . S LRERR=2
"RTN","LA88A",33,0)
 ;
"RTN","LA88A",34,0)
 I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D
"RTN","LA88A",35,0)
 . D BMES("You are not a valid user on this system.")
"RTN","LA88A",36,0)
 . S LRERR=2
"RTN","LA88A",37,0)
 ;
"RTN","LA88A",38,0)
 ; Check that installer has XUPROG and ZTMQ security keys
"RTN","LA88A",39,0)
 S LRLST(1)="XUPROG",LRLST(2)="ZTMQ"
"RTN","LA88A",40,0)
 D OWNSKEY^XUSRB(.LRXUSEC,.LRLST)
"RTN","LA88A",41,0)
 F LRLST=1,2 I LRXUSEC(LRLST)'=1 D
"RTN","LA88A",42,0)
 . W $C(7)
"RTN","LA88A",43,0)
 . D BMES("You do not own the "_LRLST(LRLST)_" security key.")
"RTN","LA88A",44,0)
 . S LRERR=2
"RTN","LA88A",45,0)
 ;
"RTN","LA88A",46,0)
 ;former pre-install questions moved to environment check
"RTN","LA88A",47,0)
 I $G(XPDENV) D
"RTN","LA88A",48,0)
 . N DIR W ! S DIR("A")="Is this site using the Lab UI V1.6 interface",DIR("B")="No",DIR(0)="Y"
"RTN","LA88A",49,0)
 . S DIR("?",1)="  Enter either 'Y' or 'N'."
"RTN","LA88A",50,0)
 . S DIR("?",2)=" "
"RTN","LA88A",51,0)
 . S DIR("?")="  Contact your Laboratory Information Manager to confirm."
"RTN","LA88A",52,0)
 . D ^DIR
"RTN","LA88A",53,0)
 . I $D(DIRUT) S XPDABORT=2,LRERR=1 Q
"RTN","LA88A",54,0)
 . I Y=1 D
"RTN","LA88A",55,0)
 . . N DIR W ! S DIR("A")="Has the Lab UI COTS driver been upgraded to send HL7 v2.5.1 messages",DIR("B")="No",DIR(0)="Y"
"RTN","LA88A",56,0)
 . . S DIR("?",1)="  Enter either 'Y' or 'N'."
"RTN","LA88A",57,0)
 . . S DIR("?",2)=" "
"RTN","LA88A",58,0)
 . . S DIR("?",3)="  This normally involves a driver update on the COTS system"
"RTN","LA88A",59,0)
 . . S DIR("?",4)="  to allow the COTS system to send HL7 messages indicating"
"RTN","LA88A",60,0)
 . . S DIR("?",5)="  either HL7 v2.2 or v2.5.1.  Contact your Laboratory Information"
"RTN","LA88A",61,0)
 . . S DIR("?")="  Manager to confirm the status of the driver update."
"RTN","LA88A",62,0)
 . . D ^DIR I Y=1 Q
"RTN","LA88A",63,0)
 . . D BMES(" ")
"RTN","LA88A",64,0)
 . . D BMES("Install aborted -- System not ready.")
"RTN","LA88A",65,0)
 . . D BMES("Installer indicated the site is using Lab UI v1.6")
"RTN","LA88A",66,0)
 . . D MES("but have not upgraded the LAB UI COTS to send HL7 v2.5.1 messages.")
"RTN","LA88A",67,0)
 . . D MES("Contact your LIM or refer to the Install Guide for more information.")
"RTN","LA88A",68,0)
 . . D BMES(" ")
"RTN","LA88A",69,0)
 . . S XPDABORT=2,LRERR=1
"RTN","LA88A",70,0)
 ;
"RTN","LA88A",71,0)
 ; If installing, run system config
"RTN","LA88A",72,0)
 I 'LRERR,$G(XPDENV) D
"RTN","LA88A",73,0)
 . D ENV2
"RTN","LA88A",74,0)
 . I $D(XPDABORT) S LRERR=1 Q
"RTN","LA88A",75,0)
 . D BMES("N O T E:  If you abort this installation")
"RTN","LA88A",76,0)
 . D MES("D RESTORE^LA88A from this console.")
"RTN","LA88A",77,0)
 ;
"RTN","LA88A",78,0)
 I $G(XPDENV)=1 S XPDDIQ("XPZ1","B")="YES"
"RTN","LA88A",79,0)
 ;
"RTN","LA88A",80,0)
 ; Prevent queuing of install since need locks on globals.
"RTN","LA88A",81,0)
 I $G(XPDENV)=1 S XPDNOQUE=1
"RTN","LA88A",82,0)
 ;
"RTN","LA88A",83,0)
 I LRERR!$D(XPDABORT)!$D(XPDQUIT) D
"RTN","LA88A",84,0)
 . S LRERR=1,XPDABORT=2
"RTN","LA88A",85,0)
 . W !,$C(7),! D BMES("* * * Environment check FAILED * * *")
"RTN","LA88A",86,0)
 ;
"RTN","LA88A",87,0)
 I 'LRERR W ! D BMES("--- Environment is okay ---")
"RTN","LA88A",88,0)
 Q
"RTN","LA88A",89,0)
 ;
"RTN","LA88A",90,0)
 ;
"RTN","LA88A",91,0)
ALERT(MSG,RECIPS) ;
"RTN","LA88A",92,0)
 N DA,DIK,XQA,XQAMSG
"RTN","LA88A",93,0)
 S XQAMSG=$G(MSG)
"RTN","LA88A",94,0)
 I $$GOTLOCAL^XMXAPIG("LMI") S XQA("G.LMI")=""
"RTN","LA88A",95,0)
 E  S XQA(DUZ)=""
"RTN","LA88A",96,0)
 I $D(RECIPS) M XQA=RECIPS
"RTN","LA88A",97,0)
 D SETUP^XQALERT
"RTN","LA88A",98,0)
 Q
"RTN","LA88A",99,0)
 ;
"RTN","LA88A",100,0)
 ;
"RTN","LA88A",101,0)
BMES(STR) ;
"RTN","LA88A",102,0)
 ; Write string
"RTN","LA88A",103,0)
 D BMES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","LA88A",104,0)
 Q
"RTN","LA88A",105,0)
 ;
"RTN","LA88A",106,0)
 ;
"RTN","LA88A",107,0)
MES(STR,CJ,LM) ;
"RTN","LA88A",108,0)
 ; Displays a string using MES^XPDUTL
"RTN","LA88A",109,0)
 ;  Inputs
"RTN","LA88A",110,0)
 ;  STR: String to display
"RTN","LA88A",111,0)
 ;   CJ: Center text?  1=yes 0=1 <dflt=1>
"RTN","LA88A",112,0)
 ;   LM: Left Margin (padding)
"RTN","LA88A",113,0)
 N X
"RTN","LA88A",114,0)
 S STR=$G(STR)
"RTN","LA88A",115,0)
 S CJ=$G(CJ,1)
"RTN","LA88A",116,0)
 S LM=$G(LM)
"RTN","LA88A",117,0)
 I LM<0 S LM=0
"RTN","LA88A",118,0)
 I CJ S STR=$$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," ")
"RTN","LA88A",119,0)
 I 'CJ I LM S X="" S $P(X," ",LM)=" " S STR=X_STR
"RTN","LA88A",120,0)
 D MES^XPDUTL(STR)
"RTN","LA88A",121,0)
 Q
"RTN","LA88A",122,0)
 ;
"RTN","LA88A",123,0)
 ;
"RTN","LA88A",124,0)
GETLOCK(ZZZZTARG,ZZZZSECS,ZZZZSHOW) ;
"RTN","LA88A",125,0)
 ; Acquire a Lock on the specified resource.
"RTN","LA88A",126,0)
 ; Note: "ZZZ*" variable names used to avoid possible variable
"RTN","LA88A",127,0)
 ;  name clashes with @TARG -- "^GBL(1,X)" N X then @TARG would
"RTN","LA88A",128,0)
 ;  change the intended resource for lock since X would be different.
"RTN","LA88A",129,0)
 ; Inputs
"RTN","LA88A",130,0)
 ;   TARG : The Resource to Lock (ie "^GBL(1)")
"RTN","LA88A",131,0)
 ;   SECS : Total # of seconds to wait for the lock
"RTN","LA88A",132,0)
 ;        :  (Minimum value is 5 seconds)
"RTN","LA88A",133,0)
 ;        : Negative value means one solid wait (no breaks)
"RTN","LA88A",134,0)
 ;   SHOW : >0:show progress, 0:dont show progress
"RTN","LA88A",135,0)
 ;        :    1:dots  2:countdown  3: timeleft+dots
"RTN","LA88A",136,0)
 ; Output
"RTN","LA88A",137,0)
 ;         1 if lock obtained, 0 if not.
"RTN","LA88A",138,0)
 ;         If SHOW>0 API outputs progress info
"RTN","LA88A",139,0)
 ;
"RTN","LA88A",140,0)
 N ZZZZZZZI,ZZZZLOCK,ZZZTRIES,ZZZZZZTO
"RTN","LA88A",141,0)
 S ZZZZLOCK=0
"RTN","LA88A",142,0)
 S ZZZZTARG=$G(ZZZZTARG)
"RTN","LA88A",143,0)
 S ZZZZSECS=+$G(ZZZZSECS)
"RTN","LA88A",144,0)
 S ZZZZSHOW=+$G(ZZZZSHOW)
"RTN","LA88A",145,0)
 S ZZZZZZTO=$G(DILOCKTM,5) ;timeout
"RTN","LA88A",146,0)
 S:ZZZZZZTO<5 ZZZZZZTO=5
"RTN","LA88A",147,0)
 I ZZZZSECS'<0 I ZZZZSECS<5 S ZZZZSECS=5
"RTN","LA88A",148,0)
 S ZZZTRIES=ZZZZSECS/ZZZZZZTO
"RTN","LA88A",149,0)
 S:ZZZTRIES["." ZZZTRIES=$P(ZZZTRIES,".",1)+1
"RTN","LA88A",150,0)
 ;
"RTN","LA88A",151,0)
 I ZZZZSECS>0 F ZZZZZZZI=1:1:ZZZTRIES L +(@ZZZZTARG):ZZZZZZTO S:$T ZZZZLOCK=1 Q:ZZZZLOCK  D  ;
"RTN","LA88A",152,0)
 . I ZZZTRIES>1 I ZZZZSHOW D  ;
"RTN","LA88A",153,0)
 . . I ZZZZSHOW=3 W:ZZZZZZZI=1 " ",ZZZTRIES-1*ZZZZZZTO W "."
"RTN","LA88A",154,0)
 . . I ZZZZSHOW=2 W " ",(ZZZTRIES-ZZZZZZZI)*ZZZZZZTO
"RTN","LA88A",155,0)
 . . I ZZZZSHOW=1 W "."
"RTN","LA88A",156,0)
 ;
"RTN","LA88A",157,0)
 I ZZZZSECS<0 D  ;
"RTN","LA88A",158,0)
 . S ZZZZSECS=-ZZZZSECS
"RTN","LA88A",159,0)
 . S:ZZZZSECS<ZZZZZZTO ZZZZSECS=ZZZZZZTO
"RTN","LA88A",160,0)
 . L +(@ZZZZTARG):ZZZZSECS
"RTN","LA88A",161,0)
 . S:$T ZZZZLOCK=1
"RTN","LA88A",162,0)
 ;
"RTN","LA88A",163,0)
 Q ZZZZLOCK
"RTN","LA88A",164,0)
 ;
"RTN","LA88A",165,0)
 ;
"RTN","LA88A",166,0)
LOCKEM() ;
"RTN","LA88A",167,0)
 ; Lock install globals
"RTN","LA88A",168,0)
 ; Returns 1 on success  or  0|Global it couldnt lock
"RTN","LA88A",169,0)
 N LRLCK,LRLCK2,LRLCK3,X,STATUS
"RTN","LA88A",170,0)
 S STATUS=0
"RTN","LA88A",171,0)
 S LRLCK="^LAHM(62.48,""Z"")"
"RTN","LA88A",172,0)
 S LRLCK2="^LAHM(62.49,""HL7 PROCESS"")"
"RTN","LA88A",173,0)
 ; S LRLCK3="^LAH(""Z"")"
"RTN","LA88A",174,0)
 S X=$$GETLOCK(LRLCK,20,1)
"RTN","LA88A",175,0)
 I 'X S STATUS="0|"_LRLCK
"RTN","LA88A",176,0)
 I X D  ;
"RTN","LA88A",177,0)
 . S X=$$GETLOCK(LRLCK2,20,1)
"RTN","LA88A",178,0)
 . I 'X S STATUS="0|"_LRLCK2 L -@LRLCK Q
"RTN","LA88A",179,0)
 . ; S X=$$GETLOCK(LRLCK3,20,1)
"RTN","LA88A",180,0)
 . ; I 'X S STATUS="0|"_LRLCK3 L -@LRLCK2 L -@LRLCK Q
"RTN","LA88A",181,0)
 . S STATUS=1
"RTN","LA88A",182,0)
 Q STATUS
"RTN","LA88A",183,0)
 ;
"RTN","LA88A",184,0)
 ;
"RTN","LA88A",185,0)
RESTORE ;
"RTN","LA88A",186,0)
 N X,LRADL,STR,OKAY
"RTN","LA88A",187,0)
 D BMES("*  *  *  Releasing system  *  *  *")
"RTN","LA88A",188,0)
 ; Release locks
"RTN","LA88A",189,0)
 S X=$G(IOM,80)\2-25
"RTN","LA88A",190,0)
 ;S STR="Released lock on ^LAH(""Z"")"
"RTN","LA88A",191,0)
 ;D MES(STR,"",X)
"RTN","LA88A",192,0)
 ;L -^LAH("Z")
"RTN","LA88A",193,0)
 ;
"RTN","LA88A",194,0)
 S STR="Released lock on ^LAHM(62.49,""HL7 PROCESS"")"
"RTN","LA88A",195,0)
 D MES(STR,"",X)
"RTN","LA88A",196,0)
 L -^LAHM(62.49,"HL7 PROCESS")
"RTN","LA88A",197,0)
 ;
"RTN","LA88A",198,0)
 S STR="Released lock on ^LAHM(62.48,""Z"")"
"RTN","LA88A",199,0)
 D MES(STR,"",X)
"RTN","LA88A",200,0)
 L -^LAHM(62.48,"Z")
"RTN","LA88A",201,0)
 ;
"RTN","LA88A",202,0)
 ; reset options
"RTN","LA88A",203,0)
 D BMES(" ")
"RTN","LA88A",204,0)
 D OPTRE("LA7 MAIN MENU")
"RTN","LA88A",205,0)
 ;
"RTN","LA88A",206,0)
 ; Restart auto download process status if stopped by install
"RTN","LA88A",207,0)
 S LRADL=$G(^TMP("LA88A",$J,"ADL"))
"RTN","LA88A",208,0)
 I LRADL=1 D  ;
"RTN","LA88A",209,0)
 . D ZTSK^LA7ADL
"RTN","LA88A",210,0)
 . D SETSTOP^LA7ADL1(1,DUZ)
"RTN","LA88A",211,0)
 . D BMES("Restarting Lab Universal Interface Auto Download Job")
"RTN","LA88A",212,0)
 . K ^TMP("LA88A",$J,"ADL")
"RTN","LA88A",213,0)
 . H 3
"RTN","LA88A",214,0)
 ;
"RTN","LA88A",215,0)
 ; If ADL not started, notify user to restart
"RTN","LA88A",216,0)
 S X=$P($G(^LA("ADL","STOP")),"^")
"RTN","LA88A",217,0)
 I X'=0 D BMES("Be sure to restart the Lab Universal Interface Auto Download Job")
"RTN","LA88A",218,0)
 ;
"RTN","LA88A",219,0)
 K ^TMP("LA88A",$J)
"RTN","LA88A",220,0)
 Q
"RTN","LA88A",221,0)
 ;
"RTN","LA88A",222,0)
 ;
"RTN","LA88A",223,0)
OPTOOO(LROPT,MODE) ;
"RTN","LA88A",224,0)
 ; File 19/10156
"RTN","LA88A",225,0)
 ; Mark Option out of order or clear (OPTDE^XPDUTL doesn't work in ENV)
"RTN","LA88A",226,0)
 N R19,STATUS,LROOO
"RTN","LA88A",227,0)
 S LROPT=$G(LROPT),MODE=$G(MODE),(LROOO,STATUS)=""
"RTN","LA88A",228,0)
 ;
"RTN","LA88A",229,0)
 S R19=$$LKOPT^XPDMENU(LROPT)
"RTN","LA88A",230,0)
 I 'R19 S STATUS="0^1^Option not found"
"RTN","LA88A",231,0)
 E  S LROOO=$$GET1^DIQ(19,R19_",",2,"","","LRMSG")
"RTN","LA88A",232,0)
 ;
"RTN","LA88A",233,0)
 I R19,'MODE D
"RTN","LA88A",234,0)
 . I LROOO="" S LROOO="OOO VIA LA*5.2*88"
"RTN","LA88A",235,0)
 . E  S STATUS="0^2^Already OOO"
"RTN","LA88A",236,0)
 ;
"RTN","LA88A",237,0)
 I R19,MODE D
"RTN","LA88A",238,0)
 . I LROOO="OOO VIA LA*5.2*88" S LROOO=""
"RTN","LA88A",239,0)
 . E  S STATUS="0^3^OOO before patch installation"
"RTN","LA88A",240,0)
 ;
"RTN","LA88A",241,0)
 I STATUS="" D
"RTN","LA88A",242,0)
 . D OUT^XPDMENU(LROPT,LROOO)
"RTN","LA88A",243,0)
 . S STATUS=1
"RTN","LA88A",244,0)
 ;
"RTN","LA88A",245,0)
 Q STATUS
"RTN","LA88A",246,0)
 ;
"RTN","LA88A",247,0)
 ;
"RTN","LA88A",248,0)
OPTDE(OPT,STOP) ;
"RTN","LA88A",249,0)
 N X,X2,Y,STATUS
"RTN","LA88A",250,0)
 S STATUS=0,X2=$G(IOM,80)/2-15
"RTN","LA88A",251,0)
 D MES("Disabling Option ["_OPT_"]",0,X2)
"RTN","LA88A",252,0)
 S X=$$OPTOOO(OPT,0)
"RTN","LA88A",253,0)
 I 'X D
"RTN","LA88A",254,0)
 . I $P(X,"^",2)=2 D MES("["_OPT_"] already disabled.") Q
"RTN","LA88A",255,0)
 . D MES("Could not disable Option ["_OPT_"]",0,X2-5)
"RTN","LA88A",256,0)
 . S (STATUS,STOP)=1
"RTN","LA88A",257,0)
 Q STATUS
"RTN","LA88A",258,0)
 ;
"RTN","LA88A",259,0)
 ;
"RTN","LA88A",260,0)
OPTRE(OPT) ;
"RTN","LA88A",261,0)
 ; Re-enable options
"RTN","LA88A",262,0)
 N X,Y
"RTN","LA88A",263,0)
 S OPT=$G(OPT)
"RTN","LA88A",264,0)
 D MES("Enabling Option ["_OPT_"]",1,0)
"RTN","LA88A",265,0)
 S X=0
"RTN","LA88A",266,0)
 S X=$$OPTOOO(OPT,1)
"RTN","LA88A",267,0)
 I 'X D  ;
"RTN","LA88A",268,0)
 . S Y=$P(X,"^",2)
"RTN","LA88A",269,0)
 . I Y>1 D MES("["_OPT_"] left disabled - "_$P(X,"^",3),1,0)
"RTN","LA88A",270,0)
 . W $C(7)
"RTN","LA88A",271,0)
 . D MES("Re-enable ["_OPT_"] manually.",1,0)
"RTN","LA88A",272,0)
 Q
"RTN","LA88A",273,0)
 ;
"RTN","LA88A",274,0)
 ;
"RTN","LA88A",275,0)
ENV2 ;
"RTN","LA88A",276,0)
 N X,Y,I,STOP,ABORT
"RTN","LA88A",277,0)
 S ^TMP("LA88A",$J,1)=0
"RTN","LA88A",278,0)
 S ABORT=0
"RTN","LA88A",279,0)
 ;
"RTN","LA88A",280,0)
 ; disable options
"RTN","LA88A",281,0)
 S STOP=0
"RTN","LA88A",282,0)
 S X=$$OPTDE("LA7 MAIN MENU",.STOP)
"RTN","LA88A",283,0)
 ;
"RTN","LA88A",284,0)
 I STOP D  ;
"RTN","LA88A",285,0)
 . W $C(7)
"RTN","LA88A",286,0)
 . D BMES("One or more Options weren't disabled.")
"RTN","LA88A",287,0)
 . S Y=$$PROMPT("Continue",.ABORT)
"RTN","LA88A",288,0)
 . I 'Y S ABORT=1
"RTN","LA88A",289,0)
 ;
"RTN","LA88A",290,0)
 I ABORT D  Q  ;
"RTN","LA88A",291,0)
 . D BMES("Install aborted.")
"RTN","LA88A",292,0)
 . D RESTORE^LA88A
"RTN","LA88A",293,0)
 . S XPDABORT=2
"RTN","LA88A",294,0)
 ;
"RTN","LA88A",295,0)
 ; Check and shutdown Auto Download job.
"RTN","LA88A",296,0)
 S X=$G(^LA("ADL","STOP"))
"RTN","LA88A",297,0)
 I $P(X,"^")=0 D  ;
"RTN","LA88A",298,0)
 . D BMES("Shutting down Lab Universal Interface Auto Download Job")
"RTN","LA88A",299,0)
 . D SETSTOP^LA7ADL1(2,DUZ)
"RTN","LA88A",300,0)
 . S ^TMP("LA88A",$J,"ADL")=1
"RTN","LA88A",301,0)
 . F I=1:1:10 W "." H 1
"RTN","LA88A",302,0)
 ;
"RTN","LA88A",303,0)
 ; Find existing running HL7 tasks and tell them to shutdown
"RTN","LA88A",304,0)
 D BMES("Shutting down currently running Lab HL7 processes")
"RTN","LA88A",305,0)
 D STOPTASK
"RTN","LA88A",306,0)
 ;
"RTN","LA88A",307,0)
 ; get locks
"RTN","LA88A",308,0)
 S ABORT=0
"RTN","LA88A",309,0)
 S STOP=0
"RTN","LA88A",310,0)
 F  D  Q:STOP  Q:ABORT  ;
"RTN","LA88A",311,0)
 . S Y=0
"RTN","LA88A",312,0)
 . D BMES("Acquiring locks ...")
"RTN","LA88A",313,0)
 . S X=$$LOCKEM^LA88A()
"RTN","LA88A",314,0)
 . I X S STOP=1 Q
"RTN","LA88A",315,0)
 . D BMES("Couldn't lock "_$P(X,"|",2))
"RTN","LA88A",316,0)
 . S Y=$$PROMPT("Try again",.ABORT)
"RTN","LA88A",317,0)
 . Q:ABORT
"RTN","LA88A",318,0)
 . I 'Y S ABORT=1 Q
"RTN","LA88A",319,0)
 . I Y=2 S STOP=1 ;ignore
"RTN","LA88A",320,0)
 ;
"RTN","LA88A",321,0)
 I ABORT D  Q  ;
"RTN","LA88A",322,0)
 . D RESTORE^LA88A
"RTN","LA88A",323,0)
 . D BMES("** Aborted **")
"RTN","LA88A",324,0)
 . S XPDABORT=2
"RTN","LA88A",325,0)
 ;
"RTN","LA88A",326,0)
 D BMES("Locks"_$S(Y=2:" NOT",1:"")_" acquired.")
"RTN","LA88A",327,0)
 ;
"RTN","LA88A",328,0)
 ; Indicates all system setup steps are done, LR458 checks this node as well
"RTN","LA88A",329,0)
 S ^TMP("LA88A",$J,1)=1
"RTN","LA88A",330,0)
 Q
"RTN","LA88A",331,0)
 ;
"RTN","LA88A",332,0)
 ;
"RTN","LA88A",333,0)
PROMPT(STR,ABORT) ;
"RTN","LA88A",334,0)
 N DIR,Y,X,I,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","LA88A",335,0)
 S DIR(0)="SAO^Y:YES;N:NO;I:IGNORE"
"RTN","LA88A",336,0)
 S X=$P(STR,":")_" (Yes/No/Ignore): "
"RTN","LA88A",337,0)
 S I=$G(IOM,80)-$L(X)-8/2,Y="",$P(Y," ",I)=" " ; pseudo center text
"RTN","LA88A",338,0)
 S DIR("A")=Y_X,DIR("B")="YES"
"RTN","LA88A",339,0)
 D ^DIR
"RTN","LA88A",340,0)
 S Y=$S(Y="Y":1,Y="I":2,Y="":1,1:0)
"RTN","LA88A",341,0)
 I Y="" S Y=1
"RTN","LA88A",342,0)
 I 'Y S ABORT=1
"RTN","LA88A",343,0)
 I $D(DIRUT) S ABORT=1
"RTN","LA88A",344,0)
 Q Y
"RTN","LA88A",345,0)
 ;
"RTN","LA88A",346,0)
 ;
"RTN","LA88A",347,0)
PROMPT2(STR,ABORT) ;
"RTN","LA88A",348,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,I,X,Y
"RTN","LA88A",349,0)
 S DIR(0)="YO"
"RTN","LA88A",350,0)
 S I=$G(IOM,80)-$L(STR)-8/2,Y="",$P(Y," ",I)=" " ;pseudo center text
"RTN","LA88A",351,0)
 S DIR("A")=Y_X,DIR("B")="YES"
"RTN","LA88A",352,0)
 D ^DIR
"RTN","LA88A",353,0)
 I Y="" S Y=1
"RTN","LA88A",354,0)
 I 'Y S ABORT=1
"RTN","LA88A",355,0)
 I $D(DIRUT) S ABORT=1
"RTN","LA88A",356,0)
 Q +Y
"RTN","LA88A",357,0)
 ;
"RTN","LA88A",358,0)
 ;
"RTN","LA88A",359,0)
STOPTASK ;  Find existing running Lab HL7 tasks and tell them to shutdown
"RTN","LA88A",360,0)
 ;
"RTN","LA88A",361,0)
 N LRRTN,LRTASK,LRX,ZTNAME,ZTSK
"RTN","LA88A",362,0)
 S ZTNAME="LA*5.2*88/LR*5.2*458 install"
"RTN","LA88A",363,0)
 F LRRTN="EN^LA7VIN","EN^LRVRPOC","EN^LA7UIIN","EN^LRVRAR" D
"RTN","LA88A",364,0)
 . K LRTASK,ZTSK
"RTN","LA88A",365,0)
 . D RTN^%ZTLOAD(LRRTN,"LRTASK")
"RTN","LA88A",366,0)
 . I '$D(LRTASK) Q
"RTN","LA88A",367,0)
 . S LRTASK=0
"RTN","LA88A",368,0)
 . F  S LRTASK=$O(LRTASK(LRTASK)) Q:'LRTASK  D
"RTN","LA88A",369,0)
 . . K ZTSK
"RTN","LA88A",370,0)
 . . S ZTSK=LRTASK D STAT^%ZTLOAD
"RTN","LA88A",371,0)
 . . I ZTSK(1)>0,ZTSK(1)<3 S LRX=$$ASKSTOP^%ZTLOAD(LRTASK)
"RTN","LA88A",372,0)
 Q
"VER")
8.0^22.0
"^DD",62.4,62.4,99,0)
AUTO RELEASE^S^0:NO;1:YES;2:AUTO VERIFY ONLY;3:USER RELEASE ONLY;^9;11^Q
"^DD",62.4,62.4,99,3)
Choose the type of auto release for this entry. Enter "??" for additional help.
"^DD",62.4,62.4,99,21,0)
^^15^15^3150519^^^
"^DD",62.4,62.4,99,21,1,0)
If results received via this auto instrument entry can be associated with 
"^DD",62.4,62.4,99,21,2,0)
an external auto or user verification system then enable this field.
"^DD",62.4,62.4,99,21,3,0)
 
"^DD",62.4,62.4,99,21,4,0)
This field will be checked in conjunction with the auto release master 
"^DD",62.4,62.4,99,21,5,0)
switch parameter LA7UI AUTO RELEASE MASTER and the specific HL7 message 
"^DD",62.4,62.4,99,21,6,0)
containing the results to determine if the lab results should be processed
"^DD",62.4,62.4,99,21,7,0)
by the Laboratory Auto Release process.
"^DD",62.4,62.4,99,21,8,0)
 
"^DD",62.4,62.4,99,21,9,0)
It can be configured at several levels of granularity.
"^DD",62.4,62.4,99,21,10,0)
 
"^DD",62.4,62.4,99,21,11,0)
 0 - no auto release for this auto instrument
"^DD",62.4,62.4,99,21,12,0)
 1 - yes instrument is enabled for auto and user verification
"^DD",62.4,62.4,99,21,13,0)
 2 - yes however only process results that have been auto verified
"^DD",62.4,62.4,99,21,14,0)
 3 - yes however only process results that have been user verified,
"^DD",62.4,62.4,99,21,15,0)
     no auto verification.
"^DD",62.4,62.4,99,"DT")
3151113
"^DD",62.485,62.485,0)
FIELD^^2^4
"^DD",62.485,62.485,0,"DDA")
N
"^DD",62.485,62.485,0,"DT")
2940427
"^DD",62.485,62.485,0,"IX","B",62.485,.01)

"^DD",62.485,62.485,0,"NM","LA7 MESSAGE LOG BULLETINS")

"^DD",62.485,62.485,0,"VRPK")
LA
"^DD",62.485,62.485,.01,0)
CODE^RNJ7,0X^^0;1^K:+X'=X!(X>9999999)!(X<$S($D(DIFROM):1,1:1000))!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",62.485,62.485,.01,1,0)
^.1
"^DD",62.485,62.485,.01,1,1,0)
62.485^B
"^DD",62.485,62.485,.01,1,1,1)
S ^LAHM(62.485,"B",$E(X,1,30),DA)=""
"^DD",62.485,62.485,.01,1,1,2)
K ^LAHM(62.485,"B",$E(X,1,30),DA)
"^DD",62.485,62.485,.01,3)
Type a Number between 1000 and 9999999, 0 Decimal Digits
"^DD",62.485,62.485,.01,21,0)
^^3^3^2970612^^
"^DD",62.485,62.485,.01,21,1,0)
This field contains a number between 1 and 9999999 that uniquely
"^DD",62.485,62.485,.01,21,2,0)
identifies an error or exceptional condition.  Numbers below 999 are
"^DD",62.485,62.485,.01,21,3,0)
reserved for package use only.
"^DD",62.485,62.485,.01,"DT")
2950122
"^DD",62.485,62.485,1,0)
TEXT^RF^^0;2^K:$L(X)>160!($L(X)<1) X
"^DD",62.485,62.485,1,3)
Answer must be 1-160 characters in length.
"^DD",62.485,62.485,1,21,0)
^^3^3^2970612^
"^DD",62.485,62.485,1,21,1,0)
This field holds the text description of the error or exceptional
"^DD",62.485,62.485,1,21,2,0)
condition.  This field is used to create an error or exceptional condition
"^DD",62.485,62.485,1,21,3,0)
display in the ^XTMP global.
"^DD",62.485,62.485,1,23,0)
^^9^9^2970612^
"^DD",62.485,62.485,1,23,1,0)
This field is used to create error or exceptional condition displays in
"^DD",62.485,62.485,1,23,2,0)
the ^XTMP global.  The text description should contain useful information
"^DD",62.485,62.485,1,23,3,0)
about the message in the LA7 MESSAGE QUEUE file (#62.49).  The information
"^DD",62.485,62.485,1,23,4,0)
can be added to the text by using the "|" character and the LA7TXT()
"^DD",62.485,62.485,1,23,5,0)
array.
"^DD",62.485,62.485,1,23,6,0)
 
"^DD",62.485,62.485,1,23,7,0)
Example Text: Message # |1| did not contain a PID segment.
"^DD",62.485,62.485,1,23,8,0)
Array value: LA7TXT(1)=123
"^DD",62.485,62.485,1,23,9,0)
^XTMP: Message # 123 did not contain a PID segment.
"^DD",62.485,62.485,1,"DT")
2940427
"^DD",62.485,62.485,1.3,0)
SEND ALERT^S^0:NO;1:YES;^0;3^Q
"^DD",62.485,62.485,1.3,3)
Determines if alert is sent when a message is processed with this error. Alerts must also be turned on and mail group designated in file #62.48.
"^DD",62.485,62.485,1.3,21,0)
^^4^4^2970612^
"^DD",62.485,62.485,1.3,21,1,0)
This field is used to flag those errors which can generate an alert to a
"^DD",62.485,62.485,1.3,21,2,0)
site selectable mail group whenever this error occurs. The site needs to
"^DD",62.485,62.485,1.3,21,3,0)
designate a mail group in the LA7 MESSAGE PARAMETER file (#62.48) under
"^DD",62.485,62.485,1.3,21,4,0)
the ALERT CONDITION field (#20).
"^DD",62.485,62.485,1.3,"DT")
2970205
"^DD",62.485,62.485,2,0)
BUILD LOGIC^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",62.485,62.485,2,3)
This is Standard MUMPS code.
"^DD",62.485,62.485,2,9)
@
"^DD",62.485,62.485,2,21,0)
^^8^8^2970612^
"^DD",62.485,62.485,2,21,1,0)
This is standard MUMPS code that is executed to log the text
"^DD",62.485,62.485,2,21,2,0)
description error into the ^XTMP global.  The MUMPS code should set the
"^DD",62.485,62.485,2,21,3,0)
LA7TXT() array to feel in the fields in the text description.
"^DD",62.485,62.485,2,21,4,0)
 
"^DD",62.485,62.485,2,21,5,0)
 Example MUMPS code: S LA7TXT(1)=LA76249
"^DD",62.485,62.485,2,21,6,0)
 Variable value: LA76249=123
"^DD",62.485,62.485,2,21,7,0)
 Text description: Message # |1| did not contain a PID segment.
"^DD",62.485,62.485,2,21,8,0)
 ^XTMP: Message # 123 did not contain a PID segment.
"^DD",62.485,62.485,2,"DT")
2940427
"^DIC",62.485,62.485,0)
LA7 MESSAGE LOG BULLETINS^62.485
"^DIC",62.485,62.485,0,"GL")
^LAHM(62.485,
"^DIC",62.485,62.485,"%D",0)
^^5^5^2950406^^
"^DIC",62.485,62.485,"%D",1,0)
This file stores canned text for logging errors or exceptional 
"^DIC",62.485,62.485,"%D",2,0)
conditions during message processing.  This file is not meant to be
"^DIC",62.485,62.485,"%D",3,0)
edited by local sites, but if a local messaging system is developed,
"^DIC",62.485,62.485,"%D",4,0)
and entries have to be added, they should be added at entry numbers
"^DIC",62.485,62.485,"%D",5,0)
higher than 999.
"^DIC",62.485,62.485,"%D",6,0)
should add new entries at entry numbers higher than 999. It is preferred
"^DIC",62.485,62.485,"%D",7,0)
that the local codes be preceded with the three digit primary site number
"^DIC",62.485,62.485,"%D",8,0)
which would result in a seven digit number, site #_xxxx.
"^DIC",62.485,"B","LA7 MESSAGE LOG BULLETINS",62.485)

**INSTALL NAME**
LR*5.2*458
"BLD",9774,0)
LR*5.2*458^LAB SERVICE^0^3160628^y
"BLD",9774,1,0)
^^231^231^3160628^
"BLD",9774,1,1,0)
Associated Patches:(v)LR*5.2*446 <<= must be installed BEFORE `LR*5.2*458'
"BLD",9774,1,2,0)
 
"BLD",9774,1,3,0)
Subject:  LABORATORY AUTO VERICATION & AUTO RELEASE
"BLD",9774,1,4,0)
 
"BLD",9774,1,5,0)
Category:       ROUTINE
"BLD",9774,1,6,0)
                ENHANCEMENT
"BLD",9774,1,7,0)
                DATA DICTIONARY
"BLD",9774,1,8,0)
 
"BLD",9774,1,9,0)
Description:
"BLD",9774,1,10,0)
===========
"BLD",9774,1,11,0)
The build for this patch is distributed as part of a multi-package build 
"BLD",9774,1,12,0)
that contains LR*5.2*458 and LA*5.2*88 and contains functionality to 
"BLD",9774,1,13,0)
enable Auto Verification and Auto Release of normal lab results.  
"BLD",9774,1,14,0)
Initially developed at the Kansas City VAMC, this new process involves 
"BLD",9774,1,15,0)
automatic review and release of test results based on lab-established set 
"BLD",9774,1,16,0)
of boundaries, also referred as rules, rule sets, and algorithms.  Lab 
"BLD",9774,1,17,0)
results that are in a "normal" range, as pre-determined by the 
"BLD",9774,1,18,0)
laboratory, will transmit directly from the middleware to VistA lab files 
"BLD",9774,1,19,0)
and on to Computerized Patient Record System (CPRS) without the 
"BLD",9774,1,20,0)
intermediate step of requiring a lab technologist to manually review and 
"BLD",9774,1,21,0)
sign off on these normal lab results.  This process will eliminate the 
"BLD",9774,1,22,0)
need for a qualified technologist to manually approve all "normal" 
"BLD",9774,1,23,0)
results before those results are filed in VistA Lab files and available 
"BLD",9774,1,24,0)
for clinicians to view in CPRS. 
"BLD",9774,1,25,0)
 
"BLD",9774,1,26,0)
Each VAMC site will determine which instruments will use this 
"BLD",9774,1,27,0)
functionality as it can set up on an instrument by instrument basis.  
"BLD",9774,1,28,0)
Essentially VistA Lab instruments are set up as either being available 
"BLD",9774,1,29,0)
for auto verification or not available for auto verification.  If an 
"BLD",9774,1,30,0)
instrument is set up for auto verification, then a lab result passing the 
"BLD",9774,1,31,0)
rule set will be filed by the middleware in VistA lab files and available 
"BLD",9774,1,32,0)
in CPRS and a lab result that cannot pass the rule set will be held in 
"BLD",9774,1,33,0)
the middleware system for review by a lab technologist. 
"BLD",9774,1,34,0)
 
"BLD",9774,1,35,0)
In support of this auto verification and auto release functionality, this 
"BLD",9774,1,36,0)
patch will add two new application proxy users.  LRLAB AUTO RELEASE is 
"BLD",9774,1,37,0)
used to indicate that the results in VistA Lab were released by an 
"BLD",9774,1,38,0)
automated Lab process without human interventions.  LRLAB, AUTO VERIFY is 
"BLD",9774,1,39,0)
used to indicate that the results were "approved" by an automated process 
"BLD",9774,1,40,0)
using a rules based system.
"BLD",9774,1,41,0)
 
"BLD",9774,1,42,0)
--------------------------------------------------------------------------
"BLD",9774,1,43,0)
 
"BLD",9774,1,44,0)
Patch Components
"BLD",9774,1,45,0)
================
"BLD",9774,1,46,0)
 
"BLD",9774,1,47,0)
Files & Fields Associated:
"BLD",9774,1,48,0)
 
"BLD",9774,1,49,0)
File Name (Number)     Field Name (Number)           New/Modified/Deleted
"BLD",9774,1,50,0)
------------------     -------------------           --------------------
"BLD",9774,1,51,0)
LOAD/WORK LIST (#68.2) PROFILE (#68.23), AUTO RELEASE (#2.4)  New
"BLD",9774,1,52,0)
 
"BLD",9774,1,53,0)
Parameter Definitions Associated:
"BLD",9774,1,54,0)
 
"BLD",9774,1,55,0)
Parameter Definition Name             New/Modified/Deleted
"BLD",9774,1,56,0)
-------------------------             --------------------
"BLD",9774,1,57,0)
LR WORKLIST DATA CLEANUP              New
"BLD",9774,1,58,0)
 
"BLD",9774,1,59,0)
Parameter Template                    New/Modified/Deleted
"BLD",9774,1,60,0)
-------------------------             --------------------
"BLD",9774,1,61,0)
LR PKG                                Modified
"BLD",9774,1,62,0)
 
"BLD",9774,1,63,0)
Input Templates Associated:
"BLD",9774,1,64,0)
 
"BLD",9774,1,65,0)
Input Template                          New/Modified/Deleted
"BLD",9774,1,66,0)
----------------------------------      --------------------
"BLD",9774,1,67,0)
LRLLDFT                                 New
"BLD",9774,1,68,0)
 
"BLD",9774,1,69,0)
Options Associated:
"BLD",9774,1,70,0)
 
"BLD",9774,1,71,0)
Option Name                             Type      New/Modified/Deleted
"BLD",9774,1,72,0)
-----------                             ----      --------------------
"BLD",9774,1,73,0)
Summary List (Patient) [LRLISTPS]       Routine   New
"BLD",9774,1,74,0)
 
"BLD",9774,1,75,0)
 
"BLD",9774,1,76,0)
New Service Requests (NSRs):
"BLD",9774,1,77,0)
==============================
"BLD",9774,1,78,0)
NSR# 20131009: Employ laboratory autoverification in the Veterans Health 
"BLD",9774,1,79,0)
Administration. 
"BLD",9774,1,80,0)
 
"BLD",9774,1,81,0)
Test Sites:
"BLD",9774,1,82,0)
===========
"BLD",9774,1,83,0)
Kansas City VAMC (Alpha)
"BLD",9774,1,84,0)
Tucson (Beta)
"BLD",9774,1,85,0)
Tampa (Beta)
"BLD",9774,1,86,0)
Iowa City (Beta)
"BLD",9774,1,87,0)
Fresno (Beta)
"BLD",9774,1,88,0)
 
"BLD",9774,1,89,0)
 
"BLD",9774,1,90,0)
Software and Documentation Retrieval Information
"BLD",9774,1,91,0)
 ==============================
"BLD",9774,1,92,0)
 VistA Laboratory patch LR*5.2*458 software is distributed by Host File, 
"BLD",9774,1,93,0)
along with LA*5.2*88.  Software is available on the ANONYMOUS.SOFTWARE 
"BLD",9774,1,94,0)
directory at one of the following Office of Information (OI) Field 
"BLD",9774,1,95,0)
Offices.  The preferred method is to retrieve the file using Secure File
"BLD",9774,1,96,0)
Transfer Protocol (SFTP) from: download.vista.domain.ext, which transmits
"BLD",9774,1,97,0)
files from the first available FTP server. Sites may also select to retrieve
"BLD",9774,1,98,0)
documentation directly from a specific server as follows: 
"BLD",9774,1,99,0)
        Albany                     ftp.fo-albany.domain.ext
"BLD",9774,1,100,0)
        Hines                      ftp.fo-hines.domain.ext
"BLD",9774,1,101,0)
        Salt Lake City             ftp.fo-slc.domain.ext
"BLD",9774,1,102,0)
 
"BLD",9774,1,103,0)
File Name                   Contents               Retrieval Format
"BLD",9774,1,104,0)
------------------          --------------------   ----------------
"BLD",9774,1,105,0)
LAB_AUTORELEASE_1_0.KID     Host File containing       ASCII
"BLD",9774,1,106,0)
                            KIDS software distribution
"BLD",9774,1,107,0)
 
"BLD",9774,1,108,0)
The VistA Documentation Library (VDL) web site will also contain 
"BLD",9774,1,109,0)
 
"BLD",9774,1,110,0)
LR_52_458_LA_52_88 Release Notes                       Binary
"BLD",9774,1,111,0)
 for LR*5.2*458 and LA*5.2*88
"BLD",9774,1,112,0)
 
"BLD",9774,1,113,0)
Lab AutoRelease 1.0 User Guide                         Binary
"BLD",9774,1,114,0)
 
"BLD",9774,1,115,0)
Lab AutoRelease 1.0 Technical Manual                   Binary
"BLD",9774,1,116,0)
 
"BLD",9774,1,117,0)
Lab UI HL V1.6 Upgrade Installation                    Binary
"BLD",9774,1,118,0)
 and User Guide LA*5.2*66
"BLD",9774,1,119,0)
 
"BLD",9774,1,120,0)
Lab UI HL V1.6 Upgrade Interface                       Binary
"BLD",9774,1,121,0)
 Specifications Document 
"BLD",9774,1,122,0)
 
"BLD",9774,1,123,0)
This website is usually updated within 1-3 days of the patch release date.
"BLD",9774,1,124,0)
The VDL web address for Laboratory Universal Interface user documentation
"BLD",9774,1,125,0)
is: http://www.va.gov/vdl/application.asp?appid=120
"BLD",9774,1,126,0)
 
"BLD",9774,1,127,0)
Installation Instructions
"BLD",9774,1,128,0)
=========================
"BLD",9774,1,129,0)
 
"BLD",9774,1,130,0)
This patch, LR*5.2*458, is part of a combined build for Autoverification 
"BLD",9774,1,131,0)
Enhancement patch.  This patch may be loaded with users on the system.  
"BLD",9774,1,132,0)
You may want to install it during non-peak hours.  Installation will take 
"BLD",9774,1,133,0)
less than 10 minutes.
"BLD",9774,1,134,0)
 
"BLD",9774,1,135,0)
Refer to the LR_52_458_LA_52_88 Release Notes referenced above for 
"BLD",9774,1,136,0)
complete instructions on install and post installation configuration.
"BLD",9774,1,137,0)
 
"BLD",9774,1,138,0)
1.      DOWNLOAD HOST KIDS FILE
"BLD",9774,1,139,0)
        ----------------------
"BLD",9774,1,140,0)
        Download the KIDS file LAB_AUTORELEASE_1_0.KID from the 
"BLD",9774,1,141,0)
        ANONYMOUS.SOFTWARE directory of Albany, Hines, or the Salt Lake
"BLD",9774,1,142,0)
        OIFO to the appropriate directory on your system.
"BLD",9774,1,143,0)
 
"BLD",9774,1,144,0)
2.      LOAD DISTRIBUTION
"BLD",9774,1,145,0)
        -----------------
"BLD",9774,1,146,0)
        Use the 'LOAD A DISTRIBUTION' option on the KIDS
"BLD",9774,1,147,0)
        INSTALLATION menu, and enter:  the directory onto which you
"BLD",9774,1,148,0)
        have downloaded the host file, followed by
"BLD",9774,1,149,0)
        LAB_AUTORELEASE_1_0.KID, the host file name. 
"BLD",9774,1,150,0)
 
"BLD",9774,1,151,0)
3.      START UP KIDS
"BLD",9774,1,152,0)
        -------------
"BLD",9774,1,153,0)
        Start up the Kernel Installation and Distribution System Menu [XPD
"BLD",9774,1,154,0)
        MAIN]:
"BLD",9774,1,155,0)
        Edits and Distribution ...
"BLD",9774,1,156,0)
        Utilities ...
"BLD",9774,1,157,0)
        Installation ...
"BLD",9774,1,158,0)
 
"BLD",9774,1,159,0)
        Select Kernel Installation & Distribution System Option:
"BLD",9774,1,160,0)
        INStallation
"BLD",9774,1,161,0)
            ---
"BLD",9774,1,162,0)
            Load a Distribution
"BLD",9774,1,163,0)
            Print Transport Global
"BLD",9774,1,164,0)
            Compare Transport Global to Current System
"BLD",9774,1,165,0)
            Verify Checksums in Transport Global
"BLD",9774,1,166,0)
            Install Package(s)
"BLD",9774,1,167,0)
            Restart Install of Package(s)
"BLD",9774,1,168,0)
            Unload a Distribution
"BLD",9774,1,169,0)
            Backup a Transport Global
"BLD",9774,1,170,0)
4.      Select Installation Option:
"BLD",9774,1,171,0)
        --------------------------
"BLD",9774,1,172,0)
 
"BLD",9774,1,173,0)
   a.   Use the Load a Distribution and select Host File:
"BLD",9774,1,174,0)
        LAB_AUTORELEASE_1_0.KID
"BLD",9774,1,175,0)
 
"BLD",9774,1,176,0)
        NOTE: The following are OPTIONAL - (When prompted for the INSTALL
"BLD",9774,1,177,0)
        NAME, enter LA*5.2*88):
"BLD",9774,1,178,0)
 
"BLD",9774,1,179,0)
   b.   Backup a Transport Global - This option will create a backup 
"BLD",9774,1,180,0)
        message of any routines exported with this patch. It will not
"BLD",9774,1,181,0)
        backup any other changes such as DD's or templates.
"BLD",9774,1,182,0)
   c.   Compare Transport Global to Current System - This option will 
"BLD",9774,1,183,0)
        allow you to view all changes that will be made when this patch is
"BLD",9774,1,184,0)
        installed. It compares all components of this patch m (routines,
"BLD",9774,1,185,0)
        DD's, templates, etc.).
"BLD",9774,1,186,0)
   d.   Verify Checksums in Transport Global - This option will allow you
"BLD",9774,1,187,0)
        to ensure the integrity of the routines that are in the transport
"BLD",9774,1,188,0)
        global.
"BLD",9774,1,189,0)
   e.   Print Transport Global
"BLD",9774,1,190,0)
 
"BLD",9774,1,191,0)
5.      Select Installation Option: Install Package(s) **This is the step 
"BLD",9774,1,192,0)
        to start the installation of this KIDS patch:
"BLD",9774,1,193,0)
        --------------------------
"BLD",9774,1,194,0)
        **This is the step to start the installation of this KIDS patch:
"BLD",9774,1,195,0)
   a.    Choose the Install Package(s) option to start the patch install.
"BLD",9774,1,196,0)
   b.   When prompted 'Want KIDS to INHIBIT LOGONs during the install? 
"BLD",9774,1,197,0)
        YES//' answer NO
"BLD",9774,1,198,0)
   c.   When prompted 'Want to DISABLE Scheduled Options, Menu Options, 
"BLD",9774,1,199,0)
        and Protocols? YES//' answer NO.
"BLD",9774,1,200,0)
 
"BLD",9774,1,201,0)
 
"BLD",9774,1,202,0)
Routine Information:
"BLD",9774,1,203,0)
====================
"BLD",9774,1,204,0)
 
"BLD",9774,1,205,0)
 
"BLD",9774,1,206,0)
The second line of each of these routines now looks like:
"BLD",9774,1,207,0)
;;5.2;AUTOMATED LAB INSTRUMENTS;**[Patch List]**;Sep 27, 1994;Build 10
"BLD",9774,1,208,0)
 
"BLD",9774,1,209,0)
The checksums below are new checksums, and can be checked with 
"BLD",9774,1,210,0)
CHECK1^XTSUMBLD.
"BLD",9774,1,211,0)
 
"BLD",9774,1,212,0)
Routine Name: LR458
"BLD",9774,1,213,0)
    Before:       n/a   After: B3643881   **458** DELETED AFTER INSTALL
"BLD",9774,1,214,0)
Routine Name: LRDIQ
"BLD",9774,1,215,0)
    Before: B5636912    After: B6385366   **86,153,263,290,458**
"BLD",9774,1,216,0)
Routine Name: LRGP2
"BLD",9774,1,217,0)
    Before: B20236690   After: B21346835  **153,221,263,290,350,446,458**
"BLD",9774,1,218,0)
Routine Name: LRLISTPS
"BLD",9774,1,219,0)
    Before:       n/a   After: B17691343  **458**
"BLD",9774,1,220,0)
Routine Name: LRNIGHT
"BLD",9774,1,221,0)
    Before: B6404812    After: B7575682   **291,350,458**     
"BLD",9774,1,222,0)
Routine Name: LRVER5
"BLD",9774,1,223,0)
    Before: B147369024  After: B148324560 **42,153,283,286,350,458**
"BLD",9774,1,224,0)
Routine Name: LRVR3
"BLD",9774,1,225,0)
    Before: B71492279   After: B108418700 **42,121,153,286,291,350,458**
"BLD",9774,1,226,0)
Routine Name: LRVRAR
"BLD",9774,1,227,0)
    Before:       n/a   After: B69670046  **458**
"BLD",9774,1,228,0)
Routine Name: LRVRARU
"BLD",9774,1,229,0)
    Before:       n/a   After: B32878283  **458**
"BLD",9774,1,230,0)
 
"BLD",9774,1,231,0)
Routine list of preceding patches: 446
"BLD",9774,4,0)
^9.64PA^68.2^1
"BLD",9774,4,68.2,0)
68.2
"BLD",9774,4,68.2,2,0)
^9.641^68.23^1
"BLD",9774,4,68.2,2,68.23,0)
PROFILE  (sub-file)
"BLD",9774,4,68.2,2,68.23,1,0)
^9.6411^2.4^1
"BLD",9774,4,68.2,2,68.23,1,2.4,0)
AUTO RELEASE
"BLD",9774,4,68.2,222)
y^n^p^^^^n^^n
"BLD",9774,4,68.2,224)

"BLD",9774,4,"APDD",68.2,68.23)

"BLD",9774,4,"APDD",68.2,68.23,2.4)

"BLD",9774,4,"B",68.2,68.2)

"BLD",9774,6.3)
10
"BLD",9774,"ABPKG")
n
"BLD",9774,"INID")
^y
"BLD",9774,"INIT")
POST^LR458
"BLD",9774,"KRN",0)
^9.67PA^779.2^20
"BLD",9774,"KRN",.4,0)
.4
"BLD",9774,"KRN",.401,0)
.401
"BLD",9774,"KRN",.402,0)
.402
"BLD",9774,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",9774,"KRN",.402,"NM",1,0)
LRLLDFT    FILE #68.2^68.2^0
"BLD",9774,"KRN",.402,"NM","B","LRLLDFT    FILE #68.2",1)

"BLD",9774,"KRN",.403,0)
.403
"BLD",9774,"KRN",.5,0)
.5
"BLD",9774,"KRN",.84,0)
.84
"BLD",9774,"KRN",3.6,0)
3.6
"BLD",9774,"KRN",3.8,0)
3.8
"BLD",9774,"KRN",9.2,0)
9.2
"BLD",9774,"KRN",9.8,0)
9.8
"BLD",9774,"KRN",9.8,"NM",0)
^9.68A^9^8
"BLD",9774,"KRN",9.8,"NM",1,0)
LRVRAR^^0^B69815158
"BLD",9774,"KRN",9.8,"NM",2,0)
LRVRARU^^0^B32878283
"BLD",9774,"KRN",9.8,"NM",3,0)
LRVR3^^0^B108418700
"BLD",9774,"KRN",9.8,"NM",4,0)
LRGP2^^0^B21346835
"BLD",9774,"KRN",9.8,"NM",5,0)
LRLISTPS^^0^B17691343
"BLD",9774,"KRN",9.8,"NM",6,0)
LRNIGHT^^0^B7575682
"BLD",9774,"KRN",9.8,"NM",8,0)
LRDIQ^^0^B6385366
"BLD",9774,"KRN",9.8,"NM",9,0)
LRVER5^^0^B148324560
"BLD",9774,"KRN",9.8,"NM","B","LRDIQ",8)

"BLD",9774,"KRN",9.8,"NM","B","LRGP2",4)

"BLD",9774,"KRN",9.8,"NM","B","LRLISTPS",5)

"BLD",9774,"KRN",9.8,"NM","B","LRNIGHT",6)

"BLD",9774,"KRN",9.8,"NM","B","LRVER5",9)

"BLD",9774,"KRN",9.8,"NM","B","LRVR3",3)

"BLD",9774,"KRN",9.8,"NM","B","LRVRAR",1)

"BLD",9774,"KRN",9.8,"NM","B","LRVRARU",2)

"BLD",9774,"KRN",19,0)
19
"BLD",9774,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",9774,"KRN",19,"NM",1,0)
LRSUPER REPORTS^^2
"BLD",9774,"KRN",19,"NM",2,0)
LRLISTPS^^0
"BLD",9774,"KRN",19,"NM","B","LRLISTPS",2)

"BLD",9774,"KRN",19,"NM","B","LRSUPER REPORTS",1)

"BLD",9774,"KRN",19.1,0)
19.1
"BLD",9774,"KRN",101,0)
101
"BLD",9774,"KRN",409.61,0)
409.61
"BLD",9774,"KRN",771,0)
771
"BLD",9774,"KRN",779.2,0)
779.2
"BLD",9774,"KRN",870,0)
870
"BLD",9774,"KRN",8989.51,0)
8989.51
"BLD",9774,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",9774,"KRN",8989.51,"NM",1,0)
LR WORKLIST DATA CLEANUP^^0
"BLD",9774,"KRN",8989.51,"NM","B","LR WORKLIST DATA CLEANUP",1)

"BLD",9774,"KRN",8989.52,0)
8989.52
"BLD",9774,"KRN",8989.52,"NM",0)
^9.68A^1^1
"BLD",9774,"KRN",8989.52,"NM",1,0)
LR PKG^^0
"BLD",9774,"KRN",8989.52,"NM","B","LR PKG",1)

"BLD",9774,"KRN",8994,0)
8994
"BLD",9774,"KRN","B",.4,.4)

"BLD",9774,"KRN","B",.401,.401)

"BLD",9774,"KRN","B",.402,.402)

"BLD",9774,"KRN","B",.403,.403)

"BLD",9774,"KRN","B",.5,.5)

"BLD",9774,"KRN","B",.84,.84)

"BLD",9774,"KRN","B",3.6,3.6)

"BLD",9774,"KRN","B",3.8,3.8)

"BLD",9774,"KRN","B",9.2,9.2)

"BLD",9774,"KRN","B",9.8,9.8)

"BLD",9774,"KRN","B",19,19)

"BLD",9774,"KRN","B",19.1,19.1)

"BLD",9774,"KRN","B",101,101)

"BLD",9774,"KRN","B",409.61,409.61)

"BLD",9774,"KRN","B",771,771)

"BLD",9774,"KRN","B",779.2,779.2)

"BLD",9774,"KRN","B",870,870)

"BLD",9774,"KRN","B",8989.51,8989.51)

"BLD",9774,"KRN","B",8989.52,8989.52)

"BLD",9774,"KRN","B",8994,8994)

"BLD",9774,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9774,"QUES",0)
^9.62^^
"BLD",9774,"REQB",0)
^9.611^1^1
"BLD",9774,"REQB",1,0)
LR*5.2*446^2
"BLD",9774,"REQB","B","LR*5.2*446",1)

"FIA",68.2)
LOAD/WORK LIST
"FIA",68.2,0)
^LRO(68.2,
"FIA",68.2,0,0)
68.2
"FIA",68.2,0,1)
y^n^p^^^^n^^n
"FIA",68.2,0,10)

"FIA",68.2,0,11)

"FIA",68.2,0,"RLRO")

"FIA",68.2,0,"VR")
5.2^LR
"FIA",68.2,68.2)
1
"FIA",68.2,68.23)
1
"FIA",68.2,68.23,2.4)

"INIT")
POST^LR458
"IX",68.2,68.2,"AR",0)
68.2^AR^Indicates which profile is used for auto release of lab results.^R^^F^IR^W^68.23^^^^^S
"IX",68.2,68.2,"AR",.1,0)
^^4^4^3150518^
"IX",68.2,68.2,"AR",.1,1,0)
Used to flag which profile within a given load list will be used by the 
"IX",68.2,68.2,"AR",.1,2,0)
lab auto release process if lab has implemented auto release
"IX",68.2,68.2,"AR",.1,3,0)
functionality in conjunction with an external auto verification/user 
"IX",68.2,68.2,"AR",.1,4,0)
verification process/system.
"IX",68.2,68.2,"AR",1)
S ^LRO(68.2,"AR",X,DA(1),DA)=""
"IX",68.2,68.2,"AR",2)
K ^LRO(68.2,"AR",X,DA(1),DA)
"IX",68.2,68.2,"AR",2.5)
K ^LRO(68.2,"AR")
"IX",68.2,68.2,"AR",11.1,0)
^.114IA^1^1
"IX",68.2,68.2,"AR",11.1,1,0)
1^F^68.23^2.4^^1^F
"IX",68.2,68.23,"AR",0)
68.23^AR^Indicates which profile is used for auto release of lab results.^R^^F^IR^I^68.23^^^^^S
"IX",68.2,68.23,"AR",.1,0)
^^4^4^3150518^
"IX",68.2,68.23,"AR",.1,1,0)
Used to flag which profile within a given load list will be used by the 
"IX",68.2,68.23,"AR",.1,2,0)
lab auto release process if lab has implemented auto release functionality
"IX",68.2,68.23,"AR",.1,3,0)
in conjunction with an external auto verification/user verification
"IX",68.2,68.23,"AR",.1,4,0)
process/system.
"IX",68.2,68.23,"AR",1)
S ^LRO(68.2,DA(1),10,"AR",X,DA)=""
"IX",68.2,68.23,"AR",2)
K ^LRO(68.2,DA(1),10,"AR",X,DA)
"IX",68.2,68.23,"AR",2.5)
K ^LRO(68.2,DA(1),10,"AR")
"IX",68.2,68.23,"AR",11.1,0)
^.114IA^1^1
"IX",68.2,68.23,"AR",11.1,1,0)
1^F^68.23^2.4^^1^F
"KRN",.402,56,-1)
0^1
"KRN",.402,56,0)
LRLLDFT^3150508.1411^^68.2^^^3160621
"KRN",.402,56,"DR",1,68.2)
.02;.03;.04;.05;.06;.07;.08;.09;.1;.11;.14;50;
"KRN",.402,56,"DR",2,68.23)
2;2.1;2.2;2.3;2.4;
"KRN",19,920,-1)
2^1
"KRN",19,920,0)
LRSUPER REPORTS^Supervisor reports^^M^.5^^^^^^^14
"KRN",19,920,10,0)
^19.01IP^10^10
"KRN",19,920,10,10,0)
11601
"KRN",19,920,10,10,"^")
LRLISTPS
"KRN",19,920,"U")
SUPERVISOR REPORTS
"KRN",19,11601,-1)
0^2
"KRN",19,11601,0)
LRLISTPS^Summary List (Patient)^^R^^LRSUPER^^^^^^LAB SERVICE
"KRN",19,11601,1,0)
^^7^7^3150616^
"KRN",19,11601,1,1,0)
All results for a given patient for a given area for a given date. This
"KRN",19,11601,1,2,0)
report can serve as an 'audit trail' for a patient. Includes information
"KRN",19,11601,1,3,0)
on person placing order, person performing test, verifying person, and
"KRN",19,11601,1,4,0)
dates and times of specimen collection and test completion.  The report
"KRN",19,11601,1,5,0)
can be printed in an "extended" form, which includes the above mentioned
"KRN",19,11601,1,6,0)
information plus the test results and associated units/normals/LOINC
"KRN",19,11601,1,7,0)
coding and performing lab.
"KRN",19,11601,25)
EN^LRLISTPS
"KRN",19,11601,99)
55476,50281
"KRN",19,11601,"U")
SUMMARY LIST (PATIENT)
"KRN",8989.5,1526,0)
14;DIC(9.4,^LR WORKLIST DATA CLEANUP^1
"KRN",8989.5,1526,1)
2
"KRN",8989.51,3,0)
LR LAB COLLECT FUTURE^Lab Collect Days Allowed in Future^^^LAB COLLECT DAYS ALLOWED IN FUTURE^0
"KRN",8989.51,3,1)
N^1:370^Enter the number of days allowed to collect 'Lab Collect' future orders.
"KRN",8989.51,3,20,0)
^^2^2^3000211^^^^
"KRN",8989.51,3,20,1,0)
This is the maximum number of days that 'Lab Collect' orders may be
"KRN",8989.51,3,20,2,0)
placed.  The number may be specific to each hospital location.
"KRN",8989.51,3,30,0)
^8989.513I^4^4
"KRN",8989.51,3,30,1,0)
1^44
"KRN",8989.51,3,30,2,0)
2^4
"KRN",8989.51,3,30,3,0)
3^4.2
"KRN",8989.51,3,30,4,0)
4^9.4
"KRN",8989.51,19,0)
LR IGNORE HOLIDAYS^Lab Collects on Holidays^^^IGNORE HOLIDAYS
"KRN",8989.51,19,1)
Y^^Enter 'Yes' if full lab service operates on federal holidays.
"KRN",8989.51,19,20,0)
^^2^2^2950816^
"KRN",8989.51,19,20,1,0)
This indicates if this institution operates at full service during
"KRN",8989.51,19,20,2,0)
federal holidays.
"KRN",8989.51,19,30,0)
^8989.513I^2^2
"KRN",8989.51,19,30,1,0)
1^4.2
"KRN",8989.51,19,30,2,0)
2^9.4
"KRN",8989.51,20,0)
LR MAX DAYS CONTINUOUS^Maximum Days for Continuous Orders^^^MAXIMUM DAYS FOR CONTINUOUS ORDERS^0
"KRN",8989.51,20,1)
N^1:370^Enter the maximum number of days that multiple-continuous orders can be placed.
"KRN",8989.51,20,20,0)
^^2^2^3000211^^^^
"KRN",8989.51,20,20,1,0)
This is the maximum number of days that multiple-continuous orders may be
"KRN",8989.51,20,20,2,0)
placed.  The number may be specific to each hospital location.
"KRN",8989.51,20,30,0)
^8989.513I^3^3
"KRN",8989.51,20,30,1,0)
1^44
"KRN",8989.51,20,30,2,0)
2^4.2
"KRN",8989.51,20,30,3,0)
3^9.4
"KRN",8989.51,74,0)
LR COLLECT FRIDAY^Collect on Friday^^^COLLECT FRIDAY
"KRN",8989.51,74,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,74,20,0)
^^1^1^2951010^
"KRN",8989.51,74,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,74,30,0)
^8989.513I^2^2
"KRN",8989.51,74,30,1,0)
1^4.2
"KRN",8989.51,74,30,2,0)
2^9.4
"KRN",8989.51,75,0)
LR COLLECT THURSDAY^Collect on Thursday^^^COLLECT THURSDAY
"KRN",8989.51,75,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,75,20,0)
^^1^1^2951010^
"KRN",8989.51,75,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,75,30,0)
^8989.513I^2^2
"KRN",8989.51,75,30,1,0)
1^4.2
"KRN",8989.51,75,30,2,0)
2^9.4
"KRN",8989.51,76,0)
LR COLLECT WEDNESDAY^Collect on Wednesday^^^COLLECT WEDNESDAY
"KRN",8989.51,76,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,76,20,0)
^^1^1^2951010^
"KRN",8989.51,76,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,76,30,0)
^8989.513I^2^2
"KRN",8989.51,76,30,1,0)
1^4.2
"KRN",8989.51,76,30,2,0)
2^9.4
"KRN",8989.51,77,0)
LR COLLECT TUESDAY^Collect on Tuesday^^^COLLECT TUESDAY
"KRN",8989.51,77,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,77,20,0)
^^1^1^2951010^
"KRN",8989.51,77,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,77,30,0)
^8989.513I^2^2
"KRN",8989.51,77,30,1,0)
1^4.2
"KRN",8989.51,77,30,2,0)
2^9.4
"KRN",8989.51,78,0)
LR COLLECT MONDAY^Collect on Monday^^^COLLECT MONDAY
"KRN",8989.51,78,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,78,20,0)
^^1^1^2951010^
"KRN",8989.51,78,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,78,30,0)
^8989.513I^2^2
"KRN",8989.51,78,30,1,0)
1^4.2
"KRN",8989.51,78,30,2,0)
2^9.4
"KRN",8989.51,79,0)
LR COLLECT SUNDAY^Collect on Sunday^^^COLLECT SUNDAY
"KRN",8989.51,79,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,79,20,0)
^^1^1^2951010^
"KRN",8989.51,79,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,79,30,0)
^8989.513I^2^2
"KRN",8989.51,79,30,1,0)
1^4.2
"KRN",8989.51,79,30,2,0)
2^9.4
"KRN",8989.51,80,0)
LR COLLECT SATURDAY^Collect on Saturday^^^COLLECT SATURDAY
"KRN",8989.51,80,1)
Y^0:1^Enter 1 if routine collection is done on this day
"KRN",8989.51,80,20,0)
^^1^1^2951010^
"KRN",8989.51,80,20,1,0)
This determines if routine collection is done on this day.
"KRN",8989.51,80,30,0)
^8989.513I^2^2
"KRN",8989.51,80,30,1,0)
1^4.2
"KRN",8989.51,80,30,2,0)
2^9.4
"KRN",8989.51,700,0)
LR VER EA VERIFY BY UID^Default load/work list verify method^1^Accession Area^Default load/work list verify method^0
"KRN",8989.51,700,1)
S^0:Accession Number;1:Unique Identifier (UID);2:Only UID^Specify the default result verification method presented to user.
"KRN",8989.51,700,4,0)
^8989.514^1^1
"KRN",8989.51,700,4,1,0)
UID
"KRN",8989.51,700,4,"B","UID",1)

"KRN",8989.51,700,6)
P^68
"KRN",8989.51,700,20,0)
^8989.512^9^9^3070911^^^^
"KRN",8989.51,700,20,1,0)
Used to designate the default verification method presented to
"KRN",8989.51,700,20,2,0)
the user when verifying laboratory results in the "CH" subscript
"KRN",8989.51,700,20,3,0)
via options that use a load/work list. Parameter is associated
"KRN",8989.51,700,20,4,0)
with the accession area linked to the load/worklist profile
"KRN",8989.51,700,20,5,0)
selected by the user.
"KRN",8989.51,700,20,6,0)

"KRN",8989.51,700,20,7,0)
Parameter can be set at the package or user level. 
"KRN",8989.51,700,20,8,0)
User level takes precedence over division level.
"KRN",8989.51,700,20,9,0)
Site can also force verification by UID only.
"KRN",8989.51,700,30,0)
^8989.513I^2^2
"KRN",8989.51,700,30,1,0)
1^200
"KRN",8989.51,700,30,2,0)
2^9.4
"KRN",8989.51,704,0)
LR EGFR METHOD^EGFR Creatinine IDMS-traceable Method^0^IDMS-traceable^Creatinine IDMS-traceable Method^0
"KRN",8989.51,704,1)
Y^^Answer with yes/no if the Creatinine method is traceable to an IDMS method.
"KRN",8989.51,704,4,0)
^8989.514^2^2
"KRN",8989.51,704,4,1,0)
EGFR
"KRN",8989.51,704,4,2,0)
IDMS
"KRN",8989.51,704,4,"B","EGFR",1)

"KRN",8989.51,704,4,"B","IDMS",2)

"KRN",8989.51,704,6)
Y
"KRN",8989.51,704,20,0)
^8989.512^3^3^3111006^^^
"KRN",8989.51,704,20,1,0)
Used to designate if the EGFR calculation should calculate the
"KRN",8989.51,704,20,2,0)
EGFR based on a IDMS-traceable method. This parameter is configurable
"KRN",8989.51,704,20,3,0)
at both the package and division level.
"KRN",8989.51,704,30,0)
^8989.513I^2^2
"KRN",8989.51,704,30,1,0)
1^4
"KRN",8989.51,704,30,2,0)
2^9.4
"KRN",8989.51,705,0)
LR EGFR AGE CUTOFF^EGFR Patient's Age Cutoff^0^^Suppress EGFR When Patient's Age^0
"KRN",8989.51,705,1)
S^0:NEVER;1:<18 YEARS;2:>70 YEARS;3:BOTH^Select when the patient's age should suppress reporting of the patient's EGFR.
"KRN",8989.51,705,4,0)
^8989.514^1^1
"KRN",8989.51,705,4,1,0)
EGFR
"KRN",8989.51,705,4,"B","EGFR",1)

"KRN",8989.51,705,6)
^^
"KRN",8989.51,705,20,0)
^8989.512^5^5^3111006^^^^
"KRN",8989.51,705,20,1,0)
Used to designate if the EGFR calculation should not be performed 
"KRN",8989.51,705,20,2,0)
on creatinine when executing the delta check EGFR when the
"KRN",8989.51,705,20,3,0)
patient's age is <18 or >70. This parameter is configurable
"KRN",8989.51,705,20,4,0)
at both the package and division level and can be set for
"KRN",8989.51,705,20,5,0)
either or both age cutoffs.
"KRN",8989.51,705,30,0)
^8989.513I^2^2
"KRN",8989.51,705,30,1,0)
1^4
"KRN",8989.51,705,30,2,0)
2^9.4
"KRN",8989.51,706,0)
LR EGFR RESULT SUPPRESS^EGFR Result Cutoff^0^>60 Result Suppression^Report EGFR as >60^0
"KRN",8989.51,706,1)
Y^^Answer with yes/no if EGFR values >60 should be reported as ">60".
"KRN",8989.51,706,4,0)
^8989.514^1^1
"KRN",8989.51,706,4,1,0)
EGFR
"KRN",8989.51,706,4,"B","EGFR",1)

"KRN",8989.51,706,20,0)
^8989.512^4^4^3111006^^^
"KRN",8989.51,706,20,1,0)
Used to designate if the EGFR calculation should be suppressed
"KRN",8989.51,706,20,2,0)
when the value is >60. If enabled then ">60" is reported in
"KRN",8989.51,706,20,3,0)
lieu of the actual EGFR calculated value. This parameter is
"KRN",8989.51,706,20,4,0)
configurable at both the package and division level.
"KRN",8989.51,706,30,0)
^8989.513I^2^2
"KRN",8989.51,706,30,1,0)
1^4
"KRN",8989.51,706,30,2,0)
2^9.4
"KRN",8989.51,707,0)
LR VER EM VERIFY BY UID^Default manual verify method^0^^Default manual verify method^0
"KRN",8989.51,707,1)
S^0:Accession Number;1:Unique Identifier (UID);2:Only UID^Specify the default result verification method presented to user.
"KRN",8989.51,707,4,0)
^8989.514^1^1
"KRN",8989.51,707,4,1,0)
UID
"KRN",8989.51,707,4,"B","UID",1)

"KRN",8989.51,707,6)
^
"KRN",8989.51,707,20,0)
^8989.512^7^7^3070911^^^^
"KRN",8989.51,707,20,1,0)
Used to designate the default verification method presented to
"KRN",8989.51,707,20,2,0)
the user when verifying laboratory results in the "CH" subscript
"KRN",8989.51,707,20,3,0)
via options that do not use a load/work list.
"KRN",8989.51,707,20,4,0)
Parameter can be set at the package, division or user
"KRN",8989.51,707,20,5,0)
level. Division level takes precedence over the package level.
"KRN",8989.51,707,20,6,0)
User level takes precedence over division level.
"KRN",8989.51,707,20,7,0)
Site can also force verification by UID only.
"KRN",8989.51,707,30,0)
^8989.513I^3^3
"KRN",8989.51,707,30,1,0)
1^200
"KRN",8989.51,707,30,2,0)
2^4
"KRN",8989.51,707,30,3,0)
3^9.4
"KRN",8989.51,709,0)
LRAPRES1 AP ALERT^Send an alert after AP release^0^^Send alert for released AP^0
"KRN",8989.51,709,1)
Y
"KRN",8989.51,709,20,0)
^8989.512^2^2^3071116^^^^
"KRN",8989.51,709,20,1,0)
After Anatomic Pathology report is released, this will be the default 
"KRN",8989.51,709,20,2,0)
answer to the "Send an alert" message.
"KRN",8989.51,709,30,0)
^8989.513I^3^3
"KRN",8989.51,709,30,1,0)
1^200
"KRN",8989.51,709,30,2,0)
5^4
"KRN",8989.51,709,30,3,0)
10^9.4
"KRN",8989.51,710,0)
LR AP REPORT SELECTION^Default AP Report Selection Prompt^0^^AP Report Selection Default^0
"KRN",8989.51,710,1)
S^1:Accession Number;2:Unique Identifier (UID);3:Patient Name^Specify the default report selection method presented to user.
"KRN",8989.51,710,4,0)
^8989.514
"KRN",8989.51,710,30,0)
^8989.513I^3^3
"KRN",8989.51,710,30,1,0)
1^200
"KRN",8989.51,710,30,2,0)
2^4
"KRN",8989.51,710,30,3,0)
3^9.4
"KRN",8989.51,711,0)
LR AP SNOMED SYSTEM PRINT^Print SNOMED Code System^0^^Print SNOMED Version
"KRN",8989.51,711,1)
S^1:SNOMED I;2:SNOMED CT;3:BOTH^Select which version of SNOMED to print on AP reports
"KRN",8989.51,711,20,0)
^^2^2^3090227^
"KRN",8989.51,711,20,1,0)
Parameter to allow the site/division to indicate which version of SNOMED
"KRN",8989.51,711,20,2,0)
to print or display on Anatomic Pathology reports.
"KRN",8989.51,711,30,0)
^8989.513I^2^2
"KRN",8989.51,711,30,1,0)
1^4
"KRN",8989.51,711,30,2,0)
2^9.4
"KRN",8989.51,712,0)
LR MAPPING DEFAULT DIRECTORY^Lab STS Default Mapping Files Directory^0^^Default Directory^0
"KRN",8989.51,712,1)
F^3:245^The directory that contains the STS mapping files
"KRN",8989.51,712,4,0)
^8989.514^2^2
"KRN",8989.51,712,4,1,0)
MAPPING
"KRN",8989.51,712,4,2,0)
STANDARDIZATION
"KRN",8989.51,712,4,"B","MAPPING",1)

"KRN",8989.51,712,4,"B","STANDARDIZATION",2)

"KRN",8989.51,712,20,0)
^8989.512^5^5^3110105^^^^
"KRN",8989.51,712,20,1,0)
This parameter holds the name of the default directory
"KRN",8989.51,712,20,2,0)
which contains the STS mapping of standard code sets to VistA
"KRN",8989.51,712,20,3,0)
Laboratory system files.
"KRN",8989.51,712,20,4,0)
 
"KRN",8989.51,712,20,5,0)
Should be expressed as a full directory specification.
"KRN",8989.51,712,30,0)
^8989.513I^3^3
"KRN",8989.51,712,30,1,0)
1^200
"KRN",8989.51,712,30,2,0)
2^9.4
"KRN",8989.51,712,30,3,0)
3^4.2
"KRN",8989.51,714,0)
LR MAPPING DEFAULT FILESPEC^Lab STS Default Mapping Filespec^0^^Default FileSpec^0
"KRN",8989.51,714,1)
F^3:70^The filespec to screen the display of files
"KRN",8989.51,714,4,0)
^8989.514^2^2
"KRN",8989.51,714,4,1,0)
MAPPING
"KRN",8989.51,714,4,2,0)
STANDARDIZATION
"KRN",8989.51,714,4,"B","MAPPING",1)

"KRN",8989.51,714,4,"B","STANDARDIZATION",2)

"KRN",8989.51,714,20,0)
^8989.512^5^5^3110105^^^
"KRN",8989.51,714,20,1,0)
This parameter holds the file specification used to screen which
"KRN",8989.51,714,20,2,0)
files is a given directory are presented to the user for loading.
"KRN",8989.51,714,20,3,0)
These files contain the STS mapping of standard code sets to VistA
"KRN",8989.51,714,20,4,0)
Laboratory system files.
"KRN",8989.51,714,20,5,0)

"KRN",8989.51,714,30,0)
^8989.513I^3^3
"KRN",8989.51,714,30,1,0)
1^200
"KRN",8989.51,714,30,2,0)
2^9.4
"KRN",8989.51,714,30,3,0)
3^4.2
"KRN",8989.51,717,0)
LR CH GUI REPORT RIGHT MARGIN^Chemistry GUI Report Right Margin^0^^Chemistry GUI Report Right Margin^0
"KRN",8989.51,717,1)
N^80:240:0^Enter the value to be used for the right margin when formatting lab reports
"KRN",8989.51,717,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,717,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,717,20,2,0)
chemistry/hematology type laboratory reports within a GUI display/client.
"KRN",8989.51,717,20,3,0)

"KRN",8989.51,717,30,0)
^8989.513I^3^3
"KRN",8989.51,717,30,1,0)
1^200
"KRN",8989.51,717,30,2,0)
2^4
"KRN",8989.51,717,30,3,0)
3^9.4
"KRN",8989.51,718,0)
LR MI GUI REPORT RIGHT MARGIN^Microbiology GUI Report Right Margin^0^^Microbiology GUI Report Right Margin^0
"KRN",8989.51,718,1)
N^80:240:0^Enter the value to be used for the right margin when formatting lab reports
"KRN",8989.51,718,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,718,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,718,20,2,0)
microbiology type laboratory reports within a GUI display/client.
"KRN",8989.51,718,20,3,0)

"KRN",8989.51,718,30,0)
^8989.513I^3^3
"KRN",8989.51,718,30,1,0)
1^200
"KRN",8989.51,718,30,2,0)
2^4
"KRN",8989.51,718,30,3,0)
3^9.4
"KRN",8989.51,719,0)
LR AP GUI REPORT RIGHT MARGIN^AP GUI Report Right Margin^0^^AP GUI Report Right Margin^0
"KRN",8989.51,719,1)
N^80:240:0^Enter the value to be used for the right margin when foramtting lab reports
"KRN",8989.51,719,20,0)
^8989.512^3^3^3080421^^^^
"KRN",8989.51,719,20,1,0)
This is the value to use for the right margin (column) when formatting
"KRN",8989.51,719,20,2,0)
anatomic pathology type laboratory reports within a GUI display/client.
"KRN",8989.51,719,20,3,0)

"KRN",8989.51,719,30,0)
^8989.513I^3^3
"KRN",8989.51,719,30,1,0)
1^200
"KRN",8989.51,719,30,2,0)
2^4
"KRN",8989.51,719,30,3,0)
3^9.4
"KRN",8989.51,720,0)
LR MI VERIFY DISPLAY PROVIDER^Display Provider in Micro Result Entry^0^^Display Provider in Micro Result Entry^0
"KRN",8989.51,720,1)
Y^^Enter yes/no to display ordering provider information during micro result entry
"KRN",8989.51,720,20,0)
^8989.512^3^3^3111006^^^^
"KRN",8989.51,720,20,1,0)
This parameter allows the site/division/user to indicate if the ordering
"KRN",8989.51,720,20,2,0)
provider information should be displayed to the user during microbiology
"KRN",8989.51,720,20,3,0)
result data entry.
"KRN",8989.51,720,30,0)
^8989.513I^3^3
"KRN",8989.51,720,30,1,0)
1^200
"KRN",8989.51,720,30,2,0)
2^4
"KRN",8989.51,720,30,3,0)
3^9.4
"KRN",8989.51,722,0)
LR ACCESSION DEFAULT SPECIMEN^Default Accessioning Specimen^1^Lab Section^Default Specimen
"KRN",8989.51,722,1)
P^61^Select the Lab Section for this default specimen
"KRN",8989.51,722,4,0)
^8989.514^1^1
"KRN",8989.51,722,4,1,0)
AP DEFAULTS
"KRN",8989.51,722,4,"B","AP DEFAULTS",1)

"KRN",8989.51,722,6)
P^68
"KRN",8989.51,722,7)

"KRN",8989.51,722,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,722,20,0)
^8989.512^2^2^3081007^^^^
"KRN",8989.51,722,20,1,0)
Allows the package/facility/user to set a default topography presented
"KRN",8989.51,722,20,2,0)
to the user when accessioning specimens into the Laboratory system.
"KRN",8989.51,722,30,0)
^8989.513I^3^3
"KRN",8989.51,722,30,1,0)
1^200
"KRN",8989.51,722,30,2,0)
2^4
"KRN",8989.51,722,30,3,0)
3^9.4
"KRN",8989.51,723,0)
LR ACCESSION DEFAULT COL SAMP^Default Accessioning Collection Sample^1^Lab Section^Default Collection Sample
"KRN",8989.51,723,1)
P^62^Select the Lab Section for this default collection sample
"KRN",8989.51,723,4,0)
^8989.514^1^1
"KRN",8989.51,723,4,1,0)
AP DEFAULTS
"KRN",8989.51,723,4,"B","AP DEFAULTS",1)

"KRN",8989.51,723,6)
P^68
"KRN",8989.51,723,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,723,20,0)
^8989.512^4^4^3111216^^^^
"KRN",8989.51,723,20,1,0)
Allows the package/facility/user to set a default collection sample
"KRN",8989.51,723,20,2,0)
presented to the user when accessioning specimens into the Laboratory
"KRN",8989.51,723,20,3,0)
system.
"KRN",8989.51,723,20,4,0)

"KRN",8989.51,723,30,0)
^8989.513I^3^3
"KRN",8989.51,723,30,1,0)
1^200
"KRN",8989.51,723,30,2,0)
2^4
"KRN",8989.51,723,30,3,0)
3^9.4
"KRN",8989.51,724,0)
LR ACCESSION DEFAULT LAB TEST^Default Accessioning Lab Test^1^Lab Section^Default Laboratory Test
"KRN",8989.51,724,1)
P^60^Select the Lab Section for this default lab test
"KRN",8989.51,724,4,0)
^8989.514^1^1
"KRN",8989.51,724,4,1,0)
AP DEFAULTS
"KRN",8989.51,724,4,"B","AP DEFAULTS",1)

"KRN",8989.51,724,6)
P^68
"KRN",8989.51,724,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,724,20,0)
^8989.512^3^3^3081007^^^^
"KRN",8989.51,724,20,1,0)
Allows the package/facility/user to set a default laboratory test presented
"KRN",8989.51,724,20,2,0)
to the user when accessioning specimens into the Laboratory system.
"KRN",8989.51,724,20,3,0)

"KRN",8989.51,724,30,0)
^8989.513I^3^3
"KRN",8989.51,724,30,1,0)
1^200
"KRN",8989.51,724,30,2,0)
2^4
"KRN",8989.51,724,30,3,0)
3^9.4
"KRN",8989.51,725,0)
LR MANIFEST EXC PREV TEST^Exclude removed tests from building^1^Shipping Configuration^Exclude removed tests default^0
"KRN",8989.51,725,1)
Y^^Answer with yes/no to exclude previously removed tests building on manifest
"KRN",8989.51,725,6)
P^62.9
"KRN",8989.51,725,8)
I $P(^LAHM(62.9,Y,0),U,2)=DUZ(2),$P(^LAHM(62.9,Y,0),U,4)
"KRN",8989.51,725,20,0)
^8989.512^3^3^3120418^^^^
"KRN",8989.51,725,20,1,0)
Allows package or user to select the default value presented to the user 
"KRN",8989.51,725,20,2,0)
when building a shipping configuration to the prompt "Exclude previously
"KRN",8989.51,725,20,3,0)
removed tests from building?"
"KRN",8989.51,725,30,0)
^8989.513I^2^2
"KRN",8989.51,725,30,1,0)
1^200
"KRN",8989.51,725,30,2,0)
10^9.4
"KRN",8989.51,727,0)
LR AP SURGERY REFERENCE^Document Surgery Package Case Info^0^^Document Surgery Case Info^0
"KRN",8989.51,727,1)
Y^^Answer YES/NO if a source statement is included when copying surgical case info.
"KRN",8989.51,727,20,0)
^8989.512^3^3^3081126^
"KRN",8989.51,727,20,1,0)
Allows site/division to indicate when copying surgical case information from
"KRN",8989.51,727,20,2,0)
the Surgery package during surgical pathology login if a statement is also
"KRN",8989.51,727,20,3,0)
added to the copied information documenting the source of the copied information.
"KRN",8989.51,727,30,0)
^8989.513I^2^2
"KRN",8989.51,727,30,1,0)
1^4
"KRN",8989.51,727,30,2,0)
2^9.4
"KRN",8989.51,728,0)
LR MI VERIFY CPRS ALERT^Prompt CPRS Alert in Micro Result Entry^0^^Send CPRS Alert in Micro Result Entry^0
"KRN",8989.51,728,1)
S^0:Don't Ask;1:Ask - Default NO;2:Ask - Default YES^Specify if user should be prompted to send a CPRS Alert
"KRN",8989.51,728,4,0)
^8989.514^1^1
"KRN",8989.51,728,4,1,0)
MICRO
"KRN",8989.51,728,4,"B","MICRO",1)

"KRN",8989.51,728,20,0)
^8989.512^6^6^3090508^^
"KRN",8989.51,728,20,1,0)
Used to allow the user to determine if they want to be prompted
"KRN",8989.51,728,20,2,0)
to send a CPRS alert after editing a microbiology accession.
"KRN",8989.51,728,20,3,0)
 
"KRN",8989.51,728,20,4,0)
The user can indicate:
"KRN",8989.51,728,20,5,0)
 1. They do not want to be asked
"KRN",8989.51,728,20,6,0)
 2. They want to be asked with a default of YES/NO to send an alert.
"KRN",8989.51,728,30,0)
^8989.513I^3^3
"KRN",8989.51,728,30,1,0)
1^200
"KRN",8989.51,728,30,2,0)
2^4
"KRN",8989.51,728,30,3,0)
3^9.4
"KRN",8989.51,729,0)
LR CH VERIFY CPRS ALERT^Prompt CPRS Alert in CH Result Entry^0^^Send CPRS Alert in CH Result Entry^0
"KRN",8989.51,729,1)
S^0:Don't Ask;1:Ask - Default NO;2:Ask - Default YES^Specify if user should be prompted to send a CPRS Alert
"KRN",8989.51,729,4,0)
^8989.514^1^1
"KRN",8989.51,729,4,1,0)
CHEM/HEME
"KRN",8989.51,729,4,"B","CHEM/HEME",1)

"KRN",8989.51,729,20,0)
^^6^6^3090629^
"KRN",8989.51,729,20,1,0)
Used to allow the user to determine if they want to be prompted
"KRN",8989.51,729,20,2,0)
to send a CPRS alert after editing a Chem/Heme accession.
"KRN",8989.51,729,20,3,0)
 
"KRN",8989.51,729,20,4,0)
The user can indicate:
"KRN",8989.51,729,20,5,0)
 1. They do not want to be asked
"KRN",8989.51,729,20,6,0)
 2. They want to be asked with a default of YES/NO to send an alert.
"KRN",8989.51,729,30,0)
^8989.513I^3^3
"KRN",8989.51,729,30,1,0)
1^200
"KRN",8989.51,729,30,2,0)
2^4
"KRN",8989.51,729,30,3,0)
3^9.4
"KRN",8989.51,730,0)
LR REPORTS FACILITY PRINT^Print Reporting/Printing Facility^0^^Print Reporting/Printing Facility^0
"KRN",8989.51,730,1)
S^0:None;1:Reporting Facility;2:Printing Facility;3:Both^Should name of reporting and/or printing facility appear on Lab reports.
"KRN",8989.51,730,4,0)
^8989.514^1^1
"KRN",8989.51,730,4,1,0)
REPORTS
"KRN",8989.51,730,4,"B","REPORTS",1)

"KRN",8989.51,730,20,0)
^^6^6^3091110^
"KRN",8989.51,730,20,1,0)
 
"KRN",8989.51,730,20,2,0)
Determines if the name and address of the:
"KRN",8989.51,730,20,3,0)
 1. Laboratory that is responsible for the report display on the Laboratory report.
"KRN",8989.51,730,20,4,0)
 2. Facility where the report is printed display on the Laboratory report.
"KRN",8989.51,730,20,5,0)
 3. Both names display on the Laboratory report.
"KRN",8989.51,730,20,6,0)

"KRN",8989.51,730,30,0)
^8989.513I^3^2
"KRN",8989.51,730,30,2,0)
1^4
"KRN",8989.51,730,30,3,0)
2^9.4
"KRN",8989.51,731,0)
LR MANIFEST DEFLT ACCESSION^Use default accession dates^1^Shipping Configuration^Use default accession dates default^0
"KRN",8989.51,731,1)
Y^^Answer with yes/no to Use default accession dates prompt
"KRN",8989.51,731,6)
P^62.9
"KRN",8989.51,731,8)
I $P(^LAHM(62.9,Y,0),U,2)=DUZ(2),$P(^LAHM(62.9,Y,0),U,4)
"KRN",8989.51,731,20,0)
^8989.512^3^3^3120418^^^^
"KRN",8989.51,731,20,1,0)
Allows package or user to select the default value presented to the user 
"KRN",8989.51,731,20,2,0)
when building a shipping configuration to the prompt "Use default 
"KRN",8989.51,731,20,3,0)
accession dates?"
"KRN",8989.51,731,30,0)
^8989.513I^2^2
"KRN",8989.51,731,30,1,0)
1^200
"KRN",8989.51,731,30,2,0)
10^9.4
"KRN",8989.51,732,0)
LR ASK PERFORMING LAB MICRO^Ask Performing Lab Micro^0^^Ask Performing Lab for MICRO^0
"KRN",8989.51,732,1)
Y^^Enter yes to be prompted for Performing Lab for Microbiology tests.
"KRN",8989.51,732,4,0)
^8989.514^1^1
"KRN",8989.51,732,4,1,0)
PERFORMING LAB
"KRN",8989.51,732,4,"B","PERFORMING LAB",1)

"KRN",8989.51,732,6)

"KRN",8989.51,732,20,0)
^8989.512^5^5^3111028^^^^
"KRN",8989.51,732,20,1,0)
Enter Yes to be prompted for Performing Lab.
"KRN",8989.51,732,20,2,0)
Enter No to not be prompted for Performing Lab.
"KRN",8989.51,732,20,3,0)
The performing lab is the user's 'Default Performing Laboratory' parameter
"KRN",8989.51,732,20,4,0)
and if the parameter is not set for the user it defaults to the user's
"KRN",8989.51,732,20,5,0)
Institution (DUZ(2)).
"KRN",8989.51,732,30,0)
^8989.513I^3^3
"KRN",8989.51,732,30,1,0)
1^200
"KRN",8989.51,732,30,2,0)
2^4
"KRN",8989.51,732,30,3,0)
3^9.4
"KRN",8989.51,733,0)
LR ASK PERFORMING LAB AP^Ask Performing Lab AP^0^^Ask Performing Lab AP^0
"KRN",8989.51,733,1)
Y^^Enter yes to be prompted for Performing Lab for Anatomic Pathology tests.
"KRN",8989.51,733,4,0)
^8989.514^1^1
"KRN",8989.51,733,4,1,0)
PERFORMING LAB
"KRN",8989.51,733,4,"B","PERFORMING LAB",1)

"KRN",8989.51,733,6)

"KRN",8989.51,733,20,0)
^8989.512^5^5^3111205^^^^
"KRN",8989.51,733,20,1,0)
Enter Yes to be prompted for Performing Lab.
"KRN",8989.51,733,20,2,0)
Enter No to not be prompted for Performing Lab.
"KRN",8989.51,733,20,3,0)
The performing lab is the user's 'Default Performing Laboratory' parameter
"KRN",8989.51,733,20,4,0)
and if the parameter is not set for the user it defaults to the user's
"KRN",8989.51,733,20,5,0)
Institution (DUZ(2)).
"KRN",8989.51,733,30,0)
^8989.513I^3^3
"KRN",8989.51,733,30,1,0)
1^200
"KRN",8989.51,733,30,2,0)
2^4
"KRN",8989.51,733,30,3,0)
3^9.4
"KRN",8989.51,778,0)
LR AP DEFAULT ACCESSION NUMBER^Method of Assigning AP Accession Number^1^Lab Section^Default Method
"KRN",8989.51,778,1)
S^1:First Available Number;2:Next Available Sequential Number^Select the method the system will use to assign a default accession number.
"KRN",8989.51,778,4,0)
^8989.514^1^1
"KRN",8989.51,778,4,1,0)
AP DEFAULTS
"KRN",8989.51,778,4,"B","AP DEFAULTS",1)

"KRN",8989.51,778,6)
P^68
"KRN",8989.51,778,8)
I $P(^(0),U,2)?1(1"SP",1"CY",1"EM")
"KRN",8989.51,778,20,0)
^^21^21^3121031^
"KRN",8989.51,778,20,1,0)
When an Anatomic Pathology (AP) case is accessioned, this parameter will 
"KRN",8989.51,778,20,2,0)
control how the system should assign a default accession number to the 
"KRN",8989.51,778,20,3,0)
case being logged in. (Note: The user will still be able to override the 
"KRN",8989.51,778,20,4,0)
default, and select a different accession number, if they so choose).
"KRN",8989.51,778,20,5,0)
 
"KRN",8989.51,778,20,6,0)
'First Available Number' - The system will start searching from number 
"KRN",8989.51,778,20,7,0)
one, and the first available accession number that is found in that
"KRN",8989.51,778,20,8,0)
accession area will be used as the default accession number for the new
"KRN",8989.51,778,20,9,0)
case being logged in. Choosing this method will minimize the likelihood of
"KRN",8989.51,778,20,10,0)
having any gaps in the accession numbering, however, there is the
"KRN",8989.51,778,20,11,0)
possibility that some accessions might be out of sequence.
"KRN",8989.51,778,20,12,0)
 
"KRN",8989.51,778,20,13,0)
'Next Available Sequential Number' - The system will start searching from 
"KRN",8989.51,778,20,14,0)
the last accession number that was logged in, and the next available 
"KRN",8989.51,778,20,15,0)
number that is found in that accession area will be used as the default 
"KRN",8989.51,778,20,16,0)
accession number for the new case being logged in. Choosing this method 
"KRN",8989.51,778,20,17,0)
should better keep the accession numbers in sequence, but there is the 
"KRN",8989.51,778,20,18,0)
possibility that some gaps in the numbering might be introduced.
"KRN",8989.51,778,20,19,0)
 
"KRN",8989.51,778,20,20,0)
If no selection is made, the system will default to 'First Available 
"KRN",8989.51,778,20,21,0)
Number'.
"KRN",8989.51,778,30,0)
^8989.513I^1^1
"KRN",8989.51,778,30,1,0)
10^9.4
"KRN",8989.51,798,-1)
0^1
"KRN",8989.51,798,0)
LR WORKLIST DATA CLEANUP^Days to keep of instrument data^1^LOAD/WORK LIST^Number of days to keep in LAH global^0
"KRN",8989.51,798,1)
N^0:365:0^Answer with the number of days to keep in LAH before automatic purge
"KRN",8989.51,798,6)
P^68.2
"KRN",8989.51,798,8)

"KRN",8989.51,798,20,0)
2^8989.512^2^2^3160129^
"KRN",8989.51,798,20,1,0)
Allows site to specify the number of days of instrument data to keep in 
"KRN",8989.51,798,20,2,0)
LAH global before it's automatically purged by nightly process.
"KRN",8989.51,798,30,0)
^8989.513I^2^1
"KRN",8989.51,798,30,2,0)
10^9.4
"KRN",8989.52,55,-1)
0^1
"KRN",8989.52,55,0)
LR PKG^Lab Package Level Parameters^9.4
"KRN",8989.52,55,10,0)
^8989.521IA^40^37
"KRN",8989.52,55,10,1,0)
1^LR COLLECT MONDAY
"KRN",8989.52,55,10,2,0)
2^LR COLLECT TUESDAY
"KRN",8989.52,55,10,3,0)
3^LR COLLECT WEDNESDAY
"KRN",8989.52,55,10,4,0)
4^LR COLLECT THURSDAY
"KRN",8989.52,55,10,5,0)
5^LR COLLECT FRIDAY
"KRN",8989.52,55,10,6,0)
6^LR COLLECT SATURDAY
"KRN",8989.52,55,10,7,0)
7^LR COLLECT SUNDAY
"KRN",8989.52,55,10,8,0)
8^LR IGNORE HOLIDAYS
"KRN",8989.52,55,10,10,0)
11^LR EGFR METHOD
"KRN",8989.52,55,10,11,0)
12^LR EGFR AGE CUTOFF
"KRN",8989.52,55,10,12,0)
13^LR EGFR RESULT SUPPRESS
"KRN",8989.52,55,10,13,0)
9.2^LR VER EA VERIFY BY UID
"KRN",8989.52,55,10,14,0)
9.1^LR VER EM VERIFY BY UID
"KRN",8989.52,55,10,15,0)
20^LRAPRES1 AP ALERT
"KRN",8989.52,55,10,16,0)
21^LR AP REPORT SELECTION
"KRN",8989.52,55,10,17,0)
24^LR AP SNOMED SYSTEM PRINT
"KRN",8989.52,55,10,18,0)
50^LR CH GUI REPORT RIGHT MARGIN
"KRN",8989.52,55,10,19,0)
52^LR MI GUI REPORT RIGHT MARGIN
"KRN",8989.52,55,10,20,0)
54^LR AP GUI REPORT RIGHT MARGIN
"KRN",8989.52,55,10,21,0)
9.3^LR MI VERIFY DISPLAY PROVIDER
"KRN",8989.52,55,10,22,0)
130.1^LR ACCESSION DEFAULT SPECIMEN
"KRN",8989.52,55,10,23,0)
130.2^LR ACCESSION DEFAULT COL SAMP
"KRN",8989.52,55,10,24,0)
130.3^LR ACCESSION DEFAULT LAB TEST
"KRN",8989.52,55,10,26,0)
25^LR AP SURGERY REFERENCE
"KRN",8989.52,55,10,27,0)
9.35^LR MI VERIFY CPRS ALERT
"KRN",8989.52,55,10,28,0)
9.36^LR CH VERIFY CPRS ALERT
"KRN",8989.52,55,10,29,0)
8.1^LR LAB COLLECT FUTURE
"KRN",8989.52,55,10,30,0)
8.11^LR MAX DAYS CONTINUOUS
"KRN",8989.52,55,10,31,0)
200^LR REPORTS FACILITY PRINT
"KRN",8989.52,55,10,33,0)
900^LR MAPPING DEFAULT DIRECTORY
"KRN",8989.52,55,10,34,0)
900.1^LR MAPPING DEFAULT FILESPEC
"KRN",8989.52,55,10,35,0)
22^LR ASK PERFORMING LAB AP
"KRN",8989.52,55,10,36,0)
23^LR ASK PERFORMING LAB MICRO
"KRN",8989.52,55,10,37,0)
150.1^LR MANIFEST EXC PREV TEST
"KRN",8989.52,55,10,38,0)
150.2^LR MANIFEST DEFLT ACCESSION
"KRN",8989.52,55,10,39,0)
120^LR AP DEFAULT ACCESSION NUMBER
"KRN",8989.52,55,10,40,0)
210^LR WORKLIST DATA CLEANUP
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"ORD",21,8989.52)
8989.52;21;1;;PAR2E1^XPDTA2;PAR2F1^XPDIA3;PAR2E1^XPDIA3;PAR2F2^XPDIA3;;PAR2DEL^XPDIA3(%)
"ORD",21,8989.52,0)
PARAMETER TEMPLATE
"PKG",14,-1)
1^1
"PKG",14,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",14,20,0)
^9.402P^1^1
"PKG",14,20,1,0)
2^^LRXDRPT
"PKG",14,20,1,1)

"PKG",14,20,"B",2,1)

"PKG",14,22,0)
^9.49I^1^1
"PKG",14,22,1,0)
5.2^2940927^2960610
"PKG",14,22,1,"PAH",1,0)
458^3160628
"PKG",14,22,1,"PAH",1,1,0)
^^231^231^3160628
"PKG",14,22,1,"PAH",1,1,1,0)
Associated Patches:(v)LR*5.2*446 <<= must be installed BEFORE `LR*5.2*458'
"PKG",14,22,1,"PAH",1,1,2,0)
 
"PKG",14,22,1,"PAH",1,1,3,0)
Subject:  LABORATORY AUTO VERICATION & AUTO RELEASE
"PKG",14,22,1,"PAH",1,1,4,0)
 
"PKG",14,22,1,"PAH",1,1,5,0)
Category:       ROUTINE
"PKG",14,22,1,"PAH",1,1,6,0)
                ENHANCEMENT
"PKG",14,22,1,"PAH",1,1,7,0)
                DATA DICTIONARY
"PKG",14,22,1,"PAH",1,1,8,0)
 
"PKG",14,22,1,"PAH",1,1,9,0)
Description:
"PKG",14,22,1,"PAH",1,1,10,0)
===========
"PKG",14,22,1,"PAH",1,1,11,0)
The build for this patch is distributed as part of a multi-package build 
"PKG",14,22,1,"PAH",1,1,12,0)
that contains LR*5.2*458 and LA*5.2*88 and contains functionality to 
"PKG",14,22,1,"PAH",1,1,13,0)
enable Auto Verification and Auto Release of normal lab results.  
"PKG",14,22,1,"PAH",1,1,14,0)
Initially developed at the Kansas City VAMC, this new process involves 
"PKG",14,22,1,"PAH",1,1,15,0)
automatic review and release of test results based on lab-established set 
"PKG",14,22,1,"PAH",1,1,16,0)
of boundaries, also referred as rules, rule sets, and algorithms.  Lab 
"PKG",14,22,1,"PAH",1,1,17,0)
results that are in a "normal" range, as pre-determined by the 
"PKG",14,22,1,"PAH",1,1,18,0)
laboratory, will transmit directly from the middleware to VistA lab files 
"PKG",14,22,1,"PAH",1,1,19,0)
and on to Computerized Patient Record System (CPRS) without the 
"PKG",14,22,1,"PAH",1,1,20,0)
intermediate step of requiring a lab technologist to manually review and 
"PKG",14,22,1,"PAH",1,1,21,0)
sign off on these normal lab results.  This process will eliminate the 
"PKG",14,22,1,"PAH",1,1,22,0)
need for a qualified technologist to manually approve all "normal" 
"PKG",14,22,1,"PAH",1,1,23,0)
results before those results are filed in VistA Lab files and available 
"PKG",14,22,1,"PAH",1,1,24,0)
for clinicians to view in CPRS. 
"PKG",14,22,1,"PAH",1,1,25,0)
 
"PKG",14,22,1,"PAH",1,1,26,0)
Each VAMC site will determine which instruments will use this 
"PKG",14,22,1,"PAH",1,1,27,0)
functionality as it can set up on an instrument by instrument basis.  
"PKG",14,22,1,"PAH",1,1,28,0)
Essentially VistA Lab instruments are set up as either being available 
"PKG",14,22,1,"PAH",1,1,29,0)
for auto verification or not available for auto verification.  If an 
"PKG",14,22,1,"PAH",1,1,30,0)
instrument is set up for auto verification, then a lab result passing the 
"PKG",14,22,1,"PAH",1,1,31,0)
rule set will be filed by the middleware in VistA lab files and available 
"PKG",14,22,1,"PAH",1,1,32,0)
in CPRS and a lab result that cannot pass the rule set will be held in 
"PKG",14,22,1,"PAH",1,1,33,0)
the middleware system for review by a lab technologist. 
"PKG",14,22,1,"PAH",1,1,34,0)
 
"PKG",14,22,1,"PAH",1,1,35,0)
In support of this auto verification and auto release functionality, this 
"PKG",14,22,1,"PAH",1,1,36,0)
patch will add two new application proxy users.  LRLAB AUTO RELEASE is 
"PKG",14,22,1,"PAH",1,1,37,0)
used to indicate that the results in VistA Lab were released by an 
"PKG",14,22,1,"PAH",1,1,38,0)
automated Lab process without human interventions.  LRLAB, AUTO VERIFY is 
"PKG",14,22,1,"PAH",1,1,39,0)
used to indicate that the results were "approved" by an automated process 
"PKG",14,22,1,"PAH",1,1,40,0)
using a rules based system.
"PKG",14,22,1,"PAH",1,1,41,0)
 
"PKG",14,22,1,"PAH",1,1,42,0)
--------------------------------------------------------------------------
"PKG",14,22,1,"PAH",1,1,43,0)
 
"PKG",14,22,1,"PAH",1,1,44,0)
Patch Components
"PKG",14,22,1,"PAH",1,1,45,0)
================
"PKG",14,22,1,"PAH",1,1,46,0)
 
"PKG",14,22,1,"PAH",1,1,47,0)
Files & Fields Associated:
"PKG",14,22,1,"PAH",1,1,48,0)
 
"PKG",14,22,1,"PAH",1,1,49,0)
File Name (Number)     Field Name (Number)           New/Modified/Deleted
"PKG",14,22,1,"PAH",1,1,50,0)
------------------     -------------------           --------------------
"PKG",14,22,1,"PAH",1,1,51,0)
LOAD/WORK LIST (#68.2) PROFILE (#68.23), AUTO RELEASE (#2.4)  New
"PKG",14,22,1,"PAH",1,1,52,0)
 
"PKG",14,22,1,"PAH",1,1,53,0)
Parameter Definitions Associated:
"PKG",14,22,1,"PAH",1,1,54,0)
 
"PKG",14,22,1,"PAH",1,1,55,0)
Parameter Definition Name             New/Modified/Deleted
"PKG",14,22,1,"PAH",1,1,56,0)
-------------------------             --------------------
"PKG",14,22,1,"PAH",1,1,57,0)
LR WORKLIST DATA CLEANUP              New
"PKG",14,22,1,"PAH",1,1,58,0)
 
"PKG",14,22,1,"PAH",1,1,59,0)
Parameter Template                    New/Modified/Deleted
"PKG",14,22,1,"PAH",1,1,60,0)
-------------------------             --------------------
"PKG",14,22,1,"PAH",1,1,61,0)
LR PKG                                Modified
"PKG",14,22,1,"PAH",1,1,62,0)
 
"PKG",14,22,1,"PAH",1,1,63,0)
Input Templates Associated:
"PKG",14,22,1,"PAH",1,1,64,0)
 
"PKG",14,22,1,"PAH",1,1,65,0)
Input Template                          New/Modified/Deleted
"PKG",14,22,1,"PAH",1,1,66,0)
----------------------------------      --------------------
"PKG",14,22,1,"PAH",1,1,67,0)
LRLLDFT                                 New
"PKG",14,22,1,"PAH",1,1,68,0)
 
"PKG",14,22,1,"PAH",1,1,69,0)
Options Associated:
"PKG",14,22,1,"PAH",1,1,70,0)
 
"PKG",14,22,1,"PAH",1,1,71,0)
Option Name                             Type      New/Modified/Deleted
"PKG",14,22,1,"PAH",1,1,72,0)
-----------                             ----      --------------------
"PKG",14,22,1,"PAH",1,1,73,0)
Summary List (Patient) [LRLISTPS]       Routine   New
"PKG",14,22,1,"PAH",1,1,74,0)
 
"PKG",14,22,1,"PAH",1,1,75,0)
 
"PKG",14,22,1,"PAH",1,1,76,0)
New Service Requests (NSRs):
"PKG",14,22,1,"PAH",1,1,77,0)
==============================
"PKG",14,22,1,"PAH",1,1,78,0)
NSR# 20131009: Employ laboratory autoverification in the Veterans Health 
"PKG",14,22,1,"PAH",1,1,79,0)
Administration. 
"PKG",14,22,1,"PAH",1,1,80,0)
 
"PKG",14,22,1,"PAH",1,1,81,0)
Test Sites:
"PKG",14,22,1,"PAH",1,1,82,0)
===========
"PKG",14,22,1,"PAH",1,1,83,0)
Kansas City VAMC (Alpha)
"PKG",14,22,1,"PAH",1,1,84,0)
Tucson (Beta)
"PKG",14,22,1,"PAH",1,1,85,0)
Tampa (Beta)
"PKG",14,22,1,"PAH",1,1,86,0)
Iowa City (Beta)
"PKG",14,22,1,"PAH",1,1,87,0)
Fresno (Beta)
"PKG",14,22,1,"PAH",1,1,88,0)
 
"PKG",14,22,1,"PAH",1,1,89,0)
 
"PKG",14,22,1,"PAH",1,1,90,0)
Software and Documentation Retrieval Information
"PKG",14,22,1,"PAH",1,1,91,0)
 ==============================
"PKG",14,22,1,"PAH",1,1,92,0)
 VistA Laboratory patch LR*5.2*458 software is distributed by Host File, 
"PKG",14,22,1,"PAH",1,1,93,0)
along with LA*5.2*88.  Software is available on the ANONYMOUS.SOFTWARE 
"PKG",14,22,1,"PAH",1,1,94,0)
directory at one of the following Office of Information (OI) Field 
"PKG",14,22,1,"PAH",1,1,95,0)
Offices.  The preferred method is to retrieve the file using Secure File
"PKG",14,22,1,"PAH",1,1,96,0)
Transfer Protocol (SFTP) from: download.vista.domain.ext, which transmits
"PKG",14,22,1,"PAH",1,1,97,0)
files from the first available FTP server. Sites may also select to retrieve
"PKG",14,22,1,"PAH",1,1,98,0)
documentation directly from a specific server as follows: 
"PKG",14,22,1,"PAH",1,1,99,0)
        Albany                     ftp.fo-albany.domain.ext
"PKG",14,22,1,"PAH",1,1,100,0)
        Hines                      ftp.fo-hines.domain.ext
"PKG",14,22,1,"PAH",1,1,101,0)
        Salt Lake City             ftp.fo-slc.domain.ext
"PKG",14,22,1,"PAH",1,1,102,0)
 
"PKG",14,22,1,"PAH",1,1,103,0)
File Name                   Contents               Retrieval Format
"PKG",14,22,1,"PAH",1,1,104,0)
------------------          --------------------   ----------------
"PKG",14,22,1,"PAH",1,1,105,0)
LAB_AUTORELEASE_1_0.KID     Host File containing       ASCII
"PKG",14,22,1,"PAH",1,1,106,0)
                            KIDS software distribution
"PKG",14,22,1,"PAH",1,1,107,0)
 
"PKG",14,22,1,"PAH",1,1,108,0)
The VistA Documentation Library (VDL) web site will also contain 
"PKG",14,22,1,"PAH",1,1,109,0)
 
"PKG",14,22,1,"PAH",1,1,110,0)
LR_52_458_LA_52_88 Release Notes                       Binary
"PKG",14,22,1,"PAH",1,1,111,0)
 for LR*5.2*458 and LA*5.2*88
"PKG",14,22,1,"PAH",1,1,112,0)
 
"PKG",14,22,1,"PAH",1,1,113,0)
Lab AutoRelease 1.0 User Guide                         Binary
"PKG",14,22,1,"PAH",1,1,114,0)
 
"PKG",14,22,1,"PAH",1,1,115,0)
Lab AutoRelease 1.0 Technical Manual                   Binary
"PKG",14,22,1,"PAH",1,1,116,0)
 
"PKG",14,22,1,"PAH",1,1,117,0)
Lab UI HL V1.6 Upgrade Installation                    Binary
"PKG",14,22,1,"PAH",1,1,118,0)
 and User Guide LA*5.2*66
"PKG",14,22,1,"PAH",1,1,119,0)
 
"PKG",14,22,1,"PAH",1,1,120,0)
Lab UI HL V1.6 Upgrade Interface                       Binary
"PKG",14,22,1,"PAH",1,1,121,0)
 Specifications Document 
"PKG",14,22,1,"PAH",1,1,122,0)
 
"PKG",14,22,1,"PAH",1,1,123,0)
This website is usually updated within 1-3 days of the patch release date.
"PKG",14,22,1,"PAH",1,1,124,0)
The VDL web address for Laboratory Universal Interface user documentation
"PKG",14,22,1,"PAH",1,1,125,0)
is: http://www.va.gov/vdl/application.asp?appid=120
"PKG",14,22,1,"PAH",1,1,126,0)
 
"PKG",14,22,1,"PAH",1,1,127,0)
Installation Instructions
"PKG",14,22,1,"PAH",1,1,128,0)
=========================
"PKG",14,22,1,"PAH",1,1,129,0)
 
"PKG",14,22,1,"PAH",1,1,130,0)
This patch, LR*5.2*458, is part of a combined build for Autoverification 
"PKG",14,22,1,"PAH",1,1,131,0)
Enhancement patch.  This patch may be loaded with users on the system.  
"PKG",14,22,1,"PAH",1,1,132,0)
You may want to install it during non-peak hours.  Installation will take 
"PKG",14,22,1,"PAH",1,1,133,0)
less than 10 minutes.
"PKG",14,22,1,"PAH",1,1,134,0)
 
"PKG",14,22,1,"PAH",1,1,135,0)
Refer to the LR_52_458_LA_52_88 Release Notes referenced above for 
"PKG",14,22,1,"PAH",1,1,136,0)
complete instructions on install and post installation configuration.
"PKG",14,22,1,"PAH",1,1,137,0)
 
"PKG",14,22,1,"PAH",1,1,138,0)
1.      DOWNLOAD HOST KIDS FILE
"PKG",14,22,1,"PAH",1,1,139,0)
        ----------------------
"PKG",14,22,1,"PAH",1,1,140,0)
        Download the KIDS file LAB_AUTORELEASE_1_0.KID from the 
"PKG",14,22,1,"PAH",1,1,141,0)
        ANONYMOUS.SOFTWARE directory of Albany, Hines, or the Salt Lake
"PKG",14,22,1,"PAH",1,1,142,0)
        OIFO to the appropriate directory on your system.
"PKG",14,22,1,"PAH",1,1,143,0)
 
"PKG",14,22,1,"PAH",1,1,144,0)
2.      LOAD DISTRIBUTION
"PKG",14,22,1,"PAH",1,1,145,0)
        -----------------
"PKG",14,22,1,"PAH",1,1,146,0)
        Use the 'LOAD A DISTRIBUTION' option on the KIDS
"PKG",14,22,1,"PAH",1,1,147,0)
        INSTALLATION menu, and enter:  the directory onto which you
"PKG",14,22,1,"PAH",1,1,148,0)
        have downloaded the host file, followed by
"PKG",14,22,1,"PAH",1,1,149,0)
        LAB_AUTORELEASE_1_0.KID, the host file name. 
"PKG",14,22,1,"PAH",1,1,150,0)
 
"PKG",14,22,1,"PAH",1,1,151,0)
3.      START UP KIDS
"PKG",14,22,1,"PAH",1,1,152,0)
        -------------
"PKG",14,22,1,"PAH",1,1,153,0)
        Start up the Kernel Installation and Distribution System Menu [XPD
"PKG",14,22,1,"PAH",1,1,154,0)
        MAIN]:
"PKG",14,22,1,"PAH",1,1,155,0)
        Edits and Distribution ...
"PKG",14,22,1,"PAH",1,1,156,0)
        Utilities ...
"PKG",14,22,1,"PAH",1,1,157,0)
        Installation ...
"PKG",14,22,1,"PAH",1,1,158,0)
 
"PKG",14,22,1,"PAH",1,1,159,0)
        Select Kernel Installation & Distribution System Option:
"PKG",14,22,1,"PAH",1,1,160,0)
        INStallation
"PKG",14,22,1,"PAH",1,1,161,0)
            ---
"PKG",14,22,1,"PAH",1,1,162,0)
            Load a Distribution
"PKG",14,22,1,"PAH",1,1,163,0)
            Print Transport Global
"PKG",14,22,1,"PAH",1,1,164,0)
            Compare Transport Global to Current System
"PKG",14,22,1,"PAH",1,1,165,0)
            Verify Checksums in Transport Global
"PKG",14,22,1,"PAH",1,1,166,0)
            Install Package(s)
"PKG",14,22,1,"PAH",1,1,167,0)
            Restart Install of Package(s)
"PKG",14,22,1,"PAH",1,1,168,0)
            Unload a Distribution
"PKG",14,22,1,"PAH",1,1,169,0)
            Backup a Transport Global
"PKG",14,22,1,"PAH",1,1,170,0)
4.      Select Installation Option:
"PKG",14,22,1,"PAH",1,1,171,0)
        --------------------------
"PKG",14,22,1,"PAH",1,1,172,0)
 
"PKG",14,22,1,"PAH",1,1,173,0)
   a.   Use the Load a Distribution and select Host File:
"PKG",14,22,1,"PAH",1,1,174,0)
        LAB_AUTORELEASE_1_0.KID
"PKG",14,22,1,"PAH",1,1,175,0)
 
"PKG",14,22,1,"PAH",1,1,176,0)
        NOTE: The following are OPTIONAL - (When prompted for the INSTALL
"PKG",14,22,1,"PAH",1,1,177,0)
        NAME, enter LA*5.2*88):
"PKG",14,22,1,"PAH",1,1,178,0)
 
"PKG",14,22,1,"PAH",1,1,179,0)
   b.   Backup a Transport Global - This option will create a backup 
"PKG",14,22,1,"PAH",1,1,180,0)
        message of any routines exported with this patch. It will not
"PKG",14,22,1,"PAH",1,1,181,0)
        backup any other changes such as DD's or templates.
"PKG",14,22,1,"PAH",1,1,182,0)
   c.   Compare Transport Global to Current System - This option will 
"PKG",14,22,1,"PAH",1,1,183,0)
        allow you to view all changes that will be made when this patch is
"PKG",14,22,1,"PAH",1,1,184,0)
        installed. It compares all components of this patch m (routines,
"PKG",14,22,1,"PAH",1,1,185,0)
        DD's, templates, etc.).
"PKG",14,22,1,"PAH",1,1,186,0)
   d.   Verify Checksums in Transport Global - This option will allow you
"PKG",14,22,1,"PAH",1,1,187,0)
        to ensure the integrity of the routines that are in the transport
"PKG",14,22,1,"PAH",1,1,188,0)
        global.
"PKG",14,22,1,"PAH",1,1,189,0)
   e.   Print Transport Global
"PKG",14,22,1,"PAH",1,1,190,0)
 
"PKG",14,22,1,"PAH",1,1,191,0)
5.      Select Installation Option: Install Package(s) **This is the step 
"PKG",14,22,1,"PAH",1,1,192,0)
        to start the installation of this KIDS patch:
"PKG",14,22,1,"PAH",1,1,193,0)
        --------------------------
"PKG",14,22,1,"PAH",1,1,194,0)
        **This is the step to start the installation of this KIDS patch:
"PKG",14,22,1,"PAH",1,1,195,0)
   a.    Choose the Install Package(s) option to start the patch install.
"PKG",14,22,1,"PAH",1,1,196,0)
   b.   When prompted 'Want KIDS to INHIBIT LOGONs during the install? 
"PKG",14,22,1,"PAH",1,1,197,0)
        YES//' answer NO
"PKG",14,22,1,"PAH",1,1,198,0)
   c.   When prompted 'Want to DISABLE Scheduled Options, Menu Options, 
"PKG",14,22,1,"PAH",1,1,199,0)
        and Protocols? YES//' answer NO.
"PKG",14,22,1,"PAH",1,1,200,0)
 
"PKG",14,22,1,"PAH",1,1,201,0)
 
"PKG",14,22,1,"PAH",1,1,202,0)
Routine Information:
"PKG",14,22,1,"PAH",1,1,203,0)
====================
"PKG",14,22,1,"PAH",1,1,204,0)
 
"PKG",14,22,1,"PAH",1,1,205,0)
 
"PKG",14,22,1,"PAH",1,1,206,0)
The second line of each of these routines now looks like:
"PKG",14,22,1,"PAH",1,1,207,0)
;;5.2;AUTOMATED LAB INSTRUMENTS;**[Patch List]**;Sep 27, 1994;Build 10
"PKG",14,22,1,"PAH",1,1,208,0)
 
"PKG",14,22,1,"PAH",1,1,209,0)
The checksums below are new checksums, and can be checked with 
"PKG",14,22,1,"PAH",1,1,210,0)
CHECK1^XTSUMBLD.
"PKG",14,22,1,"PAH",1,1,211,0)
 
"PKG",14,22,1,"PAH",1,1,212,0)
Routine Name: LR458
"PKG",14,22,1,"PAH",1,1,213,0)
    Before:       n/a   After: B3643881   **458** DELETED AFTER INSTALL
"PKG",14,22,1,"PAH",1,1,214,0)
Routine Name: LRDIQ
"PKG",14,22,1,"PAH",1,1,215,0)
    Before: B5636912    After: B6385366   **86,153,263,290,458**
"PKG",14,22,1,"PAH",1,1,216,0)
Routine Name: LRGP2
"PKG",14,22,1,"PAH",1,1,217,0)
    Before: B20236690   After: B21346835  **153,221,263,290,350,446,458**
"PKG",14,22,1,"PAH",1,1,218,0)
Routine Name: LRLISTPS
"PKG",14,22,1,"PAH",1,1,219,0)
    Before:       n/a   After: B17691343  **458**
"PKG",14,22,1,"PAH",1,1,220,0)
Routine Name: LRNIGHT
"PKG",14,22,1,"PAH",1,1,221,0)
    Before: B6404812    After: B7575682   **291,350,458**     
"PKG",14,22,1,"PAH",1,1,222,0)
Routine Name: LRVER5
"PKG",14,22,1,"PAH",1,1,223,0)
    Before: B147369024  After: B148324560 **42,153,283,286,350,458**
"PKG",14,22,1,"PAH",1,1,224,0)
Routine Name: LRVR3
"PKG",14,22,1,"PAH",1,1,225,0)
    Before: B71492279   After: B108418700 **42,121,153,286,291,350,458**
"PKG",14,22,1,"PAH",1,1,226,0)
Routine Name: LRVRAR
"PKG",14,22,1,"PAH",1,1,227,0)
    Before:       n/a   After: B69670046  **458**
"PKG",14,22,1,"PAH",1,1,228,0)
Routine Name: LRVRARU
"PKG",14,22,1,"PAH",1,1,229,0)
    Before:       n/a   After: B32878283  **458**
"PKG",14,22,1,"PAH",1,1,230,0)
 
"PKG",14,22,1,"PAH",1,1,231,0)
Routine list of preceding patches: 446
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","LR458")
0^^B3643881
"RTN","LR458",1,0)
LR458 ;DALOI/JMC - LA*5.2*458 KIDS ROUTINE ;9/2/15  11:40
"RTN","LR458",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**458**;Sep 27, 1994;Build 10
"RTN","LR458",3,0)
 ;
"RTN","LR458",4,0)
PRE ;
"RTN","LR458",5,0)
 ; KIDS Pre install for LA*5.2*458
"RTN","LR458",6,0)
 D BMES("*** Pre install started ***")
"RTN","LR458",7,0)
 ;
"RTN","LR458",8,0)
 ;
"RTN","LR458",9,0)
 D BMES("*** Pre install completed ***")
"RTN","LR458",10,0)
 ;
"RTN","LR458",11,0)
 Q
"RTN","LR458",12,0)
 ;
"RTN","LR458",13,0)
 ;
"RTN","LR458",14,0)
POST ;
"RTN","LR458",15,0)
 ; KIDS Post install for LA*5.2*458
"RTN","LR458",16,0)
 D BMES("*** Post install started ***")
"RTN","LR458",17,0)
 ;
"RTN","LR458",18,0)
 I $G(^TMP("LA88A",$J,1)) D RESTORE^LA88A
"RTN","LR458",19,0)
 ;
"RTN","LR458",20,0)
 ;
"RTN","LR458",21,0)
 D BMES("*** Post install completed ***")
"RTN","LR458",22,0)
 D BMES("Sending install completion alert to mail group G.LMI")
"RTN","LR458",23,0)
 S STR="Installation of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LR458",24,0)
 D ALERT(STR)
"RTN","LR458",25,0)
 ;
"RTN","LR458",26,0)
 Q
"RTN","LR458",27,0)
 ;
"RTN","LR458",28,0)
 ;
"RTN","LR458",29,0)
ALERT(MSG,RECIPS) ;
"RTN","LR458",30,0)
 N DA,DIK,XQA,XQAMSG
"RTN","LR458",31,0)
 S XQAMSG=$G(MSG)
"RTN","LR458",32,0)
 I '$$GOTLOCAL^XMXAPIG("LMI") S XQA("G.LMI")=""
"RTN","LR458",33,0)
 E  S XQA(DUZ)=""
"RTN","LR458",34,0)
 I $D(RECIPS) M XQA=RECIPS
"RTN","LR458",35,0)
 D SETUP^XQALERT
"RTN","LR458",36,0)
 Q
"RTN","LR458",37,0)
 ;
"RTN","LR458",38,0)
 ;
"RTN","LR458",39,0)
BMES(STR) ;
"RTN","LR458",40,0)
 ; Write string
"RTN","LR458",41,0)
 D BMES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","LR458",42,0)
 Q
"RTN","LR458",43,0)
 ;
"RTN","LR458",44,0)
 ;
"RTN","LR458",45,0)
PROGRESS(LAST) ;
"RTN","LR458",46,0)
 ; Prints a "." when NOW > LAST + INT
"RTN","LR458",47,0)
 ; Input
"RTN","LR458",48,0)
 ;   LAST : <byref> The last $H when "." was shown
"RTN","LR458",49,0)
 N INT
"RTN","LR458",50,0)
 S INT=1 ;interval in seconds
"RTN","LR458",51,0)
 I $P($H,",",2)>(+$P(LAST,",",2)+INT) S LAST=$H W "."
"RTN","LR458",52,0)
 Q
"RTN","LR458",53,0)
 ;
"RTN","LR458",54,0)
 ;
"RTN","LR458",55,0)
PTG ;
"RTN","LR458",56,0)
 ; Pre-Transport Global routine
"RTN","LR458",57,0)
 Q
"RTN","LR458",58,0)
 ;
"RTN","LR458",59,0)
 ;
"RTN","LR458",60,0)
MES(STR,CJ,LM) ;
"RTN","LR458",61,0)
 ; Display a string using MES^XPDUTL
"RTN","LR458",62,0)
 ;  Inputs
"RTN","LR458",63,0)
 ;  STR: String to display
"RTN","LR458",64,0)
 ;   CJ: Center text?  1=yes 0=1 <dflt=1>
"RTN","LR458",65,0)
 ;   LM: Left Margin (padding)
"RTN","LR458",66,0)
 N X
"RTN","LR458",67,0)
 S STR=$G(STR)
"RTN","LR458",68,0)
 S CJ=$G(CJ,1)
"RTN","LR458",69,0)
 S LM=$G(LM)
"RTN","LR458",70,0)
 I CJ S STR=$$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," ")
"RTN","LR458",71,0)
 I 'CJ I LM S X="" S $P(X," ",LM)=" " S STR=X_STR
"RTN","LR458",72,0)
 D MES^XPDUTL(STR)
"RTN","LR458",73,0)
 Q
"RTN","LRDIQ")
0^8^B6385366
"RTN","LRDIQ",1,0)
LRDIQ ;DALOI/FHS - MODIFIED LAB VERSION OF CAPTIONED TEMPLATE FILEMAN 19 ;04/19/16  15:56
"RTN","LRDIQ",2,0)
 ;;5.2;LAB SERVICE;**86,153,263,290,458**;Sep 27, 1994;Build 10
"RTN","LRDIQ",3,0)
 Q
"RTN","LRDIQ",4,0)
 ;
"RTN","LRDIQ",5,0)
 ;
"RTN","LRDIQ",6,0)
EN ; From LRLIST,LRLISTPS,LROE1,LRSOR
"RTN","LRDIQ",7,0)
 S:'$G(S) S=1
"RTN","LRDIQ",8,0)
 I $G(DX(0))="" N DX D
"RTN","LRDIQ",9,0)
 . S DX(0)="Q"
"RTN","LRDIQ",10,0)
 . I $D(IOST)#2,IOST?1"C".E S DX(0)="S S=$Y I S>22 N X,Y S DIR(0)=""E"" D ^DIR K DIR W @IOF S S=$S($D(DIRUT):0,1:1)"
"RTN","LRDIQ",11,0)
 . I $D(IOST)#2,IOST?1"P".E S DX(0)="S S=$G(S)+1 I S>(IOSL-6) W @IOF S S=1"
"RTN","LRDIQ",12,0)
 S ^UTILITY($J,1)=DX(0)
"RTN","LRDIQ",13,0)
 I $X W !
"RTN","LRDIQ",14,0)
 ; If file #63 "CH" subscript then special handling
"RTN","LRDIQ",15,0)
 I $G(LRLONG),DIC["""CH""",$P(DR,":",2)>1 D  Q
"RTN","LRDIQ",16,0)
 . N LRDFN,LRDR,LRSB,LRX
"RTN","LRDIQ",17,0)
 . S LRDR=DR,DR=$P(LRDR,":")_":1"
"RTN","LRDIQ",18,0)
 . D EN^DIQ Q:$G(DIRUT)
"RTN","LRDIQ",19,0)
 . I $X W !
"RTN","LRDIQ",20,0)
 . S LRSB=1,LRX=$P($P(DIC,","),"(",2) S:LRX'=+LRX LRX=@LRX
"RTN","LRDIQ",21,0)
 . F  S LRSB=$O(^LR(LRX,"CH",DA,LRSB)) Q:'LRSB  D DSP Q:$G(DIRUT)
"RTN","LRDIQ",22,0)
 . K ^UTILITY($J,1)
"RTN","LRDIQ",23,0)
 ;
"RTN","LRDIQ",24,0)
 ; Otherwise all others use normal FileMan DIQ call
"RTN","LRDIQ",25,0)
 D EN^DIQ
"RTN","LRDIQ",26,0)
 K ^UTILITY($J,1)
"RTN","LRDIQ",27,0)
 Q
"RTN","LRDIQ",28,0)
 ;
"RTN","LRDIQ",29,0)
 ;
"RTN","LRDIQ",30,0)
DSP ; Display FileMan fields and
"RTN","LRDIQ",31,0)
 ;  non FileMan fields only shown with LRVERIFY key on certain supervisor reports
"RTN","LRDIQ",32,0)
 ;
"RTN","LRDIQ",33,0)
 N LRQX,LRW,LRWL,LRY,LRZ,X,Y,ZZ
"RTN","LRDIQ",34,0)
 S LRY=$$TSTRES^LRRPU(LRX,"CH",DA,LRSB,"",1)
"RTN","LRDIQ",35,0)
 S ZZ(0)=$$GET1^DID(63.04,LRSB,"","LABEL")_": "_$TR($P(LRY,"^",1,2),"^"," ")
"RTN","LRDIQ",36,0)
 I $P($G(LRLABKY),U,2) D
"RTN","LRDIQ",37,0)
 . ; set Result[DUZ/Institution/LOINC code/EEI]
"RTN","LRDIQ",38,0)
 . S LRZ=^LR(LRX,"CH",DA,LRSB)
"RTN","LRDIQ",39,0)
 . I $P(LRY,"^",9) S ZZ(1)="PERFORMED/RELEASED BY: "_$$NAME^XUSER($P(LRY,"^",9),"F")
"RTN","LRDIQ",40,0)
 . I $P(LRZ,"^",6) S ZZ(1.1)="PERFORMED/RELEASED ON: "_$$FMTE^XLFDT($P(LRZ,U,6),"1Z")
"RTN","LRDIQ",41,0)
 . I $P(LRY,"^",6) S ZZ(2)="PERFORMING LAB: "_$P($$NS^XUAF4($P(LRY,"^",6)),"^")
"RTN","LRDIQ",42,0)
 . S X=$P(LRY,"^",8)
"RTN","LRDIQ",43,0)
 . I $P(X,"!",3)'="" S ZZ(3)="LOINC Code: "_$P($P(X,"!",3),";")
"RTN","LRDIQ",44,0)
 . I $P(LRY,U,10)'="" S ZZ(4)="EII: "_$P(LRY,U,10)
"RTN","LRDIQ",45,0)
 . I $G(LRLONG)=1 Q
"RTN","LRDIQ",46,0)
 . ; set low/high/units
"RTN","LRDIQ",47,0)
 . S ZZ(0)=ZZ(0)_" ("_$P(LRY,"^",3)_$S($P(LRY,"^",4)'="":"-"_$P(LRY,"^",4),1:"")_" "_$P(LRY,"^",5)_")"
"RTN","LRDIQ",48,0)
 ;
"RTN","LRDIQ",49,0)
 S LRW=""
"RTN","LRDIQ",50,0)
 F  S LRW=$O(ZZ(LRW)) Q:LRW=""  D  Q:$G(DIRUT)
"RTN","LRDIQ",51,0)
 . I LRW=0,$O(ZZ(LRW)) W !
"RTN","LRDIQ",52,0)
 . D  I ($L(ZZ(LRW))+LRQX)>IOM Q:$$STOP  D
"RTN","LRDIQ",53,0)
 . . S LRQX=$S($X:$X+1\40+1*40,1:2)
"RTN","LRDIQ",54,0)
 . . I LRQX=2,LRW>0 S LRQX=3
"RTN","LRDIQ",55,0)
 . W ?LRQX
"RTN","LRDIQ",56,0)
 . F  S LRWL=IOM-$X D  Q:ZZ(LRW)=""  Q:$$STOP
"RTN","LRDIQ",57,0)
 . . W $E(ZZ(LRW),1,LRWL)
"RTN","LRDIQ",58,0)
 . . S ZZ(LRW)=$E(ZZ(LRW),LRWL+1,999)
"RTN","LRDIQ",59,0)
 Q
"RTN","LRDIQ",60,0)
 ;
"RTN","LRDIQ",61,0)
 ;
"RTN","LRDIQ",62,0)
STOP() ;
"RTN","LRDIQ",63,0)
 I $X W !
"RTN","LRDIQ",64,0)
 X DX(0)
"RTN","LRDIQ",65,0)
 Q '$G(S)
"RTN","LRGP2")
0^4^B21346835
"RTN","LRGP2",1,0)
LRGP2 ;DALOI/STAFF - COMMON PARTS TO INSTRUMENT GROUP VERIFY/CHECK ;05/08/15  16:54
"RTN","LRGP2",2,0)
 ;;5.2;LAB SERVICE;**153,221,263,290,350,446,458**;Sep 27, 1994;Build 10
"RTN","LRGP2",3,0)
 ;
"RTN","LRGP2",4,0)
 Q
"RTN","LRGP2",5,0)
 ;
"RTN","LRGP2",6,0)
 ;
"RTN","LRGP2",7,0)
EXPLODE ; from LRGP1, LRVR, LRVRARU, LRVRPOCU
"RTN","LRGP2",8,0)
 ; LRORDR="P" indicates background POC interface, order type=POC
"RTN","LRGP2",9,0)
 ; LRAUTORELEASE indicates background Auto Release of Lab UI results.
"RTN","LRGP2",10,0)
 ;
"RTN","LRGP2",11,0)
 N %,C,DIC,DIR,DIROUT,DIRUT,DUOUT,LREND,LRI,LRTEST,LRX,I,X,X1,Y
"RTN","LRGP2",12,0)
 I $G(LRORDR)'="P" K ^TMP("LR",$J)
"RTN","LRGP2",13,0)
 S LRCFL="",LRI=0 S:'$D(LRNX) LRNX=0
"RTN","LRGP2",14,0)
 F  S LRI=$O(^LRO(68.2,LRLL,10,LRPROF,1,LRI)) Q:LRI<1  I $D(^(LRI,0))#2 D
"RTN","LRGP2",15,0)
 . S LRI(0)=$G(^LRO(68.2,LRLL,10,LRPROF,1,LRI,0))
"RTN","LRGP2",16,0)
 . S LRX=$P(LRI(0),"^") K LRTEST
"RTN","LRGP2",17,0)
 . I '$P(LRI(0),U,3) D EX6(LRX)
"RTN","LRGP2",18,0)
 . S:'$D(^TMP("LR",$J,"VTO",LRX))#2 ^(LRX)=""
"RTN","LRGP2",19,0)
 K LRVTS S LRVTS=11,LRI=0
"RTN","LRGP2",20,0)
 F  S LRI=+$O(^TMP("LR",$J,"T",LRI)) Q:LRI<1  D
"RTN","LRGP2",21,0)
 . S X=$P(^TMP("LR",$J,"T",LRI),"^",5)
"RTN","LRGP2",22,0)
 . I $P(X,";",2)<1 Q  ; Invalid data name number
"RTN","LRGP2",23,0)
 . S LRVTS($P(X,";",2))=LRI,LRVTS=LRVTS+1
"RTN","LRGP2",24,0)
 . S ^TMP("LR",$J,"VTO",LRI)=$P(X,";",2)
"RTN","LRGP2",25,0)
 ;
"RTN","LRGP2",26,0)
 I $G(LRORDR)="P"!$G(LRAUTORELEASE) Q
"RTN","LRGP2",27,0)
 ;
"RTN","LRGP2",28,0)
EX3 ;
"RTN","LRGP2",29,0)
 G:$G(LREND) STOP
"RTN","LRGP2",30,0)
 ;
"RTN","LRGP2",31,0)
 K DIR,DIROUT,DIRUT,DUOUT,X,Y
"RTN","LRGP2",32,0)
 S DIR(0)="YO",DIR("A")="Would you like to see the test list",DIR("B")="No"
"RTN","LRGP2",33,0)
 D ^DIR
"RTN","LRGP2",34,0)
 I $S($G(DIRUT):1,$G(LREND):1,1:0) K ^TMP("LR",$J),LRVTS Q
"RTN","LRGP2",35,0)
 I Y=1 D
"RTN","LRGP2",36,0)
 . W @IOF,!,"The ("_$P(^LRO(68.2,LRLL,0),U)_") ["_$P(^LRO(68.2,LRLL,10,LRPROF,0),U)_"] Profile has"
"RTN","LRGP2",37,0)
 . D LIST
"RTN","LRGP2",38,0)
 ;
"RTN","LRGP2",39,0)
 K DIR,DIROUT,DIRUT,DUOUT,X,Y
"RTN","LRGP2",40,0)
 S DIR("A",1)=" "
"RTN","LRGP2",41,0)
 S DIR("A")="Do you wish to modify the test list"
"RTN","LRGP2",42,0)
 S DIR("?")="i.e. would you like to add or subtract ATOMIC tests?"
"RTN","LRGP2",43,0)
 S DIR("B")="NO"
"RTN","LRGP2",44,0)
 S DIR(0)="Y" D ^DIR
"RTN","LRGP2",45,0)
 I $D(DIRUT) S LREND=1 G STOP
"RTN","LRGP2",46,0)
 I Y=1 D EX1 G:'$G(LREND) EX3
"RTN","LRGP2",47,0)
 ;
"RTN","LRGP2",48,0)
STOP ;
"RTN","LRGP2",49,0)
 I $G(LREND) K ^TMP("LR",$J),LRVTS S LREND=0 Q
"RTN","LRGP2",50,0)
 ;
"RTN","LRGP2",51,0)
EX2 ;
"RTN","LRGP2",52,0)
 K LRVTS,DIC
"RTN","LRGP2",53,0)
 S LRVTS=11,LRI=0,C=0
"RTN","LRGP2",54,0)
 F  S LRI=$O(^TMP("LR",$J,"T",LRI)) Q:LRI<1  D
"RTN","LRGP2",55,0)
 . S X=$P(^TMP("LR",$J,"T",LRI),U,5),LRVTS($P(X,";",2))=LRI
"RTN","LRGP2",56,0)
 . S LRVTS=LRVTS+1
"RTN","LRGP2",57,0)
 . S ^TMP("LR",$J,"VTO",LRI)=$P(X,";",2)
"RTN","LRGP2",58,0)
 . S C=C+1
"RTN","LRGP2",59,0)
 . I $P($G(^LAB(60,LRI,4)),U,2) S LRCFL=LRCFL_$P(^(4),U,2)_U
"RTN","LRGP2",60,0)
 S (X,X1)=0 F  S X=$O(^TMP("LR",$J,"VTO",X)) Q:X<1  S X1=X1+1
"RTN","LRGP2",61,0)
 I C>0 W !,"You have selected ",X1," tests to work with."
"RTN","LRGP2",62,0)
 I C<1 D
"RTN","LRGP2",63,0)
 . W !,$C(7),">> Please check the PROFILE you have selected."
"RTN","LRGP2",64,0)
 . W !,">> At least one should be build name only = no "
"RTN","LRGP2",65,0)
 K ^TMP("LR",$J,"T")
"RTN","LRGP2",66,0)
 Q
"RTN","LRGP2",67,0)
 ;
"RTN","LRGP2",68,0)
 ;
"RTN","LRGP2",69,0)
EX1 ;
"RTN","LRGP2",70,0)
 N DIC,DIR,DIRUT,DIROUT,DTOUT,X,X1,Y
"RTN","LRGP2",71,0)
 ;
"RTN","LRGP2",72,0)
 S DIR("A")="Do you want to add ATOMIC test(s) to this panel",DIR("B")="NO",DIR(0)="YO"
"RTN","LRGP2",73,0)
 D ^DIR
"RTN","LRGP2",74,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRGP2",75,0)
 I Y=1 D
"RTN","LRGP2",76,0)
 . K LRVTS,DIC
"RTN","LRGP2",77,0)
 . S DIC("A")="Select ATOMIC test(s) you wish to add: ",DIC="^LAB(60,",DIC(0)="AEMOQZ" ; ,DIC("S")="I $G(^(.2))"
"RTN","LRGP2",78,0)
 . F  D ^DIC Q:Y<1  K LRTEST D EX6(+Y)
"RTN","LRGP2",79,0)
 . W @IOF,!?5,"The List now has" D LIST
"RTN","LRGP2",80,0)
 ;
"RTN","LRGP2",81,0)
EX4 ;
"RTN","LRGP2",82,0)
 K DIR
"RTN","LRGP2",83,0)
 S DIR("A",1)=" "
"RTN","LRGP2",84,0)
 S DIR("A")="Do you wish to exclude ATOMIC tests in this panel"
"RTN","LRGP2",85,0)
 S DIR("B")="NO",DIR(0)="YO"
"RTN","LRGP2",86,0)
 D ^DIR
"RTN","LRGP2",87,0)
 I $D(DIRUT) S LREND=1 Q
"RTN","LRGP2",88,0)
 I Y=1 D
"RTN","LRGP2",89,0)
 . N LREXCL,%
"RTN","LRGP2",90,0)
 . W !!,$$CJ^XLFSTR("Tests removed from this panel will not be included for review or editing.",IOM),!!
"RTN","LRGP2",91,0)
 . K DIC
"RTN","LRGP2",92,0)
 . S LREXCL="",DIC("A")="Select ATOMIC test(s) you wish to exclude: ",DIC="^LAB(60,",DIC(0)="AEMOQ"
"RTN","LRGP2",93,0)
 . S DIC("S")="I $D(^TMP(""LR"",$J,""T"",Y))"
"RTN","LRGP2",94,0)
 . F  D ^DIC Q:Y<1  D
"RTN","LRGP2",95,0)
 . . S X1=$P($P(^TMP("LR",$J,"T",+Y),U,5),";",2)
"RTN","LRGP2",96,0)
 . . I X1 K LRVTS(X1)
"RTN","LRGP2",97,0)
 . . K ^TMP("LR",$J,"VTO",+Y),^TMP("LR",$J,"T",+Y) S LREXCL(+Y)=$P(Y,U,2) D
"RTN","LRGP2",98,0)
 . . .N I,X
"RTN","LRGP2",99,0)
 . . .S I=0 F  S I=$O(^LAB(60,+Y,2,0)) Q:I<1  I $D(^(I,0)) S X=+^(0) D
"RTN","LRGP2",100,0)
 . . . . I X K ^TMP("LR",$J,"VTO",X),^TMP("LR",$J,"T",X) S LREXCL(X)=$P($G(^LAB(60,X,0)),U)
"RTN","LRGP2",101,0)
 . I $O(LREXCL(0)) D
"RTN","LRGP2",102,0)
 . . N I
"RTN","LRGP2",103,0)
 . . W @IOF,!,"Excluding" S I=0 F  S I=$O(LREXCL(I)) Q:I<1  W !,LREXCL(I) K LRVTS(I) H 2
"RTN","LRGP2",104,0)
 Q
"RTN","LRGP2",105,0)
 ;
"RTN","LRGP2",106,0)
 ;
"RTN","LRGP2",107,0)
LIST ;
"RTN","LRGP2",108,0)
 N LRI,DIR,DIRUT,DTOUT,DUOUT,X
"RTN","LRGP2",109,0)
 W " the following tests: "
"RTN","LRGP2",110,0)
 S LRI=0,DIR(0)="E"
"RTN","LRGP2",111,0)
 F  S LRI=$O(^TMP("LR",$J,"VTO",LRI)) Q:LRI<1!($D(DUOUT))  D
"RTN","LRGP2",112,0)
 . W !,?10,$P($G(^LAB(60,LRI,0)),U)
"RTN","LRGP2",113,0)
 . I $Y>(IOSL-4) W ! D ^DIR W @IOF I $D(DIRUT) S LREND=1
"RTN","LRGP2",114,0)
 Q
"RTN","LRGP2",115,0)
 ;
"RTN","LRGP2",116,0)
 ;
"RTN","LRGP2",117,0)
YESNO ;
"RTN","LRGP2",118,0)
 W !
"RTN","LRGP2",119,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRGP2",120,0)
 S DIR("B")=$S($G(%)=1:"Yes",$G(%)=2:"No",1:"")
"RTN","LRGP2",121,0)
 S DIR(0)="Y" D ^DIR S %=Y
"RTN","LRGP2",122,0)
 Q
"RTN","LRGP2",123,0)
 ;
"RTN","LRGP2",124,0)
 ;
"RTN","LRGP2",125,0)
EX6(LRX) ; Expand test list
"RTN","LRGP2",126,0)
 ;
"RTN","LRGP2",127,0)
 N T1
"RTN","LRGP2",128,0)
 ;
"RTN","LRGP2",129,0)
 S (T1,LRTEST)=LRX,LRTEST(T1)=LRX_U_$G(^LAB(60,T1,0))
"RTN","LRGP2",130,0)
 S LRTEST(T1,"P")=LRTEST
"RTN","LRGP2",131,0)
 D ^LREXPD
"RTN","LRGP2",132,0)
 S:'$D(^TMP("LR",$J,"VTO",LRX))#2 ^(LRX)=""
"RTN","LRGP2",133,0)
 Q
"RTN","LRLISTPS")
0^5^B17691343
"RTN","LRLISTPS",1,0)
LRLISTPS ;JMC/DALOI Print patient LAB DATA file Summary ;09/16/15  17:12
"RTN","LRLISTPS",2,0)
 ;;5.2;LAB SERVICE;**458**;Sep 27, 1994;Build 10
"RTN","LRLISTPS",3,0)
 ;
"RTN","LRLISTPS",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRLISTPS",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRLISTPS",6,0)
 ;
"RTN","LRLISTPS",7,0)
 ;
"RTN","LRLISTPS",8,0)
EN ; Print summary report based only on entry in file #63.
"RTN","LRLISTPS",9,0)
 ;
"RTN","LRLISTPS",10,0)
 N %ZIS,DA,DIC,DIR,DIRUT,DR,DX,IOP,LRDFN,LREDAT,LREDT,LREND,LRIDT,LRIDTE,LRIDTS,LRLONG,LRRAW,LRSDAT,LRSDT,LRSS,POP,X,Y
"RTN","LRLISTPS",11,0)
 ;
"RTN","LRLISTPS",12,0)
 D EN^LRPARAM
"RTN","LRLISTPS",13,0)
 D ^LRDPA Q:LRDFN<1
"RTN","LRLISTPS",14,0)
 ;
"RTN","LRLISTPS",15,0)
 S DIR(0)="SAO^CH:CHEM, HEM, TOX, RIA, SER, etc.;MI:MICROBIOLOGY;EM:ELECTRON MICROSCOPY;SP:SURGICAL PATHOLOGY;CY:CYTOLOGY;BB:BLOOD BANK"
"RTN","LRLISTPS",16,0)
 S DIR("A")="Select LR SUBSCRIPT: ",DIR("B")="CH"
"RTN","LRLISTPS",17,0)
 D ^DIR
"RTN","LRLISTPS",18,0)
 I $D(DIRUT) Q
"RTN","LRLISTPS",19,0)
 S LRSS=Y,LRSS(0)=Y(0)
"RTN","LRLISTPS",20,0)
 ;
"RTN","LRLISTPS",21,0)
 S (LREND,LRRAW)=0,LRLONG=1
"RTN","LRLISTPS",22,0)
 ;
"RTN","LRLISTPS",23,0)
 S LRSDT=$$STARTDT()
"RTN","LRLISTPS",24,0)
 I 'LRSDT S LREND=1 Q
"RTN","LRLISTPS",25,0)
 S LREDT=$$ENDDT(.LRSDT)
"RTN","LRLISTPS",26,0)
 I 'LREDT S LREND=1 Q
"RTN","LRLISTPS",27,0)
 S LRSDAT=$$FMTE^XLFDT(LRSDT,"1Z"),LREDAT=$$FMTE^XLFDT(LREDT,"1Z")
"RTN","LRLISTPS",28,0)
 ;
"RTN","LRLISTPS",29,0)
 I LRSS="CH" D  Q:$D(DIRUT)
"RTN","LRLISTPS",30,0)
 . K DIR
"RTN","LRLISTPS",31,0)
 . S DIR(0)="YO",DIR("A")="Display an Extended Listing",DIR("B")="YES"
"RTN","LRLISTPS",32,0)
 . S DIR("?")="Extended provides result's demographics and normal ranges."
"RTN","LRLISTPS",33,0)
 . D ^DIR
"RTN","LRLISTPS",34,0)
 . I $D(DIRUT) Q
"RTN","LRLISTPS",35,0)
 . I Y S LRLONG=2
"RTN","LRLISTPS",36,0)
 ;
"RTN","LRLISTPS",37,0)
 K DIR
"RTN","LRLISTPS",38,0)
 S DIR(0)="YO",DIR("A")="Display associated global",DIR("B")="NO"
"RTN","LRLISTPS",39,0)
 S DIR("?")="Lists related global entry from file #63 where results are stored."
"RTN","LRLISTPS",40,0)
 D ^DIR
"RTN","LRLISTPS",41,0)
 I $D(DIRUT) Q
"RTN","LRLISTPS",42,0)
 I Y S LRRAW=1
"RTN","LRLISTPS",43,0)
 ;
"RTN","LRLISTPS",44,0)
 S %ZIS="MQ" D ^%ZIS
"RTN","LRLISTPS",45,0)
 I POP D HOME^%ZIS Q
"RTN","LRLISTPS",46,0)
 I $D(IO("Q")) D  Q
"RTN","LRLISTPS",47,0)
 . N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","LRLISTPS",48,0)
 . S ZTRTN="DQP^LLISTPS",ZTSAVE("LR*")="",ZTDESC="Print Lab Patient Summary Report"
"RTN","LRLISTPS",49,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","LRLISTPS",50,0)
 . D EN^DDIOL("Request "_$S($G(ZTSK):"queued - Task #"_ZTSK,1:"NOT queued"),"","!")
"RTN","LRLISTPS",51,0)
 ;
"RTN","LRLISTPS",52,0)
 ;
"RTN","LRLISTPS",53,0)
DQP ; Dequeue (TaskMan ) entry point and from above
"RTN","LRLISTPS",54,0)
 ;
"RTN","LRLISTPS",55,0)
 U IO
"RTN","LRLISTPS",56,0)
 I $E(IOST,1,2)'="P-" W @IOF
"RTN","LRLISTPS",57,0)
 D HEAD
"RTN","LRLISTPS",58,0)
 ;
"RTN","LRLISTPS",59,0)
 S DIC="^LR("_LRDFN_","""_LRSS_""","
"RTN","LRLISTPS",60,0)
 S (LRIDT,LRIDTE)=9999999-LRSDT,LRIDTS=9999999-LREDT
"RTN","LRLISTPS",61,0)
 F  S LRIDT=$O(^LR(LRDFN,LRSS,LRIDT)) Q:LRIDT<1!(LRIDT>LRIDTS)  D  Q:LREND
"RTN","LRLISTPS",62,0)
 . S DA=LRIDT,DR="0:9999999"
"RTN","LRLISTPS",63,0)
 . K DX W ! D EN^LRDIQ
"RTN","LRLISTPS",64,0)
 . I $D(DIRUT) S LREND=1 Q
"RTN","LRLISTPS",65,0)
 . S DR="ORU:RF" D EN^LRDIQ
"RTN","LRLISTPS",66,0)
 . I $D(DIRUT) S LREND=1 Q
"RTN","LRLISTPS",67,0)
 . D WAIT
"RTN","LRLISTPS",68,0)
 . I LRRAW=1 D LRRAW(LRDFN,LRSS,LRIDT)
"RTN","LRLISTPS",69,0)
 ;
"RTN","LRLISTPS",70,0)
 D CLEAN
"RTN","LRLISTPS",71,0)
 Q
"RTN","LRLISTPS",72,0)
 ;
"RTN","LRLISTPS",73,0)
 ;
"RTN","LRLISTPS",74,0)
LRRAW(LRDFN,LRSS,LRIDT) ; Display raw data from LR global.
"RTN","LRLISTPS",75,0)
 ;
"RTN","LRLISTPS",76,0)
 N LRNODE,LRQUIT,LRROOT
"RTN","LRLISTPS",77,0)
 ;
"RTN","LRLISTPS",78,0)
 W !!,"Related LAB DATA file (#63) global listing",!
"RTN","LRLISTPS",79,0)
 ;
"RTN","LRLISTPS",80,0)
 S LRROOT=$NA(^LR(LRDFN,LRSS,LRIDT))
"RTN","LRLISTPS",81,0)
 S LRNODE=LRROOT,LRQUIT=0
"RTN","LRLISTPS",82,0)
 F  S LRNODE=$Q(@LRNODE) Q:LRNODE=""  D  Q:LRQUIT
"RTN","LRLISTPS",83,0)
 . I $QS(LRNODE,1)=LRDFN,$QS(LRNODE,2)=LRSS,$QS(LRNODE,3)=LRIDT W !,LRNODE," = ",@LRNODE
"RTN","LRLISTPS",84,0)
 . E  S LRQUIT=1
"RTN","LRLISTPS",85,0)
 ;
"RTN","LRLISTPS",86,0)
 Q
"RTN","LRLISTPS",87,0)
 ;
"RTN","LRLISTPS",88,0)
 ;
"RTN","LRLISTPS",89,0)
WAIT ; Check if continue display
"RTN","LRLISTPS",90,0)
 ;
"RTN","LRLISTPS",91,0)
 ;ZEXCEPT: LREND
"RTN","LRLISTPS",92,0)
 ;
"RTN","LRLISTPS",93,0)
 I '$D(ZTQUEUED),$E(IOST,1,2)="C-" D  Q:LREND
"RTN","LRLISTPS",94,0)
 . N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRLISTPS",95,0)
 . S DIR(0)="E" D ^DIR
"RTN","LRLISTPS",96,0)
 . I Y'=1 S LREND=1
"RTN","LRLISTPS",97,0)
 ;
"RTN","LRLISTPS",98,0)
 I ($Y+2)>IOSL D HEAD
"RTN","LRLISTPS",99,0)
 Q
"RTN","LRLISTPS",100,0)
 ;
"RTN","LRLISTPS",101,0)
 ;
"RTN","LRLISTPS",102,0)
HEAD ;  Print header
"RTN","LRLISTPS",103,0)
 ;ZEXCEPT: LREDAT,LRSDAT,LRSS,PNM,SEX,SSN
"RTN","LRLISTPS",104,0)
 ;
"RTN","LRLISTPS",105,0)
 I $E(IOST,1,2)="P-" W @IOF
"RTN","LRLISTPS",106,0)
 W !,"Patient Summary Report",?25,"WORK COPY ONLY - DO NOT FILE",?58,"Printed: ",$$FMTE^XLFDT(DT,"1Z")
"RTN","LRLISTPS",107,0)
 W !,PNM,?30,SSN,?45," Sex: ",SEX
"RTN","LRLISTPS",108,0)
 W !,"  For date range: "_LREDAT_" to "_LRSDAT_" for "_LRSS(0)
"RTN","LRLISTPS",109,0)
 Q
"RTN","LRLISTPS",110,0)
 ;
"RTN","LRLISTPS",111,0)
 ;
"RTN","LRLISTPS",112,0)
CLEAN ; Clean up and quit
"RTN","LRLISTPS",113,0)
 I $E(IOST,1,2)'="C-"  W @IOF
"RTN","LRLISTPS",114,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","LRLISTPS",115,0)
 E  S ZTREQ="@"
"RTN","LRLISTPS",116,0)
 ;
"RTN","LRLISTPS",117,0)
 D KVA^VADPT
"RTN","LRLISTPS",118,0)
 Q
"RTN","LRLISTPS",119,0)
 ;
"RTN","LRLISTPS",120,0)
 ;
"RTN","LRLISTPS",121,0)
STARTDT() ; Prompt for start date/time
"RTN","LRLISTPS",122,0)
 ;
"RTN","LRLISTPS",123,0)
 N LRSDT
"RTN","LRLISTPS",124,0)
 ;
"RTN","LRLISTPS",125,0)
 S LRSDT=$$DATE("Enter START date: ","TODAY","AET")
"RTN","LRLISTPS",126,0)
 Q LRSDT
"RTN","LRLISTPS",127,0)
 ;
"RTN","LRLISTPS",128,0)
 ;
"RTN","LRLISTPS",129,0)
ENDDT(LRSDT) ; Prompt for end date/time
"RTN","LRLISTPS",130,0)
 ;
"RTN","LRLISTPS",131,0)
 ; LRSDT - Start Date/Time (Passed by reference)
"RTN","LRLISTPS",132,0)
 ;
"RTN","LRLISTPS",133,0)
 N LREDT,X
"RTN","LRLISTPS",134,0)
 ;
"RTN","LRLISTPS",135,0)
 S LREDT=$$DATE("Enter END date: ","T-1","AET")
"RTN","LRLISTPS",136,0)
 I 'LREDT Q 0
"RTN","LRLISTPS",137,0)
 ;
"RTN","LRLISTPS",138,0)
 I $G(LRSDT)="" Q
"RTN","LRLISTPS",139,0)
 ;
"RTN","LRLISTPS",140,0)
 I LREDT>LRSDT D
"RTN","LRLISTPS",141,0)
 . S X=LREDT
"RTN","LRLISTPS",142,0)
 . S LREDT=LRSDT
"RTN","LRLISTPS",143,0)
 . S LRSDT=X
"RTN","LRLISTPS",144,0)
 ;
"RTN","LRLISTPS",145,0)
 I '$P(LRSDT,".",2) S LRSDT=LRSDT+.24
"RTN","LRLISTPS",146,0)
 ;
"RTN","LRLISTPS",147,0)
 Q LREDT
"RTN","LRLISTPS",148,0)
 ;
"RTN","LRLISTPS",149,0)
 ;
"RTN","LRLISTPS",150,0)
DATE(LRPROMPT,LRDEFAULT,LRFLAGS) ;
"RTN","LRLISTPS",151,0)
 ;
"RTN","LRLISTPS",152,0)
 N %DT,DTOUT,X,Y
"RTN","LRLISTPS",153,0)
 ;
"RTN","LRLISTPS",154,0)
 S %DT("A")=LRPROMPT
"RTN","LRLISTPS",155,0)
 S %DT("B")=LRDEFAULT
"RTN","LRLISTPS",156,0)
 S %DT=LRFLAGS
"RTN","LRLISTPS",157,0)
 D ^%DT
"RTN","LRLISTPS",158,0)
 I Y<0 Q 0
"RTN","LRLISTPS",159,0)
 Q Y
"RTN","LRNIGHT")
0^6^B7575682
"RTN","LRNIGHT",1,0)
LRNIGHT ;SLC/CJS/AVAMC/REG - NIGHTLY LAB CLEANUP ;01/11/16  15:26
"RTN","LRNIGHT",2,0)
 ;;5.2;LAB SERVICE;**291,350,458**;Sep 27, 1994;Build 10
"RTN","LRNIGHT",3,0)
 ;
"RTN","LRNIGHT",4,0)
 ;D REQUE ;REQUED BY TASKMAN
"RTN","LRNIGHT",5,0)
 Q:'$D(^LAB(69.9,1,0))  S:$D(ZTQUEUED) DUZ(0)="@",ZTREQ="@" K ^LRO(69,"AN") K ^LRO(69,DT-1,1,"AD") I $P(^LAB(69.9,1,0),U,14) D MANUAL
"RTN","LRNIGHT",6,0)
 S %DT="",X="T-"_$S($P(^LAB(69.9,1,0),"^",9):$P(^(0),"^",9),1:7) D ^%DT S LRSAVE=Y
"RTN","LRNIGHT",7,0)
 F L=0:0 S L=$O(^LRO(69,"AT",L)) Q:L'>0  F T=0:0 S T=$O(^LRO(69,"AT",L,T)) Q:T'>0  F S=0:0 S S=$O(^LRO(69,"AT",L,T,S)) Q:S'>0  S X=-LRSAVE,X1=LRSAVE F X=X:0 S X=$O(^LRO(69,"AT",L,T,S,X)) Q:X=""!(X'<X1)  K ^LRO(69,"AT",L,T,S,X)
"RTN","LRNIGHT",8,0)
 K %,%H,%X,%Y,L,LRIOZERO,LRSAVE,POP,S,T,X,X1,Z,Y
"RTN","LRNIGHT",9,0)
STDQC ;
"RTN","LRNIGHT",10,0)
 ;
"RTN","LRNIGHT",11,0)
 D SUBTASKS
"RTN","LRNIGHT",12,0)
 ;
"RTN","LRNIGHT",13,0)
 ;Cleanup the XTMP("LRCAP" global
"RTN","LRNIGHT",14,0)
 D XTMP^LRCAPPH
"RTN","LRNIGHT",15,0)
 ;
"RTN","LRNIGHT",16,0)
 ;Check roll-up date; process pending panels if appropriate date
"RTN","LRNIGHT",17,0)
 S X=$T(EN^LRBEBA5) I X'="" D EN^LRBEBA5
"RTN","LRNIGHT",18,0)
 ;
"RTN","LRNIGHT",19,0)
 Q
"RTN","LRNIGHT",20,0)
 ;
"RTN","LRNIGHT",21,0)
REQUE S ZTDTH=$H+1_",1",ZTIO="",ZTRTN="^LRNIGHT" D ^%ZTLOAD K ZTDTH,ZTIO,ZTRTN,ZTSK Q
"RTN","LRNIGHT",22,0)
END K DUOUT,DTOUT,%DT,LRW,D,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,LRDFN,DFN,LRCD
"RTN","LRNIGHT",23,0)
 Q
"RTN","LRNIGHT",24,0)
MANUAL ;
"RTN","LRNIGHT",25,0)
RANGE ;
"RTN","LRNIGHT",26,0)
 S ZTRTN="LRCAPV2",ZTIO="",ZTDTH=$H,ZTDESC="TALLY CAP WORKLOAD"
"RTN","LRNIGHT",27,0)
 D ^%ZTLOAD
"RTN","LRNIGHT",28,0)
 Q
"RTN","LRNIGHT",29,0)
 ;
"RTN","LRNIGHT",30,0)
SUBTASKS ; Task off other jobs that are initiated by LRNIGHT
"RTN","LRNIGHT",31,0)
 ;
"RTN","LRNIGHT",32,0)
 ; Protect TaskMan variables of calling tasked job
"RTN","LRNIGHT",33,0)
 N ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",34,0)
 ;
"RTN","LRNIGHT",35,0)
 ;--------------------------------------------
"RTN","LRNIGHT",36,0)
 ; Analyze File 63: Organism sub-file and data.
"RTN","LRNIGHT",37,0)
 I $T(LRNIGHT^LRWU8)'="",$E($$DT^XLFDT,6,7)="01" D
"RTN","LRNIGHT",38,0)
 . S ZTIO="",ZTDTH=$H
"RTN","LRNIGHT",39,0)
 . S ZTRTN="LRNIGHT^LRWU8",ZTDESC="FILE 63 ORGANISM CLEANUP"
"RTN","LRNIGHT",40,0)
 . D ^%ZTLOAD
"RTN","LRNIGHT",41,0)
 . K ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",42,0)
 ;
"RTN","LRNIGHT",43,0)
 ;--------------------------------------------
"RTN","LRNIGHT",44,0)
 ; Analyze File 63: For bad data names.
"RTN","LRNIGHT",45,0)
 I $T(LRNIGHT^LRWU9)'="",$E($$DT^XLFDT,6,7)="01" D
"RTN","LRNIGHT",46,0)
 . S ZTIO="",ZTDTH=$H
"RTN","LRNIGHT",47,0)
 . S ZTRTN="LRNIGHT^LRWU9",ZTDESC="FILE 63 BAD DATA NAMES CLEANUP"
"RTN","LRNIGHT",48,0)
 . D ^%ZTLOAD
"RTN","LRNIGHT",49,0)
 . K ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",50,0)
 ;
"RTN","LRNIGHT",51,0)
 ;--------------------------------------------
"RTN","LRNIGHT",52,0)
 ; Purge eligible entries in file 95.4
"RTN","LRNIGHT",53,0)
 I $T(PRGNIGHT^LRSRVR5)'="" D
"RTN","LRNIGHT",54,0)
 . S ZTIO="",ZTDTH=$H
"RTN","LRNIGHT",55,0)
 . S ZTRTN="PRGNIGHT^LRSRVR5",ZTDESC="Lab file #95.4 purge/cleanup"
"RTN","LRNIGHT",56,0)
 . D ^%ZTLOAD
"RTN","LRNIGHT",57,0)
 . K ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",58,0)
 ;
"RTN","LRNIGHT",59,0)
 ;--------------------------------------------
"RTN","LRNIGHT",60,0)
 ; Purge old entries in ^LAH global
"RTN","LRNIGHT",61,0)
 I $T(LRNIGHT^LRVR3)'="" D
"RTN","LRNIGHT",62,0)
 . S ZTIO="",ZTDTH=$H
"RTN","LRNIGHT",63,0)
 . S ZTRTN="LRNIGHT^LRVR3",ZTDESC="Purge old instrument data from LAH global"
"RTN","LRNIGHT",64,0)
 . D ^%ZTLOAD
"RTN","LRNIGHT",65,0)
 . K ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK,ZTDTH
"RTN","LRNIGHT",66,0)
 ;
"RTN","LRNIGHT",67,0)
 Q
"RTN","LRVER5")
0^9^B148324560
"RTN","LRVER5",1,0)
LRVER5 ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;05/12/16  09:47
"RTN","LRVER5",2,0)
 ;;5.2;LAB SERVICE;**42,153,283,286,350,458**;Sep 27, 1994;Build 10
"RTN","LRVER5",3,0)
 ;
"RTN","LRVER5",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRVER5",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRVER5",6,0)
 ;
"RTN","LRVER5",7,0)
 ;
"RTN","LRVER5",8,0)
 ;ZEXCEPT: LRD,LRDL,LRDUZ,LRDV,LRDVF,LREDIT,LRFP,LRNDISP,LRNG,LRNG2,LRNG3,LRNG4,LRNG5,LRNGS,LRNOVER,LRNX,LRORD,LRSA,LRSB,LRSPEC,LRTEST,LRTS,LRUID,LRVRM,SX,X
"RTN","LRVER5",9,0)
 ;
"RTN","LRVER5",10,0)
 I $G(LRNDISP) D
"RTN","LRVER5",11,0)
 . S LRNX=0
"RTN","LRVER5",12,0)
 . N LRX F  S LRNX=$O(LRORD(LRNX)) Q:LRNX<1  S LRX(LRORD(LRNX))=""
"RTN","LRVER5",13,0)
 . S LRX=0 F  S LRX=$O(LRSB(LRX)) Q:LRX<1  K:'$D(LRX(LRX)) LRSB(LRX),LRSA(LRX)
"RTN","LRVER5",14,0)
 ;
"RTN","LRVER5",15,0)
 ; Check for amended results that have arrived via an HL7 interface.
"RTN","LRVER5",16,0)
 ; Only allow amended results to be verified during this session.
"RTN","LRVER5",17,0)
 I $D(^LAH("LA7 AMENDED RESULTS",LRUID)) D
"RTN","LRVER5",18,0)
 . S LRNX=0
"RTN","LRVER5",19,0)
 . F  S LRNX=$O(LRORD(LRNX)) Q:'LRNX  I '$D(^LAH("LA7 AMENDED RESULTS",LRUID,LRORD(LRNX))) K LRORD(LRNX)
"RTN","LRVER5",20,0)
 . S LRNX=0
"RTN","LRVER5",21,0)
 . F  S LRNX=$O(LRSB(LRNX)) Q:'LRNX  I '$D(^LAH("LA7 AMENDED RESULTS",LRUID,LRNX)) K LRSB(LRNX),LRSA(LRNX)
"RTN","LRVER5",22,0)
 ;
"RTN","LRVER5",23,0)
 S LRNX=0,LRVRM=12
"RTN","LRVER5",24,0)
 ;
"RTN","LRVER5",25,0)
V40 S LRNX=$O(LRORD(LRNX)) G V44:LRNX<1 D LRSUBS
"RTN","LRVER5",26,0)
 ;
"RTN","LRVER5",27,0)
 ; Check if changing performing lab
"RTN","LRVER5",28,0)
 ;  and if not then restore LRSB(LRSB) from LRSA if previous verified to avoid triggering change prompt.
"RTN","LRVER5",29,0)
 ;I $P($G(LRSB(LRSB)),"^",9),'$$PLOK^LRVERA($P(LRSB(LRSB),"^",9),$G(LRDUZ(2)),DUZ(2),LRTS) G V40
"RTN","LRVER5",30,0)
 I $P($G(LRSB(LRSB)),"^",9),'$$PLOK^LRVERA($P(LRSB(LRSB),"^",9),$G(LRDUZ(2)),DUZ(2),LRTS) D  Q
"RTN","LRVER5",31,0)
 . I $D(LRSA(LRSB)) S LRSB(LRSB)=LRSA(LRSB)
"RTN","LRVER5",32,0)
 ;
"RTN","LRVER5",33,0)
 D V25
"RTN","LRVER5",34,0)
 ;
"RTN","LRVER5",35,0)
V42 ;
"RTN","LRVER5",36,0)
 ;
"RTN","LRVER5",37,0)
 S (LRDL,SX,X)=$P($G(LRSB(LRSB)),U),LRDVF=0,LREDIT=0
"RTN","LRVER5",38,0)
 S:X=""&(LRDV'="") X=LRDV,LRDVF=1 ; default value
"RTN","LRVER5",39,0)
 S LRTEST=$P(^LAB(60,LRTS,0),U)
"RTN","LRVER5",40,0)
 K LRNOVER(LRSB)
"RTN","LRVER5",41,0)
 ;
"RTN","LRVER5",42,0)
Q42 ;
"RTN","LRVER5",43,0)
 ;
"RTN","LRVER5",44,0)
 ; Check for amended results that have arrived via an HL7 interface.
"RTN","LRVER5",45,0)
 I $D(^LAH("LA7 AMENDED RESULTS",LRUID,LRSB)) D  G:SX'=X!($G(LRAMEND(LRSB))) V45
"RTN","LRVER5",46,0)
 . W !,LRTEST," " W:X'="" @LRFP
"RTN","LRVER5",47,0)
 . D AMEND Q:$G(LRAMEND(LRSB))
"RTN","LRVER5",48,0)
 . I SX=X W !,LRTEST," " W:X'="" @LRFP
"RTN","LRVER5",49,0)
 ;
"RTN","LRVER5",50,0)
 ; If entering results from a reference lab and not using normal/units
"RTN","LRVER5",51,0)
 ; from file #60 then ask user for these values otherwise display
"RTN","LRVER5",52,0)
 ; current file #60 values.
"RTN","LRVER5",53,0)
 I $G(LRDUZ(2)),LRDUZ(2)'=DUZ(2) D
"RTN","LRVER5",54,0)
 . I $G(^LAB(60,+LRTS,1,+$G(LRSPEC),.1)) D  Q
"RTN","LRVER5",55,0)
 . . D V25
"RTN","LRVER5",56,0)
 . . W !!,"Current Ref Range: ",LRNG2,"-",LRNG3," Units: ",$P(LRNG,"^",7)
"RTN","LRVER5",57,0)
 . . I LRNG4="",LRNG5="" Q
"RTN","LRVER5",58,0)
 . . W !,"     Critical Low: ",LRNG4," Critical High: ",LRNG5
"RTN","LRVER5",59,0)
 . N LRX,LRY
"RTN","LRVER5",60,0)
 . D ASKPLNR,NORM2
"RTN","LRVER5",61,0)
 . S LRX=$P(LRNGS,"^",2,5),LRX=$TR(LRX,"^","!")
"RTN","LRVER5",62,0)
 . S LRY=$P($G(LRSB(LRSB)),"^",5),$P(LRY,"!",2,5)=LRX
"RTN","LRVER5",63,0)
 . S $P(LRSB(LRSB),"^",5)=LRY
"RTN","LRVER5",64,0)
 ;
"RTN","LRVER5",65,0)
Q42A ;
"RTN","LRVER5",66,0)
 W !,LRTEST," " W:X'="" @LRFP
"RTN","LRVER5",67,0)
 R "//",X:DTIME
"RTN","LRVER5",68,0)
 I X'?.ANP W $C(7)," No Control Characters allowed." S X=SX G Q42A
"RTN","LRVER5",69,0)
 S:$L($G(SX))&(X="") X=SX,LRDVF=1
"RTN","LRVER5",70,0)
 S LRDL=X I X=""&LRDVF S (LRD,X)=LRDV G V45
"RTN","LRVER5",71,0)
Q43 G V40:X="",V45:X'["^",V44:X="^",LROUT:X="^^"
"RTN","LRVER5",72,0)
 ;
"RTN","LRVER5",73,0)
V43 ;
"RTN","LRVER5",74,0)
 ;ZEXCEPT: DIC,LRNUF,LRNX,LRORD,LRPLOC,LRSA,LRSB,LRSS,LRSSQ,LRTS,SX,X,Y
"RTN","LRVER5",75,0)
 ;
"RTN","LRVER5",76,0)
 S X=$P(X,U,2),DIC="^LAB(60,",DIC(0)="EOQZ" D ^DIC G:Y<1 Q42
"RTN","LRVER5",77,0)
 S LRPLOC=$P(Y(0),U,5),LRSSQ=$P(LRPLOC,";",1),LRSB=$P(LRPLOC,";",2),LRTS=+Y
"RTN","LRVER5",78,0)
 I LRSSQ="" W !,"Not in this group" G LROUT
"RTN","LRVER5",79,0)
 I LRSS'=LRSSQ!'$D(^TMP("LR",$J,"TMP",LRSB)) W !,"Not in this group" G LROUT
"RTN","LRVER5",80,0)
 S LRNX=0
"RTN","LRVER5",81,0)
 F  S LRNX=$O(LRORD(LRNX)) Q:LRNX<1  Q:LRSB=LRORD(LRNX)
"RTN","LRVER5",82,0)
 I LRNX,LRSB=LRORD(LRNX) D LRSUBS,V25 G V42
"RTN","LRVER5",83,0)
 ;
"RTN","LRVER5",84,0)
V44 K SX
"RTN","LRVER5",85,0)
 D COM^LRVER4
"RTN","LRVER5",86,0)
 S LRNUF=1 S:LRVF LRSA=1
"RTN","LRVER5",87,0)
 Q
"RTN","LRVER5",88,0)
 ;
"RTN","LRVER5",89,0)
V45 ;
"RTN","LRVER5",90,0)
 ;
"RTN","LRVER5",91,0)
 ;ZEXCEPT: LRDFN,LRIDT,LRM,LRSA,LRSB,LRSKIP,LRSS,LRTS,LRVF,LRXD,LRXDP,SX,X
"RTN","LRVER5",92,0)
 ;
"RTN","LRVER5",93,0)
 K LRSKIP
"RTN","LRVER5",94,0)
 I X="@" D  G V46
"RTN","LRVER5",95,0)
 . K:'$G(LRVF) ^LR(LRDFN,LRSS,LRIDT,LRSB)
"RTN","LRVER5",96,0)
 . S X=$S($G(LRVF)&($D(LRSB(LRSB)))&('$D(LRM(LRSB))):"comment",$D(LRM(LRSB)):"pending",$D(LRSA(LRSB)):"canc",1:"")
"RTN","LRVER5",97,0)
 . S $P(LRSB(LRSB),"^")=X,$P(LRSB(LRSB),"^",2)=""
"RTN","LRVER5",98,0)
 ;
"RTN","LRVER5",99,0)
 ; If user has LRDATA security and wants to edit units and reference ranges.
"RTN","LRVER5",100,0)
 I X="~" D  G Q42A
"RTN","LRVER5",101,0)
 . N LRKEY
"RTN","LRVER5",102,0)
 . D OWNSKEY^XUSRB(.LRKEY,"LRDATA")
"RTN","LRVER5",103,0)
 . I LRKEY(0)=1 D EDITUNR
"RTN","LRVER5",104,0)
 . S X=SX
"RTN","LRVER5",105,0)
 ;
"RTN","LRVER5",106,0)
 S LRXD=U_$P(^LAB(60,LRTS,0),U,12),LRXDP=LRXD_"0)",LRXDP=@LRXDP
"RTN","LRVER5",107,0)
 X:'(X="*"!($E(X)="?")!(X="C")!(X="#")!(X="canc")!(X="pending")) $P(LRXDP,U,5,99)
"RTN","LRVER5",108,0)
 I '$D(X)#2 D HELP G V42
"RTN","LRVER5",109,0)
 I $D(X)#2,X["?" D HELP G:'($P(LRXDP,U,2)["S") V42
"RTN","LRVER5",110,0)
 I $D(X)#2,$P(LRXDP,U,2)["S",X'="*",X'="#",X'="canc",X'="pending" D LRSET G:'$D(X)#2 V42
"RTN","LRVER5",111,0)
 I $D(X)#2,X="C",$P(LRXDP,U,2)'["S" D COMP G V42
"RTN","LRVER5",112,0)
 ;
"RTN","LRVER5",113,0)
V46 ;
"RTN","LRVER5",114,0)
 G V42:'$D(X)#2
"RTN","LRVER5",115,0)
 I LRVF,$D(LRSB(LRSB)),$D(LRSA(LRSB)) S LRSA(LRSB,1)=LRTEST
"RTN","LRVER5",116,0)
 S X1=$S($D(^LR(LRDFN,LRSS,+LRLDT,LRSB)):$P(^(LRSB),U),1:"")
"RTN","LRVER5",117,0)
 S:X="*" X="canc" S:X="#" X="comment"
"RTN","LRVER5",118,0)
 ;
"RTN","LRVER5",119,0)
 I '$G(LRAMEND(LRSB)) S LRFLG=""
"RTN","LRVER5",120,0)
 S Y=0
"RTN","LRVER5",121,0)
 I LRDEL'="" S LRQ=1 D XDELTACK^LRVERA K LRQ
"RTN","LRVER5",122,0)
 I '$G(LRAMEND(LRSB)) D RANGE^LRVER4
"RTN","LRVER5",123,0)
 ;
"RTN","LRVER5",124,0)
 S:$P(X,U)="" $P(LRSB(LRSB),U)=""
"RTN","LRVER5",125,0)
 I $P(X,U)'="" D
"RTN","LRVER5",126,0)
 . S $P(LRSB(LRSB),U)=X,$P(LRSB(LRSB),U,2)=LRFLG
"RTN","LRVER5",127,0)
 . S LRX=$$TMPSB^LRVER1(LRSB),LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVER5",128,0)
 . F I=1:1:$L(LRX,"!") I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,"!",I)
"RTN","LRVER5",129,0)
 . S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVER5",130,0)
 . I $P($P(LRSB(LRSB),U,3),"!")="" D RONLT^LRVER3
"RTN","LRVER5",131,0)
 . D
"RTN","LRVER5",132,0)
 . . I '$D(LRSA(LRSB))#2 D  Q
"RTN","LRVER5",133,0)
 . . . S $P(LRSB(LRSB),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER5",134,0)
 . . . S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRVER5",135,0)
 . . S:'$P(LRSB(LRSB),U,4) $P(LRSB(LRSB),U,4)=$S($G(LRDUZ):LRDUZ,1:$G(DUZ))
"RTN","LRVER5",136,0)
 . S $P(LRSB(LRSB),U,5)=$TR(LRNGS,U,"!")
"RTN","LRVER5",137,0)
 . S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRVER5",138,0)
 G:$D(LRNUF) V44 K LRNUF G V40:'$D(LRSKIP) S X=LRSKIP G Q43:X["^",V40
"RTN","LRVER5",139,0)
 ;
"RTN","LRVER5",140,0)
 ;
"RTN","LRVER5",141,0)
RANGE ;
"RTN","LRVER5",142,0)
 ;
"RTN","LRVER5",143,0)
 ;ZEXCEPT: LRDUZ,LRSB,X
"RTN","LRVER5",144,0)
 ;
"RTN","LRVER5",145,0)
 S $P(LRSB(LRSB),"^")=X
"RTN","LRVER5",146,0)
 ; If previous results from another laboratory then use normals and units
"RTN","LRVER5",147,0)
 ; associated with those results.
"RTN","LRVER5",148,0)
 D
"RTN","LRVER5",149,0)
 . I $G(LRDUZ(2)),DUZ(2)'=LRDUZ(2) D PLNR^LRVR4 Q
"RTN","LRVER5",150,0)
 . I $P(LRSB(LRSB),"^",9),DUZ(2)'=$P(LRSB(LRSB),"^",9) D PLNR^LRVR4
"RTN","LRVER5",151,0)
 D RANGE^LRVER4
"RTN","LRVER5",152,0)
 Q
"RTN","LRVER5",153,0)
 ;
"RTN","LRVER5",154,0)
 ;
"RTN","LRVER5",155,0)
LRSUBS ; From LRVR5
"RTN","LRVER5",156,0)
 ;
"RTN","LRVER5",157,0)
 ;ZEXCEPT: LRNX,LRORD,LRSB,LRTS
"RTN","LRVER5",158,0)
 ;
"RTN","LRVER5",159,0)
 S LRSB=LRORD(LRNX),LRTS=$S($D(^TMP("LR",$J,"TMP",LRSB))#2:^(LRSB),1:0)
"RTN","LRVER5",160,0)
 Q
"RTN","LRVER5",161,0)
 ;
"RTN","LRVER5",162,0)
 ;
"RTN","LRVER5",163,0)
LRSET ; from above and LRVR5
"RTN","LRVER5",164,0)
 ; Also called from Input Transform of file #60.01 field #9
"RTN","LRVER5",165,0)
 ;
"RTN","LRVER5",166,0)
 ;ZEXCEPT: DA,X
"RTN","LRVER5",167,0)
 ;
"RTN","LRVER5",168,0)
 N DIERR,I,LRERR,LRESULT
"RTN","LRVER5",169,0)
 ;
"RTN","LRVER5",170,0)
 ; If called from EXECUTABLE HELP of file #60, field #9 then set LRSB from DD info.
"RTN","LRVER5",171,0)
 I $G(LRSB)<1 N LRSB S LRSB=+$G(^LAB(60,+$G(DA(1)),.2))
"RTN","LRVER5",172,0)
 ;
"RTN","LRVER5",173,0)
 D CHK^DIE(63.04,LRSB,"EH",X,.LRESULT,"LRERR")
"RTN","LRVER5",174,0)
 I LRESULT'="^" D  Q  ;
"RTN","LRVER5",175,0)
 . D EN^DDIOL(" "_LRESULT(0),"","$C(32)")
"RTN","LRVER5",176,0)
 . S X=LRESULT
"RTN","LRVER5",177,0)
 ;
"RTN","LRVER5",178,0)
 I LRESULT="^" D
"RTN","LRVER5",179,0)
 . D MSG^DIALOG("WHB","","","","LRERR")
"RTN","LRVER5",180,0)
 . K X
"RTN","LRVER5",181,0)
 ;
"RTN","LRVER5",182,0)
 Q
"RTN","LRVER5",183,0)
 ;
"RTN","LRVER5",184,0)
 ;
"RTN","LRVER5",185,0)
COMP ; from LRVR5
"RTN","LRVER5",186,0)
 ;
"RTN","LRVER5",187,0)
 ;ZEXCEPT: C,I,X
"RTN","LRVER5",188,0)
 ;
"RTN","LRVER5",189,0)
 S X="^%ET",@^%ZOSF("TRAP")
"RTN","LRVER5",190,0)
 R !,"Enter your computation: ",C:DTIME
"RTN","LRVER5",191,0)
 Q:"^"[C  G CH:C="?"!(C["""") S C=$P(C," ",1)
"RTN","LRVER5",192,0)
 S X="TRAP^LRVER5",@^%ZOSF("TRAP") D ^DIM S X="W "_C
"RTN","LRVER5",193,0)
 I '$D(X)#2 W !,"Something's wrong with the syntax." G CH
"RTN","LRVER5",194,0)
 F I=1:1:$L(C) I $E(C,I)?1A S I=.9 Q
"RTN","LRVER5",195,0)
 G CH:I=.9,CH:C["/0",CH:C["\0" W !," equals ",@C G COMP
"RTN","LRVER5",196,0)
 ;
"RTN","LRVER5",197,0)
TRAP ; Error trap for COMP subroutine above
"RTN","LRVER5",198,0)
 W !!,"Error in your mathematical formula ",!
"RTN","LRVER5",199,0)
CH W !,"Enter for example: 5*2/4+1 and 3.5 will be returned [i.e. ((5*2)/4)+1=3.5]"
"RTN","LRVER5",200,0)
 G COMP
"RTN","LRVER5",201,0)
 ;
"RTN","LRVER5",202,0)
 ;
"RTN","LRVER5",203,0)
V25 ; From LRVER4, LRSTUF2
"RTN","LRVER5",204,0)
 ;
"RTN","LRVER5",205,0)
 ;ZEXCEPT: AGE,LRDEL,LRDUZ,LRDV,LRFP,LRNG,LRNGS,LRSA,LRSB,LRSPEC,LRTS,LRVF,N,SEX,X2
"RTN","LRVER5",206,0)
 ;
"RTN","LRVER5",207,0)
 N LRTX,LRX
"RTN","LRVER5",208,0)
 S (LRDV,LRNG,LRDEL,LRNGS)=""
"RTN","LRVER5",209,0)
 I '$D(^LAB(60,+LRTS,0))#2 Q
"RTN","LRVER5",210,0)
 S LRX=+$P($P(^LAB(60,+LRTS,0),U,5),";",2)
"RTN","LRVER5",211,0)
 S LRTX=$S($L($P(^LAB(60,+LRTS,0),U,5)):$O(^LAB(60,"C",$P(^LAB(60,+LRTS,0),U,5),0)),1:+LRTS)
"RTN","LRVER5",212,0)
 S LRFP=$P(^LAB(60,LRTX,.1),U,3)
"RTN","LRVER5",213,0)
 I LRFP="" S LRFP="$J(X,8)"
"RTN","LRVER5",214,0)
 ;
"RTN","LRVER5",215,0)
 ; Normal ranges, units, delta checks and default value
"RTN","LRVER5",216,0)
 I $D(^LAB(60,LRTX,1,+$G(LRSPEC),0)) D
"RTN","LRVER5",217,0)
 . S LRNG=^LAB(60,LRTX,1,+$G(LRSPEC),0)
"RTN","LRVER5",218,0)
 . S LRDEL=$G(^LAB(62.1,+$P(LRNG,U,8),1))
"RTN","LRVER5",219,0)
 . S LRDEL(1)=$G(^LAB(62.1,+$P(LRNG,U,8),2),"Q")
"RTN","LRVER5",220,0)
 . S X2=$P(LRNG,U,9)
"RTN","LRVER5",221,0)
 . S LRDV=$S('$D(LRSB(LRX)):$P(LRNG,U,10),1:"")
"RTN","LRVER5",222,0)
 ;
"RTN","LRVER5",223,0)
 ; When entering results from a reference lab check if flag to use normals/units from file 60.
"RTN","LRVER5",224,0)
 I $G(LRDUZ(2)),LRDUZ(2)'=DUZ(2),'$G(^LAB(60,LRTX,1,+$G(LRSPEC),.1)) D PLNR^LRVR4
"RTN","LRVER5",225,0)
 ;
"RTN","LRVER5",226,0)
NORM ;
"RTN","LRVER5",227,0)
 ;
"RTN","LRVER5",228,0)
 ; Use previously stored units/normals if editing previous verified results.
"RTN","LRVER5",229,0)
 I $G(LRSB) D
"RTN","LRVER5",230,0)
 . I $D(LRSA(LRSB)) D
"RTN","LRVER5",231,0)
 . . I $P(LRSA(LRSB),"^")?1(1"pending",1"comment",1"canc") Q
"RTN","LRVER5",232,0)
 . . S LRNG=$P(LRSA(LRSB),"^",5),LRNG=$TR(LRNG,"!","^")
"RTN","LRVER5",233,0)
 ;
"RTN","LRVER5",234,0)
 D NORM2
"RTN","LRVER5",235,0)
 ;
"RTN","LRVER5",236,0)
 Q
"RTN","LRVER5",237,0)
 ;
"RTN","LRVER5",238,0)
NORM2 ;
"RTN","LRVER5",239,0)
 ;
"RTN","LRVER5",240,0)
 ;ZEXCEPT: AGE,LRNG,LRNGS,LRX,SEX
"RTN","LRVER5",241,0)
 ;
"RTN","LRVER5",242,0)
 I $G(SEX)="" S SEX="M"
"RTN","LRVER5",243,0)
 I $G(AGE)="" S AGE=99
"RTN","LRVER5",244,0)
 ;
"RTN","LRVER5",245,0)
 S LRNGS=LRNG
"RTN","LRVER5",246,0)
 F LRX=2:1:5 D
"RTN","LRVER5",247,0)
 . N LRY
"RTN","LRVER5",248,0)
 . S LRY=$P(LRNG,"^",LRX)
"RTN","LRVER5",249,0)
 . ; enclose in quotes if text or structured numeric
"RTN","LRVER5",250,0)
 . I LRY'="",$E(LRY)?.(1A,1"<",1">") S LRY=$C(34)_LRY_$C(34)
"RTN","LRVER5",251,0)
 . I LRY'="",$E(LRY)'=$C(34),LRY'?.N.1".".N S @("LRY"_"="_LRY)
"RTN","LRVER5",252,0)
 . S $P(LRNG,"^",LRX)=LRY,$P(LRNGS,"^",LRX)=LRY,@("LRNG"_LRX)=LRY
"RTN","LRVER5",253,0)
 Q
"RTN","LRVER5",254,0)
 ;
"RTN","LRVER5",255,0)
 ;
"RTN","LRVER5",256,0)
LROUT ;
"RTN","LRVER5",257,0)
 ;
"RTN","LRVER5",258,0)
 ;ZEXCEPT: LROUT,SX
"RTN","LRVER5",259,0)
 ;
"RTN","LRVER5",260,0)
 K SX
"RTN","LRVER5",261,0)
 S LROUT=1
"RTN","LRVER5",262,0)
 Q
"RTN","LRVER5",263,0)
 ;
"RTN","LRVER5",264,0)
 ;
"RTN","LRVER5",265,0)
HELP ; Display help prompt from test result entry.
"RTN","LRVER5",266,0)
 ;
"RTN","LRVER5",267,0)
 ;ZEXCEPT: LRXD,LRXDH
"RTN","LRVER5",268,0)
 ;
"RTN","LRVER5",269,0)
 N LRKEY
"RTN","LRVER5",270,0)
 W !," ??",$C(7) S LRXDH=LRXD_"3)"
"RTN","LRVER5",271,0)
 W:$D(@LRXDH) " ",@LRXDH
"RTN","LRVER5",272,0)
 W !,"Enter * to report ""canc"" for canceled."
"RTN","LRVER5",273,0)
 W !,"Enter # to report ""comment""."
"RTN","LRVER5",274,0)
 W:'($P(LRXDP,U,2)["S") !,"Enter C to enter calculate mode."
"RTN","LRVER5",275,0)
 D OWNSKEY^XUSRB(.LRKEY,"LRDATA")
"RTN","LRVER5",276,0)
 I LRKEY(0)=1 W !,"Enter ~ to edit units/reference ranges."
"RTN","LRVER5",277,0)
 Q
"RTN","LRVER5",278,0)
 ;
"RTN","LRVER5",279,0)
 ;
"RTN","LRVER5",280,0)
EDITUNR ; Allow user to edit units and normal reference ranges.
"RTN","LRVER5",281,0)
 ;
"RTN","LRVER5",282,0)
 ;ZEXCEPT: LRNG,LRNGS,LRSB,LRSPEC,LRTS
"RTN","LRVER5",283,0)
 ;
"RTN","LRVER5",284,0)
 N LRX,LRY
"RTN","LRVER5",285,0)
 I $D(^LAB(60,+LRTS,1,+$G(LRSPEC),0)) D
"RTN","LRVER5",286,0)
 . N DIR,DIRUT,DTOUT,DUOUT,LRNNG,LRNNG2,LRNNG3,LRNNG4,LRNNG5,X,Y
"RTN","LRVER5",287,0)
 . S LRNNG=^LAB(60,+LRTS,1,+$G(LRSPEC),0)
"RTN","LRVER5",288,0)
 . F LRX=2:1:5 D
"RTN","LRVER5",289,0)
 . . S LRY=$P(LRNNG,"^",LRX)
"RTN","LRVER5",290,0)
 . . ; enclose in quotes if text or structured numeric
"RTN","LRVER5",291,0)
 . . I LRY'="",$E(LRY)?.(1A,1"<",1">") S LRY=$C(34)_LRY_$C(34)
"RTN","LRVER5",292,0)
 . . I LRY'="",$E(LRY)'=$C(34),LRY'?.N.1".".N S @("LRY"_"="_LRY)
"RTN","LRVER5",293,0)
 . . S $P(LRNNG,"^",LRX)=LRY,@("LRNNG"_LRX)=LRY
"RTN","LRVER5",294,0)
 . W !
"RTN","LRVER5",295,0)
 . S DIR("A",1)="Current Laboratory Test File Values"
"RTN","LRVER5",296,0)
 . S DIR("A",2)="Current Ref Range: "_LRNNG2_"-"_LRNNG3_" Units: "_$P(LRNNG,"^",7)
"RTN","LRVER5",297,0)
 . I LRNNG4="",LRNNG5=""
"RTN","LRVER5",298,0)
 . E  S DIR("A",3)="     Critical Low: "_LRNNG4_" Critical High: "_LRNNG5
"RTN","LRVER5",299,0)
 . S DIR(0)="YO",DIR("A")="Use these values",DIR("B")="NO"
"RTN","LRVER5",300,0)
 . D ^DIR
"RTN","LRVER5",301,0)
 . I Y'=1 Q
"RTN","LRVER5",302,0)
 . S LRX=$P(LRNNG,"^",2,5),LRX=$TR(LRX,"^","!")
"RTN","LRVER5",303,0)
 . S LRY=$P($G(LRSB(LRSB)),"^",5),$P(LRY,"!",2,5)=LRX,$P(LRY,"!",7)=$P(LRNNG,"^",7)
"RTN","LRVER5",304,0)
 . S $P(LRSB(LRSB),"^",5)=LRY,(LRNG,LRNGS)=LRNNG
"RTN","LRVER5",305,0)
 ;
"RTN","LRVER5",306,0)
 D ASKPLNR
"RTN","LRVER5",307,0)
 ;
"RTN","LRVER5",308,0)
 F LRX=2:1:5 D
"RTN","LRVER5",309,0)
 . N LRY
"RTN","LRVER5",310,0)
 . S LRY=$P(LRNG,"^",LRX)
"RTN","LRVER5",311,0)
 . ; enclose in quotes if text or structured numeric
"RTN","LRVER5",312,0)
 . I LRY'="",$E(LRY)?.(1A,1"<",1">") S LRY=$C(34)_LRY_$C(34)
"RTN","LRVER5",313,0)
 . I LRY'="",$E(LRY)'=$C(34),LRY'?.N.1".".N S @("LRY"_"="_LRY)
"RTN","LRVER5",314,0)
 . S $P(LRNG,"^",LRX)=LRY,$P(LRNGS,"^",LRX)=LRY,@("LRNG"_LRX)=LRY
"RTN","LRVER5",315,0)
 ;
"RTN","LRVER5",316,0)
 S LRX=$P(LRNGS,"^",2,5),LRX=$TR(LRX,"^","!")
"RTN","LRVER5",317,0)
 S LRY=$P($G(LRSB(LRSB)),"^",5),$P(LRY,"!",2,5)=LRX,$P(LRY,"!",7)=$P(LRNGS,"^",7)
"RTN","LRVER5",318,0)
 S $P(LRSB(LRSB),"^",5)=LRY
"RTN","LRVER5",319,0)
 ;
"RTN","LRVER5",320,0)
 Q
"RTN","LRVER5",321,0)
 ;
"RTN","LRVER5",322,0)
 ;
"RTN","LRVER5",323,0)
AMEND ; Process amended results and prompt user
"RTN","LRVER5",324,0)
 ;
"RTN","LRVER5",325,0)
 ;ZEXCEPT: LRAMEND,LRFLG,LRNG,LRNGS,LRSB,LRUID,X
"RTN","LRVER5",326,0)
 ;
"RTN","LRVER5",327,0)
 N DIR,DIRUT,DTOUT,DUOUT,LRANS,LRI,LRJ,LRLL,LRROOT,LRSQ,LRX,LRY,Y
"RTN","LRVER5",328,0)
 ;
"RTN","LRVER5",329,0)
 ; flag to indicate if amended results have been extracted from LAH
"RTN","LRVER5",330,0)
 S LRAMEND=0
"RTN","LRVER5",331,0)
 ;
"RTN","LRVER5",332,0)
 ; save current value of X
"RTN","LRVER5",333,0)
 S LRX=X
"RTN","LRVER5",334,0)
 ;
"RTN","LRVER5",335,0)
 S LRROOT=$Q(^LAH("LA7 AMENDED RESULTS",LRUID,LRSB))
"RTN","LRVER5",336,0)
 I LRROOT="" Q
"RTN","LRVER5",337,0)
 I $QS(LRROOT,1)'="LA7 AMENDED RESULTS"!($QS(LRROOT,2)'=LRUID)!($QS(LRROOT,3)'=LRSB) Q
"RTN","LRVER5",338,0)
 S LRLL=$QS(LRROOT,4),LRSQ=$QS(LRROOT,5)
"RTN","LRVER5",339,0)
 ;
"RTN","LRVER5",340,0)
 ; If corresponding corrected value has been deleted from LAH global
"RTN","LRVER5",341,0)
 ; - then cleanup cross-reference and quit
"RTN","LRVER5",342,0)
 I '$D(^LAH(LRLL,1,LRSQ,LRSB)) D  Q
"RTN","LRVER5",343,0)
 . W !!,"The related amended result has been purged"
"RTN","LRVER5",344,0)
 . W !,"Unable to process this result."
"RTN","LRVER5",345,0)
 . K ^LAH("LA7 AMENDED RESULTS",LRUID,LRSB,LRLL,LRSQ)
"RTN","LRVER5",346,0)
 . S X=LRX
"RTN","LRVER5",347,0)
 ;
"RTN","LRVER5",348,0)
 S LRY=^LAH(LRLL,1,LRSQ,LRSB)
"RTN","LRVER5",349,0)
 S DIR(0)="SOA^0:No;1:Yes;2:Keep but do not process",DIR("B")="Yes"
"RTN","LRVER5",350,0)
 S DIR("A",1)=" ",DIR("A",2)="Amended result: "_$P(LRY,"^")
"RTN","LRVER5",351,0)
 S DIR("A",2)=DIR("A",2)_"    flag: "_$S($P(LRY,"^",2)'="":$P(LRY,"^",2),1:"None")
"RTN","LRVER5",352,0)
 S DIR("A",2)=DIR("A",2)_"    units: "_$P($P(LRY,"^",5),"!",7)
"RTN","LRVER5",353,0)
 S DIR("A")="Accept amended results: "
"RTN","LRVER5",354,0)
 S DIR("?",1)="Answer with"
"RTN","LRVER5",355,0)
 S DIR("?",2)="0 - No to not accept amended result and delete."
"RTN","LRVER5",356,0)
 S DIR("?",3)="1 - Yes to process amended result."
"RTN","LRVER5",357,0)
 S DIR("?")="or 2 - Keep which skips processing but leaves result for future processing."
"RTN","LRVER5",358,0)
 D ^DIR
"RTN","LRVER5",359,0)
 I $D(DIRUT) Q
"RTN","LRVER5",360,0)
 S LRANS=Y
"RTN","LRVER5",361,0)
 ;
"RTN","LRVER5",362,0)
 ; Process this amended result, set LRX to amended value
"RTN","LRVER5",363,0)
 I LRANS=1 D
"RTN","LRVER5",364,0)
 . S LRX=$P(LRY,"^"),LRFLG=$P(LRY,"^",2),LRSB(LRSB)=LRY,LRJ=$P(LRY,"^",5)
"RTN","LRVER5",365,0)
 . F LRI=1,2,3,4,5,7,11,12 S $P(LRNG,"^",LRI)=$P(LRJ,"!",LRI)
"RTN","LRVER5",366,0)
 . S LRNGS=LRNG,(LRAMEND,LRAMEND(LRSB))=1
"RTN","LRVER5",367,0)
 . D LRSBCOM^LRVR4 ; also process any comments
"RTN","LRVER5",368,0)
 ;
"RTN","LRVER5",369,0)
 ; Cleanup cross-reference unless user indicates they want to keep.
"RTN","LRVER5",370,0)
 I LRANS<2 D
"RTN","LRVER5",371,0)
 . K ^LAH(LRLL,1,LRSQ,LRSB)
"RTN","LRVER5",372,0)
 . K ^LAH("LA7 AMENDED RESULTS",LRUID,LRSB,LRLL,LRSQ)
"RTN","LRVER5",373,0)
 ;
"RTN","LRVER5",374,0)
 ; If no other results then cleanup entry in LAH.
"RTN","LRVER5",375,0)
 I +$O(^LAH(LRLL,1,LRSQ,1))<1 D ZAPALL^LRVR3(LRLL,LRSQ)
"RTN","LRVER5",376,0)
 ;
"RTN","LRVER5",377,0)
 ; Restore X to either original value of X or new amended value
"RTN","LRVER5",378,0)
 S X=LRX
"RTN","LRVER5",379,0)
 Q
"RTN","LRVER5",380,0)
 ;
"RTN","LRVER5",381,0)
 ;
"RTN","LRVER5",382,0)
ASKPLNR ; Ask user for performing lab normal ranges and units when entering
"RTN","LRVER5",383,0)
 ; manually and not using values from file #60.
"RTN","LRVER5",384,0)
 ;
"RTN","LRVER5",385,0)
 ;ZEXCEPT: LRNG,LRNGS,LRRFLAG,LRSB,LRSPEC,LRTEST
"RTN","LRVER5",386,0)
 ;
"RTN","LRVER5",387,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LRI,LRJ,LRX,LRY,Y,X,Y
"RTN","LRVER5",388,0)
 ;
"RTN","LRVER5",389,0)
 S LRX=$TR(LRNGS,"^","!")
"RTN","LRVER5",390,0)
 ;
"RTN","LRVER5",391,0)
 W !!,"For test ",LRTEST
"RTN","LRVER5",392,0)
 S DIR(0)="60.01,6"
"RTN","LRVER5",393,0)
 I $P(LRX,"!",7)'="" S DIR("B")=$P(LRX,"!",7)
"RTN","LRVER5",394,0)
 D ^DIR
"RTN","LRVER5",395,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","LRVER5",396,0)
 ; Set units into component 7 of piece 5
"RTN","LRVER5",397,0)
 S $P(LRX,"!",7)=Y,$P(LRSB(LRSB),"^",5)=LRX
"RTN","LRVER5",398,0)
 ;
"RTN","LRVER5",399,0)
 ; Ask normals - high/low and critical
"RTN","LRVER5",400,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","LRVER5",401,0)
 F LRJ=1,2,3,4 D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","LRVER5",402,0)
 . K DIR
"RTN","LRVER5",403,0)
 . S DIR(0)="60.01,"_LRJ,LRI=LRJ+1
"RTN","LRVER5",404,0)
 . I $P(LRX,"!",LRI)'="" D
"RTN","LRVER5",405,0)
 . . S DIR("B")=$P(LRX,"!",LRI)
"RTN","LRVER5",406,0)
 . . I $E(DIR("B"))=$C(34) Q
"RTN","LRVER5",407,0)
 . . I DIR("B")'?.N.1".".N S DIR("B")=$C(34)_DIR("B")_$C(34) ; enclose in quotes if text
"RTN","LRVER5",408,0)
 . D ^DIR
"RTN","LRVER5",409,0)
 . I $D(DTOUT)!($D(DUOUT)) Q
"RTN","LRVER5",410,0)
 . S $P(LRX,"!",LRI)=Y
"RTN","LRVER5",411,0)
 ;
"RTN","LRVER5",412,0)
 ; Ask user for normality in case user does not know high/low/critical.
"RTN","LRVER5",413,0)
 S LRRFLAG(LRSB)=$$RFLAG^LRVERA($P($G(LRSB(LRSB)),"^",2))
"RTN","LRVER5",414,0)
 ;
"RTN","LRVER5",415,0)
 ; Update normal variable LRNG
"RTN","LRVER5",416,0)
 I $P(LRX,"!")="" S $P(LRX,"!")=LRSPEC
"RTN","LRVER5",417,0)
 F LRI=1,2,3,4,5,7 S $P(LRNG,"^",LRI)=$P(LRX,"!",LRI)
"RTN","LRVER5",418,0)
 S LRNGS=LRNG
"RTN","LRVER5",419,0)
 ;
"RTN","LRVER5",420,0)
 Q
"RTN","LRVR3")
0^3^B108418700
"RTN","LRVR3",1,0)
LRVR3 ;DALOI/STAFF - LAB ROUTINE DATA VERIFICATION ;04/05/16  12:22
"RTN","LRVR3",2,0)
 ;;5.2;LAB SERVICE;**42,121,153,286,291,350,458**;Sep 27, 1994;Build 10
"RTN","LRVR3",3,0)
 ;
"RTN","LRVR3",4,0)
 D V1
"RTN","LRVR3",5,0)
 I $D(LRLOCKER)#2 L -@(LRLOCKER) K LRLOCKER
"RTN","LRVR3",6,0)
 K LRSA,LRSB,LRNOVER,LRSBCOM,LRLKOK
"RTN","LRVR3",7,0)
 ; Leave LRVR3, back to LRVR2
"RTN","LRVR3",8,0)
 Q
"RTN","LRVR3",9,0)
 ;
"RTN","LRVR3",10,0)
 ;
"RTN","LRVR3",11,0)
V1 ;
"RTN","LRVR3",12,0)
 ;
"RTN","LRVR3",13,0)
 ; Warn and prompt if it appears user is entering reference lab result and message came from auto instrument (UI type=1)
"RTN","LRVR3",14,0)
 I $G(LRDUZ(2)),LRDUZ(2)'=DUZ(2),$P($G(^LAH(LRLL,1,LRSQ,0)),"^",12)=1,'$$UICHK Q
"RTN","LRVR3",15,0)
 ;
"RTN","LRVR3",16,0)
 ;
"RTN","LRVR3",17,0)
 S LRTN=1
"RTN","LRVR3",18,0)
 I $D(LRLOCKER)#2 L -@(LRLOCKER)
"RTN","LRVR3",19,0)
 S LRLOCKER="^LR("_LRDFN_","""_LRSS_""","_LRIDT_")"
"RTN","LRVR3",20,0)
 L +@(LRLOCKER):DILOCKTM
"RTN","LRVR3",21,0)
 I '$T W !," This entry is being edited by someone else." Q
"RTN","LRVR3",22,0)
 ; LRNOVER set in LRVR2
"RTN","LRVR3",23,0)
 K LRLKOK D LINK Q:'$D(LRLKOK)  K LRLKOK D LKCHK Q:'$D(LRLKOK)
"RTN","LRVR3",24,0)
 K LRSA,LRSB,LRSBCOM,LRSBEPR
"RTN","LRVR3",25,0)
 ;
"RTN","LRVR3",26,0)
 ; Calculate days back for delta check based on specimen collection date/time.
"RTN","LRVR3",27,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRVR3",28,0)
 ;
"RTN","LRVR3",29,0)
 S LRCMTDSP=$$CHKCDSP^LRVERA
"RTN","LRVR3",30,0)
 N LRX
"RTN","LRVR3",31,0)
 S LRX=1
"RTN","LRVR3",32,0)
 F  S LRX=$O(^LAH(LRLL,1,LRSQ,LRX)) Q:LRX<1  D
"RTN","LRVR3",33,0)
 . S LRSB(LRX)=^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRVR3",34,0)
 . I $D(LRNOVER),$D(LRVTS(LRX)),$D(^TMP("LR",$J,"TMP",LRX)) S LRNOVER(LRX)=""
"RTN","LRVR3",35,0)
 ; Copy comments from LAH
"RTN","LRVR3",36,0)
 S LRX=0
"RTN","LRVR3",37,0)
 F  S LRX=$O(^LAH(LRLL,1,LRSQ,1,LRX)) Q:LRX=""  S LRSBCOM(LRX)=^(LRX)
"RTN","LRVR3",38,0)
 ;
"RTN","LRVR3",39,0)
 ; Copy filler id associated with each dataname from LAH.
"RTN","LRVR3",40,0)
 M LRSBEPR=^LAH(LRLL,1,LRSQ,.1,"OBR","FID")
"RTN","LRVR3",41,0)
 ;
"RTN","LRVR3",42,0)
 ;
"RTN","LRVR3",43,0)
EDIT ;
"RTN","LRVR3",44,0)
 I $D(^LAH(LRLL,1,LRSQ,0)) D
"RTN","LRVR3",45,0)
 . N X
"RTN","LRVR3",46,0)
 . S LREDIT=1
"RTN","LRVR3",47,0)
 . F LRX=0,.1,.3 M X(LRX)=^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRVR3",48,0)
 . K ^LAH(LRLL,1,LRSQ),LRNUF
"RTN","LRVR3",49,0)
 . F LRX=0,.1,.3 M ^LAH(LRLL,1,LRSQ,LRX)=X(LRX) K X(LRX)
"RTN","LRVR3",50,0)
 . D ^LRVR4
"RTN","LRVR3",51,0)
 . F LRX=1:0 S LRX=$O(LRSB(LRX)) Q:LRX<1  S ^LAH(LRLL,1,LRSQ,LRX)=LRSB(LRX)
"RTN","LRVR3",52,0)
 I $O(^LAH(LRLL,1,LRSQ,1))<1 W !,"NO DATA TO APPROVE" Q
"RTN","LRVR3",53,0)
 Q:$D(LRGVP)
"RTN","LRVR3",54,0)
 ;
"RTN","LRVR3",55,0)
 N LRI
"RTN","LRVR3",56,0)
 S LRI=1
"RTN","LRVR3",57,0)
 F  S LRI=$O(LRNOVER(LRI)) Q:LRI=""  D
"RTN","LRVR3",58,0)
 . N LRX,LRERR
"RTN","LRVR3",59,0)
 . S LRX="Test Not Reviewed: "_$$GET1^DID(63.04,LRI,"","LABEL","","LRERR")
"RTN","LRVR3",60,0)
 . I $G(LRERR("DIERR",1)) W !,"For DATANAME "_LRI_" - "_LRERR("DIERR",1,"TEXT",1) Q
"RTN","LRVR3",61,0)
 . W !,LRX
"RTN","LRVR3",62,0)
 . I $D(LRSB(LRI))#2 W " = "_$P(LRSB(LRI),U)_" "_$P(LRSB(LRI),U,2)
"RTN","LRVR3",63,0)
 I $O(LRNOVER(0)) W !,"Have not been reviewed and have data.  Not approved." QUIT
"RTN","LRVR3",64,0)
 ;
"RTN","LRVR3",65,0)
 I '$P($G(LRLABKY),U) W !,$C(7),"ENTERED BUT NOT APPROVED" QUIT
"RTN","LRVR3",66,0)
 ;
"RTN","LRVR3",67,0)
 N CNT S CNT=1
"RTN","LRVR3",68,0)
 ;
"RTN","LRVR3",69,0)
AGAIN ;
"RTN","LRVR3",70,0)
 R !,"Approve for release by entering your initials: ",LRINI:DTIME
"RTN","LRVR3",71,0)
 I $E(LRINI)="^" W !!?5,$C(7),"Nothing verified!" D READ Q
"RTN","LRVR3",72,0)
 I LRINI'=LRUSI,$$UP^XLFSTR(LRINI)=$$UP^XLFSTR(LRUSI) S LRINI=LRUSI
"RTN","LRVR3",73,0)
 I $S($E(LRINI)="?":1,LRINI'=LRUSI&(CNT<2):1,1:0) W !,$C(7),"Please enter your correct initials" S:$E(LRINI)="?" CNT=0 S CNT=CNT+1 G AGAIN
"RTN","LRVR3",74,0)
 I LRINI'=LRUSI W !!?5,$C(7),"Nothing verified!" D READ Q
"RTN","LRVR3",75,0)
 ;
"RTN","LRVR3",76,0)
 D V11
"RTN","LRVR3",77,0)
 D ASKXQA^LRVER3
"RTN","LRVR3",78,0)
 Q
"RTN","LRVR3",79,0)
 ;
"RTN","LRVR3",80,0)
 ;
"RTN","LRVR3",81,0)
V11 ; Still locked from V1 L ^LR(LRDFN,LRSS,LRIDT)
"RTN","LRVR3",82,0)
 ;   Set filler id as external package reference for each data name
"RTN","LRVR3",83,0)
 N LRCORECT,LRNOW,LRX
"RTN","LRVR3",84,0)
 S (LRCORECT,LRX)=0,LRNOW=$$NOW^XLFDT
"RTN","LRVR3",85,0)
 F  S LRX=$O(^TMP("LR",$J,"TMP",LRX)) Q:LRX<1  I $D(LRVTS(LRX)),$D(LRSB(LRX)),$D(^(LRX)) D
"RTN","LRVR3",86,0)
 . K ^LAH(LRLL,1,LRSQ,LRX)
"RTN","LRVR3",87,0)
 . I $P(LRSB(LRX),"^")="" Q
"RTN","LRVR3",88,0)
 . S $P(LRSB(LRX),U,6)=LRNOW
"RTN","LRVR3",89,0)
 . S ^LR(LRDFN,LRSS,LRIDT,LRX)=LRSB(LRX)
"RTN","LRVR3",90,0)
 . S:'$D(^LRO(68,"AC",LRDFN,LRIDT,LRX)) ^(LRX)="" I LRVF S ^(LRX)=""
"RTN","LRVR3",91,0)
 . I $G(LRSBEPR(LRX))="" Q
"RTN","LRVR3",92,0)
 . N LRDATA,LRSITE
"RTN","LRVR3",93,0)
 . S LRSITE=$G(LRDUZ(2))
"RTN","LRVR3",94,0)
 . I LRSITE="" S LRSITE=$P(LRSB(LRX),"^",9)
"RTN","LRVR3",95,0)
 . S LRDATA(.01)=LRDFN_","_LRSS_","_LRIDT_","_LRX,LRDATA(.02)=4,LRDATA(1)=LRSBEPR(LRX)
"RTN","LRVR3",96,0)
 . I LRSITE'="" S LRDATA(.03)=LRSITE_";DIC(4,"
"RTN","LRVR3",97,0)
 . D SETREF^LRUEPR(LRDFN,LRDATA(.01),.LRDATA,1)
"RTN","LRVR3",98,0)
 ;
"RTN","LRVR3",99,0)
A3 ; Called from LRVRPOC, LRVRAR
"RTN","LRVR3",100,0)
 ;
"RTN","LRVR3",101,0)
 ; Set reporting site in file #63.
"RTN","LRVR3",102,0)
 D SETRL^LRVERA(LRDFN,LRSS,LRIDT,DUZ(2))
"RTN","LRVR3",103,0)
 ;
"RTN","LRVR3",104,0)
 I +LRDPF=2&($G(LRSS)'="BB")&('$$CHKINP^LRBEBA4(LRDFN,LRODT)) D
"RTN","LRVR3",105,0)
 . D BAWRK^LRBEBA(LRODT,LRSN,1,.LRBEY,.LRBETST)
"RTN","LRVR3",106,0)
 ;
"RTN","LRVR3",107,0)
 D VER^LRVER3A ;unlocked in LRVER
"RTN","LRVR3",108,0)
 ;
"RTN","LRVR3",109,0)
 ; Check for LEDI and return results
"RTN","LRVR3",110,0)
 I $P($G(LRORU3),U,3),$O(LRSB(0)) D LRORU3^LRVER3
"RTN","LRVR3",111,0)
 ;
"RTN","LRVR3",112,0)
 K LRSBCOM
"RTN","LRVR3",113,0)
 D:$P(LRPARAM,U,14)&($P($G(^LRO(68,LRAA,0)),U,16)) LOOK^LRCAPV1
"RTN","LRVR3",114,0)
 ;
"RTN","LRVR3",115,0)
 ; Check for LEDI tests not reviewed
"RTN","LRVR3",116,0)
 I $G(LRDUZ(2)),LRDUZ(2)'=DUZ(2),LRSS="CH",'$D(ZTQUEUED) D TNR
"RTN","LRVR3",117,0)
 ;
"RTN","LRVR3",118,0)
 I +$O(^LAH(LRLL,1,LRSQ,1))<1 D ZAPALL(LRLL,LRSQ)
"RTN","LRVR3",119,0)
 I $D(LRPRGSQ),'$D(ZTQUEUED) D
"RTN","LRVR3",120,0)
 . W !,"Purge data from sequence number(s): "
"RTN","LRVR3",121,0)
 . F I=0:0 S I=$O(LRPRGSQ(I)) Q:I<1  W " ",I
"RTN","LRVR3",122,0)
 . S %=2 D YN^DICN Q:%'=1
"RTN","LRVR3",123,0)
 . N LAIEN
"RTN","LRVR3",124,0)
 . S LAIEN=0
"RTN","LRVR3",125,0)
 . F  S LAIEN=$O(LRPRGSQ(LAIEN)) Q:LAIEN<1  D ZAPALL(LRLL,LAIEN)
"RTN","LRVR3",126,0)
 Q
"RTN","LRVR3",127,0)
 ;
"RTN","LRVR3",128,0)
 ;
"RTN","LRVR3",129,0)
ZAP ; from LRLLS3
"RTN","LRVR3",130,0)
 D ZAPALL(LRLL,I)
"RTN","LRVR3",131,0)
 Q
"RTN","LRVR3",132,0)
 ;
"RTN","LRVR3",133,0)
 ;
"RTN","LRVR3",134,0)
LINK ; Check and save link
"RTN","LRVR3",135,0)
 D LKCHK Q:$D(LRLKOK)
"RTN","LRVR3",136,0)
 S X=$S($D(^LRO(68,+$P(LRLK,U,3),1,+$P(LRLK,U,4),1,+$P(LRLK,U,5),0)):+^(0),1:"") G LINKOK:+X=LRDFN
"RTN","LRVR3",137,0)
 S S1=PNM,S2=SSN,S3=LRDPF
"RTN","LRVR3",138,0)
 ;
"RTN","LRVR3",139,0)
 W !,$C(7),"WARNING - NO MATCHING ACCESSION WAS FOUND."
"RTN","LRVR3",140,0)
 W !,"You may need to Clear instrument/worklist data,"
"RTN","LRVR3",141,0)
 W !,"or correctly identify the sample to the system."
"RTN","LRVR3",142,0)
 ;
"RTN","LRVR3",143,0)
 I X S LRDPF=$P(^LR(X,0),U,2),DFN=$P(^(0),U,3) D PT^LRX W !,PNM,?30,SSN,!,$C(7) S PNM=S1,SSN=S2,LRDPF=S3
"RTN","LRVR3",144,0)
 K S1,S2,S3
"RTN","LRVR3",145,0)
 Q:$D(LRGVP)
"RTN","LRVR3",146,0)
 W !,"ARE YOU SURE THIS IS THE CORRECT DATA" S %=2 D YN^DICN Q:%'=1
"RTN","LRVR3",147,0)
 ;
"RTN","LRVR3",148,0)
LINKOK ;
"RTN","LRVR3",149,0)
 K:$P(LRLK,U,5) ^LAH(LRLL,1,"C",+$P(LRLK,U,5),LRSQ)
"RTN","LRVR3",150,0)
 S ^LAH(LRLL,1,"C",LRAN,LRSQ)="",$P(^LAH(LRLL,1,LRSQ,0),U,3,5)=LRAA_U_LRAD_U_LRAN,LRLKOK=1
"RTN","LRVR3",151,0)
 Q
"RTN","LRVR3",152,0)
 ;
"RTN","LRVR3",153,0)
LKCHK S LRLK=$S($D(^LAH(LRLL,1,LRSQ,0)):^(0),1:"") I $P(LRLK,U,3)=LRAA&($P(LRLK,U,4)=LRAD)&($P(LRLK,U,5)=LRAN) S LRLKOK=1
"RTN","LRVR3",154,0)
 Q
"RTN","LRVR3",155,0)
 ;
"RTN","LRVR3",156,0)
 ;
"RTN","LRVR3",157,0)
ZAP2 ;Clear ^LAH(
"RTN","LRVR3",158,0)
 D ZAPALL(LRLL,I)
"RTN","LRVR3",159,0)
 Q
"RTN","LRVR3",160,0)
 ;
"RTN","LRVR3",161,0)
 ;
"RTN","LRVR3",162,0)
ZAPALL(LRLL,LAIEN) ;Clean up
"RTN","LRVR3",163,0)
 N I,NODE,SEG,SEGID,SUB
"RTN","LRVR3",164,0)
 Q:'$G(LRLL)!('$G(LAIEN))
"RTN","LRVR3",165,0)
 ;
"RTN","LRVR3",166,0)
 S NODE=$G(^LAH(LRLL,1,LAIEN,0))
"RTN","LRVR3",167,0)
 K ^LAH(LRLL,1,"AUTOREL",LAIEN)
"RTN","LRVR3",168,0)
 K ^LAH(LRLL,1,"B",+$P(NODE,U)_";"_+$P(NODE,U,2),LAIEN)
"RTN","LRVR3",169,0)
 K ^LAH(LRLL,1,"C",+$P(NODE,U,5),LAIEN)
"RTN","LRVR3",170,0)
 K ^LAH(LRLL,1,"D",+$P(NODE,U,6),LAIEN)
"RTN","LRVR3",171,0)
 K ^LAH(LRLL,1,"E",+$P(NODE,U,8),LAIEN)
"RTN","LRVR3",172,0)
 ;
"RTN","LRVR3",173,0)
 S NODE("U")=$P($G(^LAH(LRLL,1,LAIEN,.3)),U)
"RTN","LRVR3",174,0)
 I NODE("U")'="" D
"RTN","LRVR3",175,0)
 . K ^LAH(LRLL,1,"AUTOREL-UID",NODE("U"),LAIEN)
"RTN","LRVR3",176,0)
 . K ^LAH(LRLL,1,"U",NODE("U"),LAIEN)
"RTN","LRVR3",177,0)
 . S I=0
"RTN","LRVR3",178,0)
 . F  S I=$O(^LAH("LA7 AMENDED RESULTS",NODE("U"),I)) Q:'I  D
"RTN","LRVR3",179,0)
 . . K ^LAH("LA7 AMENDED RESULTS",NODE("U"),I,LRLL,LAIEN)
"RTN","LRVR3",180,0)
 ;
"RTN","LRVR3",181,0)
 S SEG=""
"RTN","LRVR3",182,0)
 F  S SEG=$O(^LAH(LRLL,1,LAIEN,.1,SEG)) Q:SEG=""  D
"RTN","LRVR3",183,0)
 . S SEGID=""
"RTN","LRVR3",184,0)
 . F  S SEGID=$O(^LAH(LRLL,1,LAIEN,.1,SEG,SEGID)) Q:SEGID=""  D
"RTN","LRVR3",185,0)
 . . S SUB=$P($G(^LAH(LRLL,1,LAIEN,.1,SEG,SEGID)),U)
"RTN","LRVR3",186,0)
 . . I SUB'="" K ^LAH(LRLL,1,"A"_SEGID,SUB,LAIEN)
"RTN","LRVR3",187,0)
 ;
"RTN","LRVR3",188,0)
 K ^LAH(LRLL,1,LAIEN)
"RTN","LRVR3",189,0)
 ;
"RTN","LRVR3",190,0)
 ; Reset counter if loadlist is clear.
"RTN","LRVR3",191,0)
 I '$O(^LAH(LRLL,1,0)) D
"RTN","LRVR3",192,0)
 . L +^LAH(LRLL):DILOCKTM Q:'$T
"RTN","LRVR3",193,0)
 . S ^LAH(LRLL)=0
"RTN","LRVR3",194,0)
 . L -^LAH(LRLL)
"RTN","LRVR3",195,0)
 ;
"RTN","LRVR3",196,0)
 Q
"RTN","LRVR3",197,0)
 ;
"RTN","LRVR3",198,0)
 ;
"RTN","LRVR3",199,0)
TNR ; List tests not reviewed and ask if user wants to delete.
"RTN","LRVR3",200,0)
 ;
"RTN","LRVR3",201,0)
 N DIR,DIROUT,DIRUT,DUOUT,LR60,I,X,Y
"RTN","LRVR3",202,0)
 ;
"RTN","LRVR3",203,0)
 ; Check if these results have already been verified
"RTN","LRVR3",204,0)
 S I=1
"RTN","LRVR3",205,0)
 F  S I=$O(^LAH(LRLL,1,LRSQ,I)) Q:'I  D
"RTN","LRVR3",206,0)
 . S X=^LAH(LRLL,1,LRSQ,I)
"RTN","LRVR3",207,0)
 . I $P(X,"^")=$P($G(^LR(LRDFN,LRSS,LRIDT,I)),"^") K ^LAH(LRLL,1,LRSQ,I)
"RTN","LRVR3",208,0)
 ;
"RTN","LRVR3",209,0)
 ; Quit if no unreviewed results
"RTN","LRVR3",210,0)
 I +$O(^LAH(LRLL,1,LRSQ,1))'>1 Q
"RTN","LRVR3",211,0)
 ;
"RTN","LRVR3",212,0)
 W !,"Test(s) Not Reviewed:",!
"RTN","LRVR3",213,0)
 S I=1
"RTN","LRVR3",214,0)
 F  S I=$O(^LAH(LRLL,1,LRSQ,I)) Q:'I  D
"RTN","LRVR3",215,0)
 . S X=^LAH(LRLL,1,LRSQ,I)
"RTN","LRVR3",216,0)
 . S LR60=+$O(^LAB(60,"C","CH;"_I_";1",0))
"RTN","LRVR3",217,0)
 . I LR60 W $$GET1^DIQ(60,LR60_",",.01)
"RTN","LRVR3",218,0)
 . E  W $$GET1^DID(63.04,I,"","LABEL")
"RTN","LRVR3",219,0)
 . W " = "_$P(X,"^")_" "_$P(X,"^",2)_"  "_$P($P(X,"^",5),"!",7),!
"RTN","LRVR3",220,0)
 ;
"RTN","LRVR3",221,0)
 S DIR(0)="Y",DIR("A")="Purge these test results",DIR("B")="NO"
"RTN","LRVR3",222,0)
 S DIR("?",1)="Answer 'NO' if you want to keep these results for later verification."
"RTN","LRVR3",223,0)
 S DIR("?",2)="You may need to add these tests to the loadlist profile you are using"
"RTN","LRVR3",224,0)
 S DIR("?")="and/or add these tests to the accession you are verifying."
"RTN","LRVR3",225,0)
 D ^DIR Q:$D(DIRUT)
"RTN","LRVR3",226,0)
 ;
"RTN","LRVR3",227,0)
 I Y=1 D ZAPALL(LRLL,LRSQ)
"RTN","LRVR3",228,0)
 Q
"RTN","LRVR3",229,0)
 ;
"RTN","LRVR3",230,0)
 ;
"RTN","LRVR3",231,0)
READ ;
"RTN","LRVR3",232,0)
 N X W !!,"Press ENTER or RETURN to continue: " R X:DTIME
"RTN","LRVR3",233,0)
 Q
"RTN","LRVR3",234,0)
 ;
"RTN","LRVR3",235,0)
 ;
"RTN","LRVR3",236,0)
UICHK() ; Confirm that user wants to process UI type results as reference lab results.
"RTN","LRVR3",237,0)
 ;
"RTN","LRVR3",238,0)
 N DIR,DIRUT,DTOUT,DUOUT,LROK,X,Y
"RTN","LRVR3",239,0)
 ;
"RTN","LRVR3",240,0)
 S LROK=0
"RTN","LRVR3",241,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","LRVR3",242,0)
 S DIR("A",1)="These results were received via an automated instrument interface and you've"
"RTN","LRVR3",243,0)
 S DIR("A",2)="indicated you're processing reference lab results. If you continue processing"
"RTN","LRVR3",244,0)
 S DIR("A",3)="then only units and reference ranges received from the instrument will be"
"RTN","LRVR3",245,0)
 S DIR("A",4)="stored. This could result in the report lacking units, reference ranges,"
"RTN","LRVR3",246,0)
 S DIR("A",5)="abnormality flags and designating an incorrect performing lab."
"RTN","LRVR3",247,0)
 S DIR("A",6)=" "
"RTN","LRVR3",248,0)
 S DIR("A",7)="Contact your local LIM or Lab ADPAC with any questions."
"RTN","LRVR3",249,0)
 S DIR("A",8)=" "
"RTN","LRVR3",250,0)
 S DIR("A")="Sure you want to continue"
"RTN","LRVR3",251,0)
 D ^DIR
"RTN","LRVR3",252,0)
 I Y=1 S LROK=1
"RTN","LRVR3",253,0)
 ;
"RTN","LRVR3",254,0)
 Q LROK
"RTN","LRVR3",255,0)
 ;
"RTN","LRVR3",256,0)
 ;
"RTN","LRVR3",257,0)
LRNIGHT ; Entry point from LRNIGHT to clean up LAH global for selected entries.
"RTN","LRVR3",258,0)
 ;
"RTN","LRVR3",259,0)
 ;ZEXCEPT: ZTQUEUED,ZTREQ,ZTSTOP
"RTN","LRVR3",260,0)
 ;
"RTN","LRVR3",261,0)
 N I,LRCNT,LRCUTOFFDT,LRDAYSKEEP,LRERROR,LRI,LRINST,LRISQN,LRLIST,LRLL,LRROOT,X
"RTN","LRVR3",262,0)
 S DT=$$DT^XLFDT
"RTN","LRVR3",263,0)
 ;
"RTN","LRVR3",264,0)
 ; If rollover has not completed then requeue task 5 minutes in future.
"RTN","LRVR3",265,0)
 I +$G(^LAB(69.9,1,"RO"))'=(+$H) D  Q
"RTN","LRVR3",266,0)
 . I $D(ZTQUEUED) S ZTREQ=$$HADD^XLFDT($H,0,0,5,0) Q
"RTN","LRVR3",267,0)
 . W !!,"Lab Rollover has not completed as of "_$$HTE^XLFDT($H,"1M")_" ... Aborting."
"RTN","LRVR3",268,0)
 ;
"RTN","LRVR3",269,0)
 D GETLST^XPAR(.LRLIST,"PKG","LR WORKLIST DATA CLEANUP",,.LRERROR)
"RTN","LRVR3",270,0)
 I '$D(LRLIST) Q
"RTN","LRVR3",271,0)
 ;
"RTN","LRVR3",272,0)
 S LRI=0
"RTN","LRVR3",273,0)
 F  S LRI=$O(LRLIST(LRI)) Q:'LRI  D  Q:$G(ZTSTOP)
"RTN","LRVR3",274,0)
 . S LRLL=$P(LRLIST(LRI),U),LRDAYSKEEP=$P(LRLIST(LRI),U,2),LRCUTOFFDT=DT
"RTN","LRVR3",275,0)
 . I LRDAYSKEEP>0 S LRCUTOFFDT=$$FMADD^XLFDT(DT,-LRDAYSKEEP)
"RTN","LRVR3",276,0)
 . I '$D(^LAH(LRLL)) Q
"RTN","LRVR3",277,0)
 . I $$S^%ZTLOAD("Processing LRLL: "_LRLL) S ZTSTOP=1 Q
"RTN","LRVR3",278,0)
 . L +^LAH(LRLL):DILOCKTM+60 Q:'$T
"RTN","LRVR3",279,0)
 . S (LRCNT,LRISQN)=0
"RTN","LRVR3",280,0)
 . F  S LRISQN=$O(^LAH(LRLL,1,LRISQN)) Q:'LRISQN  D  Q:$G(ZTSTOP)
"RTN","LRVR3",281,0)
 . . S LRCNT=LRCNT+1
"RTN","LRVR3",282,0)
 . . I '(LRCNT#100) I $$S^%ZTLOAD("Processing LRLL: "_LRLL_"  LRISQN: "_LRISQN) S ZTSTOP=1 Q
"RTN","LRVR3",283,0)
 . . I '$P($G(^LAH(LRLL,1,LRISQN,0)),"^",11) D UPDT^LAGEN(LRLL,LRISQN) Q  ; No date, put current d/t, skip
"RTN","LRVR3",284,0)
 . . I $P($G(^LAH(LRLL,1,LRISQN,0)),"^",11)'<LRCUTOFFDT Q  ; Skip - Keep
"RTN","LRVR3",285,0)
 . . S LRINST=LRLL,I=LRISQN
"RTN","LRVR3",286,0)
 . . N LRLL,LRISQN,LRCUTOFFDT
"RTN","LRVR3",287,0)
 . . D ZAPALL(LRINST,I)
"RTN","LRVR3",288,0)
 . L -^LAH(LRLL)
"RTN","LRVR3",289,0)
 ;
"RTN","LRVR3",290,0)
 D CHECKARI
"RTN","LRVR3",291,0)
 ;
"RTN","LRVR3",292,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRVR3",293,0)
 ;
"RTN","LRVR3",294,0)
 Q
"RTN","LRVR3",295,0)
 ;
"RTN","LRVR3",296,0)
 ;
"RTN","LRVR3",297,0)
CHECKARI ; Check amended result index for orphans.
"RTN","LRVR3",298,0)
 ;
"RTN","LRVR3",299,0)
 ;ZEXCEPT: ZTQUEUED
"RTN","LRVR3",300,0)
 ;
"RTN","LRVR3",301,0)
 N LRCNT,LRI,LRISQN,LRLL,LRROOT
"RTN","LRVR3",302,0)
 ;
"RTN","LRVR3",303,0)
 I '$D(ZTQUEUED) W !!,"Checking LAH global Amended Result Index for Orphans",!
"RTN","LRVR3",304,0)
 S LRROOT="^LAH(""LA7 AMENDED RESULTS"")",LRCNT=0
"RTN","LRVR3",305,0)
 F  S LRROOT=$Q(@LRROOT) Q:LRROOT=""  Q:$QS(LRROOT,1)'="LA7 AMENDED RESULTS"  D
"RTN","LRVR3",306,0)
 . S LRI=$QS(LRROOT,3),LRLL=$QS(LRROOT,4),LRISQN=$QS(LRROOT,5)
"RTN","LRVR3",307,0)
 . I $D(^LAH(LRLL,1,LRISQN,LRI)) Q
"RTN","LRVR3",308,0)
 . I '$D(ZTQUEUED) W !,"Deleting index: ",LRROOT," = ",@LRROOT
"RTN","LRVR3",309,0)
 . K @LRROOT S LRCNT=LRCNT+1
"RTN","LRVR3",310,0)
 ;
"RTN","LRVR3",311,0)
 I '$D(ZTQUEUED) W !,$S(LRCNT:LRCNT,1:"No")," indexes found needing deletion."
"RTN","LRVR3",312,0)
 ;
"RTN","LRVR3",313,0)
 Q
"RTN","LRVRAR")
0^1^B69815158
"RTN","LRVRAR",1,0)
LRVRAR ;DALOI/STAFF - AUTO RELEASE VERIFICATION ;05/27/16  15:44
"RTN","LRVRAR",2,0)
 ;;5.2;LAB SERVICE;**458**;Sep 27, 1994;Build 10
"RTN","LRVRAR",3,0)
 ;
"RTN","LRVRAR",4,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRVRAR",5,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRVRAR",6,0)
 ;
"RTN","LRVRAR",7,0)
 ; Variables:
"RTN","LRVRAR",8,0)
 ;           DUZ = set to IEN of LRLAB,AUTO RELEASE application proxy in file #200
"RTN","LRVRAR",9,0)
 ;
"RTN","LRVRAR",10,0)
 ;         LRDUZ = set to IEN of either:
"RTN","LRVRAR",11,0)
 ;                     1. File #200 entry of LRLAB,AUTO VERIFY application proxy (LRDUZ("AV") if results were auto verified.
"RTN","LRVRAR",12,0)
 ;                     2. File #200 entry of LRLAB,AUTO RELEASE application proxy (LRDUZ("AR") when results are auto released.
"RTN","LRVRAR",13,0)
 ;
"RTN","LRVRAR",14,0)
 ;         LRDUZ("AR") = set to IEN of LRLAB,AUTO RELEASE application proxy in file #200
"RTN","LRVRAR",15,0)
 ;         LRDUZ("AV") = set to IEN of LRLAB,AUTO VERIFY application proxy in file #200
"RTN","LRVRAR",16,0)
 ;
"RTN","LRVRAR",17,0)
 ;         The variable LRDUZ is set in different places to one of the values in the LRDUZ array to represent the "user"
"RTN","LRVRAR",18,0)
 ;         for the software to use within the context of the operation to record who released the results and who performed
"RTN","LRVRAR",19,0)
 ;         the testing.
"RTN","LRVRAR",20,0)
 ;
"RTN","LRVRAR",21,0)
 ;
"RTN","LRVRAR",22,0)
EN ; Entry Point
"RTN","LRVRAR",23,0)
 ;  - call with LRLL=Load/Worklist IEN
"RTN","LRVRAR",24,0)
 ;
"RTN","LRVRAR",25,0)
 ;ZEXCEPT: LRLL,ZTREQ,ZTSTOP
"RTN","LRVRAR",26,0)
 ;
"RTN","LRVRAR",27,0)
 N DIQUIET,LA7624,LA76248,LA76249,LA7AAT,LAMSG,LRANYAA,LRAUTORELEASE,LRAUTOVERIFY,LRDELTACHKOK,LREND,LRERR,LRSQ
"RTN","LRVRAR",28,0)
 ;
"RTN","LRVRAR",29,0)
 S LRLL=+$G(LRLL)
"RTN","LRVRAR",30,0)
 ;
"RTN","LRVRAR",31,0)
 ; If no entries to process then quit
"RTN","LRVRAR",32,0)
 I '$D(^LAH(LRLL,1,"AUTOREL")) S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","LRVRAR",33,0)
 ;
"RTN","LRVRAR",34,0)
 ; See if already running and/or no one else is using this loasd list, i.e. user using EA (LRVR) to verify instrument data.
"RTN","LRVRAR",35,0)
 L +^LAH("Z",LRLL):DILOCKTM+10
"RTN","LRVRAR",36,0)
 E  S ZTREQ=$$HADD^XLFDT($H,0,0,5,0) D END Q
"RTN","LRVRAR",37,0)
 ;
"RTN","LRVRAR",38,0)
 D INIT^LRVRARU
"RTN","LRVRAR",39,0)
 I LREND D  Q
"RTN","LRVRAR",40,0)
 . D XQA^LA7UXQA(2,0,0,0,LAMSG,"")
"RTN","LRVRAR",41,0)
 . D END
"RTN","LRVRAR",42,0)
 ;
"RTN","LRVRAR",43,0)
 S LRSQ=0
"RTN","LRVRAR",44,0)
 F  S LRSQ=$O(^LAH(LRLL,1,"AUTOREL",LRSQ)) Q:LRSQ<1  D
"RTN","LRVRAR",45,0)
 . I $$S^%ZTLOAD("Processing loadlist "_$P(LRLL(0),"^")_", entry #"_LRSQ) S ZTSTOP=1 Q  ; Task has been requested to stop
"RTN","LRVRAR",46,0)
 . K LRERR
"RTN","LRVRAR",47,0)
 . S LA7624=$P(^LAH(LRLL,1,"AUTOREL",LRSQ),U,2)
"RTN","LRVRAR",48,0)
 . ; Interface message number in ^LAHM(62.49
"RTN","LRVRAR",49,0)
 . S LA76249=+$P($G(^LAH(LRLL,1,LRSQ,0)),U,13)
"RTN","LRVRAR",50,0)
 . ; File #62.48 configuration link
"RTN","LRVRAR",51,0)
 . S LA76248=""
"RTN","LRVRAR",52,0)
 . I LA76249 S LA76248=$$GET1^DIQ(62.49,LA76249_",",.5,"I")
"RTN","LRVRAR",53,0)
 . D LOOK,NEXT
"RTN","LRVRAR",54,0)
 D END
"RTN","LRVRAR",55,0)
 Q
"RTN","LRVRAR",56,0)
 ;
"RTN","LRVRAR",57,0)
 ;
"RTN","LRVRAR",58,0)
NEXT ; Clean up between entries
"RTN","LRVRAR",59,0)
 ;
"RTN","LRVRAR",60,0)
 ;ZEXCEPT: LRERR,LRLL,LRSQ,LRUID
"RTN","LRVRAR",61,0)
 ;
"RTN","LRVRAR",62,0)
 ; If no errors then remove record from LAH.
"RTN","LRVRAR",63,0)
 I $G(LRERR)<1 D ZAPALL^LRVR3(LRLL,LRSQ)
"RTN","LRVRAR",64,0)
 ;
"RTN","LRVRAR",65,0)
 D CLEAN^LRVRARU
"RTN","LRVRAR",66,0)
 Q
"RTN","LRVRAR",67,0)
 ;
"RTN","LRVRAR",68,0)
 ;
"RTN","LRVRAR",69,0)
END ; Clean up and quit
"RTN","LRVRAR",70,0)
 ;ZEXCEPT: LRLL,ZTQUEUED,ZTREQ
"RTN","LRVRAR",71,0)
 ;
"RTN","LRVRAR",72,0)
 ; Release locks
"RTN","LRVRAR",73,0)
 L -^LAH("Z",LRLL)
"RTN","LRVRAR",74,0)
 ;
"RTN","LRVRAR",75,0)
 D SPALERT^LRVRARU,KVAR^VADPT,KILL^XUSCLEAN
"RTN","LRVRAR",76,0)
 K ^TMP("LR",$J)
"RTN","LRVRAR",77,0)
 I $D(ZTQUEUED),'$P($G(ZTREQ),"^") S ZTREQ="@"
"RTN","LRVRAR",78,0)
 Q
"RTN","LRVRAR",79,0)
 ;
"RTN","LRVRAR",80,0)
 ;
"RTN","LRVRAR",81,0)
LOOK ; Check for data
"RTN","LRVRAR",82,0)
 ;
"RTN","LRVRAR",83,0)
 ;ZEXCEPT: DFN,ERR,LRAA,LRAD,LRAN,LRDFN,LRDPF,LREND,LRERR,LRIDT,LRLL,LRLLOC,LRODT,LRORD,LRORU3,LRSN,LRSQ,PNM,X,ZTREQ
"RTN","LRVRAR",84,0)
 ;
"RTN","LRVRAR",85,0)
 N LRCDT,LRLDT,LRLOCKER,LRSS,LRUID
"RTN","LRVRAR",86,0)
 ;
"RTN","LRVRAR",87,0)
 K LRDFN,LRERR,ERR,LRDPF,PNM,X
"RTN","LRVRAR",88,0)
 S (LREND,LRERR)=0
"RTN","LRVRAR",89,0)
 ;
"RTN","LRVRAR",90,0)
 S LRUID=$P($G(^LAH(LRLL,1,LRSQ,.3)),U)
"RTN","LRVRAR",91,0)
 I LRUID="" D  Q
"RTN","LRVRAR",92,0)
 . ; JMC/5/6/15 - need to write error message when UID not found with data in LAH
"RTN","LRVRAR",93,0)
 . S LREND=1
"RTN","LRVRAR",94,0)
 ;
"RTN","LRVRAR",95,0)
 D UID^LRVRA
"RTN","LRVRAR",96,0)
 ;
"RTN","LRVRAR",97,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0)
"RTN","LRVRAR",98,0)
 S LRDFN=+X,LRDPF=$P(X,U,2),DFN=$P(^LR(LRDFN,0),U,3)
"RTN","LRVRAR",99,0)
 S LRODT=+$P(X,U,4),LRSN=+$P(X,U,5),LRLLOC=$P(X,U,7)
"RTN","LRVRAR",100,0)
 S LRSS=$P(^LRO(68,LRAA,0),U,2)
"RTN","LRVRAR",101,0)
 ;
"RTN","LRVRAR",102,0)
 S:'$L(LRLLOC) LRLLOC=0
"RTN","LRVRAR",103,0)
 S LRORD=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.1)),"^")
"RTN","LRVRAR",104,0)
 ;
"RTN","LRVRAR",105,0)
 S X(3)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,3))
"RTN","LRVRAR",106,0)
 S LRCDT=$P(X(3),U,1)
"RTN","LRVRAR",107,0)
 S LRIDT=$P(X(3),U,5)
"RTN","LRVRAR",108,0)
 S:'LRIDT LRIDT=9999999-X(3)
"RTN","LRVRAR",109,0)
 S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","LRVRAR",110,0)
 ;
"RTN","LRVRAR",111,0)
 D DEM^LRX
"RTN","LRVRAR",112,0)
 I $G(LREND) S LRDFN=0 Q
"RTN","LRVRAR",113,0)
 ;
"RTN","LRVRAR",114,0)
 ; Lock records in file #63 and 68
"RTN","LRVRAR",115,0)
 L +(^LR(LRDFN,LRSS,LRIDT),^LRO(68,LRAA,1,LRAD,1,LRAN)):DILOCKTM+10
"RTN","LRVRAR",116,0)
 I '$T D  Q
"RTN","LRVRAR",117,0)
 . S ZTREQ=$$HADD^XLFDT($H,0,0,5,0)
"RTN","LRVRAR",118,0)
 . S LRERR=1
"RTN","LRVRAR",119,0)
 ;
"RTN","LRVRAR",120,0)
 D DATA
"RTN","LRVRAR",121,0)
 ;
"RTN","LRVRAR",122,0)
 L -(^LR(LRDFN,LRSS,LRIDT),^LRO(68,LRAA,1,LRAD,1,LRAN))
"RTN","LRVRAR",123,0)
 ;
"RTN","LRVRAR",124,0)
 ; If error encountered then remove from auto release queue/process
"RTN","LRVRAR",125,0)
 I $G(LRERR)>0 D
"RTN","LRVRAR",126,0)
 . K ^LAH(LRLL,1,"AUTOREL",LRSQ)
"RTN","LRVRAR",127,0)
 . K ^LAH(LRLL,1,"AUTOREL-UID",LRUID,LRSQ)
"RTN","LRVRAR",128,0)
 ;
"RTN","LRVRAR",129,0)
 Q
"RTN","LRVRAR",130,0)
 ;
"RTN","LRVRAR",131,0)
 ;
"RTN","LRVRAR",132,0)
DATA ;Process data and store in LR global
"RTN","LRVRAR",133,0)
 ;
"RTN","LRVRAR",134,0)
 ;ZEXCEPT: LA76248,LA76249,LA7AAT,LR642,LRAA,LRALERT,LRAUTOVERIFY,LRCDT,LRCNT,LRCOM,LRCUP,LRDATA,LRDFN,LRDFWKLD,LREII,LRERR
"RTN","LRVRAR",135,0)
 ;ZEXCEPT: LRIDT,LRLDT,LRLL,LRMETH,LRNOW,LROKTORELEASE,LROUTINE,LRSAMP,LRSB,LRSPEC,LRSQ,LRSS,LRSTORE,LRTM60,LRTRAY
"RTN","LRVRAR",136,0)
 ;ZEXCEPT: LRTS,LRTST,LRUID,LRUSI,LRVF,LRVTS,LRX,LRY,LRZ
"RTN","LRVRAR",137,0)
 ;
"RTN","LRVRAR",138,0)
 K LRCNT,LRDATA,LRERR,LREII,LRLDT,LRNOW,LRSAMP,LRSB,LRSPEC,LRTM60,LRTRAY,LRCUP,LRTS,LRVF,LRX,LRY,LRZ
"RTN","LRVRAR",139,0)
 S (LR642,LRCNT,LRERR)=0
"RTN","LRVRAR",140,0)
 ;
"RTN","LRVRAR",141,0)
 ; Get type of HL7 application ACK
"RTN","LRVRAR",142,0)
 S LA7AAT(1)=$P($G(^LAH(LRLL,1,"AUTOREL-UID",LRUID,LRSQ,LA76249)),U)
"RTN","LRVRAR",143,0)
 ;
"RTN","LRVRAR",144,0)
 ; Setup workload suffix and workload variables
"RTN","LRVRAR",145,0)
 I LR642<1 S LR642=LRDFWKLD
"RTN","LRVRAR",146,0)
 D WKLD^LRVRARU(LR642)
"RTN","LRVRAR",147,0)
 D WKLDC^LRVRARU(LRLL,LRAA)
"RTN","LRVRAR",148,0)
 ;
"RTN","LRVRAR",149,0)
 S LRSPEC=$P(^LR(LRDFN,"CH",LRIDT,0),U,5)
"RTN","LRVRAR",150,0)
 ;
"RTN","LRVRAR",151,0)
 ; Check if verified results exist in ^LR then delete results from LAH and mark as error.
"RTN","LRVRAR",152,0)
 S LRVF=+$P(^LR(LRDFN,"CH",LRIDT,0),U,3)
"RTN","LRVRAR",153,0)
 I LRVF D
"RTN","LRVRAR",154,0)
 . S LRX=1
"RTN","LRVRAR",155,0)
 . F  S LRX=$O(^LR(LRDFN,"CH",LRIDT,LRX)) Q:LRX'>0  D
"RTN","LRVRAR",156,0)
 . . S LRZ=^LR(LRDFN,"CH",LRIDT,LRX)
"RTN","LRVRAR",157,0)
 . . I $P(LRZ,U)'="",$P(LRZ,U)'="pending",$D(^LAH(LRLL,1,LRSQ,LRX)) K ^LAH(LRLL,1,LRSQ,LRX) S:LRERR=0 LRERR=$$CREATE^LA7LOG(307,1)
"RTN","LRVRAR",158,0)
 I LRERR D SENDACK^LRVRARU Q
"RTN","LRVRAR",159,0)
 ;
"RTN","LRVRAR",160,0)
 ; Check if results have datanames/tests on this profile and user is valid
"RTN","LRVRAR",161,0)
 S LRDATA=1
"RTN","LRVRAR",162,0)
 F  S LRDATA=$O(^LAH(LRLL,1,LRSQ,LRDATA)) Q:LRDATA<1  D  Q:LRERR
"RTN","LRVRAR",163,0)
 . S LRDATA(LRDATA)=^LAH(LRLL,1,LRSQ,LRDATA)
"RTN","LRVRAR",164,0)
 . I $P(LRDATA(LRDATA),"^",4)<1 S LRERR=$$CREATE^LA7LOG(111,1) Q
"RTN","LRVRAR",165,0)
 . S LROKTORELEASE=$$OKTOREL
"RTN","LRVRAR",166,0)
 . I 'LROKTORELEASE D  Q
"RTN","LRVRAR",167,0)
 . . N LRDUZ
"RTN","LRVRAR",168,0)
 . . I $P(LROKTORELEASE,U,2) S LRDUZ=$P(LROKTORELEASE,U,3),LRERR=$$CREATE^LA7LOG($P(LROKTORELEASE,U,2),1)
"RTN","LRVRAR",169,0)
 . S LRDUZ("USER")=$P(LROKTORELEASE,U,2)
"RTN","LRVRAR",170,0)
 . S LRAUTOVERIFY=LROKTORELEASE-1
"RTN","LRVRAR",171,0)
 . S LREII=$P(LRDATA(LRDATA),U,11)
"RTN","LRVRAR",172,0)
 . S LREII=LREII_";"_$S(LRAUTOVERIFY:"LRAV",1:"LRTV")
"RTN","LRVRAR",173,0)
 . S $P(LRDATA(LRDATA),U,11)=LREII ; Store auto verify or tech verify with EII.
"RTN","LRVRAR",174,0)
 . S LRTST=+$G(LRVTS(LRDATA))
"RTN","LRVRAR",175,0)
 . I 'LRTST S LRERR=$$CREATE^LA7LOG(116,1) Q
"RTN","LRVRAR",176,0)
 . I '$D(^TMP("LR",$J,"VTO",LRTST)) S LRERR=$$CREATE^LA7LOG(118,1) Q
"RTN","LRVRAR",177,0)
 ;
"RTN","LRVRAR",178,0)
 I LRERR D SENDACK^LRVRARU Q
"RTN","LRVRAR",179,0)
 ;
"RTN","LRVRAR",180,0)
 ; Calculate days back for delta checks
"RTN","LRVRAR",181,0)
 S LRTM60=$$LRTM60^LRVR(LRCDT)
"RTN","LRVRAR",182,0)
 ; Find previous specimen
"RTN","LRVRAR",183,0)
 S LRLDT=LRIDT
"RTN","LRVRAR",184,0)
 D FINDPS^LRGV2
"RTN","LRVRAR",185,0)
 ;
"RTN","LRVRAR",186,0)
 ; Store ^LR( data [results]
"RTN","LRVRAR",187,0)
 K LRCOM
"RTN","LRVRAR",188,0)
 S LRVF=0,LRALERT=LROUTINE,LRUSI="LRAR"
"RTN","LRVRAR",189,0)
 ;
"RTN","LRVRAR",190,0)
 ; Store any new methods with existing methods on file.
"RTN","LRVRAR",191,0)
 S LRMETH=$P(^LAH(LRLL,1,LRSQ,0),U,7)_"(AR)"
"RTN","LRVRAR",192,0)
 I $P($G(^LR(LRDFN,LRSS,LRIDT,0)),U,8)'="" D
"RTN","LRVRAR",193,0)
 . N I,X
"RTN","LRVRAR",194,0)
 . S X=$P(^LR(LRDFN,LRSS,LRIDT,0),U,8)
"RTN","LRVRAR",195,0)
 . F I=1:1:$L(X,";") I $P(X,";",I)'="",LRMETH'[$P(X,";",I) S LRMETH=LRMETH_";"_$P(X,";",I)
"RTN","LRVRAR",196,0)
 I LRMETH'="" S $P(^LR(LRDFN,LRSS,LRIDT,0),U,8)=LRMETH
"RTN","LRVRAR",197,0)
 ;
"RTN","LRVRAR",198,0)
 M LRSB=LRDATA
"RTN","LRVRAR",199,0)
 D TEST^LRVR1
"RTN","LRVRAR",200,0)
 S LRSB=1,LRNOW=$$NOW^XLFDT
"RTN","LRVRAR",201,0)
 F  S LRSB=$O(LRSB(LRSB)) Q:LRSB<1  D STORE Q:LRERR
"RTN","LRVRAR",202,0)
 ;
"RTN","LRVRAR",203,0)
 I LRERR D SENDACK^LRVRARU Q
"RTN","LRVRAR",204,0)
 ;
"RTN","LRVRAR",205,0)
 ; Set releasing user to auto release proxy.
"RTN","LRVRAR",206,0)
 S LRDUZ=LRDUZ("AR")
"RTN","LRVRAR",207,0)
 ;
"RTN","LRVRAR",208,0)
 ; Call to set data and comments
"RTN","LRVRAR",209,0)
 I $O(LRSB(0)) D
"RTN","LRVRAR",210,0)
 . D LRSBCOM^LRVR4,A3^LRVR3
"RTN","LRVRAR",211,0)
 . S LRSTORE=LRSTORE+1
"RTN","LRVRAR",212,0)
 . I $G(LA76248) S LRSTORE(LA76248)=$G(LRSTORE(LA76248))+1
"RTN","LRVRAR",213,0)
 ;
"RTN","LRVRAR",214,0)
 ; Send application ack back to sending application interface
"RTN","LRVRAR",215,0)
 D SENDACK^LRVRARU
"RTN","LRVRAR",216,0)
 Q
"RTN","LRVRAR",217,0)
 ;
"RTN","LRVRAR",218,0)
 ;
"RTN","LRVRAR",219,0)
STORE ; Store the data in LR global
"RTN","LRVRAR",220,0)
 ;
"RTN","LRVRAR",221,0)
 ;ZEXCEPT: LRAUTOVERIFY,LRDEL,LRDELTACHKOK,LRDFN,LRDUZ,LRERR,LRIDT,LRLDT,LRNOW,LRSB,LRSS
"RTN","LRVRAR",222,0)
 ;
"RTN","LRVRAR",223,0)
 N I,LRNGS,LRQ,LRTS,LRX,LRY,X,X1,Y
"RTN","LRVRAR",224,0)
 ;
"RTN","LRVRAR",225,0)
 I '$G(^TMP("LR",$J,"TMP",LRSB,"P")) S LRERR=$$CREATE^LA7LOG(117,1) Q
"RTN","LRVRAR",226,0)
 ;
"RTN","LRVRAR",227,0)
 S LRX=$$TMPSB^LRVER1(LRSB),LRY=$P(LRSB(LRSB),U,3)
"RTN","LRVRAR",228,0)
 F I=1:1:$L(LRX,"!") I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,"!",I)
"RTN","LRVRAR",229,0)
 S $P(LRSB(LRSB),U,3)=LRY
"RTN","LRVRAR",230,0)
 S LRTS=$G(^TMP("LR",$J,"TMP",LRSB))
"RTN","LRVRAR",231,0)
 D V25^LRVER5
"RTN","LRVRAR",232,0)
 S LRX=LRNGS,LRY=$P(LRSB(LRSB),U,5)
"RTN","LRVRAR",233,0)
 ;
"RTN","LRVRAR",234,0)
 ; Do delta checking if enabled
"RTN","LRVRAR",235,0)
 I LRDELTACHKOK D
"RTN","LRVRAR",236,0)
 . S X=$P(LRSB(LRSB),"^"),Y=0,(LRQ,X1)=""
"RTN","LRVRAR",237,0)
 . I LRLDT>0 S X1=$P($G(^LR(LRDFN,LRSS,LRLDT,LRSB)),U)
"RTN","LRVRAR",238,0)
 . I LRDEL'="" S LRQ=1 D XDELTACK^LRVERA ;S:Y LRDELTA=Y
"RTN","LRVRAR",239,0)
 ;
"RTN","LRVRAR",240,0)
 ; Don't store file #60 units/ranges/etc at this time, use values from middleware
"RTN","LRVRAR",241,0)
 ; (#.01) SITE/SPECIMEN [1P:61] ^ (#1) REFERENCE LOW [2F] ^ (#2) REFERENCE HIGH [3F] ^ (#3) CRITICAL LOW [4F] ^ (#4) CRITICAL HIGH [5F] ^  ^ (#6) UNITS [7F] ^ (#7) TYPE OF DELTA CHECK [8P:62.1] ^
"RTN","LRVRAR",242,0)
 ; (#8) DELTA VALUE [9F] ^ (#9) DEFAULT VALUE [10F] ^ (#9.2) THERAPEUTIC LOW [11F] ^ (#9.3) THERAPEUTIC HIGH [12F] ^
"RTN","LRVRAR",243,0)
 ;F I=1,4,5,8:1:12 I $P(LRY,"!",I)="" S $P(LRY,"!",I)=$P(LRX,U,I)
"RTN","LRVRAR",244,0)
 ;S $P(LRSB(LRSB),U,5)=LRY
"RTN","LRVRAR",245,0)
 ;
"RTN","LRVRAR",246,0)
 S $P(LRSB(LRSB),U,6)=LRNOW
"RTN","LRVRAR",247,0)
 ;
"RTN","LRVRAR",248,0)
 ; Store performing lab based on LRDUZ(2) from load/list profile.
"RTN","LRVRAR",249,0)
 S $P(LRSB(LRSB),U,9)=$S($G(LRDUZ(2)):LRDUZ(2),1:$G(DUZ(2)))
"RTN","LRVRAR",250,0)
 ;
"RTN","LRVRAR",251,0)
 S ^LR(LRDFN,"CH",LRIDT,LRSB)=LRSB(LRSB)
"RTN","LRVRAR",252,0)
 ;
"RTN","LRVRAR",253,0)
 Q
"RTN","LRVRAR",254,0)
 ;
"RTN","LRVRAR",255,0)
 ;
"RTN","LRVRAR",256,0)
OKTOREL() ; Determine if it's OK to store these results for auto release
"RTN","LRVRAR",257,0)
 ;
"RTN","LRVRAR",258,0)
 ;ZEXCEPT: LRDATA,LRDUZ,LRLL,LRSQ
"RTN","LRVRAR",259,0)
 ;
"RTN","LRVRAR",260,0)
 ; Returns OK = "" (no "user")
"RTN","LRVRAR",261,0)
 ;            = 0  (results not flagged for auto release)
"RTN","LRVRAR",262,0)
 ;            = 0^error code (62.485)^invalid user duz
"RTN","LRVRAR",263,0)
 ;            = 1^duz of user  (tech verify)
"RTN","LRVRAR",264,0)
 ;            = 2  (auto verify user)
"RTN","LRVRAR",265,0)
 ;
"RTN","LRVRAR",266,0)
 N OK,LRX,LRY
"RTN","LRVRAR",267,0)
 ;
"RTN","LRVRAR",268,0)
 S OK=""
"RTN","LRVRAR",269,0)
 ;
"RTN","LRVRAR",270,0)
 I $P($G(^LAH(LRLL,1,LRSQ,LRDATA)),U)="" S OK=0
"RTN","LRVRAR",271,0)
 ;
"RTN","LRVRAR",272,0)
 ; Results not flagged for auto release.
"RTN","LRVRAR",273,0)
 I '$D(^LAH(LRLL,1,"AUTOREL",LRSQ,LRDATA)) S OK=0
"RTN","LRVRAR",274,0)
 ;
"RTN","LRVRAR",275,0)
 ; Retrieve stored auto release setting when this result arrived.
"RTN","LRVRAR",276,0)
 S LRX=$P(^LAH(LRLL,1,"AUTOREL",LRSQ,LRDATA),U,2)
"RTN","LRVRAR",277,0)
 ;
"RTN","LRVRAR",278,0)
 ; Retrieve user id/duz received with results.
"RTN","LRVRAR",279,0)
 S LRY=$P(LRDATA(LRDATA),U,4)
"RTN","LRVRAR",280,0)
 ;
"RTN","LRVRAR",281,0)
 I OK="" D
"RTN","LRVRAR",282,0)
 . ; If no user or auto release proxy then log error
"RTN","LRVRAR",283,0)
 . I LRY<1 S OK="0^303" Q
"RTN","LRVRAR",284,0)
 . I LRY=LRDUZ("AR") S OK="0^304"_U_LRY Q
"RTN","LRVRAR",285,0)
 . ;
"RTN","LRVRAR",286,0)
 . ; If auto release on for auto or tech verify
"RTN","LRVRAR",287,0)
 . I LRX=1 D  Q
"RTN","LRVRAR",288,0)
 . . I LRY=LRDUZ("AV") S OK=2 Q
"RTN","LRVRAR",289,0)
 . . S OK=1_U_LRY Q
"RTN","LRVRAR",290,0)
 . ;
"RTN","LRVRAR",291,0)
 . ; If auto release on for auto verify only
"RTN","LRVRAR",292,0)
 . I LRX=2 D  Q
"RTN","LRVRAR",293,0)
 . . I LRY=LRDUZ("AV") S OK=2 Q
"RTN","LRVRAR",294,0)
 . . S OK="0^305"_U_LRY
"RTN","LRVRAR",295,0)
 . ;
"RTN","LRVRAR",296,0)
 . ; If auto release on for tech verify only
"RTN","LRVRAR",297,0)
 . I LRX=3 D  Q
"RTN","LRVRAR",298,0)
 . . I LRY'=LRDUZ("AV"),LRY'=LRDUZ("AR") S OK=1_U_LRY Q
"RTN","LRVRAR",299,0)
 . . S OK="0^306"_U_LRY
"RTN","LRVRAR",300,0)
 ;
"RTN","LRVRAR",301,0)
 ; Check if tech verify that user owns LRVERIFY security key.
"RTN","LRVRAR",302,0)
 I $P(OK,U)=1 D
"RTN","LRVRAR",303,0)
 . N LRKEY
"RTN","LRVRAR",304,0)
 . ;
"RTN","LRVRAR",305,0)
 . ; check if user is active
"RTN","LRVRAR",306,0)
 . I '$$ACTIVE^XUSER($P(OK,U,2)) S OK="0^302^"_$P(OK,U,2) Q
"RTN","LRVRAR",307,0)
 . ;
"RTN","LRVRAR",308,0)
 . ; check that user has LRVERIFY key
"RTN","LRVRAR",309,0)
 . D OWNSKEY^XUSRB(.LRKEY,"LRVERIFY",$P(OK,U,2))
"RTN","LRVRAR",310,0)
 . I LRKEY(0)=1 Q
"RTN","LRVRAR",311,0)
 . S OK="0^301^"_$P(OK,U,2)
"RTN","LRVRAR",312,0)
 ;
"RTN","LRVRAR",313,0)
 Q OK
"RTN","LRVRARU")
0^2^B32878283
"RTN","LRVRARU",1,0)
LRVRARU ;DALOI/STAFF - AUTO RELEASE UTILITY PROGRAM ;04/05/16  11:02
"RTN","LRVRARU",2,0)
 ;;5.2;LAB SERVICE;**458**;Sep 27, 1994;Build 10
"RTN","LRVRARU",3,0)
 ;
"RTN","LRVRARU",4,0)
 ; Reference to DUZ^XUP supported by DBIA #4129
"RTN","LRVRARU",5,0)
 ; Reference to DIVSET^XUSRB2 supported by DBIA #4055
"RTN","LRVRARU",6,0)
 ;
"RTN","LRVRARU",7,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LRVRARU",8,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LRVRARU",9,0)
 ;
"RTN","LRVRARU",10,0)
 Q
"RTN","LRVRARU",11,0)
 ;
"RTN","LRVRARU",12,0)
 ;
"RTN","LRVRARU",13,0)
INIT ; Initialize user/environment
"RTN","LRVRARU",14,0)
 ;
"RTN","LRVRARU",15,0)
 ;ZEXCEPT: DIQUIET,LAMSG,LRAA,LRALERT,LRANYAA,LRAUTORELEASE,LRAUTOVERIFY,LRCDEF,LRCNT,LRDELTACHKOK,LRDFWKLD,LRDUZ
"RTN","LRVRARU",16,0)
 ;ZEXCEPT: LREND,LRERR,LRIEN,LRLABKY,LRLD,LRLL,LRNOECHO,LRORDNLT,LROUTINE,LRPARAM,LRPROF,LRQUIET,LRSTORE,LRVBY,VAERR
"RTN","LRVRARU",17,0)
 ;ZEXCEPT: ZTREQ
"RTN","LRVRARU",18,0)
 ;
"RTN","LRVRARU",19,0)
 N I,LR60,LR61,LR62,LR64,LR0070,LRNLT,LRX,LRY
"RTN","LRVRARU",20,0)
 ;
"RTN","LRVRARU",21,0)
 ; If rollover has not completed then requeue task 5 minutes in future and send alert.
"RTN","LRVRARU",22,0)
 I +$G(^LAB(69.9,1,"RO"))'=(+$H) D  Q
"RTN","LRVRARU",23,0)
 . S ZTREQ=$$HADD^XLFDT($H,0,0,5,0)
"RTN","LRVRARU",24,0)
 . S LAMSG="AR: Lab Rollover has not completed as of "_$$HTE^XLFDT($H,"1M")
"RTN","LRVRARU",25,0)
 . S LREND=1
"RTN","LRVRARU",26,0)
 ;
"RTN","LRVRARU",27,0)
 I '$D(^LRO(68.2,LRLL,0))#2 D  Q
"RTN","LRVRARU",28,0)
 . S LREND=1
"RTN","LRVRARU",29,0)
 . S LAMSG="AR: No Entry for Load/Work List using IEN: "_LRLL
"RTN","LRVRARU",30,0)
 ;
"RTN","LRVRARU",31,0)
 S LRLL(0)=^LRO(68.2,LRLL,0)
"RTN","LRVRARU",32,0)
 S (LRAUTOVERIFY,LRCNT,LRDELTACHKOK,LREND,LRSTORE)=0,(DIQUIET,LRAUTORELEASE,LRNOECHO,LRQUIET)=1,LAMSG=""
"RTN","LRVRARU",33,0)
 ;
"RTN","LRVRARU",34,0)
 K LRDUZ,LRERR,LRIEN,LRORDNLT
"RTN","LRVRARU",35,0)
 D KVAR^VADPT
"RTN","LRVRARU",36,0)
 ;
"RTN","LRVRARU",37,0)
 ; DUZ = set to IEN of LRLAB,AUTO RELEASE application proxy
"RTN","LRVRARU",38,0)
 S LRX=$$FIND1^DIC(200,"","OX","LRLAB,AUTO RELEASE","B","")
"RTN","LRVRARU",39,0)
 I LRX<1 D  Q
"RTN","LRVRARU",40,0)
 . S LREND=1
"RTN","LRVRARU",41,0)
 . S LAMSG="AR: Unable to identify proxy 'LRLAB,AUTO RELEASE' in NEW PERSON file"
"RTN","LRVRARU",42,0)
 D DUZ^XUP(LRX)
"RTN","LRVRARU",43,0)
 S LRDUZ("AR")=LRX
"RTN","LRVRARU",44,0)
 ;
"RTN","LRVRARU",45,0)
 ; LRDUZ("AR") = set to IEN of LRLAB,AUTO VERIFY application proxy
"RTN","LRVRARU",46,0)
 S LRX=$$FIND1^DIC(200,"","OX","LRLAB,AUTO VERIFY","B","")
"RTN","LRVRARU",47,0)
 I LRX<1 D  Q
"RTN","LRVRARU",48,0)
 . S LREND=1
"RTN","LRVRARU",49,0)
 . S LAMSG="AR: Unable to identify proxy 'LRLAB,AUTO VERIFY' in NEW PERSON file"
"RTN","LRVRARU",50,0)
 S LRDUZ("AV")=LRX
"RTN","LRVRARU",51,0)
 ;
"RTN","LRVRARU",52,0)
 ;Initialize LRDUZ("USER"), used to hold the user's DUZ when user verified on external system
"RTN","LRVRARU",53,0)
 S LRDUZ("USER")=""
"RTN","LRVRARU",54,0)
 ;
"RTN","LRVRARU",55,0)
 D EN^LRPARAM
"RTN","LRVRARU",56,0)
 I $G(LREND) S LAMSG="AR: LRPARAM Error for Load/Work List "_$P(LRLL(0),"^") Q
"RTN","LRVRARU",57,0)
 S $P(LRPARAM,U,3)="",$P(LRPARAM,U,4)=""
"RTN","LRVRARU",58,0)
 S LRLABKY="1^^^1" ;lab verification keys
"RTN","LRVRARU",59,0)
 ;
"RTN","LRVRARU",60,0)
 ; Use first profile designated for auto release on this load list.
"RTN","LRVRARU",61,0)
 S LRPROF=$O(^LRO(68.2,LRLL,10,"AR",1,0))
"RTN","LRVRARU",62,0)
 I 'LRPROF D  Q
"RTN","LRVRARU",63,0)
 . S LREND=1
"RTN","LRVRARU",64,0)
 . S LAMSG="AR: No Auto Release Profile for Load/Work List "_$P(LRLL(0),"^")
"RTN","LRVRARU",65,0)
 ;
"RTN","LRVRARU",66,0)
 S LRPROF(0)=^LRO(68.2,LRLL,10,LRPROF,0)
"RTN","LRVRARU",67,0)
 S LRAA=$P(LRPROF(0),U,2)
"RTN","LRVRARU",68,0)
 I $P(^LRO(68,LRAA,0),U,2)'="CH" S LREND=1,LAMSG="AR: No CH accession area for Load/Work List "_$P(LRLL(0),"^") Q
"RTN","LRVRARU",69,0)
 S LRANYAA=+$P(LRPROF(0),"^",3)
"RTN","LRVRARU",70,0)
 ;
"RTN","LRVRARU",71,0)
 ; Use default reference lab field as performing and releasing lab
"RTN","LRVRARU",72,0)
 S LRDUZ(2)=+$P(LRPROF(0),"^",5)
"RTN","LRVRARU",73,0)
 I LRDUZ(2)'=DUZ(2) D  Q:LREND
"RTN","LRVRARU",74,0)
 . S LRY=0
"RTN","LRVRARU",75,0)
 . I LRDUZ(2)>0 D DIVSET^XUSRB2(.LRY,"`"_LRDUZ(2))
"RTN","LRVRARU",76,0)
 . I LRY Q
"RTN","LRVRARU",77,0)
 . S LREND=1,LAMSG="AR: Unable to set user 'LRLAB,AUTO RELEASE' to division "_$S(LRDUZ(2)<1:"<none specified>",1:$$GET1^DIQ(4,LRDUZ(2)_",",.01))_" on profile: "_$P(LRPROF(0),U)
"RTN","LRVRARU",78,0)
 ;
"RTN","LRVRARU",79,0)
 S LRX=$G(^LRO(68,LRAA,0))
"RTN","LRVRARU",80,0)
 S LRLD=$S($P(LRX,U,19)'="":$P(LRX,U,19),1:"CP")
"RTN","LRVRARU",81,0)
 ;
"RTN","LRVRARU",82,0)
 S LRDFWKLD=+$G(^LRO(68.2,LRLL,"SUF"))
"RTN","LRVRARU",83,0)
 D WKLD(LRDFWKLD)
"RTN","LRVRARU",84,0)
 I LRCDEF="" D  Q
"RTN","LRVRARU",85,0)
 . S LREND=1
"RTN","LRVRARU",86,0)
 . S LAMSG="AR: No Default Suffix for Load/Work List "_$P(LRLL(0),"^")
"RTN","LRVRARU",87,0)
 ;
"RTN","LRVRARU",88,0)
 ; Explode the test list
"RTN","LRVRARU",89,0)
 K ^TMP("LR",$J)
"RTN","LRVRARU",90,0)
 D EXPLODE^LRGP2
"RTN","LRVRARU",91,0)
 I '$O(^TMP("LR",$J,"VTO",0)) D  Q
"RTN","LRVRARU",92,0)
 . S LREND=1
"RTN","LRVRARU",93,0)
 . S LAMSG="AR: No Test defined for Load/Work List "_$P(LRLL(0),"^")_" using profile: "_$P(LRPROF(0),U)
"RTN","LRVRARU",94,0)
 ;
"RTN","LRVRARU",95,0)
 K LRIEN,LRERR
"RTN","LRVRARU",96,0)
 S (LRERR,VAERR)=0
"RTN","LRVRARU",97,0)
 S LROUTINE=$$GET1^DIQ(69.9,"1,",301,"I","ANS","ERR") ;Routine urgency
"RTN","LRVRARU",98,0)
 S:'LROUTINE LROUTINE=9
"RTN","LRVRARU",99,0)
 S LRALERT=LROUTINE
"RTN","LRVRARU",100,0)
 ;
"RTN","LRVRARU",101,0)
 S LRVBY=2
"RTN","LRVRARU",102,0)
 Q
"RTN","LRVRARU",103,0)
 ;
"RTN","LRVRARU",104,0)
 ;
"RTN","LRVRARU",105,0)
WKLD(LRP) ; Setup LRCDEF* variables for workload
"RTN","LRVRARU",106,0)
 ; Call with LRP = ien of WKLD suffix in file #64.2
"RTN","LRVRARU",107,0)
 ;
"RTN","LRVRARU",108,0)
 ;ZEXCEPT: LRCDEF,LRCDEF0
"RTN","LRVRARU",109,0)
 ;
"RTN","LRVRARU",110,0)
 S LRCDEF0=$G(^LAB(64.2,LRP,0)),LRCDEF0(1)=$P(LRCDEF0,"^",19)
"RTN","LRVRARU",111,0)
 S LRCDEF=$P($P(LRCDEF0,"^",2),".",2)
"RTN","LRVRARU",112,0)
 ;
"RTN","LRVRARU",113,0)
 Q
"RTN","LRVRARU",114,0)
 ;
"RTN","LRVRARU",115,0)
 ;
"RTN","LRVRARU",116,0)
WKLDC(LRLL,LRAA) ; Setup LRCAP*, LRCS*, LRSUF* variables for workload
"RTN","LRVRARU",117,0)
 ; Call with LRLL = ien of load/workk list in file #62.8
"RTN","LRVRARU",118,0)
 ;           LRAA = ien of accession area in file #68
"RTN","LRVRARU",119,0)
 ;
"RTN","LRVRARU",120,0)
 ;ZEXCEPT: LRCAPMS,LRCAPWA,LRCSQ,LRCSQQ,LRPARAM,LRSUF0,LRUSUFO
"RTN","LRVRARU",121,0)
 ;
"RTN","LRVRARU",122,0)
 N LREND,Y
"RTN","LRVRARU",123,0)
 ;
"RTN","LRVRARU",124,0)
 ; Cleanup values from processing a previous accession as area could be different.
"RTN","LRVRARU",125,0)
 K LRCAPMS,LRCAPWA,LRCSQ,LRCSQQ,LRSUF0,LRUSUFO
"RTN","LRVRARU",126,0)
 ;
"RTN","LRVRARU",127,0)
 ; Check if workload turned on.
"RTN","LRVRARU",128,0)
 I '$P(LRPARAM,U,14)!('$G(LRAA)) Q
"RTN","LRVRARU",129,0)
 I '$P($G(^LRO(68,+LRAA,0)),U,16) Q
"RTN","LRVRARU",130,0)
 ;
"RTN","LRVRARU",131,0)
 ; Setup worload code variables for this accession area
"RTN","LRVRARU",132,0)
 S Y=LRLL D EN1^LRCAPV
"RTN","LRVRARU",133,0)
 ;
"RTN","LRVRARU",134,0)
 ; Override file setting, do not prompt for COLLECT STD/QC/REPEATS (#11) (nobody to answer).
"RTN","LRVRARU",135,0)
 S LRCSQQ=0
"RTN","LRVRARU",136,0)
 ;
"RTN","LRVRARU",137,0)
 Q
"RTN","LRVRARU",138,0)
 ;
"RTN","LRVRARU",139,0)
 ;
"RTN","LRVRARU",140,0)
SPALERT ; Send Processing Alert Message
"RTN","LRVRARU",141,0)
 ;
"RTN","LRVRARU",142,0)
 ;ZEXCEPT: LRLL,LRSTORE
"RTN","LRVRARU",143,0)
 ;
"RTN","LRVRARU",144,0)
 N LAMSG,LRTIME,LRX
"RTN","LRVRARU",145,0)
 S LRX=0,LRTIME=$$HTE^XLFDT($H,"1M")
"RTN","LRVRARU",146,0)
 F  S LRX=$O(LRSTORE(LRX)) Q:'LRX  D
"RTN","LRVRARU",147,0)
 . I '$D(^LAHM(62.48,LRX,20,"B",1)) Q  ; New result alerts not defined
"RTN","LRVRARU",148,0)
 . S LAMSG=$P(LRSTORE(LRX),"^")_" Patient(s) processed for Auto Release: "_$P(LRLL(0),"^")_" on "_LRTIME
"RTN","LRVRARU",149,0)
 . D XQA^LA7UXQA(1,LRX,"","",LAMSG,"",1)
"RTN","LRVRARU",150,0)
 Q
"RTN","LRVRARU",151,0)
 ;
"RTN","LRVRARU",152,0)
 ;
"RTN","LRVRARU",153,0)
SENDACK ; Send HL7 ACKnowledgment message
"RTN","LRVRARU",154,0)
 ;
"RTN","LRVRARU",155,0)
 ;ZEXCEPT: LA7624,LA76248,LA76249,LA7AAT,LRERR,LRUID,PNM,SSN
"RTN","LRVRARU",156,0)
 ;
"RTN","LRVRARU",157,0)
 N LA
"RTN","LRVRARU",158,0)
 ;
"RTN","LRVRARU",159,0)
 I LA7AAT(1)=""!(LA7AAT(1)="NE") Q
"RTN","LRVRARU",160,0)
 I LA7AAT(1)="SU",$G(LRERR)'="" Q
"RTN","LRVRARU",161,0)
 I LA7AAT(1)="ER",$G(LRERR)="" Q
"RTN","LRVRARU",162,0)
 ;
"RTN","LRVRARU",163,0)
 S LA(62.4)=LA7624,LA(62.48)=LA76248,LA(62.49)=LA76249
"RTN","LRVRARU",164,0)
 S LA("ACK")=$S(+LRERR:"AE",1:"AA")
"RTN","LRVRARU",165,0)
 S LA("ID",1)=LRUID
"RTN","LRVRARU",166,0)
 S LA("ID",2)=PNM
"RTN","LRVRARU",167,0)
 S LA("ID",3)=SSN
"RTN","LRVRARU",168,0)
 S LA("MSG")=$P(LRERR,"^",2)
"RTN","LRVRARU",169,0)
 I $L(LA("MSG"))>80 S LA("MSG")=$E(LA("MSG"),1,80),LA("MSG")=$P(LA("MSG"),". ") ; HL7 specifies field length 80.
"RTN","LRVRARU",170,0)
 ;
"RTN","LRVRARU",171,0)
 ; Build info for ERR segment
"RTN","LRVRARU",172,0)
 D BLDERR^LA7VHLU8(.LA,LRERR)
"RTN","LRVRARU",173,0)
 ;
"RTN","LRVRARU",174,0)
 D ACK^LA7VHLU8(.LA)
"RTN","LRVRARU",175,0)
 ;
"RTN","LRVRARU",176,0)
 Q
"RTN","LRVRARU",177,0)
 ;
"RTN","LRVRARU",178,0)
 ;
"RTN","LRVRARU",179,0)
CLEAN ;Clean-up point
"RTN","LRVRARU",180,0)
 ;
"RTN","LRVRARU",181,0)
 ;ZEXCEPT: AGE,COMB,CONTROL,DFN,DOB,DTS,H8,I5,LRACC,LRACD,LRAD,LRAN,LRAOD,LRASSN,LRBLBP,LRCAPLOC,LRCDEF,LRCDEF0,LRCDEF0X,LRCDT
"RTN","LRVRARU",182,0)
 ;ZEXCEPT: LRCODEN,LRCOM,LRDATA,LRERR,LRIDT,LRIN,LRIX,LRM,LRNLT,LRNOCODE,LRNOW,LRNT,LRNX,LRODT,LRODTIM,LROLDIV,LROLLOC,LRORD
"RTN","LRVRARU",183,0)
 ;ZEXCEPT: LRORU3,LROT,LRPRAC,LRRB,LRSB,LRSN,LRSSCX,LRSSN,LRST,LRSUB,LRSUM,LRSXN,LRT,LRTN,LRTREA,LRTS,LRTSORU,LRTST,LRTT,LRUID
"RTN","LRVRARU",184,0)
 ;ZEXCEPT: LRUNQ,LRWRD,OCXAP,PNM,S5,SEGID,SEX,SSN,T1,VA,VADMVT,VAINDT,VAL,XP,Z
"RTN","LRVRARU",185,0)
 ;
"RTN","LRVRARU",186,0)
 D KVAR^VADPT
"RTN","LRVRARU",187,0)
 K AGE,COMB,CONTROL,DFN,DOB,DTS,H8,I5
"RTN","LRVRARU",188,0)
 K LRACC,LRACD,LRAD,LRAN,LRAOD
"RTN","LRVRARU",189,0)
 K LRASSN,LRCAPLOC,LRCDT,LRCDEF,LRCDEF0,LRCDEF0X,LRCODEN,LRCOM
"RTN","LRVRARU",190,0)
 K LRDATA,LRERR,LRNOCODE,LROLDIV
"RTN","LRVRARU",191,0)
 K LRPRAC,LRRB
"RTN","LRVRARU",192,0)
 K LRSB,LRSN,LRSSCX,LRSSN,LRSUB,LRSXN,LRST,LRSUB,LRSUM
"RTN","LRVRARU",193,0)
 K LRSXN,LRT,LRTN,LRTREA,LRTS,LRTSORU,LRTST,LRTT,LRUID
"RTN","LRVRARU",194,0)
 K LRUNQ,LRWRD,PNM,S5,SEGID,SEX,SSN
"RTN","LRVRARU",195,0)
 K LRIDT,LRIN,LRIX,LRBLBP,LRM,LRNLT,LRNOW,LRNT,LRNX,LRODT
"RTN","LRVRARU",196,0)
 K LROLLOC,LRORD,LRODTIM,LRORU3,LROT,OCXAP
"RTN","LRVRARU",197,0)
 K T1,VA,VADMVT,VAINDT,VAL,XP,Z
"RTN","LRVRARU",198,0)
 Q
"UP",68.2,68.23,-1)
68.2^10
"UP",68.2,68.23,0)
68.23
"VER")
8.0^22.0
"^DD",68.2,68.23,2.4,0)
AUTO RELEASE^*S^0:NO;1:YES;^0;6^Q
"^DD",68.2,68.23,2.4,3)
Select "YES" if this profile is to be used for auto release. Enter "??" for additional help.
"^DD",68.2,68.23,2.4,12)
Only one profile on this Load List can be set to YES.
"^DD",68.2,68.23,2.4,12.1)
S DIC("S")="I Y=0!('$D(^LRO(68.2,""AR"",1,DA(1))))!$D(^LRO(68.2,""AR"",1,DA(1),DA))"
"^DD",68.2,68.23,2.4,21,0)
^^7^7^3151113^^^^
"^DD",68.2,68.23,2.4,21,1,0)
If an auto release process to accept and file laboratory results from an
"^DD",68.2,68.23,2.4,21,2,0)
external system using auto verification and/or human verification is 
"^DD",68.2,68.23,2.4,21,3,0)
being used then this field indicates to the auto release process which 
"^DD",68.2,68.23,2.4,21,4,0)
profile on this load list to use to process the lab results. 
"^DD",68.2,68.23,2.4,21,5,0)
 
"^DD",68.2,68.23,2.4,21,6,0)
 
"^DD",68.2,68.23,2.4,21,7,0)
There should only be one profile per load list set to "YES".
"^DD",68.2,68.23,2.4,"DT")
3151113
**END**
**END**
