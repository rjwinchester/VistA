KIDS Distribution saved on Oct 19, 2016@14:27:35
FMCT PSO IB BUNDLE 1.0
**KIDS**:FMCT PSO IB BUNDLE 1.0^PSO*7.0*460^IB*2.0*563^

**INSTALL NAME**
FMCT PSO IB BUNDLE 1.0
"BLD",9556,0)
FMCT PSO IB BUNDLE 1.0^^1^3161019^y
"BLD",9556,6.3)
7
"BLD",9556,10,0)
^9.63^3^2
"BLD",9556,10,1,0)
PSO*7.0*460^1
"BLD",9556,10,3,0)
IB*2.0*563^1
"BLD",9556,10,"B","IB*2.0*563",3)

"BLD",9556,10,"B","PSO*7.0*460",1)

"BLD",9556,"KRN",0)
^9.67PA^779.2^20
"BLD",9556,"KRN",.4,0)
.4
"BLD",9556,"KRN",.401,0)
.401
"BLD",9556,"KRN",.402,0)
.402
"BLD",9556,"KRN",.403,0)
.403
"BLD",9556,"KRN",.5,0)
.5
"BLD",9556,"KRN",.84,0)
.84
"BLD",9556,"KRN",3.6,0)
3.6
"BLD",9556,"KRN",3.8,0)
3.8
"BLD",9556,"KRN",9.2,0)
9.2
"BLD",9556,"KRN",9.8,0)
9.8
"BLD",9556,"KRN",19,0)
19
"BLD",9556,"KRN",19.1,0)
19.1
"BLD",9556,"KRN",101,0)
101
"BLD",9556,"KRN",409.61,0)
409.61
"BLD",9556,"KRN",771,0)
771
"BLD",9556,"KRN",779.2,0)
779.2
"BLD",9556,"KRN",870,0)
870
"BLD",9556,"KRN",8989.51,0)
8989.51
"BLD",9556,"KRN",8989.52,0)
8989.52
"BLD",9556,"KRN",8994,0)
8994
"BLD",9556,"KRN","B",.4,.4)

"BLD",9556,"KRN","B",.401,.401)

"BLD",9556,"KRN","B",.402,.402)

"BLD",9556,"KRN","B",.403,.403)

"BLD",9556,"KRN","B",.5,.5)

"BLD",9556,"KRN","B",.84,.84)

"BLD",9556,"KRN","B",3.6,3.6)

"BLD",9556,"KRN","B",3.8,3.8)

"BLD",9556,"KRN","B",9.2,9.2)

"BLD",9556,"KRN","B",9.8,9.8)

"BLD",9556,"KRN","B",19,19)

"BLD",9556,"KRN","B",19.1,19.1)

"BLD",9556,"KRN","B",101,101)

"BLD",9556,"KRN","B",409.61,409.61)

"BLD",9556,"KRN","B",771,771)

"BLD",9556,"KRN","B",779.2,779.2)

"BLD",9556,"KRN","B",870,870)

"BLD",9556,"KRN","B",8989.51,8989.51)

"BLD",9556,"KRN","B",8989.52,8989.52)

"BLD",9556,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
PSO*7.0*460
"BLD",9486,0)
PSO*7.0*460^OUTPATIENT PHARMACY^0^3161019^y
"BLD",9486,1,0)
^^1^1^3160615^
"BLD",9486,1,1,0)
FIXED MEDICATION COPAYMENT TIER (FMCT)
"BLD",9486,4,0)
^9.64PA^^
"BLD",9486,6)
1^
"BLD",9486,6.3)
32
"BLD",9486,"KRN",0)
^9.67PA^779.2^20
"BLD",9486,"KRN",.4,0)
.4
"BLD",9486,"KRN",.401,0)
.401
"BLD",9486,"KRN",.402,0)
.402
"BLD",9486,"KRN",.403,0)
.403
"BLD",9486,"KRN",.5,0)
.5
"BLD",9486,"KRN",.84,0)
.84
"BLD",9486,"KRN",3.6,0)
3.6
"BLD",9486,"KRN",3.8,0)
3.8
"BLD",9486,"KRN",9.2,0)
9.2
"BLD",9486,"KRN",9.8,0)
9.8
"BLD",9486,"KRN",9.8,"NM",0)
^9.68A^12^6
"BLD",9486,"KRN",9.8,"NM",1,0)
PSOCP^^0^B81558217
"BLD",9486,"KRN",9.8,"NM",3,0)
PSOCPBA2^^0^B19998841
"BLD",9486,"KRN",9.8,"NM",4,0)
PSOCPBK2^^0^B64657114
"BLD",9486,"KRN",9.8,"NM",5,0)
PSOCPBK4^^0^B92981238
"BLD",9486,"KRN",9.8,"NM",6,0)
PSOHLNE3^^0^B69950706
"BLD",9486,"KRN",9.8,"NM",12,0)
PSOCPIBC^^0^B49680609
"BLD",9486,"KRN",9.8,"NM","B","PSOCP",1)

"BLD",9486,"KRN",9.8,"NM","B","PSOCPBA2",3)

"BLD",9486,"KRN",9.8,"NM","B","PSOCPBK2",4)

"BLD",9486,"KRN",9.8,"NM","B","PSOCPBK4",5)

"BLD",9486,"KRN",9.8,"NM","B","PSOCPIBC",12)

"BLD",9486,"KRN",9.8,"NM","B","PSOHLNE3",6)

"BLD",9486,"KRN",19,0)
19
"BLD",9486,"KRN",19.1,0)
19.1
"BLD",9486,"KRN",101,0)
101
"BLD",9486,"KRN",409.61,0)
409.61
"BLD",9486,"KRN",771,0)
771
"BLD",9486,"KRN",779.2,0)
779.2
"BLD",9486,"KRN",870,0)
870
"BLD",9486,"KRN",8989.51,0)
8989.51
"BLD",9486,"KRN",8989.52,0)
8989.52
"BLD",9486,"KRN",8994,0)
8994
"BLD",9486,"KRN","B",.4,.4)

"BLD",9486,"KRN","B",.401,.401)

"BLD",9486,"KRN","B",.402,.402)

"BLD",9486,"KRN","B",.403,.403)

"BLD",9486,"KRN","B",.5,.5)

"BLD",9486,"KRN","B",.84,.84)

"BLD",9486,"KRN","B",3.6,3.6)

"BLD",9486,"KRN","B",3.8,3.8)

"BLD",9486,"KRN","B",9.2,9.2)

"BLD",9486,"KRN","B",9.8,9.8)

"BLD",9486,"KRN","B",19,19)

"BLD",9486,"KRN","B",19.1,19.1)

"BLD",9486,"KRN","B",101,101)

"BLD",9486,"KRN","B",409.61,409.61)

"BLD",9486,"KRN","B",771,771)

"BLD",9486,"KRN","B",779.2,779.2)

"BLD",9486,"KRN","B",870,870)

"BLD",9486,"KRN","B",8989.51,8989.51)

"BLD",9486,"KRN","B",8989.52,8989.52)

"BLD",9486,"KRN","B",8994,8994)

"BLD",9486,"QUES",0)
^9.62^^
"BLD",9486,"REQB",0)
^9.611^1^1
"BLD",9486,"REQB",1,0)
PSO*7.0*303^2
"BLD",9486,"REQB","B","PSO*7.0*303",1)

"MBREQ")
1
"PKG",141,-1)
1^1
"PKG",141,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",141,20,0)
^9.402P^^
"PKG",141,22,0)
^9.49I^1^1
"PKG",141,22,1,0)
7.0^2971216^2980917^11712
"PKG",141,22,1,"PAH",1,0)
460^3161019^10000000068
"PKG",141,22,1,"PAH",1,1,0)
^^1^1^3161019
"PKG",141,22,1,"PAH",1,1,1,0)
FIXED MEDICATION COPAYMENT TIER (FMCT)
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","PSOCP")
0^1^B81558217
"RTN","PSOCP",1,0)
PSOCP ;BIR/BAB - Pharmacy CO-PAY Application Utilities for IB ;02/06/92
"RTN","PSOCP",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**20,46,71,85,137,157,143,219,239,201,225,303,460**;DEC 1997;Build 32
"RTN","PSOCP",3,0)
 ;
"RTN","PSOCP",4,0)
 ;REF/IA - IBARX/125, SDCO22/1579, PS(55/2228, PSDRUG(/221, DGMSTAPI/2716, $$GETSHAD^DGUTL3/4462
"RTN","PSOCP",5,0)
 ;Reference to $$CPTIER^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSOCP",6,0)
 ;Reference to $$GETSTAT^DGMSTAPI supported by DBIA 3457
"RTN","PSOCP",7,0)
 ; 
"RTN","PSOCP",8,0)
CP ;Check if COPAY-Requires RXP,PSOSITE7
"RTN","PSOCP",9,0)
 I '$D(PSOPAR) D ^PSOLSET G CP
"RTN","PSOCP",10,0)
 K PSOCP
"RTN","PSOCP",11,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2) ; Set COPAY dfn PTR TO PATIENT
"RTN","PSOCP",12,0)
 S PSOCP=$P($G(^PSRX(RXP,"IB")),"^") ; IB action type
"RTN","PSOCP",13,0)
 S PSOSAVE=$S(PSOCP:1,1:"") ; save current copay status
"RTN","PSOCP",14,0)
 ; Set x=service^dfn^actiontype^user duz
"RTN","PSOCP",15,0)
 I +$G(PSOSITE7)'>0 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCP",16,0)
 S X=PSOSITE7_"^"_PSOCPN_"^"_PSOCP_"^"_$P(^PSRX(RXP,0),"^",16)
"RTN","PSOCP",17,0)
 ;
"RTN","PSOCP",18,0)
RX ;Determine Orig or Refill for RX
"RTN","PSOCP",19,0)
 N PSOIB,PSOPFS,PSOCPT S (PSOIB,PSOREF)=0
"RTN","PSOCP",20,0)
 I $G(^PSRX(RXP,1,+$G(YY),0))]"" S PSOREF=YY
"RTN","PSOCP",21,0)
 D PFSA^PSOPFSU1(RXP,PSOREF,2) G PFS:+PSOPFS
"RTN","PSOCP",22,0)
 ; Check if bill exists
"RTN","PSOCP",23,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",2)>0 D CHKIB^PSOCP1 I PSOIB G QUIT
"RTN","PSOCP",24,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",4)>0 G QUIT ; 'POTENTIAL BILL' - ALREADY ATTEMPTED TO BILL, BUT EXCEEDED ANNUAL COPAY CAP
"RTN","PSOCP",25,0)
 I PSOREF,+$G(^PSRX(RXP,1,PSOREF,"IB")) D CHKIB^PSOCP1 I PSOIB G QUIT
"RTN","PSOCP",26,0)
 I PSOREF,+$P($G(^PSRX(RXP,1,PSOREF,"IB")),"^",2) G QUIT ; POTENTIAL BILL
"RTN","PSOCP",27,0)
PFS ;
"RTN","PSOCP",28,0)
 S PSOCHG=1 ; set tem var to copay and check exception
"RTN","PSOCP",29,0)
 N MAILMSG
"RTN","PSOCP",30,0)
 D COPAYREL
"RTN","PSOCP",31,0)
 I 'PSOCHG D  D:PSOPFS CHRG^PSOPFSU1(RXP,PSOREF,"CG",PSOPFS) G QUIT
"RTN","PSOCP",32,0)
 . I PSOSAVE S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA S $P(^PSRX(RXP,"IB"),"^",1)=""
"RTN","PSOCP",33,0)
 I PSOCHG=2 D  I 'PSOCP D:PSOPFS CHRG^PSOPFSU1(RXP,PSOREF,"CG",PSOPFS) G QUIT ; IF 'SC' QUESTION APPLIES, BUT HAS NOT BEEN ANSWERED, SEND MAIL MSG AND KEEP COPAY STATUS AS IT WAS
"RTN","PSOCP",34,0)
 . D MAIL2^PSOCPE ; SEND MAIL TO PHARMACIST, PROVIDER, AND HOLDERS OF THE PSO COPAY KEY
"RTN","PSOCP",35,0)
 I PSOCHG=1,PSOSAVE="" D  I PSOREF S PSOCOMM="",PSOOLD="No Copay",PSONW="Copay" S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA
"RTN","PSOCP",36,0)
 . I '$D(^PSRX(RXP,"IB")),'PSOREF S $P(^PSRX(RXP,"IB"),"^",1)=1 Q
"RTN","PSOCP",37,0)
 . S $P(^PSRX(RXP,"IB"),"^",1)=1
"RTN","PSOCP",38,0)
 . S PSOCP=1,$P(X,"^",3)=PSOCP
"RTN","PSOCP",39,0)
 I PSOCHG'=2 I $G(MAILMSG) D MAIL2^PSOCPE ; SEND MAIL TO PHARM, PROV, AND HOLDERS OF PSO COPAY KEY HOLDERS
"RTN","PSOCP",40,0)
 ; Units for COPAY
"RTN","PSOCP",41,0)
 S PSOCPUN=$P(($P(^PSRX(RXP,0),"^",8)+29)/30,".",1)
"RTN","PSOCP",42,0)
 ; Build softlink for x(n)=softlink^units
"RTN","PSOCP",43,0)
 S X(1)="52:"_RXP S:PSOREF>0 X(1)=X(1)_";1:"_PSOREF S X(1)=X(1)_"^"_PSOCPUN
"RTN","PSOCP",44,0)
 ; Set correct user duz if refill
"RTN","PSOCP",45,0)
 I PSOREF S:+$P(^PSRX(RXP,1,PSOREF,0),"^",7)>0 $P(X,"^",4)=$P(^PSRX(RXP,1,PSOREF,0),"^",7)
"RTN","PSOCP",46,0)
 ;
"RTN","PSOCP",47,0)
IBNEW ;  Load ^TMP global for IB call
"RTN","PSOCP",48,0)
 Q:$G(RXP)'>0
"RTN","PSOCP",49,0)
 I PSOPFS D CHRG^PSOPFSU1(RXP,PSOREF,"CG",PSOPFS)
"RTN","PSOCP",50,0)
 G QUIT:PSOPFS
"RTN","PSOCP",51,0)
 N D0
"RTN","PSOCP",52,0)
 G QUIT:'$D(X)
"RTN","PSOCP",53,0)
 S XTMP=X,XTMP(1)=X(1)
"RTN","PSOCP",54,0)
 ;
"RTN","PSOCP",55,0)
 ; Requires x=service^dfn^action type^user duz
"RTN","PSOCP",56,0)
 ;   x(n)=softlink^units 
"RTN","PSOCP",57,0)
 I $P(X,"^",3)="" S $P(X,"^",3)=$P(^PSRX(RXP,"IB"),"^",1)
"RTN","PSOCP",58,0)
 D NEW^IBARX
"RTN","PSOCP",59,0)
 ; Returns y=1^total charges for this group or Y=-1^error code
"RTN","PSOCP",60,0)
 ;         y(n)=IB number^charge for this Rx^AR bill #^Cap met^Partial or Full charge^Copay Exempt^Number from file 354.71
"RTN","PSOCP",61,0)
 ;         Cap met ('1' - If patient has met cap amount or reached cap with this charge or '0' if not)
"RTN","PSOCP",62,0)
 ;         Partial or Full ('P' for partial billing, 'F' for full billing, null for no billing)
"RTN","PSOCP",63,0)
 ;         Copay Exempt - ('1' for exempt, '0' for non-exempt, '-1' for copay off (manila)),
"RTN","PSOCP",64,0)
 ;            ('1' - If patient has met cap amount or reach cap with this charge
"RTN","PSOCP",65,0)
 ; Entry from file 354.71 will only be saved for fills that met the annual cap and could not be fully billed
"RTN","PSOCP",66,0)
 ;
"RTN","PSOCP",67,0)
 G QUIT:+Y=-1
"RTN","PSOCP",68,0)
 S XTMP=XTMP_"^"_Y,XTMP(1)=XTMP(1)_"^"_Y(1)
"RTN","PSOCP",69,0)
 ;
"RTN","PSOCP",70,0)
 ; see if exempt or copay cap was met
"RTN","PSOCP",71,0)
 I $P(Y(1),"^",6) D  G QUIT
"RTN","PSOCP",72,0)
 . S PREA="R",PSOOLD="Copay",PSONW="No Copay"
"RTN","PSOCP",73,0)
 . S PSOCOMM="RX COPAY INCOME EXEMPTION" S PSODA=RXP D ACTLOG^PSOCPA
"RTN","PSOCP",74,0)
 . S $P(^PSRX(RXP,"IB"),"^",1)=""
"RTN","PSOCP",75,0)
 I $P(Y(1),"^",4) D
"RTN","PSOCP",76,0)
 . S PSOCOMM=$S($P(Y(1),"^",5)="F":" FULL BILLING FOR THIS FILL",$P(Y(1),"^",5)="P":" PARTIAL BILLING FOR THIS FILL ",1:" NO BILLING FOR THIS FILL")
"RTN","PSOCP",77,0)
 . S PREA="A"
"RTN","PSOCP",78,0)
 . S PSODA=RXP D ACTLOG^PSOCPA
"RTN","PSOCP",79,0)
 . I $P(Y(1),"^",5)'="F" D
"RTN","PSOCP",80,0)
 . . I PSOREF S $P(^PSRX(RXP,1,PSOREF,"IB"),"^",2)=$P(Y(1),"^",7) Q
"RTN","PSOCP",81,0)
 . . S $P(^PSRX(RXP,"IB"),"^",4)=$P(Y(1),"^",7)
"RTN","PSOCP",82,0)
 I $P(Y(1),"^",1)="" G QUIT
"RTN","PSOCP",83,0)
 ;
"RTN","PSOCP",84,0)
FILE ;File IB number in ^PSRX
"RTN","PSOCP",85,0)
 S PSOCP2=0
"RTN","PSOCP",86,0)
 S PSOCP2=+$P(XTMP(1),":",3)
"RTN","PSOCP",87,0)
 S:PSOCP2>0 ^PSRX(RXP,1,PSOCP2,"IB")=$P(XTMP(1),U,3) ;  Filing in refill node
"RTN","PSOCP",88,0)
 I PSOCP2>0,'$D(^PSRX(RXP,"IB")) S ^PSRX(RXP,"IB")="1^^" ;  If refill "IB" exists, need "IB" entry on original fill node
"RTN","PSOCP",89,0)
 S:PSOCP2=0 $P(^PSRX(RXP,"IB"),"^",2)=$P(XTMP(1),U,3) ;Filing in original fill (zero node)
"RTN","PSOCP",90,0)
QUIT ;
"RTN","PSOCP",91,0)
 K Y,PSOCP1,PSOCP2,QQ,PSOCPN,X,X2,XTMP,PSOCPUN,PSOREF,PSOCHG,PSOSAVE,PSOCOMM,PSOOLD,PSONW,PREA,PSORSN
"RTN","PSOCP",92,0)
 Q
"RTN","PSOCP",93,0)
EN D ^PSOLSET
"RTN","PSOCP",94,0)
EN1 S DIR(0)="NO",DIR("A")="Enter PRESCRIPTION number" D ^DIR K DIR G:$D(DIRUT) EXIT S RXP=X I +$G(^PSRX(RXP,0))'>0!+$P($G(^PSRX(RXP,"IB")),"^",0)>0 W !,?10,"RE-CHECK PRESCRIPTION NUMBER AND RE-ENTER " G EN1
"RTN","PSOCP",95,0)
 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCP",96,0)
 S PSODFN=$P(^PSRX(RXP,0),"^",2)
"RTN","PSOCP",97,0)
 D CP G EN1
"RTN","PSOCP",98,0)
EXIT K RXP D FINAL^PSOLSET Q
"RTN","PSOCP",99,0)
 ;
"RTN","PSOCP",100,0)
SC(PSODFN,PSODD) ;sup ref for CPRS, Pre-Copay enhancement
"RTN","PSOCP",101,0)
 N PSOSC
"RTN","PSOCP",102,0)
 I $$DT^PSOMLLDT S PSOSC="" G SCQ
"RTN","PSOCP",103,0)
 I $G(PSODD),($P($G(^PSDRUG(PSODD,0)),"^",3)["S")!($P($G(^(0)),"^",3)["I")!($P($G(^(0)),"^",3)["N") S PSOSC=1 G SCQ
"RTN","PSOCP",104,0)
 I $P($G(^PS(55,+$G(PSODFN),"PS")),"^"),$P($G(^PS(53,+$P(^("PS"),"^"),0)),"^",7) S PSOSC=1 G SCQ
"RTN","PSOCP",105,0)
 N I,J,X S (X,PSOSC)=""
"RTN","PSOCP",106,0)
 S J=0 F  S J=$O(^PS(59,J)) Q:'J  I +$G(^(J,"IB")) S X=+^("IB") Q
"RTN","PSOCP",107,0)
 G:'X SCQ
"RTN","PSOCP",108,0)
 S X=X_"^"_PSODFN D XTYPE^IBARX
"RTN","PSOCP",109,0)
 S J="" F  S J=$O(Y(J)) Q:'J  S I="" F  S I=$O(Y(J,I)) Q:I=""  S:I>0 PSOSC=I
"RTN","PSOCP",110,0)
SCQ Q $S($G(PSOSC)=2:0,1:1)
"RTN","PSOCP",111,0)
 ;
"RTN","PSOCP",112,0)
COPAYREL ; Recheck copay status at release
"RTN","PSOCP",113,0)
 ; check Rx patient status
"RTN","PSOCP",114,0)
 I $P(^PSRX(RXP,0),"^",3)'="",$P($G(^PS(53,$P(^PSRX(RXP,0),"^",3),0)),"^",7)=1 S PSOCHG=0,PSOCOMM="Rx Patient Status Change",PSOOLD="Copay",PSONW="No Copay" Q
"RTN","PSOCP",115,0)
 ; see if drug is nutritional supplement, investigational or supply
"RTN","PSOCP",116,0)
 N DRG,DRGTYP,X,PSOEXMPT
"RTN","PSOCP",117,0)
 S DRG=+$P(^PSRX(RXP,0),"^",6),DRGTYP=$P($G(^PSDRUG(DRG,0)),"^",3)
"RTN","PSOCP",118,0)
 I DRGTYP["I" S PSOCOMM="Investigational Drug",PSOOLD="Copay",PSONW="No Copay",PSOCHG=0,PSOEXMPT=1
"RTN","PSOCP",119,0)
 I DRGTYP["S" S PSOCOMM="Supply Item",PSOOLD="Copay",PSONW="No Copay",PSOCHG=0,PSOEXMPT=1
"RTN","PSOCP",120,0)
 I DRGTYP["N" S PSOCOMM="Nutritional Supplement",PSOOLD="Copay",PSONW="No Copay",PSOCHG=0,PSOEXMPT=1
"RTN","PSOCP",121,0)
 K PSOTG,CHKXTYPE
"RTN","PSOCP",122,0)
 I +$G(^PSRX(RXP,"IBQ")) D XTYPE1^PSOCP1
"RTN","PSOCP",123,0)
 I $G(^PSRX(RXP,"IBQ"))["1" D  S PSOCHG=0,PSOOLD="Copay",PSONW="No Copay" Q  ; COPAY EXEMPT
"RTN","PSOCP",124,0)
 . N EXMT,II,PSOCIBQ
"RTN","PSOCP",125,0)
 . S PSOCIBQ=$G(^PSRX(RXP,"IBQ"))
"RTN","PSOCP",126,0)
 . F II=1,7,3,4,5,6,2,8 I $P(PSOCIBQ,"^",II)=1 S EXMT=$S(II=1:"SC",II=7:"CV",II=3:"AO",II=4:"IR",II=5:"EC",II=8:"SHAD",II=2:"MST",II=6:"HNC",1:"") D:EXMT'="" SETCOMM Q
"RTN","PSOCP",127,0)
 D SCNEW(.PSOTG,PSOCPN,DRG,RXP)
"RTN","PSOCP",128,0)
 N EXMT
"RTN","PSOCP",129,0)
 I '$D(CHKXTYPE) D XTYPE
"RTN","PSOCP",130,0)
 F EXMT="SC","CV","AO","IR","EC","SHAD","MST","HNC" I $D(PSOTG(EXMT)) D  I 'PSOCHG Q
"RTN","PSOCP",131,0)
 . I PSOTG(EXMT)=1 S PSOCHG=0 D SETCOMM
"RTN","PSOCP",132,0)
 ;***** begin - for regression test - sites must not use this as it will adversely affect billing results - only used by SQA
"RTN","PSOCP",133,0)
 ; The following is required for testing different effective dates.  If date is less than 02/27/17 bills old way.  Otherwise bills new way.
"RTN","PSOCP",134,0)
 ;S ^XTMP("PSOTIEREFTST",0)="3201231^3170227^FOR SQA TESTING ONLY" - Defined for SQA testing only.   Delete this XTMP when regression complete
"RTN","PSOCP",135,0)
 D NOW^%DTC N PSOTIERE
"RTN","PSOCP",136,0)
 S PSOTIERE=1  ;use copay tiers - new
"RTN","PSOCP",137,0)
 I $P(%,".")<3170227 S PSOTIERE=0  ;legacy billing - old
"RTN","PSOCP",138,0)
 I $G(^XTMP("PSOTIEREFTST",0)) S PSOTIERE=1  ;for SQA testing only - bill with copay tiers - new
"RTN","PSOCP",139,0)
 ;***** end for regression test
"RTN","PSOCP",140,0)
 G COPAYRE1:'PSOTIERE
"RTN","PSOCP",141,0)
 ;Check copay tier. Tier zero does not have copay charges. Tier billing will be effective 2/27/17 and IB rate table decides what amount to bill based on rate effective date
"RTN","PSOCP",142,0)
 N CPDATE,X D NOW^%DTC S CPDATE=X,PSOCPT=$$CPTIER^PSNAPIS("",CPDATE,DRG) K CPDATE,X
"RTN","PSOCP",143,0)
 I $P(PSOCPT,"^")=0 S PSOCHG=0 Q  ;Tier zero do not send to IB for copay charge
"RTN","PSOCP",144,0)
 I '$G(PSOEXMPT),$P(PSOCPT,"^")=""!($P(PSOCPT,"^")>0) S PSOCOMM="Copay Tier "_$S(PSOCPT="":"Null",1:+PSOCPT),PSOOLD="No Copay",PSONW="Copay",PSODA=RXP,PREA="R",PSOCHG=1 D ACTLOG^PSOCPA Q
"RTN","PSOCP",145,0)
 ;
"RTN","PSOCP",146,0)
COPAYRE1 ;
"RTN","PSOCP",147,0)
 Q:PSOCHG
"RTN","PSOCP",148,0)
 I 'PSOCHG S PSOOLD="Copay",PSONW="No Copay" Q
"RTN","PSOCP",149,0)
 ;
"RTN","PSOCP",150,0)
 ; If any of the applicable exemption quest have never been answered, send a mail msg with all of the quest
"RTN","PSOCP",151,0)
 S EXMT="",MAILMSG=0 F  S EXMT=$O(PSOTG(EXMT)) Q:EXMT=""  I PSOTG(EXMT)="" S MAILMSG=1 Q
"RTN","PSOCP",152,0)
 I MAILMSG,$D(PSOTG("SC")) I $G(PSOTG("SC"))="" S PSOCHG=2 ; 'SC' quest not answered, don't reset copay status to 'copay'
"RTN","PSOCP",153,0)
 Q
"RTN","PSOCP",154,0)
 ;
"RTN","PSOCP",155,0)
SCNEW(PSOTG,PSOPT,PSODR,PSORN) ;CPRS supported ref
"RTN","PSOCP",156,0)
 I '$$DT^PSOMLLDT Q
"RTN","PSOCP",157,0)
 I '$G(PSOPT) Q
"RTN","PSOCP",158,0)
 ;I $G(PSODR),($P($G(^PSDRUG(PSODR,0)),"^",3)["S")!($P($G(^(0)),"^",3)["I") Q ;CIDC ALWAYS ASK
"RTN","PSOCP",159,0)
 N PSOCIBQ,PSOQMSH,PSOQVEH,PSOQRQD,PSOQHNC,PSOQPGW,DFN,PSOSCA,ZXX
"RTN","PSOCP",160,0)
 K PSOANSQ("SC>50")
"RTN","PSOCP",161,0)
 S DFN=PSOPT
"RTN","PSOCP",162,0)
 D SCP^PSORN52D S:PSOSCP>49&(PSOSCA) PSOANSQ("SC>50")=1
"RTN","PSOCP",163,0)
 I $G(PSORN) D
"RTN","PSOCP",164,0)
 . S PSOCIBQ=$G(^PSRX(PSORN,"IBQ"))
"RTN","PSOCP",165,0)
 . I $TR(PSOCIBQ,"^")="" S ZXX=$G(^PSRX(PSORN,"ICD",1,0)) D ICD:ZXX'=""
"RTN","PSOCP",166,0)
 I '$G(PSORN) S PSOCIBQ=""
"RTN","PSOCP",167,0)
 ;Rx Patient Status check is not being done here
"RTN","PSOCP",168,0)
 N PSOSCMX,Y,I,J,X S (X,PSOSCMX)=""
"RTN","PSOCP",169,0)
 S J=0 F  S J=$O(^PS(59,J)) Q:'J  I +$G(^(J,"IB")) S X=+^("IB") Q
"RTN","PSOCP",170,0)
 G:'X SKIP
"RTN","PSOCP",171,0)
 S X=X_"^"_PSOPT D XTYPE^IBARX
"RTN","PSOCP",172,0)
 S J="" F  S J=$O(Y(J)) Q:'J  S I="" F  S I=$O(Y(J,I)) Q:I=""  S:I>0 PSOSCMX=I
"RTN","PSOCP",173,0)
SKIP ;
"RTN","PSOCP",174,0)
 I $G(PSOSCA)!($G(PSOSCMX)=2) S PSOTG("SC")=$S($P(PSOCIBQ,"^")=1:1,$P(PSOCIBQ,"^")=0:0,$G(PSORN)&($P($G(^PSRX(+$G(PSORN),"IB")),"^")):0,1:"")
"RTN","PSOCP",175,0)
 S:$$AO^SDCO22(PSOPT) PSOTG("AO")=$S($P(PSOCIBQ,"^",3)=1:1,$P(PSOCIBQ,"^",3)=0:0,1:"")
"RTN","PSOCP",176,0)
 S:$$IR^SDCO22(PSOPT) PSOTG("IR")=$S($P(PSOCIBQ,"^",4)=1:1,$P(PSOCIBQ,"^",4)=0:0,1:"")
"RTN","PSOCP",177,0)
 S:$$EC^SDCO22(PSOPT) PSOTG("EC")=$S($P(PSOCIBQ,"^",5)=1:1,$P(PSOCIBQ,"^",5)=0:0,1:"")
"RTN","PSOCP",178,0)
 S:$P($$GETSTAT^DGMSTAPI(PSOPT),"^",2)="Y" PSOTG("MST")=$S($P(PSOCIBQ,"^",2)=1:1,$P(PSOCIBQ,"^",2)=0:0,1:"")
"RTN","PSOCP",179,0)
 I $T(GETCUR^DGNTAPI)]"" N PSONC,PSONCX S PSONCX=$$GETCUR^DGNTAPI(PSOPT,"PSONC") I $P($G(PSONC("IND")),"^")="Y" S PSOTG("HNC")=$S($P(PSOCIBQ,"^",6)=1:1,$P(PSOCIBQ,"^",6)=0:0,1:"")
"RTN","PSOCP",180,0)
 S:$P($$CVEDT^DGCV(PSOPT),"^",3) PSOTG("CV")=$S($P(PSOCIBQ,"^",7)=1:1,$P(PSOCIBQ,"^",7)=0:0,1:"")
"RTN","PSOCP",181,0)
 I $L($T(GETSHAD^DGUTL3)) S:$$GETSHAD^DGUTL3(PSOPT)=1 PSOTG("SHAD")=$S($P(PSOCIBQ,"^",8)=1:1,$P(PSOCIBQ,"^",8)=0:0,1:"")
"RTN","PSOCP",182,0)
 Q
"RTN","PSOCP",183,0)
 ;
"RTN","PSOCP",184,0)
ICD ;
"RTN","PSOCP",185,0)
 D ICD^PSOCP1
"RTN","PSOCP",186,0)
 Q
"RTN","PSOCP",187,0)
XTYPE ;
"RTN","PSOCP",188,0)
 N PSOCIBQ,PSOSCMX,Y,I,J,X,SAVY,ZXX
"RTN","PSOCP",189,0)
 S (X,PSOSCMX,SAVY)=""
"RTN","PSOCP",190,0)
 S PSOCIBQ=$G(^PSRX(RXP,"IBQ")) I $TR(PSOCIBQ,"^")="" S ZXX=$G(^PSRX(RXP,"ICD",1,0)) D ICD:ZXX'=""
"RTN","PSOCP",191,0)
 I $P(PSOCIBQ,"^",1)'="" S PSOTG("SC")=$P(PSOCIBQ,"^",1)
"RTN","PSOCP",192,0)
 I $D(PSOTG("SC")),$P(PSOCIBQ,"^",1)="" S PSOTG("SC")="" ; USE "CURRENT" SETTING AS ANS TO SC QUEST IF IT APPLIES
"RTN","PSOCP",193,0)
 S J=0 F  S J=$O(^PS(59,J)) Q:'J  I +$G(^(J,"IB")) S X=+^("IB") Q
"RTN","PSOCP",194,0)
 I 'X Q
"RTN","PSOCP",195,0)
 S X=X_"^"_PSOCPN D XTYPE^IBARX
"RTN","PSOCP",196,0)
 I $G(Y)'=1 Q
"RTN","PSOCP",197,0)
 S J="" F  S J=$O(Y(J)) Q:'J  S I="" F  S SAVY=I,I=$O(Y(J,I)) Q:I=""  S:I>0 PSOSCMX=I
"RTN","PSOCP",198,0)
 I PSOSCMX="",SAVY=0 S PSOCHG=0 S PSOCOMM="Exempt from copayment" Q  ; INCOME EXEMPT OR SC
"RTN","PSOCP",199,0)
 I PSOSCMX=2,'$D(PSOTG("SC")) S PSOTG("SC")=$S(($G(RXP)&($P($G(^PSRX(+$G(RXP),"IB")),"^")))!($P(PSOCIBQ,"^")=0):0,$P(PSOCIBQ,"^")=1:1,1:"") Q
"RTN","PSOCP",200,0)
 Q
"RTN","PSOCP",201,0)
 ;
"RTN","PSOCP",202,0)
SETCOMM ;
"RTN","PSOCP",203,0)
 D SETCOMM^PSOCP1
"RTN","PSOCP",204,0)
 Q
"RTN","PSOCP",205,0)
 ;
"RTN","PSOCPBA2")
0^3^B19998841
"RTN","PSOCPBA2",1,0)
PSOCPBA2 ;BIR/EJW-PHARMACY CO-PAY APPLICATION UTILITIES FOR IB ;03/29/03
"RTN","PSOCPBA2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**137,303,460**;DEC 1997;Build 32
"RTN","PSOCPBA2",3,0)
 ;
"RTN","PSOCPBA2",4,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSOCPBA2",5,0)
 ;External reference to ^IBAM(354.7 supported by DBIA 3877
"RTN","PSOCPBA2",6,0)
 ;External reference to $$CPTIER^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSOCPBA2",7,0)
TALLY ;
"RTN","PSOCPBA2",8,0)
 ; IF NO IB NUMBER FOR THIS FILL, SET UP VARIABLES AND TALLY
"RTN","PSOCPBA2",9,0)
 S PSODFN="" F  S PSODFN=$O(^XTMP("PSOCPBAK",$J,PSODFN)) Q:'PSODFN  D
"RTN","PSOCPBA2",10,0)
 .I $G(^XTMP("PSOCPBAK",$J,PSODFN)) Q  ; EXEMPT OR SC QUESTION APPLIES
"RTN","PSOCPBA2",11,0)
 .S (PSOCAP(302),PSOCAP(303))=0 ; INITIAL ANNUAL CAP FLAG FOR PATIENT FOR 2002 AND 2003
"RTN","PSOCPBA2",12,0)
 .S RXP="" F  S RXP=$O(^XTMP("PSOCPBAK",$J,PSODFN,RXP)) Q:'RXP  S YY=""  F  S YY=$O(^XTMP("PSOCPBAK",$J,PSODFN,RXP,YY)) Q:YY=""  D
"RTN","PSOCPBA2",13,0)
 ..S PSOREL=$G(^XTMP("PSOCPBAK",$J,PSODFN,RXP,YY))
"RTN","PSOCPBA2",14,0)
 ..I PSOCAP($E(PSOREL,1,3)) Q  ; MET ANNUAL CAP FOR 2002 OR 2003
"RTN","PSOCPBA2",15,0)
 ..I 'YY D  Q
"RTN","PSOCPBA2",16,0)
 ...I $P($G(^PSRX(RXP,"IB")),"^",2)'="" Q  ; ALREADY BILLED
"RTN","PSOCPBA2",17,0)
 ...D SITE
"RTN","PSOCPBA2",18,0)
 ...D CP
"RTN","PSOCPBA2",19,0)
 ..I $P($G(^PSRX(RXP,1,YY,"IB")),"^",1)="" D  ; REFILL LEVEL
"RTN","PSOCPBA2",20,0)
 ...D SITE
"RTN","PSOCPBA2",21,0)
 ...D CP
"RTN","PSOCPBA2",22,0)
 Q
"RTN","PSOCPBA2",23,0)
 ;
"RTN","PSOCPBA2",24,0)
CP ; Entry point to Check if COPAY  -   Requires RXP,PSOSITE7
"RTN","PSOCPBA2",25,0)
 I '$D(PSOPAR) D ^PSOLSET G CP
"RTN","PSOCPBA2",26,0)
 K PSOCP
"RTN","PSOCPBA2",27,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2) ; Set COPAY dfn PTR TO PATIENT
"RTN","PSOCPBA2",28,0)
 S PSOCP=$P($G(^PSRX(RXP,"IB")),"^") ; IB action type
"RTN","PSOCPBA2",29,0)
 S PSOSAVE=$S(PSOCP:1,1:"") ; save current copay status
"RTN","PSOCPBA2",30,0)
 ;         Set x=service^dfn^actiontype^user duz
"RTN","PSOCPBA2",31,0)
 I +$G(PSOSITE7)'>0 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCPBA2",32,0)
 S X=PSOSITE7_"^"_PSOCPN_"^"_PSOCP_"^"_$P(^PSRX(RXP,0),"^",16)
"RTN","PSOCPBA2",33,0)
 ;
"RTN","PSOCPBA2",34,0)
RX ;         Determine Original or Refill for RX
"RTN","PSOCPBA2",35,0)
 N PSOIB
"RTN","PSOCPBA2",36,0)
 S PSOIB=0
"RTN","PSOCPBA2",37,0)
 S PSOREF=0
"RTN","PSOCPBA2",38,0)
 I $G(^PSRX(RXP,1,+$G(YY),0))]"" S PSOREF=YY
"RTN","PSOCPBA2",39,0)
 ;         Check if bill # already exists for this RX or Refill
"RTN","PSOCPBA2",40,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",2)>0 D CHKIB^PSOCP1 I PSOIB G QUIT
"RTN","PSOCPBA2",41,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",4)>0 G QUIT ; 'POTENTIAL BILL' - ALREADY ATTEMPTED TO BILL, BUT EXCEEDED ANNUAL COPAY CAP
"RTN","PSOCPBA2",42,0)
 I PSOREF,+$G(^PSRX(RXP,1,PSOREF,"IB")) D CHKIB^PSOCP1 I PSOIB G QUIT
"RTN","PSOCPBA2",43,0)
 I PSOREF,+$P($G(^PSRX(RXP,1,PSOREF,"IB")),"^",2) G QUIT ; POTENTIAL BILL
"RTN","PSOCPBA2",44,0)
 S PSOCHG=1 ; set temporary variable to copay and then look for exceptions
"RTN","PSOCPBA2",45,0)
 D COPAYREL
"RTN","PSOCPBA2",46,0)
 I 'PSOCHG G QUIT ; NOT BILLABLE
"RTN","PSOCPBA2",47,0)
 I PSOCHG=2 I 'PSOCP G QUIT
"RTN","PSOCPBA2",48,0)
 ;         Units for COPAY
"RTN","PSOCPBA2",49,0)
 S PSOCPUN=$P(($P(^PSRX(RXP,0),"^",8)+29)/30,".",1) ; NUMBER OF 30-DAY UNITS ELIGIBLE TO BILL
"RTN","PSOCPBA2",50,0)
 D ACCUM
"RTN","PSOCPBA2",51,0)
QUIT ;
"RTN","PSOCPBA2",52,0)
 K Y,PSOCP1,PSOCP2,QQ,PSOCPN,X,PSOCPUN,PSOREF,PSOCHG,PSOSAVE,PREA,PSORSN,PSOCOMM,PSOOLD,PSONW,PSODA
"RTN","PSOCPBA2",53,0)
 Q
"RTN","PSOCPBA2",54,0)
 ;
"RTN","PSOCPBA2",55,0)
COPAYREL ; Recheck copay status at release
"RTN","PSOCPBA2",56,0)
 ;
"RTN","PSOCPBA2",57,0)
 ; check Rx patient status
"RTN","PSOCPBA2",58,0)
 I $P(^PSRX(RXP,0),"^",3)'="",$P($G(^PS(53,$P(^PSRX(RXP,0),"^",3),0)),"^",7)=1 S PSOCHG=0 Q
"RTN","PSOCPBA2",59,0)
 ; see if drug is nutritional supplement, investigational or supply
"RTN","PSOCPBA2",60,0)
 N DRG,DRGTYP
"RTN","PSOCPBA2",61,0)
 S DRG=+$P(^PSRX(RXP,0),"^",6),DRGTYP=$P($G(^PSDRUG(DRG,0)),"^",3)
"RTN","PSOCPBA2",62,0)
 I DRGTYP["I"!(DRGTYP["S")!(DRGTYP["N") S PSOCHG=0 Q
"RTN","PSOCPBA2",63,0)
 K PSOTG,CHKXTYPE
"RTN","PSOCPBA2",64,0)
 I +$G(^PSRX(RXP,"IBQ")) D XTYPE1^PSOCP1
"RTN","PSOCPBA2",65,0)
 I $G(^PSRX(RXP,"IBQ"))["1" S PSOCHG=0 Q
"RTN","PSOCPBA2",66,0)
 ;***** begin - for regression test - sites must not use this as it will adversely affect billing results - only used by SQA
"RTN","PSOCPBA2",67,0)
 ; The following is required for testing different effective dates.  If date is less than 02/27/17 bills old way.  Otherwise bills new way.
"RTN","PSOCPBA2",68,0)
 ;S ^XTMP("PSOTIEREFTST",0)="3201231^3170227^FOR SQA TESTING ONLY" - Defined for SQA testing only.   Delete this XTMP when regression complete
"RTN","PSOCPBA2",69,0)
 D NOW^%DTC N PSOTIERE
"RTN","PSOCPBA2",70,0)
 S PSOTIERE=1  ;use copay tiers - new
"RTN","PSOCPBA2",71,0)
 I $P(%,".")<3170227 S PSOTIERE=0  ;legacy billing - old
"RTN","PSOCPBA2",72,0)
 I $G(^XTMP("PSOTIEREFTST",0)) S PSOTIERE=1  ;for SQA testing only - bill with copay tiers - new
"RTN","PSOCPBA2",73,0)
 ;***** end for regression test
"RTN","PSOCPBA2",74,0)
 G COPAYRE1:'PSOTIERE
"RTN","PSOCPBA2",75,0)
 ; check copay tier. Tier zero does not have copay charges
"RTN","PSOCPBA2",76,0)
 N CPDATE,X,PSOCPT D NOW^%DTC S CPDATE=X S PSOCPT=$$CPTIER^PSNAPIS("",CPDATE,DRG) K CPDATE,X
"RTN","PSOCPBA2",77,0)
 I $P(PSOCPT,"^")=0 S PSOCHG=0 Q   ;Tier zero do not send to IB for copay charge
"RTN","PSOCPBA2",78,0)
 I $P(PSOCPT,"^")'=0 S PSOCOMM="",PSOOLD="No Copay",PSONW="Copay" S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA
"RTN","PSOCPBA2",79,0)
COPAYRE1 ;
"RTN","PSOCPBA2",80,0)
 Q
"RTN","PSOCPBA2",81,0)
 ;
"RTN","PSOCPBA2",82,0)
ACCUM ; ACCUMULATE TOTALS AND SEE IF PATIENT MET ANNUAL CAP
"RTN","PSOCPBA2",83,0)
 S PSOYR=$E(PSOREL,1,3) I PSOYR="" Q
"RTN","PSOCPBA2",84,0)
 S PSOYEAR=$S(PSOYR="302":"YR2002",PSOYR="303":"YR2003",1:"") I PSOYEAR="" Q
"RTN","PSOCPBA2",85,0)
 S PSOTOT=$G(^XTMP("PSOCPBAK",$J,PSODFN,PSOYEAR))
"RTN","PSOCPBA2",86,0)
 I 'PSOTOT D
"RTN","PSOCPBA2",87,0)
 .S PSOSQ="" F  S PSOSQ=$O(^IBAM(354.7,PSODFN,1,PSOSQ)) Q:'PSOSQ  S PSOLOG=$G(^IBAM(354.7,PSODFN,1,PSOSQ,0)) I $E(PSOLOG,1,3)=PSOYR D
"RTN","PSOCPBA2",88,0)
 ..S PSOTOT=PSOTOT+$P(PSOLOG,"^",2)
"RTN","PSOCPBA2",89,0)
 I PSOTOT+(7*PSOCPUN)>840 S PSOCAP(PSOYR)=1 Q  ; BILLING FOR THIS WOULD EXCEED ANNUAL CAP
"RTN","PSOCPBA2",90,0)
 S ^XTMP("PSOCPBAK",$J,PSODFN,PSOYEAR)=PSOTOT+(PSOCPUN*7)
"RTN","PSOCPBA2",91,0)
 S ^XTMP("PSOCPBAK",$J,PSODFN,PSOYEAR,PSOCPUN)=$G(^XTMP("PSOCPBAK",$J,PSODFN,PSOYEAR,PSOCPUN))+1
"RTN","PSOCPBA2",92,0)
 Q
"RTN","PSOCPBA2",93,0)
 ;
"RTN","PSOCPBA2",94,0)
SITE ; SET UP VARIABLES NEEDED BY BILLING
"RTN","PSOCPBA2",95,0)
 S PSOSITE=$S(YY=0:$P(^PSRX(RXP,2),"^",9),1:$P($G(^PSRX(RXP,1,YY,0)),"^",9))
"RTN","PSOCPBA2",96,0)
 I PSOSITE="" Q
"RTN","PSOCPBA2",97,0)
 S PSOPAR=$G(^PS(59,PSOSITE,1))
"RTN","PSOCPBA2",98,0)
 S PSOSITE7=$P($G(^PS(59,PSOSITE,"IB")),"^")
"RTN","PSOCPBA2",99,0)
 Q
"RTN","PSOCPBK2")
0^4^B64657114
"RTN","PSOCPBK2",1,0)
PSOCPBK2 ;BIR/EJW,GN-Tally Automated-release refill copay cont. ;8/10/05 12:03pm
"RTN","PSOCPBK2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**215,303,460**;DEC 1997;Build 32
"RTN","PSOCPBK2",3,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSOCPBK2",4,0)
 ;External reference to ^IBAM(354.7 supported by DBIA 3877
"RTN","PSOCPBK2",5,0)
 ;External reference to $$PROD^XUPROD(1) supported by DBIA 4440
"RTN","PSOCPBK2",6,0)
 ;External reference to $$CPTIER^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSOCPBK2",7,0)
 ;External reference to ^XMB(1 supported by DBIA #10091
"RTN","PSOCPBK2",8,0)
 ;
"RTN","PSOCPBK2",9,0)
TALLY ;
"RTN","PSOCPBK2",10,0)
 ; IF NO IB NUMBER FOR THIS FILL, SET UP VARIABLES AND TALLY
"RTN","PSOCPBK2",11,0)
 N PSOCAP,PSODIV,PSODV,PSOFILL,PSOLOG,PSOOUT,PSOPAR,PSOPATID,PSOSITE
"RTN","PSOCPBK2",12,0)
 N PSOSITE7,PSOSQ,PSOTOT,PSOYEAR,PSOYR,SSN
"RTN","PSOCPBK2",13,0)
 S PSODFN=0
"RTN","PSOCPBK2",14,0)
 F QQ=1:1 S PSODFN=$O(^XTMP(NAMSP,PSODFN)) Q:'PSODFN  D  Q:STOP
"RTN","PSOCPBK2",15,0)
 .I QQ#100=0,$D(^XTMP(NAMSP,0,"STOP")) K ^XTMP(NAMSP) S STOP=1
"RTN","PSOCPBK2",16,0)
 .S (PSOCAP(304),PSOCAP(305))=0 ; INITIAL ANNUAL CAP FOR 2004 & 2005
"RTN","PSOCPBK2",17,0)
 .F RXP=0:0 S RXP=$O(^XTMP(NAMSP,PSODFN,RXP)) Q:'RXP  D
"RTN","PSOCPBK2",18,0)
 ..F YY=0:0 S YY=$O(^XTMP(NAMSP,PSODFN,RXP,YY)) Q:YY=""  D
"RTN","PSOCPBK2",19,0)
 ...S PSOREL=$G(^XTMP(NAMSP,PSODFN,RXP,YY))
"RTN","PSOCPBK2",20,0)
 ...I PSOCAP($E(PSOREL,1,3)) Q  ; MET ANNUAL CAP FOR 2004 OR 2005
"RTN","PSOCPBK2",21,0)
 ...I $P($G(^PSRX(RXP,1,YY,"IB")),"^",1)="" D  ; REFILL LEVEL
"RTN","PSOCPBK2",22,0)
 ....D SITE
"RTN","PSOCPBK2",23,0)
 ....D CP
"RTN","PSOCPBK2",24,0)
 Q
"RTN","PSOCPBK2",25,0)
 ;
"RTN","PSOCPBK2",26,0)
CP ; Entry point to Check if COPAY  -   Requires RXP,PSOSITE7
"RTN","PSOCPBK2",27,0)
 I '$D(PSOPAR) D ^PSOLSET G CP
"RTN","PSOCPBK2",28,0)
 K PSOCP
"RTN","PSOCPBK2",29,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2) ; Set COPAY dfn PTR TO PATIENT
"RTN","PSOCPBK2",30,0)
 S PSOCP=$P($G(^PSRX(RXP,"IB")),"^") ; IB action type
"RTN","PSOCPBK2",31,0)
 S PSOSAVE=$S(PSOCP:1,1:"") ; save current copay status
"RTN","PSOCPBK2",32,0)
 ;         Set x=service^dfn^actiontype^user duz
"RTN","PSOCPBK2",33,0)
 I +$G(PSOSITE7)'>0 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCPBK2",34,0)
 S X=PSOSITE7_"^"_PSOCPN_"^"_PSOCP_"^"_$P(^PSRX(RXP,0),"^",16)
"RTN","PSOCPBK2",35,0)
 ;
"RTN","PSOCPBK2",36,0)
RX ;         Determine Original or Refill for RX
"RTN","PSOCPBK2",37,0)
 N PSOIB
"RTN","PSOCPBK2",38,0)
 S PSOIB=0
"RTN","PSOCPBK2",39,0)
 S PSOREF=0
"RTN","PSOCPBK2",40,0)
 ;set refill number if this is a refill
"RTN","PSOCPBK2",41,0)
 I $G(^PSRX(RXP,1,+$G(YY),0))]"" S PSOREF=YY
"RTN","PSOCPBK2",42,0)
 ;
"RTN","PSOCPBK2",43,0)
 ;Orig fill -check if bill # already exists
"RTN","PSOCPBK2",44,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",2)>0 D CHKIB^PSOCP1
"RTN","PSOCPBK2",45,0)
 I PSOIB G QUIT
"RTN","PSOCPBK2",46,0)
 ;already attempted to bill, but exceeded Anuual Cap
"RTN","PSOCPBK2",47,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",4)>0 G QUIT
"RTN","PSOCPBK2",48,0)
 ;
"RTN","PSOCPBK2",49,0)
 ;Refill -check if bill # already exists
"RTN","PSOCPBK2",50,0)
 I PSOREF,+$G(^PSRX(RXP,1,PSOREF,"IB")) D CHKIB^PSOCP1
"RTN","PSOCPBK2",51,0)
 I PSOIB G QUIT
"RTN","PSOCPBK2",52,0)
 ;already attempted to bill, but exceeded Anuual Cap
"RTN","PSOCPBK2",53,0)
 I PSOREF,+$P($G(^PSRX(RXP,1,PSOREF,"IB")),"^",2) G QUIT
"RTN","PSOCPBK2",54,0)
 ;
"RTN","PSOCPBK2",55,0)
 ;set temporary variable to copay and then look for exceptions
"RTN","PSOCPBK2",56,0)
 S PSOCHG=1
"RTN","PSOCPBK2",57,0)
 D COPAYREL
"RTN","PSOCPBK2",58,0)
 I 'PSOCHG G QUIT            ;not billable
"RTN","PSOCPBK2",59,0)
 I PSOCHG=2 I 'PSOCP G QUIT
"RTN","PSOCPBK2",60,0)
 ;  Units for COPAY
"RTN","PSOCPBK2",61,0)
 ;calc number of 30-day units eligible to bill
"RTN","PSOCPBK2",62,0)
 S PSOCPUN=($P(^PSRX(RXP,0),"^",8)+29)\30
"RTN","PSOCPBK2",63,0)
 D ACCUM
"RTN","PSOCPBK2",64,0)
QUIT ;
"RTN","PSOCPBK2",65,0)
 K Y,PSOCP1,PSOCP2,PSOCPN,X,PSOCPUN,PSOREF,PSOCHG,PSOSAVE,PREA,PSORSN,PSOCOMM,PSOOLD,PSONW,PSODA
"RTN","PSOCPBK2",66,0)
 Q
"RTN","PSOCPBK2",67,0)
 ;
"RTN","PSOCPBK2",68,0)
COPAYREL ; Recheck copay status at release
"RTN","PSOCPBK2",69,0)
 ;
"RTN","PSOCPBK2",70,0)
 ; check Rx patient status
"RTN","PSOCPBK2",71,0)
 I $P(^PSRX(RXP,0),"^",3)'="",$P($G(^PS(53,$P(^PSRX(RXP,0),"^",3),0)),"^",7)=1 S PSOCHG=0 Q
"RTN","PSOCPBK2",72,0)
 ; see if drug is nutritional supplement, investigational or supply
"RTN","PSOCPBK2",73,0)
 N DRG,DRGTYP,PSOEXMPT
"RTN","PSOCPBK2",74,0)
 S DRG=+$P(^PSRX(RXP,0),"^",6),DRGTYP=$P($G(^PSDRUG(DRG,0)),"^",3)
"RTN","PSOCPBK2",75,0)
 I DRGTYP["I"!(DRGTYP["S")!(DRGTYP["N") S PSOCHG=0,PSOEXMPT=1 Q
"RTN","PSOCPBK2",76,0)
 K PSOTG,CHKXTYPE
"RTN","PSOCPBK2",77,0)
 I +$G(^PSRX(RXP,"IBQ")) D XTYPE1^PSOCP1
"RTN","PSOCPBK2",78,0)
 I $G(^PSRX(RXP,"IBQ"))["1" S PSOCHG=0 Q
"RTN","PSOCPBK2",79,0)
 ;***** begin - for regression test - sites must not use this as it will adversely affect billing results - only used by SQA
"RTN","PSOCPBK2",80,0)
 ; The following is required for testing different effective dates.  If date is less than 02/27/17 bills old way.  Otherwise bills new way.
"RTN","PSOCPBK2",81,0)
 ;S ^XTMP("PSOTIEREFTST",0)="3201231^3170227^FOR SQA TESTING ONLY" - Defined for SQA testing only.   Delete this XTMP when regression complete
"RTN","PSOCPBK2",82,0)
 D NOW^%DTC N PSOTIERE
"RTN","PSOCPBK2",83,0)
 S PSOTIERE=1  ;use copay tiers - new
"RTN","PSOCPBK2",84,0)
 I $P(%,".")<3170227 S PSOTIERE=0  ;legacy billing - old
"RTN","PSOCPBK2",85,0)
 I $G(^XTMP("PSOTIEREFTST",0)) S PSOTIERE=1  ;for SQA testing only - bill with copay tiers - new
"RTN","PSOCPBK2",86,0)
 ;***** end for regression test
"RTN","PSOCPBK2",87,0)
 G COPAYRE1:'PSOTIERE
"RTN","PSOCPBK2",88,0)
 ; check copay tier. Tier zero does not have copay charges
"RTN","PSOCPBK2",89,0)
 N CPDATE,X,PSOCPT D NOW^%DTC S CPDATE=X S PSOCPT=$$CPTIER^PSNAPIS("",CPDATE,DRG) K CPDATE,X
"RTN","PSOCPBK2",90,0)
 I $P(PSOCPT,"^")=0 S PSOCHG=0 Q   ;Tier zero do not send to IB for copay charge
"RTN","PSOCPBK2",91,0)
 I '$G(PSOEXMPT),$P(PSOCPT,"^")'=0 S PSOCOMM="",PSOOLD="No Copay",PSONW="Copay" S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA
"RTN","PSOCPBK2",92,0)
COPAYRE1 ;
"RTN","PSOCPBK2",93,0)
 Q
"RTN","PSOCPBK2",94,0)
 ;
"RTN","PSOCPBK2",95,0)
ACCUM ; ACCUMULATE TOTALS AND SEE IF PATIENT MET ANNUAL CAP
"RTN","PSOCPBK2",96,0)
 S PSOYR=$E(PSOREL,1,3) I PSOYR="" Q
"RTN","PSOCPBK2",97,0)
 S PSOYEAR=$S(PSOYR="304":"YR2004",PSOYR="305":"YR2005",1:"")
"RTN","PSOCPBK2",98,0)
 Q:PSOYEAR=""
"RTN","PSOCPBK2",99,0)
 ;
"RTN","PSOCPBK2",100,0)
 ;get Xtmp billing amt which would be IBAM tot + any previous refills
"RTN","PSOCPBK2",101,0)
 S PSOTOT=$G(^XTMP(NAMSP,PSODFN,PSOYEAR))
"RTN","PSOCPBK2",102,0)
 ;
"RTN","PSOCPBK2",103,0)
 ;if none yegt then init to the IBAM total for the year
"RTN","PSOCPBK2",104,0)
 I 'PSOTOT D
"RTN","PSOCPBK2",105,0)
 .F PSOSQ=0:0 S PSOSQ=$O(^IBAM(354.7,PSODFN,1,PSOSQ)) Q:'PSOSQ  D
"RTN","PSOCPBK2",106,0)
 ..S PSOLOG=$G(^IBAM(354.7,PSODFN,1,PSOSQ,0))
"RTN","PSOCPBK2",107,0)
 ..I $E(PSOLOG,1,3)=PSOYR S PSOTOT=PSOTOT+$P(PSOLOG,"^",2)
"RTN","PSOCPBK2",108,0)
 ;
"RTN","PSOCPBK2",109,0)
 ;see if current refill added to tot exceeds annual cap and quit
"RTN","PSOCPBK2",110,0)
 I PSOTOT+(7*PSOCPUN)>840 S PSOCAP(PSOYR)=1 Q
"RTN","PSOCPBK2",111,0)
 ;
"RTN","PSOCPBK2",112,0)
 ;update Xtmp tot nodes with current refill amounts
"RTN","PSOCPBK2",113,0)
 S ^XTMP(NAMSP,PSODFN,PSOYEAR)=PSOTOT+(PSOCPUN*7)
"RTN","PSOCPBK2",114,0)
 S ^XTMP(NAMSP,PSODFN,PSOYEAR,PSOCPUN)=$G(^XTMP(NAMSP,PSODFN,PSOYEAR,PSOCPUN))+1
"RTN","PSOCPBK2",115,0)
 ;
"RTN","PSOCPBK2",116,0)
 ;indicate this refill would be billable by adding to Xtmp "BILLED"
"RTN","PSOCPBK2",117,0)
 N PSONAM
"RTN","PSOCPBK2",118,0)
 S PSONAM=$P($G(^DPT(PSODFN,0)),"^"),PSONAM=$P(PSONAM,",")
"RTN","PSOCPBK2",119,0)
 S PSONAM=$E(PSONAM,1,6)
"RTN","PSOCPBK2",120,0)
 S ^XTMP(NAMSP,"BILLED",PSONAM,PSODFN,RXP,PSOREF)=PSOREL
"RTN","PSOCPBK2",121,0)
 Q
"RTN","PSOCPBK2",122,0)
 ;
"RTN","PSOCPBK2",123,0)
SITE ; SET UP VARIABLES NEEDED BY BILLING
"RTN","PSOCPBK2",124,0)
 S PSOSITE=$S(YY=0:$P(^PSRX(RXP,2),"^",9),1:$P($G(^PSRX(RXP,1,YY,0)),"^",9))
"RTN","PSOCPBK2",125,0)
 Q:PSOSITE=""
"RTN","PSOCPBK2",126,0)
 S PSOPAR=$G(^PS(59,PSOSITE,1))
"RTN","PSOCPBK2",127,0)
 S PSOSITE7=$P($G(^PS(59,PSOSITE,"IB")),"^")
"RTN","PSOCPBK2",128,0)
 Q
"RTN","PSOCPBK2",129,0)
 ;
"RTN","PSOCPBK2",130,0)
RPT ;
"RTN","PSOCPBK2",131,0)
 N NAMSP S NAMSP=$$NAMSP^PSOCPBK1
"RTN","PSOCPBK2",132,0)
 L +^XTMP(NAMSP):0 I '$T D  Q
"RTN","PSOCPBK2",133,0)
 . W !,"Copay Tally job for PSO*7*215 is still running.  Halting..."
"RTN","PSOCPBK2",134,0)
 L -^XTMP(NAMSP)
"RTN","PSOCPBK2",135,0)
 W !!,"This report shows the patient name and prescription information for refills"
"RTN","PSOCPBK2",136,0)
 W !,"that were indentified as billable by the tally patch PSO*7*215"
"RTN","PSOCPBK2",137,0)
 W !!,"You may queue the report to print, if you wish.",!
"RTN","PSOCPBK2",138,0)
 ;
"RTN","PSOCPBK2",139,0)
DVC K %ZIS,POP,IOP S %ZIS="QM" D ^%ZIS I $G(POP) W !!,"Nothing queued to print.",! G DONE
"RTN","PSOCPBK2",140,0)
QUEUE I $D(IO("Q")) S ZTRTN="START^PSOCPBK2",ZTDESC="Potential Billable copay report" D ^%ZTLOAD K %ZSI W !,"Report queued to print.",! G DONE
"RTN","PSOCPBK2",141,0)
START ;
"RTN","PSOCPBK2",142,0)
 U IO
"RTN","PSOCPBK2",143,0)
 N NAMSP S NAMSP=$$NAMSP^PSOCPBK1
"RTN","PSOCPBK2",144,0)
 S PSOOUT=0,PSODV=$S($E(IOST)="C":"C",1:"P")
"RTN","PSOCPBK2",145,0)
 S PSOPGCT=0,PSOPGLN=IOSL-7,PSOPGCT=1
"RTN","PSOCPBK2",146,0)
 D TITLE
"RTN","PSOCPBK2",147,0)
 S PSONAM=""
"RTN","PSOCPBK2",148,0)
 F  S PSONAM=$O(^XTMP(NAMSP,"BILLED",PSONAM)) Q:PSONAM=""  D
"RTN","PSOCPBK2",149,0)
 .S PSODFN=""
"RTN","PSOCPBK2",150,0)
 .F  S PSODFN=$O(^XTMP(NAMSP,"BILLED",PSONAM,PSODFN)) Q:PSODFN=""  D
"RTN","PSOCPBK2",151,0)
 ..S RXP=""
"RTN","PSOCPBK2",152,0)
 ..F  S RXP=$O(^XTMP(NAMSP,"BILLED",PSONAM,PSODFN,RXP)) Q:RXP=""  D
"RTN","PSOCPBK2",153,0)
 ...S PSOFILL=""
"RTN","PSOCPBK2",154,0)
 ...F  S PSOFILL=$O(^XTMP(NAMSP,"BILLED",PSONAM,PSODFN,RXP,PSOFILL)) Q:PSOFILL=""  D
"RTN","PSOCPBK2",155,0)
 ....N XX,PSONAME
"RTN","PSOCPBK2",156,0)
 ....S XX=$G(^XTMP(NAMSP,"BILLED",PSONAM,PSODFN,RXP,PSOFILL)) D
"RTN","PSOCPBK2",157,0)
 .....D FULL Q:$G(PSOOUT)  S PSONAME=$P($G(^DPT(PSODFN,0)),"^")
"RTN","PSOCPBK2",158,0)
 .....W !,$E(PSONAME,1,14) D PRTSSN
"RTN","PSOCPBK2",159,0)
 .....W ?46," ",RXP," (",PSOFILL,")" D
"RTN","PSOCPBK2",160,0)
 ......S Y=XX I Y>0 X ^DD("DD")
"RTN","PSOCPBK2",161,0)
 ......W ?65," ",Y
"RTN","PSOCPBK2",162,0)
 G END
"RTN","PSOCPBK2",163,0)
 ;
"RTN","PSOCPBK2",164,0)
FULL ;
"RTN","PSOCPBK2",165,0)
 I ($Y+7)>IOSL&('$G(PSOOUT)) D TITLE
"RTN","PSOCPBK2",166,0)
 Q
"RTN","PSOCPBK2",167,0)
 ;
"RTN","PSOCPBK2",168,0)
TITLE ;
"RTN","PSOCPBK2",169,0)
 I $G(PSODV)="C",$G(PSOPGCT)'=1 W ! K DIR S DIR(0)="E" D ^DIR K DIR I 'Y S PSOOUT=1 Q
"RTN","PSOCPBK2",170,0)
 ;
"RTN","PSOCPBK2",171,0)
 W @IOF D
"RTN","PSOCPBK2",172,0)
 . W !,"Patch PSO*7*215 -COPAY PRESCRIPTION REFILLS BILLABLE"
"RTN","PSOCPBK2",173,0)
 S Y=DT X ^DD("DD") W !,"Date printed: ",Y,?70,"Page: ",PSOPGCT,!
"RTN","PSOCPBK2",174,0)
 F MJT=1:1:79 W "="
"RTN","PSOCPBK2",175,0)
 W !,"PATIENT NAME     (SSN)       DIV",?48,"RX# (FILL)",?66,"RELEASE DATE"
"RTN","PSOCPBK2",176,0)
 W !,"--------------  -------  ----------------",?47,"------------"
"RTN","PSOCPBK2",177,0)
 W ?66,"------------"
"RTN","PSOCPBK2",178,0)
 S PSOPGCT=PSOPGCT+1
"RTN","PSOCPBK2",179,0)
 Q
"RTN","PSOCPBK2",180,0)
END ;
"RTN","PSOCPBK2",181,0)
 I '$G(PSOOUT),$G(PSODV)="C" W !!,"** End of Report **" K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSOCPBK2",182,0)
 I $G(PSODV)="C" W !
"RTN","PSOCPBK2",183,0)
 E  W @IOF
"RTN","PSOCPBK2",184,0)
DONE ;
"RTN","PSOCPBK2",185,0)
 K MJT,PSOPGCT,PSOPGLN,Y,DIR,X,IOP,POP,IO("Q"),DIRUT,DUOUT,DTOUT
"RTN","PSOCPBK2",186,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSOCPBK2",187,0)
 Q
"RTN","PSOCPBK2",188,0)
 ;
"RTN","PSOCPBK2",189,0)
PRTSSN ;
"RTN","PSOCPBK2",190,0)
 S SSN=$P(^DPT(PSODFN,0),"^",9),SSN=$E(SSN,$L(SSN)-3,$L(SSN))
"RTN","PSOCPBK2",191,0)
 S PSOPATID=$E(PSONAM,1)_SSN
"RTN","PSOCPBK2",192,0)
 S PSODIV=$P($G(^PSRX(RXP,2)),"^",9)
"RTN","PSOCPBK2",193,0)
 S:PSODIV'="" PSODIV=$P($G(^PS(59,PSODIV,0)),"^",1)
"RTN","PSOCPBK2",194,0)
 W "  ("_PSOPATID_")"_"  "_PSODIV
"RTN","PSOCPBK2",195,0)
 Q
"RTN","PSOCPBK2",196,0)
 ;
"RTN","PSOCPBK2",197,0)
ETIME(SECTIME) ;convert seconds to day:hr:min:sec
"RTN","PSOCPBK2",198,0)
 N DAY,HR,MIN,SEC,ETIM
"RTN","PSOCPBK2",199,0)
 S (DAY,HR,MIN,SEC)=""
"RTN","PSOCPBK2",200,0)
 I SECTIME>86400 S DAY=SECTIME\86400,SECTIME=SECTIME#86400
"RTN","PSOCPBK2",201,0)
 I SECTIME>3600 S HR=SECTIME\3600,SECTIME=SECTIME#3600
"RTN","PSOCPBK2",202,0)
 I SECTIME>60 S MIN=SECTIME\60,SECTIME=SECTIME#60
"RTN","PSOCPBK2",203,0)
 S SEC=SECTIME
"RTN","PSOCPBK2",204,0)
 S ETIM=""
"RTN","PSOCPBK2",205,0)
 S:$L(HR)=1 HR=0_HR S:$L(MIN)=1 MIN=0_MIN S:$L(SEC)=1 SEC=0_SEC
"RTN","PSOCPBK2",206,0)
 S:DAY ETIM=DAY_" Day " S:HR ETIM=ETIM_HR_":" S:MIN ETIM=ETIM_MIN
"RTN","PSOCPBK2",207,0)
 S ETIM=ETIM_":"_SEC
"RTN","PSOCPBK2",208,0)
 Q ETIM
"RTN","PSOCPBK2",209,0)
 ;
"RTN","PSOCPBK2",210,0)
MAIL3(MSG) ;
"RTN","PSOCPBK2",211,0)
 S PSOINST=$P($G(^DIC(4,+$P($G(^XMB(1,1,"XUS")),"^",17),99)),"^")
"RTN","PSOCPBK2",212,0)
 D NOW^%DTC S Y=% D DD^%DT S PSOEND=Y
"RTN","PSOCPBK2",213,0)
 K PSOTEXT
"RTN","PSOCPBK2",214,0)
 S XMY(DUZ)=""
"RTN","PSOCPBK2",215,0)
 S XMY("user@domain.ext")=""
"RTN","PSOCPBK2",216,0)
 S XMY("user@domain.ext")=""
"RTN","PSOCPBK2",217,0)
 S:$$PROD^XUPROD(1) XMY("user@domain.ext")=""
"RTN","PSOCPBK2",218,0)
 S XMDUZ="PSO*7*215 TALLY"
"RTN","PSOCPBK2",219,0)
 S XMSUB="STATION "_$G(PSOINST)
"RTN","PSOCPBK2",220,0)
 S XMSUB=XMSUB_$S($$PROD^XUPROD(1):"(Prod)",1:"(Test)")
"RTN","PSOCPBK2",221,0)
 S XMSUB=XMSUB_" UNBILLED COPAYS FOR PRESCRIPTION REFILLS"
"RTN","PSOCPBK2",222,0)
 S PSOTEXT(1)=""
"RTN","PSOCPBK2",223,0)
 S PSOTEXT(2)="Started "_PSOSTART
"RTN","PSOCPBK2",224,0)
 S PSOTEXT(3)=""
"RTN","PSOCPBK2",225,0)
 S PSOTEXT(4)="   "_MSG
"RTN","PSOCPBK2",226,0)
 S XMTEXT="PSOTEXT(" N DIFROM D ^XMD K XMDUZ,XMTEXT,XMSUB
"RTN","PSOCPBK2",227,0)
 Q
"RTN","PSOCPBK4")
0^5^B92981238
"RTN","PSOCPBK4",1,0)
PSOCPBK4 ;BIR/GN-Copay Back Bill for Automated-release refills cont. ;10/12/05 9:55am
"RTN","PSOCPBK4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**217,303,460**;DEC 1997;Build 32
"RTN","PSOCPBK4",3,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSOCPBK4",4,0)
 ;External reference to ^IBAM(354.7 supported by DBIA 3877
"RTN","PSOCPBK4",5,0)
 ;External reference to $$PTCOV^IBCNSU3 supported by DBIA 4115
"RTN","PSOCPBK4",6,0)
 ;External reference to ^IBARX supported by DBIA 125
"RTN","PSOCPBK4",7,0)
 ;External reference to $$CPTIER^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSOCPBK4",8,0)
 ;External reference to ^DPT supported by DBIA #10035
"RTN","PSOCPBK4",9,0)
 ;External reference to IBARXEU supported by DBIA #10147
"RTN","PSOCPBK4",10,0)
 ;
"RTN","PSOCPBK4",11,0)
 Q
"RTN","PSOCPBK4",12,0)
 ;
"RTN","PSOCPBK4",13,0)
ADDBILL ;add to billable ^XTMP if ok, quit if not
"RTN","PSOCPBK4",14,0)
 S PSOTRF=PSOTRF+1
"RTN","PSOCPBK4",15,0)
 S PSOREL=$P($G(^PSRX(RXP,1,YY,0)),"^",18)
"RTN","PSOCPBK4",16,0)
 Q:'PSOREL                                   ;not released
"RTN","PSOCPBK4",17,0)
 Q:'YY                                       ;orig fill
"RTN","PSOCPBK4",18,0)
 Q:+$$RXST^IBARXEU(PSODFN,$P(PSOREL,"."))    ;Exempt on Rel dte
"RTN","PSOCPBK4",19,0)
 ;check refill
"RTN","PSOCPBK4",20,0)
 Q:$P($G(^PSRX(RXP,1,YY,"IB")),"^",1)'=""    ;already billed
"RTN","PSOCPBK4",21,0)
 Q:$P($G(^PSRX(RXP,1,YY,"IB")),"^",2)'=""    ;exceeded ann. cap
"RTN","PSOCPBK4",22,0)
 ;
"RTN","PSOCPBK4",23,0)
 ;look for Activity log entry per refill # with the below text
"RTN","PSOCPBK4",24,0)
 S FOUND=0
"RTN","PSOCPBK4",25,0)
 F XX=999:0 S XX=$O(^PSRX(RXP,"A",XX),-1) Q:'XX  D  Q:FOUND
"RTN","PSOCPBK4",26,0)
 .Q:$P(^PSRX(RXP,"A",XX,0),"^",4)'=YY
"RTN","PSOCPBK4",27,0)
 .Q:^PSRX(RXP,"A",XX,0)'["External Interface Dispensing is Complete"
"RTN","PSOCPBK4",28,0)
 .S FOUND=1
"RTN","PSOCPBK4",29,0)
 Q:'FOUND
"RTN","PSOCPBK4",30,0)
 ;
"RTN","PSOCPBK4",31,0)
 S ^XTMP(NAMSP,PSODFN,RXP,YY)=$P(PSOREL,".")  ;add to XTMP to be bill
"RTN","PSOCPBK4",32,0)
 Q
"RTN","PSOCPBK4",33,0)
 ;
"RTN","PSOCPBK4",34,0)
XTYPE ;
"RTN","PSOCPBK4",35,0)
 N Y,VADM,I,J,X,SAVY,DFN
"RTN","PSOCPBK4",36,0)
 S DFN=PSODFN D DEM^VADPT I +$G(VADM(6)) S PSOSCMX="" Q  ; DECEASED
"RTN","PSOCPBK4",37,0)
 S (X,PSOSCMX,SAVY)=""
"RTN","PSOCPBK4",38,0)
 S J=0 F  S J=$O(^PS(59,J)) Q:'J  I +$G(^(J,"IB")) S X=+^("IB") Q
"RTN","PSOCPBK4",39,0)
 I 'X Q
"RTN","PSOCPBK4",40,0)
 S X=X_"^"_PSODFN D XTYPE^IBARX
"RTN","PSOCPBK4",41,0)
 I $G(Y)'=1 Q
"RTN","PSOCPBK4",42,0)
 S J="" F  S J=$O(Y(J)) Q:'J  S I="" F  S SAVY=I,I=$O(Y(J,I)) Q:I=""  S:I>0 PSOSCMX=I
"RTN","PSOCPBK4",43,0)
 I PSOSCMX="",SAVY=0 Q  ; INCOME EXEMPT OR SERVICE-CONNECTED
"RTN","PSOCPBK4",44,0)
 I PSOSCMX=2 Q  ; NEED TO ASK SC QUESTION
"RTN","PSOCPBK4",45,0)
 Q
"RTN","PSOCPBK4",46,0)
 ;
"RTN","PSOCPBK4",47,0)
TOTAL ;
"RTN","PSOCPBK4",48,0)
 N COUNT,COUNTED
"RTN","PSOCPBK4",49,0)
 I '$D(PSOVETS) S PSOVETS=0
"RTN","PSOCPBK4",50,0)
 N I,J
"RTN","PSOCPBK4",51,0)
 F I=1:1:3 S (PSOCNT("YR2004",I),PSOCNT("YR2005",I))=0
"RTN","PSOCPBK4",52,0)
 S PSODFN=0 F  S PSODFN=$O(^XTMP(NAMSP,PSODFN)) Q:'PSODFN  D
"RTN","PSOCPBK4",53,0)
 .S COUNTED=0
"RTN","PSOCPBK4",54,0)
 .F J="YR2004","YR2005" F I=1:1:3 S COUNT=$G(^XTMP(NAMSP,PSODFN,J,I)) I COUNT>0 S:'$G(COUNTED) COUNTED=1,PSOVETS=PSOVETS+1 S PSOCNT(J,I)=PSOCNT(J,I)+COUNT
"RTN","PSOCPBK4",55,0)
 F I=1:1:3 S PSOCNT=PSOCNT+PSOCNT("YR2004",I)+PSOCNT("YR2005",I)
"RTN","PSOCPBK4",56,0)
 Q
"RTN","PSOCPBK4",57,0)
 ;
"RTN","PSOCPBK4",58,0)
BILLIT ;
"RTN","PSOCPBK4",59,0)
 ; IF NO IB NUMBER FOR THIS FILL, SET UP VARIABLES AND TALLY
"RTN","PSOCPBK4",60,0)
 N PSOCAP,PSODIV,PSODV,PSOFILL,PSOLOG,PSOOUT,PSOPAR,PSOPATID,PSOSITE
"RTN","PSOCPBK4",61,0)
 N PSOSITE7,PSOSQ,PSOTOT,PSOYEAR,PSOYR,SSN,SAVCPUN,SAVREF
"RTN","PSOCPBK4",62,0)
 S PSODFN=0
"RTN","PSOCPBK4",63,0)
 F CC=1:1 S PSODFN=$O(^XTMP(NAMSP,PSODFN)) Q:'PSODFN  D  Q:STOP
"RTN","PSOCPBK4",64,0)
 .I CC#100=0,$D(^XTMP(NAMSP,0,"STOP")) D  Q
"RTN","PSOCPBK4",65,0)
 ..S $P(^XTMP(NAMSP,0,"LAST"),"^",1,2)="STOP^"_$$NOW^XLFDT,STOP=1
"RTN","PSOCPBK4",66,0)
 .S (PSOCAP(304),PSOCAP(305))=0 ; INITIAL ANNUAL CAP FOR 2004 & 2005
"RTN","PSOCPBK4",67,0)
 .F RXP=0:0 S RXP=$O(^XTMP(NAMSP,PSODFN,RXP)) Q:'RXP  D
"RTN","PSOCPBK4",68,0)
 ..;calc number of 30-day units eligible to bill
"RTN","PSOCPBK4",69,0)
 ..S (SAVCPUN,PSOCPUN)=($P(^PSRX(RXP,0),"^",8)+29)\30
"RTN","PSOCPBK4",70,0)
 ..F YY=0:0 S YY=$O(^XTMP(NAMSP,PSODFN,RXP,YY)) Q:YY=""  D
"RTN","PSOCPBK4",71,0)
 ...S (SAVREF,PSOREF)=YY
"RTN","PSOCPBK4",72,0)
 ...S PSOREL=$G(^XTMP(NAMSP,PSODFN,RXP,YY))
"RTN","PSOCPBK4",73,0)
 ...I PSOCAP($E(PSOREL,1,3)) Q  ; MET ANNUAL CAP FOR 2004 OR 2005
"RTN","PSOCPBK4",74,0)
 ...I $P($G(^PSRX(RXP,1,YY,"IB")),"^",1)="" D  ; REFILL LEVEL
"RTN","PSOCPBK4",75,0)
 ....D SITE
"RTN","PSOCPBK4",76,0)
 ....D CP^PSOCP                                     ;call back billing
"RTN","PSOCPBK4",77,0)
 ....S PSOCPUN=SAVCPUN,PSOREF=SAVREF
"RTN","PSOCPBK4",78,0)
 ....I $P($G(^PSRX(RXP,1,YY,"IB")),"^",1) D ACCUM   ;Do if was billed?
"RTN","PSOCPBK4",79,0)
 ....D CP I +$G(PSOREF) D ACCUM
"RTN","PSOCPBK4",80,0)
 Q
"RTN","PSOCPBK4",81,0)
 ;
"RTN","PSOCPBK4",82,0)
CP ; Entry point to Check if COPAY  -   Requires RXP,PSOSITE7
"RTN","PSOCPBK4",83,0)
 I '$D(PSOPAR) D ^PSOLSET G CP
"RTN","PSOCPBK4",84,0)
 K PSOCP
"RTN","PSOCPBK4",85,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2) ; Set COPAY dfn PTR TO PATIENT
"RTN","PSOCPBK4",86,0)
 S PSOCP=$P($G(^PSRX(RXP,"IB")),"^") ; IB action type
"RTN","PSOCPBK4",87,0)
 S PSOSAVE=$S(PSOCP:1,1:"") ; save current copay status
"RTN","PSOCPBK4",88,0)
 ;         Set x=service^dfn^actiontype^user duz
"RTN","PSOCPBK4",89,0)
 I +$G(PSOSITE7)'>0 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCPBK4",90,0)
 S X=PSOSITE7_"^"_PSOCPN_"^"_PSOCP_"^"_$P(^PSRX(RXP,0),"^",16)
"RTN","PSOCPBK4",91,0)
 ;
"RTN","PSOCPBK4",92,0)
RX ;         Determine Original or Refill for RX
"RTN","PSOCPBK4",93,0)
 N PSOIB
"RTN","PSOCPBK4",94,0)
 S PSOIB=0
"RTN","PSOCPBK4",95,0)
 S PSOREF=0
"RTN","PSOCPBK4",96,0)
 ;set refill number if this is a refill
"RTN","PSOCPBK4",97,0)
 I $G(^PSRX(RXP,1,+$G(YY),0))]"" S PSOREF=YY
"RTN","PSOCPBK4",98,0)
 ;
"RTN","PSOCPBK4",99,0)
 ;Orig fill -check if bill # already exists
"RTN","PSOCPBK4",100,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",2)>0 D CHKIB^PSOCP1
"RTN","PSOCPBK4",101,0)
 I PSOIB D QUIT Q
"RTN","PSOCPBK4",102,0)
 ;already attempted to bill, but exceeded Anuual Cap
"RTN","PSOCPBK4",103,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",4)>0 D QUIT Q
"RTN","PSOCPBK4",104,0)
 ;
"RTN","PSOCPBK4",105,0)
 ;Refill -check if bill # already exists
"RTN","PSOCPBK4",106,0)
 I PSOREF,+$G(^PSRX(RXP,1,PSOREF,"IB")) D CHKIB^PSOCP1
"RTN","PSOCPBK4",107,0)
 I PSOIB D QUIT Q
"RTN","PSOCPBK4",108,0)
 ;already attempted to bill, but exceeded Anuual Cap
"RTN","PSOCPBK4",109,0)
 I PSOREF,+$P($G(^PSRX(RXP,1,PSOREF,"IB")),"^",2) G QUIT
"RTN","PSOCPBK4",110,0)
 ;
"RTN","PSOCPBK4",111,0)
 ;set temporary variable to copay and then look for exceptions
"RTN","PSOCPBK4",112,0)
 S PSOCHG=1
"RTN","PSOCPBK4",113,0)
 D COPAYREL
"RTN","PSOCPBK4",114,0)
 I 'PSOCHG D QUIT Q           ;not billable
"RTN","PSOCPBK4",115,0)
 I PSOCHG=2,'PSOCP D QUIT
"RTN","PSOCPBK4",116,0)
 Q
"RTN","PSOCPBK4",117,0)
QUIT ;
"RTN","PSOCPBK4",118,0)
 K Y,PSOCP1,PSOREF,PSOCPUN,PSOCP2,PSOCPN,X,PSOCHG,PSOSAVE,PREA,PSORSN,PSOCOMM,PSOOLD,PSONW,PSODA
"RTN","PSOCPBK4",119,0)
 Q
"RTN","PSOCPBK4",120,0)
 ;
"RTN","PSOCPBK4",121,0)
COPAYREL ; Recheck copay status at release
"RTN","PSOCPBK4",122,0)
 ;
"RTN","PSOCPBK4",123,0)
 ; check Rx patient status
"RTN","PSOCPBK4",124,0)
 I $P(^PSRX(RXP,0),"^",3)'="",$P($G(^PS(53,$P(^PSRX(RXP,0),"^",3),0)),"^",7)=1 S PSOCHG=0 Q
"RTN","PSOCPBK4",125,0)
 ; see if drug is nutritional supplement, investigational or supply
"RTN","PSOCPBK4",126,0)
 N DRG,DRGTYP,PSOEXMPT
"RTN","PSOCPBK4",127,0)
 S DRG=+$P(^PSRX(RXP,0),"^",6),DRGTYP=$P($G(^PSDRUG(DRG,0)),"^",3)
"RTN","PSOCPBK4",128,0)
 I DRGTYP["I"!(DRGTYP["S")!(DRGTYP["N") S PSOCHG=0,PSOEXMPT=1 Q
"RTN","PSOCPBK4",129,0)
 K PSOTG,CHKXTYPE
"RTN","PSOCPBK4",130,0)
 I +$G(^PSRX(RXP,"IBQ")) D XTYPE1^PSOCP1
"RTN","PSOCPBK4",131,0)
 I $G(^PSRX(RXP,"IBQ"))["1" S PSOCHG=0 Q
"RTN","PSOCPBK4",132,0)
 ;***** begin - for regression test - sites must not use this as it will adversely affect billing results - only used by SQA
"RTN","PSOCPBK4",133,0)
 ; The following is required for testing different effective dates.  If date is less than 02/27/17 bills old way.  Otherwise bills new way.
"RTN","PSOCPBK4",134,0)
 ;S ^XTMP("PSOTIEREFTST",0)="3201231^3170227^FOR SQA TESTING ONLY" - Defined for SQA testing only.   Delete this XTMP when regression complete
"RTN","PSOCPBK4",135,0)
 D NOW^%DTC N PSOTIERE
"RTN","PSOCPBK4",136,0)
 S PSOTIERE=1  ;use copay tiers - new
"RTN","PSOCPBK4",137,0)
 I $P(%,".")<3170227 S PSOTIERE=0  ;legacy billing - old
"RTN","PSOCPBK4",138,0)
 I $G(^XTMP("PSOTIEREFTST",0)) S PSOTIERE=1  ;for SQA testing only - bill with copay tiers - new
"RTN","PSOCPBK4",139,0)
 ;***** end for regression test
"RTN","PSOCPBK4",140,0)
 G COPAYRE1:'PSOTIERE
"RTN","PSOCPBK4",141,0)
 ; check copay tier. Tier zero does not have copay charges
"RTN","PSOCPBK4",142,0)
 N CPDATE,X,PSOCPT D NOW^%DTC S CPDATE=X S PSOCPT=$$CPTIER^PSNAPIS("",CPDATE,DRG) K CPDATE,X
"RTN","PSOCPBK4",143,0)
 I $P(PSOCPT,"^")=0 S PSOCHG=0 Q   ;Tier zero do not send to IB for copay charge
"RTN","PSOCPBK4",144,0)
 I '$G(PSOEXMPT),$P(PSOCPT,"^")'=0 S PSOCOMM="",PSOOLD="No Copay",PSONW="Copay" S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA
"RTN","PSOCPBK4",145,0)
COPAYRE1 ;
"RTN","PSOCPBK4",146,0)
 Q
"RTN","PSOCPBK4",147,0)
 ;
"RTN","PSOCPBK4",148,0)
ACCUM ; ACCUMULATE TOTALS AND SEE IF PATIENT MET ANNUAL CAP
"RTN","PSOCPBK4",149,0)
 S PSOYR=$E(PSOREL,1,3) I PSOYR="" Q
"RTN","PSOCPBK4",150,0)
 S PSOYEAR=$S(PSOYR="304":"YR2004",PSOYR="305":"YR2005",1:"")
"RTN","PSOCPBK4",151,0)
 Q:PSOYEAR=""
"RTN","PSOCPBK4",152,0)
 ;
"RTN","PSOCPBK4",153,0)
 ;get Xtmp billing amt which would be IBAM tot + any previous refills
"RTN","PSOCPBK4",154,0)
 S PSOTOT=$G(^XTMP(NAMSP,PSODFN,PSOYEAR))
"RTN","PSOCPBK4",155,0)
 ;
"RTN","PSOCPBK4",156,0)
 ;if none yet then init to the IBAM total for the year
"RTN","PSOCPBK4",157,0)
 I 'PSOTOT D
"RTN","PSOCPBK4",158,0)
 .F PSOSQ=0:0 S PSOSQ=$O(^IBAM(354.7,PSODFN,1,PSOSQ)) Q:'PSOSQ  D
"RTN","PSOCPBK4",159,0)
 ..S PSOLOG=$G(^IBAM(354.7,PSODFN,1,PSOSQ,0))
"RTN","PSOCPBK4",160,0)
 ..I $E(PSOLOG,1,3)=PSOYR S PSOTOT=PSOTOT+$P(PSOLOG,"^",2)
"RTN","PSOCPBK4",161,0)
 ;
"RTN","PSOCPBK4",162,0)
 ;update Xtmp tot nodes with current refill amounts
"RTN","PSOCPBK4",163,0)
 S ^XTMP(NAMSP,PSODFN,PSOYEAR)=PSOTOT+(PSOCPUN*7)
"RTN","PSOCPBK4",164,0)
 S ^XTMP(NAMSP,PSODFN,PSOYEAR,PSOCPUN)=$G(^XTMP(NAMSP,PSODFN,PSOYEAR,PSOCPUN))+1
"RTN","PSOCPBK4",165,0)
 ;
"RTN","PSOCPBK4",166,0)
 ;indicate this refill may be billable or (was billed, if BILLING run)
"RTN","PSOCPBK4",167,0)
 ;by adding to Xtmp "BILLED"
"RTN","PSOCPBK4",168,0)
 N PSONAM
"RTN","PSOCPBK4",169,0)
 S PSONAM=$P($G(^DPT(PSODFN,0)),"^"),PSONAM=$P(PSONAM,",")
"RTN","PSOCPBK4",170,0)
 S PSONAM=$E(PSONAM,1,6)
"RTN","PSOCPBK4",171,0)
 S ^XTMP(NAMSP,"BILLED",PSONAM,PSODFN,RXP,PSOREF)=PSOREL
"RTN","PSOCPBK4",172,0)
 Q
"RTN","PSOCPBK4",173,0)
 ;
"RTN","PSOCPBK4",174,0)
SITE ; SET UP VARIABLES NEEDED BY BILLING
"RTN","PSOCPBK4",175,0)
 S PSOSITE=$S(YY=0:$P(^PSRX(RXP,2),"^",9),1:$P($G(^PSRX(RXP,1,YY,0)),"^",9))
"RTN","PSOCPBK4",176,0)
 Q:PSOSITE=""
"RTN","PSOCPBK4",177,0)
 S PSOPAR=$G(^PS(59,PSOSITE,1))
"RTN","PSOCPBK4",178,0)
 S PSOSITE7=$P($G(^PS(59,PSOSITE,"IB")),"^")
"RTN","PSOCPBK4",179,0)
 Q
"RTN","PSOCPBK4",180,0)
 ;
"RTN","PSOCPBK4",181,0)
RPT ;
"RTN","PSOCPBK4",182,0)
 N JOBN,NAMSP,ZTDESC,ZTRTN
"RTN","PSOCPBK4",183,0)
 S NAMSP=$$NAMSP^PSOCPBK3
"RTN","PSOCPBK4",184,0)
 S JOBN=$S(^XTMP(NAMSP,0)["BACK":"Back Billing",1:"Tally")
"RTN","PSOCPBK4",185,0)
 L +^XTMP(NAMSP):0 I '$T D  Q
"RTN","PSOCPBK4",186,0)
 .W !,JOBN_" job for PSO*7*217 is still running.  Halting..."
"RTN","PSOCPBK4",187,0)
 L -^XTMP(NAMSP)
"RTN","PSOCPBK4",188,0)
 W !!,"This report shows the patient name and prescription information for refills"
"RTN","PSOCPBK4",189,0)
 W:JOBN["Tally" !,"that were identified as billable by the patch PSO*7*217"
"RTN","PSOCPBK4",190,0)
 W:JOBN["Back" !,"that were back-billed by the patch PSO*7*217"
"RTN","PSOCPBK4",191,0)
 W !!,"You may queue the report to print, if you wish.",!
"RTN","PSOCPBK4",192,0)
 ;
"RTN","PSOCPBK4",193,0)
DVC K %ZIS,POP,IOP S %ZIS="QM" D ^%ZIS I $G(POP) W !!,"Nothing queued to print.",! G DONE
"RTN","PSOCPBK4",194,0)
QUEUE I $D(IO("Q")) S ZTRTN="START^PSOCPBK4",ZTDESC=JOBN_" copay report" D ^%ZTLOAD K %ZSI W !,"Report queued to print.",! G DONE
"RTN","PSOCPBK4",195,0)
START ;
"RTN","PSOCPBK4",196,0)
 U IO
"RTN","PSOCPBK4",197,0)
 N BLDT,RXO,NAMSP,PSOFILL,PSODFN,PSONAM,PSOOUT,PSODV,RXP,SSN,PSODIV
"RTN","PSOCPBK4",198,0)
 N JOBN,PSOPATID
"RTN","PSOCPBK4",199,0)
 S NAMSP=$$NAMSP^PSOCPBK3
"RTN","PSOCPBK4",200,0)
 S JOBN=$S(^XTMP(NAMSP,0)["BACK":"Back Billing",1:"Tally")
"RTN","PSOCPBK4",201,0)
 S PSOOUT=0,PSODV=$S($E(IOST)="C":"C",1:"P")
"RTN","PSOCPBK4",202,0)
 S PSOPGCT=0,PSOPGLN=IOSL-7,PSOPGCT=1
"RTN","PSOCPBK4",203,0)
 S BLDT=$P($G(^XTMP(NAMSP,0,"LAST")),"^",2)
"RTN","PSOCPBK4",204,0)
 D TITLE
"RTN","PSOCPBK4",205,0)
 S PSONAM=""
"RTN","PSOCPBK4",206,0)
 F  S PSONAM=$O(^XTMP(NAMSP,"BILLED",PSONAM)) Q:PSONAM=""  D
"RTN","PSOCPBK4",207,0)
 .S PSODFN=""
"RTN","PSOCPBK4",208,0)
 .F  S PSODFN=$O(^XTMP(NAMSP,"BILLED",PSONAM,PSODFN)) Q:PSODFN=""  D
"RTN","PSOCPBK4",209,0)
 ..S RXP=""
"RTN","PSOCPBK4",210,0)
 ..F  S RXP=$O(^XTMP(NAMSP,"BILLED",PSONAM,PSODFN,RXP)) Q:RXP=""  D
"RTN","PSOCPBK4",211,0)
 ...S PSOFILL=""
"RTN","PSOCPBK4",212,0)
 ...F  S PSOFILL=$O(^XTMP(NAMSP,"BILLED",PSONAM,PSODFN,RXP,PSOFILL)) Q:PSOFILL=""  D
"RTN","PSOCPBK4",213,0)
 ....N XX,RXO,Y,PSONAME
"RTN","PSOCPBK4",214,0)
 ....S XX=$G(^XTMP(NAMSP,"BILLED",PSONAM,PSODFN,RXP,PSOFILL)) D
"RTN","PSOCPBK4",215,0)
 .....D FULL Q:$G(PSOOUT)  S PSONAME=$P($G(^DPT(PSODFN,0)),"^")
"RTN","PSOCPBK4",216,0)
 .....W !,$E(PSONAME,1,14)
"RTN","PSOCPBK4",217,0)
 .....D PRTSSN
"RTN","PSOCPBK4",218,0)
 .....S RXO=$P($G(^PSRX(RXP,0)),"^")
"RTN","PSOCPBK4",219,0)
 .....W ?42," ",RXO," (",PSOFILL,")"
"RTN","PSOCPBK4",220,0)
 .....S Y=XX I Y>0 X ^DD("DD")
"RTN","PSOCPBK4",221,0)
 .....W ?55," ",Y
"RTN","PSOCPBK4",222,0)
 .....W ?69,$S($$PTCOV^IBCNSU3(PSODFN,XX,"PHARMACY"):"YES",1:" NO")
"RTN","PSOCPBK4",223,0)
 .....W ?75,$S($$PTCOV^IBCNSU3(PSODFN,BLDT,"PHARMACY"):"YES",1:" NO")
"RTN","PSOCPBK4",224,0)
 G END
"RTN","PSOCPBK4",225,0)
 ;
"RTN","PSOCPBK4",226,0)
FULL ;
"RTN","PSOCPBK4",227,0)
 I ($Y+7)>IOSL&('$G(PSOOUT)) D TITLE
"RTN","PSOCPBK4",228,0)
 Q
"RTN","PSOCPBK4",229,0)
 ;
"RTN","PSOCPBK4",230,0)
TITLE ;
"RTN","PSOCPBK4",231,0)
 I $G(PSODV)="C",$G(PSOPGCT)'=1 W ! K DIR S DIR(0)="E" D ^DIR K DIR I 'Y S PSOOUT=1 Q
"RTN","PSOCPBK4",232,0)
 ;
"RTN","PSOCPBK4",233,0)
 W @IOF D
"RTN","PSOCPBK4",234,0)
 . W !,"Patch PSO*7*217 -COPAY PRESCRIPTION REFILLS "_JOBN
"RTN","PSOCPBK4",235,0)
 S Y=DT X ^DD("DD") W !,"Date printed: ",Y,?70,"Page: ",PSOPGCT,!
"RTN","PSOCPBK4",236,0)
 F MJT=1:1:79 W "="
"RTN","PSOCPBK4",237,0)
 W !,?69,"INS ON DTE"
"RTN","PSOCPBK4",238,0)
 W !,"PATIENT NAME     (SSN)       DIV",?43,"RX# (FILL)",?55,"RELEASE DATE",?69,"REL   BILL"
"RTN","PSOCPBK4",239,0)
 W !,"--------------  -------  ----------------",?42,"------------"
"RTN","PSOCPBK4",240,0)
 W ?55,"------------",?69,"---- -----"
"RTN","PSOCPBK4",241,0)
 S PSOPGCT=PSOPGCT+1
"RTN","PSOCPBK4",242,0)
 Q
"RTN","PSOCPBK4",243,0)
END ;
"RTN","PSOCPBK4",244,0)
 I '$G(PSOOUT),$G(PSODV)="C" W !!,"** End of Report **" K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSOCPBK4",245,0)
 I $G(PSODV)="C" W !
"RTN","PSOCPBK4",246,0)
 E  W @IOF
"RTN","PSOCPBK4",247,0)
DONE ;
"RTN","PSOCPBK4",248,0)
 K MJT,PSOPGCT,PSOPGLN,Y,DIR,X,IOP,POP,IO("Q"),DIRUT,DUOUT,DTOUT
"RTN","PSOCPBK4",249,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSOCPBK4",250,0)
 Q
"RTN","PSOCPBK4",251,0)
 ;
"RTN","PSOCPBK4",252,0)
PRTSSN ;
"RTN","PSOCPBK4",253,0)
 S SSN=$P(^DPT(PSODFN,0),"^",9),SSN=$E(SSN,$L(SSN)-3,$L(SSN))
"RTN","PSOCPBK4",254,0)
 S PSOPATID=$E(PSONAM,1)_SSN
"RTN","PSOCPBK4",255,0)
 S PSODIV=$P($G(^PSRX(RXP,2)),"^",9)
"RTN","PSOCPBK4",256,0)
 S:PSODIV'="" PSODIV=$P($G(^PS(59,PSODIV,0)),"^",1)
"RTN","PSOCPBK4",257,0)
 W ?16,"("_PSOPATID_")"_"  "_PSODIV
"RTN","PSOCPBK4",258,0)
 Q
"RTN","PSOCPBK4",259,0)
 ;
"RTN","PSOCPBK4",260,0)
ETIME(SECTIME) ;convert seconds to day:hr:min:sec
"RTN","PSOCPBK4",261,0)
 N DAY,HR,MIN,SEC,ETIM
"RTN","PSOCPBK4",262,0)
 S (DAY,HR,MIN,SEC)=""
"RTN","PSOCPBK4",263,0)
 I SECTIME>86400 S DAY=SECTIME\86400,SECTIME=SECTIME#86400
"RTN","PSOCPBK4",264,0)
 I SECTIME>3600 S HR=SECTIME\3600,SECTIME=SECTIME#3600
"RTN","PSOCPBK4",265,0)
 I SECTIME>60 S MIN=SECTIME\60,SECTIME=SECTIME#60
"RTN","PSOCPBK4",266,0)
 S SEC=SECTIME
"RTN","PSOCPBK4",267,0)
 S ETIM=""
"RTN","PSOCPBK4",268,0)
 S:$L(HR)=1 HR=0_HR S:$L(MIN)=1 MIN=0_MIN S:$L(SEC)=1 SEC=0_SEC
"RTN","PSOCPBK4",269,0)
 S:DAY ETIM=DAY_" Day " S:HR ETIM=ETIM_HR_":" S:MIN ETIM=ETIM_MIN
"RTN","PSOCPBK4",270,0)
 S ETIM=ETIM_":"_SEC
"RTN","PSOCPBK4",271,0)
 Q ETIM
"RTN","PSOCPIBC")
0^12^B49680609
"RTN","PSOCPIBC",1,0)
PSOCPIBC ;BHAM ISC/EJW - PHARMACY CO-PAY APPLICATION UTILITIES FOR IB ;01/15/02
"RTN","PSOCPIBC",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**93,303,460**;DEC 1997;Build 32
"RTN","PSOCPIBC",3,0)
 ;External references to IBARX is supported by DBIA 125
"RTN","PSOCPIBC",4,0)
 ;External reference to PSDRUG( is supported by DBIA 221
"RTN","PSOCPIBC",5,0)
 ;External reference to $$CPTIER^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSOCPIBC",6,0)
 ;This routine is called by PSOCPIBF to attempt to bill for released CMOP copays.
"RTN","PSOCPIBC",7,0)
 ;For Rx fills with a release date prior to 01/01/02 this routine is called instead of CP^PSOCP.  This routine does not check the additional
"RTN","PSOCPIBC",8,0)
 ;exemption questions and does not send a MailMan message if an exemption question has not been answered.
"RTN","PSOCPIBC",9,0)
CP ; Entry point to Check if COPAY  -   Requires RXP,PSOSITE7
"RTN","PSOCPIBC",10,0)
 I '$D(PSOPAR) D ^PSOLSET G CP
"RTN","PSOCPIBC",11,0)
 K PSOCP
"RTN","PSOCPIBC",12,0)
 ; Q:'$D(^PSRX(RXP,"IB"))  Q:"12"'[$E(+^PSRX(RXP,"IB"))
"RTN","PSOCPIBC",13,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2) ; Set COPAY dfn PTR TO PATIENT
"RTN","PSOCPIBC",14,0)
 S PSOCP=$P($G(^PSRX(RXP,"IB")),"^") ; IB action type
"RTN","PSOCPIBC",15,0)
 S PSOSAVE=$S(PSOCP:1,1:"") ; save current copay status
"RTN","PSOCPIBC",16,0)
 ;         Set x=service^dfn^actiontype^user duz
"RTN","PSOCPIBC",17,0)
 I +$G(PSOSITE7)'>0 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCPIBC",18,0)
 S X=PSOSITE7_"^"_PSOCPN_"^"_PSOCP_"^"_$P(^PSRX(RXP,0),"^",16)
"RTN","PSOCPIBC",19,0)
 ;
"RTN","PSOCPIBC",20,0)
RX ;         Determine Original or Refill for RX
"RTN","PSOCPIBC",21,0)
 S PSOREF=0
"RTN","PSOCPIBC",22,0)
 I $G(^PSRX(RXP,1,+$G(YY),0))]"" S PSOREF=YY
"RTN","PSOCPIBC",23,0)
 ;         Check if bill # already exists for this RX or Refill
"RTN","PSOCPIBC",24,0)
 I 'PSOREF,+$P($G(^PSRX(RXP,"IB")),"^",2)>0 G QUIT
"RTN","PSOCPIBC",25,0)
 I PSOREF,+$G(^PSRX(RXP,1,PSOREF,"IB")) G QUIT
"RTN","PSOCPIBC",26,0)
 S PSOCHG=1 ; set temporary variable to copay and then look for exceptions
"RTN","PSOCPIBC",27,0)
 N MAILMSG
"RTN","PSOCPIBC",28,0)
 D COPAYREL
"RTN","PSOCPIBC",29,0)
 I 'PSOCHG D  G QUIT
"RTN","PSOCPIBC",30,0)
 . I PSOSAVE S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA S $P(^PSRX(RXP,"IB"),"^",1)=""
"RTN","PSOCPIBC",31,0)
 I PSOCHG=2 D  I 'PSOCP G QUIT ; IF 'SC' QUESTION APPLIES, BUT HAS NOT BEEN ANSWERED, SEND MAIL MSG AND KEEP COPAY STATUS AS IT WAS
"RTN","PSOCPIBC",32,0)
 . ; D MAIL2^PSOCPE ; SEND MAIL TO PHARMACIST, PROVIDER, AND HOLDERS OF THE PSO COPAY KEY
"RTN","PSOCPIBC",33,0)
 I PSOCHG=1,PSOSAVE="" D  I PSOREF S PSOCOMM="",PSOOLD="No Copay",PSONW="Copay" S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA
"RTN","PSOCPIBC",34,0)
 . I '$D(^PSRX(RXP,"IB")),'PSOREF S $P(^PSRX(RXP,"IB"),"^",1)=1 Q
"RTN","PSOCPIBC",35,0)
 . S $P(^PSRX(RXP,"IB"),"^",1)=1
"RTN","PSOCPIBC",36,0)
 . S PSOCP=1,$P(X,"^",3)=PSOCP
"RTN","PSOCPIBC",37,0)
 I PSOCHG'=2 I $G(MAILMSG) ; D MAIL2^PSOCPE ; SEND MAIL TO PHARMACIST, PROVIDER, AND HOLDERS OF PSO COPAY KEY
"RTN","PSOCPIBC",38,0)
 ;         Units for COPAY
"RTN","PSOCPIBC",39,0)
 S PSOCPUN=$P(($P(^PSRX(RXP,0),"^",8)+29)/30,".",1)
"RTN","PSOCPIBC",40,0)
 ;         Build softlink for x(n)=softlink^units
"RTN","PSOCPIBC",41,0)
 S X(1)="52:"_RXP S:PSOREF>0 X(1)=X(1)_";1:"_PSOREF S X(1)=X(1)_"^"_PSOCPUN
"RTN","PSOCPIBC",42,0)
 ;         Set correct user duz if refill
"RTN","PSOCPIBC",43,0)
 I PSOREF S:+$P(^PSRX(RXP,1,PSOREF,0),"^",7)>0 $P(X,"^",4)=$P(^PSRX(RXP,1,PSOREF,0),"^",7)
"RTN","PSOCPIBC",44,0)
 ;
"RTN","PSOCPIBC",45,0)
IBNEW ;          Load ^TMP global for IB call
"RTN","PSOCPIBC",46,0)
 Q:$G(RXP)'>0
"RTN","PSOCPIBC",47,0)
 N D0
"RTN","PSOCPIBC",48,0)
 G QUIT:'$D(X)
"RTN","PSOCPIBC",49,0)
 S XTMP=X,XTMP(1)=X(1)
"RTN","PSOCPIBC",50,0)
 ;
"RTN","PSOCPIBC",51,0)
 ;         Requires x=service^dfn^action type^user duz
"RTN","PSOCPIBC",52,0)
 ;               x(n)=softlink^units 
"RTN","PSOCPIBC",53,0)
 I $P(X,"^",3)="" S $P(X,"^",3)=$P(^PSRX(RXP,"IB"),"^",1)
"RTN","PSOCPIBC",54,0)
 D NEW^IBARX
"RTN","PSOCPIBC",55,0)
 ;         Returns y=1^total charges for this group or Y=-1^error code
"RTN","PSOCPIBC",56,0)
 ;              y(n)=IB number^charge for this Rx^AR bill #^Cap met^Partial or Full charge^Copay Exempt^Number from file 354.71
"RTN","PSOCPIBC",57,0)
 ;                   Cap met ('1' - If patient has met cap amount or 
"RTN","PSOCPIBC",58,0)
 ;                     reached cap with this charge or '0' if not)
"RTN","PSOCPIBC",59,0)
 ;                   Partial or Full ('P' for partial billing, 'F' for
"RTN","PSOCPIBC",60,0)
 ;                     full billing, null for no billing)
"RTN","PSOCPIBC",61,0)
 ;                   Copay Exempt - ('1' for exempt, '0' for non-exempt,
"RTN","PSOCPIBC",62,0)
 ;                     '-1' for copay off (manila))
"RTN","PSOCPIBC",63,0)
 ;                   ('1' - If patient has met cap amount or reach cap with this charge
"RTN","PSOCPIBC",64,0)
 ;                  Entry from file 354.71 will only be saved for fills that met the annual cap and could not be fully billed
"RTN","PSOCPIBC",65,0)
 ;
"RTN","PSOCPIBC",66,0)
 G QUIT:+Y=-1
"RTN","PSOCPIBC",67,0)
 S XTMP=XTMP_"^"_Y,XTMP(1)=XTMP(1)_"^"_Y(1)
"RTN","PSOCPIBC",68,0)
 ;
"RTN","PSOCPIBC",69,0)
 ; see if exempt or copay cap was met for this fill
"RTN","PSOCPIBC",70,0)
 I $P(Y(1),"^",6) D  G QUIT
"RTN","PSOCPIBC",71,0)
 . S PREA="R",PSOOLD="Copay",PSONW="No Copay"
"RTN","PSOCPIBC",72,0)
 . S PSOCOMM="RX COPAY INCOME EXEMPTION" S PSODA=RXP D ACTLOG^PSOCPA
"RTN","PSOCPIBC",73,0)
 . S $P(^PSRX(RXP,"IB"),"^",1)=""
"RTN","PSOCPIBC",74,0)
 I $P(Y(1),"^",4) D
"RTN","PSOCPIBC",75,0)
 . S PSOCOMM=$S($P(Y(1),"^",5)="F":" FULL BILLING FOR THIS FILL",$P(Y(1),"^",5)="P":" PARTIAL BILLING FOR THIS FILL ",1:" NO BILLING FOR THIS FILL")
"RTN","PSOCPIBC",76,0)
 . S PREA="A"
"RTN","PSOCPIBC",77,0)
 . S PSODA=RXP D ACTLOG^PSOCPA
"RTN","PSOCPIBC",78,0)
 . I $P(Y(1),"^",5)'="F" D
"RTN","PSOCPIBC",79,0)
 . . I PSOREF S $P(^PSRX(RXP,1,PSOREF,"IB"),"^",2)=$P(Y(1),"^",7) Q
"RTN","PSOCPIBC",80,0)
 . . S $P(^PSRX(RXP,"IB"),"^",4)=$P(Y(1),"^",7)
"RTN","PSOCPIBC",81,0)
 I $P(Y(1),"^",1)="" G QUIT
"RTN","PSOCPIBC",82,0)
 ;
"RTN","PSOCPIBC",83,0)
FILE ;         File IB number in ^PSRX
"RTN","PSOCPIBC",84,0)
 S PSOCP2=0
"RTN","PSOCPIBC",85,0)
 S PSOCP2=+$P(XTMP(1),":",3)
"RTN","PSOCPIBC",86,0)
 S:PSOCP2>0 ^PSRX(RXP,1,PSOCP2,"IB")=$P(XTMP(1),U,3) ;  Filing in refill node
"RTN","PSOCPIBC",87,0)
 I PSOCP2>0,'$D(^PSRX(RXP,"IB")) S ^PSRX(RXP,"IB")="1^^" ;  If refill "IB" exists, need "IB" entry on original fill node
"RTN","PSOCPIBC",88,0)
 S:PSOCP2=0 $P(^PSRX(RXP,"IB"),"^",2)=$P(XTMP(1),U,3) ;Filing in original fill (zero node)
"RTN","PSOCPIBC",89,0)
QUIT ;
"RTN","PSOCPIBC",90,0)
 K Y,PSOCP1,PSOCP2,QQ,PSOCPN,X,X2,XTMP,PSOCPUN,PSOREF,PSOCHG,PSOSAVE,PSOCOMM,PSOOLD,PSONW,PREA,PSORSN
"RTN","PSOCPIBC",91,0)
 Q
"RTN","PSOCPIBC",92,0)
EN D ^PSOLSET
"RTN","PSOCPIBC",93,0)
EN1 S DIR(0)="NO",DIR("A")="Enter PRESCRIPTION number" D ^DIR K DIR G:$D(DIRUT) EXIT S RXP=X I +$G(^PSRX(RXP,0))'>0!+$P($G(^PSRX(RXP,"IB")),"^",0)>0 W !,?10,"RE-CHECK PRESCRIPTION NUMBER AND RE-ENTER " G EN1
"RTN","PSOCPIBC",94,0)
 S PSOSITE7=$P(^PS(59,PSOSITE,"IB"),"^")
"RTN","PSOCPIBC",95,0)
 S PSODFN=$P(^PSRX(RXP,0),"^",2)
"RTN","PSOCPIBC",96,0)
 D CP G EN1
"RTN","PSOCPIBC",97,0)
EXIT K RXP D FINAL^PSOLSET Q
"RTN","PSOCPIBC",98,0)
 ;
"RTN","PSOCPIBC",99,0)
COPAYREL ; Recheck copay status at release
"RTN","PSOCPIBC",100,0)
 ;
"RTN","PSOCPIBC",101,0)
 ; check Rx patient status
"RTN","PSOCPIBC",102,0)
 I $P(^PSRX(RXP,0),"^",3)'="",$P($G(^PS(53,$P(^PSRX(RXP,0),"^",3),0)),"^",7)=1 S PSOCHG=0,PSOCOMM="Rx Patient Status Change",PSOOLD="Copay",PSONW="No Copay" Q
"RTN","PSOCPIBC",103,0)
 ; see if drug is nutritional supplement, investigational, or supply
"RTN","PSOCPIBC",104,0)
 N DRG,DRGTYP,PSOEXMPT
"RTN","PSOCPIBC",105,0)
 S DRG=+$P(^PSRX(RXP,0),"^",6),DRGTYP=$P($G(^PSDRUG(DRG,0)),"^",3)
"RTN","PSOCPIBC",106,0)
 I DRGTYP["I" S PSOCOMM="Investigational Drug",PSOCHG=0,PSOOLD="Copay",PSONW="No Copay",(PSOEXMPT,PSOCHG)=0 Q
"RTN","PSOCPIBC",107,0)
 I DRGTYP["S" S PSOCOMM="Supply Item",PSOCHG=0,PSOOLD="Copay",PSONW="No Copay",(PSOEXMPT,PSOCHG)=0 Q
"RTN","PSOCPIBC",108,0)
 I DRGTYP["N" S PSOCOMM="Nutritional Supplement",PSOCHG=0,PSOOLD="Copay",PSONW="No Copay",(PSOEXMPT,PSOCHG)=0 Q
"RTN","PSOCPIBC",109,0)
 K PSOTG
"RTN","PSOCPIBC",110,0)
 N EXMT
"RTN","PSOCPIBC",111,0)
 D XTYPE
"RTN","PSOCPIBC",112,0)
 F EXMT="SC" I $D(PSOTG(EXMT)) D  I 'PSOCHG Q
"RTN","PSOCPIBC",113,0)
 . I PSOTG(EXMT)=1 S PSOCHG=0 S PSOCOMM="Service Connected"
"RTN","PSOCPIBC",114,0)
 ;
"RTN","PSOCPIBC",115,0)
 ;***** begin - for regression test - sites must not use this as it will adversely affect billing results - only used by SQA
"RTN","PSOCPIBC",116,0)
 ; The following is required for testing different effective dates.  If date is less than 02/27/17 bills old way.  Otherwise bills new way.
"RTN","PSOCPIBC",117,0)
 ;S ^XTMP("PSOTIEREFTST",0)="3201231^3170227^FOR SQA TESTING ONLY" - Defined for SQA testing only.   Delete this XTMP when regression complete
"RTN","PSOCPIBC",118,0)
 D NOW^%DTC N PSOTIERE
"RTN","PSOCPIBC",119,0)
 S PSOTIERE=1  ;use copay tiers - new
"RTN","PSOCPIBC",120,0)
 I $P(%,".")<3170227 S PSOTIERE=0  ;legacy billing - old
"RTN","PSOCPIBC",121,0)
 I $G(^XTMP("PSOTIEREFTST",0)) S PSOTIERE=1  ;for SQA testing only - bill with copay tiers - new
"RTN","PSOCPIBC",122,0)
 ;***** end for regression test
"RTN","PSOCPIBC",123,0)
 G COPAYRE1:'PSOTIERE
"RTN","PSOCPIBC",124,0)
 ; check copay tier. Tier zero does not have copay charges
"RTN","PSOCPIBC",125,0)
 N CPDATE,X,PSOCPT D NOW^%DTC S CPDATE=X S PSOCPT=$$CPTIER^PSNAPIS("",CPDATE,DRG) K CPDATE,X
"RTN","PSOCPIBC",126,0)
 I $P(PSOCPT,"^")=0 S PSOCOMM="Copay Tier 0",PSODA=RXP,PREA="R",PSOCHG=0,PSOOLD="Copay",PSONW="No Copay" D ACTLOG^PSOCPA Q  ;Tier zero do not send to IB for copay charge
"RTN","PSOCPIBC",127,0)
 I '$G(PSOEXMPT),$P(PSOCPT,"^")=""!(PSOCPT>0) S PSOCOMM="Copay Tier "_+PSOCPT,PSOOLD="No Copay",PSONW="Copay",PSOCHG=3 S PSODA=RXP,PREA="R" D ACTLOG^PSOCPA  ;For null values, IB defaults to tier 2. PSOCHG=3 means activity log already set.
"RTN","PSOCPIBC",128,0)
COPAYRE1 ;
"RTN","PSOCPIBC",129,0)
 Q:PSOCHG
"RTN","PSOCPIBC",130,0)
 I 'PSOCHG S PSOOLD="Copay",PSONW="No Copay" Q
"RTN","PSOCPIBC",131,0)
 ; If any of the applicable exemption questions have never been answered, generate a mail message with all of the questions
"RTN","PSOCPIBC",132,0)
 S EXMT="",MAILMSG=0 F  S EXMT=$O(PSOTG(EXMT)) Q:EXMT=""  I PSOTG(EXMT)="" S MAILMSG=1 Q
"RTN","PSOCPIBC",133,0)
 I MAILMSG,$D(PSOTG("SC")) I $G(PSOTG("SC"))="" S PSOCHG=2 ; 'SC' question not answered, don't reset copay status to 'copay'
"RTN","PSOCPIBC",134,0)
 Q
"RTN","PSOCPIBC",135,0)
 ;
"RTN","PSOCPIBC",136,0)
XTYPE ;
"RTN","PSOCPIBC",137,0)
 N PSOCIBQ,PSOSCMX,Y,I,J,X,SAVY
"RTN","PSOCPIBC",138,0)
 S (X,PSOSCMX,SAVY)=""
"RTN","PSOCPIBC",139,0)
 S PSOCIBQ=$G(^PSRX(RXP,"IBQ"))
"RTN","PSOCPIBC",140,0)
 I $P(PSOCIBQ,"^",1)'="" S PSOTG("SC")=$P(PSOCIBQ,"^",1)
"RTN","PSOCPIBC",141,0)
 I $D(PSOTG("SC")),$P(PSOCIBQ,"^",1)="" S PSOTG("SC")="" ; USE "CURRENT" SETTING AS ANSWER TO SERVICE CONNECTED QUESTION IF IT APPLIES
"RTN","PSOCPIBC",142,0)
 S J=0 F  S J=$O(^PS(59,J)) Q:'J  I +$G(^(J,"IB")) S X=+^("IB") Q
"RTN","PSOCPIBC",143,0)
 I 'X Q
"RTN","PSOCPIBC",144,0)
 S X=X_"^"_PSOCPN D XTYPE^IBARX
"RTN","PSOCPIBC",145,0)
 I $G(Y)'=1 Q
"RTN","PSOCPIBC",146,0)
 S J="" F  S J=$O(Y(J)) Q:'J  S I="" F  S SAVY=I,I=$O(Y(J,I)) Q:I=""  S:I>0 PSOSCMX=I
"RTN","PSOCPIBC",147,0)
 I PSOSCMX="",SAVY=0 S PSOCHG=0 S PSOCOMM="Exempt from copayment" Q  ; INCOME EXEMPT OR SERVICE-CONNECTED
"RTN","PSOCPIBC",148,0)
 I PSOSCMX=2,'$D(PSOTG("SC")) S PSOTG("SC")=$S(($G(RXP)&($P($G(^PSRX(+$G(RXP),"IB")),"^")))!($P(PSOCIBQ,"^")=0):0,$P(PSOCIBQ,"^")=1:1,1:"") Q
"RTN","PSOCPIBC",149,0)
 Q
"RTN","PSOCPIBC",150,0)
 ;
"RTN","PSOHLNE3")
0^6^B69950706
"RTN","PSOHLNE3",1,0)
PSOHLNE3 ;BIR/LE - Process Edit Information from CPRS ;02/27/04
"RTN","PSOHLNE3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**143,239,201,225,303,460**;DEC 1997;Build 32
"RTN","PSOHLNE3",3,0)
 ;External reference to ^OR(100 private DBIA 2219
"RTN","PSOHLNE3",4,0)
 ;External reference to $$CPTIER^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSOHLNE3",5,0)
 ;External reference to IBARX supported by DBIA #125
"RTN","PSOHLNE3",6,0)
 ;
"RTN","PSOHLNE3",7,0)
 ;This API is used to update the prescription file when ICD-9 diagnosis and SC/EI's are updated as a result of an e-sig in CPRS.  
"RTN","PSOHLNE3",8,0)
 ;
"RTN","PSOHLNE3",9,0)
EN(DFN,ORITEM,ORIEN,ORDX,ORSCEI) ;ENTRY POINT
"RTN","PSOHLNE3",10,0)
 ;     Used to import edit information from CPRS 
"RTN","PSOHLNE3",11,0)
 ;Where Input:
"RTN","PSOHLNE3",12,0)
 ;DFN = Patient IEN
"RTN","PSOHLNE3",13,0)
 ;ORITEM = Package reference number from file 100
"RTN","PSOHLNE3",14,0)
 ;ORIEN = ien from file 100
"RTN","PSOHLNE3",15,0)
 ;ORDX(1)= (pointer to file 80) up to 8 accepted and first is primary ICD
"RTN","PSOHLNE3",16,0)
 ;ORDX(2)= (pointer to file 80)
"RTN","PSOHLNE3",17,0)
 ;ORSCEI=  seven pieces - where 1=yes, 0=no, null or ? =not asked
"RTN","PSOHLNE3",18,0)
 ;  ORSCEI=AO^IR^SC^EC^MST^HNC^CV^SHAD
"RTN","PSOHLNE3",19,0)
 N %,DX,DX2,DX3,RXN,PSOSCP,PSOX,ORDPROV,PSOSCP2,DA,RET,PSOANSQ,PSORX,PTSTATUS,ARRAY,PSOOI,ORITEM2,ORID,OICHK,PSORENW
"RTN","PSOHLNE3",20,0)
 N PSODCPY,PSONEW,PSOOIBQ,PSOFLD,PSODCZ,PSOSTAZ,PREA,PSOPIBQ,PSOIBQC,PSOSCA,PSOPICD,PSODGUP,PSOOICD,PSOPFS,TYPE,PSONW,PSOOLD,PSODA,PSOCOMM
"RTN","PSOHLNE3",21,0)
 N PSODD,PSOSI,X,PSOSITE,PSOBILL,PSOCPAY,PSOCICD
"RTN","PSOHLNE3",22,0)
 S:'$D(ORIEN) ORIEN="" S:'$D(ORSCEI) ORSCEI="" S:'$D(ORITEM) ORITEM=""
"RTN","PSOHLNE3",23,0)
 ;
"RTN","PSOHLNE3",24,0)
 ;validate prescription IEN with DFN, ord item, and placer#
"RTN","PSOHLNE3",25,0)
 S RET=1,PSODCZ=",12,14,15,"
"RTN","PSOHLNE3",26,0)
 S RXN=ORITEM I '$D(^PSRX(RXN)) S RET="0^1" Q RET  ;invalid RX ien
"RTN","PSOHLNE3",27,0)
 I $D(^PSRX(RXN,"STA")) S PSOSTAZ=^PSRX(RXN,"STA")
"RTN","PSOHLNE3",28,0)
 ; get prescription file patient ien, drug, and placer order #
"RTN","PSOHLNE3",29,0)
 D GETS^DIQ(52,RXN_",","2;6;39.3","I","ARRAY")
"RTN","PSOHLNE3",30,0)
 I '$D(ARRAY(52,RXN_",",2,"I")) S RET="0^3" Q RET  ;quit if you don't have a patient ien
"RTN","PSOHLNE3",31,0)
 I ARRAY(52,RXN_",",2,"I")'=DFN S RET="0^3" Q RET  ;quit if patient dfn is different
"RTN","PSOHLNE3",32,0)
 I '$D(ARRAY(52,RXN_",",39.3,"I")) S ARRAY(52,RXN_",",39.3,"I")=""  ;if don't have it; treat is as null
"RTN","PSOHLNE3",33,0)
 I ARRAY(52,RXN_",",39.3,"I")'="" I ARRAY(52,RXN_",",39.3,"I")'=ORIEN S RET="0^5" Q RET  ;placer # is different
"RTN","PSOHLNE3",34,0)
 I ARRAY(52,RXN_",",39.3,"I")="" S OICHK=0 D CHKOI I OICHK S RET="0^4" Q RET  ;quit if placer # is null and orderable item is different or null.
"RTN","PSOHLNE3",35,0)
 ;end of validation process
"RTN","PSOHLNE3",36,0)
 ;
"RTN","PSOHLNE3",37,0)
 S PSODD=$$GET1^DIQ(52,RXN_",",6,"I") S:($P($G(^PSDRUG(PSODD,0)),"^",3)["S")!($P($G(^(0)),"^",3)["I")!($P($G(^(0)),"^",3)["N") PSOSI=1
"RTN","PSOHLNE3",38,0)
 S PSOPIBQ=$G(^PSRX(RXN,"IBQ")),PSOPICD=$P($G(^PSRX(RXN,"ICD",1,0)),"^",2,8)
"RTN","PSOHLNE3",39,0)
 S PSOX("IRXN")=RXN,PSORENW("IRXN")=RXN
"RTN","PSOHLNE3",40,0)
 S (PSONEW("PATIENT STATUS"),PTSTATUS)=$$GET1^DIQ(52,RXN_",","3","I")
"RTN","PSOHLNE3",41,0)
 I '$D(PTSTATUS) S (PSONEW("PATIENT STATUS"),PTSTATUS)=""
"RTN","PSOHLNE3",42,0)
 ;if patient status is null, treat same as PSONEW2, PSORN52, PSONEWG, AND PSONEWF.  If piece 7 of ^PS(53 doesn't equal 1, it's not exempt from copay.
"RTN","PSOHLNE3",43,0)
 I ORSCEI["?" S ORSCEI=$TR(ORSCEI,"?","")
"RTN","PSOHLNE3",44,0)
 D SCP^PSORN52D
"RTN","PSOHLNE3",45,0)
 S PSOANSQ(PSOX("IRXN"),"VEH")=$P(ORSCEI,U,1)
"RTN","PSOHLNE3",46,0)
 S PSOANSQ(PSOX("IRXN"),"RAD")=$P(ORSCEI,U,2)
"RTN","PSOHLNE3",47,0)
 I PSOSCP<50&($P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)'=1) S PSOANSQ(PSOX("IRXN"),"SC")=$P(ORSCEI,U,3),PSOANSQ("SC")=$P(ORSCEI,U,3)
"RTN","PSOHLNE3",48,0)
 I PSOSCP>49!($P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)=1) S PSOANSQ(PSOX("IRXN"),"SC>50")=$P(ORSCEI,U,3),PSOANSQ("SC>50")=$P(ORSCEI,U,3)
"RTN","PSOHLNE3",49,0)
 I PSOSCP=""&('$D(PSOANSQ("SC")))&($D(^PSRX(RXN,"ICD",1))) S PSOANSQ("SC")=$P(^PSRX(RXN,"ICD",1,0),"^",4),PSOANSQ(PSOX("IRXN"),"SC")=PSOANSQ("SC")  ;for SC with no percentage defined/ legacy
"RTN","PSOHLNE3",50,0)
 S PSOANSQ(PSOX("IRXN"),"PGW")=$P(ORSCEI,U,4)
"RTN","PSOHLNE3",51,0)
 S PSOANSQ(PSOX("IRXN"),"MST")=$P(ORSCEI,U,5)
"RTN","PSOHLNE3",52,0)
 S PSOANSQ(PSOX("IRXN"),"HNC")=$P(ORSCEI,U,6)
"RTN","PSOHLNE3",53,0)
 S PSOANSQ(PSOX("IRXN"),"CV")=$P(ORSCEI,U,7)
"RTN","PSOHLNE3",54,0)
 S PSOANSQ(PSOX("IRXN"),"SHAD")=$P(ORSCEI,U,8)
"RTN","PSOHLNE3",55,0)
 D:'$$PATCH^XPDUTL("OR*3.0*243") SHAD^PSORN52D
"RTN","PSOHLNE3",56,0)
 S DX="",DX2=0 F  S DX=$O(ORDX(DX)) Q:DX=""  S DX2=DX2+1,PSORX("ICD",DX2)=ORDX(DX)  ;Multi signed Rx's come in consecutively and the diagnosis subscript doesn't start with 1 for each Rx
"RTN","PSOHLNE3",57,0)
 S PSOSCP2=1  ;used in PSORN52D
"RTN","PSOHLNE3",58,0)
 ;
"RTN","PSOHLNE3",59,0)
ICD2 ;Check to see if SC/EI changed during CPRS sign order
"RTN","PSOHLNE3",60,0)
 D GETS^DIQ(52,PSOX("IRXN")_",","52311*","I","PSOOICD")
"RTN","PSOHLNE3",61,0)
 S PSODCPY=0,PSOFLD=""
"RTN","PSOHLNE3",62,0)
 F TYPE="VEH","RAD","SC>50","PGW","MST","HNC","CV","SHAD" Q:PSODCPY  F PSOFLD=1:1:8 D  Q:PSODCPY
"RTN","PSOHLNE3",63,0)
 . I TYPE="VEH"&(PSOFLD=1) D CHOC
"RTN","PSOHLNE3",64,0)
 . I TYPE="RAD"&(PSOFLD=2) D CHOC
"RTN","PSOHLNE3",65,0)
 . I TYPE="SC>50"&(PSOFLD=3)&($D(PSOANSQ(PSOX("IRXN"),TYPE))) D CHOC
"RTN","PSOHLNE3",66,0)
 . I TYPE="PGW"&(PSOFLD=4) D CHOC
"RTN","PSOHLNE3",67,0)
 . I TYPE="MST"&(PSOFLD=5) D CHOC
"RTN","PSOHLNE3",68,0)
 . I TYPE="HNC"&(PSOFLD=6) D CHOC
"RTN","PSOHLNE3",69,0)
 . I TYPE="CV"&(PSOFLD=7) D CHOC
"RTN","PSOHLNE3",70,0)
 . I TYPE="SHAD"&(PSOFLD=8) D:$$PATCH^XPDUTL("OR*3.0*243") CHOC
"RTN","PSOHLNE3",71,0)
 I $D(PSOANSQ("SC")) S PSOFLD=3 S:PSOANSQ("SC")'=PSOOICD(52.052311,1_","_PSOX("IRXN")_",",PSOFLD,"I") PSODCPY=1,PSOFLD=""
"RTN","PSOHLNE3",72,0)
 ; IF NO SC/EI DIFFERENCES, CHECK FOR ICD CHANGES.  If there were SC/EI difference, don't need to check ICD because they are sent anyway when copay update is done.
"RTN","PSOHLNE3",73,0)
 I '$G(PSODCPY) D
"RTN","PSOHLNE3",74,0)
 .I '$D(PSORX("ICD"))&($G(PSOOICD(52.052311,1_","_RXN_",",.01,"I"))) S PSODGUP=1 Q  ;if no ICD's passed and ICD's defined in 52, CPRS overrides OP
"RTN","PSOHLNE3",75,0)
 .S (DX3,DX2,DX)="" F  S DX=$O(PSOOICD(52.052311,DX)) Q:DX=""  S DX2=+DX  ;get last entry for file 52
"RTN","PSOHLNE3",76,0)
 .S DX="" F  S DX=$O(PSORX("ICD",DX)) Q:DX=""  S DX3=DX D  ;get last entry for new ICD's from CPRS
"RTN","PSOHLNE3",77,0)
 .. I $G(PSOOICD(52.052311,DX_","_PSOX("IRXN")_",",.01,"I"))'=PSORX("ICD",DX) S PSODGUP=1  ;if ICD'S changed or more new ICD's than old ones.
"RTN","PSOHLNE3",78,0)
 .I DX2>DX3 S PSODGUP=1  ;if more old ICD's than new ones
"RTN","PSOHLNE3",79,0)
 Q:'$G(PSODCPY)&('$G(PSODGUP)) 1
"RTN","PSOHLNE3",80,0)
 D FILE2^PSORN52D  ;file SC/EI/ICD'S into Rx file
"RTN","PSOHLNE3",81,0)
 ;S PSOCIDC=$P($G(^PSRX(RXN,"ICD",1,0)),"^",2,8)
"RTN","PSOHLNE3",82,0)
 ;only do copay if SC/EI changed and SC is less than 50%.
"RTN","PSOHLNE3",83,0)
 I PSODCZ[(","_$G(PSOSTAZ)_",") S RET="0^6" Q RET  ;discontinue's no copay changes allowed.
"RTN","PSOHLNE3",84,0)
 ;
"RTN","PSOHLNE3",85,0)
 ;Get last fill number
"RTN","PSOHLNE3",86,0)
 N PSOLFIL S PSOLFIL=$$LF^PSOPFSU1(RXN)
"RTN","PSOHLNE3",87,0)
 S PSOPFS=$P($S('PSOLFIL:$G(^PSRX(RXN,"PFS")),1:$G(^PSRX(RXN,1,PSOLFIL,"PFS"))),"^",1,2)
"RTN","PSOHLNE3",88,0)
 ; No-copay to copay updates
"RTN","PSOHLNE3",89,0)
 S PSOIBQC=$G(^PSRX(RXN,"IBQ")),PSOCICD=$P($G(^PSRX(RXN,"ICD",1,0)),"^",2,8)
"RTN","PSOHLNE3",90,0)
 D CPAY
"RTN","PSOHLNE3",91,0)
 ; must check IBQ node in case it's a pre-CIDC rx/copay, ICD node for exempt/supply items, and for diagnosis updates for NSC Rx's
"RTN","PSOHLNE3",92,0)
 I (PSOPIBQ[1&(PSOIBQC'[1))!(PSOIBQC=""&(PSOPICD[1&(PSOCICD'[1)))!($G(PSODGUP)) D  Q RET  ;don't do no copay to copay bills, but update status
"RTN","PSOHLNE3",93,0)
 . D ALOG
"RTN","PSOHLNE3",94,0)
 . I (PSOSCP<50)&($G(PSODCPY)) D
"RTN","PSOHLNE3",95,0)
 .. I $P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)'=1&('$G(PSOSI)) D
"RTN","PSOHLNE3",96,0)
 ... S:+$G(PSOCPAY)<1&($D(^PSRX(RXN,"IB"))) $P(^PSRX(RXN,"IB"),"^",1)=""
"RTN","PSOHLNE3",97,0)
 ... I +$G(PSOCPAY)>0 S $P(^PSRX(RXN,"IB"),"^",1)=+$G(PSOCPAY),PSOOLD="No Copay",PSONW="Copay",PREA="R",PSODA=RXN D:'$G(PSOSI) ACTLOG^PSOCPA
"RTN","PSOHLNE3",98,0)
 . I +$G(PSOPFS)>0&('$P($G(PSOPFS),"^",2)) K PSOPFS Q   ;don't send unreleased charge msg
"RTN","PSOHLNE3",99,0)
 . I +$G(PSOPFS)<1 K PSOPFS  ;invalid PFSS ACCT REF/ SEND TO IB
"RTN","PSOHLNE3",100,0)
 . I +$G(PSOPFS)>0 S PSOPFS="1^"_PSOPFS
"RTN","PSOHLNE3",101,0)
 . ;
"RTN","PSOHLNE3",102,0)
 . I +$G(PSOPFS) D CHRG^PSOPFSU1(RXN,PSOLFIL,"CG",PSOPFS) ;always send to external bill sys
"RTN","PSOHLNE3",103,0)
 ;
"RTN","PSOHLNE3",104,0)
 ; Copay to no-copay updates
"RTN","PSOHLNE3",105,0)
 I $G(PSODCPY) D COPAY^PSOHLNE4
"RTN","PSOHLNE3",106,0)
 ;ICD UPDATE ONLY FOR COPAYS
"RTN","PSOHLNE3",107,0)
 I ('$G(PSODCPY)&($G(PSODGUP)))&($P($G(PSOPFS),"^",2)) D CHRG^PSOPFSU1(RXN,PSOLFIL,"CG",PSOPFS) ;DIAGNOSIS UPDATE ONLY
"RTN","PSOHLNE3",108,0)
 I ($G(PSODCPY)!($G(PSODGUP))) D ALOG
"RTN","PSOHLNE3",109,0)
 Q RET
"RTN","PSOHLNE3",110,0)
 ;
"RTN","PSOHLNE3",111,0)
CPAY ;
"RTN","PSOHLNE3",112,0)
 N X,Y,III,ACTYP,BL
"RTN","PSOHLNE3",113,0)
 S PSOSITE=$P(^PSRX(RXN,2),"^",9)
"RTN","PSOHLNE3",114,0)
 S X=$P($G(^PS(59,+PSOSITE,"IB")),"^")_"^"_DFN D XTYPE^IBARX
"RTN","PSOHLNE3",115,0)
 S (ACTYP,BL)="",(PSOBILL,PSOCPAY)=0
"RTN","PSOHLNE3",116,0)
CPAY1 ;
"RTN","PSOHLNE3",117,0)
 N PSOEXMPT
"RTN","PSOHLNE3",118,0)
 S ACTYP=$O(Y(ACTYP)) G:'ACTYP CSKP F III=0:0 S BL=$O(Y(ACTYP,BL)) Q:BL=""  I BL>0 S PSOBILL=BL,PSOCPAY=BL_"^"_Y(ACTYP,BL)
"RTN","PSOHLNE3",119,0)
 G CPAY1
"RTN","PSOHLNE3",120,0)
CSKP ;
"RTN","PSOHLNE3",121,0)
 S:$G(PSOSI) PSOCPAY=0,PSOEXMPT=1  ;Supply item/investigational drug/nutritional supplement
"RTN","PSOHLNE3",122,0)
 S:$P($G(^PS(53,+$G(PTSTATUS),0)),"^",7)=1 PSOCPAY=0  ;Rx Patient Status exempt
"RTN","PSOHLNE3",123,0)
 I PSOIBQC'="" S:PSOIBQC'[1 PSOCPAY=1  ;Yes SC/EI from CPRS
"RTN","PSOHLNE3",124,0)
 I (PSOBILL'>0)!(PSOCPAY=0) S PSOCPAY=0  ;INELIGIBLE
"RTN","PSOHLNE3",125,0)
 ;***** begin - for regression test - sites must not use this as it will adversely affect billing results - only used by SQA
"RTN","PSOHLNE3",126,0)
 ; The following is required for testing different effective dates.  If date is less than 02/27/17 bills old way.  Otherwise bills new way.
"RTN","PSOHLNE3",127,0)
 ;S ^XTMP("PSOTIEREFTST",0)="3201231^3170227^FOR SQA TESTING ONLY" - Defined for SQA testing only.   Delete this XTMP when regression complete
"RTN","PSOHLNE3",128,0)
 D NOW^%DTC N PSOTIERE
"RTN","PSOHLNE3",129,0)
 S PSOTIERE=1  ;use copay tiers - new
"RTN","PSOHLNE3",130,0)
 I $P(%,".")<3170227 S PSOTIERE=0  ;legacy billing - old
"RTN","PSOHLNE3",131,0)
 I $G(^XTMP("PSOTIEREFTST",0)) S PSOTIERE=1  ;for SQA testing only - bill with copay tiers - new
"RTN","PSOHLNE3",132,0)
 ;***** end for regression test
"RTN","PSOHLNE3",133,0)
 G COPAYRE1:'PSOTIERE
"RTN","PSOHLNE3",134,0)
 ; check copay tier. Tier zero does not have copay charges
"RTN","PSOHLNE3",135,0)
 N CPDATE,X,PSOCPT D NOW^%DTC S CPDATE=X S PSOCPT=$$CPTIER^PSNAPIS("",CPDATE,DRG) K CPDATE,X
"RTN","PSOHLNE3",136,0)
 I $P(PSOCPT,"^")=0 S PSOCPAY=0   ;Tier zero do not send to IB for copay charge
"RTN","PSOHLNE3",137,0)
 I '$G(PSOEXMPT),$P(PSOCPT,"^")'=0 S PSOCPAY=1
"RTN","PSOHLNE3",138,0)
COPAYRE1 ;
"RTN","PSOHLNE3",139,0)
 Q
"RTN","PSOHLNE3",140,0)
 ;
"RTN","PSOHLNE3",141,0)
CHOC ;check outpatient classifications
"RTN","PSOHLNE3",142,0)
 S:PSOANSQ(PSOX("IRXN"),TYPE)'=PSOOICD(52.052311,1_","_PSOX("IRXN")_",",PSOFLD,"I") PSODCPY=1
"RTN","PSOHLNE3",143,0)
 Q
"RTN","PSOHLNE3",144,0)
 ;
"RTN","PSOHLNE3",145,0)
ALOG ;set activity log with edit info from cprs
"RTN","PSOHLNE3",146,0)
 N ACNT,SUB,RF,RFCNT
"RTN","PSOHLNE3",147,0)
 S ACNT=0 F SUB=0:0 S SUB=$O(^PSRX(RXN,"A",SUB)) Q:'SUB  S ACNT=SUB
"RTN","PSOHLNE3",148,0)
 S RFCNT=0 F RF=0:0 S RF=$O(^PSRX(RXN,1,RF)) Q:'RF  S RFCNT=RF S:RF>5 RFCNT=RF+1
"RTN","PSOHLNE3",149,0)
 D NOW^%DTC S ACNT=ACNT+1
"RTN","PSOHLNE3",150,0)
 S ^PSRX(RXN,"A",0)="^52.3DA^"_ACNT_"^"_ACNT S ^PSRX(RXN,"A",ACNT,0)=%_"^"_"E"_"^^"_RFCNT_"^Clinical Indicators and SC/EI's were updated from a CPRS e-sig edit at "_$E($P(%,".",2),1,2)_":"_$E($P(%,".",2),3,4)_"."
"RTN","PSOHLNE3",151,0)
 Q
"RTN","PSOHLNE3",152,0)
 ;
"RTN","PSOHLNE3",153,0)
CHKOI ;get and compare orderable items in file #100 and #52; don't process
"RTN","PSOHLNE3",154,0)
 ;  if it's different and the placer # is null.
"RTN","PSOHLNE3",155,0)
 I '$D(ARRAY(52,RXN_",",6,"I")) S OICHK=1 Q
"RTN","PSOHLNE3",156,0)
 D GETS^DIQ(50,ARRAY(52,RXN_",",6,"I")_",","2.1","I","PSOOI")
"RTN","PSOHLNE3",157,0)
 S ORITEM2=$$GET1^DIQ(100.001,"1,"_ORIEN_",",".01","I")
"RTN","PSOHLNE3",158,0)
 S ORID=$$GET1^DIQ(101.43,ORITEM2_",","2","I") S ORID=$P(ORID,";",1)
"RTN","PSOHLNE3",159,0)
 I PSOOI(50,ARRAY(52,RXN_",",6,"I")_",",2.1,"I")'="" I PSOOI(50,ARRAY(52,RXN_",",6,"I")_",",2.1,"I")'=ORID S OICHK=1
"RTN","PSOHLNE3",160,0)
 Q
"RTN","PSOHLNE3",161,0)
TEST(ORIEN) ;manually test an individual order record
"RTN","PSOHLNE3",162,0)
 N I,X,ORSCEIS,ORSCEI,ORDX,EDFLG,ORITEM,DFN,JJ
"RTN","PSOHLNE3",163,0)
 S (JJ,I)=0 F  S I=$O(^OR(100,ORIEN,5.1,I)) Q:I=""!(I'?1N.NN)  S JJ=JJ+1,ORDX(JJ)=$G(^OR(100,ORIEN,5.1,I,0))
"RTN","PSOHLNE3",164,0)
 S ORSCEIS=^OR(100,ORIEN,5.2),ORITEM=$P($G(^OR(100,ORIEN,4)),"^",1)
"RTN","PSOHLNE3",165,0)
 S ORSCEI="" F I=3,4,1,5,2,6,7 S ORSCEI=ORSCEI_"^"_$P(ORSCEIS,"^",I)
"RTN","PSOHLNE3",166,0)
 S:$$PATCH^XPDUTL("OR*3.0*243") ORSCEI=ORSCEI_"^"_$P(ORSCEIS,"^",8)
"RTN","PSOHLNE3",167,0)
 S ORSCEI=$E(ORSCEI,2,99)
"RTN","PSOHLNE3",168,0)
 S RXN=ORITEM,DFN=$P($P(^OR(100,ORIEN,0),"^",2),";",1)
"RTN","PSOHLNE3",169,0)
 D EN^PSOHLNE3(DFN,ORITEM,ORIEN,.ORDX,ORSCEI)
"RTN","PSOHLNE3",170,0)
 Q
"RTN","PSOHLNE3",171,0)
OBXNTE ; Called from PSOHLNEW due to it's routine size.
"RTN","PSOHLNE3",172,0)
 S LL=ZZ+1,PSOBCT=2
"RTN","PSOHLNE3",173,0)
 I $P($G(MSG(LL)),"|")="NTE" D
"RTN","PSOHLNE3",174,0)
 .I $P(MSG(LL),"|",4)'="" S PSOBCT=3,OBXAR(OCOUNT,2)=$P(MSG(LL),"|",4)
"RTN","PSOHLNE3",175,0)
 .F LLL=0:0 S LLL=$O(MSG(LL,LLL)) Q:'LLL  D
"RTN","PSOHLNE3",176,0)
 ..I $P($G(MSG(LL,LLL)),"|",4)'="" S OBXAR(OCOUNT,PSOBCT)=$P(MSG(LL,LLL),"|",4),PSOBCT=PSOBCT+1
"RTN","PSOHLNE3",177,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
IB*2.0*563
"BLD",9443,0)
IB*2.0*563^INTEGRATED BILLING^0^3161019^y
"BLD",9443,4,0)
^9.64PA^354.75^4
"BLD",9443,4,350,0)
350
"BLD",9443,4,350,2,0)
^9.641^350^1
"BLD",9443,4,350,2,350,0)
INTEGRATED BILLING ACTION  (File-top level)
"BLD",9443,4,350,2,350,1,0)
^9.6411^.22^1
"BLD",9443,4,350,2,350,1,.22,0)
COPAYMENT TIER
"BLD",9443,4,350,222)
y^n^p^^^^n^^n
"BLD",9443,4,350,224)

"BLD",9443,4,350.2,0)
350.2
"BLD",9443,4,350.2,2,0)
^9.641^350.2^1
"BLD",9443,4,350.2,2,350.2,0)
IB ACTION CHARGE  (File-top level)
"BLD",9443,4,350.2,2,350.2,1,0)
^9.6411^.07^1
"BLD",9443,4,350.2,2,350.2,1,.07,0)
COPAYMENT TIER
"BLD",9443,4,350.2,222)
y^n^p^^^^n^^n
"BLD",9443,4,350.2,224)

"BLD",9443,4,354.71,0)
354.71
"BLD",9443,4,354.71,2,0)
^9.641^354.71^1
"BLD",9443,4,354.71,2,354.71,0)
IB COPAY TRANSACTIONS  (File-top level)
"BLD",9443,4,354.71,2,354.71,1,0)
^9.6411^.2^1
"BLD",9443,4,354.71,2,354.71,1,.2,0)
COPAYMENT TIER
"BLD",9443,4,354.71,222)
y^n^p^^^^n^^n
"BLD",9443,4,354.71,224)

"BLD",9443,4,354.75,0)
354.75
"BLD",9443,4,354.75,2,0)
^9.641^354.75^1
"BLD",9443,4,354.75,2,354.75,0)
IB COPAY CAPS  (File-top level)
"BLD",9443,4,354.75,2,354.75,1,0)
^9.6411^.02^1
"BLD",9443,4,354.75,2,354.75,1,.02,0)
PRIORITY LEVEL
"BLD",9443,4,354.75,222)
y^n^p^^^^n^^n
"BLD",9443,4,354.75,224)

"BLD",9443,4,"APDD",350,350)

"BLD",9443,4,"APDD",350,350,.22)

"BLD",9443,4,"APDD",350.2,350.2)

"BLD",9443,4,"APDD",350.2,350.2,.07)

"BLD",9443,4,"APDD",354.71,354.71)

"BLD",9443,4,"APDD",354.71,354.71,.2)

"BLD",9443,4,"APDD",354.75,354.75)

"BLD",9443,4,"APDD",354.75,354.75,.02)

"BLD",9443,4,"B",350,350)

"BLD",9443,4,"B",350.2,350.2)

"BLD",9443,4,"B",354.71,354.71)

"BLD",9443,4,"B",354.75,354.75)

"BLD",9443,6.3)
12
"BLD",9443,"ABPKG")
n
"BLD",9443,"INI")
PREINT^IB20P563
"BLD",9443,"INIT")
POSTINT^IB20P563
"BLD",9443,"KRN",0)
^9.67PA^779.2^20
"BLD",9443,"KRN",.4,0)
.4
"BLD",9443,"KRN",.401,0)
.401
"BLD",9443,"KRN",.402,0)
.402
"BLD",9443,"KRN",.403,0)
.403
"BLD",9443,"KRN",.5,0)
.5
"BLD",9443,"KRN",.84,0)
.84
"BLD",9443,"KRN",3.6,0)
3.6
"BLD",9443,"KRN",3.8,0)
3.8
"BLD",9443,"KRN",9.2,0)
9.2
"BLD",9443,"KRN",9.8,0)
9.8
"BLD",9443,"KRN",9.8,"NM",0)
^9.68A^18^18
"BLD",9443,"KRN",9.8,"NM",1,0)
IBARX^^0^B52093772
"BLD",9443,"KRN",9.8,"NM",2,0)
IBARX1^^0^B24612250
"BLD",9443,"KRN",9.8,"NM",3,0)
IBARXMB^^0^B22706384
"BLD",9443,"KRN",9.8,"NM",4,0)
IBARXMN^^0^B34322540
"BLD",9443,"KRN",9.8,"NM",5,0)
IBAUTL^^0^B24050910
"BLD",9443,"KRN",9.8,"NM",6,0)
IBRXUTL1^^0^B5197297
"BLD",9443,"KRN",9.8,"NM",7,0)
IBARXMC^^0^B44624308
"BLD",9443,"KRN",9.8,"NM",8,0)
IBECEA0^^0^B11992930
"BLD",9443,"KRN",9.8,"NM",9,0)
IBECEA2^^0^B19420959
"BLD",9443,"KRN",9.8,"NM",10,0)
IBECEA21^^0^B31240213
"BLD",9443,"KRN",9.8,"NM",11,0)
IBECEA22^^0^B7958331
"BLD",9443,"KRN",9.8,"NM",12,0)
IBECEA3^^0^B70707203
"BLD",9443,"KRN",9.8,"NM",13,0)
IBECEAU2^^0^B28548148
"BLD",9443,"KRN",9.8,"NM",14,0)
IBECEAU3^^0^B7348522
"BLD",9443,"KRN",9.8,"NM",15,0)
IBECEAU4^^0^B16986387
"BLD",9443,"KRN",9.8,"NM",16,0)
IBEBR^^0^B25886623
"BLD",9443,"KRN",9.8,"NM",17,0)
IBEBRH^^0^B3470311
"BLD",9443,"KRN",9.8,"NM",18,0)
IBARXMQ^^0^B16386930
"BLD",9443,"KRN",9.8,"NM","B","IBARX",1)

"BLD",9443,"KRN",9.8,"NM","B","IBARX1",2)

"BLD",9443,"KRN",9.8,"NM","B","IBARXMB",3)

"BLD",9443,"KRN",9.8,"NM","B","IBARXMC",7)

"BLD",9443,"KRN",9.8,"NM","B","IBARXMN",4)

"BLD",9443,"KRN",9.8,"NM","B","IBARXMQ",18)

"BLD",9443,"KRN",9.8,"NM","B","IBAUTL",5)

"BLD",9443,"KRN",9.8,"NM","B","IBEBR",16)

"BLD",9443,"KRN",9.8,"NM","B","IBEBRH",17)

"BLD",9443,"KRN",9.8,"NM","B","IBECEA0",8)

"BLD",9443,"KRN",9.8,"NM","B","IBECEA2",9)

"BLD",9443,"KRN",9.8,"NM","B","IBECEA21",10)

"BLD",9443,"KRN",9.8,"NM","B","IBECEA22",11)

"BLD",9443,"KRN",9.8,"NM","B","IBECEA3",12)

"BLD",9443,"KRN",9.8,"NM","B","IBECEAU2",13)

"BLD",9443,"KRN",9.8,"NM","B","IBECEAU3",14)

"BLD",9443,"KRN",9.8,"NM","B","IBECEAU4",15)

"BLD",9443,"KRN",9.8,"NM","B","IBRXUTL1",6)

"BLD",9443,"KRN",19,0)
19
"BLD",9443,"KRN",19.1,0)
19.1
"BLD",9443,"KRN",101,0)
101
"BLD",9443,"KRN",409.61,0)
409.61
"BLD",9443,"KRN",771,0)
771
"BLD",9443,"KRN",779.2,0)
779.2
"BLD",9443,"KRN",870,0)
870
"BLD",9443,"KRN",8989.51,0)
8989.51
"BLD",9443,"KRN",8989.52,0)
8989.52
"BLD",9443,"KRN",8994,0)
8994
"BLD",9443,"KRN","B",.4,.4)

"BLD",9443,"KRN","B",.401,.401)

"BLD",9443,"KRN","B",.402,.402)

"BLD",9443,"KRN","B",.403,.403)

"BLD",9443,"KRN","B",.5,.5)

"BLD",9443,"KRN","B",.84,.84)

"BLD",9443,"KRN","B",3.6,3.6)

"BLD",9443,"KRN","B",3.8,3.8)

"BLD",9443,"KRN","B",9.2,9.2)

"BLD",9443,"KRN","B",9.8,9.8)

"BLD",9443,"KRN","B",19,19)

"BLD",9443,"KRN","B",19.1,19.1)

"BLD",9443,"KRN","B",101,101)

"BLD",9443,"KRN","B",409.61,409.61)

"BLD",9443,"KRN","B",771,771)

"BLD",9443,"KRN","B",779.2,779.2)

"BLD",9443,"KRN","B",870,870)

"BLD",9443,"KRN","B",8989.51,8989.51)

"BLD",9443,"KRN","B",8989.52,8989.52)

"BLD",9443,"KRN","B",8994,8994)

"BLD",9443,"QUES",0)
^9.62^^
"BLD",9443,"REQB",0)
^9.611^8^8
"BLD",9443,"REQB",1,0)
IB*2.0*247^2
"BLD",9443,"REQB",2,0)
IB*2.0*308^2
"BLD",9443,"REQB",3,0)
IB*2.0*341^2
"BLD",9443,"REQB",4,0)
IB*2.0*454^2
"BLD",9443,"REQB",5,0)
IB*2.0*524^2
"BLD",9443,"REQB",6,0)
IB*2.0*552^2
"BLD",9443,"REQB",7,0)
IB*2.0*199^2
"BLD",9443,"REQB","B","IB*2.0*199",7)

"BLD",9443,"REQB","B","IB*2.0*247",1)

"BLD",9443,"REQB","B","IB*2.0*308",2)

"BLD",9443,"REQB","B","IB*2.0*341",3)

"BLD",9443,"REQB","B","IB*2.0*454",4)

"BLD",9443,"REQB","B","IB*2.0*524",5)

"BLD",9443,"REQB","B","IB*2.0*552",6)

"FIA",350)
INTEGRATED BILLING ACTION
"FIA",350,0)
^IB(
"FIA",350,0,0)
350
"FIA",350,0,1)
y^n^p^^^^n^^n
"FIA",350,0,10)

"FIA",350,0,11)

"FIA",350,0,"RLRO")

"FIA",350,0,"VR")
2.0^IB
"FIA",350,350)
1
"FIA",350,350,.22)

"FIA",350.2)
IB ACTION CHARGE
"FIA",350.2,0)
^IBE(350.2,
"FIA",350.2,0,0)
350.2I
"FIA",350.2,0,1)
y^n^p^^^^n^^n
"FIA",350.2,0,10)

"FIA",350.2,0,11)

"FIA",350.2,0,"RLRO")

"FIA",350.2,0,"VR")
2.0^IB
"FIA",350.2,350.2)
1
"FIA",350.2,350.2,.07)

"FIA",354.71)
IB COPAY TRANSACTIONS
"FIA",354.71,0)
^IBAM(354.71,
"FIA",354.71,0,0)
354.71
"FIA",354.71,0,1)
y^n^p^^^^n^^n
"FIA",354.71,0,10)

"FIA",354.71,0,11)

"FIA",354.71,0,"RLRO")

"FIA",354.71,0,"VR")
2.0^IB
"FIA",354.71,354.71)
1
"FIA",354.71,354.71,.2)

"FIA",354.75)
IB COPAY CAPS
"FIA",354.75,0)
^IBAM(354.75,
"FIA",354.75,0,0)
354.75D
"FIA",354.75,0,1)
y^n^p^^^^n^^n
"FIA",354.75,0,10)

"FIA",354.75,0,11)

"FIA",354.75,0,"RLRO")

"FIA",354.75,0,"VR")
2.0^IB
"FIA",354.75,354.75)
1
"FIA",354.75,354.75,.02)

"INI")
PREINT^IB20P563
"INIT")
POSTINT^IB20P563
"IX",350.2,350.2,"AC",0)
350.2^AC^Cross reference to find entry based on date, type and tier.^R^^R^IR^I^350.2^^^^^S
"IX",350.2,350.2,"AC",.1,0)
^^3^3^3160317^
"IX",350.2,350.2,"AC",.1,1,0)
This cross reference will be used to quickly lookup the appropriate IB 
"IX",350.2,350.2,"AC",.1,2,0)
ACTION CHARGE based on the IB TRANSACTION TYPE (#.03), COPAYMENT TIER 
"IX",350.2,350.2,"AC",.1,3,0)
(#.07) and the negative (-) value of the EFFECTIVE DATE (#.02) fields.
"IX",350.2,350.2,"AC",1)
S ^IBE(350.2,"AC",X(1),X(2),X(3),DA)=""
"IX",350.2,350.2,"AC",2)
K ^IBE(350.2,"AC",X(1),X(2),X(3),DA)
"IX",350.2,350.2,"AC",2.5)
K ^IBE(350.2,"AC")
"IX",350.2,350.2,"AC",11.1,0)
^.114IA^3^3
"IX",350.2,350.2,"AC",11.1,1,0)
1^F^350.2^.03^^1^F
"IX",350.2,350.2,"AC",11.1,2,0)
2^F^350.2^.07^^2^F
"IX",350.2,350.2,"AC",11.1,3,0)
3^F^350.2^.02^^3^F
"IX",350.2,350.2,"AC",11.1,3,2)
S X=-X
"IX",354.75,354.75,"AC",0)
354.75^AC^Index for quick look up.^R^^R^IR^I^354.75^^^^^S
"IX",354.75,354.75,"AC",.1,0)
^^1^1^3010605^
"IX",354.75,354.75,"AC",.1,1,0)
This index will provide quick look up for a cap entry.
"IX",354.75,354.75,"AC",1)
S ^IBAM(354.75,"AC",X(1),X(2),DA)=""
"IX",354.75,354.75,"AC",2)
K ^IBAM(354.75,"AC",X(1),X(2),DA)
"IX",354.75,354.75,"AC",2.5)
K ^IBAM(354.75,"AC")
"IX",354.75,354.75,"AC",11.1,0)
^.114IA^2^2
"IX",354.75,354.75,"AC",11.1,1,0)
1^F^354.75^.02^^1^F
"IX",354.75,354.75,"AC",11.1,2,0)
2^F^354.75^.01^^2^F
"MBREQ")
1
"PKG",192,-1)
1^1
"PKG",192,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",192,20,0)
^9.402P^1^1
"PKG",192,20,1,0)
2^^IBAXDR
"PKG",192,20,1,1)

"PKG",192,20,"B",2,1)

"PKG",192,22,0)
^9.49I^1^1
"PKG",192,22,1,0)
2.0^2940321^2940414
"PKG",192,22,1,"PAH",1,0)
563^3161019^10000000068
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
19
"RTN","IB20P563")
0^^B16845710
"RTN","IB20P563",1,0)
IB20P563 ;OAK/ELZ - IB*2*563 INSTALL ROUTINE ;17-MAR-2016
"RTN","IB20P563",2,0)
 ;;2.0;INTEGRATED BILLING;**563**;21-MAR-94;Build 12
"RTN","IB20P563",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IB20P563",4,0)
 ;
"RTN","IB20P563",5,0)
PREINT ; - pre-install
"RTN","IB20P563",6,0)
 ;
"RTN","IB20P563",7,0)
 ; - delete old unused fields to be replaced by install
"RTN","IB20P563",8,0)
 D BMES^XPDUTL("Removing old unused fields to be replaced")
"RTN","IB20P563",9,0)
 N DIK,DA
"RTN","IB20P563",10,0)
 S DIK="^DD(350,",DA=.22,DA(1)=350
"RTN","IB20P563",11,0)
 D ^DIK
"RTN","IB20P563",12,0)
 D BMES^XPDUTL("Field .22 in file 350 removed.")
"RTN","IB20P563",13,0)
 S DIK="^DD(354.71,",DA=.2,DA(1)=354.71
"RTN","IB20P563",14,0)
 D ^DIK
"RTN","IB20P563",15,0)
 D BMES^XPDUTL("Field .2 in file 354.71 removed.")
"RTN","IB20P563",16,0)
 Q
"RTN","IB20P563",17,0)
 ;
"RTN","IB20P563",18,0)
POSTINT ; - post-install
"RTN","IB20P563",19,0)
 D BMES^XPDUTL("Starting Post-install")
"RTN","IB20P563",20,0)
 D OLDCH
"RTN","IB20P563",21,0)
 D NEWCH
"RTN","IB20P563",22,0)
 D NEWCAP
"RTN","IB20P563",23,0)
 D BMES^XPDUTL("Post-install finished")
"RTN","IB20P563",24,0)
 Q
"RTN","IB20P563",25,0)
 ;
"RTN","IB20P563",26,0)
OLDCH ; - populate old action type charges
"RTN","IB20P563",27,0)
 ;
"RTN","IB20P563",28,0)
 D BMES^XPDUTL("Populating default tier into old prescription IB Action Charges")
"RTN","IB20P563",29,0)
 ;
"RTN","IB20P563",30,0)
 ; this will loop through all old pharmacy action types and populate the default tier of 2
"RTN","IB20P563",31,0)
 N IBX,IBC,IBZ,DIE,DA,DR
"RTN","IB20P563",32,0)
 S (IBC,IBX)=0 F  S IBX=$O(^IBE(350.2,IBX)) Q:'IBX  D
"RTN","IB20P563",33,0)
 . S IBZ=$G(^IBE(350.2,IBX,0)) Q:$E(IBZ,1,2)'="RX"
"RTN","IB20P563",34,0)
 . Q:$P(IBZ,"^",2)>3170101
"RTN","IB20P563",35,0)
 . Q:$P(IBZ,"^",7)
"RTN","IB20P563",36,0)
 . S DIE="^IBE(350.2,",DA=IBX,DR=".07///2" D ^DIE
"RTN","IB20P563",37,0)
 . S IBC=IBC+1
"RTN","IB20P563",38,0)
 D BMES^XPDUTL(IBC_" IB Action Charges updated")
"RTN","IB20P563",39,0)
 Q
"RTN","IB20P563",40,0)
 ;
"RTN","IB20P563",41,0)
NEWCH ; - populate new action type charges
"RTN","IB20P563",42,0)
 ;
"RTN","IB20P563",43,0)
 D BMES^XPDUTL("Adding new prescription IB Action Charges")
"RTN","IB20P563",44,0)
 N IBC,IBI,IBX,DO,IBTIER,IBATYPE,DIC,X,IBCHRG,IBDT,Y
"RTN","IB20P563",45,0)
 S IBC=0
"RTN","IB20P563",46,0)
 F IBI=2:1 S IBX=$P($T(DATA3502+IBI),";;",2) Q:IBX=""  D
"RTN","IB20P563",47,0)
 . S IBDT=$P(IBX,"^",2),IBTIER=$P(IBX,"^",5),IBCHRG=$P(IBX,"^",4)
"RTN","IB20P563",48,0)
 . S IBATYPE=$O(^IBE(350.1,"B",$P(IBX,"^",3),0))
"RTN","IB20P563",49,0)
 . I 'IBATYPE D  Q
"RTN","IB20P563",50,0)
 .. D BMES^XPDUTL("****ERROR: ACTION TYPE (#350.1) "_$P(IBX,"^",3)_" not found!!!")
"RTN","IB20P563",51,0)
 . Q:$D(^IBE(350.2,"AC",IBATYPE,IBTIER,-IBDT))
"RTN","IB20P563",52,0)
 . ;
"RTN","IB20P563",53,0)
 . S X=$P(IBX,"^"),DIC="^IBE(350.2,",DIC(0)=""
"RTN","IB20P563",54,0)
 . S DIC("DR")=".02///^S X=IBDT;.03///^S X=""`""_IBATYPE;.04///^S X=IBCHRG;.07///^S X=IBTIER"
"RTN","IB20P563",55,0)
 . D FILE^DICN
"RTN","IB20P563",56,0)
 . I Y<1 D  Q
"RTN","IB20P563",57,0)
 .. D BMES^XPDUTL("****ERROR: Cannot add charge for Key"_$P(IBX,"^")_" for Tier "_IBTIER_".")
"RTN","IB20P563",58,0)
 . S IBC=IBC+1
"RTN","IB20P563",59,0)
 D BMES^XPDUTL("Added "_IBC_" new prescription IB Action Charges")
"RTN","IB20P563",60,0)
 Q
"RTN","IB20P563",61,0)
 ;
"RTN","IB20P563",62,0)
NEWCAP ; - populate new copayment cap data
"RTN","IB20P563",63,0)
 ; eff date^pg^amount^basis
"RTN","IB20P563",64,0)
 D BMES^XPDUTL("Adding new Copay Cap Amounts")
"RTN","IB20P563",65,0)
 N IBC,IBI,IBX,IBDT,IBPG,IBCAP,IBBAS,X,Y,DIC
"RTN","IB20P563",66,0)
 S IBC=0
"RTN","IB20P563",67,0)
 F IBI=2:1 S IBX=$P($T(DATA3547+IBI),";;",2) Q:IBX=""  D
"RTN","IB20P563",68,0)
 . S IBDT=+IBX,IBPG=$P(IBX,"^",2),IBCAP=$P(IBX,"^",3),IBBAS=$P(IBX,"^",4)
"RTN","IB20P563",69,0)
 . Q:$D(^IBAM(354.75,"AC",IBPG,IBDT))
"RTN","IB20P563",70,0)
 . ;
"RTN","IB20P563",71,0)
 . S X=IBDT,DIC="^IBAM(354.75,",DIC(0)=""
"RTN","IB20P563",72,0)
 . S DIC("DR")=".02///^S X=IBPG;.04///^S X=IBCAP;.06///^S X=IBBAS"
"RTN","IB20P563",73,0)
 . D FILE^DICN
"RTN","IB20P563",74,0)
 . I Y<1 D  Q
"RTN","IB20P563",75,0)
 .. D BMES^XPDUTL("****ERROR: Cannot add cap for PG"_IBPG_" effective "_$$FMTE^XLFDT(IBDT))
"RTN","IB20P563",76,0)
 . S IBC=IBC+1
"RTN","IB20P563",77,0)
 D BMES^XPDUTL("Added "_IBC_" new Copay Caps")
"RTN","IB20P563",78,0)
 Q
"RTN","IB20P563",79,0)
DATA3502 ; - data for the new 350.2 entries
"RTN","IB20P563",80,0)
 ; format key^eff date^action type (350.1)^unit charge^tier
"RTN","IB20P563",81,0)
 ;;RX1^3170227^PSO NSC RX COPAY NEW^5^1
"RTN","IB20P563",82,0)
 ;;RX2^3170227^PSO SC RX COPAY NEW^5^1
"RTN","IB20P563",83,0)
 ;;RX3^3170227^PSO NSC RX COPAY CANCEL^5^1
"RTN","IB20P563",84,0)
 ;;RX4^3170227^PSO NSC RX COPAY UPDATE^5^1
"RTN","IB20P563",85,0)
 ;;RX5^3170227^PSO SC RX COPAY CANCEL^5^1
"RTN","IB20P563",86,0)
 ;;RX6^3170227^PSO SC RX COPAY UPDATE^5^1
"RTN","IB20P563",87,0)
 ;;RX1^3170227^PSO NSC RX COPAY NEW^8^2
"RTN","IB20P563",88,0)
 ;;RX2^3170227^PSO SC RX COPAY NEW^8^2
"RTN","IB20P563",89,0)
 ;;RX3^3170227^PSO NSC RX COPAY CANCEL^8^2
"RTN","IB20P563",90,0)
 ;;RX4^3170227^PSO NSC RX COPAY UPDATE^8^2
"RTN","IB20P563",91,0)
 ;;RX5^3170227^PSO SC RX COPAY CANCEL^8^2
"RTN","IB20P563",92,0)
 ;;RX6^3170227^PSO SC RX COPAY UPDATE^8^2
"RTN","IB20P563",93,0)
 ;;RX1^3170227^PSO NSC RX COPAY NEW^11^3
"RTN","IB20P563",94,0)
 ;;RX2^3170227^PSO SC RX COPAY NEW^11^3
"RTN","IB20P563",95,0)
 ;;RX3^3170227^PSO NSC RX COPAY CANCEL^11^3
"RTN","IB20P563",96,0)
 ;;RX4^3170227^PSO NSC RX COPAY UPDATE^11^3
"RTN","IB20P563",97,0)
 ;;RX5^3170227^PSO SC RX COPAY CANCEL^11^3
"RTN","IB20P563",98,0)
 ;;RX6^3170227^PSO SC RX COPAY UPDATE^11^3
"RTN","IB20P563",99,0)
 ;;
"RTN","IB20P563",100,0)
DATA3547 ; - data for the new 354.75 entries
"RTN","IB20P563",101,0)
 ; format eff date^pg^amount^basis
"RTN","IB20P563",102,0)
 ;;3170101^2^700^C
"RTN","IB20P563",103,0)
 ;;3170101^3^700^C
"RTN","IB20P563",104,0)
 ;;3170101^4^700^C
"RTN","IB20P563",105,0)
 ;;3170101^5^700^C
"RTN","IB20P563",106,0)
 ;;3170101^6^700^C
"RTN","IB20P563",107,0)
 ;;3170101^7^700^C
"RTN","IB20P563",108,0)
 ;;3170101^8^700^C
"RTN","IBARX")
0^1^B52093772
"RTN","IBARX",1,0)
IBARX ;ALB/AAS-INTEGRATED BILLING, PHARMACY COPAY INTERFACE ;14-FEB-91
"RTN","IBARX",2,0)
 ;;2.0;INTEGRATED BILLING;**101,150,156,168,186,237,308,563**;21-MAR-94;Build 12
"RTN","IBARX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARX",4,0)
 ;
"RTN","IBARX",5,0)
XTYPE ; - tag XTYPE - returns array of billable action types for service
"RTN","IBARX",6,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",7,0)
 ;
"RTN","IBARX",8,0)
X1 K Y D INSTAL I '$T S Y=-1 Q
"RTN","IBARX",9,0)
 N I,J,X1,X2,DA,DFN,IBCAP S Y=1,IBSAVX=X,IBTAG=1,IBWHER=5
"RTN","IBARX",10,0)
 ;
"RTN","IBARX",11,0)
 D CHKX^IBAUTL G:+Y<1 XTYPEQ
"RTN","IBARX",12,0)
 ;
"RTN","IBARX",13,0)
 I '$D(^IBE(350.1,"ANEW",IBSERV,1,1)) D  S Y=-1 G XTYPEQ
"RTN","IBARX",14,0)
 .I '$D(ZTQUEUED) W !!,*7,"WARNING: Pharmacy Copay not working,",!,"         Check IB SERVICE/SECTION in Pharmacy Site File.",!!
"RTN","IBARX",15,0)
 .D E3^IBAERR
"RTN","IBARX",16,0)
 ;
"RTN","IBARX",17,0)
 N X D ELIG^VADPT,INP^VADPT,DOM S Y=1
"RTN","IBARX",18,0)
 F I=0:0 S I=$O(^IBE(350.1,"ANEW",IBSERV,1,I)) Q:'I  I $D(^IBE(350.1,I,40)) S DA=I X ^IBE(350.1,DA,40) S Y(DA,X)=I_"^"_X1_"^"_X2 S:'$G(IBCAP) IBCAP=X
"RTN","IBARX",19,0)
 ;
"RTN","IBARX",20,0)
 I $G(IBCAP),$G(DFN) D NEW^IBARXPFS(DFN)
"RTN","IBARX",21,0)
 ;
"RTN","IBARX",22,0)
XTYPEQ K X1,X2,IBSERV,VAEL,VA,VAERR,IBDOM,VAIN,IBSAVX,IBTAG,IBWHER
"RTN","IBARX",23,0)
 ;
"RTN","IBARX",24,0)
 Q
"RTN","IBARX",25,0)
 ;
"RTN","IBARX",26,0)
DOM S IBDOM=0 I $D(VAIN(4)),$D(^DIC(42,+VAIN(4),0)),$P(^(0),"^",3)="D" S IBDOM=1
"RTN","IBARX",27,0)
 Q
"RTN","IBARX",28,0)
NEW ;  - process new/renew/refill rx for charges
"RTN","IBARX",29,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",30,0)
 ;
"RTN","IBARX",31,0)
N1 K Y,IBSAVX D INSTAL I '$T S Y=-1 Q
"RTN","IBARX",32,0)
 N I,J,X1,X2,DA,DFN,IBEXMP,IBEFDT
"RTN","IBARX",33,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=2 D CHKX^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",34,0)
 I $D(X)<11 S Y="-1^IB010" G NEWQ
"RTN","IBARX",35,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVX(J)=X(J)
"RTN","IBARX",36,0)
 D ARPARM^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",37,0)
 ;
"RTN","IBARX",38,0)
 ; -- check rx exemption in case refill is exempt
"RTN","IBARX",39,0)
 ; -- if exempt set amount to each rx and total to zero
"RTN","IBARX",40,0)
 ;    1= exempt, 0= non-exempt, -1=copay off (manila)
"RTN","IBARX",41,0)
 S IBEXMP=+$$RXEXMT^IBARXEU0(DFN,DT)
"RTN","IBARX",42,0)
 I IBEXMP'=0 D  S Y="1^0" G NEWQ
"RTN","IBARX",43,0)
 .S IBJ=""
"RTN","IBARX",44,0)
 .; changed return value 6th piece is the exempt flag
"RTN","IBARX",45,0)
 .F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S $P(Y(IBJ),"^",6)=IBEXMP
"RTN","IBARX",46,0)
 .Q
"RTN","IBARX",47,0)
 ;
"RTN","IBARX",48,0)
 ; check to see if billing has been tracked across facilities before,
"RTN","IBARX",49,0)
 ; if not, start now.
"RTN","IBARX",50,0)
 D TRACK^IBARXMN(DFN) I +Y<1 G NEWQ
"RTN","IBARX",51,0)
 ;
"RTN","IBARX",52,0)
 S IBTOTL=0
"RTN","IBARX",53,0)
 D BILLNO^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",54,0)
 ;
"RTN","IBARX",55,0)
 S IBTOTL=0,IBJ="",IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5) I 'IBSEQNO S Y="-1^IB023" G NEWQ
"RTN","IBARX",56,0)
 F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S IBX=IBSAVX(IBJ) D RX^IBARX1
"RTN","IBARX",57,0)
 I +Y<1 G NEWQ
"RTN","IBARX",58,0)
 ;
"RTN","IBARX",59,0)
 ; changed to only do if charge exists
"RTN","IBARX",60,0)
 D:IBTOTL ^IBAFIL
"RTN","IBARX",61,0)
 ;
"RTN","IBARX",62,0)
 S IBJ="" F  S IBJ=$O(IBSAVY(IBJ)) Q:IBJ=""  S Y(IBJ)=IBSAVY(IBJ)
"RTN","IBARX",63,0)
 S:+Y>0 Y="1^"_IBTOTL S X=IBSAVX
"RTN","IBARX",64,0)
 ;
"RTN","IBARX",65,0)
NEWQ D:+Y<1 ^IBAERR
"RTN","IBARX",66,0)
 D END
"RTN","IBARX",67,0)
 Q
"RTN","IBARX",68,0)
 ;
"RTN","IBARX",69,0)
INSTAL I $S($D(^IBE(350.9,1,0)):1,$D(^IB(0)):1,1:0)
"RTN","IBARX",70,0)
 Q
"RTN","IBARX",71,0)
 ;
"RTN","IBARX",72,0)
CANCEL ;  - cancel charges for a rx
"RTN","IBARX",73,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",74,0)
 ;
"RTN","IBARX",75,0)
C1 K Y,IBSAVX N I,J,X1,X2,DA,DFN I '$G(IBUPDATE) N IBCAP,IBAMP,IBSAVXMC
"RTN","IBARX",76,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=3 D CHKX^IBAUTL I +Y<1 G CANQ
"RTN","IBARX",77,0)
 I $D(X)<11 S Y="-1^IB010" G CANQ
"RTN","IBARX",78,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVX(J)=X(J)
"RTN","IBARX",79,0)
 D ARPARM^IBAUTL I +Y<1 G CANQ
"RTN","IBARX",80,0)
 ;
"RTN","IBARX",81,0)
 S IBJ="",IBTOTL=0
"RTN","IBARX",82,0)
 F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S IBX=IBSAVX(IBJ) D CANRX^IBARX1 I +IBY(IBJ)'<1 D ^IBAFIL:$P(IBND,"^",5)'=8 I +Y<1 S IBY(IBJ)=Y
"RTN","IBARX",83,0)
 I +Y<1 S IBT="",IBY=Y,IBM="" F  S IBM=$O(IBY(IBM)) Q:IBM=""  I +IBY(IBM)<1 S Y=IBY(IBM) D ^IBAERR S Y(IBM)=IBY(IBM),Y=IBY
"RTN","IBARX",84,0)
CANQ D:+Y<1 ^IBAERR:('$D(IBT))
"RTN","IBARX",85,0)
 S X=IBSAVX
"RTN","IBARX",86,0)
 M IBSAVXMC=Y
"RTN","IBARX",87,0)
 D END
"RTN","IBARX",88,0)
 ;
"RTN","IBARX",89,0)
 ; now that I have cancelled lets see if there are some to be billed
"RTN","IBARX",90,0)
 I '$G(IBUPDATE),$D(IBCAP)>10 D QCAN^IBARXMC(DFN,.IBCAP,.IBSAVXMC)
"RTN","IBARX",91,0)
 ;S IBD=0 F  S IBD=$O(IBCAP(IBD)) Q:IBD<1  D CANCEL^IBARXMC(DFN,IBD)
"RTN","IBARX",92,0)
 Q
"RTN","IBARX",93,0)
 ;
"RTN","IBARX",94,0)
UPDATE ;  - will cancel current open charge and create updated entry
"RTN","IBARX",95,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",96,0)
 ;
"RTN","IBARX",97,0)
U1 K Y,IBSAVX N I,J,X1,X2,DA,DFN,IBEXMP,IBUPDATE,IBCAP,IBEFDT,IBAMP,IBSAVXMC
"RTN","IBARX",98,0)
 S IBUPDATE=1  ; new flag so we know we are updating
"RTN","IBARX",99,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=4 D CHKX^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",100,0)
 S IBSAVXU=IBSAVX
"RTN","IBARX",101,0)
 I $D(X)<11 S Y="-1^IB010" G UPDQ
"RTN","IBARX",102,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVXU(J)=X(J),X(J)=$P(X(J),"^",3,4) D EFDT^IBARXMU($P(X(J),"^"),.IBEFDT)
"RTN","IBARX",103,0)
 ;
"RTN","IBARX",104,0)
 D CANCEL
"RTN","IBARX",105,0)
U2 K X
"RTN","IBARX",106,0)
 S X=IBSAVXU S J="" F  S J=$O(IBSAVXU(J)) Q:J=""  S X(J)=$P(IBSAVXU(J),"^",1,3)
"RTN","IBARX",107,0)
 S IBSAVX=X,Y=1,IBTAG=4 D CHKX^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",108,0)
 D ARPARM^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",109,0)
 ;
"RTN","IBARX",110,0)
 ; -- check rx exemption in case refill is exempt
"RTN","IBARX",111,0)
 ; -- if exempt set amount to each rx and total to zero
"RTN","IBARX",112,0)
 S IBEXMP=+$$RXEXMT^IBARXEU0(DFN,DT)
"RTN","IBARX",113,0)
 I IBEXMP'=0 D  S Y="1^0" G UPDQ
"RTN","IBARX",114,0)
 .; changed return value 6th piece is the exempt flag
"RTN","IBARX",115,0)
 .S IBJ="" F  S IBJ=$O(IBSAVXU(IBJ)) Q:IBJ=""  S $P(Y(IBJ),"^",6)=IBEXMP
"RTN","IBARX",116,0)
 .Q
"RTN","IBARX",117,0)
 ;
"RTN","IBARX",118,0)
 S IBATYP=$P(^IBE(350.1,+IBATYP,0),"^",7) I '$D(^IBE(350.1,+IBATYP,0)) S Y="-1^IB008" G UPDQ ;update type action
"RTN","IBARX",119,0)
 ;
"RTN","IBARX",120,0)
 D BILLNO^IBAUTL G:+Y<1 UPDQ
"RTN","IBARX",121,0)
 S IBTOTL=0,IBNOS="",IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5) I 'IBSEQNO S Y="-1^IB023" G UPDQ
"RTN","IBARX",122,0)
 S IBJ="" F  S IBJ=$O(IBSAVXU(IBJ)) Q:IBJ=""  S IBX=IBSAVXU(IBJ) S:$D(IBEFDT(+$P(IBX,"^",3))) IBEFDT=IBEFDT(+$P(IBX,"^",3)) D UCHPAR,RX^IBARX1:'$D(IBSAVY(IBJ)) S IBEFDT=0
"RTN","IBARX",123,0)
 D ^IBAFIL
"RTN","IBARX",124,0)
 ;
"RTN","IBARX",125,0)
 S IBJ="" F  S IBJ=$O(IBSAVY(IBJ)) Q:IBJ=""  S Y(IBJ)=IBSAVY(IBJ),$P(Y(IBJ),"^",6)=+$G(IBEXMP) S:+Y(IBJ)<1 Y=Y(IBJ)
"RTN","IBARX",126,0)
 S:+Y>0 Y="1^"_IBTOTL S X=IBSAVXU
"RTN","IBARX",127,0)
 ;
"RTN","IBARX",128,0)
 ; now that I have the update done lets see if there are some to be billed
"RTN","IBARX",129,0)
 I $D(IBCAP)>10 D QCAN^IBARXMC(DFN,.IBCAP,.IBSAVXMC)
"RTN","IBARX",130,0)
 ;S IBD=0 F  S IBD=$O(IBCAP(IBD)) Q:IBD<1  D CANCEL^IBARXMC(DFN,IBD)
"RTN","IBARX",131,0)
 ;
"RTN","IBARX",132,0)
UPDQ D:+Y<1 ^IBAERR
"RTN","IBARX",133,0)
 K IBSAVXU
"RTN","IBARX",134,0)
END K %,%H,%I,K,X1,X2,X3,IBSERV,IBATYP,IBAFY,IBDUZ,IBNOW,IBSAVX,IBTOTL,IBX,IBT,IBCHRG,IBDESC,IBFAC,IBIL,IBN,IBNOS,IBSEQNO,IBSITE,IBTAG,IBTRAN,IBCRES,IBJ,IBLAST,IBND,IBY,IBPARNT,IBUNIT,IBJ,IBARTYP,IBI,IBSAVY,IBWHER,IBTIER
"RTN","IBARX",135,0)
 Q
"RTN","IBARX",136,0)
UCHPAR ; Check that IB action and its parent exist.
"RTN","IBARX",137,0)
 S IBPARNT=$P(IBX,"^",3)
"RTN","IBARX",138,0)
 I '$D(^IB(+IBPARNT,0)) S IBSAVY(IBJ)="-1^IB021" G UCHPARQ
"RTN","IBARX",139,0)
 S IBPARNT=$P(^IB(+IBPARNT,0),"^",9)
"RTN","IBARX",140,0)
 I '$D(^IB(+IBPARNT,0)) S IBSAVY(IBJ)="-1^IB027"
"RTN","IBARX",141,0)
UCHPARQ Q
"RTN","IBARX",142,0)
 ;
"RTN","IBARX",143,0)
STATUS(X) ; returns the status of a transaction in 350
"RTN","IBARX",144,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",145,0)
 ;
"RTN","IBARX",146,0)
 N Y S Y=$G(^IB(X,0))
"RTN","IBARX",147,0)
 Q +$S($P(Y,"^",5)=10:2,1:$P($G(^IBE(350.1,+$P(Y,"^",3),0)),"^",5))
"RTN","IBARX",148,0)
 ;
"RTN","IBARX",149,0)
CANIBAM ; used by pso to cancel a 354.71 transaction
"RTN","IBARX",150,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",151,0)
 N IBZ,IBXX,IBYY,IBCAP
"RTN","IBARX",152,0)
 M IBXX=X
"RTN","IBARX",153,0)
 S IBXX=0 F  S IBXX=$O(IBXX(IBXX)) Q:IBXX=""  D
"RTN","IBARX",154,0)
 . N IBY
"RTN","IBARX",155,0)
 . S IBZ=$G(^IBAM(354.71,+IBXX(IBXX),0))
"RTN","IBARX",156,0)
 . I $P(IBZ,"^",4) S IBYY(IBXX)="-1^Transaction has been billed" Q
"RTN","IBARX",157,0)
 . I $P(IBZ,"^",5)="Y"!($P(IBZ,"^",5)="X") S IBYY(IBXX)="-1^Transaction already cancelled" Q
"RTN","IBARX",158,0)
 . S IBZ=$$CANCEL^IBARXMN($P(IBZ,"^",2),+IBXX(IBXX),.IBY,$P(IBXX(IBXX),"^",2))
"RTN","IBARX",159,0)
 . S IBYY(IBXX)=$S($P($G(IBY),"^")=-1:IBY,1:IBZ)
"RTN","IBARX",160,0)
 K Y M Y=IBYY
"RTN","IBARX",161,0)
 Q
"RTN","IBARX",162,0)
 ;
"RTN","IBARX",163,0)
UPIBAM ;  - will cancel current potential charge and create updated entry
"RTN","IBARX",164,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",165,0)
 ;
"RTN","IBARX",166,0)
 N IBXX,IBYY,IBWHER,IBTAG,IBZ,IBX,IBY,IBSAVX,IBA,IBAM,IBATYP,IBCAP,IBDESC,IBDUZ,IBSERV,IBTCH
"RTN","IBARX",167,0)
 M IBXX=X
"RTN","IBARX",168,0)
 S IBA=$O(X("")) I IBA="" S (Y)="-1^Invalid Subscript in X" Q
"RTN","IBARX",169,0)
 S IBWHER=1,Y=1,IBTAG=4,IBSAVX=X D CHKX^IBAUTL I +Y<1 S Y(IBA)=Y Q
"RTN","IBARX",170,0)
 S IBZ=$G(^IBAM(354.71,+$P($G(IBXX(IBA)),"^",3),0))
"RTN","IBARX",171,0)
 ;
"RTN","IBARX",172,0)
 ; check out the transaction sent
"RTN","IBARX",173,0)
 I 'IBZ S (Y,Y(IBA))="-1^Not a valid transaction number" Q
"RTN","IBARX",174,0)
 I $P(IBZ,"^",4) S (Y,Y(IBA))="-1^Transaction has been billed" Q
"RTN","IBARX",175,0)
 I $P(IBZ,"^",5)="Y"!($P(IBZ,"^",5)="X") S (Y,Y(IBA))="-1^Transaction already cancelled" Q
"RTN","IBARX",176,0)
 ;
"RTN","IBARX",177,0)
 ; cancel that transaction
"RTN","IBARX",178,0)
 S IBX=$$CANCEL^IBARXMN($P(IBZ,"^",2),$P($G(IBXX(IBA)),"^",3),.Y,$P(IBXX(IBA),"^",4)) I +Y<1 S Y(IBA)=Y Q
"RTN","IBARX",179,0)
 ;
"RTN","IBARX",180,0)
 ; create the new updated transaction
"RTN","IBARX",181,0)
 S IBX=IBXX(IBA) D BDESC^IBARX1 S IBATYP=$P(^IBE(350.1,+IBATYP,0),"^",7),DA=IBATYP D COST^IBAUTL S IBTCH=$P(IBX,"^",2)*X1
"RTN","IBARX",182,0)
 S IBAM=$$ADD^IBARXMN($P(IBZ,"^",2),"^^"_$P(IBZ,"^",3)_"^^P^"_$P(IBXX(IBA),"^")_"^"_$P(IBXX(IBA),"^",2)_"^"_IBTCH_"^"_IBDESC_"^"_$$PARENT^IBARXMC($P(IBXX(IBA),"^",3))_"^0^"_IBTCH_"^"_(+$P($$SITE^IBARXMU,"^",3)),IBATYP)
"RTN","IBARX",183,0)
 I IBAM<1 S (Y,Y(IBA))="-1^IB316" Q
"RTN","IBARX",184,0)
 ;
"RTN","IBARX",185,0)
 S Y(IBA)=IBAM,Y=1
"RTN","IBARX",186,0)
 ;
"RTN","IBARX",187,0)
 Q
"RTN","IBARX1")
0^2^B24612250
"RTN","IBARX1",1,0)
IBARX1 ;ALB/AAS - INTEGRATED BILLING, PHARMACY COPAY INTERFACE (CONT.) ;21-FEB-91
"RTN","IBARX1",2,0)
 ;;2.0;INTEGRATED BILLING;**34,101,150,158,156,234,247,563**;21-MAR-94;Build 12
"RTN","IBARX1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARX1",4,0)
 ;
"RTN","IBARX1",5,0)
 ;  - process 1 rx entry and accumulate totals
"RTN","IBARX1",6,0)
 ;
"RTN","IBARX1",7,0)
RX N IBAM,IBNOCH,IBTIER
"RTN","IBARX1",8,0)
 ;if Combat Vet send alert e-mail to mailgroup "IB COMBAT VET RX COPAY"
"RTN","IBARX1",9,0)
 D
"RTN","IBARX1",10,0)
 . N Y D NOW^%DTC S Y=%\1
"RTN","IBARX1",11,0)
 . D RXALRT^IBACV(DFN,Y,+$P($P($G(IBSAVX(1)),"^",1),":",2))
"RTN","IBARX1",12,0)
 ;
"RTN","IBARX1",13,0)
 I $P(IBX,"^")'?1.N1":"1.N.ANP S Y="-1^IB012" G RXQ
"RTN","IBARX1",14,0)
 I $P(IBX,"^",2)<1 S Y="-1^IB013" G RXQ
"RTN","IBARX1",15,0)
 ;
"RTN","IBARX1",16,0)
 D BDESC
"RTN","IBARX1",17,0)
 ;
"RTN","IBARX1",18,0)
 ; make sure effective date defined
"RTN","IBARX1",19,0)
 S IBEFDT=$G(IBEFDT,DT)
"RTN","IBARX1",20,0)
 ; determine rx copay copay tier
"RTN","IBARX1",21,0)
 S IBTIER=$$RXTIER^IBAUTL(DFN,+$P($P(IBX,"^"),":",2),IBEFDT)
"RTN","IBARX1",22,0)
 ; determine rx cost
"RTN","IBARX1",23,0)
 S DA=IBATYP D COST^IBAUTL I $P($G(Y),"^")=-1 G RXQ
"RTN","IBARX1",24,0)
 ;
"RTN","IBARX1",25,0)
 ; compute amount above cap
"RTN","IBARX1",26,0)
 D NEW^IBARXMC($P(IBX,"^",2),X1,DT,.IBCHRG,.IBNOCH)
"RTN","IBARX1",27,0)
 ;
"RTN","IBARX1",28,0)
 S IBTCH=$P(IBX,"^",2)*X1
"RTN","IBARX1",29,0)
 ;
"RTN","IBARX1",30,0)
 ; add to 354.71
"RTN","IBARX1",31,0)
 S IBAM=$$ADD^IBARXMN(DFN,"^^"_IBEFDT_"^^P^"_$P(IBX,"^")_"^"_$P(IBX,"^",2)_"^"_IBTCH_"^"_IBDESC_"^"_$S($G(IBAMP):IBAMP,1:"")_"^"_IBCHRG_"^"_IBNOCH_"^"_(+$P($$SITE^IBARXMU,"^",3))_"^^^^^^^"_$G(IBTIER),IBATYP) I IBAM<1 S Y="-1^IB316" G RXQ
"RTN","IBARX1",32,0)
 ;
"RTN","IBARX1",33,0)
 ; setup new pieces (4, 5, 6, and 7), quit if above cap
"RTN","IBARX1",34,0)
 S $P(IBSAVY(IBJ),"^",4,7)=$S(IBNOCH:1,1:0)_"^"_$S(IBNOCH&(IBCHRG):"P",IBCHRG:"F",1:"")_"^"_(+$G(IBEXMP))_"^"_IBAM G:'IBCHRG RXQ
"RTN","IBARX1",35,0)
 ;
"RTN","IBARX1",36,0)
 S IBTOTL=IBTOTL+IBCHRG
"RTN","IBARX1",37,0)
 S IBWHER=2
"RTN","IBARX1",38,0)
 D ADD^IBAUTL
"RTN","IBARX1",39,0)
 I +Y<1 G RXQ
"RTN","IBARX1",40,0)
 S IBPARNT=$S($D(IBPARNT):IBPARNT,1:IBN)
"RTN","IBARX1",41,0)
 S $P(^IB(IBN,1),"^")=IBDUZ,$P(^IB(IBN,0),"^",2,15)=DFN_"^"_IBATYP_"^"_$P(IBX,"^")_"^2^"_$P(IBX,"^",2)_"^"_IBCHRG_"^"_IBDESC_"^"_IBPARNT_"^^"_IBIL_"^"_IBTRAN_"^"_IBFAC_"^"_IBEFDT_"^"_IBEFDT,$P(^(0),"^",19,22)=IBAM_"^^^"_$G(IBTIER)
"RTN","IBARX1",42,0)
 K IBPARNT,^IB("AC",1,IBN) ;S ^IB("AC",2,IBN)=""
"RTN","IBARX1",43,0)
 D INDEX
"RTN","IBARX1",44,0)
 S $P(IBSAVY(IBJ),"^",1,3)=IBN_"^"_IBCHRG_"^"_IBIL
"RTN","IBARX1",45,0)
 S:'$D(IBNOS) IBNOS="" S IBNOS=IBN_"^"_IBNOS
"RTN","IBARX1",46,0)
RXQ Q
"RTN","IBARX1",47,0)
 ;
"RTN","IBARX1",48,0)
CANRX ;  - ibx = ibn for parent entry
"RTN","IBARX1",49,0)
 ;  - ibn = new cancellation entry
"RTN","IBARX1",50,0)
 N IBAM,IBAMY,IBEFDT,IBTIER
"RTN","IBARX1",51,0)
 S IBY(IBJ)=1
"RTN","IBARX1",52,0)
 I '$D(^IBE(350.3,+$P(IBX,"^",2),0)) S (Y,IBY(IBJ))="-1^IB020" G CANRXQ
"RTN","IBARX1",53,0)
 I '$D(^IB(+IBX,0)) S (Y,IBY(IBJ))="-1^IB021" G CANRXQ
"RTN","IBARX1",54,0)
 S IBND=^IB(+IBX,0)
"RTN","IBARX1",55,0)
 S IBCRES=$P(IBX,"^",2)
"RTN","IBARX1",56,0)
 ;  -find most recent entry for parent ibx
"RTN","IBARX1",57,0)
 ;  -if status isn't an update or new, error already cancelled?
"RTN","IBARX1",58,0)
 D LAST I IBLAST'=IBPARNT,$D(^IB(IBLAST,0)),$P(^IBE(350.1,$P(^IB(IBLAST,0),"^",3),0),"^",5)=2 S (Y,IBY(IBJ))="-1^IB026^ Ref. No: "_+^IB(+IBLAST,0) G CANRXQ ;already cancelled
"RTN","IBARX1",59,0)
 ;
"RTN","IBARX1",60,0)
 ; cancel 354.71
"RTN","IBARX1",61,0)
 S IBAM=$$CANCEL^IBARXMN(DFN,$P(IBND,"^",19),.IBAMY,IBCRES) I $G(IBAMY)<0 S (Y,IBY(IBJ))=IBAMY G CANRXQ
"RTN","IBARX1",62,0)
 ;
"RTN","IBARX1",63,0)
 I $P(IBND,"^",5)=8 D  QUIT  ;Cancel a charge with a status of HOLD
"RTN","IBARX1",64,0)
 . N DIE,DA,DR
"RTN","IBARX1",65,0)
 . S DIE="^IB(",DA=+IBX,DR=".05////10;.1////"_IBCRES
"RTN","IBARX1",66,0)
 . DO ^DIE
"RTN","IBARX1",67,0)
 . S Y=1,IBY(IBJ)=1,Y(IBJ)=+IBX
"RTN","IBARX1",68,0)
 ;
"RTN","IBARX1",69,0)
 S IBPARNT=$P(IBND,"^",9) I '$D(^IB(IBPARNT,0)) S (Y,IBY(IBJ))="-1^IB027" G CANRXQ
"RTN","IBARX1",70,0)
 S IBATYP=$P(^IBE(350.1,$P(IBND,"^",3),0),"^",6) ;cancellation action type for parent
"RTN","IBARX1",71,0)
 I '$D(^IBE(350.1,+IBATYP,0)) S (Y,IBY(IBJ))="-1^IB022" G CANRXQ
"RTN","IBARX1",72,0)
 S IBSEQNO=$P(^IBE(350.1,+IBATYP,0),"^",5) I 'IBSEQNO S (Y,IBY(IBJ))="-1^IB023" G CANRXQ
"RTN","IBARX1",73,0)
 S IBIL=$P(IBND,"^",11) I IBIL="" S (Y,IBY(IBJ))="-1^IB024" G CANRXQ
"RTN","IBARX1",74,0)
 S IBUNIT=$S($D(^IB(+IBLAST,0)):$P(^(0),"^",6),1:$P(IBND,"^",6)) I IBUNIT<1 S (Y,IBY(IBJ))="-1^IB025" G CANRXQ
"RTN","IBARX1",75,0)
 S IBCHRG=$S($D(^IB(+IBLAST,0)):$P(^(0),"^",7),1:$P(IBND,"^",7)) I IBCHRG<1 S (Y,IBY(IBJ))="-1^IB025" G CANRXQ
"RTN","IBARX1",76,0)
 S IBEFDT=$S($P(IBND,"^",14):$P(IBND,"^",14),1:$P($G(^IB(+IBX,1)),"^",2))
"RTN","IBARX1",77,0)
 S IBTIER=$P(IBND,"^",22)
"RTN","IBARX1",78,0)
 S IBTOTL=IBTOTL+IBCHRG
"RTN","IBARX1",79,0)
 S IBWHER=2
"RTN","IBARX1",80,0)
 D ADD^IBAUTL I +Y<1 S IBY(IBJ)=Y G CANRXQ
"RTN","IBARX1",81,0)
 S $P(^IB(IBN,1),"^",1)=IBDUZ
"RTN","IBARX1",82,0)
 S $P(^IB(IBN,0),"^",2,15)=DFN_"^"_IBATYP_"^"_$P(IBND,"^",4)_"^2^"_IBUNIT_"^"_IBCHRG_"^"_$P(IBND,"^",8)_"^"_IBPARNT_"^"_IBCRES_"^"_IBIL_"^^"_IBFAC_"^"_IBEFDT_"^"_IBEFDT S:IBAM $P(^(0),"^",19)=IBAM S:IBTIER $P(^(0),"^",22)=IBTIER
"RTN","IBARX1",83,0)
 K ^IB("AC",1,IBN) ;S ^IB("AC",2,IBN)=""
"RTN","IBARX1",84,0)
 D INDEX
"RTN","IBARX1",85,0)
 S Y(IBJ)=IBN_"^"_IBCHRG_"^"_IBIL
"RTN","IBARX1",86,0)
 S IBNOS=IBN
"RTN","IBARX1",87,0)
CANRXQ Q
"RTN","IBARX1",88,0)
 ;
"RTN","IBARX1",89,0)
BDESC ;  -return brief description
"RTN","IBARX1",90,0)
 N X,Y S IBDESC="",X=$P(IBX,"^")
"RTN","IBARX1",91,0)
 I $D(^IBE(350.1,IBATYP,20)) X ^(20) S IBDESC=X
"RTN","IBARX1",92,0)
 Q
"RTN","IBARX1",93,0)
LAST ;find last entry
"RTN","IBARX1",94,0)
 S IBLAST=""
"RTN","IBARX1",95,0)
 S IBPARNT=$P(^IB(+IBX,0),"^",9) I 'IBPARNT S IBPARNT=+IBX
"RTN","IBARX1",96,0)
 S IBLDT=$O(^IB("APDT",IBPARNT,"")) I +IBLDT F IBL=0:0 S IBL=$O(^IB("APDT",IBPARNT,IBLDT,IBL)) Q:'IBL  S IBLAST=IBL
"RTN","IBARX1",97,0)
 I IBLAST="" S IBLAST=IBPARNT
"RTN","IBARX1",98,0)
 Q
"RTN","IBARX1",99,0)
 ;
"RTN","IBARX1",100,0)
INDEX ;cross-reference entry
"RTN","IBARX1",101,0)
 N X,Y
"RTN","IBARX1",102,0)
 S DA=IBN,DIK="^IB(" D IX^DIK
"RTN","IBARX1",103,0)
 K DIK Q
"RTN","IBARX1",104,0)
 ;
"RTN","IBARX1",105,0)
SERV(Y) ; -- Service check for Pharmacy
"RTN","IBARX1",106,0)
 ;    called by the screen in the input transform for the IB SERVICE/SECTION
"RTN","IBARX1",107,0)
 ;    field of the PHARMACY SITE file.
"RTN","IBARX1",108,0)
 ;    input = Y internal entry number in service section file
"RTN","IBARX1",109,0)
 ;    output = 1 if okay to use (service matches) or 0 if not okay
"RTN","IBARX1",110,0)
 ;
"RTN","IBARX1",111,0)
 ; -- screen logic for field 1003 in file 59 should be 
"RTN","IBARX1",112,0)
 ;    S DIC("S")="I $$SERV^IBARX1(+Y)"
"RTN","IBARX1",113,0)
 ;
"RTN","IBARX1",114,0)
 Q $S('$G(Y):0,1:$D(^IBE(350.1,"ANEW",Y,1,1))&$D(^IBE(350.1,"ANEW",Y,1,2)))
"RTN","IBARXMB")
0^3^B22706384
"RTN","IBARXMB",1,0)
IBARXMB ;LL/ELZ - PHARMCAY COPAY CAP BILLING FUNCTIONS ;26-APR-2001
"RTN","IBARXMB",2,0)
 ;;2.0;INTEGRATED BILLING;**156,563**;21-MAR-94;Build 12
"RTN","IBARXMB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARXMB",4,0)
 ;
"RTN","IBARXMB",5,0)
BILL(IBX,IBB) ; receives information to bill for amounts not previously billed
"RTN","IBARXMB",6,0)
 ; to create bills for them on the local system, DFN is assumed
"RTN","IBARXMB",7,0)
 ; IBX = the parent transaction number to bill, IBB = the amount to bill
"RTN","IBARXMB",8,0)
 ;
"RTN","IBARXMB",9,0)
 N IBY,IBZ,IB350,IBUPDATE,IBER,Y,IBL
"RTN","IBARXMB",10,0)
 ;
"RTN","IBARXMB",11,0)
 ; find bill number
"RTN","IBARXMB",12,0)
 S IBY=+$O(^IBAM(354.71,"B",IBX,0)) Q:'IBY
"RTN","IBARXMB",13,0)
 ;
"RTN","IBARXMB",14,0)
 ; find last 354.71 entry for IBX
"RTN","IBARXMB",15,0)
 S IBL=$O(^IBAM(354.71,"AF",IBY,":"),-1) I IBL S IBY=+IBL
"RTN","IBARXMB",16,0)
 ;
"RTN","IBARXMB",17,0)
 ; get info
"RTN","IBARXMB",18,0)
 S IBZ=^IBAM(354.71,IBY,0),IB350=$G(^IB(+$P(IBZ,"^",4),0))
"RTN","IBARXMB",19,0)
 ;
"RTN","IBARXMB",20,0)
 ; is this already totally billed?
"RTN","IBARXMB",21,0)
 Q:$P($$NET^IBARXMC(IBY),"^",2)'>0
"RTN","IBARXMB",22,0)
 ;
"RTN","IBARXMB",23,0)
 ; cancel old 354.71 entry
"RTN","IBARXMB",24,0)
 S IBUPDATE=1 S IBER=$$CANCEL^IBARXMN(DFN,IBY,.IBER)
"RTN","IBARXMB",25,0)
 ;
"RTN","IBARXMB",26,0)
 ; cancel old 350 entry
"RTN","IBARXMB",27,0)
 D:IB350 CAN(DFN,+$P(IBZ,"^",4))
"RTN","IBARXMB",28,0)
 ;
"RTN","IBARXMB",29,0)
 ; create updated one
"RTN","IBARXMB",30,0)
 D ADDUP(IBY,IBB)
"RTN","IBARXMB",31,0)
 ;
"RTN","IBARXMB",32,0)
 Q
"RTN","IBARXMB",33,0)
SEND(IBX,IBB) ; receives information to bill remotely for amounts not already
"RTN","IBARXMB",34,0)
 ; billed.  Makes a call to the remote system to tell them to bill
"RTN","IBARXMB",35,0)
 ; IBX = the parent transaction number to bill, IBB = the amount to bill
"RTN","IBARXMB",36,0)
 ; ia #3144
"RTN","IBARXMB",37,0)
 N IBICN,Y,DA,HLDOM,HLECH,HLFS,HLINSTN,HLNEXT,HLNODE,HLPARAM,HLQ,HLQUIT,PHONE,RPCIEN,IO,IOBS,IOCPU,IOF,IOHG,IOM,ION,IOPAR,IOUPAR,IOS,IOSL,IOST,IOT,IOXY,POP,IBD
"RTN","IBARXMB",38,0)
 D
"RTN","IBARXMB",39,0)
 . S IBICN=$$ICN^IBARXMU(DFN) Q:'IBICN
"RTN","IBARXMB",40,0)
 . D DIRECT^XWB2HL7(.IBD,+IBX,"IBARXM TRANS BILL","",IBICN,IBX,IBB)
"RTN","IBARXMB",41,0)
 Q
"RTN","IBARXMB",42,0)
CAN(DFN,IBX,IBCRES) ; cancels charge to be updated
"RTN","IBARXMB",43,0)
 ; IBX = ien from 350, IBCRES = charge cancel reason (optional)
"RTN","IBARXMB",44,0)
 ;
"RTN","IBARXMB",45,0)
 N IBZ,IBSERV,IBDUZ,IBSITE,IBFAC,IBLAST,IBPARNT,IBTYP,IBSEQNO,IBIL,IBLASTZ,IBUNIT,IBCHRG,IBNOS,IBTOTL,IBN,IBND,IBEFDT
"RTN","IBARXMB",46,0)
 ;
"RTN","IBARXMB",47,0)
 S (IBND,IBZ)=$G(^IB(IBX,0)) Q:'IBZ
"RTN","IBARXMB",48,0)
 ;
"RTN","IBARXMB",49,0)
 S IBSERV=$$SERVICE(IBZ)
"RTN","IBARXMB",50,0)
 D ARPARM^IBAUTL
"RTN","IBARXMB",51,0)
 S:'$D(IBCRES) IBCRES=16
"RTN","IBARXMB",52,0)
 ;
"RTN","IBARXMB",53,0)
 D LAST^IBARX1 I IBLAST'=IBPARNT,$D(^IB(IBLAST,0)),$P(^IBE(350.1,$P(^IB(IBLAST,0),"^",3),0),"^",5)=2 Q  ; already cancelled
"RTN","IBARXMB",54,0)
 ;
"RTN","IBARXMB",55,0)
 ; cancel a charge with a status of HOLD
"RTN","IBARXMB",56,0)
 I $P(IBZ,"^",5)=8 N DIE,DA,DR S DIE="^IB(",DA=IBX,DR=".05///10;.1///"_IBCRES D ^DIE Q
"RTN","IBARXMB",57,0)
 ;
"RTN","IBARXMB",58,0)
 S IBDUZ=DUZ
"RTN","IBARXMB",59,0)
 S IBPARNT=$P(IBZ,"^",9) Q:'$D(^IB(IBPARNT,0))
"RTN","IBARXMB",60,0)
 S IBATYP=$P(^IBE(350.1,$P(IBZ,"^",3),0),"^",6) ;cancellation action type
"RTN","IBARXMB",61,0)
 S IBSEQNO=$P($G(^IBE(350.1,+IBATYP,0)),"^",5) Q:'IBSEQNO
"RTN","IBARXMB",62,0)
 S IBIL=$P(IBZ,"^",11) Q:'IBIL  ; no bill exists
"RTN","IBARXMB",63,0)
 S IBLASTZ=$G(^IB(+IBLAST,0))
"RTN","IBARXMB",64,0)
 S IBUNIT=$S($P(IBLASTZ,"^",6):$P(IBLASTZ,"^",6),1:$P(IBZ,"^",6))
"RTN","IBARXMB",65,0)
 S IBCHRG=$S($P(IBLASTZ,"^",7):$P(IBLASTZ,"^",7),1:$P(IBZ,"^",7))
"RTN","IBARXMB",66,0)
 S IBEFDT=$S($P(IBZ,"^",14):$P(IBZ,"^",14),1:$P($G(^IB(IBX,1)),"^",2))
"RTN","IBARXMB",67,0)
 S IBTOTL=IBCHRG,IBWHER=2
"RTN","IBARXMB",68,0)
 D ADD^IBAUTL I +Y<1 Q
"RTN","IBARXMB",69,0)
 ;
"RTN","IBARXMB",70,0)
 S $P(^IB(IBN,1),"^",1)=IBDUZ,$P(^IB(IBN,0),"^",2,15)=DFN_"^"_IBATYP_"^"_$P(IBND,"^",4)_"^2^"_IBUNIT_"^"_IBCHRG_"^"_$P(IBND,"^",8)_"^"_IBPARNT_"^"_IBCRES_"^"_IBIL_"^^"_IBFAC_"^"_IBEFDT_"^"_IBEFDT,$P(^(0),"^",22)=$P(IBZ,"^",22)
"RTN","IBARXMB",71,0)
 K ^IB("AC",1,IBN)
"RTN","IBARXMB",72,0)
 D INDEX^IBARX1
"RTN","IBARXMB",73,0)
 S IBNOS=IBN
"RTN","IBARXMB",74,0)
 D ^IBAFIL
"RTN","IBARXMB",75,0)
 Q
"RTN","IBARXMB",76,0)
 ;
"RTN","IBARXMB",77,0)
ADDUP(IBX,IBB) ; add updated transaction, assumes DFN
"RTN","IBARXMB",78,0)
 ; IBX = example ien from 354.71 to bill, IBB = amount to bill
"RTN","IBARXMB",79,0)
 ;
"RTN","IBARXMB",80,0)
 N IBZ,IBSEQNO,IBDESC,IBCHRG,IBNOCH,IBAM,IBATYP,IBPARNT,IBN,IBDUZ,IBFAC,IBNOS,Y
"RTN","IBARXMB",81,0)
 ;
"RTN","IBARXMB",82,0)
 S IBZ=^IBAM(354.71,IBX,0),IBDUZ=$P(IBZ,"^",14)
"RTN","IBARXMB",83,0)
 D ARPARM^IBAUTL
"RTN","IBARXMB",84,0)
 ;
"RTN","IBARXMB",85,0)
 ; check exemption status
"RTN","IBARXMB",86,0)
 I +$$RXEXMT^IBARXEU0(DFN,$P(IBZ,"^",3)) Q
"RTN","IBARXMB",87,0)
 ;
"RTN","IBARXMB",88,0)
 S IBATYP=$P(IBZ,"^",18),IBATYP=$P($G(^IBE(350.1,+IBATYP,0)),"^",7)
"RTN","IBARXMB",89,0)
 S IBSEQNO=$P($G(^IBE(350.1,+IBATYP,0)),"^",5) Q:'IBSEQNO
"RTN","IBARXMB",90,0)
 S IBDESC=$P(IBZ,"^",9)
"RTN","IBARXMB",91,0)
 ;
"RTN","IBARXMB",92,0)
 S IBCHRG=IBB+$P(IBZ,"^",11),IBNOCH=$P(IBZ,"^",8)-IBCHRG
"RTN","IBARXMB",93,0)
 ;
"RTN","IBARXMB",94,0)
 S IBAM=$$ADD^IBARXMN(DFN,"^^"_$P(IBZ,"^",3)_"^^P^"_$P(IBZ,"^",6,9)_"^"_$P(IBZ,"^")_"^"_IBCHRG_"^"_IBNOCH_"^"_(+$P($$SITE^IBARXMU,"^",3))_"^^^^^^^^^"_$P(IBZ,"^",22),IBATYP) I IBAM<1 Q
"RTN","IBARXMB",95,0)
 ;
"RTN","IBARXMB",96,0)
 D ADD^IBAUTL
"RTN","IBARXMB",97,0)
 S IBPARNT=$S($P(IBZ,"^",4):$P(IBZ,"^",4),1:IBN)
"RTN","IBARXMB",98,0)
 S $P(^IB(IBN,1),"^")=IBDUZ,$P(^IB(IBN,0),"^",2,15)=DFN_"^"_IBATYP_"^"_$P(IBZ,"^",6)_"^2^"_$P(IBZ,"^",7)_"^"_IBCHRG_"^"_IBDESC_"^"_IBPARNT_"^^^^"_IBFAC_"^"_$P(IBZ,"^",3)_"^"_$P(IBZ,"^",3),$P(^(0),"^",19,22)=IBAM_"^^^"_$P(IBZ,"^",22)
"RTN","IBARXMB",99,0)
 K IBPARNT,^IB("AC",1,IBN)
"RTN","IBARXMB",100,0)
 D INDEX^IBARX1
"RTN","IBARXMB",101,0)
 S IBNOS=IBN_"^"_$G(IBNOS)
"RTN","IBARXMB",102,0)
 D ^IBAFIL
"RTN","IBARXMB",103,0)
 ;
"RTN","IBARXMB",104,0)
 ; call pso to let them know I have billed
"RTN","IBARXMB",105,0)
 ; check for pso part not installed
"RTN","IBARXMB",106,0)
 ; ia #3462
"RTN","IBARXMB",107,0)
 I $L($T(^PSOCPIB)) S Y(1)=$$NOW^XLFDT_"^"_DUZ_"^"_(+$P($P(IBZ,"^",6),":",2))_"^"_(+$P($P(IBZ,"^",6),":",3))_"^"_$S(IBNOCH:"P",1:"F")_"^"_IBN D ^PSOCPIB
"RTN","IBARXMB",108,0)
 ;
"RTN","IBARXMB",109,0)
 ;
"RTN","IBARXMB",110,0)
 Q
"RTN","IBARXMB",111,0)
 ;
"RTN","IBARXMB",112,0)
SERVICE(IBZ) ; returns service pointer
"RTN","IBARXMB",113,0)
 ; IBZ = zero node from 350
"RTN","IBARXMB",114,0)
 Q $P($G(^IBE(350.1,+$P(IBZ,"^",3),0)),"^",4)
"RTN","IBARXMB",115,0)
 ;
"RTN","IBARXMC")
0^7^B44624308
"RTN","IBARXMC",1,0)
IBARXMC ;LL/ELZ-PHARMACY COPAY CAP FUNCTIONS ;26-APR-2001
"RTN","IBARXMC",2,0)
 ;;2.0;INTEGRATED BILLING;**156,186,237,552,563**;21-MAR-94;Build 12
"RTN","IBARXMC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARXMC",4,0)
 ;
"RTN","IBARXMC",5,0)
NEW(IBQ,IBC,IBD,IBB,IBN) ; used to compute new bills amount above cap
"RTN","IBARXMC",6,0)
 ; DFN is assumed
"RTN","IBARXMC",7,0)
 ; IBQ = quantity
"RTN","IBARXMC",8,0)
 ; IBC = charge per item
"RTN","IBARXMC",9,0)
 ; IBD = effective date
"RTN","IBARXMC",10,0)
 ;   Return:
"RTN","IBARXMC",11,0)
 ; IBB = Amount to bill
"RTN","IBARXMC",12,0)
 ; IBN = Amount NOT to bill
"RTN","IBARXMC",13,0)
 ;
"RTN","IBARXMC",14,0)
 N IBA,IBA,IBZ,IBP,IBE,IBY,IBFD,IBTD
"RTN","IBARXMC",15,0)
 ;
"RTN","IBARXMC",16,0)
 S IBP=$$PRIORITY^IBARXMU(DFN)
"RTN","IBARXMC",17,0)
 ; - if the patient has no Priority Group (not enrolled), assume the highest PG
"RTN","IBARXMC",18,0)
 I 'IBP S IBP=8
"RTN","IBARXMC",19,0)
 D CAP(IBD,IBP,.IBZ,.IBY,.IBFD,.IBTD)
"RTN","IBARXMC",20,0)
 S IBA=$$BILLED(DFN,IBD,IBFD,IBTD),IBE=$P(IBA,"^",2)
"RTN","IBARXMC",21,0)
 S IBB=IBQ*IBC
"RTN","IBARXMC",22,0)
 S IBB=$S('IBZ:IBB,IBB+IBA>IBZ:$S(IBZ-IBA>0:IBZ-IBA,1:0),1:IBB) ; monthly
"RTN","IBARXMC",23,0)
 I IBB,IBY S IBB=$S(IBB+IBE>IBY:$S(IBY-IBE>0:IBY-IBE,1:0),1:IBB) ; yearly
"RTN","IBARXMC",24,0)
 S IBN=$S(IBQ*IBC=IBB:0,1:IBQ*IBC-IBB)
"RTN","IBARXMC",25,0)
 ;
"RTN","IBARXMC",26,0)
 Q
"RTN","IBARXMC",27,0)
 ;
"RTN","IBARXMC",28,0)
BILLED(DFN,IBD,IBFD,IBTD) ; returns about billed, format:  month^year
"RTN","IBARXMC",29,0)
 ; IBD = transaction date, IBFD = from date, IBTD = to date
"RTN","IBARXMC",30,0)
 N IBFY,IBX,IBM,IBY,IBZ
"RTN","IBARXMC",31,0)
 F IBX="IBD","IBFD","IBTD" S @IBX=$E(@IBX,1,5)_"00"
"RTN","IBARXMC",32,0)
 S IBX=+$O(^IBAM(354.7,DFN,1,"B",IBD,0))
"RTN","IBARXMC",33,0)
 S IBM=+$P($G(^IBAM(354.7,DFN,1,IBX,0)),"^",2)
"RTN","IBARXMC",34,0)
 S IBY=0,IBZ=IBFD-1 F  S IBZ=$O(^IBAM(354.7,DFN,1,"B",IBZ)) Q:IBZ<1!(IBZ>IBTD)  S IBX=$O(^IBAM(354.7,DFN,1,"B",IBZ,0)) I IBX S IBY=IBY+$P($G(^IBAM(354.7,DFN,1,IBX,0)),"^",2)
"RTN","IBARXMC",35,0)
 Q IBM_"^"_IBY
"RTN","IBARXMC",36,0)
 ;
"RTN","IBARXMC",37,0)
CAP(IBD,IBP,IBM,IBY,IBF,IBT) ; returns the cap amount and dates
"RTN","IBARXMC",38,0)
 ; IBD = date of transaction
"RTN","IBARXMC",39,0)
 ; IBP = priority level of patient
"RTN","IBARXMC",40,0)
 ;    return (by reference):
"RTN","IBARXMC",41,0)
 ; IBM = monthly cap amount
"RTN","IBARXMC",42,0)
 ; IBY = yearly cap amount
"RTN","IBARXMC",43,0)
 ; IBF = from date for yearly cap determination
"RTN","IBARXMC",44,0)
 ; IBT = to date for yearly cap determination
"RTN","IBARXMC",45,0)
 N IBX,IBDT
"RTN","IBARXMC",46,0)
 I $D(^IBAM(354.75,"AC",IBP,IBD)) S IBX=+$O(^(IBD,0)) G CAPC
"RTN","IBARXMC",47,0)
 S IBDT=+$O(^IBAM(354.75,"AC",IBP,IBD),-1),IBX=+$O(^(IBDT,0))
"RTN","IBARXMC",48,0)
CAPC ;
"RTN","IBARXMC",49,0)
 S IBX=$G(^IBAM(354.75,IBX,0))
"RTN","IBARXMC",50,0)
 I 'IBX!($P(IBX,"^",5)&(IBD>$P(IBX,"^",5))) S (IBM,IBY,IBF,IBT)=0 Q
"RTN","IBARXMC",51,0)
 S IBM=$P(IBX,"^",3),IBY=$P(IBX,"^",4)
"RTN","IBARXMC",52,0)
 S IBDT=$P($$FYCY^IBCU8(IBD),"^",$S($P(IBX,"^",6)="C":1,1:3),$S($P(IBX,"^",6)="C":2,1:4))
"RTN","IBARXMC",53,0)
 S IBF=$S($P(IBDT,"^")>IBX:$P(IBDT,"^"),1:+IBX)
"RTN","IBARXMC",54,0)
 S IBT=$S('$P(IBX,"^",5):$P(IBDT,"^",2),$P(IBDT,"^",2)<$P(IBX,"^",5):$P(IBDT,"^",2),1:$P(IBX,"^",5))
"RTN","IBARXMC",55,0)
 ;
"RTN","IBARXMC",56,0)
 Q
"RTN","IBARXMC",57,0)
 ;
"RTN","IBARXMC",58,0)
FLAG(DFN,IBD) ; flag account if at or above cap
"RTN","IBARXMC",59,0)
 ; IBD = date of transaction (mo/year fm format)
"RTN","IBARXMC",60,0)
 ; flag in account is set to:  2 = cap exceeded, some copays not billed
"RTN","IBARXMC",61,0)
 ;                             1 = cap reached
"RTN","IBARXMC",62,0)
 ;                             0 = below cap
"RTN","IBARXMC",63,0)
 ;
"RTN","IBARXMC",64,0)
 N IBC,IBB,IBZ,IBF,IBX,DIE,DR,DA,X,Y,IBFD,IBTD,IBY
"RTN","IBARXMC",65,0)
 S IBX=+$O(^IBAM(354.7,DFN,1,"B",IBD,0)) Q:'IBX
"RTN","IBARXMC",66,0)
 S IBZ=$G(^IBAM(354.7,DFN,1,IBX,0))
"RTN","IBARXMC",67,0)
 D CAP(IBD+1,+$$PRIORITY^IBARXMU(DFN),.IBC,.IBY,.IBFD,.IBTD)
"RTN","IBARXMC",68,0)
 S IBB=$$BILLED(DFN,IBD,IBFD,IBTD)
"RTN","IBARXMC",69,0)
 S IBF=$S('IBC&('IBY):0,$P(IBZ,"^",4):2,IBC=+IBB:1,IBY=$P(IBB,"^",2):1,1:0)
"RTN","IBARXMC",70,0)
 I IBF'=$P(IBZ,"^",3) S DIE="^IBAM(354.7,"_DFN_",1,",DA=IBX,DR=".03///^S X=IBF",DA(1)=DFN L +^IBAM(354.7,DFN):10 I $T D ^DIE L -^IBAM(354.7,DFN)
"RTN","IBARXMC",71,0)
 Q
"RTN","IBARXMC",72,0)
 ;
"RTN","IBARXMC",73,0)
PARENT(X) ; returns the parent entry in 354.71 for a transaction
"RTN","IBARXMC",74,0)
 Q +$P($G(^IBAM(354.71,X,0)),"^",10)
"RTN","IBARXMC",75,0)
 ;
"RTN","IBARXMC",76,0)
NET(X) ; returns net amount billed for a parent and its children
"RTN","IBARXMC",77,0)
 ; X = ien from 354.71 (parent or child) output: billed ^ un-billed
"RTN","IBARXMC",78,0)
 ;
"RTN","IBARXMC",79,0)
 N Y,Z,B,N,P S P=$$PARENT(X),(Y,B,N)=0 F  S Y=$O(^IBAM(354.71,"AF",P,Y)) Q:Y<1  S Z=^IBAM(354.71,Y,0),B=B+$P(Z,"^",11),N=N+$P(Z,"^",12)
"RTN","IBARXMC",80,0)
 Q B_"^"_N
"RTN","IBARXMC",81,0)
 ;
"RTN","IBARXMC",82,0)
CANCEL(DFN,IBDT) ; receives notification of a cancellation and determines
"RTN","IBARXMC",83,0)
 ; if more need to be billed.  IBDT should be in fm format date to check
"RTN","IBARXMC",84,0)
 ;
"RTN","IBARXMC",85,0)
 N IBT,IBTFL,IBX,IBD,IBFD,IBTD,IBDTQ,IBBIL,IBS1,IBS2
"RTN","IBARXMC",86,0)
 ;
"RTN","IBARXMC",87,0)
 ; first determine if cap reached or quit
"RTN","IBARXMC",88,0)
 ;Q:'$P($G(^IBAM(354.7,DFN,1,+$O(^IBAM(354.7,DFN,1,"B",IBDT,0)),0)),"^",3)
"RTN","IBARXMC",89,0)
 ;
"RTN","IBARXMC",90,0)
C1 ; get starting values
"RTN","IBARXMC",91,0)
 S IBS=+$$SITE^IBARXMU
"RTN","IBARXMC",92,0)
 S IBP=+$$PRIORITY^IBARXMU(DFN)
"RTN","IBARXMC",93,0)
 D CAP(IBDT+1,IBP,.IBZ,.IBY,.IBFD,.IBTD)
"RTN","IBARXMC",94,0)
 I ('IBY&('IBZ))!('IBFD)!('IBTD) Q
"RTN","IBARXMC",95,0)
 S IBA=$$BILLED(DFN,IBDT+1,IBFD,IBTD),IBE=$P(IBA,"^",2)
"RTN","IBARXMC",96,0)
 ;
"RTN","IBARXMC",97,0)
 ; query (if any) other facilities to see what is there.
"RTN","IBARXMC",98,0)
C2 S IBT=$$TFL^IBARXMU(DFN,.IBTFL)
"RTN","IBARXMC",99,0)
 I IBT W:'$D(ZTQUEUED) !,"This patient is being seen at other VA treating facilities. I need to make",!,"sure there are no Rx fills that have not been billed elsewhere." S IBX=0 F  S IBX=$O(IBTFL(IBX)) Q:IBX<1  D
"RTN","IBARXMC",100,0)
 . I '$D(ZTQUEUED) U IO W !,"Now sending queries to ",$P(IBTFL(IBX),"^",2)," ..."
"RTN","IBARXMC",101,0)
 . S IBDTQ=IBFD F  D  S IBDTQ=$$NEXTMO(IBDTQ) Q:IBDTQ>IBTD
"RTN","IBARXMC",102,0)
 .. D UQUERY^IBARXMU(DFN,$E(IBDTQ,1,5)_"00",+IBTFL(IBX),.IBD)
"RTN","IBARXMC",103,0)
 .. I $P(IBD(0),"^")=-1!(-1=+IBD) K IBD Q
"RTN","IBARXMC",104,0)
 .. S X=1 F  S X=$O(IBD(X)) Q:X<1  S IBD=$$ADD^IBARXMN(DFN,IBD(X))
"RTN","IBARXMC",105,0)
 .. K IBD
"RTN","IBARXMC",106,0)
 I '$D(ZTQUEUED) U IO
"RTN","IBARXMC",107,0)
 ;
"RTN","IBARXMC",108,0)
C3 K ^TMP("IBD",$J)
"RTN","IBARXMC",109,0)
 ; now lets see if there are some unbilled that can be billed.
"RTN","IBARXMC",110,0)
 S IBDTQ=IBFD F  D  S IBDTQ=$$NEXTMO(IBDTQ) Q:IBDTQ>IBTD
"RTN","IBARXMC",111,0)
 . S IBX=0 F  S IBX=$O(^IBAM(354.71,"AD",DFN,$E(IBDTQ,1,5)_"00",IBX)) Q:IBX<1  D
"RTN","IBARXMC",112,0)
 .. N IBZ S IBZ=^IBAM(354.71,IBX,0)
"RTN","IBARXMC",113,0)
 .. ;
"RTN","IBARXMC",114,0)
 .. ; check, am I the parent and still have some unbilled
"RTN","IBARXMC",115,0)
 .. I $P(IBZ,"^",10)'=IBX!('$P($$NET(IBX),"^",2)) Q
"RTN","IBARXMC",116,0)
 .. ;
"RTN","IBARXMC",117,0)
 .. ; ^TMP("IBD",$J format(date of transaction,date/time entry added,ien)
"RTN","IBARXMC",118,0)
 .. S ^TMP("IBD",$J,$P(IBZ,"^",3),$P(IBZ,"^",15),IBX)=IBZ
"RTN","IBARXMC",119,0)
 ;
"RTN","IBARXMC",120,0)
 I '$D(^TMP("IBD",$J)) W:'$D(ZTQUEUED) !,"No un-billed transactions exist" Q
"RTN","IBARXMC",121,0)
 ;
"RTN","IBARXMC",122,0)
 ; how much more can we bill
"RTN","IBARXMC",123,0)
C4 S IBB=$S('IBZ&('IBY):9999999,IBZ&((IBZ-IBA)<(IBY-IBE)):IBZ-IBA,1:IBY-IBE)
"RTN","IBARXMC",124,0)
 ;
"RTN","IBARXMC",125,0)
 ; we now have to bill some of the unbilled ones
"RTN","IBARXMC",126,0)
 S IBS1=0 F  S IBS1=$O(^TMP("IBD",$J,IBS1)) Q:IBS1<1  S IBS2=0 F  S IBS2=$O(^TMP("IBD",$J,IBS1,IBS2)) Q:IBS2<1  S IBX=0 F  S IBX=$O(^TMP("IBD",$J,IBS1,IBS2,IBX)) Q:IBX<1  D
"RTN","IBARXMC",127,0)
 . S IBZ=^TMP("IBD",$J,IBS1,IBS2,IBX)
"RTN","IBARXMC",128,0)
 . ;
"RTN","IBARXMC",129,0)
C5 . ; determine how much to bill (if any)
"RTN","IBARXMC",130,0)
 . S IBA=$$NET(IBX)
"RTN","IBARXMC",131,0)
 . S IBBIL=$S(IBB>$P(IBA,"^",2):$P(IBA,"^",2),1:IBB)
"RTN","IBARXMC",132,0)
 . I 'IBBIL S IBS1=9999999999 Q
"RTN","IBARXMC",133,0)
 . S IBB=IBB-IBBIL
"RTN","IBARXMC",134,0)
 . ;quit if IBBIL is less than zero IB*552 ticket 956230
"RTN","IBARXMC",135,0)
 . Q:IBBIL<0
"RTN","IBARXMC",136,0)
 . D @($S(IBS=+IBZ:"BILL",1:"SEND")_"^IBARXMB($P(IBZ,""^""),IBBIL)")
"RTN","IBARXMC",137,0)
 K ^TMP("IBD",$J)
"RTN","IBARXMC",138,0)
 Q
"RTN","IBARXMC",139,0)
 ;
"RTN","IBARXMC",140,0)
NEXTMO(DATE) ; returns first date of next month
"RTN","IBARXMC",141,0)
 N X S X="",DATE=$G(DATE)\1 I DATE'?7N G NEXTMOQ
"RTN","IBARXMC",142,0)
 S X=$S($E(DATE,4,5)<12:$E(DATE,1,5)+1_"01",1:$E(DATE,1,3)+1_"0101")
"RTN","IBARXMC",143,0)
NEXTMOQ Q X
"RTN","IBARXMC",144,0)
 ;
"RTN","IBARXMC",145,0)
QCAN(DFN,IBCAP,IBSAVXMC) ; queue off job to look for back billing in the background
"RTN","IBARXMC",146,0)
 N ZTRTN,ZTDTH,ZTIO,ZTDESC,ZTSK,ZTSAVE,Y,IBTAG
"RTN","IBARXMC",147,0)
 ;
"RTN","IBARXMC",148,0)
 S ZTRTN="DQCAN^IBARXMC",ZTDESC="IB Back Billing of Rx Copay Charges"
"RTN","IBARXMC",149,0)
 S ZTDTH=$$FMTH^XLFDT($$FMADD^XLFDT($$NOW^XLFDT,"","",10))
"RTN","IBARXMC",150,0)
 S (ZTSAVE("DFN"),ZTSAVE("IBCAP("),ZTSAVE("IBSAVXMC("),ZTIO)="" D ^%ZTLOAD
"RTN","IBARXMC",151,0)
 ;
"RTN","IBARXMC",152,0)
 I ZTSK<1 S IBTAG=3,Y="^^Error when trying to queue back billing job." D BULL^IBAERR
"RTN","IBARXMC",153,0)
 ;
"RTN","IBARXMC",154,0)
 Q
"RTN","IBARXMC",155,0)
 ;
"RTN","IBARXMC",156,0)
DQCAN ; entry point for queued back billing job
"RTN","IBARXMC",157,0)
 N IBD,IBL,IBPAT,IBREF,IBSSN,IBTAG,Y
"RTN","IBARXMC",158,0)
 ;
"RTN","IBARXMC",159,0)
 ; try to get a lock
"RTN","IBARXMC",160,0)
 S IBL=0 F X=1:1:10 L +^IBAM(354.7,"APAT",DFN):10 H:'$T 600 I $T S IBL=1 Q
"RTN","IBARXMC",161,0)
 I 'IBL D  Q
"RTN","IBARXMC",162,0)
 .S IBTAG=3
"RTN","IBARXMC",163,0)
 .S IBPAT=$P($G(^DPT(DFN,0)),"^",1) I IBPAT="" S IBPAT=DFN
"RTN","IBARXMC",164,0)
 .S IBSSN=$P($G(^DPT(DFN,0)),"^",9) I IBSSN="" S IBSSN="????"
"RTN","IBARXMC",165,0)
 .S (X,IBREF)=""
"RTN","IBARXMC",166,0)
 .F  S X=$O(IBSAVXMC(X)) Q:X=""  D
"RTN","IBARXMC",167,0)
 ..I IBREF'="" S IBREF=IBREF_", "_$P(IBSAVXMC(X),"^",1)
"RTN","IBARXMC",168,0)
 ..I IBREF="" S IBREF=$P(IBSAVXMC(X),"^",1)
"RTN","IBARXMC",169,0)
 .S Y="^^Unable to lock the IB PATIENT COPAY ACCOUNT (#354.7) file for back billing job related to "_IBPAT_" ("_IBSSN_") and IB reference number(s): "_IBREF_"."
"RTN","IBARXMC",170,0)
 .D ^IBAERR Q
"RTN","IBARXMC",171,0)
 ;
"RTN","IBARXMC",172,0)
 ; do query/back billing
"RTN","IBARXMC",173,0)
 S IBD=0 F  S IBD=$O(IBCAP(IBD)) Q:IBD<1  D CANCEL(DFN,IBD)
"RTN","IBARXMC",174,0)
 ;
"RTN","IBARXMC",175,0)
 ; remove lock
"RTN","IBARXMC",176,0)
 L -^IBAM(354.7,"APAT",DFN)
"RTN","IBARXMC",177,0)
 ;
"RTN","IBARXMC",178,0)
 Q
"RTN","IBARXMN")
0^4^B34322540
"RTN","IBARXMN",1,0)
IBARXMN ;LL/ELZ-PHARMCAY COPAY CAP RX PROCESSING ;17-NOV-2000
"RTN","IBARXMN",2,0)
 ;;2.0;INTEGRATED BILLING;**150,158,156,186,308,563**;21-MAR-94;Build 12
"RTN","IBARXMN",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARXMN",4,0)
 ;
"RTN","IBARXMN",5,0)
TRACK(DFN) ; checks out patient if tracked already
"RTN","IBARXMN",6,0)
 I '$D(^IBAM(354.7,DFN,0)) D QUERY(DFN,$E(DT,1,5)_"00")
"RTN","IBARXMN",7,0)
 Q
"RTN","IBARXMN",8,0)
 ;
"RTN","IBARXMN",9,0)
QUERY(DFN,IBDT) ; if there are treating facilities, perform query
"RTN","IBARXMN",10,0)
 N IBT,IBX,IBS,IBD,IBB,DIE,DA,DR,X,IBA,IBP,IBZ,IBY,IBFD,IBTD
"RTN","IBARXMN",11,0)
 S IBB=0,IBP=$$PRIORITY^IBARXMU(DFN)
"RTN","IBARXMN",12,0)
 D ADD^IBARXMU(DFN) Q:'IBP
"RTN","IBARXMN",13,0)
 S IBT=$$TFL^IBARXMU(DFN,.IBT) Q:'IBT
"RTN","IBARXMN",14,0)
 D CAP^IBARXMC(IBDT,IBP,.IBZ,.IBY,.IBFD,.IBTD) I 'IBY,'IBZ Q
"RTN","IBARXMN",15,0)
 I 'IBFD!('IBTD) Q
"RTN","IBARXMN",16,0)
 W !!,"This patient has never had billing information tracked before",!,"Now querying other facilities..."
"RTN","IBARXMN",17,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  W !,"Now sending query to ",$P(IBT(IBX),"^",2)," ..." D
"RTN","IBARXMN",18,0)
 . ;
"RTN","IBARXMN",19,0)
 . ; need to query every month in the cap billing period
"RTN","IBARXMN",20,0)
 . S IBDT=IBFD D  F  S IBDT=$$NEXTMO^IBARXMC(IBDT) Q:IBDT>IBTD  D
"RTN","IBARXMN",21,0)
 .. D UQUERY^IBARXMU(DFN,$E(IBDT,1,5)_"00",IBX,.IBD)
"RTN","IBARXMN",22,0)
 .. ;
"RTN","IBARXMN",23,0)
 .. ; error returned
"RTN","IBARXMN",24,0)
 .. I -1=+$G(IBD,"-1") Q
"RTN","IBARXMN",25,0)
 .. ;
"RTN","IBARXMN",26,0)
 .. ; loop through query and file data
"RTN","IBARXMN",27,0)
 .. S X=0 F  S X=$O(IBD(X)) Q:X<1  S:$E(IBD(X),1,4)=+IBT(IBX)_"-" IBA=$$ADD(DFN,IBD(X)),IBB=IBB+$P(IBD(X),"^",11)
"RTN","IBARXMN",28,0)
 .. K IBD
"RTN","IBARXMN",29,0)
 ;
"RTN","IBARXMN",30,0)
 Q
"RTN","IBARXMN",31,0)
 ;
"RTN","IBARXMN",32,0)
ACCT(DFN,IBB,IBU,IBDT,IBS) ; - update amount in patient account
"RTN","IBARXMN",33,0)
 ; IBB = amount to be added to pt account (billed)
"RTN","IBARXMN",34,0)
 ; IBU = amount to be added to pt account (not billable)
"RTN","IBARXMN",35,0)
 ; IBDT = effective date for amount
"RTN","IBARXMN",36,0)
 ; IBS = flag, if passed the amounts are totals not to be added to what is already there
"RTN","IBARXMN",37,0)
 ;
"RTN","IBARXMN",38,0)
 N DIE,DR,DO,DIC,DA,Y,IBA
"RTN","IBARXMN",39,0)
 ;
"RTN","IBARXMN",40,0)
 S DA(1)=DFN,IBDT=$E(IBDT,1,5)_"00"
"RTN","IBARXMN",41,0)
 ;
"RTN","IBARXMN",42,0)
 ; check to see if there is already that mo/year there and add if not
"RTN","IBARXMN",43,0)
 S DA=$O(^IBAM(354.7,DFN,1,"B",IBDT,0))
"RTN","IBARXMN",44,0)
 I 'DA S DIC="^IBAM(354.7,"_DFN_",1,",DIC(0)="",X=IBDT D FILE^DICN S DA=+Y
"RTN","IBARXMN",45,0)
 ;
"RTN","IBARXMN",46,0)
 ; now edit and add the new amount
"RTN","IBARXMN",47,0)
 S IBA=^IBAM(354.7,DFN,1,DA,0)
"RTN","IBARXMN",48,0)
 S:'$D(IBS) IBB=IBB+$P(IBA,"^",2),IBU=IBU+$P(IBA,"^",4)
"RTN","IBARXMN",49,0)
 L +^IBAM(354.7,DFN):10 I '$T Q
"RTN","IBARXMN",50,0)
 S DIE="^IBAM(354.7,"_DFN_",1,",DR=".02///^S X=IBB;.04///^S X=IBU"
"RTN","IBARXMN",51,0)
 D ^DIE L -^IBAM(354.7,DFN)
"RTN","IBARXMN",52,0)
 ;
"RTN","IBARXMN",53,0)
 D FLAG^IBARXMC(DFN,IBDT)
"RTN","IBARXMN",54,0)
 ;
"RTN","IBARXMN",55,0)
 Q
"RTN","IBARXMN",56,0)
 ;
"RTN","IBARXMN",57,0)
UPCHG(IBX,IBU,IBC) ; update a charge (from one that is on hold only)
"RTN","IBARXMN",58,0)
 ; IBX = ien in 354.71
"RTN","IBARXMN",59,0)
 ; IBU = updated # of units
"RTN","IBARXMN",60,0)
 ; IBC = updated charge amount
"RTN","IBARXMN",61,0)
 N IBO,IBY,DIE,DA,DR
"RTN","IBARXMN",62,0)
 W !,"Updating copay cap account records..."
"RTN","IBARXMN",63,0)
 S IBO=^IBAM(354.71,IBX,0)
"RTN","IBARXMN",64,0)
 ;
"RTN","IBARXMN",65,0)
 ; first update 354.71 entry
"RTN","IBARXMN",66,0)
 S DIE="^IBAM(354.71,",DA=IBX,DR=".07///^S X=IBU;.08///^S X=IBC;.11///^S X=IBC;.05///P"
"RTN","IBARXMN",67,0)
 L +^IBAM(354.71,DA):10 I '$T W !!,"Unable to update records, entry locked!!" Q
"RTN","IBARXMN",68,0)
 D ^DIE L -^IBAM(354.71,DA)
"RTN","IBARXMN",69,0)
 ;
"RTN","IBARXMN",70,0)
 ; now update account
"RTN","IBARXMN",71,0)
 D ACCT($P(IBO,"^",2),IBC-$P(IBO,"^",11),0,$P(IBO,"^",3))
"RTN","IBARXMN",72,0)
 ;
"RTN","IBARXMN",73,0)
 ; finally clean transmission record
"RTN","IBARXMN",74,0)
 D CLEAN(IBX)
"RTN","IBARXMN",75,0)
 ;
"RTN","IBARXMN",76,0)
 Q
"RTN","IBARXMN",77,0)
CLEAN(IBX) ; clean out transmission record
"RTN","IBARXMN",78,0)
 N IBA,DA,DIK,X,Y
"RTN","IBARXMN",79,0)
 S IBA=0 F  S IBA=$O(^IBAM(354.71,IBX,1,IBA)) Q:IBA<1  S DA=IBA,DA(1)=IBX,DIK="^IBAM(354.71,"_IBX_",1," D ^DIK
"RTN","IBARXMN",80,0)
 Q
"RTN","IBARXMN",81,0)
 ;
"RTN","IBARXMN",82,0)
CANCEL(DFN,IBX,IBY,IBR) ; cancel a transaction (flags old one and creates a new one)
"RTN","IBARXMN",83,0)
 ; IBX is the ien from 354.71, IBY is the error flag (y) passed by ref
"RTN","IBARXMN",84,0)
 ; IBR is optional, it is the reason to cancel
"RTN","IBARXMN",85,0)
 ;
"RTN","IBARXMN",86,0)
 N IBN,IBD,DIE,DA,DR,X,Y
"RTN","IBARXMN",87,0)
 ;
"RTN","IBARXMN",88,0)
 ; is IBX there or is this an old transaction
"RTN","IBARXMN",89,0)
 S IBD=$G(^IBAM(354.71,+IBX,0)) I 'IBD S IBN=0 G CANQ
"RTN","IBARXMN",90,0)
 S IBAMP=$P($G(^IBAM(354.71,+$P(IBD,"^",10),0)),"^")
"RTN","IBARXMN",91,0)
 ;
"RTN","IBARXMN",92,0)
 ; set flag for at or above cap
"RTN","IBARXMN",93,0)
 S:'$D(IBCAP) IBCAP=+$P($G(^IBAM(354.7,DFN,1,+$O(^IBAM(354.7,DFN,1,"B",$E($P(IBD,"^",3),1,5)_"00",0)),0)),"^",3)
"RTN","IBARXMN",94,0)
 ;
"RTN","IBARXMN",95,0)
 ; flag old one as canceled, and clean out transmission record.
"RTN","IBARXMN",96,0)
 S DIE="^IBAM(354.71,",DA=IBX,DR=".05///Y;.16///"_DUZ_";.17///"_$$NOW^XLFDT_";.19///"_$S($D(IBR):IBR,1:16)
"RTN","IBARXMN",97,0)
 L +^IBAM(354.71,IBX):5 I '$T S IBY="-1^IB318",IBN=0 G CANQ
"RTN","IBARXMN",98,0)
 D ^DIE L -^IBAM(354.71,IBX)
"RTN","IBARXMN",99,0)
 D CLEAN(IBX)
"RTN","IBARXMN",100,0)
 ;
"RTN","IBARXMN",101,0)
 ; now create new transaction to adjust amounts
"RTN","IBARXMN",102,0)
 ; first set up parent, clear out .01, set facility, - dollar amt, status
"RTN","IBARXMN",103,0)
 S $P(IBD,"^",10)=$P(IBD,"^"),$P(IBD,"^")="",$P(IBD,"^",13)=+$P($$FAC^IBARXMU(+$$SITE^IBARXMU),"^",2),$P(IBD,"^",11)=-$P(IBD,"^",11),$P(IBD,"^",12)=-$P(IBD,"^",12),$P(IBD,"^",5)="P"
"RTN","IBARXMN",104,0)
 S IBN=$$ADD(DFN,$P(IBD,"^",1,13)_"^^^^^^^"_$P(IBD,"^",20)) I IBN<1 S IBY="-1^IB316"
"RTN","IBARXMN",105,0)
 ;
"RTN","IBARXMN",106,0)
 ; set up variable to check for cap and re-bill if necessary
"RTN","IBARXMN",107,0)
 S IBCAP($E($P(IBD,"^",3),1,5)_"00")=""
"RTN","IBARXMN",108,0)
 ;
"RTN","IBARXMN",109,0)
 ; now check to see if the patient has previously reached cap and has some unbilled (only if not updating, check for flag)
"RTN","IBARXMN",110,0)
 ;I '$G(IBUPDATE) D CANCEL^IBARXMC(DFN,$P(IBD,"^",3))
"RTN","IBARXMN",111,0)
 ;D CANCEL^IBARXMC(DFN,$P(IBD,"^",3))
"RTN","IBARXMN",112,0)
 ;
"RTN","IBARXMN",113,0)
CANQ Q IBN
"RTN","IBARXMN",114,0)
 ;
"RTN","IBARXMN",115,0)
ADD(DFN,IBD,IBT,IBPFSS) ; adds a transaction to 354.71
"RTN","IBARXMN",116,0)
 ; IBD = data in 354.71 format, if $p(IBD,"^")="" create new number
"RTN","IBARXMN",117,0)
 ; IBT = action type pointer (optional, but needed for local site)
"RTN","IBARXMN",118,0)
 ; returns ien in 354.71
"RTN","IBARXMN",119,0)
 ; IBPFSS optional to indicate came from PFSS system
"RTN","IBARXMN",120,0)
 ;
"RTN","IBARXMN",121,0)
 N IBA,DIC,X,IBS,IBN
"RTN","IBARXMN",122,0)
 Q:'$G(DFN)
"RTN","IBARXMN",123,0)
 D ADD^IBARXMU(DFN)
"RTN","IBARXMN",124,0)
 I $P(IBD,"^") S IBA=$O(^IBAM(354.71,"B",$P(IBD,"^"),0)) D  Q IBA
"RTN","IBARXMN",125,0)
 . ;I IBA D TRANF(DFN,IBA,IBD,$G(IBT)) Q
"RTN","IBARXMN",126,0)
 . I 'IBA S DIC="^IBAM(354.71,",DIC(0)="",X=$P(IBD,"^") D FILE^DICN S IBA=+Y
"RTN","IBARXMN",127,0)
 . I IBA>0 D TRANF(DFN,IBA,IBD,$G(IBT)),ACCT(DFN,$P(IBD,"^",11),$P(IBD,"^",12),$P(IBD,"^",3))
"RTN","IBARXMN",128,0)
 K DO S DIC="^IBAM(354.71,",DIC(0)="",IBS=+$P($$SITE^IBARXMU,"^",3)
"RTN","IBARXMN",129,0)
 ;
"RTN","IBARXMN",130,0)
 ; get next number and file
"RTN","IBARXMN",131,0)
 F  L +^IBAM(354.71,0):20 I $T S IBN=$P(^IBAM(354.71,0),"^",3) S:'IBN IBN=0 Q
"RTN","IBARXMN",132,0)
 I +$G(^IBAM(354.71,+IBN,0))'=IBS,IBN F  S IBN=$O(^IBAM(354.71,IBN),-1) Q:IBS=+$G(^IBAM(354.71,IBN,0))!('IBN)
"RTN","IBARXMN",133,0)
 S IBN=$P($P($G(^IBAM(354.71,+IBN,0)),"^"),"-",2)+1 F IBN=IBN:1 S X=IBS_"-"_IBN I '$D(^IBAM(354.71,"B",X)) L +^IBAM(354.71,"B",X):10 I $T D FILE^DICN L -^IBAM(354.71,"B",X) I Y>0 S IBA=+Y Q
"RTN","IBARXMN",134,0)
 L -^IBAM(354.71,0)
"RTN","IBARXMN",135,0)
 ;
"RTN","IBARXMN",136,0)
 D TRANF(DFN,IBA,IBD,$G(IBT),$G(IBPFSS)),ACCT(DFN,$P(IBD,"^",11),$P(IBD,"^",12),$P(IBD,"^",3))
"RTN","IBARXMN",137,0)
 ;I '$G(IBUPDATE) D CANCEL^IBARXMC(DFN,$P(IBD,"^",3))
"RTN","IBARXMN",138,0)
 ;
"RTN","IBARXMN",139,0)
 Q IBA
"RTN","IBARXMN",140,0)
 ;
"RTN","IBARXMN",141,0)
TRANF(DFN,IBA,IBD,IBT,IBPFSS) ; file transaction data in 354.71
"RTN","IBARXMN",142,0)
 ; DFN = patient's dfn
"RTN","IBARXMN",143,0)
 ; IBA = ien from file 354.71
"RTN","IBARXMN",144,0)
 ; IBD = data in global file format for file 354.71
"RTN","IBARXMN",145,0)
 ; piece 2 will be changed to dfn
"RTN","IBARXMN",146,0)
 ; pieces 10 and 13 will be resolved
"RTN","IBARXMN",147,0)
 ; pieces 14,15 will be created new if they don't exist
"RTN","IBARXMN",148,0)
 ; pieces 16,17 will be created new
"RTN","IBARXMN",149,0)
 ; piece 18 will be filled if not $g(IBT)=""
"RTN","IBARXMN",150,0)
 ;
"RTN","IBARXMN",151,0)
 N X,Y,IBZ,IBN,D,IBU,DIC,IBPAR,DA,DIK Q:'$D(^IBAM(354.71,IBA,0))
"RTN","IBARXMN",152,0)
 ;
"RTN","IBARXMN",153,0)
 X $S($P(IBD,"^")=$P(IBD,"^",10):"S $P(IBD,""^"",10)=IBA",1:"S X=$P(IBD,""^"",10),D=""B"",DIC=""^IBAM(354.71,"",DIC(0)=""OX"" D IX^DIC S $P(IBD,""^"",10)=$S(Y>0:+Y,1:"""")")
"RTN","IBARXMN",154,0)
 S IBPAR=$$PARENT^IBARXMC(+$P(IBD,"^",10)) S:IBPAR $P(IBD,"^",10)=IBPAR
"RTN","IBARXMN",155,0)
 S DIC="^DIC(4,",DIC(0)="O",X=$P(IBD,"^",13),D="D" D IX^DIC
"RTN","IBARXMN",156,0)
 S IBS=$S(Y>0:+Y,1:"")
"RTN","IBARXMN",157,0)
 S IBN=$$NOW^XLFDT,IBU=$P(^IBAM(354.71,IBA,0),"^",14,15)
"RTN","IBARXMN",158,0)
 ;
"RTN","IBARXMN",159,0)
 S $P(^IBAM(354.71,IBA,0),"^",2,18)=DFN_"^"_$P(IBD,"^",3,12)_"^"_IBS_"^"_$S(+IBU:+IBU,$D(IBDUZ):IBDUZ,1:DUZ)_"^"_$S($P(IBU,"^",2):$P(IBU,"^",2),1:IBN)_"^"_$S($D(IBDUZ):IBDUZ,1:DUZ)_"^"_IBN_$S($G(IBT):"^"_IBT,1:"")
"RTN","IBARXMN",160,0)
 S:$P(IBD,"^",20) $P(^IBAM(354.71,IBA,0),"^",20)=$P(IBD,"^",20)
"RTN","IBARXMN",161,0)
 S DA=IBA,DIK="^IBAM(354.71," D IX^DIK
"RTN","IBARXMN",162,0)
 Q
"RTN","IBARXMQ")
0^18^B16386930
"RTN","IBARXMQ",1,0)
IBARXMQ ;LL/ELZ-RX COPAY RPC QUERY ROUTINE (MILL BILL) ;10-OCT-2000
"RTN","IBARXMQ",2,0)
 ;;2.0;INTEGRATED BILLING;**150,156,186,199,563**;21-MAR-94;Build 12
"RTN","IBARXMQ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARXMQ",4,0)
 ;
"RTN","IBARXMQ",5,0)
EN ; main entry point for users to request a query of rx bills from all possible facilities
"RTN","IBARXMQ",6,0)
 N DIC,X,Y,DFN,IBT,IBTFL,%,%ZIS,ZTSAVE,POP,ZTSK,DIR,IBDT,IBPAT,IBROOT
"RTN","IBARXMQ",7,0)
 ;
"RTN","IBARXMQ",8,0)
 ; select patient, and get pt info
"RTN","IBARXMQ",9,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBARXMQ",10,0)
 S DIC="^DPT(",DIC(0)="AEMNQ" D ^DIC Q:Y<1  S DFN=+Y
"RTN","IBARXMQ",11,0)
 D DEM^VADPT S IBPAT=VADM(1)_"^"_VA("BID") D KVAR^VADPT
"RTN","IBARXMQ",12,0)
 ;
"RTN","IBARXMQ",13,0)
 ; ask for month / year
"RTN","IBARXMQ",14,0)
 S DIR(0)="D^::AEMP",DIR("A")="For What Month/Year" D ^DIR Q:Y<1
"RTN","IBARXMQ",15,0)
 S IBDT=Y
"RTN","IBARXMQ",16,0)
 ;
"RTN","IBARXMQ",17,0)
 ; scan for patient to see if different facilities could be involved
"RTN","IBARXMQ",18,0)
 S IBT=$$TFL^IBARXMU(DFN,.IBTFL)
"RTN","IBARXMQ",19,0)
 ;
"RTN","IBARXMQ",20,0)
 ; if multiple facilities ask if we should check
"RTN","IBARXMQ",21,0)
 I IBT W !,"This patient could have Pharmacy Co-payment bills at other facilities",!,"Do you want to check those other facilities" S %=0 D YN^DICN S:%'=1 IBT=0 Q:%<0
"RTN","IBARXMQ",22,0)
 ;
"RTN","IBARXMQ",23,0)
 ; now for a device
"RTN","IBARXMQ",24,0)
 S %ZIS="MQ" D ^%ZIS Q:POP
"RTN","IBARXMQ",25,0)
 I $D(IO("Q")) D  Q
"RTN","IBARXMQ",26,0)
 . N ZTDESC,ZTRTN
"RTN","IBARXMQ",27,0)
 . S ZTRTN="DQ^IBARXMQ",(ZTSAVE("DFN"),ZTSAVE("IB*"))=""
"RTN","IBARXMQ",28,0)
 . S ZTDESC="PHARMACY BILLING SUMMARY"
"RTN","IBARXMQ",29,0)
 . D ^%ZTLOAD,HOME^%ZIS K IO("Q") W !,"Task# ",ZTSK
"RTN","IBARXMQ",30,0)
 ;
"RTN","IBARXMQ",31,0)
DQ ; tasked entry point
"RTN","IBARXMQ",32,0)
 ;
"RTN","IBARXMQ",33,0)
 N IBD,IBER,X,IBX,IBC,IBB,IBU,DIRUT,IBE,IBP,IBAR K ^TMP("IBARXM",$J)
"RTN","IBARXMQ",34,0)
 ;
"RTN","IBARXMQ",35,0)
 ; remote stuff, file locally
"RTN","IBARXMQ",36,0)
 I IBT S IBX=0 F  S IBX=$O(IBTFL(IBX)) Q:IBX<1  D
"RTN","IBARXMQ",37,0)
 . W:'$D(ZTQUEUED) !,"Now sending query to ",$P(IBTFL(IBX),"^",2)," ..."
"RTN","IBARXMQ",38,0)
 . D QUERY^IBARXMU(DFN,IBDT,+IBTFL(IBX),.IBD)
"RTN","IBARXMQ",39,0)
 . I $P(IBD(0),"^")=-1!(-1=+IBD)!($P($G(IBD(1)),"^")=-1) S IBER=1 K IBD Q
"RTN","IBARXMQ",40,0)
 . S X=1 F  S X=$O(IBD(X)) Q:X<1  S IBD=$$ADD^IBARXMN(DFN,IBD(X))
"RTN","IBARXMQ",41,0)
 . K IBD
"RTN","IBARXMQ",42,0)
 ;
"RTN","IBARXMQ",43,0)
 ; stuff on local file w/remote stuff, build tmp
"RTN","IBARXMQ",44,0)
 S (IBC,IBX)=0 F  S IBX=$O(^IBAM(354.71,"AD",DFN,IBDT,IBX)) Q:IBX<1  S IBC=IBC+1,IBD=^IBAM(354.71,IBX,0),IBAR=$P($P($G(^IB(+$P(IBD,"^",4),0)),"^",11),"-",2),^TMP("IBARXM",$J,$P(IBD,"^",3),IBC)=IBD,^(IBC,"AR")=IBAR
"RTN","IBARXMQ",45,0)
 ;
"RTN","IBARXMQ",46,0)
 ;
"RTN","IBARXMQ",47,0)
PRINT ;
"RTN","IBARXMQ",48,0)
 U IO
"RTN","IBARXMQ",49,0)
 ;
"RTN","IBARXMQ",50,0)
 S (IBP,IBE,IBB,IBU)=0 D HEAD F  S IBE=$O(^TMP("IBARXM",$J,IBE)) Q:IBE<1!($D(DIRUT))  S IBX=0 F  S IBX=$O(^TMP("IBARXM",$J,IBE,IBX)) Q:IBX<1!($D(DIRUT))  D
"RTN","IBARXMQ",51,0)
 . D:$Y+3>IOSL HEAD Q:$D(DIRUT)
"RTN","IBARXMQ",52,0)
 . S IBD=^TMP("IBARXM",$J,IBE,IBX)
"RTN","IBARXMQ",53,0)
 . W !,$E($P($$FAC^IBARXMU($$LKUP^XUAF4($P(IBD,"-"))),"^"),1,9),"(",+IBD,")"
"RTN","IBARXMQ",54,0)
 . W ?17,$G(^TMP("IBARXM",$J,IBE,IBX,"AR"))
"RTN","IBARXMQ",55,0)
 . W ?29,$$FMTE^XLFDT(IBE,"2D")
"RTN","IBARXMQ",56,0)
 . W ?40,$P(IBD,"^",20)
"RTN","IBARXMQ",57,0)
 . W ?44,$P(IBD,"^",9)
"RTN","IBARXMQ",58,0)
 . W ?67,$J($P(IBD,"^",11),6,2)
"RTN","IBARXMQ",59,0)
 . W ?74,$J($P(IBD,"^",12),6,2)
"RTN","IBARXMQ",60,0)
 . S IBB=IBB+$P(IBD,"^",11),IBU=IBU+$P(IBD,"^",12)
"RTN","IBARXMQ",61,0)
 I $D(DIRUT) G Q
"RTN","IBARXMQ",62,0)
 W !!?67,"-------",?74,"------"
"RTN","IBARXMQ",63,0)
 W !?67,$J(IBB,6,2),?75,$J(IBU,5,2)
"RTN","IBARXMQ",64,0)
 ;
"RTN","IBARXMQ",65,0)
 ; update totals in the patient's account
"RTN","IBARXMQ",66,0)
 X $S($D(IBER):"W !!,""Unable to perform all remote queries, totals will not be updated!""",IBT=0&($D(IBTFL)):"W !!,""No remote queries needed/performed, account not updated.""",1:"D ACCT^IBARXMN(DFN,IBB,IBU,IBDT,1)")
"RTN","IBARXMQ",67,0)
 ;
"RTN","IBARXMQ",68,0)
 I $E(IOST,1,2)="C-",'$D(DIRUT) N DIR,X,Y,DTOUT,DUOUT,DIROUT S DIR(0)="E" D ^DIR
"RTN","IBARXMQ",69,0)
 ;
"RTN","IBARXMQ",70,0)
Q K ^TMP("IBARXM",$J)
"RTN","IBARXMQ",71,0)
 D ^%ZISC
"RTN","IBARXMQ",72,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","IBARXMQ",73,0)
 Q
"RTN","IBARXMQ",74,0)
 ;
"RTN","IBARXMQ",75,0)
HEAD ; prints header info
"RTN","IBARXMQ",76,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT
"RTN","IBARXMQ",77,0)
 I IBP>0,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR Q:$D(DIRUT)
"RTN","IBARXMQ",78,0)
 S IBP=IBP+1
"RTN","IBARXMQ",79,0)
 W @IOF,!,"Medication Co-Pay Billing Summary",?IOM-10,"Page: ",IBP
"RTN","IBARXMQ",80,0)
 W !,"Patient: ",$P(IBPAT,"^")," (",$P(IBPAT,"^",2),")",?IOM-11,$$FMTE^XLFDT(IBDT),!
"RTN","IBARXMQ",81,0)
 F X=0:1:IOM-1 W "-"
"RTN","IBARXMQ",82,0)
 W !,"Station          AR Bill      Date     Tier Brief Description      Billed  Not B",! F X=0:1:IOM-1 W "-"
"RTN","IBARXMQ",83,0)
 Q
"RTN","IBAUTL")
0^5^B24050910
"RTN","IBAUTL",1,0)
IBAUTL ;ALB/AAS - INTEGRATED BILLING APPLICATION UTILITIES ; 14-FEB-91
"RTN","IBAUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**93,156,347,429,563**;21-MAR-94;Build 12
"RTN","IBAUTL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBAUTL",4,0)
 ;
"RTN","IBAUTL",5,0)
 ;
"RTN","IBAUTL",6,0)
COST ;  - find charges for transaction type, when only one
"RTN","IBAUTL",7,0)
 N IBD,IBN,IB K X1
"RTN","IBAUTL",8,0)
 S IBD=-($G(IBEFDT,DT)+.9)
"RTN","IBAUTL",9,0)
 F  S IBD=$O(^IBE(350.2,"AIVDT",DA,IBD)) Q:'IBD  S IBN=0 F  S IBN=$O(^IBE(350.2,"AIVDT",DA,IBD,IBN)) Q:'IBN  S IB=$G(^IBE(350.2,IBN,0)) I IB]"",$$TIEROK^IBAUTL(IB),'$P(IB,"^",5)!($P(IB,"^",5)>$G(IBEFDT,DT)) S X1=$P(IB,"^",4) G COSTQ
"RTN","IBAUTL",10,0)
COSTQ S X1=+$G(X1)
"RTN","IBAUTL",11,0)
 I 'X1,$G(IBTIER),$D(^IBE(350.2,"AC",DA,2)) S IBTIER=2 G COST  ;default foced tier
"RTN","IBAUTL",12,0)
 I 'IBN S Y="-1^IB029" Q
"RTN","IBAUTL",13,0)
 I $L($G(^IBE(350.2,IBN,20))) X ^(20) I  S X1=X1+$P($G(^IBE(350.2,IBN,0)),"^",6)
"RTN","IBAUTL",14,0)
 Q
"RTN","IBAUTL",15,0)
TIEROK(IB) ; - if there is a tier present, make sure it matches
"RTN","IBAUTL",16,0)
 ; if not present it's OK
"RTN","IBAUTL",17,0)
 ; IB = zero node of 350.2 from COST above
"RTN","IBAUTL",18,0)
 I '$D(IBTIER) Q 1
"RTN","IBAUTL",19,0)
 I $P(IB,"^",7)=IBTIER Q 1
"RTN","IBAUTL",20,0)
 Q 0
"RTN","IBAUTL",21,0)
 ;
"RTN","IBAUTL",22,0)
FY I $D(X) S IBAFY=$$FY^IBOUTL(X)
"RTN","IBAUTL",23,0)
 Q
"RTN","IBAUTL",24,0)
 ;
"RTN","IBAUTL",25,0)
PTL ;  - parent trace logic
"RTN","IBAUTL",26,0)
 ;  - input in x resulting from field from file 350
"RTN","IBAUTL",27,0)
 ;  - output in y=1 if found, -1^error message if not found
"RTN","IBAUTL",28,0)
 ;  -           y(0) = zeroth node of top level
"RTN","IBAUTL",29,0)
 ;  -           y(1) = zeroth node of second level
"RTN","IBAUTL",30,0)
 ;  -           y(n) = zeroth node of nth level
"RTN","IBAUTL",31,0)
 ;
"RTN","IBAUTL",32,0)
 K Y
"RTN","IBAUTL",33,0)
 S Y=1 I '+X!'($D(^DIC(+X,0,"GL"))) S Y="-1^IB004" G PTLQ
"RTN","IBAUTL",34,0)
 I +X=52 G PHAPI
"RTN","IBAUTL",35,0)
 S IBAGL=^DIC(+X,0,"GL")
"RTN","IBAUTL",36,0)
 I '$D(@(IBAGL_$P($P(X,";",1),":",2)_",0)")) S Y="-1^IB005" G PTLQ
"RTN","IBAUTL",37,0)
 ;
"RTN","IBAUTL",38,0)
 ; This naked reference should be set to the original data source that
"RTN","IBAUTL",39,0)
 ; is causing this charge to be created.  The data source will be one of
"RTN","IBAUTL",40,0)
 ; many different data sources that will generate patient charges.
"RTN","IBAUTL",41,0)
 S Y(0)=^(0)
"RTN","IBAUTL",42,0)
 ;
"RTN","IBAUTL",43,0)
 F IBJJ=2:1 S IBII=$P(X,";",IBJJ) Q:IBII=""  D PTL1
"RTN","IBAUTL",44,0)
PTLQ K IBAGL,IBII,IBJJ,IBMIN
"RTN","IBAUTL",45,0)
 Q
"RTN","IBAUTL",46,0)
 ;
"RTN","IBAUTL",47,0)
PTL1 ;  - find y(n) of sublevels
"RTN","IBAUTL",48,0)
 ; Call in here with a FOR loop to go each level deeper.  This will
"RTN","IBAUTL",49,0)
 ; setup the subsripts in Y for all the data elements that go into
"RTN","IBAUTL",50,0)
 ; causing this charge to be created.  It looks in the original data
"RTN","IBAUTL",51,0)
 ; source file as approprite to obtain the information.  The naked
"RTN","IBAUTL",52,0)
 ; reference should be the last data level in the data source appropriate
"RTN","IBAUTL",53,0)
 ; data source file last looked up.
"RTN","IBAUTL",54,0)
 ;
"RTN","IBAUTL",55,0)
 S IBMIN=$P(IBII,":") I IBMIN="" S Y="-1^IB006" Q
"RTN","IBAUTL",56,0)
 I '$D(^(IBMIN,$P(IBII,":",2),0)) S Y="-1^IB006" Q
"RTN","IBAUTL",57,0)
 ;I '$D(^(+IBII,$P(IBII,":",2),0)) S Y="-1^IB006" Q
"RTN","IBAUTL",58,0)
 S Y(IBJJ-1)=^(0)
"RTN","IBAUTL",59,0)
 Q
"RTN","IBAUTL",60,0)
 ;
"RTN","IBAUTL",61,0)
CHKX ;  - check input x
"RTN","IBAUTL",62,0)
 ;  -  piece 1 = service and exists
"RTN","IBAUTL",63,0)
 ;  -  peice 2 = patient and exists
"RTN","IBAUTL",64,0)
 ;  -  piece 3 = action type
"RTN","IBAUTL",65,0)
 ;  -  piece 4 = user duz
"RTN","IBAUTL",66,0)
 S DFN=$P(X,"^",2),IBSERV=+IBSAVX
"RTN","IBAUTL",67,0)
 I $S('DFN:1,'$D(^DPT(DFN,0)):1,1:0) S Y="-1^IB002" G CHKXQ ;patient pointer bad
"RTN","IBAUTL",68,0)
 I $S('IBSERV:1,'$D(^DIC(49,IBSERV,0)):1,1:0) S Y="-1^IB003" G CHKXQ ;service pointer bad
"RTN","IBAUTL",69,0)
 I IBTAG=1 G CHKXQ
"RTN","IBAUTL",70,0)
 S IBDUZ=$P(IBSAVX,"^",4) I $S('IBDUZ:1,'$D(^VA(200,IBDUZ,0)):1,1:0) S Y="-1^IB007" G CHKXQ
"RTN","IBAUTL",71,0)
 I IBTAG=3 G CHKXQ
"RTN","IBAUTL",72,0)
 S IBATYP=$P(IBSAVX,"^",3) I $S('IBATYP:1,'$D(^IBE(350.1,IBATYP,0)):1,1:0) S Y="-1^IB008"
"RTN","IBAUTL",73,0)
CHKXQ Q
"RTN","IBAUTL",74,0)
 ;
"RTN","IBAUTL",75,0)
SITE ;  - calculate site from site parameters
"RTN","IBAUTL",76,0)
 ;  -  output ibsite = station number
"RTN","IBAUTL",77,0)
 ;  =         ibfac  = pointer to institution file
"RTN","IBAUTL",78,0)
 I '$D(^IBE(350.9,1,0)) S Y="-1^IB016" Q
"RTN","IBAUTL",79,0)
 S IBFAC=$P(^IBE(350.9,1,0),"^",2),IBSITE=$S('$D(^DIC(4,IBFAC,99)):"",1:+^(99)) I IBSITE<1 S Y="-1^IB009"
"RTN","IBAUTL",80,0)
 Q
"RTN","IBAUTL",81,0)
 ;
"RTN","IBAUTL",82,0)
ADD ;  - add new entry to ^ib
"RTN","IBAUTL",83,0)
 ;
"RTN","IBAUTL",84,0)
 N %DT,IBYCHK
"RTN","IBAUTL",85,0)
 L +^IB(0):10 I '$T S Y="-1^IB014" G ADDQ
"RTN","IBAUTL",86,0)
 S X=$P($S($D(^IB(0)):^(0),1:"^^-1"),"^",3)+1 L -^IB(0) I 'X S Y="-1^IB015" G ADDQ
"RTN","IBAUTL",87,0)
 K DD,DO,DIC,DR S DIC="^IB(",DIC(0)="L",DLAYGO=350
"RTN","IBAUTL",88,0)
 F X=X:1 L:$D(IBN1) -^IB(IBN1) I X>0,'$D(^IB(X)) S IBN1=X L +^IB(IBN1):1 I $T,'$D(^IB(X)) S DINUM=X,X=+IBSITE_X D FILE^DICN I +Y>0 Q
"RTN","IBAUTL",89,0)
 S IBN=+Y,DIE="^IB(",DA=IBN,DR=".02////"_$S($D(DFN):DFN,1:"")_";.03////"_$S($D(IBATYP):IBATYP,1:"")_";.05////1;12///NOW" D
"RTN","IBAUTL",90,0)
 . N Y D ^DIE K DA,DR,DIE I $D(Y) S IBYCHK=Y
"RTN","IBAUTL",91,0)
 L -^IB(IBN1)
"RTN","IBAUTL",92,0)
 S Y=$S('$D(IBYCHK):1,1:"-1^IB028")
"RTN","IBAUTL",93,0)
 ;
"RTN","IBAUTL",94,0)
ADDQ K DO,DD,DINUM,DIC,IBN1 Q
"RTN","IBAUTL",95,0)
 ;
"RTN","IBAUTL",96,0)
ARPARM N X S X=DT
"RTN","IBAUTL",97,0)
 D SITE,FY,NOW^%DTC S IBNOW=%
"RTN","IBAUTL",98,0)
 Q
"RTN","IBAUTL",99,0)
BILLNO ;  -get open bill number
"RTN","IBAUTL",100,0)
 I '$G(IBTOTL) S (IBIL,IBTRAN)="" G BILLQ
"RTN","IBAUTL",101,0)
 S IBARTYP=$S($D(^IBE(350.1,+IBATYP,0)):$P(^(0),"^",3),1:"")
"RTN","IBAUTL",102,0)
 S X=IBSITE_"^"_IBSERV_"^"_IBARTYP_"^"_DFN_";DPT("_"^"_IBAFY_"^"_$S($D(IBTOTL):IBTOTL,1:0)_"^"_$S($D(IBDUZ):IBDUZ,$D(DUZ):DUZ,1:0)_"^"_$P(IBNOW,".",1) D ^PRCASER I +Y<1 G BILLQ
"RTN","IBAUTL",103,0)
 S IBIL=$P(Y,"^",2),IBTRAN=$P(Y,"^",3) I IBIL="" S Y="-1^IB011" G BILLQ
"RTN","IBAUTL",104,0)
 S IBTRAN=$S(IBTRAN>0:IBTRAN,1:"")
"RTN","IBAUTL",105,0)
BILLQ Q
"RTN","IBAUTL",106,0)
 ;
"RTN","IBAUTL",107,0)
PHAPI ;
"RTN","IBAUTL",108,0)
 ;This is alternate code for Parent Trace Logic
"RTN","IBAUTL",109,0)
 ; to deal with the Pharmacy Encapsulation of Prescription File (#52)
"RTN","IBAUTL",110,0)
 ;
"RTN","IBAUTL",111,0)
 N IBRFL,IBXX,IBPT,IBRX,IBY
"RTN","IBAUTL",112,0)
 S IBXX=X,IBY=1
"RTN","IBAUTL",113,0)
 S IBRX=$P($P(IBXX,";"),":",2)
"RTN","IBAUTL",114,0)
 S IBPT=$$FILE^IBRXUTL(IBRX,2),IBY(0)=$$RXZERO^IBRXUTL(IBPT,IBRX) I IBY(0)="" S IBY="-1^IB005" G PHAPIQ
"RTN","IBAUTL",115,0)
 I $P(IBXX,";",2)="" G PHAPIQ ; original fill being billed
"RTN","IBAUTL",116,0)
 S IBRFL=$P($P(IBXX,";",2),":",2),IBY(1)=$$ZEROSUB^IBRXUTL(IBPT,IBRX,IBRFL)
"RTN","IBAUTL",117,0)
 I IBY(1)="" S IBY="-1^IB006" G PHAPIQ
"RTN","IBAUTL",118,0)
 ;
"RTN","IBAUTL",119,0)
PHAPIQ ;
"RTN","IBAUTL",120,0)
 S:$G(IBY)]"" Y=IBY
"RTN","IBAUTL",121,0)
 S:$G(IBY(0))]"" Y(0)=IBY(0)
"RTN","IBAUTL",122,0)
 S:$G(IBY(1))]"" Y(1)=IBY(1)
"RTN","IBAUTL",123,0)
 Q
"RTN","IBAUTL",124,0)
 ;
"RTN","IBAUTL",125,0)
RXTIER(DFN,IBRX,IBEFDT) ; - look up the tier of the prescription
"RTN","IBAUTL",126,0)
 ; returns the tier level of the specified prescription
"RTN","IBAUTL",127,0)
 ; the existence of the IBTIER variable means it is already determined elsewhere and we'll just use that value
"RTN","IBAUTL",128,0)
 ; default tier is always 2
"RTN","IBAUTL",129,0)
 ;
"RTN","IBAUTL",130,0)
 N IBR
"RTN","IBAUTL",131,0)
 I $D(IBTIER) Q IBTIER
"RTN","IBAUTL",132,0)
 I '$G(IBRX) Q 2
"RTN","IBAUTL",133,0)
 I $T(CPTIER^PSNAPIS)="" Q 2
"RTN","IBAUTL",134,0)
 S IBR=$$RXZERO^IBRXUTL(DFN,IBRX)
"RTN","IBAUTL",135,0)
 S IBR=$S($P(IBR,"^",6):$$DRUGF^IBRXUTL1($P(IBR,"^",6),22),1:0)
"RTN","IBAUTL",136,0)
 S IBR=$S(IBR:$$CPTIER^PSNAPIS(+IBR,IBEFDT),1:2)
"RTN","IBAUTL",137,0)
 I IBR="" S IBR=2
"RTN","IBAUTL",138,0)
 Q +IBR
"RTN","IBAUTL",139,0)
 ;
"RTN","IBAUTL",140,0)
ARCOST(DFN,DA,IBX) ; api for AR to look up the charge of a med
"RTN","IBAUTL",141,0)
 ; input:  DFN = patient pointer
"RTN","IBAUTL",142,0)
 ;         DA = 350.1 pointer
"RTN","IBAUTL",143,0)
 ;         IBX = Rx IEN
"RTN","IBAUTL",144,0)
 ; output: returns the single 30 day supply charge amount
"RTN","IBAUTL",145,0)
 ;   assumption, since AR is all about today, DT is used for the date
"RTN","IBAUTL",146,0)
 ;
"RTN","IBAUTL",147,0)
 N IBEFDT,X1,IBTIER
"RTN","IBAUTL",148,0)
 S IBTIER=$$RXTIER(DFN,IBX,DT)
"RTN","IBAUTL",149,0)
 S IBX=":"_IBX
"RTN","IBAUTL",150,0)
 D COST
"RTN","IBAUTL",151,0)
 Q X1
"RTN","IBAUTL",152,0)
 ;
"RTN","IBEBR")
0^16^B25886623
"RTN","IBEBR",1,0)
IBEBR ;ALB/AAS - Add/Edit IB ACTION CHARGE FILE ;3-MAR-92
"RTN","IBEBR",2,0)
 ;;2.0;INTEGRATED BILLING;**34,52,429,524,563**;21-MAR-94;Build 12
"RTN","IBEBR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBEBR",4,0)
 ;
"RTN","IBEBR",5,0)
% ; entry point
"RTN","IBEBR",6,0)
 D HOME^%ZIS W @IOF
"RTN","IBEBR",7,0)
EN W !!,?28,"Enter/Edit Billing Rates",!!
"RTN","IBEBR",8,0)
 S IBX="MAIN" D CHOOSE I $D(DIRUT)!('Y) G END
"RTN","IBEBR",9,0)
 I Y>0,Y<7 D @Y
"RTN","IBEBR",10,0)
 G EN
"RTN","IBEBR",11,0)
 Q
"RTN","IBEBR",12,0)
1 ;enter edit revenue code rates
"RTN","IBEBR",13,0)
 ;D EN1^IBCBR
"RTN","IBEBR",14,0)
 ;D ENR^IBEMTO ; bill MT OPT charges awaiting the new copay rate
"RTN","IBEBR",15,0)
 ;D END
"RTN","IBEBR",16,0)
 W !!,"  ******* This option is no longer active.",!,?10,"Please use the Enter/Edit Charge Master option.",!
"RTN","IBEBR",17,0)
 Q
"RTN","IBEBR",18,0)
 ;
"RTN","IBEBR",19,0)
2 ;enter per diem rate
"RTN","IBEBR",20,0)
 S IBX="PERDIEM" D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",21,0)
 D EFFDT,END
"RTN","IBEBR",22,0)
 G 2
"RTN","IBEBR",23,0)
 ;
"RTN","IBEBR",24,0)
3 ;enter medicare deductable
"RTN","IBEBR",25,0)
 S IBX="MEDIC",IBPD="MEDICARE DEDUCTIBLE" ;D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",26,0)
 D EFFDT,END Q:$G(Y)<1
"RTN","IBEBR",27,0)
 G 3
"RTN","IBEBR",28,0)
 ;
"RTN","IBEBR",29,0)
4 ;enter hcfa amb. surg. rates
"RTN","IBEBR",30,0)
 S IBX="HCFA" D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",31,0)
 D EFFDT,END
"RTN","IBEBR",32,0)
 G 4
"RTN","IBEBR",33,0)
 ;
"RTN","IBEBR",34,0)
5 ;enter rx copay rates
"RTN","IBEBR",35,0)
 N IBTIER
"RTN","IBEBR",36,0)
 S IBX="COPAY" D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",37,0)
 S IBTIER=$$TIER Q:$D(DIRUT)
"RTN","IBEBR",38,0)
 D EFFDT,END
"RTN","IBEBR",39,0)
 G 5
"RTN","IBEBR",40,0)
 ;
"RTN","IBEBR",41,0)
6 ;enter champva subsistence rates
"RTN","IBEBR",42,0)
 S IBX="CHMPVA" D CHOOSE Q:$D(DIRUT)
"RTN","IBEBR",43,0)
 D EFFDT,END
"RTN","IBEBR",44,0)
 G 6
"RTN","IBEBR",45,0)
 ;
"RTN","IBEBR",46,0)
CHOOSE S IBSEL=$P($T(@IBX),";;",2,99),IB=""
"RTN","IBEBR",47,0)
 F I=1:1 Q:$P($T(@IBX+I),";;",2,99)=""  S IB=IB_I_":"_$P($P($T(@IBX+I),";;",2,99),"^",$S($P($P($T(@IBX+1),";;",2,99),"^",5)="":1,1:5))_";"
"RTN","IBEBR",48,0)
 W !!,"CHOOSE FROM:"
"RTN","IBEBR",49,0)
 F I=1:1 S X=$P(IB,";",I) Q:'X  W !?4,+X,?20,$P(X,":",2)
"RTN","IBEBR",50,0)
 S DIR("?")="^D 1^IBEBRH",DIR("??")="^D 2^IBEBRH"
"RTN","IBEBR",51,0)
 W !! S DIR(0)="SOA^"_IB,DIR("A")="Select "_IBSEL_": " D ^DIR K DIR I $D(DIRUT) G CHOOSEQ
"RTN","IBEBR",52,0)
 S IBP=$P($T(@IBX+Y),";;",2,99) S IBPD=$P(IBP,"^",1) F I=2:1 Q:$P(IBP,"^",I)=""  S IBPD(I)=$P(IBP,"^",I)
"RTN","IBEBR",53,0)
CHOOSEQ Q
"RTN","IBEBR",54,0)
 ;
"RTN","IBEBR",55,0)
EFFDT S %DT="EX"
"RTN","IBEBR",56,0)
 R !!,"   Select Effective Date: ",X:DTIME Q:X=""  D:X["?" 3^IBEBRH I X=" ",$D(IBEFDT) S X=IBEFDT
"RTN","IBEBR",57,0)
 D ^%DT K %DT G:X["?" EFFDT Q:Y<1  S IBEFDT=+Y
"RTN","IBEBR",58,0)
 D FILE G EFFDT
"RTN","IBEBR",59,0)
 Q
"RTN","IBEBR",60,0)
 ;
"RTN","IBEBR",61,0)
FILE ;  -add new entries in 350.2 and edit
"RTN","IBEBR",62,0)
 S DLAYGO=350.2,X=IBPD,DIC="^IBE(350.2,",DIC(0)="ELMQ",DIC("S")=$S($G(IBTIER):"I $P(^(0),U,2)=IBEFDT,$P(^(0),U,7)=IBTIER",1:"I $P(^(0),U,2)=IBEFDT"),DIC("DR")=".02///"_IBEFDT D ^DIC K DIC G:+Y<0 FILEQ
"RTN","IBEBR",63,0)
 ;
"RTN","IBEBR",64,0)
 ;  -if a new entry
"RTN","IBEBR",65,0)
 S IBNEW=$P(Y,"^",3)
"RTN","IBEBR",66,0)
 K DR S DR="" S IBORIG=$O(^IBE(350.2,"B",IBPD,0)),IBLAST=$O(^IBE(350.2,"B",IBPD,+Y),-1) I IBNEW S DR=".02///"_IBEFDT_";.03///"_$P($G(^IBE(350.2,+IBORIG,0)),"^",3)_";" S:$G(IBTIER) DR=DR_".07///"_IBTIER_";"
"RTN","IBEBR",67,0)
 ;
"RTN","IBEBR",68,0)
 S DIE="^IBE(350.2,",DA=+Y,DR=DR_".04;.06;.05;" D ^DIE K DIE
"RTN","IBEBR",69,0)
 ;
"RTN","IBEBR",70,0)
 ;  -delete if no charge or not inactive
"RTN","IBEBR",71,0)
 S X=$G(^IBE(350.2,DA,0)) I '$P(X,"^",4)&('$P(X,"^",5)) W !!,*7,"Deleting - no charge, not inactive" S DIK="^IBE(350.2," D ^DIK Q
"RTN","IBEBR",72,0)
 ;
"RTN","IBEBR",73,0)
 ;  -set computed logic for new entry if needed
"RTN","IBEBR",74,0)
 S IB10=$G(^IBE(350.2,+IBORIG,10)) I IB10]"" S ^IBE(350.2,DA,10)=IB10
"RTN","IBEBR",75,0)
 ;  -set additional amount logic if needed (from last one)
"RTN","IBEBR",76,0)
 S IB20=$G(^IBE(350.2,+IBLAST,20)) I IB20]"" S ^IBE(350.2,DA,20)=IB20
"RTN","IBEBR",77,0)
 ;
"RTN","IBEBR",78,0)
 ;  -logic for rx3-rx6
"RTN","IBEBR",79,0)
 S IB=0,IB0=$G(^IBE(350.2,DA,0)) F  S IB=$O(IBPD(IB)) Q:'IB  D
"RTN","IBEBR",80,0)
 . S IBORIG=$O(^IBE(350.2,"B",IBPD(IB),0)),IBATYP=+$P($G(^IBE(350.2,+IBORIG,0)),"^",3)
"RTN","IBEBR",81,0)
 . I 'IBNEW S DA=$O(^IBE(350.2,"AIVDT",IBATYP,-IBEFDT,0)) Q:'DA
"RTN","IBEBR",82,0)
 . I IBNEW S X=IBPD(IB),DIC="^IBE(350.2,",DIC(0)="L" K DD,DO D FILE^DICN Q:Y<0  S DA=+Y
"RTN","IBEBR",83,0)
 . S DIE="^IBE(350.2,",DR=".02////"_IBEFDT_";.03////"_IBATYP_";.04////"_$P(IB0,"^",4)_";.05////"_$S($P(IB0,"^",5)]"":$P(IB0,"^",5),1:"@")_";.06////"_$S($P(IB0,"^",6)]"":$P(IB0,"^",6),1:"@")_";.07////"_IBTIER D ^DIE
"RTN","IBEBR",84,0)
 . I IB20]"" S ^IBE(350.2,DA,20)=IB20
"RTN","IBEBR",85,0)
 ;
"RTN","IBEBR",86,0)
FILEQ K IB10,DIC,DIE,DR,DA,IBNEW,IBORIG,DIK Q
"RTN","IBEBR",87,0)
 ;
"RTN","IBEBR",88,0)
TIER() ; -for Rx rates, prompt for tier
"RTN","IBEBR",89,0)
 N DIR
"RTN","IBEBR",90,0)
 S DIR(0)="350.2,.07" D ^DIR
"RTN","IBEBR",91,0)
 Q +Y
"RTN","IBEBR",92,0)
END ;Kill vars
"RTN","IBEBR",93,0)
 K I,X,Y,IBNOD,IBPD,DIR,DIC,DIE,DIK,DA,DR,DA,IB10,IBORIG,IB,IB0,IBP,IBEFDT,IBSEL,IBX,IBRUN,IB20,IBLAST,IBTIER
"RTN","IBEBR",94,0)
 Q
"RTN","IBEBR",95,0)
 ;
"RTN","IBEBR",96,0)
 ;;
"RTN","IBEBR",97,0)
COPAY ;;Co-pay Type
"RTN","IBEBR",98,0)
NSC ;;RX1^RX3^RX4^^NSC RX CO-PAY (RX1)
"RTN","IBEBR",99,0)
SC ;;RX2^RX5^RX6^^SC RX CO-PAY (RX2)
"RTN","IBEBR",100,0)
FSNSC ;;FEE SERV RX1^FEE SERV RX3^FEE SERV RX4^^FEE SERV NSC RX CO-PAY (RX1)
"RTN","IBEBR",101,0)
 ;;
"RTN","IBEBR",102,0)
PERDIEM ;;Per Diem
"RTN","IBEBR",103,0)
 ;;INPT PER DIEM
"RTN","IBEBR",104,0)
 ;;NHCU PER DIEM
"RTN","IBEBR",105,0)
 ;;FEE SERV INPT PER DIEM
"RTN","IBEBR",106,0)
 ;;
"RTN","IBEBR",107,0)
HCFA ;;HCFA Amb. Surg. Rate
"RTN","IBEBR",108,0)
 ;;MEDICARE 1^^^^AMB SURG RATE 1
"RTN","IBEBR",109,0)
 ;;MEDICARE 2^^^^AMB SURG RATE 2
"RTN","IBEBR",110,0)
 ;;MEDICARE 3^^^^AMB SURG RATE 3
"RTN","IBEBR",111,0)
 ;;MEDICARE 4^^^^AMB SURG RATE 4
"RTN","IBEBR",112,0)
 ;;MEDICARE 5^^^^AMB SURG RATE 5
"RTN","IBEBR",113,0)
 ;;MEDICARE 6^^^^AMB SURG RATE 6
"RTN","IBEBR",114,0)
 ;;MEDICARE 7^^^^AMB SURG RATE 7
"RTN","IBEBR",115,0)
 ;;MEDICARE 8^^^^AMB SURG RATE 8
"RTN","IBEBR",116,0)
 ;;MEDICARE 9^^^^AMB SURG RATE 9
"RTN","IBEBR",117,0)
 ;;
"RTN","IBEBR",118,0)
CHMPVA ;;CHAMPVA Rate Type
"RTN","IBEBR",119,0)
 ;;CHAMPVA PER DIEM
"RTN","IBEBR",120,0)
 ;;CHAMPVA SUBSISTENCE LIMIT
"RTN","IBEBR",121,0)
 ;;
"RTN","IBEBR",122,0)
MEDIC ;;Medicare Deductible
"RTN","IBEBR",123,0)
 ;;MEDICARE DEDUCTIBLE
"RTN","IBEBR",124,0)
 ;;
"RTN","IBEBR",125,0)
MAIN ;;Billing Rate Type
"RTN","IBEBR",126,0)
 ;;REVENUE CODE RATES
"RTN","IBEBR",127,0)
 ;;PER DIEM RATES
"RTN","IBEBR",128,0)
 ;;MEDICARE DEDUCTIBLE
"RTN","IBEBR",129,0)
 ;;HCFA AMB. SURG. RATES
"RTN","IBEBR",130,0)
 ;;RX CO-PAYMENT
"RTN","IBEBR",131,0)
 ;;CHAMPVA SUBSISTENCE RATES
"RTN","IBEBRH")
0^17^B3470311
"RTN","IBEBRH",1,0)
IBEBRH ;ALB/AAS - HELP FOR ENTER BILLING RATES PROCESSOR ;4-MAR-92
"RTN","IBEBRH",2,0)
 ;;2.0;INTEGRATED BILLING;**563**;21-MAR-94;Build 12
"RTN","IBEBRH",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBEBRH",4,0)
 ;
"RTN","IBEBRH",5,0)
% S IBX="MAIN" D 1
"RTN","IBEBRH",6,0)
 Q
"RTN","IBEBRH",7,0)
 ;
"RTN","IBEBRH",8,0)
1 ;
"RTN","IBEBRH",9,0)
 W !!,"Select one of the displayed choices by number or name."
"RTN","IBEBRH",10,0)
 W !,"You must select the type of rate to add/edit to proceed."
"RTN","IBEBRH",11,0)
 Q
"RTN","IBEBRH",12,0)
 ;
"RTN","IBEBRH",13,0)
2 ;  - help for 1 group of rates
"RTN","IBEBRH",14,0)
 N I,J,IBP,IBPD,IBNOD
"RTN","IBEBRH",15,0)
 I IBX="MAIN" D  Q
"RTN","IBEBRH",16,0)
 .W !!,"CHOOSE FROM:" F J=1:1 S TEXT=$P($T(@IBX+J^IBEBR),";;",2,99) Q:TEXT=""  W !?4,TEXT
"RTN","IBEBRH",17,0)
 F J=1:1 S IBP=$P($T(@IBX+J^IBEBR),";;",2,99),IBPD=$P(IBP,"^") Q:IBPD=""  D 3
"RTN","IBEBRH",18,0)
 Q
"RTN","IBEBRH",19,0)
3 ;  - help for 1 rate name
"RTN","IBEBRH",20,0)
 N I,IBNOD
"RTN","IBEBRH",21,0)
 I $D(%DT) W !!,"To edit an entry enter one of the following effective dates.",!
"RTN","IBEBRH",22,0)
 S I="" F  S I=$O(^IBE(350.2,"B",IBPD,I)) Q:'I  S IBNOD=$G(^IBE(350.2,I,0)) I IBNOD'="" D
"RTN","IBEBRH",23,0)
 . W !?4,$$DAT2^IBOUTL($P(IBNOD,"^",2)),?20,$E($S($P(IBP,"^",5)'="":$P(IBP,"^",5),1:$P(IBP,"^")),1,20),?42,"$",$J($P(IBNOD,"^",4),7,2)
"RTN","IBEBRH",24,0)
 . I $P(IBNOD,"^",6) W " + $",$J($P(IBNOD,"^",6),7,2)
"RTN","IBEBRH",25,0)
 . I $P(IBNOD,"^",7) W ?62,"TIER ",$P(IBNOD,"^",7)
"RTN","IBEBRH",26,0)
 . W ?70,$S($P(IBNOD,"^",5):"INACTIVE",1:"ACTIVE")
"RTN","IBEBRH",27,0)
 I $D(%DT) W !!,"Or enter a new effective date to add a new rate.",!
"RTN","IBEBRH",28,0)
 Q
"RTN","IBECEA0")
0^8^B11992930
"RTN","IBECEA0",1,0)
IBECEA0 ;ALB/CPM - Cancel/Edit/Add... Build List ; 22-APR-93
"RTN","IBECEA0",2,0)
 ;;2.0;INTEGRATED BILLING;**167,563**;21-MAR-94;Build 12
"RTN","IBECEA0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEA0",4,0)
 ;
"RTN","IBECEA0",5,0)
ARRAY ; Build list for the List Manager.
"RTN","IBECEA0",6,0)
 N C,IBATYP,IBAX,IBCHG,IBD,IBN,IBND,IBSTAT,Y
"RTN","IBECEA0",7,0)
 S VALMBG=1,VALMCNT=0,VALMBCK="R"
"RTN","IBECEA0",8,0)
 K @IBACMAR,@IBACMIDX,@VALMIDX,^TMP("IBACM",$J),^TMP("IBECEA",$J)
"RTN","IBECEA0",9,0)
 D APDT,APTDT:$G(IBRX)
"RTN","IBECEA0",10,0)
 S IBD="" F  S IBD=$O(^TMP("IBECEA",$J,IBD)) Q:'IBD  D
"RTN","IBECEA0",11,0)
 .S IBN="" F  S IBN=$O(^TMP("IBECEA",$J,IBD,IBN)) Q:'IBN  D 
"RTN","IBECEA0",12,0)
 ..S IBND=^IB(IBN,0) Q:$P(IBND,"^",7)=""
"RTN","IBECEA0",13,0)
 ..S VALMCNT=VALMCNT+1,Y=$P(IBND,"^",5),C=$P(^DD(350,.05,0),"^",2) D Y^DIQ S IBSTAT=Y
"RTN","IBECEA0",14,0)
 ..S IBATYP=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^") S:$E(IBATYP,1,2)="DG" IBATYP=$E(IBATYP,4,99)
"RTN","IBECEA0",15,0)
 ..;  if ouptatient charge and clinic stop, show it
"RTN","IBECEA0",16,0)
 ..I $E(IBATYP,1,3)="OPT",$P(IBND,"^",20) S IBATYP=$E(IBATYP_"                 ",1,17)_" "_$P($G(^IBE(352.5,+$P(IBND,"^",20),0)),"^")
"RTN","IBECEA0",17,0)
 ..S IBCHG=$S(IBATYP["CANCEL":"(",1:" ")_"$"_$P(IBND,"^",7)_$S(IBATYP["CANCEL":")",1:"")
"RTN","IBECEA0",18,0)
 ..S IBAX=$$SETSTR^VALM1(VALMCNT,"",+$P(VALMDDF("CHG#"),"^",2),+$P(VALMDDF("CHG#"),"^",3))
"RTN","IBECEA0",19,0)
 ..S IBAX=$$SETSTR^VALM1($$DAT1^IBOUTL(IBD),IBAX,+$P(VALMDDF("FDATE"),"^",2),+$P(VALMDDF("FDATE"),"^",3))
"RTN","IBECEA0",20,0)
 ..S IBAX=$$SETSTR^VALM1($$DAT1^IBOUTL($S($P(IBND,"^",8)["RX COPAY":IBD,1:$P(IBND,"^",15))),IBAX,+$P(VALMDDF("TDATE"),"^",2),+$P(VALMDDF("TDATE"),"^",3))
"RTN","IBECEA0",21,0)
 ..S IBAX=$$SETSTR^VALM1(IBATYP,IBAX,+$P(VALMDDF("ENTRY"),"^",2),+$P(VALMDDF("ENTRY"),"^",3))
"RTN","IBECEA0",22,0)
 ..S IBAX=$$SETSTR^VALM1($P($P(IBND,"^",11),"-",2),IBAX,+$P(VALMDDF("BILL#"),"^",2),+$P(VALMDDF("BILL#"),"^",3))
"RTN","IBECEA0",23,0)
 ..S IBAX=$$SETSTR^VALM1(IBSTAT,IBAX,+$P(VALMDDF("STATUS"),"^",2),+$P(VALMDDF("STATUS"),"^",3))
"RTN","IBECEA0",24,0)
 ..S IBAX=$$SETSTR^VALM1(IBCHG,IBAX,+$P(VALMDDF("CHARGE"),"^",2),+$P(VALMDDF("CHARGE"),"^",3))
"RTN","IBECEA0",25,0)
 ..S @IBACMAR@(VALMCNT,0)=IBAX,@IBACMAR@("IDX",VALMCNT,VALMCNT)="",@VALMIDX@(VALMCNT)=VALMCNT
"RTN","IBECEA0",26,0)
 ..S @IBACMIDX@(VALMCNT)=VALMCNT_"^"_DFN_"^"_IBATYP_"^"_IBN_"^"_IBCHG_"^"_IBSTAT
"RTN","IBECEA0",27,0)
 I '$O(@IBACMAR@(0)) S @IBACMAR@(1,0)=" ",@IBACMAR@(2,0)="No charges meet criteria",VALMCNT=2,@VALMIDX@(1)=1,@VALMIDX@(2)=2
"RTN","IBECEA0",28,0)
 Q
"RTN","IBECEA0",29,0)
 ;
"RTN","IBECEA0",30,0)
APDT ; Gather Means Test and CHAMPVA charges.
"RTN","IBECEA0",31,0)
 N IBN,IBX,Y,Y1
"RTN","IBECEA0",32,0)
 S Y="" F  S Y=$O(^IB("AFDT",DFN,Y)) Q:'Y  I -Y'>IBAEND S Y1=0 F  S Y1=$O(^IB("AFDT",DFN,Y,Y1)) Q:'Y1  D
"RTN","IBECEA0",33,0)
 .S IBN=0 F  S IBN=$O(^IB("AF",Y1,IBN)) Q:'IBN  D
"RTN","IBECEA0",34,0)
 ..Q:'$D(^IB(IBN,0))  S IBX=^(0)
"RTN","IBECEA0",35,0)
 ..Q:$P(IBX,"^",8)["ADMISSION"
"RTN","IBECEA0",36,0)
 ..I $P(IBX,"^",15)<IBABEG!($P(IBX,"^",14)>IBAEND) Q
"RTN","IBECEA0",37,0)
 ..S ^TMP("IBECEA",$J,+$P(IBX,"^",14),IBN)=""
"RTN","IBECEA0",38,0)
 ;
"RTN","IBECEA0",39,0)
 S Y=0  F  S Y=$O(^IB("ACVA",DFN,Y)) Q:'Y  I Y'>IBAEND S Y1=0 F  S Y1=$O(^IB("ACVA",DFN,Y,Y1)) Q:'Y1  D
"RTN","IBECEA0",40,0)
 .S IBN=0 F  S IBN=$O(^IB("AD",Y1,IBN)) Q:'IBN  D
"RTN","IBECEA0",41,0)
 ..Q:'$D(^IB(IBN,0))  S IBX=^(0)
"RTN","IBECEA0",42,0)
 ..I $P(IBX,"^",15)<IBABEG!($P(IBX,"^",14)>IBAEND) Q
"RTN","IBECEA0",43,0)
 ..S ^TMP("IBECEA",$J,Y,IBN)=""
"RTN","IBECEA0",44,0)
 Q
"RTN","IBECEA0",45,0)
 ;
"RTN","IBECEA0",46,0)
APTDT ; Gather Rx copay charges entered through Cancel/Edit/Add.
"RTN","IBECEA0",47,0)
 N IBN,IBDT,IBZ
"RTN","IBECEA0",48,0)
 S IBN=0 F  S IBN=$O(^IB("C",DFN,IBN)) Q:'IBN  S IBZ=$G(^IB(IBN,0)) I $P(IBZ,"^",8)["RX" S IBDT=$S($P(IBZ,"^",14):$P(IBZ,"^",14),1:$P($G(^(1)),"^",2))\1 I IBDT,IBDT'<IBABEG,IBDT'>IBAEND S ^TMP("IBECEA",$J,IBDT\1,IBN)=""
"RTN","IBECEA0",49,0)
 Q
"RTN","IBECEA2")
0^9^B19420959
"RTN","IBECEA2",1,0)
IBECEA2 ;ALB/CPM-Cancel/Edit/Add... Edit a Charge ; 15-MAR-93
"RTN","IBECEA2",2,0)
 ;;2.0;INTEGRATED BILLING;**57,52,150,176,183,240,563**;21-MAR-94;Build 12
"RTN","IBECEA2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEA2",4,0)
 ;
"RTN","IBECEA2",5,0)
ONE ; Edit a single charge.
"RTN","IBECEA2",6,0)
 N IBGMTR
"RTN","IBECEA2",7,0)
 S IBGMTR=0 ; GMT Related flag
"RTN","IBECEA2",8,0)
 ;
"RTN","IBECEA2",9,0)
 D HDR^IBECEAU("E D I T")
"RTN","IBECEA2",10,0)
 ;
"RTN","IBECEA2",11,0)
 ; - don't allow edit of CHAMPVA charges
"RTN","IBECEA2",12,0)
 I $P($G(^IB(IBN,1)),"^",5) W !,"Sorry!  You cannot edit the CHAMPVA inpatient subsistence charge.",!,"Please cancel this charge and add a new charge." G ONEQ
"RTN","IBECEA2",13,0)
 ;
"RTN","IBECEA2",14,0)
 ; - don't allow edit of TRICARE charges
"RTN","IBECEA2",15,0)
 I $P($G(^IBE(350.1,+$P($G(^IB(IBN,0)),"^",3),0)),"^",11)=7 W !,"Sorry!  You cannot edit TRICARE copayment charges.",!,"Please cancel this charge and add a new charge." G ONEQ
"RTN","IBECEA2",16,0)
 ;
"RTN","IBECEA2",17,0)
 ; - don't allow edit of LTC charges
"RTN","IBECEA2",18,0)
 S IBXA=$P($G(^IBE(350.1,+$P($G(^IB(IBN,0)),"^",3),0)),"^",11)
"RTN","IBECEA2",19,0)
 I IBXA>7,IBXA<10 W !,"Sorry!  You cannot edit LTC copayment charges.",!,"Please cancel this charge and add a new charge." G ONEQ
"RTN","IBECEA2",20,0)
 ;
"RTN","IBECEA2",21,0)
 ; - perform up-front edits
"RTN","IBECEA2",22,0)
 I 'IBND S IBY="-1^IB021" G ONEQ
"RTN","IBECEA2",23,0)
 S IBPARNT=+$P(IBND,"^",9) I '$D(^IB(IBPARNT,0)) S IBY="-1^IB027" G ONEQ
"RTN","IBECEA2",24,0)
 I $$LAST^IBECEAU(IBPARNT)'=IBN W !,"You can only edit the last transaction for an original charge." G ONEQ
"RTN","IBECEA2",25,0)
 S IBATYP=$G(^IBE(350.1,+$P(IBND,"^",3),0)) I IBATYP="" S IBY="-1^IB022" G ONEQ
"RTN","IBECEA2",26,0)
 S IBSEQNO=$P(IBATYP,"^",5) I 'IBSEQNO S IBY="-1^IB023" G ONEQ
"RTN","IBECEA2",27,0)
 I $P(IBATYP,"^",5)=2 W !,"You cannot edit cancellation transactions... please add a new charge." G ONEQ
"RTN","IBECEA2",28,0)
 I $P(IBND,"^",5)=10 W !,"You cannot edit charges which have been directly cancelled.",!,"Please add a new charge." G ONEQ
"RTN","IBECEA2",29,0)
 ;
"RTN","IBECEA2",30,0)
 ; - see if charge has been billed or not
"RTN","IBECEA2",31,0)
 S IBH="^1^2^8^9^99^"[("^"_+$P(IBND,"^",5)_"^"),IBXA=$P(IBATYP,"^",11)
"RTN","IBECEA2",32,0)
 S IBIL=$P(IBND,"^",11),IBUNITP=+$P(IBND,"^",6),IBCHGP=+$P(IBND,"^",7)
"RTN","IBECEA2",33,0)
 S IBATYP=+$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",9)
"RTN","IBECEA2",34,0)
 I 'IBH D  G:IBY<0 ONEQ
"RTN","IBECEA2",35,0)
 .I 'IBUNITP W !,"This charge has been billed, but there are no units!" S IBY=-1 Q
"RTN","IBECEA2",36,0)
 .I 'IBCHGP W !,"There is no charge amount associated with this action!" S IBY=-1 Q
"RTN","IBECEA2",37,0)
 .I IBIL="" W !,"This charge has been billed, but there is no bill number!" S IBY=-1 Q
"RTN","IBECEA2",38,0)
 I IBH,$P(IBND,"^",5)'=8 W !,"*** Please Note:  This charge has not yet been passed to Accounts Receivable ***"
"RTN","IBECEA2",39,0)
 I $P(IBND,"^",5)=8 W !?17,"*** Please Note:  This charge is on hold. ***",!?9,"Editing it will cause it to be passed to Accounts Receivable."
"RTN","IBECEA2",40,0)
 ;
"RTN","IBECEA2",41,0)
 ; - ask user for the cancellation reason
"RTN","IBECEA2",42,0)
 I 'IBH,IBXA'=4 D REAS^IBECEAU2("E") G:IBCRES<0 ONEQ
"RTN","IBECEA2",43,0)
 ;
"RTN","IBECEA2",44,0)
 ; - ask user for data to be edited
"RTN","IBECEA2",45,0)
 D ^IBECEA21 G:IBY<0 ONEQ
"RTN","IBECEA2",46,0)
 ;
"RTN","IBECEA2",47,0)
 ; - okay to proceed?
"RTN","IBECEA2",48,0)
 D PROC^IBECEAU4("edit") G:IBY<0 ONEQ S IBUPD=IBND
"RTN","IBECEA2",49,0)
 ;
"RTN","IBECEA2",50,0)
 ; - cancel 354.71 transaction (copay cap)
"RTN","IBECEA2",51,0)
 S:$P(IBND,"^",19) IBAMC=$$CANCEL^IBARXMN(DFN,$P(IBND,"^",19),.IBY) G:IBY<0 ONEQ
"RTN","IBECEA2",52,0)
 ;
"RTN","IBECEA2",53,0)
 ; - build the cancellation transaction
"RTN","IBECEA2",54,0)
 D CANC^IBECEAU4(IBN,IBCRES,0) G:IBY<0 ONEQ
"RTN","IBECEA2",55,0)
 ;
"RTN","IBECEA2",56,0)
 ; - build new 354.71 transaction (copay cap)
"RTN","IBECEA2",57,0)
 I IBXA=5 W !!,"Building the new cap transaction...  " S IBAM=$$ADD^IBARXMN(DFN,"^^"_$G(IBEFDT,DT)_"^^P^^"_IBUNIT_"^"_IBCHG_"^"_IBDESC_"^^"_IBCHG_"^0^"_IBSITE_"^^^^^^^"_$G(IBTIER)) I IBAM<0 S IBY="-1^IB316" G ONEQ
"RTN","IBECEA2",58,0)
 ;
"RTN","IBECEA2",59,0)
 ; - build the updated transaction
"RTN","IBECEA2",60,0)
 D UPD^IBECEA22 G:IBY<0 ONEQ
"RTN","IBECEA2",61,0)
 ;
"RTN","IBECEA2",62,0)
 ; - handle updating of clock
"RTN","IBECEA2",63,0)
 I "^1^2^3^"[("^"_IBXA_"^") D CLOCK^IBECEAU(IBDOLA-IBCLDOL,IBCLDAY,IBDAYA-IBCLDAY)
"RTN","IBECEA2",64,0)
 ;
"RTN","IBECEA2",65,0)
ONEQ D ERR^IBECEAU4:IBY<0,PAUSE^IBECEAU
"RTN","IBECEA2",66,0)
 K IBBS,IBCRES,IBDESC,IBIL,IBND,IBARTYP,IBSEQNO,IBTOTL,IBUNIT,IBATYP,IBIDX,IBN,IBY,IBPARNT,IBH,IBXA,IBNOS,IBRTED,IBADJMED,IBAM,IBAMC,IBEFDT,IBTIER
"RTN","IBECEA2",67,0)
 K IBAFY,IBCAN,IBCHG,IBCHGP,IBCLDA,IBCLDAY,IBCLDOL,IBCLDOLO,IBCLDT,IBCLST,IBDAYA,IBDAYP,IBDOLA,IBDOLP,IBDT,IBFR,IBFRP,IBI,IBJ,IBLIM,IBMED,IBTO,IBTOP,IBTRAN,IBUNIT,IBUNITP,IBUPD
"RTN","IBECEA2",68,0)
 Q
"RTN","IBECEA21")
0^10^B31240213
"RTN","IBECEA21",1,0)
IBECEA21 ;ALB/CPM-Cancel/Edit/Add... Edit Prompts;19-APR-93
"RTN","IBECEA21",2,0)
 ;;2.0;INTEGRATED BILLING;**7,57,167,183,202,312,563**;21-MAR-94;Build 12
"RTN","IBECEA21",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEA21",4,0)
 ;
"RTN","IBECEA21",5,0)
 ; Issue appropriate prompts for each charge type.  If the charge
"RTN","IBECEA21",6,0)
 ; being edited has not been billed, handle that charge before
"RTN","IBECEA21",7,0)
 ; returning to IBECEA2.
"RTN","IBECEA21",8,0)
 ;
"RTN","IBECEA21",9,0)
 N IBSTOPDA,IBTYPE,IBGMT
"RTN","IBECEA21",10,0)
 S IBGMT=0
"RTN","IBECEA21",11,0)
 ;
"RTN","IBECEA21",12,0)
 ; Handle Outpatient Charges
"RTN","IBECEA21",13,0)
 I IBXA=4 D  G END
"RTN","IBECEA21",14,0)
 .S (IBFR,IBTO,IBDT)=$P(IBND,"^",14),IBUNIT=IBUNITP
"RTN","IBECEA21",15,0)
 .W !,"Re-calculating the OPT copay charge for ",$$DAT1^IBOUTL(IBFR)," ..."
"RTN","IBECEA21",16,0)
 .;
"RTN","IBECEA21",17,0)
 .; need to look up stop info to populate IBTYPE *167
"RTN","IBECEA21",18,0)
 .S IBSTOPDA=$S($P($P(IBND,"^",4),":")=350:$P(IBND,"^",20),1:$$GETSC^IBEMTSCU($P(IBND,"^",4),$P(IBND,"^",17)))
"RTN","IBECEA21",19,0)
 .S IBTYPE=$S(IBSTOPDA>0:$P($G(^IBE(352.5,+$G(IBSTOPDA),0)),"^",3),1:1)
"RTN","IBECEA21",20,0)
 .;
"RTN","IBECEA21",21,0)
 .S IBX="O" D TYPE^IBAUTL2 Q:IBY<0  W "   $",IBCHG
"RTN","IBECEA21",22,0)
 .I 'IBH,IBCHG=IBCHGP W !,"This equals the billed amount - this charge cannot be edited." S IBY=-1 Q
"RTN","IBECEA21",23,0)
 .I IBCHG=IBCHGP W !,"This charge is ready to be billed." D PASS^IBECEA22 S IBY=-1 Q
"RTN","IBECEA21",24,0)
 .I IBH D UPCHG^IBECEA22(IBCHG) S IBY=-1 Q
"RTN","IBECEA21",25,0)
 .S IBCRES=$O(^IBE(350.3,"B","MT CHARGE EDITED",0)) S:'IBCRES IBCRES=19
"RTN","IBECEA21",26,0)
 .W !!,"The original charge will be cancelled and re-billed for $",IBCHG,"."
"RTN","IBECEA21",27,0)
 ;
"RTN","IBECEA21",28,0)
 ; Handle Pharmacy Copay Charges
"RTN","IBECEA21",29,0)
 I IBXA=5 D  G END
"RTN","IBECEA21",30,0)
 .N IBLIM,IBA,IBB,IBC,IBX,IBODT,IBOCHG,IBOTIER
"RTN","IBECEA21",31,0)
 .S IBOTIER=$P(IBND,"^",22)
"RTN","IBECEA21",32,0)
 .S IBODT=+$S(+$P(IBND,"^",14):$P(IBND,"^",14),1:$P($G(IB(IBN,1)),"^",2))
"RTN","IBECEA21",33,0)
 .S IBOCHG=$P(IBND,"^",7)
"RTN","IBECEA21",34,0)
 .S IBLIM=DT D FR^IBECEAU2(IBODT) Q:IBY<0
"RTN","IBECEA21",35,0)
 .S (IBTO,IBEFDT)=IBFR,IBA=-(IBFR+.9)
"RTN","IBECEA21",36,0)
 .S IBTIER=$$TIER^IBECEAU2($P(IBND,"^",3),IBEFDT,IBOTIER)
"RTN","IBECEA21",37,0)
 .F  S IBA=$O(^IBE(350.2,"AIVDT",IBATYP,IBA))  Q:'IBA!($G(IBX))  S IBB=0 F  S IBB=$O(^IBE(350.2,"AIVDT",IBATYP,IBA,IBB)) Q:'IBB!($G(IBX))  S IBC=$G(^IBE(350.2,IBB,0)) I IBC]"",$$TIEROK^IBAUTL(IBC),'$P(IBC,"^",5)!($P(IBC,"^",5)>IBFR) S IBX=IBB Q
"RTN","IBECEA21",38,0)
 .D UNIT^IBECEAU2(IBUNITP) Q:IBY<0
"RTN","IBECEA21",39,0)
 .I 'IBH,IBUNIT=IBUNITP,IBODT=IBEFDT,IBOCHG=IBCHG,IBOTIER=IBTIER W !!,"No change was made!" S IBY=-1 Q
"RTN","IBECEA21",40,0)
 .I IBH D UPCHG^IBECEA22(IBCHG,IBUNIT,IBFR,IBTO,IBTIER) S IBY=-1 Q
"RTN","IBECEA21",41,0)
 .W !!,"The original charge will be cancelled and re-billed for $",$J(IBCHG,"",2),"."
"RTN","IBECEA21",42,0)
 ;
"RTN","IBECEA21",43,0)
 ; Handle all Inpatient Charges
"RTN","IBECEA21",44,0)
 S IBFRP=+$P(IBND,"^",14),IBTOP=+$P(IBND,"^",15),IBLIM=$S(IBXA=3:DT,1:$$FMADD^XLFDT(DT,-1))
"RTN","IBECEA21",45,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFRP) ;Check GMT Copayment Status
"RTN","IBECEA21",46,0)
 D CLSTR^IBECEAU1(DFN,IBFRP)
"RTN","IBECEA21",47,0)
 I 'IBCLDA W !!,"I cannot find a billing clock that was effective on ",$$DAT1^IBOUTL(IBFRP),"!",!,"Please adjust this patient's billing clocks before editing this charge." S IBY=-1 Q
"RTN","IBECEA21",48,0)
 D CLDATA^IBAUTL3,DED^IBAUTL3 G:IBY<0 END
"RTN","IBECEA21",49,0)
 ;For GMT Patients reduce Medicare Deductible to 20%
"RTN","IBECEA21",50,0)
 I IBGMT>0 S IBMED=$$REDUCE^IBAGMT(IBMED) W !,"Medicare Deductible reduced due to GMT Copayment Status."
"RTN","IBECEA21",51,0)
 S:IBXA=2 IBBS=$O(^DGCR(399.1,"AC",IBATYP,0))
"RTN","IBECEA21",52,0)
 I IBXA=2,$P($G(^IBE(350.1,IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90,IBCHGP'>IBCLDOL S IBMED=IBMED/2
"RTN","IBECEA21",53,0)
 I IBXA=1,IBCLDAY>90 D MED^IBECEA34 G:IBY<0 END
"RTN","IBECEA21",54,0)
 W !!,"  ** ",$S($P(IBCLST,"^",4)=1:"Active",1:"Closed")," Billing Clock **"
"RTN","IBECEA21",55,0)
 W !?2,"Begin Date: ",$$DAT1^IBOUTL(IBCLDT),"   # Inpt Days: ",IBCLDAY,"   ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",IBCLDOL,!
"RTN","IBECEA21",56,0)
 S:IBXA=3 IBDAYP=IBCLDAY-IBUNITP
"RTN","IBECEA21",57,0)
 I IBXA=1!(IBXA=2) S IBDOLP=IBCLDOL-IBCHGP S:IBDOLP<0 IBDOLP=0
"RTN","IBECEA21",58,0)
 ;
"RTN","IBECEA21",59,0)
 ; - ask for 'Bill From' date
"RTN","IBECEA21",60,0)
FR D FR^IBECEAU2(IBFRP) G:IBY<0 END
"RTN","IBECEA21",61,0)
 ; 
"RTN","IBECEA21",62,0)
 I IBFR<IBCLDT W !!,"The 'Bill From' date cannot preceed the Billing Clock Begin Date.",! G FR
"RTN","IBECEA21",63,0)
 S IBGMTR=0,IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFR) ; GMT Status may change
"RTN","IBECEA21",64,0)
 I IBXA=3 S IBDT=IBFR D COST^IBAUTL2 S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I 'IBCHG W !!,"Unable to determine the per diem rate. Please check your rate table." S IBY=-1 G END
"RTN","IBECEA21",65,0)
 I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G:IBY<0 END S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I IBCHG+IBDOLP<IBMED W *7,"   ($",IBCHG,"/day)" W:IBGMTR " GMT Rate" G TO
"RTN","IBECEA21",66,0)
 I IBXA=2,IBCHG=IBCHGP D CTBB^IBECEAU3 W !!,"No change was made!" S IBY=-1 G END
"RTN","IBECEA21",67,0)
 ;
"RTN","IBECEA21",68,0)
 ; - ask for 'Bill To' date
"RTN","IBECEA21",69,0)
TO D TO^IBECEAU2(IBTOP) G:IBY<0 END
"RTN","IBECEA21",70,0)
 ; 
"RTN","IBECEA21",71,0)
 I $P(IBCLST,"^",10),IBTO>$P(IBCLST,"^",10) W !!,"The 'Bill To' date cannot exceed the Billing Clock End Date (",$$DAT1^IBOUTL($P(IBCLST,"^",10)),")." G TO
"RTN","IBECEA21",72,0)
 S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR)
"RTN","IBECEA21",73,0)
 I $$FMDIFF^XLFDT(IBTOP,IBFRP)<IBUNITP!(IBFR=IBTO) S IBUNIT=IBUNIT+1
"RTN","IBECEA21",74,0)
 I IBTO'=IBFR,IBXA>0,IBXA<4,$$ISGMTPT^IBAGMT(DFN,IBTO)'=$$ISGMTPT^IBAGMT(DFN,IBFR) W !!,"The patient changed GMT Copayment status during the specified period!",! G TO
"RTN","IBECEA21",75,0)
 I IBXA>1 D  G END
"RTN","IBECEA21",76,0)
 . S IBCHG=IBUNIT*IBCHG S:IBXA=2 IBCHG=$S(IBDOLP+IBCHG>IBMED:IBMED-IBDOLP,1:IBCHG)
"RTN","IBECEA21",77,0)
 . I IBCHG=IBCHGP D CTBB^IBECEAU3 W !!,"No change was made!" S IBY=-1 Q
"RTN","IBECEA21",78,0)
 . S:IBXA=2 IBDOLA=IBDOLP+IBCHG,IBDAYA=0 S:IBXA=3 IBDAYA=IBDAYP+IBUNIT,IBDOLA=0
"RTN","IBECEA21",79,0)
 . W !!,"New charge to be billed" W:IBGMTR "(GMT Rate)" W ": $",$J(IBCHG,"",2),!
"RTN","IBECEA21",80,0)
 . I IBH D CHCL^IBECEA22
"RTN","IBECEA21",81,0)
 ;
"RTN","IBECEA21",82,0)
 ; - ask for 'Fee Amount'
"RTN","IBECEA21",83,0)
 S IBCLDOLO=IBCLDOL,IBCLDOL=IBCLDOL-IBCHGP S:IBCLDOL<0 IBCLDOL=0
"RTN","IBECEA21",84,0)
 I IBGMT>0 S IBGMTR=1 W !,"The patient has GMT Copayment Status! GMT rate must be applied.",!
"RTN","IBECEA21",85,0)
 D FEE^IBECEAU2(IBCHGP) G:IBY<0 END
"RTN","IBECEA21",86,0)
 I IBCHG=IBCHGP W !!,"No change was made!" S IBY=-1 G END
"RTN","IBECEA21",87,0)
 S IBCLDOL=IBCLDOLO,IBDOLA=IBDOLP+IBCHG,IBDAYA=0
"RTN","IBECEA21",88,0)
 I IBH D CHCL^IBECEA22
"RTN","IBECEA21",89,0)
 ;
"RTN","IBECEA21",90,0)
END Q
"RTN","IBECEA22")
0^11^B7958331
"RTN","IBECEA22",1,0)
IBECEA22 ;ALB/CPM-Cancel/Edit/Add... Edit Utilities;23-APR-93
"RTN","IBECEA22",2,0)
 ;;2.0;INTEGRATED BILLING;**150,183,563**;21-MAR-94;Build 12
"RTN","IBECEA22",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEA22",4,0)
 ;
"RTN","IBECEA22",5,0)
UPCHG(P7,P6,P14,P15,P22) ; Update the incomplete charge and pass to AR?
"RTN","IBECEA22",6,0)
 ; Input:  P7  --  New amount [required]
"RTN","IBECEA22",7,0)
 ;         P6  --  New Units [optional]
"RTN","IBECEA22",8,0)
 ;        P14  --  New Bill From date [optional]
"RTN","IBECEA22",9,0)
 ;        P15  --  New Bill To date [optional]
"RTN","IBECEA22",10,0)
 ;        P22  --  New Tier Level [optional]
"RTN","IBECEA22",11,0)
 N DA,DIE,DIR,DIRUT,DR,DUOUT,DTOUT,X,Y
"RTN","IBECEA22",12,0)
 S DIR(0)="Y",DIR("A")="Okay to update this charge and pass it to Accounts Receivable"
"RTN","IBECEA22",13,0)
 S DIR("?")="Enter 'Y' or 'YES' to update and pass the charge, or 'N', or '^' to quit."
"RTN","IBECEA22",14,0)
 D ^DIR I 'Y!($D(DIRUT))!($D(DUOUT)) S IBY=-1 Q
"RTN","IBECEA22",15,0)
 W !,"Updating the incomplete charge and passing to Accounts Receivable...  "
"RTN","IBECEA22",16,0)
 S $P(^IB(IBN,0),"^",7)=P7 S:$G(P6) $P(^(0),"^",6)=P6 S:$G(P14) $P(^(0),"^",14)=P14 S:$G(P15) $P(^(0),"^",15)=P15 S:$G(P22) $P(^(0),"^",22)=P22
"RTN","IBECEA22",17,0)
 ;
"RTN","IBECEA22",18,0)
 ; - update copay account records
"RTN","IBECEA22",19,0)
 D:$P(IBND,"^",19) UPCHG^IBARXMN($P(IBND,"^",19),P6,P7)
"RTN","IBECEA22",20,0)
 D PASSCH I IBY>0 W "done." S IBCOMMIT=1
"RTN","IBECEA22",21,0)
 Q
"RTN","IBECEA22",22,0)
 ;
"RTN","IBECEA22",23,0)
PASS ; Okay to pass charge to Accounts Receivable?
"RTN","IBECEA22",24,0)
 N DIR,DIRUT,DUOUT,DTOUT
"RTN","IBECEA22",25,0)
 S DIR(0)="Okay to pass this charge to Accounts Receivable",DIR(0)="Y"
"RTN","IBECEA22",26,0)
 S DIR("?")="Enter 'Y' or 'YES' to pass this charge to AR, or 'N' or '^' to quit."
"RTN","IBECEA22",27,0)
 D ^DIR I Y W !,"Passing the charge to Accounts Receivable...  " D PASSCH I IBY>0 W "done." S IBCOMMIT=1
"RTN","IBECEA22",28,0)
 Q
"RTN","IBECEA22",29,0)
 ;
"RTN","IBECEA22",30,0)
PASSCH ; Pass charge to Accounts Receivable.
"RTN","IBECEA22",31,0)
 I $G(IBXA)=5 D FILER^IBARXMA(IBN) ; transmit cap info
"RTN","IBECEA22",32,0)
 N IBSERV S IBNOS=IBN D ^IBR S IBY=Y
"RTN","IBECEA22",33,0)
 Q
"RTN","IBECEA22",34,0)
 ;
"RTN","IBECEA22",35,0)
CHCL ; Update charge and clocks.
"RTN","IBECEA22",36,0)
 D UPCHG(IBCHG,IBUNIT,IBFR,IBTO)
"RTN","IBECEA22",37,0)
 I IBY>0 D CLOCK^IBECEAU(IBDOLA-IBCLDOL,IBCLDAY,IBDAYA-IBCLDAY) S IBY=-1
"RTN","IBECEA22",38,0)
 Q
"RTN","IBECEA22",39,0)
 ;
"RTN","IBECEA22",40,0)
UPD ; Build an 'update' transaction.
"RTN","IBECEA22",41,0)
 N DA,DIK
"RTN","IBECEA22",42,0)
 S IBATYP=$P($G(^IBE(350.1,+$P(IBUPD,"^",3),0)),"^",7) I IBATYP="" S IBY="-1^IB022" G UPDQ
"RTN","IBECEA22",43,0)
 S IBSEQNO=$P($G(^IBE(350.1,IBATYP,0)),"^",5) I 'IBSEQNO S IBY="-1^IB023" G UPDQ
"RTN","IBECEA22",44,0)
 W !!,"Building the updated transaction... "
"RTN","IBECEA22",45,0)
 D ADD^IBAUTL I Y<1 S IBY=Y G UPDQ
"RTN","IBECEA22",46,0)
 S $P(IBUPD,"^",14,15)=IBFR_"^"_IBTO
"RTN","IBECEA22",47,0)
 S:IBXA'=5 IBUPD=$P(IBUPD,"^",1,16)
"RTN","IBECEA22",48,0)
 S $P(IBUPD,"^",3)=IBATYP,$P(IBUPD,"^",5)=1,$P(IBUPD,"^",6,7)=IBUNIT_"^"_IBCHG,$P(IBUPD,"^",12)=""
"RTN","IBECEA22",49,0)
 S:$D(IBAM) $P(IBUPD,"^",19)=IBAM
"RTN","IBECEA22",50,0)
 S $P(IBUPD,"^",21)=$S($G(IBGMTR):1,1:"") ; GMT Related
"RTN","IBECEA22",51,0)
 S:$G(IBTIER) $P(IBUPD,"^",22)=IBTIER
"RTN","IBECEA22",52,0)
 S ^IB(IBN,0)=IBUPD,$P(^(1),"^")=DUZ S DA=IBN,DIK="^IB(" D IX1^DIK
"RTN","IBECEA22",53,0)
 D PASSCH W:IBY>0 "done."
"RTN","IBECEA22",54,0)
UPDQ Q
"RTN","IBECEA3")
0^12^B70707203
"RTN","IBECEA3",1,0)
IBECEA3 ;ALB/CPM - Cancel/Edit/Add... Add a Charge ;30-MAR-93
"RTN","IBECEA3",2,0)
 ;;2.0;INTEGRATED BILLING;**7,57,52,132,150,153,166,156,167,176,198,188,183,202,240,312,402,454,563**;21-MAR-94;Build 12
"RTN","IBECEA3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEA3",4,0)
 ;
"RTN","IBECEA3",5,0)
ADD ; Add a Charge protocol
"RTN","IBECEA3",6,0)
 N IBGMT,IBGMTR
"RTN","IBECEA3",7,0)
 S (IBGMT,IBGMTR)=0
"RTN","IBECEA3",8,0)
 S IBCOMMIT=0,IBEXSTAT=$$RXST^IBARXEU(DFN,DT),IBCATC=$$BILST^DGMTUB(DFN),IBCVAEL=$$CVA^IBAUTL5(DFN),IBLTCST=$$LTCST^IBAECU(DFN,DT,1)
"RTN","IBECEA3",9,0)
 ;I 'IBCVAEL,'IBCATC,'$G(IBRX),+IBEXSTAT<1 W !!,"This patient has never been Means Test billable." S VALMBCK="" D PAUSE^VALM1 G ADDQ1
"RTN","IBECEA3",10,0)
 ;
"RTN","IBECEA3",11,0)
 ; - clear screen and begin
"RTN","IBECEA3",12,0)
 D CLOCK^IBAUTL3 I 'IBCLDA S (IBMED,IBCLDAY,IBCLDOL,IBCLDT)=0
"RTN","IBECEA3",13,0)
 D HDR^IBECEAU("A D D")
"RTN","IBECEA3",14,0)
 I IBY<0 D NODED^IBECEAU3 G ADDQ
"RTN","IBECEA3",15,0)
 ;
"RTN","IBECEA3",16,0)
 ; - ask for the charge type
"RTN","IBECEA3",17,0)
 D CHTYP^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",18,0)
 N IBAFEE S:$P($G(^IBE(350.1,+$G(IBATYP),0)),"^",8)="FEE SERVICE/OUTPATIENT" IBAFEE=IBATYP
"RTN","IBECEA3",19,0)
 ;
"RTN","IBECEA3",20,0)
 ; - process CHAMPVA charges
"RTN","IBECEA3",21,0)
 I IBXA=6 D CHMPVA^IBECEA32 G ADDQ
"RTN","IBECEA3",22,0)
 ;
"RTN","IBECEA3",23,0)
 ; - process TRICARE charges
"RTN","IBECEA3",24,0)
 I IBXA=7 D CUS^IBECEA35 G ADDQ
"RTN","IBECEA3",25,0)
 ;
"RTN","IBECEA3",26,0)
 ; - display MT billing clock data
"RTN","IBECEA3",27,0)
 I IBXA=2,$P($G(^IBE(350.1,+IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90 S IBMED=IBMED/2
"RTN","IBECEA3",28,0)
 I IBXA=1,IBCLDAY>90 D MED^IBECEA34 G:IBY<0 ADDQ
"RTN","IBECEA3",29,0)
 I "^1^2^3^"[("^"_IBXA_"^"),IBCLDA W !!,"  ** Active Billing Clock **   # Inpt Days: ",IBCLDAY,"    ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",+IBCLDOL,!
"RTN","IBECEA3",30,0)
 ;
"RTN","IBECEA3",31,0)
 ; - if LTC OPT (non-institutional) and CD display message of warning
"RTN","IBECEA3",32,0)
 I IBXA=8,$$CDEXMPT^IBAECU(DFN,DT) W !!,"  ** Patient is currently Catastrophically Disabled",!
"RTN","IBECEA3",33,0)
 ;
"RTN","IBECEA3",34,0)
 ; - display LTC billing clock data
"RTN","IBECEA3",35,0)
 I IBXA>7,IBXA<10 D  G:IBCLDA<1 ADDQ
"RTN","IBECEA3",36,0)
 . N IBCLZ
"RTN","IBECEA3",37,0)
 . S IBCLDA=$O(^IBA(351.81,"AE",DFN,9999999),-1)
"RTN","IBECEA3",38,0)
 . S:IBCLDA IBCLDA=$O(^IBA(351.81,"AE",DFN,IBCLDA,0))
"RTN","IBECEA3",39,0)
 . I 'IBCLDA W !!,"  ** Patient has no LTC billing clock **" Q
"RTN","IBECEA3",40,0)
 . S IBCLZ=^IBA(351.81,IBCLDA,0)
"RTN","IBECEA3",41,0)
 . W !!,"  **Last LTC Billing Clock    Start Date: ",$$FMTE^XLFDT($P(IBCLZ,"^",3)),"  Free Days Remaining: ",+$P(IBCLZ,"^",6)
"RTN","IBECEA3",42,0)
 . I $P(IBCLZ,"^",6) W !,"The patient must use his free days first." S IBCLDA=0
"RTN","IBECEA3",43,0)
 ;
"RTN","IBECEA3",44,0)
 ; - ask date, units and maybe tier for rx copay charge
"RTN","IBECEA3",45,0)
 I IBXA=5 D  G ADDQ:IBY<0,PROC
"RTN","IBECEA3",46,0)
 . N IBA,IBB,IBC,IBX
"RTN","IBECEA3",47,0)
 . S IBLIM=DT D FR^IBECEAU2(0) Q:IBY<0
"RTN","IBECEA3",48,0)
 . S (IBTO,IBEFDT)=IBFR
"RTN","IBECEA3",49,0)
 . ;
"RTN","IBECEA3",50,0)
 . ; ask tier if needed
"RTN","IBECEA3",51,0)
 . S IBTIER=$$TIER^IBECEAU2(IBATYP,IBEFDT) Q:IBY<0
"RTN","IBECEA3",52,0)
 . ;
"RTN","IBECEA3",53,0)
 . ; ask units
"RTN","IBECEA3",54,0)
 . D UNIT^IBECEAU2(0) Q:IBY<0
"RTN","IBECEA3",55,0)
 . ;
"RTN","IBECEA3",56,0)
 . ; has patient been previously tracked for cap info
"RTN","IBECEA3",57,0)
 . D TRACK^IBARXMN(DFN)
"RTN","IBECEA3",58,0)
 . ;
"RTN","IBECEA3",59,0)
 . D CTBB^IBECEAU3
"RTN","IBECEA3",60,0)
 . ;
"RTN","IBECEA3",61,0)
 . ; check if above cap
"RTN","IBECEA3",62,0)
 . I IBY'<0 D
"RTN","IBECEA3",63,0)
 .. N IBB,IBN,DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA3",64,0)
 .. D NEW^IBARXMC(1,IBCHG,IBFR,.IBB,.IBN) Q:'IBN
"RTN","IBECEA3",65,0)
 .. ;
"RTN","IBECEA3",66,0)
 .. ; display message ask to proceed
"RTN","IBECEA3",67,0)
 .. W !!,"This charge will put the patient > $",$J(IBN,0,2)," above their cap amount."
"RTN","IBECEA3",68,0)
 .. S DIR(0)="Y",DIR("A")="Okay to proceed" D ^DIR S:'Y IBY=-1
"RTN","IBECEA3",69,0)
 .. ;
"RTN","IBECEA3",70,0)
 S IBLIM=$S(IBXA=4!(IBXA=3):DT,1:$$FMADD^XLFDT(DT,-1))
"RTN","IBECEA3",71,0)
 ;
"RTN","IBECEA3",72,0)
FR ; - ask 'bill from' date
"RTN","IBECEA3",73,0)
 D FR^IBECEAU2(0) G:IBY<0 ADDQ
"RTN","IBECEA3",74,0)
 ;
"RTN","IBECEA3",75,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFR),IBGMTR=0 ;GMT Copayment Status
"RTN","IBECEA3",76,0)
 I IBGMT>0,IBXA>0,IBXA<4 W !,"The patient has GMT Copayment Status."
"RTN","IBECEA3",77,0)
 ; - check the MT billing clock
"RTN","IBECEA3",78,0)
 I IBXA'=8,IBXA'=9 D CLMSG^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",79,0)
 ;Adjust Deductible for GMT patient
"RTN","IBECEA3",80,0)
 I IBGMT>0,IBXA>0,IBXA<4,$G(IBMED) S IBMED=$$REDUCE^IBAGMT(IBMED) W !,"Medicare Deductible reduced due to GMT Copayment Status ($",$J(IBMED,"",2),")."
"RTN","IBECEA3",81,0)
 ;
"RTN","IBECEA3",82,0)
 ; - check LTC non-institutional (opt) for CD exemption
"RTN","IBECEA3",83,0)
 I IBXA=8,$$CDEXMPT^IBAECU(DFN,IBFR) W !,"Patient is LTC non-institutional exempt, Catastrophically Disabled" G ADDQ
"RTN","IBECEA3",84,0)
 ;
"RTN","IBECEA3",85,0)
 ; - check the LTC billing clock
"RTN","IBECEA3",86,0)
 I IBXA>7,IBXA<10 D  I IBY<0 W !!,"The patient has no LTC clock active for the date.",! G ADDQ
"RTN","IBECEA3",87,0)
 . N IBCLZ S IBCLZ=^IBA(351.81,IBCLDA,0)
"RTN","IBECEA3",88,0)
 . ;
"RTN","IBECEA3",89,0)
 . ; is this the clock and within the date range
"RTN","IBECEA3",90,0)
 . I IBFR'<$P(IBCLZ,"^",3),$$YR^IBAECU($P(IBCLZ,"^",3),IBFR) S IBY=-1 Q
"RTN","IBECEA3",91,0)
 . ;
"RTN","IBECEA3",92,0)
 . ; look for another clock that might fit the date
"RTN","IBECEA3",93,0)
 . I IBFR<$P(IBCLZ,"^",3) S IBCLDA=$O(^IBA(351.81,"AE",DFN,IBFR+1),-1) I 'IBCLDA!($$YR^IBAECU($P($G(^IBA(351.81,+IBCLDA,0)),"^",3),IBFR)) S IBY=-1
"RTN","IBECEA3",94,0)
 ;
"RTN","IBECEA3",95,0)
 ; - calculate the MT inpt copay charge
"RTN","IBECEA3",96,0)
 I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G ADDQ:IBY<0 S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I IBCHG+IBCLDOL<IBMED W *7,"   ($",IBCHG,"/day)" W:IBGMTR " GMT Rate"
"RTN","IBECEA3",97,0)
 ;
"RTN","IBECEA3",98,0)
 ; - find the correct clock from the 'bill from' date (ignore LTC)
"RTN","IBECEA3",99,0)
 I IBXA'=8,IBXA'=9,('IBCLDA!(IBCLDA&(IBFR<IBCLDT))) D NOCL^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",100,0)
 ;
"RTN","IBECEA3",101,0)
 ; - perform outpatient edits
"RTN","IBECEA3",102,0)
 N IBSTOPDA
"RTN","IBECEA3",103,0)
 I IBXA=4 D  G ADDQ:IBY<0,PROC
"RTN","IBECEA3",104,0)
 .   ;  for visits prior to 12/6/01 or FEE
"RTN","IBECEA3",105,0)
 .   I IBFR<3011206!($G(IBAFEE)) D OPT^IBECEA33 Q
"RTN","IBECEA3",106,0)
 .   ;  for visits on or after 12/5/01
"RTN","IBECEA3",107,0)
 .   D OPT^IBEMTSCU
"RTN","IBECEA3",108,0)
 ;
"RTN","IBECEA3",109,0)
 ; - if LTC outpatient calculate the charge
"RTN","IBECEA3",110,0)
 I IBXA=8 D  G:IBY<0 ADDQ S (IBDT,IBTO,IBEVDT)=IBFR,IBDESC=$P(^IBE(350.1,IBATYP,0),"^",8),IBUNIT=1,IBEVDA="*" D COST^IBAUTL2,CALC^IBAECO,CTBB^IBECEAU3 G @$S(IBCHG:"PROC",1:"ADDQ")
"RTN","IBECEA3",111,0)
 . ;
"RTN","IBECEA3",112,0)
 . ; is this day already a free day
"RTN","IBECEA3",113,0)
 . I $D(^IBA(351.81,IBCLDA,1,"AC",IBFR)) W !!,"This day is already marked as a Free Day." S IBY=-1
"RTN","IBECEA3",114,0)
 . ;
"RTN","IBECEA3",115,0)
 . ; have we already billed for this day
"RTN","IBECEA3",116,0)
 . I $$BFO^IBECEAU(DFN,IBFR) W !!,"This patient has already been billed for this date." S IBY=-1
"RTN","IBECEA3",117,0)
 ;
"RTN","IBECEA3",118,0)
 ; - find per diem charge and description
"RTN","IBECEA3",119,0)
 I IBXA=3 D  I 'IBCHG W !!,"Unable to determine the per diem rate.  Please check your rate table." G ADDQ
"RTN","IBECEA3",120,0)
 .N IBDT S IBDT=IBFR,IBGMTR=0 D COST^IBAUTL2
"RTN","IBECEA3",121,0)
 .I IBGMT>0 S IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG)
"RTN","IBECEA3",122,0)
 .S IBDESC="" X:$D(^IBE(350.1,IBATYP,20)) ^(20)
"RTN","IBECEA3",123,0)
 ;
"RTN","IBECEA3",124,0)
 ; - calculate charge for the inpatient copay
"RTN","IBECEA3",125,0)
 I IBXA=2,IBCHG+IBCLDOL'<IBMED S IBCHG=IBMED-IBCLDOL,IBUNIT=1,IBTO=IBFR D CTBB^IBECEAU3 G EV
"RTN","IBECEA3",126,0)
 ;
"RTN","IBECEA3",127,0)
TO ; - ask 'bill to' date
"RTN","IBECEA3",128,0)
 D TO^IBECEAU2(0) G:IBY<0 ADDQ
"RTN","IBECEA3",129,0)
 ;
"RTN","IBECEA3",130,0)
 I IBXA>0,IBXA<4,IBGMT'=$$ISGMTPT^IBAGMT(DFN,IBTO) W !!,"The patient's GMT Copayment status changed within the specified period!",! G ADDQ
"RTN","IBECEA3",131,0)
 ;
"RTN","IBECEA3",132,0)
 ; - calculate unit charge for LTC inpatient in IBCHG
"RTN","IBECEA3",133,0)
 I IBXA=9 S IBDT=IBFR,IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH),IBEVDT=$E(IBFR,1,5)_"01" D:IBEVDA<1  G ADDQ:IBY<0 D COST^IBAUTL2 I $E(IBFR,1,5)'=$E(IBTO,1,5) W !!,"  LTC Copayment charges cannot go from one month to another." G ADDQ
"RTN","IBECEA3",134,0)
 . D NOEV^IBECEA31 I '$G(IBDG)!(IBY<0) S IBY=-1 Q
"RTN","IBECEA3",135,0)
 . ; - build the event record
"RTN","IBECEA3",136,0)
 . N IBNHLTC S IBNHLTC=1 D ADEV^IBECEA31
"RTN","IBECEA3",137,0)
 ;
"RTN","IBECEA3",138,0)
 ;
"RTN","IBECEA3",139,0)
 ; - calculate units and total charge
"RTN","IBECEA3",140,0)
 S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR) S:IBXA'=3!(IBFR=IBTO) IBUNIT=IBUNIT+1
"RTN","IBECEA3",141,0)
 I IBXA=1 D:IBGMT>0  D FEPR^IBECEA32 G ADDQ:IBY<0,EV
"RTN","IBECEA3",142,0)
 . S IBGMTR=1
"RTN","IBECEA3",143,0)
 . W !,"The patient has GMT Copayment Status! GMT rate must be applied.",!
"RTN","IBECEA3",144,0)
 S IBCHG=IBCHG*IBUNIT S:IBXA=2 IBCHG=$S(IBCLDOL+IBCHG>IBMED:IBMED-IBCLDOL,1:IBCHG)
"RTN","IBECEA3",145,0)
 ;
"RTN","IBECEA3",146,0)
 ; adjust the LTC charge based on the calculated copay cap
"RTN","IBECEA3",147,0)
 I IBXA=9 D CALC^IBAECI G:IBY<1!('IBCHG) ADDQ S IBDESC="LTC INPATIENT COPAY"
"RTN","IBECEA3",148,0)
 ;
"RTN","IBECEA3",149,0)
 D CTBB^IBECEAU3 W:IBXA=3!(IBXA=9) "  (for ",IBUNIT," day",$E("s",IBUNIT>1),")" W:IBGMTR " GMT Rate"
"RTN","IBECEA3",150,0)
 ;
"RTN","IBECEA3",151,0)
EV ; - find event record, or select admission for linkage
"RTN","IBECEA3",152,0)
 I IBXA'=9 S IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH)
"RTN","IBECEA3",153,0)
 I IBEVDA'>0 D NOEV^IBECEA31 G ADDQ:IBY<0,PROC
"RTN","IBECEA3",154,0)
 S IBSL=$P($G(^IB(+IBEVDA,0)),"^",4)
"RTN","IBECEA3",155,0)
 W !!,"Linked charge to ",$$TYP(),"admission on ",$$DAT1^IBOUTL($P(IBEVDA,"^",2)),"  ("
"RTN","IBECEA3",156,0)
 W $S($P(IBEVDA,"^",3)=9999999:"Still admitted)",1:"Discharged on "_$$DAT1^IBOUTL($P(IBEVDA,"^",3))_$S($P(IBEVDA,"^",3)>DT:" [pseudo])",1:")"))," ..."
"RTN","IBECEA3",157,0)
 S IBEVDA=+IBEVDA
"RTN","IBECEA3",158,0)
 I '$G(IBSIBC) D SPEC^IBECEA32(0,$O(^IBE(351.2,"AD",IBEVDA,0)))
"RTN","IBECEA3",159,0)
 ;
"RTN","IBECEA3",160,0)
 ;
"RTN","IBECEA3",161,0)
PROC ; - okay to proceed?
"RTN","IBECEA3",162,0)
 D PROC^IBECEAU4("add") G:IBY<0 ADDQ
"RTN","IBECEA3",163,0)
 ;
"RTN","IBECEA3",164,0)
 ; - build the event record first if necessary
"RTN","IBECEA3",165,0)
 I $G(IBDG),IBXA'=9 D @("ADEV^IBECEA3"_$S($G(IBFEEV):4,1:1)) G:IBY<0 ADDQ
"RTN","IBECEA3",166,0)
 ;
"RTN","IBECEA3",167,0)
 ; - disposition the special inpatient billing case, if necessary
"RTN","IBECEA3",168,0)
 I $G(IBSIBC) D CEA^IBAMTI1(IBSIBC,IBEVDA)
"RTN","IBECEA3",169,0)
 ;
"RTN","IBECEA3",170,0)
 ; - generate entry in file #354.71 and #350
"RTN","IBECEA3",171,0)
 I IBXA=5 W !!,"Building the new transaction...  " S IBAM=$$ADD^IBARXMN(DFN,"^^"_IBEFDT_"^^P^^"_IBUNIT_"^"_IBCHG_"^"_IBDESC_"^^"_IBCHG_"^0^"_IBSITE_"^^^^^^^"_$G(IBTIER)) G:IBAM<0 ADDQ
"RTN","IBECEA3",172,0)
 D ADD^IBECEAU3 G:IBY<0 ADDQ W "done."
"RTN","IBECEA3",173,0)
 ;
"RTN","IBECEA3",174,0)
 ; - pass the charge off to AR on-line
"RTN","IBECEA3",175,0)
 W !,"Passing the charge directly to Accounts Receivable... "
"RTN","IBECEA3",176,0)
 D PASSCH^IBECEA22 W:IBY>0 "done." G:IBY<0 ADDQ
"RTN","IBECEA3",177,0)
 ;
"RTN","IBECEA3",178,0)
 ; - review the special inpatient billing case
"RTN","IBECEA3",179,0)
 I $G(IBSIBC1) D CHK^IBAMTI1(IBSIBC1,IBEVDA)
"RTN","IBECEA3",180,0)
 ;
"RTN","IBECEA3",181,0)
 ; - handle updating of clock
"RTN","IBECEA3",182,0)
 I IBXA'=8,IBXA'=9 D CLUPD^IBECEA32
"RTN","IBECEA3",183,0)
 ;
"RTN","IBECEA3",184,0)
ADDQ ; - display error, rebuild list, and quit
"RTN","IBECEA3",185,0)
 D ERR^IBECEAU4:IBY<0,PAUSE^IBECEAU S VALMBCK="R"
"RTN","IBECEA3",186,0)
 I IBCOMMIT S IBBG=VALMBG W !,"Rebuilding list of charges..." D ARRAY^IBECEA0 S VALMBG=IBBG
"RTN","IBECEA3",187,0)
 K IBMED,IBCLDA,IBCLDT,IBCLDOL,IBCLDAY,IBATYP,IBDG,IBSEQNO,IBXA,IBNH,IBBS,IBLIM,IBFR,IBTO,IBRTED,IBSIBC,IBSIBC1,IBBG,IBFEEV,IBAM
"RTN","IBECEA3",188,0)
 K IBX,IBCHG,IBUNIT,IBDESC,IBDT,IBEVDT,IBEVDA,IBSL,IBNOS,IBN,IBTOTL,IBARTYP,IBIL,IBTRAN,IBAFY,IBCVA,IBCLSF,IBDD,IBND,VADM,VA,VAERR,IBADJMED
"RTN","IBECEA3",189,0)
ADDQ1 K IBEXSTAT,IBCOMMIT,IBCATC,IBCVAEL,IBLTCST,IBTIER,IBEFDT
"RTN","IBECEA3",190,0)
 Q
"RTN","IBECEA3",191,0)
 ;
"RTN","IBECEA3",192,0)
 ;
"RTN","IBECEA3",193,0)
TYP() ; Return descriptive admission type.
"RTN","IBECEA3",194,0)
 N X S X=""
"RTN","IBECEA3",195,0)
 I IBNH'=2 G TYPQ
"RTN","IBECEA3",196,0)
 I $G(IBADJMED) S X=$S(IBADJMED=1:"C",1:"H")
"RTN","IBECEA3",197,0)
 E  S X=$S($P($G(^IBE(350.1,+IBATYP,0)),"^")["NHCU":"C",1:"H")
"RTN","IBECEA3",198,0)
 S X=$S(X="C":"CNH ",1:"Contract Hospital ")
"RTN","IBECEA3",199,0)
TYPQ Q X
"RTN","IBECEAU2")
0^13^B28548148
"RTN","IBECEAU2",1,0)
IBECEAU2 ;ALB/CPM-Cancel/Edit/Add... User Prompts ; 19-APR-93
"RTN","IBECEAU2",2,0)
 ;;2.0;INTEGRATED BILLING;**7,52,153,176,545,563**;21-MAR-94;Build 12
"RTN","IBECEAU2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEAU2",4,0)
 ;
"RTN","IBECEAU2",5,0)
REAS(IBX) ; Ask for the cancellation reason.
"RTN","IBECEAU2",6,0)
 ; Input:   IBX  --  "C" (Cancel a charge), "E" (Edit a Charge)
"RTN","IBECEAU2",7,0)
 S DIC="^IBE(350.3,",DIC(0)="AEMQZ",DIC("A")="Select "_$S(IBX="E":"EDIT",1:"CANCELLATION")_" REASON: "
"RTN","IBECEAU2",8,0)
 S DIC("S")=$S(IBXA=7:"I 1",IBXA=6:"I $P(^(0),U,3)=3",IBXA=5:"I ($P(^(0),U,3)=1)!($P(^(0),U,3)=3)",1:"I ($P(^(0),U,3)=2)!($P(^(0),U,3)=3)")
"RTN","IBECEAU2",9,0)
 D ^DIC K DIC S IBCRES=+Y I Y<0 W !!,"No ",$S(IBX="E":"edit",1:"cancellation")," reason entered - the transaction cannot be completed."
"RTN","IBECEAU2",10,0)
 Q
"RTN","IBECEAU2",11,0)
 ;
"RTN","IBECEAU2",12,0)
UNIT(DEF) ; Ask for units for Rx copay charges
"RTN","IBECEAU2",13,0)
 ; Input:   DEF  --  Default value if previous charge is to be displayed
"RTN","IBECEAU2",14,0)
 N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
"RTN","IBECEAU2",15,0)
 S DA=IBATYP,IBDESC="RX COPAYMENT" D COST^IBAUTL S IBCHG=X1
"RTN","IBECEAU2",16,0)
 S DIR(0)="N^::0^K:X<1!(X>12) X",DIR("A")="Units",DIR("?")="^D HUN^IBECEAU2"
"RTN","IBECEAU2",17,0)
 S:DEF DIR("B")=DEF D ^DIR I Y S IBUNIT=Y,IBCHG=IBCHG*Y
"RTN","IBECEAU2",18,0)
 I 'Y W !!,"Units not entered - transaction cannot be completed." S IBY=-1
"RTN","IBECEAU2",19,0)
 Q
"RTN","IBECEAU2",20,0)
 ;
"RTN","IBECEAU2",21,0)
FR(DEF) ; Ask Bill From Date
"RTN","IBECEAU2",22,0)
 ; Input:   DEF  --  Default value if previous charge is to be displayed
"RTN","IBECEAU2",23,0)
 N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
"RTN","IBECEAU2",24,0)
FRA S:$G(DEF) DIR("B")=$$DAT2^IBOUTL(DEF)
"RTN","IBECEAU2",25,0)
 S DIR(0)="DA^2901001:"_IBLIM_":EX",DIR("A")=$S(IBXA=4!(IBXA=7):"Visit Date: ",IBXA=5:"Rx Date: ",1:"Charge for services from: "),DIR("?")="^D HFR^IBECEAU2"
"RTN","IBECEAU2",26,0)
 D ^DIR K DIR S IBFR=Y I 'Y W !!,$S(IBXA=4!(IBXA=7):"Visit",IBXA=5:"Rx",1:"Bill From")," Date not entered - transaction cannot be completed." S IBY=-1 G FRQ
"RTN","IBECEAU2",27,0)
 I IBXA=7 G FRQ
"RTN","IBECEAU2",28,0)
 I IBXA'=8,IBXA'=9,IBXA'=5,'$$BIL^DGMTUB(DFN,IBFR+.24) D CATC G FRA
"RTN","IBECEAU2",29,0)
 I IBXA>7,IBXA<10,$$LTCST^IBAECU(DFN,IBFR,1)<2 W !,"This patient is not LTC billable on this date.",! G FRA
"RTN","IBECEAU2",30,0)
 I IBXA=4,$$BFO^IBECEAU(DFN,IBFR) W !!,"This patient has already been billed the outpatient copay charge for ",$$DAT1^IBOUTL(IBFR),".",! G FRA
"RTN","IBECEAU2",31,0)
FRQ Q
"RTN","IBECEAU2",32,0)
 ;
"RTN","IBECEAU2",33,0)
TO(DEF) ; Ask Bill To Date
"RTN","IBECEAU2",34,0)
 ; Input:   DEF  --  Default value if previous charge is to be displayed
"RTN","IBECEAU2",35,0)
 N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
"RTN","IBECEAU2",36,0)
TOA S:$G(DEF) DIR("B")=$$DAT2^IBOUTL(DEF)
"RTN","IBECEAU2",37,0)
 S DIR(0)="DA^"_IBFR_":"_IBLIM_":EX",DIR("A")="  Charge for services to: ",DIR("?")="^D HTO^IBECEAU2"
"RTN","IBECEAU2",38,0)
 D ^DIR K DIR S IBTO=Y I 'Y W !!,"Bill To date not entered - transaction cannot be completed." S IBY=-1 G TOQ
"RTN","IBECEAU2",39,0)
 I IBTO'=IBFR,'$$BIL^DGMTUB(DFN,$S(IBXA=3&'$G(DEF):$$FMADD^XLFDT(IBTO,-1),1:IBTO)+.24),IBXA'=8,IBXA'=9 D CATC G TOA
"RTN","IBECEAU2",40,0)
TOQ Q
"RTN","IBECEAU2",41,0)
 ;
"RTN","IBECEAU2",42,0)
FEE(DEF) ; Ask for Fee Amount
"RTN","IBECEAU2",43,0)
 ; Input:   DEF  --  Default value if previous charge is to be displayed
"RTN","IBECEAU2",44,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEAU2",45,0)
 S:$G(DEF) DIR("B")=DEF
"RTN","IBECEAU2",46,0)
 S DIR(0)="NA^::2^K:X<0!(X>(IBMED-IBCLDOL)) X",DIR("A")="              Fee Amount: ",DIR("?")="^D HFEE^IBECEAU2"
"RTN","IBECEAU2",47,0)
 D ^DIR S IBCHG=Y I 'Y W !!,"Charge not entered - transaction cannot be completed." S IBY=-1
"RTN","IBECEAU2",48,0)
 Q
"RTN","IBECEAU2",49,0)
 ;
"RTN","IBECEAU2",50,0)
AMT ; Ask for Charge Amount
"RTN","IBECEAU2",51,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEAU2",52,0)
 S DIR(0)="NA^::2^K:X<0!(X>99999) X",DIR("A")="Charge Amount: ",DIR("?")="^D HAMT^IBECEAU2"
"RTN","IBECEAU2",53,0)
 D ^DIR S IBCHG=Y I 'Y W !!,"Charge not entered - transaction cannot be completed." S IBY=-1
"RTN","IBECEAU2",54,0)
 Q
"RTN","IBECEAU2",55,0)
 ;
"RTN","IBECEAU2",56,0)
CATC ; Display that patient is not Means Test billable.
"RTN","IBECEAU2",57,0)
 W !!,"The patient ",$S(IBFR<DT:"was",1:"is")," not Means Test billable on this date.",!
"RTN","IBECEAU2",58,0)
 Q
"RTN","IBECEAU2",59,0)
 ;
"RTN","IBECEAU2",60,0)
HUN ; Help for units
"RTN","IBECEAU2",61,0)
 W !!,"Please enter 1, 2, 3, ...,12 to denote a 30, 60, 90, ...,360 days supply of"
"RTN","IBECEAU2",62,0)
 W !,"medication, or '^' to quit."
"RTN","IBECEAU2",63,0)
 Q
"RTN","IBECEAU2",64,0)
 ;
"RTN","IBECEAU2",65,0)
HFR ; Help for Bill From date
"RTN","IBECEAU2",66,0)
 W !!,"Please enter the ",$S(IBXA=4!(IBXA=7):"patient's outpatient visit date",IBXA=5:"patient's prescription date",1:"'Bill From' date for this charge"),$S(IBXA'=5:", which must follow",1:"")
"RTN","IBECEAU2",67,0)
 W !,$S(IBXA=5:"today or prior to today",1:"10/1/90"_$S(IBXA=4!(IBXA=7):"",1:" (and be prior to today)")),", or '^' to quit."
"RTN","IBECEAU2",68,0)
 Q
"RTN","IBECEAU2",69,0)
 ;
"RTN","IBECEAU2",70,0)
HTO ; Help for Bill To date
"RTN","IBECEAU2",71,0)
 W !!,"Please enter the 'Bill To' date for this charge, which may not precede"
"RTN","IBECEAU2",72,0)
 W !,$$DAT1^IBOUTL(IBFR),", or '^' to quit."
"RTN","IBECEAU2",73,0)
 Q
"RTN","IBECEAU2",74,0)
 ;
"RTN","IBECEAU2",75,0)
HFEE ; Help for Fee Amount
"RTN","IBECEAU2",76,0)
 W !!,"Please enter the charge for this Fee Service, which may not be greater than"
"RTN","IBECEAU2",77,0)
 W !,"the difference between the Medicare Deductible amount and the "
"RTN","IBECEAU2",78,0)
 W $$INPT^IBECEAU(IBCLDAY)," 90 days",!,"copay billed ($",IBMED-IBCLDOL,"), or '^' to quit."
"RTN","IBECEAU2",79,0)
 Q
"RTN","IBECEAU2",80,0)
 ;
"RTN","IBECEAU2",81,0)
HAMT ; Help for Charge Amount
"RTN","IBECEAU2",82,0)
 W !!,"Please enter the charge for this copayment."
"RTN","IBECEAU2",83,0)
 Q
"RTN","IBECEAU2",84,0)
 ;
"RTN","IBECEAU2",85,0)
TIER(IBATYP,IBEFDT,TIER) ; Prompt if needed for copay tier
"RTN","IBECEAU2",86,0)
 ; IBATYP - 350.1 IB Action Type
"RTN","IBECEAU2",87,0)
 ; IBEFDT - Date for possible tier choice or not if only one tier available
"RTN","IBECEAU2",88,0)
 ; TIER - {optional) default tier, if none specified, then 2 used
"RTN","IBECEAU2",89,0)
 N IB,IBN,IBD,IBEND,IBFTIER,IBLTIER,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIR,IBTIER
"RTN","IBECEAU2",90,0)
 S IBD=-($G(IBEFDT,DT)+.9),IBD=$O(^IBE(350.2,"AIVDT",IBATYP,IBD)),IBEND=$O(^IBE(350.2,"AIVDT",IBATYP,IBD))
"RTN","IBECEAU2",91,0)
 S IBN=0 F  S IBN=$O(^IBE(350.2,"AIVDT",IBATYP,IBD,IBN)) Q:'IBN  S IB=$G(^IBE(350.2,IBN,0)) I IB]"",'$P(IB,"^",5)!($P(IB,"^",5)>IBEFDT) S IBTIER($P(IB,"^",7))=""
"RTN","IBECEAU2",92,0)
 ; if only one tier don't prompt just use it
"RTN","IBECEAU2",93,0)
 S IBFTIER=$O(IBTIER(0)) I '$O(IBTIER(IBFTIER)) Q IBFTIER
"RTN","IBECEAU2",94,0)
 S IBLTIER=$O(IBTIER(1000),-1)
"RTN","IBECEAU2",95,0)
 S DIR(0)="N^"_IBFTIER_":"_IBLTIER_":0"
"RTN","IBECEAU2",96,0)
 S DIR("A")="ENTER THE COPAY TIER"
"RTN","IBECEAU2",97,0)
 S DIR("B")=$S($G(TIER):TIER,1:2)
"RTN","IBECEAU2",98,0)
 S DIR("?")="Enter the copayment tier for this charge, it will be used to determine the per unit rate."
"RTN","IBECEAU2",99,0)
 D ^DIR
"RTN","IBECEAU2",100,0)
 I $D(DIRUT) S IBY=-1 Q 0
"RTN","IBECEAU2",101,0)
 Q Y
"RTN","IBECEAU3")
0^14^B7348522
"RTN","IBECEAU3",1,0)
IBECEAU3 ;ALB/CPM-Cancel/Edit/Add... Add New IB Action;11-MAR-93
"RTN","IBECEAU3",2,0)
 ;;2.0;INTEGRATED BILLING;**132,150,167,183,341,563**;21-MAR-94;Build 12
"RTN","IBECEAU3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEAU3",4,0)
 ;
"RTN","IBECEAU3",5,0)
ADD ; Add a new Integrated Billing Action entry.
"RTN","IBECEAU3",6,0)
 ;   Input:     DFN  --  Pointer to patient in file #2
"RTN","IBECEAU3",7,0)
 ;           IBATYP  --  Pointer to Action Type in file #350.1
"RTN","IBECEAU3",8,0)
 ;           IBUNIT  --  Number of units of charge
"RTN","IBECEAU3",9,0)
 ;            IBCHG  --  Total charge
"RTN","IBECEAU3",10,0)
 ;           IBDESC  --  Charge description
"RTN","IBECEAU3",11,0)
 ;           IBSITE  --  Pointer to the facility in file #4
"RTN","IBECEAU3",12,0)
 ;            IBFAC  --  Facility number
"RTN","IBECEAU3",13,0)
 ;             IBFR  --  Bill From date
"RTN","IBECEAU3",14,0)
 ;             IBTO  --  Bill To date
"RTN","IBECEAU3",15,0)
 ;           IBEFDT  --  Bill Effective Date [OPTIONAL Rx Only]
"RTN","IBECEAU3",16,0)
 ;             IBSL  --  Softlink  [OPTIONAL]
"RTN","IBECEAU3",17,0)
 ;          IBPARNT  --  Pointer to parent entry in #350  [OPTIONAL]
"RTN","IBECEAU3",18,0)
 ;           IBEVDA  --  Pointer to parent event in #350  [OPTIONAL], or
"RTN","IBECEAU3",19,0)
 ;                   --  "*" to set ibevda=ibn
"RTN","IBECEAU3",20,0)
 ;           IBEVDT  --  Event Date  [OPTIONAL]
"RTN","IBECEAU3",21,0)
 ;             IBIL  --  Bill Number  [OPTIONAL]
"RTN","IBECEAU3",22,0)
 ;           IBCRES  --  Pointer to canc. reason in #350.3  [OPTIONAL]
"RTN","IBECEAU3",23,0)
 ;             IBXA  --  IB Action billing group  [OPTIONAL]
"RTN","IBECEAU3",24,0)
 ;            IBJOB  --  Option being executed  [OPTIONAL]
"RTN","IBECEAU3",25,0)
 ;            IBCVA  --  CHAMPVA Admission date [OPTIONAL]
"RTN","IBECEAU3",26,0)
 ;         IBSTOPDA  --  Pointer to clinic stop entry in #352.5 [OPTIONAL]
"RTN","IBECEAU3",27,0)
 ;                       (used for new outpatient appts created in IB)
"RTN","IBECEAU3",28,0)
 ;           IBGMTR  --  GMT Related flag [OPTIONAL]
"RTN","IBECEAU3",29,0)
 ;           IBTIER  --  Copay Tier [OPTIONAL]
"RTN","IBECEAU3",30,0)
 ;
"RTN","IBECEAU3",31,0)
 ;  Output:     IBN  --  Internal number of new entry in file #350
"RTN","IBECEAU3",32,0)
 ;
"RTN","IBECEAU3",33,0)
 N DA,DIK,IBASTR,IBND,Y
"RTN","IBECEAU3",34,0)
 D ADD^IBAUTL I Y<1 S IBY=Y G ADDQ
"RTN","IBECEAU3",35,0)
 S:$G(IBEVDA)="*" IBEVDA=IBN
"RTN","IBECEAU3",36,0)
 S IBND=DFN_"^"_IBATYP_"^"_$S($G(IBSL):IBSL,1:"350:"_IBN)_"^1^"_IBUNIT_"^"_IBCHG_"^"_IBDESC_"^"_$S($D(IBPARNT):IBPARNT,1:IBN)_"^"_$G(IBCRES)_"^"_$G(IBIL)_"^^"_IBFAC
"RTN","IBECEAU3",37,0)
 I IBDESC["RX COPAY",$D(IBAM) S $P(IBND,"^",18)=IBAM,$P(^IBAM(354.71,IBAM,0),"^",6)="350:"_IBN ; mark 354.71 entry back and forth
"RTN","IBECEAU3",38,0)
 I IBDESC["RX COPAY",$G(IBEFDT) S $P(IBND,"^",13,14)=IBEFDT_"^"_IBEFDT
"RTN","IBECEAU3",39,0)
 I IBDESC'["RX COPAY" S IBND=IBND_"^"_IBFR_"^"_IBTO_"^"_$G(IBEVDA)_$S($G(IBEVDT):"^"_IBEVDT,$G(IBXA)=1!($G(IBXA)=4)!($G(IBJOB)=5):"^"_IBFR,1:"")
"RTN","IBECEAU3",40,0)
 I $G(IBSTOPDA) S $P(IBND,"^",19)=IBSTOPDA
"RTN","IBECEAU3",41,0)
 I $G(IBTIER) S $P(IBND,"^",21)=IBTIER
"RTN","IBECEAU3",42,0)
 S $P(^IB(IBN,0),"^",2,20)=IBND
"RTN","IBECEAU3",43,0)
 I $G(IBGMTR) S $P(^IB(IBN,0),"^",21)=1 ; GMT Related
"RTN","IBECEAU3",44,0)
 ; DUZ may be null if this code is called by a process started by an HL7 multi-threaded listener
"RTN","IBECEAU3",45,0)
 ; if this condition occurs the approved fix is to use the Postmaster IEN.  2/27/06, IB*2.0*341
"RTN","IBECEAU3",46,0)
 D NOW^%DTC S $P(^IB(IBN,1),"^")=$S(DUZ:DUZ,1:.5),$P(^(1),"^",3,5)=$S(DUZ:DUZ,1:.5)_"^"_%_$S($G(IBCVA):"^"_IBCVA,1:"")
"RTN","IBECEAU3",47,0)
 S DIK="^IB(",DA=IBN D IX1^DIK
"RTN","IBECEAU3",48,0)
ADDQ Q
"RTN","IBECEAU3",49,0)
 ;
"RTN","IBECEAU3",50,0)
CTBB ; Charge to be billed
"RTN","IBECEAU3",51,0)
 ; Check Outpat. Fee Service less than 20% Outpat Co Pay
"RTN","IBECEAU3",52,0)
 D:$G(IBAFEE) FEE^IBECEAU5 Q:IBY<1
"RTN","IBECEAU3",53,0)
 W !!,"Charge to be billed --> $",$J(IBCHG,0,2)
"RTN","IBECEAU3",54,0)
 Q
"RTN","IBECEAU3",55,0)
 ;
"RTN","IBECEAU3",56,0)
NODED ; Could not determine the Medicare Deductible amount.
"RTN","IBECEAU3",57,0)
 W !,*7,"The Medicare Deductible Amount for ",$$DAT1^IBOUTL(IBCLDT)," could not be determined."
"RTN","IBECEAU3",58,0)
 W !,"You should determine the cause of this problem before proceeding."
"RTN","IBECEAU3",59,0)
 S IBY=-1
"RTN","IBECEAU3",60,0)
 Q
"RTN","IBECEAU4")
0^15^B16986387
"RTN","IBECEAU4",1,0)
IBECEAU4 ;ALB/CPM - Cancel/Edit/Add... Cancel Utilities ; 23-APR-93
"RTN","IBECEAU4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,167,183,341,563**;21-MAR-94;Build 12
"RTN","IBECEAU4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEAU4",4,0)
 ;
"RTN","IBECEAU4",5,0)
CANCH(IBN,IBCRES,IBIND,IBCV) ; Cancel last transaction for a specific charge.
"RTN","IBECEAU4",6,0)
 ;  Input:    IBN   --  Charge to be cancelled
"RTN","IBECEAU4",7,0)
 ;          IBCRES  --  Cancellation reason
"RTN","IBECEAU4",8,0)
 ;           IBIND  --  1=>set MT bulletin flags; 0=>don't set flags
"RTN","IBECEAU4",9,0)
 ;            IBCV  --  1=>use the CHAMPVA error bulletin
"RTN","IBECEAU4",10,0)
 N IBY,IBHOLDN,IBND,IBPARNT,IBCANC,IBH,IBCANTR,IBXA,IBATYP,IBSEQNO,IBIL,IBUNIT,IBCHG
"RTN","IBECEAU4",11,0)
 S (IBN,IBHOLDN)=$$LAST^IBECEAU($P(^IB(IBN,0),"^",9)),IBY=1
"RTN","IBECEAU4",12,0)
 D CED(IBN) I IBCANTR!(IBY<0) G CANCHQ
"RTN","IBECEAU4",13,0)
 D CANC(IBN,IBCRES,1) I IBY<0 G CANCHQ
"RTN","IBECEAU4",14,0)
 I $G(IBIND) S IBARR(DT,IBHOLDN)="",(IBCANCEL,IBFND)=1
"RTN","IBECEAU4",15,0)
CANCHQ I IBY<1 D @$S($G(IBCV):"ERRMSG^IBACVA2(0,1)",1:"^IBAERR1")
"RTN","IBECEAU4",16,0)
 Q
"RTN","IBECEAU4",17,0)
 ;
"RTN","IBECEAU4",18,0)
CANC(IBCN,IBCRES,IBINC) ; Cancel a charge, after passing all edits
"RTN","IBECEAU4",19,0)
 ; Input:    IBCN  --  Internal entry # of IB Action to cancel
"RTN","IBECEAU4",20,0)
 ;          IBCRES --  Cancellation reason
"RTN","IBECEAU4",21,0)
 ;           IBINC --  Try to cancel an incomplete charge? [optional]
"RTN","IBECEAU4",22,0)
 N DA,DIK,IBCAN,IBSTOPDA,IBGMTR,IBTIER
"RTN","IBECEAU4",23,0)
 S IBCAN=$G(^IB(IBCN,0))
"RTN","IBECEAU4",24,0)
 ;
"RTN","IBECEAU4",25,0)
 ; - handle incomplete transactions
"RTN","IBECEAU4",26,0)
 I $G(IBINC) S:'$D(IBH) IBH='$P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",4) I IBH D UPSTAT(IBCN,1) G CANCQ
"RTN","IBECEAU4",27,0)
 ;
"RTN","IBECEAU4",28,0)
 ; - handle regular transactions
"RTN","IBECEAU4",29,0)
 S IBATYP=$P($G(^IBE(350.1,+$P(IBCAN,"^",3),0)),"^",6) I IBATYP="" S IBY="-1^IB022" G CANCQ
"RTN","IBECEAU4",30,0)
 S IBSEQNO=$P($G(^IBE(350.1,IBATYP,0)),"^",5) I 'IBSEQNO S IBY="-1^IB023" G CANCQ
"RTN","IBECEAU4",31,0)
 W:$G(IBJOB)=4 !!,"Building the cancellation transaction... "
"RTN","IBECEAU4",32,0)
 D ADD^IBAUTL I Y<1 S IBY=Y G CANCQ
"RTN","IBECEAU4",33,0)
 S $P(IBCAN,"^",3)=IBATYP,$P(IBCAN,"^",5)=1,$P(IBCAN,"^",10)=IBCRES,$P(IBCAN,"^",12)=""
"RTN","IBECEAU4",34,0)
 ;  if there is a clinic stop, move it over
"RTN","IBECEAU4",35,0)
 S IBSTOPDA=$P(IBCAN,"^",20)
"RTN","IBECEAU4",36,0)
 S IBGMTR=$P(IBCAN,"^",21),IBTIER=$P(IBCAN,"^",22) ; 'GMT RELATED' flag and Tier value
"RTN","IBECEAU4",37,0)
 S:IBXA'=5 IBCAN=$P(IBCAN,"^",1,16)
"RTN","IBECEAU4",38,0)
 S IBCAN=$P(IBCAN,"^",1,17)
"RTN","IBECEAU4",39,0)
 I IBSTOPDA S $P(IBCAN,"^",20)=IBSTOPDA
"RTN","IBECEAU4",40,0)
 S $P(^IB(IBN,0),"^",2,20)=$P(IBCAN,"^",2,20)
"RTN","IBECEAU4",41,0)
 I IBGMTR!(IBTIER) S $P(^IB(IBN,0),"^",21,22)=IBGMTR_"^"_IBTIER ; Set the 'GMT RELATED' flag and Tier value
"RTN","IBECEAU4",42,0)
 ; DUZ may be null if this code is called by a process started by an HL7 multi-threaded listener
"RTN","IBECEAU4",43,0)
 ; if this condition occurs the approved fix is to use the Postmaster IEN.  2/27/06, IB*2.0*341
"RTN","IBECEAU4",44,0)
 S $P(^IB(IBN,1),"^")=$S(DUZ:DUZ,1:.5) ;
"RTN","IBECEAU4",45,0)
 S DA=IBN,DIK="^IB(" D IX1^DIK
"RTN","IBECEAU4",46,0)
 W:$G(IBJOB)=4 " .. " D PASS
"RTN","IBECEAU4",47,0)
 ;
"RTN","IBECEAU4",48,0)
 ; - cancel original charge (if it was an updated transaction)
"RTN","IBECEAU4",49,0)
 I $D(^IB(IBCN,0)),$P(^(0),"^",5)'=10 D UPSTAT(IBCN)
"RTN","IBECEAU4",50,0)
CANCQ Q
"RTN","IBECEAU4",51,0)
 ;
"RTN","IBECEAU4",52,0)
CED(IBN) ; Edits required to cancel a charge.
"RTN","IBECEAU4",53,0)
 ; Input:   IBN  --   Internal entry # of charge to be cancelled
"RTN","IBECEAU4",54,0)
 S IBND=$G(^IB(IBN,0)) I 'IBND S IBY="-1^IB021" G CEDQ
"RTN","IBECEAU4",55,0)
 S IBPARNT=+$P(IBND,"^",9) I '$D(^IB(IBPARNT,0)) S IBY="-1^IB027" G CEDQ
"RTN","IBECEAU4",56,0)
 I $$LAST^IBECEAU(IBPARNT)'=IBN S IBY="-1^^You can only cancel the last transaction for an original charge." G CEDQ
"RTN","IBECEAU4",57,0)
 S IBCANC=$G(^IBE(350.1,+$P(IBND,"^",3),0))
"RTN","IBECEAU4",58,0)
 S IBH='$P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",4),IBCANTR=$P(IBCANC,"^",5)=2
"RTN","IBECEAU4",59,0)
 S IBXA=$P(IBCANC,"^",11),IBATYP=$P(IBCANC,"^",6)
"RTN","IBECEAU4",60,0)
 I '$D(^IBE(350.1,+IBATYP,0)) S IBY="-1^IB022" G CEDQ
"RTN","IBECEAU4",61,0)
 S IBSEQNO=$P(^IBE(350.1,+IBATYP,0),"^",5) I 'IBSEQNO S IBY="-1^IB023" G CEDQ
"RTN","IBECEAU4",62,0)
 S IBIL=$P(IBND,"^",11),IBUNIT=+$P(IBND,"^",6),IBCHG=+$P(IBND,"^",7),IBFR=$P(IBND,"^",14)
"RTN","IBECEAU4",63,0)
 I IBUNIT<1 S IBY="-1^IB025" G CEDQ
"RTN","IBECEAU4",64,0)
 I 'IBH,'IBCHG S IBY="-1^^There is no charge amount associated with this action." G CEDQ
"RTN","IBECEAU4",65,0)
 I $G(IBJOB)'=4,'IBH,IBIL="" S IBY="-1^IB024"
"RTN","IBECEAU4",66,0)
CEDQ Q
"RTN","IBECEAU4",67,0)
 ;
"RTN","IBECEAU4",68,0)
UPSTAT(IBCN,IB) ; Update the status, cancellation reason of incomplete charges.
"RTN","IBECEAU4",69,0)
 N DIE,DA,DR
"RTN","IBECEAU4",70,0)
 W:$G(IBJOB)=4&$G(IB) !,"Updating the status of the charge to 'cancelled'... "
"RTN","IBECEAU4",71,0)
 S DIE="^IB(",DA=IBCN,DR=".05////10;.1////"_IBCRES
"RTN","IBECEAU4",72,0)
 D ^DIE W:$G(IBJOB)=4&$G(IB) "done."
"RTN","IBECEAU4",73,0)
 Q
"RTN","IBECEAU4",74,0)
 ;
"RTN","IBECEAU4",75,0)
PASS ; Pass the action to Accounts Receivable.
"RTN","IBECEAU4",76,0)
 N IBSERV
"RTN","IBECEAU4",77,0)
 S IBNOS=IBN D ^IBR S IBY=Y I Y>0,$G(IBJOB)=4 W "done."
"RTN","IBECEAU4",78,0)
 Q
"RTN","IBECEAU4",79,0)
 ;
"RTN","IBECEAU4",80,0)
ERR ; Error Processing.
"RTN","IBECEAU4",81,0)
 Q:IBY>0
"RTN","IBECEAU4",82,0)
 I $P(IBY,"^",2)]"" W !,$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",$P($P(IBY,"^",2),";"),0)),0)),"^",2) Q
"RTN","IBECEAU4",83,0)
 I $P(IBY,"^",3)]"" W !,$P(IBY,"^",3)
"RTN","IBECEAU4",84,0)
 Q
"RTN","IBECEAU4",85,0)
 ;
"RTN","IBECEAU4",86,0)
PROC(EVT) ; Okay to proceed with Add, Edit, or Cancel?
"RTN","IBECEAU4",87,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEAU4",88,0)
 W ! S DIR(0)="Y",DIR("A")="Okay to "_EVT_" this charge",DIR("?")="Enter 'Y' or 'YES' to "_EVT_" this charge, or 'N', 'NO', or '^' to quit."
"RTN","IBECEAU4",89,0)
 D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) W !,"This charge will not be ",$S(EVT="cancel":"cancelled",1:EVT_"ed"),"." S IBY=-1 G PROCQ
"RTN","IBECEAU4",90,0)
 S IBCOMMIT=1
"RTN","IBECEAU4",91,0)
PROCQ Q
"RTN","IBRXUTL1")
0^6^B5197297
"RTN","IBRXUTL1",1,0)
IBRXUTL1 ;BP/BDM - PHARMACY API CALLS ; DECEMBER 20, 2006
"RTN","IBRXUTL1",2,0)
 ;;2.0;INTEGRATED BILLING;**347,563**;21-MAR-94;Build 12
"RTN","IBRXUTL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRXUTL1",4,0)
 ;
"RTN","IBRXUTL1",5,0)
 ;THIS ROUTINE IS A UTILITY FUNCTION FOR PHARMACY API'S
"RTN","IBRXUTL1",6,0)
 ;
"RTN","IBRXUTL1",7,0)
DATA(IBDRV) ;
"RTN","IBRXUTL1",8,0)
 N LIST,RXRET,RETURN
"RTN","IBRXUTL1",9,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBRXUTL1",10,0)
 S LIST="IBDRUG" D ZERO^PSS50(IBDRV,,,,,LIST)
"RTN","IBRXUTL1",11,0)
 S RXRET=$G(^TMP($J,LIST,0))
"RTN","IBRXUTL1",12,0)
 I RXRET>0 S RETURN=1
"RTN","IBRXUTL1",13,0)
 E  S RETURN=0
"RTN","IBRXUTL1",14,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL1",15,0)
 Q RETURN
"RTN","IBRXUTL1",16,0)
 ;
"RTN","IBRXUTL1",17,0)
DRUG(IBIEN) ;
"RTN","IBRXUTL1",18,0)
 N LIST
"RTN","IBRXUTL1",19,0)
 S LIST="DRUGTMP"
"RTN","IBRXUTL1",20,0)
 D DATA^PSS50(IBIEN,,,,,LIST)
"RTN","IBRXUTL1",21,0)
 S RETURN=$G(^TMP($J,LIST,IBIEN,.01))
"RTN","IBRXUTL1",22,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL1",23,0)
 Q RETURN
"RTN","IBRXUTL1",24,0)
 ;
"RTN","IBRXUTL1",25,0)
ICD(DFN,RXIEN,ICDCT,LIST) ;
"RTN","IBRXUTL1",26,0)
 N ICDOUT,NODE,IBTMPARR
"RTN","IBRXUTL1",27,0)
 I '$G(DFN) S ICDOUT="" Q ICDOUT
"RTN","IBRXUTL1",28,0)
 I '$G(RXIEN) S ICDOUT="" Q ICDOUT
"RTN","IBRXUTL1",29,0)
 I '$G(ICDCT) S ICDOUT="" Q ICDOUT
"RTN","IBRXUTL1",30,0)
 I $G(LIST)="" S ICDOUT="" Q ICDOUT
"RTN","IBRXUTL1",31,0)
 S IBTMPARR="ICDARR"
"RTN","IBRXUTL1",32,0)
 S $P(^TMP($J,IBTMPARR),"^",1)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,.01)),"^",1)
"RTN","IBRXUTL1",33,0)
 S $P(^TMP($J,IBTMPARR),"^",2)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,1)),"^",1)
"RTN","IBRXUTL1",34,0)
 S $P(^TMP($J,IBTMPARR),"^",3)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,2)),"^",1)
"RTN","IBRXUTL1",35,0)
 S $P(^TMP($J,IBTMPARR),"^",4)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,3)),"^",1)
"RTN","IBRXUTL1",36,0)
 S $P(^TMP($J,IBTMPARR),"^",5)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,4)),"^",1)
"RTN","IBRXUTL1",37,0)
 S $P(^TMP($J,IBTMPARR),"^",6)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,5)),"^",1)
"RTN","IBRXUTL1",38,0)
 S $P(^TMP($J,IBTMPARR),"^",7)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,6)),"^",1)
"RTN","IBRXUTL1",39,0)
 S $P(^TMP($J,IBTMPARR),"^",8)=$P($G(^TMP($J,LIST,DFN,RXIEN,"ICD",ICDCT,7)),"^",1)
"RTN","IBRXUTL1",40,0)
 S ICDOUT=^TMP($J,IBTMPARR)
"RTN","IBRXUTL1",41,0)
 K ^TMP($J,IBTMPARR)
"RTN","IBRXUTL1",42,0)
 Q ICDOUT
"RTN","IBRXUTL1",43,0)
 ;
"RTN","IBRXUTL1",44,0)
DRUGF(IBDRUG,IBFLD) ; - returns a specific field from the Drug file
"RTN","IBRXUTL1",45,0)
 N LIST,RETURN
"RTN","IBRXUTL1",46,0)
 S LIST="IBDRUG" K ^TMP($J,LIST)
"RTN","IBRXUTL1",47,0)
 D DATA^PSS50(IBDRUG,,,,,LIST)
"RTN","IBRXUTL1",48,0)
 S RETURN=$G(^TMP($J,LIST,IBDRUG,IBFLD))
"RTN","IBRXUTL1",49,0)
 K ^TMP($J,LIST)
"RTN","IBRXUTL1",50,0)
 Q RETURN
"RTN","IBRXUTL1",51,0)
 ;
"VER")
8.0^22.0
"^DD",350,350,.22,0)
COPAYMENT TIER^NJ3,0^^0;22^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",350,350,.22,3)
Enter the tier this copayment was charged, whole number between 1 and 999.
"^DD",350,350,.22,21,0)
^^2^2^3160317^
"^DD",350,350,.22,21,1,0)
This is the tier used to determine this charge rate for this copayment.  
"^DD",350,350,.22,21,2,0)
It should be a numeric value between 1 and 999, 0 decimal digits.
"^DD",350,350,.22,"DT")
3160317
"^DD",350.2,350.2,.07,0)
COPAYMENT TIER^NJ3,0^^0;7^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",350.2,350.2,.07,3)
Enter a tier for this charge, whole number between 1 and 999.
"^DD",350.2,350.2,.07,21,0)
^^2^2^3160317^
"^DD",350.2,350.2,.07,21,1,0)
This is the tier related to this copayment charge.  The value is used to 
"^DD",350.2,350.2,.07,21,2,0)
determine if the associated charge amount should be used.
"^DD",350.2,350.2,.07,"DT")
3160317
"^DD",354.71,354.71,.2,0)
COPAYMENT TIER^NJ3,0^^0;20^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",354.71,354.71,.2,3)
Enter the tier this copayment was charged, whole number between 1 and 999.
"^DD",354.71,354.71,.2,21,0)
^^2^2^3160317^
"^DD",354.71,354.71,.2,21,1,0)
This is the tier used to determine this charge rate for this copayment.  
"^DD",354.71,354.71,.2,21,2,0)
It should be a numeric value between 1 and 999, 0 decimal digits.
"^DD",354.71,354.71,.2,"DT")
3160317
"^DD",354.75,354.75,.02,0)
PRIORITY LEVEL^NJ1,0^^0;2^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1.N) X
"^DD",354.75,354.75,.02,3)
Answer with a priority level 1 through 8.
"^DD",354.75,354.75,.02,21,0)
^.001^2^2^3011015^^
"^DD",354.75,354.75,.02,21,1,0)
This is the priority level of the cap.  This will be used based upon the
"^DD",354.75,354.75,.02,21,2,0)
patient's priority level to determine what their cap amount is.
"^DD",354.75,354.75,.02,"DT")
3160329
**END**
**END**
