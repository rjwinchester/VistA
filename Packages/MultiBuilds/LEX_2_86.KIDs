KIDS Distribution saved on Dec 19, 2014@16:14:54
LEX*2.0*86/ICD*18.0*67/FB*3.5*157 Install
**KIDS**:LEX*2.0*86^ICD*18.0*67^FB*3.5*157^

**INSTALL NAME**
LEX*2.0*86
"BLD",8327,0)
LEX*2.0*86^LEXICON UTILITY^0^3141219^y
"BLD",8327,1,0)
^^11^11^3140811^
"BLD",8327,1,1,0)
Please see the National Patch Module for details of the enhancements
"BLD",8327,1,2,0)
included in this patch.
"BLD",8327,1,3,0)
 
"BLD",8327,1,4,0)
This a Multi-Package KIDS Distribution consisting of a KIDS hostfile
"BLD",8327,1,5,0)
containing two patches with the following install order: 
"BLD",8327,1,6,0)
  
"BLD",8327,1,7,0)
   LEX_2_86.KID Distribution:
"BLD",8327,1,8,0)
 
"BLD",8327,1,9,0)
      Order   Patch
"BLD",8327,1,10,0)
        1     LEX*2.0*86
"BLD",8327,1,11,0)
        2     ICD*18.0*67
"BLD",8327,4,0)
^9.64PA^757.01^2
"BLD",8327,4,757.01,0)
757.01
"BLD",8327,4,757.01,2,0)
^9.641^757.118^1
"BLD",8327,4,757.01,2,757.118,0)
DESIGNATION CODE  (sub-file)
"BLD",8327,4,757.01,2,757.118,1,0)
^9.6411^2^1
"BLD",8327,4,757.01,2,757.118,1,2,0)
HIERARCHY
"BLD",8327,4,757.01,222)
y^y^p^^^^n^^n
"BLD",8327,4,757.01,224)

"BLD",8327,4,757.018,0)
757.018
"BLD",8327,4,757.018,222)
y^y^f^^n^^y^o^n
"BLD",8327,4,"APDD",757.01,757.118)

"BLD",8327,4,"APDD",757.01,757.118,2)

"BLD",8327,4,"B",757.01,757.01)

"BLD",8327,4,"B",757.018,757.018)

"BLD",8327,6.3)
1
"BLD",8327,"INIT")
POST^LEX2086P
"BLD",8327,"KRN",0)
^9.67PA^779.2^20
"BLD",8327,"KRN",.4,0)
.4
"BLD",8327,"KRN",.401,0)
.401
"BLD",8327,"KRN",.402,0)
.402
"BLD",8327,"KRN",.403,0)
.403
"BLD",8327,"KRN",.5,0)
.5
"BLD",8327,"KRN",.84,0)
.84
"BLD",8327,"KRN",3.6,0)
3.6
"BLD",8327,"KRN",3.8,0)
3.8
"BLD",8327,"KRN",9.2,0)
9.2
"BLD",8327,"KRN",9.8,0)
9.8
"BLD",8327,"KRN",9.8,"NM",0)
^9.68A^44^44
"BLD",8327,"KRN",9.8,"NM",1,0)
LEX2086^^0^B104276930
"BLD",8327,"KRN",9.8,"NM",2,0)
LEX2086P^^0^B47694609
"BLD",8327,"KRN",9.8,"NM",3,0)
LEX10DL^^0^B57575740
"BLD",8327,"KRN",9.8,"NM",4,0)
LEX10PL^^0^B120517089
"BLD",8327,"KRN",9.8,"NM",5,0)
LEXA^^0^B60933739
"BLD",8327,"KRN",9.8,"NM",6,0)
LEXA1^^0^B70223052
"BLD",8327,"KRN",9.8,"NM",7,0)
LEXRXC^^0^B113217997
"BLD",8327,"KRN",9.8,"NM",8,0)
LEXRXC2^^0^B84713093
"BLD",8327,"KRN",9.8,"NM",9,0)
LEXRXC3^^0^B124793632
"BLD",8327,"KRN",9.8,"NM",10,0)
LEXRXC4^^0^B58726823
"BLD",8327,"KRN",9.8,"NM",11,0)
LEXRXD^^0^B77578337
"BLD",8327,"KRN",9.8,"NM",12,0)
LEXRXD4^^0^B78539847
"BLD",8327,"KRN",9.8,"NM",13,0)
LEXXGP1^^0^B178355594
"BLD",8327,"KRN",9.8,"NM",14,0)
LEXXGP2^^0^B45882070
"BLD",8327,"KRN",9.8,"NM",15,0)
LEXXGP3^^0^B141569395
"BLD",8327,"KRN",9.8,"NM",16,0)
LEXTRAN1^^0^B129742637
"BLD",8327,"KRN",9.8,"NM",17,0)
LEXNDX6^^0^B19709895
"BLD",8327,"KRN",9.8,"NM",18,0)
LEXAB^^0^B11071959
"BLD",8327,"KRN",9.8,"NM",19,0)
LEXQDRG^^0^B71624040
"BLD",8327,"KRN",9.8,"NM",20,0)
LEXQDRG2^^0^B132520420
"BLD",8327,"KRN",9.8,"NM",21,0)
LEXQDRG3^^0^B41644290
"BLD",8327,"KRN",9.8,"NM",22,0)
LEXQDRG4^^0^B80769306
"BLD",8327,"KRN",9.8,"NM",23,0)
LEXXM6^^0^B54190610
"BLD",8327,"KRN",9.8,"NM",24,0)
LEXQID2^^0^B35819355
"BLD",8327,"KRN",9.8,"NM",25,0)
LEXQIP^^0^B89007415
"BLD",8327,"KRN",9.8,"NM",26,0)
LEXQIP2^^0^B27132313
"BLD",8327,"KRN",9.8,"NM",27,0)
LEXQIP3^^0^B32494278
"BLD",8327,"KRN",9.8,"NM",28,0)
LEXXM1^^0^B25249418
"BLD",8327,"KRN",9.8,"NM",29,0)
LEXXM2^^0^B30344305
"BLD",8327,"KRN",9.8,"NM",30,0)
LEXXM3^^0^B91178873
"BLD",8327,"KRN",9.8,"NM",31,0)
LEXXM4^^0^B55634624
"BLD",8327,"KRN",9.8,"NM",32,0)
LEXXM5^^0^B18823320
"BLD",8327,"KRN",9.8,"NM",33,0)
LEXXMM^^0^B41682628
"BLD",8327,"KRN",9.8,"NM",34,0)
LEXU2^^0^B141683207
"BLD",8327,"KRN",9.8,"NM",35,0)
LEXU4^^0^B129204070
"BLD",8327,"KRN",9.8,"NM",36,0)
LEXTRAN^^0^B85105957
"BLD",8327,"KRN",9.8,"NM",37,0)
LEXU^^0^B104256430
"BLD",8327,"KRN",9.8,"NM",38,0)
LEXU3^^0^B42123384
"BLD",8327,"KRN",9.8,"NM",39,0)
LEXU5^^0^B7267831
"BLD",8327,"KRN",9.8,"NM",40,0)
LEXU6^^0^B9815713
"BLD",8327,"KRN",9.8,"NM",41,0)
LEXUH^^0^B105459715
"BLD",8327,"KRN",9.8,"NM",42,0)
LEXQHL2^^0^B90501099
"BLD",8327,"KRN",9.8,"NM",43,0)
LEXQL^^0^B69912200
"BLD",8327,"KRN",9.8,"NM",44,0)
LEX10TAX^^0^B83718162
"BLD",8327,"KRN",9.8,"NM","B","LEX10DL",3)

"BLD",8327,"KRN",9.8,"NM","B","LEX10PL",4)

"BLD",8327,"KRN",9.8,"NM","B","LEX10TAX",44)

"BLD",8327,"KRN",9.8,"NM","B","LEX2086",1)

"BLD",8327,"KRN",9.8,"NM","B","LEX2086P",2)

"BLD",8327,"KRN",9.8,"NM","B","LEXA",5)

"BLD",8327,"KRN",9.8,"NM","B","LEXA1",6)

"BLD",8327,"KRN",9.8,"NM","B","LEXAB",18)

"BLD",8327,"KRN",9.8,"NM","B","LEXNDX6",17)

"BLD",8327,"KRN",9.8,"NM","B","LEXQDRG",19)

"BLD",8327,"KRN",9.8,"NM","B","LEXQDRG2",20)

"BLD",8327,"KRN",9.8,"NM","B","LEXQDRG3",21)

"BLD",8327,"KRN",9.8,"NM","B","LEXQDRG4",22)

"BLD",8327,"KRN",9.8,"NM","B","LEXQHL2",42)

"BLD",8327,"KRN",9.8,"NM","B","LEXQID2",24)

"BLD",8327,"KRN",9.8,"NM","B","LEXQIP",25)

"BLD",8327,"KRN",9.8,"NM","B","LEXQIP2",26)

"BLD",8327,"KRN",9.8,"NM","B","LEXQIP3",27)

"BLD",8327,"KRN",9.8,"NM","B","LEXQL",43)

"BLD",8327,"KRN",9.8,"NM","B","LEXRXC",7)

"BLD",8327,"KRN",9.8,"NM","B","LEXRXC2",8)

"BLD",8327,"KRN",9.8,"NM","B","LEXRXC3",9)

"BLD",8327,"KRN",9.8,"NM","B","LEXRXC4",10)

"BLD",8327,"KRN",9.8,"NM","B","LEXRXD",11)

"BLD",8327,"KRN",9.8,"NM","B","LEXRXD4",12)

"BLD",8327,"KRN",9.8,"NM","B","LEXTRAN",36)

"BLD",8327,"KRN",9.8,"NM","B","LEXTRAN1",16)

"BLD",8327,"KRN",9.8,"NM","B","LEXU",37)

"BLD",8327,"KRN",9.8,"NM","B","LEXU2",34)

"BLD",8327,"KRN",9.8,"NM","B","LEXU3",38)

"BLD",8327,"KRN",9.8,"NM","B","LEXU4",35)

"BLD",8327,"KRN",9.8,"NM","B","LEXU5",39)

"BLD",8327,"KRN",9.8,"NM","B","LEXU6",40)

"BLD",8327,"KRN",9.8,"NM","B","LEXUH",41)

"BLD",8327,"KRN",9.8,"NM","B","LEXXGP1",13)

"BLD",8327,"KRN",9.8,"NM","B","LEXXGP2",14)

"BLD",8327,"KRN",9.8,"NM","B","LEXXGP3",15)

"BLD",8327,"KRN",9.8,"NM","B","LEXXM1",28)

"BLD",8327,"KRN",9.8,"NM","B","LEXXM2",29)

"BLD",8327,"KRN",9.8,"NM","B","LEXXM3",30)

"BLD",8327,"KRN",9.8,"NM","B","LEXXM4",31)

"BLD",8327,"KRN",9.8,"NM","B","LEXXM5",32)

"BLD",8327,"KRN",9.8,"NM","B","LEXXM6",23)

"BLD",8327,"KRN",9.8,"NM","B","LEXXMM",33)

"BLD",8327,"KRN",19,0)
19
"BLD",8327,"KRN",19.1,0)
19.1
"BLD",8327,"KRN",101,0)
101
"BLD",8327,"KRN",409.61,0)
409.61
"BLD",8327,"KRN",771,0)
771
"BLD",8327,"KRN",779.2,0)
779.2
"BLD",8327,"KRN",870,0)
870
"BLD",8327,"KRN",8989.51,0)
8989.51
"BLD",8327,"KRN",8989.52,0)
8989.52
"BLD",8327,"KRN",8994,0)
8994
"BLD",8327,"KRN","B",.4,.4)

"BLD",8327,"KRN","B",.401,.401)

"BLD",8327,"KRN","B",.402,.402)

"BLD",8327,"KRN","B",.403,.403)

"BLD",8327,"KRN","B",.5,.5)

"BLD",8327,"KRN","B",.84,.84)

"BLD",8327,"KRN","B",3.6,3.6)

"BLD",8327,"KRN","B",3.8,3.8)

"BLD",8327,"KRN","B",9.2,9.2)

"BLD",8327,"KRN","B",9.8,9.8)

"BLD",8327,"KRN","B",19,19)

"BLD",8327,"KRN","B",19.1,19.1)

"BLD",8327,"KRN","B",101,101)

"BLD",8327,"KRN","B",409.61,409.61)

"BLD",8327,"KRN","B",771,771)

"BLD",8327,"KRN","B",779.2,779.2)

"BLD",8327,"KRN","B",870,870)

"BLD",8327,"KRN","B",8989.51,8989.51)

"BLD",8327,"KRN","B",8989.52,8989.52)

"BLD",8327,"KRN","B",8994,8994)

"BLD",8327,"PRE")
LEX2086
"BLD",8327,"QDEF")
^^^^NO^^^^^^NO
"BLD",8327,"QUES",0)
^9.62^^
"BLD",8327,"REQB",0)
^9.611^1^1
"BLD",8327,"REQB",1,0)
LEX*2.0*97^2
"BLD",8327,"REQB","B","LEX*2.0*97",1)

"DATA",757.018,1,0)
Disorder^DIS^94628
"DATA",757.018,2,0)
Procedure^PRC^69542
"DATA",757.018,3,0)
Finding^FND^55146
"DATA",757.018,4,0)
Organism^ORG^40732
"DATA",757.018,5,0)
Body Structure^BDS^29205
"DATA",757.018,6,0)
Substance^SUB^27973
"DATA",757.018,7,0)
Product^PRD^26921
"DATA",757.018,8,0)
Event^EVE^26792
"DATA",757.018,9,0)
Situation^SIT^16068
"DATA",757.018,10,0)
Qualifier Value^QUV^12413
"DATA",757.018,11,0)
Observable Entity^OBS^9157
"DATA",757.018,12,0)
Context-Dependent Category^CON^6911
"DATA",757.018,13,0)
Morphologic Abnormality^MAB^5471
"DATA",757.018,14,0)
Physical Object^OBJ^5161
"DATA",757.018,15,0)
Regime/Therapy^REG^4875
"DATA",757.018,16,0)
Occupation^OCC^4594
"DATA",757.018,17,0)
Specimen^SPC^1561
"DATA",757.018,18,0)
Environment^ENV^1425
"DATA",757.018,19,0)
Navigational Concept^NAV^1223
"DATA",757.018,20,0)
Assessment Scale^ASS^1167
"DATA",757.018,21,0)
Attribute^ATT^1150
"DATA",757.018,22,0)
Cell^CLL^1085
"DATA",757.018,23,0)
Geographic Location^GEO^945
"DATA",757.018,24,0)
Record Artifact^REC^544
"DATA",757.018,25,0)
Cell Structure^CLS^531
"DATA",757.018,26,0)
Person^PER^485
"DATA",757.018,27,0)
Tumor Staging^TMR^394
"DATA",757.018,28,0)
Ethnic Group^ETH^257
"DATA",757.018,29,0)
Religion/Philosophy^REL^224
"DATA",757.018,30,0)
Physical Force^FOR^206
"DATA",757.018,31,0)
Namespace Concept^NAM^186
"DATA",757.018,32,0)
Administrative Concept^ADM^58
"DATA",757.018,33,0)
Social Concept^SOC^30
"DATA",757.018,34,0)
Life Style^LIF^30
"DATA",757.018,35,0)
Staging Scale^STG^19
"DATA",757.018,36,0)
Inactive Concept^INA^15
"DATA",757.018,37,0)
Environment / Location^ENL^2
"DATA",757.018,38,0)
Special Concept^SPL^1
"DATA",757.018,39,0)
Snomed RT+CTV3^SCH^1
"DATA",757.018,40,0)
Function^FUN^1
"FIA",757.01)
EXPRESSIONS
"FIA",757.01,0)
^LEX(757.01,
"FIA",757.01,0,0)
757.01
"FIA",757.01,0,1)
y^y^p^^^^n^^n
"FIA",757.01,0,10)

"FIA",757.01,0,11)

"FIA",757.01,0,"RLRO")

"FIA",757.01,0,"VR")
2.0^LEX
"FIA",757.01,757.01)
1
"FIA",757.01,757.118)
1
"FIA",757.01,757.118,2)

"FIA",757.018)
SNOMED CT HIERARCHY
"FIA",757.018,0)
^LEX(757.018,
"FIA",757.018,0,0)
757.018
"FIA",757.018,0,1)
y^y^f^^n^^y^o^n
"FIA",757.018,0,10)

"FIA",757.018,0,11)

"FIA",757.018,0,"RLRO")

"FIA",757.018,0,"VR")
2.0^LEX
"FIA",757.018,757.018)
0
"FIA",757.018,757.181)
0
"INIT")
POST^LEX2086P
"MBREQ")
0
"PKG",574,-1)
1^1
"PKG",574,0)
LEXICON UTILITY^LEX^Medical and Biomedical Terminology System.
"PKG",574,20,0)
^9.402P^^
"PKG",574,22,0)
^9.49I^1^1
"PKG",574,22,1,0)
2.0^2960915^2970127^1
"PKG",574,22,1,"PAH",1,0)
86^3141219^520665225
"PKG",574,22,1,"PAH",1,1,0)
^^11^11^3141219
"PKG",574,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements
"PKG",574,22,1,"PAH",1,1,2,0)
included in this patch.
"PKG",574,22,1,"PAH",1,1,3,0)
 
"PKG",574,22,1,"PAH",1,1,4,0)
This a Multi-Package KIDS Distribution consisting of a KIDS hostfile
"PKG",574,22,1,"PAH",1,1,5,0)
containing two patches with the following install order: 
"PKG",574,22,1,"PAH",1,1,6,0)
  
"PKG",574,22,1,"PAH",1,1,7,0)
   LEX_2_86.KID Distribution:
"PKG",574,22,1,"PAH",1,1,8,0)
 
"PKG",574,22,1,"PAH",1,1,9,0)
      Order   Patch
"PKG",574,22,1,"PAH",1,1,10,0)
        1     LEX*2.0*86
"PKG",574,22,1,"PAH",1,1,11,0)
        2     ICD*18.0*67
"PRE")
LEX2086
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
44
"RTN","LEX10DL")
0^3^B57575740
"RTN","LEX10DL",1,0)
LEX10DL ;ISL/KER - ICD-10 Diagnosis Lookup ;12/19/2014
"RTN","LEX10DL",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEX10DL",3,0)
 ;               
"RTN","LEX10DL",4,0)
 ; Global Variables
"RTN","LEX10DL",5,0)
 ;    ^%ZOSF("TEST")      ICR  10096
"RTN","LEX10DL",6,0)
 ;    ^LEX(757.033        N/A
"RTN","LEX10DL",7,0)
 ;    ^XTMP(              SACC 2.3.2.5.2
"RTN","LEX10DL",8,0)
 ;               
"RTN","LEX10DL",9,0)
 ; External References
"RTN","LEX10DL",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEX10DL",11,0)
 ;    ^DIM                ICR  10016
"RTN","LEX10DL",12,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEX10DL",13,0)
 ;    ^DIR                ICR  10026
"RTN","LEX10DL",14,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEX10DL",15,0)
 ;    $$IMP^ICDEX         ICR   5747
"RTN","LEX10DL",16,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10DL",17,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEX10DL",18,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEX10DL",19,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX10DL",20,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEX10DL",21,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEX10DL",22,0)
 ;               
"RTN","LEX10DL",23,0)
EN ; Main Entry Point
"RTN","LEX10DL",24,0)
 ; 
"RTN","LEX10DL",25,0)
 ; Input   
"RTN","LEX10DL",26,0)
 ; 
"RTN","LEX10DL",27,0)
 ;   None
"RTN","LEX10DL",28,0)
 ; 
"RTN","LEX10DL",29,0)
 ; Output
"RTN","LEX10DL",30,0)
 ; 
"RTN","LEX10DL",31,0)
 ;   Y          2 Piece "^" delimited string
"RTN","LEX10DL",32,0)
 ;                 1   IEN to the Expression File 757.01
"RTN","LEX10DL",33,0)
 ;                 2   Expression Display Text
"RTN","LEX10DL",34,0)
 ;                 
"RTN","LEX10DL",35,0)
 ;   Y("ICD")   2 Piece "^" delimited string
"RTN","LEX10DL",36,0)
 ;                 1   IEN to the ICD DIAGNOSIS File #80
"RTN","LEX10DL",37,0)
 ;                 2   ICD Code
"RTN","LEX10DL",38,0)
 ; 
"RTN","LEX10DL",39,0)
 N LEXENV S LEXENV=$$ENV Q:+LEXENV'>0
"RTN","LEX10DL",40,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,LEXDT,LEXIM,LEXMAX,LEXFRQ,LEXCONT,X
"RTN","LEX10DL",41,0)
 S LEXDT=$G(LEXVDT) S:LEXDT'?7N LEXDT=$$DT^XLFDT S LEXMAX=$$MAX^LEXU(30)
"RTN","LEX10DL",42,0)
 S LEXIM=$$IMP^ICDEX(30) S:LEXDT'>LEXIM LEXDT=LEXIM S LEXCONT=1
"RTN","LEX10DL",43,0)
X ; Get user input
"RTN","LEX10DL",44,0)
 K DIROUT,DUOUT,DTOUT,DIRUT
"RTN","LEX10DL",45,0)
 S X=$$SO Q:X["^"  S LEXFRQ=$$FREQ^LEXU(X)
"RTN","LEX10DL",46,0)
 I LEXFRQ>LEXMAX D  Q:$D(DIRUT)  Q:$D(LEXCONT)["^"  G:LEXCONT'>0 X
"RTN","LEX10DL",47,0)
 . N LEXX S LEXX=X S LEXCONT=$$CONT^LEX10DLS(LEXX,LEXFRQ) W !
"RTN","LEX10DL",48,0)
 K Y,LEXY D:$L(X)&(X'["^") BEG I $D(DUOUT)&'$D(DIROUT) W ! G X
"RTN","LEX10DL",49,0)
 N LEXTEST
"RTN","LEX10DL",50,0)
 Q 
"RTN","LEX10DL",51,0)
BEG ; Begin Recursive Loop
"RTN","LEX10DL",52,0)
 K DIROUT,DUOUT,DTOUT,DIRUT
"RTN","LEX10DL",53,0)
 N LEXIT,LEXVDT,LEXTXT,LEXUP,LEXY,LEXX
"RTN","LEX10DL",54,0)
 N LEXBEG,LEXEND,LEXELP,LEXSEC
"RTN","LEX10DL",55,0)
 K Y S Y=-1,U="^",LEXTXT=$G(X) Q:'$L(LEXTXT)
"RTN","LEX10DL",56,0)
 S LEXVDT=$G(LEXDT),LEXIT=0
"RTN","LEX10DL",57,0)
LOOK ;   Lookup
"RTN","LEX10DL",58,0)
 Q:+($G(LEXIT))>0  K LEXY S LEXBEG=$$NOW^XLFDT
"RTN","LEX10DL",59,0)
 S LEXY=$$DIAGSRCH^LEX10CS(LEXTXT,.LEXY,LEXVDT,30)
"RTN","LEX10DL",60,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEX10DL",61,0)
 S LEXSEC=$$FMDIFF^XLFDT(LEXEND,LEXBEG,2)
"RTN","LEX10DL",62,0)
 S:$L(LEXELP,":")=3 LEXELP=$TR(LEXELP," ","0")
"RTN","LEX10DL",63,0)
 S:$L(LEXELP,":")'=3!(LEXSEC'>0) LEXELP="00:00:00"
"RTN","LEX10DL",64,0)
 I $D(LEXTEST) D
"RTN","LEX10DL",65,0)
 . W ! W !,"   Search for:     ",LEXTXT
"RTN","LEX10DL",66,0)
 . W !,"   Begin Search:   ",$$FMTE^XLFDT(LEXBEG,"5Z")
"RTN","LEX10DL",67,0)
 . W !,"   Finish Search:  ",$$FMTE^XLFDT(LEXBEG,"5Z")
"RTN","LEX10DL",68,0)
 . W !,"   Elapsed Time:   ",LEXELP W !
"RTN","LEX10DL",69,0)
 S:$O(LEXY(" "),-1)>0 LEXY=+LEXY
"RTN","LEX10DL",70,0)
 I +LEXY'>0 W !,"  No data found",! K X Q
"RTN","LEX10DL",71,0)
 S LEXX=$$SEL^LEX10DLS(.LEXY,8)
"RTN","LEX10DL",72,0)
 I $D(DUOUT)&('$D(DIROUT)) K:'$D(LEXNT) X Q
"RTN","LEX10DL",73,0)
 I $D(DTOUT)&('$D(DIROUT)) S LEXIT=1 K X Q
"RTN","LEX10DL",74,0)
 I $D(DIROUT) S LEXIT=1 K X Q
"RTN","LEX10DL",75,0)
 ;     Quit if
"RTN","LEX10DL",76,0)
 ;       Timed out or user enters "^^"
"RTN","LEX10DL",77,0)
 I $D(DTOUT)!($D(DIROUT)) S LEXIT=1 K X Q
"RTN","LEX10DL",78,0)
 ;       Up one level (LEXUP) if user enters "^"
"RTN","LEX10DL",79,0)
 ;       Quit if already at top level and user enters "^"
"RTN","LEX10DL",80,0)
 I $D(DUOUT),'$D(DIROUT),$L($G(LEXUP)) K X Q
"RTN","LEX10DL",81,0)
 ;       No Selection Made
"RTN","LEX10DL",82,0)
 I '$D(DUOUT),LEXX=-1 S LEXIT=1
"RTN","LEX10DL",83,0)
 ;       Code Found and Selected
"RTN","LEX10DL",84,0)
 I $P(LEXX,";")'="99:CAT" D  Q
"RTN","LEX10DL",85,0)
 . N LEXIEN,LEXCODE,LEXTERM,LEXICD
"RTN","LEX10DL",86,0)
 . S LEXIEN=$P($P(LEXX,"^"),";",1),LEXCODE=$P($P(LEXX,"^"),";",2)
"RTN","LEX10DL",87,0)
 . S LEXTERM=$P(LEXX,"^",2) S:$L(LEXTERM)&($L(LEXCODE)) LEXTERM=LEXTERM_" (ICD-10-CM "_LEXCODE_")"
"RTN","LEX10DL",88,0)
 . S LEXICD=+$$ICDDX^ICDEX(LEXCODE,,30),LEXIT=1
"RTN","LEX10DL",89,0)
 . S Y=LEXIEN_"^"_LEXTERM,Y("ICD")=LEXICD_"^"_LEXCODE
"RTN","LEX10DL",90,0)
 ;       Category Found and Selected
"RTN","LEX10DL",91,0)
 D NXT G:+($G(LEXIT))'>0 LOOK
"RTN","LEX10DL",92,0)
 Q
"RTN","LEX10DL",93,0)
NXT ;   Next
"RTN","LEX10DL",94,0)
 Q:+($G(LEXIT))>0  N LEXNT,LEXND,LEXXX
"RTN","LEX10DL",95,0)
 S LEXNT=$G(LEXTXT),LEXND=$G(LEXVDT),LEXXX=$G(LEXX)
"RTN","LEX10DL",96,0)
 N LEXTXT,LEXVDT S LEXTXT=$P($P(LEXXX,"^"),";",2),LEXVDT=LEXND
"RTN","LEX10DL",97,0)
 G LOOK
"RTN","LEX10DL",98,0)
 Q
"RTN","LEX10DL",99,0)
 ;     
"RTN","LEX10DL",100,0)
SO(X) ; Enter a Code/Code Fragment
"RTN","LEX10DL",101,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,DIRB,LEXTD,Y,LEX,LEXCOM,LEXERR,LEXSBR
"RTN","LEX10DL",102,0)
 S LEXTD=$G(LEXVDT) S:LEXTD'?7N LEXTD=$$DT^XLFDT
"RTN","LEX10DL",103,0)
 S LEXCOM="Enter Diagnosis, a Code or a Code Fragment"
"RTN","LEX10DL",104,0)
 S DIR(0)="FAO^1:30",DIR("A")=" "_LEXCOM_":  "
"RTN","LEX10DL",105,0)
 S (LEXSBR,DIRB)=$$RET("LEX10DL","SO",+($G(DUZ)),LEXCOM)
"RTN","LEX10DL",106,0)
 S DIR("PRE")="S X=$$SOP^LEX10DL(X) W:X[""??"" ""  ??"""
"RTN","LEX10DL",107,0)
 S (DIR("?"),DIR("??"))="^D SOH^LEX10DL" D ^DIR
"RTN","LEX10DL",108,0)
 Q:$D(DTOUT) "^"  Q:'$L(X)!('$L(Y)) "^"
"RTN","LEX10DL",109,0)
 S:$D(DUOUT) X="^" S:$D(DIROUT) X="^^"  Q:$G(X)["^" "^"
"RTN","LEX10DL",110,0)
 S (LEX,X)=$G(Y) D:$L(LEX)&(LEX'["^") SAV("LEX10DL","SO",+($G(DUZ)),LEXCOM,LEX)
"RTN","LEX10DL",111,0)
 Q X
"RTN","LEX10DL",112,0)
SOH ;   Select a Code Help
"RTN","LEX10DL",113,0)
 W:$L($G(LEXERR)) !,"     ",LEXERR,!
"RTN","LEX10DL",114,0)
 W !,"     Enter either: "
"RTN","LEX10DL",115,0)
 W !,"                                            Example"
"RTN","LEX10DL",116,0)
 W !,"       ICD-10 Diagnosis code                S62.131K"
"RTN","LEX10DL",117,0)
 W !,"       Partial ICD-10 Diagnosis code        S62.131"
"RTN","LEX10DL",118,0)
 W !,"       ICD-10 Diagnosis sub-category        S62.131"
"RTN","LEX10DL",119,0)
 W !,"       ICD-10 Diagnosis category            S62."
"RTN","LEX10DL",120,0)
 W !,"       Partial ICD-10 Diagnosis category    S6"
"RTN","LEX10DL",121,0)
 W !,"       Diagnostic Text                      Diabetes Mellitus",!
"RTN","LEX10DL",122,0)
 W !,"     Must have at least 2 characters.  If a code is entered"
"RTN","LEX10DL",123,0)
 W !,"     it may not exceed 7 characters.  Enter return or ""^"" "
"RTN","LEX10DL",124,0)
 W !,"     to exit, ""Space-Bar-Return"" to select previous"
"RTN","LEX10DL",125,0)
 W !,"     search parameter.",!
"RTN","LEX10DL",126,0)
 K LEXERR
"RTN","LEX10DL",127,0)
 Q
"RTN","LEX10DL",128,0)
SOP(X) ;   Code Pre-Processing
"RTN","LEX10DL",129,0)
 N LEX,LEXO,LEXR,LEXB,LEXOK,LEXSTB,LEXSO S LEXSO=0
"RTN","LEX10DL",130,0)
 S (LEX,X)=$$UP^XLFSTR($G(X)),LEXSTB=$E(LEX,1,3),LEXB=$G(DIR("B"))
"RTN","LEX10DL",131,0)
 I ($L(LEX)&($E(LEX,1)=" "))&($L($G(LEXSBR))) D  Q X
"RTN","LEX10DL",132,0)
 . S (LEX,X)=$G(LEXSBR) W "  ",X
"RTN","LEX10DL",133,0)
 Q:LEX["?" "??"  S:LEX["^^" (LEX,X)="^^",DUOUT=1,DIROUT=1
"RTN","LEX10DL",134,0)
 S:LEX["^"&(LEX'["^^") (LEX,X)="^",DUOUT=1
"RTN","LEX10DL",135,0)
 Q:LEX["^" X  S:'$L(LEX)&($L(LEXB)) (LEX,X)=$G(LEXB)
"RTN","LEX10DL",136,0)
 Q:'$L(LEX) ""  S LEXR=LEX S:$L(LEXR) LEXR=" ("_LEXR_")"
"RTN","LEX10DL",137,0)
 S LEXSO=0 I $L(LEXSTB) D
"RTN","LEX10DL",138,0)
 . S:$O(^LEX(757.02,"ADX",(LEXSTB_" ")))[LEXSTB LEXSO=1
"RTN","LEX10DL",139,0)
 I 'LEXSO Q X
"RTN","LEX10DL",140,0)
 S:$L(LEX)'>1 LEXERR="Input must be at least 2 characters"_LEXR
"RTN","LEX10DL",141,0)
 S:$L(LEX)>8 LEXERR="Input can not exceed 8 characters"_LEXR
"RTN","LEX10DL",142,0)
 Q:$L(LEX)'>1!($L(LEX)>8) "??"
"RTN","LEX10DL",143,0)
 S:$L(LEX)>3&($E(LEX,4)'=".") LEXERR="Fourth character position must be a decimal"_LEXR
"RTN","LEX10DL",144,0)
 Q:$L(LEX)>3&($E(LEX,4)'=".") "??"  S LEXOK=0
"RTN","LEX10DL",145,0)
 S LEXO=$E(LEX,1,($L(LEX)-1))_$C($A($E(LEX,$L(LEX)))-1)_"~"
"RTN","LEX10DL",146,0)
 S:$L(LEX)=3&(LEX'[".") (LEX,X)=LEX_"."
"RTN","LEX10DL",147,0)
 S:$D(^LEX(757.02,"ADX",(LEX_" "))) LEXOK=1
"RTN","LEX10DL",148,0)
 S:$O(^LEX(757.02,"ADX",(LEXO_" ")))[LEX LEXOK=1
"RTN","LEX10DL",149,0)
 S:$D(^LEX(757.033,"AFRAG",30,(LEX_" "))) LEXOK=1
"RTN","LEX10DL",150,0)
 S:$O(^LEX(757.033,"AFRAG",30,(LEXO_" ")))[LEX LEXOK=1
"RTN","LEX10DL",151,0)
 S:'LEXOK LEXERR="Input is not a code or category"_LEXR
"RTN","LEX10DL",152,0)
 S:'LEXOK (LEX,X)="??"
"RTN","LEX10DL",153,0)
 Q X
"RTN","LEX10DL",154,0)
 ;               
"RTN","LEX10DL",155,0)
 ; Miscellaneous
"RTN","LEX10DL",156,0)
SAV(X,Y,LEXN,LEXC,LEXV) ;   Save Defaults
"RTN","LEX10DL",157,0)
 N LEXRTN,LEXTAG,LEXUSR,LEXCOM,LEXVAL,LEXNM,LEXID,LEXTD,LEXFD,LEXKEY S LEXRTN=$G(X) Q:+($$ROK(LEXRTN))'>0  S LEXTAG=$G(Y) Q:+($$TAG((LEXTAG_"^"_LEXRTN)))'>0
"RTN","LEX10DL",158,0)
 S LEXUSR=+($G(LEXN)),LEXVAL=$G(LEXV) Q:LEXUSR'>0  Q:'$L(LEXVAL)  S LEXCOM=$G(LEXC) Q:'$L(LEXCOM)  S LEXKEY=$E(LEXCOM,1,13) F  Q:$L(LEXKEY)>12  S LEXKEY=LEXKEY_" "
"RTN","LEX10DL",159,0)
 S LEXNM=$$GET1^DIQ(200,(LEXUSR_","),.01) Q:'$L(LEXNM)  S LEXTD=$$DT^XLFDT,LEXFD=$$FMADD^XLFDT(LEXTD,30),LEXID=LEXRTN_" "_LEXUSR_" "_LEXKEY
"RTN","LEX10DL",160,0)
 S ^XTMP(LEXID,0)=LEXFD_"^"_LEXTD_"^"_LEXCOM,^XTMP(LEXID,LEXTAG)=LEXVAL
"RTN","LEX10DL",161,0)
 Q
"RTN","LEX10DL",162,0)
RET(X,Y,LEXN,LEXC) ;   Retrieve Defaults
"RTN","LEX10DL",163,0)
 N LEXRTN,LEXTAG,LEXUSR,LEXCOM,LEXNM,LEXID,LEXTD,LEXFD,LEXKEY S LEXRTN=$G(X) Q:+($$ROK(LEXRTN))'>0 ""
"RTN","LEX10DL",164,0)
 S LEXTAG=$G(Y) Q:+($$TAG((LEXTAG_"^"_LEXRTN)))'>0 ""  S LEXUSR=+($G(LEXN)) Q:LEXUSR'>0 ""
"RTN","LEX10DL",165,0)
 S LEXCOM=$G(LEXC) Q:'$L(LEXCOM) ""  S LEXKEY=$E(LEXCOM,1,13) F  Q:$L(LEXKEY)>12  S LEXKEY=LEXKEY_" "
"RTN","LEX10DL",166,0)
 S LEXNM=$$GET1^DIQ(200,(LEXUSR_","),.01) Q:'$L(LEXNM) ""  S LEXTD=$$DT^XLFDT,LEXFD=$$FMADD^XLFDT(LEXTD,30),LEXID=LEXRTN_" "_LEXUSR_" "_LEXKEY
"RTN","LEX10DL",167,0)
 S X=$G(^XTMP(LEXID,LEXTAG))
"RTN","LEX10DL",168,0)
 Q X
"RTN","LEX10DL",169,0)
ROK(X) ;   Routine OK
"RTN","LEX10DL",170,0)
 S X=$G(X) Q:'$L(X) 0  Q:$L(X)>8 0  X ^%ZOSF("TEST") Q:$T 1  Q 0
"RTN","LEX10DL",171,0)
TAG(X) ;   Sub-Routine OK
"RTN","LEX10DL",172,0)
 N LEXT,LEXE,LEXL S X=$G(X) Q:'$L(X) 0  Q:X'["^" 0
"RTN","LEX10DL",173,0)
 Q:'$L($P(X,"^",1)) 0  Q:$L($P(X,"^",1))>8 0  Q:$E($P(X,"^",1),1)'?1U 0
"RTN","LEX10DL",174,0)
 Q:'$L($P(X,"^",2)) 0  Q:$L($P(X,"^",2))>8 0  Q:$E($P(X,"^",2),1)'?1U 0
"RTN","LEX10DL",175,0)
 S LEXL=0,LEXT=X,(LEXE,X)="S LEXL=$L($T("_X_"))" D ^DIM X:$D(X) LEXE
"RTN","LEX10DL",176,0)
 S X=$S(LEXL>0:1,1:0)
"RTN","LEX10DL",177,0)
 Q X
"RTN","LEX10DL",178,0)
ENV(X) ;   Check environment
"RTN","LEX10DL",179,0)
 N LEX S DT=$$DT^XLFDT D HOME^%ZIS S U="^" I +($G(DUZ))=0 W !!,?5,"DUZ not defined" Q 0
"RTN","LEX10DL",180,0)
 S LEX=$$GET1^DIQ(200,(DUZ_","),.01) I '$L(LEX) W !!,?5,"DUZ not valid" Q 0
"RTN","LEX10DL",181,0)
 Q 1
"RTN","LEX10PL")
0^4^B120517089
"RTN","LEX10PL",1,0)
LEX10PL ;ISL/KER - ICD-10 Procedure Lookup ;12/19/2014
"RTN","LEX10PL",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEX10PL",3,0)
 ;               
"RTN","LEX10PL",4,0)
 ; Global Variables
"RTN","LEX10PL",5,0)
 ;    ^%ZOSF("TEST"       ICR  10096
"RTN","LEX10PL",6,0)
 ;    ^LEX(757.033        N/A
"RTN","LEX10PL",7,0)
 ;    ^XTMP(              SACC 2.3.2.5.2
"RTN","LEX10PL",8,0)
 ;               
"RTN","LEX10PL",9,0)
 ; External References
"RTN","LEX10PL",10,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEX10PL",11,0)
 ;    ENDR^%ZISS          ICR  10088
"RTN","LEX10PL",12,0)
 ;    KILL^%ZISS          ICR  10088
"RTN","LEX10PL",13,0)
 ;    ^DIM                ICR  10016
"RTN","LEX10PL",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEX10PL",15,0)
 ;    ^DIR                ICR  10026
"RTN","LEX10PL",16,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEX10PL",17,0)
 ;    $$IMP^ICDEX         ICR   5747
"RTN","LEX10PL",18,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10PL",19,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEX10PL",20,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEX10PL",21,0)
 ;               
"RTN","LEX10PL",22,0)
EN ; Main Entry Point
"RTN","LEX10PL",23,0)
 ; 
"RTN","LEX10PL",24,0)
 ; Input   
"RTN","LEX10PL",25,0)
 ; 
"RTN","LEX10PL",26,0)
 ;   None
"RTN","LEX10PL",27,0)
 ; 
"RTN","LEX10PL",28,0)
 ; Output
"RTN","LEX10PL",29,0)
 ; 
"RTN","LEX10PL",30,0)
 ;   Y         2 Piece "^" delimited string
"RTN","LEX10PL",31,0)
 ;               1   IEN to the Expression File 757.01
"RTN","LEX10PL",32,0)
 ;               2   Expression Display Text
"RTN","LEX10PL",33,0)
 ;                 
"RTN","LEX10PL",34,0)
 ;   Y("ICD")  2 Piece "^" delimited string
"RTN","LEX10PL",35,0)
 ;               1   IEN ICD OPERATION/PROCEDURE File #80.1
"RTN","LEX10PL",36,0)
 ;               2   ICD Code
"RTN","LEX10PL",37,0)
 ; 
"RTN","LEX10PL",38,0)
 N LEXENV S LEXENV=$$ENV Q:+LEXENV'>0  N X,LEXDT,LEXIM
"RTN","LEX10PL",39,0)
 N BOLD,DIR,DIRB,DIROUT,DIRUT,DTOUT,DUOUT,IOINHI,IOINORM,LEX
"RTN","LEX10PL",40,0)
 N LEXA,LEXB,LEXC,LEXCHR,LEXCODE,LEXCOM,LEXDT,LEXE,LEXEFF
"RTN","LEX10PL",41,0)
 N LEXENV,LEXERR,LEXFD,LEXI,LEXICD,LEXID,LEXIEN,LEXIM,LEXIN
"RTN","LEX10PL",42,0)
 N LEXIT,LEXKEY,LEXL,LEXN,LEXNAM,LEXND,LEXNM,LEXNT,LEXO
"RTN","LEX10PL",43,0)
 N LEXOFF,LEXOK,LEXPCDAT,LEXPSN,LEXR,LEXRTN,LEXS,LEXSBR
"RTN","LEX10PL",44,0)
 N LEXSEC,LEXSIEN,LEXSTA,LEXT,LEXTAG,LEXTD,LEXTERM,LEXTOT
"RTN","LEX10PL",45,0)
 N LEXTXT,LEXUP,LEXUSR,LEXV,LEXVAL,LEXVDT,LEXX,LEXY,NORM,X
"RTN","LEX10PL",46,0)
X ; Get user input
"RTN","LEX10PL",47,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","LEX10PL",48,0)
 S LEXDT=$G(LEXVDT) S:LEXDT'?7N LEXDT=$$DT^XLFDT
"RTN","LEX10PL",49,0)
 S LEXIM=$$IMP^ICDEX(30) S:LEXDT'>LEXIM LEXDT=LEXIM S X=$$SO Q:X["^"
"RTN","LEX10PL",50,0)
 K Y,LEXY D:$L(X)&(X'["^") BEG I $D(DUOUT)&'$D(DIROUT) W ! G X
"RTN","LEX10PL",51,0)
 N LEXTEST
"RTN","LEX10PL",52,0)
 Q 
"RTN","LEX10PL",53,0)
BEG ; Begin Recursive Loop
"RTN","LEX10PL",54,0)
 K DIROUT,DIRUT,DTOUT,DUOUT N LEXIT,LEXVDT,LEXTXT,LEXUP,LEXY,LEXX
"RTN","LEX10PL",55,0)
 N LEXBEG,LEXEND,LEXELP,LEXSEC
"RTN","LEX10PL",56,0)
 K Y S Y=-1,U="^",LEXTXT=$G(X) Q:'$L(LEXTXT)
"RTN","LEX10PL",57,0)
 S LEXVDT=$G(LEXDT),LEXIT=0
"RTN","LEX10PL",58,0)
LOOK ;   Lookup
"RTN","LEX10PL",59,0)
 Q:+($G(LEXIT))>0  K LEXY
"RTN","LEX10PL",60,0)
 S LEXY=$$PCSDIG^LEX10CS(LEXTXT,LEXDT),LEXTOT=$$FND
"RTN","LEX10PL",61,0)
 S:$L(LEXTXT)>0 LEXUP=$E(LEXTXT,1,($L(LEXTXT)-1))
"RTN","LEX10PL",62,0)
 I $L($O(LEXPCDAT("NEXLEV",""))) S LEXCHR=$$SEL^LEX10PLS(LEXTXT)
"RTN","LEX10PL",63,0)
 S LEXCHR=$G(LEXCHR)
"RTN","LEX10PL",64,0)
 ;     Quit if
"RTN","LEX10PL",65,0)
 ;       Timed out or user enters "^^"
"RTN","LEX10PL",66,0)
 I $D(DTOUT)!($D(DIROUT)) S LEXIT=1 K X Q
"RTN","LEX10PL",67,0)
 ;       Up one level (LEXUP) if user enters "^"
"RTN","LEX10PL",68,0)
 ;       Quit if already at top level and user enters "^"
"RTN","LEX10PL",69,0)
 I $D(DUOUT),'$D(DIROUT),$D(DIRUT),$L($G(LEXTXT))=1 D  Q
"RTN","LEX10PL",70,0)
 . K X,LEXUP,LEXNT S LEXIT=1,(LEXCHR,LEXTXT,X)=""
"RTN","LEX10PL",71,0)
 I $D(DUOUT),'$D(DIROUT),$D(DIRUT),$L($G(LEXUP)) D  G:'LEXIT LOOK Q:LEXIT
"RTN","LEX10PL",72,0)
 . K X S (X,LEXTXT)=LEXUP I '$L(X) S LEXIT=1 K X S LEXTXT=""
"RTN","LEX10PL",73,0)
 . S:$L($G(LEXNT))>1 LEXNT=$E($G(LEXNT),1,($L($G(LEXNT))-1))
"RTN","LEX10PL",74,0)
 I $D(DUOUT),'$D(DIROUT),$D(DIRUT),'$L($G(LEXUP)) S LEXIT=1 K X S LEXTXT="" Q
"RTN","LEX10PL",75,0)
 I $D(DUOUT)&('$D(DIROUT)) K:'$D(LEXNT) X Q
"RTN","LEX10PL",76,0)
 ;       No Selection Made
"RTN","LEX10PL",77,0)
 I '$D(DUOUT),LEXCHR="" S LEXIT=1
"RTN","LEX10PL",78,0)
 ;       Character Found and Selected
"RTN","LEX10PL",79,0)
 I $L(LEXCHR),LEXCHR'["^",(LEXCHR?1N!(LEXCHR?1U)) D  Q:+($G(Y))>0
"RTN","LEX10PL",80,0)
 . K Y S LEXTXT=LEXTXT_LEXCHR Q:$L(LEXTXT)<7
"RTN","LEX10PL",81,0)
 . N LEXSTA,LEXSIEN,LEXIEN,LEXCODE,LEXEFF,LEXTERM,LEXND,LEXICD
"RTN","LEX10PL",82,0)
 . S LEXSTA=$$STATCHK^LEXSRC2(LEXTXT,$G(LEXDT),,31)
"RTN","LEX10PL",83,0)
 . S LEXSIEN=$P(LEXSTA,"^",2)
"RTN","LEX10PL",84,0)
 . S LEXEFF=$P(LEXSTA,"^",3)
"RTN","LEX10PL",85,0)
 . S LEXSTA=$P(LEXSTA,"^",1)
"RTN","LEX10PL",86,0)
 . S LEXND=$G(^LEX(757.02,+LEXSIEN,0))
"RTN","LEX10PL",87,0)
 . S LEXCODE=$P(LEXND,"^",2),LEXIEN=+LEXND
"RTN","LEX10PL",88,0)
 . S LEXTERM=$G(^LEX(757.01,+LEXIEN,0))
"RTN","LEX10PL",89,0)
 . S LEXICD=+$$ICDOP^ICDEX(LEXCODE,,31),LEXIT=1
"RTN","LEX10PL",90,0)
 . S Y=LEXIEN_"^"_LEXTERM,Y("ICD")=LEXICD_"^"_LEXCODE
"RTN","LEX10PL",91,0)
 . D END(LEXCODE,LEXTERM)
"RTN","LEX10PL",92,0)
 ;       Category Found and Selected
"RTN","LEX10PL",93,0)
 I $L(LEXCHR),LEXCHR'["^",(LEXCHR?1N!(LEXCHR?1U)) D  G:+($G(LEXIT))'>0 LOOK
"RTN","LEX10PL",94,0)
 . D NXT I $G(Y)="^" D
"RTN","LEX10PL",95,0)
 . . Q:'$L(LEXTXT)  S LEXTXT=$E(LEXTXT,1,($L(LEXTXT)-1)) Q:'$L(LEXTXT)
"RTN","LEX10PL",96,0)
 . . F  S LEXTXT=$E(LEXTXT,1,($L(LEXTXT)-1)) Q:$$TOT($E(LEXTXT,1,($L(LEXTXT)-1)),LEXDT)>0
"RTN","LEX10PL",97,0)
 Q
"RTN","LEX10PL",98,0)
NXT ;   Next
"RTN","LEX10PL",99,0)
 Q:+($G(LEXIT))>0  N LEXNT,LEXND
"RTN","LEX10PL",100,0)
 S LEXNT=$G(LEXTXT),LEXND=$G(LEXDT)
"RTN","LEX10PL",101,0)
 N LEXTXT,LEXDT S LEXTXT=LEXNT,LEXDT=LEXND
"RTN","LEX10PL",102,0)
 G LOOK
"RTN","LEX10PL",103,0)
 Q
"RTN","LEX10PL",104,0)
TOT(X,Y) ; Total Possible
"RTN","LEX10PL",105,0)
 N LEXPCDAT,LEXDT,LEXY S X=$G(X) Q:'$L(X) 0  S LEXDT=$G(Y)
"RTN","LEX10PL",106,0)
 S LEXY=$$PCSDIG^LEX10CS(X,LEXDT),X=$$FND
"RTN","LEX10PL",107,0)
 Q X
"RTN","LEX10PL",108,0)
 ;     
"RTN","LEX10PL",109,0)
SO(X) ; Enter a Code/Code Fragment
"RTN","LEX10PL",110,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,DIRB,LEXTD,Y,LEX,LEXCOM,LEXERR,LEXSBR
"RTN","LEX10PL",111,0)
 S LEXTD=$G(LEXVDT) S:LEXTD'?7N LEXTD=$$DT^XLFDT
"RTN","LEX10PL",112,0)
 S LEXCOM="Enter a Procedure Code/Code Fragment"
"RTN","LEX10PL",113,0)
 S DIR(0)="FAO^1:30",DIR("A")=" "_LEXCOM_":  "
"RTN","LEX10PL",114,0)
 S (LEXSBR,DIRB)=$$RET("LEX10PL","SO",+($G(DUZ)),LEXCOM)
"RTN","LEX10PL",115,0)
 S DIR("PRE")="S X=$$SOP^LEX10PL(X) W:X[""??"" ""  ??"""
"RTN","LEX10PL",116,0)
 S (DIR("?"),DIR("??"))="^D SOH^LEX10PL" D ^DIR
"RTN","LEX10PL",117,0)
 Q:$D(DTOUT) "^"  Q:'$L(X)!('$L(Y)) "^"  Q:$D(DUOUT) "^" Q:$D(DIROUT) "^"  Q:$G(X)["^" "^"
"RTN","LEX10PL",118,0)
 S (LEX,X)=$G(Y) D:$L(LEX)&(LEX'["^") SAV("LEX10PL","SO",+($G(DUZ)),LEXCOM,LEX)
"RTN","LEX10PL",119,0)
 Q X
"RTN","LEX10PL",120,0)
SOH ;   Select a Code Help
"RTN","LEX10PL",121,0)
 W:$L($G(LEXERR)) !,"     ",LEXERR,!
"RTN","LEX10PL",122,0)
 W !,"     Enter either: "
"RTN","LEX10PL",123,0)
 W !,"                                            Example"
"RTN","LEX10PL",124,0)
 W !,"       ICD-10 Procedure code                04LE0CT"
"RTN","LEX10PL",125,0)
 W !,"       Partial ICD-10 Procedure code        00C6",!
"RTN","LEX10PL",126,0)
 W !,"     May not exceed 7 characters.  Enter return or ""^"""
"RTN","LEX10PL",127,0)
 W !,"     to exit."
"RTN","LEX10PL",128,0)
 K LEXERR
"RTN","LEX10PL",129,0)
 Q
"RTN","LEX10PL",130,0)
SOP(X) ;   Code Pre-Processing
"RTN","LEX10PL",131,0)
 N LEX,LEXO,LEXR,LEXB,LEXOK K LEXERR Q:'$L($G(X)) ""
"RTN","LEX10PL",132,0)
 S (LEX,X)=$$UP^XLFSTR($G(X)) Q:'$L(LEX) "??"
"RTN","LEX10PL",133,0)
 Q:LEX["?" "??"  S:LEX["^^" (LEX,X)="^^",DUOUT=1,DIROUT=1
"RTN","LEX10PL",134,0)
 S:LEX["^"&(LEX'["^^") (LEX,X)="^",DUOUT=1 Q:LEX["^" X  Q:'$L(LEX) ""
"RTN","LEX10PL",135,0)
 I LEX["." S LEXERR="Procedure codes do not have decimal places" Q "??"
"RTN","LEX10PL",136,0)
 I $E(LEX,1)="Z" S LEXERR="First character must not contain ""Z""" Q "??"
"RTN","LEX10PL",137,0)
 S (LEXC,LEXO,LEXR)=$E(LEX,1),LEXO=$C($A(LEXO)-1)_"~ ",LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",138,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="First character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",139,0)
 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="First character """_$E(LEX,1)_""" is not valid" Q "??"
"RTN","LEX10PL",140,0)
 I $L(LEX)'>1 S X=LEX Q X
"RTN","LEX10PL",141,0)
 S (LEXC,LEXO)=$E(LEX,1,2),LEXR=$E(LEX,2),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",142,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",143,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Second character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",144,0)
 I $L(LEX)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Second character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",145,0)
 I $L(LEX)'>2 S X=LEX Q X
"RTN","LEX10PL",146,0)
 S (LEXC,LEXO)=$E(LEX,1,3),LEXR=$E(LEX,3),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",147,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",148,0)
 I (LEXR'?1U&(LEXR'?1N))!(LEXR="Z") S LEXERR="Third character must not contain ""Z""" Q "??"
"RTN","LEX10PL",149,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Third character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",150,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Third character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",151,0)
 I $L(LEX)'>3 S X=LEX Q X
"RTN","LEX10PL",152,0)
 S (LEXC,LEXO)=$E(LEX,1,4),LEXR=$E(LEX,4),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",153,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",154,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Fourth character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",155,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Fourth character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",156,0)
 I $L(LEX)'>4 S X=LEX Q X
"RTN","LEX10PL",157,0)
 S (LEXC,LEXO)=$E(LEX,1,5),LEXR=$E(LEX,5),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",158,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",159,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Fifth character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",160,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Fifth character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",161,0)
 I $L(LEX)'>5 S X=LEX Q X
"RTN","LEX10PL",162,0)
 S (LEXC,LEXO)=$E(LEX,1,6),LEXR=$E(LEX,6),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",163,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",164,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Sixth character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",165,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Sixth character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",166,0)
 I $L(LEX)'>6 S X=LEX Q X
"RTN","LEX10PL",167,0)
 S (LEXC,LEXO)=$E(LEX,1,7),LEXR=$E(LEX,7),LEXO=$E(LEXO,1,($L(LEXO)-1))_$C($A($E(LEXO,$L(LEXO)))-1)_"~"
"RTN","LEX10PL",168,0)
 S LEXN=($O(^LEX(757.02,"APR",LEXO)))
"RTN","LEX10PL",169,0)
 I (LEXR'?1U&(LEXR'?1N)) S LEXERR="Seventh character must be uppercase or numeric" Q "??"
"RTN","LEX10PL",170,0)
 I $L(X)>1 I $E(LEXN,1,$L(LEXC))'=LEXC S LEXERR="Seventh character """_LEXR_""" is not valid" Q "??"
"RTN","LEX10PL",171,0)
 S X=LEX
"RTN","LEX10PL",172,0)
 Q X
"RTN","LEX10PL",173,0)
 ;               
"RTN","LEX10PL",174,0)
 ; Miscellaneous
"RTN","LEX10PL",175,0)
SAV(X,Y,LEXN,LEXC,LEXV) ;   Save Defaults
"RTN","LEX10PL",176,0)
 N LEXRTN,LEXTAG,LEXUSR,LEXCOM,LEXVAL,LEXNM,LEXID,LEXTD,LEXFD,LEXKEY S LEXRTN=$G(X) Q:+($$ROK(LEXRTN))'>0  S LEXTAG=$G(Y) Q:+($$TAG((LEXTAG_"^"_LEXRTN)))'>0
"RTN","LEX10PL",177,0)
 S LEXUSR=+($G(LEXN)),LEXVAL=$G(LEXV) Q:LEXUSR'>0  Q:'$L(LEXVAL)  S LEXCOM=$G(LEXC) Q:'$L(LEXCOM)  S LEXKEY=$E(LEXCOM,1,13) F  Q:$L(LEXKEY)>12  S LEXKEY=LEXKEY_" "
"RTN","LEX10PL",178,0)
 S LEXNM=$$GET1^DIQ(200,(LEXUSR_","),.01) Q:'$L(LEXNM)  S LEXTD=$$DT^XLFDT,LEXFD=$$FMADD^XLFDT(LEXTD,30),LEXID=LEXRTN_" "_LEXUSR_" "_LEXKEY
"RTN","LEX10PL",179,0)
 S ^XTMP(LEXID,0)=LEXFD_"^"_LEXTD_"^"_LEXCOM,^XTMP(LEXID,LEXTAG)=LEXVAL
"RTN","LEX10PL",180,0)
 Q
"RTN","LEX10PL",181,0)
RET(X,Y,LEXN,LEXC) ;   Retrieve Defaults
"RTN","LEX10PL",182,0)
 N LEXRTN,LEXTAG,LEXUSR,LEXCOM,LEXNM,LEXID,LEXTD,LEXFD,LEXKEY S LEXRTN=$G(X) Q:+($$ROK(LEXRTN))'>0 ""
"RTN","LEX10PL",183,0)
 S LEXTAG=$G(Y) Q:+($$TAG((LEXTAG_"^"_LEXRTN)))'>0 ""  S LEXUSR=+($G(LEXN)) Q:LEXUSR'>0 ""
"RTN","LEX10PL",184,0)
 S LEXCOM=$G(LEXC) Q:'$L(LEXCOM) ""  S LEXKEY=$E(LEXCOM,1,13) F  Q:$L(LEXKEY)>12  S LEXKEY=LEXKEY_" "
"RTN","LEX10PL",185,0)
 S LEXNM=$$GET1^DIQ(200,(LEXUSR_","),.01) Q:'$L(LEXNM) ""  S LEXTD=$$DT^XLFDT,LEXFD=$$FMADD^XLFDT(LEXTD,30),LEXID=LEXRTN_" "_LEXUSR_" "_LEXKEY
"RTN","LEX10PL",186,0)
 S X=$G(^XTMP(LEXID,LEXTAG))
"RTN","LEX10PL",187,0)
 Q X
"RTN","LEX10PL",188,0)
ROK(X) ;   Routine OK
"RTN","LEX10PL",189,0)
 S X=$G(X) Q:'$L(X) 0  Q:$L(X)>8 0  X ^%ZOSF("TEST") Q:$T 1  Q 0
"RTN","LEX10PL",190,0)
TAG(X) ;   Sub-Routine OK
"RTN","LEX10PL",191,0)
 N LEXT,LEXE,LEXL S X=$G(X) Q:'$L(X) 0  Q:X'["^" 0
"RTN","LEX10PL",192,0)
 Q:'$L($P(X,"^",1)) 0  Q:$L($P(X,"^",1))>8 0  Q:$E($P(X,"^",1),1)'?1U 0
"RTN","LEX10PL",193,0)
 Q:'$L($P(X,"^",2)) 0  Q:$L($P(X,"^",2))>8 0  Q:$E($P(X,"^",2),1)'?1U 0
"RTN","LEX10PL",194,0)
 S LEXL=0,LEXT=X,(LEXE,X)="S LEXL=$L($T("_X_"))" D ^DIM X:$D(X) LEXE
"RTN","LEX10PL",195,0)
 S X=$S(LEXL>0:1,1:0)
"RTN","LEX10PL",196,0)
 Q X
"RTN","LEX10PL",197,0)
END(X,Y) ;   End Search, display results
"RTN","LEX10PL",198,0)
 N LEXCODE,LEXTERM,LEXC,LEXI,LEXS S LEXCODE=$G(X),LEXTERM(1)=$G(Y) Q:$L(LEXCODE)'=7  Q:'$L(LEXTERM(1))
"RTN","LEX10PL",199,0)
 D PR^LEX10PLS(.LEXTERM,69),GCUR($G(LEXCODE),.LEXC)
"RTN","LEX10PL",200,0)
 S LEXS="",$P(LEXS,"-",$L(LEXC))="-" S LEXC=$J(" ",1)_LEXC,LEXS=$J(" ",1)_LEXS
"RTN","LEX10PL",201,0)
 W:$L($G(IOF)) @IOF S LEXI=0 F  S LEXI=$O(LEXTERM(LEXI)) Q:+LEXI'>0  D
"RTN","LEX10PL",202,0)
 . W !,?2,$G(LEXTERM(LEXI))
"RTN","LEX10PL",203,0)
 W ! D ATTR W !,$G(BOLD),$G(LEXC),$G(NORM),!," ",$G(LEXS) D KATTR
"RTN","LEX10PL",204,0)
 S LEXI=0 F  S LEXI=$O(LEXC(LEXI)) Q:+LEXI'>0  W !," ",$G(LEXC(LEXI))
"RTN","LEX10PL",205,0)
 W !!
"RTN","LEX10PL",206,0)
 Q
"RTN","LEX10PL",207,0)
CUR(X) ;   Current Array
"RTN","LEX10PL",208,0)
 N LEXC,LEXS,LEXI K LEXC D GCUR($G(X),.LEXC)  Q:'$D(LEXC)  S LEXC=$TR(LEXC," ","") Q:'$L($G(LEXC))  Q:$O(LEXC(0))'>0
"RTN","LEX10PL",209,0)
 N LEXS,LEXI S LEXS="",$P(LEXS,"-",$L(LEXC))="-" S LEXC=$J(" ",1)_LEXC,LEXS=$J(" ",1)_LEXS
"RTN","LEX10PL",210,0)
 W:$L($G(IOF)) @IOF D ATTR W !,$G(BOLD),$G(LEXC),$G(NORM),!,$G(LEXS) D KATTR
"RTN","LEX10PL",211,0)
 S LEXI=0 F  S LEXI=$O(LEXC(LEXI)) Q:+LEXI'>0  W !,$G(LEXC(LEXI))
"RTN","LEX10PL",212,0)
 Q
"RTN","LEX10PL",213,0)
GCUR(X,LEXA) ;   Get Current Array
"RTN","LEX10PL",214,0)
 K LEXA N LEXIN,LEXPSN,LEXOFF,LEXOK D ATTR
"RTN","LEX10PL",215,0)
 S LEXIN=$TR($G(X)," ",""),LEXOFF=$L(LEXIN)+2 Q:'$L(LEXIN)  Q:'$D(^LEX(757.033,"AFRAG",31,(LEXIN_" ")))
"RTN","LEX10PL",216,0)
 S LEXOK=1,LEXA=$J(" ",1)_LEXIN F LEXPSN=1:1:$L(LEXIN)  D
"RTN","LEX10PL",217,0)
 . N LEXTXT,LEXSEC,LEXCHR,LEXNAM S LEXSEC=$E(LEXIN,1,LEXPSN),LEXCHR=$E(LEXIN,LEXPSN),LEXNAM=$$NAM(LEXSEC)
"RTN","LEX10PL",218,0)
 . I '$L(LEXSEC)!('$L(LEXCHR))!('$L(LEXNAM)) S LEXOK=0 Q
"RTN","LEX10PL",219,0)
 . S LEXTXT=$J(" ",LEXPSN)_$G(BOLD)_LEXCHR_$G(NORM)
"RTN","LEX10PL",220,0)
 . S LEXTXT=LEXTXT_$J(" ",(LEXOFF-LEXPSN))_LEXNAM
"RTN","LEX10PL",221,0)
 . S LEXA(LEXPSN)=LEXTXT
"RTN","LEX10PL",222,0)
 D KATTR
"RTN","LEX10PL",223,0)
 K:'LEXOK LEXA
"RTN","LEX10PL",224,0)
 Q
"RTN","LEX10PL",225,0)
NAM(X) ;   Descriptive Dane
"RTN","LEX10PL",226,0)
 N LEXIN,LEXDT,LEXEFF,LEXIEN S LEXIN=$G(X) Q:'$L(LEXIN) ""  Q:'$D(^LEX(757.033,"AFRAG",31,(LEXIN_" "))) ""
"RTN","LEX10PL",227,0)
 S LEXDT=$G(LEXVDT) S:LEXDT'?7N LEXDT=$$IMP^ICDEX(31)
"RTN","LEX10PL",228,0)
 S LEXEFF=$O(^LEX(757.033,"AFRAG",31,(LEXIN_" "),(LEXDT+.001)),-1) Q:LEXEFF'?7N ""
"RTN","LEX10PL",229,0)
 S LEXIEN=$O(^LEX(757.033,"AFRAG",31,(LEXIN_" "),LEXEFF," "),-1) Q:+LEXIEN'>0 ""
"RTN","LEX10PL",230,0)
 S X=$$SN(LEXIEN)
"RTN","LEX10PL",231,0)
 Q X
"RTN","LEX10PL",232,0)
SN(X,EFF) ; Short Name
"RTN","LEX10PL",233,0)
 N IEN,CDT,IMP,EFF,HIS S IEN=+($G(X)),CDT=$G(LEXVDT) S:$G(EFF)?7N CDT=$G(EFF)
"RTN","LEX10PL",234,0)
 S IMP=$$IMP^ICDEX(31) S:CDT'?7N CDT=$$DT^XLFDT S:CDT'>IMP&(IMP?7N) CDT=IMP
"RTN","LEX10PL",235,0)
 S EFF=$O(^LEX(757.033,+IEN,2,"B",(CDT+.001)),-1)
"RTN","LEX10PL",236,0)
 S HIS=$O(^LEX(757.033,+IEN,2,"B",+EFF," "),-1)
"RTN","LEX10PL",237,0)
 S X=$G(^LEX(757.033,+IEN,2,+HIS,1))
"RTN","LEX10PL",238,0)
 Q X
"RTN","LEX10PL",239,0)
FND(X) ;   Found
"RTN","LEX10PL",240,0)
 N LEXI S X=0,LEXI="" F  S LEXI=$O(LEXPCDAT("NEXLEV",LEXI)) Q:'$L(LEXI)  S X=X+1
"RTN","LEX10PL",241,0)
 Q X
"RTN","LEX10PL",242,0)
GETO(X) ;   Get One
"RTN","LEX10PL",243,0)
 S X=$O(LEXPCDAT("NEXLEV",""))
"RTN","LEX10PL",244,0)
 Q X
"RTN","LEX10PL",245,0)
ATTR ;   Screen Attributes
"RTN","LEX10PL",246,0)
 N X,IOINHI,IOINORM S X="IOINHI;IOINORM" D ENDR^%ZISS S BOLD=$G(IOINHI),NORM=$G(IOINORM)
"RTN","LEX10PL",247,0)
 Q
"RTN","LEX10PL",248,0)
KATTR ;   Kill Screen Attributes
"RTN","LEX10PL",249,0)
 D KILL^%ZISS K BOLD,NORM
"RTN","LEX10PL",250,0)
 Q
"RTN","LEX10PL",251,0)
ENV(X) ;   Check environment
"RTN","LEX10PL",252,0)
 N LEX S DT=$$DT^XLFDT D HOME^%ZIS S U="^" I +($G(DUZ))=0 W !!,?5,"DUZ not defined" Q 0
"RTN","LEX10PL",253,0)
 S LEX=$$GET1^DIQ(200,(DUZ_","),.01) I '$L(LEX) W !!,?5,"DUZ not valid" Q 0
"RTN","LEX10PL",254,0)
 Q 1
"RTN","LEX10TAX")
0^44^B83718162
"RTN","LEX10TAX",1,0)
LEX10TAX ;ISL/KER - Post ICD-10 Taxonomy Look-up ;12/19/2014
"RTN","LEX10TAX",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEX10TAX",3,0)
 ;
"RTN","LEX10TAX",4,0)
 ; Global Variables
"RTN","LEX10TAX",5,0)
 ;    ^LEX(757.01         N/A
"RTN","LEX10TAX",6,0)
 ;    ^LEX(757.02         N/A
"RTN","LEX10TAX",7,0)
 ;    ^LEX(757.03         N/A
"RTN","LEX10TAX",8,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEX10TAX",9,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEX10TAX",10,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEX10TAX",11,0)
 ;    ^TMP(LEX10          SACC 2.3.2.5.1
"RTN","LEX10TAX",12,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEX10TAX",13,0)
 ;               
"RTN","LEX10TAX",14,0)
 ; External References
"RTN","LEX10TAX",15,0)
 ;    ^DIWP               ICR  10011
"RTN","LEX10TAX",16,0)
 ;    LOOK^LEXA           ICR   2950
"RTN","LEX10TAX",17,0)
 ;    CONFIG^LEXSET       ICR   1609
"RTN","LEX10TAX",18,0)
 ;    $$STATCHK^LEXSRC2   ICR   4083
"RTN","LEX10TAX",19,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEX10TAX",20,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX10TAX",21,0)
 ;               
"RTN","LEX10TAX",22,0)
 Q
"RTN","LEX10TAX",23,0)
TAX(X,LEXSRC,LEXDT,LEXSUB,LEXVER) ; Get Taxonomy Information
"RTN","LEX10TAX",24,0)
 ;
"RTN","LEX10TAX",25,0)
 ; Input: 
"RTN","LEX10TAX",26,0)
 ; 
"RTN","LEX10TAX",27,0)
 ;  X       Search String
"RTN","LEX10TAX",28,0)
 ;    
"RTN","LEX10TAX",29,0)
 ;  LEXSRC  String of Sources
"RTN","LEX10TAX",30,0)
 ;          Delimited by an "^" Up-Arrow
"RTN","LEX10TAX",31,0)
 ;                
"RTN","LEX10TAX",32,0)
 ;            Using source abbreviations
"RTN","LEX10TAX",33,0)
 ;            "ICD^ICP^10D^10P"
"RTN","LEX10TAX",34,0)
 ;                 
"RTN","LEX10TAX",35,0)
 ;            Using source pointers to file 757.03
"RTN","LEX10TAX",36,0)
 ;            "1^2^30^31"
"RTN","LEX10TAX",37,0)
 ;                 
"RTN","LEX10TAX",38,0)
 ;            Using Nomenclature
"RTN","LEX10TAX",39,0)
 ;            "ICD-9-CM^ICD-9 Proc^ICD-10-CM^ICD-10 Proc
"RTN","LEX10TAX",40,0)
 ;                 
"RTN","LEX10TAX",41,0)
 ;  LEXDT   Date to use to evaluate status
"RTN","LEX10TAX",42,0)
 ;    
"RTN","LEX10TAX",43,0)
 ;  LEXSUB  Name of a subscript to use in the ^TMP 
"RTN","LEX10TAX",44,0)
 ;          global (optional)
"RTN","LEX10TAX",45,0)
 ;            
"RTN","LEX10TAX",46,0)
 ;          ^TMP(LEXSUB,$J,
"RTN","LEX10TAX",47,0)
 ;          ^TMP("LEXTAX",$J,    Default
"RTN","LEX10TAX",48,0)
 ;    
"RTN","LEX10TAX",49,0)
 ;  LEXVER  Versioning Flag (optional, default = 0)
"RTN","LEX10TAX",50,0)
 ;     
"RTN","LEX10TAX",51,0)
 ;          0  Return active and inactive codes
"RTN","LEX10TAX",52,0)
 ;          1  Version, return active codes only
"RTN","LEX10TAX",53,0)
 ;     
"RTN","LEX10TAX",54,0)
 ; Output: 
"RTN","LEX10TAX",55,0)
 ; 
"RTN","LEX10TAX",56,0)
 ;  $$TAX   The number of codes found or -1 ^ error message
"RTN","LEX10TAX",57,0)
 ;    
"RTN","LEX10TAX",58,0)
 ;  ^TMP(LEXSUB,$J,SRC,(CODE_" "),#)
"RTN","LEX10TAX",59,0)
 ;    
"RTN","LEX10TAX",60,0)
 ;          5 piece "^" delimited string
"RTN","LEX10TAX",61,0)
 ;                             
"RTN","LEX10TAX",62,0)
 ;          1   Activation Date (can be a future date)
"RTN","LEX10TAX",63,0)
 ;          2   Inactivation Date (can be a future date)
"RTN","LEX10TAX",64,0)
 ;          3   Lexicon IEN to Expression File 757.01
"RTN","LEX10TAX",65,0)
 ;          4   Variable Pointer to a National file
"RTN","LEX10TAX",66,0)
 ;          5   Short Name from a National file
"RTN","LEX10TAX",67,0)
 ; 
"RTN","LEX10TAX",68,0)
 ;  ^TMP(LEXSUB,$J,SRC,(CODE_" "),#,0)
"RTN","LEX10TAX",69,0)
 ;    
"RTN","LEX10TAX",70,0)
 ;          2 piece "^" delimited string
"RTN","LEX10TAX",71,0)
 ;                             
"RTN","LEX10TAX",72,0)
 ;          1   Code (no spaces)
"RTN","LEX10TAX",73,0)
 ;          2   Lexicon Expression
"RTN","LEX10TAX",74,0)
 ;              
"RTN","LEX10TAX",75,0)
 ;   Subscript SRC is a pointer to the CODING SYSTEM FILE 757.03
"RTN","LEX10TAX",76,0)
 ;                             
"RTN","LEX10TAX",77,0)
 N LEX,LEXX,LEXIS,LEXVDT,LEX10SUB S LEXX=$$UP^XLFSTR($G(X)) Q:$L(LEXX)'>1 "-1^Search Text Missing"
"RTN","LEX10TAX",78,0)
 S LEXVDT="" S:$P($G(LEXDT),".",1)'?7N LEXDT=$$DT^XLFDT
"RTN","LEX10TAX",79,0)
 S:$P($G(LEXDT),".",1)?7N LEXVDT=$P($G(LEXDT),".",1)
"RTN","LEX10TAX",80,0)
 S LEXSRC=$$SRC($G(LEXSRC))
"RTN","LEX10TAX",81,0)
 S LEX10SUB=$G(LEXSUB) S:'$L(LEX10SUB) LEX10SUB="LEXTAX"
"RTN","LEX10TAX",82,0)
 S LEXIS=$$IS(LEXX),LEXVER=+($G(LEXVER)) D:LEXIS LBC D:'LEXIS LBT
"RTN","LEX10TAX",83,0)
 S X=+($G(^TMP(LEX10SUB,$J,0))) S:X'>0 X="-1^No Entries Found"
"RTN","LEX10TAX",84,0)
 Q X
"RTN","LEX10TAX",85,0)
LBC ; Lookup by Code
"RTN","LEX10TAX",86,0)
 N LEXCTL,LEXORD S LEXCTL=LEXX,LEXORD=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~ "
"RTN","LEX10TAX",87,0)
 F  S LEXORD=$O(^LEX(757.02,"CODE",LEXORD)) Q:'$L(LEXORD)!($E(LEXORD,1,$L(LEXCTL))'=LEXCTL)  D
"RTN","LEX10TAX",88,0)
 . N LEXSIEN S LEXSIEN=0
"RTN","LEX10TAX",89,0)
 . F  S LEXSIEN=$O(^LEX(757.02,"CODE",LEXORD,LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEX10TAX",90,0)
 . . N LEXND,LEXIEN,LEXCD,LEXPF,LEXTY,LEXSR S LEXND=$G(^LEX(757.02,+LEXSIEN,0)),LEXIEN=+LEXND
"RTN","LEX10TAX",91,0)
 . . S LEXCD=$P(LEXND,"^",2),LEXPF=$P(LEXND,"^",5),LEXSR=$P(LEXND,"^",3)
"RTN","LEX10TAX",92,0)
 . . Q:("^"_LEXSRC_"^")'[("^"_LEXSR_"^")
"RTN","LEX10TAX",93,0)
 . . S LEXTY=$P($G(^LEX(757.01,+LEXIEN,1)),"^",2)
"RTN","LEX10TAX",94,0)
 . . Q:LEXTY'=1  Q:LEXPF'>0  Q:$E(LEXCD,1,$L(LEXCTL))'=LEXCTL  D ES(LEXIEN,$G(LEXVDT))
"RTN","LEX10TAX",95,0)
 D REO D:+($G(^TMP(LEX10SUB,$J,0)))'>0 LBT
"RTN","LEX10TAX",96,0)
 Q
"RTN","LEX10TAX",97,0)
LBT ; Looup by Text
"RTN","LEX10TAX",98,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXFND",$J),^TMP("LEXHIT",$J),LEX
"RTN","LEX10TAX",99,0)
 N LEXTMP,LEXFQ,LEXIEN,DIC,LEXSAB S DIC="^LEX(757.01,",LEXTMP=$G(LEXVDT)
"RTN","LEX10TAX",100,0)
 D CONFIG^LEXSET("PXRM","CR1")
"RTN","LEX10TAX",101,0)
 S ^TMP("LEXSCH",$J,"ADF",0)=1 S ^TMP("LEXSCH",$J,"FIL",0)="I 1"
"RTN","LEX10TAX",102,0)
 S ^TMP("LEXSCH",$J,"FIL",1)="ALL" S ^TMP("LEXSCH",$J,"LEN",0)=1
"RTN","LEX10TAX",103,0)
 K LEXVDT D LOOK^LEXA(LEXX,"PXRM",1,"CR1") S:LEXTMP?7N LEXVDT=LEXTMP
"RTN","LEX10TAX",104,0)
 S LEXIEN=+$G(LEX("LIST",1)) D:LEXIEN>0 ES(LEXIEN,$G(LEXTMP))
"RTN","LEX10TAX",105,0)
 S LEXFQ="" F  S LEXFQ=$O(^TMP("LEXFND",$J,LEXFQ)) Q:'$L(LEXFQ)  D
"RTN","LEX10TAX",106,0)
 . S LEXIEN=0 F  S LEXIEN=$O(^TMP("LEXFND",$J,LEXFQ,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEX10TAX",107,0)
 . . K LEXCTL D ES(LEXIEN)
"RTN","LEX10TAX",108,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXFND",$J),^TMP("LEXHIT",$J),LEX D REO
"RTN","LEX10TAX",109,0)
 Q
"RTN","LEX10TAX",110,0)
ES(X,Y) ; Expression to Code
"RTN","LEX10TAX",111,0)
 N LEXIEN,LEXSIEN,LEXDT S LEXIEN=+($G(X)) Q:+LEXIEN'>0  S LEXDT=$P($G(Y),".",1) S:LEXDT'?7N LEXDT=$$DT^XLFDT
"RTN","LEX10TAX",112,0)
 S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"B",LEXIEN,LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEX10TAX",113,0)
 . N LEXND,LEXV,LEXEF,LEXHI,LEXST,LEXCO,LEXSR,LEXSB,LEXNM,X,LEX,LEXCT,LEXCD,LEXFIL
"RTN","LEX10TAX",114,0)
 . S LEXV=1,LEXND=$G(^LEX(757.02,+LEXSIEN,0)),LEXCD=$P(LEXND,"^",2),LEXSR=$P(LEXND,"^",3)
"RTN","LEX10TAX",115,0)
 . Q:("^"_LEXSRC_"^")'[("^"_LEXSR_"^")
"RTN","LEX10TAX",116,0)
 . I 0 I LEXSR=56 S LEXFIL=$$SCT(LEXIEN,LEXDT) Q:LEXFIL'>0
"RTN","LEX10TAX",117,0)
 . Q:'$L(LEXCD)  Q:+LEXSR'>0  Q:'$D(^LEX(757.03,+LEXSR,0))
"RTN","LEX10TAX",118,0)
 . I +($G(LEXVER))>0,$G(LEXVDT)?7N D  Q:LEXV'>0
"RTN","LEX10TAX",119,0)
 . . N LEXST S LEXST=$$STATCHK^LEXSRC2(LEXCD,LEXVDT,,LEXSR) S:+LEXST'>0 LEXV=0
"RTN","LEX10TAX",120,0)
 . Q:$D(^TMP(LEX10SUB,$J,+LEXSR,(LEXCD_" ")))  S X=$$PERIOD^LEXU(LEXCD,+LEXSR,.LEX)
"RTN","LEX10TAX",121,0)
 . S LEXCT=0,LEXEF=0 F  S LEXEF=$O(LEX(LEXEF)) Q:+LEXEF'>0  D
"RTN","LEX10TAX",122,0)
 . . Q:LEXEF'?7N  N LEXND,LEXDD S LEXND=$G(LEX(LEXEF)),LEXDD=$G(LEX(LEXEF,0))
"RTN","LEX10TAX",123,0)
 . . Q:$P(LEXND,"^",2)'>0  Q:'$L(LEXDD)  S LEXCT=LEXCT+1
"RTN","LEX10TAX",124,0)
 . . I '$D(^TMP(LEX10SUB,$J,+LEXSR,(LEXCD_" "))) D
"RTN","LEX10TAX",125,0)
 . . . S ^TMP(LEX10SUB,$J,0)=$G(^TMP(LEX10SUB,$J,0))+1
"RTN","LEX10TAX",126,0)
 . . S ^TMP(LEX10SUB,$J,+LEXSR,(LEXCD_" "),LEXCT)=LEXEF_"^"_LEXND
"RTN","LEX10TAX",127,0)
 . . S ^TMP(LEX10SUB,$J,+LEXSR,(LEXCD_" "),LEXCT,0)=LEXCD_"^"_LEXDD
"RTN","LEX10TAX",128,0)
 Q
"RTN","LEX10TAX",129,0)
REO ; Reorder Array
"RTN","LEX10TAX",130,0)
 N LEXKEY S LEXKEY="" F  S LEXKEY=$O(^TMP(LEX10SUB,$J,"IN",LEXKEY)) Q:'$L(LEXKEY)  D
"RTN","LEX10TAX",131,0)
 . N LEXCD S LEXCD="" F  S LEXCD=$O(^TMP(LEX10SUB,$J,"IN",LEXKEY,LEXCD)) Q:'$L(LEXCD)  D
"RTN","LEX10TAX",132,0)
 . . N LEXND,LEXSB,LEXI S LEXND=$G(^TMP(LEX10SUB,$J,"IN",LEXKEY,LEXCD))
"RTN","LEX10TAX",133,0)
 . . S LEXSB=$P(LEXND,"^",7) Q:'$L(LEXSB)  S LEXSR=$P(LEXND,"^",6) Q:+LEXSR'>0
"RTN","LEX10TAX",134,0)
 . . S LEXI=$O(^TMP(LEX10SUB,$J,LEXSR," "),-1)+1 S ^TMP(LEX10SUB,$J,LEXSR,LEXI)=LEXND
"RTN","LEX10TAX",135,0)
 K ^TMP(LEX10SUB,$J,"IN")
"RTN","LEX10TAX",136,0)
 Q
"RTN","LEX10TAX",137,0)
IS(X) ; Is a Code
"RTN","LEX10TAX",138,0)
 S X=$G(X) Q:'$L(X) 0
"RTN","LEX10TAX",139,0)
 Q:$D(^LEX(757.02,"CODE",(X_" "))) 1
"RTN","LEX10TAX",140,0)
 Q:$O(^LEX(757.02,"CODE",(X_" ")))[X 1
"RTN","LEX10TAX",141,0)
 Q 0
"RTN","LEX10TAX",142,0)
SRC(X) ; Re-Create Source String
"RTN","LEX10TAX",143,0)
 N LEXX,LEXN,LEXI S LEXN="" S LEXX=$G(X) Q:'$L(LEXX) "ALL"
"RTN","LEX10TAX",144,0)
 F LEXI=1:1 Q:'$L($P(LEXX,"^",LEXI))  D
"RTN","LEX10TAX",145,0)
 . N LEXSB,LEXSR S LEXSB=$P(LEXX,"^",LEXI)
"RTN","LEX10TAX",146,0)
 . S LEXSR=$$CS(LEXSB) S:+LEXSR>0 LEXN=LEXN_"^"_+LEXSR
"RTN","LEX10TAX",147,0)
 S X=$$TM(LEXN,"^")
"RTN","LEX10TAX",148,0)
 Q X
"RTN","LEX10TAX",149,0)
CS(X) ; Coding System
"RTN","LEX10TAX",150,0)
 N LEXIN S LEXIN=$G(X) Q:'$L(LEXIN) ""
"RTN","LEX10TAX",151,0)
 Q:LEXIN?1N.N&($D(^LEX(757.03,+LEXIN,0))) +LEXIN
"RTN","LEX10TAX",152,0)
 Q:$D(^LEX(757.03,"ASAB",LEXIN))&($O(^LEX(757.03,"ASAB",LEXIN,0))>0) $O(^LEX(757.03,"ASAB",LEXIN,0))
"RTN","LEX10TAX",153,0)
 Q:$D(^LEX(757.03,"B",LEXIN))&($O(^LEX(757.03,"B",LEXIN,0))>0) $O(^LEX(757.03,"B",LEXIN,0))
"RTN","LEX10TAX",154,0)
 Q:$D(^LEX(757.03,"C",LEXIN))&($O(^LEX(757.03,"C",LEXIN,0))>0) $O(^LEX(757.03,"C",LEXIN,0))
"RTN","LEX10TAX",155,0)
 Q ""
"RTN","LEX10TAX",156,0)
 ; 
"RTN","LEX10TAX",157,0)
 ; Miscellaneous
"RTN","LEX10TAX",158,0)
SCT(LEX,LEXVDT) ;   Filter by SNOMED CT (SCT) (Human only)
"RTN","LEX10TAX",159,0)
 ; 
"RTN","LEX10TAX",160,0)
 ; Input
"RTN","LEX10TAX",161,0)
 ; 
"RTN","LEX10TAX",162,0)
 ;    LEX      IEN of file 757.01
"RTN","LEX10TAX",163,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEX10TAX",164,0)
 ;
"RTN","LEX10TAX",165,0)
 ; Output
"RTN","LEX10TAX",166,0)
 ;
"RTN","LEX10TAX",167,0)
 ;    $$SCT    Human SNOMED Code or Null
"RTN","LEX10TAX",168,0)
 ;             Excludes Veterinary SNOMED codes
"RTN","LEX10TAX",169,0)
 ;
"RTN","LEX10TAX",170,0)
 N LEXEX,LEXMC,LEXD,LEXC,LEXI,LEXO,LEXPL,LEXVT S LEXEX=+($G(LEX)),LEXD=$G(LEXVDT) Q:LEXEX'>0 0
"RTN","LEX10TAX",171,0)
 S LEXC=$S(LEXD?7N:$$ONE^LEXU(+LEXEX,LEXD,"SCT"),1:$$ONE^LEXU(+LEXEX,,"SCT"))
"RTN","LEX10TAX",172,0)
 Q:'$L(LEXC) 0  S LEXMC=+($G(^LEX(757.01,+LEXEX,1))) Q:LEXMC'>0 0  Q:'$D(^LEX(757.1,"B",LEXMC)) 0
"RTN","LEX10TAX",173,0)
 S LEXVT=0,LEXI=0 F  S LEXI=$O(^LEX(757.1,"B",LEXMC,LEXI)) Q:+LEXI'>0  D  Q:LEXVT>0
"RTN","LEX10TAX",174,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.1,LEXI,0)),"^",3),LEXN=$$UP^XLFSTR($P($G(^LEX(757.12,+LEXT,0)),"^",2)) S:LEXN["VETERINARY" LEXVT=1
"RTN","LEX10TAX",175,0)
 S LEXPL=0,LEXI=0 F  S LEXI=$O(^LEX(757.21,"B",LEXEX,LEXI)) Q:+LEXI'>0  D  Q:LEXPL>0
"RTN","LEX10TAX",176,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.21,LEXI,0)),"^",2),LEXN=$P($G(^LEXT(757.2,+LEXT,0)),"^",2) S:LEXN="PLS" LEXPL=1
"RTN","LEX10TAX",177,0)
 S LEXO=1 S:LEXVT=1 LEXO=0 S:LEXPL'>0 LEXO=0
"RTN","LEX10TAX",178,0)
 S X=LEXO
"RTN","LEX10TAX",179,0)
 Q X
"RTN","LEX10TAX",180,0)
SHO ;   Show ^TMP global
"RTN","LEX10TAX",181,0)
 N LEXNN,LEXNC,LEXS S LEXS=$G(LEXSUB) S:'$L(LEXS) LEXS="LEXTAX"
"RTN","LEX10TAX",182,0)
 S LEXNN="^TMP("""_LEXS_""","_$J_")",LEXNC="^TMP("""_LEXS_""","_$J_","
"RTN","LEX10TAX",183,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEX10TAX",184,0)
 . N LEXND S LEXND=@LEXNN W !,LEXNN,"=",LEXND
"RTN","LEX10TAX",185,0)
 Q
"RTN","LEX10TAX",186,0)
EXP ;   Show ^TMP global (expanded display)
"RTN","LEX10TAX",187,0)
 N LEXN1,LEXN2,LEXN3,LEXNN,LEXNC,LEXS,LEXTD S LEXS=$G(LEXSUB) S:'$L(LEXS) LEXS="LEXTAX"
"RTN","LEX10TAX",188,0)
 S LEXTD=$$DT^XLFDT,LEXN1=0 F  S LEXN1=$O(^TMP(LEXS,$J,LEXN1)) Q:+LEXN1'>0  D
"RTN","LEX10TAX",189,0)
 . N LEXSNM Q:'$D(^LEX(757.03,LEXN1,0))
"RTN","LEX10TAX",190,0)
 . S LEXSNM=$P($G(^LEX(757.03,LEXN1,0)),"^",2) Q:'$L(LEXSNM)
"RTN","LEX10TAX",191,0)
 . S LEXN2="" F  S LEXN2=$O(^TMP(LEXS,$J,LEXN1,LEXN2)) Q:'$L(LEXN2)  D
"RTN","LEX10TAX",192,0)
 . . W !,?3,LEXSNM," Code:  ",LEXN2
"RTN","LEX10TAX",193,0)
 . . S LEXN3=0 F  S LEXN3=$O(^TMP(LEXS,$J,LEXN1,LEXN2,LEXN3)) Q:+LEXN3'>0  D
"RTN","LEX10TAX",194,0)
 . . . N LEXN,LEX0,LEXAC,LEXIN,LEXIE,LEXVP,LEXSN,LEXCD,LEXNM,LEXA,LEXI
"RTN","LEX10TAX",195,0)
 . . . S LEXN=$G(^TMP(LEXS,$J,LEXN1,LEXN2,LEXN3))
"RTN","LEX10TAX",196,0)
 . . . S LEX0=$G(^TMP(LEXS,$J,LEXN1,LEXN2,LEXN3,0))
"RTN","LEX10TAX",197,0)
 . . . S LEXAC=$P(LEXN,"^",1),LEXIN=$P(LEXN,"^",2)
"RTN","LEX10TAX",198,0)
 . . . S LEXIE=$P(LEXN,"^",3),LEXVP=$P(LEXN,"^",4)
"RTN","LEX10TAX",199,0)
 . . . S LEXSN=$P(LEXN,"^",5)
"RTN","LEX10TAX",200,0)
 . . . W !,?5,"Active:  ",$$ED(LEXAC) W:LEXAC>LEXTD " (Pending)"
"RTN","LEX10TAX",201,0)
 . . . W ?36,"Inactive:  ",$$ED(LEXIN) W:LEXIN>LEXTD " (Pending)"
"RTN","LEX10TAX",202,0)
 . . . S LEX0=$G(^TMP(LEXS,$J,LEXN1,LEXN2,LEXN3,0))
"RTN","LEX10TAX",203,0)
 . . . S LEXCD=$P(LEX0,"^",1)
"RTN","LEX10TAX",204,0)
 . . . S LEXNM=$P(LEX0,"^",2) S LEXA(1)=LEXNM D PR(.LEXA,(79-36))
"RTN","LEX10TAX",205,0)
 . . . W !,?5,"   IEN:  ",LEXIE W:$L($G(LEXA(1))) ?36,$G(LEXA(1))
"RTN","LEX10TAX",206,0)
 . . . S LEXI=1 F  S LEXI=$O(LEXA(LEXI)) Q:+LEXI'>0  W:$L($G(LEXA(LEXI))) !,?36,$G(LEXA(LEXI))
"RTN","LEX10TAX",207,0)
 Q
"RTN","LEX10TAX",208,0)
ED(X) ;   Exernal Date
"RTN","LEX10TAX",209,0)
 S X=$G(X) Q:X'?7N "--/--/----"
"RTN","LEX10TAX",210,0)
 S X=$$FMTE^XLFDT(X,"5Z")
"RTN","LEX10TAX",211,0)
 Q X
"RTN","LEX10TAX",212,0)
VET(X) ; Veterinary Term - 1 = Yes
"RTN","LEX10TAX",213,0)
 N LEXEX,LEXMC,LEXD,LEXC,LEXI,LEXO S LEXEX=+($G(X)) Q:LEXEX'>0 -1
"RTN","LEX10TAX",214,0)
 S LEXMC=+($G(^LEX(757.01,+LEXEX,1))) Q:LEXMC'>0 -1  Q:'$D(^LEX(757.1,"B",LEXMC)) -3
"RTN","LEX10TAX",215,0)
 S LEXO=0,LEXI=0 F  S LEXI=$O(^LEX(757.1,"B",LEXMC,LEXI)) Q:+LEXI'>0  D
"RTN","LEX10TAX",216,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.1,LEXI,0)),"^",3)
"RTN","LEX10TAX",217,0)
 . S LEXN=$$UP^XLFSTR($P($G(^LEX(757.12,+LEXT,0)),"^",2))
"RTN","LEX10TAX",218,0)
 . S:LEXN["VETERINARY" LEXO=1
"RTN","LEX10TAX",219,0)
 S X=LEXO
"RTN","LEX10TAX",220,0)
 Q X
"RTN","LEX10TAX",221,0)
PR(LEX,X) ;   Parse Array
"RTN","LEX10TAX",222,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC K ^UTILITY($J,"W") Q:'$D(LEX)
"RTN","LEX10TAX",223,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEX10TAX",224,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEX10TAX",225,0)
 K LEX S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEX10TAX",226,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEX10TAX",227,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEX10TAX",228,0)
 Q
"RTN","LEX10TAX",229,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEX10TAX",230,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEX10TAX",231,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEX10TAX",232,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEX10TAX",233,0)
 Q X
"RTN","LEX2086")
0^1^B104276930
"RTN","LEX2086",1,0)
LEX2086 ;ISL/KER - LEX*2.0*86 Env Check ;12/19/2014
"RTN","LEX2086",2,0)
 ;;2.0;LEXICON UTILITY;**86**;Sep 23, 1996;Build 1
"RTN","LEX2086",3,0)
 ;               
"RTN","LEX2086",4,0)
 ; Global Variables 
"RTN","LEX2086",5,0)
 ;    ^LEXM               N/A
"RTN","LEX2086",6,0)
 ;               
"RTN","LEX2086",7,0)
 ; External References
"RTN","LEX2086",8,0)
 ;    FIND^DIC            ICR   2051
"RTN","LEX2086",9,0)
 ;    $$IENS^DILF         ICR   2054
"RTN","LEX2086",10,0)
 ;    EN^DIQ1             ICR  10015
"RTN","LEX2086",11,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEX2086",12,0)
 ;    $$PATCH^XPDUTL      ICR  10141
"RTN","LEX2086",13,0)
 ;    $$PKG^XPDUTL        ICR  10141
"RTN","LEX2086",14,0)
 ;    $$VER^XPDUTL        ICR  10141
"RTN","LEX2086",15,0)
 ;    $$VERSION^XPDUTL    ICR  10141
"RTN","LEX2086",16,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","LEX2086",17,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEX2086",18,0)
 ;               
"RTN","LEX2086",19,0)
 ; Local Variables Killed by Kernel after Install
"RTN","LEX2086",20,0)
 ;     XPDABORT
"RTN","LEX2086",21,0)
 ;     XPDENV
"RTN","LEX2086",22,0)
 ;     XPDNOQUE
"RTN","LEX2086",23,0)
 ;     XPDDIQ
"RTN","LEX2086",24,0)
 ;     XPDQUIT
"RTN","LEX2086",25,0)
 ;     
"RTN","LEX2086",26,0)
 ; see Kernel Developer Guide
"RTN","LEX2086",27,0)
 ;     Chapter 14, KIDS Developer Tools
"RTN","LEX2086",28,0)
 ;     Advanced Build Techniques
"RTN","LEX2086",29,0)
 ;     
"RTN","LEX2086",30,0)
 ; The following sections must be updated with each patch
"RTN","LEX2086",31,0)
 ;        
"RTN","LEX2086",32,0)
 ;     IMP^LEX20nn   Import names
"RTN","LEX2086",33,0)
 ;     
"RTN","LEX2086",34,0)
 ;         This section sets the following variables:
"RTN","LEX2086",35,0)
 ;         
"RTN","LEX2086",36,0)
 ;         LEXBUILD   Build Name            LEX*2.0*nn
"RTN","LEX2086",37,0)
 ;         LEXPTYPE   Patch Type            Remedy or Quarterly
"RTN","LEX2086",38,0)
 ;         LEXLREV    Revision Number       nn
"RTN","LEX2086",39,0)
 ;         LEXFY      Fiscal Year           FYnn
"RTN","LEX2086",40,0)
 ;         LEXQTR     Quarter               1st, 2nd, 3rd, or 4th
"RTN","LEX2086",41,0)
 ;         LEXREQP(n) Required Patch Array
"RTN","LEX2086",42,0)
 ;
"RTN","LEX2086",43,0)
 ;     GD^LEX20nn    Global Data
"RTN","LEX2086",44,0)
 ;     
"RTN","LEX2086",45,0)
 ;         This is a listing of globals that this patch writes 
"RTN","LEX2086",46,0)
 ;         to, it contains a closed global root, a global ID, 
"RTN","LEX2086",47,0)
 ;         a global name and file numbers. 
"RTN","LEX2086",48,0)
 ;                          
"RTN","LEX2086",49,0)
 ;     IPL^LEX20nnP  Informational Patch List
"RTN","LEX2086",50,0)
 ;     
"RTN","LEX2086",51,0)
 ;         This is a listing of informational patches that 
"RTN","LEX2086",52,0)
 ;         accompany this patch.  It consist of a patch nane 
"RTN","LEX2086",53,0)
 ;         and a sequence number when available.
"RTN","LEX2086",54,0)
 ;               
"RTN","LEX2086",55,0)
ENV ; Environment Check
"RTN","LEX2086",56,0)
 ;                    
"RTN","LEX2086",57,0)
 ;   General
"RTN","LEX2086",58,0)
 ;
"RTN","LEX2086",59,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR,LEXG,LEXB,LEXE,LEXR,LEXSTR,LEXOK D IMP
"RTN","LEX2086",60,0)
 K XPDDIQ("XPZ1","B"),XPDDIQ("XPI1","B") S XPDDIQ("XPZ1","B")="NO",XPDDIQ("XPI1","B")="NO" S XPDNOQUE=1
"RTN","LEX2086",61,0)
 S LEXSTR=$G(LEXPTYPE) S:$L($G(LEXFY))&($L($G(LEXQTR))) LEXSTR=LEXSTR_" for "_$G(LEXFY)_" "_$G(LEXQTR)_" Quarter"
"RTN","LEX2086",62,0)
 D M(LEXSTR),M("")
"RTN","LEX2086",63,0)
 S U="^"
"RTN","LEX2086",64,0)
 ;     No user
"RTN","LEX2086",65,0)
 D:+($$UR)'>0 ET("User not defined (DUZ)")
"RTN","LEX2086",66,0)
 ;     No IO
"RTN","LEX2086",67,0)
 D:+($$SY)'>0 ET("Undefined IO variable(s)")
"RTN","LEX2086",68,0)
 I $D(LEXE) D ABRT Q
"RTN","LEX2086",69,0)
 ;                    
"RTN","LEX2086",70,0)
 ;   Load Distribution
"RTN","LEX2086",71,0)
 ;
"RTN","LEX2086",72,0)
 ;     XPDENV = 0 Environment Check during Load
"RTN","LEX2086",73,0)
 ;
"RTN","LEX2086",74,0)
 ;       Check Version (2.0)
"RTN","LEX2086",75,0)
 I $$VERSION^XPDUTL("LEX")'="2.0" D  D ABRT Q
"RTN","LEX2086",76,0)
 . D ET("Version 2.0 not found.  Please install Lexicon Utility v 2.0")
"RTN","LEX2086",77,0)
 N LEXOK,LEXG,LEXR,LEXB
"RTN","LEX2086",78,0)
 ;       Check Required Patches
"RTN","LEX2086",79,0)
 D:$O(LEXREQP(0))'>0 IMP I $O(LEXREQP(0))>0 D
"RTN","LEX2086",80,0)
 . N LEXPAT,LEXI,LEXPN,LEXP,LEXR,LEXC,LEXO,LEXC1,LEXC2,LEXC3,LEXC4,LEX
"RTN","LEX2086",81,0)
 . S (LEXR,LEXC)=0 S LEXC1=3,LEXC2=24,LEXC3=36,LEXC4=48
"RTN","LEX2086",82,0)
 . S LEXI=0  F  S LEXI=$O(LEXREQP(LEXI)) Q:+LEXI'>0  D
"RTN","LEX2086",83,0)
 . . S LEXC=LEXC+1,LEXPAT=$G(LEXREQP(LEXI))
"RTN","LEX2086",84,0)
 . S LEXI=0  F  S LEXI=$O(LEXREQP(LEXI)) Q:+LEXI'>0  D
"RTN","LEX2086",85,0)
 . . N LEXPAT,LEXREL,LEXINS,LEXCOM,LEXINE,LEXREQ,LEXTX S LEXREQ=$G(LEXREQP(LEXI))
"RTN","LEX2086",86,0)
 . . S LEXPAT=$P(LEXREQ,"^",1),LEXREL=$P(LEXREQ,"^",2),LEXCOM=$P(LEXREQ,"^",3)
"RTN","LEX2086",87,0)
 . . S LEXPN=$$INS(LEXPAT) S LEXINS=$$INSD(LEXPAT),LEXINE=$P(LEXINS,"^",2)
"RTN","LEX2086",88,0)
 . . I LEXI=1 D
"RTN","LEX2086",89,0)
 . . . W !,?LEXC1,"Checking for ",!
"RTN","LEX2086",90,0)
 . . . W !,?LEXC1,"Patch",?LEXC2,"Released",?LEXC3,"Installed",?LEXC4,"Content"
"RTN","LEX2086",91,0)
 . . S LEXTX=$J(" ",LEXC1)_LEXPAT
"RTN","LEX2086",92,0)
 . . S LEXTX=LEXTX_$J(" ",(LEXC2-$L(LEXTX)))
"RTN","LEX2086",93,0)
 . . S:LEXREL?7N LEXTX=LEXTX_$P($$FMTE^XLFDT(LEXREL,"5DZ"),"@",1)
"RTN","LEX2086",94,0)
 . . S LEXTX=LEXTX_$J(" ",(LEXC3-$L(LEXTX)))
"RTN","LEX2086",95,0)
 . . I +LEXPN>0 D
"RTN","LEX2086",96,0)
 . . . S LEXO=+($G(LEXO))+1 S:$L($G(LEXINE)) LEXTX=LEXTX_LEXINE
"RTN","LEX2086",97,0)
 . . . S LEXTX=LEXTX_$J(" ",(LEXC4-$L(LEXTX)))
"RTN","LEX2086",98,0)
 . . . S:$L(LEXCOM) LEXTX=LEXTX_LEXCOM
"RTN","LEX2086",99,0)
 . . D M(LEXTX)
"RTN","LEX2086",100,0)
 . . I +LEXPN'>0 D ET((" "_LEXPAT_" not found, please install "_LEXPAT_" before continuing"))
"RTN","LEX2086",101,0)
 . W:+($G(LEXO))'=LEXC !
"RTN","LEX2086",102,0)
 I $D(LEXE) D M(),ABRT Q
"RTN","LEX2086",103,0)
 I '$D(LEXFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","LEX2086",104,0)
QUIT ;     Quit   Passed Environment Check
"RTN","LEX2086",105,0)
 K LEXFULL D OK
"RTN","LEX2086",106,0)
 Q
"RTN","LEX2086",107,0)
EXIT ;     Exit   Failed Environment Check
"RTN","LEX2086",108,0)
 D:$D(LEXE) ED S XPDQUIT=2 K LEXE,LEXFULL Q
"RTN","LEX2086",109,0)
ABRT ;     Abort  Failed Environment Check, KILL the distribution
"RTN","LEX2086",110,0)
 D:$D(LEXE) ED S XPDABORT=1,XPDQUIT=1,XPDQUIT("LEX*2.0*86")=1,XPDQUIT("ICD*18.0*67")=1,XPDQUIT("FB*3.5*157")=1
"RTN","LEX2086",111,0)
 K LEXE,LEXFULL
"RTN","LEX2086",112,0)
 Q
"RTN","LEX2086",113,0)
T1 ; Environment Check #1 (for testing only)
"RTN","LEX2086",114,0)
 K XPDENV D ENV
"RTN","LEX2086",115,0)
 Q
"RTN","LEX2086",116,0)
T2 ; Environment Check #2 (for testing only)
"RTN","LEX2086",117,0)
 N XPDENV S XPDENV=1 D ENV
"RTN","LEX2086",118,0)
 Q
"RTN","LEX2086",119,0)
 ;               
"RTN","LEX2086",120,0)
 ; Checks
"RTN","LEX2086",121,0)
 ;
"RTN","LEX2086",122,0)
INS(X) ;   Installed
"RTN","LEX2086",123,0)
 N LEX,LEXP,LEXV,LEXI,LEXS S LEX=$P($G(X)," ",1) I $L(LEX,"*")=3 S X=$$PATCH^XPDUTL(LEX) Q X
"RTN","LEX2086",124,0)
 S LEXP=$$PKG^XPDUTL(LEX),LEXV=$$VER^XPDUTL(LEX),LEXI=$$VERSION^XPDUTL(LEXP)
"RTN","LEX2086",125,0)
 Q:+LEXV>0&(LEXV=LEXI) 1
"RTN","LEX2086",126,0)
 Q 0
"RTN","LEX2086",127,0)
INSD(X)  ;   Installed on
"RTN","LEX2086",128,0)
 N DA,LEX,LEXDA,LEXE,LEXI,LEXMSG,LEXNS,LEXOUT,LEXPI,LEXPN,LEXSCR,LEXVI,LEXVD,LEXVI,LEXVR S LEX=$G(X)
"RTN","LEX2086",129,0)
 S LEXNS=$$PKG^XPDUTL(LEX),LEXVR=$$VER^XPDUTL(LEX),LEXPN=$P(X,"*",3)
"RTN","LEX2086",130,0)
 Q:'$L(LEXNS) ""  S LEXVR=+LEXVR Q:LEXVR'>0 ""  S LEXPN=+LEXPN S:LEXVR'["." LEXVR=LEXVR_".0"
"RTN","LEX2086",131,0)
 S LEXSCR="I $G(^DIC(9.4,+($G(Y)),""VERSION""))="""_LEXVR_""""
"RTN","LEX2086",132,0)
 D FIND^DIC(9.4,,.01,"O",LEXNS,10,"C",LEXSCR,,"LEXOUT","LEXMSG")
"RTN","LEX2086",133,0)
 S LEXPI=$G(LEXOUT("DILIST",2,1)) K LEXOUT,LEXMSG Q:+LEXPI'>0 ""  Q:'$D(@("^DIC(9.4,"_LEXPI_",22)")) ""
"RTN","LEX2086",134,0)
 K DA S DA(1)=LEXPI S LEXDA=$$IENS^DILF(.DA)
"RTN","LEX2086",135,0)
 D FIND^DIC(9.49,LEXDA,".01;1I;2I","O",LEXVR,10,"B",,,"LEXOUT","LEXMSG")
"RTN","LEX2086",136,0)
 S LEXVD=$G(LEXOUT("DILIST","ID",1,2)) I $E(LEXVD,1,7)?7N&(+LEXPN'>0) D  Q X
"RTN","LEX2086",137,0)
 . S X=$E(LEXVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(LEXVD,1,7),"5DZ"),"@"," ")
"RTN","LEX2086",138,0)
 S:$E(LEXVD,1,7)'?7N LEXVD=$G(LEXOUT("DILIST","ID",1,1)) I $E(LEXVD,1,7)?7N&(+LEXPN'>0) D  Q X
"RTN","LEX2086",139,0)
 . S X=$E(LEXVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(LEXVD,1,7),"5DZ"),"@"," ")
"RTN","LEX2086",140,0)
 Q:+LEXPN'>0 ""  S LEXVI=$G(LEXOUT("DILIST",2,1)) K LEXOUT,LEXMSG
"RTN","LEX2086",141,0)
 Q:+LEXVI'>0 ""  Q:'$D(@("^DIC(9.4,"_LEXPI_",22,"_LEXVI_",""PAH"")")) ""
"RTN","LEX2086",142,0)
 K DA S DA(2)=LEXPI,DA(1)=LEXVI S LEXDA=$$IENS^DILF(.DA)
"RTN","LEX2086",143,0)
 S LEXSCR="I $G(^DIC(9.4,"_LEXPI_",22,"_LEXVI_",""PAH"",+($G(Y)),0))[""SEQ #"""
"RTN","LEX2086",144,0)
 D FIND^DIC(9.4901,LEXDA,".01;.02I",,LEXPN,10,"B",LEXSCR,,"LEXOUT","LEXMSG")
"RTN","LEX2086",145,0)
 S LEXI=$G(LEXOUT("DILIST","ID",1,.02)) I '$L(LEXI) D
"RTN","LEX2086",146,0)
 . S LEXSCR="" D FIND^DIC(9.4901,LEXDA,".01;.02I",,LEXPN,10,"B",LEXSCR,,"LEXOUT","LEXMSG")
"RTN","LEX2086",147,0)
 . S LEXI=$G(LEXOUT("DILIST","ID",1,.02))
"RTN","LEX2086",148,0)
 Q:'$L(LEXI) ""  Q:$P(LEXI,".",1)'?7N ""  S LEXE=$TR($$FMTE^XLFDT(LEXI,"5DZ"),"@"," ")
"RTN","LEX2086",149,0)
 Q:'$L(LEXE) ""  S X=LEXI_"^"_LEXE
"RTN","LEX2086",150,0)
 Q X
"RTN","LEX2086",151,0)
CHK ;   Check the Checksum
"RTN","LEX2086",152,0)
 D CS I $D(LEXE) D ED Q
"RTN","LEX2086",153,0)
 D BM("  OK"),M(" ")
"RTN","LEX2086",154,0)
 Q
"RTN","LEX2086",155,0)
CS ;   Checksum for import global
"RTN","LEX2086",156,0)
 K LEXE D BM("   Running checksum routine on the ^LEXM import global, please wait")
"RTN","LEX2086",157,0)
 N LEXCK,LEXND,LEXV S LEXCK=+($G(^LEXM(0,"CHECKSUM")))
"RTN","LEX2086",158,0)
 S LEXND=+($G(^LEXM(0,"NODES"))),LEXV=+($$VC(LEXCK,LEXND))
"RTN","LEX2086",159,0)
 D M(" ") D:LEXV>0 M("     Checksum is ok"),M(" ")
"RTN","LEX2086",160,0)
 D:LEXV=0 CM D:LEXV=-1 CW D:LEXV=-2 CU D:LEXV=-3 CF
"RTN","LEX2086",161,0)
 Q
"RTN","LEX2086",162,0)
VC(X,Y) ;   Verify Checksum for import global
"RTN","LEX2086",163,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR Q:'$D(^LEXM) 0
"RTN","LEX2086",164,0)
 D IMP I $G(^LEXM(0,"BUILD"))'=$G(LEXBUILD) Q -1
"RTN","LEX2086",165,0)
 N LEXCK,LEXND,LEXCNT,LEXLC,LEXL,LEXS,LEXNC,LEXD,LEXN,LEXC,LEXGCS,LEXP,LEXT
"RTN","LEX2086",166,0)
 S LEXCK=+($G(X)),LEXND=+($G(Y))
"RTN","LEX2086",167,0)
 Q:LEXCK'>0!(LEXND'>0) -2
"RTN","LEX2086",168,0)
 S LEXL=64,(LEXCNT,LEXLC)=0,LEXS=(+(LEXND\LEXL))
"RTN","LEX2086",169,0)
 S:LEXS=0 LEXS=1 D:+($O(^LEXM(0)))>0 M("")
"RTN","LEX2086",170,0)
 S (LEXC,LEXN)="^LEXM",(LEXNC,LEXGCS)=0 W "   "
"RTN","LEX2086",171,0)
 F  S LEXN=$Q(@LEXN) Q:LEXN=""!(LEXN'[LEXC)  D
"RTN","LEX2086",172,0)
 . Q:LEXN="^LEXM(0,""CHECKSUM"")"
"RTN","LEX2086",173,0)
 . Q:LEXN="^LEXM(0,""NODES"")"
"RTN","LEX2086",174,0)
 . S LEXCNT=LEXCNT+1
"RTN","LEX2086",175,0)
 . I LEXCNT'<LEXS S LEXLC=LEXLC+1 W:LEXLC'>LEXL "." S LEXCNT=0
"RTN","LEX2086",176,0)
 . S LEXNC=LEXNC+1,LEXD=@LEXN,LEXT=LEXN_"="_LEXD
"RTN","LEX2086",177,0)
 . F LEXP=1:1:$L(LEXT) S LEXGCS=$A(LEXT,LEXP)*LEXP+LEXGCS
"RTN","LEX2086",178,0)
 Q:LEXNC'=LEXND -3
"RTN","LEX2086",179,0)
 Q:LEXGCS'=LEXCK -3
"RTN","LEX2086",180,0)
 Q 1
"RTN","LEX2086",181,0)
SY(X) ;   Check System variables
"RTN","LEX2086",182,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","LEX2086",183,0)
 Q 1
"RTN","LEX2086",184,0)
UR(X) ;   Check User variables
"RTN","LEX2086",185,0)
 N XPDABORT,XPDENV,XPDNOQUE,XPDDIQ,XPDQUIT Q:'$L($G(DUZ(0))) 0
"RTN","LEX2086",186,0)
 Q:+($G(DUZ))=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","LEX2086",187,0)
 Q 1
"RTN","LEX2086",188,0)
CPD(X) ;   Check Current Patched Data is installed
"RTN","LEX2086",189,0)
 N INS S INS=1
"RTN","LEX2086",190,0)
 Q 0
"RTN","LEX2086",191,0)
 ;               
"RTN","LEX2086",192,0)
 ; Error messages
"RTN","LEX2086",193,0)
 ;
"RTN","LEX2086",194,0)
CM ;   Missing ^LEXM
"RTN","LEX2086",195,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET(""),ET("Missing import global ^LEXM.") D CO
"RTN","LEX2086",196,0)
 Q
"RTN","LEX2086",197,0)
CW ;   Wrong ^LEXM
"RTN","LEX2086",198,0)
 N LEXB,LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP S LEXB=$G(^LEXM(0,"BUILD")) D ET("")
"RTN","LEX2086",199,0)
 I $L(LEXBUILD),$L(LEXB),LEXBUILD'=LEXB D  Q
"RTN","LEX2086",200,0)
 . D ET(("Incorrect import global ^LEXM found ("_LEXB_" global).")) D CKO
"RTN","LEX2086",201,0)
 D ET("Incorrect import global ^LEXM found.") D CKO
"RTN","LEX2086",202,0)
 Q
"RTN","LEX2086",203,0)
CU ;   Unable to verify
"RTN","LEX2086",204,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET(""),ET("Unable to verify checksum for import global ^LEXM (possibly corrupt).") D CKO
"RTN","LEX2086",205,0)
 Q
"RTN","LEX2086",206,0)
CF ;   Failed checksum
"RTN","LEX2086",207,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET("") D ET("Import global ^LEXM failed checksum.") D CKO
"RTN","LEX2086",208,0)
 Q
"RTN","LEX2086",209,0)
CO ;   Obtain new global
"RTN","LEX2086",210,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP
"RTN","LEX2086",211,0)
 D ET(""),ET("    Please obtain a copy of the import global ^LEXM contained in the ")
"RTN","LEX2086",212,0)
 D ET(("    global host file "_LEXIGHF_" before continuing with the "_LEXBUILD))
"RTN","LEX2086",213,0)
 D ET(("    installation."))
"RTN","LEX2086",214,0)
 Q
"RTN","LEX2086",215,0)
TEST ;
"RTN","LEX2086",216,0)
 D CW,ED
"RTN","LEX2086",217,0)
 Q
"RTN","LEX2086",218,0)
CKO ;   Kill and Obtain new global
"RTN","LEX2086",219,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR D IMP D ET("")
"RTN","LEX2086",220,0)
 D ET(("    Use the entry point KALL^LEXXGI2 to safely KILL the existing "))
"RTN","LEX2086",221,0)
 D ET(("    import global ^LEXM from your system.  Then obtain a new copy"))
"RTN","LEX2086",222,0)
 D ET(("    of ^LEXM contained in the global host file "_LEXIGHF_" before"))
"RTN","LEX2086",223,0)
 D ET(("    continuing with the "_LEXBUILD_" installation."))
"RTN","LEX2086",224,0)
 Q
"RTN","LEX2086",225,0)
ET(X) ;   Error Text
"RTN","LEX2086",226,0)
 N LEXI S LEXI=+($G(LEXE(0))),LEXI=LEXI+1,LEXE(LEXI)="    "_$G(X),LEXE(0)=LEXI
"RTN","LEX2086",227,0)
 Q
"RTN","LEX2086",228,0)
ED ;   Error Display
"RTN","LEX2086",229,0)
 N LEXI S LEXI=0 F  S LEXI=$O(LEXE(LEXI)) Q:+LEXI=0  D M(LEXE(LEXI))
"RTN","LEX2086",230,0)
 D M(" ") K LEXE Q
"RTN","LEX2086",231,0)
 ;                   
"RTN","LEX2086",232,0)
 ; Miscellaneous
"RTN","LEX2086",233,0)
 ;
"RTN","LEX2086",234,0)
NOTDEF(IEN) ;   Check to see if user is defined
"RTN","LEX2086",235,0)
 N DA,DR,DIQ,LEX,DIC S DA=IEN,DR=.01,DIC=200,DIQ="LEX" D EN^DIQ1 Q '$D(LEX)
"RTN","LEX2086",236,0)
OK ;   Environment is OK
"RTN","LEX2086",237,0)
 N LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR,LEXT
"RTN","LEX2086",238,0)
 D IMP S LEXT="  Environment "_$S($L(LEXBUILD):("for patch/build "_LEXBUILD_" "),1:"")_"is ok"
"RTN","LEX2086",239,0)
 D BM(LEXT),M(" ")
"RTN","LEX2086",240,0)
 Q
"RTN","LEX2086",241,0)
BM(X) ;   Blank Line with Message
"RTN","LEX2086",242,0)
 S X=$G(X) S:$E(X,1)'=" " X=" "_X D BMES^XPDUTL(X) Q
"RTN","LEX2086",243,0)
M(X) ;   Message
"RTN","LEX2086",244,0)
 S X=$G(X) S:$E(X,1)'=" " X=" "_X D MES^XPDUTL(X) Q
"RTN","LEX2086",245,0)
TRIM(X) ;   Trim Spaces
"RTN","LEX2086",246,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEX2086",247,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEX2086",248,0)
 Q X
"RTN","LEX2086",249,0)
IMP ;   Import names
"RTN","LEX2086",250,0)
 S LEXPTYPE="Code Set Update"
"RTN","LEX2086",251,0)
 S LEXPTYPE="ICD-10 Data Dictionary/API Changes"
"RTN","LEX2086",252,0)
 ;     Revision
"RTN","LEX2086",253,0)
 S LEXLREV=86
"RTN","LEX2086",254,0)
 ;     Required Builds Array
"RTN","LEX2086",255,0)
 ;        LEX(1)=build SEQ #^released date^subject
"RTN","LEX2086",256,0)
 ;        LEX(n)=build SEQ #^released date^subject
"RTN","LEX2086",257,0)
 S LEXREQP(1)="LEX*2.0*97 SEQ #88^3141103^Code Set FY11 1st Qtr"
"RTN","LEX2086",258,0)
 ;     This Build Name
"RTN","LEX2086",259,0)
 S LEXBUILD="LEX*2.0*86"
"RTN","LEX2086",260,0)
 ;     Fiscal Year
"RTN","LEX2086",261,0)
 S LEXFY=""
"RTN","LEX2086",262,0)
 ;     Quarter
"RTN","LEX2086",263,0)
 S LEXQTR=""
"RTN","LEX2086",264,0)
 Q
"RTN","LEX2086",265,0)
EF ;   Exported Files
"RTN","LEX2086",266,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2086",267,0)
 ;;^LEXT(757.2);^LEXT(757.2);Lexicon Subsets/Defaults;757.2
"RTN","LEX2086",268,0)
 ;;
"RTN","LEX2086",269,0)
 ;;^ICPT(0);^ICPT(;CPT/HCPCS;81
"RTN","LEX2086",270,0)
 ;;^DIC(81.1,0);^DIC(81.1);CPT Category;81.1
"RTN","LEX2086",271,0)
 ;;^DIC(81.2,0);^DIC(81.2);CPT Copyright;81.2
"RTN","LEX2086",272,0)
 ;;^DIC(81.3,0);^DIC(81.3);CPT Modifier;81.3
"RTN","LEX2086",273,0)
 ;;
"RTN","LEX2086",274,0)
 ;;^ICD9(0);^ICD9(;ICD Diagnosis;80
"RTN","LEX2086",275,0)
 ;;^ICD0(0);^ICD0(;ICD Operation/Procedure;80.1
"RTN","LEX2086",276,0)
 ;;^ICDS(0);^ICDS(;ICD Coding System;80.4
"RTN","LEX2086",277,0)
 ;;^ICD(0);^ICD(;DRG Grouper;80.2
"RTN","LEX2086",278,0)
 ;;^ICM(0);^ICM(;MAJOR DIAGNOSTIC CATEGORY;80.3
"RTN","LEX2086",279,0)
 Q
"RTN","LEX2086",280,0)
GD ;   Global Data
"RTN","LEX2086",281,0)
 ;;^ICD9(0);^ICD9(;ICD Diagnosis;80
"RTN","LEX2086",282,0)
 ;;^ICD0(0);^ICD0(;ICD Operation/Procedure;80.1
"RTN","LEX2086",283,0)
 ;;^ICDS(0);^ICDS(;ICD Coding System;80.4
"RTN","LEX2086",284,0)
 ;;^LEX(757.01);^LEX(*;Lexicon;757-757.41
"RTN","LEX2086P")
0^2^B47694609
"RTN","LEX2086P",1,0)
LEX2086P ;ISL/KER - LEX*2.0*86 Pre/Post Install ;12/19/2014
"RTN","LEX2086P",2,0)
 ;;2.0;LEXICON UTILITY;**86**;Sep 23, 1996;Build 1
"RTN","LEX2086P",3,0)
 ;               
"RTN","LEX2086P",4,0)
 ; Global Variables 
"RTN","LEX2086P",5,0)
 ;    ^LEXM(              N/A
"RTN","LEX2086P",6,0)
 ;               
"RTN","LEX2086P",7,0)
 ; External References
"RTN","LEX2086P",8,0)
 ;    DELIX^DDMOD         ICR   2916
"RTN","LEX2086P",9,0)
 ;    ^DIC                ICR  10006
"RTN","LEX2086P",10,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEX2086P",11,0)
 ;    $$PKGPAT^XPDIP      ICR   2067
"RTN","LEX2086P",12,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEX2086P",13,0)
 ;    
"RTN","LEX2086P",14,0)
 Q
"RTN","LEX2086P",15,0)
POST ; Post-Install
"RTN","LEX2086P",16,0)
 ;            
"RTN","LEX2086P",17,0)
 ; From IMP in the Environment Check
"RTN","LEX2086P",18,0)
 ;            
"RTN","LEX2086P",19,0)
 ;      LEXBUILD   Build Name - LEX*2.0*nn
"RTN","LEX2086P",20,0)
 ;      LEXPTYPE   Patch Type - Remedy or Quarterly
"RTN","LEX2086P",21,0)
 ;      LEXFY      Fiscal Year - FYnn
"RTN","LEX2086P",22,0)
 ;      LEXQTR     Quarter - 1st, 2nd, 3rd, or 4th
"RTN","LEX2086P",23,0)
 ;      LEXLREV    Revision - nn
"RTN","LEX2086P",24,0)
 ;      LEXREQP    Required Builds - build;build;build
"RTN","LEX2086P",25,0)
 ;      
"RTN","LEX2086P",26,0)
 ; Note:  The section IPL (Informational Patch List) must
"RTN","LEX2086P",27,0)
 ;        be updated with each patch
"RTN","LEX2086P",28,0)
 ;            
"RTN","LEX2086P",29,0)
 N LEXEDT,LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR,LEXB,LEXCD,LEXSTR,LEXLAST,LEXOK,X,Y S LEXOK=0 D IMP
"RTN","LEX2086P",30,0)
 S LEXEDT=$G(^LEXM(0,"CREATED")) D:LEXOK>0 LOAD,CON,IP,UPD,NOT
"RTN","LEX2086P",31,0)
 Q
"RTN","LEX2086P",32,0)
LOAD ; Load Data - N/A for LEX*2.0*86
"RTN","LEX2086P",33,0)
 ;             
"RTN","LEX2086P",34,0)
 ;      LEXSHORT   Send Short Message
"RTN","LEX2086P",35,0)
 ;      LEXMSG     Flag to send Message
"RTN","LEX2086P",36,0)
 ;      LEXSUBH    Alternate Message Sub-Header      
"RTN","LEX2086P",37,0)
 Q
"RTN","LEX2086P",38,0)
 N LEXSHORT,LEXMSG S LEXSHORT="",LEXMSG=""
"RTN","LEX2086P",39,0)
 S LEXSTR=$G(LEXPTYPE) S:$L($G(LEXFY))&($L($G(LEXQTR))) LEXSTR=LEXSTR_" for "_$G(LEXFY)_" "_$G(LEXQTR)_" Quarter"
"RTN","LEX2086P",40,0)
 S U="^",LEXB=$G(^LEXM(0,"BUILD")) Q:LEXB=""  Q:$G(LEXBUILD)=""
"RTN","LEX2086P",41,0)
 D:LEXB=LEXBUILD EN^LEXXGI
"RTN","LEX2086P",42,0)
LQ ; Load Quit
"RTN","LEX2086P",43,0)
 D KLEXM
"RTN","LEX2086P",44,0)
 Q
"RTN","LEX2086P",45,0)
 ;             
"RTN","LEX2086P",46,0)
KLEXM ; Subscripted Kill of ^LEXM
"RTN","LEX2086P",47,0)
 H 2 N DA S DA=0 F  S DA=$O(^LEXM(DA)) Q:+DA=0  K ^LEXM(DA)
"RTN","LEX2086P",48,0)
 N LEX S LEX=$G(^LEXM(0,"PRO")) K ^LEXM(0)
"RTN","LEX2086P",49,0)
 Q
"RTN","LEX2086P",50,0)
 ;
"RTN","LEX2086P",51,0)
IP ; Informational Patches - N/A for LEX*2.0*86
"RTN","LEX2086P",52,0)
 Q
"RTN","LEX2086P",53,0)
 N LEX,LEXP,LEXPS,LEXSQ,LEXT,LEXI,LEXE,LEXX,LEXC,LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR,LEXSUB,LEXOK D IMP S LEXSUB=""
"RTN","LEX2086P",54,0)
 I $G(LEXPTYPE)="Code Set Update",$G(LEXFY)["FY",$L($G(LEXQTR)) S LEXSUB="Code Set "_LEXFY_" "_LEXQTR_" Qtr Update"
"RTN","LEX2086P",55,0)
 S LEXC=0 F LEXI=1:1 D  Q:'$L(LEXX)
"RTN","LEX2086P",56,0)
 . S LEXX="" S LEXE="S LEXX=$T(IPL+"_LEXI_")" X LEXE S:'$L($TR($G(LEXX),";","")) LEXX="" Q:'$L(LEXX)  S LEXPS=$P(LEXX,";;",2) S:$L(LEXPS,"*")=3 LEXC=LEXC+1
"RTN","LEX2086P",57,0)
 I LEXC>0 S LEXT=" Informational Patch"_$S(+($G(LEXC))>1:"es",1:"") S:$L(LEXSUB) LEXT=LEXT_" for the "_LEXSUB S LEXT=LEXT_":" D MES^XPDUTL(LEXT)
"RTN","LEX2086P",58,0)
 S LEXC=0 F LEXI=1:1 D  Q:'$L(LEXX)
"RTN","LEX2086P",59,0)
 . S LEXX="" S LEXE="S LEXX=$T(IPL+"_LEXI_")" X LEXE S:'$L($TR($G(LEXX),";","")) LEXX="" Q:'$L(LEXX)  S LEXPS=$P(LEXX,";;",2) S:'$L(LEXPS) LEXX="" Q:'$L(LEXX)
"RTN","LEX2086P",60,0)
 . S LEXSQ=+($P(LEXX,";;",3)) S:+LEXSQ>0 LEXPS=LEXPS_" SEQ #"_LEXSQ S LEXC=LEXC+1 D:LEXC=1 MES^XPDUTL(" ")
"RTN","LEX2086P",61,0)
 . W:$D(LEXTEST) !,?5,LEXPS D:'$D(LEXTEST) IPU(LEXPS)
"RTN","LEX2086P",62,0)
 D:LEXC>0 MES^XPDUTL(" ") N LEXTEST
"RTN","LEX2086P",63,0)
 Q
"RTN","LEX2086P",64,0)
IPU(X) ;   Patch Update
"RTN","LEX2086P",65,0)
 N LEXID,LEXOP,LEXPC,LEXPK,LEXPKI,LEXPN,LEXPTI,LEXSQ,LEXT,LEXVR,LEXVRI,LEXAR
"RTN","LEX2086P",66,0)
 S LEXPC=$G(X),LEXSQ=$P(LEXPC," ",2,299),LEXID=$P(LEXPC," ",1),LEXOP=""
"RTN","LEX2086P",67,0)
 S LEXPK=$S($P(LEXPC,"*",1)="ICD":"DRG GROUPER",$P(LEXPC,"*",1)="ICPT":"CPT/HCPCS CODES",$P(LEXPC,"*",1)="LEX":"LEXICON UTILITY",1:"") Q:'$L(LEXPK)
"RTN","LEX2086P",68,0)
 S LEXPKI=$$PIEN(LEXPK) Q:+LEXPKI'>0  S LEXVR=$P(LEXPC,"*",2) Q:'$L(LEXVR)  Q:LEXVR'["."  S LEXPN=$P(LEXPC,"*",3) Q:'$L(LEXPN)  Q:+LEXPN'>0
"RTN","LEX2086P",69,0)
 S LEXAR=LEXPN_"^"_$$NOW^XLFDT_"^"_$G(DUZ)
"RTN","LEX2086P",70,0)
 I $L($G(LEXBUILD)) S LEXOP=$$PKGPAT^XPDIP(LEXPKI,LEXVR,.LEXAR)
"RTN","LEX2086P",71,0)
 S LEXVRI=$P(LEXOP,"^",1),LEXPTI=$P(LEXOP,"^",2)
"RTN","LEX2086P",72,0)
 S LEXT="   "_LEXID,LEXT=LEXT_$J(" ",(17-$L(LEXT)))_LEXSQ,LEXT=LEXT_$J(" ",(28-$L(LEXT)))_LEXPK
"RTN","LEX2086P",73,0)
 I $L(LEXOP),LEXPTI>0 S LEXT=LEXT_$J(" ",(46-$L(LEXT)))_"Patch History updated" D MES^XPDUTL(LEXT)
"RTN","LEX2086P",74,0)
 I $L(LEXOP),LEXPTI'>0 S LEXT=LEXT_$J(" ",(46-$L(LEXT)))_"Patch History not updated" D MES^XPDUTL(LEXT)
"RTN","LEX2086P",75,0)
 I '$L(LEXOP) D MES^XPDUTL(LEXT)
"RTN","LEX2086P",76,0)
 Q
"RTN","LEX2086P",77,0)
IPL ;   Patch List  ;;Patch;;Sequence #
"RTN","LEX2086P",78,0)
 ;;;;;;
"RTN","LEX2086P",79,0)
PRE ; Pre-Install              (N/A for this patch)
"RTN","LEX2086P",80,0)
 Q
"RTN","LEX2086P",81,0)
NOT ; Notify
"RTN","LEX2086P",82,0)
 N LEX,LEXP,LEXPS,LEXSQ,LEXT,LEXI,LEXE,LEXX,LEXC,LEXPTYPE,LEXLREV,LEXREQP,LEXBUILD,LEXIGHF,LEXFY,LEXQTR,LEXSUB,LEXSHORT,LEXOK,LEXSUBH
"RTN","LEX2086P",83,0)
 D IMP H 1 S (LEXIGHF,LEXSHORT)="",LEXSUBH="ICD-10 API Fixes" D POST^LEXXFI
"RTN","LEX2086P",84,0)
 Q
"RTN","LEX2086P",85,0)
CON ; Conversion of data
"RTN","LEX2086P",86,0)
 N ND S ND="^DD(757.333,1,1,2,0)" W:$D(@ND) !," Deleting STATUS field TRIGGER" D:$D(@ND) DELIX^DDMOD(757.333,1,2)
"RTN","LEX2086P",87,0)
 Q
"RTN","LEX2086P",88,0)
UPD ; Update Data
"RTN","LEX2086P",89,0)
 D UPD1,UPD2
"RTN","LEX2086P",90,0)
 Q
"RTN","LEX2086P",91,0)
UPD1 ; Update Clinical Reminders Taxonomy
"RTN","LEX2086P",92,0)
 N DA,DIK S DA=28,DIK="^LEXT(757.2," I $D(^LEXT(757.2,DA)) D ^DIK
"RTN","LEX2086P",93,0)
 S DA=28,^LEXT(757.2,DA,0)="Clinical Reminders Taxonomy"
"RTN","LEX2086P",94,0)
 S ^LEXT(757.2,DA,1)="^LEX(757.01,"
"RTN","LEX2086P",95,0)
 S ^LEXT(757.2,DA,2)="XTLK^LEXHLP"
"RTN","LEX2086P",96,0)
 S ^LEXT(757.2,DA,3)="XTLK^LEXPRNT"
"RTN","LEX2086P",97,0)
 S ^LEXT(757.2,DA,4)="ICD/ICP/10D/10P/CPT/CPC/SCT"
"RTN","LEX2086P",98,0)
 S ^LEXT(757.2,DA,5)="CR1^WRD^0^811.2^PXRM^^1"
"RTN","LEX2086P",99,0)
 S ^LEXT(757.2,DA,7)="ICD/ICP/10D/10P/CPT/CPC/SCT"
"RTN","LEX2086P",100,0)
 S ^LEXT(757.2,DA,100,0)="^757.22^2^2^3141001^^^^"
"RTN","LEX2086P",101,0)
 S ^LEXT(757.2,DA,100,1,0)="This subset contains the entire Lexicon (unfiltered)"
"RTN","LEX2086P",102,0)
 S ^LEXT(757.2,DA,100,2,0)="and user defaults are not allowed."
"RTN","LEX2086P",103,0)
 S DA=28,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2086P",104,0)
 N DA,DIK S DA=14,DIK="^LEX(757.31," I $D(^LEX(757.31,DA)) D ^DIK
"RTN","LEX2086P",105,0)
 S DA=14,^LEX(757.31,DA,0)="Clinical Reminders Taxonomy^C"
"RTN","LEX2086P",106,0)
 S ^LEX(757.31,DA,1)="ICD/ICP/10D/10P/CPT/CPC/SCT"
"RTN","LEX2086P",107,0)
 S ^LEX(757.31,DA,2,0)="^^5^5^2960724^^^^"
"RTN","LEX2086P",108,0)
 S ^LEX(757.31,DA,2,1,0)="Displays classification codes from the International"
"RTN","LEX2086P",109,0)
 S ^LEX(757.31,DA,2,2,0)="Classification of Diseases/Diagnosis (ICD), Current"
"RTN","LEX2086P",110,0)
 S ^LEX(757.31,DA,2,3,0)="Procedure Terminology (CPT), Healthcare Common Procedure"
"RTN","LEX2086P",111,0)
 S ^LEX(757.31,DA,2,4,0)="Coding System  (HCPCS), Systematized Nomenclature of"
"RTN","LEX2086P",112,0)
 S ^LEX(757.31,DA,2,5,0)="Medicine, Clinical Terms (SNOMED CT)."
"RTN","LEX2086P",113,0)
 S DA=14,DIK="^LEX(757.31," D IX1^DIK
"RTN","LEX2086P",114,0)
 K ^LEX(757.2,29)
"RTN","LEX2086P",115,0)
 Q
"RTN","LEX2086P",116,0)
UPD2 ; Update Title 38 Service Connected
"RTN","LEX2086P",117,0)
 S DA=29,DIK="^LEXT(757.2," I $D(^LEXT(757.2,DA)) D ^DIK
"RTN","LEX2086P",118,0)
 S DA=29,^LEXT(757.2,DA,0)="Title 38 Service Connected"
"RTN","LEX2086P",119,0)
 S ^LEXT(757.2,DA,1)="^LEX(757.01,"
"RTN","LEX2086P",120,0)
 S ^LEXT(757.2,DA,2)="XTLK^LEXHLP"
"RTN","LEX2086P",121,0)
 S ^LEXT(757.2,DA,3)="XTLK^LEXPRNT"
"RTN","LEX2086P",122,0)
 S ^LEXT(757.2,DA,4)="SCC"
"RTN","LEX2086P",123,0)
 S ^LEXT(757.2,DA,5)="SCC^WRD^0^^^^1"
"RTN","LEX2086P",124,0)
 S ^LEXT(757.2,DA,6)="I $$SO^LEXU(Y,""SCC"",+($G(LEXVDT)))"
"RTN","LEX2086P",125,0)
 S ^LEXT(757.2,DA,7)="SCC"
"RTN","LEX2086P",126,0)
 S ^LEXT(757.2,DA,100,0)="^757.22^4^4^3141001^^^^"
"RTN","LEX2086P",127,0)
 S ^LEXT(757.2,DA,100,1,0)="This subset is artificially created through the use of a "
"RTN","LEX2086P",128,0)
 S ^LEXT(757.2,DA,100,2,0)="filter (not a physical subset), and contains only those "
"RTN","LEX2086P",129,0)
 S ^LEXT(757.2,DA,100,3,0)="expressions which are linked to an Title 38 Service "
"RTN","LEX2086P",130,0)
 S ^LEXT(757.2,DA,100,4,0)="Conected disability code."
"RTN","LEX2086P",131,0)
 S DA=29,DIK="^LEXT(757.2," D IX1^DIK
"RTN","LEX2086P",132,0)
 S DA=15,DIK="^LEX(757.31," I $D(^LEXT(757.2,DA)) D ^DIK
"RTN","LEX2086P",133,0)
 S DA=15,^LEX(757.31,DA,0)="Title 38 Service Connected^C"
"RTN","LEX2086P",134,0)
 S ^LEX(757.31,DA,1)="SCC"
"RTN","LEX2086P",135,0)
 S ^LEX(757.31,DA,2,0)="^^1^1^3141001^^^^"
"RTN","LEX2086P",136,0)
 S ^LEX(757.31,DA,2,1,0)="Displays Title 38 disability Service Connected Codes."
"RTN","LEX2086P",137,0)
 S DA=15,DIK="^LEX(757.31," D IX1^DIK
"RTN","LEX2086P",138,0)
 Q
"RTN","LEX2086P",139,0)
 ;            
"RTN","LEX2086P",140,0)
 ; Miscellaneous
"RTN","LEX2086P",141,0)
PIEN(X) ;   Package IEN
"RTN","LEX2086P",142,0)
 N DIC,DTOUT,DTOUT,Y S X=$G(X),DIC="^DIC(9.4,",DIC(0)="B" D ^DIC S X=+Y
"RTN","LEX2086P",143,0)
 Q X
"RTN","LEX2086P",144,0)
IMP ;   Call IMP in Environment Check
"RTN","LEX2086P",145,0)
 K LEXBUILD,LEXFY,LEXIGHF,LEXLREV,LEXPTYPE,LEXQTR,LEXREQP N LEXF
"RTN","LEX2086P",146,0)
 S LEXF=$P($T(+1)," ",1) S:$E(LEXF,$L(LEXF))="P" LEXF=$E(LEXF,1,($L(LEXF)-1)) Q:'$L(LEXF)
"RTN","LEX2086P",147,0)
 S LEXF="IMP^"_LEXF Q:'$L($T(@LEXF))  D @LEXF S:$L(LEXBUILD) LEXOK=1
"RTN","LEX2086P",148,0)
 Q
"RTN","LEXA")
0^5^B60933739
"RTN","LEXA",1,0)
LEXA ;ISL/KER - Look-up (Silent) ;12/19/2014
"RTN","LEXA",2,0)
 ;;2.0;LEXICON UTILITY;**3,4,6,19,25,36,38,43,55,73,80,86**;Sep 23, 1996;Build 1
"RTN","LEXA",3,0)
 ;               
"RTN","LEXA",4,0)
 ; Global Variables
"RTN","LEXA",5,0)
 ;    ^LEX(757.13         N/A
"RTN","LEXA",6,0)
 ;    ^LEX(757.14         N/A
"RTN","LEXA",7,0)
 ;    ^LEX(757.41         N/A
"RTN","LEXA",8,0)
 ;    ^TMP("LEXFND")      SACC 2.3.2.5.1
"RTN","LEXA",9,0)
 ;    ^TMP("LEXHIT")      SACC 2.3.2.5.1
"RTN","LEXA",10,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXA",11,0)
 ;               
"RTN","LEXA",12,0)
 ; External References
"RTN","LEXA",13,0)
 ;    ^DIM                ICR  10016
"RTN","LEXA",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXA",15,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXA",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXA",17,0)
 ;               
"RTN","LEXA",18,0)
LOOK(LEXX,LEXAP,LEXLL,LEXSUB,LEXCDT,LEXXSR,LEXXCT) ; Main Lexicon Lookup
"RTN","LEXA",19,0)
 ;
"RTN","LEXA",20,0)
 ; Input 
"RTN","LEXA",21,0)
 ; 
"RTN","LEXA",22,0)
 ;   Parameters
"RTN","LEXA",23,0)
 ;     LEXX      User Input
"RTN","LEXA",24,0)
 ;     LEXAP     Application
"RTN","LEXA",25,0)
 ;     LEXLL     Selection List Length
"RTN","LEXA",26,0)
 ;     LEXSUB    Mode/Subset (file 757.2)
"RTN","LEXA",27,0)
 ;     LEXVDT    Date to use for retrieving/displaying codes
"RTN","LEXA",28,0)
 ;     LEXXSR    Source (file 757.14)
"RTN","LEXA",29,0)
 ;     LEXXCT    Category (file 757.13)
"RTN","LEXA",30,0)
 ;                   
"RTN","LEXA",31,0)
 ;   Optional Global search parameters
"RTN","LEXA",32,0)
 ;     ^TMP("LEXSCH",$J,PAR)=VALUE
"RTN","LEXA",33,0)
 ;     
"RTN","LEXA",34,0)
 ; Output
"RTN","LEXA",35,0)
 ;     
"RTN","LEXA",36,0)
 ;   Global Arrays
"RTN","LEXA",37,0)
 ;     Expressions found ^TMP("LEXFND",$J,FQ,IEN)=DT
"RTN","LEXA",38,0)
 ;     Review List       ^TMP("LEXHITS",$J,#)=IEN^DT
"RTN","LEXA",39,0)
 ;     
"RTN","LEXA",40,0)
 ;   Local Array
"RTN","LEXA",41,0)
 ;     Display List      LEX("LIST",#)
"RTN","LEXA",42,0)
 ;                   
"RTN","LEXA",43,0)
 ;                       LEX("LIST",0)=LAST^TOTAL
"RTN","LEXA",44,0)
 ;                       LEX("LIST",#)=IEN^DT
"RTN","LEXA",45,0)
 ; 
"RTN","LEXA",46,0)
 S LEXCDT=$P($G(LEXCDT),".",1) S:LEXCDT?7N LEXVDT=LEXCDT D VDT^LEXU K DIERR,LEX
"RTN","LEXA",47,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEXA",48,0)
 K ^TMP("LEXSCH",$J,"EXC"),^TMP("LEXSCH",$J,"EXM"),^TMP("LEXSCH",$J,"NUM")
"RTN","LEXA",49,0)
 K:+$G(^TMP("LEXSCH",$J,"ADF",0))=0 ^TMP("LEXSCH",$J)
"RTN","LEXA",50,0)
 I $D(DIC(0)) D
"RTN","LEXA",51,0)
 .S:DIC(0)["L" DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2)
"RTN","LEXA",52,0)
 .S:DIC(0)["I" DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"I",2)
"RTN","LEXA",53,0)
 N LEXXNAR S LEXQ=1,LEXXNAR=$G(LEXX),LEXX=$$UP^XLFSTR($G(LEXX))
"RTN","LEXA",54,0)
 I LEXX=""!(LEXX["^") D EN^LEXAR("^",$G(LEXVDT)) K LEXAP D EXIT Q
"RTN","LEXA",55,0)
 N LEXSC S LEXSC=$$CAT($G(LEXXCT),$G(LEXXSR))
"RTN","LEXA",56,0)
 N LEXXCT,LEXXSR S:+($P(LEXSC,"^",1))>0 LEXXCT=+($P(LEXSC,"^",1)) S:+($P(LEXSC,"^",2))>0 LEXXSR=+($P(LEXSC,"^",2))
"RTN","LEXA",57,0)
 S LEXAP=$$UP^XLFSTR($G(LEXAP))
"RTN","LEXA",58,0)
 S LEXLL=+$G(LEXLL)
"RTN","LEXA",59,0)
 S LEXSUB=$G(LEXSUB)
"RTN","LEXA",60,0)
 S ^TMP("LEXSCH",$J,"APP",0)=+$$AP^LEXDFN2($G(LEXAP))
"RTN","LEXA",61,0)
 S:^TMP("LEXSCH",$J,"APP",0)=0 ^TMP("LEXSCH",$J,"APP",0)=1
"RTN","LEXA",62,0)
 S:$L($G(LEXDISP)) ^TMP("LEXSCH",$J,"DIS",0)=$G(LEXDISP)
"RTN","LEXA",63,0)
 S:LEXSUB="" LEXSUB=^TMP("LEXSCH",$J,"APP",0)
"RTN","LEXA",64,0)
 S:$L($G(DIC("S"))) ^TMP("LEXSCH",$J,"FIL",0)=DIC("S")
"RTN","LEXA",65,0)
 S:LEXLL=0 LEXLL=5
"RTN","LEXA",66,0)
 S ^TMP("LEXSCH",$J,"LEN",0)=LEXLL
"RTN","LEXA",67,0)
X ; Search for X
"RTN","LEXA",68,0)
 I '$L($G(LEXX)) D  D EXIT Q
"RTN","LEXA",69,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",70,0)
 .S LEX("ERR",LEX("ERR",0))="User input LEXX missing or invalid"
"RTN","LEXA",71,0)
APP ; Application
"RTN","LEXA",72,0)
 I +$G(^TMP("LEXSCH",$J,"APP",0))=0!('$D(^LEXT(757.2,+$G(^TMP("LEXSCH",$J,"APP",0)),0))) D  D EXIT Q
"RTN","LEXA",73,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",74,0)
 .S LEX("ERR",LEX("ERR",0))="Calling application identification LEXAP missing or invalid"
"RTN","LEXA",75,0)
USR ; User
"RTN","LEXA",76,0)
 I +$G(DUZ)=0!('$L($$GET1^DIQ(200,+($G(DUZ)),.01))) D  D EXIT Q
"RTN","LEXA",77,0)
 .S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",78,0)
 .S LEX("ERR",LEX("ERR",0))="User identification DUZ missing or invalid"
"RTN","LEXA",79,0)
 N LEXFND,LEXISCD
"RTN","LEXA",80,0)
 S (LEXFND,LEXISCD)=0
"RTN","LEXA",81,0)
 S ^TMP("LEXSCH",$J,"USR",0)=+$G(DUZ)
"RTN","LEXA",82,0)
 S ^TMP("LEXSCH",$J,"NAR",0)=LEXX
"RTN","LEXA",83,0)
 S ^TMP("LEXSCH",$J,"SCH",0)=$$UP^XLFSTR(LEXX)
"RTN","LEXA",84,0)
DEF ; Defaults                     CONFIG^LEXSET
"RTN","LEXA",85,0)
 N LEXFIL,LEXDSP,LEXFILR S:$L($G(DIC("S"))) LEXFIL=DIC("S")
"RTN","LEXA",86,0)
 I '$L($G(LEXFIL)),$L($G(^TMP("LEXSCH",$J,"FIL",0))) S LEXFIL=^TMP("LEXSCH",$J,"FIL",0)
"RTN","LEXA",87,0)
 N LEXNS,LEXSS S LEXNS=$$NS^LEXDFN2(LEXAP),LEXSS=$$MD^LEXDFN2(LEXSUB)
"RTN","LEXA",88,0)
 I +$G(^TMP("LEXSCH",$J,"ADF",0))=0 D CONFIG^LEXSET(LEXNS,LEXSS,$G(LEXVDT))
"RTN","LEXA",89,0)
 S:$L($G(LEXDISP)) ^TMP("LEXSCH",$J,"DIS",0)=$G(LEXDISP)
"RTN","LEXA",90,0)
 I '$L($G(LEXFIL)),$L($G(^TMP("LEXSCH",$J,"FIL",0))) S LEXFIL=^TMP("LEXSCH",$J,"FIL",0)
"RTN","LEXA",91,0)
 S:$L($G(LEXFIL)) LEXFIL=$$FIL(LEXFIL)
"RTN","LEXA",92,0)
 S LEXFIL=$G(LEXFIL) N LEXDISP
"RTN","LEXA",93,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","LEXA",94,0)
 D MAN
"RTN","LEXA",95,0)
 I $D(LEX("ERR")) D EXIT Q
"RTN","LEXA",96,0)
 D SETUP^LEXAM($G(^TMP("LEXSCH",$J,"VOC",0)))
"RTN","LEXA",97,0)
 I $D(LEX("ERR")) D EXIT Q
"RTN","LEXA",98,0)
LK ; Look-up
"RTN","LEXA",99,0)
HLP ; Look-up Help                 ADDL^LEXAL
"RTN","LEXA",100,0)
 I (LEXX["?"&($P(LEXX,"?",2)'?1N.N))!(LEXX["??") D  I $D(LEX("HLP")) D EXIT Q
"RTN","LEXA",101,0)
 . D QMH^LEXAR3(LEXX)
"RTN","LEXA",102,0)
IEN ; Look-up by IEN               ADDL^LEXAL PCH 4
"RTN","LEXA",103,0)
 I ^TMP("LEXSCH",$J,"NAR",0)?1"`"1N.N D  I $D(LEX("LIST")) D EXIT Q
"RTN","LEXA",104,0)
 . N LEXE,LEXUN,LEXM,LEXL
"RTN","LEXA",105,0)
 . S LEXE=+$E(^TMP("LEXSCH",$J,"NAR",0),2,$L(^TMP("LEXSCH",$J,"NAR",0))) Q:LEXE'?1N.N
"RTN","LEXA",106,0)
 . S LEXUN=+$G(^TMP("LEXSCH",$J,"UNR",0))
"RTN","LEXA",107,0)
 . Q:'$D(^LEX(757.01,LEXE,0))
"RTN","LEXA",108,0)
 . D ADDL^LEXAL(LEXE,$$DES^LEXASC(LEXE),$$SO^LEXASO(LEXE,$G(^TMP("LEXSCH",$J,"DIS",0)),1,$G(LEXVDT)))
"RTN","LEXA",109,0)
 . I $D(^TMP("LEXFND",$J)) D BEG^LEXAL
"RTN","LEXA",110,0)
 . I $L($G(^TMP("LEXSCH",$J,"NAR",0))) S LEX("NAR")=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXA",111,0)
 . I $L($G(^LEX(757.01,+$G(LEXE),0))) S LEX("NAR")=$G(^LEX(757.01,+$G(LEXE),0))
"RTN","LEXA",112,0)
 . S:$L($G(LEX("NAR"))) ^TMP("LEXSCH",$J,"NAR",0)=$G(LEX("NAR"))
"RTN","LEXA",113,0)
 . S LEXM=$O(LEX("LIST"," "),-1),LEXL=$O(LEX("LIST",0))
"RTN","LEXA",114,0)
 . S:LEXM>0 LEX=LEXM,LEX("MAT")=(LEXM_" match"_$S(LEXM'>1:" ",1:"es ")_"found"),^TMP("LEXSCH",$J,"NUM",0)=LEXM
"RTN","LEXA",115,0)
 . S:LEXM>0&(LEXL>0) LEX("MAX")=LEXM,LEX("MIN")=LEXL,LEX("LIST",0)=(LEXM_"^"_LEXL)
"RTN","LEXA",116,0)
SCT ; Look-up by Shortcuts         EN^LEXASC  
"RTN","LEXA",117,0)
 I +$G(^TMP("LEXSCH",$J,"SCT",0)),$D(^LEX(757.41,^TMP("LEXSCH",$J,"SCT",0))) D
"RTN","LEXA",118,0)
 . S LEXFND=$$EN^LEXASC(^TMP("LEXSCH",$J,"SCH",0),^TMP("LEXSCH",$J,"SCT",0),$G(LEXVDT))
"RTN","LEXA",119,0)
 I +LEXFND D EXIT Q
"RTN","LEXA",120,0)
CODE ; Look-up by Code              EN^LEXABC
"RTN","LEXA",121,0)
 S LEXFND=$$EN^LEXABC(^TMP("LEXSCH",$J,"SCH",0),$G(LEXVDT))
"RTN","LEXA",122,0)
 I +LEXFND D EXIT Q
"RTN","LEXA",123,0)
 I $L($G(^TMP("LEXSCH",$J,"SCH",0))) D
"RTN","LEXA",124,0)
 . S:$D(^LEX(757.01,"AWRD",^TMP("LEXSCH",$J,"SCH",0))) LEXISCD=0
"RTN","LEXA",125,0)
 I +LEXFND'>0,+($G(LEXISCD))>0 D EXIT Q
"RTN","LEXA",126,0)
EXACT ; Look-up Exact Match          EN^LEXAB
"RTN","LEXA",127,0)
 S LEXFND=$$EN^LEXAB(^TMP("LEXSCH",$J,"SCH",0),$G(LEXVDT))
"RTN","LEXA",128,0)
 K:+LEXFND=0 ^TMP("LEXFND",$J)
"RTN","LEXA",129,0)
 K ^TMP("LEXHIT",$J)
"RTN","LEXA",130,0)
KEYWRD ; Look-up by word              EN^LEXALK
"RTN","LEXA",131,0)
 D EN^LEXALK
"RTN","LEXA",132,0)
EXIT ; Clean-up and quit
"RTN","LEXA",133,0)
 K LEXQ,LEXDICS,LEXFIL,LEXFILR,LEXDSP,LEXSHOW,LEXSHCT,LEXSUB
"RTN","LEXA",134,0)
 K LEXOVR,LEXUN,LEXLKFL,LEXLKGL,LEXLKIX,LEXLKSH,LEXTKNS,LEXTKN
"RTN","LEXA",135,0)
 K LEXI,LEXM Q:$D(LEX("HLP"))
"RTN","LEXA",136,0)
 S:$L(LEXX) LEX("NAR")=LEXX S:$L(LEXXNAR) LEX("NAR")=LEXXNAR S LEX=0
"RTN","LEXA",137,0)
 S:$L($G(LEX("NAR"))) ^TMP("LEXSCH",$J,"NAR",0)=$G(LEX("NAR"))
"RTN","LEXA",138,0)
 S:$G(^TMP("LEXSCH",$J,"NUM",0))>0 LEX=$G(^TMP("LEXSCH",$J,"NUM",0))
"RTN","LEXA",139,0)
 D:$D(LEX("ERR")) CLN
"RTN","LEXA",140,0)
 I $D(LEX),+$G(LEX)=0,'$D(LEX("LIST")),$L($G(LEXX)) D
"RTN","LEXA",141,0)
 . N LEXC,LEXF,LEXV,LEXM,LEXL
"RTN","LEXA",142,0)
 . S LEXC=1
"RTN","LEXA",143,0)
 . S LEXF=$G(^TMP("LEXSCH",$J,"FIL",0))
"RTN","LEXA",144,0)
 . S LEXV=$G(^TMP("LEXSCH",$J,"VOC",0))
"RTN","LEXA",145,0)
 . D:+$G(^TMP("LEXSCH",$J,"UNR",0))>0 EN^LEXAR(LEXX,$G(LEXVDT))
"RTN","LEXA",146,0)
 . S:$L(LEXX) LEX("NAR")=LEXX S:$L(LEXXNAR) LEX("NAR")=LEXXNAR S LEX=0
"RTN","LEXA",147,0)
 . S:$L($G(LEX("NAR"))) ^TMP("LEXSCH",$J,"NAR",0)=$G(LEX("NAR"))
"RTN","LEXA",148,0)
 . S:'$D(LEX("HLP")) LEX("HLP",LEXC)="    A suitable term could not be found based on user input"
"RTN","LEXA",149,0)
 . S:LEXF="I 1" LEXF=""
"RTN","LEXA",150,0)
 . I $L(LEXF)!(LEXV'="WRD"),'$D(LEX("HLP")) D
"RTN","LEXA",151,0)
 . . S LEX("HLP",LEXC)=$G(LEX("HLP",LEXC))_" and "
"RTN","LEXA",152,0)
 . . S LEXC=LEXC+1
"RTN","LEXA",153,0)
 . . S LEX("HLP",LEXC)="    current user defaults"
"RTN","LEXA",154,0)
 . . S LEX("HLP",0)=LEXC
"RTN","LEXA",155,0)
 . S:'$D(LEX("HLP")) LEX("HLP",LEXC)=$G(LEX("HLP",LEXC))_"."
"RTN","LEXA",156,0)
 Q
"RTN","LEXA",157,0)
CLN ; Clean
"RTN","LEXA",158,0)
 K LEXQ,LEXTKNS,LEXTKN,LEXI
"RTN","LEXA",159,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXHIT",$J),^TMP("LEXFND",$J)
"RTN","LEXA",160,0)
 Q
"RTN","LEXA",161,0)
MAN ; Mandatory variables
"RTN","LEXA",162,0)
 N LEXERR
"RTN","LEXA",163,0)
 F LEXERR="SCH","VOC","APP","USR" D
"RTN","LEXA",164,0)
 .I '$L($G(^TMP("LEXSCH",$J,LEXERR,0))) D
"RTN","LEXA",165,0)
 ..S LEX("ERR",0)=$G(LEX("ERR",0))+1
"RTN","LEXA",166,0)
 ..S LEX("ERR",LEX("ERR",0))="Mandatory variable ^TMP(""LEXSCH"",$J,"""_LEXERR_""",0) missing or invalid"
"RTN","LEXA",167,0)
 Q
"RTN","LEXA",168,0)
CAT(X,Y) ; Source Category
"RTN","LEXA",169,0)
 N LEX,LEXC,LEXI,LEXO,LEXS,LEXU S (X,LEX)=$G(X) Q:'$L(X) ""  Q:X?1N.N&('$D(^LEX(757.13,+X,0))) ""
"RTN","LEXA",170,0)
 S (LEXS,Y)=$G(Y) S:$L(LEXS) LEXS=$$SRC(LEXS) I X?1N.N,$D(^LEX(757.13,+X,0)) S X=+X S:+LEXS>0 X=X_"^"_+LEXS Q X
"RTN","LEXA",171,0)
 S LEXU=$$UP^XLFSTR(LEX),(X,LEXC)=+($O(^LEX(757.13,"C",LEXU,0))) Q:'$D(^LEX(757.13,"C",LEXU)) ""
"RTN","LEXA",172,0)
 I +LEXC>0,LEXC=+($O(^LEX(757.13,"C",LEXU," "),-1)) S X=+LEXC S:+LEXS>0 X=X_"^"_+LEXS Q X
"RTN","LEXA",173,0)
 S LEXO="",LEXI=0 F  S LEXI=$O(^LEX(757.13,"C",LEXU,LEXI)) Q:+LEXI'>0  D  Q:+LEXO>0
"RTN","LEXA",174,0)
 . S:$P($G(^LEX(757.13,LEXI,4)),"^",1)=LEXS LEXO=LEXI
"RTN","LEXA",175,0)
 S X="" S:+LEXO>0 X=+LEXO S:+LEXO>0&(+LEXS>0) X=X_"^"_+LEXS
"RTN","LEXA",176,0)
 Q X
"RTN","LEXA",177,0)
SRC(X) ; Source
"RTN","LEXA",178,0)
 N LEX,LEXU S (LEX,X)=$TR($G(X),"`","") Q:'$L(LEX) ""  Q:X?1N.N&('$D(^LEX(757.14,+X,0))) ""  Q:X?1N.N&($D(^LEX(757.14,+X,0))) +X
"RTN","LEXA",179,0)
 S LEXU=$$UP^XLFSTR(LEX),X=$O(^LEX(757.14,"B",LEX,0)) Q:+X>0 +X  S X=$O(^LEX(757.14,"B",LEXU,0)) Q:+X>0 +X
"RTN","LEXA",180,0)
 Q ""
"RTN","LEXA",181,0)
FIL(X) ; Validate Filter
"RTN","LEXA",182,0)
 S X=$G(X) N DIC Q:'$L(X) X D ^DIM S:'$D(X) X=""
"RTN","LEXA",183,0)
 Q X
"RTN","LEXA",184,0)
 ;                   
"RTN","LEXA",185,0)
INFO(X,LEXVDT) ; Get Information about a Term
"RTN","LEXA",186,0)
 ; 
"RTN","LEXA",187,0)
 ; Input
"RTN","LEXA",188,0)
 ;                   
"RTN","LEXA",189,0)
 ;    X       Internal Entry Number in file 757.01
"RTN","LEXA",190,0)
 ;    LEXVDT  Optional date - retrieves codes active
"RTN","LEXA",191,0)
 ;            on a specified date
"RTN","LEXA",192,0)
 ;      
"RTN","LEXA",193,0)
 ; Output
"RTN","LEXA",194,0)
 ;          
"RTN","LEXA",195,0)
 ;    Local Array LEX("SEL") or null
"RTN","LEXA",196,0)
 ;                   
"RTN","LEXA",197,0)
 ;    LEX("SEL","EXP")   Expressions Concepts/Synonyms/Variants
"RTN","LEXA",198,0)
 ;    LEX("SEL","SIG")   Expression definition
"RTN","LEXA",199,0)
 ;    LEX("SEL","SRC")   Classification Codes
"RTN","LEXA",200,0)
 ;    LEX("SEL"."STY")   Semantic Class/Semantic Types
"RTN","LEXA",201,0)
 ;    LEX("SEL","VAS")   VA Classification Sources
"RTN","LEXA",202,0)
 ;                   
"RTN","LEXA",203,0)
 K LEX("SEL") S X=+$G(X) Q:X=0  Q:'$D(^LEX(757.01,X,0))
"RTN","LEXA",204,0)
 N LEXD S LEXD=$G(LEXVDT) S:+LEXD'>0 LEXD=$$DT^XLFDT
"RTN","LEXA",205,0)
 N LEXVDT S LEXVDT=LEXD D SET^LEXAR4(X,LEXVDT)
"RTN","LEXA",206,0)
 Q
"RTN","LEXA",207,0)
SCH ; Search Parameters
"RTN","LEXA",208,0)
 N NN,NC S NN="^TMP(""LEXSCH"","_$J_")",NC="^TMP(""LEXSCH"","_$J_","
"RTN","LEXA",209,0)
 W ! F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","LEXA",210,0)
 W !
"RTN","LEXA1")
0^6^B70223052
"RTN","LEXA1",1,0)
LEXA1 ;ISL/KER - Lexicon Look-up (Loud) ;12/19/2014
"RTN","LEXA1",2,0)
 ;;2.0;LEXICON UTILITY;**3,4,6,11,15,38,55,73,80,86**;Sep 23, 1996;Build 1
"RTN","LEXA1",3,0)
 ;               
"RTN","LEXA1",4,0)
 ; Global Variables
"RTN","LEXA1",5,0)
 ;    ^DISV(              ICR    510
"RTN","LEXA1",6,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXA1",7,0)
 ;    ^TMP("LEXHIT"       SACC 2.3.2.5.1
"RTN","LEXA1",8,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXA1",9,0)
 ;               
"RTN","LEXA1",10,0)
 ; External References
"RTN","LEXA1",11,0)
 ;    ^DIR                ICR  10026
"RTN","LEXA1",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXA1",13,0)
 ;               
"RTN","LEXA1",14,0)
 ; Local Variables NEWed or KILLed by calling application
"RTN","LEXA1",15,0)
 ; 
"RTN","LEXA1",16,0)
 ;     DIC,DTOUT,DUOUT,LEXCAT,LEXQUIET,LEXSRC
"RTN","LEXA1",17,0)
 ;     
"RTN","LEXA1",18,0)
EN ; Fileman Special Lookup
"RTN","LEXA1",19,0)
 ; 
"RTN","LEXA1",20,0)
 ; ^LEXA1 is the Lexicon's special lookup routine
"RTN","LEXA1",21,0)
 ; 
"RTN","LEXA1",22,0)
 ;   ^DD(757.01,0,"DIC")=LEXA1
"RTN","LEXA1",23,0)
 ; 
"RTN","LEXA1",24,0)
 ; Input    All input variables are optional
"RTN","LEXA1",25,0)
 ; 
"RTN","LEXA1",26,0)
 ;    X     User's input, if X does not exist the user
"RTN","LEXA1",27,0)
 ;          will be prompted
"RTN","LEXA1",28,0)
 ; 
"RTN","LEXA1",29,0)
 ;    Fileman Variables used:
"RTN","LEXA1",30,0)
 ; 
"RTN","LEXA1",31,0)
 ;          DIC       Global Root (default ^LEX(757.01,)
"RTN","LEXA1",32,0)
 ;          DIC(0)    DIC response string (default AEQM)
"RTN","LEXA1",33,0)
 ;          DIC("A")  Prompt (default "Enter Term/Concept:")
"RTN","LEXA1",34,0)
 ;          DIC("B")  Default lookup value
"RTN","LEXA1",35,0)
 ;          DIC("S")  Screen
"RTN","LEXA1",36,0)
 ;          DIC("W")  Output string
"RTN","LEXA1",37,0)
 ; 
"RTN","LEXA1",38,0)
 ;    Special Input Variables:
"RTN","LEXA1",39,0)
 ; 
"RTN","LEXA1",40,0)
 ;          LEXVDT    Versioning Date - This is a date in
"RTN","LEXA1",41,0)
 ;                    Fileman format.  If set it will force
"RTN","LEXA1",42,0)
 ;                    the lookup to be date sensitive, 
"RTN","LEXA1",43,0)
 ;                    inactive and pending codes and terms 
"RTN","LEXA1",44,0)
 ;                    will not display on the selection 
"RTN","LEXA1",45,0)
 ;                    list. 
"RTN","LEXA1",46,0)
 ; 
"RTN","LEXA1",47,0)
 ;     Developer Input Variables
"RTN","LEXA1",48,0)
 ; 
"RTN","LEXA1",49,0)
 ;          LEXIGN    Ignore - This flag, if set will ignore
"RTN","LEXA1",50,0)
 ;                    deactivation flags. 
"RTN","LEXA1",51,0)
 ; 
"RTN","LEXA1",52,0)
 ;          LEXDISP   Display - Force overwrite of display default
"RTN","LEXA1",53,0)
 ;                    parameter.
"RTN","LEXA1",54,0)
 ; 
"RTN","LEXA1",55,0)
 ; Output
"RTN","LEXA1",56,0)
 ; 
"RTN","LEXA1",57,0)
 ;    Fileman
"RTN","LEXA1",58,0)
 ; 
"RTN","LEXA1",59,0)
 ;       Y       2 piece string containing IEN and 
"RTN","LEXA1",60,0)
 ;               expression or -1 if not found
"RTN","LEXA1",61,0)
 ;               or selection not made
"RTN","LEXA1",62,0)
 ; 
"RTN","LEXA1",63,0)
 ;       Y(0)    If DIC(0) contains a Z this variable 
"RTN","LEXA1",64,0)
 ;               will be equal to the entire zero node
"RTN","LEXA1",65,0)
 ;               of the entry that was selected
"RTN","LEXA1",66,0)
 ; 
"RTN","LEXA1",67,0)
 ;       Y(0,0)  If DIC(0) contains a Z this variable 
"RTN","LEXA1",68,0)
 ;               will be equal to the external form of
"RTN","LEXA1",69,0)
 ;               the .01 field of the entry that was
"RTN","LEXA1",70,0)
 ;               selected
"RTN","LEXA1",71,0)
 ; 
"RTN","LEXA1",72,0)
 ;    Non-Fileman
"RTN","LEXA1",73,0)
 ; 
"RTN","LEXA1",74,0)
 ;       Y(1)    This is the external form of the ICD-9
"RTN","LEXA1",75,0)
 ;               diagnosis code when found
"RTN","LEXA1",76,0)
 ; 
"RTN","LEXA1",77,0)
 ;       Y(2)    This is the external form of the ICD-9
"RTN","LEXA1",78,0)
 ;               procedure code when found
"RTN","LEXA1",79,0)
 ; 
"RTN","LEXA1",80,0)
 ;       Y(30)   This is the external form of the ICD-10
"RTN","LEXA1",81,0)
 ;               diagnosis code when found
"RTN","LEXA1",82,0)
 ; 
"RTN","LEXA1",83,0)
 ;       Y(31)   This is the external form of the ICD-10
"RTN","LEXA1",84,0)
 ;               procedure code when found
"RTN","LEXA1",85,0)
 ; 
"RTN","LEXA1",86,0)
 ;       Y(81)   This is the external form of the CPT-4
"RTN","LEXA1",87,0)
 ;               or HCPCS code when found
"RTN","LEXA1",88,0)
 ; 
"RTN","LEXA1",89,0)
 I '$D(DIC(0))!($G(DIC(0))["A") K X
"RTN","LEXA1",90,0)
 ; Date Check
"RTN","LEXA1",91,0)
 N LEXTD,LEXQ,LEXXVDT,LEXASKC S LEXXVDT=$S($G(LEXVDT)?7N:1,1:0) S LEXQ=0 D VDT^LEXU
"RTN","LEXA1",92,0)
 ;
"RTN","LEXA1",93,0)
 ; LEXSUB  Specifies the vocabulary subset to use during the search.  
"RTN","LEXA1",94,0)
 ;         It is a three character mnemonic taken from file 757.2.
"RTN","LEXA1",95,0)
 ;         The default is "WRD"
"RTN","LEXA1",96,0)
 S:'$L($G(LEXSUB)) LEXSUB="WRD"
"RTN","LEXA1",97,0)
 ;
"RTN","LEXA1",98,0)
 ; LEXAP   Specifies the application using the Lexicon.  It is a pointer
"RTN","LEXA1",99,0)
 ;         to file 757.2.  The default is 1 (Lexicon)
"RTN","LEXA1",100,0)
 S:'$L($G(LEXAP))&($L($G(^TMP("LEXSCH",$J,"APP",0)))) LEXAP=^TMP("LEXSCH",$J,"APP",0)
"RTN","LEXA1",101,0)
 S:'$L($G(LEXAP)) LEXAP=1
"RTN","LEXA1",102,0)
 ;
"RTN","LEXA1",103,0)
 ; LEXLL   Specifies the displayable list length that the user selects
"RTN","LEXA1",104,0)
 ;         from. Default is 5.
"RTN","LEXA1",105,0)
 S:'$L($G(LEXLL)) LEXLL=5
"RTN","LEXA1",106,0)
 ;
"RTN","LEXA1",107,0)
 ; LEXSRC  Specifies the source of the vocabulary to use during the search.
"RTN","LEXA1",108,0)
 ;         It is a pointer to file #757.14.
"RTN","LEXA1",109,0)
 N LEXXSR S:$L($G(LEXSRC)) LEXXSR=$G(LEXSRC)
"RTN","LEXA1",110,0)
 ;         
"RTN","LEXA1",111,0)
 ; LEXCAT  Specifies the source category of the vocabulary to use during 
"RTN","LEXA1",112,0)
 ;         the search.  It is a pointer to file #757.13.
"RTN","LEXA1",113,0)
 N LEXXCT S:$L($G(LEXCAT)) LEXXCT=$G(LEXCAT)
"RTN","LEXA1",114,0)
 ;         
"RTN","LEXA1",115,0)
 ; Check the DIC variables new LEXUR "user response"
"RTN","LEXA1",116,0)
 N LEXDICA,LEXDICB,LEXO,XTLKGBL,XTLKHLP,XTLKKSCH,XTLKSAY  D CHK N LEXUR
"RTN","LEXA1",117,0)
 ;
"RTN","LEXA1",118,0)
 ; Save the value of X if "Ask" is not specified in DIC(0)
"RTN","LEXA1",119,0)
 I DIC(0)'["A",$L($G(X)) S LEXSAVE=X K X
"RTN","LEXA1",120,0)
 ;
"RTN","LEXA1",121,0)
 ; Save the prompt
"RTN","LEXA1",122,0)
 I $L($G(DIC("A"))) S LEXDICA=DIC("A")
"RTN","LEXA1",123,0)
 ;
"RTN","LEXA1",124,0)
 ; Continue to lookup until the dialog with the application 
"RTN","LEXA1",125,0)
 ; ends.  If there is nothing to lookup (X="") or an uparrow
"RTN","LEXA1",126,0)
 ; is detected, the Lexicon shuts down killing LEX.
"RTN","LEXA1",127,0)
 ;
"RTN","LEXA1",128,0)
 S LEXASKC=0 F  D LK Q:'$D(LEX)!($D(LEX("SEL")))
"RTN","LEXA1",129,0)
 G EXIT
"RTN","LEXA1",130,0)
LK ; Start Look-up
"RTN","LEXA1",131,0)
 ; X not provided
"RTN","LEXA1",132,0)
 K DTOUT,DUOUT S LEXASKC=+($G(LEXASKC))+1 W:+($G(LEXASKC))>1 !
"RTN","LEXA1",133,0)
 D:'$D(LEXSAVE) ASK I $D(DTOUT)!($D(DUOUT)) K LEX Q
"RTN","LEXA1",134,0)
 ; X provided
"RTN","LEXA1",135,0)
 S:$D(LEXSAVE) X=LEXSAVE K LEXSAVE
"RTN","LEXA1",136,0)
 ; X was null with a default provided
"RTN","LEXA1",137,0)
 S:$D(DIC("B"))&($G(X)="") X=DIC("B")
"RTN","LEXA1",138,0)
 ; Lookup X - LOOK(LEXX,LEXAP,LEXLL,LEXSUB,LEXVDT,LEXXSR,LEXXCT)
"RTN","LEXA1",139,0)
 I '$L($G(X)) K LEX Q
"RTN","LEXA1",140,0)
 D LOOK^LEXA(X,$G(LEXAP),$G(LEXLL),,$G(LEXVDT),$G(LEXXSR),$G(LEXXCT))
"RTN","LEXA1",141,0)
 K DIC("B")
"RTN","LEXA1",142,0)
 ;
"RTN","LEXA1",143,0)
NOTFND ; If X was not found
"RTN","LEXA1",144,0)
 ;
"RTN","LEXA1",145,0)
 ;    Write "??"
"RTN","LEXA1",146,0)
 ;
"RTN","LEXA1",147,0)
 ;    Calling application uses Unresolved Narratives
"RTN","LEXA1",148,0)
 ;      Prompt to "accept or reject" the narrative
"RTN","LEXA1",149,0)
 ;      
"RTN","LEXA1",150,0)
 ;    Calling application does not use Unresolved Narratives
"RTN","LEXA1",151,0)
 ;      Display help, Re-prompt and Continue search
"RTN","LEXA1",152,0)
 ;
"RTN","LEXA1",153,0)
 I '$D(LEX("LIST")),+($G(LEX))=0,$L(X),X'["^",$E(X,1)'=" " D  K LEX S LEX=0 Q
"RTN","LEXA1",154,0)
 . K DIC("B"),LEX("SEL")
"RTN","LEXA1",155,0)
 . I +($G(^TMP("LEXSCH",$J,"UNR",0)))=0 I +($G(X))'=757.01 W "  ??" D:$D(LEX("HLP")) DH^LEXA3 W ! Q
"RTN","LEXA1",156,0)
 . I +($G(^TMP("LEXSCH",$J,"UNR",0)))=1 W "  ??" D EN^LEXA4 W !
"RTN","LEXA1",157,0)
FOUND ; If X was found
"RTN","LEXA1",158,0)
 ;
"RTN","LEXA1",159,0)
 ;    Begin user selection.  Continue to display the list
"RTN","LEXA1",160,0)
 ;    until the dialog with the user is terminated.  The
"RTN","LEXA1",161,0)
 ;    dialog is considered to be terminated if:
"RTN","LEXA1",162,0)
 ;
"RTN","LEXA1",163,0)
 ;      The selection list does not exist  '$D(LEX("LIST"))
"RTN","LEXA1",164,0)
 ;      The user has made a selection       $D(LEX("SEL")
"RTN","LEXA1",165,0)
 ; 
"RTN","LEXA1",166,0)
 I $D(LEX("LIST")) F  Q:+($G(LEX))=0  D SELECT^LEXA2
"RTN","LEXA1",167,0)
 Q:$D(LEX("SEL"))
"RTN","LEXA1",168,0)
 I '$L($G(LEX)) K LEX Q
"RTN","LEXA1",169,0)
 I $L($G(LEX)),'$D(LEX("SEL")),$D(^TMP("LEXSCH",$J)) D
"RTN","LEXA1",170,0)
 . D EN^LEXA4 S:'$D(LEX("SEL")) LEX=0
"RTN","LEXA1",171,0)
 Q
"RTN","LEXA1",172,0)
EXIT ; Set/Kill variables Y, Y(0,0)
"RTN","LEXA1",173,0)
 S:$L($G(LEX("NAR"))) X=$G(LEX("NAR"))
"RTN","LEXA1",174,0)
 S:$L($G(LEXDICA)) DIC("A")=LEXDICA S:$L($G(LEXDICB)) DIC("B")=LEXDICB K Y K:+($G(LEXXVDT))'>0 LEXVDT
"RTN","LEXA1",175,0)
 I '$D(LEX("SEL","EXP",1)) K Y S Y=-1 D CL Q
"RTN","LEXA1",176,0)
 I $D(LEX("SEL","EXP",1)) S Y=LEX("SEL","EXP",1) D
"RTN","LEXA1",177,0)
 . D Y1,SSBR I DIC(0)["Z" D
"RTN","LEXA1",178,0)
 . . S Y(0)=^LEX(757.01,+(LEX("SEL","EXP",1)),0)
"RTN","LEXA1",179,0)
 . . S Y(0,0)=$P(^LEX(757.01,+(LEX("SEL","EXP",1)),0),"^",1)
"RTN","LEXA1",180,0)
 D CL
"RTN","LEXA1",181,0)
 Q
"RTN","LEXA1",182,0)
CL ; Clear Variables
"RTN","LEXA1",183,0)
 K LEX,LEXSUB,LEXAP,LEXLL D CLR
"RTN","LEXA1",184,0)
 Q
"RTN","LEXA1",185,0)
CLR ; Clear ^TMP Global
"RTN","LEXA1",186,0)
 K ^TMP("LEXSCH",$J),^TMP("LEXHIT",$J),^TMP("LEXFND",$J)
"RTN","LEXA1",187,0)
 Q
"RTN","LEXA1",188,0)
Y1 ; ICD-9 DX in Y(1), ICD-10 DX in Y(30)
"RTN","LEXA1",189,0)
 N LEXCT,LEXLC,LEXLDR,LEXSY,LEXB,LEXN S LEXB=$G(IOINHI),LEXN=$G(IOINORM)
"RTN","LEXA1",190,0)
 S LEXLC=0,LEXLDR=" >>>  " I '$D(LEXQUIET) F LEXSY=1,2,30,31 D
"RTN","LEXA1",191,0)
 . N LEXI S (LEXCT,LEXI)=0 F  S LEXI=$O(LEX("SEL","VAS","I",LEXSY,LEXI)) Q:+LEXI'>0  D
"RTN","LEXA1",192,0)
 . . N LEXD,LEXC,LEXS,LEXT S LEXD=$G(LEX("SEL","VAS",LEXI)),LEXC=$P(LEXD,"^",3),LEXS=$P(LEXD,"^",6)
"RTN","LEXA1",193,0)
 . . Q:'$L(LEXD)  Q:'$L(LEXS)  S LEXT=LEXLDR_LEXS_" Code:"
"RTN","LEXA1",194,0)
 . . S LEXT=LEXT_$J(" ",(23-$L(LEXT)))_$G(LEXB)_LEXC_$G(LEXN)
"RTN","LEXA1",195,0)
 . . S LEXCT=LEXCT+1,LEXLC=LEXLC+1 S:LEXLC>1 LEXLDR="      "
"RTN","LEXA1",196,0)
 . . Q:LEXCT>1  W:LEXCT=1 ! W !,LEXT
"RTN","LEXA1",197,0)
 . . S:'$L($G(Y(+LEXSY))) Y(+LEXSY)=LEXC
"RTN","LEXA1",198,0)
 N IOINHI,IOINORM
"RTN","LEXA1",199,0)
 Q
"RTN","LEXA1",200,0)
ASK ; Get user input
"RTN","LEXA1",201,0)
 N DIR,DIRUT,DIROUT S:$L($G(LEXDICA)) DIC("A")=LEXDICA
"RTN","LEXA1",202,0)
 S DIR("A")=DIC("A") W:'$L($G(X))&('$L($G(LEXDICB))) !
"RTN","LEXA1",203,0)
 I '$L($G(X)),$L($G(LEXDICB)) S DIR("B")=LEXDICB
"RTN","LEXA1",204,0)
 S DIR("?")="      "_$$SQ^LEXHLP
"RTN","LEXA1",205,0)
 S DIR("??")="^D INPHLP^LEXA1",DIR("?")=$G(DIR("??"))
"RTN","LEXA1",206,0)
 N Y S DIR(0)="FAO^0:245" K X
"RTN","LEXA1",207,0)
 D ^DIR
"RTN","LEXA1",208,0)
 K DIC("B") D:$E(X,1)=" " RSBR
"RTN","LEXA1",209,0)
 W:$E(X,1)'=" " !
"RTN","LEXA1",210,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXA1",211,0)
 W:$D(DTOUT) !,"Try later.",!
"RTN","LEXA1",212,0)
 I $D(DTOUT)!(X="^") S X=""
"RTN","LEXA1",213,0)
 S:X[U DUOUT=1 K DIRUT,DIROUT Q
"RTN","LEXA1",214,0)
INPHLP ; Look-up help
"RTN","LEXA1",215,0)
 N IMP,CUR,CUT,FLG,LEXD,LEXCAT,LEXQUIET,LEXSRC S IMP=$$IMPDATE^LEXU(30)
"RTN","LEXA1",216,0)
 S CUR=$G(LEXVDT) S:CUR'?7N CUR=$$DT^XLFDT S FLG=$S(CUR<IMP:0,1:1)
"RTN","LEXA1",217,0)
 S LEXD=$G(^TMP("LEXSCH",$J,"FIL",0))
"RTN","LEXA1",218,0)
 I $G(X)["??",$L(LEXD),LEXD["LEXU(Y,""DS4""," K LEX("HLP") D  Q
"RTN","LEXA1",219,0)
 . D QMH^LEXAR3(X) N LEXI S LEXI=0
"RTN","LEXA1",220,0)
 . F  S LEXI=$O(LEX("HLP",LEXI)) Q:+LEXI'>0  W !,$G(LEX("HLP",LEXI))
"RTN","LEXA1",221,0)
 . K LEX("HLP")
"RTN","LEXA1",222,0)
 W !,"      Enter a ""free text"" term.  Best results occur using one to "
"RTN","LEXA1",223,0)
 W !,"      three full or partial words without a suffix"
"RTN","LEXA1",224,0)
 W:$G(X)'["??" "."
"RTN","LEXA1",225,0)
 W:$G(X)["??" " (i.e., ""DIABETES"","
"RTN","LEXA1",226,0)
 W:$G(X)["??" !,"      ""DIAB MELL"",""DIAB MELL "_$S(FLG:"NEO",1:"INSUL")_")"
"RTN","LEXA1",227,0)
 W !,"  or  "
"RTN","LEXA1",228,0)
 W !,"      Enter a classification code (ICD/DSM/CPT etc) to find the single "
"RTN","LEXA1",229,0)
 W !,"      term associated with the code."
"RTN","LEXA1",230,0)
 W:$G(X)["??" "  Example, a lookup of code "_$S(FLG:"P70.2",1:"239.0")_" "
"RTN","LEXA1",231,0)
 W:$G(X)["??" !,"      returns one and only one term, that is the preferred term for"
"RTN","LEXA1",232,0)
 W:$G(X)["??" !,"      the code "_$S(FLG:"P70.2",1:"239.0")_", "
"RTN","LEXA1",233,0)
 W:$G(X)["??"&(FLG) """Neonatal Diabetes Mellitus"""
"RTN","LEXA1",234,0)
 W:$G(X)["??"&('FLG) """Neoplasm of unspecified nature",!,"      of digestive system"""
"RTN","LEXA1",235,0)
 Q:FLG
"RTN","LEXA1",236,0)
 W !,"  or  "
"RTN","LEXA1",237,0)
 W !,"      Enter a classification code (ICD/DSM/CPT etc) followed by a plus"
"RTN","LEXA1",238,0)
 W !,"      sign (+) to retrieve all terms associated with the code."
"RTN","LEXA1",239,0)
 W:$G(X)["??" "  Example,"
"RTN","LEXA1",240,0)
 W:$G(X)["??" !,"      a lookup of 239.0+ returns all terms that are linked to the "
"RTN","LEXA1",241,0)
 W:$G(X)["??" !,"      code 239.0."
"RTN","LEXA1",242,0)
 Q
"RTN","LEXA1",243,0)
CHK ; Check Fileman look-up variables
"RTN","LEXA1",244,0)
 K DIC("DR"),DIC("P"),DIC("V"),DLAYGO,DINUM
"RTN","LEXA1",245,0)
 S:$L($G(X)) LEXSAVE=X S:$L($G(DIC("B"))) LEXDICB=DIC("B") K DIC("B")
"RTN","LEXA1",246,0)
 I $L($G(DIC(0))) D
"RTN","LEXA1",247,0)
 . F  Q:DIC(0)'["L"  S DIC(0)=$P(DIC(0),"L",1)_$P(DIC(0),"L",2)
"RTN","LEXA1",248,0)
 . F  Q:DIC(0)'["I"  S DIC(0)=$P(DIC(0),"I",1)_$P(DIC(0),"I",2)
"RTN","LEXA1",249,0)
 S:'$L($G(DIC(0))) DIC(0)="QEAMF" S:'$L($G(DIC)) DIC="^LEX(757.01,"
"RTN","LEXA1",250,0)
 S:DIC(0)'["F" DIC(0)=DIC(0)_"F" S:'$L($G(DIC("A"))) DIC("A")="Enter Term/Concept:  "
"RTN","LEXA1",251,0)
 S LEXDICA=DIC("A")
"RTN","LEXA1",252,0)
 Q
"RTN","LEXA1",253,0)
SSBR ; Store data for Space Bar Return
"RTN","LEXA1",254,0)
 Q:'$L($G(DUZ))  Q:+($G(DUZ))=0  Q:'$L($G(DIC))  Q:$G(DIC)'["757.01,"
"RTN","LEXA1",255,0)
 Q:$G(DIC(0))'["F"  Q:+($G(Y))'>2  Q:$E($G(X),1)=" "  S ^DISV(DUZ,DIC)=+($G(Y))
"RTN","LEXA1",256,0)
 Q
"RTN","LEXA1",257,0)
RSBR ; Retrieve onSpace Bar Return
"RTN","LEXA1",258,0)
 Q:'$L($G(DUZ))  Q:$G(DIC)'="^LEX(757.01,"  Q:$G(DIC(0))'["F"
"RTN","LEXA1",259,0)
 Q:$E($G(X),1)'=" "  S:+($G(^DISV(DUZ,DIC)))>2 X=@(DIC_+($G(^DISV(DUZ,DIC)))_",0)")
"RTN","LEXA1",260,0)
 Q
"RTN","LEXAB")
0^18^B11071959
"RTN","LEXAB",1,0)
LEXAB ;ISL/KER - Look-up Exact Match "B" index ;12/19/2014
"RTN","LEXAB",2,0)
 ;;2.0;LEXICON UTILITY;**25,80,86**;Sep 23, 1996;Build 1
"RTN","LEXAB",3,0)
 ;               
"RTN","LEXAB",4,0)
 ; Global Variables
"RTN","LEXAB",5,0)
 ;    ^TMP("LEXFND"       SACC 2.3.2.5.1
"RTN","LEXAB",6,0)
 ;    ^TMP("LEXSCH"       SACC 2.3.2.5.1
"RTN","LEXAB",7,0)
 ;               
"RTN","LEXAB",8,0)
 ; External References
"RTN","LEXAB",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXAB",10,0)
 ;               
"RTN","LEXAB",11,0)
 ; Killed in LEXA
"RTN","LEXAB",12,0)
 ;    LEXFIL
"RTN","LEXAB",13,0)
 ;    
"RTN","LEXAB",14,0)
 ; Exact match  S X=$$EN^LEXAB("LEXSCH",LEXVDT)
"RTN","LEXAB",15,0)
 ;                   
"RTN","LEXAB",16,0)
 ;   INPUT
"RTN","LEXAB",17,0)
 ;     LEXSCH  User input string to search for
"RTN","LEXAB",18,0)
 ;     LEXVDT  Date used to screen out inactive codes
"RTN","LEXAB",19,0)
 ;                   
"RTN","LEXAB",20,0)
 ;   Notes:
"RTN","LEXAB",21,0)
 ;                   
"RTN","LEXAB",22,0)
 ;     1.  If an exact match is found, it is placed at
"RTN","LEXAB",23,0)
 ;         the top of the selection list at 
"RTN","LEXAB",24,0)
 ;         ^TMP("LEXFND",$J)
"RTN","LEXAB",25,0)
 ;                   
"RTN","LEXAB",26,0)
 ;     2.  Returns
"RTN","LEXAB",27,0)
 ;                   
"RTN","LEXAB",28,0)
 ;         0 - Exact match not found
"RTN","LEXAB",29,0)
 ;         1 - Exact match found
"RTN","LEXAB",30,0)
 ;                   
"RTN","LEXAB",31,0)
EN(LEXSCH,LEXVDT) ; Check "B" index for exact match
"RTN","LEXAB",32,0)
 Q:'$L(LEXSCH) 0
"RTN","LEXAB",33,0)
 N LEXLKGL,LEXEM,LEXEMC,LEXLKT S LEXLKT="AB",LEXLKGL=$G(^TMP("LEXSCH",$J,"GBL",0)),LEXEMC=0
"RTN","LEXAB",34,0)
 Q:$G(LEXLKGL)'["757.01" 0
"RTN","LEXAB",35,0)
 D VDT^LEXU N LEXSHOW S LEXSHOW=$G(^TMP("LEXSCH",$J,"DIS",0))
"RTN","LEXAB",36,0)
 N LEXO,LEXE,LEXOK,LEXDES,LEXDSP
"RTN","LEXAB",37,0)
 S (LEXE,LEXOK)=0,LEXO=$$SCH(LEXSCH)
"RTN","LEXAB",38,0)
 F  S LEXO=$O(^LEX(757.01,"B",LEXO)) Q:LEXO=""!(LEXSCH'[LEXO)  D
"RTN","LEXAB",39,0)
 . S (LEXE,LEXOK)=0
"RTN","LEXAB",40,0)
 . F  S LEXE=$O(^LEX(757.01,"B",LEXO,LEXE)) Q:+LEXE=0  D
"RTN","LEXAB",41,0)
 . . Q:'$D(LEXIGN)&(+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1)
"RTN","LEXAB",42,0)
 . . I $$UP^XLFSTR(LEXSCH)=$$UP^XLFSTR($G(^LEX(757.01,LEXE,0))) D
"RTN","LEXAB",43,0)
 . . . S LEXEMC=+($G(LEXEMC)),LEXEMC=LEXEMC+1,LEXEM=LEXE
"RTN","LEXAB",44,0)
 S:+($G(LEXEMC))=1 LEXOK=$G(LEXEM) S:+($G(LEXEMC))'=1 LEXOK=0
"RTN","LEXAB",45,0)
 ; Exact Match Found
"RTN","LEXAB",46,0)
 I +LEXOK>0 D
"RTN","LEXAB",47,0)
 . N LEXFILR S LEXE=LEXOK
"RTN","LEXAB",48,0)
 . ; Filter
"RTN","LEXAB",49,0)
 . I $L($G(LEXFIL)),LEXE>0 S LEXFILR=$$EN^LEXAFIL($G(LEXFIL),LEXE) Q:LEXFILR=0
"RTN","LEXAB",50,0)
 . ; Deactivated
"RTN","LEXAB",51,0)
 . Q:'$D(LEXIGN)&(+($P($G(^LEX(757.01,LEXE,1)),"^",5))=1)
"RTN","LEXAB",52,0)
 . S LEXDES=$$DES(LEXE)
"RTN","LEXAB",53,0)
 . S LEXDSP="" S:$L($G(LEXSHOW)) LEXDSP=$$DSP(LEXE,$G(LEXSHOW),$G(LEXVDT))
"RTN","LEXAB",54,0)
 . D ADDE^LEXAL(LEXE,LEXDES,LEXDSP)
"RTN","LEXAB",55,0)
 . S ^TMP("LEXSCH",$J,"EXM",0)=LEXE
"RTN","LEXAB",56,0)
 . S ^TMP("LEXSCH",$J,"EXM",1)=$G(^LEX(757.01,+LEXE,0))
"RTN","LEXAB",57,0)
 . I '$D(^LEX(757,"B",LEXE)) D
"RTN","LEXAB",58,0)
 . . N LEXME,LEXM S LEXM=+($G(^LEX(757.01,LEXE,1))) Q:LEXM=0
"RTN","LEXAB",59,0)
 . . S LEXME=+($G(^LEX(757,LEXM,0))) Q:LEXM=0  Q:LEXE=LEXME
"RTN","LEXAB",60,0)
 . . I +($G(^LEX(757.01,LEXME,1)))=LEXM D
"RTN","LEXAB",61,0)
 . . . S LEXDES=$$DES(LEXME),LEXDSP="" S:$L($G(LEXSHOW)) LEXDSP=$$DSP(LEXE,$G(LEXSHOW),$G(LEXVDT))
"RTN","LEXAB",62,0)
 . . . D ADDEM^LEXAL(LEXME,LEXDES,LEXDSP)
"RTN","LEXAB",63,0)
 . . . S ^TMP("LEXSCH",$J,"EXC",0)=LEXME
"RTN","LEXAB",64,0)
 . . . S ^TMP("LEXSCH",$J,"EXC",1)=$G(^LEX(757.01,+LEXME,0))
"RTN","LEXAB",65,0)
 Q:$D(^TMP("LEXFND",$J)) 1
"RTN","LEXAB",66,0)
 Q 0
"RTN","LEXAB",67,0)
DES(LEXX) ; Get description flag
"RTN","LEXAB",68,0)
 N LEXDES,LEXE,LEXM S LEXDES="",LEXE=+LEXX
"RTN","LEXAB",69,0)
 S LEXM=$P($G(^LEX(757.01,+($G(LEXX)),1)),"^",1)
"RTN","LEXAB",70,0)
 S LEXM=+($G(^LEX(757,+($G(LEXM)),0)))
"RTN","LEXAB",71,0)
 S:$D(^LEX(757.01,LEXM,3)) LEXDES="*"
"RTN","LEXAB",72,0)
 S LEXX=$G(LEXDES) Q LEXX
"RTN","LEXAB",73,0)
TERM(LEXX) ; Get expression
"RTN","LEXAB",74,0)
 Q $G(^LEX(757.01,LEXX,0))
"RTN","LEXAB",75,0)
DSP(LEXX,LEXDSP,LEXVDT) ; Return displayable text
"RTN","LEXAB",76,0)
 N LEXMCE S LEXMCE=+($G(^LEX(757,+($G(^LEX(757.01,LEXX,1))),0)))
"RTN","LEXAB",77,0)
 I +LEXMCE>0,$D(^LEX(757.01,+LEXMCE,0)) S LEXX=$$SO^LEXASO(+LEXMCE,LEXDSP,1,$G(LEXVDT)) Q LEXX
"RTN","LEXAB",78,0)
 S LEXX=$$SO^LEXASO(LEXX,LEXDSP,1,$G(LEXVDT)) Q LEXX
"RTN","LEXAB",79,0)
SCH(LEXX) ; Search for LEXX a $Orderable variable
"RTN","LEXAB",80,0)
 S LEXX=$$UP^XLFSTR($E(LEXX,1,63)) N LEXIGN
"RTN","LEXAB",81,0)
 S LEXX=$E(LEXX,1,($L(LEXX)-1))_$C($A($E(LEXX,$L(LEXX)))-1)_"~" Q LEXX
"RTN","LEXNDX6")
0^17^B19709895
"RTN","LEXNDX6",1,0)
LEXNDX6 ;ISL/KER - Set/kill indexes (Misc) ;12/19/2014
"RTN","LEXNDX6",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXNDX6",3,0)
 ;               
"RTN","LEXNDX6",4,0)
 ; Global Variables
"RTN","LEXNDX6",5,0)
 ;    ^LEX(757.4)         N/A
"RTN","LEXNDX6",6,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXNDX6",7,0)
 ;               
"RTN","LEXNDX6",8,0)
 ; External References
"RTN","LEXNDX6",9,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXNDX6",10,0)
 ;               
"RTN","LEXNDX6",11,0)
 ; NEWed/KILLed by FileMan
"RTN","LEXNDX6",12,0)
 ;    DA
"RTN","LEXNDX6",13,0)
 ;    
"RTN","LEXNDX6",14,0)
SRA ; Set Shortcut index
"RTN","LEXNDX6",15,0)
 Q:'$D(X)!('$D(DA))!('$D(DA(1)))  N LEXKW S LEXKW=$P($G(^LEX(757.4,DA(1),1,DA,0)),U,1) S:$L(LEXKW) ^LEX(757.4,"ARA",$E($$UP^XLFSTR(LEXKW),1,63),X,DA(1),DA)="" Q
"RTN","LEXNDX6",16,0)
KRA ; Kill Shortcut index
"RTN","LEXNDX6",17,0)
 Q:'$D(X)!('$D(DA))!('$D(DA(1)))  N LEXKW S LEXKW=$P($G(^LEX(757.4,DA(1),1,DA,0)),U,1) K:$L(LEXKW) ^LEX(757.4,"ARA",$E($$UP^XLFSTR(LEXKW),1,63),X,DA(1),DA) Q
"RTN","LEXNDX6",18,0)
 ;
"RTN","LEXNDX6",19,0)
SSF ; Set String Frequency
"RTN","LEXNDX6",20,0)
 Q:'$L($G(X))  N LEXIDX,LEXE
"RTN","LEXNDX6",21,0)
 S LEXIDX="",LEXE=X,X=$$UP^XLFSTR(X) D PTX^LEXTOKN
"RTN","LEXNDX6",22,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXNDX6",23,0)
 . N LEXNT,LEXT,LEXW,LEXI,LEXP,LEXS S LEXI=""
"RTN","LEXNDX6",24,0)
 . S LEXI=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXNDX6",25,0)
 . . S LEXW=$O(^TMP("LEXTKN",$J,LEXI,"")) Q:'$L(LEXW)
"RTN","LEXNDX6",26,0)
 . . F LEXP=1:1:$L(LEXW) D
"RTN","LEXNDX6",27,0)
 . . . S LEXS=$E(LEXW,1,LEXP)
"RTN","LEXNDX6",28,0)
 . . . ; Re-indexing All Entries of the file
"RTN","LEXNDX6",29,0)
 . . . I '$D(LEXRECAL) D  Q
"RTN","LEXNDX6",30,0)
 . . . . S LEXT=0 I $D(^LEX(757.01,"ASL",LEXS)) D
"RTN","LEXNDX6",31,0)
 . . . . . S LEXT=$O(^LEX(757.01,"ASL",LEXS,0))
"RTN","LEXNDX6",32,0)
 . . . . S LEXNT=LEXT+1 Q:LEXNT'>0
"RTN","LEXNDX6",33,0)
 . . . . K ^LEX(757.01,"ASL",LEXS)
"RTN","LEXNDX6",34,0)
 . . . . S ^LEX(757.01,"ASL",LEXS,LEXNT)=""
"RTN","LEXNDX6",35,0)
 . . . ; Re-indexing One Entry of the file
"RTN","LEXNDX6",36,0)
 . . . S LEXNT=$$FRE(LEXS) Q:LEXNT'>0
"RTN","LEXNDX6",37,0)
 . . . K ^LEX(757.01,"ASL",LEXS)
"RTN","LEXNDX6",38,0)
 . . . S ^LEX(757.01,"ASL",LEXS,LEXNT)=""
"RTN","LEXNDX6",39,0)
 S X=LEXE K ^TMP("LEXTKN",$J) N DICNT,DIKDASV,DIKSAVE K LEXRECAL
"RTN","LEXNDX6",40,0)
 Q
"RTN","LEXNDX6",41,0)
KSF ; Kill String Frequency
"RTN","LEXNDX6",42,0)
 Q:'$L($G(X))  N LEXIDX,LEXE
"RTN","LEXNDX6",43,0)
 S LEXIDX="",LEXE=X,X=$$UP^XLFSTR(X) D PTX^LEXTOKN
"RTN","LEXNDX6",44,0)
 I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXNDX6",45,0)
 . N LEXNT,LEXT,LEXW,LEXI,LEXP,LEXS S LEXI=""
"RTN","LEXNDX6",46,0)
 . S LEXI=0 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXNDX6",47,0)
 . . S LEXW=$O(^TMP("LEXTKN",$J,LEXI,""))
"RTN","LEXNDX6",48,0)
 . . I $L(LEXW) F LEXP=1:1:$L(LEXW) D
"RTN","LEXNDX6",49,0)
 . . . S LEXS=$E(LEXW,1,LEXP),LEXT=0
"RTN","LEXNDX6",50,0)
 . . . I $D(^LEX(757.01,"ASL",LEXS)) D
"RTN","LEXNDX6",51,0)
 . . . . S LEXT=$O(^LEX(757.01,"ASL",LEXS,0))
"RTN","LEXNDX6",52,0)
 . . . S LEXNT=LEXT-1
"RTN","LEXNDX6",53,0)
 . . . I LEXNT'>0 K ^LEX(757.01,"ASL",LEXS) Q
"RTN","LEXNDX6",54,0)
 . . . K ^LEX(757.01,"ASL",LEXS)
"RTN","LEXNDX6",55,0)
 . . . S ^LEX(757.01,"ASL",LEXS,LEXNT)=""
"RTN","LEXNDX6",56,0)
 . . . 
"RTN","LEXNDX6",57,0)
 S X=LEXE K ^TMP("LEXTKN",$J)
"RTN","LEXNDX6",58,0)
 Q
"RTN","LEXNDX6",59,0)
FRE(X) ; Frequency Counter of String
"RTN","LEXNDX6",60,0)
 N LEX,LEXA,LEXE,LEXIT,LEXM,LEXN,LEXO,LEXOUT,LEXP,LEXRT,LEXRT2,LEXS,LEXT,LEXTKN
"RTN","LEXNDX6",61,0)
 S LEXS=$$UP^XLFSTR($G(X)) Q:'$L(LEXS) 0  S LEXRT="" S:$D(^LEX(757.01,"AWRD")) LEXRT="^LEX(757.01,""AWRD"","
"RTN","LEXNDX6",62,0)
 Q:'$L(LEXRT) 0  S (LEXA,LEXN,LEXT)=0
"RTN","LEXNDX6",63,0)
 S:$L(LEXS)>1 LEXO=$E(LEXS,1,($L(LEXS)-1))_$C(($A($E(LEXS,$L(LEXS)))-1))_"~"
"RTN","LEXNDX6",64,0)
 S:$L(LEXS)=1 LEXO=$C(($A(LEXS)-1))_"~" S LEXIT=0
"RTN","LEXNDX6",65,0)
 F  S LEXO=$O(@(LEXRT_""""_LEXO_""")")) D  Q:LEXIT>0
"RTN","LEXNDX6",66,0)
 . S:'$L(LEXO) LEXIT=1 S:$E(LEXO,1,$L(LEXS))'=LEXS LEXIT=1
"RTN","LEXNDX6",67,0)
 . Q:LEXIT>0  N LEXM S LEXM=0 F  S LEXM=$O(@(LEXRT_""""_LEXO_""","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXNDX6",68,0)
 . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_""""_LEXO_""","_LEXM_","
"RTN","LEXNDX6",69,0)
 . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1,LEXA=LEXA+1
"RTN","LEXNDX6",70,0)
 I $TR(LEXS,".","")?1N.N,$L(LEXS,".")'>2  I +LEXS=LEXS D
"RTN","LEXNDX6",71,0)
 . N LEXFC S LEXFC=$E(LEXS,1) S:$E(LEXS,1)?1N LEXO=LEXS-.000000001
"RTN","LEXNDX6",72,0)
 . S:$E(LEXS,1)="." LEXO=.000000001 S LEXIT=0
"RTN","LEXNDX6",73,0)
 . F  S LEXO=$O(@(LEXRT_+LEXO_")")) D  Q:LEXIT>0  Q:'$L(LEXO)
"RTN","LEXNDX6",74,0)
 . . S:LEXFC?1N&($E(LEXO,1)'?1N) LEXIT=1
"RTN","LEXNDX6",75,0)
 . . S:LEXFC?1P&($E(LEXO,1)'?1P) LEXIT=1 Q:LEXIT>0
"RTN","LEXNDX6",76,0)
 . . Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXS))'=LEXS  N LEXM S LEXM=0
"RTN","LEXNDX6",77,0)
 . . F  S LEXM=$O(@(LEXRT_+LEXO_","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXNDX6",78,0)
 . . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_+LEXO_","_LEXM_","
"RTN","LEXNDX6",79,0)
 . . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1,LEXN=LEXN+1
"RTN","LEXNDX6",80,0)
 S X=LEXT
"RTN","LEXNDX6",81,0)
 Q X
"RTN","LEXNDX6",82,0)
 ;
"RTN","LEXNDX6",83,0)
SSUP ; Set Supplemental Words
"RTN","LEXNDX6",84,0)
 N LEXX,LEXDA1,LEXDA,LEXMC
"RTN","LEXNDX6",85,0)
 S LEXX=$G(X) Q:'$L(LEXX)  S LEXDA1=+($G(DA(1)))
"RTN","LEXNDX6",86,0)
 Q:LEXDA1=0  S LEXDA=+($G(DA)) Q:LEXDA=0
"RTN","LEXNDX6",87,0)
 S LEXMC=$$MC(LEXDA1) Q:LEXMC=0
"RTN","LEXNDX6",88,0)
 S ^LEX(757.01,"AWRD",$$UP^XLFSTR(LEXX),LEXDA1,LEXMC,LEXDA)=""
"RTN","LEXNDX6",89,0)
 Q
"RTN","LEXNDX6",90,0)
KSUP ; Kill Supplemental Words
"RTN","LEXNDX6",91,0)
 N LEXX,LEXDA1,LEXDA,LEXMC
"RTN","LEXNDX6",92,0)
 S LEXX=$G(X) Q:'$L(LEXX)  S LEXDA1=+($G(DA(1))) Q:LEXDA1=0  S LEXDA=+($G(DA)) Q:LEXDA=0
"RTN","LEXNDX6",93,0)
 S LEXMC=$$MC(LEXDA1) Q:LEXMC=0
"RTN","LEXNDX6",94,0)
 K ^LEX(757.01,"AWRD",LEXX,LEXDA1,LEXMC,LEXDA)
"RTN","LEXNDX6",95,0)
 K ^LEX(757.01,"AWRD",$$UP^XLFSTR(LEXX),LEXDA1,LEXMC,LEXDA)
"RTN","LEXNDX6",96,0)
 Q
"RTN","LEXNDX6",97,0)
 ; 
"RTN","LEXNDX6",98,0)
 ; Miscellaneous
"RTN","LEXNDX6",99,0)
MC(X) ; Major Concept IEN
"RTN","LEXNDX6",100,0)
 N LEXX S LEXX=+($G(X)) Q:LEXX=0 0
"RTN","LEXNDX6",101,0)
 S LEXX=+($G(^LEX(757.01,LEXX,1))) Q:LEXX=0 0
"RTN","LEXNDX6",102,0)
 S LEXX=+($G(^LEX(757,LEXX,0))) Q:LEXX=0 0
"RTN","LEXNDX6",103,0)
 S X=LEXX Q X
"RTN","LEXQDRG")
0^19^B71624040
"RTN","LEXQDRG",1,0)
LEXQDRG ;ISL/KER - Query - DRG Calc. ;12/19/2014
"RTN","LEXQDRG",2,0)
 ;;2.0;LEXICON UTILITY;**86**;Sep 23, 1996;Build 1
"RTN","LEXQDRG",3,0)
 ;               
"RTN","LEXQDRG",4,0)
 ; Global Variables
"RTN","LEXQDRG",5,0)
 ;    ^XTMP(ID)           SACC 2.3.2.5.2
"RTN","LEXQDRG",6,0)
 ;               
"RTN","LEXQDRG",7,0)
 ; External References
"RTN","LEXQDRG",8,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXQDRG",9,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXQDRG",10,0)
 ;    ^DIR                ICR  10026
"RTN","LEXQDRG",11,0)
 ;    ^ICDDRG             ICR    371
"RTN","LEXQDRG",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQDRG",13,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXQDRG",14,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQDRG",15,0)
 ;               
"RTN","LEXQDRG",16,0)
 ; Non-Namespaced variables used
"RTN","LEXQDRG",17,0)
 ; 
"RTN","LEXQDRG",18,0)
 ;   ICDDATE    Effective Date                         nnnnnnn
"RTN","LEXQDRG",19,0)
 ;   ICDEXP     Patient died during episode of care    1/0
"RTN","LEXQDRG",20,0)
 ;   ICDTRS     Was patient transferred to acute care  1/0
"RTN","LEXQDRG",21,0)
 ;   ICDDMS     Patient discharged against med advice  1/0
"RTN","LEXQDRG",22,0)
 ;   SEX        Patient's Sex (pre-surgical)           M/F
"RTN","LEXQDRG",23,0)
 ;   AGE        Patient's Age                          Numeric
"RTN","LEXQDRG",24,0)
 ;   ICDDX(1)   ICD Principal Diagnosis file 80        IEN
"RTN","LEXQDRG",25,0)
 ;   ICDDX(n)   ICD Secondary Diagnosis file 80        IENs
"RTN","LEXQDRG",26,0)
 ;   ICDPRC(n)  ICD Procedures file 80.1               IENs
"RTN","LEXQDRG",27,0)
 ;   ICDPOA(n)  Presence on Admission     (Y,N,W,U or BLANK)
"RTN","LEXQDRG",28,0)
 ; 
"RTN","LEXQDRG",29,0)
EN ; Main Entry Point
"RTN","LEXQDRG",30,0)
 N AGE,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICDDATE,ICDDMS,ICDDRG,ICDDX,ICDEXP,ICDPOA
"RTN","LEXQDRG",31,0)
 N ICDPRC,ICDTRS,LEX,LEXB,LEXBG,LEXC,LEXCUR,LEXENV,LEXF,LEXGDAT,LEXHAS
"RTN","LEXQDRG",32,0)
 N LEXI,LEXID,LEXIEN,LEXIT,LEXLS,LEXN,LEXOK,LEXPTF,LEXS,LEXV,LEXX,SEX,X,Y
"RTN","LEXQDRG",33,0)
 S LEXENV=$$EV Q:'$L(LEXENV)
"RTN","LEXQDRG",34,0)
 S U="^",(LEXOK,LEXPTF,LEXCUR)=0 S:$D(LEXDEV) LEXPTF=$$PAT
"RTN","LEXQDRG",35,0)
 I +LEXPTF'>0,$L($P(LEXPTF,"^",2)) W !!,"   ",$P(LEXPTF,"^",2) Q
"RTN","LEXQDRG",36,0)
 I LEXPTF>0 D EN^LEXQDRG3  Q
"RTN","LEXQDRG",37,0)
 S LEXHAS=$$HASPRE^LEXQDRG2 S:LEXHAS>0 LEXCUR=$$UC S:LEXCUR>0 LEXOK=$$GETPRE^LEXQDRG2
"RTN","LEXQDRG",38,0)
 I LEXCUR>0,LEXOK'>0,$L($P(LEXOK,"^",2)) W !!,"   ",$P(LEXOK,"^",2) Q
"RTN","LEXQDRG",39,0)
 I LEXCUR>0,LEXOK'>0 W !!,"   Missing or invalid input variables" Q
"RTN","LEXQDRG",40,0)
 S:LEXCUR'>0 LEXOK=$$ASK I +LEXOK'>0 D  Q
"RTN","LEXQDRG",41,0)
 . I $L($P(LEXOK,"^",2)) W !!,"   ",$P(LEXOK,"^",2) Q
"RTN","LEXQDRG",42,0)
 . W !!,"   Missing or invalid input variables"
"RTN","LEXQDRG",43,0)
 D ^ICDDRG I +($G(ICDDRG))>0 D
"RTN","LEXQDRG",44,0)
 . W:$L($G(IOF)) @IOF D DCD^LEXQDRG4,WRT^LEXQDRG4($G(ICDDRG),$G(ICDDATE))
"RTN","LEXQDRG",45,0)
 Q
"RTN","LEXQDRG",46,0)
UC(X) ; Use Previously Saved Values
"RTN","LEXQDRG",47,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXN,LEXV,Y
"RTN","LEXQDRG",48,0)
 S LEXID="LEXQDRG "_$G(DUZ)_" UC"
"RTN","LEXQDRG",49,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60)
"RTN","LEXQDRG",50,0)
 S DIR(0)="YAO",DIR("A")=" Use previously saved values:  (Y/N)  "
"RTN","LEXQDRG",51,0)
 S (X,DIR("PRE"))="S X=$$UCP^LEXQDRG($G(X))"
"RTN","LEXQDRG",52,0)
 S LEXB=$G(^XTMP(LEXID,"UC")) S:$L(LEXB) DIR("B")=LEXB
"RTN","LEXQDRG",53,0)
 D ^DIR Q:$D(DTOUT) "-1^'Use previously saved values' selection timed-out"
"RTN","LEXQDRG",54,0)
 I $D(DIROUT)!($D(DIRUT))!($D(DUOUT)) D  Q X
"RTN","LEXQDRG",55,0)
 . S X="-1^'Use previously saved values' selection aborted"
"RTN","LEXQDRG",56,0)
 S:"^0^1^"'[("^"_Y_"^") Y="^"
"RTN","LEXQDRG",57,0)
 Q:"^0^1^"'[("^"_Y_"^") "-1^'Use previously saved values' selection aborted"
"RTN","LEXQDRG",58,0)
 S X=Y,LEXV=$S(Y="0":"No",Y="1":"Yes",1:"") I $L(LEXV) D
"RTN","LEXQDRG",59,0)
 . S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Use Previous"
"RTN","LEXQDRG",60,0)
 . S ^XTMP(LEXID,"UC")=LEXV
"RTN","LEXQDRG",61,0)
 Q X
"RTN","LEXQDRG",62,0)
UCP(X) ; Use Previously Saved Values (Preprocess)
"RTN","LEXQDRG",63,0)
 S X=$G(X) Q:'$L(X) ""  Q:X["?" "??"
"RTN","LEXQDRG",64,0)
 I $G(DIR(0))["YAO",$E(X,1)'="^","^Y^N^"'[("^"_$$UP^XLFSTR($E(X,1)_"^")) Q "??"
"RTN","LEXQDRG",65,0)
 Q X
"RTN","LEXQDRG",66,0)
ASK(X) ; Ask for input parameters
"RTN","LEXQDRG",67,0)
 N LEXIMP S LEXIMP=$$IMPDATE^LEXU(30)
"RTN","LEXQDRG",68,0)
 S X=$$EFF^LEXQDRG3 Q:X'?7N X S (LEXGDAT,ICDDATE)=X
"RTN","LEXQDRG",69,0)
 I ICDDATE<LEXIMP S X=$$AGE Q:X'?1N.N!(X["^") X S AGE=X
"RTN","LEXQDRG",70,0)
 S X=$$SEX Q:"^M^F^"'[("^"_X_"^") X S SEX=X
"RTN","LEXQDRG",71,0)
 S X=$$EXP Q:"^1^0^"'[("^"_X_"^") X S ICDEXP=X
"RTN","LEXQDRG",72,0)
 S:$G(ICDEXP)>0 (ICDDMS,ICDTRS)=0
"RTN","LEXQDRG",73,0)
 I $G(ICDEXP)'>0 S X=$$DMS Q:"^1^0^"'[("^"_X_"^") X S ICDDMS=X
"RTN","LEXQDRG",74,0)
 I $G(ICDEXP)'>0 S X=$$TRS Q:"^1^0^"'[("^"_X_"^") X S ICDTRS=X
"RTN","LEXQDRG",75,0)
 K ICDDX W ! S X=$$PDX^LEXQDRG2(ICDDATE) Q:+X'>0 X  W ! S X=$$SEC^LEXQDRG2(ICDDATE) Q:+X'>0 X
"RTN","LEXQDRG",76,0)
 K ICDDX("B") K ICDPRC W ! S X=$$PRO^LEXQDRG2(ICDDATE) Q:+X'>0 X  K ICDPRC("B")
"RTN","LEXQDRG",77,0)
 Q 1
"RTN","LEXQDRG",78,0)
AGE(X) ;   What is the patient's age
"RTN","LEXQDRG",79,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXN,LEXX,Y
"RTN","LEXQDRG",80,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" AGE"
"RTN","LEXQDRG",81,0)
 S LEXB=$G(^XTMP(LEXID,"PRE")) S:LEXB>0 DIR("B")=LEXB
"RTN","LEXQDRG",82,0)
 S DIR(0)="NOA^0:124:0",DIR("A")=" Enter the patient's age:  (0-124)  "
"RTN","LEXQDRG",83,0)
 S (DIR("?"),DIR("??"))="^D AGEH^LEXQDRG"
"RTN","LEXQDRG",84,0)
 S DIR("PRE")="S:X[""?"" X=""??"" S LEXX=X"
"RTN","LEXQDRG",85,0)
 D ^DIR Q:X["^"!($D(DIROUT))!($D(DIRUT))!($D(DTOUT))!($D(DUOUT)) "^"
"RTN","LEXQDRG",86,0)
 W:'$L($G(LEXX))&(+Y>0)&(+Y<125) +Y," year",$S(X>1:"s",1:"")," old"
"RTN","LEXQDRG",87,0)
 W:$L($G(LEXX))&(+Y>0)&(+Y<125) " year",$S(X>1:"s",1:"")," old"
"RTN","LEXQDRG",88,0)
 I +Y>0 S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=Y
"RTN","LEXQDRG",89,0)
 S X=Y
"RTN","LEXQDRG",90,0)
 Q X
"RTN","LEXQDRG",91,0)
AGEH ;   What is the patient's age Help
"RTN","LEXQDRG",92,0)
 W !,"   Enter the patient's age, 0-124."
"RTN","LEXQDRG",93,0)
 Q
"RTN","LEXQDRG",94,0)
SEX(X) ;   What is the sex of the patient
"RTN","LEXQDRG",95,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXN,Y
"RTN","LEXQDRG",96,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" SEX"
"RTN","LEXQDRG",97,0)
 S LEXB=$G(^XTMP(LEXID,"PRE")) S:'$L(LEXB) LEXB="Male"
"RTN","LEXQDRG",98,0)
 S LEXB=$S(LEXB="M":"Male",LEXB="F":"Female",1:"") S:$L(LEXB) DIR("B")=LEXB
"RTN","LEXQDRG",99,0)
 S DIR(0)="SAO^M:Male;F:Female",DIR("A")=" Enter the patient's sex:  (M/F)  "
"RTN","LEXQDRG",100,0)
 S (DIR("??"),DIR("?"))="^D SEXH^LEXQDRG"
"RTN","LEXQDRG",101,0)
 S DIR("PRE")="S X=$$UP^XLFSTR(X) S:$E(X,1)'=""M""&($E(X,1)'=""F"")&($L(X)) X=""??"" S:X[""?"" X=""??"""
"RTN","LEXQDRG",102,0)
 D ^DIR Q:X["^"!($D(DIROUT))!($D(DIRUT))!($D(DTOUT))!($D(DUOUT)) "^"
"RTN","LEXQDRG",103,0)
 I "^M^F^"[("^"_Y_"^") S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=Y
"RTN","LEXQDRG",104,0)
 S X=Y
"RTN","LEXQDRG",105,0)
 Q X
"RTN","LEXQDRG",106,0)
SEXH ;   What is the sex of the patient Help
"RTN","LEXQDRG",107,0)
 W !,"   Answer M for Male or F for Female."
"RTN","LEXQDRG",108,0)
 Q
"RTN","LEXQDRG",109,0)
DMS(X) ;   Discharged against medical advice
"RTN","LEXQDRG",110,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXN,Y
"RTN","LEXQDRG",111,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" DMS"
"RTN","LEXQDRG",112,0)
 S LEXB=$G(^XTMP(LEXID,"PRE")),LEXB=$S(LEXB="1":"YES",LEXB="0":"NO",1:"") S:$L(LEXB) DIR("B")=LEXB
"RTN","LEXQDRG",113,0)
 S DIR(0)="YAO",DIR("A")=" Was the patient discharged against medical advice?  (Y/N)  "
"RTN","LEXQDRG",114,0)
 S DIR("?")="   Answer YES if the patient was discharged against medical advice."
"RTN","LEXQDRG",115,0)
 S DIR("PRE")="S:X[""?"" X=""?""" D ^DIR
"RTN","LEXQDRG",116,0)
 Q:$D(DTOUT) "0^'Discharged against medical advice' selection timed-out"
"RTN","LEXQDRG",117,0)
 I $D(DIROUT)!($D(DIRUT))!($D(DUOUT))!("^1^0^"'[("^"_Y_"^")) D  Q X
"RTN","LEXQDRG",118,0)
 . S X="0^'Discharged against medical advice' selection aborted"
"RTN","LEXQDRG",119,0)
 I "^1^0^"[("^"_Y_"^") S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=Y
"RTN","LEXQDRG",120,0)
 S X=Y
"RTN","LEXQDRG",121,0)
 Q X
"RTN","LEXQDRG",122,0)
TRS(X) ;   Was the patient transferred to acute care
"RTN","LEXQDRG",123,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXN,Y
"RTN","LEXQDRG",124,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" TRS"
"RTN","LEXQDRG",125,0)
 S LEXB=$G(^XTMP(LEXID,"PRE")),LEXB=$S(LEXB="1":"YES",LEXB="0":"NO",1:"") S:$L(LEXB) DIR("B")=LEXB
"RTN","LEXQDRG",126,0)
 S DIR(0)="YAO",DIR("A")=" Was the patient transferred to an acute care facility?  (Y/N)  "
"RTN","LEXQDRG",127,0)
 S DIR("?")="   Answer YES if the patient was transferred to an acute care facility."
"RTN","LEXQDRG",128,0)
 S DIR("PRE")="S:X[""?"" X=""?"""
"RTN","LEXQDRG",129,0)
 D ^DIR Q:$D(DTOUT) "0^'Was the patient transferred to acute care' selection timed-out"
"RTN","LEXQDRG",130,0)
 I $D(DIROUT)!($D(DIRUT))!($D(DUOUT))!("^1^0^"'[("^"_Y_"^")) D  Q X
"RTN","LEXQDRG",131,0)
 . S X="0^'Was the patient transferred to acute care' selection aborted"
"RTN","LEXQDRG",132,0)
 I "^1^0^"[("^"_Y_"^") S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=Y
"RTN","LEXQDRG",133,0)
 S X=Y
"RTN","LEXQDRG",134,0)
 Q X
"RTN","LEXQDRG",135,0)
EXP(X) ;   Did the patient die during episode of care
"RTN","LEXQDRG",136,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXN,Y
"RTN","LEXQDRG",137,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" EXP"
"RTN","LEXQDRG",138,0)
 S LEXB=$G(^XTMP(LEXID,"PRE")),LEXB=$S(LEXB="1":"YES",LEXB="0":"NO",1:"") S:$L(LEXB) DIR("B")=LEXB
"RTN","LEXQDRG",139,0)
 S DIR(0)="YAO",DIR("A")=" Did the patient die during this episode of care?    (Y/N)  "
"RTN","LEXQDRG",140,0)
 S DIR("?")="   Answer YES if the patient died during this episode of care."
"RTN","LEXQDRG",141,0)
 S DIR("PRE")="S:X[""?"" X=""?""" D ^DIR
"RTN","LEXQDRG",142,0)
 Q:$D(DTOUT) "0^'Did the patient die during episode of care' selection timed-out"
"RTN","LEXQDRG",143,0)
 I $D(DIROUT)!($D(DIRUT))!($D(DUOUT))!("^1^0^"'[("^"_Y_"^")) D  Q X
"RTN","LEXQDRG",144,0)
 . S X="0^'Did the patient die during episode of care' selection aborted"
"RTN","LEXQDRG",145,0)
 I "^1^0^"[("^"_Y_"^") S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=Y
"RTN","LEXQDRG",146,0)
 S X=Y
"RTN","LEXQDRG",147,0)
 Q X
"RTN","LEXQDRG",148,0)
PAT(X) ;   Patient
"RTN","LEXQDRG",149,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXN,Y
"RTN","LEXQDRG",150,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" PAT"
"RTN","LEXQDRG",151,0)
 S LEXB=$G(^XTMP(LEXID,"PRE")),LEXB=$S(LEXB="1":"YES",1:"NO") S:$L(LEXB) DIR("B")=LEXB
"RTN","LEXQDRG",152,0)
 S DIR(0)="YAO",DIR("A")=" Calculate DRGs for a Registered Patient?  (Y/N)  "
"RTN","LEXQDRG",153,0)
 S DIR("?")="Enter 'Yes' if the patient has been previously registered, enter 'No' for other patient."
"RTN","LEXQDRG",154,0)
 S DIR("PRE")="S:X[""?"" X=""?""" D ^DIR
"RTN","LEXQDRG",155,0)
 Q:$D(DTOUT) "0^'Calculate DRGs for a Registered Patient' selection timed-out"
"RTN","LEXQDRG",156,0)
 I $D(DIROUT)!($D(DIRUT))!($D(DUOUT))!("^1^0^"'[("^"_Y_"^")) D  Q X
"RTN","LEXQDRG",157,0)
 . S X="0^'Calculate DRGs for a Registered Patient' selection aborted"
"RTN","LEXQDRG",158,0)
 I "^1^0^"[("^"_Y_"^") S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=Y
"RTN","LEXQDRG",159,0)
 S X=Y
"RTN","LEXQDRG",160,0)
 Q X
"RTN","LEXQDRG",161,0)
SXTMP ;   Show ^XTMP DX/PR
"RTN","LEXQDRG",162,0)
 N LEXSYS F LEXSYS="ICD","ICP","10D","ICP" D
"RTN","LEXQDRG",163,0)
 . N LEXCT,LEXIN S LEXCT=0
"RTN","LEXQDRG",164,0)
 . F LEXIN=1:1:10 D
"RTN","LEXQDRG",165,0)
 . . N LEXNN,LEXNC,LEXID
"RTN","LEXQDRG",166,0)
 . . S LEXID="LEXQDRG "_+($G(DUZ))_" DX"_LEXIN_" "_LEXSYS
"RTN","LEXQDRG",167,0)
 . . S LEXNN="^XTMP("""_LEXID_""")",LEXNC="^XTMP("""_LEXID_""","
"RTN","LEXQDRG",168,0)
 . . F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEXQDRG",169,0)
 . . . S LEXCT=LEXCT+1 W:LEXCT=1 ! W !,LEXNN,"=",@LEXNN
"RTN","LEXQDRG",170,0)
 . F LEXIN=1:1:10 D
"RTN","LEXQDRG",171,0)
 . . N LEXNN,LEXNC,LEXID S LEXID="LEXQDRG "_+($G(DUZ))_" PR"_LEXIN_" "_LEXSYS
"RTN","LEXQDRG",172,0)
 . . S LEXNN="^XTMP("""_LEXID_""")",LEXNC="^XTMP("""_LEXID_""","
"RTN","LEXQDRG",173,0)
 . . F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  D
"RTN","LEXQDRG",174,0)
 . . . S LEXCT=LEXCT+1 W:LEXCT=1 ! W !,LEXNN,"=",@LEXNN
"RTN","LEXQDRG",175,0)
 W !
"RTN","LEXQDRG",176,0)
 Q
"RTN","LEXQDRG",177,0)
EV(X) ;   Check environment
"RTN","LEXQDRG",178,0)
 N LEX,LEXDEV S DT=$$DT^XLFDT D HOME^%ZIS S U="^" I +($G(DUZ))=0 W !!,?5,"DUZ not defined" Q 0
"RTN","LEXQDRG",179,0)
 S LEX=$$GET1^DIQ(200,(DUZ_","),.01) I '$L(LEX) W !!,?5,"DUZ not valid" Q 0
"RTN","LEXQDRG",180,0)
 Q 1
"RTN","LEXQDRG2")
0^20^B132520420
"RTN","LEXQDRG2",1,0)
LEXQDRG2 ;ISL/KER - Query - DRG Calc. (PDX/SDX/PRO/PRE) ;12/19/2014
"RTN","LEXQDRG2",2,0)
 ;;2.0;LEXICON UTILITY;**86**;Sep 23, 1996;Build 1
"RTN","LEXQDRG2",3,0)
 ;               
"RTN","LEXQDRG2",4,0)
 ; Global Variables
"RTN","LEXQDRG2",5,0)
 ;    ^ICD9(              ICR 4485
"RTN","LEXQDRG2",6,0)
 ;    ^ICD0(              ICR 4486
"RTN","LEXQDRG2",7,0)
 ;    ^XTMP(ID)           SACC 2.3.2.5.2
"RTN","LEXQDRG2",8,0)
 ;               
"RTN","LEXQDRG2",9,0)
 ; External References
"RTN","LEXQDRG2",10,0)
 ;    EN^DDIOL            ICR  10142
"RTN","LEXQDRG2",11,0)
 ;    ^DIC                ICR  10006
"RTN","LEXQDRG2",12,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXQDRG2",13,0)
 ;    ^DIR                ICR  10026
"RTN","LEXQDRG2",14,0)
 ;    $$HAC^ICDEX         ICR   5747
"RTN","LEXQDRG2",15,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQDRG2",16,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQDRG2",17,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQDRG2",18,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXQDRG2",19,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXQDRG2",20,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQDRG2",21,0)
 ;               
"RTN","LEXQDRG2",22,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQDRG2",23,0)
 ;               
"RTN","LEXQDRG2",24,0)
 ;   ICDDATE   Effective Date                         nnnnnnn
"RTN","LEXQDRG2",25,0)
 ;   ICDEXP    Patient died during episode of care    1/0
"RTN","LEXQDRG2",26,0)
 ;   ICDTRS    Was patient transferred to acute care  1/0
"RTN","LEXQDRG2",27,0)
 ;   ICDDMS    Patient discharged against med advice  1/0
"RTN","LEXQDRG2",28,0)
 ;   ICDPOA    Present on Admission                   Y/N/U/W
"RTN","LEXQDRG2",29,0)
 ;   SEX       Patient's Sex (pre-surgical            M/F
"RTN","LEXQDRG2",30,0)
 ;   AGE       Patient's Age                          Numeric
"RTN","LEXQDRG2",31,0)
 ;               
"RTN","LEXQDRG2",32,0)
 ; Get Codes
"RTN","LEXQDRG2",33,0)
PDX(X) ;   Principal DX
"RTN","LEXQDRG2",34,0)
 N DIC,DTOUT,DUOUT,LEXC,LEXF,LEXID,LEXIEN,LEXPDX,LEXN,LEXSYS,LEXPOA,LEXIT,Y,ICDDATE
"RTN","LEXQDRG2",35,0)
 S LEXIT=0,ICDDATE=$G(X) Q:$P(ICDDATE,".",1)'?7N "0^Date not Passed"
"RTN","LEXQDRG2",36,0)
 S LEXSYS="10D" S:ICDDATE<$$IMPDATE^LEXU(30) LEXSYS="ICD"
"RTN","LEXQDRG2",37,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" DX1"_" "_LEXSYS
"RTN","LEXQDRG2",38,0)
 S LEXIEN=$G(^XTMP(LEXID,"PRE")),LEXC=$$CODEC^ICDEX(80,LEXIEN)
"RTN","LEXQDRG2",39,0)
 S:$L(LEXC)&(LEXC'["^") DIC("B")=LEXC
"RTN","LEXQDRG2",40,0)
 S DIC=$$ROOT^ICDEX(80),DIC(0)="AEQMZI"
"RTN","LEXQDRG2",41,0)
 S DIC("A")=" Enter the Principal Diagnosis: "
"RTN","LEXQDRG2",42,0)
 S DIC("S")="I '$P($$ICDDX^ICDEX(+Y,$G(ICDDATE),,""I""),U,5),$$ISVALID^ICDEX(80,+Y,$G(ICDDATE))"
"RTN","LEXQDRG2",43,0)
 D ^DIC I $G(X)["^^" D
"RTN","LEXQDRG2",44,0)
 . S DUOUT=1 N LEXID,LEXB,LEXQ
"RTN","LEXQDRG2",45,0)
 . S LEXID="LEXQDRG "_$G(DUZ)_" DX1"_" "_LEXSYS K ^XTMP(LEXID)
"RTN","LEXQDRG2",46,0)
 . S LEXBG=2,LEXQ=0 F LEXS=LEXBG:1 D  Q:LEXQ
"RTN","LEXQDRG2",47,0)
 . . N LEXID,LEXIEN S LEXID="LEXQDRG "_$G(DUZ)_" DX"_LEXS_" "_LEXSYS
"RTN","LEXQDRG2",48,0)
 . . S LEXIEN=$G(^XTMP(LEXID,"PRE")) K:LEXIEN>0 ^XTMP(LEXID) S:LEXIEN'>0 LEXQ=1
"RTN","LEXQDRG2",49,0)
 . S LEXBG=1,LEXQ=0 F LEXS=LEXBG:1 D  Q:LEXQ
"RTN","LEXQDRG2",50,0)
 . . N LEXID,LEXIEN S LEXID="LEXQDRG "_$G(DUZ)_" PR"_LEXS_" "_LEXSYS
"RTN","LEXQDRG2",51,0)
 . . S LEXIEN=$G(^XTMP(LEXID,"PRE")) K:LEXIEN>0 ^XTMP(LEXID) S:LEXIEN'>0 LEXQ=1
"RTN","LEXQDRG2",52,0)
 Q:$D(DTOUT) "0^Principal diagnosis selection timed-out"
"RTN","LEXQDRG2",53,0)
 Q:$D(DUOUT) "0^Principal diagnosis selection aborted"
"RTN","LEXQDRG2",54,0)
 Q:+Y'>0 "0^Missing or invalid principal diagnosis"  S LEXPDX=+Y,LEXPOA="",LEXIT=0
"RTN","LEXQDRG2",55,0)
 I LEXSYS="10D",+LEXPDX>0 S LEXPOA=$$POA(+LEXPDX) S:LEXPOA["^" LEXIT=1
"RTN","LEXQDRG2",56,0)
 Q:LEXIT "0^Missing or invalid data"
"RTN","LEXQDRG2",57,0)
 Q:LEXSYS="10D"&('$L($G(LEXPOA))) "0^Missing POA"
"RTN","LEXQDRG2",58,0)
 Q:LEXSYS="10D"&($G(LEXPOA)["^") "0^Invalid POA"
"RTN","LEXQDRG2",59,0)
 I +($G(LEXPDX))>0 D  Q 1
"RTN","LEXQDRG2",60,0)
 . S ICDDX(1)=+($G(LEXPDX)),ICDDX("B",+($G(LEXPDX)))=1
"RTN","LEXQDRG2",61,0)
 . S:$G(LEXSYS)="10D"&($L($G(LEXPOA))) ICDPOA(1)=LEXPOA
"RTN","LEXQDRG2",62,0)
 . S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=+($G(LEXPDX))
"RTN","LEXQDRG2",63,0)
 Q 0
"RTN","LEXQDRG2",64,0)
SEC(X) ;   Seconary DX
"RTN","LEXQDRG2",65,0)
 N DIC,DICA,DTOUT,DUOUT,LEXBG,LEXC,LEXF,LEXID,LEXIEN,LEXIT,LEXLS,LEXSYS,LEXN,LEXS,Y,ICDDATE
"RTN","LEXQDRG2",66,0)
 S ICDDATE=$G(X) Q:$P(ICDDATE,".",1)'?7N "0^Date not Passed" K DICA
"RTN","LEXQDRG2",67,0)
 S LEXSYS="10D" S:ICDDATE<$$IMPDATE^LEXU(30) LEXSYS="ICD"
"RTN","LEXQDRG2",68,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60)
"RTN","LEXQDRG2",69,0)
 S LEXIT=0,LEXLS=1 F  S LEXLS=$O(ICDDX(LEXLS)) Q:+LEXLS'>0  D
"RTN","LEXQDRG2",70,0)
 . N LEXIEN S LEXIEN=$G(ICDDX(LEXLS)) K:+LEXIEN>0 ICDDX("B",+LEXIEN),ICDDX(LEXLS)
"RTN","LEXQDRG2",71,0)
 S LEXLS=0 F LEXS=2:1 D  Q:LEXIT
"RTN","LEXQDRG2",72,0)
 . S:LEXS>5 LEXIT=1 Q:LEXIT  N DIC,LEXIEN,LEXC,LEXSEC,LEXPOA,LEXIT2
"RTN","LEXQDRG2",73,0)
 . S DIC=$$ROOT^ICDEX(80),DIC(0)="AEQMZI"
"RTN","LEXQDRG2",74,0)
 . S LEXID="LEXQDRG "_$G(DUZ)_" DX"_LEXS_" "_LEXSYS
"RTN","LEXQDRG2",75,0)
 . S LEXIEN=$G(^XTMP(LEXID,"PRE"))
"RTN","LEXQDRG2",76,0)
 . S LEXC=$$CODEC^ICDEX(80,LEXIEN) S:$L(LEXC)&(LEXC'["^") DIC("B")=LEXC
"RTN","LEXQDRG2",77,0)
 . S DIC("A")=" Enter a Secondary Diagnosis: " S:$L($G(DICA)) DIC("A")=$G(DICA)
"RTN","LEXQDRG2",78,0)
 . S DIC("S")="I $$ISVALID^ICDEX(80,+Y,$G(ICDDATE)),'$D(ICDDX(""B"",+Y))"
"RTN","LEXQDRG2",79,0)
 . D ^DIC I $G(X)["^^" D
"RTN","LEXQDRG2",80,0)
 . . S DUOUT=1 N LEXBG,LEXS,LEXQ S LEXBG=2,LEXQ=0 F LEXS=LEXBG:1 D  Q:LEXQ
"RTN","LEXQDRG2",81,0)
 . . . N LEXID,LEXIEN S LEXID="LEXQDRG "_$G(DUZ)_" DX"_LEXS_" "_LEXSYS
"RTN","LEXQDRG2",82,0)
 . . . S LEXIEN=$G(^XTMP(LEXID,"PRE")) K:LEXIEN>0 ^XTMP(LEXID) S:LEXIEN'>0 LEXQ=1
"RTN","LEXQDRG2",83,0)
 . I '$L(X)!($D(DTOUT))!($D(DUOUT))!(+Y'>0) S LEXIT=1 Q
"RTN","LEXQDRG2",84,0)
 . S DICA=" Enter another Secondary Diagnosis: "
"RTN","LEXQDRG2",85,0)
 . S LEXSEC=+($G(Y)),LEXPOA="",LEXIT2=0 I LEXSYS="10D",+LEXSEC>0 D
"RTN","LEXQDRG2",86,0)
 . . S LEXPOA=$$POA(+LEXSEC) S:LEXPOA["^" LEXIT2=1 Q:LEXIT
"RTN","LEXQDRG2",87,0)
 . Q:LEXIT2  Q:LEXSYS="10D"&('$L($G(LEXPOA)))  Q:LEXSYS="10D"&($G(LEXPOA)["^")
"RTN","LEXQDRG2",88,0)
 . S ICDDX(LEXS)=+Y,ICDDX("B",+Y)=LEXS,ICDPOA(LEXS)=LEXPOA
"RTN","LEXQDRG2",89,0)
 . S LEXLS=LEXS S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=+Y
"RTN","LEXQDRG2",90,0)
 Q:$D(DTOUT) "0^Secondary diagnosis selection timed-out"
"RTN","LEXQDRG2",91,0)
 Q:$G(X)["^^" "0^Secondary diagnosis selection aborted"
"RTN","LEXQDRG2",92,0)
 N LEXBG,LEXS,LEXIT S LEXBG=LEXLS+1,LEXIT=0 F LEXS=LEXBG:1 D  Q:LEXIT
"RTN","LEXQDRG2",93,0)
 . Q:LEXS=1  N LEXID,LEXIEN,LEXAI S LEXID="LEXQDRG "_$G(DUZ)_" DX"_LEXS_" "_LEXSYS
"RTN","LEXQDRG2",94,0)
 . S LEXIEN=$G(^XTMP(LEXID,"PRE")) K:LEXIEN>0 ^XTMP(LEXID) S:LEXIEN'>0 LEXIT=1
"RTN","LEXQDRG2",95,0)
 . S LEXAI=$G(ICDDX("B",+LEXIEN)) K:+LEXAI>1 ICDDX(+LEXAI),ICDDX("B",+LEXIEN)
"RTN","LEXQDRG2",96,0)
 Q 1
"RTN","LEXQDRG2",97,0)
PRO(X) ;   Procedures
"RTN","LEXQDRG2",98,0)
 N DIC,DICA,DTOUT,DUOUT,LEXBG,LEXC,LEXF,LEXID,LEXIEN,LEXIT,LEXLS,LEXSYS,LEXN,LEXS,Y,ICDDATE
"RTN","LEXQDRG2",99,0)
 S ICDDATE=$G(X) Q:$P(ICDDATE,".",1)'?7N "0^Date not Passed" K DICA
"RTN","LEXQDRG2",100,0)
 S LEXSYS="10P" S:ICDDATE<$$IMPDATE^LEXU(31) LEXSYS="ICP"
"RTN","LEXQDRG2",101,0)
 S (LEXIT,LEXLS)=0 F  S LEXLS=$O(ICDPRC(LEXLS)) Q:+LEXLS'>0  D
"RTN","LEXQDRG2",102,0)
 . N LEXIEN S LEXIEN=$G(ICDPRC(LEXLS)) K:+LEXIEN>0 ICDPRC("B",+LEXIEN),ICDPRC(LEXLS)
"RTN","LEXQDRG2",103,0)
 S (LEXLS,LEXIT)=0 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60) F LEXS=1:1 D  Q:LEXIT
"RTN","LEXQDRG2",104,0)
 . S:LEXS>5 LEXIT=1 Q:LEXIT  N DIC,LEXIEN,LEXC S DIC=$$ROOT^ICDEX(80.1),DIC(0)="AEQMZI"
"RTN","LEXQDRG2",105,0)
 . S LEXID="LEXQDRG "_$G(DUZ)_" PR"_LEXS_" "_LEXSYS,LEXIEN=$G(^XTMP(LEXID,"PRE"))
"RTN","LEXQDRG2",106,0)
 . S LEXC=$$CODEC^ICDEX(80.1,LEXIEN) S:$L(LEXC)&(LEXC'["^") DIC("B")=LEXC
"RTN","LEXQDRG2",107,0)
 . S DIC("A")=" Enter an Operation/Procedure: " S:$L($G(DICA)) DIC("A")=DICA
"RTN","LEXQDRG2",108,0)
 . S DIC("S")="I $$ISVALID^ICDEX(80.1,+Y,$G(ICDDATE)),'$D(ICDPRC(""B"",+Y))"
"RTN","LEXQDRG2",109,0)
 . D ^DIC I $G(X)["^^" D
"RTN","LEXQDRG2",110,0)
 . . S DUOUT=1 N LEXBG,LEXS,LEXQ S LEXBG=1,LEXQ=0 F LEXS=LEXBG:1 D  Q:LEXQ
"RTN","LEXQDRG2",111,0)
 . . . N LEXID,LEXIEN S LEXID="LEXQDRG "_$G(DUZ)_" PR"_LEXS_" "_LEXSYS
"RTN","LEXQDRG2",112,0)
 . . . S LEXIEN=$G(^XTMP(LEXID,"PRE")) K:LEXIEN>0 ^XTMP(LEXID) S:LEXIEN'>0 LEXQ=1
"RTN","LEXQDRG2",113,0)
 . I '$L(X)!($D(DTOUT))!($D(DUOUT))!(+Y'>0) S LEXIT=1 Q
"RTN","LEXQDRG2",114,0)
 . S DICA=" Enter another Operation/Procedure: "
"RTN","LEXQDRG2",115,0)
 . S ICDPRC(LEXS)=+Y,ICDPRC("B",+Y)=LEXS,LEXID=("LEXQDRG "_$G(DUZ)_" PR"_LEXS_" "_LEXSYS)
"RTN","LEXQDRG2",116,0)
 . S LEXLS=LEXS S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=+Y
"RTN","LEXQDRG2",117,0)
 Q:$D(DTOUT) "0^Procedure selection timed-out"
"RTN","LEXQDRG2",118,0)
 Q:$G(X)["^^" "0^Procedure selection aborted"
"RTN","LEXQDRG2",119,0)
 N LEXBG,LEXS,LEXIT S LEXBG=LEXLS+1,LEXIT=0 F LEXS=LEXBG:1 D  Q:LEXIT
"RTN","LEXQDRG2",120,0)
 . N LEXID,LEXIEN,LEXAI S LEXID="LEXQDRG "_$G(DUZ)_" PR"_LEXS_" "_LEXSYS
"RTN","LEXQDRG2",121,0)
 . S LEXIEN=$G(^XTMP(LEXID,"PRE")) K:LEXIEN>0 ^XTMP(LEXID) S:LEXIEN'>0 LEXIT=1
"RTN","LEXQDRG2",122,0)
 . S LEXAI=$G(ICDPRC("B",+LEXIEN)) K:+LEXAI>1 ICDPRC(+LEXAI),ICDPRC("B",+LEXIEN)
"RTN","LEXQDRG2",123,0)
 Q 1
"RTN","LEXQDRG2",124,0)
 ;
"RTN","LEXQDRG2",125,0)
POA(X) ; Present On Admission
"RTN","LEXQDRG2",126,0)
 N DIR,DUOUT,DTOUT,DIRUT,DIROUT,Y,LEXPR,LEXIEN,LEXHAC,LEXPOAE,LEXQ S LEXIEN=+($G(X)) Q:'$D(^ICD9(+LEXIEN,0)) "^"
"RTN","LEXQDRG2",127,0)
 S LEXPOAE=$$POAE^ICDEX(LEXIEN) Q:LEXPOAE>0 "N"  S LEXHAC=+($$HAC^ICDEX(LEXIEN))
"RTN","LEXQDRG2",128,0)
 K DIR S DIR("A")="     Present on Admission: ",DIR(0)="SOA^Y:YES;N:NO;U:Unknown;W:Clinically undetermined"
"RTN","LEXQDRG2",129,0)
 S:LEXHAC'>0 DIR("B")="NO" S DIR("PRE")="S LEXQ=X S:X[""?"" X=""??"""
"RTN","LEXQDRG2",130,0)
 S DIR("??")="^D POAH2^LEXQDRG2",DIR("?")="^D POAH1^LEXQDRG2"
"RTN","LEXQDRG2",131,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT))!($D(DIROUT)) Q "^"
"RTN","LEXQDRG2",132,0)
 I X="" D
"RTN","LEXQDRG2",133,0)
 . I $$GET1^DIQ(80,LEXIEN,1.9,"I")'=1 D
"RTN","LEXQDRG2",134,0)
 . . S LEXPR(1)="         Diagnosis "_$$GET1^DIQ(80,LEXIEN,.01,"I")_" is not contained in the POA Exempt"
"RTN","LEXQDRG2",135,0)
 . . S LEXPR(2)="         list so the POA field should not be blank. If left blank, it will be"
"RTN","LEXQDRG2",136,0)
 . . S LEXPR(3)="         treated as if it were a No (""N"")" W !
"RTN","LEXQDRG2",137,0)
 . . D EN^DDIOL(.LEXPR) W !
"RTN","LEXQDRG2",138,0)
 . . K DIR S DIR(0)="YAO",DIR("A")="     Do you wish to continue? (Y/N)  ",DIR("B")="YES" D ^DIR I ($D(DTOUT))!($D(DUOUT))!($D(DIROUT)) S Y="^"
"RTN","LEXQDRG2",139,0)
 . . S:Y=0 Y="^" Q:Y["^"  S Y="N"
"RTN","LEXQDRG2",140,0)
 . E  S Y="Y"
"RTN","LEXQDRG2",141,0)
 S X=$$UP^XLFSTR(Y)
"RTN","LEXQDRG2",142,0)
 Q X
"RTN","LEXQDRG2",143,0)
POAH1 ;   Present On Admission ? Help
"RTN","LEXQDRG2",144,0)
 W !,?9,"Was the diagnosis present on admission?  Answer Yes, No,"
"RTN","LEXQDRG2",145,0)
 W:+($G(LEXHAC))'>0 !,?9,"Unknown or Clinical undtermined"
"RTN","LEXQDRG2",146,0)
 W:+($G(LEXHAC))>0 !,?9,"Unknown, Clinical undtermined or <enter>."
"RTN","LEXQDRG2",147,0)
 Q
"RTN","LEXQDRG2",148,0)
POAH2 ;   Present On Admission ?? Help
"RTN","LEXQDRG2",149,0)
 I $G(LEXQ)["?",$G(LEXQ)'["??" D POAH1 S LEXQ="" Q
"RTN","LEXQDRG2",150,0)
 W !,?9,"Apply the Present on Admission (POA) indicator for each diagnosis"
"RTN","LEXQDRG2",151,0)
 W !,?9,"and external cause of injury code(s) reported as the final set of"
"RTN","LEXQDRG2",152,0)
 W !,?9,"diagnosis codes assigned.  One of the following values should be"
"RTN","LEXQDRG2",153,0)
 W !,?9,"assigned in accordance with the official coding guidelines:"
"RTN","LEXQDRG2",154,0)
 W !,?9,""
"RTN","LEXQDRG2",155,0)
 W !,?9,"Y = present at the time of inpatient admission;"
"RTN","LEXQDRG2",156,0)
 W !,?9,"N = not present at the time of inpatient admission;"
"RTN","LEXQDRG2",157,0)
 W !,?9,"U = documentation is insufficient to determine if"
"RTN","LEXQDRG2",158,0)
 W !,?9,"    condition is present on admission;"
"RTN","LEXQDRG2",159,0)
 W !,?9,"W = provider is unable to clinically determine"
"RTN","LEXQDRG2",160,0)
 W !,?9,"    whether condition was present on admission or not"
"RTN","LEXQDRG2",161,0)
 W:+($G(LEXHAC))>0 !,?9,"<enter> = use only if diagnosis is exempt from POA reporting"
"RTN","LEXQDRG2",162,0)
 Q
"RTN","LEXQDRG2",163,0)
 ;
"RTN","LEXQDRG2",164,0)
 ; Previous Values
"RTN","LEXQDRG2",165,0)
GETPRE(X) ;   Get Previous Values
"RTN","LEXQDRG2",166,0)
 N LEXI,LEXS,LEXX,LEXSYS,LEXIMP K ICDDX,ICDPRC
"RTN","LEXQDRG2",167,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" DATE"),"PRE"))
"RTN","LEXQDRG2",168,0)
 S:$P(LEXX,".",1)'?7N LEXX=$$DT^XLFDT S ICDDATE=LEXX
"RTN","LEXQDRG2",169,0)
 S LEXIMP=$$IMPDATE^LEXU(30),LEXSYS="10D" S:ICDDATE<LEXIMP LEXSYS="ICD"
"RTN","LEXQDRG2",170,0)
 F LEXI=1:1 Q:'$D(^XTMP(("LEXQDRG "_$G(DUZ)_" DX"_LEXI_" "_LEXSYS)))  D
"RTN","LEXQDRG2",171,0)
 . N LEXX S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" DX"_LEXI_" "_LEXSYS),"PRE"))
"RTN","LEXQDRG2",172,0)
 . I +LEXX>0 S LEXS=$O(ICDDX(" "),-1)+1,ICDDX(LEXS)=LEXX
"RTN","LEXQDRG2",173,0)
 S LEXSYS="10P" S:ICDDATE<LEXIMP LEXSYS="ICP"
"RTN","LEXQDRG2",174,0)
 F LEXI=1:1 Q:'$D(^XTMP(("LEXQDRG "_$G(DUZ)_" PR"_LEXI_" "_LEXSYS)))  D
"RTN","LEXQDRG2",175,0)
 . N LEXX S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" PR"_LEXI_" "_LEXSYS),"PRE"))
"RTN","LEXQDRG2",176,0)
 . I +LEXX>0 S LEXS=$O(ICDPRC(" "),-1)+1,ICDPRC(LEXS)=LEXX
"RTN","LEXQDRG2",177,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" AGE"),"PRE"))
"RTN","LEXQDRG2",178,0)
 S:LEXX'>0 LEXX=40 S AGE=LEXX
"RTN","LEXQDRG2",179,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" SEX"),"PRE"))
"RTN","LEXQDRG2",180,0)
 S:'$L(LEXX) LEXX="M" S SEX=LEXX
"RTN","LEXQDRG2",181,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" DMS"),"PRE"))
"RTN","LEXQDRG2",182,0)
 S:'$L(LEXX) LEXX=0 S ICDDMS=LEXX
"RTN","LEXQDRG2",183,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" TRS"),"PRE"))
"RTN","LEXQDRG2",184,0)
 S:'$L(LEXX) LEXX=0 S ICDTRS=LEXX
"RTN","LEXQDRG2",185,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" DATE"),"EXP"))
"RTN","LEXQDRG2",186,0)
 S:'$L(LEXX) LEXX=0 S ICDEXP=LEXX
"RTN","LEXQDRG2",187,0)
 Q:'$D(ICDDX(1)) "0^Missing Principal Diagnois"
"RTN","LEXQDRG2",188,0)
 Q:$G(AGE)'?1N.N "0^Missing or invalid 'age'"
"RTN","LEXQDRG2",189,0)
 Q:"^M^F^"'[("^"_$G(SEX)_"^") "0^Missing or invalid 'sex'"
"RTN","LEXQDRG2",190,0)
 Q:"^1^0^"'[("^"_$G(ICDDMS)_"^") "0^Missing or invalid 'discharged against medical advice'"
"RTN","LEXQDRG2",191,0)
 Q:"^1^0^"'[("^"_$G(ICDTRS)_"^") "0^Missing or invalid 'transferred to acute care facility'"
"RTN","LEXQDRG2",192,0)
 Q:"^1^0^"'[("^"_$G(ICDEXP)_"^") "0^Missing or invalid 'died during episode of care'"
"RTN","LEXQDRG2",193,0)
 Q 1
"RTN","LEXQDRG2",194,0)
SETPRE ;   Set Previous Values
"RTN","LEXQDRG2",195,0)
 N LEXF,LEXI,LEXID,LEXN,LEXV,LEXIMP,LEXSYS
"RTN","LEXQDRG2",196,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60) D PURPRE
"RTN","LEXQDRG2",197,0)
 S LEXIMP=$$IMPDATE^LEXU(30),LEXSYS="10D" S:$G(ICDDATE)<LEXIMP LEXSYS="ICD"
"RTN","LEXQDRG2",198,0)
 S LEXI=0 F  S LEXI=$O(ICDDX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQDRG2",199,0)
 . N LEXV S LEXV=$P($G(ICDDX(LEXI)),"^",1)
"RTN","LEXQDRG2",200,0)
 . Q:+LEXV'>0  S LEXID="LEXQDRG "_$G(DUZ)_" DX"_LEXI_" "_LEXSYS
"RTN","LEXQDRG2",201,0)
 . S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=LEXV
"RTN","LEXQDRG2",202,0)
 S LEXSYS="10P" S:$G(ICDDATE)<LEXIMP LEXSYS="ICP"
"RTN","LEXQDRG2",203,0)
 S LEXI=0 F  S LEXI=$O(ICDPRC(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQDRG2",204,0)
 . N LEXV S LEXV=$P($G(ICDPRC(LEXI)),"^",1)
"RTN","LEXQDRG2",205,0)
 . Q:+LEXV'>0  S LEXID="LEXQDRG "_$G(DUZ)_" PR"_LEXI_" "_LEXSYS
"RTN","LEXQDRG2",206,0)
 . S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=LEXV
"RTN","LEXQDRG2",207,0)
 S LEXV=$G(AGE) S:LEXV'>0 LEXV=40 S LEXID="LEXQDRG "_$G(DUZ)_" AGE"
"RTN","LEXQDRG2",208,0)
 S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=LEXV
"RTN","LEXQDRG2",209,0)
 S LEXV=$G(SEX) S:"^M^F^"'[("^"_LEXV_"^") LEXV="M" S LEXID="LEXQDRG "_$G(DUZ)_" SEX"
"RTN","LEXQDRG2",210,0)
 S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=LEXV
"RTN","LEXQDRG2",211,0)
 S LEXV=$G(ICDDATE) S:$P(LEXV,".",1)'?7N LEXV=$$NOW^XLFDT S LEXID="LEXQDRG "_$G(DUZ)_" DATE"
"RTN","LEXQDRG2",212,0)
 S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=LEXV
"RTN","LEXQDRG2",213,0)
 S LEXV=$G(ICDDMS) S:'$L(LEXV) LEXV=0 S LEXID="LEXQDRG "_$G(DUZ)_" DMS"
"RTN","LEXQDRG2",214,0)
 S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=LEXV
"RTN","LEXQDRG2",215,0)
 S LEXV=$G(ICDTRS) S:'$L(LEXV) LEXV=0 S LEXID="LEXQDRG "_$G(DUZ)_" TRS"
"RTN","LEXQDRG2",216,0)
 S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=LEXV
"RTN","LEXQDRG2",217,0)
 S LEXV=$G(ICDEXP) S:'$L(LEXV) LEXV=0 S LEXID="LEXQDRG "_$G(DUZ)_" EXP"
"RTN","LEXQDRG2",218,0)
 S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=LEXV
"RTN","LEXQDRG2",219,0)
 Q
"RTN","LEXQDRG2",220,0)
PURPRE ;   Purge Saved Values
"RTN","LEXQDRG2",221,0)
 N LEXI,LEXIMP,LEXSYS Q:+($G(ICDDATE))'>0  S LEXIMP=$$IMPDATE^LEXU(30),LEXSYS="10D"
"RTN","LEXQDRG2",222,0)
 S:$G(ICDDATE)<LEXIMP LEXSYS="ICD" K ^XTMP(("LEXQDRG "_$G(DUZ)_" DX1 "_LEXSYS))
"RTN","LEXQDRG2",223,0)
 F LEXI=2:1 Q:'$D(^XTMP(("LEXQDRG "_$G(DUZ)_" DX"_LEXI_" "_LEXSYS)))  K ^XTMP(("LEXQDRG "_$G(DUZ)_" DX"_LEXI_" "_LEXSYS))
"RTN","LEXQDRG2",224,0)
 F LEXI=1:1 Q:'$D(^XTMP(("LEXQDRG "_$G(DUZ)_" PR"_LEXI)))  K ^XTMP(("LEXQDRG "_$G(DUZ)_" PR"_LEXI))
"RTN","LEXQDRG2",225,0)
 Q
"RTN","LEXQDRG2",226,0)
HASPRE(X) ;   User Has Previous Values
"RTN","LEXQDRG2",227,0)
 N LEXX,LEX9 S LEX9=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" DX1 ICD"),"PRE"))
"RTN","LEXQDRG2",228,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" DX1 10D"),"PRE")) Q:+LEXX'>0&(+LEX9'>0) -1
"RTN","LEXQDRG2",229,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" AGE"),"PRE")) Q:+LEXX'>0 -2
"RTN","LEXQDRG2",230,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" DATE"),"PRE")) Q:$P(LEXX,".",1)'?7N -3
"RTN","LEXQDRG2",231,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" SEX"),"PRE")) Q:"^M^F^"'[("^"_LEXX_"^") -4
"RTN","LEXQDRG2",232,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" EXP"),"PRE")) Q:"^1^0^"'[("^"_LEXX_"^") -5
"RTN","LEXQDRG2",233,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" DMS"),"PRE")) Q:"^1^0^"'[("^"_LEXX_"^") -6
"RTN","LEXQDRG2",234,0)
 S LEXX=$G(^XTMP(("LEXQDRG "_$G(DUZ)_" TRS"),"PRE")) Q:"^1^0^"'[("^"_LEXX_"^") -7
"RTN","LEXQDRG2",235,0)
 Q 1
"RTN","LEXQDRG3")
0^21^B41644290
"RTN","LEXQDRG3",1,0)
LEXQDRG3 ;ISL/KER - Query - DRG Calc. (DGPT) ;12/19/2014
"RTN","LEXQDRG3",2,0)
 ;;2.0;LEXICON UTILITY;**86**;Sep 23, 1996;Build 1
"RTN","LEXQDRG3",3,0)
 ;               
"RTN","LEXQDRG3",4,0)
 ; Global Variables
"RTN","LEXQDRG3",5,0)
 ;    ^XTMP(ID)           SACC 2.3.2.5.2
"RTN","LEXQDRG3",6,0)
 ;               
"RTN","LEXQDRG3",7,0)
 ; External References
"RTN","LEXQDRG3",8,0)
 ;    ^DIC                ICR  10006
"RTN","LEXQDRG3",9,0)
 ;    $$FIND1^DIC         ICR   2051
"RTN","LEXQDRG3",10,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXQDRG3",11,0)
 ;    ^DIR                ICR  10026
"RTN","LEXQDRG3",12,0)
 ;    ^ICDDRG             ICR    371
"RTN","LEXQDRG3",13,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQDRG3",14,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXQDRG3",15,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXQDRG3",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQDRG3",17,0)
 ;               
"RTN","LEXQDRG3",18,0)
 ; ICDDATE     Date
"RTN","LEXQDRG3",19,0)
 ; ICDEXP      Patient died during episode of care        1/0
"RTN","LEXQDRG3",20,0)
 ; ICDTRS      Was patient transferred to acute care      1/0
"RTN","LEXQDRG3",21,0)
 ; ICDDMS      Patient discharged against medical advice  1/0
"RTN","LEXQDRG3",22,0)
 ; SEX         Patient's Sex (pre-surgical                M/F
"RTN","LEXQDRG3",23,0)
 ; AGE         Patient's Age                              Numeric
"RTN","LEXQDRG3",24,0)
 ; 
"RTN","LEXQDRG3",25,0)
 ; ICDDX(1)    Array of ICD Principal Diagnosis
"RTN","LEXQDRG3",26,0)
 ; ICDDX(n)    Array of ICD Secondary Diagnosis
"RTN","LEXQDRG3",27,0)
 ; ICDPRC(n)   Array of ICD Procedures
"RTN","LEXQDRG3",28,0)
 ; 
"RTN","LEXQDRG3",29,0)
EN ; Main Entry Point
"RTN","LEXQDRG3",30,0)
 N AGE,DFN,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICDDATE,ICDDMS,ICDDRG,ICDDX,ICDEXP
"RTN","LEXQDRG3",31,0)
 N ICDPRC,ICDTRS,LEX1,LEXB,LEXC,LEXCODE,LEXD,LEXDCH,LEXDES,LEXDFN,LEXDOB
"RTN","LEXQDRG3",32,0)
 N LEXDRG,LEXDT,LEXDX,LEXLEXP,LEXF,LEXFL,LEXFLG,LEXGDAT,LEXI,LEXI1,LEXI2,LEXI3
"RTN","LEXQDRG3",33,0)
 N LEXID,LEXIEN,LEXIENS,LEXIPT,LEXIT,LEXMN,LEXMNE,LEXMX,LEXMXE,LEXN,LEXNAM
"RTN","LEXQDRG3",34,0)
 N LEXOK,LEXOUT,LEXPDX,LEXPR,LEXPR1,LEXPRDT,LEXPRE,LEXPRS,LEXPTF,LEXSCC
"RTN","LEXQDRG3",35,0)
 N LEXSDX,LEXSR,LEXSR1,LEXSRDT,LEXSRS,LEXT,LEXTD,LEXTMP,LEXVAP,SEX,X,Y
"RTN","LEXQDRG3",36,0)
 S LEXVAP=$$VAP I +LEXVAP'>0,$L($P(LEXVAP,"^",2)) W !!,"   ",$P(LEXVAP,"^",2) Q
"RTN","LEXQDRG3",37,0)
 I +LEXVAP'>0 W !!,"   Patient not selected" Q
"RTN","LEXQDRG3",38,0)
 S X=$P($$EFF,".",1) I X'?7N,$L($P(X,"^",2)) W !!,"   ",$P(X,"^",2) Q
"RTN","LEXQDRG3",39,0)
 I X'?7N W !!,"   'Effective date' missing or invalid" Q
"RTN","LEXQDRG3",40,0)
 S (LEXGDAT,ICDDATE)=X,LEXVAP=+($G(LEXVAP)) S LEXOK=$$GETPAT(LEXVAP)
"RTN","LEXQDRG3",41,0)
 I LEXOK'>0,$L($P(LEXOK,"^",2)) W !!,"   ",$P(LEXOK,"^",2) Q
"RTN","LEXQDRG3",42,0)
 I LEXOK'>0 W !!,"   'Patient treatment information' missing or invalid" Q
"RTN","LEXQDRG3",43,0)
 D ^ICDDRG I +($G(ICDDRG))>0 W:$L($G(IOF)) @IOF D DCD^LEXQDRG4,WRT^LEXQDRG4(ICDDRG,ICDDATE)
"RTN","LEXQDRG3",44,0)
 Q
"RTN","LEXQDRG3",45,0)
EFF(X) ;   Effective date
"RTN","LEXQDRG3",46,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXMN,LEXMNE,LEXMX,LEXMXE,LEXN,Y,LEXIMP
"RTN","LEXQDRG3",47,0)
 S LEXIMP=$$IMPDATE^LEXU(30),LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" DATE"
"RTN","LEXQDRG3",48,0)
 S LEXB=$P($G(^XTMP(LEXID,"PRE")),".",1) S:LEXB?7N DIR("B")=$$UP^XLFSTR($$FMTE^XLFDT(LEXB,"1D"))
"RTN","LEXQDRG3",49,0)
 S LEXMN=2781001,LEXMX=DT S:LEXMX'>LEXIMP LEXMX=LEXIMP S LEXMX=$$FMADD^XLFDT(LEXMX,730)
"RTN","LEXQDRG3",50,0)
 S LEXMNE=$$FMTE^XLFDT(+($G(LEXMN)),"1D"),LEXMXE=$$FMTE^XLFDT(+($G(LEXMX)),"1D")
"RTN","LEXQDRG3",51,0)
 S LEXMNE=$$UP^XLFSTR(LEXMNE),LEXMXE=$$UP^XLFSTR(LEXMXE) S DIR(0)="DAO^"_LEXMN_":"_LEXMX
"RTN","LEXQDRG3",52,0)
 S DIR("?")="^D EFH1^LEXQDRG3" S DIR("??")="^D EFH2^LEXQDRG3"
"RTN","LEXQDRG3",53,0)
 S DIR("A")=" Enter the diagnosis effective date:  "
"RTN","LEXQDRG3",54,0)
 W:+($G(LEXHAS))'>0&('$D(DFN)) ! D ^DIR Q:$D(DTOUT) "0^'Effective date' selection timed-out"
"RTN","LEXQDRG3",55,0)
 I $D(DIROUT)!($D(DIRUT))!($D(DUOUT)) D  Q X
"RTN","LEXQDRG3",56,0)
 . S X="0^'Effective date' selection aborted"
"RTN","LEXQDRG3",57,0)
 S Y=$P(Y,".",1) Q:Y'?7N "0^Missing or invalid 'effective date'"
"RTN","LEXQDRG3",58,0)
 I Y?7N S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=Y N DFN
"RTN","LEXQDRG3",59,0)
 S X=Y Q:X?7N X
"RTN","LEXQDRG3",60,0)
 Q "0^Invalid 'effective date'"
"RTN","LEXQDRG3",61,0)
EFH1 ;   Effective Date Help #1
"RTN","LEXQDRG3",62,0)
 W !,"   Enter the effective date of the patient's diagnosis"
"RTN","LEXQDRG3",63,0)
 I $L($G(LEXMXE)),$L($G(LEXMNE)) D
"RTN","LEXQDRG3",64,0)
 . W !!,"   Select a date from ",LEXMNE," to ",LEXMXE
"RTN","LEXQDRG3",65,0)
 Q
"RTN","LEXQDRG3",66,0)
EFH2 ;   Effective Date Help #2
"RTN","LEXQDRG3",67,0)
 D EFH1 W !
"RTN","LEXQDRG3",68,0)
 W !,"   JAN 20 2012 or 20 JAN 12 or 1/20/12 or 012012"
"RTN","LEXQDRG3",69,0)
 W !,"   T   (for TODAY),  T+1 (for TOMORROW),  T+2, etc."
"RTN","LEXQDRG3",70,0)
 W !,"   T-1 (for YESTERDAY),  T-3W (for 3 WEEKS AGO), etc."
"RTN","LEXQDRG3",71,0)
 W !,"   If the year is omitted, the computer uses CURRENT"
"RTN","LEXQDRG3",72,0)
 W !,"   YEAR.  Two digit year assumes no more than 20 "
"RTN","LEXQDRG3",73,0)
 W !,"   years in the future, or 80 years in the past."
"RTN","LEXQDRG3",74,0)
 W:$L($G(DIR("B"))) !,"   Press return to accept the default date."
"RTN","LEXQDRG3",75,0)
 W !,"   Enter ""^"" to abort."
"RTN","LEXQDRG3",76,0)
 Q
"RTN","LEXQDRG3",77,0)
PAT(X) ;   Patient
"RTN","LEXQDRG3",78,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEXB,LEXF,LEXID,LEXN,Y
"RTN","LEXQDRG3",79,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" PAT"
"RTN","LEXQDRG3",80,0)
 S LEXB=$G(^XTMP(LEXID,"PRE")),LEXB=$S(LEXB="1":"YES",1:"NO") S:$L(LEXB) DIR("B")=LEXB
"RTN","LEXQDRG3",81,0)
 S DIR(0)="YAO",DIR("A")=" Calculate DRGs for a Registered Patient?  (Y/N)  "
"RTN","LEXQDRG3",82,0)
 S DIR("?")="Enter 'Yes' if the patient has been previously registered, enter 'No' for other patient."
"RTN","LEXQDRG3",83,0)
 S DIR("PRE")="S:X[""?"" X=""?""" D ^DIR
"RTN","LEXQDRG3",84,0)
 Q:$D(DTOUT) "0^'Calculate DRGs for a Registered Patient' selection timed-out"
"RTN","LEXQDRG3",85,0)
 I $D(DIROUT)!($D(DIRUT))!($D(DUOUT))!("^1^0^"'[("^"_Y_"^")) D  Q X
"RTN","LEXQDRG3",86,0)
 . S X="0^'Calculate DRGs for a Registered Patient' selection aborted"
"RTN","LEXQDRG3",87,0)
 I "^1^0^"[("^"_Y_"^") S ^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=Y
"RTN","LEXQDRG3",88,0)
 S X=Y
"RTN","LEXQDRG3",89,0)
 Q X
"RTN","LEXQDRG3",90,0)
VAP(X) ;   VA Patient File #2
"RTN","LEXQDRG3",91,0)
 N DIC,DTOUT,DUOUT,LEXB,LEXDFN,LEXLEXP,LEXF,LEXID,LEXN,LEXNAM,LEXSCC,Y
"RTN","LEXQDRG3",92,0)
 S LEXN=$$DT^XLFDT,LEXF=$$FMADD^XLFDT(LEXN,60),LEXID="LEXQDRG "_$G(DUZ)_" VAP"
"RTN","LEXQDRG3",93,0)
 S LEXB=$G(^XTMP(LEXID,"PRE")),LEXB=$$GET1^DIQ(2,(+LEXB_","),.01)
"RTN","LEXQDRG3",94,0)
 S DIC="^DPT(",DIC(0)="AEQMZ",DIC("A")=" Select VA Patient:  ",DIC("S")="I +($$VAS^LEXQDRG3)>0"
"RTN","LEXQDRG3",95,0)
 D ^DIC Q:$D(DTOUT) "0^'VA Patient' selection timed-out"
"RTN","LEXQDRG3",96,0)
 I $D(DUOUT) S X="0^'VA Patient' selection aborted" Q X
"RTN","LEXQDRG3",97,0)
 I +Y'>0 S X="0^'VA Patient' not selected" Q X
"RTN","LEXQDRG3",98,0)
 S X=Y I +Y>0 S DFN=+Y,^XTMP(LEXID,0)=LEXF_"^"_LEXN_"^Previous",^XTMP(LEXID,"PRE")=+Y
"RTN","LEXQDRG3",99,0)
 Q X
"RTN","LEXQDRG3",100,0)
VAS(X) ;   VA Patient File #2 Screen (live/service connected)
"RTN","LEXQDRG3",101,0)
 N LEXDFN,LEXNAM,LEXLEXP,LEXSCC S LEXDFN=+($G(Y)) Q:LEXDFN'>0 0
"RTN","LEXQDRG3",102,0)
 S LEXNAM=$$GET1^DIQ(2,(+($G(Y))_","),.01) Q:'$L(LEXNAM) 0
"RTN","LEXQDRG3",103,0)
 S LEXLEXP=$$GET1^DIQ(2,(+($G(Y))_","),.351,"I") Q:+LEXLEXP>0 0
"RTN","LEXQDRG3",104,0)
 S LEXSCC=$$GET1^DIQ(2,(+($G(Y))_","),.301,"I") Q:$E(LEXSCC,1)'="Y" 0
"RTN","LEXQDRG3",105,0)
 Q 1
"RTN","LEXQDRG3",106,0)
 ;
"RTN","LEXQDRG3",107,0)
GETPAT(X) ; Get Patient Values
"RTN","LEXQDRG3",108,0)
 N LEXDCH,LEXDFN,LEXDOB,LEXNAM,LEXOUT,LEXPTF
"RTN","LEXQDRG3",109,0)
 K AGE,ICDDMS,ICDDX,ICDEXP,ICDPRC,ICDTRS,SEX
"RTN","LEXQDRG3",110,0)
 S LEXOUT=1,LEXDFN=+($G(X))
"RTN","LEXQDRG3",111,0)
 Q:$G(LEXDFN)'>0 "0^Patient (DFN) undefined"
"RTN","LEXQDRG3",112,0)
 S LEXNAM=$$GET1^DIQ(2,(+($G(LEXDFN))_","),.01)
"RTN","LEXQDRG3",113,0)
 Q:'$L(LEXNAM) "0^Patient (DFN) not found"
"RTN","LEXQDRG3",114,0)
 S LEXPTF=$$FIND1^DIC(45,,"B",LEXNAM,"B")
"RTN","LEXQDRG3",115,0)
 Q:LEXPTF'>0 "0^Patient Treatment Record not found"
"RTN","LEXQDRG3",116,0)
 ;   ICDEXP    Did patient die during care         1/0
"RTN","LEXQDRG3",117,0)
 S ICDEXP=$$GET1^DIQ(45,(+($G(LEXPTF))_","),72,"I"),ICDEXP=$S(ICDEXP>5:1,1:0)
"RTN","LEXQDRG3",118,0)
 ;   ICDDSM    Discharged against medical advice   1/0
"RTN","LEXQDRG3",119,0)
 S ICDDMS=$$GET1^DIQ(45,(+($G(LEXPTF))_","),72,"I"),ICDEXP=$S(ICDDMS=4:1,1:0)
"RTN","LEXQDRG3",120,0)
 ;   ICDTRS    Transfer to acute care facility     1/0
"RTN","LEXQDRG3",121,0)
 S ICDTRS=$$GET1^DIQ(45,(+($G(LEXPTF))_","),76.2),ICDTRS=$S(ICDEXP:1,1:0)
"RTN","LEXQDRG3",122,0)
 ;   SEX       Sex                                 M/F
"RTN","LEXQDRG3",123,0)
 S SEX=$$GET1^DIQ(2,(+($G(LEXDFN))_","),.02,"I")
"RTN","LEXQDRG3",124,0)
 ;   AGE       Age                                 Numeric
"RTN","LEXQDRG3",125,0)
 S LEXDCH=$$GET1^DIQ(45,(+($G(LEXPTF))_","),70,"I")
"RTN","LEXQDRG3",126,0)
 S LEXDOB=$$GET1^DIQ(2,(+($G(LEXDFN))_","),.03,"I")
"RTN","LEXQDRG3",127,0)
 S AGE=$S(LEXDCH:LEXDCH,1:DT)-LEXDOB\10000
"RTN","LEXQDRG3",128,0)
 K LEXDX S LEXDX=$$DX^LEXQDRG4(LEXPTF)
"RTN","LEXQDRG3",129,0)
 K LEXSR S LEXSR=$$SR^LEXQDRG4(LEXPTF)
"RTN","LEXQDRG3",130,0)
 K LEXPR S LEXPR=$$PR^LEXQDRG4(LEXPTF)
"RTN","LEXQDRG3",131,0)
 D ICDDXPR^LEXQDRG4
"RTN","LEXQDRG3",132,0)
 S LEXOUT=1 S:"^1^0^"'[("^"_ICDEXP_"^") LEXOUT=-1
"RTN","LEXQDRG3",133,0)
 S:"^1^0^"'[("^"_ICDTRS_"^") LEXOUT=-2
"RTN","LEXQDRG3",134,0)
 S:"^1^0^"'[("^"_ICDDMS_"^") LEXOUT=-3
"RTN","LEXQDRG3",135,0)
 S:"^M^F^"'[("^"_SEX_"^") LEXOUT=-4
"RTN","LEXQDRG3",136,0)
 S:AGE'?1N.N LEXOUT=-5
"RTN","LEXQDRG3",137,0)
 S:$O(ICDDX(0))'>0 LEXOUT=-6
"RTN","LEXQDRG3",138,0)
 K:LEXOUT'>0 AGE,SEX,ICDDMS,ICDDX,ICDEXP,ICDPRC,ICDTRS
"RTN","LEXQDRG3",139,0)
 S X=LEXOUT S:X'>0 X="0^Error extracting patient treatment information"
"RTN","LEXQDRG3",140,0)
 Q X
"RTN","LEXQDRG4")
0^22^B80769306
"RTN","LEXQDRG4",1,0)
LEXQDRG4 ;ISL/KER - Query - DRG Calc. (DGPT - DX/SR/PR) ;12/19/2014
"RTN","LEXQDRG4",2,0)
 ;;2.0;LEXICON UTILITY;**86**;Sep 23, 1996;Build 1
"RTN","LEXQDRG4",3,0)
 ;               
"RTN","LEXQDRG4",4,0)
 ; Global Variables
"RTN","LEXQDRG4",5,0)
 ;    ^DGPT(              ICR     92
"RTN","LEXQDRG4",6,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","LEXQDRG4",7,0)
 ;               
"RTN","LEXQDRG4",8,0)
 ; External References
"RTN","LEXQDRG4",9,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXQDRG4",10,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXQDRG4",11,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQDRG4",12,0)
 ;    $$DRG^ICDEX         ICR   5747
"RTN","LEXQDRG4",13,0)
 ;    $$DRGD^ICDEX        ICR   5747
"RTN","LEXQDRG4",14,0)
 ;    $$GETDATE^ICDEX     ICR   5747
"RTN","LEXQDRG4",15,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXQDRG4",16,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQDRG4",17,0)
 ;    $$VCC^ICDEX         ICR   5747
"RTN","LEXQDRG4",18,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQDRG4",19,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXQDRG4",20,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQDRG4",21,0)
 ;               
"RTN","LEXQDRG4",22,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQDRG4",23,0)
 ;          
"RTN","LEXQDRG4",24,0)
 ;    ICDDX(1)    Array of ICD Principal Diagnosis
"RTN","LEXQDRG4",25,0)
 ;    ICDDX(n)    Array of ICD Secondary Diagnosis
"RTN","LEXQDRG4",26,0)
 ;    ICDPRC(n)   Array of ICD Procedures
"RTN","LEXQDRG4",27,0)
 ;    ICDPOA(n)   Array of ICD-10 Present on Admission
"RTN","LEXQDRG4",28,0)
 ;    ICDDATE     Date
"RTN","LEXQDRG4",29,0)
 ; 
"RTN","LEXQDRG4",30,0)
 ; PTF Diagnosis and Procedures
"RTN","LEXQDRG4",31,0)
DX(X)  ;   LEXDX     Diagnosis String                    DX^DX^DX
"RTN","LEXQDRG4",32,0)
 N LEX1,LEXDCH,LEXDT,LEXFL,LEXIEN,LEXIENS,LEXIPT,LEXIT,LEXPDX,LEXPRE,LEXPTF
"RTN","LEXQDRG4",33,0)
 N LEXSDX,LEXTMP S LEXSDX="",LEXPTF=$G(X) Q:$G(LEXPTF)'>0 ""
"RTN","LEXQDRG4",34,0)
 S LEXDCH=$$GET1^DIQ(45,(+($G(LEXPTF))_","),70,"I")
"RTN","LEXQDRG4",35,0)
 ;     Diagnosis - after Oct 1, 1986
"RTN","LEXQDRG4",36,0)
 I 'LEXDCH!(+LEXDCH>2861000) D
"RTN","LEXQDRG4",37,0)
 . N LEXIT,LEXFL S LEXIT=0
"RTN","LEXQDRG4",38,0)
 . F LEXFL=79.16,79.17,79.18,79.19,79.201,79.21,79.22,79.23,79.24 D  Q:LEXIT
"RTN","LEXQDRG4",39,0)
 . . N LEXIPT,LEXDT,LEXTMP S LEXIPT=$$GET1^DIQ(45,(+($G(LEXPTF))_","),LEXFL,"I")
"RTN","LEXQDRG4",40,0)
 . . S:LEXIPT'>0 LEXIT=1 Q:LEXIT  S LEXDT=$$GETDATE^ICDEX($G(LEXPTF))
"RTN","LEXQDRG4",41,0)
 . . S LEXTMP=$$ICDDX^ICDEX(LEXIPT,LEXDT,,"I"),LEXIEN=+LEXTMP
"RTN","LEXQDRG4",42,0)
 . . I +LEXTMP>0,$P(LEXTMP,"^",10) S LEXSDX=LEXSDX_"^"_+LEXTMP
"RTN","LEXQDRG4",43,0)
 ;     Diagnosis - before Oct 1, 1986
"RTN","LEXQDRG4",44,0)
 I +LEXDCH,+LEXDCH<2861000 D
"RTN","LEXQDRG4",45,0)
 . N LEXDT F LEXDT=0:0 S LEXDT=$O(^DGPT(LEXPTF,"M","AM",LEXDT)) Q:LEXDT'>0  D
"RTN","LEXQDRG4",46,0)
 . . N LEXTMP S LEX1=$O(^DGPT(LEXPTF,"M","AM",LEXDT,0))
"RTN","LEXQDRG4",47,0)
 . . S LEXTMP="" F LEXFL=5:1:9 D
"RTN","LEXQDRG4",48,0)
 . . . N LEXIEN,LEXIENS S LEXIENS=LEX1_","_LEXPTF_","
"RTN","LEXQDRG4",49,0)
 . . . S LEXIEN=$$GET1^DIQ(45.02,LEXIENS,LEXFL,"I")
"RTN","LEXQDRG4",50,0)
 . . . S:$$CODEC^ICDEX(80,LEXIEN)'["^" LEXTMP=LEXTMP_"^"_LEXIEN
"RTN","LEXQDRG4",51,0)
 . . S LEXSDX=LEXTMP_$P(LEXSDX,"^",1,40)
"RTN","LEXQDRG4",52,0)
 S LEXPDX=$$GET1^DIQ(45,(+($G(LEXPTF))_","),79,"I")
"RTN","LEXQDRG4",53,0)
 S LEXPRE=$$GET1^DIQ(45,(+($G(LEXPTF))_","),80,"I")
"RTN","LEXQDRG4",54,0)
 S LEXSDX=$S(LEXPDX:LEXPDX,1:LEXPRE)_LEXSDX
"RTN","LEXQDRG4",55,0)
 S X=$G(LEXSDX) K LEXSDX
"RTN","LEXQDRG4",56,0)
 Q X
"RTN","LEXQDRG4",57,0)
SR(X) ;   LEXSR     Surgery String                      SR^SR^SR
"RTN","LEXQDRG4",58,0)
 N LEXDCH,LEXI1,LEXI2,LEXIENS,LEXPTF,LEXSR,LEXSR1,LEXSRDT
"RTN","LEXQDRG4",59,0)
 N LEXSRS,LEXTMP K LEXSR S LEXPTF=+($G(X)) q:$G(LEXPTF)'>0 ""
"RTN","LEXQDRG4",60,0)
 Q:'$D(^DGPT(LEXPTF,"S")) ""  S LEXDCH=$$GET1^DIQ(45,(+($G(LEXPTF))_","),70,"I")
"RTN","LEXQDRG4",61,0)
 F LEXI1=0:0 S LEXI1=$O(^DGPT(LEXPTF,"S",LEXI1)) Q:LEXI1'>0  D
"RTN","LEXQDRG4",62,0)
 . N LEXSRS,LEXIENS S LEXIENS=LEXI1_","_LEXPTF_","
"RTN","LEXQDRG4",63,0)
 . S LEXSRDT=$$GET1^DIQ(45.01,LEXIENS,.01,"I") I $L(LEXSRDT) D
"RTN","LEXQDRG4",64,0)
 . . N LEXSR1 S LEXSRDT=$S('$D(LEXSR(LEXSRDT)):LEXSRDT,LEXSRDT[".":LEXSRDT_LEXI1_1,1:LEXSRDT_".0000"_LEXI1_1)
"RTN","LEXQDRG4",65,0)
 . . S:$D(LEXSR(LEXSRDT)) LEXSRDT=$S(LEXSRDT[".":LEXSRDT_LEXI1_1,1:LEXSRDT_".0000"_LEXI1_1)
"RTN","LEXQDRG4",66,0)
 . . S LEXSR(LEXSRDT)="" N LEXI2
"RTN","LEXQDRG4",67,0)
 . . F LEXI2=8,9,10,11,12 S LEXSR1=$$GET1^DIQ(45.01,LEXIENS,LEXI2,"I") I LEXSR1]"" D
"RTN","LEXQDRG4",68,0)
 . . . N LEXTMP S LEXTMP=$$ICDOP^ICDEX(LEXSR1,$P(LEXDCH,"."),,"I")
"RTN","LEXQDRG4",69,0)
 . . . I +LEXTMP>0,$P(LEXTMP,"^",10) S LEXSR(LEXSRDT)=LEXSR(LEXSRDT)_LEXSR1_"^"
"RTN","LEXQDRG4",70,0)
 I $D(LEXSR) S LEXSR="^" F LEXI1=0:0 S LEXI1=$O(LEXSR(LEXI1)) Q:LEXI1'>0  D
"RTN","LEXQDRG4",71,0)
 . N LEXSR1,LEXSRS,LEXI2 S LEXSRS=LEXSR(LEXI1) F LEXI2=1:1:5 S LEXSR1=$P(LEXSRS,"^",LEXI2) Q:LEXSR1=""  D
"RTN","LEXQDRG4",72,0)
 . . Q:$L(LEXSR)>240  S:LEXSR'[("^"_LEXSR1_"^") LEXSR=LEXSR_LEXSR1_"^"
"RTN","LEXQDRG4",73,0)
 S X=$G(LEXSR) K LEXSR
"RTN","LEXQDRG4",74,0)
 Q X
"RTN","LEXQDRG4",75,0)
PR(X) ;   LEXPR     Procedures String                   PR^PR^PR
"RTN","LEXQDRG4",76,0)
 N LEXDCH,LEXDT,LEXFL,LEXI1,LEXI2,LEXIEN,LEXIENS,LEXPR1,LEXPRDT,LEXPRS
"RTN","LEXQDRG4",77,0)
 N LEXPTF,LEXTMP K LEXPR S LEXPTF=$G(X) Q:$G(LEXPTF)'>0 ""
"RTN","LEXQDRG4",78,0)
 S LEXDCH=$$GET1^DIQ(45,(+($G(LEXPTF))_","),70,"I"),LEXPR=""
"RTN","LEXQDRG4",79,0)
 I +LEXDCH,LEXDCH<2871000 D
"RTN","LEXQDRG4",80,0)
 . N LEXFL F LEXFL=45.01,45.02,45.03,45.04,45.05 D
"RTN","LEXQDRG4",81,0)
 . . N LEXPR1,LEXDT S LEXPR1=$$GET1^DIQ(45,(+($G(LEXPTF))_","),LEXFL,"I")
"RTN","LEXQDRG4",82,0)
 . . S LEXDT=$$GETDATE^ICDEX($G(LEXPTF))
"RTN","LEXQDRG4",83,0)
 . . S LEXTMP=$$ICDOP^ICDEX(LEXPR1,LEXDT,,"I")
"RTN","LEXQDRG4",84,0)
 . . I +LEXTMP>0,$P(LEXTMP,"^",10) S LEXPR=LEXPR_LEXPR1_"^"
"RTN","LEXQDRG4",85,0)
 I +LEXDCH'>0!(LEXDCH'<2871000) D
"RTN","LEXQDRG4",86,0)
 . F LEXI1=0:0 S LEXI1=$O(^DGPT(LEXPTF,"P",LEXI1)) Q:LEXI1'>0  D
"RTN","LEXQDRG4",87,0)
 . . N LEXPRDT,LEXIEN,LEXIENS,LEXFL
"RTN","LEXQDRG4",88,0)
 . . S LEXIENS=LEXI1_","_LEXPTF_","
"RTN","LEXQDRG4",89,0)
 . . S LEXPRDT=$$GET1^DIQ(45.05,LEXIENS,.01,"I") Q:'$L(LEXPRDT)
"RTN","LEXQDRG4",90,0)
 . . S:$D(LEXPR(LEXPRDT)) LEXPRDT=$S(LEXPRDT[".":LEXPRDT_LEXI1_1,1:LEXPRDT_".0000"_LEXI1_1)
"RTN","LEXQDRG4",91,0)
 . . S LEXPR(LEXPRDT)="" F LEXFL=4,5,6,7,8 D
"RTN","LEXQDRG4",92,0)
 . . . N LEXIEN,LEXTMP S LEXIEN=$$GET1^DIQ(45.05,LEXIENS,LEXFL,"I")
"RTN","LEXQDRG4",93,0)
 . . . Q:+LEXIEN'>0  S LEXTMP=$$ICDOP^ICDEX(LEXIEN,LEXDCH,,"I")
"RTN","LEXQDRG4",94,0)
 . . . I +LEXTMP>0,$P(LEXTMP,"^",10) D
"RTN","LEXQDRG4",95,0)
 . . . . S LEXPR(LEXPRDT)=LEXPR(LEXPRDT)_+LEXTMP_"^"
"RTN","LEXQDRG4",96,0)
 . I $D(LEXPR) S LEXPR="^" F LEXI1=0:0 S LEXI1=$O(LEXPR(LEXI1)) Q:LEXI1'>0  D
"RTN","LEXQDRG4",97,0)
 . . N LEXPRS,LEXPR1 S LEXPRS=LEXPR(LEXI1) F LEXI2=1:1:5 S LEXPR1=$P(LEXPRS,"^",LEXI2) Q:LEXPR1=""  D
"RTN","LEXQDRG4",98,0)
 . . . Q:$L(LEXPR)>240  S:LEXPR'[("^"_LEXPR1_"^") LEXPR=LEXPR_LEXPR1_"^"
"RTN","LEXQDRG4",99,0)
 S X=$G(LEXPR) K LEXPR
"RTN","LEXQDRG4",100,0)
 Q X
"RTN","LEXQDRG4",101,0)
 ;
"RTN","LEXQDRG4",102,0)
ICDDXPR ;   Create ICDDX() and ICDPRC() arrays
"RTN","LEXQDRG4",103,0)
 ;     ICDDX(n) Diagnosis Array                    (n)=IEN
"RTN","LEXQDRG4",104,0)
 N LEXDT,LEXFLG,LEXGDAT,LEXI1,LEXI2,LEXI3,LEXPR1,LEXTMP K ICDDX,ICDPRC
"RTN","LEXQDRG4",105,0)
 S LEXDT=$P($G(LEXGDAT),".",1)
"RTN","LEXQDRG4",106,0)
 S:LEXDT'?7N LEXDT=$$DT^XLFDT I $D(LEXDX) D
"RTN","LEXQDRG4",107,0)
 . N LEXI1 S LEXI1=0 F  S LEXI1=LEXI1+1 Q:$P(LEXDX,"^",LEXI1)=""  D
"RTN","LEXQDRG4",108,0)
 . . N LEXTMP S LEXTMP=$$ICDDX^ICDEX(+$P(LEXDX,"^",LEXI1),$G(LEXDT),,"I")
"RTN","LEXQDRG4",109,0)
 . . I +LEXTMP>0,($P(LEXTMP,"^",10)) S ICDDX(LEXI1)=$P(LEXDX,"^",LEXI1)
"RTN","LEXQDRG4",110,0)
 ;     ICDPRC(n) Procedure Array                   (n)=IEN
"RTN","LEXQDRG4",111,0)
 N LEXDX I $D(LEXPR) D
"RTN","LEXQDRG4",112,0)
 . N LEXI1,LEXPR1
"RTN","LEXQDRG4",113,0)
 . F LEXI1=2:1 S LEXPR1=$P(LEXPR,"^",LEXI1) Q:LEXPR1=""  D
"RTN","LEXQDRG4",114,0)
 . . N LEXTMP S LEXTMP=$$ICDOP^ICDEX(LEXPR1,$G(LEXDT),,"I")
"RTN","LEXQDRG4",115,0)
 . . I +LEXTMP>0,($P(LEXTMP,"^",10)) D
"RTN","LEXQDRG4",116,0)
 . . . N LEXI3 S LEXI3=$O(ICDPRC(" "),-1)+1,ICDPRC(LEXI3)=LEXPR1
"RTN","LEXQDRG4",117,0)
 I $D(LEXSR) D
"RTN","LEXQDRG4",118,0)
 . N LEXI1,LEXPR1 F LEXI1=2:11 S LEXPR1=$P(LEXSR,"^",LEXI1) Q:LEXPR1=""  D
"RTN","LEXQDRG4",119,0)
 . . N LEXFLG,LEXI2,LEXTMP S LEXFLG=0,LEXI2=0
"RTN","LEXQDRG4",120,0)
 . . F  S LEXI2=$O(ICDPRC(LEXI2)) Q:'LEXI2  I LEXPR1=$G(ICDPRC(LEXI2)) S LEXFLG=1 Q
"RTN","LEXQDRG4",121,0)
 . . Q:LEXFLG  S LEXTMP=$$ICDOP^ICDEX(LEXPR1,$G(LEXDT),,"I")
"RTN","LEXQDRG4",122,0)
 . . I +LEXTMP>0,($P(LEXTMP,"^",10)) D
"RTN","LEXQDRG4",123,0)
 . . . N LEXI3 S LEXI3=$O(ICDPRC(" "),-1)+1,ICDPRC(LEXI3)=LEXPR1
"RTN","LEXQDRG4",124,0)
 Q
"RTN","LEXQDRG4",125,0)
 ;
"RTN","LEXQDRG4",126,0)
DCD ; Display Codes Used
"RTN","LEXQDRG4",127,0)
 N LEXI,LEXC,LEXC2,LEXC3,LEXLEN,LEXT,LEXTX,LEXTD,LEXTI,LEXIEN,LEXCODE,LEXPOA,LEXCC,LEXEXT,LEXSTR,LEXSYS
"RTN","LEXQDRG4",128,0)
 S LEXTD=$$DT^XLFDT,LEXSYS="10P" S:$G(ICDDATE)<$$IMPDATE^LEXU(30) LEXSYS="ICD"
"RTN","LEXQDRG4",129,0)
 S LEXC2=16,LEXC3=25,LEXLEN=(79-LEXC3),LEXIEN=$G(ICDDX(1)) Q:+LEXIEN'>0
"RTN","LEXQDRG4",130,0)
 S LEXCODE=$$CODEC^ICDEX(80,LEXIEN) Q:'$L(LEXCODE)
"RTN","LEXQDRG4",131,0)
 S LEXPOA=$$POA(1),LEXCC=$$CC(1) S:LEXSYS="ICD" LEXPOA=""
"RTN","LEXQDRG4",132,0)
 S LEXEXT="" S:$L(LEXCC) LEXEXT=LEXCC
"RTN","LEXQDRG4",133,0)
 S:'$L(LEXCC)&($L(LEXPOA)) LEXEXT="POA: "_LEXPOA
"RTN","LEXQDRG4",134,0)
 S:$L(LEXCC)&($L(LEXPOA)) LEXEXT=LEXEXT_", POA: "_LEXPOA
"RTN","LEXQDRG4",135,0)
 S:$L(LEXEXT) LEXEXT=" ("_LEXEXT_")"
"RTN","LEXQDRG4",136,0)
 W !!," Principal DX:"
"RTN","LEXQDRG4",137,0)
 S LEXSTR=$P($$ICDDX^ICDEX(LEXIEN,LEXTD,,"I"),"^",4)_LEXEXT
"RTN","LEXQDRG4",138,0)
 K LEXTX S LEXTX(1)=$$UP^XLFSTR(LEXSTR) D PAR(.LEXTX,LEXLEN)
"RTN","LEXQDRG4",139,0)
 W ?LEXC2,LEXCODE,?LEXC3,$G(LEXTX(1)),! S LEXTI=1 F  S LEXTI=$O(LEXTX(LEXTI)) Q:+LEXTI'>0  D
"RTN","LEXQDRG4",140,0)
 . N LEXS S LEXS=$$TM($G(LEXTX(LEXTI))) W:$L(LEXS) ?LEXC3,LEXS,!
"RTN","LEXQDRG4",141,0)
 S (LEXC,LEXT)=0,LEXI=1 F  S LEXI=$O(ICDDX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQDRG4",142,0)
 . N LEXIEN,LEXCODE,LEXPOA,LEXCC,LEXEXT,LEXSTR,LEXTX
"RTN","LEXQDRG4",143,0)
 . S LEXIEN=$G(ICDDX(LEXI)) Q:+LEXIEN'>0
"RTN","LEXQDRG4",144,0)
 . S LEXCODE=$$CODEC^ICDEX(80,LEXIEN) Q:'$L(LEXCODE)
"RTN","LEXQDRG4",145,0)
 . S LEXPOA=$$POA(LEXI),LEXCC=$$CC(LEXI) S:LEXSYS="ICD" LEXPOA=""
"RTN","LEXQDRG4",146,0)
 . S LEXEXT="" S:$L(LEXCC) LEXEXT=LEXCC
"RTN","LEXQDRG4",147,0)
 . S:'$L(LEXCC)&($L(LEXPOA)) LEXEXT="POA: "_LEXPOA
"RTN","LEXQDRG4",148,0)
 . S:$L(LEXCC)&($L(LEXPOA)) LEXEXT=LEXEXT_", POA: "_LEXPOA
"RTN","LEXQDRG4",149,0)
 . S:$L(LEXEXT) LEXEXT=" ("_LEXEXT_")"
"RTN","LEXQDRG4",150,0)
 . S LEXC=LEXC+1 W:LEXC=1 " Secondary DX:"
"RTN","LEXQDRG4",151,0)
 . S LEXSTR=$P($$ICDDX^ICDEX(LEXIEN,LEXTD,,"I"),"^",4)_LEXEXT
"RTN","LEXQDRG4",152,0)
 . K LEXTX S LEXTX(1)=$$UP^XLFSTR(LEXSTR) D PAR(.LEXTX,LEXLEN)
"RTN","LEXQDRG4",153,0)
 . W ?LEXC2,LEXCODE,?LEXC3,$G(LEXTX(1)),! S LEXTI=1 F  S LEXTI=$O(LEXTX(LEXTI)) Q:+LEXTI'>0  D
"RTN","LEXQDRG4",154,0)
 . . N LEXS S LEXS=$$TM($G(LEXTX(LEXTI))) W:$L(LEXS) ?LEXC3,LEXS,!
"RTN","LEXQDRG4",155,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ICDPRC(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQDRG4",156,0)
 . N LEXIEN,LEXCODE S LEXIEN=$G(ICDPRC(LEXI)),LEXCODE=$$CODEC^ICDEX(80.1,LEXIEN)
"RTN","LEXQDRG4",157,0)
 . Q:'$L(LEXCODE)  S LEXC=LEXC+1 W:LEXC=1 " Procedures:"
"RTN","LEXQDRG4",158,0)
 . K LEXTX S LEXTX(1)=$$UP^XLFSTR($P($$ICDOP^ICDEX(LEXIEN,LEXTD,,"I"),"^",5)) D PAR(.LEXTX,LEXLEN)
"RTN","LEXQDRG4",159,0)
 . W ?LEXC2,LEXCODE,?LEXC3,$G(LEXTX(1)),! S LEXTI=1 F  S LEXTI=$O(LEXTX(LEXTI)) Q:+LEXTI'>0  D
"RTN","LEXQDRG4",160,0)
 . . N LEXS S LEXS=$$TM($G(LEXTX(LEXTI))) W:$L(LEXS) ?LEXC3,LEXS,!
"RTN","LEXQDRG4",161,0)
 Q
"RTN","LEXQDRG4",162,0)
POA(X) ;   Present on Admission
"RTN","LEXQDRG4",163,0)
 Q:+($G(X))'>0 ""  S X=$G(ICDPOA(+($G(X))))
"RTN","LEXQDRG4",164,0)
 S X=$S(X="Y":"Yes",X="U":"Unknown",X="W":"Clinically Undetermined",1:"No")
"RTN","LEXQDRG4",165,0)
 Q X
"RTN","LEXQDRG4",166,0)
CC(X) ;   Complication/Comorbidity
"RTN","LEXQDRG4",167,0)
 Q:+($G(X))'>0 ""  S X=$G(ICDDX(+($G(X)))) Q:+($G(X))'>0 ""
"RTN","LEXQDRG4",168,0)
 S X=$$VCC^ICDEX(X,$G(ICDDATE))
"RTN","LEXQDRG4",169,0)
 S X=$S(X=1:"CC",X=2:"Major CC",X=3:"MCC when patient is discharged alive",1:"")
"RTN","LEXQDRG4",170,0)
 Q X
"RTN","LEXQDRG4",171,0)
WRT(X,Y) ;   Write Output
"RTN","LEXQDRG4",172,0)
 N LEXD,LEXDES,LEXDRG,LEXDT,LEXI,LEXN S LEXDRG=$G(X),LEXDT=$G(Y)
"RTN","LEXQDRG4",173,0)
 S LEXD=$$DRG^ICDEX(+LEXDRG,LEXDT) D ATTR
"RTN","LEXQDRG4",174,0)
 W !?10,"Effective Date: ","   ",$$FMTE^XLFDT($P(LEXDT,".",1),"5Z")
"RTN","LEXQDRG4",175,0)
 W !," Diagnosis Related Group: ",$J(LEXDRG,6),?41,"Avg len of stay: ",$J($P(LEXD,"^",8),6)
"RTN","LEXQDRG4",176,0)
 W !?18,"Weight: ",$J($P(LEXD,"^",2),6),?41,"Local Breakeven: ",$J($P(LEXD,"^",12),6)
"RTN","LEXQDRG4",177,0)
 W !?13," Low day(s): ",$J($P(LEXD,"^",3),6),?40,"Local low day(s): ",$J($P(LEXD,"^",9),6)
"RTN","LEXQDRG4",178,0)
 W !?14," High days: ",$J($P(LEXD,"^",4),6),?41,"Local High days: ",$J($P(LEXD,"^",10),6)
"RTN","LEXQDRG4",179,0)
 N LEXN,LEXDES,LEXI S LEXN=$$DRGDES^ICDEX(LEXDRG,LEXDT,.LEXDES,(78-12)) S LEXI=0
"RTN","LEXQDRG4",180,0)
 W !!," DRG: ",$G(BOLD),LEXDRG,$G(NORM)," - "
"RTN","LEXQDRG4",181,0)
 F  S LEXI=$O(LEXDES(LEXI)) Q:'+LEXI  Q:LEXDES(LEXI)=" "  W ?12,LEXDES(LEXI),!
"RTN","LEXQDRG4",182,0)
 D KATTR
"RTN","LEXQDRG4",183,0)
 Q
"RTN","LEXQDRG4",184,0)
PAR(LEXA,X) ;   Parse Array (LEXLEN)
"RTN","LEXQDRG4",185,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC,%,%H,%Y,A,I,Z K ^UTILITY($J,"W") Q:'$D(LEXA)
"RTN","LEXQDRG4",186,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEXA)) S:+($G(LEXC))'>0 LEXC=$O(LEXA(" "),-1) Q:+LEXC'>0
"RTN","LEXQDRG4",187,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEXA(LEXI)) Q:+LEXI=0  S X=$G(LEXA(LEXI)) D ^DIWP
"RTN","LEXQDRG4",188,0)
 K LEXA S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXQDRG4",189,0)
 . S LEXA(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEXQDRG4",190,0)
 S:$L(LEXC) LEXA=LEXC K ^UTILITY($J,"W") K %,%H,%Y,A,I,X,Z
"RTN","LEXQDRG4",191,0)
 Q
"RTN","LEXQDRG4",192,0)
TM(X,Y) ;   Trim Y
"RTN","LEXQDRG4",193,0)
 S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXQDRG4",194,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXQDRG4",195,0)
 Q X
"RTN","LEXQDRG4",196,0)
ATTR ;   Screen Attributes
"RTN","LEXQDRG4",197,0)
 N X,IOINHI,IOINORM S X="IOINHI;IOINORM" D ENDR^%ZISS S BOLD=$G(IOINHI),NORM=$G(IOINORM)
"RTN","LEXQDRG4",198,0)
 Q
"RTN","LEXQDRG4",199,0)
KATTR ;   Kill Screen Attributes
"RTN","LEXQDRG4",200,0)
 D KILL^%ZISS K IOINHI,IOINORM,BOLD,NORM
"RTN","LEXQDRG4",201,0)
 Q
"RTN","LEXQHL2")
0^42^B90501099
"RTN","LEXQHL2",1,0)
LEXQHL2 ;ISL/KER - Query History - ICD-9/10 Procedure Extract ;12/19/2014
"RTN","LEXQHL2",2,0)
 ;;2.0;LEXICON UTILITY;**62,80,86**;Sep 23, 1996;Build 1
"RTN","LEXQHL2",3,0)
 ;           
"RTN","LEXQHL2",4,0)
 ; Global Variables
"RTN","LEXQHL2",5,0)
 ;    ^ICM(               ICR   4488
"RTN","LEXQHL2",6,0)
 ;    ^TMP("LEXQHL")      SACC 2.3.2.5.1
"RTN","LEXQHL2",7,0)
 ;               
"RTN","LEXQHL2",8,0)
 ; External References
"RTN","LEXQHL2",9,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQHL2",10,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQHL2",11,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQHL2",12,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXQHL2",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQHL2",14,0)
 ;               
"RTN","LEXQHL2",15,0)
 Q
"RTN","LEXQHL2",16,0)
EN(X,Y) ; ICD Procedure File
"RTN","LEXQHL2",17,0)
 N LEXIEN,LEXTIEN,LEXDISP,LEXIA,LEXEF,LEXCT,LEXC,LEXSYS,LEXTMP S LEXIEN=$G(X),LEXDISP=$G(Y),LEXIA="" Q:+LEXIEN'>0
"RTN","LEXQHL2",18,0)
 S LEXC=$$CODEC^ICDEX(80.1,+LEXIEN) Q:'$L(LEXC)  S LEXSYS=0 S LEXTIEN=$$CODEABA^ICDEX(LEXC,80.1,2) I LEXTIEN>0 S LEXSYS=2 Q:LEXTIEN'=LEXIEN
"RTN","LEXQHL2",19,0)
 I LEXSYS'>0 S LEXTIEN=$$CODEABA^ICDEX(LEXC,80.1,31) I LEXTIEN>0 S LEXSYS=31 Q:LEXTIEN'=LEXIEN
"RTN","LEXQHL2",20,0)
 Q:+($G(LEXSYS))'>0  K ^TMP("LEXQHL",$J) S ^TMP("LEXQHL",$J,"IEN")=LEXIEN,^TMP("LEXQHL",$J,"CODE")=LEXC
"RTN","LEXQHL2",21,0)
 S LEXTMP=$$ICDOP^ICDEX(LEXIEN,,LEXSYS,"I"),^TMP("LEXQHL",$J,"NAME")=$P(LEXTMP,U,5)
"RTN","LEXQHL2",22,0)
 S:'$L(LEXDISP) LEXDISP="SB" D ST,OP,DS,MD D:$L($G(LEXDISP)) DP K ^TMP("LEXQHL",$J)
"RTN","LEXQHL2",23,0)
 Q
"RTN","LEXQHL2",24,0)
ST ;   1  Status
"RTN","LEXQHL2",25,0)
 N LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXMS,LEXN,LEXS,LEXT,LEXRT,LEXARY S LEXRT=$$ROOT^ICDEX(80.1)
"RTN","LEXQHL2",26,0)
 M LEXARY=@(LEXRT_+LEXIEN_",66)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",27,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",28,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEXMS S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL2",29,0)
 . . Q:+LEXS'>0&(LEXCT'>0)  S LEXCT=LEXCT+1,LEXMS=$$MS^LEXQHLM(LEXE,0),LEXT=$S(+LEXS>0:"Activation",1:"Inactivation")
"RTN","LEXQHL2",30,0)
 . . S:+LEXS>0&(LEXCT=1) LEXT="Initial Activation"_LEXMS,LEXIA=LEXE
"RTN","LEXQHL2",31,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final status change)"
"RTN","LEXQHL2",32,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,1,1)=LEXD_U_LEXT
"RTN","LEXQHL2",33,0)
 Q
"RTN","LEXQHL2",34,0)
OP ;   2  Operation/Procedure
"RTN","LEXQHL2",35,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXS,LEXT,LEXRT,LEXARY S LEXRT=$$ROOT^ICDEX(80.1)
"RTN","LEXQHL2",36,0)
 M LEXARY=@(LEXRT_+LEXIEN_",67)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",37,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",38,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($P(LEXN,U,2))
"RTN","LEXQHL2",39,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL2",40,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Operation/Procedure",+LEXCT>1:"Updated Operation/Procedure",1:"Operation/Procedure")
"RTN","LEXQHL2",41,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final operation/procedure change)"
"RTN","LEXQHL2",42,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,2,1)=LEXD_U_LEXS
"RTN","LEXQHL2",43,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL2",44,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,2," "),-1)+1
"RTN","LEXQHL2",45,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,2,LEXC)=U_LEXT
"RTN","LEXQHL2",46,0)
 Q
"RTN","LEXQHL2",47,0)
DS ;   3  Description
"RTN","LEXQHL2",48,0)
 N LEX,LEXC,LEXCT,LEXD,LEXE,LEXEF,LEXH,LEXI,LEXN,LEXS,LEXT,LEXRT,LEXARY S LEXRT=$$ROOT^ICDEX(80.1)
"RTN","LEXQHL2",49,0)
 M LEXARY=@(LEXRT_+LEXIEN_",68)") S LEXCT=0,LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",50,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",51,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0))
"RTN","LEXQHL2",52,0)
 . . S LEXE=$P(LEXN,U,1),LEXT=$$UP^XLFSTR($G(LEXARY(+LEXH,1)))
"RTN","LEXQHL2",53,0)
 . . S LEXCT=LEXCT+1,LEX(1)=LEXT D PR^LEXQHLM(.LEX,63)
"RTN","LEXQHL2",54,0)
 . . S LEXS=$S(+LEXCT=1:"Initial Description",+LEXCT>1:"Updated Description",1:"Description")
"RTN","LEXQHL2",55,0)
 . . S:$O(LEXARY("B",LEXEF))=""&(LEXCT>1) LEXT=LEXT_" (final description change)"
"RTN","LEXQHL2",56,0)
 . . S LEXD=$$SD^LEXQHLM(LEXE) S ^TMP("LEXQHL",$J,LEXEF,3,1)=LEXD_U_LEXS
"RTN","LEXQHL2",57,0)
 . . S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQHL2",58,0)
 . . . N LEXC S LEXT=$G(LEX(LEXI)) Q:'$L(LEXT)  S LEXC=$O(^TMP("LEXQHL",$J,LEXEF,3," "),-1)+1
"RTN","LEXQHL2",59,0)
 . . . S ^TMP("LEXQHL",$J,LEXEF,3,LEXC)=U_LEXT
"RTN","LEXQHL2",60,0)
 Q
"RTN","LEXQHL2",61,0)
MD ;   4  MDC/DRG Groups
"RTN","LEXQHL2",62,0)
 N LEX1,LEX2,LEX,LEXC1,LEXC2,LEXCMD,LEXCT,LEXD,LEXDG,LEXDI,LEXDR,LEXDRG,LEXE,LEXEF,LEXG
"RTN","LEXQHL2",63,0)
 N EXH,LEXI,LEXM,LEXMC,LEXMCI,LEXMCT,LEXMD,LEXMDG,LEXMDRG,LEXN,LEXNMD,LEXOMD,LEXP,LEXS
"RTN","LEXQHL2",64,0)
 N LEXT,LEXUN,LEXUND,LEXVT,LEXRT,LEXARY S LEXRT=$$ROOT^ICDEX(80.1)
"RTN","LEXQHL2",65,0)
 S:$G(LEXIA)'?7N LEXIA=$$IA(+LEXIEN) S LEXUND="",LEXUN=1,(LEXMCT,LEXMC)=0 K LEXMCI
"RTN","LEXQHL2",66,0)
 M LEXARY=@(LEXRT_+LEXIEN_",2)") S (LEXMCT,LEXCT)=0,(LEXP,LEXEF)=""
"RTN","LEXQHL2",67,0)
 F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",68,0)
 . N LEXH S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",69,0)
 . . N LEXN,LEXS,LEXE,LEXT,LEXD,LEX,LEXI S LEXN=$G(LEXARY(+LEXH,0)),LEXE=$P(LEXN,U,1) Q:LEXE'?7N  S:LEXE=$G(LEXIA) LEXUN=0
"RTN","LEXQHL2",70,0)
 . . S LEXMC=0 F  S LEXMC=$O(LEXARY(+LEXH,1,LEXMC))  Q:+LEXMC'>0  D
"RTN","LEXQHL2",71,0)
 . . . N LEXDG,LEXDRG,LEXN,LEXM S LEXN=$G(LEXARY(+LEXH,1,LEXMC,0)),LEXM=$P(LEXN,U,1)
"RTN","LEXQHL2",72,0)
 . . . Q:+LEXM'>0  S LEXM=$$UP^XLFSTR($P($G(^ICM(+LEXM,0)),U,1)) Q:'$L(LEXM)
"RTN","LEXQHL2",73,0)
 . . . S LEXDRG="",LEXDG=0 F  S LEXDG=$O(LEXARY(+LEXH,1,LEXMC,1,LEXDG))  Q:+LEXDG'>0  D
"RTN","LEXQHL2",74,0)
 . . . . S LEXN=$G(LEXARY(+LEXH,1,LEXMC,1,LEXDG,0)),LEXD=$P(LEXN,U,1) Q:'$L(LEXD)
"RTN","LEXQHL2",75,0)
 . . . . S:$E(LEXDRG,1,$L(LEXD))'=LEXD&(LEXDRG'[(" "_LEXD)) LEXDRG=$G(LEXDRG)_", "_LEXD
"RTN","LEXQHL2",76,0)
 . . . S LEXDRG=$$TM^LEXQHLM($$AND^LEXQHLM($$CS^LEXQHLM(LEXDRG))) S:$L(LEXDRG) LEXDRG="DRG "_LEXDRG Q:'$L(LEXDRG)
"RTN","LEXQHL2",77,0)
 . . . S LEXMCT=+($G(LEXMCT))+1 S LEXNMD(LEXE,LEXMCT,1)=LEXM,LEXNMD(LEXE,LEXMCT,2)=LEXDRG
"RTN","LEXQHL2",78,0)
 K LEXCMD S LEXEF="",(LEXC1,LEXC2)=0 I LEXIA?7N,+($G(LEXUN))>0 F  S LEXEF=$O(LEXOMD(LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",79,0)
 . K LEXNMD(LEXEF) S LEX1=0 F  S LEX1=$O(LEXOMD(LEXEF,LEX1)) Q:+LEX1'>0  S LEXC1=LEXC1+1,LEX2=0 F  S LEX2=$O(LEXOMD(LEXEF,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",80,0)
 . . S LEXC2=LEXC2+1 S:LEX2=1 LEXCMD(+LEXC1,1)=LEXEF_U_$G(LEXOMD(LEXEF,LEX1,LEX2)) S:LEX2=2 LEXCMD(+LEXC1,2)=$G(LEXOMD(LEXEF,LEX1,LEX2))
"RTN","LEXQHL2",81,0)
 S LEXEF="" F  S LEXEF=$O(LEXNMD(LEXEF)) Q:'$L(LEXEF)  D
"RTN","LEXQHL2",82,0)
 . S LEX1=0 F  S LEX1=$O(LEXNMD(LEXEF,LEX1)) Q:+LEX1'>0  S LEXC1=LEXC1+1,LEX2=0,LEXC2=0 F  S LEX2=$O(LEXNMD(LEXEF,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",83,0)
 . . S LEXC2=LEXC2+1 S:LEX2=1 LEXCMD(+LEXC1,1)=LEXEF_U_$G(LEXNMD(LEXEF,LEX1,LEX2)) S:LEX2=2 LEXCMD(+LEXC1,2)=$G(LEXNMD(LEXEF,LEX1,LEX2))
"RTN","LEXQHL2",84,0)
 S (LEXCT,LEXVT,LEXMC,LEX1)=0,LEXP="" F  S LEX1=$O(LEXCMD(LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL2",85,0)
 . N LEXS S LEXN=$G(LEXCMD(LEX1,1)) S LEXE=$P(LEXN,U,1),LEXM=$P(LEXN,U,2) Q:LEXE'?7N  Q:'$L(LEXM)  S LEXG=$G(LEXCMD(LEX1,2)) Q:'$L(LEXG)
"RTN","LEXQHL2",86,0)
 . I LEXE'=LEXP S LEXCT=LEXCT+1 S:LEXE'=LEXIA LEXVT=LEXVT+1
"RTN","LEXQHL2",87,0)
 . S LEXMC=0,LEXMC=LEXMC+1 I +($G(LEXUN))'>0,LEXE=LEXIA S LEXS="Initial Unversioned Major Diagnostic Category/DRG Groups"
"RTN","LEXQHL2",88,0)
 . I +($G(LEXUN))>0,LEXE'=LEXIA,LEXVT=1 S LEXS="Initial Versioned Major Diagnostic Category/DRG Groups"
"RTN","LEXQHL2",89,0)
 . I LEXCT>1 S LEXS="Updated Major Diagnostic Category/DRG Groups"
"RTN","LEXQHL2",90,0)
 . S LEXD=$$SD^LEXQHLM(LEXE),^TMP("LEXQHL",$J,LEXE,4,LEX1,1)=LEXD_U_LEXS,^TMP("LEXQHL",$J,LEXE,4,LEX1,2)=U_LEXM,^TMP("LEXQHL",$J,LEXE,4,LEX1,3)=U_("  "_LEXG)
"RTN","LEXQHL2",91,0)
 . S LEXP=LEXE
"RTN","LEXQHL2",92,0)
 Q
"RTN","LEXQHL2",93,0)
 ;     
"RTN","LEXQHL2",94,0)
DP ; Display
"RTN","LEXQHL2",95,0)
 S LEXDISP=$G(LEXDISP) Q:$L(LEXDISP)>8  Q:$L(LEXDISP)<2  Q:LEXDISP["^"  N LEXL S LEXL=$T(@LEXDISP+0) Q:'$L(LEXL)
"RTN","LEXQHL2",96,0)
 D @LEXDISP
"RTN","LEXQHL2",97,0)
 Q
"RTN","LEXQHL2",98,0)
SB ;   Subjective
"RTN","LEXQHL2",99,0)
 N LEX1,LEX2,LEX3,LEXC,LEXCT,LEXD,LEXE,LEXEC,LEXG,LEXHDR,LEXI,LEXID,LEXM,LEXN,LEXN1,LEXN2,LEXN3,LEXO1,LEXO2,LEXO3,LEXP,LEXS,LEXT
"RTN","LEXQHL2",100,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL2",101,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",102,0)
 F LEXID=1:1:4 D
"RTN","LEXQHL2",103,0)
 . N LEXHDR,LEXCT,LEXEC S (LEXEC,LEXCT)=0,LEXHDR=$$HD(LEXID) Q:'$L(LEXHDR)  S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL2",104,0)
 . . S LEXEC=LEXEC+1 I LEXID=1 D  Q
"RTN","LEXQHL2",105,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,1)) Q:'$L(LEXN)  S LEXE=$P(LEXN,U,1),LEXS=$P(LEXN,U,2) Q:'$L(LEXE)  Q:'$L(LEXS)  S LEXCT=LEXCT+1
"RTN","LEXQHL2",106,0)
 . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) S LEXT=LEXE,LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",107,0)
 . . I LEXID=4 D  Q
"RTN","LEXQHL2",108,0)
 . . . N LEX2,LEXHDR,LEXC,LEXP,LEXO1,LEXO2,LEXO3 S LEXHDR=$$HD(4),(LEXC,LEX2)=0,LEXP="" F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,4,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",109,0)
 . . . . N LEXN1,LEXN2,LEXN3,LEXD,LEXS,LEXM,LEXG
"RTN","LEXQHL2",110,0)
 . . . . S LEXN1=$G(^TMP("LEXQHL",$J,LEX1,4,LEX2,1)) S LEXD=$P(LEXN1,U,1),LEXS=$P(LEXN1,U,2) Q:'$L(LEXD)  Q:'$L(LEXS)
"RTN","LEXQHL2",111,0)
 . . . . S LEXN2=$G(^TMP("LEXQHL",$J,LEX1,4,LEX2,2)) S LEXM=$P(LEXN2,U,2) Q:'$L(LEXM)
"RTN","LEXQHL2",112,0)
 . . . . S LEXN3=$G(^TMP("LEXQHL",$J,LEX1,4,LEX2,3)) S LEXG=$P(LEXN3,U,2) Q:'$L(LEXG)
"RTN","LEXQHL2",113,0)
 . . . . S LEXO1=$G(LEXD),LEXO1=LEXO1_$J(" ",(11-$L(LEXO1)))_"  "_LEXS,LEXO1="   "_LEXO1
"RTN","LEXQHL2",114,0)
 . . . . S LEXO2=$J(" ",11)_"  "_LEXM,LEXO2="   "_LEXO2
"RTN","LEXQHL2",115,0)
 . . . . S LEXO3=$J(" ",11)_"  "_LEXG,LEXO3="   "_LEXO3
"RTN","LEXQHL2",116,0)
 . . . . S LEXC=LEXC+1 I LEXEC=1,LEXC=1 D BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR))
"RTN","LEXQHL2",117,0)
 . . . . D:LEXP'=LEXD TL^LEXQHLM(LEXO1) D TL^LEXQHLM(LEXO2),TL^LEXQHLM(LEXO3)
"RTN","LEXQHL2",118,0)
 . . . . S LEXP=LEXD
"RTN","LEXQHL2",119,0)
 . . N LEX2 S LEX2=0,LEXE="" F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",120,0)
 . . . S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEXID,LEX2)) S:LEX2=1 LEXE=$P(LEXN,U,1) Q:LEX2=1  Q:'$L(LEXE)
"RTN","LEXQHL2",121,0)
 . . . I LEX2=2 D  Q
"RTN","LEXQHL2",122,0)
 . . . . S LEXCT=LEXCT+1,LEXT=$G(LEXE),LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL2",123,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",124,0)
 . . . I LEX2>2 D  Q
"RTN","LEXQHL2",125,0)
 . . . . S LEXCT=LEXCT+1,LEXT="",LEXS=$P(LEXN,U,2),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_"  "_LEXS,LEXT="   "_LEXT
"RTN","LEXQHL2",126,0)
 . . . . D:LEXCT=1 BL^LEXQHLM,TL^LEXQHLM((" "_LEXHDR)) D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",127,0)
 Q
"RTN","LEXQHL2",128,0)
CH ;   Chronological
"RTN","LEXQHL2",129,0)
 N LEX1,LEX2,LEX3,LEXC,LEXD,LEXDC,LEXI,LEXL1,LEXL2,LEXL3,LEXN,LEXP,LEXS,LEXT,LEXT1,LEXT2,LEXT3
"RTN","LEXQHL2",130,0)
 S LEXC=$G(^TMP("LEXQHL",$J,"CODE")),LEXI=$G(^TMP("LEXQHL",$J,"IEN")),LEXN=$G(^TMP("LEXQHL",$J,"NAME"))
"RTN","LEXQHL2",131,0)
 S LEXT="Code:  "_LEXC,LEXT=LEXT_$J(" ",(16-$L(LEXT)))_LEXN D TL^LEXQHLM(LEXT) S LEXT="",LEXT=LEXT_$J(" ",(16-$L(LEXT)))_"IEN:  "_LEXI D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",132,0)
 S LEXP="",LEX1=0 F  S LEX1=$O(^TMP("LEXQHL",$J,LEX1)) Q:+LEX1'>0  D
"RTN","LEXQHL2",133,0)
 . D BL^LEXQHLM N LEX2,LEXDC S (LEXDC,LEX2)=0 F  S LEX2=$O(^TMP("LEXQHL",$J,LEX1,LEX2)) Q:+LEX2'>0  D
"RTN","LEXQHL2",134,0)
 . . I LEX2=4 D  Q
"RTN","LEXQHL2",135,0)
 . . . N LEX3 S LEX3=0 F  S LEX3=$O(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)) Q:+LEX3'>0  D
"RTN","LEXQHL2",136,0)
 . . . . S LEXL1=$G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3,1))
"RTN","LEXQHL2",137,0)
 . . . . S LEXD=$P(LEXL1,U,1),LEXS=$P(LEXL1,U,2) Q:'$L(LEXD)  Q:'$L(LEXS)
"RTN","LEXQHL2",138,0)
 . . . . S LEXL2=$P($G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3,2)),U,2) Q:'$L(LEXL2)
"RTN","LEXQHL2",139,0)
 . . . . S LEXL3=$P($G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3,3)),U,2) Q:'$L(LEXL3)
"RTN","LEXQHL2",140,0)
 . . . . S LEXT1=$S(LEXD'=LEXP:LEXD,1:""),LEXT1=LEXT1_$J(" ",(11-$L(LEXT1)))_$S($L(LEXD):"- ",1:"  ")_LEXS
"RTN","LEXQHL2",141,0)
 . . . . S LEXDC=LEXDC+1,LEXT1="   "_LEXT1 D:LEXDC=1 TL^LEXQHLM(LEXT1)
"RTN","LEXQHL2",142,0)
 . . . . S LEXT2=$J(" ",16)_LEXL2 D TL^LEXQHLM(LEXT2)
"RTN","LEXQHL2",143,0)
 . . . . S LEXT3=$J(" ",16)_LEXL3 D TL^LEXQHLM(LEXT3)
"RTN","LEXQHL2",144,0)
 . . . . S:LEXD'="" LEXP=LEXD
"RTN","LEXQHL2",145,0)
 . . N LEX3 S LEX3=0 F  S LEX3=$O(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)) Q:+LEX3'>0  D
"RTN","LEXQHL2",146,0)
 . . . N LEXN,LEXD,LEXS S LEXN=$G(^TMP("LEXQHL",$J,LEX1,LEX2,LEX3)),LEXD=$P(LEXN,U,1),LEXS=$P(LEXN,U,2)
"RTN","LEXQHL2",147,0)
 . . . S LEXT=$S(LEXD'=LEXP:LEXD,1:""),LEXT=LEXT_$J(" ",(11-$L(LEXT)))_$S($L(LEXD):"- ",1:"  ")_LEXS S LEXT="   "_LEXT D TL^LEXQHLM(LEXT)
"RTN","LEXQHL2",148,0)
 . . . S:LEXD'="" LEXP=LEXD
"RTN","LEXQHL2",149,0)
 Q
"RTN","LEXQHL2",150,0)
 ; 
"RTN","LEXQHL2",151,0)
 ; Miscellaneous
"RTN","LEXQHL2",152,0)
IA(X) ;   Initial Activation
"RTN","LEXQHL2",153,0)
 N LEXEF,LEXH,LEXN,LEXS,LEXE,LEXIEN,LEXRT,LEXARY S LEXIEN=+($G(X)),LEXE="" Q:+LEXIEN'>0 ""
"RTN","LEXQHL2",154,0)
 S LEXRT=$$ROOT^ICDEX(80.1) M LEXARY=@(LEXRT_+LEXIEN_",66)") Q:'$D(LEXARY(0)) ""
"RTN","LEXQHL2",155,0)
 S LEXEF="" F  S LEXEF=$O(LEXARY("B",LEXEF)) Q:'$L(LEXEF)  D  Q:$G(LEXE)?7N
"RTN","LEXQHL2",156,0)
 . S LEXH=0 F  S LEXH=$O(LEXARY("B",LEXEF,LEXH)) Q:+LEXH'>0  D
"RTN","LEXQHL2",157,0)
 . . S LEXN=$G(LEXARY(+LEXH,0)) S:+($P(LEXN,U,2))>0 LEXE=$P(LEXN,U,1) Q:$G(LEXE)?7N
"RTN","LEXQHL2",158,0)
 S X="" S:$G(LEXE)?7N X=$G(LEXE)
"RTN","LEXQHL2",159,0)
 Q X
"RTN","LEXQHL2",160,0)
HD(X) ;   Header
"RTN","LEXQHL2",161,0)
 Q:+($G(X))=1 "Status"  Q:+($G(X))=2 "Operation/Procedure"  Q:+($G(X))=3 "Description"  Q:+($G(X))=4 "Major Diagnostic Category/DRG Groups"
"RTN","LEXQHL2",162,0)
 Q ""
"RTN","LEXQID2")
0^24^B35819355
"RTN","LEXQID2",1,0)
LEXQID2 ;ISL/KER - Query - ICD Diagnosis - Extract (cont) ;12/19/2014
"RTN","LEXQID2",2,0)
 ;;2.0;LEXICON UTILITY;**62,73,80,86**;Sep 23, 1996;Build 1
"RTN","LEXQID2",3,0)
 ;               
"RTN","LEXQID2",4,0)
 ; Global Variables
"RTN","LEXQID2",5,0)
 ;    ^ICM(               ICR   4488
"RTN","LEXQID2",6,0)
 ;               
"RTN","LEXQID2",7,0)
 ; External References
"RTN","LEXQID2",8,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQID2",9,0)
 ;    $$CSI^ICDEX         ICR   5747
"RTN","LEXQID2",10,0)
 ;    $$DTBR^ICDEX        ICR   5747
"RTN","LEXQID2",11,0)
 ;    $$HIST^ICDEX        ICR   5747
"RTN","LEXQID2",12,0)
 ;    $$LA^ICDEX          ICR   5747
"RTN","LEXQID2",13,0)
 ;    $$LD^ICDEX          ICR   5747
"RTN","LEXQID2",14,0)
 ;    $$VMDC^ICDEX        ICR   5747
"RTN","LEXQID2",15,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQID2",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQID2",17,0)
 ;               
"RTN","LEXQID2",18,0)
 ; Local Variables NEWed or KILLed in LEXQID
"RTN","LEXQID2",19,0)
 ;    LEXLX               Local Array containing Lexicon term
"RTN","LEXQID2",20,0)
 ;               
"RTN","LEXQID2",21,0)
 Q
"RTN","LEXQID2",22,0)
LDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Long Description
"RTN","LEXQID2",23,0)
 ; 
"RTN","LEXQID2",24,0)
 ; LEX=# of Lines
"RTN","LEXQID2",25,0)
 ; LEX(0)=External Date of Description
"RTN","LEXQID2",26,0)
 ; LEX(#)=Description
"RTN","LEXQID2",27,0)
 ; 
"RTN","LEXQID2",28,0)
 N LEXBRD,LEXBRW,LEXC,LEXD,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA
"RTN","LEXQID2",29,0)
 N LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLA,LEXLAST,LEXLEF
"RTN","LEXQID2",30,0)
 N LEXLHI,LEXLSD,LEXM,LEXOD,LEXODD,LEXR,LEXS,LEXLD,LEXLDD
"RTN","LEXQID2",31,0)
 N LEXSDT,LEXSO,LEXSY,LEXT S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQID2",32,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID2",33,0)
 S LEXSTA=+($G(LEXSTA)) S LEXSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQID2",34,0)
 S LEXSY=$$CSI^ICDEX(80,+LEXIEN)
"RTN","LEXQID2",35,0)
 S LEXLA=$$LA^ICDEX(80,+LEXIEN,9999999),LEXFA=$$FA(+LEXIEN)
"RTN","LEXQID2",36,0)
 S LEXLSD=$$LD^ICDEX(80,+LEXIEN,LEXLA)
"RTN","LEXQID2",37,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSY),LEXBRW=""
"RTN","LEXQID2",38,0)
 S LEXLD=$$LD^ICDEX(80,+LEXIEN,LEXVDT,.LEXS,245)
"RTN","LEXQID2",39,0)
 S LEXLD=$G(LEXS(1)),LEXLDD=$P($G(LEXS(0)),"^",2)
"RTN","LEXQID2",40,0)
 S:'$L(LEXLD) LEXLDD="--/--/----" S LEXM=""
"RTN","LEXQID2",41,0)
 I $P(LEXLD,"^",1)="-1"!('$L(LEXLD)) D
"RTN","LEXQID2",42,0)
 . S LEXM="Diagnosis Description is not available."
"RTN","LEXQID2",43,0)
 . I (LEXVDT'?7N!(LEXFA'?7N)),LEXVDT<LEXFA D
"RTN","LEXQID2",44,0)
 . . S LEXM=LEXM_"  The date provided precedes the initial activation of the code"
"RTN","LEXQID2",45,0)
 . I LEXVDT?7N&(LEXFA?7N),LEXVDT<LEXFA D
"RTN","LEXQID2",46,0)
 . . S LEXM=LEXM_"  The date provided ("_$$ED^LEXQM(LEXVDT)_") precedes the initial activation ("_$$ED^LEXQM(LEXFA)_") of the code"
"RTN","LEXQID2",47,0)
 . S:$L(LEXM) LEXM="NOTE:  "_LEXM S LEXOD=LEXLSD,LEXODD="--/--/----"
"RTN","LEXQID2",48,0)
 I $L(LEXLD)&($P(LEXLD,"^",1)'="-1") D
"RTN","LEXQID2",49,0)
 . S LEXM="" S LEXOD=LEXLD,LEXODD=$S(LEXLDD?7N:$$ED^LEXQM(LEXLDD),1:"--/--/----")
"RTN","LEXQID2",50,0)
 S:'$L(LEXOD) LEXOD="Diagnosis Description not found"
"RTN","LEXQID2",51,0)
 S:'$L(LEXODD) LEXODD="--/--/----"
"RTN","LEXQID2",52,0)
 K LEX,LEXT S LEXT(1)=LEXOD D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQID2",53,0)
 S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQID2",54,0)
 I $L($G(LEXM)) D
"RTN","LEXQID2",55,0)
 . K LEX,LEXT N LEXC S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQID2",56,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEXC=$O(LEX(" "),-1)+1,LEX(LEXC)=LEXT
"RTN","LEXQID2",57,0)
 S:$D(LEX(1)) LEX(0)=LEXODD
"RTN","LEXQID2",58,0)
 Q
"RTN","LEXQID2",59,0)
LX(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Lexicon Expression
"RTN","LEXQID2",60,0)
 ; 
"RTN","LEXQID2",61,0)
 ; LEX=# of Lines
"RTN","LEXQID2",62,0)
 ; LEX(0)=External Date of Expression
"RTN","LEXQID2",63,0)
 ; LEX(#)=Expression
"RTN","LEXQID2",64,0)
 ; 
"RTN","LEXQID2",65,0)
 N LEXEF,LEXEVDT,LEXLEX,LEXEE,LEXFA,LEXI,LEXIA,LEXIEN,LEXLEF,LEXLHS,LEXLST,LEXM,LEXN0
"RTN","LEXQID2",66,0)
 N LEXPF,LEXSAB,LEXSIEN,LEXSO,LEXT,LEXVTMP S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQID2",67,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXSTA=+($G(LEXSTA))
"RTN","LEXQID2",68,0)
 S LEXEVDT=$$SD^LEXQM(LEXVDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62
"RTN","LEXQID2",69,0)
 Q:'$L(LEXEVDT)  S LEXSO=$$CODEC^ICDEX(80,+LEXIEN)
"RTN","LEXQID2",70,0)
 Q:'$L(LEXSO)  S LEXFA=$$FA(+LEXIEN),LEXM="",LEXIA=$$IA(LEXVDT) S LEXSIEN=0
"RTN","LEXQID2",71,0)
 F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXQID2",72,0)
 . N LEXN0 S LEXN0=$G(^LEX(757.02,+LEXSIEN,0)),LEXSAB=$P(LEXN0,"^",3)
"RTN","LEXQID2",73,0)
 . Q:"^1^30^"'[("^"_LEXSAB_"^")  S LEXPF=+($P(LEXN0,"^",5)) S LEXLEF=$O(^LEX(757.02,+LEXSIEN,4,"B",(LEXVDT+.99999)),-1)
"RTN","LEXQID2",74,0)
 . I LEXLEF?7N D
"RTN","LEXQID2",75,0)
 . . S LEXLHS=$O(^LEX(757.02,+LEXSIEN,4,"B",+LEXLEF," "),-1) I +LEXLHS>0 D
"RTN","LEXQID2",76,0)
 . . . S LEXLST=$G(^LEX(757.02,+LEXSIEN,4,+LEXLHS,0)),LEXLST=$P(LEXLST,"^",2)
"RTN","LEXQID2",77,0)
 . . . S:LEXLST>0 LEXVTMP(+LEXPF,LEXSIEN)=+LEXN0_"^"_LEXLEF
"RTN","LEXQID2",78,0)
 S (LEXLEX,LEXEF)="",LEXSIEN=$O(LEXVTMP(1,0)),LEXLEX=+($G(LEXVTMP(1,+LEXSIEN))),LEXEF=$P($G(LEXVTMP(1,+LEXSIEN)),"^",2)
"RTN","LEXQID2",79,0)
 S:+LEXSIEN'>0!(+LEXLEX'>0) LEXSIEN=$O(LEXVTMP(0,0)),LEXLEX=+($G(LEXVTMP(0,+LEXSIEN))),LEXEF=$P($G(LEXVTMP(0,+LEXSIEN)),"^",2)
"RTN","LEXQID2",80,0)
 K LEX I +LEXLEX>0,$L($G(^LEX(757.01,+LEXLEX,0))),$L(LEXEF),LEXEF?7N  D  Q
"RTN","LEXQID2",81,0)
 . K LEX N LEXT,LEXM,LEXI S LEXT(1)=$G(^LEX(757.01,+LEXLEX,0)) D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQID2",82,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S:$L($G(LEXT(LEXI))) LEX(+LEXI)=$G(LEXT(LEXI))
"RTN","LEXQID2",83,0)
 . S LEX=+($O(LEX(" "),-1)) S LEXEE=$$SD^LEXQM(LEXEF) S LEX(0)=LEXEE
"RTN","LEXQID2",84,0)
 Q
"RTN","LEXQID2",85,0)
WN(X,LEX,LEXLEN) ; Warning
"RTN","LEXQID2",86,0)
 ;            
"RTN","LEXQID2",87,0)
 ; LEX=# of Lines
"RTN","LEXQID2",88,0)
 ; LEX(0)=External Date
"RTN","LEXQID2",89,0)
 ; LEX(#)=Warning
"RTN","LEXQID2",90,0)
 ;            
"RTN","LEXQID2",91,0)
 N LEXVDT,LEXREF,LEXIA,LEXTMP K LEX S LEXVDT=$G(X) Q:LEXVDT'?7N  S LEXIA=$$IA(LEXVDT) Q:+LEXIA'>0  S LEXLEN=+$G(LEXLEN) S:+LEXLEN>62 LEXLEN=62
"RTN","LEXQID2",92,0)
 S LEXREF="Diagnosis (Short Name) and Description" S:$D(LEXLX) LEXREF="Diagnosis (Short Name), Description and Lexicon Term"
"RTN","LEXQID2",93,0)
 S LEXTMP(1)="Warning:  The 'Based on Date' provided precedes Code Set Versioning.  The "_LEXREF_" may be inaccurate for "_$$SD^LEXQM(LEXVDT)
"RTN","LEXQID2",94,0)
 D PR^LEXQM(.LEXTMP,LEXLEN) K LEX S LEXI=0 F  S LEXI=$O(LEXTMP(LEXI)) Q:+LEXI'>0  S LEX(LEXI)=$G(LEXTMP(LEXI))
"RTN","LEXQID2",95,0)
 S LEX=$O(LEX(" "),-1),LEX(0)=$$SD^LEXQM(LEXVDT)
"RTN","LEXQID2",96,0)
 Q
"RTN","LEXQID2",97,0)
MDC(X,LEXVDT,LEX) ; Major Diagnostic Category
"RTN","LEXQID2",98,0)
 ; 
"RTN","LEXQID2",99,0)
 ; LEX=# of Lines
"RTN","LEXQID2",100,0)
 ; LEX(0)=External Date of MDC
"RTN","LEXQID2",101,0)
 ; LEX(#)=MDC
"RTN","LEXQID2",102,0)
 ; 
"RTN","LEXQID2",103,0)
 N LEXEF,LEXMDC,LEXMH,LEXN0,LEXNAM
"RTN","LEXQID2",104,0)
 K LEX S LEX=0,LEXIEN=+($G(X)) Q:+LEXIEN'>0
"RTN","LEXQID2",105,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQID2",106,0)
 S LEXMDC=$$VMDC^ICDEX(+LEXIEN,+LEXVDT,1)
"RTN","LEXQID2",107,0)
 S LEXEF=$P(LEXMDC,"^",2),LEXMDC=$P(LEXMDC,"^",1)
"RTN","LEXQID2",108,0)
 Q:+LEXMDC'>0  Q:'$D(^ICM(+LEXMDC,0))
"RTN","LEXQID2",109,0)
 S LEXNAM=$P($G(^ICM(+LEXMDC,0)),"^",1) Q:'$L(LEXNAM)
"RTN","LEXQID2",110,0)
 S LEX=1,LEX(0)=$$SD^LEXQM(LEXEF),LEX(1)=$$UP^XLFSTR(LEXNAM)
"RTN","LEXQID2",111,0)
 Q
"RTN","LEXQID2",112,0)
 ; Miscellaneous
"RTN","LEXQID2",113,0)
FA(X) ;   First Activation
"RTN","LEXQID2",114,0)
 N LEXFA,LEXH,LEXI,LEXIEN,LEXSO,LEXSY
"RTN","LEXQID2",115,0)
 S LEXIEN=+($G(X)) S X="",LEXSO=$$CODEC^ICDEX(80,+LEXIEN),LEXSY=$$CSI^ICDEX(80,+LEXIEN)
"RTN","LEXQID2",116,0)
 K LEXH S X=$$HIST^ICDEX(LEXSO,.LEXH,LEXSY) S LEXFA="",LEXI=0
"RTN","LEXQID2",117,0)
 F  S LEXI=$O(LEXH(LEXI)) Q:+LEXI'>0!($L(LEXFA))  S:+($G(LEXH(LEXI)))>0&(LEXI?7N) LEXFA=LEXI Q:$L(LEXFA)
"RTN","LEXQID2",118,0)
 S X=LEXFA
"RTN","LEXQID2",119,0)
 Q X
"RTN","LEXQID2",120,0)
IA(X,Y) ;   Inaccurate
"RTN","LEXQID2",121,0)
 N LEXBRD,LEXVDT,LEXIEN,LEXSYS S LEXVDT=+($G(X)),LEXIEN=+($G(Y)) Q:+LEXIEN'>0 0
"RTN","LEXQID2",122,0)
 S LEXSYS=$$CSI^ICDEX(80,+LEXIEN) Q:+LEXSYS'>0 0  S:'$L(LEXVDT) LEXVDT=$$DT^XLFDT
"RTN","LEXQID2",123,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1
"RTN","LEXQID2",124,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSYS) S X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQID2",125,0)
 Q X
"RTN","LEXQIP")
0^25^B89007415
"RTN","LEXQIP",1,0)
LEXQIP ;ISL/KER - Query - ICD Procedure - Extract ;12/19/2014
"RTN","LEXQIP",2,0)
 ;;2.0;LEXICON UTILITY;**62,73,80,86**;Sep 23, 1996;Build 1
"RTN","LEXQIP",3,0)
 ;               
"RTN","LEXQIP",4,0)
 ; Global Variables
"RTN","LEXQIP",5,0)
 ;    ^TMP("LEXQIP")      SACC 2.3.2.5.1
"RTN","LEXQIP",6,0)
 ;    ^TMP("LEXQIPA")     SACC 2.3.2.5.1
"RTN","LEXQIP",7,0)
 ;    ^TMP("LEXQIPO")     SACC 2.3.2.5.1
"RTN","LEXQIP",8,0)
 ;               
"RTN","LEXQIP",9,0)
 ; External References
"RTN","LEXQIP",10,0)
 ;    GETS^DIQ            ICR   2056
"RTN","LEXQIP",11,0)
 ;    $$CODEC^ICDEX       ICR   5747
"RTN","LEXQIP",12,0)
 ;    $$CSI^ICDEX         ICR   5747
"RTN","LEXQIP",13,0)
 ;    $$DTBR^ICDEX        ICR   5747
"RTN","LEXQIP",14,0)
 ;    $$HIST^ICDEX        ICR   5747
"RTN","LEXQIP",15,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQIP",16,0)
 ;    $$LA^ICDEX          ICR   5747
"RTN","LEXQIP",17,0)
 ;    $$LD^ICDEX          ICR   5747
"RTN","LEXQIP",18,0)
 ;    $$MOR^ICDEX         ICR   5747
"RTN","LEXQIP",19,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQIP",20,0)
 ;    $$SD^ICDEX          ICR   5747
"RTN","LEXQIP",21,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQIP",22,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQIP",23,0)
 ;               
"RTN","LEXQIP",24,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQIP",25,0)
 ;    None
"RTN","LEXQIP",26,0)
 ; 
"RTN","LEXQIP",27,0)
EN ; Main Entry Point
"RTN","LEXQIP",28,0)
 N LEXENV S LEXENV=$$EV^LEXQM Q:+LEXENV'>0  N DIC,DTOUT,DUOUT,ICDFMT,ICDSYS,ICDVDT,LEX,LEX1,LEX2,LEX3,LEXAD,LEXBOD,LEXBRD
"RTN","LEXQIP",29,0)
 N LEXBRW,LEXC,LEXCC,LEXCDT,LEXCHR,LEXD,LEXDAT,LEXDDT,LEXDG,LEXDI,LEXDR,LEXDRG,LEXDRG1,LEXDRG2,LEXDRGC,LEXDRGD,LEXDRGI
"RTN","LEXQIP",30,0)
 N LEXDRI,LEXDTXT,LEXDX,LEXE,LEXEDT,LEXEE,LEXEF,LEXEFF,LEXELDT,LEXENV,LEXES,LEXEXIT,LEXFA,LEXFUL,LEXH,LEXHDR,LEXHIS,LEXHR
"RTN","LEXQIP",31,0)
 N LEXI,LEXI1,LEXI2,LEXIA,LEXICP,LEXICPC,LEXID,LEXIDI,LEXIEN,LEXIENS,LEXINC,LEXINCC,LEXINOT,LEXINT,LEXIREQ,LEXL,LEXLA
"RTN","LEXQIP",32,0)
 N LEXLAST,LEXLC,LEXLD,LEXLDD,LEXLDT,LEXLEF,LEXLEN,LEXLHI,LEXLS,LEXLSD,LEXLTXT,LEXLX,LEXM,LEXMC,LEXMDCC,LEXMDCE,LEXMDCI,LEXMI
"RTN","LEXQIP",33,0)
 N LEXMOR,LEXMR,LEXMSG,LEXN,LEXNAM,LEXOD,LEXODD,LEXPC,LEXR,LEXREF,LEXRT,LEXS,LEXSD,LEXSDD,LEXSDT,LEXSO,LEXST,LEXSTA
"RTN","LEXQIP",34,0)
 N LEXSTAT,LEXSTR,LEXSY,LEXSYS,LEXT,LEXTEST,LEXTMP,LEXUD,LEXUM,LEXVDT,LEXVTXT,LEXW,LEXWN,LEXX,X,Y S LEXEXIT=0,LEXCDT=""
"RTN","LEXQIP",35,0)
 K ^TMP("LEXQIP",$J),^TMP("LEXQIPO",$J),^TMP("LEXQIPA",$J)
"RTN","LEXQIP",36,0)
 F  S LEXCDT=$$AD^LEXQM,LEXAD=LEXCDT Q:'$L(LEXCDT)  Q:+($G(LEXEXIT))>0  S LEXEDT=$P(LEXCDT,"^",1),LEXCDT=$P(LEXCDT,"^",2) Q:LEXCDT'?7N  D LOOK Q:LEXCDT'?7N  Q:+($G(LEXEXIT))>0
"RTN","LEXQIP",37,0)
 K ^TMP("LEXQIP",$J),^TMP("LEXQIPO",$J),^TMP("LEXQIPA",$J)
"RTN","LEXQIP",38,0)
 Q
"RTN","LEXQIP",39,0)
LOOK ; ICD Lookup Loop
"RTN","LEXQIP",40,0)
 N LEXDG,LEXST,LEXSD,LEXLD,LEXMOR,LEXWN,LEXCC,LEXMC,LEXICP,LEXICPC
"RTN","LEXQIP",41,0)
 S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT) I LEXCDT'?7N S LEXCDT="" Q
"RTN","LEXQIP",42,0)
 S LEXLEN=62 F  S LEXICP=$$ICP^LEXQIPA  D  Q:LEXICP="^"!(LEXICP="^^")
"RTN","LEXQIP",43,0)
 . S:LEXICP="^^" LEXEXIT=1 Q:LEXICP="^"!(LEXICP="^^")
"RTN","LEXQIP",44,0)
 . K LEXST,LEXSD,LEXLD,LEXWN,LEXCC,LEXMOR,LEXMC,^TMP("LEXQIP",$J)
"RTN","LEXQIP",45,0)
 . N LEXIEN,LEXLDT,LEXELDT,LEXINC,LEXINOT,LEXIREQ,LEXINCC,LEXSO,LEXNAM
"RTN","LEXQIP",46,0)
 . S LEXIEN=+($G(LEXICP)),LEXLDT=+($G(LEXCDT)) Q:+LEXIEN'>0  Q:LEXLDT'?7N
"RTN","LEXQIP",47,0)
 . S LEXELDT=$$SD^LEXQM(LEXLDT) Q:'$L(LEXELDT)
"RTN","LEXQIP",48,0)
 . D CSV,EN^LEXQIP3
"RTN","LEXQIP",49,0)
 Q
"RTN","LEXQIP",50,0)
CSV ; Code Set Versioning Display
"RTN","LEXQIP",51,0)
 N LEXEDT,LEXIEN,LEXIENS,LEXLTXT,LEXSTAT,LEXSYS,LEXMSG,LEXDAT
"RTN","LEXQIP",52,0)
 N LEXT,LEXTMP S LEXCDT=$G(LEXCDT),LEXEDT=$$ED^LEXQM(LEXCDT)
"RTN","LEXQIP",53,0)
 I LEXCDT'?7N S (LEXICP,LEXCDT)="" Q
"RTN","LEXQIP",54,0)
 S LEXIEN=+($G(LEXICP)),LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",55,0)
 S LEXLTXT=$P($G(LEXICP),"^",3) S LEXSYS=$$CSI^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",56,0)
 Q:+LEXIEN'>0  Q:'$L(LEXSO)  Q:+LEXSYS'>0
"RTN","LEXQIP",57,0)
 S LEXDAT=$$ICDOP^ICDEX(LEXSO,LEXCDT,LEXSYS,"E")
"RTN","LEXQIP",58,0)
 S LEXSO=$P(LEXDAT,"^",2),LEXNAM=$P(LEXDAT,"^",5)
"RTN","LEXQIP",59,0)
 I '$L(LEXNAM)!($P(LEXNAM,"^",1)=-1) D
"RTN","LEXQIP",60,0)
 . N LEXLA S LEXLA=$$LA^ICDEX(80.1,+LEXIEN,9999999)
"RTN","LEXQIP",61,0)
 . S LEXNAM=$$SD^ICDEX(80.1,+LEXIEN,LEXLA)
"RTN","LEXQIP",62,0)
 Q:'$L($G(LEXNAM))
"RTN","LEXQIP",63,0)
 ;
"RTN","LEXQIP",64,0)
 ; "Unversioned" Fields
"RTN","LEXQIP",65,0)
 ; 
"RTN","LEXQIP",66,0)
 ;   ,01   Code
"RTN","LEXQIP",67,0)
 ;   1.1   Coding System
"RTN","LEXQIP",68,0)
 ;   1.2   Identifier
"RTN","LEXQIP",69,0)
 ;   1.4   MDC24
"RTN","LEXQIP",70,0)
 ;   1.7   ICD Expanded
"RTN","LEXQIP",71,0)
 ;   1.8   Exclude from Lookup
"RTN","LEXQIP",72,0)
 ;   20    MAJOR O.R. PROC
"RTN","LEXQIP",73,0)
 ;   
"RTN","LEXQIP",74,0)
 S LEXTMP=$$MOR^ICDEX(+LEXIEN) D:$L(LEXTMP) OR^LEXQIP2(LEXTMP,.LEXMOR)
"RTN","LEXQIP",75,0)
 ;            
"RTN","LEXQIP",76,0)
 ; Get the "Versioned" Fields
"RTN","LEXQIP",77,0)
 ;            
"RTN","LEXQIP",78,0)
 ;   Date/Status          80.166  (66)
"RTN","LEXQIP",79,0)
 S LEXST=$$EF(+($G(LEXIEN)),+LEXCDT),LEXSTAT=+($P(LEXST,"^",2))
"RTN","LEXQIP",80,0)
 ;   Procedure Name       80.167  (67)
"RTN","LEXQIP",81,0)
 D SDS(+($G(LEXIEN)),+LEXCDT,.LEXSD,62,LEXSTAT)
"RTN","LEXQIP",82,0)
 ;   Description          80.168  (68)
"RTN","LEXQIP",83,0)
 D LDS(+($G(LEXIEN)),+LEXCDT,.LEXLD,62,LEXSTAT)
"RTN","LEXQIP",84,0)
 ;   Lexicon Expression
"RTN","LEXQIP",85,0)
 D LX^LEXQIP2(+($G(LEXIEN)),+LEXCDT,.LEXLX,62,LEXSTAT)
"RTN","LEXQIP",86,0)
 ;   Warning Message
"RTN","LEXQIP",87,0)
 D WN(+LEXCDT,.LEXWN,62)
"RTN","LEXQIP",88,0)
 ;   MDC/DRG Groups       80.171  (71)
"RTN","LEXQIP",89,0)
 D MDCDRG^LEXQIP2(+LEXIEN,+LEXCDT,.LEXDG,LEXLEN)
"RTN","LEXQIP",90,0)
 Q
"RTN","LEXQIP",91,0)
 ;      
"RTN","LEXQIP",92,0)
EF(X,LEXCDT) ; Effective Dates
"RTN","LEXQIP",93,0)
 N LEX,LEXAD,LEXBRD,LEXBRW,LEXEE,LEXEF,LEXES,LEXFA,LEXH,LEXI,LEXID,LEXIEN,LEXRT,LEXLS,LEXSO,LEXSYS,LEXST S LEXIEN=+($G(X)),LEXCDT=+($G(LEXCDT))
"RTN","LEXQIP",94,0)
 S LEXRT=$$ROOT^ICDEX(80.1) Q:+LEXIEN'>0 "^^"  S LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN) Q:'$L(LEXSO)!($P(LEXSO,"^",1)="-1")  Q:LEXCDT'?7N "^^"
"RTN","LEXQIP",95,0)
 S LEXSYS=$$CSI^ICDEX(80.1,+LEXIEN),LEX=$$ICDOP^ICDEX(LEXSO,LEXCDT,LEXSYS,"E")
"RTN","LEXQIP",96,0)
 S LEXFA=$$FA(+LEXIEN),(LEXLS,LEXST)=$P(LEX,"^",10),LEXID=$P(LEX,"^",12),LEXAD=$P(LEX,"^",13),LEXBRD=2781001,LEXBRW=""
"RTN","LEXQIP",97,0)
 I LEXCDT<LEXBRD&(+LEXFA=LEXBRD) D
"RTN","LEXQIP",98,0)
 . S LEXBRW="Warning:  The 'Based on Date' provided precedes the initial Code Set Business Rule date of "
"RTN","LEXQIP",99,0)
 . S LEXBRW=LEXBRW_$$SD^LEXQM(LEXBRD)_", the Effective date may be inaccurate."
"RTN","LEXQIP",100,0)
 S LEXES=$S(+LEXST>0:"Active",1:"Inactive")
"RTN","LEXQIP",101,0)
 S:+LEXST'>0&(+LEXAD'>0) LEXES="Not Applicable",LEXLS=-1
"RTN","LEXQIP",102,0)
 S:+LEXFA>0&(+LEXCDT>0)&(LEXFA>LEXCDT) LEXES="Pending",LEXLS=-1,LEXST=0,LEXBRW=""
"RTN","LEXQIP",103,0)
 S:LEXST>0 LEXEF=LEXAD S:LEXST'>0 LEXEF=LEXID
"RTN","LEXQIP",104,0)
 S:LEXST'>0&(+LEXID'>0) LEXEF=LEXFA S LEXEE=$$SD^LEXQM(LEXEF)
"RTN","LEXQIP",105,0)
 I LEXST'>0,+LEXID'>0,$L(LEXEE),+LEXEF>LEXCDT S LEXEE="(future activation of "_LEXEE_")",LEXEF=""
"RTN","LEXQIP",106,0)
 S X=LEXLS_"^"_LEXST_"^"_LEXEF_"^"_LEXES_"^"_LEXEE S:$L(LEXBRW) $P(X,"^",6)=LEXBRW
"RTN","LEXQIP",107,0)
 Q X
"RTN","LEXQIP",108,0)
 ; 
"RTN","LEXQIP",109,0)
SDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Operation/Procedure (short description)
"RTN","LEXQIP",110,0)
 ; 
"RTN","LEXQIP",111,0)
 ; LEX=# of Lines
"RTN","LEXQIP",112,0)
 ; LEX(0)=External Date of Operation/Procedure Name
"RTN","LEXQIP",113,0)
 ; LEX(#)=Operation/Procedure Name
"RTN","LEXQIP",114,0)
 ; 
"RTN","LEXQIP",115,0)
 N LEXBRD,LEXBRW,LEXC,LEXD,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA
"RTN","LEXQIP",116,0)
 N LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLA,LEXLAST,LEXLEF
"RTN","LEXQIP",117,0)
 N LEXLHI,LEXLSD,LEXM,LEXOD,LEXODD,LEXR,LEXS,LEXSD,LEXSDD
"RTN","LEXQIP",118,0)
 N LEXSDT,LEXSO,LEXSY,LEXT S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQIP",119,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQIP",120,0)
 S LEXSTA=+($G(LEXSTA)) S LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",121,0)
 S LEXSY=$$CSI^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",122,0)
 S LEXLA=$$LA^ICDEX(80.1,+LEXIEN,9999999),LEXFA=$$FA(+LEXIEN)
"RTN","LEXQIP",123,0)
 S LEXLAST=$$ICDOP^ICDEX(LEXSO,LEXLA,LEXSY,"E")
"RTN","LEXQIP",124,0)
 S LEXLSD=$P(LEXLAST,"^",5),LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSY),LEXBRW=""
"RTN","LEXQIP",125,0)
 S LEXSD=$$SD^ICDEX(80.1,+LEXIEN,LEXVDT,.LEXS)
"RTN","LEXQIP",126,0)
 S LEXSD=$G(LEXS(1)),LEXSDD=$P($G(LEXS(0)),"^",2)
"RTN","LEXQIP",127,0)
 S:'$L(LEXSD) LEXSDD="--/--/----" S LEXM=""
"RTN","LEXQIP",128,0)
 I $P(LEXSD,"^",1)="-1"!('$L(LEXSD)) D
"RTN","LEXQIP",129,0)
 . S LEXM="Operation/Procedure Short Name is not available."
"RTN","LEXQIP",130,0)
 . I (LEXVDT'?7N!(LEXFA'?7N)),LEXVDT<LEXFA D
"RTN","LEXQIP",131,0)
 . . S LEXM=LEXM_"  The date provided precedes the initial activation of the code"
"RTN","LEXQIP",132,0)
 . I LEXVDT?7N&(LEXFA?7N),LEXVDT<LEXFA D
"RTN","LEXQIP",133,0)
 . . S LEXM=LEXM_"  The date provided ("_$$ED^LEXQM(LEXVDT)_") precedes the initial activation ("_$$ED^LEXQM(LEXFA)_") of the code"
"RTN","LEXQIP",134,0)
 . S:$L(LEXM) LEXM="NOTE:  "_LEXM S LEXOD=LEXLSD,LEXODD="--/--/----"
"RTN","LEXQIP",135,0)
 I $L(LEXSD)&($P(LEXSD,"^",1)'="-1") D
"RTN","LEXQIP",136,0)
 . S LEXM="" S LEXOD=LEXSD,LEXODD=$S(LEXSDD?7N:$$ED^LEXQM(LEXSDD),1:"--/--/----")
"RTN","LEXQIP",137,0)
 S:'$L(LEXOD) LEXOD="Operation/Procedure Short Name not found"
"RTN","LEXQIP",138,0)
 S:'$L(LEXODD) LEXODD="--/--/----"
"RTN","LEXQIP",139,0)
 K LEX,LEXT S LEXT(1)=LEXOD D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP",140,0)
 S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQIP",141,0)
 I $L($G(LEXM)) D
"RTN","LEXQIP",142,0)
 . K LEX,LEXT N LEXC S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP",143,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEXC=$O(LEX(" "),-1)+1,LEX(LEXC)=LEXT
"RTN","LEXQIP",144,0)
 S:$D(LEX(1)) LEX(0)=LEXODD
"RTN","LEXQIP",145,0)
 Q
"RTN","LEXQIP",146,0)
LDS(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Operation/Procedure (short description)
"RTN","LEXQIP",147,0)
 ; 
"RTN","LEXQIP",148,0)
 ; LEX=# of Lines
"RTN","LEXQIP",149,0)
 ; LEX(0)=External Date of Operation/Procedure Name
"RTN","LEXQIP",150,0)
 ; LEX(#)=Operation/Procedure Name
"RTN","LEXQIP",151,0)
 ; 
"RTN","LEXQIP",152,0)
 N LEXBRD,LEXBRW,LEXC,LEXD,LEXDDT,LEXE,LEXEE,LEXEFF,LEXFA
"RTN","LEXQIP",153,0)
 N LEXHIS,LEXI,LEXIA,LEXIEN,LEXL,LEXLA,LEXLAST,LEXLEF
"RTN","LEXQIP",154,0)
 N LEXLHI,LEXLSD,LEXM,LEXOD,LEXODD,LEXR,LEXS,LEXLD,LEXLDD
"RTN","LEXQIP",155,0)
 N LEXSDT,LEXSO,LEXSY,LEXT S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQIP",156,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT
"RTN","LEXQIP",157,0)
 S LEXSTA=+($G(LEXSTA)) S LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",158,0)
 S LEXSY=$$CSI^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",159,0)
 S LEXLA=$$LA^ICDEX(80.1,+LEXIEN,9999999),LEXFA=$$FA(+LEXIEN)
"RTN","LEXQIP",160,0)
 S LEXLSD=$$LD^ICDEX(80.1,+LEXIEN,LEXLA)
"RTN","LEXQIP",161,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSY),LEXBRW=""
"RTN","LEXQIP",162,0)
 S LEXLD=$$LD^ICDEX(80.1,+LEXIEN,LEXVDT,.LEXS,245)
"RTN","LEXQIP",163,0)
 S LEXLD=$G(LEXS(1)),LEXLDD=$P($G(LEXS(0)),"^",2)
"RTN","LEXQIP",164,0)
 S:'$L(LEXLD) LEXLDD="--/--/----" S LEXM=""
"RTN","LEXQIP",165,0)
 I $P(LEXLD,"^",1)="-1"!('$L(LEXLD)) D
"RTN","LEXQIP",166,0)
 . S LEXM="Operation/Procedure Description is not available."
"RTN","LEXQIP",167,0)
 . I (LEXVDT'?7N!(LEXFA'?7N)),LEXVDT<LEXFA D
"RTN","LEXQIP",168,0)
 . . S LEXM=LEXM_"  The date provided precedes the initial activation of the code"
"RTN","LEXQIP",169,0)
 . I LEXVDT?7N&(LEXFA?7N),LEXVDT<LEXFA D
"RTN","LEXQIP",170,0)
 . . S LEXM=LEXM_"  The date provided ("_$$ED^LEXQM(LEXVDT)_") precedes the initial activation ("_$$ED^LEXQM(LEXFA)_") of the code"
"RTN","LEXQIP",171,0)
 . S:$L(LEXM) LEXM="NOTE:  "_LEXM S LEXOD=LEXLSD,LEXODD="--/--/----"
"RTN","LEXQIP",172,0)
 I $L(LEXLD)&($P(LEXLD,"^",1)'="-1") D
"RTN","LEXQIP",173,0)
 . S LEXM="" S LEXOD=LEXLD,LEXODD=$S(LEXLDD?7N:$$ED^LEXQM(LEXLDD),1:"--/--/----")
"RTN","LEXQIP",174,0)
 S:'$L(LEXOD) LEXOD="Operation/Procedure Description not found"
"RTN","LEXQIP",175,0)
 S:'$L(LEXODD) LEXODD="--/--/----"
"RTN","LEXQIP",176,0)
 K LEX,LEXT S LEXT(1)=LEXOD D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP",177,0)
 S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEX(LEXI)=LEXT
"RTN","LEXQIP",178,0)
 I $L($G(LEXM)) D
"RTN","LEXQIP",179,0)
 . K LEX,LEXT N LEXC S LEXT(1)=LEXM D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP",180,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S LEXT=$G(LEXT(LEXI)) S LEXC=$O(LEX(" "),-1)+1,LEX(LEXC)=LEXT
"RTN","LEXQIP",181,0)
 S:$D(LEX(1)) LEX(0)=LEXODD
"RTN","LEXQIP",182,0)
 Q
"RTN","LEXQIP",183,0)
 ;
"RTN","LEXQIP",184,0)
WN(X,LEX,LEXLEN) ; Warning
"RTN","LEXQIP",185,0)
 ;            
"RTN","LEXQIP",186,0)
 ; LEX=# of Lines
"RTN","LEXQIP",187,0)
 ; LEX(0)=External Date
"RTN","LEXQIP",188,0)
 ; LEX(#)=Warning
"RTN","LEXQIP",189,0)
 ;            
"RTN","LEXQIP",190,0)
 N LEXVDT,LEXREF,LEXIA,LEXTMP K LEX S LEXVDT=$G(X) Q:LEXVDT'?7N  S LEXLEN=+$G(LEXLEN) S LEXIA=$$IA(LEXVDT,LEXIEN) Q:+LEXIA'>0  S:+LEXLEN>62 LEXLEN=62
"RTN","LEXQIP",191,0)
 S LEXTMP(1)="Warning:  The 'Based on Date' provided precedes Code Set Versioning.  The Operation/Procedure (Short Name) and Description may be inaccurate for "_$$SD^LEXQM(LEXVDT)
"RTN","LEXQIP",192,0)
 D PR^LEXQM(.LEXTMP,LEXLEN) K LEX S LEXI=0 F  S LEXI=$O(LEXTMP(LEXI)) Q:+LEXI'>0  S LEX(LEXI)=$G(LEXTMP(LEXI))
"RTN","LEXQIP",193,0)
 S LEX=$O(LEX(" "),-1),LEX(0)=$$SD^LEXQM(LEXVDT)
"RTN","LEXQIP",194,0)
 Q
"RTN","LEXQIP",195,0)
 ; Miscellaneous
"RTN","LEXQIP",196,0)
FA(X) ;   First Activation
"RTN","LEXQIP",197,0)
 N LEXFA,LEXH,LEXI,LEXIEN,LEXSO,LEXSY
"RTN","LEXQIP",198,0)
 S LEXIEN=+($G(X)) S X="",LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN),LEXSY=$$CSI^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP",199,0)
 K LEXH S X=$$HIST^ICDEX(LEXSO,.LEXH,LEXSY) S LEXFA="",LEXI=0
"RTN","LEXQIP",200,0)
 F  S LEXI=$O(LEXH(LEXI)) Q:+LEXI'>0!($L(LEXFA))  S:+($G(LEXH(LEXI)))>0&(LEXI?7N) LEXFA=LEXI Q:$L(LEXFA)
"RTN","LEXQIP",201,0)
 S X=LEXFA
"RTN","LEXQIP",202,0)
 Q X
"RTN","LEXQIP",203,0)
IA(X,Y) ;   Inaccurate
"RTN","LEXQIP",204,0)
 N LEXBRD,LEXVDT,LEXIEN,LEXSYS S LEXVDT=+($G(X)),LEXIEN=+($G(Y)) Q:+LEXIEN'>0 0
"RTN","LEXQIP",205,0)
 S LEXSYS=$$CSI^ICDEX(80.1,+LEXIEN) Q:+LEXSYS'>0 0  S:'$L(LEXVDT) LEXVDT=$$DT^XLFDT
"RTN","LEXQIP",206,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1
"RTN","LEXQIP",207,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSYS) S X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQIP",208,0)
 Q X
"RTN","LEXQIP2")
0^26^B27132313
"RTN","LEXQIP2",1,0)
LEXQIP2 ;ISL/KER - Query - ICD Procedure - Extract ;12/19/2014
"RTN","LEXQIP2",2,0)
 ;;2.0;LEXICON UTILITY;**62,80,86**;Sep 23, 1996;Build 1
"RTN","LEXQIP2",3,0)
 ;               
"RTN","LEXQIP2",4,0)
 ; Global Variables
"RTN","LEXQIP2",5,0)
 ;    None
"RTN","LEXQIP2",6,0)
 ;               
"RTN","LEXQIP2",7,0)
 ; External References
"RTN","LEXQIP2",8,0)
 ;    $$MOR^ICDEX         ICR   5747
"RTN","LEXQIP2",9,0)
 ;    MD^ICDEX            ICR   5747
"RTN","LEXQIP2",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQIP2",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQIP2",12,0)
 ;               
"RTN","LEXQIP2",13,0)
 ; Documented Integration Agreements
"RTN","LEXQIP2",14,0)
 ;               
"RTN","LEXQIP2",15,0)
 ; Local Variables NEWed or KILLed in LEXQIP
"RTN","LEXQIP2",16,0)
 ;     LEXINT
"RTN","LEXQIP2",17,0)
 ;               
"RTN","LEXQIP2",18,0)
 Q
"RTN","LEXQIP2",19,0)
LX(X,LEXVDT,LEX,LEXLEN,LEXSTA) ; Lexicon Expression
"RTN","LEXQIP2",20,0)
 ; 
"RTN","LEXQIP2",21,0)
 ; LEX=# of Lines
"RTN","LEXQIP2",22,0)
 ; LEX(0)=External Date of Expression
"RTN","LEXQIP2",23,0)
 ; LEX(#)=Expression
"RTN","LEXQIP2",24,0)
 ; 
"RTN","LEXQIP2",25,0)
 N LEXEF,LEXEVDT,LEXLEX,LEXEE,LEXFA,LEXI,LEXIA,LEXIEN,LEXLEF,LEXLHS,LEXLST,LEXM,LEXN0
"RTN","LEXQIP2",26,0)
 N LEXPF,LEXSAB,LEXSIEN,LEXSO,LEXT,LEXVTMP S LEXIEN=$G(X) Q:+LEXIEN'>0
"RTN","LEXQIP2",27,0)
 S LEXVDT=+($G(LEXVDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT S LEXSTA=+($G(LEXSTA))
"RTN","LEXQIP2",28,0)
 S LEXEVDT=$$SD^LEXQM(LEXVDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62
"RTN","LEXQIP2",29,0)
 Q:'$L(LEXEVDT)  S LEXSO=$$CODEC^ICDEX(80.1,+LEXIEN)
"RTN","LEXQIP2",30,0)
 Q:'$L(LEXSO)  S LEXFA=$$FA(+LEXIEN),LEXM="",LEXIA=$$IA(LEXVDT) S LEXSIEN=0
"RTN","LEXQIP2",31,0)
 F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXQIP2",32,0)
 . N LEXN0 S LEXN0=$G(^LEX(757.02,+LEXSIEN,0)),LEXSAB=$P(LEXN0,"^",3)
"RTN","LEXQIP2",33,0)
 . Q:"^2^31^"'[("^"_LEXSAB_"^")  S LEXPF=+($P(LEXN0,"^",5)) S LEXLEF=$O(^LEX(757.02,+LEXSIEN,4,"B",(LEXVDT+.99999)),-1)
"RTN","LEXQIP2",34,0)
 . I LEXLEF?7N D
"RTN","LEXQIP2",35,0)
 . . S LEXLHS=$O(^LEX(757.02,+LEXSIEN,4,"B",+LEXLEF," "),-1) I +LEXLHS>0 D
"RTN","LEXQIP2",36,0)
 . . . S LEXLST=$G(^LEX(757.02,+LEXSIEN,4,+LEXLHS,0)),LEXLST=$P(LEXLST,"^",2)
"RTN","LEXQIP2",37,0)
 . . . S:LEXLST>0 LEXVTMP(+LEXPF,LEXSIEN)=+LEXN0_"^"_LEXLEF
"RTN","LEXQIP2",38,0)
 S (LEXLEX,LEXEF)="",LEXSIEN=$O(LEXVTMP(1,0)),LEXLEX=+($G(LEXVTMP(1,+LEXSIEN))),LEXEF=$P($G(LEXVTMP(1,+LEXSIEN)),"^",2)
"RTN","LEXQIP2",39,0)
 S:+LEXSIEN'>0!(+LEXLEX'>0) LEXSIEN=$O(LEXVTMP(0,0)),LEXLEX=+($G(LEXVTMP(0,+LEXSIEN))),LEXEF=$P($G(LEXVTMP(0,+LEXSIEN)),"^",2)
"RTN","LEXQIP2",40,0)
 K LEX I +LEXLEX>0,$L($G(^LEX(757.01,+LEXLEX,0))),$L(LEXEF),LEXEF?7N  D  Q
"RTN","LEXQIP2",41,0)
 . K LEX N LEXT,LEXM,LEXI S LEXT(1)=$G(^LEX(757.01,+LEXLEX,0)) D PR^LEXQM(.LEXT,(LEXLEN-7))
"RTN","LEXQIP2",42,0)
 . S LEXI=0 F  S LEXI=$O(LEXT(LEXI)) Q:+LEXI'>0  S:$L($G(LEXT(LEXI))) LEX(+LEXI)=$G(LEXT(LEXI))
"RTN","LEXQIP2",43,0)
 . S LEX=+($O(LEX(" "),-1)) S LEXEE=$$SD^LEXQM(LEXEF) S LEX(0)=LEXEE
"RTN","LEXQIP2",44,0)
 Q
"RTN","LEXQIP2",45,0)
FA(X) ;   First Activation
"RTN","LEXQIP2",46,0)
 N LEXFA,LEXH,LEXI,LEXIEN,LEXSO,LEXSY
"RTN","LEXQIP2",47,0)
 S LEXIEN=+($G(X)) S X="",LEXSO=$$CODEC^ICDEX(80,+LEXIEN),LEXSY=$$CSI^ICDEX(80,+LEXIEN)
"RTN","LEXQIP2",48,0)
 K LEXH S X=$$HIST^ICDEX(LEXSO,.LEXH,LEXSY) S LEXFA="",LEXI=0
"RTN","LEXQIP2",49,0)
 F  S LEXI=$O(LEXH(LEXI)) Q:+LEXI'>0!($L(LEXFA))  S:+($G(LEXH(LEXI)))>0&(LEXI?7N) LEXFA=LEXI Q:$L(LEXFA)
"RTN","LEXQIP2",50,0)
 S X=LEXFA
"RTN","LEXQIP2",51,0)
 Q X
"RTN","LEXQIP2",52,0)
IA(X,Y) ;   Inaccurate
"RTN","LEXQIP2",53,0)
 N LEXBRD,LEXVDT,LEXIEN,LEXSYS S LEXVDT=+($G(X)),LEXIEN=+($G(Y)) Q:+LEXIEN'>0 0
"RTN","LEXQIP2",54,0)
 S LEXSYS=$$CSI^ICDEX(80,+LEXIEN) Q:+LEXSYS'>0 0  S:'$L(LEXVDT) LEXVDT=$$DT^XLFDT
"RTN","LEXQIP2",55,0)
 S:LEXVDT#10000=0 LEXVDT=LEXVDT+101 S:LEXVDT#100=0 LEXVDT=LEXVDT+1
"RTN","LEXQIP2",56,0)
 S LEXBRD=$$DTBR^ICDEX(LEXVDT,0,LEXSYS) S X=$S(LEXVDT<LEXBRD:1,1:0)
"RTN","LEXQIP2",57,0)
 Q X
"RTN","LEXQIP2",58,0)
MDCDRG(X,LEXCDT,LEX,LEXLEN) ; Major Diagnostic Category/DRG
"RTN","LEXQIP2",59,0)
 N LEXAI,LEXC,LEXDA,LEXDI,LEXEF,LEXFY,LEXI,LEXIEN,LEXL,LEXLC,LEXMDCC,LEXMDCS,LEXME,LEXMI,LEXN,LEXT
"RTN","LEXQIP2",60,0)
 N LEXT1,LEXT2,LEXUD,LEXUM,LEXVDT S LEXVDT=+($G(LEXCDT)) S:LEXVDT'?7N LEXVDT=$$DT^XLFDT K LEXUM,LEXUD,LEX
"RTN","LEXQIP2",61,0)
 S LEXLC=0,LEXIEN=+($G(X)),LEXCDT=$G(LEXCDT),LEXLEN=+($G(LEXLEN)) S:+LEXLEN'>0 LEXLEN=62 Q:LEXCDT'?7N
"RTN","LEXQIP2",62,0)
 D MD^ICDEX(80.1,+LEXIEN,$G(LEXCDT),.LEXMDCS,"IE")
"RTN","LEXQIP2",63,0)
 S LEXMDCC=0,LEXMI=0,(LEXEF,LEXFY)=$O(LEXMDCS(0)) Q:LEXFY'>0
"RTN","LEXQIP2",64,0)
 S LEXMI=0 F  S LEXMI=$O(LEXMDCS(LEXFY,"E",LEXMI)) Q:+LEXMI'>0  D
"RTN","LEXQIP2",65,0)
 . S LEXME=$G(LEXMDCS(LEXFY,"E",LEXMI)) Q:'$L(LEXME)
"RTN","LEXQIP2",66,0)
 . S LEXI=$O(LEX(" "),-1)+1,LEX(LEXI)=LEXME
"RTN","LEXQIP2",67,0)
 . S LEXDI=0 F  S LEXDI=$O(LEXMDCS(LEXFY,"E",LEXMI,LEXDI)) Q:+LEXDI'>0  D
"RTN","LEXQIP2",68,0)
 . . K LEXDA S LEXDA(1)=$G(LEXMDCS(LEXFY,"E",LEXMI,LEXDI))
"RTN","LEXQIP2",69,0)
 . . D PR^LEXQM(.LEXDA,(LEXLEN-14)) S LEXT1="    DRG "_LEXDI
"RTN","LEXQIP2",70,0)
 . . S LEXT1=LEXT1_$J(" ",(14-$L(LEXT1))),LEXT2=$J(" ",14)
"RTN","LEXQIP2",71,0)
 . . S (LEXC,LEXI)=0 F  S LEXI=$O(LEXDA(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQIP2",72,0)
 . . . N LEXT,LEXL,LEXN,LEXAI S LEXT=$$TM^LEXQM($G(LEXDA(LEXI)))
"RTN","LEXQIP2",73,0)
 . . . Q:'$L(LEXT)  S LEXC=LEXC+1 S:LEXC=1 LEXL=LEXT1_LEXT S:LEXC>1 LEXL=LEXT2_LEXT
"RTN","LEXQIP2",74,0)
 . . . S LEXAI=$O(LEX(" "),-1)+1,LEX(LEXAI)=LEXL
"RTN","LEXQIP2",75,0)
 S:LEXEF?7N&($L(LEX(1))) LEX(0)=$$SD^LEXQM(LEXEF) S LEX=+($O(LEX(" "),-1))
"RTN","LEXQIP2",76,0)
 Q
"RTN","LEXQIP2",77,0)
MAJ(X,LEX) ; Major O.R. Procedures
"RTN","LEXQIP2",78,0)
 N LEXC,LEXCHR,LEXHDR,LEXI,LEXI1,LEXI2,LEXIDI,LEXIEN,LEXPC,LEXSTR,LEXT S LEXIEN=+($G(X)) Q:+LEXIEN'>0
"RTN","LEXQIP2",79,0)
 S LEXSTR=$$MOR^ICDEX(+LEXIEN) Q:'$L(LEXSTR)  D OR(LEXSTR,.LEX)
"RTN","LEXQIP2",80,0)
 Q
"RTN","LEXQIP2",81,0)
OR(X,LEX) ; O.R. Procedures
"RTN","LEXQIP2",82,0)
 K LEX N LEXC,LEXCHR,LEXHDR,LEXI,LEXI1,LEXI2,LEXIDI,LEXPC,LEXSTR,LEXT S LEXSTR=$G(X) Q:'$L(LEXSTR)
"RTN","LEXQIP2",83,0)
 S LEXHDR="Major O.R. ID",LEXPC=0,LEXCHR="" F LEXC=1:1  Q:'$L($E(LEXSTR,LEXC))  D
"RTN","LEXQIP2",84,0)
 . S LEXCHR=$E(LEXSTR,LEXC) Q:LEXCHR=""  F LEXI=1:1 S LEXIDI=$T(MID+LEXI),LEXIDI=$P(LEXIDI,";;",2) Q:LEXIDI="EXIT"  D
"RTN","LEXQIP2",85,0)
 . . S LEXI1=$$TM^LEXQM($P(LEXIDI,"=")),LEXI2=$$TM^LEXQM($P(LEXIDI,"=",2)) Q:$L(LEXI1)'=1  Q:LEXI1'=LEXCHR  Q:'$L(LEXI2)
"RTN","LEXQIP2",86,0)
 . . S LEXT=LEXI2 S:$D(LEXINT) LEXT=LEXT_$J(" ",(22-$L(LEXT)))_"("_LEXI1_")" S LEXPC=LEXPC+1,LEX(1,LEXPC)=$$UP^XLFSTR(LEXT)
"RTN","LEXQIP2",87,0)
 S:+($O(LEX(1," "),-1))>0 LEX(0)=$$UP^XLFSTR(LEXHDR),LEX(1)=$$UP^XLFSTR(LEXSTR),LEX=+($O(LEX(1," "),-1))
"RTN","LEXQIP2",88,0)
 Q
"RTN","LEXQIP2",89,0)
MID ; Major O.R. Procedures Text
"RTN","LEXQIP2",90,0)
 ;;1=Bowel
"RTN","LEXQIP2",91,0)
 ;;2=Chest
"RTN","LEXQIP2",92,0)
 ;;3=Lymphoma/Leukemia
"RTN","LEXQIP2",93,0)
 ;;4=Joint
"RTN","LEXQIP2",94,0)
 ;;5=Pancreas/Liver
"RTN","LEXQIP2",95,0)
 ;;6=Pelvic
"RTN","LEXQIP2",96,0)
 ;;7=Shoulder/Elbow
"RTN","LEXQIP2",97,0)
 ;;8=Thumb/Joint
"RTN","LEXQIP2",98,0)
 ;;9=Head/Neck
"RTN","LEXQIP2",99,0)
 ;;A=Cardio
"RTN","LEXQIP2",100,0)
 ;;M=Musculoskeletal
"RTN","LEXQIP2",101,0)
 ;;EXIT
"RTN","LEXQIP2",102,0)
 Q
"RTN","LEXQIP3")
0^27^B32494278
"RTN","LEXQIP3",1,0)
LEXQIP3 ;ISL/KER - Query - ICD Procedure - Save ;12/19/2014
"RTN","LEXQIP3",2,0)
 ;;2.0;LEXICON UTILITY;**62,73,80,86**;Sep 23, 1996;Build 1
"RTN","LEXQIP3",3,0)
 ;               
"RTN","LEXQIP3",4,0)
 ; Global Variables
"RTN","LEXQIP3",5,0)
 ;    ^TMP("LEXQIPO")     SACC 2.3.2.5.1
"RTN","LEXQIP3",6,0)
 ;               
"RTN","LEXQIP3",7,0)
 ; External References
"RTN","LEXQIP3",8,0)
 ;    $$VSEX^ICDEX        ICR   5747
"RTN","LEXQIP3",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQIP3",10,0)
 ;               
"RTN","LEXQIP3",11,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXQIP3",12,0)
 ;    LEXCDT             Code Set Versioning Date
"RTN","LEXQIP3",13,0)
 ;    LEXDG              DRG Array
"RTN","LEXQIP3",14,0)
 ;    LEXIEN             Internal Entry Number
"RTN","LEXQIP3",15,0)
 ;    LEXLEN             Offset Length
"RTN","LEXQIP3",16,0)
 ;    LEXSO              Code
"RTN","LEXQIP3",17,0)
 ;    LEXNAM             Unversioned Name
"RTN","LEXQIP3",18,0)
 ;    LEXST              Status and Effective Dates
"RTN","LEXQIP3",19,0)
 ;    LEXSD              Versioned Short Description
"RTN","LEXQIP3",20,0)
 ;    LEXLD              Versioned Long Description
"RTN","LEXQIP3",21,0)
 ;    LEXWN              Warning
"RTN","LEXQIP3",22,0)
 ;    LEXMOR             Major O.R. Procedure
"RTN","LEXQIP3",23,0)
 ;    LEXDG              MDC/DRG
"RTN","LEXQIP3",24,0)
 ;    LEXELDT            External Last Date
"RTN","LEXQIP3",25,0)
 ;    LEXLX              Lexicon Expressioin
"RTN","LEXQIP3",26,0)
 ;              
"RTN","LEXQIP3",27,0)
EN ; Main Entry Point
"RTN","LEXQIP3",28,0)
 K ^TMP("LEXQIPO",$J) Q:'$L($G(LEXELDT))  I +($G(LEXST))<0 D FUT D:$D(^TMP("LEXQIPO",$J)) DSP^LEXQO("LEXQIPO") Q
"RTN","LEXQIP3",29,0)
 D FUL D:$D(^TMP("LEXQIPO",$J)) DSP^LEXQO("LEXQIPO")
"RTN","LEXQIP3",30,0)
 Q
"RTN","LEXQIP3",31,0)
FUT ; Future Activation
"RTN","LEXQIP3",32,0)
 N LEX1,LEX2,LEX3,LEXEFF,LEXI,LEXL,LEXSTA S LEXI=+($G(LEXIEN)) Q:+LEXI'>0
"RTN","LEXQIP3",33,0)
 S LEXL=+($G(LEXLEN)) Q:+LEXL'>0  S:LEXL>62 LEXL=62
"RTN","LEXQIP3",34,0)
 Q:'$L(LEXSO)  Q:'$L(LEXNAM)  S LEXSTA=$G(LEXST)
"RTN","LEXQIP3",35,0)
 S LEXEFF=$P(LEXSTA,"^",5),LEXSTA=$P(LEXSTA,"^",4)
"RTN","LEXQIP3",36,0)
 Q:'$L(LEXSTA)  Q:'$L(LEXEFF)  S (LEX1,LEX2,LEX3)=""
"RTN","LEXQIP3",37,0)
 D BOD(LEXELDT),COD(LEXSO,LEXNAM,+($G(LEXL))),STA(.LEXST,+($G(LEXL)))
"RTN","LEXQIP3",38,0)
 Q
"RTN","LEXQIP3",39,0)
BOD(X) ;   Based on Date
"RTN","LEXQIP3",40,0)
 N LEXBOD S LEXBOD=$G(X),X="Display based on date:  "_LEXBOD D BL,TL(X)
"RTN","LEXQIP3",41,0)
 Q
"RTN","LEXQIP3",42,0)
COD(X,Y,LEXLEN) ;   Code Line
"RTN","LEXQIP3",43,0)
 N LEXC,LEXN,LEXT S LEXC=$G(X),LEXN=$G(Y),LEXT="Code:  "_LEXC
"RTN","LEXQIP3",44,0)
 S LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQIP3",45,0)
 Q
"RTN","LEXQIP3",46,0)
STA(X,LEXLEN) ;   Status Line
"RTN","LEXQIP3",47,0)
 N LEX,LEXC,LEXX,LEXE,LEXI,LEXN,LEXS,LEXT,LEXW,LEXEFF,LEXSTA
"RTN","LEXQIP3",48,0)
 S LEXX=$G(X),LEXSTA=$P(LEXX,"^",4),LEXEFF=$P(LEXX,"^",5)
"RTN","LEXQIP3",49,0)
 S LEXEFF=$TR(LEXEFF,"()",""),LEXW=$P(LEXX,"^",6)
"RTN","LEXQIP3",50,0)
 S LEXT="  Status:  ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXSTA
"RTN","LEXQIP3",51,0)
 S LEXT=LEXT_$J(" ",(35-$L(LEXT)))
"RTN","LEXQIP3",52,0)
 S:LEXEFF'["future" LEXT=LEXT_"Effective:  "
"RTN","LEXQIP3",53,0)
 S LEXT=LEXT_$$UP^XLFSTR($E(LEXEFF,1))_$E(LEXEFF,2,$L(LEXEFF)) D BL,TL(LEXT)
"RTN","LEXQIP3",54,0)
 I $L(LEXW) D
"RTN","LEXQIP3",55,0)
 . N LEX,LEXT,LEXC,LEXI,LEXN S LEX(1)=LEXW D PR^LEXQM(.LEX,(LEXLEN-7))
"RTN","LEXQIP3",56,0)
 . Q:+($O(LEX(" "),-1))'>0  S LEXT=$J(" ",((79-+($G(LEXLEN)))))
"RTN","LEXQIP3",57,0)
 . S (LEXC,LEXI)=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI'>0  D
"RTN","LEXQIP3",58,0)
 . . N LEXN S LEXN=$$TM^LEXQM($G(LEX(LEXI))) S:$L(LEXN) LEXC=LEXC+1
"RTN","LEXQIP3",59,0)
 . . D:LEXC=1 BL D TL((LEXT_LEXN))
"RTN","LEXQIP3",60,0)
 Q
"RTN","LEXQIP3",61,0)
FUL ; Full Display
"RTN","LEXQIP3",62,0)
 N LEXFUL,LEX,LEXL S LEXL=+($G(LEXLEN)) S:LEXL>62 LEXL=62
"RTN","LEXQIP3",63,0)
 S LEXFUL=""  D FUT
"RTN","LEXQIP3",64,0)
 D LIM(+($G(LEXIEN)),+($G(LEXL)))
"RTN","LEXQIP3",65,0)
 D SD(.LEXSD,+($G(LEXL)))
"RTN","LEXQIP3",66,0)
 D LD(.LEXLD,+($G(LEXL)))
"RTN","LEXQIP3",67,0)
 D LX(.LEXLX,+($G(LEXL)))
"RTN","LEXQIP3",68,0)
 D WN(.LEXWN,+($G(LEXL)))
"RTN","LEXQIP3",69,0)
 D MOR(.LEXMOR,+($G(LEXL)))
"RTN","LEXQIP3",70,0)
 D DRG(.LEXDG,+($G(LEXL)))
"RTN","LEXQIP3",71,0)
 Q
"RTN","LEXQIP3",72,0)
LIM(X,LEXLEN) ;   Limitations - Sex
"RTN","LEXQIP3",73,0)
 N LEXC,LEXH,LEXI,LEXS,LEXT S LEXC=0,LEXI=+($G(X)) S LEXS=$$VSEX^ICDEX(80.1,+LEXI,$G(LEXCDT)) Q:"^M^F^"'[("^"_LEXS_"^")
"RTN","LEXQIP3",74,0)
 S LEXH="Use only with the " S:LEXS="F" LEXH=LEXH_"female sex" S:LEXS="M" LEXH=LEXH_"male sex"
"RTN","LEXQIP3",75,0)
 S LEXT="  Limitations: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXH
"RTN","LEXQIP3",76,0)
 D BL,TL(LEXT) S LEXC=1
"RTN","LEXQIP3",77,0)
 Q
"RTN","LEXQIP3",78,0)
SD(X,LEXLEN) ;   Short Description
"RTN","LEXQIP3",79,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Short Name: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQIP3",80,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQIP3",81,0)
 Q
"RTN","LEXQIP3",82,0)
LD(X,LEXLEN) ;   Long Description
"RTN","LEXQIP3",83,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Description: ",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQIP3",84,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQIP3",85,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))) S LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQIP3",86,0)
 Q
"RTN","LEXQIP3",87,0)
LX(X,LEXLEN) ;   Lexicon Expression
"RTN","LEXQIP3",88,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)),LEXT="  Lexicon Term:",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT)
"RTN","LEXQIP3",89,0)
 S LEXE=$G(X(0)),LEXT="    "_LEXE,LEXN=$G(X(2)),LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D TL(LEXT)
"RTN","LEXQIP3",90,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=2 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQIP3",91,0)
 Q
"RTN","LEXQIP3",92,0)
WN(X,LEXLEN) ;   Warning
"RTN","LEXQIP3",93,0)
 N LEXI,LEXH,LEXE,LEXN,LEXT,LEXC Q:'$D(X(1))  S LEXC=0,LEXN=$G(X(1)),LEXT="",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN
"RTN","LEXQIP3",94,0)
 D:$L($G(LEXLD(2))) BL D TL(LEXT)
"RTN","LEXQIP3",95,0)
 S LEXT=$J(" ",((79-+($G(LEXLEN))))),LEXI=1 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=LEXT_$G(X(LEXI)) D TL(LEXN)
"RTN","LEXQIP3",96,0)
 Q
"RTN","LEXQIP3",97,0)
MOR(X,LEXLEN) ;   Major OR Procedure
"RTN","LEXQIP3",98,0)
 N LEXE,LEXH,LEXI,LEXID,LEXN,LEXT Q:'$D(X(1))  Q:'$D(X(1,1))  S LEXID=$G(X(1)) Q:'$L(LEXID)  S LEXN=$G(X(1,1)) Q:'$L(LEXN)
"RTN","LEXQIP3",99,0)
 S LEXT="  Major OR Proc",LEXE="Major O.R. Procedure",LEXE=LEXN,LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXE D BL,TL(LEXT)
"RTN","LEXQIP3",100,0)
 S LEXI=1 F  S LEXI=$O(X(1,LEXI)) Q:+LEXI'>0  S LEXE=$G(X(1,LEXI)) I $L(LEXE) S LEXT=$J(" ",((79-+($G(LEXLEN)))))_LEXE D TL(LEXT)
"RTN","LEXQIP3",101,0)
 Q
"RTN","LEXQIP3",102,0)
DRG(X,LEXLEN) ;   Major Diagnostic Category/DRG
"RTN","LEXQIP3",103,0)
 N LEXE,LEXH,LEXI,LEXN,LEXT Q:'$D(X(1))  S LEXN=$G(X(1)) Q:'$L(LEXN)  S LEXE=$G(X(0)) S:$L(LEXE,"/")'=3 LEXE=""
"RTN","LEXQIP3",104,0)
 S LEXT="  MDC/DRG:",LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT)))_LEXN D BL,TL(LEXT) S LEXN=$G(X(2))
"RTN","LEXQIP3",105,0)
 S LEXT="    "_LEXE,LEXT=LEXT_$J(" ",((79-+($G(LEXLEN)))-$L(LEXT))) D TL((LEXT_LEXN)) S LEXT=$J(" ",(79-+($G(LEXLEN)))),LEXI=2
"RTN","LEXQIP3",106,0)
 F  S LEXI=$O(X(LEXI)) Q:+LEXI'>0  S LEXN=$G(X(LEXI)) D:$L(LEXN) TL((LEXT_LEXN))
"RTN","LEXQIP3",107,0)
 Q
"RTN","LEXQIP3",108,0)
 ;
"RTN","LEXQIP3",109,0)
 ; Miscellaneous
"RTN","LEXQIP3",110,0)
BL ;   Blank Line
"RTN","LEXQIP3",111,0)
 D TL(" ") Q
"RTN","LEXQIP3",112,0)
TL(X) ;   Text Line
"RTN","LEXQIP3",113,0)
 I $D(LEXTEST) W !,$G(X) Q
"RTN","LEXQIP3",114,0)
 N LEXI,LEXTEST S LEXI=+($O(^TMP("LEXQIPO",$J," "),-1))+1 S ^TMP("LEXQIPO",$J,LEXI)=$G(X),^TMP("LEXQIPO",$J,0)=LEXI
"RTN","LEXQIP3",115,0)
 Q
"RTN","LEXQL")
0^43^B69912200
"RTN","LEXQL",1,0)
LEXQL ;ISL/KER - Query - Lookup Code ;12/19/2014
"RTN","LEXQL",2,0)
 ;;2.0;LEXICON UTILITY;**62,80,86**;Sep 23, 1996;Build 1
"RTN","LEXQL",3,0)
 ;               
"RTN","LEXQL",4,0)
 ; Global Variables
"RTN","LEXQL",5,0)
 ;    ^DIC(81.3,          ICR   4492
"RTN","LEXQL",6,0)
 ;    ^ICPT(              ICR   4489
"RTN","LEXQL",7,0)
 ;    ^ICPT("BA")         ICR   4489
"RTN","LEXQL",8,0)
 ;    ^TMP("LEXQL")       SACC 2.3.2.5.1
"RTN","LEXQL",9,0)
 ;    ^UTILITY($J)        ICR  10011
"RTN","LEXQL",10,0)
 ;               
"RTN","LEXQL",11,0)
 ; External References
"RTN","LEXQL",12,0)
 ;    ^DIR                ICR  10026
"RTN","LEXQL",13,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXQL",14,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXQL",15,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXQL",16,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXQL",17,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXQL",18,0)
 ;    $$MOD^ICPTMOD       ICR   1996
"RTN","LEXQL",19,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXQL",20,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXQL",21,0)
 ;               
"RTN","LEXQL",22,0)
 N DIR,DIRB,DIROUT,DIRUT,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,DTOUT,DUOUT,LEX,LEXC,LEXCOM,LEXCT,LEXCTY,LEXD,LEXDS,LEXDT,LEXE,LEXENT,LEXFD
"RTN","LEXQL",23,0)
 N LEXFI,LEXI,LEXIEN,LEXIN,LEXIT,LEXIX,LEXKEY,LEXL,LEXLAST,LEXLEN,LEXMAX,LEXN,LEXNM,LEXO,LEXOC,LEXRTN,LEXS,LEXSEL,LEXSO,LEXSS,LEXSTR,LEXT
"RTN","LEXQL",24,0)
 N LEXT1,LEXT2,LEXT3,LEXTAG,LEXTD,LEXTMP,LEXTN,LEXTOT,LEXTQ,LEXTS,LEXTTT,LEXTY,LEXUSR,LEXV,LEXVAL,LEXX,Y
"RTN","LEXQL",25,0)
 K ^TMP("LEXQL",$J),^UTILITY($J) S X=$$SO K ^TMP("LEXQL",$J),^UTILITY($J)
"RTN","LEXQL",26,0)
 Q
"RTN","LEXQL",27,0)
SO(X) ; Select a Code
"RTN","LEXQL",28,0)
 ;               
"RTN","LEXQL",29,0)
 ; Input    None
"RTN","LEXQL",30,0)
 ;             
"RTN","LEXQL",31,0)
 ; Output   X - "^" delimited string
"RTN","LEXQL",32,0)
 ;              1 - IEN
"RTN","LEXQL",33,0)
 ;              2 - Global Root
"RTN","LEXQL",34,0)
 ;              3 - File #
"RTN","LEXQL",35,0)
 ;              4 - Coding System (if available)
"RTN","LEXQL",36,0)
 ;              5 - Code
"RTN","LEXQL",37,0)
 ;              6 - Short Name
"RTN","LEXQL",38,0)
 ;            
"RTN","LEXQL",39,0)
 ;            or "^" if no code is found/selected
"RTN","LEXQL",40,0)
 ;               
"RTN","LEXQL",41,0)
 K ^TMP("LEXQL",$J) Q:+($G(LEXEXIT))>0 "^^"  N DIR,DIROUT,DIRUT,DTOUT,DUOUT,DIRB,LEXTD,Y,LEX,LEXIT
"RTN","LEXQL",42,0)
 S LEXTD=$G(LEXVDT) S:LEXTD'?7N LEXTD=$$DT^XLFDT S LEXIT=0
"RTN","LEXQL",43,0)
 S DIR(0)="FAO^1:30",DIR("A")=" Select a Code:  "
"RTN","LEXQL",44,0)
 S DIRB=$$RET^LEXQD("LEXQL","SO",+($G(DUZ)),"Select a Code") S:$L(DIRB) DIR("B")=DIRB
"RTN","LEXQL",45,0)
 S DIR("PRE")="S:'$L(X)&($L($G(DIR(""B"")))) X=$G(DIR(""B"")) S X=$TR($$UP^XLFSTR(X),""#"""""",""""),X=$$VSO^LEXQL2(X) S X=$$SEL^LEXQL(X)"
"RTN","LEXQL",46,0)
 S (DIR("?"),DIR("??"))="^D SOH^LEXQL" D ^DIR S X=$TR(X,"#""",""),Y=$TR(Y,"#""","")
"RTN","LEXQL",47,0)
 I X="^^"!($D(DTOUT))!(+($G(LEXEXIT))) K ^TMP("LEXQL",$J) Q "^^"
"RTN","LEXQL",48,0)
 I '$D(^TMP("LEXQL",$J,"X")) S:$L(Y)&(Y=$P(DIRB,U,4)) ^TMP("LEXQL",$J,"X")=DIRB
"RTN","LEXQL",49,0)
 S:$D(DIROUT)!($D(DIRUT))!($D(DTOUT))!($D(DUOUT)) X="^" Q:$E(X,1)="^" X
"RTN","LEXQL",50,0)
 S X="" S:$L($G(^TMP("LEXQL",$J,"X"))) X=$G(^TMP("LEXQL",$J,"X"))
"RTN","LEXQL",51,0)
 S LEX=$P(X,U,5) D:$L(LEX) SAV^LEXQD("LEXQL","SO",+($G(DUZ)),"Select a Code",LEX) K ^TMP("LEXQL",$J)
"RTN","LEXQL",52,0)
 Q X
"RTN","LEXQL",53,0)
SOH ;   Select a Code Help
"RTN","LEXQL",54,0)
 W !,"     Enter a code from either:",!
"RTN","LEXQL",55,0)
 W !,"       ICD-9 Diagnosis file       #80       4-7 Characters"
"RTN","LEXQL",56,0)
 W !,"       ICD-9 Procedure file       #80.1     3-5 Characters"
"RTN","LEXQL",57,0)
 W !,"       ICD-10 Diagnosis file      #80       4-8 Characters"
"RTN","LEXQL",58,0)
 W !,"       ICD-10 Procedure file      #80.1     7 Characters"
"RTN","LEXQL",59,0)
 W !,"       CPT/HCPCS Procedure file   #81       5 Characters"
"RTN","LEXQL",60,0)
 W !,"       CPT Modifier file          #81.3     2 Characters",!
"RTN","LEXQL",61,0)
 W !,"     Or enter keywords, 2-30 characters, to search for in"
"RTN","LEXQL",62,0)
 W !,"     the above files.",!
"RTN","LEXQL",63,0)
 Q
"RTN","LEXQL",64,0)
SOGD(X) ;   Select a Code Global/Data
"RTN","LEXQL",65,0)
 N LEX,LEXTD S LEX=$G(X) Q:'$L(LEX) "^"  S LEXTD=$$DT^XLFDT
"RTN","LEXQL",66,0)
 ; 80 ICD-9
"RTN","LEXQL",67,0)
 Q:$$CODEABA^ICDEX(X,80,1)>0 ($TR($$ROOT^ICDEX(80),"^","")_"^"_$$ICDDX^ICDEX(X,LEXTD,1,"E"))
"RTN","LEXQL",68,0)
 Q:$$CODEABA^ICDEX($$UP^XLFSTR(X),80,1)>0 ($TR($$ROOT^ICDEX(80),"^","")_"^"_$$ICDDX^ICDEX($$UP^XLFSTR(X),LEXTD,1,"E"))
"RTN","LEXQL",69,0)
 ; 80 ICD-10
"RTN","LEXQL",70,0)
 Q:$$CODEABA^ICDEX(X,80,30)>0 ($TR($$ROOT^ICDEX(80),"^","")_"^"_$$ICDDX^ICDEX(X,LEXTD,30,"E"))
"RTN","LEXQL",71,0)
 Q:$$CODEABA^ICDEX($$UP^XLFSTR(X),80,30)>0 ($TR($$ROOT^ICDEX(80),"^","")_"^"_$$ICDDX^ICDEX($$UP^XLFSTR(X),LEXTD,30,"E"))
"RTN","LEXQL",72,0)
 ; 80.1 ICD-9
"RTN","LEXQL",73,0)
 Q:$$CODEABA^ICDEX(X,80.1,2)>0 ($TR($$ROOT^ICDEX(80.1),"^","")_"^"_$$ICDOP^ICDEX(X,LEXTD,2,"E"))
"RTN","LEXQL",74,0)
 Q:$$CODEABA^ICDEX($$UP^XLFSTR(X),80.1,2)>0 ($TR($$ROOT^ICDEX(80.1),"^","")_"^"_$$ICDOP^ICDEX($$UP^XLFSTR(X),LEXTD,2,"E"))
"RTN","LEXQL",75,0)
 ; 80.1 ICD-10
"RTN","LEXQL",76,0)
 Q:$$CODEABA^ICDEX(X,80.1,31)>0 ($TR($$ROOT^ICDEX(80.1),"^","")_"^"_$$ICDOP^ICDEX(X,LEXTD,31,"E"))
"RTN","LEXQL",77,0)
 Q:$$CODEABA^ICDEX($$UP^XLFSTR(X),80.1,31)>0 ($TR($$ROOT^ICDEX(80.1),"^","")_"^"_$$ICDOP^ICDEX($$UP^XLFSTR(X),LEXTD,31,"E"))
"RTN","LEXQL",78,0)
 ; 81 CPT
"RTN","LEXQL",79,0)
 Q:$D(^ICPT("BA",(X_" "))) ("ICPT("_"^"_$$CPT^ICPTCOD(X,$G(LEXTD)))
"RTN","LEXQL",80,0)
 Q:$D(^ICPT("BA",($$UP^XLFSTR(X)_" "))) ("ICPT("_"^"_$$CPT^ICPTCOD($$UP^XLFSTR(X),$G(LEXTD)))
"RTN","LEXQL",81,0)
 ; 81.3 CPT Modifier
"RTN","LEXQL",82,0)
 Q:$D(^DIC(81.3,"BA",(X_" "))) ("DIC(81.3,"_"^"_$$MOD^ICPTMOD(X,"E",$G(LEXTD)))
"RTN","LEXQL",83,0)
 Q:$D(^DIC(81.3,"BA",($$UP^XLFSTR(X)_" "))) ("DIC(81.3,"_"^"_$$MOD^ICPTMOD($$UP^XLFSTR(X),"E",$G(LEXTD)))
"RTN","LEXQL",84,0)
 Q ""
"RTN","LEXQL",85,0)
 ;            
"RTN","LEXQL",86,0)
SEL(X) ; Select from List
"RTN","LEXQL",87,0)
 Q:'$L($G(X)) ""  Q:$G(X)["^" $G(X)  Q:$G(X)["?" "??"  K ^TMP("LEXQL",$J) D ADD^LEXQL2($G(X)) Q:'$D(^TMP("LEXQL",$J)) "??"  D ASK
"RTN","LEXQL",88,0)
 K ^TMP("LEXQL",$J) Q:+($G(LEXEXIT))>0 "^^"  Q:+X'>0 "??"  S:+($G(X))>0 ^TMP("LEXQL",$J,"X")=X S:+($G(X))>0 X=$P($G(X),"^",4)
"RTN","LEXQL",89,0)
 Q X
"RTN","LEXQL",90,0)
ASK ;   Ask for Selection
"RTN","LEXQL",91,0)
 K X N LEXTOT S LEXTOT=+($G(^TMP("LEXQL",$J,0))) S:+LEXTOT'>0 X="^" Q:+LEXTOT'>0  K X
"RTN","LEXQL",92,0)
 S:+LEXTOT=1 X=$$ONE Q:+LEXTOT=1  S:+LEXTOT>1 X=$$MUL
"RTN","LEXQL",93,0)
 Q
"RTN","LEXQL",94,0)
ONE(X) ;     One Entry Found
"RTN","LEXQL",95,0)
 Q:+($G(LEXEXIT))>0 "^^"  N LEXT1,LEXT2,LEXT3,LEX,LEXC,LEXCT,LEXIEN,LEXX,DIR,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","LEXQL",96,0)
 S LEXT1=$G(^TMP("LEXQL",$J,1)),LEXCT=$$CT(LEXT1),LEXIEN=+LEXT1,LEXT1=$P(LEXT1,U,2),LEXT2=$G(^TMP("LEXQL",$J,1,2))
"RTN","LEXQL",97,0)
 S:$L(LEXT1)&($L(LEXT2)) LEXT1=LEXT1_" "_LEXT2 S (LEXT3,LEX(1))=LEXT1
"RTN","LEXQL",98,0)
 S LEXX=LEXIEN_U_$$FI(LEXT3)_U_LEXCT D PR^LEXQL2(.LEX,64)
"RTN","LEXQL",99,0)
 S DIR("A",1)=" One code found",DIR("A",2)=" ",DIR("A",3)="     "_$G(LEX(1)),LEXC=3
"RTN","LEXQL",100,0)
 S:$L($G(LEX(2))) LEXC=LEXC+1,DIR("A",LEXC)="                         "_$G(LEX(2))
"RTN","LEXQL",101,0)
 S LEXC=LEXC+1,DIR("A",LEXC)=" ",LEXC=LEXC+1,DIR("A")="   OK?  (Yes/No)  ",DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","LEXQL",102,0)
 D ^DIR S:X["^^"!($D(DTOUT)) LEXEXIT=1,X="^^" I X["^^"!(+($G(LEXEXIT))>0)!($D(DIROUT)) K ^TMP("LEXQL",$J) S LEXEXIT=1 Q "^^"
"RTN","LEXQL",103,0)
 S X=$S(+Y>0:$$X(1),1:-1)
"RTN","LEXQL",104,0)
 Q X
"RTN","LEXQL",105,0)
MUL(X) ;     Multiple Entries Found
"RTN","LEXQL",106,0)
 Q:+($G(LEXEXIT))>0 "^^"  N LEXIEN,LEXENT,LEXT1,LEXTTT,LEXMAX,LEXI,LEXSS,LEXIT,LEXSTR,Y S (LEXMAX,LEXI,LEXSS,LEXIT)=0 S U="^"
"RTN","LEXQL",107,0)
 S LEXTTT=$G(^TMP("LEXQL",$J,0)),LEXSS=0 G:+LEXTTT=0 MULQ W ! W:+LEXTTT>1 !," ",LEXTTT," matches found"
"RTN","LEXQL",108,0)
 F LEXI=1:1:LEXTTT Q:((LEXSS>0)&(LEXSS<LEXI+1))  Q:LEXIT  D  Q:LEXIT
"RTN","LEXQL",109,0)
 . S LEXENT=$G(^TMP("LEXQL",$J,LEXI)) S LEXSTR=$P(LEXENT,U,1) Q:'$L(LEXSTR)  S LEXMAX=LEXI W:LEXI#5=1 ! D MULW
"RTN","LEXQL",110,0)
 . W:LEXI#5=0 ! S:LEXI#5=0 LEXSS=$$MULS(LEXMAX,LEXI) S:LEXSS["^" LEXIT=1
"RTN","LEXQL",111,0)
 I LEXI#5'=0,+LEXSS=0 W ! S LEXSS=$$MULS(LEXMAX,LEXI) S:LEXSS["^" LEXIT=1
"RTN","LEXQL",112,0)
 G MULQ
"RTN","LEXQL",113,0)
 Q X
"RTN","LEXQL",114,0)
MULW ;       Write Multiple
"RTN","LEXQL",115,0)
 N LEXT1,LEXT2,LEXT3,LEXIEN,LEX S LEXT1=$P(LEXENT,U,2),LEXT2=$G(^TMP("LEXQL",$J,LEXI,2)),LEXCT=$$CT(LEXT1),LEXIEN=+LEXENT
"RTN","LEXQL",116,0)
 K LEX S:$L(LEXT1)&($L(LEXT2)) LEXT1=LEXT1_" "_LEXT2
"RTN","LEXQL",117,0)
 S (LEXT3,LEX(1))=LEXT1 D PR^LEXQL2(.LEX,63)
"RTN","LEXQL",118,0)
 W !,$J(LEXI,5),".  ",$G(LEX(1)) F LEXT1=2:1:5 S LEXT2=$G(LEX(LEXT1)) W:$L(LEXT2) !,"                            ",LEXT2
"RTN","LEXQL",119,0)
 Q
"RTN","LEXQL",120,0)
MULS(LEXS,LEXI) ;       Select Multiple
"RTN","LEXQL",121,0)
 Q:+($G(LEXEXIT))>0 "^^"  N X,Y,LEXMAX,LEXLAST,DIR,DIRB,DTOUT,DUOUT,DIRUT,DIROUT,LEXTQ S LEXMAX=+($G(LEXS)),LEXLAST=+($G(LEXI)) Q:LEXMAX=0 -1
"RTN","LEXQL",122,0)
 S:+($O(^TMP("LEXQL",$J,+LEXLAST)))>0 DIR("A")=" Press <RETURN> for more, '^' to exit, or Select 1-"_LEXMAX_":  "
"RTN","LEXQL",123,0)
 S:+($O(^TMP("LEXQL",$J,+LEXLAST)))'>0 DIR("A")=" Select 1-"_LEXMAX_":  "
"RTN","LEXQL",124,0)
 S LEXTQ="    Answer must be from 1 to "_LEXMAX_", or <Return> to continue"
"RTN","LEXQL",125,0)
 S DIR("PRE")="S:X[""?"" X=""??""",(DIR("?"),DIR("??"))="^D MULSH^LEXQL"
"RTN","LEXQL",126,0)
 S DIR(0)="NAO^1:"_LEXMAX_":0" D ^DIR S:X["^^"!($D(DTOUT)) LEXEXIT=1,X="^^" I X["^^"!(+($G(LEXEXIT))>0) K ^TMP("LEXQL",$J) Q "^^"
"RTN","LEXQL",127,0)
 S LEXS=+Y S:$D(DTOUT)!(X[U) LEXS=U K DIR
"RTN","LEXQL",128,0)
 Q LEXS
"RTN","LEXQL",129,0)
MULSH ;       Select Multiple Help
"RTN","LEXQL",130,0)
 I $L($G(LEXTQ)) W !,$G(LEXTQ) Q
"RTN","LEXQL",131,0)
 Q
"RTN","LEXQL",132,0)
MULQ ;       Quit Multiple
"RTN","LEXQL",133,0)
 Q:+LEXSS'>0 -1  S X=-1 S:+($G(LEXIT))'>0 X=$$X(+LEXSS)
"RTN","LEXQL",134,0)
 Q X
"RTN","LEXQL",135,0)
 ; 
"RTN","LEXQL",136,0)
 ; Miscellaneous
"RTN","LEXQL",137,0)
X(X) ;   Set X
"RTN","LEXQL",138,0)
 N LEXCT,LEXFI,LEXIEN,LEXSEL,LEXT1,LEXT2,LEXT3 S LEXSEL=+($G(X))
"RTN","LEXQL",139,0)
 S LEXT1=$G(^TMP("LEXQL",$J,+($G(LEXSEL)))),LEXT2=$G(^TMP("LEXQL",$J,+($G(LEXSEL)),2))
"RTN","LEXQL",140,0)
 S LEXT3=LEXT1 S:$L(LEXT2) LEXT3=LEXT3_" "_LEXT2 S LEXCT=$$CT(LEXT3),LEXFI=$$FI(LEXT3)
"RTN","LEXQL",141,0)
 S LEXIEN=+LEXT1 S X=$$UP^XLFSTR((LEXIEN_U_LEXFI_U_LEXCT))
"RTN","LEXQL",142,0)
 Q X
"RTN","LEXQL",143,0)
CT(X) ;   Code and Text
"RTN","LEXQL",144,0)
 S X=$G(X) N LEXIEN,LEXC,LEXN,LEXT S LEXIEN=+X Q:+LEXIEN'>0 ""  S LEXT=$P(X,U,2) Q:'$L(LEXT) ""
"RTN","LEXQL",145,0)
 I LEXT["ICD-9 Dx"!(LEXT["ICD-9 Diag") D
"RTN","LEXQL",146,0)
 . S LEXN=$$ICDDX^ICDEX(LEXIEN,$G(LEXVDT),1,"I"),LEXC=$P(LEXN,"^",2),LEXN=$P(LEXN,"^",4)
"RTN","LEXQL",147,0)
 I LEXT["ICD-9 Op"!(LEXT["ICD-9 Proc") D
"RTN","LEXQL",148,0)
 . S LEXN=$$ICDOP^ICDEX(LEXIEN,$G(LEXVDT),2,"I"),LEXC=$P(LEXN,"^",2),LEXN=$P(LEXN,"^",5)
"RTN","LEXQL",149,0)
 I LEXT["ICD-10 Dx"!(LEXT["ICD-10 Diag") D
"RTN","LEXQL",150,0)
 . S LEXN=$$ICDDX^ICDEX(LEXIEN,$G(LEXVDT),30,"I"),LEXC=$P(LEXN,"^",2),LEXN=$P(LEXN,"^",4)
"RTN","LEXQL",151,0)
 I LEXT["ICD-10 Op"!(LEXT["ICD-10 Proc") D
"RTN","LEXQL",152,0)
 . S LEXN=$$ICDOP^ICDEX(LEXIEN,$G(LEXVDT),31,"I"),LEXC=$P(LEXN,"^",2),LEXN=$P(LEXN,"^",5)
"RTN","LEXQL",153,0)
 I LEXT["CPT-4"!(LEXT["CPT P")!(LEXT["HCPCS") D
"RTN","LEXQL",154,0)
 . S LEXC=$P($G(^ICPT(+LEXIEN,0)),U,1),LEXN=$P($$CPT^ICPTCOD(LEXC,$G(LEXVDT)),U,3)
"RTN","LEXQL",155,0)
 I LEXT["CPT Mod" D
"RTN","LEXQL",156,0)
 . S LEXC=$P($G(^DIC(81.3,+LEXIEN,0)),U,1),LEXN=$P($$MOD^ICPTMOD(LEXIEN,"I",$G(LEXVDT)),U,3)
"RTN","LEXQL",157,0)
 S X="" S:$L($G(LEXC))&($L($G(LEXN))) X=LEXC_U_LEXN
"RTN","LEXQL",158,0)
 Q X
"RTN","LEXQL",159,0)
FI(X) ;   File
"RTN","LEXQL",160,0)
 S X=$G(X)
"RTN","LEXQL",161,0)
 Q:X["ICD-9 Dx"!(X["ICD-9 Diag") ($TR($$ROOT^ICDEX(80),"^","")_"^80^1")
"RTN","LEXQL",162,0)
 Q:X["ICD-9 Op"!(X["ICD-9 Proc") ($TR($$ROOT^ICDEX(80.1),"^","")_"^80.1^2")
"RTN","LEXQL",163,0)
 Q:X["ICD-10 Dx"!(X["ICD-10 Diag") ($TR($$ROOT^ICDEX(80),"^","")_"^80^30")
"RTN","LEXQL",164,0)
 Q:X["ICD-10 Op"!(X["ICD-10 Proc") ($TR($$ROOT^ICDEX(80.1),"^","")_"^80.1^31")
"RTN","LEXQL",165,0)
 Q:X["CPT-4"!(X["CPT Proc") "ICPT(^81^3"  Q:X["HCPCS" "ICPT(^81^4"
"RTN","LEXQL",166,0)
 Q:X["CPT Mod" "DIC(81.3,^81.3^"
"RTN","LEXQL",167,0)
 Q ""
"RTN","LEXQL",168,0)
SHO ;   Show TMP
"RTN","LEXQL",169,0)
 N LEXNN,LEXNC S LEXNN="^TMP(""LEXQL"","_$J_")",LEXNC="^TMP(""LEXQL"","_$J_","
"RTN","LEXQL",170,0)
 W ! F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  W !,LEXNN,"=",@LEXNN
"RTN","LEXQL",171,0)
 W !
"RTN","LEXQL",172,0)
 Q
"RTN","LEXQL",173,0)
 ; Miscellaneous
"RTN","LEXQL",174,0)
CL ;   Clear
"RTN","LEXQL",175,0)
 K LEXVDT,LEXEXIT
"RTN","LEXQL",176,0)
 Q
"RTN","LEXRXC")
0^7^B113217997
"RTN","LEXRXC",1,0)
LEXRXC ;ISL/KER - Re-Index 757.01 B/ADC/ADTERM ;12/19/2014
"RTN","LEXRXC",2,0)
 ;;2.0;LEXICON UTILITY;**81,80,86**;Sep 23, 1996;Build 1
"RTN","LEXRXC",3,0)
 ;               
"RTN","LEXRXC",4,0)
 ; Global Variables
"RTN","LEXRXC",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXC",6,0)
 ;    ^LEX(757.01)        SACC 1.3
"RTN","LEXRXC",7,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXC",8,0)
 ;               
"RTN","LEXRXC",9,0)
 ; External References
"RTN","LEXRXC",10,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXC",11,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXC",12,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXRXC",13,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXRXC",14,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXC",15,0)
 ;               
"RTN","LEXRXC",16,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXC",17,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXC",18,0)
 ;     LEXSET     Re-Index flag   NEWed/KILLed by LEXRXXT
"RTN","LEXRXC",19,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXC",20,0)
 ;     LEXQ       Quiet flat      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXC",21,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXC",22,0)
 ;     
"RTN","LEXRXC",23,0)
 Q
"RTN","LEXRXC",24,0)
 ; NOTES:
"RTN","LEXRXC",25,0)
 ;               
"RTN","LEXRXC",26,0)
 ;   The Major Concept Map file #757 is used to re-index
"RTN","LEXRXC",27,0)
 ;   the Expression file #757.01. hence file #757 must be 
"RTN","LEXRXC",28,0)
 ;   repaired/re-indexed before file 757.01.
"RTN","LEXRXC",29,0)
 ;                 
"RTN","LEXRXC",30,0)
EN ; Main Entry Point
"RTN","LEXRXC",31,0)
R75701 ; Repair file 757.01
"RTN","LEXRXC",32,0)
 D MC,RB,RADC,RADTERM,R75701^LEXRXC2,R75701^LEXRXC3
"RTN","LEXRXC",33,0)
 D:+($G(^TMP("LEXRX",$J,"ERR",757.01)))>0 SET
"RTN","LEXRXC",34,0)
 Q
"RTN","LEXRXC",35,0)
RB ;   Index    ^LEX(757.01,"B",TXT,IEN) 
"RTN","LEXRXC",36,0)
 ;            ^LEX(757.01,IEN,4,"B",NEG,IEN2)
"RTN","LEXRXC",37,0)
 ;            ^LEX(757.01,IEN,5,"B",WORD,IEN2)
"RTN","LEXRXC",38,0)
 W:'$D(ZTQUEUED) ! N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXEXP,LEXFI,LEXIDX,LEXIDXT,LEXIDNT,LEXIDST,LEXIEN,LEXMC,LEXNDS,LEXNDSN,LEXNDSS,LEXNER,LEXOK,LEXS,LEXSER,LEXSTR
"RTN","LEXRXC",39,0)
 S LEXFI="757.01"
"RTN","LEXRXC",40,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""B""") Q:LEXTC=1
"RTN","LEXRXC",41,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXNDSN,LEXNDSS,LEXERR,LEXSER,LEXNER)=0,LEXSTR="",LEXFI="757.01",LEXIDX="B"
"RTN","LEXRXC",42,0)
 S LEXIDXT="^LEX(757.01,""B"",TXT,IEN)",LEXIDNT="^LEX(757.01,IEN,4,""B"",NEG,IEN2)",LEXIDST="^LEX(757.01,IEN,5,""B"",WORD,IEN2)"
"RTN","LEXRXC",43,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",44,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",45,0)
 . . S LEXNDS=LEXNDS+1 I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXC",46,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXC",47,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC",48,0)
 . . N LEXOK,LEXEXP S LEXEXP=$$UP^XLFSTR($G(^LEX(LEXFI,LEXIEN,0)))
"RTN","LEXRXC",49,0)
 . . S LEXOK=0 S:$E(LEXEXP,1,63)=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",50,0)
 . . . S LEXERR=LEXERR+1
"RTN","LEXRXC",51,0)
 . . . K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXEXP) ^LEX(LEXFI,LEXIDX,$E(LEXEXP,1,63),LEXIEN)=""
"RTN","LEXRXC",52,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,$E(LEXSTR,1,26),?58,"  ",LEXIEN
"RTN","LEXRXC",53,0)
 . . I $D(^LEX(LEXFI,LEXIEN,4)) D
"RTN","LEXRXC",54,0)
 . . . N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",55,0)
 . . . . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC",56,0)
 . . . . . S LEXNDSN=LEXNDSN+1 N LEXOK,LEXMC S LEXMC=$G(^LEX(LEXFI,LEXIEN,4,LEXS,0))
"RTN","LEXRXC",57,0)
 . . . . . S LEXOK=0 S:LEXMC=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",58,0)
 . . . . . . S LEXNER=LEXNER+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR,LEXS)
"RTN","LEXRXC",59,0)
 . . . . . . S:$L(LEXMC) ^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXMC,LEXS)=""
"RTN","LEXRXC",60,0)
 . . . . . . I '$D(ZTQUEUED) W !,?10,757.17,?19,LEXIDX,?30,$E(LEXSTR,1,26),?58,"  ",LEXIEN,"/",LEXS
"RTN","LEXRXC",61,0)
 . . . S LEXSTR=0 F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,4,LEXSTR)) Q:+LEXSTR'>0  D
"RTN","LEXRXC",62,0)
 . . . . N DA,X S X=$P($G(^LEX(LEXFI,LEXIEN,4,LEXSTR,0)),"^",1),DA(1)=LEXIEN,DA=LEXSTR
"RTN","LEXRXC",63,0)
 . . . . I $L(X) I '$D(^LEX(LEXFI,DA(1),4,LEXIDX,X,DA)) D  Q
"RTN","LEXRXC",64,0)
 . . . . . S LEXNER=LEXNER+1,^LEX(LEXFI,DA(1),4,LEXIDX,X,DA)=""
"RTN","LEXRXC",65,0)
 . . . . . I '$D(ZTQUEUED) W !,?10,757.17,?19,LEXIDX,?30,"Missing",?58,"  ",DA(1),"/",DA
"RTN","LEXRXC",66,0)
 . . I $D(^LEX(LEXFI,LEXIEN,5)) D
"RTN","LEXRXC",67,0)
 . . . N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,5,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",68,0)
 . . . . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,5,LEXIDX,LEXSTR,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC",69,0)
 . . . . . S LEXNDSS=LEXNDSS+1 N LEXOK,LEXMC S LEXMC=$G(^LEX(LEXFI,LEXIEN,5,LEXS,0))
"RTN","LEXRXC",70,0)
 . . . . . S LEXOK=0 S:LEXMC=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",71,0)
 . . . . . . S LEXSER=LEXSER+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIEN,5,LEXIDX,LEXSTR,LEXS) S:$L(LEXMC) ^LEX(LEXFI,LEXIEN,5,LEXIDX,LEXMC,LEXS)=""
"RTN","LEXRXC",72,0)
 . . . . . . I '$D(ZTQUEUED) W !,?10,757.18,?19,LEXIDX,?30,$E(LEXSTR,1,26),?58,"  ",LEXIEN,"/",LEXS
"RTN","LEXRXC",73,0)
 . . . S LEXSTR=0 F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,5,LEXSTR)) Q:+LEXSTR'>0  D
"RTN","LEXRXC",74,0)
 . . . . N DA,X S X=$P($G(^LEX(LEXFI,LEXIEN,5,LEXSTR,0)),"^",1),DA(1)=LEXIEN,DA=LEXSTR
"RTN","LEXRXC",75,0)
 . . . . I $L(X) I '$D(^LEX(LEXFI,DA(1),5,LEXIDX,X,DA)) D  Q
"RTN","LEXRXC",76,0)
 . . . . . S LEXSER=LEXSER+1,^LEX(LEXFI,DA(1),5,LEXIDX,X,DA)=""
"RTN","LEXRXC",77,0)
 . . . . . I '$D(ZTQUEUED) W !,?10,757.18,?19,LEXIDX,?30,"Missing",?58,"  ",DA(1),"/",DA
"RTN","LEXRXC",78,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",79,0)
 . N DA,DIK,X S DA=LEXIEN,X=$$UP^XLFSTR($G(^LEX(LEXFI,LEXIEN,0))) Q:'$L(X)
"RTN","LEXRXC",80,0)
 . I '$D(^LEX(LEXFI,"B",$E(X,1,63),DA)) D
"RTN","LEXRXC",81,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXC",82,0)
 . S:$L(X) ^LEX(LEXFI,"B",$E(X,1,63),DA)=""
"RTN","LEXRXC",83,0)
 . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,4,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC",84,0)
 . . N DA,DIK,X S DA(1)=LEXIEN,DA=LEXS,X=$P($G(^LEX(LEXFI,DA(1),4,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXC",85,0)
 . . I '$D(^LEX(LEXFI,DA(1),4,"B",X,DA)) D
"RTN","LEXRXC",86,0)
 . . . S LEXNER=LEXNER+1 I '$D(ZTQUEUED) W !,?10,757.17,?19,LEXIDX,?30,"Missing",?58,"  ",DA(1),"/",DA
"RTN","LEXRXC",87,0)
 . . S:$L(X) ^LEX(LEXFI,DA(1),4,"B",X,DA)=""
"RTN","LEXRXC",88,0)
 . S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,5,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC",89,0)
 . . N DA,DIK,X S DA(1)=LEXIEN,DA=LEXS,X=$P($G(^LEX(LEXFI,DA(1),5,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXC",90,0)
 . . I '$D(^LEX(LEXFI,DA(1),5,"B",X,DA)) D
"RTN","LEXRXC",91,0)
 . . . S LEXSER=LEXSER+1 I '$D(ZTQUEUED) W !,?10,757.18,?19,LEXIDX,?30,"Missing",?58,"  ",DA(1),"/",DA
"RTN","LEXRXC",92,0)
 . . S:$L(X) ^LEX(LEXFI,DA(1),5,"B",X,DA)=""
"RTN","LEXRXC",93,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC",94,0)
 S LEXNER=$S(+LEXNER>0:LEXNER,1:"") I '$D(ZTQUEUED) W !,$J(LEXNER,5),?10,757.17,?19,LEXIDX,?30,LEXIDNT
"RTN","LEXRXC",95,0)
 S LEXSER=$S(+LEXSER>0:LEXSER,1:"") I '$D(ZTQUEUED) W !,$J(LEXSER,5),?10,757.18,?19,LEXIDX,?30,LEXIDST
"RTN","LEXRXC",96,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC",97,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC",98,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC",99,0)
 D REP^LEXRXXS(LEXFI,757.17,LEXIDX,LEXNDSN,LEXNER,LEXIDNT)
"RTN","LEXRXC",100,0)
 D REP^LEXRXXS(LEXFI,757.18,LEXIDX,LEXNDSS,LEXSER,LEXIDST)
"RTN","LEXRXC",101,0)
 Q
"RTN","LEXRXC",102,0)
RADC ;   Index    ^LEX(757.01,"ADC",1,IEN)
"RTN","LEXRXC",103,0)
 W:'$D(ZTQUEUED) ! N DA,DIK,LEXBEG,LEXDF,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXC",104,0)
 S LEXFI="757.01"
"RTN","LEXRXC",105,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""ADC""") Q:LEXTC=1
"RTN","LEXRXC",106,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.01,LEXIDX="ADC",LEXIDXT="^LEX(757.01,""ADC"",1,IEN)"
"RTN","LEXRXC",107,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",108,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",109,0)
 . . S LEXNDS=LEXNDS+1 I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXC",110,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXC",111,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC",112,0)
 . . N LEXOK,LEXDF S LEXDF=+($P($G(^LEX(LEXFI,LEXIEN,1)),"^",5))
"RTN","LEXRXC",113,0)
 . . S LEXOK=0 S:LEXDF=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",114,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXDF) ^LEX(LEXFI,LEXIDX,LEXDF,LEXIEN)=""
"RTN","LEXRXC",115,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC",116,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",117,0)
 . N DA,DIK,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,+DA,1)),"^",5)
"RTN","LEXRXC",118,0)
 . I +X'>0,$D(^LEX(LEXFI,"ADC",+X,+DA)) D  Q
"RTN","LEXRXC",119,0)
 . . S LEXERR=LEXERR+1
"RTN","LEXRXC",120,0)
 . . K:'$D(LEXTEST) ^LEX(LEXFI,"ADC",+X,+DA),^LEX(LEXFI,"ADC",1,+DA)
"RTN","LEXRXC",121,0)
 . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid (0)",?58,"  ",DA
"RTN","LEXRXC",122,0)
 . I +X>0,'$D(^LEX(LEXFI,"ADC",+X,+DA)) D  Q
"RTN","LEXRXC",123,0)
 . . Q:+X'=1  S LEXERR=LEXERR+1
"RTN","LEXRXC",124,0)
 . . S:'$D(LEXTEST) ^LEX(LEXFI,"ADC",+X,+DA)=""
"RTN","LEXRXC",125,0)
 . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXC",126,0)
 . S:+X>0 ^LEX(LEXFI,"ADC",+X,+DA)=""
"RTN","LEXRXC",127,0)
 . I +X>0,+X'=1 D  Q
"RTN","LEXRXC",128,0)
 . . S LEXERR=LEXERR+1
"RTN","LEXRXC",129,0)
 . . K:'$D(LEXTEST) ^LEX(LEXFI,"ADC",+X,+DA)
"RTN","LEXRXC",130,0)
 . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid (>1)",?58,"  ",DA
"RTN","LEXRXC",131,0)
 . K:'$D(LEXTEST)&(+X'=1) ^LEX(LEXFI,"ADC",+X,+DA),^LEX(LEXFI,"ADC",1,+DA)
"RTN","LEXRXC",132,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC",133,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC",134,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC",135,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC",136,0)
 Q
"RTN","LEXRXC",137,0)
RADTERM ;   Index    ^LEX(757.01,"ADTERM",DT,IEN) 
"RTN","LEXRXC",138,0)
 N DA,DIK,LEXBEG,LEXDE,LEXDF,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXC",139,0)
 S LEXFI="757.01"
"RTN","LEXRXC",140,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""ADTERM""") Q:LEXTC=1
"RTN","LEXRXC",141,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.01,LEXIDX="ADTERM",LEXIDXT="^LEX(757.01,""ADTERM"",EXP,IEN)"
"RTN","LEXRXC",142,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",143,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",144,0)
 . . S LEXNDS=LEXNDS+1 I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXC",145,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXC",146,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC",147,0)
 . . N LEXOK,LEXDF,LEXDE S LEXDF=+($P($G(^LEX(LEXFI,LEXIEN,1)),"^",5))
"RTN","LEXRXC",148,0)
 . . S LEXDE=$E($P($G(^LEX(LEXFI,LEXIEN,0)),U,1),1,63)
"RTN","LEXRXC",149,0)
 . . S LEXOK=0 S:LEXDE=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC",150,0)
 . . . S LEXERR=LEXERR+1
"RTN","LEXRXC",151,0)
 . . . K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:+LEXDF>0&($L(LEXDE)) ^LEX(LEXFI,LEXIDX,LEXDE,LEXIEN)=""
"RTN","LEXRXC",152,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,$E(LEXSTR,1,20),$S($L(LEXSTR)>20:"...",1:""),?58,"  ",LEXIEN
"RTN","LEXRXC",153,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",154,0)
 . N DA,DIK,LEXDF,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXC",155,0)
 . S LEXDF=+($P($G(^LEX(LEXFI,DA,1)),"^",5))
"RTN","LEXRXC",156,0)
 . I +LEXDF>0,'$D(^LEX(LEXFI,LEXIDX,$E(X,1,63),DA)) D
"RTN","LEXRXC",157,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXC",158,0)
 . I +LEXDF'>0,$D(^LEX(LEXFI,LEXIDX,$E(X,1,63),DA)) D
"RTN","LEXRXC",159,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid (deleted)",?58,"  ",DA
"RTN","LEXRXC",160,0)
 . S:$L(X)&(+LEXDF>0) ^LEX(LEXFI,LEXIDX,$E(X,1,63),DA)=""
"RTN","LEXRXC",161,0)
 . K:$L(X)&(+LEXDF'>0) ^LEX(LEXFI,LEXIDX,$E(X,1,63),DA)
"RTN","LEXRXC",162,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC",163,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC",164,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC",165,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC",166,0)
 Q
"RTN","LEXRXC",167,0)
 ;              
"RTN","LEXRXC",168,0)
 ; Miscellaneous
"RTN","LEXRXC",169,0)
SET ;   Re-Index (some indexes in file 757.01, set logic only)
"RTN","LEXRXC",170,0)
 Q:'$D(LEXSET)  N LEXTC,LEXPRE,LEXBEG,LEXEND,LEXELP,LEXNM,LEXFI,LEXRT,LEXIEN,LEXP3,LEXP4
"RTN","LEXRXC",171,0)
 N LEXOUT,LEXMSG,ZTQUEUED,ZTREQ,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE S LEXFI=757.01
"RTN","LEXRXC",172,0)
 D FILE^DID(LEXFI,"N","GLOBAL NAME","LEXOUT","LEXMSG") S LEXRT=$G(LEXOUT("GLOBAL NAME")) Q:LEXRT'["^LEX"
"RTN","LEXRXC",173,0)
 S LEXPRE=$G(^TMP("LEXRX",$J,"T",1,"ELAP"))
"RTN","LEXRXC",174,0)
 S LEXBEG=$$NOW^XLFDT,LEXNM=$$FN^LEXRXXM(LEXFI)
"RTN","LEXRXC",175,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Re-Indexing File #"_LEXFI)) Q:LEXTC=1  I 1 D
"RTN","LEXRXC",176,0)
 . N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE S ZTRTN="SETIX^LEXRXC" S ZTDESC="Set 757.01 Indexes"
"RTN","LEXRXC",177,0)
 . S ZTSAVE("LEXRT")="",ZTSAVE("LEXFI")="",ZTIO="",ZTDTH=$H D ^%ZTLOAD
"RTN","LEXRXC",178,0)
 Q:$D(LEXQ)  S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC",179,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC",180,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"ALLIX",,,"Re-Index",LEXELP)
"RTN","LEXRXC",181,0)
 S LEXELP=$$ADDT^LEXRXXM(LEXELP,LEXPRE)
"RTN","LEXRXC",182,0)
 S ^TMP("LEXRX",$J,"T",1,"ELAP")=LEXELP
"RTN","LEXRXC",183,0)
 Q
"RTN","LEXRXC",184,0)
SETIX ;   Set Indexes (Set logic only)
"RTN","LEXRXC",185,0)
 S:$D(ZTQUEUED) ZTREQ="@" W:'$D(ZTQUEUED) !,?8,"Re-Indexing",! N DIK,LEXP3,LEXP4,LEXIEN
"RTN","LEXRXC",186,0)
 S DIK="^LEX(757.01,",DIK(1)=".01^B" D ENALL^DIK S DIK="^LEX(757.01,",DIK(1)="1^AMC" D ENALL^DIK
"RTN","LEXRXC",187,0)
 S DIK="^LEX(757.01,",DIK(1)="9^ADC^ADTERM" D ENALL^DIK S DIK="^LEX(757.01,",DIK(1)="13^APAR" D ENALL^DIK
"RTN","LEXRXC",188,0)
 F  S LEXIEN=$O(^LEX(757.01,LEXIEN)) Q:+LEXIEN'>0  S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXRXC",189,0)
 S $P(^LEX(757.01,0),"^",3)=LEXP3,$P(^LEX(757.01,0),"^",4)=LEXP4
"RTN","LEXRXC",190,0)
 Q
"RTN","LEXRXC",191,0)
DL ;     De-Link AWRD
"RTN","LEXRXC",192,0)
 N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(757.05,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",193,0)
 . N LEXNC,LEXND,LEXNN,LEXWRD S LEXND=$G(^LEX(757.05,+LEXIEN,0)) Q:$P(LEXND,"^",3)'="L"  S LEXWRD=$P(LEXND,"^",1)
"RTN","LEXRXC",194,0)
 . S LEXNN="^LEX(757.01,""AWRD"","""_LEXWRD_""")",LEXNC="^LEX(757.01,""AWRD"","""_LEXWRD_""","
"RTN","LEXRXC",195,0)
 . F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  K:LEXNN[",""LINKED"")" @LEXNN
"RTN","LEXRXC",196,0)
 Q
"RTN","LEXRXC",197,0)
MC ;     Major Concept Map File
"RTN","LEXRXC",198,0)
 N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(757,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",199,0)
 . N DA,DIK S DA=LEXIEN,DIK="^LEX(757," D IX1^DIK
"RTN","LEXRXC",200,0)
 Q
"RTN","LEXRXC",201,0)
RL ;     Re-Link 757.05
"RTN","LEXRXC",202,0)
 N LEXIEN S LEXIEN=" " F  S LEXIEN=$O(^LEX(757.05,LEXIEN)) Q:'$L(LEXIEN)  K:LEXIEN?1U.U ^LEX(757.05,LEXIEN)
"RTN","LEXRXC",203,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(757.05,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC",204,0)
 . N DA,DIK S DA=LEXIEN K ^LEX(757.05,DA,1,"B") S DA=LEXIEN,DIK="^LEX(757.05," D IX1^DIK
"RTN","LEXRXC",205,0)
 Q
"RTN","LEXRXC",206,0)
SL ;     String Length ASL
"RTN","LEXRXC",207,0)
 N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(757.01,"ASL",LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC",208,0)
 . N LEXSCT,LEXPSCT S LEXSCT=$$SCT^LEXRXC3(LEXSTR)
"RTN","LEXRXC",209,0)
 . S LEXPSCT=$O(^LEX(757.01,"ASL",LEXSTR,0))
"RTN","LEXRXC",210,0)
 . I +LEXPSCT>0,+LEXSCT'>0 K ^LEX(757.01,"ASL",LEXSTR,+LEXPSCT)
"RTN","LEXRXC",211,0)
 . I +LEXPSCT>0,+LEXSCT>0,+LEXPSCT'=LEXSCT D
"RTN","LEXRXC",212,0)
 . . K ^LEX(757.01,"ASL",LEXSTR,+LEXPSCT) S ^LEX(757.01,"ASL",LEXSTR,+LEXSCT)=""
"RTN","LEXRXC",213,0)
 Q
"RTN","LEXRXC",214,0)
CLR ;   Clear
"RTN","LEXRXC",215,0)
 K LEXNAM,LEXSET,LEXTEST,ZTQUEUED,LEXQ
"RTN","LEXRXC",216,0)
 Q
"RTN","LEXRXC2")
0^8^B84713093
"RTN","LEXRXC2",1,0)
LEXRXC2 ;ISL/KER - Re-Index 757.01 AMC/APAR ;12/19/2014
"RTN","LEXRXC2",2,0)
 ;;2.0;LEXICON UTILITY;**81,86**;Sep 23, 1996;Build 1
"RTN","LEXRXC2",3,0)
 ;               
"RTN","LEXRXC2",4,0)
 ; Global Variables
"RTN","LEXRXC2",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXC2",6,0)
 ;    ^LEX(757.01,        SACC 1.3
"RTN","LEXRXC2",7,0)
 ;    ^LEX(757.04,        SACC 1.3
"RTN","LEXRXC2",8,0)
 ;    ^LEX(757.05,        SACC 1.3
"RTN","LEXRXC2",9,0)
 ;               
"RTN","LEXRXC2",10,0)
 ; External References
"RTN","LEXRXC2",11,0)
 ;    ^DIK                ICR  10013
"RTN","LEXRXC2",12,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXC2",13,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXC2",14,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXC2",15,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXRXC2",16,0)
 ;               
"RTN","LEXRXC2",17,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXC2",18,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXC2",19,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXC2",20,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXC2",21,0)
 ;               
"RTN","LEXRXC2",22,0)
 Q
"RTN","LEXRXC2",23,0)
 ; NOTES:
"RTN","LEXRXC2",24,0)
 ;               
"RTN","LEXRXC2",25,0)
 ;   The AMC cross-references is used to create the AWRD 
"RTN","LEXRXC2",26,0)
 ;   cross-reference, hence the AMC cross-reference must
"RTN","LEXRXC2",27,0)
 ;   be repaired/re-indexed before AWRD.
"RTN","LEXRXC2",28,0)
 ;               
"RTN","LEXRXC2",29,0)
EN ; Main Entry Point
"RTN","LEXRXC2",30,0)
R75701 ; Repair file 757.01
"RTN","LEXRXC2",31,0)
 D RAMC,RAPAR
"RTN","LEXRXC2",32,0)
 Q
"RTN","LEXRXC2",33,0)
RAMC ;   Index    ^LEX(757.01,"AMC",MC,IEN) 
"RTN","LEXRXC2",34,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXMC,LEXNDS,LEXOK,LEXSTR
"RTN","LEXRXC2",35,0)
 S LEXFI="757.01"
"RTN","LEXRXC2",36,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""AMC""") Q:LEXTC=1
"RTN","LEXRXC2",37,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.01,LEXIDX="AMC",LEXIDXT="^LEX(757.01,""AMC"",MC,IEN)"
"RTN","LEXRXC2",38,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC2",39,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC2",40,0)
 . . S LEXNDS=LEXNDS+1
"RTN","LEXRXC2",41,0)
 . . I '$D(^LEX(LEXFI,LEXIEN,0)) D  Q
"RTN","LEXRXC2",42,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXC2",43,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC2",44,0)
 . . N LEXOK,LEXMC S LEXMC=+($P($G(^LEX(LEXFI,LEXIEN,1)),"^",1))
"RTN","LEXRXC2",45,0)
 . . S LEXOK=0 S:LEXMC=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC2",46,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:+LEXMC>0 ^LEX(LEXFI,LEXIDX,+LEXMC,LEXIEN)=""
"RTN","LEXRXC2",47,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC2",48,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC2",49,0)
 . N DA,DIK,X S DA=LEXIEN,X=+($G(^LEX(LEXFI,DA,1))) Q:'$L(X)
"RTN","LEXRXC2",50,0)
 . I '$D(^LEX(LEXFI,LEXIDX,X,DA)) D
"RTN","LEXRXC2",51,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXC2",52,0)
 . S:$L(X) ^LEX(LEXFI,LEXIDX,X,DA)=""
"RTN","LEXRXC2",53,0)
 . S ^LEX(LEXFI,LEXIDX,X,DA)=""
"RTN","LEXRXC2",54,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC2",55,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC2",56,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC2",57,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC2",58,0)
 Q
"RTN","LEXRXC2",59,0)
RAPAR ;   Index    ^LEX(757.01,"APAR",MC,IEN) 
"RTN","LEXRXC2",60,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXPAR,LEXPR,LEXSTR
"RTN","LEXRXC2",61,0)
 S LEXFI="757.01"
"RTN","LEXRXC2",62,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""APAR""") Q:LEXTC=1
"RTN","LEXRXC2",63,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.01,LEXIDX="APAR",LEXIDXT="^LEX(757.01,""APAR"",PARENT,IEN)"
"RTN","LEXRXC2",64,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXC2",65,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC2",66,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXPR S LEXPR=+($P($G(^LEX(LEXFI,LEXIEN,1)),"^",9))
"RTN","LEXRXC2",67,0)
 . . S LEXOK=0 S:LEXPR=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXC2",68,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:+LEXPR>0 ^LEX(LEXFI,LEXIDX,+LEXPR,LEXIEN)=""
"RTN","LEXRXC2",69,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXC2",70,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXC2",71,0)
 . N DA,LEXPAR S DA=LEXIEN S LEXPAR=$P($G(^LEX(757.01,DA,1)),"^",9) Q:'$L(LEXPAR)
"RTN","LEXRXC2",72,0)
 . I '$D(^LEX(757.01,LEXIDX,$E(LEXPAR,1,30),DA)) D
"RTN","LEXRXC2",73,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing",?58,"  ",DA
"RTN","LEXRXC2",74,0)
 . S:$L(LEXPAR) ^LEX(757.01,LEXIDX,$E(LEXPAR,1,30),DA)=""
"RTN","LEXRXC2",75,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC2",76,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC2",77,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC2",78,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC2",79,0)
 Q
"RTN","LEXRXC2",80,0)
RAWRD ;   Index    ^LEX(757.01,"AWRD",WORD,MC,EXP)
"RTN","LEXRXC2",81,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXE,LEXELP,LEXEND,LEXERR,LEXEXCL,LEXEXP,LEXFI,LEXHI,LEXI,LEXIDX,LEXIDXT,LEXL,LEXLO,LEXM
"RTN","LEXRXC2",82,0)
 N LEXMCE,LEXNDS,LEXS,LEXS1,LEXS2,LEXS3,LEXS4,LEXSTR,LEXT,LEXTC,LEXTK,LEXTKN,LEXTNG,LEXW,LEXWDS,X
"RTN","LEXRXC2",83,0)
 S LEXFI="757.01"
"RTN","LEXRXC2",84,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""AWRD""") Q:LEXTC=1
"RTN","LEXRXC2",85,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXFI=757.01,LEXIDX="AWRD",LEXIDXT="^LEX(757.01,""AWRD"",WORD,MC,EXP)"
"RTN","LEXRXC2",86,0)
 S LEXTKN="" F  S LEXTKN=$O(^LEX(LEXFI,LEXIDX,LEXTKN)) Q:'$L(LEXTKN)  D
"RTN","LEXRXC2",87,0)
 . S LEXEXCL=0 I $O(^LEX(757.04,"B",LEXTKN,0))>0 D
"RTN","LEXRXC2",88,0)
 . . S LEXEXCL=$P($G(^LEX(757.04,+($O(^LEX(757.04,"B",LEXTKN,0))),0)),"^",2),LEXEXCL=$S(LEXEXCL="B":1,LEXEXCL="I":1,1:0)
"RTN","LEXRXC2",89,0)
 . S LEXS1="" F  S LEXS1=$O(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1)) Q:'$L(LEXS1)  D
"RTN","LEXRXC2",90,0)
 . . S LEXS2="" F  S LEXS2=$O(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2)) Q:'$L(LEXS2)  D
"RTN","LEXRXC2",91,0)
 . . . ;     Supplemental   ^LEX(757.01,"AWRD",WORD,IEN,MC,SUP)
"RTN","LEXRXC2",92,0)
 . . . ;       Duplicates
"RTN","LEXRXC2",93,0)
 . . . N LEXLO,LEXHI F  D  Q:+($G(LEXHI))'>+($G(LEXLO))
"RTN","LEXRXC2",94,0)
 . . . . N DA,DIK S LEXLO=$O(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2,"")),LEXHI=$O(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2," "),-1) Q:(+LEXLO+LEXHI)'>0
"RTN","LEXRXC2",95,0)
 . . . . I LEXLO>0,LEXHI>0,LEXHI>LEXLO S DA(1)=LEXS1,DA=LEXHI S DIK="^LEX(757.01,"_DA(1)_",5," D:$D(@(DIK_DA_",0)")) ^DIK
"RTN","LEXRXC2",96,0)
 . . . I $D(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2))=10!($D(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2))=11) D
"RTN","LEXRXC2",97,0)
 . . . . N LEXS3 S LEXS3="" F  S LEXS3=$O(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2,LEXS3)) Q:'$L(LEXS3)  D
"RTN","LEXRXC2",98,0)
 . . . . . N LEXEXP,LEXMCE,LEXSTR S LEXNDS=+($G(LEXNDS))+1
"RTN","LEXRXC2",99,0)
 . . . . . S LEXEXP=LEXS1,LEXMCE=+($$MCE^LEXRXXM(LEXEXP))
"RTN","LEXRXC2",100,0)
 . . . . . S LEXSTR=$P($G(^LEX(LEXFI,+LEXEXP,5,+LEXS3,0)),"^",1)
"RTN","LEXRXC2",101,0)
 . . . . . ;       Redundant
"RTN","LEXRXC2",102,0)
 . . . . . I $D(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2))=11 D
"RTN","LEXRXC2",103,0)
 . . . . . . S LEXERR=+($G(LEXERR))+1 I '$D(ZTQUEUED) W !,"1",?8,LEXFI,?19,LEXIDX,?30,LEXTKN,?58,"  ",LEXS1,"/",LEXS2,"/",LEXS3
"RTN","LEXRXC2",104,0)
 . . . . . . I '$D(LEXTEST) D
"RTN","LEXRXC2",105,0)
 . . . . . . . N DA,DIK,LEXI,LEXIDX,LEXT,LEXWDS
"RTN","LEXRXC2",106,0)
 . . . . . . . S LEXT=$P($G(^LEX(757.01,+LEXEXP,0)),"^",1),LEXI=0 D WORDS^LEXRXXP(LEXT,.LEXWDS) S LEXIDX="AWRD"
"RTN","LEXRXC2",107,0)
 . . . . . . . Q:'$D(LEXWDS(LEXTKN))  S DA(1)=LEXEXP,DA=LEXS3,DIK="^LEX(757.01,"_DA(1)_",5," I $D(@(DIK_DA_",0)")) D
"RTN","LEXRXC2",108,0)
 . . . . . . . . D ^DIK K ^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2,LEXS3)
"RTN","LEXRXC2",109,0)
 . . . . . ;       Verify
"RTN","LEXRXC2",110,0)
 . . . . . N LEXS D SUP^LEXRXXP(LEXEXP,.LEXS) I '$D(LEXS("S",LEXTKN,LEXS1,LEXS2,LEXS3)) D
"RTN","LEXRXC2",111,0)
 . . . . . . Q:+LEXS3'>0  S LEXERR=+($G(LEXERR))+1 I '$D(ZTQUEUED) W !,"2",?8,LEXFI,?19,LEXIDX,?30,LEXTKN,?58,"  ",LEXS1,"/",LEXS2,"/",LEXS3
"RTN","LEXRXC2",112,0)
 . . . . . . I '$D(LEXTEST) K ^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2,LEXS3)
"RTN","LEXRXC2",113,0)
 . . . ;     Linked         ^LEX(757.01,"AWRD",WORD,IEN,"LINKED")
"RTN","LEXRXC2",114,0)
 . . . I $D(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2))=1,LEXS2="LINKED" D  Q
"RTN","LEXRXC2",115,0)
 . . . . N LEXEXP,LEXL S LEXEXP=LEXS1,LEXNDS=+($G(LEXNDS))+1 D LINK^LEXRXXP(LEXEXP,.LEXL)
"RTN","LEXRXC2",116,0)
 . . . . Q:$D(LEXL("R",LEXTKN,+LEXEXP,"LINKED"))!($D(LEXL("L",LEXTKN,+LEXEXP,"LINKED")))
"RTN","LEXRXC2",117,0)
 . . . . I '$D(LEXL("R",LEXTKN,+LEXEXP,"LINKED"))&($D(LEXL("L",LEXTKN,+LEXEXP,"LINKED"))) D
"RTN","LEXRXC2",118,0)
 . . . . . S LEXERR=+($G(LEXERR))+1 I '$D(ZTQUEUED) W !,"3",?8,LEXFI,?19,LEXIDX,?30,LEXTKN,?58,"  ",LEXS1,"/",LEXS2
"RTN","LEXRXC2",119,0)
 . . . . . I '$D(LEXTEST) K ^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2)
"RTN","LEXRXC2",120,0)
 . . . ;     Words          ^LEX(757.01,"AWRD",WORD,MC,IEN)
"RTN","LEXRXC2",121,0)
 . . . I $D(^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2))=1,+LEXS2>0,$D(^LEX(757.01,+LEXS2,0)) D  Q
"RTN","LEXRXC2",122,0)
 . . . . N LEXW,LEXIDX D AWRD^LEXRXXP(+LEXS2,.LEXW,1) S LEXIDX="AWRD" S LEXNDS=+($G(LEXNDS))+1
"RTN","LEXRXC2",123,0)
 . . . . I '$D(LEXW("W",LEXTKN,LEXS1,LEXS2)) D  Q
"RTN","LEXRXC2",124,0)
 . . . . . S LEXERR=+($G(LEXERR))+1 I '$D(ZTQUEUED) W !,"4",?8,LEXFI,?19,LEXIDX,?30,LEXTKN,?58,"  ",LEXS2
"RTN","LEXRXC2",125,0)
 . . . . . I '$D(LEXTEST) K ^LEX(LEXFI,LEXIDX,LEXTKN,LEXS1,LEXS2)
"RTN","LEXRXC2",126,0)
 S LEXEXP=0 F  S LEXEXP=$O(^LEX(LEXFI,LEXEXP)) Q:+LEXEXP'>0  D
"RTN","LEXRXC2",127,0)
 . N DA,DIK,LEXS,LEXS1,LEXS1,LEXS3,LEXS4,X S DA=$G(LEXEXP),X=$P($G(^LEX(LEXFI,DA,0)),"^",1) Q:'$L(X)
"RTN","LEXRXC2",128,0)
 . I $L(X),$D(^LEX(LEXFI,+($G(DA)),0)),$D(^LEX(LEXFI,+($G(DA)),1)) D
"RTN","LEXRXC2",129,0)
 . . N LEXW,LEXTK,LEXM,LEXE S ^LEX(LEXFI,"B",$$UP^XLFSTR($E(X,1,63)),DA)=""
"RTN","LEXRXC2",130,0)
 . . D AWRD^LEXRXXP(+DA,.LEXW,1) S LEXTK="" F  S LEXTK=$O(LEXW("W",LEXTK)) Q:'$L(LEXTK)  D
"RTN","LEXRXC2",131,0)
 . . . S LEXM=0 F  S LEXM=$O(LEXW("W",LEXTK,LEXM)) Q:+LEXM'>0  D
"RTN","LEXRXC2",132,0)
 . . . . S LEXE=0 F  S LEXE=$O(LEXW("W",LEXTK,LEXM,LEXE)) Q:+LEXE'>0  D
"RTN","LEXRXC2",133,0)
 . . . . . Q:$D(^LEX(757.01,"AWRD",LEXTK,LEXM))
"RTN","LEXRXC2",134,0)
 . . . . . S LEXERR=+($G(LEXERR))+1 I '$D(ZTQUEUED) W !,"5",?8,LEXFI,?19,LEXIDX,?30,"Missing ",$E(LEXTK,1,18),?58,"  ",LEXM,"/",LEXE
"RTN","LEXRXC2",135,0)
 . . . . . S ^LEX(757.01,"AWRD",LEXTK,LEXM,LEXE)=""
"RTN","LEXRXC2",136,0)
 . K LEXS D SUP^LEXRXXP(LEXEXP,.LEXS)
"RTN","LEXRXC2",137,0)
 . S LEXS1="" F  S LEXS1=$O(LEXS("S",LEXS1)) Q:'$L(LEXS1)  S LEXS2="" F  S LEXS2=$O(LEXS("S",LEXS1,LEXS2)) Q:'$L(LEXS2)  D
"RTN","LEXRXC2",138,0)
 . . S LEXS3="" F  S LEXS3=$O(LEXS("S",LEXS1,LEXS2,LEXS3)) Q:'$L(LEXS3)  S LEXS4="" F  S LEXS4=$O(LEXS("S",LEXS1,LEXS2,LEXS3,LEXS4)) Q:'$L(LEXS4)  D
"RTN","LEXRXC2",139,0)
 . . . I '$D(^LEX(757.01,"AWRD",LEXS1,LEXS2,LEXS3,LEXS4)) D
"RTN","LEXRXC2",140,0)
 . . . . S LEXERR=+($G(LEXERR))+1 I '$D(ZTQUEUED) W !,"6",?8,LEXFI,?19,LEXIDX,?30,"Missing ",$E(LEXS1,1,18),?58,"  ",LEXS2,"/",LEXS3,"/",LEXS4
"RTN","LEXRXC2",141,0)
 . . . . S ^LEX(757.01,"AWRD",LEXS1,LEXS2,LEXS3,LEXS4)=""
"RTN","LEXRXC2",142,0)
 . K LEXS D LINK^LEXRXXP(LEXEXP,.LEXS)
"RTN","LEXRXC2",143,0)
 . S LEXS1="" F  S LEXS1=$O(LEXS("L",LEXS1)) Q:'$L(LEXS1)  S LEXS2="" F  S LEXS2=$O(LEXS("L",LEXS1,LEXS2)) Q:'$L(LEXS2)  D
"RTN","LEXRXC2",144,0)
 . . S LEXS3="" F  S LEXS3=$O(LEXS("L",LEXS1,LEXS2,LEXS3)) Q:'$L(LEXS3)  D
"RTN","LEXRXC2",145,0)
 . . . I '$D(^LEX(757.01,"AWRD",LEXS1,LEXS2,LEXS3)) D
"RTN","LEXRXC2",146,0)
 . . . . S LEXERR=+($G(LEXERR))+1 I '$D(ZTQUEUED) W !,"7",?8,LEXFI,?19,LEXIDX,?30,"Missing ",$E(LEXS1,1,18),?58,"  ",LEXS2,"/",LEXS3
"RTN","LEXRXC2",147,0)
 . . . . S ^LEX(757.01,"AWRD",LEXS1,LEXS2,LEXS3)=""
"RTN","LEXRXC2",148,0)
 . S LEXS1="" F  S LEXS1=$O(LEXS("R",LEXS1)) Q:'$L(LEXS1)  S LEXS2="" F  S LEXS2=$O(LEXS("R",LEXS1,LEXS2)) Q:'$L(LEXS2)  D
"RTN","LEXRXC2",149,0)
 . . S LEXS3="" F  S LEXS3=$O(LEXS("R",LEXS1,LEXS2,LEXS3)) Q:'$L(LEXS3)  D
"RTN","LEXRXC2",150,0)
 . . . I '$D(^LEX(757.01,"AWRD",LEXS1,LEXS2)) D
"RTN","LEXRXC2",151,0)
 . . . . Q:$D(^LEX(757.04,"ACTION",LEXS1,"B"))!($D(^LEX(757.04,"ACTION",LEXS1,"I")))
"RTN","LEXRXC2",152,0)
 . . . . S LEXERR=+($G(LEXERR))+1 I '$D(ZTQUEUED) W !,"8",?8,LEXFI,?19,LEXIDX,?30,"Missing ",$E(LEXS1,1,18),?58,"  ",LEXS2,"/",LEXS3
"RTN","LEXRXC2",153,0)
 . . . . S ^LEX(757.01,"AWRD",LEXS1,LEXS2,LEXS3)=""
"RTN","LEXRXC2",154,0)
 . K LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXEXP,5,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXC2",155,0)
 . . N DA,DIK S DA(1)=LEXEXP,DA=LEXS,DIK="^LEX(757.01,"_DA(1)_",5," D IX1^DIK
"RTN","LEXRXC2",156,0)
 S LEXEXP=0 F  S LEXEXP=$O(^LEX(757.05,LEXEXP)) Q:+LEXEXP'>0  D
"RTN","LEXRXC2",157,0)
 . N DA,DIK S DA=LEXEXP,DIK="^LEX(757.05," D IX1^DIK
"RTN","LEXRXC2",158,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC2",159,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC2",160,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC2",161,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC2",162,0)
 Q
"RTN","LEXRXC2",163,0)
 ;              
"RTN","LEXRXC2",164,0)
 ; Miscellaneous
"RTN","LEXRXC2",165,0)
CLR ;   Clear
"RTN","LEXRXC2",166,0)
 K LEXNAM,LEXTEST,ZTQUEUED
"RTN","LEXRXC2",167,0)
 Q
"RTN","LEXRXC3")
0^9^B124793632
"RTN","LEXRXC3",1,0)
LEXRXC3 ;ISL/KER - Re-Index 757.01 AWRD ;12/19/2014
"RTN","LEXRXC3",2,0)
 ;;2.0;LEXICON UTILITY;**81,86**;Sep 23, 1996;Build 1
"RTN","LEXRXC3",3,0)
 ;               
"RTN","LEXRXC3",4,0)
 ;               
"RTN","LEXRXC3",5,0)
 ; Global Variables
"RTN","LEXRXC3",6,0)
 ;    ^TMP("LEXRXASL")    SACC 2.3.2.5.1
"RTN","LEXRXC3",7,0)
 ;    ^TMP("LEXRXASLU")   SACC 2.3.2.5.1
"RTN","LEXRXC3",8,0)
 ;    ^TMP("LEXRXAWRD")   SACC 2.3.2.5.1
"RTN","LEXRXC3",9,0)
 ;    ^TMP("LEXRXERR")    SACC 2.3.2.5.1
"RTN","LEXRXC3",10,0)
 ;    ^TMP("LEXRXPRO")    SACC 2.3.2.5.1
"RTN","LEXRXC3",11,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXRXC3",12,0)
 ;               
"RTN","LEXRXC3",13,0)
 ; External References
"RTN","LEXRXC3",14,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXC3",15,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXC3",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXRXC3",17,0)
 ;               
"RTN","LEXRXC3",18,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXC3",19,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXC3",20,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXC3",21,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXC3",22,0)
 ;               
"RTN","LEXRXC3",23,0)
 ;   The AWRD cross-references is used to create the ASL
"RTN","LEXRXC3",24,0)
 ;   cross-reference, hence the AWRD cross-reference must
"RTN","LEXRXC3",25,0)
 ;   be repaired/re-indexed before ASL.
"RTN","LEXRXC3",26,0)
 ;               
"RTN","LEXRXC3",27,0)
 Q
"RTN","LEXRXC3",28,0)
EN ; Main Entry Point
"RTN","LEXRXC3",29,0)
R75701 ; Repair file 757.01
"RTN","LEXRXC3",30,0)
 D KGBL,RAWRD,RASL^LEXRXC4,KGBL
"RTN","LEXRXC3",31,0)
 D:'$D(ZTQUEUED) LEX
"RTN","LEXRXC3",32,0)
 Q
"RTN","LEXRXC3",33,0)
 ;
"RTN","LEXRXC3",34,0)
RAWRD ;   Index    ^LEX(757.01,"AWRD",WORD,MC,EXP)
"RTN","LEXRXC3",35,0)
 N DA,DIK,LEX0P3,LEX0P4,LEXBEG,LEXCHR,LEXCHRS,LEXCTL,LEXDATA,LEXDIF,LEXE,LEXELP,LEXEND,LEXERR,LEXEX,LEXEXCL,LEXEXP
"RTN","LEXRXC3",36,0)
 N LEXFI,LEXFUL,LEXHI,LEXI,LEXIDX,LEXIDXT,LEXIT,LEXL,LEXLO,LEXLTKN,LEXM,LEXMC,LEXMCE,LEXMCEI,LEXMCI,LEXND,LEXNDS
"RTN","LEXRXC3",37,0)
 N LEXNOD,LEXRI,LEXRT,LEXRT1,LEXRT2,LEXRXTMP,LEXS,LEXS1,LEXS2,LEXS3,LEXS4,LEXSI,LEXSP,LEXSTR,LEXT,LEXTC
"RTN","LEXRXC3",38,0)
 N LEXTK,LEXTKC,LEXTKN,LEXTMP,LEXTNG,LEXTTKN,LEXW,LEXWDS,X S LEXRXTMP=$D(^TMP("LEXRX",$J))
"RTN","LEXRXC3",39,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""AWRD""")
"RTN","LEXRXC3",40,0)
 Q:LEXTC=1  S (LEX0P3,LEX0P4)=0,LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXFI=757.01
"RTN","LEXRXC3",41,0)
 K ^TMP("LEXRXPRO",$J,"AWRD"),^TMP("LEXRXERR",$J,"AWRD"),^TMP("LEXRXAWRD",$J),^TMP("LEXRXAWRDK",$J),^TMP("LEXRXAWRDU",$J)
"RTN","LEXRXC3",42,0)
 S LEXIDX="AWRD",LEXIDXT="^LEX(757.01,""AWRD"",WORD,MC,EXP)"
"RTN","LEXRXC3",43,0)
 ;     Build
"RTN","LEXRXC3",44,0)
 N LEXEX S LEXEX=0 F  S LEXEX=$O(^LEX(757.01,LEXEX)) Q:+LEXEX'>0  D
"RTN","LEXRXC3",45,0)
 . N X,LEXEXP,LEXIDX,LEXMC,LEXMCI,LEXMCEI,LEXRI,LEXSI,LEXTKN,LEXTKC,LEXTMP
"RTN","LEXRXC3",46,0)
 . S ^TMP("LEXRXPRO",$J,"AWRD","BUILD","IEN")=+LEXEX,LEX0P3=+LEXEX,LEX0P4=LEX0P4+1
"RTN","LEXRXC3",47,0)
 . S LEXEXP=$$UP^XLFSTR($G(^LEX(757.01,LEXEX,0))) Q:'$L(LEXEXP)
"RTN","LEXRXC3",48,0)
 . S LEXMCI=$P($G(^LEX(757.01,LEXEX,1)),"^",1) Q:+LEXMCI'>0
"RTN","LEXRXC3",49,0)
 . S LEXMCEI=$P($G(^LEX(757,LEXMCI,0)),"^",1) Q:+LEXMCEI'>0
"RTN","LEXRXC3",50,0)
 . ;       Words (main)
"RTN","LEXRXC3",51,0)
 . K ^TMP("LEXTKN",$J) S LEXIDX="",X=LEXEXP D PTX^LEXTOKN
"RTN","LEXRXC3",52,0)
 . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXRXC3",53,0)
 . . S LEXTKN="",LEXTKC=0
"RTN","LEXRXC3",54,0)
 . . F  S LEXTKC=$O(^TMP("LEXTKN",$J,LEXTKC)) Q:+LEXTKC'>0  D
"RTN","LEXRXC3",55,0)
 . . . N LEXND,LEXTKN S LEXTKN=$O(^TMP("LEXTKN",$J,LEXTKC,"")) Q:'$L(LEXTKN)
"RTN","LEXRXC3",56,0)
 . . . S LEXND="^LEX(757.01,""AWRD"","_$$QQ(LEXTKN)_","_LEXMCEI_")" I '$D(@LEXND) D
"RTN","LEXRXC3",57,0)
 . . . . N LEXND S LEXND="^LEX(757.01,"_+LEXEX_",4,""B"","_$$QQ(LEXTKN)_")" Q:$D(@LEXND)
"RTN","LEXRXC3",58,0)
 . . . . S LEXND="^LEX(757.01,"_+LEXMCEI_",4,""B"","_$$QQ(LEXTKN)_")" Q:$D(@LEXND)
"RTN","LEXRXC3",59,0)
 . . . . S LEXERR=+($G(LEXERR))+1
"RTN","LEXRXC3",60,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",0)=$G(^TMP("LEXRXERR",$J,"AWRD",0))+1
"RTN","LEXRXC3",61,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",1)=$G(^TMP("LEXRXERR",$J,"AWRD",1))+1
"RTN","LEXRXC3",62,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",1,0)="Missing word in ""AWRD"" index"
"RTN","LEXRXC3",63,0)
 . . . . S LEXND="^TMP(""LEXRXERR"","_$J_",""AWRD"",1,""ERR"","_$$QQ(LEXTKN)_","_LEXMCEI_","_LEXEX_")" S @LEXND=""
"RTN","LEXRXC3",64,0)
 . . . . S ^TMP("LEXRXPRO",$J,"AWRD","ERR")=+($G(^TMP("LEXRXPRO",$J,"AWRD","ERR")))+1
"RTN","LEXRXC3",65,0)
 . . . I $L($G(LEXTKN)),+($G(LEXMCI))>0,+($G(LEXMCEI))>0,+($G(LEXEX))>0 D
"RTN","LEXRXC3",66,0)
 . . . . N LEXND S LEXND="^LEX(757.01,"_LEXEX_",4,""B"","_$$QQ(LEXTKN)_")" Q:$D(@LEXND)
"RTN","LEXRXC3",67,0)
 . . . . S LEXND="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXTKN)_","_+LEXMCEI_")" Q:$D(@LEXND)
"RTN","LEXRXC3",68,0)
 . . . . S LEXND="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXTKN)_","_+LEXMCEI_","_LEXEX_")" S @LEXND=""
"RTN","LEXRXC3",69,0)
 . K ^TMP("LEXTKN",$J)
"RTN","LEXRXC3",70,0)
 . ;       Supplemental Words
"RTN","LEXRXC3",71,0)
 . S LEXSI=0 F  S LEXSI=$O(^LEX(757.01,LEXEX,5,LEXSI)) Q:+LEXSI'>0  D
"RTN","LEXRXC3",72,0)
 . . N LEXTKN S LEXTKN=$$UP^XLFSTR($G(^LEX(757.01,LEXEX,5,LEXSI,0))) Q:'$L(LEXTKN)
"RTN","LEXRXC3",73,0)
 . . N LEXND S LEXND="^LEX(757.01,"_LEXEX_",4,""B"","_$$QQ(LEXTKN)_")" Q:$D(@LEXND)
"RTN","LEXRXC3",74,0)
 . . I $D(LEXUNQ) S LEXND="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXTKN)_","_+LEXEX_")" Q:$D(@LEXND)
"RTN","LEXRXC3",75,0)
 . . S LEXND="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXTKN)_","_+LEXEX_","_+LEXMCEI_","_LEXSI_")" S @LEXND=""
"RTN","LEXRXC3",76,0)
 . . S LEXND="^LEX(757.01,""AWRD"","_$$QQ(LEXTKN)_","_+LEXEX_","_+LEXMCEI_","_LEXSI_")" I '$D(@LEXND) D
"RTN","LEXRXC3",77,0)
 . . . N LEXND,LEXUNQ S LEXERR=+($G(LEXERR))+1
"RTN","LEXRXC3",78,0)
 . . . S ^TMP("LEXRXERR",$J,"AWRD",0)=$G(^TMP("LEXRXERR",$J,"AWRD",0))+1
"RTN","LEXRXC3",79,0)
 . . . S ^TMP("LEXRXERR",$J,"AWRD",2)=$G(^TMP("LEXRXERR",$J,"AWRD",2))+1
"RTN","LEXRXC3",80,0)
 . . . S ^TMP("LEXRXERR",$J,"AWRD",2,0)="Missing supplemental word in ""AWRD"" index"
"RTN","LEXRXC3",81,0)
 . . . S LEXND="^TMP(""LEXRXERR"","_$J_",""AWRD"",2,""ERR"","_$$QQ(LEXTKN)_","_+LEXEX_","_+LEXMCEI_","_+LEXSI_")" S @LEXND=""
"RTN","LEXRXC3",82,0)
 . . . S ^TMP("LEXRXPRO",$J,"AWRD","ERR")=+($G(^TMP("LEXRXPRO",$J,"AWRD","ERR")))+1
"RTN","LEXRXC3",83,0)
 . ;       Linked Words
"RTN","LEXRXC3",84,0)
 . I $D(^LEX(757.05,"AEXP",LEXEX)) D
"RTN","LEXRXC3",85,0)
 . . N LEXRI S LEXRI=0
"RTN","LEXRXC3",86,0)
 . . F  S LEXRI=$O(^LEX(757.05,"AEXP",LEXEX,LEXRI)) Q:+LEXRI=0  D
"RTN","LEXRXC3",87,0)
 . . . N LEXTKN,LEXMC,LEXND S LEXTKN=$$UP^XLFSTR($P(^LEX(757.05,LEXRI,0),U,1)) Q:'$L(LEXTKN)
"RTN","LEXRXC3",88,0)
 . . . S LEXND="^LEX(757.01,"_LEXEX_",4,""B"","_$$QQ(LEXTKN)_")" Q:$D(@LEXND)
"RTN","LEXRXC3",89,0)
 . . . S LEXMC=$P($G(^LEX(757.01,LEXEX,1)),U,1) Q:+LEXMC'>0
"RTN","LEXRXC3",90,0)
 . . . I $D(LEXUNQ) S LEXND="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXTKN)_","_LEXEX_")" Q:$D(@LEXND)
"RTN","LEXRXC3",91,0)
 . . . S LEXND="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXTKN)_","_LEXEX_",""LINKED"")" S @LEXND=""
"RTN","LEXRXC3",92,0)
 . . . S LEXND="^LEX(757.01,""AWRD"","_$$QQ(LEXTKN)_","_LEXEX_",""LINKED"")" I '$D(@LEXND) D
"RTN","LEXRXC3",93,0)
 . . . . N LEXND,LEXUNQ S LEXERR=+($G(LEXERR))+1
"RTN","LEXRXC3",94,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",0)=$G(^TMP("LEXRXERR",$J,"AWRD",0))+1
"RTN","LEXRXC3",95,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",3)=$G(^TMP("LEXRXERR",$J,"AWRD",3))+1
"RTN","LEXRXC3",96,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",3,0)="Missing linked word in ""AWRD"" index"
"RTN","LEXRXC3",97,0)
 . . . . S LEXND="^TMP(""LEXRXERR"","_$J_",""AWRD"",3,""ERR"","_$$QQ(LEXTKN)_","_+LEXEX_",""LINKED"")" S @LEXND=""
"RTN","LEXRXC3",98,0)
 . . . . S ^TMP("LEXRXPRO",$J,"AWRD","ERR")=+($G(^TMP("LEXRXPRO",$J,"AWRD","ERR")))+1
"RTN","LEXRXC3",99,0)
 ;     Replace
"RTN","LEXRXC3",100,0)
 N LEXCHR,LEXCHRS,LEXCTL,LEXDATA,LEXIT,LEXNOD,LEXRT,LEXRT1,LEXRT2 D CHRS
"RTN","LEXRXC3",101,0)
 S LEXIT=0,LEXCHR="" F  S LEXCHR=$O(LEXCHRS(LEXCHR)) Q:'$L(LEXCHR)  D
"RTN","LEXRXC3",102,0)
 . S:$L(LEXCHR) ^TMP("LEXRXPRO",$J,"AWRD","REPLACE","CHR")=LEXCHR
"RTN","LEXRXC3",103,0)
 . N LEXLTKN,LEXTTKN,LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5,LEXTK,LEXIT
"RTN","LEXRXC3",104,0)
 . S (LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5)="",LEXIT=0
"RTN","LEXRXC3",105,0)
 . S LEXTK1=$C($A(LEXCHR)-1)_"~",LEXTK2=LEXCHR,LEXTK3=LEXCHR_" "
"RTN","LEXRXC3",106,0)
 . S:LEXCHR?1N LEXTK4=LEXCHR-.00000001 S:LEXCHR="." LEXTK5=.00000001
"RTN","LEXRXC3",107,0)
 . F LEXTK=LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5 D
"RTN","LEXRXC3",108,0)
 . . Q:'$L(LEXTK)  N LEXIT S LEXIT=0 S (LEXLTKN,LEXTTKN)=LEXTK
"RTN","LEXRXC3",109,0)
 . . F  S LEXLTKN=$O(^LEX(757.01,"AWRD",LEXLTKN)) D  Q:LEXIT>0
"RTN","LEXRXC3",110,0)
 . . . S:$L(LEXLTKN) ^TMP("LEXRXPRO",$J,"AWRD","REPLACE","WORD")=LEXLTKN
"RTN","LEXRXC3",111,0)
 . . . S:'$L(LEXLTKN) LEXIT=1
"RTN","LEXRXC3",112,0)
 . . . S:LEXCHR'?1N&($E(LEXLTKN,1)'=LEXCHR) LEXIT=1
"RTN","LEXRXC3",113,0)
 . . . S:LEXCHR?1N&($E(LEXLTKN,1)'?1N) LEXIT=1
"RTN","LEXRXC3",114,0)
 . . . Q:LEXIT>0
"RTN","LEXRXC3",115,0)
 . . . N LEXND
"RTN","LEXRXC3",116,0)
 . . . I $L(LEXLTKN) Q:$D(^TMP("LEXRXAWRDU",$J,LEXLTKN))
"RTN","LEXRXC3",117,0)
 . . . S:$L(LEXLTKN) ^TMP("LEXRXAWRDU",$J,LEXLTKN)=""
"RTN","LEXRXC3",118,0)
 . . . N LEXDATA,LEXND
"RTN","LEXRXC3",119,0)
 . . . I $D(LEXFUL) D
"RTN","LEXRXC3",120,0)
 . . . . N LEXNOD,LEXCTL,LEXIT,LEXND S LEXIT=0
"RTN","LEXRXC3",121,0)
 . . . . S LEXNOD="^LEX(757.01,""AWRD"","""_LEXLTKN_""")"
"RTN","LEXRXC3",122,0)
 . . . . S LEXCTL="^LEX(757.01,""AWRD"","""_LEXLTKN_""","
"RTN","LEXRXC3",123,0)
 . . . . F  S LEXNOD=$Q(@LEXNOD) D  Q:LEXIT>0
"RTN","LEXRXC3",124,0)
 . . . . . S:'$L(LEXNOD) LEXIT=1 S:LEXNOD'[LEXCTL LEXIT=1
"RTN","LEXRXC3",125,0)
 . . . . . Q:LEXIT>0  N LEXFUL
"RTN","LEXRXC3",126,0)
 . . . ;         Error:  Word in LEX and not in TMP
"RTN","LEXRXC3",127,0)
 . . . S LEXND="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXLTKN)_")"
"RTN","LEXRXC3",128,0)
 . . . I '$D(@LEXND) D
"RTN","LEXRXC3",129,0)
 . . . . N LEXND S LEXERR=+($G(LEXERR))+1
"RTN","LEXRXC3",130,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",0)=$G(^TMP("LEXRXERR",$J,"AWRD",0))+1
"RTN","LEXRXC3",131,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",7)=$G(^TMP("LEXRXERR",$J,"AWRD",7))+1
"RTN","LEXRXC3",132,0)
 . . . . S ^TMP("LEXRXERR",$J,"AWRD",7,0)="Invalid word found in ""AWRD"" index"
"RTN","LEXRXC3",133,0)
 . . . . S LEXND="^TMP(""LEXRXERR"","_$J_",""AWRD"",7,""ERR"","_$$QQ(LEXLTKN)_")" S @LEXND=""
"RTN","LEXRXC3",134,0)
 . . . . S ^TMP("LEXRXPRO",$J,"AWRD","ERR")=+($G(^TMP("LEXRXPRO",$J,"AWRD","ERR")))+1
"RTN","LEXRXC3",135,0)
 . . . S LEXND="^LEX(757.01,""AWRD"","_$$QQ(LEXLTKN)_")" K @LEXND
"RTN","LEXRXC3",136,0)
 . . S LEXIT=0 F  S LEXTTKN=$O(^TMP("LEXRXAWRD",$J,LEXTTKN)) D  Q:LEXIT>0
"RTN","LEXRXC3",137,0)
 . . . S:'$L(LEXTTKN) LEXIT=1
"RTN","LEXRXC3",138,0)
 . . . S:LEXCHR'?1N&($E(LEXTTKN,1)'=LEXCHR) LEXIT=1
"RTN","LEXRXC3",139,0)
 . . . S:LEXCHR?1N&($E(LEXTTKN,1)'?1N) LEXIT=1
"RTN","LEXRXC3",140,0)
 . . . Q:LEXIT>0
"RTN","LEXRXC3",141,0)
 . . . N LEXND,LEXNOD,LEXCTL,LEXKEY
"RTN","LEXRXC3",142,0)
 . . . S LEXNOD="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXTTKN)_")"
"RTN","LEXRXC3",143,0)
 . . . S LEXCTL="^TMP(""LEXRXAWRD"","_$J_","_$$QQ(LEXTTKN)_","
"RTN","LEXRXC3",144,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXRXC3",145,0)
 . . . . ;         Copy Index from ^TMP to ^LEX
"RTN","LEXRXC3",146,0)
 . . . . ;           ^TMP("LEXRXAWRD",$J,WORD,MCIEN,EXIEN,SPIEN)
"RTN","LEXRXC3",147,0)
 . . . . ;           ^LEX(757.01,"AWRD",WORD,MCIEN,EXIEN,SPIEN)
"RTN","LEXRXC3",148,0)
 . . . . N LEXND,LEXTKN,LEXMC,LEXEX,LEXSP,LEXTND,LEXKEY
"RTN","LEXRXC3",149,0)
 . . . . S LEXTND=$TR(LEXNOD,"""","")
"RTN","LEXRXC3",150,0)
 . . . . S LEXTKN=$P(LEXTND,",",3)
"RTN","LEXRXC3",151,0)
 . . . . S LEXMC=$P(LEXTND,",",4) Q:+LEXMC'>0
"RTN","LEXRXC3",152,0)
 . . . . S LEXEX=$P($P(LEXNOD,",",5),")",1) Q:'$L(LEXEX)
"RTN","LEXRXC3",153,0)
 . . . . S LEXSP=$P($P(LEXTND,",",6),")",1)
"RTN","LEXRXC3",154,0)
 . . . . S LEXND="^LEX(757.01,""AWRD"","_$$QQ(LEXTKN)
"RTN","LEXRXC3",155,0)
 . . . . S LEXND=LEXND_","_LEXMC_","_$$QQ(LEXEX)
"RTN","LEXRXC3",156,0)
 . . . . S:$L(LEXSP) LEXND=LEXND_","_$$QQ(LEXSP)
"RTN","LEXRXC3",157,0)
 . . . . S LEXND=LEXND_")",LEXKEY=$TR(LEXND,"""","")
"RTN","LEXRXC3",158,0)
 . . . . S @LEXND="" S:'$D(^TMP("LEXRXAWRDK",$J,LEXKEY)) LEXNDS=+($G(LEXNDS))+1
"RTN","LEXRXC3",159,0)
 . . . . S ^TMP("LEXAWRDK",$J,LEXKEY)="",^TMP("LEXRXREP",$J,"AWRD")=+($G(LEXNDS))
"RTN","LEXRXC3",160,0)
 . ;         Repeat for all characters
"RTN","LEXRXC3",161,0)
 K ^TMP("LEXRXAWRDU",$J),^TMP("LEXRXAWRDK",$J) S ^TMP("LEXRXERR",$J,"AWRD",0)=+($G(^TMP("LEXRXERR",$J,"AWRD",0)))
"RTN","LEXRXC3",162,0)
 S LEXFI="757.01",LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXC3",163,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC3",164,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC3",165,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXC3",166,0)
 S:+LEX0P3>0 $P(^LEX(757.01,0),"^",3)=LEX0P3 S:+LEX0P4>0 $P(^LEX(757.01,0),"^",4)=LEX0P4
"RTN","LEXRXC3",167,0)
 Q
"RTN","LEXRXC3",168,0)
 ;              
"RTN","LEXRXC3",169,0)
 ; Miscellaneous
"RTN","LEXRXC3",170,0)
SCT(X) ;   String Count (exact string)
"RTN","LEXRXC3",171,0)
 N LEX,LEXA,LEXE,LEXIT,LEXM,LEXN,LEXO,LEXOUT,LEXP,LEXRT,LEXRT2,LEXS,LEXT,LEXTKN
"RTN","LEXRXC3",172,0)
 S LEXS=$$UP^XLFSTR($G(X)) Q:'$L(LEXS) 0  S LEXRT="" S:$D(^LEX(757.01,"AWRD")) LEXRT="^LEX(757.01,""AWRD"","
"RTN","LEXRXC3",173,0)
 S:$D(^TMP("LEXRXAWRD",$J)) LEXRT="^TMP(""LEXRXAWRD"","_$J_"," Q:'$L(LEXRT) 0  S (LEXA,LEXN,LEXT)=0
"RTN","LEXRXC3",174,0)
 S:$L(LEXS)>1 LEXO=$E(LEXS,1,($L(LEXS)-1))_$C(($A($E(LEXS,$L(LEXS)))-1))_"~"
"RTN","LEXRXC3",175,0)
 S:$L(LEXS)=1 LEXO=$C(($A(LEXS)-1))_"~" S LEXIT=0
"RTN","LEXRXC3",176,0)
 F  S LEXO=$O(@(LEXRT_""""_LEXO_""")")) D  Q:LEXIT>0
"RTN","LEXRXC3",177,0)
 . S:'$L(LEXO) LEXIT=1 S:$E(LEXO,1,$L(LEXS))'=LEXS LEXIT=1
"RTN","LEXRXC3",178,0)
 . Q:LEXIT>0  N LEXM S LEXM=0 F  S LEXM=$O(@(LEXRT_""""_LEXO_""","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXRXC3",179,0)
 . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_""""_LEXO_""","_LEXM_","
"RTN","LEXRXC3",180,0)
 . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1,LEXA=LEXA+1
"RTN","LEXRXC3",181,0)
 I $TR(LEXS,".","")?1N.N,$L(LEXS,".")'>2  I +LEXS=LEXS D
"RTN","LEXRXC3",182,0)
 . N LEXFC S LEXFC=$E(LEXS,1) S:$E(LEXS,1)?1N LEXO=LEXS-.000000001
"RTN","LEXRXC3",183,0)
 . S:$E(LEXS,1)="." LEXO=.000000001 S LEXIT=0
"RTN","LEXRXC3",184,0)
 . F  S LEXO=$O(@(LEXRT_+LEXO_")")) D  Q:LEXIT>0  Q:'$L(LEXO)
"RTN","LEXRXC3",185,0)
 . . S:LEXFC?1N&($E(LEXO,1)'?1N) LEXIT=1
"RTN","LEXRXC3",186,0)
 . . S:LEXFC?1P&($E(LEXO,1)'?1P) LEXIT=1 Q:LEXIT>0
"RTN","LEXRXC3",187,0)
 . . Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXS))'=LEXS  N LEXM S LEXM=0
"RTN","LEXRXC3",188,0)
 . . F  S LEXM=$O(@(LEXRT_+LEXO_","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXRXC3",189,0)
 . . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_+LEXO_","_LEXM_","
"RTN","LEXRXC3",190,0)
 . . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1,LEXN=LEXN+1
"RTN","LEXRXC3",191,0)
 S X=LEXT
"RTN","LEXRXC3",192,0)
 Q X
"RTN","LEXRXC3",193,0)
QQ(X) ;   Set Quotes
"RTN","LEXRXC3",194,0)
 N LEXS,LEXT S LEXS=$TR($G(X),"""",""),LEXT=0
"RTN","LEXRXC3",195,0)
 S:$TR(LEXS,".","")'?1N.N LEXT=1 I $TR(LEXS,".","")?1N.N S:$L(+LEXS)'=$L(LEXS) LEXT=1
"RTN","LEXRXC3",196,0)
 S X=LEXS S:LEXT=1 X=""""_LEXS_""""
"RTN","LEXRXC3",197,0)
 Q X
"RTN","LEXRXC3",198,0)
CHRS ;   Get Characters - Sets LEXCHRS
"RTN","LEXRXC3",199,0)
 N LEXCHR,LEXRT,LEXRT1,LEXRT2,LEXTK K LEXCHRS S LEXRT1="^LEX(757.01,""AWRD"","
"RTN","LEXRXC3",200,0)
 S LEXRT2="^TMP(""LEXRXAWRD"","_$J_"," F LEXRT=LEXRT1,LEXRT2 D
"RTN","LEXRXC3",201,0)
 . N LEXTK S LEXTK="#" F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXRXC3",202,0)
 . . N LEXCHR S LEXCHR=$E($TR(LEXTK," ",""),1) S LEXTK=$E(LEXTK,1)_"~"
"RTN","LEXRXC3",203,0)
 . . S:$L(LEXCHR) LEXCHRS(LEXCHR)=""
"RTN","LEXRXC3",204,0)
 Q
"RTN","LEXRXC3",205,0)
CLR ;   Clear
"RTN","LEXRXC3",206,0)
 Q
"RTN","LEXRXC3",207,0)
KGBL ;   Kill Global Arrays
"RTN","LEXRXC3",208,0)
 K:'$D(LEXTEST) ^TMP("LEXRXASL",$J),^TMP("LEXRXASLU",$J),^TMP("LEXRXAWRD",$J),^TMP("LEXRXAWRDU",$J)
"RTN","LEXRXC3",209,0)
 K:'$D(LEXTEST) ^TMP("LEXRXPRO",$J),^TMP("LEXRXERR",$J),^TMP("LEXRXREP",$J),^TMP("LEXTKN",$J),^TMP("LEXRXAWRDK",$J)
"RTN","LEXRXC3",210,0)
 K:+($G(LEXRXTMP))'>0&('$D(LEXTEST)) ^TMP("LEXRX",$J)
"RTN","LEXRXC3",211,0)
 Q
"RTN","LEXRXC3",212,0)
ERRS ;   Display Errors
"RTN","LEXRXC3",213,0)
 N LEXEC,LEXEN,LEXET,LEXIX,LEXTC,LEXTT S (LEXTC,LEXTT)=0 F LEXIX="AWRD","ASL" D
"RTN","LEXRXC3",214,0)
 . N LEXEN,LEXET,LEXEC S (LEXEN,LEXET,LEXEC)=0
"RTN","LEXRXC3",215,0)
 . F  S LEXEN=$O(^TMP("LEXRXERR",$J,LEXIX,LEXEN)) Q:+LEXEN'>0  D
"RTN","LEXRXC3",216,0)
 . . S LEXET=LEXET+$G(^TMP("LEXRXERR",$J,LEXIX,LEXEN))
"RTN","LEXRXC3",217,0)
 . S:+LEXET>0 LEXTC=LEXTC+1 Q:+LEXET'>0  W !,"Errors in Index """,LEXIX,"""",!
"RTN","LEXRXC3",218,0)
 . S LEXEN=0 F  S LEXEN=$O(^TMP("LEXRXERR",$J,LEXIX,LEXEN)) Q:+LEXEN'>0  D
"RTN","LEXRXC3",219,0)
 . . Q:$G(^TMP("LEXRXERR",$J,LEXIX,LEXEN))'>0  S LEXEC=LEXEC+1
"RTN","LEXRXC3",220,0)
 . . W !,$J($G(^TMP("LEXRXERR",$J,LEXIX,LEXEN)),10)," "
"RTN","LEXRXC3",221,0)
 . . W $G(^TMP("LEXRXERR",$J,LEXIX,LEXEN,0)) S LEXTT=LEXTT+$G(^TMP("LEXRXERR",$J,LEXIX,LEXEN))
"RTN","LEXRXC3",222,0)
 . W:LEXEC>1&(LEXET>0) !,$J(LEXET,10)," """,LEXIX,""" Index Total"
"RTN","LEXRXC3",223,0)
 W:LEXTC>1&(LEXTT>0) !,$J(LEXTT,10)," Total Errors"
"RTN","LEXRXC3",224,0)
 Q
"RTN","LEXRXC3",225,0)
LEX ; Lexicon Counts
"RTN","LEXRXC3",226,0)
 N LEXSTR,LEXSTN,LEXTKN,LEXTKT,LEXNN,LEXNC,LEXTNT
"RTN","LEXRXC3",227,0)
 S LEXTKN="" F  S LEXTKN=$O(^LEX(757.01,"AWRD",LEXTKN)) Q:'$L(LEXTKN)  S LEXTKT=+($G(LEXTKT))+1
"RTN","LEXRXC3",228,0)
 S LEXNN="^LEX(757.01,""AWRD"")",LEXNC="^LEX(757.01,""AWRD"","
"RTN","LEXRXC3",229,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  S LEXTNT=+($G(LEXTNT))+1
"RTN","LEXRXC3",230,0)
 S LEXTKN="" F  S LEXTKN=$O(^LEX(757.01,"ASL",LEXTKN)) Q:'$L(LEXTKN)  S LEXSTR=+($G(LEXSTR))+1
"RTN","LEXRXC3",231,0)
 S LEXNN="^LEX(757.01,""ASL"")",LEXNC="^LEX(757.01,""ASL"","
"RTN","LEXRXC3",232,0)
 F  S LEXNN=$Q(@LEXNN) Q:'$L(LEXNN)!(LEXNN'[LEXNC)  S LEXSTN=+($G(LEXSTN))+1
"RTN","LEXRXC3",233,0)
 W:(+($G(LEXTKT))+($G(LEXTNT))+($G(LEXSTR))>0) !
"RTN","LEXRXC3",234,0)
 W:'$D(ZTQUEUED)&(+($G(LEXTKT))>0) !,"AWRD Words:  ",$J(+($G(LEXTKT)),7)
"RTN","LEXRXC3",235,0)
 w:'$D(ZTQUEUED)&(+($G(LEXTNT))>0) !,"AWRD Nodes:  ",$J(+($G(LEXTNT)),7)
"RTN","LEXRXC3",236,0)
 W:'$D(ZTQUEUED)&(+($G(LEXSTR))>0) !,"ASL Strings: ",$J(+($G(LEXSTR)),7)
"RTN","LEXRXC3",237,0)
 Q
"RTN","LEXRXC4")
0^10^B58726823
"RTN","LEXRXC4",1,0)
LEXRXC4 ;ISL/KER - Re-Index 757.01 ASL ;12/19/2014
"RTN","LEXRXC4",2,0)
 ;;2.0;LEXICON UTILITY;**81,86**;Sep 23, 1996;Build 1
"RTN","LEXRXC4",3,0)
 ;               
"RTN","LEXRXC4",4,0)
 ; Global Variables
"RTN","LEXRXC4",5,0)
 ;    ^TMP("LEXRXASL")    SACC 2.3.2.5.1
"RTN","LEXRXC4",6,0)
 ;    ^TMP("LEXRXASLU")   SACC 2.3.2.5.1
"RTN","LEXRXC4",7,0)
 ;    ^TMP("LEXRXAWRD")   SACC 2.3.2.5.1
"RTN","LEXRXC4",8,0)
 ;    ^TMP("LEXRXERR")    SACC 2.3.2.5.1
"RTN","LEXRXC4",9,0)
 ;    ^TMP("LEXRXPRO")    SACC 2.3.2.5.1
"RTN","LEXRXC4",10,0)
 ;    ^TMP("LEXRXREP")    SACC 2.3.2.5.1
"RTN","LEXRXC4",11,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXRXC4",12,0)
 ;               
"RTN","LEXRXC4",13,0)
 ; External References
"RTN","LEXRXC4",14,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXC4",15,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXC4",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXRXC4",17,0)
 ;               
"RTN","LEXRXC4",18,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXC4",19,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXC4",20,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXC4",21,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXC4",22,0)
 ;               
"RTN","LEXRXC4",23,0)
 ;   The AWRD cross-references is used to create the ASL
"RTN","LEXRXC4",24,0)
 ;   cross-reference, hence the AWRD cross-reference must
"RTN","LEXRXC4",25,0)
 ;   be repaired/re-indexed before ASL.
"RTN","LEXRXC4",26,0)
 ;               
"RTN","LEXRXC4",27,0)
 Q
"RTN","LEXRXC4",28,0)
EN ; Main Entry Point
"RTN","LEXRXC4",29,0)
R75701 ; Repair file 757.01
"RTN","LEXRXC4",30,0)
 D:'$D(^TMP("LEXRXAWRD",$J)) RAWRD^LEXRXC3
"RTN","LEXRXC4",31,0)
 D RASL,KGBL
"RTN","LEXRXC4",32,0)
 Q
"RTN","LEXRXC4",33,0)
 ;
"RTN","LEXRXC4",34,0)
RASL ;   Index    ^LEX(757.01,"ASL",FRAG,FREQ)
"RTN","LEXRXC4",35,0)
 N LEXA,LEXBEG,LEXC,LEXCHR,LEXCHRS,LEXCTL,LEXDIF,LEXE,LEXELP,LEXEND,LEXERR,LEXF,LEXFC,LEXFI,LEXFIR,LEXIDX,LEXIDXT,LEXIT
"RTN","LEXRXC4",36,0)
 N LEXLTKN,LEXM,LEXN,LEXND,LEXNDS,LEXNOD,LEXO,LEXP,LEXPSCT,LEXRT,LEXRT1,LEXRT2,LEXS,LEXSCT,LEXSTR,LEXT,LEXTC
"RTN","LEXRXC4",37,0)
 N LEXTK,LEXTK1,LEXTK2,LEXTK3,LEXTKN,LEXTNG,LEXTTKN,LEXVAL S LEXFI="757.01" N LEXTC
"RTN","LEXRXC4",38,0)
 K ^TMP("LEXRXPRO",$J,"ASL"),^TMP("LEXRXERR",$J,"ASL"),^TMP("LEXRXASL",$J),^TMP("LEXRXASLU",$J)
"RTN","LEXRXC4",39,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.01 ""ASL""") Q:LEXTC=1
"RTN","LEXRXC4",40,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.01,LEXIDX="ASL",LEXIDXT="^LEX(757.01,""ASL"",STR,FREQ)"
"RTN","LEXRXC4",41,0)
 ;     Build
"RTN","LEXRXC4",42,0)
 S LEXRT="" S:$D(^LEX(757.01,"AWRD")) LEXRT="^LEX(757.01,""AWRD"","
"RTN","LEXRXC4",43,0)
 S:$D(^TMP("LEXRXAWRD",$J)) LEXRT="^TMP(""LEXRXAWRD"","_$J_"," Q:'$L(LEXRT)
"RTN","LEXRXC4",44,0)
 ;       For each Word
"RTN","LEXRXC4",45,0)
 S (LEXFIR,LEXFC,LEXTK)=""
"RTN","LEXRXC4",46,0)
 F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXRXC4",47,0)
 . S ^TMP("LEXRXPRO",$J,"ASL","BUILD","TKN")=LEXTK
"RTN","LEXRXC4",48,0)
 . N LEXP,LEXS,LEXC,LEXF,LEXTKN S LEXTKN=LEXTK
"RTN","LEXRXC4",49,0)
 . F  Q:$E(LEXTKN,1)'=" "  S LEXTKN=$E(LEXTKN,2,$L(LEXTKN))
"RTN","LEXRXC4",50,0)
 . F  Q:$E(LEXTKN,$L(LEXTKN))'=" "  S LEXTKN=$E(LEXTKN,1,($L(LEXTKN)-1))
"RTN","LEXRXC4",51,0)
 . S LEXF=$E(LEXTKN,1)
"RTN","LEXRXC4",52,0)
 . S LEXFIR=LEXF S:LEXFC'[LEXF LEXFC=LEXFC_LEXF
"RTN","LEXRXC4",53,0)
 . ;       Count the occurrences of each string
"RTN","LEXRXC4",54,0)
 . F LEXP=1:1:$L(LEXTKN)  S LEXS=$$UP^XLFSTR($E(LEXTKN,1,LEXP)) D
"RTN","LEXRXC4",55,0)
 . . Q:'$L($G(LEXS))  I '$D(^TMP("LEXRXASLU",$J,LEXS)) D
"RTN","LEXRXC4",56,0)
 . . . N LEXE,LEXM,LEXO,LEXT,LEXA,LEXN S (LEXA,LEXN,LEXT)=0
"RTN","LEXRXC4",57,0)
 . . . S LEXT=$$SCT^LEXRXC3(LEXS) I +($G(LEXT))>0 D
"RTN","LEXRXC4",58,0)
 . . . . K ^TMP("LEXRXASL",$J,LEXS)
"RTN","LEXRXC4",59,0)
 . . . . S ^TMP("LEXRXASL",$J,LEXS,LEXT)=""
"RTN","LEXRXC4",60,0)
 . . S ^TMP("LEXRXASLU",$J,LEXS)=""
"RTN","LEXRXC4",61,0)
 ;     Replace
"RTN","LEXRXC4",62,0)
 N LEXCHR,LEXCHRS S LEXERR=$G(LEXERR) D CHRS,ERRCHK
"RTN","LEXRXC4",63,0)
 S LEXCHR="" F  S LEXCHR=$O(LEXCHRS(LEXCHR)) Q:'$L(LEXCHR)  D
"RTN","LEXRXC4",64,0)
 . S ^TMP("LEXRXPRO",$J,"ASL","REPLACE","CHR")=LEXCHR
"RTN","LEXRXC4",65,0)
 . ;       For strings beginning with character
"RTN","LEXRXC4",66,0)
 . N LEXLTKN,LEXTTKN,LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5,LEXTK,LEXIT
"RTN","LEXRXC4",67,0)
 . ;         Delete strings from the ^LEX global
"RTN","LEXRXC4",68,0)
 . S (LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5)=""
"RTN","LEXRXC4",69,0)
 . S LEXTK1=$C($A(LEXCHR)-1)_"~",LEXTK2=LEXCHR,LEXTK3=LEXCHR_" "
"RTN","LEXRXC4",70,0)
 . S:LEXCHR?1N LEXTK4=LEXCHR-.00000001
"RTN","LEXRXC4",71,0)
 . S:LEXCHR="." LEXTK5=.00000001
"RTN","LEXRXC4",72,0)
 . F LEXTK=LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5 D
"RTN","LEXRXC4",73,0)
 . . Q:'$L(LEXTK)  S (LEXLTKN,LEXTTKN)=LEXTK S LEXIT=0
"RTN","LEXRXC4",74,0)
 . . F  S LEXLTKN=$O(^LEX(757.01,"ASL",LEXLTKN)) D  Q:LEXIT>0
"RTN","LEXRXC4",75,0)
 . . . S:'$L(LEXLTKN) LEXIT=1 S:$E(LEXLTKN,1)'=LEXCHR LEXIT=1
"RTN","LEXRXC4",76,0)
 . . . Q:LEXIT>0  N LEXNOD,LEXCTL
"RTN","LEXRXC4",77,0)
 . . . S LEXNOD="^LEX(757.01,""ASL"","_$$QQ(LEXLTKN)_")"
"RTN","LEXRXC4",78,0)
 . . . S LEXCTL="^LEX(757.01,""ASL"","_$$QQ(LEXLTKN)_","
"RTN","LEXRXC4",79,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXRXC4",80,0)
 . . . . N LEXTMP,LEXND S LEXTMP=$TR(LEXLTKN,"""","")
"RTN","LEXRXC4",81,0)
 . . . . S LEXND="^LEX(757.01,""ASL"","_$$QQ(LEXLTKN)_")" K @LEXND
"RTN","LEXRXC4",82,0)
 . ;         Add strings to the ^LEX global
"RTN","LEXRXC4",83,0)
 . F LEXTTKN=LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5 D
"RTN","LEXRXC4",84,0)
 . . Q:'$L(LEXTTKN)  N LEXC,LEXIT S LEXIT=0,LEXC=LEXTTKN
"RTN","LEXRXC4",85,0)
 . . F  S LEXTTKN=$O(^TMP("LEXRXASL",$J,LEXTTKN)) Q:'$L(LEXTTKN)  D  Q:LEXIT>0
"RTN","LEXRXC4",86,0)
 . . . Q:$E(LEXTTKN,1)'=LEXCHR
"RTN","LEXRXC4",87,0)
 . . . N LEXNOD,LEXCTL S LEXNOD="^TMP(""LEXRXASL"","_$J_","_$$QQ(LEXTTKN)_")"
"RTN","LEXRXC4",88,0)
 . . . S LEXCTL="^TMP(""LEXRXASL"","_$J_","_$$QQ(LEXTTKN)_","
"RTN","LEXRXC4",89,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXRXC4",90,0)
 . . . . N LEXSTR,LEXVAL,LEXND,LEXTMP S LEXSTR=$P($P(LEXNOD,(","_$J_","),2),",",1)
"RTN","LEXRXC4",91,0)
 . . . . S LEXVAL=+$P($P(LEXNOD,(","_$J_","),2),",",2) Q:'$L(LEXSTR)  Q:+LEXVAL'>0
"RTN","LEXRXC4",92,0)
 . . . . S LEXTMP=$TR(LEXSTR,"""",""),LEXND="^LEX(757.01,""ASL"","_$$QQ(LEXTMP)_")" K @LEXND
"RTN","LEXRXC4",93,0)
 . . . . S LEXND="^LEX(757.01,""ASL"","_$$QQ(LEXTMP)_","_LEXVAL_")" S @LEXND=""
"RTN","LEXRXC4",94,0)
 . . . . S ^TMP("LEXRXREP",$J,"ASL")=+($G(^TMP("LEXRXREP",$J,"ASL")))+1
"RTN","LEXRXC4",95,0)
 . . . . S LEXNDS=+($G(LEXNDS))+1
"RTN","LEXRXC4",96,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"")
"RTN","LEXRXC4",97,0)
 I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,$G(LEXFI),?19,$G(LEXIDX),?30,$G(LEXIDXT)
"RTN","LEXRXC4",98,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXC4",99,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXC4",100,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP),KGBL
"RTN","LEXRXC4",101,0)
 Q
"RTN","LEXRXC4",102,0)
 ;              
"RTN","LEXRXC4",103,0)
 ; Miscellaneous
"RTN","LEXRXC4",104,0)
ERRCHK ;   Check for Errors - Sets LEXERR
"RTN","LEXRXC4",105,0)
 K ^TMP("LEXRXERR",$J,"ASL")
"RTN","LEXRXC4",106,0)
 N LEXCTL,LEXCHRS,LEXN1,LEXN2,LEXND,LEXNOD,LEXS,LEXT S LEXERR=0 D CHRS
"RTN","LEXRXC4",107,0)
 S LEXNOD="^TMP(""LEXRXASL"","_$J_")",LEXCTL="^TMP(""LEXRXASL"","_$J_","
"RTN","LEXRXC4",108,0)
 F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXRXC4",109,0)
 . N LEXS,LEXT,LEXND,LEXN1,LEXN2,LEXTND S LEXTND=$TR(LEXNOD,"""","")
"RTN","LEXRXC4",110,0)
 . S LEXS=$P(LEXTND,",",3) Q:'$L(LEXS)
"RTN","LEXRXC4",111,0)
 . S LEXT=+($P(LEXTND,",",4)) Q:+LEXT'>0
"RTN","LEXRXC4",112,0)
 . S LEXN1="^LEX(757.01,""ASL"","_$$QQ(LEXS)_")"
"RTN","LEXRXC4",113,0)
 . S LEXN2="^LEX(757.01,""ASL"","_$$QQ(LEXS)_","_LEXT_")"
"RTN","LEXRXC4",114,0)
 . I '$D(@LEXN1) D
"RTN","LEXRXC4",115,0)
 . . S LEXERR=+($G(LEXERR))+1
"RTN","LEXRXC4",116,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",0)=$G(^TMP("LEXRXERR",$J,"ASL",0))+1
"RTN","LEXRXC4",117,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",1)=$G(^TMP("LEXRXERR",$J,"ASL",1))+1
"RTN","LEXRXC4",118,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",1,0)="String missing in ""ASL"" index"
"RTN","LEXRXC4",119,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",1,"ERR",LEXS,LEXT)=""
"RTN","LEXRXC4",120,0)
 . . S ^TMP("LEXRXPRO",$J,"ASL","ERR")=+($G(^TMP("LEXRXPRO",$J,"ASL","ERR")))+1
"RTN","LEXRXC4",121,0)
 . I $D(@LEXN2),'$D(@LEXN2) D
"RTN","LEXRXC4",122,0)
 . . S LEXERR=+($G(LEXERR))+1
"RTN","LEXRXC4",123,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",0)=$G(^TMP("LEXRXERR",$J,"ASL",0))+1
"RTN","LEXRXC4",124,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",2)=$G(^TMP("LEXRXERR",$J,"ASL",2))+1
"RTN","LEXRXC4",125,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",2,0)="Value missing in ""ASL"" index"
"RTN","LEXRXC4",126,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",2,"ERR",LEXS,LEXT)=""
"RTN","LEXRXC4",127,0)
 . . S ^TMP("LEXRXPRO",$J,"ASL","ERR")=+($G(^TMP("LEXRXPRO",$J,"ASL","ERR")))+1
"RTN","LEXRXC4",128,0)
 S LEXNOD="^LEX(757.01,""ASL"")",LEXCTL="^LEX(757.01,""ASL"","
"RTN","LEXRXC4",129,0)
 F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXRXC4",130,0)
 . N LEXS,LEXT,LEXN1,LEXN2,LEXTND S LEXTND=$TR(LEXNOD,"""","")
"RTN","LEXRXC4",131,0)
 . S LEXS=$P(LEXTND,",",3) Q:'$L(LEXS)
"RTN","LEXRXC4",132,0)
 . S LEXT=+($P(LEXTND,",",4)) Q:+LEXT'>0
"RTN","LEXRXC4",133,0)
 . S LEXN1="^TMP(""LEXRXASL"","_$J_","_$$QQ(LEXS)_")"
"RTN","LEXRXC4",134,0)
 . S LEXN2="^TMP(""LEXRXASL"","_$J_","_$$QQ(LEXS)_","_LEXT_")"
"RTN","LEXRXC4",135,0)
 . I '$D(@LEXN1) D
"RTN","LEXRXC4",136,0)
 . . S LEXERR=+($G(LEXERR))+1
"RTN","LEXRXC4",137,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",0)=$G(^TMP("LEXRXERR",$J,"ASL",0))+1
"RTN","LEXRXC4",138,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",3)=$G(^TMP("LEXRXERR",$J,"ASL",3))+1
"RTN","LEXRXC4",139,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",3,0)="Invalid String found in ""ASL"" index"
"RTN","LEXRXC4",140,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",3,"ERR",LEXS,LEXT)=""
"RTN","LEXRXC4",141,0)
 . . S ^TMP("LEXRXPRO",$J,"ASL","ERR")=+($G(^TMP("LEXRXPRO",$J,"ASL","ERR")))+1
"RTN","LEXRXC4",142,0)
 . I $D(@LEXN1),'$D(@LEXN2) D
"RTN","LEXRXC4",143,0)
 . . S LEXERR=+($G(LEXERR))+1
"RTN","LEXRXC4",144,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",0)=$G(^TMP("LEXRXERR",$J,"ASL",0))+1
"RTN","LEXRXC4",145,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",0)=$G(^TMP("LEXRXERR",$J,"ASL",0))+1
"RTN","LEXRXC4",146,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",4)=$G(^TMP("LEXRXERR",$J,"ASL",4))+1
"RTN","LEXRXC4",147,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",4,0)="Invalid Value found in ""ASL"" index"
"RTN","LEXRXC4",148,0)
 . . S ^TMP("LEXRXERR",$J,"ASL",4,"ERR",LEXS,LEXT)=""
"RTN","LEXRXC4",149,0)
 . . S ^TMP("LEXRXPRO",$J,"ASL","ERR")=+($G(^TMP("LEXRXPRO",$J,"ASL","ERR")))+1
"RTN","LEXRXC4",150,0)
 S ^TMP("LEXRXERR",$J,"ASL",0)=+($G(^TMP("LEXRXERR",$J,"ASL",0)))
"RTN","LEXRXC4",151,0)
 Q
"RTN","LEXRXC4",152,0)
QQ(X) ;   Set Quotes
"RTN","LEXRXC4",153,0)
 N LEXS,LEXT S LEXS=$TR($G(X),"""",""),LEXT=0
"RTN","LEXRXC4",154,0)
 S:$TR(LEXS,".","")'?1N.N LEXT=1 I $TR(LEXS,".","")?1N.N S:$L(+LEXS)'=$L(LEXS) LEXT=1
"RTN","LEXRXC4",155,0)
 S X=LEXS S:LEXT=1 X=""""_LEXS_""""
"RTN","LEXRXC4",156,0)
 Q X
"RTN","LEXRXC4",157,0)
CHRS ;   Get Characters - Sets LEXCHRS
"RTN","LEXRXC4",158,0)
 N LEXCHR,LEXRT,LEXRT1,LEXRT2,LEXTK K LEXCHRS S LEXRT1="^LEX(757.01,""AWRD"","
"RTN","LEXRXC4",159,0)
 S LEXRT2="^TMP(""LEXRXAWRD"","_$J_"," F LEXRT=LEXRT1,LEXRT2 D
"RTN","LEXRXC4",160,0)
 . N LEXTK S LEXTK="#" F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXRXC4",161,0)
 . . N LEXCHR S LEXCHR=$E($TR(LEXTK," ",""),1) S LEXTK=$E(LEXTK,1)_"~"
"RTN","LEXRXC4",162,0)
 . . S:$L(LEXCHR) LEXCHRS(LEXCHR)=""
"RTN","LEXRXC4",163,0)
 Q
"RTN","LEXRXC4",164,0)
CLR ;   Clear
"RTN","LEXRXC4",165,0)
 Q
"RTN","LEXRXC4",166,0)
KGBL ;   Kill Global Arrays
"RTN","LEXRXC4",167,0)
 K:'$D(LEXTEST) ^TMP("LEXRXASL",$J),^TMP("LEXRXASLU",$J),^TMP("LEXRXAWRD",$J),^TMP("LEXTKN",$J)
"RTN","LEXRXC4",168,0)
 K:'$D(LEXTEST) ^TMP("LEXRXPRO",$J),^TMP("LEXRXERR",$J),^TMP("LEXRXREP",$J)
"RTN","LEXRXC4",169,0)
 K:+($G(LEXRXTMP))'>0 ^TMP("LEXRX",$J) N LEXTEST,LEXRXTMP
"RTN","LEXRXC4",170,0)
 Q
"RTN","LEXRXD")
0^11^B77578337
"RTN","LEXRXD",1,0)
LEXRXD ;ISL/KER - Re-Index 757.02 B/ACODE/ACT ;12/19/2014
"RTN","LEXRXD",2,0)
 ;;2.0;LEXICON UTILITY;**81,80,86**;Sep 23, 1996;Build 1
"RTN","LEXRXD",3,0)
 ;               
"RTN","LEXRXD",4,0)
 ; Global Variables
"RTN","LEXRXD",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXD",6,0)
 ;    ^LEX(757.02)        SACC 1.3
"RTN","LEXRXD",7,0)
 ;    ^TMP("LEXRX")       SACC 2.3.2.5.1
"RTN","LEXRXD",8,0)
 ;               
"RTN","LEXRXD",9,0)
 ; External References
"RTN","LEXRXD",10,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXD",11,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXD",12,0)
 ;    FILE^DID            ICR   2052
"RTN","LEXRXD",13,0)
 ;    IX1^DIK             ICR  10013
"RTN","LEXRXD",14,0)
 ;    ^DIM                ICR  10016
"RTN","LEXRXD",15,0)
 ;               
"RTN","LEXRXD",16,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXD",17,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXD",18,0)
 ;     LEXSET     Re-Index flag   NEWed/KILLed by LEXRXXT
"RTN","LEXRXD",19,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXD",20,0)
 ;     LEXQ       Quiet flat      NEWed/KILLed by LEXRXXT2
"RTN","LEXRXD",21,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXD",22,0)
 ;               
"RTN","LEXRXD",23,0)
 Q
"RTN","LEXRXD",24,0)
EN ; Main Entry Point
"RTN","LEXRXD",25,0)
R75702 ; Repair file 757.02
"RTN","LEXRXD",26,0)
 D RB,RACODE,RACT,R75702^LEXRXD2,R75702^LEXRXD3,R75702^LEXRXD4
"RTN","LEXRXD",27,0)
 D:+($G(^TMP("LEXRX",$J,"ERR",757.02)))>0 SET
"RTN","LEXRXD",28,0)
 Q
"RTN","LEXRXD",29,0)
RB ;   Index    ^LEX(757.02,"B",EXP,IEN) 
"RTN","LEXRXD",30,0)
 ;            ^LEX(757.02,IEN,4,"B",EFF,IEN2)
"RTN","LEXRXD",31,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXED,LEXELP,LEXEND,LEXERR,LEXEXP,LEXFI,LEXIDX,LEXIDXT,LEXIDST,LEXIEN,LEXMC,LEXNDS,LEXNDSS,LEXOK,LEXS,LEXSER,LEXSTR
"RTN","LEXRXD",32,0)
 S LEXFI="757.02"
"RTN","LEXRXD",33,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""B""") Q:LEXTC=1
"RTN","LEXRXD",34,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXNDSS,LEXERR,LEXSER)=0,LEXSTR="",LEXFI="757.02",LEXIDX="B",LEXIDXT="^LEX(757.02,""B"",EXP,IEN)"
"RTN","LEXRXD",35,0)
 S LEXIDST="^LEX(757.02,IEN,4,""B"",EFF,IEN2)" F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD",36,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",37,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXEXP S LEXEXP=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1)
"RTN","LEXRXD",38,0)
 . . S LEXOK=0 S:LEXEXP=LEXSTR LEXOK=1
"RTN","LEXRXD",39,0)
 . . I 'LEXOK  D
"RTN","LEXRXD",40,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)
"RTN","LEXRXD",41,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD",42,0)
 . . S:$L(LEXEXP) ^LEX(LEXFI,LEXIDX,LEXEXP,LEXIEN)=""
"RTN","LEXRXD",43,0)
 . . I $D(^LEX(LEXFI,LEXIEN,4)) D
"RTN","LEXRXD",44,0)
 . . . N LEXSTR S LEXSTR="" F  S LEXSTR=$O(^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD",45,0)
 . . . . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXD",46,0)
 . . . . . S LEXNDSS=+($G(LEXNDSS))+1 N LEXOK,LEXED S LEXED=$P($G(^LEX(LEXFI,LEXIEN,4,LEXS,0)),"^",1)
"RTN","LEXRXD",47,0)
 . . . . . S LEXOK=0 S:LEXED=LEXSTR LEXOK=1
"RTN","LEXRXD",48,0)
 . . . . . I 'LEXOK D
"RTN","LEXRXD",49,0)
 . . . . . . S LEXSER=LEXSER+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXSTR,LEXS)
"RTN","LEXRXD",50,0)
 . . . . . . I '$D(ZTQUEUED) W !,?10,757.28,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN,"/",LEXS
"RTN","LEXRXD",51,0)
 . . . . . S:$L(LEXED) ^LEX(LEXFI,LEXIEN,4,LEXIDX,LEXED,LEXS)=""
"RTN","LEXRXD",52,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",53,0)
 . N DA,X S X=$P($G(^LEX(LEXFI,LEXIEN,0)),"^",1) I $L(X) D
"RTN","LEXRXD",54,0)
 . . S DA=LEXIEN
"RTN","LEXRXD",55,0)
 . . I '$D(^LEX(LEXFI,LEXIDX,X,DA)) D
"RTN","LEXRXD",56,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",X,?58,"  ",DA
"RTN","LEXRXD",57,0)
 . . S:$L(X) ^LEX(LEXFI,LEXIDX,X,DA)=""
"RTN","LEXRXD",58,0)
 . I $D(^LEX(LEXFI,LEXIEN,4)) D
"RTN","LEXRXD",59,0)
 . . N LEXS S LEXS=0 F  S LEXS=$O(^LEX(LEXFI,LEXIEN,4,LEXS)) Q:+LEXS'>0  D
"RTN","LEXRXD",60,0)
 . . . N DA,X S DA(1)=LEXIEN,DA=LEXS,X=$P($G(^LEX(LEXFI,DA(1),4,DA,0)),"^",1) I $L(X) D
"RTN","LEXRXD",61,0)
 . . . . I '$D(^LEX(LEXFI,DA(1),4,LEXIDX,X,DA)) D
"RTN","LEXRXD",62,0)
 . . . . . S LEXSER=LEXSER+1 I '$D(ZTQUEUED) W !,?10,757.28,?19,LEXIDX,?30,"Missing ",X,?58,"  ",DA(1),"/",DA
"RTN","LEXRXD",63,0)
 . . . . S:$L(X) ^LEX(LEXFI,DA(1),4,LEXIDX,X,DA)=""
"RTN","LEXRXD",64,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD",65,0)
 S LEXSER=$S(+LEXSER>0:LEXSER,1:"") I '$D(ZTQUEUED) W !,$J(LEXSER,5),?10,757.28,?19,LEXIDX,?30,LEXIDST
"RTN","LEXRXD",66,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD",67,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD",68,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD",69,0)
 D REP^LEXRXXS(LEXFI,757.28,LEXIDX,LEXNDSS,LEXSER,LEXIDST)
"RTN","LEXRXD",70,0)
 Q
"RTN","LEXRXD",71,0)
RACODE ;   Index    ^LEX(757.02,"ACODE",CODE,IEN) 
"RTN","LEXRXD",72,0)
 N DA,DIK,LEXBEG,LEXDF,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD",73,0)
 S LEXFI="757.02"
"RTN","LEXRXD",74,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""ACODE""") Q:LEXTC=1
"RTN","LEXRXD",75,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.02,LEXIDX="ACODE",LEXIDXT="^LEX(757.02,""ACODE"",CODE,IEN)"
"RTN","LEXRXD",76,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD",77,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",78,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXDF,LEXSO S LEXDF=+$P($G(^LEX(757.02,LEXIEN,0)),U,6)
"RTN","LEXRXD",79,0)
 . . S LEXSO=$P($G(^LEX(757.02,LEXIEN,0)),U,2)
"RTN","LEXRXD",80,0)
 . . K:'$D(LEXTEST)&(+LEXDF>0) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) Q:+LEXDF>0
"RTN","LEXRXD",81,0)
 . . S LEXOK=0 S:(LEXSO_" ")=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXD",82,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:+LEXDF'>0&($L(LEXSO)) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXIEN)=""
"RTN","LEXRXD",83,0)
 . . . I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD",84,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",85,0)
 . Q:+($P($G(^LEX(LEXFI,LEXIEN,0)),"^",6))>0
"RTN","LEXRXD",86,0)
 . N DA,X S DA=LEXIEN,X=$P($G(^LEX(LEXFI,DA,0)),"^",2) Q:'$L(X)
"RTN","LEXRXD",87,0)
 . I '$D(^LEX(LEXFI,LEXIDX,(X_" "),DA)) D
"RTN","LEXRXD",88,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",X,?58,"  ",DA
"RTN","LEXRXD",89,0)
 . S ^LEX(LEXFI,LEXIDX,(X_" "),DA)=""
"RTN","LEXRXD",90,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD",91,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD",92,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD",93,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD",94,0)
 Q
"RTN","LEXRXD",95,0)
RACT ;   Index    ^LEX(757.02,"ACT",CODE,STA,DATE,IEN,HIS)
"RTN","LEXRXD",96,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXDT,LEXEF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDT,LEXIDX,LEXIDXT,LEXIEN,LEXIHS,LEXISO,LEXIST,LEXN0,LEXN1
"RTN","LEXRXD",97,0)
 N LEXN1X,LEXN2,LEXN2X,LEXNDS,LEXNH,LEXNI,LEXNIX,LEXPF,LEXSO,LEXST,LEXTS,X
"RTN","LEXRXD",98,0)
 S LEXFI="757.02"
"RTN","LEXRXD",99,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""ACT""") Q:LEXTC=1
"RTN","LEXRXD",100,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXFI=757.02,LEXIDX="ACT",LEXISO="",LEXIDXT="^LEX(757.02,""ACT"",CODE,ST,DT,IEN,HIS)"
"RTN","LEXRXD",101,0)
 F  S LEXISO=$O(^LEX(LEXFI,LEXIDX,LEXISO)) Q:'$L(LEXISO)  D
"RTN","LEXRXD",102,0)
 . N LEXIST S LEXIST="" F  S LEXIST=$O(^LEX(LEXFI,LEXIDX,LEXISO,LEXIST)) Q:'$L(LEXIST)  D
"RTN","LEXRXD",103,0)
 . . N LEXIDT S LEXIDT=0 F  S LEXIDT=$O(^LEX(LEXFI,LEXIDX,LEXISO,LEXIST,LEXIDT)) Q:+LEXIDT'>0  D
"RTN","LEXRXD",104,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXISO,LEXIST,LEXIDT,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",105,0)
 . . . . N LEXIHS S LEXIHS=0 F  S LEXIHS=$O(^LEX(LEXFI,LEXIDX,LEXISO,LEXIST,LEXIDT,LEXIEN,LEXIHS)) Q:+LEXIHS'>0  D
"RTN","LEXRXD",106,0)
 . . . . . S LEXNDS=LEXNDS+1 N LEXSO,LEXST,LEXTS,LEXDT,LEXPF,LEXN0,LEXNH,LEXEF,LEXNI,LEXNIX,LEXN1,LEXN1X,LEXN2,LEXN2X S LEXEF=0
"RTN","LEXRXD",107,0)
 . . . . . S LEXN0=$G(^LEX(757.02,LEXIEN,0)),LEXNH=$G(^LEX(757.02,LEXIEN,4,LEXIHS,0))
"RTN","LEXRXD",108,0)
 . . . . . S LEXSO=$P(LEXN0,U,2),LEXPF=$P(LEXN0,U,5),LEXDT=$P(LEXNH,U,1),LEXST=$P(LEXNH,U,2)
"RTN","LEXRXD",109,0)
 . . . . . S LEXTS=LEXST S:+LEXPF>0 LEXTS=LEXTS+2
"RTN","LEXRXD",110,0)
 . . . . . S LEXNI="^LEX("_LEXFI_","""_LEXIDX_""","""_LEXISO_""","_LEXIST_","_LEXIDT_","_LEXIEN_","_LEXIHS_")"
"RTN","LEXRXD",111,0)
 . . . . . S LEXN1="^LEX("_LEXFI_","""_LEXIDX_""","""_LEXSO_" "","_LEXST_","_LEXDT_","_LEXIEN_","_LEXIHS_")"
"RTN","LEXRXD",112,0)
 . . . . . S LEXN2="^LEX("_LEXFI_","""_LEXIDX_""","""_LEXSO_" "","_LEXTS_","_LEXDT_","_LEXIEN_","_LEXIHS_")"
"RTN","LEXRXD",113,0)
 . . . . . S X="K "_LEXNI D ^DIM Q:'$L($G(X))  S LEXNIX=$G(X)
"RTN","LEXRXD",114,0)
 . . . . . S X="S "_LEXN1_"=""""" D ^DIM Q:'$L($G(X))  S LEXN1X=$G(X)
"RTN","LEXRXD",115,0)
 . . . . . S X="S "_LEXN2_"=""""" D ^DIM Q:'$L($G(X))  S LEXN2X=$G(X)
"RTN","LEXRXD",116,0)
 . . . . . X:'$D(LEXTEST)&(LEXNI'=LEXN1)&(LEXNI'=LEXN2) LEXNIX
"RTN","LEXRXD",117,0)
 . . . . . I LEXNI'=LEXN1,LEXNI'=LEXN2 D
"RTN","LEXRXD",118,0)
 . . . . . . S LEXERR=LEXERR+1
"RTN","LEXRXD",119,0)
 . . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSO,?58,"  ",LEXIEN W:+LEXIHS>0 "/",+LEXIHS
"RTN","LEXRXD",120,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD",121,0)
 . N LEXIHS S LEXIHS=0 F  S LEXIHS=$O(^LEX(LEXFI,LEXIEN,4,LEXIHS)) Q:+LEXIHS'>0  D
"RTN","LEXRXD",122,0)
 . . N DA,DIK,LEXSO,LEXPF,LEXDT,LEXST,LEXTS S DA(1)=LEXIEN,DA=LEXIHS
"RTN","LEXRXD",123,0)
 . . S LEXSO=$P($G(^LEX(LEXFI,DA(1),0)),U,2),LEXPF=$P($G(^LEX(LEXFI,DA(1),0)),U,5)
"RTN","LEXRXD",124,0)
 . . S LEXDT=$P($G(^LEX(LEXFI,DA(1),4,DA,0)),U,1) Q:LEXDT'?7N  S LEXST=$P($G(^LEX(LEXFI,DA(1),4,DA,0)),U,2) Q:LEXST'?1N
"RTN","LEXRXD",125,0)
 . . S LEXTS=LEXST S:+LEXPF>0 LEXTS=LEXTS+2
"RTN","LEXRXD",126,0)
 . . I '$D(^LEX(LEXFI,LEXIDX,(LEXSO_" "),+LEXST,+LEXDT,DA(1),DA)) D
"RTN","LEXRXD",127,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXST,"/",LEXDT,?58,"  ",DA(1),"/",DA
"RTN","LEXRXD",128,0)
 . . I LEXTS>LEXST,'$D(^LEX(LEXFI,LEXIDX,(LEXSO_" "),+LEXTS,+LEXDT,DA(1),DA)) D
"RTN","LEXRXD",129,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXTS,"/",LEXDT,?58,"  ",DA(1),"/",DA
"RTN","LEXRXD",130,0)
 . . S:$L(LEXSO)&($L(LEXST))&($L(LEXDT)) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),+LEXST,+LEXDT,DA(1),DA)=""
"RTN","LEXRXD",131,0)
 . . I LEXTS>LEXST S:$L(LEXSO)&($L(LEXTS))&($L(LEXDT)) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),+LEXTS,+LEXDT,DA(1),DA)=""
"RTN","LEXRXD",132,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD",133,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD",134,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD",135,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD",136,0)
 Q
"RTN","LEXRXD",137,0)
 ;              
"RTN","LEXRXD",138,0)
 ; Miscellaneous
"RTN","LEXRXD",139,0)
SET ;   Re-Index 
"RTN","LEXRXD",140,0)
 Q:'$D(LEXSET)  N LEXTC,LEXPRE,LEXBEG,LEXEND,LEXELP,LEXNM,LEXFI,LEXRT,LEXIEN,LEXP3,LEXP4
"RTN","LEXRXD",141,0)
 N LEXOUT,LEXMSG,ZTQUEUED,ZTREQ,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE S LEXFI=757.02
"RTN","LEXRXD",142,0)
 D FILE^DID(LEXFI,"N","GLOBAL NAME","LEXOUT","LEXMSG") S LEXRT=$G(LEXOUT("GLOBAL NAME")) Q:LEXRT'["^LEX"
"RTN","LEXRXD",143,0)
 S LEXPRE=$G(^TMP("LEXRX",$J,"T",1,"ELAP")),LEXBEG=$$NOW^XLFDT,LEXNM=$$FN^LEXRXXM(LEXFI)
"RTN","LEXRXD",144,0)
 S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,("Re-Indexing File #"_LEXFI)) Q:LEXTC=1  I 1 D
"RTN","LEXRXD",145,0)
 . N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE S ZTRTN="SETIX^LEXRXD" S ZTDESC="Set 757.02 Indexes"
"RTN","LEXRXD",146,0)
 . S ZTSAVE("LEXRT")="",ZTSAVE("LEXFI")="",ZTIO="",ZTDTH=$H D ^%ZTLOAD
"RTN","LEXRXD",147,0)
 Q:$D(LEXQ)  S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD",148,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD",149,0)
 D REP^LEXRXXS(LEXFI,LEXFI,"ALLIX",,,"Re-Index",LEXELP)
"RTN","LEXRXD",150,0)
 S LEXELP=$$ADDT^LEXRXXM(LEXELP,LEXPRE)
"RTN","LEXRXD",151,0)
 S ^TMP("LEXRX",$J,"T",1,"ELAP")=LEXELP
"RTN","LEXRXD",152,0)
 Q
"RTN","LEXRXD",153,0)
SETIX ;   Set Indexes (Set logic only)
"RTN","LEXRXD",154,0)
 S:$D(ZTQUEUED) ZTREQ="@" W:'$D(ZTQUEUED) !,?8,"Re-Indexing",! N DIK,LEXP3,LEXP4,LEXIEN
"RTN","LEXRXD",155,0)
 Q:'$L($G(LEXRT))  Q:'$L($G(LEXFI))  S DIK=LEXRT D IXALL^DIK S (LEXP3,LEXP4,LEXIEN)=0
"RTN","LEXRXD",156,0)
 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  S LEXP3=LEXIEN,LEXP4=LEXP4+1
"RTN","LEXRXD",157,0)
 S $P(^LEX(LEXFI,0),"^",3)=LEXP3,$P(^LEX(LEXFI,0),"^",4)=LEXP4
"RTN","LEXRXD",158,0)
 Q
"RTN","LEXRXD",159,0)
CLR ;   Clear
"RTN","LEXRXD",160,0)
 K LEXNAM,LEXSET,LEXTEST,ZTQUEUED,LEXQ
"RTN","LEXRXD",161,0)
 Q
"RTN","LEXRXD4")
0^12^B78539847
"RTN","LEXRXD4",1,0)
LEXRXD4 ;ISL/KER - Re-Index 757.02 AVA/CODE/ADX/APR ;12/19/2014
"RTN","LEXRXD4",2,0)
 ;;2.0;LEXICON UTILITY;**81,80,86**;Sep 23, 1996;Build 1
"RTN","LEXRXD4",3,0)
 ;               
"RTN","LEXRXD4",4,0)
 ; Global Variables
"RTN","LEXRXD4",5,0)
 ;    ^LEX(               SACC 1.3
"RTN","LEXRXD4",6,0)
 ;    ^LEX(757.02,        SACC 1.3
"RTN","LEXRXD4",7,0)
 ;    ^LEX(757,           SACC 1.3
"RTN","LEXRXD4",8,0)
 ;    ^LEX(757.03,        SACC 1.3
"RTN","LEXRXD4",9,0)
 ;               
"RTN","LEXRXD4",10,0)
 ; External References
"RTN","LEXRXD4",11,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXRXD4",12,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXRXD4",13,0)
 ;               
"RTN","LEXRXD4",14,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXRXD4",15,0)
 ;     LEXNAM     Task name       NEWed/KILLed by LEXRXXT
"RTN","LEXRXD4",16,0)
 ;     LEXTEST    Test variable   NEWed/KILLed by Developer
"RTN","LEXRXD4",17,0)
 ;     ZTQUEUED   Task flag       NEWed/KILLed by Taskman
"RTN","LEXRXD4",18,0)
 ;               
"RTN","LEXRXD4",19,0)
 Q
"RTN","LEXRXD4",20,0)
EN ; Main Entry Point
"RTN","LEXRXD4",21,0)
R75702 ; Repair file 757.02
"RTN","LEXRXD4",22,0)
 D RAVA,RCODE,RI10 Q
"RTN","LEXRXD4",23,0)
RAVA ;   Index    ^LEX(757.02,"AVA",CODE,EXP,SAB,IEN) 
"RTN","LEXRXD4",24,0)
 N DA,DIK,LEXBEG,LEXCK,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD4",25,0)
 S LEXFI="757.02"
"RTN","LEXRXD4",26,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""AVA""") Q:LEXTC=1
"RTN","LEXRXD4",27,0)
 S LEXCK=$$SABS^LEXRXXM S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0
"RTN","LEXRXD4",28,0)
 S LEXSTR="",LEXFI=757.02,LEXIDX="AVA",LEXIDXT="^LEX(757.02,""AVA"",CODE,EXP,SAB,IEN)"
"RTN","LEXRXD4",29,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD4",30,0)
 . N LEXEXP S LEXEXP=0  F  S LEXEXP=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP)) Q:+LEXEXP'>0  D
"RTN","LEXRXD4",31,0)
 . . N LEXSAB S LEXSAB="" F  S LEXSAB=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB)) Q:'$L(LEXSAB)  D
"RTN","LEXRXD4",32,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",33,0)
 . . . . N LEXOK,LEXSO,LEXEX,LEXSR,LEXSB S LEXNDS=LEXNDS+1
"RTN","LEXRXD4",34,0)
 . . . . S LEXEX=$P($G(^LEX(757.02,+LEXIEN,0)),"^",1),LEXSO=$P($G(^LEX(757.02,+LEXIEN,0)),"^",2)
"RTN","LEXRXD4",35,0)
 . . . . S LEXSR=$P($G(^LEX(757.02,+LEXIEN,0)),"^",3),LEXSB=$E($P($G(^LEX(757.03,+LEXSR,0)),"^",1),1,3)
"RTN","LEXRXD4",36,0)
 . . . . I $L(LEXSAB)'=3!(LEXCK'[LEXSAB) D  Q
"RTN","LEXRXD4",37,0)
 . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB,LEXIEN)
"RTN","LEXRXD4",38,0)
 . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid SAB ",LEXSAB,?58,"  ",LEXIEN,!,?30,LEXCK
"RTN","LEXRXD4",39,0)
 . . . . I '$L(LEXEX)!('$L(LEXSO))!($L(LEXSB)'=3) D  Q
"RTN","LEXRXD4",40,0)
 . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB,LEXIEN)
"RTN","LEXRXD4",41,0)
 . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",42,0)
 . . . . S LEXOK=1 S:LEXSTR='(LEXSO_" ") LEXOK=0 S:LEXEXP'=LEXEX LEXOK=0 S:LEXSAB'=LEXSB LEXOK=0 I 'LEXOK D
"RTN","LEXRXD4",43,0)
 . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEXP,LEXSAB,LEXIEN)
"RTN","LEXRXD4",44,0)
 . . . . . S:$L(LEXSO)&($L(LEXEX))&($L(LEXSB))&(LEXCK[("^"_LEXSB_"^")) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXEX,LEXSB,LEXIEN)=""
"RTN","LEXRXD4",45,0)
 . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",46,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",47,0)
 . N DA,DIK,LEXEX,LEXSO,LEXSR,LEXSB S DA=LEXIEN,LEXSR=$P($G(^LEX(LEXFI,+DA,0)),"^",3),LEXSO=$P($G(^LEX(LEXFI,DA,0)),U,2)
"RTN","LEXRXD4",48,0)
 . S LEXEX=$P($G(^LEX(LEXFI,DA,0)),U,1),LEXSB=$E($P($G(^LEX(757.03,+LEXSR,0)),"^",1),1,3) Q:$L(LEXSB)'=3  Q:'$L(LEXSO)  Q:+LEXEX'>0
"RTN","LEXRXD4",49,0)
 . I LEXCK[("^"_LEXSB_"^"),'$D(^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)) D
"RTN","LEXRXD4",50,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXSO,"/",LEXSB,?58,"  ",DA
"RTN","LEXRXD4",51,0)
 . I LEXCK'[("^"_LEXSB_"^"),$D(^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)) D
"RTN","LEXRXD4",52,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Invalid (deleted) ",LEXSO,"/",LEXSB,?58,"  ",DA
"RTN","LEXRXD4",53,0)
 . . K:'$D(LEXTEST) ^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)
"RTN","LEXRXD4",54,0)
 . S:LEXCK[("^"_LEXSB_"^")&($L(LEXSO))&($L(LEXEX)) ^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)=""
"RTN","LEXRXD4",55,0)
 . K:LEXCK'[("^"_LEXSB_"^")&('$D(LEXTEST))&($L(LEXSO))&($L(LEXEX)) ^LEX(757.02,"AVA",(LEXSO_" "),LEXEX,LEXSB,DA)
"RTN","LEXRXD4",56,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD4",57,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD4",58,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD4",59,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD4",60,0)
 Q
"RTN","LEXRXD4",61,0)
RCODE ;   Index    ^LEX(757.02,"CODE",CODE,IEN) 
"RTN","LEXRXD4",62,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD4",63,0)
 S LEXFI="757.02"
"RTN","LEXRXD4",64,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""CODE""") Q:LEXTC=1
"RTN","LEXRXD4",65,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.02,LEXIDX="CODE",LEXIDXT="^LEX(757.02,""CODE"",CODE,IEN)"
"RTN","LEXRXD4",66,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD4",67,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",68,0)
 . . S LEXNDS=LEXNDS+1 N LEXOK,LEXSO S LEXSO=$P($G(^LEX(757.02,LEXIEN,0)),U,2)
"RTN","LEXRXD4",69,0)
 . . S LEXOK=0 S:(LEXSO_" ")=LEXSTR LEXOK=1 I 'LEXOK D
"RTN","LEXRXD4",70,0)
 . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXIEN) S:$L(LEXSO) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXIEN)=""
"RTN","LEXRXD4",71,0)
 . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",72,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",73,0)
 . N DA,DIK,LEXSO S DA=LEXIEN,LEXSO=$P($G(^LEX(LEXFI,DA,0)),U,2) Q:'$L(LEXSO)
"RTN","LEXRXD4",74,0)
 . I '$D(^LEX(LEXFI,LEXIDX,(LEXSO_" "),DA)) D
"RTN","LEXRXD4",75,0)
 . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXSO,?58,"  ",DA
"RTN","LEXRXD4",76,0)
 . S:$L(LEXSO) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),DA)=""
"RTN","LEXRXD4",77,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD4",78,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD4",79,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD4",80,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD4",81,0)
 Q
"RTN","LEXRXD4",82,0)
RI10 ;   Index    ^LEX(757.02 "ADX" amd "APR"
"RTN","LEXRXD4",83,0)
 D:$D(^LEX(757.02,"ADX")) RADX D:$D(^LEX(757.02,"APR")) RAPR
"RTN","LEXRXD4",84,0)
 Q
"RTN","LEXRXD4",85,0)
RADX ;   Index    ^LEX(757.02,"ADX",CODE,DATE,STA,IEN,HIS)
"RTN","LEXRXD4",86,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD4",87,0)
 S LEXFI="757.02"
"RTN","LEXRXD4",88,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""ADX""") Q:LEXTC=1
"RTN","LEXRXD4",89,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.02,LEXIDX="ADX",LEXIDXT="^LEX(757.02,""ADX"",CODE,DT,STA,IEN,HIS)"
"RTN","LEXRXD4",90,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD4",91,0)
 . N LEXEFF S LEXEFF=0 F  S LEXEFF=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF)) Q:+LEXEFF'>0  D
"RTN","LEXRXD4",92,0)
 . . N LEXSTA S LEXSTA="" F  S LEXSTA=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA)) Q:'$L(LEXSTA)  D
"RTN","LEXRXD4",93,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",94,0)
 . . . . N LEXHIS S LEXHIS=0 F  S LEXHIS=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN,LEXHIS)) Q:+LEXHIS'>0  D
"RTN","LEXRXD4",95,0)
 . . . . . S LEXNDS=LEXNDS+1 N LEXOK,LEX0,LEXH,LEXSO,LEXSR,LEXST,LEXEF
"RTN","LEXRXD4",96,0)
 . . . . . S LEX0=$G(^LEX(757.02,LEXIEN,0)),LEXH=$G(^LEX(757.02,LEXIEN,4,LEXHIS,0)),LEXSO=$P(LEX0,"^",2)
"RTN","LEXRXD4",97,0)
 . . . . . S LEXSR=$P(LEX0,"^",3),LEXST=$P(LEXH,"^",2),LEXEF=$P(LEXH,"^",1)
"RTN","LEXRXD4",98,0)
 . . . . . S LEXOK=1 S:(LEXSO_" ")'=LEXSTR LEXOK=0 S:LEXSR'=30 LEXOK=0
"RTN","LEXRXD4",99,0)
 . . . . . S:LEXEFF'=LEXEF LEXOK=0 S:LEXSTA'=LEXST LEXOK=0 I 'LEXOK D
"RTN","LEXRXD4",100,0)
 . . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN,LEXHIS)
"RTN","LEXRXD4",101,0)
 . . . . . . S:$L(LEXSO) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXIEN)=""
"RTN","LEXRXD4",102,0)
 . . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Error: ",LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",103,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",104,0)
 . N DA,DIK,LEX0,LEXHI,LEXSO,LEXSR
"RTN","LEXRXD4",105,0)
 . S LEX0=$G(^LEX(LEXFI,LEXIEN,0)) S LEXSO=$P(LEX0,U,2) Q:'$L(LEXSO)  S LEXSR=$P(LEX0,U,3) Q:+LEXSR'=30
"RTN","LEXRXD4",106,0)
 . S LEXHI=0 F  S LEXHI=$O(^LEX(757.02,LEXIEN,4,LEXHI)) Q:+LEXHI'>0  D
"RTN","LEXRXD4",107,0)
 . . N LEXH,LEXEF,LEXST S LEXH=$G(^LEX(LEXFI,LEXIEN,4,LEXHI,0))
"RTN","LEXRXD4",108,0)
 . . S LEXEF=$P(LEXH,U,1) Q:'$L(LEXEF)
"RTN","LEXRXD4",109,0)
 . . S LEXST=$P(LEXH,U,2) Q:'$L(LEXST)
"RTN","LEXRXD4",110,0)
 . . S DA(1)=LEXIEN,DA=LEXHI
"RTN","LEXRXD4",111,0)
 . . I '$D(^LEX(757.02,"ADX",(LEXSO_" "),LEXEF,LEXST,DA(1),DA)) D
"RTN","LEXRXD4",112,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXSO,?58,"  ",DA(1),", ",DA
"RTN","LEXRXD4",113,0)
 . . . S:$L(LEXSO)&($L(LEXEF))&($L(LEXST))&(+($G(DA(1)))>0)&(+($G(DA))>0) ^LEX(757.02,"ADX",(LEXSO_" "),LEXEF,LEXST,DA(1),DA)=""
"RTN","LEXRXD4",114,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD4",115,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD4",116,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD4",117,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD4",118,0)
 Q
"RTN","LEXRXD4",119,0)
RAPR ;   Index    ^LEX(757.02,"APR",CODE,DATE,STA,IEN,HIS)
"RTN","LEXRXD4",120,0)
 N DA,DIK,LEXBEG,LEXDIF,LEXELP,LEXEND,LEXERR,LEXFI,LEXIDX,LEXIDXT,LEXIEN,LEXNDS,LEXOK,LEXSO,LEXSTR
"RTN","LEXRXD4",121,0)
 S LEXFI="757.02"
"RTN","LEXRXD4",122,0)
 N LEXTC S LEXTC=$$UPD^LEXRXXT3($G(LEXNAM),,"Repairing File #757.02 ""APR""") Q:LEXTC=1
"RTN","LEXRXD4",123,0)
 S LEXBEG=$$NOW^XLFDT,(LEXNDS,LEXERR)=0,LEXSTR="",LEXFI=757.02,LEXIDX="APR",LEXIDXT="^LEX(757.02,""APR"",CODE,DT,STA,IEN,HIS)"
"RTN","LEXRXD4",124,0)
 F  S LEXSTR=$O(^LEX(LEXFI,LEXIDX,LEXSTR)) Q:'$L(LEXSTR)  D
"RTN","LEXRXD4",125,0)
 . N LEXEFF S LEXEFF=0 F  S LEXEFF=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF)) Q:+LEXEFF'>0  D
"RTN","LEXRXD4",126,0)
 . . N LEXSTA S LEXSTA="" F  S LEXSTA=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA)) Q:'$L(LEXSTA)  D
"RTN","LEXRXD4",127,0)
 . . . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",128,0)
 . . . . N LEXHIS S LEXHIS=0 F  S LEXHIS=$O(^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN,LEXHIS)) Q:+LEXHIS'>0  D
"RTN","LEXRXD4",129,0)
 . . . . . S LEXNDS=LEXNDS+1 N LEXOK,LEX0,LEXH,LEXSO,LEXSR,LEXST,LEXEF
"RTN","LEXRXD4",130,0)
 . . . . . S LEX0=$G(^LEX(757.02,LEXIEN,0)),LEXH=$G(^LEX(757.02,LEXIEN,4,LEXHIS,0)),LEXSO=$P(LEX0,"^",2)
"RTN","LEXRXD4",131,0)
 . . . . . S LEXSR=$P(LEX0,"^",3),LEXST=$P(LEXH,"^",2),LEXEF=$P(LEXH,"^",1)
"RTN","LEXRXD4",132,0)
 . . . . . S LEXOK=1 S:(LEXSO_" ")'=LEXSTR LEXOK=0 S:LEXSR'=31 LEXOK=0
"RTN","LEXRXD4",133,0)
 . . . . . S:LEXEFF'=LEXEF LEXOK=0 S:LEXSTA'=LEXST LEXOK=0 I 'LEXOK D
"RTN","LEXRXD4",134,0)
 . . . . . . S LEXERR=LEXERR+1 K:'$D(LEXTEST) ^LEX(LEXFI,LEXIDX,LEXSTR,LEXEFF,LEXSTA,LEXIEN,LEXHIS)
"RTN","LEXRXD4",135,0)
 . . . . . . S:$L(LEXSO) ^LEX(LEXFI,LEXIDX,(LEXSO_" "),LEXIEN)=""
"RTN","LEXRXD4",136,0)
 . . . . . . I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Error: ",LEXSTR,?58,"  ",LEXIEN
"RTN","LEXRXD4",137,0)
 S LEXIEN=0 F  S LEXIEN=$O(^LEX(LEXFI,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXRXD4",138,0)
 . N DA,DIK,LEX0,LEXHI,LEXSO,LEXSR
"RTN","LEXRXD4",139,0)
 . S LEX0=$G(^LEX(LEXFI,LEXIEN,0)) S LEXSO=$P(LEX0,U,2) Q:'$L(LEXSO)  S LEXSR=$P(LEX0,U,3) Q:+LEXSR'=31
"RTN","LEXRXD4",140,0)
 . S LEXHI=0 F  S LEXHI=$O(^LEX(757.02,LEXIEN,4,LEXHI)) Q:+LEXHI'>0  D
"RTN","LEXRXD4",141,0)
 . . N LEXH,LEXEF,LEXST S LEXH=$G(^LEX(LEXFI,LEXIEN,4,LEXHI,0))
"RTN","LEXRXD4",142,0)
 . . S LEXEF=$P(LEXH,U,1) Q:'$L(LEXEF)
"RTN","LEXRXD4",143,0)
 . . S LEXST=$P(LEXH,U,2) Q:'$L(LEXST)
"RTN","LEXRXD4",144,0)
 . . S DA(1)=LEXIEN,DA=LEXHI
"RTN","LEXRXD4",145,0)
 . . I '$D(^LEX(757.02,LEXIDX,(LEXSO_" "),LEXEF,LEXST,DA(1),DA)) D
"RTN","LEXRXD4",146,0)
 . . . S LEXERR=LEXERR+1 I '$D(ZTQUEUED) W !,?8,LEXFI,?19,LEXIDX,?30,"Missing ",LEXSO,?58,"  ",DA(1),", ",DA
"RTN","LEXRXD4",147,0)
 . . . S:$L(LEXSO)&($L(LEXEF))&($L(LEXST))&(+($G(DA(1)))>0)&(+($G(DA))>0) ^LEX(757.02,LEXIDX,(LEXSO_" "),LEXEF,LEXST,DA(1),DA)=""
"RTN","LEXRXD4",148,0)
 S LEXERR=$S(+LEXERR>0:LEXERR,1:"") I '$D(ZTQUEUED) W !,$J(LEXERR,5),?8,LEXFI,?19,LEXIDX,?30,LEXIDXT
"RTN","LEXRXD4",149,0)
 S LEXEND=$$NOW^XLFDT,LEXELP=$$FMDIFF^XLFDT(LEXEND,LEXBEG,3)
"RTN","LEXRXD4",150,0)
 S:$E(LEXELP,1)=" "&($E(LEXELP,3)=":") LEXELP=$TR(LEXELP," ","0")
"RTN","LEXRXD4",151,0)
 D REP^LEXRXXS(LEXFI,LEXFI,LEXIDX,LEXNDS,LEXERR,LEXIDXT,LEXELP)
"RTN","LEXRXD4",152,0)
 Q
"RTN","LEXRXD4",153,0)
 ;              
"RTN","LEXRXD4",154,0)
 ; Miscellaneous
"RTN","LEXRXD4",155,0)
CLR ;   Clear
"RTN","LEXRXD4",156,0)
 K LEXNAM,LEXTEST,ZTQUEUED
"RTN","LEXRXD4",157,0)
 Q
"RTN","LEXTRAN")
0^36^B85105957
"RTN","LEXTRAN",1,0)
LEXTRAN ;ISL/KER - Lexicon code and text wrapper API's ;12/19/2014
"RTN","LEXTRAN",2,0)
 ;;2.0;LEXICON UTILITY;**41,59,73,80,86**;Sep 23, 1996;Build 1
"RTN","LEXTRAN",3,0)
 ;               
"RTN","LEXTRAN",4,0)
 ; Global Variables
"RTN","LEXTRAN",5,0)
 ;    ^LEX(757.011)       N/A
"RTN","LEXTRAN",6,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXTRAN",7,0)
 ;               
"RTN","LEXTRAN",8,0)
 ; External References
"RTN","LEXTRAN",9,0)
 ;    ^%DT                ICR  10003
"RTN","LEXTRAN",10,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXTRAN",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXTRAN",12,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXTRAN",13,0)
 ;               
"RTN","LEXTRAN",14,0)
CODE(CODE,SRC,CDT,LEXRAY,IENS,ID,INC) ; Get the Concept for a Code and Source
"RTN","LEXTRAN",15,0)
 ;
"RTN","LEXTRAN",16,0)
 ; Input
"RTN","LEXTRAN",17,0)
 ;
"RTN","LEXTRAN",18,0)
 ;   CODE     Code (required)
"RTN","LEXTRAN",19,0)
 ;   SRC      Code System source abbreviation (required)
"RTN","LEXTRAN",20,0)
 ;   CDT      Effective Date (optional, default TODAY)
"RTN","LEXTRAN",21,0)
 ;   LEXRAY   Output array (optional, defaults to 'LEX')
"RTN","LEXTRAN",22,0)
 ;   IENS    Include expression IENs in output array
"RTN","LEXTRAN",23,0)
 ;            - optional
"RTN","LEXTRAN",24,0)
 ;              1 return IENS (2nd piece)
"RTN","LEXTRAN",25,0)
 ;              0 do not return IENS (default)
"RTN","LEXTRAN",26,0)
 ;   ID      Designation Identifiers
"RTN","LEXTRAN",27,0)
 ;            - optional
"RTN","LEXTRAN",28,0)
 ;              1 return Designation IDs (3rd piece)
"RTN","LEXTRAN",29,0)
 ;              0 do not return Designation IDs (default)
"RTN","LEXTRAN",30,0)
 ;   INC     Include Deactivated Expressions
"RTN","LEXTRAN",31,0)
 ;            - optional
"RTN","LEXTRAN",32,0)
 ;              1 return Deactivated Expressions
"RTN","LEXTRAN",33,0)
 ;              0 do not return Deactivated Expressions (default)
"RTN","LEXTRAN",34,0)
 ;   
"RTN","LEXTRAN",35,0)
 ; Output
"RTN","LEXTRAN",36,0)
 ; 
"RTN","LEXTRAN",37,0)
 ;   if call finds an active code for the source
"RTN","LEXTRAN",38,0)
 ;     "1^LEXCODE"
"RTN","LEXTRAN",39,0)
 ;     LEX     -   an array containing information about the code
"RTN","LEXTRAN",40,0)
 ;     LEX(0)  -   a five piece string:
"RTN","LEXTRAN",41,0)
 ;                 1. code
"RTN","LEXTRAN",42,0)
 ;                 2. hierarchy
"RTN","LEXTRAN",43,0)
 ;                 3. version
"RTN","LEXTRAN",44,0)
 ;                 4. legacy code
"RTN","LEXTRAN",45,0)
 ;                 5. code status
"RTN","LEXTRAN",46,0)
 ;     LEX("F")    fully specified name
"RTN","LEXTRAN",47,0)
 ;     LEX("P")    preferred term
"RTN","LEXTRAN",48,0)
 ;     LEX("S",n)  synonyms (n is the nth synonym)
"RTN","LEXTRAN",49,0)
 ;     
"RTN","LEXTRAN",50,0)
 ;   if call cannot find specified code on file
"RTN","LEXTRAN",51,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN",52,0)
 ;         where LEXSCNM is the source name
"RTN","LEXTRAN",53,0)
 ;               LEXCODE is the code
"RTN","LEXTRAN",54,0)
 ;                 
"RTN","LEXTRAN",55,0)
 ;   if call finds an inactive code for the source
"RTN","LEXTRAN",56,0)
 ;     "-4^"_LEXSCNM_" code "_LEXCODE_" not active for "_LEXVDT
"RTN","LEXTRAN",57,0)
 ;         where LEXSCNM is the source name
"RTN","LEXTRAN",58,0)
 ;               LEXCODE is the code
"RTN","LEXTRAN",59,0)
 ;               LEXVDT is the versioning date
"RTN","LEXTRAN",60,0)
 ;     
"RTN","LEXTRAN",61,0)
 ;     LEX    - an array containing information about the code
"RTN","LEXTRAN",62,0)
 ;     LEX(0) -  a five piece string:
"RTN","LEXTRAN",63,0)
 ;               1. code
"RTN","LEXTRAN",64,0)
 ;               2. hierarchy
"RTN","LEXTRAN",65,0)
 ;               3. version
"RTN","LEXTRAN",66,0)
 ;               4. legacy code
"RTN","LEXTRAN",67,0)
 ;               5. code status
"RTN","LEXTRAN",68,0)
 ;     
"RTN","LEXTRAN",69,0)
 ;   otherwise
"RTN","LEXTRAN",70,0)
 ;     "-1^error text" 
"RTN","LEXTRAN",71,0)
 ; 
"RTN","LEXTRAN",72,0)
 ;   example of LEX array:
"RTN","LEXTRAN",73,0)
 ;     LEX(0)="67922002^Substance^20050701^T-C2500^1"
"RTN","LEXTRAN",74,0)
 ;     LEX("F")="Serum (Substance)"
"RTN","LEXTRAN",75,0)
 ;     LEX("P")="Serum"
"RTN","LEXTRAN",76,0)
 ;                        
"RTN","LEXTRAN",77,0)
 N LEXCODE,LEXSRC,LEXVDT,LEXIENS,LEXDID,LEXINC
"RTN","LEXTRAN",78,0)
 S LEXCODE=$G(CODE),LEXSRC=$G(SRC),LEXVDT=$G(CDT)
"RTN","LEXTRAN",79,0)
 I $G(LEXCODE)="" Q "-1^no code specified"
"RTN","LEXTRAN",80,0)
 S LEXIENS=$G(IENS),LEXDID=$G(ID),LEXINC=+($G(INC))
"RTN","LEXTRAN",81,0)
 S LEXSRC=$E($G(LEXSRC),1,3) I $G(LEXSRC)="" Q "-1^no source specified"
"RTN","LEXTRAN",82,0)
 I +($$CSYS^LEXU(LEXSRC))'>0 Q "-1^source not recognized"
"RTN","LEXTRAN",83,0)
 I $D(^TMP("LEXSCH",$J,"VDT",0)) S LEXVDT=^(0)
"RTN","LEXTRAN",84,0)
 D:'$L($G(LEXVDT)) VDT^LEXU
"RTN","LEXTRAN",85,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",86,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",87,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",88,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN",89,0)
 N LEXSCNM,LEXSIEN,LEXASAB,LEXCIEN,VALCODE,LEXSTAT,LEXPIEN,LEXST
"RTN","LEXTRAN",90,0)
 S LEXSIEN=+($$CSYS^LEXU(LEXSRC))
"RTN","LEXTRAN",91,0)
 S LEXST=^LEX(757.03,LEXSIEN,0)
"RTN","LEXTRAN",92,0)
 S LEXSCNM=$P(LEXST,U,2)
"RTN","LEXTRAN",93,0)
 S LEXASAB=$E($P(LEXST,U),1,3)
"RTN","LEXTRAN",94,0)
 S LEXCIEN="",VALCODE=0
"RTN","LEXTRAN",95,0)
 F  Q:VALCODE=1  D  Q:LEXCIEN=""
"RTN","LEXTRAN",96,0)
 .S LEXCIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",LEXCIEN)) Q:LEXCIEN=""  D
"RTN","LEXTRAN",97,0)
 .I $D(^LEX(757.02,"ASRC",LEXASAB,LEXCIEN)) S VALCODE=1 Q
"RTN","LEXTRAN",98,0)
 I 'VALCODE Q "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN",99,0)
 K LEXSTAT,LEX
"RTN","LEXTRAN",100,0)
 K ^TMP("LEXSCH",$J)
"RTN","LEXTRAN",101,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,$E($G(LEXSRC),1,3)) ; Pch 73 adds parameter LEXSRC
"RTN","LEXTRAN",102,0)
 I +LEXSTAT=0 D  Q "-4^"_LEXSCNM_" code "_LEXCODE_" not active for "_LEXVDT
"RTN","LEXTRAN",103,0)
 .S LEXPIEN=$P(LEXSTAT(1),U)
"RTN","LEXTRAN",104,0)
 .D GETINFO
"RTN","LEXTRAN",105,0)
 .I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",106,0)
 S LEXPIEN=$P(LEXSTAT(1),U)
"RTN","LEXTRAN",107,0)
 D GETINFO
"RTN","LEXTRAN",108,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",109,0)
 Q "1^"_LEXCODE
"RTN","LEXTRAN",110,0)
 ;
"RTN","LEXTRAN",111,0)
GETINFO ; Get Information for a Code
"RTN","LEXTRAN",112,0)
 N LEXFSN,LEXHIER,LEXLGY,LEXVER,N,LEXSEP,I
"RTN","LEXTRAN",113,0)
 S LEXSRC=$E($G(LEXSRC),1,3)
"RTN","LEXTRAN",114,0)
 S LEX=$$GETSYN^LEXTRAN1(LEXSRC,LEXCODE,LEXVDT,,$G(LEXIENS),$G(LEXDID),$G(LEXINC))
"RTN","LEXTRAN",115,0)
 S LEXLGY=$$GET1^DIQ(757.02,LEXCIEN_",",13)
"RTN","LEXTRAN",116,0)
 I $D(LEX("F")) S LEXHIER=$P($P(LEX("F"),"(",$L(LEX("F"),"(")),")")
"RTN","LEXTRAN",117,0)
 S LEXVER=$$VERSION(LEXSRC,LEXCODE,LEXVDT)
"RTN","LEXTRAN",118,0)
 S LEX(0)=LEXCODE_U_$G(LEXHIER)_U_$S(+LEXVER=-1:"",1:$P(LEXVER,U,3))
"RTN","LEXTRAN",119,0)
 S LEX(0)=LEX(0)_U_LEXLGY_U_+LEXSTAT
"RTN","LEXTRAN",120,0)
 I $D(LEX("F")) S LEXHIER=$P($P(LEX("F"),"(",$L(LEX("F"),"(")),")")
"RTN","LEXTRAN",121,0)
 K LEX("SEL")
"RTN","LEXTRAN",122,0)
 Q
"RTN","LEXTRAN",123,0)
 ;
"RTN","LEXTRAN",124,0)
TEXT(TEXT,CDT,SUB,SRC,LEXRAY) ; Get the Concept for a text and source
"RTN","LEXTRAN",125,0)
 ; 
"RTN","LEXTRAN",126,0)
 ; Input
"RTN","LEXTRAN",127,0)
 ;   
"RTN","LEXTRAN",128,0)
 ;   TEXT     The search string (required)
"RTN","LEXTRAN",129,0)
 ;   CDT      Effective date (optional, default is TODAY)
"RTN","LEXTRAN",130,0)
 ;   SUB      Subset or 'hierarchy' (optional)
"RTN","LEXTRAN",131,0)
 ;   SRC      Code System source abbreviation
"RTN","LEXTRAN",132,0)
 ;   LEXRAY   Output array (optional, defaults to 'LEX')
"RTN","LEXTRAN",133,0)
 ;   
"RTN","LEXTRAN",134,0)
 ; Output
"RTN","LEXTRAN",135,0)
 ;    
"RTN","LEXTRAN",136,0)
 ;   LEX or passed array name    - an array containing information
"RTN","LEXTRAN",137,0)
 ;                                 about the code
"RTN","LEXTRAN",138,0)
 ;     LEX(0) -  a five piece string:
"RTN","LEXTRAN",139,0)
 ;               1. code
"RTN","LEXTRAN",140,0)
 ;               2. hierarchy
"RTN","LEXTRAN",141,0)
 ;               3. version
"RTN","LEXTRAN",142,0)
 ;               4. legacy code
"RTN","LEXTRAN",143,0)
 ;               5. code status
"RTN","LEXTRAN",144,0)
 ;               
"RTN","LEXTRAN",145,0)
 ;     LEX("F")    fully specified name ^ internal entry number
"RTN","LEXTRAN",146,0)
 ;     LEX("P")    preferred term ^ internal entry number
"RTN","LEXTRAN",147,0)
 ;     LEX("S",n)  synonyms (n is the nth synonym) ^ internal entry number
"RTN","LEXTRAN",148,0)
 ;     
"RTN","LEXTRAN",149,0)
 ;   otherwise
"RTN","LEXTRAN",150,0)
 ;     "-1^error text" 
"RTN","LEXTRAN",151,0)
 ; 
"RTN","LEXTRAN",152,0)
 ;   example of LEX array:
"RTN","LEXTRAN",153,0)
 ;     LEX(0)="67922002^Substance^20050701^T-C2500^1"
"RTN","LEXTRAN",154,0)
 ;     LEX("F")="Serum (Substance)"
"RTN","LEXTRAN",155,0)
 ;     LEX("P")="Serum"
"RTN","LEXTRAN",156,0)
 ;     
"RTN","LEXTRAN",157,0)
 N LEXTEXT,LEXVDT,LEXDT,LEXTD,LEXSUB,LEXSRC,LEXNOM,LEXID,DIC K LEX
"RTN","LEXTRAN",158,0)
 S LEXTEXT=$G(TEXT),LEXVDT=$G(CDT),LEXSUB=$G(SUB),LEXSRC=$G(SRC)
"RTN","LEXTRAN",159,0)
 I $G(LEXTEXT)="" Q "-1^no search string specified"
"RTN","LEXTRAN",160,0)
 S LEXSRC=$P($$CSYS^LEXU(LEXSRC),"^",2),LEXNOM=""
"RTN","LEXTRAN",161,0)
 S:$L(LEXSRC) LEXNOM=$P($G(^LEX(757.03,+($O(^LEX(757.03,"ASAB",LEXSRC,0))),0)),"^",2)
"RTN","LEXTRAN",162,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",163,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",164,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",165,0)
 S LEXDT=LEXVDT,LEXSUB=$G(LEXSUB) I LEXSUB="" S LEXSUB=LEXSRC
"RTN","LEXTRAN",166,0)
 K:$G(LEXRAY)="" LEXRAY
"RTN","LEXTRAN",167,0)
 N X,LEXPIEN,LEXCODE,LEXSTAT,LEXCIEN,Y
"RTN","LEXTRAN",168,0)
 K ^TMP("LEXSCH",$J),LEX S X=LEXTEXT
"RTN","LEXTRAN",169,0)
 D CONFIG^LEXSET(LEXSRC,LEXSUB,LEXVDT)
"RTN","LEXTRAN",170,0)
 S LEXVDT=LEXDT D EN^LEXA1 Q:+($G(Y))=-1 "-1^search could not find term"
"RTN","LEXTRAN",171,0)
 S LEXPIEN=+Y D INFO^LEXA(LEXPIEN) S LEXCODE="",LEXSTAT=-1 I $L(LEXNOM) D
"RTN","LEXTRAN",172,0)
 . S LEXID=$O(LEX("SEL","SRC","B",LEXNOM,0))
"RTN","LEXTRAN",173,0)
 . S LEXCODE=$P($G(LEX("SEL","SRC",+LEXID)),"^",2)
"RTN","LEXTRAN",174,0)
 I '$L(LEXCODE),$D(LEX("SEL","SRC","C")) D
"RTN","LEXTRAN",175,0)
 . S LEXCODE=$O(LEX("SEL","SRC","C",""))
"RTN","LEXTRAN",176,0)
 S LEXCIEN=0 I $L(LEXCODE) D
"RTN","LEXTRAN",177,0)
 . S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,$E(LEXSRC,1,3))
"RTN","LEXTRAN",178,0)
 . S LEXCIEN=$P(LEXSTAT,U,2),LEXSRC=$E($P($G(LEXSTAT(2)),U,2),1,3)
"RTN","LEXTRAN",179,0)
 D GETINFO
"RTN","LEXTRAN",180,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",181,0)
 Q "1^"_LEXPIEN
"RTN","LEXTRAN",182,0)
 ;
"RTN","LEXTRAN",183,0)
VERSION(SRC,CODE,VDT) ; Get the Code Version Number
"RTN","LEXTRAN",184,0)
 ;
"RTN","LEXTRAN",185,0)
 ; Input
"RTN","LEXTRAN",186,0)
 ;   
"RTN","LEXTRAN",187,0)
 ;   SRC      Code System source abbreviation e.g. SCT (SNOMED CT)
"RTN","LEXTRAN",188,0)
 ;   CODE     Code - mandatory
"RTN","LEXTRAN",189,0)
 ;   VDT      Effective date (defaults to current date) - optional
"RTN","LEXTRAN",190,0)
 ;             - optional
"RTN","LEXTRAN",191,0)
 ;   
"RTN","LEXTRAN",192,0)
 ; Output
"RTN","LEXTRAN",193,0)
 ; 
"RTN","LEXTRAN",194,0)
 ;   1^Version
"RTN","LEXTRAN",195,0)
 ;     or
"RTN","LEXTRAN",196,0)
 ;   -1^error message
"RTN","LEXTRAN",197,0)
 ;      
"RTN","LEXTRAN",198,0)
 N LEXSRC,LEXCODE,LEXVDT S LEXSRC=$G(SRC),LEXCODE=$G(CODE),LEXVDT=$G(VDT)
"RTN","LEXTRAN",199,0)
 I $G(LEXVDT)'="" S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN",200,0)
 I $G(LEXVDT)=-1 Q "-1^invalid date format"
"RTN","LEXTRAN",201,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN",202,0)
 S LEXSRC=$E($G(LEXSRC),1,3) I $G(LEXSRC)="" Q "-1^invalid source"
"RTN","LEXTRAN",203,0)
 N SIEN,VIEN,VDAT,LEXSTAT
"RTN","LEXTRAN",204,0)
 S SIEN=+($$CSYS^LEXU(LEXSRC))
"RTN","LEXTRAN",205,0)
 I '$D(^LEX(757.03,+SIEN,1)) Q "-1^No source version data available"
"RTN","LEXTRAN",206,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,$E($G(LEXSRC),1,3)) ; Pch 73 adds parameter LEXSRC
"RTN","LEXTRAN",207,0)
 I +LEXSTAT=0 Q "-1^Code not active for date specified"
"RTN","LEXTRAN",208,0)
 S VDAT=$O(^LEX(757.03,SIEN,1,"B",LEXVDT+1),-1)
"RTN","LEXTRAN",209,0)
 S VIEN=$O(^LEX(757.03,SIEN,1,"B",VDAT,""))
"RTN","LEXTRAN",210,0)
 Q "1^"_^LEX(757.03,SIEN,1,VIEN,0)
"RTN","LEXTRAN",211,0)
 ;
"RTN","LEXTRAN",212,0)
TXT4CS(TEXT,SRC,LEXRAY,SUB) ; Is text valid for an SCT code
"RTN","LEXTRAN",213,0)
 ;
"RTN","LEXTRAN",214,0)
 ; Input
"RTN","LEXTRAN",215,0)
 ; 
"RTN","LEXTRAN",216,0)
 ;   TEXT      Text to check
"RTN","LEXTRAN",217,0)
 ;   SRC       Coding System Mnemonic or IEN
"RTN","LEXTRAN",218,0)
 ;   LEXRAY    Output array (optional, defaults to 'LEX')
"RTN","LEXTRAN",219,0)
 ;   SUB       Subset or 'hierarchy' (optional)
"RTN","LEXTRAN",220,0)
 ;   
"RTN","LEXTRAN",221,0)
 ; Output
"RTN","LEXTRAN",222,0)
 ; 
"RTN","LEXTRAN",223,0)
 ;   1^no of finds
"RTN","LEXTRAN",224,0)
 ;   
"RTN","LEXTRAN",225,0)
 ;     plus
"RTN","LEXTRAN",226,0)
 ;     
"RTN","LEXTRAN",227,0)
 ;   LEX or passed array name - an array containing
"RTN","LEXTRAN",228,0)
 ;   
"RTN","LEXTRAN",229,0)
 ;          LEX(<code>,<seq>)= expression type ^ code IEN ^ expression IEN
"RTN","LEXTRAN",230,0)
 ;          
"RTN","LEXTRAN",231,0)
 ;     e.g. LEX(123.5,1)="MAJOR CONCEPT^119085^112525"
"RTN","LEXTRAN",232,0)
 ;          LEX(123.5,2)="SYNONYM^119094^112526"
"RTN","LEXTRAN",233,0)
 ;      or
"RTN","LEXTRAN",234,0)
 ;      
"RTN","LEXTRAN",235,0)
 ;   -1^error message
"RTN","LEXTRAN",236,0)
 ;   
"RTN","LEXTRAN",237,0)
 N LEXTEXT,LEXSRC,LEXSUB S LEXTEXT=$G(TEXT),LEXSRC=$G(SRC),LEXSUB=$G(SUB)
"RTN","LEXTRAN",238,0)
 N CODEC,EXP,EXIEN,MCIEN,FOUND,CIEN,CODE,EXPTYP,FINDS,LAR,HIER,HIERNAM,LEXW ; Pch 73 adds variable CODEC
"RTN","LEXTRAN",239,0)
 I $G(LEXTEXT)="" Q "-1^text not specified"
"RTN","LEXTRAN",240,0)
 I $G(LEXSRC)="" Q "-1^code system not specified"
"RTN","LEXTRAN",241,0)
 I $$CSYSIEN(LEXSRC)+$$CSYSMNEM(LEXSRC)=-2 Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",242,0)
 I $G(LEXRAY)="" K LEXRAY
"RTN","LEXTRAN",243,0)
 S LEXSUB=$G(LEXSUB)
"RTN","LEXTRAN",244,0)
 I LEXSUB'="",'$D(^LEXT(757.2,"AA",LEXSUB)) Q "-1^hierarchy unknown in Lexicon"
"RTN","LEXTRAN",245,0)
 S:LEXSRC?.N LEXSRC=$P($$CSYSMNEM(LEXSRC),"^",2)
"RTN","LEXTRAN",246,0)
 ; text IEN's in 757.01
"RTN","LEXTRAN",247,0)
 I '$D(^LEX(757.01,"B",$E($$UP^XLFSTR(LEXTEXT),1,63))) Q "-1^expression unknown in Lexicon"
"RTN","LEXTRAN",248,0)
 ; build an array of expression IENs for text
"RTN","LEXTRAN",249,0)
 S EXIEN=""
"RTN","LEXTRAN",250,0)
 F  S EXIEN=$O(^LEX(757.01,"B",$E($$UP^XLFSTR(LEXTEXT),1,63),EXIEN)) Q:EXIEN=""  D   ; Pch 73 adds $Extract
"RTN","LEXTRAN",251,0)
 .S:$$UP^XLFSTR($G(^LEX(757.01,+EXIEN,0)))=$$UP^XLFSTR(LEXTEXT) EXP(EXIEN)="" ; Pch 73 adds exact match check
"RTN","LEXTRAN",252,0)
 ; scan array to find code for expression (LEXTEXT) for code system (LEXSRC)
"RTN","LEXTRAN",253,0)
 S EXIEN=""
"RTN","LEXTRAN",254,0)
 K LEXW
"RTN","LEXTRAN",255,0)
 S (FOUND,FINDS)=0
"RTN","LEXTRAN",256,0)
 F  S EXIEN=$O(EXP(EXIEN)) Q:EXIEN=""  D
"RTN","LEXTRAN",257,0)
 .S MCIEN=$P(^LEX(757.01,EXIEN,1),U)
"RTN","LEXTRAN",258,0)
 .; Pch 73 moved EXPTYP into CIEN loop
"RTN","LEXTRAN",259,0)
 .S CIEN="" F  S CIEN=$O(^LEX(757.02,"AMC",MCIEN,CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN",260,0)
 ..I $P($$CSYSMNEM($P(^LEX(757.02,CIEN,0),U,3)),U,2)=LEXSRC D
"RTN","LEXTRAN",261,0)
 ...S CODE=$P(^LEX(757.02,CIEN,0),U,2)
"RTN","LEXTRAN",262,0)
 ...S (HIER,HIERNAM)=""
"RTN","LEXTRAN",263,0)
 ...I LEXSUB'="" D
"RTN","LEXTRAN",264,0)
 ....K LAR
"RTN","LEXTRAN",265,0)
 ....S LAR=$$CODE(CODE,"SCT",,"LAR")
"RTN","LEXTRAN",266,0)
 ....S HIER=$P($G(LAR(0)),U,2)
"RTN","LEXTRAN",267,0)
 ....S HIERNAM=$P(^LEXT(757.2,$O(^LEXT(757.2,"AA",LEXSUB,"")),0),U)
"RTN","LEXTRAN",268,0)
 ...I LEXSUB'="",HIER'=HIERNAM Q
"RTN","LEXTRAN",269,0)
 ...S FOUND=1
"RTN","LEXTRAN",270,0)
 ...S FINDS=FINDS+1
"RTN","LEXTRAN",271,0)
 ...S CODEC=$O(LEXW(CODE," "),-1)+1 ; Pch 73 adds counter for multiple entries for code
"RTN","LEXTRAN",272,0)
 ...S EXPTYP=$P(^LEX(757.011,$P(^LEX(757.01,+($G(^LEX(757.02,CIEN,0))),1),U,2),0),U) ; Pch 73 moved from EXIEN loop
"RTN","LEXTRAN",273,0)
 ...S LEXW(CODE,CODEC)=EXPTYP_"^"_CIEN_"^"_+($G(^LEX(757.02,CIEN,0))) ; Pch 73 adds code IEN and expression IEN to output
"RTN","LEXTRAN",274,0)
 M LEX=LEXW
"RTN","LEXTRAN",275,0)
 I $D(LEXRAY),LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN",276,0)
 Q FOUND_"^"_FINDS
"RTN","LEXTRAN",277,0)
 ;
"RTN","LEXTRAN",278,0)
CSYSIEN(MNEM) ; Return code system IEN for mnemonic
"RTN","LEXTRAN",279,0)
 Q:'$L($G(MNEM)) "-1^invalid code system" N LEXIEN
"RTN","LEXTRAN",280,0)
 S LEXIEN=+($$CSYS^LEXU(MNEM)) Q:LEXIEN>0 "1^"_LEXIEN
"RTN","LEXTRAN",281,0)
 Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",282,0)
 ;
"RTN","LEXTRAN",283,0)
CSYSMNEM(SIEN) ; Return code system mnemonic for IEN
"RTN","LEXTRAN",284,0)
 S SIEN=+($$CSYS^LEXU($G(SIEN)))
"RTN","LEXTRAN",285,0)
 I '$D(^LEX(757.03,+($G(SIEN)),0)) Q "-1^code system unknown in Lexicon"
"RTN","LEXTRAN",286,0)
 Q "1^"_$E($P(^LEX(757.03,SIEN,0),"^"),1,3)
"RTN","LEXTRAN",287,0)
 ;
"RTN","LEXTRAN",288,0)
INTDAT(X) ; Convert date from external format to VA internal format
"RTN","LEXTRAN",289,0)
 N Y,%DT
"RTN","LEXTRAN",290,0)
 D ^%DT
"RTN","LEXTRAN",291,0)
 Q Y
"RTN","LEXTRAN1")
0^16^B129742637
"RTN","LEXTRAN1",1,0)
LEXTRAN1 ;ISL/KER - Lexicon code and text wrapper API's ;12/19/2014
"RTN","LEXTRAN1",2,0)
 ;;2.0;LEXICON UTILITY;**59,73,51,80,86**;Sep 23, 1996;Build 1
"RTN","LEXTRAN1",3,0)
 ;
"RTN","LEXTRAN1",4,0)
 ; Global Variables
"RTN","LEXTRAN1",5,0)
 ;    ^LEX(757.32)        N/A
"RTN","LEXTRAN1",6,0)
 ;    ^LEX(757.33)        N/A
"RTN","LEXTRAN1",7,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXTRAN1",8,0)
 ;
"RTN","LEXTRAN1",9,0)
 ; External References
"RTN","LEXTRAN1",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXTRAN1",11,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXTRAN1",12,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXTRAN1",13,0)
 ;    $$UP^XLFSTR         ICR  10103
"RTN","LEXTRAN1",14,0)
 ;    ^%DT                ICR  10003
"RTN","LEXTRAN1",15,0)
 ;
"RTN","LEXTRAN1",16,0)
GETSYN(SRC,CODE,CDT,LEXARY,IENS,ID,INC) ; Get Synonyms for a Concept
"RTN","LEXTRAN1",17,0)
 ;
"RTN","LEXTRAN1",18,0)
 ; Local Variables
"RTN","LEXTRAN1",19,0)
 ;
"RTN","LEXTRAN1",20,0)
 ; Input
"RTN","LEXTRAN1",21,0)
 ; 
"RTN","LEXTRAN1",22,0)
 ;   SRC     Coding System (required)
"RTN","LEXTRAN1",23,0)
 ;   CODE    Code (required)
"RTN","LEXTRAN1",24,0)
 ;   CDT     Effective date (optional, default TODAY)
"RTN","LEXTRAN1",25,0)
 ;   LEXARY  Output array (optional, defaults to 'LEX')
"RTN","LEXTRAN1",26,0)
 ;   IENS    Include expression IENs in output array (optional)
"RTN","LEXTRAN1",27,0)
 ;             1 return IENS (2nd piece)
"RTN","LEXTRAN1",28,0)
 ;             0 do not return IENS (default)
"RTN","LEXTRAN1",29,0)
 ;   ID      Designation Identifiers (optional)
"RTN","LEXTRAN1",30,0)
 ;              1 return Designation IDs (3rd piece)
"RTN","LEXTRAN1",31,0)
 ;              0 do not return Designation IDs (default)
"RTN","LEXTRAN1",32,0)
 ;   INC     Include Deactivated Terms (optional)
"RTN","LEXTRAN1",33,0)
 ;              1 return Deactivated Terms
"RTN","LEXTRAN1",34,0)
 ;              0 do not return Deactivated Terms (default)
"RTN","LEXTRAN1",35,0)
 ;
"RTN","LEXTRAN1",36,0)
 ; Output
"RTN","LEXTRAN1",37,0)
 ;
"RTN","LEXTRAN1",38,0)
 ;   If call finds an active code for the source
"RTN","LEXTRAN1",39,0)
 ;     "1^LEXCODE"
"RTN","LEXTRAN1",40,0)
 ;     LEX               An array containing code information
"RTN","LEXTRAN1",41,0)
 ;     LEX("F")          Fully Specified Name^IEN^Designation ID
"RTN","LEXTRAN1",42,0)
 ;     LEX("P")          Preferred Term^IEN^Designation ID
"RTN","LEXTRAN1",43,0)
 ;     LEX("S",n)        Synonyms 4 Piece ^ Delimited string
"RTN","LEXTRAN1",44,0)
 ;                          1  Synonym (required)
"RTN","LEXTRAN1",45,0)
 ;                          2  IEN (optional)
"RTN","LEXTRAN1",46,0)
 ;                          3  Designation ID (optional)
"RTN","LEXTRAN1",47,0)
 ;                          4  Deactivation flag (optional)
"RTN","LEXTRAN1",48,0)
 ;                               1 = Deactivated Synonym
"RTN","LEXTRAN1",49,0)
 ;                              
"RTN","LEXTRAN1",50,0)
 ;                       n is the nth Synonym
"RTN","LEXTRAN1",51,0)
 ;
"RTN","LEXTRAN1",52,0)
 ;   Errors:
"RTN","LEXTRAN1",53,0)
 ;   
"RTN","LEXTRAN1",54,0)
 ;     "-1^Code "_LEXCODE_" not yet active for "_LEXVDT
"RTN","LEXTRAN1",55,0)
 ;         where LEXCODE is the code
"RTN","LEXTRAN1",56,0)
 ;               LEXVDT is the versioning date
"RTN","LEXTRAN1",57,0)
 ;             
"RTN","LEXTRAN1",58,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",59,0)
 ;         where LEXSCNM is the source name
"RTN","LEXTRAN1",60,0)
 ;               LEXCODE is the code
"RTN","LEXTRAN1",61,0)
 ;
"RTN","LEXTRAN1",62,0)
 ;     "-4^"_LEXSNM_" code "_LEXCODE_" not active for "_LEXVDT
"RTN","LEXTRAN1",63,0)
 ;         where LEXSCNM is the source name
"RTN","LEXTRAN1",64,0)
 ;               LEXCODE is the code
"RTN","LEXTRAN1",65,0)
 ;               LEXVDT is the versioning date
"RTN","LEXTRAN1",66,0)
 ;               
"RTN","LEXTRAN1",67,0)
 ;   Otherwise
"RTN","LEXTRAN1",68,0)
 ;     "-1^error text"
"RTN","LEXTRAN1",69,0)
 ;
"RTN","LEXTRAN1",70,0)
 N LEXSRC,LEXCODE,LEXVDT,LEXIENS,LEXDID,LEXINC S LEXSRC=$G(SRC),LEXCODE=$G(CODE)
"RTN","LEXTRAN1",71,0)
 S LEXVDT=$G(CDT),LEXIENS=$G(IENS),LEXDID=$G(ID),LEXINC=+($G(INC))
"RTN","LEXTRAN1",72,0)
 N LEX1,LEX2,LEX3,LEX4,LEXCIEN,LEXD,LEXDOW,LEXEX,LEXEXI,LEXFND,LEXI
"RTN","LEXTRAN1",73,0)
 N LEXMCI,LEXOUT,LEXS,LEXSAB,LEXSNM,LEXSRD,LEXSTAT,LEXTY
"RTN","LEXTRAN1",74,0)
 N LEXVAL S LEXSRC=$E($G(LEXSRC),1,3) S:'$L($G(LEXARY)) LEXARY="LEX"
"RTN","LEXTRAN1",75,0)
 Q:'$L($G(LEXSRC)) (-1_U_"source not recognized")
"RTN","LEXTRAN1",76,0)
 S LEXSRD=$$CSYS^LEXU(LEXSRC) Q:+LEXSRD'>0 (-1_U_"source not recognized")
"RTN","LEXTRAN1",77,0)
 S LEXSAB=$P(LEXSRD,"^",2),LEXSNM=$P(LEXSRD,"^",4)
"RTN","LEXTRAN1",78,0)
 Q:($L(LEXSAB)'=3)!('$L(LEXSNM)) (-1_U_"source not recognized")
"RTN","LEXTRAN1",79,0)
 Q:'$L($G(LEXCODE)) -1_U_"no code specified"
"RTN","LEXTRAN1",80,0)
 D VDT^LEXU Q:$P(LEXVDT,".",1)'?7N (-1_U_"invalid date format")
"RTN","LEXTRAN1",81,0)
 K:$G(LEXARY)="" LEXARY
"RTN","LEXTRAN1",82,0)
 S LEXIENS=+$G(LEXIENS) S:LEXIENS'=1 LEXIENS=0
"RTN","LEXTRAN1",83,0)
 S LEXCIEN="",LEXVAL=0
"RTN","LEXTRAN1",84,0)
 F  Q:LEXVAL=1  D  Q:LEXCIEN=""
"RTN","LEXTRAN1",85,0)
 .S LEXCIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",LEXCIEN)) Q:LEXCIEN=""  D
"RTN","LEXTRAN1",86,0)
 .I $D(^LEX(757.02,"ASRC",LEXSAB,LEXCIEN)) S LEXVAL=1 Q
"RTN","LEXTRAN1",87,0)
 I 'LEXVAL Q -2_U_LEXSNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",88,0)
 S LEXSTAT=$$STATCHK^LEXSRC2(LEXCODE,LEXVDT,.LEXSTAT,LEXSAB)
"RTN","LEXTRAN1",89,0)
 S:+LEXSTAT>0&($P(LEXSTAT,"^",2)>0) LEXCIEN=$P(LEXSTAT,"^",2)
"RTN","LEXTRAN1",90,0)
 S LEXOUT=0 I +LEXSTAT=0 D
"RTN","LEXTRAN1",91,0)
 . S LEXOUT=-4_U_LEXSNM_" code "_LEXCODE_" not active for "
"RTN","LEXTRAN1",92,0)
 . S LEXOUT=LEXOUT_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"")
"RTN","LEXTRAN1",93,0)
 I +LEXSTAT=-1 D
"RTN","LEXTRAN1",94,0)
 . S LEXOUT=-8_U_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"")
"RTN","LEXTRAN1",95,0)
 . S LEXOUT=LEXOUT_" precedes earliest activation date for code"
"RTN","LEXTRAN1",96,0)
 I +($G(LEXCIEN))'>0 D
"RTN","LEXTRAN1",97,0)
 . N LEXS,LEXD,LEXI,LEX1 S LEXCIEN=-1,(LEXS,LEXD,LEXI)=""
"RTN","LEXTRAN1",98,0)
 . F  S LEXS=$O(^LEX(757.02,"ACT",LEXCODE_" ",LEXS)) Q:LEXS=""  D
"RTN","LEXTRAN1",99,0)
 . . Q:(LEXS+1)>2  S LEXD=""
"RTN","LEXTRAN1",100,0)
 . . F  S LEXD=$O(^LEX(757.02,"ACT",LEXCODE_" ",LEXS,LEXD)) Q:LEXD=""  S LEXI="" D
"RTN","LEXTRAN1",101,0)
 . . . F  S LEXI=$O(^LEX(757.02,"ACT",LEXCODE_" ",LEXS,LEXD,LEXI)) Q:LEXI=""  D
"RTN","LEXTRAN1",102,0)
 . . . . S LEX1(LEXD,LEXI)=""
"RTN","LEXTRAN1",103,0)
 . Q:'$D(LEX1)  S LEXI=$O(LEX1(LEXVDT+.001),-1) Q:'$L(LEXI)
"RTN","LEXTRAN1",104,0)
 . S LEXI=$O(LEX1(LEXI,""),-1) Q:'$D(^LEX(757.02,+LEXI,0))  S LEXCIEN=LEXI
"RTN","LEXTRAN1",105,0)
 I '$D(^LEX(757.02,+($G(LEXCIEN)),0)) D  Q LEXOUT
"RTN","LEXTRAN1",106,0)
 . S LEXOUT="-1^Code "_LEXCODE_" not yet active for "
"RTN","LEXTRAN1",107,0)
 . S LEXOUT=LEXOUT_$S(LEXVDT?7N:$$FMTE^XLFDT(LEXVDT,"5Z"),1:"")
"RTN","LEXTRAN1",108,0)
 S LEXMCI=$P(^LEX(757.02,+LEXCIEN,0),U,4)
"RTN","LEXTRAN1",109,0)
 S LEXEXI="",LEXFND=0
"RTN","LEXTRAN1",110,0)
 K LEX2 F  S LEXEXI=$O(^LEX(757.01,"AMC",LEXMCI,LEXEXI)) Q:LEXEXI=""  D
"RTN","LEXTRAN1",111,0)
 .S LEXFND=LEXFND+1,LEX2(LEXEXI)=""
"RTN","LEXTRAN1",112,0)
 K LEX3 S LEXEXI="" F  S LEXEXI=$O(LEX2(LEXEXI)) Q:LEXEXI=""  D
"RTN","LEXTRAN1",113,0)
 . N LEXN1,LEXID,LEXC,LEXDEA S LEXEX=^LEX(757.01,LEXEXI,0),LEXDEA=0
"RTN","LEXTRAN1",114,0)
 . S LEXN1=$G(^LEX(757.01,LEXEXI,1)) Q:+($G(LEXINC))'>0&($P(LEXN1,"^",5)>0)
"RTN","LEXTRAN1",115,0)
 . S:+($G(LEXINC))>0&($P(LEXN1,"^",5)>0) LEXDEA=1
"RTN","LEXTRAN1",116,0)
 . S LEXID="" I LEXDID>0,$L($G(LEXSRC)) D
"RTN","LEXTRAN1",117,0)
 . . N LEXSI S LEXSI=$O(^LEX(757.03,"ASAB",LEXSRC,0)) Q:LEXSI'>0
"RTN","LEXTRAN1",118,0)
 . . S LEXID=$O(^LEX(757.01,LEXEXI,7,"C",LEXSI,""))
"RTN","LEXTRAN1",119,0)
 . S LEXTY=$P(^LEX(757.01,LEXEXI,1),U,2)
"RTN","LEXTRAN1",120,0)
 . I LEXTY=1 D  Q
"RTN","LEXTRAN1",121,0)
 . . S LEX3("P")=LEXEX_$S(+LEXEXI>0&(+($G(LEXIENS))>0):(U_LEXEXI),1:"")
"RTN","LEXTRAN1",122,0)
 . . S:$L(LEXID) $P(LEX3("P"),"^",3)=LEXID
"RTN","LEXTRAN1",123,0)
 . I LEXTY=8 D  Q
"RTN","LEXTRAN1",124,0)
 . . S LEX3("F")=LEXEX_$S(+LEXEXI>0&(+($G(LEXIENS))>0):(U_LEXEXI),1:"")
"RTN","LEXTRAN1",125,0)
 . . S:$L(LEXID) $P(LEX3("F"),"^",3)=LEXID
"RTN","LEXTRAN1",126,0)
 . S LEXC=$O(LEX3("S"," "),-1)+1
"RTN","LEXTRAN1",127,0)
 . S LEX3("S",LEXC)=LEXEX_$S(+LEXEXI>0&(+($G(LEXIENS))>0):(U_LEXEXI),1:"")
"RTN","LEXTRAN1",128,0)
 . S:$L(LEXID) $P(LEX3("S",LEXC),"^",3)=LEXID
"RTN","LEXTRAN1",129,0)
 . S:LEXDEA>0 $P(LEX3("S",LEXC),"^",4)=1
"RTN","LEXTRAN1",130,0)
 K LEX4 M LEX4=LEX3
"RTN","LEXTRAN1",131,0)
 S LEXFND=''$D(LEX4("F"))+''$D(LEX4("P"))+$O(LEX4("S"," "),-1)
"RTN","LEXTRAN1",132,0)
 I $D(LEXARY),LEXARY'="LEX4" M @LEXARY=LEX4
"RTN","LEXTRAN1",133,0)
 K LEX4 I LEXOUT=0 S LEXOUT=''LEXFND_U_LEXFND
"RTN","LEXTRAN1",134,0)
 Q LEXOUT
"RTN","LEXTRAN1",135,0)
 ;
"RTN","LEXTRAN1",136,0)
GETFSN(SRC,CODE,CDT) ; Get Fully Specified Name for a Concept
"RTN","LEXTRAN1",137,0)
 ;
"RTN","LEXTRAN1",138,0)
 ; Input
"RTN","LEXTRAN1",139,0)
 ;
"RTN","LEXTRAN1",140,0)
 ;   SRC   Coding System (required)
"RTN","LEXTRAN1",141,0)
 ;   CODE  Code (required)
"RTN","LEXTRAN1",142,0)
 ;   CDT   Effective date (optional, default TODAY)
"RTN","LEXTRAN1",143,0)
 ;
"RTN","LEXTRAN1",144,0)
 ; Output
"RTN","LEXTRAN1",145,0)
 ;
"RTN","LEXTRAN1",146,0)
 ;   if found
"RTN","LEXTRAN1",147,0)
 ;     "1^LEXFSN"
"RTN","LEXTRAN1",148,0)
 ;     where LEXFSN is the fully specified name
"RTN","LEXTRAN1",149,0)
 ;   if not found
"RTN","LEXTRAN1",150,0)
 ;     "-8^"_LEXSCNM_" code "_LEXCODE_" has no FSN"
"RTN","LEXTRAN1",151,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",152,0)
 ;       
"RTN","LEXTRAN1",153,0)
 N LEXSRC,LEXCODE,LEXVDT S LEXSRC=$G(SRC),LEXCODE=$G(CODE),LEXVDT=$G(CDT)
"RTN","LEXTRAN1",154,0)
 N SYNS,LEX S LEXSRC=$E($G(LEXSRC),1,3)
"RTN","LEXTRAN1",155,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",156,0)
 I $G(LEXSRC)="" Q -1_U_"no source specified"
"RTN","LEXTRAN1",157,0)
 I +($$CSYS^LEXU(LEXSRC))'>0 Q -1_U_"source not recognized"
"RTN","LEXTRAN1",158,0)
 I $L($G(LEXVDT)),$P($G(LEXVDT),".",1)'?7N S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",159,0)
 D VDT^LEXU I $P($G(LEXVDT),".",1)'?7N Q -1_U_"invalid date format"
"RTN","LEXTRAN1",160,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",161,0)
 S SYNS=$$GETSYN(LEXSRC,LEXCODE,$G(LEXVDT))
"RTN","LEXTRAN1",162,0)
 I +SYNS'>0 Q SYNS
"RTN","LEXTRAN1",163,0)
 I $D(LEX("F")) Q 1_U_LEX("F")
"RTN","LEXTRAN1",164,0)
 Q -8_U_$$LEXSCNM(LEXSRC)_" code "_LEXCODE_" has no FSN"
"RTN","LEXTRAN1",165,0)
 ;
"RTN","LEXTRAN1",166,0)
GETPREF(SRC,CODE,CDT) ; Get the Preferred Term for a Code
"RTN","LEXTRAN1",167,0)
 ;
"RTN","LEXTRAN1",168,0)
 ; Input
"RTN","LEXTRAN1",169,0)
 ;
"RTN","LEXTRAN1",170,0)
 ;   SRC    Coding System (required)
"RTN","LEXTRAN1",171,0)
 ;   CODE   Code (required)
"RTN","LEXTRAN1",172,0)
 ;   CDT    Effective date (optional, default TODAY)
"RTN","LEXTRAN1",173,0)
 ;
"RTN","LEXTRAN1",174,0)
 ; Output
"RTN","LEXTRAN1",175,0)
 ;
"RTN","LEXTRAN1",176,0)
 ;   if found
"RTN","LEXTRAN1",177,0)
 ;     "1^LEXPREF"
"RTN","LEXTRAN1",178,0)
 ;     where LEXPREF is the preferred name
"RTN","LEXTRAN1",179,0)
 ;   if not found
"RTN","LEXTRAN1",180,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",181,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",182,0)
 ;
"RTN","LEXTRAN1",183,0)
 N LEXSRC,LEXCODE,LEXVDT S LEXSRC=$G(SRC),LEXCODE=$G(CODE),LEXVDT=$G(CDT)
"RTN","LEXTRAN1",184,0)
 N SYNS,LEX S LEXSRC=$E($G(LEXSRC),1,3)
"RTN","LEXTRAN1",185,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",186,0)
 I $G(LEXSRC)="" Q -1_U_"no source specified"
"RTN","LEXTRAN1",187,0)
 I +($$CSYS^LEXU(LEXSRC))'>0 Q -1_U_"source not recognized"
"RTN","LEXTRAN1",188,0)
 I $L($G(LEXVDT)),$P($G(LEXVDT),".",1)'?7N S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",189,0)
 D VDT^LEXU I $P($G(LEXVDT),".",1)'?7N Q -1_U_"invalid date format"
"RTN","LEXTRAN1",190,0)
 I $G(LEXVDT)=-1 Q -1_U_"invalid date format"
"RTN","LEXTRAN1",191,0)
 I $G(LEXVDT)="" S LEXVDT=$$DT^XLFDT
"RTN","LEXTRAN1",192,0)
 S SYNS=$$GETSYN(LEXSRC,LEXCODE,$G(LEXVDT))
"RTN","LEXTRAN1",193,0)
 I +SYNS'>0 Q SYNS
"RTN","LEXTRAN1",194,0)
 Q 1_U_LEX("P")
"RTN","LEXTRAN1",195,0)
 ;
"RTN","LEXTRAN1",196,0)
GETDES(SRC,TEXT,CDT) ; Get the Designation Code for a Concept/Synonym
"RTN","LEXTRAN1",197,0)
 ;
"RTN","LEXTRAN1",198,0)
 ; Input
"RTN","LEXTRAN1",199,0)
 ;
"RTN","LEXTRAN1",200,0)
 ;   SRC    Coding System (required)
"RTN","LEXTRAN1",201,0)
 ;   TEXT   Text (required)
"RTN","LEXTRAN1",202,0)
 ;   CDT    Effective date (optional, default TODAY)
"RTN","LEXTRAN1",203,0)
 ;
"RTN","LEXTRAN1",204,0)
 ; Output
"RTN","LEXTRAN1",205,0)
 ;
"RTN","LEXTRAN1",206,0)
 ;   if found
"RTN","LEXTRAN1",207,0)
 ;     "1^LEXDSG"
"RTN","LEXTRAN1",208,0)
 ;     where LEXDSG is the designation code
"RTN","LEXTRAN1",209,0)
 ;   if not found
"RTN","LEXTRAN1",210,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",211,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",212,0)
 ;
"RTN","LEXTRAN1",213,0)
 N LEXSRC,LEXTEXT,LEXVDT S LEXSRC=$G(SRC),LEXTEXT=$G(TEXT),LEXVDT=$G(CDT)
"RTN","LEXTRAN1",214,0)
 N LEXA,LEXCIEN,LEXDSG,LEXIEN,LEXMC,LEXSAB,LEXSIEN,LEXSO
"RTN","LEXTRAN1",215,0)
 N LEXSR,LEXSRD,LEXSRI,LEXSUB,LEXTMP S LEXSRC=$E($G(LEXSRC),1,3)
"RTN","LEXTRAN1",216,0)
 S LEXSRD=$$CSYS^LEXU(LEXSRC),LEXSAB=$P(LEXSRD,"^",2)
"RTN","LEXTRAN1",217,0)
 S LEXSRI=+LEXSRD Q:$G(LEXSRC)="" -1_U_"no source specified"
"RTN","LEXTRAN1",218,0)
 Q:+LEXSRI'>0 -1_U_"source not recognized"
"RTN","LEXTRAN1",219,0)
 Q:'$L($G(LEXTEXT)) -1_U_"no text specified"
"RTN","LEXTRAN1",220,0)
 S LEXTMP=$G(^TMP("LEXSCH",$J,"VDT",0))
"RTN","LEXTRAN1",221,0)
 S:LEXTMP?7N LEXVDT=LEXTMP
"RTN","LEXTRAN1",222,0)
 I $L($G(LEXVDT)),$P($G(LEXVDT),".",1)'?7N S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",223,0)
 D VDT^LEXU I $P($G(LEXVDT),".",1)'?7N Q -1_U_"invalid date format"
"RTN","LEXTRAN1",224,0)
 ;
"RTN","LEXTRAN1",225,0)
 ; find candidate designations
"RTN","LEXTRAN1",226,0)
 ;
"RTN","LEXTRAN1",227,0)
 S LEXSUB=$E($$UP^XLFSTR(LEXTEXT),1,63)
"RTN","LEXTRAN1",228,0)
 S LEXIEN=""
"RTN","LEXTRAN1",229,0)
 F  S LEXIEN=$O(^LEX(757.01,"B",LEXSUB,LEXIEN)) Q:LEXIEN=""  D
"RTN","LEXTRAN1",230,0)
 .I $$UP^XLFSTR(^LEX(757.01,LEXIEN,0))=$$UP^XLFSTR(LEXTEXT) S LEXA(LEXIEN)=$P(^LEX(757.01,LEXIEN,1),U)
"RTN","LEXTRAN1",231,0)
 S LEXIEN=""
"RTN","LEXTRAN1",232,0)
 F  S LEXIEN=$O(LEXA(LEXIEN)) Q:LEXIEN=""  D
"RTN","LEXTRAN1",233,0)
 . N LEXSR S LEXMC=LEXA(LEXIEN)
"RTN","LEXTRAN1",234,0)
 . S (LEXCIEN,LEXSIEN)=""
"RTN","LEXTRAN1",235,0)
 . F  S LEXSIEN=$O(^LEX(757.02,"AMC",LEXMC,LEXSIEN)) Q:LEXSIEN=""  D
"RTN","LEXTRAN1",236,0)
 . . S LEXSR=$P(^LEX(757.02,LEXSIEN,0),U,3)
"RTN","LEXTRAN1",237,0)
 . . I +($$CSYS^LEXU(LEXSRC))'=LEXSR Q
"RTN","LEXTRAN1",238,0)
 . . I $P(^LEX(757.02,LEXSIEN,0),U,5)'=1 Q
"RTN","LEXTRAN1",239,0)
 . . S LEXCIEN=LEXSIEN
"RTN","LEXTRAN1",240,0)
 . I LEXCIEN="" K LEXA(LEXIEN) Q
"RTN","LEXTRAN1",241,0)
 . ; eliminate if wrong source
"RTN","LEXTRAN1",242,0)
 . S LEXSO=$P(^LEX(757.02,LEXCIEN,0),U,2)
"RTN","LEXTRAN1",243,0)
 . S LEXSR=$P(^LEX(757.02,LEXCIEN,0),U,3)
"RTN","LEXTRAN1",244,0)
 . I +($$CSYS^LEXU(LEXSRC))'=LEXSR K LEXA(LEXIEN) Q
"RTN","LEXTRAN1",245,0)
 . ; eliminate if inactive for LEXVDT
"RTN","LEXTRAN1",246,0)
 . I '+$$STATCHK^LEXSRC2(LEXSO,LEXVDT,,$E(LEXSRC,1,3)) K LEXA(LEXIEN) Q
"RTN","LEXTRAN1",247,0)
 ; get the designation code
"RTN","LEXTRAN1",248,0)
 S LEXIEN=$O(LEXA(""))
"RTN","LEXTRAN1",249,0)
 I LEXIEN="" Q -1_U_"text not recognized for source"
"RTN","LEXTRAN1",250,0)
 S LEXDSG=$O(^LEX(757.01,LEXIEN,7,"C",+LEXSRI,""))
"RTN","LEXTRAN1",251,0)
 I LEXDSG="" Q -1_U_"no designation code for text and source"
"RTN","LEXTRAN1",252,0)
 Q 1_U_LEXDSG
"RTN","LEXTRAN1",253,0)
 ;
"RTN","LEXTRAN1",254,0)
GETASSN(CODE,MAP,CDT,LEXRAY) ; Get Mapped Associated Codes
"RTN","LEXTRAN1",255,0)
 ;
"RTN","LEXTRAN1",256,0)
 ; Input
"RTN","LEXTRAN1",257,0)
 ;
"RTN","LEXTRAN1",258,0)
 ;   CODE     Code (required)
"RTN","LEXTRAN1",259,0)
 ;   MAP      Mapping Identifier (VUID) or mnemonic (required)
"RTN","LEXTRAN1",260,0)
 ;   CDT      Effective date (optional, default TODAY)
"RTN","LEXTRAN1",261,0)
 ;   LEXRAY   Output array (defaults to 'LEX') optional
"RTN","LEXTRAN1",262,0)
 ;
"RTN","LEXTRAN1",263,0)
 ; Output
"RTN","LEXTRAN1",264,0)
 ;
"RTN","LEXTRAN1",265,0)
 ;   if found
"RTN","LEXTRAN1",266,0)
 ;     "1^"_number_of_mappings
"RTN","LEXTRAN1",267,0)
 ;
"RTN","LEXTRAN1",268,0)
 ;     LEX is an array containing the mapping target codes
"RTN","LEXTRAN1",269,0)
 ;     LEX = number of mappings
"RTN","LEXTRAN1",270,0)
 ;     LEX(order,code)  mapped codes
"RTN","LEXTRAN1",271,0)
 ;                      order - is the order of the mapping
"RTN","LEXTRAN1",272,0)
 ;                      code - is the mapping target code
"RTN","LEXTRAN1",273,0)
 ;
"RTN","LEXTRAN1",274,0)
 ;   if not found
"RTN","LEXTRAN1",275,0)
 ;     "0^0"
"RTN","LEXTRAN1",276,0)
 ;
"RTN","LEXTRAN1",277,0)
 ;   if error
"RTN","LEXTRAN1",278,0)
 ;     "-1^"_error_message
"RTN","LEXTRAN1",279,0)
 ;
"RTN","LEXTRAN1",280,0)
 ;   if no code on file
"RTN","LEXTRAN1",281,0)
 ;     "-2^"_LEXSCNM_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",282,0)
 ;     where LEXSCNM is the source name
"RTN","LEXTRAN1",283,0)
 ;   
"RTN","LEXTRAN1",284,0)
 ;   Caution
"RTN","LEXTRAN1",285,0)
 ;   -------
"RTN","LEXTRAN1",286,0)
 ;   When the API is invoked in the following way
"RTN","LEXTRAN1",287,0)
 ;   S VAR=$$GETASSN^LEXTRAN1(CODE,MAP,[DATE],[ARR])
"RTN","LEXTRAN1",288,0)
 ;   
"RTN","LEXTRAN1",289,0)
 ;   Make sure that ARR'="VAR"
"RTN","LEXTRAN1",290,0)
 ;     e.g. S ORY=$$GETASSN^LEXTRAN1(CODE,MAP,,"VAR") is OK
"RTN","LEXTRAN1",291,0)
 ;     but  S VAR=$$GETASSN^LEXTRAN1(CODE,MAP,,"VAR") is not OK
"RTN","LEXTRAN1",292,0)
 ; 
"RTN","LEXTRAN1",293,0)
 N LEXCODE,LEXMAP,LEXVDT S LEXCODE=$G(CODE),LEXMAP=$G(MAP),LEXVDT=$G(CDT)
"RTN","LEXTRAN1",294,0)
 I $G(LEXCODE)="" Q -1_U_"no code specified"
"RTN","LEXTRAN1",295,0)
 I $G(LEXMAP)="" Q -1_U_"no mapping specified"
"RTN","LEXTRAN1",296,0)
 I $L($G(LEXVDT)),$P($G(LEXVDT),".",1)'?7N S LEXVDT=$$INTDAT(LEXVDT)
"RTN","LEXTRAN1",297,0)
 D VDT^LEXU I $P($G(LEXVDT),".",1)'?7N Q -1_U_"invalid date format"
"RTN","LEXTRAN1",298,0)
 S LEXRAY=$G(LEXRAY,"LEX")
"RTN","LEXTRAN1",299,0)
 N MIDIEN,CSYS,CIEN,VALCD,MORD,MTAR,MIEN,EFDT,STAT,CT,VUID
"RTN","LEXTRAN1",300,0)
 I '$D(^LEX(757.32,"B",LEXMAP)),'$D(^LEX(757.32,"C",LEXMAP)) Q -1_U_"unrecognized mapping identifier"
"RTN","LEXTRAN1",301,0)
 I $D(^LEX(757.32,"C",LEXMAP)) D
"RTN","LEXTRAN1",302,0)
 .S MIDIEN=$O(^LEX(757.32,"C",LEXMAP,""))
"RTN","LEXTRAN1",303,0)
 I $D(^LEX(757.32,"B",LEXMAP)) D
"RTN","LEXTRAN1",304,0)
 .S MIDIEN=$O(^LEX(757.32,"B",LEXMAP,""))
"RTN","LEXTRAN1",305,0)
 I '$D(MIDIEN) Q -1_U_"not a recognized mapping identifier"
"RTN","LEXTRAN1",306,0)
 S CSYS=$$GET1^DIQ(757.32,MIDIEN_",",3)
"RTN","LEXTRAN1",307,0)
 ;   Check that code exists for coding system
"RTN","LEXTRAN1",308,0)
 S CIEN="",VALCD=0
"RTN","LEXTRAN1",309,0)
 F  Q:VALCD=1  D  Q:CIEN=""
"RTN","LEXTRAN1",310,0)
 .S CIEN=$O(^LEX(757.02,"CODE",LEXCODE_" ",CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN1",311,0)
 .S VALCD=''$D(^LEX(757.02,"ASRC",$$LEXASAB(CSYS),CIEN))
"RTN","LEXTRAN1",312,0)
 I 'VALCD Q -2_U_$$LEXSCNM(CSYS)_" code "_LEXCODE_" not on file"
"RTN","LEXTRAN1",313,0)
 ;   Obtain valid mappings for date
"RTN","LEXTRAN1",314,0)
 S (MORD,MTAR,MIEN)=""
"RTN","LEXTRAN1",315,0)
 K LEX
"RTN","LEXTRAN1",316,0)
 S LEX=0
"RTN","LEXTRAN1",317,0)
 F  S MORD=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD)) Q:MORD=""  D
"RTN","LEXTRAN1",318,0)
 .F  S MTAR=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD,MTAR)) Q:MTAR=""  D
"RTN","LEXTRAN1",319,0)
 ..F  S MIEN=$O(^LEX(757.33,"C",MIDIEN,LEXCODE,MORD,MTAR,MIEN)) Q:MIEN=""  D
"RTN","LEXTRAN1",320,0)
 ...N MAT S MAT=$P($G(^LEX(757.33,+MIEN,0)),U,5)
"RTN","LEXTRAN1",321,0)
 ...S VUID=$P(^LEX(757.33,MIEN,0),U)
"RTN","LEXTRAN1",322,0)
 ...S EFDT=+$O(^LEX(757.33,"G",VUID,LEXVDT+.0001),-1)
"RTN","LEXTRAN1",323,0)
 ...Q:EFDT=0
"RTN","LEXTRAN1",324,0)
 ...S STAT=+$O(^LEX(757.33,"G",VUID,EFDT,""))
"RTN","LEXTRAN1",325,0)
 ...Q:STAT=0
"RTN","LEXTRAN1",326,0)
 ...S LEX=LEX+1
"RTN","LEXTRAN1",327,0)
 ...S LEX(MORD,MTAR)=MAT
"RTN","LEXTRAN1",328,0)
 I LEXRAY'="LEX" M @LEXRAY=LEX K LEX
"RTN","LEXTRAN1",329,0)
 Q ''@LEXRAY_U_@LEXRAY
"RTN","LEXTRAN1",330,0)
 ;
"RTN","LEXTRAN1",331,0)
LEXSCNM(LEXSRC) ; get source name
"RTN","LEXTRAN1",332,0)
 N LEXI Q:'$L(LEXSRC) ""  S LEXI=+($$CSYS^LEXU(LEXSRC))'>0 Q:LEXI'>0 ""
"RTN","LEXTRAN1",333,0)
 Q $P(^LEX(757.03,+LEXI,0),U,2)
"RTN","LEXTRAN1",334,0)
 ;
"RTN","LEXTRAN1",335,0)
LEXASAB(LEXSRC) ; get source abbreviation
"RTN","LEXTRAN1",336,0)
 N LEXI Q:'$L(LEXSRC) ""  S LEXI=+($$CSYS^LEXU(LEXSRC)) Q:LEXI'>0 ""
"RTN","LEXTRAN1",337,0)
 Q $E($P($G(^LEX(757.03,+LEXI,0)),U),1,3)
"RTN","LEXTRAN1",338,0)
CSI(LEXSRC) ; get source IEN
"RTN","LEXTRAN1",339,0)
 Q:'$L($E($G(LEXSRC),1,3)) -1  N LEXI S LEXI=+($$CSYS^LEXU(LEXSRC)) S:LEXI'>0 LEXI=-2
"RTN","LEXTRAN1",340,0)
 Q +LEXI
"RTN","LEXTRAN1",341,0)
 ;
"RTN","LEXTRAN1",342,0)
INTDAT(X) ; convert date from external format to VA internal format
"RTN","LEXTRAN1",343,0)
 S X=$G(X) Q:$P(X,".",1)?7N $P(X,".",1)
"RTN","LEXTRAN1",344,0)
 N Y,%DT D ^%DT K %DT
"RTN","LEXTRAN1",345,0)
 Q Y
"RTN","LEXTRAN1",346,0)
 ;
"RTN","LEXTRAN1",347,0)
GETCIEN(CODE) ; get correct code ien for code and date
"RTN","LEXTRAN1",348,0)
 ; CODE and LEXVDT must be defined
"RTN","LEXTRAN1",349,0)
 N STA,DAT,CIEN,ARR,CDT S CDT=$G(LEXVDT)
"RTN","LEXTRAN1",350,0)
 S (STA,DAT,CIEN)=""
"RTN","LEXTRAN1",351,0)
 F  S STA=$O(^LEX(757.02,"ACT",CODE_" ",STA)) Q:STA=""  D
"RTN","LEXTRAN1",352,0)
 .Q:(STA+1)>2
"RTN","LEXTRAN1",353,0)
 .F  S DAT=$O(^LEX(757.02,"ACT",CODE_" ",STA,DAT)) Q:DAT=""  D
"RTN","LEXTRAN1",354,0)
 ..F  S CIEN=$O(^LEX(757.02,"ACT",CODE_" ",STA,DAT,CIEN)) Q:CIEN=""  D
"RTN","LEXTRAN1",355,0)
 ...S ARR(DAT,CIEN)=""
"RTN","LEXTRAN1",356,0)
 Q:'$D(ARR) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",357,0)
 S CIEN=$O(ARR(CDT+.001),-1)
"RTN","LEXTRAN1",358,0)
 Q:'$L(CIEN) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",359,0)
 S CIEN=$O(ARR(CIEN,""),-1)
"RTN","LEXTRAN1",360,0)
 Q:'$D(^LEX(757.02,+CIEN,0)) ("-1^No Code entry found for date "_$S(CDT?7N:$$FMTE^XLFDT(CDT,"5Z"),1:""))
"RTN","LEXTRAN1",361,0)
 Q CIEN
"RTN","LEXU")
0^37^B104256430
"RTN","LEXU",1,0)
LEXU ;ISL/KER - Miscellaneous Lexicon Utilities ;12/19/2014
"RTN","LEXU",2,0)
 ;;2.0;LEXICON UTILITY;**2,6,9,15,25,36,73,51,80,86**;Sep 23, 1996;Build 1
"RTN","LEXU",3,0)
 ;               
"RTN","LEXU",4,0)
 ; Global Variables
"RTN","LEXU",5,0)
 ;    None
"RTN","LEXU",6,0)
 ;               
"RTN","LEXU",7,0)
 ; External References
"RTN","LEXU",8,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXU",9,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXU",10,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXU",11,0)
 ;               
"RTN","LEXU",12,0)
HELP ; API Help
"RTN","LEXU",13,0)
 D EN^LEXUH
"RTN","LEXU",14,0)
 Q
"RTN","LEXU",15,0)
SC(LEX,LEXS,LEXVDT) ; Filter by Semantic Class
"RTN","LEXU",16,0)
 Q $$SC^LEXU6($G(LEX),$G(LEXS),$G(LEXVDT))
"RTN","LEXU",17,0)
SO(LEX,LEXS,LEXVDT) ; Filter by Source
"RTN","LEXU",18,0)
 Q $$SO^LEXU6($G(LEX),$G(LEXS),$G(LEXVDT))
"RTN","LEXU",19,0)
ICDDP(LEX,LEXT,LEXVDT) ; Filter by ICD Diagnosis/Procedure System
"RTN","LEXU",20,0)
 ;
"RTN","LEXU",21,0)
 ; Input
"RTN","LEXU",22,0)
 ;
"RTN","LEXU",23,0)
 ;    LEX      IEN of file 757.01 (required)
"RTN","LEXU",24,0)
 ;    LEXT     ICD Type (optional)
"RTN","LEXU",25,0)
 ;                 1  ICD Diagnosis (default)
"RTN","LEXU",26,0)
 ;                 2  ICD Procedures
"RTN","LEXU",27,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",28,0)
 ;                 Date before Oct 1, 2013, ICD-9 assumed
"RTN","LEXU",29,0)
 ;                 Date after Sep 30, 2013, ICD-10 assumed
"RTN","LEXU",30,0)
 ; Output
"RTN","LEXU",31,0)
 ;
"RTN","LEXU",32,0)
 ;    $$ICDDP  1/0
"RTN","LEXU",33,0)
 ;
"RTN","LEXU",34,0)
 N LEXEI,LEXF,LEXMC,LEXMCE,LEXSRC,LEXSRI,ICD10 S (LEXSRC,LEXSRI)=""
"RTN","LEXU",35,0)
 S LEXEI=+LEX Q:'$D(^LEX(757.01,LEXEI,0)) 0  S ICD10=$$IMPDATE("10D")
"RTN","LEXU",36,0)
 S LEXT=$G(LEXT) S:+LEXT<0!(LEXT>2) LEXT=1 D VDT
"RTN","LEXU",37,0)
 S:LEXT=1&(LEXVDT<ICD10) LEXSRC="ICD",LEXSRI=1
"RTN","LEXU",38,0)
 S:LEXT=1&(LEXVDT'<ICD10) LEXSRC="10D",LEXSRI=30
"RTN","LEXU",39,0)
 S:LEXT=2&(LEXVDT<ICD10) LEXSRC="ICP",LEXSRI=2
"RTN","LEXU",40,0)
 S:LEXT=2&(LEXVDT'<ICD10) LEXSRC="10P",LEXSRI=31
"RTN","LEXU",41,0)
 Q:'$L(LEXSRC) 0  Q:LEXSRI'>0 0
"RTN","LEXU",42,0)
 S LEXF=0,LEXMC=+($P(^LEX(757.01,LEXEI,1),U,1)) Q:LEXMC'>0 0
"RTN","LEXU",43,0)
 S LEXMCE=+(^LEX(757,+($P(^LEX(757.01,LEXEI,1),U,1)),0)) Q:LEXMCE'>0 0
"RTN","LEXU",44,0)
 S LEXF=0 I LEXEI+LEXMCE>0 D
"RTN","LEXU",45,0)
 . N LEXSI S LEXSI=0
"RTN","LEXU",46,0)
 . F  S LEXSI=$O(^LEX(757.02,"AMC",LEXMC,LEXSI)) Q:+LEXSI=0!(LEXF)  D  Q:LEXF
"RTN","LEXU",47,0)
 . . N LEXN0,LEXSAB,LEXSO,LEXSTA
"RTN","LEXU",48,0)
 . . S LEXN0=$G(^LEX(757.02,LEXSI,0)),LEXSAB=+($P(LEXN0,U,3))
"RTN","LEXU",49,0)
 . . Q:LEXSAB'=LEXSRI  Q:"^1^2^30^31^"'[("^"_LEXSAB_"^")
"RTN","LEXU",50,0)
 . . S LEXSO=$P(LEXN0,U,2)
"RTN","LEXU",51,0)
 . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,LEXVDT,,LEXSAB)
"RTN","LEXU",52,0)
 . . Q:+LEXSTA'>0  S LEXF=1
"RTN","LEXU",53,0)
 S LEX=$G(LEXF)
"RTN","LEXU",54,0)
 Q LEX
"RTN","LEXU",55,0)
DX(LEX,LEXVDT) ; Filter by Diagnosis System
"RTN","LEXU",56,0)
 ; 
"RTN","LEXU",57,0)
 ; Input
"RTN","LEXU",58,0)
 ; 
"RTN","LEXU",59,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",60,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",61,0)
 ;
"RTN","LEXU",62,0)
 ; Output
"RTN","LEXU",63,0)
 ;
"RTN","LEXU",64,0)
 ;    $$DX     1/0
"RTN","LEXU",65,0)
 ;
"RTN","LEXU",66,0)
 N LEXEI,LEXF,LEXMC,LEXMCE,LEXSRC,LEXSRI,ICD10
"RTN","LEXU",67,0)
 S LEXEI=+LEX Q:'$D(^LEX(757.01,LEXEI,0)) 0
"RTN","LEXU",68,0)
 D VDT S LEXSRC="ICD",LEXSRI=1 S ICD10=$$IMPDATE("10D")
"RTN","LEXU",69,0)
 S:+($G(LEXVDT))'<ICD10 LEXSRC="10D",LEXSRI=30
"RTN","LEXU",70,0)
 S LEXF=0,LEXMC=+($P(^LEX(757.01,LEXEI,1),U,1)) Q:LEXMC'>0 0
"RTN","LEXU",71,0)
 S LEXMCE=+(^LEX(757,+($P(^LEX(757.01,LEXEI,1),U,1)),0)) Q:LEXMCE'>0 0
"RTN","LEXU",72,0)
 S LEXF=0 I LEXEI+LEXMCE>0 D
"RTN","LEXU",73,0)
 . N LEXSI S LEXSI=0
"RTN","LEXU",74,0)
 . F  S LEXSI=$O(^LEX(757.02,"AMC",LEXMC,LEXSI)) Q:+LEXSI=0!(LEXF)  D
"RTN","LEXU",75,0)
 . . N LEXN0,LEXSAB,LEXSO,LEXSTA
"RTN","LEXU",76,0)
 . . S LEXN0=$G(^LEX(757.02,LEXSI,0)),LEXSAB=+($P(LEXN0,U,3))
"RTN","LEXU",77,0)
 . . Q:LEXSAB'=LEXSRI  Q:"^1^30^"'[("^"_LEXSAB_"^")
"RTN","LEXU",78,0)
 . . S LEXSO=$P(LEXN0,U,2)
"RTN","LEXU",79,0)
 . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,LEXVDT,,LEXSAB)
"RTN","LEXU",80,0)
 . . Q:+LEXSTA'>0  S LEXF=1
"RTN","LEXU",81,0)
 K LEX S LEX=$G(LEXF)
"RTN","LEXU",82,0)
 Q LEX
"RTN","LEXU",83,0)
SRC(LEX,LEXS) ; Filter by Expression Source
"RTN","LEXU",84,0)
 ;    LEX      Expression  IEN of file 757.01
"RTN","LEXU",85,0)
 ;    LEXS     Source      IEN of 757.14
"RTN","LEXU",86,0)
 S LEX=+($G(LEX)),LEXS=+($G(LEXS)) Q:LEX=0 0  Q:LEXS=0 0
"RTN","LEXU",87,0)
 Q:'$D(^LEX(757.01,LEX,0)) 0 Q:'$D(^LEX(757.14,LEXS,0)) 0
"RTN","LEXU",88,0)
 S LEXSR=$P($G(^LEX(757.01,LEX,1)),U,12) Q:LEXSR=LEXS 1
"RTN","LEXU",89,0)
 N LEXSR,LEXMC,LEXMCE S LEXMC=+($G(^LEX(757.01,LEX,1)))
"RTN","LEXU",90,0)
 S LEXMCE=+($G(^LEX(757,+LEXMC,0)))
"RTN","LEXU",91,0)
 S LEXSR=$P($G(^LEX(757.01,LEXMCE,1)),U,12) Q:LEXSR=LEXS 1
"RTN","LEXU",92,0)
 Q 0
"RTN","LEXU",93,0)
DEF(LEX) ; Display expression definition
"RTN","LEXU",94,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",95,0)
 I $D(^LEX(757.01,LEX,3,0)) D
"RTN","LEXU",96,0)
 . N LEXLN F LEXLN=1:1:$P(^LEX(757.01,LEX,3,0),U,4) D
"RTN","LEXU",97,0)
 . . I $D(^LEX(757.01,LEX,3,LEXLN,0)) W !,?2,^LEX(757.01,LEX,3,LEXLN,0)
"RTN","LEXU",98,0)
 . K LEX,LEXLN W !
"RTN","LEXU",99,0)
 Q
"RTN","LEXU",100,0)
ID(LEX) ; ICD Diagnosis retained - ICD procedures ignored
"RTN","LEXU",101,0)
 ;    LEX      Code
"RTN","LEXU",102,0)
 Q:'$L($G(LEX)) ""  Q:$L($P(LEX,".",1))<3 ""
"RTN","LEXU",103,0)
 Q:'$D(^LEX(757.02,"AVA",(LEX_" "))) ""
"RTN","LEXU",104,0)
 N LEXO,LEXR S (LEXO,LEXR)=0
"RTN","LEXU",105,0)
 F  S LEXR=$O(^LEX(757.02,"AVA",(LEX_" "),LEXR)) Q:+LEXR=0  D  Q:LEXO=1
"RTN","LEXU",106,0)
 . I $D(^LEX(757.02,"AVA",(LEX_" "),LEXR,"ICD")) S LEXO=1
"RTN","LEXU",107,0)
 Q:'LEXO "" Q LEX
"RTN","LEXU",108,0)
ICDONE(LEX,LEXVDT) ; Get One ICD-9 Diagnosis Code for a Term
"RTN","LEXU",109,0)
 ; 
"RTN","LEXU",110,0)
 ; Input
"RTN","LEXU",111,0)
 ; 
"RTN","LEXU",112,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",113,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",114,0)
 ;
"RTN","LEXU",115,0)
 ; Output
"RTN","LEXU",116,0)
 ;
"RTN","LEXU",117,0)
 ;    $$ICDONE ICD-9 Code
"RTN","LEXU",118,0)
 ;
"RTN","LEXU",119,0)
 N LEXICD D VDT S LEXICD=$$ONE($G(LEX),$G(LEXVDT),"ICD")
"RTN","LEXU",120,0)
 Q:'$L($P(LEXICD,"^",1)) ""  S LEX=LEXICD
"RTN","LEXU",121,0)
 Q LEX
"RTN","LEXU",122,0)
D10ONE(LEX,LEXVDT) ; Get One ICD-10 Diagosis Code for a Term
"RTN","LEXU",123,0)
 ; 
"RTN","LEXU",124,0)
 ; Input
"RTN","LEXU",125,0)
 ; 
"RTN","LEXU",126,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",127,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",128,0)
 ;
"RTN","LEXU",129,0)
 ; Output
"RTN","LEXU",130,0)
 ;
"RTN","LEXU",131,0)
 ;    $$D10ONE ICD-10-CM Diagnosis Code or Null
"RTN","LEXU",132,0)
 ;
"RTN","LEXU",133,0)
 N LEXICD D VDT S LEXICD=$$ONE($G(LEX),$G(LEXVDT),"10D")
"RTN","LEXU",134,0)
 Q:'$L($P(LEXICD,"^",1)) ""  S LEX=LEXICD
"RTN","LEXU",135,0)
 Q LEX
"RTN","LEXU",136,0)
P10ONE(LEX,LEXVDT) ; Get One ICD-10 Procedure Code for a Term
"RTN","LEXU",137,0)
 ; 
"RTN","LEXU",138,0)
 ; Input
"RTN","LEXU",139,0)
 ; 
"RTN","LEXU",140,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",141,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",142,0)
 ;
"RTN","LEXU",143,0)
 ; Output
"RTN","LEXU",144,0)
 ;
"RTN","LEXU",145,0)
 ;    $$P10ONE ICD-10-PCS Procedure Code or Null
"RTN","LEXU",146,0)
 ;
"RTN","LEXU",147,0)
 N LEXICD D VDT S LEXICD=$$ONE($G(LEX),$G(LEXVDT),"10P")
"RTN","LEXU",148,0)
 Q:'$L($P(LEXICD,"^",1)) ""  S LEX=LEXICD
"RTN","LEXU",149,0)
 Q LEX
"RTN","LEXU",150,0)
CPTONE(LEX,LEXVDT) ; Get One CPT Code for a Term
"RTN","LEXU",151,0)
 ; 
"RTN","LEXU",152,0)
 ; Input
"RTN","LEXU",153,0)
 ; 
"RTN","LEXU",154,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",155,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",156,0)
 ;
"RTN","LEXU",157,0)
 ; Output
"RTN","LEXU",158,0)
 ;
"RTN","LEXU",159,0)
 ;    $$CPTONE CPT Code or Null
"RTN","LEXU",160,0)
 ;
"RTN","LEXU",161,0)
 N LEXCPT D VDT S LEXCPT=$$ONE($G(LEX),$G(LEXVDT),"CPT")
"RTN","LEXU",162,0)
 Q:'$L($P(LEXCPT,"^",1)) ""  S LEX=LEXCPT
"RTN","LEXU",163,0)
 Q LEX
"RTN","LEXU",164,0)
CPCONE(LEX,LEXVDT) ; Get One HCPCS Code for a Term
"RTN","LEXU",165,0)
 ; 
"RTN","LEXU",166,0)
 ; Input
"RTN","LEXU",167,0)
 ; 
"RTN","LEXU",168,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",169,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",170,0)
 ;
"RTN","LEXU",171,0)
 ; Output
"RTN","LEXU",172,0)
 ;
"RTN","LEXU",173,0)
 ;    $$CPCONE HCPCS Code or Null
"RTN","LEXU",174,0)
 ;
"RTN","LEXU",175,0)
 N LEXCPT D VDT S LEXCPT=$$ONE($G(LEX),$G(LEXVDT),"CPC")
"RTN","LEXU",176,0)
 Q:'$L($P(LEXCPT,"^",1)) ""  S LEX=LEXCPT
"RTN","LEXU",177,0)
 Q LEX
"RTN","LEXU",178,0)
DSMONE(LEX,LEXVDT) ; Get One DSM Code for a Term
"RTN","LEXU",179,0)
 ; 
"RTN","LEXU",180,0)
 ; Input
"RTN","LEXU",181,0)
 ; 
"RTN","LEXU",182,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",183,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",184,0)
 ;
"RTN","LEXU",185,0)
 ; Output
"RTN","LEXU",186,0)
 ;
"RTN","LEXU",187,0)
 ;    $$DSMONE DSM-IV Code or Null
"RTN","LEXU",188,0)
 ;
"RTN","LEXU",189,0)
 N LEXDSM,LEXCD,LEXDAT D VDT S LEXDSM=$$ONE^LEXSRC($G(LEX),"DS4")
"RTN","LEXU",190,0)
 I LEXDSM'="" D  Q LEX
"RTN","LEXU",191,0)
 . S LEX=LEXDSM N LEXDAT,LEXCD S LEXCD=LEXDSM S:$L(LEXCD)=3 LEXCD=LEXCD_"."
"RTN","LEXU",192,0)
 . S LEXDAT=$$ICDDX^ICDEX(LEXCD,$G(LEXVDT),1,"E")
"RTN","LEXU",193,0)
 . S:$P(LEXDAT,"^",10)'>0 LEX=""
"RTN","LEXU",194,0)
 S LEXDSM=$$ONE^LEXSRC($G(LEX),"DS3") I LEXDSM'="" D  Q LEX
"RTN","LEXU",195,0)
 . S LEX=LEXDSM N LEXDAT,LEXCD S LEXCD=LEXDSM S:$L(LEXCD)=3 LEXCD=LEXCD_"."
"RTN","LEXU",196,0)
 . S LEXDAT=$$ICDDX^ICDEX(LEXCD,$G(LEXVDT),1,"E")
"RTN","LEXU",197,0)
 . S:$P(LEXDAT,"^",10)'>0 LEX=""
"RTN","LEXU",198,0)
 Q ""
"RTN","LEXU",199,0)
 ;
"RTN","LEXU",200,0)
SCT(X,LEXVDT) ;   Filter by SNOMED CT (SCT) (Human only)
"RTN","LEXU",201,0)
 ; 
"RTN","LEXU",202,0)
 ; Input
"RTN","LEXU",203,0)
 ; 
"RTN","LEXU",204,0)
 ;    X        IEN of file 757.01
"RTN","LEXU",205,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",206,0)
 ;
"RTN","LEXU",207,0)
 ; Output
"RTN","LEXU",208,0)
 ;
"RTN","LEXU",209,0)
 ;    $$SCT    Human SNOMED Code or Null
"RTN","LEXU",210,0)
 ;             Excludes Veterinary SNOMED codes
"RTN","LEXU",211,0)
 ;
"RTN","LEXU",212,0)
 N LEXEX,LEXMC,LEXD,LEXC,LEXI,LEXO,LEXPL,LEXVT S LEXEX=+($G(X)),LEXD=$G(LEXVDT) Q:LEXEX'>0 0
"RTN","LEXU",213,0)
 S LEXC=$S(LEXD?7N:$$ONE^LEXU(+LEXEX,LEXD,"SCT"),1:$$ONE^LEXU(+LEXEX,,"SCT"))
"RTN","LEXU",214,0)
 Q:'$L(LEXC) 0  S LEXMC=+($G(^LEX(757.01,+LEXEX,1))) Q:LEXMC'>0 0  Q:'$D(^LEX(757.1,"B",LEXMC)) 0
"RTN","LEXU",215,0)
 S LEXVT=0,LEXI=0 F  S LEXI=$O(^LEX(757.1,"B",LEXMC,LEXI)) Q:+LEXI'>0  D  Q:LEXVT>0
"RTN","LEXU",216,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.1,LEXI,0)),"^",3),LEXN=$$UP^XLFSTR($P($G(^LEX(757.12,+LEXT,0)),"^",2)) S:LEXN["VETERINARY" LEXVT=1
"RTN","LEXU",217,0)
 S LEXPL=0,LEXI=0 F  S LEXI=$O(^LEX(757.21,"B",LEXEX,LEXI)) Q:+LEXI'>0  D  Q:LEXPL>0
"RTN","LEXU",218,0)
 . N LEXT,LEXN S LEXT=$P($G(^LEX(757.21,LEXI,0)),"^",2),LEXN=$P($G(^LEXT(757.2,+LEXT,0)),"^",2) S:LEXN="PLS" LEXPL=1
"RTN","LEXU",219,0)
 S LEXO=1 S:LEXVT=1 LEXO=0 S:LEXPL'>0 LEXO=0
"RTN","LEXU",220,0)
 S X=LEXO
"RTN","LEXU",221,0)
 Q X
"RTN","LEXU",222,0)
ONE(LEX,LEXVDT,LEXSAB) ; Get One Code for a Term by Source
"RTN","LEXU",223,0)
 ; 
"RTN","LEXU",224,0)
 ; Input
"RTN","LEXU",225,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",226,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",227,0)
 ;    LEXSAB   Source Abbreviation
"RTN","LEXU",228,0)
 ;
"RTN","LEXU",229,0)
 ; Output
"RTN","LEXU",230,0)
 ;
"RTN","LEXU",231,0)
 ;    $$ONE    Code or Null
"RTN","LEXU",232,0)
 ;
"RTN","LEXU",233,0)
 N LEXDAT,LEXIEN D VDT S LEXIEN=$G(LEX) Q:+($G(LEXIEN))'>0 ""
"RTN","LEXU",234,0)
 S LEXSAB=$G(LEXSAB) Q:'$L(LEXSAB) ""
"RTN","LEXU",235,0)
 I LEXSAB?1N.N,'$D(^LEX(757.03,"ASAB",LEXSAB)),$D(^LEX(757.03,+LEXSAB,0)) D
"RTN","LEXU",236,0)
 . S LEXSAB=$P($G(^LEX(757.03,+LEXSAB,0)),"^",1)
"RTN","LEXU",237,0)
 S LEXSAB=$E($G(LEXSAB),1,3) Q:$L(LEXSAB)'=3 ""
"RTN","LEXU",238,0)
 S LEX=$$ONE^LEXSRC(LEXIEN,LEXSAB,LEXVDT),LEXDAT=""
"RTN","LEXU",239,0)
 S:LEXSAB="ICD"!(LEXSAB="DS4") LEXDAT=$$ICDDX^ICDEX(LEX,LEXVDT,1,"E")
"RTN","LEXU",240,0)
 S:LEXSAB="10D" LEXDAT=$$ICDDX^ICDEX(LEX,LEXVDT,30,"E")
"RTN","LEXU",241,0)
 S:LEXSAB="ICP" LEXDAT=$$ICDOP^ICDEX(LEX,LEXVDT,2,"E")
"RTN","LEXU",242,0)
 S:LEXSAB="10P" LEXDAT=$$ICDOP^ICDEX(LEX,LEXVDT,31,"E")
"RTN","LEXU",243,0)
 S:LEXSAB="CPT" LEXDAT=$$CPT^ICPTCOD(LEX,LEXVDT)
"RTN","LEXU",244,0)
 S:LEXSAB="CPC" LEXDAT=$$CPT^ICPTCOD(LEX,LEXVDT)
"RTN","LEXU",245,0)
 Q:"^CPT^CPC"[("^"_LEXSAB_"^")&($P(LEXDAT,"^",7)'>0) ""
"RTN","LEXU",246,0)
 Q:"^ICD^ICP^10D^10P^"[("^"_LEXSAB_"^")&($P(LEXDAT,"^",10)'>0) ""
"RTN","LEXU",247,0)
 S LEX="" I +LEXDAT'>0 D
"RTN","LEXU",248,0)
 . N LEXSIEN S LEXSIEN=0
"RTN","LEXU",249,0)
 . F  S LEXSIEN=$O(^LEX(757.02,"B",LEXIEN,LEXSIEN)) Q:+LEXSIEN'>0  D  Q:+LEXDAT>0
"RTN","LEXU",250,0)
 . . Q:'$D(^LEX(757.02,"ASRC",LEXSAB,LEXSIEN))  N LEXEF,LEXHI,LEXST,LEXCD
"RTN","LEXU",251,0)
 . . S LEXEF=$O(^LEX(757.02,LEXSIEN,4,"B",(LEXVDT+.001)),-1) Q:'$L(LEXEF)
"RTN","LEXU",252,0)
 . . S LEXHI=$O(^LEX(757.02,LEXSIEN,4,"B",+LEXEF," "),-1)
"RTN","LEXU",253,0)
 . . S LEXST=$P($G(^LEX(757.02,LEXSIEN,4,+LEXHI,0)),"^",2) Q:LEXST'>0
"RTN","LEXU",254,0)
 . . S LEXCD=$P($G(^LEX(757.02,+LEXSIEN,0)),"^",2)
"RTN","LEXU",255,0)
 . . S:$L(LEXCD)&(+LEXIEN>0) LEXDAT=LEXIEN_"^"_LEXCD
"RTN","LEXU",256,0)
 Q:+LEXDAT'>0 "" S LEX=$P(LEXDAT,"^",2)
"RTN","LEXU",257,0)
 I $G(LEXLKT)["BC" D
"RTN","LEXU",258,0)
 . N LEXNAR S LEXNAR=$$UP^XLFSTR($G(^TMP("LEXSCH",$J,"NAR",0)))
"RTN","LEXU",259,0)
 . I $L($G(LEXNAR)) S:$E(LEX,1,$L($G(LEXNAR)))'=$G(LEXNAR) LEX=""
"RTN","LEXU",260,0)
 Q LEX
"RTN","LEXU",261,0)
ICD(LEX,LEXVDT) ; Get All ICD-9 Diagnosis Codes for a Term
"RTN","LEXU",262,0)
 ; 
"RTN","LEXU",263,0)
 ;   Input  
"RTN","LEXU",264,0)
 ;   
"RTN","LEXU",265,0)
 ;     LEX       IEN of file 757.01
"RTN","LEXU",266,0)
 ;     LEXVDT    Date to use for screening by codes
"RTN","LEXU",267,0)
 ;          
"RTN","LEXU",268,0)
 ;   Output 
"RTN","LEXU",269,0)
 ;   
"RTN","LEXU",270,0)
 ;     $$ICD     <ICD-9 code>;<ICD-9 code>;<etc>
"RTN","LEXU",271,0)
 ; 
"RTN","LEXU",272,0)
 D VDT S LEX=$$ALL^LEXU($G(LEX),$G(LEXVDT),"ICD")
"RTN","LEXU",273,0)
 Q LEX
"RTN","LEXU",274,0)
D10(LEX,LEXVDT) ; Get All ICD-10 Diagnosis Codes for a Term
"RTN","LEXU",275,0)
 ;
"RTN","LEXU",276,0)
 ;   Input  
"RTN","LEXU",277,0)
 ;   
"RTN","LEXU",278,0)
 ;      LEX       IEN of file 757.01
"RTN","LEXU",279,0)
 ;      LEXVDT    Date to use for screening by codes
"RTN","LEXU",280,0)
 ;          
"RTN","LEXU",281,0)
 ;   Output 
"RTN","LEXU",282,0)
 ;   
"RTN","LEXU",283,0)
 ;      $$D10     <ICD-10 code>;<ICD-10 code>;<etc>
"RTN","LEXU",284,0)
 ;          
"RTN","LEXU",285,0)
 D VDT S LEX=$$ALL^LEXU($G(LEX),$G(LEXVDT),"10D")
"RTN","LEXU",286,0)
 Q LEX
"RTN","LEXU",287,0)
 ;
"RTN","LEXU",288,0)
ALL(LEX,LEXVDT,LEXSAB) ; Get All Codes for a Term by Source
"RTN","LEXU",289,0)
 ; 
"RTN","LEXU",290,0)
 ; Input
"RTN","LEXU",291,0)
 ; 
"RTN","LEXU",292,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU",293,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU",294,0)
 ;    LEXSAB   Source Abbreviation
"RTN","LEXU",295,0)
 ;    
"RTN","LEXU",296,0)
 ; Output
"RTN","LEXU",297,0)
 ; 
"RTN","LEXU",298,0)
 ;    $$ALL    A ";" delimited string of codes
"RTN","LEXU",299,0)
 ;             of the specified coding system
"RTN","LEXU",300,0)
 ;             for the term
"RTN","LEXU",301,0)
 ;             
"RTN","LEXU",302,0)
 N LEXDAT,LEXIEN,LEXSRC,LEXI,LEXT,LEXS D VDT
"RTN","LEXU",303,0)
 S LEXIEN=+($G(LEX)) Q:+($G(LEXIEN))'>0 ""
"RTN","LEXU",304,0)
 S LEXSAB=$E($G(LEXSAB),1,3) Q:$L(LEXSAB)'=3 ""
"RTN","LEXU",305,0)
 D ALL^LEXSRC(LEX,LEXSAB,LEXVDT)
"RTN","LEXU",306,0)
 Q:+$G(LEXSRC(0))'>0 ""  S LEXI=0,LEXT=""
"RTN","LEXU",307,0)
 F  S LEXI=$O(LEXSRC(LEXI)) Q:+LEXI=0  D
"RTN","LEXU",308,0)
 . S LEXS=LEXSRC(LEXI)
"RTN","LEXU",309,0)
 . S:LEXSAB="ICD" LEXDAT=$$ICDDX^ICDEX(LEXS,$G(LEXVDT),1,"E")
"RTN","LEXU",310,0)
 . S:LEXSAB="10D" LEXDAT=$$ICDDX^ICDEX(LEXS,$G(LEXVDT),30,"E")
"RTN","LEXU",311,0)
 . S:LEXSAB="10P" LEXDAT=$$ICDOP^ICDEX(LEXS,$G(LEXVDT),31,"E")
"RTN","LEXU",312,0)
 . S:LEXSAB="CPT" LEXDAT=$$CPT^ICPTCOD(LEXS,LEXVDT)
"RTN","LEXU",313,0)
 . S:LEXSAB="CPC" LEXDAT=$$CPT^ICPTCOD(LEXS,LEXVDT)
"RTN","LEXU",314,0)
 . Q:+($G(LEXDAT))'>0
"RTN","LEXU",315,0)
 . Q:"^CPT^CPT"[("^"_LEXSAB_"^")&($P($G(LEXDAT),"^",7)'>0)
"RTN","LEXU",316,0)
 . Q:"^ICD^ICP^10D^10P^"[("^"_LEXSAB_"^")&($P($G(LEXDAT),"^",10)'>0)
"RTN","LEXU",317,0)
 . Q:(LEXT_";")[(";"_LEXS_";")  S LEXT=LEXT_";"_LEXS
"RTN","LEXU",318,0)
 S LEX="" S:$E(LEXT,1)=";" LEXT=$E(LEXT,2,$L(LEXT)) S LEX=LEXT
"RTN","LEXU",319,0)
 Q LEX
"RTN","LEXU",320,0)
HIST(CODE,SYS,ARY) ; Activation History
"RTN","LEXU",321,0)
 Q $$HIST^LEXU4($G(CODE),$G(SYS),.ARY)
"RTN","LEXU",322,0)
PERIOD(CODE,SYS,ARY) ; Return Activation Periods
"RTN","LEXU",323,0)
 Q $$PERIOD^LEXU4($G(CODE),$G(SYS),.ARY)
"RTN","LEXU",324,0)
CSDATA(CODE,CSYS,CDT,ARY) ; Code Data
"RTN","LEXU",325,0)
 N X S X=$$CSDATA^LEXU2($G(CODE),$G(CSYS),$G(CDT),.ARY) Q X
"RTN","LEXU",326,0)
ADR(LEX) ; Mailing Address
"RTN","LEXU",327,0)
 Q $$ADR^LEXU3($G(LEX))
"RTN","LEXU",328,0)
VDT ; Resolve LEXVDT
"RTN","LEXU",329,0)
 D VDT^LEXU3 Q
"RTN","LEXU",330,0)
IMPDATE(CSYS) ; Return the implementation date for a coding system
"RTN","LEXU",331,0)
 Q $$IMPDATE^LEXU5($G(CSYS))
"RTN","LEXU",332,0)
CSYS(SYS) ; Coding System Info
"RTN","LEXU",333,0)
 Q $$CSYS^LEXU5($G(SYS))
"RTN","LEXU",334,0)
FREQ(TXT) ; Frequency of text - ICR 5679
"RTN","LEXU",335,0)
 Q $$FREQ^LEXU3($G(TXT))
"RTN","LEXU",336,0)
MAX(SYS) ; Coding System search Threshold - ICR 5679
"RTN","LEXU",337,0)
 Q $$MAX^LEXU3($G(SYS))
"RTN","LEXU",338,0)
PAR(TXT,ARY) ; Parse Text into Words (for indexing)
"RTN","LEXU",339,0)
 Q $$PAR^LEXU3(TXT,.ARY)
"RTN","LEXU",340,0)
CAT(CODE) ; Get Category of Dx Code - ICR 5679
"RTN","LEXU",341,0)
 Q $$CAT^LEX10DU($G(CODE))
"RTN","LEXU",342,0)
ISCAT(CODE) ; Get Category of Dx Code - ICR 5679
"RTN","LEXU",343,0)
 Q $$ISCAT^LEX10DU($G(CODE))
"RTN","LEXU",344,0)
PFI(FRAG,CDT,ARY) ; ICD-10 Procedure Code Fragment Information - ICR 5679
"RTN","LEXU",345,0)
 Q $$PFI^LEXU4($G(FRAG),$G(CDT),.ARY)
"RTN","LEXU",346,0)
NXSAB(X,Y) ; Next Source Abbreviation
"RTN","LEXU",347,0)
 Q $$NXSAB^LEXU3($G(X),$G(Y))
"RTN","LEXU",348,0)
INC(X) ; Increment Concept Usage for a term (by subscription only)
"RTN","LEXU",349,0)
 D INC^LEXU3($G(X))
"RTN","LEXU",350,0)
 Q
"RTN","LEXU",351,0)
RECENT(X) ; Recently Updated (90 day window)
"RTN","LEXU",352,0)
 Q $$RECENT^LEXU3($G(X))
"RTN","LEXU",353,0)
RUPD(X) ; Recent Update Date
"RTN","LEXU",354,0)
 Q $$RUPD^LEXU3($G(X))
"RTN","LEXU",355,0)
LUPD(X,Y) ; Last Update
"RTN","LEXU",356,0)
 Q $$LUPD^LEXU3($G(X),$G(Y))
"RTN","LEXU",357,0)
REUSE(X,SYS) ; Is a code "re-used" (1/0)
"RTN","LEXU",358,0)
 Q $$REUSE^LEXU4($G(X),$G(SYS))
"RTN","LEXU",359,0)
REVISE(X,SYS) ; Is a code "revised" (1/0)
"RTN","LEXU",360,0)
 Q $$REVISE^LEXU4($G(X),$G(SYS))
"RTN","LEXU",361,0)
LAST(X,SYS,CDT) ; Last Activation ^ Last Inactivation Date
"RTN","LEXU",362,0)
 Q $$LAST^LEXU4($G(X),$G(SYS),$G(CDT))
"RTN","LEXU2")
0^34^B141683207
"RTN","LEXU2",1,0)
LEXU2 ;ISL/KER - Miscellaneous Lexicon Utilities ;12/19/2014
"RTN","LEXU2",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXU2",3,0)
 ;               
"RTN","LEXU2",4,0)
 ; Global Variables
"RTN","LEXU2",5,0)
 ;    ^ICPT(              ICR   5408
"RTN","LEXU2",6,0)
 ;    ^TMP("ICPTD")       ICR   1995
"RTN","LEXU2",7,0)
 ;               
"RTN","LEXU2",8,0)
 ; External References
"RTN","LEXU2",9,0)
 ;    $$CPTD^ICPTCOD      ICR   1995
"RTN","LEXU2",10,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXU2",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXU2",12,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXU2",13,0)
 ;    $$ICDD^ICDEX        ICR   5747
"RTN","LEXU2",14,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXU2",15,0)
 ;    $$MOR^ICDEX         ICR   5747
"RTN","LEXU2",16,0)
 ;    $$TITLE^XLFSTR      ICR  10104
"RTN","LEXU2",17,0)
 ;    CPTD^ICPTCOD        ICR   1995
"RTN","LEXU2",18,0)
 ;    MD^ICDEX            ICR   5747
"RTN","LEXU2",19,0)
 ;    MODA^ICPTMOD        ICR   1996
"RTN","LEXU2",20,0)
 ;               
"RTN","LEXU2",21,0)
CSDATA(CODE,CSYS,CDT,ARY) ; Get Information about a Code
"RTN","LEXU2",22,0)
 ;
"RTN","LEXU2",23,0)
 ; Input:
"RTN","LEXU2",24,0)
 ;
"RTN","LEXU2",25,0)
 ;   CODE   Classification Code (Required)
"RTN","LEXU2",26,0)
 ;   CSYS   Coding System (taken from file 757.03)
"RTN","LEXU2",27,0)
 ;             Acceptable values include
"RTN","LEXU2",28,0)
 ;             Pointer to file  757.03
"RTN","LEXU2",29,0)
 ;             SOURCE ABBREVIATION field .01
"RTN","LEXU2",30,0)
 ;             Mnemonic (3 character SOURCE ABBREVIATION 
"RTN","LEXU2",31,0)
 ;                from ASAB cross-reference)
"RTN","LEXU2",32,0)
 ;    CDT   Code Set Versioning Date (default = TODAY)
"RTN","LEXU2",33,0)
 ;   .ARY   Output array passed by reference
"RTN","LEXU2",34,0)
 ;
"RTN","LEXU2",35,0)
 ; Output: 
"RTN","LEXU2",36,0)
 ; 
"RTN","LEXU2",37,0)
 ;   $$CSDATA   1 if successful (fully or partial)
"RTN","LEXU2",38,0)
 ;              0 if unsuccessful
"RTN","LEXU2",39,0)
 ;               
"RTN","LEXU2",40,0)
 ;               or
"RTN","LEXU2",41,0)
 ;               
"RTN","LEXU2",42,0)
 ;              -1 ^ Error Message
"RTN","LEXU2",43,0)
 ;              
"RTN","LEXU2",44,0)
 ;       It is considered partially successful if:
"RTN","LEXU2",45,0)
 ;              
"RTN","LEXU2",46,0)
 ;          1)  It is in the Lexicon and not in an SDO file 
"RTN","LEXU2",47,0)
 ;          2)  It is in an SDO file and not in the Lexicon
"RTN","LEXU2",48,0)
 ;          
"RTN","LEXU2",49,0)
 ;   ARY()
"RTN","LEXU2",50,0)
 ; 
"RTN","LEXU2",51,0)
 ;
"RTN","LEXU2",52,0)
 ;    Lexicon Data
"RTN","LEXU2",53,0)
 ;    
"RTN","LEXU2",54,0)
 ;       ARY("LEX",1)         IEN ^ Preferred Term
"RTN","LEXU2",55,0)
 ;       ARY("LEX",2)         Status ^ Effective Date
"RTN","LEXU2",56,0)
 ;       ARY("LEX",3)         IEN ^ Major Concept Term
"RTN","LEXU2",57,0)
 ;       ARY("LEX",4)         IEN ^ Fully Specified Name
"RTN","LEXU2",58,0)
 ;       ARY("LEX",5)         Hierarchy (if it exists)
"RTN","LEXU2",59,0)
 ;       ARY("LEX",6,0)       Synonyms/Other Forms
"RTN","LEXU2",60,0)
 ;       ARY("LEX",6,1)         Synonym #1
"RTN","LEXU2",61,0)
 ;       ARY("LEX",6,n)         #n
"RTN","LEXU2",62,0)
 ;       ARY("LEX",7,0)       Semantic Map
"RTN","LEXU2",63,0)
 ;       ARY("LEX",7,1,1)       Class ^ Type (internal)
"RTN","LEXU2",64,0)
 ;       ARY("LEX",7,1,2)       Class ^ Type (external)
"RTN","LEXU2",65,0)
 ;       ARY("LEX",7,1,n)       #n
"RTN","LEXU2",66,0)
 ;       ARY("LEX",7,1,n)       #n
"RTN","LEXU2",67,0)
 ;       ARY("LEX",8)         Deactivated Concept Flag
"RTN","LEXU2",68,0)
 ;      
"RTN","LEXU2",69,0)
 ;    Coding System Data
"RTN","LEXU2",70,0)
 ;    
"RTN","LEXU2",71,0)
 ;       ARY("SYS",1)         IEN
"RTN","LEXU2",72,0)
 ;       ARY("SYS",2)         Short Name
"RTN","LEXU2",73,0)
 ;       ARY("SYS",3)         Age High
"RTN","LEXU2",74,0)
 ;       ARY("SYS",4)         Age Low
"RTN","LEXU2",75,0)
 ;       ARY("SYS",5)         Sex
"RTN","LEXU2",76,0)
 ;       ARY("SYS",6,0)       MDC/DRG Pairing
"RTN","LEXU2",77,0)
 ;       ARY("SYS",6,1,1)       MDC
"RTN","LEXU2",78,0)
 ;       ARY("SYS",6,1,2)       DRGs
"RTN","LEXU2",79,0)
 ;       ARY("SYS",6,n,1)       #n
"RTN","LEXU2",80,0)
 ;       ARY("SYS",6,n,2)       #n
"RTN","LEXU2",81,0)
 ;       ARY("SYS",7)         Complication/Comorbidity
"RTN","LEXU2",82,0)
 ;       ARY("SYS",8)         MDC13
"RTN","LEXU2",83,0)
 ;       ARY("SYS",9)         MDC24
"RTN","LEXU2",84,0)
 ;       ARY("SYS",10)        MDC24
"RTN","LEXU2",85,0)
 ;       ARY("SYS",11)        Unacceptable as Principal Dx
"RTN","LEXU2",86,0)
 ;       ARY("SYS",12)        Major O.R. Procedure
"RTN","LEXU2",87,0)
 ;       ARY("SYS",13)        Procedure Category
"RTN","LEXU2",88,0)
 ;       ARY("SYS",14,0)      Description
"RTN","LEXU2",89,0)
 ;       ARY("SYS",14,1)        Text 1
"RTN","LEXU2",90,0)
 ;       ARY("SYS",14,n)        #n
"RTN","LEXU2",91,0)
 ;      
"RTN","LEXU2",92,0)
 ;    Each data element will be in the following format:
"RTN","LEXU2",93,0)
 ;      
"RTN","LEXU2",94,0)
 ;       ARY(ID,SUB) = DATA
"RTN","LEXU2",95,0)
 ;       ARY(ID,SUB,"N") = NAME
"RTN","LEXU2",96,0)
 ; 
"RTN","LEXU2",97,0)
 ;         Where
"RTN","LEXU2",98,0)
 ;
"RTN","LEXU2",99,0)
 ;           ID      Identifier, may be:
"RTN","LEXU2",100,0)
 ;           
"RTN","LEXU2",101,0)
 ;                       "LEX" for Lexicon data
"RTN","LEXU2",102,0)
 ;                       "SYS" for Coding System data
"RTN","LEXU2",103,0)
 ;                     
"RTN","LEXU2",104,0)
 ;           SUB     Numeric Subscript
"RTN","LEXU2",105,0)
 ;           
"RTN","LEXU2",106,0)
 ;           DATA    This may be:
"RTN","LEXU2",107,0)
 ;           
"RTN","LEXU2",108,0)
 ;                       A value if it applies and is found
"RTN","LEXU2",109,0)
 ;                       Null if it applies but not found
"RTN","LEXU2",110,0)
 ;                       N/A if it does not apply
"RTN","LEXU2",111,0)
 ;                     
"RTN","LEXU2",112,0)
 ;           NAME    This is the common name given to the 
"RTN","LEXU2",113,0)
 ;                   data element
"RTN","LEXU2",114,0)
 ;       
"RTN","LEXU2",115,0)
 N LEXSO,LEXSRC,LEXSAB,LEXVDT,LEXSCK,LEXSTA,LEXSIEN,LEXEIEN,LEXMIEN,LEXEFF,LEXOK
"RTN","LEXU2",116,0)
 S LEXSO=$G(CODE) Q:'$L(LEXSO) "-1^Code missing"
"RTN","LEXU2",117,0)
 Q:'$D(^LEX(757.02,"CODE",(LEXSO_" "))) "-1^Invalid Code"
"RTN","LEXU2",118,0)
 S LEXSAB=$G(CSYS)
"RTN","LEXU2",119,0)
 S LEXSRC=+($$CSYS^LEXU(LEXSAB)) S:LEXSRC'>0 LEXSRC=$$SYSC^LEXU4(LEXSO)
"RTN","LEXU2",120,0)
 Q:+LEXSRC'>0 "-1^Invalid source"  S LEXSAB=$P($$CSYS^LEXU(+LEXSRC),"^",2)
"RTN","LEXU2",121,0)
 Q:$L(LEXSAB)'=3 "-1^Invalid source"
"RTN","LEXU2",122,0)
 Q:+($$CODSAB(LEXSO,LEXSAB))'>0 "-1^Invalid source for code"
"RTN","LEXU2",123,0)
 S LEXVDT=$G(CDT) D VDT^LEXU3 D LEX
"RTN","LEXU2",124,0)
 I LEXSRC=1!(LEXSRC=30) D ICDDX
"RTN","LEXU2",125,0)
 I LEXSRC=2!(LEXSRC=31) D ICDOP
"RTN","LEXU2",126,0)
 I LEXSRC=3!(LEXSRC=4) D CPTCPC
"RTN","LEXU2",127,0)
 D CS,LX
"RTN","LEXU2",128,0)
 Q:$D(ARY("LEX"))!($D(ARY("SYS"))) 1
"RTN","LEXU2",129,0)
 Q 0
"RTN","LEXU2",130,0)
LEX ; Lexicon
"RTN","LEXU2",131,0)
 Q:'$D(^LEX(757.02,"ACT",(LEXSO_" ")))  S LEXSCK=$$STATCHK^LEXSRC2(LEXSO,$G(LEXVDT),,LEXSAB)
"RTN","LEXU2",132,0)
 S LEXSTA=$P(LEXSCK,"^",1),LEXSIEN=$P(LEXSCK,"^",2),LEXEFF=$P(LEXSCK,"^",3)
"RTN","LEXU2",133,0)
 S LEXEIEN=+($G(^LEX(757.02,+LEXSIEN,0))),LEXMIEN=+($P($G(^LEX(757.02,+LEXSIEN,0)),"^",4))
"RTN","LEXU2",134,0)
 Q:LEXSIEN<0  S:LEXSTA'>0&(LEXSIEN>0)&(LEXEFF'?7N) ARY("LEX",2)=0
"RTN","LEXU2",135,0)
 S:LEXSTA?1N&(LEXSIEN>0)&(LEXEFF?7N) ARY("LEX",2)=LEXSTA_"^"_LEXEFF
"RTN","LEXU2",136,0)
 S ARY("LEX",1)=LEXEIEN_"^"_$G(^LEX(757.01,+LEXEIEN,0))
"RTN","LEXU2",137,0)
 N LEXFLG,LEXSM,LEXTIEN,LEXMC
"RTN","LEXU2",138,0)
 S LEXSM=0 F  S LEXSM=$O(^LEX(757.1,"B",LEXMIEN,LEXSM)) Q:+LEXSM'>0  D
"RTN","LEXU2",139,0)
 . N LEXN,LEXI,LEXC,LEXCE,LEXT,LEXTE S LEXN=$G(^LEX(757.1,+LEXSM,0))
"RTN","LEXU2",140,0)
 . S LEXC=$P(LEXN,"^",2),LEXT=$P(LEXN,"^",3) Q:LEXC'>0  Q:LEXT'>0
"RTN","LEXU2",141,0)
 . S LEXCE=$P($G(^LEX(757.11,+LEXC,0)),"^",2) Q:'$L(LEXCE)
"RTN","LEXU2",142,0)
 . S LEXTE=$P($G(^LEX(757.12,+LEXT,0)),"^",2) Q:'$L(LEXTE)
"RTN","LEXU2",143,0)
 . S LEXI=$O(ARY("LEX",7," "),-1)+1
"RTN","LEXU2",144,0)
 . S ARY("LEX",7,LEXI,1)=LEXC_"^"_LEXT
"RTN","LEXU2",145,0)
 . S ARY("LEX",7,LEXI,2)=LEXCE_"^"_LEXTE
"RTN","LEXU2",146,0)
 S ARY("LEX",7,0)=+($O(ARY("LEX",7," "),-1))
"RTN","LEXU2",147,0)
 S LEXTIEN=0,LEXFLG="",LEXMC="" F  S LEXTIEN=$O(^LEX(757.01,"AMC",LEXMIEN,LEXTIEN)) Q:+LEXTIEN'>0  D
"RTN","LEXU2",148,0)
 . N LEX0,LEX1,LEXT,LEXF
"RTN","LEXU2",149,0)
 . S LEX0=$G(^LEX(757.01,LEXTIEN,0)),LEX1=$G(^LEX(757.01,LEXTIEN,1)),LEXT=$P(LEX1,"^",2),LEXF=$P(LEX1,"^",5)
"RTN","LEXU2",150,0)
 . S:LEXF>0 LEXFLG=1 I LEXT=8 D
"RTN","LEXU2",151,0)
 . . N LEXE,LEXH S LEXE=$G(^LEX(757.01,+LEXTIEN,0)) S ARY("LEX",4)=LEXTIEN_"^"_LEXE
"RTN","LEXU2",152,0)
 . . S LEXH=$P($P(LEXE,"(",$L(LEXE,"(")),")") S:$L(LEXH) LEXH=$$TITLE^XLFSTR(LEXH)
"RTN","LEXU2",153,0)
 . . S:$L(LEXH) ARY("LEX",5)=LEXH
"RTN","LEXU2",154,0)
 . I LEXT=1 S LEXMC=LEXTIEN
"RTN","LEXU2",155,0)
 . I LEXT'=1,LEXT'=8,LEXTIEN'=LEXEIEN D
"RTN","LEXU2",156,0)
 . . N LEXI S LEXI=$O(ARY("LEX",6," "),-1)+1
"RTN","LEXU2",157,0)
 . . S ARY("LEX",6,LEXI)=LEXTIEN_"^"_$G(^LEX(757.01,+LEXTIEN,0)),ARY("LEX",6,0)=LEXI
"RTN","LEXU2",158,0)
 S:+LEXMC>0 ARY("LEX",3)=LEXMC_"^"_$G(^LEX(757.01,+LEXMC,0))
"RTN","LEXU2",159,0)
 S:+LEXFLG>0 ARY("LEX",8)="Deactivated Concept"
"RTN","LEXU2",160,0)
 Q
"RTN","LEXU2",161,0)
ICDDX ; ICD DX CS array
"RTN","LEXU2",162,0)
 N LEXC,LEXDAT,LEXDD,LEXDRG,LEXFY,LEXI,LEXLEXI,LEXMD,LEXMDC,LEXOUT,LEXSDO
"RTN","LEXU2",163,0)
 S LEXDAT=$$ICDDX^ICDEX(LEXSO,LEXVDT,LEXSRC,"E") Q:+LEXDAT<0  S LEXSDO=+LEXDAT
"RTN","LEXU2",164,0)
 S ARY("SYS",1)=LEXSDO,ARY("SYS",2)=$P(LEXDAT,"^",4),ARY("SYS",3)=$P(LEXDAT,"^",16)
"RTN","LEXU2",165,0)
 S ARY("SYS",4)=$P(LEXDAT,"^",15),ARY("SYS",5)=$P(LEXDAT,"^",11)
"RTN","LEXU2",166,0)
 D MD^ICDEX(80,LEXSDO,LEXVDT,.LEXMD)
"RTN","LEXU2",167,0)
 S LEXFY="" F  S LEXFY=$O(LEXMD(LEXFY)) Q:'$L(LEXFY)  D
"RTN","LEXU2",168,0)
 . N LEXNDC S LEXMDC=0 F  S LEXMDC=$O(LEXMD(LEXFY,LEXMDC)) Q:+LEXMDC'>0  D
"RTN","LEXU2",169,0)
 . . N LEXDRG,LEXLEXI S LEXDRG=$G(LEXMD(LEXFY,LEXMDC)),LEXDRG=$P(LEXDRG,";",1),LEXDRG=$TR(LEXDRG,"^",";")
"RTN","LEXU2",170,0)
 . . S LEXI=$O(ARY("SYS",6," "),-1)+1,ARY("SYS",6,LEXI,1)=LEXMDC
"RTN","LEXU2",171,0)
 . . S ARY("SYS",6,LEXI,2)=$$TM(LEXDRG,";")
"RTN","LEXU2",172,0)
 . . S ARY("SYS",6,0)=LEXI
"RTN","LEXU2",173,0)
 S ARY("SYS",7)=$P(LEXDAT,"^",19),ARY("SYS",8)=$P(LEXDAT,"^",7),ARY("SYS",9)=$P(LEXDAT,"^",13)
"RTN","LEXU2",174,0)
 S ARY("SYS",10)=$P(LEXDAT,"^",14),ARY("SYS",11)=$P(LEXDAT,"^",5)
"RTN","LEXU2",175,0)
 K LEXDD S LEXOUT=$$ICDD^ICDEX(LEXSO,.LEXDD,LEXVDT,LEXSRC) I +LEXOUT>0 D
"RTN","LEXU2",176,0)
 . N LEXI,LEXC S (LEXI,LEXC)=0 F  S LEXI=$O(LEXDD(LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",177,0)
 . . S LEXC=LEXC+1 S ARY("SYS",14,LEXC)=$G(LEXDD(LEXI)),ARY("SYS",14,0)=LEXC
"RTN","LEXU2",178,0)
 Q
"RTN","LEXU2",179,0)
ICDOP ; ICD OP CS array
"RTN","LEXU2",180,0)
 N LEXC,LEXDAT,LEXDD,LEXDRG,LEXFY,LEXI,LEXLEXI,LEXMD,LEXMDC,LEXMOR,LEXOUT,LEXSDO
"RTN","LEXU2",181,0)
 S LEXDAT=$$ICDOP^ICDEX(LEXSO,LEXVDT,LEXSRC,"E") Q:+LEXDAT<0  S LEXSDO=+LEXDAT
"RTN","LEXU2",182,0)
 S ARY("SYS",1)=LEXSDO,ARY("SYS",2)=$P(LEXDAT,"^",5),ARY("SYS",5)=$P(LEXDAT,"^",11)
"RTN","LEXU2",183,0)
 D MD^ICDEX(80.1,LEXSDO,LEXVDT,.LEXMD)
"RTN","LEXU2",184,0)
 S LEXFY="" F  S LEXFY=$O(LEXMD(LEXFY)) Q:'$L(LEXFY)  D
"RTN","LEXU2",185,0)
 . N LEXNDC S LEXMDC=0 F  S LEXMDC=$O(LEXMD(LEXFY,LEXMDC)) Q:+LEXMDC'>0  D
"RTN","LEXU2",186,0)
 . . N LEXDRG,LEXLEXI S LEXDRG=$G(LEXMD(LEXFY,LEXMDC)),LEXDRG=$P(LEXDRG,";",1),LEXDRG=$TR(LEXDRG,"^",";")
"RTN","LEXU2",187,0)
 . . S LEXI=$O(ARY("SYS",6," "),-1)+1,ARY("SYS",6,LEXI,1)=LEXMDC
"RTN","LEXU2",188,0)
 . . S ARY("SYS",6,LEXI,2)=$$TM(LEXDRG,";")
"RTN","LEXU2",189,0)
 . . S ARY("SYS",6,0)=LEXI
"RTN","LEXU2",190,0)
 S ARY("SYS",10)=$P(LEXDAT,"^",4)
"RTN","LEXU2",191,0)
 S LEXMOR=$$MOR^ICDEX(LEXSDO)
"RTN","LEXU2",192,0)
 S ARY("SYS",12)=LEXMOR
"RTN","LEXU2",193,0)
 K LEXDD S LEXOUT=$$ICDD^ICDEX(LEXSO,.LEXDD,LEXVDT,LEXSRC)
"RTN","LEXU2",194,0)
 I +LEXOUT>0 D
"RTN","LEXU2",195,0)
 . N LEXI,LEXC S (LEXI,LEXC)=0 F  S LEXI=$O(LEXDD(LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",196,0)
 . . S LEXC=LEXC+1 S ARY("SYS",14,LEXC)=$G(LEXDD(LEXI)),ARY("SYS",14,0)=LEXC
"RTN","LEXU2",197,0)
 Q
"RTN","LEXU2",198,0)
CPTCPC ; CPT-4/HCPCS
"RTN","LEXU2",199,0)
 N LEXC,LEXDAT,LEXDD,LEXDRG,LEXFY,LEXI,LEXLEXI,LEXMD,LEXMDC,LEXMOR,LEXOUT,LEXSDO
"RTN","LEXU2",200,0)
 S LEXDAT=$$CPT^ICPTCOD(LEXSO,LEXVDT) Q:+LEXDAT<0  S LEXSDO=+LEXDAT
"RTN","LEXU2",201,0)
 S ARY("SYS",1)=LEXSDO,ARY("SYS",2)=$P(LEXDAT,"^",3)
"RTN","LEXU2",202,0)
 S ARY("SYS",13)=$P(LEXDAT,"^",4) K ^TMP("ICPTD",$J)
"RTN","LEXU2",203,0)
 S LEXOUT=$$CPTD^ICPTCOD(LEXSO,,,$G(LEXVDT))
"RTN","LEXU2",204,0)
 I +LEXOUT>2,'$L($$TM($G(^TMP("ICPTD",$J,(LEXOUT-1))))) D
"RTN","LEXU2",205,0)
 . K ^TMP("ICPTD",$J,(LEXOUT-1)),^TMP("ICPTD",$J,LEXOUT)
"RTN","LEXU2",206,0)
 I +LEXOUT>0 D
"RTN","LEXU2",207,0)
 . N LEXI,LEXC S (LEXI,LEXC)=0 F  S LEXI=$O(^TMP("ICPTD",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",208,0)
 . . S LEXC=LEXC+1 S ARY("SYS",14,LEXC)=$G(^TMP("ICPTD",$J,LEXI)),ARY("SYS",14,0)=LEXC
"RTN","LEXU2",209,0)
 K ^TMP("ICPTD",$J)
"RTN","LEXU2",210,0)
 Q
"RTN","LEXU2",211,0)
CS ; CS Segment if CS is NULL
"RTN","LEXU2",212,0)
 N LEXI,LEXC S LEXSRC=+($G(LEXSRC))
"RTN","LEXU2",213,0)
 S ARY("SYS",1)=$G(ARY("SYS",1)),ARY("SYS",1,"N")="IEN"
"RTN","LEXU2",214,0)
 S ARY("SYS",2)=$G(ARY("SYS",2)),ARY("SYS",2,"N")="Short Name"
"RTN","LEXU2",215,0)
 S ARY("SYS",3)=$G(ARY("SYS",3)),ARY("SYS",3,"N")="Age High"
"RTN","LEXU2",216,0)
 S ARY("SYS",4)=$G(ARY("SYS",4)),ARY("SYS",4,"N")="Age Low"
"RTN","LEXU2",217,0)
 S ARY("SYS",5)=$G(ARY("SYS",5)),ARY("SYS",5,"N")="Sex"
"RTN","LEXU2",218,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ARY("SYS",6,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",219,0)
 . S LEXC=LEXC+1 S ARY("SYS",6,LEXC,1)=$G(ARY("SYS",6,LEXC,1)),ARY("SYS",6,LEXC,1,"N")="MDC"
"RTN","LEXU2",220,0)
 . S ARY("SYS",6,LEXC,2)=$G(ARY("SYS",6,LEXC,2)),ARY("SYS",6,LEXC,2,"N")="DRGs"
"RTN","LEXU2",221,0)
 S ARY("SYS",6,0)=LEXC,ARY("SYS",6,0,"N")="MDC/DRG"
"RTN","LEXU2",222,0)
 S ARY("SYS",7)=$G(ARY("SYS",7)),ARY("SYS",7,"N")="Complication/Comorbidity"
"RTN","LEXU2",223,0)
 S ARY("SYS",8)=$G(ARY("SYS",8)),ARY("SYS",8,"N")="MDC13"
"RTN","LEXU2",224,0)
 S ARY("SYS",9)=$G(ARY("SYS",9)),ARY("SYS",9,"N")="MDC24"
"RTN","LEXU2",225,0)
 S ARY("SYS",10)=$G(ARY("SYS",10)),ARY("SYS",10,"N")="MDC24"
"RTN","LEXU2",226,0)
 S ARY("SYS",11)=$G(ARY("SYS",11)),ARY("SYS",11,"N")="Unacceptable as Principal Dx"
"RTN","LEXU2",227,0)
 S ARY("SYS",12)=$G(ARY("SYS",12)),ARY("SYS",12,"N")="Major O.R Procedure"
"RTN","LEXU2",228,0)
 S ARY("SYS",13)=$G(ARY("SYS",13)),ARY("SYS",13,"N")="CPT Category"
"RTN","LEXU2",229,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ARY("SYS",14,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",230,0)
 . S LEXC=LEXC+1 S ARY("SYS",14,LEXC)=$G(ARY("SYS",14,LEXC))
"RTN","LEXU2",231,0)
 S ARY("SYS",14,0)=LEXC,ARY("SYS",14,0,"N")="Description"
"RTN","LEXU2",232,0)
 I LEXSRC=1!(LEXSRC=30) D  Q
"RTN","LEXU2",233,0)
 . K ARY("SYS",12) S ARY("SYS",12)="N/A" K ARY("SYS",13) S ARY("SYS",13)="N/A"
"RTN","LEXU2",234,0)
 I LEXSRC=2!(LEXSRC=31) D  Q
"RTN","LEXU2",235,0)
 . K ARY("SYS",3) S ARY("SYS",2)="N/A" K ARY("SYS",4) S ARY("SYS",4)="N/A" K ARY("SYS",7) S ARY("SYS",7)="N/A"
"RTN","LEXU2",236,0)
 . K ARY("SYS",8) S ARY("SYS",8)="N/A" K ARY("SYS",10) S ARY("SYS",10)="N/A" K ARY("SYS",11) S ARY("SYS",11)="N/A"
"RTN","LEXU2",237,0)
 . K ARY("SYS",13) S ARY("SYS",13)="N/A"
"RTN","LEXU2",238,0)
 I LEXSRC=3!(LEXSRC=4) D  Q
"RTN","LEXU2",239,0)
 . K ARY("SYS",3) S ARY("SYS",2)="N/A" K ARY("SYS",4) S ARY("SYS",4)="N/A" K ARY("SYS",5) S ARY("SYS",5)="N/A"
"RTN","LEXU2",240,0)
 . K ARY("SYS",6) S ARY("SYS",6)="N/A" K ARY("SYS",7) S ARY("SYS",7)="N/A" K ARY("SYS",8) S ARY("SYS",8)="N/A"
"RTN","LEXU2",241,0)
 . K ARY("SYS",9) S ARY("SYS",9)="N/A" K ARY("SYS",10) S ARY("SYS",10)="N/A"  K ARY("SYS",11) S ARY("SYS",11)="N/A"
"RTN","LEXU2",242,0)
 . K ARY("SYS",12) S ARY("SYS",12)="N/A"
"RTN","LEXU2",243,0)
 K ARY("SYS") S ARY("SYS",1)="N/A",ARY("SYS",2)="N/A",ARY("SYS",3)="N/A",ARY("SYS",4)="N/A",ARY("SYS",5)="N/A"
"RTN","LEXU2",244,0)
 S ARY("SYS",6)="N/A",ARY("SYS",7)="N/A",ARY("SYS",8)="N/A",ARY("SYS",9)="N/A",ARY("SYS",10)="N/A"
"RTN","LEXU2",245,0)
 S ARY("SYS",11)="N/A",ARY("SYS",12)="N/A",ARY("SYS",13)="N/A",ARY("SYS",14)="N/A"
"RTN","LEXU2",246,0)
 Q
"RTN","LEXU2",247,0)
LX ; Lexicon Segment 
"RTN","LEXU2",248,0)
 N LEXC,LEXI S ARY("LEX",1)=$G(ARY("LEX",1)),ARY("LEX",1,"N")="IEN ^ Preferred Term"
"RTN","LEXU2",249,0)
 S ARY("LEX",2)=$G(ARY("LEX",2)),ARY("LEX",2,"N")="Status ^ Effective Date"
"RTN","LEXU2",250,0)
 S ARY("LEX",3)=$G(ARY("LEX",3)),ARY("LEX",3,"N")="IEN ^ Major Concept Term"
"RTN","LEXU2",251,0)
 S ARY("LEX",4)=$G(ARY("LEX",4)),ARY("LEX",4,"N")="IEN ^ Fully Specified Name"
"RTN","LEXU2",252,0)
 S ARY("LEX",5)=$G(ARY("LEX",5)),ARY("LEX",5,"N")="Hierarchy (if exists)"
"RTN","LEXU2",253,0)
 S ARY("LEX",6,0)=$G(ARY("LEX",6,0)),ARY("LEX",6,0,"N")="Synonyms and Other Forms"
"RTN","LEXU2",254,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ARY("LEX",6,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",255,0)
 . S LEXC=LEXC+1 S ARY("LEX",6,LEXC)=$G(ARY("LEX",6,LEXC))
"RTN","LEXU2",256,0)
 S ARY("LEX",6,0)=LEXC
"RTN","LEXU2",257,0)
 S ARY("LEX",7,0)=$G(ARY("LEX",7,0)),ARY("LEX",7,0,"N")="Semantic Map"
"RTN","LEXU2",258,0)
 S (LEXI,LEXC)=0 F  S LEXI=$O(ARY("LEX",7,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU2",259,0)
 . S LEXC=LEXC+1 S ARY("LEX",7,LEXC,1)=$G(ARY("LEX",7,LEXC,1))
"RTN","LEXU2",260,0)
 . S ARY("LEX",7,LEXC,1,"N")="Semantic Class ^ Semantic Type (internal)"
"RTN","LEXU2",261,0)
 . S ARY("LEX",7,LEXC,2)=$G(ARY("LEX",7,LEXC,2))
"RTN","LEXU2",262,0)
 . S ARY("LEX",7,LEXC,2,"N")="Semantic Class ^ Semantic Type (external)"
"RTN","LEXU2",263,0)
 S ARY("LEX",7,0)=LEXC
"RTN","LEXU2",264,0)
 S ARY("LEX",8)=$G(ARY("LEX",8)),ARY("LEX",8,"N")="Deactivated Concept Flag"
"RTN","LEXU2",265,0)
 Q
"RTN","LEXU2",266,0)
 ;       
"RTN","LEXU2",267,0)
MODS ; CPT Modifiers
"RTN","LEXU2",268,0)
 N IEN,STR,MAX,OUT,LEN,CODE,TD S TD=$$DT^XLFDT,MAX=0,OUT=""
"RTN","LEXU2",269,0)
 S IEN=0 F  S IEN=$O(^ICPT(IEN)) Q:+IEN'>0  D
"RTN","LEXU2",270,0)
 . S CODE=$P($G(^ICPT(IEN,0)),"^",1)
"RTN","LEXU2",271,0)
 . K ARY D MS(CODE,TD,.ARY)
"RTN","LEXU2",272,0)
 Q
"RTN","LEXU2",273,0)
MS(X,CDT,LEXS) ; Modifier Strings
"RTN","LEXU2",274,0)
 N LEXDT,LEXSO,LEXCT,LEX,LEXM,LEXMOD K LEXS S LEXSO=$G(X),LEXDT=$G(CDT) S:LEXDT'?7N LEXDT=$$DT^XLFDT D MODA^ICPTMOD(LEXSO,LEXDT,.LEX)
"RTN","LEXU2",275,0)
 S LEXMOD="",LEXM="",LEXCT=0 F  S LEXM=$O(LEX("A",LEXM)) Q:'$L(LEXM)  D
"RTN","LEXU2",276,0)
 . Q:$L(LEXM)'=2  S LEXCT=LEXCT+1,LEXMOD=LEXMOD_"^"_LEXM
"RTN","LEXU2",277,0)
 . I LEXCT>19 D
"RTN","LEXU2",278,0)
 . . N LEXI S LEXI=$O(LEXS(" "),-1)+1
"RTN","LEXU2",279,0)
 . . S LEXS(LEXI)=$$TM(LEXMOD,"^") S LEXMOD="",LEXCT=0
"RTN","LEXU2",280,0)
 I $L($G(LEXMOD)) D
"RTN","LEXU2",281,0)
 . N LEXI S LEXI=$O(LEXS(" "),-1)+1 S LEXS(LEXI)=$$TM(LEXMOD,"^")
"RTN","LEXU2",282,0)
 Q
"RTN","LEXU2",283,0)
CODSAB(X,Y) ; Is Code valid for SAB
"RTN","LEXU2",284,0)
 N COD,SAB,SRC,OK,SIEN S COD=$G(X),SAB=$$CSYS^LEXU($G(Y)) Q:'$L(COD) 0  Q:+SAB'>0 0
"RTN","LEXU2",285,0)
 S SAB=$P(SAB,"^",2) Q:'$L(SAB) 0  Q:'$D(^LEX(757.03,"ASAB",SAB)) 0
"RTN","LEXU2",286,0)
 S SRC=$O(^LEX(757.03,"ASAB",SAB,0)) Q:+SRC'>0 0  S OK=0
"RTN","LEXU2",287,0)
 S SIEN=0 F  S SIEN=$O(^LEX(757.02,"CODE",(COD_" "),SIEN)) Q:+SIEN'>0  D
"RTN","LEXU2",288,0)
 . S:$P($G(^LEX(757.02,+SIEN,0)),"^",3)=SRC OK=1
"RTN","LEXU2",289,0)
 S X=OK
"RTN","LEXU2",290,0)
 Q X
"RTN","LEXU2",291,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXU2",292,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXU2",293,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXU2",294,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXU2",295,0)
 Q X
"RTN","LEXU3")
0^38^B42132473
"RTN","LEXU3",1,0)
LEXU3 ;ISL/KER - Miscellaneous Lexicon Utilities ;12/19/2014
"RTN","LEXU3",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXU3",3,0)
 ;               
"RTN","LEXU3",4,0)
 ; Global Variables
"RTN","LEXU3",5,0)
 ;    ^LEX(757.001)       N/A
"RTN","LEXU3",6,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXU3",7,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXU3",8,0)
 ;               
"RTN","LEXU3",9,0)
 ; External References
"RTN","LEXU3",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXU3",11,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXU3",12,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXU3",13,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXU3",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXU3",15,0)
 ;    ^DIC                ICR  10006
"RTN","LEXU3",16,0)
 ;               
"RTN","LEXU3",17,0)
ADR(LEX) ; Mailing Address
"RTN","LEXU3",18,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M"
"RTN","LEXU3",19,0)
 S (LEX,X)="FO-SLCDOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXU3",20,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC-SLCDOMAIN.EXT"
"RTN","LEXU3",21,0)
 D ^DIC Q:+Y>0 LEX
"RTN","LEXU3",22,0)
 Q "ISC-SLC.DOMAIN.EXT"
"RTN","LEXU3",23,0)
VDT ; Resolve LEXVDT
"RTN","LEXU3",24,0)
 ;   Check Environment First
"RTN","LEXU3",25,0)
 N LEXSD I $P($G(LEXVDT),".",1)?7N D  Q
"RTN","LEXU3",26,0)
 . S LEXVDT=$P($G(LEXVDT),".",1)
"RTN","LEXU3",27,0)
 . S LEXVDT=$$FMADD^XLFDT(LEXVDT,0)
"RTN","LEXU3",28,0)
 . S:LEXVDT'>0 LEXVDT=$$DT^XLFDT
"RTN","LEXU3",29,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",0)=+($G(LEXVDT))
"RTN","LEXU3",30,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",1)="Version Date Check: "_$$FMTE^XLFDT($G(LEXVDT))
"RTN","LEXU3",31,0)
 ;   Check Lookup Environment Second
"RTN","LEXU3",32,0)
 S LEXSD=$P($G(^TMP("LEXSCH",$J,"VDT",0)),".",1)
"RTN","LEXU3",33,0)
 I $P($G(LEXVDT),".",1)'?7N,LEXSD?7N D
"RTN","LEXU3",34,0)
 . S LEXVDT=$P($G(LEXSD),".",1)
"RTN","LEXU3",35,0)
 . S LEXVDT=$$FMADD^XLFDT(LEXVDT,0)
"RTN","LEXU3",36,0)
 . S:LEXVDT'>0 LEXVDT=$$DT^XLFDT
"RTN","LEXU3",37,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",0)=+($G(LEXVDT))
"RTN","LEXU3",38,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",1)="Version Date Check: "_$$FMTE^XLFDT($G(LEXVDT))
"RTN","LEXU3",39,0)
 ;   Check System Clock Last
"RTN","LEXU3",40,0)
 I $P($G(LEXVDT),".",1)'?7N D
"RTN","LEXU3",41,0)
 . S LEXVDT=$$DT^XLFDT
"RTN","LEXU3",42,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",0)=+($G(LEXVDT))
"RTN","LEXU3",43,0)
 . S:$D(^TMP("LEXSCH",$J)) ^TMP("LEXSCH",$J,"VDT",1)="Version Date Check: "_$$FMTE^XLFDT($G(LEXVDT))
"RTN","LEXU3",44,0)
 Q
"RTN","LEXU3",45,0)
INC(X) ; Increment Concept Usage for a term
"RTN","LEXU3",46,0)
 N LEXIEN,LEXMC S LEXIEN=+($G(X)) Q:'$D(^LEX(757.01,+LEXIEN,0))
"RTN","LEXU3",47,0)
 S LEXMC=+($G(^LEX(757.01,+LEXIEN,1))) Q:+LEXMC'>0
"RTN","LEXU3",48,0)
 Q:'$D(^LEX(757,+LEXMC,0))  Q:+($G(^LEX(757,+LEXMC,0)))'=LEXIEN
"RTN","LEXU3",49,0)
 Q:'$D(^LEX(757.001,+LEXMC,0))
"RTN","LEXU3",50,0)
 D INC^LEXAR4(LEXMC)
"RTN","LEXU3",51,0)
 Q
"RTN","LEXU3",52,0)
FREQ(TEXT) ; Get the Frequency of use for a Text String
"RTN","LEXU3",53,0)
 ; 
"RTN","LEXU3",54,0)
 ; Input   
"RTN","LEXU3",55,0)
 ; 
"RTN","LEXU3",56,0)
 ;   TEXT     Text String
"RTN","LEXU3",57,0)
 ;   
"RTN","LEXU3",58,0)
 ; Output
"RTN","LEXU3",59,0)
 ; 
"RTN","LEXU3",60,0)
 ;   $$FREQ   Frequency of Text
"RTN","LEXU3",61,0)
 ;             
"RTN","LEXU3",62,0)
 S TEXT=$G(TEXT) Q:'$L(TEXT) 0  N X S X=TEXT K ^TMP("LEXTKN",$J) D PTX^LEXTOKN
"RTN","LEXU3",63,0)
 N LEXI,LEXT,LEXF,LEXA S LEXI=0
"RTN","LEXU3",64,0)
 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU3",65,0)
 . S LEXT="" F  S LEXT=$O(^TMP("LEXTKN",$J,LEXI,LEXT)) Q:'$L(LEXT)  D
"RTN","LEXU3",66,0)
 . . S LEXF=+($O(^LEX(757.01,"ASL",LEXT,0))) Q:LEXF'>0  S LEXA(LEXF)=LEXT
"RTN","LEXU3",67,0)
 S TEXT=+($O(LEXA(0))) K ^TMP("LEXTKN",$J)
"RTN","LEXU3",68,0)
 Q TEXT
"RTN","LEXU3",69,0)
PAR(TEXT,ARY) ; Parse Text into Words
"RTN","LEXU3",70,0)
 ;
"RTN","LEXU3",71,0)
 ; Input   
"RTN","LEXU3",72,0)
 ; 
"RTN","LEXU3",73,0)
 ;   TEXT    Text String to be parsed
"RTN","LEXU3",74,0)
 ;   ARY     Local array passed by reference
"RTN","LEXU3",75,0)
 ; 
"RTN","LEXU3",76,0)
 ; Output  
"RTN","LEXU3",77,0)
 ; 
"RTN","LEXU3",78,0)
 ;   $$PAR   Number of Words
"RTN","LEXU3",79,0)
 ;   ARY     Output array
"RTN","LEXU3",80,0)
 ;         
"RTN","LEXU3",81,0)
 ;              Words Found
"RTN","LEXU3",82,0)
 ;                 ARY(0)=#
"RTN","LEXU3",83,0)
 ;                 
"RTN","LEXU3",84,0)
 ;              Word List in the order they appear in the input variable
"RTN","LEXU3",85,0)
 ;                 ARY(1)=WORD1
"RTN","LEXU3",86,0)
 ;                 ARY(n)=WORDn
"RTN","LEXU3",87,0)
 ;                 
"RTN","LEXU3",88,0)
 ;              Words listed alphabetically with the frequency of occurrence
"RTN","LEXU3",89,0)
 ;                 ARY("B",WORDA)=# (Frequency of Use)
"RTN","LEXU3",90,0)
 ;                 ARY("B",WORDB)=#
"RTN","LEXU3",91,0)
 ;                 
"RTN","LEXU3",92,0)
 ;              Words listed in the frequency order (the order used by the search)
"RTN","LEXU3",93,0)
 ;                 ARY("L",1)=SEARCHWORD1
"RTN","LEXU3",94,0)
 ;                 ARY("L",n)=SEARCHWORDn
"RTN","LEXU3",95,0)
 ; 
"RTN","LEXU3",96,0)
 ; Special Variables used by the parsing logic:
"RTN","LEXU3",97,0)
 ; 
"RTN","LEXU3",98,0)
 ;   LEXIDX    If this variable is set, the text will use the
"RTN","LEXU3",99,0)
 ;             parsing logic used for setting cross-references.
"RTN","LEXU3",100,0)
 ;             This is the default method.
"RTN","LEXU3",101,0)
 ;             
"RTN","LEXU3",102,0)
 ;   LEXLOOK   If this variable is set, the text will use the
"RTN","LEXU3",103,0)
 ;             parsing logic used for settup up for a Lexicon
"RTN","LEXU3",104,0)
 ;             search (lookup).
"RTN","LEXU3",105,0)
 ;             
"RTN","LEXU3",106,0)
 N LEXTI,LEXTL,X S LEXTI=$D(LEXIDX),LEXTL=$D(LEXLOOK) N LEXIDX,LEXLOOK
"RTN","LEXU3",107,0)
 I LEXTI>0 S LEXIDX="",LEXTL=0 K LEXLOOK
"RTN","LEXU3",108,0)
 I LEXTL>0 S LEXLOOK="",LEXTI=0 K LEXIDX
"RTN","LEXU3",109,0)
 S:'$D(LEXLOOK)&('$D(LEXIDX)) LEXIDX=""
"RTN","LEXU3",110,0)
 S (X,TEXT)=$G(TEXT) K ^TMP("LEXTKN",$J) D PTX^LEXTOKN
"RTN","LEXU3",111,0)
 N LEXI,LEXT,LEXF,LEXA,LEXC S LEXI=0 K ARY
"RTN","LEXU3",112,0)
 F  S LEXI=$O(^TMP("LEXTKN",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXU3",113,0)
 . S LEXT="" F  S LEXT=$O(^TMP("LEXTKN",$J,LEXI,LEXT)) Q:'$L(LEXT)  D
"RTN","LEXU3",114,0)
 . . S LEXF=+($O(^LEX(757.01,"ASL",LEXT,0)))
"RTN","LEXU3",115,0)
 . . I '$D(ARY("B",LEXT)) D
"RTN","LEXU3",116,0)
 . . . N LEXC S LEXC=$O(ARY(" "),-1)+1
"RTN","LEXU3",117,0)
 . . . S ARY(+LEXC)=LEXT,ARY(0)=LEXC
"RTN","LEXU3",118,0)
 . . . S:+LEXF>0 ARY("F",+LEXF)=LEXT
"RTN","LEXU3",119,0)
 . . . S ARY("B",LEXT)=LEXF
"RTN","LEXU3",120,0)
 S LEXI=0 F  S LEXI=$O(ARY("F",LEXI)) Q:+LEXI'>0  D
"RTN","LEXU3",121,0)
 . N LEXT,LEXC S LEXT=$G(ARY("F",LEXI))
"RTN","LEXU3",122,0)
 . S LEXC=$O(ARY("L"," "),-1)+1
"RTN","LEXU3",123,0)
 . S:$L(LEXT) ARY("L",LEXC)=LEXT
"RTN","LEXU3",124,0)
 K ARY("F") S X=+($G(ARY(0))) K ^TMP("LEXTKN",$J)
"RTN","LEXU3",125,0)
 Q X
"RTN","LEXU3",126,0)
 ;
"RTN","LEXU3",127,0)
MAX(SYS) ; Get the Maximum Number of Terms to Search
"RTN","LEXU3",128,0)
 ; 
"RTN","LEXU3",129,0)
 ; Input   
"RTN","LEXU3",130,0)
 ; 
"RTN","LEXU3",131,0)
 ;   SYS       Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",132,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",133,0)
 ;  
"RTN","LEXU3",134,0)
 ; Output  
"RTN","LEXU3",135,0)
 ; 
"RTN","LEXU3",136,0)
 ;   $$MAX   Maximum number of term to look at before
"RTN","LEXU3",137,0)
 ;           issuing a warning to the user
"RTN","LEXU3",138,0)
 ;           
"RTN","LEXU3",139,0)
 N LEX S LEX=0,SYS=($G(SYS)) Q:'$L(SYS) 100000  S:SYS?1N.N LEX=+SYS
"RTN","LEXU3",140,0)
 S:+LEX'>0&($D(^LEX(757.03,"ASAB",SYS))) LEX=$O(^LEX(757.03,"ASAB",SYS,0))
"RTN","LEXU3",141,0)
 S:+LEX'>0&($D(^LEX(757.03,"B",SYS))) LEX=$O(^LEX(757.03,"B",SYS,0))
"RTN","LEXU3",142,0)
 S:+LEX'>0&($D(^LEX(757.03,"C",SYS))) LEX=$O(^LEX(757.03,"C",SYS,0))
"RTN","LEXU3",143,0)
 N Y S Y=$P($G(^LEX(757.03,+LEX,2)),"^",2) S SYS=$S(+Y>0:+Y,1:100000)
"RTN","LEXU3",144,0)
 Q SYS
"RTN","LEXU3",145,0)
NXSAB(SYS,REV) ; Get the Next/Previous Source Abbreviation
"RTN","LEXU3",146,0)
 ; 
"RTN","LEXU3",147,0)
 ; Input   
"RTN","LEXU3",148,0)
 ; 
"RTN","LEXU3",149,0)
 ;   SYS       Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",150,0)
 ;               or pointer to file 757.03
"RTN","LEXU3",151,0)
 ;               or null
"RTN","LEXU3",152,0)
 ;   REV       Direction flag (optional)
"RTN","LEXU3",153,0)
 ;                0 or null finds next in a forward direction
"RTN","LEXU3",154,0)
 ;                1 finds next in a reverse direction
"RTN","LEXU3",155,0)
 ;                 
"RTN","LEXU3",156,0)
 ; Output  
"RTN","LEXU3",157,0)
 ; 
"RTN","LEXU3",158,0)
 ;   $$NXSAB   Next Source Abbreviation in the file
"RTN","LEXU3",159,0)
 ;
"RTN","LEXU3",160,0)
 N LEXS,LEXO,LEXR,X S (LEXS,LEXO)=$G(SYS),LEXR=+($G(REV)),X=""
"RTN","LEXU3",161,0)
 I LEXS?1N.N S:$D(^LEX(757.03,+LEXS,0)) LEXO=$E($G(^LEX(757.03,+LEXS,0)),1,3)
"RTN","LEXU3",162,0)
 S:LEXR>0&(LEXO="") LEXO=" "
"RTN","LEXU3",163,0)
 S:LEXR'>0 X=$O(^LEX(757.03,"ASAB",LEXO))
"RTN","LEXU3",164,0)
 S:LEXR>0 X=$O(^LEX(757.03,"ASAB",LEXO),-1)
"RTN","LEXU3",165,0)
 Q X
"RTN","LEXU3",166,0)
RECENT(X) ; Recently Updated (90 day window)
"RTN","LEXU3",167,0)
 ;
"RTN","LEXU3",168,0)
 ; Input
"RTN","LEXU3",169,0)
 ; 
"RTN","LEXU3",170,0)
 ;    X        Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",171,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",172,0)
 ;    
"RTN","LEXU3",173,0)
 ; Output
"RTN","LEXU3",174,0)
 ; 
"RTN","LEXU3",175,0)
 ;    X        Boolean flag
"RTN","LEXU3",176,0)
 ;    
"RTN","LEXU3",177,0)
 ;             1  =  Coding system has been recently updated
"RTN","LEXU3",178,0)
 ;                     Checks for a quarterly update by
"RTN","LEXU3",179,0)
 ;                     Looking 30 days into the future
"RTN","LEXU3",180,0)
 ;                     Looking 60 days into the past
"RTN","LEXU3",181,0)
 ;                
"RTN","LEXU3",182,0)
 ;             0  =  Coding system has NOT been recently updated
"RTN","LEXU3",183,0)
 ;         
"RTN","LEXU3",184,0)
 ; This API can be used to trigger code set update protocols
"RTN","LEXU3",185,0)
 N LEXCD,LEXDF,LEXSRC,LEXTD S LEXSRC=$G(X),LEXCD=$$RUPD(LEXSRC)
"RTN","LEXU3",186,0)
 Q:LEXCD'?7N 0  S X=0 S LEXTD=$$DT^XLFDT
"RTN","LEXU3",187,0)
 I LEXCD>LEXTD S LEXDF=$$FMDIFF^XLFDT(LEXCD,LEXTD) S:LEXDF<31 X=1 Q X
"RTN","LEXU3",188,0)
 I LEXTD>LEXCD S LEXDF=$$FMDIFF^XLFDT(LEXTD,LEXCD) S:LEXDF<61 X=1 Q X
"RTN","LEXU3",189,0)
 Q:LEXTD=LEXCD 1
"RTN","LEXU3",190,0)
 Q 0
"RTN","LEXU3",191,0)
RUPD(SYS) ; Get the Date the Coding System was most Recently Updated
"RTN","LEXU3",192,0)
 ;
"RTN","LEXU3",193,0)
 ; Input
"RTN","LEXU3",194,0)
 ; 
"RTN","LEXU3",195,0)
 ;    SYS      Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",196,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",197,0)
 ;    
"RTN","LEXU3",198,0)
 ; Output
"RTN","LEXU3",199,0)
 ; 
"RTN","LEXU3",200,0)
 ;    $$RUPD   Date of most recent update based on Today+30
"RTN","LEXU3",201,0)
 ;         
"RTN","LEXU3",202,0)
 ;              or
"RTN","LEXU3",203,0)
 ;         
"RTN","LEXU3",204,0)
 ;             -1 ^ error message 
"RTN","LEXU3",205,0)
 ;    
"RTN","LEXU3",206,0)
 N LEXCDT,LEXSRC S LEXCDT=$$FMADD^XLFDT($$DT^XLFDT,30),LEXSRC=$G(SYS)
"RTN","LEXU3",207,0)
 S SYS=$$LUPD(LEXSRC,LEXCDT)
"RTN","LEXU3",208,0)
 Q SYS
"RTN","LEXU3",209,0)
LUPD(SYS,LEXVDT) ; Get the date the Coding System was Last Updated
"RTN","LEXU3",210,0)
 ;
"RTN","LEXU3",211,0)
 ; Input
"RTN","LEXU3",212,0)
 ; 
"RTN","LEXU3",213,0)
 ;    SYS      Coding System Abbreviation (757.03,.01)
"RTN","LEXU3",214,0)
 ;             or pointer to file 757.03
"RTN","LEXU3",215,0)
 ;    LEXVDT   Date used to determine last update from (optional)
"RTN","LEXU3",216,0)
 ;    
"RTN","LEXU3",217,0)
 ; Output
"RTN","LEXU3",218,0)
 ; 
"RTN","LEXU3",219,0)
 ;    $$LUPD   Date of last update based on date provided
"RTN","LEXU3",220,0)
 ;    
"RTN","LEXU3",221,0)
 ;             or
"RTN","LEXU3",222,0)
 ;         
"RTN","LEXU3",223,0)
 ;             The last date updated (ever) if a date is not supplied
"RTN","LEXU3",224,0)
 ;         
"RTN","LEXU3",225,0)
 ;             or
"RTN","LEXU3",226,0)
 ;         
"RTN","LEXU3",227,0)
 ;             -1 ^ error message 
"RTN","LEXU3",228,0)
 ;    
"RTN","LEXU3",229,0)
 N LEXCDT,LEXSAB,LEXSRC,LEXDT,LEXLUPD,LEXSYS S LEXCDT=$G(LEXVDT),LEXSRC=$G(SYS) Q:'$L(LEXSRC) "-1^Invalid coding system"
"RTN","LEXU3",230,0)
 S LEXSAB=$$CSYS^LEXU(LEXSRC) Q:+LEXSAB'>0 "-1^Invalid coding system abbreviation"
"RTN","LEXU3",231,0)
 S LEXSYS=$P(LEXSAB,"^",4) Q:'$D(LEXSYS) "-1^Invalid coding system"
"RTN","LEXU3",232,0)
 S LEXSAB=$P(LEXSAB,"^",2) Q:$L(LEXSAB)'=3 "-1^Invalid coding system abbreviation length"
"RTN","LEXU3",233,0)
 S LEXDT=$O(^LEX(757.02,"AUPD",LEXSAB,9999999),-1)
"RTN","LEXU3",234,0)
 S LEXLUPD=$O(^LEX(757.02,"AUPD",LEXSAB,(9999999+.00001)),-1)
"RTN","LEXU3",235,0)
 S:LEXCDT?7N LEXDT=$O(^LEX(757.02,"AUPD",LEXSAB,(LEXCDT+.00001)),-1)
"RTN","LEXU3",236,0)
 S SYS="-1^Invalid date" I LEXLUPD>LEXCDT D
"RTN","LEXU3",237,0)
 . S:LEXCDT?7N SYS="-1^"_LEXSYS_" coding system not implemented on "_$$FMTE^XLFDT(LEXCDT,"5Z")
"RTN","LEXU3",238,0)
 . S:LEXCDT'?7N SYS="-1^"_LEXSYS_" coding system not implemented"
"RTN","LEXU3",239,0)
 S:LEXDT?7N SYS=LEXDT
"RTN","LEXU3",240,0)
 Q SYS
"RTN","LEXU4")
0^35^B129204070
"RTN","LEXU4",1,0)
LEXU4 ;ISL/KER - Miscellaneous Lexicon Utilities ;12/19/2014
"RTN","LEXU4",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXU4",3,0)
 ;               
"RTN","LEXU4",4,0)
 ;               
"RTN","LEXU4",5,0)
 ; Global Variables
"RTN","LEXU4",6,0)
 ;    ^ICPT("BA"
"RTN","LEXU4",7,0)
 ;               
"RTN","LEXU4",8,0)
 ; External References
"RTN","LEXU4",9,0)
 ;    $$CODEABA^ICDEX     ICR   5747
"RTN","LEXU4",10,0)
 ;    $$ICDDX^ICDEX       ICR   5747
"RTN","LEXU4",11,0)
 ;    $$ICDOP^ICDEX       ICR   5747
"RTN","LEXU4",12,0)
 ;    $$ROOT^ICDEX        ICR   5747
"RTN","LEXU4",13,0)
 ;    $$CPT^ICPTCOD       ICR   1995
"RTN","LEXU4",14,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXU4",15,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXU4",16,0)
 ;               
"RTN","LEXU4",17,0)
HIST(CODE,SYS,ARY) ; Get Activation History for a Code
"RTN","LEXU4",18,0)
 ;                      
"RTN","LEXU4",19,0)
 ; Input:
"RTN","LEXU4",20,0)
 ; 
"RTN","LEXU4",21,0)
 ;    CODE   ICD Code (required)
"RTN","LEXU4",22,0)
 ;    SYS    Coding System
"RTN","LEXU4",23,0)
 ;   .ARY    Array, passed by Reference (required)
"RTN","LEXU4",24,0)
 ;                      
"RTN","LEXU4",25,0)
 ; Output:
"RTN","LEXU4",26,0)
 ;    
"RTN","LEXU4",27,0)
 ;    $$HIST  Number of Histories Found
"RTN","LEXU4",28,0)
 ;              or
"RTN","LEXU4",29,0)
 ;            -1 ^ error message
"RTN","LEXU4",30,0)
 ;    
"RTN","LEXU4",31,0)
 ;    ARY(0) = Number of Activation History
"RTN","LEXU4",32,0)
 ;    ARY(0,0) = Code ^ Source Abbreviation ^ Source Nomenclature
"RTN","LEXU4",33,0)
 ;    ARY(<date>,<status>) = Comment
"RTN","LEXU4",34,0)
 ;
"RTN","LEXU4",35,0)
 N LEXA,LEXC,LEXE,LEXI,LEXN,LEXNOM,LEXP,LEXS,LEXSAB,LEXSI,LEXSO,LEXSRC,LEXTD,X
"RTN","LEXU4",36,0)
 S LEXSO=$G(CODE) K ARY Q:'$L(LEXSO) "-1^Code missing"
"RTN","LEXU4",37,0)
 Q:'$D(^LEX(757.02,"ACT",(LEXSO_" "))) "-1^Invalid code missing"
"RTN","LEXU4",38,0)
 S LEXSAB=$G(SYS),LEXSRC=+($$CSYS^LEXU(LEXSAB))
"RTN","LEXU4",39,0)
 S:LEXSRC'>0 LEXSRC=$$SYSC(LEXSO) Q:+LEXSRC'>0 "-1^Invalid source"
"RTN","LEXU4",40,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSRC,0)),"^",2)
"RTN","LEXU4",41,0)
 S (LEXSI,LEXSAB)=$$CSYS^LEXU(+LEXSRC)
"RTN","LEXU4",42,0)
 S LEXSI=$P(LEXSI,"^",3,4)
"RTN","LEXU4",43,0)
 S LEXSAB=$P(LEXSAB,"^",2) Q:$L(LEXSAB)'=3 "-1^Invalid source"
"RTN","LEXU4",44,0)
 S LEXTD=$$DT^XLFDT F LEXI=0,1 D
"RTN","LEXU4",45,0)
 . N LEXE S LEXE=0
"RTN","LEXU4",46,0)
 . F  S LEXE=$O(^LEX(757.02,"ACT",(LEXSO_" "),LEXI,LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",47,0)
 . . N LEXS S LEXS=0
"RTN","LEXU4",48,0)
 . . F  S LEXS=$O(^LEX(757.02,"ACT",(LEXSO_" "),LEXI,LEXE,LEXS)) Q:+LEXS'>0  D
"RTN","LEXU4",49,0)
 . . . N LEXN,LEXC S LEXN=$G(^LEX(757.02,LEXS,0))
"RTN","LEXU4",50,0)
 . . . S LEXC=+($P(LEXN,"^",3)) Q:+LEXC'=LEXSRC
"RTN","LEXU4",51,0)
 . . . S:'$D(ARY(LEXE,LEXI)) ARY(0)=+($G(ARY(0)))+1
"RTN","LEXU4",52,0)
 . . . S ARY(LEXE,LEXI)=""
"RTN","LEXU4",53,0)
 S LEXA=0,LEXE=0 F  S LEXE=$O(ARY(LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",54,0)
 . S LEXS="" F  S LEXS=$O(ARY(LEXE,LEXS)) Q:'$L(LEXS)  D
"RTN","LEXU4",55,0)
 . . S:+LEXS>0 LEXA=1  K:+LEXA'>0 ARY(LEXE,LEXS)
"RTN","LEXU4",56,0)
 S LEXA=0,LEXE=0 F  S LEXE=$O(ARY(LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",57,0)
 . S LEXS="" F  S LEXS=$O(ARY(LEXE,LEXS)) Q:'$L(LEXS)  D
"RTN","LEXU4",58,0)
 . . S:+LEXS>0 LEXA=LEXA+1
"RTN","LEXU4",59,0)
 . . I +LEXS>0,LEXA=1 S ARY(LEXE,LEXS)="Activated" Q
"RTN","LEXU4",60,0)
 . . I +LEXS'>0 S ARY(LEXE,LEXS)="Inactivated" Q
"RTN","LEXU4",61,0)
 . . I +LEXS>0 D
"RTN","LEXU4",62,0)
 . . . S ARY(LEXE,LEXS)="Re-activated"
"RTN","LEXU4",63,0)
 . . . I $D(ARY(LEXE,0)) D  Q
"RTN","LEXU4",64,0)
 . . . . S ARY(LEXE,LEXS)="Revised" K ARY(LEXE,0)
"RTN","LEXU4",65,0)
 . . . S LEXP=$O(ARY(LEXE),-1) I +LEXP>0 D
"RTN","LEXU4",66,0)
 . . . . I $O(ARY(LEXE," "),-1)'>0 S ARY(LEXE,LEXS)="Re-Used" K ARY(LEXE,0)
"RTN","LEXU4",67,0)
 K ARY(0) S LEXN=0,LEXC="" F  S LEXC=$O(ARY(LEXC)) Q:'$L(LEXC)  D
"RTN","LEXU4",68,0)
 . S LEXI="" F  S LEXI=$O(ARY(LEXC,LEXI)) Q:'$L(LEXI)  D
"RTN","LEXU4",69,0)
 . . I LEXI?1N,LEXC?7N,LEXC>LEXTD,$L($G(ARY(LEXC,LEXI))) D
"RTN","LEXU4",70,0)
 . . . S ARY(LEXC,LEXI)=$G(ARY(LEXC,LEXI))_" (Pending)"
"RTN","LEXU4",71,0)
 . . S LEXN=LEXN+1
"RTN","LEXU4",72,0)
 S X=+($G(LEXN)) S:LEXN>0 ARY(0)=+($G(LEXN)) S:X'>0 X="-1^No History Found"
"RTN","LEXU4",73,0)
 S:LEXN>0&($L(LEXSI))&($L(LEXSO)) ARY(0,0)=LEXSO_"^"_LEXSI
"RTN","LEXU4",74,0)
 Q X
"RTN","LEXU4",75,0)
PERIOD(CODE,SYS,ARY) ; Get Activation/Inactivation Periods for a Code
"RTN","LEXU4",76,0)
 ;
"RTN","LEXU4",77,0)
 ; Input:
"RTN","LEXU4",78,0)
 ; 
"RTN","LEXU4",79,0)
 ;    CODE   ICD Code (required)
"RTN","LEXU4",80,0)
 ;    SYS    Coding System
"RTN","LEXU4",81,0)
 ;   .ARY    Array, passed by Reference (required)
"RTN","LEXU4",82,0)
 ;
"RTN","LEXU4",83,0)
 ; Output:
"RTN","LEXU4",84,0)
 ; 
"RTN","LEXU4",85,0)
 ;   $$PERIOD   Multiple piece "^" delimited string
"RTN","LEXU4",86,0)
 ;   
"RTN","LEXU4",87,0)
 ;              1  Number of Activation Periods found
"RTN","LEXU4",88,0)
 ;              2  Coding System (interal)
"RTN","LEXU4",89,0)
 ;              3  Source Abbreviation
"RTN","LEXU4",90,0)
 ;              4  Coding System Nomenclature
"RTN","LEXU4",91,0)
 ;              5  Coding System Name
"RTN","LEXU4",92,0)
 ;              
"RTN","LEXU4",93,0)
 ;                or
"RTN","LEXU4",94,0)
 ;              
"RTN","LEXU4",95,0)
 ;              -1^ Message (no period or error message)
"RTN","LEXU4",96,0)
 ;            
"RTN","LEXU4",97,0)
 ;   ARY(0)     Same as $$PERIOD (above)
"RTN","LEXU4",98,0)
 ;   
"RTN","LEXU4",99,0)
 ;   ARY(Activation Date) = 4 piece "^" delimited string
"RTN","LEXU4",100,0)
 ;   
"RTN","LEXU4",101,0)
 ;              1  Inactivation Date
"RTN","LEXU4",102,0)
 ;                 (conditional)
"RTN","LEXU4",103,0)
 ;            
"RTN","LEXU4",104,0)
 ;              2  Pointer to Expression file 757.01
"RTN","LEXU4",105,0)
 ;                 for the code in piece #2 above 
"RTN","LEXU4",106,0)
 ;                 (required)
"RTN","LEXU4",107,0)
 ;               
"RTN","LEXU4",108,0)
 ;              3  Variable Pointer IEN;Root of a 
"RTN","LEXU4",109,0)
 ;                 national file (see below)  Include
"RTN","LEXU4",110,0)
 ;                 when the code exist in an national
"RTN","LEXU4",111,0)
 ;                 file (conditional)
"RTN","LEXU4",112,0)
 ;                
"RTN","LEXU4",113,0)
 ;                   CPT/HCPCS Procedure code  IEN;ICPT(
"RTN","LEXU4",114,0)
 ;                   ICD Diagnosis code        IEN;ICD9(
"RTN","LEXU4",115,0)
 ;                   ICD Procedure code        IEN;ICD0(
"RTN","LEXU4",116,0)
 ;                  
"RTN","LEXU4",117,0)
 ;              4  Short Description from the SDO file
"RTN","LEXU4",118,0)
 ;                 (CPT or ICD)
"RTN","LEXU4",119,0)
 ;
"RTN","LEXU4",120,0)
 ;   ARY(Activation Date,0) = Lexicon Expression
"RTN","LEXU4",121,0)
 ;   
"RTN","LEXU4",122,0)
 ; Functions like PERIOD^ICDAPIU, except it can include
"RTN","LEXU4",123,0)
 ; any coding system in the Lexicon, not just ICD.
"RTN","LEXU4",124,0)
 ; 
"RTN","LEXU4",125,0)
 N LEXACT,LEXC,LEXD,LEXDT,LEXEF,LEXEXI,LEXEXP,LEXI,LEXIDT,LEXIEN
"RTN","LEXU4",126,0)
 N LEXINA,LEXND,LEXPDT,LEXPER,LEXSD,LEXSO,LEXSY,LEXSYS,LEXVP
"RTN","LEXU4",127,0)
 S LEXSO=$G(CODE) Q:'$L(LEXSO) "-1^Missing Code"
"RTN","LEXU4",128,0)
 Q:'$D(^LEX(757.02,"CODE",(LEXSO_" "))) "-1^Invalid Code"
"RTN","LEXU4",129,0)
 S (LEXSD,LEXSYS)=$$CSYS^LEXU(SYS),LEXSYS=+LEXSYS
"RTN","LEXU4",130,0)
 Q:+LEXSYS'>0 "-1^Missing/Invalid Coding System"
"RTN","LEXU4",131,0)
 Q:'$D(^LEX(757.03,+LEXSYS,0)) "-1^Invalid Coding System"
"RTN","LEXU4",132,0)
 Q:+($$CODSAB^LEXU2(LEXSO,LEXSYS))'>0 "-1^Invalid source for code"
"RTN","LEXU4",133,0)
 K ARY,LEXACT,LEXINA
"RTN","LEXU4",134,0)
 S LEXDT="" F  S LEXDT=$O(^LEX(757.02,"ACT",(LEXSO_" "),3,LEXDT)) Q:'$L(LEXDT)  D
"RTN","LEXU4",135,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(757.02,"ACT",(LEXSO_" "),3,LEXDT,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXU4",136,0)
 . . N LEXND,LEXSY,LEXEXI S LEXND=$G(^LEX(757.02,+LEXIEN,0)),LEXSY=$P(LEXND,"^",3),LEXEXI=+LEXND
"RTN","LEXU4",137,0)
 . . Q:LEXSY'=LEXSYS  S LEXACT(LEXDT)=LEXEXI
"RTN","LEXU4",138,0)
 S LEXDT="" F  S LEXDT=$O(^LEX(757.02,"ACT",(LEXSO_" "),2,LEXDT)) Q:'$L(LEXDT)  D
"RTN","LEXU4",139,0)
 . N LEXIEN S LEXIEN=0 F  S LEXIEN=$O(^LEX(757.02,"ACT",(LEXSO_" "),2,LEXDT,LEXIEN)) Q:+LEXIEN'>0  D
"RTN","LEXU4",140,0)
 . . N LEXND,LEXSY,LEXEXI S LEXND=$G(^LEX(757.02,+LEXIEN,0)),LEXSY=$P(LEXND,"^",3),LEXEXI=+LEXND
"RTN","LEXU4",141,0)
 . . Q:LEXSY'=LEXSYS  S LEXINA(LEXDT)=LEXEXI
"RTN","LEXU4",142,0)
 S LEXDT="" F  S LEXDT=$O(LEXACT(LEXDT)) Q:'$L(LEXDT)  D
"RTN","LEXU4",143,0)
 . I $D(LEXINA(LEXDT)) D
"RTN","LEXU4",144,0)
 . . N LEXEXI,LEXPDT
"RTN","LEXU4",145,0)
 . . S LEXEXI=$G(LEXACT(LEXDT)),LEXPDT=$O(LEXACT(LEXDT),-1)
"RTN","LEXU4",146,0)
 . . S:LEXPDT?7N&(LEXEXI>0) LEXACT(LEXPDT)=LEXEXI
"RTN","LEXU4",147,0)
 . . K LEXACT(LEXDT),LEXINA(LEXDT)
"RTN","LEXU4",148,0)
 S LEXDT="" F  S LEXDT=$O(LEXACT(LEXDT)) Q:'$L(LEXDT)  D
"RTN","LEXU4",149,0)
 . N LEXIDT,LEXEXI,LEXEXP,LEXEF,LEXVP
"RTN","LEXU4",150,0)
 . ; Inactive Date
"RTN","LEXU4",151,0)
 . S LEXIDT=$O(LEXINA(LEXDT))
"RTN","LEXU4",152,0)
 . ; Lexicon Expression
"RTN","LEXU4",153,0)
 . S LEXEXI=$G(LEXACT(LEXDT))
"RTN","LEXU4",154,0)
 . S:LEXIDT?7N LEXEXI=$G(LEXINA(LEXIDT))
"RTN","LEXU4",155,0)
 . S LEXEXP="" S:+LEXEXI>0 LEXEXP=$G(^LEX(757.01,+LEXEXI,0))
"RTN","LEXU4",156,0)
 . ; Kill
"RTN","LEXU4",157,0)
 . K:LEXIDT?7N LEXINA(LEXIDT)
"RTN","LEXU4",158,0)
 . ; Effective Date
"RTN","LEXU4",159,0)
 . S LEXEF=$$DT^XLFDT S:LEXIDT?7N LEXEF=LEXIDT
"RTN","LEXU4",160,0)
 . ; Variable Pointer
"RTN","LEXU4",161,0)
 . S LEXVP=$$VP(LEXSO,LEXSYS,LEXEF)
"RTN","LEXU4",162,0)
 . ; Set array
"RTN","LEXU4",163,0)
 . S:LEXIDT'?7N LEXIDT=""
"RTN","LEXU4",164,0)
 . S LEXPER(LEXDT)=LEXIDT_"^"_LEXEXI_"^"_LEXVP
"RTN","LEXU4",165,0)
 . S:$L(LEXEXP) LEXPER(LEXDT,0)=LEXEXP
"RTN","LEXU4",166,0)
 K ARY M ARY=LEXPER
"RTN","LEXU4",167,0)
 S (LEXEF,LEXC)=0 F  S LEXEF=$O(ARY(LEXEF)) Q:LEXEF'?7N  S LEXC=LEXC+1
"RTN","LEXU4",168,0)
 S:+LEXC>0 ARY(0)=LEXC S:+LEXC'>0 ARY(0)="-1^No activation periods found for code"
"RTN","LEXU4",169,0)
 S:LEXSYS>0&($L($P($G(LEXSD),"^",3,5)))&(LEXC>0) ARY(0)=LEXC_U_LEXSYS_U_$P($G(LEXSD),"^",3,5)
"RTN","LEXU4",170,0)
 Q $G(ARY(0))
"RTN","LEXU4",171,0)
VP(CODE,SYS,EFF) ; Variable Pointer ^ Description
"RTN","LEXU4",172,0)
 N LEXDES,LEXEF,LEXI,LEXR,LEXSO,LEXSYS,LEXVP
"RTN","LEXU4",173,0)
 S LEXSO=$G(CODE),LEXSYS=+($G(SYS))
"RTN","LEXU4",174,0)
 Q:'$L(LEXSO) ""  Q:"^1^2^3^4^30^31^"'[("^"_LEXSYS_"^") ""
"RTN","LEXU4",175,0)
 S (LEXVP,LEXDES)="" S LEXEF=$G(EFF) S:LEXEF'?7N LEXEF=$$DT^XLFDT
"RTN","LEXU4",176,0)
 I LEXSYS=1!(LEXSYS=30) D
"RTN","LEXU4",177,0)
 . N LEXI,LEXR S LEXI=+($$CODEABA^ICDEX(LEXSO,80,LEXSYS)) Q:+LEXI'>0
"RTN","LEXU4",178,0)
 . S LEXR=$TR($$ROOT^ICDEX(80),"^","") Q:'$L(LEXR)
"RTN","LEXU4",179,0)
 . S LEXVP=LEXI_";"_LEXR
"RTN","LEXU4",180,0)
 . S LEXDES=$P($$ICDDX^ICDEX(LEXSO,(LEXEF+.001),LEXSYS,"E"),U,4)
"RTN","LEXU4",181,0)
 I LEXSYS=2!(LEXSYS=31) D
"RTN","LEXU4",182,0)
 . N LEXI,LEXR S LEXI=+($$CODEABA^ICDEX(LEXSO,80.1,LEXSYS)) Q:+LEXI'>0
"RTN","LEXU4",183,0)
 . S LEXR=$TR($$ROOT^ICDEX(80.1),"^","") Q:'$L(LEXR)  S LEXVP=LEXI_";"_LEXR
"RTN","LEXU4",184,0)
 . S LEXDES=$P($$ICDOP^ICDEX(LEXSO,(LEXEF+.001),LEXSYS,"E"),U,5)
"RTN","LEXU4",185,0)
 I LEXSYS=3!(LEXSYS=4) D
"RTN","LEXU4",186,0)
 . N LEXI,LEXR S LEXI=$O(^ICPT("BA",(LEXSO_" "),0)) Q:+LEXI'>0
"RTN","LEXU4",187,0)
 . S LEXR="ICPT(",LEXVP=LEXI_";"_LEXR
"RTN","LEXU4",188,0)
 . S LEXDES=$P($$CPT^ICPTCOD(LEXSO,(LEXEF+.001)),U,3)
"RTN","LEXU4",189,0)
 Q:$L(LEXVP)&($L(LEXDES)) (LEXVP_"^"_LEXDES)
"RTN","LEXU4",190,0)
 Q ""
"RTN","LEXU4",191,0)
REUSE(X,SYS) ; Is a code "re-used"
"RTN","LEXU4",192,0)
 ;
"RTN","LEXU4",193,0)
 ; Input
"RTN","LEXU4",194,0)
 ; 
"RTN","LEXU4",195,0)
 ;    X         Code
"RTN","LEXU4",196,0)
 ;    SYS       Coding System
"RTN","LEXU4",197,0)
 ;   
"RTN","LEXU4",198,0)
 ; Output
"RTN","LEXU4",199,0)
 ; 
"RTN","LEXU4",200,0)
 ;   $$REUSE    2 Piece "^" delimited string
"RTN","LEXU4",201,0)
 ;                 1  Boolean flag
"RTN","LEXU4",202,0)
 ;                     1 if the code was reused
"RTN","LEXU4",203,0)
 ;                     0 if the code has not been reused
"RTN","LEXU4",204,0)
 ;                 2  If reused, the date it was reused
"RTN","LEXU4",205,0)
 ;    
"RTN","LEXU4",206,0)
 N LEXA,LEXAC,LEXEF,LEXH,LEXHARY,LEXI,LEXRU,LEXSO,LEXSRC,LEXSYS,LEXTD,LEXREU,LEXRD
"RTN","LEXU4",207,0)
 S (LEXA,LEXI)=0,LEXTD=$G(DT) S:LEXTD'?7N LEXTD=$$DT^XLFDT S LEXSO=$G(X),LEXSYS=$G(SYS)
"RTN","LEXU4",208,0)
 S LEXSRC=+($$CSYS^LEXU(LEXSYS)),LEXH=$$ACT($G(LEXSO),$G(LEXSYS),.LEXHARY) K LEXHARY(0,0),LEXHARY(0)
"RTN","LEXU4",209,0)
 S LEXREU=0,(LEXRD,LEXD)=" " F  S LEXD=$O(LEXHARY(LEXD),-1) Q:'$L(LEXD)  D  Q:LEXREU>0
"RTN","LEXU4",210,0)
 . N LEXS,LEXE,LEXPD,LEXPS,LEXPE,LEXDIF
"RTN","LEXU4",211,0)
 . S LEXS=$O(LEXHARY(+LEXD," "),-1),LEXE=$G(LEXHARY(+LEXD,+LEXS))
"RTN","LEXU4",212,0)
 . S LEXPD=$O(LEXHARY(LEXD),-1),LEXPS=$O(LEXHARY(+LEXPD," "),-1)
"RTN","LEXU4",213,0)
 . S LEXPE=$G(LEXHARY(+LEXPD,+LEXPS))
"RTN","LEXU4",214,0)
 . Q:LEXS'?1N  Q:LEXD'?7N  Q:LEXPS'?1N  Q:LEXPD'?7N
"RTN","LEXU4",215,0)
 . S LEXDIF=$$FMDIFF^XLFDT(LEXD,LEXPD,1) Q:LEXDIF'>10
"RTN","LEXU4",216,0)
 . I LEXS=1,LEXPS=0,LEXD'=LEXPD,LEXE'=LEXPE S LEXREU=1,LEXRD=LEXD
"RTN","LEXU4",217,0)
 S X=LEXREU S:+X>0&(LEXRD?7N) $P(X,"^",2)=LEXRD
"RTN","LEXU4",218,0)
 Q X
"RTN","LEXU4",219,0)
REVISE(X,SYS) ; Is a code "revised"
"RTN","LEXU4",220,0)
 ;
"RTN","LEXU4",221,0)
 ; Input
"RTN","LEXU4",222,0)
 ; 
"RTN","LEXU4",223,0)
 ;    X         Code
"RTN","LEXU4",224,0)
 ;    SYS       Coding System
"RTN","LEXU4",225,0)
 ;   
"RTN","LEXU4",226,0)
 ;   $$REVISE   2 Piece "^" delimited string
"RTN","LEXU4",227,0)
 ;                 1  Boolean flag
"RTN","LEXU4",228,0)
 ;                     1 if the code was reused
"RTN","LEXU4",229,0)
 ;                     0 if the code has not been reused
"RTN","LEXU4",230,0)
 ;                 2  If reused, the date it was reused
"RTN","LEXU4",231,0)
 ;    
"RTN","LEXU4",232,0)
 N LEXA,LEXAC,LEXEF,LEXH,LEXHARY,LEXI,LEXRU,LEXSO,LEXSRC,LEXSYS,LEXTD,LEXREV,LEXRD
"RTN","LEXU4",233,0)
 S (LEXA,LEXI)=0,LEXTD=$G(DT) S:LEXTD'?7N LEXTD=$$DT^XLFDT S LEXSO=$G(X),LEXSYS=$G(SYS)
"RTN","LEXU4",234,0)
 S LEXSRC=+($$CSYS^LEXU(LEXSYS)),LEXH=$$ACT($G(LEXSO),$G(LEXSYS),.LEXHARY) K LEXHARY(0,0),LEXHARY(0)
"RTN","LEXU4",235,0)
 S LEXREV=0,(LEXRD,LEXD)=" " F  S LEXD=$O(LEXHARY(LEXD),-1) Q:'$L(LEXD)  D  Q:LEXREV>0
"RTN","LEXU4",236,0)
 . N LEXS,LEXE,LEXPD,LEXPS,LEXPE,LEXDIF
"RTN","LEXU4",237,0)
 . S LEXS=$O(LEXHARY(+LEXD," "),-1),LEXE=$G(LEXHARY(+LEXD,+LEXS))
"RTN","LEXU4",238,0)
 . S LEXPD=$O(LEXHARY(LEXD),-1),LEXPS=$O(LEXHARY(+LEXPD," "),-1)
"RTN","LEXU4",239,0)
 . S LEXPE=$G(LEXHARY(+LEXPD,+LEXPS))
"RTN","LEXU4",240,0)
 . Q:LEXS'?1N  Q:LEXD'?7N  Q:LEXPS'?1N  Q:LEXPD'?7N
"RTN","LEXU4",241,0)
 . I LEXPS=LEXS,LEXPD'=LEXD,LEXPE'=LEXE S LEXREV=1,LEXRD=LEXD
"RTN","LEXU4",242,0)
 S X=LEXREV S:+X>0&(LEXRD?7N) $P(X,"^",2)=LEXRD
"RTN","LEXU4",243,0)
 Q X
"RTN","LEXU4",244,0)
LAST(X,SYS,CDT) ; Last Activation ^ Inactivation
"RTN","LEXU4",245,0)
 ;
"RTN","LEXU4",246,0)
 ; Input
"RTN","LEXU4",247,0)
 ; 
"RTN","LEXU4",248,0)
 ;    X         Code
"RTN","LEXU4",249,0)
 ;    SYS       Coding System
"RTN","LEXU4",250,0)
 ;    CDT       Versioning Date
"RTN","LEXU4",251,0)
 ;   
"RTN","LEXU4",252,0)
 ;   $$LAST     2 Piece "^" delimited string
"RTN","LEXU4",253,0)
 ;                 1  Last Activation Date
"RTN","LEXU4",254,0)
 ;                 2  Last Inactivation Date
"RTN","LEXU4",255,0)
 ;              
"RTN","LEXU4",256,0)
 ;              or -1 on error/no dates found
"RTN","LEXU4",257,0)
 ;    
"RTN","LEXU4",258,0)
 N LEXARY,LEXDT,LEXLA,LEXLI,LEXO,LEXSO,LEXT,LEXTD S LEXTD=$$DT^XLFDT,LEXDT=$G(CDT) S:LEXDT'?7N LEXDT=LEXTD
"RTN","LEXU4",259,0)
 S LEXSO=$G(X) S X=$$PERIOD^LEXU4($G(LEXSO),$G(SYS),.LEXARY) Q:+($G(LEXARY(0)))'>0 -1
"RTN","LEXU4",260,0)
 S (LEXLA,LEXLI)="",LEXO=0 F  S LEXO=$O(LEXARY(LEXO)) Q:+LEXO'>0  D
"RTN","LEXU4",261,0)
 . N LEXT S LEXT=$P($G(LEXARY(LEXO)),"^",1)
"RTN","LEXU4",262,0)
 . I LEXO?7N,LEXO'>LEXDT S LEXLA=LEXO
"RTN","LEXU4",263,0)
 . I LEXT?7N,LEXT'>LEXDT S:+LEXT>+LEXLI LEXLI=LEXT
"RTN","LEXU4",264,0)
 Q:+LEXLA'>0 -1  S X=LEXLA S:LEXLI>0 X=X_"^"_LEXLI
"RTN","LEXU4",265,0)
 Q X
"RTN","LEXU4",266,0)
ACT(CODE,SYS,ARY) ; Get Activations
"RTN","LEXU4",267,0)
 N LEXA,LEXC,LEXE,LEXI,LEXN,LEXNOM,LEXP,LEXS,LEXSAB,LEXSI,LEXSO,LEXSRC,LEXTD,X S X=0
"RTN","LEXU4",268,0)
 S LEXSO=$G(CODE) K ARY Q:'$L(LEXSO) "-1^Code missing"
"RTN","LEXU4",269,0)
 Q:'$D(^LEX(757.02,"ACT",(LEXSO_" "))) "-1^Invalid code missing"
"RTN","LEXU4",270,0)
 S LEXSAB=$G(SYS),LEXSRC=+($$CSYS^LEXU(LEXSAB))
"RTN","LEXU4",271,0)
 S:LEXSRC'>0 LEXSRC=$$SYSC(LEXSO) Q:+LEXSRC'>0 "-1^Invalid source"
"RTN","LEXU4",272,0)
 S LEXNOM=$P($G(^LEX(757.03,+LEXSRC,0)),"^",2)
"RTN","LEXU4",273,0)
 S (LEXSI,LEXSAB)=$$CSYS^LEXU(+LEXSRC)
"RTN","LEXU4",274,0)
 S LEXSI=$P(LEXSI,"^",3,4)
"RTN","LEXU4",275,0)
 S LEXSAB=$P(LEXSAB,"^",2) Q:$L(LEXSAB)'=3 "-1^Invalid source"
"RTN","LEXU4",276,0)
 S LEXTD=$$DT^XLFDT F LEXI=0,1 D
"RTN","LEXU4",277,0)
 . N LEXE,LEXSTA S LEXE=0,LEXSTA=LEXI
"RTN","LEXU4",278,0)
 . F  S LEXE=$O(^LEX(757.02,"ACT",(LEXSO_" "),LEXI,LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",279,0)
 . . N LEXS S LEXS=0
"RTN","LEXU4",280,0)
 . . F  S LEXS=$O(^LEX(757.02,"ACT",(LEXSO_" "),LEXI,LEXE,LEXS)) Q:+LEXS'>0  D
"RTN","LEXU4",281,0)
 . . . N LEXN,LEXC S LEXN=$G(^LEX(757.02,LEXS,0))
"RTN","LEXU4",282,0)
 . . . S LEXC=+($P(LEXN,"^",3)) Q:+LEXC'=LEXSRC
"RTN","LEXU4",283,0)
 . . . S:'$D(ARY(LEXE,LEXSTA)) ARY(0)=+($G(ARY(0)))+1
"RTN","LEXU4",284,0)
 . . . S ARY(LEXE,LEXSTA)=+LEXN
"RTN","LEXU4",285,0)
 S LEXA=0,LEXE=0 F  S LEXE=$O(ARY(LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",286,0)
 . S LEXS="" F  S LEXS=$O(ARY(LEXE,LEXS)) Q:'$L(LEXS)  D
"RTN","LEXU4",287,0)
 . . K:+LEXS>0 ARY(LEXE,0)
"RTN","LEXU4",288,0)
 S LEXE=0 F  S LEXE=$O(ARY(LEXE)) Q:+LEXE'>0  D
"RTN","LEXU4",289,0)
 . N LEXS S LEXS="" F  S LEXS=$O(ARY(LEXE,LEXS)) Q:'$L(LEXS)  S X=X+1
"RTN","LEXU4",290,0)
 Q X
"RTN","LEXU4",291,0)
PFI(FRAG,CDT,ARY) ; Get Procedure Fragment Info
"RTN","LEXU4",292,0)
 ;
"RTN","LEXU4",293,0)
 ; Input
"RTN","LEXU4",294,0)
 ; 
"RTN","LEXU4",295,0)
 ;   FRAG    ICD-10-PCS Code Fragment
"RTN","LEXU4",296,0)
 ;    CDT    Versioning date (busines rules apply)
"RTN","LEXU4",297,0)
 ;   .ARY    Local Array passed by reference
"RTN","LEXU4",298,0)
 ;   
"RTN","LEXU4",299,0)
 ; Output
"RTN","LEXU4",300,0)
 ; 
"RTN","LEXU4",301,0)
 ;   $$PFI   1 if successful
"RTN","LEXU4",302,0)
 ;          -1 ^ Error Message if unsuccessful
"RTN","LEXU4",303,0)
 ;   ARY
"RTN","LEXU4",304,0)
 ;    
"RTN","LEXU4",305,0)
 ;          ARY(0)   5 piece "^" delimited strig
"RTN","LEXU4",306,0)
 ;                   1  Unique Id
"RTN","LEXU4",307,0)
 ;                   2  Code Fragment
"RTN","LEXU4",308,0)
 ;                   3  Date Entered
"RTN","LEXU4",309,0)
 ;                   4  Source
"RTN","LEXU4",310,0)
 ;                   5  Details
"RTN","LEXU4",311,0)
 ;                
"RTN","LEXU4",312,0)
 ;          ARY(1)   4 piece "^" delimited string
"RTN","LEXU4",313,0)
 ;                   1  Effective Date
"RTN","LEXU4",314,0)
 ;                   2  Status
"RTN","LEXU4",315,0)
 ;                   3  Effective Date External
"RTN","LEXU4",316,0)
 ;                   4  Status External
"RTN","LEXU4",317,0)
 ;                
"RTN","LEXU4",318,0)
 ;          ARY(2)    Name/Title
"RTN","LEXU4",319,0)
 ;          ARY(3)    Description
"RTN","LEXU4",320,0)
 ;          ARY(4)    Explanation
"RTN","LEXU4",321,0)
 ;          ARY(5,0)  # of synonyms included
"RTN","LEXU4",322,0)
 ;          ARY(5,n)  included synonyms
"RTN","LEXU4",323,0)
 ;    
"RTN","LEXU4",324,0)
 N LEXF,LEXI,LEXE,LEXC,LEXD,LEXN,X S LEXF=$G(FRAG) K ARY
"RTN","LEXU4",325,0)
 S LEXI=$$IMPDATE^LEXU(31) S LEXD=$G(CDT) S:'$L(LEXD) LEXD=$$DT^XLFDT
"RTN","LEXU4",326,0)
 S:LEXD?7N&(LEXI?7N)&(LEXD<LEXI) LEXD=LEXI
"RTN","LEXU4",327,0)
 Q:'$D(^LEX(757.033,"AFRAG",31,(LEXF_" "))) "-1^Invalid procedure code fragment"
"RTN","LEXU4",328,0)
 S LEXE=$O(^LEX(757.033,"AFRAG",31,(LEXF_" "),(LEXD+.001)),-1)
"RTN","LEXU4",329,0)
 Q:LEXE'?7N "-1^Fragment not active"
"RTN","LEXU4",330,0)
 S LEXN=$O(^LEX(757.033,"AFRAG",31,(LEXF_" "),+LEXE," "),-1)
"RTN","LEXU4",331,0)
 Q:+LEXN'>0 "-1^Fragment not found"
"RTN","LEXU4",332,0)
 K ARY S X=$$FIN^LEX10PR(LEXN,LEXD,.ARY)
"RTN","LEXU4",333,0)
 Q X
"RTN","LEXU4",334,0)
SYSC(X) ; System from Code (must be unique)
"RTN","LEXU4",335,0)
 ;
"RTN","LEXU4",336,0)
 ; Input:
"RTN","LEXU4",337,0)
 ;
"RTN","LEXU4",338,0)
 ;   X       Classification Code (required)
"RTN","LEXU4",339,0)
 ;
"RTN","LEXU4",340,0)
 ; Output: 
"RTN","LEXU4",341,0)
 ; 
"RTN","LEXU4",342,0)
 ;   $$SYSC  Pointer to CODING SYSTEMS file 757.03
"RTN","LEXU4",343,0)
 ;   
"RTN","LEXU4",344,0)
 ;   or 
"RTN","LEXU4",345,0)
 ;   
"RTN","LEXU4",346,0)
 ;   -1 ^ error message
"RTN","LEXU4",347,0)
 ;  
"RTN","LEXU4",348,0)
 N LEXS,LEXSIEN,LEXSO S LEXSO=$G(X) Q:'$L(LEXSO) "-1^Code missing"
"RTN","LEXU4",349,0)
 Q:'$D(^LEX(757.02,"CODE",(LEXSO_" "))) "-1^Invalid code missing"
"RTN","LEXU4",350,0)
 K LEXS S LEXSIEN=0 F  S LEXSIEN=$O(^LEX(757.02,"CODE",(LEXSO_" "),LEXSIEN)) Q:+LEXSIEN'>0  D
"RTN","LEXU4",351,0)
 . S LEXS(+($P($G(^LEX(757.02,+LEXSIEN,0)),"^",3)))=""
"RTN","LEXU4",352,0)
 I $O(LEXS(0))>0,$O(LEXS(0))=$O(LEXS(" "),-1) S X=$O(LEXS(0)) Q X
"RTN","LEXU4",353,0)
 Q "-1^Unable to resolve coding system"
"RTN","LEXU4",354,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXU4",355,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","LEXU4",356,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXU4",357,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXU4",358,0)
 Q X
"RTN","LEXU5")
0^39^B7267831
"RTN","LEXU5",1,0)
LEXU5 ;ISL/KER - Miscellaneous Lexicon Utilities ;12/19/2014
"RTN","LEXU5",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXU5",3,0)
 ;               
"RTN","LEXU5",4,0)
 ; Global Variables
"RTN","LEXU5",5,0)
 ;    ^LEX(757.001)       N/A
"RTN","LEXU5",6,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXU5",7,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXU5",8,0)
 ;               
"RTN","LEXU5",9,0)
 ; External References
"RTN","LEXU5",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXU5",11,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXU5",12,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXU5",13,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXU5",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXU5",15,0)
 ;    ^DIC                ICR  10006
"RTN","LEXU5",16,0)
 ;               
"RTN","LEXU5",17,0)
IMPDATE(SYS) ; Get the Implementation Date for a Coding System
"RTN","LEXU5",18,0)
 ; 
"RTN","LEXU5",19,0)
 ; Input
"RTN","LEXU5",20,0)
 ; 
"RTN","LEXU5",21,0)
 ;   SYS       Coding System Abbreviation (757.03,.01)
"RTN","LEXU5",22,0)
 ;             or pointer to file 757.03
"RTN","LEXU5",23,0)
 ;   
"RTN","LEXU5",24,0)
 ; Output
"RTN","LEXU5",25,0)
 ; 
"RTN","LEXU5",26,0)
 ;   $$IMPDATE  Implementation Date in FileMan format
"RTN","LEXU5",27,0)
 ;   
"RTN","LEXU5",28,0)
 N FRMT,CSIEN,IMPDATE S FRMT="I" S CSIEN=$$CSYSIEN^LEXTRAN($G(SYS)) I +CSIEN<0 Q CSIEN
"RTN","LEXU5",29,0)
 S CSIEN=$P(CSIEN,U,2) S IMPDATE=$$GET1^DIQ(757.03,CSIEN,11,FRMT)
"RTN","LEXU5",30,0)
 Q IMPDATE
"RTN","LEXU5",31,0)
CSYS(SYS) ; Get Coding System Info
"RTN","LEXU5",32,0)
 ; 
"RTN","LEXU5",33,0)
 ; Input
"RTN","LEXU5",34,0)
 ; 
"RTN","LEXU5",35,0)
 ;   SYS       Coding System Abbreviation (757.03,.01)
"RTN","LEXU5",36,0)
 ;             or pointer to file 757.03
"RTN","LEXU5",37,0)
 ;    
"RTN","LEXU5",38,0)
 ; Output
"RTN","LEXU5",39,0)
 ; 
"RTN","LEXU5",40,0)
 ;     A 13 piece caret (^) delimited string 
"RTN","LEXU5",41,0)
 ;     
"RTN","LEXU5",42,0)
 ;      1    IEN 
"RTN","LEXU5",43,0)
 ;      2    SAB (3 character source abbreviation) 
"RTN","LEXU5",44,0)
 ;      3    Source Abbreviation (3-7 char)  (#.01) 
"RTN","LEXU5",45,0)
 ;      4    Nomenclature (2-11 char) (#1) 
"RTN","LEXU5",46,0)
 ;      5    Source Title (2-52 char) (#2) 
"RTN","LEXU5",47,0)
 ;      6    Source (2-50 char) (#3) 
"RTN","LEXU5",48,0)
 ;      7    Entries (numeric) (#4) 
"RTN","LEXU5",49,0)
 ;      8    Unique Entries (numeric) (#5) 
"RTN","LEXU5",50,0)
 ;      9    Inactive Version (1-20 char) (#6) 
"RTN","LEXU5",51,0)
 ;     10    HL7 Coding System (2-40 char) (#7) 
"RTN","LEXU5",52,0)
 ;     11    SDO Version Date (date) (757.08 #.01) 
"RTN","LEXU5",53,0)
 ;     12    SDO Version Id (1-40 char) (757.08 #1) 
"RTN","LEXU5",54,0)
 ;     13    Implementation Date (date) (#11)
"RTN","LEXU5",55,0)
 ;     14    Lookup Threshold (#12)
"RTN","LEXU5",56,0)
 ;     
"RTN","LEXU5",57,0)
 N LEXSYS,LEXOUT,LEXND,LEXIEN,LEXEFF,LEXVER,LEXIMP,LEXTHR
"RTN","LEXU5",58,0)
 S LEXSYS=$G(SYS) Q:'$L(LEXSYS) "-1^Coding System missing"
"RTN","LEXU5",59,0)
 S LEXIEN=$$SIEN(LEXSYS)
"RTN","LEXU5",60,0)
 Q:+LEXIEN'>0!('$D(^LEX(757.03,+LEXIEN,0))) "-1^Coding System not found"
"RTN","LEXU5",61,0)
 S LEXSYS=$$SMNEM(+LEXIEN)
"RTN","LEXU5",62,0)
 S LEXND=$G(^LEX(757.03,+LEXIEN,0))
"RTN","LEXU5",63,0)
 Q:$L(LEXND)'>3 "-1^Invalid Coding System HUH"
"RTN","LEXU5",64,0)
 S $P(LEXND,"^",8)=$P(LEXND,"^",8)
"RTN","LEXU5",65,0)
 S LEXEFF=$O(^LEX(757.03,LEXIEN,1,"B"," "),-1)
"RTN","LEXU5",66,0)
 S LEXVER=$O(^LEX(757.03,LEXIEN,1,"B",+LEXEFF),-1)
"RTN","LEXU5",67,0)
 S LEXVER=$P($G(^LEX(757.03,LEXIEN,1,+LEXVER,0)),"^",2)
"RTN","LEXU5",68,0)
 S LEXIMP=$P($G(^LEX(757.03,LEXIEN,2)),"^",1)
"RTN","LEXU5",69,0)
 S LEXTHR=$P($G(^LEX(757.03,LEXIEN,2)),"^",2)
"RTN","LEXU5",70,0)
 S LEXOUT=LEXIEN_"^"_$E(LEXND,1,3)_"^"_LEXND_"^"_LEXEFF_"^"_LEXVER_"^"_LEXIMP_"^"_LEXTHR
"RTN","LEXU5",71,0)
 Q LEXOUT
"RTN","LEXU5",72,0)
SIEN(MNEM) ; Return code system IEN for mnemonic
"RTN","LEXU5",73,0)
 Q:'$L($G(MNEM)) "-1"
"RTN","LEXU5",74,0)
 Q:$D(^LEX(757.03,"ASAB",MNEM)) $O(^LEX(757.03,"ASAB",MNEM,""))
"RTN","LEXU5",75,0)
 Q:$D(^LEX(757.03,"B",MNEM)) $O(^LEX(757.03,"B",MNEM,""))
"RTN","LEXU5",76,0)
 Q:$D(^LEX(757.03,"B",$E(MNEM,1,3))) $O(^LEX(757.03,"B",$E(MNEM,1,3),""))
"RTN","LEXU5",77,0)
 Q:$D(^LEX(757.03,"C",MNEM)) $O(^LEX(757.03,"C",MNEM,""))
"RTN","LEXU5",78,0)
 Q:MNEM?1N.N&($D(^LEX(757.03,+MNEM,0))) +MNEM
"RTN","LEXU5",79,0)
 Q "-1"
"RTN","LEXU5",80,0)
SMNEM(SIEN) ; Return code system mnemonic for IEN
"RTN","LEXU5",81,0)
 I '$D(^LEX(757.03,+($G(SIEN)),0)) Q ""
"RTN","LEXU5",82,0)
 Q $P(^LEX(757.03,SIEN,0),"^")
"RTN","LEXU6")
0^40^B9815713
"RTN","LEXU6",1,0)
LEXU6 ;ISL/KER - Miscellaneous Lexicon Utilities ;12/19/2014
"RTN","LEXU6",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXU6",3,0)
 ;               
"RTN","LEXU6",4,0)
 ; Global Variables
"RTN","LEXU6",5,0)
 ;    ^LEX(757.001)       N/A
"RTN","LEXU6",6,0)
 ;    ^TMP("LEXSCH")      SACC 2.3.2.5.1
"RTN","LEXU6",7,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXU6",8,0)
 ;               
"RTN","LEXU6",9,0)
 ; External References
"RTN","LEXU6",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","LEXU6",11,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","LEXU6",12,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXU6",13,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXU6",14,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXU6",15,0)
 ;    ^DIC                ICR  10006
"RTN","LEXU6",16,0)
 ;               
"RTN","LEXU6",17,0)
SC(LEX,LEXS,LEXVDT) ; Filter by Semantic Class
"RTN","LEXU6",18,0)
 ;
"RTN","LEXU6",19,0)
 ; Input
"RTN","LEXU6",20,0)
 ;
"RTN","LEXU6",21,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU6",22,0)
 ;    LEXS     Filter
"RTN","LEXU6",23,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU6",24,0)
 ;
"RTN","LEXU6",25,0)
 ; Output
"RTN","LEXU6",26,0)
 ;
"RTN","LEXU6",27,0)
 ;    $$SC     1/0
"RTN","LEXU6",28,0)
 ;
"RTN","LEXU6",29,0)
 N LEXINC,LEXEXC,LEXIC,LEXEC,LEXRREC,X D VDT^LEXU
"RTN","LEXU6",30,0)
 S LEXRREC=LEX Q:'$D(^LEX(757.01,LEXRREC,0)) 0
"RTN","LEXU6",31,0)
 I $L(LEXS,";")=3,$P(LEXS,";",3)'="" D  Q:+LEXINC>0 LEXINC
"RTN","LEXU6",32,0)
 . S LEXINC=0 S LEXINC=$$SO(LEXRREC,$P(LEXS,";",3),$G(LEXVDT))
"RTN","LEXU6",33,0)
 S LEXRREC=$P(^LEX(757.01,LEXRREC,1),U,1)
"RTN","LEXU6",34,0)
 S LEXINC=0 F LEXIC=1:1:$L($P(LEXS,";",1),"/") D
"RTN","LEXU6",35,0)
 . N LEXP,LEX1,LEX2 S LEXP=$P($P(LEXS,";",1),"/",LEXIC)
"RTN","LEXU6",36,0)
 . S LEX1=$D(^LEX(757.1,"AMCC",LEXRREC,LEXP))
"RTN","LEXU6",37,0)
 . S LEX2=$D(^LEX(757.1,"AMCT",LEXRREC,LEXP))
"RTN","LEXU6",38,0)
 . I LEX1!(LEX2) D
"RTN","LEXU6",39,0)
 . . S LEXINC=1,LEXIC=$L($P(LEXS,";",1),"/")+1
"RTN","LEXU6",40,0)
 I LEXINC=0!($P(LEXS,";",2)="") K LEXIC,LEXS,LEXEC Q LEXINC
"RTN","LEXU6",41,0)
 S LEXEXC=0 F LEXEC=1:1:$L($P(LEXS,";",2),"/") D
"RTN","LEXU6",42,0)
 . N LEXP,LEX1,LEX2 S LEXP=$P($P(LEXS,";",2),"/",LEXEC)
"RTN","LEXU6",43,0)
 . S LEX1=$D(^LEX(757.1,"AMCC",LEXRREC,LEXP))
"RTN","LEXU6",44,0)
 . S LEX2=$D(^LEX(757.1,"AMCT",LEXRREC,LEXP))
"RTN","LEXU6",45,0)
 . I LEX1!(LEX2) D
"RTN","LEXU6",46,0)
 . . S LEXEXC=1,LEXEC=$L($P(LEXS,";",2),"/")+1
"RTN","LEXU6",47,0)
 I LEXINC,'LEXEXC K LEXIC,LEXS,LEXEC Q 1
"RTN","LEXU6",48,0)
 K LEXIC,LEXS,LEXEC
"RTN","LEXU6",49,0)
 Q 0
"RTN","LEXU6",50,0)
SO(LEX,LEXS,LEXVDT) ; Filter by Source
"RTN","LEXU6",51,0)
 ;
"RTN","LEXU6",52,0)
 ; Input
"RTN","LEXU6",53,0)
 ; 
"RTN","LEXU6",54,0)
 ;    LEX      IEN of file 757.01
"RTN","LEXU6",55,0)
 ;    LEXS     Filter
"RTN","LEXU6",56,0)
 ;    LEXVDT   Date to use for screening by codes
"RTN","LEXU6",57,0)
 ;
"RTN","LEXU6",58,0)
 ; Output
"RTN","LEXU6",59,0)
 ;
"RTN","LEXU6",60,0)
 ;    $$SO     1/0
"RTN","LEXU6",61,0)
 ;
"RTN","LEXU6",62,0)
 N LEXABR,LEXCR,LEXF,LEXMC,LEXMCE,LEXN0,LEXSAB,LEXSO,LEXSR,LEXSTA,LEXTR
"RTN","LEXU6",63,0)
 S LEXTR=+LEX,LEXF=0 Q:'$D(^LEX(757.01,LEXTR,0)) LEXF
"RTN","LEXU6",64,0)
 Q:'$D(^LEX(757.01,LEXTR)) LEXF
"RTN","LEXU6",65,0)
 S LEXMC=$P(^LEX(757.01,LEXTR,1),U,1)
"RTN","LEXU6",66,0)
 S LEXMCE=+(^LEX(757,+($P(^LEX(757.01,LEXTR,1),U,1)),0))
"RTN","LEXU6",67,0)
 D VDT^LEXU I LEXTR>0,LEXMCE>0,LEXTR=LEXMCE D  G SOQ
"RTN","LEXU6",68,0)
 . S LEXF=0 F LEXSR=1:1:$L(LEXS,"/") D  Q:LEXF>0
"RTN","LEXU6",69,0)
 . . S LEXABR=$P(LEXS,"/",LEXSR),LEXCR=0
"RTN","LEXU6",70,0)
 . . F  S LEXCR=$O(^LEX(757.02,"AMC",LEXMC,LEXCR)) Q:+LEXCR=0  D  Q:LEXF>0
"RTN","LEXU6",71,0)
 . . . N LEXN0,LEXSAB,LEXQ S LEXQ=0
"RTN","LEXU6",72,0)
 . . . S LEXN0=$G(^LEX(757.02,LEXCR,0))
"RTN","LEXU6",73,0)
 . . . S LEXSAB=+($P(LEXN0,U,3)),LEXSO=$P(LEXN0,U,2)
"RTN","LEXU6",74,0)
 . . . I $G(LEXLKT)["BC" D  Q:LEXQ
"RTN","LEXU6",75,0)
 . . . . N LEXNAR S LEXNAR=$G(^TMP("LEXSCH",$J,"NAR",0))
"RTN","LEXU6",76,0)
 . . . . I $L($G(LEXNAR)) S:$E(LEXSO,1,$L($G(LEXNAR)))'=$G(LEXNAR) LEXQ=1
"RTN","LEXU6",77,0)
 . . . S LEXSTA=$$STATCHK^LEXSRC2(LEXSO,$G(LEXVDT),,LEXSAB)
"RTN","LEXU6",78,0)
 . . . Q:+LEXSTA'>0  Q:$P(LEXSTA,U,2)'=LEXCR
"RTN","LEXU6",79,0)
 . . . Q:'$D(^LEX(757.03,LEXSAB,0))
"RTN","LEXU6",80,0)
 . . . S LEXSAB=$E(^LEX(757.03,LEXSAB,0),1,3)
"RTN","LEXU6",81,0)
 . . . I LEXSAB=LEXABR S LEXF=1
"RTN","LEXU6",82,0)
SOQ ; Quit Source Filter
"RTN","LEXU6",83,0)
 K LEXCR,LEXMC,LEXMCE,LEXN0,LEXSAB,LEXABR,LEXSO,LEXSR,LEXSTA,LEXTR
"RTN","LEXU6",84,0)
 Q LEXF
"RTN","LEXUH")
0^41^B105459715
"RTN","LEXUH",1,0)
LEXUH ;ISL/KER - Miscellaneous Lexicon Utilities (Help) ;12/19/2014
"RTN","LEXUH",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXUH",3,0)
 ;               
"RTN","LEXUH",4,0)
EN ; Main Entry Point
"RTN","LEXUH",5,0)
 N %ZIS,ACT,ANS,CAL,CF,COM,CONT,CT,DIR,DIRB,DIROUT,DIRUT,DNC,DTOUT,DUOUT,ENT,EOP,EXEC,EXIT
"RTN","LEXUH",6,0)
 N HDR,HLP,I,ICR,IEN,INC,INT,ITEM,LAST,LC,LEN,LIN,LINE,LOC,MAX,MEN,NAM,NEXT,PAR,POP,PRE
"RTN","LEXUH",7,0)
 N RAN,ROOT,RTN,SEL,TAG,TEXT,TOT,TXT,TXT1,TXT2,TXT3,X,Y,ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ
"RTN","LEXUH",8,0)
 N ZTRTN,ZTSAVE,ZTSK K TEXT D MA W ! S ENT=$$ASK
"RTN","LEXUH",9,0)
 S MEN=$$TM($G(SEL(+ENT))) Q:'$L(MEN)  S LOC=$$TM($G(SEL(+ENT,"A"))),NAM=$$TM($G(SEL(+ENT,"C")))
"RTN","LEXUH",10,0)
 S ICR=$$TM($G(SEL(+ENT,"I"))) S:$L(ICR) ICR="(ICR "_ICR_")" S CAL=$$TM($G(SEL(+ENT,"X")))
"RTN","LEXUH",11,0)
 K TEXT D:ENT>0 OA D:$O(TEXT(0))>0 DHLP K TEXT,COM,SEL
"RTN","LEXUH",12,0)
 Q
"RTN","LEXUH",13,0)
 ;
"RTN","LEXUH",14,0)
DHLP ;   Display Help
"RTN","LEXUH",15,0)
 N %ZIS,CF,CONT,DNC,EOP,I,LC,ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,POP
"RTN","LEXUH",16,0)
 S %ZIS("A")=" Device:  ",ZTRTN="DISP^LEXUH",ZTDESC="Display Lexicon API Help"
"RTN","LEXUH",17,0)
 S ZTIO=ION,ZTDTH=$H,%ZIS="Q",ZTSAVE("SEL(")="",ZTSAVE("ANS")="" W ! D ^%ZIS I POP K %ZIS("A") Q
"RTN","LEXUH",18,0)
 S ZTIO=ION I $D(IO("Q")) D QUE,^%ZISC,HOME^%ZIS K %ZIS("A") Q
"RTN","LEXUH",19,0)
 K %ZIS("A") D NOQUE Q
"RTN","LEXUH",20,0)
NOQUE ;   Do not queue Display
"RTN","LEXUH",21,0)
 W @IOF W:IOST["P-" !,"< Not queued, printing Lexicon API Help >",! U:IOST["P-" IO D @ZTRTN,^%ZISC,HOME^%ZIS Q
"RTN","LEXUH",22,0)
QUE ;   Task queued to print Help
"RTN","LEXUH",23,0)
 K IO("Q") D ^%ZTLOAD W !,$S($D(ZTSK):"Request Queued",1:"Request Cancelled"),! Q
"RTN","LEXUH",24,0)
 Q
"RTN","LEXUH",25,0)
DISP ; Display
"RTN","LEXUH",26,0)
 W:$L($G(IOF)) @IOF N LINE,LC,CF,CONT,EOP,EXIT S EXIT=0,EOP=+($G(IOSL))
"RTN","LEXUH",27,0)
 S:EOP=0 EOP=24 S EOP=EOP-2 S (LC,LINE)=0 F  S LINE=$O(TEXT(LINE)) Q:+LINE'>0  D  Q:EXIT
"RTN","LEXUH",28,0)
 . N TXT S TXT=$G(TEXT(LINE)) W !," ",TXT S CF=0 D LF
"RTN","LEXUH",29,0)
 I CF,EXIT>0 D EOP W:$L($G(IOF)) @IOF Q
"RTN","LEXUH",30,0)
 I 'CF D EOP W:$L($G(IOF)) @IOF
"RTN","LEXUH",31,0)
 Q
"RTN","LEXUH",32,0)
LF ;   Line Feed
"RTN","LEXUH",33,0)
 S LC=LC+1 D:IOST["P-"&(LC>(EOP-7)) EOP D:IOST'["P-"&(LC>(EOP-4)) EOP
"RTN","LEXUH",34,0)
 Q
"RTN","LEXUH",35,0)
EOP ;   End of Page
"RTN","LEXUH",36,0)
 N CONT S LC=0 W:IOST["P-" @IOF Q:IOST["P-"  W !! S CONT=$$CONT S CF=1
"RTN","LEXUH",37,0)
 Q
"RTN","LEXUH",38,0)
CONT(X) ;   Ask to Continue
"RTN","LEXUH",39,0)
 Q:+($G(EXIT))>0 "^^"  N DIR,DIROUT,DIRUT,DUOUT,DTOUT,Y S DIR(0)="EAO",DIR("A")=" Enter RETURN to continue or '^' to exit: "
"RTN","LEXUH",40,0)
 S DIR("PRE")="S:X[""?"" X=""??"" S:X[""^"" X=""^""",(DIR("?"),DIR("??"))="^D CONTH^LEXUH"
"RTN","LEXUH",41,0)
 D ^DIR S:X["^"!($D(DTOUT)) EXIT=1 Q:$D(DIROUT)!($D(DIRUT))!($D(DUOUT))!($D(DTOUT))!(X["^") "^"
"RTN","LEXUH",42,0)
 Q ""
"RTN","LEXUH",43,0)
CONTH ;      Ask to Continue Help
"RTN","LEXUH",44,0)
 W !,"     Enter either RETURN or '^'."
"RTN","LEXUH",45,0)
 Q
"RTN","LEXUH",46,0)
 ; 
"RTN","LEXUH",47,0)
ASK(X) ; Ask to Select an API
"RTN","LEXUH",48,0)
 Q:+($G(EXIT))>0 "^^"
"RTN","LEXUH",49,0)
 N IEN,ITEM,TOT,MAX,ENT,ANS,EXIT,LEN,ROOT,Y,INT S INT=" API Help available for:"
"RTN","LEXUH",50,0)
 S:$L($G(HDR)) INT=$G(HDR) S LEN=+($G(LEN)) S:+LEN'>0 LEN=10 S (MAX,ENT,ANS,EXIT)=0,U="^"
"RTN","LEXUH",51,0)
 S TOT=$O(SEL(" "),-1) G:+TOT=0 ASKQ S ANS=0 W:+TOT>1 !,INT
"RTN","LEXUH",52,0)
 S ENT=0 F  S ENT=$O(SEL(ENT)) Q:+ENT'>0  Q:((ANS>0)&(ANS'>ENT))  Q:EXIT  D  Q:EXIT
"RTN","LEXUH",53,0)
 . N ITEM,IEN,TEXT S (TEXT,ITEM)=$$TM($G(SEL(ENT))) Q:'$L(ITEM)
"RTN","LEXUH",54,0)
 . S MAX=ENT W:ENT#LEN=1 ! W !,$J(ENT,3),".  ",ITEM
"RTN","LEXUH",55,0)
 . W:TOT#LEN=0 ! S:ENT#LEN=0 ANS=$$ASKS(MAX,ENT) S:ANS["^" EXIT=1
"RTN","LEXUH",56,0)
 I TOT#LEN'=0,+ANS=0 W ! S ANS=$$ASKS(MAX,TOT) S:ANS["^" EXIT=1
"RTN","LEXUH",57,0)
 G ASKQ
"RTN","LEXUH",58,0)
 Q X
"RTN","LEXUH",59,0)
ASKS(MAX,ENT) ;   Select Multiple
"RTN","LEXUH",60,0)
 Q:+($G(EXIT))>0 "^^"
"RTN","LEXUH",61,0)
 N X,Y,LAST,NEXT,RAN,DIR,DTOUT,DUOUT,DIROUT,DIRUT,DIRB,HLP
"RTN","LEXUH",62,0)
 S MAX=+($G(MAX)),LAST=+($G(ENT)) Q:MAX'>0 -1
"RTN","LEXUH",63,0)
 S RAN=" Select 1-"_MAX_":  ",NEXT=$O(SEL(+LAST))
"RTN","LEXUH",64,0)
 S:+NEXT>0 DIR("A")=" Press <RETURN> for more, '^' to exit, or"_RAN
"RTN","LEXUH",65,0)
 S:+NEXT'>0 DIR("A")=RAN
"RTN","LEXUH",66,0)
 S HLP="    Answer must be from 1 to "_MAX_", or <Return> to continue"
"RTN","LEXUH",67,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","LEXUH",68,0)
 S (DIR("?"),DIR("??"))="^D ASKSH^LEXUH"
"RTN","LEXUH",69,0)
 S DIR(0)="NAO^1:"_MAX_":0" D ^DIR
"RTN","LEXUH",70,0)
 S:X["^^"!($D(DTOUT)) EXIT=1,X="^^"
"RTN","LEXUH",71,0)
 I X["^^"!(+($G(EXIT))>0) Q "^^"
"RTN","LEXUH",72,0)
 S Y=+Y S:$D(DTOUT)!(X["^") Y="^" K DIR
"RTN","LEXUH",73,0)
 Q Y
"RTN","LEXUH",74,0)
ASKSH ;   Select Multiple Help
"RTN","LEXUH",75,0)
 I $L($G(HLP)) W !,$G(HLP) Q
"RTN","LEXUH",76,0)
 Q
"RTN","LEXUH",77,0)
ASKQ ;   Quit Multiple
"RTN","LEXUH",78,0)
 Q:+($G(ANS))'>0 -1  S X=+($G(ANS))
"RTN","LEXUH",79,0)
 Q X
"RTN","LEXUH",80,0)
 ;
"RTN","LEXUH",81,0)
 ; Build Arrays
"RTN","LEXUH",82,0)
MA ;   Menu Array
"RTN","LEXUH",83,0)
 N MAX,TXT,LINE S MAX=0,TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","LEXUH",84,0)
 . N ACT,CAL,COM,CT,EXEC,ICR,LIN,PAR,PRE,RTN,TAG,TAGL,TXT1,TXT2,TXT3
"RTN","LEXUH",85,0)
 . S (TXT,TXT1,TXT2)="",EXEC="S TXT1=$T(APIS+"_LINE_"^LEXUH)" X EXEC
"RTN","LEXUH",86,0)
 . S TXT1=$TR($G(TXT1),"""",""),TXT=$P($G(TXT1),2) Q:'$L(TXT)
"RTN","LEXUH",87,0)
 . Q:'$L($P($G(TXT1),";;",3))  S TAG=$P($G(TXT1),";;",8),TAGL=$P($G(TXT1),";;",2)
"RTN","LEXUH",88,0)
 . S RTN=$P($G(TXT1),";;",3),ACT=$P($G(TXT1),";;",9),PAR=$P($G(TXT1),";;",10)
"RTN","LEXUH",89,0)
 . S LIN=$T(@(TAG_"^"_ACT)),ICR=$P($G(TXT1),";;",5),COM=$$TM($P(LIN,";",2,299))
"RTN","LEXUH",90,0)
 . S PRE=$P($G(TXT1),";;",7),CAL=$$TM($P(LIN,";",1))
"RTN","LEXUH",91,0)
 . S:CAL["(" CAL=$P(CAL,"(",1)_"^"_RTN_"("_$P(CAL,"(",2,299)
"RTN","LEXUH",92,0)
 . S:CAL'["(" CAL=CAL_"^"_RTN S:PRE["$$"&(CAL'["$$") CAL="$$"_CAL
"RTN","LEXUH",93,0)
 . Q:'$L(LIN)  Q:'$L(CAL)  Q:'$L(COM)
"RTN","LEXUH",94,0)
 . S TXT2=$P($G(TXT1),";;",7)_$S('$L($G(TAGL)):TAGL,1:TAG)_"^"_RTN_PAR
"RTN","LEXUH",95,0)
 . S TXT3=$P($G(TXT1),";;",11) S:$L(TXT2)>+(MAX) MAX=$L(TXT2)_"^"_TXT2
"RTN","LEXUH",96,0)
 . S TXT=TXT2,TXT=TXT_$J(" ",(43-$L(TXT)))_TXT3 S CT=$O(SEL(" "),-1)+1
"RTN","LEXUH",97,0)
 . S SEL(CT)=TXT,SEL(CT,"A")=TAG_"^"_ACT,SEL(CT,"I")=ICR,SEL(CT,"C")=COM,SEL(CT,"X")=CAL
"RTN","LEXUH",98,0)
 Q
"RTN","LEXUH",99,0)
OA ;   Output Array
"RTN","LEXUH",100,0)
 Q:'$L($G(LOC))  N TAG,RTN,COM,TXT,LINE,HDR S TAG=$P(LOC,"^",1),RTN=$P(LOC,"^",2)
"RTN","LEXUH",101,0)
 Q:'$L(TAG)  Q:'$L(RTN)  Q:'$L($$TM($T(@(TAG_"^"_RTN))))  Q:'$L(NAM)  Q:'$L(CAL)
"RTN","LEXUH",102,0)
 S:CAL="EN^LEXA1" CAL="^LEXA1" I $L($G(ICR)) S CAL=CAL_$J(" ",(65-$L(CAL)))_$G(ICR)
"RTN","LEXUH",103,0)
 S TEXT(1)=" "_CAL,TEXT(2)=" ",TEXT(3)=" "_NAM,TEXT(4)=" "
"RTN","LEXUH",104,0)
 S TXT="" F LINE=1:1  D  Q:'$L(TXT)
"RTN","LEXUH",105,0)
 . N EXEC,TXT2,TXT3,INC S (TXT,TXT2,TXT3)=""
"RTN","LEXUH",106,0)
 . S EXEC="S (TXT,TXT2)=$T("_TAG_"+"_LINE_"^"_RTN_")" X EXEC
"RTN","LEXUH",107,0)
 . S EXEC="S TXT3=$T("_TAG_"+"_(LINE+1)_"^"_RTN_")" X EXEC
"RTN","LEXUH",108,0)
 . S TXT2=$$TM(TXT2) I TXT2="Q"!(TXT2'[";") S TXT="" Q
"RTN","LEXUH",109,0)
 . S:TXT3'[";" TXT3="" S:TXT2[";" TXT2=" "_$P(TXT2,";",2,299)
"RTN","LEXUH",110,0)
 . I $L(TXT2),$L(TXT3) S INC=$O(COM(" "),-1)+1,COM(INC)=TXT2
"RTN","LEXUH",111,0)
 S LINE=0 F  S LINE=$O(COM(LINE)) Q:$L($$TM($G(COM(LINE))))  K COM(LINE)
"RTN","LEXUH",112,0)
 S LINE=999999 F  S LINE=$O(COM(LINE),-1) Q:$L($$TM($G(COM(LINE))))  K COM(LINE)
"RTN","LEXUH",113,0)
 S LINE=0 F  S LINE=$O(COM(LINE)) Q:+LINE'>0  D
"RTN","LEXUH",114,0)
 . N INC S INC=$O(TEXT(" "),-1)+1,TEXT(INC)=$G(COM(LINE))
"RTN","LEXUH",115,0)
 S LINE=$O(TEXT(" "),-1) S:+LINE>0 TEXT(0)=LINE
"RTN","LEXUH",116,0)
 K COM
"RTN","LEXUH",117,0)
 Q
"RTN","LEXUH",118,0)
 ; 
"RTN","LEXUH",119,0)
 ; Miscellaneous
"RTN","LEXUH",120,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","LEXUH",121,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXUH",122,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXUH",123,0)
 Q X
"RTN","LEXUH",124,0)
APIS ;   List of APIs
"RTN","LEXUH",125,0)
 ;;LOOK;;LEXA;;"(LEXX,LEXAP,LEXLL,LEXSUB,DATE)";;2950;;1;;;;LOOK;;LEXA;;"(X,AP,LEN,SUB,CDT,SRC,CAT)";;Main Lexicon Lookup
"RTN","LEXUH",126,0)
 ;;;;LEXA1;;;;10006;;1;;;;EN;;LEXA1;;;;Lexicon Special Lookup
"RTN","LEXUH",127,0)
 ;;$$ICDSRCH;;LEX10CS;;"(TEXT,.ARRAY,DATE,LEN,FILTER)";;5681;;2;;$$;;ICDSRCH;;LEX10CS;;"(X,ARRAY,CDT,LEN,FIL)";;ICD-9/ICD-10 Diagnosis Lookup
"RTN","LEXUH",128,0)
 ;;$$DIAGSRCH;;LEX10CS;;"(TEXT,.ARRAY,DATE,LEN,FILTER)";;5681;;2;;$$;;DIAGSRCH;;LEX10CS;;"(X,ARRAY,CDT,LEN,FIL)";;ICD-10 Diagnosis Lookup
"RTN","LEXUH",129,0)
 ;;$$PCSDIG;;LEX10CS;;"(FRAG,DATE)";;5681;;2;;$$;;PCSDIG;;LEX10CS;;"(X,CDT)";;ICD-10 Procedure Lookup
"RTN","LEXUH",130,0)
 ;;$$CODELIST;;LEX10CS;;"(SYS,SPEC,SUB,DATE,LEN,FMT)";;5681;;2;;$$;;CODELIST;;LEX10CS2;;"(X,SPEC,SUB,CDT,LEN,FIL)";;Wild Card Code Lookup
"RTN","LEXUH",131,0)
 ;;CONFIG;;LEXSET;;"(LEXNS,LEXSS,DATE)";;1609;;1;;;;CONFIG;;LEXSET;;"(NS,SS,CDT)";;Setup Search Parameters
"RTN","LEXUH",132,0)
 ;;$$SC;;LEXU;;"(Y,STRING,DATE)";;5386;;1;;$$;;SC;;LEXU6;;"(IEN,SEM,CDT)";;Filter Search by Semantics
"RTN","LEXUH",133,0)
 ;;$$SO;;LEXU;;"(Y,STRING,DATE)";;5386;;1;;$$;;SO;;LEXU6;;"(IEN,SRC,CDT)";;Filter Search by Coding System
"RTN","LEXUH",134,0)
 ;;$$SCT;;LEXU;;"(Y,DATE)";;5679;;1;;$$;;SCT;;LEXU;;"(IEN,CDT)";;Filter by SNOMED CT (Human)
"RTN","LEXUH",135,0)
 ;;$$DX;;LEXU;;"(IEN,VDT)";;5679;;3;;$$;;DX;;LEXU;;"(IEN,CDT)";;Filter by Diagnosis System
"RTN","LEXUH",136,0)
 ;;$$ONE;;LEXU;;"(IEN,DATE,SAB)";;5679;;2;;$$;;ONE;;LEXU;;"(IEN,CDT,SAB)";;One Code for Source
"RTN","LEXUH",137,0)
 ;;$$ALL;;LEXU;;"(IEN,DATE,SAB)";;5679;;3;;$$;;ALL;;LEXU;;"(IEN,CDT,SAB)";;Get all Codes for a Source
"RTN","LEXUH",138,0)
 ;;$$CPTONE;;LEXU;;"(IEN,DATE)";;1573;;1;;$$;;CPTONE;;LEXU;;"(IEN,CDT)";;Get CPT Code
"RTN","LEXUH",139,0)
 ;;$$CPCONE;;LEXU;;"(IEN,DATE)";;1573;;3;;$$;;CPCONE;;LEXU;;"(IEN,CDT)";;Get HCPCS Code
"RTN","LEXUH",140,0)
 ;;$$ICDONE;;LEXU;;"(IEN,DATE)";;1573;;1;;$$;;ICDONE;;LEXU;;"(IEN,CDT)";;Get one ICD-9-CM Code
"RTN","LEXUH",141,0)
 ;;$$ICD;;LEXU;;"(IEN,DATE)";;1573;;3;;$$;;ICD;;LEXU;;"(IEN,CDT)";;Get all ICD-9-CM Codes
"RTN","LEXUH",142,0)
 ;;$$D10ONE;;LEXU;;"(IEN,DATE)";;5679;;3;;$$;;D10ONE;;LEXU;;"(IEN,CDT)";;Get one ICD-10-CM
"RTN","LEXUH",143,0)
 ;;$$D10;;LEXU;;"(IEN,DATE)";;5679;;3;;$$;;D10;;LEXU;;"(IEN,CDT)";;Get all ICD-10-CM Codes
"RTN","LEXUH",144,0)
 ;;$$P10ONE;;LEXU;;"(IEN,DATE)";;5679;;3;;$$;;P10ONE;;LEXU;;"(IEN,CDT)";;Get one ICD-10-PCS Code
"RTN","LEXUH",145,0)
 ;;$$DSMONE;;LEXU;;(IEN);;1573;;3;;$$;;DSMONE;;LEXU;;"(IEN,CDT)";;Get one DSM-IV Code
"RTN","LEXUH",146,0)
 ;;INFO;;LEXA;;"(IEN,DATE)";;1597;;3;;;;INFO;;LEXA;;"(X,CDT)";;Get Information about a Term
"RTN","LEXUH",147,0)
 ;;EN;;LEXCODE;;"(LEXSO,DATE)";;1614;;3;;;;EN;;LEXCODE;;"(SO,CDT)";;Get Terms associated with Code
"RTN","LEXUH",148,0)
 ;;$$HIST;;LEXU;;"(CODE,SYS,.ARY)";;5679;;2;;$$;;HIST;;LEXU4;;"(CODE,SYS,.ARY)";;Get Activation History
"RTN","LEXUH",149,0)
 ;;$$PERIOD;;LEXU;;"(CODE,SYS,ARY)";;5679;;2;;$$;;PERIOD;;LEXU4;;"(CODE,SYS,.ARY)";;Get Activation Periods
"RTN","LEXUH",150,0)
 ;;$$TAX;;LEX10CS;;"(TEXT,SRC,CDT,SUB,VER)";;5681;;2;;$$;;TAX;;LEX10TAX;;"(X,SRC,CDT,SUB,VER)";;Get Taxonomies
"RTN","LEXUH",151,0)
 ;;$$CSDATA;;LEXU;;"(CODE,CSYS,VDT,.ARY)";;5679;;2;;$$;;CSDATA;;LEXU2;;"(CODE,CSYS,CDT,ARY)";;Get Code Data
"RTN","LEXUH",152,0)
 ;;$$EXP;;LEXCODE;;"(CODE,SAB,DATE)";;5680;;3;;$$;;EXP;;LEXCODE;;"(SO,SAB,CDT)";;Get the Term for a Code
"RTN","LEXUH",153,0)
 ;;$$CAT;;LEXU;;(CODE);;5679;;2;;$$;;CAT;;LEX10DU;;(CODE);;Get ICD-10 Category
"RTN","LEXUH",154,0)
 ;;$$ISCAT;;LEXU;;(CODE);;5679;;2;;$$;;ISCAT;;LEX10DU;;(CODE);;Is an ICD-10 Code a Category
"RTN","LEXUH",155,0)
 ;;$$FREQ;;LEXU;;(TEXT);;5679;;2;;$$;;FREQ;;LEXU3;;(TEXT);;Get Frequency of Text
"RTN","LEXUH",156,0)
 ;;$$MAX;;LEXU;;(SYS);;5679;;2;;$$;;MAX;;LEXU3;;(SYS);;Maximum Number to Search
"RTN","LEXUH",157,0)
 ;;$$NXSAB;;LEXU;;"(SAB,REV)";;5679;;3;;$$;;NXSAB;;LEXU3;;"(SYS,REV)";;Get Next Source Abbrievation
"RTN","LEXUH",158,0)
 ;;$$PFI;;LEXU;;"(FRAG,CDT,.ARY)";;5679;;3;;$$;;PFI;;LEXU4;;"(FRAG,CDT,.ARY)";;Get Procedure Fragment Info
"RTN","LEXUH",159,0)
 ;;$$CSYS;;LEXU;;"(SYS)";;5679;;2;;$$;;CSYS;;LEXU5;;(SYS);;Get Coding System Info
"RTN","LEXUH",160,0)
 ;;$$IMPDATE;;LEXU;;(SAB);;5679;;2;;$$;;IMPDATE;;LEXU5;;(SYS);;Get System Implementation Date
"RTN","LEXUH",161,0)
 ;;$$LUPD;;LEXU;;"(SAB,DATE)";;5679;;3;;$$;;LUPD;;LEXU3;;"(SYS,CDT)";;Get System Last Updated
"RTN","LEXUH",162,0)
 ;;$$RUPD;;LEXU;;(SAB);;5679;;3;;$$;;RUPD;;LEXU3;;(SYS);;Get System Recent Update
"RTN","LEXUH",163,0)
 ;;$$CODE;;LEXTRAN;;"(CODE,SOURCE,DATE,ARRAY)";;4912;;3;;$$;;CODE;;LEXTRAN;;"(CODE,SRC,CDT,ARRAY)";;Get Concept for Code/Source
"RTN","LEXUH",164,0)
 ;;$$TEXT;;LEXTRAN;;"(TEXT,DATE,SUBSET,SOURCE,ARRAY)";;4913;;3;;$$;;TEXT;;LEXTRAN;;"(TEXT,CDT,SUB,SRC,ARRAY)";;Get Concept for Text/Source
"RTN","LEXUH",165,0)
 ;;$$TXT4CS;;LEXTRAN;;"(TEXT,SOURCE)";;4914;;3;;$$;;TXT4CS;;LEXTRAN;;"(TEXT,SRC,ARRAY,SUB)";;Is Text valid for an SCT code
"RTN","LEXUH",166,0)
 ;;$$VERSION;;LEXTRAN;;"(LEXSRC,LEXCODE,CDT)";;5011;;3;;$$;;VERSION;;LEXTRAN;;"(SRC,CODE,VDT)";;Get a Code's Version
"RTN","LEXUH",167,0)
 ;;$$GETASSN;;LEXTRAN1;;"(LEXCODE,LEXMAP,CDT,LEXRAY)";;5010;;3;;$$;;GETASSN;;LEXTRAN1;;"(CODE,MAP,CDT,ARRAY)";;Get Mapped Associations
"RTN","LEXUH",168,0)
 ;;$$GETFSN;;LEXTRAN1;;"(LEXSRC,LEXCODE,CDT)";;5007;;3;;$$;;GETFSN;;LEXTRAN1;;"(SRC,CODE,CDT)";;Get Fully Specified Name
"RTN","LEXUH",169,0)
 ;;$$GETPREF;;LEXTRAN1;;"(LEXSRC,LEXCODE,CDT)";;5008;;3;;$$;;GETPREF;;LEXTRAN1;;"(SRC,CODE,CDT)";;Get Preferred Term
"RTN","LEXUH",170,0)
 ;;$$GETSYN;;LEXTRAN1;;"(LEXSRC,LEXCODE,CDT,LEXRAY,LEXIENS)";;5006;;3;;$$;;GETSYN;;LEXTRAN1;;"(SRC,CODE,CDT,ARARY,IENS)";;Get Concept Synonyms
"RTN","LEXUH",171,0)
 ;;$$GETDES;;LEXTRAN1;;"(LEXSRC,LEXTEXT,CDT)";;5009;;3;;$$;;GETDES;;LEXTRAN1;;"(SRC,TEXT,CDT)";;Get Designation Code
"RTN","LEXUH",172,0)
 ;;EN;;LEX10CX;;;;5840;;4;;;;EN;;LEX10CX;;;;Get Suggested Code
"RTN","LEXUH",173,0)
 ;;EN2;;LEX10CX;;"(CODE,SAB)";;5840;;4;;;;EN2;;LEX10CX;;"(CODE,SYS)";;Get Suggested Code/Source
"RTN","LEXUH",174,0)
 ;;EN3;;LEX10CX;;"(CODE,SAB,.ARY,MAX)";;5840;;4;;;;EN3;;LEX10CX;;"(CODE,SYS,.ARY,MAX)";;Get Suggested Code (silent)
"RTN","LEXUH",175,0)
 ;;$$PAR;;LEXU;;"(TXT,.ARY)";;5679;;3;;$$;;PAR;;LEXU3;;"(TEXT,.ARY)";;Get Words from Text String
"RTN","LEXUH",176,0)
 ;;;;;;
"RTN","LEXXGP1")
0^13^B178355594
"RTN","LEXXGP1",1,0)
LEXXGP1 ;ISL/KER - Global Post-Install (Repair Expressions) ;12/19/2014
"RTN","LEXXGP1",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXGP1",3,0)
 ;               
"RTN","LEXXGP1",4,0)
 ; Global Variables
"RTN","LEXXGP1",5,0)
 ;    ^TMP("LEXASL")      SACC 2.3.2.5.1
"RTN","LEXXGP1",6,0)
 ;    ^TMP("LEXASLU")     SACC 2.3.2.5.1
"RTN","LEXXGP1",7,0)
 ;    ^TMP("LEXAWRD")     SACC 2.3.2.5.1
"RTN","LEXXGP1",8,0)
 ;    ^TMP("LEXAWRDK")    SACC 2.3.2.5.1
"RTN","LEXXGP1",9,0)
 ;    ^TMP("LEXAWRDU")    SACC 2.3.2.5.1
"RTN","LEXXGP1",10,0)
 ;    ^TMP("LEXSUB")      SACC 2.3.2.5.1
"RTN","LEXXGP1",11,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXXGP1",12,0)
 ;    ^TMP("LEXXGPDAT")   SACC 2.3.2.5.1
"RTN","LEXXGP1",13,0)
 ;    ^TMP("LEXXGPMSG")   SACC 2.3.2.5.1
"RTN","LEXXGP1",14,0)
 ;    ^TMP("LEXXGPRPT")   SACC 2.3.2.5.1
"RTN","LEXXGP1",15,0)
 ;    ^TMP("LEXXGPTIM")   SACC 2.3.2.5.1
"RTN","LEXXGP1",16,0)
 ;               
"RTN","LEXXGP1",17,0)
 ; External References
"RTN","LEXXGP1",18,0)
 ;    HOME^%ZIS           ICR  10086
"RTN","LEXXGP1",19,0)
 ;    $$S^%ZTLOAD         ICR  10063
"RTN","LEXXGP1",20,0)
 ;    ^%ZTLOAD            ICR  10063
"RTN","LEXXGP1",21,0)
 ;    $$FMDIFF^XLFDT      ICR  10103
"RTN","LEXXGP1",22,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","LEXXGP1",23,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","LEXXGP1",24,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXXGP1",25,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","LEXXGP1",26,0)
 ;               
"RTN","LEXXGP1",27,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXGP1",28,0)
 ; 
"RTN","LEXXGP1",29,0)
 ;    LEXMAIL   Set and Killed by the developer, used to 
"RTN","LEXXGP1",30,0)
 ;              report the timing of the task and
"RTN","LEXXGP1",31,0)
 ;              send to the user by MailMan message
"RTN","LEXXGP1",32,0)
 ;     
"RTN","LEXXGP1",33,0)
 ;    LEXHOME   Set and Killed by the developer in the
"RTN","LEXXGP1",34,0)
 ;              post-install, used to send the timing
"RTN","LEXXGP1",35,0)
 ;              message to G.LEXINS@FO-SLCDOMAIN.EXT
"RTN","LEXXGP1",36,0)
 ;              (see entry point POST2)
"RTN","LEXXGP1",37,0)
 ;              
"RTN","LEXXGP1",38,0)
 ;                     FileMan           LEXXGP
"RTN","LEXXGP1",39,0)
 ;                 
"RTN","LEXXGP1",40,0)
 ;                        Lexicon           Lexicon
"RTN","LEXXGP1",41,0)
 ; Re-Index        Time  Available   Time  Available
"RTN","LEXXGP1",42,0)
 ; --------------  ----  ---------   ----  ---------
"RTN","LEXXGP1",43,0)
 ; Build 'AWRD'    33.5     No       8.5      Yes
"RTN","LEXXGP1",44,0)
 ; Replace 'AWRD'   --      --       2.5      No
"RTN","LEXXGP1",45,0)
 ; Build 'ASL'      8.5     No       6.5      Yes
"RTN","LEXXGP1",46,0)
 ; Replace 'ASL'    --      --       0.5      No
"RTN","LEXXGP1",47,0)
 ; Build 'ASUB'    15.5     No      11.5      Yes
"RTN","LEXXGP1",48,0)
 ; Replace 'ASUB'   --      --       1.5      No
"RTN","LEXXGP1",49,0)
 ; 
"RTN","LEXXGP1",50,0)
 ; Lexicon 
"RTN","LEXXGP1",51,0)
 ; Unavailable:    57.5              4.5 Minutes
"RTN","LEXXGP1",52,0)
 ; 
"RTN","LEXXGP1",53,0)
 Q
"RTN","LEXXGP1",54,0)
EN ; Interactive Entry Point
"RTN","LEXXGP1",55,0)
 D ALL
"RTN","LEXXGP1",56,0)
 Q
"RTN","LEXXGP1",57,0)
POST ; Entry Point from Post-Install
"RTN","LEXXGP1",58,0)
 N LEXMAIL,LEXHOME S LEXMAIL="" D POST3
"RTN","LEXXGP1",59,0)
 Q
"RTN","LEXXGP1",60,0)
POST2 ; Entry Point from Post-Install (home)
"RTN","LEXXGP1",61,0)
 N LEXMAIL,LEXHOME S LEXHOME="",LEXMAIL="" D POST3
"RTN","LEXXGP1",62,0)
 Q
"RTN","LEXXGP1",63,0)
POST3 ; Called by POST/POST2 starts task
"RTN","LEXXGP1",64,0)
 N Y,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTQUEUED,ZTREQ,LEXTN
"RTN","LEXXGP1",65,0)
 S ZTRTN="ALL^LEXXGP1"
"RTN","LEXXGP1",66,0)
 S (LEXTN,ZTDESC)="Repair indexes in files #757.01/757.21"
"RTN","LEXXGP1",67,0)
 I $D(LEXMAIL) S LEXMAIL=1,ZTSAVE("LEXMAIL")=""
"RTN","LEXXGP1",68,0)
 I $D(LEXHOME) S LEXHOME=1,ZTSAVE("LEXHOME")=""
"RTN","LEXXGP1",69,0)
 S ZTIO="",ZTDTH=$H D ^%ZTLOAD,HOME^%ZIS I $D(LEXLOUD) D
"RTN","LEXXGP1",70,0)
 . S LEXT="  "_$G(LEXTN)_" tasked"
"RTN","LEXXGP1",71,0)
 . S:+($G(ZTSK))>0 LEXT=LEXT_" (#"_+($G(ZTSK))_")"
"RTN","LEXXGP1",72,0)
 . D MES^XPDUTL(LEXT)
"RTN","LEXXGP1",73,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","LEXXGP1",74,0)
 Q
"RTN","LEXXGP1",75,0)
ALL ; Index all Lookup Indexes
"RTN","LEXXGP1",76,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LEXXGP1",77,0)
 K ^TMP("LEXAWRD",$J),^TMP("LEXAWRDU",$J),^TMP("LEXAWRDK",$J),^TMP("LEXASL",$J),^TMP("LEXASLU",$J),^TMP("LEXSUB",$J)
"RTN","LEXXGP1",78,0)
 K ^TMP("LEXXGPTIM",$J) N DIC,DTOUT,DUOUT,LEX,LEX1,LEX2,LEX3,LEX4,LEXB,LEXBD,LEXBEG,LEXBEGD,LEXBEGT,LEXBT,LEXC,LEXCHR
"RTN","LEXXGP1",79,0)
 N LEXCHRS,LEXCMD,LEXCOM,LEXCTL,LEXD,LEXDF,LEXE,LEXEL,LEXELP,LEXELPT,LEXEND,LEXENDD,LEXENDT,LEXET,LEXEX,LEXEXP,LEXF
"RTN","LEXXGP1",80,0)
 N LEXFC,LEXFIR,LEXFUL,LEXHDR,LEXI,LEXID,LEXIDS,LEXIDX,LEXINAM,LEXIT,LEXJ,LEXLAST,LEXLN,LEXLOOK,LEXLOUD,LEXLWRD,LEXM
"RTN","LEXXGP1",81,0)
 N LEXMC,LEXMCEI,LEXMCI,LEXN,LEXNAM,LEXNEW,LEXNM,LEXNOD,LEXO,LEXO1,LEXO2,LEXP,LEXPDT,LEXPRE,LEXRI,LEXRT,LEXRT1,LEXRT2
"RTN","LEXXGP1",82,0)
 N LEXS,LEXSI,LEXSUB,LEXT,LEXTDAT,LEXTEXP,LEXTK,LEXTKC,LEXTKN,LEXTMP,LEXTWRD,LEXTX,LEXTXT,LEXV,LEXX,X,XCNP,XMDUZ
"RTN","LEXXGP1",83,0)
 N XMSCR,XMSUB,XMTEXT,XMY,XMZ,Y S:'$D(LEXQUIT) LEXQUIT="ALL" N LEXTXT,LEXFUL S LEXFUL="" D EXP,SUB^LEXXGP3
"RTN","LEXXGP1",84,0)
 I '$D(ZTQUEUED) D
"RTN","LEXXGP1",85,0)
 . N LEXTXT S LEXTXT=$$FMTT Q:'$L(LEXTXT)  W !," ",LEXTXT
"RTN","LEXXGP1",86,0)
 I $G(LEXQUIT)="ALL" D
"RTN","LEXXGP1",87,0)
 . D:$D(LEXMAIL) XM^LEXXGP3 K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME I '$D(LEXTEST) D
"RTN","LEXXGP1",88,0)
 . . K ^TMP("LEXASL",$J),^TMP("LEXASLU",$J),^TMP("LEXAWRD",$J),^TMP("LEXAWRDU",$J),^TMP("LEXAWRDK",$J)
"RTN","LEXXGP1",89,0)
 . . K ^TMP("LEXSUB",$J),^TMP("LEXTKN",$J),^TMP("LEXXGPDAT",$J),^TMP("LEXXGPTIM",$J),^TMP("LEXXGPRPT",$J)
"RTN","LEXXGP1",90,0)
 . . K:'$D(LEXMAIL) ^TMP("LEXXGPMSG",$J) N ZTQUEUED,LEXTEST
"RTN","LEXXGP1",91,0)
 Q
"RTN","LEXXGP1",92,0)
 ;
"RTN","LEXXGP1",93,0)
EXP ; Expression file Main Indexes AWRD/ASL
"RTN","LEXXGP1",94,0)
 N LEXBEG,LEXBEGD,LEXBEGT,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT
"RTN","LEXXGP1",95,0)
 N LEXTMP,LEXTXT S LEXTXT="Expression Indexes"
"RTN","LEXXGP1",96,0)
 S:'$D(LEXQUIT) LEXQUIT="EXP" K ^TMP("LEXAWRD",$J),^TMP("LEXAWRDU",$J),^TMP("LEXAWRDK",$J)
"RTN","LEXXGP1",97,0)
 K ^TMP("LEXASL",$J),^TMP("LEXASLU",$J) S LEXBEG=$$BEG
"RTN","LEXXGP1",98,0)
 D AWRDB,ASLB^LEXXGP2 H 1 S LEXEND=$$END D SAV^LEXXGP3(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP1",99,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG)
"RTN","LEXXGP1",100,0)
 S LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",101,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP1",102,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",103,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP1",104,0)
 I $G(LEXQUIT)="EXP" D
"RTN","LEXXGP1",105,0)
 . D:$D(LEXMAIL) XM^LEXXGP3 K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME I '$D(LEXTEST) D
"RTN","LEXXGP1",106,0)
 . . K ^TMP("LEXASL",$J),^TMP("LEXASLU",$J),^TMP("LEXAWRD",$J),^TMP("LEXAWRDU",$J),^TMP("LEXAWRDK",$J)
"RTN","LEXXGP1",107,0)
 . . K ^TMP("LEXTKN",$J),^TMP("LEXXGPDAT",$J),^TMP("LEXXGPTIM",$J),^TMP("LEXXGPRPT",$J)
"RTN","LEXXGP1",108,0)
 . . K:'$D(LEXMAIL) ^TMP("LEXXGPMSG",$J) N ZTQUEUED,LEXTEST
"RTN","LEXXGP1",109,0)
 Q
"RTN","LEXXGP1",110,0)
AWRDB ;   AWRD Word Index Build                         8.5 minutes
"RTN","LEXXGP1",111,0)
 ;     Create the AWRD Index in the ^TMP global
"RTN","LEXXGP1",112,0)
 N LEX0P3,LEX0P4,LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXDF,LEXELP,LEXEND,LEXENDT,LEXEX
"RTN","LEXXGP1",113,0)
 N LEXEXP,LEXIDX,LEXMC,LEXMCEI,LEXMCI,LEXND,LEXRI,LEXSI,LEXTKC,LEXTKN,LEXTMP,LEXTXT
"RTN","LEXXGP1",114,0)
 K ^TMP("LEXAWRD",$J),^TMP("LEXAWRDU",$J),^TMP("LEXAWRDK",$J) S:'$D(LEXQUIT) LEXQUIT="AWRDB"
"RTN","LEXXGP1",115,0)
 S LEXBEG=$$BEG,LEXEX=0,LEXTXT="Build 'AWRD' Word Index"
"RTN","LEXXGP1",116,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.01"))
"RTN","LEXXGP1",117,0)
 S LEXEX=0 F  S LEXEX=$O(^LEX(757.01,LEXEX)) Q:+LEXEX'>0  D
"RTN","LEXXGP1",118,0)
 . N X,LEXEXP,LEXIDX,LEXMC,LEXMCI,LEXMCEI,LEXRI,LEXSI,LEXTKN,LEXTKC,LEXTMP
"RTN","LEXXGP1",119,0)
 . S LEX0P3=+LEXEX,LEX0P4=+($G(LEX0P4))+1
"RTN","LEXXGP1",120,0)
 . S LEXEXP=$$UP^XLFSTR($G(^LEX(757.01,LEXEX,0))) Q:'$L(LEXEXP)
"RTN","LEXXGP1",121,0)
 . S LEXMCI=$P($G(^LEX(757.01,LEXEX,1)),"^",1) Q:+LEXMCI'>0
"RTN","LEXXGP1",122,0)
 . S LEXMCEI=$P($G(^LEX(757,LEXMCI,0)),"^",1) Q:+LEXMCEI'>0
"RTN","LEXXGP1",123,0)
 . ;       Words (main)
"RTN","LEXXGP1",124,0)
 . K ^TMP("LEXTKN",$J) S LEXIDX="",X=LEXEXP D PTX^LEXTOKN
"RTN","LEXXGP1",125,0)
 . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXXGP1",126,0)
 . . S LEXTKN="",LEXTKC=0
"RTN","LEXXGP1",127,0)
 . . F  S LEXTKC=$O(^TMP("LEXTKN",$J,LEXTKC)) Q:+LEXTKC'>0  D
"RTN","LEXXGP1",128,0)
 . . . N LEXND,LEXTKN S LEXTKN=$O(^TMP("LEXTKN",$J,LEXTKC,"")) Q:'$L(LEXTKN)
"RTN","LEXXGP1",129,0)
 . . . I $L($G(LEXTKN)),+($G(LEXMCI))>0,+($G(LEXMCEI))>0,+($G(LEXEX))>0 D
"RTN","LEXXGP1",130,0)
 . . . . N LEXND S LEXND="^LEX(757.01,"_LEXEX_",4,""B"","_$$QQ(LEXTKN)_")" Q:$D(@LEXND)
"RTN","LEXXGP1",131,0)
 . . . . S LEXND="^TMP(""LEXAWRD"","_$J_","_$$QQ(LEXTKN)_","_+LEXMCEI_")" Q:$D(@LEXND)
"RTN","LEXXGP1",132,0)
 . . . . S LEXND="^TMP(""LEXAWRD"","_$J_","_$$QQ(LEXTKN)_","_+LEXMCEI_","_LEXEX_")" S @LEXND=""
"RTN","LEXXGP1",133,0)
 . K ^TMP("LEXTKN",$J)
"RTN","LEXXGP1",134,0)
 . ;       Supplemental Words
"RTN","LEXXGP1",135,0)
 . S LEXSI=0 F  S LEXSI=$O(^LEX(757.01,LEXEX,5,LEXSI)) Q:+LEXSI'>0  D
"RTN","LEXXGP1",136,0)
 . . N LEXND,LEXTKN S LEXTKN=$$UP^XLFSTR($G(^LEX(757.01,LEXEX,5,LEXSI,0))) Q:'$L(LEXTKN)
"RTN","LEXXGP1",137,0)
 . . S LEXND="^LEX(757.01,"_LEXEX_",4,""B"","_$$QQ(LEXTKN)_")" Q:$D(@LEXND)
"RTN","LEXXGP1",138,0)
 . . I $D(LEXUNQ) S LEXND="^TMP(""LEXAWRD"","_$J_","_$$QQ(LEXTKN)_","_+LEXEX_")" Q:$D(@LEXND)
"RTN","LEXXGP1",139,0)
 . . S LEXND="^TMP(""LEXAWRD"","_$J_","_$$QQ(LEXTKN)_","_+LEXEX_","_+LEXMCEI_","_LEXSI_")"
"RTN","LEXXGP1",140,0)
 . . S @LEXND="" N LEXUNQ
"RTN","LEXXGP1",141,0)
 . ;       Linked Words
"RTN","LEXXGP1",142,0)
 . I $D(^LEX(757.05,"AEXP",LEXEX)) D
"RTN","LEXXGP1",143,0)
 . . N LEXRI S LEXRI=0
"RTN","LEXXGP1",144,0)
 . . F  S LEXRI=$O(^LEX(757.05,"AEXP",LEXEX,LEXRI)) Q:+LEXRI=0  D
"RTN","LEXXGP1",145,0)
 . . . N LEXTKN,LEXMC,LEXND S LEXTKN=$$UP^XLFSTR($P(^LEX(757.05,LEXRI,0),U,1)) Q:'$L(LEXTKN)
"RTN","LEXXGP1",146,0)
 . . . S LEXND="^LEX(757.01,"_LEXEX_",4,""B"","_$$QQ(LEXTKN)_")" Q:$D(@LEXND)
"RTN","LEXXGP1",147,0)
 . . . S LEXMC=$P($G(^LEX(757.01,LEXEX,1)),U,1) Q:+LEXMC'>0
"RTN","LEXXGP1",148,0)
 . . . I $D(LEXUNQ) S LEXND="^TMP(""LEXAWRD"","_$J_","_$$QQ(LEXTKN)_","_LEXEX_")" Q:$D(@LEXND)
"RTN","LEXXGP1",149,0)
 . . . S LEXND="^TMP(""LEXAWRD"","_$J_","_$$QQ(LEXTKN)_","_LEXEX_",""LINKED"")"
"RTN","LEXXGP1",150,0)
 . . . S @LEXND="" N LEXUNQ
"RTN","LEXXGP1",151,0)
 K ^TMP("LEXTKN",$J) H 1 S LEXEND=$$END D SAV^LEXXGP3(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP1",152,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG)
"RTN","LEXXGP1",153,0)
 S LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",154,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP1",155,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",156,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP1",157,0)
 D AWRDR I $G(LEXQUIT)="AWRDB" D
"RTN","LEXXGP1",158,0)
 . D:$D(LEXMAIL) XM^LEXXGP3 I '$D(LEXTEST) D
"RTN","LEXXGP1",159,0)
 . . K ^TMP("LEXAWRD",$J),^TMP("LEXAWRDU",$J),^TMP("LEXAWRDK",$J),^TMP("LEXTKN",$J),^TMP("LEXXGPDAT",$J)
"RTN","LEXXGP1",160,0)
 . . K ^TMP("LEXXGPTIM",$J),^TMP("LEXXGPRPT",$J) N ZTQUEUED,LEXTEST
"RTN","LEXXGP1",161,0)
 Q
"RTN","LEXXGP1",162,0)
AWRDR ;   AWRD Word Index Replace                       2.5 minutes
"RTN","LEXXGP1",163,0)
 N LEX1,LEX2,LEX3,LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXCHR,LEXCHRS,LEXCOM,LEXCTL,LEXDATA
"RTN","LEXXGP1",164,0)
 N LEXDF,LEXELP,LEXEND,LEXENDT,LEXEX,LEXIT,LEXLTKN,LEXMC,LEXND,LEXNOD,LEXSP,LEXTK
"RTN","LEXXGP1",165,0)
 N LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5,LEXTKN,LEXTTKN,LEXTXT S (LEX1,LEX2,LEX3)=0
"RTN","LEXXGP1",166,0)
 Q:'$D(LEXQUIT)  S LEXBEG=$$BEG,LEXTXT="Replace 'AWRD' Word Index"
"RTN","LEXXGP1",167,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.01"))
"RTN","LEXXGP1",168,0)
 K LEXCHRS D CHRS
"RTN","LEXXGP1",169,0)
 K ^TMP("LEXAWRDK",$J),^TMP("LEXAWRDU",$J)
"RTN","LEXXGP1",170,0)
 S LEXIT=0,LEXCHR="" F  S LEXCHR=$O(LEXCHRS(LEXCHR)) Q:'$L(LEXCHR)  D
"RTN","LEXXGP1",171,0)
 . N LEXLTKN,LEXTTKN,LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5,LEXTK,LEXIT
"RTN","LEXXGP1",172,0)
 . ;     For words beginning with a character
"RTN","LEXXGP1",173,0)
 . S (LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5)="",LEXIT=0
"RTN","LEXXGP1",174,0)
 . S LEXTK1=$C($A(LEXCHR)-1)_"~",LEXTK2=LEXCHR,LEXTK3=LEXCHR_" "
"RTN","LEXXGP1",175,0)
 . S:LEXCHR?1N LEXTK4=LEXCHR-.00000001 S:LEXCHR="." LEXTK5=.00000001
"RTN","LEXXGP1",176,0)
 . F LEXTK=LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5 D
"RTN","LEXXGP1",177,0)
 . . Q:'$L(LEXTK)  N LEXIT S LEXIT=0 S (LEXLTKN,LEXTTKN)=LEXTK
"RTN","LEXXGP1",178,0)
 . . F  S LEXLTKN=$O(^LEX(757.01,"AWRD",LEXLTKN)) D  Q:LEXIT>0
"RTN","LEXXGP1",179,0)
 . . . S:'$L(LEXLTKN) LEXIT=1
"RTN","LEXXGP1",180,0)
 . . . S:LEXCHR'?1N&($E(LEXLTKN,1)'=LEXCHR) LEXIT=1
"RTN","LEXXGP1",181,0)
 . . . S:LEXCHR?1N&($E(LEXLTKN,1)'?1N) LEXIT=1
"RTN","LEXXGP1",182,0)
 . . . Q:LEXIT>0
"RTN","LEXXGP1",183,0)
 . . . N LEXND
"RTN","LEXXGP1",184,0)
 . . . ;       Delete words from the ^LEX global
"RTN","LEXXGP1",185,0)
 . . . I $L(LEXLTKN) Q:$D(^TMP("LEXAWRDU",$J,LEXLTKN))
"RTN","LEXXGP1",186,0)
 . . . S:$L(LEXLTKN) ^TMP("LEXAWRDU",$J,LEXLTKN)=""
"RTN","LEXXGP1",187,0)
 . . . N LEXDATA,LEXND
"RTN","LEXXGP1",188,0)
 . . . I $D(LEXFUL) D
"RTN","LEXXGP1",189,0)
 . . . . N LEXNOD,LEXCTL,LEXIT,LEXND S LEXIT=0
"RTN","LEXXGP1",190,0)
 . . . . S LEXNOD="^LEX(757.01,""AWRD"","""_LEXLTKN_""")"
"RTN","LEXXGP1",191,0)
 . . . . S LEXCTL="^LEX(757.01,""AWRD"","""_LEXLTKN_""","
"RTN","LEXXGP1",192,0)
 . . . . F  S LEXNOD=$Q(@LEXNOD) D  Q:LEXIT>0
"RTN","LEXXGP1",193,0)
 . . . . . S:'$L(LEXNOD) LEXIT=1 S:LEXNOD'[LEXCTL LEXIT=1
"RTN","LEXXGP1",194,0)
 . . . . . Q:LEXIT>0  N LEXFUL S LEX2=LEX2+1
"RTN","LEXXGP1",195,0)
 . . . S LEXND="^LEX(757.01,""AWRD"","_$$QQ(LEXLTKN)_")"
"RTN","LEXXGP1",196,0)
 . . . K @LEXND S LEX1=LEX1+1
"RTN","LEXXGP1",197,0)
 . . S LEXIT=0 F  S LEXTTKN=$O(^TMP("LEXAWRD",$J,LEXTTKN)) D  Q:LEXIT>0
"RTN","LEXXGP1",198,0)
 . . . S:'$L(LEXTTKN) LEXIT=1
"RTN","LEXXGP1",199,0)
 . . . S:LEXCHR'?1N&($E(LEXTTKN,1)'=LEXCHR) LEXIT=1
"RTN","LEXXGP1",200,0)
 . . . S:LEXCHR?1N&($E(LEXTTKN,1)'?1N) LEXIT=1
"RTN","LEXXGP1",201,0)
 . . . Q:LEXIT>0
"RTN","LEXXGP1",202,0)
 . . . N LEXND,LEXNOD,LEXCTL,LEXKEY
"RTN","LEXXGP1",203,0)
 . . . S LEXNOD="^TMP(""LEXAWRD"","_$J_","_$$QQ(LEXTTKN)_")"
"RTN","LEXXGP1",204,0)
 . . . S LEXCTL="^TMP(""LEXAWRD"","_$J_","_$$QQ(LEXTTKN)_","
"RTN","LEXXGP1",205,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP1",206,0)
 . . . . ;         Copy Index from ^TMP to ^LEX
"RTN","LEXXGP1",207,0)
 . . . . ;           ^TMP("LEXAWRD",$J,WORD,MCIEN,EXIEN,SPIEN)
"RTN","LEXXGP1",208,0)
 . . . . ;           ^LEX(757.01,"AWRD",WORD,MCIEN,EXIEN,SPIEN)
"RTN","LEXXGP1",209,0)
 . . . . N LEXND,LEXTKN,LEXMC,LEXEX,LEXSP,LEXTND,LEXKEY
"RTN","LEXXGP1",210,0)
 . . . . S LEXTND=$TR(LEXNOD,"""","")
"RTN","LEXXGP1",211,0)
 . . . . S LEXTKN=$P(LEXTND,",",3)
"RTN","LEXXGP1",212,0)
 . . . . S LEXMC=$P(LEXTND,",",4) Q:+LEXMC'>0
"RTN","LEXXGP1",213,0)
 . . . . S LEXEX=$P($P(LEXNOD,",",5),")",1) Q:'$L(LEXEX)
"RTN","LEXXGP1",214,0)
 . . . . S LEXSP=$P($P(LEXTND,",",6),")",1)
"RTN","LEXXGP1",215,0)
 . . . . S LEXND="^LEX(757.01,""AWRD"","_$$QQ(LEXTKN)
"RTN","LEXXGP1",216,0)
 . . . . S LEXND=LEXND_","_LEXMC_","_$$QQ(LEXEX)
"RTN","LEXXGP1",217,0)
 . . . . S:$L(LEXSP) LEXND=LEXND_","_$$QQ(LEXSP)
"RTN","LEXXGP1",218,0)
 . . . . S LEXND=LEXND_")",LEXKEY=$TR(LEXND,"""","")
"RTN","LEXXGP1",219,0)
 . . . . S @LEXND="" S:'$D(^TMP("LEXAWRDK",$J,LEXKEY)) LEX3=LEX3+1
"RTN","LEXXGP1",220,0)
 . . . . S ^TMP("LEXAWRDK",$J,LEXKEY)=""
"RTN","LEXXGP1",221,0)
 . ;         Repeat for all characters
"RTN","LEXXGP1",222,0)
 K:'$D(LEXTEST)!($D(ZTQUEUED)) ^TMP("LEXAWRDK",$J),^TMP("LEXAWRDU",$J)
"RTN","LEXXGP1",223,0)
 H 1 S LEXEND=$$END D SAV^LEXXGP3(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP1",224,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG)
"RTN","LEXXGP1",225,0)
 S LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",226,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP1",227,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",228,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP1",229,0)
 I LEX1>0,$D(LEXFUL) D
"RTN","LEXXGP1",230,0)
 . S LEXCOM=LEX1_" Word"_$S(LEX1>1:"s",1:"")
"RTN","LEXXGP1",231,0)
 . D SAV^LEXXGP3(LEXBEG,"","",LEXCOM) W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP1",232,0)
 I LEX3>0,$D(LEXFUL) D
"RTN","LEXXGP1",233,0)
 . S LEXCOM=LEX3_" 'AWRD' Index Node"_$S(LEX3>1:"s",1:"")
"RTN","LEXXGP1",234,0)
 . D SAV^LEXXGP3(LEXBEG,"","",LEXCOM) W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP1",235,0)
 Q
"RTN","LEXXGP1",236,0)
 ;
"RTN","LEXXGP1",237,0)
 ; Miscellaneous
"RTN","LEXXGP1",238,0)
QQ(X) ;   Set Quotes
"RTN","LEXXGP1",239,0)
 N LEXS,LEXT S LEXS=$TR($G(X),"""",""),LEXT=0
"RTN","LEXXGP1",240,0)
 S:$TR(LEXS,".","")'?1N.N LEXT=1 I $TR(LEXS,".","")?1N.N S:$L(+LEXS)'=$L(LEXS) LEXT=1
"RTN","LEXXGP1",241,0)
 S X=LEXS S:LEXT=1 X=""""_LEXS_""""
"RTN","LEXXGP1",242,0)
 Q X
"RTN","LEXXGP1",243,0)
SCT(X) ;   String Count (exact string)
"RTN","LEXXGP1",244,0)
 N LEX,LEXA,LEXE,LEXIT,LEXM,LEXN,LEXO,LEXOUT,LEXP,LEXRT,LEXRT2,LEXS,LEXT,LEXTKN
"RTN","LEXXGP1",245,0)
 S LEXS=$$UP^XLFSTR($G(X)) Q:'$L(LEXS) 0  S LEXRT="" S:$D(^LEX(757.01,"AWRD")) LEXRT="^LEX(757.01,""AWRD"","
"RTN","LEXXGP1",246,0)
 S:$D(^TMP("LEXAWRD",$J)) LEXRT="^TMP(""LEXAWRD"","_$J_"," Q:'$L(LEXRT) 0  S (LEXA,LEXN,LEXT)=0
"RTN","LEXXGP1",247,0)
 S:$L(LEXS)>1 LEXO=$E(LEXS,1,($L(LEXS)-1))_$C(($A($E(LEXS,$L(LEXS)))-1))_"~"
"RTN","LEXXGP1",248,0)
 S:$L(LEXS)=1 LEXO=$C(($A(LEXS)-1))_"~" S LEXIT=0
"RTN","LEXXGP1",249,0)
 F  S LEXO=$O(@(LEXRT_""""_LEXO_""")")) D  Q:LEXIT>0
"RTN","LEXXGP1",250,0)
 . S:'$L(LEXO) LEXIT=1 S:$E(LEXO,1,$L(LEXS))'=LEXS LEXIT=1
"RTN","LEXXGP1",251,0)
 . Q:LEXIT>0  N LEXM S LEXM=0 F  S LEXM=$O(@(LEXRT_""""_LEXO_""","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXXGP1",252,0)
 . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_""""_LEXO_""","_LEXM_","
"RTN","LEXXGP1",253,0)
 . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1,LEXA=LEXA+1
"RTN","LEXXGP1",254,0)
 I $TR(LEXS,".","")?1N.N,$L(LEXS,".")'>2  I +LEXS=LEXS D
"RTN","LEXXGP1",255,0)
 . N LEXFC S LEXFC=$E(LEXS,1) S:$E(LEXS,1)?1N LEXO=LEXS-.000000001
"RTN","LEXXGP1",256,0)
 . S:$E(LEXS,1)="." LEXO=.000000001 S LEXIT=0
"RTN","LEXXGP1",257,0)
 . F  S LEXO=$O(@(LEXRT_+LEXO_")")) D  Q:LEXIT>0  Q:'$L(LEXO)
"RTN","LEXXGP1",258,0)
 . . S:LEXFC?1N&($E(LEXO,1)'?1N) LEXIT=1
"RTN","LEXXGP1",259,0)
 . . S:LEXFC?1P&($E(LEXO,1)'?1P) LEXIT=1 Q:LEXIT>0
"RTN","LEXXGP1",260,0)
 . . Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXS))'=LEXS  N LEXM S LEXM=0
"RTN","LEXXGP1",261,0)
 . . F  S LEXM=$O(@(LEXRT_+LEXO_","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXXGP1",262,0)
 . . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_+LEXO_","_LEXM_","
"RTN","LEXXGP1",263,0)
 . . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1,LEXN=LEXN+1
"RTN","LEXXGP1",264,0)
 S X=LEXT
"RTN","LEXXGP1",265,0)
 Q X
"RTN","LEXXGP1",266,0)
CHRS ;   Get Characters - Sets LEXCHRS
"RTN","LEXXGP1",267,0)
 N LEXCHR,LEXRT,LEXRT1,LEXRT2,LEXTK K LEXCHRS S LEXRT1="^LEX(757.01,""AWRD"","
"RTN","LEXXGP1",268,0)
 S LEXRT2="^TMP(""LEXAWRD"","_$J_"," F LEXRT=LEXRT1,LEXRT2 D
"RTN","LEXXGP1",269,0)
 . N LEXTK S LEXTK="#" F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXXGP1",270,0)
 . . N LEXCHR S LEXCHR=$E($TR(LEXTK," ",""),1) S LEXTK=$E(LEXTK,1)_"~"
"RTN","LEXXGP1",271,0)
 . . S:$L(LEXCHR) LEXCHRS(LEXCHR)=""
"RTN","LEXXGP1",272,0)
 Q
"RTN","LEXXGP1",273,0)
FMTT(X) ;   Format Total
"RTN","LEXXGP1",274,0)
 N LEXI,LEXTXT,LEXTMP,LEXBEG,LEXBEGD,LEXBEGT,LEXEND,LEXENDD,LEXENDT,LEXELP
"RTN","LEXXGP1",275,0)
 S LEXBEG=$G(^TMP("LEXXGPTIM",$J,"BEG")) Q:$P(LEXBEG,".",1)'?7N ""
"RTN","LEXXGP1",276,0)
 S LEXEND=$G(^TMP("LEXXGPTIM",$J,"END")) Q:$P(LEXEND,".",1)'?7N ""
"RTN","LEXXGP1",277,0)
 Q:LEXEND'>LEXBEG ""  S LEXTXT="Total Time to Repair Indexes"
"RTN","LEXXGP1",278,0)
 S LEXELP=$$ELP(LEXBEG,LEXEND),LEXBEGD=$$ED(LEXBEG),LEXBEGT=$$ET(LEXBEG),LEXENDT=$$ET(LEXEND),LEXDF=$$DF(LEXBEG)
"RTN","LEXXGP1",279,0)
 Q:'$L(LEXBEGT) ""  Q:'$L(LEXENDT) ""  Q:'$L(LEXELP) ""
"RTN","LEXXGP1",280,0)
 S X=LEXTXT_$J(" ",(35-$L(LEXTXT)))_LEXBEGD_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP1",281,0)
 Q X
"RTN","LEXXGP1",282,0)
FMT(X,LEXBD,LEXBT,LEXET,LEXEL) ;   Format Line
"RTN","LEXXGP1",283,0)
 N LEXTX S LEXTX=$G(X),LEXBD=$G(LEXBD),LEXBT=$G(LEXBT),LEXET=$G(LEXET),LEXEL=$G(LEXEL)
"RTN","LEXXGP1",284,0)
 Q:'$L(LEXTX)!('$L(LEXBD))!('$L(LEXBT))!('$L(LEXET))!('$L(LEXEL)) ""
"RTN","LEXXGP1",285,0)
 S X=$G(LEXTX)_$J(" ",(35-$L($G(LEXTX))))_LEXBD_"   "_LEXBT_"   "_LEXET_"   "_LEXEL
"RTN","LEXXGP1",286,0)
 Q X
"RTN","LEXXGP1",287,0)
DF(X) ;   Date Display Format
"RTN","LEXXGP1",288,0)
 N LEXO,LEXD,LEXDF,LEXP,LEXC S (X,LEXD)=$P($G(X),".",1) Q:LEXD'?7N "--/--/----"
"RTN","LEXXGP1",289,0)
 S LEXP=$O(^TMP("LEXXGPDAT",$J,(LEXD_".001")),-1) S LEXC=1
"RTN","LEXXGP1",290,0)
 S:$L(LEXP) LEXC=$O(^TMP("LEXXGPDAT",$J,LEXP," "),-1)
"RTN","LEXXGP1",291,0)
 S LEXO=$$ED(LEXD) S:LEXP=LEXD&(LEXC>1) LEXO="  ""    ""  " S X=LEXO
"RTN","LEXXGP1",292,0)
 Q X
"RTN","LEXXGP1",293,0)
ED(X) ;   External Date from Fileman
"RTN","LEXXGP1",294,0)
 N LEX,LEXT,LEXBD S LEX=$G(X) Q:$P(LEX,".",1)'?7N ""
"RTN","LEXXGP1",295,0)
 S LEXT=$$FMTE^XLFDT($G(LEX),"5ZS"),X=$P(LEXT,"@",1)
"RTN","LEXXGP1",296,0)
 Q X
"RTN","LEXXGP1",297,0)
ET(X) ;   External Time from Fileman
"RTN","LEXXGP1",298,0)
 N LEX,LEXT,LEXBD S LEX=$G(X) Q:$P(LEX,".",1)'?7N ""
"RTN","LEXXGP1",299,0)
 S LEXT=$$FMTE^XLFDT($G(LEX),"5ZS"),X=$P(LEXT,"@",2)
"RTN","LEXXGP1",300,0)
 S:'$L(X) X="00:00:00" S:'$L($P(X,":",1)) $P(X,":",1)="00"
"RTN","LEXXGP1",301,0)
 S:'$L($P(X,":",2)) $P(X,":",2)="00" S:'$L($P(X,":",3)) $P(X,":",3)="00"
"RTN","LEXXGP1",302,0)
 Q X
"RTN","LEXXGP1",303,0)
BEG(X) ;   Begin Date/Time
"RTN","LEXXGP1",304,0)
 S X=$$NOW^XLFDT N Y S Y=$G(^TMP("LEXXGPTIM",$J,"BEG"))
"RTN","LEXXGP1",305,0)
 S:'$L(Y) Y=X S:+X<Y Y=X S:$P(Y,".",1)?7N ^TMP("LEXXGPTIM",$J,"BEG")=Y
"RTN","LEXXGP1",306,0)
 Q X
"RTN","LEXXGP1",307,0)
END(X) ;   End Date/Time
"RTN","LEXXGP1",308,0)
 S X=$$NOW^XLFDT N Y S Y=$G(^TMP("LEXXGPTIM",$J,"END"))
"RTN","LEXXGP1",309,0)
 S:'$L(Y) Y=X S:+X>Y Y=X S:$P(Y,".",1)?7N ^TMP("LEXXGPTIM",$J,"END")=Y
"RTN","LEXXGP1",310,0)
 Q X
"RTN","LEXXGP1",311,0)
ELP(X,Y) ;   Elapsed Time
"RTN","LEXXGP1",312,0)
 N LEXBEG,LEXEND,LEXELP S LEXBEG=$G(X),LEXEND=$G(Y)
"RTN","LEXXGP1",313,0)
 Q:$P(LEXBEG,".",1)'?7N "        "
"RTN","LEXXGP1",314,0)
 Q:$P(LEXEND,".",1)'?7N "        "
"RTN","LEXXGP1",315,0)
 S LEXELP=$TR($$FMDIFF^XLFDT(LEXEND,LEXBEG,3)," ","0")
"RTN","LEXXGP1",316,0)
 S X=LEXELP
"RTN","LEXXGP1",317,0)
 Q X
"RTN","LEXXGP1",318,0)
CLR ;   Clear Variables
"RTN","LEXXGP1",319,0)
 K LEXLOUD,LEXTEST,LEXJ,LEXMAIL,LEXHOME,LEXQUIT
"RTN","LEXXGP1",320,0)
 Q
"RTN","LEXXGP2")
0^14^B45882070
"RTN","LEXXGP2",1,0)
LEXXGP2 ;ISL/KER - Global Post-Install (Repair Expressions) ;12/19/2014
"RTN","LEXXGP2",2,0)
 ;;2.0;LEXICON UTILITY;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXGP2",3,0)
 ;               
"RTN","LEXXGP2",4,0)
 ; Global Variables
"RTN","LEXXGP2",5,0)
 ;    ^TMP("LEXASL")      SACC 2.3.2.5.1
"RTN","LEXXGP2",6,0)
 ;    ^TMP("LEXASLU")     SACC 2.3.2.5.1
"RTN","LEXXGP2",7,0)
 ;    ^TMP("LEXAWRD")     SACC 2.3.2.5.1
"RTN","LEXXGP2",8,0)
 ;    ^TMP("LEXAWRDU")    SACC 2.3.2.5.1
"RTN","LEXXGP2",9,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXXGP2",10,0)
 ;    ^TMP("LEXXGPDAT")   SACC 2.3.2.5.1
"RTN","LEXXGP2",11,0)
 ;    ^TMP("LEXXGPRPT")   SACC 2.3.2.5.1
"RTN","LEXXGP2",12,0)
 ;    ^TMP("LEXXGPTIM")   SACC 2.3.2.5.1
"RTN","LEXXGP2",13,0)
 ;               
"RTN","LEXXGP2",14,0)
 ; External References
"RTN","LEXXGP2",15,0)
 ;    $$S^%ZTLOAD         ICR  10063
"RTN","LEXXGP2",16,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXXGP2",17,0)
 ;               
"RTN","LEXXGP2",18,0)
 ; Local Variables NEWed or KILLed in LEXXGP1
"RTN","LEXXGP2",19,0)
 ;     LEXFIR,LEXFUL,LEXMAIL,LEXQUIT,ZTQUEUED,ZTSK
"RTN","LEXXGP2",20,0)
 ;              
"RTN","LEXXGP2",21,0)
 Q
"RTN","LEXXGP2",22,0)
ASLB ;   ASL String Length Index Build                 6.5 minutes
"RTN","LEXXGP2",23,0)
 N LEXA,LEXBEG,LEXBEGD,LEXBEGT,LEXC,LEXCHK,LEXDF,LEXE,LEXELP,LEXEND,LEXENDT,LEXM
"RTN","LEXXGP2",24,0)
 N LEXN,LEXO,LEXP,LEXRT,LEXS,LEXT,LEXTK,LEXTKN,LEXTXT S LEXBEG=$$BEG^LEXXGP1
"RTN","LEXXGP2",25,0)
 S:'$D(LEXQUIT) LEXQUIT="ASLB" S LEXTXT="Build 'ASL' String Length Index"
"RTN","LEXXGP2",26,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.01"))
"RTN","LEXXGP2",27,0)
 S LEXRT="" S:$D(^LEX(757.01,"AWRD")) LEXRT="^LEX(757.01,""AWRD"","
"RTN","LEXXGP2",28,0)
 S:$D(^TMP("LEXAWRD",$J)) LEXRT="^TMP(""LEXAWRD"","_$J_"," Q:'$L(LEXRT)
"RTN","LEXXGP2",29,0)
 ;       For each Word
"RTN","LEXXGP2",30,0)
 S (LEXFIR,LEXFC,LEXTK)=""
"RTN","LEXXGP2",31,0)
 F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXXGP2",32,0)
 . N LEXP,LEXS,LEXC,LEXF,LEXTKN S LEXTKN=LEXTK
"RTN","LEXXGP2",33,0)
 . F  Q:$E(LEXTKN,1)'=" "  S LEXTKN=$E(LEXTKN,2,$L(LEXTKN))
"RTN","LEXXGP2",34,0)
 . F  Q:$E(LEXTKN,$L(LEXTKN))'=" "  S LEXTKN=$E(LEXTKN,1,($L(LEXTKN)-1))
"RTN","LEXXGP2",35,0)
 . S LEXF=$E(LEXTKN,1)
"RTN","LEXXGP2",36,0)
 . S LEXFIR=LEXF S:LEXFC'[LEXF LEXFC=LEXFC_LEXF
"RTN","LEXXGP2",37,0)
 . ;       Count the occurrences of each string
"RTN","LEXXGP2",38,0)
 . F LEXP=1:1:$L(LEXTKN)  S LEXS=$$UP^XLFSTR($E(LEXTKN,1,LEXP)) D
"RTN","LEXXGP2",39,0)
 . . Q:'$L($G(LEXS))  I '$D(^TMP("LEXASLU",$J,LEXS)) D
"RTN","LEXXGP2",40,0)
 . . . N LEXE,LEXM,LEXO,LEXT,LEXA,LEXN S (LEXA,LEXN,LEXT)=0
"RTN","LEXXGP2",41,0)
 . . . S LEXT=$$SCT(LEXS) I +($G(LEXT))>0 D
"RTN","LEXXGP2",42,0)
 . . . . K ^TMP("LEXASL",$J,LEXS)
"RTN","LEXXGP2",43,0)
 . . . . S ^TMP("LEXASL",$J,LEXS,LEXT)=""
"RTN","LEXXGP2",44,0)
 . . S ^TMP("LEXASLU",$J,LEXS)=""
"RTN","LEXXGP2",45,0)
 H 1 S LEXEND=$$END^LEXXGP1 D SAV^LEXXGP3(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP2",46,0)
 S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND),LEXBEGD=$$ED^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",47,0)
 S LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND),LEXDF=$$DF^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",48,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP2",49,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP2",50,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP2",51,0)
 D ASLR I $G(LEXQUIT)="ASLB" D
"RTN","LEXXGP2",52,0)
 . D:$D(LEXMAIL) XM^LEXXGP3
"RTN","LEXXGP2",53,0)
 . K ^TMP("LEXASL",$J),^TMP("LEXASLU",$J),^TMP("LEXAWRD",$J),^TMP("LEXAWRDU",$J)
"RTN","LEXXGP2",54,0)
 . K ^TMP("LEXTKN",$J),^TMP("LEXXGPDAT",$J),^TMP("LEXXGPTIM",$J),^TMP("LEXXGPRPT",$J)
"RTN","LEXXGP2",55,0)
 Q
"RTN","LEXXGP2",56,0)
ASLR ;   ASL String Length Index Replace               0.5 minutes
"RTN","LEXXGP2",57,0)
 N LEX1,LEX2,LEX3,LEXBEG,LEXBEGD,LEXBEGT,LEXC,LEXCHK,LEXCHR,LEXCHRS,LEXCOM,LEXCTL
"RTN","LEXXGP2",58,0)
 N LEXDF,LEXELP,LEXEND,LEXENDT,LEXIT,LEXLTKN,LEXND,LEXNOD,LEXSTR,LEXTK,LEXTK1
"RTN","LEXXGP2",59,0)
 N LEXTK2,LEXTK3,LEXTK4,LEXTK5,LEXTMP,LEXTTKN,LEXTXT,LEXVAL S (LEX1,LEX2,LEX3)=0
"RTN","LEXXGP2",60,0)
 Q:'$D(LEXQUIT)  S LEXBEG=$$BEG^LEXXGP1,LEXTXT="Replace 'ASL' String Length Index"
"RTN","LEXXGP2",61,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.01"))
"RTN","LEXXGP2",62,0)
 N LEXCHR,LEXCHRS D CHRS S LEXCHR=""
"RTN","LEXXGP2",63,0)
 F  S LEXCHR=$O(LEXCHRS(LEXCHR)) Q:'$L(LEXCHR)  D
"RTN","LEXXGP2",64,0)
 . ;       For strings beginning with character
"RTN","LEXXGP2",65,0)
 . N LEXLTKN,LEXTTKN,LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5,LEXTK,LEXIT
"RTN","LEXXGP2",66,0)
 . ;         Delete strings from the ^LEX global
"RTN","LEXXGP2",67,0)
 . S (LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5)=""
"RTN","LEXXGP2",68,0)
 . S LEXTK1=$C($A(LEXCHR)-1)_"~",LEXTK2=LEXCHR,LEXTK3=LEXCHR_" "
"RTN","LEXXGP2",69,0)
 . S:LEXCHR?1N LEXTK4=LEXCHR-.00000001
"RTN","LEXXGP2",70,0)
 . S:LEXCHR="." LEXTK5=.00000001
"RTN","LEXXGP2",71,0)
 . F LEXTK=LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5 D
"RTN","LEXXGP2",72,0)
 . . Q:'$L(LEXTK)  S (LEXLTKN,LEXTTKN)=LEXTK S LEXIT=0
"RTN","LEXXGP2",73,0)
 . . F  S LEXLTKN=$O(^LEX(757.01,"ASL",LEXLTKN)) D  Q:LEXIT>0
"RTN","LEXXGP2",74,0)
 . . . S:'$L(LEXLTKN) LEXIT=1 S:$E(LEXLTKN,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP2",75,0)
 . . . Q:LEXIT>0  N LEXNOD,LEXCTL
"RTN","LEXXGP2",76,0)
 . . . S LEXNOD="^LEX(757.01,""ASL"","_$$QQ(LEXLTKN)_")"
"RTN","LEXXGP2",77,0)
 . . . S LEXCTL="^LEX(757.01,""ASL"","_$$QQ(LEXLTKN)_","
"RTN","LEXXGP2",78,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP2",79,0)
 . . . . N LEXTMP,LEXND S LEXTMP=$TR(LEXLTKN,"""","")
"RTN","LEXXGP2",80,0)
 . . . . S LEXND="^LEX(757.01,""ASL"","_$$QQ(LEXLTKN)_")"
"RTN","LEXXGP2",81,0)
 . . . . K @LEXND S LEX1=+($G(LEX1))+1
"RTN","LEXXGP2",82,0)
 . ;         Add strings to the ^LEX global
"RTN","LEXXGP2",83,0)
 . F LEXTTKN=LEXTK1,LEXTK2,LEXTK3,LEXTK4,LEXTK5 D
"RTN","LEXXGP2",84,0)
 . . Q:'$L(LEXTTKN)  N LEXC,LEXIT S LEXIT=0,LEXC=LEXTTKN
"RTN","LEXXGP2",85,0)
 . . F  S LEXTTKN=$O(^TMP("LEXASL",$J,LEXTTKN)) Q:'$L(LEXTTKN)  D  Q:LEXIT>0
"RTN","LEXXGP2",86,0)
 . . . Q:$E(LEXTTKN,1)'=LEXCHR
"RTN","LEXXGP2",87,0)
 . . . N LEXNOD,LEXCTL S LEXNOD="^TMP(""LEXASL"","_$J_","_$$QQ(LEXTTKN)_")"
"RTN","LEXXGP2",88,0)
 . . . S LEXCTL="^TMP(""LEXASL"","_$J_","_$$QQ(LEXTTKN)_","
"RTN","LEXXGP2",89,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP2",90,0)
 . . . . N LEXSTR,LEXVAL,LEXND,LEXTMP S LEXSTR=$P($P(LEXNOD,(","_$J_","),2),",",1)
"RTN","LEXXGP2",91,0)
 . . . . S LEXVAL=+$P($P(LEXNOD,(","_$J_","),2),",",2) Q:'$L(LEXSTR)  Q:+LEXVAL'>0
"RTN","LEXXGP2",92,0)
 . . . . S LEXTMP=$TR(LEXSTR,"""",""),LEXND="^LEX(757.01,""ASL"","_$$QQ(LEXTMP)_")" K @LEXND
"RTN","LEXXGP2",93,0)
 . . . . S LEXND="^LEX(757.01,""ASL"","_$$QQ(LEXTMP)_","_LEXVAL_")"
"RTN","LEXXGP2",94,0)
 . . . . S @LEXND="" S LEX3=+($G(LEX3))+1
"RTN","LEXXGP2",95,0)
 . ;     Repeat for all characters
"RTN","LEXXGP2",96,0)
 H 1 S LEXEND=$$END^LEXXGP1 D SAV^LEXXGP3(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP2",97,0)
 S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND),LEXBEGD=$$ED^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",98,0)
 S LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND),LEXDF=$$DF^LEXXGP1(LEXBEG)
"RTN","LEXXGP2",99,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP2",100,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP2",101,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP2",102,0)
 I LEX3>0,$D(LEXFUL) D
"RTN","LEXXGP2",103,0)
 . S LEXCOM=LEX3_" 'ASL' Index Node"_$S(LEX3>1:"s",1:"")
"RTN","LEXXGP2",104,0)
 . D SAV^LEXXGP3(LEXBEG,"","",LEXCOM) W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP2",105,0)
 Q
"RTN","LEXXGP2",106,0)
 ;
"RTN","LEXXGP2",107,0)
 ; Miscellaneous
"RTN","LEXXGP2",108,0)
QQ(X) ;   Set Quotes
"RTN","LEXXGP2",109,0)
 N LEXS,LEXT S LEXS=$TR($G(X),"""",""),LEXT=0
"RTN","LEXXGP2",110,0)
 S:$TR(LEXS,".","")'?1N.N LEXT=1 I $TR(LEXS,".","")?1N.N S:$L(+LEXS)'=$L(LEXS) LEXT=1
"RTN","LEXXGP2",111,0)
 S X=LEXS S:LEXT=1 X=""""_LEXS_""""
"RTN","LEXXGP2",112,0)
 Q X
"RTN","LEXXGP2",113,0)
SCT(X) ;   String Count (exact string)
"RTN","LEXXGP2",114,0)
 N LEX,LEXA,LEXE,LEXIT,LEXM,LEXN,LEXO,LEXOUT,LEXP,LEXRT,LEXRT2,LEXS,LEXT,LEXTKN
"RTN","LEXXGP2",115,0)
 S LEXS=$$UP^XLFSTR($G(X)) Q:'$L(LEXS) 0  S LEXRT="" S:$D(^LEX(757.01,"AWRD")) LEXRT="^LEX(757.01,""AWRD"","
"RTN","LEXXGP2",116,0)
 S:$D(^TMP("LEXAWRD",$J)) LEXRT="^TMP(""LEXAWRD"","_$J_"," Q:'$L(LEXRT) 0  S (LEXA,LEXN,LEXT)=0
"RTN","LEXXGP2",117,0)
 S:$L(LEXS)>1 LEXO=$E(LEXS,1,($L(LEXS)-1))_$C(($A($E(LEXS,$L(LEXS)))-1))_"~"
"RTN","LEXXGP2",118,0)
 S:$L(LEXS)=1 LEXO=$C(($A(LEXS)-1))_"~" S LEXIT=0
"RTN","LEXXGP2",119,0)
 F  S LEXO=$O(@(LEXRT_""""_LEXO_""")")) D  Q:LEXIT>0
"RTN","LEXXGP2",120,0)
 . S:'$L(LEXO) LEXIT=1 S:$E(LEXO,1,$L(LEXS))'=LEXS LEXIT=1
"RTN","LEXXGP2",121,0)
 . Q:LEXIT>0  N LEXM S LEXM=0 F  S LEXM=$O(@(LEXRT_""""_LEXO_""","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXXGP2",122,0)
 . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_""""_LEXO_""","_LEXM_","
"RTN","LEXXGP2",123,0)
 . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1,LEXA=LEXA+1
"RTN","LEXXGP2",124,0)
 I $TR(LEXS,".","")?1N.N,$L(LEXS,".")'>2  I +LEXS=LEXS D
"RTN","LEXXGP2",125,0)
 . N LEXFC S LEXFC=$E(LEXS,1) S:$E(LEXS,1)?1N LEXO=LEXS-.000000001
"RTN","LEXXGP2",126,0)
 . S:$E(LEXS,1)="." LEXO=.000000001 S LEXIT=0
"RTN","LEXXGP2",127,0)
 . F  S LEXO=$O(@(LEXRT_+LEXO_")")) D  Q:LEXIT>0  Q:'$L(LEXO)
"RTN","LEXXGP2",128,0)
 . . S:LEXFC?1N&($E(LEXO,1)'?1N) LEXIT=1
"RTN","LEXXGP2",129,0)
 . . S:LEXFC?1P&($E(LEXO,1)'?1P) LEXIT=1 Q:LEXIT>0
"RTN","LEXXGP2",130,0)
 . . Q:'$L(LEXO)  Q:$E(LEXO,1,$L(LEXS))'=LEXS  N LEXM S LEXM=0
"RTN","LEXXGP2",131,0)
 . . F  S LEXM=$O(@(LEXRT_+LEXO_","_LEXM_")")) Q:+LEXM'>0  D
"RTN","LEXXGP2",132,0)
 . . . N LEXE,LEXRT2 S LEXE=0,LEXRT2=LEXRT_+LEXO_","_LEXM_","
"RTN","LEXXGP2",133,0)
 . . . F  S LEXE=$O(@(LEXRT2_LEXE_")")) Q:+LEXE'>0  S LEXT=LEXT+1,LEXN=LEXN+1
"RTN","LEXXGP2",134,0)
 S X=LEXT
"RTN","LEXXGP2",135,0)
 Q X
"RTN","LEXXGP2",136,0)
CHRS ;   Get Characters - Sets LEXCHRS
"RTN","LEXXGP2",137,0)
 N LEXCHR,LEXRT,LEXRT1,LEXRT2,LEXTK K LEXCHRS S LEXRT1="^LEX(757.01,""AWRD"","
"RTN","LEXXGP2",138,0)
 S LEXRT2="^TMP(""LEXAWRD"","_$J_"," F LEXRT=LEXRT1,LEXRT2 D
"RTN","LEXXGP2",139,0)
 . N LEXTK S LEXTK="#" F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXXGP2",140,0)
 . . N LEXCHR S LEXCHR=$E($TR(LEXTK," ",""),1) S LEXTK=$E(LEXTK,1)_"~"
"RTN","LEXXGP2",141,0)
 . . S:$L(LEXCHR) LEXCHRS(LEXCHR)=""
"RTN","LEXXGP2",142,0)
 Q
"RTN","LEXXGP3")
0^15^B141642100
"RTN","LEXXGP3",1,0)
LEXXGP3 ;ISL/KER - Global Post-Install (Repair Subsets) ;12/19/2014
"RTN","LEXXGP3",2,0)
 ;;2.0;LEXICON UTILITY;**86**;Sep 23, 1996;Build 1
"RTN","LEXXGP3",3,0)
 ;               
"RTN","LEXXGP3",4,0)
 ;               
"RTN","LEXXGP3",5,0)
 ; Global Variables
"RTN","LEXXGP3",6,0)
 ;    ^TMP("LEXAWRD")     SACC 2.3.2.5.1
"RTN","LEXXGP3",7,0)
 ;    ^TMP("LEXAWRDU")    SACC 2.3.2.5.1
"RTN","LEXXGP3",8,0)
 ;    ^TMP("LEXSUB")      SACC 2.3.2.5.1
"RTN","LEXXGP3",9,0)
 ;    ^TMP("LEXTKN")      SACC 2.3.2.5.1
"RTN","LEXXGP3",10,0)
 ;    ^TMP("LEXXGPDAT")   SACC 2.3.2.5.1
"RTN","LEXXGP3",11,0)
 ;    ^TMP("LEXXGPMSG")   SACC 2.3.2.5.1
"RTN","LEXXGP3",12,0)
 ;    ^TMP("LEXXGPRPT")   SACC 2.3.2.5.1
"RTN","LEXXGP3",13,0)
 ;    ^TMP("LEXXGPTIM")   SACC 2.3.2.5.1
"RTN","LEXXGP3",14,0)
 ;               
"RTN","LEXXGP3",15,0)
 ; External References
"RTN","LEXXGP3",16,0)
 ;    $$S^%ZTLOAD         ICR  10063
"RTN","LEXXGP3",17,0)
 ;    ^DIC                ICR  10006
"RTN","LEXXGP3",18,0)
 ;    IXALL^DIK           ICR  10013
"RTN","LEXXGP3",19,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","LEXXGP3",20,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","LEXXGP3",21,0)
 ;    ^XMD                ICR  10070
"RTN","LEXXGP3",22,0)
 ;               
"RTN","LEXXGP3",23,0)
 ; Local Variables NEWed or KILLed in LEXXGP1
"RTN","LEXXGP3",24,0)
 ;     ZTSK
"RTN","LEXXGP3",25,0)
 ; 
"RTN","LEXXGP3",26,0)
 ; Special Variables set in the Post-Install Routines
"RTN","LEXXGP3",27,0)
 ; 
"RTN","LEXXGP3",28,0)
 ;    LEXMAIL   Set and Killed by the developer, used to 
"RTN","LEXXGP3",29,0)
 ;              report the timing of the task and
"RTN","LEXXGP3",30,0)
 ;              send to the user by MailMan message
"RTN","LEXXGP3",31,0)
 ;     
"RTN","LEXXGP3",32,0)
 ;    LEXHOME   Set and Killed by the developer in the
"RTN","LEXXGP3",33,0)
 ;              post-install, used to send the timing
"RTN","LEXXGP3",34,0)
 ;              message to G.LEXINS@FO-SLCDOMAIN.EXT
"RTN","LEXXGP3",35,0)
 ;              (see entry point POST2)
"RTN","LEXXGP3",36,0)
 ;              
"RTN","LEXXGP3",37,0)
 Q
"RTN","LEXXGP3",38,0)
SUB ; Subset file Indexes Aaaa
"RTN","LEXXGP3",39,0)
 N LEXBEG,LEXBEGD,LEXBEGT,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT
"RTN","LEXXGP3",40,0)
 N LEXTMP,LEXTXT S LEXTXT="Subset Indexes"
"RTN","LEXXGP3",41,0)
 S:'$D(LEXQUIT) LEXQUIT="SUB" K ^TMP("LEXSUB",$J)
"RTN","LEXXGP3",42,0)
 S LEXBEG=$$BEG^LEXXGP1 D ASUBB H 1 S LEXEND=$$END^LEXXGP1
"RTN","LEXXGP3",43,0)
 D SAV(LEXBEG,LEXEND,LEXTXT) S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND)
"RTN","LEXXGP3",44,0)
 S LEXBEGD=$$ED^LEXXGP1(LEXBEG),LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND)
"RTN","LEXXGP3",45,0)
 S LEXDF=$$DF^LEXXGP1(LEXBEG),LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP3",46,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP3",47,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP3",48,0)
 N ZTQUEUED,LEXTEST
"RTN","LEXXGP3",49,0)
 I $G(LEXQUIT)="SUB" D
"RTN","LEXXGP3",50,0)
 . D:$D(LEXMAIL) XM
"RTN","LEXXGP3",51,0)
 . K ^TMP("LEXAWRD",$J),^TMP("LEXAWRDU",$J),^TMP("LEXSUB",$J),^TMP("LEXTKN",$J)
"RTN","LEXXGP3",52,0)
 . K ^TMP("LEXXGPDAT",$J),^TMP("LEXXGPTIM",$J),^TMP("LEXXGPRPT",$J)
"RTN","LEXXGP3",53,0)
 . K:'$D(LEXMAIL) ^TMP("LEXXGPMSG",$J)
"RTN","LEXXGP3",54,0)
 . K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME
"RTN","LEXXGP3",55,0)
 Q
"RTN","LEXXGP3",56,0)
ASUBB ;   ASUB Word Index Build                        11.5 minutes
"RTN","LEXXGP3",57,0)
 ;     Create the AWRD Index in the ^TMP global
"RTN","LEXXGP3",58,0)
 N LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT,LEXEX
"RTN","LEXXGP3",59,0)
 N LEXEXP,LEXTEXP,LEXIDX,LEXMC,LEXMCEI,LEXMCI,LEXRI,LEXSI,LEXSUB
"RTN","LEXXGP3",60,0)
 N LEXTKC,LEXTKN,LEXTXT,X
"RTN","LEXXGP3",61,0)
 K ^TMP("LEXSUB",$J) S:'$D(LEXQUIT) LEXQUIT="ASUBB"
"RTN","LEXXGP3",62,0)
 S LEXBEG=$$BEG^LEXXGP1,LEXSUB=0,LEXTXT="Build 'ASUB' Word Index"
"RTN","LEXXGP3",63,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.21"))
"RTN","LEXXGP3",64,0)
 F  S LEXSUB=$O(^LEX(757.21,LEXSUB)) Q:+LEXSUB'>0  D
"RTN","LEXXGP3",65,0)
 . N X,LEXEX,LEXEXP,LEXIDX,LEXMCI,LEXMCEI,LEXSI,LEXTKN
"RTN","LEXXGP3",66,0)
 . N LEXTKC,LEXNAM,LEXINAM,LEXNOD,LEXRP,LEXTEXP S LEXTEXP=0
"RTN","LEXXGP3",67,0)
 . S LEXNOD=$G(^LEX(757.21,LEXSUB,0)),LEXEX=+LEXNOD
"RTN","LEXXGP3",68,0)
 . S LEXNAM=+($P(LEXNOD,"^",2))
"RTN","LEXXGP3",69,0)
 . S LEXNAM=$P($G(^LEXT(757.2,+LEXNAM,0)),"^",2)
"RTN","LEXXGP3",70,0)
 . Q:$L(LEXNAM)'=3  S LEXINAM="A"_LEXNAM
"RTN","LEXXGP3",71,0)
 . S LEXEXP=$$UP^XLFSTR($G(^LEX(757.01,LEXEX,0))) Q:'$L(LEXEXP)
"RTN","LEXXGP3",72,0)
 . S LEXMCI=$P($G(^LEX(757.01,LEXEX,1)),"^",1) Q:+LEXMCI'>0
"RTN","LEXXGP3",73,0)
 . S LEXMCEI=$P($G(^LEX(757,LEXMCI,0)),"^",1) Q:+LEXMCEI'>0
"RTN","LEXXGP3",74,0)
 . F  S LEXTEXP=$O(^LEX(757.01,"AMC",LEXMCI,LEXTEXP)) Q:+LEXTEXP=0  D
"RTN","LEXXGP3",75,0)
 . . N LEXEXP,X,LEXIDX,LEXLOOK,LEXEXPT,LEXRP
"RTN","LEXXGP3",76,0)
 . . S (LEXEXP,X)=^LEX(757.01,LEXTEXP,0)
"RTN","LEXXGP3",77,0)
 . . K ^TMP("LEXTKN",$J) S LEXIDX="" D PTX^LEXTOKN
"RTN","LEXXGP3",78,0)
 . . ;     Supplemental Words
"RTN","LEXXGP3",79,0)
 . . I $D(^LEX(757.01,LEXTEXP,5)) D
"RTN","LEXXGP3",80,0)
 . . . N LEXV,LEXEXPT S LEXV=""
"RTN","LEXXGP3",81,0)
 . . . F  S LEXV=$O(^LEX(757.01,LEXTEXP,5,"B",LEXV)) Q:LEXV=""  D
"RTN","LEXXGP3",82,0)
 . . . . N LEXC S LEXC=$O(^TMP("LEXTKN",$J," "),-1)+1
"RTN","LEXXGP3",83,0)
 . . . . S ^TMP("LEXTKN",$J,LEXC,LEXV)=""
"RTN","LEXXGP3",84,0)
 . . . . S ^TMP("LEXTKN",$J,0)=LEXC
"RTN","LEXXGP3",85,0)
 . . ;     Replacement Words
"RTN","LEXXGP3",86,0)
 . . I $D(^LEX(757.05,"AEXP",LEXTEXP)) N LEXRP S LEXRP=0 D
"RTN","LEXXGP3",87,0)
 . . . F  S LEXRP=$O(^LEX(757.05,"AEXP",LEXTEXP,LEXRP)) Q:+LEXRP'>0  D
"RTN","LEXXGP3",88,0)
 . . . . N LEXV,LEXC
"RTN","LEXXGP3",89,0)
 . . . . S LEXV=$P(^LEX(757.05,LEXRP,0),U) Q:'$L(LEXV)
"RTN","LEXXGP3",90,0)
 . . . . S LEXC=$O(^TMP("LEXTKN",$J," "),-1)+1
"RTN","LEXXGP3",91,0)
 . . . . S ^TMP("LEXTKN",$J,LEXC,LEXV)=""
"RTN","LEXXGP3",92,0)
 . . . . S ^TMP("LEXTKN",$J,0)=LEXC
"RTN","LEXXGP3",93,0)
 . . I $D(^TMP("LEXTKN",$J,0)),^TMP("LEXTKN",$J,0)>0 D
"RTN","LEXXGP3",94,0)
 . . . S LEXTKN="",LEXTKC=0
"RTN","LEXXGP3",95,0)
 . . . F  S LEXTKC=$O(^TMP("LEXTKN",$J,LEXTKC)) Q:+LEXTKC'>0  D
"RTN","LEXXGP3",96,0)
 . . . . S LEXTKN=$O(^TMP("LEXTKN",$J,LEXTKC,"")) Q:'$L(LEXTKN)
"RTN","LEXXGP3",97,0)
 . . . . S ^TMP("LEXSUB",$J,LEXINAM,LEXTKN,LEXSUB)=""
"RTN","LEXXGP3",98,0)
 . . K ^TMP("LEXTKN",$J)
"RTN","LEXXGP3",99,0)
 K ^TMP("LEXTKN",$J) H 1 S LEXEND=$$END^LEXXGP1 D SAV(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP3",100,0)
 S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND),LEXBEGD=$$ED^LEXXGP1(LEXBEG)
"RTN","LEXXGP3",101,0)
 S LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND),LEXDF=$$DF^LEXXGP1(LEXBEG)
"RTN","LEXXGP3",102,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP3",103,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP3",104,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP3",105,0)
 D ASUBR N ZTQUEUED,LEXTEST
"RTN","LEXXGP3",106,0)
 I $G(LEXQUIT)="ASUBB" D
"RTN","LEXXGP3",107,0)
 . D:$D(LEXMAIL) XM
"RTN","LEXXGP3",108,0)
 . K ^TMP("LEXAWRD"),^TMP("LEXSUB"),^TMP("LEXTKN")
"RTN","LEXXGP3",109,0)
 . K ^TMP("LEXXGPDAT"),^TMP("LEXXGPTIM"),^TMP("LEXXGPRPT")
"RTN","LEXXGP3",110,0)
 . K LEXQUIT,ZTQUEUED,LEXMAIL,LEXHOME
"RTN","LEXXGP3",111,0)
 Q
"RTN","LEXXGP3",112,0)
ASUBR ;   ASUB Word Index Replace                       1.5 minutes
"RTN","LEXXGP3",113,0)
 N LEX1,LEX2,LEX3,LEX4,LEXBEG,LEXBEGD,LEXBEGT,LEXCHK,LEXCHR,LEXCHRS,LEXIDS
"RTN","LEXXGP3",114,0)
 N LEXCMD,LEXCOM,LEXCTL,LEXDF,LEXELP,LEXEND,LEXENDD,LEXENDT
"RTN","LEXXGP3",115,0)
 N LEXLWRD,LEXNOD,LEXRT,LEXRT1,LEXRT2,LEXTK,LEXTMP,LEXTWRD
"RTN","LEXXGP3",116,0)
 N LEXTXT,LEXID S (LEX1,LEX2,LEX3,LEX4)=0 Q:'$D(LEXQUIT)
"RTN","LEXXGP3",117,0)
 S LEXBEG=$$BEG^LEXXGP1,LEXTXT="Replace 'ASUB' Word Index" K LEXIDS
"RTN","LEXXGP3",118,0)
 I +($G(ZTSK))>0 S LEXCHK=$$S^%ZTLOAD((LEXTXT_" in file 757.21"))
"RTN","LEXXGP3",119,0)
 S LEXTMP=" " F  S LEXTMP=$O(^LEX(757.21,LEXTMP)) Q:'$L(LEXTMP)  D
"RTN","LEXXGP3",120,0)
 . S:$E(LEXTMP,1)="A" LEXIDS(LEXTMP)=""
"RTN","LEXXGP3",121,0)
 S LEXTMP=" "
"RTN","LEXXGP3",122,0)
 F  S LEXTMP=$O(^TMP("LEXSUB",$J,LEXTMP)) Q:'$L(LEXTMP)  D
"RTN","LEXXGP3",123,0)
 . S:$E(LEXTMP,1)="A" LEXIDS(LEXTMP)=""
"RTN","LEXXGP3",124,0)
 S LEXID="" F  S LEXID=$O(LEXIDS(LEXID)) Q:'$L(LEXID)  D
"RTN","LEXXGP3",125,0)
 . ;     For Subset Index
"RTN","LEXXGP3",126,0)
 . W:'$D(ZTQUEUED)&($D(LEXTEST)) !,LEXID," " S LEX1=LEX1+1
"RTN","LEXXGP3",127,0)
 . K LEXCHRS S LEXRT1="^LEX(757.21,"""_LEXID_""","
"RTN","LEXXGP3",128,0)
 . S LEXRT2="^TMP(""LEXSUB"","_$J_","""_LEXID_""","
"RTN","LEXXGP3",129,0)
 . F LEXRT=LEXRT1,LEXRT2 D
"RTN","LEXXGP3",130,0)
 . . N LEXTK S LEXTK=""
"RTN","LEXXGP3",131,0)
 . . F  S LEXTK=$O(@(LEXRT_""""_LEXTK_""")")) Q:'$L(LEXTK)  D
"RTN","LEXXGP3",132,0)
 . . . N LEXCHR S LEXCHR=$E($TR(LEXTK," ",""),1)
"RTN","LEXXGP3",133,0)
 . . . S LEXTK=$E(LEXTK,1)_"~" S:$L(LEXCHR) LEXCHRS(LEXCHR)=""
"RTN","LEXXGP3",134,0)
 . S LEXCHR="" F  S LEXCHR=$O(LEXCHRS(LEXCHR)) Q:'$L(LEXCHR)  D
"RTN","LEXXGP3",135,0)
 . . ;       For words beginning with character
"RTN","LEXXGP3",136,0)
 . . W:'$D(ZTQUEUED)&($D(LEXTEST)) LEXCHR
"RTN","LEXXGP3",137,0)
 . . N LEXLWRD,LEXTWRD,LEXIT
"RTN","LEXXGP3",138,0)
 . . S (LEXLWRD,LEXTWRD)=$C($A(LEXCHR)-1)_"~",LEXIT=0
"RTN","LEXXGP3",139,0)
 . . F  S LEXLWRD=$O(^LEX(757.21,LEXID,LEXLWRD)) D  Q:LEXIT>0
"RTN","LEXXGP3",140,0)
 . . . S:'$L(LEXLWRD) LEXIT=1 S:$E(LEXLWRD,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP3",141,0)
 . . . Q:LEXIT>0  S LEX2=LEX2+1
"RTN","LEXXGP3",142,0)
 . . . ;         Delete words from the Subset
"RTN","LEXXGP3",143,0)
 . . . N LEXNOD,LEXCTL,LEXCMD
"RTN","LEXXGP3",144,0)
 . . . S LEXNOD="^LEX(757.21,"""_LEXID_""","""_LEXTWRD_""")"
"RTN","LEXXGP3",145,0)
 . . . S LEXCTL="^LEX(757.21,"""_LEXID_""","""_LEXTWRD_""","
"RTN","LEXXGP3",146,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP3",147,0)
 . . . . S LEX3=LEX3+1
"RTN","LEXXGP3",148,0)
 . . . S LEXCMD="K ^LEX(757.21,"""_LEXID_""","""_LEXLWRD_""")"
"RTN","LEXXGP3",149,0)
 . . . X LEXCMD
"RTN","LEXXGP3",150,0)
 . . S LEXTWRD=$C($A(LEXCHR)-1)_"~",LEXIT=0
"RTN","LEXXGP3",151,0)
 . . F  S LEXTWRD=$O(^TMP("LEXSUB",$J,LEXID,LEXTWRD)) D  Q:LEXIT>0
"RTN","LEXXGP3",152,0)
 . . . S:'$L(LEXTWRD) LEXIT=1 S:$E(LEXTWRD,1)'=LEXCHR LEXIT=1
"RTN","LEXXGP3",153,0)
 . . . Q:LEXIT>0  N LEXNOD,LEXCTL
"RTN","LEXXGP3",154,0)
 . . . S LEXNOD="^TMP(""LEXSUB"","_$J_","""_LEXID_""","""_LEXTWRD_""")"
"RTN","LEXXGP3",155,0)
 . . . S LEXCTL="^TMP(""LEXSUB"","_$J_","""_LEXID_""","""_LEXTWRD_""","
"RTN","LEXXGP3",156,0)
 . . . F  S LEXNOD=$Q(@LEXNOD) Q:'$L(LEXNOD)!(LEXNOD'[LEXCTL)  D
"RTN","LEXXGP3",157,0)
 . . . . ;         Copy Index from ^TMP to ^LEX
"RTN","LEXXGP3",158,0)
 . . . . N LEXCMD S LEXCMD="S ^LEX(757.21,"""_LEXID_""","
"RTN","LEXXGP3",159,0)
 . . . . S LEXCMD=LEXCMD_$P(LEXNOD,",",4,229)_"="""""
"RTN","LEXXGP3",160,0)
 . . . . X LEXCMD S LEX4=LEX4+1
"RTN","LEXXGP3",161,0)
 . . ;       Repeat for all characters
"RTN","LEXXGP3",162,0)
 . ;     Repeat for all Subset Indexes
"RTN","LEXXGP3",163,0)
 H 1 S LEXEND=$$END^LEXXGP1 D SAV(LEXBEG,LEXEND,LEXTXT)
"RTN","LEXXGP3",164,0)
 S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND),LEXBEGD=$$ED^LEXXGP1(LEXBEG)
"RTN","LEXXGP3",165,0)
 S LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND),LEXDF=$$DF^LEXXGP1(LEXBEG)
"RTN","LEXXGP3",166,0)
 S LEXTXT=$G(LEXTXT)_$J(" ",(35-$L($G(LEXTXT))))
"RTN","LEXXGP3",167,0)
 S LEXTXT=LEXTXT_LEXDF_"   "_LEXBEGT_"   "_LEXENDT_"   "_LEXELP
"RTN","LEXXGP3",168,0)
 S LEXTXT=" "_LEXTXT W:'$D(ZTQUEUED) !,LEXTXT
"RTN","LEXXGP3",169,0)
 I LEX1>0,$D(LEXFUL) D
"RTN","LEXXGP3",170,0)
 . S LEXCOM=LEX1_" Subset"_$S(LEX1>1:"s",1:"")
"RTN","LEXXGP3",171,0)
 . D SAV(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP3",172,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP3",173,0)
 I LEX2>0,$D(LEXFUL) D
"RTN","LEXXGP3",174,0)
 . S LEXCOM=LEX2_" Word"_$S(LEX2>1:"s",1:"")
"RTN","LEXXGP3",175,0)
 . D SAV(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP3",176,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP3",177,0)
 I LEX4>0,$D(LEXFUL) D
"RTN","LEXXGP3",178,0)
 . S LEXCOM=LEX4_" Subset Index Node"_$S(LEX4>1:"s",1:"")
"RTN","LEXXGP3",179,0)
 . D SAV(LEXBEG,"","",LEXCOM)
"RTN","LEXXGP3",180,0)
 . W:'$D(ZTQUEUED) !,"   ",LEXCOM
"RTN","LEXXGP3",181,0)
 N ZTQUEUED,LEXTEST,LEXFUL
"RTN","LEXXGP3",182,0)
 Q
"RTN","LEXXGP3",183,0)
 ;
"RTN","LEXXGP3",184,0)
 ; MailMan
"RTN","LEXXGP3",185,0)
XM ;   Mail Message
"RTN","LEXXGP3",186,0)
 N LEX1,LEX2,LEXB,LEXC,LEXD,LEXE,LEXJ,LEXMAIL,LEXN
"RTN","LEXXGP3",187,0)
 N LEXPRE,LEXNEW,LEXS,LEXT,LEXX,LEXI,LEXNM,XCNP
"RTN","LEXXGP3",188,0)
 N XMDUZ,XMSCR,XMSUB,XMTEXT,XMY,XMZ
"RTN","LEXXGP3",189,0)
 D XMG K ^TMP("LEXXGPMSG",$J) N LEXI S LEXI=0
"RTN","LEXXGP3",190,0)
 F  S LEXI=$O(^TMP("LEXXGPRPT",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXXGP3",191,0)
 . N LEXN,LEXT S LEXN=$O(^TMP("LEXXGPMSG",$J," "),-1)+1
"RTN","LEXXGP3",192,0)
 . S LEXT=$G(^TMP("LEXXGPRPT",$J,LEXI))
"RTN","LEXXGP3",193,0)
 . S ^TMP("LEXXGPMSG",$J,+LEXN)=$G(LEXT),^TMP("LEXXGPMSG",$J,0)=LEXN
"RTN","LEXXGP3",194,0)
 D:$O(^TMP("LEXXGPMSG",$J,0))>0 XMS
"RTN","LEXXGP3",195,0)
 Q
"RTN","LEXXGP3",196,0)
XMG ;   Get Data for Message
"RTN","LEXXGP3",197,0)
 K ^TMP("LEXXGPRPT",$J)
"RTN","LEXXGP3",198,0)
 N LEXO1,LEXTXT,LEXLN,LEXPDT S LEXPDT="",(LEXLN,LEXO1)=0
"RTN","LEXXGP3",199,0)
 F  S LEXO1=$O(^TMP("LEXXGPDAT",$J,LEXO1)) Q:+LEXO1'>0  D
"RTN","LEXXGP3",200,0)
 . N LEXO2 S LEXO2="" F  S LEXO2=$O(^TMP("LEXXGPDAT",$J,LEXO1,LEXO2)) Q:+LEXO2'>0  D
"RTN","LEXXGP3",201,0)
 . . N LEXN,LEXBEG,LEXBEGD,LEXDF,LEXBEGT,LEXEND,LEXENDD,LEXENDT,LEXTXT
"RTN","LEXXGP3",202,0)
 . . N LEXCOM,LEXHDR,LEXELPT
"RTN","LEXXGP3",203,0)
 . . S LEXNOD=$G(^TMP("LEXXGPDAT",$J,LEXO1,LEXO2)),LEXLN=LEXLN+1
"RTN","LEXXGP3",204,0)
 . . S LEXBEG=$P(LEXNOD,"^",1),LEXD=$P(LEXBEG,".",1),LEXCOM=$P(LEXNOD,"^",8)
"RTN","LEXXGP3",205,0)
 . . I $L(LEXBEG),LEXD?7N,$L(LEXCOM) D  Q
"RTN","LEXXGP3",206,0)
 . . . N LEXN S LEXN=$O(^TMP("LEXXGPRPT",$J," "),-1)+1
"RTN","LEXXGP3",207,0)
 . . . S ^TMP("LEXXGPRPT",$J,+LEXN)="   "_LEXCOM
"RTN","LEXXGP3",208,0)
 . . S LEXDF=$$DF^LEXXGP1(LEXBEG)
"RTN","LEXXGP3",209,0)
 . . S LEXEND=$P(LEXNOD,"^",2)
"RTN","LEXXGP3",210,0)
 . . S LEXBEGD=$P(LEXNOD,"^",3)
"RTN","LEXXGP3",211,0)
 . . S LEXBEGT=$P(LEXNOD,"^",4)
"RTN","LEXXGP3",212,0)
 . . S LEXENDT=$P(LEXNOD,"^",5)
"RTN","LEXXGP3",213,0)
 . . S LEXELPT=$P(LEXNOD,"^",6)
"RTN","LEXXGP3",214,0)
 . . S LEXTXT=$P(LEXNOD,"^",7)
"RTN","LEXXGP3",215,0)
 . . S:LEXBEGD=LEXPDT&($L(LEXDF))&(LEXD'["-") LEXBEGD=LEXDF
"RTN","LEXXGP3",216,0)
 . . S LEXPDT=$G(LEXBEGD)
"RTN","LEXXGP3",217,0)
 . . S LEXTXT=$$FMT^LEXXGP1($G(LEXTXT),LEXBEGD,LEXBEGT,LEXENDT,LEXELPT)
"RTN","LEXXGP3",218,0)
 . . I '$D(^TMP("LEXXGPRPT",$J)) D
"RTN","LEXXGP3",219,0)
 . . . S ^TMP("LEXXGPRPT",$J,0)=1,^TMP("LEXXGPRPT",$J,1)="  "
"RTN","LEXXGP3",220,0)
 . . . N LEXHDR S LEXHDR="Re-Index Repair"
"RTN","LEXXGP3",221,0)
 . . . S LEXHDR=$G(LEXHDR)_$J(" ",(35-$L($G(LEXHDR))))_"Date      "_"   "_"Start   "_"   "_"Finish  "_"   "_"Elapsed "
"RTN","LEXXGP3",222,0)
 . . . S LEXHDR=" "_LEXHDR S ^TMP("LEXXGPRPT",$J,0)=2,^TMP("LEXXGPRPT",$J,2)=LEXHDR
"RTN","LEXXGP3",223,0)
 . . . S LEXHDR="---------------------------------"
"RTN","LEXXGP3",224,0)
 . . . S LEXHDR=$G(LEXHDR)_$J(" ",(35-$L($G(LEXHDR))))_"----------"_"   "_"--------"_"   "_"--------"_"   "_"--------"
"RTN","LEXXGP3",225,0)
 . . . S LEXHDR=" "_LEXHDR S ^TMP("LEXXGPRPT",$J,0)=3,^TMP("LEXXGPRPT",$J,3)=LEXHDR
"RTN","LEXXGP3",226,0)
 . . S LEXN=$O(^TMP("LEXXGPRPT",$J," "),-1)+1
"RTN","LEXXGP3",227,0)
 . . S ^TMP("LEXXGPRPT",$J,0)=LEXN,^TMP("LEXXGPRPT",$J,LEXN)=" "_LEXTXT
"RTN","LEXXGP3",228,0)
 S LEXTXT=$$FMTT^LEXXGP1 I $L(LEXTXT) D
"RTN","LEXXGP3",229,0)
 . N LEXN,LEXHDR
"RTN","LEXXGP3",230,0)
 . S LEXHDR="---------------------------------"
"RTN","LEXXGP3",231,0)
 . S LEXHDR=$G(LEXHDR)_$J(" ",(35-$L($G(LEXHDR))))_"----------"_"   "_"--------"_"   "_"--------"_"   "_"--------"
"RTN","LEXXGP3",232,0)
 . S LEXN=$O(^TMP("LEXXGPRPT",$J," "),-1)+1
"RTN","LEXXGP3",233,0)
 . S ^TMP("LEXXGPRPT",$J,0)=LEXN,^TMP("LEXXGPRPT",$J,LEXN)=" "_LEXHDR
"RTN","LEXXGP3",234,0)
 . S LEXN=$O(^TMP("LEXXGPRPT",$J," "),-1)+1
"RTN","LEXXGP3",235,0)
 . S ^TMP("LEXXGPRPT",$J,0)=LEXN,^TMP("LEXXGPRPT",$J,LEXN)=" "_LEXTXT
"RTN","LEXXGP3",236,0)
 Q
"RTN","LEXXGP3",237,0)
XMGS ;   Show Message
"RTN","LEXXGP3",238,0)
 W:$O(^TMP("LEXXGPRPT",$J,0))>0 !
"RTN","LEXXGP3",239,0)
 N LEXC S LEXC=0 F  S LEXC=$O(^TMP("LEXXGPRPT",$J,LEXC)) Q:+LEXC'>0  D
"RTN","LEXXGP3",240,0)
 . N LEXT S LEXT=$G(^TMP("LEXXGPRPT",$J,LEXC)) W:$L(LEXT) !,LEXT
"RTN","LEXXGP3",241,0)
 W:$O(^TMP("LEXXGPRPT",$J,0))>0 !!
"RTN","LEXXGP3",242,0)
 Q
"RTN","LEXXGP3",243,0)
XMB ;   Build Message
"RTN","LEXXGP3",244,0)
 K ^TMP("LEXXGPMSG",$J) N LEXI S LEXI=0
"RTN","LEXXGP3",245,0)
 F  S LEXI=$O(^TMP("LEXXGPRPT",$J,LEXI)) Q:+LEXI'>0  D
"RTN","LEXXGP3",246,0)
 . N LEXN,LEXT S LEXN=$O(^TMP("LEXXGPMSG",$J," "),-1)+1
"RTN","LEXXGP3",247,0)
 . S LEXT=$G(^TMP("LEXXGPRPT",$J,LEXI))
"RTN","LEXXGP3",248,0)
 . S ^TMP("LEXXGPMSG",$J,+LEXN)=$G(LEXT),^TMP("LEXXGPMSG",$J,0)=LEXN
"RTN","LEXXGP3",249,0)
 Q
"RTN","LEXXGP3",250,0)
XMS ;   Send Message
"RTN","LEXXGP3",251,0)
 N XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ,LEXJ,LEXNM
"RTN","LEXXGP3",252,0)
 Q:'$D(^TMP("LEXXGPMSG",$J))
"RTN","LEXXGP3",253,0)
 S XMTEXT="^TMP(""LEXXGPMSG"","_$J_",",XMSUB="Repair Major Word Indexes"
"RTN","LEXXGP3",254,0)
 S LEXNM=$$GET1^DIQ(200,+($G(DUZ)),.01) S:$D(LEXHOME) XMY(("G.LEXINS@"_$$XMA))=""
"RTN","LEXXGP3",255,0)
 S XMY(LEXNM)="",XMDUZ=.5 D ^XMD
"RTN","LEXXGP3",256,0)
 I '$D(ZTQUEUED),+($G(XMZ))>0 D
"RTN","LEXXGP3",257,0)
 . W !!," Lexicon Index Repair Message #",($G(XMZ))," sent"
"RTN","LEXXGP3",258,0)
XMSQ ;   Send Message (Quit)
"RTN","LEXXGP3",259,0)
 K ^TMP("LEXXGPMSG",$J) K XCNP,XMSCR,XMDUZ,XMY,XMZ,XMSUB,XMY,XMTEXT,XMDUZ,LEXNM
"RTN","LEXXGP3",260,0)
 Q
"RTN","LEXXGP3",261,0)
XMA(LEX) ;   Message Address
"RTN","LEXXGP3",262,0)
 N DIC,DTOUT,DUOUT,X,Y S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="FO-SLCDOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXXGP3",263,0)
 S DIC="^DIC(4.2,",DIC(0)="M",(LEX,X)="ISC-SLCDOMAIN.EXT" D ^DIC Q:+Y>0 LEX
"RTN","LEXXGP3",264,0)
 Q "ISC-SLC.DOMAIN.EXT"
"RTN","LEXXGP3",265,0)
 ;      
"RTN","LEXXGP3",266,0)
 ; Miscellaneous
"RTN","LEXXGP3",267,0)
SAV(LEXBEG,LEXEND,LEXTXT,LEXCOM) ;   Save Dates, Times and Text
"RTN","LEXXGP3",268,0)
 N LEXTMP,LEXBEGD,LEXBEGT,LEXENDD,LEXENDT,LEXP,LEXD,LEXC,LEXN,LEXELP
"RTN","LEXXGP3",269,0)
 S LEXBEG=$G(LEXBEG),LEXCOM=$G(LEXCOM)
"RTN","LEXXGP3",270,0)
 S LEXD=$P(LEXBEG,".",1) Q:LEXD'?7N
"RTN","LEXXGP3",271,0)
 I $L(LEXD),$L(LEXBEG),$L(LEXCOM) D  Q
"RTN","LEXXGP3",272,0)
 . N LEXN S LEXN=$O(^TMP("LEXXGPDAT",$J,LEXD," "),-1)+1
"RTN","LEXXGP3",273,0)
 . S ^TMP("LEXXGPDAT",$J,LEXD,+LEXN)=LEXBEG_"^^^^^^^"_LEXCOM
"RTN","LEXXGP3",274,0)
 S LEXEND=$G(LEXEND),LEXTXT=$G(LEXTXT)
"RTN","LEXXGP3",275,0)
 Q:$P(LEXEND,".",1)'?7N  Q:'$L(LEXTXT)
"RTN","LEXXGP3",276,0)
 S LEXELP=$$ELP^LEXXGP1(LEXBEG,LEXEND),LEXBEGD=$$ED^LEXXGP1(LEXBEG)
"RTN","LEXXGP3",277,0)
 S LEXBEGT=$$ET^LEXXGP1(LEXBEG),LEXENDT=$$ET^LEXXGP1(LEXEND)
"RTN","LEXXGP3",278,0)
 S LEXBEGD=$$DF^LEXXGP1(LEXBEG),LEXN=$O(^TMP("LEXXGPDAT",$J,LEXD," "),-1)+1
"RTN","LEXXGP3",279,0)
 S LEXTMP=LEXBEG_"^"_LEXEND_"^"_LEXBEGD_"^"_LEXBEGT_"^"_LEXENDT
"RTN","LEXXGP3",280,0)
 S LEXTMP=LEXTMP_"^"_LEXELP_"^"_LEXTXT
"RTN","LEXXGP3",281,0)
 S ^TMP("LEXXGPDAT",$J,LEXD,+LEXN)=LEXTMP
"RTN","LEXXGP3",282,0)
 Q
"RTN","LEXXGP3",283,0)
SSF ;   Subsets (Fileman)
"RTN","LEXXGP3",284,0)
 N LEX F LEX="AADM","AASS","AATT","ABDS","ACLF","ACLL","ACLS","ACON","ADEN","ADIS","AENL","AENV","AETH","AEVE","AFND","AFOR" K ^LEX(757.21,LEX)
"RTN","LEXXGP3",285,0)
 F LEX="AGEO","AIMM","AINA","ALIF","AMAB","ANAM","ANAV","ANUR","AOBJ","AOBS","AOCC","AORG","APER","APLS","APRC","APRD" K ^LEX(757.21,LEX)
"RTN","LEXXGP3",286,0)
 F LEX="AQUV","AREC","AREG","AREL","ASCH","ASCT","ASIT","ASOC","ASPC","ASPL","ASTG","ASUB","ATMR","B","C" K ^LEX(757.21,LEX)
"RTN","LEXXGP3",287,0)
 N DIK,ZTQUEUED S ZTQUEUED="" S DIK="^LEX(757.21," D IXALL^DIK
"RTN","LEXXGP3",288,0)
 Q
"RTN","LEXXM1")
0^28^B25249418
"RTN","LEXXM1",1,0)
LEXXM1 ;ISL/KER - Convert Text to Mix Case (1) ;12/19/2014
"RTN","LEXXM1",2,0)
 ;;2.0;General Lexicon Utilities;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXM1",3,0)
 ;               
"RTN","LEXXM1",4,0)
 ; Global Variables
"RTN","LEXXM1",5,0)
 ;    None
"RTN","LEXXM1",6,0)
 ;               
"RTN","LEXXM1",7,0)
 ; External References
"RTN","LEXXM1",8,0)
 ;    None
"RTN","LEXXM1",9,0)
 ;               
"RTN","LEXXM1",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM1",11,0)
 ;     LEXNXT,LEXUSE
"RTN","LEXXM1",12,0)
 ;     
"RTN","LEXXM1",13,0)
T1 ; 1 Character
"RTN","LEXXM1",14,0)
 N XU,CHR,PRE,LEXPRE,UIN,NXT,USE S PRE=$G(LEXPRE),UIN=$G(UIN),NXT=$G(LEXNXT),USE=$G(LEXUSE) S XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM1",15,0)
 S:XU="W"&(($G(UIN)["W/WO")!($G(UIN)["W/")) Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM1",16,0)
 ;   Special Case "A"
"RTN","LEXXM1",17,0)
 S Y="" I XU="A",$E(NXT,1,7)["SINGLE" S Y=$$LO(XU) Q
"RTN","LEXXM1",18,0)
 I $D(UIN),"^A^"[("^"_XU_"^"),(" "_UIN_" ")[(" "_XU_" ") D  Q:$L($G(Y))
"RTN","LEXXM1",19,0)
 . N UP S Y=XU Q:UIN[" A OR V "  Q:UIN[" T AND A "  Q:UIN[" A & E"  Q:UIN[" A OR B"  Q:UIN["O>HM< A"  S UP=$$UPA(XU,PRE,UIN) S:+UP'>0 Y=$$LO(XU)
"RTN","LEXXM1",20,0)
 ;   Special Case W/O
"RTN","LEXXM1",21,0)
 I "^O^W^"[("^"_XU_"^")&(UIN["W/O") S Y=$$LO(XU) Q
"RTN","LEXXM1",22,0)
 I "^G^"[("^"_XU_"^")&(+($G(PRE))>0) S Y=$$LO(XU) Q
"RTN","LEXXM1",23,0)
 ;   Uppercase
"RTN","LEXXM1",24,0)
 I "^B^C^D^E^F^G^H^I^J^K^L^M^N^O^P^Q^R^S^T^U^V^X^Y^Z^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM1",25,0)
 Q
"RTN","LEXXM1",26,0)
 ;            
"RTN","LEXXM1",27,0)
UPA(X,Y,Z) ; Check if "A" is Uppercase A
"RTN","LEXXM1",28,0)
 N CHR,FIR,OK,PRE,UP,W,XU
"RTN","LEXXM1",29,0)
 S XU=$G(X),PRE=$G(Y),UIN=$G(Z),FIR=$A($E(PRE,1))
"RTN","LEXXM1",30,0)
 S OK=1 Q:UIN[" A OR V " 1  Q:UIN[" T and A " 1  Q:UIN[" A & E" 1  Q:UIN[" A OR B" 1  Q:UIN["O>HM< A" 1  Q:PRE="&" 1
"RTN","LEXXM1",31,0)
 S OK=0 I FIR<66 F W="ACETYLGLUCOSAMINIDASE","ACETYLHEXOSAMINIDASE","ACTIONS","ACTIVIN","ACYLCOENZYME","AKIYAMI","ALDOLASE","AMINOPEPTIDASE" S:PRE=W OK=1
"RTN","LEXXM1",32,0)
 Q:OK=1 1  I FIR<66 F W="AMPHOTERICIN","AMYLOID","ANOPHELES","ANTI","ANTIBODY","ANTIGEN","APHTHOVIRUS","APOLIPOPROTEIN","APOLIPOPROTEINS","ARYLSULFATASE" S:PRE=W OK=1
"RTN","LEXXM1",33,0)
 Q:OK=1 1  I FIR<68 F W="ATTRIBUTE","ATTRIBUTES","AUXIN","AZURE","BACITRACIN","BIOVAR","BISPHENOL","BOTULINIUM","BOTULINUM","CARBOMYCIN","CARBOXYPEPTIDASE" S:PRE=W OK=1
"RTN","LEXXM1",34,0)
 Q:OK=1 1  I FIR>66,FIR<68 F W="CARMOISINE","CAROTID","CATEGORY","CHROMOGRANIN","CHYMOTRYPSIN","CICLOSPORIN","CLASS","CLINIC","CLUSTER","COBALAMIN","COENZYME" S:PRE=W OK=1
"RTN","LEXXM1",35,0)
 Q:OK=1 1  I FIR>66,FIR<70 F W="COMPOUND","CON","CONCANAVALIN","CORONARY","COXSACKIE","COXSACKIEVIRUS","CYCLOSPORIN","DIPEPTIDASE","DNASE","DOUBLE","ENTEROTOXIN" S:PRE=W OK=1
"RTN","LEXXM1",36,0)
 Q:OK=1 1  I FIR>68,FIR<72 F W="ENZYMES","EQUIZOLE","FEEDS","FIBRINOPEPTIDE","FIBRINOPEPTIDES","FORMULA","GALACTOSIDASE","GELATINASE","GENUS","GLYCOPHORIN","GP" S:PRE=W OK=1
"RTN","LEXXM1",37,0)
 Q:OK=1 1  I FIR>70,FIR<73 F W="GRADE","GRANZYME","GROUP","HAEMOGLOBIN","HAEMOPHILIA","HB","HEMOGLOBIN","HEMOPHILIA","HEP","HEPATITIS","HEXOSAMINIDASE","HLA","HPFH" S:PRE=W OK=1
"RTN","LEXXM1",38,0)
 Q:OK=1 1  I FIR>71,FIR<74 F W="HYPERVITAMINOSIS","HYPOGLYCIN","HYPOVITAMINOSIS","I","II","III","IMMUNOGLOBULIN","INDEX","INFLUENZA","INFLUENZAE","INFLUENZAVIRUS" S:PRE=W OK=1
"RTN","LEXXM1",39,0)
 Q:OK=1 1  I FIR>72,FIR<78 F W="INHIBIN","IV","JEC","LANTADENE","LASALOCID","LEFT","LEPROMIN","LEUKOTRIENE","LEVEL","LIPOPROTEIN","LOCUS","MED","MENINGITIDIS" S:PRE=W OK=1
"RTN","LEXXM1",40,0)
 Q:OK=1 1  I FIR>76,FIR<80 F W="MENINGITIS","MEPRIN","MOENOMYCIN","MORQUIO","NEOVITAMIN","NEUROKININ","NUTRITION","OLEOVITAMIN","OLIGOPEPTIDASE","ORBITAL","OXIDASE" S:PRE=W OK=1
"RTN","LEXXM1",41,0)
 Q:OK=1 1  I FIR>79,FIR<81 F W="PADIMATE","PARATYPHI","PARATYPHOID","PEPSIN","PHOSPHOLIPASE","POLYSACCHARIDE","PRECURSORS","PROTEIN","PROTEINASE","PROTEINS" S:PRE=W OK=1
"RTN","LEXXM1",42,0)
 Q:OK=1 1  I FIR>79,FIR<84 F W="PROTOVERATRINE","PUMILIOTOXIN","RASTELLI","RH","RHINITIS","RIGHT","RUTTER","SCILLAREN","SCYTALIDOPEPSIN","SEROTYPE","SOLVENT" S:PRE=W OK=1
"RTN","LEXXM1",43,0)
 Q:OK=1 1  I FIR>82,FIR<85 F W="SOMATOMEDIN","SPECIES","STAGE","STREPTOGRISIN","SUBGROUP","SUBSCALE","SUBUNIT","SULFATASE","SULFATE","SULPHATASE","T","TARIFF" S:PRE=W OK=1
"RTN","LEXXM1",44,0)
 Q:OK=1 1  I FIR>83,FIR<91 F W="TOXIN","TRIPLE","TYPE","TYPING","ULTRAVIOLET","VALUES","VENOMBIN","VIRUS","VITAMIN","WEAK" S:PRE=W OK=1
"RTN","LEXXM1",45,0)
 S X=OK
"RTN","LEXXM1",46,0)
 Q X
"RTN","LEXXM1",47,0)
 ;                    
"RTN","LEXXM1",48,0)
LO(X) ; Lower Case
"RTN","LEXXM1",49,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM1",50,0)
UP(X) ; Uppercase
"RTN","LEXXM1",51,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM1",52,0)
MX(X) ; Mix Case
"RTN","LEXXM1",53,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM1",54,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM1",55,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM1",56,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM1",57,0)
 N LEXNXT,LEXUSE
"RTN","LEXXM1",58,0)
 Q X
"RTN","LEXXM2")
0^29^B30344305
"RTN","LEXXM2",1,0)
LEXXM2 ;ISL/KER - Convert Text to Mix Case (2) ;12/19/2014
"RTN","LEXXM2",2,0)
 ;;2.0;General Lexicon Utilities;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXM2",3,0)
 ;               
"RTN","LEXXM2",4,0)
 ; Global Variables
"RTN","LEXXM2",5,0)
 ;    None
"RTN","LEXXM2",6,0)
 ;               
"RTN","LEXXM2",7,0)
 ; External References
"RTN","LEXXM2",8,0)
 ;    None
"RTN","LEXXM2",9,0)
 ;               
"RTN","LEXXM2",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM2",11,0)
 ;     LEXCTL,LEXNXT,LEXORG,LEXPRE,UIN Newed in LEXXM
"RTN","LEXXM2",12,0)
 ;     Y Set and returned to LEXXM
"RTN","LEXXM2",13,0)
 ;               
"RTN","LEXXM2",14,0)
T2 ; 2 Characters
"RTN","LEXXM2",15,0)
 N XU,CHR,PRE,ORG,NXT,USE S ORG=$G(LEXORG),PRE=$G(LEXPRE),NXT=$G(LEXNXT),UIN=$G(UIN),USE=$G(LEXUSE) S XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM2",16,0)
 ;   Exceptions
"RTN","LEXXM2",17,0)
 S:$E(XU,1)?1U&($E(XU,2)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,2)?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM2",18,0)
 I $E(XU,($L(XU)-1),$L(XU))="CC",$E(XU,($L(XU)-2))?1N S Y=$$LO(XU) Q
"RTN","LEXXM2",19,0)
 I XU="SO",$E(NXT,1,7)="STATED " S Y=$$LO(X) Q
"RTN","LEXXM2",20,0)
 S:$G(LEXCTL)["OR ROOM"!($G(LEXCTL)["OR-ROOM") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",21,0)
 S:XU="ST"&($G(PRE)=1) Y="st" S:XU="ND"&($G(PRE)=2) Y="nd" S:XU="RD"&($G(PRE)=3) Y="rd" S:XU="TH"&(+($G(PRE))>3) Y="th" Q:$L($G(Y))
"RTN","LEXXM2",22,0)
 S:XU="KR"&($G(UIN)["KRYPTON")&($G(UIN)["KR-") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",23,0)
 S:XU="CO"&($G(UIN)["COBALT")&($G(UIN)["CO-") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",24,0)
 S:XU="CO"&($G(UIN)["CO-") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM2",25,0)
 S:XU="SO"&(($G(UIN)["SO STATED")!($G(UIN)["SO DESCRIBED")) Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM2",26,0)
 S:XU="SO"&(($G(UIN)["SHOULDER ORTHOSIS")!($G(UIN)["SUPERIOR OBLIQUE")) Y=XU Q:$L($G(Y))
"RTN","LEXXM2",27,0)
 S:XU="HB"&(($G(UIN)["HB-C")!($G(UIN)["HB-S")!($G(UIN)["HB-D")!($G(UIN)["HB-E")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM2",28,0)
 S:XU="DU"&($G(UIN)["Deoxyuridine") Y="dU" Q:$L($G(Y))
"RTN","LEXXM2",29,0)
 S:XU="DU"&($G(UIN)["CHAT") Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM2",30,0)
 S:XU="DU"&(($G(UIN)["POSITIVE")!($G(UIN)["NEGATIVE")!($G(UIN)["ANTIGEN")!($G(UIN)["12")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM2",31,0)
 S:XU="DU"&(($G(UIN)["DUODENAL")!($G(UIN)["PERFORATED")!($G(UIN)["ANTIGEN")) Y=XU Q:$L($G(Y))
"RTN","LEXXM2",32,0)
 S:XU="RB"&(($G(UIN)["RUBIDIUM")!($G(UIN)["RETINOBLAST")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM2",33,0)
 S:XU="OZ"&(+($G(PRE))>0) Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM2",34,0)
 S:XU="CM"&($G(UIN)["CM-") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",35,0)
 S:XU="IN"&(($G(UIN)["IN/S")!($G(UIN)["INDIUM")) Y=XU Q:$L($G(Y))
"RTN","LEXXM2",36,0)
 S:XU="MN"&($G(UIN)["BLOOD") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",37,0)
 S:XU="RH"&(($G(UIN)'["LH")) Y="Rh" Q:$L($G(Y))
"RTN","LEXXM2",38,0)
 S:XU="GM"&(($G(UIN)["GM/")!($G(UIN)["GM)")!($G(UIN)["/GM")!($E($G(UIN),($L($G(UIN))-2),$L($G(UIN)))[" GM"))&(UIN'["METHYLASE") Y="gm" Q:$L($G(Y))
"RTN","LEXXM2",39,0)
 S:XU="FT"&($G(UIN)["FT-") Y=XU Q:$L($G(Y))
"RTN","LEXXM2",40,0)
 ;   Special Case
"RTN","LEXXM2",41,0)
 S:X="DA" Y="dA" S:X="DG" Y="dG" S:X="DU" Y="dU" Q:$L($G(Y))
"RTN","LEXXM2",42,0)
 S:X="GB" Y="gB" S:X="GH" Y="gH" S:X="KB" Y="kB" S:X="KD" Y="kD" Q:$L($G(Y))
"RTN","LEXXM2",43,0)
 S:X="PH" Y="pH" S:X="PX" Y="pX" Q:$L($G(Y))
"RTN","LEXXM2",44,0)
 S:$G(UIN)'["GC/"&(X="GC") Y="gC" Q:$L($G(Y))
"RTN","LEXXM2",45,0)
 S:($G(UIN)["OLIGO"!($G(UIN)["POLY"))&(X="DT") Y="dT" Q:$L($G(Y))
"RTN","LEXXM2",46,0)
 ;   Lower Case
"RTN","LEXXM2",47,0)
 S:$G(UIN)'["IF-"&(+$P($G(UIN),"IF ",2)'>0)&($G(UIN)'["BLOOD GROUP")&($G(UIN)'["IF(")&(X="IF") Y="if" Q:$L($G(Y))
"RTN","LEXXM2",48,0)
 I "^AM^AN^AS^AT^AT^BE^BY^CC^CM^DE^DO^EG^FT^IE^IN^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM2",49,0)
 I "^IS^IT^IN^MG^MM^NO^OF^ON^OR^PM^SQ^TO^UP^W/^WO^YL^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM2",50,0)
 I $G(UIN)["PER IU"!($E($P($G(UIN)," IU",1),$L($P($G(UIN)," IU",1)))?1N) S:X="IU" Y="iu" Q:$L($G(Y))
"RTN","LEXXM2",51,0)
 I ($G(UIN)["ML/")!($G(UIN)["/ML")!($G(UIN)["PER ML")!($E($P($G(UIN)," ML",1),$L($P($G(UIN)," ML",1)))?1N) S:X="ML" Y="ml" Q:$L($G(Y))
"RTN","LEXXM2",52,0)
 I $G(UIN)["(ML)" S:XU="ML" Y=XU Q:$L($G(Y))
"RTN","LEXXM2",53,0)
 S:($G(UIN)["; EA "!($G(UIN)[", EA ")!($G(UIN)["(EA ")!($G(UIN)[" EA)")!($G(UIN)[" EA ADD")!($G(UIN)[" EA SUB")!($G(UIN)[" EA 1"))&(X="EA") Y="ea" Q:$L($G(Y))
"RTN","LEXXM2",54,0)
 ;   Mixed Case
"RTN","LEXXM2",55,0)
 I "^ST^"[("^"_XU_"^") S Y=$$MX(XU) Q
"RTN","LEXXM2",56,0)
 ;   Upper Case
"RTN","LEXXM2",57,0)
 I CHR?1N!("^A^B^C^D^"[("^"_CHR_"^")) D  Q:$L($G(Y))
"RTN","LEXXM2",58,0)
 . I "^AA^AB^AC^AD^AF^AG^AH^AI^AK^AM^AP^AR^AV^BA^BB^BC^BE^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",59,0)
 . I "^BG^BH^BK^BL^BM^BN^BP^BR^BS^BT^BW^BX^CA^CB^CD^CE^CF^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",60,0)
 . I "^CG^CH^CI^CK^CL^CN^CO^CP^CR^CS^CT^CV^CW^CY^DB^DC^DD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",61,0)
 . I "^DG^DI^DL^DM^DN^DP^DQ^DR^DS^DT^DX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",62,0)
 I "^E^F^G^H^I^J^K^L^M^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM2",63,0)
 . I "^EA^EB^EC^EF^EM^EN^EO^EP^ER^ES^ET^EZ^FA^FB^FD^FH^FK^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",64,0)
 . I "^FO^FR^FU^GA^GC^GI^GL^GM^GP^GR^GS^GT^HA^HB^HC^HE^HF^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",65,0)
 . I "^HG^HH^HI^HL^HM^HO^HP^HR^HS^HT^HU^HX^IA^IB^IC^ID^IE^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",66,0)
 . I "^IF^IG^IH^II^IL^IM^IP^IQ^IR^IU^IV^IX^JK^KA^KO^KS^KT^LA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",67,0)
 . I "^LC^LD^LE^LF^LH^LL^LO^LP^LR^LS^LT^LU^LV^LY^MA^MB^MC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",68,0)
 . I "^MD^ME^MF^MI^MJ^MK^ML^MP^MR^MS^MT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",69,0)
 I "^N^O^P^Q^R^S^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM2",70,0)
 . I "^NA^NB^NC^NF^NG^NH^NK^NL^NO^NP^NR^NS^NT^OC^OD^OE^OH^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",71,0)
 . I "^OL^OP^OT^OX^PA^PC^PD^PE^PF^PG^PI^PK^PL^PM^PN^PO^PP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",72,0)
 . I "^PR^PS^PT^PV^PX^PZ^QA^QT^RA^RB^RC^RF^RG^RH^RI^RN^RO^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",73,0)
 . I "^RP^RR^RS^RT^RV^RX^SA^SB^SC^SD^SE^SF^SG^SH^SI^SK^SL^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",74,0)
 . I "^SM^SO^SP^SR^SS^ST^SV^SW^SX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",75,0)
 I "^T^U^V^W^X^Y^Z^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM2",76,0)
 . I "^TA^TB^TC^TD^TF^TH^TI^TK^TL^TP^TR^TS^TT^TX^UD^UK^US^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",77,0)
 . I "^UV^UV^VA^VC^VC^VH^VI^VI^VO^VP^VR^VS^VV^VW^VX^VZ^WB^WC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",78,0)
 . I "^WS^WV^XE^XH^XI^XI^XL^XM^XP^XS^XT^XU^XV^XX^XY^YM^YS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",79,0)
 . I "^YY^ZP^ZY^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM2",80,0)
 Q
"RTN","LEXXM2",81,0)
 ; 
"RTN","LEXXM2",82,0)
LO(X) ; Lower Case
"RTN","LEXXM2",83,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM2",84,0)
UP(X) ; Uppercase
"RTN","LEXXM2",85,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM2",86,0)
MX(X) ; Mix Case
"RTN","LEXXM2",87,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM2",88,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM2",89,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM2",90,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM2",91,0)
 N LEXCTL,LEXNXT,LEXORG,LEXPRE,LEXUSE,UIN,Y
"RTN","LEXXM2",92,0)
 Q X
"RTN","LEXXM3")
0^30^B91178873
"RTN","LEXXM3",1,0)
LEXXM3 ;ISL/KER - Convert Text to Mix Case (3) ;12/19/2014
"RTN","LEXXM3",2,0)
 ;;2.0;General Lexicon Utilities;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXM3",3,0)
 ;               
"RTN","LEXXM3",4,0)
 ; Global Variables
"RTN","LEXXM3",5,0)
 ;    None
"RTN","LEXXM3",6,0)
 ;               
"RTN","LEXXM3",7,0)
 ; External References
"RTN","LEXXM3",8,0)
 ;    None
"RTN","LEXXM3",9,0)
 ;               
"RTN","LEXXM3",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM3",11,0)
 ;     LEXCTL,LEXIN,LEXPRE,LEXUSE,UIN Newed in LEXXM
"RTN","LEXXM3",12,0)
 ;     Y set and returned to LEXXM
"RTN","LEXXM3",13,0)
 ;               
"RTN","LEXXM3",14,0)
T3 ; 3 Characters
"RTN","LEXXM3",15,0)
 N XU,CHR,REM,PRE,USE,NUM,TRL,P1,P2 S PRE=$G(LEXPRE),UIN=$G(UIN),USE=$G(LEXUSE) S XU=$$UP(X),CHR=$E(XU,1),REM=$E(XU,2,3),NUM=$E(XU,1),TRL=$E(XU,2,3)
"RTN","LEXXM3",16,0)
 ;   Exceptions
"RTN","LEXXM3",17,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM3",18,0)
 S:REM="ST"&($G(CHR)=1) Y="1st" S:REM="ND"&($G(CHR)=2) Y="2nd" S:REM="RD"&($G(CHR)=3) Y="3rd" S:REM="TH"&(+($G(CHR))>3) Y=CHR_"th" Q:$L($G(Y))
"RTN","LEXXM3",19,0)
 S:$E(XU,1)?1U&($E(XU,3)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1U&($E(XU,2)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,3)?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",20,0)
 S NUM=$E(XU,1),TRL=$E(XU,2,3) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM3",21,0)
 S:XU="PTO"&(UIN["POWER TAKE-OFF"!(USE["POWER TAKE-OFF")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",22,0)
 S:XU="PTO"&(UIN["POWER TAKE OFF"!(USE["POWER TAKE OFF")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",23,0)
 S:XU="TAC"&(UIN["TRIGEMINAL AUTONOMIC CEPHALGIAS"!(USE["TRIGEMINAL AUTONOMIC CEPHALGIAS")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",24,0)
 S:XU="HIT"&(UIN["HEPARIN INDUCED THROMBOCYTOPENIA"!(USE["HEPARIN INDUCED THROMBOCYTOPENIA")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",25,0)
 S:XU="MEN"&(UIN["MULTIPLE ENDOCRINE NEOPLASIA"!(USE["MULTIPLE ENDOCRINE NEOPLASIA")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",26,0)
 S:XU="ADD"&(UIN["ADD-ON") Y=$$LO(XU) S:XU="ADD"&(UIN["ADD ON") Y=$$LO(XU) S:XU="ADD"&(UIN["DEFICIT") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",27,0)
 S:XU="ALT"&((UIN["AMINOTRANSFERASE")!(UIN["FACTOR")!(UIN["PLATELET")!(UIN["PF4")!(UIN["SGPT")!(UIN["SERUM")!(UIN["ARGON LASER T")!(UIN["MEASUREMENT")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",28,0)
 S:XU="TAB"&((UIN["TYPHOID")!(UIN["TEMPORAL ARTERY")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",29,0)
 S:XU="RIG"&((UIN["FLEX")!(UIN["TEMPORAL ARTERY")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",30,0)
 S:XU="ALL"&((USE["ACUTE LYMPHOBLASTIC LEUKEMIA")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",31,0)
 S:XU="HER"&(UIN["HER-") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",32,0)
 S:XU="YAG"&(UIN["LASER") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",33,0)
 S:XU="BUN"&(UIN["UREA NITRO") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",34,0)
 S:XU="PAD"&((UIN["PERIPHERAL")!(UIN["ARTERIAL")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",35,0)
 S:XU="MEG"&((UIN["MAGNETOENCEPHALOGRAPHY")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",36,0)
 S:XU="ALT"&((PRE["NORMAL")!(PRE["ELEVATED")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",37,0)
 S:XU="TAG"&((UIN["GLYCOPROTIEN")!(UIN["72")!(UIN["TAG-")!(UIN["-TAG")!(UIN["(TAG")!(UIN["TAG 12")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",38,0)
 S:XU="HAI"&((UIN["INHIBITION")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",39,0)
 S:XU="AMP"&((UIN["ADENOSINE")!(UIN["MONOPHOSPHATE")!(UIN["CYCL")!(UIN["ACUTE")!(UIN["MASSIVE")!(UIN["PULMONARY")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",40,0)
 S:XU="AMP"&((UIN["PYROPHORYLASE")!(UIN["NUCLEOSIDASE")!(UIN["DEAMINASE")!(UIN["ACETYL")!(UIN["HEPTAMINOL")!(UIN["PROTEIN")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",41,0)
 S:XU="AMP"&((UIN["POLYPHOSPHATE")!(UIN["PHOSPHOTRANSFERASE")!(UIN["DIALDEHYDE")!(UIN["ETHYL")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",42,0)
 S:XU="AMP"&((UIN["-AMP")!(UIN["AMP-")!(PRE["PLASTIC")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",43,0)
 S:XU="BAL"&((UIN["BAL DIL")!(UIN["BAL TIS")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",44,0)
 S:XU="TIS"&((PRE["BAL")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",45,0)
 S:XU="TEM"&((UIN["TEM W")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",46,0)
 S:XU="ABL"&((PRE="")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",47,0)
 S:XU="REP"&((UIN["REP DEV")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",48,0)
 S:XU="DET"&((UIN["DET RET")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",49,0)
 S:XU="ANA"&((PRE["SANTA")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",50,0)
 S:XU="RET"&((PRE="C")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",51,0)
 S:XU="CAT"&((UIN["CRY")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",52,0)
 S:XU="ASP"&((UIN["ANTI")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",53,0)
 S:XU="DES"&((UIN["ANTI")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",54,0)
 S:XU="EST"&((UIN["-EST")!(UIN["ELECTRO")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",55,0)
 S:XU="DES"&((UIN["SPHINCTER")!(UIN["DYSEQUIL")!(UIN["DIETHYLS")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",56,0)
 S:XU="DES"&((UIN["GAMMA")!(UIN["-DES")!(UIN["DES-")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",57,0)
 S:XU="TAP"&((UIN["TAP-WATER")) Y="Tap" Q:$L($G(Y))
"RTN","LEXXM3",58,0)
 S:XU="TAP"&((UIN["TRYPSINOGEN")!(UIN["ACTIVATION")!(UIN["PEPTIDE")!(UIN[" COLI")!(UIN["CHEMO")!(UIN["TAP-")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",59,0)
 S:XU="TAP"&((UIN["TAP 0")!(UIN["TAP 2")!(UIN["PROTEIN")!(UIN["GENE")!(UIN["ANTIGEN")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",60,0)
 S:XU="PAD"&($G(LEXCTL)["(PAD)") Y=XU S:XU="CAT"&($G(LEXIN)["ANIMAL") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",61,0)
 S:XU="TWO"&($G(UIN)["DIMENSION") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",62,0)
 S:XU="CAP"&($G(LEXIN)["KNEE") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",63,0)
 S:XU="END"&(($G(LEXIN)["END-")!($G(LEXIN)["END BULBS")!($G(LEXIN)["END POINT")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM3",64,0)
 S:XU="FAM"&((UIN["PROTOCOL")!(UIN="FAM")!(UIN["FUNCTIONAL")) Y=XU Q:$L($G(Y))
"RTN","LEXXM3",65,0)
 I XU="WHO" D  Q:$L($G(Y))
"RTN","LEXXM3",66,0)
 . I $G(UIN)="WHO" S Y=XU Q
"RTN","LEXXM3",67,0)
 . S:$G(UIN)["WRIST"&($G(UIN)["ORTHO") Y=XU Q:$L($G(Y))
"RTN","LEXXM3",68,0)
 . I $G(UIN)["WHO CLASS"!($G(UIN)["WHO)")!($G(UIN)["GRADE")!($G(UIN)["WHO SYSTEM")!($G(UIN)["SCALE") S Y=XU Q
"RTN","LEXXM3",69,0)
 . I $G(UIN)["WHO ORAL"!($G(UIN)["FINDING)")!($G(UIN)["STATUS")!($G(UIN)["WHO TUMOR")!($G(UIN)["WHO TUMOUR")!($G(UIN)["WHO CNS") S Y=XU Q
"RTN","LEXXM3",70,0)
 . I $G(UIN)["WORLD HEALTH"!($G(UIN)["WHO-ART") S Y=XU Q
"RTN","LEXXM3",71,0)
 . S Y="who"
"RTN","LEXXM3",72,0)
 ;   Special Case
"RTN","LEXXM3",73,0)
 S:XU="PO2" Y="pO2" S:XU="DDI" Y="ddI" S:XU="BRZ" Y="BrZ" Q:$L($G(Y))
"RTN","LEXXM3",74,0)
 S:XU="COA" Y="CoA" S:XU="COM" Y="CoM" S:XU="EIF" Y="eIF" Q:$L($G(Y))
"RTN","LEXXM3",75,0)
 S:XU="HPR" Y="HPr" S:XU="IGA" Y="IgA" S:XU="IGD" Y="IgD" Q:$L($G(Y))
"RTN","LEXXM3",76,0)
 S:XU="IGE" Y="IgE" S:XU="IGG" Y="IgG" S:XU="IGM" Y="IgM" Q:$L($G(Y))
"RTN","LEXXM3",77,0)
 S:XU="KDA" Y="kDa" S:XU="MEC" Y="MeC" S:XU="MEO" Y="MeO" Q:$L($G(Y))
"RTN","LEXXM3",78,0)
 S:XU="NAC" Y="NAc" S:XU="NIA" Y="NIa" S:XU="OET" Y="OEt" Q:$L($G(Y))
"RTN","LEXXM3",79,0)
 S:XU="PNA" Y="pNA" S:XU="SMB" Y="SmB" S:XU="VPG" Y="VPg" Q:$L($G(Y))
"RTN","LEXXM3",80,0)
 S:XU="MCI" Y="mCi" S:XU="LPH" Y="LpH" Q:$L($G(Y))
"RTN","LEXXM3",81,0)
 S:XU="1ST" Y="1st" S:XU="2ND" Y="2nd" S:XU="3RD" Y="3rd" Q:$L($G(Y))
"RTN","LEXXM3",82,0)
 S:XU="4TH" Y="4th" S:XU="5TH" Y="6th" S:XU="7TH" Y="8th" Q:$L($G(Y))
"RTN","LEXXM3",83,0)
 S:XU="9TH" Y="9th" Q:$L($G(Y))
"RTN","LEXXM3",84,0)
 ;   Lower Case
"RTN","LEXXM3",85,0)
 I "^ALL^AMP^AND^ANY^ARE^BIS^BUT^CAN^CIS^DES^DID^DUE^END^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",86,0)
 I "^ETC^FAR^FOR^GMS^HAD^HAS^HER^HIM^HIS^HOW^ITS^LOW^LPM^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",87,0)
 I "^MAY^MCG^MED^MIN^NEW^NON^NOT^NOW^ONE^OUR^OUT^OWN^OXO^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",88,0)
 I "^P53^PER^PRE^PRO^PSI^PUT^SET^SIX^TEN^THE^TOO^TWO^USE^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",89,0)
 I "^VIA^W/O^WAS^WHO^"[("^"_XU_"^") S Y=$$LO(XU) Q
"RTN","LEXXM3",90,0)
 ;   Mixed Case
"RTN","LEXXM3",91,0)
 I "^APR^AUG^BAY^DIR^FAC^FEB^HOT^JAN^JCT^JUL^JUN^LAS^LOS^"[("^"_XU_"^") S Y=$$MX(XU) Q
"RTN","LEXXM3",92,0)
 I "^MAR^MAY^MED^MTN^NEW^NOV^OCT^OUT^SAN^SEP^SKY^"[("^"_XU_"^") S Y=$$MX(XU) Q
"RTN","LEXXM3",93,0)
 ;   Upper Case
"RTN","LEXXM3",94,0)
 I CHR?1N!("^A^B^C^"[("^"_CHR_"^")) D  Q:$L($G(Y))
"RTN","LEXXM3",95,0)
 . I "^AAA^AAC^AAF^AAT^ABA^ABC^ABI^ABL^ABO^ABP^ACE^ACP^ACS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",96,0)
 . I "^ADA^ADC^ADH^ADL^ADP^ADR^ADT^ADV^ADX^AFB^AFM^AFO^AFP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",97,0)
 . I "^AFX^AHG^AII^AKD^ALA^ALS^AMC^AMD^AMP^ANA^ANF^ANP^ANS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",98,0)
 . I "^AOE^APC^APP^APV^ARB^ARF^ASA^ASC^AST^ATF^ATP^ATX^AVP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",99,0)
 . I "^AVT^AZT^BAL^BAM^BCG^BCG^BCP^BCR^BDA^BDB^BDC^BDS^BIM^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",100,0)
 . I "^BLO^BLS^BMI^BMP^BNP^BOC^BPH^BPN^BPV^BRL^BSA^BSP^BSR^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",101,0)
 . I "^BTE^CAD^CAF^CAM^CAP^CAT^CAZ^CBC^CBD^CBF^CBZ^CCK^CCP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",102,0)
 . I "^CDC^CDP^CDR^CEA^CEF^CFA^CFS^CGP^CGS^CHF^CHO^CIC^CIN^CKD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",103,0)
 . I "^CMC^CMF^CMP^CMT^CMV^CNP^CNS^COS^CPD^CPE^CPK^CPR^CPT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",104,0)
 . I "^CRF^CRH^CRP^CRS^CRT^CSF^CSM^CTI^CTP^CVF^CVP^CWC^CWT^CYT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",105,0)
 I "^D^E^F^G^H^I^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM3",106,0)
 . I "^DAB^DAP^DAT^DBP^DCP^DCS^DDD^DDE^DDT^DEM^DET^DFA^DHP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",107,0)
 . I "^DHT^DIC^DIK^DIP^DIR^DJD^DM3^DM4^DME^DNA^DNP^DPT^DRG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",108,0)
 . I "^DRT^DSM^DTP^DVB^DVC^DVT^DXA^EAP^EBP^EBV^ECE^ECG^ECT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",109,0)
 . I "^ECX^EDL^EDR^EEE^EEG^EEO^EES^EFA^EGF^EGO^EHR^EHV^EIA^EIN^EKG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",110,0)
 . I "^ELA^EMD^EMG^EMS^EMT^ENA^ENK^ENT^EOG^EPI^EPO^EPS^ERG^ESA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",111,0)
 . I "^ESW^ETO^ETS^EVD^FAD^FAP^FDA^FDG^FDP^FGF^FMN^FPD^FSH^FSP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",112,0)
 . I "^FTC^FUS^FVC^GAP^GDH^GDP^GEC^GGT^GII^GLC^GLP^GMP^GPC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",113,0)
 . I "^GPD^GRF^GRP^GSH^GTH^GTP^GTT^GVP^HBC^HBP^HCG^HCL^HCO^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",114,0)
 . I "^HCS^HCT^HCV^HDL^HDR^HF1^HFO^HGB^HGH^HHA^HHV^HIB^HIE^HIV^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",115,0)
 . I "^HLA^HLH^HMG^HNF^HNP^HOE^HPA^HPC^HPL^HPS^HPV^HRP^HSA^HSV^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",116,0)
 . I "^HTN^HTP^HVA^IAA^IBD^IBJ^IBM^ICD^ICF^ICI^ICP^ICU^IDA^IDH^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",117,0)
 . I "^IED^IDL^IFN^IGF^IGK^IIA^IIB^IIC^IID^IIE^III^IIL^IIV^IIX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",118,0)
 . I "^IMD^IMP^IMR^IMT^INH^INR^IOL^IOP^IPD^IPV^IRF^IRM^ISC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",119,0)
 . I "^ISD^ITC^ITE^IUD^IVC^IVF^IVM^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",120,0)
 I "^J^K^L^M^N^O^P^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM3",121,0)
 . I "^JMV^KAP^KIA^KLH^KOH^KUB^LA7^LAI^LAP^LAT^LAV^LCR^LDH^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",122,0)
 . I "^LDL^LDR^LEX^LFA^LHR^LIA^LPD^LPH^LRH^LRS^LRX^LSD^LSO^M1A^MAA^MAC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",123,0)
 . I "^MAG^MAM^MAP^MBC^MBP^MC2^MCA^MCI^MCP^MDA^MDD^MDD^MDL^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",124,0)
 . I "^MDP^MDV^MEA^MEP^MHC^MIC^MIF^MIP^MLC^MLL^MM2^MMR^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",125,0)
 . I "^MNP^MPA^MPO^MPP^MPR^MPS^MRA^MRC^MRI^MRP^MRT^MRV^MSA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",126,0)
 . I "^MSG^MSH^MTP^MVV^MYC^NAD^NAG^NAP^NBD^NCA^NCS^NDC^NEC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",127,0)
 . I "^NGF^NGU^NHE^NKA^NLM^NMA^NMN^NMP^NOS^NPH^NPY^NSC^NSD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",128,0)
 . I "^NSR^NTD^NTM^NUR^NYU^OAE^OER^OEX^OLA^OME^OMP^OMT^OPC^OPV^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",129,0)
 . I "^ORA^ORB^ORC^ORF^OTC^OTF^OTW^OVA^PAF^PAG^PAL^PAP^PAS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",130,0)
 . I "^PBP^PCA^PCE^PCP^PCR^PCR^PEG^PEP^PET^PF4^PHA^PIP^PIV^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",131,0)
 . I "^PKI^PKU^PLA^PLC^PLI^PLL^PLP^PML^PNP^POC^POW^PPD^PPI^PPP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",132,0)
 . I "^PRA^PRC^PRP^PRS^PRV^PSA^PSD^PSG^PSJ^PSN^PSO^PSP^PSS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",133,0)
 . I "^PSU^PSX^PT1^PT2^PT3^PT4^PTA^PTB^PTB^PTC^PTH^PTT^PTX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",134,0)
 . I "^PV1^PV2^PVC^PZA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",135,0)
 I "^Q^R^S^T^U^V^W^X^Y^Z^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM3",136,0)
 . I "^QAC^QAM^QAN^QAO^QAP^QAQ^QAR^QHP^QIE^QIP^QST^R/O^RAB^RAG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",137,0)
 . I "^RAP^RAR^RAS^RBC^RBP^REM^REP^RGD^RIA^RIG^RII^RLS^RMI^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",138,0)
 . I "^RNA^RNP^ROM^RSV^RTY^SAA^SAM^SAP^SCD^SCE^SCP^SCT^SDD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",139,0)
 . I "^SDS^SDX^SDZ^SEO^SER^SFN^SFV^SHF^SHV^SIV^SKF^SKN^SLC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",140,0)
 . I "^SLE^SLT^SMP^SNF^SOD^SOL^SOS^SPL^SPM^SPN^SPS^SRI^SRO^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",141,0)
 . I "^SRS^SRV^SSI^STM^STP^STR^SUD^SVS^SYT^T1A^T1B^T1C^TBG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",142,0)
 . I "^TCF^TCP^TDD^TDF^TDP^TEE^TEF^TEL^TEM^TFA^TGF^TIG^TIS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",143,0)
 . I "^TIU^TLC^TMV^TNF^TNP^TPA^TPN^TRB^TRG^TRH^TRP^TRS^TSA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",144,0)
 . I "^TSH^TSI^TTP^TTR^TVL^UCB^UDP^UMP^UNB^URO^URR^USA^USF^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",145,0)
 . I "^USP^USR^UTP^VAQ^VCA^VDD^VDR^VEE^VEP^VFW^VII^VIP^VLA^VMA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",146,0)
 . I "^VON^VRA^VRE^VSG^VSO^VTE^VWF^VZV^WBC^WBC^WGA^WHO^WMD^WT1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",147,0)
 . I "^WT2^XII^XIV^XIX^XLI^XLV^XMB^XPD^XUC^XVI^XWB^XXI^XXX^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",148,0)
 . I "^YSA^ZDG^ZTA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM3",149,0)
 Q
"RTN","LEXXM3",150,0)
 ; 
"RTN","LEXXM3",151,0)
LO(X) ; Lower Case
"RTN","LEXXM3",152,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM3",153,0)
UP(X) ; Uppercase
"RTN","LEXXM3",154,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM3",155,0)
MX(X) ; Mix Case
"RTN","LEXXM3",156,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM3",157,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM3",158,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM3",159,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM3",160,0)
 N LEXCTL,LEXIN,LEXPRE,LEXUSE,UIN,Y
"RTN","LEXXM3",161,0)
 Q X
"RTN","LEXXM4")
0^31^B55634624
"RTN","LEXXM4",1,0)
LEXXM4 ;ISL/KER - Convert Text to Mix Case (4) ;12/19/2014
"RTN","LEXXM4",2,0)
 ;;2.0;General Lexicon Utilities;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXM4",3,0)
 ;               
"RTN","LEXXM4",4,0)
 ; Global Variables
"RTN","LEXXM4",5,0)
 ;    None
"RTN","LEXXM4",6,0)
 ;               
"RTN","LEXXM4",7,0)
 ; External References
"RTN","LEXXM4",8,0)
 ;    None
"RTN","LEXXM4",9,0)
 ;               
"RTN","LEXXM4",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM4",11,0)
 ;     LEXCTL,LEXIN,LEXNXT,LEXPRE,LEXUSE Newed in LEXXM
"RTN","LEXXM4",12,0)
 ;     Y set and returned to LEXXM
"RTN","LEXXM4",13,0)
 ;               
"RTN","LEXXM4",14,0)
T4 ; 4 Characters
"RTN","LEXXM4",15,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM4",16,0)
 ;   Exceptions
"RTN","LEXXM4",17,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM4",18,0)
 S NUM=$E(XU,1,2),TRL=$E(XU,3,4) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM4",19,0)
 S:$E(XU,1)?1U&($E(XU,4)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,4)?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM4",20,0)
 I "SIZE"=XU&(PRE="ANY") S Y=$$LO(X) Q
"RTN","LEXXM4",21,0)
 S:XU="NASH"&(UIN["NONALCOHOLIC STEATOHEPATITIS"!(USE["NONALCOHOLIC STEATOHEPATITIS")) Y=XU Q:$L($G(Y))
"RTN","LEXXM4",22,0)
 S:XU="NASH"&(UIN["NON-ALCOHOLIC STEATOHEPATITIS"!(USE["NON-ALCOHOLIC STEATOHEPATITIS")) Y=XU Q:$L($G(Y))
"RTN","LEXXM4",23,0)
 S:XU="ALPS"&(USE["AUTOIMMUNE") Y=XU Q:$L($G(Y))
"RTN","LEXXM4",24,0)
 I XU="MESA",$G(LEXCTL)["(MESA)" S Y=XU Q
"RTN","LEXXM4",25,0)
 S:XU="TRAM"&((UIN["TRANSVERSE")!(UIN["BREAST")) Y=XU Q:$L($G(Y))
"RTN","LEXXM4",26,0)
 S:XU="OPEN"&((UIN["OPEN HEART")) Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM4",27,0)
 S:XU="DRIL"&(UIN["DISTAL REVASCULARIZATION")&(UIN["INTERVAL LIGATION") Y=$$UP(XU) Q:$L($G(Y))
"RTN","LEXXM4",28,0)
 S:XU="TRAM"&((UIN["PROTEIN")!(UIN["GENE")!(UIN["ENDOPLASMIC RETICULUM"))&(UIN'["ACCIDENT")&(UIN'["VEHICLE") Y="TraM" Q:$L($G(Y))
"RTN","LEXXM4",29,0)
 S:XU="TIPS"&($G(LEXIN)["(TIPS)") Y=XU S:XU="TIPS"&($G(LEXCTL)["(TIPS") Y=XU S:XU="TIPS"&($G(LEXCTL)["TIPS)") Y=XU Q:$L($G(Y))
"RTN","LEXXM4",30,0)
 ;   Special Case
"RTN","LEXXM4",31,0)
 S:XU="APOA" Y="ApoA" S:XU="BBVI" Y="BbvI" S:XU="BPTH" Y="bPTH" Q:$L($G(Y))
"RTN","LEXXM4",32,0)
 S:XU="BSUE" Y="BsuE" S:XU="PCO2" Y="pCO2" S:XU="CGMP" Y="cGMP" Q:$L($G(Y))
"RTN","LEXXM4",33,0)
 S:XU="COTE" Y="CotE" S:XU="DATP" Y="dATP" S:XU="DCMP" Y="dCMP" Q:$L($G(Y))
"RTN","LEXXM4",34,0)
 S:XU="DCTP" Y="dCTP" S:XU="DGMP" Y="dGMP" S:XU="DGTP" Y="dGTP" Q:$L($G(Y))
"RTN","LEXXM4",35,0)
 S:XU="DSBA" Y="dsbA" S:XU="DTDP" Y="dTDP" S:XU="DTTP" Y="dTTP" Q:$L($G(Y))
"RTN","LEXXM4",36,0)
 S:XU="DUMP" Y="dUMP" S:XU="DURD" Y="dUrd" S:XU="DUTP" Y="dUTP" Q:$L($G(Y))
"RTN","LEXXM4",37,0)
 S:XU="ECAI" Y="EcaI" S:XU="ECOK" Y="EcoK" S:XU="ERBB" Y="erbB" Q:$L($G(Y))
"RTN","LEXXM4",38,0)
 S:XU="FELV" Y="FeLV" S:XU="FMET" Y="fMet" S:XU="GNRH" Y="GnRH" Q:$L($G(Y))
"RTN","LEXXM4",39,0)
 S:XU="GPII" Y="gpII" S:XU="HARG" Y="hArg" S:XU="HELA" Y="HeLa" Q:$L($G(Y))
"RTN","LEXXM4",40,0)
 S:XU="HGRF" Y="hGRF" S:XU="HHAI" Y="HhaI" S:XU="HPAI" Y="HpaI" Q:$L($G(Y))
"RTN","LEXXM4",41,0)
 S:XU="HPTH" Y="hPTH" S:XU="KPNI" Y="KpnI" S:XU="MCRB" Y="McrB" Q:$L($G(Y))
"RTN","LEXXM4",42,0)
 S:XU="MESH" Y="MeSH" S:XU="MRNA" Y="mRNA" S:XU="NHET" Y="NHEt" Q:$L($G(Y))
"RTN","LEXXM4",43,0)
 S:XU="NHME" Y="NHMe" S:XU="OBZL" Y="OBzl" S:XU="OTBU" Y="OtBu" Q:$L($G(Y))
"RTN","LEXXM4",44,0)
 S:XU="PGLU" Y="pGlu" S:XU="PSTI" Y="PstI" S:XU="REGA" Y="regA" Q:$L($G(Y))
"RTN","LEXXM4",45,0)
 S:XU="RRNA" Y="rRNA" S:XU="SCEI" Y="SceI" S:XU="TAQI" Y="TaqI" Q:$L($G(Y))
"RTN","LEXXM4",46,0)
 S:XU="TRFA" Y="TrfA" S:XU="TRKA" Y="trkA" S:XU="TRKB" Y="trkB" Q:$L($G(Y))
"RTN","LEXXM4",47,0)
 S:XU="TRNA" Y="tRNA" Q:$L($G(Y))
"RTN","LEXXM4",48,0)
 ;   Lower Case
"RTN","LEXXM4",49,0)
 I "LESS"=XU&($E(NXT,1,4)="THAN") S Y=$$LO(X) Q
"RTN","LEXXM4",50,0)
 I "^ALSO^AREA^BEEN^BEST^DONE^DTMN^EACH^EVEN^FIVE^FOUR^FROM^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",51,0)
 I "^HAVE^HERE^HOUR^INTO^IT'S^KIND^LATE^LEFT^LESS^LIKE^LOST^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",52,0)
 I "^MANY^MERE^MORE^MOST^MUST^NINE^NOTE^ONLY^OPEN^OURS^OVER^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",53,0)
 I "^PART^PLUS^SAME^SEEN^SITE^SOME^SUCH^SURE^TAKE^THAN^THAN^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",54,0)
 I "^THAT^THEN^THEY^THIS^THUS^UPON^USED^WERE^WHAT^WHEN^WHOM^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",55,0)
 I "^WITH^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM4",56,0)
 ;   Mixed Case
"RTN","LEXXM4",57,0)
 I "^BATH^CITH^CITY^EAST^ERIE^FORT^HOME^IOWA^IRON^JUAN^JULY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM4",58,0)
 I "^JUNE^KELL^LAKE^LOMA^LONG^LYON^PALM^PALO^PARK^RENO^ROCK^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM4",59,0)
 I "^SALT^SIDE^TYPE^WACO^WEST^YORK^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM4",60,0)
 ;   Uppercase
"RTN","LEXXM4",61,0)
 I CHR?1N!("^A^B^C^D^E^F^"[("^"_CHR_"^")) D  Q:$L($G(Y))
"RTN","LEXXM4",62,0)
 . I "^A1B5^A1BG^A4A7^A4A8^A6K7^ABL1^AICD^ABSV^ACKQ^ACTH^AIDS^AJCC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",63,0)
 . I "^ALLA^AML1^ANCA^ANIT^ARPP^ASHD^ASPE^ATLV^BADR^BCL2^BDEM^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",64,0)
 . I "^BMIC^BMWD^BPDE^BPDE^BUSI^CABG^CAP1^CAP2^CAPD^CBFB^CCPD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",65,0)
 . I "^CD34^CENP^CGRP^CHCT^COOH^COPD^CORF^CPAP^CPAP^CPEP^CPRS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",66,0)
 . I "^CPT1^CPT2^CRNA^CROS^DENT^DEXA^DGGE^DGHI^DGPW^DGY1^DGY3^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",67,0)
 . I "^DGYA^DGYB^DGYC^DGYD^DGYF^DGYG^DGYJ^DGYK^DGYL^DGYN^DGYO^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",68,0)
 . I "^DGYP^DGYQ^DGYR^DGYS^DGYU^DGYV^DGYW^DGYX^DGYZ^DHEA^DIPK^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",69,0)
 . I "^DMAC^DMBA^DMBA^DMSO^DOPS^DSAP^DSIP^DTAP^DTPA^DVBA^DVBC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",70,0)
 . I "^DVBQ^DVBT^DVBU^DVBW^DVBX^DVBY^EADT^EBNA^EBUS^ECMO^EDTA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",71,0)
 . I "^EEOA^EEOP^ENXE^ENXF^ENXG^ENXI^ENXJ^ENXK^ERCC^ERCP^ERCP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",72,0)
 . I "^ESBL^ESRD^ESRD^ESWL^ETV1^ETV6^FANA^FBAA^FEV1^FITC^FKBP^FLI1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",73,0)
 . I "^FP22^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",74,0)
 I "^G^H^I^J^K^L^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM4",75,0)
 . I "^G6PD^GABA^GATA^GECD^GECP^GECS^GERD^GHRH^GJB2^GLUT^GMAA^GMD1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",76,0)
 . I "^GMN1^GMN2^GMN3^GMN4^GMN5^GMPL^GMPT^GMRA^GMRC^GMRD^GMRE^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",77,0)
 . I "^GMRG^GMRP^GMRQ^GMRR^GMRS^GMRV^GMRY^GP22^GRSA^GYKI^HBHC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",78,0)
 . I "^HBIG^HCFA^HCMV^HCO2^HCPS^HETE^HIAA^HIDA^HISA^HLPC^HMSN^HPLC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",79,0)
 . I "^HPSA^HPFH^HSAN^HTLV^IADL^IBDE^IBDP^IBQL^IBQY^IBY3^IBY4^IBY5^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",80,0)
 . I "^IBY6^IBY7^IBY8^IBY9^IBYA^IBYB^IBYC^IBYD^IBYE^IBYF^IBYG^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",81,0)
 . I "^IBYH^IBYK^IBYL^IBYN^ICPT^IDDM^IGIV^IIIA^IIIA^IIIB^IIIC^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",82,0)
 . I "^IIID^IIIE^IORT^IMRT^INTP^IPPB^IPPB^ISUP^KAFO^LAAM^LATS^LBRN^LBRT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",83,0)
 . I "^LBRY^LEXX^LHRH^LR00^LR01^LR03^LRAR^LRLS^LTCH^LVEF^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",84,0)
 I "^M^N^O^P^Q^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM4",85,0)
 . I "^MAGE^MAGI^MCAD^MCXX^MEDA^MEDB^MEDC^MEDF^MESA^MESH^MHPE^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",86,0)
 . I "^MIBB^MLH1^MLH1^MLH2^MLH3^MLH4^MLH5^MLVP^MMPI^MMRV^MPTP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",87,0)
 . I "^MPTP^MPTP^MQSA^MRCP^MRSA^MSH1^MSH2^MSH3^MSH4^MSH5^MSH6^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",88,0)
 . I "^MSLT^MTLU^MYCN^NADH^NADP^NAPS^NARP^NBDC^NDPH^NETT^NETT^NGFI^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",89,0)
 . I "^NIST^NMES^NRDC^NSCL^NURA^NURC^NURE^NURQ^NURX^OERR^OHCS^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",90,0)
 . I "^ONCO^PABA^PAPP^PAPS^PAX3^PAX7^PDAC^PICC^PLA1^PLA2^PLA3^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",91,0)
 . I "^PMMA^POMC^PORP^PRCA^PRCP^PRMQ^PRPF^PRSX^PRX0^PRX1^PRX8^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",92,0)
 . I "^PRXB^PRXC^PRXE^PRXF^PRXG^PRXI^PRXJ^PRXK^PRXP^PRYA^PRYB^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",93,0)
 . I "^PRYC^PRYD^PRYF^PRYH^PRYJ^PRYL^PRYN^PRYP^PSA1^PSAP^PSD1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",94,0)
 . I "^PSGW^PSIV^PSJ1^PSJ4^PSOA^PSOB^PSOC^PSOD^PSOE^PSOG^PSOH^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",95,0)
 . I "^PSOJ^PSOL^PSOY^PSW1^PSXC^PTCA^PTEN^PTLD^PTSD^PUVA^PUVB^QAN1^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",96,0)
 . I "^QAR1^QAR2^QARF^QARY^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",97,0)
 I "^R^S^T^U^V^W^X^Y^Z^"[("^"_CHR_"^") D  Q:$L($G(Y))
"RTN","LEXXM4",98,0)
 . I "^RAAA^RAAB^RAAC^RAAE^RAAF^RARA^RAST^RMPC^RMPF^RMPJ^RMPR^RMPT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",99,0)
 . I "^RTEM^RTYB^RTYC^RTYD^RVEF^RXIV^RXOP^RXUD^SARS^SACH^SBCE^SCAD^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",100,0)
 . I "^SCID^SCL1^SCL2^SDHB^SDHD^SDYA^SDYM^SDYN^SDYP^SEXA^SGOT^SGPT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",101,0)
 . I "^SHBG^SIRS^SISI^SMAR^SNAP^SOWA^SOWC^SOWK^SRIF^SRIH^SROA^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",102,0)
 . I "^SRRS^SRRT^SSCP^SSX1^SSX2^STEC^TAPA^TATA^TCDD^TCDD^TCF3^TDAP^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",103,0)
 . I "^TENS^TFE3^THBR^TIMP^TIUJ^TIUW^TIUX^TLSO^TLSO^TORP^TP53^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",104,0)
 . I "^UDPG^UMLS^VALM^VAPR^VDDR^VEEM^VIIA^VIII^VLDL^VRSA^VSIT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",105,0)
 . I "^WHFO^WMMT^XIII^XQOR^XUFI^XVII^XXII^YS01^ZIFT^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM4",106,0)
 Q
"RTN","LEXXM4",107,0)
 ;          
"RTN","LEXXM4",108,0)
LO(X) ; Lower Case
"RTN","LEXXM4",109,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM4",110,0)
UP(X) ; Uppercase
"RTN","LEXXM4",111,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM4",112,0)
MX(X) ; Mix Case
"RTN","LEXXM4",113,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM4",114,0)
LD(X) ; Leading Character
"RTN","LEXXM4",115,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXM4",116,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM4",117,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM4",118,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM4",119,0)
 N LEXCTL,LEXIN,LEXNXT,LEXPRE,LEXUSE,Y
"RTN","LEXXM4",120,0)
 Q X
"RTN","LEXXM5")
0^32^B18823320
"RTN","LEXXM5",1,0)
LEXXM5 ;ISL/KER - Convert Text to Mix Case (5) ;12/19/2014
"RTN","LEXXM5",2,0)
 ;;2.0;General Lexicon Utilities;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXM5",3,0)
 ;               
"RTN","LEXXM5",4,0)
 ; Global Variables
"RTN","LEXXM5",5,0)
 ;    None
"RTN","LEXXM5",6,0)
 ;               
"RTN","LEXXM5",7,0)
 ; External References
"RTN","LEXXM5",8,0)
 ;    None
"RTN","LEXXM5",9,0)
 ;               
"RTN","LEXXM5",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM5",11,0)
 ;     LEXNXT,LEXPRE,LEXUSE Newed in LEXXM
"RTN","LEXXM5",12,0)
 ;     Y set and returned to LEXXM
"RTN","LEXXM5",13,0)
 ;               
"RTN","LEXXM5",14,0)
T5 ; 5 Characters
"RTN","LEXXM5",15,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM5",16,0)
 ;   Exceptions
"RTN","LEXXM5",17,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM5",18,0)
 S NUM=$E(XU,1,3),TRL=$E(XU,4,5) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM5",19,0)
 S:$E(XU,1)?1U&($E(XU,5)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,5)?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM5",20,0)
 S:XU="TRALI"&(UIN["TRANSFUSION-RELATED ACUTE LUNG INJURY"!(USE["TRANSFUSION-RELATED ACUTE LUNG INJURY")) Y=XU Q:$L($G(Y))
"RTN","LEXXM5",21,0)
 S:XU="TRALI"&(UIN["TRANSFUSION RELATED ACUTE LUNG INJURY"!(USE["TRANSFUSION RELATED ACUTE LUNG INJURY")) Y=XU Q:$L($G(Y))
"RTN","LEXXM5",22,0)
 S:XU="THREE"&($G(UIN)["DIMENSION") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM5",23,0)
 S:XU="FIFTH"&($E($G(NXT),1,7)["DISEASE") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM5",24,0)
 S:XU="SIXTH"&($E($G(NXT),1,7)["DISEASE") Y=$$MX(XU) Q:$L($G(Y))
"RTN","LEXXM5",25,0)
 S:XU="AREAS"&($G(PRE)["MORE") Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM5",26,0)
 ;   Special Case
"RTN","LEXXM5",27,0)
 S:X="CVIBI" Y="CviBI" S:X="DNASE" Y="DNase" S:X="ECORI" Y="EcoRI" Q:$L($G(Y))
"RTN","LEXXM5",28,0)
 S:X="GROEL" Y="GroEL" S:X="HAEII" Y="HaeII" S:X="HBSAG" Y="HBsAg" Q:$L($G(Y))
"RTN","LEXXM5",29,0)
 S:X="HINFI" Y="HinfI" S:X="HNRNP" Y="hnRNP" S:X="HPAII" Y="HpaII" Q:$L($G(Y))
"RTN","LEXXM5",30,0)
 S:X="HPGRF" Y="hpGRF" S:X="MBOII" Y="MboII" S:X="MELEU" Y="MeLeu" Q:$L($G(Y))
"RTN","LEXXM5",31,0)
 S:X="MEPHE" Y="MePhe" S:X="MEPRO" Y="MePro" S:X="NEUAC" Y="NeuAc" Q:$L($G(Y))
"RTN","LEXXM5",32,0)
 S:X="PTHRP" Y="PTHrP" S:X="RNASE" Y="RNase" S:X="SALGI" Y="SalGI" Q:$L($G(Y))
"RTN","LEXXM5",33,0)
 S:X="SNRNP" Y="snRNP" Q:$L($G(Y))
"RTN","LEXXM5",34,0)
 ;   Lower Case
"RTN","LEXXM5",35,0)
 I "EQUAL"=XU&($E(USE,($L(USE)-12),$L(USE))["THAN OR") S Y=$$LO(X) Q
"RTN","LEXXM5",36,0)
 I "^ABOVE^AFTER^BELOW^COULD^FIFTH^FIRST^FORTH^FOUND^GIVEN^HOURS"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM5",37,0)
 I "^LOWER^MAJOR^OFTEN^OTHER^OUTER^RIGHT^SITES^SIXTH^THERE^THESE"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM5",38,0)
 I "^THIRD^THREE^UPPER^USING^WHERE^WHICH^WOULD"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM5",39,0)
 ;   Mixed Case
"RTN","LEXXM5",40,0)
 I "^APRIL^ARBOR^BARRE^BEACH^BLACK^BLUFF^BRONX^CLOUD^CREEK^DIEGO"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",41,0)
 I "^DRIVE^FALLS^FARGO^GOISE^GRAND^HAVEN^HILLS^HINES^JUNCT^LINDA"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",42,0)
 I "^LOUIS^LYONS^MARCH^MEADE^MIAMI^MILES^NORTH^OMAHA^PASSO^PERRY"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",43,0)
 I "^PINES^PITTS^POINT^PUGET^RIVER^RIVER^SAINT^SALEM^SIOUX^SOUND"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",44,0)
 I "^SOUTH^TAMPA^TEXAS^TOGUS^TOMAH^VEGAS^WALLA^WAYNE^WHITE"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM5",45,0)
 ;   Uppercase
"RTN","LEXXM5",46,0)
 I "^1003F^1004F^1006F^1007F^1031C^2000F^2001F^2002F^2003F^2004F"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",47,0)
 I "^ALLA1^AREDS^BRCA1^BRCA2^BRDCL^C1251^CCAAT^CCHIT^CCND1^CD117"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",48,0)
 I "^COPD1^CTLSO^CTLSO^DDIT3^DOPAC^DPDPE^EPSDT^EPSDT^EPTFE^ERRB2"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",49,0)
 I "^EWSR1^HBSAG^HCPCS^HGSIL^HKAFO^HKAFO^HNPCC^IGFBP^JAZF1^JJAZ1"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",50,0)
 I "^KAPPA^LGSIL^MELAS^MERRF^MERRF^MYH11^NSAID^NADPH^NIDDM^NKHHC^NR4A3^PACAP"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",51,0)
 I "^PDGFB^PPROM^PUPPP^QSART^RBF56^RUNX1^SAECG^SAIDS^SEWHO^SPECT^SPECT"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",52,0)
 I "^STAAR^SUNCT^T1MIC^TCF12^THKAO^TKHAO^XVIII^XXIII^ZPACK"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM5",53,0)
 Q
"RTN","LEXXM5",54,0)
 ;          
"RTN","LEXXM5",55,0)
LO(X) ; Lower Case
"RTN","LEXXM5",56,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM5",57,0)
UP(X) ; Uppercase
"RTN","LEXXM5",58,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM5",59,0)
MX(X) ; Mix Case
"RTN","LEXXM5",60,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM5",61,0)
LD(X) ; Leading Character
"RTN","LEXXM5",62,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXM5",63,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM5",64,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM5",65,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM5",66,0)
 n LEXNXT,LEXPRE,LEXUSE,Y
"RTN","LEXXM5",67,0)
 Q X
"RTN","LEXXM6")
0^23^B54190610
"RTN","LEXXM6",1,0)
LEXXM6 ;ISL/KER - Convert Text to Mix Case (6+) ;12/19/2014
"RTN","LEXXM6",2,0)
 ;;2.0;General Lexicon Utilities;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXM6",3,0)
 ;               
"RTN","LEXXM6",4,0)
 ; Global Variables
"RTN","LEXXM6",5,0)
 ;    None
"RTN","LEXXM6",6,0)
 ;               
"RTN","LEXXM6",7,0)
 ; External References
"RTN","LEXXM6",8,0)
 ;    None
"RTN","LEXXM6",9,0)
 ;               
"RTN","LEXXM6",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXM6",11,0)
 ;     LEXNXT,LEXPRE,LEXUSE Newed in LEXXM
"RTN","LEXXM6",12,0)
 ;     Y set and returned to LEXXM
"RTN","LEXXM6",13,0)
 ;               
"RTN","LEXXM6",14,0)
T6 ; 6 Characters
"RTN","LEXXM6",15,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",16,0)
 ;   Exceptions
"RTN","LEXXM6",17,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM6",18,0)
 S NUM=$E(XU,1,4),TRL=$E(XU,5,6) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",19,0)
 I "SNOMED"=XU S Y=XU Q
"RTN","LEXXM6",20,0)
 I "STATED"=XU&(PRE="SO") S Y=$$LO(X) Q
"RTN","LEXXM6",21,0)
 I "^DEVICE^"[("^"_XU_"^")&($L(PRE)>5) S Y=$$MX(X) Q
"RTN","LEXXM6",22,0)
 S:$E(XU,1)?1U&($E(XU,6)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",23,0)
 ;   Special Case
"RTN","LEXXM6",24,0)
 S:X="DESGLY" Y="desGly" S:X="ECORII" Y="EcoRII" S:X="GALNAC" Y="GalNAc" Q:$L($G(Y))
"RTN","LEXXM6",25,0)
 S:X="GLCNAC" Y="GlcNAc" S:X="GTPASE" Y="GTPase" S:X="LEFORT" Y="LeFort" Q:$L($G(Y))
"RTN","LEXXM6",26,0)
 S:X="MURNAC" Y="MurNAc" S:X="PTDINS" Y="PtdIns" S:X="STYLTI" Y="StyLTI" Q:$L($G(Y))
"RTN","LEXXM6",27,0)
 S:X="UVRABC" Y="uvrABC" S:X="PDGOLD" Y="PdGold" S:X="IOGOLD" Y="IoGold" Q:$L($G(Y))
"RTN","LEXXM6",28,0)
 S:X="ATPASE" Y="ATPase"  Q:$L($G(Y))
"RTN","LEXXM6",29,0)
 ;   Lower Case
"RTN","LEXXM6",30,0)
 I "^BEFORE^CLOSED^CYCLIC^DEGREE^DEVICE^DURING^EFFECT^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",31,0)
 I "^EXCEPT^FACTOR^FILING^FOURTH^HEMPAS^HAVING^INSIDE^ITSELF^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",32,0)
 I "^LENGTH^MOLDED^RETURN^SECOND^SINGLE^WITHIN^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",33,0)
 ;   Mixed Case
"RTN","LEXXM6",34,0)
 I "^ANGLES^AUGUST^BATTLE^BILOXI^BONHAM^BOSTON^BUTLER^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",35,0)
 I "^CASTLE^CLINIC^DALLAS^DAYTON^DENVER^DUBLIN^DURHAM^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",36,0)
 I "^FRESNO^HEALTH^HGHLND^HOWARD^HUDSON^ISLAND^JERSEY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",37,0)
 I "^KANSAS^LESSER^LITTLE^MANILA^MARION^MARLIN^MOINES^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",38,0)
 I "^ORANGE^POPLAR^POPLAR^RETURN^SPRING^TACOMA^TEMPLE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",39,0)
 I "^TOPEKA^TUCSON^VALLEY^WILKES^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",40,0)
 ;   Uppercase
"RTN","LEXXM6",41,0)
 I "^ADAMTS^BICROS^C1251C^COL1A1^DMEPOS^FOX01A^FOXO1A^PEPPTS"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM6",42,0)
 Q
"RTN","LEXXM6",43,0)
 ;          
"RTN","LEXXM6",44,0)
T7 ; 7 Characters
"RTN","LEXXM6",45,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",46,0)
 ;   Exceptions
"RTN","LEXXM6",47,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM6",48,0)
 S NUM=$E(XU,1,5),TRL=$E(XU,6,7) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",49,0)
 S:$E(XU,1)?1U&($E(XU,7)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",50,0)
 ;   Lower Case
"RTN","LEXXM6",51,0)
 I "GREATER"=XU&($E(NXT,1,4)="THAN") S Y=$$LO(X) Q
"RTN","LEXXM6",52,0)
 I "GREATER"=XU&(PRE="OR") S Y=$$LO(X) Q
"RTN","LEXXM6",53,0)
 I "^EFFECTS^BETWEEN^ONESELF^HERSELF^HIMSELF^OUTSIDE^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",54,0)
 I "^THEREOF^ANOTHER^THEREBY^WITHOUT^MENTION^THROUGH^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",55,0)
 ;   Mixed Case
"RTN","LEXXM6",56,0)
 I "^APHAKIA^APHAKIC^ALTOONA^ANTONIO^ATLANTA^AUGUSTA^BATAVIA^BECKLEY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",57,0)
 I "^BEDFORD^BUFFALO^CENTRAL^CHICAGO^EASTERN^FLORIDA^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",58,0)
 I "^GEORGIA^GREATER^HAMPTON^HOUSTON^JACKSON^JANUARY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",59,0)
 I "^LEBANON^LINCOLN^MADISON^MEMPHIS^OCTOBER^ORLEANS^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",60,0)
 I "^PATIENT^PHOENIX^SAGINAW^SEATTLE^SPOKANE^SPRINGS^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",61,0)
 I "^WESTERN^WICHITA^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",62,0)
 ;   Uppercase
"RTN","LEXXM6",63,0)
 I "^ASPSCR1^CBFA2T1^CMVIGIV^S30R060^S30R080^S30R100^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM6",64,0)
 Q
"RTN","LEXXM6",65,0)
 ;          
"RTN","LEXXM6",66,0)
T8 ; 8 Characters
"RTN","LEXXM6",67,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",68,0)
 ;   Exceptions
"RTN","LEXXM6",69,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM6",70,0)
 S NUM=$E(XU,1,6),TRL=$E(XU,7,8) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",71,0)
 S:$E(XU,1)?1U&($E(XU,8)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",72,0)
 ;   Lower Case
"RTN","LEXXM6",73,0)
 I XU="MULTIPLE",$E(NXT,1,5)="SITES" S Y=$$LO(X) Q
"RTN","LEXXM6",74,0)
 I XU="MULTIPLE",$E(NXT,1,18)["AND UNSPECIFIED" S Y=$$LO(X) Q
"RTN","LEXXM6",75,0)
 I "^ALTHOUGH^INJURING^INCLUDES^ADDITION^EXCLUDES^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",76,0)
 ;   Mixed Case
"RTN","LEXXM6",77,0)
 I "^BROCKTON^BROOKLYN^CHEYENNE^COLUMBIA^COLUMBUS^DANVILLE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",78,0)
 I "^DECEMBER^FAYETTVL^FEBRUARY^HARRISON^HIGHLAND^HONOLULU^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",79,0)
 I "^JUNCTION^MARTINEZ^MARYLAND^MONTROSE^MOUNTAIN^MOUNTIAN^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",80,0)
 I "^MUSKOGEE^NEBRASKA^NORTHERN^OKLAHOMA^PORTLAND^PRESCOTT^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",81,0)
 I "^RICHMOND^ROSEBURG^SHERIDAN^SOUTHERN^SYRACUSE^TUSKEGEE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",82,0)
 I "^VETERANS^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",83,0)
 ;   Uppercase
"RTN","LEXXM6",84,0)
 I "^PD3S111L^PD3S111P^"[("^"_XU_"^") S Y=XU Q
"RTN","LEXXM6",85,0)
 Q
"RTN","LEXXM6",86,0)
 ;          
"RTN","LEXXM6",87,0)
T9 ; 9 Characters
"RTN","LEXXM6",88,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,P1,P2 S PRE=$G(LEXPRE),NXT=$G(LEXNXT),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",89,0)
 ;   Exceptions
"RTN","LEXXM6",90,0)
 S P1=$E(XU,1,($L(XU)-2)),P2=$E(XU,($L(XU)-1),$L(XU)) I "^CC^ML^GM^"[("^"_P2_"^"),$E(P1,$L(P1))?1N S Y=$$LO(XU) Q
"RTN","LEXXM6",91,0)
 S NUM=$E(XU,1,7),TRL=$E(XU,8,9) I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",92,0)
 S:$E(XU,1)?1U&($E(XU,9)?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",93,0)
 S:XU="MILLIGRAM"&(($G(UIN)[" PER ")&($G(UIN)[" MILLI")) Y="mg" Q:$L($G(Y))
"RTN","LEXXM6",94,0)
 ;   Lower Case
"RTN","LEXXM6",95,0)
 I "^OTHERWISE^SPECIFIED^INCLUDING^ELSEWHERE^INVOLVING^EXCLUDING^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",96,0)
 ;   Mixed Case
"RTN","LEXXM6",97,0)
 I "^ASHEVILLE^BALTIMORE^CLEVELAND^FRANCISCO^KERRVILLE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",98,0)
 I "^KNOXVILLE^LEXINGTON^LIVERMORE^MILWAUKEE^NASHVILLE^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",99,0)
 I "^NEWINGTON^NORTHPORT^SALISBURY^SEPTEMBER^SEPULVEDA^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",100,0)
 Q
"RTN","LEXXM6",101,0)
 ;          
"RTN","LEXXM6",102,0)
TM ; Long Words
"RTN","LEXXM6",103,0)
T10 ;   10 Characters
"RTN","LEXXM6",104,0)
 N XU,CHR,NUM,TRL,PRE,UIN,NXT,USE S PRE=$G(LEXPRE),NXT=$G(LEXNXT),USE=$G(LEXUSE),UIN=$G(UIN),XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",105,0)
 ;      Exceptions
"RTN","LEXXM6",106,0)
 S NUM=$E(XU,1,($L(XU)-2)),TRL=$E(XU,($L(XU)-1),$L(XU))
"RTN","LEXXM6",107,0)
 I +NUM=NUM,((TRL="TH")!(TRL="ST")!(TRL="RD")!(TRL="ND")) S Y=$$LO(XU) Q:$L($G(Y))
"RTN","LEXXM6",108,0)
 S:$E(XU,1)?1U&($E(XU,$L(XU))?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N Y=XU Q:$L($G(Y))
"RTN","LEXXM6",109,0)
 ;      Special Case
"RTN","LEXXM6",110,0)
 S:X="GDPMANNOSE" Y="GDPmannose" S:X="UDPGLUCOSE" Y="UDPglucose" Q:$L($G(Y))
"RTN","LEXXM6",111,0)
 ;      Lower Case
"RTN","LEXXM6",112,0)
 I XU="COMPLICATED",$E(NXT,1,2)="BY" S Y=$$LO(X) Q
"RTN","LEXXM6",113,0)
 I "^CONDITIONS^ADDITIONAL^CLASSIFIED^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",114,0)
 ;      Mixed Case
"RTN","LEXXM6",115,0)
 I "^BIRMINGHAM^CALIFORNIA^CHARLESTON^CINCINNATI^CLARKSBURG^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",116,0)
 I "^HEALTHCARE^HUNTINGTON^LOUISVILLE^MANCHESTER^MONTGOMERY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",117,0)
 I "^PITTSBURGH^PROVIDENCE^SHREVEPORT^TUSCALOOSA^UNIVERSITY^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",118,0)
 I "^WASHINGTON^WILMINGTON^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",119,0)
T11 ;   11 Characters
"RTN","LEXXM6",120,0)
 N XU,CHR S XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",121,0)
 ;      Exceptions
"RTN","LEXXM6",122,0)
 S:$E(XU,1)?1U&($E(XU,$L(XU))?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,$L(XU))?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM6",123,0)
 ;      Lower Case
"RTN","LEXXM6",124,0)
 I "^UNSPECIFIED^"[("^"_XU_"^") S Y=$$LO(X) Q
"RTN","LEXXM6",125,0)
 ;      Mixed Case
"RTN","LEXXM6",126,0)
 I "^CANANDAIGUA^CHILLICOTHE^COATESVILLE^CONNECTICUT^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",127,0)
 I "^GAINESVILLE^LEAVENWORTH^MARTINSBURG^MINNEAPOLIS^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",128,0)
 I "^NORTHAMPTON^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",129,0)
T12 ;   12 Characters or Greater
"RTN","LEXXM6",130,0)
 N XU,CHR S XU=$$UP(X),CHR=$E(XU,1)
"RTN","LEXXM6",131,0)
 ;      Exceptions
"RTN","LEXXM6",132,0)
 S:$E(XU,1)?1U&($E(XU,$L(XU))?1N) Y=XU Q:$L($G(Y))  S:$E(XU,1)?1N&($E(XU,$L(XU))?1U) Y=XU Q:$L($G(Y))
"RTN","LEXXM6",133,0)
 ;      Mixed Case
"RTN","LEXXM6",134,0)
 I "^INDIANAPOLIS^MURFREESBORO^PHILADELPHIA^"[("^"_XU_"^") S Y=$$MX(X) Q
"RTN","LEXXM6",135,0)
 Q
"RTN","LEXXM6",136,0)
 ;          
"RTN","LEXXM6",137,0)
LO(X) ; Lower Case
"RTN","LEXXM6",138,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM6",139,0)
UP(X) ; Uppercase
"RTN","LEXXM6",140,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXM6",141,0)
MX(X) ; Mix Case
"RTN","LEXXM6",142,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXM6",143,0)
LD(X) ; Leading Character
"RTN","LEXXM6",144,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXM6",145,0)
TRIM(X) ; Trim Spaces
"RTN","LEXXM6",146,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","LEXXM6",147,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","LEXXM6",148,0)
 n LEXNXT,LEXPRE,LEXUSE,Y
"RTN","LEXXM6",149,0)
 Q X
"RTN","LEXXMM")
0^33^B41682628
"RTN","LEXXMM",1,0)
LEXXMM ;ISL/KER - Convert Text to Mix Case (Misc) ;12/19/2014
"RTN","LEXXMM",2,0)
 ;;2.0;General Lexicon Utilities;**80,86**;Sep 23, 1996;Build 1
"RTN","LEXXMM",3,0)
 ;               
"RTN","LEXXMM",4,0)
 ; Global Variables
"RTN","LEXXMM",5,0)
 ;    ^UTILITY($J)        ICR  10011
"RTN","LEXXMM",6,0)
 ;               
"RTN","LEXXMM",7,0)
 ; External References
"RTN","LEXXMM",8,0)
 ;    ^DIWP               ICR  10011
"RTN","LEXXMM",9,0)
 ;               
"RTN","LEXXMM",10,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","LEXXMM",11,0)
 ;     ALL,LOW checked but not used
"RTN","LEXXMM",12,0)
 ;                 
"RTN","LEXXMM",13,0)
EW(X) ; Exported Word
"RTN","LEXXMM",14,0)
 N WRD,CNT,IMC,EXP,IEN,WU,WM,ORG,SCR,TTL,WL S ORG=$G(X) Q:'$L(ORG)  S (WRD,WU)=$$UP(ORG),WM=$$MX(ORG),WL=$$LO(ORG)
"RTN","LEXXMM",15,0)
 S TTL="Supplemental Word",SCR="SUP" D EW2 S TTL="Lowercase",SCR="LOW" D EW2 S TTL="Mixed Case",SCR="MIX" D EW2
"RTN","LEXXMM",16,0)
 S TTL="Uppercase",SCR="UPP" D EW2 S TTL="Special Case",SCR="SPC" D EW2
"RTN","LEXXMM",17,0)
 Q
"RTN","LEXXMM",18,0)
EW2 ;   Exported Word Indexed
"RTN","LEXXMM",19,0)
 Q:'$L($G(WRD))  N CNT,CT,EXP,I,IEN,IMC,MA,MIX,UPP
"RTN","LEXXMM",20,0)
 I $D(^LEX(757.01,"AWRD",WRD)) D  Q
"RTN","LEXXMM",21,0)
 . N CNT,IMC S (CNT,IMC)=0 F  S IMC=$O(^LEX(757.01,"AWRD",WRD,IMC)) Q:+IMC'>0  D
"RTN","LEXXMM",22,0)
 . . N IEN,EXP S EXP=$P($G(^LEX(757.01,+IMC,0)),"^",1) Q:'$L(EXP)
"RTN","LEXXMM",23,0)
 . . S IEN=0 F  S IEN=$O(^LEX(757.01,"AWRD",WRD,IMC,IEN)) Q:+IEN'>0  D
"RTN","LEXXMM",24,0)
 . . . N CT,EXP,I,MA,MIX,UPP S EXP=$P($G(^LEX(757.01,+IEN,0)),"^",1) Q:'$L(EXP)  S MIX=$$MIX^LEXXM(EXP),UPP=$$UP(EXP) D EW3
"RTN","LEXXMM",25,0)
 I $D(^LEX(757.01,"AEXC",WRD)) D
"RTN","LEXXMM",26,0)
 . Q:SCR="SUP"  Q:SCR="LOW"&('$D(ALL))
"RTN","LEXXMM",27,0)
 . N CNT,IMC S (CNT,IMC)=0 F  S IMC=$O(^LEX(757.01,"AEXC",WRD,IMC)) Q:+IMC'>0  D
"RTN","LEXXMM",28,0)
 . . N IEN,EXP,CT,EXP,I,MA,MIX,UPP S EXP=$P($G(^LEX(757.01,+IMC,0)),"^",1) Q:'$L(EXP)
"RTN","LEXXMM",29,0)
 . . Q:'$L(EXP)  S IEN=IMC,MIX=$$MIX^LEXXM(EXP),UPP=$$UP(EXP) D EW3
"RTN","LEXXMM",30,0)
 N ALL
"RTN","LEXXMM",31,0)
 Q
"RTN","LEXXMM",32,0)
EW3 ;   Exported word is Special/Lower/Upper/Mixed case
"RTN","LEXXMM",33,0)
 Q:+IEN'>0  Q:'$L($G(TTL))  Q:'$L($G(WRD))  Q:'$L($G(SCR))  N OUT
"RTN","LEXXMM",34,0)
 I SCR="SUP",UPP'[$$UP(WRD),$D(^LEX(757.01,+IEN,5,"B",WRD)) S OUT=MIX D EW4
"RTN","LEXXMM",35,0)
 I SCR="LOW",UPP[$$UP(WRD),MIX[WL,MIX'[WU,MIX'[WM S OUT=MIX D EW4
"RTN","LEXXMM",36,0)
 I SCR="MIX",UPP[$$UP(WRD),MIX[WM,MIX'[WU,MIX'[WL S OUT=MIX D EW4
"RTN","LEXXMM",37,0)
 I SCR="UPP",UPP[$$UP(WRD),MIX[WU,MIX'[WM,MIX'[WL S OUT=MIX D EW4
"RTN","LEXXMM",38,0)
 I SCR="SPC",UPP[$$UP(WRD),MIX'[WU,MIX'[WM,MIX'[WL S OUT=MIX D EW4
"RTN","LEXXMM",39,0)
 Q
"RTN","LEXXMM",40,0)
EW4 ;   Exported Word Display
"RTN","LEXXMM",41,0)
 Q:+IEN'>0  Q:'$L($G(TTL))  Q:'$L($G(OUT))
"RTN","LEXXMM",42,0)
 N I,CT,OA S CT=0 S CNT=CNT+1 W:CNT=1 !!,TTL,! W !,IEN S OA(1)=OUT D PR(.OA,70)
"RTN","LEXXMM",43,0)
 S I=0 F  S I=$O(OA(I)) Q:+I'>0  I $L($G(OA(I))) S CT=CT+1 W:CT>1 ! W ?9,$G(OA(I))
"RTN","LEXXMM",44,0)
 Q
"RTN","LEXXMM",45,0)
 ;                 
"RTN","LEXXMM",46,0)
QWIC ; Create AEXC Index
"RTN","LEXXMM",47,0)
 N BEG,CHR,DA,END,IEN,TXT,WD,WRD
"RTN","LEXXMM",48,0)
 N IEN S IEN=0 F  S IEN=$O(^LEX(757.01,IEN)) Q:+IEN'>0  D
"RTN","LEXXMM",49,0)
 . N BEG,END,TXT,DA S TXT=$P($G(^LEX(757.01,+IEN,0)),"^",1) Q:'$L(TXT)
"RTN","LEXXMM",50,0)
 . S DA=+($G(IEN)),BEG=1 F END=1:1:$L(TXT)+1 D
"RTN","LEXXMM",51,0)
 . . N CHR S CHR=$E(TXT,END) I "~!@#$%&*()_+`-=[]{};'\:|,./?<> """[CHR D
"RTN","LEXXMM",52,0)
 . . . N WRD S WRD=$E(TXT,BEG,(END-1)),BEG=END+1 I $L(WRD)>0,$L(WRD)<31 D
"RTN","LEXXMM",53,0)
 . . . . N WD S WD=$$UP(WRD) S:$L(WD) ^LEX(757.01,"AEXC",WD,DA)=""
"RTN","LEXXMM",54,0)
 Q
"RTN","LEXXMM",55,0)
PR(LEX,X) ; Parse Array LEX in X Length Strings (default 79)
"RTN","LEXXMM",56,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,LEXI,LEXLEN,LEXC,Z K ^UTILITY($J,"W") Q:'$D(LEX)
"RTN","LEXXMM",57,0)
 S LEXLEN=+($G(X)) S:+LEXLEN'>0 LEXLEN=79 S LEXC=+($G(LEX)) S:+($G(LEXC))'>0 LEXC=$O(LEX(" "),-1) Q:+LEXC'>0
"RTN","LEXXMM",58,0)
 S DIWL=1,DIWF="C"_+LEXLEN S LEXI=0 F  S LEXI=$O(LEX(LEXI)) Q:+LEXI=0  S X=$G(LEX(LEXI)) D ^DIWP
"RTN","LEXXMM",59,0)
 K LEX S (LEXC,LEXI)=0 F  S LEXI=$O(^UTILITY($J,"W",1,LEXI)) Q:+LEXI=0  D
"RTN","LEXXMM",60,0)
 . S LEX(LEXI)=$$TM($G(^UTILITY($J,"W",1,LEXI,0))," "),LEXC=LEXC+1
"RTN","LEXXMM",61,0)
 S:$L(LEXC) LEX=LEXC K ^UTILITY($J,"W")
"RTN","LEXXMM",62,0)
 Q
"RTN","LEXXMM",63,0)
 ;                 
"RTN","LEXXMM",64,0)
 ; Swap
"RTN","LEXXMM",65,0)
SW1(X) ;   Switch Text (before setting case)
"RTN","LEXXMM",66,0)
 N TXT,SWAP,WITH S TXT=$G(X) Q:'$L(TXT) TXT
"RTN","LEXXMM",67,0)
 S SWAP="I.E.",WITH="IE",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",68,0)
 S SWAP="E.G.",WITH="EG",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",69,0)
 S X=TXT
"RTN","LEXXMM",70,0)
 Q X
"RTN","LEXXMM",71,0)
SW2(X) ;   Switch Text (after setting case)
"RTN","LEXXMM",72,0)
 N TXT,SWAP,WITH S TXT=$G(X) Q:'$L(TXT) TXT
"RTN","LEXXMM",73,0)
 S SWAP="(S)",WITH="(s)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",74,0)
 S SWAP=" (E)",WITH="(e)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",75,0)
 S SWAP="(E)",WITH="(e)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",76,0)
 S SWAP=" A ",WITH=" a ",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",77,0)
 S SWAP="Class a",WITH="Clas A",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",78,0)
 S SWAP="Type a",WITH="Type A",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",79,0)
 S SWAP="'S",WITH="'s",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",80,0)
 S SWAP="mg Diet",WITH="MG Diet",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",81,0)
 S SWAP="LO-Fat",WITH="Lo-Fat",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",82,0)
 S X=$G(TXT)
"RTN","LEXXMM",83,0)
 Q X
"RTN","LEXXMM",84,0)
SW3(X) ;   Switch Text (after assembling string)
"RTN","LEXXMM",85,0)
 N TXT,C1,C2,SWAP,WITH,PIE S TXT=$G(X) Q:'$L(TXT) TXT
"RTN","LEXXMM",86,0)
 S SWAP=" (S)",WITH="(s)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",87,0)
 S SWAP="(S)",WITH="(s)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",88,0)
 S SWAP=" (E)",WITH="(e)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",89,0)
 S SWAP="(E)",WITH="(e)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",90,0)
 S SWAP="CR(e)St",WITH="CR(E)ST",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",91,0)
 S SWAP="CR(e),St",WITH="CR(E)ST",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",92,0)
 S SWAP="'S",WITH="'s",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",93,0)
 S SWAP=" (Only)",WITH=" (only)",TXT=$$SWAP(TXT,SWAP,WITH) S SWAP="(Only)",WITH="(only)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",94,0)
 S SWAP=" (Each)",WITH=" (each)",TXT=$$SWAP(TXT,SWAP,WITH) S SWAP="(Each)",WITH="(each)",TXT=$$SWAP(TXT,SWAP,WITH)
"RTN","LEXXMM",95,0)
 F PIE=1:1 Q:'$L($P(TXT,"&",PIE))  D
"RTN","LEXXMM",96,0)
 . N P1,P2 S P1=$P(TXT,"&",1,PIE) Q:'$L(P1)  S P2=$P(TXT,"&",(PIE+1),$L(TXT,"&")) Q:'$L(P2)  S:P1[" "&($E(P2,1)'=" ") TXT=$$TM(P1)_"&"_$$TM(P2)
"RTN","LEXXMM",97,0)
 S X=TXT Q:$D(LOW) X  S C1=$E(X,1),C2=$E(X,2),C1=C1?1U,C2=C2?1U
"RTN","LEXXMM",98,0)
 S:(C1+C2)'=1 X=$TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(X,2,$L(X))
"RTN","LEXXMM",99,0)
 N LOW
"RTN","LEXXMM",100,0)
 Q X
"RTN","LEXXMM",101,0)
SWAP(X,A,B) ;   Swap text "A" for text "B" in text "X"
"RTN","LEXXMM",102,0)
 N TXT,SWAP,WITH S TXT=$G(X),SWAP=$G(A),WITH=$G(B) Q:'$L(TXT) TXT  Q:'$L(SWAP) TXT  Q:TXT'[SWAP TXT  Q:SWAP=WITH TXT  Q:WITH[SWAP TXT
"RTN","LEXXMM",103,0)
 F  Q:TXT'[SWAP  S (X,TXT)=$P(TXT,SWAP,1)_WITH_$P(TXT,SWAP,2,299)
"RTN","LEXXMM",104,0)
 Q X
"RTN","LEXXMM",105,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","LEXXMM",106,0)
 S X=$G(X),Y=$G(Y) Q:$L(Y)&(X'[Y) X  S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" " F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","LEXXMM",107,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","LEXXMM",108,0)
 Q X
"RTN","LEXXMM",109,0)
 ;                 
"RTN","LEXXMM",110,0)
 ; Case
"RTN","LEXXMM",111,0)
IG(X) ;   Ignore Case
"RTN","LEXXMM",112,0)
 N IN,XU,CHR,TMP S IN=$G(X),XU=$$UP(IN),CHR=$E(XU,1),TMP="TYPE "_XU,TMP=$$MIX^LEXXM(TMP),TMP=$E(TMP,6,$L(TMP)) Q:TMP=IN 1
"RTN","LEXXMM",113,0)
 Q 0
"RTN","LEXXMM",114,0)
IL(X) ;   Is Lowercase
"RTN","LEXXMM",115,0)
 Q:'$L($G(X)) 0  Q:$E($G(X),1)'?1A 0  N CH,I,WD S WD=$G(X),X=1 F I=1:1 S CH=$E(WD,I) Q:'$L(CH)  S:CH?1U X=0 Q:'X
"RTN","LEXXMM",116,0)
 Q X
"RTN","LEXXMM",117,0)
IU(X) ;   Is Uppercase
"RTN","LEXXMM",118,0)
 Q:'$L($G(X)) 0  Q:$E($G(X),1)'?1A 0  N CH,I,WD S WD=$G(X),X=1 F I=1:1 S CH=$E(WD,I) Q:'$L(CH)  S:CH?1L X=0 Q:'X
"RTN","LEXXMM",119,0)
 Q X
"RTN","LEXXMM",120,0)
IM(X) ;   Is Mixed Case
"RTN","LEXXMM",121,0)
 Q:'$L($G(X)) 0  Q:$E($G(X),1)'?1A 0  N CH,I,WD S WD=$G(X),X=1 F I=1:1 S CH=$E(WD,I) Q:'$L(CH)  S:I=1&(CH'?1U) X=0 S:I>1&(CH?1U) X=0 Q:'X
"RTN","LEXXMM",122,0)
 Q X
"RTN","LEXXMM",123,0)
IS(X) ;   Is Special Case
"RTN","LEXXMM",124,0)
 Q:$L($G(X))'>1 0  Q:$E($G(X),1)'?1A 0  N CH,PC,WD,I S WD=$G(X),X=0 F I=2:1 S CH=$E(WD,I),PC=$E(WD,(I-1)) Q:'$L(CH)  S:CH?1U&(PC?1L) X=1 Q:X>0
"RTN","LEXXMM",125,0)
 Q X
"RTN","LEXXMM",126,0)
LO(X) ;   Lower Case
"RTN","LEXXMM",127,0)
 Q $TR(X,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXMM",128,0)
UP(X) ;   Uppercase
"RTN","LEXXMM",129,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LEXXMM",130,0)
MX(X) ;   Mix Case Term
"RTN","LEXXMM",131,0)
 Q $TR($E(X,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$TR($E(X,2,$L(X)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","LEXXMM",132,0)
MIX(X) ;   Mixed Case Word
"RTN","LEXXMM",133,0)
 N IN,XU,CHR,TMP S IN=$G(X),XU=$$UP(IN),CHR=$E(XU,1),TMP="TYPE "_XU,TMP=$$MIX^LEXXM(TMP),TMP=$E(TMP,6,$L(TMP)) S X=TMP
"RTN","LEXXMM",134,0)
 Q X
"SEC","^DIC",757.018,757.018,0,"AUDIT")
@
"SEC","^DIC",757.018,757.018,0,"DD")
@
"SEC","^DIC",757.018,757.018,0,"DEL")
@
"SEC","^DIC",757.018,757.018,0,"LAYGO")
@
"SEC","^DIC",757.018,757.018,0,"RD")
@
"SEC","^DIC",757.018,757.018,0,"WR")
@
"UP",757.01,757.118,-1)
757.01^7
"UP",757.01,757.118,0)
757.118
"VER")
8.0^22.0
"^DD",757.01,757.118,2,0)
HIERARCHY^P757.018'^LEX(757.018,^0;3^Q
"^DD",757.01,757.118,2,3)
Enter a SNOMED CT Hierarchy Name.
"^DD",757.01,757.118,2,21,0)
^^1^1^3140915^
"^DD",757.01,757.118,2,21,1,0)
This is the SNOMED CT Hierarchy that the concept belongs to.
"^DD",757.01,757.118,2,"DT")
3140915
"^DD",757.018,757.018,0)
FIELD^^1^4
"^DD",757.018,757.018,0,"DDA")
N
"^DD",757.018,757.018,0,"DT")
3140914
"^DD",757.018,757.018,0,"IX","ABR",757.018,.02)

"^DD",757.018,757.018,0,"IX","B",757.018,.01)

"^DD",757.018,757.018,0,"IX","C",757.018,.01)

"^DD",757.018,757.018,0,"NM","SNOMED CT HIERARCHY")

"^DD",757.018,757.018,0,"PT",757.118,2)

"^DD",757.018,757.018,0,"VRPK")
LEX
"^DD",757.018,757.018,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",757.018,757.018,.01,1,0)
^.1
"^DD",757.018,757.018,.01,1,1,0)
757.018^B
"^DD",757.018,757.018,.01,1,1,1)
S ^LEX(757.018,"B",$E(X,1,30),DA)=""
"^DD",757.018,757.018,.01,1,1,2)
K ^LEX(757.018,"B",$E(X,1,30),DA)
"^DD",757.018,757.018,.01,1,1,"%D",0)
^^4^4^3140915^
"^DD",757.018,757.018,.01,1,1,"%D",1,0)
^LEX(757.018,"B",NAME,IEN) - Where NAME is the name of a Hierarchy in
"^DD",757.018,757.018,.01,1,1,"%D",2,0)
the SNOMED CT Hierarchy file (757.018) and IEN is the Internal Entry
"^DD",757.018,757.018,.01,1,1,"%D",3,0)
Number where the hierarchy name is located in the SNOMED CT Hierarchy
"^DD",757.018,757.018,.01,1,1,"%D",4,0)
file (757.018).
"^DD",757.018,757.018,.01,1,2,0)
757.018^C^MUMPS
"^DD",757.018,757.018,.01,1,2,1)
S ^LEX(757.018,"C",$$UP^XLFSTR($E(X,1,30)),DA)=""
"^DD",757.018,757.018,.01,1,2,2)
K ^LEX(757.018,"C",$$UP^XLFSTR($E(X,1,30)),DA)
"^DD",757.018,757.018,.01,1,2,"%D",0)
^^4^4^3140915^
"^DD",757.018,757.018,.01,1,2,"%D",1,0)
^LEX(757.018,"C",UPPER,IEN) - Where UPPER is the uppercase name of a 
"^DD",757.018,757.018,.01,1,2,"%D",2,0)
Hierarchy in the SNOMED CT Hierarchy file (757.018) and IEN is the 
"^DD",757.018,757.018,.01,1,2,"%D",3,0)
Internal Entry Number where the hierarchy name is located in the SNOMED
"^DD",757.018,757.018,.01,1,2,"%D",4,0)
CT Hierarchy file (757.018).
"^DD",757.018,757.018,.01,1,2,"DT")
3140915
"^DD",757.018,757.018,.01,3)
Answer must be 3-100 characters in length.
"^DD",757.018,757.018,.01,21,0)
^^3^3^3140915^
"^DD",757.018,757.018,.01,21,1,0)
This field contains the name of a SNOMED CT hierarchy (e.g., Disorder, 
"^DD",757.018,757.018,.01,21,2,0)
Procedure, Finding, Organism, Body Structure, Substance, Observable 
"^DD",757.018,757.018,.01,21,3,0)
Entity, Physical Object, Occupation, Specimen, etc.)
"^DD",757.018,757.018,.01,"DT")
3140915
"^DD",757.018,757.018,.02,0)
ABBREVIATION^F^^0;2^K:$L(X)>3!($L(X)<3) X
"^DD",757.018,757.018,.02,1,0)
^.1
"^DD",757.018,757.018,.02,1,1,0)
757.018^ABR^MUMPS
"^DD",757.018,757.018,.02,1,1,1)
S ^LEX(757.018,"ABR",$$UP^XLFSTR($E(X,1,3)),DA)=""
"^DD",757.018,757.018,.02,1,1,2)
K ^LEX(757.018,"ABR",$$UP^XLFSTR($E(X,1,3)),DA)
"^DD",757.018,757.018,.02,1,1,"%D",0)
^^4^4^3140915^
"^DD",757.018,757.018,.02,1,1,"%D",1,0)
^LEX(757.018,"ABR",ABBR,IEN) - Where ABBR is the abbreviation for a 
"^DD",757.018,757.018,.02,1,1,"%D",2,0)
Hierarchy in the SNOMED CT Hierarchy file (757.018) and IEN is the 
"^DD",757.018,757.018,.02,1,1,"%D",3,0)
Internal Entry Number where the hierarchy abbreviation is located 
"^DD",757.018,757.018,.02,1,1,"%D",4,0)
in the SNOMED CT Hierarchy file (757.018).
"^DD",757.018,757.018,.02,1,1,"DT")
3140915
"^DD",757.018,757.018,.02,3)
Answer must be 3 characters in length.
"^DD",757.018,757.018,.02,21,0)
^^2^2^3140915^
"^DD",757.018,757.018,.02,21,1,0)
This is a three character unique abbreviation representing the SNOMED
"^DD",757.018,757.018,.02,21,2,0)
CT hierarchy (e.g., DIS, PRC, FND, ORG, BDS, SUB, OBS, OBJ, OCC, etc.)
"^DD",757.018,757.018,.02,"DT")
3140915
"^DD",757.018,757.018,.03,0)
NUMBER^NJ7,0^^0;3^K:+X'=X!(X>7000000)!(X<0)!(X?.E1"."1.N) X
"^DD",757.018,757.018,.03,3)
Type a number between 0 and 7000000, 0 decimal digits.
"^DD",757.018,757.018,.03,21,0)
^^2^2^3140915^
"^DD",757.018,757.018,.03,21,1,0)
This is the number of SNOMED CT concepts that fall into the hierarchy.
"^DD",757.018,757.018,.03,21,2,0)
This is for internal use only.
"^DD",757.018,757.018,.03,"DT")
3140915
"^DD",757.018,757.018,1,0)
SUBSET MEMBERSHIP^757.181P^^1;0
"^DD",757.018,757.018,1,21,0)
^^1^1^3140915^
"^DD",757.018,757.018,1,21,1,0)
This is a list of the Lexicon Subsets this hierarchy can belong to.
"^DD",757.018,757.181,0)
SUBSET MEMBERSHIP SUB-FIELD^^.01^1
"^DD",757.018,757.181,0,"DT")
3140914
"^DD",757.018,757.181,0,"IX","B",757.181,.01)

"^DD",757.018,757.181,0,"NM","SUBSET MEMBERSHIP")

"^DD",757.018,757.181,0,"UP")
757.018
"^DD",757.018,757.181,.01,0)
SUBSET^MP757.2'^LEXT(757.2,^0;1^Q
"^DD",757.018,757.181,.01,1,0)
^.1
"^DD",757.018,757.181,.01,1,1,0)
757.181^B
"^DD",757.018,757.181,.01,1,1,1)
S ^LEX(757.018,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",757.018,757.181,.01,1,1,2)
K ^LEX(757.018,DA(1),1,"B",$E(X,1,30),DA)
"^DD",757.018,757.181,.01,1,1,"%D",0)
^^6^6^3140917^
"^DD",757.018,757.181,.01,1,1,"%D",1,0)
^LEX(757.018,HIER,1,"B",SUB,IEN) - where HIER is the Internal Entry 
"^DD",757.018,757.181,.01,1,1,"%D",2,0)
Number of the Hierarchy in the SNOMED CT Hierarchy file #757.018 
"^DD",757.018,757.181,.01,1,1,"%D",3,0)
which an associated Subset, SUB is a pointer to a subset in the
"^DD",757.018,757.181,.01,1,1,"%D",4,0)
Subset Definition file #757.2, and IEN is the Internal Entry Number
"^DD",757.018,757.181,.01,1,1,"%D",5,0)
in the Subset Membership Sub-File #757.181 where the associated
"^DD",757.018,757.181,.01,1,1,"%D",6,0)
subset is located.
"^DD",757.018,757.181,.01,3)
Enter a subset this Hierarchy component belongs to.
"^DD",757.018,757.181,.01,21,0)
^^2^2^3140915^
"^DD",757.018,757.181,.01,21,1,0)
This is a Lexicon Subsets this hierarchy can belong to.  Lexicon
"^DD",757.018,757.181,.01,21,2,0)
Subsets are found in the Subset Definition file #757.2.
"^DD",757.018,757.181,.01,"DT")
3140915
"^DIC",757.018,757.018,0)
SNOMED CT HIERARCHY^757.018
"^DIC",757.018,757.018,0,"GL")
^LEX(757.018,
"^DIC",757.018,757.018,"%",0)
^1.005^^0
"^DIC",757.018,757.018,"%D",0)
^^3^3^3140914^
"^DIC",757.018,757.018,"%D",1,0)
SNOMED CT concepts are organized in hierarchies with multiple levels of 
"^DIC",757.018,757.018,"%D",2,0)
granularity. This file stores the names of the hierarchies and when
"^DIC",757.018,757.018,"%D",3,0)
applicable, the Lexicon Subset the hierarchy is a member of.
"^DIC",757.018,"B","SNOMED CT HIERARCHY",757.018)

**INSTALL NAME**
ICD*18.0*67
"BLD",8328,0)
ICD*18.0*67^DRG GROUPER^0^3141219^y
"BLD",8328,1,0)
^^2^2^3140811^
"BLD",8328,1,1,0)
Please see the National Patch Module for details of the enhancements
"BLD",8328,1,2,0)
included in this patch. 
"BLD",8328,4,0)
^9.64PA^^
"BLD",8328,6.3)
1
"BLD",8328,"KRN",0)
^9.67PA^779.2^20
"BLD",8328,"KRN",.4,0)
.4
"BLD",8328,"KRN",.401,0)
.401
"BLD",8328,"KRN",.402,0)
.402
"BLD",8328,"KRN",.403,0)
.403
"BLD",8328,"KRN",.5,0)
.5
"BLD",8328,"KRN",.84,0)
.84
"BLD",8328,"KRN",3.6,0)
3.6
"BLD",8328,"KRN",3.8,0)
3.8
"BLD",8328,"KRN",9.2,0)
9.2
"BLD",8328,"KRN",9.8,0)
9.8
"BLD",8328,"KRN",9.8,"NM",0)
^9.68A^19^16
"BLD",8328,"KRN",9.8,"NM",1,0)
ICD1867^^0^B77504315
"BLD",8328,"KRN",9.8,"NM",4,0)
ICDEXLK^^0^B131568990
"BLD",8328,"KRN",9.8,"NM",5,0)
ICDEXLK2^^0^B167936583
"BLD",8328,"KRN",9.8,"NM",7,0)
ICDEXLK4^^0^B25474563
"BLD",8328,"KRN",9.8,"NM",8,0)
ICDEXLK5^^0^B69728185
"BLD",8328,"KRN",9.8,"NM",9,0)
ICDEXLK6^^0^B93947228
"BLD",8328,"KRN",9.8,"NM",10,0)
ICDEXC^^0^B109821658
"BLD",8328,"KRN",9.8,"NM",11,0)
ICDXCODE^^0^B7339576
"BLD",8328,"KRN",9.8,"NM",12,0)
ICDEX^^0^B76352814
"BLD",8328,"KRN",9.8,"NM",13,0)
ICDEXD6^^0^B20655480
"BLD",8328,"KRN",9.8,"NM",14,0)
ICDEXD2^^0^B52729540
"BLD",8328,"KRN",9.8,"NM",15,0)
ICDEXD5^^0^B57426923
"BLD",8328,"KRN",9.8,"NM",16,0)
ICDEXA3^^0^B159086778
"BLD",8328,"KRN",9.8,"NM",17,0)
ICDEXS^^0^B148931476
"BLD",8328,"KRN",9.8,"NM",18,0)
ICDEXLK3^^0^B98059988
"BLD",8328,"KRN",9.8,"NM",19,0)
ICDEXC4^^0^B30014377
"BLD",8328,"KRN",9.8,"NM","B","ICD1867",1)

"BLD",8328,"KRN",9.8,"NM","B","ICDEX",12)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXA3",16)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXC",10)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXC4",19)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXD2",14)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXD5",15)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXD6",13)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXLK",4)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXLK2",5)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXLK3",18)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXLK4",7)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXLK5",8)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXLK6",9)

"BLD",8328,"KRN",9.8,"NM","B","ICDEXS",17)

"BLD",8328,"KRN",9.8,"NM","B","ICDXCODE",11)

"BLD",8328,"KRN",19,0)
19
"BLD",8328,"KRN",19.1,0)
19.1
"BLD",8328,"KRN",101,0)
101
"BLD",8328,"KRN",409.61,0)
409.61
"BLD",8328,"KRN",771,0)
771
"BLD",8328,"KRN",779.2,0)
779.2
"BLD",8328,"KRN",870,0)
870
"BLD",8328,"KRN",8989.51,0)
8989.51
"BLD",8328,"KRN",8989.52,0)
8989.52
"BLD",8328,"KRN",8994,0)
8994
"BLD",8328,"KRN","B",.4,.4)

"BLD",8328,"KRN","B",.401,.401)

"BLD",8328,"KRN","B",.402,.402)

"BLD",8328,"KRN","B",.403,.403)

"BLD",8328,"KRN","B",.5,.5)

"BLD",8328,"KRN","B",.84,.84)

"BLD",8328,"KRN","B",3.6,3.6)

"BLD",8328,"KRN","B",3.8,3.8)

"BLD",8328,"KRN","B",9.2,9.2)

"BLD",8328,"KRN","B",9.8,9.8)

"BLD",8328,"KRN","B",19,19)

"BLD",8328,"KRN","B",19.1,19.1)

"BLD",8328,"KRN","B",101,101)

"BLD",8328,"KRN","B",409.61,409.61)

"BLD",8328,"KRN","B",771,771)

"BLD",8328,"KRN","B",779.2,779.2)

"BLD",8328,"KRN","B",870,870)

"BLD",8328,"KRN","B",8989.51,8989.51)

"BLD",8328,"KRN","B",8989.52,8989.52)

"BLD",8328,"KRN","B",8994,8994)

"BLD",8328,"PRE")
ICD1867
"BLD",8328,"QDEF")
^^^^NO^^^^^^NO
"BLD",8328,"QUES",0)
^9.62^^
"BLD",8328,"REQB",0)
^9.611^2^1
"BLD",8328,"REQB",2,0)
ICD*18.0*64^2
"BLD",8328,"REQB","B","ICD*18.0*64",2)

"MBREQ")
0
"PKG",185,-1)
1^1
"PKG",185,0)
DRG GROUPER^ICD^DRG GROUPER
"PKG",185,20,0)
^9.402P^^
"PKG",185,22,0)
^9.49I^1^1
"PKG",185,22,1,0)
18.0^3001024^3001201^568
"PKG",185,22,1,"PAH",1,0)
67^3141219^520665225
"PKG",185,22,1,"PAH",1,1,0)
^^2^2^3141219
"PKG",185,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements
"PKG",185,22,1,"PAH",1,1,2,0)
included in this patch. 
"PRE")
ICD1867
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","ICD1867")
0^1^B77504315
"RTN","ICD1867",1,0)
ICD1867 ;ISL/KER - ICD*18.0*67 Env Check ;12/19/2014
"RTN","ICD1867",2,0)
 ;;18.0;DRG Grouper;**67**;Oct 20, 2000;Build 1
"RTN","ICD1867",3,0)
 ;               
"RTN","ICD1867",4,0)
 ; Global Variables
"RTN","ICD1867",5,0)
 ;    ^ICDM               N/A
"RTN","ICD1867",6,0)
 ;               
"RTN","ICD1867",7,0)
 ; External References
"RTN","ICD1867",8,0)
 ;    FIND^DIC            ICR   2051
"RTN","ICD1867",9,0)
 ;    $$IENS^DILF         ICR   2054
"RTN","ICD1867",10,0)
 ;    EN^DIQ1             ICR  10015
"RTN","ICD1867",11,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICD1867",12,0)
 ;    $$PATCH^XPDUTL      ICR  10141
"RTN","ICD1867",13,0)
 ;    $$VERSION^XPDUTL    ICR  10141
"RTN","ICD1867",14,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","ICD1867",15,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","ICD1867",16,0)
 ;               
"RTN","ICD1867",17,0)
 ; Local Variables Killed by Kernel after Install
"RTN","ICD1867",18,0)
 ;     XPDABORT,XPDDIQ,XPDQUIT
"RTN","ICD1867",19,0)
 ;     
"RTN","ICD1867",20,0)
 ; see Kernel Developer Guide
"RTN","ICD1867",21,0)
 ;     Chapter 14, KIDS Developer Tools
"RTN","ICD1867",22,0)
 ;     Advanced Build Techniques
"RTN","ICD1867",23,0)
 ;               
"RTN","ICD1867",24,0)
ENV ; Environment Check
"RTN","ICD1867",25,0)
 ;                    
"RTN","ICD1867",26,0)
 ;   General
"RTN","ICD1867",27,0)
 ;
"RTN","ICD1867",28,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR,ICDG,ICDE,ICDSTR D IMP
"RTN","ICD1867",29,0)
 K XPDDIQ("XPZ1","B"),XPDDIQ("XPI1","B") S XPDDIQ("XPZ1","B")="NO",XPDDIQ("XPI1","B")="NO"
"RTN","ICD1867",30,0)
 S ICDSTR=$G(ICDPTYPE) S:$L($G(ICDFY))&($L($G(ICDQTR))) ICDSTR=ICDSTR_" for "_$G(ICDFY)_" "_$G(ICDQTR)_" Quarter"
"RTN","ICD1867",31,0)
 D M(ICDSTR),M("")
"RTN","ICD1867",32,0)
 S U="^"
"RTN","ICD1867",33,0)
 ;     No user
"RTN","ICD1867",34,0)
 D:+($$UR)'>0 ET("User not defined (DUZ)")
"RTN","ICD1867",35,0)
 ;     No IO
"RTN","ICD1867",36,0)
 D:+($$SY)'>0 ET("Undefined IO variable(s)")
"RTN","ICD1867",37,0)
 I $D(ICDE) D ABRT Q
"RTN","ICD1867",38,0)
 ;                    
"RTN","ICD1867",39,0)
 ;   Load Distribution
"RTN","ICD1867",40,0)
 ;
"RTN","ICD1867",41,0)
 ;     XPDENV = 0 Environment Check during Load
"RTN","ICD1867",42,0)
 ;
"RTN","ICD1867",43,0)
 ;       Check Version (18.0)
"RTN","ICD1867",44,0)
 I $$VERSION^XPDUTL("ICD")'="18.0" D  D ABRT Q
"RTN","ICD1867",45,0)
 . D ET("Version 18.0 not found.  Please install DRG Grouper v 18.0")
"RTN","ICD1867",46,0)
 ;
"RTN","ICD1867",47,0)
 ;       Check Required Patches
"RTN","ICD1867",48,0)
 D:$O(ICDREQP(0))'>0 IMP I $O(ICDREQP(0))>0 D
"RTN","ICD1867",49,0)
 . N ICDPAT,ICDI,ICDPN,ICDP,ICDR,ICDC,ICDO,ICDC1,ICDC2,ICDC3,ICDC4,ICD
"RTN","ICD1867",50,0)
 . S (ICDR,ICDC)=0 S ICDC1=3,ICDC2=24,ICDC3=36,ICDC4=48
"RTN","ICD1867",51,0)
 . S ICDI=0  F  S ICDI=$O(ICDREQP(ICDI)) Q:+ICDI'>0  D
"RTN","ICD1867",52,0)
 . . S ICDC=ICDC+1,ICDPAT=$G(ICDREQP(ICDI))
"RTN","ICD1867",53,0)
 . S ICDI=0  F  S ICDI=$O(ICDREQP(ICDI)) Q:+ICDI'>0  D
"RTN","ICD1867",54,0)
 . . N ICDPAT,ICDPT,ICDREL,ICDINS,ICDCOM,ICDINE,ICDREQ,ICDTX S ICDREQ=$G(ICDREQP(ICDI))
"RTN","ICD1867",55,0)
 . . S ICDPAT=$P(ICDREQ,"^",1),ICDREL=$P(ICDREQ,"^",2),ICDCOM=$P(ICDREQ,"^",3)
"RTN","ICD1867",56,0)
 . . S ICDPT=$P(ICDPAT," SEQ",1) S:'$L(ICDPT) ICDPT=ICDPAT
"RTN","ICD1867",57,0)
 . . S ICDPN=$$INS(ICDPT) S ICDINS=$$INSD(ICDPT),ICDINE=$P(ICDINS,"^",2)
"RTN","ICD1867",58,0)
 . . I ICDI=1 D
"RTN","ICD1867",59,0)
 . . . W !,?ICDC1,"Checking for ",!
"RTN","ICD1867",60,0)
 . . . W !,?ICDC1,"Patch",?ICDC2,"Released",?ICDC3,"Installed",?ICDC4,"Content"
"RTN","ICD1867",61,0)
 . . S ICDTX=$J(" ",ICDC1)_ICDPAT
"RTN","ICD1867",62,0)
 . . S ICDTX=ICDTX_$J(" ",(ICDC2-$L(ICDTX)))
"RTN","ICD1867",63,0)
 . . S:ICDREL?7N ICDTX=ICDTX_$P($$FMTE^XLFDT(ICDREL,"5DZ"),"@",1)
"RTN","ICD1867",64,0)
 . . S ICDTX=ICDTX_$J(" ",(ICDC3-$L(ICDTX)))
"RTN","ICD1867",65,0)
 . . I +ICDPN>0 D
"RTN","ICD1867",66,0)
 . . . S ICDO=+($G(ICDO))+1 S:$L($G(ICDINE)) ICDTX=ICDTX_ICDINE
"RTN","ICD1867",67,0)
 . . . S ICDTX=ICDTX_$J(" ",(ICDC4-$L(ICDTX)))
"RTN","ICD1867",68,0)
 . . . S:$L(ICDCOM) ICDTX=ICDTX_ICDCOM
"RTN","ICD1867",69,0)
 . . D M(ICDTX)
"RTN","ICD1867",70,0)
 . . I +ICDPN'>0 D ET((" "_ICDPAT_" not found, please install "_ICDPAT_" before continuing"))
"RTN","ICD1867",71,0)
 . W:+($G(ICDO))'=ICDC !
"RTN","ICD1867",72,0)
 W ! I $D(ICDE) D M(),ABRT Q
"RTN","ICD1867",73,0)
 I '$D(ICDFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","ICD1867",74,0)
 ;                    
"RTN","ICD1867",75,0)
 ;   Install Package(s)
"RTN","ICD1867",76,0)
 ;
"RTN","ICD1867",77,0)
 ;     XPDENV = 1 Environment Check during Install
"RTN","ICD1867",78,0)
 ;
"RTN","ICD1867",79,0)
 ;   Quit, Exit or Abort
"RTN","ICD1867",80,0)
 ;
"RTN","ICD1867",81,0)
QUIT ;     Quit   Passed Environment Check
"RTN","ICD1867",82,0)
 K ICDFULL D OK
"RTN","ICD1867",83,0)
 Q
"RTN","ICD1867",84,0)
EXIT ;     Exit   Failed Environment Check
"RTN","ICD1867",85,0)
 D:$D(ICDE) ED S XPDQUIT=2 K ICDE,ICDFULL Q
"RTN","ICD1867",86,0)
ABRT ;     Abort  Failed Environment Check, KILL the distribution
"RTN","ICD1867",87,0)
 D:$D(ICDE) ED S XPDABORT=1,XPDQUIT=1,XPDQUIT("ICD*18.0*67")=1,XPDQUIT("LEX*2.0*86")=1,XPDQUIT("FB*3.5*157")=1
"RTN","ICD1867",88,0)
 K ICDE,ICDFULL
"RTN","ICD1867",89,0)
 Q
"RTN","ICD1867",90,0)
ENV2 ; Environment Check (for testing only)
"RTN","ICD1867",91,0)
 N XPDENV S XPDENV=1 D ENV
"RTN","ICD1867",92,0)
 Q
"RTN","ICD1867",93,0)
T1 ; Environment Check #1 (for testing only)
"RTN","ICD1867",94,0)
 K XPDENV D ENV
"RTN","ICD1867",95,0)
 Q
"RTN","ICD1867",96,0)
T2 ; Environment Check #2 (for testing only)
"RTN","ICD1867",97,0)
 N XPDENV S XPDENV=1 D ENV
"RTN","ICD1867",98,0)
 Q
"RTN","ICD1867",99,0)
 ;               
"RTN","ICD1867",100,0)
 ; Checks
"RTN","ICD1867",101,0)
 ;
"RTN","ICD1867",102,0)
INS(X) ;   Installed
"RTN","ICD1867",103,0)
 N ICD,ICDP,ICDV,ICDI S ICD=$G(X) I $L(ICD,"*")=3 S X=$$PATCH^XPDUTL(ICD) Q X
"RTN","ICD1867",104,0)
 S ICDP=$$PKG^XPDUTL(ICD),ICDV=$$VER^XPDUTL(ICD),ICDI=$$VERSION^XPDUTL(ICDP)
"RTN","ICD1867",105,0)
 Q:+ICDV>0&(ICDV=ICDI) 1
"RTN","ICD1867",106,0)
 Q 0
"RTN","ICD1867",107,0)
INSD(X)  ;   Installed on
"RTN","ICD1867",108,0)
 N DA,ICD,ICDDA,ICDE,ICDI,ICDMSG,ICDNS,ICDOUT,ICDPI,ICDPN,ICDSCR,ICDVI,ICDVD,ICDVI,ICDVR S ICD=$G(X)
"RTN","ICD1867",109,0)
 S ICDNS=$$PKG^XPDUTL(ICD),ICDVR=$$VER^XPDUTL(ICD),ICDPN=$P(X,"*",3)
"RTN","ICD1867",110,0)
 Q:'$L(ICDNS) ""  S ICDVR=+ICDVR Q:ICDVR'>0 ""  S ICDPN=+ICDPN S:ICDVR'["." ICDVR=ICDVR_".0"
"RTN","ICD1867",111,0)
 S ICDSCR="I $G(^DIC(9.4,+($G(Y)),""VERSION""))="""_ICDVR_""""
"RTN","ICD1867",112,0)
 D FIND^DIC(9.4,,.01,"O",ICDNS,10,"C",ICDSCR,,"ICDOUT","ICDMSG")
"RTN","ICD1867",113,0)
 S ICDPI=$G(ICDOUT("DILIST",2,1)) K ICDOUT,ICDMSG Q:+ICDPI'>0 ""  Q:'$D(@("^DIC(9.4,"_ICDPI_",22)")) ""
"RTN","ICD1867",114,0)
 K DA S DA(1)=ICDPI S ICDDA=$$IENS^DILF(.DA)
"RTN","ICD1867",115,0)
 D FIND^DIC(9.49,ICDDA,".01;1I;2I","O",ICDVR,10,"B",,,"ICDOUT","ICDMSG")
"RTN","ICD1867",116,0)
 S ICDVD=$G(ICDOUT("DILIST","ID",1,2)) I $E(ICDVD,1,7)?7N&(+ICDPN'>0) D  Q X
"RTN","ICD1867",117,0)
 . S X=$E(ICDVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(ICDVD,1,7),"5DZ"),"@"," ")
"RTN","ICD1867",118,0)
 S:$E(ICDVD,1,7)'?7N ICDVD=$G(ICDOUT("DILIST","ID",1,1)) I $E(ICDVD,1,7)?7N&(+ICDPN'>0) D  Q X
"RTN","ICD1867",119,0)
 . S X=$E(ICDVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(ICDVD,1,7),"5DZ"),"@"," ")
"RTN","ICD1867",120,0)
 Q:+ICDPN'>0 ""  S ICDVI=$G(ICDOUT("DILIST",2,1)) K ICDOUT,ICDMSG
"RTN","ICD1867",121,0)
 Q:+ICDVI'>0 ""  Q:'$D(@("^DIC(9.4,"_ICDPI_",22,"_ICDVI_",""PAH"")")) ""
"RTN","ICD1867",122,0)
 K DA S DA(2)=ICDPI,DA(1)=ICDVI S ICDDA=$$IENS^DILF(.DA)
"RTN","ICD1867",123,0)
 S ICDSCR="I $G(^DIC(9.4,"_ICDPI_",22,"_ICDVI_",""PAH"",+($G(Y)),0))[""SEQ #"""
"RTN","ICD1867",124,0)
 D FIND^DIC(9.4901,ICDDA,".01;.02I",,ICDPN,10,"B",ICDSCR,,"ICDOUT","ICDMSG")
"RTN","ICD1867",125,0)
 S ICDI=$G(ICDOUT("DILIST","ID",1,.02)) I '$L(ICDI) D
"RTN","ICD1867",126,0)
 . S ICDSCR="" D FIND^DIC(9.4901,ICDDA,".01;.02I",,ICDPN,10,"B",ICDSCR,,"ICDOUT","ICDMSG")
"RTN","ICD1867",127,0)
 . S ICDI=$G(ICDOUT("DILIST","ID",1,.02))
"RTN","ICD1867",128,0)
 Q:'$L(ICDI) ""  Q:$P(ICDI,".",1)'?7N ""  S ICDE=$TR($$FMTE^XLFDT(ICDI,"5DZ"),"@"," ")
"RTN","ICD1867",129,0)
 Q:'$L(ICDE) ""  S X=ICDI_"^"_ICDE
"RTN","ICD1867",130,0)
 Q X
"RTN","ICD1867",131,0)
CHK ;   Check the Checksum
"RTN","ICD1867",132,0)
 D CS I $D(ICDE) D ED Q
"RTN","ICD1867",133,0)
 D BM("  OK"),M(" ")
"RTN","ICD1867",134,0)
 Q
"RTN","ICD1867",135,0)
CS ;   Checksum for import global
"RTN","ICD1867",136,0)
 K ICDE D BM("   Running checksum routine on the ^ICDM import global, please wait")
"RTN","ICD1867",137,0)
 N ICDCK,ICDND,ICDV S ICDCK=+($G(^ICDM(0,"CHECKSUM")))
"RTN","ICD1867",138,0)
 S ICDND=+($G(^ICDM(0,"NODES"))),ICDV=+($$VC(ICDCK,ICDND))
"RTN","ICD1867",139,0)
 D M(" ") D:ICDV>0 M("     Checksum is ok"),M(" ")
"RTN","ICD1867",140,0)
 D:ICDV=0 CM D:ICDV=-1 CW D:ICDV=-2 CU D:ICDV=-3 CF
"RTN","ICD1867",141,0)
 Q
"RTN","ICD1867",142,0)
VC(X,Y) ;   Verify Checksum for import global
"RTN","ICD1867",143,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR Q:'$D(^ICDM) 0
"RTN","ICD1867",144,0)
 D IMP I $G(^ICDM(0,"BUILD"))'=$G(ICDBUILD) Q -1
"RTN","ICD1867",145,0)
 N ICDCK,ICDND,ICDCNT,ICDLC,ICDL,ICDS,ICDNC,ICDD,ICDN,ICDC,ICDGCS,ICDP,ICDT
"RTN","ICD1867",146,0)
 S ICDCK=+($G(X)),ICDND=+($G(Y))
"RTN","ICD1867",147,0)
 Q:ICDCK'>0!(ICDND'>0) -2
"RTN","ICD1867",148,0)
 S ICDL=64,(ICDCNT,ICDLC)=0,ICDS=(+(ICDND\ICDL))
"RTN","ICD1867",149,0)
 S:ICDS=0 ICDS=1 D:+($O(^ICDM(0)))>0 M("")
"RTN","ICD1867",150,0)
 S (ICDC,ICDN)="^ICDM",(ICDNC,ICDGCS)=0 W "   "
"RTN","ICD1867",151,0)
 F  S ICDN=$Q(@ICDN) Q:ICDN=""!(ICDN'[ICDC)  D
"RTN","ICD1867",152,0)
 . Q:ICDN="^ICDM(0,""CHECKSUM"")"
"RTN","ICD1867",153,0)
 . Q:ICDN="^ICDM(0,""NODES"")"
"RTN","ICD1867",154,0)
 . S ICDCNT=ICDCNT+1
"RTN","ICD1867",155,0)
 . I ICDCNT'<ICDS S ICDLC=ICDLC+1 W:ICDLC'>ICDL "." S ICDCNT=0
"RTN","ICD1867",156,0)
 . S ICDNC=ICDNC+1,ICDD=@ICDN,ICDT=ICDN_"="_ICDD
"RTN","ICD1867",157,0)
 . F ICDP=1:1:$L(ICDT) S ICDGCS=$A(ICDT,ICDP)*ICDP+ICDGCS
"RTN","ICD1867",158,0)
 Q:ICDNC'=ICDND -3
"RTN","ICD1867",159,0)
 Q:ICDGCS'=ICDCK -3
"RTN","ICD1867",160,0)
 Q 1
"RTN","ICD1867",161,0)
SY(X) ;   Check System variables
"RTN","ICD1867",162,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","ICD1867",163,0)
 Q 1
"RTN","ICD1867",164,0)
UR(X) ;   Check User variables
"RTN","ICD1867",165,0)
 Q:'$L($G(DUZ(0))) 0
"RTN","ICD1867",166,0)
 Q:+($G(DUZ))=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","ICD1867",167,0)
 Q 1
"RTN","ICD1867",168,0)
CPD(X) ;   Check Current Patched Data is installed
"RTN","ICD1867",169,0)
 N INS S INS=1
"RTN","ICD1867",170,0)
 Q 0
"RTN","ICD1867",171,0)
 ;               
"RTN","ICD1867",172,0)
 ; Error messages
"RTN","ICD1867",173,0)
 ;
"RTN","ICD1867",174,0)
CM ;   Missing ^ICDM
"RTN","ICD1867",175,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR D IMP D ET(""),ET("Missing import global ^ICDM.") D CO
"RTN","ICD1867",176,0)
 Q
"RTN","ICD1867",177,0)
CW ;   Wrong ^ICDM
"RTN","ICD1867",178,0)
 N ICDB,ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR D IMP S ICDB=$G(^ICDM(0,"BUILD")) D ET("")
"RTN","ICD1867",179,0)
 I $L(ICDBUILD),$L(ICDB),ICDBUILD'=ICDB D  Q
"RTN","ICD1867",180,0)
 . D ET(("Incorrect import global ^ICDM found ("_ICDB_" global).")) D CKO
"RTN","ICD1867",181,0)
 D ET("Incorrect import global ^ICDM found.") D CKO
"RTN","ICD1867",182,0)
 Q
"RTN","ICD1867",183,0)
CU ;   Unable to verify
"RTN","ICD1867",184,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR D IMP D ET(""),ET("Unable to verify checksum for import global ^ICDM (possibly corrupt).") D CKO
"RTN","ICD1867",185,0)
 Q
"RTN","ICD1867",186,0)
CF ;   Failed checksum
"RTN","ICD1867",187,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR D IMP D ET("") D ET("Import global ^ICDM failed checksum.") D CKO
"RTN","ICD1867",188,0)
 Q
"RTN","ICD1867",189,0)
CO ;   Obtain new global
"RTN","ICD1867",190,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR D IMP
"RTN","ICD1867",191,0)
 D ET(""),ET("    Please obtain a copy of the import global ^ICDM contained in the ")
"RTN","ICD1867",192,0)
 D ET(("    global host file "_ICDIGHF_" before continuing with the "_ICDBUILD))
"RTN","ICD1867",193,0)
 D ET(("    installation."))
"RTN","ICD1867",194,0)
 Q
"RTN","ICD1867",195,0)
TEST ;
"RTN","ICD1867",196,0)
 D CW,ED
"RTN","ICD1867",197,0)
 Q
"RTN","ICD1867",198,0)
CKO ;   Kill and Obtain new global
"RTN","ICD1867",199,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR D IMP D ET("")
"RTN","ICD1867",200,0)
 D ET(("    Use the entry point KALL^ICDXGI2 to safely KILL the existing "))
"RTN","ICD1867",201,0)
 D ET(("    import global ^ICDM from your system.  Then obtain a new copy"))
"RTN","ICD1867",202,0)
 D ET(("    of ^ICDM contained in the global host file "_ICDIGHF_" before"))
"RTN","ICD1867",203,0)
 D ET(("    continuing with the "_ICDBUILD_" installation."))
"RTN","ICD1867",204,0)
 Q
"RTN","ICD1867",205,0)
ET(X) ;   Error Text
"RTN","ICD1867",206,0)
 N ICDI S ICDI=+($G(ICDE(0))),ICDI=ICDI+1,ICDE(ICDI)="    "_$G(X),ICDE(0)=ICDI
"RTN","ICD1867",207,0)
 Q
"RTN","ICD1867",208,0)
ED ;   Error Display
"RTN","ICD1867",209,0)
 N ICDI S ICDI=0 F  S ICDI=$O(ICDE(ICDI)) Q:+ICDI=0  D M(ICDE(ICDI))
"RTN","ICD1867",210,0)
 D M(" ") K ICDE Q
"RTN","ICD1867",211,0)
 ;                   
"RTN","ICD1867",212,0)
 ; Miscellaneous
"RTN","ICD1867",213,0)
 ;
"RTN","ICD1867",214,0)
NOTDEF(IEN) ;   Check to see if user is defined
"RTN","ICD1867",215,0)
 N DA,DR,DIQ,ICD,DIC S DA=IEN,DR=.01,DIC=200,DIQ="ICD" D EN^DIQ1 Q '$D(ICD)
"RTN","ICD1867",216,0)
OK ;   Environment is OK
"RTN","ICD1867",217,0)
 N ICDPTYPE,ICDLREV,ICDREQP,ICDBUILD,ICDIGHF,ICDFY,ICDQTR,ICDT
"RTN","ICD1867",218,0)
 D IMP S ICDT="  Environment "_$S($L(ICDBUILD):("for patch/build "_ICDBUILD_" "),1:"")_"is ok"
"RTN","ICD1867",219,0)
 D M(ICDT),M(" ")
"RTN","ICD1867",220,0)
 Q
"RTN","ICD1867",221,0)
BM(X) ;   Blank Line with Message
"RTN","ICD1867",222,0)
 S X=$G(X) S:$E(X,1)'=" " X=" "_X D BMES^XPDUTL(X) Q
"RTN","ICD1867",223,0)
M(X) ;   Message
"RTN","ICD1867",224,0)
 S X=$G(X) S:$E(X,1)'=" " X=" "_X D MES^XPDUTL(X) Q
"RTN","ICD1867",225,0)
TRIM(X) ;   Trim Spaces
"RTN","ICD1867",226,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","ICD1867",227,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","ICD1867",228,0)
 N XPDABORT,XPDDIQ,XPDENV,XPDQUIT
"RTN","ICD1867",229,0)
 Q X
"RTN","ICD1867",230,0)
IMP ;   Import names
"RTN","ICD1867",231,0)
 S ICDPTYPE="ICD-10 API Changes"
"RTN","ICD1867",232,0)
 ;     Revision
"RTN","ICD1867",233,0)
 S ICDLREV=67
"RTN","ICD1867",234,0)
 ;     Required Builds - ICDREQP(n)=build^released^comment
"RTN","ICD1867",235,0)
 S ICDREQP(1)="ICD*18.0*64 SEQ #68^3140805^ICD-10 DRG Grouper"
"RTN","ICD1867",236,0)
 ;     This Build Name
"RTN","ICD1867",237,0)
 S ICDBUILD="ICD*18.0*67"
"RTN","ICD1867",238,0)
 ;     This Build's Export Global Host Filename
"RTN","ICD1867",239,0)
 S ICDIGHF=""
"RTN","ICD1867",240,0)
 ;     Fiscal Year
"RTN","ICD1867",241,0)
 S ICDFY=""
"RTN","ICD1867",242,0)
 ;     Quarter
"RTN","ICD1867",243,0)
 S ICDQTR=""
"RTN","ICD1867",244,0)
 Q
"RTN","ICDEX")
0^12^B76352814
"RTN","ICDEX",1,0)
ICDEX ;SLC/KER - ICD Extractor - Main Entry Points ;12/19/2014
"RTN","ICDEX",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEX",3,0)
 ;
"RTN","ICDEX",4,0)
 ; Global Variables
"RTN","ICDEX",5,0)
 ;    None
"RTN","ICDEX",6,0)
 ;
"RTN","ICDEX",7,0)
 ; External References
"RTN","ICDEX",8,0)
 ;    None
"RTN","ICDEX",9,0)
 ;
"RTN","ICDEX",10,0)
 ; Parameters for listed APIs
"RTN","ICDEX",11,0)
 ;
"RTN","ICDEX",12,0)
 ;    ARY     A local array passed by reference .ARY
"RTN","ICDEX",13,0)
 ;
"RTN","ICDEX",14,0)
 ;    CDT     This is the Code Set Versioning Date (Fileman
"RTN","ICDEX",15,0)
 ;            format) and is used to resolve the correct 
"RTN","ICDEX",16,0)
 ;            entry of a file or sub-file.
"RTN","ICDEX",17,0)
 ;
"RTN","ICDEX",18,0)
 ;    EDT     External Date allowed by Fileman
"RTN","ICDEX",19,0)
 ;
"RTN","ICDEX",20,0)
 ;    CODE    This is an ICD Diagnostic or Procedural code
"RTN","ICDEX",21,0)
 ;
"RTN","ICDEX",22,0)
 ;    FIELD   This is a field number from either file 80 or 80.1
"RTN","ICDEX",23,0)
 ;
"RTN","ICDEX",24,0)
 ;    FILE    File Number 80 or 80.1
"RTN","ICDEX",25,0)
 ;
"RTN","ICDEX",26,0)
 ;    FMT     Input format "I"=Internal "E"=External
"RTN","ICDEX",27,0)
 ;
"RTN","ICDEX",28,0)
 ;    IEN     Internal Entry Number of file 80 or 80.1
"RTN","ICDEX",29,0)
 ;
"RTN","ICDEX",30,0)
 ;    IEN1    Internal Entry Number of a specified sub-file
"RTN","ICDEX",31,0)
 ;
"RTN","ICDEX",32,0)
 ;    IEN2    Internal Entry Number of file 80 or 80.1
"RTN","ICDEX",33,0)
 ;
"RTN","ICDEX",34,0)
 ;    LEN     Length of the string of text in an array.
"RTN","ICDEX",35,0)
 ;            When passed, the short description or long
"RTN","ICDEX",36,0)
 ;            description will be parsed into string
"RTN","ICDEX",37,0)
 ;            lengths not to exceed the length passed.
"RTN","ICDEX",38,0)
 ;
"RTN","ICDEX",39,0)
 ;    MDC     Major Diagnostic Category (pointer to 
"RTN","ICDEX",40,0)
 ;            file #80.3)
"RTN","ICDEX",41,0)
 ;
"RTN","ICDEX",42,0)
 ;    NUM     Converts a code to a numeric representation 
"RTN","ICDEX",43,0)
 ;            of the code (used on the AN cross-reference)
"RTN","ICDEX",44,0)
 ;            for the $$NEXT and $$PREV APIs
"RTN","ICDEX",45,0)
 ;
"RTN","ICDEX",46,0)
 ;    REV     Directionality flag for $ORDER
"RTN","ICDEX",47,0)
 ;
"RTN","ICDEX",48,0)
 ;               0    $Order Forwards (default)
"RTN","ICDEX",49,0)
 ;               1    $Order in Reverse
"RTN","ICDEX",50,0)
 ;
"RTN","ICDEX",51,0)
 ;    ROOT    Global Root ^ICD9( or ^ICD0(
"RTN","ICDEX",52,0)
 ;
"RTN","ICDEX",53,0)
 ;    STD     Coding Standard
"RTN","ICDEX",54,0)
 ;
"RTN","ICDEX",55,0)
 ;               0    ICD (default)
"RTN","ICDEX",56,0)
 ;               1    CPT/HCPCS
"RTN","ICDEX",57,0)
 ;               2    DRG
"RTN","ICDEX",58,0)
 ;               3    LEX
"RTN","ICDEX",59,0)
 ;
"RTN","ICDEX",60,0)
 ;    SYS     Coding System
"RTN","ICDEX",61,0)
 ;
"RTN","ICDEX",62,0)
 ;               1    ICD     ICD-9-CM
"RTN","ICDEX",63,0)
 ;               2    ICP     ICD-9-PCS
"RTN","ICDEX",64,0)
 ;              30    1OD     ICD-10-CM
"RTN","ICDEX",65,0)
 ;              31    10P     ICD-10-PCS
"RTN","ICDEX",66,0)
 ;
"RTN","ICDEX",67,0)
 ;    TYPE    This is any identifier that can determine the
"RTN","ICDEX",68,0)
 ;            type of ICD code (diagnosis or procedure) that
"RTN","ICDEX",69,0)
 ;            is being used.  It can be a:
"RTN","ICDEX",70,0)
 ;
"RTN","ICDEX",71,0)
 ;              File Number           80 or 80.1
"RTN","ICDEX",72,0)
 ;              Global Root           ^ICD9( or ^ICD0(
"RTN","ICDEX",73,0)
 ;              Source Abbreviation   ICD, ICP, 10D OR 10P
"RTN","ICDEX",74,0)
 ;              Coding System         1, 2, 30, 31
"RTN","ICDEX",75,0)
 ;              Code                  250.01, B58.81, 50.11
"RTN","ICDEX",76,0)
 ;
"RTN","ICDEX",77,0)
 ;    TXT     Text String to search for in file 80/80.1
"RTN","ICDEX",78,0)
 ;
"RTN","ICDEX",79,0)
 ;    VER     Versioning flag
"RTN","ICDEX",80,0)
 ;
"RTN","ICDEX",81,0)
 ;               0  Unversioned search, return active/inactive codes
"RTN","ICDEX",82,0)
 ;               1  Versioned search, return only active codes
"RTN","ICDEX",83,0)
 ;
"RTN","ICDEX",84,0)
 ;    WORD    This is a single word parsed from a string
"RTN","ICDEX",85,0)
 ;
"RTN","ICDEX",86,0)
EN ; Main Entry Point
"RTN","ICDEX",87,0)
HELP ; Developer Help for an API
"RTN","ICDEX",88,0)
 D EN^ICDEXH Q
"RTN","ICDEX",89,0)
 ; 
"RTN","ICDEX",90,0)
 ; Code APIs
"RTN","ICDEX",91,0)
ICDDX(CODE,CDT,SYS,FMT,LOC) ; Dx Code Info
"RTN","ICDEX",92,0)
 Q $$ICDDX^ICDEXC($G(CODE),$P($G(CDT),".",1),$G(SYS),$G(FMT),$G(LOC))
"RTN","ICDEX",93,0)
ICDOP(CODE,CDT,SYS,FMT,LOC) ; Procedure Code Info
"RTN","ICDEX",94,0)
 Q $$ICDOP^ICDEXC($G(CODE),$P($G(CDT),".",1),$G(SYS),$G(FMT),$G(LOC))
"RTN","ICDEX",95,0)
ICDD(CODE,ARY,CDT,SYS,LEN) ; Description in Array
"RTN","ICDEX",96,0)
 Q $$ICDD^ICDEXC($G(CODE),.ARY,$P($G(CDT),".",1),$G(SYS),+($G(LEN)))
"RTN","ICDEX",97,0)
CODEN(CODE,FILE) ; IEN of code
"RTN","ICDEX",98,0)
 Q $$CODEN^ICDEXC($G(CODE),$G(FILE))
"RTN","ICDEX",99,0)
CODEC(FILE,IEN) ; Code from an IEN
"RTN","ICDEX",100,0)
 Q $$CODE^ICDEXC($G(FILE),$G(IEN))
"RTN","ICDEX",101,0)
CODEBA(CODE,ROOT) ; IEN from Code/Root
"RTN","ICDEX",102,0)
 Q $$CODEBA^ICDEXC($G(CODE),$G(ROOT))
"RTN","ICDEX",103,0)
CODEABA(CODE,ROOT,SYS) ; IEN from Code/Root/Coding System
"RTN","ICDEX",104,0)
 Q $$CODEABA^ICDEXC($G(CODE),$G(ROOT),$G(SYS))
"RTN","ICDEX",105,0)
RDX(CODE,CDT) ; Resolve Diagnosis Code Fragment
"RTN","ICDEX",106,0)
 Q $$RDX^ICDEXC4($G(CODE),$G(CDT))
"RTN","ICDEX",107,0)
 ;  
"RTN","ICDEX",108,0)
 ; Code APIs (code data/versioned data)
"RTN","ICDEX",109,0)
CODEFI(CODE) ; File for code
"RTN","ICDEX",110,0)
 Q $$CODEFI^ICDEXC2($G(CODE))
"RTN","ICDEX",111,0)
CODECS(CODE,FILE,CDT) ; Coding system for code/file
"RTN","ICDEX",112,0)
 Q $$CODECS^ICDEXC2($G(CODE),$G(FILE),$P($G(CDT),".",1))
"RTN","ICDEX",113,0)
CSI(FILE,IEN) ; Coding system for IEN
"RTN","ICDEX",114,0)
 Q $$CSI^ICDEXC2($G(FILE),$G(IEN))
"RTN","ICDEX",115,0)
VMDC(IEN,CDT,FMT) ; Major Diagnostic Category
"RTN","ICDEX",116,0)
 Q $$VMDC^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",117,0)
VAGEL(IEN,CDT,FMT) ; Age Low
"RTN","ICDEX",118,0)
 Q $$VAGEL^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",119,0)
VAGEH(IEN,CDT,FMT) ; Age High
"RTN","ICDEX",120,0)
 Q $$VAGEH^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",121,0)
VCC(IEN,CDT,FMT) ; Complication/Comorbidity
"RTN","ICDEX",122,0)
 Q $$VCC^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",123,0)
VCCP(IEN,CDT,FMT) ; CC Primary Flag
"RTN","ICDEX",124,0)
 Q $$VCCP^ICDEXC2($G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",125,0)
VSEX(FILE,IEN,CDT,FMT) ; Sex for file
"RTN","ICDEX",126,0)
 Q $$VSEX^ICDEXC2($G(FILE),$G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",127,0)
SAI(FILE,IEN,CDT) ; Status/Active/Inactive Dates
"RTN","ICDEX",128,0)
 Q $$SAI^ICDEXC2($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",129,0)
 ;  
"RTN","ICDEX",130,0)
 ; Code APIs (text/strings)
"RTN","ICDEX",131,0)
VST(FILE,IEN,CDT)     ; Short Text
"RTN","ICDEX",132,0)
 Q $$VST^ICDEXC3($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",133,0)
VLT(FILE,IEN,CDT) ; Long Text
"RTN","ICDEX",134,0)
 Q $$VLT^ICDEXC3($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",135,0)
VSTD(IEN,CDT)  ; Short Text - Diagnosis
"RTN","ICDEX",136,0)
 Q $$VSTD^ICDEXC3($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",137,0)
VSTP(IEN,CDT) ; Short Text - Procedures
"RTN","ICDEX",138,0)
 Q $$VSTP^ICDEXC3($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",139,0)
VLTD(IEN,CDT) ; Description - Diagnosis
"RTN","ICDEX",140,0)
 Q $$VLTD^ICDEXC3($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",141,0)
VLTP(IEN,CDT) ; Description - Procedures
"RTN","ICDEX",142,0)
 Q $$VLTP^ICDEXC3($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",143,0)
SD(FILE,IEN,CDT,ARY,LEN) ; Short Description (formatted)
"RTN","ICDEX",144,0)
 Q $$SD^ICDEXC3($G(FILE),$G(IEN),$P($G(CDT),".",1),.ARY,$G(LEN))
"RTN","ICDEX",145,0)
LD(FILE,IEN,CDT,ARY,LEN) ; Long Description (formatted)
"RTN","ICDEX",146,0)
 Q $$LD^ICDEXC3($G(FILE),$G(IEN),$P($G(CDT),".",1),.ARY,$G(LEN))
"RTN","ICDEX",147,0)
SDH(FILE,IEN,ARY) ; Short Description History
"RTN","ICDEX",148,0)
 Q $$SDH^ICDEXC4($G(FILE),$G(IEN),.ARY)
"RTN","ICDEX",149,0)
LDH(FILE,IEN,ARY) ; Long Description History
"RTN","ICDEX",150,0)
 Q $$LDH^ICDEXC4($G(FILE),$G(IEN),.ARY)
"RTN","ICDEX",151,0)
PAR(ARY,LEN) ; Parse Array
"RTN","ICDEX",152,0)
 D PAR^ICDEXC3(.ARY,$G(LEN)) Q
"RTN","ICDEX",153,0)
IEN(CODE,ROOT,SYS) ; IEN from Code/Root/Coding System
"RTN","ICDEX",154,0)
 Q $$IEN^ICDEXC3($G(CODE),$G(ROOT),$G(SYS))
"RTN","ICDEX",155,0)
 ;  
"RTN","ICDEX",156,0)
 ; API Support
"RTN","ICDEX",157,0)
STATCHK(CODE,CDT,SYS) ; Status of ICD Code
"RTN","ICDEX",158,0)
 Q $$STATCHK^ICDEXA($G(CODE),$P($G(CDT),".",1),$G(SYS))
"RTN","ICDEX",159,0)
DTBR(CDT,STD,SYS) ; Date Business Rules
"RTN","ICDEX",160,0)
 Q $$DTBR^ICDEXA($P($G(CDT),".",1),$G(STD),$G(SYS))
"RTN","ICDEX",161,0)
IMP(SYS,CDT) ; Implementation Date
"RTN","ICDEX",162,0)
 Q $$IMP^ICDEXA($G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",163,0)
MSG(CDT,STD,SYS) ; Warning Message
"RTN","ICDEX",164,0)
 Q $$MSG^ICDEXA($P($G(CDT),".",1),$G(STD),$G(SYS))
"RTN","ICDEX",165,0)
SEL(FILE,IEN) ; Entry is Selectable
"RTN","ICDEX",166,0)
 Q $$SEL^ICDEXA($G(FILE),$G(IEN))
"RTN","ICDEX",167,0)
NEXT(CODE,SYS,CDT) ; Next Code
"RTN","ICDEX",168,0)
 Q $$NEXT^ICDEXA2($G(CODE),$G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",169,0)
PREV(CODE,SYS,CDT) ; Previous Code
"RTN","ICDEX",170,0)
 Q $$PREV^ICDEXA2($G(CODE),$G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",171,0)
HIST(CODE,ARY,SYS) ; Activation History
"RTN","ICDEX",172,0)
 Q $$HIST^ICDEXA2($G(CODE),.ARY,$G(SYS))
"RTN","ICDEX",173,0)
PERIOD(CODE,ARY,SYS) ; Activation Periods
"RTN","ICDEX",174,0)
 Q $$PERIOD^ICDEXA2($G(CODE),.ARY,$G(SYS))
"RTN","ICDEX",175,0)
OBA(FILE,CODE,SYS,REV) ; $Order BA/ABA
"RTN","ICDEX",176,0)
 Q $$OBA^ICDEXA3($G(FILE),$G(CODE),$G(SYS),$G(REV))
"RTN","ICDEX",177,0)
OD(FILE,WORD,SYS,REV) ; $Order D/AD
"RTN","ICDEX",178,0)
 Q $$OD^ICDEXA3($G(FILE),$G(WORD),$G(SYS),$G(REV))
"RTN","ICDEX",179,0)
DLM(FILE,IEN,FIELD,CDT) ; Date Last Modified
"RTN","ICDEX",180,0)
 Q $$DLM^ICDEXA3($G(FILE),$G(IEN),$G(FIELD),$P($G(CDT),".",1))
"RTN","ICDEX",181,0)
CS(FILE,FMT,CDT) ; Select Coding System (lookup)
"RTN","ICDEX",182,0)
 Q $$CS^ICDEXA3($G(FILE),$G(FMT),$P($G(CDT),".",1))
"RTN","ICDEX",183,0)
 ;  
"RTN","ICDEX",184,0)
 ; Data Extraction Support
"RTN","ICDEX",185,0)
EFF(FILE,IEN,CDT) ; Effective date and status
"RTN","ICDEX",186,0)
 Q $$EFF^ICDEXS($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",187,0)
IA(FILE,IEN) ; Initial Activation Date
"RTN","ICDEX",188,0)
 Q $$IA^ICDEXS($G(FILE),$G(IEN))
"RTN","ICDEX",189,0)
LA(FILE,IEN,CDT) ; Last Activation Date
"RTN","ICDEX",190,0)
 Q $$LA^ICDEXS($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",191,0)
LI(FILE,IEN,CDT) ; Last Inactivation Date
"RTN","ICDEX",192,0)
 Q $$LI^ICDEXS($G(FILE),$G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",193,0)
LS(FILE,IEN,CDT,FMT) ; Last Status
"RTN","ICDEX",194,0)
 Q $$LS^ICDEXS($G(FILE),$G(IEN),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",195,0)
NUM(CODE) ; Convert Code to a Numeric
"RTN","ICDEX",196,0)
 Q $$NUM^ICDEXS($G(CODE))
"RTN","ICDEX",197,0)
COD(NUM) ; Convert Numeric to a Code
"RTN","ICDEX",198,0)
 Q $$COD^ICDEXS($G(NUM))
"RTN","ICDEX",199,0)
IE(CODE) ; Internal or External Format
"RTN","ICDEX",200,0)
 Q $$IE^ICDEXS($G(CODE))
"RTN","ICDEX",201,0)
FILE(SYS) ; File Number from System
"RTN","ICDEX",202,0)
 Q $$FILE^ICDEXS($G(SYS))
"RTN","ICDEX",203,0)
ROOT(SYS) ; Global Root
"RTN","ICDEX",204,0)
 Q $$ROOT^ICDEXS($G(SYS))
"RTN","ICDEX",205,0)
SYS(SYS,CDT,FMT) ; Resolve System (uses file 80.4)
"RTN","ICDEX",206,0)
 Q $$SYS^ICDEXS($G(SYS),$P($G(CDT),".",1),$G(FMT))
"RTN","ICDEX",207,0)
SINFO(SYS,CDT) ; System Info (uses file 80.4)
"RTN","ICDEX",208,0)
 Q $$SINFO^ICDEXS($G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",209,0)
SNAM(SYS) ; System Name from Coding System
"RTN","ICDEX",210,0)
 Q $$SNAM^ICDEXS($G(SYS))
"RTN","ICDEX",211,0)
SAB(SYS,CDT) ; Source Abbreviation
"RTN","ICDEX",212,0)
 Q $$SAB^ICDEXS($G(SYS),$P($G(CDT),".",1))
"RTN","ICDEX",213,0)
EXC(FILE,IEN) ; Exclude From lookup
"RTN","ICDEX",214,0)
 Q $$EXC^ICDEXS($G(FILE),$G(IEN))
"RTN","ICDEX",215,0)
VER(SYS,REL) ; Coding System Version
"RTN","ICDEX",216,0)
 Q $$VER^ICDEXS2($G(SYS),$G(REL))
"RTN","ICDEX",217,0)
HDR(FILE) ; File Header Node
"RTN","ICDEX",218,0)
 Q $$HDR^ICDEXS2($G(FILE))
"RTN","ICDEX",219,0)
 ;  
"RTN","ICDEX",220,0)
 ; DRG Grouper Extraction Support
"RTN","ICDEX",221,0)
ISA(IEN1,IEN2,FIELD) ; Is Code 1 a condition of Code 2 (ICDDRG)
"RTN","ICDEX",222,0)
 Q $$ISA^ICDEXD($G(IEN1),$G(IEN2),$G(FIELD))
"RTN","ICDEX",223,0)
ISVALID(FILE,IEN,CDT) ; Is an ICD code Valid
"RTN","ICDEX",224,0)
 Q $$ISVALID^ICDEXD2($G(FILE),$G(IEN),$G(CDT))
"RTN","ICDEX",225,0)
EXIST(IEN,FIELD) ; Does a condition Exist (ICDDRGX)
"RTN","ICDEX",226,0)
 Q $$EXIST^ICDEXD($G(IEN),$G(FIELD))
"RTN","ICDEX",227,0)
GETDRG(FILE,IEN,CDT,MDC) ; DRGs for an Fiscal Year (ICDGTDRG)
"RTN","ICDEX",228,0)
 Q $$GETDRG^ICDEXD($G(FILE),$G(IEN),$P($G(CDT),".",1),$G(MDC))
"RTN","ICDEX",229,0)
MD(FILE,IEN,CDT,ARY,FLAG) ; MDC DRGs
"RTN","ICDEX",230,0)
 D MD^ICDEXD2($G(FILE),$G(IEN),$P($G(CDT),".",1),.ARY,$G(FLAG))
"RTN","ICDEX",231,0)
EFM(EDT) ; Convert External Date to FM (ICDGTDRG)
"RTN","ICDEX",232,0)
 Q $$EFM^ICDEXD6($G(EDT))
"RTN","ICDEX",233,0)
FY(CDT) ; FY 4 digit year (ICDGTDRG)
"RTN","ICDEX",234,0)
 Q $$FY^ICDEXD6($P($G(CDT),".",1))
"RTN","ICDEX",235,0)
VMDCDX(IEN,CDT) ; Versioned MDC for DX (ICDREF)
"RTN","ICDEX",236,0)
 Q $$VMDCDX^ICDEXD2($G(IEN),$P($G(CDT),".",1))
"RTN","ICDEX",237,0)
VMDCOP(IEN,MDC,CDT) ; Versioned MDC for Op/Pro (ICDREF)
"RTN","ICDEX",238,0)
 Q $$VMDCOP^ICDEXD2($G(IEN),$G(MDC),$P($G(CDT),".",1))
"RTN","ICDEX",239,0)
REF(IEN,CDT) ; Return Reference Table (ICDREF)
"RTN","ICDEX",240,0)
 Q $$REF^ICDEXD2($G(IEN),$G(CDT))
"RTN","ICDEX",241,0)
MDCG(IEN,CDT,ARY) ; Set up array of MDCs (ICDDRG)
"RTN","ICDEX",242,0)
 D MDCG^ICDEXD2($G(IEN),$P($G(CDT),".",1),.ARY) Q
"RTN","ICDEX",243,0)
MDCT(IEN,CDT,ARY,FMT) ; For Multiple MDC DX Codes (ICDDRG)
"RTN","ICDEX",244,0)
 Q $$MDCT^ICDEXD2($G(IEN),$P($G(CDT),".",1),.ARY,$G(FMT))
"RTN","ICDEX",245,0)
MDCD(IEN,MDC,CDT) ; Check for default MDC (ICDDRG)
"RTN","ICDEX",246,0)
 Q $$MDCD^ICDEXD2($G(IEN),$G(MDC),$G(CDT))
"RTN","ICDEX",247,0)
MDCN(IEN) ; Major Diagnostic Category Name
"RTN","ICDEX",248,0)
 Q $$MDCN^ICDEXD2(+($G(IEN)))
"RTN","ICDEX",249,0)
MOR(IEN) ; Major O.R. Procedure (ICDDRG)
"RTN","ICDEX",250,0)
 Q $$MOR^ICDEXD2($G(IEN))
"RTN","ICDEX",251,0)
UPDX(IEN) ; Unacceptable as Principle DX
"RTN","ICDEX",252,0)
 Q $$UPDX^ICDEXD6($G(IEN))
"RTN","ICDEX",253,0)
POAE(IEN) ; Present on Admission Exempt
"RTN","ICDEX",254,0)
 Q $$POAE^ICDEXD6($G(IEN))
"RTN","ICDEX",255,0)
HAC(IEN) ; Hospital Acquired Conditions
"RTN","ICDEX",256,0)
 Q $$HAC^ICDEXD6($G(IEN))
"RTN","ICDEX",257,0)
NOT(IEN,SUB,FMT) ; Codes not Used With
"RTN","ICDEX",258,0)
 Q $$NOT^ICDEXD3($G(IEN),$G(SUB),$G(FMT))
"RTN","ICDEX",259,0)
REQ(IEN,SUB,FMT) ; Codes Required With
"RTN","ICDEX",260,0)
 Q $$REQ^ICDEXD3($G(IEN),$G(SUB),$G(FMT))
"RTN","ICDEX",261,0)
NCC(IEN,SUB,FMT) ; Codes not Considered CC With
"RTN","ICDEX",262,0)
 Q $$NCC^ICDEXD3($G(IEN),$G(SUB),$G(FMT))
"RTN","ICDEX",263,0)
ICDID(FILE,ID,CODE) ; Check if ICD identifier exist
"RTN","ICDEX",264,0)
 Q $$ICDID^ICDEXD4($G(FILE),$G(ID),$G(CODE))
"RTN","ICDEX",265,0)
IDSTR(FILE,IEN) ; ICD identifier string (legacy)
"RTN","ICDEX",266,0)
 Q $$IDSTR^ICDEXD4($G(FILE),$G(IEN))
"RTN","ICDEX",267,0)
ICDIDS(FILE,IEN,ARY) ; Returns array of ICD identifiers
"RTN","ICDEX",268,0)
 Q $$ICDIDS^ICDEXD4($G(FILE),$G(IEN),.ARY)
"RTN","ICDEX",269,0)
ISOWNCC(IEN,CDT,FMT) ; Return CC if DX is Own CC
"RTN","ICDEX",270,0)
 Q $$ISOWNCC^ICDEXD4($G(IEN),$G(CDT),$G(FMT))
"RTN","ICDEX",271,0)
ICDRGCC(DRG,CDT) ; Get CC/MCC flag from DRG
"RTN","ICDEX",272,0)
 Q $$ICDRGCC^ICDEXD4($G(DRG),$G(CDT))
"RTN","ICDEX",273,0)
INQ ; Inquire to the ICD Files
"RTN","ICDEX",274,0)
 D INQ^ICDEXD4 Q
"RTN","ICDEX",275,0)
EFD(X) ; Get Effective date in range (interactive)
"RTN","ICDEX",276,0)
 Q $$EFD^ICDEXD6
"RTN","ICDEX",277,0)
PDXE(IEN) ; Primary DX Exclusion Code
"RTN","ICDEX",278,0)
 Q $$PDXE^ICDEXD3($G(IEN))
"RTN","ICDEX",279,0)
DRG(CODE,CDT) ; Returns information about a DRG
"RTN","ICDEX",280,0)
 Q $$DRG^ICDEXD5($G(CODE),$G(CDT))
"RTN","ICDEX",281,0)
DRGW(IEN) ; DRG Weighted Work Unit (WWU)
"RTN","ICDEX",282,0)
 Q $$DRGW^ICDEXD6($G(IEN))
"RTN","ICDEX",283,0)
DRGDES(IEN,CDT,ARY,LEN) ; Formatted DRG Description
"RTN","ICDEX",284,0)
 Q $$DRGDES^ICDEXD5($G(IEN),$G(CDT),.ARY,$G(LEN))
"RTN","ICDEX",285,0)
DRGD(CODE,OUTARR,CDT) ; Unformatted DRG Description
"RTN","ICDEX",286,0)
 Q $$DRGD^ICDEXD5($G(CODE),$G(OUTARR),$G(CDT))
"RTN","ICDEX",287,0)
DRGN(CODE) ; Return the IEN of DRG
"RTN","ICDEX",288,0)
 Q $$DRGN^ICDEXD6($G(CODE))
"RTN","ICDEX",289,0)
DRGC(IEN) ; DRG Code
"RTN","ICDEX",290,0)
 Q $$DRGC^ICDEXD6($G(IEN))
"RTN","ICDEX",291,0)
GETDATE(IEN) ; Calculate Effective Date
"RTN","ICDEX",292,0)
 Q $$GETDATE^ICDEXD5($G(IEN))
"RTN","ICDEX",293,0)
 ;  
"RTN","ICDEX",294,0)
 ; Lookup
"RTN","ICDEX",295,0)
LK ; Special Lookup (called by DIC)
"RTN","ICDEX",296,0)
 D LK^ICDEXLK Q
"RTN","ICDEX",297,0)
LKTX(X,ROOT,CDT,SYS,VER,OUT) ; Lookup Text in ROOT (silent)
"RTN","ICDEX",298,0)
 Q $$LK^ICDEXLK3($G(X),$G(ROOT),$P($G(CDT),".",1),$G(SYS),$G(VER),$G(OUT))
"RTN","ICDEX",299,0)
Y(ROOT,IEN,CDT,FMT) ; Output Variable Y from Lookup
"RTN","ICDEX",300,0)
 D Y^ICDEXLK2($G(ROOT),$G(IEN),$P($G(CDT),".",1),$G(FMT)) Q
"RTN","ICDEX",301,0)
TOKEN(X,ROOT,SYS,ARY) ; Parse Text into Words
"RTN","ICDEX",302,0)
 D TOKEN^ICDTOKN($G(X),$G(ROOT),$G(SYS),.ARY) Q
"RTN","ICDEX",303,0)
WORD(X,ROOT,SYS) ; Word is Found
"RTN","ICDEX",304,0)
 Q $$WORD^ICDEXLK3($G(X),$G(ROOT),$G(SYS))
"RTN","ICDEXA3")
0^16^B159086778
"RTN","ICDEXA3",1,0)
ICDEXA3 ;SLC/KER - ICD Extractor - APIs/Utilities (cont) ;12/19/2014
"RTN","ICDEXA3",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXA3",3,0)
 ;               
"RTN","ICDEXA3",4,0)
 ; Global Variables
"RTN","ICDEXA3",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXA3",6,0)
 ;    ^ICDS("F")          N/A
"RTN","ICDEXA3",7,0)
 ;               
"RTN","ICDEXA3",8,0)
 ; External References
"RTN","ICDEXA3",9,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXA3",10,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXA3",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXA3",12,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXA3",13,0)
 ;               
"RTN","ICDEXA3",14,0)
OBA(FILE,CODE,SYS,REV) ; Replace $Order for "ABA" and "BA" indexes
"RTN","ICDEXA3",15,0)
 ;
"RTN","ICDEXA3",16,0)
 ; Input:
"RTN","ICDEXA3",17,0)
 ; 
"RTN","ICDEXA3",18,0)
 ;    CODE = ICD Code, can be null
"RTN","ICDEXA3",19,0)
 ;    FILE   File Number 80 or 80.1
"RTN","ICDEXA3",20,0)
 ;    SYS    Coding System (internal, file 80.4)
"RTN","ICDEXA3",21,0)
 ;    REV    Reverse $Order if set to 1
"RTN","ICDEXA3",22,0)
 ;    
"RTN","ICDEXA3",23,0)
 ; Output:
"RTN","ICDEXA3",24,0)
 ; 
"RTN","ICDEXA3",25,0)
 ;    $$OBA  Next or Previous Code
"RTN","ICDEXA3",26,0)
 ;
"RTN","ICDEXA3",27,0)
 ;  This API replaces the need to access the BA Index
"RTN","ICDEXA3",28,0)
 ;  in a FOR loop.
"RTN","ICDEXA3",29,0)
 ;  
"RTN","ICDEXA3",30,0)
 ;     $$OBA(<file>,<code>,<system>) replaces:
"RTN","ICDEXA3",31,0)
 ; 
"RTN","ICDEXA3",32,0)
 ;        $O(^ICD9("BA",(<code>_" ")) and
"RTN","ICDEXA3",33,0)
 ;        $O(^ICD0("BA",(<code>_" "))
"RTN","ICDEXA3",34,0)
 ;        
"RTN","ICDEXA3",35,0)
 ;     F  S CODE=$$OBA^ICDEX(80,CODE,1) Q:'$L(CODE)  D
"RTN","ICDEXA3",36,0)
 ;     F  S CODE=$$OBA^ICDEX(80,CODE,30) Q:'$L(CODE)  D
"RTN","ICDEXA3",37,0)
 ;     F  S CODE=$$OBA^ICDEX(80.1,CODE,2) Q:'$L(CODE)  D
"RTN","ICDEXA3",38,0)
 ;     F  S CODE=$$OBA^ICDEX(80.1,CODE,31) Q:'$L(CODE)  D
"RTN","ICDEXA3",39,0)
 ;  
"RTN","ICDEXA3",40,0)
 ;  Retire IA 5388, 5404
"RTN","ICDEXA3",41,0)
 ;  
"RTN","ICDEXA3",42,0)
 N ICDC,ICDG,ICDF,ICDI,ICDID,ICDR,ICDU,ICDS,ICDO,ICDN,ICDX,ICDD
"RTN","ICDEXA3",43,0)
 S ICDC=$TR($G(CODE)," ",""),ICDU=$$UP^XLFSTR(ICDC) S ICDS=$G(SYS)
"RTN","ICDEXA3",44,0)
 S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_ICDF_"^") ""
"RTN","ICDEXA3",45,0)
 I $L(ICDS) S ICDS=$$SYS^ICDEX(ICDS) Q:+ICDS'>0 ""
"RTN","ICDEXA3",46,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) ""  S ICDD=+($G(REV))
"RTN","ICDEXA3",47,0)
 I +ICDS>0 D  Q ICDO
"RTN","ICDEXA3",48,0)
 . N ICDX,ICDN,ICDI S ICDX="ABA"
"RTN","ICDEXA3",49,0)
 . I ICDD'>0 D
"RTN","ICDEXA3",50,0)
 . . N ICD1,ICD2
"RTN","ICDEXA3",51,0)
 . . S ICD1=$TR($O(@(ICDR_""""_ICDX_""","_+ICDS_","""_(ICDC_" ")_""")"))," ","")
"RTN","ICDEXA3",52,0)
 . . S ICD2=$TR($O(@(ICDR_""""_ICDX_""","_+ICDS_","""_(ICDU_" ")_""")"))," ","")
"RTN","ICDEXA3",53,0)
 . . S:ICD1]ICD2!(ICD1=ICD2) ICDN=ICD2 S:ICD2]ICD1 ICDN=ICD1
"RTN","ICDEXA3",54,0)
 . S:ICDD>0&('$L(ICDC)) ICDC="~"
"RTN","ICDEXA3",55,0)
 . I ICDD>0 D
"RTN","ICDEXA3",56,0)
 . . N ICD1,ICD2
"RTN","ICDEXA3",57,0)
 . . S ICD1=$TR($O(@(ICDR_""""_ICDX_""","_+ICDS_","""_(ICDC_" ")_""")"),-1)," ","")
"RTN","ICDEXA3",58,0)
 . . S ICD2=$TR($O(@(ICDR_""""_ICDX_""","_+ICDS_","""_(ICDU_" ")_""")"),-1)," ","")
"RTN","ICDEXA3",59,0)
 . . S:ICD1]ICD2!(ICD1=ICD2) ICDN=ICD2 S:ICD2]ICD1 ICDN=ICD1
"RTN","ICDEXA3",60,0)
 . S ICDI=$$CODEABA^ICDEX(ICDN,ICDR,ICDS)
"RTN","ICDEXA3",61,0)
 . S ICDO=ICDN S:'$L(ICDN)!(+ICDI'>0) ICDO=""
"RTN","ICDEXA3",62,0)
 I '$L(ICDS) D  Q ICDO
"RTN","ICDEXA3",63,0)
 . N ICDX,ICDN,ICDI S ICDX="BA"
"RTN","ICDEXA3",64,0)
 . I +ICDD'>0 D
"RTN","ICDEXA3",65,0)
 . . N ICD1,ICD2
"RTN","ICDEXA3",66,0)
 . . S ICD1=$TR($O(@(ICDR_""""_ICDX_""","""_(ICDC_" ")_""")"))," ","")
"RTN","ICDEXA3",67,0)
 . . S ICD2=$TR($O(@(ICDR_""""_ICDX_""","""_(ICDU_" ")_""")"))," ","")
"RTN","ICDEXA3",68,0)
 . . S:ICD1]ICD2!(ICD1=ICD2) ICDN=ICD2 S:ICD2]ICD1 ICDN=ICD1
"RTN","ICDEXA3",69,0)
 . S:ICDD>0&('$L(ICDC)) ICDC="~"
"RTN","ICDEXA3",70,0)
 . I +ICDD>0 D
"RTN","ICDEXA3",71,0)
 . . N ICD1,ICD2
"RTN","ICDEXA3",72,0)
 . . S ICD1=$TR($O(@(ICDR_""""_ICDX_""","""_(ICDC_" ")_""")"),-1)," ","")
"RTN","ICDEXA3",73,0)
 . . S ICD2=$TR($O(@(ICDR_""""_ICDX_""","""_(ICDU_" ")_""")"),-1)," ","")
"RTN","ICDEXA3",74,0)
 . . S:ICD1]ICD2!(ICD1=ICD2) ICDN=ICD2 S:ICD2]ICD1 ICDN=ICD1
"RTN","ICDEXA3",75,0)
 . S ICDI=$$CODEBA^ICDEX(ICDN,ICDR)
"RTN","ICDEXA3",76,0)
 . S ICDO=ICDN S:'$L(ICDN)!(+ICDI'>0) ICDO=""
"RTN","ICDEXA3",77,0)
 Q ""
"RTN","ICDEXA3",78,0)
OD(FILE,WORD,SYS,REV) ; Replace $Order on "D" Index
"RTN","ICDEXA3",79,0)
 ; 
"RTN","ICDEXA3",80,0)
 ; Input:
"RTN","ICDEXA3",81,0)
 ; 
"RTN","ICDEXA3",82,0)
 ;    FILE   File Number
"RTN","ICDEXA3",83,0)
 ;    WORD   Word, can be null or a 2 piece string
"RTN","ICDEXA3",84,0)
 ;           containing Word and IEN where the word
"RTN","ICDEXA3",85,0)
 ;           is stored
"RTN","ICDEXA3",86,0)
 ;    SYS    Coding System (internal)
"RTN","ICDEXA3",87,0)
 ;             Acceptable values can be found on the ASYS
"RTN","ICDEXA3",88,0)
 ;             Index and includes:
"RTN","ICDEXA3",89,0)
 ;             
"RTN","ICDEXA3",90,0)
 ;             File 80
"RTN","ICDEXA3",91,0)
 ;                1   ICD-9-CM
"RTN","ICDEXA3",92,0)
 ;               30   ICD-10-CM
"RTN","ICDEXA3",93,0)
 ;                 
"RTN","ICDEXA3",94,0)
 ;             File 80.1
"RTN","ICDEXA3",95,0)
 ;                2   ICD-9 Proc
"RTN","ICDEXA3",96,0)
 ;               31   ICD-10-PCS
"RTN","ICDEXA3",97,0)
 ;    
"RTN","ICDEXA3",98,0)
 ;    REV    Reverse $Order if set to 1
"RTN","ICDEXA3",99,0)
 ;    
"RTN","ICDEXA3",100,0)
 ; Output:
"RTN","ICDEXA3",101,0)
 ; 
"RTN","ICDEXA3",102,0)
 ;    2 Piece "^" delimited string
"RTN","ICDEXA3",103,0)
 ;    
"RTN","ICDEXA3",104,0)
 ;         1   WORD   Next or Previous word in D Index
"RTN","ICDEXA3",105,0)
 ;         2   IEN    Internal Entry Number where WORD is found
"RTN","ICDEXA3",106,0)
 ;  
"RTN","ICDEXA3",107,0)
 ;  Retire IA 5388, 5404
"RTN","ICDEXA3",108,0)
 ;  
"RTN","ICDEXA3",109,0)
 N ICDW,ICDWI,ICDG,ICDF,ICDI,ICDR,ICDS,ICDO,ICDN,ICDX,ICDD
"RTN","ICDEXA3",110,0)
 S ICDW=$$UP^XLFSTR($G(WORD)),ICDWI=+($P(ICDW,"^",2)),ICDW=$P(ICDW,"^",1)
"RTN","ICDEXA3",111,0)
 S ICDS=$G(SYS) S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_ICDF_"^") ""
"RTN","ICDEXA3",112,0)
 I $L(ICDS) S ICDS=$$SYS^ICDEX(ICDS) Q:+ICDS'>0 ""
"RTN","ICDEXA3",113,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) ""  S ICDD=+($G(REV))
"RTN","ICDEXA3",114,0)
 I +ICDS>0 D  Q ICDO
"RTN","ICDEXA3",115,0)
 . N ICDX,ICDN,ICDNI,ICDI S ICDX="AD"
"RTN","ICDEXA3",116,0)
 . I ICDD'>0 D  Q
"RTN","ICDEXA3",117,0)
 . . S ICDNI=0 S:$L($G(ICDW)) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""","_+ICDWI_")"))
"RTN","ICDEXA3",118,0)
 . . I ICDNI>0 S ICDO=ICDW_"^"_ICDNI Q
"RTN","ICDEXA3",119,0)
 . . S ICDNI="",ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"))
"RTN","ICDEXA3",120,0)
 . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","_0_")"))
"RTN","ICDEXA3",121,0)
 . . S ICDO=ICDN_"^"_ICDNI
"RTN","ICDEXA3",122,0)
 . I ICDD>0 D  Q
"RTN","ICDEXA3",123,0)
 . . I $L(ICDW) D  Q
"RTN","ICDEXA3",124,0)
 . . . S ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""","_+ICDWI_")"),-1)
"RTN","ICDEXA3",125,0)
 . . . I ICDNI>0 S ICDO=ICDW_"^"_ICDNI Q
"RTN","ICDEXA3",126,0)
 . . . S ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"),-1)
"RTN","ICDEXA3",127,0)
 . . . I '$L(ICDN) S ICDO="" Q
"RTN","ICDEXA3",128,0)
 . . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","" "")"),-1)
"RTN","ICDEXA3",129,0)
 . . . I +ICDNI>0 S ICDO=ICDN_"^"_ICDNI Q
"RTN","ICDEXA3",130,0)
 . . S ICDW="~",ICDWI=""" """ S ICDNI=""
"RTN","ICDEXA3",131,0)
 . . S ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"),-1)
"RTN","ICDEXA3",132,0)
 . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","_ICDWI_")"),-1)
"RTN","ICDEXA3",133,0)
 . . S ICDO=ICDN_"^"_ICDNI
"RTN","ICDEXA3",134,0)
 I '$L(ICDS) D  Q ICDO
"RTN","ICDEXA3",135,0)
 . N ICDX,ICDN,ICDNI,ICDI S ICDX="D"
"RTN","ICDEXA3",136,0)
 . I +ICDD'>0 D  Q
"RTN","ICDEXA3",137,0)
 . . S ICDNI=0 S:$L($G(ICDW)) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""","_+ICDWI_")"))
"RTN","ICDEXA3",138,0)
 . . I ICDNI>0 S ICDO=ICDW_"^"_ICDNI Q
"RTN","ICDEXA3",139,0)
 . . S ICDNI="",ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"))
"RTN","ICDEXA3",140,0)
 . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","_0_")"))
"RTN","ICDEXA3",141,0)
 . . S ICDO=ICDN_"^"_ICDNI
"RTN","ICDEXA3",142,0)
 . I ICDD>0 D  Q
"RTN","ICDEXA3",143,0)
 . . I $L(ICDW) D  Q
"RTN","ICDEXA3",144,0)
 . . . S ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""","_+ICDWI_")"),-1)
"RTN","ICDEXA3",145,0)
 . . . I ICDNI>0 S ICDO=ICDW_"^"_ICDNI Q
"RTN","ICDEXA3",146,0)
 . . . S ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"),-1)
"RTN","ICDEXA3",147,0)
 . . . I '$L(ICDN) S ICDO="" Q
"RTN","ICDEXA3",148,0)
 . . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","" "")"),-1)
"RTN","ICDEXA3",149,0)
 . . . I +ICDNI>0 S ICDO=ICDN_"^"_ICDNI Q
"RTN","ICDEXA3",150,0)
 . . S ICDW="~",ICDWI=""" """ S ICDNI=""
"RTN","ICDEXA3",151,0)
 . . S ICDN=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDW_""")"),-1)
"RTN","ICDEXA3",152,0)
 . . S:$L(ICDN) ICDNI=$O(@(ICDR_""""_ICDX_""","_+ICDS_","""_ICDN_""","_ICDWI_")"),-1)
"RTN","ICDEXA3",153,0)
 . . S ICDO=ICDN_"^"_ICDNI
"RTN","ICDEXA3",154,0)
 Q ""
"RTN","ICDEXA3",155,0)
DLM(FILE,IEN,FIELD,CDT) ; Date Last Modified
"RTN","ICDEXA3",156,0)
 ;
"RTN","ICDEXA3",157,0)
 ; Input
"RTN","ICDEXA3",158,0)
 ;    
"RTN","ICDEXA3",159,0)
 ;    FILE     File Number (required)
"RTN","ICDEXA3",160,0)
 ;    IEN      Internal Entry Number (required)
"RTN","ICDEXA3",161,0)
 ;    FIELD    Field Number of Versioned Data  (optional)
"RTN","ICDEXA3",162,0)
 ;    
"RTN","ICDEXA3",163,0)
 ;               File 80
"RTN","ICDEXA3",164,0)
 ;              
"RTN","ICDEXA3",165,0)
 ;                  10   Sex                          5;0
"RTN","ICDEXA3",166,0)
 ;                  11   Age Low                      6;0
"RTN","ICDEXA3",167,0)
 ;                  12   Age High                     7;0
"RTN","ICDEXA3",168,0)
 ;                  66   Status                      66;0
"RTN","ICDEXA3",169,0)
 ;                  67   Diagnosis                   67;0
"RTN","ICDEXA3",170,0)
 ;                  68   Description                 68;0
"RTN","ICDEXA3",171,0)
 ;                  71   DRG Grouper                  3;0
"RTN","ICDEXA3",172,0)
 ;                  72   Major Diagnostic Category    4;0
"RTN","ICDEXA3",173,0)
 ;                 103   Complication/Comorbidity    69;0
"RTN","ICDEXA3",174,0)
 ;
"RTN","ICDEXA3",175,0)
 ;               File 80.1
"RTN","ICDEXA3",176,0)
 ;              
"RTN","ICDEXA3",177,0)
 ;                  10   Sex                          3;0
"RTN","ICDEXA3",178,0)
 ;                  66   Status                      66;0
"RTN","ICDEXA3",179,0)
 ;                  67   Operation/Procedure         67;0
"RTN","ICDEXA3",180,0)
 ;                  68   Description                 68;0
"RTN","ICDEXA3",181,0)
 ;                  71   DRG Grouper                  2;0
"RTN","ICDEXA3",182,0)
 ;                 
"RTN","ICDEXA3",183,0)
 ;             If the field is passed, then the date last 
"RTN","ICDEXA3",184,0)
 ;             modified (based on date) for the field is
"RTN","ICDEXA3",185,0)
 ;             returned.  If the field is not passed, then
"RTN","ICDEXA3",186,0)
 ;             the date last modified (based on date) for 
"RTN","ICDEXA3",187,0)
 ;             the record at IEN is returned.
"RTN","ICDEXA3",188,0)
 ;           
"RTN","ICDEXA3",189,0)
 ;    CDT     Date to base output on (default is today)
"RTN","ICDEXA3",190,0)
 ;            Business rules apply
"RTN","ICDEXA3",191,0)
 ;    
"RTN","ICDEXA3",192,0)
 ; Output:
"RTN","ICDEXA3",193,0)
 ; 
"RTN","ICDEXA3",194,0)
 ;    $$DLM   Date Last Modified
"RTN","ICDEXA3",195,0)
 ;    
"RTN","ICDEXA3",196,0)
 ;     or -1 ^ message on error
"RTN","ICDEXA3",197,0)
 ;  
"RTN","ICDEXA3",198,0)
 N ICD0,ICDA,ICDC,ICDD,ICDE,ICDF,ICDH,ICDI,ICDL,ICDN,ICDNS,ICDO,ICDP,ICDR
"RTN","ICDEXA3",199,0)
 S ICDI=$G(IEN) Q:+ICDI'>0 "-1^Invalid IEN"
"RTN","ICDEXA3",200,0)
 S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_ICDF_"^") "-1^Invalid File"
"RTN","ICDEXA3",201,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) "-1^Invalid File Root"
"RTN","ICDEXA3",202,0)
 S ICDC=+($P($G(@(ICDR_+ICDI_",1)")),"^",1))
"RTN","ICDEXA3",203,0)
 Q:+ICDC'>0 "-1^Invalid Coding System "_ICDC
"RTN","ICDEXA3",204,0)
 Q:'$D(@(ICDR_+ICDI_",0)")) "-1^IEN not found"
"RTN","ICDEXA3",205,0)
 S ICDL=$G(FIELD)
"RTN","ICDEXA3",206,0)
 S ICDD=$G(CDT) S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXA3",207,0)
 S ICDD=$$DTBR^ICDEX($G(ICDD),0,ICDC)
"RTN","ICDEXA3",208,0)
 Q:ICDD'?7N "-1^Invalid Date for File"
"RTN","ICDEXA3",209,0)
 I '$L(ICDL) D  Q ICDO
"RTN","ICDEXA3",210,0)
 . N ICDA,ICDNS,ICDP,ICDN,ICDE,ICDH,ICD0,ICDL
"RTN","ICDEXA3",211,0)
 . K ICDA S ICDNS="",ICDO="-1^Date Last Modified not found"
"RTN","ICDEXA3",212,0)
 . S:ICDF=80 ICDNS="3^4^5^6^7^66^67^68^69" S:ICDF=80.1 ICDNS="2^3^66^67^68" Q:'$L(ICDNS)
"RTN","ICDEXA3",213,0)
 . F ICDP=1:1 Q:'$L($P(ICDNS,"^",ICDP))  D
"RTN","ICDEXA3",214,0)
 . . S ICDN=$P(ICDNS,"^",ICDP)
"RTN","ICDEXA3",215,0)
 . . S ICDE=$O(@(ICDR_+ICDI_","_ICDN_",""B"","_(ICDD+.001)_")"),-1) Q:ICDE'?7N
"RTN","ICDEXA3",216,0)
 . . S ICDH=$O(@(ICDR_+ICDI_","_ICDN_",""B"","_ICDE_","" "")"),-1)
"RTN","ICDEXA3",217,0)
 . . S ICD0=$G(@(ICDR_+ICDI_","_ICDN_","_ICDH_",0)"))
"RTN","ICDEXA3",218,0)
 . . S:$P(ICD0,"^",1)?7N ICDA($P(ICD0,"^",1))=""
"RTN","ICDEXA3",219,0)
 . S ICDL=$O(ICDA(" "),-1) S:ICDL?7N ICDO=ICDL K ICDA
"RTN","ICDEXA3",220,0)
 S:ICDF=80 ICDN=$S(ICDL=10:5,ICDL=11:6,ICDL=12:7,ICDL=66:66,ICDL=67:67,ICDL=68:68,ICDL=71:3,ICDL=72:4,ICDL=103:69,1:"")
"RTN","ICDEXA3",221,0)
 S:ICDF=80.1 ICDN=$S(ICDL=10:3,ICDL=66:66,ICDL=67:67,ICDL=68:68,ICDL=71:2,1:"")
"RTN","ICDEXA3",222,0)
 Q:+ICDL'>0!('$L(ICDN)) "-1^Invalid Field"
"RTN","ICDEXA3",223,0)
 Q:$O(@(ICDR_+ICDI_","_ICDN_",0)"))'>0 "-1^Field #"_ICDL_" not found for IEN "_ICDI
"RTN","ICDEXA3",224,0)
 S ICDE=$O(@(ICDR_+ICDI_","_ICDN_",""B"","_(ICDD+.001)_")"),-1)
"RTN","ICDEXA3",225,0)
 Q:ICDE'?7N ("-1^Date Last Modified not found based on "_$$FMTE^XLFDT($G(ICDD),"5DZ"))
"RTN","ICDEXA3",226,0)
 S ICDH=$O(@(ICDR_+ICDI_","_ICDN_",""B"","_ICDE_","" "")"),-1)
"RTN","ICDEXA3",227,0)
 Q:+ICDH'>0 "-1^Modified Data Not Found"
"RTN","ICDEXA3",228,0)
 S ICDO="-1^Modified Data Not Found"
"RTN","ICDEXA3",229,0)
 S ICD0=$G(@(ICDR_+ICDI_","_ICDN_","_ICDH_",0)"))
"RTN","ICDEXA3",230,0)
 S ICDL=$P(ICD0,"^",1)
"RTN","ICDEXA3",231,0)
 S:ICDL?7N ICDO=ICDL
"RTN","ICDEXA3",232,0)
 Q ICDO
"RTN","ICDEXA3",233,0)
CS(FILE,FMT,CDT) ; Select Coding System (lookup)
"RTN","ICDEXA3",234,0)
 ;
"RTN","ICDEXA3",235,0)
 ; Input
"RTN","ICDEXA3",236,0)
 ; 
"RTN","ICDEXA3",237,0)
 ;    FILE   File Number 80 or 80.1 (optional)
"RTN","ICDEXA3",238,0)
 ;           If not provided, you will be prompted
"RTN","ICDEXA3",239,0)
 ;           for the ICD File, there is no default
"RTN","ICDEXA3",240,0)
 ;           value.
"RTN","ICDEXA3",241,0)
 ; 
"RTN","ICDEXA3",242,0)
 ;    FMT    Format
"RTN","ICDEXA3",243,0)
 ;    
"RTN","ICDEXA3",244,0)
 ;             E  Display External only (default)
"RTN","ICDEXA3",245,0)
 ;             I  Display Internal with External for selection
"RTN","ICDEXA3",246,0)
 ;             
"RTN","ICDEXA3",247,0)
 ;    CDT    Code Set Date (optional) if not supplied then
"RTN","ICDEXA3",248,0)
 ;           it is not used
"RTN","ICDEXA3",249,0)
 ; Output
"RTN","ICDEXA3",250,0)
 ;     
"RTN","ICDEXA3",251,0)
 ;    $$CS   2 piece "^" delimited string
"RTN","ICDEXA3",252,0)
 ;    
"RTN","ICDEXA3",253,0)
 ;              1  Coding System (internal)
"RTN","ICDEXA3",254,0)
 ;              2  Coding System (external)
"RTN","ICDEXA3",255,0)
 ;      
"RTN","ICDEXA3",256,0)
 ;           or -1 on error or non-selection
"RTN","ICDEXA3",257,0)
 ;              ^^ double up-arrows
"RTN","ICDEXA3",258,0)
 ;               ^ timeout or single up-arrow
"RTN","ICDEXA3",259,0)
 ;    
"RTN","ICDEXA3",260,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICDDIR,ICD0,ICD1,ICD2,ICDA,ICDC,ICDD,ICDE
"RTN","ICDEXA3",261,0)
 N ICDIMP,ICDF,ICDI,ICDM,ICDR,ICDT,ICDTMP,ICDO,ICDV,ICDX,X,Y
"RTN","ICDEXA3",262,0)
 S ICDIMP=$$IMP^ICDEX(30),ICDD=$S($P($G(CDT),".")?7N:$P($G(CDT),"."),1:"")
"RTN","ICDEXA3",263,0)
 S ICDF=$$FIT($G(FILE),1) Q:ICDF["^" ICDF  S ICDDIR="Select ICD file number" S:+ICDF'>0 ICDF=$$FI
"RTN","ICDEXA3",264,0)
 Q:"^80^80.1^"'[("^"_ICDF_"^") "-1^Invalid File"
"RTN","ICDEXA3",265,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) "-1^Invalid File"
"RTN","ICDEXA3",266,0)
 K ICDA S ICDA(0)=0
"RTN","ICDEXA3",267,0)
 I $G(ICDD)?7N D
"RTN","ICDEXA3",268,0)
 . N ICDAA,ICDE,ICDI,ICDS S (ICDC,ICDI)=0 F  S ICDI=$O(^ICDS("F",ICDF,ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXA3",269,0)
 . . S ICDE=$P($G(^ICDS(+ICDI,0)),"^",1) Q:'$L(ICDE)
"RTN","ICDEXA3",270,0)
 . . S ICDTMP=$P($G(^ICDS(+ICDI,0)),"^",4) Q:$G(ICDD)?7N&((ICDD+.001)'>ICDTMP)
"RTN","ICDEXA3",271,0)
 . . S ICDAA(ICDTMP,ICDI)=ICDI_"^"_ICDE
"RTN","ICDEXA3",272,0)
 . S ICDE=$O(ICDAA(" "),-1)
"RTN","ICDEXA3",273,0)
 . S ICDI=$O(ICDAA(+ICDE," "),-1)
"RTN","ICDEXA3",274,0)
 . S ICDS=$G(ICDAA(+ICDE,+ICDI))
"RTN","ICDEXA3",275,0)
 . S:ICDE?7N&(ICDI>0)&($L(ICDS)) ICDC=1,ICDA(ICDC)=ICDS,ICDA(0)=1
"RTN","ICDEXA3",276,0)
 I $G(ICDD)'?7N!($O(ICDA(0))'>0) D
"RTN","ICDEXA3",277,0)
 . S (ICDC,ICDI)=0 F  S ICDI=$O(^ICDS("F",ICDF,ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXA3",278,0)
 . . S ICDE=$P($G(^ICDS(+ICDI,0)),"^",1) Q:'$L(ICDE)
"RTN","ICDEXA3",279,0)
 . . S ICDTMP=$P($G(^ICDS(+ICDI,0)),"^",4)
"RTN","ICDEXA3",280,0)
 . . S ICDC=ICDC+1,ICDA(ICDC)=ICDI_"^"_ICDE,ICDA(0)=ICDC
"RTN","ICDEXA3",281,0)
 Q:ICDA(0)=1&($L($G(ICDA(1)))) $G(ICDA(1)) Q:ICDA(0)=1&('$L($G(ICDA(1)))) "-1^Invalid Selection"
"RTN","ICDEXA3",282,0)
 S ICDX=$G(FMT) S:ICDX'="I" ICDX="E" S ICDM=$O(ICDA(" "),-1) Q:ICDM'>0 "-1^Invalid Selection"
"RTN","ICDEXA3",283,0)
 Q:ICDM=1&($D(ICDA(1))) $G(ICDA(1))  Q:ICDM'>1 "-1^Invalid Selection"  S DIR(0)="NAO^1:"_ICDM_":0"
"RTN","ICDEXA3",284,0)
 S DIR("A",1)=" Coding System Selection for file "_ICDF,DIR("A",2)=" "
"RTN","ICDEXA3",285,0)
 S DIR("A")=" Select Coding System (1-"_ICDM_"):  "
"RTN","ICDEXA3",286,0)
 S ICDC=0,ICDI=0 F  S ICDI=$O(ICDA(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXA3",287,0)
 . N ICD1,ICD2,ICDT S ICD1=$P($G(ICDA(ICDI)),"^",1) Q:ICD1'>0  S ICD2=$P($G(ICDA(ICDI)),"^",2) Q:'$L(ICD2)
"RTN","ICDEXA3",288,0)
 . S ICDT=ICD2 S:$G(ICDX)="I" ICDT=ICDT_$J(" ",(15-$L(ICDT)))_"(#"_ICD1_")"
"RTN","ICDEXA3",289,0)
 . S ICDC=ICDC+1 S DIR("A",(ICDC+2))="    "_$J(ICDC,2)_"   "_ICDT
"RTN","ICDEXA3",290,0)
 S:ICDC>1 ICDC=ICDC+1,DIR("A",(ICDC+2))=" " S DIR("PRE")="S:X[""?"" X=""??""",(DIR("?"),DIR("??"))="^D CSH^ICDEXA3"
"RTN","ICDEXA3",291,0)
 W ! D ^DIR Q:$D(DIROUT) "^^" Q:$D(DTOUT)!($D(DUOUT)) "^"  Q:'$L(Y) "-1^No Coding System Selected"  Q:+Y>0&($D(ICDA(+Y))) $G(ICDA(+Y))
"RTN","ICDEXA3",292,0)
 Q "-1^Invalid Selection"
"RTN","ICDEXA3",293,0)
CSH ; Select Coding System Help
"RTN","ICDEXA3",294,0)
 W:+($G(ICDM))'>1 !,?5,"This response must be a number."
"RTN","ICDEXA3",295,0)
 W:+($G(ICDM))>1 !,?5,"This response must be a number from 1 to ",+($G(ICDM)),"."
"RTN","ICDEXA3",296,0)
 Q
"RTN","ICDEXA3",297,0)
 ;
"RTN","ICDEXA3",298,0)
FI(X) ; Select ICD File
"RTN","ICDEXA3",299,0)
 ;
"RTN","ICDEXA3",300,0)
 ; Input
"RTN","ICDEXA3",301,0)
 ; 
"RTN","ICDEXA3",302,0)
 ;    X      File Number 80 or 80.1 or NULL
"RTN","ICDEXA3",303,0)
 ; 
"RTN","ICDEXA3",304,0)
 ; Output
"RTN","ICDEXA3",305,0)
 ;     
"RTN","ICDEXA3",306,0)
 ;    $$FI   File Number or -1 on error
"RTN","ICDEXA3",307,0)
 ;    
"RTN","ICDEXA3",308,0)
 ;           or -1 on error or non-selection
"RTN","ICDEXA3",309,0)
 ;              ^^ double up-arrows
"RTN","ICDEXA3",310,0)
 ;               ^ timeout or single up-arrow
"RTN","ICDEXA3",311,0)
 ;  
"RTN","ICDEXA3",312,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICD1,ICD2,ICDA,ICDC,ICDE,ICDF,ICDI,ICDM,ICDR,ICDT,Y
"RTN","ICDEXA3",313,0)
 S X=$G(X),ICDO=$$FIT(X,1) Q:"^80^80.1^"[("^"_ICDO_"^") ICDO  S ICD0=""
"RTN","ICDEXA3",314,0)
 S DIR("A")=" Select ICD file:  " S ICDDIR=$$TRIM($G(ICDDIR))
"RTN","ICDEXA3",315,0)
 S DIR("A",1)=" ICD file" S:$L($G(ICDDIR)) DIR("A",1)=" "_$G(ICDDIR) K ICDDIR
"RTN","ICDEXA3",316,0)
 S DIR("A",2)=" "
"RTN","ICDEXA3",317,0)
 S DIR("A",3)="     1   ICD Diagnosis file              #80     ^ICD9("
"RTN","ICDEXA3",318,0)
 S DIR("A",4)="     2   ICD Operations/Procedures file  #80.1   ^ICD0("
"RTN","ICDEXA3",319,0)
 S DIR("A",5)=" "
"RTN","ICDEXA3",320,0)
 S DIR(0)="NAO^1:2:0"
"RTN","ICDEXA3",321,0)
 S DIR("PRE")="S X=$$FIT^ICDEXA3(X)",(DIR("?"),DIR("??"))="^D FIH^ICDEXA3"
"RTN","ICDEXA3",322,0)
 D ^DIR Q:'$L($G(X)) "-1^No Selection"  Q:$D(DIROUT) "^^" Q:$D(DTOUT)!($D(DUOUT)) "^"
"RTN","ICDEXA3",323,0)
 S ICDO=$$FIT(Y,1)  S X="-1^Invalid File Selection"
"RTN","ICDEXA3",324,0)
 S:"^80^80.1^"[("^"_ICDO_"^") X=ICDO
"RTN","ICDEXA3",325,0)
 Q X
"RTN","ICDEXA3",326,0)
FIH ; File Help
"RTN","ICDEXA3",327,0)
 W !,?5,"This response must be a number from 1 to 2."
"RTN","ICDEXA3",328,0)
 Q
"RTN","ICDEXA3",329,0)
DP(X) ; Select Diagnosis or Procedure
"RTN","ICDEXA3",330,0)
 ;
"RTN","ICDEXA3",331,0)
 ; Input
"RTN","ICDEXA3",332,0)
 ; 
"RTN","ICDEXA3",333,0)
 ;    X      Date
"RTN","ICDEXA3",334,0)
 ; 
"RTN","ICDEXA3",335,0)
 ; Output
"RTN","ICDEXA3",336,0)
 ;     
"RTN","ICDEXA3",337,0)
 ;    $$DP   Coding System based on Date or -1 on error
"RTN","ICDEXA3",338,0)
 ;    
"RTN","ICDEXA3",339,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICCD,ICDCS,ICDIMP,ICD1,ICD2,ICDA,ICDC,ICDE,ICDF,ICDI,ICDM,ICDR,ICDT,ICDTY,Y
"RTN","ICDEXA3",340,0)
 S ICDD=$P($G(X),".",1),ICD0="",ICDIMP=$$IMP^ICDEX(30),ICDTY="",ICDCS="" S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXA3",341,0)
 F ICDI=0 F  S ICDI=$O(^ICDS("F",80,ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXA3",342,0)
 . N ICDS,ICDSD S ICDS=$G(^ICDS(ICDI,0)),ICDSD=$P(ICDS,"^",4) Q:ICDSD'?7N
"RTN","ICDEXA3",343,0)
 . S:ICDSD<(ICDD+.0001) ICDTY=$P($P(ICDS,"^",1)," ",1) S:$L(ICDTY,"-")=2 ICDTY=$P(ICDTY,"-",1,2)
"RTN","ICDEXA3",344,0)
 S:'$L(ICDTY) ICDTY="ICD" S DIR("A")=" Select ICD Code Type:  " S ICDDIR=$$TRIM($G(ICDDIR))
"RTN","ICDEXA3",345,0)
 S DIR("A",1)=" Select one of the following:"
"RTN","ICDEXA3",346,0)
 S:$L($G(ICDDIR)) DIR("A",1)=" "_$G(ICDDIR) K ICDDIR
"RTN","ICDEXA3",347,0)
 S DIR("A",2)=" "
"RTN","ICDEXA3",348,0)
 S DIR("A",3)="     1   "_ICDTY_" Diagnosis Code"
"RTN","ICDEXA3",349,0)
 S DIR("A",4)="     2   "_ICDTY_" Operations/Procedures Code"
"RTN","ICDEXA3",350,0)
 S DIR("A",5)=" "
"RTN","ICDEXA3",351,0)
 S DIR(0)="NAO^1:2:0"
"RTN","ICDEXA3",352,0)
 S DIR("PRE")="S:X[""?"" X=""??""",(DIR("?"),DIR("??"))="^D DPH^ICDEXA3"
"RTN","ICDEXA3",353,0)
 D ^DIR Q:'$L($G(X)) "-1^No Selection"  Q:$D(DIROUT) "^^" Q:$D(DTOUT)!($D(DUOUT)) "^"
"RTN","ICDEXA3",354,0)
 S:"^80^80.1^"[("^"_ICDO_"^") X=ICDO
"RTN","ICDEXA3",355,0)
 Q X
"RTN","ICDEXA3",356,0)
DPH ; File Help
"RTN","ICDEXA3",357,0)
 W !,?5,"This response must be a number from 1 to 2."
"RTN","ICDEXA3",358,0)
 Q
"RTN","ICDEXA3",359,0)
 ;
"RTN","ICDEXA3",360,0)
FIT(FILE,FMT) ; File Input Transform
"RTN","ICDEXA3",361,0)
 N ICDF,ICDT,ICDO S ICDF=$G(FILE),ICDT=+($G(FMT)) Q:'ICDT&(ICDF["^^") "^^"  Q:'ICDT&(ICDF["^") "^"
"RTN","ICDEXA3",362,0)
 S ICDO="" S:ICDF["?" ICDO="??" Q:'ICDT&($L(ICDO)) ICDO
"RTN","ICDEXA3",363,0)
 S:ICDF="80"!(ICDF="1")!(ICDF="30")!(ICDF["ICD9")!(ICDF["ICD-9")!(ICDF["DX")!(ICDF["DIAG")!(ICDF="ICD")!(ICDF="10D") ICDO=1
"RTN","ICDEXA3",364,0)
 S:ICDF="80.1"!(ICDF="2")!(ICDF="31")!(ICDF["ICD0")!(ICDF["ICP")!(ICDF["OP")!(ICDF["PR")!(ICDF["PROC")!(ICDF="ICP")!(ICDF="10P") ICDO=2
"RTN","ICDEXA3",365,0)
 S:ICDT ICDO=$S(ICDO=1:80,ICDO=2:80.1,1:"")
"RTN","ICDEXA3",366,0)
 Q ICDO
"RTN","ICDEXA3",367,0)
TRIM(X,Y) ; Trim Character
"RTN","ICDEXA3",368,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXA3",369,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXA3",370,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXA3",371,0)
 Q X
"RTN","ICDEXC")
0^10^B109821658
"RTN","ICDEXC",1,0)
ICDEXC ;SLC/KER - ICD Extractor - Code APIs ;12/19/2014
"RTN","ICDEXC",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXC",3,0)
 ;               
"RTN","ICDEXC",4,0)
 ; Global Variables
"RTN","ICDEXC",5,0)
 ;    None
"RTN","ICDEXC",6,0)
 ;               
"RTN","ICDEXC",7,0)
 ; External References
"RTN","ICDEXC",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXC",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXC",10,0)
 ;               
"RTN","ICDEXC",11,0)
ICDDX(CODE,CDT,SYS,FMT,LOC) ; Return ICD Dx Code Info
"RTN","ICDEXC",12,0)
 ;
"RTN","ICDEXC",13,0)
 ; Input:
"RTN","ICDEXC",14,0)
 ;
"RTN","ICDEXC",15,0)
 ;   CODE  Code/IEN (required)
"RTN","ICDEXC",16,0)
 ;    CDT  Date (default = TODAY)
"RTN","ICDEXC",17,0)
 ;    SYS  Coding System (taken from file 80.4)
"RTN","ICDEXC",18,0)
 ;           1 = ICD-9 Diagnosis
"RTN","ICDEXC",19,0)
 ;          30 = ICD-10 Diagnosis
"RTN","ICDEXC",20,0)
 ;    FMT  Format
"RTN","ICDEXC",21,0)
 ;           E = External (default)
"RTN","ICDEXC",22,0)
 ;           I = Internal Entry Number
"RTN","ICDEXC",23,0)
 ;    LOC  Use Local codes
"RTN","ICDEXC",24,0)
 ;           1 = Yes
"RTN","ICDEXC",25,0)
 ;           0 = No (default)
"RTN","ICDEXC",26,0)
 ;
"RTN","ICDEXC",27,0)
 ; Output:
"RTN","ICDEXC",28,0)
 ;
"RTN","ICDEXC",29,0)
 ;  Returns an 22 piece string delimited by ^
"RTN","ICDEXC",30,0)
 ;  
"RTN","ICDEXC",31,0)
 ;    1  IEN of code in ^ICD9(
"RTN","ICDEXC",32,0)
 ;    2  ICD-9 Dx Code                (#.01)
"RTN","ICDEXC",33,0)
 ;    3  Identifier                   (#1.2)
"RTN","ICDEXC",34,0)
 ;    4  Versioned Dx                 (67 multiple)
"RTN","ICDEXC",35,0)
 ;    5  Unacceptable as Principal Dx (#1.3)
"RTN","ICDEXC",36,0)
 ;    6  Major Dx Cat                 (72 multiple)
"RTN","ICDEXC",37,0)
 ;    7  MDC13                        (#1.4)
"RTN","ICDEXC",38,0)
 ;    8  Compl/Comorb                 (103 multiple)
"RTN","ICDEXC",39,0)
 ;    9  ICD Expanded                 (#1.7)
"RTN","ICDEXC",40,0)
 ;    10 Status                       (66 multiple)
"RTN","ICDEXC",41,0)
 ;    11 Sex                          (10 multiple)
"RTN","ICDEXC",42,0)
 ;    12 Inactive Date                (66 multiple)
"RTN","ICDEXC",43,0)
 ;    13 MDC24                        (#1.5)
"RTN","ICDEXC",44,0)
 ;    14 MDC25                        (#1.6)
"RTN","ICDEXC",45,0)
 ;    15 Age Low                      (11 multiple)
"RTN","ICDEXC",46,0)
 ;    16 Age High                     (12 multiple)
"RTN","ICDEXC",47,0)
 ;    17 Activation Date              (66 multiple)
"RTN","ICDEXC",48,0)
 ;    18 Message                      
"RTN","ICDEXC",49,0)
 ;    19 Complication/Comorbidity     (103 multiple)
"RTN","ICDEXC",50,0)
 ;    20 Coding System                (#1.1)
"RTN","ICDEXC",51,0)
 ;    21 Primary CC Flag              (103 multiple)
"RTN","ICDEXC",52,0)
 ;    22 PDX Exclusion Code           (#1.11)
"RTN","ICDEXC",53,0)
 ;
"RTN","ICDEXC",54,0)
 ;    or
"RTN","ICDEXC",55,0)
 ;
"RTN","ICDEXC",56,0)
 ;    -1^Error Description
"RTN","ICDEXC",57,0)
 ;
"RTN","ICDEXC",58,0)
 N IEN,NODE,OUT,SAI,ROOT,SNAM,ICDY,UPC S FMT=$G(FMT) S:'$L(FMT) FMT="E"
"RTN","ICDEXC",59,0)
 S ROOT=$$ROOT^ICDEX(80),CODE=$G(CODE) Q:'$L(CODE) "-1^No Code Selected"
"RTN","ICDEXC",60,0)
 Q:FMT="I"&(CODE'?1N.N) "-1^Code not in correct format"
"RTN","ICDEXC",61,0)
 I FMT="I",CODE?1N.N S IEN=CODE,CODE=$P($G(^ICD9(IEN,0)),"^",1)
"RTN","ICDEXC",62,0)
 Q:'$L(CODE) "-1^No Code Selected"  S SYS=$$SYS^ICDEX(+($G(SYS)))
"RTN","ICDEXC",63,0)
 S UPC=$$UP^XLFSTR(CODE) S:+SYS'>0 SYS=$$SYS^ICDEX($G(UPC))  I +SYS'>0 D
"RTN","ICDEXC",64,0)
 . N FILE S FILE=$$CODEFI^ICDEX(UPC),SYS=$P($$CODECS^ICDEX(UPC,FILE),"^",1)
"RTN","ICDEXC",65,0)
 Q:+SYS>0&('$D(@(ROOT_"""ABA"","_+SYS_")"))) "-1^Invalid Coding System"
"RTN","ICDEXC",66,0)
 S SNAM=$$SNAM^ICDEX(+SYS),LOC=+($G(LOC))
"RTN","ICDEXC",67,0)
 S IEN=$S(+SYS>0:$$CODEABA(CODE,ROOT,SYS),1:$$CODEBA(CODE,ROOT))
"RTN","ICDEXC",68,0)
 S:+IEN'>0 IEN=$S(+SYS>0:$$CODEABA(UPC,ROOT,SYS),1:$$CODEBA(UPC,ROOT))
"RTN","ICDEXC",69,0)
 S:+IEN'>0&($G(LOC)>0)&($D(^ICD9("AVA",(CODE_" ")))) IEN=$O(^ICD9("AVA",(CODE_" "),0))
"RTN","ICDEXC",70,0)
 Q:'$G(LOC)&($D(^ICD9("AVA",(CODE_" ")))) ("-1^VA Local Code ("_CODE_")")
"RTN","ICDEXC",71,0)
 Q:IEN<1&(+SYS>0)&($L(SNAM))&('$D(^ICD9("AVA",(CODE_" ")))) ("-1^Invalid Code (not found in the "_SNAM_" system)")
"RTN","ICDEXC",72,0)
 Q:IEN<1 "-1^Invalid Code"  Q:'$D(^ICD9(IEN,0)) "-1^Invalid Code (not found)"
"RTN","ICDEXC",73,0)
 S ICDY=$P($G(^ICD9(IEN,1)),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC",74,0)
 S CDT=$P($G(CDT),".",1) S:'$L($G(CDT)) CDT=$$DT^XLFDT
"RTN","ICDEXC",75,0)
 S CDT=$$DTBR^ICDEX($G(CDT),,ICDY) Q:CDT'?7N "-1^No Date Provided"
"RTN","ICDEXC",76,0)
 S NODE=$P($G(^ICD9(IEN,0)),"^",1) Q:'$L(NODE) "-1^Code not found"
"RTN","ICDEXC",77,0)
 Q:'$G(LOC)&($L(NODE))&($P(^ICD9(IEN,1),U,7)) ("-1^VA Local Code ("_NODE_")")
"RTN","ICDEXC",78,0)
 S OUT=IEN_"^"_NODE,SAI=$$SAI^ICDEX(80,IEN,CDT)
"RTN","ICDEXC",79,0)
 S NODE=$G(^ICD9(IEN,1)) Q:'$L(NODE) "-1^Data not found"
"RTN","ICDEXC",80,0)
 S $P(OUT,"^",3)=$$IDSTR^ICDEX(80,IEN)
"RTN","ICDEXC",81,0)
 S $P(OUT,"^",4)=$$VSTD^ICDEX(IEN,CDT)
"RTN","ICDEXC",82,0)
 S $P(OUT,"^",5)=$P(NODE,"^",3)
"RTN","ICDEXC",83,0)
 S $P(OUT,"^",6)=$$VMDC^ICDEX(IEN,CDT)
"RTN","ICDEXC",84,0)
 S $P(OUT,"^",7)=$P(NODE,"^",4)
"RTN","ICDEXC",85,0)
 S $P(OUT,"^",8)=$$VCC^ICDEX(IEN,CDT)
"RTN","ICDEXC",86,0)
 S:$P(NODE,"^",7)>0 $P(OUT,"^",9)=$P(NODE,"^",7)
"RTN","ICDEXC",87,0)
 S $P(OUT,"^",10)=$S(+$P($G(SAI),"^",1)>0:1,1:0)
"RTN","ICDEXC",88,0)
 S $P(OUT,"^",11)=$$VSEX^ICDEX(80,IEN,CDT)
"RTN","ICDEXC",89,0)
 S $P(OUT,"^",12)=$S($P($G(SAI),"^",3)?7N:$P($G(SAI),"^",3),1:"")
"RTN","ICDEXC",90,0)
 S $P(OUT,"^",13)=$P(NODE,"^",5)
"RTN","ICDEXC",91,0)
 S $P(OUT,"^",14)=$P(NODE,"^",6)
"RTN","ICDEXC",92,0)
 S $P(OUT,"^",15)=$$VAGEL^ICDEX(IEN,CDT)
"RTN","ICDEXC",93,0)
 S $P(OUT,"^",16)=$$VAGEH^ICDEX(IEN,CDT)
"RTN","ICDEXC",94,0)
 S $P(OUT,"^",17)=$S($P($G(SAI),"^",2)?7N:$P($G(SAI),"^",2),1:"")
"RTN","ICDEXC",95,0)
 S $P(OUT,"^",18)=$$MSG^ICDEX(CDT)
"RTN","ICDEXC",96,0)
 S $P(OUT,"^",19)=$$VCC^ICDEX(IEN,CDT)
"RTN","ICDEXC",97,0)
 S:+($G(^ICD9(+IEN,1)))>0 $P(OUT,"^",20)=+($G(^ICD9(+IEN,1)))
"RTN","ICDEXC",98,0)
 S $P(OUT,"^",21)=$$VCCP^ICDEX(IEN,CDT)
"RTN","ICDEXC",99,0)
 S $P(OUT,"^",22)=$$PDXE^ICDEX(IEN)
"RTN","ICDEXC",100,0)
 Q OUT
"RTN","ICDEXC",101,0)
 ;
"RTN","ICDEXC",102,0)
ICDOP(CODE,CDT,SYS,FMT,LOC) ; Return ICD Operation/Procedure Code Info
"RTN","ICDEXC",103,0)
 ;
"RTN","ICDEXC",104,0)
 ; Input:
"RTN","ICDEXC",105,0)
 ;
"RTN","ICDEXC",106,0)
 ;   CODE  Code/IEN (required)
"RTN","ICDEXC",107,0)
 ;    CDT  Date (default = TODAY)
"RTN","ICDEXC",108,0)
 ;    SYS  Coding System (taken from file 757.03)
"RTN","ICDEXC",109,0)
 ;           2 = ICD-9 Procedure
"RTN","ICDEXC",110,0)
 ;          31 = ICD-10 Procedure
"RTN","ICDEXC",111,0)
 ;    FMT  Format
"RTN","ICDEXC",112,0)
 ;           E = External (default)
"RTN","ICDEXC",113,0)
 ;           I = Internal Entry Number
"RTN","ICDEXC",114,0)
 ;    LOC  Use Local codes
"RTN","ICDEXC",115,0)
 ;           1 = Yes
"RTN","ICDEXC",116,0)
 ;           0 = No (default)
"RTN","ICDEXC",117,0)
 ;
"RTN","ICDEXC",118,0)
 ; Output:
"RTN","ICDEXC",119,0)
 ;
"RTN","ICDEXC",120,0)
 ;  Returns an 14 piece string delimited by ^
"RTN","ICDEXC",121,0)
 ;  
"RTN","ICDEXC",122,0)
 ;    1  IEN of code in ^ICD0(
"RTN","ICDEXC",123,0)
 ;    2  ICD procedure code           (#.01)
"RTN","ICDEXC",124,0)
 ;    3  Identifier                   (#1.2)
"RTN","ICDEXC",125,0)
 ;    4  MDC24                        (#1.5)
"RTN","ICDEXC",126,0)
 ;    5  Versioned Oper/Proc          (67 multiple)
"RTN","ICDEXC",127,0)
 ;    6  <null>
"RTN","ICDEXC",128,0)
 ;    7  <null>
"RTN","ICDEXC",129,0)
 ;    8  <null>
"RTN","ICDEXC",130,0)
 ;    9  ICD Expanded                 (#1.7)
"RTN","ICDEXC",131,0)
 ;    10 Status                       (66 multiple)
"RTN","ICDEXC",132,0)
 ;    11 Use with Sex                 (10 multiple)
"RTN","ICDEXC",133,0)
 ;    12 Inactive Date                (66 multiple)
"RTN","ICDEXC",134,0)
 ;    13 Activation Date              (66 multiple)
"RTN","ICDEXC",135,0)
 ;    14 Message
"RTN","ICDEXC",136,0)
 ;    15 Coding System                (#1.1)
"RTN","ICDEXC",137,0)
 ;
"RTN","ICDEXC",138,0)
 ;    or
"RTN","ICDEXC",139,0)
 ;
"RTN","ICDEXC",140,0)
 ;    -1^Error Description
"RTN","ICDEXC",141,0)
 ;
"RTN","ICDEXC",142,0)
 N IEN,NODE,OUT,ROOT,SNAM,SAI,ICDY S FMT=$G(FMT) S:'$L(FMT) FMT="E"
"RTN","ICDEXC",143,0)
 S ROOT=$$ROOT^ICDEX(80.1),CODE=$G(CODE) Q:'$L(CODE) "-1^No Code Selected"
"RTN","ICDEXC",144,0)
 Q:FMT="I"&(CODE'?1N.N) "-1^Code not in correct format"
"RTN","ICDEXC",145,0)
 I FMT="I",CODE?1N.N S IEN=CODE,CODE=$P($G(^ICD0(+IEN,0)),"^",1),FMT="E"
"RTN","ICDEXC",146,0)
 Q:'$L(CODE) "-1^No Code Selected"
"RTN","ICDEXC",147,0)
 S SYS=$$SYS^ICDEX(+($G(SYS))),LOC=+($G(LOC)) I +SYS'>0 D
"RTN","ICDEXC",148,0)
 . N FILE S FILE=$$CODEFI^ICDEX(CODE),SYS=$P($$CODECS^ICDEX(CODE,FILE),"^",1)
"RTN","ICDEXC",149,0)
 Q:+SYS>0&('$D(@(ROOT_"""ABA"","_+SYS_")"))) "-1^Invalid Coding System"
"RTN","ICDEXC",150,0)
 S SNAM=$$SNAM^ICDEX(+SYS),IEN=$S(+SYS>0:$$CODEABA(CODE,ROOT,SYS),1:$$CODEBA(CODE,ROOT))
"RTN","ICDEXC",151,0)
 S:+IEN'>0&(+($G(LOC))>0)&($D(^ICD0("AVA",(CODE_" ")))) IEN=$O(^ICD0("AVA",(CODE_" "),0))
"RTN","ICDEXC",152,0)
 Q:'$G(LOC)&($D(^ICD0("AVA",(CODE_" ")))) ("-1^VA Local Code ("_CODE_")")
"RTN","ICDEXC",153,0)
 Q:IEN<1&(+SYS>0)&($L(SNAM)) ("-1^Invalid Code (not found in the "_SNAM_" system)")
"RTN","ICDEXC",154,0)
 Q:IEN<1 "-1^Invalid Code"  Q:'$D(^ICD0(IEN,0)) "-1^Invalid Code (not found)"
"RTN","ICDEXC",155,0)
 S ICDY=$P($G(^ICD0(IEN,1)),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC",156,0)
 S CDT=$P($G(CDT),".",1) S:'$L($G(CDT)) CDT=$$DT^XLFDT
"RTN","ICDEXC",157,0)
 S CDT=$$DTBR^ICDEX($G(CDT),,ICDY) Q:CDT'?7N "-1^No Date Provided"
"RTN","ICDEXC",158,0)
 S NODE=$P($G(^ICD0(+IEN,0)),"^",1) Q:'$L(NODE) "-1^Code not found"
"RTN","ICDEXC",159,0)
 Q:'$G(LOC)&($P(^ICD0(IEN,1),U,7)) ("-1^VA Local Code Selected ("_NODE_")")
"RTN","ICDEXC",160,0)
 S OUT=IEN_"^"_NODE,SAI=$$SAI^ICDEX(80.1,IEN,CDT)
"RTN","ICDEXC",161,0)
 S NODE=$G(^ICD0(IEN,1)) Q:'$L(NODE) "-1^Data not found"
"RTN","ICDEXC",162,0)
 S $P(OUT,"^",3)=$$IDSTR^ICDEX(80.1,IEN)
"RTN","ICDEXC",163,0)
 S $P(OUT,"^",4)=$P(NODE,"^",5)
"RTN","ICDEXC",164,0)
 S $P(OUT,"^",5)=$$VSTP^ICDEX(IEN,CDT)
"RTN","ICDEXC",165,0)
 S:$P(NODE,"^",7)>0 $P(OUT,"^",9)=$P(NODE,"^",7)
"RTN","ICDEXC",166,0)
 S $P(OUT,"^",10)=$S(+$P($G(SAI),"^",1)>0:1,1:0)
"RTN","ICDEXC",167,0)
 S $P(OUT,"^",11)=$$VSEX^ICDEX(80.1,IEN,CDT)
"RTN","ICDEXC",168,0)
 S $P(OUT,"^",12)=$S($P($G(SAI),"^",3)?7N:$P($G(SAI),"^",3),1:"")
"RTN","ICDEXC",169,0)
 S $P(OUT,"^",13)=$S($P($G(SAI),"^",2)?7N:$P($G(SAI),"^",2),1:"")
"RTN","ICDEXC",170,0)
 S $P(OUT,"^",14)=$$MSG^ICDEX(CDT)
"RTN","ICDEXC",171,0)
 S:+($G(^ICD0(+IEN,1)))>0 $P(OUT,"^",15)=+($G(^ICD0(+IEN,1)))
"RTN","ICDEXC",172,0)
 Q OUT
"RTN","ICDEXC",173,0)
ICDD(CODE,ARY,CDT,SYS,LEN) ; Returns ICD description in array
"RTN","ICDEXC",174,0)
 ;
"RTN","ICDEXC",175,0)
 ; Input:
"RTN","ICDEXC",176,0)
 ;
"RTN","ICDEXC",177,0)
 ;   CODE  Code, external format (required)
"RTN","ICDEXC",178,0)
 ;   ARY   Array Name passed by reference (required)
"RTN","ICDEXC",179,0)
 ;   CDT   Date (optional, default = TODAY)
"RTN","ICDEXC",180,0)
 ;   SYS   Coding System (optional)
"RTN","ICDEXC",181,0)
 ;   LEN   Sting Length (optional, > 27, default 245)
"RTN","ICDEXC",182,0)
 ;
"RTN","ICDEXC",183,0)
 ; Output:
"RTN","ICDEXC",184,0)
 ; 
"RTN","ICDEXC",185,0)
 ;   #   Number of lines in array
"RTN","ICDEXC",186,0)
 ;
"RTN","ICDEXC",187,0)
 ;   ARY(1) - Versioned Description (68 multiple)
"RTN","ICDEXC",188,0)
 ;   
"RTN","ICDEXC",189,0)
 ;   If there is a warning message (ICD-9 only):
"RTN","ICDEXC",190,0)
 ;   
"RTN","ICDEXC",191,0)
 ;     ARY(n+1) - blank
"RTN","ICDEXC",192,0)
 ;     ARY(n+2) - warning message: CODE TEXT MAY BE INACCURATE
"RTN","ICDEXC",193,0)
 ;
"RTN","ICDEXC",194,0)
 ;   or
"RTN","ICDEXC",195,0)
 ;
"RTN","ICDEXC",196,0)
 ;   -1^Error Description
"RTN","ICDEXC",197,0)
 ;
"RTN","ICDEXC",198,0)
 ;
"RTN","ICDEXC",199,0)
 N ARR,END,I,N,ROOT,SNAM,VAR,IEN,ICDY
"RTN","ICDEXC",200,0)
 Q:'$L($G(CODE)) "-1^Missing required input parameter CODE"
"RTN","ICDEXC",201,0)
 S SYS=$$SYS^ICDEX(+($G(SYS))) I +SYS'>0 D
"RTN","ICDEXC",202,0)
 . N FILE S FILE=$$CODEFI^ICDEX(CODE),SYS=$P($$CODECS^ICDEX(CODE,FILE),"^",1)
"RTN","ICDEXC",203,0)
 S ROOT=$$ROOT^ICDEX(+SYS)
"RTN","ICDEXC",204,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^")!('$L(ROOT)) "-1^Invalid Coding System"
"RTN","ICDEXC",205,0)
 Q:+SYS>0&('$D(@(ROOT_"""ABA"","_+SYS_")"))) "-1^Invalid Coding System"
"RTN","ICDEXC",206,0)
 S SNAM=$$SNAM^ICDEX(+SYS),IEN=$S(+SYS>0:$$CODEABA(CODE,ROOT,SYS),1:$$CODEBA(CODE,ROOT))
"RTN","ICDEXC",207,0)
 Q:+IEN<1!('$L(ROOT)) "-1^Invalid Code"  Q:'$D(@(ROOT_IEN_",0)")) "-1^Code not found"
"RTN","ICDEXC",208,0)
 S LEN=+($G(LEN)) S:LEN'>0 LEN=245  S:LEN<28 LEN=245 K ARY
"RTN","ICDEXC",209,0)
 S ICDY=$P($G(@(ROOT_+IEN_",1)")),"^",1)
"RTN","ICDEXC",210,0)
 Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXC",211,0)
 S I=0,N=0
"RTN","ICDEXC",212,0)
 S CDT=$P($G(CDT),".",1) S:'$L($G(CDT)) CDT=$$DT^XLFDT
"RTN","ICDEXC",213,0)
 S CDT=$$DTBR^ICDEX($G(CDT),,ICDY) Q:CDT'?7N "-1^No Date Provided"
"RTN","ICDEXC",214,0)
 S ARY(1)=$$VLT^ICDEX(ROOT,IEN,CDT)
"RTN","ICDEXC",215,0)
 I LEN>27,LEN<245 D PAR^ICDEX(.ARY,LEN)
"RTN","ICDEXC",216,0)
 S N=$O(ARY(" "),-1) I +ICDY<3 D
"RTN","ICDEXC",217,0)
 . N MSG S MSG=$$MSG^ICDEX(CDT) Q:'$L(MSG)  S ARY(N+1)=" ",ARY(N+2)=MSG
"RTN","ICDEXC",218,0)
 S N=+($O(ARY(" "),-1))
"RTN","ICDEXC",219,0)
 Q N
"RTN","ICDEXC",220,0)
CODEN(CODE,FILE) ; Return IEN of ICD code
"RTN","ICDEXC",221,0)
 ;
"RTN","ICDEXC",222,0)
 ; Input:
"RTN","ICDEXC",223,0)
 ; 
"RTN","ICDEXC",224,0)
 ;   CODE  ICD code (required)
"RTN","ICDEXC",225,0)
 ;   FILE  File Number to search for code
"RTN","ICDEXC",226,0)
 ;            80 = ICD Dx file
"RTN","ICDEXC",227,0)
 ;            80.1 = ICD Oper/Proc file
"RTN","ICDEXC",228,0)
 ;  
"RTN","ICDEXC",229,0)
 ; Output:
"RTN","ICDEXC",230,0)
 ; 
"RTN","ICDEXC",231,0)
 ;   IEN~Global Root    or    -1~error message
"RTN","ICDEXC",232,0)
 ;
"RTN","ICDEXC",233,0)
 N ROOT,IEN,ERR,EIEN,ICDU S ERR=""
"RTN","ICDEXC",234,0)
 Q:$G(CODE)="" "-1~Missing required input parameter CODE"
"RTN","ICDEXC",235,0)
 S CODE=$TR(CODE," ",""),ICDU=$$UP^XLFSTR(CODE)
"RTN","ICDEXC",236,0)
 S:"^80^80.1^"'[("^"_$G(FILE)_"^") FILE=$$CODEFI^ICDEX(CODE)
"RTN","ICDEXC",237,0)
 S ROOT=$$ROOT^ICDEX($G(FILE)) Q:'$L(ROOT) "-1~Invalid File"
"RTN","ICDEXC",238,0)
 S IEN=$$CODEBA(CODE,ROOT) S:+IEN'>0 ERR="-1~Invalid or Code not found"
"RTN","ICDEXC",239,0)
 I $D(ICDVP),CODE?1N.N,+ERR<0,$L(ROOT) S:$D(@(ROOT_+CODE_",0)")) IEN=+CODE,ERR="" N ICDVP
"RTN","ICDEXC",240,0)
 I +IEN>0,$D(@(ROOT_"""AEXC"","""_ICDU_" "","_+IEN_")")) D
"RTN","ICDEXC",241,0)
 . S ERR="-1~IEN "_+IEN_" is excluded from lookup"
"RTN","ICDEXC",242,0)
 Q:+ERR<0 ERR  Q (IEN_"~"_ROOT)
"RTN","ICDEXC",243,0)
CODE(FILE,IEN) ; Replaces Direct Global Read of Code
"RTN","ICDEXC",244,0)
 ;
"RTN","ICDEXC",245,0)
 ; Input:
"RTN","ICDEXC",246,0)
 ; 
"RTN","ICDEXC",247,0)
 ;    IEN     Internal Entry Number (required)
"RTN","ICDEXC",248,0)
 ;    FILE    File Number 80 or 80.1 (required)
"RTN","ICDEXC",249,0)
 ;    
"RTN","ICDEXC",250,0)
 ; Output:
"RTN","ICDEXC",251,0)
 ; 
"RTN","ICDEXC",252,0)
 ;    $$CODE  An ICD Diagnosis or Procedure code
"RTN","ICDEXC",253,0)
 ;    
"RTN","ICDEXC",254,0)
 ;           or -1 ^ message on error
"RTN","ICDEXC",255,0)
 ;    
"RTN","ICDEXC",256,0)
 ;  Retire IA 280, 365, 582, 5388, 5404
"RTN","ICDEXC",257,0)
 ;  
"RTN","ICDEXC",258,0)
 N ICDC,ICDF,ICDI,ICDR,ICDE S ICDI=$G(IEN) Q:+ICDI'>0 "-1^Invalid IEN"
"RTN","ICDEXC",259,0)
 S ICDF=$G(FILE) Q:"^80^80.1^"'[("^"_ICDF_"^") "-1^Invalid File"
"RTN","ICDEXC",260,0)
 S ICDR=$$ROOT^ICDEX(ICDF) Q:'$L(ICDR) "-1^Invalid File Root"
"RTN","ICDEXC",261,0)
 Q:'$D(@(ICDR_+ICDI_")")) "-1^Invalid IEN for File"
"RTN","ICDEXC",262,0)
 S ICDC=$P($G(@(ICDR_+ICDI_",0)")),"^",1)
"RTN","ICDEXC",263,0)
 Q $S($L(ICDC):ICDC,1:"-1^Code Not Found")
"RTN","ICDEXC",264,0)
CODEBA(CODE,ROOT) ; Return IEN based on Code and Root
"RTN","ICDEXC",265,0)
 ;
"RTN","ICDEXC",266,0)
 ; Input:
"RTN","ICDEXC",267,0)
 ;
"RTN","ICDEXC",268,0)
 ;   CODE  ICD Code, either ICD-9 or ICD-10 (required)
"RTN","ICDEXC",269,0)
 ;   ROOT  File Root or Number (required)
"RTN","ICDEXC",270,0)
 ;            ^ICD9( or 80
"RTN","ICDEXC",271,0)
 ;            ^ICD0( or 80.1
"RTN","ICDEXC",272,0)
 ;
"RTN","ICDEXC",273,0)
 ; Output:
"RTN","ICDEXC",274,0)
 ; 
"RTN","ICDEXC",275,0)
 ;   IEN   IEN for CODE in ROOT or -1 if not found
"RTN","ICDEXC",276,0)
 ;   
"RTN","ICDEXC",277,0)
 Q:'$L($G(CODE)) -1  S:$TR($G(ROOT),".","")?1N.N ROOT=$$ROOT^ICDEX(ROOT) Q:'$L($G(ROOT)) -1
"RTN","ICDEXC",278,0)
 N IEN,OUT,FILE,TMP,ICDU,VIEN,EIEN S IEN=0,OUT="",FILE=$$FILE^ICDEX(ROOT) Q:+FILE'>0 -1
"RTN","ICDEXC",279,0)
 S ICDU=$$UP^XLFSTR(CODE) S EIEN=$O(@(ROOT_"""AEXC"","""_ICDU_" "",0)"))
"RTN","ICDEXC",280,0)
 S VIEN=$O(@(ROOT_"""AVA"","""_ICDU_" "",0)"))
"RTN","ICDEXC",281,0)
 I +IEN'>0,CODE?1N.N,$L(ROOT) D
"RTN","ICDEXC",282,0)
 . I $D(ICDVP) S:$D(@(ROOT_+CODE_",0)")) (IEN,OUT)=+CODE N ICDVP
"RTN","ICDEXC",283,0)
 I IEN'>0 S OUT="",IEN=0 F TMP=CODE,ICDU D
"RTN","ICDEXC",284,0)
 . S IEN=0 F  S IEN=$O(@(ROOT_"""BA"","""_TMP_" "","_IEN_")")) Q:+IEN'>0  Q:+OUT>0  D
"RTN","ICDEXC",285,0)
 . . N EXC S EXC=$$EXC^ICDEX(FILE,IEN) S:+EXC'>0 OUT=IEN
"RTN","ICDEXC",286,0)
 S IEN=+($G(OUT))
"RTN","ICDEXC",287,0)
 I +IEN>0,$D(@(ROOT_"""AEXC"","""_ICDU_" "","_+IEN_")")) Q ("-1^IEN "_+EIEN_" is excluded from lookup")
"RTN","ICDEXC",288,0)
 I +IEN'>0,+EIEN>0 Q ("-1^Code "_ICDU_", IEN "_+EIEN_" is excluded from lookup")
"RTN","ICDEXC",289,0)
 I +IEN'>0,+VIEN>0 Q ("-1^Code "_ICDU_", IEN "_+VIEN_" is a VA local code, not used")
"RTN","ICDEXC",290,0)
 Q $S('IEN:-1,1:IEN)
"RTN","ICDEXC",291,0)
CODEABA(CODE,ROOT,SYS) ; Return IEN based on Code, Root and Coding System
"RTN","ICDEXC",292,0)
 ;
"RTN","ICDEXC",293,0)
 ; Input:
"RTN","ICDEXC",294,0)
 ;
"RTN","ICDEXC",295,0)
 ;   CODE  ICD Code, either ICD-9 or ICD-10 (required)
"RTN","ICDEXC",296,0)
 ;   ROOT  File Root or Number (Optional if SYS is supplied)
"RTN","ICDEXC",297,0)
 ;            ^ICD9( or 80
"RTN","ICDEXC",298,0)
 ;            ^ICD0( or 80.1
"RTN","ICDEXC",299,0)
 ;   SYS   Coding System (required)
"RTN","ICDEXC",300,0)
 ;           1 = ICD-9 Diagnosis
"RTN","ICDEXC",301,0)
 ;           2 = ICD-9 Procedure
"RTN","ICDEXC",302,0)
 ;          30 = ICD-10 Diagnosis
"RTN","ICDEXC",303,0)
 ;          31 = ICD-10 Procedure
"RTN","ICDEXC",304,0)
 ;
"RTN","ICDEXC",305,0)
 ; Output:
"RTN","ICDEXC",306,0)
 ; 
"RTN","ICDEXC",307,0)
 ;   IEN   IEN for CODE in ROOT for SYS 
"RTN","ICDEXC",308,0)
 ;         or 
"RTN","ICDEXC",309,0)
 ;         -1 ^ error message if not found
"RTN","ICDEXC",310,0)
 ;   
"RTN","ICDEXC",311,0)
 N IEN,ICDF,ICDR,ICDI,ICDS,ICDU,ICDE,ICDV S CODE=$TR($G(CODE)," ","")
"RTN","ICDEXC",312,0)
 Q:'$L(CODE) "-1^Code missing"  Q:CODE["""" "-1^Invalid code"
"RTN","ICDEXC",313,0)
 S (ICDS,SYS)=+($G(SYS)),ICDU=$$UP^XLFSTR(CODE)
"RTN","ICDEXC",314,0)
 I ICDS'>0 D
"RTN","ICDEXC",315,0)
 . N ICDF S ICDF=$$CODEFI^ICDEX(CODE),(ICDS,SYS)=$P($$CODECS^ICDEX(CODE,ICDF),"^",1)
"RTN","ICDEXC",316,0)
 Q:+ICDS'>0 "-1^Invalid coding system"
"RTN","ICDEXC",317,0)
 S ICDR="" S ICDR=$$ROOT^ICDEX($G(ROOT))
"RTN","ICDEXC",318,0)
 S:'$L(ICDR) ICDR=$$ROOT^ICDEX(+($G(SYS)))
"RTN","ICDEXC",319,0)
 S:'$L(ICDR) ICDR=$$ROOT^ICDEX(+($G(ICDS)))
"RTN","ICDEXC",320,0)
 Q:'$L(ICDR) "-1^Invalid file/root"
"RTN","ICDEXC",321,0)
 S ICDE=$O(@(ICDR_"""AEXC"","""_ICDU_" "",0)"))
"RTN","ICDEXC",322,0)
 S ICDV=$O(@(ICDR_"""AVA"","""_ICDU_" "",0)"))
"RTN","ICDEXC",323,0)
 S:+($G(IEN))'>0 IEN=$O(@(ICDR_"""ABA"","_+ICDS_","""_CODE_" "","" "")"),-1)
"RTN","ICDEXC",324,0)
 S:+($G(IEN))'>0 IEN=$O(@(ICDR_"""ABA"","_+ICDS_","""_ICDU_" "","" "")"),-1)
"RTN","ICDEXC",325,0)
 I IEN'>0,+ICDE>0 Q ("-1^IEN "_+ICDE_" is excluded from lookup")
"RTN","ICDEXC",326,0)
 I IEN'>0,+ICDV>0 Q ("-1^CODE "_ICDU_", IEN "_+ICDE_" is a VA local code, not used")
"RTN","ICDEXC",327,0)
 Q $S('IEN:"-1^IEN/Code not found",1:IEN)
"RTN","ICDEXC4")
0^19^B30014377
"RTN","ICDEXC4",1,0)
ICDEXC4 ;SLC/KER - ICD Extractor - Code APIs (cont) ;12/19/2014
"RTN","ICDEXC4",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXC4",3,0)
 ;               
"RTN","ICDEXC4",4,0)
 ; Global Variables
"RTN","ICDEXC4",5,0)
 ;    None
"RTN","ICDEXC4",6,0)
 ;               
"RTN","ICDEXC4",7,0)
 ; External References
"RTN","ICDEXC4",8,0)
 ;    None
"RTN","ICDEXC4",9,0)
 ;               
"RTN","ICDEXC4",10,0)
 Q
"RTN","ICDEXC4",11,0)
SDH(FILE,IEN,ARY) ; Short Description History
"RTN","ICDEXC4",12,0)
 ;            
"RTN","ICDEXC4",13,0)
 ; Input:
"RTN","ICDEXC4",14,0)
 ; 
"RTN","ICDEXC4",15,0)
 ;   FILE    File Number (Required)
"RTN","ICDEXC4",16,0)
 ;   IEN     Internal Entry Number (Required)
"RTN","ICDEXC4",17,0)
 ;  .ARY     Array Passed by Reference (Optional)
"RTN","ICDEXC4",18,0)
 ;   
"RTN","ICDEXC4",19,0)
 ; Output:
"RTN","ICDEXC4",20,0)
 ; 
"RTN","ICDEXC4",21,0)
 ;   $$SDH   This is a three piece "^" delimited 
"RTN","ICDEXC4",22,0)
 ;           string containing:
"RTN","ICDEXC4",23,0)
 ;           
"RTN","ICDEXC4",24,0)
 ;              1   Number of short descriptions found
"RTN","ICDEXC4",25,0)
 ;              2   The earliest date found
"RTN","ICDEXC4",26,0)
 ;              3   The latest date found
"RTN","ICDEXC4",27,0)
 ;              
"RTN","ICDEXC4",28,0)
 ;           OR -1 ^ Error Message
"RTN","ICDEXC4",29,0)
 ;           
"RTN","ICDEXC4",30,0)
 ;   ARY     Short Descriptions by date
"RTN","ICDEXC4",31,0)
 ;   
"RTN","ICDEXC4",32,0)
 ;              ARY(0)= # ^ Earliest Date ^ Latest Date
"RTN","ICDEXC4",33,0)
 ;              ARY(DATE)=Long Description
"RTN","ICDEXC4",34,0)
 ;   
"RTN","ICDEXC4",35,0)
 K ARY N EFF,TXT,HIS,ROOT,CNT,FD,LD,BEG,END S IEN=+($G(IEN)),LD=0,FD=9999999
"RTN","ICDEXC4",36,0)
 S FILE=$$FILE^ICDEX($G(FILE)) Q:"^80^80.1^"'[("^"_FILE_"^") "-1^File not found"
"RTN","ICDEXC4",37,0)
 S ROOT=$S(FILE=80:"^ICD9(",FILE=80.1:"^ICD0(",1:"")
"RTN","ICDEXC4",38,0)
 Q:'$L(ROOT) "-1^File not found"  S CNT=0
"RTN","ICDEXC4",39,0)
 S HIS=0 F  S HIS=$O(@(ROOT_+IEN_",67,"_+HIS_")")) Q:+HIS'>0  D
"RTN","ICDEXC4",40,0)
 . N NOD,EFF,TXT S NOD=$G(@(ROOT_+IEN_",67,"_+HIS_",0)"))
"RTN","ICDEXC4",41,0)
 . S EFF=$P(NOD,"^",1),TXT=$P(NOD,"^",2) Q:EFF'?7N  Q:'$L(TXT)
"RTN","ICDEXC4",42,0)
 . S:EFF<FD FD=EFF  S:EFF>LD LD=EFF
"RTN","ICDEXC4",43,0)
 . S CNT=CNT+1,ARY(0)=CNT,ARY(EFF)=TXT
"RTN","ICDEXC4",44,0)
 S (BEG,END)="" S:FD?7N&(FD'=9999999)&(FD'>LD) BEG=FD S:LD?7N&(LD'<FD) END=LD
"RTN","ICDEXC4",45,0)
 S:BEG?7N&(END?7N)&(CNT>0) ARY(0)=CNT_"^"_BEG_"^"_END S CNT=ARY(0)
"RTN","ICDEXC4",46,0)
 I +CNT'>0 D  Q ERR
"RTN","ICDEXC4",47,0)
 . N TYP S TYP=$S(FILE=80:"Diagnosis",FILE=80.1:"Operation/Procedure",1:"")
"RTN","ICDEXC4",48,0)
 . S:$L(TYP) ERR="-1^No "_TYP_" Short Descriptions found"
"RTN","ICDEXC4",49,0)
 . S:'$L(TYP) ERR="-1^No Short Descriptions found"
"RTN","ICDEXC4",50,0)
 Q CNT
"RTN","ICDEXC4",51,0)
LDH(FILE,IEN,ARY) ; Long Description History
"RTN","ICDEXC4",52,0)
 ;            
"RTN","ICDEXC4",53,0)
 ; Input:
"RTN","ICDEXC4",54,0)
 ; 
"RTN","ICDEXC4",55,0)
 ;   FILE    File Number (Required)
"RTN","ICDEXC4",56,0)
 ;   IEN     Internal Entry Number (Required)
"RTN","ICDEXC4",57,0)
 ;  .ARY     Array Passed by Reference (Optional)
"RTN","ICDEXC4",58,0)
 ;  
"RTN","ICDEXC4",59,0)
 ; Output:
"RTN","ICDEXC4",60,0)
 ; 
"RTN","ICDEXC4",61,0)
 ;   $$LDH   This is a three piece "^" delimited 
"RTN","ICDEXC4",62,0)
 ;           string containing:
"RTN","ICDEXC4",63,0)
 ;           
"RTN","ICDEXC4",64,0)
 ;             1   Number of long descriptions found
"RTN","ICDEXC4",65,0)
 ;             2   The earliest date found
"RTN","ICDEXC4",66,0)
 ;             3   The latest date found
"RTN","ICDEXC4",67,0)
 ;              
"RTN","ICDEXC4",68,0)
 ;           OR -1 ^ Error Message
"RTN","ICDEXC4",69,0)
 ;           
"RTN","ICDEXC4",70,0)
 ;   ARY     Long Descriptions by date
"RTN","ICDEXC4",71,0)
 ;   
"RTN","ICDEXC4",72,0)
 ;             ARY(0)= # ^ Earliest Date ^ Latest Date
"RTN","ICDEXC4",73,0)
 ;             ARY(DATE)=Long Description
"RTN","ICDEXC4",74,0)
 ;              
"RTN","ICDEXC4",75,0)
 K ARY N EFF,TXT,HIS,ROOT,CNT,FD,LD,BEG,END S IEN=+($G(IEN)),LD=0,FD=9999999
"RTN","ICDEXC4",76,0)
 S FILE=$$FILE^ICDEX($G(FILE)) Q:"^80^80.1^"'[("^"_FILE_"^") "-1^File not found"
"RTN","ICDEXC4",77,0)
 S ROOT=$S(FILE=80:"^ICD9(",FILE=80.1:"^ICD0(",1:"")
"RTN","ICDEXC4",78,0)
 Q:'$L(ROOT) "-1^File not found"  S CNT=0
"RTN","ICDEXC4",79,0)
 S HIS=0 F  S HIS=$O(@(ROOT_+IEN_",68,"_+HIS_")")) Q:+HIS'>0  D
"RTN","ICDEXC4",80,0)
 . N NOD,EFF,TXT S EFF=$P($G(@(ROOT_+IEN_",68,"_+HIS_",0)")),"^",1)
"RTN","ICDEXC4",81,0)
 . S TXT=$P($G(@(ROOT_+IEN_",68,"_+HIS_",1)")),"^",1)
"RTN","ICDEXC4",82,0)
 . Q:EFF'?7N  Q:'$L(TXT)
"RTN","ICDEXC4",83,0)
 . S:EFF<FD FD=EFF  S:EFF>LD LD=EFF
"RTN","ICDEXC4",84,0)
 . S CNT=CNT+1,ARY(0)=CNT,ARY(EFF)=TXT
"RTN","ICDEXC4",85,0)
 S (BEG,END)="" S:FD?7N&(FD'=9999999)&(FD'>LD) BEG=FD S:LD?7N&(LD'<FD) END=LD
"RTN","ICDEXC4",86,0)
 S:BEG?7N&(END?7N)&(CNT>0) ARY(0)=CNT_"^"_BEG_"^"_END S CNT=ARY(0)
"RTN","ICDEXC4",87,0)
 I +CNT'>0 D  Q ERR
"RTN","ICDEXC4",88,0)
 . N TYP S TYP=$S(FILE=80:"Diagnosis",FILE=80.1:"Operation/Procedure",1:"")
"RTN","ICDEXC4",89,0)
 . S:$L(TYP) ERR="-1^No "_TYP_" Long Descriptions found"
"RTN","ICDEXC4",90,0)
 . S:'$L(TYP) ERR="-1^No Long Descriptions found"
"RTN","ICDEXC4",91,0)
 Q CNT
"RTN","ICDEXC4",92,0)
RDX(CODE,CDT) ; Resolve Diagnosis Code Fragment
"RTN","ICDEXC4",93,0)
 ;
"RTN","ICDEXC4",94,0)
 ; Input
"RTN","ICDEXC4",95,0)
 ; 
"RTN","ICDEXC4",96,0)
 ;    X         Code or Code Fragment (Required)
"RTN","ICDEXC4",97,0)
 ;    CDT       Versioning Date (Optional, Default TODAY)
"RTN","ICDEXC4",98,0)
 ;    
"RTN","ICDEXC4",99,0)
 ; Output
"RTN","ICDEXC4",100,0)
 ; 
"RTN","ICDEXC4",101,0)
 ;    $$RDX     Code if resolved
"RTN","ICDEXC4",102,0)
 ;              -1 ^ error message if not resolved
"RTN","ICDEXC4",103,0)
 ;    
"RTN","ICDEXC4",104,0)
 ; Example: 
"RTN","ICDEXC4",105,0)
 ;    
"RTN","ICDEXC4",106,0)
 ;    Fragment    Oct 1, 2014     Oct 1, 2015
"RTN","ICDEXC4",107,0)
 ;    E8310         E831.0           E83.10
"RTN","ICDEXC4",108,0)
 ;    311           311.             311.
"RTN","ICDEXC4",109,0)
 ;    A870          A87.0            A87.0
"RTN","ICDEXC4",110,0)
 ;    A0201         -1^Could not resolve code fragment
"RTN","ICDEXC4",111,0)
 ;    
"RTN","ICDEXC4",112,0)
 N ICD1,ICD2,ICDC,ICDCD,ICDID,ICDIN,ICDND,ICDNX,ICDO,ICDON,ICDOP,ICDPR,ICDR,ICDS,ICDT,ICDX
"RTN","ICDEXC4",113,0)
 S (ICDO,ICDX)=$$UP^XLFSTR(CODE),ICDC=$E(ICDO,1),ICDR="^ICD9(" Q:'$L(ICDX) "-1^Invalid input"  S ICDCD=$P($G(CDT),".",1)
"RTN","ICDEXC4",114,0)
 S:'$L(ICDCD) ICDCD=$$DT^XLFDT S ICDID=$$IMP^ICDEX(30) S ICDS="" S:ICDCD?7N ICDS=$S((ICDCD+.001)>ICDID:30,1:1)
"RTN","ICDEXC4",115,0)
 S:ICDS=1&("ABCDFGHIJKLMNOPQRSTUWXYZ"[ICDC) ICDS=30 S:ICDS=30&(ICDC?1N) ICDS=1
"RTN","ICDEXC4",116,0)
 Q:'$L(ICDS)!(ICDS'?1N.N) "-1^Invalid system"  I $D(@(ICDR_"""ABA"","_+ICDS_","""_ICDX_" "")")) S CODE=ICDX Q CODE
"RTN","ICDEXC4",117,0)
 F ICDT=".",".0",".00","0","00" D
"RTN","ICDEXC4",118,0)
 . S:$E(ICDX,1)?1N&($D(@(ICDR_"""ABA"","_+ICDS_","""_ICDX_ICDT_" "")"))) ICDX=ICDX_ICDT
"RTN","ICDEXC4",119,0)
 . S:$E(ICDX,1)="E"&($E(ICDX,2,4)?3N)&($D(@(ICDR_"""ABA"","_+ICDS_","""_ICDX_ICDT_" "")"))) ICDX=ICDX_ICDT
"RTN","ICDEXC4",120,0)
 . S:$E(ICDX,1)?1U&($E(ICDX,2,3)?2N)&($D(@(ICDR_"""ABA"","_+ICDS_","""_ICDX_ICDT_" "")"))) ICDX=ICDX_ICDT
"RTN","ICDEXC4",121,0)
 I ICDX'=ICDO,$D(@(ICDR_"""ABA"","_+ICDS_","""_ICDX_" "")")) S CODE=ICDX Q CODE
"RTN","ICDEXC4",122,0)
 I ICDX=ICDO,ICDX'["." D
"RTN","ICDEXC4",123,0)
 . N ICD1,ICD2 S ICD1=$E(ICDX,1,3),ICD2=$E(ICDX,4,$L(ICDX)) S:$E(ICDX,1)="E"&(ICDS=1) ICD1=$E(ICDX,1,4),ICD2=$E(ICDX,5,$L(ICDX))
"RTN","ICDEXC4",124,0)
 . S:$E(ICDX,1)="E"&(ICDS=30) ICD1=$E(ICDX,1,3),ICD2=$E(ICDX,4,$L(ICDX)) Q:$E(ICDX,1)="E"&(ICDS=1)&($L(ICD1)'=4)
"RTN","ICDEXC4",125,0)
 . Q:$E(ICDX,1)="E"&(ICDS=30)&($L(ICD1)'=3)  Q:$E(ICDX,1)'="E"&($L(ICD1)'=3)  S ICDX=ICD1_"."_ICD2
"RTN","ICDEXC4",126,0)
 I ICDX'=ICDO,$D(@(ICDR_"""ABA"","_+ICDS_","""_ICDX_" "")")) S CODE=ICDX Q CODE
"RTN","ICDEXC4",127,0)
 I ICDX=ICDO D
"RTN","ICDEXC4",128,0)
 . F ICDT=".",".0",".00","0","00" D
"RTN","ICDEXC4",129,0)
 . . S:$E(ICDX,1)?1N&($D(@(ICDR_"""BA"","""_ICDX_ICDT_" "")"))) ICDX=ICDX_ICDT
"RTN","ICDEXC4",130,0)
 . . S:$E(ICDX,1)="E"&($E(ICDX,2,4)?3N)&($D(@(ICDR_"""BA"","""_ICDX_ICDT_" "")"))) ICDX=ICDX_ICDT
"RTN","ICDEXC4",131,0)
 . . S:$E(ICDX,1)?1U&($E(ICDX,2,3)?2N)&($D(@(ICDR_"""BA"","""_ICDX_ICDT_" "")"))) ICDX=ICDX_ICDT
"RTN","ICDEXC4",132,0)
 S CODE="-1^Could not resolve code fragment" S:$D(@(ICDR_"""BA"","""_ICDX_" "")")) CODE=ICDX
"RTN","ICDEXC4",133,0)
 Q CODE
"RTN","ICDEXC4",134,0)
TRIM(X,Y) ; Trim Character
"RTN","ICDEXC4",135,0)
 ;
"RTN","ICDEXC4",136,0)
 ; Input:
"RTN","ICDEXC4",137,0)
 ;
"RTN","ICDEXC4",138,0)
 ;   X     Input String
"RTN","ICDEXC4",139,0)
 ;   Y     Character to Trim (default " ")
"RTN","ICDEXC4",140,0)
 ;
"RTN","ICDEXC4",141,0)
 ; Output:
"RTN","ICDEXC4",142,0)
 ; 
"RTN","ICDEXC4",143,0)
 ;   X     String without Leading/Trailing character Y
"RTN","ICDEXC4",144,0)
 ;
"RTN","ICDEXC4",145,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXC4",146,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXC4",147,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXC4",148,0)
 Q X
"RTN","ICDEXD2")
0^14^B52729540
"RTN","ICDEXD2",1,0)
ICDEXD2 ;SLC/KER - ICD Extractor - DRG APIs (cont) ;12/19/2014
"RTN","ICDEXD2",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXD2",3,0)
 ;               
"RTN","ICDEXD2",4,0)
 ; Global Variables
"RTN","ICDEXD2",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXD2",6,0)
 ;               
"RTN","ICDEXD2",7,0)
 ; External References
"RTN","ICDEXD2",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXD2",9,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","ICDEXD2",10,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXD2",11,0)
 ;    ^%DT                ICR  10003
"RTN","ICDEXD2",12,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXD2",13,0)
 ;               
"RTN","ICDEXD2",14,0)
 Q
"RTN","ICDEXD2",15,0)
MD(FILE,IEN,CDT,ARY,FLAG) ; MDC DRGs
"RTN","ICDEXD2",16,0)
 ;
"RTN","ICDEXD2",17,0)
 ; Input
"RTN","ICDEXD2",18,0)
 ;
"RTN","ICDEXD2",19,0)
 ;    FILE   File Number/Identifier
"RTN","ICDEXD2",20,0)
 ;    IEN    Internal entry in file
"RTN","ICDEXD2",21,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD2",22,0)
 ;   .ARY    Array name passed by reference
"RTN","ICDEXD2",23,0)
 ;    FLAG   Flag   I=Internal (default)
"RTN","ICDEXD2",24,0)
 ;                  E=External
"RTN","ICDEXD2",25,0)
 ;
"RTN","ICDEXD2",26,0)
 ; Output
"RTN","ICDEXD2",27,0)
 ;
"RTN","ICDEXD2",28,0)
 ;   ICD Procedures file 80.1 (multiple MDC)
"RTN","ICDEXD2",29,0)
 ;   
"RTN","ICDEXD2",30,0)
 ;      ARY(<fiscal year>,<MDC>)=DRG^;FY;STA
"RTN","ICDEXD2",31,0)
 ;      ARY(<fiscal year>,<MDC>)="DRG^DRG^;FY;STA
"RTN","ICDEXD2",32,0)
 ;   
"RTN","ICDEXD2",33,0)
 ;      If Flag contains "E"
"RTN","ICDEXD2",34,0)
 ;      ARY(<fiscal year>,"E",<MDC>)=MDC Name
"RTN","ICDEXD2",35,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",36,0)
 ;      ARY(<fiscal year>,"E",<MDC>)=MDC Name
"RTN","ICDEXD2",37,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",38,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",39,0)
 ;      ARY(<fiscal year>,"E","FY")=External FY
"RTN","ICDEXD2",40,0)
 ;   
"RTN","ICDEXD2",41,0)
 ;   ICD Diagnosis file 80 (single MDC)
"RTN","ICDEXD2",42,0)
 ;   
"RTN","ICDEXD2",43,0)
 ;      ARY(<fiscal year>,<MDC>)="DRG^DRG^;FY;STA
"RTN","ICDEXD2",44,0)
 ;   
"RTN","ICDEXD2",45,0)
 ;      If Flag contains "E"
"RTN","ICDEXD2",46,0)
 ;      ARY(<fiscal year>,"E",<MDC>)=MDC Name
"RTN","ICDEXD2",47,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",48,0)
 ;      ARY(<fiscal year>,"E",<MDC>,<DRG>)=DRG Name
"RTN","ICDEXD2",49,0)
 ;      ARY(<fiscal year>,"E","FY")=External FY
"RTN","ICDEXD2",50,0)
 ;   
"RTN","ICDEXD2",51,0)
 ;   NOTE:  If no Fiscal Year found for the input 
"RTN","ICDEXD2",52,0)
 ;   date then the first (earliest) Fiscal Year is 
"RTN","ICDEXD2",53,0)
 ;   used.
"RTN","ICDEXD2",54,0)
 ;
"RTN","ICDEXD2",55,0)
 N DRG,FY,FYIEN,MDC,MDCIEN,MY,MYIEN,ROOT,STA,STR S FLAG=$G(FLAG) S:'$L(FLAG) FLAG="I"
"RTN","ICDEXD2",56,0)
 S FILE=$G(FILE) S:FILE=9!(FILE["ICD9") FILE=80  S:FILE=0!(FILE["ICD0") FILE=80.1
"RTN","ICDEXD2",57,0)
 Q:"^80^80.1^"'[("^"_FILE_"^") "-1;Invalid file selected"
"RTN","ICDEXD2",58,0)
 S IEN=+($G(IEN)),CDT=$P($G(CDT),".",1)
"RTN","ICDEXD2",59,0)
 S ROOT=$$ROOT^ICDEX(FILE) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","ICDEXD2",60,0)
 Q:'$L(ROOT) "-1;Invalid file selected"
"RTN","ICDEXD2",61,0)
 K ARY I FILE=80.1 D
"RTN","ICDEXD2",62,0)
 . S STA=1,FY=$O(^ICD0(IEN,2,"B",(CDT+.001)),-1)
"RTN","ICDEXD2",63,0)
 . S:FY'?7N STA=0,FY=$O(^ICD0(IEN,2,"B","")) Q:FY'?7N
"RTN","ICDEXD2",64,0)
 . S FYIEN=$O(^ICD0(IEN,2,"B",+$G(FY),0)) Q:+FYIEN'>0
"RTN","ICDEXD2",65,0)
 . S MDC=0 F  S MDC=$O(^ICD0(IEN,2,FYIEN,1,"B",MDC)) Q:'$L(MDC)  D
"RTN","ICDEXD2",66,0)
 . . S MDCIEN=0 F  S MDCIEN=$O(^ICD0(IEN,2,FYIEN,1,"B",MDC,MDCIEN)) Q:+MDCIEN'>0  D
"RTN","ICDEXD2",67,0)
 . . . S STR="",DRG=""
"RTN","ICDEXD2",68,0)
 . . . F  S DRG=$O(^ICD0(IEN,2,FYIEN,1,MDCIEN,1,"B",DRG)) Q:'$L(DRG)  S STR=STR_DRG_"^"
"RTN","ICDEXD2",69,0)
 . . S ARY(FY,MDC)=STR_";"_FY_";"_STA
"RTN","ICDEXD2",70,0)
 . . I FLAG["E" D
"RTN","ICDEXD2",71,0)
 . . . N ED,EMDC,DRGI,IDRG,DRGOUT
"RTN","ICDEXD2",72,0)
 . . . S ED=$$FMTE^XLFDT(FY,"5DZ"),EMDC=$P($G(^ICM(+MDC,0)),"^",1)
"RTN","ICDEXD2",73,0)
 . . . S ARY(FY,"E","FY")=ED,ARY(FY,"E",MDC)=EMDC
"RTN","ICDEXD2",74,0)
 . . . F DRGI=1:1 Q:'$L($P($G(STR),"^",DRGI))  D
"RTN","ICDEXD2",75,0)
 . . . . N IDRG,DRGOUT S IDRG=$P($G(STR),"^",DRGI) Q:+IDRG'>0
"RTN","ICDEXD2",76,0)
 . . . . K DRGOUT D DRGD^ICDGTDRG(IDRG,"DRGOUT",,$G(CDT))
"RTN","ICDEXD2",77,0)
 . . . . S:$L($G(DRGOUT(1)))&(+DRGI>0) ARY(FY,"E",MDC,IDRG)=$G(DRGOUT(1))
"RTN","ICDEXD2",78,0)
 I FILE=80 D
"RTN","ICDEXD2",79,0)
 . S STA=1,FY=$O(^ICD9(IEN,3,"B",(CDT+.001)),-1)
"RTN","ICDEXD2",80,0)
 . S:FY'?7N STA=0,FY=$O(^ICD9(IEN,3,"B","")) Q:FY'?7N
"RTN","ICDEXD2",81,0)
 . S MY=$O(^ICD9(IEN,4,"B",(FY+.001)))
"RTN","ICDEXD2",82,0)
 . S:MY'?7N MY=$O(^ICD9(IEN,4,"B",""))
"RTN","ICDEXD2",83,0)
 . S MYIEN=$O(^ICD9(IEN,4,"B",+$G(MY),0))
"RTN","ICDEXD2",84,0)
 . S MDC=$P($G(^ICD9(IEN,4,+MYIEN,0)),"^",2)
"RTN","ICDEXD2",85,0)
 . S FYIEN=$O(^ICD9(IEN,3,"B",+$G(FY),0)) Q:+FYIEN'>0
"RTN","ICDEXD2",86,0)
 . S STR="",DRG=""
"RTN","ICDEXD2",87,0)
 . F  S DRG=$O(^ICD9(IEN,3,FYIEN,1,"B",DRG)) Q:'$L(DRG)  S STR=STR_DRG_"^"
"RTN","ICDEXD2",88,0)
 . I +MDC'>0 S MDC=$$DRGMDC^ICDEXD(+STR)
"RTN","ICDEXD2",89,0)
 . S ARY(FY,MDC)=STR_";"_FY_";"_STA
"RTN","ICDEXD2",90,0)
 . I FLAG["E" D
"RTN","ICDEXD2",91,0)
 . . N ED,EMDC,DRGI,IDRG,DRGOUT
"RTN","ICDEXD2",92,0)
 . . S ED=$$FMTE^XLFDT(FY,"5DZ"),EMDC=$P($G(^ICM(+MDC,0)),"^",1)
"RTN","ICDEXD2",93,0)
 . . S ARY(FY,"E","FY")=ED,ARY(FY,"E",MDC)=EMDC
"RTN","ICDEXD2",94,0)
 . . F DRGI=1:1 Q:'$L($P($G(STR),"^",DRGI))  D
"RTN","ICDEXD2",95,0)
 . . . N IDRG,DRGOUT S IDRG=$P($G(STR),"^",DRGI) Q:+IDRG'>0
"RTN","ICDEXD2",96,0)
 . . . K DRGOUT D DRGD^ICDGTDRG(IDRG,"DRGOUT",,$G(CDT))
"RTN","ICDEXD2",97,0)
 . . . S:$L($G(DRGOUT(1)))&(+DRGI>0) ARY(FY,"E",MDC,IDRG)=$G(DRGOUT(1))
"RTN","ICDEXD2",98,0)
 Q
"RTN","ICDEXD2",99,0)
VMDCDX(IEN,CDT) ; Get versioned MDC for Diagnosis Code
"RTN","ICDEXD2",100,0)
 ;
"RTN","ICDEXD2",101,0)
 ; Input
"RTN","ICDEXD2",102,0)
 ;
"RTN","ICDEXD2",103,0)
 ;    IEN    Internal Entry Number file 80
"RTN","ICDEXD2",104,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD2",105,0)
 ;
"RTN","ICDEXD2",106,0)
 ; Output
"RTN","ICDEXD2",107,0)
 ;
"RTN","ICDEXD2",108,0)
 ;   $$VMDCDX  Versioned MDC
"RTN","ICDEXD2",109,0)
 ;
"RTN","ICDEXD2",110,0)
 N ICDI,ICDD,ICDS,ICDM,ICDY S ICDI=+($G(IEN)) Q:'$D(^ICD9(ICDI,4,"B")) ""
"RTN","ICDEXD2",111,0)
 S ICDS=$P($G(^ICD9(+ICDI,1)),"^",1),ICDD=$$DTBR^ICDEX($G(CDT),0,ICDS)
"RTN","ICDEXD2",112,0)
 S (ICDM,ICDY)="",ICDY=$O(^ICD9(+ICDI,4,"B",+ICDD),-1)
"RTN","ICDEXD2",113,0)
 S ICDM=$O(^ICD9(ICDI,4,"B",+ICDY,ICDM))
"RTN","ICDEXD2",114,0)
 Q $P($G(^ICD9(ICDI,4,+ICDM,0)),U,2)
"RTN","ICDEXD2",115,0)
VMDCOP(IEN,MDC,CDT) ; Get versioned MDC for Op/Pro ICD code from previous years
"RTN","ICDEXD2",116,0)
 ;
"RTN","ICDEXD2",117,0)
 ; Input
"RTN","ICDEXD2",118,0)
 ;
"RTN","ICDEXD2",119,0)
 ;    IEN    Internal Entry Number file 80.1
"RTN","ICDEXD2",120,0)
 ;    MDC    Major Diagnostic Category
"RTN","ICDEXD2",121,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD2",122,0)
 ;
"RTN","ICDEXD2",123,0)
 ; Output
"RTN","ICDEXD2",124,0)
 ;
"RTN","ICDEXD2",125,0)
 ;   $$VMDCOP  4 piece "^" delimited string
"RTN","ICDEXD2",126,0)
 ;
"RTN","ICDEXD2",127,0)
 ;             1   Fiscal Year  Fileman format
"RTN","ICDEXD2",128,0)
 ;             2   MDC          Pointer to file 80.3
"RTN","ICDEXD2",129,0)
 ;             3   Fiscal Year  pointer to sub-file 80.171
"RTN","ICDEXD2",130,0)
 ;                              (formerly known as DADRGFY)
"RTN","ICDEXD2",131,0)
 ;             4   MDC          pointer to sub-file 80.1711
"RTN","ICDEXD2",132,0)
 ;                                (formerly known as DAMDC)
"RTN","ICDEXD2",133,0)
 ;
"RTN","ICDEXD2",134,0)
 N ICDI,ICDC,ICDD,ICDO,ICDY,ICDM,ICDS S ICDI=+($G(IEN)) Q:'$D(^ICD0(ICDI,2,"B")) ""
"RTN","ICDEXD2",135,0)
 S ICDC=$G(MDC) Q:'$L(MDC) ""  S ICDS=$P($G(^ICD0(+ICDI,1)),"^",1)
"RTN","ICDEXD2",136,0)
 S ICDD=$$DTBR^ICDEX($G(CDT),0,ICDS) S (ICDM,ICDY)=""
"RTN","ICDEXD2",137,0)
 F  S ICDD=$O(^ICD0(ICDI,2,"B",ICDD),-1) Q:'ICDD!(ICDM>0)  D
"RTN","ICDEXD2",138,0)
 . S ICDY=$O(^ICD0(ICDI,2,"B",+$G(ICDD),ICDY)),ICDO=ICDD
"RTN","ICDEXD2",139,0)
 . S ICDM=$O(^ICD0(ICDI,2,+ICDY,1,"B",ICDC,ICDM))
"RTN","ICDEXD2",140,0)
 Q:'$L($G(ICDO)) ""
"RTN","ICDEXD2",141,0)
 Q (ICDO_"^"_ICDC_"^"_ICDY_"^"_ICDM)
"RTN","ICDEXD2",142,0)
 ;
"RTN","ICDEXD2",143,0)
MDCG(IEN,CDT,ARY) ; Set up ICDMDC() array
"RTN","ICDEXD2",144,0)
 ;
"RTN","ICDEXD2",145,0)
 ; Input
"RTN","ICDEXD2",146,0)
 ;
"RTN","ICDEXD2",147,0)
 ;    IEN    ICD Diagnosis (IEN)
"RTN","ICDEXD2",148,0)
 ;    CDT    Code Set Versioning Date
"RTN","ICDEXD2",149,0)
 ;   .ARY    Array name passed by reference
"RTN","ICDEXD2",150,0)
 ;
"RTN","ICDEXD2",151,0)
 ; Output
"RTN","ICDEXD2",152,0)
 ;
"RTN","ICDEXD2",153,0)
 ;    ARY    Array listing MDCs for all DRGs
"RTN","ICDEXD2",154,0)
 ;
"RTN","ICDEXD2",155,0)
 ;      ARY=MDC
"RTN","ICDEXD2",156,0)
 ;      ARY(MDC)=""
"RTN","ICDEXD2",157,0)
 ;
"RTN","ICDEXD2",158,0)
 N I,ICDC,ICDO,ICDTMP,ICDS,ICDD,DRGS S IEN=$G(IEN) Q:+IEN'>0  S ICDS=$P($G(^ICD9(+IEN,1)),"^",1)
"RTN","ICDEXD2",159,0)
 S ICDD=$$DTBR^ICDEX($G(CDT),0,ICDS) Q:'$L(IEN)  S ICDO=$G(ARY) K ARY S:$L(ICDO) ARY=ICDO
"RTN","ICDEXD2",160,0)
 S ICDTMP=$$GETDRG^ICDEX(80,IEN,ICDD) Q:'$P(ICDTMP,";",3)  S DRGS=$P(ICDTMP,";")
"RTN","ICDEXD2",161,0)
 F I=1:1 Q:'$L($P(DRGS,"^",I))  Q:'$P(DRGS,"^",I)  D
"RTN","ICDEXD2",162,0)
 . N DRG,MDC S DRG=$P(DRGS,"^",I) Q:DRG=""  S MDC=$P($$DRG^ICDGTDRG(DRG,ICDD),"^",5) Q:MDC=""  S ARY(MDC)=""
"RTN","ICDEXD2",163,0)
 Q
"RTN","ICDEXD2",164,0)
MDCT(IEN,CDT,ARY,FMT) ; For Multiple MDC DX Codes
"RTN","ICDEXD2",165,0)
 ;
"RTN","ICDEXD2",166,0)
 ; Input:
"RTN","ICDEXD2",167,0)
 ;
"RTN","ICDEXD2",168,0)
 ;    IEN  Internal Entry Number for file 80.1
"RTN","ICDEXD2",169,0)
 ;    CDT  Code Set Versioning Date
"RTN","ICDEXD2",170,0)
 ;   .ARY  Array of MDCs passed by reference (required)
"RTN","ICDEXD2",171,0)
 ;    FMT  Output Format (optional)
"RTN","ICDEXD2",172,0)
 ;
"RTN","ICDEXD2",173,0)
 ;           0   Boolean value only (default)
"RTN","ICDEXD2",174,0)
 ;           1   2 piece "^" delimited string
"RTN","ICDEXD2",175,0)
 ;                  1   Boolean value
"RTN","ICDEXD2",176,0)
 ;                  2   String of matching MDCs delimited by ";"
"RTN","ICDEXD2",177,0)
 ; Output:
"RTN","ICDEXD2",178,0)
 ;
"RTN","ICDEXD2",179,0)
 ;  $$MDCT  Boolean value
"RTN","ICDEXD2",180,0)
 ;
"RTN","ICDEXD2",181,0)
 ;           0  The ICD Procedure code identified by IEN
"RTN","ICDEXD2",182,0)
 ;              does not include any of the MDCs passed 
"RTN","ICDEXD2",183,0)
 ;              in .ARY(MDC) on the date specified (CDT)
"RTN","ICDEXD2",184,0)
 ;
"RTN","ICDEXD2",185,0)
 ;           1  The ICD Procedure code identified by IEN 
"RTN","ICDEXD2",186,0)
 ;              includes one or more of the MDCs passed
"RTN","ICDEXD2",187,0)
 ;              in .ARY(MDC) on the date specified (CDT)
"RTN","ICDEXD2",188,0)
 ;
"RTN","ICDEXD2",189,0)
 N FY,FYI,I,MD,MDC,OK,STR
"RTN","ICDEXD2",190,0)
 S IEN=+($G(IEN)) Q:'$D(^ICD0(+IEN,0)) 0
"RTN","ICDEXD2",191,0)
 Q:$P($G(^ICD0(IEN,1)),"^",7)>0 0
"RTN","ICDEXD2",192,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","ICDEXD2",193,0)
 S FMT=+($G(FMT)),(STR,MD)="",OK=0 F I=1:1 S MD=$O(ARY(MD)) Q:MD=""  D
"RTN","ICDEXD2",194,0)
 . N FY,FYI,MDC S FY=$O(^ICD0(IEN,2,"B",(+CDT+.001)),-1) Q:FY'?7N
"RTN","ICDEXD2",195,0)
 . S FYI=$O(^ICD0(IEN,2,"B",+FY,0))
"RTN","ICDEXD2",196,0)
 . S MDC=$D(^ICD0(IEN,2,+FYI,1,"B",MD))
"RTN","ICDEXD2",197,0)
 . S:MDC>0 STR=STR_";"_MD
"RTN","ICDEXD2",198,0)
 . S:MDC>0 OK=1
"RTN","ICDEXD2",199,0)
 F  Q:$E(STR,1)'=";"  S STR=$E(STR,2,$L(STR))
"RTN","ICDEXD2",200,0)
 S OK=+OK S:FMT>0&($L(STR)) OK=OK_"^"_STR
"RTN","ICDEXD2",201,0)
 Q OK
"RTN","ICDEXD2",202,0)
MDCD(IEN,MDC,CDT) ; Check for default MDC
"RTN","ICDEXD2",203,0)
 ;
"RTN","ICDEXD2",204,0)
 ; Input:
"RTN","ICDEXD2",205,0)
 ;
"RTN","ICDEXD2",206,0)
 ;    IEN  Internal Entry Number for file 80.1
"RTN","ICDEXD2",207,0)
 ;    MDC  Major Diagnostic Category
"RTN","ICDEXD2",208,0)
 ;    CDT  Code Set Versioning Date (optional)
"RTN","ICDEXD2",209,0)
 ;         If not passed, the first FY is used
"RTN","ICDEXD2",210,0)
 ;
"RTN","ICDEXD2",211,0)
 ; Output:
"RTN","ICDEXD2",212,0)
 ;
"RTN","ICDEXD2",213,0)
 ;   $$MDCD  Boolean value
"RTN","ICDEXD2",214,0)
 ;
"RTN","ICDEXD2",215,0)
 ;           0  MDC Does not exist
"RTN","ICDEXD2",216,0)
 ;           1  MDC Exist
"RTN","ICDEXD2",217,0)
 ;
"RTN","ICDEXD2",218,0)
 N ICDY,ICDM,ICDD,ICDF S ICDY=+($G(IEN)) Q:'$D(^ICD0(+IEN,2,1,1)) 0  S ICDM=$G(MDC) Q:'$L(ICDM) 0
"RTN","ICDEXD2",219,0)
 S ICDD=$G(CDT),ICDF=$O(^ICD0(+ICDY,2,"B",(ICDD+.001)),-1) S:ICDF'?7N ICDF=$O(^ICD0(+ICDY,2,"B",""))
"RTN","ICDEXD2",220,0)
 S ICDF=$O(^ICD0(+ICDY,2,"B",+ICDF,0)) Q:ICDF'>0 $S($D(^ICD0(ICDY,2,1,1,"B",ICDM))>0:1,1:0)
"RTN","ICDEXD2",221,0)
 Q:ICDF>0 $S($D(^ICD0(ICDY,2,+ICDF,1,"B",ICDM))>0:1,1:0)
"RTN","ICDEXD2",222,0)
MDCN(IEN) ; Major Diagnostic Category Name
"RTN","ICDEXD2",223,0)
 ;
"RTN","ICDEXD2",224,0)
 ; Input:
"RTN","ICDEXD2",225,0)
 ;
"RTN","ICDEXD2",226,0)
 ;    IEN    Internal Entry Number for file 80.3
"RTN","ICDEXD2",227,0)
 ;
"RTN","ICDEXD2",228,0)
 ; Output:
"RTN","ICDEXD2",229,0)
 ;
"RTN","ICDEXD2",230,0)
 ;   $$MDCN  Major Diagnostic Category Name
"RTN","ICDEXD2",231,0)
 ;
"RTN","ICDEXD2",232,0)
 ; Replaces ICR 1586
"RTN","ICDEXD2",233,0)
 ; 
"RTN","ICDEXD2",234,0)
 Q $P($G(^ICM(+($G(IEN)),0)),"^",1)
"RTN","ICDEXD2",235,0)
MOR(IEN) ; Major O.R. Procedure
"RTN","ICDEXD2",236,0)
 ;
"RTN","ICDEXD2",237,0)
 ; Input:
"RTN","ICDEXD2",238,0)
 ;
"RTN","ICDEXD2",239,0)
 ;    IEN   Internal Entry Number for file 80.1
"RTN","ICDEXD2",240,0)
 ;
"RTN","ICDEXD2",241,0)
 ; Output:
"RTN","ICDEXD2",242,0)
 ;
"RTN","ICDEXD2",243,0)
 ;   $$MOR  Major O.R. Procedure
"RTN","ICDEXD2",244,0)
 ;
"RTN","ICDEXD2",245,0)
 Q $G(^ICD0(+($G(IEN)),"M"))
"RTN","ICDEXD2",246,0)
 ;
"RTN","ICDEXD2",247,0)
ISVALID(FILE,IEN,CDT) ; Is an ICD code Valid
"RTN","ICDEXD2",248,0)
 ;
"RTN","ICDEXD2",249,0)
 ; Input:
"RTN","ICDEXD2",250,0)
 ; 
"RTN","ICDEXD2",251,0)
 ;    FILE        File or global root
"RTN","ICDEXD2",252,0)
 ;    IEN         Internal Entry Number
"RTN","ICDEXD2",253,0)
 ;    CDT         Effective date to use (default TODAY)
"RTN","ICDEXD2",254,0)
 ;
"RTN","ICDEXD2",255,0)
 ; Output:
"RTN","ICDEXD2",256,0)
 ; 
"RTN","ICDEXD2",257,0)
 ;    $$ISVALID   This is a Boolean value
"RTN","ICDEXD2",258,0)
 ;  
"RTN","ICDEXD2",259,0)
 ;                  1 if the code is valid
"RTN","ICDEXD2",260,0)
 ;                  0 if the code is not valid
"RTN","ICDEXD2",261,0)
 ;
"RTN","ICDEXD2",262,0)
 N ICDO,ICDD,ICDF,ICDT,ICDX,ICDI,ICDR S ICDO=0
"RTN","ICDEXD2",263,0)
 S FILE=$S(FILE="9":80,FILE="0":80.1,1:FILE)
"RTN","ICDEXD2",264,0)
 S ICDD=$P($G(CDT),".",1) S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXD2",265,0)
 S ICDF=$$FILE^ICDEX(FILE) Q:"^80^80.1^"'[("^"_FILE_"^") ICDO
"RTN","ICDEXD2",266,0)
 S ICDR=$$ROOT^ICDEX(FILE),ICDI=+($G(IEN)) Q:+ICDI'>0 ICDO
"RTN","ICDEXD2",267,0)
 Q:'$D(@(ICDR_+ICDI_",0)")) ICDO  S ICDX=$$EXC^ICDEX(ICDF,ICDI) Q:ICDX>0 ICDO
"RTN","ICDEXD2",268,0)
 I ICDF=80.1 S ICDT=$$ICDOP^ICDEX(ICDI,ICDD,,"I") I ICDT>0,$P(ICDT,U,10) S ICDO=1
"RTN","ICDEXD2",269,0)
 I ICDF=80 S ICDT=$$ICDDX^ICDEX(ICDI,ICDD,,"I") I ICDT>0,$P(ICDT,U,10) S ICDO=1
"RTN","ICDEXD2",270,0)
 Q ICDO
"RTN","ICDEXD2",271,0)
REF(IEN,CDT) ; Return Reference Table
"RTN","ICDEXD2",272,0)
 ;
"RTN","ICDEXD2",273,0)
 ;  Input:
"RTN","ICDEXD2",274,0)
 ;  
"RTN","ICDEXD2",275,0)
 ;    IEN    Internal Entry Number
"RTN","ICDEXD2",276,0)
 ;    CDT    Effective date to use (default TODAY)
"RTN","ICDEXD2",277,0)
 ;
"RTN","ICDEXD2",278,0)
 ;  Output:
"RTN","ICDEXD2",279,0)
 ;  
"RTN","ICDEXD2",280,0)
 ;    $$REF  Table reference associated DRG entry
"RTN","ICDEXD2",281,0)
 ;           or null if not found
"RTN","ICDEXD2",282,0)
 ; 
"RTN","ICDEXD2",283,0)
 N ICDI,ICDD,ICDR,ICDFY,ICDR
"RTN","ICDEXD2",284,0)
 S ICDI=+($G(IEN)) Q:+IEN'>0!('$D(^ICD(IEN,2))) ""
"RTN","ICDEXD2",285,0)
 S (ICDFY,ICDR)="",ICDD=$P($G(CDT),".",1)
"RTN","ICDEXD2",286,0)
 S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXD2",287,0)
 S ICDFY=$O(^ICD(ICDI,2,"B",(+ICDD+.01)),-1)
"RTN","ICDEXD2",288,0)
 S ICDR=$O(^ICD(ICDI,2,"B",+ICDFY,ICDR))
"RTN","ICDEXD2",289,0)
 S ICDR=$P($G(^ICD(ICDI,2,+ICDR,0)),U,3)
"RTN","ICDEXD2",290,0)
 Q ICDR
"RTN","ICDEXD5")
0^15^B57426923
"RTN","ICDEXD5",1,0)
ICDEXD5 ;SLC/KER - ICD Extractor - DRG APIs (cont) ;12/19/2014
"RTN","ICDEXD5",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXD5",3,0)
 ;               
"RTN","ICDEXD5",4,0)
 ; Global Variables
"RTN","ICDEXD5",5,0)
 ;    ^DG(45.86)          ICR   5821
"RTN","ICDEXD5",6,0)
 ;    ^DGPT(              ICR   5822
"RTN","ICDEXD5",7,0)
 ;    ^ICD("ADS")         N/A
"RTN","ICDEXD5",8,0)
 ;    ^ICD("B")           N/A
"RTN","ICDEXD5",9,0)
 ;    ^TMP("DRGD")        SACC 2.3.2.5.1
"RTN","ICDEXD5",10,0)
 ;               
"RTN","ICDEXD5",11,0)
 ; External References
"RTN","ICDEXD5",12,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXD5",13,0)
 ;    $$NOW^XLFDT         ICR  10103
"RTN","ICDEXD5",14,0)
 ;               
"RTN","ICDEXD5",15,0)
 Q
"RTN","ICDEXD5",16,0)
DRG(CODE,CDT)   ; Returns a string of information from the DRG file (#80.2)
"RTN","ICDEXD5",17,0)
 ;
"RTN","ICDEXD5",18,0)
 ; Input:
"RTN","ICDEXD5",19,0)
 ; 
"RTN","ICDEXD5",20,0)
 ;    CODE    DRG code, internal or external format (Required)
"RTN","ICDEXD5",21,0)
 ;    CDT     Date, FileMan format (default = TODAY)
"RTN","ICDEXD5",22,0)
 ;               If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDEXD5",23,0)
 ;               If CDT > DT, validate with In/Activation Dates
"RTN","ICDEXD5",24,0)
 ;               If CDT is year only, use first of the year
"RTN","ICDEXD5",25,0)
 ;               If CDT is year and month, use first of the month
"RTN","ICDEXD5",26,0)
 ; 
"RTN","ICDEXD5",27,0)
 ; Output:  
"RTN","ICDEXD5",28,0)
 ; 
"RTN","ICDEXD5",29,0)
 ;           Returns an 22 piece string delimited by the 
"RTN","ICDEXD5",30,0)
 ;           up-arrow (^) the pieces are:
"RTN","ICDEXD5",31,0)
 ;           
"RTN","ICDEXD5",32,0)
 ;              1  DRG name (field #.01)
"RTN","ICDEXD5",33,0)
 ;              2  Weight (field #2)
"RTN","ICDEXD5",34,0)
 ;              3  Low Trim (days) (field #3)
"RTN","ICDEXD5",35,0)
 ;              4  High Trim (days) (field #4)
"RTN","ICDEXD5",36,0)
 ;              5  MDC (field #5)
"RTN","ICDEXD5",37,0)
 ;              6  Surgery Flag (field #.06)
"RTN","ICDEXD5",38,0)
 ;              7  <null>
"RTN","ICDEXD5",39,0)
 ;              8  Avg Length of Stay (days) (field 10)
"RTN","ICDEXD5",40,0)
 ;              9  Local Low Trim Days (field #11)
"RTN","ICDEXD5",41,0)
 ;             10  Local High Trim Days (field #12)
"RTN","ICDEXD5",42,0)
 ;             11  <null>
"RTN","ICDEXD5",43,0)
 ;             12  Local Breakeven (field #13)
"RTN","ICDEXD5",44,0)
 ;             13  Activation Date (.01 of the 66 multiple)
"RTN","ICDEXD5",45,0)
 ;             14  Status (.03 of the 66 multiple)
"RTN","ICDEXD5",46,0)
 ;             15  Inactivation Date (.01 of the 66 multiple)
"RTN","ICDEXD5",47,0)
 ;             16  Effective date (.01 of the 66 multiple)
"RTN","ICDEXD5",48,0)
 ;             17  Internal Entry Number (IEN)
"RTN","ICDEXD5",49,0)
 ;             18  Effective date (.01 of the 66 multiple)
"RTN","ICDEXD5",50,0)
 ;             19  Reference (field #900)
"RTN","ICDEXD5",51,0)
 ;             20  Weight (Non Affil) (field #7)
"RTN","ICDEXD5",52,0)
 ;             21  Weight (Int Affil) (field #7.5)
"RTN","ICDEXD5",53,0)
 ;             22  Message
"RTN","ICDEXD5",54,0)
 ; 
"RTN","ICDEXD5",55,0)
 ;              or 
"RTN","ICDEXD5",56,0)
 ; 
"RTN","ICDEXD5",57,0)
 ;             -1^Error Description
"RTN","ICDEXD5",58,0)
 ; 
"RTN","ICDEXD5",59,0)
 N D0,DCS,DFY,DFYINF,DCSINF,DMC1,D1,FYDT,FYMD,ICDFY,ICDIMP,STR
"RTN","ICDEXD5",60,0)
 S CDT=$P(CDT,".",1) S:CDT'?7N CDT=DT S CDT=$$DTBR^ICDEX(CDT,2)
"RTN","ICDEXD5",61,0)
 I $G(CODE)="" S STR="-1^NO CODE SELECTED",$P(STR,"^",14)=0 G DRGQ
"RTN","ICDEXD5",62,0)
 S CDT=CDT+.001
"RTN","ICDEXD5",63,0)
 S CODE=$G(CODE),CODE=$S(CODE:+CODE,1:$$DRGN^ICDEX(CODE)) ; GET ien
"RTN","ICDEXD5",64,0)
 I CODE<1!'$D(^ICD(CODE)) S STR="-1^NO SUCH ENTRY",$P(STR,"^",14)=0 G DRGQ
"RTN","ICDEXD5",65,0)
 S D0=^ICD(CODE,0)
"RTN","ICDEXD5",66,0)
 ; Get FY in YYY0000 format for the effective date
"RTN","ICDEXD5",67,0)
 S FYDT=$$EFM^ICDEX($$FY^ICDEX(CDT))+.001
"RTN","ICDEXD5",68,0)
 S DFY=$O(^ICD(CODE,"FY",FYDT),-1) S:DFY>0 DFYINF=^(DFY,0) I DFY'>0 D
"RTN","ICDEXD5",69,0)
 . S DFYINF=U_$P(D0,U,2,4)_U_U_$P(D0,U,9)_U_$P(D0,U,12)_U_$P(D0,U,7)_U_$P(D0,U,8)_U_$P(D0,U,11)
"RTN","ICDEXD5",70,0)
 S DCS=$O(^ICD(CODE,66,"B",CDT),-1),D1=$S(DCS'="":$O(^ICD(CODE,66,"B",DCS,0)),1:0) S DCSINF=$S(D1>0:^ICD(CODE,66,D1,0),1:"")
"RTN","ICDEXD5",71,0)
 ; If CSV does not exist, default to info
"RTN","ICDEXD5",72,0)
 ; at .01 level with status = inactive
"RTN","ICDEXD5",73,0)
 I DCSINF="" S DCSINF=U_U_"0"_U_U_$P(D0,U,5,6)
"RTN","ICDEXD5",74,0)
 ; Resolve using "B" cross reference and fiscal year
"RTN","ICDEXD5",75,0)
 ; If ICDFY is not resolved set it to current fiscal year
"RTN","ICDEXD5",76,0)
 S ICDFY=$O(^ICD(CODE,2,"B",CDT+.01),-1),DMC1=""
"RTN","ICDEXD5",77,0)
 S DMC1=$O(^ICD(CODE,2,"B",+$G(ICDFY),DMC1)),DMC1=$P($G(^ICD(CODE,2,+DMC1,0)),U,3)
"RTN","ICDEXD5",78,0)
 S STR=$P(D0,U)_U_$P(DFYINF,U,2,4)_U_$P(DCSINF,U,5,6)_U_U_$P(DFYINF,U,9)_U_$P(DFYINF,U,6,7)
"RTN","ICDEXD5",79,0)
 S STR=STR_U_U_$P(D0,U,12)_U_$P(D0,U,13)_U_$P(DCSINF,U,3)_U_$P(D0,U,15)_U_$P(DCSINF,U)_U_CODE_U_DCS_U_$P(DMC1,U)_U_$P(DFYINF,U,8)_U_$P(DFYINF,U,10)
"RTN","ICDEXD5",80,0)
 ;
"RTN","ICDEXD5",81,0)
DRGQ ; DRG Quit on Error
"RTN","ICDEXD5",82,0)
 Q STR
"RTN","ICDEXD5",83,0)
 Q
"RTN","ICDEXD5",84,0)
DRGDES(IEN,CDT,ARY,LEN) ; Returns DRG Description in Array
"RTN","ICDEXD5",85,0)
 ;
"RTN","ICDEXD5",86,0)
 ; Input: 
"RTN","ICDEXD5",87,0)
 ; 
"RTN","ICDEXD5",88,0)
 ;    IEN     Internal Entry Number of DRG file 80.2
"RTN","ICDEXD5",89,0)
 ;    CDT     Date to screen against (default = TODAY)
"RTN","ICDEXD5",90,0)
 ;   .ARY     Output Array passed by reference
"RTN","ICDEXD5",91,0)
 ;    LEN     Length of each array node
"RTN","ICDEXD5",92,0)
 ;              Missing        Defaults to 79
"RTN","ICDEXD5",93,0)
 ;              Less than 25   Defaults to 25
"RTN","ICDEXD5",94,0)
 ; Output:
"RTN","ICDEXD5",95,0)
 ; 
"RTN","ICDEXD5",96,0)
 ;    $$DRGD  Number of lines in description output array
"RTN","ICDEXD5",97,0)
 ;    
"RTN","ICDEXD5",98,0)
 ;    ARY     Description in array of length specified
"RTN","ICDEXD5",99,0)
 ;
"RTN","ICDEXD5",100,0)
 N ICDI,ICDED,ICDID,ICDD,ICDL,ICDN,ICDT,N
"RTN","ICDEXD5",101,0)
 K ARY S ICDL=$G(LEN) S:+ICDL'>0 ICDL=79 S:ICDL<25 ICDL=25
"RTN","ICDEXD5",102,0)
 S ICDI=+($G(IEN)) S:ICDI'>0 ICDI=$$DRGN^ICDEX(IEN)
"RTN","ICDEXD5",103,0)
 I +($G(IEN))'>0!('$D(^ICD(IEN))) S N="-1^DRG ENTRY NOT FOUND" G DRGDQ
"RTN","ICDEXD5",104,0)
 S ICDD=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX(CDT,2))
"RTN","ICDEXD5",105,0)
 S ICDED=$O(^ICD(+IEN,68,"B",(ICDD+.001)),-1)
"RTN","ICDEXD5",106,0)
 S ICDID=$O(^ICD(+IEN,68,"B",+ICDED," "),-1)
"RTN","ICDEXD5",107,0)
 S ICDN=0 F  S ICDN=$O(^ICD(+IEN,68,+ICDID,ICDN)) Q:+ICDN'>0  D
"RTN","ICDEXD5",108,0)
 . N ICDC S ICDT=$$TM($G(^ICD(+ICDI,68,+ICDID,1,+ICDN,0))) Q:'$L(ICDT)
"RTN","ICDEXD5",109,0)
 . S ICDC=$O(ARY(" "),-1)+1,ARY(ICDC)=ICDT,ARY(0)=ICDC
"RTN","ICDEXD5",110,0)
 D:+($G(ARY(0)))>0 PAR^ICDEX(.ARY,+($G(ICDL)))
"RTN","ICDEXD5",111,0)
 S:+($O(ARY(" "),-1))>0 ARY(0)=+($O(ARY(" "),-1))
"RTN","ICDEXD5",112,0)
 Q $G(ARY(0))
"RTN","ICDEXD5",113,0)
DRGD(CODE,OUTARR,CDT) ; returns CPT description in array
"RTN","ICDEXD5",114,0)
 ;
"RTN","ICDEXD5",115,0)
 ; Input: 
"RTN","ICDEXD5",116,0)
 ; 
"RTN","ICDEXD5",117,0)
 ;    CODE    ICD Code, Internal or External Format (required)
"RTN","ICDEXD5",118,0)
 ;    ARY     Output Array Name for description 
"RTN","ICDEXD5",119,0)
 ;              e.g. "ABC" or "ABC("TEST")" 
"RTN","ICDEXD5",120,0)
 ;              Default = ^TMP("DRGD",$J)
"RTN","ICDEXD5",121,0)
 ;    CDT     Date to screen against (default = TODAY)
"RTN","ICDEXD5",122,0)
 ;              If CDT < 10/1/1978, use 10/1/1978
"RTN","ICDEXD5",123,0)
 ;              If CDT > DT, use DT
"RTN","ICDEXD5",124,0)
 ;              If CDT is year only, use first of the year
"RTN","ICDEXD5",125,0)
 ;              If CDT is year/month only, use first of the month
"RTN","ICDEXD5",126,0)
 ; 
"RTN","ICDEXD5",127,0)
 ; Output:
"RTN","ICDEXD5",128,0)
 ; 
"RTN","ICDEXD5",129,0)
 ;    $$DRGD  Number of lines in description output array
"RTN","ICDEXD5",130,0)
 ;    
"RTN","ICDEXD5",131,0)
 ;    ARY     Description in array
"RTN","ICDEXD5",132,0)
 ;    
"RTN","ICDEXD5",133,0)
 ;              @ARY(1:n) - Description (lines 1-n) (field 68)
"RTN","ICDEXD5",134,0)
 ;              @ARY(n+1) - Blank
"RTN","ICDEXD5",135,0)
 ;              @ARY(n+1) - Message: CODE TEXT MAY BE INACCURATE
"RTN","ICDEXD5",136,0)
 ; 
"RTN","ICDEXD5",137,0)
 ;            or
"RTN","ICDEXD5",138,0)
 ; 
"RTN","ICDEXD5",139,0)
 ;              -1^Error Description
"RTN","ICDEXD5",140,0)
 ; 
"RTN","ICDEXD5",141,0)
 ; ** NOTE - USER MUST INITIALIZE ^TMP("DRGD",$J), IF USED **
"RTN","ICDEXD5",142,0)
 ;
"RTN","ICDEXD5",143,0)
 N ARR,END,I,N,CTV,IEN
"RTN","ICDEXD5",144,0)
 I $G(CODE)="" S N="-1^NO CODE SELECTED" G DRGDQ
"RTN","ICDEXD5",145,0)
 I $G(OUTARR)="" S OUTARR="^TMP(""DRGD"",$J,"
"RTN","ICDEXD5",146,0)
 I OUTARR'["(" S OUTARR=OUTARR_"("
"RTN","ICDEXD5",147,0)
 I OUTARR[")" S OUTARR=$P(OUTARR,")")
"RTN","ICDEXD5",148,0)
 S END=$E(OUTARR,$L(OUTARR)) I END'="("&(END'=",") S OUTARR=OUTARR_","
"RTN","ICDEXD5",149,0)
 K:OUTARR="^TMP(""DRGD"",$J," ^TMP("DRGD",$J)
"RTN","ICDEXD5",150,0)
 S CODE=$G(CODE),IEN=$S(CODE:+CODE,1:$$DRGN^ICDEX(CODE)),I=0,N=0
"RTN","ICDEXD5",151,0)
 I +IEN<1!('$D(^ICD(IEN))) S N="-1^NO SUCH CODE" G DRGDQ
"RTN","ICDEXD5",152,0)
 S CDT=$S($G(CDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX(CDT,2))
"RTN","ICDEXD5",153,0)
 D VLTDR(+IEN,CDT,.CTV) S (N,I)=0 F  S I=$O(CTV(I)) Q:+I=0  D
"RTN","ICDEXD5",154,0)
 . S N=N+1,ARR=OUTARR_N_")",@ARR=$$TM($G(CTV(I)))
"RTN","ICDEXD5",155,0)
 I +N>0 S N=N+1,ARR=OUTARR_N_")",@ARR=" ",N=N+1,ARR=OUTARR_N_")",@ARR=$$MSG^ICDEX(CDT,2)
"RTN","ICDEXD5",156,0)
 I +N'>0 S N="-1^VERSIONED DESCRIPTION NOT FOUND FOR "_CODE
"RTN","ICDEXD5",157,0)
DRGDQ ; DRG Description Quit
"RTN","ICDEXD5",158,0)
 Q N
"RTN","ICDEXD5",159,0)
 Q
"RTN","ICDEXD5",160,0)
GETDATE(IEN) ; Calculate Effective Date from the PTF
"RTN","ICDEXD5",161,0)
 ; 
"RTN","ICDEXD5",162,0)
 ;
"RTN","ICDEXD5",163,0)
 ;  Input: 
"RTN","ICDEXD5",164,0)
 ;  
"RTN","ICDEXD5",165,0)
 ;     IEN        Internal Entry Number of the PTF file #45
"RTN","ICDEXD5",166,0)
 ;     
"RTN","ICDEXD5",167,0)
 ;  Output:   
"RTN","ICDEXD5",168,0)
 ;  
"RTN","ICDEXD5",169,0)
 ;     $$GETDATE  Returns the correct "EFFECTIVE DATE" 
"RTN","ICDEXD5",170,0)
 ;                for a patient to uses retrieving and
"RTN","ICDEXD5",171,0)
 ;                calculating DRG/ICD/CPT data (default
"RTN","ICDEXD5",172,0)
 ;                TODAY)
"RTN","ICDEXD5",173,0)
 ;                
"RTN","ICDEXD5",174,0)
 ;                Derived from:
"RTN","ICDEXD5",175,0)
 ;                  Census Date      ^DGPT         0;13
"RTN","ICDEXD5",176,0)
 ;                  Discharge Date   ^DG(45.86     0;1
"RTN","ICDEXD5",177,0)
 ;                  Surgery Date     ^DGPT(D0,"S"  0;1
"RTN","ICDEXD5",178,0)
 ;                  Movement Date    ^DGPT(D0,"M"  0;10
"RTN","ICDEXD5",179,0)
 ;  
"RTN","ICDEXD5",180,0)
 N ICDI,ICDE,ICDP,ICDT S ICDT=$$NOW^XLFDT
"RTN","ICDEXD5",181,0)
 S ICDI=+($G(IEN)) Q:'$D(^DGPT(ICDI,0)) ICDT
"RTN","ICDEXD5",182,0)
 S ICDP=$P($G(^DGPT(ICDI,0)),U,13) I ICDP'="" D  Q:ICDE'="" ICDE
"RTN","ICDEXD5",183,0)
 . S ICDE=$P($G(^DG(45.86,ICDP,0)),U,1)
"RTN","ICDEXD5",184,0)
 S ICDE=$P($G(^DGPT(ICDI,70)),U,1) Q:ICDE'="" ICDE
"RTN","ICDEXD5",185,0)
 S ICDE=$P($G(^DGPT(ICDI,"S",1,0)),U,1) Q:ICDE'="" ICDE
"RTN","ICDEXD5",186,0)
 S ICDE=$P($G(^DGPT(ICDI,"M",1,0)),U,10)
"RTN","ICDEXD5",187,0)
 S:'$L(ICDE) ICDE=ICDT
"RTN","ICDEXD5",188,0)
 Q ICDE
"RTN","ICDEXD5",189,0)
VLTDR(IEN,CDT,ARY) ; Versioned Description - Long Text
"RTN","ICDEXD5",190,0)
 ;
"RTN","ICDEXD5",191,0)
 ; Input:
"RTN","ICDEXD5",192,0)
 ; 
"RTN","ICDEXD5",193,0)
 ;    IEN      Internal Entry Number file 80.2
"RTN","ICDEXD5",194,0)
 ;    CDT      Effective/Versioning date to be used
"RTN","ICDEXD5",195,0)
 ;    .ARY     Array for output, passed by reference
"RTN","ICDEXD5",196,0)
 ;
"RTN","ICDEXD5",197,0)
 ; Output:
"RTN","ICDEXD5",198,0)
 ; 
"RTN","ICDEXD5",199,0)
 ;    ARY()    Local array containing versioned description
"RTN","ICDEXD5",200,0)
 ;
"RTN","ICDEXD5",201,0)
 N ICD0,ICDC,ICDI,ICDSTD,ICDSTI,ICDVDT,ICDTXT,ICDD,ICDT,ICDE
"RTN","ICDEXD5",202,0)
 S ICDI=+($G(IEN)) Q:+ICDI'>0  Q:'$D(^ICD(+ICDI))
"RTN","ICDEXD5",203,0)
 S ICDVDT=$G(CDT) S:'$L(ICDVDT)!(+ICDVDT'>0) ICDVDT=$$DT^XLFDT Q:$P(ICDVDT,".",1)'?7N
"RTN","ICDEXD5",204,0)
 S ICD0=$G(^ICD(+ICDI,0)),ICDC=$P(ICD0,"^",1) Q:'$L(ICDC)
"RTN","ICDEXD5",205,0)
 S ICDSTD=$O(^ICD("ADS",(ICDC_" "),(ICDVDT+.000001)),-1)
"RTN","ICDEXD5",206,0)
 I +ICDSTD>0 D  Q:+($O(ARY(0)))>0
"RTN","ICDEXD5",207,0)
 . S ICDSTI=$O(^ICD("ADS",(ICDC_" "),ICDSTD,+ICDI," "),-1)
"RTN","ICDEXD5",208,0)
 . S (ICDD,ICDT)=0 F  S ICDD=$O(^ICD(+ICDI,68,ICDSTI,1,ICDD)) Q:+ICDD=0  D
"RTN","ICDEXD5",209,0)
 . . S ICDT=ICDT+1,ARY(ICDT)=$G(^ICD(+ICDI,68,+ICDSTI,1,+ICDD,0)),ARY(0)=ICDT
"RTN","ICDEXD5",210,0)
 S ICDSTD=$O(^ICD(+ICDI,68,"B"," "),-1) I +ICDSTD>0 D  Q:+($O(ARY(0)))>0
"RTN","ICDEXD5",211,0)
 . S ICDSTI=$O(^ICD(+ICDI,68,"B",ICDSTD,0))
"RTN","ICDEXD5",212,0)
 . S (ICDD,ICDT)=0 F  S ICDD=$O(^ICD(+ICDI,68,ICDSTI,1,ICDD)) Q:+ICDD=0  D
"RTN","ICDEXD5",213,0)
 . . S ICDT=ICDT+1,ARY(ICDT)=$G(^ICD(+ICDI,68,+ICDSTI,1,+ICDD,0)),ARY(0)=ICDT
"RTN","ICDEXD5",214,0)
 K ARY S (ICDD,ICDT)=0 F  S ICDD=$O(^ICD(ICDI,1,ICDD)) Q:+ICDD=0  D
"RTN","ICDEXD5",215,0)
 . S ICDT=ICDT+1,ARY(ICDT)=$G(^ICD(ICDI,1,ICDD,0)),ARY(0)=ICDT
"RTN","ICDEXD5",216,0)
 Q
"RTN","ICDEXD5",217,0)
TM(X) ; Trim Spaces
"RTN","ICDEXD5",218,0)
 S X=$G(X) Q:X="" X F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","ICDEXD5",219,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXD5",220,0)
 F  Q:X'["  "  S X=$P(X,"  ",1)_" "_$P(X,"  ",2,229)
"RTN","ICDEXD5",221,0)
 N ICDOP
"RTN","ICDEXD5",222,0)
 Q X
"RTN","ICDEXD5",223,0)
CARD(X) ; Implants/Insertion Cardio Device (EN1^ICDDRG5)
"RTN","ICDEXD5",224,0)
 N SO S X="^" S:$D(ICDOP(" 00.50")) $P(X,"^",2)=1 S:$D(ICDOP(" 00.52"))&($D(ICDOP(" 00.53"))) $P(X,"^",2)=1
"RTN","ICDEXD5",225,0)
 I $D(ICDOP(" 37.70"))!($D(ICDOP(" 37.71")))!($D(ICDOP(" 37.73"))) D  Q X
"RTN","ICDEXD5",226,0)
 . N SO F SO="37.80","37.81","37.82","37.85","37.86","37.87" S:$D(ICDOP((" "_SO))) $P(X,"^",2)=1
"RTN","ICDEXD5",227,0)
 I $D(ICDOP(" 37.72")) D  Q X
"RTN","ICDEXD5",228,0)
 . S:$D(ICDOP(" 37.80"))!($D(ICDOP(" 37.83"))) $P(X,"^",2)=1
"RTN","ICDEXD5",229,0)
 I $D(ICDOP(" 37.74")) D  Q X
"RTN","ICDEXD5",230,0)
 . N SO F SO="37.80","37.81","37.82","37.83","37.85","37.86","37.87" S:$D(ICDOP((" "_SO))) $P(X,"^",2)=1
"RTN","ICDEXD5",231,0)
 I $D(ICDOP(" 37.76")) D  Q X
"RTN","ICDEXD5",232,0)
 . N SO F SO="37.80","37.85","37.86","37.87" S:$D(ICDOP((" "_SO))) $P(X,"^",2)=1
"RTN","ICDEXD5",233,0)
 I $D(ICDOP(" 00.53")) D
"RTN","ICDEXD5",234,0)
 . N SO F SO="37.70","37.71","37.72","37.73","37.74","37.76" S:$D(ICDOP((" "_SO))) $P(X,"^",2)=1
"RTN","ICDEXD5",235,0)
 N SO F SO="00.54","37.95","37.96","37.97","37.98","00.52" S:$D(ICDOP((" "_SO))) $P(X,"^",1)=1
"RTN","ICDEXD5",236,0)
 Q X
"RTN","ICDEXD5",237,0)
SPIN(X) ; Paired Spinal Fusion Codes (EN1^ICDDRG8)
"RTN","ICDEXD5",238,0)
 N SP,ICDA,ICDB S (ICDA,ICDB,X)=0
"RTN","ICDEXD5",239,0)
 F SO="81.02","81.04","81.06","81.32","81.34","81.36" S:$D(ICDOP((" "_SO))) ICDA=1
"RTN","ICDEXD5",240,0)
 F SO="81.03","81.05","81.07","81.08","81.33","81.35","81.37","81.38" S:$D(ICDOP((" "_SO))) ICDB=1
"RTN","ICDEXD5",241,0)
 S:ICDA&(ICDB) X=1
"RTN","ICDEXD5",242,0)
 Q X
"RTN","ICDEXD6")
0^13^B20655480
"RTN","ICDEXD6",1,0)
ICDEXD6 ;SLC/KER - ICD Extractor - DRG APIs (cont) ;12/19/2014
"RTN","ICDEXD6",2,0)
 ;;18.0;DRG Grouper;**67**;Oct 20, 2000;Build 1
"RTN","ICDEXD6",3,0)
 ;               
"RTN","ICDEXD6",4,0)
 ; Global Variables
"RTN","ICDEXD6",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXD6",6,0)
 ;               
"RTN","ICDEXD6",7,0)
 ; External References
"RTN","ICDEXD6",8,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXD6",9,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","ICDEXD6",10,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXD6",11,0)
 ;    ^%DT                ICR  10003
"RTN","ICDEXD6",12,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXD6",13,0)
 ;               
"RTN","ICDEXD6",14,0)
 Q
"RTN","ICDEXD6",15,0)
UPDX(IEN) ; Unacceptable as Principle DX
"RTN","ICDEXD6",16,0)
 ;
"RTN","ICDEXD6",17,0)
 ; Input:
"RTN","ICDEXD6",18,0)
 ;
"RTN","ICDEXD6",19,0)
 ;    IEN   Internal Entry Number for file 80
"RTN","ICDEXD6",20,0)
 ;
"RTN","ICDEXD6",21,0)
 ; Output:
"RTN","ICDEXD6",22,0)
 ;
"RTN","ICDEXD6",23,0)
 ;   $$UPDX  Boolean value only (default)
"RTN","ICDEXD6",24,0)
 ;   
"RTN","ICDEXD6",25,0)
 ;            0 No, Code is Acceptable as Principle DX
"RTN","ICDEXD6",26,0)
 ;            1 Yes, Code is Unacceptable as Principle DX
"RTN","ICDEXD6",27,0)
 ;
"RTN","ICDEXD6",28,0)
 N ICDEXC S ICDEXC=$$EXC^ICDEX(80,+($G(IEN))) Q:+ICDEXC>0 1
"RTN","ICDEXD6",29,0)
 Q +($P($G(^ICD9(+($G(IEN)),1)),"^",3))
"RTN","ICDEXD6",30,0)
POAE(X) ; Present on Admission (POA) Exempt
"RTN","ICDEXD6",31,0)
 ;
"RTN","ICDEXD6",32,0)
 ; Input:
"RTN","ICDEXD6",33,0)
 ;
"RTN","ICDEXD6",34,0)
 ;    IEN   Internal Entry Number for file 80
"RTN","ICDEXD6",35,0)
 ;
"RTN","ICDEXD6",36,0)
 ; Output:
"RTN","ICDEXD6",37,0)
 ;
"RTN","ICDEXD6",38,0)
 ;   $$POAE Boolean value only
"RTN","ICDEXD6",39,0)
 ;   
"RTN","ICDEXD6",40,0)
 ;            0 No, Code is not exempt for POA
"RTN","ICDEXD6",41,0)
 ;            1 Yes, Code is exempt for POA
"RTN","ICDEXD6",42,0)
 ; 
"RTN","ICDEXD6",43,0)
 Q:+($G(X))'>0 0  Q:'$L($G(^ICD9(+($G(IEN)),1))) 0
"RTN","ICDEXD6",44,0)
 Q +($P($G(^ICD9(+($G(IEN)),1)),"^",9))
"RTN","ICDEXD6",45,0)
HAC(X) ; Hospital Acquired Conditions (HACS)
"RTN","ICDEXD6",46,0)
 ;
"RTN","ICDEXD6",47,0)
 ; Input:
"RTN","ICDEXD6",48,0)
 ;
"RTN","ICDEXD6",49,0)
 ;    IEN   Internal Entry Number for file 80
"RTN","ICDEXD6",50,0)
 ;
"RTN","ICDEXD6",51,0)
 ; Output:
"RTN","ICDEXD6",52,0)
 ;
"RTN","ICDEXD6",53,0)
 ;   $$HAC  Boolean value only
"RTN","ICDEXD6",54,0)
 ;   
"RTN","ICDEXD6",55,0)
 ;            0 No, Code is not a Hospital Acquired Condition
"RTN","ICDEXD6",56,0)
 ;            1 Yes, Code is a Hospital Acquired Condition
"RTN","ICDEXD6",57,0)
 ; 
"RTN","ICDEXD6",58,0)
 Q:+($G(X))'>0 0  Q:'$L($G(^ICD9(+($G(IEN)),1))) 0
"RTN","ICDEXD6",59,0)
 I $D(^ICDHAC("C",+($G(IEN)))) Q 1
"RTN","ICDEXD6",60,0)
 Q 0
"RTN","ICDEXD6",61,0)
EFM(X) ; Convert External Date to FM
"RTN","ICDEXD6",62,0)
 ;
"RTN","ICDEXD6",63,0)
 ; Input:
"RTN","ICDEXD6",64,0)
 ;
"RTN","ICDEXD6",65,0)
 ;   X      External Date
"RTN","ICDEXD6",66,0)
 ;
"RTN","ICDEXD6",67,0)
 ; Output:
"RTN","ICDEXD6",68,0)
 ;
"RTN","ICDEXD6",69,0)
 ;   $$EFM  Internal Fileman Date
"RTN","ICDEXD6",70,0)
 ;
"RTN","ICDEXD6",71,0)
 ; Replaces unsupported $$DGY2K^DGPTOD0(X)
"RTN","ICDEXD6",72,0)
 ;
"RTN","ICDEXD6",73,0)
 N %DT,Y D ^%DT K %DT
"RTN","ICDEXD6",74,0)
 Q Y
"RTN","ICDEXD6",75,0)
FY(X) ;Return FY
"RTN","ICDEXD6",76,0)
 ;
"RTN","ICDEXD6",77,0)
 ; Input:
"RTN","ICDEXD6",78,0)
 ;
"RTN","ICDEXD6",79,0)
 ;   X      Internal Fileman Date
"RTN","ICDEXD6",80,0)
 ;
"RTN","ICDEXD6",81,0)
 ; Output:
"RTN","ICDEXD6",82,0)
 ;
"RTN","ICDEXD6",83,0)
 ;   $$FY   FY Year YYYY
"RTN","ICDEXD6",84,0)
 ;
"RTN","ICDEXD6",85,0)
 ; Replaces unsupported $$FY^DGPTOD0(X)
"RTN","ICDEXD6",86,0)
 ; 
"RTN","ICDEXD6",87,0)
 S X=$P($G(X),".",1) Q:$L(X)>7 ""  Q:$E(X,1,5)'?5N ""
"RTN","ICDEXD6",88,0)
 S:$E(X,4,5)>9 X=$E(X,1,3)+1
"RTN","ICDEXD6",89,0)
 Q (17+$E(X))_$E(X,2,3)
"RTN","ICDEXD6",90,0)
DRGN(CODE) ; Return the IEN of DRG
"RTN","ICDEXD6",91,0)
 ;
"RTN","ICDEXD6",92,0)
 ;   Input:  
"RTN","ICDEXD6",93,0)
 ;   
"RTN","ICDEXD6",94,0)
 ;     CODE     DRG code
"RTN","ICDEXD6",95,0)
 ;       
"RTN","ICDEXD6",96,0)
 ;  Output:  
"RTN","ICDEXD6",97,0)
 ;  
"RTN","ICDEXD6",98,0)
 ;     $$DRGN   IEN of DRG code
"RTN","ICDEXD6",99,0)
 ;       
"RTN","ICDEXD6",100,0)
 ;              or 
"RTN","ICDEXD6",101,0)
 ;       
"RTN","ICDEXD6",102,0)
 ;              -1 on error
"RTN","ICDEXD6",103,0)
 ;
"RTN","ICDEXD6",104,0)
 Q:$G(CODE)="" -1
"RTN","ICDEXD6",105,0)
 N COD S COD=+$O(^ICD("B",CODE,0))
"RTN","ICDEXD6",106,0)
 Q $S(COD>0:COD,1:-1)
"RTN","ICDEXD6",107,0)
 Q
"RTN","ICDEXD6",108,0)
DRGC(IEN) ; DRG Code
"RTN","ICDEXD6",109,0)
 ;
"RTN","ICDEXD6",110,0)
 ; Input:
"RTN","ICDEXD6",111,0)
 ; 
"RTN","ICDEXD6",112,0)
 ;    IEN      Internal Entry Number file 80.2
"RTN","ICDEXD6",113,0)
 ;
"RTN","ICDEXD6",114,0)
 ; Output:
"RTN","ICDEXD6",115,0)
 ; 
"RTN","ICDEXD6",116,0)
 ;    $$DRGC   Code (field .01)
"RTN","ICDEXD6",117,0)
 ;
"RTN","ICDEXD6",118,0)
 ; Replaces ICR 370
"RTN","ICDEXD6",119,0)
 ; 
"RTN","ICDEXD6",120,0)
 S IEN=+($G(IEN)) Q:'$D(^ICD(+IEN,0)) ""
"RTN","ICDEXD6",121,0)
 Q $P($G(^ICD(+IEN,0)),"^",1)
"RTN","ICDEXD6",122,0)
DRGW(IEN) ; DRG Weighted Work Unit (WWU)
"RTN","ICDEXD6",123,0)
 ;
"RTN","ICDEXD6",124,0)
 ; Input:
"RTN","ICDEXD6",125,0)
 ; 
"RTN","ICDEXD6",126,0)
 ;    IEN      Internal Entry Number file 80.2
"RTN","ICDEXD6",127,0)
 ;
"RTN","ICDEXD6",128,0)
 ; Output:
"RTN","ICDEXD6",129,0)
 ; 
"RTN","ICDEXD6",130,0)
 ;    $$WT     Weight
"RTN","ICDEXD6",131,0)
 ;
"RTN","ICDEXD6",132,0)
 ; Replaces ICR 48
"RTN","ICDEXD6",133,0)
 ; 
"RTN","ICDEXD6",134,0)
 S IEN=+($G(IEN)) Q:'$D(^ICD(+IEN,0)) ""
"RTN","ICDEXD6",135,0)
 Q $P($G(^ICD(+IEN,0)),"^",2)
"RTN","ICDEXD6",136,0)
EFD(X) ; Get Effective date in range (interactive)
"RTN","ICDEXD6",137,0)
 ;
"RTN","ICDEXD6",138,0)
 ; Prompts for Effective Date for DRG grouper
"RTN","ICDEXD6",139,0)
 ; 
"RTN","ICDEXD6",140,0)
 ; The lower boundary for the date is the ICD-9 
"RTN","ICDEXD6",141,0)
 ; implementation date October 1, 1978.
"RTN","ICDEXD6",142,0)
 ; 
"RTN","ICDEXD6",143,0)
 ; The upper boundary for date is either
"RTN","ICDEXD6",144,0)
 ; 
"RTN","ICDEXD6",145,0)
 ;       3 years from the ICD-10 implementation date or
"RTN","ICDEXD6",146,0)
 ;       3 years from TODAY
"RTN","ICDEXD6",147,0)
 ;       
"RTN","ICDEXD6",148,0)
 ;       Whichever is further into the future
"RTN","ICDEXD6",149,0)
 ;
"RTN","ICDEXD6",150,0)
 ; Input:   
"RTN","ICDEXD6",151,0)
 ; 
"RTN","ICDEXD6",152,0)
 ;   None
"RTN","ICDEXD6",153,0)
 ;
"RTN","ICDEXD6",154,0)
 ; Output:
"RTN","ICDEXD6",155,0)
 ;
"RTN","ICDEXD6",156,0)
 ;   $$EFF  3 piece ^ delimited string
"RTN","ICDEXD6",157,0)
 ;   
"RTN","ICDEXD6",158,0)
 ;          1   Date Fileman format         nnnnnnn
"RTN","ICDEXD6",159,0)
 ;          2   Date External Short Format  mm/dd/yyyy
"RTN","ICDEXD6",160,0)
 ;          3   Date External Long Format   Mmm dd, yyyy
"RTN","ICDEXD6",161,0)
 ;
"RTN","ICDEXD6",162,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICDH,ICDI,ICDIMP,ICDT,Y
"RTN","ICDEXD6",163,0)
 S ICDT=$$DT^XLFDT,ICDH="",ICDI=0
"RTN","ICDEXD6",164,0)
 F  S ICDI=$O(^ICDS(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXD6",165,0)
 . N ICDIMP S ICDIMP=$P($G(^ICDS(ICDI,0)),"^",3)
"RTN","ICDEXD6",166,0)
 . S:ICDIMP>ICDH ICDH=ICDIMP
"RTN","ICDEXD6",167,0)
 S:ICDT>ICDH ICDH=ICDT S ICDH=$$FMADD^XLFDT(ICDH,1095)
"RTN","ICDEXD6",168,0)
 S DIR(0)="DAO^2781001:"_ICDH_":AEX"
"RTN","ICDEXD6",169,0)
 S DIR("B")="TODAY",DIR("A")=" Effective Date:  " I ICDH?7N D 
"RTN","ICDEXD6",170,0)
 . S DIR("A")=" Effective Date ("_$$FMTE^XLFDT(2781001,"5Z")
"RTN","ICDEXD6",171,0)
 . S DIR("A")=DIR("A")_" to "_$$FMTE^XLFDT($G(ICDH),"5Z")_"):  "
"RTN","ICDEXD6",172,0)
 S DIR("PRE")="S:X[""?"" X=""??""",(DIR("?"),DIR("??"))="^D EFFH^ICDEXD"
"RTN","ICDEXD6",173,0)
 D ^DIR Q:$D(DIROUT) "^^"  Q:$D(DIRUT) "^"  Q:$D(DTOUT) ""
"RTN","ICDEXD6",174,0)
 S X=Y S:X?7N X=X_"^"_$$FMTE^XLFDT(X,"5Z")_"^"_$$FMTE^XLFDT(X)
"RTN","ICDEXD6",175,0)
 Q X
"RTN","ICDEXD6",176,0)
EFFH ; Effective Date Help
"RTN","ICDEXD6",177,0)
 I $L($G(ICDH)) D
"RTN","ICDEXD6",178,0)
 . W !,?5,"Enter an effective date from ",$$FMTE^XLFDT(2781001,"5Z")
"RTN","ICDEXD6",179,0)
 . W " to ",$$FMTE^XLFDT($G(ICDH),"5Z")
"RTN","ICDEXD6",180,0)
 . W !,?5,"to be used to select or calculated time sensitive data.",!
"RTN","ICDEXD6",181,0)
 W !,?5,"Examples of Valid Dates:"
"RTN","ICDEXD6",182,0)
 W !,?5,"  JAN 20 1980 or 20 JAN 80 or 1/20/57 or 012080"
"RTN","ICDEXD6",183,0)
 W !,?5,"  T   (for TODAY),  T+1 (for TOMORROW),  T+2,  T+7, etc."
"RTN","ICDEXD6",184,0)
 W !,?5,"  T-1 (for YESTERDAY),  T-3W (for 3 WEEKS AGO), etc."
"RTN","ICDEXD6",185,0)
 W !,?5,"If the year is omitted, the computer uses CURRENT YEAR. "
"RTN","ICDEXD6",186,0)
 W !,?5,"Two digit year assumes no more than 20 years in the future,"
"RTN","ICDEXD6",187,0)
 W !,?5," or 80 years in the past."
"RTN","ICDEXD6",188,0)
 Q
"RTN","ICDEXLK")
0^4^B131568990
"RTN","ICDEXLK",1,0)
ICDEXLK ;SLC/KER - ICD Extractor - Lookup ;12/19/2014
"RTN","ICDEXLK",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXLK",3,0)
 ;               
"RTN","ICDEXLK",4,0)
 ; Global Variables
"RTN","ICDEXLK",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXLK",6,0)
 ;    ^TMP("ICD0")        SACC 2.3.2.5.1
"RTN","ICDEXLK",7,0)
 ;    ^TMP("ICD9")        SACC 2.3.2.5.1
"RTN","ICDEXLK",8,0)
 ;    ^TMP("ICDEXLK")     SACC 2.3.2.5.1
"RTN","ICDEXLK",9,0)
 ;               
"RTN","ICDEXLK",10,0)
 ; External References
"RTN","ICDEXLK",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK",12,0)
 ;               
"RTN","ICDEXLK",13,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICDEXLK",14,0)
 ;     DIC,ICDFMT,ICDSYS,ICDVDT
"RTN","ICDEXLK",15,0)
 ; 
"RTN","ICDEXLK",16,0)
LK ; Lookup
"RTN","ICDEXLK",17,0)
 ;
"RTN","ICDEXLK",18,0)
 ; This is the Special Lookup program for files 80 and 80.1.
"RTN","ICDEXLK",19,0)
 ; Only the ^DIC call honors the special lookup routines. 
"RTN","ICDEXLK",20,0)
 ; Those calls that allow the user to specify the indexes 
"RTN","ICDEXLK",21,0)
 ; (IX^DIC and MIX^DIC1), and the Data Base Server calls 
"RTN","ICDEXLK",22,0)
 ; (FIND^DIC, $$FIND1^DIC, and UPDATE^DIE) all ignore the
"RTN","ICDEXLK",23,0)
 ; Special Lookup Program.  Also, if DIC(0) contains an 
"RTN","ICDEXLK",24,0)
 ; "I" then the Special Lookup program will be ignored.
"RTN","ICDEXLK",25,0)
 ; 
"RTN","ICDEXLK",26,0)
 ; Local Variables Newed or Killed by Calling Application
"RTN","ICDEXLK",27,0)
 ; 
"RTN","ICDEXLK",28,0)
 ;    Versioning Date (Fileman format) (OLD, CSV)
"RTN","ICDEXLK",29,0)
 ;    
"RTN","ICDEXLK",30,0)
 ;      ICDVDT or
"RTN","ICDEXLK",31,0)
 ;      ^TMP("ICDEXLK",$J,"ICDVDT"
"RTN","ICDEXLK",32,0)
 ;    
"RTN","ICDEXLK",33,0)
 ;          If supplied only active codes on that date
"RTN","ICDEXLK",34,0)
 ;          will be included in the selection list.
"RTN","ICDEXLK",35,0)
 ;               
"RTN","ICDEXLK",36,0)
 ;          If not supplied, the date will default to
"RTN","ICDEXLK",37,0)
 ;          TODAY and all codes may be selected, active
"RTN","ICDEXLK",38,0)
 ;          and inactive.
"RTN","ICDEXLK",39,0)
 ;    
"RTN","ICDEXLK",40,0)
 ;    Coding System (from file 80.4) (new)
"RTN","ICDEXLK",41,0)
 ;    
"RTN","ICDEXLK",42,0)
 ;      ICDSYS  or
"RTN","ICDEXLK",43,0)
 ;      ^TMP("ICDEXLK",$J,"ICDSYS"
"RTN","ICDEXLK",44,0)
 ;    
"RTN","ICDEXLK",45,0)
 ;            1    ICD    ICD-9-CM
"RTN","ICDEXLK",46,0)
 ;            2    ICP    ICD-9 Proc
"RTN","ICDEXLK",47,0)
 ;           30    10D    ICD-10-CM
"RTN","ICDEXLK",48,0)
 ;           31    10P    ICD-10-PCS
"RTN","ICDEXLK",49,0)
 ;    
"RTN","ICDEXLK",50,0)
 ;    Display Format (numeric, 1-4) (new)
"RTN","ICDEXLK",51,0)
 ;    
"RTN","ICDEXLK",52,0)
 ;      ICDFMT or
"RTN","ICDEXLK",53,0)
 ;      ^TMP("ICDEXLK",$J,"ICDFMT"
"RTN","ICDEXLK",54,0)
 ;    
"RTN","ICDEXLK",55,0)
 ;         1 = Fileman format, code and short text (default)
"RTN","ICDEXLK",56,0)
 ; 
"RTN","ICDEXLK",57,0)
 ;             250.00    DMII CMP NT ST UNCNTR
"RTN","ICDEXLK",58,0)
 ;    
"RTN","ICDEXLK",59,0)
 ;         2 = Fileman format, code and description
"RTN","ICDEXLK",60,0)
 ;    
"RTN","ICDEXLK",61,0)
 ;             250.00    DIABETES MELLITUS NO MENTION OF
"RTN","ICDEXLK",62,0)
 ;                       COMPLICATION, TYPE II OR UNSPECIFIED TYPE
"RTN","ICDEXLK",63,0)
 ;    
"RTN","ICDEXLK",64,0)
 ;         3 = Lexicon format, short text followed by code
"RTN","ICDEXLK",65,0)
 ;    
"RTN","ICDEXLK",66,0)
 ;             DMII CMP NT ST UNCNTR (250.00)
"RTN","ICDEXLK",67,0)
 ;    
"RTN","ICDEXLK",68,0)
 ;         4 = Lexicon format, description followed by code
"RTN","ICDEXLK",69,0)
 ;    
"RTN","ICDEXLK",70,0)
 ;             DIABETES MELLITUS NO MENTION OF COMPLICATION,
"RTN","ICDEXLK",71,0)
 ;             TYPE II OR UNSPECIFIED TYPE (250.00)
"RTN","ICDEXLK",72,0)
 ;    
"RTN","ICDEXLK",73,0)
 ; Special Lookup
"RTN","ICDEXLK",74,0)
 ;    ^DD(80,0,"DIC")="ICDEXLK"
"RTN","ICDEXLK",75,0)
 ;    ^DD(80.1,0,"DIC")="ICDEXLK"
"RTN","ICDEXLK",76,0)
 ;   
"RTN","ICDEXLK",77,0)
 ; FileMan Variables
"RTN","ICDEXLK",78,0)
 ; 
"RTN","ICDEXLK",79,0)
 ; X          If DIC(0) does not contain an A, then the variable
"RTN","ICDEXLK",80,0)
 ;            X must be defined
"RTN","ICDEXLK",81,0)
 ;            
"RTN","ICDEXLK",82,0)
 ; DIC        Global root or File Number
"RTN","ICDEXLK",83,0)
 ; 
"RTN","ICDEXLK",84,0)
 ;                ^ICD9( or 80
"RTN","ICDEXLK",85,0)
 ;                ^ICD0( or 80.1
"RTN","ICDEXLK",86,0)
 ; 
"RTN","ICDEXLK",87,0)
 ; DIC(0)     (Optional) A string of characters which alter how
"RTN","ICDEXLK",88,0)
 ;            DIC responds. Default value for ICD files "AEM"
"RTN","ICDEXLK",89,0)
 ; 
"RTN","ICDEXLK",90,0)
 ;            Applicable to a versioned lookup
"RTN","ICDEXLK",91,0)
 ;               A   Ask
"RTN","ICDEXLK",92,0)
 ;               E   Echo
"RTN","ICDEXLK",93,0)
 ;               F   Forget lookup value
"RTN","ICDEXLK",94,0)
 ;               I   Ignore lookup program
"RTN","ICDEXLK",95,0)
 ;               O   Find one exact match
"RTN","ICDEXLK",96,0)
 ;               Q   Question Input ??
"RTN","ICDEXLK",97,0)
 ;               S   Suppresses display of .01
"RTN","ICDEXLK",98,0)
 ;               X   EXact match required 
"RTN","ICDEXLK",99,0)
 ;               Z   Expand output Y variable
"RTN","ICDEXLK",100,0)
 ;       
"RTN","ICDEXLK",101,0)
 ;            Not Applicable/Used in a versioned lookup
"RTN","ICDEXLK",102,0)
 ;            
"RTN","ICDEXLK",103,0)
 ;               C, B, K, L, M, N, n, U, T and V
"RTN","ICDEXLK",104,0)
 ;    
"RTN","ICDEXLK",105,0)
 ; DIC("A")   (Optional) A prompt that is displayed prior to the 
"RTN","ICDEXLK",106,0)
 ;            reading of the X input.  
"RTN","ICDEXLK",107,0)
 ;                        
"RTN","ICDEXLK",108,0)
 ; DIC("B")   (Optional) The default answer which is presented to
"RTN","ICDEXLK",109,0)
 ;            the user when the lookup prompt is issued. 
"RTN","ICDEXLK",110,0)
 ;            
"RTN","ICDEXLK",111,0)
 ; DIC("S")   (Optional) DIC("S") Screen M code that sets the
"RTN","ICDEXLK",112,0)
 ;            value of $T.  
"RTN","ICDEXLK",113,0)
 ; 
"RTN","ICDEXLK",114,0)
 ; DIC("W")   (Optional) An M command string displays each entry
"RTN","ICDEXLK",115,0)
 ;            that matches the user's input 
"RTN","ICDEXLK",116,0)
 ;            
"RTN","ICDEXLK",117,0)
 ; DIC("?N",<file>)=n 
"RTN","ICDEXLK",118,0)
 ;            (Optional) The number "n" should be an integer set
"RTN","ICDEXLK",119,0)
 ;            to the number of entries to be displayed
"RTN","ICDEXLK",120,0)
 ;
"RTN","ICDEXLK",121,0)
 ; FileMan Variables KILLed:  DLAYGO and DINUM
"RTN","ICDEXLK",122,0)
 ; 
"RTN","ICDEXLK",123,0)
 ; Output
"RTN","ICDEXLK",124,0)
 ;
"RTN","ICDEXLK",125,0)
 ;    Y  IEN ^ Code           Fileman
"RTN","ICDEXLK",126,0)
 ;    
"RTN","ICDEXLK",127,0)
 ;    If DIC(0) contains "Z"
"RTN","ICDEXLK",128,0)
 ;    
"RTN","ICDEXLK",129,0)
 ;       Y(0)     0 Node               Fileman
"RTN","ICDEXLK",130,0)
 ;       Y(0,0)   Code                 Fileman
"RTN","ICDEXLK",131,0)
 ;       Y(0,1)   $$ICDDX or $$ICDOP   Non-Fileman
"RTN","ICDEXLK",132,0)
 ;       Y(0,2)   Long Description     Non-Fileman
"RTN","ICDEXLK",133,0)
 ;   
"RTN","ICDEXLK",134,0)
 K ^TMP("ICD9",$J),^TMP("ICD0",$J) D DIE^ICDEXLK6
"RTN","ICDEXLK",135,0)
 N DIRUT,DIROUT,FILE,ROOT,SUB,SBI,ICDDICA,ICDDICB,ICDDICN,ICDDICW,ICDDICS,ICDDICST
"RTN","ICDEXLK",136,0)
 N ICDDIC0,ICDOLD0,ICDDIC00,ICDCDT,ICDCSY,ICDISF,ICDOUT,ICDVER,ICDX,ICDXP,KEY,INP,INP2,INP1
"RTN","ICDEXLK",137,0)
 N INPE,ERR,ICDOFND,ICDOSEL,ICDOINP,ICDREDO,ICDOREV,ICDISCD,ICDOUPA,ICDOTIM,ICDOPTR,ICDOVAL
"RTN","ICDEXLK",138,0)
 S (ICDOFND,ICDOSEL,ICDOREV,ICDOUPA,ICDOTIM)=0,ICDXP=$$XT^ICDEXLK6($G(X)),ICDOPTR=+($O(DICR(" "),-1))
"RTN","ICDEXLK",139,0)
 K DLAYGO,DINUM S (ICDOINP,ICDX)=$$XT^ICDEXLK6($S($E($G(X),1)'=" ":$$TM^ICDEXLK6($G(X)),1:$G(X)))
"RTN","ICDEXLK",140,0)
 K X,Y,DTOUT,DUOUT S ICDCSY=0,ROOT=$G(DIC),FILE=$$FILE^ICDEX(ROOT),ICDOVAL=1
"RTN","ICDEXLK",141,0)
 I "^80^80.1^"'[("^"_FILE_"^") S ERR="Invalid File" G ERR
"RTN","ICDEXLK",142,0)
 S ROOT=$$ROOT^ICDEX(FILE)
"RTN","ICDEXLK",143,0)
 I "^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L($G(ROOT)))_"^") S ERR="Invalid Global Root" G ERR
"RTN","ICDEXLK",144,0)
 ; Exact code entered, no subordinates
"RTN","ICDEXLK",145,0)
 I $L($G(ICDXP)),$G(DIC(0))'["A" D
"RTN","ICDEXLK",146,0)
 . N ICDTMP F ICDTMP=ICDXP,($TR(ICDXP,"""","")_".") D  Q:$G(ICDX)["`"
"RTN","ICDEXLK",147,0)
 . . N ICD0,ICD1,ICD2,ICDF S ICD0=$TR(ICDTMP,"""","")
"RTN","ICDEXLK",148,0)
 . . S ICD1=$O(@(ROOT_"""BA"","""_ICD0_""",0)"))
"RTN","ICDEXLK",149,0)
 . . S ICD2=$O(@(ROOT_"""BA"","""_ICD0_""","" "")"),-1)
"RTN","ICDEXLK",150,0)
 . . I ICD1>0,ICD1=ICD2 S (X,ICDX)="`"_+ICD1 Q
"RTN","ICDEXLK",151,0)
 . . S ICD1=$O(@(ROOT_"""BA"","""_ICD0_" "",0)"))
"RTN","ICDEXLK",152,0)
 . . S ICD2=$O(@(ROOT_"""BA"","""_ICD0_" "","" "")"),-1)
"RTN","ICDEXLK",153,0)
 . . I ICD1>0,ICD1=ICD2 S (X,ICDX)="`"_+ICD1
"RTN","ICDEXLK",154,0)
 I $G(ICDX)[";" D
"RTN","ICDEXLK",155,0)
 . N ICD1,ICD2,ICD3 S ICD1=$P(ICDX,";",1),ICD2=("^"_$P(ICDX,";",2))
"RTN","ICDEXLK",156,0)
 . Q:ICD2'=DIC  Q:ICD1'?1N.N  S ICD3=$P($G(@(ROOT_+ICD1_",0)")),"^",1)
"RTN","ICDEXLK",157,0)
 . I $D(@(ROOT_+ICD1_",0)")) S (X,ICDX)="`"_+ICD1
"RTN","ICDEXLK",158,0)
 ;   System
"RTN","ICDEXLK",159,0)
 S ICDCSY=0
"RTN","ICDEXLK",160,0)
 S:$L($G(ICDSYS)) ICDCSY=$G(ICDSYS)
"RTN","ICDEXLK",161,0)
 S:'$L($G(ICDSYS))&($L($G(^TMP("ICDEXLK",$J,"ICDSYS")))) ICDCSY=$G(^TMP("ICDEXLK",$J,"ICDSYS"))
"RTN","ICDEXLK",162,0)
 S ICDCSY=$$SYS^ICDEX($G(ICDCSY))
"RTN","ICDEXLK",163,0)
 ;   Date
"RTN","ICDEXLK",164,0)
 S:$L($G(ICDVDT)) ICDCDT=$G(ICDVDT)
"RTN","ICDEXLK",165,0)
 S:'$L($G(ICDVDT))&($L($G(^TMP("ICDEXLK",$J,"ICDVDT")))) ICDCDT=$G(^TMP("ICDEXLK",$J,"ICDVDT"))
"RTN","ICDEXLK",166,0)
 ;   Format
"RTN","ICDEXLK",167,0)
 S ICDOUT=0 S:$L($G(ICDFMT)) ICDOUT=$G(ICDFMT)
"RTN","ICDEXLK",168,0)
 I $D(DDS) S:$D(ICDFMT) ICDFMT=1 S ICDOUT=1
"RTN","ICDEXLK",169,0)
 S:'$L($G(ICDFMT))&($L($G(^TMP("ICDEXLK",$J,"ICDFMT")))) ICDOUT=$G(^TMP("ICDEXLK",$J,"ICDFMT"))
"RTN","ICDEXLK",170,0)
 S:+ICDOUT'>0 ICDOUT=1 S:+ICDOUT>4 ICDOUT=1
"RTN","ICDEXLK",171,0)
 S:$L($G(ICDFMT))!($L($G(^TMP("ICDEXLK",$J,"ICDFMT")))) ICDISF=1
"RTN","ICDEXLK",172,0)
 ;   Versioned Lookup
"RTN","ICDEXLK",173,0)
 S ICDVER=$S($G(ICDCDT)?7N:1,1:0)  S:$G(ICDCDT)'?7N ICDCDT=$$DT^XLFDT
"RTN","ICDEXLK",174,0)
 ;   Enforce Business Rule for Date
"RTN","ICDEXLK",175,0)
 I ICDVER'>0 S:$D(^ICDS(+ICDCSY,0)) ICDCDT=$$DTBR^ICDEX(ICDCDT,,+($G(ICDCSY)))
"RTN","ICDEXLK",176,0)
 ;   Space Bar Return (passed)
"RTN","ICDEXLK",177,0)
 I $D(ICDX),$G(ICDX)=" ",DIC(0)'["A" D SBR^ICDEXLK2 S:+($G(Y))>0&(X'=ICDX) ICDX=X G:+($G(Y))>0 QUIT K Y
"RTN","ICDEXLK",178,0)
 ;   TMP global
"RTN","ICDEXLK",179,0)
 S SUB=$TR(ROOT,"^(","") K ^TMP(SUB,$J)
"RTN","ICDEXLK",180,0)
 ;   Save DIC
"RTN","ICDEXLK",181,0)
 S ICDDICA=$G(DIC("A")),ICDDICB=$G(DIC("B")),ICDDICW=$G(DIC("W"))
"RTN","ICDEXLK",182,0)
 S ICDDICS="",ICDDICST=$$DICS^ICDEXLK6($G(DIC("S"))) S:$L($G(ICDDICST)) ICDDICS=ICDDICST
"RTN","ICDEXLK",183,0)
 S ICDDICN=$G(DIC("?N",FILE)) S:+ICDDICN'>0 ICDDICN=5
"RTN","ICDEXLK",184,0)
 S ICDDIC00=$G(DIC(0)),(ICDDIC0,DIC(0))=$$DIC0^ICDEXLK6($G(DIC(0)))
"RTN","ICDEXLK",185,0)
 K:+($G(ICDISF))>0 DIC("W") K:$D(DDS) DIC("W")
"RTN","ICDEXLK",186,0)
 I $L($G(ICDX))'>4,ICDX'["." D
"RTN","ICDEXLK",187,0)
 . S:ICDX?3N&($D(@(ROOT_"""BA"","""_ICDX_". "")"))) ICDX=ICDX_".",ICDXP=ICDXP_"."
"RTN","ICDEXLK",188,0)
 . S:$E(ICDX,1)="E"&($E(ICDX,2,4)?3N)&($D(@(ROOT_"""BA"","""_ICDX_". "")"))) ICDX=ICDX_".",ICDXP=ICDXP_"."
"RTN","ICDEXLK",189,0)
 . S:$E(ICDX,1)?1U&($E(ICDX,2,3)?2N)&($D(@(ROOT_"""BA"","""_ICDX_". "")"))) ICDX=ICDX_".",ICDXP=ICDXP_"."
"RTN","ICDEXLK",190,0)
 I ICDX="?",$G(DIC(0))'["A" D  I $L($G(DIE)),$L($G(DIC)),$G(DIE)'=$G(DIC) S Y=-1 W:'$D(DDS) ! Q
"RTN","ICDEXLK",191,0)
 . D INPH^ICDEXLK2(FILE) S ICDX="" S:$G(DIC(0))'["A" DIC(0)=DIC(0)_"A"
"RTN","ICDEXLK",192,0)
 I ICDX="??",$G(DIC(0))'["A" D  I $L($G(DIE)),$L($G(DIC)),$G(DIE)'=$G(DIC) S Y=-1 W:'$D(DDS) ! Q
"RTN","ICDEXLK",193,0)
 . D INPH2^ICDEXLK2(FILE) S ICDX="" S:$G(DIC(0))'["A" DIC(0)=DIC(0)_"A"
"RTN","ICDEXLK",194,0)
LKR ; Lookup Recursive
"RTN","ICDEXLK",195,0)
 S:$G(DIC(0))'["A"&($L($G(ICDX)))&('$L($G(X))) X=ICDX
"RTN","ICDEXLK",196,0)
 S (INPE,ICDOFND)=0,ICDOVAL=1 S:'$L($G(DIC(0))) DIC(0)="AEM" S ICDREDO=""
"RTN","ICDEXLK",197,0)
 S:$L($G(DIC(0))) DIC(0)=$TR(DIC(0),"CL","")
"RTN","ICDEXLK",198,0)
 ;   User Input
"RTN","ICDEXLK",199,0)
 I +($G(ICDOREV))>0 D
"RTN","ICDEXLK",200,0)
 . S (ICDOFND,ICDOSEL,ICDOREV)=0 K X S ICDX=""
"RTN","ICDEXLK",201,0)
 S (ICDOUPA,ICDOTIM)=0 I $G(DIC(0))["A" D
"RTN","ICDEXLK",202,0)
 . N ICDT S ICDOVAL=1,X=$$INP^ICDEXLK2(FILE,$G(ICDVER),$G(ICDCDT)) S ICDT=$$XT^ICDEXLK6(X)
"RTN","ICDEXLK",203,0)
 . S:ICDT'=X ICDOVAL=0,X=ICDT
"RTN","ICDEXLK",204,0)
 I '$L($G(X)),$G(DIC(0))'["T",+($G(ICDOUPA))'>1,+($G(ICDOVAL))>0 S X="",ICDOREV=1 G ERR
"RTN","ICDEXLK",205,0)
 I '$L($G(X)),+($G(ICDOVAL))'>0,+($G(ICDOUPA))'>0,+($G(ICDOTIM))'>0 D  G LKR
"RTN","ICDEXLK",206,0)
 . W:ICDOUPA'>0&(ICDOTIM'>0)&('$D(DDS)) " ??"
"RTN","ICDEXLK",207,0)
 S:ICDOTIM>0 DTOUT=1 G:ICDOTIM>0 ERR S:ICDOUPA>0 DUOUT=1 G:ICDOUPA>0 ERR
"RTN","ICDEXLK",208,0)
 I ($G(DIC(0))["A"),('$L($G(X))!(X="^")),$G(DIC(0))["T" S X="" K Y G LKR
"RTN","ICDEXLK",209,0)
 I $G(DIC(0))'["A"&($L($G(ICDX))) S X=$G(ICDX)
"RTN","ICDEXLK",210,0)
 I $G(X)["^" S DUOUT="" G ERR
"RTN","ICDEXLK",211,0)
 I '$L($G(X)) G ERR
"RTN","ICDEXLK",212,0)
 S X=$$TM^ICDEXLK6(X),INP=X,INP1=$E(INP,1),INP2=$E(INP,2,245) S:INP1="`"&(INP2?1N.N) INPE=1
"RTN","ICDEXLK",213,0)
 ;   Search #1 - Forced IEN
"RTN","ICDEXLK",214,0)
 K Y S (ICDOUPA,ICDOTIM)=0 I INPE>0 D
"RTN","ICDEXLK",215,0)
 . D IEN^ICDEXLK5 S ICDOUPA=+($G(ICDOUPA)),ICDOTIM=+($G(ICDOTIM))
"RTN","ICDEXLK",216,0)
 . S:+($G(Y))>0&($L($P($G(Y),"^",2))>0) (ICDX,X)=$P($G(Y),"^",2)
"RTN","ICDEXLK",217,0)
 . I '$L($G(X)),+($G(Y))<0,$G(DIC(0))'["A" D  Q
"RTN","ICDEXLK",218,0)
 . . S (X,ICDX,ICDXP,INP,INP1,INP2)="",Y="-1^No Selection Made"
"RTN","ICDEXLK",219,0)
 . . S:$L($G(DICR("1"))) DICR("1")=""
"RTN","ICDEXLK",220,0)
 . I +($G(ICDOFND))'>0,$G(DIC(0))["Q" D
"RTN","ICDEXLK",221,0)
 . . W:(ICDOPTR'>0)&(ICDOUPA'>0)&(ICDOTIM'>0)&('$D(DDS))&(+($G(ICDOREV))'>0) " ??"
"RTN","ICDEXLK",222,0)
 . . W:(ICDOPTR>0)&('$D(DDS)) !
"RTN","ICDEXLK",223,0)
 . I +($G(ICDOFND))'>0 S (ICDX,X)="",Y=-1 S:$D(ICDOINP) ICDOINP=""
"RTN","ICDEXLK",224,0)
 ;     Abort Search #1
"RTN","ICDEXLK",225,0)
 I INPE>0,'$L($G(X)),+($G(Y))<0,$G(DIC(0))'["A" G QUIT
"RTN","ICDEXLK",226,0)
 I INPE>0,$L($G(X)),+($G(Y))>0,$P($G(Y),"^",2)=$G(X) G QUIT
"RTN","ICDEXLK",227,0)
 I INPE>0 G:($L($G(X))&(+($G(Y))>0))!($G(ICDOUPA)=2) QUIT G:+($G(ICDOTIM))>0 QUIT
"RTN","ICDEXLK",228,0)
 I INPE>0 G:(+($G(ICDOFND))'>0!($G(ICDOUPA)=1))&($G(DIC(0))["A") LKR
"RTN","ICDEXLK",229,0)
 I INPE>0 G:+($G(ICDOFND))>0&($G(ICDOSEL)'>0)&($G(ICDOREV)>0)&($G(DIC(0))["A") LKR
"RTN","ICDEXLK",230,0)
 I $D(Y) S:+Y<0 X=INP G QUIT
"RTN","ICDEXLK",231,0)
 ;   Search #2 - Lookup X
"RTN","ICDEXLK",232,0)
 S (ICDOUPA,ICDOTIM)=0 N LOUD S LOUD="" S ICDX=X I +($G(ICDOFND))'>0 D
"RTN","ICDEXLK",233,0)
 . ;     Text Search
"RTN","ICDEXLK",234,0)
 . S:$L($G(ICDX))&($L($G(ICDX))>1) ICDOFND=$$LK^ICDEXLK3($G(X),FILE,ICDCDT,ICDCSY,ICDVER,ICDOUT)
"RTN","ICDEXLK",235,0)
 . ;     Code Search
"RTN","ICDEXLK",236,0)
 . S:$L($G(ICDX))&($L($G(ICDX))'>1) ICDOFND=$$CD^ICDEXLK3($G(X),FILE,ICDCDT,ICDCSY,ICDVER,ICDOUT)
"RTN","ICDEXLK",237,0)
 . S ICDOFND=+($G(ICDOFND)) S:$L($G(ICDX)) X=$G(ICDX)
"RTN","ICDEXLK",238,0)
 ;     Abort Search #2
"RTN","ICDEXLK",239,0)
 I +($G(ICDOFND))'>0,$G(DIC(0))["Q" D
"RTN","ICDEXLK",240,0)
 . W:(ICDOPTR'>0)&('$D(DDS))&(+($G(ICDOREV))'>0) " ??"
"RTN","ICDEXLK",241,0)
 I +($G(ICDOFND))'>0,$L($G(INP)),$E(INP,1)'=" ",$G(DIC(0))["A" K ICDX,X,Y,INP,INP1,INP2 G LKR
"RTN","ICDEXLK",242,0)
 S:+($G(ICDOFND))'>0 X=$G(INP)
"RTN","ICDEXLK",243,0)
 ;     Nothing Found
"RTN","ICDEXLK",244,0)
 I +($G(ICDOFND))'>0,$G(DIC(0))'["T" D  G QUIT
"RTN","ICDEXLK",245,0)
 . W:$G(DIC(0))["E"&(ICDOPTR'>0)&('$D(DDS)) !,"  No matches found"
"RTN","ICDEXLK",246,0)
 . S X=$S($L($G(INP)):INP,1:$G(X)),Y="-1^No matches found"
"RTN","ICDEXLK",247,0)
 I +($G(ICDOFND))'>0,$G(DIC(0))["T" K Y G LKR
"RTN","ICDEXLK",248,0)
 ;     Results found
"RTN","ICDEXLK",249,0)
 S (ICDOUPA,ICDOTIM)=0 D ASK^ICDEXLK2 G:$D(DTOUT) ERR
"RTN","ICDEXLK",250,0)
 S:ICDOTIM>0 DTOUT=1 G:ICDOTIM>0 ERR
"RTN","ICDEXLK",251,0)
 I +($G(ICDOUPA))>1 S DUOUT=1 W:'$D(DDS) ! G QUIT
"RTN","ICDEXLK",252,0)
 G:+($G(ICDOUPA))=1&(DIC(0)'["A") QUIT
"RTN","ICDEXLK",253,0)
 G:+($G(ICDOUPA))=1&(DIC(0)["A") LKR
"RTN","ICDEXLK",254,0)
 I +($G(ICDOFND))>0,+($G(ICDOSEL))'>0,+($G(ICDOREV))>0,+($G(ICDOPTR))>0 D  G QUIT
"RTN","ICDEXLK",255,0)
 . S X=ICDX S:$G(DIC(0))'["A" (ICDX,INP1,INP2,ICDOINP,X)="",Y="-1^No selection made"
"RTN","ICDEXLK",256,0)
 I +($G(ICDOFND))>0,+($G(ICDOSEL))'>0,+($G(ICDOREV))>0,+($G(ICDOPTR))'>0 D  G:$G(ICDOUPA)>1!($G(DIC(0))'["A") QUIT G:DIC(0)["A" LKR
"RTN","ICDEXLK",257,0)
 . S (ICDX,INP1,INP2,ICDOINP,X)="",Y="-1^No selection made"
"RTN","ICDEXLK",258,0)
 G:+($G(Y))'>0 ERR D QUIT
"RTN","ICDEXLK",259,0)
 Q
"RTN","ICDEXLK",260,0)
LKQ ;   Quit
"RTN","ICDEXLK",261,0)
 Q
"RTN","ICDEXLK",262,0)
ERR ;   Quit On Error/Time Out
"RTN","ICDEXLK",263,0)
 N ICDX,ICDY S ICDY=$G(Y),ICDX=$G(X) K X,Y S Y=-1
"RTN","ICDEXLK",264,0)
 S:$L($P($G(ICDY),"^",2)) Y=Y_"^"_$P($G(ICDY),"^",2)
"RTN","ICDEXLK",265,0)
 I $G(ICDOTIM)>0,$G(DIC(0))["E",'$D(DDS) W !!,?2,"Try again later" K ERR
"RTN","ICDEXLK",266,0)
 I $G(ICDOUPA)>0,$G(DIC(0))["E" K ERR
"RTN","ICDEXLK",267,0)
 I $G(ICDOUPA)>0,+($G(ICDOFND)>0),+($G(ICDOSEL)'>0),$G(DIC(0))["E" K ERR
"RTN","ICDEXLK",268,0)
 I $L($G(ERR)),$G(DIC(0))["E",'$D(DDS) W !!,?2,$G(ERR)
"RTN","ICDEXLK",269,0)
 S:$E(ICDY,1,2)="-1"&($L($P($G(ICDY),"^",2))) Y=ICDY S X=ICDX
"RTN","ICDEXLK",270,0)
 I $E(Y,1,2)="-1",+($G(ICDOFND)>0),+($G(ICDOSEL)'>0) S Y="-1^No Selection Made"
"RTN","ICDEXLK",271,0)
 D QUIT
"RTN","ICDEXLK",272,0)
 Q
"RTN","ICDEXLK",273,0)
QUIT ;   Quit without Error
"RTN","ICDEXLK",274,0)
 K DUOUT,DTOUT S:ICDOUPA=1 DUOUT=1,X="^",Y="-1^Search aborted (up-arrow detected)"
"RTN","ICDEXLK",275,0)
 S:ICDOUPA=2 DUOUT=1,X="^^",Y="-1^Search aborted (double up-arrow detected)"
"RTN","ICDEXLK",276,0)
 S:ICDOTIM>0 DTOUT=1,X="",Y="-1^Search aborted (timed out)" Q:$D(DUOUT)!($D(DTOUT))
"RTN","ICDEXLK",277,0)
 I $G(ICDOFND)>0,$G(ICDOREV)>0,$G(ICDOSEL)'>0 S X="",Y="-1^No Selection Made" Q
"RTN","ICDEXLK",278,0)
 I '$L(($G(ICDX)_$G(X))),+Y<0,'$L($P($G(Y),"^",2)),$G(DIC(0))'["A" S Y="-1^No user input" Q
"RTN","ICDEXLK",279,0)
 D:+Y>0 Y^ICDEXLK2($G(ROOT),+Y,$G(ICDCDT))
"RTN","ICDEXLK",280,0)
 I $P($G(X),"`",2)=$P($G(Y),"^",1),$L($P($G(Y),"^",2)) S (ICDX,X)=$P($G(Y),"^",2)
"RTN","ICDEXLK",281,0)
 I +($G(Y))>0,X=$P($G(Y),"^",1),$L($P($G(Y),"^",2)) S (ICDX,X)=$P($G(Y),"^",2)
"RTN","ICDEXLK",282,0)
 I X=" ",$P($G(Y),"^",1)>0,$L($P($G(Y),"^",2)),$D(@(ROOT_+($P($G(Y),"^",1))_",0)")) S X=$P($G(Y),"^",2)
"RTN","ICDEXLK",283,0)
 D DICU^ICDEXLK6 I $D(DDS) S:$L($G(ICDOINP))&(+Y'>0) X=$G(ICDOINP)
"RTN","ICDEXLK",284,0)
 I ICDOTIM'>0,$G(DIC(0))["A",$L($G(INP)),+($G(Y))>0,$L($P($G(Y),"^",2)) S (ICDX,X)=INP
"RTN","ICDEXLK",285,0)
 S:$L($G(ICDX)) X=$G(ICDX) S X=$G(X) D RED
"RTN","ICDEXLK",286,0)
 Q
"RTN","ICDEXLK",287,0)
RED ;   Re-Display
"RTN","ICDEXLK",288,0)
 Q:+($G(Y))'>0  Q:'$L($P($G(Y),"^",2))  Q:$G(FILE)'>0  Q:$D(DDS)  Q:$G(DIC(0))'["E"
"RTN","ICDEXLK",289,0)
 Q:ICDOPTR>1  N CODE,EXP,CC,STA S CODE=$P(Y,"^",2) S CODE=CODE_$J(" ",(10-$L($G(CODE))))
"RTN","ICDEXLK",290,0)
 S CC="" S:FILE=80 CC=$$VCC^ICDEX(+Y,$G(ICDCDT))
"RTN","ICDEXLK",291,0)
 S CC=$S(CC="1":" (CC)",CC="2":" (Major CC)",1:"")
"RTN","ICDEXLK",292,0)
 S STA=$O(@(ROOT_+Y_",66,""B"","_(+($G(ICDCDT))+.000001)_")"),-1)
"RTN","ICDEXLK",293,0)
 S STA=$O(@(ROOT_+Y_",66,""B"","_+STA_","" "")"),-1)
"RTN","ICDEXLK",294,0)
 S STA=$P($G(@(ROOT_+Y_",66,"_+STA_",0)")),"^",2)
"RTN","ICDEXLK",295,0)
 S STA=$S($G(STA)?1N&(+$G(STA)'>0):" (Inactive)",$G(STA)'?1N&(+$G(STA)'>0):" (Pending)",1:"")
"RTN","ICDEXLK",296,0)
 S:$G(ICDFMT)=2!($G(ICDFMT)=4) EXP=$$VLT^ICDEX(FILE,+Y,$G(ICDCDT))
"RTN","ICDEXLK",297,0)
 S:$G(ICDFMT)=1!($G(ICDFMT)=3)!($G(ICDFMT)="") EXP=$$VST^ICDEX(FILE,+Y,$G(ICDCDT))
"RTN","ICDEXLK",298,0)
 W:$L($G(CODE))&($L($G(EXP)))&($D(DPP(1))) !,?5 W:$L($G(CODE))&($L($G(EXP))) "   ",$G(CODE),$G(EXP),$G(CC),$G(STA)
"RTN","ICDEXLK",299,0)
 Q
"RTN","ICDEXLK",300,0)
CLR ; Clear Environment
"RTN","ICDEXLK",301,0)
 K DDS,DICR N ICDTEST,DPP,DR
"RTN","ICDEXLK",302,0)
 Q
"RTN","ICDEXLK2")
0^5^B167936583
"RTN","ICDEXLK2",1,0)
ICDEXLK2 ;SLC/KER - ICD Extractor - Lookup, SBR/Ask/One/Mul ;12/19/2014
"RTN","ICDEXLK2",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXLK2",3,0)
 ;               
"RTN","ICDEXLK2",4,0)
 ; Global Variables
"RTN","ICDEXLK2",5,0)
 ;    ^TMP(SUB,$J         SACC 2.3.2.5.1
"RTN","ICDEXLK2",6,0)
 ;               
"RTN","ICDEXLK2",7,0)
 ; External References
"RTN","ICDEXLK2",8,0)
 ;    CLRMSG^DDS          ICR   5846
"RTN","ICDEXLK2",9,0)
 ;    HLP^DDSMSG          ICR   5847
"RTN","ICDEXLK2",10,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXLK2",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK2",12,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","ICDEXLK2",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK2",14,0)
 ;               
"RTN","ICDEXLK2",15,0)
 ; Local Variables NEWed or KILLed Elsewhere
"RTN","ICDEXLK2",16,0)
 ;     DDS,DIC,DICR,ICDCDT,ICDDIC0,ICDDICA,
"RTN","ICDEXLK2",17,0)
 ;     ICDDICB,ICDDICN,ICDFMT,ICDISF,ICDOFND,
"RTN","ICDEXLK2",18,0)
 ;     ICDOINP,ICDOREV,ICDOSEL,ICDOTIM,ICDOUPA
"RTN","ICDEXLK2",19,0)
 ;     ICDOUT,ICDSYS,ICDVER,ICDX,INP1,INP2
"RTN","ICDEXLK2",20,0)
 ;     
"RTN","ICDEXLK2",21,0)
 Q
"RTN","ICDEXLK2",22,0)
ASK ; Ask for Selection
"RTN","ICDEXLK2",23,0)
 K X,Y N ANS S ICDOFND=+($G(ICDOFND)) Q:+ICDOFND'>0
"RTN","ICDEXLK2",24,0)
 I ICDOFND=1,DIC(0)'["E" D  Q
"RTN","ICDEXLK2",25,0)
 . K X,Y D X(1,SUB) S (ICDOFND,ICDOSEL,ICDOREV)=1
"RTN","ICDEXLK2",26,0)
 . D Y($G(ROOT),+($G(^TMP(SUB,$J,"SEL",1))),$G(ICDCDT))
"RTN","ICDEXLK2",27,0)
 . I +($G(Y))'>0,$L($G(INP)) S X=$G(INP) Q
"RTN","ICDEXLK2",28,0)
 . I +($G(Y))>0 D:$G(DIC(0))'["F" SAV^ICDEXLK6(+($G(Y)),ROOT)
"RTN","ICDEXLK2",29,0)
 I ICDOFND>1,DIC(0)'["E" D  Q
"RTN","ICDEXLK2",30,0)
 . K Y S Y="-1^Selection not made" S ICDOSEL=0
"RTN","ICDEXLK2",31,0)
 S:+ICDOFND=1 ANS=$$ONE S:+ICDOFND>1 ANS=$$MUL S ICDOSEL=0
"RTN","ICDEXLK2",32,0)
 I ANS>0 D
"RTN","ICDEXLK2",33,0)
 . D X(+ANS,SUB) S ICDOSEL=1
"RTN","ICDEXLK2",34,0)
 . D Y($G(ROOT),+($G(^TMP(SUB,$J,"SEL",+ANS))),$G(ICDCDT))
"RTN","ICDEXLK2",35,0)
 . I +($G(Y))'>0,$L($G(INP)) S X=$G(INP) Q
"RTN","ICDEXLK2",36,0)
 . I +($G(Y))>0 D:$G(DIC(0))'["F" SAV^ICDEXLK6(+($G(Y)),ROOT)
"RTN","ICDEXLK2",37,0)
 I ANS'>0 K INP,X,Y,^TMP(SUB,$J)
"RTN","ICDEXLK2",38,0)
 Q
"RTN","ICDEXLK2",39,0)
SBR ;   Space-Bar Return DIC(0) not contain "A"
"RTN","ICDEXLK2",40,0)
 N SBI,SUB,OUT,ANS,SBS K Y S Y=-1 Q:'$L($G(ROOT))  Q:ROOT="^"  Q:'$L($G(FILE))
"RTN","ICDEXLK2",41,0)
 S SBI=$$RET^ICDEXLK6($G(FILE)),SUB=$TR($G(ROOT),"^(","") K:$L(SUB) ^TMP(SUB,$J) Q:+SBI'>0
"RTN","ICDEXLK2",42,0)
 S SBS=$P($G(@(ROOT_+SBI_",1)")),"^",1) Q:+SBS'>0  Q:+SBI>0&(+SBS>0)&(+($G(ICDSYS))>0)&(+($G(ICDSYS))'=+SBS)
"RTN","ICDEXLK2",43,0)
 D FND^ICDEXLK5($G(ROOT),+SBI,$G(ICDCDT),$G(ICDSYS),$G(ICDVER),0,$G(ICDOUT))
"RTN","ICDEXLK2",44,0)
 D SEL^ICDEXLK5(ROOT,0) Q:'$D(^TMP(SUB,$J,"SEL",1))  S ANS=$$ONE I ANS>0 D
"RTN","ICDEXLK2",45,0)
 . D X(1,SUB) S (ICDOFND,ICDOSEL,ICDOREV)=1
"RTN","ICDEXLK2",46,0)
 . D Y($G(ROOT),+($G(^TMP(SUB,$J,"SEL",1))),$G(ICDCDT))
"RTN","ICDEXLK2",47,0)
 . I +($G(Y))'>0,$L($G(INP)) S X=$G(INP) Q
"RTN","ICDEXLK2",48,0)
 . I +($G(Y))>0 D:$G(DIC(0))'["F" SAV^ICDEXLK6(+($G(Y)),ROOT)
"RTN","ICDEXLK2",49,0)
 S:+Y>0&($L($P(Y,"^",2))) X=$P(Y,"^",2)
"RTN","ICDEXLK2",50,0)
 I ANS'>0 K INP,X,Y,^TMP(SUB,$J)
"RTN","ICDEXLK2",51,0)
 Q
"RTN","ICDEXLK2",52,0)
ONE(X) ;   One Entry Found
"RTN","ICDEXLK2",53,0)
 S:'$D(DDS) X=$$ONERS S:$D(DDS) X=$$ONESM S ICDOREV=1
"RTN","ICDEXLK2",54,0)
 Q X
"RTN","ICDEXLK2",55,0)
ONERS(X) ;     One Entry Found           Roll and Scroll
"RTN","ICDEXLK2",56,0)
 N DIROUT,DIRUT,DIR,IEN,LN,LN2,ICDI,ICDPR,TEXT,TXT,TX,CT,Y S ICDOREV=1
"RTN","ICDEXLK2",57,0)
 S TEXT=$G(^TMP(SUB,$J,"SEL",1)) Q:$G(DIC(0))'["E" 1
"RTN","ICDEXLK2",58,0)
 S IEN=+TEXT,TEXT=$P(TEXT,U,2),TXT(1)=TEXT
"RTN","ICDEXLK2",59,0)
 I $G(ICDFMT)=1!($G(ICDFMT)=2) D
"RTN","ICDEXLK2",60,0)
 . K TX S TXT(1)=TEXT D PAR^ICDEX(.TXT,64) K TX2 F ICDI=2:1:8 D
"RTN","ICDEXLK2",61,0)
 . . S:$L($G(TXT(ICDI))) TX2(1)=$G(TX2(1))_" "_$G(TXT(ICDI))
"RTN","ICDEXLK2",62,0)
 . S TX(1)=$G(TXT(1)) I $D(TX2) D
"RTN","ICDEXLK2",63,0)
 . . N SP S SP="          " D PAR^ICDEX(.TX2,54) S ICDI=0
"RTN","ICDEXLK2",64,0)
 . . F  S ICDI=$O(TX2(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK2",65,0)
 . . . N CT Q:'$L($G(TX2(ICDI)))
"RTN","ICDEXLK2",66,0)
 . . . S CT=$O(TX(" "),-1)+1 S TX(CT)=SP_$G(TX2(ICDI))
"RTN","ICDEXLK2",67,0)
 I $G(ICDFMT)'=1&($G(ICDFMT)'=2) D
"RTN","ICDEXLK2",68,0)
 . K TX N ICDI D PAR^ICDEX(.TXT,64) S ICDI=0 F  S ICDI=$O(TXT(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK2",69,0)
 . . N CT S CT=$O(TX(" "),-1)+1 S TX(CT)=$G(TXT(ICDI))
"RTN","ICDEXLK2",70,0)
 S DIR("A",1)=" One match found",DIR("A",2)=" "
"RTN","ICDEXLK2",71,0)
 S ICDI=0 F  S ICDI=$O(TX(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK2",72,0)
 . Q:'$L($G(TX(ICDI)))  N CT S CT=$O(DIR("A"," "),-1)+1
"RTN","ICDEXLK2",73,0)
 . S DIR("A",CT)=("     "_$G(TX(ICDI)))
"RTN","ICDEXLK2",74,0)
 S CT=$O(DIR("A"," "),-1)+1,DIR("A",CT)=" ",DIR("A")="   OK?  "
"RTN","ICDEXLK2",75,0)
 S DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","ICDEXLK2",76,0)
 S ICDPR="" I $L($G(DICR(2,1))),$L($G(DICR(1,1))) D
"RTN","ICDEXLK2",77,0)
 . S ICDPR=DICR(1,1)_$C(34)_"B"_$C(34)_","_+IEN_")"
"RTN","ICDEXLK2",78,0)
 I $L(ICDPR),$D(@ICDPR) D  Q 1
"RTN","ICDEXLK2",79,0)
 . S LN=$O(DIR("A"," "),-1) I LN>0 N LN2 F LN2=1:1:(LN-1) W !,DIR("A",LN2)
"RTN","ICDEXLK2",80,0)
 K DIROUT,DIRUT,DUOUT,DTOUT D ^DIR S:$D(DTOUT) ICDOTIM=1,Y=-1
"RTN","ICDEXLK2",81,0)
 S:$D(DUOUT) ICDOUPA=1,Y=-1 S:$D(DIROUT) ICDOUPA=2,Y=-1
"RTN","ICDEXLK2",82,0)
 Q:+Y>0 1
"RTN","ICDEXLK2",83,0)
 Q -1
"RTN","ICDEXLK2",84,0)
ONESM(X) ;     One Entry Found           ScreenMan
"RTN","ICDEXLK2",85,0)
 N DIROUT,DIRUT,ANS,CODE,ICDMENU,IEN,ITEM,TEXT,VST S ICDOREV=1
"RTN","ICDEXLK2",86,0)
 S ITEM=$G(^TMP(SUB,$J,"SEL",1)) Q:'$L(ITEM) -1
"RTN","ICDEXLK2",87,0)
 S IEN=+ITEM,TEXT=$P(ITEM,U,2) S CODE=$$CODEC^ICDEX(+($G(FILE)),IEN)
"RTN","ICDEXLK2",88,0)
 S VST=$$VST^ICDEX(+($G(FILE)),IEN,ICDCDT)
"RTN","ICDEXLK2",89,0)
 I $L(CODE),$L(VST) S TEXT=CODE,TEXT=TEXT_$J(" ",(9-$L(TEXT)))_VST
"RTN","ICDEXLK2",90,0)
 Q:'$L(TEXT) -1 S ICDMENU(1)=("     "_$G(TEXT)),ICDMENU(2)="   OK? Yes//  "
"RTN","ICDEXLK2",91,0)
 S ICDMENU="ICDMENU" D HLP^DDSMSG(.ICDMENU) S ICDOREV=1
"RTN","ICDEXLK2",92,0)
 R ANS:300 S X="" S:'$T ICDOTIM=1 S:'$L(ANS) ANS="Y" S:$G(ANS)["^" ICDOUPA=1
"RTN","ICDEXLK2",93,0)
 S:$G(ANS)["^^" ICDOUPA=2 S:$G(ICDOTIM)=1 X="^^" S:$G(ICDOUPA)=1 X="^"
"RTN","ICDEXLK2",94,0)
 S:$G(ICDOUPA)=2 X="^^" D CLRMSG^DDS Q:X["^" X
"RTN","ICDEXLK2",95,0)
 S ANS=$E(ANS,1) S X=$S("^Y^y^"[("^"_ANS_"^"):1,1:-1)
"RTN","ICDEXLK2",96,0)
 Q X
"RTN","ICDEXLK2",97,0)
MUL(X) ;   Multiple Entries Found
"RTN","ICDEXLK2",98,0)
 S:'$D(DDS) X=$$MULRS S:$D(DDS) X=$$MULSM
"RTN","ICDEXLK2",99,0)
 Q X
"RTN","ICDEXLK2",100,0)
MULRS(X) ;     Multiple Entries Found    Roll and Scroll
"RTN","ICDEXLK2",101,0)
 Q:+($G(EXIT))>0 "^^"  N ENT,EXIT,IEN,ITEM,LEN,MAX,ROOT,SEL,TEXT,TOT,Y
"RTN","ICDEXLK2",102,0)
 Q:$G(DIC(0))'["E" -1  S ROOT=$G(DIC),LEN=+($G(ICDDICN)) S:+LEN'>0 LEN=5
"RTN","ICDEXLK2",103,0)
 S (MAX,ENT,SEL,EXIT)=0,U="^",TOT=$G(^TMP(SUB,$J,"SEL",0))
"RTN","ICDEXLK2",104,0)
 S SEL=0 G:+TOT=0 MULQ W:+TOT>1 !!," ",TOT," matches found"
"RTN","ICDEXLK2",105,0)
 F ENT=1:1:TOT Q:((SEL>0)&(SEL<ENT+1))  Q:EXIT  D  Q:EXIT
"RTN","ICDEXLK2",106,0)
 . N ITEM,IEN,TEXT S ITEM=$G(^TMP(SUB,$J,"SEL",ENT))
"RTN","ICDEXLK2",107,0)
 . S IEN=+ITEM,TEXT=$P(ITEM,U,2) Q:'$L(TEXT)
"RTN","ICDEXLK2",108,0)
 . S MAX=ENT W:ENT#LEN=1 ! D MULRSW S:ENT=TOT ICDOREV=1
"RTN","ICDEXLK2",109,0)
 . W:ENT#LEN=0 ! S:ENT#LEN=0 SEL=$$MULRSS(MAX,ENT) S:SEL["^" EXIT=1
"RTN","ICDEXLK2",110,0)
 I ENT#LEN'=0,+SEL=0 W ! S SEL=$$MULRSS(MAX,ENT) S:SEL["^" EXIT=1
"RTN","ICDEXLK2",111,0)
 G MULQ
"RTN","ICDEXLK2",112,0)
 Q X
"RTN","ICDEXLK2",113,0)
MULRSW ;       Write Multiple          Roll and Scroll
"RTN","ICDEXLK2",114,0)
 Q:+($G(IEN))'>0  Q:'$L($G(ROOT))  Q:'$L($G(TEXT))
"RTN","ICDEXLK2",115,0)
 N ICDI,IND,NR,TAB,TX2,TXT,Y,RT,LEN S (TAB,IND)=8
"RTN","ICDEXLK2",116,0)
 S RT=$$ROOT^ICDEX(ROOT)
"RTN","ICDEXLK2",117,0)
 S:+($G(ICDOUT))<3 IND=18 W !,$J(ENT,5),".",?TAB
"RTN","ICDEXLK2",118,0)
 S:$G(DIC(0))["S"&($G(IND))>7 IND=TAB
"RTN","ICDEXLK2",119,0)
 I +($G(ICDISF))'>0,$L($G(DIC("W"))) D  Q
"RTN","ICDEXLK2",120,0)
 . N Y,NR D Y(ROOT,IEN,ICDCDT)
"RTN","ICDEXLK2",121,0)
 . S NR=$G(@(RT_+IEN_",0)"))
"RTN","ICDEXLK2",122,0)
 . W $P(NR,"^",1),"  " X DIC("W") Q
"RTN","ICDEXLK2",123,0)
 I +($G(ICDISF))'>0,$D(DIC("W")),DIC("W")="" D  Q
"RTN","ICDEXLK2",124,0)
 . W $P($G(@(RT_+IEN_",0)")),"^",1)
"RTN","ICDEXLK2",125,0)
 I +($G(ICDOUT))<3 D  Q
"RTN","ICDEXLK2",126,0)
 . N ICDI,LEN S TXT(1)=TEXT D PAR^ICDEX(.TXT,64) K TX2 F ICDI=2:1:8 D
"RTN","ICDEXLK2",127,0)
 . . S:$L($G(TXT(ICDI))) TX2(1)=$G(TX2(1))_" "_$G(TXT(ICDI))
"RTN","ICDEXLK2",128,0)
 . W $G(TXT(1)) I $D(TX2) D
"RTN","ICDEXLK2",129,0)
 . . N LEN S LEN=54 S:$G(DIC(0))["S" LEN=64
"RTN","ICDEXLK2",130,0)
 . . S:$G(DIC(0))["S" IND=TAB
"RTN","ICDEXLK2",131,0)
 . . D PAR^ICDEX(.TX2,LEN) S ICDI=0
"RTN","ICDEXLK2",132,0)
 . . F  S ICDI=$O(TX2(ICDI)) Q:+ICDI'>0  W !,?IND,$G(TX2(ICDI))
"RTN","ICDEXLK2",133,0)
 S TXT(1)=TEXT
"RTN","ICDEXLK2",134,0)
 D PAR^ICDEX(.TXT,64) S ICDI=0 F  S ICDI=$O(TXT(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK2",135,0)
 . Q:'$L($G(TXT(ICDI)))  W:ICDI>1 ! W ?IND,$G(TXT(ICDI))
"RTN","ICDEXLK2",136,0)
 Q
"RTN","ICDEXLK2",137,0)
MULRSS(LEX,LS) ;       Select Multiple         Roll and Scroll
"RTN","ICDEXLK2",138,0)
 Q:+($G(EXIT))>0 "^^"  N DTOUT,DUOUT,DIRUT,DIROUT,DIR,DIRB,HLP
"RTN","ICDEXLK2",139,0)
 N LAST,MAX,NEXT,RAN,X,Y S MAX=+($G(LEX)),LAST=+($G(LS)) Q:MAX=0 -1
"RTN","ICDEXLK2",140,0)
 S RAN=" Select 1-"_MAX_":  ",NEXT=$O(^TMP(SUB,$J,"SEL",+LAST))
"RTN","ICDEXLK2",141,0)
 S:+NEXT>0 DIR("A")=" Press <RETURN> for more, '^' to exit, or"_RAN
"RTN","ICDEXLK2",142,0)
 S:+NEXT'>0 DIR("A")=RAN
"RTN","ICDEXLK2",143,0)
 S HLP="    Answer must be from 1 to "_MAX_", or <Return> to continue"
"RTN","ICDEXLK2",144,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","ICDEXLK2",145,0)
 S (DIR("?"),DIR("??"))="^D MULRSSH^ICDEXLK2"
"RTN","ICDEXLK2",146,0)
 S DIR(0)="NAO^1:"_MAX_":0" K DIROUT,DIRUT,DUOUT,DTOUT D ^DIR
"RTN","ICDEXLK2",147,0)
 S:$D(DTOUT) ICDOTIM=1,EXIT=1,Y=-1,X="^^" S:$D(DUOUT) ICDOUPA=1,Y=-1,X="^"
"RTN","ICDEXLK2",148,0)
 S:$D(DIROUT) ICDOUPA=2,Y=-1,X="^^" S LEX=+Y S:$D(DTOUT)!(X[U) LEX=U
"RTN","ICDEXLK2",149,0)
 Q LEX
"RTN","ICDEXLK2",150,0)
MULRSSH ;       Select Multiple Help    Roll and Scroll
"RTN","ICDEXLK2",151,0)
 I $L($G(HLP)) W !,$G(HLP) Q
"RTN","ICDEXLK2",152,0)
 Q
"RTN","ICDEXLK2",153,0)
MULSM(X) ;     Multiple Entries Found    ScreenMan
"RTN","ICDEXLK2",154,0)
 Q:+($G(EXIT))>0 "^^"  N CODE,CTR,ENT,EXIT,ICDMENU,IEN,ITEM,LEN
"RTN","ICDEXLK2",155,0)
 N MAX,ROOT,SEL,TEXT,TOT,VST,Y S ROOT=$G(DIC),(MAX,ENT,SEL,EXIT)=0
"RTN","ICDEXLK2",156,0)
 S U="^",LEN=3,TOT=$G(^TMP(SUB,$J,"SEL",0)),SEL=0 G:+TOT=0 MULQ
"RTN","ICDEXLK2",157,0)
 S CTR=0 F ENT=1:1:TOT Q:((SEL>0)&(SEL<ENT+1))  Q:EXIT  D  Q:EXIT
"RTN","ICDEXLK2",158,0)
 . N ITEM,IEN,TEXT,CODE,VST S ITEM=$G(^TMP(SUB,$J,"SEL",ENT))
"RTN","ICDEXLK2",159,0)
 . S IEN=+ITEM,TEXT=$P(ITEM,U,2) S CODE=$$CODEC^ICDEX(+($G(FILE)),IEN)
"RTN","ICDEXLK2",160,0)
 . S VST=$$VST^ICDEX(+($G(FILE)),IEN,ICDCDT)
"RTN","ICDEXLK2",161,0)
 . I $L(CODE),$L(VST) S TEXT=CODE,TEXT=TEXT_$J(" ",(9-$L(TEXT)))_VST
"RTN","ICDEXLK2",162,0)
 . Q:'$L(TEXT)  S MAX=ENT D MULSMW S:ENT=TOT ICDOREV=1
"RTN","ICDEXLK2",163,0)
 . S:ENT#LEN=0 SEL=$$MULSMS(MAX,ENT) S:SEL["^" EXIT=1
"RTN","ICDEXLK2",164,0)
 K:$D(DUOUT) ICDMENU
"RTN","ICDEXLK2",165,0)
 I ENT#LEN'=0,+SEL=0,'EXIT D
"RTN","ICDEXLK2",166,0)
 . Q:+($G(ICDOUPA))>0  S SEL=$$MULSMS(MAX,ENT) S:SEL["^" EXIT=1
"RTN","ICDEXLK2",167,0)
 I EXIT>0 D  G MULQ
"RTN","ICDEXLK2",168,0)
 . D CLRMSG^DDS K ICDMENU S:$L($G(DICR("1"))) DICR("1")="^^" S:$L($G(ICDOINP)) ICDOINP="^^"
"RTN","ICDEXLK2",169,0)
 D CLRMSG^DDS
"RTN","ICDEXLK2",170,0)
 G MULQ
"RTN","ICDEXLK2",171,0)
MULSMW ;       Write Multiple          ScreenMan
"RTN","ICDEXLK2",172,0)
 Q:+($G(ENT))'>0  Q:'$L($G(TEXT))  N CTR S CTR=$O(ICDMENU(" "),-1)+1
"RTN","ICDEXLK2",173,0)
 S ICDMENU(CTR)=$J(ENT,3)_"."_"  "_$G(TEXT)
"RTN","ICDEXLK2",174,0)
 Q
"RTN","ICDEXLK2",175,0)
MULSMS(LEX,LS) ;       Select Multiple         ScreenMan
"RTN","ICDEXLK2",176,0)
 Q:+($G(EXIT))>0 "^^"  N DIROUT,DUOUT,DTOUT,DIRUT,ANS,CTR,LAST,MAX,PMT,X
"RTN","ICDEXLK2",177,0)
 Q:'$D(ICDMENU) "^" S MAX=+($G(LEX)),LAST=+($G(LS)) Q:MAX=0 -1
"RTN","ICDEXLK2",178,0)
 S PMT=" Select 1-"_MAX_", <RETURN> for more or '^' to exit:  "
"RTN","ICDEXLK2",179,0)
 S CTR=$O(ICDMENU(" "),-1)+1,ICDMENU(CTR)=PMT
"RTN","ICDEXLK2",180,0)
 S ICDMENU="ICDMENU" D HLP^DDSMSG(.ICDMENU)
"RTN","ICDEXLK2",181,0)
 K ICDMENU R ANS:300 S X="" S:'$T ICDOTIM=1,X="^^"
"RTN","ICDEXLK2",182,0)
 S:ANS["^" ICDOUPA=1,X="^" S:ANS["^^" ICDOUPA=2,X="^^" Q:X["^" X
"RTN","ICDEXLK2",183,0)
 D CLRMSG^DDS S ANS=+ANS Q:ANS'>0 ""  Q:ANS>MAX ""  S X=ANS
"RTN","ICDEXLK2",184,0)
 Q X
"RTN","ICDEXLK2",185,0)
MULQ ;     Quit Multiple
"RTN","ICDEXLK2",186,0)
 S X=+($G(SEL)) Q:X'>0 -1
"RTN","ICDEXLK2",187,0)
 Q X
"RTN","ICDEXLK2",188,0)
 ;
"RTN","ICDEXLK2",189,0)
INP(X,VER,CDT) ; Get User Input
"RTN","ICDEXLK2",190,0)
 Q:$G(DIC(0))'["A" ""  N DIROUT,DIRUT,DUOUT,DTOUT,DIR,DIRA,DIRB,SBR,SBT,FILE,ROOT
"RTN","ICDEXLK2",191,0)
 S VER=+($G(VER)),CDT=+($G(CDT))
"RTN","ICDEXLK2",192,0)
 S FILE=$G(X) Q:"^80^80.1^"'[("^"_FILE_"^") ""  S ROOT=$$ROOT^ICDEX(FILE)
"RTN","ICDEXLK2",193,0)
 S:$L($G(ICDDICB)) DIRB=ICDDICB S:$L($G(ICDDICA)) DIRA=ICDDICA
"RTN","ICDEXLK2",194,0)
 S:'$L($G(DIRA))&(FILE=80) DIRA=" Select ICD Diagnosis:  "
"RTN","ICDEXLK2",195,0)
 S:'$L($G(DIRA))&(FILE=80.1) DIRA=" Select Procedure:  "
"RTN","ICDEXLK2",196,0)
 S:'$L($G(DIRA)) DIRA=" Select ICD Text or Code:  "
"RTN","ICDEXLK2",197,0)
 S SBT="",SBR=$$RET^ICDEXLK6($G(FILE))
"RTN","ICDEXLK2",198,0)
 I SBR>0,VER>0,CDT?7N,$L(ROOT) D
"RTN","ICDEXLK2",199,0)
 . N CODE,SYS,STA
"RTN","ICDEXLK2",200,0)
 . S CODE=$G(@(ROOT_+SBR_",0)"))
"RTN","ICDEXLK2",201,0)
 . S SYS=$P($G(@(ROOT_+SBR_",1)")),"^",1)
"RTN","ICDEXLK2",202,0)
 . S STA=$$STATCHK^ICDEX(CODE,CDT,SYS)
"RTN","ICDEXLK2",203,0)
 . S:STA'>0 SBR=0
"RTN","ICDEXLK2",204,0)
 S:+SBR>0 SBT=$$LD^ICDEX(FILE,+SBR,$G(ICDCDT))
"RTN","ICDEXLK2",205,0)
 S:$L($G(DIRB)) DIR("B")=DIRB
"RTN","ICDEXLK2",206,0)
 S:$L($G(DIRA)) DIR("A")=DIRA W:'$L($G(DIRB)) !
"RTN","ICDEXLK2",207,0)
 S DIR("PRE")="S X=$$INPRE^ICDEXLK2($G(X))"
"RTN","ICDEXLK2",208,0)
 S (DIR("?"),DIR("??"))="^D INPH^ICDEXLK2($G(FILE))"
"RTN","ICDEXLK2",209,0)
 S DIR("?")="^D INPH^ICDEXLK2($G(FILE))"
"RTN","ICDEXLK2",210,0)
 S DIR("??")="^D INPH2^ICDEXLK2($G(FILE))"
"RTN","ICDEXLK2",211,0)
 N Y S DIR(0)="FAO^0:245"
"RTN","ICDEXLK2",212,0)
 K X,DIROUT,DIRUT,DUOUT,DTOUT D ^DIR
"RTN","ICDEXLK2",213,0)
 S:$G(X)="@"&($G(Y)="") Y=$G(X)
"RTN","ICDEXLK2",214,0)
 S:$D(DTOUT) ICDOTIM=1 S:$D(DUOUT) ICDOUPA=1 S:$D(DIROUT) ICDOUPA=2
"RTN","ICDEXLK2",215,0)
 Q:$G(ICDOUPA)=1 "^"  Q:$G(ICDOUPA)=2 "^^"  Q:$G(ICDOTIM)>0 "^^"
"RTN","ICDEXLK2",216,0)
 I '$L(X) S (X,ICDX,INP,INP1,INP2)="",Y=-1 Q X
"RTN","ICDEXLK2",217,0)
 S:X=""&('$L($G(DIR("B")))) X="^" S:X["^"&(X'["^^") X="^" S:X["^^" X="^^" Q:X["^" X
"RTN","ICDEXLK2",218,0)
 I $E(X,1)=" ",$L(SBT),+SBR>0 S X=("`"_+SBR) Q X
"RTN","ICDEXLK2",219,0)
 W:$G(DIC(0))'["Q"&($E(X,1)'=" ")&('$D(DDS)) !
"RTN","ICDEXLK2",220,0)
 S X=$$UP^XLFSTR($$TM(Y))
"RTN","ICDEXLK2",221,0)
 Q X
"RTN","ICDEXLK2",222,0)
INPH(X) ;   Input Help
"RTN","ICDEXLK2",223,0)
 N FILE,TYPE,TMP,TXT S FILE=$G(X)
"RTN","ICDEXLK2",224,0)
 S TYPE=$S(FILE=80:"Diagnosis ",FILE=80.1:"Procedure ",1:"")
"RTN","ICDEXLK2",225,0)
 I '$L($G(TYPE)) D  Q
"RTN","ICDEXLK2",226,0)
 . S TMP="Enter a term (2-245 characters in length) or a code."
"RTN","ICDEXLK2",227,0)
 . I +($G(VER))>0 S TMP=TMP_"  Only active codes will be considered for selection."
"RTN","ICDEXLK2",228,0)
 . S TXT(1)=TMP D PA^ICDEXLK6(.TXT,66)
"RTN","ICDEXLK2",229,0)
 . S TMP=0 F  S TMP=$O(TXT(TMP)) Q:+TMP'>0  W !,?4,$G(TXT(TMP))
"RTN","ICDEXLK2",230,0)
 S TMP="Enter a "_TYPE_"(2-245 characters in length) or a "_TYPE_"code."
"RTN","ICDEXLK2",231,0)
 I +($G(VER))>0 S TMP=TMP_"  Only active "_TYPE_"codes will be considered for selection."
"RTN","ICDEXLK2",232,0)
 S TXT(1)=TMP D PA^ICDEXLK6(.TXT,66)
"RTN","ICDEXLK2",233,0)
 S TMP=0 F  S TMP=$O(TXT(TMP)) Q:+TMP'>0  W !,?4,$G(TXT(TMP))
"RTN","ICDEXLK2",234,0)
 Q
"RTN","ICDEXLK2",235,0)
INPH2(X) ;   Input Help
"RTN","ICDEXLK2",236,0)
 N FILE,TYPE,TMP,TXT S FILE=$G(X)
"RTN","ICDEXLK2",237,0)
 S TYPE=$S(FILE=80:"Diagnosis ",FILE=80.1:"Procedure ",1:"")
"RTN","ICDEXLK2",238,0)
 I '$L($G(TYPE)) D  Q
"RTN","ICDEXLK2",239,0)
 . S TMP="Enter a term (2-245 characters in length), a code or code fragment,"
"RTN","ICDEXLK2",240,0)
 . S TMP=TMP_" phrase, or an accent grave character (`) followed by the"
"RTN","ICDEXLK2",241,0)
 . S TMP=TMP_" IEN to select a specific entry"
"RTN","ICDEXLK2",242,0)
 . I $G(ICDDIC0)'["F" D
"RTN","ICDEXLK2",243,0)
 . . S TMP=TMP_", or press space bar and Enter/Return key to do a subsequent lookup of the same entry"
"RTN","ICDEXLK2",244,0)
 . S TMP=TMP_"." I +($G(VER))>0 D
"RTN","ICDEXLK2",245,0)
 . . S TMP=TMP_"  Only active codes will be considered for selection."
"RTN","ICDEXLK2",246,0)
 . S TXT(1)=TMP D PA^ICDEXLK6(.TXT,66)
"RTN","ICDEXLK2",247,0)
 . S TMP=0 F  S TMP=$O(TXT(TMP)) Q:+TMP'>0  W !,?4,$G(TXT(TMP))
"RTN","ICDEXLK2",248,0)
 S TMP="Enter a "_TYPE_"name"
"RTN","ICDEXLK2",249,0)
 S TMP=TMP_" (2-245 characters in length), a "_TYPE_"code or code fragment,"
"RTN","ICDEXLK2",250,0)
 S TMP=TMP_" one or more keywords sufficient to select a "_TYPE
"RTN","ICDEXLK2",251,0)
 S TMP=TMP_" name, or an accent grave character (`) followed by the"
"RTN","ICDEXLK2",252,0)
 S TMP=TMP_" IEN to select a specific entry"
"RTN","ICDEXLK2",253,0)
 I $G(ICDDIC0)'["F" D
"RTN","ICDEXLK2",254,0)
 . S TMP=TMP_", or press space bar and Enter/Return key to do a subsequent lookup of the same entry"
"RTN","ICDEXLK2",255,0)
 S TMP=TMP_"." I +($G(VER))>0 D
"RTN","ICDEXLK2",256,0)
 . S TMP=TMP_"  Only active "_TYPE_"codes will be considered for selection."
"RTN","ICDEXLK2",257,0)
 S TXT(1)=TMP D PA^ICDEXLK6(.TXT,66)
"RTN","ICDEXLK2",258,0)
 S TMP=0 F  S TMP=$O(TXT(TMP)) Q:+TMP'>0  W !,?4,$G(TXT(TMP))
"RTN","ICDEXLK2",259,0)
 Q
"RTN","ICDEXLK2",260,0)
INPRE(X) ;   Input Pre-Processing
"RTN","ICDEXLK2",261,0)
 Q:'$L($G(X)) ""  N IN,IN1,IN2 S IN=$G(X)
"RTN","ICDEXLK2",262,0)
 Q:IN["??" "??"  Q:IN["?" "?"
"RTN","ICDEXLK2",263,0)
 S IN1=$E(IN,1),IN2=$E(IN,2,$L(IN))
"RTN","ICDEXLK2",264,0)
 I IN1["`",IN2?1N.N,$L($G(ROOT)) D  Q X
"RTN","ICDEXLK2",265,0)
 . Q:IN1="`"&(IN2?1N.N)&($D(@(ROOT_+IN2_",0)")))  S X="??"
"RTN","ICDEXLK2",266,0)
 I $L($G(ROOT)) I IN1=" ",'$L(IN2) D  Q:$E(X,1)="`"!($E(X,1)="?") X
"RTN","ICDEXLK2",267,0)
 . N FI,CODE,SYS,STA,ND,SB,OUT S FI=$$FILE^ICDEX(ROOT)
"RTN","ICDEXLK2",268,0)
 . Q:+FI'>0  S SB=$$RET^ICDEXLK6($G(FILE))
"RTN","ICDEXLK2",269,0)
 . I SB>0,+($G(VER))'>0 S X="`"_+SB Q
"RTN","ICDEXLK2",270,0)
 . I SB>0,+($G(VER))>0,+($G(CDT))?7N,$L(ROOT) D
"RTN","ICDEXLK2",271,0)
 . . N CODE,SYS,STA
"RTN","ICDEXLK2",272,0)
 . . S CODE=$G(@(ROOT_+SB_",0)")) Q:'$L(CODE)
"RTN","ICDEXLK2",273,0)
 . . S SYS=$P($G(@(ROOT_+SB_",1)")),"^",1) Q:+SYS'>0
"RTN","ICDEXLK2",274,0)
 . . S STA=$$STATCHK^ICDEX(CODE,CDT,SYS)
"RTN","ICDEXLK2",275,0)
 . . S:STA'>0 SB=0 S:+SB>0 X="`"_+SB S:+SB'>0 X="??"
"RTN","ICDEXLK2",276,0)
 Q X
"RTN","ICDEXLK2",277,0)
 ;            
"RTN","ICDEXLK2",278,0)
 ; Miscellaneous
"RTN","ICDEXLK2",279,0)
OUT(X,Y,FMT,ARY) ;   Output Array
"RTN","ICDEXLK2",280,0)
 K ARY N FILE,TERM,ROOT,IEN S ROOT=$G(X),IEN=+($G(Y)) Q:'$L(ROOT)
"RTN","ICDEXLK2",281,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^")
"RTN","ICDEXLK2",282,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:"^80^80.1^"'[("^"_FILE_"^")
"RTN","ICDEXLK2",283,0)
 S FMT=+($G(FMT)) S:FMT'>0 FMT=1 S:FMT>4 FMT=1 Q:'$D(@(ROOT_IEN_",0)"))
"RTN","ICDEXLK2",284,0)
 I +($G(FMT))=1!(+($G(FMT))=3) S TERM=$$SD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK2",285,0)
 I +($G(FMT))=2!(+($G(FMT))=4) S TERM=$$LD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK2",286,0)
 Q:'$L(TERM)  Q:$P(TERM,"^",1)=-1  S ARY(1)=TERM Q:+($G(FMT))=1!(+($G(FMT))=3)
"RTN","ICDEXLK2",287,0)
 D:+($G(FMT))=2 PAR^ICDEX(.ARY,60) D:+($G(FMT))=4 PAR^ICDEX(.ARY,70)
"RTN","ICDEXLK2",288,0)
 Q
"RTN","ICDEXLK2",289,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK2",290,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK2",291,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK2",292,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK2",293,0)
 Q X
"RTN","ICDEXLK2",294,0)
X(SEL,SUB) ;   Set X
"RTN","ICDEXLK2",295,0)
 K X N IEN S SEL=+($G(SEL)),SUB=$G(SUB) Q:'$L(SUB)
"RTN","ICDEXLK2",296,0)
 S IEN=$G(^TMP(SUB,$J,"SEL",+SEL)) Q:+IEN'>0  S X=+IEN
"RTN","ICDEXLK2",297,0)
 Q
"RTN","ICDEXLK2",298,0)
Y(ROOT,IEN,CDT,FMT) ;   Set Y
"RTN","ICDEXLK2",299,0)
 ;
"RTN","ICDEXLK2",300,0)
 ; Input
"RTN","ICDEXLK2",301,0)
 ; 
"RTN","ICDEXLK2",302,0)
 ;    ROOT  Global Root (DIC) or File Number
"RTN","ICDEXLK2",303,0)
 ;    IEN   Internal Entry Number
"RTN","ICDEXLK2",304,0)
 ;    CDT   Versioning Date (default TODAY)
"RTN","ICDEXLK2",305,0)
 ;    FMT   Format of Output
"RTN","ICDEXLK2",306,0)
 ;            0  Standard Fileman Y   IEN ^ CODE
"RTN","ICDEXLK2",307,0)
 ;            1  Expanded Y as if DIC(0) contained a "Z" 
"RTN","ICDEXLK2",308,0)
 ; Output
"RTN","ICDEXLK2",309,0)
 ;
"RTN","ICDEXLK2",310,0)
 ;    Y     IEN ^ Code           Fileman
"RTN","ICDEXLK2",311,0)
 ;    
"RTN","ICDEXLK2",312,0)
 ;    If DIC(0) contains "Z" or input parameter FMT > 0
"RTN","ICDEXLK2",313,0)
 ;    
"RTN","ICDEXLK2",314,0)
 ;       Y(0)     0 Node (Code)        Fileman
"RTN","ICDEXLK2",315,0)
 ;       Y(0,0)   .01 Field (Code)     Fileman
"RTN","ICDEXLK2",316,0)
 ;       Y(0,1)   $$ICDDX or $$ICDOP   Non-Fileman
"RTN","ICDEXLK2",317,0)
 ;       Y(0,2)   Long Description     Non-Fileman
"RTN","ICDEXLK2",318,0)
 ;       
"RTN","ICDEXLK2",319,0)
 N CODE,NODE0,FILE,SHORT,FDAT,LONG,ICD10 K Y S Y=-1
"RTN","ICDEXLK2",320,0)
 S:+($G(ICDOFND))>0&(+($G(ICDOSEL))'>0) Y="-1^No selection made"
"RTN","ICDEXLK2",321,0)
 S IEN=+($G(IEN)),ROOT=$G(ROOT),CDT=+($G(CDT))
"RTN","ICDEXLK2",322,0)
 S:CDT'?7N CDT=$$DT^XLFDT S ICD10=+($$IMP^ICDEX(30))
"RTN","ICDEXLK2",323,0)
 S ROOT=$$ROOT^ICDEX(ROOT) Q:'$L(ROOT)
"RTN","ICDEXLK2",324,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:+FILE'>0
"RTN","ICDEXLK2",325,0)
 S NODE0=$G(@(ROOT_+IEN_",0)")) Q:'$L(NODE0)
"RTN","ICDEXLK2",326,0)
 S CODE=$$CODEC^ICDEX(FILE,IEN) Q:'$L(CODE)
"RTN","ICDEXLK2",327,0)
 S SHORT=$$SD^ICDEX(FILE,IEN,CDT) Q:'$L(SHORT)
"RTN","ICDEXLK2",328,0)
 S FMT=+($G(FMT)) I $P(SHORT,"^",1)=-1 D  Q:'$L(SHORT)
"RTN","ICDEXLK2",329,0)
 . S SHORT=$$SD^ICDEX(FILE,IEN,ICD10)
"RTN","ICDEXLK2",330,0)
 . S:$P(SHORT,"^",1)=-1 SHORT="" Q:'$L(SHORT)
"RTN","ICDEXLK2",331,0)
 . S SHORT=SHORT_" (Pending - "_$$FMTE^XLFDT($$IMP^ICDEX(30))_")"
"RTN","ICDEXLK2",332,0)
 S Y=+IEN_"^"_CODE
"RTN","ICDEXLK2",333,0)
 S:$G(DIC(0))["Z"!(+FMT>0) Y(0)=NODE0
"RTN","ICDEXLK2",334,0)
 S CODE=$P(NODE0,"^",1) Q:'$L(CODE)
"RTN","ICDEXLK2",335,0)
 S:FILE=80 FDAT=$$ICDDX^ICDEX(CODE,CDT,,"E")
"RTN","ICDEXLK2",336,0)
 S:FILE=80.1 FDAT=$$ICDOP^ICDEX(CODE,CDT,,"E")
"RTN","ICDEXLK2",337,0)
 S LONG=$$LD^ICDEX(ROOT,IEN,CDT)
"RTN","ICDEXLK2",338,0)
 S:$G(DIC(0))["Z"!(+FMT>0) Y(0,0)=CODE
"RTN","ICDEXLK2",339,0)
 S:$L(FDAT)&($L(LONG))&($G(DIC(0))["Z")!(+FMT>0) Y(0,1)=FDAT,Y(0,2)=LONG
"RTN","ICDEXLK2",340,0)
 Q
"RTN","ICDEXLK2",341,0)
SH ;   Show TMP
"RTN","ICDEXLK2",342,0)
 N SUB,NN,NC S SUB="ICD9" S:'$D(^TMP(SUB)) SUB="ICD0" Q:'$D(^TMP(SUB))
"RTN","ICDEXLK2",343,0)
 S NN="^TMP("""_SUB_""","_$J_")",NC="^TMP("""_SUB_""","_$J_","
"RTN","ICDEXLK2",344,0)
 W:'$D(@NN) ! Q:'$D(@NN)  F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","ICDEXLK2",345,0)
 W !
"RTN","ICDEXLK2",346,0)
 Q
"RTN","ICDEXLK3")
0^18^B98059988
"RTN","ICDEXLK3",1,0)
ICDEXLK3 ;SLC/KER - ICD Extractor - Lookup, Search ;12/19/2014
"RTN","ICDEXLK3",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXLK3",3,0)
 ;               
"RTN","ICDEXLK3",4,0)
 ; Global Variables
"RTN","ICDEXLK3",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXLK3",6,0)
 ;    ^ICDS("F"           N/A
"RTN","ICDEXLK3",7,0)
 ;    ^TMP(ID,$J,         SACC 2.3.2.5.1
"RTN","ICDEXLK3",8,0)
 ;               
"RTN","ICDEXLK3",9,0)
 ; External References
"RTN","ICDEXLK3",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK3",11,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK3",12,0)
 ;               
"RTN","ICDEXLK3",13,0)
 ; Local Variables Newed or Killed by calling application
"RTN","ICDEXLK3",14,0)
 ;     DIC(0)    Fileman Lookup Parameters
"RTN","ICDEXLK3",15,0)
 ;  
"RTN","ICDEXLK3",16,0)
LK(TXT,ROOT,CDT,SYS,VER,OUT) ; Lookup - Versioned
"RTN","ICDEXLK3",17,0)
 ;
"RTN","ICDEXLK3",18,0)
 ; Input 
"RTN","ICDEXLK3",19,0)
 ; 
"RTN","ICDEXLK3",20,0)
 ;   TXT    Text to Search for (Required)
"RTN","ICDEXLK3",21,0)
 ;   
"RTN","ICDEXLK3",22,0)
 ;             Diagnosis or Procedure Code
"RTN","ICDEXLK3",23,0)
 ;             Diagnosis or Procedure Descriptive Text
"RTN","ICDEXLK3",24,0)
 ;             
"RTN","ICDEXLK3",25,0)
 ;   ROOT   Global Root/File # to Search (Fileman DIC, Required)
"RTN","ICDEXLK3",26,0)
 ;   
"RTN","ICDEXLK3",27,0)
 ;             ^ICD9(
"RTN","ICDEXLK3",28,0)
 ;             ^ICD0(
"RTN","ICDEXLK3",29,0)
 ;             
"RTN","ICDEXLK3",30,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDEXLK3",31,0)
 ;   
"RTN","ICDEXLK3",32,0)
 ;   SYS    Coding System (Optional but encouraged)
"RTN","ICDEXLK3",33,0)
 ;   
"RTN","ICDEXLK3",34,0)
 ;              1      ICD-9-CM
"RTN","ICDEXLK3",35,0)
 ;              2      ICD-9 Proc
"RTN","ICDEXLK3",36,0)
 ;             30      ICD-10-CM
"RTN","ICDEXLK3",37,0)
 ;             31      ICD-10-PCS
"RTN","ICDEXLK3",38,0)
 ;
"RTN","ICDEXLK3",39,0)
 ;   VER    Versioned Lookup
"RTN","ICDEXLK3",40,0)
 ;   
"RTN","ICDEXLK3",41,0)
 ;             0  No, include all codes, active and inactive
"RTN","ICDEXLK3",42,0)
 ;             1  Yes, include only Active codes for date CDT
"RTN","ICDEXLK3",43,0)
 ;
"RTN","ICDEXLK3",44,0)
 ;   OUT    Output Format
"RTN","ICDEXLK3",45,0)
 ;   
"RTN","ICDEXLK3",46,0)
 ;             1  Fileman, Code and Short Text (default)
"RTN","ICDEXLK3",47,0)
 ;             
"RTN","ICDEXLK3",48,0)
 ;                250.00    DMII CMP NT ST UNCNTR
"RTN","ICDEXLK3",49,0)
 ;                
"RTN","ICDEXLK3",50,0)
 ;             2  Fileman, Code and Description
"RTN","ICDEXLK3",51,0)
 ;             
"RTN","ICDEXLK3",52,0)
 ;                250.00    DIABETES MELLITUS NO MENTION OF
"RTN","ICDEXLK3",53,0)
 ;                          COMPLICATION, TYPE II OR UNSPECIFIED
"RTN","ICDEXLK3",54,0)
 ;                          TYPE, NOT STATED AS UNCONTROLLED
"RTN","ICDEXLK3",55,0)
 ;                          
"RTN","ICDEXLK3",56,0)
 ;             3  Lexicon, Short Text and Code
"RTN","ICDEXLK3",57,0)
 ;             
"RTN","ICDEXLK3",58,0)
 ;                DMII CMP NT ST UNCNTR (250.00)
"RTN","ICDEXLK3",59,0)
 ;                
"RTN","ICDEXLK3",60,0)
 ;             4  Lexicon, Description and Code
"RTN","ICDEXLK3",61,0)
 ;             
"RTN","ICDEXLK3",62,0)
 ;                DIABETES MELLITUS NO MENTION OF 
"RTN","ICDEXLK3",63,0)
 ;                COMPLICATION, TYPE II OR UNSPECIFIED TYPE,
"RTN","ICDEXLK3",64,0)
 ;                NOT STATED AS UNCONTROLLED (250.00)
"RTN","ICDEXLK3",65,0)
 ;             
"RTN","ICDEXLK3",66,0)
 ; Output (if successful)
"RTN","ICDEXLK3",67,0)
 ; 
"RTN","ICDEXLK3",68,0)
 ;   $$LK  Number of entries found
"RTN","ICDEXLK3",69,0)
 ;   
"RTN","ICDEXLK3",70,0)
 ;   Global Array of entries found:
"RTN","ICDEXLK3",71,0)
 ; 
"RTN","ICDEXLK3",72,0)
 ;      ^TMP(ID,$J,"SEL")
"RTN","ICDEXLK3",73,0)
 ;      ^TMP(ID,$J,"SEL",0)=# of entries
"RTN","ICDEXLK3",74,0)
 ;      ^TMP(ID,$J,"SEL",#)=IEN^Display Text
"RTN","ICDEXLK3",75,0)
 ;   
"RTN","ICDEXLK3",76,0)
 ;         where ID is a package namespaced subscript:
"RTN","ICDEXLK3",77,0)
 ;        
"RTN","ICDEXLK3",78,0)
 ;           ICD9 - for the Diagnosis file #80
"RTN","ICDEXLK3",79,0)
 ;           ICD0 - for the Operations/Procedure file #80.1
"RTN","ICDEXLK3",80,0)
 ;               
"RTN","ICDEXLK3",81,0)
 ; Local Variables used but Newed or Killed Elsewhere
"RTN","ICDEXLK3",82,0)
 ; 
"RTN","ICDEXLK3",83,0)
 ;     DIC(0)
"RTN","ICDEXLK3",84,0)
 ;     
"RTN","ICDEXLK3",85,0)
 Q $$LK2
"RTN","ICDEXLK3",86,0)
 Q
"RTN","ICDEXLK3",87,0)
CD(TXT,ROOT,CDT,SYS,VER,OUT) ; Lookup Code - Versioned
"RTN","ICDEXLK3",88,0)
 N ICDBYCD S ICDBYCD="" S TXT=$$TM(TXT)
"RTN","ICDEXLK3",89,0)
 Q $$LK2
"RTN","ICDEXLK3",90,0)
 Q
"RTN","ICDEXLK3",91,0)
LK2() ; Lookup - Part 2
"RTN","ICDEXLK3",92,0)
 N FILE,IEN,INP1,INP2,KEY,SUB,NUM,NXT,OK,ORD,SEQ,TDT,VCC,VCD,VDS,VSD,VST,PR,PARS,LOR,VII,VNM,Y
"RTN","ICDEXLK3",93,0)
 S TXT=$$TM($TR($G(TXT),"#"," ")) Q:'$L(TXT) 0  S ROOT=$$ROOT^ICDEX($G(ROOT)) Q:'$L(ROOT) 0
"RTN","ICDEXLK3",94,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:"^80^80.1^"'[("^"_FILE_"^") 0
"RTN","ICDEXLK3",95,0)
 S SUB=$TR(ROOT,"^(","") Q:'$L(SUB) 0  K ^TMP(SUB,$J) S CDT=$$CDT($G(CDT))
"RTN","ICDEXLK3",96,0)
 S SYS=$S($L($G(SYS)):$$SYS^ICDEX($G(SYS)),1:""),VER=+($G(VER))
"RTN","ICDEXLK3",97,0)
 S:+($G(SYS))'>0&(CDT?7N)&(+VER>0) SYS=$$SYS(ROOT,CDT)
"RTN","ICDEXLK3",98,0)
 S:$D(^ICDS(+SYS,0))&(+VER>0) CDT=$$DTBR^ICDEX(CDT,,+($G(SYS)))
"RTN","ICDEXLK3",99,0)
 S OUT=$G(OUT) S:+OUT'>0 OUT=1 S:+OUT>4 OUT=1
"RTN","ICDEXLK3",100,0)
 S INP1=$E(TXT,1),INP2=$E($G(TXT),2,245)
"RTN","ICDEXLK3",101,0)
 Q:$D(^TMP(SUB,$J)) +($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",102,0)
 ;   Exact Match
"RTN","ICDEXLK3",103,0)
 I $L(TXT) D
"RTN","ICDEXLK3",104,0)
 . N ICDI,LOR K Y,X S LOR=0,X=$$EXM^ICDEXLK5(TXT,ROOT,.Y,CDT,SYS,VER)
"RTN","ICDEXLK3",105,0)
 . S ICDI=0 F  S ICDI=$O(Y(ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK3",106,0)
 . . N IEN S IEN=+($G(Y(ICDI))) Q:+IEN'>0  D FND^ICDEXLK5(ROOT,IEN,CDT,SYS,VER,+($G(LOR)),OUT)
"RTN","ICDEXLK3",107,0)
 . I $G(DIC(0))'["A",$G(DIC(0))["O" D
"RTN","ICDEXLK3",108,0)
 . . N ENT,TXT,IEN S ENT=$O(^TMP(SUB,$J,"FND",0)) Q:+ENT'>0
"RTN","ICDEXLK3",109,0)
 . . S TXT=$G(^TMP(SUB,$J,"FND",+ENT,1)) Q:'$L(TXT)  S IEN=+($P(TXT,"^",1)) Q:+IEN'>0
"RTN","ICDEXLK3",110,0)
 . . K ^TMP(SUB,$J,"FND",ENT,1),^TMP(SUB,$J,"FND","IEN",+IEN)
"RTN","ICDEXLK3",111,0)
 . . S ^TMP(SUB,$J,"FND",1,1)=TXT,^TMP(SUB,$J,"FND","IEN",+IEN)=""
"RTN","ICDEXLK3",112,0)
 I $G(DIC(0))["X" D SEL^ICDEXLK5(ROOT,+($G(LOR))) Q:+($G(^TMP(SUB,$J,"SEL",0)))>0 +($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",113,0)
 ;   By Code
"RTN","ICDEXLK3",114,0)
 D:$L(TXT)'>8&($$ISCODE(TXT,ROOT)>0) CODE
"RTN","ICDEXLK3",115,0)
 Q:+($G(^TMP(SUB,$J,"SEL",0)))>0 +($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",116,0)
 ;   By Text
"RTN","ICDEXLK3",117,0)
 D TXT^ICDEXLK4
"RTN","ICDEXLK3",118,0)
 Q +($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",119,0)
 ;
"RTN","ICDEXLK3",120,0)
CODE ;   Lookup by Code (Requires TXT and ROOT)
"RTN","ICDEXLK3",121,0)
 Q:'$L($G(TXT))  Q:'$L($G(ROOT))  Q:$L(TXT)>8  Q:$G(DIC(0))["B"
"RTN","ICDEXLK3",122,0)
 Q:$$ISCODE($G(TXT),$G(ROOT))'>0
"RTN","ICDEXLK3",123,0)
 S CDT=$$CDT($G(CDT)) N KEY,ORD,PRV,EROOT
"RTN","ICDEXLK3",124,0)
 S KEY=TXT,PRV=+($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",125,0)
 S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",126,0)
 S EROOT=ROOT_"""BA""," S:+($G(SYS))>0&($D(@(ROOT_"""ABA"","_+($G(SYS))_")"))) EROOT=ROOT_"""ABA"","_+($G(SYS))_","
"RTN","ICDEXLK3",127,0)
 F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK3",128,0)
 . S IEN=0 I $G(DIC(0))["X",ORD'=KEY Q
"RTN","ICDEXLK3",129,0)
 . F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK3",130,0)
 . . N STA S STA=1 S:VER>0 STA=$$LS(ROOT,IEN,CDT)
"RTN","ICDEXLK3",131,0)
 . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK3",132,0)
 . . I $G(DIC(0))'["A",$G(DIC(0))["O",ORD=KEY S CNT=CNT+1 Q:CNT>1
"RTN","ICDEXLK3",133,0)
 . . D FND^ICDEXLK5(ROOT,IEN,CDT,$G(SYS),$G(VER),1,OUT)
"RTN","ICDEXLK3",134,0)
 I '$D(^TMP(SUB,$J,"FND","IEN")) D
"RTN","ICDEXLK3",135,0)
 . S KEY=$$UP^XLFSTR(TXT),PRV=+($G(^TMP(SUB,$J,"SEL",0)))
"RTN","ICDEXLK3",136,0)
 . S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",137,0)
 . S EROOT=ROOT_"""BA""," S:+($G(SYS))>0&($D(@(ROOT_"""ABA"","_+($G(SYS))_")"))) EROOT=ROOT_"""ABA"","_+($G(SYS))_","
"RTN","ICDEXLK3",138,0)
 . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK3",139,0)
 . . S IEN=0 I $G(DIC(0))["X",ORD'=KEY Q
"RTN","ICDEXLK3",140,0)
 . . F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK3",141,0)
 . . . N STA S STA=1 S:VER>0 STA=$$LS(ROOT,IEN,CDT)
"RTN","ICDEXLK3",142,0)
 . . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK3",143,0)
 . . . I $G(DIC(0))'["A",$G(DIC(0))["O",ORD=KEY S CNT=CNT+1 Q:CNT>1
"RTN","ICDEXLK3",144,0)
 . . . D FND^ICDEXLK5(ROOT,IEN,CDT,$G(SYS),$G(VER),1,OUT)
"RTN","ICDEXLK3",145,0)
 D SEL^ICDEXLK5(ROOT,1)
"RTN","ICDEXLK3",146,0)
 Q
"RTN","ICDEXLK3",147,0)
 S STA=1 S:VER>0 STA=$$LS^ICDEXLK3(ROOT,IEN,CDT)
"RTN","ICDEXLK3",148,0)
 Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK3",149,0)
 ;                    
"RTN","ICDEXLK3",150,0)
 ; Miscellaneous
"RTN","ICDEXLK3",151,0)
TOK(X) ;   Parse Text into Tokens
"RTN","ICDEXLK3",152,0)
 K PARS D PAR^ICDTOKN($G(X),.PARS,1)
"RTN","ICDEXLK3",153,0)
 Q
"RTN","ICDEXLK3",154,0)
TOKEN(X,ROOT,SYS,ARY) ;   Parse Text into Tokens
"RTN","ICDEXLK3",155,0)
 D TOKEN^ICDTOKN($G(X),$G(ROOT),$G(SYS),.ARY)
"RTN","ICDEXLK3",156,0)
 Q
"RTN","ICDEXLK3",157,0)
SS ;   Show Select/Find Global Arrays
"RTN","ICDEXLK3",158,0)
 N NN,NC S NN="^TMP(""ICD9"","_$J_")",NC="^TMP(""ICD9"","_$J_","
"RTN","ICDEXLK3",159,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  D
"RTN","ICDEXLK3",160,0)
 . W !,NN,"=",@NN Q
"RTN","ICDEXLK3",161,0)
 S NN="^TMP(""ICD0"","_$J_")",NC="^TMP(""ICD0"","_$J_","
"RTN","ICDEXLK3",162,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  D
"RTN","ICDEXLK3",163,0)
 . W !,NN,"=",@NN Q
"RTN","ICDEXLK3",164,0)
 Q
"RTN","ICDEXLK3",165,0)
WORD(X,ROOT,SYS) ;   Word is contained in a Set
"RTN","ICDEXLK3",166,0)
 ;
"RTN","ICDEXLK3",167,0)
 ; Input 
"RTN","ICDEXLK3",168,0)
 ; 
"RTN","ICDEXLK3",169,0)
 ;   X      A single word (Required)
"RTN","ICDEXLK3",170,0)
 ;   
"RTN","ICDEXLK3",171,0)
 ;   ROOT   Global Root/File # to Search (Optional, if 
"RTN","ICDEXLK3",172,0)
 ;          not supplied both files 80 and 80.1 are used)
"RTN","ICDEXLK3",173,0)
 ;   
"RTN","ICDEXLK3",174,0)
 ;             ^ICD9(   or 80
"RTN","ICDEXLK3",175,0)
 ;             ^ICD0(   or 80.1
"RTN","ICDEXLK3",176,0)
 ;             
"RTN","ICDEXLK3",177,0)
 ;   SYS    Coding System  (Optional, if not supplied all
"RTN","ICDEXLK3",178,0)
 ;          coding systems for the file are used)
"RTN","ICDEXLK3",179,0)
 ;   
"RTN","ICDEXLK3",180,0)
 ;              1  or  ICD  or  ICD-9-CM
"RTN","ICDEXLK3",181,0)
 ;              2  or  ICP  or  ICD-9 Proc
"RTN","ICDEXLK3",182,0)
 ;             30  or  10D  or  ICD-10-CM
"RTN","ICDEXLK3",183,0)
 ;             31  or  10P  or  ICD-10-PCS
"RTN","ICDEXLK3",184,0)
 ;
"RTN","ICDEXLK3",185,0)
 ; Output (if successful)
"RTN","ICDEXLK3",186,0)
 ; 
"RTN","ICDEXLK3",187,0)
 ;   $$WORD  Boolean value
"RTN","ICDEXLK3",188,0)
 ;   
"RTN","ICDEXLK3",189,0)
 ;           1 = Word was found
"RTN","ICDEXLK3",190,0)
 ;           
"RTN","ICDEXLK3",191,0)
 ;               If ROOT is not supplied, the word was found in 
"RTN","ICDEXLK3",192,0)
 ;               either file 80 or 80.1
"RTN","ICDEXLK3",193,0)
 ;               
"RTN","ICDEXLK3",194,0)
 ;               If SYS is not supplied, the word was found in 
"RTN","ICDEXLK3",195,0)
 ;               the file designated by ROOT in any coding system
"RTN","ICDEXLK3",196,0)
 ;               in the file
"RTN","ICDEXLK3",197,0)
 ;               
"RTN","ICDEXLK3",198,0)
 ;               If both ROOT and SYS are supplied, the word was
"RTN","ICDEXLK3",199,0)
 ;               found in the specified coding system
"RTN","ICDEXLK3",200,0)
 ;               
"RTN","ICDEXLK3",201,0)
 ;           0 = Word was not found
"RTN","ICDEXLK3",202,0)
 ;           
"RTN","ICDEXLK3",203,0)
 N TKN S TKN=$G(X),X=0 Q:'$L(TKN) 0  S ROOT=$$ROOT^ICDEX($G(ROOT)),SYS=$$SYS^ICDEX($G(SYS))
"RTN","ICDEXLK3",204,0)
 I '$L(ROOT)!(ROOT'["^")!(ROOT'["(") D  Q X
"RTN","ICDEXLK3",205,0)
 . N TRT,FI F FI=80,80.1 S TRT=$$ROOT^ICDEX(FI) D
"RTN","ICDEXLK3",206,0)
 . . I +SYS'>0!('$D(^ICDS(+SYS))) D
"RTN","ICDEXLK3",207,0)
 . . . N SYS S SYS=0 F  S SYS=$O(@(TRT_"""AD"","_SYS_")")) Q:+SYS'>0  D
"RTN","ICDEXLK3",208,0)
 . . . . S:$D(@(TRT_"""AD"","_SYS_","""_TKN_""")")) X=1
"RTN","ICDEXLK3",209,0)
 . . I +SYS>0&('$D(^ICDS(+SYS))) D
"RTN","ICDEXLK3",210,0)
 . . . S:$D(@(TRT_"""AD"","_+SYS_","""_TKN_""")")) X=1
"RTN","ICDEXLK3",211,0)
 I +SYS'>0!('$D(^ICDS(+SYS))) D  Q X
"RTN","ICDEXLK3",212,0)
 . N SYS S SYS=0 F  S SYS=$O(@(ROOT_"""AD"","_SYS_")")) Q:+SYS'>0  D
"RTN","ICDEXLK3",213,0)
 . . S:$D(@(ROOT_"""AD"","_SYS_","""_TKN_""")")) X=1
"RTN","ICDEXLK3",214,0)
 Q:'$L(ROOT)!(ROOT'["^")!(ROOT'["(") 0
"RTN","ICDEXLK3",215,0)
 Q:+SYS'>0!('$D(^ICDS(+SYS))) 0
"RTN","ICDEXLK3",216,0)
 S:$D(@(ROOT_"""AD"","_+SYS_","""_TKN_""")")) X=1
"RTN","ICDEXLK3",217,0)
 Q X
"RTN","ICDEXLK3",218,0)
LS(ROOT,IEN,VDT) ;   Last Status
"RTN","ICDEXLK3",219,0)
 N EFF,HIS,STA,CDT S IEN=+($G(IEN)),ROOT=$G(ROOT),VDT=$$CDT($G(VDT))
"RTN","ICDEXLK3",220,0)
 Q:+IEN'>0 "-1"  Q:'$L(ROOT) "-1"  Q:VDT'?7N "-1"  S CDT=VDT+.00001
"RTN","ICDEXLK3",221,0)
 S EFF=$O(@(ROOT_+IEN_",66,""B"","_CDT_")"),-1) Q:EFF'?7N "-1"
"RTN","ICDEXLK3",222,0)
 S HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","" "")"),-1) Q:+HIS'>0 "-1"
"RTN","ICDEXLK3",223,0)
 S STA=$G(@(ROOT_+IEN_",66,"_+HIS_",0)")) Q:'$L(STA) "-1"
"RTN","ICDEXLK3",224,0)
 S EFF=$P(STA,"^",1),STA=$P(STA,"^",2) Q:EFF'?7N "-1"  Q:STA'?1N "-1"
"RTN","ICDEXLK3",225,0)
 S X=STA_"^"_EFF
"RTN","ICDEXLK3",226,0)
 Q X
"RTN","ICDEXLK3",227,0)
LD(ROOT,IEN,VDT,VER) ;   Last Description
"RTN","ICDEXLK3",228,0)
 N EFF,LDI,LDS,CDT S IEN=+($G(IEN)),ROOT=$G(ROOT),VDT=$$CDT($G(VDT))
"RTN","ICDEXLK3",229,0)
 Q:+IEN'>0 ""  Q:'$L(ROOT) ""  Q:VDT'?7N ""  S CDT=VDT+.00001
"RTN","ICDEXLK3",230,0)
 S EFF=$O(@(ROOT_+IEN_",68,""B"","_CDT_")"),-1)
"RTN","ICDEXLK3",231,0)
 Q:+($G(VER))>0&(EFF'?7N) ""
"RTN","ICDEXLK3",232,0)
 S:+($G(VER))'>0&(EFF'?7N) EFF=$O(@(ROOT_+IEN_",68,""B"",0)"))
"RTN","ICDEXLK3",233,0)
 S LDI=$O(@(ROOT_+IEN_",68,""B"","_+EFF_","" "")"),-1) Q:+LDI'>0 ""
"RTN","ICDEXLK3",234,0)
 S LDS=$$UP^XLFSTR($G(@(ROOT_+IEN_",68,"_+LDI_",1)"))) Q:'$L(LDS) ""
"RTN","ICDEXLK3",235,0)
 S X=LDS
"RTN","ICDEXLK3",236,0)
 Q X
"RTN","ICDEXLK3",237,0)
ISCODE(X,ROOT) ;   Check if Text is a Code
"RTN","ICDEXLK3",238,0)
 N KEY,ORG,LAS,ORD,OUT,SI,SYS
"RTN","ICDEXLK3",239,0)
 S KEY=$G(X) Q:'$L($TR(KEY,"""","")) 0
"RTN","ICDEXLK3",240,0)
 S ORG=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",241,0)
 S OUT=0,SI=0
"RTN","ICDEXLK3",242,0)
 F  S SI=$O(^ICDS(SI)) Q:+SI'>0  D  Q:+OUT>0
"RTN","ICDEXLK3",243,0)
 . N ORD,RES S ORD=ORG
"RTN","ICDEXLK3",244,0)
 . S RES=$O(@(ROOT_"""ABA"","_+SI_","""_ORD_""")"))
"RTN","ICDEXLK3",245,0)
 . Q:'$L(RES)  S:$E(RES,$L(RES))=" " RES=$E(RES,1,($L(RES)-1))
"RTN","ICDEXLK3",246,0)
 . I RES=KEY S OUT="1^"_SI_"^"_KEY Q
"RTN","ICDEXLK3",247,0)
 . I $L(KEY)<$L(RES),KEY=$E(RES,1,$L(KEY)) S OUT="1^"_SI_"^"_KEY
"RTN","ICDEXLK3",248,0)
 S KEY=$$UP^XLFSTR($G(X))
"RTN","ICDEXLK3",249,0)
 S ORG=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",250,0)
 S SI=0 F  S SI=$O(^ICDS(SI)) Q:+SI'>0  D  Q:+OUT>0
"RTN","ICDEXLK3",251,0)
 . N ORD,RES S ORD=ORG
"RTN","ICDEXLK3",252,0)
 . S RES=$O(@(ROOT_"""ABA"","_+SI_","""_ORD_""")"))
"RTN","ICDEXLK3",253,0)
 . Q:'$L(RES)  S:$E(RES,$L(RES))=" " RES=$E(RES,1,($L(RES)-1))
"RTN","ICDEXLK3",254,0)
 . I RES=KEY S OUT="1^"_SI_"^"_KEY Q
"RTN","ICDEXLK3",255,0)
 . I $L(KEY)<$L(RES),KEY=$E(RES,1,$L(KEY)) S OUT="1^"_SI_"^"_KEY
"RTN","ICDEXLK3",256,0)
 Q:+OUT>0 OUT
"RTN","ICDEXLK3",257,0)
 Q 0
"RTN","ICDEXLK3",258,0)
UNQ(X,ROOT) ;   Check if Text is a Unique Code
"RTN","ICDEXLK3",259,0)
 ;
"RTN","ICDEXLK3",260,0)
 ; Input
"RTN","ICDEXLK3",261,0)
 ; 
"RTN","ICDEXLK3",262,0)
 ;   X      Input String/Code
"RTN","ICDEXLK3",263,0)
 ;   ROOT   Global Root of file
"RTN","ICDEXLK3",264,0)
 ;   
"RTN","ICDEXLK3",265,0)
 ; Output
"RTN","ICDEXLK3",266,0)
 ; 
"RTN","ICDEXLK3",267,0)
 ;   $$UNQ  3 Piece ^ delimited string
"RTN","ICDEXLK3",268,0)
 ;   
"RTN","ICDEXLK3",269,0)
 ;             Piece  Content
"RTN","ICDEXLK3",270,0)
 ;             1      String is Unique in file
"RTN","ICDEXLK3",271,0)
 ;                       1 if X is unique
"RTN","ICDEXLK3",272,0)
 ;                       0 if X is not unique
"RTN","ICDEXLK3",273,0)
 ;             2      String is a Code
"RTN","ICDEXLK3",274,0)
 ;                       1 is a code
"RTN","ICDEXLK3",275,0)
 ;                       0 X is not a code
"RTN","ICDEXLK3",276,0)
 ;             3      String has Multiple Entries
"RTN","ICDEXLK3",277,0)
 ;                       1 Yes, X occurs more than once
"RTN","ICDEXLK3",278,0)
 ;                       0 No, X occurs once (aka unique)
"RTN","ICDEXLK3",279,0)
 ;             
"RTN","ICDEXLK3",280,0)
 ;          or -1 if the code string X is not found
"RTN","ICDEXLK3",281,0)
 ;
"RTN","ICDEXLK3",282,0)
 N KEY,ORG,LAS,ORD,OUT,IENS,IEN,NXT,NIEN,SI,SYS Q:'$L($G(X)) -1
"RTN","ICDEXLK3",283,0)
 S KEY=$TR($G(X),"""","") Q:'$L(KEY) -1
"RTN","ICDEXLK3",284,0)
 S ORG=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK3",285,0)
 S OUT=-1,(IEN,NXT,SI)=0
"RTN","ICDEXLK3",286,0)
 F  S SI=$O(@(ROOT_"""ABA"","_+SI_")")) Q:+SI'>0  D  Q:OUT>0  Q:+IEN>0  Q:+NXT>0
"RTN","ICDEXLK3",287,0)
 . N ORD S ORD=ORG S IEN=$O(@(ROOT_"""ABA"","_+SI_","""_KEY_" "",0)"))
"RTN","ICDEXLK3",288,0)
 . S (NXT,NIEN)=0
"RTN","ICDEXLK3",289,0)
 . F  S ORD=$O(@(ROOT_"""ABA"","_+SI_","""_ORD_""")")) Q:'$L(ORD)  Q:$E(ORD,1,$L(KEY))'=KEY  D
"RTN","ICDEXLK3",290,0)
 . . S NIEN=0 F  S NIEN=$O(@(ROOT_"""ABA"","_+SI_","""_ORD_""","_NIEN_")")) Q:+NIEN'>0  D
"RTN","ICDEXLK3",291,0)
 . . . S:ORD'=(KEY_" ") IENS(+NIEN)=""
"RTN","ICDEXLK3",292,0)
 S (NXT,NIEN)=0 F  S NIEN=$O(IENS(NIEN)) Q:+NIEN'>0  S NXT=NXT+1
"RTN","ICDEXLK3",293,0)
 S:+IEN>0 $P(OUT,"^",1)=1,$P(OUT,"^",2)=1
"RTN","ICDEXLK3",294,0)
 I +IEN>0 S:+NXT>0 $P(OUT,"^",3)=1,$P(OUT,"^",1)=0
"RTN","ICDEXLK3",295,0)
 I +($G(OUT))'<0 F SI=1:1:3 S $P(OUT,"^",SI)=+($P($G(OUT),"^",SI))
"RTN","ICDEXLK3",296,0)
 I NXT>0,+IEN'>0 S OUT=$S(NXT>1:0,1:1)_"^0^"_$S(NXT>1:1,1:0)
"RTN","ICDEXLK3",297,0)
 S X=OUT
"RTN","ICDEXLK3",298,0)
 Q X
"RTN","ICDEXLK3",299,0)
ISORD(X) ;   Check if in $ORDER
"RTN","ICDEXLK3",300,0)
 Q:'$L($G(ORD)) 0  Q:'$L($G(KEY)) 0
"RTN","ICDEXLK3",301,0)
 Q:$E($G(ORD),1,$L($G(KEY)))=$G(KEY) 1
"RTN","ICDEXLK3",302,0)
 Q 0
"RTN","ICDEXLK3",303,0)
CDT(X,Y) ;   ICD-10 Code Set Date
"RTN","ICDEXLK3",304,0)
 N CDT,SYS S CDT=$G(X),SYS=+($G(Y)) S:CDT'?7N CDT=$$DT^XLFDT
"RTN","ICDEXLK3",305,0)
 Q X
"RTN","ICDEXLK3",306,0)
SYS(ROOT,CDT) ;   System from File and Date
"RTN","ICDEXLK3",307,0)
 N FILE,CTL,FDT,NDT,IEN,SYS S (NDT,SYS)=0
"RTN","ICDEXLK3",308,0)
 S FILE=$S($G(ROOT)="^ICD9(":80,$G(ROOT)="^ICD0(":80.1,1:"") Q:FILE'>0 0
"RTN","ICDEXLK3",309,0)
 S CTL=$G(CDT) Q:CTL'?7N 0
"RTN","ICDEXLK3",310,0)
 S IEN=0 F  S IEN=$O(^ICDS("F",FILE,IEN)) Q:+IEN'>0  D
"RTN","ICDEXLK3",311,0)
 . S FDT=$P($G(^ICDS(+IEN,0)),"^",4) Q:FDT'?7N
"RTN","ICDEXLK3",312,0)
 . I FDT<(CTL+.001),FDT>NDT S FDT=CTL,SYS=IEN
"RTN","ICDEXLK3",313,0)
 Q SYS
"RTN","ICDEXLK3",314,0)
SH ;   Show TMP
"RTN","ICDEXLK3",315,0)
 N SUB,NN,NC S SUB="ICD9" S:'$D(^TMP(SUB)) SUB="ICD0" Q:'$D(^TMP(SUB))
"RTN","ICDEXLK3",316,0)
 S NN="^TMP("""_SUB_""","_$J_")",NC="^TMP("""_SUB_""","_$J_","
"RTN","ICDEXLK3",317,0)
 W:'$D(@NN) ! Q:'$D(@NN)  F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","ICDEXLK3",318,0)
 W !
"RTN","ICDEXLK3",319,0)
 Q
"RTN","ICDEXLK3",320,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK3",321,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK3",322,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK3",323,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK3",324,0)
 Q X
"RTN","ICDEXLK4")
0^7^B25474563
"RTN","ICDEXLK4",1,0)
ICDEXLK4 ;SLC/KER - ICD Extractor - Lookup, Search Text ;12/19/2014
"RTN","ICDEXLK4",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXLK4",3,0)
 ;               
"RTN","ICDEXLK4",4,0)
 ; Global Variables
"RTN","ICDEXLK4",5,0)
 ;    ^TMP(SUB,$J         SACC 2.3.2.5.1
"RTN","ICDEXLK4",6,0)
 ;               
"RTN","ICDEXLK4",7,0)
 ; External References
"RTN","ICDEXLK4",8,0)
 ;    $$LOW^XLFSTR        ICR  10104
"RTN","ICDEXLK4",9,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK4",10,0)
 ;               
"RTN","ICDEXLK4",11,0)
 ; Local Variables Newed or Killed by calling application
"RTN","ICDEXLK4",12,0)
 ;     DIC(0)    Fileman Lookup Parameters
"RTN","ICDEXLK4",13,0)
 ;     
"RTN","ICDEXLK4",14,0)
 ; Local Variables Newed or Killed Elsewhere
"RTN","ICDEXLK4",15,0)
 ;     ICDBYCD   Sort by Code
"RTN","ICDEXLK4",16,0)
 ;     CDT       Code Set Date
"RTN","ICDEXLK4",17,0)
 ;     OUT       Format of display
"RTN","ICDEXLK4",18,0)
 ;     SYS       Coding System
"RTN","ICDEXLK4",19,0)
 ;     VER       Versioned Lookup
"RTN","ICDEXLK4",20,0)
 ;     SUB       ^TMP Subscript
"RTN","ICDEXLK4",21,0)
 ;     SYS       Coding System
"RTN","ICDEXLK4",22,0)
 ;
"RTN","ICDEXLK4",23,0)
TXT ; Lookup by Text (Requires TXT and ROOT)
"RTN","ICDEXLK4",24,0)
 Q:$D(ICDBYCD)  Q:'$L($G(TXT))  Q:'$L($G(ROOT))  Q:$L(TXT)'>1  Q:$G(DIC(0))["B"
"RTN","ICDEXLK4",25,0)
 S CDT=$$CDT^ICDEXLK3($G(CDT)) N PARS,ORG,CNT,PRV,EROOT,KEY,LOOK,EXACT,ABBR,PRIME
"RTN","ICDEXLK4",26,0)
 S:'$L($G(SUB)) SUB=$TR(ROOT,"^(,","")
"RTN","ICDEXLK4",27,0)
 S LOOK=TXT,PRV=+($G(^TMP(SUB,$J,"SEL",0))),(EXACT,ABBR)=0
"RTN","ICDEXLK4",28,0)
 S CNT=0,ORG=$$UP^XLFSTR($G(TXT)) K PARS D TOKEN^ICDTOKN(TXT,ROOT,$G(SYS),.PARS)
"RTN","ICDEXLK4",29,0)
 S NUM=$O(PARS(0)),(PRIME,KEY)=$G(PARS(+NUM)) S:+($G(PARS(+NUM,"A")))>0 ABBR=1
"RTN","ICDEXLK4",30,0)
 K:NUM>0 PARS(+NUM) S:NUM>0&($G(PARS(0))>0) PARS(0)=$G(PARS(0))-1 Q:$L(KEY)'>1
"RTN","ICDEXLK4",31,0)
 S EROOT=ROOT_"""D""," S:+($G(SYS))>0&($D(@(ROOT_"""AD"","_+($G(SYS))_")"))) EROOT=ROOT_"""AD"","_+($G(SYS))_","
"RTN","ICDEXLK4",32,0)
 S EXACT=0 I $O(PARS(0))'>0,$L(PRIME),$D(@(EROOT_""""_PRIME_""")")) S EXACT=1
"RTN","ICDEXLK4",33,0)
 I EXACT>0!(ABBR>0) D
"RTN","ICDEXLK4",34,0)
 . N ORD,STR,TKN S STR=PRIME F TKN=STR,(STR_"S"),(STR_"ES") D
"RTN","ICDEXLK4",35,0)
 . . S ORD=TKN I $D(@(EROOT_""""_ORD_""")")) D TXT2
"RTN","ICDEXLK4",36,0)
 I EXACT'>0&(ABBR'>0) D
"RTN","ICDEXLK4",37,0)
 . N ORD,STR,TKN S STR=PRIME F TKN=STR,(STR_"S"),(STR_"ES") D
"RTN","ICDEXLK4",38,0)
 . . S ORD=$E(TKN,1,($L(TKN)-1))_$C(($A($E(TKN,$L(TKN)))-1))_"~"
"RTN","ICDEXLK4",39,0)
 . . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD^ICDEXLK3  D TXT2
"RTN","ICDEXLK4",40,0)
 D:$D(^TMP(SUB,$J,"FND")) SEL^ICDEXLK5(ROOT,0)
"RTN","ICDEXLK4",41,0)
 Q
"RTN","ICDEXLK4",42,0)
TXT2 ;   Lookup by Text (loop)
"RTN","ICDEXLK4",43,0)
 N IEN S IEN=0 F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK4",44,0)
 . N OK,NUM,TDT,TIE,TXT,KEY,VDT S VDT=+CDT+.000001
"RTN","ICDEXLK4",45,0)
 . S TDT=$O(@(EROOT_""""_ORD_""","_+IEN_","_VDT_")"),-1)
"RTN","ICDEXLK4",46,0)
 . I +($G(VER))'>0,TDT'?7N D
"RTN","ICDEXLK4",47,0)
 . . S TDT=$O(@(EROOT_""""_ORD_""","_+IEN_","_(+CDT-.000001)_")"))
"RTN","ICDEXLK4",48,0)
 . Q:TDT'?7N  S TIE=$O(@(EROOT_""""_ORD_""","_+IEN_","_+TDT_",0)"))
"RTN","ICDEXLK4",49,0)
 . S TXT=$$UP^XLFSTR($G(@(ROOT_+IEN_",68,"_+TIE_",1)")))
"RTN","ICDEXLK4",50,0)
 . I $G(DIC(0))'["A",$G(DIC(0))["O" D  Q
"RTN","ICDEXLK4",51,0)
 . . Q:CNT>1  I ORG=TXT D FND^ICDEXLK5(ROOT,IEN,CDT,$G(SYS),$G(VER),0,$G(OUT)) S CNT=CNT+1
"RTN","ICDEXLK4",52,0)
 . S OK=1,NUM=0
"RTN","ICDEXLK4",53,0)
 . F  S NUM=$O(PARS(NUM)) Q:+NUM'>0  D
"RTN","ICDEXLK4",54,0)
 . . N EXACT,PR,OR,SP,IN,AB S PR=$G(PARS(NUM)),AB=+($G(PARS(+NUM,"A")))
"RTN","ICDEXLK4",55,0)
 . . I AB'>0 S IN=$$IN(TXT,PR),SP=$$SI(ROOT,+IEN,+TIE,PR)
"RTN","ICDEXLK4",56,0)
 . . I AB>0 S IN=$$EX(TXT,PR),SP=$$SE(ROOT,+IEN,+TIE,PR)
"RTN","ICDEXLK4",57,0)
 . . S:IN'>0&(SP'>0) OK=0
"RTN","ICDEXLK4",58,0)
 . D:+OK>0 FND^ICDEXLK5(ROOT,IEN,CDT,$G(SYS),$G(VER),0,$G(OUT))
"RTN","ICDEXLK4",59,0)
 Q
"RTN","ICDEXLK4",60,0)
 ; 
"RTN","ICDEXLK4",61,0)
 ; Miscellaneous
"RTN","ICDEXLK4",62,0)
SE(RT,IE,TI,X) ;   Supplemental Word (exact match exist)
"RTN","ICDEXLK4",63,0)
 N CNTL,IIEN,PLUR,TEXT,ROOT,TIEN
"RTN","ICDEXLK4",64,0)
 S CNTL=$$UP^XLFSTR($G(X)) Q:'$L(CNTL) 0
"RTN","ICDEXLK4",65,0)
 S ROOT=$$ROOT^ICDEX($G(RT)) Q:'$L(ROOT) 0
"RTN","ICDEXLK4",66,0)
 S IIEN=+($G(IE)),TIEN=+($G(TI))
"RTN","ICDEXLK4",67,0)
 S TEXT=$$UP^XLFSTR($G(@(ROOT_+IIEN_",68,"_+TIEN_",1)"))) Q:'$L(TEXT) 0
"RTN","ICDEXLK4",68,0)
 Q:'$D(@(ROOT_+IIEN_",68,"_+TIEN_",2,""B"","""_CNTL_""")")) 0
"RTN","ICDEXLK4",69,0)
 S PLUR=$$EX(TEXT,(CNTL_"S")) Q:PLUR>0 0
"RTN","ICDEXLK4",70,0)
 Q 1
"RTN","ICDEXLK4",71,0)
SI(RT,IE,TI,X) ;   Supplemental Word (match exist)
"RTN","ICDEXLK4",72,0)
 N CNTL,IIEN,PLUR,TEXT,NEXT,TIEN,ORDR,ROOT
"RTN","ICDEXLK4",73,0)
 S CNTL=$$UP^XLFSTR($G(X)) Q:'$L(CNTL) 0
"RTN","ICDEXLK4",74,0)
 S ROOT=$$ROOT^ICDEX($G(RT)) Q:'$L(ROOT) 0
"RTN","ICDEXLK4",75,0)
 S IIEN=+($G(IE)),TIEN=+($G(TI))
"RTN","ICDEXLK4",76,0)
 S:CNTL?1N.N ORDR=CNTL-.00000000000000009 I CNTL'?1N.N D
"RTN","ICDEXLK4",77,0)
 . S:$L(CNTL)=1 ORDR=$C($A(CNTL)-1)_"~"
"RTN","ICDEXLK4",78,0)
 . S:$L(CNTL)>1 ORDR=$E(CNTL,1,($L(CNTL)-1))_$C($A($E(CNTL,$L(CNTL)))-1)_"~"
"RTN","ICDEXLK4",79,0)
 S NEXT=$O(@(ROOT_+IIEN_",68,"_+TIEN_",2,""B"","""_ORDR_""")"))
"RTN","ICDEXLK4",80,0)
 Q:$E(NEXT,1,$L(CNTL))=CNTL 1
"RTN","ICDEXLK4",81,0)
 Q 0
"RTN","ICDEXLK4",82,0)
EX(X,Y) ;   String Y is exactly in X
"RTN","ICDEXLK4",83,0)
 N CON,CNTL,TEXT,EXACT S TEXT=$G(X),CNTL=$G(Y),EXACT=1
"RTN","ICDEXLK4",84,0)
 S CON=$$CON(TEXT,CNTL) S X=+($G(CON))
"RTN","ICDEXLK4",85,0)
 Q X
"RTN","ICDEXLK4",86,0)
IN(X,Y) ;   String Y is contained in X
"RTN","ICDEXLK4",87,0)
 N CON,CNTL,TEXT S TEXT=$G(X),CNTL=$G(Y)
"RTN","ICDEXLK4",88,0)
 S CON=$$CON(TEXT,CNTL) S X=+($G(CON))
"RTN","ICDEXLK4",89,0)
 Q X
"RTN","ICDEXLK4",90,0)
CON(X,Y) ;   Text X Contains String Y
"RTN","ICDEXLK4",91,0)
 N CNTL,CONT,TEXT,LEAD,TRAIL,STR
"RTN","ICDEXLK4",92,0)
 S TEXT=$$UP^XLFSTR($G(X)),CNTL=$$UP^XLFSTR($G(Y))
"RTN","ICDEXLK4",93,0)
 Q:'$L(TEXT) 0  Q:'$L(CNTL) 0  Q:$L(CNTL)>$L(TEXT) 0
"RTN","ICDEXLK4",94,0)
 S (X,CONT)=0 I +($G(EXACT))>0 S X=0 D  Q X
"RTN","ICDEXLK4",95,0)
 . F TRAIL=" ","-","(","<","{","[","," D  Q:CONT>0
"RTN","ICDEXLK4",96,0)
 . . N STR S STR=CNTL_TRAIL S:$E(TEXT,1,$L(STR))=STR CONT=1 S:CONT>0 X=CONT
"RTN","ICDEXLK4",97,0)
 . Q:CONT>0  F LEAD=" ","-","(","<","{","[","," D  Q:CONT>0
"RTN","ICDEXLK4",98,0)
 . . N STR S STR=LEAD_CNTL S:$E(TEXT,($L(TEXT)-$L(STR)),$L(TEXT))=STR CONT=1 S:CONT>0 X=CONT
"RTN","ICDEXLK4",99,0)
 . Q:CONT>0  F LEAD=" ","-","(","<","{","[","," D  Q:CONT>0
"RTN","ICDEXLK4",100,0)
 . . F TRAIL=" ","-",")",">","}","]","," D  Q:CONT>0
"RTN","ICDEXLK4",101,0)
 . . . N STR S STR=LEAD_CNTL_TRAIL S:TEXT[STR CONT=1 S:CONT>0 X=CONT
"RTN","ICDEXLK4",102,0)
 . S:CONT>0 X=CONT
"RTN","ICDEXLK4",103,0)
 S:$E(TEXT,1,$L(CNTL))=CNTL CONT=1
"RTN","ICDEXLK4",104,0)
 S:CONT>0 X=CONT Q:CONT>0 X
"RTN","ICDEXLK4",105,0)
 F LEAD=" ","-","(","<","{","[","," D  Q:CONT>0
"RTN","ICDEXLK4",106,0)
 . N STR S STR=LEAD_CNTL S:TEXT[STR CONT=1 S:CONT>0 X=CONT
"RTN","ICDEXLK4",107,0)
 Q:CONT>0 X  F LEAD=" ","-","(","<","{","[","," D  Q:CONT>0
"RTN","ICDEXLK4",108,0)
 . N TRAIL F TRAIL=" ","-",")",">","}","]","," D  Q:CONT>0
"RTN","ICDEXLK4",109,0)
 . . N STR S STR=LEAD_CNTL_TRAIL S:TEXT[STR CONT=1 S:CONT>0 X=CONT
"RTN","ICDEXLK4",110,0)
 S:CONT>0 X=CONT
"RTN","ICDEXLK4",111,0)
 Q X
"RTN","ICDEXLK4",112,0)
LC(X) ;   Leading Character
"RTN","ICDEXLK4",113,0)
 S X=$G(X) S X=$$UP^XLFSTR($E(X,1))_$$LOW^XLFSTR($E(X,2,$L(X)))
"RTN","ICDEXLK4",114,0)
 Q X
"RTN","ICDEXLK4",115,0)
SS ;   Show Select/Find Global Arrays
"RTN","ICDEXLK4",116,0)
 N NN,NC,EX S EX=0 S NN="^TMP(""ICD9"","_$J_")",NC="^TMP(""ICD9"","_$J_","
"RTN","ICDEXLK4",117,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  D  Q:EX>20
"RTN","ICDEXLK4",118,0)
 . W !,NN,"=",$E(@NN,1,48) S EX=EX+1
"RTN","ICDEXLK4",119,0)
 S EX=0 S NN="^TMP(""ICD0"","_$J_")",NC="^TMP(""ICD0"","_$J_","
"RTN","ICDEXLK4",120,0)
 F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  D  Q:EX>20
"RTN","ICDEXLK4",121,0)
 . W !,NN,"=",$E(@NN,1,48) S EX=EX+1
"RTN","ICDEXLK4",122,0)
 Q
"RTN","ICDEXLK5")
0^8^B69728185
"RTN","ICDEXLK5",1,0)
ICDEXLK5 ;SLC/KER - ICD Extractor - Lookup, EXM/IEN/List ;12/19/2014
"RTN","ICDEXLK5",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXLK5",3,0)
 ;               
"RTN","ICDEXLK5",4,0)
 ; Global Variables
"RTN","ICDEXLK5",5,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXLK5",6,0)
 ;    ^TMP(SUB,$J         SACC 2.3.2.5.1
"RTN","ICDEXLK5",7,0)
 ;               
"RTN","ICDEXLK5",8,0)
 ; External References
"RTN","ICDEXLK5",9,0)
 ;    $$MIX^LEXXM         ICR   5781
"RTN","ICDEXLK5",10,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK5",11,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXLK5",12,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK5",13,0)
 ;    
"RTN","ICDEXLK5",14,0)
 ; Marked Items
"RTN","ICDEXLK5",15,0)
 ;    $T(MIX^LEXXM)
"RTN","ICDEXLK5",16,0)
 ;    
"RTN","ICDEXLK5",17,0)
 ; Local Variables Newed or Killed by calling application
"RTN","ICDEXLK5",18,0)
 ;     DIC(0)    Fileman Lookup Parameters
"RTN","ICDEXLK5",19,0)
 ;     DIC("S")  Fileman Screen
"RTN","ICDEXLK5",20,0)
 ;     
"RTN","ICDEXLK5",21,0)
 ; Local Variables Newed or Killed Elsewhere
"RTN","ICDEXLK5",22,0)
 ;     ICDBYCD   Sort by Code
"RTN","ICDEXLK5",23,0)
 ;     ICDCDT    Code Set Date
"RTN","ICDEXLK5",24,0)
 ;     ICDOUT    Format of display
"RTN","ICDEXLK5",25,0)
 ;     ICDVDT    Date to use during lookup 
"RTN","ICDEXLK5",26,0)
 ;     ICDSYS    Coding System
"RTN","ICDEXLK5",27,0)
 ;     ICDVER    Versioned Lookup
"RTN","ICDEXLK5",28,0)
 ;     ICDDICS   Screen
"RTN","ICDEXLK5",29,0)
 ;     INP2      User Input (processed)
"RTN","ICDEXLK5",30,0)
 ;     LOUD      Output to Screen
"RTN","ICDEXLK5",31,0)
 ;     
"RTN","ICDEXLK5",32,0)
 Q
"RTN","ICDEXLK5",33,0)
EXM(TXT,ROOT,Y,CDT,SYS,VER) ; Lookup Exact Match
"RTN","ICDEXLK5",34,0)
 ;
"RTN","ICDEXLK5",35,0)
 ;   Input   TXT    Text/Code for search (Required)
"RTN","ICDEXLK5",36,0)
 ;           ROOT   Global Root (Required)
"RTN","ICDEXLK5",37,0)
 ;          .Y      Output array passed by reference (Required)
"RTN","ICDEXLK5",38,0)
 ;           CDT    Date
"RTN","ICDEXLK5",39,0)
 ;           SYS    Coding System
"RTN","ICDEXLK5",40,0)
 ;           VER    Versioned Search
"RTN","ICDEXLK5",41,0)
 ;   
"RTN","ICDEXLK5",42,0)
 ;   Output  $$EM   Number of Exact Matches Found
"RTN","ICDEXLK5",43,0)
 ;           Y(n)   Array of Exact Matches
"RTN","ICDEXLK5",44,0)
 ;   
"RTN","ICDEXLK5",45,0)
 N EXM,KEY,ORD,ICDI,IEN,NUM,ORG,EROOT S ORG=$G(TXT) Q:'$L($G(ORG)) 0
"RTN","ICDEXLK5",46,0)
 Q:'$L($TR(ORG,"""","")) 0  S ROOT=$G(ROOT)  Q:'$L($G(ROOT)) 0
"RTN","ICDEXLK5",47,0)
 S SYS=+($G(SYS)),VER=+($G(VER))
"RTN","ICDEXLK5",48,0)
 S CDT=$$CDT^ICDEXLK3($G(CDT),SYS)
"RTN","ICDEXLK5",49,0)
 ; Exact Match Case Sensitive Code
"RTN","ICDEXLK5",50,0)
 S KEY=ORG,KEY=ORG S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK5",51,0)
 S EROOT=ROOT_"""BA""," S:+SYS>0&($D(@(ROOT_"""ABA"","_+SYS_")"))) EROOT=ROOT_"""ABA"","_+SYS_","
"RTN","ICDEXLK5",52,0)
 F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK5",53,0)
 . S IEN=0 F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK5",54,0)
 . . N VAL,STA S STA=1
"RTN","ICDEXLK5",55,0)
 . . S:VER>0 STA=$$LS^ICDEXLK3(ROOT,IEN,CDT)
"RTN","ICDEXLK5",56,0)
 . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK5",57,0)
 . . S VAL=$P($G(@(ROOT_+IEN_",0)")),"^",1)
"RTN","ICDEXLK5",58,0)
 . . Q:VAL'=ORG  S EXM(IEN)="",LOR=1
"RTN","ICDEXLK5",59,0)
 ; Exact Match Code
"RTN","ICDEXLK5",60,0)
 I $O(EXM(0))'>0 D
"RTN","ICDEXLK5",61,0)
 . S KEY=$$UP^XLFSTR(ORG),KEY=ORG S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~ "
"RTN","ICDEXLK5",62,0)
 . S EROOT=ROOT_"""BA""," S:+SYS>0&($D(@(ROOT_"""ABA"","_+SYS_")"))) EROOT=ROOT_"""ABA"","_+SYS_","
"RTN","ICDEXLK5",63,0)
 . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK5",64,0)
 . . S IEN=0 F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK5",65,0)
 . . . N VAL,STA S STA=1 S:VER>0 STA=$$LS^ICDEXLK3(ROOT,IEN,CDT)
"RTN","ICDEXLK5",66,0)
 . . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK5",67,0)
 . . . S VAL=$P($G(@(ROOT_+IEN_",0)")),"^",1)
"RTN","ICDEXLK5",68,0)
 . . . Q:VAL'=ORG  S EXM(IEN)="",LOR=1
"RTN","ICDEXLK5",69,0)
 ; Exact Match Text
"RTN","ICDEXLK5",70,0)
 I $O(EXM(0))'>0 D
"RTN","ICDEXLK5",71,0)
 . Q:$D(ICDBYCD)  S KEY=$$UP^XLFSTR($G(ORG)) K PARS D TOKEN^ICDEXLK3(KEY,ROOT,SYS,.PARS)
"RTN","ICDEXLK5",72,0)
 . S NUM=$O(PARS(0)),SEQ=$O(PARS(+NUM,0)),KEY=$G(PARS(+NUM,+SEQ))
"RTN","ICDEXLK5",73,0)
 . K PARS(+NUM,+SEQ)  Q:$L(KEY)'>1
"RTN","ICDEXLK5",74,0)
 . S ORD=$E(KEY,1,($L(KEY)-1))_$C(($A($E(KEY,$L(KEY)))-1))_"~"
"RTN","ICDEXLK5",75,0)
 . S EROOT=ROOT_"""D""," S:+SYS>0&($D(@(ROOT_"""AD"","_+SYS_")"))) EROOT=ROOT_"""AD"","_+SYS_","
"RTN","ICDEXLK5",76,0)
 . F  S ORD=$O(@(EROOT_""""_ORD_""")")) Q:'$$ISORD  D
"RTN","ICDEXLK5",77,0)
 . . S IEN=0 I $G(DIC(0))["X",ORD'=KEY Q
"RTN","ICDEXLK5",78,0)
 . . F  S IEN=$O(@(EROOT_""""_ORD_""","_+IEN_")")) Q:+IEN'>0  D
"RTN","ICDEXLK5",79,0)
 . . . N VAL,STA S STA=1 S:VER>0 STA=$$LS^ICDEXLK3(ROOT,IEN,CDT)
"RTN","ICDEXLK5",80,0)
 . . . Q:+($G(VER))>0&(+STA'>0)
"RTN","ICDEXLK5",81,0)
 . . . S VAL=$$LD^ICDEXLK3(ROOT,IEN,CDT,VER)
"RTN","ICDEXLK5",82,0)
 . . . Q:$$UP^XLFSTR(VAL)'=$$UP^XLFSTR(ORG)
"RTN","ICDEXLK5",83,0)
 . . . S EXM(IEN)="",LOR=0
"RTN","ICDEXLK5",84,0)
 S (X,IEN)=0 F  S IEN=$O(EXM(IEN)) Q:+IEN'>0  D
"RTN","ICDEXLK5",85,0)
 . N ICDI S ICDI=$O(Y(" "),-1)+1,Y(ICDI)=IEN,(X,Y(0))=ICDI
"RTN","ICDEXLK5",86,0)
 Q X
"RTN","ICDEXLK5",87,0)
IEN ; Lookup by IEN
"RTN","ICDEXLK5",88,0)
 K Y S ICDOFND=0,Y=-1 Q:'$L(INP2)  Q:INP2'?1N.N  Q:+INP2'>0  Q:'$L(ROOT)  Q:+FILE'>0
"RTN","ICDEXLK5",89,0)
 N XX,VDES,UDES,IEN,SNAME,ICS,INAME,STA,ORG S IEN=INP2 Q:'$D(@(ROOT_+IEN_",0)"))
"RTN","ICDEXLK5",90,0)
 S ORG="`"_IEN,VDES=$$LD^ICDEX(FILE,IEN,ICDCDT),UDES=$$LD^ICDEX(FILE,IEN,9999999)
"RTN","ICDEXLK5",91,0)
 S ICS=$$CSI^ICDEX(FILE,IEN),XX=VDES,(SNAME,INAME)=$$SYS^ICDEX(ICS,,"E")
"RTN","ICDEXLK5",92,0)
 S:$L($G(ICDSYS)) SNAME=$$SYS^ICDEX($G(ICDSYS),,"E")
"RTN","ICDEXLK5",93,0)
 S STA=$$LS^ICDEX(FILE,IEN,$G(ICDCDT))
"RTN","ICDEXLK5",94,0)
 I $L($G(ICDSYS))>0,ICS>0,$G(ICDSYS)'=ICS D  Q
"RTN","ICDEXLK5",95,0)
 . K X,Y S X="" S:$L($G(ORG)) X=$G(ORG) S Y=-1,ICDOFND=0 Q
"RTN","ICDEXLK5",96,0)
 . S X=UDES,Y="-1^IEN "_IEN_" is not of the "_SNAME_" coding system"
"RTN","ICDEXLK5",97,0)
 I +($G(ICDVER))>0,STA'>0 D  Q
"RTN","ICDEXLK5",98,0)
 . K X,Y S X="" S:$L($G(ORG)) X=$G(ORG) S Y=-1,ICDOFND=0 Q
"RTN","ICDEXLK5",99,0)
 . S X=UDES,Y="-1^IEN "_IEN_" is not active on "_$$FMTE^XLFDT($G(ICDCDT),"5Z")
"RTN","ICDEXLK5",100,0)
 I +($G(ICDVER))'>0,$E(XX,1,2)="-1",$L(UDES),$E(UDES,1,2)'="-1" S XX=UDES
"RTN","ICDEXLK5",101,0)
 W:$D(LOUD)&($G(DIC(0))["E")&($E(XX,1,2)'="-1") "   ",XX
"RTN","ICDEXLK5",102,0)
 D FND(ROOT,IEN,ICDCDT,$G(ICS),$G(ICDVER),+($G(LOR)),$G(ICDOUT))
"RTN","ICDEXLK5",103,0)
 D SEL(ROOT,1) I +($G(^TMP(SUB,$J,"SEL",1)))>0 D
"RTN","ICDEXLK5",104,0)
 . S ICDOFND=1 N ANS S ANS=$$ONE^ICDEXLK2
"RTN","ICDEXLK5",105,0)
 . I ANS'>0 D  Q
"RTN","ICDEXLK5",106,0)
 . . S ICDOFND=0,X=""
"RTN","ICDEXLK5",107,0)
 . . ;+($G(^TMP(SUB,$J,"SEL",1)))
"RTN","ICDEXLK5",108,0)
 . . S Y=-1 K ^TMP(SUB,$J,"SEL") Q
"RTN","ICDEXLK5",109,0)
 . D X^ICDEXLK2(1,SUB) S (ICDOFND,ICDOSEL,ICDOREV)=1
"RTN","ICDEXLK5",110,0)
 . D Y^ICDEXLK2($G(ROOT),+($G(^TMP(SUB,$J,"SEL",1))),$G(ICDCDT))
"RTN","ICDEXLK5",111,0)
 . I +($G(Y))'>0,$L($G(INP)) S X=$G(INP) Q
"RTN","ICDEXLK5",112,0)
 . I +($G(Y))>0 D:$G(DIC(0))'["F" SAV^ICDEXLK6(+($G(Y)),ROOT)
"RTN","ICDEXLK5",113,0)
 K ^TMP(SUB,$J,"SEL")
"RTN","ICDEXLK5",114,0)
 Q
"RTN","ICDEXLK5",115,0)
 ;
"RTN","ICDEXLK5",116,0)
FND(ROOT,IEN,CDT,SYS,VER,LOR,OUT) ; Add Item to Found List
"RTN","ICDEXLK5",117,0)
 ;
"RTN","ICDEXLK5",118,0)
 ; Input
"RTN","ICDEXLK5",119,0)
 ; 
"RTN","ICDEXLK5",120,0)
 ;    ROOT   Global Root
"RTN","ICDEXLK5",121,0)
 ;    IEN    Internal Entry Number
"RTN","ICDEXLK5",122,0)
 ;    CDT    Date
"RTN","ICDEXLK5",123,0)
 ;    SYS    Coding System
"RTN","ICDEXLK5",124,0)
 ;    VER    Versioned Search
"RTN","ICDEXLK5",125,0)
 ;    LOR    List Order
"RTN","ICDEXLK5",126,0)
 ;             0  List by Text Length
"RTN","ICDEXLK5",127,0)
 ;             1  List by Code Number
"RTN","ICDEXLK5",128,0)
 ;    OUT    Output Format
"RTN","ICDEXLK5",129,0)
 ;             1  Fileman, code and short text
"RTN","ICDEXLK5",130,0)
 ;             2  Fileman, code and description
"RTN","ICDEXLK5",131,0)
 ;             3  Lexicon, short text and code
"RTN","ICDEXLK5",132,0)
 ;             4  Lexicon, description and code
"RTN","ICDEXLK5",133,0)
 ;
"RTN","ICDEXLK5",134,0)
 ; Output
"RTN","ICDEXLK5",135,0)
 ; 
"RTN","ICDEXLK5",136,0)
 ;    ^TMP(ID,$J,"FND")
"RTN","ICDEXLK5",137,0)
 ;    ^TMP(ID,$J,"FND",LEN,SEQ)=IEN ^ Display Text
"RTN","ICDEXLK5",138,0)
 ;    ^TMP(ID,$J,"FND","IEN",<ien>)=""
"RTN","ICDEXLK5",139,0)
 ;  
"RTN","ICDEXLK5",140,0)
 ;      where
"RTN","ICDEXLK5",141,0)
 ;      
"RTN","ICDEXLK5",142,0)
 ;         ID is a package namespaced subscript:
"RTN","ICDEXLK5",143,0)
 ;        
"RTN","ICDEXLK5",144,0)
 ;            ICD9 - for file #80 searches
"RTN","ICDEXLK5",145,0)
 ;            ICD0 - for file #80.1 searches
"RTN","ICDEXLK5",146,0)
 ;      
"RTN","ICDEXLK5",147,0)
 ;         LEN is a number assigned based string length
"RTN","ICDEXLK5",148,0)
 ;         SEQ is a unique sequence number for length
"RTN","ICDEXLK5",149,0)
 ;                
"RTN","ICDEXLK5",150,0)
 ;   Uses   DIC("S") to screen output
"RTN","ICDEXLK5",151,0)
 ; 
"RTN","ICDEXLK5",152,0)
 N CC,CODE,CTR,FILE,SEQ,SCREEN,SHORT,LONG,STATUS,STA,SUB,TEXT,TERM,TYP,NUM,Y
"RTN","ICDEXLK5",153,0)
 S SYS=+($G(SYS)),VER=+($G(VER)) S (Y,IEN)=+($G(IEN)) Q:+IEN'>0
"RTN","ICDEXLK5",154,0)
 S ROOT=$$ROOT^ICDEX($G(ROOT)),FILE=$$FILE^ICDEX(ROOT)
"RTN","ICDEXLK5",155,0)
 S SUB=$TR(ROOT,"^("),SCREEN=$$SCREEN Q:'SCREEN  Q:+FILE'>0
"RTN","ICDEXLK5",156,0)
 S CODE=$P($G(@(ROOT_+IEN_",0)")),"^",1) Q:'$L(CODE)
"RTN","ICDEXLK5",157,0)
 S:'$L($G(CDT)) CDT=$$DT^XLFDT S LOR=+($G(LOR))
"RTN","ICDEXLK5",158,0)
 S STA=1 I +VER>0 S STA=$$STATCHK^ICDEX(CODE,CDT,SYS) Q:+($G(STA))'>0
"RTN","ICDEXLK5",159,0)
 Q:'$L(SUB)  Q:$D(^TMP(SUB,$J,"FND","IEN",+IEN))
"RTN","ICDEXLK5",160,0)
 S TYP=$P($G(^ICDS(+SYS,0)),"^",1),TERM=""
"RTN","ICDEXLK5",161,0)
 S OUT=$G(OUT) S:+OUT'>0 OUT=1 S:+OUT>4 OUT=1
"RTN","ICDEXLK5",162,0)
 I +($G(OUT))=1!(+($G(OUT))=3) S TERM=$$SD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK5",163,0)
 I +($G(OUT))=2!(+($G(OUT))=4) D
"RTN","ICDEXLK5",164,0)
 . S TERM=$$LD^ICDEX(FILE,IEN,CDT) Q:$P(TERM,"^",1)=-1
"RTN","ICDEXLK5",165,0)
 . I +($G(OUT))=4,$L($T(MIX^LEXXM)) S TERM=$$MIX^LEXXM(TERM)
"RTN","ICDEXLK5",166,0)
 I VER'>0,($P(TERM,"^",1)=-1!('$L(TERM))) D
"RTN","ICDEXLK5",167,0)
 . N TDT S TDT=$O(@(ROOT_IEN_",67,""B"","_+($G(CDT))_")")) Q:$E(TDT,1,7)'?7N
"RTN","ICDEXLK5",168,0)
 . I +($G(OUT))=1!(+($G(OUT))=3) S TERM=$$SD^ICDEX(FILE,IEN,TDT)
"RTN","ICDEXLK5",169,0)
 . I +($G(OUT))=2!(+($G(OUT))=4) S TERM=$$LD^ICDEX(FILE,IEN,TDT)
"RTN","ICDEXLK5",170,0)
 . I +($G(OUT))=4,$P(TERM,"^",1)'=-1,$L($T(MIX^LEXXM)) S TERM=$$MIX^LEXXM(TERM)
"RTN","ICDEXLK5",171,0)
 . S:$P(TERM,"^",1)=-1 TERM="" Q:'$L(TERM)
"RTN","ICDEXLK5",172,0)
 . S:TDT?7N TERM=TERM_" ("_$$FMTE^XLFDT(TDT,"5ZM")_")"
"RTN","ICDEXLK5",173,0)
 S:$P(TERM,"^",1)=-1 TERM="" Q:'$L(TERM)  S NUM=$$NUM^ICDEX(CODE)
"RTN","ICDEXLK5",174,0)
 S CODE=CODE_$J(" ",(10-$L(CODE))) S CC=""
"RTN","ICDEXLK5",175,0)
 S:FILE=80 CC=$$VCC^ICDEX(IEN,CDT),CC=$$CC(+CC)
"RTN","ICDEXLK5",176,0)
 S STATUS=$O(@(ROOT_+IEN_",66,""B"","_(+CDT+.000001)_")"),-1)
"RTN","ICDEXLK5",177,0)
 S STATUS=$O(@(ROOT_+IEN_",66,""B"","_+STATUS_","" "")"),-1)
"RTN","ICDEXLK5",178,0)
 S STATUS=$P($G(@(ROOT_+IEN_",66,"_+STATUS_",0)")),"^",2)
"RTN","ICDEXLK5",179,0)
 S STATUS=$$ST(STATUS)
"RTN","ICDEXLK5",180,0)
 S:$G(OUT)'?1N OUT=$G(OUT) S:+OUT'>0 OUT=1 S:+OUT>4 OUT=4
"RTN","ICDEXLK5",181,0)
 I +($G(OUT))=1!(+($G(OUT))=2) D
"RTN","ICDEXLK5",182,0)
 . S:$G(DIC(0))'["S" TEXT=CODE_TERM_CC_STATUS
"RTN","ICDEXLK5",183,0)
 . S:$G(DIC(0))["S" TEXT=TERM_CC_STATUS
"RTN","ICDEXLK5",184,0)
 I +($G(OUT))=3!(+($G(OUT))=4) D
"RTN","ICDEXLK5",185,0)
 . S CODE=$$TM(CODE),TEXT=TERM_CC_STATUS
"RTN","ICDEXLK5",186,0)
 . Q:$G(DIC(0))["S"
"RTN","ICDEXLK5",187,0)
 . S:$L(TYP) TEXT=TEXT_" ("_TYP_" "_CODE_")"
"RTN","ICDEXLK5",188,0)
 . S:'$L(TYP) TEXT=TEXT_" ("_CODE_")"
"RTN","ICDEXLK5",189,0)
 S SEQ=246-$L(TERM) S:LOR>0 SEQ=NUM
"RTN","ICDEXLK5",190,0)
 S CTR=$O(^TMP(SUB,$J,"FND",+SEQ," "),-1)+1
"RTN","ICDEXLK5",191,0)
 S ^TMP(SUB,$J,"FND",+SEQ,CTR)=IEN_"^"_TEXT
"RTN","ICDEXLK5",192,0)
 S ^TMP(SUB,$J,"FND","IEN",+IEN)=""
"RTN","ICDEXLK5",193,0)
 Q
"RTN","ICDEXLK5",194,0)
SEL(ROOT,LOR) ; Add Items to Selection List
"RTN","ICDEXLK5",195,0)
 ;
"RTN","ICDEXLK5",196,0)
 ; Input   
"RTN","ICDEXLK5",197,0)
 ;   
"RTN","ICDEXLK5",198,0)
 ;   ROOT   Global Root/File # (Required)
"RTN","ICDEXLK5",199,0)
 ;   LOR    List Order
"RTN","ICDEXLK5",200,0)
 ;            0  List by Text Length
"RTN","ICDEXLK5",201,0)
 ;            1  List by Code Number
"RTN","ICDEXLK5",202,0)
 ;   
"RTN","ICDEXLK5",203,0)
 ; Output
"RTN","ICDEXLK5",204,0)
 ;   
"RTN","ICDEXLK5",205,0)
 ;    ^TMP(ID,$J,"SEL")
"RTN","ICDEXLK5",206,0)
 ;    ^TMP(ID,$J,"SEL",0)=# of entries
"RTN","ICDEXLK5",207,0)
 ;    ^TMP(ID,$J,"SEL",#)=IEN^Display Text
"RTN","ICDEXLK5",208,0)
 ;  
"RTN","ICDEXLK5",209,0)
 ;      where ID is a package namespaced subscript:
"RTN","ICDEXLK5",210,0)
 ;        
"RTN","ICDEXLK5",211,0)
 ;       ICD9 - for the Diagnosis file #80
"RTN","ICDEXLK5",212,0)
 ;       ICD0 - for the Operations/Procedure file #80.1
"RTN","ICDEXLK5",213,0)
 ;       
"RTN","ICDEXLK5",214,0)
 ; Uses    ^TMP(NAME,$J,"FND") (Optional)
"RTN","ICDEXLK5",215,0)
 ; Kills   ^TMP(NAME,$J,"FND")
"RTN","ICDEXLK5",216,0)
 ;   
"RTN","ICDEXLK5",217,0)
 N CTR,FILE,SEQ,SUB,TEXT S ROOT=$$ROOT^ICDEX($G(ROOT)),LOR=+($G(LOR))
"RTN","ICDEXLK5",218,0)
 S FILE=$$FILE^ICDEX(ROOT),SUB=$TR(ROOT,"^(") K ^TMP(SUB,$J,"SEL")
"RTN","ICDEXLK5",219,0)
 Q:+FILE'>0  Q:'$L(SUB)  K ^TMP(SUB,$J,"SEL")
"RTN","ICDEXLK5",220,0)
 I +($G(LOR))'>0 D
"RTN","ICDEXLK5",221,0)
 . S SEQ=" " F  S SEQ=$O(^TMP(SUB,$J,"FND",SEQ),-1) Q:+SEQ'>0  D SEL2
"RTN","ICDEXLK5",222,0)
 I +($G(LOR))>0 D
"RTN","ICDEXLK5",223,0)
 . S SEQ=0 F  S SEQ=$O(^TMP(SUB,$J,"FND",SEQ)) Q:+SEQ'>0  D SEL2
"RTN","ICDEXLK5",224,0)
 K ^TMP(SUB,$J,"FND")
"RTN","ICDEXLK5",225,0)
 Q
"RTN","ICDEXLK5",226,0)
SEL2 ;  Add Items to Selection List (part 2)
"RTN","ICDEXLK5",227,0)
 N ICDI S ICDI=0 F  S ICDI=$O(^TMP(SUB,$J,"FND",+SEQ,ICDI)) Q:+ICDI'>0  D
"RTN","ICDEXLK5",228,0)
 . N CTR,TEXT S TEXT=$G(^TMP(SUB,$J,"FND",+SEQ,ICDI))
"RTN","ICDEXLK5",229,0)
 . Q:'$L(TEXT)  Q:+TEXT'>0  Q:'$L($P(TEXT,"^",2))
"RTN","ICDEXLK5",230,0)
 . S CTR=$O(^TMP(SUB,$J,"SEL"," "),-1)+1
"RTN","ICDEXLK5",231,0)
 . S ^TMP(SUB,$J,"SEL",CTR)=TEXT,^TMP(SUB,$J,"SEL",0)=CTR
"RTN","ICDEXLK5",232,0)
 Q
"RTN","ICDEXLK5",233,0)
 ;
"RTN","ICDEXLK5",234,0)
 ; Miscellaneous
"RTN","ICDEXLK5",235,0)
SH ;   Display TMP
"RTN","ICDEXLK5",236,0)
 N SUB,NN,NC
"RTN","ICDEXLK5",237,0)
 S SUB="ICD9" S:'$D(^TMP(SUB)) SUB="ICD0" Q:'$D(^TMP(SUB))
"RTN","ICDEXLK5",238,0)
 S NN="^TMP("""_SUB_""","_$J_")",NC="^TMP("""_SUB_""","_$J_","
"RTN","ICDEXLK5",239,0)
 W:'$D(@NN) ! Q:'$D(@NN)  F  S NN=$Q(@NN) Q:'$L(NN)!(NN'[NC)  W !,NN,"=",@NN
"RTN","ICDEXLK5",240,0)
 W !
"RTN","ICDEXLK5",241,0)
 Q
"RTN","ICDEXLK5",242,0)
SCREEN(X) ;   Screen Entries - Boolean Truth Value
"RTN","ICDEXLK5",243,0)
 Q:+($G(Y))'>0 1   Q:'$L($G(ROOT)) 1  N ICDNR,ICDO,ICDS,ICDY
"RTN","ICDEXLK5",244,0)
 S ICDY=+($G(Y)),ROOT=$$ROOT^ICDEX($G(ROOT)) Q:'$L(ROOT) 1
"RTN","ICDEXLK5",245,0)
 S ICDS=$G(ICDDICS) Q:'$L(ICDS) 1  S Y=+($G(ICDY))
"RTN","ICDEXLK5",246,0)
 S ICDNR=$D(@(ROOT_+Y_",0)")) X ICDS S ICDO=$T
"RTN","ICDEXLK5",247,0)
 Q:'ICDO 0
"RTN","ICDEXLK5",248,0)
 Q 1
"RTN","ICDEXLK5",249,0)
ISORD(X) ;   Check if in $ORDER
"RTN","ICDEXLK5",250,0)
 Q:'$L($G(ORD)) 0  Q:'$L($G(KEY)) 0
"RTN","ICDEXLK5",251,0)
 Q:$E($G(ORD),1,$L($G(KEY)))=$G(KEY) 1
"RTN","ICDEXLK5",252,0)
 Q 0
"RTN","ICDEXLK5",253,0)
CC(X) ;   CC
"RTN","ICDEXLK5",254,0)
 Q:+($G(X))=1 " (CC)"
"RTN","ICDEXLK5",255,0)
 Q:+($G(X))=2 " (Major CC)"
"RTN","ICDEXLK5",256,0)
 Q ""
"RTN","ICDEXLK5",257,0)
ST(X) ;   Status indicators
"RTN","ICDEXLK5",258,0)
 Q:$G(X)?1N&(+$G(X)'>0) " (Inactive)"
"RTN","ICDEXLK5",259,0)
 Q:$G(X)'?1N&(+$G(X)'>0) " (Pending)"
"RTN","ICDEXLK5",260,0)
 Q ""
"RTN","ICDEXLK5",261,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK5",262,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK5",263,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK5",264,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK5",265,0)
 Q X
"RTN","ICDEXLK6")
0^9^B93947228
"RTN","ICDEXLK6",1,0)
ICDEXLK6 ;SLC/KER - ICD Extractor - Lookup, Miscellaneous ;12/19/2014
"RTN","ICDEXLK6",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXLK6",3,0)
 ;               
"RTN","ICDEXLK6",4,0)
 ; Global Variables
"RTN","ICDEXLK6",5,0)
 ;    ^DISV(              ICR    510
"RTN","ICDEXLK6",6,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXLK6",7,0)
 ;    ^ICDS("F"           N/A
"RTN","ICDEXLK6",8,0)
 ;    ^UTILITY($J         ICR  10011
"RTN","ICDEXLK6",9,0)
 ;    ^XTMP(              SACC 2.3.2.5.2
"RTN","ICDEXLK6",10,0)
 ;               
"RTN","ICDEXLK6",11,0)
 ; External References
"RTN","ICDEXLK6",12,0)
 ;    ^DIM                ICR  10016
"RTN","ICDEXLK6",13,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICDEXLK6",14,0)
 ;    ^DIR                ICR  10026
"RTN","ICDEXLK6",15,0)
 ;    ^DIWP               ICR  10011
"RTN","ICDEXLK6",16,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXLK6",17,0)
 ;    $$FMADD^XLFDT       ICR  10103
"RTN","ICDEXLK6",18,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXLK6",19,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXLK6",20,0)
 ;               
"RTN","ICDEXLK6",21,0)
 ; Local Variables NEWed in ICDEXLK
"RTN","ICDEXLK6",22,0)
 ;    ICDDIC0,ICDDIC00,ICDDICA,ICDDICB,ICDDICS,ICDDICW,ICDX
"RTN","ICDEXLK6",23,0)
 ;     
"RTN","ICDEXLK6",24,0)
DX9 ;   Fileman Lookup ICD-9 Diagnosis (interactive)
"RTN","ICDEXLK6",25,0)
 ;
"RTN","ICDEXLK6",26,0)
 ; This API forces the lookup in file 80 to use the ICD-9-CM
"RTN","ICDEXLK6",27,0)
 ; coding system only by presetting the special variable ICDSYS
"RTN","ICDEXLK6",28,0)
 ; to 1 (Coding System = ICD-9-CM)
"RTN","ICDEXLK6",29,0)
 ; 
"RTN","ICDEXLK6",30,0)
 N ICDSYS S ICDSYS=1 D DX
"RTN","ICDEXLK6",31,0)
 Q
"RTN","ICDEXLK6",32,0)
DX10 ;   Fileman Lookup ICD-10 Diagnosis (interactive)
"RTN","ICDEXLK6",33,0)
 ;
"RTN","ICDEXLK6",34,0)
 ; This API forces the lookup in file 80 to use the ICD-10-CM
"RTN","ICDEXLK6",35,0)
 ; coding system only by presetting the special variable ICDSYS
"RTN","ICDEXLK6",36,0)
 ; to 30 (Coding System = ICD-10-CM)
"RTN","ICDEXLK6",37,0)
 ; 
"RTN","ICDEXLK6",38,0)
 N ICDSYS S ICDSYS=30 D DX
"RTN","ICDEXLK6",39,0)
 Q
"RTN","ICDEXLK6",40,0)
DX ;   Fileman Lookup Diagnosis (interactive)
"RTN","ICDEXLK6",41,0)
 ;
"RTN","ICDEXLK6",42,0)
 ;   Variables that may be preset:
"RTN","ICDEXLK6",43,0)
 ; 
"RTN","ICDEXLK6",44,0)
 ;      ICDVDT     Versioning Date (Fileman format)
"RTN","ICDEXLK6",45,0)
 ;      ICDSYS     Coding System 1 = ICD-9-CM, 30 = ICD-10-CM
"RTN","ICDEXLK6",46,0)
 ;      ICDFMT     Display Format 1-4 (see above)
"RTN","ICDEXLK6",47,0)
 ;      DIC("S")   Fileman Screen
"RTN","ICDEXLK6",48,0)
 ;      DIC("W")   Executable write command
"RTN","ICDEXLK6",49,0)
 ;      
"RTN","ICDEXLK6",50,0)
 K X N SNAM,OVDT,OSYS,OFMT,SYSD S DIC="^ICD9(",DIC(0)="AQEM",(SYSD,SNAM)=""
"RTN","ICDEXLK6",51,0)
 S OSYS=+($G(ICDSYS)) N ICDSYS S:$D(^ICDS("F",80,+($G(OSYS)))) ICDSYS=OSYS
"RTN","ICDEXLK6",52,0)
 S OFMT=$G(ICDFMT) N ICDFMT S ICDFMT=OFMT S:+ICDFMT<1 ICDFMT=1 S:+ICDFMT>4 ICDFMT=1
"RTN","ICDEXLK6",53,0)
 S OVDT=$G(ICDVDT) S:OVDT'?7N OVDT=$$DT^XLFDT N ICDVDT S ICDVDT=OVDT S:SYSD?7N&(SYSD>ICDVDT) ICDVDT=SYSD
"RTN","ICDEXLK6",54,0)
 S:+($G(ICDSYS))>0 SNAM=$$SNAM^ICDEX(+($G(ICDSYS))),SYSD=$P($G(^ICDS(+$G(ICDSYS),0)),"^",4) S ICDSYS=+($G(ICDSYS))
"RTN","ICDEXLK6",55,0)
 S SNAM=$P(SNAM," ",1),SNAM=$P(SNAM,"-",1,2)
"RTN","ICDEXLK6",56,0)
 S DIC("A")="Select ICD Diagnosis:  " S:$L(SNAM) DIC("A")="Select "_SNAM_" Diagnosis:  "
"RTN","ICDEXLK6",57,0)
 K:$$DIM($G(DIC("S")))'>0 DIC("S") K:$$DIM($G(DIC("W")))'>0 DIC("W")
"RTN","ICDEXLK6",58,0)
 D LK^ICDEXLK K DIC
"RTN","ICDEXLK6",59,0)
 Q
"RTN","ICDEXLK6",60,0)
PR9 ;   Fileman Lookup ICD-9 Procedures (interactive)
"RTN","ICDEXLK6",61,0)
 ;
"RTN","ICDEXLK6",62,0)
 ; This API forces the lookup in file 80 to use the ICD-9 Proc
"RTN","ICDEXLK6",63,0)
 ; coding system only by presetting the special variable ICDSYS
"RTN","ICDEXLK6",64,0)
 ; to 2 (Coding System = ICD-9 Proc)
"RTN","ICDEXLK6",65,0)
 ; 
"RTN","ICDEXLK6",66,0)
 N ICDSYS S ICDSYS=2 D PR
"RTN","ICDEXLK6",67,0)
 Q
"RTN","ICDEXLK6",68,0)
PR10 ;   Fileman Lookup ICD-10 Procedures (interactive)
"RTN","ICDEXLK6",69,0)
 ;
"RTN","ICDEXLK6",70,0)
 ; This API forces the lookup in file 80 to use the ICD-10-PCS
"RTN","ICDEXLK6",71,0)
 ; coding system only by presetting the special variable ICDSYS
"RTN","ICDEXLK6",72,0)
 ; to 31 (Coding System = ICD-10-PCS)
"RTN","ICDEXLK6",73,0)
 ; 
"RTN","ICDEXLK6",74,0)
 N ICDSYS S ICDSYS=31 D PR
"RTN","ICDEXLK6",75,0)
 Q
"RTN","ICDEXLK6",76,0)
PR ;   Fileman Lookup Procedure (interactive)
"RTN","ICDEXLK6",77,0)
 ;
"RTN","ICDEXLK6",78,0)
 ;   Variables that may be preset:
"RTN","ICDEXLK6",79,0)
 ; 
"RTN","ICDEXLK6",80,0)
 ;      ICDVDT     Versioning Date (Fileman format)
"RTN","ICDEXLK6",81,0)
 ;      ICDSYS     Coding System 2 = ICD-9 Proc, 31 = ICD-10-PCS
"RTN","ICDEXLK6",82,0)
 ;      ICDFMT     Display Format 1-4 (see above)
"RTN","ICDEXLK6",83,0)
 ;      DIC("S")   Fileman Screen
"RTN","ICDEXLK6",84,0)
 ;      DIC("W")   Executable Write command
"RTN","ICDEXLK6",85,0)
 ;      
"RTN","ICDEXLK6",86,0)
 K X N SNAM,OVDT,OSYS,OFMT,SYSD S DIC="^ICD0(",DIC(0)="AQEM",(SYSD,SNAM)=""
"RTN","ICDEXLK6",87,0)
 S OSYS=+($G(ICDSYS)) N ICDSYS S:$D(^ICDS("F",80.1,+($G(OSYS)))) ICDSYS=OSYS
"RTN","ICDEXLK6",88,0)
 S OFMT=$G(ICDFMT) N ICDFMT S ICDFMT=OFMT S:+ICDFMT<1 ICDFMT=1 S:+ICDFMT>4 ICDFMT=1
"RTN","ICDEXLK6",89,0)
 S OVDT=$G(ICDVDT) S:OVDT'?7N OVDT=$$DT^XLFDT N ICDVDT S ICDVDT=OVDT S:SYSD?7N&(SYSD>ICDVDT) ICDVDT=SYSD
"RTN","ICDEXLK6",90,0)
 S:+($G(ICDSYS))>0 SNAM=$$SNAM^ICDEX(+($G(ICDSYS))),SYSD=$P($G(^ICDS(+$G(ICDSYS),0)),"^",4) S ICDSYS=+($G(ICDSYS))
"RTN","ICDEXLK6",91,0)
 S SNAM=$P(SNAM," ",1),SNAM=$P(SNAM,"-",1,2)
"RTN","ICDEXLK6",92,0)
 S DIC("A")="Select ICD Procedure:  " S:$L(SNAM) DIC("A")="Select "_SNAM_" Procedure:  "
"RTN","ICDEXLK6",93,0)
 K:$$DIM($G(DIC("S")))'>0 DIC("S") K:$$DIM($G(DIC("W")))'>0 DIC("W")
"RTN","ICDEXLK6",94,0)
 D LK^ICDEXLK K DIC
"RTN","ICDEXLK6",95,0)
 Q
"RTN","ICDEXLK6",96,0)
DIM(X) ;   Check MUMPS Code
"RTN","ICDEXLK6",97,0)
 S X=$G(X) Q:'$L(X) 0  D ^DIM Q:'$D(X) 0
"RTN","ICDEXLK6",98,0)
 Q 1
"RTN","ICDEXLK6",99,0)
 ;
"RTN","ICDEXLK6",100,0)
FILE(FILE,SYS) ; File
"RTN","ICDEXLK6",101,0)
 N ROOT,TMP,Y S ROOT=$G(FILE),TMP=$$FILE^ICDEX(ROOT) Q:$D(^ICDS("F",+TMP)) TMP
"RTN","ICDEXLK6",102,0)
 S SYS=$$SYS^ICDEX($G(SYS)),TMP=$$FILE^ICDEX(+SYS) Q:$D(^ICDS("F",+TMP)) TMP
"RTN","ICDEXLK6",103,0)
 S TMP=$$FILN($G(FILE)) Q:$D(^ICDS("F",+TMP)) TMP
"RTN","ICDEXLK6",104,0)
 N DIR,DTOUT,DUOUT,DIROUT,DIRUT S DIR(0)="SAO^DX:ICD DIAGNOSIS;PR:ICD OPERATION/PROCEDURE"
"RTN","ICDEXLK6",105,0)
 S DIR("A")=" Select ICD File:  ",DIR("PRE")="S X=$$FILT^ICDEXLK6(X)" S (DIR("?"),DIR("??"))="^D FILH^ICDEXLK6"
"RTN","ICDEXLK6",106,0)
 D ^DIR S Y=$S(Y="DX":80,Y="PR":80.1,1:-1)
"RTN","ICDEXLK6",107,0)
 Q Y
"RTN","ICDEXLK6",108,0)
FILT(X) ;   File Transform
"RTN","ICDEXLK6",109,0)
 S X=$$UP^XLFSTR(X) S:X["ICD9" X="DX" S:X["ICD0" X="PR" Q:X["^^" "^^"  Q:X["^" "^"  S:X["?" X="??" Q:X["?" X
"RTN","ICDEXLK6",110,0)
 S:X["DI"!(X["DX")!(X=80) X="DX" Q:X="DX" X  S:X["PR"!(X["OP")!(X=80.1) X="PR" Q:X="PR" X
"RTN","ICDEXLK6",111,0)
 Q "??"
"RTN","ICDEXLK6",112,0)
FILN(X) ;   File Number
"RTN","ICDEXLK6",113,0)
 N NUM,TMP S NUM=0,TMP=$$UP^XLFSTR(X) S:TMP["DI"!(TMP["DX")!(TMP["ICD9")!(TMP=80) NUM=80
"RTN","ICDEXLK6",114,0)
 S:TMP["PR"!(TMP["OP")!(TMP["ICD0")!(TMP=80.1) NUM=80.1 Q:$D(^ICDS("F",+NUM)) NUM
"RTN","ICDEXLK6",115,0)
 Q X
"RTN","ICDEXLK6",116,0)
FILH ;   File Help
"RTN","ICDEXLK6",117,0)
 W:$O(^ICDS("F",0))>0 !,?4,"Select from:",!
"RTN","ICDEXLK6",118,0)
 N FI S FI=0 F  S FI=$O(^ICDS("F",FI)) Q:+FI'>0  D
"RTN","ICDEXLK6",119,0)
 . N CD,RT,NM S (CD,RT)="" S:FI=80 CD="DX",RT="^ICD9(" S:FI=80.1 CD="PR",RT="^ICD0("
"RTN","ICDEXLK6",120,0)
 . S NM=$$GET1^DIQ(1,(+FI_","),.01) S:$E(NM,1,4)="ICD " NM=$P(NM,"ICD ",2)
"RTN","ICDEXLK6",121,0)
 . W !,?10,FI,?16,CD,?20,NM,?41,RT
"RTN","ICDEXLK6",122,0)
 Q
"RTN","ICDEXLK6",123,0)
 ;
"RTN","ICDEXLK6",124,0)
SYS(FILE,SYS) ; System
"RTN","ICDEXLK6",125,0)
 N DIR,DTOUT,DUOUT,DIROUT,DIRUT,ROOT,TMP,Y S ROOT=$G(FILE),TMP=$$FILE^ICDEX(ROOT),SYS=$$SYS^ICDEX($G(SYS))
"RTN","ICDEXLK6",126,0)
 S:'$D(^ICDS("F",+TMP)) TMP=$$FILE^ICDEX(+SYS) S:'$D(^ICDS("F",+TMP)) TMP=$$FILN($G(FILE))
"RTN","ICDEXLK6",127,0)
 S FILE="" S:$D(^ICDS("F",+TMP)) FILE=TMP Q:$D(^ICDS("F",+($G(FILE)),+($G(SYS)))) +($G(SYS))
"RTN","ICDEXLK6",128,0)
 S SYS=$$CS^ICDEX($G(FILE)) Q:$D(^ICDS(+SYS,0)) +SYS
"RTN","ICDEXLK6",129,0)
 Q -1
"RTN","ICDEXLK6",130,0)
 ;
"RTN","ICDEXLK6",131,0)
CDT(CDT,SYS) ; Date
"RTN","ICDEXLK6",132,0)
 N DIR,DTOUT,DUOUT,DIROUT,DIRUT,ROOT,LO,NX,HI,TD,TMP,Y
"RTN","ICDEXLK6",133,0)
 S CDT=$G(CDT),SYS=$$SYS^ICDEX($G(SYS)),LO=$$IMP^ICDEX(1)
"RTN","ICDEXLK6",134,0)
 S NX=$$IMP^ICDEX(+($G(SYS))) S:LO?7N&(NX?7N)&(NX>LO) LO=NX S HI=$$DT^XLFDT,HI=$$FMADD^XLFDT(HI,(365*3))
"RTN","ICDEXLK6",135,0)
 I CDT?7N S:LO?7N&(CDT<LO) CDT=LO Q:CDT=LO CDT S:HI?7N&(CDT>HI) CDT=HI Q:CDT=HI CDT
"RTN","ICDEXLK6",136,0)
 Q:CDT?7N&(CDT'<LO)&(CDT'>HI) CDT
"RTN","ICDEXLK6",137,0)
 S TD=$$DT^XLFDT,TMP=$TR($$UP^XLFSTR($$FMTE^XLFDT(TD)),",","") S:TD>LO&(TD<HI) DIR("B")=TMP
"RTN","ICDEXLK6",138,0)
 S DIR(0)="DAO^"_LO_":"_HI_":EX"
"RTN","ICDEXLK6",139,0)
 S DIR("A")=" Enter a Versioning Date:  "
"RTN","ICDEXLK6",140,0)
 S DIR("PRE")="S X=$$CDTT^ICDEXLK6(X)" S (DIR("?"),DIR("??"))="^D CDTH^ICDEXLK6"
"RTN","ICDEXLK6",141,0)
 D ^DIR
"RTN","ICDEXLK6",142,0)
 Q Y
"RTN","ICDEXLK6",143,0)
CDTT(X) ;   Date Transform
"RTN","ICDEXLK6",144,0)
 S X=$$UP^XLFSTR(X) S:X["?" X="??" Q:X["?" X
"RTN","ICDEXLK6",145,0)
 Q X
"RTN","ICDEXLK6",146,0)
CDTH ;   Date Help
"RTN","ICDEXLK6",147,0)
 W !,?5,"Enter a date to be used to determine the appropriate codes"
"RTN","ICDEXLK6",148,0)
 W !,?5,"and terms that were in use on the date specified. ",!
"RTN","ICDEXLK6",149,0)
 I $G(LO)?7N,$G(HI)?7N D
"RTN","ICDEXLK6",150,0)
 . N BEG,END,MO,DY,YR S BEG=$$UP^XLFSTR($$FMTE^XLFDT($G(LO))),END=$$UP^XLFSTR($$FMTE^XLFDT($G(HI)))
"RTN","ICDEXLK6",151,0)
 . S MO=$P(BEG," ",1),DY=+($TR($P(BEG," ",2),",","")),YR=$P(BEG," ",3)
"RTN","ICDEXLK6",152,0)
 . W !,?5,"Date must be from ",BEG," to ",END,!
"RTN","ICDEXLK6",153,0)
 . W !,?5,"Examples of Valid Dates:",!
"RTN","ICDEXLK6",154,0)
 . W !,?9,MO," ",DY," ",YR," or "
"RTN","ICDEXLK6",155,0)
 . W DY," ",MO," ",$S($L(YR)=2:YR,$L(YR)=4:$E(YR,3,4),1:"")," or "
"RTN","ICDEXLK6",156,0)
 . W +($E(LO,6,7)),"/",$E(LO,4,5),"/",$E((1700+$E(LO,1,3)),3,4)," or "
"RTN","ICDEXLK6",157,0)
 . W $E(LO,4,5),$E(LO,6,7),$E((1700+$E(LO,1,3)),3,4)
"RTN","ICDEXLK6",158,0)
 I $G(LO)'?7N!($G(HI)'?7N) D
"RTN","ICDEXLK6",159,0)
 . W !,?5,"Examples of Valid Dates:",!
"RTN","ICDEXLK6",160,0)
 . W !,?9,"JAN 20 1957 or 20 JAN 57 or 1/20/57 or 012057"
"RTN","ICDEXLK6",161,0)
 W !,?9,"   T   (for TODAY),  T+1 (for TOMORROW),  T+2,  T+7, etc."
"RTN","ICDEXLK6",162,0)
 W !,?9,"   T-1 (for YESTERDAY),  T-3W (for 3 WEEKS AGO), etc.",!
"RTN","ICDEXLK6",163,0)
 W !,?5,"This date is sometimes called the 'versioning date' (VistA) or"
"RTN","ICDEXLK6",164,0)
 W !,?5,"the 'date service was provided to the patient' (HIPAA)"
"RTN","ICDEXLK6",165,0)
 Q
"RTN","ICDEXLK6",166,0)
 ;
"RTN","ICDEXLK6",167,0)
DIC0(X) ; Correct DIC(0) for a versioned file
"RTN","ICDEXLK6",168,0)
 ;
"RTN","ICDEXLK6",169,0)
 ; Not used  B - There are no pointer/variable pointers
"RTN","ICDEXLK6",170,0)
 ;               in index fields
"RTN","ICDEXLK6",171,0)
 ;           C - Cross-Reference suppression not allowed,
"RTN","ICDEXLK6",172,0)
 ;               entries must be unique
"RTN","ICDEXLK6",173,0)
 ;           I - If FileMan passes control to ICDEXLK, 
"RTN","ICDEXLK6",174,0)
 ;               then "I"gnore no longer applies
"RTN","ICDEXLK6",175,0)
 ;           K - There is no primary Key (may change in
"RTN","ICDEXLK6",176,0)
 ;               the future)
"RTN","ICDEXLK6",177,0)
 ;           L - "Learn-As-You-Go" not allowed LAYGO is killed
"RTN","ICDEXLK6",178,0)
 ;           n - Only Codes, Text and IENs are allowed.  "n"
"RTN","ICDEXLK6",179,0)
 ;               Returns too many values
"RTN","ICDEXLK6",180,0)
 ;           U - Only Codes, Text and IENs are allowed.
"RTN","ICDEXLK6",181,0)
 ;           V - Verify is always required when one entry is
"RTN","ICDEXLK6",182,0)
 ;               found
"RTN","ICDEXLK6",183,0)
 K LAYGO S X=$G(X)  K DINUM,DLAYGO N CHR,STR F CHR="C","B","K","L","n","U","T","V","I" D
"RTN","ICDEXLK6",184,0)
 . F  Q:X'[CHR  S X=$P(X,CHR,1)_$P(X,CHR,2,299)
"RTN","ICDEXLK6",185,0)
 S STR="" F CHR="A","E","Q","M","F","N","O","S","X","Z" S:X[CHR STR=STR_CHR
"RTN","ICDEXLK6",186,0)
 ;
"RTN","ICDEXLK6",187,0)
 ;           If non-numeric, and you are going to "A" ask 
"RTN","ICDEXLK6",188,0)
 ;           then you are going to "E" echo
"RTN","ICDEXLK6",189,0)
 S:STR["A"&(STR'["E")&(STR'["N") STR=STR_"E"
"RTN","ICDEXLK6",190,0)
 ;
"RTN","ICDEXLK6",191,0)
 ;           If you are going to "E" echo, and X does not 
"RTN","ICDEXLK6",192,0)
 ;           exist, then you will "A" ask
"RTN","ICDEXLK6",193,0)
 S:STR["E"&(STR'["A")&('$L($G(X))) STR=STR_"A"
"RTN","ICDEXLK6",194,0)
 S:STR'["A"&(STR'["E")&(STR'["X") STR=STR_"X"
"RTN","ICDEXLK6",195,0)
 S X=STR
"RTN","ICDEXLK6",196,0)
 Q X
"RTN","ICDEXLK6",197,0)
DICU ;   Undo DIC
"RTN","ICDEXLK6",198,0)
 S:$L($G(ICDDICW)) DIC("W")=$G(ICDDICW)
"RTN","ICDEXLK6",199,0)
 S:$L($G(ICDDICA)) DIC("A")=$G(ICDDICA)
"RTN","ICDEXLK6",200,0)
 S:$L($G(ICDDICB)) DIC("B")=$G(ICDDICB)
"RTN","ICDEXLK6",201,0)
 S:$L($G(ICDDICS)) DIC("S")=$G(ICDDICS)
"RTN","ICDEXLK6",202,0)
 S:$L($G(ICDDIC0)) DIC(0)=$G(ICDDIC0)
"RTN","ICDEXLK6",203,0)
 S:$L($G(ICDDIC00)) DIC(0)=$G(ICDDIC00)
"RTN","ICDEXLK6",204,0)
 Q
"RTN","ICDEXLK6",205,0)
DIE ;   Set for DIE call
"RTN","ICDEXLK6",206,0)
 Q:'$L($G(DIE))  S:'$L($G(DIC("A")))&($L($G(DIP))) DIC("A")=$G(DIP)
"RTN","ICDEXLK6",207,0)
 S:$L($G(DIC("A")))&($G(DIC("A"))'[": ") DIC("A")=$G(DIC("A"))_":  "
"RTN","ICDEXLK6",208,0)
 N DIE,DIP,DZ,X1
"RTN","ICDEXLK6",209,0)
 Q
"RTN","ICDEXLK6",210,0)
DICS(ICDS) ;   Check DIC("S")
"RTN","ICDEXLK6",211,0)
 N ICDT1,ICDT2,ICDTS S ICDT1=$D(X),ICDT2=$G(X) Q:'$L($G(ICDS)) ""
"RTN","ICDEXLK6",212,0)
 S (ICDTS,X)=$G(ICDS) D ^DIM I '$D(X) S:ICDT1>0 X=$G(ICDT2) Q ""
"RTN","ICDEXLK6",213,0)
 S ICDS=$G(ICDTS) S:ICDT1>0 X=$G(ICDT2) S:$L($G(ICDX)) X=$G(ICDX)
"RTN","ICDEXLK6",214,0)
 Q ICDS
"RTN","ICDEXLK6",215,0)
 ;
"RTN","ICDEXLK6",216,0)
SAV(X,DIC) ;   Save Defaults
"RTN","ICDEXLK6",217,0)
 N NUM,COM,VAL,ID,CUR,FUT,FILE,ROOT,SUB Q:+($G(DUZ))'>0  Q:'$L($G(DIC))  Q:+($G(Y))'>0
"RTN","ICDEXLK6",218,0)
 S ROOT=$$ROOT^ICDEX(DIC) Q:'$L(ROOT)  S SUB=$TR(ROOT,"^(,","") Q:'$L(SUB)
"RTN","ICDEXLK6",219,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:+FILE'>0  Q:"^80^80.1^"'[("^"_FILE_"^")
"RTN","ICDEXLK6",220,0)
 S NUM=+($G(DUZ)) Q:+NUM'>0  Q:'$L($$GET1^DIQ(200,(NUM_","),.01))  S VAL=$G(Y) Q:'$L(VAL)
"RTN","ICDEXLK6",221,0)
 S COM=$S(FILE=80:"DX",FILE=80.1:"PR",1:""),ID=$$TM(("ICDEXLK "_NUM_" "_COM))
"RTN","ICDEXLK6",222,0)
 S CUR=$$DT^XLFDT,FUT=$$FMADD^XLFDT(CUR,60)
"RTN","ICDEXLK6",223,0)
 S ^XTMP(ID,0)=FUT_"^"_CUR_"^"_"ICD "_$S(COM="DX":"Diagnosis",COM="PR":"Procedures",1:"")
"RTN","ICDEXLK6",224,0)
 S ^XTMP(ID,SUB)=VAL S:$D(@(ROOT_+($G(Y))_",0)")) ^DISV(DUZ,ROOT)=+($G(Y))
"RTN","ICDEXLK6",225,0)
 Q
"RTN","ICDEXLK6",226,0)
RET(DIC) ;   Retrieve Defaults
"RTN","ICDEXLK6",227,0)
 N NUM,COM,ID,CUR,FUT,FILE,ROOT,SUB Q:+($G(DUZ))'>0 ""  Q:'$L($G(DIC)) ""
"RTN","ICDEXLK6",228,0)
 S ROOT=$$ROOT^ICDEX($G(DIC)) Q:'$L(ROOT) ""  S SUB=$TR(ROOT,"^(,","") Q:'$L(SUB) ""
"RTN","ICDEXLK6",229,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:+FILE'>0 ""  Q:"^80^80.1^"'[("^"_FILE_"^") ""
"RTN","ICDEXLK6",230,0)
 S NUM=+($G(DUZ)) Q:+NUM'>0 ""  Q:'$L($$GET1^DIQ(200,(NUM_","),.01)) ""
"RTN","ICDEXLK6",231,0)
 S COM=$S(FILE=80:"DX",FILE=80.1:"PR",1:""),ID=$$TM(("ICDEXLK "_NUM_" "_COM))
"RTN","ICDEXLK6",232,0)
 S X=$G(^XTMP(ID,SUB)) S:+X'>0&(+($G(^DISV(NUM,ROOT)))>0) X=+($G(^DISV(NUM,ROOT)))
"RTN","ICDEXLK6",233,0)
 Q X
"RTN","ICDEXLK6",234,0)
PA(ICD,X) ;   Parse Array
"RTN","ICDEXLK6",235,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,ICDI,ICDLEN,ICDC K ^UTILITY($J,"W") Q:'$D(ICD)
"RTN","ICDEXLK6",236,0)
 S ICDLEN=+($G(X)) S:+ICDLEN'>0 ICDLEN=79 S ICDC=+($G(ICD)) S:+($G(ICDC))'>0 ICDC=$O(ICD(" "),-1) Q:+ICDC'>0
"RTN","ICDEXLK6",237,0)
 S DIWL=1,DIWF="C"_+ICDLEN S ICDI=0 F  S ICDI=$O(ICD(ICDI)) Q:+ICDI=0  S X=$G(ICD(ICDI)) D ^DIWP
"RTN","ICDEXLK6",238,0)
 K ICD S (ICDC,ICDI)=0 F  S ICDI=$O(^UTILITY($J,"W",1,ICDI)) Q:+ICDI=0  D
"RTN","ICDEXLK6",239,0)
 . S ICD(ICDI)=$$TM($G(^UTILITY($J,"W",1,ICDI,0))," "),ICDC=ICDC+1
"RTN","ICDEXLK6",240,0)
 S:$L(ICDC) ICD=ICDC K ^UTILITY($J,"W")
"RTN","ICDEXLK6",241,0)
 Q
"RTN","ICDEXLK6",242,0)
OUT(X,Y,Z,ARY) ;   Output Array
"RTN","ICDEXLK6",243,0)
 K ARY N FILE,TERM,ROOT,IEN,FMT S ROOT=$G(X),IEN=+($G(Y)) Q:'$L(ROOT)  S FMT=$G(Z)
"RTN","ICDEXLK6",244,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^")
"RTN","ICDEXLK6",245,0)
 S FILE=$$FILE^ICDEX(ROOT) Q:"^80^80.1^"'[("^"_FILE_"^")
"RTN","ICDEXLK6",246,0)
 S:FMT'>0 FMT=1 S:FMT>4 FMT=1 Q:'$D(@(ROOT_IEN_",0)"))
"RTN","ICDEXLK6",247,0)
 I +($G(FMT))=1!(+($G(FMT))=3) S TERM=$$SD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK6",248,0)
 I +($G(FMT))=2!(+($G(FMT))=4) S TERM=$$LD^ICDEX(FILE,IEN,CDT)
"RTN","ICDEXLK6",249,0)
 Q:'$L(TERM)  Q:$P(TERM,"^",1)=-1  S ARY(1)=TERM Q:+($G(FMT))=1!(+($G(FMT))=3)
"RTN","ICDEXLK6",250,0)
 D:+($G(FMT))=2 PAR^ICDEX(.ARY,60) D:+($G(FMT))=4 PAR^ICDEX(.ARY,70)
"RTN","ICDEXLK6",251,0)
 Q
"RTN","ICDEXLK6",252,0)
XT(X) ;   Input Transform for X
"RTN","ICDEXLK6",253,0)
 S X=$TR($G(X),"""","") S:X="#" X="" S X=$$TM(X,"#")
"RTN","ICDEXLK6",254,0)
 Q X
"RTN","ICDEXLK6",255,0)
TM(X,Y) ;   Trim Y
"RTN","ICDEXLK6",256,0)
 S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","ICDEXLK6",257,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","ICDEXLK6",258,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","ICDEXLK6",259,0)
 Q X
"RTN","ICDEXS")
0^17^B148931476
"RTN","ICDEXS",1,0)
ICDEXS ;SLC/KER - ICD Extractor - Support ;12/19/2014
"RTN","ICDEXS",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDEXS",3,0)
 ;               
"RTN","ICDEXS",4,0)
 ; Global Variables
"RTN","ICDEXS",5,0)
 ;    ^ICD0(              N/A
"RTN","ICDEXS",6,0)
 ;    ^ICD9(              N/A
"RTN","ICDEXS",7,0)
 ;    ^ICDS(              N/A
"RTN","ICDEXS",8,0)
 ;               
"RTN","ICDEXS",9,0)
 ; External References
"RTN","ICDEXS",10,0)
 ;    $$GET1^DIQ          ICR   2056
"RTN","ICDEXS",11,0)
 ;    $$DT^XLFDT          ICR  10103
"RTN","ICDEXS",12,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","ICDEXS",13,0)
 ;    $$UP^XLFSTR         ICR  10104
"RTN","ICDEXS",14,0)
 ;               
"RTN","ICDEXS",15,0)
EFF(FILE,IEN,EDT) ; returns effective date and status for code/modifier
"RTN","ICDEXS",16,0)
 ;
"RTN","ICDEXS",17,0)
 ; Input:
"RTN","ICDEXS",18,0)
 ; 
"RTN","ICDEXS",19,0)
 ;    FILE   File number 80/80.1 (required)
"RTN","ICDEXS",20,0)
 ;    IEN    ICD IEN (required)
"RTN","ICDEXS",21,0)
 ;    EDT    Date to check (FileMan format) (required)
"RTN","ICDEXS",22,0)
 ;
"RTN","ICDEXS",23,0)
 ; Output:  
"RTN","ICDEXS",24,0)
 ; 
"RTN","ICDEXS",25,0)
 ;   A 3 piece "^" delimited string
"RTN","ICDEXS",26,0)
 ;   
"RTN","ICDEXS",27,0)
 ;          1   Status
"RTN","ICDEXS",28,0)
 ;                1 - Active
"RTN","ICDEXS",29,0)
 ;                0 - Inactive  
"RTN","ICDEXS",30,0)
 ;          2   Inactivation Date
"RTN","ICDEXS",31,0)
 ;          3   Activation Date
"RTN","ICDEXS",32,0)
 ;     -or-
"RTN","ICDEXS",33,0)
 ;          -1^error message
"RTN","ICDEXS",34,0)
 ;
"RTN","ICDEXS",35,0)
 N EFF,EFFB,EFFDOS,EFFDT,EFFN,EFFST,EFILE,ICDY,ROOT,STR
"RTN","ICDEXS",36,0)
 I $G(IEN)=""!(IEN'?1N.N) Q "-1^No Code Selected"
"RTN","ICDEXS",37,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-1^Invalid File"
"RTN","ICDEXS",38,0)
 S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",39,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",40,0)
 Q:'$G(EDT) "-1^No Date Selected" S EDT=$P(EDT,".",1)
"RTN","ICDEXS",41,0)
 Q:EDT'?7N "-1^Invalid Date Selected"
"RTN","ICDEXS",42,0)
 S IEN=+($G(IEN)) Q:+IEN'>0 "-1^IEN Invalid"  S EFILE=ROOT_IEN_",66,"
"RTN","ICDEXS",43,0)
 S ICDY=$P($G(@(ROOT_+IEN_",1)")),"^",1) Q:+ICDY'>0 "-1^Invalid Coding System"
"RTN","ICDEXS",44,0)
 S EDT=$S($G(EDT)="":$$DT^XLFDT,1:$$DTBR^ICDEX(EDT,,ICDY))+.001
"RTN","ICDEXS",45,0)
 S EFF=$O(@(EFILE_"""B"","_EDT_")"),-1) Q:'EFF "0^^"
"RTN","ICDEXS",46,0)
 S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")),STR=$G(@(EFILE_EFFN_",0)")) Q:STR="" "0^^"
"RTN","ICDEXS",47,0)
 S EFFDT=$P(STR,"^"),EFFST=$P(STR,"^",2),EFFB=0,EFF=+EFF
"RTN","ICDEXS",48,0)
 F  S EFF=$O(@(EFILE_"""B"","_EFF_")"),-1) Q:'EFF!EFFB  D
"RTN","ICDEXS",49,0)
 . S EFFN=$O(@(EFILE_"""B"","_EFF_",0)")) I 'EFFN S EFFB=1 Q
"RTN","ICDEXS",50,0)
 . S EFFDOS=$G(@(EFILE_EFFN_",0)")) I 'EFFDOS S EFFB=1 Q
"RTN","ICDEXS",51,0)
 . S EFFB=(EFFST'=$P(EFFDOS,"^",2))
"RTN","ICDEXS",52,0)
 S EFFDOS=$P($G(EFFDOS),"^")
"RTN","ICDEXS",53,0)
 I EFFST S $P(STR,"^",3,4)=(EFFDOS)_"^"_EFFDT
"RTN","ICDEXS",54,0)
 E  S $P(STR,"^",3,4)=EFFDT_"^"_(EFFDOS)
"RTN","ICDEXS",55,0)
 Q $P(STR,"^",2,4)
"RTN","ICDEXS",56,0)
IA(FILE,IEN) ; Initial Activation Date
"RTN","ICDEXS",57,0)
 ;
"RTN","ICDEXS",58,0)
 ; Input:
"RTN","ICDEXS",59,0)
 ; 
"RTN","ICDEXS",60,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDEXS",61,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXS",62,0)
 ;   
"RTN","ICDEXS",63,0)
 ; Output:
"RTN","ICDEXS",64,0)
 ; 
"RTN","ICDEXS",65,0)
 ;   $$IA   Initial Activation Date OR -1 ^ Error Message
"RTN","ICDEXS",66,0)
 ;   
"RTN","ICDEXS",67,0)
 N ROOT,EFF,HIS,NOD,ACT,INA
"RTN","ICDEXS",68,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-1^Invalid File"  S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",69,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",70,0)
 S IEN=$G(IEN) Q:+IEN'>0!('$D(@(ROOT_+IEN_")"))) "-1^Invalid Code"
"RTN","ICDEXS",71,0)
 S ACT="",EFF=""
"RTN","ICDEXS",72,0)
 F  S EFF=$O(@(ROOT_+IEN_",66,""B"","""_EFF_""")")) Q:(EFF'?7N)!($L(ACT))  D  Q:$L(ACT)
"RTN","ICDEXS",73,0)
 . S HIS=" " F  S HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","""_HIS_""")"),-1) Q:+HIS'>0  D  Q:$L(ACT)
"RTN","ICDEXS",74,0)
 . . N NOD,STA S NOD=$G(@(ROOT_+IEN_",66,"_+HIS_",0)"))
"RTN","ICDEXS",75,0)
 . . S STA=$P(NOD,"^",2) S:STA?1N&(+STA>0)&('$L(ACT)) ACT=EFF
"RTN","ICDEXS",76,0)
 S:'$L(ACT) ACT="-1^Initial activation date not found"
"RTN","ICDEXS",77,0)
 Q ACT
"RTN","ICDEXS",78,0)
LA(FILE,IEN,CDT) ; Last Current Activation Date
"RTN","ICDEXS",79,0)
 ;
"RTN","ICDEXS",80,0)
 ; Input:
"RTN","ICDEXS",81,0)
 ; 
"RTN","ICDEXS",82,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDEXS",83,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXS",84,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDEXS",85,0)
 ;   
"RTN","ICDEXS",86,0)
 ; Output:
"RTN","ICDEXS",87,0)
 ; 
"RTN","ICDEXS",88,0)
 ;   $$LA   Last Activation Date OR -1 ^ Error Message
"RTN","ICDEXS",89,0)
 ;   
"RTN","ICDEXS",90,0)
 N ROOT,EFF,HIS,NOD,ACT,INA,ICDF
"RTN","ICDEXS",91,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-1^Invalid File"  S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",92,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",93,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT S IEN=$G(IEN)
"RTN","ICDEXS",94,0)
 Q:+IEN'>0!('$D(@(ROOT_+IEN_")"))) "-1^Invalid Code"
"RTN","ICDEXS",95,0)
 S ACT="",EFF=CDT+.000001
"RTN","ICDEXS",96,0)
 F  S EFF=$O(@(ROOT_+IEN_",66,""B"","""_EFF_""")"),-1) Q:(EFF'?7N)!($L(ACT))  D  Q:$L(ACT)
"RTN","ICDEXS",97,0)
 . S HIS=" " F  S HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","""_HIS_""")"),-1) Q:+HIS'>0  D  Q:$L(ACT)
"RTN","ICDEXS",98,0)
 . . N NOD,STA S NOD=$G(@(ROOT_+IEN_",66,"_+HIS_",0)"))
"RTN","ICDEXS",99,0)
 . . S STA=$P(NOD,"^",2) S:STA?1N&(+STA>0)&('$L(ACT)) ACT=EFF
"RTN","ICDEXS",100,0)
 S:'$L(ACT) ACT="-1^Not activated on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",101,0)
 Q ACT
"RTN","ICDEXS",102,0)
LI(FILE,IEN,CDT) ; Last Current Inactivation Date
"RTN","ICDEXS",103,0)
 ; 
"RTN","ICDEXS",104,0)
 ; Input:
"RTN","ICDEXS",105,0)
 ; 
"RTN","ICDEXS",106,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXS",107,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDEXS",108,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDEXS",109,0)
 ;   
"RTN","ICDEXS",110,0)
 ; Output:
"RTN","ICDEXS",111,0)
 ; 
"RTN","ICDEXS",112,0)
 ;   $$LI   Last Inactivation Date OR -1 ^ Error Message
"RTN","ICDEXS",113,0)
 ;   
"RTN","ICDEXS",114,0)
 N ROOT,EFF,HIS,NOD,ACT,INA
"RTN","ICDEXS",115,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-12^Invalid File"  S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",116,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",117,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT S IEN=$G(IEN)
"RTN","ICDEXS",118,0)
 Q:+IEN'>0!('$D(@(ROOT_+IEN_")"))) "-1^Invalid Code"
"RTN","ICDEXS",119,0)
 S INA="",EFF=CDT+.000001
"RTN","ICDEXS",120,0)
 F  S EFF=$O(@(ROOT_+IEN_",66,""B"","""_EFF_""")"),-1) Q:'$L(EFF)!(EFF'?7N)!($L(INA))  D  Q:$L(INA)
"RTN","ICDEXS",121,0)
 . S HIS=" " F  S HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","""_HIS_""")"),-1) Q:+HIS'>0  D  Q:$L(INA)
"RTN","ICDEXS",122,0)
 . . N NOD,STA S NOD=$G(@(ROOT_+IEN_",66,"_+HIS_",0)"))
"RTN","ICDEXS",123,0)
 . . S STA=$P(NOD,"^",2) S:STA?1N&(+STA'>0)&('$L(INA)) INA=EFF
"RTN","ICDEXS",124,0)
 S:'$L(INA) INA="-1^Not inactivated on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",125,0)
 Q INA
"RTN","ICDEXS",126,0)
LS(FILE,IEN,CDT,FMT) ; Last Status
"RTN","ICDEXS",127,0)
 ; 
"RTN","ICDEXS",128,0)
 ; Input:
"RTN","ICDEXS",129,0)
 ; 
"RTN","ICDEXS",130,0)
 ;   FILE   Global Root/File Number (Required)
"RTN","ICDEXS",131,0)
 ;   IEN    Internal Entry Number (Required)
"RTN","ICDEXS",132,0)
 ;   CDT    Date (default = TODAY) (Optional)
"RTN","ICDEXS",133,0)
 ;   FMT    Format 
"RTN","ICDEXS",134,0)
 ;            0  Last Status only (default)
"RTN","ICDEXS",135,0)
 ;            1  Last Status ^ Effective Date
"RTN","ICDEXS",136,0)
 ;   
"RTN","ICDEXS",137,0)
 ; Output:
"RTN","ICDEXS",138,0)
 ; 
"RTN","ICDEXS",139,0)
 ;   $$LS   Last Status (1/0) OR -1 ^ Error Message
"RTN","ICDEXS",140,0)
 ;   
"RTN","ICDEXS",141,0)
 N ROOT,EFF,HIS,NOD,ACT,INA,LEF,STA
"RTN","ICDEXS",142,0)
 S FILE=$$FILE($G(FILE)) Q:+FILE'>0 "-12^Invalid File"  S ROOT=$$ROOT(FILE)
"RTN","ICDEXS",143,0)
 Q:"^ICD9(^ICD0(^"'[("^"_$E(ROOT,2,$L(ROOT))_"^") "-1^Invalid Global"
"RTN","ICDEXS",144,0)
 S CDT=$G(CDT) S:CDT'?7N CDT=$$DT^XLFDT S IEN=$G(IEN)
"RTN","ICDEXS",145,0)
 Q:+IEN'>0!('$D(@(ROOT_+IEN_")"))) "-1^Invalid Code"
"RTN","ICDEXS",146,0)
 S INA="",EFF=CDT+.000001 S EFF=$O(@(ROOT_+IEN_",66,""B"","""_EFF_""")"),-1)
"RTN","ICDEXS",147,0)
 Q:'$L(EFF)!(EFF'?7N) "-1^No status on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",148,0)
 S HIS="~",HIS=$O(@(ROOT_+IEN_",66,""B"","_EFF_","""_HIS_""")"),-1)
"RTN","ICDEXS",149,0)
 Q:+HIS'>0 "-1^No status on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",150,0)
 S NOD=$G(@(ROOT_+IEN_",66,"_+HIS_",0)")),STA=$P(NOD,"^",2),LEF=$P(NOD,"^",1)
"RTN","ICDEXS",151,0)
 Q:"^0^1^"'[("^"_STA_"^") "-1^No status on or before "_$$FMTE^XLFDT($G(CDT),"5DZ")
"RTN","ICDEXS",152,0)
 S:+($G(FMT))>0&($G(LEF)?7N) STA=STA_"^"_LEF
"RTN","ICDEXS",153,0)
 Q STA
"RTN","ICDEXS",154,0)
 ;
"RTN","ICDEXS",155,0)
NUM(CODE) ; Convert Code to a Numeric Value (opposite of $$COD)
"RTN","ICDEXS",156,0)
 ;
"RTN","ICDEXS",157,0)
 ; Input:
"RTN","ICDEXS",158,0)
 ; 
"RTN","ICDEXS",159,0)
 ;    CODE   ICD CODE (required)
"RTN","ICDEXS",160,0)
 ;
"RTN","ICDEXS",161,0)
 ; Output:  
"RTN","ICDEXS",162,0)
 ; 
"RTN","ICDEXS",163,0)
 ;    NUM    Numerical representation of CODE
"RTN","ICDEXS",164,0)
 ;    
"RTN","ICDEXS",165,0)
 ;           or
"RTN","ICDEXS",166,0)
 ;           
"RTN","ICDEXS",167,0)
 ;           -1 on error
"RTN","ICDEXS",168,0)
 ;  
"RTN","ICDEXS",169,0)
 S CODE=$G(CODE) Q:'$L($G(CODE)) 0
"RTN","ICDEXS",170,0)
 N PSN,OUT,CHR,ERR S ERR=0,OUT="" F PSN=1:1:9 D
"RTN","ICDEXS",171,0)
 . S CHR=$E(CODE,PSN) S CHR=$S($L(CHR):$A(CHR),1:32),CHR=CHR-30
"RTN","ICDEXS",172,0)
 . S:CHR'>0 ERR=1 F  Q:$L(CHR)>1  S CHR="0"_CHR
"RTN","ICDEXS",173,0)
 . S:$L(CHR)'=2 ERR=1 S OUT=OUT_CHR
"RTN","ICDEXS",174,0)
 Q:ERR -1  S:+OUT>0 OUT="1"_OUT
"RTN","ICDEXS",175,0)
 Q OUT
"RTN","ICDEXS",176,0)
COD(NUM) ; Convert Numeric Value to a Code (opposite of $$NUM)
"RTN","ICDEXS",177,0)
 ;
"RTN","ICDEXS",178,0)
 ; Input:
"RTN","ICDEXS",179,0)
 ; 
"RTN","ICDEXS",180,0)
 ;    NUM    Numerical representation of an ICD Code (required)
"RTN","ICDEXS",181,0)
 ;
"RTN","ICDEXS",182,0)
 ; Output:  
"RTN","ICDEXS",183,0)
 ; 
"RTN","ICDEXS",184,0)
 ;    CODE   ICD Code
"RTN","ICDEXS",185,0)
 ;    
"RTN","ICDEXS",186,0)
 ;           or
"RTN","ICDEXS",187,0)
 ;           
"RTN","ICDEXS",188,0)
 ;           null on error
"RTN","ICDEXS",189,0)
 ;  
"RTN","ICDEXS",190,0)
 Q:'$L(NUM) ""  Q:$E(NUM,1)'=1 ""  S NUM=$E(NUM,2,$L(NUM))
"RTN","ICDEXS",191,0)
 N PSN,OUT,CHR,ADD S OUT=""
"RTN","ICDEXS",192,0)
 F PSN=1:2 S CHR=$E(NUM,PSN,(PSN+1)) Q:'$L(CHR)  D
"RTN","ICDEXS",193,0)
 . S CHR=+CHR+30 S ADD="" S:CHR'=32 ADD=$C(CHR) S:$L(ADD) OUT=OUT_ADD
"RTN","ICDEXS",194,0)
 Q OUT
"RTN","ICDEXS",195,0)
IE(X) ; Internal or External
"RTN","ICDEXS",196,0)
 ;
"RTN","ICDEXS",197,0)
 ; Input:
"RTN","ICDEXS",198,0)
 ;
"RTN","ICDEXS",199,0)
 ;   X     ICD code or IEN
"RTN","ICDEXS",200,0)
 ;
"RTN","ICDEXS",201,0)
 ; Output:
"RTN","ICDEXS",202,0)
 ; 
"RTN","ICDEXS",203,0)
 ;   $$IE  Set of Codes
"RTN","ICDEXS",204,0)
 ;   
"RTN","ICDEXS",205,0)
 ;           I  Internal format (IEN)
"RTN","ICDEXS",206,0)
 ;           E  External format (Code)
"RTN","ICDEXS",207,0)
 ;           
"RTN","ICDEXS",208,0)
 ;           Null on error
"RTN","ICDEXS",209,0)
 ;
"RTN","ICDEXS",210,0)
 N IN,OUT
"RTN","ICDEXS",211,0)
 S IN=$G(X) Q:'$L(X) ""
"RTN","ICDEXS",212,0)
 Q:IN?1N.N&('$D(^ICD9("BA",(IN_" "))))&('$D(^ICD0("BA",(IN_" ")))) "I"
"RTN","ICDEXS",213,0)
 Q:$D(^ICD9("BA",(IN_" ")))!($D(^ICD0("BA",(IN_" ")))) "E"
"RTN","ICDEXS",214,0)
 Q ""
"RTN","ICDEXS",215,0)
FILE(X) ; File Number
"RTN","ICDEXS",216,0)
 ;
"RTN","ICDEXS",217,0)
 ; Input:   
"RTN","ICDEXS",218,0)
 ; 
"RTN","ICDEXS",219,0)
 ;   X     File/Identifier/Coding System/Code (required)
"RTN","ICDEXS",220,0)
 ;   
"RTN","ICDEXS",221,0)
 ; Output:  
"RTN","ICDEXS",222,0)
 ; 
"RTN","ICDEXS",223,0)
 ;   FILE  File Number or -1 on error
"RTN","ICDEXS",224,0)
 ;   
"RTN","ICDEXS",225,0)
 N ICDX,ICDF S (ICDX,X)=$G(X) Q:'$L(X) -1  N ICDR
"RTN","ICDEXS",226,0)
 I X?1N.N Q:X?1N&(+X=0) 80.1  Q:X?1N&(+X=9) 80
"RTN","ICDEXS",227,0)
 S ICDR=$$ROOT(X) Q:$D(^ICD9("BA",(X_" "))) 80  Q:$D(^ICD0("BA",(X_" "))) 80.1
"RTN","ICDEXS",228,0)
 Q:X=80 80  Q:X=80.1 80.1  Q:X["ICD9" 80  Q:X["ICD0" 80.1  Q:X["DX"!(X["DIAG") 80  Q:X["PR"!(X["PROC")!(X["OP")!(X["PCS") 80.1
"RTN","ICDEXS",229,0)
 I ICDX?1N.N I ICDX'["." Q:$D(^ICD9("ABA",+ICDX)) 80 Q:$D(^ICD0("ABA",+ICDX)) 80.1
"RTN","ICDEXS",230,0)
 Q:$D(^ICD9("BA",(X_" "))) 80  Q:$D(^ICD0("BA",(X_" "))) 80.1
"RTN","ICDEXS",231,0)
 Q:$D(^ICD9("AVA",(X_" "))) 80  Q:$D(^ICD0("AVA",(X_" "))) 80.1
"RTN","ICDEXS",232,0)
 Q:$D(^ICD9("AEXC",(X_" "))) 80  Q:$D(^ICD0("AEXC",(X_" "))) 80.1
"RTN","ICDEXS",233,0)
 Q:ICDR["ICD9" 80  Q:ICDR["ICD0" 80.1
"RTN","ICDEXS",234,0)
 Q -1
"RTN","ICDEXS",235,0)
ROOT(X) ; Global Root
"RTN","ICDEXS",236,0)
 ;
"RTN","ICDEXS",237,0)
 ; Input:   
"RTN","ICDEXS",238,0)
 ; 
"RTN","ICDEXS",239,0)
 ;   X     File Number, File Name, Root, Identifier
"RTN","ICDEXS",240,0)
 ;         or Coding System (required)
"RTN","ICDEXS",241,0)
 ;   
"RTN","ICDEXS",242,0)
 ; Output:  
"RTN","ICDEXS",243,0)
 ; 
"RTN","ICDEXS",244,0)
 ;   ROOT  Global Root for File or null
"RTN","ICDEXS",245,0)
 ;   
"RTN","ICDEXS",246,0)
 N ICDR,ICDF S ICDR=$$RY($G(X)) Q:$L(ICDR) ICDR
"RTN","ICDEXS",247,0)
 S ICDR=$$RC($G(X)) Q:$L(ICDR) ICDR  S X=$$UP^XLFSTR($G(X))
"RTN","ICDEXS",248,0)
 S ICDR=$$RF($G(X)) Q:$L(ICDR) ICDR
"RTN","ICDEXS",249,0)
 S ICDR=$$RR($G(X)) Q:$L(ICDR) ICDR
"RTN","ICDEXS",250,0)
 S:X?1N.N ICDR=$$RS(+($G(X))) Q:$L(ICDR) ICDR
"RTN","ICDEXS",251,0)
 Q ""
"RTN","ICDEXS",252,0)
RY(SYS) ; Global Root from System
"RTN","ICDEXS",253,0)
 N FILE,ROOT S SYS=$G(SYS) Q:SYS'?1N.N ""  Q:SYS=80!(SYS=80.1) ""  Q:'$D(^ICDS(+SYS)) ""
"RTN","ICDEXS",254,0)
 S FILE=$P($G(^ICDS(+SYS,0)),"^",3) Q:+FILE'>0 ""  S ROOT=$$RF(FILE) Q:$L(ROOT) ROOT
"RTN","ICDEXS",255,0)
 Q ""
"RTN","ICDEXS",256,0)
RF(FILE) ; Global Root from File
"RTN","ICDEXS",257,0)
 Q:$G(FILE)=80 "^ICD9("  Q:$G(FILE)=80.1 "^ICD0("
"RTN","ICDEXS",258,0)
 Q ""
"RTN","ICDEXS",259,0)
RR(ID) ; Global Root from Root or Identifier
"RTN","ICDEXS",260,0)
 Q:ID["ICD9" "^ICD9(" Q:ID["ICD0" "^ICD0("  Q:ID="DX"!(ID["DIA") "^ICD9("  Q:ID="PR"!(ID["PRO")!(ID["OP") "^ICD0("
"RTN","ICDEXS",261,0)
 Q:ID="ICD"!(ID="10D") "^ICD9("  Q:ID="ICP"!(ID="10P") "^ICD0("
"RTN","ICDEXS",262,0)
 Q ""
"RTN","ICDEXS",263,0)
RS(SYS) ; Global Root from Coding System
"RTN","ICDEXS",264,0)
 S SYS=$TR(SYS," ","")  Q:$D(^ICD9("ABA",+SYS)) "^ICD9(" Q:$D(^ICD0("ABA",+SYS)) "^ICD0("
"RTN","ICDEXS",265,0)
 Q ""
"RTN","ICDEXS",266,0)
RC(COD) ; Global Root from Code
"RTN","ICDEXS",267,0)
 Q:$D(^ICD9("BA",($G(COD)_" "))) "^ICD9("  Q:$D(^ICD0("BA",($G(COD)_" "))) "^ICD0("
"RTN","ICDEXS",268,0)
 Q:$D(^ICD9("AVA",(X_" "))) "^ICD9("  Q:$D(^ICD0("AVA",(X_" "))) "^ICD0("
"RTN","ICDEXS",269,0)
 Q:$D(^ICD9("AEXC",(X_" "))) "^ICD9("  Q:$D(^ICD0("AEXC",(X_" "))) "^ICD0("
"RTN","ICDEXS",270,0)
 Q ""
"RTN","ICDEXS",271,0)
 ; 
"RTN","ICDEXS",272,0)
SYS(SYS,CDT,FMT) ; Resolve System (uses file 80.4)
"RTN","ICDEXS",273,0)
 ;
"RTN","ICDEXS",274,0)
 ; Input:
"RTN","ICDEXS",275,0)
 ;
"RTN","ICDEXS",276,0)
 ;   SYS     System/Source Abbreviation/System Identifier/Code
"RTN","ICDEXS",277,0)
 ;   CDT     Date (optional)
"RTN","ICDEXS",278,0)
 ;   FMT     Output Format (optional)
"RTN","ICDEXS",279,0)
 ;   
"RTN","ICDEXS",280,0)
 ;            I  Internal (default)
"RTN","ICDEXS",281,0)
 ;            E  External
"RTN","ICDEXS",282,0)
 ;            B  Both Internal ^ External
"RTN","ICDEXS",283,0)
 ;
"RTN","ICDEXS",284,0)
 ; Output:
"RTN","ICDEXS",285,0)
 ; 
"RTN","ICDEXS",286,0)
 ;   $$SYS System (numeric or alpha)
"RTN","ICDEXS",287,0)
 ;   
"RTN","ICDEXS",288,0)
 ;            Internal  External
"RTN","ICDEXS",289,0)
 ;               1      ICD-9-CM
"RTN","ICDEXS",290,0)
 ;               2      ICD-9 Proc
"RTN","ICDEXS",291,0)
 ;              30      ICD-10-CM
"RTN","ICDEXS",292,0)
 ;              31      ICD-10-PCS
"RTN","ICDEXS",293,0)
 ;         or
"RTN","ICDEXS",294,0)
 ;            -1   on error
"RTN","ICDEXS",295,0)
 ;            
"RTN","ICDEXS",296,0)
 N ICDC,ICDD,ICDF,ICDI,ICDO,ICDT,ICDU,ICDX,ICDT S ICDI=$G(SYS) Q:'$L(ICDI) -1
"RTN","ICDEXS",297,0)
 S ICDD=$P($G(CDT),".",1) S ICDF=$$UP^XLFSTR($G(FMT)) S:'$L(ICDF) ICDF="I"
"RTN","ICDEXS",298,0)
 S:"^E^B^"'[("^"_ICDF_"^") ICDF="I" S ICDU=$$UP^XLFSTR(ICDI)
"RTN","ICDEXS",299,0)
 S ICDO=$$SC(ICDI) Q:+ICDO>0 $S(ICDF["B":(+ICDO_"^"_$$SNAM(+ICDO)),ICDF["E":$$SNAM(+ICDO),1:+ICDO)
"RTN","ICDEXS",300,0)
 I ICDI?1N.N Q:$D(^ICDS(+ICDI)) $S(ICDF["B":(+ICDI_"^"_$$SNAM(+ICDI)),ICDF["E":$$SNAM(+ICDI),1:+ICDI)
"RTN","ICDEXS",301,0)
 S ICDO=$$SS(ICDI) Q:+ICDO>0 $S(ICDF["B":(+ICDO_"^"_$$SNAM(+ICDO)),ICDF["E":$$SNAM(+ICDO),1:+ICDO)
"RTN","ICDEXS",302,0)
 S ICDO=$$SM(ICDI,ICDD) Q:+ICDO>0 $S(ICDF["B":(+ICDO_"^"_$$SNAM(+ICDO)),ICDF["E":$$SNAM(+ICDO),1:+ICDO)
"RTN","ICDEXS",303,0)
 S ICDO=$$SP(ICDI) Q:+ICDO>0 $S(ICDF["B":(+ICDO_"^"_$$SNAM(+ICDO)),ICDF["E":$$SNAM(+ICDO),1:+ICDO)
"RTN","ICDEXS",304,0)
 Q -1
"RTN","ICDEXS",305,0)
SS(X) ; System from Coding System file 80.4
"RTN","ICDEXS",306,0)
 N ICDC,ICDI,ICDO,ICDU S ICDI=$G(X) Q:'$L(ICDI) ""  S ICDU=$$UP^XLFSTR(ICDI)
"RTN","ICDEXS",307,0)
 S ICDO="",ICDC="AZ" F  S ICDC=$O(^ICDS(ICDC)) Q:'$L(ICDC)  D  Q:+ICDO>0
"RTN","ICDEXS",308,0)
 . Q:ICDC="F"  N ICDT S ICDT=$O(^ICDS(ICDC,ICDI,0))
"RTN","ICDEXS",309,0)
 . S:+ICDT'>0 ICDT=$O(^ICDS(ICDC,ICDU,0)) S:+ICDT>0 ICDO=ICDT
"RTN","ICDEXS",310,0)
 Q ICDO
"RTN","ICDEXS",311,0)
SM(X,CDT) ; System from a Mnemonic
"RTN","ICDEXS",312,0)
 N ICDD,ICDX,ICDO,ICDU S ICDU=$$UP^XLFSTR($G(X)) Q:'$L(ICDU) ""  S ICDD=$G(CDT) S:ICDD'?7N ICDD=$$DT^XLFDT
"RTN","ICDEXS",313,0)
 S ICDX=$P($G(^ICDS(30,0)),"^",4),ICDO=""
"RTN","ICDEXS",314,0)
 I (ICDU["DIAG"!(ICDU["ICD9")!(ICDU="80")!(ICDU="DX")) I ICDD?7N,ICDX?7N S ICDO=$S(ICDD<ICDX:1,1:30)
"RTN","ICDEXS",315,0)
 I (ICDU["PROC"!(ICDU["OPER")!(ICDU["ICD0")!(ICDU["ICP9")!(ICDU="80.1")!(ICDU="PR")) I ICDD?7N,ICDX?7N S ICDO=$S(ICDD<ICDX:2,1:31)
"RTN","ICDEXS",316,0)
 Q ICDO
"RTN","ICDEXS",317,0)
SP(X) ; System from Pattern Match
"RTN","ICDEXS",318,0)
 N ICDT,ICDI,ICDO S ICDO="",ICDT=$$UP^XLFSTR($G(X)) Q:'$L(ICDT) ""
"RTN","ICDEXS",319,0)
 F  Q:ICDT'["ICD"  S ICDT=$P(ICDT,"ICD",1)_$P(ICDT,"ICD",2)
"RTN","ICDEXS",320,0)
 Q:'$L(ICDT) ""  S ICDI="" F  S ICDI=$O(^ICDS("B",ICDI)) Q:'$L(ICDI)  D  Q:+ICDO>0
"RTN","ICDEXS",321,0)
 . S:ICDT["9"&(ICDT["D")&(ICDT'["P")&(ICDI["9")&(ICDI["CM") ICDO=$O(^ICDS("B",ICDI,0)) Q:ICDO>0
"RTN","ICDEXS",322,0)
 . S:ICDT["9"&((ICDT["P")!(ICDT["O"))&(ICDI["9")&(ICDI["P") ICDO=$O(^ICDS("B",ICDI,0)) Q:ICDO>0
"RTN","ICDEXS",323,0)
 . S:ICDT["10"&(ICDT["D")&(ICDT'["P")&(ICDI["10")&(ICDI["CM") ICDO=$O(^ICDS("B",ICDI,0)) Q:ICDO>0
"RTN","ICDEXS",324,0)
 . S:ICDT["10"&((ICDT["P")!(ICDT["O"))&(ICDI["10")&(ICDI["P") ICDO=$O(^ICDS("B",ICDI,0)) Q:ICDO>0
"RTN","ICDEXS",325,0)
 Q ICDO
"RTN","ICDEXS",326,0)
SC(X) ; System from Code
"RTN","ICDEXS",327,0)
 N ICDI,ICDC,ICDO,ICDR,ICDU S ICDI=$G(X) S ICDC=$TR(ICDI," ","") Q:'$L(ICDC) ""
"RTN","ICDEXS",328,0)
 S ICDU=$$UP^XLFSTR(ICDC) S ICDO="" F ICDR="^ICD9(","^ICD0(" D  Q:+ICDO>0
"RTN","ICDEXS",329,0)
 . N TMP F TMP=ICDC,ICDU D  Q:+ICDO>0
"RTN","ICDEXS",330,0)
 . . N ICDS,ICDV,ICDE S ICDS=0 F  S ICDS=$O(@(ICDR_"""ABA"","_ICDS_")")) Q:+ICDS'>0  D  Q:ICDO>0
"RTN","ICDEXS",331,0)
 . . . S:$D(@(ICDR_"""ABA"","_ICDS_","""_TMP_" "")")) ICDO=ICDS
"RTN","ICDEXS",332,0)
 . . Q:ICDO>0  S ICDV=$O(@(ICDR_"""AVA"","""_TMP_" "",0)"))
"RTN","ICDEXS",333,0)
 . . S:+ICDV>0 ICDO=$P($G(@(ICDR_+ICDV_",1)")),"^",1) Q:ICDO>0
"RTN","ICDEXS",334,0)
 . . S ICDE=$O(@(ICDR_"""AEXC"","""_TMP_" "",0)"))
"RTN","ICDEXS",335,0)
 . . S:+ICDE>0 ICDO=$P($G(@(ICDR_+ICDE_",1)")),"^",1) Q:ICDO>0
"RTN","ICDEXS",336,0)
 Q ICDO
"RTN","ICDEXS",337,0)
SINFO(SYS,CDT) ; System Info (uses file 80.4)
"RTN","ICDEXS",338,0)
 ;
"RTN","ICDEXS",339,0)
 ; Input:
"RTN","ICDEXS",340,0)
 ;
"RTN","ICDEXS",341,0)
 ;   SYS      System/Source Abbreviation/System Identifier/Code
"RTN","ICDEXS",342,0)
 ;   CDT      Date (optional)
"RTN","ICDEXS",343,0)
 ;
"RTN","ICDEXS",344,0)
 ; Output:
"RTN","ICDEXS",345,0)
 ; 
"RTN","ICDEXS",346,0)
 ;   $$SINFO System Info (numeric or alpha)
"RTN","ICDEXS",347,0)
 ;   
"RTN","ICDEXS",348,0)
 ;            Internal  External
"RTN","ICDEXS",349,0)
 ;               1      IEN to file 80.4
"RTN","ICDEXS",350,0)
 ;               2      Coding System
"RTN","ICDEXS",351,0)
 ;               3      Abbreviation
"RTN","ICDEXS",352,0)
 ;               4      File Number
"RTN","ICDEXS",353,0)
 ;               5      Implementation Date
"RTN","ICDEXS",354,0)
 ;               6      Content
"RTN","ICDEXS",355,0)
 ;               
"RTN","ICDEXS",356,0)
 ;         or
"RTN","ICDEXS",357,0)
 ;            -1   on error
"RTN","ICDEXS",358,0)
 ;            
"RTN","ICDEXS",359,0)
 N ICDD,ICDS,ICDN,ICDT
"RTN","ICDEXS",360,0)
 S ICDD=$S($G(CDT)'?7N:$$DT^XLFDT,1:$G(CDT))
"RTN","ICDEXS",361,0)
 S ICDS=$$SYS($G(SYS),ICDD,"I")
"RTN","ICDEXS",362,0)
 Q:+ICDS'>0 "-1^Coding System Unknown"
"RTN","ICDEXS",363,0)
 S ICDN=$G(^ICDS(+ICDS,0)) Q:'$L(ICDN) "-1^Coding System not found"
"RTN","ICDEXS",364,0)
 S ICDT=$S($P(ICDN,"^",3)=80:"Diagnosis",$P(ICDN,"^",3)=80.1:"Procedure",1:"")
"RTN","ICDEXS",365,0)
 S SYS=ICDS_"^"_ICDN S:$L(ICDT) SYS=SYS_"^"_ICDT
"RTN","ICDEXS",366,0)
 Q SYS
"RTN","ICDEXS",367,0)
SNAM(SYS) ; System Name
"RTN","ICDEXS",368,0)
 ;
"RTN","ICDEXS",369,0)
 ; Input:
"RTN","ICDEXS",370,0)
 ;
"RTN","ICDEXS",371,0)
 ;   SYS    Numeric System Identifier (field 1.1)
"RTN","ICDEXS",372,0)
 ;
"RTN","ICDEXS",373,0)
 ; Output:
"RTN","ICDEXS",374,0)
 ; 
"RTN","ICDEXS",375,0)
 ;   $$SYS  Character System Name
"RTN","ICDEXS",376,0)
 ;
"RTN","ICDEXS",377,0)
 ;          or  -1   on error
"RTN","ICDEXS",378,0)
 ;            
"RTN","ICDEXS",379,0)
 S SYS=+($G(SYS)) S SYS=$P($G(^ICDS(+SYS,0)),"^",1)
"RTN","ICDEXS",380,0)
 Q $S($L(SYS):SYS,1:-1)
"RTN","ICDEXS",381,0)
SAB(X,Y) ; Source Abbreviation
"RTN","ICDEXS",382,0)
 ;
"RTN","ICDEXS",383,0)
 ; Input:
"RTN","ICDEXS",384,0)
 ;
"RTN","ICDEXS",385,0)
 ;   X     Source Abbreviation or Identifier
"RTN","ICDEXS",386,0)
 ;   Y     Date used to determine SAB
"RTN","ICDEXS",387,0)
 ;
"RTN","ICDEXS",388,0)
 ; Output:
"RTN","ICDEXS",389,0)
 ;
"RTN","ICDEXS",390,0)
 ;   $$SAB 3 Character System Identifier
"RTN","ICDEXS",391,0)
 ;
"RTN","ICDEXS",392,0)
 N SYS,CDT,TY,VR,OUT,TMP,ICD10 S SYS=$G(X),CDT=$G(Y)
"RTN","ICDEXS",393,0)
 S:CDT'?7N CDT=$$DT^XLFDT S ICD10=+($$IMP^ICDEX(30))
"RTN","ICDEXS",394,0)
 S TMP=$$SYS(SYS,CDT) S:+TMP>0&($D(^ICDS(+TMP,0))) SYS=TMP
"RTN","ICDEXS",395,0)
 Q:+SYS=1 "ICD"  Q:+SYS=2 "ICP"  Q:+SYS=30 "10D"  Q:+SYS=31 "10P"
"RTN","ICDEXS",396,0)
 Q:SYS="DIAG" $S(CDT'<ICD10:"10D",1:"ICD")
"RTN","ICDEXS",397,0)
 Q:SYS["ICD9" $S(CDT'<ICD10:"10D",1:"ICD")
"RTN","ICDEXS",398,0)
 Q:SYS="PROC" $S(CDT'<ICD10:"10P",1:"ICP")
"RTN","ICDEXS",399,0)
 Q:SYS["ICD0" $S(CDT'<ICD10:"10P",1:"ICP")
"RTN","ICDEXS",400,0)
 Q:"^ICD^ICP^10D^10P^"[("^"_SYS_"^") SYS
"RTN","ICDEXS",401,0)
 Q ""
"RTN","ICDEXS",402,0)
EXC(FILE,IEN) ; Exclude From lookup
"RTN","ICDEXS",403,0)
 ;
"RTN","ICDEXS",404,0)
 ; Input:
"RTN","ICDEXS",405,0)
 ;
"RTN","ICDEXS",406,0)
 ;   FILE   File number 80 or 80.1
"RTN","ICDEXS",407,0)
 ;   IEN    Internal Entry Number
"RTN","ICDEXS",408,0)
 ;
"RTN","ICDEXS",409,0)
 ; Output:
"RTN","ICDEXS",410,0)
 ;
"RTN","ICDEXS",411,0)
 ;   $$EXC  Boolean value 1 = Yes  0 = No
"RTN","ICDEXS",412,0)
 ;
"RTN","ICDEXS",413,0)
 N ICDF,ICDI,ICDR S ICDF=+($G(FILE)),ICDI=+($G(IEN)) Q:"^80^80.1^"'[("^"_ICDF_"^") 0
"RTN","ICDEXS",414,0)
 S ICDR=$$ROOT(ICDF) Q:"^ICD9(^ICD0(^"'[("^"_$E(ICDR,2,$L(ICDR))_"^") 0  Q:'$D(@(ICDR_+ICDI_",0)")) 0
"RTN","ICDEXS",415,0)
 Q $S(+($$GET1^DIQ(ICDF,(+ICDI_","),1.8))'>0:0,1:1)
"RTN","ICDXCODE")
0^11^B7339576
"RTN","ICDXCODE",1,0)
ICDXCODE ;ISL/KER - ICD basic data API's ;12/19/2014
"RTN","ICDXCODE",2,0)
 ;;18.0;DRG Grouper;**57,67**;Oct 20, 2000;Build 1
"RTN","ICDXCODE",3,0)
 ;
"RTN","ICDXCODE",4,0)
 ; ICD wrapper APIs
"RTN","ICDXCODE",5,0)
 ;
"RTN","ICDXCODE",6,0)
EN ; Main Entry Point
"RTN","ICDXCODE",7,0)
HELP ; Developer Help for an API
"RTN","ICDXCODE",8,0)
 D HLP^ICDEXH("SDD") Q
"RTN","ICDXCODE",9,0)
 ;
"RTN","ICDXCODE",10,0)
ICDDATA(CSYS,CODE,DATE,FRMT,LOC) ; ICD data for code
"RTN","ICDXCODE",11,0)
 ;
"RTN","ICDXCODE",12,0)
 ; Input:
"RTN","ICDXCODE",13,0)
 ;
"RTN","ICDXCODE",14,0)
 ;   CSYS   Coding system                           Required     
"RTN","ICDXCODE",15,0)
 ;   CODE   Code/IEN/variable pointer               Required
"RTN","ICDXCODE",16,0)
 ;   DATE   Code Set Date (default = TODAY)
"RTN","ICDXCODE",17,0)
 ;   FRMT   Code format   "E" external (default)    
"RTN","ICDXCODE",18,0)
 ;                        "I" internal (IEN)
"RTN","ICDXCODE",19,0)
 ;   LOC    Local codes    1 = Yes
"RTN","ICDXCODE",20,0)
 ;                         0 = No (default)
"RTN","ICDXCODE",21,0)
 ;                      
"RTN","ICDXCODE",22,0)
 ; Output:
"RTN","ICDXCODE",23,0)
 ; 
"RTN","ICDXCODE",24,0)
 ;  Diagnosis returns an 22 piece string delimited by "^"
"RTN","ICDXCODE",25,0)
 ;  
"RTN","ICDXCODE",26,0)
 ;    1  IEN of code in file 80
"RTN","ICDXCODE",27,0)
 ;    2  ICD-9 Dx Code                (#.01)
"RTN","ICDXCODE",28,0)
 ;    3  Identifier                   (#1.2)
"RTN","ICDXCODE",29,0)
 ;    4  Versioned Dx                 (67 multiple)
"RTN","ICDXCODE",30,0)
 ;    5  Unacceptable as Principal Dx (#1.3)
"RTN","ICDXCODE",31,0)
 ;    6  Major Dx Cat                 (72 multiple)
"RTN","ICDXCODE",32,0)
 ;    7  MDC13                        (#1.4)
"RTN","ICDXCODE",33,0)
 ;    8  Compl/Comorb                 (103 multiple)
"RTN","ICDXCODE",34,0)
 ;    9  ICD Expanded                 (#1.7)
"RTN","ICDXCODE",35,0)
 ;    10 Status                       (66 multiple)
"RTN","ICDXCODE",36,0)
 ;    11 Sex                          (10 multiple)
"RTN","ICDXCODE",37,0)
 ;    12 Inactive Date                (66 multiple)
"RTN","ICDXCODE",38,0)
 ;    13 MDC24                        (#1.5)
"RTN","ICDXCODE",39,0)
 ;    14 MDC25                        (#1.6)
"RTN","ICDXCODE",40,0)
 ;    15 Age Low                      (11 multiple)
"RTN","ICDXCODE",41,0)
 ;    16 Age High                     (12 multiple)
"RTN","ICDXCODE",42,0)
 ;    17 Activation Date              (66 multiple)
"RTN","ICDXCODE",43,0)
 ;    18 Message                      
"RTN","ICDXCODE",44,0)
 ;    19 Complication/Comorbidity     (103 multiple)
"RTN","ICDXCODE",45,0)
 ;    20 Coding System                (#1.1)
"RTN","ICDXCODE",46,0)
 ;    21 Primary CC Flag              (103 multiple)
"RTN","ICDXCODE",47,0)
 ;    22 PDX Exclusion Code           (#1.11)
"RTN","ICDXCODE",48,0)
 ;
"RTN","ICDXCODE",49,0)
 ;   Procedures returns A 14 piece string delimited by "^"
"RTN","ICDXCODE",50,0)
 ;   
"RTN","ICDXCODE",51,0)
 ;    1  IEN of code in file 80.1
"RTN","ICDXCODE",52,0)
 ;    2  ICD procedure code           (#.01)
"RTN","ICDXCODE",53,0)
 ;    3  Identifier                   (#1.2)
"RTN","ICDXCODE",54,0)
 ;    4  MDC24                        (#1.5)
"RTN","ICDXCODE",55,0)
 ;    5  Versioned Oper/Proc          (67 multiple)
"RTN","ICDXCODE",56,0)
 ;    6  <null>
"RTN","ICDXCODE",57,0)
 ;    7  <null>
"RTN","ICDXCODE",58,0)
 ;    8  <null>
"RTN","ICDXCODE",59,0)
 ;    9  ICD Expanded                 (#1.7)
"RTN","ICDXCODE",60,0)
 ;    10 Status                       (66 multiple)
"RTN","ICDXCODE",61,0)
 ;    11 Use with Sex                 (10 multiple)
"RTN","ICDXCODE",62,0)
 ;    12 Inactive Date                (66 multiple)
"RTN","ICDXCODE",63,0)
 ;    13 Activation Date              (66 multiple)
"RTN","ICDXCODE",64,0)
 ;    14 Message
"RTN","ICDXCODE",65,0)
 ;    15 Coding System                (#1.1)
"RTN","ICDXCODE",66,0)
 ;     
"RTN","ICDXCODE",67,0)
 ;    or
"RTN","ICDXCODE",68,0)
 ;
"RTN","ICDXCODE",69,0)
 ;    -1^Error Description
"RTN","ICDXCODE",70,0)
 ;    
"RTN","ICDXCODE",71,0)
 N ROOT,SYS
"RTN","ICDXCODE",72,0)
 S DATE=$P($G(DATE),".",1),SYS=$$SYS^ICDEX($G(CSYS),$G(DATE)) S:+SYS'>0 SYS=$$SYS^ICDEX($G(CODE))
"RTN","ICDXCODE",73,0)
 Q:+SYS'>0 "-1^Invalid coding system specified"
"RTN","ICDXCODE",74,0)
 S ROOT=$$ROOT^ICDEX(SYS) Q:'$L(ROOT) "-1^Invalid Global Root"
"RTN","ICDXCODE",75,0)
 S:CODE[";"&($P(CODE,";",2)=$TR(ROOT,"^",""))&($L($P(CODE,";",1))) FRMT="I",CODE=$P(CODE,";",1)
"RTN","ICDXCODE",76,0)
 S:'$L($G(FRMT)) FRMT=$$IE^ICDEX($G(CODE))
"RTN","ICDXCODE",77,0)
 Q:ROOT["ICD9" $$ICDDX^ICDEX($G(CODE),$G(DATE),$G(SYS),$G(FRMT),$G(LOC))
"RTN","ICDXCODE",78,0)
 Q:ROOT["ICD0" $$ICDOP^ICDEX($G(CODE),$G(DATE),$G(SYS),$G(FRMT),$G(LOC))
"RTN","ICDXCODE",79,0)
 Q "-1^Not found"
"RTN","ICDXCODE",80,0)
 ;
"RTN","ICDXCODE",81,0)
ICDDESC(CSYS,CODE,DATE,OUTARR) ; ICD description
"RTN","ICDXCODE",82,0)
 ;
"RTN","ICDXCODE",83,0)
 ; Input:
"RTN","ICDXCODE",84,0)
 ;
"RTN","ICDXCODE",85,0)
 ;   CSYS     Coding system
"RTN","ICDXCODE",86,0)
 ;   CODE     ICD Code (required)
"RTN","ICDXCODE",87,0)
 ;   DATE     Date (default = TODAY)
"RTN","ICDXCODE",88,0)
 ;  .OUTARR   Array Name passed by reference
"RTN","ICDXCODE",89,0)
 ;   
"RTN","ICDXCODE",90,0)
 ; Output:
"RTN","ICDXCODE",91,0)
 ; 
"RTN","ICDXCODE",92,0)
 ;   $$ICDDESC  Number of lines in array
"RTN","ICDXCODE",93,0)
 ;
"RTN","ICDXCODE",94,0)
 ;          @ARY(1) - Versioned Description (68 multiple)
"RTN","ICDXCODE",95,0)
 ;          @ARY(2) - blank
"RTN","ICDXCODE",96,0)
 ;          @ARY(3) - message: CODE TEXT MAY BE INACCURATE
"RTN","ICDXCODE",97,0)
 ;          
"RTN","ICDXCODE",98,0)
 Q $$ICDD^ICDEX($G(CODE),.OUTARR,$G(DATE),$G(CSYS))
"RTN","ICDXCODE",99,0)
 ;
"RTN","ICDXCODE",100,0)
STATCHK(CSYS,CODE,DATE) ; Check status for code
"RTN","ICDXCODE",101,0)
 ;
"RTN","ICDXCODE",102,0)
 ; Input:
"RTN","ICDXCODE",103,0)
 ; 
"RTN","ICDXCODE",104,0)
 ;   CSYS    Coding system
"RTN","ICDXCODE",105,0)
 ;   CODE    Code (IEN not allowed)
"RTN","ICDXCODE",106,0)
 ;   DATE    Date (default = TODAY)
"RTN","ICDXCODE",107,0)
 ; 
"RTN","ICDXCODE",108,0)
 ; Output: 
"RTN","ICDXCODE",109,0)
 ; 
"RTN","ICDXCODE",110,0)
 ;    2-Piece String containing the code's status
"RTN","ICDXCODE",111,0)
 ;    and the IEN if the code exists, else -1.
"RTN","ICDXCODE",112,0)
 ;    The following are possible outputs:
"RTN","ICDXCODE",113,0)
 ;    
"RTN","ICDXCODE",114,0)
 ;           1^IEN^Effective Date    Active Code
"RTN","ICDXCODE",115,0)
 ;           0^IEN^Effective Date    Inactive Code
"RTN","ICDXCODE",116,0)
 ;           0^-1                    Code not Found
"RTN","ICDXCODE",117,0)
 ;
"RTN","ICDXCODE",118,0)
 Q $$STATCHK^ICDEX($G(CODE),$G(DATE),$G(CSYS))
"RTN","ICDXCODE",119,0)
 ;
"RTN","ICDXCODE",120,0)
PREV(CSYS,CODE) ; Previous ICD Code
"RTN","ICDXCODE",121,0)
 ;
"RTN","ICDXCODE",122,0)
 ; Input:
"RTN","ICDXCODE",123,0)
 ; 
"RTN","ICDXCODE",124,0)
 ;     CSYS    Coding system                    Required
"RTN","ICDXCODE",125,0)
 ;     CODE    ICD-10 Code (IEN not allowed)    Required
"RTN","ICDXCODE",126,0)
 ;     
"RTN","ICDXCODE",127,0)
 ; Output:
"RTN","ICDXCODE",128,0)
 ; 
"RTN","ICDXCODE",129,0)
 ;    $$PREV  The Previous ICD Code, Null if none
"RTN","ICDXCODE",130,0)
 ;    
"RTN","ICDXCODE",131,0)
 Q $$PREV^ICDEX($G(CODE),$G(CSYS))
"RTN","ICDXCODE",132,0)
 ;
"RTN","ICDXCODE",133,0)
NEXT(CSYS,CODE) ; Next ICD Code
"RTN","ICDXCODE",134,0)
 ;
"RTN","ICDXCODE",135,0)
 ; Input:
"RTN","ICDXCODE",136,0)
 ; 
"RTN","ICDXCODE",137,0)
 ;     CSYS    Coding system                    Required
"RTN","ICDXCODE",138,0)
 ;     CODE    ICD-10 Code (IEN not allowed)    Required
"RTN","ICDXCODE",139,0)
 ;     
"RTN","ICDXCODE",140,0)
 ; Output:
"RTN","ICDXCODE",141,0)
 ; 
"RTN","ICDXCODE",142,0)
 ;    $$NEXT  The Next ICD Code, Null if none
"RTN","ICDXCODE",143,0)
 ;    
"RTN","ICDXCODE",144,0)
 Q $$NEXT^ICDEX($G(CODE),$G(CSYS))
"RTN","ICDXCODE",145,0)
 ;
"RTN","ICDXCODE",146,0)
HIST(CSYS,CODE,ARRAY) ; Activation History
"RTN","ICDXCODE",147,0)
 ;
"RTN","ICDXCODE",148,0)
 ; Input:
"RTN","ICDXCODE",149,0)
 ; 
"RTN","ICDXCODE",150,0)
 ;    CSYS     Coding system                     Required
"RTN","ICDXCODE",151,0)
 ;    CODE     ICD Code (IEN not allowed)        Required
"RTN","ICDXCODE",152,0)
 ;   .ARRAY    Array, passed by Reference        Required
"RTN","ICDXCODE",153,0)
 ;   
"RTN","ICDXCODE",154,0)
 ; Output:
"RTN","ICDXCODE",155,0)
 ; 
"RTN","ICDXCODE",156,0)
 ;    $$HIST   Mirrors ARRAY(0) or, -1 on error
"RTN","ICDXCODE",157,0)
 ;    ARRAY(0)      =  Number of Activation History Entries
"RTN","ICDXCODE",158,0)
 ;    ARRAY(<date>) =  Status    where: 1 is Active
"RTN","ICDXCODE",159,0)
 ;    ARRAY("IEN")  =  <ien>
"RTN","ICDXCODE",160,0)
 ;    
"RTN","ICDXCODE",161,0)
 Q $$HIST^ICDEX($G(CODE),.ARRAY,$G(CSYS))
"RTN","ICDXCODE",162,0)
 ;
"RTN","ICDXCODE",163,0)
PERIOD(CSYS,CODE,ARY) ; Activation Periods
"RTN","ICDXCODE",164,0)
 ; Input:
"RTN","ICDXCODE",165,0)
 ; 
"RTN","ICDXCODE",166,0)
 ;    CSYS     Coding system                     Required
"RTN","ICDXCODE",167,0)
 ;    CODE     ICD Code (IEN not allowed)        Required
"RTN","ICDXCODE",168,0)
 ;   .ARY      Array, passed by Reference        Required
"RTN","ICDXCODE",169,0)
 ;   
"RTN","ICDXCODE",170,0)
 ; Output:
"RTN","ICDXCODE",171,0)
 ; 
"RTN","ICDXCODE",172,0)
 ;    ARY(0) = IEN ^ Selectable ^ Error Message
"RTN","ICDXCODE",173,0)
 ;          
"RTN","ICDXCODE",174,0)
 ;       Where IEN = -1 if error
"RTN","ICDXCODE",175,0)
 ;       Selectable = 0 for unselectable
"RTN","ICDXCODE",176,0)
 ;       Error Message if applicable
"RTN","ICDXCODE",177,0)
 ;            
"RTN","ICDXCODE",178,0)
 ;    ARY(Activation Date) = Inactivation Date^Short Name
"RTN","ICDXCODE",179,0)
 ;
"RTN","ICDXCODE",180,0)
 ;       Where the Short Name is versioned as follows:
"RTN","ICDXCODE",181,0)
 ;
"RTN","ICDXCODE",182,0)
 ;       Period is active   - Text for TODAY's date
"RTN","ICDXCODE",183,0)
 ;       Period is inactive - Text for inactivation date
"RTN","ICDXCODE",184,0)
 ;    
"RTN","ICDXCODE",185,0)
 Q $$PERIOD^ICDEX($G(CODE),.ARY,$G(CSYS))
"VER")
8.0^22.0
**INSTALL NAME**
FB*3.5*157
"BLD",8372,0)
FB*3.5*157^FEE BASIS^0^3141219^y
"BLD",8372,1,0)
^^2^2^3141202^
"BLD",8372,1,1,0)
Please see the National Patch Module for details of the enhancements
"BLD",8372,1,2,0)
included in this patch. 
"BLD",8372,4,0)
^9.64PA^^
"BLD",8372,6.3)
1
"BLD",8372,"ABPKG")
n
"BLD",8372,"KRN",0)
^9.67PA^779.2^20
"BLD",8372,"KRN",.4,0)
.4
"BLD",8372,"KRN",.401,0)
.401
"BLD",8372,"KRN",.402,0)
.402
"BLD",8372,"KRN",.403,0)
.403
"BLD",8372,"KRN",.5,0)
.5
"BLD",8372,"KRN",.84,0)
.84
"BLD",8372,"KRN",3.6,0)
3.6
"BLD",8372,"KRN",3.8,0)
3.8
"BLD",8372,"KRN",9.2,0)
9.2
"BLD",8372,"KRN",9.8,0)
9.8
"BLD",8372,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8372,"KRN",9.8,"NM",1,0)
FBAACO2^^0^B31897549
"BLD",8372,"KRN",9.8,"NM",2,0)
FBAACO3^^0^B62984303
"BLD",8372,"KRN",9.8,"NM",3,0)
FB35157^^0^B35702831
"BLD",8372,"KRN",9.8,"NM","B","FB35157",3)

"BLD",8372,"KRN",9.8,"NM","B","FBAACO2",1)

"BLD",8372,"KRN",9.8,"NM","B","FBAACO3",2)

"BLD",8372,"KRN",19,0)
19
"BLD",8372,"KRN",19.1,0)
19.1
"BLD",8372,"KRN",101,0)
101
"BLD",8372,"KRN",409.61,0)
409.61
"BLD",8372,"KRN",771,0)
771
"BLD",8372,"KRN",779.2,0)
779.2
"BLD",8372,"KRN",870,0)
870
"BLD",8372,"KRN",8989.51,0)
8989.51
"BLD",8372,"KRN",8989.52,0)
8989.52
"BLD",8372,"KRN",8994,0)
8994
"BLD",8372,"KRN","B",.4,.4)

"BLD",8372,"KRN","B",.401,.401)

"BLD",8372,"KRN","B",.402,.402)

"BLD",8372,"KRN","B",.403,.403)

"BLD",8372,"KRN","B",.5,.5)

"BLD",8372,"KRN","B",.84,.84)

"BLD",8372,"KRN","B",3.6,3.6)

"BLD",8372,"KRN","B",3.8,3.8)

"BLD",8372,"KRN","B",9.2,9.2)

"BLD",8372,"KRN","B",9.8,9.8)

"BLD",8372,"KRN","B",19,19)

"BLD",8372,"KRN","B",19.1,19.1)

"BLD",8372,"KRN","B",101,101)

"BLD",8372,"KRN","B",409.61,409.61)

"BLD",8372,"KRN","B",771,771)

"BLD",8372,"KRN","B",779.2,779.2)

"BLD",8372,"KRN","B",870,870)

"BLD",8372,"KRN","B",8989.51,8989.51)

"BLD",8372,"KRN","B",8989.52,8989.52)

"BLD",8372,"KRN","B",8994,8994)

"BLD",8372,"PRE")
FB35157
"BLD",8372,"QDEF")
^^^^NO^^^^^^NO
"BLD",8372,"QUES",0)
^9.62^^
"BLD",8372,"REQB",0)
^9.611^1^1
"BLD",8372,"REQB",1,0)
FB*3.5*123^2
"BLD",8372,"REQB","B","FB*3.5*123",1)

"MBREQ")
0
"PKG",60,-1)
1^1
"PKG",60,0)
FEE BASIS^FB^FEE BASIS
"PKG",60,20,0)
^9.402P^1^1
"PKG",60,20,1,0)
2^^FBPMRG
"PKG",60,20,1,1)

"PKG",60,20,"B",2,1)

"PKG",60,22,0)
^9.49I^1^1
"PKG",60,22,1,0)
3.5
"PKG",60,22,1,"PAH",1,0)
157^3141219^520665225
"PKG",60,22,1,"PAH",1,1,0)
^^2^2^3141219
"PKG",60,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements
"PKG",60,22,1,"PAH",1,1,2,0)
included in this patch. 
"PRE")
FB35157
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","FB35157")
0^3^B35702831
"RTN","FB35157",1,0)
FB35157 ;ISL/KER - FB*3.5*157 Env Check ;12/19/2014
"RTN","FB35157",2,0)
 ;;3.5;FEE BASIS;**157**;JAN 30, 1995;Build 1
"RTN","FB35157",3,0)
 ;               
"RTN","FB35157",4,0)
 ; Global Variables
"RTN","FB35157",5,0)
 ;    ^FBM               N/A
"RTN","FB35157",6,0)
 ;               
"RTN","FB35157",7,0)
 ; External References
"RTN","FB35157",8,0)
 ;    FIND^DIC            ICR   2051
"RTN","FB35157",9,0)
 ;    $$IENS^DILF         ICR   2054
"RTN","FB35157",10,0)
 ;    EN^DIQ1             ICR  10015
"RTN","FB35157",11,0)
 ;    $$FMTE^XLFDT        ICR  10103
"RTN","FB35157",12,0)
 ;    $$PATCH^XPDUTL      ICR  10141
"RTN","FB35157",13,0)
 ;    $$VERSION^XPDUTL    ICR  10141
"RTN","FB35157",14,0)
 ;    BMES^XPDUTL         ICR  10141
"RTN","FB35157",15,0)
 ;    MES^XPDUTL          ICR  10141
"RTN","FB35157",16,0)
 ;               
"RTN","FB35157",17,0)
 ; Local Variables Killed by Kernel after Install
"RTN","FB35157",18,0)
 ;     XPDABORT,XPDDIQ,XPDQUIT
"RTN","FB35157",19,0)
 ;     
"RTN","FB35157",20,0)
 ; see Kernel Developer Guide
"RTN","FB35157",21,0)
 ;     Chapter 14, KIDS Developer Tools
"RTN","FB35157",22,0)
 ;     Advanced Build Techniques
"RTN","FB35157",23,0)
 ;               
"RTN","FB35157",24,0)
ENV ; Environment Check
"RTN","FB35157",25,0)
 ;                    
"RTN","FB35157",26,0)
 ;   General
"RTN","FB35157",27,0)
 ;
"RTN","FB35157",28,0)
 N FBPTYPE,FBLREV,FBREQP,FBBUILD,FBIGHF,FBFY,FBQTR,FBG,FBE,FBSTR D IMP
"RTN","FB35157",29,0)
 K XPDDIQ("XPZ1","B"),XPDDIQ("XPI1","B") S XPDDIQ("XPZ1","B")="NO",XPDDIQ("XPI1","B")="NO"
"RTN","FB35157",30,0)
 S FBSTR=$G(FBPTYPE) S:$L($G(FBFY))&($L($G(FBQTR))) FBSTR=FBSTR_" for "_$G(FBFY)_" "_$G(FBQTR)_" Quarter"
"RTN","FB35157",31,0)
 D M(FBSTR),M("")
"RTN","FB35157",32,0)
 S U="^"
"RTN","FB35157",33,0)
 ;     No user
"RTN","FB35157",34,0)
 D:+($$UR)'>0 ET("User not defined (DUZ)")
"RTN","FB35157",35,0)
 ;     No IO
"RTN","FB35157",36,0)
 D:+($$SY)'>0 ET("Undefined IO variable(s)")
"RTN","FB35157",37,0)
 I $D(FBE) D ABRT Q
"RTN","FB35157",38,0)
 ;                    
"RTN","FB35157",39,0)
 ;   Load Distribution
"RTN","FB35157",40,0)
 ;
"RTN","FB35157",41,0)
 ;     XPDENV = 0 Environment Check during Load
"RTN","FB35157",42,0)
 ;
"RTN","FB35157",43,0)
 ;       Check Version (3.5)
"RTN","FB35157",44,0)
 I $$VERSION^XPDUTL("FB")'="3.5" D  D ABRT Q
"RTN","FB35157",45,0)
 . D ET("Version 3.5 not found.  Please install Fee Basis v 3.5")
"RTN","FB35157",46,0)
 ;
"RTN","FB35157",47,0)
 ;       Check Required Patches
"RTN","FB35157",48,0)
 D:$O(FBREQP(0))'>0 IMP I $O(FBREQP(0))>0 D
"RTN","FB35157",49,0)
 . N FBPAT,FBI,FBPN,FBP,FBR,FBC,FBO,FBC1,FBC2,FBC3,FBC4,FB
"RTN","FB35157",50,0)
 . S (FBR,FBC)=0 S FBC1=3,FBC2=24,FBC3=36,FBC4=48
"RTN","FB35157",51,0)
 . S FBI=0  F  S FBI=$O(FBREQP(FBI)) Q:+FBI'>0  D
"RTN","FB35157",52,0)
 . . S FBC=FBC+1,FBPAT=$G(FBREQP(FBI))
"RTN","FB35157",53,0)
 . S FBI=0  F  S FBI=$O(FBREQP(FBI)) Q:+FBI'>0  D
"RTN","FB35157",54,0)
 . . N FBPAT,FBPT,FBREL,FBINS,FBCOM,FBINE,FBREQ,FBTX S FBREQ=$G(FBREQP(FBI))
"RTN","FB35157",55,0)
 . . S FBPAT=$P(FBREQ,"^",1),FBREL=$P(FBREQ,"^",2),FBCOM=$P(FBREQ,"^",3)
"RTN","FB35157",56,0)
 . . S FBPT=$P(FBPAT," SEQ",1) S:'$L(FBPT) FBPT=FBPAT
"RTN","FB35157",57,0)
 . . S FBPN=$$INS(FBPT) S FBINS=$$INSD(FBPT),FBINE=$P(FBINS,"^",2)
"RTN","FB35157",58,0)
 . . I FBI=1 D
"RTN","FB35157",59,0)
 . . . W !,?FBC1,"Checking for ",!
"RTN","FB35157",60,0)
 . . . W !,?FBC1,"Patch",?FBC2,"Released",?FBC3,"Installed",?FBC4,"Content"
"RTN","FB35157",61,0)
 . . S FBTX=$J(" ",FBC1)_FBPAT
"RTN","FB35157",62,0)
 . . S FBTX=FBTX_$J(" ",(FBC2-$L(FBTX)))
"RTN","FB35157",63,0)
 . . S:FBREL?7N FBTX=FBTX_$P($$FMTE^XLFDT(FBREL,"5DZ"),"@",1)
"RTN","FB35157",64,0)
 . . S FBTX=FBTX_$J(" ",(FBC3-$L(FBTX)))
"RTN","FB35157",65,0)
 . . I +FBPN>0 D
"RTN","FB35157",66,0)
 . . . S FBO=+($G(FBO))+1 S:$L($G(FBINE)) FBTX=FBTX_FBINE
"RTN","FB35157",67,0)
 . . . S FBTX=FBTX_$J(" ",(FBC4-$L(FBTX)))
"RTN","FB35157",68,0)
 . . . S:$L(FBCOM) FBTX=FBTX_FBCOM
"RTN","FB35157",69,0)
 . . D M(FBTX)
"RTN","FB35157",70,0)
 . . I +FBPN'>0 D ET((" "_FBPAT_" not found, please install "_FBPAT_" before continuing"))
"RTN","FB35157",71,0)
 . W:+($G(FBO))'=FBC !
"RTN","FB35157",72,0)
 W ! I $D(FBE) D M(),ABRT Q
"RTN","FB35157",73,0)
 I '$D(FBFULL)&(+($G(XPDENV))'=1) D QUIT Q
"RTN","FB35157",74,0)
 ;                    
"RTN","FB35157",75,0)
 ;   Install Package(s)
"RTN","FB35157",76,0)
 ;
"RTN","FB35157",77,0)
 ;     XPDENV = 1 Environment Check during Install
"RTN","FB35157",78,0)
 ;
"RTN","FB35157",79,0)
 ;   Quit, Exit or Abort
"RTN","FB35157",80,0)
 ;
"RTN","FB35157",81,0)
QUIT ;     Quit   Passed Environment Check
"RTN","FB35157",82,0)
 K FBFULL D OK
"RTN","FB35157",83,0)
 Q
"RTN","FB35157",84,0)
EXIT ;     Exit   Failed Environment Check
"RTN","FB35157",85,0)
 D:$D(FBE) ED S XPDQUIT=2 K FBE,FBFULL Q
"RTN","FB35157",86,0)
ABRT ;     Abort  Failed Environment Check, KILL the distribution
"RTN","FB35157",87,0)
 D:$D(FBE) ED S XPDABORT=1,XPDQUIT=1,XPDQUIT("FB*3.5*157")=1,XPDQUIT("LEX*2.0*86")=1,XPDQUIT("ICD*18.0*67")=1
"RTN","FB35157",88,0)
 K FBE,FBFULL
"RTN","FB35157",89,0)
 Q
"RTN","FB35157",90,0)
T1 ; Environment Check #1 (for testing only)
"RTN","FB35157",91,0)
 K XPDENV D ENV
"RTN","FB35157",92,0)
 Q
"RTN","FB35157",93,0)
T2 ; Environment Check #2 (for testing only)
"RTN","FB35157",94,0)
 N XPDENV S XPDENV=1 D ENV
"RTN","FB35157",95,0)
 Q
"RTN","FB35157",96,0)
 ;               
"RTN","FB35157",97,0)
 ; Checks
"RTN","FB35157",98,0)
 ;
"RTN","FB35157",99,0)
INS(X) ;   Installed
"RTN","FB35157",100,0)
 N FB,FBP,FBV,FBI S FB=$G(X) I $L(FB,"*")=3 S X=$$PATCH^XPDUTL(FB) Q X
"RTN","FB35157",101,0)
 S FBP=$$PKG^XPDUTL(FB),FBV=$$VER^XPDUTL(FB),FBI=$$VERSION^XPDUTL(FBP)
"RTN","FB35157",102,0)
 Q:+FBV>0&(FBV=FBI) 1
"RTN","FB35157",103,0)
 Q 0
"RTN","FB35157",104,0)
INSD(X)  ;   Installed on
"RTN","FB35157",105,0)
 N DA,FB,FBDA,FBE,FBI,FBMSG,FBNS,FBOUT,FBPI,FBPN,FBSCR,FBVI,FBVD,FBVI,FBVR S FB=$G(X)
"RTN","FB35157",106,0)
 S FBNS=$$PKG^XPDUTL(FB),FBVR=$$VER^XPDUTL(FB),FBPN=$P(X,"*",3)
"RTN","FB35157",107,0)
 Q:'$L(FBNS) ""  S FBVR=+FBVR Q:FBVR'>0 ""  S FBPN=+FBPN S:FBVR'["." FBVR=FBVR_".0"
"RTN","FB35157",108,0)
 S FBSCR="I $G(^DIC(9.4,+($G(Y)),""VERSION""))="""_FBVR_""""
"RTN","FB35157",109,0)
 D FIND^DIC(9.4,,.01,"O",FBNS,10,"C",FBSCR,,"FBOUT","FBMSG")
"RTN","FB35157",110,0)
 S FBPI=$G(FBOUT("DILIST",2,1)) K FBOUT,FBMSG Q:+FBPI'>0 ""  Q:'$D(@("^DIC(9.4,"_FBPI_",22)")) ""
"RTN","FB35157",111,0)
 K DA S DA(1)=FBPI S FBDA=$$IENS^DILF(.DA)
"RTN","FB35157",112,0)
 D FIND^DIC(9.49,FBDA,".01;1I;2I","O",FBVR,10,"B",,,"FBOUT","FBMSG")
"RTN","FB35157",113,0)
 S FBVD=$G(FBOUT("DILIST","ID",1,2)) I $E(FBVD,1,7)?7N&(+FBPN'>0) D  Q X
"RTN","FB35157",114,0)
 . S X=$E(FBVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(FBVD,1,7),"5DZ"),"@"," ")
"RTN","FB35157",115,0)
 S:$E(FBVD,1,7)'?7N FBVD=$G(FBOUT("DILIST","ID",1,1)) I $E(FBVD,1,7)?7N&(+FBPN'>0) D  Q X
"RTN","FB35157",116,0)
 . S X=$E(FBVD,1,7)_"^"_$TR($$FMTE^XLFDT($E(FBVD,1,7),"5DZ"),"@"," ")
"RTN","FB35157",117,0)
 Q:+FBPN'>0 ""  S FBVI=$G(FBOUT("DILIST",2,1)) K FBOUT,FBMSG
"RTN","FB35157",118,0)
 Q:+FBVI'>0 ""  Q:'$D(@("^DIC(9.4,"_FBPI_",22,"_FBVI_",""PAH"")")) ""
"RTN","FB35157",119,0)
 K DA S DA(2)=FBPI,DA(1)=FBVI S FBDA=$$IENS^DILF(.DA)
"RTN","FB35157",120,0)
 S FBSCR="I $G(^DIC(9.4,"_FBPI_",22,"_FBVI_",""PAH"",+($G(Y)),0))[""SEQ #"""
"RTN","FB35157",121,0)
 D FIND^DIC(9.4901,FBDA,".01;.02I",,FBPN,10,"B",FBSCR,,"FBOUT","FBMSG")
"RTN","FB35157",122,0)
 S FBI=$G(FBOUT("DILIST","ID",1,.02)) I '$L(FBI) D
"RTN","FB35157",123,0)
 . S FBSCR="" D FIND^DIC(9.4901,FBDA,".01;.02I",,FBPN,10,"B",FBSCR,,"FBOUT","FBMSG")
"RTN","FB35157",124,0)
 . S FBI=$G(FBOUT("DILIST","ID",1,.02))
"RTN","FB35157",125,0)
 Q:'$L(FBI) ""  Q:$P(FBI,".",1)'?7N ""  S FBE=$TR($$FMTE^XLFDT(FBI,"5DZ"),"@"," ")
"RTN","FB35157",126,0)
 Q:'$L(FBE) ""  S X=FBI_"^"_FBE
"RTN","FB35157",127,0)
 Q X
"RTN","FB35157",128,0)
SY(X) ;   Check System variables
"RTN","FB35157",129,0)
 Q:'$D(IO)!('$D(IOF))!('$D(IOM))!('$D(ION))!('$D(IOSL))!('$D(IOST)) 0
"RTN","FB35157",130,0)
 Q 1
"RTN","FB35157",131,0)
UR(X) ;   Check User variables
"RTN","FB35157",132,0)
 Q:'$L($G(DUZ(0))) 0
"RTN","FB35157",133,0)
 Q:+($G(DUZ))=0!($$NOTDEF(+$G(DUZ))) 0
"RTN","FB35157",134,0)
 Q 1
"RTN","FB35157",135,0)
 ;               
"RTN","FB35157",136,0)
 ; Error messages
"RTN","FB35157",137,0)
 ;
"RTN","FB35157",138,0)
ET(X) ;   Error Text
"RTN","FB35157",139,0)
 N FBI S FBI=+($G(FBE(0))),FBI=FBI+1,FBE(FBI)="    "_$G(X),FBE(0)=FBI
"RTN","FB35157",140,0)
 Q
"RTN","FB35157",141,0)
ED ;   Error Display
"RTN","FB35157",142,0)
 N FBI S FBI=0 F  S FBI=$O(FBE(FBI)) Q:+FBI=0  D M(FBE(FBI))
"RTN","FB35157",143,0)
 D M(" ") K FBE Q
"RTN","FB35157",144,0)
 ;                   
"RTN","FB35157",145,0)
 ; Miscellaneous
"RTN","FB35157",146,0)
 ;
"RTN","FB35157",147,0)
NOTDEF(IEN) ;   Check to see if user is defined
"RTN","FB35157",148,0)
 N DA,DR,DIQ,FB,DIC S DA=IEN,DR=.01,DIC=200,DIQ="FB" D EN^DIQ1 Q '$D(FB)
"RTN","FB35157",149,0)
OK ;   Environment is OK
"RTN","FB35157",150,0)
 N FBPTYPE,FBLREV,FBREQP,FBBUILD,FBIGHF,FBFY,FBQTR,FBT
"RTN","FB35157",151,0)
 D IMP S FBT="  Environment "_$S($L(FBBUILD):("for patch/build "_FBBUILD_" "),1:"")_"is ok"
"RTN","FB35157",152,0)
 D M(FBT),M(" ")
"RTN","FB35157",153,0)
 Q
"RTN","FB35157",154,0)
BM(X) ;   Blank Line with Message
"RTN","FB35157",155,0)
 S X=$G(X) S:$E(X,1)'=" " X=" "_X D BMES^XPDUTL(X) Q
"RTN","FB35157",156,0)
M(X) ;   Message
"RTN","FB35157",157,0)
 S X=$G(X) S:$E(X,1)'=" " X=" "_X D MES^XPDUTL(X) Q
"RTN","FB35157",158,0)
TRIM(X) ;   Trim Spaces
"RTN","FB35157",159,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","FB35157",160,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","FB35157",161,0)
 N XPDABORT,XPDDIQ,XPDENV,XPDQUIT
"RTN","FB35157",162,0)
 Q X
"RTN","FB35157",163,0)
IMP ;   Import names
"RTN","FB35157",164,0)
 S FBPTYPE="Fee Basis Payment Change"
"RTN","FB35157",165,0)
 ;     Revision
"RTN","FB35157",166,0)
 S FBLREV=157
"RTN","FB35157",167,0)
 ;     Required Builds - FBREQP(n)=build^released^comment
"RTN","FB35157",168,0)
 S FBREQP(1)="FB*3.5*123 SEQ #130^3141219^VA-DoD VistA Fee IPAC Interface"
"RTN","FB35157",169,0)
 ;                        Fee Basis ICD-10 Remediation"
"RTN","FB35157",170,0)
 ;     This Build Name
"RTN","FB35157",171,0)
 S FBBUILD="FB*3.5*157"
"RTN","FB35157",172,0)
 ;     This Build's Export Global Host Filename
"RTN","FB35157",173,0)
 S FBIGHF=""
"RTN","FB35157",174,0)
 ;     Fiscal Year
"RTN","FB35157",175,0)
 S FBFY=""
"RTN","FB35157",176,0)
 ;     Quarter
"RTN","FB35157",177,0)
 S FBQTR=""
"RTN","FB35157",178,0)
 Q
"RTN","FBAACO2")
0^1^B31897549
"RTN","FBAACO2",1,0)
FBAACO2 ;AISC/GRR - PAYMENT PROCESS FOR DUPLICATE ;12/19/2014
"RTN","FBAACO2",2,0)
 ;;3.5;FEE BASIS;**4,55,61,77,116,122,133,108,135,139,123,157**;JAN 30, 1995;Build 1
"RTN","FBAACO2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAACO2",4,0)
 ;
"RTN","FBAACO2",5,0)
 ;FB*3.5*157 Modify file 162, Diagnosis (field 28) stuff from '///' to '////'
"RTN","FBAACO2",6,0)
 ;           since needed file 80 dx IEN is already passed back from DX 
"RTN","FBAACO2",7,0)
 ;           lookup.
"RTN","FBAACO2",8,0)
 ;
"RTN","FBAACO2",9,0)
RD S DIR(0)="Y",DIR("A")="Want this payment stored as a Medical Denial",DIR("B")="YES",DIR("?")="Enter 'Yes' to store payment entry as a denial and send a Suspension letter.  Enter 'No' to have nothing happen." D ^DIR K DIR Q:$D(DIRUT)!('Y)
"RTN","FBAACO2",10,0)
 S FBDEN=1 Q
"RTN","FBAACO2",11,0)
FILE ;files sp multiple entry
"RTN","FBAACO2",12,0)
 K DR S TP="" I $G(FBDEN) S FBAMTPD=0
"RTN","FBAACO2",13,0)
 ; FB*3.5*123 - set IPAC fields .05 and .055 on the next line
"RTN","FBAACO2",14,0)
 S DR="49///^S X=$G(FBCSID);50///^S X=$G(FBFPPSC);81///^S X=$G(FBUCI135);.05////^S X=$G(FBIA);.055///^S X=$G(FBDODINV);I $G(FBDEN) S Y=1;48;47//1;S FBUNITS=X;S:$G(FBFPPSC)="""" Y=""@11"";S FBX=$$FPPSL^FBUTL5();S:FBX=-1 Y=0;51///^S X=FBX;@11"
"RTN","FBAACO2",15,0)
 ; fb*3.5*116 do not enable different interest indicator values at line item level; interest indicator set at invoice level
"RTN","FBAACO2",16,0)
 S DR(1,162.03,1)="34///^S X=$G(FBAAMM);D POS^FBAACO1;S:'$G(FBHCFA(30)) Y=0;1;S J=X;I $G(FBDEN) S Y=2;D FEE^FBAACO0;44////^S X=FBFSAMT;45///^S X=FBFSUSD;2///^S X=FBAMTPD;S K=X"
"RTN","FBAACO2",17,0)
 S DR(1,162.03,2)="S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2);S:FBX=0 Y=0;6////^S X=DUZ"
"RTN","FBAACO2",18,0)
 S DR(1,162.03,3)="7////^S X=FBAABE;8////^S X=BO;13///^S X=FBAAID;14///^S X=FBAAIN;33///^S X=FBAAVID;I $G(FBDEN) S FBTST=1"
"RTN","FBAACO2",19,0)
 I '$G(FBDEN) D
"RTN","FBAACO2",20,0)
 . ; FB*3.5*139-JLG/JAS-ICD10 REMEDIATION - Made modifications to DR strings for ICD-10, added FBDXCHK1 and FBDXCHK2 for this
"RTN","FBAACO2",21,0)
 .N FBCSVSTR S FBCSVSTR="I X]"""" S:$$INPICD9^FBCSV1(X,"""",$G(FBAADT)) Y=""@30"";"
"RTN","FBAACO2",22,0)
 .N FBDXCHK1 S FBDXCHK1=";@20;S XX1=-1 S XX1=$$FBDXCHK^FBAACO2(FBAADT) S:XX1<0 Y=""@20"";28////^S X=XX1;S Y=""@6"";"   ;FB*3.5*157
"RTN","FBAACO2",23,0)
 .N FBDXCHK2 S FBDXCHK2=";@25;S XX1=-1 S XX1=$$FBDXCHK^FBAACO2(FBAADT) S:XX1<0 Y=""@25"";28////^S X=XX1;S Y=""@35"";@30;"    ;FB*3.5*157
"RTN","FBAACO2",24,0)
 .S DR(1,162.03,4)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S:FB7078]""""!($D(FB583)) Y=30"_FBDXCHK1_"@6;30////^S X=FBHCFA(30);"
"RTN","FBAACO2",25,0)
 .S DR(1,162.03,5)="31;32R;S Y=15;@1"_FBDXCHK2_FBCSVSTR_"@35;30////^S X=FBHCFA(30);31;15///^S X=FBPT;S FBX=$$RR^FBUTL4(.FBRRMK,2);S:FBX=0 Y=0"
"RTN","FBAACO2",26,0)
 . ;end 139
"RTN","FBAACO2",27,0)
 .S DR(1,162.03,6)="16////^S X=FBPOV;17///^S X=FBTT;18///^S X=FBAAPTC;23////^S X=FBTYPE;26////^S X=FBPSA;S:$D(FBV583) Y=""@2"";27////^S X=FB7078;S Y=""@99"";@2;27////^S X=FBV583;@99;S FBTST=1;54////^S X=FBCNTRP"
"RTN","FBAACO2",28,0)
 .S DR(1,162.03,7)="73;74;75;58;59;60;61;62;63;64;65;66;67;76;77;78;79;68;69" ;FB*3.5*122 Line Item Provider information ;FB*3.5*133 Provider Information
"RTN","FBAACO2",29,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAACO2",30,0)
 S DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI,DA=FBAACPI
"RTN","FBAACO2",31,0)
 D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI,1)
"RTN","FBAACO2",32,0)
 D
"RTN","FBAACO2",33,0)
 . N ICDVDT S ICDVDT=$G(FBAADT) D ^DIE
"RTN","FBAACO2",34,0)
 I '$D(DTOUT),$G(FBTST) D
"RTN","FBAACO2",35,0)
 . D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO2",36,0)
 . D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO2",37,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI)
"RTN","FBAACO2",38,0)
 I $D(DTOUT) D KILL Q
"RTN","FBAACO2",39,0)
 I '$G(FBTST),$G(DA) S DIR(0)="YA",DIR("A")="Entering an '^' will delete "_$S($G(FBDEN):"denial",1:"payment")_".  Are you sure you want to delete? ",DIR("B")="No" D ^DIR K DIR G FILE:'$D(DIRUT)&('Y) D KILL Q
"RTN","FBAACO2",40,0)
 K FBTST,FBDEN,DIE,DR,DA,FBX
"RTN","FBAACO2",41,0)
 I $D(FBDL) S FBAAOUT=1 Q
"RTN","FBAACO2",42,0)
 Q
"RTN","FBAACO2",43,0)
 ;
"RTN","FBAACO2",44,0)
FBDXCHK(FBAADT) ;DEM;139 Call to ASF if ICD-10.
"RTN","FBAACO2",45,0)
 ;
"RTN","FBAACO2",46,0)
 ; This call checks if the payment diagnosis date to
"RTN","FBAACO2",47,0)
 ; determine if diagnosis code is ICD-9 or ICD-10.
"RTN","FBAACO2",48,0)
 ; If ICD-9, then call ICD-9 code enhanced for inactive code checks.
"RTN","FBAACO2",49,0)
 ; Else, call Advanced Search Functionality (ASF).
"RTN","FBAACO2",50,0)
 ; If user enters "^" to exit, then quit and send calling
"RTN","FBAACO2",51,0)
 ; routine 999 for exit.
"RTN","FBAACO2",52,0)
 ;
"RTN","FBAACO2",53,0)
 ; If no ICD-10 data found, then send calling routine -1 
"RTN","FBAACO2",54,0)
 ; to indicate no data found.
"RTN","FBAACO2",55,0)
 ; If data found, then stuff diagnosis into ICD DIAGNOSIS
"RTN","FBAACO2",56,0)
 ; field, and quit and send the calling routine 10 for ICD-10 code.
"RTN","FBAACO2",57,0)
 ;
"RTN","FBAACO2",58,0)
 ; Input:
"RTN","FBAACO2",59,0)
 ; FBAADT = Date of Interest for FB payments.
"RTN","FBAACO2",60,0)
 ;
"RTN","FBAACO2",61,0)
 ; Output:
"RTN","FBAACO2",62,0)
 ; FB9 = ICD-9 diagnosis
"RTN","FBAACO2",63,0)
 ; FB99 = User entered "^" to exit payment edit.
"RTN","FBAACO2",64,0)
 ; -1 = No ICD-10 data found
"RTN","FBAACO2",65,0)
 ; FB10 = ICD-10 diagnosis 
"RTN","FBAACO2",66,0)
 ;
"RTN","FBAACO2",67,0)
 N ICDSYS,IMPDATE,XX1
"RTN","FBAACO2",68,0)
 S ICDSYS=10,IMPDATE=$$IMPDATE^LEXU("10D")
"RTN","FBAACO2",69,0)
 S:FBAADT<IMPDATE ICDSYS=9
"RTN","FBAACO2",70,0)
 S XX1=-1
"RTN","FBAACO2",71,0)
 I ICDSYS=9 S XX1=$$ASKICD9^FBAACO2(FBAADT) Q XX1  ;ICD-9
"RTN","FBAACO2",72,0)
 S XX1=$$ASKICD10^FBAACO2(FBAADT) Q XX1  ;ICD-10 IEN CODE
"RTN","FBAACO2",73,0)
 ;
"RTN","FBAACO2",74,0)
 ; retrieves existing value in db if exists and prompts user for ICD-9 primary diagnosis 
"RTN","FBAACO2",75,0)
ASKICD9(INDT,FBFREQ) ;FB*3.5*139-JAS-ICD10 REMEDIATION
"RTN","FBAACO2",76,0)
 N DPRMPT,FBDX
"RTN","FBAACO2",77,0)
 S EDATE=INDT  ; edate is the date of interest for ICD10 diagnosis code lookup
"RTN","FBAACO2",78,0)
 I $G(FBFREQ)="" S FBFREQ="N"  ; force field to be required flag
"RTN","FBAACO2",79,0)
 N FBDXIEN
"RTN","FBAACO2",80,0)
 S DPRMPT="PRIMARY DIAGNOSIS"
"RTN","FBAACO2",81,0)
 S FBDXIEN=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,0)),U,23) ; retrieve existing DX ien 
"RTN","FBAACO2",82,0)
 ;S:FBDXIEN>0 DPRMPT=DPRMPT_": "_$$ICD9^FBCSV1(FBDXIEN,EDATE)_"// "  ;obtain current diagnosis and set as default
"RTN","FBAACO2",83,0)
 S FBDX=-1 S FBDX=$$ENICD9^FBICD9(EDATE,DPRMPT,"Y","","Y",FBDXIEN)
"RTN","FBAACO2",84,0)
 I FBDXIEN>0,FBDX=-1 S FBDX=FBDXIEN W $$ICD9^FBCSV1(FBDXIEN,EDATE) ; return default value if spaces entered
"RTN","FBAACO2",85,0)
 K EDATE,INDT
"RTN","FBAACO2",86,0)
 S FBDX=+FBDX
"RTN","FBAACO2",87,0)
 Q FBDX
"RTN","FBAACO2",88,0)
 ;
"RTN","FBAACO2",89,0)
 ; retrieves existing value in db if exists and prompts user for ICD-10 primary diagnosis 
"RTN","FBAACO2",90,0)
ASKICD10(INDT,FBFREQ) ;FB*3.5*139-JLG-ICD10 REMEDIATION
"RTN","FBAACO2",91,0)
 N DP,DPRMPT,FBDCDA,FBDX
"RTN","FBAACO2",92,0)
 S EDATE=INDT  ; edate is the date of interest for ICD10 diagnosis code lookup
"RTN","FBAACO2",93,0)
 I $G(FBFREQ)="" S FBFREQ="N"  ; force field to be required flag
"RTN","FBAACO2",94,0)
 S DP=162.03   ; file number used to check if diagnosis field is required
"RTN","FBAACO2",95,0)
 S FBDCDA=DA   ; DA equals FBAACPI
"RTN","FBAACO2",96,0)
 N FBDXIEN
"RTN","FBAACO2",97,0)
 S DPRMPT="PRIMARY DIAGNOSIS"
"RTN","FBAACO2",98,0)
 S FBDXIEN=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,0)),U,23) ; retrieve existing DX ien 
"RTN","FBAACO2",99,0)
 S:FBDXIEN>0 DPRMPT=DPRMPT_": "_$$ICD9^FBCSV1(FBDXIEN,EDATE)_"// "  ;obtain current diagnosis and set as default
"RTN","FBAACO2",100,0)
 S FBDX=-1 S FBDX=$$ASKICD10^FBASF(DPRMPT,"","","",FBFREQ) ; returns -1 or ien of icd10 diagnosis code
"RTN","FBAACO2",101,0)
 I FBDXIEN>0,FBDX=-1 S FBDX=FBDXIEN W $$ICD9^FBCSV1(FBDXIEN,EDATE) ; return default value if spaces entered
"RTN","FBAACO2",102,0)
 K EDATE,INDT
"RTN","FBAACO2",103,0)
 Q FBDX
"RTN","FBAACO2",104,0)
 ;
"RTN","FBAACO2",105,0)
KILL S DIK=DIE D ^DIK K DIE,DIK I '$G(FBCNP) D Q^FBAACO S FBAAOUT=1
"RTN","FBAACO2",106,0)
 W !,"Deleted" Q
"RTN","FBAACO3")
0^2^B62984303
"RTN","FBAACO3",1,0)
FBAACO3 ;AISC/GRR - ENTER PAYMENT CONTINUED ;12/19/2014
"RTN","FBAACO3",2,0)
 ;;3.5;FEE BASIS;**4,38,55,61,116,122,133,108,124,143,139,157**;JAN 30, 1995;Build 1
"RTN","FBAACO3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","FBAACO3",4,0)
 ;
"RTN","FBAACO3",5,0)
 ;FB*3.5*157 Modify file 162, Diagnosis (field 28) stuff from '///' to '////'
"RTN","FBAACO3",6,0)
 ;           since needed file 80 dx IEN is already passed back from DX 
"RTN","FBAACO3",7,0)
 ;           lookup.
"RTN","FBAACO3",8,0)
 ;
"RTN","FBAACO3",9,0)
DOEDIT ;
"RTN","FBAACO3",10,0)
 N FB1725,FBFPPSC
"RTN","FBAACO3",11,0)
 W ! S FBAACP(0)=FBAACP
"RTN","FBAACO3",12,0)
 S DIC="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"
"RTN","FBAACO3",13,0)
 S DIC(0)="EQMZ",DA(3)=DFN,DA(2)=FBV,DA(1)=FBSDI
"RTN","FBAACO3",14,0)
 S X=$$CPT^FBAAUTL4(FBAACP)
"RTN","FBAACO3",15,0)
 D ^DIC I Y<0 S FBAAOUT=1 Q
"RTN","FBAACO3",16,0)
 S (DA,FBAACPI)=+Y,K=$P(Y(0),U,3),FBZBN=$P(Y(0),U,8),FBZBS=$S(FBZBN]"":$P($G(^FBAA(161.7,FBZBN,"ST")),U),1:""),FBAAPTC=$P(Y(0),U,20),J(0)=$P(Y(0),U,2)
"RTN","FBAACO3",17,0)
 ; set FB1725 true (1) if payment is for a Mill Bill claim
"RTN","FBAACO3",18,0)
 S FB1725=$S($P(Y(0),U,13)["FB583":+$P($G(^FB583(+$P(Y(0),U,13),0)),U,28),1:0)
"RTN","FBAACO3",19,0)
 S FBAAMM1=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,2)),U,2)
"RTN","FBAACO3",20,0)
 S FBCNTRP=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,3)),U,8)
"RTN","FBAACO3",21,0)
 S FBFSAMT(0)=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,2)),U,12)
"RTN","FBAACO3",22,0)
 ; determine lesser of original fee schedule amount and amount claimed
"RTN","FBAACO3",23,0)
 S FBAMTPD(0)=$S(FBFSAMT(0)="":J(0),FBFSAMT(0)>J(0):J(0),1:FBFSAMT(0))
"RTN","FBAACO3",24,0)
 S FBMODL=$$MODL^FBAAUTL4("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,"_FBAACPI_",""M"")")
"RTN","FBAACO3",25,0)
 ; load current adjustment data
"RTN","FBAACO3",26,0)
 D LOADADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO3",27,0)
 ; save adjustment data prior to edit session in sorted list
"RTN","FBAACO3",28,0)
 S FBADJL(0)=$$ADJL^FBUTL2(.FBADJ) ; sorted list of original adjustments
"RTN","FBAACO3",29,0)
 ; load current remittance remark data
"RTN","FBAACO3",30,0)
 D LOADRR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO3",31,0)
 ; save remittance remarks prior to edit session in sorted list
"RTN","FBAACO3",32,0)
 S FBRRMKL(0)=$$RRL^FBUTL4(.FBRRMK)
"RTN","FBAACO3",33,0)
 ; load FPPS data
"RTN","FBAACO3",34,0)
 S FBFPPSC=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,3)),U)
"RTN","FBAACO3",35,0)
 S FBFPPSL=$P($G(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,3)),U,2)
"RTN","FBAACO3",36,0)
 I FBZBS=""!(FBZBS="V") D NOGO S FBAAOUT=1 Q
"RTN","FBAACO3",37,0)
 ; first edit CPT code and modifiers
"RTN","FBAACO3",38,0)
 D CPTM^FBAALU(FBAADT,DFN,FBAACP(0),FBMODL) I '$G(FBGOT) S FBAAOUT=1 Q
"RTN","FBAACO3",39,0)
 ; if CPT was changed then update file
"RTN","FBAACO3",40,0)
 I FBAACP'=FBAACP(0) D  I FBAACP="@" S FBAAOUT=1 Q
"RTN","FBAACO3",41,0)
 . N FBIENS,FBFDA
"RTN","FBAACO3",42,0)
 . S FBIENS=FBAACPI_","_FBSDI_","_FBV_","_DFN_","
"RTN","FBAACO3",43,0)
 . S FBFDA(162.03,FBIENS,.01)=FBAACP
"RTN","FBAACO3",44,0)
 . D FILE^DIE("","FBFDA") D MSG^DIALOG()
"RTN","FBAACO3",45,0)
 ; if modifiers changed then update file
"RTN","FBAACO3",46,0)
 I FBMODL'=$$MODL^FBAAUTL4("FBMODA") D REPMOD^FBAAUTL4(DFN,FBV,FBSDI,FBAACPI)
"RTN","FBAACO3",47,0)
 ; now edit remaining fields
"RTN","FBAACO3",48,0)
 D SETO K DR
"RTN","FBAACO3",49,0)
 ;JAS - 09/13/13 - PATCH 139 - Added FBDXCHK1 and FBDXCHK2
"RTN","FBAACO3",50,0)
 N FBDXCHK1 S FBDXCHK1=";S:FBAADT<$$IMPDATE^FBCSV1(""10D"") Y=""@20"";@15;S XX1=-1 S XX1=$$ASKICD10^FBAACO2(FBAADT) S:XX1<0 Y=""@15"";28////^S X=XX1;S Y=""@21"";"   ;;FB*3.5*157
"RTN","FBAACO3",51,0)
 S FBDXCHK1=FBDXCHK1_"@20;S XX1=$$ASKICD9^FBAACO2(FBAADT) S:+XX1<0 Y=""@20"";28////^S X=+XX1;@21;31;32R;S Y=""@7"";"
"RTN","FBAACO3",52,0)
 N FBDXCHK2 S FBDXCHK2=";S:FBAADT<$$IMPDATE^FBCSV1(""10D"") Y=""@26"";@25;S XX1=-1 S XX1=$$ASKICD10^FBAACO2(FBAADT) S:XX1<0 Y=""@25"";28////^S X=XX1;S Y=""@30"";@26;"   ;;FB*3.5*157
"RTN","FBAACO3",53,0)
 S DR="48;47;S FBUNITS=X;42R;S FBZIP=X;S:$$ANES^FBAAFS($$CPT^FBAAUTL4(FBAACP)) Y=""@2"";43///@;S FBTIME=X;S Y=""@3"";@2;43R;S FBTIME=X;@3"
"RTN","FBAACO3",54,0)
 ; fb*3.5*116 remove edit of interest indicator (162.03,34) to prevent different interest indicator values at line item level; interest indicator set at invoice level only
"RTN","FBAACO3",55,0)
 S DR(1,162.03,1)="S FBAAMM=$S(FBAAPTC=""R"":"""",1:1);D PPT^FBAACO1(FBAAMM1,FBCNTRP,1);34///@;34////^S X=FBAAMM1;54///@;54////^S X=FBCNTRP;30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAACO3",56,0)
 ;S DR(1,162.03,1)="30R;S FBHCFA(30)=X;1;S J=X;Q"
"RTN","FBAACO3",57,0)
 S DR(1,162.03,2)="D FEEDT^FBAACO3;44///@;44///^S X=FBFSAMT;45///@;45///^S X=FBFSUSD;S:FBAMTPD'>0!(FBAMTPD=FBAMTPD(0)) Y=""@4"";2///^S X=FBAMTPD;@4;2//^S X=FBAMTPD;D CHKIT^FBAACO3;S K=X"
"RTN","FBAACO3",58,0)
 ;S DR(1,162.03,3)="3//^S X=$S(J-K:J-K,1:"""");4;S:X'=4 Y=6;22;6////^S X=DUZ;13;33"
"RTN","FBAACO3",59,0)
 S DR(1,162.03,3)="K FBADJD;M FBADJD=FBADJ;S FBX=$$ADJ^FBUTL2(J-K,.FBADJ,2,,.FBADJD,1)"
"RTN","FBAACO3",60,0)
 S DR(1,162.03,4)="S:FBFPPSC="""" Y=13;W !,""FPPS CLAIM ID: ""_FBFPPSC;S FBX=$$FPPSL^FBUTL5(FBFPPSL,,1);51///^S X=FBX;S FBFPPSL=X;@13;13;I $$BADDATE^FBAACO3(FBAADT,X) S Y=""@13"";33"
"RTN","FBAACO3",61,0)
 ;JAS - 09/13/13 - PATCH 139 - Updated line below for ICD-10
"RTN","FBAACO3",62,0)
 S DR(1,162.03,5)="S:$$EXTPV^FBAAUTL5(FBPOV)=""01"" Y=""@1"";S Y=$S('$D(FB7078):""@5"",FB7078]"""":""@21"",1:""@5"");@5"_FBDXCHK1_"@1"_FBDXCHK2_"S XX1=$$ASKICD9^FBAACO2(FBAADT) S:+XX1<0 Y=""@26"";28////^S X=+XX1;@30;31"
"RTN","FBAACO3",63,0)
 S DR(1,162.03,6)="@7;K FBRRMKD;M FBRRMKD=FBRRMK;S FBX=$$RR^FBUTL4(.FBRRMK,2,,.FBRRMKD)"
"RTN","FBAACO3",64,0)
 S DR(1,162.03,7)="73;74;75;58;59;60;61;62;63;64;65;66;67;76;77;78;79;68;69"
"RTN","FBAACO3",65,0)
 S DIE="^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",DIE("NO^")="",FBOT=1
"RTN","FBAACO3",66,0)
 D LOCK^FBUCUTL("^FBAAC("_DFN_",1,"_FBV_",1,"_FBSDI_",1,",FBAACPI) I 'FBLOCK S FBAAOUT=1 Q
"RTN","FBAACO3",67,0)
 D ^DIE
"RTN","FBAACO3",68,0)
 ; if adjustment data changed then file
"RTN","FBAACO3",69,0)
 I $$ADJL^FBUTL2(.FBADJ)'=FBADJL(0) D FILEADJ^FBAAFA(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBADJ)
"RTN","FBAACO3",70,0)
 ; if remit remark data changed then file
"RTN","FBAACO3",71,0)
 I $$RRL^FBUTL4(.FBRRMK)'=FBRRMKL(0) D FILERR^FBAAFR(FBAACPI_","_FBSDI_","_FBV_","_DFN_",",.FBRRMK)
"RTN","FBAACO3",72,0)
 L -^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI) K FBOT,DIE,DR,DA
"RTN","FBAACO3",73,0)
 Q:$D(FBDL)
"RTN","FBAACO3",74,0)
 I $G(FBAAIN) S FBINTOT=0 D CALC
"RTN","FBAACO3",75,0)
 Q
"RTN","FBAACO3",76,0)
 ;
"RTN","FBAACO3",77,0)
BADDATE(FBDOS,INVRCVDT) ;Reject entry if InvRcvDt is Prior to the Date of Service on the Invoice
"RTN","FBAACO3",78,0)
 I INVRCVDT<FBDOS D  Q 1 ;Reject entry
"RTN","FBAACO3",79,0)
 .N SHOWDOS  S SHOWDOS=$E(FBDOS,4,5)_"/"_$E(FBDOS,6,7)_"/"_$E(FBDOS,2,3) ;Convert FBDOS into display format for error message
"RTN","FBAACO3",80,0)
 .W *7,!!?5,"*** Invoice Received Date cannot be prior to the",!?8," Date of Service ("_SHOWDOS_") !!!"
"RTN","FBAACO3",81,0)
 Q 0 ;Accept entry
"RTN","FBAACO3",82,0)
 ;
"RTN","FBAACO3",83,0)
SETO S FY=$E(FBAADT,1,3)+1700+$S($E(FBAADT,4,5)>9:1,1:0)
"RTN","FBAACO3",84,0)
 Q
"RTN","FBAACO3",85,0)
OUT ;
"RTN","FBAACO3",86,0)
 ; FB*3.5*116 count line items that have 0.00 amount paid
"RTN","FBAACO3",87,0)
 ;I K>0 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1,FBINTOT=FBINTOT+K
"RTN","FBAACO3",88,0)
 S Z1=$P(^FBAA(161.7,FBAABE,0),"^",11)+1,$P(^(0),"^",11)=Z1,FBINTOT=FBINTOT+K
"RTN","FBAACO3",89,0)
 Q
"RTN","FBAACO3",90,0)
CKMAX S (FBAOT,A)=0,O="" F Z=S-.1:0 S Z=$O(^FBAAC(DFN,"AB",Z)) Q:Z'>0!(Z>R)  F Q=0:0 S Q=$O(^FBAAC(DFN,"AB",Z,Q)) Q:Q'>0  S W=$O(^FBAAC(DFN,"AB",Z,Q,0)) I $D(^FBAAC(DFN,1,Q,1,W,0)) D SMORE
"RTN","FBAACO3",91,0)
 I A>$P(FBSITE(1),"^",9) G NO
"RTN","FBAACO3",92,0)
 Q
"RTN","FBAACO3",93,0)
SMORE N FBA,FBB S FBB=$P($G(^FBAAC(+DFN,1,+Q,1,+W,0)),U,4),E=0
"RTN","FBAACO3",94,0)
 F  S E=$O(^FBAAC(DFN,1,Q,1,W,1,E)) Q:'E  S FBA=$G(^(E,0)) I $P(FBA,"^",9)=2,$P(FBA,"^",18)'=1 D
"RTN","FBAACO3",95,0)
 .I $$IDCHK^FBAAUTL3(DFN,FBB) S A=A+$P(FBA,"^",3) Q
"RTN","FBAACO3",96,0)
 .S FBAOT=FBAOT+$P(FBA,U,3)
"RTN","FBAACO3",97,0)
 Q
"RTN","FBAACO3",98,0)
NO W !!,*7,"Warning Patient already at maximum allowed for month of service",! Q
"RTN","FBAACO3",99,0)
WARN W !!,*7,"You have reached the maximum number of payments for a Batch!",!,"You must select another Batch for entering Payments!"
"RTN","FBAACO3",100,0)
CALC ;Calculate Current Invoice Total
"RTN","FBAACO3",101,0)
 F J=0:0 S J=$O(^FBAAC("C",FBAAIN,J)) Q:J'>0  F K=0:0 S K=$O(^FBAAC("C",FBAAIN,J,K)) Q:K'>0  F L=0:0 S L=$O(^FBAAC("C",FBAAIN,J,K,L)) Q:L'>0  F M=0:0 S M=$O(^FBAAC("C",FBAAIN,J,K,L,M)) Q:M'>0  D CALC1
"RTN","FBAACO3",102,0)
 K J,K,L,M,FZNODE Q
"RTN","FBAACO3",103,0)
CALC1 S FZNODE=^FBAAC(J,1,K,1,L,1,M,0),A2=$P(FZNODE,"^",3),FBINTOT=FBINTOT+A2,FBAAID=$P(FZNODE,"^",15),FBAAVID=$P($G(^FBAAC(J,1,K,1,L,1,M,2)),"^")
"RTN","FBAACO3",104,0)
 Q
"RTN","FBAACO3",105,0)
FEEDT ;
"RTN","FBAACO3",106,0)
 ;FB*3.5*143 Adding FB1725 as a parameter to prevent incorrect
"RTN","FBAACO3",107,0)
 ; reductions in local fee schedule pricing.
"RTN","FBAACO3",108,0)
 ; input FB1725 - true (=1) when edited payment is for a Mill BilL claim.
"RTN","FBAACO3",109,0)
 N FBX
"RTN","FBAACO3",110,0)
 D SETO:'$G(FY) S FBFY=FY-1
"RTN","FBAACO3",111,0)
 S (FBFSAMT,FBFSUSD)="",FBAMTPD=$G(FBAMTPD)
"RTN","FBAACO3",112,0)
 S FBX=$$GET^FBAAFS($$CPT^FBAAUTL4(FBAACP),$$MODL^FBAAUTL4("FBMODA","E"),FBAADT,$G(FBZIP),$$FAC^FBAAFS($G(FBHCFA(30))),$G(FBTIME),$G(FB1725))
"RTN","FBAACO3",113,0)
 I '$G(FBAAMM1) D
"RTN","FBAACO3",114,0)
 . S FBFSAMT=$P(FBX,U),FBFSUSD=$P(FBX,U,2)
"RTN","FBAACO3",115,0)
 E  D
"RTN","FBAACO3",116,0)
 . W !,?2,"Payment is for a contracted service so fee schedule does not apply."
"RTN","FBAACO3",117,0)
 I $P($G(FBX),U)]"" D
"RTN","FBAACO3",118,0)
 . W !?2,$S($G(FBAAMM1):"However, f",1:"F")
"RTN","FBAACO3",119,0)
 . W "ee schedule amount is $",$P(FBX,U)," from the "
"RTN","FBAACO3",120,0)
 . W:$P(FBX,U,3)]"" $P(FBX,U,3)," " ; year if returned
"RTN","FBAACO3",121,0)
 . W:$P(FBX,U,2)]"" $$EXTERNAL^DILFD(162.03,45,"",$P(FBX,U,2))
"RTN","FBAACO3",122,0)
 E  W !?2,"Unable to determine a FEE schedule amount."
"RTN","FBAACO3",123,0)
 ;
"RTN","FBAACO3",124,0)
 I FB1725 D
"RTN","FBAACO3",125,0)
 . W !!?2,"**Payment is for emergency treatment under 38 U.S.C. 1725."
"RTN","FBAACO3",126,0)
 . I FBFSAMT D
"RTN","FBAACO3",127,0)
 . . S FBFSAMT=$J(FBFSAMT*.7,0,2)
"RTN","FBAACO3",128,0)
 . . W !?2,"  Therefore, fee schedule amount reduced to $",FBFSAMT," (70%)."
"RTN","FBAACO3",129,0)
 ;
"RTN","FBAACO3",130,0)
 I $G(FBUNITS)>1 D
"RTN","FBAACO3",131,0)
 . W !!?2,"Units Paid = ",FBUNITS
"RTN","FBAACO3",132,0)
 . Q:FBFSAMT'>0
"RTN","FBAACO3",133,0)
 . N FBFSUNIT
"RTN","FBAACO3",134,0)
 . ; determine if fee schedule can be multiplied by units
"RTN","FBAACO3",135,0)
 . S FBFSUNIT=$S(FBFSUSD="R":1,FBFSUSD="F"&(FBAADT>3040930):1,1:0)
"RTN","FBAACO3",136,0)
 . I FBFSUNIT D
"RTN","FBAACO3",137,0)
 . . S FBFSAMT=$J(FBFSAMT*FBUNITS,0,2)
"RTN","FBAACO3",138,0)
 . . W !?2,"  Therefore, fee schedule amount increased to $",FBFSAMT
"RTN","FBAACO3",139,0)
 . E  D
"RTN","FBAACO3",140,0)
 . . W !?2,"  Fee schedule not complied on per unit basis so amount not adjusted by units."
"RTN","FBAACO3",141,0)
 ;
"RTN","FBAACO3",142,0)
 I '$G(FBAAMM1) D
"RTN","FBAACO3",143,0)
 . ; set default amount paid to lesser of amt claimed (J) or fee sched.
"RTN","FBAACO3",144,0)
 . S FBAMTPD=$S(FBFSAMT'>0:J,FBFSAMT>J:J,1:FBFSAMT)
"RTN","FBAACO3",145,0)
 W !
"RTN","FBAACO3",146,0)
 Q
"RTN","FBAACO3",147,0)
CHKIT I X>FBAMTPD&('$D(^XUSEC("FBAASUPERVISOR",DUZ))) W !!,"You must be a holder of the 'FBAASUPERVISOR' security key in order to",!,"exceed the Fee Schedule.",! S $P(^FBAAC(DFN,1,FBV,1,FBSDI,1,FBAACPI,0),"^",3)=K,Y=2 Q
"RTN","FBAACO3",148,0)
 Q
"RTN","FBAACO3",149,0)
NOGO W !!,*7,"This payment CANNOT be edited.  The batch the payment is in",!,"has been Vouchered.  You may void the payment with the Void Payment option.",!
"RTN","FBAACO3",150,0)
 Q
"RTN","FBAACO3",151,0)
 ;
"RTN","FBAACO3",152,0)
SC W *7,!?4,"Suspense code is required!",! S Y="@4" Q
"RTN","FBAACO3",153,0)
 ;
"RTN","FBAACO3",154,0)
DEL ;delete date of service if no service provided entered
"RTN","FBAACO3",155,0)
 I '$O(^FBAAC(DFN,1,FBV,1,FBSDI,1,0)) D
"RTN","FBAACO3",156,0)
 .S DIK="^FBAAC(DFN,1,FBV,1,",DA(2)=DFN,DA(1)=FBV,DA=FBSDI D ^DIK W !!?5,*7,"Incomplete payment entry deleted.",!
"RTN","FBAACO3",157,0)
 K DIK,DA Q
"VER")
8.0^22.0
**END**
**END**
