KIDS Distribution saved on Sep 19, 2017@12:27:53
MCCF EDI TAS ePHARMACY BUILD2
**KIDS**:BPS PSO PSX BUNDLE 10.0^BPS*1.0*22^PSO*7.0*478^PSX*2.0*81^

**INSTALL NAME**
BPS PSO PSX BUNDLE 10.0
"BLD",10532,0)
BPS PSO PSX BUNDLE 10.0^^1^3170919^y
"BLD",10532,1,0)
^^1^1^3170509^
"BLD",10532,1,1,0)
MCCF EDI TAS ePharmacy Build 2
"BLD",10532,6.3)
24
"BLD",10532,10,0)
^9.63^3^3
"BLD",10532,10,1,0)
BPS*1.0*22^1
"BLD",10532,10,2,0)
PSO*7.0*478^1
"BLD",10532,10,3,0)
PSX*2.0*81^1
"BLD",10532,10,"B","BPS*1.0*22",1)

"BLD",10532,10,"B","PSO*7.0*478",2)

"BLD",10532,10,"B","PSX*2.0*81",3)

"BLD",10532,"KRN",0)
^9.67PA^779.2^20
"BLD",10532,"KRN",.4,0)
.4
"BLD",10532,"KRN",.401,0)
.401
"BLD",10532,"KRN",.402,0)
.402
"BLD",10532,"KRN",.403,0)
.403
"BLD",10532,"KRN",.5,0)
.5
"BLD",10532,"KRN",.84,0)
.84
"BLD",10532,"KRN",3.6,0)
3.6
"BLD",10532,"KRN",3.8,0)
3.8
"BLD",10532,"KRN",9.2,0)
9.2
"BLD",10532,"KRN",9.8,0)
9.8
"BLD",10532,"KRN",19,0)
19
"BLD",10532,"KRN",19.1,0)
19.1
"BLD",10532,"KRN",101,0)
101
"BLD",10532,"KRN",409.61,0)
409.61
"BLD",10532,"KRN",771,0)
771
"BLD",10532,"KRN",779.2,0)
779.2
"BLD",10532,"KRN",870,0)
870
"BLD",10532,"KRN",8989.51,0)
8989.51
"BLD",10532,"KRN",8989.52,0)
8989.52
"BLD",10532,"KRN",8994,0)
8994
"BLD",10532,"KRN","B",.4,.4)

"BLD",10532,"KRN","B",.401,.401)

"BLD",10532,"KRN","B",.402,.402)

"BLD",10532,"KRN","B",.403,.403)

"BLD",10532,"KRN","B",.5,.5)

"BLD",10532,"KRN","B",.84,.84)

"BLD",10532,"KRN","B",3.6,3.6)

"BLD",10532,"KRN","B",3.8,3.8)

"BLD",10532,"KRN","B",9.2,9.2)

"BLD",10532,"KRN","B",9.8,9.8)

"BLD",10532,"KRN","B",19,19)

"BLD",10532,"KRN","B",19.1,19.1)

"BLD",10532,"KRN","B",101,101)

"BLD",10532,"KRN","B",409.61,409.61)

"BLD",10532,"KRN","B",771,771)

"BLD",10532,"KRN","B",779.2,779.2)

"BLD",10532,"KRN","B",870,870)

"BLD",10532,"KRN","B",8989.51,8989.51)

"BLD",10532,"KRN","B",8989.52,8989.52)

"BLD",10532,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.2
**INSTALL NAME**
BPS*1.0*22
"BLD",10524,0)
BPS*1.0*22^E CLAIMS MGMT ENGINE^0^3170919^y
"BLD",10524,1,0)
^^1^1^3170602^^
"BLD",10524,1,1,0)
MCCF EDI TAS EPHARMACY BUILD 2
"BLD",10524,4,0)
^9.64PA^9002313.32^5
"BLD",10524,4,9002313.02,0)
9002313.02
"BLD",10524,4,9002313.02,2,0)
^9.641^9002313.0201^1
"BLD",10524,4,9002313.02,2,9002313.0201,0)
TRANSACTIONS  (sub-file)
"BLD",10524,4,9002313.02,2,9002313.0201,1,0)
^9.6411^2095^1
"BLD",10524,4,9002313.02,2,9002313.0201,1,2095,0)
FACILITY ID QUALIFIER
"BLD",10524,4,9002313.02,222)
y^n^p^^^^n^^n
"BLD",10524,4,9002313.02,224)

"BLD",10524,4,9002313.03,0)
9002313.03
"BLD",10524,4,9002313.03,2,0)
^9.641^9002313.0301^1
"BLD",10524,4,9002313.03,2,9002313.0301,0)
RESPONSES  (sub-file)
"BLD",10524,4,9002313.03,2,9002313.0301,1,0)
^9.6411^2098^1
"BLD",10524,4,9002313.03,2,9002313.0301,1,2098,0)
RECONCILIATION ID
"BLD",10524,4,9002313.03,222)
y^n^p^^^^n^^n
"BLD",10524,4,9002313.03,224)

"BLD",10524,4,9002313.32,0)
9002313.32
"BLD",10524,4,9002313.32,2,0)
^9.641^9002313.32^1
"BLD",10524,4,9002313.32,2,9002313.32,0)
BPS PAYER RESPONSE OVERRIDES  (File-top level)
"BLD",10524,4,9002313.32,2,9002313.32,1,0)
^9.6411^2.09^1
"BLD",10524,4,9002313.32,2,9002313.32,1,2.09,0)
RECONCILIATION ID
"BLD",10524,4,9002313.32,222)
y^n^p^^^^n^^n
"BLD",10524,4,9002313.32,224)

"BLD",10524,4,9002313.56,0)
9002313.56
"BLD",10524,4,9002313.56,2,0)
^9.641^9002313.56^1
"BLD",10524,4,9002313.56,2,9002313.56,0)
BPS PHARMACIES  (File-top level)
"BLD",10524,4,9002313.56,2,9002313.56,1,0)
^9.6411^.09^1
"BLD",10524,4,9002313.56,2,9002313.56,1,.09,0)
AUTO-REVERSE PARAMETER
"BLD",10524,4,9002313.56,222)
y^y^p^^^^n^^n
"BLD",10524,4,9002313.56,224)

"BLD",10524,4,9002313.91,0)
9002313.91
"BLD",10524,4,9002313.91,222)
y^y^f^^n^^y^o^n
"BLD",10524,4,"APDD",9002313.02,9002313.0201)

"BLD",10524,4,"APDD",9002313.02,9002313.0201,2095)

"BLD",10524,4,"APDD",9002313.03,9002313.0301)

"BLD",10524,4,"APDD",9002313.03,9002313.0301,2098)

"BLD",10524,4,"APDD",9002313.32,9002313.32)

"BLD",10524,4,"APDD",9002313.32,9002313.32,2.09)

"BLD",10524,4,"APDD",9002313.56,9002313.56)

"BLD",10524,4,"APDD",9002313.56,9002313.56,.09)

"BLD",10524,4,"B",9002313.02,9002313.02)

"BLD",10524,4,"B",9002313.03,9002313.03)

"BLD",10524,4,"B",9002313.32,9002313.32)

"BLD",10524,4,"B",9002313.56,9002313.56)

"BLD",10524,4,"B",9002313.91,9002313.91)

"BLD",10524,6.3)
28
"BLD",10524,"ABPKG")
n
"BLD",10524,"GLO",0)
^9.65^^
"BLD",10524,"INIT")
POST^BPS22PST
"BLD",10524,"KRN",0)
^9.67PA^779.2^20
"BLD",10524,"KRN",.4,0)
.4
"BLD",10524,"KRN",.4,"NM",0)
^9.68A^^
"BLD",10524,"KRN",.401,0)
.401
"BLD",10524,"KRN",.402,0)
.402
"BLD",10524,"KRN",.403,0)
.403
"BLD",10524,"KRN",.5,0)
.5
"BLD",10524,"KRN",.84,0)
.84
"BLD",10524,"KRN",3.6,0)
3.6
"BLD",10524,"KRN",3.8,0)
3.8
"BLD",10524,"KRN",9.2,0)
9.2
"BLD",10524,"KRN",9.8,0)
9.8
"BLD",10524,"KRN",9.8,"NM",0)
^9.68A^13^13
"BLD",10524,"KRN",9.8,"NM",1,0)
BPSSCR^^0^B3027394
"BLD",10524,"KRN",9.8,"NM",2,0)
BPSSCRCV^^0^B61968340
"BLD",10524,"KRN",9.8,"NM",3,0)
BPSSCRSL^^0^B16566806
"BLD",10524,"KRN",9.8,"NM",4,0)
BPSVRX3^^0^B57551160
"BLD",10524,"KRN",9.8,"NM",5,0)
BPSBCKJ^^0^B54636858
"BLD",10524,"KRN",9.8,"NM",6,0)
BPSNCPDP^^0^B103818340
"BLD",10524,"KRN",9.8,"NM",7,0)
BPSPHAR^^0^B1773022
"BLD",10524,"KRN",9.8,"NM",8,0)
BPSTEST^^0^B227529281
"BLD",10524,"KRN",9.8,"NM",9,0)
BPSSCRLG^^0^B127974786
"BLD",10524,"KRN",9.8,"NM",10,0)
BPSSCRL1^^0^B66576750
"BLD",10524,"KRN",9.8,"NM",11,0)
BPSTEST1^^0^B196424
"BLD",10524,"KRN",9.8,"NM",12,0)
BPSSCRRJ^^0^B130546871
"BLD",10524,"KRN",9.8,"NM",13,0)
BPSNCPD3^^0^B67506388
"BLD",10524,"KRN",9.8,"NM","B","BPSBCKJ",5)

"BLD",10524,"KRN",9.8,"NM","B","BPSNCPD3",13)

"BLD",10524,"KRN",9.8,"NM","B","BPSNCPDP",6)

"BLD",10524,"KRN",9.8,"NM","B","BPSPHAR",7)

"BLD",10524,"KRN",9.8,"NM","B","BPSSCR",1)

"BLD",10524,"KRN",9.8,"NM","B","BPSSCRCV",2)

"BLD",10524,"KRN",9.8,"NM","B","BPSSCRL1",10)

"BLD",10524,"KRN",9.8,"NM","B","BPSSCRLG",9)

"BLD",10524,"KRN",9.8,"NM","B","BPSSCRRJ",12)

"BLD",10524,"KRN",9.8,"NM","B","BPSSCRSL",3)

"BLD",10524,"KRN",9.8,"NM","B","BPSTEST",8)

"BLD",10524,"KRN",9.8,"NM","B","BPSTEST1",11)

"BLD",10524,"KRN",9.8,"NM","B","BPSVRX3",4)

"BLD",10524,"KRN",19,0)
19
"BLD",10524,"KRN",19.1,0)
19.1
"BLD",10524,"KRN",101,0)
101
"BLD",10524,"KRN",101,"NM",0)
^9.68A^17^17
"BLD",10524,"KRN",101,"NM",1,0)
BPS VIEW ECME RX MENU^^0
"BLD",10524,"KRN",101,"NM",2,0)
BPS VRX NAV BILL LIST^^0
"BLD",10524,"KRN",101,"NM",3,0)
BPS VRX NAV BILLING EVENTS RPT^^0
"BLD",10524,"KRN",101,"NM",4,0)
BPS VRX NAV CRI^^0
"BLD",10524,"KRN",101,"NM",5,0)
BPS VRX NAV DG ELIG STATUS^^0
"BLD",10524,"KRN",101,"NM",6,0)
BPS VRX NAV DG ELIG VERIFICATION^^0
"BLD",10524,"KRN",101,"NM",7,0)
BPS VRX NAV ECME CLAIM LOG^^0
"BLD",10524,"KRN",101,"NM",8,0)
BPS VRX NAV INS POL^^0
"BLD",10524,"KRN",101,"NM",9,0)
BPS VRX NAV PRINT REPORT^^0
"BLD",10524,"KRN",101,"NM",10,0)
BPS VRX NAV TPJI AR ACCT PROFILE^^0
"BLD",10524,"KRN",101,"NM",11,0)
BPS VRX NAV TPJI AR COMMENT HISTORY^^0
"BLD",10524,"KRN",101,"NM",12,0)
BPS VRX NAV TPJI CLAIM INFORMATION^^0
"BLD",10524,"KRN",101,"NM",13,0)
BPS VRX NAV TPJI ECME RX INFO^^0
"BLD",10524,"KRN",101,"NM",14,0)
BPS VRX NAV VIEWRX^^0
"BLD",10524,"KRN",101,"NM",15,0)
VALM BLANK 1^^0
"BLD",10524,"KRN",101,"NM",16,0)
VALM BLANK 2^^0
"BLD",10524,"KRN",101,"NM",17,0)
VALM BLANK 3^^0
"BLD",10524,"KRN",101,"NM","B","BPS VIEW ECME RX MENU",1)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV BILL LIST",2)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV BILLING EVENTS RPT",3)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV CRI",4)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV DG ELIG STATUS",5)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV DG ELIG VERIFICATION",6)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV ECME CLAIM LOG",7)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV INS POL",8)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV PRINT REPORT",9)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV TPJI AR ACCT PROFILE",10)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV TPJI AR COMMENT HISTORY",11)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV TPJI CLAIM INFORMATION",12)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV TPJI ECME RX INFO",13)

"BLD",10524,"KRN",101,"NM","B","BPS VRX NAV VIEWRX",14)

"BLD",10524,"KRN",101,"NM","B","VALM BLANK 1",15)

"BLD",10524,"KRN",101,"NM","B","VALM BLANK 2",16)

"BLD",10524,"KRN",101,"NM","B","VALM BLANK 3",17)

"BLD",10524,"KRN",409.61,0)
409.61
"BLD",10524,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",10524,"KRN",409.61,"NM",1,0)
BPS VIEW ECME RX^^0
"BLD",10524,"KRN",409.61,"NM","B","BPS VIEW ECME RX",1)

"BLD",10524,"KRN",771,0)
771
"BLD",10524,"KRN",779.2,0)
779.2
"BLD",10524,"KRN",870,0)
870
"BLD",10524,"KRN",8989.51,0)
8989.51
"BLD",10524,"KRN",8989.52,0)
8989.52
"BLD",10524,"KRN",8994,0)
8994
"BLD",10524,"KRN","B",.4,.4)

"BLD",10524,"KRN","B",.401,.401)

"BLD",10524,"KRN","B",.402,.402)

"BLD",10524,"KRN","B",.403,.403)

"BLD",10524,"KRN","B",.5,.5)

"BLD",10524,"KRN","B",.84,.84)

"BLD",10524,"KRN","B",3.6,3.6)

"BLD",10524,"KRN","B",3.8,3.8)

"BLD",10524,"KRN","B",9.2,9.2)

"BLD",10524,"KRN","B",9.8,9.8)

"BLD",10524,"KRN","B",19,19)

"BLD",10524,"KRN","B",19.1,19.1)

"BLD",10524,"KRN","B",101,101)

"BLD",10524,"KRN","B",409.61,409.61)

"BLD",10524,"KRN","B",771,771)

"BLD",10524,"KRN","B",779.2,779.2)

"BLD",10524,"KRN","B",870,870)

"BLD",10524,"KRN","B",8989.51,8989.51)

"BLD",10524,"KRN","B",8989.52,8989.52)

"BLD",10524,"KRN","B",8994,8994)

"BLD",10524,"QUES",0)
^9.62^^
"BLD",10524,"REQB",0)
^9.611^^
"DATA",9002313.91,1,0)
101^^BIN NUMBER^N^^^^6^N
"DATA",9002313.91,1,5)
A1^6
"DATA",9002313.91,1,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,1,10,1,0)
S BPS("X")=$G(BPS("NCPDP","BIN Number"))
"DATA",9002313.91,1,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,1,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,1,25,0)
^9002313.9104^1^1^3040130^^^^
"DATA",9002313.91,1,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,1,30,0)
^9002313.9103^1^1^3040130^^^^
"DATA",9002313.91,1,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,1)=BPS("X")
"DATA",9002313.91,2,0)
102^^VERSION/RELEASE NUMBER^A/N^^^^2^A/N
"DATA",9002313.91,2,5)
A2^2
"DATA",9002313.91,2,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,2,10,1,0)
S BPS("X")=$G(BPS("NCPDP","Version"))
"DATA",9002313.91,2,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,2,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,2,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,2,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,2,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,2,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,2)=BPS("X")
"DATA",9002313.91,3,0)
103^^TRANSACTION CODE^N^^^^2^A/N
"DATA",9002313.91,3,5)
A3^2
"DATA",9002313.91,3,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,3,10,1,0)
S BPS("X")=$G(BPS("Transaction Code"))
"DATA",9002313.91,3,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,3,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,3,25,0)
^9002313.9104^1^1^3040130^^^^
"DATA",9002313.91,3,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,3,30,0)
^9002313.9103^1^1^3040130^^^^
"DATA",9002313.91,3,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,3)=BPS("X")
"DATA",9002313.91,4,0)
104^^PROCESSOR CONTROL NUMBER^A/N^^^^10^A/N
"DATA",9002313.91,4,5)
A4^10
"DATA",9002313.91,4,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,4,10,1,0)
S BPS("X")=$G(BPS("NCPDP","PCN"))
"DATA",9002313.91,4,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,4,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,4,25,0)
^9002313.9104^1^1^3040820^^^^
"DATA",9002313.91,4,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,4,30,0)
^9002313.9103^1^1^3040820^^^^
"DATA",9002313.91,4,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,4)=BPS("X")
"DATA",9002313.91,5,0)
201^^SERVICE PROVIDER ID^A/N^^^^15^A/N
"DATA",9002313.91,5,5)
B1^12
"DATA",9002313.91,5,10,0)
^^1^1^3110523^
"DATA",9002313.91,5,10,1,0)
S BPS("X")=$G(BPS("Site","NPI"))
"DATA",9002313.91,5,20,0)
^9002313.9102^1^1^3110523^
"DATA",9002313.91,5,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,5,25,0)
^^1^1^3110523^
"DATA",9002313.91,5,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,5,30,0)
^^1^1^3110523^
"DATA",9002313.91,5,30,1,0)
S $P(^BPSC(BPS(9002313.02),200),U,1)=BPS("X")
"DATA",9002313.91,6,0)
301^^GROUP ID^A/N^^^^15^A/N
"DATA",9002313.91,6,5)
C1^15
"DATA",9002313.91,6,10,0)
^9002313.9101^1^1^3101216^
"DATA",9002313.91,6,10,1,0)
S BPS("X")=$G(BPS("Insurer","Group #"))
"DATA",9002313.91,6,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,6,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,6,25,0)
^9002313.9104^1^1^3041021^^^^
"DATA",9002313.91,6,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,6,30,0)
^9002313.9103^1^1^3041021^^^^
"DATA",9002313.91,6,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,1)=BPS("X")
"DATA",9002313.91,7,0)
302^^CARDHOLDER ID^A/N^^^^20^A/N
"DATA",9002313.91,7,5)
C2^20
"DATA",9002313.91,7,10,0)
^9002313.9101^1^1^3041021
"DATA",9002313.91,7,10,1,0)
S BPS("X")=$G(BPS("Insurer","Policy #"))
"DATA",9002313.91,7,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,7,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,7,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,7,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,7,30,0)
^9002313.9103^1^1^3101004^^^
"DATA",9002313.91,7,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,2)=$TR(BPS("X")," ","")
"DATA",9002313.91,8,0)
303^^PERSON CODE^A/N^^^^3^A/N
"DATA",9002313.91,8,5)
C3^3
"DATA",9002313.91,8,10,0)
^9002313.9101^1^1^3040114
"DATA",9002313.91,8,10,1,0)
S BPS("X")=$G(BPS("Insurer","Person Code"))
"DATA",9002313.91,8,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,8,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,8,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,8,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,8,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,8,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,3)=BPS("X")
"DATA",9002313.91,9,0)
304^^DATE OF BIRTH^N^^^^8^N
"DATA",9002313.91,9,5)
C4^8
"DATA",9002313.91,9,10,0)
^9002313.9101^1^1^3040820
"DATA",9002313.91,9,10,1,0)
S BPS("X")=$G(BPS("Patient","DOB"))
"DATA",9002313.91,9,20,0)
^9002313.9102^1^1^3101029^
"DATA",9002313.91,9,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,9,25,0)
^9002313.9104^1^1^3040820^^^^
"DATA",9002313.91,9,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,9,30,0)
^9002313.9103^1^1^3101004^
"DATA",9002313.91,9,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,4)=$G(BPS("X"))
"DATA",9002313.91,10,0)
305^^PATIENT GENDER CODE^N^^^^1^N
"DATA",9002313.91,10,5)
C5^1
"DATA",9002313.91,10,10,0)
^9002313.9101^3^3^3040114
"DATA",9002313.91,10,10,1,0)
S BPS("X")=$G(BPS("Patient","Sex"))
"DATA",9002313.91,10,10,2,0)
S BPS("X")=$E(BPS("X"),1,1)
"DATA",9002313.91,10,10,3,0)
S BPS("X")=$S(BPS("X")="M":"1",BPS("X")="F":"2",1:"0")
"DATA",9002313.91,10,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,10,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,10,25,0)
^9002313.9104^1^1^3040114^^
"DATA",9002313.91,10,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,10,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,10,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,5)=BPS("X")
"DATA",9002313.91,11,0)
306^^PATIENT RELATIONSHIP CODE^N^^^^1^N
"DATA",9002313.91,11,5)
C6^1
"DATA",9002313.91,11,10,0)
^9002313.9101^1^1^3040114
"DATA",9002313.91,11,10,1,0)
S BPS("X")=$G(BPS("Insurer","Relationship"))
"DATA",9002313.91,11,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,11,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,11,25,0)
^9002313.9104^1^1^3040114^^^
"DATA",9002313.91,11,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,11,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,11,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,6)=BPS("X")
"DATA",9002313.91,12,0)
308^^OTHER COVERAGE CODE^N^^^^2^N
"DATA",9002313.91,12,5)
C8^2
"DATA",9002313.91,12,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,12,10,1,0)
S BPS("X")=$G(BPS("Patient","Other Coverage Code"))
"DATA",9002313.91,12,10,2,0)
S:'BPS("X") BPS("X")=0
"DATA",9002313.91,12,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,12,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,12,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,12,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,12,30,0)
^9002313.9103^1^1^3101115^^^
"DATA",9002313.91,12,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),300),U,8)=BPS("X")
"DATA",9002313.91,13,0)
401^^DATE OF SERVICE^N^^^^8^N
"DATA",9002313.91,13,5)
D1^8
"DATA",9002313.91,13,10,0)
^^1^1^3121128
"DATA",9002313.91,13,10,1,0)
S BPS("X")=$G(BPS("NCPDP","DOS"))
"DATA",9002313.91,13,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,13,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,13,25,0)
^9002313.9104^1^1^3040113^^^^
"DATA",9002313.91,13,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,13,30,0)
^^1^1^3121128
"DATA",9002313.91,13,30,1,0)
S $P(^BPSC(BPS(9002313.02),401),U,1)=BPS("X")
"DATA",9002313.91,14,0)
307^^PLACE OF SERVICE^A/N^^^^2^N
"DATA",9002313.91,14,5)
C7^2
"DATA",9002313.91,14,10,0)
^9002313.9101^1^1^3040820
"DATA",9002313.91,14,10,1,0)
S BPS("X")=$G(BPS("Patient","Place of Service"))
"DATA",9002313.91,14,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,14,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,14,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,14,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,14,30,0)
^9002313.9103^1^1^3100910^^^^
"DATA",9002313.91,14,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,7)=BPS("X")
"DATA",9002313.91,15,0)
309^^ELIGIBILITY CLARIFICATION CODE^N^^^^1^N
"DATA",9002313.91,15,5)
C9^1
"DATA",9002313.91,15,10,0)
^^2^2^3110727^
"DATA",9002313.91,15,10,1,0)
S BPS("X")=$G(BPS("Insurer","Eligibility Clarification Code"))
"DATA",9002313.91,15,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,15,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,15,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,15,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,15,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,15,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,15,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,9)=BPS("X")
"DATA",9002313.91,16,0)
310^^PATIENT FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,16,5)
CA^12
"DATA",9002313.91,16,10,0)
^^1^1^3101216^
"DATA",9002313.91,16,10,1,0)
S BPS("X")=$G(BPS("Patient","First Name"))
"DATA",9002313.91,16,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,16,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,16,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,16,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,16,30,0)
^9002313.9103^1^1^3101004^^^^
"DATA",9002313.91,16,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,10)=BPS("X")
"DATA",9002313.91,17,0)
311^^PATIENT LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,17,5)
CB^15
"DATA",9002313.91,17,10,0)
^^1^1^3101216^
"DATA",9002313.91,17,10,1,0)
S BPS("X")=$G(BPS("Patient","Last Name"))
"DATA",9002313.91,17,20,0)
^9002313.9102^1^1^3101004^
"DATA",9002313.91,17,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,17,25,0)
^9002313.9104^1^1^3101004^^^
"DATA",9002313.91,17,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,17,30,0)
^9002313.9103^1^1^3101004^^^
"DATA",9002313.91,17,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,11)=$G(BPS("X"))
"DATA",9002313.91,18,0)
402^^PRESCRIPTION/SERVICE REF NO^N^^^^12^N
"DATA",9002313.91,18,1)
PRESCRIPTION/SERVICE REFERENCE NUMBER
"DATA",9002313.91,18,5)
D2^7
"DATA",9002313.91,18,10,0)
^9002313.9101^1^1^3101115^^^^
"DATA",9002313.91,18,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"RX IEN"))
"DATA",9002313.91,18,20,0)
^^2^2^3121128
"DATA",9002313.91,18,20,1,0)
I $L($G(BPS("X")))>12 S BPS("X")=$E(BPS("X"),$L(BPS("X"))-11,$L(BPS("X")))
"DATA",9002313.91,18,20,2,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,18,25,0)
^9002313.9104^2^2^3101006^^^^
"DATA",9002313.91,18,25,1,0)
I $L(BPS("X"))>7 S BPS("X")=$E(BPS("X"),$L(BPS("X"))-6,$L(BPS("X")))
"DATA",9002313.91,18,25,2,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),7)
"DATA",9002313.91,18,30,0)
^9002313.9103^1^1^3101115^^^^
"DATA",9002313.91,18,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,2)=BPS("X")
"DATA",9002313.91,19,0)
403^^FILL NUMBER^N^^^^2^N
"DATA",9002313.91,19,5)
D3^2
"DATA",9002313.91,19,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,19,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Refill #"))
"DATA",9002313.91,19,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,19,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,19,25,0)
^9002313.9104^1^1^3030718^^
"DATA",9002313.91,19,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,19,30,0)
1^9002313.9103^1^1^3030718^^^
"DATA",9002313.91,19,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,3)=BPS("X")
"DATA",9002313.91,20,0)
B87^^QUAN LIMIT PER SPC TM PD COUNT^^^^^1^N
"DATA",9002313.91,20,1)
QUANTITY LIMIT PER SPECIFIC TIME PERIOD COUNT
"DATA",9002313.91,20,5)
3P^^2087
"DATA",9002313.91,20,10,0)
^9002313.9101^1^1^3150915^^
"DATA",9002313.91,20,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,21,0)
405^^DAYS SUPPLY^N^^^^3^N
"DATA",9002313.91,21,5)
D5^3
"DATA",9002313.91,21,10,0)
^9002313.9101^1^1^3040109
"DATA",9002313.91,21,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Days Supply"))
"DATA",9002313.91,21,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,21,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,21,25,0)
^9002313.9104^1^1^3030827^^^^
"DATA",9002313.91,21,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,21,30,0)
^9002313.9103^1^1^3030827^^^^
"DATA",9002313.91,21,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,5)=BPS("X")
"DATA",9002313.91,22,0)
406^^COMPOUND CODE^N^^^^1^N
"DATA",9002313.91,22,5)
D6^407
"DATA",9002313.91,22,10,0)
^9002313.9101^2^2^3040114
"DATA",9002313.91,22,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Compound Code"))
"DATA",9002313.91,22,10,2,0)
S:BPS("X")="" BPS("X")=1
"DATA",9002313.91,22,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,22,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,22,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,22,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,22,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,22,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,6)=BPS("X")
"DATA",9002313.91,23,0)
407^^PRODUCT/SERVICE ID^A/N^^^^19^A/N
"DATA",9002313.91,23,5)
D7^19
"DATA",9002313.91,23,10,0)
^9002313.9101^2^2^3030825
"DATA",9002313.91,23,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"NDC"))
"DATA",9002313.91,23,10,2,0)
S BPS("X")=$$NDCF^BPSECFM(BPS("X"))
"DATA",9002313.91,23,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,23,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,23,25,0)
^9002313.9104^1^1^3030825^^^
"DATA",9002313.91,23,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,23,30,0)
^9002313.9103^1^1^3030825^^^^
"DATA",9002313.91,23,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,7)=BPS("X")
"DATA",9002313.91,24,0)
408^^DAW PRODUCT SELECTION CODE^N^^^^1^A/N
"DATA",9002313.91,24,1)
DISPENSE AS WRITTEN (DAW)/ PRODUCT SELECTION CODE
"DATA",9002313.91,24,5)
D8^1
"DATA",9002313.91,24,10,0)
^9002313.9101^2^2^3070205
"DATA",9002313.91,24,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"DAW"))
"DATA",9002313.91,24,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,24,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,24,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,24,25,0)
^9002313.9104^1^1^3061120^
"DATA",9002313.91,24,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,24,30,0)
^9002313.9103^1^1^3030722^
"DATA",9002313.91,24,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,8)=BPS("X")
"DATA",9002313.91,25,0)
409^^INGREDIENT COST SUBMITTED^D^^^^8^D
"DATA",9002313.91,25,5)
D9^8
"DATA",9002313.91,25,10,0)
^^1^1^3121128
"DATA",9002313.91,25,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Ingredient Cost"))
"DATA",9002313.91,25,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,25,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,25,25,0)
^9002313.9104^1^1^3040907^^^^
"DATA",9002313.91,25,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,25,30,0)
^9002313.9103^1^1^3040907^^^^
"DATA",9002313.91,25,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,9)=BPS("X")
"DATA",9002313.91,26,0)
411^^PRESCRIBER ID^A/N^^^^15^A/N
"DATA",9002313.91,26,5)
DB^15
"DATA",9002313.91,26,10,0)
^9002313.9101^1^1^3070214
"DATA",9002313.91,26,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber NPI"))
"DATA",9002313.91,26,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,26,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,26,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,26,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,26,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,26,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,11)=BPS("X")
"DATA",9002313.91,27,0)
414^^DATE PRESCRIPTION WRITTEN^N^^^^8^N
"DATA",9002313.91,27,5)
DE^8
"DATA",9002313.91,27,10,0)
^9002313.9101^1^1^3040913
"DATA",9002313.91,27,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Date Written"))
"DATA",9002313.91,27,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,27,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,27,25,0)
^9002313.9104^1^1^3040913^^^^
"DATA",9002313.91,27,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,27,30,0)
^9002313.9103^1^1^3040913^^^^
"DATA",9002313.91,27,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,14)=BPS("X")
"DATA",9002313.91,28,0)
415^^NUMBER OF REFILLS AUTHORIZED^N^^^^2^N
"DATA",9002313.91,28,5)
DF^2
"DATA",9002313.91,28,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,28,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"# Refills"))
"DATA",9002313.91,28,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,28,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,28,25,0)
^9002313.9104^1^1^3030718^^
"DATA",9002313.91,28,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,28,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,28,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,15)=BPS("X")
"DATA",9002313.91,29,0)
419^^PRESCRIPTION ORIGIN CODE^N^^^^1^N
"DATA",9002313.91,29,5)
DJ^1
"DATA",9002313.91,29,10,0)
^9002313.9101^2^2^3030721
"DATA",9002313.91,29,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Origin Code"))
"DATA",9002313.91,29,10,2,0)
S:BPS("X")="" BPS("X")="0"
"DATA",9002313.91,29,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,29,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,29,25,0)
^9002313.9104^1^1^3030721^^^^
"DATA",9002313.91,29,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,29,30,0)
^9002313.9103^1^1^3030721^^^^
"DATA",9002313.91,29,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,19)=BPS("X")
"DATA",9002313.91,30,0)
420^^SUBMISSION CLARIFICATION CODE^N^^^^2^N
"DATA",9002313.91,30,5)
DK^2
"DATA",9002313.91,30,10,0)
^9002313.9101^1^1^3101006^^^^
"DATA",9002313.91,30,10,1,0)
; GET CODE handled by FLD420^BPSOSSG
"DATA",9002313.91,30,20,0)
^9002313.9102^1^1^3101006^^^^
"DATA",9002313.91,30,20,1,0)
; vD.0 FORMAT CODE handled by FLD420^BPSOSSG
"DATA",9002313.91,30,25,0)
^9002313.9104^1^1^3101006^^^^
"DATA",9002313.91,30,25,1,0)
; FORMAT CODE handled by FLD420^BPSOSSG
"DATA",9002313.91,30,30,0)
^9002313.9103^1^1^3101006^^^^
"DATA",9002313.91,30,30,1,0)
D FLD420^BPSOSSG
"DATA",9002313.91,31,0)
453^^ORIG PRESCR PROD/SERV ID QUAL^N^^^^2^A/N
"DATA",9002313.91,31,1)
ORIGINALLY PRESCRIBED PRODUCT/SERVICE ID QUALIFIER
"DATA",9002313.91,31,5)
EJ^2
"DATA",9002313.91,31,10,0)
^9002313.9101^1^1^3040907
"DATA",9002313.91,31,10,1,0)
S BPS("X")=""
"DATA",9002313.91,31,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,31,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,31,25,0)
^9002313.9104^1^1^3040907^^^^
"DATA",9002313.91,31,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,31,30,0)
^9002313.9103^1^1^3040907^^^
"DATA",9002313.91,31,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,3)=""
"DATA",9002313.91,32,0)
B88^^QUAN LIMIT PER SPC TIME PERIOD^^^^^10^N
"DATA",9002313.91,32,1)
QUANTITY LIMIT PER SPECIFIC TIME PERIOD
"DATA",9002313.91,32,5)
3R^^2088
"DATA",9002313.91,32,10,0)
^^1^1^3150915^
"DATA",9002313.91,32,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,33,0)
423^^BASIS OF COST DETERMINATION^A/N^^^^2^A/N
"DATA",9002313.91,33,5)
DN^2
"DATA",9002313.91,33,10,0)
^9002313.9101^1^1^3030916
"DATA",9002313.91,33,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Basis of Cost Determination"))
"DATA",9002313.91,33,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,33,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,33,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,33,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,33,30,0)
^9002313.9103^1^1^3030916^^^^
"DATA",9002313.91,33,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,23)=BPS("X")
"DATA",9002313.91,34,0)
424^^DIAGNOSIS CODE^A/N^^^^15^A/N
"DATA",9002313.91,34,5)
DO^15
"DATA",9002313.91,34,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,34,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Diagnosis Code"))
"DATA",9002313.91,34,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,34,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,34,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,34,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,34,30,0)
^9002313.9103^1^1^3030718^^
"DATA",9002313.91,34,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,24)=BPS("X")
"DATA",9002313.91,35,0)
430^^GROSS AMOUNT DUE^D^^^^8^D
"DATA",9002313.91,35,5)
DU^8
"DATA",9002313.91,35,10,0)
^9002313.9101^1^1^3030722
"DATA",9002313.91,35,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Gross Amount Due"))
"DATA",9002313.91,35,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,35,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,35,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,35,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,35,30,0)
^9002313.9103^1^1^3030722^^^^
"DATA",9002313.91,35,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,30)=BPS("X")
"DATA",9002313.91,36,0)
433^^PATIENT PAID AMOUNT SUBMITTED^D^^^^8^D
"DATA",9002313.91,36,1)
PATIENT PAID AMOUNT SUBMITTED
"DATA",9002313.91,36,5)
DX^8
"DATA",9002313.91,36,10,0)
^^2^2^3110727^
"DATA",9002313.91,36,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Patient Paid Amount"))
"DATA",9002313.91,36,10,2,0)
S:BPS("X")="" BPS("X")="0.00"
"DATA",9002313.91,36,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,36,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,36,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,36,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,36,30,0)
^9002313.9103^1^1^3030916^^
"DATA",9002313.91,36,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),430),U,3)=BPS("X")
"DATA",9002313.91,37,0)
439^^REASON FOR SERVICE CODE^A/N^^^^2^A/N
"DATA",9002313.91,37,5)
E4^2
"DATA",9002313.91,37,10,0)
^9002313.9101^1^1^3031230
"DATA",9002313.91,37,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"DUR","DUR Conflict Code",439))
"DATA",9002313.91,37,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,37,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,37,25,0)
^9002313.9104^1^1^3031230^^
"DATA",9002313.91,37,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,37,30,0)
^9002313.9103^1^1^3101115^^^^
"DATA",9002313.91,37,30,1,0)
D FLD439^BPSOSSG
"DATA",9002313.91,38,0)
440^^PROFESSIONAL SERVICE CODE^A/N^^^^2^A/N
"DATA",9002313.91,38,5)
E5^2
"DATA",9002313.91,38,10,0)
^9002313.9101^1^1^3031230
"DATA",9002313.91,38,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"DUR","DUR Intervention Code",440))
"DATA",9002313.91,38,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,38,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,38,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,38,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,38,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,38,30,1,0)
D FLD440^BPSOSSG
"DATA",9002313.91,39,0)
441^^RESULT OF SERVICE CODE^A/N^^^^2^A/N
"DATA",9002313.91,39,5)
E6^2
"DATA",9002313.91,39,10,0)
^9002313.9101^2^2^3070214
"DATA",9002313.91,39,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"DUR","DUR Outcome Code",441))
"DATA",9002313.91,39,10,2,0)
S:BPS("X")="" BPS("X")="00"
"DATA",9002313.91,39,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,39,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,39,25,0)
^9002313.9104^1^1^3070214^^
"DATA",9002313.91,39,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,39,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,39,30,1,0)
D FLD441^BPSOSSG
"DATA",9002313.91,40,0)
442^^QUANTITY DISPENSED^N^^^^10^N
"DATA",9002313.91,40,5)
E7^10
"DATA",9002313.91,40,10,0)
^9002313.9101^1^1^3070620
"DATA",9002313.91,40,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Quantity"))*1000\1
"DATA",9002313.91,40,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,40,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,40,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,40,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,40,30,0)
^9002313.9103^1^1^3040109^^^^
"DATA",9002313.91,40,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,2)=BPS("X")
"DATA",9002313.91,41,0)
B89^^QUANTITY LIMIT TIME PERIOD^^^^^5^N
"DATA",9002313.91,41,1)
QUANTITY LIMIT TIME PERIOD
"DATA",9002313.91,41,5)
3S^^2089
"DATA",9002313.91,41,10,0)
^^1^1^3150915^
"DATA",9002313.91,41,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,42,0)
412^^DISPENSING FEE SUBMITTED^D^^^^8^D
"DATA",9002313.91,42,5)
DC^8
"DATA",9002313.91,42,10,0)
^^1^1^3121128
"DATA",9002313.91,42,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Dispensing Fee"))
"DATA",9002313.91,42,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,42,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,42,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,42,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,42,30,0)
^9002313.9103^1^1^3040907^^^^
"DATA",9002313.91,42,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,12)=BPS("X")
"DATA",9002313.91,43,0)
B90^^DAYS SUP LIM PER SPC TM PD CNT^^^^^1^N
"DATA",9002313.91,43,1)
DAYS SUPPLY LIMIT PER SPECIFIC TIME PERIOD COUNT
"DATA",9002313.91,43,5)
3T^^2090
"DATA",9002313.91,43,10,0)
^^1^1^3150915^
"DATA",9002313.91,43,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,44,0)
418^^LEVEL OF SERVICE^N^^^^2^N
"DATA",9002313.91,44,5)
DI^2
"DATA",9002313.91,44,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,44,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Level of Service"))
"DATA",9002313.91,44,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,44,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,44,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,44,25,0)
^9002313.9104^1^1^3070215^^
"DATA",9002313.91,44,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,44,30,0)
^9002313.9103^1^1^3070215^^^^
"DATA",9002313.91,44,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,18)=BPS("X")
"DATA",9002313.91,45,0)
421^^PRIMARY CARE PROVIDER ID^A/N^^^^15^A/N
"DATA",9002313.91,45,5)
DL^15
"DATA",9002313.91,45,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,45,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Primary Care Provider NPI"))
"DATA",9002313.91,45,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,45,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,45,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,45,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,45,30,0)
^9002313.9103^1^1^3041015^
"DATA",9002313.91,45,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,21)=""
"DATA",9002313.91,46,0)
426^^USUAL AND CUSTOMARY CHARGE^D^^^^8^D
"DATA",9002313.91,46,5)
DQ^8
"DATA",9002313.91,46,10,0)
^9002313.9101^1^1^3031219
"DATA",9002313.91,46,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Usual & Customary"))
"DATA",9002313.91,46,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,46,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,46,25,0)
^9002313.9104^1^1^3031219^^^^
"DATA",9002313.91,46,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,46,30,0)
^9002313.9103^1^1^3031219^^^^
"DATA",9002313.91,46,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,26)=BPS("X")
"DATA",9002313.91,47,0)
429^^SPECIAL PACKAGING INDICATOR^N^^^^1^N
"DATA",9002313.91,47,5)
DT^1
"DATA",9002313.91,47,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,47,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Unit Dose Indicator"))
"DATA",9002313.91,47,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,47,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,47,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,47,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,47,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,47,30,0)
^9002313.9103^1^1^3030823^^^
"DATA",9002313.91,47,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,29)=BPS("X")
"DATA",9002313.91,48,0)
431^^OTHER PAYER AMOUNT PAID^D^^^^8^D
"DATA",9002313.91,48,5)
DV^8
"DATA",9002313.91,48,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,48,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,48,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,48,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,48,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,48,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,48,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,48,30,1,0)
D SET431^BPSFLD01
"DATA",9002313.91,49,0)
438^^INCENTIVE AMOUNT SUBMITTED^D^^^^8^D
"DATA",9002313.91,49,5)
E3^8
"DATA",9002313.91,49,10,0)
^^1^1^3110505^
"DATA",9002313.91,49,10,1,0)
S BPS("X")=0
"DATA",9002313.91,49,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,49,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,49,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,49,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,49,30,0)
^9002313.9103^1^1^3040907^
"DATA",9002313.91,49,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),430),U,8)=""
"DATA",9002313.91,50,0)
B91^^DAYS SUP LIM PER SPC TM PERIOD^^^^^3^N
"DATA",9002313.91,50,1)
DAYS SUPPLY LIMIT PER SPECIFIC TIME PERIOD
"DATA",9002313.91,50,5)
3W^^2091
"DATA",9002313.91,50,10,0)
^^1^1^3150915^
"DATA",9002313.91,50,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,51,0)
443^^OTHER PAYER DATE^N^^^^8^N
"DATA",9002313.91,51,5)
E8^8
"DATA",9002313.91,51,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,51,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,51,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,51,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,51,25,0)
^9002313.9104^1^1^3040224^
"DATA",9002313.91,51,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,51,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,51,30,1,0)
D SET443^BPSFLD01
"DATA",9002313.91,52,0)
313^^CARDHOLDER LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,52,5)
CD^15
"DATA",9002313.91,52,10,0)
^^1^1^3101216^
"DATA",9002313.91,52,10,1,0)
S BPS("X")=$G(BPS("Cardholder","Last Name"))
"DATA",9002313.91,52,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,52,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,52,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,52,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,52,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,52,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,13)=BPS("X")
"DATA",9002313.91,53,0)
312^^CARDHOLDER FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,53,5)
CC^12
"DATA",9002313.91,53,10,0)
^^1^1^3101216^
"DATA",9002313.91,53,10,1,0)
S BPS("X")=$G(BPS("Cardholder","First Name"))
"DATA",9002313.91,53,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,53,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,53,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,53,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),12)
"DATA",9002313.91,53,30,0)
^9002313.9103^1^1^3101115^^^^
"DATA",9002313.91,53,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,12)=BPS("X")
"DATA",9002313.91,54,0)
322^^PATIENT STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,54,5)
CM^30
"DATA",9002313.91,54,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,54,10,1,0)
S BPS("X")=$G(BPS("Patient","Street Address"))
"DATA",9002313.91,54,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,54,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,54,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,54,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,54,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,54,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,2)=BPS("X")
"DATA",9002313.91,55,0)
323^^PATIENT CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,55,5)
CN^20
"DATA",9002313.91,55,10,0)
^9002313.9101^1^1^3030703
"DATA",9002313.91,55,10,1,0)
S BPS("X")=$G(BPS("Patient","City"))
"DATA",9002313.91,55,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,55,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,55,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,55,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),20)
"DATA",9002313.91,55,30,0)
^9002313.9103^1^1^3030703^^^^
"DATA",9002313.91,55,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,3)=BPS("X")
"DATA",9002313.91,56,0)
324^^PATIENT STATE/PROVINCE ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,56,5)
CO^2
"DATA",9002313.91,56,10,0)
^9002313.9101^1^1^3030717
"DATA",9002313.91,56,10,1,0)
S BPS("X")=$G(BPS("Patient","State"))
"DATA",9002313.91,56,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,56,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,56,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,56,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,56,30,0)
^9002313.9103^1^1^3030717^^^^
"DATA",9002313.91,56,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,4)=BPS("X")
"DATA",9002313.91,57,0)
325^^PATIENT ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,57,5)
CP^15
"DATA",9002313.91,57,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,57,10,1,0)
S BPS("X")=$G(BPS("Patient","Zip"))
"DATA",9002313.91,57,20,0)
^^2^2^3121128
"DATA",9002313.91,57,20,1,0)
S BPS("X")=$TR($G(BPS("X")),"-/._","")
"DATA",9002313.91,57,20,2,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,57,25,0)
^9002313.9104^2^2^3030718^^^^
"DATA",9002313.91,57,25,1,0)
S BPS("X")=$TR(BPS("X"),"-/._","")
"DATA",9002313.91,57,25,2,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),9)
"DATA",9002313.91,57,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,57,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,5)=BPS("X")
"DATA",9002313.91,58,0)
314^^HOME PLAN^A/N^^^^3^A/N
"DATA",9002313.91,58,5)
CE^3
"DATA",9002313.91,58,10,0)
^9002313.9101^1^1^3030823
"DATA",9002313.91,58,10,1,0)
S BPS("X")=$G(BPS("Home Plan"))
"DATA",9002313.91,58,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,58,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,58,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,58,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),3)
"DATA",9002313.91,58,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,58,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,14)=BPS("X")
"DATA",9002313.91,59,0)
315^^EMPLOYER NAME^A/N^^^^30^A/N
"DATA",9002313.91,59,5)
CF^30
"DATA",9002313.91,59,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,59,10,1,0)
D EMPL^BPSOSSG
"DATA",9002313.91,59,10,2,0)
S BPS("X")=$G(BPS("Employer","Name"))
"DATA",9002313.91,59,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,59,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,59,25,0)
^9002313.9104^1^1^3030718^^^
"DATA",9002313.91,59,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,59,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,59,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,5)=BPS("X")
"DATA",9002313.91,60,0)
316^^EMPLOYER STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,60,5)
CG^30
"DATA",9002313.91,60,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,60,10,1,0)
S BPS("X")=$G(BPS("Employer","Address"))
"DATA",9002313.91,60,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,60,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,60,25,0)
^9002313.9104^1^1^3030718^^^
"DATA",9002313.91,60,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,60,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,60,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,6)=BPS("X")
"DATA",9002313.91,61,0)
317^^EMPLOYER CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,61,5)
CH^20
"DATA",9002313.91,61,10,0)
^9002313.9101^1^1^3150112^
"DATA",9002313.91,61,10,1,0)
S BPS("X")=$G(BPS("Employer","City"))
"DATA",9002313.91,61,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,61,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,61,25,0)
^9002313.9104^1^1^3030718^^
"DATA",9002313.91,61,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),20)
"DATA",9002313.91,61,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,61,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,7)=BPS("X")
"DATA",9002313.91,62,0)
318^^EMPLOYER STATE/PROV ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,62,1)
EMPLOYER STATE/ PROVINCE ADDRESS
"DATA",9002313.91,62,5)
CI^2
"DATA",9002313.91,62,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,62,10,1,0)
S BPS("X")=$G(BPS("Employer","State"))
"DATA",9002313.91,62,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,62,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,62,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,62,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,62,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,62,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,8)=BPS("X")
"DATA",9002313.91,63,0)
319^^EMPLOYER ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,63,5)
CJ^15
"DATA",9002313.91,63,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,63,10,1,0)
S BPS("X")=$G(BPS("Employer","Zip Code"))
"DATA",9002313.91,63,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,63,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,63,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,63,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,63,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,63,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,9)=BPS("X")
"DATA",9002313.91,64,0)
327^^CARRIER ID^A/N^^^^10^A/N
"DATA",9002313.91,64,5)
CR^12
"DATA",9002313.91,64,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,64,10,1,0)
S BPS("X")=$G(BPS("Carrier ID #"))
"DATA",9002313.91,64,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,64,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,64,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,64,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),12)
"DATA",9002313.91,64,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,64,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),320),U,7)=BPS("X")
"DATA",9002313.91,65,0)
B92^^DAYS SUPPLY LIMIT TIME PERIOD^^^^^5^N
"DATA",9002313.91,65,1)
DAYS SUPPLY LIMIT TIME PERIOD
"DATA",9002313.91,65,5)
3X^^2092
"DATA",9002313.91,65,10,0)
^^1^1^3150915^
"DATA",9002313.91,65,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,66,0)
C01^^ORIG MANUFACTURER PRODUCT ID^A/N^^^^19^A/N
"DATA",9002313.91,66,1)
ORIGINAL MANUFACTURER PRODUCT ID
"DATA",9002313.91,66,5)
4N^19^2101
"DATA",9002313.91,66,10,0)
^9002313.9101^1^1^3170228^^
"DATA",9002313.91,66,10,1,0)
S BPS("X")=""
"DATA",9002313.91,66,20,0)
^^1^1^3170228^
"DATA",9002313.91,66,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,66,25,0)
^9002313.9104^1^1^3170228^^
"DATA",9002313.91,66,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,66,30,0)
^^1^1^3170228^
"DATA",9002313.91,66,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C0"),U,1)=BPS("X")
"DATA",9002313.91,67,0)
427^^PRESCRIBER LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,67,5)
DR^15
"DATA",9002313.91,67,10,0)
^9002313.9101^1^1^3110107^^
"DATA",9002313.91,67,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Last Name"))
"DATA",9002313.91,67,20,0)
^9002313.9102^1^1^3110107^
"DATA",9002313.91,67,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,67,25,0)
^9002313.9104^1^1^3110107^^
"DATA",9002313.91,67,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,67,30,0)
^9002313.9103^1^1^3110107^^^^
"DATA",9002313.91,67,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),420),U,27)=BPS("X")
"DATA",9002313.91,68,0)
C02^^ORIG MANUFACTURER PROD ID QUAL^A/N^^^^2^A/N
"DATA",9002313.91,68,1)
ORIGINAL MANUFACTURER PRODUCT ID QUALIFIER
"DATA",9002313.91,68,5)
4P^2^2102
"DATA",9002313.91,68,10,0)
^^1^1^3170228^
"DATA",9002313.91,68,10,1,0)
S BPS("X")=""
"DATA",9002313.91,68,20,0)
^^1^1^3170228^
"DATA",9002313.91,68,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,68,25,0)
^^1^1^3170228^
"DATA",9002313.91,68,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,68,30,0)
^^1^1^3170228^
"DATA",9002313.91,68,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C0"),U,2)=BPS("X")
"DATA",9002313.91,69,0)
434^^DATE OF INJURY^N^^^^8^N
"DATA",9002313.91,69,5)
DY^8
"DATA",9002313.91,69,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,69,10,1,0)
S BPS("X")=$G(BPS("Date of Injury"))
"DATA",9002313.91,69,10,2,0)
S BPS("X")=$$DTF1^BPSECFM(BPS("X"))
"DATA",9002313.91,69,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,69,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,69,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,69,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,69,30,0)
^9002313.9103^1^1^3010125^^
"DATA",9002313.91,69,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,34)=BPS("X")
"DATA",9002313.91,70,0)
435^^CLAIM/REFERENCE ID^A/N^^^^30^A/N
"DATA",9002313.91,70,5)
DZ^30
"DATA",9002313.91,70,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,70,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Claim/Ref ID #"))
"DATA",9002313.91,70,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,70,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,70,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,70,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,70,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,70,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,35)=BPS("X")
"DATA",9002313.91,71,0)
436^^PRODUCT/SERVICE ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,71,5)
E1^2
"DATA",9002313.91,71,10,0)
^^1^1^3121128
"DATA",9002313.91,71,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Product ID Qualifier"))
"DATA",9002313.91,71,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,71,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,71,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,71,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,71,30,0)
^9002313.9103^1^1^3040107^^^^
"DATA",9002313.91,71,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),430),U,6)=BPS("X")
"DATA",9002313.91,72,0)
B96^^PROVIDER FIRST NAME^A/N^^^^35^A/N
"DATA",9002313.91,72,1)
PROVIDER FIRST NAME
"DATA",9002313.91,72,5)
4A^35^2096
"DATA",9002313.91,72,10,0)
^^1^1^3170228^
"DATA",9002313.91,72,10,1,0)
S BPS("X")=""
"DATA",9002313.91,72,20,0)
^^1^1^3170228^
"DATA",9002313.91,72,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,72,25,0)
^^1^1^3170228^
"DATA",9002313.91,72,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,72,30,0)
^^1^1^3170306^
"DATA",9002313.91,72,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B90"),U,6)=BPS("X")
"DATA",9002313.91,73,0)
B97^^PROVIDER LAST NAME^A/N^^^^35^A/N
"DATA",9002313.91,73,1)
PROVIDER LAST NAME
"DATA",9002313.91,73,5)
4M^35^2097
"DATA",9002313.91,73,10,0)
^^1^1^3170228^
"DATA",9002313.91,73,10,1,0)
S BPS("X")=""
"DATA",9002313.91,73,20,0)
^^1^1^3170228^
"DATA",9002313.91,73,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,73,25,0)
^^1^1^3170228^
"DATA",9002313.91,73,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,73,30,0)
^^1^1^3170306^
"DATA",9002313.91,73,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B90"),U,7)=BPS("X")
"DATA",9002313.91,74,0)
498.51^^PRIOR AUTH PROCESSED DATE^A/N^^^^8^N
"DATA",9002313.91,74,5)
PR^8
"DATA",9002313.91,74,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,74,10,1,0)
S BPS("X")=""
"DATA",9002313.91,74,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,74,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,75,0)
202^^SERV PROVIDER ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,75,1)
SERVICE PROVIDER ID QUALIFIER
"DATA",9002313.91,75,5)
B2^2
"DATA",9002313.91,75,10,0)
^9002313.9101^1^1^3070214
"DATA",9002313.91,75,10,1,0)
S BPS("X")="01"
"DATA",9002313.91,75,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,75,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,75,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,75,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,75,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,75,30,1,0)
S $P(^BPSC(BPS(9002313.02),200),U,2)=BPS("X") ;VA
"DATA",9002313.91,76,0)
110^^SOFTWARE VENDOR/CERT ID^A/N^^^^10^A/N
"DATA",9002313.91,76,1)
SOFTWARE VENDOR/ CERTIFICATION ID
"DATA",9002313.91,76,5)
AK^10
"DATA",9002313.91,76,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,76,10,1,0)
S BPS("X")=$G(BPS("NCPDP","Software Vendor/Cert ID"))
"DATA",9002313.91,76,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,76,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,76,25,0)
^9002313.9104^1^1^3040202^^^^
"DATA",9002313.91,76,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10) ;VA
"DATA",9002313.91,76,30,0)
^9002313.9103^1^1^3061023^
"DATA",9002313.91,76,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,10)=BPS("X")
"DATA",9002313.91,77,0)
331^^PATIENT ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,77,5)
CX^2
"DATA",9002313.91,77,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,77,10,1,0)
S BPS("X")="01"
"DATA",9002313.91,77,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,77,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,77,25,0)
^9002313.9104^1^1^3030718^^
"DATA",9002313.91,77,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,77,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,77,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,1)=BPS("X") ;VA
"DATA",9002313.91,78,0)
332^^PATIENT ID^A/N^^^^20^A/N
"DATA",9002313.91,78,5)
CY^20
"DATA",9002313.91,78,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,78,10,1,0)
S BPS("X")=$G(BPS("Patient","SSN"))
"DATA",9002313.91,78,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,78,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,78,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,78,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,78,30,0)
^9002313.9103^1^1^3040820^^^^
"DATA",9002313.91,78,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,2)=BPS("X") ;VA
"DATA",9002313.91,79,0)
326^^PATIENT TELEPHONE NUMBER^N^^^^10^N
"DATA",9002313.91,79,5)
CQ^10
"DATA",9002313.91,79,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,79,10,1,0)
S BPS("X")=$TR($G(BPS("Patient","Phone #")),"#() -_*.@")
"DATA",9002313.91,79,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,79,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,79,25,0)
^9002313.9104^1^1^3101115^
"DATA",9002313.91,79,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,79,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,79,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,6)=BPS("X")
"DATA",9002313.91,80,0)
455^^PRESCRIPTION/SERV REF NO QLFR^A/N^^^^1^A/N
"DATA",9002313.91,80,1)
PRESCRIPTION/ SERVICE REFERENCE NUMBER QUALIFIER
"DATA",9002313.91,80,5)
EM^1
"DATA",9002313.91,80,10,0)
^9002313.9101^1^1^3101008^
"DATA",9002313.91,80,10,1,0)
S BPS("X")=1
"DATA",9002313.91,80,20,0)
^9002313.9102^1^1^3101007^^
"DATA",9002313.91,80,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,80,25,0)
^9002313.9104^1^1^3101007^^^
"DATA",9002313.91,80,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,80,30,0)
^9002313.9103^1^1^3101007^^^^
"DATA",9002313.91,80,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,5)=BPS("X")
"DATA",9002313.91,81,0)
460^^QUANTITY PRESCRIBED^N^^^^10^N
"DATA",9002313.91,81,5)
ET^10
"DATA",9002313.91,81,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,81,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Quantity"))*1000\1
"DATA",9002313.91,81,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,81,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,81,25,0)
^9002313.9104^1^1^3030827^^^^
"DATA",9002313.91,81,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,81,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,81,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,10)=BPS("X")
"DATA",9002313.91,82,0)
465^^PROVIDER ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,82,5)
EY^2
"DATA",9002313.91,82,10,0)
^9002313.9101^1^1^3070214
"DATA",9002313.91,82,10,1,0)
S BPS("X")="05"
"DATA",9002313.91,82,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,82,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,82,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,82,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,82,30,0)
^9002313.9103^1^1^3041015^
"DATA",9002313.91,82,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,5)=""
"DATA",9002313.91,83,0)
444^^PROVIDER ID^A/N^^^^15^A/N
"DATA",9002313.91,83,5)
E9^15
"DATA",9002313.91,83,10,0)
^9002313.9101^1^1^3070214
"DATA",9002313.91,83,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Provider NPI"))
"DATA",9002313.91,83,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,83,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,83,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,83,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,83,30,0)
^9002313.9103^1^1^3041015^
"DATA",9002313.91,83,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,4)=""
"DATA",9002313.91,84,0)
466^^PRESCRIBER ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,84,5)
EZ^2
"DATA",9002313.91,84,10,0)
^^2^2^3101216^
"DATA",9002313.91,84,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber ID Qualifier"))
"DATA",9002313.91,84,10,2,0)
S:BPS("X")="" BPS("X")="01"
"DATA",9002313.91,84,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,84,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,84,25,0)
^9002313.9104^1^1^3070214^^^^
"DATA",9002313.91,84,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,84,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,84,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,6)=BPS("X")
"DATA",9002313.91,85,0)
467^^PRESCRIBER LOCATION CODE^A/N^^^^3^A/N
"DATA",9002313.91,85,5)
1E^3
"DATA",9002313.91,85,10,0)
^9002313.9101^1^1^3030721
"DATA",9002313.91,85,10,1,0)
S BPS("X")=$G(BPS("RX",1,"Prescriber Billing Location"))
"DATA",9002313.91,85,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,85,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,85,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,85,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,85,30,0)
^9002313.9103^1^1^3030721^^^^
"DATA",9002313.91,85,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,7)=BPS("X")
"DATA",9002313.91,86,0)
498^^PRESCRIBER TELEPHONE NUMBER^N^^^^10^N
"DATA",9002313.91,86,5)
PM^10
"DATA",9002313.91,86,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,86,10,1,0)
S BPS("X")=$TR($G(BPS("RX",BPS(9002313.0201),"Prescriber Phone #")),"#() -_*.@")
"DATA",9002313.91,86,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,86,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,86,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,86,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,86,30,0)
^9002313.9103^1^1^3100917^^^^
"DATA",9002313.91,86,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),498),U,12)=BPS("X")
"DATA",9002313.91,87,0)
468^^PRIMARY CARE PROVIDER ID QLFR^A/N^^^^2^A/N
"DATA",9002313.91,87,1)
PRIMARY CARE PROVIDER ID QUALIFIER
"DATA",9002313.91,87,5)
2E^2
"DATA",9002313.91,87,10,0)
^^2^2^3110727^
"DATA",9002313.91,87,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Primary Care Prov ID Qual"))
"DATA",9002313.91,87,10,2,0)
S:BPS("X")="" BPS("X")="01"
"DATA",9002313.91,87,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,87,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,87,25,0)
^9002313.9104^1^1^3070214^^^^
"DATA",9002313.91,87,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,87,30,0)
^9002313.9103^1^1^3041015^
"DATA",9002313.91,87,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,8)=""
"DATA",9002313.91,88,0)
469^^PRIM CARE PROV LOCATION CODE^N^^^^3^A/N
"DATA",9002313.91,88,5)
H5^3
"DATA",9002313.91,88,10,0)
^9002313.9101^1^1^3040114
"DATA",9002313.91,88,10,1,0)
S BPS("X")=$G(BPS("Patient","Primary Care Prov Location Code"))
"DATA",9002313.91,88,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,88,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,88,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,88,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,88,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,88,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,9)=BPS("X")
"DATA",9002313.91,89,0)
470^^PRIM CARE PROVIDER LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,89,1)
PRIMARY CARE PROVIDER LAST NAME
"DATA",9002313.91,89,5)
4E^15
"DATA",9002313.91,89,10,0)
^^1^1^3101217^
"DATA",9002313.91,89,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Primary Care Prov Last Name"))
"DATA",9002313.91,89,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,89,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,89,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,89,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,89,30,0)
^9002313.9103^1^1^3030825^^^^
"DATA",9002313.91,89,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,10)=BPS("X")
"DATA",9002313.91,90,0)
B95^^FACILITY ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,90,1)
FACILITY ID QUALIFIER
"DATA",9002313.91,90,5)
3Z^2^2095
"DATA",9002313.91,90,10,0)
^9002313.9101^2^2^3170530^^^
"DATA",9002313.91,90,10,1,0)
S BPS("X")=$G(BPS(""Insurer"",""Facility ID"")) 
"DATA",9002313.91,90,10,2,0)
S BPS(""X"")=$S(BPS(""X"")'="""":""1"",1:"""")
"DATA",9002313.91,90,20,0)
^9002313.9102^1^1^3170530^^^
"DATA",9002313.91,90,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,90,25,0)
^9002313.9104^1^1^3170530^^^
"DATA",9002313.91,90,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,90,30,0)
^9002313.9103^1^1^3170530^^^
"DATA",9002313.91,90,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B90"),U,1)=BPS("X")
"DATA",9002313.91,91,0)
480^^OTHER AMT CLAIMED SUBMITTED^D^^^^8^D
"DATA",9002313.91,91,1)
OTHER AMOUNT CLAIMED SUBMITTED
"DATA",9002313.91,91,5)
H9^8
"DATA",9002313.91,91,10,0)
^9002313.9101^1^1^3101006^^^^
"DATA",9002313.91,91,10,1,0)
; GET CODE handled by FLD480^BPSOSSG
"DATA",9002313.91,91,20,0)
^9002313.9102^1^1^3101006^^^^
"DATA",9002313.91,91,20,1,0)
; vD.0 format code handled by FLD480^BPSOSSG
"DATA",9002313.91,91,25,0)
^9002313.9104^1^1^3101006^^^^
"DATA",9002313.91,91,25,1,0)
; format code handled by FLD480^BPSOSSG
"DATA",9002313.91,91,30,0)
^9002313.9103^1^1^3101006^^^^
"DATA",9002313.91,91,30,1,0)
D FLD480^BPSOSSG
"DATA",9002313.91,92,0)
109^^TRANSACTION COUNT^A/N^^^^1^A/N
"DATA",9002313.91,92,5)
A9^1
"DATA",9002313.91,92,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,92,10,1,0)
S BPS("X")=$G(BPS("Transaction Count"))
"DATA",9002313.91,92,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,92,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,92,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,92,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,92,30,0)
^9002313.9103^1^1^3040114^^^
"DATA",9002313.91,92,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,9)=BPS("X")
"DATA",9002313.91,93,0)
111^^SEGMENT IDENTIFICATION^A/N^^^^2^A/N
"DATA",9002313.91,93,5)
AM^2
"DATA",9002313.91,93,10,0)
^9002313.9101^1^1^3040114
"DATA",9002313.91,93,10,1,0)
S BPS("X")=""
"DATA",9002313.91,93,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,93,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,94,0)
B98^^RECONCILIATION ID^A/N^^^^30^A/N
"DATA",9002313.91,94,1)
RECONCILIATION ID
"DATA",9002313.91,94,5)
34^30^2098
"DATA",9002313.91,94,10,0)
^9002313.9101^2^2^3170530^^^
"DATA",9002313.91,94,10,1,0)
"; THIS IS A RESPONSE-ONLY FIELD WHICH DOES NOT USE THE GET, FORMAT, OR 
"DATA",9002313.91,94,10,2,0)
SET CODE"
"DATA",9002313.91,95,0)
112^^TRANSACTION RESPONSE STATUS^A/N^^^^1^A/N
"DATA",9002313.91,95,5)
AN^2
"DATA",9002313.91,95,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,95,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,95,25,0)
^9002313.9104^1^1^3040114^^
"DATA",9002313.91,95,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,95,30,0)
^9002313.9103^1^1^3040114^^
"DATA",9002313.91,95,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),110),U,2)=BPS("X")
"DATA",9002313.91,96,0)
320^^EMPLOYER TELEPHONE NUMBER^N^^^^10^N
"DATA",9002313.91,96,5)
CK^10
"DATA",9002313.91,96,10,0)
^9002313.9101^1^1^3050802
"DATA",9002313.91,96,10,1,0)
S BPS("X")=$TR($G(BPS("Employer","Phone")),"#() -_*.@")
"DATA",9002313.91,96,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,96,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,96,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,96,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),10)
"DATA",9002313.91,96,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,96,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,10)=BPS("X")
"DATA",9002313.91,97,0)
321^^EMPLOYER CONTACT NAME^A/N^^^^30^A/N
"DATA",9002313.91,97,5)
CL^30
"DATA",9002313.91,97,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,97,10,1,0)
S BPS("X")=""
"DATA",9002313.91,97,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,97,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,97,25,0)
^9002313.9104^1^1^3040224^^^
"DATA",9002313.91,97,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,97,30,0)
^9002313.9103^1^1^3040224^
"DATA",9002313.91,97,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),320),U,1)=BPS("X")
"DATA",9002313.91,98,0)
330^^ALTERNATE ID^A/N^^^^20^A/N
"DATA",9002313.91,98,5)
CW^20
"DATA",9002313.91,98,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,98,10,1,0)
S BPS("X")=""
"DATA",9002313.91,98,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,98,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,98,25,0)
^9002313.9104^1^1^3040224^^^
"DATA",9002313.91,98,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),20)
"DATA",9002313.91,98,30,0)
^9002313.9103^1^1^3040224^^
"DATA",9002313.91,98,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),320),U,10)=BPS("X")
"DATA",9002313.91,99,0)
333^^EMPLOYER ID^A/N^^^^15^A/N
"DATA",9002313.91,99,5)
CZ^15
"DATA",9002313.91,99,10,0)
^9002313.9101^1^1^3030823
"DATA",9002313.91,99,10,1,0)
S BPS("X")=""
"DATA",9002313.91,99,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,99,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,99,25,0)
^9002313.9104^1^1^3030823^
"DATA",9002313.91,99,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,99,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,99,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,3)=BPS("X")
"DATA",9002313.91,100,0)
334^^SMOKER/NONSMOKER^N^^^^1^A/N
"DATA",9002313.91,100,5)
1C^1
"DATA",9002313.91,100,10,0)
^9002313.9101^1^1^3070620
"DATA",9002313.91,100,10,1,0)
S BPS("X")=""
"DATA",9002313.91,100,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,100,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,100,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,100,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),1)
"DATA",9002313.91,100,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,100,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,4)=BPS("X")
"DATA",9002313.91,101,0)
335^^PREGNANCY INDICATOR^N^^^^1^A/N
"DATA",9002313.91,101,5)
2C^1
"DATA",9002313.91,101,10,0)
^9002313.9101^1^1^3030823
"DATA",9002313.91,101,10,1,0)
S BPS("X")=""
"DATA",9002313.91,101,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,101,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,101,25,0)
^9002313.9104^1^1^3030823^^
"DATA",9002313.91,101,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),1)
"DATA",9002313.91,101,30,0)
^9002313.9103^1^1^3030823^^
"DATA",9002313.91,101,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,5)=BPS("X")
"DATA",9002313.91,102,0)
336^^FACILITY ID^A/N^^^^10^A/N
"DATA",9002313.91,102,5)
8C^10
"DATA",9002313.91,102,10,0)
^9002313.9101^1^1^3070103
"DATA",9002313.91,102,10,1,0)
S BPS("X")=$G(BPS("Insurer","Facility ID"))
"DATA",9002313.91,102,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,102,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,102,25,0)
^9002313.9104^1^1^3030823^^
"DATA",9002313.91,102,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),10)
"DATA",9002313.91,102,30,0)
^9002313.9103^1^1^3030823^
"DATA",9002313.91,102,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,6)=BPS("X")
"DATA",9002313.91,103,0)
337^^COB/OTHER PAYMENTS COUNT^N^^^^1^N
"DATA",9002313.91,103,1)
COORDINATION OF BENEFITS/OTHER PAYMENTS COUNT
"DATA",9002313.91,103,5)
4C^1
"DATA",9002313.91,103,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,103,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,103,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,103,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,103,25,0)
^9002313.9104^1^1^3040223^^^
"DATA",9002313.91,103,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,103,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,103,30,1,0)
D SET337^BPSFLD01
"DATA",9002313.91,104,0)
338^^OTHER PAYER COVERAGE TYPE^N^^^^2^A/N
"DATA",9002313.91,104,5)
5C^2
"DATA",9002313.91,104,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,104,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,104,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,104,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,104,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,104,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,104,30,0)
^9002313.9103^1^1^3101004^
"DATA",9002313.91,104,30,1,0)
D SET338^BPSFLD01
"DATA",9002313.91,105,0)
339^^OTHER PAYER ID QUALIFIER^N^^^^2^A/N
"DATA",9002313.91,105,5)
6C^2
"DATA",9002313.91,105,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,105,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,105,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,105,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,105,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,105,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,105,30,0)
^9002313.9103^1^1^3101004^
"DATA",9002313.91,105,30,1,0)
D SET339^BPSFLD01
"DATA",9002313.91,106,0)
340^^OTHER PAYER ID^A/N^^^^10^A/N
"DATA",9002313.91,106,5)
7C^10
"DATA",9002313.91,106,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,106,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,106,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,106,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,106,25,0)
^9002313.9104^1^1^3040223^^
"DATA",9002313.91,106,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,106,30,0)
^9002313.9103^1^1^3101004^^
"DATA",9002313.91,106,30,1,0)
D SET340^BPSFLD01
"DATA",9002313.91,107,0)
341^^OTHER PAYER AMOUNT PAID COUNT^N^^^^1^N
"DATA",9002313.91,107,5)
HB^1
"DATA",9002313.91,107,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,107,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,107,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,107,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,107,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,107,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,107,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,107,30,1,0)
D SET341^BPSFLD01
"DATA",9002313.91,108,0)
342^^OTHER PAYER AMT PAID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,108,1)
OTHER PAYER AMOUNT PAID QUALIFIER
"DATA",9002313.91,108,5)
HC^2
"DATA",9002313.91,108,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,108,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,108,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,108,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,108,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,108,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,108,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,108,30,1,0)
D SET342^BPSFLD01
"DATA",9002313.91,109,0)
343^^DISPENSING STATUS^A/N^^^^1^A/N
"DATA",9002313.91,109,5)
HD^1
"DATA",9002313.91,109,10,0)
^9002313.9101^1^1^3040913
"DATA",9002313.91,109,10,1,0)
S BPS("X")=""
"DATA",9002313.91,109,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,109,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,109,25,0)
^9002313.9104^1^1^3040913^^^^
"DATA",9002313.91,109,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,109,30,0)
^9002313.9103^1^1^3070620^
"DATA",9002313.91,109,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),340),U,3)=""
"DATA",9002313.91,110,0)
344^^QTY INTENDED TO BE DISPENSED^N^^^^10^N
"DATA",9002313.91,110,1)
QUANTITY INTENDED TO BE DISPENSED
"DATA",9002313.91,110,5)
HF^10
"DATA",9002313.91,110,10,0)
^9002313.9101^1^1^3070620
"DATA",9002313.91,110,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Quantity"))*1000\1
"DATA",9002313.91,110,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,110,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,110,25,0)
^9002313.9104^1^1^3070620^
"DATA",9002313.91,110,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,110,30,0)
^9002313.9103^1^1^3070620^
"DATA",9002313.91,110,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),340),U,4)=""
"DATA",9002313.91,111,0)
345^^DAYS SUPPLY INTEND TO BE DISP^N^^^^3^N
"DATA",9002313.91,111,1)
DAYS SUPPLY INTENDED TO BE DISPENSED
"DATA",9002313.91,111,5)
HG^3
"DATA",9002313.91,111,10,0)
^9002313.9101^1^1^3030827
"DATA",9002313.91,111,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Days Supply"))*1000
"DATA",9002313.91,111,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,111,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,111,25,0)
^9002313.9104^1^1^3030827^^^
"DATA",9002313.91,111,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,111,30,0)
^9002313.9103^1^1^3070620^
"DATA",9002313.91,111,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),340),U,5)=""
"DATA",9002313.91,112,0)
346^^BASIS OF CALC - DISPENSING FEE^A/N^^^^2^A/N
"DATA",9002313.91,112,5)
HH^8
"DATA",9002313.91,112,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,112,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,112,25,0)
^^1^1^3031205^
"DATA",9002313.91,112,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,112,30,0)
^^1^1^3031205^
"DATA",9002313.91,112,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),340),U,6)=BPS("X")
"DATA",9002313.91,113,0)
347^^BASIS OF CALC - COPAY^A/N^^^^2^A/N
"DATA",9002313.91,113,5)
HJ^8
"DATA",9002313.91,113,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,113,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,113,25,0)
^9002313.9104^1^1^3040114^^^
"DATA",9002313.91,113,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,113,30,0)
^9002313.9103^1^1^3040114^^^
"DATA",9002313.91,113,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),340),U,7)=BPS("X")
"DATA",9002313.91,114,0)
348^^BASIS OF CALC - FLAT SALES TAX^A/N^^^^2^A/N
"DATA",9002313.91,114,5)
HK^8
"DATA",9002313.91,114,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,114,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,114,25,0)
^^1^1^3031205^
"DATA",9002313.91,114,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,114,30,0)
^^1^1^3031205^
"DATA",9002313.91,114,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),340),U,8)=BPS("X")
"DATA",9002313.91,115,0)
349^^BASIS OF CALC - % SALES TAX^A/N^^^^2^A/N
"DATA",9002313.91,115,5)
HM^8
"DATA",9002313.91,115,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,115,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,115,25,0)
^^1^1^3031205^
"DATA",9002313.91,115,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,115,30,0)
^^1^1^3031205^
"DATA",9002313.91,115,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),340),U,9)=BPS("X")
"DATA",9002313.91,116,0)
350^^PATIENT E-MAIL ADDRESS^A/N^^^^80^A/N
"DATA",9002313.91,116,5)
HN^80
"DATA",9002313.91,116,10,0)
^9002313.9101^1^1^3030512
"DATA",9002313.91,116,10,1,0)
S BPS("X")=$G(BPS("Patient","Patient E-Mail Address"))
"DATA",9002313.91,116,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,116,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),80)
"DATA",9002313.91,116,30,0)
^9002313.9103^1^1^3101101^^^
"DATA",9002313.91,116,30,1,0)
S $P(^BPSC(BPS(9002313.02),340),U,10)=$G(BPS("X"))
"DATA",9002313.91,117,0)
351^^OTHER PAYER-PAT RESP AMT QLFR^A/N^^^^2^A/N
"DATA",9002313.91,117,1)
OTHER PAYER-PATIENT RESPONSIBILITY AMOUNT QUALIFIER
"DATA",9002313.91,117,5)
NP^1
"DATA",9002313.91,117,10,0)
^^1^1^3101222^
"DATA",9002313.91,117,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,117,20,0)
^9002313.9102^1^1^3101220^
"DATA",9002313.91,117,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,117,30,0)
^^1^1^3101222^
"DATA",9002313.91,117,30,1,0)
D SET351^BPSFLD01
"DATA",9002313.91,118,0)
352^^OTHER PAYER-PAT RESP AMOUNT^D^^^^10^D
"DATA",9002313.91,118,1)
OTHER PAYER-PATIENT RESPONSIBILITY AMOUNT
"DATA",9002313.91,118,5)
NQ^10
"DATA",9002313.91,118,10,0)
^^1^1^3101222^
"DATA",9002313.91,118,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,118,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,118,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,118,25,0)
^9002313.9104^1^1^3031212^
"DATA",9002313.91,118,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,118,30,0)
^9002313.9103^1^1^3101222^^
"DATA",9002313.91,118,30,1,0)
D SET352^BPSFLD01
"DATA",9002313.91,119,0)
353^^OTHER PAYER-PAT RESP AMT CNT^N^^^^2^N
"DATA",9002313.91,119,1)
OTHER PAYER-PATIENT RESPONSIBILITY AMOUNT COUNT
"DATA",9002313.91,119,5)
NR^1
"DATA",9002313.91,119,10,0)
^^1^1^3101222^
"DATA",9002313.91,119,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,119,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,119,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,119,30,0)
^9002313.9103^1^1^3101222^^
"DATA",9002313.91,119,30,1,0)
D SET353^BPSFLD01
"DATA",9002313.91,120,0)
445^^ORIG PRESCRIBED PROD/SERV CODE^A/N^^^^19^A/N
"DATA",9002313.91,120,1)
ORIGINALLY PRESCRIBED PRODUCT/SERVICE CODE
"DATA",9002313.91,120,5)
EA^19
"DATA",9002313.91,120,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,120,10,1,0)
S BPS("X")=""
"DATA",9002313.91,120,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,120,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,120,25,0)
^9002313.9104^1^1^3040107^^
"DATA",9002313.91,120,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),19)
"DATA",9002313.91,120,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,120,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,5)="" 
"DATA",9002313.91,121,0)
446^^ORIGINALLY PRESCRIBED QUANTITY^N^^^^10^N
"DATA",9002313.91,121,5)
EB^10
"DATA",9002313.91,121,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,121,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Quantity"))*1000\1
"DATA",9002313.91,121,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,121,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,121,25,0)
^9002313.9104^1^1^3030828^^^^
"DATA",9002313.91,121,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,121,30,0)
^9002313.9103^1^1^3030828^^^^
"DATA",9002313.91,121,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,6)=BPS("X") ;VA
"DATA",9002313.91,122,0)
454^^SCHEDULED PRESCRIPTION ID NUM^N^^^^12^A/N
"DATA",9002313.91,122,1)
SCHEDULED PRESCRIPTION ID NUMBER
"DATA",9002313.91,122,5)
EK^12
"DATA",9002313.91,122,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,122,10,1,0)
S BPS("X")=""
"DATA",9002313.91,122,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,122,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,122,25,0)
^9002313.9104^1^1^3040224^^
"DATA",9002313.91,122,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),12)
"DATA",9002313.91,122,30,0)
^9002313.9103^1^1^3040224^^
"DATA",9002313.91,122,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,4)=BPS("X")
"DATA",9002313.91,123,0)
456^^ASSOC PRESCRIPTION/SERV REF NO^A/N^^^^12^N
"DATA",9002313.91,123,1)
ASSOCIATED PRESCRIPTION/ SERVICE REFERENCE NUMBER
"DATA",9002313.91,123,5)
EN^7
"DATA",9002313.91,123,10,0)
^9002313.9101^1^1^3030823
"DATA",9002313.91,123,10,1,0)
S BPS("X")=""
"DATA",9002313.91,123,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,123,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,123,25,0)
^9002313.9104^1^1^3030823^^
"DATA",9002313.91,123,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),7)
"DATA",9002313.91,123,30,0)
^^1^1^3110720^
"DATA",9002313.91,123,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,6)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,124,0)
457^^ASSOC PRESCRIPTION/SERV DATE^A/N^^^^8^N
"DATA",9002313.91,124,1)
ASSOCIATED PRESCRIPTION/ SERVICE DATE
"DATA",9002313.91,124,5)
EP^8
"DATA",9002313.91,124,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,124,10,1,0)
S BPS("X")=""
"DATA",9002313.91,124,20,0)
^9002313.9102^1^1^3101029^
"DATA",9002313.91,124,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,124,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,124,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,124,30,0)
^9002313.9103^1^1^3110720^^
"DATA",9002313.91,124,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,7)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,125,0)
458^^PROCEDURE MODIFIER CODE COUNT^N^^^^2^N
"DATA",9002313.91,125,5)
SE^1
"DATA",9002313.91,125,10,0)
^9002313.9101^1^1^3040819
"DATA",9002313.91,125,10,1,0)
S BPS("X")=""
"DATA",9002313.91,125,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,125,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,125,25,0)
^9002313.9104^1^1^3040819^^^^
"DATA",9002313.91,125,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),1)
"DATA",9002313.91,125,30,0)
^9002313.9103^1^1^3040819^
"DATA",9002313.91,125,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,8)=""
"DATA",9002313.91,126,0)
459^^PROCEDURE MODIFIER CODE^A/N^^^^2^A/N
"DATA",9002313.91,126,5)
ER^2
"DATA",9002313.91,126,10,0)
^9002313.9101^1^1^3040819
"DATA",9002313.91,126,10,1,0)
S BPS("X")=""
"DATA",9002313.91,126,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,126,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,126,25,0)
^9002313.9104^1^1^3040819^^^^
"DATA",9002313.91,126,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,126,30,0)
^^1^1^3110727^
"DATA",9002313.91,126,30,1,0)
; Not implemented
"DATA",9002313.91,127,0)
461^^PRIOR AUTHORIZATION TYPE CODE^N^^^^2^N
"DATA",9002313.91,127,5)
EU^2
"DATA",9002313.91,127,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,127,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Prior Auth Type"))
"DATA",9002313.91,127,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,127,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,127,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,127,25,0)
^9002313.9104^1^1^3031222^^^^
"DATA",9002313.91,127,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,127,30,0)
^9002313.9103^1^1^3031222^^^^
"DATA",9002313.91,127,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,1)=BPS("X")
"DATA",9002313.91,128,0)
462^^PRIOR AUTH NUMBER SUBMITTED^A/N^^^^11^N
"DATA",9002313.91,128,1)
PRIOR AUTHORIZATION NUMBER SUBMITTED
"DATA",9002313.91,128,5)
EV^11
"DATA",9002313.91,128,10,0)
^9002313.9101^1^1^3031222
"DATA",9002313.91,128,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Prior Auth Num Sub"))
"DATA",9002313.91,128,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,128,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,128,25,0)
^9002313.9104^1^1^3031222^^^^
"DATA",9002313.91,128,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,128,30,0)
^9002313.9103^1^1^3031222^^^^
"DATA",9002313.91,128,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,2)=BPS("X")
"DATA",9002313.91,129,0)
464^^INTERMEDIARY AUTHORIZATION ID^A/N^^^^11^A/N
"DATA",9002313.91,129,5)
EX^11
"DATA",9002313.91,129,10,0)
^^2^2^3110727^
"DATA",9002313.91,129,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Intermediary Auth ID"))
"DATA",9002313.91,129,10,2,0)
S:BPS("X")="" BPS("X")=""
"DATA",9002313.91,129,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,129,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,129,25,0)
^9002313.9104^1^1^3030823^
"DATA",9002313.91,129,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),11)
"DATA",9002313.91,129,30,0)
^9002313.9103^1^1^3030823^^^
"DATA",9002313.91,129,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,4)=BPS("X")
"DATA",9002313.91,130,0)
471^^OTHER PAYER REJECT COUNT^N^^^^2^N
"DATA",9002313.91,130,5)
5E^2
"DATA",9002313.91,130,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,130,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,130,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,130,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,130,25,0)
^9002313.9104^1^1^3040224^^
"DATA",9002313.91,130,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,130,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,130,30,1,0)
D SET471^BPSFLD01
"DATA",9002313.91,131,0)
472^^OTHER PAYER REJECT CODE^A/N^^^^3^A/N
"DATA",9002313.91,131,5)
6E^3
"DATA",9002313.91,131,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,131,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,131,20,0)
^9002313.9102^1^1^3101206^
"DATA",9002313.91,131,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,131,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,131,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,131,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,131,30,1,0)
D SET472^BPSFLD01
"DATA",9002313.91,132,0)
473^^DUR/PPS CODE COUNTER^N^^^^1^N
"DATA",9002313.91,132,5)
7E^1
"DATA",9002313.91,132,10,0)
^9002313.9101^1^1^3031230
"DATA",9002313.91,132,10,1,0)
S BPS("X")=1
"DATA",9002313.91,132,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,132,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,132,25,0)
^9002313.9104^1^1^3031230^^^^
"DATA",9002313.91,132,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,132,30,0)
^9002313.9103^1^1^3031230^^^^
"DATA",9002313.91,132,30,1,0)
D FLD473^BPSOSSG
"DATA",9002313.91,133,0)
474^^DUR/PPS LEVEL OF EFFORT^N^^^^2^N
"DATA",9002313.91,133,5)
8E^2
"DATA",9002313.91,133,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,133,10,1,0)
S BPS("X")=12
"DATA",9002313.91,133,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,133,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,133,25,0)
^9002313.9104^1^1^3030718^
"DATA",9002313.91,133,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,133,30,0)
^9002313.9103^1^1^3030718^
"DATA",9002313.91,133,30,1,0)
D FLD474^BPSOSSG
"DATA",9002313.91,134,0)
475^^DUR CO-AGENT ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,134,5)
J9^2
"DATA",9002313.91,134,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,134,10,1,0)
S BPS("X")=""
"DATA",9002313.91,134,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,134,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,134,25,0)
^9002313.9104^1^1^3030718^
"DATA",9002313.91,134,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,134,30,0)
^9002313.9103^1^1^3030718^
"DATA",9002313.91,134,30,1,0)
D FLD475^BPSOSSG
"DATA",9002313.91,135,0)
476^^DUR CO-AGENT ID^A/N^^^^19^A/N
"DATA",9002313.91,135,5)
H6^19
"DATA",9002313.91,135,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,135,10,1,0)
S BPS("X")=""
"DATA",9002313.91,135,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,135,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,135,25,0)
^9002313.9104^1^1^3040107^^^
"DATA",9002313.91,135,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,135,30,0)
^9002313.9103^1^1^3101115^^^^
"DATA",9002313.91,135,30,1,0)
D FLD476^BPSOSSG
"DATA",9002313.91,136,0)
477^^PROF SERVICE FEE SUBMITTED^D^^^^8^D
"DATA",9002313.91,136,1)
PROFESSIONAL SERVICE FEE SUBMITTED
"DATA",9002313.91,136,5)
BE^8
"DATA",9002313.91,136,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,136,10,1,0)
S BPS("X")=0
"DATA",9002313.91,136,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,136,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,136,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,136,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,136,30,0)
^9002313.9103^1^1^3030823^^
"DATA",9002313.91,136,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),470),U,7)=BPS("X")
"DATA",9002313.91,139,0)
481^^FLAT SALES TAX AMT SUBMITTED^D^^^^8^D
"DATA",9002313.91,139,1)
FLAT SALES TAX AMOUNT SUBMITTED
"DATA",9002313.91,139,5)
HA^8
"DATA",9002313.91,139,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,139,10,1,0)
S BPS("X")=0
"DATA",9002313.91,139,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,139,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,139,25,0)
^9002313.9104^1^1^3040907^^
"DATA",9002313.91,139,25,1,0)
S BPS("X")=$$DFF^BPSECFM(BPS("X"),8)
"DATA",9002313.91,139,30,0)
^9002313.9103^1^1^3100923^^^^
"DATA",9002313.91,139,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,1)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,140,0)
482^^PERCENT SALES TAX AMT SBMTTD^D^^^^8^D
"DATA",9002313.91,140,1)
PERCENTAGE SALES TAX AMOUNT SUBMITTED
"DATA",9002313.91,140,5)
GE^8
"DATA",9002313.91,140,10,0)
^9002313.9101^1^1^3050802
"DATA",9002313.91,140,10,1,0)
S BPS("X")=0
"DATA",9002313.91,140,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,140,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,140,25,0)
^9002313.9104^1^1^3040907^^^^
"DATA",9002313.91,140,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,140,30,0)
^9002313.9103^1^1^3100923^^^^
"DATA",9002313.91,140,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,2)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,141,0)
483^^PERCENT SALES TAX RATE SBMTTD^D^^^^7^D
"DATA",9002313.91,141,1)
PERCENTAGE SALES TAX RATE SUBMITTED
"DATA",9002313.91,141,5)
HE^7
"DATA",9002313.91,141,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,141,10,1,0)
S BPS("X")=+$G(BPS("Insurer","Percent Sales Tax Rate Sub"))
"DATA",9002313.91,141,20,0)
^^1^1^3121128
"DATA",9002313.91,141,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),7,4)
"DATA",9002313.91,141,25,0)
^^1^1^3121128
"DATA",9002313.91,141,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),7,4)
"DATA",9002313.91,141,30,0)
^9002313.9103^1^1^3100923^^^^
"DATA",9002313.91,141,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,3)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,142,0)
484^^PERCENT SALES TAX BASIS SBMTTD^A/N^^^^2^A/N
"DATA",9002313.91,142,1)
PERCENTAGE SALES TAX BASIS SUBMITTED
"DATA",9002313.91,142,5)
JE^2
"DATA",9002313.91,142,10,0)
^9002313.9101^1^1^3050802
"DATA",9002313.91,142,10,1,0)
S BPS("X")=""
"DATA",9002313.91,142,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,142,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,142,25,0)
^9002313.9104^1^1^3030824^
"DATA",9002313.91,142,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,142,30,0)
^9002313.9103^1^1^3100923^^^^
"DATA",9002313.91,142,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,4)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,143,0)
485^^COUPON TYPE^A/N^^^^2^A/N
"DATA",9002313.91,143,5)
KE^2
"DATA",9002313.91,143,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,143,10,1,0)
S BPS("X")=""
"DATA",9002313.91,143,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,143,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,143,25,0)
^9002313.9104^1^1^3040107^^
"DATA",9002313.91,143,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,143,30,0)
^9002313.9103^1^1^3101115^^^
"DATA",9002313.91,143,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,5)=BPS("X")
"DATA",9002313.91,144,0)
486^^COUPON NUMBER^A/N^^^^15^A/N
"DATA",9002313.91,144,5)
ME^15
"DATA",9002313.91,144,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,144,10,1,0)
S BPS("X")=""
"DATA",9002313.91,144,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,144,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,144,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,144,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,144,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,144,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,6)=BPS("X")
"DATA",9002313.91,145,0)
487^^COUPON VALUE AMOUNT^D^^^^8^D
"DATA",9002313.91,145,5)
NE^8
"DATA",9002313.91,145,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,145,10,1,0)
S BPS("X")=""
"DATA",9002313.91,145,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,145,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,145,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,145,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,145,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,145,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,7)=BPS("X")
"DATA",9002313.91,146,0)
491^^DIAGNOSIS CODE COUNT^N^^^^1^N
"DATA",9002313.91,146,5)
VE^1
"DATA",9002313.91,146,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,146,10,1,0)
S BPS("X")=""
"DATA",9002313.91,146,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,146,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,146,25,0)
^9002313.9104^1^1^3040107^^^^
"DATA",9002313.91,146,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,147,0)
492^^DIAGNOSIS CODE QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,147,5)
WE^2
"DATA",9002313.91,147,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,147,10,1,0)
S BPS("X")=""
"DATA",9002313.91,147,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,147,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,147,25,0)
^9002313.9104^1^1^3040224^^^
"DATA",9002313.91,147,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,148,0)
493^^CLINICAL INFORMATION COUNTER^N^^^^1^N
"DATA",9002313.91,148,5)
XE^1
"DATA",9002313.91,148,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,148,10,1,0)
S BPS("X")=""
"DATA",9002313.91,148,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,148,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,148,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,148,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,149,0)
498.01^^REQUEST TYPE^N^^^^1^A/N
"DATA",9002313.91,149,5)
PA^1
"DATA",9002313.91,149,10,0)
^9002313.9101^1^1^3040428
"DATA",9002313.91,149,10,1,0)
S BPS("X")=""
"DATA",9002313.91,149,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,149,20,1,0)
S BPS("X")=""
"DATA",9002313.91,149,25,0)
^9002313.9104^1^1^3040428^
"DATA",9002313.91,149,25,1,0)
S BPS("X")=""
"DATA",9002313.91,150,0)
498.02^^REQUEST PERIOD DATE-BEGIN^A/N^^^^8^N
"DATA",9002313.91,150,5)
PB^8
"DATA",9002313.91,150,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,150,10,1,0)
S BPS("X")=""
"DATA",9002313.91,150,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,150,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,151,0)
498.03^^REQUEST PERIOD DATE-END^A/N^^^^8^N
"DATA",9002313.91,151,5)
PC^8
"DATA",9002313.91,151,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,151,10,1,0)
S BPS("X")=""
"DATA",9002313.91,151,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,151,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,152,0)
498.04^^BASIS OF REQUEST^A/N^^^^2^A/N
"DATA",9002313.91,152,5)
PD^2
"DATA",9002313.91,152,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,152,10,1,0)
S BPS("X")=""
"DATA",9002313.91,152,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,152,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,153,0)
498.05^^AUTHORIZED REP FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,153,5)
PE^12
"DATA",9002313.91,153,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,153,10,1,0)
S BPS("X")=""
"DATA",9002313.91,153,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,153,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,154,0)
498.06^^AUTHORIZED REP LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,154,5)
PF^15
"DATA",9002313.91,154,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,154,10,1,0)
S BPS("X")=""
"DATA",9002313.91,154,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,154,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,155,0)
498.07^^AUTHORIZED REP STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,155,5)
PG^30
"DATA",9002313.91,155,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,155,10,1,0)
S BPS("X")=""
"DATA",9002313.91,155,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,155,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,156,0)
498.08^^AUTH REP CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,156,5)
PH^20
"DATA",9002313.91,156,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,156,10,1,0)
S BPS("X")=""
"DATA",9002313.91,156,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,156,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,157,0)
498.09^^AUTHORIZED REP STATE/PROV ADDR^A/N^^^^2^A/N
"DATA",9002313.91,157,5)
PJ^2
"DATA",9002313.91,157,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,157,10,1,0)
S BPS("X")=""
"DATA",9002313.91,157,20,0)
^9002313.9102^1^1^3101206^
"DATA",9002313.91,157,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,158,0)
498.11^^AUTHORIZED REP ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,158,1)
AUTHORIZED REPRESENTATIVE ZIP/POSTAL ZONE
"DATA",9002313.91,158,5)
PK^15
"DATA",9002313.91,158,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,158,10,1,0)
S BPS("X")=""
"DATA",9002313.91,158,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,158,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,159,0)
498.12^^PRESCRIBER TELEPHONE NUMBER^N^^^^10^N
"DATA",9002313.91,159,5)
PM^10
"DATA",9002313.91,159,10,0)
^9002313.9101^1^1^3050802
"DATA",9002313.91,159,10,1,0)
S BPS("X")=$TR($G(BPS("RX",BPS(9002313.0201),"Prescriber Phone #")),"#() -_*.@")
"DATA",9002313.91,159,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,159,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,159,25,0)
^9002313.9104^1^1^3030722^^
"DATA",9002313.91,159,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),10)
"DATA",9002313.91,159,30,0)
^9002313.9103^1^1^3030722^^
"DATA",9002313.91,159,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),498),U,12)=BPS("X")
"DATA",9002313.91,160,0)
498.13^^PRIOR AUTH SUPPORTING DOCUMENT^A/N^^^^500^A/N
"DATA",9002313.91,160,5)
PP^200
"DATA",9002313.91,160,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,160,10,1,0)
S BPS("X")=""
"DATA",9002313.91,160,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,160,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),500)
"DATA",9002313.91,161,0)
498.14^^PRIOR AUTH NUMBER-ASSIGNED^N^^^^11^N
"DATA",9002313.91,161,5)
PY^8
"DATA",9002313.91,161,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,161,10,1,0)
S BPS("X")=""
"DATA",9002313.91,161,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,161,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,162,0)
498.52^^PRIOR AUTH EFFECTIVE DATE^A/N^^^^8^N
"DATA",9002313.91,162,5)
PS^8
"DATA",9002313.91,162,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,162,10,1,0)
S BPS("X")=""
"DATA",9002313.91,162,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,162,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,163,0)
498.53^^PRIOR AUTH EXPIRATION DATE^A/N^^^^8^N
"DATA",9002313.91,163,5)
PT^8
"DATA",9002313.91,163,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,163,10,1,0)
S BPS("X")=""
"DATA",9002313.91,163,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,163,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,164,0)
498.54^^PRIOR AUTH NO REFILLS AUTH^N^^^^2^N
"DATA",9002313.91,164,5)
PW^8
"DATA",9002313.91,164,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,164,10,1,0)
S BPS("X")=""
"DATA",9002313.91,164,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,164,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,165,0)
498.55^^PRIOR AUTH QTY ACCUMULATED^N^^^^10^N
"DATA",9002313.91,165,5)
PX^8
"DATA",9002313.91,165,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,165,10,1,0)
S BPS("X")=""
"DATA",9002313.91,165,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,165,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,166,0)
498.57^^PRIOR AUTHORIZATION QUANTITY^A/N^^^^10^N
"DATA",9002313.91,166,5)
RA^3
"DATA",9002313.91,166,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,166,10,1,0)
S BPS("X")=""
"DATA",9002313.91,166,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,166,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,167,0)
498.58^^PRIOR AUTH DOLLARS AUTHORIZED^N^^^^8^D
"DATA",9002313.91,167,5)
RB^8
"DATA",9002313.91,167,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,167,10,1,0)
S BPS("X")=""
"DATA",9002313.91,167,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,167,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,168,0)
498.59^^AUTH REP CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,168,5)
PH^20
"DATA",9002313.91,168,10,0)
^9002313.9101^1^1^3030512
"DATA",9002313.91,168,10,1,0)
S BPS("X")=""
"DATA",9002313.91,168,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,168,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,169,0)
501^^HEADER RESPONSE STATUS^A/N^^^^1^A/N
"DATA",9002313.91,169,5)
F1^1
"DATA",9002313.91,169,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,169,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,169,25,0)
^9002313.9104^1^1^3040202^^^
"DATA",9002313.91,169,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,169,30,0)
^9002313.9103^1^1^3040202^^^
"DATA",9002313.91,169,30,1,0)
S $P(^BPSR(BPS(9002313.02),500),U,1)=BPS("X")
"DATA",9002313.91,170,0)
503^^AUTHORIZATION NUMBER^A/N^^^^20^A/N
"DATA",9002313.91,170,5)
F3^20
"DATA",9002313.91,170,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,170,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,170,30,0)
^^1^1^3031205^
"DATA",9002313.91,170,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,3)=BPS("X")
"DATA",9002313.91,171,0)
504^^MESSAGE^A/N^^^^200^A/N
"DATA",9002313.91,171,5)
F4^200
"DATA",9002313.91,171,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,171,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,171,25,0)
^^1^1^3031211^
"DATA",9002313.91,171,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),200)
"DATA",9002313.91,171,30,0)
^^1^1^3031211^
"DATA",9002313.91,171,30,1,0)
S $P(^BPSR(BPS(9002313.02),504),U,1)=BPS("X")
"DATA",9002313.91,172,0)
505^^PATIENT PAY AMOUNT^A/N^^^^8^D
"DATA",9002313.91,172,5)
F5^8
"DATA",9002313.91,172,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,172,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,172,25,0)
^9002313.9104^1^1^3031212^^
"DATA",9002313.91,172,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,172,30,0)
^9002313.9103^1^1^3031212^^
"DATA",9002313.91,172,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,5)=S BPS("X")
"DATA",9002313.91,173,0)
506^^INGREDIENT COST PAID^A/N^^^^8^D
"DATA",9002313.91,173,5)
F6^8
"DATA",9002313.91,173,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,173,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,173,25,0)
^9002313.9104^1^1^3031211^^
"DATA",9002313.91,173,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,173,30,0)
^9002313.9103^1^1^3031211^^
"DATA",9002313.91,173,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,6)=BPS("X")
"DATA",9002313.91,174,0)
507^^DISPENSING FEE PAID^A/N^^^^8^D
"DATA",9002313.91,174,5)
F7^8
"DATA",9002313.91,174,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,174,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,174,25,0)
^9002313.9104^1^1^3031210^^^
"DATA",9002313.91,174,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,174,30,0)
^9002313.9103^1^1^3031210^^^
"DATA",9002313.91,174,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,7)=BPS("X")
"DATA",9002313.91,175,0)
509^^TOTAL AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,175,5)
F9^8
"DATA",9002313.91,175,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,175,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,175,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,175,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,175,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,175,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,9)
"DATA",9002313.91,176,0)
510^^REJECT COUNT^N^^^^2^N
"DATA",9002313.91,176,5)
FA^2
"DATA",9002313.91,176,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,176,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,176,25,0)
^^1^1^3031217^
"DATA",9002313.91,176,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,176,30,0)
^^1^1^3031217^
"DATA",9002313.91,176,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,10)=BPS("X")
"DATA",9002313.91,177,0)
511^^REJECT CODE^A/N^^^^3^A/N
"DATA",9002313.91,177,5)
FB^3
"DATA",9002313.91,177,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,177,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,177,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,177,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,177,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,177,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),511,DUR,0),U,1)
"DATA",9002313.91,178,0)
512^^ACCUMULATED DEDUCTIBLE AMOUNT^A/N^^^^8^D
"DATA",9002313.91,178,5)
FC^8
"DATA",9002313.91,178,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,178,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,178,25,0)
^9002313.9104^1^1^3031210^^^^
"DATA",9002313.91,178,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,178,30,0)
^9002313.9103^1^1^3031210^^^^
"DATA",9002313.91,178,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),"^",10)=BPS("X")
"DATA",9002313.91,179,0)
513^^REMAINING DEDUCTIBLE AMOUNT^A/N^^^^8^D
"DATA",9002313.91,179,5)
FD^8
"DATA",9002313.91,179,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,179,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,179,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,179,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,179,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,179,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,13)=BPS("X")
"DATA",9002313.91,180,0)
514^^REMAINING BENEFIT AMOUNT^A/N^^^^8^D
"DATA",9002313.91,180,5)
FE^8
"DATA",9002313.91,180,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,180,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,180,25,0)
^9002313.9104^1^1^3031217^^^
"DATA",9002313.91,180,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,180,30,0)
^9002313.9103^1^1^3031217^^^
"DATA",9002313.91,180,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,14)
"DATA",9002313.91,182,0)
517^^AMT APPLIED TO PERIODIC DEDUCT^D^^^^8^D
"DATA",9002313.91,182,5)
FH^8
"DATA",9002313.91,182,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,182,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,182,25,0)
^9002313.9104^1^1^3031205^^^
"DATA",9002313.91,182,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,182,30,0)
^9002313.9103^1^1^3031205^^
"DATA",9002313.91,182,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),"^",17)=BPS("X")
"DATA",9002313.91,183,0)
518^^AMOUNT OF COPAY^D^^^^8^D
"DATA",9002313.91,183,5)
FI^8
"DATA",9002313.91,183,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,183,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,183,25,0)
^^1^1^3031205^
"DATA",9002313.91,183,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,183,30,0)
^^1^1^3031205^
"DATA",9002313.91,183,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),"^",18)=BPS("X")
"DATA",9002313.91,184,0)
519^^AMT ATTRIBUTED TO PRODUCT SEL^D^^^^8^D
"DATA",9002313.91,184,5)
FJ^8
"DATA",9002313.91,184,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,184,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,184,25,0)
^^1^1^3031205^
"DATA",9002313.91,184,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,184,30,0)
^^1^1^3031205^
"DATA",9002313.91,184,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,19)=BPS("X")
"DATA",9002313.91,185,0)
520^^AMOUNT EXCEEDING PERIODIC MAX^D^^^^8^D
"DATA",9002313.91,185,5)
FK^8
"DATA",9002313.91,185,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,185,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,185,25,0)
^^1^1^3031205^
"DATA",9002313.91,185,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,185,30,0)
^^1^1^3031205^
"DATA",9002313.91,185,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,20)=BPS("X")
"DATA",9002313.91,186,0)
521^^INCENTIVE AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,186,5)
FL^8
"DATA",9002313.91,186,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,186,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,186,25,0)
^^1^1^3031210^
"DATA",9002313.91,186,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,186,30,0)
^^1^1^3031210^
"DATA",9002313.91,186,30,1,0)
$P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,21)=BPS("X")
"DATA",9002313.91,187,0)
522^^BASIS OF REIMB DETERMINATION^N^^^^2^N
"DATA",9002313.91,187,5)
FM^2
"DATA",9002313.91,187,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,187,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,187,25,0)
^^1^1^3031205^
"DATA",9002313.91,187,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,187,30,0)
^^1^1^3031205^
"DATA",9002313.91,187,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,22)=BPS("X")
"DATA",9002313.91,188,0)
523^^AMOUNT ATTRIBUTED TO SALES TAX^D^^^^8^D
"DATA",9002313.91,188,5)
FN^8
"DATA",9002313.91,188,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,188,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,188,25,0)
^^1^1^3031205^
"DATA",9002313.91,188,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,188,30,0)
^^1^1^3031205^
"DATA",9002313.91,188,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),"^",23)=BPS("X")
"DATA",9002313.91,189,0)
524^^PLAN ID^A/N^^^^8^A/N
"DATA",9002313.91,189,5)
FO^8
"DATA",9002313.91,189,10,0)
^^1^1^3110301^
"DATA",9002313.91,189,10,1,0)
S BPS("X")=$G(BPS("Insurer","Plan ID"))
"DATA",9002313.91,189,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,189,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,189,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,189,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),8)
"DATA",9002313.91,189,30,0)
^9002313.9103^1^1^3030825^^^^
"DATA",9002313.91,189,30,1,0)
S $P(^BPSC(BPS(9002313.02),520),U,4)=BPS("X")
"DATA",9002313.91,191,0)
526^^ADDITIONAL MESSAGE INFORMATION^A/N^^^^40^A/N
"DATA",9002313.91,191,5)
FQ^200
"DATA",9002313.91,191,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,191,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,191,25,0)
^9002313.9104^1^1^3031210^^^^
"DATA",9002313.91,191,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),200)
"DATA",9002313.91,191,30,0)
^9002313.9103^1^1^3031210^^^^
"DATA",9002313.91,191,30,1,0)
S ^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),526)=BPS("X")
"DATA",9002313.91,192,0)
528^^CLINICAL SIGNIFICANCE CODE^A/N^^^^1^A/N
"DATA",9002313.91,192,5)
FS^1
"DATA",9002313.91,192,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,192,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,192,25,0)
^9002313.9104^1^1^3031210^^^^
"DATA",9002313.91,192,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,192,30,0)
^9002313.9103^1^1^3031210^^^^
"DATA",9002313.91,192,30,1,0)
S ^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),525)=$G(BPS("X"))
"DATA",9002313.91,193,0)
529^^OTHER PHARMACY INDICATOR^A/N^^^^1^N
"DATA",9002313.91,193,5)
FT^1
"DATA",9002313.91,193,10,0)
^9002313.9101^1^1^3031212
"DATA",9002313.91,193,10,1,0)
S BPS("X")=""
"DATA",9002313.91,193,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,193,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,194,0)
530^^PREVIOUS DATE OF FILL^A/N^^^^8^N
"DATA",9002313.91,194,5)
FU^8
"DATA",9002313.91,194,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,194,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,194,25,0)
^^1^1^3031216^
"DATA",9002313.91,194,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X"))
"DATA",9002313.91,194,30,0)
^^1^1^3031216^
"DATA",9002313.91,194,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,5)=BPS("X")
"DATA",9002313.91,195,0)
531^^QUANTITY OF PREVIOUS FILL^N^^^^10^N
"DATA",9002313.91,195,5)
FV^8
"DATA",9002313.91,195,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,195,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,195,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,195,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,195,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,195,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,6)=BPS("X")
"DATA",9002313.91,196,0)
532^^DATABASE INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,196,5)
FW^1
"DATA",9002313.91,196,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,196,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,196,25,0)
^9002313.9104^1^1^3031210^^^
"DATA",9002313.91,196,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,196,30,0)
^9002313.9103^1^1^3031210^^^
"DATA",9002313.91,196,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,BPS(9002313.020101),0),U,7)=BPS("X")
"DATA",9002313.91,197,0)
533^^OTHER PRESCRIBER INDICATOR^A/N^^^^1^N
"DATA",9002313.91,197,5)
FX^1
"DATA",9002313.91,197,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,197,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,197,25,0)
^^1^1^3031212^
"DATA",9002313.91,197,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,197,30,0)
^^1^1^3031212^
"DATA",9002313.91,197,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,8)=BPS("X")
"DATA",9002313.91,199,0)
544^^DUR FREE TEXT MESSAGE^A/N^^^^30^A/N
"DATA",9002313.91,199,5)
FY^30
"DATA",9002313.91,199,10,0)
^9002313.9101^1^1^3101116^
"DATA",9002313.91,199,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,199,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,199,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,199,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,199,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,9)=BPS("X")
"DATA",9002313.91,200,0)
545^^NETWORK REIMBURSEMENT ID^A/N^^^^10^A/N
"DATA",9002313.91,200,5)
2F^10
"DATA",9002313.91,200,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,200,10,1,0)
S BPS("X")=""
"DATA",9002313.91,200,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,200,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,201,0)
546^^REJECTED FLD OCCURRENCE INDCTR^A/N^^^^2^N
"DATA",9002313.91,201,5)
4F^2
"DATA",9002313.91,201,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,201,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,201,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,201,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,201,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,201,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),511,DUR,0),U,2)=BPS("X")
"DATA",9002313.91,202,0)
547^^APPROVED MESSAGE CODE COUNT^A/N^^^^1^N
"DATA",9002313.91,202,5)
5F^1
"DATA",9002313.91,202,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,202,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,202,25,0)
^^1^1^3031205^
"DATA",9002313.91,202,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,202,30,0)
^^1^1^3031205^
"DATA",9002313.91,202,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),540),U,7)=BPS("X")
"DATA",9002313.91,203,0)
548^^APPROVED MESSAGE CODE^A/N^^^^3^A/N
"DATA",9002313.91,203,5)
6F^3
"DATA",9002313.91,203,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,203,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,203,25,0)
^9002313.9104^1^1^3031210^^^
"DATA",9002313.91,203,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,203,30,0)
^9002313.9103^1^1^3031210^^^
"DATA",9002313.91,203,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),548,0),B,4)=BPS("X")
"DATA",9002313.91,204,0)
549^^HELP DESK PHONE NUMBER QUAL^A/N^^^^2^A/N
"DATA",9002313.91,204,1)
HELP DESK TELEPHONE NUMBER QUALIFER
"DATA",9002313.91,204,5)
7F^2
"DATA",9002313.91,204,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,204,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,204,25,0)
^^1^1^3031210^
"DATA",9002313.91,204,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,204,30,0)
^^1^1^3031210^
"DATA",9002313.91,204,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),540),U,9)=BPS("X")
"DATA",9002313.91,205,0)
550^^HELP DESK TELEPHONE NUMBER^A/N^^^^18^A/N
"DATA",9002313.91,205,5)
8F^18
"DATA",9002313.91,205,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,205,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,205,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,205,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),18)
"DATA",9002313.91,205,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,205,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),540),U,10)=BPS("X")
"DATA",9002313.91,206,0)
551^^PREFERRED PRODUCT COUNT^A/N^^^^1^N
"DATA",9002313.91,206,5)
9F^1
"DATA",9002313.91,206,10,0)
^9002313.9101^1^1^3031216
"DATA",9002313.91,206,10,1,0)
S BPS("X")=""
"DATA",9002313.91,206,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,206,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,207,0)
552^^PREFERRED PRODUCT ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,207,5)
AP^2
"DATA",9002313.91,207,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,207,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,207,25,0)
^^1^1^3031216^
"DATA",9002313.91,207,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,207,30,0)
^^1^1^3031216^
"DATA",9002313.91,207,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,1)=BPS("X")
"DATA",9002313.91,208,0)
553^^PREFERRED PRODUCT ID^A/N^^^^19^A/N
"DATA",9002313.91,208,5)
AR^19
"DATA",9002313.91,208,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,208,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,208,25,0)
^^1^1^3031216^
"DATA",9002313.91,208,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,208,30,0)
^^1^1^3031216^
"DATA",9002313.91,208,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,2)=BPS("X")
"DATA",9002313.91,209,0)
554^^PREFERRED PRODUCT INCENTIVE^A/N^^^^8^D
"DATA",9002313.91,209,5)
AS^8
"DATA",9002313.91,209,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,209,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,209,25,0)
^^1^1^3031216^
"DATA",9002313.91,209,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,209,30,0)
^^1^1^3031216^
"DATA",9002313.91,209,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,3)=BPS("X")
"DATA",9002313.91,210,0)
555^^PREF PRODUCT COST SHARE INCNTV^A/N^^^^8^D
"DATA",9002313.91,210,5)
AT^8
"DATA",9002313.91,210,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,210,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,210,25,0)
^9002313.9104^1^1^3031216^^
"DATA",9002313.91,210,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,210,30,0)
^9002313.9103^1^1^3031216^^
"DATA",9002313.91,210,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,4)=BPS("X")
"DATA",9002313.91,211,0)
556^^PREFERRED PRODUCT DESCRIPTION^A/N^^^^40^A/N
"DATA",9002313.91,211,5)
AU^40
"DATA",9002313.91,211,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,211,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,211,25,0)
^^1^1^3031216^
"DATA",9002313.91,211,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,211,30,0)
^^1^1^3031216^
"DATA",9002313.91,211,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,5)=BPS("X")
"DATA",9002313.91,212,0)
557^^TAX EXEMPT INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,212,5)
AV^1
"DATA",9002313.91,212,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,212,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,212,25,0)
^^1^1^3031217^
"DATA",9002313.91,212,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,212,30,0)
^^1^1^3031217^
"DATA",9002313.91,212,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),550),U,7)
"DATA",9002313.91,213,0)
558^^FLAT SALES TAX AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,213,5)
AW^8
"DATA",9002313.91,213,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,213,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,213,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,213,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,213,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,213,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),550),U,8)=BPS("X")
"DATA",9002313.91,214,0)
559^^PERCENTAGE SALES TAX AMT PAID^A/N^^^^8^D
"DATA",9002313.91,214,5)
AX^8
"DATA",9002313.91,214,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,214,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,214,25,0)
^9002313.9104^1^1^3031212^^
"DATA",9002313.91,214,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,214,30,0)
^9002313.9103^1^1^3031212^^^
"DATA",9002313.91,214,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),550),U,9)=BPS("X")
"DATA",9002313.91,215,0)
560^^PERCENTAGE SALES TAX RATE PAID^A/N^^^^7^D
"DATA",9002313.91,215,5)
AY^8
"DATA",9002313.91,215,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,215,10,1,0)
S BPS("X")=""
"DATA",9002313.91,215,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,215,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),7)
"DATA",9002313.91,216,0)
561^^PERCENT SALES TAX BASIS PAID^A/N^^^^2^A/N
"DATA",9002313.91,216,5)
AZ^8
"DATA",9002313.91,216,10,0)
^9002313.9101^1^1^3031212
"DATA",9002313.91,216,10,1,0)
S BPS("X")=""
"DATA",9002313.91,216,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,216,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,217,0)
562^^PROFESSIONAL SERVICE FEE PAID^A/N^^^^8^D
"DATA",9002313.91,217,5)
J1^8
"DATA",9002313.91,217,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,217,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,217,25,0)
^^1^1^3031217^
"DATA",9002313.91,217,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,217,30,0)
^^1^1^3031217^
"DATA",9002313.91,217,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),560),U,2)=BPS("X")
"DATA",9002313.91,218,0)
563^^OTHER AMOUNT PAID COUNT^N^^^^1^N
"DATA",9002313.91,218,5)
J2^1
"DATA",9002313.91,218,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,218,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,218,25,0)
^^1^1^3031212^
"DATA",9002313.91,218,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,218,30,0)
^^1^1^3031212^
"DATA",9002313.91,218,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),563.01,DUR,0)),U,1)
"DATA",9002313.91,219,0)
564^^OTHER AMOUNT PAID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,219,5)
J3^2
"DATA",9002313.91,219,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,219,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,219,25,0)
^^1^1^3031212^
"DATA",9002313.91,219,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,219,30,0)
^^1^1^3031212^
"DATA",9002313.91,219,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),563.01,DUR,1),U,1)=BPS("X")
"DATA",9002313.91,220,0)
565^^OTHER AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,220,5)
J4^8
"DATA",9002313.91,220,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,220,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,220,25,0)
^9002313.9104^1^1^3031212^^
"DATA",9002313.91,220,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,220,30,0)
^9002313.9103^1^1^3031212^^
"DATA",9002313.91,220,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),563.01,DUR,1),U,2)=BPS("X")
"DATA",9002313.91,221,0)
566^^OTHER PAYER AMOUNT RECOGNIZED^A/N^^^^8^D
"DATA",9002313.91,221,5)
J5^8
"DATA",9002313.91,221,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,221,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,221,25,0)
^^1^1^3090304^
"DATA",9002313.91,221,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,221,30,0)
^^1^1^3090304^
"DATA",9002313.91,221,30,1,0)
D SET566^BPSFLD01
"DATA",9002313.91,222,0)
567^^DUR/PPS RESPONSE CODE COUNTER^N^^^^1^N
"DATA",9002313.91,222,5)
J6^1
"DATA",9002313.91,222,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,222,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,222,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,222,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,222,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,222,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,1)=BPS("X")
"DATA",9002313.91,223,0)
568^^PAYER ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,223,5)
J7^2
"DATA",9002313.91,223,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,223,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,223,25,0)
^^1^1^3031212^
"DATA",9002313.91,223,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,223,30,0)
^^1^1^3031212^
"DATA",9002313.91,223,30,1,0)
S $P(^BPSR(BPS(9002313.02),560),U,8)
"DATA",9002313.91,224,0)
569^^PAYER ID^A/N^^^^10^A/N
"DATA",9002313.91,224,5)
J8^10
"DATA",9002313.91,224,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,224,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,224,25,0)
^9002313.9104^1^1^3031212^^
"DATA",9002313.91,224,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,224,30,0)
^9002313.9103^1^1^3031212^^
"DATA",9002313.91,224,30,1,0)
S $P(^BPSR(BPS(9002313.02),560),U,9)=BPS("X")
"DATA",9002313.91,225,0)
600^^UNIT OF MEASURE^A/N^^^^2^A/N
"DATA",9002313.91,225,5)
28^2
"DATA",9002313.91,225,10,0)
^9002313.9101^1^1^3070625
"DATA",9002313.91,225,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Unit of Measure"))
"DATA",9002313.91,225,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,225,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,225,25,0)
^9002313.9104^1^1^3070620^
"DATA",9002313.91,225,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,225,30,0)
^9002313.9103^1^1^3070620^
"DATA",9002313.91,225,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),600),U,1)=""
"DATA",9002313.91,240,0)
478^^OTHER AMT CLAIMED SBMTTD COUNT^N^^^^1^N
"DATA",9002313.91,240,1)
OTHER AMOUNT CLAIMED SUBMITTED COUNT
"DATA",9002313.91,240,5)
H7^1
"DATA",9002313.91,240,10,0)
^9002313.9101^1^1^3101006^^^
"DATA",9002313.91,240,10,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,240,20,0)
^9002313.9102^1^1^3101006^^^
"DATA",9002313.91,240,20,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,240,25,0)
^9002313.9104^1^1^3101006^^
"DATA",9002313.91,240,25,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,240,30,0)
^9002313.9103^1^1^3101006^^
"DATA",9002313.91,240,30,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,241,0)
479^^OTHER AMT CLAIMED SUBM QLFR^A/N^^^^2^A/N
"DATA",9002313.91,241,1)
OTHER AMOUNT CLAIMED SUBMITTED QUALIFIER
"DATA",9002313.91,241,5)
H8^2
"DATA",9002313.91,241,10,0)
^9002313.9101^1^1^3101006^^^
"DATA",9002313.91,241,10,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,241,20,0)
^9002313.9102^1^1^3101006^^^
"DATA",9002313.91,241,20,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,241,25,0)
^9002313.9104^1^1^3101006^^
"DATA",9002313.91,241,25,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,241,30,0)
^9002313.9103^1^1^3101006^^
"DATA",9002313.91,241,30,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,242,0)
463^^INTERMEDIARY AUTH TYPE ID^N^^^^2^N
"DATA",9002313.91,242,1)
INTERMEDIARY AUTHORIZATION TYPE ID
"DATA",9002313.91,242,5)
EW^2
"DATA",9002313.91,242,10,0)
^^2^2^3110727^
"DATA",9002313.91,242,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Intermediary Auth Type ID"))
"DATA",9002313.91,242,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,242,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,242,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,242,25,0)
^9002313.9104^1^1^3030823^^^^
"DATA",9002313.91,242,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,242,30,0)
^9002313.9103^1^1^3030823^^
"DATA",9002313.91,242,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,3)=BPS("X")
"DATA",9002313.91,265,0)
451^^COMPOUND DISP UNIT FORM INDCTR^N^^^^1^N
"DATA",9002313.91,265,1)
COMPOUND DISPENSING UNIT FORM INDICATOR
"DATA",9002313.91,265,5)
EG^1
"DATA",9002313.91,265,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,265,10,1,0)
S BPS("X")=""
"DATA",9002313.91,265,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,265,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,265,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,265,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,266,0)
450^^COMPOUND DOSAGE FORM DESC CODE^A/N^^^^15^A/N
"DATA",9002313.91,266,1)
COMPOUND DOSAGE FORM DESCRIPTION CODE
"DATA",9002313.91,266,5)
EF^15
"DATA",9002313.91,266,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,266,10,1,0)
S BPS("X")=""
"DATA",9002313.91,266,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,266,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,266,25,0)
^9002313.9104^1^1^3040107^^^^
"DATA",9002313.91,266,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,266,30,0)
^9002313.9103^1^1^3040107^^^^
"DATA",9002313.91,266,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,10)=BPS("X")
"DATA",9002313.91,267,0)
490^^COMP INGRED BASIS COST DETERM^A/N^^^^2^A/N
"DATA",9002313.91,267,1)
COMPOUND INGREDIENT BASIS OF COST DETERMINATION
"DATA",9002313.91,267,5)
UE^2
"DATA",9002313.91,267,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,267,10,1,0)
S BPS("X")=""
"DATA",9002313.91,267,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,267,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,267,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,267,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,268,0)
447^^COMPOUND INGREDIENT COMP COUNT^N^^^^2^N
"DATA",9002313.91,268,1)
COMPOUND INGREDIENT COMPONENT COUNT
"DATA",9002313.91,268,5)
EC^2
"DATA",9002313.91,268,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,268,10,1,0)
S BPS("X")=""
"DATA",9002313.91,268,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,268,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,268,25,0)
^9002313.9104^1^1^3040107^^^^
"DATA",9002313.91,268,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,268,30,0)
^9002313.9103^1^1^3040107^^^^
"DATA",9002313.91,268,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,7)=BPS("X")
"DATA",9002313.91,269,0)
449^^COMPOUND INGREDIENT DRUG COST^N^^^^8^D
"DATA",9002313.91,269,5)
EE^8
"DATA",9002313.91,269,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,269,10,1,0)
S BPS("X")=""
"DATA",9002313.91,269,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,269,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,269,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,269,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,271,0)
489^^COMPOUND PRODUCT ID^A/N^^^^19^A/N
"DATA",9002313.91,271,5)
TE^19
"DATA",9002313.91,271,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,271,10,1,0)
S BPS("X")=""
"DATA",9002313.91,271,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,271,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,271,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,271,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,272,0)
488^^COMPOUND PRODUCT ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,272,5)
RE^2
"DATA",9002313.91,272,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,272,10,1,0)
S BPS("X")=""
"DATA",9002313.91,272,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,272,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,272,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,272,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,273,0)
452^^COMPOUND ROUTE OF ADMIN^N^^^^2^N
"DATA",9002313.91,273,5)
EH^2
"DATA",9002313.91,273,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,273,10,1,0)
S BPS("X")=""
"DATA",9002313.91,273,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,273,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,273,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,273,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,308,0)
448^^COMPOUND INGREDIENT QUANTITY^N^^^^10^N
"DATA",9002313.91,308,5)
ED^10
"DATA",9002313.91,308,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,308,10,1,0)
S BPS("X")=""
"DATA",9002313.91,308,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,308,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,308,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,308,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,324,0)
494^^MEASUREMENT DATE^A/N^^^^8^N
"DATA",9002313.91,324,5)
ZE^8
"DATA",9002313.91,324,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,324,10,1,0)
S BPS("X")=""
"DATA",9002313.91,324,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,324,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,324,25,0)
^9002313.9104^1^1^3040224^
"DATA",9002313.91,324,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,325,0)
496^^MEASUREMENT DIMENSION^A/N^^^^2^A/N
"DATA",9002313.91,325,5)
H2^2
"DATA",9002313.91,325,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,325,10,1,0)
S BPS("X")=""
"DATA",9002313.91,325,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,325,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,325,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,325,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,326,0)
495^^MEASUREMENT TIME^N^^^^4^N
"DATA",9002313.91,326,5)
H1^4
"DATA",9002313.91,326,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,326,10,1,0)
S BPS("X")=""
"DATA",9002313.91,326,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,326,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,326,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,326,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,327,0)
497^^MEASUREMENT UNIT^A/N^^^^2^A/N
"DATA",9002313.91,327,5)
H3^2
"DATA",9002313.91,327,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,327,10,1,0)
S BPS("X")=""
"DATA",9002313.91,327,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,327,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,327,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,327,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,328,0)
499^^MEASUREMENT VALUE^A/N^^^^15^A/N
"DATA",9002313.91,328,5)
H4^15
"DATA",9002313.91,328,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,328,10,1,0)
S BPS("X")=""
"DATA",9002313.91,328,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,328,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,328,25,0)
^9002313.9104^1^1^3040224^^^
"DATA",9002313.91,328,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,329,0)
990^^OTHER PAYER BIN NUMBER^N^^^^6^N
"DATA",9002313.91,329,5)
MG^6
"DATA",9002313.91,329,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,329,10,1,0)
S BPS("X")=""
"DATA",9002313.91,329,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,329,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,329,30,0)
^9002313.9103^1^1^3101101^
"DATA",9002313.91,329,30,1,0)
S $P(^BPSC(BPS(9002313.02),980),U,10)=""
"DATA",9002313.91,330,0)
991^^OTHER PAYER PROC CONTROL NUM^A/N^^^^10^A/N
"DATA",9002313.91,330,1)
OTHER PAYER PROCESSOR CONTROL NUMBER
"DATA",9002313.91,330,5)
MH^10
"DATA",9002313.91,330,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,330,10,1,0)
S BPS("X")=""
"DATA",9002313.91,330,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,330,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,330,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,330,30,1,0)
S $P(^BPSC(BPS(9002313.02),990),U,1)=""
"DATA",9002313.91,331,0)
356^^OTHER PAYER CARDHOLDER ID^A/N^^^^20^A/N
"DATA",9002313.91,331,5)
NU^20
"DATA",9002313.91,331,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,331,10,1,0)
S BPS("X")=""
"DATA",9002313.91,331,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,331,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,331,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,331,30,1,0)
S $P(^BPSC(BPS(9002313.02),350),U,6)=""
"DATA",9002313.91,332,0)
992^^OTHER PAYER GROUP ID^A/N^^^^15^A/N
"DATA",9002313.91,332,5)
MJ^15
"DATA",9002313.91,332,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,332,10,1,0)
S BPS("X")=""
"DATA",9002313.91,332,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,332,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,332,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,332,30,1,0)
S $P(^BPSC(BPS(9002313.02),990),U,2)=""
"DATA",9002313.91,333,0)
359^^MEDIGAP ID^A/N^^^^20^A/N
"DATA",9002313.91,333,5)
2A^20
"DATA",9002313.91,333,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,333,10,1,0)
S BPS("X")=""
"DATA",9002313.91,333,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,333,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,333,30,0)
^9002313.9103^1^1^3100923^^
"DATA",9002313.91,333,30,1,0)
S $P(^BPSC(BPS(9002313.02),350),U,9)=""
"DATA",9002313.91,334,0)
360^^MEDICAID INDICATOR^N^^^^2^A/N
"DATA",9002313.91,334,5)
2B^2
"DATA",9002313.91,334,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,334,10,1,0)
S BPS("X")=""
"DATA",9002313.91,334,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,334,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,334,30,0)
^9002313.9103^1^1^3101101^
"DATA",9002313.91,334,30,1,0)
S $P(^BPSC(BPS(9002313.02),350),U,10)=""
"DATA",9002313.91,335,0)
361^^PROVIDER ACCEPT ASSGNMT INDCTR^A/N^^^^1^A/N
"DATA",9002313.91,335,1)
PROVIDER ACCEPT ASSIGNMENT INDICATOR
"DATA",9002313.91,335,5)
2D^1
"DATA",9002313.91,335,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,335,10,1,0)
S BPS("X")="Y"
"DATA",9002313.91,335,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,335,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,335,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,335,30,1,0)
S $P(^BPSC(BPS(9002313.02),360),U,1)=$G(BPS("X"))
"DATA",9002313.91,336,0)
997^^CMS PART D DEFND QLFD FACILITY^A/N^^^^1^A/N
"DATA",9002313.91,336,1)
CMS PART D DEFINED QUALIFIED FACILITY
"DATA",9002313.91,336,5)
G2^1
"DATA",9002313.91,336,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,336,10,1,0)
S BPS("X")="N"
"DATA",9002313.91,336,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,336,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,336,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,336,30,1,0)
S $P(^BPSC(BPS(9002313.02),990),U,7)=$G(BPS("X"))
"DATA",9002313.91,337,0)
115^^MEDICAID ID NUMBER^A/N^^^^20^A/N
"DATA",9002313.91,337,5)
N5^20
"DATA",9002313.91,337,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,337,10,1,0)
S BPS("X")=""
"DATA",9002313.91,337,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,337,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,337,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,337,30,1,0)
S $P(^BPSC(BPS(9002313.02),110),U,5)=""
"DATA",9002313.91,338,0)
116^^MEDICAID AGENCY NUMBER^A/N^^^^15^A/N
"DATA",9002313.91,338,5)
N6^15
"DATA",9002313.91,338,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,338,10,1,0)
S BPS("X")=""
"DATA",9002313.91,338,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,338,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,338,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,338,30,1,0)
S $P(^BPSC(BPS(9002313.02),110),U,6)=""
"DATA",9002313.91,339,0)
384^^PATIENT RESIDENCE^N^^^^2^N
"DATA",9002313.91,339,5)
4X^2
"DATA",9002313.91,339,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,339,10,1,0)
S BPS("X")=$G(BPS("Patient","Patient Residence"))
"DATA",9002313.91,339,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,339,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,339,30,0)
^9002313.9103^1^1^3101007^^^^
"DATA",9002313.91,339,30,1,0)
S $P(^BPSC(BPS(9002313.02),380),U,4)=$G(BPS("X"))
"DATA",9002313.91,340,0)
354^^SUBMISSION CLARIF CODE COUNT^N^^^^1^N
"DATA",9002313.91,340,1)
SUBMISSION CLARIFICATION CODE COUNT
"DATA",9002313.91,340,5)
NX^2
"DATA",9002313.91,340,10,0)
^9002313.9101^1^1^3101006^^
"DATA",9002313.91,340,10,1,0)
; fields 354 & 420 handled by FLD420^BPSOSSG (see SET CODE in field 420)
"DATA",9002313.91,340,20,0)
^9002313.9102^1^1^3101006^^
"DATA",9002313.91,340,20,1,0)
; fields 354 & 420 handled by FLD420^BPSOSSG (see SET CODE in field 420)
"DATA",9002313.91,340,25,0)
^9002313.9104^1^1^3101006^^
"DATA",9002313.91,340,25,1,0)
; fields 354 & 420 handled by FLD420^BPSOSSG (see SET CODE in field 420)
"DATA",9002313.91,340,30,0)
^9002313.9103^1^1^3101006^^^^
"DATA",9002313.91,340,30,1,0)
; fields 354 & 420 handled by FLD420^BPSOSSG (see SET CODE in field 420)
"DATA",9002313.91,341,0)
357^^DELAY REASON CODE^N^^^^2^N
"DATA",9002313.91,341,5)
NV^2
"DATA",9002313.91,341,10,0)
^9002313.9101^1^1^3101007^^
"DATA",9002313.91,341,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Delay Reason Code"))
"DATA",9002313.91,341,20,0)
^9002313.9102^1^1^3101012^
"DATA",9002313.91,341,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,341,30,0)
^9002313.9103^1^1^3101007^^
"DATA",9002313.91,341,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),350),U,7)=$S($G(BPS("X"))="NV00":"",1:$G(BPS("X")))
"DATA",9002313.91,342,0)
880^^TRANSACTION REFERENCE NUMBER^A/N^^^^10^A/N
"DATA",9002313.91,342,5)
K5^10
"DATA",9002313.91,342,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,342,10,1,0)
S BPS("X")=""
"DATA",9002313.91,342,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,342,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,342,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,342,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),870),U,10)=""
"DATA",9002313.91,343,0)
391^^PATIENT ASSIGNMENT INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,343,1)
PATIENT ASSIGNMENT INDICATOR (DIRECT MEMBER REIMBURSEMENT INDICATOR)
"DATA",9002313.91,343,5)
MT^1
"DATA",9002313.91,343,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,343,10,1,0)
S BPS("X")="Y"
"DATA",9002313.91,343,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,343,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,343,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,343,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),390),U,1)=$G(BPS("X"))
"DATA",9002313.91,344,0)
995^^ROUTE OF ADMINISTRATION^A/N^^^^11^A/N
"DATA",9002313.91,344,5)
E2^1
"DATA",9002313.91,344,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,344,10,1,0)
S BPS("X")=""
"DATA",9002313.91,344,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,344,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,344,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,344,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),990),U,5)=$G(BPS("X"))
"DATA",9002313.91,345,0)
996^^COMPOUND TYPE^A/N^^^^2^A/N
"DATA",9002313.91,345,5)
G1^2
"DATA",9002313.91,345,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,345,10,1,0)
S BPS("X")=""
"DATA",9002313.91,345,20,0)
^9002313.9102^1^1^3101206^
"DATA",9002313.91,345,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,345,30,0)
^^1^1^3121128
"DATA",9002313.91,345,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),990),U,6)=""
"DATA",9002313.91,346,0)
114^^MEDICAID SUBROGATION ICN/TCN^A/N^^^^20^A/N
"DATA",9002313.91,346,1)
MEDICAID SUBROGATION INTERNAL CONTROL NUMBER/TRANSACTION CONTROL NUMBER (ICN/TCN)
"DATA",9002313.91,346,5)
N4^20
"DATA",9002313.91,346,10,0)
^9002313.9101^1^1^3101110^
"DATA",9002313.91,346,10,1,0)
S BPS("X")=""
"DATA",9002313.91,346,20,0)
^9002313.9102^1^1^3101110^
"DATA",9002313.91,346,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,346,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,346,30,1,0)
S $P(^BPSC(BPS(9002313.02),110),U,4)=""
"DATA",9002313.91,347,0)
147^^PHARMACY SERVICE TYPE^N^^^^2^N
"DATA",9002313.91,347,5)
U7^2
"DATA",9002313.91,347,10,0)
^9002313.9101^1^1^3101007^^
"DATA",9002313.91,347,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Pharmacy Service Type"))
"DATA",9002313.91,347,20,0)
^9002313.9102^1^1^3101007^^
"DATA",9002313.91,347,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,347,30,0)
^9002313.9103^1^1^3101007^^^^
"DATA",9002313.91,347,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),140),U,7)=$G(BPS("X"))
"DATA",9002313.91,348,0)
364^^PRESCRIBER FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,348,5)
2J^12
"DATA",9002313.91,348,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,348,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber First Name"))
"DATA",9002313.91,348,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,348,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,348,30,0)
^9002313.9103^1^1^3101101^^^
"DATA",9002313.91,348,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,4)=$G(BPS("X"))
"DATA",9002313.91,349,0)
365^^PRESCRIBER STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,349,5)
2K^30
"DATA",9002313.91,349,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,349,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Street Address"))
"DATA",9002313.91,349,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,349,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,349,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,349,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,5)=$G(BPS("X"))
"DATA",9002313.91,350,0)
366^^PRESCRIBER CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,350,5)
2M^20
"DATA",9002313.91,350,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,350,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber City Address"))
"DATA",9002313.91,350,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,350,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,350,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,350,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,6)=$G(BPS("X"))
"DATA",9002313.91,351,0)
367^^PRESCRIBER STATE/PROV ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,351,1)
PRESCRIBER STATE/PROVINCE ADDRESS
"DATA",9002313.91,351,5)
2N^2
"DATA",9002313.91,351,10,0)
^9002313.9101^1^1^3101029^^
"DATA",9002313.91,351,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber State/Province Address"))
"DATA",9002313.91,351,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,351,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,351,30,0)
^9002313.9103^1^1^3101101^^^
"DATA",9002313.91,351,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,7)=$G(BPS("X"))
"DATA",9002313.91,352,0)
368^^PRESCRIBER ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,352,5)
2P^2
"DATA",9002313.91,352,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,352,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Zip/Postal Zone"))
"DATA",9002313.91,352,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,352,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,352,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,352,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,8)=$G(BPS("X"))
"DATA",9002313.91,353,0)
993^^INTERNAL CONTROL NUMBER^A/N^^^^30^A/N
"DATA",9002313.91,353,5)
A7^30
"DATA",9002313.91,353,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,353,10,1,0)
S BPS("X")=""
"DATA",9002313.91,353,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,353,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,353,30,0)
^9002313.9103^1^1^3101029^
"DATA",9002313.91,353,30,1,0)
; This field currently not implemented
"DATA",9002313.91,354,0)
392^^BENEFIT STAGE COUNT^N^^^^1^N
"DATA",9002313.91,354,5)
MU^1
"DATA",9002313.91,354,10,0)
^^1^1^3110727^
"DATA",9002313.91,354,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,354,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,354,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,354,30,0)
^^1^1^3110727^
"DATA",9002313.91,354,30,1,0)
D SET392^BPSFLD01
"DATA",9002313.91,355,0)
393^^BENEFIT STAGE QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,355,5)
MV^2
"DATA",9002313.91,355,10,0)
^^1^1^3110727^
"DATA",9002313.91,355,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,355,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,355,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,355,30,0)
^^1^1^3110727^
"DATA",9002313.91,355,30,1,0)
D SET393^BPSFLD01
"DATA",9002313.91,356,0)
394^^BENEFIT STAGE AMOUNT^N^^^^8^D
"DATA",9002313.91,356,5)
MW^8
"DATA",9002313.91,356,10,0)
^^1^1^3110727^
"DATA",9002313.91,356,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,356,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,356,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,356,30,0)
^^1^1^3110727^
"DATA",9002313.91,356,30,1,0)
D SET394^BPSFLD01
"DATA",9002313.91,357,0)
117^^BILLING ENTITY TYPE INDICATOR^N^^^^2^N
"DATA",9002313.91,357,5)
TR^2
"DATA",9002313.91,357,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,357,10,1,0)
S BPS("X")=""
"DATA",9002313.91,357,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,357,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,357,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,357,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,7)=""
"DATA",9002313.91,358,0)
118^^PAY TO QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,358,5)
TS^2
"DATA",9002313.91,358,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,358,10,1,0)
S BPS("X")=""
"DATA",9002313.91,358,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,358,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,358,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,358,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,8)=""
"DATA",9002313.91,359,0)
119^^PAY TO ID^A/N^^^^15^A/N
"DATA",9002313.91,359,5)
TT^15
"DATA",9002313.91,359,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,359,10,1,0)
S BPS("X")=""
"DATA",9002313.91,359,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,359,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,359,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,359,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,9)=""
"DATA",9002313.91,360,0)
120^^PAY TO NAME^A/N^^^^20^A/N
"DATA",9002313.91,360,5)
TU^20
"DATA",9002313.91,360,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,360,10,1,0)
S BPS("X")=""
"DATA",9002313.91,360,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,360,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,360,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,360,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,10)=""
"DATA",9002313.91,361,0)
121^^PAY TO STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,361,5)
TV^30
"DATA",9002313.91,361,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,361,10,1,0)
S BPS("X")=""
"DATA",9002313.91,361,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,361,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,361,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,361,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,1)=""
"DATA",9002313.91,362,0)
122^^PAY TO CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,362,5)
TW^20
"DATA",9002313.91,362,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,362,10,1,0)
S BPS("X")=""
"DATA",9002313.91,362,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,362,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,362,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,362,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,2)=""
"DATA",9002313.91,363,0)
124^^PAY TO ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,363,5)
TY^15
"DATA",9002313.91,363,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,363,10,1,0)
S BPS("X")=""
"DATA",9002313.91,363,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,363,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,363,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,363,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,4)=""
"DATA",9002313.91,364,0)
125^^GENERIC EQUIV PROD ID QLFR^A/N^^^^2^A/N
"DATA",9002313.91,364,1)
GENERIC EQUIVALENT PRODUCT ID QUALIFIER
"DATA",9002313.91,364,5)
TZ^2
"DATA",9002313.91,364,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,364,10,1,0)
S BPS("X")=""
"DATA",9002313.91,364,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,364,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,364,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,364,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,5)=""
"DATA",9002313.91,365,0)
126^^GENERIC EQUIVALENT PRODUCT ID^A/N^^^^19^A/N
"DATA",9002313.91,365,5)
UA^19
"DATA",9002313.91,365,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,365,10,1,0)
S BPS("X")=""
"DATA",9002313.91,365,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,365,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,365,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,365,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,6)=""
"DATA",9002313.91,366,0)
113^^MEDICAID PAID AMOUNT^N^^^^8^D
"DATA",9002313.91,366,5)
N3^8
"DATA",9002313.91,366,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,366,10,1,0)
S BPS("X")=""
"DATA",9002313.91,366,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,366,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,366,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,366,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,3)=""
"DATA",9002313.91,367,0)
362^^COMPOUND INGRED MOD CODE CNT^N^^^^2^N
"DATA",9002313.91,367,1)
COMPOUND INGREDIENT MODIFIER CODE COUNT
"DATA",9002313.91,367,5)
2G^2
"DATA",9002313.91,367,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,367,10,1,0)
S BPS("X")=""
"DATA",9002313.91,367,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,367,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,367,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,367,30,1,0)
; This field currently not implemented
"DATA",9002313.91,368,0)
363^^COMPOUND INGRED MODIFIER CODE^A/N^^^^2^A/N
"DATA",9002313.91,368,1)
COMPOUND INGREDIENT MODIFIER CODE
"DATA",9002313.91,368,5)
2H^2
"DATA",9002313.91,368,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,368,10,1,0)
S BPS("X")=""
"DATA",9002313.91,368,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,368,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,368,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,368,30,1,0)
; This field currently not implemented
"DATA",9002313.91,369,0)
369^^ADDITIONAL DCMNTN TYPE ID^A/N^^^^3^A/N
"DATA",9002313.91,369,1)
ADDITIONAL DOCUMENTATION TYPE ID
"DATA",9002313.91,369,5)
2Q^3
"DATA",9002313.91,369,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,369,10,1,0)
S BPS("X")=""
"DATA",9002313.91,369,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,369,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,369,30,0)
^9002313.9103^1^1^3101206^^
"DATA",9002313.91,369,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,9)=""
"DATA",9002313.91,370,0)
370^^LENGTH OF NEED^N^^^^3^N
"DATA",9002313.91,370,5)
2R^3
"DATA",9002313.91,370,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,370,10,1,0)
S BPS("X")=""
"DATA",9002313.91,370,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,370,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,370,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,370,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,10)=""
"DATA",9002313.91,371,0)
371^^LENGTH OF NEED QUALIFIER^N^^^^2^N
"DATA",9002313.91,371,5)
2S^3
"DATA",9002313.91,371,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,371,10,1,0)
S BPS("X")=""
"DATA",9002313.91,371,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,371,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,371,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,371,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,1)=""
"DATA",9002313.91,372,0)
372^^PRESCRIBER/SUPPLIER DT SIGNED^N^^^^8^N
"DATA",9002313.91,372,1)
PRESCRIBER/SUPPLIER DATE SIGNED
"DATA",9002313.91,372,5)
2T^9
"DATA",9002313.91,372,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,372,10,1,0)
S BPS("X")=""
"DATA",9002313.91,372,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,372,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,372,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,372,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,2)=""
"DATA",9002313.91,373,0)
373^^REQUEST STATUS^A/N^^^^1^A/N
"DATA",9002313.91,373,5)
2U^1
"DATA",9002313.91,373,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,373,10,1,0)
S BPS("X")=""
"DATA",9002313.91,373,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,373,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,373,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,373,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,3)=""
"DATA",9002313.91,374,0)
374^^REQUEST PERIOD BEGIN DATE^N^^^^8^N
"DATA",9002313.91,374,5)
2V^8
"DATA",9002313.91,374,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,374,10,1,0)
S BPS("X")=""
"DATA",9002313.91,374,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,374,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,374,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,374,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,4)=""
"DATA",9002313.91,375,0)
375^^REQ PERIOD RECERT/REVISED DT^N^^^^8^N
"DATA",9002313.91,375,1)
REQUEST PERIOD RECERT/REVISED DATE
"DATA",9002313.91,375,5)
2W^8
"DATA",9002313.91,375,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,375,10,1,0)
S BPS("X")=""
"DATA",9002313.91,375,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,375,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,375,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,375,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,5)=""
"DATA",9002313.91,376,0)
376^^SUPPORTING DOCUMENTATION^A/N^^^^65^A/N
"DATA",9002313.91,376,5)
2X^65
"DATA",9002313.91,376,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,376,10,1,0)
S BPS("X")=""
"DATA",9002313.91,376,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,376,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),65)
"DATA",9002313.91,376,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,376,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,6)=""
"DATA",9002313.91,377,0)
377^^QUESTION NUMBER/LETTER COUNT^A/N^^^^2^N
"DATA",9002313.91,377,5)
2Z^65
"DATA",9002313.91,377,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,377,10,1,0)
S BPS("X")=""
"DATA",9002313.91,377,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,377,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,378,0)
378^^QUESTION NUMBER/LETTER^A/N^^^^3^A/N
"DATA",9002313.91,378,5)
4B^3
"DATA",9002313.91,378,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,378,10,1,0)
S BPS("X")=""
"DATA",9002313.91,378,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,378,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,378,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,378,30,1,0)
; This field currently not implemented
"DATA",9002313.91,379,0)
379^^QUESTION PERCENT RESPONSE^N^^^^5^N
"DATA",9002313.91,379,5)
4D^5
"DATA",9002313.91,379,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,379,10,1,0)
S BPS("X")=""
"DATA",9002313.91,379,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,379,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),5)
"DATA",9002313.91,379,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,379,30,1,0)
; This field currently not implemented
"DATA",9002313.91,380,0)
380^^QUESTION DATE RESPONSE^N^^^^8^N
"DATA",9002313.91,380,5)
4G^8
"DATA",9002313.91,380,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,380,10,1,0)
S BPS("X")=""
"DATA",9002313.91,380,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,380,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,380,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,380,30,1,0)
; This field currently not implemented
"DATA",9002313.91,381,0)
381^^QUESTION DOLLAR AMT RESPONSE^N^^^^11^D
"DATA",9002313.91,381,1)
QUESTION DOLLAR AMOUNT RESPONSE
"DATA",9002313.91,381,5)
4H^9
"DATA",9002313.91,381,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,381,10,1,0)
S BPS("X")=""
"DATA",9002313.91,381,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,381,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,381,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,381,30,1,0)
; This field currently not implemented
"DATA",9002313.91,382,0)
382^^QUESTION NUMERIC RESPONSE^N^^^^11^N
"DATA",9002313.91,382,5)
4J^11
"DATA",9002313.91,382,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,382,10,1,0)
S BPS("X")=""
"DATA",9002313.91,382,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,382,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,382,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,382,30,1,0)
; This field currently not implemented
"DATA",9002313.91,383,0)
383^^QUESTION ALPHANUMERIC RESPONSE^A/N^^^^30^A/N
"DATA",9002313.91,383,5)
4K^30
"DATA",9002313.91,383,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,383,10,1,0)
S BPS("X")=""
"DATA",9002313.91,383,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,383,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,383,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,383,30,1,0)
; This field currently not implemented
"DATA",9002313.91,384,0)
385^^FACILITY NAME^A/N^^^^30^A/N
"DATA",9002313.91,384,5)
3Q^30
"DATA",9002313.91,384,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,384,10,1,0)
S BPS("X")=""
"DATA",9002313.91,384,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,384,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,384,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,384,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,5)=""
"DATA",9002313.91,385,0)
386^^FACILITY STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,385,5)
3U^30
"DATA",9002313.91,385,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,385,10,1,0)
S BPS("X")=""
"DATA",9002313.91,385,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,385,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,385,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,385,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,6)=""
"DATA",9002313.91,386,0)
387^^FACILITY STATE/PROV ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,386,1)
FACILITY STATE/PROVINCE ADDRESS
"DATA",9002313.91,386,5)
3V^2
"DATA",9002313.91,386,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,386,10,1,0)
S BPS("X")=""
"DATA",9002313.91,386,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,386,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,386,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,386,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,7)=""
"DATA",9002313.91,387,0)
388^^FACILITY CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,387,5)
5J^20
"DATA",9002313.91,387,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,387,10,1,0)
S BPS("X")=""
"DATA",9002313.91,387,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,387,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,387,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,387,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,8)=""
"DATA",9002313.91,388,0)
389^^FACILITY ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,388,5)
6D^16
"DATA",9002313.91,388,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,388,10,1,0)
S BPS("X")=""
"DATA",9002313.91,388,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,388,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,388,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,388,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,9)=""
"DATA",9002313.91,389,0)
390^^NARRATIVE MESSAGE^A/N^^^^200^A/N
"DATA",9002313.91,389,5)
BM^200
"DATA",9002313.91,389,10,0)
^9002313.9101^1^1^3101110^
"DATA",9002313.91,389,10,1,0)
S BPS("X")=""
"DATA",9002313.91,389,20,0)
^9002313.9102^1^1^3101110^
"DATA",9002313.91,389,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),200)
"DATA",9002313.91,389,30,0)
^9002313.9103^1^1^3101110^^
"DATA",9002313.91,389,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),389),U,2)=""
"DATA",9002313.91,390,0)
130^^ADDITIONAL MESSAGE INFO COUNT^N^^^^2^N
"DATA",9002313.91,390,5)
UF^2
"DATA",9002313.91,390,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,390,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,391,0)
132^^ADDITIONAL MSG INFO QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,391,5)
UH^2
"DATA",9002313.91,391,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,391,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,392,0)
131^^ADDITIONAL MSG INFO CONTINUITY^N^^^^1^A/N
"DATA",9002313.91,392,5)
UG^2
"DATA",9002313.91,392,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,392,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,393,0)
987^^URL^A/N^^^^255^A/N
"DATA",9002313.91,393,5)
MA^255
"DATA",9002313.91,393,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,393,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,394,0)
571^^AMOUNT ATTRIB TO PROCESSOR FEE^N^^^^8^N
"DATA",9002313.91,394,5)
NZ^8
"DATA",9002313.91,394,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,394,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,395,0)
575^^PATIENT SALES TAX^N^^^^8^N
"DATA",9002313.91,395,5)
EQ^8
"DATA",9002313.91,395,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,395,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,396,0)
574^^PLAN SALES TAX AMOUNT^N^^^^8^N
"DATA",9002313.91,396,5)
2Y^8
"DATA",9002313.91,396,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,396,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,397,0)
572^^AMOUNT OF COINSURANCE^N^^^^8^N
"DATA",9002313.91,397,5)
4U^8
"DATA",9002313.91,397,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,397,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,398,0)
573^^BASIS OF CALC - COINSURANCE^A/N^^^^2^A/N
"DATA",9002313.91,398,5)
4V^2
"DATA",9002313.91,398,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,398,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,399,0)
577^^ESTIMATED GENERIC SAVINGS^N^^^^8^N
"DATA",9002313.91,399,5)
G3^8
"DATA",9002313.91,399,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,399,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,400,0)
128^^SPENDING ACCOUNT AMT REMAINING^N^^^^8^N
"DATA",9002313.91,400,5)
UC^8
"DATA",9002313.91,400,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,400,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,401,0)
129^^HEALTH PLAN-FUNDED ASSIST AMT^N^^^^8^N
"DATA",9002313.91,401,5)
UD^8
"DATA",9002313.91,401,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,401,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,402,0)
133^^AMT ATTR TO PROV NETWORK SLCTN^N^^^^8^N
"DATA",9002313.91,402,5)
UJ^8
"DATA",9002313.91,402,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,402,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,403,0)
134^^AMT ATTR TO PROD SEL BRND DRUG^N^^^^8^N
"DATA",9002313.91,403,5)
UK^8
"DATA",9002313.91,403,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,403,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,404,0)
135^^AMT ATTR NON-PREF FRMLRY SEL^N^^^^8^N
"DATA",9002313.91,404,5)
UM^8
"DATA",9002313.91,404,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,404,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,405,0)
136^^AMT ATTR TO N-PREF FRMLRY SEL^N^^^^8^N
"DATA",9002313.91,405,5)
UN^8
"DATA",9002313.91,405,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,405,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,406,0)
137^^AMOUNT ATTR TO COVERAGE GAP^N^^^^8^N
"DATA",9002313.91,406,5)
UP^8
"DATA",9002313.91,406,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,406,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,407,0)
148^^INGRED COST CNTRCTD REIMB AMT^N^^^^8^N
"DATA",9002313.91,407,5)
U8^8
"DATA",9002313.91,407,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,407,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,408,0)
149^^DISP FEE CNTRCTD REIMB AMT^N^^^^8^N
"DATA",9002313.91,408,5)
U9^8
"DATA",9002313.91,408,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,408,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,409,0)
570^^DUR ADDITIONAL TEXT^A/N^^^^100^A/N
"DATA",9002313.91,409,5)
NS^100
"DATA",9002313.91,409,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,409,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,410,0)
355^^OTHER PAYER ID COUNT^N^^^^1^N
"DATA",9002313.91,410,5)
NT^1
"DATA",9002313.91,410,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,410,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,411,0)
142^^OTHER PAYER PERSON CODE^A/N^^^^3^A/N
"DATA",9002313.91,411,5)
UV^3
"DATA",9002313.91,411,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,411,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,412,0)
127^^OTHER PAYER HELP DESK PH NUM^A/N^^^^18^A/N
"DATA",9002313.91,412,1)
OTHER PAYER HELP DESK TELEPHONE NUMBER
"DATA",9002313.91,412,5)
UB^18
"DATA",9002313.91,412,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,412,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,413,0)
143^^OTHER PAYER PATIENT REL CODE^N^^^^1^N
"DATA",9002313.91,413,5)
UW^1
"DATA",9002313.91,413,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,413,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,414,0)
144^^OTHER PAYER EFFECTIVE DATE^N^^^^8^N
"DATA",9002313.91,414,5)
UX^8
"DATA",9002313.91,414,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,414,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,415,0)
145^^OTHER PAYER TERMINATION DATE^N^^^^8^N
"DATA",9002313.91,415,5)
UY^8
"DATA",9002313.91,415,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,415,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,416,0)
139^^MEDICARE PART D COVERAGE CODE^N^^^^2^N
"DATA",9002313.91,416,5)
UR^2
"DATA",9002313.91,416,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,416,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,417,0)
138^^CMS LICS LEVEL^A/N^^^^20^A/N
"DATA",9002313.91,417,5)
UQ^20
"DATA",9002313.91,417,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,417,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,418,0)
240^^CONTRACT NUMBER^A/N^^^^8^A/N
"DATA",9002313.91,418,5)
U1^8
"DATA",9002313.91,418,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,418,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,419,0)
926^^FORMULARY ID^A/N^^^^10^A/N
"DATA",9002313.91,419,5)
FF^10
"DATA",9002313.91,419,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,419,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,420,0)
757^^BENEFIT ID^A/N^^^^15^A/N
"DATA",9002313.91,420,5)
U6^15
"DATA",9002313.91,420,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,420,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,421,0)
140^^NEXT MEDICARE PART D EFF DATE^N^^^^8^N
"DATA",9002313.91,421,5)
US^8
"DATA",9002313.91,421,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,421,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,422,0)
141^^NEXT MEDICARE PART D TERM DATE^N^^^^8^N
"DATA",9002313.91,422,5)
UT^8
"DATA",9002313.91,422,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,422,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,423,0)
123^^PAY TO STATE/PROVINCE ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,423,1)
PAY TO STATE/ PROVINCE ADDRESS
"DATA",9002313.91,423,5)
TX^2
"DATA",9002313.91,423,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,423,10,1,0)
S BPS("X")=""
"DATA",9002313.91,423,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,423,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,423,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,423,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,3)=""
"DATA",9002313.91,424,0)
579^^ASSOC RX/SERVICE PROV ID QUAL^A/N^^^^2^A/N
"DATA",9002313.91,424,1)
ASSOCIATED PRESCRIPTION / SERVICE PROVIDER ID QUALIFIER
"DATA",9002313.91,424,5)
XX^2
"DATA",9002313.91,424,10,0)
^^1^1^3130311^
"DATA",9002313.91,424,10,1,0)
S BPS("X")=""
"DATA",9002313.91,424,20,0)
^9002313.9102^1^1^3130311^^^^
"DATA",9002313.91,424,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,424,25,0)
^9002313.9104^1^1^3130311^^^^
"DATA",9002313.91,424,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,424,30,0)
^9002313.9103^1^1^3130311^^^
"DATA",9002313.91,424,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),570),U,9)=$G(BPS("X"))
"DATA",9002313.91,425,0)
580^^ASSOC RX/SERVICE PROVIDER ID^A/N^^^^15^A/N
"DATA",9002313.91,425,1)
ASSOCIATED PRESCRIPTION / SERVICE PROVIDER ID
"DATA",9002313.91,425,5)
XY^15
"DATA",9002313.91,425,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,425,10,1,0)
S BPS("X")=""
"DATA",9002313.91,425,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,425,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,425,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,425,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,425,30,0)
^^1^1^3130222^
"DATA",9002313.91,425,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),570),U,10)=BPS("X")
"DATA",9002313.91,426,0)
581^^ASSOC RX/SERVICE REF NUM QUAL^A/N^^^^2^A/N
"DATA",9002313.91,426,1)
ASSOCIATED PRESCRIPTION / SERVICE REFERENCE NUMBER QUALIFIER
"DATA",9002313.91,426,5)
XZ^2
"DATA",9002313.91,426,10,0)
^^1^1^3130222^
"DATA",9002313.91,426,10,1,0)
S BPS("X")=""
"DATA",9002313.91,426,20,0)
^^1^1^3130222^
"DATA",9002313.91,426,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,426,25,0)
^^1^1^3130222^
"DATA",9002313.91,426,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,426,30,0)
^^1^1^3130222^
"DATA",9002313.91,426,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,1)=BPS("X")
"DATA",9002313.91,427,0)
582^^ASSOC RX/SERVICE FILL NUMBER^N^^^^2^N
"DATA",9002313.91,427,1)
ASSOCIATED PRESCRIPTION SERVICE FILL NUMBER
"DATA",9002313.91,427,5)
X0^2
"DATA",9002313.91,427,10,0)
^^1^1^3130222^
"DATA",9002313.91,427,10,1,0)
S BPS("X")=""
"DATA",9002313.91,427,20,0)
^^1^1^3130222^
"DATA",9002313.91,427,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,427,25,0)
^^1^1^3130222^
"DATA",9002313.91,427,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,427,30,0)
^^1^1^3130222^
"DATA",9002313.91,427,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,2)=$G(BPS("X"))
"DATA",9002313.91,428,0)
583^^SERVICE PROVIDER NAME^A/N^^^^30^A/N
"DATA",9002313.91,428,1)
SERVICE PROVIDE NAME
"DATA",9002313.91,428,5)
YK^30
"DATA",9002313.91,428,10,0)
^^1^1^3130228^
"DATA",9002313.91,428,10,1,0)
S BPS("X")=""
"DATA",9002313.91,428,20,0)
^^1^1^3130222^
"DATA",9002313.91,428,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,428,25,0)
^^1^1^3130222^
"DATA",9002313.91,428,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,428,30,0)
^^1^1^3130222^
"DATA",9002313.91,428,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,3)=BPS("X")
"DATA",9002313.91,429,0)
584^^SERVICE PROVIDER STREET^A/N^^^^30^A/N
"DATA",9002313.91,429,1)
SERVICE PROVIDER STREET ADDRESS
"DATA",9002313.91,429,5)
YM^30
"DATA",9002313.91,429,10,0)
^^1^1^3130222^
"DATA",9002313.91,429,10,1,0)
S BPS("X")=""
"DATA",9002313.91,429,20,0)
^^1^1^3130222^
"DATA",9002313.91,429,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,429,25,0)
^^1^1^3130222^
"DATA",9002313.91,429,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,429,30,0)
^^1^1^3130222^
"DATA",9002313.91,429,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,4)=BPS("X")
"DATA",9002313.91,430,0)
585^^SERVICE PROVIDER CITY^A/N^^^^20^A/N
"DATA",9002313.91,430,1)
SERVICE PROVIDER CITY ADDRESS
"DATA",9002313.91,430,5)
YN^20
"DATA",9002313.91,430,10,0)
^9002313.9101^1^1^3130228^^
"DATA",9002313.91,430,10,1,0)
S BPS("X")=""
"DATA",9002313.91,430,20,0)
^^1^1^3130222^
"DATA",9002313.91,430,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,430,25,0)
^^1^1^3130222^
"DATA",9002313.91,430,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,430,30,0)
^^1^1^3130222^
"DATA",9002313.91,430,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,5)=BPS("X")
"DATA",9002313.91,431,0)
586^^SERVICE PROVIDE STATE/PROVINCE^A/N^^^^2^A/N
"DATA",9002313.91,431,1)
SERVICE PROVIDER STATE/PROVINCE ADDRESS
"DATA",9002313.91,431,5)
YP^2
"DATA",9002313.91,431,10,0)
^^1^1^3130222^
"DATA",9002313.91,431,10,1,0)
S BPS("X")=""
"DATA",9002313.91,431,20,0)
^^1^1^3130222^
"DATA",9002313.91,431,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,431,25,0)
^^1^1^3130222^
"DATA",9002313.91,431,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,431,30,0)
^^1^1^3130222^
"DATA",9002313.91,431,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,6)=BPS("X")
"DATA",9002313.91,432,0)
587^^SERVICE PROVIDER ZIP/POST CODE^A/N^^^^15^A/N
"DATA",9002313.91,432,1)
SERVICE PROVIDER ZIP/POSTAL CODE
"DATA",9002313.91,432,5)
YQ^15
"DATA",9002313.91,432,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,432,10,1,0)
S BPS("X")=""
"DATA",9002313.91,432,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,432,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,432,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,432,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,432,30,0)
^^1^1^3130222^
"DATA",9002313.91,432,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,7)=BPS("X")
"DATA",9002313.91,433,0)
590^^SELLER INITIALS^A/N^^^^3^A/N
"DATA",9002313.91,433,1)
SELLER INITIALS
"DATA",9002313.91,433,5)
YT^3
"DATA",9002313.91,433,10,0)
^^1^1^3130222^
"DATA",9002313.91,433,10,1,0)
S BPS("X")=BPS("Provider",MEDN,"Pharmacist Initials")
"DATA",9002313.91,433,20,0)
^9002313.9102^1^1^3130222^^^^
"DATA",9002313.91,433,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,433,25,0)
^9002313.9104^1^1^3130222^^^^
"DATA",9002313.91,433,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,433,30,0)
^9002313.9103^1^1^3130222^^^^
"DATA",9002313.91,433,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,10)=BPS("X")
"DATA",9002313.91,434,0)
591^^PURCHASER ID QUALIFIER^N^^^^2^N
"DATA",9002313.91,434,1)
PURCHASER ID QUALIFIER
"DATA",9002313.91,434,5)
YU^2
"DATA",9002313.91,434,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,434,10,1,0)
S BPS("X")=""
"DATA",9002313.91,434,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,434,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,434,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,434,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,434,30,0)
^^1^1^3130222^
"DATA",9002313.91,434,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,1)=BPS("X")
"DATA",9002313.91,435,0)
592^^PURCHASER ID^A/N^^^^20^A/N
"DATA",9002313.91,435,1)
PURCHASER ID
"DATA",9002313.91,435,5)
YV^20
"DATA",9002313.91,435,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,435,10,1,0)
S BPS("X")=""
"DATA",9002313.91,435,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,435,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,435,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,435,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,435,30,0)
^^1^1^3130222^
"DATA",9002313.91,435,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,2)=BPS("X")
"DATA",9002313.91,436,0)
593^^PURCHASER ID STATE/PROVINCE^A/N^^^^2^A/N
"DATA",9002313.91,436,1)
PURCHASER ID ASSOCIATED STATE/PROVINCE ADDRESS
"DATA",9002313.91,436,5)
YW^2
"DATA",9002313.91,436,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,436,10,1,0)
S BPS("X")=""
"DATA",9002313.91,436,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,436,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,436,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,436,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,436,30,0)
^^1^1^3130222^
"DATA",9002313.91,436,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,3)=BPS("X")
"DATA",9002313.91,437,0)
594^^PURCHASER DATE OF BIRTH^N^^^^8^N
"DATA",9002313.91,437,1)
PURCHASER DATE OF BIRTH
"DATA",9002313.91,437,5)
YX^8
"DATA",9002313.91,437,10,0)
^9002313.9101^1^1^3130228^^^
"DATA",9002313.91,437,10,1,0)
S BPS("X")=""
"DATA",9002313.91,437,20,0)
^^1^1^3130228^
"DATA",9002313.91,437,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,437,25,0)
^9002313.9104^1^1^3130228^^^
"DATA",9002313.91,437,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,437,30,0)
^9002313.9103^1^1^3130228^^
"DATA",9002313.91,437,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,4)=BPS("X")
"DATA",9002313.91,438,0)
595^^PURCHASER GENDER CODE^N^^^^1^N
"DATA",9002313.91,438,1)
PURCHASER GENDER CODE
"DATA",9002313.91,438,5)
YY^1
"DATA",9002313.91,438,10,0)
^^1^1^3130228^
"DATA",9002313.91,438,10,1,0)
S BPS("X")=""
"DATA",9002313.91,438,20,0)
^^1^1^3130222^
"DATA",9002313.91,438,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,438,25,0)
^^1^1^3130222^
"DATA",9002313.91,438,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,438,30,0)
^^1^1^3130222^
"DATA",9002313.91,438,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,5)=BPS("X")
"DATA",9002313.91,439,0)
596^^PURCHASER FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,439,1)
PURCHASER FIRST NAME
"DATA",9002313.91,439,5)
YZ^12
"DATA",9002313.91,439,10,0)
^^1^1^3130222^
"DATA",9002313.91,439,10,1,0)
S BPS("X")=""
"DATA",9002313.91,439,20,0)
^^1^1^3130222^
"DATA",9002313.91,439,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,439,25,0)
^^1^1^3130222^
"DATA",9002313.91,439,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,439,30,0)
^^1^1^3130222^
"DATA",9002313.91,439,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,6)=BPS("X")
"DATA",9002313.91,440,0)
597^^PURCHASER LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,440,1)
PURCHASER LAST NAME
"DATA",9002313.91,440,5)
Y0^15
"DATA",9002313.91,440,10,0)
^9002313.9101^1^1^3130403^^
"DATA",9002313.91,440,10,1,0)
S BPS("X")=""
"DATA",9002313.91,440,20,0)
^9002313.9102^1^1^3130403^^
"DATA",9002313.91,440,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,440,25,0)
^9002313.9104^1^1^3130403^^
"DATA",9002313.91,440,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,440,30,0)
^9002313.9103^1^1^3130403^^
"DATA",9002313.91,440,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,7)=BPS("X")
"DATA",9002313.91,441,0)
598^^PURCHASER STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,441,1)
PURCHASER STREET ADDRESS
"DATA",9002313.91,441,5)
Y1^30
"DATA",9002313.91,441,10,0)
^^1^1^3130222^
"DATA",9002313.91,441,10,1,0)
S BPS("X")=""
"DATA",9002313.91,441,20,0)
^^1^1^3130222^
"DATA",9002313.91,441,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,441,25,0)
^^1^1^3130222^
"DATA",9002313.91,441,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,441,30,0)
^^1^1^3130222^
"DATA",9002313.91,441,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,8)=BPS("X")
"DATA",9002313.91,442,0)
599^^PURCHASER CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,442,1)
PURCHASER CITY ADDRESS
"DATA",9002313.91,442,5)
Y2^20
"DATA",9002313.91,442,10,0)
^^1^1^3130222^
"DATA",9002313.91,442,10,1,0)
S BPS("X")=""
"DATA",9002313.91,442,20,0)
^^1^1^3130222^
"DATA",9002313.91,442,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,442,25,0)
^^1^1^3130222^
"DATA",9002313.91,442,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,442,30,0)
^^1^1^3130222^
"DATA",9002313.91,442,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,9)=BPS("X")
"DATA",9002313.91,443,0)
675^^PURCHASER STATE/PROVINCE CODE^A/N^^^^2^A/N
"DATA",9002313.91,443,1)
PURCHASER ADDRESS STATE/PROVINCE CODE
"DATA",9002313.91,443,5)
Y3^2
"DATA",9002313.91,443,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,443,10,1,0)
S BPS("X")=""
"DATA",9002313.91,443,20,0)
^^1^1^3130222^
"DATA",9002313.91,443,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,443,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,443,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,443,30,0)
^^1^1^3130222^
"DATA",9002313.91,443,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,5)=BPS("X")
"DATA",9002313.91,444,0)
676^^PURCHASER ZIP/POSTAL CODE^A/N^^^^15^A/N
"DATA",9002313.91,444,1)
PURCHASER ZIP/POSTAL CODE
"DATA",9002313.91,444,5)
Y4^15
"DATA",9002313.91,444,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,444,10,1,0)
S BPS("X")=""
"DATA",9002313.91,444,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,444,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,444,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,444,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,444,30,0)
^9002313.9103^1^1^3130222^^^
"DATA",9002313.91,444,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,6)=BPS("X")
"DATA",9002313.91,445,0)
677^^PURCHASER COUNTRY CODE^A/N^^^^2^A/N
"DATA",9002313.91,445,1)
PURCHASER COUNTRY CODE
"DATA",9002313.91,445,5)
Y5^2
"DATA",9002313.91,445,10,0)
^^1^1^3130222^
"DATA",9002313.91,445,10,1,0)
S BPS("X")=""
"DATA",9002313.91,445,20,0)
^^1^1^3130222^
"DATA",9002313.91,445,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,445,25,0)
^^1^1^3130222^
"DATA",9002313.91,445,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,445,30,0)
^^1^1^3130222^
"DATA",9002313.91,445,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,7)=BPS("X")
"DATA",9002313.91,446,0)
678^^TIME OF SERVICE^N^^^^6^N
"DATA",9002313.91,446,1)
TIME OF SERVICE
"DATA",9002313.91,446,5)
Y6^6
"DATA",9002313.91,446,10,0)
^^1^1^3130222^
"DATA",9002313.91,446,10,1,0)
S BPS("X")=BPS("Claim",MEDN,"Time of Service")
"DATA",9002313.91,446,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,446,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,446,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,446,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,446,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,446,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,8)=BPS("X")
"DATA",9002313.91,447,0)
679^^SELLER ID^A/N^^^^70^A/N
"DATA",9002313.91,447,1)
SELLER ID
"DATA",9002313.91,447,5)
Y9^70
"DATA",9002313.91,447,10,0)
^^1^1^3130222^
"DATA",9002313.91,447,10,1,0)
S BPS("X")=BPS("Provider",MEDN,"Pharmacist ID")
"DATA",9002313.91,447,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,447,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),70)
"DATA",9002313.91,447,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,447,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),70)
"DATA",9002313.91,447,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,447,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,9)=BPS("X")
"DATA",9002313.91,448,0)
680^^SELLER ID QUALIFIER^N^^^^2^N
"DATA",9002313.91,448,1)
SELLER ID QUALIFIER
"DATA",9002313.91,448,5)
ZB^2
"DATA",9002313.91,448,10,0)
^^1^1^3130226^
"DATA",9002313.91,448,10,1,0)
S BPS("X")="01"
"DATA",9002313.91,448,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,448,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,448,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,448,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,448,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,448,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,10)=BPS("X")
"DATA",9002313.91,449,0)
681^^SALES TRANSACTION ID^A/N^^^^80^A/N
"DATA",9002313.91,449,1)
SALES TRANSACTION ID
"DATA",9002313.91,449,5)
ZF^80
"DATA",9002313.91,449,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,449,10,1,0)
S BPS("X")=""
"DATA",9002313.91,449,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,449,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),80)
"DATA",9002313.91,449,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,449,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),80)
"DATA",9002313.91,449,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,449,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),680),U,1)=BPS("X")
"DATA",9002313.91,450,0)
A22^^PATIENT ID STATE/PROVINCE^A/N^^^^2^A/N
"DATA",9002313.91,450,1)
PATIENT ID ASSOCIATED STATE/PROVINCE ADDRESS
"DATA",9002313.91,450,5)
YR^2^1022
"DATA",9002313.91,450,10,0)
^^1^1^3130222^
"DATA",9002313.91,450,10,1,0)
S BPS("X")=""
"DATA",9002313.91,450,20,0)
^^1^1^3130222^
"DATA",9002313.91,450,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,450,25,0)
^^1^1^3130222^
"DATA",9002313.91,450,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,450,30,0)
^^1^1^3130227^
"DATA",9002313.91,450,30,1,0)
S $P(^BPSC(BPS(9002313.02),"A20"),U,2)=BPS("X")
"DATA",9002313.91,451,0)
A23^^PURCHASER RELATIONSHIP CODE^A/N^^^^2^A/N
"DATA",9002313.91,451,1)
PURCHASER RELATIONSHIP CODE
"DATA",9002313.91,451,5)
YS^2^1023
"DATA",9002313.91,451,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,451,10,1,0)
S BPS("X")=""
"DATA",9002313.91,451,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,451,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,451,25,0)
^^1^1^3130222^
"DATA",9002313.91,451,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,451,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,451,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,3)=BPS("X")
"DATA",9002313.91,452,0)
A24^^PRESCRIBER ID STATE/PROVINCE^A/N^^^^2^A/N
"DATA",9002313.91,452,1)
PRESCRIBER ID ASSOCIATED STATE/PROVINCE CODE
"DATA",9002313.91,452,5)
ZK^2^1024
"DATA",9002313.91,452,10,0)
^^1^1^3130222^
"DATA",9002313.91,452,10,1,0)
S BPS("X")=""
"DATA",9002313.91,452,20,0)
^^1^1^3130222^
"DATA",9002313.91,452,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,452,25,0)
^^1^1^3130222^
"DATA",9002313.91,452,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,452,30,0)
^^1^1^3130222^
"DATA",9002313.91,452,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,4)=BPS("X")
"DATA",9002313.91,453,0)
A25^^PRESCRIBER ALTERNATE ID QUAL^A/N^^^^2^A/N
"DATA",9002313.91,453,1)
PRESCRIBER ALTERNATE ID QUALIFIER
"DATA",9002313.91,453,5)
ZM^2^1025
"DATA",9002313.91,453,10,0)
^^1^1^3130227^
"DATA",9002313.91,453,10,1,0)
S BPS("X")=""
"DATA",9002313.91,453,20,0)
^^1^1^3130222^
"DATA",9002313.91,453,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,453,25,0)
^^1^1^3130222^
"DATA",9002313.91,453,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,453,30,0)
^9002313.9103^1^1^3130227^^
"DATA",9002313.91,453,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,5)=BPS("X")
"DATA",9002313.91,454,0)
A26^^PRESCRIBER ALTERNATE ID^A/N^^^^15^A/N
"DATA",9002313.91,454,1)
PRESCRIBER ALTERNATE ID
"DATA",9002313.91,454,5)
ZP^15^1026
"DATA",9002313.91,454,10,0)
^^1^1^3130222^
"DATA",9002313.91,454,10,1,0)
S BPS("X")=""
"DATA",9002313.91,454,20,0)
^^1^1^3130222^
"DATA",9002313.91,454,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,454,25,0)
^^1^1^3130222^
"DATA",9002313.91,454,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,454,30,0)
^^1^1^3130222^
"DATA",9002313.91,454,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,6)=BPS("X")
"DATA",9002313.91,455,0)
A27^^PRESCRIBER ALTERNATE STATE^A/N^^^^2^A/N
"DATA",9002313.91,455,1)
PRESCRIBER ALTERNATE ID ASSOCIATED STATE/PROVINCE ADDRESS
"DATA",9002313.91,455,5)
ZQ^2^1027
"DATA",9002313.91,455,10,0)
^^1^1^3130222^
"DATA",9002313.91,455,10,1,0)
S BPS("X")=""
"DATA",9002313.91,455,20,0)
^^1^1^3130222^
"DATA",9002313.91,455,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,455,25,0)
^^1^1^3130222^
"DATA",9002313.91,455,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,455,30,0)
^^1^1^3130222^
"DATA",9002313.91,455,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,7)=BPS("X")
"DATA",9002313.91,456,0)
A28^^ADJUDICATED PAYMENT TYPE^N^^^^2^N
"DATA",9002313.91,456,1)
ADJUDICATED PAYMENT TYPE
"DATA",9002313.91,456,5)
ZR^2^1028
"DATA",9002313.91,456,10,0)
^^1^1^3130222^
"DATA",9002313.91,456,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,457,0)
A29^^REPORTED PAYMENT TYPE^N^^^^2^N
"DATA",9002313.91,457,1)
REPORTED PAYMENT TYPE
"DATA",9002313.91,457,5)
ZS^2^1029
"DATA",9002313.91,457,10,0)
^^1^1^3130222^
"DATA",9002313.91,457,10,1,0)
S BPS("X")=""
"DATA",9002313.91,457,20,0)
^^1^1^3130222^
"DATA",9002313.91,457,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,457,25,0)
^^1^1^3130222^
"DATA",9002313.91,457,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,457,30,0)
^^1^1^3130222^
"DATA",9002313.91,457,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,9)=BPS("X")
"DATA",9002313.91,458,0)
A30^^RELEASED DATE^N^^^^8^N
"DATA",9002313.91,458,1)
RELEASED DATE
"DATA",9002313.91,458,5)
ZT^8^1030
"DATA",9002313.91,458,10,0)
^^1^1^3130222^
"DATA",9002313.91,458,10,1,0)
S BPS("X")=""
"DATA",9002313.91,458,20,0)
^^1^1^3130222^
"DATA",9002313.91,458,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,458,25,0)
^^1^1^3130222^
"DATA",9002313.91,458,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,458,30,0)
^^1^1^3130222^
"DATA",9002313.91,458,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,10)=BPS("X")
"DATA",9002313.91,459,0)
A31^^RELEASED TIME^N^^^^6^N
"DATA",9002313.91,459,1)
RELEASED TIME
"DATA",9002313.91,459,5)
ZU^6^1031
"DATA",9002313.91,459,10,0)
^^1^1^3130228^
"DATA",9002313.91,459,10,1,0)
S BPS("X")=""
"DATA",9002313.91,459,20,0)
^^1^1^3130222^
"DATA",9002313.91,459,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,459,25,0)
^^1^1^3130222^
"DATA",9002313.91,459,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,459,30,0)
^^1^1^3130222^
"DATA",9002313.91,459,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A30"),U,1)=BPS("X")
"DATA",9002313.91,460,0)
A32^^COMPOUND PREPARATION TIME^N^^^^4^N
"DATA",9002313.91,460,1)
COMPOUND PREPARATION TIME
"DATA",9002313.91,460,5)
ZW^4^1032
"DATA",9002313.91,460,10,0)
^^1^1^3130222^
"DATA",9002313.91,460,10,1,0)
S BPS("X")=""
"DATA",9002313.91,460,20,0)
^^1^1^3130222^
"DATA",9002313.91,460,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,460,25,0)
^^1^1^3130222^
"DATA",9002313.91,460,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,460,30,0)
^^1^1^3130222^
"DATA",9002313.91,460,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A30"),U,2)=BPS("X")
"DATA",9002313.91,461,0)
A43^^PATIENT COUNTRY CODE^A/N^^^^2^A/N
"DATA",9002313.91,461,1)
PATIENT COUNTRY CODE
"DATA",9002313.91,461,5)
1K^2^1043
"DATA",9002313.91,461,10,0)
^^1^1^3130222^
"DATA",9002313.91,461,10,1,0)
S BPS("X")=""
"DATA",9002313.91,461,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,461,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,461,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,461,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,461,30,0)
^^1^1^3130227^
"DATA",9002313.91,461,30,1,0)
S $P(^BPSC(BPS(9002313.02),"A40"),U,3)=BPS("X")
"DATA",9002313.91,462,0)
A45^^VETERINARY USE INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,462,1)
VETERINARY USE INDICATOR
"DATA",9002313.91,462,5)
1R^1^1045
"DATA",9002313.91,462,10,0)
^^1^1^3130222^
"DATA",9002313.91,462,10,1,0)
S BPS("X")=""
"DATA",9002313.91,462,20,0)
^^1^1^3130222^
"DATA",9002313.91,462,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,462,25,0)
^^1^1^3130222^
"DATA",9002313.91,462,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,462,30,0)
^^1^1^3130227^
"DATA",9002313.91,462,30,1,0)
S $P(^BPSC(BPS(9002313.02),"A40"),U,5)=BPS("X")
"DATA",9002313.91,463,0)
B04^^NEXT AVAILABLE FILL DATE^N^^^^8^N
"DATA",9002313.91,463,1)
NEXT AVAILABLE FILL DATE
"DATA",9002313.91,463,5)
BT^8^2004
"DATA",9002313.91,463,10,0)
^^1^1^3130222^
"DATA",9002313.91,463,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,464,0)
B08^^PATIENT STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,464,5)
7A^^2008
"DATA",9002313.91,464,10,0)
^^1^1^3150112^
"DATA",9002313.91,464,10,1,0)
S BPS("X")=$G(BPS("Patient","Street Address Line 1"))
"DATA",9002313.91,464,20,0)
^^1^1^3141223
"DATA",9002313.91,464,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,464,30,0)
^^1^1^3141223
"DATA",9002313.91,464,30,1,0)
S $P(^BPSC(BPS(9002313.02),"B00"),U,8)=BPS("X")
"DATA",9002313.91,465,0)
B09^^PATIENT STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,465,5)
7B^^2009
"DATA",9002313.91,465,10,0)
^^1^1^3150112^
"DATA",9002313.91,465,10,1,0)
S BPS("X")=$G(BPS("Patient","Street Address Line 2"))
"DATA",9002313.91,465,20,0)
^^1^1^3141223
"DATA",9002313.91,465,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,465,30,0)
^^1^1^3141223
"DATA",9002313.91,465,30,1,0)
S $P(^BPSC(BPS(9002313.02),"B00"),U,9)=BPS("X")
"DATA",9002313.91,466,0)
B38^^PATIENT ID ASSOC COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,466,1)
PATIENT ID ASSOCIATED COUNTRY CODE
"DATA",9002313.91,466,5)
1Y^^2038
"DATA",9002313.91,466,10,0)
^^1^1^3141223
"DATA",9002313.91,466,10,1,0)
S BPS("X")="US"
"DATA",9002313.91,466,20,0)
^^1^1^3141223
"DATA",9002313.91,466,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,466,30,0)
^^1^1^3141223
"DATA",9002313.91,466,30,1,0)
S $P(^BPSC(BPS(9002313.02),"B30"),U,8)=BPS("X")
"DATA",9002313.91,467,0)
B26^^PRESCRIBER PHONE NUMBER EXT^^^^^8^N
"DATA",9002313.91,467,1)
PRESCRIBER TELEPHONE NUMBER EXTENSION
"DATA",9002313.91,467,5)
7T^^2026
"DATA",9002313.91,467,10,0)
^^1^1^3141223
"DATA",9002313.91,467,10,1,0)
S BPS("X")=""
"DATA",9002313.91,467,20,0)
^^1^1^3141223
"DATA",9002313.91,467,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,467,30,0)
^^1^1^3141223
"DATA",9002313.91,467,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,6)=BPS("X")
"DATA",9002313.91,468,0)
B27^^PRESCRIBER STREET ADDR LINE 1^^^^^40^A/N
"DATA",9002313.91,468,1)
PRESCRIBER STREET ADDRESS LINE 1
"DATA",9002313.91,468,5)
7U^^2027
"DATA",9002313.91,468,10,0)
^^1^1^3150112^
"DATA",9002313.91,468,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Street Address Line 1"))
"DATA",9002313.91,468,20,0)
^^1^1^3141223
"DATA",9002313.91,468,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,468,30,0)
^^1^1^3141223
"DATA",9002313.91,468,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,7)=BPS("X")
"DATA",9002313.91,469,0)
B28^^PRESCRIBER STREET ADDR LINE 2^^^^^40^A/N
"DATA",9002313.91,469,1)
PRESCRIBER STREET ADDRESS LINE 2
"DATA",9002313.91,469,5)
7V^^2028
"DATA",9002313.91,469,10,0)
^^1^1^3150112^
"DATA",9002313.91,469,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Street Address Line 2"))
"DATA",9002313.91,469,20,0)
^^1^1^3141223
"DATA",9002313.91,469,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,469,30,0)
^^1^1^3141223
"DATA",9002313.91,469,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,8)=BPS("X")
"DATA",9002313.91,470,0)
B40^^PRES ALT ID ASSOC COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,470,1)
PRESCRIBER ALTERNATE ID ASSOCIATED COUNTRY CODE
"DATA",9002313.91,470,5)
3A^^2040
"DATA",9002313.91,470,10,0)
^^1^1^3141223
"DATA",9002313.91,470,10,1,0)
S BPS("X")=""
"DATA",9002313.91,470,20,0)
^^1^1^3141223
"DATA",9002313.91,470,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,470,30,0)
^^1^1^3141223
"DATA",9002313.91,470,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,10)=BPS("X")
"DATA",9002313.91,471,0)
B41^^PRES ID ASSOC COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,471,1)
PRESCRIBER ID ASSOCIATED COUNTRY CODE
"DATA",9002313.91,471,5)
3B^^2041
"DATA",9002313.91,471,10,0)
^9002313.9101^1^1^3150112^
"DATA",9002313.91,471,10,1,0)
S BPS("X")="US"
"DATA",9002313.91,471,20,0)
^^1^1^3141223
"DATA",9002313.91,471,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,471,30,0)
^^1^1^3141223
"DATA",9002313.91,471,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B40"),U,1)=BPS("X")
"DATA",9002313.91,472,0)
B42^^PRESCRIBER COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,472,5)
3C^^2042
"DATA",9002313.91,472,10,0)
^^1^1^3150112^
"DATA",9002313.91,472,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Country"))
"DATA",9002313.91,472,20,0)
^^1^1^3141223
"DATA",9002313.91,472,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,472,30,0)
^^1^1^3141223
"DATA",9002313.91,472,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B40"),U,2)=BPS("X")
"DATA",9002313.91,473,0)
B15^^EMPLOYER STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,473,5)
8D^^2015
"DATA",9002313.91,473,10,0)
^^1^1^3141223
"DATA",9002313.91,473,10,1,0)
S BPS("X")=""
"DATA",9002313.91,473,20,0)
^^1^1^3141223
"DATA",9002313.91,473,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,473,30,0)
^^1^1^3141223
"DATA",9002313.91,473,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,5)=BPS("X")
"DATA",9002313.91,474,0)
B16^^EMPLOYER STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,474,5)
7G^^2016
"DATA",9002313.91,474,10,0)
^^1^1^3141223
"DATA",9002313.91,474,10,1,0)
S BPS("X")=""
"DATA",9002313.91,474,20,0)
^^1^1^3141223
"DATA",9002313.91,474,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,474,30,0)
^^1^1^3141223
"DATA",9002313.91,474,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,6)=BPS("X")
"DATA",9002313.91,475,0)
B17^^EMPLOYER CONTACT FIRST NAME^^^^^35^A/N
"DATA",9002313.91,475,5)
7H^^2017
"DATA",9002313.91,475,10,0)
^^1^1^3141223
"DATA",9002313.91,475,10,1,0)
S BPS("X")=""
"DATA",9002313.91,475,20,0)
^^1^1^3141223
"DATA",9002313.91,475,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,475,30,0)
^^1^1^3141223
"DATA",9002313.91,475,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,7)=BPS("X")
"DATA",9002313.91,476,0)
B18^^EMPLOYER CONTACT LAST NAME^^^^^35^A/N
"DATA",9002313.91,476,5)
7J^^2018
"DATA",9002313.91,476,10,0)
^^1^1^3141223
"DATA",9002313.91,476,10,1,0)
S BPS("X")=""
"DATA",9002313.91,476,20,0)
^^1^1^3141223
"DATA",9002313.91,476,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,476,30,0)
^^1^1^3141223
"DATA",9002313.91,476,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,8)=BPS("X")
"DATA",9002313.91,477,0)
B19^^EMPLOYER PHONE NUMBER EXT^^^^^8^N
"DATA",9002313.91,477,1)
EMPLOYER TELEPHONE NUMBER EXTENSION
"DATA",9002313.91,477,5)
7K^^2019
"DATA",9002313.91,477,10,0)
^^1^1^3141223
"DATA",9002313.91,477,10,1,0)
S BPS("X")=""
"DATA",9002313.91,477,20,0)
^^1^1^3141223
"DATA",9002313.91,477,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,477,30,0)
^^1^1^3141223
"DATA",9002313.91,477,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,9)=BPS("X")
"DATA",9002313.91,478,0)
B24^^PAY TO STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,478,5)
7R^^2024
"DATA",9002313.91,478,10,0)
^^1^1^3141223
"DATA",9002313.91,478,10,1,0)
S BPS("X")=""
"DATA",9002313.91,478,20,0)
^^1^1^3141223
"DATA",9002313.91,478,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,478,30,0)
^^1^1^3141223
"DATA",9002313.91,478,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,4)=BPS("X")
"DATA",9002313.91,479,0)
B25^^PAY TO STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,479,5)
7S^^2025
"DATA",9002313.91,479,10,0)
^^1^1^3141223
"DATA",9002313.91,479,10,1,0)
S BPS("X")=""
"DATA",9002313.91,479,20,0)
^^1^1^3141223
"DATA",9002313.91,479,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,479,30,0)
^^1^1^3141223
"DATA",9002313.91,479,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,5)=BPS("X")
"DATA",9002313.91,480,0)
B35^^EMPLOYER COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,480,5)
1V^^2035
"DATA",9002313.91,480,10,0)
^^1^1^3141223
"DATA",9002313.91,480,10,1,0)
S BPS("X")=""
"DATA",9002313.91,480,20,0)
^^1^1^3141223
"DATA",9002313.91,480,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,480,30,0)
^^1^1^3141223
"DATA",9002313.91,480,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,5)=BPS("X")
"DATA",9002313.91,481,0)
B39^^PAY TO COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,481,5)
1Z^^2039
"DATA",9002313.91,481,10,0)
^^1^1^3141223
"DATA",9002313.91,481,10,1,0)
S BPS("X")=""
"DATA",9002313.91,481,20,0)
^^1^1^3141223
"DATA",9002313.91,481,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,481,30,0)
^^1^1^3141223
"DATA",9002313.91,481,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,9)=BPS("X")
"DATA",9002313.91,482,0)
B13^^AUTH REP STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,482,1)
AUTHORIZED REPRESENTATIVE STREET ADDRESS LINE 1
"DATA",9002313.91,482,5)
7D^^2013
"DATA",9002313.91,482,10,0)
^9002313.9101^1^1^3150112^
"DATA",9002313.91,482,10,1,0)
S BPS("X")=""
"DATA",9002313.91,482,20,0)
^9002313.9102^1^1^3150112^
"DATA",9002313.91,482,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,482,30,0)
^9002313.9103^1^1^3150112^
"DATA",9002313.91,482,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,3)=BPS("X")
"DATA",9002313.91,483,0)
B14^^AUTH REP STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,483,1)
AUTHORIZED REPRESENTATIVE STREET ADDRESS LINE 2
"DATA",9002313.91,483,5)
8B^^2014
"DATA",9002313.91,483,10,0)
^^1^1^3141223
"DATA",9002313.91,483,10,1,0)
S BPS("X")=""
"DATA",9002313.91,483,20,0)
^^1^1^3141223
"DATA",9002313.91,483,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,483,30,0)
^^1^1^3141223
"DATA",9002313.91,483,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,4)=BPS("X")
"DATA",9002313.91,484,0)
B34^^AUTH REP COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,484,1)
AUTHORIZED REPRESENTATIVE COUNTRY CODE
"DATA",9002313.91,484,5)
1U^^2034
"DATA",9002313.91,484,10,0)
^^1^1^3141223
"DATA",9002313.91,484,10,1,0)
S BPS("X")=""
"DATA",9002313.91,484,20,0)
^^1^1^3141223
"DATA",9002313.91,484,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,484,30,0)
^^1^1^3141223
"DATA",9002313.91,484,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,4)=BPS("X")
"DATA",9002313.91,485,0)
B20^^FACILITY STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,485,5)
7M^^2020
"DATA",9002313.91,485,10,0)
^^1^1^3141223
"DATA",9002313.91,485,10,1,0)
S BPS("X")=""
"DATA",9002313.91,485,20,0)
^^1^1^3141223
"DATA",9002313.91,485,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,485,30,0)
^^1^1^3141223
"DATA",9002313.91,485,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,10)=BPS("X")
"DATA",9002313.91,486,0)
B21^^FACILITY STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,486,5)
7N^^2021
"DATA",9002313.91,486,10,0)
^^1^1^3141223
"DATA",9002313.91,486,10,1,0)
S BPS("X")=""
"DATA",9002313.91,486,20,0)
^^1^1^3141223
"DATA",9002313.91,486,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,486,30,0)
^^1^1^3141223
"DATA",9002313.91,486,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,1)=BPS("X")
"DATA",9002313.91,487,0)
B37^^FACILITY COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,487,5)
1X^^2037
"DATA",9002313.91,487,10,0)
^^1^1^3141223
"DATA",9002313.91,487,10,1,0)
S BPS("X")=""
"DATA",9002313.91,487,20,0)
^^1^1^3141223
"DATA",9002313.91,487,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,487,30,0)
^^1^1^3141223
"DATA",9002313.91,487,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,7)=BPS("X")
"DATA",9002313.91,488,0)
B29^^PURCHASER STREET ADDRESS LINE1^^^^^40^A/N
"DATA",9002313.91,488,1)
PURCHASER STREET ADDRESS LINE 1
"DATA",9002313.91,488,5)
7W^^2029
"DATA",9002313.91,488,10,0)
^^1^1^3141223
"DATA",9002313.91,488,10,1,0)
S BPS("X")=""
"DATA",9002313.91,488,20,0)
^^1^1^3141223
"DATA",9002313.91,488,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,488,30,0)
^^1^1^3141223
"DATA",9002313.91,488,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,9)=BPS("X")
"DATA",9002313.91,489,0)
B30^^PURCHASER STREET ADDRESS LINE2^^^^^40^A/N
"DATA",9002313.91,489,1)
PURCHASER STREET ADDRESS LINE 2
"DATA",9002313.91,489,5)
7X^^2030
"DATA",9002313.91,489,10,0)
^^1^1^3141223
"DATA",9002313.91,489,10,1,0)
S BPS("X")=""
"DATA",9002313.91,489,20,0)
^^1^1^3141223
"DATA",9002313.91,489,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,489,30,0)
^^1^1^3141223
"DATA",9002313.91,489,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,10)=BPS("X")
"DATA",9002313.91,490,0)
B43^^PURCHASER ID ASSOC COUNTRY CD^^^^^2^A/N
"DATA",9002313.91,490,1)
PURCHASER ID ASSOCIATED COUNTRY CODE
"DATA",9002313.91,490,5)
3D^^2043
"DATA",9002313.91,490,10,0)
^^1^1^3141223
"DATA",9002313.91,490,10,1,0)
S BPS("X")=""
"DATA",9002313.91,490,20,0)
^^1^1^3141223
"DATA",9002313.91,490,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,490,30,0)
^^1^1^3141223
"DATA",9002313.91,490,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B40"),U,3)=BPS("X")
"DATA",9002313.91,491,0)
B31^^SERVICE PROV STREET ADD LINE 1^^^^^40^A/N
"DATA",9002313.91,491,1)
SERVICE PROVIDER STREET ADDRESS LINE 1
"DATA",9002313.91,491,5)
7Y^^2031
"DATA",9002313.91,491,10,0)
^^1^1^3141223
"DATA",9002313.91,491,10,1,0)
S BPS("X")=""
"DATA",9002313.91,491,20,0)
^^1^1^3141223
"DATA",9002313.91,491,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,491,30,0)
^^1^1^3141223
"DATA",9002313.91,491,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,1)=BPS("X")
"DATA",9002313.91,492,0)
B32^^SERVICE PROV STREET ADD LINE 2^^^^^40^A/N
"DATA",9002313.91,492,1)
SERVICE PROVIDER STREET ADDRESS LINE 2
"DATA",9002313.91,492,5)
7Z^^2032
"DATA",9002313.91,492,10,0)
^^1^1^3141223
"DATA",9002313.91,492,10,1,0)
S BPS("X")=""
"DATA",9002313.91,492,20,0)
^^1^1^3141223
"DATA",9002313.91,492,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,492,30,0)
^^1^1^3141223
"DATA",9002313.91,492,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,2)=BPS("X")
"DATA",9002313.91,493,0)
A93^^SERVICE PROVIDER COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,493,5)
1T^^1093
"DATA",9002313.91,493,10,0)
^^1^1^3141223
"DATA",9002313.91,493,10,1,0)
S BPS("X")=""
"DATA",9002313.91,493,20,0)
^^1^1^3141223
"DATA",9002313.91,493,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,493,30,0)
^^1^1^3141223
"DATA",9002313.91,493,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A90"),U,3)=BPS("X")
"DATA",9002313.91,494,0)
B44^^INTERMEDIARY ID COUNT^^^^^1^N
"DATA",9002313.91,494,5)
8G^^2044
"DATA",9002313.91,494,10,0)
^^1^1^3141223
"DATA",9002313.91,494,10,1,0)
S BPS("X")=""
"DATA",9002313.91,494,20,0)
^^1^1^3141223
"DATA",9002313.91,494,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,494,30,0)
^^1^1^3141223
"DATA",9002313.91,494,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B40"),U,4)=BPS("X")
"DATA",9002313.91,495,0)
B45^^INTERMEDIARY ID TYPE CODE^^^^^2^A/N
"DATA",9002313.91,495,5)
8H^^2045
"DATA",9002313.91,495,10,0)
^^1^1^3141223
"DATA",9002313.91,495,10,1,0)
S BPS("X")=""
"DATA",9002313.91,495,20,0)
^^1^1^3141223
"DATA",9002313.91,495,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,496,0)
B46^^INTERMEDIARY ID TYPE ENTITY^^^^^2^A/N
"DATA",9002313.91,496,5)
8J^^2046
"DATA",9002313.91,496,10,0)
^^1^1^3141223
"DATA",9002313.91,496,10,1,0)
S BPS("X")=""
"DATA",9002313.91,496,20,0)
^^1^1^3141223
"DATA",9002313.91,496,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,497,0)
B47^^INTERMEDIARY ID QUALIFIER^^^^^2^A/N
"DATA",9002313.91,497,5)
8K^^2047
"DATA",9002313.91,497,10,0)
^^1^1^3141223
"DATA",9002313.91,497,10,1,0)
S BPS("X")=""
"DATA",9002313.91,497,20,0)
^^1^1^3141223
"DATA",9002313.91,497,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,498,0)
B48^^INTERMEDIARY ID^^^^^20^A/N
"DATA",9002313.91,498,5)
8M^^2048
"DATA",9002313.91,498,10,0)
^^1^1^3141223
"DATA",9002313.91,498,10,1,0)
S BPS("X")=""
"DATA",9002313.91,498,20,0)
^^1^1^3141223
"DATA",9002313.91,498,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,499,0)
B49^^INTERMEDIARY ID STATE/PROV ADD^^^^^2^A/N
"DATA",9002313.91,499,1)
INTERMEDIARY ID STATE/PROVINCE ADDRESS
"DATA",9002313.91,499,5)
8N^^2049
"DATA",9002313.91,499,10,0)
^9002313.9101^1^1^3141231^
"DATA",9002313.91,499,10,1,0)
S BPS("X")=""
"DATA",9002313.91,499,20,0)
^9002313.9102^1^1^3141231^
"DATA",9002313.91,499,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,500,0)
B55^^INTERMEDIARY ID COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,500,5)
8U^^2055
"DATA",9002313.91,500,10,0)
^^1^1^3141223
"DATA",9002313.91,500,10,1,0)
S BPS("X")=""
"DATA",9002313.91,500,20,0)
^^1^1^3141223
"DATA",9002313.91,500,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,501,0)
B50^^INTERMEDIARY ID RELATION CODE^^^^^1^N
"DATA",9002313.91,501,1)
INTERMEDIARY ID RELATIONSHIP CODE
"DATA",9002313.91,501,5)
8P^^2050
"DATA",9002313.91,501,10,0)
^^1^1^3141223
"DATA",9002313.91,501,10,1,0)
S BPS("X")=""
"DATA",9002313.91,501,20,0)
^^1^1^3141223
"DATA",9002313.91,501,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,502,0)
B56^^LAST KNOWN BIN NUMBER^^^^^6^N
"DATA",9002313.91,502,5)
3E^^2056
"DATA",9002313.91,502,10,0)
^^1^1^3141223
"DATA",9002313.91,502,10,1,0)
S BPS("X")=""
"DATA",9002313.91,502,20,0)
^^1^1^3141223
"DATA",9002313.91,502,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,502,30,0)
^^1^1^3141223
"DATA",9002313.91,502,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,6)=BPS("X")
"DATA",9002313.91,503,0)
B57^^LAST KNOWN PROCESSOR CNTRL NUM^^^^^10^A/N
"DATA",9002313.91,503,1)
LAST KNOWN PROCESSOR CONTROL NUMBER
"DATA",9002313.91,503,5)
3F^^2057
"DATA",9002313.91,503,10,0)
^^1^1^3141223
"DATA",9002313.91,503,10,1,0)
S BPS("X")=""
"DATA",9002313.91,503,20,0)
^^1^1^3141223
"DATA",9002313.91,503,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,503,30,0)
^^1^1^3141223
"DATA",9002313.91,503,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,7)=BPS("X")
"DATA",9002313.91,504,0)
B58^^LAST KNOWN GROUP ID^^^^^15^A/N
"DATA",9002313.91,504,5)
3G^^2058
"DATA",9002313.91,504,10,0)
^^1^1^3141223
"DATA",9002313.91,504,10,1,0)
S BPS("X")=""
"DATA",9002313.91,504,20,0)
^^1^1^3141223
"DATA",9002313.91,504,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,504,30,0)
^^1^1^3141223
"DATA",9002313.91,504,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,8)=BPS("X")
"DATA",9002313.91,505,0)
B59^^LAST KNOWN CARDHOLDER ID^^^^^20^A/N
"DATA",9002313.91,505,5)
3H^^2059
"DATA",9002313.91,505,10,0)
^^1^1^3141223
"DATA",9002313.91,505,10,1,0)
S BPS("X")=""
"DATA",9002313.91,505,20,0)
^^1^1^3141223
"DATA",9002313.91,505,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,505,30,0)
^^1^1^3141223
"DATA",9002313.91,505,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,9)=BPS("X")
"DATA",9002313.91,506,0)
B60^^YEAR OF LAST PAID CLAIM^^^^^4^N
"DATA",9002313.91,506,5)
3J^^2060
"DATA",9002313.91,506,10,0)
^9002313.9101^1^1^3150112^
"DATA",9002313.91,506,10,1,0)
S BPS("X")=""
"DATA",9002313.91,506,20,0)
^^1^1^3150112^
"DATA",9002313.91,506,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,506,30,0)
^9002313.9103^1^1^3150112^
"DATA",9002313.91,506,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,10)=BPS("X")
"DATA",9002313.91,507,0)
B61^^MONTH OF LAST PAID CLAIM^^^^^2^N
"DATA",9002313.91,507,5)
3K^^2061
"DATA",9002313.91,507,10,0)
^^1^1^3141223
"DATA",9002313.91,507,10,1,0)
S BPS("X")=""
"DATA",9002313.91,507,20,0)
^^1^1^3141223
"DATA",9002313.91,507,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,507,30,0)
^^1^1^3141223
"DATA",9002313.91,507,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B60"),U,1)=BPS("X")
"DATA",9002313.91,508,0)
B22^^HELP DESK TELEPHONE NUMBER EXT^^^^^8^N
"DATA",9002313.91,508,1)
HELP DESK TELEPHONE NUMBER EXTENSION
"DATA",9002313.91,508,5)
7P^^2022
"DATA",9002313.91,508,10,0)
^^1^1^3141223
"DATA",9002313.91,508,10,1,0)
; THIS IS A RESPONSE-ONLY FIELD WHICH DOES NOT USE THE GET, FORMAT, OR SET CODE
"DATA",9002313.91,509,0)
B33^^PRO SERVICE FEE CONT/REIM AMT^^^^^6.2^D
"DATA",9002313.91,509,1)
PROFESSIONAL SERVICE FEE CONTRACTED/REIMBURSEMENT AMOUNT
"DATA",9002313.91,509,5)
6G^^2033
"DATA",9002313.91,509,10,0)
^^1^1^3141223
"DATA",9002313.91,509,10,1,0)
; THIS IS A RESPONSE-ONLY FIELD WHICH DOES NOT USE THE GET, FORMAT, OR SET CODE
"DATA",9002313.91,510,0)
B23^^OTHER PAYER HELPDESK PHONE EXT^^^^^8^N
"DATA",9002313.91,510,1)
OTHER PAYER HELP DESK TELEPHONE NUMBER EXTENSION
"DATA",9002313.91,510,5)
7Q^^2023
"DATA",9002313.91,510,10,0)
^^1^1^3141223
"DATA",9002313.91,510,10,1,0)
; THIS IS A RESPONSE-ONLY FIELD WHICH DOES NOT USE THE GET, FORMAT, OR SET CODE
"DATA",9002313.91,511,0)
B52^^RESPONSE INTERMEDIARY AUTH CNT^^^^^1^N
"DATA",9002313.91,511,1)
RESPONSE INTERMEDIARY AUTHORIZATION COUNT
"DATA",9002313.91,511,5)
8R^^2052
"DATA",9002313.91,511,10,0)
^^1^1^3141223
"DATA",9002313.91,511,10,1,0)
; THIS IS A RESPONSE-ONLY FIELD WHICH DOES NOT USE THE GET, FORMAT, OR SET CODE
"DATA",9002313.91,512,0)
B53^^RESPONSE INTERMED AUTH TYPE ID^^^^^2^N
"DATA",9002313.91,512,1)
RESPONSE INTERMEDIARY AUTHORIZATION TYPE ID
"DATA",9002313.91,512,5)
8S^^2053
"DATA",9002313.91,512,10,0)
^^1^1^3141223
"DATA",9002313.91,512,10,1,0)
; THIS IS A RESPONSE-ONLY FIELD WHICH DOES NOT USE THE GET, FORMAT, OR SET CODE
"DATA",9002313.91,513,0)
B54^^RESPONSE INTERMEDIARY AUTH ID^^^^^20^A/N
"DATA",9002313.91,513,1)
RESPONSE INTERMEDIARY AUTHORIZATION ID
"DATA",9002313.91,513,5)
8T^^2054
"DATA",9002313.91,513,10,0)
^^1^1^3141223
"DATA",9002313.91,513,10,1,0)
; THIS IS A RESPONSE-ONLY FIELD WHICH DOES NOT USE THE GET, FORMAT, OR SET CODE
"DATA",9002313.91,514,0)
B51^^INTERMEDIARY MESSAGE^^^^^200^A/N
"DATA",9002313.91,514,5)
8Q^^2051
"DATA",9002313.91,514,10,0)
^^1^1^3141223
"DATA",9002313.91,514,10,1,0)
; THIS IS A RESPONSE-ONLY FIELD WHICH DOES NOT USE THE GET, FORMAT, OR SET CODE
"FIA",9002313.02)
BPS CLAIMS
"FIA",9002313.02,0)
^BPSC(
"FIA",9002313.02,0,0)
9002313.02
"FIA",9002313.02,0,1)
y^n^p^^^^n^^n
"FIA",9002313.02,0,10)

"FIA",9002313.02,0,11)

"FIA",9002313.02,0,"RLRO")

"FIA",9002313.02,0,"VR")
1.0^BPS
"FIA",9002313.02,9002313.02)
1
"FIA",9002313.02,9002313.0201)
1
"FIA",9002313.02,9002313.0201,2095)

"FIA",9002313.03)
BPS RESPONSES
"FIA",9002313.03,0)
^BPSR(
"FIA",9002313.03,0,0)
9002313.03P
"FIA",9002313.03,0,1)
y^n^p^^^^n^^n
"FIA",9002313.03,0,10)

"FIA",9002313.03,0,11)

"FIA",9002313.03,0,"RLRO")

"FIA",9002313.03,0,"VR")
1.0^BPS
"FIA",9002313.03,9002313.03)
1
"FIA",9002313.03,9002313.0301)
1
"FIA",9002313.03,9002313.0301,2098)

"FIA",9002313.32)
BPS PAYER RESPONSE OVERRIDES
"FIA",9002313.32,0)
^BPS(9002313.32,
"FIA",9002313.32,0,0)
9002313.32
"FIA",9002313.32,0,1)
y^n^p^^^^n^^n
"FIA",9002313.32,0,10)

"FIA",9002313.32,0,11)

"FIA",9002313.32,0,"RLRO")

"FIA",9002313.32,0,"VR")
1.0^BPS
"FIA",9002313.32,9002313.32)
1
"FIA",9002313.32,9002313.32,2.09)

"FIA",9002313.56)
BPS PHARMACIES
"FIA",9002313.56,0)
^BPS(9002313.56,
"FIA",9002313.56,0,0)
9002313.56
"FIA",9002313.56,0,1)
y^y^p^^^^n^^n
"FIA",9002313.56,0,10)

"FIA",9002313.56,0,11)

"FIA",9002313.56,0,"RLRO")

"FIA",9002313.56,0,"VR")
1.0^BPS
"FIA",9002313.56,9002313.56)
1
"FIA",9002313.56,9002313.56,.09)

"FIA",9002313.91)
BPS NCPDP FIELD DEFS
"FIA",9002313.91,0)
^BPSF(9002313.91,
"FIA",9002313.91,0,0)
9002313.91I
"FIA",9002313.91,0,1)
y^y^f^^n^^y^o^n
"FIA",9002313.91,0,10)

"FIA",9002313.91,0,11)

"FIA",9002313.91,0,"RLRO")

"FIA",9002313.91,0,"VR")
1.0^BPS
"FIA",9002313.91,9002313.91)
0
"FIA",9002313.91,9002313.9101)
0
"FIA",9002313.91,9002313.9102)
0
"FIA",9002313.91,9002313.9103)
0
"FIA",9002313.91,9002313.9104)
0
"INIT")
POST^BPS22PST
"KRN",101,1702,-1)
0^15
"KRN",101,1702,0)
VALM BLANK 1^^^A^^^^^^^^LIST MANAGER
"KRN",101,1702,1,0)
^^1^1^2920203^
"KRN",101,1702,1,1,0)
This protocol is used to format spaces in menu lists.
"KRN",101,1702,10,0)
^101.01PA^0^0
"KRN",101,1704,-1)
0^16
"KRN",101,1704,0)
VALM BLANK 2^^^A^^^^^^^^LIST MANAGER
"KRN",101,1704,1,0)
^^1^1^3141217^
"KRN",101,1704,1,1,0)
This protocol is used to format spaces in menu lists.
"KRN",101,1705,-1)
0^17
"KRN",101,1705,0)
VALM BLANK 3^^^A^^^^^^^^
"KRN",101,1705,1,0)
^^1^1^2920203^
"KRN",101,1705,1,1,0)
This protocol is used to format spaces in menu lists.
"KRN",101,7653,-1)
0^1
"KRN",101,7653,0)
BPS VIEW ECME RX MENU^View ECME Prescription Menu^^M^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7653,4)
20^3
"KRN",101,7653,10,0)
^101.01PA^17^17
"KRN",101,7653,10,2,0)
7654^VW^11^
"KRN",101,7653,10,2,"^")
BPS VRX NAV VIEWRX
"KRN",101,7653,10,3,0)
7655^CL^12^
"KRN",101,7653,10,3,"^")
BPS VRX NAV ECME CLAIM LOG
"KRN",101,7653,10,4,0)
7656^BE^13^
"KRN",101,7653,10,4,"^")
BPS VRX NAV BILLING EVENTS RPT
"KRN",101,7653,10,5,0)
7657^CR^21^
"KRN",101,7653,10,5,"^")
BPS VRX NAV CRI
"KRN",101,7653,10,6,0)
7658^IN^22^
"KRN",101,7653,10,6,"^")
BPS VRX NAV INS POL
"KRN",101,7653,10,7,0)
7659^LB^23^
"KRN",101,7653,10,7,"^")
BPS VRX NAV BILL LIST
"KRN",101,7653,10,8,0)
7660^CI^31^
"KRN",101,7653,10,8,"^")
BPS VRX NAV TPJI CLAIM INFORMATION
"KRN",101,7653,10,9,0)
7661^AP^32^
"KRN",101,7653,10,9,"^")
BPS VRX NAV TPJI AR ACCT PROFILE
"KRN",101,7653,10,10,0)
7662^CM^33^
"KRN",101,7653,10,10,"^")
BPS VRX NAV TPJI AR COMMENT HISTORY
"KRN",101,7653,10,11,0)
7663^ER^41^
"KRN",101,7653,10,11,"^")
BPS VRX NAV TPJI ECME RX INFO
"KRN",101,7653,10,12,0)
7664^ES^42^
"KRN",101,7653,10,12,"^")
BPS VRX NAV DG ELIG STATUS
"KRN",101,7653,10,13,0)
7665^EV^43^
"KRN",101,7653,10,13,"^")
BPS VRX NAV DG ELIG VERIFICATION
"KRN",101,7653,10,14,0)
8274^PR^44^
"KRN",101,7653,10,14,"^")
BPS VRX NAV PRINT REPORT
"KRN",101,7653,10,15,0)
1702^^14^
"KRN",101,7653,10,15,"^")
VALM BLANK 1
"KRN",101,7653,10,16,0)
1704^^24^
"KRN",101,7653,10,16,"^")
VALM BLANK 2
"KRN",101,7653,10,17,0)
1705^^34^
"KRN",101,7653,10,17,"^")
VALM BLANK 3
"KRN",101,7653,26)
D SHOW^VALM
"KRN",101,7653,28)
Select Action: 
"KRN",101,7653,99)
64419,40531
"KRN",101,7654,-1)
0^14
"KRN",101,7654,0)
BPS VRX NAV VIEWRX^View Rx^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7654,15)
S VALMBCK="R"
"KRN",101,7654,20)
D NAV^BPSVRX(1)
"KRN",101,7654,99)
62524,28065
"KRN",101,7655,-1)
0^7
"KRN",101,7655,0)
BPS VRX NAV ECME CLAIM LOG^Claim Log^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7655,15)
S VALMBCK="R"
"KRN",101,7655,20)
D NAV^BPSVRX(2)
"KRN",101,7655,99)
62524,28065
"KRN",101,7656,-1)
0^3
"KRN",101,7656,0)
BPS VRX NAV BILLING EVENTS RPT^Billing Events^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7656,15)
S VALMBCK="R"
"KRN",101,7656,20)
D NAV^BPSVRX(3)
"KRN",101,7656,99)
62524,28065
"KRN",101,7657,-1)
0^4
"KRN",101,7657,0)
BPS VRX NAV CRI^CRI Report^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7657,15)
S VALMBCK="R"
"KRN",101,7657,20)
D NAV^BPSVRX(4)
"KRN",101,7657,99)
62524,28065
"KRN",101,7658,-1)
0^8
"KRN",101,7658,0)
BPS VRX NAV INS POL^Insurance^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7658,15)
S VALMBCK="R"
"KRN",101,7658,20)
D NAV^BPSVRX(5)
"KRN",101,7658,99)
62524,28065
"KRN",101,7659,-1)
0^2
"KRN",101,7659,0)
BPS VRX NAV BILL LIST^List of Bills^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7659,15)
S VALMBCK="R"
"KRN",101,7659,20)
D NAV^BPSVRX(6)
"KRN",101,7659,99)
62524,28065
"KRN",101,7660,-1)
0^12
"KRN",101,7660,0)
BPS VRX NAV TPJI CLAIM INFORMATION^TPJI Claim Info^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7660,15)
S VALMBCK="R"
"KRN",101,7660,20)
D NAV^BPSVRX(7)
"KRN",101,7660,99)
62524,28065
"KRN",101,7661,-1)
0^10
"KRN",101,7661,0)
BPS VRX NAV TPJI AR ACCT PROFILE^TPJI Acct Pro^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7661,15)
S VALMBCK="R"
"KRN",101,7661,20)
D NAV^BPSVRX(8)
"KRN",101,7661,99)
62524,28065
"KRN",101,7662,-1)
0^11
"KRN",101,7662,0)
BPS VRX NAV TPJI AR COMMENT HISTORY^TPJI AR Comm^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7662,15)
S VALMBCK="R"
"KRN",101,7662,20)
D NAV^BPSVRX(9)
"KRN",101,7662,99)
62524,28065
"KRN",101,7663,-1)
0^13
"KRN",101,7663,0)
BPS VRX NAV TPJI ECME RX INFO^TPJI ECME Rx^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7663,15)
S VALMBCK="R"
"KRN",101,7663,20)
D NAV^BPSVRX(10)
"KRN",101,7663,99)
62524,28065
"KRN",101,7664,-1)
0^5
"KRN",101,7664,0)
BPS VRX NAV DG ELIG STATUS^Elig Status^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7664,15)
S VALMBCK="R"
"KRN",101,7664,20)
D NAV^BPSVRX(11)
"KRN",101,7664,99)
62524,28065
"KRN",101,7665,-1)
0^6
"KRN",101,7665,0)
BPS VRX NAV DG ELIG VERIFICATION^Elig Verif^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,7665,15)
S VALMBCK="R"
"KRN",101,7665,20)
D NAV^BPSVRX(12)
"KRN",101,7665,99)
62524,28065
"KRN",101,8274,-1)
0^9
"KRN",101,8274,0)
BPS VRX NAV PRINT REPORT^Print Report(s)^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,8274,15)
S VALMBCK="R"
"KRN",101,8274,20)
D REPORT^BPSVRX3
"KRN",101,8274,99)
64419,40233
"KRN",409.61,699,-1)
0^1
"KRN",409.61,699,0)
BPS VIEW ECME RX^1^^240^5^18^1^1^^BPS VIEW ECME RX MENU^View ECME Prescription^1^^1
"KRN",409.61,699,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,699,"ARRAY")
 ^TMP("BPSVRX",$J)
"KRN",409.61,699,"FNL")
D EXIT^BPSVRX
"KRN",409.61,699,"HDR")
D HDR^BPSVRX
"KRN",409.61,699,"HLP")
D HELP^BPSVRX
"KRN",409.61,699,"INIT")
D INIT^BPSVRX(.BPSVRX)
"MBREQ")
1
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"PKG",632,-1)
1^1
"PKG",632,0)
E CLAIMS MGMT ENGINE^BPS^ELECTRONIC CLAIMS MGT
"PKG",632,22,0)
^9.49I^1^1
"PKG",632,22,1,0)
1.0^3041008^3041130^568
"PKG",632,22,1,"PAH",1,0)
22^3170919^520824639
"PKG",632,22,1,"PAH",1,1,0)
^^1^1^3170919
"PKG",632,22,1,"PAH",1,1,1,0)
MCCF EDI TAS EPHARMACY BUILD 2
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","BPS22PST")
0^^B19653157
"RTN","BPS22PST",1,0)
BPS22PST ;AITC/PD - Post-install for BPS*1.0*22 ;5/10/2017
"RTN","BPS22PST",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**22**;JUN 2004;Build 28
"RTN","BPS22PST",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPS22PST",4,0)
 ;
"RTN","BPS22PST",5,0)
 Q
"RTN","BPS22PST",6,0)
 ;
"RTN","BPS22PST",7,0)
POST ; Post-install functions are coded here.
"RTN","BPS22PST",8,0)
 ;
"RTN","BPS22PST",9,0)
 D MES^XPDUTL("  Starting post-install of BPS*1.0*22")
"RTN","BPS22PST",10,0)
 D AUTOREV
"RTN","BPS22PST",11,0)
 D BMES^XPDUTL("  Finished post-install of BPS*1.0*22")
"RTN","BPS22PST",12,0)
 Q
"RTN","BPS22PST",13,0)
 ;
"RTN","BPS22PST",14,0)
AUTOREV ; Update AUTO-REVERSAL PARAMETER in BPS PHARMACIES
"RTN","BPS22PST",15,0)
 ;
"RTN","BPS22PST",16,0)
 ; If existing value is nil or outside of inclusive range 3-10 set value to 5.
"RTN","BPS22PST",17,0)
 ;
"RTN","BPS22PST",18,0)
 N BPSAR,BPSARP,BPSIEN,CNT,DA,DIE,DR
"RTN","BPS22PST",19,0)
 ;
"RTN","BPS22PST",20,0)
 D BMES^XPDUTL("   Updating AUTO-REVERSAL PARAMETERs")
"RTN","BPS22PST",21,0)
 ;
"RTN","BPS22PST",22,0)
 S CNT=0
"RTN","BPS22PST",23,0)
 S BPSIEN=0 F  S BPSIEN=$O(^BPS(9002313.56,BPSIEN)) Q:BPSIEN'?1N.N  D
"RTN","BPS22PST",24,0)
 . S BPSARP=$P($G(^BPS(9002313.56,BPSIEN,0)),U,9)
"RTN","BPS22PST",25,0)
 . I (BPSARP="")!(BPSARP<3)!(BPSARP>10) D
"RTN","BPS22PST",26,0)
 . . S DIE=9002313.56,DA=BPSIEN,DR=".09////5"
"RTN","BPS22PST",27,0)
 . . D ^DIE
"RTN","BPS22PST",28,0)
 . . S BPSAR(BPSIEN)=BPSARP_U_$$NOW^XLFDT
"RTN","BPS22PST",29,0)
 . . S CNT=CNT+1
"RTN","BPS22PST",30,0)
 ;
"RTN","BPS22PST",31,0)
 I $D(BPSAR) D MAIL(.BPSAR)
"RTN","BPS22PST",32,0)
 ;
"RTN","BPS22PST",33,0)
 D MES^XPDUTL("    - "_CNT_" entries updated")
"RTN","BPS22PST",34,0)
 D MES^XPDUTL("    - Done with updating AUTO-REVERSAL PARAMETERs")
"RTN","BPS22PST",35,0)
 ;
"RTN","BPS22PST",36,0)
 Q
"RTN","BPS22PST",37,0)
 ;
"RTN","BPS22PST",38,0)
MAIL(BPSAR) ; Generate MailMan E-Mail
"RTN","BPS22PST",39,0)
 ;
"RTN","BPS22PST",40,0)
 N BPSARP,BPSDT,BPSIEN,BPSL,BPSNAME,BPSSITE,BPSX,USR,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","BPS22PST",41,0)
 ;
"RTN","BPS22PST",42,0)
 S BPSSITE=$$SITE^VASITE()         ; IA 10112
"RTN","BPS22PST",43,0)
 ;
"RTN","BPS22PST",44,0)
 S BPSL=0
"RTN","BPS22PST",45,0)
 S BPSL=BPSL+1,BPSX(BPSL)="VistA patch BPS*1.0*22 was successfully installed at your site."
"RTN","BPS22PST",46,0)
 S BPSL=BPSL+1,BPSX(BPSL)=" "
"RTN","BPS22PST",47,0)
 ;
"RTN","BPS22PST",48,0)
 S BPSIEN=""
"RTN","BPS22PST",49,0)
 F  S BPSIEN=$O(BPSAR(BPSIEN)) Q:BPSIEN=""  D
"RTN","BPS22PST",50,0)
 . S BPSARP=$P($G(BPSAR(BPSIEN)),U)
"RTN","BPS22PST",51,0)
 . S BPSDT=$P($G(BPSAR(BPSIEN)),U,2)
"RTN","BPS22PST",52,0)
 . S BPSNAME=$P($G(^BPS(9002313.56,BPSIEN,0)),U,1)
"RTN","BPS22PST",53,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="        Name: "_BPSNAME
"RTN","BPS22PST",54,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="    Station#: "_$P(BPSSITE,U,3)
"RTN","BPS22PST",55,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="   Date/Time: "_$$FMTE^XLFDT(BPSDT,"5ZPM")
"RTN","BPS22PST",56,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="          By: "_$P($G(^VA(200,DUZ,0)),U,1)
"RTN","BPS22PST",57,0)
 . S BPSL=BPSL+1,BPSX(BPSL)=" "
"RTN","BPS22PST",58,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="The ePharmacy Auto-Reversal Parameter has been changed at your site."
"RTN","BPS22PST",59,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="     Previous Value: "_BPSARP
"RTN","BPS22PST",60,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="          New Value: 5"
"RTN","BPS22PST",61,0)
 . S BPSL=BPSL+1,BPSX(BPSL)=" "
"RTN","BPS22PST",62,0)
 ;
"RTN","BPS22PST",63,0)
 S BPSL=BPSL+1,BPSX(BPSL)="The Auto-Reversal Parameter can be changed using option Edit ECME Pharmacy"
"RTN","BPS22PST",64,0)
 S BPSL=BPSL+1,BPSX(BPSL)="Data."
"RTN","BPS22PST",65,0)
 S BPSL=BPSL+1,BPSX(BPSL)=" "
"RTN","BPS22PST",66,0)
 S BPSL=BPSL+1,BPSX(BPSL)="ECME uses the AUTO-REVERSE site parameter when determining whether non-released"
"RTN","BPS22PST",67,0)
 S BPSL=BPSL+1,BPSX(BPSL)="prescription claims (that have returned a PAYABLE response) are to be"
"RTN","BPS22PST",68,0)
 S BPSL=BPSL+1,BPSX(BPSL)="automatically REVERSED."
"RTN","BPS22PST",69,0)
 S BPSL=BPSL+1,BPSX(BPSL)=" "
"RTN","BPS22PST",70,0)
 S BPSL=BPSL+1,BPSX(BPSL)="The AUTO-REVERSE site parameter is set for the number of days that ECME will"
"RTN","BPS22PST",71,0)
 S BPSL=BPSL+1,BPSX(BPSL)="wait before the claim is automatically REVERSED. The user is allowed to enter"
"RTN","BPS22PST",72,0)
 S BPSL=BPSL+1,BPSX(BPSL)="a number from 3 to 10. 5 is the suggested setting. ECME will wait the"
"RTN","BPS22PST",73,0)
 S BPSL=BPSL+1,BPSX(BPSL)="entered number of days before REVERSING the non-released RX with a PAYABLE"
"RTN","BPS22PST",74,0)
 S BPSL=BPSL+1,BPSX(BPSL)="payer returned response."
"RTN","BPS22PST",75,0)
 ;
"RTN","BPS22PST",76,0)
 S XMSUB="ePharmacy Auto-Reversal Parameter Change: BPS*1.0*22 "
"RTN","BPS22PST",77,0)
 S XMSUB=XMSUB_$P(BPSSITE,U,3)_" #"_$P(BPSSITE,U,2)
"RTN","BPS22PST",78,0)
 S XMDUZ="BPS Patch*1.0*22"
"RTN","BPS22PST",79,0)
 S XMTEXT="BPSX("
"RTN","BPS22PST",80,0)
 ; Define Recipients of Email - Recipients Include:
"RTN","BPS22PST",81,0)
 ; Installer of Patch
"RTN","BPS22PST",82,0)
 ; Holders of PSO EPHARMACY SITE MANAGER Key
"RTN","BPS22PST",83,0)
 ; Gregory Laird (production only)
"RTN","BPS22PST",84,0)
 ; Select team members (production only)
"RTN","BPS22PST",85,0)
 S XMY(DUZ)=""
"RTN","BPS22PST",86,0)
 S USR=0 F  S USR=$O(^XUSEC("PSO EPHARMACY SITE MANAGER",USR)) Q:USR=""  S XMY(USR)=""
"RTN","BPS22PST",87,0)
 I $$PROD^XUPROD(1) D
"RTN","BPS22PST",88,0)
 . S XMY("Gregory.Laird@domain")=""
"RTN","BPS22PST",89,0)
 . S XMY("Mark.Dawson3@domain")=""
"RTN","BPS22PST",90,0)
 . S XMY("Christine.Bullis@domain")=""
"RTN","BPS22PST",91,0)
 . S XMY("Paul.Devine@domain")=""
"RTN","BPS22PST",92,0)
 ; When invoking ^XMD in pre/post-init routine of Kernel Installation and
"RTN","BPS22PST",93,0)
 ; Distribution System (KIDS) build, the calling routine must NEW the DIFROM variable
"RTN","BPS22PST",94,0)
 ; Otherwise, your message will not be delivered.
"RTN","BPS22PST",95,0)
 N DIFROM
"RTN","BPS22PST",96,0)
 D ^XMD                 ; IA# 10070
"RTN","BPS22PST",97,0)
 ;
"RTN","BPS22PST",98,0)
 Q
"RTN","BPSBCKJ")
0^5^B54636858
"RTN","BPSBCKJ",1,0)
BPSBCKJ ;BHAM ISC/AAT - BPS NIGHTLY BACKGROUND JOB ;02/27/2005
"RTN","BPSBCKJ",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,2,5,7,8,22**;JUN 2004;Build 28
"RTN","BPSBCKJ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSBCKJ",4,0)
 ;
"RTN","BPSBCKJ",5,0)
 Q
"RTN","BPSBCKJ",6,0)
 ;
"RTN","BPSBCKJ",7,0)
EN ; The ECME NIGHTLY PROCESS
"RTN","BPSBCKJ",8,0)
 ;
"RTN","BPSBCKJ",9,0)
 ; The list of nightly actions
"RTN","BPSBCKJ",10,0)
 D AUTOREV     ; Auto-Reversals (normal and inpatient)
"RTN","BPSBCKJ",11,0)
 D MAIN^BPSOSK ; Purge BPS LOG
"RTN","BPSBCKJ",12,0)
 D TASKMAN^BPSJAREG ; Do automatic registration.
"RTN","BPSBCKJ",13,0)
 Q
"RTN","BPSBCKJ",14,0)
 ;
"RTN","BPSBCKJ",15,0)
AUTOREV ; The Auto-Reverse Procedure
"RTN","BPSBCKJ",16,0)
 N BDT,BTRAN,BPHARM,BTRAN0,BTRAN1,BTRAN4,BDAYS,BRX,BFIL,BDATE,BNOW,BCLAIM,BRES,BREV,BTEST,REF,BCNT,BTX,X,X1,X2
"RTN","BPSBCKJ",17,0)
 N BTRAN9,BELIG,BDRUG
"RTN","BPSBCKJ",18,0)
 ;
"RTN","BPSBCKJ",19,0)
 S BTEST=0 ; Debugging flag 1 - TEST, 0 - LIVE
"RTN","BPSBCKJ",20,0)
 S BCNT=0 ; Count reversals
"RTN","BPSBCKJ",21,0)
 ;
"RTN","BPSBCKJ",22,0)
 S REF=$NA(^TMP($J,"BPSBCKJ")) K @REF
"RTN","BPSBCKJ",23,0)
 ;
"RTN","BPSBCKJ",24,0)
 S (X1,BNOW)=$$DT^XLFDT()
"RTN","BPSBCKJ",25,0)
 ;
"RTN","BPSBCKJ",26,0)
 ;Define number of days to look back - Auto Reverse days can be from 0-31
"RTN","BPSBCKJ",27,0)
 ;To make sure every claim is caught, moving back 45 days
"RTN","BPSBCKJ",28,0)
 S X2=-45 D C^%DTC S BDT=X
"RTN","BPSBCKJ",29,0)
 ;
"RTN","BPSBCKJ",30,0)
 ;Loop through 'LAST UPDATE' 'AH' index
"RTN","BPSBCKJ",31,0)
 F  S BDT=$O(^BPST("AH",BDT)) Q:'BDT  S BTRAN=0 F  S BTRAN=$O(^BPST("AH",BDT,BTRAN)) Q:'BTRAN  D
"RTN","BPSBCKJ",32,0)
 . W:BTEST !,"TRAN=",BTRAN," ",?20
"RTN","BPSBCKJ",33,0)
 . S BTRAN0=$G(^BPST(BTRAN,0)),BTRAN1=$G(^(1)),BTRAN4=$G(^(4)),BTRAN9=$G(^(9))
"RTN","BPSBCKJ",34,0)
 . I BTRAN0=""!(BTRAN1="") W:BTEST "ZERO OR ONE NODE MISSING" Q
"RTN","BPSBCKJ",35,0)
 . I '$$PAID^BPSOSQ4(BTRAN) W:BTEST "NOT PAID" Q  ; Not paid
"RTN","BPSBCKJ",36,0)
 . S BPHARM=$P(BTRAN1,U,7) I 'BPHARM W:BTEST "NO BPS PHARM" Q  ; BPS PHARMACY
"RTN","BPSBCKJ",37,0)
 . W:BTEST "BPHARM=",$P($G(^BPS(9002313.56,BPHARM,0)),U,1),"  "
"RTN","BPSBCKJ",38,0)
 . ;
"RTN","BPSBCKJ",39,0)
 . ;Handle 'Inpatient' Auto-Reversals
"RTN","BPSBCKJ",40,0)
 . S BREV=$$REVINP(BNOW,BTRAN,BTRAN0,BTRAN1,BPHARM,BTRAN9) Q:BREV
"RTN","BPSBCKJ",41,0)
 . ;
"RTN","BPSBCKJ",42,0)
 . ;Handle Regular Auto-Reversals
"RTN","BPSBCKJ",43,0)
 . S BDAYS=+$P($G(^BPS(9002313.56,BPHARM,0)),U,9)
"RTN","BPSBCKJ",44,0)
 . I 'BDAYS W:BTEST "AUTO-REV DISABLED" Q  ;disabled
"RTN","BPSBCKJ",45,0)
 . I $P(BTRAN4,U,1) Q  ;Reversal claim exist
"RTN","BPSBCKJ",46,0)
 . S BCLAIM=$P(BTRAN0,U,4) I 'BCLAIM W:BTEST "NO BCLAIM" Q
"RTN","BPSBCKJ",47,0)
 . I $P($G(^BPSC(BCLAIM,0)),U,7) W:BTEST "AUTO-REVERSE FLAG" Q 
"RTN","BPSBCKJ",48,0)
 . S BDATE=$P($G(^BPSC(BCLAIM,0)),U,5)
"RTN","BPSBCKJ",49,0)
 . I 'BDATE S BDATE=$P($G(^BPSC(BCLAIM,0)),U,6)
"RTN","BPSBCKJ",50,0)
 . S BDATE=$P(BDATE,".")
"RTN","BPSBCKJ",51,0)
 . I 'BDATE="" W:BTEST "NO DATE" Q
"RTN","BPSBCKJ",52,0)
 . W:BTEST "DATE=",BDATE,"  "
"RTN","BPSBCKJ",53,0)
 . I $$FMDIFF^XLFDT(BNOW,BDATE,1)'>BDAYS W:BTEST "TOO EARLY" Q
"RTN","BPSBCKJ",54,0)
 . S BRX=$P(BTRAN1,U,11) I 'BRX W:BTEST "NO RX" Q
"RTN","BPSBCKJ",55,0)
 . S BFIL=$P(BTRAN1,U,1)
"RTN","BPSBCKJ",56,0)
 . I $$RELDATE(BRX,BFIL) W:BTEST " RELEASED" Q  ;released
"RTN","BPSBCKJ",57,0)
 . S BELIG=$P(BTRAN9,U,4) I BELIG="" W:BTEST "NO ELIGIBILITY" Q
"RTN","BPSBCKJ",58,0)
 . S BDRUG=$$RXAPI1^BPSUTIL1(BRX,6,"E") I BDRUG="" W:BTEST "NO DRUG" Q
"RTN","BPSBCKJ",59,0)
 . S BRES=$$REVERSE(BRX,BFIL,BCLAIM,1)
"RTN","BPSBCKJ",60,0)
 . W:BTEST " *REV CLM=",BCLAIM," STAT=",BRES
"RTN","BPSBCKJ",61,0)
 . I BRES=0!(BRES=4) D
"RTN","BPSBCKJ",62,0)
 .. S (BCNT,@REF@(BRES))=$G(@REF@(BRES))+1
"RTN","BPSBCKJ",63,0)
 .. S @REF@(BRES,BCNT)=BTRAN_U_BCLAIM_U_BRX_U_BFIL_U_BPHARM_U_BELIG_U_BDRUG
"RTN","BPSBCKJ",64,0)
 . ; Any notifications to IB?
"RTN","BPSBCKJ",65,0)
 D BULL(REF) ; Send the bulletin
"RTN","BPSBCKJ",66,0)
 K @REF
"RTN","BPSBCKJ",67,0)
 Q
"RTN","BPSBCKJ",68,0)
 ;
"RTN","BPSBCKJ",69,0)
 ;Auto-Reverse Claims for Current Inpatients
"RTN","BPSBCKJ",70,0)
 ;
"RTN","BPSBCKJ",71,0)
 ;20050810;BEE;Phase III - CR11
"RTN","BPSBCKJ",72,0)
 ;
"RTN","BPSBCKJ",73,0)
REVINP(BNOW,BTRAN,BTRAN0,BTRAN1,BPHARM,BTRAN9) ;
"RTN","BPSBCKJ",74,0)
 N BRX,BFIL,BCLAIM,BDATE,BDRUG,BELIG,BRES,DFN,VAIP
"RTN","BPSBCKJ",75,0)
 ;
"RTN","BPSBCKJ",76,0)
 ;Only process Window fills
"RTN","BPSBCKJ",77,0)
 S BRX=+$P(BTRAN1,U,11) I BRX=0 Q 0
"RTN","BPSBCKJ",78,0)
 S BFIL=+$P(BTRAN1,U)
"RTN","BPSBCKJ",79,0)
 I $$MWC^BPSRPT6(BRX,BFIL)'="W" Q 0
"RTN","BPSBCKJ",80,0)
 ;
"RTN","BPSBCKJ",81,0)
 ;Check for Fill date - Must be equal to T-5
"RTN","BPSBCKJ",82,0)
 S BCLAIM=$P(BTRAN0,U,4) I 'BCLAIM Q 0
"RTN","BPSBCKJ",83,0)
 S BDATE=$$FILDATE(BRX,BFIL)
"RTN","BPSBCKJ",84,0)
 S BDATE=$P(BDATE,".")
"RTN","BPSBCKJ",85,0)
 I 'BDATE="" Q 0
"RTN","BPSBCKJ",86,0)
 I $$FMDIFF^XLFDT(BNOW,BDATE,1)'=5 Q 0
"RTN","BPSBCKJ",87,0)
 ;
"RTN","BPSBCKJ",88,0)
 ;Check for current Inpatient
"RTN","BPSBCKJ",89,0)
 S DFN=+$P(BTRAN0,U,6) I DFN=0 Q 0
"RTN","BPSBCKJ",90,0)
 D IN5^VADPT
"RTN","BPSBCKJ",91,0)
 I $G(VAIP(3))="" Q 0
"RTN","BPSBCKJ",92,0)
 ;
"RTN","BPSBCKJ",93,0)
 S BELIG=$P(BTRAN9,U,4)
"RTN","BPSBCKJ",94,0)
 S BDRUG=$$RXAPI1^BPSUTIL1(BRX,6,"E")
"RTN","BPSBCKJ",95,0)
 ;
"RTN","BPSBCKJ",96,0)
 ;Auto-Reverse Claim
"RTN","BPSBCKJ",97,0)
 S BRES=$$REVERSE(BRX,BFIL,BCLAIM,2)
"RTN","BPSBCKJ",98,0)
 W:BTEST " *REV CLM=",BCLAIM," STAT=",BRES
"RTN","BPSBCKJ",99,0)
 I BRES=0!(BRES=4) D
"RTN","BPSBCKJ",100,0)
 . S (BCNT,@REF@(BRES))=$G(@REF@(BRES))+1
"RTN","BPSBCKJ",101,0)
 . S @REF@(BRES,BCNT)=BTRAN_U_BCLAIM_U_BRX_U_BFIL_U_BPHARM_U_BELIG_U_BDRUG
"RTN","BPSBCKJ",102,0)
 Q 1
"RTN","BPSBCKJ",103,0)
 ;
"RTN","BPSBCKJ",104,0)
RELDATE(BRX,BFIL) ;Get the Released Date
"RTN","BPSBCKJ",105,0)
 I BFIL Q $$RXSUBF1^BPSUTIL1(BRX,52,52.1,+BFIL,17,"I")
"RTN","BPSBCKJ",106,0)
 Q $$RXAPI1^BPSUTIL1(BRX,31,"I")
"RTN","BPSBCKJ",107,0)
 ;
"RTN","BPSBCKJ",108,0)
FILDATE(BRX,BFIL) ;Get the Fill Date
"RTN","BPSBCKJ",109,0)
 I BFIL Q $$RXSUBF1^BPSUTIL1(BRX,52,52.1,+BFIL,.01,"I")
"RTN","BPSBCKJ",110,0)
 Q $$RXAPI1^BPSUTIL1(BRX,22,"I")
"RTN","BPSBCKJ",111,0)
 ;
"RTN","BPSBCKJ",112,0)
REVERSE(BRX,BFIL,BCLAIM,BTYPE) ;Auto-Reverse the claim
"RTN","BPSBCKJ",113,0)
 ;PUBLIC BTEST
"RTN","BPSBCKJ",114,0)
 N BDOS,BRES,BDAT,BMES,BRSN,BPSCOB,BP59
"RTN","BPSBCKJ",115,0)
 I $G(BTEST) Q 0  ; Test mode
"RTN","BPSBCKJ",116,0)
 ;
"RTN","BPSBCKJ",117,0)
 ; Get Date of Service and set reversal reason
"RTN","BPSBCKJ",118,0)
 S BDOS=$$DOSDATE^BPSSCRRS(BRX,BFIL)
"RTN","BPSBCKJ",119,0)
 S BRSN=$S(BTYPE=2:"CURRENT INPATIENT",1:"PRESCRIPTION NOT RELEASED")
"RTN","BPSBCKJ",120,0)
 ;
"RTN","BPSBCKJ",121,0)
 S BP59=$$CLAIM59^BPSUTIL2(BCLAIM) ;get the BPS TRANSACTION IEN for the claim
"RTN","BPSBCKJ",122,0)
 S BPSCOB=$$COB59^BPSUTIL2(BP59) ;get COB for the BPS TRANSACTION IEN
"RTN","BPSBCKJ",123,0)
 ;
"RTN","BPSBCKJ",124,0)
 ; Call ECME to process reversal
"RTN","BPSBCKJ",125,0)
 S BRES=$$EN^BPSNCPDP(BRX,BFIL,BDOS,"AREV","",BRSN,"",,,,BPSCOB)
"RTN","BPSBCKJ",126,0)
 ;
"RTN","BPSBCKJ",127,0)
 ; If successful, log message to the Prescription Activity Log
"RTN","BPSBCKJ",128,0)
 ;  and set the auto-reversal flag
"RTN","BPSBCKJ",129,0)
 S BRES=+BRES,BMES="ECME: AUTO REVERSAL JOB-"_$S(BPSCOB=1:"p",BPSCOB=2:"s",1:"")_$$INSNAME^BPSSCRU6(BP59)
"RTN","BPSBCKJ",130,0)
 I BRES=0 D
"RTN","BPSBCKJ",131,0)
 . D ECMEACT^PSOBPSU1(BRX,BFIL,BMES,.5)
"RTN","BPSBCKJ",132,0)
 . S BDAT(9002313.02,BCLAIM_",",.07)=BTYPE D FILE^DIE("","BDAT")
"RTN","BPSBCKJ",133,0)
 Q BRES
"RTN","BPSBCKJ",134,0)
 ;
"RTN","BPSBCKJ",135,0)
 ;
"RTN","BPSBCKJ",136,0)
BULL(REF) ;Bulletin to the OPECC
"RTN","BPSBCKJ",137,0)
 ;PUBLIC BTEST,DUZ,DT
"RTN","BPSBCKJ",138,0)
 N XMSUB,XMY,XMTEXT,XMDUZ,BLNUM
"RTN","BPSBCKJ",139,0)
 ;
"RTN","BPSBCKJ",140,0)
 I BCNT<1,'$G(BTEST),(+$G(@REF@(4)))=0 Q
"RTN","BPSBCKJ",141,0)
 S BLNUM=0,BCNT=+$G(@REF@(0))
"RTN","BPSBCKJ",142,0)
 S XMSUB="ECME AUTO-REVERSAL PROCESS"
"RTN","BPSBCKJ",143,0)
 I $G(BTEST) D T("*** P L E A S E   D I S R E G A R D    T H I S    E M A I L ***"),T(),T("NOT ACTUALLY REVERSED - THIS IS A TEST"),T()
"RTN","BPSBCKJ",144,0)
 D T("The ECME Nightly Process submitted auto-reversals for the following e-Pharmacy")
"RTN","BPSBCKJ",145,0)
 D T("prescriptions.")
"RTN","BPSBCKJ",146,0)
 D T()
"RTN","BPSBCKJ",147,0)
 D T("TOTAL CLAIMS SUBMITTED FOR AUTO-REVERSALS: "_BCNT)
"RTN","BPSBCKJ",148,0)
 D T()
"RTN","BPSBCKJ",149,0)
 D T("Claims Submitted for Auto-Reversals on "_$$DAT(DT)_":") D ARLIST(0,REF)
"RTN","BPSBCKJ",150,0)
 D T()
"RTN","BPSBCKJ",151,0)
 S BCNT=+$G(@REF@(4))
"RTN","BPSBCKJ",152,0)
 I BCNT'=0 D
"RTN","BPSBCKJ",153,0)
 . D T()
"RTN","BPSBCKJ",154,0)
 . D T("The ECME Nightly Process attempted to auto-reverse the following claims but")
"RTN","BPSBCKJ",155,0)
 . D T("could not because the previous request was IN PROGRESS.  Please verify that")
"RTN","BPSBCKJ",156,0)
 . D T("the previous request is not stranded.")
"RTN","BPSBCKJ",157,0)
 . D T()
"RTN","BPSBCKJ",158,0)
 . D T("Total number of claims that could not be auto-reversed: "_BCNT)
"RTN","BPSBCKJ",159,0)
 . D T()
"RTN","BPSBCKJ",160,0)
 . D T("Claims not auto-reversed on "_$$DAT(DT)_":")
"RTN","BPSBCKJ",161,0)
 . D ARLIST(4,REF)
"RTN","BPSBCKJ",162,0)
 . D T()
"RTN","BPSBCKJ",163,0)
 ;
"RTN","BPSBCKJ",164,0)
 S XMDUZ="BPS PACKAGE",XMTEXT="BTX("
"RTN","BPSBCKJ",165,0)
 S XMY("G.BPS OPECC")=""
"RTN","BPSBCKJ",166,0)
 I $G(DUZ)'<1 S XMY(DUZ)=""
"RTN","BPSBCKJ",167,0)
 D ^XMD
"RTN","BPSBCKJ",168,0)
 Q
"RTN","BPSBCKJ",169,0)
 ;
"RTN","BPSBCKJ",170,0)
T(BTXT) ; Add text to the message
"RTN","BPSBCKJ",171,0)
 ;PUBLIC BLNUM,BTEST
"RTN","BPSBCKJ",172,0)
 S BLNUM=BLNUM+1,BTX(BLNUM)=$G(BTXT," ")
"RTN","BPSBCKJ",173,0)
 I $G(BTEST) W !,$G(BTXT)
"RTN","BPSBCKJ",174,0)
 Q
"RTN","BPSBCKJ",175,0)
 ;
"RTN","BPSBCKJ",176,0)
ARLIST(BRES,REF) ;Auto-Rev List
"RTN","BPSBCKJ",177,0)
 N I,TXT,BCLAIM,BTRAN,Y,BRX,BFIL,BFDATE,BPHARM,BRXN,BPHARMN,BPAT,BPSTAT,BELIG,BDRUG
"RTN","BPSBCKJ",178,0)
 D T()
"RTN","BPSBCKJ",179,0)
 D T("  #  RX/FILL     STATUS DATE     ELIG PATIENT       BPS PHARM  DRUG NAME")
"RTN","BPSBCKJ",180,0)
 D T("------------------------------------------------------------------------------")
"RTN","BPSBCKJ",181,0)
 S I=0 F  S I=$O(@REF@(BRES,I)) Q:'I   D
"RTN","BPSBCKJ",182,0)
 . S Y=@REF@(BRES,I)
"RTN","BPSBCKJ",183,0)
 . S BTRAN=$P(Y,U)
"RTN","BPSBCKJ",184,0)
 . S BCLAIM=$P(Y,U,2)
"RTN","BPSBCKJ",185,0)
 . S BRX=$P(Y,U,3),BRXN=$$RXAPI1^BPSUTIL1(BRX,.01,"I")
"RTN","BPSBCKJ",186,0)
 . S BPAT=$P($G(^DPT(+$$RXAPI1^BPSUTIL1(BRX,2,"I"),0)),U)
"RTN","BPSBCKJ",187,0)
 . S BFIL=$P(Y,U,4)
"RTN","BPSBCKJ",188,0)
 . S BPHARM=$P(Y,U,5),BPHARMN=$P($G(^BPS(9002313.56,BPHARM,0)),U)
"RTN","BPSBCKJ",189,0)
 . S BELIG=$P(Y,U,6)
"RTN","BPSBCKJ",190,0)
 . S BDRUG=$P(Y,U,7)
"RTN","BPSBCKJ",191,0)
 . S BFDATE=$$FILDATE(BRX,BFIL)
"RTN","BPSBCKJ",192,0)
 . S BPSTAT=$$MWC^BPSRPT6(BRX,BFIL)_"/"_$S($$RELDATE(BRX,BFIL)]"":"RL",1:"NR")
"RTN","BPSBCKJ",193,0)
 . S TXT=$J(I,3)_" "_$$J((BRXN_"/"_BFIL),13)_" "_$J(BPSTAT,4)_" "_$$J($$DAT(BFDATE),10)
"RTN","BPSBCKJ",194,0)
 . S TXT=TXT_$J(BELIG,1)_"  "_$$J($E(BPAT,1,18),18)_" "_$J($E(BPHARMN,1,3),3)
"RTN","BPSBCKJ",195,0)
 . S TXT=TXT_"  "_$$J($E(BDRUG,1,18),18)
"RTN","BPSBCKJ",196,0)
 . D T(TXT)
"RTN","BPSBCKJ",197,0)
 D T("------------------------------------------------------------------------------")
"RTN","BPSBCKJ",198,0)
 Q
"RTN","BPSBCKJ",199,0)
 ;
"RTN","BPSBCKJ",200,0)
J(TXT,LEN) ;Left justify
"RTN","BPSBCKJ",201,0)
 Q TXT_$J("",LEN-$L(TXT))
"RTN","BPSBCKJ",202,0)
 ;
"RTN","BPSBCKJ",203,0)
DAT(X,Y) ; Convert FM date to displayable (mm/dd/yy) format.
"RTN","BPSBCKJ",204,0)
 ; -- optional output of time, if $g(y) 
"RTN","BPSBCKJ",205,0)
 N DATE,T
"RTN","BPSBCKJ",206,0)
 S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:"")
"RTN","BPSBCKJ",207,0)
 I $G(Y) S T="."_$E($P(X,".",2)_"000000",1,7) I T>0 S DATE=DATE_" "_$S($E(T,2,3)>12:$E(T,2,3)-12,$E(T,2,3)="00":"00",1:+$E(T,2,3))_":"_$E(T,4,5)_$S($E(T,2,5)>1200:" pm",1:" am")
"RTN","BPSBCKJ",208,0)
 Q DATE
"RTN","BPSNCPD3")
0^13^B67506388
"RTN","BPSNCPD3",1,0)
BPSNCPD3 ;BHAM ISC/LJE - Continuation of BPSNCPDP - DUR HANDLING ;06/16/2004
"RTN","BPSNCPD3",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,6,7,8,10,11,15,19,20,22**;JUN 2004;Build 28
"RTN","BPSNCPD3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSNCPD3",4,0)
 ;
"RTN","BPSNCPD3",5,0)
 ; Due to space considerations, these comments were moved from BPSNPCPD
"RTN","BPSNCPD3",6,0)
 ;   to this routine.
"RTN","BPSNCPD3",7,0)
 ;
"RTN","BPSNCPD3",8,0)
 ; ------------------ Beginning of BPSNCPDP comments ------------------
"RTN","BPSNCPD3",9,0)
 ;Input
"RTN","BPSNCPD3",10,0)
 ; BRXIEN = Prescription IEN
"RTN","BPSNCPD3",11,0)
 ; BFILL  = Fill Number
"RTN","BPSNCPD3",12,0)
 ; DOS    = Date of Service
"RTN","BPSNCPD3",13,0)
 ; BWHERE (RX Action)
"RTN","BPSNCPD3",14,0)
 ;    AREV = Auto-Reversal
"RTN","BPSNCPD3",15,0)
 ;    BB   = Back Billing
"RTN","BPSNCPD3",16,0)
 ;    CRLB = CMOP/OPAI Release & Rebill
"RTN","BPSNCPD3",17,0)
 ;    CRLR = CMOP/OPAI Release & Reverse (successful release)
"RTN","BPSNCPD3",18,0)
 ;    CRLX = CMOP/OPAI unsuccessful release & reverse
"RTN","BPSNCPD3",19,0)
 ;    CRRL = CMOP/OPAI Release - Original claim not paid, submit another claim, no reversal
"RTN","BPSNCPD3",20,0)
 ;    DC   = Discontinue - only reverse un-released PAYABLE DC's, release date check
"RTN","BPSNCPD3",21,0)
 ;           should be in calling routine.
"RTN","BPSNCPD3",22,0)
 ;    DE   = Delete
"RTN","BPSNCPD3",23,0)
 ;    ED   = Edit (includes RX release with NDC edit)
"RTN","BPSNCPD3",24,0)
 ;    ERES = Resubmit from ECME user screen
"RTN","BPSNCPD3",25,0)
 ;    ERWV = Resubmit Without Reversal from ECME user screen (BPS*1*20)
"RTN","BPSNCPD3",26,0)
 ;    ERNB = Resubmit of a TRI/CVA non-billable entry from the ECME user screen (BPS*1*20)
"RTN","BPSNCPD3",27,0)
 ;    EREV = Reversal from ECME user screen
"RTN","BPSNCPD3",28,0)
 ;    HLD  = Put prescription on Hold
"RTN","BPSNCPD3",29,0)
 ;    OREV = Reversal from Outpatient Pharmacy edit screen (BPS*1*20)
"RTN","BPSNCPD3",30,0)
 ;    RSNB = Resubmit Non-Billable TRICARE & CHAMPVA from PSO Reject Info Screen (BPS*1*20)
"RTN","BPSNCPD3",31,0)
 ;    OF   = Original Fill
"RTN","BPSNCPD3",32,0)
 ;    P2   = Original submission from PRO Option, no reversal
"RTN","BPSNCPD3",33,0)
 ;    P2S  = Resubmit from PRO Option
"RTN","BPSNCPD3",34,0)
 ;    PC   = Pull CMOPs
"RTN","BPSNCPD3",35,0)
 ;    PE   = Pull early from suspense
"RTN","BPSNCPD3",36,0)
 ;    PL   = Pull local from suspense
"RTN","BPSNCPD3",37,0)
 ;    PP   = Pull RX (PP) action from Patient Prescription Processing option
"RTN","BPSNCPD3",38,0)
 ;    RF   = Refill
"RTN","BPSNCPD3",39,0)
 ;    RN   = Renew
"RTN","BPSNCPD3",40,0)
 ;    RRL  = Release - Original claim not paid, submit another claim, no reversal
"RTN","BPSNCPD3",41,0)
 ;    RS   = Return-to-Stock
"RTN","BPSNCPD3",42,0)
 ; BILLNDC = Valid NDC# with format 5-4-2
"RTN","BPSNCPD3",43,0)
 ; REVREAS = Reversal Reason
"RTN","BPSNCPD3",44,0)
 ; DURREC  = String of up to three sets of DUR info. Sets are delimited with "~". Each set consists of three "^" pieces:
"RTN","BPSNCPD3",45,0)
 ;             Reason for Service Code
"RTN","BPSNCPD3",46,0)
 ;             Professional Service Code
"RTN","BPSNCPD3",47,0)
 ;             Result of Service Code
"RTN","BPSNCPD3",48,0)
 ; BPOVRIEN = Pointer to BPS NCPDP OVERIDE file.  This parameter will 
"RTN","BPSNCPD3",49,0)
 ;            only be passed if there are overrides entered by the
"RTN","BPSNCPD3",50,0)
 ;            user via the Resubmit with Edits (RED) option in the 
"RTN","BPSNCPD3",51,0)
 ;            user screen.
"RTN","BPSNCPD3",52,0)
 ; BPSAUTH  = Prior authorization code (Prior auth code^Prior auth number)
"RTN","BPSNCPD3",53,0)
 ; BPSCLARF = Submission Clarification Code (external value from #9002313.25), entered by
"RTN","BPSNCPD3",54,0)
 ;            pharmacist and passed by Outpatient Pharmacy to ECME to put into the claim  
"RTN","BPSNCPD3",55,0)
 ; BPCOBIND = (optional, default is Primary) for COB indicators - so when the API is called for the particular
"RTN","BPSNCPD3",56,0)
 ;            COB claim the BPSNCPDP can handle it.
"RTN","BPSNCPD3",57,0)
 ; BPJOBFLG = (optional, default is "F") B - if is called by unqueueing logic in background, F - by other (foreground) process, 
"RTN","BPSNCPD3",58,0)
 ; BPREQIEN = (optional) ien of BPS REQUEST file record, that needs to be unqueued 
"RTN","BPSNCPD3",59,0)
 ; BPSCLOSE = (optional) local array used with BWHERE="EREV" only, if the user had chosen to close the claim after reversal
"RTN","BPSNCPD3",60,0)
 ;   if claim needs to be closed then
"RTN","BPSNCPD3",61,0)
 ;   BPSCLOSE("CLOSE AFT REV")=1
"RTN","BPSNCPD3",62,0)
 ;   BPSCLOSE("CLOSE AFT REV REASON")=<#356.8 ien>
"RTN","BPSNCPD3",63,0)
 ;   BPSCLOSE("CLOSE AFT REV COMMENT")=<some text>
"RTN","BPSNCPD3",64,0)
 ; BPSPLAN  = (optional) IEN of the entry in the GROUP INSURANCE PLAN file (#355.3)
"RTN","BPSNCPD3",65,0)
 ; BPSPRDAT = (optional) local array passed by reference. Contains primary claim data needed to submit a secondary claim.
"RTN","BPSNCPD3",66,0)
 ;            Format:  BPSPRDAT(NCPDP field)
"RTN","BPSNCPD3",67,0)
 ; BPSRTYPE = (optional) rate type ( ien of the file #399.3)
"RTN","BPSNCPD3",68,0)
 ; BPSDELAY = Delay Reason Code (IEN of BPS NCPDP DELAY REASON CODE (#9002313.29), entered by the user
"RTN","BPSNCPD3",69,0)
 ;            in the Back Billing option of Claims Tracking and passed to ECME to put into the claim.
"RTN","BPSNCPD3",70,0)
 ; 
"RTN","BPSNCPD3",71,0)
 ;Output (RESPONSE^MESSAGE^ELIGIBILITY^CLAIMSTATUS^COB^RXCOB^INSURANCE)
"RTN","BPSNCPD3",72,0)
 ; RESPONSE
"RTN","BPSNCPD3",73,0)
 ;    0  Submitted through ECME
"RTN","BPSNCPD3",74,0)
 ;    1  No submission through ECME
"RTN","BPSNCPD3",75,0)
 ;    2  IB not billable
"RTN","BPSNCPD3",76,0)
 ;    3  Claim was closed, not submitted (RTS/Deletes)
"RTN","BPSNCPD3",77,0)
 ;    4  Unable to queue claim
"RTN","BPSNCPD3",78,0)
 ;    5  Incorrect information supplied to ECME
"RTN","BPSNCPD3",79,0)
 ;    6  Inactive ECME - Primarily used for TRICARE/CHAMPVA to say ok to process rx
"RTN","BPSNCPD3",80,0)
 ;    10 Reversal but no resubmit
"RTN","BPSNCPD3",81,0)
 ; MESSAGE = Message associated with the response (error/submitted)
"RTN","BPSNCPD3",82,0)
 ; ELIGIBILITY = V - Veteran, T - TRICARE, C - CHAMPVA
"RTN","BPSNCPD3",83,0)
 ; CLAIMSTATUS = claim status (null or IN PROGRESS/E PAYABLE/etc...)
"RTN","BPSNCPD3",84,0)
 ; COB  = Coordination Of Benefit indicator of the insurance as it is stored in the PATIENT file: 1-primary, 2-secondary, 3-tertiary
"RTN","BPSNCPD3",85,0)
 ; RXCOB =  the payer sequence indicator of the claim which was sent to the payer as a result of this call: 1-primary, 2-secondary)
"RTN","BPSNCPD3",86,0)
 ; INSURANCE = Name of the insurance company that was billed as a result of this call
"RTN","BPSNCPD3",87,0)
 ; 
"RTN","BPSNCPD3",88,0)
 ; ----------------- End of BPSNCPDP comments ----------------------
"RTN","BPSNCPD3",89,0)
 ;
"RTN","BPSNCPD3",90,0)
 ; ----------------- DUR1 ------------------------------------------
"RTN","BPSNCPD3",91,0)
 ; DUR1 is called by PSO to get the reject information
"RTN","BPSNCPD3",92,0)
 ;
"RTN","BPSNCPD3",93,0)
 ;
"RTN","BPSNCPD3",94,0)
 ; IA 4560 supports OP's use of this procedure
"RTN","BPSNCPD3",95,0)
 ;
"RTN","BPSNCPD3",96,0)
 ; Function call for DUR INFORMATION 
"RTN","BPSNCPD3",97,0)
 ; Parameters: BRXIEN = Prescription IEN
"RTN","BPSNCPD3",98,0)
 ;             BFILL = fill number
"RTN","BPSNCPD3",99,0)
 ;             DUR = DUR info passed back
"RTN","BPSNCPD3",100,0)
 ;             ERROR = error passed back
"RTN","BPSNCPD3",101,0)
 ;             BPRXCOB = payer sequence
"RTN","BPSNCPD3",102,0)
 ; Note:
"RTN","BPSNCPD3",103,0)
 ;    DUR("BILLED")=0 if ecme off for pharmacy or no transaction in ECME
"RTN","BPSNCPD3",104,0)
 ;    DUR(<Insurance counter>,"BILLED")=1 if billed through ecme
"RTN","BPSNCPD3",105,0)
DUR1(BRXIEN,BFILL,DUR,ERROR,BPRXCOB) ;
"RTN","BPSNCPD3",106,0)
 N SITE,IEN59,DUR1,DURIEN
"RTN","BPSNCPD3",107,0)
 I '$G(BRXIEN) S DUR("BILLED")=0 Q
"RTN","BPSNCPD3",108,0)
 I $G(BFILL)="" S DUR("BILLED")=0 Q
"RTN","BPSNCPD3",109,0)
 S BPRXCOB=+$G(BPRXCOB)
"RTN","BPSNCPD3",110,0)
 I BPRXCOB=0 S BPRXCOB=1 ;default is Primary
"RTN","BPSNCPD3",111,0)
 ;
"RTN","BPSNCPD3",112,0)
 ; Get Site info and check is ECME is turned on
"RTN","BPSNCPD3",113,0)
 ; If not, set DUR("BILLED")=0 and quit
"RTN","BPSNCPD3",114,0)
 I '$G(BFILL) S SITE=$$RXAPI1^BPSUTIL1(BRXIEN,20,"I")
"RTN","BPSNCPD3",115,0)
 I $G(BFILL) S SITE=$$RXSUBF1^BPSUTIL1(BRXIEN,52,52.1,BFILL,8,"I")
"RTN","BPSNCPD3",116,0)
 I '$$ECMEON^BPSUTIL(SITE) S DUR("BILLED")=0 Q
"RTN","BPSNCPD3",117,0)
 ;
"RTN","BPSNCPD3",118,0)
 ; Set up the Transaction IEN
"RTN","BPSNCPD3",119,0)
 S IEN59=$$IEN59^BPSOSRX(BRXIEN,BFILL,BPRXCOB)
"RTN","BPSNCPD3",120,0)
 I IEN59="" S DUR("BILLED")=0 Q
"RTN","BPSNCPD3",121,0)
 ;
"RTN","BPSNCPD3",122,0)
 ; If the transaction record does not exist, set DUR("BILLED")=0 and quit
"RTN","BPSNCPD3",123,0)
 I '$D(^BPST(IEN59)) S DUR("BILLED")=0 Q
"RTN","BPSNCPD3",124,0)
 ;
"RTN","BPSNCPD3",125,0)
 S DUR(BPRXCOB,"BILLED")=1
"RTN","BPSNCPD3",126,0)
 ;
"RTN","BPSNCPD3",127,0)
 S DUR(BPRXCOB,"ELIGBLT")=$P($G(^BPST(IEN59,9)),U,4)
"RTN","BPSNCPD3",128,0)
 ; Get Insurance Info and set into DUR array
"RTN","BPSNCPD3",129,0)
 S DUR(BPRXCOB,"INSURANCE POINTER")=$$GET1^DIQ(9002313.59902,"1,"_IEN59_",",902.33,"I") ; Insurance Company IEN
"RTN","BPSNCPD3",130,0)
 D GETS^DIQ(9002313.59902,"1,"_IEN59_",","902.05;902.06;902.24;902.25;902.26","E","DUR1","ERROR")
"RTN","BPSNCPD3",131,0)
 S DUR(BPRXCOB,"INSURANCE NAME")=$G(DUR1(9002313.59902,"1,"_IEN59_",",902.24,"E"))  ; Insurance Company Name
"RTN","BPSNCPD3",132,0)
 S DUR(BPRXCOB,"GROUP NUMBER")=$G(DUR1(9002313.59902,"1,"_IEN59_",",902.05,"E"))    ; Insurance Group Number
"RTN","BPSNCPD3",133,0)
 S DUR(BPRXCOB,"GROUP NAME")=$G(DUR1(9002313.59902,"1,"_IEN59_",",902.25,"E"))      ; Insurance Group Name
"RTN","BPSNCPD3",134,0)
 S DUR(BPRXCOB,"PLAN CONTACT")=$G(DUR1(9002313.59902,"1,"_IEN59_",",902.26,"E"))    ; Insurance Contact Number
"RTN","BPSNCPD3",135,0)
 S DUR(BPRXCOB,"CARDHOLDER ID")=$G(DUR1(9002313.59902,"1,"_IEN59_",",902.06,"E"))   ; Cardholder ID
"RTN","BPSNCPD3",136,0)
 ;
"RTN","BPSNCPD3",137,0)
 ; Get Response IEN and Data
"RTN","BPSNCPD3",138,0)
 S DURIEN="",DURIEN=$P(^BPST(IEN59,0),"^",5)
"RTN","BPSNCPD3",139,0)
 D DURRESP(DURIEN,.DUR,BPRXCOB) ; Note: In the future, we may need to get/store DURIEN for each COB
"RTN","BPSNCPD3",140,0)
 Q
"RTN","BPSNCPD3",141,0)
 ;
"RTN","BPSNCPD3",142,0)
DURRESP(DURIEN,DUR,BPRXCOB) ;
"RTN","BPSNCPD3",143,0)
 ;Input Variables:
"RTN","BPSNCPD3",144,0)
 ; DURIEN - Claim Response IEN. Pointer to the BPS RESPONSES File #9002313.03
"RTN","BPSNCPD3",145,0)
 ; BPRXCOB - (Optional) The Payer Sequence:
"RTN","BPSNCPD3",146,0)
 ;   1 - Primary (default)
"RTN","BPSNCPD3",147,0)
 ;   2 - Secondary
"RTN","BPSNCPD3",148,0)
 ;
"RTN","BPSNCPD3",149,0)
 ;Output Variables:
"RTN","BPSNCPD3",150,0)
 ; DUR - Array of DUR related information for a specific claim response in the
"RTN","BPSNCPD3",151,0)
 ;   BPS RESPONSES file in the following format (INSN is the Payer Sequence):
"RTN","BPSNCPD3",152,0)
 ;
"RTN","BPSNCPD3",153,0)
 ; DUR(INSN,"RESPONSE IEN") - Pointer to the RESPONSE file (#9002313.03) for
"RTN","BPSNCPD3",154,0)
 ;   the claim submission
"RTN","BPSNCPD3",155,0)
 ; DUR(INSN,"PCN") - Processor Control Number
"RTN","BPSNCPD3",156,0)
 ; DUR(INSN,"MESSAGE") - The Transmission level specific data, Message field 504
"RTN","BPSNCPD3",157,0)
 ; DUR(INSN,"PAYER MESSAGE") - Message returned from the payer in the Transaction
"RTN","BPSNCPD3",158,0)
 ;   level
"RTN","BPSNCPD3",159,0)
 ; DUR(INSN,"STATUS") - Status of the claim (i.e. REJECTED CLAIM, PAYABLE)
"RTN","BPSNCPD3",160,0)
 ;
"RTN","BPSNCPD3",161,0)
 ; The following four fields are redundant with the fields in the DUR PPS
"RTN","BPSNCPD3",162,0)
 ; array but are provided for backwards compatibility.
"RTN","BPSNCPD3",163,0)
 ; DUR(INSN,"REASON") - Reason for Service Code pointer to BPS NCPDP REASON FOR
"RTN","BPSNCPD3",164,0)
 ;   SERVICE CODE file (#9002313.23)
"RTN","BPSNCPD3",165,0)
 ; DUR(INSN,"PREV FILL DATE") - Plan's Previous Fill Date
"RTN","BPSNCPD3",166,0)
 ; DUR(INSN,"DUR FREE TEXT DESC") - Drug Utilization Review (DUR) description
"RTN","BPSNCPD3",167,0)
 ;   and/or claims rejection free text information from the payer
"RTN","BPSNCPD3",168,0)
 ; DUR(INSN,"DUR ADD MSG TEXT") - Drug Utilization Review (DUR) additional free
"RTN","BPSNCPD3",169,0)
 ;   text information from the payer
"RTN","BPSNCPD3",170,0)
 ;
"RTN","BPSNCPD3",171,0)
 ; The following fields are from the DUR PPS RESPONSE multiple.
"RTN","BPSNCPD3",172,0)
 ; DUR(INSN,"DUR PPS",SEQ,"DUR PPS RESPONSE") - Total number of DUR PPS
"RTN","BPSNCPD3",173,0)
 ;   responses from the payer
"RTN","BPSNCPD3",174,0)
 ; DUR(INSN,"DUR PPS",SEQ,"REASON FOR SERVICE CODE") - Code identifying the
"RTN","BPSNCPD3",175,0)
 ;   type of utilization conflict detected or the reason for the pharmacist
"RTN","BPSNCPD3",176,0)
 ;   professional service
"RTN","BPSNCPD3",177,0)
 ; DUR(INSN,"DUR PPS",SEQ,"CLINICAL SIGNIFICANCE CODE") - Code identifying
"RTN","BPSNCPD3",178,0)
 ;   the significance or severity level of a clinical event as contained
"RTN","BPSNCPD3",179,0)
 ;   in the originating data base
"RTN","BPSNCPD3",180,0)
 ; DUR(INSN,"DUR PPS",SEQ,"OTHER PHARMACY INDICATOR") - Code for the type of
"RTN","BPSNCPD3",181,0)
 ;   pharmacy dispensing the conflicting drug
"RTN","BPSNCPD3",182,0)
 ; DUR(INSN,"DUR PPS",SEQ,"PREVIOUS DATE OF FILL") - Date prescription was
"RTN","BPSNCPD3",183,0)
 ;   previously filled
"RTN","BPSNCPD3",184,0)
 ; DUR(INSN,"DUR PPS",SEQ,"QUANTITY OF PREVIOUS FILL") - Amount expressed in
"RTN","BPSNCPD3",185,0)
 ;   metric decimal units of the conflicting agent that was previously filled
"RTN","BPSNCPD3",186,0)
 ; DUR(INSN,"DUR PPS",SEQ,"DATABASE INDICATOR") - Code identifying the source
"RTN","BPSNCPD3",187,0)
 ;   of drug information used for DUR processing
"RTN","BPSNCPD3",188,0)
 ; DUR(INSN,"DUR PPS",SEQ,"OTHER PRESCRIBER INDICATOR") - Code comparing the
"RTN","BPSNCPD3",189,0)
 ;   prescriber of the current prescription to the prescriber of the previously
"RTN","BPSNCPD3",190,0)
 ;   filled conflicting prescription
"RTN","BPSNCPD3",191,0)
 ; DUR(INSN,"DUR PPS",SEQ,"DUR FREE TEXT MESSAGE") - Text that provides
"RTN","BPSNCPD3",192,0)
 ;   additional detail regarding a DUR conflict
"RTN","BPSNCPD3",193,0)
 ; DUR(INSN,"DUR PPS",SEQ,"DUR ADDITIONAL TEXT") - Descriptive information that
"RTN","BPSNCPD3",194,0)
 ;   further defines the referenced DUR alert
"RTN","BPSNCPD3",195,0)
 ; DUR(INSN,"REJ CODE LST") - List of rejection code(s) returned by the payer
"RTN","BPSNCPD3",196,0)
 ;   separated by commas (i.e. 79,14)
"RTN","BPSNCPD3",197,0)
 ; DUR(INSN,"REJ CODES",SEQ,REJ CODE) - Array of rejection code descriptions
"RTN","BPSNCPD3",198,0)
 ;   where REJ CODE correlates to DUR(INSN,"REJ CODE LST") value(s) and SEQ
"RTN","BPSNCPD3",199,0)
 ;   equals a sequential number
"RTN","BPSNCPD3",200,0)
 ;
"RTN","BPSNCPD3",201,0)
 I '$G(DURIEN) Q
"RTN","BPSNCPD3",202,0)
 S BPRXCOB=+$G(BPRXCOB)
"RTN","BPSNCPD3",203,0)
 I BPRXCOB=0 S BPRXCOB=1 ;default is Primary
"RTN","BPSNCPD3",204,0)
 N ADDMESS,I,DUR1,CLMIEN
"RTN","BPSNCPD3",205,0)
 S DUR(BPRXCOB,"RESPONSE IEN")=DURIEN
"RTN","BPSNCPD3",206,0)
 ;
"RTN","BPSNCPD3",207,0)
 ;Get BIN from claim
"RTN","BPSNCPD3",208,0)
 S CLMIEN=$$GET1^DIQ(9002313.03,DURIEN,.01,"I")
"RTN","BPSNCPD3",209,0)
 S DUR(BPRXCOB,"BIN")=$$GET1^DIQ(9002313.02,CLMIEN_",",101) ; BIN Number
"RTN","BPSNCPD3",210,0)
 ;
"RTN","BPSNCPD3",211,0)
 ;Get PCN from claim
"RTN","BPSNCPD3",212,0)
 S DUR(BPRXCOB,"PCN")=$$GET1^DIQ(9002313.02,CLMIEN_",",104) ; PCN Number
"RTN","BPSNCPD3",213,0)
 ;
"RTN","BPSNCPD3",214,0)
 ; Get the Transmission specific data (Message)
"RTN","BPSNCPD3",215,0)
 S DUR(BPRXCOB,"MESSAGE")=$$GET1^DIQ(9002313.03,DURIEN_",",504,"E")
"RTN","BPSNCPD3",216,0)
 ;
"RTN","BPSNCPD3",217,0)
 ; Get the Additional Message Information from the transaction
"RTN","BPSNCPD3",218,0)
 D ADDMESS^BPSSCRLG(DURIEN,1,.ADDMESS)
"RTN","BPSNCPD3",219,0)
 M DUR(BPRXCOB,"PAYER MESSAGE")=ADDMESS
"RTN","BPSNCPD3",220,0)
 ;
"RTN","BPSNCPD3",221,0)
 ; Get the other transaction level data
"RTN","BPSNCPD3",222,0)
 D GETS^DIQ(9002313.0301,"1,"_DURIEN_",","501;567.01*","E","DUR1","ERROR")
"RTN","BPSNCPD3",223,0)
 S DUR(BPRXCOB,"STATUS")=$G(DUR1(9002313.0301,"1,"_DURIEN_",",501,"E"))                  ;Status of Response
"RTN","BPSNCPD3",224,0)
 ;
"RTN","BPSNCPD3",225,0)
 ; The following four fields are redundant with the fields in the DUR PPS 
"RTN","BPSNCPD3",226,0)
 ;   multiple but are needed for backwards compatibility with the OP code
"RTN","BPSNCPD3",227,0)
 S DUR(BPRXCOB,"REASON")=$G(DUR1(9002313.1101,"1,1,"_DURIEN_",",439,"E"))                ;Reason for Service Code
"RTN","BPSNCPD3",228,0)
 S DUR(BPRXCOB,"PREV FILL DATE")=$G(DUR1(9002313.1101,"1,1,"_DURIEN_",",530,"E"))        ;Previous Date of Fill
"RTN","BPSNCPD3",229,0)
 S DUR(BPRXCOB,"DUR FREE TEXT DESC")=$G(DUR1(9002313.1101,"1,1,"_DURIEN_",",544,"E"))    ;DUR Free Text Message from Payer
"RTN","BPSNCPD3",230,0)
 S DUR(BPRXCOB,"DUR ADD MSG TEXT")=$G(DUR1(9002313.1101,"1,1,"_DURIEN_",",570,"E"))      ;DUR Additional Message Text from Payer
"RTN","BPSNCPD3",231,0)
 ;
"RTN","BPSNCPD3",232,0)
 ; Get DUR PPS RESPONSE multiple values
"RTN","BPSNCPD3",233,0)
 S DUR(BPRXCOB,"DUR PPS RESPONSE")=""
"RTN","BPSNCPD3",234,0)
 F I=1:1 Q:'$D(DUR1(9002313.1101,I_",1,"_DURIEN_",",.01))  D
"RTN","BPSNCPD3",235,0)
 . S DUR(BPRXCOB,"DUR PPS RESPONSE")=I
"RTN","BPSNCPD3",236,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"DUR PPS RESPONSE")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",.01,"E"))
"RTN","BPSNCPD3",237,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"REASON FOR SERVICE CODE")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",439,"E"))
"RTN","BPSNCPD3",238,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"CLINICAL SIGNIFICANCE CODE")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",528,"E"))
"RTN","BPSNCPD3",239,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"OTHER PHARMACY INDICATOR")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",529,"E"))
"RTN","BPSNCPD3",240,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"PREVIOUS DATE OF FILL")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",530,"E"))
"RTN","BPSNCPD3",241,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"QUANTITY OF PREVIOUS FILL")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",531,"E"))
"RTN","BPSNCPD3",242,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"DATABASE INDICATOR")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",532,"E"))
"RTN","BPSNCPD3",243,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"OTHER PRESCRIBER INDICATOR")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",533,"E"))
"RTN","BPSNCPD3",244,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"DUR FREE TEXT MESSAGE")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",544,"E"))
"RTN","BPSNCPD3",245,0)
 . S DUR(BPRXCOB,"DUR PPS",I,"DUR ADDITIONAL TEXT")=$G(DUR1(9002313.1101,I_",1,"_DURIEN_",",570,"E"))
"RTN","BPSNCPD3",246,0)
 ;
"RTN","BPSNCPD3",247,0)
 ; Get DUR reject codes and description and store in DUR 
"RTN","BPSNCPD3",248,0)
 D GETS^DIQ(9002313.0301,"1,"_DURIEN_",","511*","I","DUR1","ERROR") ;get DUR codes and descriptions
"RTN","BPSNCPD3",249,0)
 S DUR(BPRXCOB,"REJ CODE LST")=""
"RTN","BPSNCPD3",250,0)
 F I=1:1 Q:'$D(DUR1(9002313.03511,I_",1,"_DURIEN_","))  D
"RTN","BPSNCPD3",251,0)
 . N REJX,REJN
"RTN","BPSNCPD3",252,0)
 . S REJX=$G(DUR1(9002313.03511,I_",1,"_DURIEN_",",.01,"I")) Q:REJX=""     ; external reject code
"RTN","BPSNCPD3",253,0)
 . S REJN=+$O(^BPSF(9002313.93,"B",REJX,0)) Q:'REJN                        ; internal reject code ien
"RTN","BPSNCPD3",254,0)
 . S DUR(BPRXCOB,"REJ CODES",I,REJX)=$P($G(^BPSF(9002313.93,REJN,0)),U,2)  ; reject code description
"RTN","BPSNCPD3",255,0)
 . S DUR(BPRXCOB,"REJ CODE LST")=DUR(BPRXCOB,"REJ CODE LST")_","_REJX
"RTN","BPSNCPD3",256,0)
 S DUR(BPRXCOB,"REJ CODE LST")=$E(DUR(BPRXCOB,"REJ CODE LST"),2,9999)
"RTN","BPSNCPD3",257,0)
 Q
"RTN","BPSNCPDP")
0^6^B103818340
"RTN","BPSNCPDP",1,0)
BPSNCPDP ;BHAM ISC/LJE/SS - API to submit a claim to ECME ;11/7/07  16:58
"RTN","BPSNCPDP",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,4,2,5,6,7,8,10,11,19,20,22**;JUN 2004;Build 28
"RTN","BPSNCPDP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSNCPDP",4,0)
 ;
"RTN","BPSNCPDP",5,0)
 ; Reference to $$PROD^XUPROD supported by DBIA 4440
"RTN","BPSNCPDP",6,0)
 ; Reference to $$GETNDC^PSONDCUT supported by DBIA 4705
"RTN","BPSNCPDP",7,0)
 ; Reference to Patient file (#2) supported by DBIA 10035
"RTN","BPSNCPDP",8,0)
 ;
"RTN","BPSNCPDP",9,0)
 ; For comments regarding this API, see routine BPSNCPD3.
"RTN","BPSNCPDP",10,0)
 ;
"RTN","BPSNCPDP",11,0)
EN(BRXIEN,BFILL,DOS,BWHERE,BILLNDC,REVREAS,DURREC,BPOVRIEN,BPSCLARF,BPSAUTH,BPCOBIND,BPJOBFLG,BPREQIEN,BPSCLOSE,BPSPLAN,BPSPRDAT,BPSRTYPE,BPSDELAY) ;
"RTN","BPSNCPDP",12,0)
 N BPRETV,CLMSTAT,BRX,RESPONSE,BPSCOB,IEN59,DFN,PNAME,WFLG,BPLCK,BPACTTYP,BPRET,BPSQUIT,SITE
"RTN","BPSNCPDP",13,0)
 N BPNEWCLM,OLDRESP,BPPAYABL,BPSTART,BPRESLT,BPSELIG,BP77NEW,TODAY,BPPREVRQ,BPSSTAT
"RTN","BPSNCPDP",14,0)
 ; test not ecme active
"RTN","BPSNCPDP",15,0)
 I '$$PROD^XUPROD,'$P($G(^BPS(9002313.99,1,0)),"^",3) Q "1^ECME switch is not on for the site"
"RTN","BPSNCPDP",16,0)
 ;== Set default values and other required vars
"RTN","BPSNCPDP",17,0)
 ; default is foreground ("F")
"RTN","BPSNCPDP",18,0)
 S BPJOBFLG=$S($G(BPJOBFLG)="":"F",1:$G(BPJOBFLG))
"RTN","BPSNCPDP",19,0)
 S RESPONSE="",CLMSTAT="",BP77NEW=0
"RTN","BPSNCPDP",20,0)
 S BPLCK=0 ;0 - default for "B" jobs
"RTN","BPSNCPDP",21,0)
 S REVREAS=$G(REVREAS),DURREC=$G(DURREC),BPSCLARF=$G(BPSCLARF),BPSAUTH=$G(BPSAUTH),BPOVRIEN=$G(BPOVRIEN),BPSDELAY=$G(BPSDELAY)
"RTN","BPSNCPDP",22,0)
 ; BPCOBIND will be used as a flag to indicate the following
"RTN","BPSNCPDP",23,0)
 ;    If BPCOBIND>0 then the API is called for the particular COB claim
"RTN","BPSNCPDP",24,0)
 ;    if BPCOBIND=0 then the API is called for a whole RX/RF - Outpatient Pharmacy doesn't care about COB
"RTN","BPSNCPDP",25,0)
 ;         when the pharmacy user enters, deletes or edits RX/refills
"RTN","BPSNCPDP",26,0)
 S BPCOBIND=+$G(BPCOBIND)
"RTN","BPSNCPDP",27,0)
 ;
"RTN","BPSNCPDP",28,0)
 ; BPSCOB variable will be used to store COB value (default is PRIMARY) in this function only
"RTN","BPSNCPDP",29,0)
 S BPSCOB=$S(BPCOBIND>0:BPCOBIND,1:1)
"RTN","BPSNCPDP",30,0)
 ;
"RTN","BPSNCPDP",31,0)
 ; Remove semi-colons from reversal reason BPS*1*20
"RTN","BPSNCPDP",32,0)
 S REVREAS=$TR(REVREAS,";","-")
"RTN","BPSNCPDP",33,0)
 ;
"RTN","BPSNCPDP",34,0)
 ; Default is original fill
"RTN","BPSNCPDP",35,0)
 S BRXIEN=$G(BRXIEN)
"RTN","BPSNCPDP",36,0)
 I '$G(BFILL) S BFILL=0
"RTN","BPSNCPDP",37,0)
 ;
"RTN","BPSNCPDP",38,0)
 ; Get prescription number
"RTN","BPSNCPDP",39,0)
 S BRX=$$RXAPI1^BPSUTIL1(BRXIEN,.01,"I")
"RTN","BPSNCPDP",40,0)
 ;
"RTN","BPSNCPDP",41,0)
 ; Make sure fill date is not in the future or empty
"RTN","BPSNCPDP",42,0)
 S TODAY=$$DT^XLFDT
"RTN","BPSNCPDP",43,0)
 I '$G(DOS)!($G(DOS)>TODAY) S DOS=$$DOSDATE^BPSSCRRS(BRXIEN,BFILL)
"RTN","BPSNCPDP",44,0)
 ;
"RTN","BPSNCPDP",45,0)
 ; Get the NDC if it was not passed in
"RTN","BPSNCPDP",46,0)
 I $G(BILLNDC)="" S BILLNDC=$$GETNDC^PSONDCUT(BRXIEN,BFILL)
"RTN","BPSNCPDP",47,0)
 ;
"RTN","BPSNCPDP",48,0)
 ; Patient Info
"RTN","BPSNCPDP",49,0)
 S DFN=$$RXAPI1^BPSUTIL1(BRXIEN,2,"I"),PNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","BPSNCPDP",50,0)
 ;
"RTN","BPSNCPDP",51,0)
 ; Check parameters and vars
"RTN","BPSNCPDP",52,0)
 S BPRETV=$$CHCKPAR^BPSOSRX8(BRXIEN,BRX,$G(BWHERE),DFN,PNAME) I +BPRETV=0 S CLMSTAT=$P(BPRETV,U,2),RESPONSE=5 G END
"RTN","BPSNCPDP",53,0)
 ;
"RTN","BPSNCPDP",54,0)
 ; Calculate IEN59
"RTN","BPSNCPDP",55,0)
 S IEN59=$$IEN59^BPSOSRX(BRXIEN,BFILL,BPSCOB) I IEN59="" S CLMSTAT="BPS Transaction IEN could not be calculated",RESPONSE=1 G END
"RTN","BPSNCPDP",56,0)
 ;
"RTN","BPSNCPDP",57,0)
 ;populate COB fields from BPS TRANSACTION to resubmit secondary claims from the User Screen
"RTN","BPSNCPDP",58,0)
 ;if $G(BPSPRDAT("NEW COB DATA"))=1 then the resubmit requested from the BPS COB PROCESS SECOND TRICARE and the user can change the data
"RTN","BPSNCPDP",59,0)
 I BPSCOB=2,$$ACTTYPE^BPSOSRX5(BWHERE)="UC",'$G(BPSPRDAT("NEW COB DATA")) N:$D(BPSRTYPE)=0 BPSRTYPE N:$D(BPSPLAN)=0 BPSPLAN N:$D(BPSPRDAT)=0 BPSPRDAT I $$SECDATA^BPSPRRX6(BRXIEN,BFILL,.BPSPLAN,.BPSPRDAT,.BPSRTYPE)=0 D  G END
"RTN","BPSNCPDP",60,0)
 . S CLMSTAT="Insufficient data to resubmit the secondary claim, use Process Secondary/TRICARE Rx to ECME option.",RESPONSE=5
"RTN","BPSNCPDP",61,0)
 ;
"RTN","BPSNCPDP",62,0)
 ; Initialize log
"RTN","BPSNCPDP",63,0)
 D LOG^BPSOSL(IEN59,$T(+0)_"-Start of claim","DT")
"RTN","BPSNCPDP",64,0)
 D LOG^BPSOSL(IEN59,$T(+0)_"-BWHERE = "_BWHERE)
"RTN","BPSNCPDP",65,0)
 D LOG^BPSOSL(IEN59,$T(+0)_"-Job flag = "_BPJOBFLG_$S(BPJOBFLG="B":" BPS REQUEST ien = "_$G(BPREQIEN),1:""))
"RTN","BPSNCPDP",66,0)
 ;
"RTN","BPSNCPDP",67,0)
 ; Check if we need to print the messages to the screen (WFLG=1 : YES)
"RTN","BPSNCPDP",68,0)
 S WFLG=0
"RTN","BPSNCPDP",69,0)
 S:BPJOBFLG="F" WFLG=$$PRINTSCR^BPSOSRX8(BWHERE)
"RTN","BPSNCPDP",70,0)
 ;
"RTN","BPSNCPDP",71,0)
 ; Lock the Rx and Fill while putting it on the queue to prevent two jobs from being 
"RTN","BPSNCPDP",72,0)
 ;   activated at the same time.  This is only for foreground jobs.
"RTN","BPSNCPDP",73,0)
 ;   Background jobs are called from REQST99^BPSOSRX5 and the RX/RF should be already locked by this point.
"RTN","BPSNCPDP",74,0)
 I BPJOBFLG="F" D  I 'BPLCK G END
"RTN","BPSNCPDP",75,0)
 . S BPLCK=$$LOCKRF^BPSOSRX(BRXIEN,BFILL,10,$G(IEN59),$T(+0))
"RTN","BPSNCPDP",76,0)
 . I 'BPLCK S RESPONSE=4,CLMSTAT="Unable to acquire the lock needed to put the RX and fill on the queue"
"RTN","BPSNCPDP",77,0)
 ;
"RTN","BPSNCPDP",78,0)
 ; Determine the action type
"RTN","BPSNCPDP",79,0)
 ; If foreground job then can be C,U and UC actions types
"RTN","BPSNCPDP",80,0)
 S BPACTTYP=""
"RTN","BPSNCPDP",81,0)
 I BPJOBFLG="F" S BPACTTYP=$$ACTTYPE^BPSOSRX5(BWHERE)
"RTN","BPSNCPDP",82,0)
 ;if background/unqueueing job then only two action types are allowed - C and U
"RTN","BPSNCPDP",83,0)
 I BPJOBFLG="B" D  I RESPONSE=5 G END
"RTN","BPSNCPDP",84,0)
 . S BPACTTYP=$P($G(^BPS(9002313.77,+$G(BPREQIEN),1)),U,4)
"RTN","BPSNCPDP",85,0)
 . I BPACTTYP="" S RESPONSE=5,CLMSTAT="Unknown Action type in BPS REQUEST ien="_BPREQIEN
"RTN","BPSNCPDP",86,0)
 ;
"RTN","BPSNCPDP",87,0)
 ;code to handle "general" submit/reversal as opposed to processing a claim for a specific payer sequence (primary, secondary)
"RTN","BPSNCPDP",88,0)
 ;ECME and IB always know the payer sequence and always should set the proper BPCOBIND parameter
"RTN","BPSNCPDP",89,0)
 ;thus if BPCOBIND=0 then the API is called by Pharmacy. If so then the CLAIM action (not reversal) should be done for primary only.
"RTN","BPSNCPDP",90,0)
 S BPSQUIT=0
"RTN","BPSNCPDP",91,0)
 I BPCOBIND=0 D  I BPSQUIT=1 S CLMSTAT="The secondary claim needs to be reversed first.",RESPONSE=5 G END
"RTN","BPSNCPDP",92,0)
 . I BPACTTYP=""!(BPACTTYP="C") S BPCOBIND=1 Q
"RTN","BPSNCPDP",93,0)
 . ;code to handle "general" reversal
"RTN","BPSNCPDP",94,0)
 . N BPSECLM
"RTN","BPSNCPDP",95,0)
 . ;check if there is the secondary e-claim
"RTN","BPSNCPDP",96,0)
 . S BPSECLM=$$FINDECLM^BPSPRRX5(BRXIEN,BFILL,2)
"RTN","BPSNCPDP",97,0)
 . ;quit if we have secondary claim and it is payable or in progress - it needs to be reversed first
"RTN","BPSNCPDP",98,0)
 . I BPSECLM=1!(BPSECLM=3) S BPSQUIT=1
"RTN","BPSNCPDP",99,0)
 . S BPCOBIND=1
"RTN","BPSNCPDP",100,0)
 ;
"RTN","BPSNCPDP",101,0)
 ;== IF BPJOBFLG="F" THEN determine if there are any scheduled/active/in process requests for the RX/RF 
"RTN","BPSNCPDP",102,0)
 ;CHKREQST^BPSOSRX7 returns
"RTN","BPSNCPDP",103,0)
 ; negative number^message : cannot be accepted for some reason 
"RTN","BPSNCPDP",104,0)
 ; 0 : can be accepted because there are NO requests for this RX/RF, 
"RTN","BPSNCPDP",105,0)
 ;      we will create a new record in BPS REQUEST for it and ACTIVATE it.
"RTN","BPSNCPDP",106,0)
 ; 1 : there are ACTIVATED/IN PROCESS requests already for this RX/RF
"RTN","BPSNCPDP",107,0)
 S BPPREVRQ="-10^Background queuing." ;default
"RTN","BPSNCPDP",108,0)
 I BPJOBFLG="F" D  I BPPREVRQ'=0 G STATUS:RESPONSE=0,END:RESPONSE>0
"RTN","BPSNCPDP",109,0)
 . S BPPREVRQ=$$CHKREQST^BPSOSRX7(BRXIEN,BFILL,.BPRESLT)
"RTN","BPSNCPDP",110,0)
 . D LOG^BPSOSL(IEN59,$T(+0)_"-CHKREQ^BPSOSRX7 result: "_BPPREVRQ)
"RTN","BPSNCPDP",111,0)
 . ;if error
"RTN","BPSNCPDP",112,0)
 . I BPPREVRQ<0 S RESPONSE=4,CLMSTAT=$P(BPPREVRQ,U,2) D LOG^BPSOSL(IEN59,$T(+0)_"- - Cannot be accepted because of issues with already scheduled requests")
"RTN","BPSNCPDP",113,0)
 . ;if there are prior requests for the RX/RF in the queue already then schedule additional request(s) 
"RTN","BPSNCPDP",114,0)
 . ;for the future and quit since we do not know the result of prior requests 
"RTN","BPSNCPDP",115,0)
 . I BPPREVRQ>0 D
"RTN","BPSNCPDP",116,0)
 . . D LOG^BPSOSL(IEN59,$T(+0)_"-There are requests in the queue, do not process - schedule additional request(s)")
"RTN","BPSNCPDP",117,0)
 . . I BPACTTYP="U" S BPRET=$$SCHREQ^BPSNCPD5(.BP77NEW,BRXIEN,BFILL,DOS,BWHERE,$G(BILLNDC),REVREAS,DURREC,BPOVRIEN,BPSCLARF,BPSAUTH,BPSDELAY,IEN59,BPCOBIND,BPPREVRQ,"U",.BPSCLOSE,$G(BPSRTYPE),$G(BPSPLAN),.BPSPRDAT)
"RTN","BPSNCPDP",118,0)
 . . I BPACTTYP="UC" D
"RTN","BPSNCPDP",119,0)
 . . . S BPRET=$$SCHREQ^BPSNCPD5(.BP77NEW,BRXIEN,BFILL,DOS,BWHERE,$G(BILLNDC),REVREAS,DURREC,BPOVRIEN,BPSCLARF,BPSAUTH,BPSDELAY,IEN59,BPCOBIND,BPPREVRQ,"U",.BPSCLOSE,$G(BPSRTYPE),$G(BPSPLAN),.BPSPRDAT)
"RTN","BPSNCPDP",120,0)
 . . . I +BPRET=0 S BPRET=$$SCHREQ^BPSNCPD5(.BP77NEW,BRXIEN,BFILL,DOS,BWHERE,$G(BILLNDC),REVREAS,DURREC,BPOVRIEN,BPSCLARF,BPSAUTH,BPSDELAY,IEN59,BPCOBIND,BP77NEW,"C",.BPSCLOSE,$G(BPSRTYPE),$G(BPSPLAN),.BPSPRDAT)
"RTN","BPSNCPDP",121,0)
 . . I BPACTTYP="C" S BPRET=$$SCHREQ^BPSNCPD5(.BP77NEW,BRXIEN,BFILL,DOS,BWHERE,$G(BILLNDC),REVREAS,DURREC,BPOVRIEN,BPSCLARF,BPSAUTH,BPSDELAY,IEN59,BPCOBIND,BPPREVRQ,"C",.BPSCLOSE,$G(BPSRTYPE),$G(BPSPLAN),.BPSPRDAT)
"RTN","BPSNCPDP",122,0)
 . . I +BPRET=0 S RESPONSE=0,CLMSTAT=$P(BPRET,U,2) D LOG^BPSOSL(IEN59,$T(+0)_"-The new request(s) scheduled. The last one for the RX/RF now is: "_(BP77NEW)) Q
"RTN","BPSNCPDP",123,0)
 . . I +BPRET>0 S RESPONSE=+BPRET,CLMSTAT=$P(BPRET,U,2) D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot create request(s)")
"RTN","BPSNCPDP",124,0)
 ;
"RTN","BPSNCPDP",125,0)
 ;== So we can continue only if either 
"RTN","BPSNCPDP",126,0)
 ;  BPJOBFLG="B" 
"RTN","BPSNCPDP",127,0)
 ;  or 
"RTN","BPSNCPDP",128,0)
 ;  BPJOBFLG="F" and BPPREVRQ=0
"RTN","BPSNCPDP",129,0)
 ;
"RTN","BPSNCPDP",130,0)
 ; If a new RX/RF - i.e. RX/RF was never processed thru ECME - process and quit
"RTN","BPSNCPDP",131,0)
 S BPNEWCLM=$S(+$G(^BPST(IEN59,0)):0,1:1)
"RTN","BPSNCPDP",132,0)
 ; get pre-existing RX/RFs status
"RTN","BPSNCPDP",133,0)
 S OLDRESP=$P($$STATUS^BPSOSRX(BRXIEN,BFILL,0,,BPSCOB),U,1)
"RTN","BPSNCPDP",134,0)
 ; check if the payer IS going to PAY according the last response
"RTN","BPSNCPDP",135,0)
 S BPPAYABL=$$PAYABLE^BPSOSRX5(OLDRESP)
"RTN","BPSNCPDP",136,0)
 ; set starttime
"RTN","BPSNCPDP",137,0)
 S BPSTART=$$STTM^BPSNCPD4()
"RTN","BPSNCPDP",138,0)
 ;  
"RTN","BPSNCPDP",139,0)
 ; if this is a new RX/RF
"RTN","BPSNCPDP",140,0)
 I BPNEWCLM D NEWCLAIM^BPSNCPD6 G STATUS:RESPONSE=0,END:RESPONSE>0
"RTN","BPSNCPDP",141,0)
 ;
"RTN","BPSNCPDP",142,0)
 ; if we do not have a status for the previous claim AND this is not a reversal request - treat it as a new claim
"RTN","BPSNCPDP",143,0)
 ; this will be the case when resubmitting a non-billable entry (bps*1*20)
"RTN","BPSNCPDP",144,0)
 I (OLDRESP=""),(BPACTTYP'="U") D NEWCLAIM^BPSNCPD6 G STATUS:RESPONSE=0,END:RESPONSE>0
"RTN","BPSNCPDP",145,0)
 ;
"RTN","BPSNCPDP",146,0)
 ; if we do not have a status for the pre-existing claim AND this is a reversal request - DO NOT reverse
"RTN","BPSNCPDP",147,0)
 I (OLDRESP=""),(BPACTTYP="U") D RVNEW^BPSNCPD6 G END
"RTN","BPSNCPDP",148,0)
 ;
"RTN","BPSNCPDP",149,0)
 ;== Further below - all claims with some response (i.e. OLDRESP]""=1)
"RTN","BPSNCPDP",150,0)
 ;
"RTN","BPSNCPDP",151,0)
 ; if Back Billing - impossible
"RTN","BPSNCPDP",152,0)
 I BWHERE="BB" D BB^BPSNCPD6 G END
"RTN","BPSNCPDP",153,0)
 ;
"RTN","BPSNCPDP",154,0)
 ; If returning to stock or deleting and the previous claim was not paid, then no reversal is needed
"RTN","BPSNCPDP",155,0)
 ;   so close the prescription and quit
"RTN","BPSNCPDP",156,0)
 ; Note: this is inherited "fuzzy logic" - 
"RTN","BPSNCPDP",157,0)
 ; it checks only two statuses to determine that the claim "was not paid"
"RTN","BPSNCPDP",158,0)
 I OLDRESP'["E PAYABLE",OLDRESP'["E REVERSAL REJECTED",(",RS,DE,"[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",159,0)
 . D CLOSE2^BPSBUTL(BRXIEN,BFILL,BWHERE)
"RTN","BPSNCPDP",160,0)
 . S RESPONSE=3
"RTN","BPSNCPDP",161,0)
 . S CLMSTAT="Claim was not payable so it has been closed.  No ECME claim created."
"RTN","BPSNCPDP",162,0)
 . D DISPL^BPSNCPD4(WFLG,RESPONSE_U_CLMSTAT_"^D^2",$G(BPSELIG))
"RTN","BPSNCPDP",163,0)
 . D LOG^BPSOSL(IEN59,$T(+0)_"-"_CLMSTAT)
"RTN","BPSNCPDP",164,0)
 ;
"RTN","BPSNCPDP",165,0)
 ; Reversals for Payable claims 
"RTN","BPSNCPDP",166,0)
 ; (Note: BPSCLOSE can be used in this case only)
"RTN","BPSNCPDP",167,0)
 I BPPAYABL,BPACTTYP="U" D RVPAID^BPSNCPD6 G STATUS:RESPONSE=0,END:RESPONSE>0
"RTN","BPSNCPDP",168,0)
 ;
"RTN","BPSNCPDP",169,0)
 ; Resubmits without doing a Reversal - special hidden action on ECME User Screen (BPS*1*20)
"RTN","BPSNCPDP",170,0)
 I BWHERE="ERWV" D RVRSNPD^BPSNCPD6 G STATUS:RESPONSE=0,END:RESPONSE>0
"RTN","BPSNCPDP",171,0)
 ;
"RTN","BPSNCPDP",172,0)
 ; Reversals+Resubmits for Payable claims
"RTN","BPSNCPDP",173,0)
 I BPPAYABL,BPACTTYP="UC" D RVRSPAID^BPSNCPD6 G STATUS:((RESPONSE=0)!(RESPONSE=10)),END:RESPONSE>0
"RTN","BPSNCPDP",174,0)
 ;
"RTN","BPSNCPDP",175,0)
 ; Resubmits for Payable claims - DO NOT resubmit
"RTN","BPSNCPDP",176,0)
 I BPPAYABL,BPACTTYP="C" D RSPAID^BPSNCPD6 G END
"RTN","BPSNCPDP",177,0)
 ;
"RTN","BPSNCPDP",178,0)
 ; Reversals for Non-Payable claims - DO NOT reverse
"RTN","BPSNCPDP",179,0)
 I 'BPPAYABL,BPACTTYP="U" D RVNPAID^BPSNCPD6 G END
"RTN","BPSNCPDP",180,0)
 ;
"RTN","BPSNCPDP",181,0)
 ; Resubmits AND Reversals+Resubmits for Non-Payable claims
"RTN","BPSNCPDP",182,0)
 I 'BPPAYABL,((BPACTTYP="C")!(BPACTTYP="UC")) D RVRSNPD^BPSNCPD6 G STATUS:RESPONSE=0,END:RESPONSE>0
"RTN","BPSNCPDP",183,0)
 ;
"RTN","BPSNCPDP",184,0)
 S RESPONSE=5,CLMSTAT="Unknown error"
"RTN","BPSNCPDP",185,0)
 G END
"RTN","BPSNCPDP",186,0)
 ;
"RTN","BPSNCPDP",187,0)
 ;== Display status
"RTN","BPSNCPDP",188,0)
STATUS ;
"RTN","BPSNCPDP",189,0)
 ;if successful scheduling or/and activation of the request then make sure the background job is running
"RTN","BPSNCPDP",190,0)
 I BPJOBFLG="F",BPLCK D UNLCKRF^BPSOSRX(BRXIEN,BFILL,$G(IEN59),$T(+0)) S BPLCK=0 ;to prevent unlocking in END
"RTN","BPSNCPDP",191,0)
 I (RESPONSE=0)!(RESPONSE=10) D LOG^BPSOSL(IEN59,$T(+0)_"-Call RUNNING^BPSOSRX") D RUNNING^BPSOSRX()
"RTN","BPSNCPDP",192,0)
 I WFLG W !!,"Processing ",$S(BPSCOB=1:"Primary claim...",BPSCOB=2:"Secondary claim...",1:"claim with Unknown Payer Sequence...")
"RTN","BPSNCPDP",193,0)
 I BPJOBFLG="F" D
"RTN","BPSNCPDP",194,0)
 . ; If the Write Flag is off and this is TRICARE/CHAMPVA, set Write Flag to 2
"RTN","BPSNCPDP",195,0)
 . ; STATUS^BPSNCPD1 will not display messages but will wait the same amount of time as if it were writing messages
"RTN","BPSNCPDP",196,0)
 . ; This needs to be done so that TRICARE/CHAMPVA claims get a chance to complete before continuing
"RTN","BPSNCPDP",197,0)
 . ; Otherwise, the claim will be IN PROGRESS, which will create the bulletin (code below) and OP/CMOP will 
"RTN","BPSNCPDP",198,0)
 . ;   not process correctly (keep on suspense queue, etc)
"RTN","BPSNCPDP",199,0)
 . I 'WFLG,$G(BPSELIG)="T"!($G(BPSELIG)="C") S WFLG=2
"RTN","BPSNCPDP",200,0)
 . I 'WFLG H 1
"RTN","BPSNCPDP",201,0)
 . E  D STATUS^BPSNCPD1(BRXIEN,BFILL,+$G(BPPAYABL),$S(BPACTTYP="U":1,1:0),BPSTART,BWHERE,$G(BP77NEW),BPSCOB,$G(BPSELIG),IEN59,WFLG)
"RTN","BPSNCPDP",202,0)
 ;
"RTN","BPSNCPDP",203,0)
 ;== Clean up and quit
"RTN","BPSNCPDP",204,0)
END ;
"RTN","BPSNCPDP",205,0)
 ; BPSELIG and other variables are established by inference in BPSNCPD6.
"RTN","BPSNCPDP",206,0)
 I BPJOBFLG="F",BPLCK D UNLCKRF^BPSOSRX(BRXIEN,BFILL,$G(IEN59),$T(+0)) S BPLCK=0
"RTN","BPSNCPDP",207,0)
 ; Get Site in case we send a Bulletin
"RTN","BPSNCPDP",208,0)
 S SITE=$$GETSITE^BPSOSRX8(BRXIEN,BFILL)
"RTN","BPSNCPDP",209,0)
 ;if foreground AND we can't schedule request for any reason AND this is not OP - send bulletin
"RTN","BPSNCPDP",210,0)
 I BPJOBFLG="F",RESPONSE=4,",AREV,BB,ERES,ERWV,ERNB,EREV,P2,P2S,"'[(","_BWHERE_",") D BULL^BPSNCPD1(BRXIEN,BFILL,$G(SITE),$G(DFN),$G(PNAME),"",$G(CLMSTAT),$G(RESPONSE),$G(BPSCOB))
"RTN","BPSNCPDP",211,0)
 I $G(BPSELIG)="" S BPSELIG=""
"RTN","BPSNCPDP",212,0)
 ; Send Bulletin if TRICARE or CHAMPVA is IN PROGRESS and this is not a release process
"RTN","BPSNCPDP",213,0)
 S BPSSTAT=$S($G(BRXIEN):$P($$STATUS^BPSOSRX(BRXIEN,BFILL,,,BPSCOB),U),1:"")
"RTN","BPSNCPDP",214,0)
 ;
"RTN","BPSNCPDP",215,0)
 I $G(IEN59) D
"RTN","BPSNCPDP",216,0)
 . D LOG^BPSOSL(IEN59,$T(+0)_"-Nearing end of first process, BPSELIG="_BPSELIG_", BPSSTAT="_BPSSTAT)
"RTN","BPSNCPDP",217,0)
 . I BPSELIG="T"!(BPSELIG="C"),BPSSTAT="IN PROGRESS",$G(REVREAS)'="RX RELEASE-NDC CHANGE",BWHERE="PC" D LOG^BPSOSL(IEN59,$T(+0)_"-Would have sent bulletin")
"RTN","BPSNCPDP",218,0)
 ;
"RTN","BPSNCPDP",219,0)
 I BPSELIG="T"!(BPSELIG="C"),BPSSTAT="IN PROGRESS",$G(REVREAS)'="RX RELEASE-NDC CHANGE",",CRLB,CRLR,CRLX,CRRL,PC,RRL,"'[(","_BWHERE_",") D BULL^BPSNCPD1(BRXIEN,BFILL,SITE,$G(DFN),$G(PNAME),BPSELIG,"","",$G(BPSCOB))
"RTN","BPSNCPDP",220,0)
 ;
"RTN","BPSNCPDP",221,0)
 S:'$D(RESPONSE) RESPONSE=1
"RTN","BPSNCPDP",222,0)
 K MOREDATA
"RTN","BPSNCPDP",223,0)
 I $G(IEN59) D
"RTN","BPSNCPDP",224,0)
 . N MSG
"RTN","BPSNCPDP",225,0)
 . S MSG="First Process Complete-RESPONSE="_$G(RESPONSE)
"RTN","BPSNCPDP",226,0)
 . I $G(RESPONSE)'=0 S MSG=MSG_", CLMSTAT="_$G(CLMSTAT)
"RTN","BPSNCPDP",227,0)
 . D LOG^BPSOSL(IEN59,$T(+0)_"-"_MSG)
"RTN","BPSNCPDP",228,0)
 ;
"RTN","BPSNCPDP",229,0)
 ; The function $$ECMESND returns the following:
"RTN","BPSNCPDP",230,0)
 ;   Response ^ Message ^ Eligibility ^ Claim Status ^ COB ^
"RTN","BPSNCPDP",231,0)
 ;   RxCOB ^ Insurance
"RTN","BPSNCPDP",232,0)
 ; Response =
"RTN","BPSNCPDP",233,0)
 ;   0  Submitted through ECME
"RTN","BPSNCPDP",234,0)
 ;   1  No submission through ECME
"RTN","BPSNCPDP",235,0)
 ;   2  IB not billable
"RTN","BPSNCPDP",236,0)
 ;   3  Claim was closed, not submitted (RTS/Deletes)
"RTN","BPSNCPDP",237,0)
 ;   4  Unable to queue claim
"RTN","BPSNCPDP",238,0)
 ;   5  Incorrect information supplied to ECME
"RTN","BPSNCPDP",239,0)
 ;   6  Inactive ECME - Primarily used for TRICARE/CHAMPVA to
"RTN","BPSNCPDP",240,0)
 ;      say ok to process Rx
"RTN","BPSNCPDP",241,0)
 ;   10 Reversal but no resubmit
"RTN","BPSNCPDP",242,0)
 ; Message = Message indicating whether the claim was submitted
"RTN","BPSNCPDP",243,0)
 ; Eligibility = V, Veteran;  T, TRICARE; C, CHAMPVA
"RTN","BPSNCPDP",244,0)
 ; Claim Status = IN PROGRESS if incomplete; final status (e.g.
"RTN","BPSNCPDP",245,0)
 ;   E PAYABLE or E REJECTED) if complete; null if non-billable
"RTN","BPSNCPDP",246,0)
 ; COB  = COB indicator as stored in the INSURANCE TYPE sub-file
"RTN","BPSNCPDP",247,0)
 ;   of the PATIENT file
"RTN","BPSNCPDP",248,0)
 ; RxCOB = COB indicator sent to the payer and stored in the
"RTN","BPSNCPDP",249,0)
 ;   BPS TRANSACTIONS file
"RTN","BPSNCPDP",250,0)
 ; Insurance = Name of the insurance company that was billed as
"RTN","BPSNCPDP",251,0)
 ;   a result of this call
"RTN","BPSNCPDP",252,0)
 ;
"RTN","BPSNCPDP",253,0)
 Q RESPONSE_U_$G(CLMSTAT)_U_BPSELIG_U_BPSSTAT_U_$$CLMINFO^BPSUTIL2(+$G(IEN59))
"RTN","BPSNCPDP",254,0)
 ;
"RTN","BPSNCPDP",255,0)
 ;BPSNCPDP
"RTN","BPSPHAR")
0^7^B1773022
"RTN","BPSPHAR",1,0)
BPSPHAR ;BHAM ISC/BEE - ECME MGR PHAR OPTION ;14-FEB-05
"RTN","BPSPHAR",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,2,5,22**;JUN 2004;Build 28
"RTN","BPSPHAR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSPHAR",4,0)
 ;
"RTN","BPSPHAR",5,0)
 ; This routine is called by the BPS SETUP PHARMACY menu option. It updates
"RTN","BPSPHAR",6,0)
 ; several fields in the BPS PHARMACIES file.
"RTN","BPSPHAR",7,0)
 ;
"RTN","BPSPHAR",8,0)
 Q
"RTN","BPSPHAR",9,0)
 ;
"RTN","BPSPHAR",10,0)
EN ; Main Entry Point
"RTN","BPSPHAR",11,0)
 N D0,DA,DI,DIC,DLAYGO,DIE,DIRUT,DQ,DR,DTOUT,DUOUT,X,Y
"RTN","BPSPHAR",12,0)
 ;
"RTN","BPSPHAR",13,0)
 ; First select the pharmacy or enter a new one
"RTN","BPSPHAR",14,0)
 W !! S DIC(0)="QEALM",(DLAYGO,DIC)=9002313.56,DIC("A")="Select BPS PHARMACIES NAME: "
"RTN","BPSPHAR",15,0)
 D ^DIC
"RTN","BPSPHAR",16,0)
 ;
"RTN","BPSPHAR",17,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSPHAR",18,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(Y)=-1) Q
"RTN","BPSPHAR",19,0)
 ;
"RTN","BPSPHAR",20,0)
 ;Pull internal entry
"RTN","BPSPHAR",21,0)
 S DA=$P($G(Y),U) Q:'$G(Y)
"RTN","BPSPHAR",22,0)
 ;
"RTN","BPSPHAR",23,0)
 ; If new BPS Pharmacy, default the CMOP Switch and Auto-Reversal Parameter
"RTN","BPSPHAR",24,0)
 I $P(Y,U,3)=1 D
"RTN","BPSPHAR",25,0)
 . N DIE,DR,DTOUT
"RTN","BPSPHAR",26,0)
 . S DIE=9002313.56,DR="1////0;.09////5"
"RTN","BPSPHAR",27,0)
 . D ^DIE
"RTN","BPSPHAR",28,0)
 ;
"RTN","BPSPHAR",29,0)
 ; Display the BPS Pharmacy name, NCPDP #, and NPI
"RTN","BPSPHAR",30,0)
 W !!,"NAME: ",$P($G(^BPS(9002313.56,DA,0)),U,1)
"RTN","BPSPHAR",31,0)
 W !,"STATUS: ",$$GET1^DIQ(9002313.56,DA,.1,"E")
"RTN","BPSPHAR",32,0)
 W !,"NCPDP #: ",$P($G(^BPS(9002313.56,DA,0)),U,2)
"RTN","BPSPHAR",33,0)
 W !,"NPI: ",$P($G(^BPS(9002313.56,DA,"NPI")),U,1)
"RTN","BPSPHAR",34,0)
 ;
"RTN","BPSPHAR",35,0)
 ; Now edit OUTPATIENT SITE, CMOP SWITCH, AUTO-REVERSE PARAMETER, 
"RTN","BPSPHAR",36,0)
 ;   and the DEFAULT DEA #
"RTN","BPSPHAR",37,0)
 S DIE=9002313.56
"RTN","BPSPHAR",38,0)
 S DR="13800;1;.09;.03"
"RTN","BPSPHAR",39,0)
 S DR(2,9002313.5601)=".01"
"RTN","BPSPHAR",40,0)
 D ^DIE
"RTN","BPSPHAR",41,0)
 ;
"RTN","BPSPHAR",42,0)
 Q
"RTN","BPSSCR")
0^1^B3027394
"RTN","BPSSCR",1,0)
BPSSCR ;BHAM ISC/SS - ECME USER SCREEN MAIN ;10-MAR-2005
"RTN","BPSSCR",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,22**;JUN 2004;Build 28
"RTN","BPSSCR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCR",4,0)
 ;USER SCREEN
"RTN","BPSSCR",5,0)
 Q
"RTN","BPSSCR",6,0)
EN ; -- main entry point for BPS ECME USER SCREEN
"RTN","BPSSCR",7,0)
 D EN^VALM("BPS LSTMN ECME USRSCR")
"RTN","BPSSCR",8,0)
 Q
"RTN","BPSSCR",9,0)
 ;
"RTN","BPSSCR",10,0)
HDR ; -- header code
"RTN","BPSSCR",11,0)
 S VALMHDR(1)=$$HDR^BPSSCR01(1)
"RTN","BPSSCR",12,0)
 S VALMHDR(2)=$$HDR^BPSSCR01(2)
"RTN","BPSSCR",13,0)
 S VALMHDR(3)=$$HDR^BPSSCR01(3)
"RTN","BPSSCR",14,0)
 Q
"RTN","BPSSCR",15,0)
 ;
"RTN","BPSSCR",16,0)
INIT ; -- init variables and list array
"RTN","BPSSCR",17,0)
 D KILINSGL ;clean up insurance list
"RTN","BPSSCR",18,0)
 W !,"Please wait..."
"RTN","BPSSCR",19,0)
 S VALMCNT=$$INIT^BPSSCR01()
"RTN","BPSSCR",20,0)
 Q
"RTN","BPSSCR",21,0)
 ;
"RTN","BPSSCR",22,0)
HELP ; -- help code
"RTN","BPSSCR",23,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","BPSSCR",24,0)
 Q
"RTN","BPSSCR",25,0)
 ;
"RTN","BPSSCR",26,0)
EXIT ; -- exit code
"RTN","BPSSCR",27,0)
 D CLEANUP
"RTN","BPSSCR",28,0)
 Q
"RTN","BPSSCR",29,0)
 ;
"RTN","BPSSCR",30,0)
EXPND ; -- expand code
"RTN","BPSSCR",31,0)
 Q
"RTN","BPSSCR",32,0)
 ;
"RTN","BPSSCR",33,0)
CLEANUP ;
"RTN","BPSSCR",34,0)
 K @VALMAR
"RTN","BPSSCR",35,0)
 D KILINSGL ;clean up insurance list
"RTN","BPSSCR",36,0)
 S BPARR("TEMPCV")=""   ; ensure Temp CV flag is cleared
"RTN","BPSSCR",37,0)
 Q
"RTN","BPSSCR",38,0)
 ; BPINSNAM - insurance name; BPPHONE - insurance phone number
"RTN","BPSSCR",39,0)
CHKINSUR(BPINSNAM,BPPHONE) ; returns a unique number for insurance (among those found in claims)
"RTN","BPSSCR",40,0)
 N BPINSID,BPMAXN
"RTN","BPSSCR",41,0)
 I $L(BPINSNAM)=0 S BPINSNAM="UNKNOWN"
"RTN","BPSSCR",42,0)
 I $L(BPPHONE)=0 S BPPHONE="N/A"
"RTN","BPSSCR",43,0)
 S BPINSID=+$G(^TMP($J,"BPSSCRINS","VAL",BPINSNAM,BPPHONE))
"RTN","BPSSCR",44,0)
 I BPINSID=0 D
"RTN","BPSSCR",45,0)
 . S BPMAXN=$G(^TMP($J,"BPSSCRINS","MAXN"))+1
"RTN","BPSSCR",46,0)
 . S ^TMP($J,"BPSSCRINS","VAL",BPINSNAM,BPPHONE)=BPMAXN
"RTN","BPSSCR",47,0)
 . S ^TMP($J,"BPSSCRINS","MAXN")=BPMAXN
"RTN","BPSSCR",48,0)
 Q +$G(^TMP($J,"BPSSCRINS","VAL",BPINSNAM,BPPHONE))
"RTN","BPSSCR",49,0)
 ;
"RTN","BPSSCR",50,0)
KILINSGL ;
"RTN","BPSSCR",51,0)
 K ^TMP($J,"BPSSCRINS")
"RTN","BPSSCR",52,0)
 Q
"RTN","BPSSCR",53,0)
 ;
"RTN","BPSSCRCV")
0^2^B61968340
"RTN","BPSSCRCV",1,0)
BPSSCRCV ;BHAM ISC/SS - ECME SCREEN CHANGE VIEW ;05-APR-05
"RTN","BPSSCRCV",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,11,14,20,22**;JUN 2004;Build 28
"RTN","BPSSCRCV",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRCV",4,0)
 ;USER SCREEN
"RTN","BPSSCRCV",5,0)
 Q
"RTN","BPSSCRCV",6,0)
 ;****
"RTN","BPSSCRCV",7,0)
 ;This software is using PARAMETER TOOLS (see XT*7.3*26) to store user's settings:
"RTN","BPSSCRCV",8,0)
 ;PARAMETER DEFINITION NAME="BPS USRSCR" (file #8989.51, IA# 2263)
"RTN","BPSSCRCV",9,0)
 ;ENTITY is "USR" , i.e. IEN in ^VA(200  -- see definition for "BPS USRSCR"
"RTN","BPSSCRCV",10,0)
 ;INSTANCEs are as follows:
"RTN","BPSSCRCV",11,0)
 ;1.01 ONE/ALL USERS --'U' ONE USER, 'A' ALL; Display claims for ONE or ALL users 
"RTN","BPSSCRCV",12,0)
 ;1.02 ONE/ALL PATIENTS --'P' FOR ONE PATIENT; 'A' FOR ALL; Display claims for ONE/ALL PATIENTS 
"RTN","BPSSCRCV",13,0)
 ;1.03 ONE/ALL RX --'R' FOR ONE RX; 'A' FOR ALL; Display claims for ONE or ALL RX 
"RTN","BPSSCRCV",14,0)
 ;1.04 HOURS/DAYS -- 'D' FOR DAYS; 'H' FOR HOURS; Use HOURS or DAYS to specify timeframe 
"RTN","BPSSCRCV",15,0)
 ;1.05 TIMEFRAME -- NUMBER Depends on the value of the field "USR SCR HOURS/DAYS" this field will
"RTN","BPSSCRCV",16,0)
 ;store the default number of HOURS from NOW or DAYS from TODAY to select claims to display 
"RTN","BPSSCRCV",17,0)
 ;1.06 REJECTED/PAYABLE --'R' FOR REJECTS; 'P' FOR PAYABLES; 'U' FOR UNSTRANDED; 'A' FOR ALL; Display Rejects or Payables or Unstranded or ALL claims 
"RTN","BPSSCRCV",18,0)
 ;1.07 RELEASED/NOT RELEASED --'R' FOR RELEASED; 'N' FOR NON-RELEASED; 'A' FOR ALL; Display Released Rxs or Non-Released Rxs or ALL 
"RTN","BPSSCRCV",19,0)
 ;1.08 CMOP/MAIL/WINDOW --'C' FOR CMOP; 'M' FOR MAIL;'W' FOR WINDOW;'A' FOR ALL; Display CMOP or Mail or Window or ALL Rxs 
"RTN","BPSSCRCV",20,0)
 ;1.09 REALTIME/BACKBILL --'R' FOR REALTIME; 'B' FOR BACKBILLS; 'P' FOR PRO Option; 'S' FOR ECME User Screen Resubmits;
"RTN","BPSSCRCV",21,0)
 ;      'A' FOR ALL; Display RealTime, Backbills, PRO Option, Resubmission, or ALL
"RTN","BPSSCRCV",22,0)
 ;1.1 REJECT CODE/ALL --'R' FOR REJECT CODE; 'A' FOR ALL; Display Specific Reject Code or ALL Reject
"RTN","BPSSCRCV",23,0)
 ;Codes 0 means ALL Reject Codes otherwise - Reject Code value 
"RTN","BPSSCRCV",24,0)
 ;1.11 SPECIFIC/ALL INSURANCES --'I' FOR SPECIFIC INSURANCE(S);'A' FOR ALL; Display Specific Insurance Company(s) or All null - ALL otherwise - pointer to INSURANCE COMPANY file #36 
"RTN","BPSSCRCV",25,0)
 ;1.12 SORT LIST --'T' FOR TRANSACTION DATE;'D' FOR DIVISION; 'I' FOR INSURANCE; 'C' FOR REJECT CODE; 
"RTN","BPSSCRCV",26,0)
 ;'P' FOR PATIENT NAME -- 'N' FOR DRUG NAME; 'B' FOR BILL TYPE (BB/P2/RT/RS); 'L' FOR FILL LOCATION;
"RTN","BPSSCRCV",27,0)
 ;'R' FOR RELEASED/NON-RELEASED -- 'A' FOR ACTIVE/DISCONTINUED; the field used to sort claims in the list 
"RTN","BPSSCRCV",28,0)
 ;1.13 ALL ECME PHARMACY DIVISIONS --'D' FOR DIVISION; 'A' FOR ALL; 
"RTN","BPSSCRCV",29,0)
 ;1.14 SELECTED INSURANCE -- Single, or multiple, insurance(s) to select claims for the User Screen, to store INSURANCE COMPANY pointer (#36) 
"RTN","BPSSCRCV",30,0)
 ;1.15 SELECTED REJECTED CODE --POINTER TO BPS NCPDP REJECT CODES FILE (#9002313.93) Reject code selected by the user to filter claims.
"RTN","BPSSCRCV",31,0)
 ;1.16 SELECTED USER -- POINTER TO NEW PERSON FILE (#200) Selected user for the user screen 
"RTN","BPSSCRCV",32,0)
 ;1.17 SELECTED PATIENT -- POINTER TO PATIENT FILE (#2) Selected patient for the User Screen 
"RTN","BPSSCRCV",33,0)
 ;1.18 SELECTED RX -- POINTER TO PRESCRIPTION FILE (#52) Selected RX 
"RTN","BPSSCRCV",34,0)
 ;1.19 NON-BILLABLE TRI/CVA ENTRIES OPEN/CLOSED/ALL -- 'O' Open; 'C' Closed; 'A' All
"RTN","BPSSCRCV",35,0)
 ;2    ECME PHARMACY DIVISION -- the list of POINTERs TO BPS PHARMACIES FILE (#9002313.56) separated by ";"
"RTN","BPSSCRCV",36,0)
 ;should start and end with ";", example: ";4;5;"
"RTN","BPSSCRCV",37,0)
 ;2.01 ELIGIBILITY TYPE --'V' FOR VETERAN;'T' FOR TRICARE;'C' FOR CHAMPVA;'A' FOR ALL; Display claims for specific Eligibility Type or ALL (BNT BPS*1.0*7)
"RTN","BPSSCRCV",38,0)
 ;2.02 OPEN/CLOSED/ALL --'O' OPEN CLAIMS;'C' CLOSED CLAIMS;'A' FOR ALL; Display Open, Closed, or ALL claims (BNT BPS*1.0*7)
"RTN","BPSSCRCV",39,0)
 ;2.03 SUBMISSION TYPE --'B' BILLING REQUESTS;'R' REVERSALS;'A' FOR ALL; Display specific submission type claims or ALL (BNT BPS*1.0*7)
"RTN","BPSSCRCV",40,0)
 ;2.04 INSURANCES -- List of POINTERs to the INSURANCE COMPANY FILE (#36) separated by ";"
"RTN","BPSSCRCV",41,0)
 ;should start and end with ";", example: ";4;5;"
"RTN","BPSSCRCV",42,0)
 ;NOTE: use D ^XPAREDIT to add/edit values
"RTN","BPSSCRCV",43,0)
 ;
"RTN","BPSSCRCV",44,0)
 ;*****
"RTN","BPSSCRCV",45,0)
 ;
"RTN","BPSSCRCV",46,0)
CV ;
"RTN","BPSSCRCV",47,0)
 N BPSRESCV,BPSTMPCV,DIR,Y
"RTN","BPSSCRCV",48,0)
 D FULL^VALM1
"RTN","BPSSCRCV",49,0)
 W @IOF
"RTN","BPSSCRCV",50,0)
 S BPSTMPCV=$G(BPARR("TEMPCV"))   ; Define Temp View Flag before BPARR is killed
"RTN","BPSSCRCV",51,0)
 K BPARR
"RTN","BPSSCRCV",52,0)
 I +$G(DUZ)=0 D ERRMSG^BPSSCRCV("Unknown User") Q
"RTN","BPSSCRCV",53,0)
 N BPDUZ7
"RTN","BPSSCRCV",54,0)
 S BPDUZ7=+DUZ
"RTN","BPSSCRCV",55,0)
 ;always get current profile from the file
"RTN","BPSSCRCV",56,0)
 D READPROF^BPSSCRSL(.BPARR,BPDUZ7)
"RTN","BPSSCRCV",57,0)
 ; BPARR("1.13") is the parameter for Pharmacy Division. 
"RTN","BPSSCRCV",58,0)
 ; If BPARR("1.13") is defined, the user has a preferred view defined.
"RTN","BPSSCRCV",59,0)
 I ($G(BPSTMPCV)=1)&($G(BPARR("1.13"))'="") D
"RTN","BPSSCRCV",60,0)
 . S DIR(0)="Y"
"RTN","BPSSCRCV",61,0)
 . S DIR("A")="Restore your Preferred View and exit Change View (Y/N)"
"RTN","BPSSCRCV",62,0)
 . D ^DIR
"RTN","BPSSCRCV",63,0)
 . S BPSRESCV=Y
"RTN","BPSSCRCV",64,0)
 I $G(BPSRESCV)=1 G CV1     ; User replied YES - restore to preferred view.
"RTN","BPSSCRCV",65,0)
 D SAVEVIEW^BPSSCR01(.BPARR)
"RTN","BPSSCRCV",66,0)
 ;edit current profile
"RTN","BPSSCRCV",67,0)
 D EDITPROF(.BPARR,.BPDUZ7)
"RTN","BPSSCRCV",68,0)
 ;ask user if need to save everything in USR PROFILE file 
"RTN","BPSSCRCV",69,0)
 ;(except SORT LIST field)
"RTN","BPSSCRCV",70,0)
 N BPSRT S BPSRT=BPARR(1.12)
"RTN","BPSSCRCV",71,0)
 K BPARR(1.12)
"RTN","BPSSCRCV",72,0)
 D ENDEDIT^BPSSCRSL(.BPARR,+BPDUZ7)
"RTN","BPSSCRCV",73,0)
 S BPARR(1.12)=BPSRT
"RTN","BPSSCRCV",74,0)
CV1 ;
"RTN","BPSSCRCV",75,0)
 D SAVEVIEW^BPSSCR01(.BPARR)
"RTN","BPSSCRCV",76,0)
 S VALMBG=1
"RTN","BPSSCRCV",77,0)
 D REDRAW^BPSSCRUD("Updating screen...")
"RTN","BPSSCRCV",78,0)
 Q
"RTN","BPSSCRCV",79,0)
 ;edit user profile for CHANGE VIEW
"RTN","BPSSCRCV",80,0)
EDITPROF(BPARR,BPDUZ7) ;
"RTN","BPSSCRCV",81,0)
 I +$G(DUZ)=0 D ERRMSG("Unknown User") Q
"RTN","BPSSCRCV",82,0)
 I $G(BPSRESCV)="^" Q
"RTN","BPSSCRCV",83,0)
 N BP1,BPTF,BPQ,BPINP
"RTN","BPSSCRCV",84,0)
 N BPRET
"RTN","BPSSCRCV",85,0)
 N DIR,DR,DIE,DA
"RTN","BPSSCRCV",86,0)
 ;get ONE/ALL USERS?
"RTN","BPSSCRCV",87,0)
 ;EDITFLD(FILENO,FLDNO,RECIEN,CODESET,PRMTMSG,DFLTCODE)  ;
"RTN","BPSSCRCV",88,0)
 S BPRET=$$DS^BPSSCRDS(.BPARR,+BPDUZ7) ;get divisions
"RTN","BPSSCRCV",89,0)
 Q:BPRET=-2  ;quit due to timeout or ^
"RTN","BPSSCRCV",90,0)
 Q:$$EDITFLD(2.01,+BPDUZ7,"S^V:VETERAN;T:TRICARE;C:CHAMPVA;A:ALL","Select Certain Eligibility Type or (A)ll","V",.BPARR)=-1
"RTN","BPSSCRCV",91,0)
 S BPQ=0 F  D  Q:BPQ'=0
"RTN","BPSSCRCV",92,0)
 . S BPINP=$$EDITFLD(1.01,+BPDUZ7,"S^U:ONE USER;A:ALL","Display One ECME (U)ser or (A)LL","ALL",.BPARR)
"RTN","BPSSCRCV",93,0)
 . S:BPINP=-1 BPQ=-1 S:$P(BPINP,U,2)="A" BPQ=1 I BPQ'=0 Q
"RTN","BPSSCRCV",94,0)
 . S BPINP=$$EDITFLD(1.16,+BPDUZ7,"P^VA(200,","Select User","",.BPARR)
"RTN","BPSSCRCV",95,0)
 . S:BPINP=-1 BPQ=-1 S:$P(BPINP,U,2)'="" BPQ=1 I BPQ'=0 Q
"RTN","BPSSCRCV",96,0)
 Q:BPQ=-1  ;quit due to timeout or ^
"RTN","BPSSCRCV",97,0)
 S BPQ=0 F  D  Q:BPQ'=0
"RTN","BPSSCRCV",98,0)
 . S BPINP=$$EDITFLD(1.02,+BPDUZ7,"S^P:ONE PATIENT;A:ALL","Display One (P)atient or (A)LL","ALL",.BPARR)
"RTN","BPSSCRCV",99,0)
 . S:BPINP=-1 BPQ=-1 S:$P(BPINP,U,2)="A" BPQ=1 I BPQ'=0 Q
"RTN","BPSSCRCV",100,0)
 . S BPINP=$$EDITFLD(1.17,+BPDUZ7,"P^DPT(","Select Patient","",.BPARR)
"RTN","BPSSCRCV",101,0)
 . S:BPINP=-1 BPQ=-1 S:$P(BPINP,U,2)'="" BPQ=1 I BPQ'=0 Q
"RTN","BPSSCRCV",102,0)
 Q:BPQ=-1  ;quit due to timeout or ^
"RTN","BPSSCRCV",103,0)
 S BPQ=0 F  D  Q:BPQ'=0
"RTN","BPSSCRCV",104,0)
 . S BPINP=$$EDITFLD(1.03,+BPDUZ7,"S^R:ONE RX;A:ALL","Display One (R)x or (A)LL","ALL",.BPARR)
"RTN","BPSSCRCV",105,0)
 . S:BPINP=-1 BPQ=-1 S:$P(BPINP,U,2)="A" BPQ=1 I BPQ'=0 Q
"RTN","BPSSCRCV",106,0)
 . S BPINP=$$EDITRX^BPSSCRPR(1.18,+BPDUZ7,"Select RX","",.BPARR)
"RTN","BPSSCRCV",107,0)
 . S:BPINP=-1 BPQ=-1 S:$P(BPINP,U,2)'="" BPQ=1 I BPQ'=0 Q
"RTN","BPSSCRCV",108,0)
 Q:BPQ=-1  ;quit due to timeout or ^
"RTN","BPSSCRCV",109,0)
 S BPINP=$$EDITFLD(1.04,+BPDUZ7,"S^D:DAYS;H:HOURS","Activity Timeframe (H)ours or (D)ays","DAYS",.BPARR)
"RTN","BPSSCRCV",110,0)
 I BPINP=-1 Q  ;quit due to timeout or ^
"RTN","BPSSCRCV",111,0)
 S BPTF=$P(BPINP,U,2)
"RTN","BPSSCRCV",112,0)
 Q:$$EDITFLD(1.05,+BPDUZ7,"N^1:999:0","Activity Timeframe Value",$S(BPTF="H":24,1:7),.BPARR)=-1
"RTN","BPSSCRCV",113,0)
 Q:$$EDITFLD(2.02,+BPDUZ7,"S^O:OPEN CLAIMS;C:CLOSED CLAIMS;A:ALL","Select Open/Closed or All Claims","O",.BPARR)=-1
"RTN","BPSSCRCV",114,0)
 Q:$$EDITFLD(1.19,+BPDUZ7,"S^O:Open Non-Billable Entries;C:Closed Non-Billable Entries;A:ALL","Display (O)pen or (C)losed or (A)ll Non-Billable Entries","A",.BPARR)=-1
"RTN","BPSSCRCV",115,0)
 Q:$$EDITFLD(2.03,+BPDUZ7,"S^B:BILLING REQUESTS;R:REVERSALS;A:ALL","Select Submission Type","A",.BPARR)=-1
"RTN","BPSSCRCV",116,0)
 Q:$$EDITFLD(1.06,+BPDUZ7,"S^R:REJECTS;P:PAYABLES;U:UNSTRANDED;A:ALL","Display (R)ejects or (P)ayables or (U)nstranded or (A)LL","REJECTS",.BPARR)=-1
"RTN","BPSSCRCV",117,0)
 Q:$$EDITFLD(1.07,+BPDUZ7,"S^R:RELEASED;N:NON-RELEASED;A:ALL","Display (R)eleased Rxs or (N)on-Released Rxs or (A)LL","RELEASED",.BPARR)=-1
"RTN","BPSSCRCV",118,0)
 Q:$$EDITFLD(1.08,+BPDUZ7,"S^C:CMOP;M:MAIL;W:WINDOW;A:ALL","Display (C)MOP or (M)ail or (W)indow or (A)LL","ALL",.BPARR)=-1
"RTN","BPSSCRCV",119,0)
 Q:$$EDITFLD(1.09,+BPDUZ7,"S^R:REALTIME;B:BACKBILLS;P:PRO OPTION;S:RESUBMISSION;A:ALL","Display (R)ealTime, (B)ackbills, (P)RO Option, Re(S)ubmission or (A)LL","ALL",.BPARR)=-1
"RTN","BPSSCRCV",120,0)
 S BPQ=0 F  D  Q:BPQ'=0
"RTN","BPSSCRCV",121,0)
 . S BPINP=$$EDITFLD(1.1,+BPDUZ7,"S^R:REJECT CODE;A:ALL","Display Specific (R)eject Code or (A)LL","ALL",.BPARR)
"RTN","BPSSCRCV",122,0)
 . S:BPINP=-1 BPQ=-1 S:$P(BPINP,U,2)="A" BPQ=1 I BPQ'=0 Q
"RTN","BPSSCRCV",123,0)
 . S BPINP=$$EDITFLD(1.15,+BPDUZ7,"P^BPSF(9002313.93,","Select Reject Code","",.BPARR)
"RTN","BPSSCRCV",124,0)
 . S:BPINP=-1 BPQ=-1 S:$P(BPINP,U,2)'="" BPQ=1 I BPQ'=0 Q
"RTN","BPSSCRCV",125,0)
 Q:BPQ=-1  ;quit due to timeout or ^
"RTN","BPSSCRCV",126,0)
 Q:$$INSURSEL^BPSSCRCU(.BPARR,+BPDUZ7)=-1
"RTN","BPSSCRCV",127,0)
 Q
"RTN","BPSSCRCV",128,0)
 ;
"RTN","BPSSCRCV",129,0)
ERRMSG(BPMSG) ;
"RTN","BPSSCRCV",130,0)
 W !,"***",BPMSG,"***",!
"RTN","BPSSCRCV",131,0)
 D PAUSE^VALM1
"RTN","BPSSCRCV",132,0)
 Q
"RTN","BPSSCRCV",133,0)
 ;/**
"RTN","BPSSCRCV",134,0)
 ;FLDNO - PARAMETERS INSTANCE
"RTN","BPSSCRCV",135,0)
 ;RECIEN - User DUZ
"RTN","BPSSCRCV",136,0)
 ;DIR0 - like DIR(0) node for ^DIR - i.e. field type, etc
"RTN","BPSSCRCV",137,0)
 ;PRMTMSG - user prompt
"RTN","BPSSCRCV",138,0)
 ;DFLTVAL - pass the default value for the case if there is no value in database
"RTN","BPSSCRCV",139,0)
 ;BPARRAY - array to store and change values in profile
"RTN","BPSSCRCV",140,0)
 ;returns:
"RTN","BPSSCRCV",141,0)
 ;as return value:
"RTN","BPSSCRCV",142,0)
 ; "1^value" - if selected
"RTN","BPSSCRCV",143,0)
 ; "-1" if timeout or uparrow
"RTN","BPSSCRCV",144,0)
 ;via BPARRAY
"RTN","BPSSCRCV",145,0)
 ; BPARRAY(filedno)=value
"RTN","BPSSCRCV",146,0)
EDITFLD(FLDNO,RECIEN,DIR0,PRMTMSG,DFLTVAL,BPARRAY) ;*/
"RTN","BPSSCRCV",147,0)
 N DIR,RETV,RETARR
"RTN","BPSSCRCV",148,0)
 N RECIENS,FDA,LCK,ERRARR
"RTN","BPSSCRCV",149,0)
 S RETV=$$GETPARAM^BPSSCRSL(FLDNO,RECIEN)
"RTN","BPSSCRCV",150,0)
 I FLDNO=1.17 S RETV=$P($G(^DPT(+RETV,0)),U)
"RTN","BPSSCRCV",151,0)
 ;Use the External Code from File #9002313.93 as the default value to display to user.
"RTN","BPSSCRCV",152,0)
 I FLDNO=1.15 S RETV=$P($G(^BPSF(9002313.93,+RETV,0)),U)
"RTN","BPSSCRCV",153,0)
 ;if data then use it, otherwise use data from parameter
"RTN","BPSSCRCV",154,0)
 I $L($G(RETV))>0 S DFLTVAL=RETV E  S DFLTVAL=$G(DFLTVAL)
"RTN","BPSSCRCV",155,0)
 ;prompt the user
"RTN","BPSSCRCV",156,0)
 S RETV=$$PROMPT(DIR0,PRMTMSG,DFLTVAL)
"RTN","BPSSCRCV",157,0)
 Q:RETV<0 -1
"RTN","BPSSCRCV",158,0)
 ;save it in the database
"RTN","BPSSCRCV",159,0)
 S BPARRAY(FLDNO)=RETV
"RTN","BPSSCRCV",160,0)
 Q "1^"_RETV
"RTN","BPSSCRCV",161,0)
 ;
"RTN","BPSSCRCV",162,0)
 ;
"RTN","BPSSCRCV",163,0)
FILEIT(FILENO,FLDNO,RECIEN,NEWVAL) ;
"RTN","BPSSCRCV",164,0)
 N RECIENS
"RTN","BPSSCRCV",165,0)
 S RECIENS=RECIEN_","
"RTN","BPSSCRCV",166,0)
 S FDA(FILENO,RECIENS,FLDNO)=NEWVAL
"RTN","BPSSCRCV",167,0)
 L +^BPS(FILENO,RECIEN,1):10 S LCK=$T I 'LCK Q "0^"_NEWVAL_"^LOCKED"  ;quit
"RTN","BPSSCRCV",168,0)
 D FILE^DIE("","FDA","ERRARR")
"RTN","BPSSCRCV",169,0)
 I LCK L -^BPS(FILENO,RECIEN,1)
"RTN","BPSSCRCV",170,0)
 I $D(ERRARR) Q "0^"_NEWVAL_"^"_ERRARR("DIERR",1,"TEXT",1)
"RTN","BPSSCRCV",171,0)
 Q "1^"_NEWVAL
"RTN","BPSSCRCV",172,0)
 ;
"RTN","BPSSCRCV",173,0)
 ;prompts for selection
"RTN","BPSSCRCV",174,0)
 ;returns selection
"RTN","BPSSCRCV",175,0)
 ;OR -1 when timeout and uparrow
"RTN","BPSSCRCV",176,0)
PROMPT(ZERONODE,PRMTMSG,DFLTVAL) ;
"RTN","BPSSCRCV",177,0)
 N Y,DUOUT,DTOUT,BPQUIT,DIROUT
"RTN","BPSSCRCV",178,0)
 S BPQUIT=0
"RTN","BPSSCRCV",179,0)
 I $E(ZERONODE,1,1)="P" D
"RTN","BPSSCRCV",180,0)
 . N DIC
"RTN","BPSSCRCV",181,0)
 . S DIC="^"_$P(ZERONODE,U,2)
"RTN","BPSSCRCV",182,0)
 . S DIC(0)="AEMNQ"
"RTN","BPSSCRCV",183,0)
 . S:$L($G(DFLTVAL))>0 DIC("B")=DFLTVAL
"RTN","BPSSCRCV",184,0)
 . S DIC("A")=PRMTMSG_": "
"RTN","BPSSCRCV",185,0)
 . D ^DIC
"RTN","BPSSCRCV",186,0)
 . I (Y=-1)!$D(DUOUT)!$D(DTOUT) S BPQUIT=1
"RTN","BPSSCRCV",187,0)
 E  D
"RTN","BPSSCRCV",188,0)
 . N DIR
"RTN","BPSSCRCV",189,0)
 . S DIR(0)=ZERONODE
"RTN","BPSSCRCV",190,0)
 . S DIR("A")=PRMTMSG
"RTN","BPSSCRCV",191,0)
 . S:$L($G(DFLTVAL))>0 DIR("B")=DFLTVAL
"RTN","BPSSCRCV",192,0)
 . ;
"RTN","BPSSCRCV",193,0)
 . ; display some extra text for FLDNO=1.19   (BPS*1*20)
"RTN","BPSSCRCV",194,0)
 . I $G(FLDNO)=1.19 D
"RTN","BPSSCRCV",195,0)
 .. S DIR("A",1)="    Please note this question only applies to"
"RTN","BPSSCRCV",196,0)
 .. S DIR("A",2)="    TRICARE or CHAMPVA Non-Billable Entries."
"RTN","BPSSCRCV",197,0)
 .. S DIR("A",3)=" "
"RTN","BPSSCRCV",198,0)
 .. Q
"RTN","BPSSCRCV",199,0)
 . ;
"RTN","BPSSCRCV",200,0)
 . D ^DIR
"RTN","BPSSCRCV",201,0)
 . I (Y=-1)!$D(DIROUT)!$D(DUOUT)!$D(DTOUT) S BPQUIT=1
"RTN","BPSSCRCV",202,0)
 I BPQUIT=1 Q -1
"RTN","BPSSCRCV",203,0)
 Q $P(Y,U)
"RTN","BPSSCRCV",204,0)
 ;
"RTN","BPSSCRCV",205,0)
GETFLD(FILENO,FLDNO,RECIEN) ;
"RTN","BPSSCRCV",206,0)
 N RETV,RETARR
"RTN","BPSSCRCV",207,0)
 N RECIENS
"RTN","BPSSCRCV",208,0)
 S RECIENS=RECIEN_","
"RTN","BPSSCRCV",209,0)
 ; first try to get the value from file
"RTN","BPSSCRCV",210,0)
 D GETS^DIQ(FILENO,RECIENS,FLDNO,"E","RETARR")
"RTN","BPSSCRCV",211,0)
 S RETV=$G(RETARR(FILENO,RECIENS,FLDNO,"E"))
"RTN","BPSSCRCV",212,0)
 Q $G(RETV)
"RTN","BPSSCRCV",213,0)
 ;
"RTN","BPSSCRCV",214,0)
 ;save all profile array to file
"RTN","BPSSCRCV",215,0)
 ;BPARRAY - arrays with pointers to 9002313.56
"RTN","BPSSCRCV",216,0)
 ;BPDUZ7 - DUZ
"RTN","BPSSCRCV",217,0)
FILEALL(BPARRAY,BPDUZ7) ;
"RTN","BPSSCRCV",218,0)
 ;BPS*14 - RRA changed API, because previously it was re-writing Division
"RTN","BPSSCRCV",219,0)
 ;and Insurance parameter regardless if it was modified and had a value
"RTN","BPSSCRCV",220,0)
 ;ticket 337299
"RTN","BPSSCRCV",221,0)
 N BPFLD,BP2
"RTN","BPSSCRCV",222,0)
 S BPFLD=0
"RTN","BPSSCRCV",223,0)
 F  S BPFLD=$O(BPARRAY(BPFLD)) Q:$G(BPFLD)=""  D
"RTN","BPSSCRCV",224,0)
 . I BPFLD="DIVS" I $$SAVEPAR^BPSSCRSL(2,BPDUZ7,$G(BPARRAY("DIVS")))
"RTN","BPSSCRCV",225,0)
 . I BPFLD="INS" I $$SAVEPAR^BPSSCRSL(2.04,BPDUZ7,$G(BPARRAY("INS")))
"RTN","BPSSCRCV",226,0)
 . Q:+BPFLD=0  I $$SAVEPAR^BPSSCRSL(BPFLD,+BPDUZ7,$G(BPARRAY(BPFLD)))
"RTN","BPSSCRCV",227,0)
 ;I $$SAVEPAR^BPSSCRSL(2,BPDUZ7,$G(BPARRAY("DIVS")))
"RTN","BPSSCRCV",228,0)
 ;I $$SAVEPAR^BPSSCRSL(2.04,BPDUZ7,$G(BPARRAY("INS")))
"RTN","BPSSCRCV",229,0)
 Q
"RTN","BPSSCRL1")
0^10^B66576750
"RTN","BPSSCRL1",1,0)
BPSSCRL1 ;AITC/CKB - ECME LOGINFO ;06/01/2017
"RTN","BPSSCRL1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**22**;JUN 2004;Build 28
"RTN","BPSSCRL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRL1",4,0)
 ;
"RTN","BPSSCRL1",5,0)
 ; Moved from BPSSCRLG
"RTN","BPSSCRL1",6,0)
 Q
"RTN","BPSSCRL1",7,0)
 ;
"RTN","BPSSCRL1",8,0)
PREPINFO(BPLN,BPDFN,BP36,BP59) ;
"RTN","BPSSCRL1",9,0)
 ;input:
"RTN","BPSSCRL1",10,0)
 ; BPDFN: patient ien #2
"RTN","BPSSCRL1",11,0)
 ; BP36: insurance ien #36
"RTN","BPSSCRL1",12,0)
 ; BP59: ptr to #9002313.59
"RTN","BPSSCRL1",13,0)
 ; returns # of lines
"RTN","BPSSCRL1",14,0)
 N BPSECME
"RTN","BPSSCRL1",15,0)
 I '$G(BP59) Q 0
"RTN","BPSSCRL1",16,0)
 I '$G(BP36) Q 0
"RTN","BPSSCRL1",17,0)
 I '$G(BPDFN) Q 0
"RTN","BPSSCRL1",18,0)
 N BPSCRLNS S BPSCRLNS=17 ;(see "BPS LSTMN LOG" LM template: Bottom=21, Top = 4, 21-4=17)
"RTN","BPSSCRL1",19,0)
 N BPX,BPRXIEN,BPRXN,BPREF,BP1,BPLSTCLM,BPLSTRSP,BPDAT59,BPUSR,BPSTRT,BPHIST,BPQ
"RTN","BPSSCRL1",20,0)
 N BPDT,BPLN0,BPCNT,DFN,VADM
"RTN","BPSSCRL1",21,0)
 S DFN=BPDFN D DEM^VADPT
"RTN","BPSSCRL1",22,0)
 S BP1=$$RXREF^BPSSCRU2(BP59)
"RTN","BPSSCRL1",23,0)
 S BPRXIEN=$P(BP1,U,1)
"RTN","BPSSCRL1",24,0)
 S BPRXN=$$RXNUM^BPSSCRU2(+BPRXIEN)
"RTN","BPSSCRL1",25,0)
 S BPREF=$P(BP1,U,2)
"RTN","BPSSCRL1",26,0)
 S BPDAT59(0)=$G(^BPST(BP59,0))
"RTN","BPSSCRL1",27,0)
 ;create history
"RTN","BPSSCRL1",28,0)
 D MKHIST^BPSSCRU5(BP59,.BPHIST)
"RTN","BPSSCRL1",29,0)
 ;
"RTN","BPSSCRL1",30,0)
 S BPLN0=BPLN
"RTN","BPSSCRL1",31,0)
 D SETLINE^BPSSCRLG(.BPLN,"Pharmacy ECME Log")
"RTN","BPSSCRL1",32,0)
 D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",33,0)
 S BPX=$$RJ^BPSSCR02("Rx #: ",20)_BPRXN_"/"_BPREF
"RTN","BPSSCRL1",34,0)
 S BPSECME=$$ECMENUM^BPSSCRU2(BP59)
"RTN","BPSSCRL1",35,0)
 S BPX=BPX_$$RJ^BPSSCR02("ECME #: ",20)_BPSECME
"RTN","BPSSCRL1",36,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",37,0)
 S BPX=$$RJ^BPSSCR02("Drug: ",20)_$$DRGNAM^BPSSCRU2($$GETDRG59^BPSSCRU2(BP59))
"RTN","BPSSCRL1",38,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",39,0)
 S BPX=$$RJ^BPSSCR02("Patient: ",20)
"RTN","BPSSCRL1",40,0)
 S BPX=BPX_$$LJ^BPSSCR02($$PATNAME^BPSSCRU2(BPDFN)_" "_$$SSN4^BPSSCRU2(BPDFN),25)
"RTN","BPSSCRL1",41,0)
 S BPX=BPX_$$LJ^BPSSCR02("Sex: "_$P($G(VADM(5)),"^",1),10)
"RTN","BPSSCRL1",42,0)
 S BPX=BPX_$$LJ^BPSSCR02("DOB: "_$P($G(VADM(3)),"^",2)_"("_$G(VADM(4))_")",20)
"RTN","BPSSCRL1",43,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",44,0)
 S BPX=$$RJ^BPSSCR02("Transaction Number: ",20)
"RTN","BPSSCRL1",45,0)
 S BPX=BPX_$P($G(^BPST(BP59,0)),U,1)
"RTN","BPSSCRL1",46,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",47,0)
 S BPX=$$RJ^BPSSCR02("Last Submitted: ",20)
"RTN","BPSSCRL1",48,0)
 S BPSTRT=$P(BPDAT59(0),U,11) ;@# need to check with analyst if this is a START DATE
"RTN","BPSSCRL1",49,0)
 I BPSTRT]"" S BPX=BPX_$$DATETIME^BPSSCRU5(BPSTRT)
"RTN","BPSSCRL1",50,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",51,0)
 S BPX=$$RJ^BPSSCR02("Last Submitted By: ",20)
"RTN","BPSSCRL1",52,0)
 S BPUSR=$P(BPDAT59(0),U,10)
"RTN","BPSSCRL1",53,0)
 I BPUSR]"" S BPX=BPX_$$GETUSRNM^BPSSCRU1(BPUSR)
"RTN","BPSSCRL1",54,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",55,0)
 ;
"RTN","BPSSCRL1",56,0)
 ;latest claim
"RTN","BPSSCRL1",57,0)
 S BP1=+$O(BPHIST("C",99999999),-1)
"RTN","BPSSCRL1",58,0)
 I BP1=0 D SETLINE^BPSSCRLG(.BPLN,""),SETLINE^BPSSCRLG(.BPLN,"------ No electronic claims ------") Q BPLN
"RTN","BPSSCRL1",59,0)
 S BP1=+$O(BPHIST("C",BP1,0))
"RTN","BPSSCRL1",60,0)
 S BPX=$$RJ^BPSSCR02("Last VA Claim #: ",20)_$P($G(^BPSC(+BP1,0)),U,1)
"RTN","BPSSCRL1",61,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",62,0)
 F BPCNT=BPLN:1:BPLN0+BPSCRLNS D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",63,0)
 ;process history
"RTN","BPSSCRL1",64,0)
 N BPTYPE,BPIEN,BPIENRS
"RTN","BPSSCRL1",65,0)
 S BPDT=99999999
"RTN","BPSSCRL1",66,0)
 F  S BPDT=$O(BPHIST("C",BPDT),-1) Q:+BPDT=0  D
"RTN","BPSSCRL1",67,0)
 . S BPIEN=+$O(BPHIST("C",BPDT,0)) Q:BPIEN=""
"RTN","BPSSCRL1",68,0)
 . D DISPCLM(.BPLN,BP59,BPIEN,+BPHIST("C",BPDT,BPIEN),$P(BPHIST("C",BPDT,BPIEN),U,2),BPDT)
"RTN","BPSSCRL1",69,0)
 . S BPIENRS=0
"RTN","BPSSCRL1",70,0)
 . F  S BPIENRS=$O(BPHIST("C",BPDT,BPIEN,"R",BPIENRS)) Q:+BPIENRS=0  D
"RTN","BPSSCRL1",71,0)
 . . D DISPRSP(.BPLN,BP59,BPIENRS,+BPHIST("C",BPDT,BPIEN,"R",BPIENRS),$P(BPHIST("C",BPDT,BPIEN,"R",BPIENRS),U,2),BPDT)
"RTN","BPSSCRL1",72,0)
 . . D DISPPYR^BPSSCRLG(.BPLN,BPIENRS)
"RTN","BPSSCRL1",73,0)
 Q BPLN
"RTN","BPSSCRL1",74,0)
 ;
"RTN","BPSSCRL1",75,0)
 ;display claim record
"RTN","BPSSCRL1",76,0)
DISPCLM(BPLN,BP59,BPIEN02,BP57,BPSTYPE,BPSDTALT) ;
"RTN","BPSSCRL1",77,0)
 N BPSCRLNS S BPSCRLNS=17 ;(see "BPS LSTMN LOG" LM template: Bottom=21, Top = 4, 21-4=17)
"RTN","BPSSCRL1",78,0)
 N BPX,BPLN0,BPCNT,BPSTR1,BPSTYP2,BPNFLDT
"RTN","BPSSCRL1",79,0)
 S BPLN0=BPLN
"RTN","BPSSCRL1",80,0)
 S BPSTYP2=$S(BPSTYPE="C":"CLAIM REQUEST",BPSTYPE="R":"REVERSAL",1:"")
"RTN","BPSSCRL1",81,0)
 S BPSTR1="Transmission Information ("_BPSTYP2_")(#"_BPIEN02_")"
"RTN","BPSSCRL1",82,0)
 D SETLINE^BPSSCRLG(.BPLN,BPSTR1_$$LINE^BPSSCRU3(79-$L(BPSTR1),"-"))
"RTN","BPSSCRL1",83,0)
 D SETLINE^BPSSCRLG(.BPLN,"Created on: "_$$CREATEDT^BPSSCRLG(BPIEN02,BPSDTALT))
"RTN","BPSSCRL1",84,0)
 D SETLINE^BPSSCRLG(.BPLN,"VA Claim ID: "_$P($G(^BPSC(+BPIEN02,0)),U,1))
"RTN","BPSSCRL1",85,0)
 D SETLINE^BPSSCRLG(.BPLN,"Submitted By: "_$$SUBMTBY^BPSSCRLG(BP57))
"RTN","BPSSCRL1",86,0)
 D SETLINE^BPSSCRLG(.BPLN,"Transaction Type: "_$$TRTYPE^BPSSCRU5($$TRCODE^BPSSCRLG(BPIEN02)))
"RTN","BPSSCRL1",87,0)
 D SETLINE^BPSSCRLG(.BPLN,"Date of Service: "_$$DOSCLM^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",88,0)
 ;Display Next Available Fill Date - BPS*1.0*15
"RTN","BPSSCRL1",89,0)
 S BPNFLDT=$$NFLDT^BPSBUTL(BPRXIEN,BPREF,$$RXCOB57^BPSSCRLG(BP57))
"RTN","BPSSCRL1",90,0)
 D:BPNFLDT SETLINE^BPSSCRLG(.BPLN,"Next Available Fill Date: "_$$FMTE^XLFDT(BPNFLDT,"2ZM"))
"RTN","BPSSCRL1",91,0)
 D SETLINE^BPSSCRLG(.BPLN,"NDC Code: "_$$LNDC^BPSSCRU5(BPIEN02))
"RTN","BPSSCRL1",92,0)
 D SETLINE^BPSSCRLG(.BPLN,"NCPDP Qty: "_$$QTY^BPSSCRLG(BPIEN02)_" "_$$UNITS^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",93,0)
 D SETLINE^BPSSCRLG(.BPLN,"Days Supply: "_$$DAYSSUPL^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",94,0)
 D SETLINE^BPSSCRLG(.BPLN,"Division: "_$$DIV^BPSSCRLG(BP57))
"RTN","BPSSCRL1",95,0)
 D SETLINE^BPSSCRLG(.BPLN,"NPI#: "_$$NPI^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",96,0)
 D SETLINE^BPSSCRLG(.BPLN,"ECME Pharmacy: "_$$DIVNAME^BPSSCRDS($$LDIV^BPSSCRLG(BP57)))
"RTN","BPSSCRL1",97,0)
 S BPX="Billed Qty: "_$$BILLQTY^BPSSCRLG(BP57)_" "_$$BILLUNT^BPSSCRLG(BP57)
"RTN","BPSSCRL1",98,0)
 S BPX=BPX_"     Unit Cost: "_$$UNTPRICE^BPSSCRLG(BP57)
"RTN","BPSSCRL1",99,0)
 S BPX=BPX_"     Gross Amt Due: "_$$TOTPRICE^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",100,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",101,0)
 S BPX="Ingredient Cost: "_$$INGRCST^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",102,0)
 S BPX=BPX_"     Dispensing Fee: "_$$DISPFEE^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",103,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",104,0)
 S BPX="U&C Charge: "_$$UCCHRG^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",105,0)
 S BPX=BPX_"     Admin Fee: "_$$ADMNFEE^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",106,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",107,0)
 D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",108,0)
 D SETLINE^BPSSCRLG(.BPLN,"Insurance Name: "_$$INSUR57^BPSSCRLG(BP57))
"RTN","BPSSCRL1",109,0)
 D SETLINE^BPSSCRLG(.BPLN,"Group Name: "_$$GRPNM^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",110,0)
 D SETLINE^BPSSCRLG(.BPLN,"Rx Coordination of Benefits: "_$$RXCOB57^BPSSCRLG(BP57))
"RTN","BPSSCRL1",111,0)
 D SETLINE^BPSSCRLG(.BPLN,"Pharmacy Plan ID: "_$$PHPLANID^BPSSCRLG(BP57))
"RTN","BPSSCRL1",112,0)
 D SETLINE^BPSSCRLG(.BPLN,"BIN: "_$$BIN^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",113,0)
 D SETLINE^BPSSCRLG(.BPLN,"PCN: "_$$PCN^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",114,0)
 D SETLINE^BPSSCRLG(.BPLN,"NCPDP Version: "_$$GETVER^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",115,0)
 D SETLINE^BPSSCRLG(.BPLN,"Group ID: "_$$GRPID^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",116,0)
 D SETLINE^BPSSCRLG(.BPLN,"Cardholder ID: "_$$CRDHLDID^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",117,0)
 D SETLINE^BPSSCRLG(.BPLN,"Patient Relationship Code: "_$$PATRELSH^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",118,0)
 D SETLINE^BPSSCRLG(.BPLN,"Cardholder First Name: "_$$CRDHLDFN^BPSSCRLG(BPIEN02,BP57))
"RTN","BPSSCRL1",119,0)
 D SETLINE^BPSSCRLG(.BPLN,"Cardholder Last Name: "_$$CRDHLDLN^BPSSCRLG(BPIEN02,BP57))
"RTN","BPSSCRL1",120,0)
 ; BPS*1*22
"RTN","BPSSCRL1",121,0)
 D SETLINE^BPSSCRLG(.BPLN,"Facility ID Qualifier: "_$$FACIDQ^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",122,0)
 F BPCNT=BPLN:1:BPLN0+BPSCRLNS D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",123,0)
 S BPLN0=BPLN
"RTN","BPSSCRL1",124,0)
 D SETLINE^BPSSCRLG(.BPLN,"Billing Request Payer Sheet: "_$$B1PYRIEN^BPSSCRU5(BP57))
"RTN","BPSSCRL1",125,0)
 D SETLINE^BPSSCRLG(.BPLN,"Reversal Payer Sheet: "_$$B2PYRIEN^BPSSCRU5(BP57))
"RTN","BPSSCRL1",126,0)
 D SETLINE^BPSSCRLG(.BPLN,"VA Claim ID: "_$P($G(^BPSC(+BPIEN02,0)),U,1))
"RTN","BPSSCRL1",127,0)
 D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",128,0)
 Q
"RTN","BPSSCRL1",129,0)
 ;
"RTN","BPSSCRL1",130,0)
 ;display response record
"RTN","BPSSCRL1",131,0)
DISPRSP(BPLN,BP59,BPIEN03,BP57,BPSTYPE,BPSDTALT) ;
"RTN","BPSSCRL1",132,0)
 N BPSCRLNS S BPSCRLNS=17 ;(see "BPS LSTMN LOG" LM template: Bottom=21, Top = 4, 21-4=17)
"RTN","BPSSCRL1",133,0)
 N BPX,BPLN0,BPCNT,BPRJCDS,BPRJ,BPSTR1,BPSTYP2,BDUR,BMSG,PTRESP
"RTN","BPSSCRL1",134,0)
 S BPLN0=BPLN
"RTN","BPSSCRL1",135,0)
 S BPSTYP2=$S(BPSTYPE="C":"CLAIM REQUEST",BPSTYPE="R":"REVERSAL",1:"")
"RTN","BPSSCRL1",136,0)
 S BPSTR1="Response Information  ("_BPSTYP2_")(#"_BPIEN03_")"
"RTN","BPSSCRL1",137,0)
 D SETLINE^BPSSCRLG(.BPLN,BPSTR1_$$LINE^BPSSCRU3(79-$L(BPSTR1),"-"))
"RTN","BPSSCRL1",138,0)
 D SETLINE^BPSSCRLG(.BPLN,"Response Received: "_$$RESPREC^BPSSCRLG(BPIEN03,BPSDTALT))
"RTN","BPSSCRL1",139,0)
 D SETLINE^BPSSCRLG(.BPLN,"Date of Service: "_$$DOSRSP^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",140,0)
 D SETLINE^BPSSCRLG(.BPLN,"Transaction Response Status: "_$$RESPSTAT^BPSSCRU5(BPIEN03))
"RTN","BPSSCRL1",141,0)
 D SETLINE^BPSSCRLG(.BPLN,"Total Amount Paid: $"_$$TOTAMNT^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",142,0)
 D SETLINE^BPSSCRLG(.BPLN,"Ingredient Cost Paid: $"_$$ICPAID^BPSSCRLG(BPIEN03)_"   Dispensing Fee Paid: $"_$$DFPAID^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",143,0)
 S PTRESP=$$PTRESP^BPSSCRLG(BPIEN03) S PTRESP=$S(PTRESP="":"$",PTRESP="0.00":"$0",1:"($"_PTRESP_")")
"RTN","BPSSCRL1",144,0)
 D SETLINE^BPSSCRLG(.BPLN,"Patient Resp (INS): "_PTRESP)
"RTN","BPSSCRL1",145,0)
 ; BPS*1*22
"RTN","BPSSCRL1",146,0)
 D SETLINE^BPSSCRLG(.BPLN,"Reconciliation ID: "_$$RECONID^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",147,0)
 D SETLINE^BPSSCRLG(.BPLN,"Reject code(s): ")
"RTN","BPSSCRL1",148,0)
 D REJCODES^BPSSCRU5(BPIEN03,.BPRJCDS)
"RTN","BPSSCRL1",149,0)
 S BPRJ=""
"RTN","BPSSCRL1",150,0)
 F  S BPRJ=$O(BPRJCDS(BPRJ)) Q:BPRJ=""  D
"RTN","BPSSCRL1",151,0)
 . D SETLINE^BPSSCRLG(.BPLN," "_$$GETRJNAM^BPSSCRU3(BPRJ))
"RTN","BPSSCRL1",152,0)
 D WRAPLN^BPSSCRU5(.BPLN,$$MESSAGE^BPSSCRLG(BPIEN03),76,"Payer Message: ",5)
"RTN","BPSSCRL1",153,0)
 D ADDMESS^BPSSCRLG(BPIEN03,1,.BPADDMSG)
"RTN","BPSSCRL1",154,0)
 S BMSG="" F  S BMSG=$O(BPADDMSG(BMSG)) Q:BMSG=""  D
"RTN","BPSSCRL1",155,0)
 . D WRAPLN^BPSSCRU5(.BPLN,BPADDMSG(BMSG),76,$S(BMSG=1:"Payer Additional Message: ",1:"     "),5)
"RTN","BPSSCRL1",156,0)
 D SETLINE^BPSSCRLG(.BPLN,"Reason for Service Code: "_$$DURREAS^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",157,0)
 D SETLINE^BPSSCRLG(.BPLN,"DUR Text: "_$$DURTEXT^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",158,0)
 D WRAPLN^BPSSCRU5(.BPLN,$$DURADD^BPSSCRLG(BPIEN03),76,"DUR Additional Text: ",5)
"RTN","BPSSCRL1",159,0)
 ; BPS*1*18:  Print Claim Log [BPS PRTCL USRSCR CLAIM LOG] (when included in the incoming response)
"RTN","BPSSCRL1",160,0)
 D SETLINE^BPSSCRLG(.BPLN,"HPID/OEID: "_$$HPID^BPSSCRLG(BPIEN03,BP57))
"RTN","BPSSCRL1",161,0)
 F BPCNT=1:1:2 D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",162,0)
 Q
"RTN","BPSSCRL1",163,0)
 ;
"RTN","BPSSCRLG")
0^9^B127974786
"RTN","BPSSCRLG",1,0)
BPSSCRLG ;BHAM ISC/SS - ECME LOGINFO ;05-APR-05
"RTN","BPSSCRLG",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,8,10,11,15,18,20,22**;JUN 2004;Build 28
"RTN","BPSSCRLG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRLG",4,0)
 ;
"RTN","BPSSCRLG",5,0)
 Q
"RTN","BPSSCRLG",6,0)
 ;
"RTN","BPSSCRLG",7,0)
EN ; -- main entry point for BPS LSTMN LOG
"RTN","BPSSCRLG",8,0)
 D EN^VALM("BPS LSTMN LOG")
"RTN","BPSSCRLG",9,0)
 Q 
"RTN","BPSSCRLG",10,0)
 ;
"RTN","BPSSCRLG",11,0)
HDR ; -- header code
"RTN","BPSSCRLG",12,0)
 S VALMHDR(1)="Claim Log information"
"RTN","BPSSCRLG",13,0)
 S VALMHDR(2)=""
"RTN","BPSSCRLG",14,0)
 Q
"RTN","BPSSCRLG",15,0)
 ;
"RTN","BPSSCRLG",16,0)
INIT ; -- init variables and list array
"RTN","BPSSCRLG",17,0)
 N BPSELCLM,LINE
"RTN","BPSSCRLG",18,0)
 S BPSELCLM=$G(@VALMAR@("SELLN"))
"RTN","BPSSCRLG",19,0)
 ;  piece 2: patient ien #2
"RTN","BPSSCRLG",20,0)
 ;  piece 3: insurance ien #36
"RTN","BPSSCRLG",21,0)
 ;  piece 4: ptr to #9002313.59
"RTN","BPSSCRLG",22,0)
 S LINE=1
"RTN","BPSSCRLG",23,0)
 S VALMCNT=$$PREPINFO(.LINE,$P(BPSELCLM,U,2),$P(BPSELCLM,U,3),$P(BPSELCLM,U,4))
"RTN","BPSSCRLG",24,0)
 S:VALMCNT>1 VALMCNT=VALMCNT-1
"RTN","BPSSCRLG",25,0)
 Q
"RTN","BPSSCRLG",26,0)
 ;
"RTN","BPSSCRLG",27,0)
HELP ; -- help code
"RTN","BPSSCRLG",28,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","BPSSCRLG",29,0)
 K X
"RTN","BPSSCRLG",30,0)
 Q
"RTN","BPSSCRLG",31,0)
 ;
"RTN","BPSSCRLG",32,0)
EXIT ; -- exit code
"RTN","BPSSCRLG",33,0)
 Q
"RTN","BPSSCRLG",34,0)
 ;
"RTN","BPSSCRLG",35,0)
EXPND ; -- expand code
"RTN","BPSSCRLG",36,0)
 Q
"RTN","BPSSCRLG",37,0)
 ;
"RTN","BPSSCRLG",38,0)
 ;
"RTN","BPSSCRLG",39,0)
LOG ;entry point for LOG menu option
"RTN","BPSSCRLG",40,0)
 N BPRET,BPSEL,BP59,BPVLM
"RTN","BPSSCRLG",41,0)
 I '$D(@(VALMAR)) Q
"RTN","BPSSCRLG",42,0)
 D FULL^VALM1
"RTN","BPSSCRLG",43,0)
 W !,"Enter the line number for which you wish to print claim logs."
"RTN","BPSSCRLG",44,0)
 S BPSEL=$$ASKLINE^BPSSCRU4("Select item","C","Please select SINGLE Rx Line.")
"RTN","BPSSCRLG",45,0)
 I BPSEL<1 S VALMBCK="R" Q
"RTN","BPSSCRLG",46,0)
 ;
"RTN","BPSSCRLG",47,0)
 S BP59=$P(BPSEL,U,4)
"RTN","BPSSCRLG",48,0)
 S BPVLM=+$P(BPSEL,U,5)    ; 1st line for indexes in the LM display array
"RTN","BPSSCRLG",49,0)
 ;
"RTN","BPSSCRLG",50,0)
 ; check for non-billable entry for claim LOG display
"RTN","BPSSCRLG",51,0)
 I $$NB^BPSSCR03(BP59) D  S VALMBCK="R" Q
"RTN","BPSSCRLG",52,0)
 . W !!,$G(@VALMAR@(BPVLM,0))       ; LM display array
"RTN","BPSSCRLG",53,0)
 . W !?6,$$EREJTXT^BPSSCR03(BP59)   ; eT/eC non-billable reason line
"RTN","BPSSCRLG",54,0)
 . W !,"Entry is NON BILLABLE.  There is no Claim Log to display."
"RTN","BPSSCRLG",55,0)
 . D PAUSE^VALM1
"RTN","BPSSCRLG",56,0)
 . Q
"RTN","BPSSCRLG",57,0)
 ;
"RTN","BPSSCRLG",58,0)
 D SAVESEL(BPSEL,VALMAR)
"RTN","BPSSCRLG",59,0)
 D EN
"RTN","BPSSCRLG",60,0)
 S VALMBCK="R"
"RTN","BPSSCRLG",61,0)
 Q
"RTN","BPSSCRLG",62,0)
 ;
"RTN","BPSSCRLG",63,0)
 ;save for ListManager
"RTN","BPSSCRLG",64,0)
 ;BPSEL - selected line
"RTN","BPSSCRLG",65,0)
 ;BPVALMR - parent VALMAR 
"RTN","BPSSCRLG",66,0)
SAVESEL(BPSEL,BPVALMR) ;
"RTN","BPSSCRLG",67,0)
 D CLEANIT
"RTN","BPSSCRLG",68,0)
 S ^TMP("BPSLOG",$J,"VALM","SELLN")=BPSEL
"RTN","BPSSCRLG",69,0)
 S ^TMP("BPSLOG",$J,"VALM","PARENT")=BPVALMR
"RTN","BPSSCRLG",70,0)
 M ^TMP("BPSLOG",$J,"VALM","VIEWPARAMS")=@BPVALMR@("VIEWPARAMS")
"RTN","BPSSCRLG",71,0)
 Q
"RTN","BPSSCRLG",72,0)
 ;
"RTN","BPSSCRLG",73,0)
CLEANIT ;
"RTN","BPSSCRLG",74,0)
 K ^TMP("BPSLOG",$J,"VALM")
"RTN","BPSSCRLG",75,0)
 Q
"RTN","BPSSCRLG",76,0)
 ;
"RTN","BPSSCRLG",77,0)
PREPINFO(BPLN,BPDFN,BP36,BP59) ;
"RTN","BPSSCRLG",78,0)
 ;input:
"RTN","BPSSCRLG",79,0)
 ; BPDFN: patient ien #2
"RTN","BPSSCRLG",80,0)
 ; BP36: insurance ien #36
"RTN","BPSSCRLG",81,0)
 ; BP59: ptr to #9002313.59
"RTN","BPSSCRLG",82,0)
 ; returns # of lines
"RTN","BPSSCRLG",83,0)
 ;
"RTN","BPSSCRLG",84,0)
 ; Moved to ^BPSSCRL1 for sake of space
"RTN","BPSSCRLG",85,0)
 ;
"RTN","BPSSCRLG",86,0)
 Q $$PREPINFO^BPSSCRL1(BPLN,BPDFN,BP36,BP59)
"RTN","BPSSCRLG",87,0)
 ;
"RTN","BPSSCRLG",88,0)
 ;increments BPLINE
"RTN","BPSSCRLG",89,0)
SETLINE(BPLINE,BPSTR) ;
"RTN","BPSSCRLG",90,0)
 D SET^VALM10(BPLINE,BPSTR)
"RTN","BPSSCRLG",91,0)
 S BPLINE=BPLINE+1
"RTN","BPSSCRLG",92,0)
 Q
"RTN","BPSSCRLG",93,0)
 ;
"RTN","BPSSCRLG",94,0)
 ;display claim record
"RTN","BPSSCRLG",95,0)
DISPCLM(BPLN,BP59,BPIEN02,BP57,BPSTYPE,BPSDTALT) ;
"RTN","BPSSCRLG",96,0)
 ;
"RTN","BPSSCRLG",97,0)
 ; Moved to ^BPSSCRL1 for sake of space
"RTN","BPSSCRLG",98,0)
 ;
"RTN","BPSSCRLG",99,0)
 D DISPCLM^BPSSCRL1
"RTN","BPSSCRLG",100,0)
 Q
"RTN","BPSSCRLG",101,0)
 ;
"RTN","BPSSCRLG",102,0)
 ;Submitted By User
"RTN","BPSSCRLG",103,0)
SUBMTBY(BP57) ;
"RTN","BPSSCRLG",104,0)
 N BPIEN,BPUSR
"RTN","BPSSCRLG",105,0)
 S BPIEN=$P($G(^BPSTL(BP57,0)),U,10)
"RTN","BPSSCRLG",106,0)
 S BPUSR=$$GETUSRNM^BPSSCRU1(BPIEN)
"RTN","BPSSCRLG",107,0)
 Q $S(BPUSR']"":"UNKNOWN",1:BPUSR)
"RTN","BPSSCRLG",108,0)
 ;
"RTN","BPSSCRLG",109,0)
 ;Date of service
"RTN","BPSSCRLG",110,0)
DOSCLM(BPIEN02) ;
"RTN","BPSSCRLG",111,0)
 N BPDT
"RTN","BPSSCRLG",112,0)
 S BPDT=$P($G(^BPSC(BPIEN02,401)),U,1)\1
"RTN","BPSSCRLG",113,0)
 Q $E(BPDT,5,6)_"/"_$E(BPDT,7,8)_"/"_$E(BPDT,1,4)
"RTN","BPSSCRLG",114,0)
 ;
"RTN","BPSSCRLG",115,0)
 ;Create date 
"RTN","BPSSCRLG",116,0)
CREATEDT(BPIEN02,BPSDTALT) ;
"RTN","BPSSCRLG",117,0)
 N BPSDT
"RTN","BPSSCRLG",118,0)
 S BPSDT=+$P($G(^BPSC(BPIEN02,0)),U,6)
"RTN","BPSSCRLG",119,0)
 Q $$DATETIME^BPSSCRU5($S(BPSDT>0:BPSDT,1:BPSDTALT))
"RTN","BPSSCRLG",120,0)
 ;
"RTN","BPSSCRLG",121,0)
 ;Plan ID
"RTN","BPSSCRLG",122,0)
PLANID(BP57) ;
"RTN","BPSSCRLG",123,0)
 Q $P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),0)),U,1)
"RTN","BPSSCRLG",124,0)
 ;
"RTN","BPSSCRLG",125,0)
CERTMOD(BP57) ;
"RTN","BPSSCRLG",126,0)
 Q $P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),0)),U,5)
"RTN","BPSSCRLG",127,0)
 ;
"RTN","BPSSCRLG",128,0)
 ;Software Vendor/Cert ID
"RTN","BPSSCRLG",129,0)
CERTIEN(BP57) ;
"RTN","BPSSCRLG",130,0)
 Q $P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),0)),U,6)
"RTN","BPSSCRLG",131,0)
 ;
"RTN","BPSSCRLG",132,0)
 ;Division
"RTN","BPSSCRLG",133,0)
DIV(BP57) ;
"RTN","BPSSCRLG",134,0)
 Q $$GET1^DIQ(9002313.57,BP57_",",11)
"RTN","BPSSCRLG",135,0)
 ;
"RTN","BPSSCRLG",136,0)
 ;NPI
"RTN","BPSSCRLG",137,0)
NPI(BPIEN02) ;
"RTN","BPSSCRLG",138,0)
 Q $$GET1^DIQ(9002313.02,BPIEN02_",",201)
"RTN","BPSSCRLG",139,0)
 ;
"RTN","BPSSCRLG",140,0)
 ;Group ID
"RTN","BPSSCRLG",141,0)
GRPID(BPIEN02) ;
"RTN","BPSSCRLG",142,0)
 Q $E($P($G(^BPSC(BPIEN02,300)),U,1),3,99)
"RTN","BPSSCRLG",143,0)
 ;
"RTN","BPSSCRLG",144,0)
 ;Group Name
"RTN","BPSSCRLG",145,0)
GRPNM(BPSIEN02) ;
"RTN","BPSSCRLG",146,0)
 N BPSGPN
"RTN","BPSSCRLG",147,0)
 S BPSGPN=$P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),3)),U,1)
"RTN","BPSSCRLG",148,0)
 Q BPSGPN
"RTN","BPSSCRLG",149,0)
 ;
"RTN","BPSSCRLG",150,0)
 ;Cardholder ID
"RTN","BPSSCRLG",151,0)
CRDHLDID(BPIEN02) ;
"RTN","BPSSCRLG",152,0)
 Q $E($P($G(^BPSC(BPIEN02,300)),U,2),3,99)
"RTN","BPSSCRLG",153,0)
 ;
"RTN","BPSSCRLG",154,0)
 ;Cardholder First name
"RTN","BPSSCRLG",155,0)
CRDHLDFN(BPIEN02,BP57) ;
"RTN","BPSSCRLG",156,0)
 N Y
"RTN","BPSSCRLG",157,0)
 S Y=$E($P($G(^BPSC(BPIEN02,300)),U,12),3,99)
"RTN","BPSSCRLG",158,0)
 I $L(Y)=0 S Y=$P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),1)),U,6)
"RTN","BPSSCRLG",159,0)
 Q Y
"RTN","BPSSCRLG",160,0)
 ;
"RTN","BPSSCRLG",161,0)
 ;Cardholder Last Name
"RTN","BPSSCRLG",162,0)
CRDHLDLN(BPIEN02,BP57) ;
"RTN","BPSSCRLG",163,0)
 N Y
"RTN","BPSSCRLG",164,0)
 S Y=$E($P($G(^BPSC(BPIEN02,300)),U,13),3,99)
"RTN","BPSSCRLG",165,0)
 I $L(Y)=0 S Y=$P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),1)),U,7)
"RTN","BPSSCRLG",166,0)
 Q Y
"RTN","BPSSCRLG",167,0)
 ;
"RTN","BPSSCRLG",168,0)
 ;Facility ID Qualifier - BPS*1*22
"RTN","BPSSCRLG",169,0)
FACIDQ(BPEIN02) ;
"RTN","BPSSCRLG",170,0)
 Q $P($G(^BPSC(BPIEN02,400,1,"B90")),U,5)
"RTN","BPSSCRLG",171,0)
 ;
"RTN","BPSSCRLG",172,0)
 ;Patient Relationship Code
"RTN","BPSSCRLG",173,0)
PATRELSH(BPIEN02) ;
"RTN","BPSSCRLG",174,0)
 N Y
"RTN","BPSSCRLG",175,0)
 S Y=$E($P($G(^BPSC(BPIEN02,300)),U,6),3,99)
"RTN","BPSSCRLG",176,0)
 Q $S(Y=0:"NOT SPECIFIED",Y=1:"CARDHOLDER",Y=2:"SPOUSE",Y=3:"CHILD",Y=4:"OTHER",1:Y)
"RTN","BPSSCRLG",177,0)
 ;
"RTN","BPSSCRLG",178,0)
PCN(BPIEN02) ;
"RTN","BPSSCRLG",179,0)
 Q $P($G(^BPSC(BPIEN02,100)),U,4)
"RTN","BPSSCRLG",180,0)
 ;
"RTN","BPSSCRLG",181,0)
 ; Get the Payer Sheet Version Number.
"RTN","BPSSCRLG",182,0)
GETVER(BPIEN02) ;
"RTN","BPSSCRLG",183,0)
 N BPSVER
"RTN","BPSSCRLG",184,0)
 S BPSVER=$P($G(^BPSC(BPIEN02,100)),U,2)
"RTN","BPSSCRLG",185,0)
 I $G(BPSVER)]"" S BPSVER=$E(BPSVER,1)_"."_$E(BPSVER,2,99)
"RTN","BPSSCRLG",186,0)
 Q BPSVER
"RTN","BPSSCRLG",187,0)
 ;
"RTN","BPSSCRLG",188,0)
BIN(BPIEN02) ;
"RTN","BPSSCRLG",189,0)
 Q $P($G(^BPSC(BPIEN02,100)),U,1)
"RTN","BPSSCRLG",190,0)
 ;
"RTN","BPSSCRLG",191,0)
 ;insurance name by 9002313.57 pointer
"RTN","BPSSCRLG",192,0)
INSUR57(BPIEN57) ;
"RTN","BPSSCRLG",193,0)
 N BPINSN
"RTN","BPSSCRLG",194,0)
 S BPINSN=+$G(^BPSTL(BPIEN57,9))
"RTN","BPSSCRLG",195,0)
 Q $P($G(^BPSTL(BPIEN57,10,BPINSN,0)),U,7)
"RTN","BPSSCRLG",196,0)
 ;
"RTN","BPSSCRLG",197,0)
PHPLANID(BPIEN57) ; Get the Pharmacy Plan ID from the BPS Log of Transactions file
"RTN","BPSSCRLG",198,0)
 ; Input - BPSIEN57: IEN from the BPS Log of Transactions file.
"RTN","BPSSCRLG",199,0)
 I '$G(BPIEN57) Q ""
"RTN","BPSSCRLG",200,0)
 N BPINSN
"RTN","BPSSCRLG",201,0)
 S BPINSN=+$G(^BPSTL(BPIEN57,9))
"RTN","BPSSCRLG",202,0)
 Q $P($G(^BPSTL(BPIEN57,10,BPINSN,3)),U,3)
"RTN","BPSSCRLG",203,0)
 ;
"RTN","BPSSCRLG",204,0)
QTY(BPIEN02) ;
"RTN","BPSSCRLG",205,0)
 Q $E($P($G(^BPSC(BPIEN02,400,1,440)),U,2),3,99)/1000
"RTN","BPSSCRLG",206,0)
 ;
"RTN","BPSSCRLG",207,0)
 ;NCPDP Units
"RTN","BPSSCRLG",208,0)
UNITS(BPIEN02) ;
"RTN","BPSSCRLG",209,0)
 I $G(BPIEN02)="" Q "(  )"
"RTN","BPSSCRLG",210,0)
 N X
"RTN","BPSSCRLG",211,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,600)),U,1),3,99)
"RTN","BPSSCRLG",212,0)
 Q $S(X="":"(  )",1:"("_X_")")
"RTN","BPSSCRLG",213,0)
 ;
"RTN","BPSSCRLG",214,0)
UNTPRICE(BPIEN57) ;
"RTN","BPSSCRLG",215,0)
 I $G(BPIEN57)="" Q ""
"RTN","BPSSCRLG",216,0)
 Q +$P($G(^BPSTL(BPIEN57,5)),U,2)
"RTN","BPSSCRLG",217,0)
 ;
"RTN","BPSSCRLG",218,0)
TOTPRICE(BPIEN02) ;
"RTN","BPSSCRLG",219,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",220,0)
 N X
"RTN","BPSSCRLG",221,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,400)),U,30),3,99)
"RTN","BPSSCRLG",222,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",223,0)
 ;
"RTN","BPSSCRLG",224,0)
BILLQTY(BPIEN57) ;
"RTN","BPSSCRLG",225,0)
 Q $P($G(^BPSTL(BPIEN57,5)),U,9)
"RTN","BPSSCRLG",226,0)
 ;
"RTN","BPSSCRLG",227,0)
BILLUNT(BPIEN57) ;
"RTN","BPSSCRLG",228,0)
 I $G(BPIEN57)="" Q "(  )"
"RTN","BPSSCRLG",229,0)
 N X
"RTN","BPSSCRLG",230,0)
 S X=$P($G(^BPSTL(BPIEN57,5)),U,10)
"RTN","BPSSCRLG",231,0)
 Q $S(X="":"(  )",1:"("_X_")")
"RTN","BPSSCRLG",232,0)
 ;
"RTN","BPSSCRLG",233,0)
 ;Ingredient Cost
"RTN","BPSSCRLG",234,0)
INGRCST(BPIEN02) ;
"RTN","BPSSCRLG",235,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",236,0)
 N X
"RTN","BPSSCRLG",237,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,400)),U,9),3,99)
"RTN","BPSSCRLG",238,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",239,0)
 ;
"RTN","BPSSCRLG",240,0)
 ;Dispensing Fee Submitted
"RTN","BPSSCRLG",241,0)
DISPFEE(BPIEN02) ;
"RTN","BPSSCRLG",242,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",243,0)
 N X
"RTN","BPSSCRLG",244,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,400)),U,12),3,99)
"RTN","BPSSCRLG",245,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",246,0)
 ;
"RTN","BPSSCRLG",247,0)
 ;U&C Charge
"RTN","BPSSCRLG",248,0)
UCCHRG(BPIEN02) ;
"RTN","BPSSCRLG",249,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",250,0)
 N X
"RTN","BPSSCRLG",251,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,400)),U,26),3,99)
"RTN","BPSSCRLG",252,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",253,0)
 ;
"RTN","BPSSCRLG",254,0)
 ;Admin Fee
"RTN","BPSSCRLG",255,0)
ADMNFEE(BPIEN02) ;
"RTN","BPSSCRLG",256,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",257,0)
 N CNT,X,AF
"RTN","BPSSCRLG",258,0)
 S AF="",CNT=0 F  S CNT=$O(^BPSC(BPIEN02,400,1,478.01,CNT)) Q:'CNT  D
"RTN","BPSSCRLG",259,0)
 . S X=$G(^BPSC(BPIEN02,400,1,478.01,CNT,0))
"RTN","BPSSCRLG",260,0)
 . I +$E($P(X,U,2),3,4)=4 S AF=AF+$$DFF2EXT^BPSECFM($E($P(X,U,3),3,10))
"RTN","BPSSCRLG",261,0)
 Q $S(AF="":AF,1:$J(AF,0,2))
"RTN","BPSSCRLG",262,0)
 ;
"RTN","BPSSCRLG",263,0)
 ;get ECME pharmacy division ptr for LOG
"RTN","BPSSCRLG",264,0)
LDIV(BPIEN57) ;
"RTN","BPSSCRLG",265,0)
 Q +$P($G(^BPSTL(BPIEN57,1)),U,7)
"RTN","BPSSCRLG",266,0)
 ;
"RTN","BPSSCRLG",267,0)
 ;transaction code
"RTN","BPSSCRLG",268,0)
TRCODE(BPIEN02) ;
"RTN","BPSSCRLG",269,0)
 Q $P($G(^BPSC(BPIEN02,100)),U,3)
"RTN","BPSSCRLG",270,0)
 ;
"RTN","BPSSCRLG",271,0)
 ;days supply
"RTN","BPSSCRLG",272,0)
DAYSSUPL(BPIEN02) ;
"RTN","BPSSCRLG",273,0)
 ;format D5NNN -> NNN
"RTN","BPSSCRLG",274,0)
 Q +$E($P($G(^BPSC(BPIEN02,400,1,400)),U,5),3,99)
"RTN","BPSSCRLG",275,0)
 ;
"RTN","BPSSCRLG",276,0)
 ;display response record
"RTN","BPSSCRLG",277,0)
DISPRSP(BPLN,BP59,BPIEN03,BP57,BPSTYPE,BPSDTALT) ;
"RTN","BPSSCRLG",278,0)
 ;
"RTN","BPSSCRLG",279,0)
 ; Moved to ^BPSSCRL1 for sake of space
"RTN","BPSSCRLG",280,0)
 ;
"RTN","BPSSCRLG",281,0)
 D DISPRSP^BPSSCRL1
"RTN","BPSSCRLG",282,0)
 Q
"RTN","BPSSCRLG",283,0)
 ;
"RTN","BPSSCRLG",284,0)
RESPREC(BPIEN03,BPSDTALT) ;
"RTN","BPSSCRLG",285,0)
 N BPSDT
"RTN","BPSSCRLG",286,0)
 S BPSDT=+$P($G(^BPSR(BPIEN03,0)),U,2)
"RTN","BPSSCRLG",287,0)
 Q $$DATETIME^BPSSCRU5($S(BPSDT>0:BPSDT,1:BPSDTALT))
"RTN","BPSSCRLG",288,0)
 ;
"RTN","BPSSCRLG",289,0)
DOSRSP(BPIEN03) ;
"RTN","BPSSCRLG",290,0)
 N BPDT
"RTN","BPSSCRLG",291,0)
 S BPDT=$P($G(^BPSR(BPIEN03,400)),U,1)\1
"RTN","BPSSCRLG",292,0)
 Q $E(BPDT,5,6)_"/"_$E(BPDT,7,8)_"/"_$E(BPDT,1,4)
"RTN","BPSSCRLG",293,0)
 ;
"RTN","BPSSCRLG",294,0)
TOTAMNT(BPIEN03) ;
"RTN","BPSSCRLG",295,0)
 I $G(BPIEN03)="" Q ""
"RTN","BPSSCRLG",296,0)
 N X
"RTN","BPSSCRLG",297,0)
 S X=$P($G(^BPSR(BPIEN03,1000,1,500)),U,9)
"RTN","BPSSCRLG",298,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",299,0)
 ;
"RTN","BPSSCRLG",300,0)
ICPAID(BPIEN03) ;Ingredient Cost Paid
"RTN","BPSSCRLG",301,0)
 I $G(BPIEN03)="" Q ""
"RTN","BPSSCRLG",302,0)
 N X
"RTN","BPSSCRLG",303,0)
 S X=$P($G(^BPSR(BPIEN03,1000,1,500)),U,6)
"RTN","BPSSCRLG",304,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",305,0)
 ;
"RTN","BPSSCRLG",306,0)
 ; BPS*1*22 - Reconciliation ID
"RTN","BPSSCRLG",307,0)
RECONID(BPEIN03) ;
"RTN","BPSSCRLG",308,0)
 Q $P($G(^BPSR(BPIEN03,1000,1,"B98")),U,1)
"RTN","BPSSCRLG",309,0)
 ;
"RTN","BPSSCRLG",310,0)
DFPAID(BPIEN03) ;Dispensing Fee Paid
"RTN","BPSSCRLG",311,0)
 I $G(BPIEN03)="" Q ""
"RTN","BPSSCRLG",312,0)
 N X
"RTN","BPSSCRLG",313,0)
 S X=$P($G(^BPSR(BPIEN03,1000,1,500)),U,7)
"RTN","BPSSCRLG",314,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",315,0)
 ;
"RTN","BPSSCRLG",316,0)
PTRESP(BPIEN03) ;Patient Responsibility
"RTN","BPSSCRLG",317,0)
 I $G(BPIEN03)="" Q ""
"RTN","BPSSCRLG",318,0)
 N X
"RTN","BPSSCRLG",319,0)
 S X=$P($G(^BPSR(BPIEN03,1000,1,500)),U,5)
"RTN","BPSSCRLG",320,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",321,0)
 ;
"RTN","BPSSCRLG",322,0)
MESSAGE(BPIEN03) ;
"RTN","BPSSCRLG",323,0)
 Q $P($G(^BPSR(BPIEN03,504)),U)
"RTN","BPSSCRLG",324,0)
 ;
"RTN","BPSSCRLG",325,0)
ADDMESS(BPIEN03,POS,BPADDMSG) ;
"RTN","BPSSCRLG",326,0)
 N ADM,X,QUA,TXT,CON,BPMTMP,L,NEXT
"RTN","BPSSCRLG",327,0)
 K BPMTMP,BPADDMSG
"RTN","BPSSCRLG",328,0)
 I '$G(BPIEN03) Q
"RTN","BPSSCRLG",329,0)
 I '$G(POS) S POS=1
"RTN","BPSSCRLG",330,0)
 S (ADM,L)=0 F  S ADM=$O(^BPSR(BPIEN03,1000,POS,130.01,ADM)) Q:'ADM  D
"RTN","BPSSCRLG",331,0)
 . S X=$G(^BPSR(BPIEN03,1000,POS,130.01,ADM,0))
"RTN","BPSSCRLG",332,0)
 . S TXT=$P($G(^BPSR(BPIEN03,1000,POS,130.01,ADM,1)),U,1)
"RTN","BPSSCRLG",333,0)
 . S QUA=$P(X,U,3),CON=$P(X,U,2)
"RTN","BPSSCRLG",334,0)
 . ; This should not happen, but if the qualifier is null, set it 
"RTN","BPSSCRLG",335,0)
 . ;  to "Z"_concatenated with a unique number so that it follows the
"RTN","BPSSCRLG",336,0)
 . ;  other qualifiers.  Per the D0 standard, qualifiers can be 1-9 and
"RTN","BPSSCRLG",337,0)
 . ;  A-Z.  ECL limits this to 1-9 but an future ECL may extend this.
"RTN","BPSSCRLG",338,0)
 . I QUA="" S L=L+1,QUA="Z"_L
"RTN","BPSSCRLG",339,0)
 . S BPMTMP(QUA)=CON_U_TXT
"RTN","BPSSCRLG",340,0)
 I '$D(BPMTMP) Q
"RTN","BPSSCRLG",341,0)
 S L=0,(QUA,NEXT)="" F  S QUA=$O(BPMTMP(QUA)) Q:QUA=""  D
"RTN","BPSSCRLG",342,0)
 . S CON=$P(BPMTMP(QUA),U,1),TXT=$P(BPMTMP(QUA),U,2)
"RTN","BPSSCRLG",343,0)
 . I NEXT="+" S BPADDMSG(L)=BPADDMSG(L)_TXT,NEXT=CON Q
"RTN","BPSSCRLG",344,0)
 . S L=L+1,BPADDMSG(L)=TXT,NEXT=CON
"RTN","BPSSCRLG",345,0)
 Q
"RTN","BPSSCRLG",346,0)
 ;
"RTN","BPSSCRLG",347,0)
DURTEXT(BPIEN03) ;
"RTN","BPSSCRLG",348,0)
 ; DUR FREE TEXT MESSAGE from first instance of DUR PPS RESPONSE
"RTN","BPSSCRLG",349,0)
 Q $P($G(^BPSR(BPIEN03,1000,1,567.01,1,0)),U,9)
"RTN","BPSSCRLG",350,0)
 ;
"RTN","BPSSCRLG",351,0)
DURREAS(BPIEN03) ;
"RTN","BPSSCRLG",352,0)
 ; REASON FOR SERVICE CODE from first instance of DUR PPS RESPONSE
"RTN","BPSSCRLG",353,0)
 Q $$GET1^DIQ(9002313.1101,"1,1,"_BPIEN03_",",439)
"RTN","BPSSCRLG",354,0)
 ;
"RTN","BPSSCRLG",355,0)
DURADD(BPIEN03) ;
"RTN","BPSSCRLG",356,0)
 ; DUR ADDITIONAL TEXT from first instance of DUR PPS RESPONSE
"RTN","BPSSCRLG",357,0)
 Q $P($G(^BPSR(BPIEN03,1000,1,567.01,1,1)),U)
"RTN","BPSSCRLG",358,0)
 ;
"RTN","BPSSCRLG",359,0)
 ;Payer HPID from response  ***BPS*1*18 IB ICR #6061
"RTN","BPSSCRLG",360,0)
HPID(BPIEN03,BP57) ;
"RTN","BPSSCRLG",361,0)
 N BPHPD
"RTN","BPSSCRLG",362,0)
 Q:$P($G(^BPSR(BPIEN03,560)),U,8)'="01" ""
"RTN","BPSSCRLG",363,0)
 S BPHPD=$P($G(^BPSR(BPIEN03,560)),U,9)
"RTN","BPSSCRLG",364,0)
 ; 6/25/14 no validation of HPID for this screen
"RTN","BPSSCRLG",365,0)
 ;S:BPHPD'="" BPHPD=BPHPD_$P($$HOD^IBCNHUT1(BPHPD,BP57),U,3)
"RTN","BPSSCRLG",366,0)
 Q BPHPD
"RTN","BPSSCRLG",367,0)
 ;
"RTN","BPSSCRLG",368,0)
RXCOB57(BPIEN57) ;
"RTN","BPSSCRLG",369,0)
 N BPCOB
"RTN","BPSSCRLG",370,0)
 S BPCOB=+$P($G(^BPSTL(BPIEN57,0)),U,14)
"RTN","BPSSCRLG",371,0)
 Q $S(BPCOB=2:"SECONDARY",BPCOB=3:"TERTIARY",1:"PRIMARY")
"RTN","BPSSCRLG",372,0)
 ;
"RTN","BPSSCRLG",373,0)
 ;Display other payer(s)
"RTN","BPSSCRLG",374,0)
DISPPYR(BPLN,BPIEN03) ;
"RTN","BPSSCRLG",375,0)
 N PYR,PYRDATA,BPSTR1
"RTN","BPSSCRLG",376,0)
 S PYR=0 F  S PYR=$O(^BPSR(BPIEN03,1000,1,355.01,PYR)) Q:'PYR  D
"RTN","BPSSCRLG",377,0)
 . S PYRDATA=^BPSR(BPIEN03,1000,1,355.01,PYR,1)
"RTN","BPSSCRLG",378,0)
 . S BPSTR1="Other Payer Information ("_PYR_")(#"_BPIEN03_")"
"RTN","BPSSCRLG",379,0)
 . D SETLINE(.BPLN,BPSTR1_$$LINE^BPSSCRU3(79-$L(BPSTR1),"-"))
"RTN","BPSSCRLG",380,0)
 . D SETLINE(.BPLN,"Other Payer ID Count: "_$$PYRIDCNT(BPIEN03,PYR))
"RTN","BPSSCRLG",381,0)
 . D SETLINE(.BPLN,"Other Payer ID: "_$P(PYRDATA,U,3))
"RTN","BPSSCRLG",382,0)
 . D SETLINE(.BPLN,"Other Payer Coverage Type: "_$P(PYRDATA,U,1))
"RTN","BPSSCRLG",383,0)
 . D SETLINE(.BPLN,"Other Payer ID Qualifier: "_$P(PYRDATA,U,2))
"RTN","BPSSCRLG",384,0)
 . D SETLINE(.BPLN,"Other Payer Help Desk Phone Number: "_$P(PYRDATA,U,8))
"RTN","BPSSCRLG",385,0)
 . D SETLINE(.BPLN,"Other Payer Processor Control Number: "_$P(PYRDATA,U,4))
"RTN","BPSSCRLG",386,0)
 . D SETLINE(.BPLN,"Other Payer Effective Date: "_$P(PYRDATA,U,10))
"RTN","BPSSCRLG",387,0)
 . D SETLINE(.BPLN,"Other Payer Termination Date: "_$P(PYRDATA,U,11))
"RTN","BPSSCRLG",388,0)
 . D SETLINE(.BPLN,"Other Payer Person Code: "_$P(PYRDATA,U,7))
"RTN","BPSSCRLG",389,0)
 . D SETLINE(.BPLN,"Other Payer Patient Relationship Code: "_$P(PYRDATA,U,9))
"RTN","BPSSCRLG",390,0)
 . D SETLINE(.BPLN,"Other Payer Cardholder ID: "_$P(PYRDATA,U,5))
"RTN","BPSSCRLG",391,0)
 . D SETLINE(.BPLN,"Other Payer Group ID: "_$P(PYRDATA,U,6))
"RTN","BPSSCRLG",392,0)
 Q
"RTN","BPSSCRLG",393,0)
 ;
"RTN","BPSSCRLG",394,0)
PYRIDCNT(BPIEN03,PYR) ;
"RTN","BPSSCRLG",395,0)
 Q $P($G(^BPSR(BPIEN03,1000,1,355.01,PYR,0)),U)
"RTN","BPSSCRRJ")
0^12^B130546871
"RTN","BPSSCRRJ",1,0)
BPSSCRRJ ;ALB/ESG - ECME OPECC Reject Information ;02-SEP-2015
"RTN","BPSSCRRJ",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**20,22**;JUN 2004;Build 28
"RTN","BPSSCRRJ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRRJ",4,0)
 ;
"RTN","BPSSCRRJ",5,0)
 ; ICR# 4701 for call to $$RXSITE^PSOBPSUT
"RTN","BPSSCRRJ",6,0)
 ; ICR# 4705 for call to $$GETNDC^PSONDCUT
"RTN","BPSSCRRJ",7,0)
 ; ICR# 4711 for call to DP^PSORXVW
"RTN","BPSSCRRJ",8,0)
 ; ICR# 6227 for call to REJCOM^PSOREJU4
"RTN","BPSSCRRJ",9,0)
 ; ICR# 6228 for call to MP^PSOREJU4 and PI^PSOREJU4
"RTN","BPSSCRRJ",10,0)
 ; ICR# 6768 for call to $$TAXID^IBCEF75
"RTN","BPSSCRRJ",11,0)
 ;
"RTN","BPSSCRRJ",12,0)
 Q
"RTN","BPSSCRRJ",13,0)
 ;
"RTN","BPSSCRRJ",14,0)
EN ; -- main entry point for BPS OPECC REJECT INFORMATION
"RTN","BPSSCRRJ",15,0)
 N BPSEL,DFN,PSODFN,BPINSIEN,BPORI59,RXREF,RXIEN,RXFIL,LINE,VALMHDR,RX,FILL
"RTN","BPSSCRRJ",16,0)
 W "OPECC Reject Information"
"RTN","BPSSCRRJ",17,0)
 D FULL^VALM1
"RTN","BPSSCRRJ",18,0)
 S BPSEL=$$ASKLINE^BPSSCRU4("Select item","C","Please select a single Rx line.")
"RTN","BPSSCRRJ",19,0)
 I BPSEL<1 G ENX
"RTN","BPSSCRRJ",20,0)
 S (DFN,PSODFN)=+$P(BPSEL,U,2)              ; patient DFN
"RTN","BPSSCRRJ",21,0)
 S BPINSIEN=+$P(BPSEL,U,3)                  ; insurance ien
"RTN","BPSSCRRJ",22,0)
 S BPORI59=$P(BPSEL,U,4) I 'BPORI59 G ENX   ; BPS Transaction ien
"RTN","BPSSCRRJ",23,0)
 S RXREF=$$RXREF^BPSSCRU2(BPORI59)
"RTN","BPSSCRRJ",24,0)
 S RXIEN=$P(RXREF,U,1) I 'RXIEN G ENX       ; prescription ien
"RTN","BPSSCRRJ",25,0)
 S RXFIL=$P(RXREF,U,2)                      ; fill#
"RTN","BPSSCRRJ",26,0)
 ;
"RTN","BPSSCRRJ",27,0)
 ; the claim must either be rejected or non-billable to be eligible for this action
"RTN","BPSSCRRJ",28,0)
 I '$$REJECTED^BPSSCR02(BPORI59),'$$NB^BPSSCR03(BPORI59) D  G ENX
"RTN","BPSSCRRJ",29,0)
 . W !!,"This claim is not a valid selection for the OPECC Reject Information screen."
"RTN","BPSSCRRJ",30,0)
 . W !,"This screen is for either rejected claims or non-billable claims."
"RTN","BPSSCRRJ",31,0)
 . D PAUSE^VALM1
"RTN","BPSSCRRJ",32,0)
 . Q
"RTN","BPSSCRRJ",33,0)
 ;
"RTN","BPSSCRRJ",34,0)
 D EN^VALM("BPS OPECC REJECT INFORMATION")
"RTN","BPSSCRRJ",35,0)
ENX ;
"RTN","BPSSCRRJ",36,0)
 S VALMBCK="R"
"RTN","BPSSCRRJ",37,0)
 Q
"RTN","BPSSCRRJ",38,0)
 ;
"RTN","BPSSCRRJ",39,0)
 ;
"RTN","BPSSCRRJ",40,0)
INIT ; -- init variables and list array
"RTN","BPSSCRRJ",41,0)
 ;
"RTN","BPSSCRRJ",42,0)
 K ^TMP("BPSSCRRJ",$J),^TMP("PSOPI",$J)
"RTN","BPSSCRRJ",43,0)
 S LINE=0,VALMCNT=0
"RTN","BPSSCRRJ",44,0)
 S (DFN,PSODFN)=+$P($G(^BPST(BPORI59,0)),U,6)
"RTN","BPSSCRRJ",45,0)
 ;
"RTN","BPSSCRRJ",46,0)
 D REJ          ; main reject information
"RTN","BPSSCRRJ",47,0)
 D BPSCOM       ; ecme opecc comments
"RTN","BPSSCRRJ",48,0)
 D PSOCOM       ; pso pharmacist comments
"RTN","BPSSCRRJ",49,0)
 D INS          ; insurance information
"RTN","BPSSCRRJ",50,0)
 ;
"RTN","BPSSCRRJ",51,0)
INITX ;
"RTN","BPSSCRRJ",52,0)
 Q
"RTN","BPSSCRRJ",53,0)
 ;
"RTN","BPSSCRRJ",54,0)
REJ ; main reject information data capture and display
"RTN","BPSSCRRJ",55,0)
 ;
"RTN","BPSSCRRJ",56,0)
 N BBTXT,RXCOB,ELIG,STATUS,RESPIEN,BPPOS,BPRJ,BPN,RSPREC,Z,DG,CODE,DESC,BPSNAF,BPPMSG,BPARR,PREFIX,TXTLN,BPADDMSG,PAMSG,TX
"RTN","BPSSCRRJ",57,0)
 S BBTXT=""
"RTN","BPSSCRRJ",58,0)
 S RXCOB=+$P($G(^BPST(BPORI59,0)),U,14) I 'RXCOB S RXCOB=1
"RTN","BPSSCRRJ",59,0)
 I $$BBILL^BPSBUTL(RXIEN,RXFIL,RXCOB) S BBTXT=" BACK-BILL"
"RTN","BPSSCRRJ",60,0)
 E  I $$RESUBMIT^BPSBUTL(RXIEN,RXFIL,RXCOB) S BBTXT=" RESUBMISSION"
"RTN","BPSSCRRJ",61,0)
 S ELIG=$P($G(^BPST(BPORI59,9)),U,4)
"RTN","BPSSCRRJ",62,0)
 S ELIG=$S(ELIG="C":"CHAMPVA",ELIG="T":"TRICARE",1:"Veteran")
"RTN","BPSSCRRJ",63,0)
 D SETLN("REJECT Information ("_ELIG_") "_BBTXT,1,1)
"RTN","BPSSCRRJ",64,0)
 ;
"RTN","BPSSCRRJ",65,0)
 ; for non-billable entries display some custom information and get out
"RTN","BPSSCRRJ",66,0)
 ; most of this section will not work for non-billables because there is no ECME claim or response
"RTN","BPSSCRRJ",67,0)
 I $$NB^BPSSCR03(BPORI59) D  G REJX
"RTN","BPSSCRRJ",68,0)
 . D SETLN("Current ECME Status: N/A for Non-Billable Entry")
"RTN","BPSSCRRJ",69,0)
 . D SETLN($$EREJTXT^BPSSCR03(BPORI59))
"RTN","BPSSCRRJ",70,0)
 . Q
"RTN","BPSSCRRJ",71,0)
 ;
"RTN","BPSSCRRJ",72,0)
 ; the rest of this procedure is for a normal rejected claim/response
"RTN","BPSSCRRJ",73,0)
 ;
"RTN","BPSSCRRJ",74,0)
 S STATUS=$P($$STATUS^BPSOSRX(RXIEN,RXFIL,,,RXCOB),U,1)
"RTN","BPSSCRRJ",75,0)
 D SETLN("Current ECME Status: "_STATUS)
"RTN","BPSSCRRJ",76,0)
 ;
"RTN","BPSSCRRJ",77,0)
 I '$$GRESPPOS^BPSSCRU3(BPORI59,.RESPIEN,.BPPOS) D  G INITX
"RTN","BPSSCRRJ",78,0)
 . D SETLN("No ECME Response information can be found.")
"RTN","BPSSCRRJ",79,0)
 . Q
"RTN","BPSSCRRJ",80,0)
 ;
"RTN","BPSSCRRJ",81,0)
 I '$G(RESPIEN) D  G INITX
"RTN","BPSSCRRJ",82,0)
 . D SETLN("SYSTEM ERROR: No ECME Response information can be found.")
"RTN","BPSSCRRJ",83,0)
 . Q
"RTN","BPSSCRRJ",84,0)
 ;
"RTN","BPSSCRRJ",85,0)
 ; get the number of rejects on file and the reject codes/descriptions
"RTN","BPSSCRRJ",86,0)
 K BPRJ S BPN=0
"RTN","BPSSCRRJ",87,0)
 D GETRJCOD^BPSSCRU3(BPORI59,.BPRJ,.BPN,74,"")
"RTN","BPSSCRRJ",88,0)
 I BPN D      ; if there are rejects
"RTN","BPSSCRRJ",89,0)
 . S RSPREC=$P($G(^BPSR(RESPIEN,0)),U,2)     ; date/time response received
"RTN","BPSSCRRJ",90,0)
 . D SETLN("Reject"_$S(BPN>1:"s",1:"")_" received from Payer on "_$$FMTE^XLFDT(RSPREC,"5ZPS")_"."),SETLN(" ")
"RTN","BPSSCRRJ",91,0)
 . D SETLN(" Code   Description")
"RTN","BPSSCRRJ",92,0)
 . S Z=0 F  S Z=$O(BPRJ(Z)) Q:'Z  D
"RTN","BPSSCRRJ",93,0)
 .. S DG=$G(BPRJ(Z)),CODE=$P(DG,":",1),DESC=$P(DG,":",2,99)
"RTN","BPSSCRRJ",94,0)
 .. D SETLN($J(CODE,5)_" - "_DESC)
"RTN","BPSSCRRJ",95,0)
 .. Q
"RTN","BPSSCRRJ",96,0)
 . D SETLN(" ")
"RTN","BPSSCRRJ",97,0)
 . Q
"RTN","BPSSCRRJ",98,0)
 I 'BPN D SETLN("No Reject Information was found."),SETLN(" ")
"RTN","BPSSCRRJ",99,0)
 ;
"RTN","BPSSCRRJ",100,0)
 ; get and display next available fill date from the response file
"RTN","BPSSCRRJ",101,0)
 S BPSNAF=$$NFLDT^BPSBUTL(RXIEN,RXFIL,RXCOB)
"RTN","BPSSCRRJ",102,0)
 I BPSNAF'="" D SETLN("Next Avail Fill: "_$$FMTE^XLFDT(BPSNAF,"5DZ"))
"RTN","BPSSCRRJ",103,0)
 ;
"RTN","BPSSCRRJ",104,0)
 ; get and display payer message (504-F4)
"RTN","BPSSCRRJ",105,0)
 S BPPMSG=$$MESSAGE^BPSSCRLG(RESPIEN)    ; payer message (504-F4)
"RTN","BPSSCRRJ",106,0)
 D WRAPTXT(BPPMSG,62,.BPARR)
"RTN","BPSSCRRJ",107,0)
 S BPN=0 F  S BPN=$O(BPARR(BPN)) Q:'BPN  D
"RTN","BPSSCRRJ",108,0)
 . S PREFIX=$S(BPN=1:"Payer Message  :",1:"")
"RTN","BPSSCRRJ",109,0)
 . S TXTLN=$$LJ^XLFSTR(PREFIX,17)_$G(BPARR(BPN,0))
"RTN","BPSSCRRJ",110,0)
 . D SETLN(TXTLN)
"RTN","BPSSCRRJ",111,0)
 . Q
"RTN","BPSSCRRJ",112,0)
 ;
"RTN","BPSSCRRJ",113,0)
 ; get and display payer additional message (526-FQ)
"RTN","BPSSCRRJ",114,0)
 K BPADDMSG
"RTN","BPSSCRRJ",115,0)
 D ADDMESS^BPSSCRLG(RESPIEN,1,.BPADDMSG)
"RTN","BPSSCRRJ",116,0)
 S PAMSG=""
"RTN","BPSSCRRJ",117,0)
 S BPN=0 F  S BPN=$O(BPADDMSG(BPN)) Q:'BPN  S TX=$G(BPADDMSG(BPN)),PAMSG=$S(PAMSG="":TX,1:PAMSG_" "_TX)
"RTN","BPSSCRRJ",118,0)
 D WRAPTXT(PAMSG,62,.BPARR)
"RTN","BPSSCRRJ",119,0)
 S BPN=0 F  S BPN=$O(BPARR(BPN)) Q:'BPN  D
"RTN","BPSSCRRJ",120,0)
 . S PREFIX=$S(BPN=1:"Payer Addl Msg :",1:"")
"RTN","BPSSCRRJ",121,0)
 . S TXTLN=$$LJ^XLFSTR(PREFIX,17)_$G(BPARR(BPN,0))
"RTN","BPSSCRRJ",122,0)
 . D SETLN(TXTLN)
"RTN","BPSSCRRJ",123,0)
 . Q
"RTN","BPSSCRRJ",124,0)
 ;
"RTN","BPSSCRRJ",125,0)
REJX ;
"RTN","BPSSCRRJ",126,0)
 D SETLN(" "),SETLN(" ")
"RTN","BPSSCRRJ",127,0)
 Q
"RTN","BPSSCRRJ",128,0)
 ;
"RTN","BPSSCRRJ",129,0)
BPSCOM ; display full opecc comments here
"RTN","BPSSCRRJ",130,0)
 N CMTDT,ZN,CDAT,CDATE,CUSER,RXFLG,TXT,CTXT,L,TXTLN
"RTN","BPSSCRRJ",131,0)
 D SETLN("OPECC COMMENTS",1,1)
"RTN","BPSSCRRJ",132,0)
 ;
"RTN","BPSSCRRJ",133,0)
 I '$O(^BPST(BPORI59,11,0)) D SETLN("  There are no comments found for this section.") G BPSCOMX
"RTN","BPSSCRRJ",134,0)
 ;
"RTN","BPSSCRRJ",135,0)
 S CMTDT=" " F  S CMTDT=$O(^BPST(BPORI59,11,"B",CMTDT),-1) Q:'CMTDT  S ZN=" " F  S ZN=$O(^BPST(BPORI59,11,"B",CMTDT,ZN),-1) Q:'ZN  D
"RTN","BPSSCRRJ",136,0)
 . S CDAT=$G(^BPST(BPORI59,11,ZN,0))
"RTN","BPSSCRRJ",137,0)
 . S CDATE=$$FMTE^XLFDT(CMTDT,"2ZMP")               ; external date/time of comment
"RTN","BPSSCRRJ",138,0)
 . S CUSER=$P($G(^VA(200,+$P(CDAT,U,2),0)),U,1)     ; user name who entered comment
"RTN","BPSSCRRJ",139,0)
 . S RXFLG=$S($P(CDAT,U,4):" (Pharm)",1:"")         ; flag that says if opecc comment should be displayed on PSO RI screen
"RTN","BPSSCRRJ",140,0)
 . S TXT=CDATE_RXFLG_" - "_$P(CDAT,U,3)_" ("_CUSER_")"
"RTN","BPSSCRRJ",141,0)
 . D WRAPTXT(TXT,76,.CTXT)
"RTN","BPSSCRRJ",142,0)
 . S L=0 F  S L=$O(CTXT(L)) Q:'L  D
"RTN","BPSSCRRJ",143,0)
 .. S TXTLN=$S(L=1:"- ",1:"   ")_$G(CTXT(L,0))
"RTN","BPSSCRRJ",144,0)
 .. D SETLN(TXTLN)
"RTN","BPSSCRRJ",145,0)
 .. Q
"RTN","BPSSCRRJ",146,0)
 . Q
"RTN","BPSSCRRJ",147,0)
 ;
"RTN","BPSSCRRJ",148,0)
BPSCOMX ;
"RTN","BPSSCRRJ",149,0)
 D SETLN(" "),SETLN(" ")
"RTN","BPSSCRRJ",150,0)
 Q
"RTN","BPSSCRRJ",151,0)
 ;
"RTN","BPSSCRRJ",152,0)
PSOCOM ; display the PSO comments from the pharmacist
"RTN","BPSSCRRJ",153,0)
 N RXCOB,COM,REJ,NUMREJ,REJIEN,REJDESC,COMDT,Z1,CDAT,CDATE,CUSER,TXT,CTXT,L,TXTLN
"RTN","BPSSCRRJ",154,0)
 ;
"RTN","BPSSCRRJ",155,0)
 S RXCOB=+$P($G(^BPST(BPORI59,0)),U,14) I 'RXCOB S RXCOB=1
"RTN","BPSSCRRJ",156,0)
 D REJCOM^PSOREJU4(RXIEN,RXFIL,RXCOB,.COM)     ; build the PSO comments array for this Rx/fill/cob (ICR# 6227)
"RTN","BPSSCRRJ",157,0)
 ;
"RTN","BPSSCRRJ",158,0)
 D SETLN("PHARMACIST COMMENTS",1,1)
"RTN","BPSSCRRJ",159,0)
 ;
"RTN","BPSSCRRJ",160,0)
 S REJ="" F NUMREJ=0:1 S REJ=$O(COM(REJ)) Q:REJ=""     ; count the number of reject codes that have PSO comments
"RTN","BPSSCRRJ",161,0)
 I 'NUMREJ D SETLN("  There are no comments found for this section.") G PSOCOMX
"RTN","BPSSCRRJ",162,0)
 ;
"RTN","BPSSCRRJ",163,0)
 S REJ="" F  S REJ=$O(COM(REJ)) Q:REJ=""  D
"RTN","BPSSCRRJ",164,0)
 . ;
"RTN","BPSSCRRJ",165,0)
 . ; if there are 2 or more reject codes that have comments, then display the reject code/description here
"RTN","BPSSCRRJ",166,0)
 . I NUMREJ>1 D
"RTN","BPSSCRRJ",167,0)
 .. S REJIEN=+$O(^BPSF(9002313.93,"B",REJ,""),-1)      ; reject code internal IEN
"RTN","BPSSCRRJ",168,0)
 .. S REJDESC=$P($G(^BPSF(9002313.93,REJIEN,0)),U,2)   ; reject description
"RTN","BPSSCRRJ",169,0)
 .. D SETLN(REJ_" - "_REJDESC)
"RTN","BPSSCRRJ",170,0)
 .. Q
"RTN","BPSSCRRJ",171,0)
 . ;
"RTN","BPSSCRRJ",172,0)
 . S COMDT=" " F  S COMDT=$O(COM(REJ,COMDT),-1) Q:'COMDT  S Z1=" " F  S Z1=$O(COM(REJ,COMDT,Z1),-1) Q:'Z1  D
"RTN","BPSSCRRJ",173,0)
 .. S CDAT=$G(COM(REJ,COMDT,Z1))
"RTN","BPSSCRRJ",174,0)
 .. S CDATE=$$FMTE^XLFDT($P(CDAT,U,1),"2ZMP")
"RTN","BPSSCRRJ",175,0)
 .. S CUSER=$P($G(^VA(200,+$P(CDAT,U,2),0)),U,1)
"RTN","BPSSCRRJ",176,0)
 .. S TXT=CDATE_" - "_$P(CDAT,U,3)_" ("_CUSER_")"
"RTN","BPSSCRRJ",177,0)
 .. D WRAPTXT(TXT,76,.CTXT)
"RTN","BPSSCRRJ",178,0)
 .. S L=0 F  S L=$O(CTXT(L)) Q:'L  D
"RTN","BPSSCRRJ",179,0)
 ... S TXTLN=$S(L=1:"- ",1:"   ")_$G(CTXT(L,0))
"RTN","BPSSCRRJ",180,0)
 ... D SETLN(TXTLN)
"RTN","BPSSCRRJ",181,0)
 ... Q
"RTN","BPSSCRRJ",182,0)
 .. Q
"RTN","BPSSCRRJ",183,0)
 . ;
"RTN","BPSSCRRJ",184,0)
 . ; if there are more reject codes, display a blank line here before the next reject code
"RTN","BPSSCRRJ",185,0)
 . I $O(COM(REJ))'="" D SETLN(" ")
"RTN","BPSSCRRJ",186,0)
 . Q
"RTN","BPSSCRRJ",187,0)
 ;
"RTN","BPSSCRRJ",188,0)
PSOCOMX ;
"RTN","BPSSCRRJ",189,0)
 D SETLN(" "),SETLN(" ")
"RTN","BPSSCRRJ",190,0)
 Q
"RTN","BPSSCRRJ",191,0)
 ;
"RTN","BPSSCRRJ",192,0)
INS ; gather and show insurance information
"RTN","BPSSCRRJ",193,0)
 N BPSINS,IENS,INSNAME,RXCOB,BPSPOL,BPSEFDT
"RTN","BPSSCRRJ",194,0)
 S BPSINS=+$$GET1^DIQ(9002313.59,BPORI59,901,"I") I 'BPSINS S BPSINS=1
"RTN","BPSSCRRJ",195,0)
 S IENS=BPSINS_","_BPORI59_","
"RTN","BPSSCRRJ",196,0)
 S RXCOB=+$P($G(^BPST(BPORI59,0)),U,14) I 'RXCOB S RXCOB=1
"RTN","BPSSCRRJ",197,0)
 ;
"RTN","BPSSCRRJ",198,0)
 S INSNAME=$$LJ^XLFSTR($$GET1^DIQ(9002313.59902,IENS,902.24),32)
"RTN","BPSSCRRJ",199,0)
 I RXCOB=2 S INSNAME=INSNAME_"Coord. Of Benefits: SECONDARY"
"RTN","BPSSCRRJ",200,0)
 S BPSPOL=+$$GET1^DIQ(9002313.59902,IENS,902.35,"I")                ; pt insurance 2.312 subfile ien
"RTN","BPSSCRRJ",201,0)
 S BPSEFDT=$S(BPSPOL:+$P($G(^DPT(DFN,.312,BPSPOL,0)),U,8)\1,1:"")   ; policy effective date
"RTN","BPSSCRRJ",202,0)
 I BPSEFDT S BPSEFDT=$$FMTE^XLFDT(BPSEFDT,"5DZ")                    ; external policy effective date
"RTN","BPSSCRRJ",203,0)
 ;
"RTN","BPSSCRRJ",204,0)
 D SETLN("INSURANCE Information",1,1)
"RTN","BPSSCRRJ",205,0)
 D SETLN("Insurance      : "_INSNAME)
"RTN","BPSSCRRJ",206,0)
 D SETLN("Contact        : "_$$GET1^DIQ(9002313.59902,IENS,902.26))
"RTN","BPSSCRRJ",207,0)
 D SETLN("BIN            : "_$$GET1^DIQ(9002313.59902,IENS,902.03))
"RTN","BPSSCRRJ",208,0)
 D SETLN("PCN            : "_$$GET1^DIQ(9002313.59902,IENS,902.04))
"RTN","BPSSCRRJ",209,0)
 D SETLN("Group Number   : "_$$GET1^DIQ(9002313.59902,IENS,902.05))
"RTN","BPSSCRRJ",210,0)
 D SETLN("Cardholder ID  : "_$$GET1^DIQ(9002313.59902,IENS,902.06))
"RTN","BPSSCRRJ",211,0)
 D SETLN("Effective Date : "_BPSEFDT)
"RTN","BPSSCRRJ",212,0)
 ;
"RTN","BPSSCRRJ",213,0)
INSX ;
"RTN","BPSSCRRJ",214,0)
 D SETLN(" "),SETLN(" ")
"RTN","BPSSCRRJ",215,0)
 Q
"RTN","BPSSCRRJ",216,0)
 ;
"RTN","BPSSCRRJ",217,0)
WRAPTXT(X,DIWR,RET) ; wrap text in variable X with right margin DIWR, return in array RET
"RTN","BPSSCRRJ",218,0)
 N %,DIW,DIWF,DIWI,DIWL,DIWT,DIWTC,DIWX,DN,I,Z
"RTN","BPSSCRRJ",219,0)
 K ^UTILITY($J,"W"),RET
"RTN","BPSSCRRJ",220,0)
 S DIWL=1
"RTN","BPSSCRRJ",221,0)
 D ^DIWP
"RTN","BPSSCRRJ",222,0)
 M RET=^UTILITY($J,"W",1)
"RTN","BPSSCRRJ",223,0)
 K ^UTILITY($J,"W")
"RTN","BPSSCRRJ",224,0)
WRAPX ;
"RTN","BPSSCRRJ",225,0)
 Q
"RTN","BPSSCRRJ",226,0)
 ;
"RTN","BPSSCRRJ",227,0)
HELP ; -- help code
"RTN","BPSSCRRJ",228,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","BPSSCRRJ",229,0)
 Q
"RTN","BPSSCRRJ",230,0)
 ;
"RTN","BPSSCRRJ",231,0)
EXIT ; -- exit code
"RTN","BPSSCRRJ",232,0)
 K ^TMP("BPSSCRRJ",$J),^TMP("PSOPI",$J)
"RTN","BPSSCRRJ",233,0)
 Q
"RTN","BPSSCRRJ",234,0)
 ;
"RTN","BPSSCRRJ",235,0)
SETLN(TEXT,REV,UND,HIG) ; set a line into the ListMan array
"RTN","BPSSCRRJ",236,0)
 I $G(TEXT)="" S TEXT=" "
"RTN","BPSSCRRJ",237,0)
 I $L(TEXT)>80 S TEXT=$E(TEXT,1,80)
"RTN","BPSSCRRJ",238,0)
 S LINE=LINE+1
"RTN","BPSSCRRJ",239,0)
 D SET^VALM10(LINE,TEXT)
"RTN","BPSSCRRJ",240,0)
 S VALMCNT=LINE
"RTN","BPSSCRRJ",241,0)
 ;
"RTN","BPSSCRRJ",242,0)
 I $G(REV) D  G SETLNX
"RTN","BPSSCRRJ",243,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IOINORM)
"RTN","BPSSCRRJ",244,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","BPSSCRRJ",245,0)
 . Q
"RTN","BPSSCRRJ",246,0)
 ;
"RTN","BPSSCRRJ",247,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","BPSSCRRJ",248,0)
 ;
"RTN","BPSSCRRJ",249,0)
 I $G(HIG) D CNTRL^VALM10(LINE,HIG,80,IOINHI_$S($G(UND):IOUON,1:""),IOINORM)
"RTN","BPSSCRRJ",250,0)
 ;
"RTN","BPSSCRRJ",251,0)
SETLNX ;
"RTN","BPSSCRRJ",252,0)
 Q
"RTN","BPSSCRRJ",253,0)
 ;
"RTN","BPSSCRRJ",254,0)
HDR ; -- header code
"RTN","BPSSCRRJ",255,0)
 S VALMHDR(1)=$$DVINFO(RXIEN,RXFIL)          ; division, npi, ncpdp data
"RTN","BPSSCRRJ",256,0)
 S VALMHDR(2)=$$PTINFO(RXIEN)                ; Patient data
"RTN","BPSSCRRJ",257,0)
 S VALMHDR(3)=$$RXINFO1(RXIEN,RXFIL)         ; Rx data part 1
"RTN","BPSSCRRJ",258,0)
 S VALMHDR(4)=$$RXINFO2(RXIEN,RXFIL)         ; Rx data part 2
"RTN","BPSSCRRJ",259,0)
 Q
"RTN","BPSSCRRJ",260,0)
 ;
"RTN","BPSSCRRJ",261,0)
DVINFO(RX,RFL) ; header division data
"RTN","BPSSCRRJ",262,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","BPSSCRRJ",263,0)
 ;       (o) RFL  - Refill #
"RTN","BPSSCRRJ",264,0)
 N BPSTAXID,DVIEN,DVINFO,NCPNPI
"RTN","BPSSCRRJ",265,0)
 S DVINFO="Division : "_$E($$GET1^DIQ(9002313.59,BPORI59,11),1,15) ; Pharmacy Division name from BPS Transaction
"RTN","BPSSCRRJ",266,0)
 ;Display both NPI and NCPDP numbers
"RTN","BPSSCRRJ",267,0)
 S DVIEN=+$$RXSITE^PSOBPSUT(RX,RFL)                           ; ICR# 4701
"RTN","BPSSCRRJ",268,0)
 S NCPNPI=$$DIVNCPDP^BPSBUTL(DVIEN)
"RTN","BPSSCRRJ",269,0)
 S $E(DVINFO,28)="NPI: "_$P(NCPNPI,U,2)
"RTN","BPSSCRRJ",270,0)
 S $E(DVINFO,44)="NCPDP: "_$P(NCPNPI,U,1)
"RTN","BPSSCRRJ",271,0)
 S BPSTAXID=$P($$TAXID^IBCEF75,U,2)                           ; ICR# 6768
"RTN","BPSSCRRJ",272,0)
 S $E(DVINFO,62)="TAX ID: "_$E(BPSTAXID,1,2)_"-"_$E(BPSTAXID,3,$L(BPSTAXID))
"RTN","BPSSCRRJ",273,0)
 Q DVINFO
"RTN","BPSSCRRJ",274,0)
 ;
"RTN","BPSSCRRJ",275,0)
PTINFO(RX) ; header patient data
"RTN","BPSSCRRJ",276,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","BPSSCRRJ",277,0)
 N DFN,VADM,PTINFO,SSN4
"RTN","BPSSCRRJ",278,0)
 S DFN=+$P($G(^BPST(BPORI59,0)),U,6)
"RTN","BPSSCRRJ",279,0)
 D DEM^VADPT S SSN4=$P($G(VADM(2)),U,2)
"RTN","BPSSCRRJ",280,0)
 S PTINFO="Patient  : "_$E($G(VADM(1)),1,24)_"("_$E(SSN4,$L(SSN4)-3,$L(SSN4))_")"
"RTN","BPSSCRRJ",281,0)
 S PTINFO=PTINFO_"  Sex: "_$P($G(VADM(5)),U,1)
"RTN","BPSSCRRJ",282,0)
 S $E(PTINFO,61)="DOB: "_$P($G(VADM(3)),U,2)_"("_$P($G(VADM(4)),U,1)_")"
"RTN","BPSSCRRJ",283,0)
 Q PTINFO
"RTN","BPSSCRRJ",284,0)
 ;
"RTN","BPSSCRRJ",285,0)
RXINFO1(RX,FILL) ; header Rx data part 1
"RTN","BPSSCRRJ",286,0)
 N RXINFO,RXDOS,PSOET
"RTN","BPSSCRRJ",287,0)
 D GETDAT^BPSBUTL(RX,FILL,,.RXDOS) ; Get Date of Service from BPS CLAIM field 401
"RTN","BPSSCRRJ",288,0)
 S RXINFO="Rx#      : "_$$RXNUM^BPSSCRU2(RX)_"/"_FILL
"RTN","BPSSCRRJ",289,0)
 S PSOET=$$NB^BPSSCR03(BPORI59)         ; TRI/CVA non-billable entry
"RTN","BPSSCRRJ",290,0)
 S $E(RXINFO,27)="ECME#: "_$S(PSOET:"",1:$P($$CLAIM^BPSBUTL(RX,FILL),U,6))
"RTN","BPSSCRRJ",291,0)
 S $E(RXINFO,49)="Date of Service: "_$S(PSOET:"",1:$$FMTE^XLFDT(RXDOS)) ; Use DOS from BPS Claims field 401
"RTN","BPSSCRRJ",292,0)
 Q RXINFO
"RTN","BPSSCRRJ",293,0)
 ;
"RTN","BPSSCRRJ",294,0)
RXINFO2(RX,FILL) ; header Rx data part 2
"RTN","BPSSCRRJ",295,0)
 N RXINFO,DRG,CMOP
"RTN","BPSSCRRJ",296,0)
 S DRG=+$$RXAPI1^BPSUTIL1(RX,6,"I")                         ; drug ien
"RTN","BPSSCRRJ",297,0)
 S CMOP=$$DRUGDIE^BPSUTIL1(DRG,213,"I")                     ; cmop dispense field in the Drug file (0/1)
"RTN","BPSSCRRJ",298,0)
 S RXINFO=$S(CMOP:"CMOP ",1:"")_"Drug"
"RTN","BPSSCRRJ",299,0)
 S $E(RXINFO,10)=": "_$E($$RXAPI1^BPSUTIL1(RX,6),1,43)      ; drug name
"RTN","BPSSCRRJ",300,0)
 ;
"RTN","BPSSCRRJ",301,0)
 S $E(RXINFO,56)="NDC Code: "_$$GETNDC^PSONDCUT(RX,FILL)    ; ICR# 4705
"RTN","BPSSCRRJ",302,0)
 Q RXINFO
"RTN","BPSSCRRJ",303,0)
 ;
"RTN","BPSSCRRJ",304,0)
VER ; selection of View ePharmacy Rx from the BPS OPECC reject information screen
"RTN","BPSSCRRJ",305,0)
 N BPSVRX
"RTN","BPSSCRRJ",306,0)
 D FULL^VALM1
"RTN","BPSSCRRJ",307,0)
 S BPSVRX("RXIEN")=$G(RXIEN)
"RTN","BPSSCRRJ",308,0)
 S BPSVRX("FILL#")=$G(RXFIL)
"RTN","BPSSCRRJ",309,0)
 D ^BPSVRX
"RTN","BPSSCRRJ",310,0)
VERX ;
"RTN","BPSSCRRJ",311,0)
 S VALMBCK="R"
"RTN","BPSSCRRJ",312,0)
 Q
"RTN","BPSSCRRJ",313,0)
 ;
"RTN","BPSSCRRJ",314,0)
VIEW ; action for View Rx on the BPS OPECC reject information screen
"RTN","BPSSCRRJ",315,0)
 N VALMCNT,LINE,VALMHDR,TITLE,PSOVDA,DA,PS,DFN,PSODFN
"RTN","BPSSCRRJ",316,0)
 S TITLE=VALM("TITLE")
"RTN","BPSSCRRJ",317,0)
 S (PSOVDA,DA)=RXIEN,PS="REJECT"
"RTN","BPSSCRRJ",318,0)
 ;
"RTN","BPSSCRRJ",319,0)
 ; - DO structure used to avoid losing key variables in this routine
"RTN","BPSSCRRJ",320,0)
 D
"RTN","BPSSCRRJ",321,0)
 . N RXIEN,RXFIL,BPORI59,TITLE
"RTN","BPSSCRRJ",322,0)
 . D DP^PSORXVW                ; ICR# 4711
"RTN","BPSSCRRJ",323,0)
 . Q
"RTN","BPSSCRRJ",324,0)
 ;
"RTN","BPSSCRRJ",325,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","BPSSCRRJ",326,0)
 Q
"RTN","BPSSCRRJ",327,0)
 ;
"RTN","BPSSCRRJ",328,0)
MP(RXIEN,RXFIL) ; entry point for Medication Profile action on OPECC reject information screen
"RTN","BPSSCRRJ",329,0)
 N VALMCNT,LINE,VALMHDR,DFN,PSODFN,BPORI59
"RTN","BPSSCRRJ",330,0)
 D MP^PSOREJU4(RXIEN,RXFIL)     ; ICR# 6228
"RTN","BPSSCRRJ",331,0)
 S VALMBCK="R"
"RTN","BPSSCRRJ",332,0)
 Q
"RTN","BPSSCRRJ",333,0)
 ;
"RTN","BPSSCRRJ",334,0)
PI(RXIEN,RXFIL) ; entry point for Patient Information action on OPECC reject information screen
"RTN","BPSSCRRJ",335,0)
 N VALMCNT,LINE,VALMHDR,DFN,PSODFN,BPORI59
"RTN","BPSSCRRJ",336,0)
 D PI^PSOREJU4(RXIEN,RXFIL)     ; ICR# 6228
"RTN","BPSSCRRJ",337,0)
 S VALMBCK="R"
"RTN","BPSSCRRJ",338,0)
 Q
"RTN","BPSSCRRJ",339,0)
 ;
"RTN","BPSSCRSL")
0^3^B16566806
"RTN","BPSSCRSL",1,0)
BPSSCRSL ;BHAM ISC/SS - ECME SCREEN SORT LIST ;05-APR-05
"RTN","BPSSCRSL",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,7,11,20,22**;JUN 2004;Build 28
"RTN","BPSSCRSL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRSL",4,0)
 ;USER SCREEN
"RTN","BPSSCRSL",5,0)
 ;
"RTN","BPSSCRSL",6,0)
 ;This software is using PARAMETER TOOLS (see XT*7.3*26) to store user's settings:
"RTN","BPSSCRSL",7,0)
 ;PARAMETER DEFINITION NAME="BPS USRSCR" (file #8989.51, IA# 2263)
"RTN","BPSSCRSL",8,0)
 ;ENTITY is "USR" , i.e. IEN in ^VA(200  -- see definition for "BPS USRSCR"
"RTN","BPSSCRSL",9,0)
 ;INSTANCEs are as follows:
"RTN","BPSSCRSL",10,0)
 ;1.01 ONE/ALL USERS --'U' ONE USER, 'A' ALL; Display claims for ONE or ALL users 
"RTN","BPSSCRSL",11,0)
 ;1.02 ONE/ALL PATIENTS --'P' FOR ONE PATIENT; 'A' FOR ALL; Display claims for ONE/ALL PATIENTS 
"RTN","BPSSCRSL",12,0)
 ;1.03 ONE/ALL RX --'R' FOR ONE RX; 'A' FOR ALL; Display claims for ONE or ALL RX 
"RTN","BPSSCRSL",13,0)
 ;1.04 HOURS/DAYS -- 'D' FOR DAYS; 'H' FOR HOURS; Use HOURS or DAYS to specify timeframe 
"RTN","BPSSCRSL",14,0)
 ;1.05 TIMEFRAME -- NUMBER Depends on the value of the field "USR SCR HOURS/DAYS" this field will
"RTN","BPSSCRSL",15,0)
 ;store the default number of HOURS from NOW or DAYS from TODAY to select claims to display 
"RTN","BPSSCRSL",16,0)
 ;1.06 REJECTED/PAYABLE --'R' FOR REJECTS; 'P' FOR PAYABLES; 'U' FOR UNSTRANDED; 'A' FOR ALL; Display Rejects or Payables or Unstranded or ALL claims 
"RTN","BPSSCRSL",17,0)
 ;1.07 RELEASED/NOT RELEASED --'R' FOR RELEASED; 'N' FOR NON-RELEASED; 'A' FOR ALL; Display Released Rxs or Non-Released Rxs or ALL 
"RTN","BPSSCRSL",18,0)
 ;1.08 CMOP/MAIL/WINDOW --'C' FOR CMOP; 'M' FOR MAIL;'W' FOR WINDOW;'A' FOR ALL; Display CMOP or Mail or Window or ALL Rxs 
"RTN","BPSSCRSL",19,0)
 ;1.09 REALTIME/BACKBILL --'R' FOR REALTIME; 'B' FOR BACKBILLS; 'P' FOR PRO OPTION; 'R' FOR RESUBMISSION; 'A' FOR ALL;
"RTN","BPSSCRSL",20,0)
 ;     Display (R)ealTime, (B)ackbills, (P)RO Option, Re(S)ubmission or (A)LL
"RTN","BPSSCRSL",21,0)
 ;1.1 REJECT CODE/ALL --'R' FOR REJECT CODE; 'A' FOR ALL; Display Specific Reject Code or ALL Reject
"RTN","BPSSCRSL",22,0)
 ;Codes 0 means ALL Reject Codes otherwise - Reject Code value 
"RTN","BPSSCRSL",23,0)
 ;1.11 SPECIFIC/ALL INSURANCES --'I' FOR SPECIFIC INSURANCE(S);'A' FOR ALL; Display Specific Insurance Company(s) or All null - ALL otherwise - pointer to INSURANCE COMPANY file #36 
"RTN","BPSSCRSL",24,0)
 ;1.12 SORT LIST --'T' FOR TRANSACTION DATE;'D' FOR DIVISION; 'I' FOR INSURANCE; 'C' FOR REJECT CODE; 
"RTN","BPSSCRSL",25,0)
 ;'P' FOR PATIENT NAME -- 'N' FOR DRUG NAME; 'B' FOR BILL TYPE (BB/P2/RT/RS); 'L' FOR FILL LOCATION;
"RTN","BPSSCRSL",26,0)
 ;'R' FOR RELEASED/NON-RELEASED -- 'A' FOR ACTIVE/DISCONTINUED; the field used to sort claims in the list 
"RTN","BPSSCRSL",27,0)
 ;1.13 ALL ECME PHARMACY DIVISIONS --'D' FOR DIVISION; 'A' FOR ALL; 
"RTN","BPSSCRSL",28,0)
 ;1.14 SELECTED INSURANCE -- Single, or multiple, insurance(s) to select claims for the User Screen, to store INSURANCE COMPANY pointer (#36) 
"RTN","BPSSCRSL",29,0)
 ;1.15 SELECTED REJECTED CODE --POINTER TO BPS NCPDP REJECT CODES FILE (#9002313.93) Reject code selected by the user to filter claims.
"RTN","BPSSCRSL",30,0)
 ;1.16 SELECTED USER -- POINTER TO NEW PERSON FILE (#200) Selected user for the user screen 
"RTN","BPSSCRSL",31,0)
 ;1.17 SELECTED PATIENT -- POINTER TO PATIENT FILE (#2) Selected patient for the User Screen 
"RTN","BPSSCRSL",32,0)
 ;1.18 SELECTED RX -- POINTER TO PRESCRIPTION FILE (#52) Selected RX 
"RTN","BPSSCRSL",33,0)
 ;1.19 NON-BILLABLE TRI/CVA ENTRIES OPEN/CLOSED/ALL -- 'O' Open; 'C' Closed; 'A' All
"RTN","BPSSCRSL",34,0)
 ;2    ECME PHARMACY DIVISION -- the list of POINTERs TO BPS PHARMACIES FILE (#9002313.56) separated by "^"
"RTN","BPSSCRSL",35,0)
 ;2.01 ELIGIBILITY TYPE --'V' FOR VETERAN;'T' FOR TRICARE;'C' FOR CHAMPVA;'A' FOR ALL; Display claims for specific Eligibility Type or ALL 
"RTN","BPSSCRSL",36,0)
 ;2.02 OPEN/CLOSED/ALL --'O' OPEN CLAIMS;'C' CLOSED CLAIMS;'A' FOR ALL; Display Open, Closed, or ALL claims 
"RTN","BPSSCRSL",37,0)
 ;2.03 SUBMISSION TYPE --'B' BILLING REQUESTS;'R' REVERSALS;'A' FOR ALL; Display specific submission type claims or ALL 
"RTN","BPSSCRSL",38,0)
 ;2.04 INSURANCES -- List of POINTERs to the INSURANCE COMPANY FILE (#36) separated by ";"
"RTN","BPSSCRSL",39,0)
 ;should start and end with ";", example: ";4;5;"
"RTN","BPSSCRSL",40,0)
 ;
"RTN","BPSSCRSL",41,0)
 ;NOTE: use D ^XPAREDIT to add/edit values
"RTN","BPSSCRSL",42,0)
 ;
"RTN","BPSSCRSL",43,0)
 ;*****
"RTN","BPSSCRSL",44,0)
SL ;
"RTN","BPSSCRSL",45,0)
 D FULL^VALM1
"RTN","BPSSCRSL",46,0)
 W @IOF
"RTN","BPSSCRSL",47,0)
 K BPARR
"RTN","BPSSCRSL",48,0)
 I +$G(DUZ)=0 D ERRMSG^BPSSCRCV("Unknown User") Q
"RTN","BPSSCRSL",49,0)
 N BPDUZ7
"RTN","BPSSCRSL",50,0)
 S BPDUZ7=+DUZ
"RTN","BPSSCRSL",51,0)
 ;always get current profile from the file
"RTN","BPSSCRSL",52,0)
 ;D READPRFP(.BPARR,+DUZ)
"RTN","BPSSCRSL",53,0)
 D READPROF(.BPARR,+BPDUZ7)
"RTN","BPSSCRSL",54,0)
 D SAVEVIEW^BPSSCR01(.BPARR)
"RTN","BPSSCRSL",55,0)
 ;edit current profile
"RTN","BPSSCRSL",56,0)
 D EDITPROF(.BPARR,.BPDUZ7)
"RTN","BPSSCRSL",57,0)
 D SAVEVIEW^BPSSCR01(.BPARR)
"RTN","BPSSCRSL",58,0)
 ;save it if necessary only for SORT LIST field
"RTN","BPSSCRSL",59,0)
 ;(so we used a separate array for this and save it only)
"RTN","BPSSCRSL",60,0)
 N BPSRT S BPSRT(1.12)=BPARR(1.12)
"RTN","BPSSCRSL",61,0)
 D ENDEDIT(.BPSRT,+BPDUZ7)
"RTN","BPSSCRSL",62,0)
 D SAVEVIEW^BPSSCR01(.BPARR)
"RTN","BPSSCRSL",63,0)
 ;redraw screen
"RTN","BPSSCRSL",64,0)
 D REDRAW^BPSSCRUD("Updating screen...")
"RTN","BPSSCRSL",65,0)
 Q
"RTN","BPSSCRSL",66,0)
 ;
"RTN","BPSSCRSL",67,0)
 ;input:
"RTN","BPSSCRSL",68,0)
 ;BPARRAY - array that all settings:  
"RTN","BPSSCRSL",69,0)
 ;   in the form BPARRAY(instance in "BPS USRSCR" parameter tool entry) = value
"RTN","BPSSCRSL",70,0)
 ;BPDUZ7 - DUZ
"RTN","BPSSCRSL",71,0)
EDITPROF(BPARR,BPDUZ7) ;
"RTN","BPSSCRSL",72,0)
 N BP1
"RTN","BPSSCRSL",73,0)
 N BPRET
"RTN","BPSSCRSL",74,0)
 N BPSTR
"RTN","BPSSCRSL",75,0)
 S BPSTR="S^T:TRANSACTION DATE;D:DIVISION;I:INSURANCE;C:REJECT CODE;P:PATIENT NAME;N:DRUG NAME;B:BILL TYPE (BB/P2/RT/RS);L:FILL LOCATION;R:RELEASED/NON-RELEASED;A:ACTIVE/DISCONTINUED"
"RTN","BPSSCRSL",76,0)
 I $$EDITFLD^BPSSCRCV(1.12,+BPDUZ7,BPSTR,"ENTER SORT TYPE","TRANSACTION DATE",.BPARR)=-1 S BPDUZ7=0 Q
"RTN","BPSSCRSL",77,0)
 Q
"RTN","BPSSCRSL",78,0)
 ;
"RTN","BPSSCRSL",79,0)
 ;input:
"RTN","BPSSCRSL",80,0)
 ;BPARRAY - array that all settings:  
"RTN","BPSSCRSL",81,0)
 ;in the form BPARRAY(instance in "BPS USRSCR" parameter tool entry) = value
"RTN","BPSSCRSL",82,0)
 ;BPDUZ7 - DUZ
"RTN","BPSSCRSL",83,0)
 ;
"RTN","BPSSCRSL",84,0)
ENDEDIT(BPARRAY,BPDUZ7) ;
"RTN","BPSSCRSL",85,0)
 S BPARRAY("TEMPCV")=1     ; Default as Temporary View defined
"RTN","BPSSCRSL",86,0)
 I $$PROMPT^BPSSCRCV("S^Y:YES;N:NO","DO YOU WANT TO SAVE THIS VIEW AS YOUR PREFERRED VIEW (Y/N)?","")="Y" D
"RTN","BPSSCRSL",87,0)
 . D FILEALL^BPSSCRCV(.BPARRAY,BPDUZ7)
"RTN","BPSSCRSL",88,0)
 . K BPARRAY("TEMPCV")       ; User agreed to save view as preferred - Remove TEMPCV flag
"RTN","BPSSCRSL",89,0)
 Q
"RTN","BPSSCRSL",90,0)
 ;read profile information (used in other routines as well)
"RTN","BPSSCRSL",91,0)
 ;input:
"RTN","BPSSCRSL",92,0)
 ;BPDUZ7 - DUZ
"RTN","BPSSCRSL",93,0)
 ;input/output:
"RTN","BPSSCRSL",94,0)
 ;BPARRAY - to return back profile information, as reference
"RTN","BPSSCRSL",95,0)
 ;see description in the top of the routine
"RTN","BPSSCRSL",96,0)
READPROF(BPARRAY,BPDUZ7) ;
"RTN","BPSSCRSL",97,0)
 N RETV,RETARR,BPFLDNO,BPDIV,BP1
"RTN","BPSSCRSL",98,0)
 N RECIENS
"RTN","BPSSCRSL",99,0)
 S RECIENS=BPDUZ7_","
"RTN","BPSSCRSL",100,0)
 F BPFLDNO=1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.1,1.11,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,2.01,2.02,2.03,2.04 D
"RTN","BPSSCRSL",101,0)
 . S RETV=$$GETPARAM(BPFLDNO,+BPDUZ7)
"RTN","BPSSCRSL",102,0)
 . S BPARRAY(BPFLDNO)=RETV
"RTN","BPSSCRSL",103,0)
 I BPARRAY(1.13)="D" D
"RTN","BPSSCRSL",104,0)
 . S BPARRAY("DIVS")=$$GETPARAM(2,+BPDUZ7)
"RTN","BPSSCRSL",105,0)
 I BPARRAY(1.11)="I" D
"RTN","BPSSCRSL",106,0)
 . S BPARRAY("INS")=$$GETPARAM(2.04,+BPDUZ7)
"RTN","BPSSCRSL",107,0)
 Q
"RTN","BPSSCRSL",108,0)
 ;
"RTN","BPSSCRSL",109,0)
SORTTYPE(BPSTYPE) ;
"RTN","BPSSCRSL",110,0)
 Q:(BPSTYPE="T") "Transaction Date"
"RTN","BPSSCRSL",111,0)
 Q:(BPSTYPE="D") "ECME division"
"RTN","BPSSCRSL",112,0)
 Q:(BPSTYPE="I") "Insurance"
"RTN","BPSSCRSL",113,0)
 Q:(BPSTYPE="C") "Reject Code"
"RTN","BPSSCRSL",114,0)
 Q:(BPSTYPE="P") "Patient Name"
"RTN","BPSSCRSL",115,0)
 Q:(BPSTYPE="N") "Drug Name"
"RTN","BPSSCRSL",116,0)
 Q:(BPSTYPE="B") "Claim's Origin (BB/P2/RT/RS)"
"RTN","BPSSCRSL",117,0)
 Q:(BPSTYPE="L") "Fill Location"
"RTN","BPSSCRSL",118,0)
 Q:(BPSTYPE="R") "Released/Non-released"
"RTN","BPSSCRSL",119,0)
 Q:(BPSTYPE="A") "Active/Discontinued"
"RTN","BPSSCRSL",120,0)
 Q ""
"RTN","BPSSCRSL",121,0)
 ;
"RTN","BPSSCRSL",122,0)
 ;
"RTN","BPSSCRSL",123,0)
GETPARAM(BPFLDNO,BPDUZ) ;
"RTN","BPSSCRSL",124,0)
 Q $$GET^XPAR(BPDUZ_";VA(200,","BPS USRSCR",BPFLDNO,"I")
"RTN","BPSSCRSL",125,0)
 ;
"RTN","BPSSCRSL",126,0)
 ;save value of the parameter
"RTN","BPSSCRSL",127,0)
SAVEPAR(BPFLDNO,BPDUZ,BPVAL) ;
"RTN","BPSSCRSL",128,0)
 D EN^XPAR(BPDUZ_";VA(200,","BPS USRSCR",BPFLDNO,BPVAL,.BPERR)
"RTN","BPSSCRSL",129,0)
 I BPERR'="0" W !,BPERR,! Q 0
"RTN","BPSSCRSL",130,0)
 Q 1
"RTN","BPSSCRSL",131,0)
 ;
"RTN","BPSTEST")
0^8^B227529281
"RTN","BPSTEST",1,0)
BPSTEST ;OAK/ELZ - ECME TESTING TOOL ;11/15/07  09:55
"RTN","BPSTEST",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**6,7,8,10,11,15,19,20,22**;JUN 2004;Build 28
"RTN","BPSTEST",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSTEST",4,0)
 ;
"RTN","BPSTEST",5,0)
 ; Look at BPSTEST1 for additional documentation of the Testing Tool
"RTN","BPSTEST",6,0)
 ;
"RTN","BPSTEST",7,0)
GETOVER(KEY1,KEY2,BPSORESP,BPSWHERE,BPSTYPE,BPPAYSEQ) ;
"RTN","BPSTEST",8,0)
 ; called by BPSNCPDP to enter overrides for a particular RX
"RTN","BPSTEST",9,0)
 ; INPUT
"RTN","BPSTEST",10,0)
 ;    KEY1      - Prescription IEN/Patient IEN
"RTN","BPSTEST",11,0)
 ;    KEY2      - Fill Number/Policy Number
"RTN","BPSTEST",12,0)
 ;    BPSORESP  - Previous response when this claim was processed
"RTN","BPSTEST",13,0)
 ;    BPSWHERE  - RX Action passed into BPSNCPDP
"RTN","BPSTEST",14,0)
 ;    BPSTYPE   - R (Reversal), S (Submission), E (Eligibility)
"RTN","BPSTEST",15,0)
 ;    BPPAYSEQ  - payer sequence 1 - primary, 2 - secondary 
"RTN","BPSTEST",16,0)
 ; OUTPUT
"RTN","BPSTEST",17,0)
 ;    None - Table BPS PAYER RESPONSE OVERRIDE entry is created.
"RTN","BPSTEST",18,0)
 ;
"RTN","BPSTEST",19,0)
 N BPSTRANS,BPSTIEN,BPSSRESP,DIC,X,Y,DIR,DIK,DA
"RTN","BPSTEST",20,0)
 ;
"RTN","BPSTEST",21,0)
 ; Check if testing is enabled
"RTN","BPSTEST",22,0)
 I '$$CHECK() Q
"RTN","BPSTEST",23,0)
 ;
"RTN","BPSTEST",24,0)
 ; Option can not be run for Date of Death option as it causes errors
"RTN","BPSTEST",25,0)
 I $G(XQY0)["DG DEATH ENTRY" W !,"The testing tool can not be run from Date of Death option" Q
"RTN","BPSTEST",26,0)
 ;
"RTN","BPSTEST",27,0)
 ; Do not run for background jobs
"RTN","BPSTEST",28,0)
 I $D(ZTQUEUED)!(",AREV,CRLB,CRLR,CRLX,CRRL,PC,PL,"[(","_BPSWHERE_",")) Q
"RTN","BPSTEST",29,0)
 ;
"RTN","BPSTEST",30,0)
 ; Create Transaction Number
"RTN","BPSTEST",31,0)
 S BPSTRANS=$$IEN59^BPSOSRX(KEY1,KEY2,$S($G(BPPAYSEQ)>0:+BPPAYSEQ,1:1))
"RTN","BPSTEST",32,0)
 ;
"RTN","BPSTEST",33,0)
 ; Lookup the record in the BPS PAYER RESPONSE OVERRIDE table
"RTN","BPSTEST",34,0)
 S DIC=9002313.32,DIC(0)="",X=BPSTRANS
"RTN","BPSTEST",35,0)
 D ^DIC
"RTN","BPSTEST",36,0)
 S BPSTIEN=+Y
"RTN","BPSTEST",37,0)
 ;
"RTN","BPSTEST",38,0)
 ; Prompt if user wants to do overrides
"RTN","BPSTEST",39,0)
 W !!,"Payer Overrides are enabled at this site.  If this is production environment,"
"RTN","BPSTEST",40,0)
 W !,"do not enter overrides (enter No at the next prompt) and disable this"
"RTN","BPSTEST",41,0)
 W !,"functionality in the BPS SETUP table."
"RTN","BPSTEST",42,0)
 W !!,"Entering No at the next prompt will delete any current overrides for the"
"RTN","BPSTEST",43,0)
 W !,"request, if they exist.",!
"RTN","BPSTEST",44,0)
 S DIR(0)="SA^Y:Yes;N:No"
"RTN","BPSTEST",45,0)
 S DIR("A")="Do you want to enter overrides for this request? ",DIR("B")="NO"
"RTN","BPSTEST",46,0)
 D ^DIR
"RTN","BPSTEST",47,0)
 ;
"RTN","BPSTEST",48,0)
 ; If no, delete the transaction (if it exists) and quit
"RTN","BPSTEST",49,0)
 I Y'="Y" D:BPSTIEN'=-1  Q
"RTN","BPSTEST",50,0)
 . S DIK="^BPS(9002313.32,",DA=BPSTIEN
"RTN","BPSTEST",51,0)
 . D ^DIK
"RTN","BPSTEST",52,0)
 ;
"RTN","BPSTEST",53,0)
 ; If the record does not exist, create it
"RTN","BPSTEST",54,0)
 I BPSTIEN=-1 S BPSTIEN=$$CREATE(BPSTRANS)
"RTN","BPSTEST",55,0)
 I BPSTIEN=-1 W !,"Failed to create the BPS PAYER RESPONSE OVERRIDE record",! Q
"RTN","BPSTEST",56,0)
 ;
"RTN","BPSTEST",57,0)
 ; If BPSTYPE is 'S' (submission) and old response is 'E Payable', change BPSTYPE to 'RS'
"RTN","BPSTEST",58,0)
 ; But don't change BPSTYPE to 'RS' if the BPSWHERE value is "ERWV" which is the Resubmit Without Reversal action (BPS*1*20)
"RTN","BPSTEST",59,0)
 I BPSTYPE="S",BPSWHERE'="ERWV",BPSORESP="E PAYABLE"!(BPSORESP="E DUPLICATE")!(BPSORESP="E REVERSAL REJECTED")!(BPSORESP="E REVERSAL UNSTRANDED") S BPSTYPE="RS"
"RTN","BPSTEST",60,0)
 ;
"RTN","BPSTEST",61,0)
 ; Update with the BPSTYPE
"RTN","BPSTEST",62,0)
 D FILE("^BPS(9002313.32,",BPSTIEN,.02,BPSTYPE)
"RTN","BPSTEST",63,0)
 ;
"RTN","BPSTEST",64,0)
 ; Message for RS
"RTN","BPSTEST",65,0)
 I BPSTYPE="RS" D
"RTN","BPSTEST",66,0)
 . W !!,"This submission may also have a reversal so you will be prompted for the"
"RTN","BPSTEST",67,0)
 . W !,"reversal overrides."
"RTN","BPSTEST",68,0)
 ;
"RTN","BPSTEST",69,0)
 ; If BPSTYPE is equal to 'E', then prompt for eligibility response
"RTN","BPSTEST",70,0)
 I BPSTYPE["E" D
"RTN","BPSTEST",71,0)
 . W !!,"Eligibility Questions"
"RTN","BPSTEST",72,0)
 . D PROMPT(BPSTIEN,.08,"A")
"RTN","BPSTEST",73,0)
 . N BPSRESP
"RTN","BPSTEST",74,0)
 . S BPSRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.08,"I")
"RTN","BPSTEST",75,0)
 . I BPSRESP="R" D REJECTS(BPSTIEN) ; BPS*1*22
"RTN","BPSTEST",76,0)
 ;
"RTN","BPSTEST",77,0)
 ; If BPSTYPE contains 'R', then prompt for reversal response
"RTN","BPSTEST",78,0)
 I BPSTYPE["R" D
"RTN","BPSTEST",79,0)
 . W !!,"Reversal Questions"
"RTN","BPSTEST",80,0)
 . D PROMPT(BPSTIEN,.05,"A")
"RTN","BPSTEST",81,0)
 . N BPSRESP
"RTN","BPSTEST",82,0)
 . S BPSRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.05,"I")
"RTN","BPSTEST",83,0)
 . I BPSRESP="R" D ENREVRJ(BPSTRANS)
"RTN","BPSTEST",84,0)
 ;
"RTN","BPSTEST",85,0)
 ; If BPSTYPE contains 'S', do submission response
"RTN","BPSTEST",86,0)
 I BPSTYPE["S" D
"RTN","BPSTEST",87,0)
 . W !!,"Submission Questions"
"RTN","BPSTEST",88,0)
 . D PROMPT(BPSTIEN,.03,"P")
"RTN","BPSTEST",89,0)
 . S BPSSRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.03,"I")
"RTN","BPSTEST",90,0)
 . I BPSSRESP="P"!(BPSSRESP="D") D PROMPT(BPSTIEN,.04,40)       ; total amount paid (509-F9)
"RTN","BPSTEST",91,0)
 . I BPSSRESP="P"!(BPSSRESP="D") D PROMPT(BPSTIEN,.06,9)        ; copay amount (518-FI)
"RTN","BPSTEST",92,0)
 . I BPSSRESP="R" D REJECTS(BPSTIEN) ; BPS*1*22
"RTN","BPSTEST",93,0)
 . ;
"RTN","BPSTEST",94,0)
 . ; This section is for new D1-E7 fields and other fields so we can test that they are filed correctly
"RTN","BPSTEST",95,0)
 . ; At some point, these can probably be removed
"RTN","BPSTEST",96,0)
 . I BPSSRESP="P"!(BPSSRESP="D")!(BPSSRESP="R") D
"RTN","BPSTEST",97,0)
 .. ;
"RTN","BPSTEST",98,0)
 .. ; Ask if user wants to enter data for additional response file fields - Quit if user says no
"RTN","BPSTEST",99,0)
 .. N DIR,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","BPSTEST",100,0)
 .. S DIR(0)="YA",DIR("A")="Populate Additional Response Fields? ",DIR("B")="No" W ! D ^DIR
"RTN","BPSTEST",101,0)
 .. I Y'=1 Q
"RTN","BPSTEST",102,0)
 .. ;
"RTN","BPSTEST",103,0)
 .. ; Overrides to test functionality of BPS*1*20
"RTN","BPSTEST",104,0)
 .. D PROMPT(BPSTIEN,.15,0)        ; Ingredient Cost Paid (506)
"RTN","BPSTEST",105,0)
 .. D PROMPT(BPSTIEN,.16,0)        ; Dispensing Fee Paid (507)
"RTN","BPSTEST",106,0)
 .. D PROMPT(BPSTIEN,.17,0)        ; Remaining Deductible Amount (513)
"RTN","BPSTEST",107,0)
 .. D PROMPT(BPSTIEN,.18,0)        ; Amount Applied to Periodic Deductible (517)
"RTN","BPSTEST",108,0)
 .. ;
"RTN","BPSTEST",109,0)
 .. ; Additional overrides for D1-D9 (BPS*1*15)
"RTN","BPSTEST",110,0)
 .. D PROMPT(BPSTIEN,.09,"")       ; next available fill date
"RTN","BPSTEST",111,0)
 .. D PROMPT(BPSTIEN,.1,"")        ; adjudicated payment type
"RTN","BPSTEST",112,0)
 .. ;
"RTN","BPSTEST",113,0)
 .. ; Additional overrides for E0-E6 (BPS*1*19)
"RTN","BPSTEST",114,0)
 .. D PROMPT(BPSTIEN,2.01,"04")    ; % sales tax basis pd
"RTN","BPSTEST",115,0)
 .. D PROMPT(BPSTIEN,2.02,11)      ; other amount paid qualifier
"RTN","BPSTEST",116,0)
 .. D PROMPT(BPSTIEN,2.03,"01")    ; payer id qualifier
"RTN","BPSTEST",117,0)
 .. D PROMPT(BPSTIEN,2.04,"")      ; help desk phone# ext
"RTN","BPSTEST",118,0)
 .. D PROMPT(BPSTIEN,2.05,"")      ; pro service fee cont/reim amt
"RTN","BPSTEST",119,0)
 .. D PROMPT(BPSTIEN,2.06,"")      ; other payer help desk phone# ext
"RTN","BPSTEST",120,0)
 .. D PROMPT(BPSTIEN,2.07,"")      ; response intermed auth type id
"RTN","BPSTEST",121,0)
 .. D PROMPT(BPSTIEN,2.08,"")      ; response intermed auth id
"RTN","BPSTEST",122,0)
 .. D PROMPT(BPSTIEN,3.01,"")      ; response intermed message
"RTN","BPSTEST",123,0)
 .. ;
"RTN","BPSTEST",124,0)
 .. ; E7 overrides (BPS*1*20)
"RTN","BPSTEST",125,0)
 .. D PROMPT(BPSTIEN,.11,"")          ; quan limit per specific time period
"RTN","BPSTEST",126,0)
 .. D PROMPT(BPSTIEN,.12,"")          ; quan limit time period
"RTN","BPSTEST",127,0)
 .. D PROMPT(BPSTIEN,.13,"")          ; days supp limit per specific time period
"RTN","BPSTEST",128,0)
 .. D PROMPT(BPSTIEN,.14,"")          ; days supp limit time period
"RTN","BPSTEST",129,0)
 .. ; Overrides to test functionality - BPS*1*22
"RTN","BPSTEST",130,0)
 .. D PROMPT(BPSTIEN,2.09,"")         ; reconciliation id
"RTN","BPSTEST",131,0)
 ;
"RTN","BPSTEST",132,0)
 W ! D PROMPT(BPSTIEN,.07,0)
"RTN","BPSTEST",133,0)
 Q
"RTN","BPSTEST",134,0)
 ;
"RTN","BPSTEST",135,0)
SETOVER(BPSTRANS,BPSTYPE,BPSDATA) ;
"RTN","BPSTEST",136,0)
 ; called by BPSECMPS to set the override data
"RTN","BPSTEST",137,0)
 ; Input
"RTN","BPSTEST",138,0)
 ;    BPSTRANS - Transaction IEN
"RTN","BPSTEST",139,0)
 ;    BPSTYPE  - B1 for submission, B2 for reversals
"RTN","BPSTEST",140,0)
 ; Output
"RTN","BPSTEST",141,0)
 ;    BPSDATA    - Passed by reference and updated with appropriate overrides
"RTN","BPSTEST",142,0)
 ;
"RTN","BPSTEST",143,0)
 N BPSTIEN,BPSRRESP,BPSSRESP,BPSPAID,BPSRCNT,BPSRIEN,BPSRCODE,BPSRCD,BPSCOPAY,BPSXXXX,BPSUNDEF
"RTN","BPSTEST",144,0)
 N BPSAJPAY,BPSNFLDT,BPSX
"RTN","BPSTEST",145,0)
 N BPS506,BPS507,BPS513,BPS517
"RTN","BPSTEST",146,0)
 ;
"RTN","BPSTEST",147,0)
 ; Check the Test Flag in set in BPS SETUP
"RTN","BPSTEST",148,0)
 I '$$CHECK() Q
"RTN","BPSTEST",149,0)
 ;
"RTN","BPSTEST",150,0)
 ; Check if the Transaction Number is defined in BPS RESPONSE OVERRIDES
"RTN","BPSTEST",151,0)
 S BPSTIEN=$O(^BPS(9002313.32,"B",BPSTRANS,""))
"RTN","BPSTEST",152,0)
 I BPSTIEN="" Q
"RTN","BPSTEST",153,0)
 ;
"RTN","BPSTEST",154,0)
 ; If a eligibility, check for specific reversal overrides and set
"RTN","BPSTEST",155,0)
 I BPSTYPE="E1" D  Q
"RTN","BPSTEST",156,0)
 . S BPSRRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.08,"I")
"RTN","BPSTEST",157,0)
 . ;
"RTN","BPSTEST",158,0)
 . ; If the response is Stranded, force an <UNDEF> error
"RTN","BPSTEST",159,0)
 . I BPSRRESP="S" S BPSXXXX=BPSUNDEF
"RTN","BPSTEST",160,0)
 . I BPSRRESP]"" S BPSDATA(1,112)=BPSRRESP
"RTN","BPSTEST",161,0)
 . S BPSDATA(9002313.03,9002313.03,"+1,",501)=$S(BPSRRESP="R":"R",1:"A")
"RTN","BPSTEST",162,0)
 . ; 
"RTN","BPSTEST",163,0)
 . ; If the response is accepted, delete the reject code count and codes
"RTN","BPSTEST",164,0)
 . I BPSRRESP="A" K BPSDATA(1,510),BPSDATA(1,511)
"RTN","BPSTEST",165,0)
 . ; 
"RTN","BPSTEST",166,0)
 . ; If the response is rejected, delete the rejections returned by payers
"RTN","BPSTEST",167,0)
 . ;   and put in the ones entered by the user
"RTN","BPSTEST",168,0)
 . I BPSRRESP="R" D
"RTN","BPSTEST",169,0)
 .. K BPSDATA(1,509),BPSDATA(1,511)
"RTN","BPSTEST",170,0)
 .. S BPSRCNT=0
"RTN","BPSTEST",171,0)
 .. S BPSRIEN=0 F  S BPSRIEN=$O(^BPS(9002313.32,BPSTIEN,1,BPSRIEN)) Q:+BPSRIEN=0  D
"RTN","BPSTEST",172,0)
 ... S BPSRCODE=$P($G(^BPS(9002313.32,BPSTIEN,1,BPSRIEN,0)),"^",1)
"RTN","BPSTEST",173,0)
 ... ; Increment counter and store
"RTN","BPSTEST",174,0)
 ... I BPSRCODE]"" D
"RTN","BPSTEST",175,0)
 .... S BPSRCD=$$GET1^DIQ(9002313.93,BPSRCODE_",",.01,"E")
"RTN","BPSTEST",176,0)
 .... I BPSRCD]"" S BPSRCNT=BPSRCNT+1,BPSDATA(1,511,BPSRCNT)=BPSRCD
"RTN","BPSTEST",177,0)
 .. ; Store total number of rejections
"RTN","BPSTEST",178,0)
 .. S BPSDATA(1,510)=BPSRCNT
"RTN","BPSTEST",179,0)
 ;
"RTN","BPSTEST",180,0)
 ; If a reversal, check for specific reversal overrides and set
"RTN","BPSTEST",181,0)
 I BPSTYPE="B2" D
"RTN","BPSTEST",182,0)
 . S BPSRRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.05,"I")
"RTN","BPSTEST",183,0)
 . ;
"RTN","BPSTEST",184,0)
 . ; If the response is Stranded, force an <UNDEF> error
"RTN","BPSTEST",185,0)
 . I BPSRRESP="S" S BPSXXXX=BPSUNDEF
"RTN","BPSTEST",186,0)
 . I BPSRRESP]"" S BPSDATA(1,112)=$S(BPSRRESP="D":"S",1:BPSRRESP)
"RTN","BPSTEST",187,0)
 . S BPSDATA(9002313.03,9002313.03,"+1,",501)=$S(BPSRRESP="R":"R",1:"A")
"RTN","BPSTEST",188,0)
 . ;
"RTN","BPSTEST",189,0)
 . ; If the response is accepted or duplicate, kill the reject code count and codes
"RTN","BPSTEST",190,0)
 . I BPSRRESP="A"!(BPSRRESP="D") K BPSDATA(1,510),BPSDATA(1,511)
"RTN","BPSTEST",191,0)
 . ;
"RTN","BPSTEST",192,0)
 . ; If the response is rejected, set the reject codes
"RTN","BPSTEST",193,0)
 . I BPSRRESP="R" D SETREJ(BPSTRANS)
"RTN","BPSTEST",194,0)
 ;
"RTN","BPSTEST",195,0)
 ; If a submission, check for specific submission overrides and set
"RTN","BPSTEST",196,0)
 I BPSTYPE="B1" D
"RTN","BPSTEST",197,0)
 . ; Get submission response
"RTN","BPSTEST",198,0)
 . S BPSSRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.03,"I")
"RTN","BPSTEST",199,0)
 . ;
"RTN","BPSTEST",200,0)
 . ; If the response is Stranded, force an <UNDEF> error
"RTN","BPSTEST",201,0)
 . I BPSSRESP="S" S BPSXXXX=BPSUNDEF
"RTN","BPSTEST",202,0)
 . ;
"RTN","BPSTEST",203,0)
 . ; If BPSSRESP exists, file it
"RTN","BPSTEST",204,0)
 . I BPSSRESP]"" D
"RTN","BPSTEST",205,0)
 .. S BPSDATA(1,112)=BPSSRESP
"RTN","BPSTEST",206,0)
 .. S BPSDATA(9002313.03,9002313.03,"+1,",501)=$S(BPSSRESP="R":"R",1:"A")
"RTN","BPSTEST",207,0)
 .. ; If payable or duplicate, get the BPSPAID amount and file it if it
"RTN","BPSTEST",208,0)
 .. ; exists.  Also delete any reject codes
"RTN","BPSTEST",209,0)
 .. I BPSSRESP="P"!(BPSSRESP="D") D
"RTN","BPSTEST",210,0)
 ... S BPSPAID=$$GET1^DIQ(9002313.32,BPSTIEN_",",.04,"I")
"RTN","BPSTEST",211,0)
 ... I BPSPAID]"" S BPSDATA(1,509)=$$DFF^BPSECFM(BPSPAID,8)         ; 509 Total amount paid
"RTN","BPSTEST",212,0)
 ... ;
"RTN","BPSTEST",213,0)
 ... K BPSDATA(1,510),BPSDATA(1,511)      ; kill Reject Count (510) and Reject Code (511)
"RTN","BPSTEST",214,0)
 ... ;
"RTN","BPSTEST",215,0)
 ... S BPSCOPAY=$$GET1^DIQ(9002313.32,BPSTIEN_",",.06,"I")
"RTN","BPSTEST",216,0)
 ... I BPSCOPAY]"" S BPSDATA(1,518)=$$DFF^BPSECFM(BPSCOPAY,8)       ; 518 Copay Amount
"RTN","BPSTEST",217,0)
 ... ;
"RTN","BPSTEST",218,0)
 ... S BPS506=$$GET1^DIQ(9002313.32,BPSTIEN_",",.15,"I")
"RTN","BPSTEST",219,0)
 ... I BPS506]"" S BPSDATA(1,506)=$$DFF^BPSECFM(BPS506,8)           ; 506 Ingredient Cost Paid
"RTN","BPSTEST",220,0)
 ... ;
"RTN","BPSTEST",221,0)
 ... S BPS507=$$GET1^DIQ(9002313.32,BPSTIEN_",",.16,"I")
"RTN","BPSTEST",222,0)
 ... I BPS507]"" S BPSDATA(1,507)=$$DFF^BPSECFM(BPS507,8)           ; 507 Dispensing Fee Paid
"RTN","BPSTEST",223,0)
 ... ;
"RTN","BPSTEST",224,0)
 ... S BPS513=$$GET1^DIQ(9002313.32,BPSTIEN_",",.17,"I")
"RTN","BPSTEST",225,0)
 ... I BPS513]"" S BPSDATA(1,513)=$$DFF^BPSECFM(BPS513,8)           ; 513 Remaining Deductible Amount
"RTN","BPSTEST",226,0)
 ... ;
"RTN","BPSTEST",227,0)
 ... S BPS517=$$GET1^DIQ(9002313.32,BPSTIEN_",",.18,"I")
"RTN","BPSTEST",228,0)
 ... I BPS517]"" S BPSDATA(1,517)=$$DFF^BPSECFM(BPS517,8)           ; 517 Amount Applied to Periodic Deductible
"RTN","BPSTEST",229,0)
 ... Q
"RTN","BPSTEST",230,0)
 .. ;
"RTN","BPSTEST",231,0)
 .. I BPSSRESP="P"!(BPSSRESP="D")!(BPSSRESP="R") D
"RTN","BPSTEST",232,0)
 ... ; D1-D9 fields (BPS*1*15)
"RTN","BPSTEST",233,0)
 ... S BPSAJPAY=$$GET1^DIQ(9002313.32,BPSTIEN_",",.1,"I")           ; Adjudicated Payment Type
"RTN","BPSTEST",234,0)
 ... I BPSAJPAY]"" S BPSDATA(1,1028)=$$NFF^BPSECFM(BPSAJPAY,2)
"RTN","BPSTEST",235,0)
 ... S BPSNFLDT=$$GET1^DIQ(9002313.32,BPSTIEN_",",.09,"I")          ; Override Next Available Fill
"RTN","BPSTEST",236,0)
 ... I BPSNFLDT]"" S BPSDATA(1,2004)=$$DTF1^BPSECFM(BPSNFLDT)
"RTN","BPSTEST",237,0)
 ... ;
"RTN","BPSTEST",238,0)
 ... ; E0-E6 overrides (BPS*1*19)
"RTN","BPSTEST",239,0)
 ... ; PERCENTAGE SALES TAX BASIS PAID
"RTN","BPSTEST",240,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.01,"I")
"RTN","BPSTEST",241,0)
 ... I BPSX]"" S BPSDATA(1,561)=BPSX
"RTN","BPSTEST",242,0)
 ... ; OTHER AMOUNT PAID QUALIFIER and associated field
"RTN","BPSTEST",243,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.02,"I")
"RTN","BPSTEST",244,0)
 ... I BPSX]"" S BPSDATA(1,564,1)=$$NFF^BPSECFM(BPSX,2),BPSDATA(1,565,1)=$$DFF^BPSECFM(5.64,8),BPSDATA(1,563)=1
"RTN","BPSTEST",245,0)
 ... ; PAYER ID QUALIFIER
"RTN","BPSTEST",246,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.03,"I")
"RTN","BPSTEST",247,0)
 ... I BPSX]"" S BPSDATA(9002313.03,9002313.03,"+1,",568)=BPSX
"RTN","BPSTEST",248,0)
 ... ; HELP DESK TELEPHONE NUMBER EXTENSION
"RTN","BPSTEST",249,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.04,"I")
"RTN","BPSTEST",250,0)
 ... I BPSX]"" S BPSDATA(1,"2022")=$$NFF^BPSECFM(BPSX,8)
"RTN","BPSTEST",251,0)
 ... ; PROFESSIONAL SERVICE FEE CONTRACTED/REIMURSEMENT AMOUNT
"RTN","BPSTEST",252,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.05,"I")
"RTN","BPSTEST",253,0)
 ... I BPSX]"" S BPSDATA(1,"2033")=$$DFF^BPSECFM(BPSX,8)
"RTN","BPSTEST",254,0)
 ... ; OTHER PAYER HELPDESK TELEPHONE EXTENSION
"RTN","BPSTEST",255,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.06,"I")
"RTN","BPSTEST",256,0)
 ... I BPSX]"" S BPSDATA(1,"2023",1)=$$NFF^BPSECFM(BPSX,8),BPSDATA(1,338,1)="01"
"RTN","BPSTEST",257,0)
 ... ; RESPONSE INTERMEDIARY AUTHORIZATION TYPE ID and associated fields
"RTN","BPSTEST",258,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.07,"I")
"RTN","BPSTEST",259,0)
 ... I BPSX]"" S BPSDATA(1,"2053",1)=$$NFF^BPSECFM(BPSX,2),BPSDATA(1,2052)=1
"RTN","BPSTEST",260,0)
 ... ; RESPONSE INTERMEDIARY AUTHORIZATION ID and associated fields
"RTN","BPSTEST",261,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.08,"I")
"RTN","BPSTEST",262,0)
 ... I BPSX]"" S BPSDATA(1,"2054",1)=$$ANFF^BPSECFM(BPSX,20),BPSDATA(1,2052)=1
"RTN","BPSTEST",263,0)
 ... ; INTERMEDIARY MESSAGE and associated fields
"RTN","BPSTEST",264,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",3.01,"I")
"RTN","BPSTEST",265,0)
 ... I BPSX]"" S BPSDATA(1,"2051",1)=$$ANFF^BPSECFM(BPSX,200),BPSDATA(1,2052)=1
"RTN","BPSTEST",266,0)
 ... ; (BPS*1*22)
"RTN","BPSTEST",267,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.09,"I") ; B98-34 reconciliation id
"RTN","BPSTEST",268,0)
 ... I BPSX]"" S BPSDATA(1,"2098")=$$ANFF^BPSECFM(BPSX,30)
"RTN","BPSTEST",269,0)
 ... ;
"RTN","BPSTEST",270,0)
 ... ; E7 overrides (BPS*1*20)
"RTN","BPSTEST",271,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",.11,"I") I BPSX'="" D     ; B88-3R quantity limit per spec time period
"RTN","BPSTEST",272,0)
 .... S BPSDATA(1,2087)=1                          ; count field
"RTN","BPSTEST",273,0)
 .... S BPSDATA(1,2088,1)=$$NFF^BPSECFM(BPSX,10)   ; data from override file
"RTN","BPSTEST",274,0)
 .... Q
"RTN","BPSTEST",275,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",.12,"I") I BPSX'="" D     ; B89-3S quantity limit time period
"RTN","BPSTEST",276,0)
 .... S BPSDATA(1,2087)=1                          ; count field
"RTN","BPSTEST",277,0)
 .... S BPSDATA(1,2089,1)=$$NFF^BPSECFM(BPSX,5)    ; data from override file
"RTN","BPSTEST",278,0)
 .... Q
"RTN","BPSTEST",279,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",.13,"I") I BPSX'="" D     ; B91-3W days supply limit per spec time period
"RTN","BPSTEST",280,0)
 .... S BPSDATA(1,2090)=1                          ; count field
"RTN","BPSTEST",281,0)
 .... S BPSDATA(1,2091,1)=$$NFF^BPSECFM(BPSX,3)    ; data from override file
"RTN","BPSTEST",282,0)
 .... Q
"RTN","BPSTEST",283,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",.14,"I") I BPSX'="" D     ; B92-3X days supply limit time period
"RTN","BPSTEST",284,0)
 .... S BPSDATA(1,2090)=1                          ; count field
"RTN","BPSTEST",285,0)
 .... S BPSDATA(1,2092,1)=$$NFF^BPSECFM(BPSX,5)    ; data from override file
"RTN","BPSTEST",286,0)
 .... Q
"RTN","BPSTEST",287,0)
 ... Q
"RTN","BPSTEST",288,0)
 .. ;
"RTN","BPSTEST",289,0)
 .. ; If rejected, get the rejection code and file them
"RTN","BPSTEST",290,0)
 .. ; Also, delete the BPSPAID amount
"RTN","BPSTEST",291,0)
 .. I BPSSRESP="R" D
"RTN","BPSTEST",292,0)
 ... ; Delete old rejections and BPSPAID amount
"RTN","BPSTEST",293,0)
 ... K BPSDATA(1,509),BPSDATA(1,511)
"RTN","BPSTEST",294,0)
 ... ; Loop through rejections and store
"RTN","BPSTEST",295,0)
 ... S BPSRCNT=0
"RTN","BPSTEST",296,0)
 ... S BPSRIEN=0 F  S BPSRIEN=$O(^BPS(9002313.32,BPSTIEN,1,BPSRIEN)) Q:+BPSRIEN=0  D
"RTN","BPSTEST",297,0)
 .... S BPSRCODE=$P($G(^BPS(9002313.32,BPSTIEN,1,BPSRIEN,0)),"^",1)
"RTN","BPSTEST",298,0)
 .... ; Increment counter and store
"RTN","BPSTEST",299,0)
 .... I BPSRCODE]"" D
"RTN","BPSTEST",300,0)
 ..... S BPSRCD=$$GET1^DIQ(9002313.93,BPSRCODE_",",.01,"E")
"RTN","BPSTEST",301,0)
 ..... I BPSRCD]"" S BPSRCNT=BPSRCNT+1,BPSDATA(1,511,BPSRCNT)=BPSRCD
"RTN","BPSTEST",302,0)
 ... ; Store total number of rejections
"RTN","BPSTEST",303,0)
 ... S BPSDATA(1,510)=BPSRCNT
"RTN","BPSTEST",304,0)
 Q
"RTN","BPSTEST",305,0)
 ;
"RTN","BPSTEST",306,0)
SELOVER ;
"RTN","BPSTEST",307,0)
 ; Used to create overrides for prescription that will processed in the
"RTN","BPSTEST",308,0)
 ; background (CMOP, auto-reversals).  The user is prompted for the
"RTN","BPSTEST",309,0)
 ; prescription and other information and then calls GETOVER.  It is called
"RTN","BPSTEST",310,0)
 ; by option BPS PROVIDER RESPONSE OVERRIDES
"RTN","BPSTEST",311,0)
 ;
"RTN","BPSTEST",312,0)
 ; This does not work for eligibility but we don't do them in the background 
"RTN","BPSTEST",313,0)
 ;   right now.
"RTN","BPSTEST",314,0)
 ;
"RTN","BPSTEST",315,0)
 N BPSRXIEN,BPSRXNM,BPSRXFL,BPSRFL,BPSORESP,BPSTYPE,BPSRXARR,BPSRARR,DIC,Y,DIR
"RTN","BPSTEST",316,0)
 ;
"RTN","BPSTEST",317,0)
 ; Check if test mode is on
"RTN","BPSTEST",318,0)
 I '$$CHECK() Q
"RTN","BPSTEST",319,0)
 ;
"RTN","BPSTEST",320,0)
 ; Prompt for the Prescription
"RTN","BPSTEST",321,0)
 S BPSRXIEN=$$PROMPTRX^BPSUTIL1 Q:BPSRXIEN<1
"RTN","BPSTEST",322,0)
 D RXAPI^BPSUTIL1(BPSRXIEN,".01;22","BPSRXARR","IE")
"RTN","BPSTEST",323,0)
 S BPSRXNM=$G(BPSRXARR(52,BPSRXIEN,.01,"E"))
"RTN","BPSTEST",324,0)
 ;
"RTN","BPSTEST",325,0)
 ; Prompt for Fill/Refill
"RTN","BPSTEST",326,0)
 S DIR(0)="S^0:"_$G(BPSRXARR(52,BPSRXIEN,22,"E"))
"RTN","BPSTEST",327,0)
 F BPSRFL=1:1 D RXSUBF^BPSUTIL1(BPSRXIEN,52,52.1,BPSRFL,.01,"BPSRARR","E") Q:$G(BPSRARR(52.1,BPSRFL,.01,"E"))=""  D
"RTN","BPSTEST",328,0)
 . S DIR(0)=DIR(0)_";"_BPSRFL_":"_BPSRARR(52.1,BPSRFL,.01,"E")
"RTN","BPSTEST",329,0)
 S DIR("A")="Select fill/refill for prescription "_BPSRXNM,DIR("B")=0
"RTN","BPSTEST",330,0)
 D ^DIR
"RTN","BPSTEST",331,0)
 I Y'=+Y Q
"RTN","BPSTEST",332,0)
 S BPSRXFL=Y
"RTN","BPSTEST",333,0)
 ;
"RTN","BPSTEST",334,0)
 ; Prompt for BPSTYPE
"RTN","BPSTEST",335,0)
 S DIR(0)="S^R:Reversal;RS:Resubmit with Reversal;S:Submit"
"RTN","BPSTEST",336,0)
 S DIR("A")="Enter BPSTYPE of transaction",DIR("B")="SUBMIT"
"RTN","BPSTEST",337,0)
 D ^DIR
"RTN","BPSTEST",338,0)
 I ",R,RS,S,"'[","_Y_"," Q
"RTN","BPSTEST",339,0)
 S BPSTYPE=Y
"RTN","BPSTEST",340,0)
 ;
"RTN","BPSTEST",341,0)
 ; Set up parameters
"RTN","BPSTEST",342,0)
 S BPSORESP=""
"RTN","BPSTEST",343,0)
 I BPSTYPE="RS" S BPSTYPE="S",BPSORESP="E PAYABLE"
"RTN","BPSTEST",344,0)
 ;
"RTN","BPSTEST",345,0)
 ; Call GETOVER
"RTN","BPSTEST",346,0)
 D GETOVER(BPSRXIEN,BPSRXFL,BPSORESP,"",BPSTYPE)
"RTN","BPSTEST",347,0)
 Q
"RTN","BPSTEST",348,0)
 ;
"RTN","BPSTEST",349,0)
CHECK() ;
"RTN","BPSTEST",350,0)
 ; Check if Test Mode is ON in the BPS Setup table
"RTN","BPSTEST",351,0)
 ; Also called by BPSNCPDP and BPSEMCPS
"RTN","BPSTEST",352,0)
 ;
"RTN","BPSTEST",353,0)
 ;IA#4440
"RTN","BPSTEST",354,0)
 Q $S($$PROD^XUPROD:0,1:$P($G(^BPS(9002313.99,1,0)),"^",3))
"RTN","BPSTEST",355,0)
 ;
"RTN","BPSTEST",356,0)
CREATE(BPSTRANS) ;
"RTN","BPSTEST",357,0)
 ; Create the Override record
"RTN","BPSTEST",358,0)
 ;
"RTN","BPSTEST",359,0)
 N DIC,X,Y,BPSTIEN,DA
"RTN","BPSTEST",360,0)
 S DIC=9002313.32,DIC(0)="L",X=BPSTRANS
"RTN","BPSTEST",361,0)
 D ^DIC
"RTN","BPSTEST",362,0)
 S BPSTIEN=+Y
"RTN","BPSTEST",363,0)
 Q BPSTIEN
"RTN","BPSTEST",364,0)
 ;
"RTN","BPSTEST",365,0)
FILE(DIE,DA,BPSFLD,BPSDATA) ;
"RTN","BPSTEST",366,0)
 ; File in the Override record
"RTN","BPSTEST",367,0)
 ;
"RTN","BPSTEST",368,0)
 N DR,X,Y
"RTN","BPSTEST",369,0)
 S DR=BPSFLD_"///"_BPSDATA
"RTN","BPSTEST",370,0)
 L +@(DIE_DA_")"):0 I $T D ^DIE L -@(DIE_DA_")") Q
"RTN","BPSTEST",371,0)
 W !?5,"Another user is editing this entry."
"RTN","BPSTEST",372,0)
 Q
"RTN","BPSTEST",373,0)
 ;
"RTN","BPSTEST",374,0)
PROMPT(DA,BPSFLD,BPSDFLT) ;
"RTN","BPSTEST",375,0)
 ; Prompt for a specific field and set the data
"RTN","BPSTEST",376,0)
 ;
"RTN","BPSTEST",377,0)
 N DIE,DR,DTOUT,X,Y
"RTN","BPSTEST",378,0)
 S DIE="^BPS(9002313.32,",DR=BPSFLD_"//"_BPSDFLT
"RTN","BPSTEST",379,0)
 L +@(DIE_DA_")"):0 I $T D ^DIE L -@(DIE_DA_")") Q
"RTN","BPSTEST",380,0)
 W !?5,"Another user is editing this entry."
"RTN","BPSTEST",381,0)
 Q
"RTN","BPSTEST",382,0)
 ;
"RTN","BPSTEST",383,0)
REJECTS(BPSTIEN) ; BPS*1*22
"RTN","BPSTEST",384,0)
 N DA,DIE,DR,DTOUT,X,Y
"RTN","BPSTEST",385,0)
 ; Delete all entries from the reject multiple so user doesn't have to manually delete 
"RTN","BPSTEST",386,0)
 ; The reject code prompt will have a default value of '07'
"RTN","BPSTEST",387,0)
 K ^BPS(9002313.32,BPSTIEN,1)
"RTN","BPSTEST",388,0)
 ; Prompt for Reject Code(s) and set the data 
"RTN","BPSTEST",389,0)
 S DA=BPSTIEN,DIE="^BPS(9002313.32,",DR=1_"//07"
"RTN","BPSTEST",390,0)
 L +@(DIE_DA_")"):0 I $T D ^DIE L -@(DIE_DA_")") Q
"RTN","BPSTEST",391,0)
 W !?5,"Another user is editing this entry."
"RTN","BPSTEST",392,0)
 Q 
"RTN","BPSTEST",393,0)
 ;
"RTN","BPSTEST",394,0)
SETDELAY(BPSTRANS) ;
"RTN","BPSTEST",395,0)
 ; Input
"RTN","BPSTEST",396,0)
 ;    BPSTRANS - Transaction IEN
"RTN","BPSTEST",397,0)
 ; Check the Test Flag in set in BPS SETUP
"RTN","BPSTEST",398,0)
 I '$$CHECK() Q 0
"RTN","BPSTEST",399,0)
 N BPSDELAY,BPSTIEN,BPSTIME
"RTN","BPSTEST",400,0)
 ; Check if the Transaction Number is defined in BPS RESPONSE OVERRIDES
"RTN","BPSTEST",401,0)
 S BPSTIEN=$O(^BPS(9002313.32,"B",BPSTRANS,""))
"RTN","BPSTEST",402,0)
 I BPSTIEN="" Q 0
"RTN","BPSTEST",403,0)
 S BPSDELAY=$$GET1^DIQ(9002313.32,BPSTIEN_",",.07,"I")*60
"RTN","BPSTEST",404,0)
 I BPSDELAY'>0 Q 0
"RTN","BPSTEST",405,0)
 S BPSTIME=$$FMADD^XLFDT($$NOW^XLFDT,,,,BPSDELAY)
"RTN","BPSTEST",406,0)
 I BPSTIME>0 D  Q BPSTIME
"RTN","BPSTEST",407,0)
 . ;schedule a task to run RUNNING^BPSOSRX
"RTN","BPSTEST",408,0)
 . N ZTRTN,ZTDTH,ZTIO,ZTSK
"RTN","BPSTEST",409,0)
 . S ZTRTN="RUNECME^BPSTEST",ZTDESC="BPSTEST: ECME testing tool"
"RTN","BPSTEST",410,0)
 . S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,,,,BPSDELAY+10),ZTIO=""
"RTN","BPSTEST",411,0)
 . D ^%ZTLOAD
"RTN","BPSTEST",412,0)
 Q 0
"RTN","BPSTEST",413,0)
 ;
"RTN","BPSTEST",414,0)
RUNECME ;
"RTN","BPSTEST",415,0)
 D RUNNING^BPSOSRX()
"RTN","BPSTEST",416,0)
 Q
"RTN","BPSTEST",417,0)
 ;get the reversal reject from the ^XTMP and set BPSDATA to override data
"RTN","BPSTEST",418,0)
SETREJ(BPSTRANS) ;
"RTN","BPSTEST",419,0)
 N BPSREJ
"RTN","BPSTEST",420,0)
 S BPSREJ=$G(^XTMP("BPSTEST",BPSTRANS))
"RTN","BPSTEST",421,0)
 I BPSREJ="" Q
"RTN","BPSTEST",422,0)
 S BPSDATA(1,511,1)=BPSREJ
"RTN","BPSTEST",423,0)
 S BPSDATA(1,510)=1
"RTN","BPSTEST",424,0)
 Q
"RTN","BPSTEST",425,0)
 ;enter a reversal reject
"RTN","BPSTEST",426,0)
ENREVRJ(BPSTRANS) ;
"RTN","BPSTEST",427,0)
 N BPRJCODE,TMSTAMP
"RTN","BPSTEST",428,0)
 S BPRJCODE=$$PROMPT^BPSSCRU4("Enter a reject code for reversal")
"RTN","BPSTEST",429,0)
 I $P(BPRJCODE,U)="" Q
"RTN","BPSTEST",430,0)
 I $P(BPRJCODE,U)=0 Q
"RTN","BPSTEST",431,0)
 N X,X1,X2
"RTN","BPSTEST",432,0)
 S X1=DT,X2=2 D C^%DTC
"RTN","BPSTEST",433,0)
 S ^XTMP("BPSTEST",0)=X_U_DT_U_"ECME TESTING TOOL, SEE BPSTEST ROUTINE"
"RTN","BPSTEST",434,0)
 S ^XTMP("BPSTEST",BPSTRANS)=$P(BPRJCODE,U)
"RTN","BPSTEST",435,0)
 Q
"RTN","BPSTEST",436,0)
 ;
"RTN","BPSTEST1")
0^11^B196424
"RTN","BPSTEST1",1,0)
BPSTEST1 ;OAK/ELZ - ECME TESTING TOOL ;11/15/07  09:55
"RTN","BPSTEST1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**6,7,8,10,11,15,19,20,22**;JUN 2004;Build 28
"RTN","BPSTEST1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSTEST1",4,0)
 ;
"RTN","BPSTEST1",5,0)
 Q
"RTN","BPSTEST1",6,0)
 ;
"RTN","BPSTEST1",7,0)
 ; Overview
"RTN","BPSTEST1",8,0)
 ; ========
"RTN","BPSTEST1",9,0)
 ;
"RTN","BPSTEST1",10,0)
 ; When a production instance of VistA sends a claim, the claim is
"RTN","BPSTEST1",11,0)
 ; sent to FSC and then to the clearinghouse, which sends the claim to
"RTN","BPSTEST1",12,0)
 ; the appropriate payer.  The payer's response is returned to the
"RTN","BPSTEST1",13,0)
 ; clearinghouse and then to FSC, who returns the response to the site
"RTN","BPSTEST1",14,0)
 ; which sent the claim.
"RTN","BPSTEST1",15,0)
 ;
"RTN","BPSTEST1",16,0)
 ; When a non-production instance of VistA sends a claim, it goes to FSC
"RTN","BPSTEST1",17,0)
 ; and then to the clearinghouse test bed.  Because the claim is flagged
"RTN","BPSTEST1",18,0)
 ; as being a test claim, the clearinghouse does not send the claim to a
"RTN","BPSTEST1",19,0)
 ; payer.  The clearinghouse returns to FSC a boiler-plate response,
"RTN","BPSTEST1",20,0)
 ; indicating the claim was accepted and paid.  FSC returns the response
"RTN","BPSTEST1",21,0)
 ; to the non-production instance of VistA which sent the claim. A non-production
"RTN","BPSTEST1",22,0)
 ; instance of VistA includes any account used by a development team for
"RTN","BPSTEST1",23,0)
 ; development and testing of new enhancements.
"RTN","BPSTEST1",24,0)
 ;
"RTN","BPSTEST1",25,0)
 ; The ECME Testing Tool (^BPSTEST) allows users in a non-production
"RTN","BPSTEST1",26,0)
 ; VistA to override some of the fields on the default response returned
"RTN","BPSTEST1",27,0)
 ; by the clearinghouse.  The Testing Tool does not affect the outgoing
"RTN","BPSTEST1",28,0)
 ; claim data.  The purpose of the Testing Tool is to facilitate testing
"RTN","BPSTEST1",29,0)
 ; by allowing the user to manipulate the default response returned by
"RTN","BPSTEST1",30,0)
 ; the clearinghouse when sending test claims.
"RTN","BPSTEST1",31,0)
 ;
"RTN","BPSTEST1",32,0)
 ; The Testing Tool does not ever run on production VistAs, only on non-
"RTN","BPSTEST1",33,0)
 ; production instances of VistA.
"RTN","BPSTEST1",34,0)
 ;
"RTN","BPSTEST1",35,0)
 ; Invoking the Testing Tool
"RTN","BPSTEST1",36,0)
 ; =========================
"RTN","BPSTEST1",37,0)
 ;
"RTN","BPSTEST1",38,0)
 ; Two things must be true in order for the Testing Tool to be invoked:
"RTN","BPSTEST1",39,0)
 ; The system must not be a production system (i.e.  $$PROD^XUPROD must
"RTN","BPSTEST1",40,0)
 ; be false); and the field PAYER RESPONSE TEST MODE on the file BPS
"RTN","BPSTEST1",41,0)
 ; SETUP must be set to 1/On.  The Testing Tool may not be invoked from a
"RTN","BPSTEST1",42,0)
 ; production system, and on non-production accounts, the PAYER RESPONSE
"RTN","BPSTEST1",43,0)
 ; TEST MODE fields must be set to 1/On to make use of the Testing Tool.
"RTN","BPSTEST1",44,0)
 ;
"RTN","BPSTEST1",45,0)
 ; While test/mirror accounts at production sites are non-production
"RTN","BPSTEST1",46,0)
 ; systems, the Testing Tool will never be used in these systems since
"RTN","BPSTEST1",47,0)
 ; the field PAYER RESPONSE TEST MODE will never be set to 1/On.  These
"RTN","BPSTEST1",48,0)
 ; accounts generally do not have ePharmacy communication set up with
"RTN","BPSTEST1",49,0)
 ; FSC, so they will never send test claims.
"RTN","BPSTEST1",50,0)
 ;
"RTN","BPSTEST1",51,0)
 ; Using the Testing Tool
"RTN","BPSTEST1",52,0)
 ; ======================
"RTN","BPSTEST1",53,0)
 ;
"RTN","BPSTEST1",54,0)
 ; There are several VistA menu options and actions that can initiate the
"RTN","BPSTEST1",55,0)
 ; submission of a claim.  If the process is a foreground process, then
"RTN","BPSTEST1",56,0)
 ; just before the building and sending of the claim, the user is given
"RTN","BPSTEST1",57,0)
 ; the option of entering response overrides (if the system is a non-
"RTN","BPSTEST1",58,0)
 ; production system, and the PAYER RESPONSE TEST MODE field is set to
"RTN","BPSTEST1",59,0)
 ; 1/On).  The user may also enter response overrides for an Eligibility
"RTN","BPSTEST1",60,0)
 ; transaction or a Reversal.
"RTN","BPSTEST1",61,0)
 ;
"RTN","BPSTEST1",62,0)
 ; The Testing Tool does allow for overrides to be entered for a claim
"RTN","BPSTEST1",63,0)
 ; which will be submitted in the background.  The menu option BPS SELECT
"RTN","BPSTEST1",64,0)
 ; OVERRIDES allows the user to enter overrides which will then be
"RTN","BPSTEST1",65,0)
 ; applied to the incoming claim response when the claim is submitted in
"RTN","BPSTEST1",66,0)
 ; the background (such as CMOP or auto-reversal).  This menu option does
"RTN","BPSTEST1",67,0)
 ; not exist in production systems.
"RTN","BPSTEST1",68,0)
 ;
"RTN","BPSTEST1",69,0)
 ; The claim submission code will call the subroutine GETOVER^BPSTEST,
"RTN","BPSTEST1",70,0)
 ; which will indicate to the user that payer overrides are enabled at
"RTN","BPSTEST1",71,0)
 ; that site.  The system will prompt the user "Do you want to enter
"RTN","BPSTEST1",72,0)
 ; overrides for this request?".  If the user enters "No", then they will
"RTN","BPSTEST1",73,0)
 ; not receive any further prompts related to the Testing Tool.  No
"RTN","BPSTEST1",74,0)
 ; values on the incoming response will be overridden with any user-
"RTN","BPSTEST1",75,0)
 ; entered values.  If the user enters "Yes", then the system will allow
"RTN","BPSTEST1",76,0)
 ; the user to enter override values for a variety of fields, for
"RTN","BPSTEST1",77,0)
 ; example:  Response (rejected, paid, duplicate, stranded), Total Amount
"RTN","BPSTEST1",78,0)
 ; Paid, Copay Amount, Ingredient Cost Paid, Next Available Fill Date,
"RTN","BPSTEST1",79,0)
 ; Payer ID Qualifier, etc.
"RTN","BPSTEST1",80,0)
 ;
"RTN","BPSTEST1",81,0)
 ; When the incoming claim response comes in, the system parses the
"RTN","BPSTEST1",82,0)
 ; values and stores them in the file BPS RESPONSES.  (Data fields may
"RTN","BPSTEST1",83,0)
 ; also be stored on the REJECT INFO sub-file of the PRESCRIPTIONS file.)
"RTN","BPSTEST1",84,0)
 ; If the system is a non-production system, and the PAYER RESPONSE TEST
"RTN","BPSTEST1",85,0)
 ; MODE field is set to 1/On, then the subroutine PARSE^BPSECMPS will
"RTN","BPSTEST1",86,0)
 ; call SETOVER^BPSTEST.  If any overrides had been entered for the claim
"RTN","BPSTEST1",87,0)
 ; response, those values will override the values received from the
"RTN","BPSTEST1",88,0)
 ; clearinghouse on the claim response.
"RTN","BPSTEST1",89,0)
 ;
"RTN","BPSVRX3")
0^4^B57551160
"RTN","BPSVRX3",1,0)
BPSVRX3 ;AITC/PD - Print Report from VER;5/2/2017
"RTN","BPSVRX3",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**22**;JUN 2004;Build 28
"RTN","BPSVRX3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSVRX3",4,0)
 ;
"RTN","BPSVRX3",5,0)
 Q
"RTN","BPSVRX3",6,0)
 ;
"RTN","BPSVRX3",7,0)
REPORT ; Select and print sections of the list.
"RTN","BPSVRX3",8,0)
 ;
"RTN","BPSVRX3",9,0)
 ; Allow the user to select one or more sections of the VER list to
"RTN","BPSVRX3",10,0)
 ; print to the specified device.
"RTN","BPSVRX3",11,0)
 ;
"RTN","BPSVRX3",12,0)
 N BPSAR,BPSLIST
"RTN","BPSVRX3",13,0)
 D FULL^VALM1
"RTN","BPSVRX3",14,0)
 ;
"RTN","BPSVRX3",15,0)
LIST I '$$SELECT(.BPSLIST) G REXIT
"RTN","BPSVRX3",16,0)
 ;
"RTN","BPSVRX3",17,0)
 D BUILD
"RTN","BPSVRX3",18,0)
 ;
"RTN","BPSVRX3",19,0)
 I '$$DEVICE() G REXIT:$$STOP,LIST
"RTN","BPSVRX3",20,0)
 ;
"RTN","BPSVRX3",21,0)
REXIT ; Exit point.
"RTN","BPSVRX3",22,0)
 ;
"RTN","BPSVRX3",23,0)
 Q
"RTN","BPSVRX3",24,0)
 ;
"RTN","BPSVRX3",25,0)
SELECT(BPSLIST) ; Allow user to select sections of the list to be printed.
"RTN","BPSVRX3",26,0)
 ;
"RTN","BPSVRX3",27,0)
 ; This function returns a 1 if the user entered one or more sections
"RTN","BPSVRX3",28,0)
 ; to be printed, 0 if no selection was made.
"RTN","BPSVRX3",29,0)
 ; This function expects the following variables to exist:
"RTN","BPSVRX3",30,0)
 ; - BPSVRX("LISTNAV",Section#) = Beginning Line#
"RTN","BPSVRX3",31,0)
 ;   where Section# is a number, 1-14, corresponding to a section of the
"RTN","BPSVRX3",32,0)
 ; ListMan list, and Beginning Line# is the first line of that section.
"RTN","BPSVRX3",33,0)
 ;
"RTN","BPSVRX3",34,0)
 ; Returns the BPSLIST array with a list of one or more sections:
"RTN","BPSVRX3",35,0)
 ;     BPSLIST(Section#) = First Line ^ Last Line
"RTN","BPSVRX3",36,0)
 ; Where First Line and Last Line are the first and last lines of
"RTN","BPSVRX3",37,0)
 ; that section in the list and Section# can be one or more numbers
"RTN","BPSVRX3",38,0)
 ; from 1 to 14, each corresponding to a section:
"RTN","BPSVRX3",39,0)
 ;      8 - AP, TPJI Account Profile
"RTN","BPSVRX3",40,0)
 ;      3 - BE, Billing Events
"RTN","BPSVRX3",41,0)
 ;      7 - CI, TPJI Claim Info
"RTN","BPSVRX3",42,0)
 ;      2 - CL, Claim Log
"RTN","BPSVRX3",43,0)
 ;      9 - CM, TPJI AR Comment History
"RTN","BPSVRX3",44,0)
 ;      4 - CR, Claims Response Inquiry Report
"RTN","BPSVRX3",45,0)
 ;     10 - ER, TPJI ECME Rx Information
"RTN","BPSVRX3",46,0)
 ;     11 - ES, Eligibility Status
"RTN","BPSVRX3",47,0)
 ;     12 - EV, Eligibility Verification
"RTN","BPSVRX3",48,0)
 ;      5 - IN, Insurance
"RTN","BPSVRX3",49,0)
 ;      6 - LB, List of Bills
"RTN","BPSVRX3",50,0)
 ;     14 - MP, Medication Profile
"RTN","BPSVRX3",51,0)
 ;     13 - SD, Sensitive Drug
"RTN","BPSVRX3",52,0)
 ;      1 - VW, View Rx
"RTN","BPSVRX3",53,0)
 ;
"RTN","BPSVRX3",54,0)
 N BPSLC,BPSLISTNAV,BPSSECBEGIN,BPSSECEND,BPSSECNUM,BPSSECLIST,BPSSEL
"RTN","BPSVRX3",55,0)
 N BPSUC,BPSX,BPSY,DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSVRX3",56,0)
 ;
"RTN","BPSVRX3",57,0)
 S BPSSECLIST=",AP,BE,CI,CL,CM,CR,ER,ES,EV,IN,LB,MP,SD,VW,"
"RTN","BPSVRX3",58,0)
 S BPSLISTNAV("AP")=8
"RTN","BPSVRX3",59,0)
 S BPSLISTNAV("BE")=3
"RTN","BPSVRX3",60,0)
 S BPSLISTNAV("CI")=7
"RTN","BPSVRX3",61,0)
 S BPSLISTNAV("CL")=2
"RTN","BPSVRX3",62,0)
 S BPSLISTNAV("CM")=9
"RTN","BPSVRX3",63,0)
 S BPSLISTNAV("CR")=4
"RTN","BPSVRX3",64,0)
 S BPSLISTNAV("ER")=10
"RTN","BPSVRX3",65,0)
 S BPSLISTNAV("ES")=11
"RTN","BPSVRX3",66,0)
 S BPSLISTNAV("EV")=12
"RTN","BPSVRX3",67,0)
 S BPSLISTNAV("IN")=5
"RTN","BPSVRX3",68,0)
 S BPSLISTNAV("LB")=6
"RTN","BPSVRX3",69,0)
 S BPSLISTNAV("MP")=14
"RTN","BPSVRX3",70,0)
 S BPSLISTNAV("SD")=13
"RTN","BPSVRX3",71,0)
 S BPSLISTNAV("VW")=1
"RTN","BPSVRX3",72,0)
 ;
"RTN","BPSVRX3",73,0)
 S BPSUC="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","BPSVRX3",74,0)
 S BPSLC="abcdefghijklmnopqrstuvwxyz"
"RTN","BPSVRX3",75,0)
 ;
"RTN","BPSVRX3",76,0)
 ; Display the list of actions to the user once, upon executing the PR option.
"RTN","BPSVRX3",77,0)
 ; List can be re-displayed to the user by entering ??.
"RTN","BPSVRX3",78,0)
 W !
"RTN","BPSVRX3",79,0)
 W !,"VW View Rx          CR CRI Report       CI TPJI Claim Info  ER TPJI ECME Rx"
"RTN","BPSVRX3",80,0)
 W !,"CL Claim Log        IN Insurance        AP TPJI Acct Pro    ES Elig Status"
"RTN","BPSVRX3",81,0)
 W !,"BE Billing Events   LB List of Bills    CM TPJI AR Comm     EV Elig Verif"
"RTN","BPSVRX3",82,0)
 W !
"RTN","BPSVRX3",83,0)
 ;
"RTN","BPSVRX3",84,0)
SELECT1 ; Prompt user for section(s) to print.
"RTN","BPSVRX3",85,0)
 ;
"RTN","BPSVRX3",86,0)
 S DIR(0)="FOU^0:40"
"RTN","BPSVRX3",87,0)
 S DIR("A")="Select Report to Print"
"RTN","BPSVRX3",88,0)
 S DIR("?",1)=" Select one or many report(s) to print, separated by commas. When all"
"RTN","BPSVRX3",89,0)
 S DIR("?",2)=" reports have been selected, hit enter without making another selection."
"RTN","BPSVRX3",90,0)
 S DIR("?",3)=" Example: "
"RTN","BPSVRX3",91,0)
 S DIR("?",4)="  Select Report to Print: VW,IN,CM"
"RTN","BPSVRX3",92,0)
 S DIR("?")="  Select Report to Print: ES"
"RTN","BPSVRX3",93,0)
 S DIR("??")="^D HELP^BPSVRX3"
"RTN","BPSVRX3",94,0)
 ;
"RTN","BPSVRX3",95,0)
 D ^DIR
"RTN","BPSVRX3",96,0)
 ;
"RTN","BPSVRX3",97,0)
 ; If user enters "^" or "^^", or it times out, clear out the
"RTN","BPSVRX3",98,0)
 ; list and skip to end.
"RTN","BPSVRX3",99,0)
 ;
"RTN","BPSVRX3",100,0)
 I $D(DTOUT)!$D(DUOUT) K BPSLIST G SELECTQ
"RTN","BPSVRX3",101,0)
 ;
"RTN","BPSVRX3",102,0)
 ; If user entered nothing, skip to end.
"RTN","BPSVRX3",103,0)
 ;
"RTN","BPSVRX3",104,0)
 I X="" G SELECTQ
"RTN","BPSVRX3",105,0)
 ;
"RTN","BPSVRX3",106,0)
 ; Convert any lower case to upper case
"RTN","BPSVRX3",107,0)
 S X=$TR(X,BPSLC,BPSUC)
"RTN","BPSVRX3",108,0)
 ;
"RTN","BPSVRX3",109,0)
 F BPSX=1:1:$L(X,",") D
"RTN","BPSVRX3",110,0)
 . S BPSSEL=$P(X,",",BPSX)
"RTN","BPSVRX3",111,0)
 . I BPSSECLIST'[(","_BPSSEL_",") W !,*7," ",BPSSEL," is not a valid entry." Q
"RTN","BPSVRX3",112,0)
 . S BPSSECNUM=BPSLISTNAV(BPSSEL)
"RTN","BPSVRX3",113,0)
 . I $D(BPSLIST(BPSSECNUM)) W !,*7," ",BPSSEL," already selected." Q
"RTN","BPSVRX3",114,0)
 . S BPSSECBEGIN=$G(BPSVRX("LISTNAV",BPSSECNUM))
"RTN","BPSVRX3",115,0)
 . S BPSY=$O(BPSVRX("LISTNAV",BPSSECNUM))
"RTN","BPSVRX3",116,0)
 . I BPSY'="" S BPSSECEND=$G(BPSVRX("LISTNAV",BPSY))-1
"RTN","BPSVRX3",117,0)
 . E  S BPSSECEND=$O(^TMP("BPSVRX",$J,""),-1)
"RTN","BPSVRX3",118,0)
 . S BPSLIST(BPSSECNUM)=BPSSECBEGIN_"^"_BPSSECEND
"RTN","BPSVRX3",119,0)
 . Q
"RTN","BPSVRX3",120,0)
 ;
"RTN","BPSVRX3",121,0)
 G SELECT1
"RTN","BPSVRX3",122,0)
 ;
"RTN","BPSVRX3",123,0)
SELECTQ ;
"RTN","BPSVRX3",124,0)
 I '$D(BPSLIST) Q 0
"RTN","BPSVRX3",125,0)
 Q 1
"RTN","BPSVRX3",126,0)
 ;
"RTN","BPSVRX3",127,0)
BUILD ; Move selected compiled data into BPSAR array
"RTN","BPSVRX3",128,0)
 ;
"RTN","BPSVRX3",129,0)
 N BPSBEGIN,BPSEND,BPSLINE,BPSSECTION
"RTN","BPSVRX3",130,0)
 ;
"RTN","BPSVRX3",131,0)
 K BPSAR
"RTN","BPSVRX3",132,0)
 S BPSSECTION=""
"RTN","BPSVRX3",133,0)
 F  S BPSSECTION=$O(BPSLIST(BPSSECTION)) Q:BPSSECTION=""  D
"RTN","BPSVRX3",134,0)
 . S BPSBEGIN=$P(BPSLIST(BPSSECTION),U,1)
"RTN","BPSVRX3",135,0)
 . S BPSEND=$P(BPSLIST(BPSSECTION),U,2)
"RTN","BPSVRX3",136,0)
 . ;
"RTN","BPSVRX3",137,0)
 . S BPSLINE=BPSBEGIN-1
"RTN","BPSVRX3",138,0)
 . F  S BPSLINE=$O(^TMP("BPSVRX",$J,BPSLINE)) Q:'BPSLINE  Q:BPSLINE>BPSEND  D
"RTN","BPSVRX3",139,0)
 . . ;
"RTN","BPSVRX3",140,0)
 . . S BPSAR(BPSLINE)=^TMP("BPSVRX",$J,BPSLINE,0)
"RTN","BPSVRX3",141,0)
 Q
"RTN","BPSVRX3",142,0)
 ; 
"RTN","BPSVRX3",143,0)
DEVICE() ; Prompt user for output device.
"RTN","BPSVRX3",144,0)
 ; Function return values:
"RTN","BPSVRX3",145,0)
 ;   1 - User selected a device.
"RTN","BPSVRX3",146,0)
 ;   0 - User exited out.
"RTN","BPSVRX3",147,0)
 ;
"RTN","BPSVRX3",148,0)
 N BPSRETURN,DIR,POP,X,Y,ZTDESC,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK
"RTN","BPSVRX3",149,0)
 S BPSRETURN=1
"RTN","BPSVRX3",150,0)
 ;
"RTN","BPSVRX3",151,0)
 S ZTRTN="PRINT^BPSVRX3"
"RTN","BPSVRX3",152,0)
 S ZTDESC="VER View Prescription Report"
"RTN","BPSVRX3",153,0)
 S ZTSAVE("BPS*")=""
"RTN","BPSVRX3",154,0)
 S ZTSAVE("VALMHDR(")=""
"RTN","BPSVRX3",155,0)
 ;
"RTN","BPSVRX3",156,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM",1)
"RTN","BPSVRX3",157,0)
 I POP S BPSRETURN=0
"RTN","BPSVRX3",158,0)
 I $G(ZTSK) W !!,"Report compilation has started with task# ",ZTSK,".",! S DIR(0)="E" D ^DIR
"RTN","BPSVRX3",159,0)
 ;
"RTN","BPSVRX3",160,0)
 Q BPSRETURN
"RTN","BPSVRX3",161,0)
 ;
"RTN","BPSVRX3",162,0)
STOP()   ; Determine if user wishes to exit out of the option entirely.
"RTN","BPSVRX3",163,0)
 ; Function return values:
"RTN","BPSVRX3",164,0)
 ;   1 - Yes, exit entirely.
"RTN","BPSVRX3",165,0)
 ;   0 - No, do not exit but return to the previous question.
"RTN","BPSVRX3",166,0)
 ;
"RTN","BPSVRX3",167,0)
 N DIR,DIRUT,Y
"RTN","BPSVRX3",168,0)
 ;
"RTN","BPSVRX3",169,0)
 S DIR(0)="Y"
"RTN","BPSVRX3",170,0)
 S DIR("A")="Do you want to exit out of this option entirely"
"RTN","BPSVRX3",171,0)
 S DIR("B")="YES"
"RTN","BPSVRX3",172,0)
 S DIR("?",1)="  Enter YES to immediately exit out of this option."
"RTN","BPSVRX3",173,0)
 S DIR("?")="  Enter NO to return to the previous question."
"RTN","BPSVRX3",174,0)
 W !
"RTN","BPSVRX3",175,0)
 D ^DIR
"RTN","BPSVRX3",176,0)
 I $D(DIRUT) S Y=1
"RTN","BPSVRX3",177,0)
 Q Y
"RTN","BPSVRX3",178,0)
 ;
"RTN","BPSVRX3",179,0)
PRINT ; Print sections of the list.
"RTN","BPSVRX3",180,0)
 ;
"RTN","BPSVRX3",181,0)
 ; BPSLIST will be an array of one or more sections from the existing
"RTN","BPSVRX3",182,0)
 ; ListMan list stored in ^TMP("BPSVRX",$J).  Format of BPSLIST:
"RTN","BPSVRX3",183,0)
 ;     BPSLIST(Section#) = First Line ^ Last Line
"RTN","BPSVRX3",184,0)
 ; Where First Line and Last Line are the first and last lines of
"RTN","BPSVRX3",185,0)
 ; that section in the list and Section# can be one or more numbers
"RTN","BPSVRX3",186,0)
 ; from 1 to 14, each corresponding to a section:
"RTN","BPSVRX3",187,0)
 ;      8 - AP, TPJI Account Profile
"RTN","BPSVRX3",188,0)
 ;      3 - BE, Billing Events
"RTN","BPSVRX3",189,0)
 ;      7 - CI, TPJI Claim Info
"RTN","BPSVRX3",190,0)
 ;      2 - CL, Claim Log
"RTN","BPSVRX3",191,0)
 ;      9 - CM, TPJI AR Comment History
"RTN","BPSVRX3",192,0)
 ;      4 - CR, Claims Response Inquiry Report
"RTN","BPSVRX3",193,0)
 ;     10 - ER, TPJI ECME Rx Information
"RTN","BPSVRX3",194,0)
 ;     11 - ES, Eligibility Status
"RTN","BPSVRX3",195,0)
 ;     12 - EV, Eligibility Verification
"RTN","BPSVRX3",196,0)
 ;      5 - IN, Insurance
"RTN","BPSVRX3",197,0)
 ;      6 - LB, List of Bills
"RTN","BPSVRX3",198,0)
 ;     14 - MP, Medication Profile
"RTN","BPSVRX3",199,0)
 ;     13 - SD, Sensitive Drug
"RTN","BPSVRX3",200,0)
 ;      1 - VW, View Rx
"RTN","BPSVRX3",201,0)
 ;
"RTN","BPSVRX3",202,0)
 N BPSCRT,BPSBEGIN,BPSDASHES,BPSEND,BPSLINE,BPSPAGE,BPSSECTION,BPSSTOP
"RTN","BPSVRX3",203,0)
 ;
"RTN","BPSVRX3",204,0)
 S BPSCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","BPSVRX3",205,0)
 S BPSPAGE=0,BPSSTOP=0,$P(BPSDASHES,"=",79)=""
"RTN","BPSVRX3",206,0)
 ;
"RTN","BPSVRX3",207,0)
 S BPSSECTION=""
"RTN","BPSVRX3",208,0)
 F  S BPSSECTION=$O(BPSLIST(BPSSECTION)) Q:BPSSECTION=""  D  Q:BPSSTOP
"RTN","BPSVRX3",209,0)
 . S BPSBEGIN=$P(BPSLIST(BPSSECTION),U,1)
"RTN","BPSVRX3",210,0)
 . S BPSEND=$P(BPSLIST(BPSSECTION),U,2)
"RTN","BPSVRX3",211,0)
 . ;
"RTN","BPSVRX3",212,0)
 . ; Display the header at the top of each section.
"RTN","BPSVRX3",213,0)
 . ;
"RTN","BPSVRX3",214,0)
 . D HEADER
"RTN","BPSVRX3",215,0)
 . ;
"RTN","BPSVRX3",216,0)
 . S BPSLINE=BPSBEGIN-1
"RTN","BPSVRX3",217,0)
 . F  S BPSLINE=$O(BPSAR(BPSLINE)) Q:'BPSLINE  Q:BPSLINE>BPSEND  D  Q:BPSSTOP
"RTN","BPSVRX3",218,0)
 . . ;
"RTN","BPSVRX3",219,0)
 . . I $Y+3>IOSL D HEADER I BPSSTOP Q
"RTN","BPSVRX3",220,0)
 . . ;
"RTN","BPSVRX3",221,0)
 . . W !,BPSAR(BPSLINE)
"RTN","BPSVRX3",222,0)
 . . ;
"RTN","BPSVRX3",223,0)
 . . Q
"RTN","BPSVRX3",224,0)
 . Q
"RTN","BPSVRX3",225,0)
 ;
"RTN","BPSVRX3",226,0)
 I BPSSTOP G PRINTQ
"RTN","BPSVRX3",227,0)
 I $Y+4>IOSL D HEADER I BPSSTOP G PRINTQ
"RTN","BPSVRX3",228,0)
 W !!?5,"*** End of Report ***"
"RTN","BPSVRX3",229,0)
 I BPSCRT S DIR(0)="E" W ! D ^DIR K DIR
"RTN","BPSVRX3",230,0)
 ;
"RTN","BPSVRX3",231,0)
PRINTQ ;
"RTN","BPSVRX3",232,0)
 ;
"RTN","BPSVRX3",233,0)
 I $D(ZTQUEUED) S ZTREQ="@"  ; If queued, purge the task after exiting.
"RTN","BPSVRX3",234,0)
 ;
"RTN","BPSVRX3",235,0)
 Q
"RTN","BPSVRX3",236,0)
 ;
"RTN","BPSVRX3",237,0)
HEADER ; Print the header.
"RTN","BPSVRX3",238,0)
 ;
"RTN","BPSVRX3",239,0)
 N BPSX
"RTN","BPSVRX3",240,0)
 ;
"RTN","BPSVRX3",241,0)
 ; If PAGE (i.e. not the first page) and device is the screen, do an
"RTN","BPSVRX3",242,0)
 ; end-of-page reader call.  If PAGE or screen output, do a form feed.
"RTN","BPSVRX3",243,0)
 ; If this is the first page ('BPSPAGE), and device is file or printer
"RTN","BPSVRX3",244,0)
 ; ('BPSCRT), reset the left margin ($C(13)).
"RTN","BPSVRX3",245,0)
 ;
"RTN","BPSVRX3",246,0)
 I BPSPAGE,BPSCRT S DIR(0)="E" D ^DIR K DIR I 'Y S BPSSTOP=1 G HEADERQ
"RTN","BPSVRX3",247,0)
 I BPSPAGE!BPSCRT W @IOF
"RTN","BPSVRX3",248,0)
 I 'BPSPAGE,'BPSCRT W $C(13)
"RTN","BPSVRX3",249,0)
 S BPSPAGE=BPSPAGE+1
"RTN","BPSVRX3",250,0)
 ;
"RTN","BPSVRX3",251,0)
 ; Write the report header.
"RTN","BPSVRX3",252,0)
 ;
"RTN","BPSVRX3",253,0)
 W "View Pharmacy Rx Report",?70,"Page: ",BPSPAGE,!
"RTN","BPSVRX3",254,0)
 ;
"RTN","BPSVRX3",255,0)
 S BPSX=0
"RTN","BPSVRX3",256,0)
 F  S BPSX=$O(VALMHDR(BPSX)) Q:'BPSX  W VALMHDR(BPSX),!
"RTN","BPSVRX3",257,0)
 W BPSDASHES
"RTN","BPSVRX3",258,0)
 ;
"RTN","BPSVRX3",259,0)
HEADERQ ;
"RTN","BPSVRX3",260,0)
 Q
"RTN","BPSVRX3",261,0)
 ;
"RTN","BPSVRX3",262,0)
HELP ; ?? Help - Display Options
"RTN","BPSVRX3",263,0)
 W !,"VW View Rx          CR CRI Report       CI TPJI Claim Info  ER TPJI ECME Rx"
"RTN","BPSVRX3",264,0)
 W !,"CL Claim Log        IN Insurance        AP TPJI Acct Pro    ES Elig Status"
"RTN","BPSVRX3",265,0)
 W !,"BE Billing Events   LB List of Bills    CM TPJI AR Comm     EV Elig Verif"
"RTN","BPSVRX3",266,0)
 W !
"RTN","BPSVRX3",267,0)
 W !," Select one or many report(s) to print, separated by commas. When all"
"RTN","BPSVRX3",268,0)
 W !," reports have been selected, hit enter without making another selection."
"RTN","BPSVRX3",269,0)
 W !," Example: "
"RTN","BPSVRX3",270,0)
 W !,"  Select Report to Print: VW,IN,CM"
"RTN","BPSVRX3",271,0)
 W !,"  Select Report to Print: ES"
"RTN","BPSVRX3",272,0)
 Q
"SEC","^DIC",9002313.91,9002313.91,0,"AUDIT")
@
"SEC","^DIC",9002313.91,9002313.91,0,"DD")
@
"SEC","^DIC",9002313.91,9002313.91,0,"DEL")
@
"SEC","^DIC",9002313.91,9002313.91,0,"LAYGO")
@
"SEC","^DIC",9002313.91,9002313.91,0,"RD")
Pp
"SEC","^DIC",9002313.91,9002313.91,0,"WR")
@
"UP",9002313.02,9002313.0201,-1)
9002313.02^400
"UP",9002313.02,9002313.0201,0)
9002313.0201
"UP",9002313.03,9002313.0301,-1)
9002313.03^1000
"UP",9002313.03,9002313.0301,0)
9002313.0301
"VER")
8.0^22.2
"^DD",9002313.02,9002313.0201,2095,0)
FACILITY ID QUALIFIER^FJ2^^B90;5^K:$L(X)>2!($L(X)<1) X
"^DD",9002313.02,9002313.0201,2095,3)
Answer must be 1-2 characters in length.
"^DD",9002313.02,9002313.0201,2095,21,0)
^^2^2^3170530^
"^DD",9002313.02,9002313.0201,2095,21,1,0)
Code qualifying the 'Facility ID' (336-8C). NCPDP standard field B95-3Z.
"^DD",9002313.02,9002313.0201,2095,21,2,0)
Blank=Not Specified, 1=Facility Type 2 NPI, 2= Other
"^DD",9002313.02,9002313.0201,2095,"DT")
3170530
"^DD",9002313.03,9002313.0301,2098,0)
RECONCILIATION ID^FJ30^^B98;1^K:$L(X)>30!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2098,3)
Answer must be 1-30 characters in length.
"^DD",9002313.03,9002313.0301,2098,21,0)
^^1^1^3170530^
"^DD",9002313.03,9002313.0301,2098,21,1,0)
This will be used to store NCPDP field B98-34 (Reconciliation ID).
"^DD",9002313.03,9002313.0301,2098,"DT")
3170530
"^DD",9002313.32,9002313.32,2.09,0)
RECONCILIATION ID^FJ30^^2;9^K:$L(X)>30!($L(X)<1) X
"^DD",9002313.32,9002313.32,2.09,3)
Answer must be 1-30 characters in length.
"^DD",9002313.32,9002313.32,2.09,21,0)
^^4^4^3170530^
"^DD",9002313.32,9002313.32,2.09,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,2.09,21,2,0)
billing requests. The value will be used to populate the RECONCILIATION 
"^DD",9002313.32,9002313.32,2.09,21,3,0)
ID (#2098) field of RESPONSES (#9002313.0301) subfile of the BPS 
"^DD",9002313.32,9002313.32,2.09,21,4,0)
RESPONSES (#9002313.03) file. This corresponds to NCPDP code B98-34.
"^DD",9002313.32,9002313.32,2.09,"DT")
3170530
"^DD",9002313.56,9002313.56,.09,0)
AUTO-REVERSE PARAMETER^RNJ2,0^^0;9^K:+X'=X!(X>10)!(X<3)!(X?.E1"."1N.N) X
"^DD",9002313.56,9002313.56,.09,3)
Enter a number from 3 to 10. 5 is the suggested setting.
"^DD",9002313.56,9002313.56,.09,21,0)
^.001^11^11^3170605^^^
"^DD",9002313.56,9002313.56,.09,21,1,0)
ECME shall use the following AUTO-REVERSE site parameter when
"^DD",9002313.56,9002313.56,.09,21,2,0)
determining whether non-released prescription claims (that have returned
"^DD",9002313.56,9002313.56,.09,21,3,0)
a PAYABLE response) are to be automatically REVERSED.
"^DD",9002313.56,9002313.56,.09,21,4,0)
 
"^DD",9002313.56,9002313.56,.09,21,5,0)
The AUTO-REVERSE site parameter is set for the number of days that
"^DD",9002313.56,9002313.56,.09,21,6,0)
ECME will wait before the claim is automatically REVERSED. The user
"^DD",9002313.56,9002313.56,.09,21,7,0)
is allowed to enter a number from 3 to 10.
"^DD",9002313.56,9002313.56,.09,21,8,0)
5 is the suggested setting.
"^DD",9002313.56,9002313.56,.09,21,9,0)
 
"^DD",9002313.56,9002313.56,.09,21,10,0)
ECME will wait the entered number of days before REVERSING the
"^DD",9002313.56,9002313.56,.09,21,11,0)
non-released Rx with a PAYABLE response.
"^DD",9002313.56,9002313.56,.09,"DT")
3170601
"^DD",9002313.91,9002313.91,0)
FIELD^^1^13
"^DD",9002313.91,9002313.91,0,"DDA")
N
"^DD",9002313.91,9002313.91,0,"DT")
3170807
"^DD",9002313.91,9002313.91,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",9002313.91,9002313.91,0,"IX","B",9002313.91,.01)

"^DD",9002313.91,9002313.91,0,"IX","C",9002313.91,.03)

"^DD",9002313.91,9002313.91,0,"IX","D",9002313.91,.06)

"^DD",9002313.91,9002313.91,0,"NM","BPS NCPDP FIELD DEFS")

"^DD",9002313.91,9002313.91,0,"PT",9002313.311,.01)

"^DD",9002313.91,9002313.91,0,"PT",9002313.3121,.01)

"^DD",9002313.91,9002313.91,0,"PT",9002313.5111,.01)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9205,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9206,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9207,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9208,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9209,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.921,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9213,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9214,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9215,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9216,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9217,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9218,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9219,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.922,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9223,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9224,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9225,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9227,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9228,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9229,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.923,.02)

"^DD",9002313.91,9002313.91,0,"VRPK")
BPS
"^DD",9002313.91,9002313.91,.01,0)
NCPDP FIELD NUMBER^RFX^^0;1^K:$L(X)>6!($L(X)<3) X
"^DD",9002313.91,9002313.91,.01,1,0)
^.1
"^DD",9002313.91,9002313.91,.01,1,1,0)
9002313.91^B
"^DD",9002313.91,9002313.91,.01,1,1,1)
S ^BPSF(9002313.91,"B",$E(X,1,30),DA)=""
"^DD",9002313.91,9002313.91,.01,1,1,2)
K ^BPSF(9002313.91,"B",$E(X,1,30),DA)
"^DD",9002313.91,9002313.91,.01,3)
Enter the NCPDP field number (either 0-997, 2 Decimal Digits or 3 Alphanumerics).
"^DD",9002313.91,9002313.91,.01,21,0)
^^1^1^3101014^
"^DD",9002313.91,9002313.91,.01,21,1,0)
This is the NCPDP field number as specified in the NCPDP data dictionary.
"^DD",9002313.91,9002313.91,.01,"DT")
3170227
"^DD",9002313.91,9002313.91,.03,0)
NAME^F^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",9002313.91,9002313.91,.03,1,0)
^.1
"^DD",9002313.91,9002313.91,.03,1,1,0)
9002313.91^C
"^DD",9002313.91,9002313.91,.03,1,1,1)
S ^BPSF(9002313.91,"C",$E(X,1,30),DA)=""
"^DD",9002313.91,9002313.91,.03,1,1,2)
K ^BPSF(9002313.91,"C",$E(X,1,30),DA)
"^DD",9002313.91,9002313.91,.03,1,1,"DT")
3001007
"^DD",9002313.91,9002313.91,.03,3)
Answer must be 3-30 characters in length.
"^DD",9002313.91,9002313.91,.03,21,0)
^^2^2^3071227^
"^DD",9002313.91,9002313.91,.03,21,1,0)
Descriptive name the tells what the field is within the pharmacy
"^DD",9002313.91,9002313.91,.03,21,2,0)
environment.
"^DD",9002313.91,9002313.91,.03,"DT")
3071227
"^DD",9002313.91,9002313.91,.04,0)
FORMAT^S^N:NUMERIC;A/N:ALPHA/NUMERIC;D:SIGNED NUMERIC;^0;4^Q
"^DD",9002313.91,9002313.91,.04,3)
Enter the field's format type.
"^DD",9002313.91,9002313.91,.04,21,0)
^^1^1^3071227^
"^DD",9002313.91,9002313.91,.04,21,1,0)
This is the format of the field used within the NCPDP standard.
"^DD",9002313.91,9002313.91,.04,"DT")
3071227
"^DD",9002313.91,9002313.91,.06,0)
ID^F^^5;1^K:$L(X)>2!($L(X)<2) X
"^DD",9002313.91,9002313.91,.06,1,0)
^.1
"^DD",9002313.91,9002313.91,.06,1,1,0)
9002313.91^D
"^DD",9002313.91,9002313.91,.06,1,1,1)
S ^BPSF(9002313.91,"D",$E(X,1,30),DA)=""
"^DD",9002313.91,9002313.91,.06,1,1,2)
K ^BPSF(9002313.91,"D",$E(X,1,30),DA)
"^DD",9002313.91,9002313.91,.06,1,1,"%D",0)
^^3^3^3020807^
"^DD",9002313.91,9002313.91,.06,1,1,"%D",1,0)
Cross reference of the 5.1 Field ID.  This cross reference will be used in
"^DD",9002313.91,9002313.91,.06,1,1,"%D",2,0)
the processing of the response as a means of translating the value to a
"^DD",9002313.91,9002313.91,.06,1,1,"%D",3,0)
field number.
"^DD",9002313.91,9002313.91,.06,1,1,"DT")
3020807
"^DD",9002313.91,9002313.91,.06,3)
Answer must be 2 characters in length.
"^DD",9002313.91,9002313.91,.06,21,0)
^^3^3^3071227^
"^DD",9002313.91,9002313.91,.06,21,1,0)
The same as the .02 field, but for specific use when creating 5.1
"^DD",9002313.91,9002313.91,.06,21,2,0)
claims.  The 5.1 fields were separated because 3.x and 5.1 claims were
"^DD",9002313.91,9002313.91,.06,21,3,0)
being submitted concurrently.  
"^DD",9002313.91,9002313.91,.06,"DT")
3071227
"^DD",9002313.91,9002313.91,.07,0)
LENGTH^NJ4,0^^5;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",9002313.91,9002313.91,.07,3)
Type a number between 1 and 9999, 0 Decimal Digits
"^DD",9002313.91,9002313.91,.07,21,0)
^^1^1^3040121^
"^DD",9002313.91,9002313.91,.07,21,1,0)
Length of the field from the 5.1 NCPDP standard.
"^DD",9002313.91,9002313.91,.07,"DT")
3071227
"^DD",9002313.91,9002313.91,.08,0)
D0 LENGTH^NJ3,0^^0;8^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",9002313.91,9002313.91,.08,3)
Enter the length of the NCPDP field per the NCPDP data dictionary (1-999).
"^DD",9002313.91,9002313.91,.08,21,0)
^^2^2^3101014^
"^DD",9002313.91,9002313.91,.08,21,1,0)
This is the NCPDP length as specified in the NCPDP Telecommunication
"^DD",9002313.91,9002313.91,.08,21,2,0)
Standard version D.0 data dictionary.
"^DD",9002313.91,9002313.91,.08,"DT")
3101014
"^DD",9002313.91,9002313.91,.09,0)
D0 FORMAT^S^N:NUMERIC;A/N:ALPHANUMERIC;D:SIGNED NUMERIC;^0;9^Q
"^DD",9002313.91,9002313.91,.09,3)
Enter the data type for the field based on the NCPDP data dictionary.
"^DD",9002313.91,9002313.91,.09,21,0)
^^2^2^3101014^
"^DD",9002313.91,9002313.91,.09,21,1,0)
This is the NCPDP data type as specified in the NCPDP Telecommunication
"^DD",9002313.91,9002313.91,.09,21,2,0)
Standard version D.0 data dictionary.
"^DD",9002313.91,9002313.91,.09,"DT")
3101014
"^DD",9002313.91,9002313.91,1,0)
VISTA FIELD NUMBER^NJ4,0^^5;3^K:+X'=X!(X>2999)!(X<1001)!(X?.E1"."1.N) X
"^DD",9002313.91,9002313.91,1,3)
Type a number between 1001 and 2999, 0 decimal digits.
"^DD",9002313.91,9002313.91,1,21,0)
^^5^5^3130424^
"^DD",9002313.91,9002313.91,1,21,1,0)
This is the VistA field number used in BPS CLAIMS file #9002313.02 and BPS
"^DD",9002313.91,9002313.91,1,21,2,0)
RESPONSES file #9002313.03. Only used for NCPDP numbers where the first 
"^DD",9002313.91,9002313.91,1,21,3,0)
piece of the NCPDP number is non-numeric.
"^DD",9002313.91,9002313.91,1,21,4,0)
 
"^DD",9002313.91,9002313.91,1,21,5,0)
For example, NCPDP field B04-BT - Next Available Fill Date.
"^DD",9002313.91,9002313.91,1,"DT")
3130424
"^DD",9002313.91,9002313.91,1.01,0)
STANDARD NCPDP FIELD NAME^F^^1;1^K:$L(X)>100!($L(X)<1) X
"^DD",9002313.91,9002313.91,1.01,3)
Enter the full NCPDP field name based on the NCPDP data dictionary (1-100 characters).
"^DD",9002313.91,9002313.91,1.01,21,0)
^^3^3^3101014^
"^DD",9002313.91,9002313.91,1.01,21,1,0)
This field is used for those NCPDP field names that were too long to fit 
"^DD",9002313.91,9002313.91,1.01,21,2,0)
in the NAME (#.03) field.  For those fields, this field will
"^DD",9002313.91,9002313.91,1.01,21,3,0)
have the full NCPDP field name.
"^DD",9002313.91,9002313.91,1.01,"DT")
3110706
"^DD",9002313.91,9002313.91,10,0)
GET CODE^9002313.9101^^10;0
"^DD",9002313.91,9002313.91,10,3)
Enter the M code to extract the data for this field.
"^DD",9002313.91,9002313.91,10,9)
@
"^DD",9002313.91,9002313.91,10,21,0)
^.001^2^2^3101001^^
"^DD",9002313.91,9002313.91,10,21,1,0)
M code that tells the BPS system where to find the 
"^DD",9002313.91,9002313.91,10,21,2,0)
particular piece of data for this field.
"^DD",9002313.91,9002313.91,10,"DT")
3071227
"^DD",9002313.91,9002313.91,20,0)
D0 FORMAT CODE^9002313.9102^^20;0
"^DD",9002313.91,9002313.91,20,9)
@
"^DD",9002313.91,9002313.91,20,21,0)
^^4^4^3101014^
"^DD",9002313.91,9002313.91,20,21,1,0)
This field holds the M code used to format the data according to the
"^DD",9002313.91,9002313.91,20,21,2,0)
specifications of the NCPDP Telecommunication Standard version D.0 data
"^DD",9002313.91,9002313.91,20,21,3,0)
dictionary.  For instance, alphanumeric fields are right-padded with
"^DD",9002313.91,9002313.91,20,21,4,0)
spaces up to the length of the specified by the NCPDP standard.
"^DD",9002313.91,9002313.91,20,"DT")
3101005
"^DD",9002313.91,9002313.91,30,0)
SET CODE^9002313.9103^^30;0
"^DD",9002313.91,9002313.91,30,3)
Enter the M code for the field's data storage.
"^DD",9002313.91,9002313.91,30,9)
@
"^DD",9002313.91,9002313.91,30,21,0)
^^1^1^3040326^
"^DD",9002313.91,9002313.91,30,21,1,0)
M code to store the data in the appropriate segment within the claim.
"^DD",9002313.91,9002313.91,30,"DT")
3071227
"^DD",9002313.91,9002313.91,40,0)
FORMAT CODE^9002313.9104^^25;0
"^DD",9002313.91,9002313.91,40,3)
Enter the M code to format the data in NCPDP format.
"^DD",9002313.91,9002313.91,40,9)
@
"^DD",9002313.91,9002313.91,40,21,0)
^^2^2^3071227^
"^DD",9002313.91,9002313.91,40,21,1,0)
M code to format the data before storing it in the claim.  5.1 was
"^DD",9002313.91,9002313.91,40,21,2,0)
separate because 3.2 and 5.1 claims were being submitted at the same time.
"^DD",9002313.91,9002313.91,40,"DT")
3071227
"^DD",9002313.91,9002313.9101,0)
GET CODE SUB-FIELD^^.01^1
"^DD",9002313.91,9002313.9101,0,"DT")
3071227
"^DD",9002313.91,9002313.9101,0,"NM","GET CODE")

"^DD",9002313.91,9002313.9101,0,"UP")
9002313.91
"^DD",9002313.91,9002313.9101,.01,0)
GET CODE^WL^^0;1^Q
"^DD",9002313.91,9002313.9101,.01,3)
Enter the M code to extract the data for this field.
"^DD",9002313.91,9002313.9101,.01,9)
@
"^DD",9002313.91,9002313.9101,.01,"DT")
3071227
"^DD",9002313.91,9002313.9102,0)
D0 FORMAT CODE SUB-FIELD^^.01^1
"^DD",9002313.91,9002313.9102,0,"DT")
3100721
"^DD",9002313.91,9002313.9102,0,"NM","D0 FORMAT CODE")

"^DD",9002313.91,9002313.9102,0,"UP")
9002313.91
"^DD",9002313.91,9002313.9102,.01,0)
D0 FORMAT CODE^WLx^^0;1^Q
"^DD",9002313.91,9002313.9102,.01,"DT")
3101014
"^DD",9002313.91,9002313.9103,0)
SET CODE SUB-FIELD^^.01^1
"^DD",9002313.91,9002313.9103,0,"DT")
2950420
"^DD",9002313.91,9002313.9103,0,"NM","SET CODE")

"^DD",9002313.91,9002313.9103,0,"UP")
9002313.91
"^DD",9002313.91,9002313.9103,.01,0)
SET CODE^WL^^0;1^Q
"^DD",9002313.91,9002313.9103,.01,3)
Enter the M code for the field's data storage.
"^DD",9002313.91,9002313.9103,.01,9)
@
"^DD",9002313.91,9002313.9103,.01,"DT")
3071227
"^DD",9002313.91,9002313.9104,0)
FORMAT CODE SUB-FIELD^^.01^1
"^DD",9002313.91,9002313.9104,0,"DT")
3020724
"^DD",9002313.91,9002313.9104,0,"NM","FORMAT CODE")

"^DD",9002313.91,9002313.9104,0,"UP")
9002313.91
"^DD",9002313.91,9002313.9104,.01,0)
FORMAT CODE^WL^^0;1^Q
"^DD",9002313.91,9002313.9104,.01,3)
Enter the M code to format the data in NCPDP format.
"^DD",9002313.91,9002313.9104,.01,9)
@
"^DD",9002313.91,9002313.9104,.01,"DT")
3071227
"^DIC",9002313.91,9002313.91,0)
BPS NCPDP FIELD DEFS^9002313.91
"^DIC",9002313.91,9002313.91,0,"GL")
^BPSF(9002313.91,
"^DIC",9002313.91,9002313.91,"%",0)
^1.005^^0
"^DIC",9002313.91,9002313.91,"%","B","ABSP",1)

"^DIC",9002313.91,9002313.91,"%D",0)
^1.001^4^4^3100925^^^^
"^DIC",9002313.91,9002313.91,"%D",1,0)
The NCPDP Data Dictionary Individual fields which combine into formatted 
"^DIC",9002313.91,9002313.91,"%D",2,0)
packets.
"^DIC",9002313.91,9002313.91,"%D",3,0)
 
"^DIC",9002313.91,9002313.91,"%D",4,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",9002313.91,"B","BPS NCPDP FIELD DEFS",9002313.91)

**INSTALL NAME**
PSO*7.0*478
"BLD",10525,0)
PSO*7.0*478^OUTPATIENT PHARMACY^0^3170919^y
"BLD",10525,1,0)
^^1^1^3170504^
"BLD",10525,1,1,0)
MCCF EDI TAS EPHARMACY BUILD 2
"BLD",10525,4,0)
^9.64PA^52^1
"BLD",10525,4,52,0)
52
"BLD",10525,4,52,2,0)
^9.641^52.25^1
"BLD",10525,4,52,2,52.25,0)
REJECT INFO  (sub-file)
"BLD",10525,4,52,2,52.25,1,0)
^9.6411^34^1
"BLD",10525,4,52,2,52.25,1,34,0)
PCN
"BLD",10525,4,52,222)
y^y^p^^^^n^^n
"BLD",10525,4,52,224)

"BLD",10525,4,"APDD",52,52.25)

"BLD",10525,4,"APDD",52,52.25,34)

"BLD",10525,4,"B",52,52)

"BLD",10525,6.3)
27
"BLD",10525,"ABPKG")
n
"BLD",10525,"INIT")
POST^PSO7P478
"BLD",10525,"KRN",0)
^9.67PA^779.2^20
"BLD",10525,"KRN",.4,0)
.4
"BLD",10525,"KRN",.401,0)
.401
"BLD",10525,"KRN",.402,0)
.402
"BLD",10525,"KRN",.403,0)
.403
"BLD",10525,"KRN",.5,0)
.5
"BLD",10525,"KRN",.84,0)
.84
"BLD",10525,"KRN",3.6,0)
3.6
"BLD",10525,"KRN",3.8,0)
3.8
"BLD",10525,"KRN",9.2,0)
9.2
"BLD",10525,"KRN",9.8,0)
9.8
"BLD",10525,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",10525,"KRN",9.8,"NM",1,0)
PSORXRP2^^0^B37627986
"BLD",10525,"KRN",9.8,"NM",2,0)
PSOREJU3^^0^B98042345
"BLD",10525,"KRN",9.8,"NM",3,0)
PSOREJU2^^0^B63731679
"BLD",10525,"KRN",9.8,"NM",4,0)
PSOREJP1^^0^B202372294
"BLD",10525,"KRN",9.8,"NM",5,0)
PSOREJUT^^0^B113532440
"BLD",10525,"KRN",9.8,"NM","B","PSOREJP1",4)

"BLD",10525,"KRN",9.8,"NM","B","PSOREJU2",3)

"BLD",10525,"KRN",9.8,"NM","B","PSOREJU3",2)

"BLD",10525,"KRN",9.8,"NM","B","PSOREJUT",5)

"BLD",10525,"KRN",9.8,"NM","B","PSORXRP2",1)

"BLD",10525,"KRN",19,0)
19
"BLD",10525,"KRN",19.1,0)
19.1
"BLD",10525,"KRN",101,0)
101
"BLD",10525,"KRN",101,"NM",0)
^9.68A^^
"BLD",10525,"KRN",409.61,0)
409.61
"BLD",10525,"KRN",771,0)
771
"BLD",10525,"KRN",779.2,0)
779.2
"BLD",10525,"KRN",870,0)
870
"BLD",10525,"KRN",8989.51,0)
8989.51
"BLD",10525,"KRN",8989.52,0)
8989.52
"BLD",10525,"KRN",8994,0)
8994
"BLD",10525,"KRN","B",.4,.4)

"BLD",10525,"KRN","B",.401,.401)

"BLD",10525,"KRN","B",.402,.402)

"BLD",10525,"KRN","B",.403,.403)

"BLD",10525,"KRN","B",.5,.5)

"BLD",10525,"KRN","B",.84,.84)

"BLD",10525,"KRN","B",3.6,3.6)

"BLD",10525,"KRN","B",3.8,3.8)

"BLD",10525,"KRN","B",9.2,9.2)

"BLD",10525,"KRN","B",9.8,9.8)

"BLD",10525,"KRN","B",19,19)

"BLD",10525,"KRN","B",19.1,19.1)

"BLD",10525,"KRN","B",101,101)

"BLD",10525,"KRN","B",409.61,409.61)

"BLD",10525,"KRN","B",771,771)

"BLD",10525,"KRN","B",779.2,779.2)

"BLD",10525,"KRN","B",870,870)

"BLD",10525,"KRN","B",8989.51,8989.51)

"BLD",10525,"KRN","B",8989.52,8989.52)

"BLD",10525,"KRN","B",8994,8994)

"BLD",10525,"QUES",0)
^9.62^^
"BLD",10525,"REQB",0)
^9.611^^
"FIA",52)
PRESCRIPTION
"FIA",52,0)
^PSRX(
"FIA",52,0,0)
52Is
"FIA",52,0,1)
y^y^p^^^^n^^n
"FIA",52,0,10)

"FIA",52,0,11)

"FIA",52,0,"RLRO")

"FIA",52,0,"VR")
7.0^PSO
"FIA",52,52)
1
"FIA",52,52.25)
1
"FIA",52,52.25,34)

"INIT")
POST^PSO7P478
"MBREQ")
1
"PKG",170,-1)
1^1
"PKG",170,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
7.0^2971216^2981113^1
"PKG",170,22,1,"PAH",1,0)
478^3170919^520824639
"PKG",170,22,1,"PAH",1,1,0)
^^1^1^3170919
"PKG",170,22,1,"PAH",1,1,1,0)
MCCF EDI TAS EPHARMACY BUILD 2
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","PSO7P478")
0^^B7833760
"RTN","PSO7P478",1,0)
PSO7P478 ;AITC/PD - Post-install for PSO*7*478 ;6/15/2017
"RTN","PSO7P478",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**478**;;Build 27
"RTN","PSO7P478",3,0)
 ; Reference to BPSNCPD3 supported by IA 4560
"RTN","PSO7P478",4,0)
 ;
"RTN","PSO7P478",5,0)
 Q
"RTN","PSO7P478",6,0)
 ;
"RTN","PSO7P478",7,0)
POST ; Post-install functions are coded here.
"RTN","PSO7P478",8,0)
 ;
"RTN","PSO7P478",9,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","PSO7P478",10,0)
 ;
"RTN","PSO7P478",11,0)
 D BMES^XPDUTL("  Queuing background job to update REJECT INFO sub-file of the PRESCRIPTION")
"RTN","PSO7P478",12,0)
 D MES^XPDUTL("  file. A Mailman message will be sent upon completion.")
"RTN","PSO7P478",13,0)
 ;
"RTN","PSO7P478",14,0)
 ; Setup required variables
"RTN","PSO7P478",15,0)
 S ZTRTN="PCN^PSO7P478"
"RTN","PSO7P478",16,0)
 S ZTIO=""
"RTN","PSO7P478",17,0)
 S ZTDTH=$H
"RTN","PSO7P478",18,0)
 S ZTDESC="Background job to update REJECT INFO sub-file for PSO*7*478"
"RTN","PSO7P478",19,0)
 ;
"RTN","PSO7P478",20,0)
 ; Task the job
"RTN","PSO7P478",21,0)
 D ^%ZTLOAD
"RTN","PSO7P478",22,0)
 ;
"RTN","PSO7P478",23,0)
 ; Check if task was created
"RTN","PSO7P478",24,0)
 I $D(ZTSK) D MES^XPDUTL("  Task #"_ZTSK_" queued.")
"RTN","PSO7P478",25,0)
 I '$D(ZTSK) D MES^XPDUTL("  Task not queued. Please create a support ticket.")
"RTN","PSO7P478",26,0)
 ;
"RTN","PSO7P478",27,0)
 Q
"RTN","PSO7P478",28,0)
 ;
"RTN","PSO7P478",29,0)
PCN ;Update PCN on PRESCRIPTION reject multiple
"RTN","PSO7P478",30,0)
 ;
"RTN","PSO7P478",31,0)
 N CNT,COB,DAT,DUR,RX,RN,RSPIEN,DA,DR,DIE
"RTN","PSO7P478",32,0)
 S CNT=0
"RTN","PSO7P478",33,0)
 S DAT=0 F  S DAT=$O(^PSRX("REJDAT",DAT)) Q:'DAT  D
"RTN","PSO7P478",34,0)
 . S RX="" F  S RX=$O(^PSRX("REJDAT",DAT,RX)) Q:'RX  D
"RTN","PSO7P478",35,0)
 .. S RN="" F  S RN=$O(^PSRX("REJDAT",DAT,RX,RN)) Q:'RN  D
"RTN","PSO7P478",36,0)
 ... I $P($G(^PSRX(RX,"REJ",RN,2)),"^",10)'="" Q
"RTN","PSO7P478",37,0)
 ... S RSPIEN=$P($G(^PSRX(RX,"REJ",RN,0)),"^",11) I 'RSPIEN Q
"RTN","PSO7P478",38,0)
 ... S COB=$P($G(^PSRX(RX,"REJ",RN,2)),"^",7) I COB="" S COB=1
"RTN","PSO7P478",39,0)
 ... K DUR D DURRESP^BPSNCPD3(RSPIEN,.DUR,COB)     ; ICR# 4560
"RTN","PSO7P478",40,0)
 ... I $L(DUR(COB,"PCN"))'=10 Q
"RTN","PSO7P478",41,0)
 ... S DIE="^PSRX("_RX_",""REJ"",",DA(1)=RX,DA=RN,DR=34_"////"_DUR(COB,"PCN")
"RTN","PSO7P478",42,0)
 ... D ^DIE K DA,DR,DIE
"RTN","PSO7P478",43,0)
 ... S CNT=CNT+1
"RTN","PSO7P478",44,0)
 ;
"RTN","PSO7P478",45,0)
 D MAIL(CNT)  ; Send mail message
"RTN","PSO7P478",46,0)
 Q
"RTN","PSO7P478",47,0)
 ;
"RTN","PSO7P478",48,0)
MAIL(PCNCNT) ; Send mail message
"RTN","PSO7P478",49,0)
 N CNT,MSG,XMY,XMDUZ,DIFROM,XMSUB,XMTEXT
"RTN","PSO7P478",50,0)
 S XMY(DUZ)=""
"RTN","PSO7P478",51,0)
 S XMSUB="PSO*7.0*478 Post install is complete",XMDUZ="Patch PSO*7.0*478"
"RTN","PSO7P478",52,0)
 S XMTEXT="MSG("
"RTN","PSO7P478",53,0)
 S CNT=1,MSG(CNT)=""
"RTN","PSO7P478",54,0)
 S CNT=CNT+1,MSG(CNT)="Patch PSO*7.0*478 post install routine has completed."
"RTN","PSO7P478",55,0)
 S CNT=CNT+1,MSG(CNT)=""
"RTN","PSO7P478",56,0)
 S CNT=CNT+1,MSG(CNT)="Updated "_PCNCNT_" records in the REJECT INFO sub-file of the PRESCRIPTION file."
"RTN","PSO7P478",57,0)
 S CNT=CNT+1,MSG(CNT)=""
"RTN","PSO7P478",58,0)
 S CNT=CNT+1,MSG(CNT)="For more information about this post install, review the patch description."
"RTN","PSO7P478",59,0)
 D ^XMD
"RTN","PSO7P478",60,0)
 Q
"RTN","PSOREJP1")
0^4^B202372294
"RTN","PSOREJP1",1,0)
PSOREJP1 ;BIRM/MFR - Third Party Reject Display Screen ;04/29/05
"RTN","PSOREJP1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,281,287,289,290,358,359,385,403,421,427,448,478**;DEC 1997;Build 27
"RTN","PSOREJP1",3,0)
 ;Reference to File 9002313.93 - BPS NCPDP REJECT CODES supported by IA 4720
"RTN","PSOREJP1",4,0)
 ;Reference to ^PS(59.7 supported by IA 694
"RTN","PSOREJP1",5,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOREJP1",6,0)
 ;Reference to File 9002313.25 supported by IA 5064
"RTN","PSOREJP1",7,0)
 ;Reference to BPSNCPD3 supported by IA 4560
"RTN","PSOREJP1",8,0)
 ;Reference to ^BPSVRX supported by IA 5723
"RTN","PSOREJP1",9,0)
 ;Reference to $$BBILL^BPSBUTL and $$RESUBMIT^BPSBUTL supported by IA 4719
"RTN","PSOREJP1",10,0)
 ;
"RTN","PSOREJP1",11,0)
EN(RX,REJ,CHANGE) ; Entry point
"RTN","PSOREJP1",12,0)
 ;
"RTN","PSOREJP1",13,0)
 ; - DO NOT change the IF logic below as both of them might get executed (intentional)
"RTN","PSOREJP1",14,0)
 N FILL,LASTLN,PSOTRIC,PSOCODE,PSOTCODE
"RTN","PSOREJP1",15,0)
 S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJP1",16,0)
 S PSOTRIC=$$TRIC(RX,FILL),PSOCODE=$$GET1^DIQ(52.25,REJ_","_RX,.01)
"RTN","PSOREJP1",17,0)
 S PSOTCODE=0 S:PSOCODE'=79&(PSOCODE'=88)&(PSOTRIC) PSOTCODE=1
"RTN","PSOREJP1",18,0)
 I $$CLOSED(RX,REJ) D EN^VALM("PSO REJECT DISPLAY - RESOLVED")
"RTN","PSOREJP1",19,0)
 I '$$CLOSED(RX,REJ)&(PSOTRIC) D EN^VALM("PSO REJECT TRICARE")   ;cnf, PSO*7*358, replace PSOTCODE with PSOTRIC
"RTN","PSOREJP1",20,0)
 I '$$CLOSED(RX,REJ)&('PSOTCODE)&('PSOTRIC) D EN^VALM("PSO REJECT DISPLAY")   ;cnf, PSO*7*358, add PSOTRIC check
"RTN","PSOREJP1",21,0)
 D FULL^VALM1
"RTN","PSOREJP1",22,0)
 Q
"RTN","PSOREJP1",23,0)
 ;
"RTN","PSOREJP1",24,0)
HDR ; - Builds the Header section
"RTN","PSOREJP1",25,0)
 N LINE1,LINE2,X
"RTN","PSOREJP1",26,0)
 S VALMHDR(1)=$$DVINFO^PSOREJU2(RX,FILL,1),VALMHDR(2)=$$PTINFO^PSOREJU2(RX,1)
"RTN","PSOREJP1",27,0)
 ;cnf, PSO*7*358, add REJ to parameter list for RXINFO^PSOREJP3
"RTN","PSOREJP1",28,0)
 S VALMHDR(3)=$$RXINFO^PSOREJP3(RX,FILL,1),VALMHDR(4)=$$RXINFO^PSOREJP3(RX,FILL,2,REJ)
"RTN","PSOREJP1",29,0)
 Q
"RTN","PSOREJP1",30,0)
 ;
"RTN","PSOREJP1",31,0)
TRIC(RX,RFL,PSOTRIC) ; - Return 1 for TRICARE, 2 for CHAMPVA or 0 (zero) for not TRICARE or CHAMPVA
"RTN","PSOREJP1",32,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJP1",33,0)
 S PSOTRIC="",PSOTRIC=$S(RFL=0&($$GET1^DIQ(52,RX_",",85,"I")="T"):1,$$GET1^DIQ(52.1,RFL_","_RX_",",85,"I")="T":1,RFL=0&($$GET1^DIQ(52,RX_",",85,"I")="C"):2,$$GET1^DIQ(52.1,RFL_","_RX_",",85,"I")="C":2,1:0)
"RTN","PSOREJP1",34,0)
 Q PSOTRIC
"RTN","PSOREJP1",35,0)
 ;
"RTN","PSOREJP1",36,0)
ELIGDISP(RX,RFL) ; Return either CHAMPVA or TRICARE for display
"RTN","PSOREJP1",37,0)
 ; purposes, or null if neither
"RTN","PSOREJP1",38,0)
 N PSOELIG
"RTN","PSOREJP1",39,0)
 S PSOELIG=$$TRIC(RX,RFL)
"RTN","PSOREJP1",40,0)
 Q $S(PSOELIG=1:"TRICARE",PSOELIG=2:"CHAMPVA",1:"")
"RTN","PSOREJP1",41,0)
 ;
"RTN","PSOREJP1",42,0)
ELIGTCV(RX,RFL,CAPS) ; Return either CHAMPVA, TRICARE, or Veteran/VETERAN for eligibility display (PSO*7*448)
"RTN","PSOREJP1",43,0)
 ; if CAPS=1 then return "Veteran" in all caps
"RTN","PSOREJP1",44,0)
 ; Note if the requested refill has been deleted, then the message "N/A - Fill Deleted" will be returned
"RTN","PSOREJP1",45,0)
 N PSOELIG,VET,DELMSG
"RTN","PSOREJP1",46,0)
 S DELMSG="N/A - Fill Deleted"
"RTN","PSOREJP1",47,0)
 S PSOELIG=$$TRIC(RX,RFL),VET="Veteran" I $G(CAPS) S VET="VETERAN"
"RTN","PSOREJP1",48,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) S PSOELIG=3
"RTN","PSOREJP1",49,0)
 Q $S(PSOELIG=1:"TRICARE",PSOELIG=2:"CHAMPVA",PSOELIG=3:DELMSG,1:VET)
"RTN","PSOREJP1",50,0)
 ;
"RTN","PSOREJP1",51,0)
INIT ; Builds the Body section
"RTN","PSOREJP1",52,0)
 N DATA,LINE
"RTN","PSOREJP1",53,0)
 I '$D(FILL) S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)   ; PSO*7*448 obtain fill# from 52.25 subfile if not defined
"RTN","PSOREJP1",54,0)
 I '$$CLOSED(RX,REJ) S VALM("TITLE")="Reject Information ("_$$ELIGTCV(RX,FILL)_")"
"RTN","PSOREJP1",55,0)
 I $$CLOSED(RX,REJ) S VALM("TITLE")="Reject Information (RESOLVED)"
"RTN","PSOREJP1",56,0)
 F I=1:1:$G(LASTLN) D RESTORE^VALM10(I)
"RTN","PSOREJP1",57,0)
 K ^TMP("PSOREJP1",$J) S VALMCNT=0,LINE=0
"RTN","PSOREJP1",58,0)
 D GET^PSOREJU2(RX,FILL,.DATA,REJ,1)
"RTN","PSOREJP1",59,0)
 D REJ                   ; Display the REJECT Information
"RTN","PSOREJP1",60,0)
 D OTH                   ; Display the Other Rejects Information
"RTN","PSOREJP1",61,0)
 D COM^PSOREJP3          ; Display the Comment
"RTN","PSOREJP1",62,0)
 D INS                   ; Display the Insurance Information
"RTN","PSOREJP1",63,0)
 D CLS                   ; Display the Resolution Information
"RTN","PSOREJP1",64,0)
 S VALMCNT=LINE
"RTN","PSOREJP1",65,0)
 Q
"RTN","PSOREJP1",66,0)
 ;
"RTN","PSOREJP1",67,0)
REJ ; - DUR Information
"RTN","PSOREJP1",68,0)
 N TYPE,PFLDT,TREJ,TDATA,PSOET,PSONAF,PSOCOB,PSOTXT,PSOECME S TDATA=""
"RTN","PSOREJP1",69,0)
 ;
"RTN","PSOREJP1",70,0)
 ; LH;PSO*7*448 - Display 'RESUBMISSION' where 'BACK-BILL' currently
"RTN","PSOREJP1",71,0)
 ; displays if the claim was resubmitted from the ECME User Screen.
"RTN","PSOREJP1",72,0)
 ; To facilitate this, the function $$RESUBMIT^BPSBUTL was created.
"RTN","PSOREJP1",73,0)
 ;
"RTN","PSOREJP1",74,0)
 ; Back Bill indicator - PSO*7*421
"RTN","PSOREJP1",75,0)
 S PSOTXT="",PSOCOB=$G(DATA(REJ,"COB")),PSOCOB=$S(PSOCOB="SECONDARY":2,PSOCOB="TERTIARY":3,1:1)
"RTN","PSOREJP1",76,0)
 I $$BBILL^BPSBUTL(RX,FILL,PSOCOB) S PSOTXT=" BACK-BILL"
"RTN","PSOREJP1",77,0)
 E  I $$RESUBMIT^BPSBUTL(RX,FILL,PSOCOB) S PSOTXT=" RESUBMISSION"  ; IA 4719.
"RTN","PSOREJP1",78,0)
 D SETLN("REJECT Information ("_$$ELIGTCV(RX,FILL)_") "_PSOTXT,1,1)
"RTN","PSOREJP1",79,0)
 S PSOECME=$$STATUS^PSOBPSUT(RX,FILL)
"RTN","PSOREJP1",80,0)
 I PSOECME="E PAYABLE" D
"RTN","PSOREJP1",81,0)
 . D SETLN("Reject Type    : ",,,18)
"RTN","PSOREJP1",82,0)
 . D SETLN("Reject Status  : ** E PAYABLE **",,,18)
"RTN","PSOREJP1",83,0)
 . Q
"RTN","PSOREJP1",84,0)
 E  D
"RTN","PSOREJP1",85,0)
 . S TYPE=$S($G(DATA(REJ,"CODE"))=79:"79 - REFILL TOO SOON",1:"")
"RTN","PSOREJP1",86,0)
 . I TYPE="" S TYPE=DATA(REJ,"CODE")_" - "_$E($$EXP(DATA(REJ,"CODE")),1,23)_"-"
"RTN","PSOREJP1",87,0)
 . D SETLN("Reject Type    : "_TYPE_" received on "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME"))),,,18)
"RTN","PSOREJP1",88,0)
 . ;cnf, PSO*7*358, if TRICARE/CHAMPVA non-billable then reset Status line
"RTN","PSOREJP1",89,0)
 . S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",90,0)
 . I PSOET D SETLN("Status         : NO CLAIM SUBMITTED")
"RTN","PSOREJP1",91,0)
 . I 'PSOET D SETLN("Reject Status  : "_$G(DATA(REJ,"STATUS"))_" - "_PSOECME,,,18)
"RTN","PSOREJP1",92,0)
 . Q
"RTN","PSOREJP1",93,0)
 S PSONAF=$$NFLDT^BPSBUTL(RX,FILL) ; IA 4719
"RTN","PSOREJP1",94,0)
 I PSONAF'="" D SETLN("Next Avail Fill: "_$$FMTE^XLFDT(PSONAF),,,18) ; PSO*7*421
"RTN","PSOREJP1",95,0)
 D SET("PAYER MESSAGE",63)
"RTN","PSOREJP1",96,0)
 D SET("REASON",63)
"RTN","PSOREJP1",97,0)
 S PFLDT=$$FMTE^XLFDT($G(DATA(REJ,"PLAN PREVIOUS FILL DATE")))
"RTN","PSOREJP1",98,0)
 D SET("DUR TEXT",63,$S(PFLDT="":1,1:0))
"RTN","PSOREJP1",99,0)
 I PFLDT'="" D SETLN("Last Fill Date : "_PFLDT_" (from payer)",,1,18)
"RTN","PSOREJP1",100,0)
 Q
"RTN","PSOREJP1",101,0)
 ;
"RTN","PSOREJP1",102,0)
OTH ; - Other Rejects Information
"RTN","PSOREJP1",103,0)
 N LST,I,RJC,J,LAST
"RTN","PSOREJP1",104,0)
 S LST=$G(DATA(REJ,"OTHER REJECTS")) I LST="" Q
"RTN","PSOREJP1",105,0)
 D SETLN()
"RTN","PSOREJP1",106,0)
 D SETLN("OTHER REJECTS",1,1)
"RTN","PSOREJP1",107,0)
 F I=1:1:$L(LST,",") S RJC=$P(LST,",",I) D
"RTN","PSOREJP1",108,0)
 . S LAST=1 F J=(I+1):1:$L(LST,",") I $P(LST,",",J)'="" S LAST=0 Q
"RTN","PSOREJP1",109,0)
 . I RJC'="" D SETLN(RJC_" - "_$$EXP(RJC),,$S(LAST:1,1:0),6)
"RTN","PSOREJP1",110,0)
 Q
"RTN","PSOREJP1",111,0)
 ;
"RTN","PSOREJP1",112,0)
INS ; - Insurance Information
"RTN","PSOREJP1",113,0)
 D SETLN()
"RTN","PSOREJP1",114,0)
 D SETLN("INSURANCE Information",1,1)
"RTN","PSOREJP1",115,0)
 N PSOINS,PSOINS1,I,PSOBINPCN
"RTN","PSOREJP1",116,0)
 S PSOINS=$G(DATA(REJ,"INSURANCE NAME"))
"RTN","PSOREJP1",117,0)
 F I=1:1:(50-($L(PSOINS)+18)) S PSOINS=PSOINS_" "
"RTN","PSOREJP1",118,0)
 S PSOINS1=$G(DATA(REJ,"COB"))
"RTN","PSOREJP1",119,0)
 I PSOINS1="SECONDARY" S PSOINS=PSOINS_"Coord. Of Benefits: "_PSOINS1
"RTN","PSOREJP1",120,0)
 D SETLN("Insurance      : "_PSOINS,,,18)
"RTN","PSOREJP1",121,0)
 D SETLN("Contact        : "_$G(DATA(REJ,"PLAN CONTACT")),,,18)
"RTN","PSOREJP1",122,0)
 S PSOBINPCN=$G(DATA(REJ,"BIN"))_"/ "_$G(DATA(REJ,"PCN"))
"RTN","PSOREJP1",123,0)
 D SETLN("BIN/ PCN       : "_PSOBINPCN,,,18)
"RTN","PSOREJP1",124,0)
 D SETLN("Group Number   : "_$G(DATA(REJ,"GROUP NUMBER")),,,18)
"RTN","PSOREJP1",125,0)
 D SETLN("Cardholder ID  : "_$G(DATA(REJ,"CARDHOLDER ID")),,1,18)
"RTN","PSOREJP1",126,0)
 Q
"RTN","PSOREJP1",127,0)
 ;
"RTN","PSOREJP1",128,0)
CLS ; - Resolution Information
"RTN","PSOREJP1",129,0)
 N X
"RTN","PSOREJP1",130,0)
 I '$$CLOSED(RX,REJ) Q
"RTN","PSOREJP1",131,0)
 D SETLN()
"RTN","PSOREJP1",132,0)
 D SETLN("RESOLUTION Information",1,1)
"RTN","PSOREJP1",133,0)
 D SETLN("Resolved By    : "_$G(DATA(REJ,"CLOSED BY")),,,18)
"RTN","PSOREJP1",134,0)
 D SETLN("Date/Time      : "_$G(DATA(REJ,"CLOSED DATE/TIME")),,,18)
"RTN","PSOREJP1",135,0)
 I $G(DATA(REJ,"CLOSE COMMENTS"))'="" D SET("CLOSE COMMENTS",63)
"RTN","PSOREJP1",136,0)
 I $G(DATA(REJ,"COD1"))'="" D SETLN("Reason for Svc : "_$$OVRX^PSOREJU1(1,$G(DATA(REJ,"COD1"))),,,18)
"RTN","PSOREJP1",137,0)
 I $G(DATA(REJ,"COD2"))'="" D SETLN("Profes. Svc    : "_$$OVRX^PSOREJU1(2,$G(DATA(REJ,"COD2"))),,,18)
"RTN","PSOREJP1",138,0)
 I $G(DATA(REJ,"COD3"))'="" D SETLN("Result of Svc  : "_$$OVRX^PSOREJU1(3,$G(DATA(REJ,"COD3"))),,,18)
"RTN","PSOREJP1",139,0)
 I $G(DATA(REJ,"CLA CODE"))'="" D
"RTN","PSOREJP1",140,0)
 . N CLAPNTR S CLAPNTR=$$GET1^DIQ(52.25,REJ_","_RX_",",24,"I")
"RTN","PSOREJP1",141,0)
 . S X=DATA(REJ,"CLA CODE")_" - "_$$GET1^DIQ(9002313.25,CLAPNTR,".02")
"RTN","PSOREJP1",142,0)
 . D SETLN("Clarific. Code : "_X,,,18)
"RTN","PSOREJP1",143,0)
 I $G(DATA(REJ,"PRIOR AUTH TYPE"))'="" D
"RTN","PSOREJP1",144,0)
 . S X=$$GET1^DIQ(52.25,REJ_","_RX,25,"I")_" - "_(DATA(REJ,"PRIOR AUTH TYPE"))
"RTN","PSOREJP1",145,0)
 . D SETLN("Prior Auth.Type: "_X,,,18),SETLN("Prior Auth. #  : "_DATA(REJ,"PRIOR AUTH NUMBER"),,,18)
"RTN","PSOREJP1",146,0)
 D SETLN("Reason         : "_$G(DATA(REJ,"CLOSE REASON")),,1,18)
"RTN","PSOREJP1",147,0)
 Q
"RTN","PSOREJP1",148,0)
 ;
"RTN","PSOREJP1",149,0)
 ;
"RTN","PSOREJP1",150,0)
SET(FIELD,L,UND) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJP1",151,0)
 N TXT,T
"RTN","PSOREJP1",152,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L D SETLN($$LABEL(FIELD)_TXT,,$S($G(UND):1,1:0),80-L) Q
"RTN","PSOREJP1",153,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJP1",154,0)
 . I I=1 D SETLN($$LABEL(FIELD)_$E(TXT,1,L),,,80-L) S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJP1",155,0)
 . S T="",$E(T,81-L)=$E(TXT,1,L) D SETLN(T,,$S($E(TXT,L+1,999)=""&$G(UND):1,1:0),80-L) S TXT=$E(TXT,L+1,999)
"RTN","PSOREJP1",156,0)
 Q
"RTN","PSOREJP1",157,0)
 ;
"RTN","PSOREJP1",158,0)
LABEL(FIELD) ; Sets the label for the field
"RTN","PSOREJP1",159,0)
 I FIELD="REASON" Q "Reason Code    : "
"RTN","PSOREJP1",160,0)
 I FIELD="PAYER MESSAGE" Q "Payer Addl Msg : "
"RTN","PSOREJP1",161,0)
 I FIELD="DUR TEXT" Q $S(+$$ISDUR^PSOREJP5(RX,REJ):"+DUR Text      : ",1:"DUR Text       : ")
"RTN","PSOREJP1",162,0)
 I FIELD="CLOSE COMMENTS" Q "Comments       : "
"RTN","PSOREJP1",163,0)
 Q ""
"RTN","PSOREJP1",164,0)
 ;
"RTN","PSOREJP1",165,0)
VIEW ; - Rx View hidden action
"RTN","PSOREJP1",166,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",167,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",168,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",169,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",170,0)
 ;
"RTN","PSOREJP1",171,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",172,0)
 DO
"RTN","PSOREJP1",173,0)
 . N PSOVDA,DA,PS
"RTN","PSOREJP1",174,0)
 . S (PSOVDA,DA)=RX,PS="REJECT"
"RTN","PSOREJP1",175,0)
 . N RX,REJ,FILL,LINE,TITLE D DP^PSORXVW
"RTN","PSOREJP1",176,0)
 ;
"RTN","PSOREJP1",177,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",178,0)
 Q
"RTN","PSOREJP1",179,0)
 ;
"RTN","PSOREJP1",180,0)
EDT ; - Rx Edit hidden action
"RTN","PSOREJP1",181,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",182,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",183,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",184,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",185,0)
 ;
"RTN","PSOREJP1",186,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",187,0)
 DO
"RTN","PSOREJP1",188,0)
 . N PSOSITE,ORN,PSOPAR,PSOLIST,PSOREJCT
"RTN","PSOREJP1",189,0)
 . S PSOSITE=$$RXSITE^PSOBPSUT(RX,FILL),ORN=RX
"RTN","PSOREJP1",190,0)
 . S PSOPAR=$G(^PS(59,PSOSITE,1)),PSOLIST(1)=ORN_","
"RTN","PSOREJP1",191,0)
 . ; Variable PSOREJCT is used so that EPH^PSORXEDT has the RX 'passed' by this routine
"RTN","PSOREJP1",192,0)
 . S PSOREJCT=RX_U_FILL
"RTN","PSOREJP1",193,0)
 . N RX,REJ,FILL,LINE,TITLE D EPH^PSORXEDT
"RTN","PSOREJP1",194,0)
 ;
"RTN","PSOREJP1",195,0)
 K VALMBCK I $$CLOSED(RX,REJ),$D(PSOSTFLT),PSOSTFLT="U" S CHANGE=1 Q
"RTN","PSOREJP1",196,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",197,0)
 Q
"RTN","PSOREJP1",198,0)
 ;
"RTN","PSOREJP1",199,0)
OVR ; - Override a REJECT action
"RTN","PSOREJP1",200,0)
 N PSOET
"RTN","PSOREJP1",201,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",202,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",203,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",204,0)
 I PSOET S VALMSG="OVR not allowed for "_$$ELIGDISP(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",205,0)
 N COD1,COD2,COD3
"RTN","PSOREJP1",206,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",207,0)
 S COD1=$$OVRCOD^PSOREJU1(1,$$GET1^DIQ(52.25,REJ_","_RX,14)) I COD1="^"!(COD1="") S VALMBCK="R" Q
"RTN","PSOREJP1",208,0)
 S COD2=$$OVRCOD^PSOREJU1(2) I COD2="^" S VALMBCK="R" Q
"RTN","PSOREJP1",209,0)
 S COD3=$$OVRCOD^PSOREJU1(3) I COD3="^" S VALMBCK="R" Q
"RTN","PSOREJP1",210,0)
 D OVRDSP^PSOREJU1(COD1_"^"_COD2_"^"_COD3)
"RTN","PSOREJP1",211,0)
 D SEND^PSOREJP3(COD1_"^"_COD2_"^"_COD3,,,PSOET)
"RTN","PSOREJP1",212,0)
 Q
"RTN","PSOREJP1",213,0)
 ;
"RTN","PSOREJP1",214,0)
RES ; - Re-submit a claim action
"RTN","PSOREJP1",215,0)
 N PSOET
"RTN","PSOREJP1",216,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",217,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",218,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",219,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",220,0)
 D SEND^PSOREJP3(,,,PSOET)
"RTN","PSOREJP1",221,0)
 Q
"RTN","PSOREJP1",222,0)
 ;
"RTN","PSOREJP1",223,0)
CLA ; - Submit Clarification Code
"RTN","PSOREJP1",224,0)
 N CLA,PSOET
"RTN","PSOREJP1",225,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",226,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",227,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",228,0)
 I PSOET S VALMSG="CLA not allowed for "_$$ELIGDISP(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",229,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",230,0)
 ; Prompt for the Submission Clarification Codes (up to three)
"RTN","PSOREJP1",231,0)
 S CLA=$$CLA^PSOREJU1() I CLA="^"!(CLA="") S VALMBCK="R" Q
"RTN","PSOREJP1",232,0)
 W ! D SEND^PSOREJP3(,CLA,,PSOET)
"RTN","PSOREJP1",233,0)
 Q
"RTN","PSOREJP1",234,0)
 ;
"RTN","PSOREJP1",235,0)
PA ; - Submit Prior Authorization
"RTN","PSOREJP1",236,0)
 N PA,PSOET
"RTN","PSOREJP1",237,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",238,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",239,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",240,0)
 I PSOET S VALMSG="PA not allowed for "_$$ELIGDISP(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",241,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",242,0)
 ; Prompt for Prior Auth fields
"RTN","PSOREJP1",243,0)
 S PA=$$PA^PSOREJU2() I PA="^" S VALMBCK="R" Q
"RTN","PSOREJP1",244,0)
 W ! D SEND^PSOREJP3(,,PA,PSOET)
"RTN","PSOREJP1",245,0)
 Q
"RTN","PSOREJP1",246,0)
 ;
"RTN","PSOREJP1",247,0)
MP ; - Patient Medication Profile
"RTN","PSOREJP1",248,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",249,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",250,0)
 N SITE,PATIENT
"RTN","PSOREJP1",251,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",252,0)
 S SITE=+$$RXSITE^PSOBPSUT(RX,FILL) S:$G(PSOSITE) SITE=PSOSITE
"RTN","PSOREJP1",253,0)
 S PATIENT=+$$GET1^DIQ(52,RX,2,"I")
"RTN","PSOREJP1",254,0)
 D LST^PSOPMP0(SITE,PATIENT) S VALMBCK="R"
"RTN","PSOREJP1",255,0)
 Q
"RTN","PSOREJP1",256,0)
 ;
"RTN","PSOREJP1",257,0)
EXIT ;
"RTN","PSOREJP1",258,0)
 K ^TMP("PSOREJP1",$J)
"RTN","PSOREJP1",259,0)
 Q
"RTN","PSOREJP1",260,0)
 ;
"RTN","PSOREJP1",261,0)
SETLN(TEXT,REV,UND,HIG) ; Sets a line to be displayed in the Body section
"RTN","PSOREJP1",262,0)
 N X
"RTN","PSOREJP1",263,0)
 S:$G(TEXT)="" $E(TEXT,80)=""
"RTN","PSOREJP1",264,0)
 S:$L(TEXT)>80 TEXT=$E(TEXT,1,80)
"RTN","PSOREJP1",265,0)
 S LINE=LINE+1,^TMP("PSOREJP1",$J,LINE,0)=$G(TEXT)
"RTN","PSOREJP1",266,0)
 ;
"RTN","PSOREJP1",267,0)
 I LINE>$G(LASTLN) D SAVE^VALM10(LINE) S LASTLN=LINE
"RTN","PSOREJP1",268,0)
 ;
"RTN","PSOREJP1",269,0)
 I $G(REV) D  Q
"RTN","PSOREJP1",270,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IOINORM)
"RTN","PSOREJP1",271,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","PSOREJP1",272,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","PSOREJP1",273,0)
 I $G(HIG) D
"RTN","PSOREJP1",274,0)
 . D CNTRL^VALM10(LINE,HIG,80,IOINHI_$S($G(UND):IOUON,1:""),IOINORM)
"RTN","PSOREJP1",275,0)
 Q
"RTN","PSOREJP1",276,0)
HELP ;
"RTN","PSOREJP1",277,0)
 Q
"RTN","PSOREJP1",278,0)
 ;
"RTN","PSOREJP1",279,0)
CLOSED(RX,REJ,MSG) ; Returns whether the REJECT is RESOLVED or NOT
"RTN","PSOREJP1",280,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,10,"I") D:$G(MSG)  Q 1
"RTN","PSOREJP1",281,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP1",282,0)
 Q 0
"RTN","PSOREJP1",283,0)
 ;
"RTN","PSOREJP1",284,0)
REOPN(RX,REJ) ; Returns whether the REJECT was RE-OPENED or NOT
"RTN","PSOREJP1",285,0)
 Q $S($$GET1^DIQ(52.25,REJ_","_RX,23)="":0,1:1)
"RTN","PSOREJP1",286,0)
 ;
"RTN","PSOREJP1",287,0)
EXP(CODE) ; - Returns the explanation field (.02) for a reject code
"RTN","PSOREJP1",288,0)
 ;  Input:  (r) CODE - .01 field (Code) value from file 9002313.93
"RTN","PSOREJP1",289,0)
 ; Output: .02 field (Explanation) value from file 9002313.93
"RTN","PSOREJP1",290,0)
 N DIC,X,Y
"RTN","PSOREJP1",291,0)
 S DIC=9002313.93,DIC(0)="Z",X=CODE D ^DIC
"RTN","PSOREJP1",292,0)
 Q $P($G(Y(0)),"^",2)
"RTN","PSOREJP1",293,0)
 ;
"RTN","PSOREJP1",294,0)
OUT(RX) ; - Supported call by outside PROTOCOLs to act on specific REJECTs
"RTN","PSOREJP1",295,0)
 N I,RFL,DATA,REJ,PSOBACK,VALMCNT,RXN
"RTN","PSOREJP1",296,0)
 I '$D(^XUSEC("PSORPH",DUZ)) D  Q
"RTN","PSOREJP1",297,0)
 . S VALMSG="PSORPH key required to use the REJ action.",VALMBCK="R"
"RTN","PSOREJP1",298,0)
 I $G(PS)="REJECT" D
"RTN","PSOREJP1",299,0)
 . S VALMSG="REJ action is not available at this point.",VALMBCK="R"
"RTN","PSOREJP1",300,0)
 S PSOBACK=1
"RTN","PSOREJP1",301,0)
 S (RFL,I)=0 F I=1:1 Q:'$D(^PSRX(RX,1,I))  S RFL=I
"RTN","PSOREJP1",302,0)
 S X=$$FIND^PSOREJUT(RX,RFL,.DATA) S REJ=$O(DATA(""))
"RTN","PSOREJP1",303,0)
 I '$G(REJ) S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOREJP1",304,0)
 D EN(RX,REJ) S VALMBCK="R"
"RTN","PSOREJP1",305,0)
 Q
"RTN","PSOREJP1",306,0)
 ;
"RTN","PSOREJP1",307,0)
SMA ;Submit multiple actions
"RTN","PSOREJP1",308,0)
 N CLA,I,OVR,OVRSTR,PA,REJIEN,DUR,RSC,DURIEN,REQ,RSUB,PSOET
"RTN","PSOREJP1",309,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",310,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",311,0)
 I PSOET S VALMSG="SMA not allowed for "_$$ELIGDISP(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",312,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",313,0)
 S DURIEN=$P($G(^PSRX(RX,"REJ",REJ,0)),U,11)
"RTN","PSOREJP1",314,0)
 D DURRESP^BPSNCPD3(DURIEN,.DUR) ; Reference to BPSNCPD3 supported by IA 4560
"RTN","PSOREJP1",315,0)
 ;
"RTN","PSOREJP1",316,0)
 ; Prompt for Prior Auth fields
"RTN","PSOREJP1",317,0)
 S PA=$$PA^PSOREJU2
"RTN","PSOREJP1",318,0)
 I PA="^" S VALMBCK="R" Q  ;User terminated or did not answer
"RTN","PSOREJP1",319,0)
 ;
"RTN","PSOREJP1",320,0)
 ; Prompt for submission clarification codes (up to three)
"RTN","PSOREJP1",321,0)
 W !
"RTN","PSOREJP1",322,0)
 S CLA=$$CLA^PSOREJU1
"RTN","PSOREJP1",323,0)
 I CLA="^" S VALMBCK="R" Q  ;User terminated or did not answer
"RTN","PSOREJP1",324,0)
 ;
"RTN","PSOREJP1",325,0)
 ; Check if DUR Overrides required - PSO*7*421
"RTN","PSOREJP1",326,0)
 S REQ=$$REQ I REQ="^" S VALMBCK="R" Q
"RTN","PSOREJP1",327,0)
 ;
"RTN","PSOREJP1",328,0)
 ; Prompt for DUR Overrides (up to 3) - option to delete default added - PSO*7*421
"RTN","PSOREJP1",329,0)
 S OVRSTR="",OVR=""
"RTN","PSOREJP1",330,0)
 I REQ S REJIEN=0 F RSUB=1:1:3 D  Q:OVR="^"!(OVR="")!(OVR="@")  S $P(OVRSTR,"~",RSUB)=OVR
"RTN","PSOREJP1",331,0)
 . I REJIEN]"" S REJIEN=$O(DUR(1,"DUR PPS",REJIEN))
"RTN","PSOREJP1",332,0)
 . S RSC="" I +REJIEN S RSC=$P($G(DUR(1,"DUR PPS",REJIEN,"REASON FOR SERVICE CODE"))," ",1)
"RTN","PSOREJP1",333,0)
 . S OVR=$$SMAOVR^PSOREJU1(RSC,RSUB)
"RTN","PSOREJP1",334,0)
 I OVR="^" S VALMBCK="R" Q  ;User exited or timed-out
"RTN","PSOREJP1",335,0)
 ;
"RTN","PSOREJP1",336,0)
 W !!,?6,"RECAP:"
"RTN","PSOREJP1",337,0)
 W !,?6,"Prior Authorization Type       : ",$P(PA,"^"),"  ",$$DSC^PSOREJU1(9002313.26,$P(PA,"^"),.02)
"RTN","PSOREJP1",338,0)
 W !,?6,"Prior Authorization Number     : ",$P(PA,"^",2)
"RTN","PSOREJP1",339,0)
 W !,?6,"Submission Clarification Code 1: ",$P(CLA,"~",1),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",1),.02)
"RTN","PSOREJP1",340,0)
 I $P(CLA,"~",2)]"" W !,?6,"Submission Clarification Code 2: ",$P(CLA,"~",2),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",2),.02)
"RTN","PSOREJP1",341,0)
 I $P(CLA,"~",3)]"" W !,?6,"Submission Clarification Code 3: ",$P(CLA,"~",3),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",3),.02)
"RTN","PSOREJP1",342,0)
 W !,?6,"Reason for Service Code 1      : ",$P($P(OVRSTR,"~",1),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",1),U,1),1)
"RTN","PSOREJP1",343,0)
 W !,?6,"Professional Service Code 1    : ",$P($P(OVRSTR,"~",1),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",1),U,2),1)
"RTN","PSOREJP1",344,0)
 W !,?6,"Result of Service Code 1       : ",$P($P(OVRSTR,"~",1),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",1),U,3),1)
"RTN","PSOREJP1",345,0)
 I $P($P(OVRSTR,"~",2),U,1)]"" W !,?6,"Reason for Service Code 2      : ",$P($P(OVRSTR,"~",2),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",2),U,1),1)
"RTN","PSOREJP1",346,0)
 I $P($P(OVRSTR,"~",2),U,2)]"" W !,?6,"Professional Service Code 2    : ",$P($P(OVRSTR,"~",2),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",2),U,2),1)
"RTN","PSOREJP1",347,0)
 I $P($P(OVRSTR,"~",2),U,3)]"" W !,?6,"Result of Service Code 2       : ",$P($P(OVRSTR,"~",2),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",2),U,3),1)
"RTN","PSOREJP1",348,0)
 I $P($P(OVRSTR,"~",3),U,1)]"" W !,?6,"Reason for Service Code 3      : ",$P($P(OVRSTR,"~",3),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",3),U,1),1)
"RTN","PSOREJP1",349,0)
 I $P($P(OVRSTR,"~",3),U,2)]"" W !,?6,"Professional Service Code 3    : ",$P($P(OVRSTR,"~",3),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",3),U,2),1)
"RTN","PSOREJP1",350,0)
 I $P($P(OVRSTR,"~",3),U,3)]"" W !,?6,"Result of Service Code 3       : ",$P($P(OVRSTR,"~",3),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",3),U,3),1)
"RTN","PSOREJP1",351,0)
 W ! D SEND^PSOREJP3(OVRSTR,CLA,PA,PSOET)
"RTN","PSOREJP1",352,0)
 Q
"RTN","PSOREJP1",353,0)
 ;
"RTN","PSOREJP1",354,0)
VRX ; View ePharmacy Prescription - invoked from the Reject Information screen
"RTN","PSOREJP1",355,0)
 N BPSVRX
"RTN","PSOREJP1",356,0)
 D FULL^VALM1
"RTN","PSOREJP1",357,0)
 S BPSVRX("RXIEN")=$G(RX)
"RTN","PSOREJP1",358,0)
 S BPSVRX("FILL#")=$G(FILL)
"RTN","PSOREJP1",359,0)
 D ^BPSVRX    ; DBIA #5723
"RTN","PSOREJP1",360,0)
 S VALMBCK="R"
"RTN","PSOREJP1",361,0)
 Q
"RTN","PSOREJP1",362,0)
 ;
"RTN","PSOREJP1",363,0)
VER ; View ePharmacy Prescription - invoked from the Rx view hidden action of Medication Profile
"RTN","PSOREJP1",364,0)
 N BPSVRX
"RTN","PSOREJP1",365,0)
 K ^TMP("BPSVRX-PSO VIEW RX",$J)
"RTN","PSOREJP1",366,0)
 D FULL^VALM1
"RTN","PSOREJP1",367,0)
 ;
"RTN","PSOREJP1",368,0)
 ; save the current PSO Rx display array and header
"RTN","PSOREJP1",369,0)
 M ^TMP("BPSVRX-PSO VIEW RX",$J,"PSOHDR")=^TMP("PSOHDR",$J)
"RTN","PSOREJP1",370,0)
 M ^TMP("BPSVRX-PSO VIEW RX",$J,"PSOAL")=^TMP("PSOAL",$J)
"RTN","PSOREJP1",371,0)
 ;
"RTN","PSOREJP1",372,0)
 S BPSVRX("RXIEN")=$G(RXN)    ; Rx ien ptr file 52
"RTN","PSOREJP1",373,0)
 D ^BPSVRX    ; DBIA #5723
"RTN","PSOREJP1",374,0)
 ;
"RTN","PSOREJP1",375,0)
 ; restore the PSO Rx display array and header upon return
"RTN","PSOREJP1",376,0)
 I '$D(^TMP("PSOHDR",$J)) M ^TMP("PSOHDR",$J)=^TMP("BPSVRX-PSO VIEW RX",$J,"PSOHDR")
"RTN","PSOREJP1",377,0)
 I '$D(^TMP("PSOAL",$J)) M ^TMP("PSOAL",$J)=^TMP("BPSVRX-PSO VIEW RX",$J,"PSOAL")
"RTN","PSOREJP1",378,0)
 ;
"RTN","PSOREJP1",379,0)
 S VALMBCK="R"
"RTN","PSOREJP1",380,0)
 K ^TMP("BPSVRX-PSO VIEW RX",$J)
"RTN","PSOREJP1",381,0)
 Q
"RTN","PSOREJP1",382,0)
 ;
"RTN","PSOREJP1",383,0)
REQ() ;Prompt if DUR Rejects are required
"RTN","PSOREJP1",384,0)
 N DIR,DTOUT,DTOUT,DIRUT,DIROUT,X,Y
"RTN","PSOREJP1",385,0)
 S DIR("?")="Enter No if Reason Codes are not required. Enter Yes to proceed and enter up to 3 sets of override Reason Codes. To delete default Reason Codes, enter ""@""."
"RTN","PSOREJP1",386,0)
 S DIR("A")="Enter DUR codes",DIR(0)="Y",DIR("B")="YES" W ! D ^DIR
"RTN","PSOREJP1",387,0)
 I $D(DIRUT)!$D(DIROUT) Q "^" ;User exited or timed-out
"RTN","PSOREJP1",388,0)
 Q Y
"RTN","PSOREJU2")
0^3^B63731679
"RTN","PSOREJU2",1,0)
PSOREJU2 ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities (1) ;10/15/04
"RTN","PSOREJU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,260,287,341,290,358,359,385,403,421,427,478**;DEC 1997;Build 27
"RTN","PSOREJU2",3,0)
 ;Reference to $$TAXID^IBCEF75 supported by IA 6768
"RTN","PSOREJU2",4,0)
 ;Reference to $$DIVNCPDP^BPSBUTL supported by IA 4719
"RTN","PSOREJU2",5,0)
 ;Reference to File 9002313.23 - BPS NCPDP REASON FOR SERVICE CODE supported by IA 4714
"RTN","PSOREJU2",6,0)
 ;
"RTN","PSOREJU2",7,0)
GET(RX,RFL,REJDATA,REJID,OKCL,CODE,RRRFLG) ; get reject data from subfile 52.25
"RTN","PSOREJU2",8,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU2",9,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJU2",10,0)
 ;         (r) REJDATA(REJECT IEN,FIELD) - Array where these Reject fields will be returned:
"RTN","PSOREJU2",11,0)
 ;                       "BIN" - Payer BIN number
"RTN","PSOREJU2",12,0)
 ;                       "PCN" - Processor Control Number
"RTN","PSOREJU2",13,0)
 ;                       "CODE" - Reject Code (79 or 88)
"RTN","PSOREJU2",14,0)
 ;                       "DATE/TIME" - DATE/TIME Reject was detected
"RTN","PSOREJU2",15,0)
 ;                       "PAYER MESSAGE" - Message returned by the payer
"RTN","PSOREJU2",16,0)
 ;                       "REASON" - Reject Reason description (from payer)
"RTN","PSOREJU2",17,0)
 ;                       "INSURANCE NAME" - Patient's Insurance Company Name
"RTN","PSOREJU2",18,0)
 ;                       "INSURANCE POINTER" - Patient Insurance Company Pointer
"RTN","PSOREJU2",19,0)
 ;                       "COB" - Coordination of Benefits
"RTN","PSOREJU2",20,0)
 ;                       "GROUP NAME" - Patient's Insurance Group Name
"RTN","PSOREJU2",21,0)
 ;                       "GROUP NUMBER" - Patient's Insurance Group Number
"RTN","PSOREJU2",22,0)
 ;                       "CARDHOLDER ID" - Patient's Insurance Cardholder ID
"RTN","PSOREJU2",23,0)
 ;                       "PLAN CONTACT" - Plan's Contact (eg., "1-800-...")
"RTN","PSOREJU2",24,0)
 ;                       "PLAN PREVIOUS FILL DATE" - Last time Rx was paid by payer
"RTN","PSOREJU2",25,0)
 ;                       "STATUS" - REJECTS status ("OPEN/UNRESOLVED" or "CLOSED/RESOLVED")
"RTN","PSOREJU2",26,0)
 ;                       "DUR TEXT" - Payer's DUR description
"RTN","PSOREJU2",27,0)
 ;                       "DUR ADD MSG TEXT" - Payer's DUR additional description
"RTN","PSOREJU2",28,0)
 ;                       "OTHER REJECTS" - Other Rejects on the same response
"RTN","PSOREJU2",29,0)
 ;                       "REASON SVC CODE" - Reason for Service Code
"RTN","PSOREJU2",30,0)
 ;                  If REJECT is closed, the following fields will be returned:
"RTN","PSOREJU2",31,0)
 ;                       "CLA CODE" - Clarification Code submitted
"RTN","PSOREJU2",32,0)
 ;                       "PRIOR AUTH TYPE" - Prior Authorization Type
"RTN","PSOREJU2",33,0)
 ;                       "PRIOR AUTH NUMBER" - Prior Authorization Type
"RTN","PSOREJU2",34,0)
 ;                       "CLOSED DATE/TIME" - DATE/TIME Reject was closed
"RTN","PSOREJU2",35,0)
 ;                       "CLOSED BY" - Name of the user responsible for closing Reject
"RTN","PSOREJU2",36,0)
 ;                       "CLOSE REASON" - Reason for closing Reject (text)
"RTN","PSOREJU2",37,0)
 ;                       "CLOSE COMMENTS" - User entered comments at close
"RTN","PSOREJU2",38,0)
 ;         (o) REJID - REJECT IEN in the PRESCRIPTION file for retrieve this REJECT
"RTN","PSOREJU2",39,0)
 ;         (o) OKCL - If set to 1, CLOSED REJECTs will also be returned
"RTN","PSOREJU2",40,0)
 ;         (o) CODE - Only REJECTs with this CODE should be returned
"RTN","PSOREJU2",41,0)
 ;         (o) RRRFLG - If set to 1 with CODE present, also return Reject Resolution Required REJECTs
"RTN","PSOREJU2",42,0)
 ;                      If set to 1 and CODE not passed, then only return RRR REJECTs
"RTN","PSOREJU2",43,0)
 ;
"RTN","PSOREJU2",44,0)
 N REJS,ARRAY,REJFLD,IDX,COM,Z
"RTN","PSOREJU2",45,0)
 ;
"RTN","PSOREJU2",46,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU2",47,0)
 ;
"RTN","PSOREJU2",48,0)
 K REJDATA
"RTN","PSOREJU2",49,0)
 I '$O(^PSRX(RX,"REJ",0)) Q
"RTN","PSOREJU2",50,0)
 ;
"RTN","PSOREJU2",51,0)
 K REJS S RFL=+$G(RFL)
"RTN","PSOREJU2",52,0)
 I $G(REJID) D
"RTN","PSOREJU2",53,0)
 . I +$P($G(^PSRX(RX,"REJ",REJID,0)),"^",4)'=RFL Q
"RTN","PSOREJU2",54,0)
 . I '$G(OKCL),$P($G(^PSRX(RX,"REJ",REJID,0)),"^",5) Q
"RTN","PSOREJU2",55,0)
 . S REJS(REJID)=""
"RTN","PSOREJU2",56,0)
 E  D
"RTN","PSOREJU2",57,0)
 . S IDX=999
"RTN","PSOREJU2",58,0)
 . F  S IDX=$O(^PSRX(RX,"REJ",IDX),-1) Q:'IDX  D
"RTN","PSOREJU2",59,0)
 . . I +$P($G(^PSRX(RX,"REJ",IDX,0)),"^",4)'=RFL Q
"RTN","PSOREJU2",60,0)
 . . I '$G(OKCL),$P($G(^PSRX(RX,"REJ",IDX,0)),"^",5) Q
"RTN","PSOREJU2",61,0)
 . . S REJS(IDX)=""
"RTN","PSOREJU2",62,0)
 I '$D(REJS) Q
"RTN","PSOREJU2",63,0)
 ;
"RTN","PSOREJU2",64,0)
 S IDX=0
"RTN","PSOREJU2",65,0)
 F  S IDX=$O(REJS(IDX)) Q:'IDX  D
"RTN","PSOREJU2",66,0)
 . N SKIP
"RTN","PSOREJU2",67,0)
 . K ARRAY D GETS^DIQ(52.25,IDX_","_RX_",","*","","ARRAY")
"RTN","PSOREJU2",68,0)
 . K REJFLD M REJFLD=ARRAY(52.25,IDX_","_RX_",")
"RTN","PSOREJU2",69,0)
 . ;
"RTN","PSOREJU2",70,0)
 . ; check CODE and RRRFLG to see if we want this reject data
"RTN","PSOREJU2",71,0)
 . S SKIP=0    ; default is to include it
"RTN","PSOREJU2",72,0)
 . I $G(CODE)'="",REJFLD(.01)'=CODE S SKIP=1               ; CODE exists and doesn't match this reject
"RTN","PSOREJU2",73,0)
 . I SKIP,$G(RRRFLG),$G(REJFLD(30))="YES" S SKIP=0         ;  but include these if RRRFLG is true and this is an RRR reject
"RTN","PSOREJU2",74,0)
 . I $G(CODE)="",$G(RRRFLG),$G(REJFLD(30))'="YES" S SKIP=1 ; want only RRR rejects in this case
"RTN","PSOREJU2",75,0)
 . I SKIP Q    ; get out if we're skipping this one
"RTN","PSOREJU2",76,0)
 . ;
"RTN","PSOREJU2",77,0)
 . S REJDATA(IDX,"CODE")=$G(REJFLD(.01))
"RTN","PSOREJU2",78,0)
 . S REJDATA(IDX,"DATE/TIME")=$G(REJFLD(1))
"RTN","PSOREJU2",79,0)
 . S REJDATA(IDX,"PAYER MESSAGE")=$G(REJFLD(2))
"RTN","PSOREJU2",80,0)
 . S REJDATA(IDX,"REASON")=$G(REJFLD(3))
"RTN","PSOREJU2",81,0)
 . S REJDATA(IDX,"PHARMACIST")=$G(REJFLD(4))
"RTN","PSOREJU2",82,0)
 . S REJDATA(IDX,"INSURANCE NAME")=$G(REJFLD(20))
"RTN","PSOREJU2",83,0)
 . S REJDATA(IDX,"INSURANCE POINTER")=$G(REJFLD(33))  ;PSO*427
"RTN","PSOREJU2",84,0)
 . S REJDATA(IDX,"COB")=$G(REJFLD(27))
"RTN","PSOREJU2",85,0)
 . S REJDATA(IDX,"GROUP NAME")=$G(REJFLD(6))
"RTN","PSOREJU2",86,0)
 . S REJDATA(IDX,"GROUP NUMBER")=$G(REJFLD(21))
"RTN","PSOREJU2",87,0)
 . S REJDATA(IDX,"BIN")=$G(REJFLD(29))
"RTN","PSOREJU2",88,0)
 . S REJDATA(IDX,"PCN")=$G(REJFLD(34))
"RTN","PSOREJU2",89,0)
 . S REJDATA(IDX,"CARDHOLDER ID")=$G(REJFLD(22))
"RTN","PSOREJU2",90,0)
 . S REJDATA(IDX,"PLAN CONTACT")=$G(REJFLD(7))
"RTN","PSOREJU2",91,0)
 . S REJDATA(IDX,"PLAN PREVIOUS FILL DATE")=$G(REJFLD(8))
"RTN","PSOREJU2",92,0)
 . S REJDATA(IDX,"STATUS")=$G(REJFLD(9))
"RTN","PSOREJU2",93,0)
 . S REJDATA(IDX,"OTHER REJECTS")=$G(REJFLD(17))
"RTN","PSOREJU2",94,0)
 . S REJDATA(IDX,"DUR TEXT")=$G(REJFLD(18))
"RTN","PSOREJU2",95,0)
 . S REJDATA(IDX,"DUR ADD MSG TEXT")=$G(REJFLD(28))
"RTN","PSOREJU2",96,0)
 . S REJDATA(IDX,"REASON SVC CODE")=$G(REJFLD(14))
"RTN","PSOREJU2",97,0)
 . S REJDATA(IDX,"RESPONSE IEN")=$G(REJFLD(16))
"RTN","PSOREJU2",98,0)
 . S REJDATA(IDX,"RRR FLAG")=$G(REJFLD(30))  ;PSO*421
"RTN","PSOREJU2",99,0)
 . S REJDATA(IDX,"RRR THRESHOLD AMT")=$G(REJFLD(31))  ;PSO*421
"RTN","PSOREJU2",100,0)
 . S REJDATA(IDX,"RRR GROSS AMT DUE")=$G(REJFLD(32))  ;PSO*421
"RTN","PSOREJU2",101,0)
 . I '$G(OKCL) Q
"RTN","PSOREJU2",102,0)
 . S REJDATA(IDX,"CLOSED DATE/TIME")=$G(REJFLD(10))
"RTN","PSOREJU2",103,0)
 . S REJDATA(IDX,"CLOSED BY")=$G(REJFLD(11))
"RTN","PSOREJU2",104,0)
 . S REJDATA(IDX,"CLOSE REASON")=$G(REJFLD(12))
"RTN","PSOREJU2",105,0)
 . S REJDATA(IDX,"CLOSE COMMENTS")=$G(REJFLD(13))
"RTN","PSOREJU2",106,0)
 . S REJDATA(IDX,"COD1")=$G(REJFLD(14))
"RTN","PSOREJU2",107,0)
 . S REJDATA(IDX,"COD2")=$G(REJFLD(15))
"RTN","PSOREJU2",108,0)
 . S REJDATA(IDX,"COD3")=$G(REJFLD(19))
"RTN","PSOREJU2",109,0)
 . S REJDATA(IDX,"CLA CODE")=$G(REJFLD(24))
"RTN","PSOREJU2",110,0)
 . S REJDATA(IDX,"PRIOR AUTH TYPE")=$G(REJFLD(25))
"RTN","PSOREJU2",111,0)
 . S REJDATA(IDX,"PRIOR AUTH NUMBER")=$G(REJFLD(26))
"RTN","PSOREJU2",112,0)
 . S COM=0 F  S COM=$O(^PSRX(RX,"REJ",IDX,"COM",COM)) Q:'COM  D
"RTN","PSOREJU2",113,0)
 . . S Z=^PSRX(RX,"REJ",IDX,"COM",COM,0)
"RTN","PSOREJU2",114,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"DATE/TIME")=$P(Z,"^")
"RTN","PSOREJU2",115,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"USER")=$P(Z,"^",2)
"RTN","PSOREJU2",116,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"COMMENTS")=$P(Z,"^",3)
"RTN","PSOREJU2",117,0)
 Q
"RTN","PSOREJU2",118,0)
 ;
"RTN","PSOREJU2",119,0)
HELP(OPTS) ; Display the Help Text for the DUR handling options (OVERRIDE/IGNORE/STOP/QUIT)
"RTN","PSOREJU2",120,0)
 ;
"RTN","PSOREJU2",121,0)
 I OPTS["O" D
"RTN","PSOREJU2",122,0)
 . W !?1,"(O)verride - This option will provide the prompts for the code sets needed to"
"RTN","PSOREJU2",123,0)
 . W !?1,"             override this reject and get a payable 3rd party claim. Before"
"RTN","PSOREJU2",124,0)
 . W !?1,"             you select this option, you may need to call the 3rd party payer"
"RTN","PSOREJU2",125,0)
 . W !?1,"             to determine which code sets are needed to override a particular"
"RTN","PSOREJU2",126,0)
 . W !?1,"             reject. Once the proper override is accepted the label will print"
"RTN","PSOREJU2",127,0)
 . W !?1,"             and the prescription can be filled."
"RTN","PSOREJU2",128,0)
 ;
"RTN","PSOREJU2",129,0)
 I OPTS["I" D
"RTN","PSOREJU2",130,0)
 . W !?1,"(I)gnore   - Choosing Ignore will by-pass 3rd party processing and will allow"
"RTN","PSOREJU2",131,0)
 . W !?1,"             you to print a label and fill the prescription. This essentially"
"RTN","PSOREJU2",132,0)
 . W !?1,"             ignores the clinical safety issues suggested by the 3rd party"
"RTN","PSOREJU2",133,0)
 . W !?1,"             payer and will NOT result in a payable claim."
"RTN","PSOREJU2",134,0)
 ;           
"RTN","PSOREJU2",135,0)
 I OPTS["Q" D
"RTN","PSOREJU2",136,0)
 . W !?1,"(Q)uit     - Choosing Quit will postpone the processing of this prescription"
"RTN","PSOREJU2",137,0)
 . W !?1,"             until this 3rd party reject is resolved. A label will not be"
"RTN","PSOREJU2",138,0)
 . W !?1,"             printed for this prescription and it can not be filled/dispensed"
"RTN","PSOREJU2",139,0)
 . W !?1,"             until this reject is resolved. Rejects can be resolved through"
"RTN","PSOREJU2",140,0)
 . W !?1,"             the Worklist option under the ePharmacy menu."
"RTN","PSOREJU2",141,0)
 Q
"RTN","PSOREJU2",142,0)
 ;
"RTN","PSOREJU2",143,0)
DVINFO(RX,RFL,LM) ; Returns header displayable Division Information
"RTN","PSOREJU2",144,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU2",145,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU2",146,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU2",147,0)
 N TXT,DVINFO,NCPNPI,DVIEN,PSOTAXID
"RTN","PSOREJU2",148,0)
 S DVIEN=+$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJU2",149,0)
 S DVINFO="Division : "_$E($$GET1^DIQ(59,DVIEN,.01),1,15)
"RTN","PSOREJU2",150,0)
 ;Display both NPI and NCPDP numbers - PSO*7.0*421
"RTN","PSOREJU2",151,0)
 S NCPNPI=$$DIVNCPDP^BPSBUTL(DVIEN)
"RTN","PSOREJU2",152,0)
 S $E(DVINFO,28)="NPI: "_$P(NCPNPI,U,2)
"RTN","PSOREJU2",153,0)
 S $E(DVINFO,44)="NCPDP: "_$P(NCPNPI,U)
"RTN","PSOREJU2",154,0)
 S PSOTAXID=$P($$TAXID^IBCEF75,U,2)      ; IA 6768
"RTN","PSOREJU2",155,0)
 S $E(DVINFO,62)="TAX ID: "_$E(PSOTAXID,1,2)_"-"_$E(PSOTAXID,3,$L(PSOTAXID))
"RTN","PSOREJU2",156,0)
 Q DVINFO
"RTN","PSOREJU2",157,0)
 ;
"RTN","PSOREJU2",158,0)
PTINFO(RX,LM) ; Returns header displayable Patient Information
"RTN","PSOREJU2",159,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU2",160,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU2",161,0)
 N DFN,VADM,PTINFO,SSN4
"RTN","PSOREJU2",162,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I") D DEM^VADPT S SSN4=$P($G(VADM(2)),"^",2)
"RTN","PSOREJU2",163,0)
 S PTINFO="Patient  : "_$E($G(VADM(1)),1,$S($G(LM):24,1:20))_"("_$E(SSN4,$L(SSN4)-3,$L(SSN4))_")"
"RTN","PSOREJU2",164,0)
 S PTINFO=PTINFO_"  Sex: "_$P($G(VADM(5)),"^")
"RTN","PSOREJU2",165,0)
 S $E(PTINFO,$S($G(LM):61,1:54))="DOB: "_$P($G(VADM(3)),"^",2)_"("_$P($G(VADM(4)),"^")_")"
"RTN","PSOREJU2",166,0)
 Q PTINFO
"RTN","PSOREJU2",167,0)
 ;
"RTN","PSOREJU2",168,0)
RETRXF(RX,RFL,ONOFF) ; - Set/Reset the Re-transmission flag
"RTN","PSOREJU2",169,0)
 ;Input: (r) RX    - Rx IEN (#52)
"RTN","PSOREJU2",170,0)
 ;       (r) RFL   - Refill IEN (#52.1)
"RTN","PSOREJU2",171,0)
 ;       (o) ONOFF - Turn flag ON or OFF (1 - ON / 0 - OFF) (Default: OFF) 
"RTN","PSOREJU2",172,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) QUIT
"RTN","PSOREJU2",173,0)
 N DA,DIE,DR
"RTN","PSOREJU2",174,0)
 S DR="82///"_$S($G(ONOFF):"YES",1:"@")
"RTN","PSOREJU2",175,0)
 I 'RFL S DA=RX,DIE="^PSRX("
"RTN","PSOREJU2",176,0)
 I RFL S DA(1)=RX,DA=RFL,DIE="^PSRX("_RX_",1,"
"RTN","PSOREJU2",177,0)
 D ^DIE
"RTN","PSOREJU2",178,0)
 Q
"RTN","PSOREJU2",179,0)
 ;
"RTN","PSOREJU2",180,0)
REASON(TXT) ; Extracts the Reason for service code from the REASON text field
"RTN","PSOREJU2",181,0)
 ; Input: (r) TXT  - Reason text (e.g., NN Reason for Service Code Text)
"RTN","PSOREJU2",182,0)
 ;Output:   REASON - NN (if on valid and on file (#9002313.23), null otherwise)
"RTN","PSOREJU2",183,0)
 N REASON,DIC,X,Y
"RTN","PSOREJU2",184,0)
 S REASON=$P(TXT," ") I $L(REASON)'=2 Q ""
"RTN","PSOREJU2",185,0)
 S DIC=9002313.23,X=REASON D ^DIC I Y<0 Q ""
"RTN","PSOREJU2",186,0)
 Q REASON
"RTN","PSOREJU2",187,0)
 ;
"RTN","PSOREJU2",188,0)
SETOPN(RX,REJ) ; - Set the Reject RE-OPENED flag to YES
"RTN","PSOREJU2",189,0)
 ;Input: (r) RX    - Rx IEN (#52)
"RTN","PSOREJU2",190,0)
 ;       (r) REJ   - Reject IEN (#52.25)
"RTN","PSOREJU2",191,0)
 ;       
"RTN","PSOREJU2",192,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJU2",193,0)
 N DIE,DA,DR
"RTN","PSOREJU2",194,0)
 S DIE="^PSRX("_RX_",""REJ"",",DA(1)=RX,DA=REJ,DR="23///YES" D ^DIE
"RTN","PSOREJU2",195,0)
 Q
"RTN","PSOREJU2",196,0)
 ;
"RTN","PSOREJU2",197,0)
PRT(FIELD,P,L) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJU2",198,0)
 ;Input: FIELD - Subscript name from the DATA(REJ,FIELD) array
"RTN","PSOREJU2",199,0)
 ;         P   - Position where the content should be printed
"RTN","PSOREJU2",200,0)
 ;         L   - Lenght of the text on each line
"RTN","PSOREJU2",201,0)
 N TXT,I
"RTN","PSOREJU2",202,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L W ?P,TXT Q
"RTN","PSOREJU2",203,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJU2",204,0)
 . I I=1 W ?P,$E(TXT,1,L),! S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJU2",205,0)
 . W ?P,$E(TXT,1,L) S TXT=$E(TXT,L+1,999) W:TXT'="" !
"RTN","PSOREJU2",206,0)
 Q
"RTN","PSOREJU2",207,0)
 ;
"RTN","PSOREJU2",208,0)
PA() ; - Ask for Prior Authorization Type and Number
"RTN","PSOREJU2",209,0)
 ; Called by PA^PSOREJP1 (PA acton) and SMA^PSOREJP1 (SMA action)
"RTN","PSOREJU2",210,0)
 ;
"RTN","PSOREJU2",211,0)
 ;Output:(PAT^PAN) PAT - Prior Authorization Type
"RTN","PSOREJU2",212,0)
 ;                 (See DD File #9002313.26 for possible values)
"RTN","PSOREJU2",213,0)
 ;                 PAN - Prior Authorization Number (11 digits)
"RTN","PSOREJU2",214,0)
 ;        
"RTN","PSOREJU2",215,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,PAN,PAT,X,Y
"RTN","PSOREJU2",216,0)
 S DIC("B")=0
"RTN","PSOREJU2",217,0)
 S DIC(0)="QEAM",DIC=9002313.26,DIC("A")="Prior Authorization Type: "
"RTN","PSOREJU2",218,0)
 D ^DIC
"RTN","PSOREJU2",219,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y=-1) Q "^"  ;Check for "^" or timeout
"RTN","PSOREJU2",220,0)
 S PAT=$P(Y,U,2)
"RTN","PSOREJU2",221,0)
 ;
"RTN","PSOREJU2",222,0)
 K DIR,DIC,X,Y
"RTN","PSOREJU2",223,0)
 S DIR(0)="52.25,26",DIR("A")="Prior Authorization Number"
"RTN","PSOREJU2",224,0)
 S DIR("?")="^D PANHLP^PSOREJU2",DIR("??")=""
"RTN","PSOREJU2",225,0)
 D ^DIR I (Y["^")!$D(DTOUT) Q "^"
"RTN","PSOREJU2",226,0)
 S PAN=Y
"RTN","PSOREJU2",227,0)
 Q (PAT_"^"_PAN)
"RTN","PSOREJU2",228,0)
 ;
"RTN","PSOREJU2",229,0)
PANHLP ; Prior Authorization Number Help
"RTN","PSOREJU2",230,0)
 W "OR you may leave it blank if the claim does not require a number."
"RTN","PSOREJU2",231,0)
 Q
"RTN","PSOREJU3")
0^2^B98042345
"RTN","PSOREJU3",1,0)
PSOREJU3 ;BIRM/LJE - BPS (ECME) - Clinical Rejects Utilities (3) ;04/25/08
"RTN","PSOREJU3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**287,290,358,359,385,421,427,448,478**;DEC 1997;Build 27
"RTN","PSOREJU3",3,0)
 ;References to 9002313.99 supported by IA 4305
"RTN","PSOREJU3",4,0)
 ;Reference to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOREJU3",5,0)
 ;Reference to LOG^BPSOSL supported by ICR# 6764
"RTN","PSOREJU3",6,0)
 ;Reference to IEN59^BPSOSRX supported by ICR# 4412
"RTN","PSOREJU3",7,0)
 ;
"RTN","PSOREJU3",8,0)
 Q
"RTN","PSOREJU3",9,0)
 ;
"RTN","PSOREJU3",10,0)
TRICCHK(RX,RFL,RESP,FROM,RVTX) ;check to see if Rx is non-billable or in an "In Progress" state on ECME
"RTN","PSOREJU3",11,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU3",12,0)
 ;         (r) RFL - REFILL
"RTN","PSOREJU3",13,0)
 ;         (o) RESP - Response from $$EN^BPSNCPDP api
"RTN","PSOREJU3",14,0)
 ;   TRICCHK assumes that the calling routine has validated that the fill is TRICARE or CHAMPVA.
"RTN","PSOREJU3",15,0)
 ;
"RTN","PSOREJU3",16,0)
 ;  - \Need to be mindful of foreground and background processing.
"RTN","PSOREJU3",17,0)
 ;
"RTN","PSOREJU3",18,0)
 N ESTAT,ETOUT,NFROM,PSOBEI
"RTN","PSOREJU3",19,0)
 I '$D(FROM) S FROM=""
"RTN","PSOREJU3",20,0)
 S ESTAT=$P(RESP,"^",4)
"RTN","PSOREJU3",21,0)
 S NFROM=0
"RTN","PSOREJU3",22,0)
 I FROM="PL"!(FROM="PC") S NFROM=1
"RTN","PSOREJU3",23,0)
 Q:ESTAT["PAYABLE"!(ESTAT["REJECTED")
"RTN","PSOREJU3",24,0)
 S PSOBEI=$$ELIGDISP^PSOREJP1(RX,RFL)
"RTN","PSOREJU3",25,0)
 ;
"RTN","PSOREJU3",26,0)
 D LOG^BPSOSL($$IEN59^BPSOSRX(RX,RFL),$T(+0)_"-TRICCHK, ESTAT="_ESTAT)  ; ICR#s 4412,6764
"RTN","PSOREJU3",27,0)
 I ESTAT["IN PROGRESS",FROM="PC" D LOG^BPSOSL($$IEN59^BPSOSRX(RX,RFL),$T(+0)_"-Would have noted in Activity Log that Rx was left in CMOP suspense") Q  ; ICR#s 4412,6764
"RTN","PSOREJU3",28,0)
 ;
"RTN","PSOREJU3",29,0)
 I ESTAT["IN PROGRESS",FROM="RRL"!($G(RVTX)="RX RELEASE-NDC CHANGE") D  Q
"RTN","PSOREJU3",30,0)
 . I 'NFROM D
"RTN","PSOREJU3",31,0)
 . . W !!,PSOBEI_" Prescription "_$$GET1^DIQ(52,RX,".01")_" cannot be released until ECME 'IN PROGRESS'"
"RTN","PSOREJU3",32,0)
 . . W !,"status is resolved payable.",!!
"RTN","PSOREJU3",33,0)
 ;
"RTN","PSOREJU3",34,0)
 I $D(RESP) D  Q
"RTN","PSOREJU3",35,0)
 . I +RESP=6 W:'NFROM&('$G(CMOP)) !!,"Inactive ECME "_PSOBEI,!! D  Q
"RTN","PSOREJU3",36,0)
 . . S ACT="Inactive ECME "_PSOBEI D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOREJU3",37,0)
 . I +RESP=2!(+RESP=3) N PSONBILL S PSONBILL=1 D TRIC2 Q
"RTN","PSOREJU3",38,0)
 . I +RESP=4!(ESTAT["IN PROGRESS") N PSONPROG S PSONPROG=1 D TRIC2 Q
"RTN","PSOREJU3",39,0)
 Q
"RTN","PSOREJU3",40,0)
 ;
"RTN","PSOREJU3",41,0)
TRIC2 ;
"RTN","PSOREJU3",42,0)
 N ACTION,REJCOD,REJ,DIR,DIRUT,REA,DA,PSCAN,PSOTRIC,ZZZ
"RTN","PSOREJU3",43,0)
 S PSOTRIC=1,REJ=9999999999
"RTN","PSOREJU3",44,0)
 I $G(CMOP)&($G(PSONPROG)) D TACT Q 
"RTN","PSOREJU3",45,0)
 Q:$G(CMOP)
"RTN","PSOREJU3",46,0)
 I 'NFROM D DISPLAY(RX,REJ)
"RTN","PSOREJU3",47,0)
 I 'NFROM&($G(PSONPROG)) D  D SUSP Q
"RTN","PSOREJU3",48,0)
 . W !!,"This prescription will be suspended.  After the third party claim is resolved,"
"RTN","PSOREJU3",49,0)
 . W !,"it may be printed or pulled early from suspense.",!
"RTN","PSOREJU3",50,0)
 . R !!,"Press <RETURN> to continue...",ZZZ:60,!
"RTN","PSOREJU3",51,0)
 I NFROM&($G(PSONPROG)) D TACT Q
"RTN","PSOREJU3",52,0)
 Q:NFROM
"RTN","PSOREJU3",53,0)
TRIC3 ;
"RTN","PSOREJU3",54,0)
 D MSG
"RTN","PSOREJU3",55,0)
 I FROM="PL"!(FROM="PC") D SUSP Q
"RTN","PSOREJU3",56,0)
 ;cnf, PSO*7*358, add code for options
"RTN","PSOREJU3",57,0)
 N ACTION,DIR,DIRUT,OPTS,DEF,COM
"RTN","PSOREJU3",58,0)
TRIC4 S DIR(0)="SO^",DIR("A")="",OPTS="DQ",DEF="D"
"RTN","PSOREJU3",59,0)
 N PSORESP
"RTN","PSOREJU3",60,0)
 S PSORESP=$P($G(RESP),U,2)
"RTN","PSOREJU3",61,0)
 I PSORESP["NO ACTIVE/VALID ROI" S DEF="Q"  ;IB routine IBNCPDP1 contains this text.
"RTN","PSOREJU3",62,0)
 ;reference to ^XUSEC( supported by IA 10076
"RTN","PSOREJU3",63,0)
 I $D(^XUSEC("PSO TRICARE/CHAMPVA",DUZ)) S OPTS=OPTS_"I" ;PSO*7.0*358, if user has security key, include IGNORE in TRICARE/CHAMPVA options
"RTN","PSOREJU3",64,0)
 S:(OPTS["D") DIR(0)=DIR(0)_"D:(D)iscontinue - DO NOT FILL PRESCRIPTION;",DIR("A")=DIR("A")_"(D)iscontinue,"
"RTN","PSOREJU3",65,0)
 S:(OPTS["Q") DIR(0)=DIR(0)_"Q:(Q)UIT - SEND TO WORKLIST (REQUIRES INTERVENTION);",DIR("A")=DIR("A")_"(Q)uit,"
"RTN","PSOREJU3",66,0)
 S:(OPTS["I") DIR(0)=DIR(0)_"I:(I)GNORE - FILL Rx WITHOUT CLAIM SUBMISSION;",DIR("A")=DIR("A")_"(I)gnore,"
"RTN","PSOREJU3",67,0)
 S $E(DIR(0),$L(DIR(0)))="",$E(DIR("A"),$L(DIR("A")))="",DIR("??")="^D HELP^PSOREJU2("""_OPTS_""")"
"RTN","PSOREJU3",68,0)
 S:$G(DEF)'="" DIR("B")=DEF D ^DIR I $D(DIRUT) S Y="Q" W !
"RTN","PSOREJU3",69,0)
 ;
"RTN","PSOREJU3",70,0)
 S ACTION=Y
"RTN","PSOREJU3",71,0)
 I ACTION="D" S ACTION=$$DC^PSOREJU1(RX,ACTION)    ;cnf, PSO*7*358
"RTN","PSOREJU3",72,0)
 I ACTION="Q" D WRKLST^PSOREJU4(RX,RFL,,DUZ,DT,1,"",RESP)    ;cnf, PSO*7*358
"RTN","PSOREJU3",73,0)
 I ACTION="I" G TRIC4:'$$CONT^PSOREJU1() S COM=$$TCOM^PSOREJP3(RX,RFL) G TRIC4:COM="^" G TRIC4:'$$SIG^PSOREJU1() D
"RTN","PSOREJU3",74,0)
 . D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,6,COM)   ;TRICARE/CHAMPVA non-billable should have only 1 reject - eT/eC
"RTN","PSOREJU3",75,0)
 . D AUDIT^PSOTRI(RX,RFL,,COM,$S($$PSOET^PSOREJP3(RX,RFL):"N",1:"R"),$P(RESP,"^",3))
"RTN","PSOREJU3",76,0)
 Q
"RTN","PSOREJU3",77,0)
 ;
"RTN","PSOREJU3",78,0)
MSG ;
"RTN","PSOREJU3",79,0)
 W !!,"This is a non-billable "_$$ELIGDISP^PSOREJP1(RX,RFL)_" prescription."    ;cnf, PSO*7*358
"RTN","PSOREJU3",80,0)
 Q
"RTN","PSOREJU3",81,0)
SUSP ;Suspense Rx due to IN PROGRESS status in ECME
"RTN","PSOREJU3",82,0)
 N DA,ACT,RX0,SD,RXS,PSOWFLG,DIK,RXN,XFLAG,RXP,DD,DO,X,Y,DIC,VALMSG,COMM,LFD,DFLG,RXCMOP
"RTN","PSOREJU3",83,0)
 N PSOQFLAG,PSORXZD,PSOQFLAG,PSOKSPPL,PSOZXPPL,PSOZXPI,RXLTOP
"RTN","PSOREJU3",84,0)
 S DA=RX D SUS^PSORXL1
"RTN","PSOREJU3",85,0)
TACT ;
"RTN","PSOREJU3",86,0)
 S ACT=$$ELIGDISP^PSOREJP1(RX,RFL)_"-Rx placed on Suspense due to"_$S($G(PSONPROG):" ECME IN PROGRESS status",$G(PSONBILL):"the Rx being Non-billable",1:"")
"RTN","PSOREJU3",87,0)
 I '$G(DUZ) N DUZ S DUZ=.5
"RTN","PSOREJU3",88,0)
 D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOREJU3",89,0)
 Q
"RTN","PSOREJU3",90,0)
 ;
"RTN","PSOREJU3",91,0)
DISPLAY(RX,REJ,KEY,RRR) ; - Displays REJECT information
"RTN","PSOREJU3",92,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU3",93,0)
 ;         (r) REJ - REJECT ID (IEN)
"RTN","PSOREJU3",94,0)
 ;         (o) KEY - Display "Press any KEY to continue..." (1-YES/0-NO) (Default: 0)
"RTN","PSOREJU3",95,0)
 ;         (o) RRR - Reject Resolution Required information  Flag(0/1)^Threshold Amt^Gross Amt Due  (Default: 0)
"RTN","PSOREJU3",96,0)
 ;                   If Flag = 0, there is no Reject Resolution Required reject code.  Parameter added with PSO*421
"RTN","PSOREJU3",97,0)
 ;         
"RTN","PSOREJU3",98,0)
 Q:$G(NFROM)
"RTN","PSOREJU3",99,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJU3",100,0)
 I '$D(^PSRX(RX,"REJ",REJ))&('$G(PSONBILL))&('$G(PSONPROG)) Q
"RTN","PSOREJU3",101,0)
 ;
"RTN","PSOREJU3",102,0)
 N DATA,RFL,LINE,%
"RTN","PSOREJU3",103,0)
 S RFL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJU3",104,0)
 I '$G(PSONBILL)&('$G(PSONPROG)) D GET^PSOREJU2(RX,RFL,.DATA,REJ) I '$D(DATA(REJ)) Q
"RTN","PSOREJU3",105,0)
 ;
"RTN","PSOREJU3",106,0)
 D HDR
"RTN","PSOREJU3",107,0)
 S $P(LINE,"-",74)="" W !?3,LINE
"RTN","PSOREJU3",108,0)
 W !?3,$$DVINFO(RX,RFL)
"RTN","PSOREJU3",109,0)
 W !?3,$$PTINFO^PSOREJU2(RX)
"RTN","PSOREJU3",110,0)
 W !?3,"Rx/Drug  : ",$$GET1^DIQ(52,RX,.01),"/",RFL," - ",$E($$GET1^DIQ(52,RX,6),1,20),?54
"RTN","PSOREJU3",111,0)
 W:'$G(PSONBILL)&('$G(PSONPROG)) "ECME#: ",$P($$CLAIM^BPSBUTL(RX,RFL),U,6)
"RTN","PSOREJU3",112,0)
 D TYPE G DISP2:$G(PSONBILL)!($G(PSONPROG))
"RTN","PSOREJU3",113,0)
 I $G(DATA(REJ,"PAYER MESSAGE"))'="" W !?3,"Payer Message: " D PRT^PSOREJU2("PAYER MESSAGE",18,58)
"RTN","PSOREJU3",114,0)
 I $G(DATA(REJ,"DUR TEXT"))'="" W !?3,"DUR Text     : ",DATA(REJ,"DUR TEXT")
"RTN","PSOREJU3",115,0)
 W !?3,"Insurance    : ",DATA(REJ,"INSURANCE NAME"),?50,"Contact: ",DATA(REJ,"PLAN CONTACT")
"RTN","PSOREJU3",116,0)
 W !?3,"Group Name   : ",DATA(REJ,"GROUP NAME"),?45,"Group Number: ",DATA(REJ,"GROUP NUMBER")
"RTN","PSOREJU3",117,0)
 I $G(DATA(REJ,"CARDHOLDER ID"))'="" W !?3,"Cardholder ID: ",DATA(REJ,"CARDHOLDER ID")
"RTN","PSOREJU3",118,0)
 I DATA(REJ,"PLAN PREVIOUS FILL DATE")'="" D
"RTN","PSOREJU3",119,0)
 . W !?3,"Last Fill Dt.: ",DATA(REJ,"PLAN PREVIOUS FILL DATE")
"RTN","PSOREJU3",120,0)
 . W:DATA(REJ,"PLAN PREVIOUS FILL DATE")'="" "   (from payer)"
"RTN","PSOREJU3",121,0)
 I $G(RRR) D   ;added with PSO*421
"RTN","PSOREJU3",122,0)
 . W !!?3,"Reject Resolution Required"
"RTN","PSOREJU3",123,0)
 . W !?3,"Gross Amount Due ($"_$J($P(RRR,U,3)*100\1/100,0,2)_") is greater than or equal to"
"RTN","PSOREJU3",124,0)
 . W !?3,"Threshold Dollar Amount ($"_$P(RRR,U,2)_")"
"RTN","PSOREJU3",125,0)
 . W !?3,"Please select Quit to resolve this reject on the Reject Worklist."
"RTN","PSOREJU3",126,0)
DISP2 ;
"RTN","PSOREJU3",127,0)
 W !?3,LINE,$C(7) I $G(KEY) W !?3,"Press <RETURN> to continue..." R %:DTIME W !
"RTN","PSOREJU3",128,0)
 Q
"RTN","PSOREJU3",129,0)
 ;
"RTN","PSOREJU3",130,0)
TYPE ;
"RTN","PSOREJU3",131,0)
 I $G(PSONBILL)!($G(PSONPROG)) D  Q
"RTN","PSOREJU3",132,0)
 . D NOW^%DTC S Y=% D DD^%DT
"RTN","PSOREJU3",133,0)
 . W !?3,"Date/Time: "_$$FMTE^XLFDT(Y)
"RTN","PSOREJU3",134,0)
 . W !?3,"Reason   : ",$S($G(PSONBILL):"Drug not billable.",$G(PSONPROG):"ECME Status is in an 'IN PROGRESS' state and cannot be filled",1:"")
"RTN","PSOREJU3",135,0)
 ;
"RTN","PSOREJU3",136,0)
 I $G(DATA(REJ,"REASON"))'="" W !?3,"Reason   : " D PRT^PSOREJU2("REASON",14,62)
"RTN","PSOREJU3",137,0)
 N RTXT,OCODE,OTXT,I
"RTN","PSOREJU3",138,0)
 S (OTXT,RTXT,OCODE)="",RTXT=$S(DATA(REJ,"CODE")=79:"REFILL TOO SOON",DATA(REJ,"CODE")=88:"DUR REJECT",1:$$EXP^PSOREJP1(DATA(REJ,"CODE")))_" ("_DATA(REJ,"CODE")_")"
"RTN","PSOREJU3",139,0)
 F I=1:1 S OCODE=$P(DATA(REJ,"OTHER REJECTS"),",",I) Q:OCODE=""   D
"RTN","PSOREJU3",140,0)
 . S OTXT=OTXT_", "_$S(OCODE=79:"REFILL TOO SOON",OCODE=88:"DUR REJECT",1:$$EXP^PSOREJP1(OCODE))_" ("_OCODE_")"
"RTN","PSOREJU3",141,0)
 S RTXT=RTXT_OTXT_".  Received on "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME")))_"."
"RTN","PSOREJU3",142,0)
 S OTXT=""
"RTN","PSOREJU3",143,0)
 W !?3,"Reject(s): " D WRAP(RTXT,14)
"RTN","PSOREJU3",144,0)
 Q
"RTN","PSOREJU3",145,0)
 ;
"RTN","PSOREJU3",146,0)
WRAP(PSOTXT,INDENT) ;
"RTN","PSOREJU3",147,0)
 N I,K,PSOWRAP,PSOMARG
"RTN","PSOREJU3",148,0)
 S PSOWRAP=1,PSOMARG=$S('$G(PSORM):80,$D(IOM):IOM,1:80)-(INDENT+5)
"RTN","PSOREJU3",149,0)
W1 S:$L(PSOTXT)<PSOMARG PSOWRAP(PSOWRAP)=PSOTXT I $L(PSOTXT)'<PSOMARG F I=PSOMARG:-1:0 I $E(PSOTXT,I)?1P S PSOWRAP(PSOWRAP)=$E(PSOTXT,1,I),PSOTXT=$E(PSOTXT,I+1,999),PSOWRAP=PSOWRAP+1 G W1
"RTN","PSOREJU3",150,0)
 F K=1:1:PSOWRAP W ?INDENT,PSOWRAP(K),!
"RTN","PSOREJU3",151,0)
 Q
"RTN","PSOREJU3",152,0)
 ;
"RTN","PSOREJU3",153,0)
HDR ; Display the reject notification screen header
"RTN","PSOREJU3",154,0)
 N ELDSP,TAB
"RTN","PSOREJU3",155,0)
 S ELDSP=$$ELIGTCV^PSOREJP1(RX,RFL,1)  ; returns TRICARE, CHAMPVA or VETERAN
"RTN","PSOREJU3",156,0)
 I $L(ELDSP) S ELDSP=ELDSP_" - "       ; Add the " - " for CVA/TRI only
"RTN","PSOREJU3",157,0)
 ;
"RTN","PSOREJU3",158,0)
 I $G(PSONBILL) S TAB=$S($L(ELDSP):24,1:29) W !!?TAB,"*** "_ELDSP_"NON-BILLABLE ***" Q
"RTN","PSOREJU3",159,0)
 I $G(PSONPROG) S TAB=$S($L(ELDSP):18,1:23) W !!?TAB,"*** "_ELDSP_"'IN PROGRESS' ECME status ***" Q
"RTN","PSOREJU3",160,0)
 S TAB=$S($L(ELDSP):11,1:16) W !!?TAB,"*** "_ELDSP_"REJECT RECEIVED FROM THIRD PARTY PAYER ***"
"RTN","PSOREJU3",161,0)
 Q
"RTN","PSOREJU3",162,0)
 ;
"RTN","PSOREJU3",163,0)
SUBMIT(RXIEN,RFCNT,PSOTRIC) ;called from PSOCAN2 (routine size exceeded)
"RTN","PSOREJU3",164,0)
 N SUBMITE S SUBMITE=$$SUBMIT^PSOBPSUT(RXIEN)
"RTN","PSOREJU3",165,0)
 I SUBMITE D
"RTN","PSOREJU3",166,0)
 . N ACTION
"RTN","PSOREJU3",167,0)
 . D ECMESND^PSOBPSU1(RXIEN,,,$S($O(^PSRX(RXIEN,1,0)):"RF",1:"OF"))
"RTN","PSOREJU3",168,0)
 . ; Quit if there is an unresolved TRICARE or CHAMPVA non-billable reject code, PSO*7*358
"RTN","PSOREJU3",169,0)
 . I $$PSOET^PSOREJP3(RXIEN) S ACTION="Q" Q 
"RTN","PSOREJU3",170,0)
 . I $$FIND^PSOREJUT(RXIEN) S ACTION=$$HDLG^PSOREJU1(RXIEN,,"79,88","OF","IOQ","Q")
"RTN","PSOREJU3",171,0)
 I 'SUBMITE&(PSOTRIC) D
"RTN","PSOREJU3",172,0)
 . I $$STATUS^PSOBPSUT(RXIEN,RFCNT)'["PAYABLE" D TRICCHK(RXIEN,RFCNT)
"RTN","PSOREJU3",173,0)
 Q
"RTN","PSOREJU3",174,0)
 ;
"RTN","PSOREJU3",175,0)
TRISTA(RX,RFL,RESP,FROM,RVTX) ;called from suspense
"RTN","PSOREJU3",176,0)
 N ETOUT,ESTAT,TRESP,TSTAT,PSOTRIC
"RTN","PSOREJU3",177,0)
 S:'$D(RESP) RESP=""
"RTN","PSOREJU3",178,0)
 S (ESTAT,PSOTRIC)="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOREJU3",179,0)
 Q:'PSOTRIC 0
"RTN","PSOREJU3",180,0)
 S TRESP=RESP,ESTAT=$P(TRESP,"^",4) S:ESTAT="" ESTAT=$$STATUS^PSOBPSUT(RX,RFL)
"RTN","PSOREJU3",181,0)
 Q:ESTAT["E PAYABLE" 0
"RTN","PSOREJU3",182,0)
 I $$TRIAUD(RX,RFL) Q 0  ;if TRICARE or CHAMPVA Rx is in audit due to override or bypass, allow to print from suspense, cnf
"RTN","PSOREJU3",183,0)
 I +RESP=2,$$BYPASS^PSOBPSU1($P(RESP,"^",3),$P(RESP,"^",2)) Q 0   ;if 'Bypass' RX, allow to print from suspense, cnf 
"RTN","PSOREJU3",184,0)
 Q:ESTAT["E REJECTED" 1  ;rejected TRICARE or CHAMPVA is not allowed to print from suspense
"RTN","PSOREJU3",185,0)
 ;if 'in progress' (4) or not billable (2,3) don't allow to print from suspense (IA 4415 Values)
"RTN","PSOREJU3",186,0)
 I '$D(RESP)!($P(RESP,"^",1)="")!($G(RESP)="") D
"RTN","PSOREJU3",187,0)
 . S TSTAT=$$STATUS^PSOBPSUT(RX,RFL) S TRESP=$S(TSTAT["IN PROGRESS":4,TSTAT["NOT BILLABLE":2,1:0)
"RTN","PSOREJU3",188,0)
 . S $P(TRESP,"^",4)=TSTAT
"RTN","PSOREJU3",189,0)
 ;
"RTN","PSOREJU3",190,0)
 I +TRESP=2!(+TRESP=3) D WRKLST^PSOREJU4(RX,RFL,"",DUZ,DT,1,"",RESP) Q 1  ;send TRICARE or CHAMPVA non billable to worklist (pseudo reject), cnf
"RTN","PSOREJU3",191,0)
 I +TRESP=4!(ESTAT["IN PROGRESS") Q 1
"RTN","PSOREJU3",192,0)
 Q 0
"RTN","PSOREJU3",193,0)
 ;
"RTN","PSOREJU3",194,0)
TRIAUD(RXIEN,RXFILL) ;is RXIEN in the TRICARE/CHAMPVA audit and no open rejects  ;cnf
"RTN","PSOREJU3",195,0)
 ; RXIEN will only be in TRICARE/CHAMPVA audit if a bypass or override has occurred and rejects are closed
"RTN","PSOREJU3",196,0)
 ; returns  0  if RXIEN is not in TRICARE/CHAMPVA audit at all or not in audit for right fill number
"RTN","PSOREJU3",197,0)
 ;             rejects must be closed for 0 to be returned
"RTN","PSOREJU3",198,0)
 ;          1  if RXIEN is in TRICARE/CHAMPVA audit for the right fill number and rejects are closed
"RTN","PSOREJU3",199,0)
 ;
"RTN","PSOREJU3",200,0)
 N X,AUDIEN,REJIEN
"RTN","PSOREJU3",201,0)
 S X=0,AUDIEN=""
"RTN","PSOREJU3",202,0)
 I '$D(^PS(52.87,"C",RXIEN)) Q X   ;RXIEN is not in the TRICARE/CHAMPVA audit
"RTN","PSOREJU3",203,0)
 ;
"RTN","PSOREJU3",204,0)
 I $G(RXFILL)="" S RXFILL=$$LSTRFL^PSOBPSU1(RXIEN)  ;Get latest fill if not passed in
"RTN","PSOREJU3",205,0)
 ;
"RTN","PSOREJU3",206,0)
 ;check audit entries for right fill number
"RTN","PSOREJU3",207,0)
 F  S AUDIEN=$O(^PS(52.87,"C",RXIEN,AUDIEN)) Q:AUDIEN=""  I RXFILL=$$GET1^DIQ(52.87,AUDIEN,2) S X=1 Q
"RTN","PSOREJU3",208,0)
 I 'X Q X
"RTN","PSOREJU3",209,0)
 ;
"RTN","PSOREJU3",210,0)
 ;make sure rejects are closed
"RTN","PSOREJU3",211,0)
 S REJIEN=0
"RTN","PSOREJU3",212,0)
 F  S REJIEN=$O(^PSRX(RXIEN,"REJ",REJIEN)) Q:'+REJIEN  D  I 'X Q   ;I 'X, then the reject is not closed
"RTN","PSOREJU3",213,0)
 . S X=$$CLOSED^PSOREJP1(RXIEN,REJIEN,0)
"RTN","PSOREJU3",214,0)
 ;
"RTN","PSOREJU3",215,0)
 Q X
"RTN","PSOREJU3",216,0)
 ;
"RTN","PSOREJU3",217,0)
ECMECHK(RX,FILL) ;
"RTN","PSOREJU3",218,0)
 ; This function returns a '1' if any of the conditions below are met:
"RTN","PSOREJU3",219,0)
 ;    - RX has an unresolved DUR or Refill Too Soon reject
"RTN","PSOREJU3",220,0)
 ;    - RX has an unresolved Reject Resolution Required (RRR) reject (only for Veteran and original fill)
"RTN","PSOREJU3",221,0)
 ;    - RX is TRICARE/CHAMPVA and has any unresolved reject
"RTN","PSOREJU3",222,0)
 ;    - RX is TRICARE/CHAMPVA and IN PROGRESS
"RTN","PSOREJU3",223,0)
 ; This is used by functions such as PPLADD^PSOSUPOE to determine if
"RTN","PSOREJU3",224,0)
 ;   a label should be printed (we do not want a label for the conditions)
"RTN","PSOREJU3",225,0)
 ;
"RTN","PSOREJU3",226,0)
 ; Incoming Parameters:
"RTN","PSOREJU3",227,0)
 ;   RX - Internal IEN of the Prescription File (required)
"RTN","PSOREJU3",228,0)
 ;   FILL - Fill Number (optional, defaults to last fill if not passed in)
"RTN","PSOREJU3",229,0)
 ; Returns:
"RTN","PSOREJU3",230,0)
 ;   0 - None of the conditions exists
"RTN","PSOREJU3",231,0)
 ;   1 - One of the conditions above is met
"RTN","PSOREJU3",232,0)
 ;
"RTN","PSOREJU3",233,0)
 I '$G(RX) Q 0
"RTN","PSOREJU3",234,0)
 I $G(FILL)="" S FILL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU3",235,0)
 ;
"RTN","PSOREJU3",236,0)
 ; DUR or Refill Too Soon or RRR rejects
"RTN","PSOREJU3",237,0)
 I $$FIND^PSOREJUT(RX,FILL,"","79,88",,1) Q 1
"RTN","PSOREJU3",238,0)
 ;
"RTN","PSOREJU3",239,0)
 ; If not TRICARE/CHAMPVA, quit with 0 as the rest of the checks
"RTN","PSOREJU3",240,0)
 ;   are all TRICARE/CHAMPVA dependent
"RTN","PSOREJU3",241,0)
 I '$$TRIC^PSOREJP1(RX,FILL) Q 0
"RTN","PSOREJU3",242,0)
 ;
"RTN","PSOREJU3",243,0)
 ; No label for TRICARE/CHAMPVA with unresolved rejects
"RTN","PSOREJU3",244,0)
 I $$FIND^PSOREJUT(RX,FILL,,,1) Q 1   ; 5th parameter to $$FIND also finds non-billable TRI/CVA rejects
"RTN","PSOREJU3",245,0)
 ;
"RTN","PSOREJU3",246,0)
 ;No label for TRICARE/CHAMPVA claims that are IN PROGRESS
"RTN","PSOREJU3",247,0)
 I $P($$STATUS^PSOBPSUT(RX,FILL),U)="IN PROGRESS" Q 1
"RTN","PSOREJU3",248,0)
 Q 0
"RTN","PSOREJU3",249,0)
 ;
"RTN","PSOREJU3",250,0)
DVINFO(RX,RFL,LM) ; Returns header displayable Division Information
"RTN","PSOREJU3",251,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU3",252,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU3",253,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU3",254,0)
 N TXT,DVINFO,NCPNPI,DVIEN
"RTN","PSOREJU3",255,0)
 S DVIEN=+$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJU3",256,0)
 S DVINFO="Division : "_$$GET1^DIQ(59,DVIEN,.01)
"RTN","PSOREJU3",257,0)
 ;Display both NPI and NCPDP numbers - PSO*7.0*421
"RTN","PSOREJU3",258,0)
 S NCPNPI=$$DIVNCPDP^BPSBUTL(DVIEN)
"RTN","PSOREJU3",259,0)
 S $E(DVINFO,33)="NPI: "_$P(NCPNPI,U,2)
"RTN","PSOREJU3",260,0)
 S $E(DVINFO,$S($G(LM):59,1:52))="NCPDP: "_$P(NCPNPI,U)
"RTN","PSOREJU3",261,0)
 Q DVINFO
"RTN","PSOREJUT")
0^5^B113532440
"RTN","PSOREJUT",1,0)
PSOREJUT ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities ;06/07/05
"RTN","PSOREJUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,287,289,290,358,359,385,403,421,427,448,478**;DEC 1997;Build 27
"RTN","PSOREJUT",3,0)
 ;Reference to DUR1^BPSNCPD3 supported by IA 4560
"RTN","PSOREJUT",4,0)
 ;Reference to $$ADDCOMM^BPSBUTL supported by IA 4719
"RTN","PSOREJUT",5,0)
 ;
"RTN","PSOREJUT",6,0)
SAVE(RX,RFL,REJ,REOPEN) ; - Saves DUR Information in the file 52
"RTN","PSOREJUT",7,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",8,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",9,0)
 ;         (o) REOPEN - value of 1 means claim being reopened; null or no value passed means reopen claim functionality not being used
"RTN","PSOREJUT",10,0)
 ;         (r) REJ - Array containing information about the REJECT on the following subscripts:
"RTN","PSOREJUT",11,0)
 ;                   "BIN" - BIN Number
"RTN","PSOREJUT",12,0)
 ;                   "PCN" - PCN Number
"RTN","PSOREJUT",13,0)
 ;                   "CODE"   - Reject Code (79 or 88)
"RTN","PSOREJUT",14,0)
 ;                   "DATE/TIME"   - Date/Time Reject Detected
"RTN","PSOREJUT",15,0)
 ;                   "PAYER MESSAGE" - Message returned by Payer (up to 140 chars long)
"RTN","PSOREJUT",16,0)
 ;                   "REASON" - Reject Reason (up to 100 chars long)
"RTN","PSOREJUT",17,0)
 ;                   "DUR TEXT" - Payer's DUR description
"RTN","PSOREJUT",18,0)
 ;                   "DUR ADD MSG TEXT" - Payer's DUR additional message text description
"RTN","PSOREJUT",19,0)
 ;                   "INSURANCE NAME" - Patient's Insurance Company Name
"RTN","PSOREJUT",20,0)
 ;                   "INSURANCE POINTER" - Patient's Insurance Company IEN
"RTN","PSOREJUT",21,0)
 ;                   "GROUP NAME" - Patient's Insurance Group Name
"RTN","PSOREJUT",22,0)
 ;                   "GROUP NUMBER" - Patient's Insurance Group Number
"RTN","PSOREJUT",23,0)
 ;                   "CARDHOLDER ID" - Patient's Insurance Cardholder ID
"RTN","PSOREJUT",24,0)
 ;                   "COB" - Coordination of Benefits
"RTN","PSOREJUT",25,0)
 ;                   "PLAN CONTACT" - Patient's Insurance Plan Contact (1-800)
"RTN","PSOREJUT",26,0)
 ;                   "PREVIOUS FILL" - Plan's Previous Fill Date
"RTN","PSOREJUT",27,0)
 ;                   "OTHER REJECTS" - Other Rejects with same Response
"RTN","PSOREJUT",28,0)
 ;                   "PHARMACIST" - Pharmacist DUZ
"RTN","PSOREJUT",29,0)
 ;                   "RESPONSE IEN" - Pointer to the RESPONSE file in ECME
"RTN","PSOREJUT",30,0)
 ;                   "REASON SVC CODE" - Reason for Service Code (pointer to BPS NCPDP REASON FOR SERVICE CODE)
"RTN","PSOREJUT",31,0)
 ;                   "RE-OPENED" - Re-Open Flag
"RTN","PSOREJUT",32,0)
 ;                   "RRR FLAG" - Reject Resolution Required indicator (expecting 1/0 into SAVE)
"RTN","PSOREJUT",33,0)
 ;                   "RRR THRESHOLD AMT" - Reject Resolution Required Dollar Threshold
"RTN","PSOREJUT",34,0)
 ;                   "RRR GROSS AMT DUE" - Reject Resolution Required Gross Amount Due
"RTN","PSOREJUT",35,0)
 ;Output: REJ("REJECT IEN")
"RTN","PSOREJUT",36,0)
 N %,DIC,DR,DA,X,DINUM,DD,DO,DLAYGO,ERR
"RTN","PSOREJUT",37,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",38,0)
 I '$G(PSODIV) S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJUT",39,0)
 S REJ("BIN")=$E($G(REJ("BIN")),1,6)
"RTN","PSOREJUT",40,0)
 S REJ("PCN")=$G(REJ("PCN"))
"RTN","PSOREJUT",41,0)
 S REJ("CODE")=$G(REJ("CODE"))
"RTN","PSOREJUT",42,0)
 ;
"RTN","PSOREJUT",43,0)
 ; convert REJ("RRR FLAG") into internal format (1/0) if necessary. When coming into SAVE from the Re-open Reject
"RTN","PSOREJUT",44,0)
 ; action, this flag is in the external format (YES/NO).   esg - 3/29/16 - PSO*7*448
"RTN","PSOREJUT",45,0)
 I $G(REJ("RRR FLAG"))="YES" S REJ("RRR FLAG")=1
"RTN","PSOREJUT",46,0)
 I $G(REJ("RRR FLAG"))="NO" S REJ("RRR FLAG")=0
"RTN","PSOREJUT",47,0)
 ;
"RTN","PSOREJUT",48,0)
 ;Ignore this additional Check if reject is Reject Resolution Required reject - PSO*7*421
"RTN","PSOREJUT",49,0)
 I '$G(REJ("RRR FLAG")),REJ("CODE")'=79&(REJ("CODE")'=88)&('$G(PSOTRIC))&('$G(REOPEN)) S ERR=$$EVAL^PSOREJU4(PSODIV,REJ("CODE"),$G(OPECC)) Q:'+ERR
"RTN","PSOREJUT",50,0)
 S REJ("PAYER MESSAGE")=$E($G(REJ("PAYER MESSAGE")),1,140),REJ("REASON")=$E($G(REJ("REASON")),1,100)
"RTN","PSOREJUT",51,0)
 S REJ("DUR TEXT")=$E($G(REJ("DUR TEXT")),1,100),REJ("DUR ADD MSG TEXT")=$E($G(REJ("DUR ADD MSG TEXT")),1,100),REJ("GROUP NAME")=$E($G(REJ("GROUP NAME")),1,30)
"RTN","PSOREJUT",52,0)
 S REJ("INSURANCE NAME")=$E($G(REJ("INSURANCE NAME")),1,30),REJ("PLAN CONTACT")=$E($G(REJ("PLAN CONTACT")),1,30)
"RTN","PSOREJUT",53,0)
 S REJ("GROUP NUMBER")=$E($G(REJ("GROUP NUMBER")),1,30),REJ("OTHER REJECTS")=$E($G(REJ("OTHER REJECTS")),1,15)
"RTN","PSOREJUT",54,0)
 S REJ("CARDHOLDER ID")=$E($G(REJ("CARDHOLDER ID")),1,20),REJ("COB")=$G(REJ("COB"))
"RTN","PSOREJUT",55,0)
 I $G(REJ("DATE/TIME"))="" D NOW^%DTC S REJ("DATE/TIME")=%
"RTN","PSOREJUT",56,0)
 S DIC="^PSRX("_RX_",""REJ"",",DA(1)=RX,DIC(0)=""
"RTN","PSOREJUT",57,0)
 S X=$G(REJ("CODE")),DINUM=$O(^PSRX(RX,"REJ",9999),-1)+1
"RTN","PSOREJUT",58,0)
 S DIC("DR")="1///"_$G(REJ("DATE/TIME"))_";2///"_REJ("PAYER MESSAGE")_";3///"_REJ("REASON")_";4////"_$G(REJ("PHARMACIST"))_";5///"_RFL
"RTN","PSOREJUT",59,0)
 S DIC("DR")=DIC("DR")_";6///"_REJ("GROUP NAME")_";7///"_REJ("PLAN CONTACT")_";8///"_$G(REJ("PREVIOUS FILL"))
"RTN","PSOREJUT",60,0)
 S DIC("DR")=DIC("DR")_";9///0;14///"_$G(REJ("REASON SVC CODE"))_";16///"_$G(REJ("RESPONSE IEN"))
"RTN","PSOREJUT",61,0)
 S DIC("DR")=DIC("DR")_";17///"_$G(REJ("OTHER REJECTS"))_";18///"_REJ("DUR TEXT")_";20///"_REJ("INSURANCE NAME")
"RTN","PSOREJUT",62,0)
 S DIC("DR")=DIC("DR")_";21///"_REJ("GROUP NUMBER")_";22///"_REJ("CARDHOLDER ID")_";23///"_$G(REJ("RE-OPENED"))
"RTN","PSOREJUT",63,0)
 S DIC("DR")=DIC("DR")_";27///"_REJ("COB")
"RTN","PSOREJUT",64,0)
 S DIC("DR")=DIC("DR")_";28///"_REJ("DUR ADD MSG TEXT")
"RTN","PSOREJUT",65,0)
 S DIC("DR")=DIC("DR")_";29///"_REJ("BIN")
"RTN","PSOREJUT",66,0)
 S DIC("DR")=DIC("DR")_";34///"_REJ("PCN")
"RTN","PSOREJUT",67,0)
 ;Update Reject Resolution Required fields - PSO*7*421
"RTN","PSOREJUT",68,0)
 I $G(REJ("RRR FLAG")) D
"RTN","PSOREJUT",69,0)
 .S DIC("DR")=DIC("DR")_";30///"_REJ("RRR FLAG")
"RTN","PSOREJUT",70,0)
 .S DIC("DR")=DIC("DR")_";31///"_REJ("RRR THRESHOLD AMT")
"RTN","PSOREJUT",71,0)
 .S DIC("DR")=DIC("DR")_";32///"_REJ("RRR GROSS AMT DUE")
"RTN","PSOREJUT",72,0)
 S DIC("DR")=DIC("DR")_";33///"_REJ("INSURANCE POINTER")
"RTN","PSOREJUT",73,0)
 F  L +^PSRX(RX):5 Q:$T  H 15
"RTN","PSOREJUT",74,0)
 K DD,DO D FILE^DICN K DD,DO S REJ("REJECT IEN")=+Y
"RTN","PSOREJUT",75,0)
 S REJ("OVERRIDE MSG")=$G(DATA("OVERRIDE MSG"))
"RTN","PSOREJUT",76,0)
 ;Comments use POSTMASTER as user for auto transfers - PSO*7*421
"RTN","PSOREJUT",77,0)
 I REJ("OVERRIDE MSG")'="" D
"RTN","PSOREJUT",78,0)
 .N ORIGIN S ORIGIN=$G(DUZ)
"RTN","PSOREJUT",79,0)
 .S:REJ("OVERRIDE MSG")["Automatically transferred" ORIGIN=.5
"RTN","PSOREJUT",80,0)
 .D SAVECOM^PSOREJP3(RX,REJ("REJECT IEN"),REJ("OVERRIDE MSG"),$G(REJ("DATE/TIME")),ORIGIN)
"RTN","PSOREJUT",81,0)
 .;Insert comment for Transfer and RRR Rejects - PSO*7*421
"RTN","PSOREJUT",82,0)
 .I REJ("OVERRIDE MSG")["Automatically transferred" D
"RTN","PSOREJUT",83,0)
 ..N X,TXT
"RTN","PSOREJUT",84,0)
 ..S TXT="Auto Send to Pharmacy Worklist due to Transfer Reject Code"
"RTN","PSOREJUT",85,0)
 ..I $G(REJ("RRR FLAG")) S TXT="Auto Send to Pharmacy Worklist due to Reject Resolution Required Code"
"RTN","PSOREJUT",86,0)
 ..I $G(PSOTRIC) S TXT="Auto Send to Pharmacy Worklist & OPECC - CVA/TRI"
"RTN","PSOREJUT",87,0)
 ..S X=$$ADDCOMM^BPSBUTL(RX,RFL,TXT,1) ; IA 4719
"RTN","PSOREJUT",88,0)
 L -^PSRX(RX)
"RTN","PSOREJUT",89,0)
 Q
"RTN","PSOREJUT",90,0)
 ; 
"RTN","PSOREJUT",91,0)
CLSALL(RX,RFL,USR,REA,COM,COD1,COD2,COD3,CLA,PA) ; Close/Resolve All Rejects
"RTN","PSOREJUT",92,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJUT",93,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJUT",94,0)
 ;       (o) USR  - User DUZ responsible for closing all rejects
"RTN","PSOREJUT",95,0)
 ;       (r) REA  - Close REASON code
"RTN","PSOREJUT",96,0)
 ;       (o) COM  - Close COMMENTS
"RTN","PSOREJUT",97,0)
 ;       (o) COD1 - First set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",98,0)
 ;       (o) COD2 - Second set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",99,0)
 ;       (o) COD3 - Third set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",100,0)
 ;       (o) CLA  - NCPDP Clarification Code for overriding RTS and DUR REJECTS
"RTN","PSOREJUT",101,0)
 ;       (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOREJUT",102,0)
 N REJ,REJDATA,DIE,DR,DA
"RTN","PSOREJUT",103,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",104,0)
 ; - Closing OPEN/UNRESOLVED rejects
"RTN","PSOREJUT",105,0)
 I $$FIND(RX,RFL,.REJDATA,,1) D
"RTN","PSOREJUT",106,0)
 . S REJ="" F  S REJ=$O(REJDATA(REJ)) Q:'REJ  D
"RTN","PSOREJUT",107,0)
 . . D CLOSE(RX,RFL,REJ,USR,REA,$G(COM),$G(COD1),$G(COD2),$G(COD3),$G(CLA),$G(PA))
"RTN","PSOREJUT",108,0)
 Q
"RTN","PSOREJUT",109,0)
 ;
"RTN","PSOREJUT",110,0)
CLOSE(RX,RFL,REJ,USR,REA,COM,COD1,COD2,COD3,CLA,PA,IGNR) ; - Mark a DUR/REFILL TOO SOON reject RESOLVED
"RTN","PSOREJUT",111,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",112,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",113,0)
 ;         (r) REJ - REJECT ID (IEN)
"RTN","PSOREJUT",114,0)
 ;         (o) USR - User (file #200 IEN) responsible for closing the REJECT
"RTN","PSOREJUT",115,0)
 ;         (r) REA - Reason for closing the REJECT  (52.25,12):
"RTN","PSOREJUT",116,0)
 ;                       1:CLAIM RE-SUBMITTED
"RTN","PSOREJUT",117,0)
 ;                       2:RX ON HOLD
"RTN","PSOREJUT",118,0)
 ;                       3:RX SUSPENDED
"RTN","PSOREJUT",119,0)
 ;                       4:RX RETURNED TO STOCK
"RTN","PSOREJUT",120,0)
 ;                       5:RX DELETED
"RTN","PSOREJUT",121,0)
 ;                       6:IGNORED - NO RESUBMISSION
"RTN","PSOREJUT",122,0)
 ;                       7:RX DISCONTINUED
"RTN","PSOREJUT",123,0)
 ;                       8:RX EDITED
"RTN","PSOREJUT",124,0)
 ;                      99:OTHER
"RTN","PSOREJUT",125,0)
 ;         (o) COM  - Close comments manually entered by the user
"RTN","PSOREJUT",126,0)
 ;         (o) COD1 - First set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",127,0)
 ;         (o) COD2 - Second set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",128,0)
 ;         (o) COD3 - Third set of DUR overrides (Reason Code^Professional Code^Result Code)
"RTN","PSOREJUT",129,0)
 ;         (o) CLA  - NCPDP Clarification Code for overriding RTS and DUR REJECTS
"RTN","PSOREJUT",130,0)
 ;         (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOREJUT",131,0)
 ;         (o) IGNR - Ignore Flag; 1=IGNORE, 0=NOT IGNORE
"RTN","PSOREJUT",132,0)
 ;
"RTN","PSOREJUT",133,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJUT",134,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",135,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJUT",136,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,5)'=+$G(RFL) Q
"RTN","PSOREJUT",137,0)
 S:'$G(REA) REA=99 S COM=$TR($G(COM),";^",",,")
"RTN","PSOREJUT",138,0)
 N DQ,DA,DIE,DR,X,Y,REJCOM,I,SMACOM,SMA
"RTN","PSOREJUT",139,0)
 D NOW^%DTC
"RTN","PSOREJUT",140,0)
 S REJCOM="AUTOMATICALLY CLOSED" I REA'=1 S REJCOM=COM
"RTN","PSOREJUT",141,0)
 S DA(1)=RX,DA=REJ,DIE="^PSRX("_RX_",""REJ"","
"RTN","PSOREJUT",142,0)
 S DR="9///1;10///"_%_";11////"_$G(USR)_";12///"_REA_";13///"_REJCOM_";14///"_$P($G(COD1),"^")_";15///"_$P($G(COD1),"^",2)
"RTN","PSOREJUT",143,0)
 S DR=DR_";19///"_$P($G(COD1),"^",3)_";24///"_$G(CLA)_";25///"_$P($G(PA),"^")_";26///"_$P($G(PA),"^",2)
"RTN","PSOREJUT",144,0)
 D ^DIE
"RTN","PSOREJUT",145,0)
 ; Quit if this is a "eT" (non-billable TRICARE) or "eC" (non-billable CHAMPVA)
"RTN","PSOREJUT",146,0)
 Q:$$PSOET^PSOREJP3(RX,RFL)
"RTN","PSOREJUT",147,0)
 ;
"RTN","PSOREJUT",148,0)
 ; Add comment to the ECME User Screen
"RTN","PSOREJUT",149,0)
 ; First check if this is has more than one override value from the SMA action of the reject worklist
"RTN","PSOREJUT",150,0)
 ; If it is, we will need to enter multiple comments
"RTN","PSOREJUT",151,0)
 S SMA=0
"RTN","PSOREJUT",152,0)
 I $G(COD1)]"",$G(CLA)]"" S SMA=1
"RTN","PSOREJUT",153,0)
 I $G(COD1)]"",$G(PA)]"" S SMA=1
"RTN","PSOREJUT",154,0)
 I $G(CLA)]"",$G(PA)]"" S SMA=1
"RTN","PSOREJUT",155,0)
 I SMA D  Q
"RTN","PSOREJUT",156,0)
 . I $G(COD1)]"" D
"RTN","PSOREJUT",157,0)
 .. S SMACOM=$TR("DUR Override Codes "_$G(COD1)_"~"_$G(COD2)_"~"_$G(COD3)_" submitted.","^","/")
"RTN","PSOREJUT",158,0)
 .. S X=$$ADDCOMM^BPSBUTL(RX,RFL,SMACOM)
"RTN","PSOREJUT",159,0)
 . I $G(CLA)]"" D
"RTN","PSOREJUT",160,0)
 .. S SMACOM="Clarification Code(s) "_CLA_" submitted."
"RTN","PSOREJUT",161,0)
 .. S X=$$ADDCOMM^BPSBUTL(RX,RFL,SMACOM)
"RTN","PSOREJUT",162,0)
 . I $G(PA)]"" D
"RTN","PSOREJUT",163,0)
 .. S SMACOM="Prior Authorization Code ("_$P(PA,"^")_"/"_$P(PA,"^",2)_") submitted."
"RTN","PSOREJUT",164,0)
 .. S X=$$ADDCOMM^BPSBUTL(RX,RFL,SMACOM)
"RTN","PSOREJUT",165,0)
 . S SMACOM="Multiple actions taken to resolve. See comments for details."
"RTN","PSOREJUT",166,0)
 . S X=$$ADDCOMM^BPSBUTL(RX,RFL,SMACOM)
"RTN","PSOREJUT",167,0)
 ;
"RTN","PSOREJUT",168,0)
 ; If not SMA, fall through to here and enter one comment
"RTN","PSOREJUT",169,0)
 ; If IGNR flag is set, add that to the comment string before sending
"RTN","PSOREJUT",170,0)
 S X=$$ADDCOMM^BPSBUTL(RX,RFL,$S($G(IGNR):"IGNORED - ",1:"")_COM)
"RTN","PSOREJUT",171,0)
 Q
"RTN","PSOREJUT",172,0)
 ;
"RTN","PSOREJUT",173,0)
FIND(RX,RFL,REJDATA,CODE,BESC,RRRFLG) ; - Returns whether a Rx/fill contains UNRESOLVED rejects
"RTN","PSOREJUT",174,0)
 ; Input: (r) RX - Rx IEN (#52) 
"RTN","PSOREJUT",175,0)
 ; (o) RFL - Refill # (If not passed, look original and all refills)
"RTN","PSOREJUT",176,0)
 ; (o) CODE - Can be null, a specific Reject Code(s) to be checked or multiple codes separated by comma's
"RTN","PSOREJUT",177,0)
 ; (o) BESC - Bypass ECME Status Check (default behavior is to do the check); pass 1 to skip the check below
"RTN","PSOREJUT",178,0)
 ;            We need to skip this check when looking for non-ECME billable rejects (eT or eC for example)
"RTN","PSOREJUT",179,0)
 ; (o) RRRFLG - Pass a 1 in this parameter to also look for any unresolved Reject Resolution Required (RRR)
"RTN","PSOREJUT",180,0)
 ;              rejects when CODE is also passed.  If CODE is not passed in, then pass a 1 here to ONLY look for
"RTN","PSOREJUT",181,0)
 ;              unresolved RRR rejects.
"RTN","PSOREJUT",182,0)
 ;              The default here is 0 if not passed.
"RTN","PSOREJUT",183,0)
 ;
"RTN","PSOREJUT",184,0)
 ; Output: 1 - Rx contains unresolved Rejects
"RTN","PSOREJUT",185,0)
 ;         0 - Rx does not contain unresolved Rejects
"RTN","PSOREJUT",186,0)
 ;  .REJDATA - Array containing the Reject(s) data (see GET^PSOREJU2 for fields documentation)
"RTN","PSOREJUT",187,0)
 ;
"RTN","PSOREJUT",188,0)
 N RCODE,I,REJS
"RTN","PSOREJUT",189,0)
 S REJS=0,RCODE=""
"RTN","PSOREJUT",190,0)
 K REJDATA
"RTN","PSOREJUT",191,0)
 I '$G(BESC),$G(RFL),$$STATUS^PSOBPSUT(RX,RFL)="" Q 0
"RTN","PSOREJUT",192,0)
 I $G(CODE)]"",CODE["," S REJS=$$MULTI^PSOREJU4(RX,$G(RFL),.REJDATA,$G(CODE),REJS,+$G(RRRFLG)) G FEND
"RTN","PSOREJUT",193,0)
 S REJS=$$SINGLE^PSOREJU4(RX,$G(RFL),.REJDATA,$G(CODE),REJS,+$G(RRRFLG))
"RTN","PSOREJUT",194,0)
FEND ;
"RTN","PSOREJUT",195,0)
 Q $S(REJS:1,1:0)
"RTN","PSOREJUT",196,0)
 ;
"RTN","PSOREJUT",197,0)
SYNC(RX,RFL,USR,RXCOB) ;
"RTN","PSOREJUT",198,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",199,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",200,0)
 ;         (o) USR - User using the system when this routine is called
"RTN","PSOREJUT",201,0)
 ;         (o) RXCOB - Coordination of Benefits code
"RTN","PSOREJUT",202,0)
 I '$G(RXCOB) S RXCOB=1
"RTN","PSOREJUT",203,0)
 N REJ,REJS,REJLST,I,IDX,CODE,DATA,TXT,PSOTRIC,ERR,PSODIV,OPECC,OVREJ,ESH
"RTN","PSOREJUT",204,0)
 N REJRRR,RRRVAL ; PSO*7*421
"RTN","PSOREJUT",205,0)
 L +^PSRX("REJ",RX):0 Q:'$T
"RTN","PSOREJUT",206,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",207,0)
 S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJUT",208,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ,"",RXCOB)
"RTN","PSOREJUT",209,0)
 S PSOTRIC="" S:$G(REJ(1,"ELIGBLT"))="T" PSOTRIC=1 S:$G(REJ(1,"ELIGBLT"))="C" PSOTRIC=2 S:PSOTRIC="" PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,.PSOTRIC)
"RTN","PSOREJUT",210,0)
 K REJS S (OPECC,IDX,ERR)=""
"RTN","PSOREJUT",211,0)
 F  S IDX=$O(REJ(IDX)) Q:IDX=""  S TXT=$G(REJ(IDX,"REJ CODE LST")) D
"RTN","PSOREJUT",212,0)
 . F I=1:1:$L(TXT,",") S CODE=$P(TXT,",",I),OVREJ="" D
"RTN","PSOREJUT",213,0)
 . . I CODE="" Q
"RTN","PSOREJUT",214,0)
 . . I ",M6,M8,99,NN,"[(","_CODE_",") S ESH="",ESH=$$DUR^PSOBPSU2(RX,RFL) Q:'ESH&('PSOTRIC)
"RTN","PSOREJUT",215,0)
 . . ;Additional check for Reject Resolution Required included - PSO*7*421
"RTN","PSOREJUT",216,0)
 . . I CODE'="79"&(CODE'="88")&('$G(PSOTRIC)) S ERR=$$EVAL^PSOREJU4(PSODIV,CODE,OPECC,RX,RFL,RXCOB,.RRRVAL) Q:'+ERR
"RTN","PSOREJUT",217,0)
 . . I +$G(ERR) S OVREJ=1 S:+$G(RRRVAL) REJRRR(IDX)=RRRVAL
"RTN","PSOREJUT",218,0)
 . . I $$DUP^PSOREJU1(RX,+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN")))) Q
"RTN","PSOREJUT",219,0)
 . . S REJS(IDX,CODE)=OVREJ
"RTN","PSOREJUT",220,0)
 I '$D(REJS) L -^PSRX("REJ",RX) Q
"RTN","PSOREJUT",221,0)
SYNC2 ;
"RTN","PSOREJUT",222,0)
 S (IDX,CODE)="" F  S IDX=$O(REJS(IDX)) Q:IDX=""  D
"RTN","PSOREJUT",223,0)
 . F  S CODE=$O(REJS(IDX,CODE)) Q:CODE=""  K DATA D
"RTN","PSOREJUT",224,0)
 . . ;Additional check for Reject Resolution Required - PSO*7*421
"RTN","PSOREJUT",225,0)
 . . I 'OPECC&(CODE'[79)&(CODE'[88) D
"RTN","PSOREJUT",226,0)
 . . .I '+$G(REJRRR(IDX)) S DATA("OVERRIDE MSG")="Automatically transferred due to override for reject code." Q
"RTN","PSOREJUT",227,0)
 . . .;Reject Resolution Required fields
"RTN","PSOREJUT",228,0)
 . . .S DATA("RRR FLAG")=1
"RTN","PSOREJUT",229,0)
 . . .S DATA("RRR GROSS AMT DUE")=$P(REJRRR(IDX),U,2)
"RTN","PSOREJUT",230,0)
 . . .S DATA("RRR THRESHOLD AMT")=$P(REJRRR(IDX),U,3)
"RTN","PSOREJUT",231,0)
 . . .S DATA("OVERRIDE MSG")="Automatically transferred due to Reject Resolution Required reject code"
"RTN","PSOREJUT",232,0)
 . . I OPECC&(CODE'[79)&(CODE'[88) S DATA("OVERRIDE MSG")="Transferred by "_$S(CODE["eT":"",CODE["eC":"",1:"OPECC.")   ;cnf,PSO*7.0*358
"RTN","PSOREJUT",233,0)
 . . I $D(COMMTXT) S:COMMTXT'="" DATA("OVERRIDE MSG")=DATA("OVERRIDE MSG")_" "_$$CLEAN^PSOREJU1($P(COMMTXT,":",2))
"RTN","PSOREJUT",234,0)
 . . S DATA("DUR TEXT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"DUR FREE TEXT DESC")))
"RTN","PSOREJUT",235,0)
 . . S DATA("DUR ADD MSG TEXT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"DUR ADD MSG TEXT")))
"RTN","PSOREJUT",236,0)
 . . ; In NCPDP D0, the Payer Additional Message is a repeating field and we want to display as much of the
"RTN","PSOREJUT",237,0)
 . . ;   data on the reject information screen as possible so we put the messages together up to the field
"RTN","PSOREJUT",238,0)
 . . ;   length of 140
"RTN","PSOREJUT",239,0)
 . . N CNT,MSG
"RTN","PSOREJUT",240,0)
 . . S CNT="",DATA("PAYER MESSAGE")=""
"RTN","PSOREJUT",241,0)
 . . F  S CNT=$O(REJ(IDX,"PAYER MESSAGE",CNT)) Q:CNT=""!($L(DATA("PAYER MESSAGE"))>140)  D
"RTN","PSOREJUT",242,0)
 . . . S MSG=$$CLEAN^PSOREJU1(REJ(IDX,"PAYER MESSAGE",CNT))
"RTN","PSOREJUT",243,0)
 . . . I MSG]"" S DATA("PAYER MESSAGE")=DATA("PAYER MESSAGE")_MSG_"  "
"RTN","PSOREJUT",244,0)
 . . ; Call CLEAN again to strip the extra trailing spaces we might have added
"RTN","PSOREJUT",245,0)
 . . S DATA("PAYER MESSAGE")=$$CLEAN^PSOREJU1(DATA("PAYER MESSAGE"))
"RTN","PSOREJUT",246,0)
 . . S DATA("CODE")=CODE,DATA("REASON")=$$CLEAN^PSOREJU1($G(REJ(IDX,"REASON")))
"RTN","PSOREJUT",247,0)
 . . S DATA("PHARMACIST")=$G(USR),DATA("INSURANCE NAME")=$$CLEAN^PSOREJU1($G(REJ(IDX,"INSURANCE NAME")))
"RTN","PSOREJUT",248,0)
 . . S DATA("INSURANCE POINTER")=$$CLEAN^PSOREJU1($G(REJ(IDX,"INSURANCE POINTER")))
"RTN","PSOREJUT",249,0)
 . . S DATA("GROUP NAME")=$$CLEAN^PSOREJU1($G(REJ(IDX,"GROUP NAME"))),DATA("GROUP NUMBER")=$$CLEAN^PSOREJU1($G(REJ(IDX,"GROUP NUMBER")))
"RTN","PSOREJUT",250,0)
 . . S DATA("CARDHOLDER ID")=$$CLEAN^PSOREJU1($G(REJ(IDX,"CARDHOLDER ID"))),DATA("PLAN CONTACT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"PLAN CONTACT")))
"RTN","PSOREJUT",251,0)
 . . S DATA("PREVIOUS FILL")=$$CLEAN^PSOREJU1($$DAT^PSOREJU1($G(REJ(IDX,"PREVIOUS FILL DATE"))))
"RTN","PSOREJUT",252,0)
 . . S DATA("OTHER REJECTS")=$$CLEAN^PSOREJU1($$OTH^PSOREJU1(CODE,$G(REJ(IDX,"REJ CODE LST"))))
"RTN","PSOREJUT",253,0)
 . . S DATA("RESPONSE IEN")=+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN")))
"RTN","PSOREJUT",254,0)
 . . S DATA("REASON SVC CODE")=$$REASON^PSOREJU2($G(REJ(IDX,"REASON"))),DATA("COB")=IDX
"RTN","PSOREJUT",255,0)
 . . S DATA("MESSAGE")=$$CLEAN^PSOREJU1($G(REJ(IDX,"MESSAGE")))
"RTN","PSOREJUT",256,0)
 . . S DATA("DUR RESPONSE DATA")=$$CLEAN^PSOREJU1($G(REJ(IDX,"DUR RESPONSE DATA")))
"RTN","PSOREJUT",257,0)
 . . S DATA("BIN")=$$CLEAN^PSOREJU1($G(REJ(IDX,"BIN")))
"RTN","PSOREJUT",258,0)
 . . S DATA("PCN")=$$CLEAN^PSOREJU1($G(REJ(IDX,"PCN")))
"RTN","PSOREJUT",259,0)
 . . D SAVE(RX,RFL,.DATA)
"RTN","PSOREJUT",260,0)
 L -^PSRX("REJ",RX)
"RTN","PSOREJUT",261,0)
 Q
"RTN","PSORXRP2")
0^1^B37627986
"RTN","PSORXRP2",1,0)
PSORXRP2 ;BIR/SAB-main menu entry reprint of a Rx label ;10/5/07 7:45am
"RTN","PSORXRP2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**11,27,120,138,135,156,185,280,251,367,478**;DEC 1997;Build 27
"RTN","PSORXRP2",3,0)
 ;External references PSOL and PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSORXRP2",4,0)
 ;External reference ^PS(55 supported by DBIA 2228
"RTN","PSORXRP2",5,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSORXRP2",6,0)
 I '$D(PSOPAR) D ^PSOLSET I '$D(PSOPAR) G KILL
"RTN","PSORXRP2",7,0)
LRP N PSODISP,PSOMGREP,PSOFILL
"RTN","PSORXRP2",8,0)
 K REPRINT W !! S DIC("S")="I $P($G(^(0)),""^"",2),$D(^(""STA"")),$P($G(^(""STA"")),""^"")<10",DIC="^PSRX(",DIC("A")="Reprint Prescription Label: ",DIC(0)="QEAZ" D ^DIC K P,DIC("A") I Y<0!("^"[X) K PCOM,PCOMX G KILL
"RTN","PSORXRP2",9,0)
 S (PPL,DA,RX,PSORPRX)=+Y,PDA=Y(0),RXF=0,ZD(DA)=DT,REPRINT=1,STA=+$G(^PSRX(+Y,"STA"))
"RTN","PSORXRP2",10,0)
 ; PSO*7*478
"RTN","PSORXRP2",11,0)
 S PSOFILL=$$LSTRFL^PSOBPSU1(PSORPRX)
"RTN","PSORXRP2",12,0)
 I $$FIND^PSOREJUT(PSORPRX,PSOFILL) W $C(7),!,"NOT ALLOWED! Rx has OPEN 3rd Party Payer Reject." D KILL G LRP
"RTN","PSORXRP2",13,0)
 D PSOL^PSSLOCK(PSORPRX) I '$G(PSOMSG) W !!,$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing this order."),! K PSOMSG G LRP
"RTN","PSORXRP2",14,0)
 I $P(^PSRX(RX,"STA"),"^")=14 W $C(7),!,"Cannot Reprint! Discontinued by Provider." D ULR,KILL Q
"RTN","PSORXRP2",15,0)
 I $P(^PSRX(RX,"STA"),"^")=15 W $C(7),!,"Cannot Reprint! Discontinued due to editing." D ULR,KILL Q
"RTN","PSORXRP2",16,0)
 I $P(^PSRX(RX,"STA"),"^")=16 W $C(7),!,"Cannot Reprint! Placed on HOLD by Provider." D ULR,KILL Q
"RTN","PSORXRP2",17,0)
 I DT>$P(^PSRX(RX,2),"^",6) D  D ULR,KILL G LRP
"RTN","PSORXRP2",18,0)
 .W !,$C(7),"Medication Expired on "_$E($P(^PSRX(RX,2),"^",6),4,5)_"-"_$E($P(^(2),"^",6),6,7)_"-"_$E($P(^(2),"^",6),2,3) I $P(^PSRX(DA,"STA"),"^")<11 S $P(^PSRX(DA,"STA"),"^")=11 D
"RTN","PSORXRP2",19,0)
 ..S COMM="Medication Expired on "_$E($P(^PSRX(RX,2),"^",6),4,5)_"-"_$E($P(^(2),"^",6),6,7)_"-"_$E($P(^(2),"^",6),2,3) D EN^PSOHLSN1(DA,"SC","ZE",COMM) K COMM
"RTN","PSORXRP2",20,0)
 S DFN=$P(PDA,"^",2) D DEM^VADPT I $P(VADM(6),"^",2)]"" D  G LRP
"RTN","PSORXRP2",21,0)
 .W $C(7),!!,$P(^DPT($P(PDA,"^",2),0),"^")_" Died "_$P(VADM(6),"^",2)_".",!
"RTN","PSORXRP2",22,0)
 .S $P(^PSRX(RX,"STA"),"^")=12,PCOM="Patient Expired "_$P(VADM(6),"^",2),ST="C" D EN^PSOHLSN1(RX,"OD","",PCOM,"A")
"RTN","PSORXRP2",23,0)
 .D ACT1,ULR,KILL
"RTN","PSORXRP2",24,0)
 S X=$O(^PS(52.5,"B",DA,0)) I X,'$G(^PS(52.5,X,"P")) W !,$C(7),"Rx may NOT be printed using this option, use SUSPENSE FUNCTIONS Options." K X D ULR,KILL G LRP
"RTN","PSORXRP2",25,0)
 I $G(X)'>0 G GOOD
"RTN","PSORXRP2",26,0)
 S XX=$P($G(^PS(52.5,X,0)),U,7) I $G(XX)']"" G GOOD
"RTN","PSORXRP2",27,0)
 I $G(XX)="Q" W !,"RX CAN NOT BE PRINTED using this option, use SUSPENSE FUNCTIONS Options." K X,XX D ULR,KILL G LRP
"RTN","PSORXRP2",28,0)
 I $G(XX)="L" W !,"RX is being transmitted to the CMOP and can not be reprinted now." K X,XX D ULR,KILL G LRP
"RTN","PSORXRP2",29,0)
GOOD K X
"RTN","PSORXRP2",30,0)
 I $D(^PS(52.4,DA)) W !,"Prescription is Non-Verified",!! D ULR,KILL G LRP
"RTN","PSORXRP2",31,0)
 S DFN=$P(^PSRX(DA,0),"^",2) I $D(^PS(52.4,"AREF",DFN,DA)) W !,"Prescription is waiting for others to be verified",!! D ULR,KILL G LRP
"RTN","PSORXRP2",32,0)
 I $G(PSODIV),$D(^PSRX(DA,2)),+$P(^(2),"^",9),+$P(^(2),"^",9)'=PSOSITE S PSPOP=0,PSPRXN=DA D CHK1^PSOUTLA I PSPOP D ULR,KILL G LRP
"RTN","PSORXRP2",33,0)
 I STA=3 W !?3,"Prescription is on Hold" D ULR,KILL G LRP
"RTN","PSORXRP2",34,0)
 I STA=4 W !?3,"Prescription is Pending Due to Drug Interactions" D ULR,KILL G LRP
"RTN","PSORXRP2",35,0)
 I STA=12 W !?3,"Prescription is Discontinued" D ULR,KILL G LRP
"RTN","PSORXRP2",36,0)
 I $G(^PS(55,"ASTALK",DFN)) W !,"Patient is a ScripTalk patient. Use ScripTalk label for prescription bottle.",!
"RTN","PSORXRP2",37,0)
 D ICN^PSODPT(DFN)
"RTN","PSORXRP2",38,0)
 S COPIES=$S($P(PDA,"^",18)]"":$P(PDA,"^",18),1:1)
"RTN","PSORXRP2",39,0)
 K DIR S DIR("A")="Number of Copies? ",DIR("B")=COPIES,DIR(0)="N^1:99:0",DIR("?")="Enter the number of copies you want (1 TO 99)"
"RTN","PSORXRP2",40,0)
 D ^DIR K DIR I $D(DIRUT) D ULR,KILL G LRP
"RTN","PSORXRP2",41,0)
 S COPIES=Y
"RTN","PSORXRP2",42,0)
 K DIR S DIR("A")="Print adhesive portion of label only? ",DIR(0)="Y",DIR("B")="No",DIR("?",1)="If entire label, including trailers are to print press RETURN for default."
"RTN","PSORXRP2",43,0)
 S DIR("?")="Else if only bottle and mailing labels are to print enter Y or YES." D ^DIR K DIR I $D(DUOUT) D ULR,KILL G LRP
"RTN","PSORXRP2",44,0)
 I $D(DIRUT) D ULR G KILL
"RTN","PSORXRP2",45,0)
 S SIDE=Y
"RTN","PSORXRP2",46,0)
 I $P(PSOPAR,"^",30),$$GET1^DIQ(59,PSOSITE_",",105,"I")=2.4 D
"RTN","PSORXRP2",47,0)
 .I $S($P(PSOPAR,"^",30)=3:1,$P(PSOPAR,"^",30)=4:1,1:0),'$$GET1^DIQ(50,$P(PDA,"^",6),28,"I") Q
"RTN","PSORXRP2",48,0)
 .K DIR,DIRUT S DIR("A")="Do you want to resend to Dispensing System Device",DIR(0)="Y",DIR("B")="No" D ^DIR K DIR Q:$D(DIRUT)  S PSODISP=$S(Y:0,1:1)
"RTN","PSORXRP2",49,0)
 I $D(DIRUT) D ULR,KILL G LRP
"RTN","PSORXRP2",50,0)
 ;
"RTN","PSORXRP2",51,0)
 ; FDA Medication Guide Reprint
"RTN","PSORXRP2",52,0)
 I $$GET1^DIQ(59,PSOSITE,134)'="",$$MGONFILE^PSOFDAUT(DA) D  I $D(DIRUT) D ULR,KILL G LRP
"RTN","PSORXRP2",53,0)
 . K DIR,DIRUT S DIR("A")="Reprint the FDA Medication Guide",DIR(0)="Y",DIR("B")="No"
"RTN","PSORXRP2",54,0)
 . D ^DIR K DIR Q:$D(DIRUT)  S PSOMGREP=Y
"RTN","PSORXRP2",55,0)
 ; 
"RTN","PSORXRP2",56,0)
 D ACT I $D(DIRUT) D ULR,KILL G LRP
"RTN","PSORXRP2",57,0)
 I $D(PCOM) D ULR,KILL G LRP
"RTN","PSORXRP2",58,0)
 F I=1,2,4,6,7,9,13,16 S P(I)=$P(PDA,"^",I)
"RTN","PSORXRP2",59,0)
 S P(6)=+P(6) I $D(^PSRX(DA,"TN")),^("TN")]"" S P(6)=^("TN")
"RTN","PSORXRP2",60,0)
 W !!,"Rx # "_P(1),?23,$E(P(13),4,5)_"/"_$E(P(13),6,7)_"/"_$E(P(13),2,3),!,$S($D(^DPT(+P(2),0)):$P(^(0),"^"),1:"Not on File"),?30,"#"_P(7),!
"RTN","PSORXRP2",61,0)
 I $P($G(^PSRX(DA,"SIG")),"^",2) S D=0 D  K D,FSIG
"RTN","PSORXRP2",62,0)
 .D FSIG^PSOUTLA("R",DA,75) F  S D=$O(FSIG(D)) W !,FSIG(D) Q:'$O(FSIG(D))
"RTN","PSORXRP2",63,0)
 E  D EN3^PSOUTLA1(DA,75) S D=0 F  S D=$O(BSIG(D)) W !,BSIG(D) Q:'$O(BSIG(D))
"RTN","PSORXRP2",64,0)
 K D,BSIG
"RTN","PSORXRP2",65,0)
 ;PSO*7*280 If Trade name, don't lookup in ^PSDRUG
"RTN","PSORXRP2",66,0)
 W !!,$S($G(^PSRX(DA,"TN"))]"":P(6),(P(6)=+P(6))&$D(^PSDRUG(P(6),0)):$P(^(0),"^"),1:P(6)),! S PHYS=$S($D(^VA(200,+P(4),0)):$P(^(0),"^"),1:"Unknown") W PHYS K PHYS
"RTN","PSORXRP2",67,0)
 W ?25,$S($D(^VA(200,+P(16),0)):$P(^(0),"^"),1:"Unknown"),!,"# of Refills: "_$G(P(9))
"RTN","PSORXRP2",68,0)
 I $G(RX) D
"RTN","PSORXRP2",69,0)
 .S RXRP(RX)=1_"^"_COPIES_"^"_SIDE
"RTN","PSORXRP2",70,0)
 .I $G(PSOMGREP)=1 S RXRP(RX,"MG")=1
"RTN","PSORXRP2",71,0)
 .I $G(PSODISP)=1 S RXRP(RX,"RP")=1
"RTN","PSORXRP2",72,0)
 .S RXFL(RX)=0 F ZZZ=0:0 S ZZZ=$O(^PSRX(RX,1,ZZZ)) Q:'ZZZ  S RXFL(RX)=ZZZ
"RTN","PSORXRP2",73,0)
 D @$S($P($G(PSOPAR),"^",26):"^PSORXL",1:"Q^PSORXL") K PSPOP,PPL,COPIES,SIDE,REPRINT,PCOM,IOP,PSL,PSNP,ZZZ,RXFL(+$G(RX)) D ULR,KILL G LRP
"RTN","PSORXRP2",74,0)
 ;
"RTN","PSORXRP2",75,0)
ACT K DIR S DIR("A")="Comments: ",DIR(0)="FA^5:60",DIR("?")="5-60 characters input required for activity log." S:$G(PCOMX)]"" DIR("B")=$G(PCOMX)
"RTN","PSORXRP2",76,0)
 D ^DIR K DIR Q:$D(DIRUT)!($D(DIROUT))  S (PCOM,PCOMX)=X
"RTN","PSORXRP2",77,0)
 I '$D(PSOCLC) S PSOCLC=DUZ
"RTN","PSORXRP2",78,0)
ACT1 S RXF=0 F J=0:0 S J=$O(^PSRX(DA,1,J)) Q:'J  S RXF=J S:J>5 RXF=J+1
"RTN","PSORXRP2",79,0)
 S IR=0 F J=0:0 S J=$O(^PSRX(DA,"A",J)) Q:'J  S IR=J
"RTN","PSORXRP2",80,0)
 S IR=IR+1,^PSRX(DA,"A",0)="^52.3DA^"_IR_"^"_IR
"RTN","PSORXRP2",81,0)
 D NOW^%DTC S ^PSRX(DA,"A",IR,0)=%_"^"_$S($G(ST)'="C":"W",1:"C")_"^"_DUZ_"^"_RXF_"^"_PCOM_$S($G(ST)'="C":" ("_COPIES_" COPIES)",1:""),PCOMX=PCOM K PC,IR,PS,PCOM,XX,%,%H,%I,RXF
"RTN","PSORXRP2",82,0)
 S:$P(^PSRX(DA,2),"^",15)&($G(ST)'="C") $P(^PSRX(DA,2),"^",14)=1
"RTN","PSORXRP2",83,0)
 Q
"RTN","PSORXRP2",84,0)
 ;
"RTN","PSORXRP2",85,0)
KILL K %,DIR,DUOUT,DTOUT,DIROUT,DIRUT,C,DA,DIC,I,J,JJJ,K,RX,RXF,X,Y,Z,ZD,DFN,P,PDA,PSPRXN,COPIES,SIDE,PPL,REPRINT,PSXSTAT,PSORPRX,PSOMSG D KVA^VADPT Q
"RTN","PSORXRP2",86,0)
 ;
"RTN","PSORXRP2",87,0)
ULR ;
"RTN","PSORXRP2",88,0)
 I $G(PSORPRX) D PSOUL^PSSLOCK(PSORPRX)
"RTN","PSORXRP2",89,0)
 Q
"UP",52,52.25,-1)
52^REJ
"UP",52,52.25,0)
52.25
"VER")
8.0^22.2
"^DD",52,52.25,34,0)
PCN^FJ10^^2;10^K:$L(X)>10!($L(X)<1) X
"^DD",52,52.25,34,3)
Answer must be 1-10 characters in length.
"^DD",52,52.25,34,21,0)
^.001^1^1^3170628^^
"^DD",52,52.25,34,21,1,0)
Number which will uniquely identify the submitter of the claim.
"^DD",52,52.25,34,"DT")
3170628
**INSTALL NAME**
PSX*2.0*81
"BLD",10527,0)
PSX*2.0*81^CMOP^0^3170919^y
"BLD",10527,1,0)
^^1^1^3170504^
"BLD",10527,1,1,0)
MCCF EDI TAS EPHARMACY BUILD 2
"BLD",10527,4,0)
^9.64PA^^
"BLD",10527,6.3)
25
"BLD",10527,"ABPKG")
n
"BLD",10527,"KRN",0)
^9.67PA^779.2^20
"BLD",10527,"KRN",.4,0)
.4
"BLD",10527,"KRN",.401,0)
.401
"BLD",10527,"KRN",.402,0)
.402
"BLD",10527,"KRN",.403,0)
.403
"BLD",10527,"KRN",.5,0)
.5
"BLD",10527,"KRN",.84,0)
.84
"BLD",10527,"KRN",3.6,0)
3.6
"BLD",10527,"KRN",3.8,0)
3.8
"BLD",10527,"KRN",9.2,0)
9.2
"BLD",10527,"KRN",9.8,0)
9.8
"BLD",10527,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",10527,"KRN",9.8,"NM",1,0)
PSXBPSMS^^0^B34074117
"BLD",10527,"KRN",9.8,"NM",2,0)
PSXRPPL1^^0^B54793601
"BLD",10527,"KRN",9.8,"NM",3,0)
PSXRPPL2^^0^B72029409
"BLD",10527,"KRN",9.8,"NM",4,0)
PSXRPPL^^0^B68822537
"BLD",10527,"KRN",9.8,"NM","B","PSXBPSMS",1)

"BLD",10527,"KRN",9.8,"NM","B","PSXRPPL",4)

"BLD",10527,"KRN",9.8,"NM","B","PSXRPPL1",2)

"BLD",10527,"KRN",9.8,"NM","B","PSXRPPL2",3)

"BLD",10527,"KRN",19,0)
19
"BLD",10527,"KRN",19,"NM",0)
^9.68A^^
"BLD",10527,"KRN",19.1,0)
19.1
"BLD",10527,"KRN",101,0)
101
"BLD",10527,"KRN",409.61,0)
409.61
"BLD",10527,"KRN",771,0)
771
"BLD",10527,"KRN",779.2,0)
779.2
"BLD",10527,"KRN",870,0)
870
"BLD",10527,"KRN",8989.51,0)
8989.51
"BLD",10527,"KRN",8989.52,0)
8989.52
"BLD",10527,"KRN",8994,0)
8994
"BLD",10527,"KRN","B",.4,.4)

"BLD",10527,"KRN","B",.401,.401)

"BLD",10527,"KRN","B",.402,.402)

"BLD",10527,"KRN","B",.403,.403)

"BLD",10527,"KRN","B",.5,.5)

"BLD",10527,"KRN","B",.84,.84)

"BLD",10527,"KRN","B",3.6,3.6)

"BLD",10527,"KRN","B",3.8,3.8)

"BLD",10527,"KRN","B",9.2,9.2)

"BLD",10527,"KRN","B",9.8,9.8)

"BLD",10527,"KRN","B",19,19)

"BLD",10527,"KRN","B",19.1,19.1)

"BLD",10527,"KRN","B",101,101)

"BLD",10527,"KRN","B",409.61,409.61)

"BLD",10527,"KRN","B",771,771)

"BLD",10527,"KRN","B",779.2,779.2)

"BLD",10527,"KRN","B",870,870)

"BLD",10527,"KRN","B",8989.51,8989.51)

"BLD",10527,"KRN","B",8989.52,8989.52)

"BLD",10527,"KRN","B",8994,8994)

"BLD",10527,"QUES",0)
^9.62^^
"BLD",10527,"REQB",0)
^9.611^^
"MBREQ")
1
"PKG",519,-1)
1^1
"PKG",519,0)
CMOP^PSX^Consolidated Mail Outpatient Pharmacy
"PKG",519,22,0)
^9.49I^1^1
"PKG",519,22,1,0)
2.0^2970411^2970412^1
"PKG",519,22,1,"PAH",1,0)
81^3170919^520824639
"PKG",519,22,1,"PAH",1,1,0)
^^1^1^3170919
"PKG",519,22,1,"PAH",1,1,1,0)
MCCF EDI TAS EPHARMACY BUILD 2
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","PSXBPSMS")
0^1^B34074117
"RTN","PSXBPSMS",1,0)
PSXBPSMS ;BIRM/BSR - BPS (ECME) Utilities ;10/29/98  2:13 PM
"RTN","PSXBPSMS",2,0)
 ;;2.0;CMOP;**48,77,81**;11 Apr 97;Build 25
"RTN","PSXBPSMS",3,0)
 ;Reference to $$RXFLDT^PSOBPSUT supported by IA 4701
"RTN","PSXBPSMS",4,0)
 ;Reference to LOG^BPSOSL supported by ICR# 6764
"RTN","PSXBPSMS",5,0)
 ;Reference to IEN59^BPSOSRX supported by ICR# 4412
"RTN","PSXBPSMS",6,0)
 ;Reference to ELIGDISP^PSOREJP1 supported by ICR# 6763
"RTN","PSXBPSMS",7,0)
 ;
"RTN","PSXBPSMS",8,0)
 ; PSXBPSMS sends an email at the conclusion of the CMOP process to
"RTN","PSXBPSMS",9,0)
 ; communicate to the users which prescriptions were left in the
"RTN","PSXBPSMS",10,0)
 ; suspense queue and not sent to the CMOP facility.  There are two
"RTN","PSXBPSMS",11,0)
 ; scenarios that could lead to this; either the prescription is
"RTN","PSXBPSMS",12,0)
 ; non-billable, or a response from the third party payer was not 
"RTN","PSXBPSMS",13,0)
 ; received by the time the CMOP process stopped waiting for
"RTN","PSXBPSMS",14,0)
 ; responses (see SDT^PSXRPPL and CHKDFN^PSXRPPL2).  Each of the
"RTN","PSXBPSMS",15,0)
 ; prescriptions listed in ^TMP("PSXEPHIN" are included in this email.
"RTN","PSXBPSMS",16,0)
 ; That global is set only in EPH^PSXRPPL2, which is called only
"RTN","PSXBPSMS",17,0)
 ; by EPHARM^PSXRPPL2.
"RTN","PSXBPSMS",18,0)
 ;
"RTN","PSXBPSMS",19,0)
EN ;Main entry point.
"RTN","PSXBPSMS",20,0)
 N DFN,DIV,EMCNT,ORCNT,PATCNT,PATNM,PSXACTIVITY,PSXELIG,PTLST,RFL,RX,SSN,VADM
"RTN","PSXBPSMS",21,0)
 K ^TMP("PSXEPHOUT",$J)
"RTN","PSXBPSMS",22,0)
 S ^XTMP("PSXBPSMS",0)=$$FMADD^XLFDT(DT,35)_"^"_DT
"RTN","PSXBPSMS",23,0)
 S (EMCNT,ORCNT,PATCNT)=0
"RTN","PSXBPSMS",24,0)
 ;
"RTN","PSXBPSMS",25,0)
 S DIV=""
"RTN","PSXBPSMS",26,0)
 F  S DIV=$O(^TMP("PSXEPHIN",$J,DIV)) Q:DIV=""  D
"RTN","PSXBPSMS",27,0)
 . D HEADER(DIV)
"RTN","PSXBPSMS",28,0)
 . S RX=""
"RTN","PSXBPSMS",29,0)
 . F  S RX=$O(^TMP("PSXEPHIN",$J,DIV,RX)) Q:RX=""  D
"RTN","PSXBPSMS",30,0)
 . . S RFL=+$G(^TMP("PSXEPHIN",$J,DIV,RX))
"RTN","PSXBPSMS",31,0)
 . . S ^XTMP("PSXBPSMS",1,RX,RFL,DT)=""
"RTN","PSXBPSMS",32,0)
 . . ;
"RTN","PSXBPSMS",33,0)
 . . ; Add an entry to the developer's log, BPS LOG, file# 9002313.12.
"RTN","PSXBPSMS",34,0)
 . . ;
"RTN","PSXBPSMS",35,0)
 . . D LOG^BPSOSL($$IEN59^BPSOSRX(RX,RFL),$T(+0)_"-Prescription being left on CMOP queue")  ; ICR #4412,6764
"RTN","PSXBPSMS",36,0)
 . . ;
"RTN","PSXBPSMS",37,0)
 . . ; Add an entry to the Activity Log for this Rx (sub-file# 52.3).
"RTN","PSXBPSMS",38,0)
 . . ;
"RTN","PSXBPSMS",39,0)
 . . I $$STATUS^PSOBPSUT(RX,RFL)="IN PROGRESS" D  ; ICR #4701
"RTN","PSXBPSMS",40,0)
 . . . S PSXELIG=$$ELIGDISP^PSOREJP1(RX,RFL)  ; ICR #6763
"RTN","PSXBPSMS",41,0)
 . . . I PSXELIG="" S PSXELIG="Veteran"
"RTN","PSXBPSMS",42,0)
 . . . S PSXACTIVITY=PSXELIG_"-Rx placed on Suspense due to ECME IN PROGRESS status"
"RTN","PSXBPSMS",43,0)
 . . . D RXACT^PSOBPSU2(RX,RFL,PSXACTIVITY,"M",DUZ)  ; ICR # 4970
"RTN","PSXBPSMS",44,0)
 . . ;
"RTN","PSXBPSMS",45,0)
 . . ; Determine the SSN and Patient Name.
"RTN","PSXBPSMS",46,0)
 . . ;
"RTN","PSXBPSMS",47,0)
 . . S DFN=+$P(^PSRX(RX,0),"^",2) D DEM^VADPT
"RTN","PSXBPSMS",48,0)
 . . S SSN=$E($P(VADM(2),U),6,9),PATNM=(VADM(1))
"RTN","PSXBPSMS",49,0)
 . . ;
"RTN","PSXBPSMS",50,0)
 . . ; Increment the count of orders (Rxs) and unique patients.
"RTN","PSXBPSMS",51,0)
 . . ;
"RTN","PSXBPSMS",52,0)
 . . S ORCNT=$G(ORCNT)+1
"RTN","PSXBPSMS",53,0)
 . . D PATCNT(PATNM_SSN)
"RTN","PSXBPSMS",54,0)
 . . ;
"RTN","PSXBPSMS",55,0)
 . . D FORMAT
"RTN","PSXBPSMS",56,0)
 . D FOOTER(DIV)
"RTN","PSXBPSMS",57,0)
 D MAIL,CLEAN
"RTN","PSXBPSMS",58,0)
 Q
"RTN","PSXBPSMS",59,0)
 ;
"RTN","PSXBPSMS",60,0)
 ; Format Row
"RTN","PSXBPSMS",61,0)
FORMAT ;
"RTN","PSXBPSMS",62,0)
 N LTXT
"RTN","PSXBPSMS",63,0)
 S LTXT=$$GET1^DIQ(52,RX,.01)_"/"_RFL
"RTN","PSXBPSMS",64,0)
 S $E(LTXT,17)=$E(PATNM,1,18)_"("_SSN_")",$E(LTXT,42)=$E($$GET1^DIQ(52,RX,6),1,23)
"RTN","PSXBPSMS",65,0)
 S $E(LTXT,67)=$$TRANS(RX,RFL)
"RTN","PSXBPSMS",66,0)
 D STORELN(LTXT)
"RTN","PSXBPSMS",67,0)
 Q
"RTN","PSXBPSMS",68,0)
 ;
"RTN","PSXBPSMS",69,0)
 ;Count patients.
"RTN","PSXBPSMS",70,0)
PATCNT(NAMSSN) ;
"RTN","PSXBPSMS",71,0)
 I '$D(PTLST(NAMSSN)) D
"RTN","PSXBPSMS",72,0)
 .S PTLST(NAMSSN)=""
"RTN","PSXBPSMS",73,0)
 .S PATCNT=$G(PATCNT)+1
"RTN","PSXBPSMS",74,0)
 Q
"RTN","PSXBPSMS",75,0)
 ;
"RTN","PSXBPSMS",76,0)
 ;Build header.
"RTN","PSXBPSMS",77,0)
HEADER(DIV) ;
"RTN","PSXBPSMS",78,0)
 D STORELN("Division: "_$$GET1^DIQ(59,DIV,.01))
"RTN","PSXBPSMS",79,0)
 D STORELN($TR($J("",79)," ","-"))
"RTN","PSXBPSMS",80,0)
 D STORELN("                                                                NOT TRANSMITTED")
"RTN","PSXBPSMS",81,0)
 D STORELN("RX#/Fill        PATIENT(LAST4)           DRUG                     1ST DT  #DAYS")
"RTN","PSXBPSMS",82,0)
 D STORELN($TR($J("",79)," ","-"))
"RTN","PSXBPSMS",83,0)
 Q
"RTN","PSXBPSMS",84,0)
 ;       
"RTN","PSXBPSMS",85,0)
 ;Output patient count & prescriptions count & division number
"RTN","PSXBPSMS",86,0)
FOOTER(DIVN) ;
"RTN","PSXBPSMS",87,0)
 D STORELN(" ")
"RTN","PSXBPSMS",88,0)
 D STORELN("Total "_$$GET1^DIQ(59,DIVN,.01)_": "_PATCNT_" Patients and "_ORCNT_" Prescriptions.")
"RTN","PSXBPSMS",89,0)
 D STORELN(" ")
"RTN","PSXBPSMS",90,0)
 K PTLST S (ORCNT,PATCNT)=0
"RTN","PSXBPSMS",91,0)
 Q
"RTN","PSXBPSMS",92,0)
 ;
"RTN","PSXBPSMS",93,0)
 ; MAIL builds the email message and sends it to users who hold the
"RTN","PSXBPSMS",94,0)
 ; key PSXMAIL (or PSXCMOPMGR).
"RTN","PSXBPSMS",95,0)
 ;
"RTN","PSXBPSMS",96,0)
MAIL ;
"RTN","PSXBPSMS",97,0)
 ;
"RTN","PSXBPSMS",98,0)
 N DIV,M1,PSBMSG,SITES,USER,XMDUZ,XMSUB,XMTEXT,XMY,Y
"RTN","PSXBPSMS",99,0)
 ;
"RTN","PSXBPSMS",100,0)
 S PSBMSG(1)="The prescriptions listed in this message did not transmit to CMOP for one of"
"RTN","PSXBPSMS",101,0)
 S PSBMSG(2)="the reasons below:"
"RTN","PSXBPSMS",102,0)
 S PSBMSG(3)=" "
"RTN","PSXBPSMS",103,0)
 S PSBMSG(4)="        A response from the third party payer was not received"
"RTN","PSXBPSMS",104,0)
 S PSBMSG(5)=" "
"RTN","PSXBPSMS",105,0)
 S PSBMSG(6)="        OR"
"RTN","PSXBPSMS",106,0)
 S PSBMSG(7)=" "
"RTN","PSXBPSMS",107,0)
 S PSBMSG(8)="        The prescriptions are non-billable in VistA"
"RTN","PSXBPSMS",108,0)
 S PSBMSG(9)=" "
"RTN","PSXBPSMS",109,0)
 S PSBMSG(10)="The prescriptions will remain in the CMOP queue and will transmit when the"
"RTN","PSXBPSMS",110,0)
 S PSBMSG(11)="response from the third party payer is received, or the non-billable issue"
"RTN","PSXBPSMS",111,0)
 S PSBMSG(12)="is resolved.  Examples of non-billable issues are prescriptions for"
"RTN","PSXBPSMS",112,0)
 S PSBMSG(13)="sensitive medications that need Release of Information and prescriptions"
"RTN","PSXBPSMS",113,0)
 S PSBMSG(14)="for non-billable drugs (e.g., OTC products for CHAMPVA and TRICARE patients)."
"RTN","PSXBPSMS",114,0)
 S PSBMSG(15)=" "
"RTN","PSXBPSMS",115,0)
 S M1=16
"RTN","PSXBPSMS",116,0)
 ;
"RTN","PSXBPSMS",117,0)
 S Y=""
"RTN","PSXBPSMS",118,0)
 F  S Y=$O(^TMP("PSXEPHOUT",$J,"M",Y)) Q:Y=""  D
"RTN","PSXBPSMS",119,0)
 . S PSBMSG(M1)=$P(^TMP("PSXEPHOUT",$J,"M",Y),"^")
"RTN","PSXBPSMS",120,0)
 . S M1=M1+1
"RTN","PSXBPSMS",121,0)
 ;
"RTN","PSXBPSMS",122,0)
 ; Setup the list of recipients (XMY).  Send the email to all users
"RTN","PSXBPSMS",123,0)
 ; holding the security key PSXMAIL, if any; otherwise, send to all
"RTN","PSXBPSMS",124,0)
 ; users holding the key PSXCMOPMGR.
"RTN","PSXBPSMS",125,0)
 ;
"RTN","PSXBPSMS",126,0)
 S USER=0
"RTN","PSXBPSMS",127,0)
 I $D(^XUSEC("PSXMAIL")) D
"RTN","PSXBPSMS",128,0)
 .F  S USER=$O(^XUSEC("PSXMAIL",USER)) Q:'USER  S XMY(USER)=""
"RTN","PSXBPSMS",129,0)
 E  D
"RTN","PSXBPSMS",130,0)
 .F  S USER=$O(^XUSEC("PSXCMOPMGR",USER)) Q:'USER  S XMY(USER)=""
"RTN","PSXBPSMS",131,0)
 ;
"RTN","PSXBPSMS",132,0)
 ; Set the subject (XMSUB), indicate the array containing the text of
"RTN","PSXBPSMS",133,0)
 ; the message is PSBMSG, and set the sender to be POSTMASTER (.5).
"RTN","PSXBPSMS",134,0)
 ;
"RTN","PSXBPSMS",135,0)
 S DIV="",SITES=""
"RTN","PSXBPSMS",136,0)
 F  S DIV=$O(^TMP("PSXEPHIN",$J,DIV)) Q:DIV=""  S SITES=SITES_$$GET1^DIQ(59,DIV_",",.01,"E")_","
"RTN","PSXBPSMS",137,0)
 S XMSUB=$E("ePharmacy CMOP Not TRANSMITTED Rxs - "_$E(SITES,1,$L(SITES)-1),1,65)
"RTN","PSXBPSMS",138,0)
 S XMTEXT="PSBMSG("
"RTN","PSXBPSMS",139,0)
 S XMDUZ=.5
"RTN","PSXBPSMS",140,0)
 ;
"RTN","PSXBPSMS",141,0)
 D ^XMD
"RTN","PSXBPSMS",142,0)
 ;
"RTN","PSXBPSMS",143,0)
 Q
"RTN","PSXBPSMS",144,0)
 ;
"RTN","PSXBPSMS",145,0)
 ;Store E-mail line for later use.
"RTN","PSXBPSMS",146,0)
STORELN(LINE) ;
"RTN","PSXBPSMS",147,0)
 S EMCNT=EMCNT+1
"RTN","PSXBPSMS",148,0)
 S ^TMP("PSXEPHOUT",$J,"M",EMCNT)=LINE
"RTN","PSXBPSMS",149,0)
 Q
"RTN","PSXBPSMS",150,0)
 ;
"RTN","PSXBPSMS",151,0)
TRANS(RX,RFL) ;
"RTN","PSXBPSMS",152,0)
 I '$G(RX) Q ""
"RTN","PSXBPSMS",153,0)
 I $G(RFL)="" Q ""
"RTN","PSXBPSMS",154,0)
 N TDT,CNT,FDT
"RTN","PSXBPSMS",155,0)
 S CNT=0,FDT=9999999
"RTN","PSXBPSMS",156,0)
 S TDT="" F  S TDT=$O(^XTMP("PSXBPSMS",1,RX,RFL,TDT)) Q:'TDT  D
"RTN","PSXBPSMS",157,0)
 . S CNT=CNT+1
"RTN","PSXBPSMS",158,0)
 S FDT=$O(^XTMP("PSXBPSMS",1,RX,RFL,""))
"RTN","PSXBPSMS",159,0)
 I FDT=9999999 S FDT="        "
"RTN","PSXBPSMS",160,0)
 E  S FDT=$E(FDT,4,5)_"/"_$E(FDT,6,7)_"/"_($E(FDT,2,3))
"RTN","PSXBPSMS",161,0)
 Q FDT_$E("    ",1,5-$L(CNT))_CNT
"RTN","PSXBPSMS",162,0)
 ;
"RTN","PSXBPSMS",163,0)
 ;Clean all remaining arrays and variables
"RTN","PSXBPSMS",164,0)
 ;Purge ^XTMP data older than 30 days
"RTN","PSXBPSMS",165,0)
CLEAN ;
"RTN","PSXBPSMS",166,0)
 K ^TMP("PSXEPHOUT",$J),^TMP("PSXEPHIN",$J)
"RTN","PSXBPSMS",167,0)
 ; Purge ^XTMP data older than 30 days
"RTN","PSXBPSMS",168,0)
 N FDT,RX,RFL,TDT
"RTN","PSXBPSMS",169,0)
 S FDT=$$FMADD^XLFDT(DT,-30)
"RTN","PSXBPSMS",170,0)
 S RX="" F  S RX=$O(^XTMP("PSXBPSMS",1,RX)) Q:'RX  D
"RTN","PSXBPSMS",171,0)
 . S RFL="" F  S RFL=$O(^XTMP("PSXBPSMS",1,RX,RFL)) Q:RFL=""  D
"RTN","PSXBPSMS",172,0)
 .. S TDT="" F  S TDT=$O(^XTMP("PSXBPSMS",1,RX,RFL,TDT)) Q:'TDT  D
"RTN","PSXBPSMS",173,0)
 ... I TDT<FDT K ^XTMP("PSXBPSMS",1,RX,RFL,TDT)
"RTN","PSXBPSMS",174,0)
 Q
"RTN","PSXRPPL")
0^4^B68822537
"RTN","PSXRPPL",1,0)
PSXRPPL ;BIR/WPB,BAB-Gathers data for the CMOP Transmission ;13 Mar 2002  10:31 AM
"RTN","PSXRPPL",2,0)
 ;;2.0;CMOP;**3,23,33,28,40,42,41,48,62,58,66,65,69,70,81**;11 Apr 97;Build 25
"RTN","PSXRPPL",3,0)
 ;Reference to ^PS(52.5,  supported by DBIA #1978
"RTN","PSXRPPL",4,0)
 ;Reference to ^PSRX(     supported by DBIA #1977
"RTN","PSXRPPL",5,0)
 ;Reference to ^PSOHLSN1  supported by DBIA #2385
"RTN","PSXRPPL",6,0)
 ;Reference to ^PSORXL    supported by DBIA #1969
"RTN","PSXRPPL",7,0)
 ;Reference to ^PSOLSET   supported by DBIA #1973
"RTN","PSXRPPL",8,0)
 ;Reference to %ZIS(1     supported by DBIA #290
"RTN","PSXRPPL",9,0)
 ;Reference to %ZIS(2     supported by DBIA #2247
"RTN","PSXRPPL",10,0)
 ;Reference to ^PSSLOCK   supported by DBIA #2789
"RTN","PSXRPPL",11,0)
 ;Reference to ^XTMP("ORLK-" supported by DBIA #4001
"RTN","PSXRPPL",12,0)
 ;Reference to ^BPSUTIL   supported by DBIA #4410
"RTN","PSXRPPL",13,0)
 ;Reference to ^PS(59     supported by DBIA #1976
"RTN","PSXRPPL",14,0)
 ;Reference to $$SELPRT^PSOFDAUT supported by DBIA #5740
"RTN","PSXRPPL",15,0)
 ;
"RTN","PSXRPPL",16,0)
 ;Called from PSXRSUS -Builds ^PSX(550.2,,15,"C" , and returns to PSXRSUS or PSXRTRAN
"RTN","PSXRPPL",17,0)
 ;
"RTN","PSXRPPL",18,0)
SDT ;
"RTN","PSXRPPL",19,0)
 K ^TMP($J,"PSX"),^TMP($J,"PSXDFN")
"RTN","PSXRPPL",20,0)
 K PSXBAT,ZCNT
"RTN","PSXRPPL",21,0)
 I $D(XRTL) D T0^%ZOSV
"RTN","PSXRPPL",22,0)
 S PSXTDIV=PSOSITE,PSXTYP=$S(+$G(PSXCS):"C",1:"N")
"RTN","PSXRPPL",23,0)
 ;
"RTN","PSXRPPL",24,0)
 ; - Submitting prescriptions to ECME (Electronic Claims Mgmt Engine) - 3rd pary
"RTN","PSXRPPL",25,0)
 I $$ECMEON^BPSUTIL(PSXTDIV),$$CMOPON^BPSUTIL(PSXTDIV) D
"RTN","PSXRPPL",26,0)
 . N BPSCNT S BPSCNT=$$SBTECME^PSXRPPL1(PSXTYP,PSXTDIV,PRTDT,PSXDTRG)
"RTN","PSXRPPL",27,0)
 . ; - Wait 15 seconds per prescription sent to ECME (max of 2 hours)
"RTN","PSXRPPL",28,0)
 . I BPSCNT>0 H 60+$S((BPSCNT*15)>7200:7200,1:(BPSCNT*15))
"RTN","PSXRPPL",29,0)
 ;
"RTN","PSXRPPL",30,0)
 ; - Transmitting prescription to CMOP (up to THROUGH DATE)
"RTN","PSXRPPL",31,0)
 K ^TMP("PSXEPHIN",$J)
"RTN","PSXRPPL",32,0)
 S SDT=0 F  S SDT=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT)) S XDFN=0 Q:(SDT>PRTDT)!(SDT'>0)  D
"RTN","PSXRPPL",33,0)
 . F  S XDFN=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,XDFN)) S REC=0 Q:(XDFN'>0)!(XDFN="")  D
"RTN","PSXRPPL",34,0)
 . . F  S REC=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,XDFN,REC)) Q:(REC'>0)!(REC="")  D
"RTN","PSXRPPL",35,0)
 . . . D GETDATA D:$G(RXN) PSOUL^PSSLOCK(RXN),OERRLOCK(RXN)
"RTN","PSXRPPL",36,0)
 ;
"RTN","PSXRPPL",37,0)
 ; - Pulling prescriptions ahead (parameter in OUTPATIENT SITE file #59)
"RTN","PSXRPPL",38,0)
 I $G(PSXBAT),'$G(PSXRTRAN) D CHKDFN^PSXRPPL2(PRTDT)
"RTN","PSXRPPL",39,0)
 I $G(PSXBAT),'$G(PSXRTRAN) D CHKDFN
"RTN","PSXRPPL",40,0)
 ;
"RTN","PSXRPPL",41,0)
 ; - Sends a Mailman message if there were transmission problems with the 3rd Party Payer
"RTN","PSXRPPL",42,0)
 I $D(^TMP("PSXEPHIN",$J)) D ^PSXBPSMS K ^TMP("PSXEPHIN",$J)
"RTN","PSXRPPL",43,0)
 ;
"RTN","PSXRPPL",44,0)
EXIT ;   
"RTN","PSXRPPL",45,0)
 K SDT,DFN,REC,RXNUM,PSXOK,FILNUM,REF,PNAME,CNAME,DIE,DR,NDFN,%,CNT,COM,DTTM,FILL,JJ,PRTDT,PSXDIV,XDFN,NFLAG,CIND,XDFN
"RTN","PSXRPPL",46,0)
 K CHKDT,DAYS,DRUG,DRUGCHK,NM,OPDT,PHARCLK,PHY,PSTAT,PTRA,PTRB,QTY,REL,RXERR,RXF,SFN,PSXDGST,PSXMC,PSXMDT
"RTN","PSXRPPL",47,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV
"RTN","PSXRPPL",48,0)
 K ^TMP("PSXEPHIN",$J)
"RTN","PSXRPPL",49,0)
 Q
"RTN","PSXRPPL",50,0)
GETDATA ;Screens rxs and builds data
"RTN","PSXRPPL",51,0)
 ;PSXOK=1:NOT CMOP DRUG OR DO NOT MAIL,2:TRADENAME,3:WINDOW,4:PRINTED,5:NOT SUSPENDED
"RTN","PSXRPPL",52,0)
 ;PSXOK=6:ALREADY RELEASED,7:DIFFERENT DIVISION,8:BAD DATA IN 52.5
"RTN","PSXRPPL",53,0)
 ;9:CS Mismatch,10:DEA 1 or 2
"RTN","PSXRPPL",54,0)
 I '$D(^PS(52.5,REC,0)) K ^PS(52.5,"AQ",SDT,XDFN,REC),^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,XDFN,REC) Q
"RTN","PSXRPPL",55,0)
 I $P(^PS(52.5,REC,0),"^",7)="" K ^PS(52.5,"AQ",SDT,XDFN,REC),^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,XDFN,REC) Q
"RTN","PSXRPPL",56,0)
 I ($P(^PS(52.5,REC,0),"^",3)'=XDFN) K ^PS(52.5,"AQ",SDT,XDFN,REC),^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,XDFN,REC) Q
"RTN","PSXRPPL",57,0)
 N DFN S DFN=XDFN D DEM^VADPT
"RTN","PSXRPPL",58,0)
 I $G(VADM(6))'="" D DELETE K VADM Q
"RTN","PSXRPPL",59,0)
 S PSXOK=0,NFLAG=0
"RTN","PSXRPPL",60,0)
 S RXN=$P($G(^PS(52.5,REC,0)),"^",1) I RXN="" S PSXOK=8 Q
"RTN","PSXRPPL",61,0)
 S RFL=+$$GET1^DIQ(52.5,REC,9,"I")
"RTN","PSXRPPL",62,0)
 I '$D(^TMP($J,"PSXBAI",DFN)) D
"RTN","PSXRPPL",63,0)
 .S PSXGOOD=$$ADDROK^PSXMISC1(RXN)
"RTN","PSXRPPL",64,0)
 .I 'PSXGOOD S PSXFIRST=1 D  I 'PSXFIRST S PSXOK=8
"RTN","PSXRPPL",65,0)
 ..D CHKACT^PSXMISC1(RXN)
"RTN","PSXRPPL",66,0)
 I PSXOK=8 K RXN Q
"RTN","PSXRPPL",67,0)
 ;
"RTN","PSXRPPL",68,0)
 N EPHQT S EPHQT=0
"RTN","PSXRPPL",69,0)
 I $$PATCH^XPDUTL("PSO*7.0*148") D EPHARM^PSXRPPL2 I EPHQT Q
"RTN","PSXRPPL",70,0)
 D CHKDATA^PSXMISC1
"RTN","PSXRPPL",71,0)
SET Q:(PSXOK=7)!(PSXOK=8)!(PSXOK=9)
"RTN","PSXRPPL",72,0)
 S PNAME=$G(VADM(1))
"RTN","PSXRPPL",73,0)
 I ($G(PSXCSRX)=1)&($G(PSXCS)=1) S ^XTMP("PSXCS",PSOSITE,DT,RXN)=""
"RTN","PSXRPPL",74,0)
 I (PSXOK=0)&(PSXFLAG=1) S ^TMP($J,"PSXDFN",XDFN)="",NFLAG=4 D DQUE,RX550215 Q
"RTN","PSXRPPL",75,0)
 I (PSXOK=0)&(PSXFLAG=2) D RX550215 Q
"RTN","PSXRPPL",76,0)
 I (PSXOK>0)&(PSXOK<7)!(PSXOK=10) D DELETE Q
"RTN","PSXRPPL",77,0)
 Q
"RTN","PSXRPPL",78,0)
 ;
"RTN","PSXRPPL",79,0)
DELETE ; deletes the CMOP STATUS field in PS(52.5, reindex 'AC' x-ref
"RTN","PSXRPPL",80,0)
 L +^PS(52.5,REC):600 Q:'$T
"RTN","PSXRPPL",81,0)
 N DR,DIE,DA S DIE="^PS(52.5,",DA=REC,DR="3///@" D ^DIE
"RTN","PSXRPPL",82,0)
 S ^PS(52.5,"AC",$P(^PS(52.5,REC,0),"^",3),$P(^PS(52.5,REC,0),"^",2),REC)=""
"RTN","PSXRPPL",83,0)
 L -^PS(52.5,REC)
"RTN","PSXRPPL",84,0)
 Q
"RTN","PSXRPPL",85,0)
 ;the rest of the sub-routines go through the ^PSX(550.2,,15,"C"
"RTN","PSXRPPL",86,0)
 ;global and checks for RXs within the days ahead range and
"RTN","PSXRPPL",87,0)
 ;builds the ^PSX(550.2,PSXBAT,
"RTN","PSXRPPL",88,0)
CHKDFN ; use the patient 'C' index under RX multiple in file 550.2 to GET dfn to gather Patients' future RXs
"RTN","PSXRPPL",89,0)
 I '$D(^PSX(550.2,PSXBAT,15,"C")) Q
"RTN","PSXRPPL",90,0)
 S PSXPTNM="" F  S PSXPTNM=$O(^PSX(550.2,PSXBAT,15,"C",PSXPTNM)) Q:PSXPTNM=""  D
"RTN","PSXRPPL",91,0)
 . S XDFN=0 F  S XDFN=$O(^PSX(550.2,PSXBAT,"15","C",PSXPTNM,XDFN)) Q:(XDFN'>0)  D
"RTN","PSXRPPL",92,0)
 . . S SDT=PRTDT F  S SDT=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT)),NDFN=0 Q:(SDT>PSXDTRG)!(SDT="")  D
"RTN","PSXRPPL",93,0)
 . . . F  S NDFN=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,NDFN)),REC=0 Q:NDFN'>0  I NDFN=XDFN D
"RTN","PSXRPPL",94,0)
 . . . . F  S REC=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,NDFN,REC)) Q:REC'>0  D
"RTN","PSXRPPL",95,0)
 . . . . . D GETDATA D:$G(RXN) PSOUL^PSSLOCK(RXN),OERRLOCK(RXN)
"RTN","PSXRPPL",96,0)
 Q
"RTN","PSXRPPL",97,0)
 ;
"RTN","PSXRPPL",98,0)
BEGIN ; Select print device
"RTN","PSXRPPL",99,0)
 I '$D(PSOPAR) D ^PSOLSET
"RTN","PSXRPPL",100,0)
 I $D(PSOLAP),($G(PSOLAP)'=ION) S PSLION=PSOLAP G PROFILE
"RTN","PSXRPPL",101,0)
 W ! S %ZIS("A")="PRINTER 'LABEL' DEVICE:  ",%ZIS("B")="",%ZIS="MQN" D ^%ZIS S PSLION=ION G:POP EXIT
"RTN","PSXRPPL",102,0)
 I $G(IOST)["C-" W !,"You must select a printer!",! G BEGIN
"RTN","PSXRPPL",103,0)
 F J=0,1 S @("PSOBAR"_J)="" I $D(^%ZIS(2,^%ZIS(1,IOS,"SUBTYPE"),"BAR"_J)) S @("PSOBAR"_J)=^("BAR"_J)
"RTN","PSXRPPL",104,0)
 S PSOBARS=PSOBAR1]""&(PSOBAR0]"")&$P(PSOPAR,"^",19)
"RTN","PSXRPPL",105,0)
 K PSOION,J D ^%ZISC I $D(IO("Q")) K IO("Q")
"RTN","PSXRPPL",106,0)
 ;
"RTN","PSXRPPL",107,0)
PROFILE I $D(PSOPROP),($G(PSOPROP)'=ION) G FDAMG
"RTN","PSXRPPL",108,0)
 I $P(PSOPAR,"^",8) S %ZIS="MNQ",%ZIS("A")="Select PROFILE PRINTER: " D ^%ZIS K %ZIS,IO("Q"),IOP G:POP EXIT S PSOPROP=ION D ^%ZISC
"RTN","PSXRPPL",109,0)
 I $G(PSOPROP)=ION W !,"You must select a printer!",! G PROFILE
"RTN","PSXRPPL",110,0)
 ;
"RTN","PSXRPPL",111,0)
FDAMG ; Selects FDA Medication Guide Printer
"RTN","PSXRPPL",112,0)
 I $$GET1^DIQ(59,PSOSITE,134)'="" N FDAPRT S FDAPRT="" D  I FDAPRT="^"!($G(PSOFDAPT)="") S POP=1 G EXIT
"RTN","PSXRPPL",113,0)
 . F  D  Q:FDAPRT'=""
"RTN","PSXRPPL",114,0)
 . . S FDAPRT=$$SELPRT^PSOFDAUT($P($G(PSOFDAPT),"^"))
"RTN","PSXRPPL",115,0)
 . . I FDAPRT="" W $C(7),!,"You must select a valid FDA Medication Guide printer."
"RTN","PSXRPPL",116,0)
 . I FDAPRT'="",(FDAPRT'="^") S PSOFDAPT=FDAPRT
"RTN","PSXRPPL",117,0)
 Q
"RTN","PSXRPPL",118,0)
 ;
"RTN","PSXRPPL",119,0)
PRT ; w auto error trapping
"RTN","PSXRPPL",120,0)
 D NOW^%DTC S DTTM=% K %
"RTN","PSXRPPL",121,0)
 S NM="" F  S NM=$O(^PSX(550.2,PSXBAT,15,"C",NM)) Q:NM=""  D DFN,PPL ;gather patient RXs, print patient RXs
"RTN","PSXRPPL",122,0)
 S DIK="^PSX(550.2,",DA=PSXBAT D ^DIK K PSXBAT
"RTN","PSXRPPL",123,0)
 K CHKDT,CIND,DAYS,DRUG,DRUGCHK,NFLAG,NM,ORD,PDT,PHARCLK,PHY,PSTAT,PTRA,PTRB,QTY,REL,RXERR,RXF,SFN,SIG,SITE,SUS,SUSPT
"RTN","PSXRPPL",124,0)
 Q
"RTN","PSXRPPL",125,0)
DFN S DFN=0,NFLAG=2
"RTN","PSXRPPL",126,0)
 F  S DFN=$O(^PSX(550.2,PSXBAT,15,"C",NM,DFN)),RXN=0 Q:(DFN="")!(DFN'>0)  D
"RTN","PSXRPPL",127,0)
 .F  S RXN=$O(^PSX(550.2,PSXBAT,15,"C",NM,DFN,RXN)),RXF="" Q:(RXN="")!(RXN'>0)  D
"RTN","PSXRPPL",128,0)
 ..F  S RXF=$O(^PSX(550.2,PSXBAT,15,"C",NM,DFN,RXN,RXF)) Q:RXF=""  D BLD
"RTN","PSXRPPL",129,0)
 Q
"RTN","PSXRPPL",130,0)
BLD ;
"RTN","PSXRPPL",131,0)
 S BATRXDA=$O(^PSX(550.2,PSXBAT,15,"B",RXN,0)) D NOW^%DTC S DTTM=%
"RTN","PSXRPPL",132,0)
 S REC=$P(^PSX(550.2,PSXBAT,15,BATRXDA,0),U,5),SUS=$O(^PS(52.5,"B",RXN,0))
"RTN","PSXRPPL",133,0)
 I SUS=REC,+SUS'=0 I 1 ;rx still valid in suspense
"RTN","PSXRPPL",134,0)
 E  D  Q  ;rx gone
"RTN","PSXRPPL",135,0)
 . N DA,DIK S DIK=550.2,DA(1)=PSXBAT,DA=BATRXDA
"RTN","PSXRPPL",136,0)
 . D ^DIK
"RTN","PSXRPPL",137,0)
 S PSOSU(DFN,SUS)=RXN,RXCNTR=$G(RXCNTR)+1,NFLAG=2
"RTN","PSXRPPL",138,0)
 S $P(^PSRX(RXN,0),U,15)=0,$P(^PSRX(RXN,"STA"),U,1)=0
"RTN","PSXRPPL",139,0)
 K % S COM="CMOP Suspense Label "_$S($G(^PS(52.5,SUS,"P"))=0:"Printed",$G(^PS(52.5,SUS,"P"))="":"Printed",1:"Reprinted")_$S($G(^PSRX(RXN,"TYPE"))>0:" (PARTIAL)",1:"")
"RTN","PSXRPPL",140,0)
 D EN^PSOHLSN1(RXN,"SC","ZU",COM)
"RTN","PSXRPPL",141,0)
 S DA=SUS D DQUE K DA
"RTN","PSXRPPL",142,0)
ACTLOG F JJ=0:0 S JJ=$O(^PSRX(RXN,"A",JJ)) Q:'JJ  S CNT=JJ
"RTN","PSXRPPL",143,0)
 S RFCNT=0 F RF=0:0 S RF=$O(^PSRX(RXN,1,RF)) Q:'RF  S RFCNT=$S(RF<6:RF,1:RF+1)
"RTN","PSXRPPL",144,0)
 S CNT=CNT+1,^PSRX(RXN,"A",0)="^52.3DA^"_CNT_"^"_CNT
"RTN","PSXRPPL",145,0)
LOCK L +^PSRX(RXN):600 G:'$T LOCK
"RTN","PSXRPPL",146,0)
 S ^PSRX(RXN,"A",CNT,0)=DTTM_"^S^"_DUZ_"^"_RFCNT_"^"_COM L -^PSRX(RXN)
"RTN","PSXRPPL",147,0)
 K CNT,COM,RFCNT,%,JJ,RF,Y,RXCNTR
"RTN","PSXRPPL",148,0)
 Q
"RTN","PSXRPPL",149,0)
PPL K PPL,PPL1 S ORD="" F  S ORD=$O(PSOSU(ORD)) Q:(ORD="")!(ORD'>0)  D PPL1
"RTN","PSXRPPL",150,0)
 Q
"RTN","PSXRPPL",151,0)
PPL1 ; print patient labels
"RTN","PSXRPPL",152,0)
 F SFN=0:0 S SFN=$O(PSOSU(ORD,SFN)) Q:'SFN  D
"RTN","PSXRPPL",153,0)
 . S:$L($G(PPL))<240 PPL=$P(PSOSU(ORD,SFN),"^")_","_$G(PPL)
"RTN","PSXRPPL",154,0)
 . S:$L($G(PPL))>239 PPL1=$P(PSOSU(ORD,SFN),"^")_","_$G(PPL1)
"RTN","PSXRPPL",155,0)
 . S DFN=$P(^PS(52.5,SFN,0),"^",3)
"RTN","PSXRPPL",156,0)
 S SUSPT=1,PSNP=$S($P(PSOPAR,"^",8):1,1:0) S:$D(PSOPROP) PFIO=PSOPROP
"RTN","PSXRPPL",157,0)
 D QLBL^PSORXL
"RTN","PSXRPPL",158,0)
 I $D(PPL1) S PSNP=0,PPL=PPL1 D QLBL^PSORXL
"RTN","PSXRPPL",159,0)
 K PPL,PPL1,PSOSU(ORD)
"RTN","PSXRPPL",160,0)
 Q
"RTN","PSXRPPL",161,0)
DQUE ; sets the CMOP indicator field, and printed field in 52.5
"RTN","PSXRPPL",162,0)
 L +^PS(52.5,REC):600 G:'$T DQUE
"RTN","PSXRPPL",163,0)
 I NFLAG=4 D
"RTN","PSXRPPL",164,0)
 . S DA=REC,DIE="^PS(52.5,",DR="3////L;4////"_DT D ^DIE K DIE,DA,DR L -^PS(52.5,REC)  ; the rest moved into PSXRTR
"RTN","PSXRPPL",165,0)
 S CIND=$S(NFLAG=1:"X",NFLAG=2:"P",NFLAG=3:"@",1:0)
"RTN","PSXRPPL",166,0)
 I $G(NFLAG)'=2 D
"RTN","PSXRPPL",167,0)
 .S DA=REC,DIE="^PS(52.5,",DR="3////"_CIND_";4////"_DT
"RTN","PSXRPPL",168,0)
 .D ^DIE K DIE,DA,DR
"RTN","PSXRPPL",169,0)
 .S ^PS(52.5,REC,"P")=1,^PS(52.5,"ADL",DT,REC)=""
"RTN","PSXRPPL",170,0)
 I $G(NFLAG)=2 D  ;print label cycle
"RTN","PSXRPPL",171,0)
 . S DA=REC,DIE="^PS(52.5,",DR="3////"_CIND_";4////"_DTTM_";5////"_DUZ_";7////"_RXCNTR
"RTN","PSXRPPL",172,0)
 . D ^DIE K DIE,DA,DR
"RTN","PSXRPPL",173,0)
 . S ^PS(52.5,REC,"P")=1,^PS(52.5,"ADL",$E($P(^PS(52.5,REC,0),"^",8),1,7),REC)=""
"RTN","PSXRPPL",174,0)
 L -^PS(52.5,REC)
"RTN","PSXRPPL",175,0)
 I $G(NFLAG)=2 D EN^PSOHLSN1(RXN,"SC","ZU","CMOP Suspense Label Printed")
"RTN","PSXRPPL",176,0)
 Q
"RTN","PSXRPPL",177,0)
RX550215 ; put RX into RX multiple TRANS 550.215 for PSXBAT
"RTN","PSXRPPL",178,0)
 I '$G(PSXBAT) D BATCH^PSXRSYU ; first time through create batch, & return PSXBAT
"RTN","PSXRPPL",179,0)
 K DD,DO,DIC,DA,DR,D0
"RTN","PSXRPPL",180,0)
 S:'$D(^PSX(550.2,PSXBAT,15,0)) ^PSX(550.2,PSXBAT,15,0)="^550.215P^^"
"RTN","PSXRPPL",181,0)
 S X=RXN,DA(1)=PSXBAT
"RTN","PSXRPPL",182,0)
 S DIC="^PSX(550.2,"_PSXBAT_",15,",DIC("DR")=".02////^S X=RXF;.03////^S X=DFN;.05////^S X=REC",DIC(0)="ZF"
"RTN","PSXRPPL",183,0)
 D FILE^DICN
"RTN","PSXRPPL",184,0)
 S PSXRXTDA=+Y ;RX DA within PSXBAT 'T'ransmission
"RTN","PSXRPPL",185,0)
 K DD,DO,DIC,DA,DR,D0
"RTN","PSXRPPL",186,0)
 Q
"RTN","PSXRPPL",187,0)
OERRLOCK(RXN) ; set XTMP for OERR/CPRS order locking
"RTN","PSXRPPL",188,0)
 I $G(PSXBAT),$G(RXN),$G(PSXRXTDA) I 1
"RTN","PSXRPPL",189,0)
 E  Q
"RTN","PSXRPPL",190,0)
 I $P(^PSX(550.2,PSXBAT,15,PSXRXTDA,0),U,1)'=RXN Q
"RTN","PSXRPPL",191,0)
RXNSET ; set ^XTMP("ORLK-"_ORDER per IA 4001 needs RXN
"RTN","PSXRPPL",192,0)
 Q:'$G(RXN)
"RTN","PSXRPPL",193,0)
 N ORD,NOW,NOW1 S ORD=+$P($G(^PSRX(+$G(RXN),"OR1")),"^",2)
"RTN","PSXRPPL",194,0)
 Q:'ORD
"RTN","PSXRPPL",195,0)
 S NOW=$$NOW^XLFDT,NOW1=$$FMADD^XLFDT(NOW,1)
"RTN","PSXRPPL",196,0)
 S ^XTMP("ORLK-"_+ORD,0)=NOW1_U_NOW_"^CPRS/CMOP RX/Order Lock",^(1)=DUZ_U_$J
"RTN","PSXRPPL",197,0)
 Q
"RTN","PSXRPPL",198,0)
RXNCLEAR ; needs RXN
"RTN","PSXRPPL",199,0)
 Q:'$G(RXN)
"RTN","PSXRPPL",200,0)
 N ORD S ORD=+$P($G(^PSRX(+$G(RXN),"OR1")),"^",2) Q:'ORD
"RTN","PSXRPPL",201,0)
 I $D(^XTMP("ORLK-"_ORD,0)),^(0)["CPRS/CMOP" K ^XTMP("ORLK-"_ORD)
"RTN","PSXRPPL",202,0)
 Q
"RTN","PSXRPPL1")
0^2^B54793601
"RTN","PSXRPPL1",1,0)
PSXRPPL1 ;BIR/WPB - Resets Suspense to Print/Transmit ;10/02/97
"RTN","PSXRPPL1",2,0)
 ;;2.0;CMOP;**3,48,62,66,65,69,73,74,81**;11 Apr 97;Build 25
"RTN","PSXRPPL1",3,0)
 ;Reference to ^PSRX( supported by DBIA #1977
"RTN","PSXRPPL1",4,0)
 ;Reference to File #59  supported by DBIA #1976
"RTN","PSXRPPL1",5,0)
 ;Reference to PSOSURST  supported by DBIA #1970
"RTN","PSXRPPL1",6,0)
 ;Reference to ^PS(52.5, supported by DBIA #1978
"RTN","PSXRPPL1",7,0)
 ;Reference to ^BPSUTIL  supported by DBIA #4410
"RTN","PSXRPPL1",8,0)
 ;Reference to ^PSSLOCK  supported by DBIA #2789
"RTN","PSXRPPL1",9,0)
 ;Reference to ^PSOBPSUT supported by DBIA #4701
"RTN","PSXRPPL1",10,0)
 ;Reference to ^PSOBPSU1 supported by DBIA #4702
"RTN","PSXRPPL1",11,0)
 ;Reference to ^PSOREJUT supported by DBIA #4706
"RTN","PSXRPPL1",12,0)
 ;Reference to ^PSOREJU3 supported by DBIA #5186
"RTN","PSXRPPL1",13,0)
 ;Reference to ^PSOBPSU2 supported by DBIA #4970
"RTN","PSXRPPL1",14,0)
 ;Reference to ^PSOSULB1 supported by DBIA #2478
"RTN","PSXRPPL1",15,0)
 ;Reference to LOG^BPSOSL supported by ICR# 6764
"RTN","PSXRPPL1",16,0)
 ;Reference to IEN59^BPSOSRX supported by ICR# 4412
"RTN","PSXRPPL1",17,0)
 ;
"RTN","PSXRPPL1",18,0)
 ;This routine will reset the Queued flags and the printed flags in
"RTN","PSXRPPL1",19,0)
 ;PS(52.5 to 'Queued' and 'Printed' respectively and either retransmits
"RTN","PSXRPPL1",20,0)
 ;the data to the CMOP or prints the labels.
"RTN","PSXRPPL1",21,0)
START ;initializes local variables
"RTN","PSXRPPL1",22,0)
 I '$D(^XUSEC("PSXCMOPMGR",DUZ)) W !,"You are not authorized to use this option!" Q
"RTN","PSXRPPL1",23,0)
 I '$D(^XUSEC("PSX XMIT",DUZ)) W !,"You are not authorized to use this option!" Q
"RTN","PSXRPPL1",24,0)
 S SWITCH=0
"RTN","PSXRPPL1",25,0)
 K ^TMP($J,"PSX")
"RTN","PSXRPPL1",26,0)
QRY ;initial message and option menu
"RTN","PSXRPPL1",27,0)
 W !
"RTN","PSXRPPL1",28,0)
 S DIR(0)="NAO^1:3:0",DIR("A")="Select (1, 2, 3):  ",DIR("A",1)="  1 - Reset CMOP Batches for Transmission"
"RTN","PSXRPPL1",29,0)
 S DIR("A",2)="  2 - Reprint CMOP Batches",DIR("A",4)="  3 - Standard Reprint Batches from Suspense"
"RTN","PSXRPPL1",30,0)
 S DIR("?")="Enter a number between 1 and 3.",DIR("??")=$S($G(PSXVER):"^D HELP^PSXSRP",1:"^D MSG2^PSXRHLP") D ^DIR K DIR G:(Y<0)!($D(DIRUT)) EXIT S REPLY=Y K Y,X
"RTN","PSXRPPL1",31,0)
 I REPLY=1 S (PSXTRANS,PSXFLAG,SWITCH)=1 G:$G(PSXVER) ^PSXSRST G:'$G(PSXVER) BEGIN
"RTN","PSXRPPL1",32,0)
 I REPLY=2 S (PSXTRANS,PSXFLAG,SWITCH)=2 G:$G(PSXVER) ^PSXSRST G:'$G(PSXVER) BEGIN
"RTN","PSXRPPL1",33,0)
 I REPLY=3 S PSXFLG=1 G START^PSOSURST
"RTN","PSXRPPL1",34,0)
 K REPLY
"RTN","PSXRPPL1",35,0)
 Q
"RTN","PSXRPPL1",36,0)
BEGIN ;confirms CMOP processing, if Yes, checks for active site and status
"RTN","PSXRPPL1",37,0)
 ;in the CMOP System file, if not an active site or the system status
"RTN","PSXRPPL1",38,0)
 ;is not stopped the routine exits and processing stops
"RTN","PSXRPPL1",39,0)
 W !
"RTN","PSXRPPL1",40,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you sure you want to continue",DIR("?",1)="No - Exits."
"RTN","PSXRPPL1",41,0)
 S DIR("?")=$S(SWITCH=1:"Yes - Transmits data to the CMOP.",SWITCH=2:"Yes - Prints labels.",1:0) D ^DIR K DIR G:(Y=0)!($D(DIRUT)) EXIT K Y
"RTN","PSXRPPL1",42,0)
 S STATUS=$P($G(^PSX(550,+PSXSYS,0)),"^",3) I STATUS'="H" W !,"There is another job in process, please try again later." G EXIT
"RTN","PSXRPPL1",43,0)
ASK ;gets date for the resets
"RTN","PSXRPPL1",44,0)
 K BEGDATE,ENDDATE W !!,?10,$S($G(SWITCH)=1:"RESET and TRANSMIT CMOP DATA",$G(SWITCH)=2:"RESET and REPRINT CMOP LABELS",1:""),!!!,"**** Date Selection ****",!!
"RTN","PSXRPPL1",45,0)
ASK1 I SWITCH=1 S %DT="AEX",%DT("A")="   BEGIN DATE:  " D ^%DT K %DT,%DT("A") G:Y<0 EXIT S PRTDT=Y
"RTN","PSXRPPL1",46,0)
 I SWITCH=2 S %DT="AEX",%DT("A")="   BEGIN DATE:  " D ^%DT K %DT,%DT("A") G:Y<0 EXIT S PRTDT=Y
"RTN","PSXRPPL1",47,0)
 W !! S %DT="AEX",%DT("A")="   ENDING DATE:  " D ^%DT Q:Y<0  S PSXDTRG=Y K %DT,%DT("A")
"RTN","PSXRPPL1",48,0)
 I $G(PRTDT)>$G(PSXDTRG) W !,"Begin Date must be before Ending Date!" G ASK1
"RTN","PSXRPPL1",49,0)
 I '$O(^PS(52.5,"AP",PRTDT-1))!($O(^(0))>PSXDTRG) W !!,$S(SWITCH=1:"Nothing to Transmit.",SWITCH=2:"Nothing to Reprint.",1:0) G EXIT
"RTN","PSXRPPL1",50,0)
 D SDT S PSXERFLG=0
"RTN","PSXRPPL1",51,0)
 I SWITCH=1 D PSXTRANS Q
"RTN","PSXRPPL1",52,0)
 I SWITCH=2 D PRINT Q
"RTN","PSXRPPL1",53,0)
 S PSXSTAT="H" D PSXSTAT^PSXRSYU
"RTN","PSXRPPL1",54,0)
 G EXIT
"RTN","PSXRPPL1",55,0)
PSXTRANS ;
"RTN","PSXRPPL1",56,0)
 W !!
"RTN","PSXRPPL1",57,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="DO YOU WISH TO TRANSMIT TO THE CMOP NOW",DIR("?",1)="No - Exits the option.",DIR("?")="Yes - Transmits to the CMOP." D ^DIR K DIR Q:(Y=0)!($D(DIRUT))  K Y
"RTN","PSXRPPL1",58,0)
 S PSXSTAT="T" D PSXSTAT^PSXRSYU,ASK^PSXRSUS
"RTN","PSXRPPL1",59,0)
 Q
"RTN","PSXRPPL1",60,0)
PRINT ;
"RTN","PSXRPPL1",61,0)
 W !!
"RTN","PSXRPPL1",62,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="DO YOU WISH REPRINT CMOP LABELS NOW",DIR("?",1)="No - Exits the option.",DIR("?")="Yes - Reprints CMOP labels." D ^DIR K DIR Q:(Y=0)!($D(DIRUT))  K Y
"RTN","PSXRPPL1",63,0)
 S PSXSTAT="T" D PSXSTAT^PSXRSYU,ASK^PSXRSUS
"RTN","PSXRPPL1",64,0)
 Q
"RTN","PSXRPPL1",65,0)
SDT ;the following subroutines go through the PS(52.5 global and pull the
"RTN","PSXRPPL1",66,0)
 ;data needed to reset the Queued/Printed nodes
"RTN","PSXRPPL1",67,0)
 S SDT=PRTDT-1 F  S SDT=$O(^PS(52.5,"AP",SDT)),DFN=0 Q:(SDT>PSXDTRG)!(SDT="")  D DFN
"RTN","PSXRPPL1",68,0)
 Q
"RTN","PSXRPPL1",69,0)
DFN ;
"RTN","PSXRPPL1",70,0)
 F  S DFN=$O(^PS(52.5,"AP",SDT,DFN)),REC=0 Q:(DFN="")!(DFN'>0)  D REC
"RTN","PSXRPPL1",71,0)
 Q
"RTN","PSXRPPL1",72,0)
REC ;
"RTN","PSXRPPL1",73,0)
 F  S REC=$O(^PS(52.5,"AP",SDT,DFN,REC)) Q:(REC'>0)!(REC="")  D:$G(^PS(52.5,REC,0)) CHECK
"RTN","PSXRPPL1",74,0)
 K ZDIV
"RTN","PSXRPPL1",75,0)
 Q
"RTN","PSXRPPL1",76,0)
CHECK ;
"RTN","PSXRPPL1",77,0)
 S STAT=$P($G(^PS(52.5,REC,0)),U,7),PRINT=$G(^PS(52.5,REC,"P")),PSXPTR=$P($G(^PS(52.5,REC,0)),U,1)
"RTN","PSXRPPL1",78,0)
 S RXF="" F XXF=0:0 S XXF=$O(^PSRX(PSXPTR,1,XXF)) Q:XXF'>0  S RXF=XXF
"RTN","PSXRPPL1",79,0)
 S ZDIV=$S($G(RXF)>0:$P($G(^PSRX(PSXPTR,1,RXF,0)),U,9),1:$P($G(^PSRX(PSXPTR,2)),U,9)) I $G(ZDIV)'=$G(PSOSITE) Q
"RTN","PSXRPPL1",80,0)
 S:RXF'="" GONE=$P($G(^PSRX(PSXPTR,1,RXF,0)),U,18)
"RTN","PSXRPPL1",81,0)
 S:RXF="" GONE=$P($G(^PSRX(PSXPTR,2)),U,13)
"RTN","PSXRPPL1",82,0)
 I (STAT="P")&(PRINT=1)&($G(GONE)="") D RESET
"RTN","PSXRPPL1",83,0)
 K GONE,RXF,XXF
"RTN","PSXRPPL1",84,0)
 Q
"RTN","PSXRPPL1",85,0)
RESET ;resets the Queued/Printed flags to Queued and not Printed
"RTN","PSXRPPL1",86,0)
 L +^PS(52.5,REC):DTIME Q:'$T
"RTN","PSXRPPL1",87,0)
 S DIE="^PS(52.5,",DA=REC,DR="2////2;3////Q" D ^DIE L -^PS(52.5,REC) K DIE,DR,DA
"RTN","PSXRPPL1",88,0)
 S:$G(PSXVER) $P(^PSRX(PSXPTR,"STA"),U,1)=5 S:'$G(PSXVER) $P(^PSRX(PSXPTR,0),U,15)=5 K ^PS(52.5,"AC",DFN,SDT,REC)
"RTN","PSXRPPL1",89,0)
 Q
"RTN","PSXRPPL1",90,0)
PRTERR ; auto error trap for prt cmop local
"RTN","PSXRPPL1",91,0)
 S XXERR=$$EC^%ZOSV
"RTN","PSXRPPL1",92,0)
 S PSXDIVNM=$$GET1^DIQ(59,PSOSITE,.01)
"RTN","PSXRPPL1",93,0)
 ;save an image of the transient file 550.1 for 2 days
"RTN","PSXRPPL1",94,0)
 D NOW^%DTC S DTTM=%
"RTN","PSXRPPL1",95,0)
 S X=$$FMADD^XLFDT(DT,+2) S ^XTMP("PSXERR "_DTTM,0)=X_U_DT_U_"CMOP "_XXERR
"RTN","PSXRPPL1",96,0)
 M ^XTMP("PSXERR "_DTTM,550.1)=^PSX(550.1)
"RTN","PSXRPPL1",97,0)
 S XMSUB="CMOP Error "_PSXDIVNM_" "_$$GET1^DIQ(550.2,+$G(PSXBAT),.01)
"RTN","PSXRPPL1",98,0)
 D GRP1^PSXNOTE
"RTN","PSXRPPL1",99,0)
 ;S XMY(DUZ)=""
"RTN","PSXRPPL1",100,0)
 S XMTEXT="TEXT("
"RTN","PSXRPPL1",101,0)
 S TEXT(1,0)=$S($G(PSXCS):"",1:"NON-")_"CS CMOP Print Local encountered the following error. Please investigate"
"RTN","PSXRPPL1",102,0)
 S TEXT(2,0)="Division:         "_PSXDIVNM
"RTN","PSXRPPL1",103,0)
 S TEXT(3,0)="Type/Batch        "_$S($G(PSXCS):"CS",1:"NON-CS")_" / "_$$GET1^DIQ(550.2,$G(PSXBAT),.01)
"RTN","PSXRPPL1",104,0)
 S TEXT(4,0)="Error:            "_XXERR
"RTN","PSXRPPL1",105,0)
 S TEXT(5,0)="This batch has been set to closed."
"RTN","PSXRPPL1",106,0)
 S TEXT(6,0)="Call NVS to investigate which prescriptions have been printed and which are yet to print."
"RTN","PSXRPPL1",107,0)
 S TEXT(7,0)="A copy of file 550.1 can be found in ^XTMP(""PSXERR "_DTTM_""")"
"RTN","PSXRPPL1",108,0)
 D ^%ZTER
"RTN","PSXRPPL1",109,0)
 D ^XMD
"RTN","PSXRPPL1",110,0)
 I $G(PSXBAT) D
"RTN","PSXRPPL1",111,0)
 . N DA,DIE,DR S DIE="^PSX(550.2,",DA=PSXBAT,DR="1////4"
"RTN","PSXRPPL1",112,0)
 . D ^DIE
"RTN","PSXRPPL1",113,0)
 G UNWIND^%ZTER
"RTN","PSXRPPL1",114,0)
 ;
"RTN","PSXRPPL1",115,0)
SBTECME(PSXTP,PSXDV,THRDT,PULLDT) ; - Sumitting prescriptions to EMCE (3rd Party Billing)
"RTN","PSXRPPL1",116,0)
 ;Input: PSXTP  - Type of prescriptions "C" - Controlled Subs / "N" Non-Controlled Subs
"RTN","PSXRPPL1",117,0)
 ;       PSXDV  - Pointer to DIVSION file (#59)
"RTN","PSXRPPL1",118,0)
 ;       THRDT  - T+N when scheduling the THROUGH DATE to run CMOP Transmission
"RTN","PSXRPPL1",119,0)
 ;       PULLDT - T+N+PULL DAYS parameter in file# 59, OUTPATIENT SITE
"RTN","PSXRPPL1",120,0)
 ;Output:SBTECME- Number of prescriptions submitted to ECME
"RTN","PSXRPPL1",121,0)
 ;
"RTN","PSXRPPL1",122,0)
 N PSOLRX,REC,RESP,RFL,RX,SBTECME,SDT,XDFN
"RTN","PSXRPPL1",123,0)
 ;
"RTN","PSXRPPL1",124,0)
 I '$$ECMEON^BPSUTIL(PSXDV)!'$$CMOPON^BPSUTIL(PSXDV) Q
"RTN","PSXRPPL1",125,0)
 K ^TMP("PSXEPHDFN",$J)
"RTN","PSXRPPL1",126,0)
 S (SDT,SBTECME)=0
"RTN","PSXRPPL1",127,0)
 F  S SDT=$O(^PS(52.5,"CMP","Q",PSXTP,PSXDV,SDT)) S XDFN=0 Q:(SDT>PULLDT)!(SDT'>0)  D
"RTN","PSXRPPL1",128,0)
 . F  S XDFN=$O(^PS(52.5,"CMP","Q",PSXTP,PSXDV,SDT,XDFN)) S REC=0 Q:(XDFN'>0)!(XDFN="")  D
"RTN","PSXRPPL1",129,0)
 . . F  S REC=$O(^PS(52.5,"CMP","Q",PSXTP,PSXDV,SDT,XDFN,REC)) Q:(REC'>0)!(REC="")  D
"RTN","PSXRPPL1",130,0)
 . . . S (PSOLRX,RX)=+$$GET1^DIQ(52.5,REC,.01,"I") I 'RX Q
"RTN","PSXRPPL1",131,0)
 . . . S RFL=$$GET1^DIQ(52.5,REC,9,"I") I RFL="" S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSXRPPL1",132,0)
 . . . I $$XMIT^PSXBPSUT(REC) D
"RTN","PSXRPPL1",133,0)
 . . . . I SDT>THRDT,'$D(^TMP("PSXEPHDFN",$J,XDFN)) Q
"RTN","PSXRPPL1",134,0)
 . . . . I $$PATCH^XPDUTL("PSO*7.0*148") D
"RTN","PSXRPPL1",135,0)
 . . . . . I $$RETRX^PSOBPSUT(RX,RFL),SDT>DT Q
"RTN","PSXRPPL1",136,0)
 . . . . . I $$DOUBLE(RX,RFL) Q
"RTN","PSXRPPL1",137,0)
 . . . . . I $$FIND^PSOREJUT(RX,RFL,,"79,88",,1) Q
"RTN","PSXRPPL1",138,0)
 . . . . . I '$$RETRX^PSOBPSUT(RX,RFL),'$$ECMESTAT^PSXRPPL2(RX,RFL) Q
"RTN","PSXRPPL1",139,0)
 . . . . . I $$PATCH^XPDUTL("PSO*7.0*289") Q:'$$DUR^PSXRPPL2(RX,RFL)  ;ePharm Host error hold
"RTN","PSXRPPL1",140,0)
 . . . . . I $$PATCH^XPDUTL("PSO*7.0*289"),RFL>0,$$STATUS^PSOBPSUT(RX,RFL-1)'="" Q:'$$DSH^PSXRPPL2(REC)  ;ePharm 3/4 days supply (refill)
"RTN","PSXRPPL1",141,0)
 . . . . . I $$PATCH^XPDUTL("PSO*7.0*289"),RFL=0 Q:'$$DSH^PSXRPPL2(REC)  ;ePharm 3/4 days supply (original fill)
"RTN","PSXRPPL1",142,0)
 . . . . . D ECMESND^PSOBPSU1(RX,RFL,"","PC",,1,,,,.RESP)
"RTN","PSXRPPL1",143,0)
 . . . . . ;
"RTN","PSXRPPL1",144,0)
 . . . . . D LOG^BPSOSL($$IEN59^BPSOSRX(RX,RFL),$T(+0)_"-SBTECME, RESP="_$P(RESP,"^",4))  ; ICR #4412,6764
"RTN","PSXRPPL1",145,0)
 . . . . . ;
"RTN","PSXRPPL1",146,0)
 . . . . . I $D(RESP),'RESP S SBTECME=SBTECME+1
"RTN","PSXRPPL1",147,0)
 . . . . . S ^TMP("PSXEPHDFN",$J,XDFN)=""
"RTN","PSXRPPL1",148,0)
 . . . D PSOUL^PSSLOCK(PSOLRX)
"RTN","PSXRPPL1",149,0)
 K ^TMP("PSXEPHDFN",$J)
"RTN","PSXRPPL1",150,0)
 Q SBTECME
"RTN","PSXRPPL1",151,0)
 ;
"RTN","PSXRPPL1",152,0)
DOUBLE(RX,RFL) ; Checks if previous fill is still being worked on by CMOP
"RTN","PSXRPPL1",153,0)
 ;Input: (r) RX  - Prescription IEN
"RTN","PSXRPPL1",154,0)
 ;       (r) RFL - Fill number
"RTN","PSXRPPL1",155,0)
 ;Output:    0 - Previous fill not with CMOP / 1 - CMOP working on previous fill
"RTN","PSXRPPL1",156,0)
 N CMP,DOUBLE,STS
"RTN","PSXRPPL1",157,0)
 ; 
"RTN","PSXRPPL1",158,0)
 I 'RFL!'$D(^PSRX(RX,4)) Q 0
"RTN","PSXRPPL1",159,0)
 I $$STATUS^PSOBPSUT(RX,RFL-1)="" Q 0
"RTN","PSXRPPL1",160,0)
 S DOUBLE=0,CMP=999
"RTN","PSXRPPL1",161,0)
 F  S CMP=$O(^PSRX(RX,4,CMP),-1) Q:'CMP  D  I DOUBLE Q
"RTN","PSXRPPL1",162,0)
 . I $$GET1^DIQ(52.01,CMP_","_RX,2,"I")'=(RFL-1) Q
"RTN","PSXRPPL1",163,0)
 . S STS=$$GET1^DIQ(52.01,CMP_","_RX,3,"I")
"RTN","PSXRPPL1",164,0)
 . I STS=0!(STS=2) S DOUBLE=1
"RTN","PSXRPPL1",165,0)
 Q DOUBLE
"RTN","PSXRPPL1",166,0)
 ;
"RTN","PSXRPPL1",167,0)
EXIT ;
"RTN","PSXRPPL1",168,0)
 K DFN,PSXDAYS,PSXDTRG,SWITCH,STAT,PRINT,PSXTRANS,REC,REPLY,SDT,X,X1,X2,Y,ANSWER,STATUS,PSXFLAG,PSXPTR,PSXSTAT
"RTN","PSXRPPL1",169,0)
 K DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","PSXRPPL1",170,0)
 Q
"RTN","PSXRPPL2")
0^3^B72029409
"RTN","PSXRPPL2",1,0)
PSXRPPL2 ;BIR/WPB - Print From Suspense Utilities ;06/10/08
"RTN","PSXRPPL2",2,0)
 ;;2.0;CMOP;**65,69,73,74,79,81**;11 Apr 97;Build 25
"RTN","PSXRPPL2",3,0)
 ;Reference to ^PSRX( supported by DBIA #1977
"RTN","PSXRPPL2",4,0)
 ;Reference to ^PS(52.5, supported by DBIA #1978
"RTN","PSXRPPL2",5,0)
 ;Reference to ^PSSLOCK  supported by DBIA #2789
"RTN","PSXRPPL2",6,0)
 ;Reference to ^PSOBPSUT supported by DBIA #4701
"RTN","PSXRPPL2",7,0)
 ;Reference to ^PSOBPSU1 supported by DBIA #4702
"RTN","PSXRPPL2",8,0)
 ;Reference to ^PSOBPSU2 supported by DBIA #4970
"RTN","PSXRPPL2",9,0)
 ;Reference to ^PSOREJUT supported by DBIA #4706
"RTN","PSXRPPL2",10,0)
 ;Reference to ^PSOREJU3 supported by DBIA #5186
"RTN","PSXRPPL2",11,0)
 ;Reference to CHANGE^PSOSUCH1 supported by DBIA #5427
"RTN","PSXRPPL2",12,0)
 ;Reference to PREVRX^PSOREJP2 supported by DBIA #5912
"RTN","PSXRPPL2",13,0)
 ;Reference to $$BILLABLE^IBNCPDP supported by DBIA #6243
"RTN","PSXRPPL2",14,0)
 ;Reference to LOG^BPSOSL supported by ICR# 6764
"RTN","PSXRPPL2",15,0)
 ;Reference to IEN59^BPSOSRX supported by ICR# 4412
"RTN","PSXRPPL2",16,0)
 ;
"RTN","PSXRPPL2",17,0)
CHKDFN(THRDT) ; use the patient 'C' index under RX multiple in file 550.2 to GET dfn to gather Patients' future RXs
"RTN","PSXRPPL2",18,0)
 ;Input: THRDT - THROUGH DATE to run CMOP transmission
"RTN","PSXRPPL2",19,0)
 ;
"RTN","PSXRPPL2",20,0)
 ; This procedure assumes the following variables to exist:
"RTN","PSXRPPL2",21,0)
 ;   PRTDT = Transmit/Print data through this date
"RTN","PSXRPPL2",22,0)
 ;   PSXBAT = Batch, pointer to file#550.2, CMOP Transmission
"RTN","PSXRPPL2",23,0)
 ;   PSXDTRG = Pull ahead through date
"RTN","PSXRPPL2",24,0)
 ;   PSXTDIV = Division
"RTN","PSXRPPL2",25,0)
 ;   PSXTYP = "C" if running for Controlled Substance, "N" otherwise
"RTN","PSXRPPL2",26,0)
 ;
"RTN","PSXRPPL2",27,0)
 N NDFN,PSOLRX,PSXPTNM,REC,RESP,RFL,RX,SBTECME,SDT,XDFN
"RTN","PSXRPPL2",28,0)
 ;
"RTN","PSXRPPL2",29,0)
 I '$D(^PSX(550.2,PSXBAT,15,"C")) Q
"RTN","PSXRPPL2",30,0)
 S SBTECME=0
"RTN","PSXRPPL2",31,0)
 K ^TMP("PSXEPHDFN",$J)
"RTN","PSXRPPL2",32,0)
 S PSXPTNM=""
"RTN","PSXRPPL2",33,0)
 F  S PSXPTNM=$O(^PSX(550.2,PSXBAT,15,"C",PSXPTNM)) Q:PSXPTNM=""  D
"RTN","PSXRPPL2",34,0)
 . S XDFN=0
"RTN","PSXRPPL2",35,0)
 . F  S XDFN=$O(^PSX(550.2,PSXBAT,"15","C",PSXPTNM,XDFN)) Q:(XDFN'>0)  D
"RTN","PSXRPPL2",36,0)
 . . S SDT=PRTDT
"RTN","PSXRPPL2",37,0)
 . . F  S SDT=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT)) Q:(SDT>PSXDTRG)!(SDT="")  D
"RTN","PSXRPPL2",38,0)
 . . . S NDFN=0
"RTN","PSXRPPL2",39,0)
 . . . F  S NDFN=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,NDFN)) Q:NDFN'>0  I NDFN=XDFN D
"RTN","PSXRPPL2",40,0)
 . . . . S REC=0
"RTN","PSXRPPL2",41,0)
 . . . . F  S REC=$O(^PS(52.5,"CMP","Q",PSXTYP,PSXTDIV,SDT,NDFN,REC)) Q:REC'>0  D
"RTN","PSXRPPL2",42,0)
 . . . . . S (PSOLRX,RX)=+$$GET1^DIQ(52.5,REC,.01,"I") I 'RX Q
"RTN","PSXRPPL2",43,0)
 . . . . . S RFL=$$GET1^DIQ(52.5,REC,9,"I") I RFL="" S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSXRPPL2",44,0)
 . . . . . I $$XMIT^PSXBPSUT(REC) D
"RTN","PSXRPPL2",45,0)
 . . . . . . I SDT>THRDT,'$D(^TMP("PSXEPHDFN",$J,XDFN)) Q
"RTN","PSXRPPL2",46,0)
 . . . . . . I $$PATCH^XPDUTL("PSO*7.0*148") D
"RTN","PSXRPPL2",47,0)
 . . . . . . . I $$RETRX^PSOBPSUT(RX,RFL),SDT>DT Q
"RTN","PSXRPPL2",48,0)
 . . . . . . . I $$DOUBLE^PSXRPPL1(RX,RFL) Q
"RTN","PSXRPPL2",49,0)
 . . . . . . . I $$FIND^PSOREJUT(RX,RFL,,"79,88",,1) Q
"RTN","PSXRPPL2",50,0)
 . . . . . . . I '$$RETRX^PSOBPSUT(RX,RFL),$$ECMESTAT(RX,RFL) Q
"RTN","PSXRPPL2",51,0)
 . . . . . . . I $$PATCH^XPDUTL("PSO*7.0*289"),'$$DUR(RX,RFL),'$$DSH(REC) Q
"RTN","PSXRPPL2",52,0)
 . . . . . . . D ECMESND^PSOBPSU1(RX,RFL,"","PC",,1,,,,.RESP)
"RTN","PSXRPPL2",53,0)
 . . . . . . . ;
"RTN","PSXRPPL2",54,0)
 . . . . . . . D LOG^BPSOSL($$IEN59^BPSOSRX(RX,RFL),$T(+0)_"-CHKDFN, RESP="_$P(RESP,"^",4))  ; ICR #4412,6764
"RTN","PSXRPPL2",55,0)
 . . . . . . . ;
"RTN","PSXRPPL2",56,0)
 . . . . . . . I $D(RESP),'RESP S SBTECME=SBTECME+1
"RTN","PSXRPPL2",57,0)
 . . . . . . . S ^TMP("PSXEPHDFN",$J,XDFN)=""
"RTN","PSXRPPL2",58,0)
 . . . . . D PSOUL^PSSLOCK(PSOLRX)
"RTN","PSXRPPL2",59,0)
 K ^TMP("PSXEPHDFN",$J)
"RTN","PSXRPPL2",60,0)
 I SBTECME>0 H 60+$S((SBTECME*15)>7200:7200,1:(SBTECME*15))
"RTN","PSXRPPL2",61,0)
 Q
"RTN","PSXRPPL2",62,0)
 ;
"RTN","PSXRPPL2",63,0)
 ; EPHARM is called only by GETDATA^PSXRPPL.  The variable EPHQT is
"RTN","PSXRPPL2",64,0)
 ; Newed in GETDATA.  If EPHQT is set to 1 here, then GETDATA does
"RTN","PSXRPPL2",65,0)
 ; not continue processing the current Rx/Fill; this Rx/Fill will
"RTN","PSXRPPL2",66,0)
 ; not be sent to CMOP if EPHQT is set to 1 here.
"RTN","PSXRPPL2",67,0)
 ;
"RTN","PSXRPPL2",68,0)
EPHARM ; - ePharmacy checks for third party billing
"RTN","PSXRPPL2",69,0)
 ;
"RTN","PSXRPPL2",70,0)
 ; If CMOP is still processing the previous fill ($$DOUBLE), or if the
"RTN","PSXRPPL2",71,0)
 ; RE-TRANSMIT flag is 'Yes' and the send date is in the future, or if
"RTN","PSXRPPL2",72,0)
 ; this prescription has an unresolved 79,88, or RRR reject, then Set
"RTN","PSXRPPL2",73,0)
 ; EPHQT to 1 and Quit.  This Rx/Fill will not be sent to CMOP.
"RTN","PSXRPPL2",74,0)
 ;
"RTN","PSXRPPL2",75,0)
 I $$DOUBLE^PSXRPPL1(RXN,RFL) S EPHQT=1 Q
"RTN","PSXRPPL2",76,0)
 I $$RETRX^PSOBPSUT(RXN,RFL),SDT>DT S EPHQT=1 Q
"RTN","PSXRPPL2",77,0)
 I $$FIND^PSOREJUT(RXN,RFL,,"79,88",,1) S EPHQT=1 Q
"RTN","PSXRPPL2",78,0)
 ;
"RTN","PSXRPPL2",79,0)
 ; $$TRISTA performs checks specific to TRICARE/CHAMPVA.  If the claim
"RTN","PSXRPPL2",80,0)
 ; was rejected or is still "IN PROGRESS", or if it is non-billable,
"RTN","PSXRPPL2",81,0)
 ; then add this Rx to the ^TMP("PSXEPHIN") array and quit.
"RTN","PSXRPPL2",82,0)
 ;
"RTN","PSXRPPL2",83,0)
 I $$PATCH^XPDUTL("PSO*7.0*287"),$$TRISTA^PSOREJU3(RXN,RFL,.RESP,"PC") D EPH Q
"RTN","PSXRPPL2",84,0)
 ;
"RTN","PSXRPPL2",85,0)
 ; If the claim is still "IN PROGRESS", then add this Rx to the
"RTN","PSXRPPL2",86,0)
 ; ^TMP("PSXEPHIN") array and quit.
"RTN","PSXRPPL2",87,0)
 ;
"RTN","PSXRPPL2",88,0)
 I $$STATUS^PSOBPSUT(RXN,RFL)="IN PROGRESS" D EPH Q
"RTN","PSXRPPL2",89,0)
 ;
"RTN","PSXRPPL2",90,0)
 ; If this Prescription violates the 3/4 supply (i.e. if it is too soon
"RTN","PSXRPPL2",91,0)
 ; to refill), then Set EPHQT to 1 and Quit.  This Rx/Fill will not be
"RTN","PSXRPPL2",92,0)
 ; sent to CMOP.
"RTN","PSXRPPL2",93,0)
 ;
"RTN","PSXRPPL2",94,0)
 I $$PATCH^XPDUTL("PSO*7.0*289"),'$$DSH(REC) S EPHQT=1 Q
"RTN","PSXRPPL2",95,0)
 ;
"RTN","PSXRPPL2",96,0)
 ; If there is a host reject for this Rx/Fill, then add this Rx to the
"RTN","PSXRPPL2",97,0)
 ; ^TMP("PSXEPHIN") array and quit.
"RTN","PSXRPPL2",98,0)
 ;
"RTN","PSXRPPL2",99,0)
 I $$PATCH^XPDUTL("PSO*7.0*289"),'$$DUR(RXN,RFL) D EPH Q
"RTN","PSXRPPL2",100,0)
 Q
"RTN","PSXRPPL2",101,0)
 ;
"RTN","PSXRPPL2",102,0)
 ; EPH is called only by EPHARM, above.  It adds a prescriptions to the
"RTN","PSXRPPL2",103,0)
 ; ^TMP("PSXEPHIN") array.  Of those Prescriptions not sent to the CMOP
"RTN","PSXRPPL2",104,0)
 ; facility and left in the suspense queue, some are added to this
"RTN","PSXRPPL2",105,0)
 ; array.  Those in this array will be listed in the email sent to users
"RTN","PSXRPPL2",106,0)
 ; indicating that they were left in the queue (see ^PSXBPSMS).  That
"RTN","PSXRPPL2",107,0)
 ; email states these Rxs were not transmitted to the CMOP facility
"RTN","PSXRPPL2",108,0)
 ; because either a) a response from the payer was not received, or b)
"RTN","PSXRPPL2",109,0)
 ; the Rx is non-billable.
"RTN","PSXRPPL2",110,0)
 ;
"RTN","PSXRPPL2",111,0)
EPH ; - Store Rx not xmitted to CMOP in XTMP file for MailMan message.
"RTN","PSXRPPL2",112,0)
 S ^TMP("PSXEPHIN",$J,$$RXSITE^PSOBPSUT(RXN),RXN)=RFL,EPHQT=1
"RTN","PSXRPPL2",113,0)
 Q
"RTN","PSXRPPL2",114,0)
 ;
"RTN","PSXRPPL2",115,0)
 ;Description:
"RTN","PSXRPPL2",116,0)
 ;This function checks the Rx's ECME Status to determine if it's acceptable to resubmit
"RTN","PSXRPPL2",117,0)
 ;based on reject codes associated with a previous submission. If Rx was rejected with
"RTN","PSXRPPL2",118,0)
 ;host reject errors, and no other rejects exist, then it's OK to resubmit to ECME.
"RTN","PSXRPPL2",119,0)
 ;Input: RX = Prescription file #52 IEN
"RTN","PSXRPPL2",120,0)
 ; RFL = Refill number
"RTN","PSXRPPL2",121,0)
 ;Returns: 1 = OK to resubmit
"RTN","PSXRPPL2",122,0)
 ;0 = Don't resubmit
"RTN","PSXRPPL2",123,0)
ECMESTAT(RX,RFL) ;
"RTN","PSXRPPL2",124,0)
 I '$$PATCH^XPDUTL("PSO*7.0*148") Q 0
"RTN","PSXRPPL2",125,0)
 N STATUS,HERR,CHDAT
"RTN","PSXRPPL2",126,0)
 S STATUS=$$STATUS^PSOBPSUT(RX,RFL)
"RTN","PSXRPPL2",127,0)
 ; Never submitted before, OK to resubmit
"RTN","PSXRPPL2",128,0)
 I STATUS=""!(STATUS["UNSTRANDED") Q 1
"RTN","PSXRPPL2",129,0)
 ; If status other than E REJECTED, don't resubmit
"RTN","PSXRPPL2",130,0)
 I STATUS'="E REJECTED" Q 0
"RTN","PSXRPPL2",131,0)
 ; check for a previous host reject:
"RTN","PSXRPPL2",132,0)
 ;  1 - if host reject date expired allow to print; 0 - if not expired don't print
"RTN","PSXRPPL2",133,0)
 ;    2 - if not defined allow to continue with evaluation for new host reject
"RTN","PSXRPPL2",134,0)
 S CHDAT=$$CHHEDT(RX,RFL) Q:CHDAT=1 1 Q:CHDAT=0 0
"RTN","PSXRPPL2",135,0)
 ;*****************************************************************************************************
"RTN","PSXRPPL2",136,0)
 ;   NOTE: MAKE SURE THAT IGNORED REJECTS WILL PROCESS WHENEVER MODIFICATIONS ARE MADE TO HOST REJECT 
"RTN","PSXRPPL2",137,0)
 ;         Ignored rejects are handled by default when this subroutine Q 0 at the end.
"RTN","PSXRPPL2",138,0)
 ;*****************************************************************************************************
"RTN","PSXRPPL2",139,0)
  ; check host rejects
"RTN","PSXRPPL2",140,0)
 S HERR=$$HOSTREJ(RX,RFL,0)
"RTN","PSXRPPL2",141,0)
 I HERR&(CHDAT=2) D SHDTLOG(RX,RFL) Q 0  ;Host reject and no suspense hold date defined yet; define it and don't resubmit
"RTN","PSXRPPL2",142,0)
 I HERR&(CHDAT) Q 1  ;Host reject & suspense hold date has expired; resubmit
"RTN","PSXRPPL2",143,0)
 Q 0  ;NOTE - IF YOU CHANGE THIS Q 0, IGNORED REJECTS WILL RESUBMIT AND REJECT AGAIN WHICH IS VERY BAD.
"RTN","PSXRPPL2",144,0)
 ;
"RTN","PSXRPPL2",145,0)
 ;Description: 
"RTN","PSXRPPL2",146,0)
 ;This function determines whether the RX SUSPENSE has a DAYS SUPPLY HOLD
"RTN","PSXRPPL2",147,0)
 ;condition.
"RTN","PSXRPPL2",148,0)
 ;Input: REC = Pointer to Suspense file (#52.5)
"RTN","PSXRPPL2",149,0)
 ;Returns: 1 or 0
"RTN","PSXRPPL2",150,0)
 ;1 (one) if 3/4 of days supply has elapsed.
"RTN","PSXRPPL2",151,0)
 ;0 (zero) is returned if 3/4 of days supply has not elapsed. 
"RTN","PSXRPPL2",152,0)
 ;
"RTN","PSXRPPL2",153,0)
DSH(REC) ;ePharmacy API to check for 3/4 days supply hold
"RTN","PSXRPPL2",154,0)
 N PSINSUR,PSARR,SHDT,DSHOLD,DSHDT,PS0,COMM,DIE,DA,DR,RXIEN,RFL,DAYSSUP,LSTFIL,PTDFN,IBINS,DRG
"RTN","PSXRPPL2",155,0)
 N SFN,SDT,ELIG,PREVRX
"RTN","PSXRPPL2",156,0)
 S DSHOLD=1,PS0=^PS(52.5,REC,0),RXIEN=$P(PS0,U,1),RFL=$P(PS0,U,13)
"RTN","PSXRPPL2",157,0)
 S LSTFIL=$$LSTRFL^PSOBPSU1(RXIEN),PTDFN=$$GET1^DIQ(52,RXIEN,"2","I")
"RTN","PSXRPPL2",158,0)
 I RFL="" S RFL=LSTFIL
"RTN","PSXRPPL2",159,0)
 S IBSTAT=$$INSUR^IBBAPI(PTDFN,,"E",.IBINS,"1"),DRG=$$GET1^DIQ(52,RXIEN,"6","I")
"RTN","PSXRPPL2",160,0)
 S ELIG=$S(RFL:$P($G(^PSRX(+RXIEN,1,RFL,"EPH")),U,5),1:$P($G(^PSRX(+RXIEN,"EPH")),U,5))
"RTN","PSXRPPL2",161,0)
 ;
"RTN","PSXRPPL2",162,0)
 ; Don't hold Rx where the previous fill was not ebillable
"RTN","PSXRPPL2",163,0)
 I LSTFIL>0,$$STATUS^BPSOSRX(RXIEN,LSTFIL-1)="" Q DSHOLD
"RTN","PSXRPPL2",164,0)
 ; Don't hold when the Rx has SC/EI flagged
"RTN","PSXRPPL2",165,0)
 I $P($G(^PSRX(RXIEN,"ICD",1,0)),U,2,10)[1 Q DSHOLD
"RTN","PSXRPPL2",166,0)
 ; Don't hold rx if drug is non-billable
"RTN","PSXRPPL2",167,0)
 I '$$BILLABLE^IBNCPDP(DRG,ELIG) Q DSHOLD ; IA# 6243
"RTN","PSXRPPL2",168,0)
 ; Don't hold if no insurance
"RTN","PSXRPPL2",169,0)
 I 'IBSTAT!(IBSTAT=-1) Q DSHOLD
"RTN","PSXRPPL2",170,0)
 ;
"RTN","PSXRPPL2",171,0)
 S DSHDT=$$DSHDT(RXIEN,RFL) ; 3/4 of days supply date
"RTN","PSXRPPL2",172,0)
 S PREVRX=$P(DSHDT,U,2)
"RTN","PSXRPPL2",173,0)
 S DSHDT=$P(DSHDT,U)
"RTN","PSXRPPL2",174,0)
 I DSHDT>DT S DSHOLD=0 D
"RTN","PSXRPPL2",175,0)
 . I DSHDT'=$P(PS0,U,14) D  ; Update Suspense Hold Date and Activity Log
"RTN","PSXRPPL2",176,0)
 . . ; MRD;PSX*2.0*79 - If a previous Rx is used in the 3/4 days' supply
"RTN","PSXRPPL2",177,0)
 . . ; calculation, capture that Rx in the activity log.
"RTN","PSXRPPL2",178,0)
 . . S COMM="3/4 of Days Supply SUSPENSE HOLD until "_$$FMTE^XLFDT(DSHDT,"2D")
"RTN","PSXRPPL2",179,0)
 . . I PREVRX'="" S COMM=COMM_" (prior Rx "_PREVRX_")"
"RTN","PSXRPPL2",180,0)
 . . S COMM=COMM_"."
"RTN","PSXRPPL2",181,0)
 . . S DAYSSUP=$$LFDS(RXIEN)
"RTN","PSXRPPL2",182,0)
 . . D RXACT^PSOBPSU2(RXIEN,RFL,COMM,"S",+$G(DUZ)) ; Update Activity Log
"RTN","PSXRPPL2",183,0)
 . . S DR="10///^S X=DSHDT",DIE="^PS(52.5,",DA=REC D ^DIE ; File Suspense Hold Date
"RTN","PSXRPPL2",184,0)
 . . N DA,DIE,DR,PSOX,SFN,INDT,DEAD,RXREC,SUB,XOK,OLD
"RTN","PSXRPPL2",185,0)
 . . S DA=REC,DIE="^PS(52.5,",DR=".02///"_DSHDT D ^DIE
"RTN","PSXRPPL2",186,0)
 . . S SFN=REC,DEAD=0,INDT=DSHDT D CHANGE^PSOSUCH1(RXIEN,RFL)
"RTN","PSXRPPL2",187,0)
 . . Q
"RTN","PSXRPPL2",188,0)
 . Q
"RTN","PSXRPPL2",189,0)
 Q DSHOLD
"RTN","PSXRPPL2",190,0)
 ;
"RTN","PSXRPPL2",191,0)
DSHDT(RXIEN,RFL) ; ePharmacy function to determine the 3/4 of the days supply date
"RTN","PSXRPPL2",192,0)
 ; Input: RXIEN = Prescription file #52 ien
"RTN","PSXRPPL2",193,0)
 ;          RFL = fill#
"RTN","PSXRPPL2",194,0)
 ; Returns: DATE value of last date of service plus 3/4 of days supply
"RTN","PSXRPPL2",195,0)
 ;         PREVRX = Previous Rx if PREVRX^PSOREJP2 identified one that
"RTN","PSXRPPL2",196,0)
 ;                  should be used in the 3/4 days' supply calculation.
"RTN","PSXRPPL2",197,0)
 ;
"RTN","PSXRPPL2",198,0)
 N FILLDT,DAYSSUP,DSH34,PREVRX
"RTN","PSXRPPL2",199,0)
 I '$D(^PSRX(RXIEN,0)) Q -1
"RTN","PSXRPPL2",200,0)
 I $G(RFL)="" Q -1
"RTN","PSXRPPL2",201,0)
 ;
"RTN","PSXRPPL2",202,0)
 D PREVRX^PSOREJP2(RXIEN,RFL,,.FILLDT,.DAYSSUP,.PREVRX)     ; DBIA #5912
"RTN","PSXRPPL2",203,0)
 I FILLDT="" Q -1
"RTN","PSXRPPL2",204,0)
 ;
"RTN","PSXRPPL2",205,0)
 S DSH34=DAYSSUP*.75 ; 3/4 of Days Supply
"RTN","PSXRPPL2",206,0)
 S:DSH34["." DSH34=(DSH34+1)\1
"RTN","PSXRPPL2",207,0)
 ; Return last date of service plus 3/4 of Days Supply date
"RTN","PSXRPPL2",208,0)
 ; and the previous Rx used in the calculation, if any.
"RTN","PSXRPPL2",209,0)
 Q $$FMADD^XLFDT(FILLDT,DSH34)_U_PREVRX
"RTN","PSXRPPL2",210,0)
 ;
"RTN","PSXRPPL2",211,0)
 ; Description: This function returns the DAYS SUPPLY for the Latest Fill
"RTN","PSXRPPL2",212,0)
 ; for a Prescription
"RTN","PSXRPPL2",213,0)
 ; Input: RXIEN = Prescription file #52 IEN
"RTN","PSXRPPL2",214,0)
 ; Returns: DAYS SUPPLY for the latest fill
"RTN","PSXRPPL2",215,0)
 ;          -1 if RXIEN is not valid
"RTN","PSXRPPL2",216,0)
LFDS(RXIEN) ;
"RTN","PSXRPPL2",217,0)
 N RXFIL
"RTN","PSXRPPL2",218,0)
 Q:'$D(^PSRX(RXIEN)) -1
"RTN","PSXRPPL2",219,0)
 S RXFIL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSXRPPL2",220,0)
 Q $S(RXFIL=0:$P(^PSRX(RXIEN,0),U,8),1:$P(^PSRX(RXIEN,1,RXFIL,0),U,10))
"RTN","PSXRPPL2",221,0)
 ;
"RTN","PSXRPPL2",222,0)
 ;
"RTN","PSXRPPL2",223,0)
 ;Description: ePharmacy API to check for host errors.
"RTN","PSXRPPL2",224,0)
 ;Input: RX = Prescription file #52 IEN
"RTN","PSXRPPL2",225,0)
 ; RFL = Refill number
"RTN","PSXRPPL2",226,0)
 ;Returns: A value of 0 (zero) will be returned when reject codes M6, M8,
"RTN","PSXRPPL2",227,0)
 ;NN, and 99 are present OR if on susp hold which means the prescription should not 
"RTN","PSXRPPL2",228,0)
 ;be sent to CMOP. Otherwise, a value of 1(one) will be returned.
"RTN","PSXRPPL2",229,0)
DUR(RX,RFL) ;
"RTN","PSXRPPL2",230,0)
 N REJ,IDX,TXT,CODE,SHCODE,SHDT,CHDAT1
"RTN","PSXRPPL2",231,0)
 S IDX=""
"RTN","PSXRPPL2",232,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSXRPPL2",233,0)
 ; check for a previous host reject:
"RTN","PSXRPPL2",234,0)
 ;  1 - if host reject date expired allow to print; 0 - if not expired don't print
"RTN","PSXRPPL2",235,0)
 ;    2 - if not defined allow to continue with evaluation for new host reject
"RTN","PSXRPPL2",236,0)
 S CHDAT1=$$CHHEDT(RX,RFL) Q:CHDAT1=1 1 Q:CHDAT1=0 0  ;Otherwise continue on to check for a new host reject
"RTN","PSXRPPL2",237,0)
 ; If a host reject exists and no previous Susp Hold Date or log entry,
"RTN","PSXRPPL2",238,0)
 ;    create the log entry and hold rx/fill.
"RTN","PSXRPPL2",239,0)
 S HERR=$$HOSTREJ(RX,RFL,1)
"RTN","PSXRPPL2",240,0)
 I HERR,SHDT="" D SHDTLOG(RX,RFL) Q 0
"RTN","PSXRPPL2",241,0)
 Q:HERR 0
"RTN","PSXRPPL2",242,0)
 Q 1
"RTN","PSXRPPL2",243,0)
 ;
"RTN","PSXRPPL2",244,0)
CHHEDT(RX,RFL) ;
"RTN","PSXRPPL2",245,0)
 ; RX = Prescription File IEN
"RTN","PSXRPPL2",246,0)
 ; RFL = Refill
"RTN","PSXRPPL2",247,0)
 ;Returns: 
"RTN","PSXRPPL2",248,0)
 ; 0 = host reject date not expired, 1 - host reject has expired, 2 - host reject not defined 
"RTN","PSXRPPL2",249,0)
 ;
"RTN","PSXRPPL2",250,0)
 S SHDT=$$SHDT(RX,RFL) ; Get suspense hold date for rx/refill
"RTN","PSXRPPL2",251,0)
 I SHDT'="" Q:DT'<SHDT 1 Q 0
"RTN","PSXRPPL2",252,0)
 Q 2
"RTN","PSXRPPL2",253,0)
 ;
"RTN","PSXRPPL2",254,0)
 ;Description: ePharmacy
"RTN","PSXRPPL2",255,0)
 ;This subroutine checks an RX/FILL for Host Reject Errors returned
"RTN","PSXRPPL2",256,0)
 ;from previous ECME submissions. The host reject errors checked are M6, M8, NN, and 99.
"RTN","PSXRPPL2",257,0)
 ;Note that host reject errors do not pass to the pharmacy reject worklist so it's necessary
"RTN","PSXRPPL2",258,0)
 ;to check ECME for these type errors.
"RTN","PSXRPPL2",259,0)
 ;Input: 
"RTN","PSXRPPL2",260,0)
 ; RX = Prescription File IEN
"RTN","PSXRPPL2",261,0)
 ; RFL = Refill
"RTN","PSXRPPL2",262,0)
 ; ONE = Either 1 or 0 - Defaults to 1
"RTN","PSXRPPL2",263,0)
 ; If 1, At least ONE reject code associated with the RX/FILL must 
"RTN","PSXRPPL2",264,0)
 ;   match either M6, M8, NN, or 99.
"RTN","PSXRPPL2",265,0)
 ; If 0, ALL reject codes must match either M6, M8, NN, or 99
"RTN","PSXRPPL2",266,0)
 ;Return: 
"RTN","PSXRPPL2",267,0)
 ; RETV = 1 OR 0
"RTN","PSXRPPL2",268,0)
 ; 1 = host reject exists based on ONE parameter
"RTN","PSXRPPL2",269,0)
 ; 0 = no host rejects exists based on ONE parameter
"RTN","PSXRPPL2",270,0)
HOSTREJ(RX,RFL,ONE) ;
"RTN","PSXRPPL2",271,0)
 N REJ,IDX,TXT,CODE,HRCODE,HRQUIT,RETV
"RTN","PSXRPPL2",272,0)
 S IDX="",(RETV,HRQUIT)=0
"RTN","PSXRPPL2",273,0)
 I ONE="" S ONE=1
"RTN","PSXRPPL2",274,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ) ; Get reject list from last submission
"RTN","PSXRPPL2",275,0)
 F  S IDX=$O(REJ(IDX)) Q:IDX=""  D  Q:HRQUIT
"RTN","PSXRPPL2",276,0)
 . S TXT=$G(REJ(IDX,"REJ CODE LST"))
"RTN","PSXRPPL2",277,0)
 . F I=1:1:$L(TXT,",") S CODE=$P(TXT,",",I) D  Q:HRQUIT
"RTN","PSXRPPL2",278,0)
 . . F HRCODE="M6","M8","NN",99 D  Q:HRQUIT
"RTN","PSXRPPL2",279,0)
 . . . I CODE=HRCODE S RETV=1 I ONE S HRQUIT=1 Q
"RTN","PSXRPPL2",280,0)
 . . . I CODE'=HRCODE,RETV=1 S RETV=0,HRQUIT=1 Q
"RTN","PSXRPPL2",281,0)
 Q RETV
"RTN","PSXRPPL2",282,0)
 ;
"RTN","PSXRPPL2",283,0)
 ;Description: This subroutine sets the EPHARMACY SUSPENSE HOLD DATE field
"RTN","PSXRPPL2",284,0)
 ;for the rx or refill to tomorrow and adds an entry to the SUSPENSE Activity Log.
"RTN","PSXRPPL2",285,0)
 ;Input: RX = Prescription File IEN
"RTN","PSXRPPL2",286,0)
 ; RFL = Refill
"RTN","PSXRPPL2",287,0)
SHDTLOG(RX,RFL) ;
"RTN","PSXRPPL2",288,0)
 N DA,DIE,DR,COMM,SHDT
"RTN","PSXRPPL2",289,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSXRPPL2",290,0)
 S SHDT=$$FMADD^XLFDT(DT,1)
"RTN","PSXRPPL2",291,0)
 S COMM="SUSPENSE HOLD until "_$$FMTE^XLFDT(SHDT,"2D")_" due to host reject error."
"RTN","PSXRPPL2",292,0)
 I RFL=0 S DA=RX,DIE="^PSRX(",DR="86///"_SHDT D ^DIE
"RTN","PSXRPPL2",293,0)
 E  S DA=RFL,DA(1)=RX,DIE="^PSRX("_DA(1)_",1,",DR="86///"_SHDT D ^DIE
"RTN","PSXRPPL2",294,0)
 D RXACT^PSOBPSU2(RX,RFL,COMM,"S",+$G(DUZ)) ; Create Activity Log entry
"RTN","PSXRPPL2",295,0)
 Q
"RTN","PSXRPPL2",296,0)
 ;
"RTN","PSXRPPL2",297,0)
 ;Description: This function returns the EPHARMACY SUSPENSE HOLD DATE field
"RTN","PSXRPPL2",298,0)
 ;for the rx or refill
"RTN","PSXRPPL2",299,0)
 ;Input: RX = Prescription File IEN
"RTN","PSXRPPL2",300,0)
 ; RFL = Refill
"RTN","PSXRPPL2",301,0)
SHDT(RX,RFL) ;
"RTN","PSXRPPL2",302,0)
 N FILE,IENS
"RTN","PSXRPPL2",303,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSXRPPL2",304,0)
 S FILE=$S(RFL=0:52,1:52.1),IENS=$S(RFL=0:RX_",",1:RFL_","_RX_",")
"RTN","PSXRPPL2",305,0)
 Q $$GET1^DIQ(FILE,IENS,86,"I")
"RTN","PSXRPPL2",306,0)
 ;
"VER")
8.0^22.2
**END**
**END**
