KIDS Distribution saved on Oct 10, 2017@08:28:39
CPRS31A_V116 COMBINED KIDS BUILD
**KIDS**:CPRS V31A COMBINED BUILD 1.0^OR*3.0*434^GMRV*5.0*34^YS*5.01*128^

**INSTALL NAME**
CPRS V31A COMBINED BUILD 1.0
"BLD",9674,0)
CPRS V31A COMBINED BUILD 1.0^^1^3171010^y
"BLD",9674,6.3)
26
"BLD",9674,10,0)
^9.63^3^3
"BLD",9674,10,1,0)
OR*3.0*434^1
"BLD",9674,10,2,0)
GMRV*5.0*34^1
"BLD",9674,10,3,0)
YS*5.01*128^1
"BLD",9674,10,"B","GMRV*5.0*34",2)

"BLD",9674,10,"B","OR*3.0*434",1)

"BLD",9674,10,"B","YS*5.01*128",3)

"BLD",9674,"KRN",0)
^9.67PA^779.2^20
"BLD",9674,"KRN",.4,0)
.4
"BLD",9674,"KRN",.401,0)
.401
"BLD",9674,"KRN",.402,0)
.402
"BLD",9674,"KRN",.403,0)
.403
"BLD",9674,"KRN",.5,0)
.5
"BLD",9674,"KRN",.84,0)
.84
"BLD",9674,"KRN",3.6,0)
3.6
"BLD",9674,"KRN",3.8,0)
3.8
"BLD",9674,"KRN",9.2,0)
9.2
"BLD",9674,"KRN",9.8,0)
9.8
"BLD",9674,"KRN",19,0)
19
"BLD",9674,"KRN",19.1,0)
19.1
"BLD",9674,"KRN",101,0)
101
"BLD",9674,"KRN",409.61,0)
409.61
"BLD",9674,"KRN",771,0)
771
"BLD",9674,"KRN",779.2,0)
779.2
"BLD",9674,"KRN",870,0)
870
"BLD",9674,"KRN",8989.51,0)
8989.51
"BLD",9674,"KRN",8989.52,0)
8989.52
"BLD",9674,"KRN",8994,0)
8994
"BLD",9674,"KRN","B",.4,.4)

"BLD",9674,"KRN","B",.401,.401)

"BLD",9674,"KRN","B",.402,.402)

"BLD",9674,"KRN","B",.403,.403)

"BLD",9674,"KRN","B",.5,.5)

"BLD",9674,"KRN","B",.84,.84)

"BLD",9674,"KRN","B",3.6,3.6)

"BLD",9674,"KRN","B",3.8,3.8)

"BLD",9674,"KRN","B",9.2,9.2)

"BLD",9674,"KRN","B",9.8,9.8)

"BLD",9674,"KRN","B",19,19)

"BLD",9674,"KRN","B",19.1,19.1)

"BLD",9674,"KRN","B",101,101)

"BLD",9674,"KRN","B",409.61,409.61)

"BLD",9674,"KRN","B",771,771)

"BLD",9674,"KRN","B",779.2,779.2)

"BLD",9674,"KRN","B",870,870)

"BLD",9674,"KRN","B",8989.51,8989.51)

"BLD",9674,"KRN","B",8989.52,8989.52)

"BLD",9674,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.2
**INSTALL NAME**
OR*3.0*434
"BLD",9670,0)
OR*3.0*434^ORDER ENTRY/RESULTS REPORTING^0^3171010^y
"BLD",9670,4,0)
^9.64PA^100^4
"BLD",9670,4,100,0)
100
"BLD",9670,4,100,2,0)
^9.641^100.008^1
"BLD",9670,4,100,2,100.008,0)
ORDER ACTIONS  (sub-file)
"BLD",9670,4,100,2,100.008,1,0)
^9.6411^41^2
"BLD",9670,4,100,2,100.008,1,40,0)
DISPOSITION BY
"BLD",9670,4,100,2,100.008,1,41,0)
DISPOSITION DATE/TIME
"BLD",9670,4,100,222)
y^^p^^^^n^^n
"BLD",9670,4,100,224)

"BLD",9670,4,100.9,0)
100.9
"BLD",9670,4,100.9,222)
n^n^f^^y^^y^o^n
"BLD",9670,4,100.9,223)

"BLD",9670,4,100.9,224)
I +Y=91
"BLD",9670,4,100.98,0)
100.98
"BLD",9670,4,100.98,222)
n^n^f^^y^^y^r^n
"BLD",9670,4,100.98,224)
I $P(^(0),U)="CLINIC SCHEDULING"
"BLD",9670,4,101.41,0)
101.41
"BLD",9670,4,101.41,222)
n^n^f^^y^^y^o^n
"BLD",9670,4,101.41,224)
I $$SENDDLG^ORY434($P(^(0),U))
"BLD",9670,4,"APDD",100,100.008)

"BLD",9670,4,"APDD",100,100.008,40)

"BLD",9670,4,"APDD",100,100.008,41)

"BLD",9670,4,"B",100,100)

"BLD",9670,4,"B",100.9,100.9)

"BLD",9670,4,"B",100.98,100.98)

"BLD",9670,4,"B",101.41,101.41)

"BLD",9670,6.3)
35
"BLD",9670,"ABPKG")
n
"BLD",9670,"INID")
n
"BLD",9670,"INIT")
POST^ORY434
"BLD",9670,"KRN",0)
^9.67PA^779.2^20
"BLD",9670,"KRN",.4,0)
.4
"BLD",9670,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9670,"KRN",.401,0)
.401
"BLD",9670,"KRN",.402,0)
.402
"BLD",9670,"KRN",.403,0)
.403
"BLD",9670,"KRN",.5,0)
.5
"BLD",9670,"KRN",.84,0)
.84
"BLD",9670,"KRN",3.6,0)
3.6
"BLD",9670,"KRN",3.8,0)
3.8
"BLD",9670,"KRN",9.2,0)
9.2
"BLD",9670,"KRN",9.8,0)
9.8
"BLD",9670,"KRN",9.8,"NM",0)
^9.68A^16^15
"BLD",9670,"KRN",9.8,"NM",1,0)
ORUTL4^^0^B10504145
"BLD",9670,"KRN",9.8,"NM",2,0)
ORWCIRN^^0^B11510332
"BLD",9670,"KRN",9.8,"NM",3,0)
ORWDSD1^^0^B8338183
"BLD",9670,"KRN",9.8,"NM",4,0)
ORCDSD^^0^B4626273
"BLD",9670,"KRN",9.8,"NM",5,0)
ORWDXM4^^0^B43793101
"BLD",9670,"KRN",9.8,"NM",7,0)
ORMBLD^^0^B46482441
"BLD",9670,"KRN",9.8,"NM",8,0)
ORMBLDSD^^0^B17436904
"BLD",9670,"KRN",9.8,"NM",9,0)
ORM^^0^B18341854
"BLD",9670,"KRN",9.8,"NM",10,0)
ORB3FUP2^^0^B69924581
"BLD",9670,"KRN",9.8,"NM",11,0)
ORMSD^^0^B98846550
"BLD",9670,"KRN",9.8,"NM",12,0)
ORWDXM1^^0^B111273921
"BLD",9670,"KRN",9.8,"NM",13,0)
ORCACT0^^0^B67480788
"BLD",9670,"KRN",9.8,"NM",14,0)
ORWDXM3^^0^B118361960
"BLD",9670,"KRN",9.8,"NM",15,0)
ORQ20^^0^B51272743
"BLD",9670,"KRN",9.8,"NM",16,0)
ORWDXA^^0^B119097370
"BLD",9670,"KRN",9.8,"NM","B","ORB3FUP2",10)

"BLD",9670,"KRN",9.8,"NM","B","ORCACT0",13)

"BLD",9670,"KRN",9.8,"NM","B","ORCDSD",4)

"BLD",9670,"KRN",9.8,"NM","B","ORM",9)

"BLD",9670,"KRN",9.8,"NM","B","ORMBLD",7)

"BLD",9670,"KRN",9.8,"NM","B","ORMBLDSD",8)

"BLD",9670,"KRN",9.8,"NM","B","ORMSD",11)

"BLD",9670,"KRN",9.8,"NM","B","ORQ20",15)

"BLD",9670,"KRN",9.8,"NM","B","ORUTL4",1)

"BLD",9670,"KRN",9.8,"NM","B","ORWCIRN",2)

"BLD",9670,"KRN",9.8,"NM","B","ORWDSD1",3)

"BLD",9670,"KRN",9.8,"NM","B","ORWDXA",16)

"BLD",9670,"KRN",9.8,"NM","B","ORWDXM1",12)

"BLD",9670,"KRN",9.8,"NM","B","ORWDXM3",14)

"BLD",9670,"KRN",9.8,"NM","B","ORWDXM4",5)

"BLD",9670,"KRN",19,0)
19
"BLD",9670,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9670,"KRN",19,"NM",1,0)
OR CPRS GUI CHART^^0
"BLD",9670,"KRN",19,"NM","B","OR CPRS GUI CHART",1)

"BLD",9670,"KRN",19.1,0)
19.1
"BLD",9670,"KRN",101,0)
101
"BLD",9670,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",9670,"KRN",101,"NM",1,0)
OR EVSEND SD^^0
"BLD",9670,"KRN",101,"NM",2,0)
OCX ORDER CHECK HL7 RECIEVE^^4^
"BLD",9670,"KRN",101,"NM","B","OCX ORDER CHECK HL7 RECIEVE",2)

"BLD",9670,"KRN",101,"NM","B","OR EVSEND SD",1)

"BLD",9670,"KRN",409.61,0)
409.61
"BLD",9670,"KRN",771,0)
771
"BLD",9670,"KRN",779.2,0)
779.2
"BLD",9670,"KRN",870,0)
870
"BLD",9670,"KRN",8989.51,0)
8989.51
"BLD",9670,"KRN",8989.51,"NM",0)
^9.68A^4^4
"BLD",9670,"KRN",8989.51,"NM",1,0)
ORWRP LEGACY VIEWER LABEL^^0
"BLD",9670,"KRN",8989.51,"NM",2,0)
OR MOB DLL NAME^^0
"BLD",9670,"KRN",8989.51,"NM",3,0)
OR SD ADDITIONAL INFORMATION
"BLD",9670,"KRN",8989.51,"NM",4,0)
OR SD DIALOG PREREQ
"BLD",9670,"KRN",8989.51,"NM","B","OR MOB DLL NAME",2)

"BLD",9670,"KRN",8989.51,"NM","B","OR SD ADDITIONAL INFORMATION",3)

"BLD",9670,"KRN",8989.51,"NM","B","OR SD DIALOG PREREQ",4)

"BLD",9670,"KRN",8989.51,"NM","B","ORWRP LEGACY VIEWER LABEL",1)

"BLD",9670,"KRN",8989.52,0)
8989.52
"BLD",9670,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",9670,"KRN",8994,0)
8994
"BLD",9670,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",9670,"KRN",8994,"NM",1,0)
ORWCIRN JLV LABEL^^0
"BLD",9670,"KRN",8994,"NM",2,0)
ORWDSD1 ODSLCT^^0
"BLD",9670,"KRN",8994,"NM","B","ORWCIRN JLV LABEL",1)

"BLD",9670,"KRN",8994,"NM","B","ORWDSD1 ODSLCT",2)

"BLD",9670,"KRN","B",.4,.4)

"BLD",9670,"KRN","B",.401,.401)

"BLD",9670,"KRN","B",.402,.402)

"BLD",9670,"KRN","B",.403,.403)

"BLD",9670,"KRN","B",.5,.5)

"BLD",9670,"KRN","B",.84,.84)

"BLD",9670,"KRN","B",3.6,3.6)

"BLD",9670,"KRN","B",3.8,3.8)

"BLD",9670,"KRN","B",9.2,9.2)

"BLD",9670,"KRN","B",9.8,9.8)

"BLD",9670,"KRN","B",19,19)

"BLD",9670,"KRN","B",19.1,19.1)

"BLD",9670,"KRN","B",101,101)

"BLD",9670,"KRN","B",409.61,409.61)

"BLD",9670,"KRN","B",771,771)

"BLD",9670,"KRN","B",779.2,779.2)

"BLD",9670,"KRN","B",870,870)

"BLD",9670,"KRN","B",8989.51,8989.51)

"BLD",9670,"KRN","B",8989.52,8989.52)

"BLD",9670,"KRN","B",8994,8994)

"BLD",9670,"PRE")
ORY434
"BLD",9670,"PRET")

"BLD",9670,"QUES",0)
^9.62^^
"BLD",9670,"REQB",0)
^9.611^8^7
"BLD",9670,"REQB",1,0)
OR*3.0*423^2
"BLD",9670,"REQB",2,0)
XWB*1.1*64^2
"BLD",9670,"REQB",3,0)
XU*8.0*659^2
"BLD",9670,"REQB",5,0)
OR*3.0*424^2
"BLD",9670,"REQB",6,0)
OR*3.0*425^2
"BLD",9670,"REQB",7,0)
OR*3.0*421^2
"BLD",9670,"REQB",8,0)
OR*3.0*436^2
"BLD",9670,"REQB","B","OR*3.0*421",7)

"BLD",9670,"REQB","B","OR*3.0*423",1)

"BLD",9670,"REQB","B","OR*3.0*424",5)

"BLD",9670,"REQB","B","OR*3.0*425",6)

"BLD",9670,"REQB","B","OR*3.0*436",8)

"BLD",9670,"REQB","B","XU*8.0*659",3)

"BLD",9670,"REQB","B","XWB*1.1*64",2)

"DATA",100.9,91,0)
APPOINTMENT REQUEST CANCELLED^OR^Appointment Request Cancelled in Scheduling^PKG^R^RTC^ORB3FUP2
"DATA",100.9,91,1)
^OR
"DATA",100.9,91,3)
^4
"DATA",100.9,91,4)
The purpose of this notification to advise the provider recipients when an appointment request is cancelled by the scheduling package.
"DATA",100.9,91,5,0)
^100.92S^2^2
"DATA",100.9,91,5,1,0)
CD
"DATA",100.9,91,5,2,0)
ONPP
"DATA",100.98,280,0)
CLINIC SCHEDULING^Clinic Scheduling^CSDAM^391
"DATA",101.41,391,0)
SD RTC^Return To Clinic^^D^280^1^16^1^0
"DATA",101.41,391,4)
K ORSDTISE,ORLEAD,ORTRAIL
"DATA",101.41,391,5)
^^^^175
"DATA",101.41,391,10,0)
^101.412IA^10^7
"DATA",101.41,391,10,1,0)
1^183^^Clinic Location: ^^1^0
"DATA",101.41,391,10,1,.1)

"DATA",101.41,391,10,1,2)
5^^^Return to
"DATA",101.41,391,10,1,4)
I $$VALCLINC^ORCDSD(Y)
"DATA",101.41,391,10,3,0)
10^15820^^Return to clinic date: ^^1
"DATA",101.41,391,10,3,2)
15^^^@ORLEAD^@ORTRAIL
"DATA",101.41,391,10,3,5)
Q:$G(ORTYPE)'="Z"  I $G(ORDIALOG(PROMPT,INST))'["T" K DONE W $C(7),!,"Response must be relative date (e.g. TODAY, T+7D, T+3M)"
"DATA",101.41,391,10,3,10)
S ORLEAD="on or around (",ORTRAIL=")" S:$G(ORSDTISE)="1" ORLEAD="on or before ",ORTRAIL=""
"DATA",101.41,391,10,4,0)
20^396^^Number of Appointments: ^^1
"DATA",101.41,391,10,4,2)
20^^^for a total of ^appointment(s)^1
"DATA",101.41,391,10,4,5)

"DATA",101.41,391,10,4,7)
S Y=1
"DATA",101.41,391,10,4,10)
I +$G(ORDIALOG(PROMPT,INST))=1 S ORDIALOG($$PTR^ORCD("OR GTX SCH INTERVAL"),INST)=""
"DATA",101.41,391,10,5,0)
20.5^395^^Interval: 
"DATA",101.41,391,10,5,.1)

"DATA",101.41,391,10,5,1)
Select an interval between 1 and 30
"DATA",101.41,391,10,5,2)
30^^^with a frequency of every^day(s)
"DATA",101.41,391,10,5,3)
I +$$VAL^ORCD("NUMBER OF APPOINTMENTS")>1
"DATA",101.41,391,10,5,6)

"DATA",101.41,391,10,6,0)
30^397^^Prerequisites: ^^0^1^^^^^99
"DATA",101.41,391,10,6,.1)
D PREREQV^ORCDSD
"DATA",101.41,391,10,6,2)
35^^^Prerequisites:^^1
"DATA",101.41,391,10,6,3)
I $$PREREQN^ORCDSD()>0
"DATA",101.41,391,10,6,6)
D PREREQH^ORCDSD
"DATA",101.41,391,10,7,0)
40^16266^^Comments: 
"DATA",101.41,391,10,7,.1)
I X[U W !,"Comment cannot contain an ^ character." K X
"DATA",101.41,391,10,7,2)
45^^^^^1
"DATA",101.41,391,10,10,0)
8^177^^Time sensitive: ^^0^0^^^^
"DATA",101.41,391,10,10,1)
Select Yes if this order is a time sensitive order.
"DATA",101.41,391,10,10,2)
^^^
"DATA",101.41,391,10,10,10)
S ORSDTISE=$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,391,99)
64560,47778
"DATA",101.41,395,0)
OR GTX SCH INTERVAL^Interval^^P
"DATA",101.41,395,1)
N^0:30^SDINT
"DATA",101.41,395,2,0)
^101.411^2^2^3170508^^
"DATA",101.41,395,2,1,0)
This provide the user to determine the frequency a patient should be see 
"DATA",101.41,395,2,2,0)
when ordering multiple follow-up appointment.
"DATA",101.41,395,99)
64461,52397
"DATA",101.41,396,0)
OR GTX APPT NUM^Number of Appointments^^P
"DATA",101.41,396,1)
N^1:60:0^SDNUM
"DATA",101.41,396,2,0)
^101.411^1^1^3151015^^
"DATA",101.41,396,2,1,0)
This prompt set the number of appointment.
"DATA",101.41,396,99)
64461,52397
"DATA",101.41,397,0)
OR GTX PRE REQ^Prerequisites^^P
"DATA",101.41,397,1)
F^3:30^PREREQ
"DATA",101.41,397,99)
64461,52397
"DATA",101.41,16266,0)
OR GTX SD COMMENT^Return to Clinic Comment^^P
"DATA",101.41,16266,1)
F^1:75^SDCOMMENT
"DATA",101.41,16266,2,0)
^^1^1^3170510^
"DATA",101.41,16266,2,1,0)
This prompts for the comment field in the Return to Clinic Order Dialog.
"DATA",101.41,16266,99)
64461,52399
"FIA",100)
ORDER
"FIA",100,0)
^OR(100,
"FIA",100,0,0)
100I
"FIA",100,0,1)
y^^p^^^^n^^n
"FIA",100,0,10)

"FIA",100,0,11)

"FIA",100,0,"RLRO")

"FIA",100,0,"VR")
3.0^OR
"FIA",100,100)
1
"FIA",100,100.008)
1
"FIA",100,100.008,40)

"FIA",100,100.008,41)

"FIA",100.9)
OE/RR NOTIFICATIONS
"FIA",100.9,0)
^ORD(100.9,
"FIA",100.9,0,0)
100.9
"FIA",100.9,0,1)
n^n^f^^y^^y^o^n
"FIA",100.9,0,10)

"FIA",100.9,0,11)
I +Y=91
"FIA",100.9,0,"RLRO")

"FIA",100.9,0,"VR")
3.0^OR
"FIA",100.9,100.9)
0
"FIA",100.9,100.92)
0
"FIA",100.98)
DISPLAY GROUP
"FIA",100.98,0)
^ORD(100.98,
"FIA",100.98,0,0)
100.98I
"FIA",100.98,0,1)
n^n^f^^y^^y^r^n
"FIA",100.98,0,10)

"FIA",100.98,0,11)
I $P(^(0),U)="CLINIC SCHEDULING"
"FIA",100.98,0,"RLRO")

"FIA",100.98,0,"VR")
3.0^OR
"FIA",100.98,100.98)
0
"FIA",100.98,100.981)
0
"FIA",100.98,100.985)
0
"FIA",101.41)
ORDER DIALOG
"FIA",101.41,0)
^ORD(101.41,
"FIA",101.41,0,0)
101.41I
"FIA",101.41,0,1)
n^n^f^^y^^y^o^n
"FIA",101.41,0,10)

"FIA",101.41,0,11)
I $$SENDDLG^ORY434($P(^(0),U))
"FIA",101.41,0,"RLRO")

"FIA",101.41,0,"VR")
3.0^OR
"FIA",101.41,101.41)
0
"FIA",101.41,101.411)
0
"FIA",101.41,101.412)
0
"FIA",101.41,101.41218)
0
"FIA",101.41,101.415)
0
"FIA",101.41,101.416)
0
"FIA",101.41,101.4162)
0
"FRV1",100.98,"280,0",4)
SD RTC
"FRV1",100.98,"280,0",4,"F")
;ORD(101.41,
"FRV1",101.41,"391,0",5)
CLINIC SCHEDULING
"FRV1",101.41,"391,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"391,0",7)
SCHEDULING
"FRV1",101.41,"391,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"391,10,1,0",2)
OR GTX LOCATION
"FRV1",101.41,"391,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"391,10,10,0",2)
OR GTX YES/NO
"FRV1",101.41,"391,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"391,10,3,0",2)
OR GTX CLINICALLY INDICATED DATE
"FRV1",101.41,"391,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"391,10,4,0",2)
OR GTX APPT NUM
"FRV1",101.41,"391,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"391,10,5,0",2)
OR GTX SCH INTERVAL
"FRV1",101.41,"391,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"391,10,6,0",2)
OR GTX PRE REQ
"FRV1",101.41,"391,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"391,10,7,0",2)
OR GTX SD COMMENT
"FRV1",101.41,"391,10,7,0",2,"F")
;ORD(101.41,
"INIT")
POST^ORY434
"IX",101.41,101.41,"B",0)
101.41^B^Regular B index using full field length^R^^F^IR^I^101.41^^^^^LS
"IX",101.41,101.41,"B",1)
S ^ORD(101.41,"B",$E(X,1,63),DA)=""
"IX",101.41,101.41,"B",2)
K ^ORD(101.41,"B",$E(X,1,63),DA)
"IX",101.41,101.41,"B",2.5)
K ^ORD(101.41,"B")
"IX",101.41,101.41,"B",11.1,0)
^.114IA^1^1
"IX",101.41,101.41,"B",11.1,1,0)
1^F^101.41^.01^63^1^F
"KRN",19,10989,-1)
0^1
"KRN",19,10989,0)
OR CPRS GUI CHART^CPRSChart version 1.0.31.116^^B^^^^^^^^
"KRN",19,10989,1,0)
^19.06^2^2^3170601^^^^
"KRN",19,10989,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,10989,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,10989,99)
60921,44613
"KRN",19,10989,99.1)
64548,35647
"KRN",19,10989,"RPC",0)
^19.05P^2158^2158
"KRN",19,10989,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,10989,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,10989,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,10989,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,10989,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,10989,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,10989,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,10989,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,10989,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,10989,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,10989,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,10989,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,10989,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,10989,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,10989,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,10989,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,10989,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,10989,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,10989,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,10989,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,10989,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,10989,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,10989,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,10989,"RPC",240,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,10989,"RPC",241,0)
TIU LONG LIST OF TITLES
"KRN",19,10989,"RPC",242,0)
TIU NOTES
"KRN",19,10989,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,10989,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,10989,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,10989,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,10989,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,10989,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,10989,"RPC",249,0)
TIU SUMMARIES
"KRN",19,10989,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,10989,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,10989,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,10989,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,10989,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,10989,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,10989,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,10989,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,10989,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,10989,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,10989,"RPC",1037,0)
ORK TRIGGER
"KRN",19,10989,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,10989,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,10989,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,10989,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,10989,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,10989,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,10989,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,10989,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,10989,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,10989,"RPC",1052,0)
ORQOR LIST
"KRN",19,10989,"RPC",1053,0)
ORQORB SORT
"KRN",19,10989,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,10989,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,10989,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,10989,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,10989,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,10989,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,10989,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,10989,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,10989,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,10989,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,10989,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,10989,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,10989,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,10989,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,10989,"RPC",1068,0)
ORQPT WARDS
"KRN",19,10989,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,10989,"RPC",1070,0)
ORQQAL LIST
"KRN",19,10989,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,10989,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,10989,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,10989,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,10989,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,10989,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,10989,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,10989,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,10989,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,10989,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,10989,"RPC",1081,0)
ORQQCN LIST
"KRN",19,10989,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,10989,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,10989,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,10989,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,10989,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,10989,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,10989,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,10989,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,10989,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,10989,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,10989,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,10989,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,10989,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,10989,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,10989,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,10989,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,10989,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,10989,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,10989,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,10989,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,10989,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,10989,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,10989,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,10989,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,10989,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,10989,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,10989,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,10989,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,10989,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,10989,"RPC",1111,0)
ORQQPL LIST
"KRN",19,10989,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,10989,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,10989,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,10989,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,10989,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,10989,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,10989,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,10989,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,10989,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,10989,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,10989,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,10989,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,10989,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,10989,"RPC",1125,0)
ORQQPP LIST
"KRN",19,10989,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,10989,"RPC",1127,0)
ORQQPS LIST
"KRN",19,10989,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,10989,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,10989,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,10989,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,10989,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,10989,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,10989,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,10989,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,10989,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,10989,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,10989,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,10989,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,10989,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,10989,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,10989,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,10989,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,10989,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,10989,"RPC",1152,0)
ORQQXQA USER
"KRN",19,10989,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,10989,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,10989,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,10989,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,10989,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,10989,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,10989,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,10989,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,10989,"RPC",1161,0)
ORWCV LAB
"KRN",19,10989,"RPC",1162,0)
ORWCV POLL
"KRN",19,10989,"RPC",1163,0)
ORWCV START
"KRN",19,10989,"RPC",1164,0)
ORWCV STOP
"KRN",19,10989,"RPC",1165,0)
ORWCV VST
"KRN",19,10989,"RPC",1166,0)
ORWD DEF
"KRN",19,10989,"RPC",1167,0)
ORWD DT
"KRN",19,10989,"RPC",1168,0)
ORWD FORMID
"KRN",19,10989,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,10989,"RPC",1170,0)
ORWD KEY
"KRN",19,10989,"RPC",1171,0)
ORWD OI
"KRN",19,10989,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,10989,"RPC",1173,0)
ORWD SAVE
"KRN",19,10989,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,10989,"RPC",1175,0)
ORWD SIGN
"KRN",19,10989,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,10989,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,10989,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,10989,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,10989,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,10989,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,10989,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,10989,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,10989,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,10989,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,10989,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,10989,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,10989,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,10989,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,10989,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,10989,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,10989,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,10989,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,10989,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,10989,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,10989,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,10989,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,10989,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,10989,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,10989,"RPC",1200,0)
ORWDFH TXT
"KRN",19,10989,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,10989,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,10989,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,10989,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,10989,"RPC",1205,0)
ORWDLR DEF
"KRN",19,10989,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,10989,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,10989,"RPC",1208,0)
ORWDLR STOP
"KRN",19,10989,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,10989,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,10989,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,10989,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,10989,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,10989,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,10989,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,10989,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,10989,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,10989,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,10989,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,10989,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,10989,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,10989,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,10989,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,10989,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,10989,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,10989,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,10989,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,10989,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,10989,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,10989,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,10989,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,10989,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,10989,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,10989,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,10989,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,10989,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,10989,"RPC",1241,0)
ORWDRA DEF
"KRN",19,10989,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,10989,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,10989,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,10989,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,10989,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,10989,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,10989,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,10989,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,10989,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,10989,"RPC",1251,0)
ORWDX DGRP
"KRN",19,10989,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,10989,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,10989,"RPC",1254,0)
ORWDX DLGID
"KRN",19,10989,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,10989,"RPC",1256,0)
ORWDX FORMID
"KRN",19,10989,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,10989,"RPC",1258,0)
ORWDX LOCK
"KRN",19,10989,"RPC",1259,0)
ORWDX MSG
"KRN",19,10989,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,10989,"RPC",1261,0)
ORWDX SAVE
"KRN",19,10989,"RPC",1262,0)
ORWDX SEND
"KRN",19,10989,"RPC",1263,0)
ORWDX SENDP
"KRN",19,10989,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,10989,"RPC",1265,0)
ORWDX WRLST
"KRN",19,10989,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,10989,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,10989,"RPC",1268,0)
ORWDXA DC
"KRN",19,10989,"RPC",1269,0)
ORWDX2 DCREASON
"KRN",19,10989,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,10989,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,10989,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,10989,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,10989,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,10989,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,10989,"RPC",1276,0)
ORWDXA VALID
"KRN",19,10989,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,10989,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,10989,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,10989,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,10989,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,10989,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,10989,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,10989,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,10989,"RPC",1285,0)
ORWDXC ON
"KRN",19,10989,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,10989,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,10989,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,10989,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,10989,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,10989,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,10989,"RPC",1292,0)
ORWDXM MENU
"KRN",19,10989,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,10989,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,10989,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,10989,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,10989,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,10989,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,10989,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,10989,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,10989,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,10989,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,10989,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,10989,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,10989,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,10989,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,10989,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,10989,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,10989,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,10989,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,10989,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,10989,"RPC",1312,0)
ORWLRR ATG
"KRN",19,10989,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,10989,"RPC",1314,0)
ORWLRR CHART
"KRN",19,10989,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,10989,"RPC",1316,0)
ORWLRR GRID
"KRN",19,10989,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,10989,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,10989,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,10989,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,10989,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,10989,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,10989,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,10989,"RPC",1324,0)
ORWLRR TG
"KRN",19,10989,"RPC",1325,0)
ORWLRR USERS
"KRN",19,10989,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,10989,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,10989,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,10989,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,10989,"RPC",1330,0)
ORWOR RESULT
"KRN",19,10989,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,10989,"RPC",1332,0)
ORWOR TSALL
"KRN",19,10989,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,10989,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,10989,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,10989,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,10989,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,10989,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,10989,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,10989,"RPC",1341,0)
ORWORDG IEN
"KRN",19,10989,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,10989,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,10989,"RPC",1344,0)
ORWORR AGET
"KRN",19,10989,"RPC",1345,0)
ORWORR GET
"KRN",19,10989,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,10989,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,10989,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,10989,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,10989,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,10989,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,10989,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,10989,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,10989,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,10989,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,10989,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,10989,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,10989,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,10989,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,10989,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,10989,"RPC",1361,0)
ORWPCE HF
"KRN",19,10989,"RPC",1362,0)
ORWPCE IMM
"KRN",19,10989,"RPC",1363,0)
ORWPCE LEX
"KRN",19,10989,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,10989,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,10989,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,10989,"RPC",1368,0)
ORWPCE PED
"KRN",19,10989,"RPC",1369,0)
ORWPCE PROC
"KRN",19,10989,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,10989,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,10989,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,10989,"RPC",1373,0)
ORWPCE SK
"KRN",19,10989,"RPC",1374,0)
ORWPCE TRT
"KRN",19,10989,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,10989,"RPC",1376,0)
ORWPCE XAM
"KRN",19,10989,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,10989,"RPC",1378,0)
ORWPS COVER
"KRN",19,10989,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,10989,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,10989,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,10989,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,10989,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,10989,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,10989,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,10989,"RPC",1386,0)
ORWPT CWAD
"KRN",19,10989,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,10989,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,10989,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,10989,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,10989,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,10989,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,10989,"RPC",1393,0)
ORWPT LAST5
"KRN",19,10989,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,10989,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,10989,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,10989,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,10989,"RPC",1398,0)
ORWPT SELECT
"KRN",19,10989,"RPC",1399,0)
ORWPT SHARE
"KRN",19,10989,"RPC",1400,0)
ORWPT TOP
"KRN",19,10989,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,10989,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,10989,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,10989,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,10989,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,10989,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,10989,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,10989,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,10989,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,10989,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,10989,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,10989,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,10989,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,10989,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,10989,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,10989,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,10989,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,10989,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,10989,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,10989,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,10989,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,10989,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,10989,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,10989,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,10989,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,10989,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,10989,"RPC",1427,0)
ORWU DEVICE
"KRN",19,10989,"RPC",1428,0)
ORWU DT
"KRN",19,10989,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,10989,"RPC",1430,0)
ORWU GBLREF
"KRN",19,10989,"RPC",1431,0)
ORWU GENERIC
"KRN",19,10989,"RPC",1432,0)
ORWU HASKEY
"KRN",19,10989,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,10989,"RPC",1434,0)
ORWU INPLOC
"KRN",19,10989,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,10989,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,10989,"RPC",1437,0)
ORWU PATCH
"KRN",19,10989,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,10989,"RPC",1439,0)
ORWU USERINFO
"KRN",19,10989,"RPC",1440,0)
ORWU VALDT
"KRN",19,10989,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,10989,"RPC",1442,0)
ORWU VERSRV
"KRN",19,10989,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,10989,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,10989,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,10989,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,10989,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,10989,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,10989,"RPC",1449,0)
ORWUH POPUP
"KRN",19,10989,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,10989,"RPC",1451,0)
ORWUXT LST
"KRN",19,10989,"RPC",1452,0)
ORWUXT REF
"KRN",19,10989,"RPC",1453,0)
ORWUXT VAL
"KRN",19,10989,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,10989,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,10989,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,10989,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,10989,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,10989,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,10989,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,10989,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,10989,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,10989,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,10989,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,10989,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,10989,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,10989,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,10989,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,10989,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,10989,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,10989,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,10989,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,10989,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,10989,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,10989,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,10989,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,10989,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,10989,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,10989,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,10989,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,10989,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,10989,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,10989,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,10989,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,10989,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,10989,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,10989,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,10989,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,10989,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,10989,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,10989,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,10989,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,10989,"RPC",1508,0)
ORWOR VWGET
"KRN",19,10989,"RPC",1509,0)
ORWOR VWSET
"KRN",19,10989,"RPC",1510,0)
ORWU PARAM
"KRN",19,10989,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,10989,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,10989,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,10989,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,10989,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,10989,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,10989,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,10989,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,10989,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,10989,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,10989,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,10989,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,10989,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,10989,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,10989,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,10989,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,10989,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,10989,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,10989,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,10989,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,10989,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,10989,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,10989,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,10989,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,10989,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,10989,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,10989,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,10989,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,10989,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,10989,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,10989,"RPC",1542,0)
ORWLRR INFO
"KRN",19,10989,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,10989,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,10989,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,10989,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,10989,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,10989,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,10989,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,10989,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,10989,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,10989,"RPC",1555,0)
YS GAF API
"KRN",19,10989,"RPC",1556,0)
TIU LONG LIST BOILERPLATED
"KRN",19,10989,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,10989,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,10989,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,10989,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,10989,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,10989,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,10989,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,10989,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,10989,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,10989,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,10989,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,10989,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,10989,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,10989,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,10989,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,10989,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,10989,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,10989,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,10989,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,10989,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,10989,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,10989,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,10989,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,10989,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,10989,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,10989,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,10989,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,10989,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,10989,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,10989,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,10989,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,10989,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,10989,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,10989,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,10989,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,10989,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,10989,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,10989,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,10989,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,10989,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,10989,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,10989,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,10989,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,10989,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,10989,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,10989,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,10989,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,10989,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,10989,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,10989,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,10989,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,10989,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,10989,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,10989,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,10989,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,10989,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,10989,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,10989,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,10989,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,10989,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,10989,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,10989,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,10989,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,10989,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,10989,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,10989,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,10989,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,10989,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,10989,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,10989,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,10989,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,10989,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,10989,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,10989,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,10989,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,10989,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,10989,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,10989,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,10989,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,10989,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,10989,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,10989,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,10989,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,10989,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,10989,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,10989,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,10989,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,10989,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,10989,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,10989,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,10989,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,10989,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,10989,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,10989,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,10989,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,10989,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,10989,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,10989,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,10989,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,10989,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,10989,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,10989,"RPC",1659,0)
ORWDX DGNM
"KRN",19,10989,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,10989,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,10989,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,10989,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,10989,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,10989,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,10989,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,10989,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,10989,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,10989,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,10989,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,10989,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,10989,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,10989,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,10989,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,10989,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,10989,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,10989,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,10989,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,10989,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,10989,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,10989,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,10989,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,10989,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,10989,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,10989,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,10989,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,10989,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,10989,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,10989,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,10989,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,10989,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,10989,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,10989,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,10989,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,10989,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,10989,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,10989,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,10989,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,10989,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,10989,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,10989,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,10989,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,10989,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,10989,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,10989,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,10989,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,10989,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,10989,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,10989,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,10989,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,10989,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,10989,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,10989,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,10989,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,10989,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,10989,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,10989,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,10989,"RPC",1720,0)
ORWSR LIST
"KRN",19,10989,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,10989,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,10989,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,10989,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,10989,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,10989,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,10989,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,10989,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,10989,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,10989,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,10989,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,10989,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,10989,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,10989,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,10989,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,10989,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,10989,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,10989,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,10989,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,10989,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,10989,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,10989,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,10989,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,10989,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,10989,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,10989,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,10989,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,10989,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,10989,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,10989,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,10989,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,10989,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,10989,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,10989,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,10989,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,10989,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,10989,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,10989,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,10989,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,10989,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,10989,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,10989,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,10989,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,10989,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,10989,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,10989,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,10989,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,10989,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,10989,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,10989,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,10989,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,10989,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,10989,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,10989,"RPC",1776,0)
ORWOR1 CHKDIG
"KRN",19,10989,"RPC",1777,0)
ORWOR1 GETDTEXT
"KRN",19,10989,"RPC",1778,0)
ORWOR1 GETDSIG
"KRN",19,10989,"RPC",1779,0)
ORWTPD GETIMG
"KRN",19,10989,"RPC",1780,0)
OREVNTX1 PRMPTID
"KRN",19,10989,"RPC",1781,0)
ORECS01 CHKESSO
"KRN",19,10989,"RPC",1782,0)
ORECS01 VSITID
"KRN",19,10989,"RPC",1784,0)
OREVNTX LIST
"KRN",19,10989,"RPC",1785,0)
OREVNTX PAT
"KRN",19,10989,"RPC",1786,0)
OREVNTX1 GTEVT
"KRN",19,10989,"RPC",1787,0)
OREVNTX1 CPACT
"KRN",19,10989,"RPC",1788,0)
OREVNTX1 CURSPE
"KRN",19,10989,"RPC",1789,0)
OREVNTX1 CHGEVT
"KRN",19,10989,"RPC",1790,0)
OREVNTX1 DELPTEVT
"KRN",19,10989,"RPC",1791,0)
OREVNTX1 DFLTEVT
"KRN",19,10989,"RPC",1792,0)
OREVNTX ACTIVE
"KRN",19,10989,"RPC",1793,0)
OREVNTX1 PUTEVNT
"KRN",19,10989,"RPC",1794,0)
OREVNTX1 WRLSTED
"KRN",19,10989,"RPC",1795,0)
OREVNTX1 EVT
"KRN",19,10989,"RPC",1796,0)
OREVNTX1 NAME
"KRN",19,10989,"RPC",1797,0)
OREVNTX1 MATCH
"KRN",19,10989,"RPC",1798,0)
OREVNTX1 EMPTY
"KRN",19,10989,"RPC",1799,0)
OREVNTX1 EXISTS
"KRN",19,10989,"RPC",1800,0)
OREVNTX1 GTEVT1
"KRN",19,10989,"RPC",1801,0)
OREVNTX1 DIV
"KRN",19,10989,"RPC",1802,0)
OREVNTX1 DIV1
"KRN",19,10989,"RPC",1803,0)
OREVNTX1 LOC
"KRN",19,10989,"RPC",1804,0)
OREVNTX1 LOC1
"KRN",19,10989,"RPC",1805,0)
ORWDX SENDED
"KRN",19,10989,"RPC",1806,0)
OREVNTX1 GETDLG
"KRN",19,10989,"RPC",1807,0)
ORECS01 ECPRINT
"KRN",19,10989,"RPC",1811,0)
ORECS01 ECRPT
"KRN",19,10989,"RPC",1812,0)
OREVNTX1 ISDCOD
"KRN",19,10989,"RPC",1813,0)
OREVNTX1 SETDFLT
"KRN",19,10989,"RPC",1815,0)
TIU IS THIS A CLINPROC?
"KRN",19,10989,"RPC",1816,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,10989,"RPC",1817,0)
TIU LONG LIST CLINPROC TITLES
"KRN",19,10989,"RPC",1819,0)
ORWDPS1 HASOIPI
"KRN",19,10989,"RPC",1821,0)
OREVNTX1 DEFLTS
"KRN",19,10989,"RPC",1822,0)
OREVNTX1 MULTS
"KRN",19,10989,"RPC",1823,0)
OREVNTX1 DONE
"KRN",19,10989,"RPC",1824,0)
OREVNTX1 PROMPT IDS
"KRN",19,10989,"RPC",1825,0)
ORWCIRN CHECKLINK
"KRN",19,10989,"RPC",1826,0)
XWB DIRECT RPC
"KRN",19,10989,"RPC",1827,0)
ORWDPS1 HASROUTE
"KRN",19,10989,"RPC",1828,0)
ORQQCN UNRESOLVED
"KRN",19,10989,"RPC",1829,0)
OREVNTX1 DELDFLT
"KRN",19,10989,"RPC",1830,0)
ORWCH LDFONT
"KRN",19,10989,"RPC",1831,0)
ORWU1 NAMECVT
"KRN",19,10989,"RPC",1832,0)
OREVNTX1 DFLTDLG
"KRN",19,10989,"RPC",1833,0)
ORWDPS5 LESAPI
"KRN",19,10989,"RPC",1834,0)
ORWDPS5 LESGRP
"KRN",19,10989,"RPC",1839,0)
OREVNTX1 TYPEXT
"KRN",19,10989,"RPC",1840,0)
ORWORR RGET
"KRN",19,10989,"RPC",1841,0)
OREVNTX1 AUTHMREL
"KRN",19,10989,"RPC",1842,0)
OREVNTX1 HAVEPRT
"KRN",19,10989,"RPC",1843,0)
OREVNTX1 CMEVTS
"KRN",19,10989,"RPC",1844,0)
OREVNTX1 ODPTEVID
"KRN",19,10989,"RPC",1845,0)
ORWOR PKISITE
"KRN",19,10989,"RPC",1846,0)
OREVNTX1 COMP
"KRN",19,10989,"RPC",1847,0)
OREVNTX1 ISHDORD
"KRN",19,10989,"RPC",1848,0)
ORWDXR ORCPLX
"KRN",19,10989,"RPC",1849,0)
OREVNTX1 ISPASS
"KRN",19,10989,"RPC",1850,0)
OREVNTX1 ISPASS1
"KRN",19,10989,"RPC",1851,0)
OREVNTX1 DLGIEN
"KRN",19,10989,"RPC",1852,0)
ORWDXR CANRN
"KRN",19,10989,"RPC",1853,0)
ORWDXR ISCPLX
"KRN",19,10989,"RPC",1854,0)
ORWDXA OFCPLX
"KRN",19,10989,"RPC",1855,0)
ORQQPX GET NOT PURPOSE
"KRN",19,10989,"RPC",1856,0)
ORWDPS1 IVDEA
"KRN",19,10989,"RPC",1857,0)
ORWDXR ISNOW
"KRN",19,10989,"RPC",1858,0)
ORRHCQ QRYITR
"KRN",19,10989,"RPC",1859,0)
OREVNTX1 GETSTS
"KRN",19,10989,"RPC",1860,0)
ORWU DEFAULT DIVISION
"KRN",19,10989,"RPC",1861,0)
ORWDXA ISACTOI
"KRN",19,10989,"RPC",1862,0)
ORECS01 SAVPATH
"KRN",19,10989,"RPC",1863,0)
ORWOR RESULT HISTORY
"KRN",19,10989,"RPC",1864,0)
XUS GET TOKEN
"KRN",19,10989,"RPC",1865,0)
ORQQPX IMMUN LIST
"KRN",19,10989,"RPC",1866,0)
XWB DEFERRED CLEARALL
"KRN",19,10989,"RPC",1867,0)
ORWOR1 SETDTEXT
"KRN",19,10989,"RPC",1868,0)
ORWOR1 GETDEA
"KRN",19,10989,"RPC",1869,0)
ORWOR1 GETDSCH
"KRN",19,10989,"RPC",1870,0)
ORWORB TEXT FOLLOWUP
"KRN",19,10989,"RPC",1871,0)
ORWU1 NEWLOC
"KRN",19,10989,"RPC",1872,0)
ORWPCE ACTIVE CODE
"KRN",19,10989,"RPC",1873,0)
ORQQPXRM GET WH LETTER TEXT
"KRN",19,10989,"RPC",1874,0)
ORQQPXRM GET WH LETTER TYPE
"KRN",19,10989,"RPC",1875,0)
ORQQPXRM GET WH PROC RESULT
"KRN",19,10989,"RPC",1876,0)
ORQQPXRM WOMEN HEALTH SAVE
"KRN",19,10989,"RPC",1877,0)
ORB FORWARD ALERT
"KRN",19,10989,"RPC",1878,0)
ORB RENEW ALERT
"KRN",19,10989,"RPC",1879,0)
ORPRF CLEAR
"KRN",19,10989,"RPC",1880,0)
ORPRF GETFLG
"KRN",19,10989,"RPC",1881,0)
ORPRF HASFLG
"KRN",19,10989,"RPC",1882,0)
ORWTPD GETOCM
"KRN",19,10989,"RPC",1883,0)
TIU ONE VISIT NOTE?
"KRN",19,10989,"RPC",1884,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,10989,"RPC",1885,0)
ORIMO IMOLOC
"KRN",19,10989,"RPC",1886,0)
ORIMO IMOOD
"KRN",19,10989,"RPC",1887,0)
ORWDPS4 IPOD4OP
"KRN",19,10989,"RPC",1888,0)
ORWDPS4 UPDTDG
"KRN",19,10989,"RPC",1889,0)
TIU USER INACTIVE?
"KRN",19,10989,"RPC",1890,0)
ORWTPD PUTOCM
"KRN",19,10989,"RPC",1891,0)
ORWOR ACTION TEXT
"KRN",19,10989,"RPC",1892,0)
ORQQPXRM GEC DIALOG
"KRN",19,10989,"RPC",1893,0)
ORQQPXRM GET WH REPORT TEXT
"KRN",19,10989,"RPC",1894,0)
ORWDXR01 CANCHG
"KRN",19,10989,"RPC",1895,0)
ORWDXR01 SAVCHG
"KRN",19,10989,"RPC",1896,0)
TIU HAS AUTHOR SIGNED?
"KRN",19,10989,"RPC",1897,0)
ORQQPXRM CHECK REM VERSION
"KRN",19,10989,"RPC",1898,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10989,"RPC",1899,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10989,"RPC",1900,0)
ORWDAL32 SEND BULLETIN
"KRN",19,10989,"RPC",1901,0)
ORWDBA1 ORPKGTYP
"KRN",19,10989,"RPC",1902,0)
ORWDXR01 ISSPLY
"KRN",19,10989,"RPC",1903,0)
ORWDBA1 RCVORCI
"KRN",19,10989,"RPC",1904,0)
ORWPS REASON
"KRN",19,10989,"RPC",1905,0)
ORQQPXRM GEC FINISHED?
"KRN",19,10989,"RPC",1906,0)
ORWDXM3 ISUDQO
"KRN",19,10989,"RPC",1908,0)
ORWDBA1 SCLST
"KRN",19,10989,"RPC",1909,0)
ORWDXR01 OXDATA
"KRN",19,10989,"RPC",1914,0)
ORWDBA1 BASTATUS
"KRN",19,10989,"RPC",1920,0)
ORWORB SETSORT
"KRN",19,10989,"RPC",1921,0)
ORWORB GETSORT
"KRN",19,10989,"RPC",1922,0)
ORWOR EXPIRED
"KRN",19,10989,"RPC",1928,0)
ORECS01 GETDIV
"KRN",19,10989,"RPC",1933,0)
ORWTPD1 GETEFDAT
"KRN",19,10989,"RPC",1934,0)
ORWTPD1 GETEDATS
"KRN",19,10989,"RPC",1935,0)
ORWTPD1 PUTEDATS
"KRN",19,10989,"RPC",1936,0)
ORWTPD1 GETCSDEF
"KRN",19,10989,"RPC",1937,0)
ORWTPD1 GETCSRNG
"KRN",19,10989,"RPC",1938,0)
ORWTPD1 PUTCSRNG
"KRN",19,10989,"RPC",1939,0)
ORWTPD1 GETEAFL
"KRN",19,10989,"RPC",1940,0)
ORWDBA1 GETORDX
"KRN",19,10989,"RPC",1941,0)
ORWDBA3 HINTS
"KRN",19,10989,"RPC",1942,0)
ORWDAL32 LOAD FOR EDIT
"KRN",19,10989,"RPC",1943,0)
ORWDAL32 SAVE ALLERGY
"KRN",19,10989,"RPC",1944,0)
ORWDAL32 SITE PARAMS
"KRN",19,10989,"RPC",1945,0)
ORWPCE CXNOSHOW
"KRN",19,10989,"RPC",1946,0)
ORWDBA2 ADDPDL
"KRN",19,10989,"RPC",1947,0)
ORWDBA2 DELPDL
"KRN",19,10989,"RPC",1948,0)
ORWDBA2 GETDUDC
"KRN",19,10989,"RPC",1949,0)
ORWDBA2 GETPDL
"KRN",19,10989,"RPC",1950,0)
ORWDBA4 GETBAUSR
"KRN",19,10989,"RPC",1951,0)
ORWDBA4 GETTFCI
"KRN",19,10989,"RPC",1952,0)
ORWNSS NSSMSG
"KRN",19,10989,"RPC",1953,0)
ORWNSS QOSCH
"KRN",19,10989,"RPC",1954,0)
ORWNSS VALSCH
"KRN",19,10989,"RPC",1955,0)
ORWNSS CHKSCH
"KRN",19,10989,"RPC",1956,0)
ORWDPS4 ISUDIV
"KRN",19,10989,"RPC",1957,0)
ORWDPS32 AUTHNVA
"KRN",19,10989,"RPC",1962,0)
ORWTIU CHKTXT
"KRN",19,10989,"RPC",1964,0)
ORWDPS5 ISVTP
"KRN",19,10989,"RPC",1965,0)
TIU IS THIS A SURGERY?
"KRN",19,10989,"RPC",1966,0)
TIU IDENTIFY SURGERY CLASS
"KRN",19,10989,"RPC",1967,0)
TIU LONG LIST SURGERY TITLES
"KRN",19,10989,"RPC",1968,0)
TIU GET DOCUMENTS FOR REQUEST
"KRN",19,10989,"RPC",1969,0)
TIU SET ADMINISTRATIVE CLOSURE
"KRN",19,10989,"RPC",1970,0)
ORBCMA5 GETUDID
"KRN",19,10989,"RPC",1973,0)
ORIMO ISCLOC
"KRN",19,10989,"RPC",1974,0)
ORIMO ISIVQO
"KRN",19,10989,"RPC",1975,0)
ORWDBA7 GETIEN9
"KRN",19,10989,"RPC",1976,0)
ORWGN GNLOC
"KRN",19,10989,"RPC",1977,0)
ORWGN AUTHUSR
"KRN",19,10989,"RPC",1978,0)
ORVAA VAA
"KRN",19,10989,"RPC",1981,0)
ORWDAL32 CLINUSER
"KRN",19,10989,"RPC",1982,0)
ORWDBA7 ISWITCH
"KRN",19,10989,"RPC",1983,0)
ORWDFH CURRENT MEALS
"KRN",19,10989,"RPC",1984,0)
ORWDFH NFSLOC READY
"KRN",19,10989,"RPC",1985,0)
ORWDFH OPDIETS
"KRN",19,10989,"RPC",1986,0)
ORWMHV MHV
"KRN",19,10989,"RPC",1987,0)
ORWPCE1 NONCOUNT
"KRN",19,10989,"RPC",1988,0)
ORWPFSS IS PFSS ACTIVE?
"KRN",19,10989,"RPC",1989,0)
GMV EXTRACT REC
"KRN",19,10989,"RPC",1990,0)
GMV MARK ERROR
"KRN",19,10989,"RPC",1991,0)
ORWDXVB COMPORD
"KRN",19,10989,"RPC",1992,0)
ORWDXVB GETALL
"KRN",19,10989,"RPC",1993,0)
ORWDXVB RAW
"KRN",19,10989,"RPC",1994,0)
ORWDXVB RESULTS
"KRN",19,10989,"RPC",1995,0)
ORWDXVB STATALOW
"KRN",19,10989,"RPC",1996,0)
ORWGRPC ALLITEMS
"KRN",19,10989,"RPC",1997,0)
ORWGRPC CLASS
"KRN",19,10989,"RPC",1998,0)
ORWGRPC DATEITEM
"KRN",19,10989,"RPC",1999,0)
ORWGRPC DELVIEWS
"KRN",19,10989,"RPC",2000,0)
ORWGRPC DETAILS
"KRN",19,10989,"RPC",2001,0)
ORWGRPC GETDATES
"KRN",19,10989,"RPC",2002,0)
ORWGRPC GETPREF
"KRN",19,10989,"RPC",2003,0)
ORWGRPC GETVIEWS
"KRN",19,10989,"RPC",2004,0)
ORWGRPC ITEMDATA
"KRN",19,10989,"RPC",2005,0)
ORWGRPC ITEMS
"KRN",19,10989,"RPC",2006,0)
ORWGRPC LOOKUP
"KRN",19,10989,"RPC",2007,0)
ORWGRPC PUBLIC
"KRN",19,10989,"RPC",2008,0)
ORWGRPC RPTPARAM
"KRN",19,10989,"RPC",2009,0)
ORWGRPC SETPREF
"KRN",19,10989,"RPC",2010,0)
ORWGRPC SETVIEWS
"KRN",19,10989,"RPC",2011,0)
ORWGRPC TESTSPEC
"KRN",19,10989,"RPC",2012,0)
ORWGRPC TYPES
"KRN",19,10989,"RPC",2013,0)
TIU GET DOCUMENT STATUS
"KRN",19,10989,"RPC",2014,0)
TIU GET PRF ACTIONS
"KRN",19,10989,"RPC",2015,0)
TIU ISPRF
"KRN",19,10989,"RPC",2016,0)
TIU LINK TO FLAG
"KRN",19,10989,"RPC",2017,0)
ORWGRPC DETAIL
"KRN",19,10989,"RPC",2018,0)
ORWU VERSION
"KRN",19,10989,"RPC",2019,0)
GMV ALLERGY
"KRN",19,10989,"RPC",2020,0)
ORWCIRN WEBADDR
"KRN",19,10989,"RPC",2023,0)
ORWGRPC TAX
"KRN",19,10989,"RPC",2024,0)
GMV DLL VERSION
"KRN",19,10989,"RPC",2025,0)
ORWDX CHANGE
"KRN",19,10989,"RPC",2026,0)
GMV ADD VM
"KRN",19,10989,"RPC",2027,0)
GMV CONVERT DATE
"KRN",19,10989,"RPC",2028,0)
GMV GET CATEGORY IEN
"KRN",19,10989,"RPC",2029,0)
GMV GET CURRENT TIME
"KRN",19,10989,"RPC",2030,0)
GMV GET VITAL TYPE IEN
"KRN",19,10989,"RPC",2031,0)
GMV LATEST VM
"KRN",19,10989,"RPC",2032,0)
GMV MANAGER
"KRN",19,10989,"RPC",2033,0)
GMV PARAMETER
"KRN",19,10989,"RPC",2034,0)
GMV USER
"KRN",19,10989,"RPC",2035,0)
GMV VITALS/CAT/QUAL
"KRN",19,10989,"RPC",2036,0)
GMV V/M ALLDATA
"KRN",19,10989,"RPC",2037,0)
TIU GET LINKED PRF NOTES
"KRN",19,10989,"RPC",2038,0)
TIU GET PRF TITLE
"KRN",19,10989,"RPC",2039,0)
ORWDX1 PATWARD
"KRN",19,10989,"RPC",2040,0)
ORWRP4 HDR MODIFY
"KRN",19,10989,"RPC",2041,0)
ORWDX1 STCHANGE
"KRN",19,10989,"RPC",2042,0)
ORWDX1 DCREN
"KRN",19,10989,"RPC",2043,0)
ORQQPXRM MHV
"KRN",19,10989,"RPC",2044,0)
ORWGRPC GETSIZE
"KRN",19,10989,"RPC",2045,0)
ORWGRPC SETSIZE
"KRN",19,10989,"RPC",2046,0)
GMV LOCATION SELECT
"KRN",19,10989,"RPC",2047,0)
ORWCIRN AUTORDV
"KRN",19,10989,"RPC",2048,0)
ORPRF TRIGGER POPUP
"KRN",19,10989,"RPC",2049,0)
ORWCIRN HDRON
"KRN",19,10989,"RPC",2051,0)
ORCDLR2 CHECK ALL LC TO WC
"KRN",19,10989,"RPC",2052,0)
ORCDLR2 CHECK ONE LC TO WC
"KRN",19,10989,"RPC",2053,0)
ORALWORD ALLWORD
"KRN",19,10989,"RPC",2054,0)
ORWDX1 ORDMATCH
"KRN",19,10989,"RPC",2055,0)
ORWDX1 DCORIG
"KRN",19,10989,"RPC",2056,0)
ORWDX1 UNDCORIG
"KRN",19,10989,"RPC",2057,0)
ORWDXVB SUBCHK
"KRN",19,10989,"RPC",2058,0)
ORDDPAPI ADMTIME
"KRN",19,10989,"RPC",2059,0)
ORWU PARAMS
"KRN",19,10989,"RPC",2060,0)
ORWDPS1 DOWSCH
"KRN",19,10989,"RPC",2061,0)
ORWDPS33 COMPLOC
"KRN",19,10989,"RPC",2062,0)
ORWGRPC FASTDATA
"KRN",19,10989,"RPC",2063,0)
ORWGRPC FASTITEM
"KRN",19,10989,"RPC",2064,0)
ORWGRPC FASTTASK
"KRN",19,10989,"RPC",2065,0)
ORWGRPC FASTLABS
"KRN",19,10989,"RPC",2066,0)
ORWDPS1 QOMEDALT
"KRN",19,10989,"RPC",2067,0)
ORWGRPC ALLVIEWS
"KRN",19,10989,"RPC",2068,0)
ORDDPAPI CLOZMSG
"KRN",19,10989,"RPC",2069,0)
ORWGRPC TESTING
"KRN",19,10989,"RPC",2070,0)
ORQQPXRM MHDLL
"KRN",19,10989,"RPC",2071,0)
ORWDLR33 LC TO WC
"KRN",19,10989,"RPC",2072,0)
ORWU2 COSIGNER
"KRN",19,10989,"RPC",2073,0)
ORWDXVB NURSADMN
"KRN",19,10989,"RPC",2075,0)
TIU IS USER A USR PROVIDER
"KRN",19,10989,"RPC",2076,0)
ORWDPS33 IVDOSFRM
"KRN",19,10989,"RPC",2077,0)
ORWDPS32 ALLIVRTE
"KRN",19,10989,"RPC",2078,0)
ORWDXM1 SVRPC
"KRN",19,10989,"RPC",2079,0)
ORWDXVB VBTNS
"KRN",19,10989,"RPC",2080,0)
MAG4 REMOTE IMPORT
"KRN",19,10989,"RPC",2081,0)
ORWDX UNLKOTH
"KRN",19,10989,"RPC",2082,0)
OR GET COMBAT VET
"KRN",19,10989,"RPC",2083,0)
GMV CLOSEST READING
"KRN",19,10989,"RPC",2084,0)
ORQQCN ISPROSVC
"KRN",19,10989,"RPC",2085,0)
ORQQPL PROBLEM NTRT BULLETIN
"KRN",19,10989,"RPC",2086,0)
ORWPCE GET DX TEXT
"KRN",19,10989,"RPC",2087,0)
ORCHECK ISMONO
"KRN",19,10989,"RPC",2088,0)
ORCHECK GETMONO
"KRN",19,10989,"RPC",2089,0)
ORCHECK GETMONOL
"KRN",19,10989,"RPC",2090,0)
ORCHECK DELMONO
"KRN",19,10989,"RPC",2091,0)
ORCHECK GETXTRA
"KRN",19,10989,"RPC",2092,0)
ORWDPS33 GETADDFR
"KRN",19,10989,"RPC",2093,0)
ORCNOTE GET TOTAL
"KRN",19,10989,"RPC",2094,0)
ORVW FACLIST
"KRN",19,10989,"RPC",2095,0)
ORWDXVB3 DIAGORD
"KRN",19,10989,"RPC",2096,0)
ORWDXVB3 COLLTIM
"KRN",19,10989,"RPC",2097,0)
ORWDXVB3 SWPANEL
"KRN",19,10989,"RPC",2099,0)
XUS PKI GET UPN
"KRN",19,10989,"RPC",2100,0)
ORDEA HASHINFO
"KRN",19,10989,"RPC",2101,0)
ORDEA ORDHINFO
"KRN",19,10989,"RPC",2102,0)
ORDEA DEATEXT
"KRN",19,10989,"RPC",2103,0)
ORDEA CSVALUE
"KRN",19,10989,"RPC",2104,0)
ORDEA SIGINFO
"KRN",19,10989,"RPC",2106,0)
ORWPCE ICDVER
"KRN",19,10989,"RPC",2107,0)
ORDEA PINLKCHK
"KRN",19,10989,"RPC",2108,0)
ORDEA PINLKSET
"KRN",19,10989,"RPC",2109,0)
ORQQPL4 LEX
"KRN",19,10989,"RPC",2110,0)
ORDEA PNDHLD
"KRN",19,10989,"RPC",2111,0)
XUS PKI SET UPN
"KRN",19,10989,"RPC",2112,0)
ORDEA LNKMSG
"KRN",19,10989,"RPC",2113,0)
ORWPCE4 LEX
"KRN",19,10989,"RPC",2114,0)
ORWLEX GETI10DX
"KRN",19,10989,"RPC",2115,0)
ORWPCE I10IMPDT
"KRN",19,10989,"RPC",2131,0)
ORWLEX GETFREQ
"KRN",19,10989,"RPC",2132,0)
ORDEBUG SAVERPCS
"KRN",19,10989,"RPC",2133,0)
ORDEBUG SAVEDESC
"KRN",19,10989,"RPC",2144,0)
XWB ARE RPCS AVAILABLE
"KRN",19,10989,"RPC",2145,0)
ORWRP1A RADIO
"KRN",19,10989,"RPC",2146,0)
ORQQCN GET USER AUTH
"KRN",19,10989,"RPC",2147,0)
ORUTL ISCLORD
"KRN",19,10989,"RPC",2148,0)
ORWU OVERDL
"KRN",19,10989,"RPC",2149,0)
ORBCMA5 JOB
"KRN",19,10989,"RPC",2150,0)
ORBCMA5 LOCK
"KRN",19,10989,"RPC",2151,0)
ORBCMA5 UNLOCK
"KRN",19,10989,"RPC",2152,0)
TIU CAN PRINT WORK/CHART COPY
"KRN",19,10989,"RPC",2154,0)
ORWGN IDTVALID
"KRN",19,10989,"RPC",2155,0)
ORWGN MAXFRQ
"KRN",19,10989,"RPC",2156,0)
ORUTL4 DLL
"KRN",19,10989,"RPC",2157,0)
ORWCIRN JLV LABEL
"KRN",19,10989,"RPC",2158,0)
ORWDSD1 ODSLCT
"KRN",19,10989,"U")
CPRSCHART VERSION 1.0.31.116
"KRN",101,3601,-1)
4^2
"KRN",101,3601,0)
OCX ORDER CHECK HL7 RECIEVE
"KRN",101,6356,-1)
0^1
"KRN",101,6356,0)
OR EVSEND SD^APPOINTMENT REQUEST EVENT^^X^^^^^^^^
"KRN",101,6356,1,0)
^101.06^2^2^3170509^^
"KRN",101,6356,1,1,0)
This protocol is used to send return to clinic appointment requests to 
"KRN",101,6356,1,2,0)
Scheduling.
"KRN",101,6356,10,0)
^101.01PA^2^2
"KRN",101,6356,10,1,0)
3601^^2^
"KRN",101,6356,10,1,"^")
OCX ORDER CHECK HL7 RECIEVE
"KRN",101,6356,99)
64469,46636
"KRN",8989.5,22706,0)
170;DIC(9.4,^OR MOB DLL NAME^1
"KRN",8989.5,22706,1)
OrderCom.dll
"KRN",8989.51,864,-1)
0^1
"KRN",8989.51,864,0)
ORWRP LEGACY VIEWER LABEL^JLV Remote Button Label Name^^^JLV REMOTE BUTTON LABEL NAME
"KRN",8989.51,864,1)
F^^Enter the name for the JLV/VistaWeb Remote button
"KRN",8989.51,864,20,0)
^^7^7^3161019^
"KRN",8989.51,864,20,1,0)
This parameter works in conjunction with the ORWRP VISTAWEB
"KRN",8989.51,864,20,2,0)
ADDRESS parameter for viewing external remote data using the
"KRN",8989.51,864,20,3,0)
WEB. VistaWeb has been the vehicle for viewing external remote
"KRN",8989.51,864,20,4,0)
data, but the VA is transitioning to a new vehicle called JLV
"KRN",8989.51,864,20,5,0)
 (Joint Legacy Viewer). When a site moves to JLV, this parameter 
"KRN",8989.51,864,20,6,0)
value will need to be set to "JLV" and the URL will need to be 
"KRN",8989.51,864,20,7,0)
updated to point to the JLV website.
"KRN",8989.51,864,30,0)
^8989.513I^4^4
"KRN",8989.51,864,30,1,0)
1^200
"KRN",8989.51,864,30,2,0)
2^4
"KRN",8989.51,864,30,3,0)
3^4.2
"KRN",8989.51,864,30,4,0)
4^9.4
"KRN",8989.51,867,-1)
0^2
"KRN",8989.51,867,0)
OR MOB DLL NAME^CPRS Med Order Button DLL file name^0^CPRS MOB DLL name^^0
"KRN",8989.51,867,1)
F^^Name of the DLL on the windows file system
"KRN",8989.51,867,6)
F^free^Name of the CPRS MOB DLL
"KRN",8989.51,867,20,0)
^^2^2^3161026^
"KRN",8989.51,867,20,1,0)
This parameter is used to store the name of the .dll on the file system 
"KRN",8989.51,867,20,2,0)
of the CPRS users of this VistA system.
"KRN",8989.51,867,30,0)
^8989.513I^3^3
"KRN",8989.51,867,30,1,0)
1^200
"KRN",8989.51,867,30,2,0)
2^4.2
"KRN",8989.51,867,30,3,0)
3^9.4
"KRN",8989.51,876,-1)
0^4
"KRN",8989.51,876,0)
OR SD DIALOG PREREQ^RTC Order Dialog Prerequisites^1^^RTC Order Prerequisites
"KRN",8989.51,876,1)
F^^Enter prerequisites that show in the RTC Order Dialog
"KRN",8989.51,876,6)
F
"KRN",8989.51,876,30,0)
^8989.513I^1^1
"KRN",8989.51,876,30,1,0)
6^4.2
"KRN",8989.51,877,-1)
0^3
"KRN",8989.51,877,0)
OR SD ADDITIONAL INFORMATION^RTC Order Dialog Additional Information^0^^Additional Information Message Text
"KRN",8989.51,877,1)
W^^Enter a message to display when writing a Return to Clinic Order
"KRN",8989.51,877,20,0)
^8989.512^2^2^3170509^
"KRN",8989.51,877,20,1,0)
This parameter allows sites to set what text they would like the users to 
"KRN",8989.51,877,20,2,0)
see when placing a Return To Clinic Order.
"KRN",8989.51,877,30,0)
^8989.513I^2^2
"KRN",8989.51,877,30,1,0)
6^4.2
"KRN",8989.51,877,30,2,0)
5^4
"KRN",8994,3567,-1)
0^1
"KRN",8994,3567,0)
ORWCIRN JLV LABEL^JLV^ORWCIRN^1
"KRN",8994,3567,1,0)
^^5^5^3161019^
"KRN",8994,3567,1,1,0)
This RPC gets the Label/Caption for the JLV/VistaWeb external
"KRN",8994,3567,1,2,0)
remote data button. The label has historically had a value of 
"KRN",8994,3567,1,3,0)
VistaWeb.  With the addition of this RPC and a new parameter, 
"KRN",8994,3567,1,4,0)
ORWRP LEGACY VIEWER LABEL, the caption of this button can be
"KRN",8994,3567,1,5,0)
changed to JLV (Joint Legacy Viewer) when JLV becomes available.
"KRN",8994,3661,-1)
0^2
"KRN",8994,3661,0)
ORWDSD1 ODSLCT^ODSLCT^ORWDSD1^2
"KRN",8994,3661,2,0)
^8994.02A^2^2
"KRN",8994,3661,2,1,0)
DFN^1^^1^1
"KRN",8994,3661,2,2,0)
LOC^1^^1^2
"KRN",8994,3661,2,"B","DFN",1)

"KRN",8994,3661,2,"B","LOC",2)

"KRN",8994,3661,2,"PARAMSEQ",1,1)

"KRN",8994,3661,2,"PARAMSEQ",2,2)

"MBREQ")
1
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",100.9,1,1,1)
NON-MENU TYPE OPTION ACTION^P19'^DIC(19,^1;1^Q
"PGL",100.98,0,4,4)
DEFAULT DIALOG^P101.41'^ORD(101.41,^0;4^Q
"PGL",101.41,0,5,5)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"PGL",101.41,0,7,7)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"PGL",101.412,0,2,2)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"PGL",101.412,0,11,1)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"PGL",101.415,0,2,2)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"PGL",101.416,0,2,.02)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"PKG",170,-1)
1^1
"PKG",170,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",170,20,0)
^9.402P^^
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
3.0^2971217^2980917^11712
"PKG",170,22,1,"PAH",1,0)
434^3171010^10000000200
"PRE")
ORY434
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","ORB3FUP2")
0^10^B69924581
"RTN","ORB3FUP2",1,0)
ORB3FUP2 ; slc/CLA - Routine to support notification follow-up actions ;8/29/17
"RTN","ORB3FUP2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**31,64,88,112,243,434**;Dec 17, 1997;Build 35
"RTN","ORB3FUP2",3,0)
RESULT ;STAT, orderer-flagged and site-flagged result follow-up
"RTN","ORB3FUP2",4,0)
 ;determine what pkg to get report/results from then do RPTLAB or RPTRAD
"RTN","ORB3FUP2",5,0)
 N ORBFILL S ORBFILL=$P($P(XQADATA,"|",2),"@",2)
"RTN","ORB3FUP2",6,0)
 I ORBFILL["LR" D RPTLAB
"RTN","ORB3FUP2",7,0)
 I ORBFILL["RA" D RPTRAD
"RTN","ORB3FUP2",8,0)
 I ORBFILL["GMRC" D RPTCON
"RTN","ORB3FUP2",9,0)
 Q
"RTN","ORB3FUP2",10,0)
CSPN ;co-sign progress note(s) follow-up
"RTN","ORB3FUP2",11,0)
 K XQAKILL
"RTN","ORB3FUP2",12,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",13,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",14,0)
 I $G(ORENVIR)="GUI" ;entry pt to get notes req co-sign then quit
"RTN","ORB3FUP2",15,0)
 ;joel rtn to display notes req co-signature and allow co-sign on vt
"RTN","ORB3FUP2",16,0)
 ;if lm fup action completed D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",17,0)
 Q
"RTN","ORB3FUP2",18,0)
USPN ;unsigned progress note(s) follow-up
"RTN","ORB3FUP2",19,0)
 K XQAKILL
"RTN","ORB3FUP2",20,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",21,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",22,0)
 I $G(ORENVIR)="GUI" ;entry pt to get unsigned notes then quit
"RTN","ORB3FUP2",23,0)
 ;joel rtn to display notes req signature and allow signature on vt
"RTN","ORB3FUP2",24,0)
 ;if lm fup action completed D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",25,0)
 Q
"RTN","ORB3FUP2",26,0)
EXMED ;expiring med(s) follow-up
"RTN","ORB3FUP2",27,0)
 K XQAKILL
"RTN","ORB3FUP2",28,0)
 N ORPT,ORDG,ORBXQAID,ORY,ORBLMDEL
"RTN","ORB3FUP2",29,0)
 S ORBXQAID=XQAID
"RTN","ORB3FUP2",30,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",31,0)
 ;the FLG code for EXPIRING orders in ORQ1 is '5'
"RTN","ORB3FUP2",32,0)
 I $G(ORENVIR)="GUI" D LIST^ORQOR1(.ORBY,ORPT,"RX",5,"","")
"RTN","ORB3FUP2",33,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",34,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",35,0)
 .S ORDG=$$DG^ORQOR1("RX")  ;get Display Group ien
"RTN","ORB3FUP2",36,0)
 .D EN^ORCB(ORPT,5,ORDG,.ORBLMDEL)
"RTN","ORB3FUP2",37,0)
 .K ^TMP("ORR",$J)
"RTN","ORB3FUP2",38,0)
 .Q:$G(ORBLMDEL)=1  ;if EN^ORCB rtns ORBLMDEL=1, alert was removed in LM
"RTN","ORB3FUP2",39,0)
 .D EN^ORQ1(ORPT_";DPT(",ORDG,5,"","","",0,0)
"RTN","ORB3FUP2",40,0)
 .S X="",X=$O(^TMP("ORR",$J,X)) Q:X=""  I +$G(^TMP("ORR",$J,X,"TOT"))<1 D
"RTN","ORB3FUP2",41,0)
 ..D DEL^ORB3FUP1(.ORY,ORBXQAID)  ;if no more EXPIRING orders found, delete the alert
"RTN","ORB3FUP2",42,0)
 .K X,^TMP("ORR",$J)
"RTN","ORB3FUP2",43,0)
 Q
"RTN","ORB3FUP2",44,0)
UVMED ;unverified med(s) follow-up
"RTN","ORB3FUP2",45,0)
 K XQAKILL
"RTN","ORB3FUP2",46,0)
 N ORPT,ORDG,ORBXQAID,ORY,ORBLMDEL,ORADT
"RTN","ORB3FUP2",47,0)
 S ORBXQAID=XQAID
"RTN","ORB3FUP2",48,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",49,0)
 ;the FLG code for UNVERIFIED (NURSE) orders in ORQ1 is '9'
"RTN","ORB3FUP2",50,0)
 I $G(ORENVIR)="GUI" D LIST^ORQOR1(.ORBY,ORPT,"RX",9,"","")
"RTN","ORB3FUP2",51,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",52,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",53,0)
 .S ORDG=$$DG^ORQOR1("RX")  ;get Display Group ien
"RTN","ORB3FUP2",54,0)
 .D EN^ORCB(ORPT,9,ORDG,.ORBLMDEL)
"RTN","ORB3FUP2",55,0)
 .K ^TMP("ORR",$J)
"RTN","ORB3FUP2",56,0)
 .Q:$G(ORBLMDEL)=1  ;if EN^ORCB rtns ORBLMDEL=1, alert was removed in LM
"RTN","ORB3FUP2",57,0)
 .;
"RTN","ORB3FUP2",58,0)
 .;if user doesn't have ORELSE or ORMAS keys (can't verify),
"RTN","ORB3FUP2",59,0)
 .;   delete user's alert after display:
"RTN","ORB3FUP2",60,0)
 .I '$D(^XUSEC("ORELSE",DUZ)),('$D(^XUSEC("OREMAS",DUZ))) S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID) Q
"RTN","ORB3FUP2",61,0)
 .;
"RTN","ORB3FUP2",62,0)
 .;get current admission date/time:
"RTN","ORB3FUP2",63,0)
 .N DFN S DFN=ORPT,VA200="" D INP^VADPT
"RTN","ORB3FUP2",64,0)
 .S ORADT=$P($G(VAIN(7)),U)
"RTN","ORB3FUP2",65,0)
 .S ORADT=$S('$L($G(ORADT)):$$FMADD^XLFDT($$NOW^XLFDT,"-30"),1:ORADT)
"RTN","ORB3FUP2",66,0)
 .;
"RTN","ORB3FUP2",67,0)
 .;if no more UNVERIFIED MED orders found (within current admission or
"RTN","ORB3FUP2",68,0)
 .; past 30 days), delete the alert:
"RTN","ORB3FUP2",69,0)
 .D EN^ORQ1(ORPT_";DPT(",ORDG,9,"",ORADT,$$NOW^XLFDT,0,0)
"RTN","ORB3FUP2",70,0)
 .S X="",X=$O(^TMP("ORR",$J,X)) Q:X=""  I +$G(^TMP("ORR",$J,X,"TOT"))<1 D
"RTN","ORB3FUP2",71,0)
 ..D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",72,0)
 .K X,^TMP("ORR",$J),VA200,VAIN
"RTN","ORB3FUP2",73,0)
 Q
"RTN","ORB3FUP2",74,0)
UNVER ;unverified order(s) follow-up
"RTN","ORB3FUP2",75,0)
 K XQAKILL
"RTN","ORB3FUP2",76,0)
 N ORPT,ORDG,ORBXQAID,ORY,ORBLMDEL,ORADT
"RTN","ORB3FUP2",77,0)
 S ORBXQAID=XQAID
"RTN","ORB3FUP2",78,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",79,0)
 ;the FLG code for UNVERIFIED (NURSE) orders in ORQ1 is '9'
"RTN","ORB3FUP2",80,0)
 I $G(ORENVIR)="GUI" D LIST^ORQOR1(.ORBY,ORPT,"ALL",9,"","")
"RTN","ORB3FUP2",81,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",82,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",83,0)
 .S ORDG=$$DG^ORQOR1("ALL")  ;get Display Group ien
"RTN","ORB3FUP2",84,0)
 .D EN^ORCB(ORPT,9,ORDG,.ORBLMDEL)
"RTN","ORB3FUP2",85,0)
 .K ^TMP("ORR",$J)
"RTN","ORB3FUP2",86,0)
 .Q:$G(ORBLMDEL)=1  ;if EN^ORCB rtns ORBLMDEL=1, alert was removed in LM
"RTN","ORB3FUP2",87,0)
 .;
"RTN","ORB3FUP2",88,0)
 .;if user doesn't have ORELSE or ORMAS keys (can't verify),
"RTN","ORB3FUP2",89,0)
 .;   delete user's alert after display:
"RTN","ORB3FUP2",90,0)
 .I '$D(^XUSEC("ORELSE",DUZ)),('$D(^XUSEC("OREMAS",DUZ))) S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID) Q
"RTN","ORB3FUP2",91,0)
 .;
"RTN","ORB3FUP2",92,0)
 .;get current admission date/time:
"RTN","ORB3FUP2",93,0)
 .N DFN S DFN=ORPT,VA200="" D INP^VADPT
"RTN","ORB3FUP2",94,0)
 .S ORADT=$P($G(VAIN(7)),U)
"RTN","ORB3FUP2",95,0)
 .S ORADT=$S('$L($G(ORADT)):$$FMADD^XLFDT($$NOW^XLFDT,"-30"),1:ORADT)
"RTN","ORB3FUP2",96,0)
 .;
"RTN","ORB3FUP2",97,0)
 .;if no more UNVERIFIED orders found (within current admission or past
"RTN","ORB3FUP2",98,0)
 .; 30 days), delete the alert:
"RTN","ORB3FUP2",99,0)
 .D EN^ORQ1(ORPT_";DPT(",ORDG,9,"",ORADT,$$NOW^XLFDT,0,0)
"RTN","ORB3FUP2",100,0)
 .S X="",X=$O(^TMP("ORR",$J,X)) Q:X=""  I +$G(^TMP("ORR",$J,X,"TOT"))<1 D
"RTN","ORB3FUP2",101,0)
 ..D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",102,0)
 .K X,^TMP("ORR",$J),VA200,VAIN
"RTN","ORB3FUP2",103,0)
 Q
"RTN","ORB3FUP2",104,0)
NEWCON ;new consult/request follow-up
"RTN","ORB3FUP2",105,0)
 K XQAKILL
"RTN","ORB3FUP2",106,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",107,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",108,0)
 ;I $G(ORENVIR)="GUI" D  ;comment out until GUI follow-up
"RTN","ORB3FUP2",109,0)
 ;.entry pt to get new consults then quit
"RTN","ORB3FUP2",110,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",111,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",112,0)
 .D EN^GMRCALRT(XQADATA,XQAID) ;display new c/r and allow action
"RTN","ORB3FUP2",113,0)
 .;D DEL^ORB3FUP1(.ORY,ORBXQAID) ;Dwight does the delete in GMRC
"RTN","ORB3FUP2",114,0)
 Q
"RTN","ORB3FUP2",115,0)
UPCON ;updated consult/request follow-up
"RTN","ORB3FUP2",116,0)
 K XQAKILL
"RTN","ORB3FUP2",117,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",118,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",119,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",120,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",121,0)
 .D EN^GMRCALRT(XQADATA,XQAID) ;display updated c/r and allow action
"RTN","ORB3FUP2",122,0)
 Q
"RTN","ORB3FUP2",123,0)
DCCON ;cancelled, held or DCed consult/request follow-up
"RTN","ORB3FUP2",124,0)
 K XQAKILL
"RTN","ORB3FUP2",125,0)
 N ORPT,NXQADATA
"RTN","ORB3FUP2",126,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",127,0)
 ;I $G(ORENVIR)="GUI" D  ;comment out until GUI follow-up
"RTN","ORB3FUP2",128,0)
 ;.entry pt to get new consults then quit
"RTN","ORB3FUP2",129,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",130,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",131,0)
 .I XQADATA["GMRC" S NXQADATA=$P($P(XQADATA,"|",2),"@") D EN^GMRCEDIT(NXQADATA,XQAID)
"RTN","ORB3FUP2",132,0)
 .I +$G(NXQADATA)<1 D EN^GMRCEDIT(XQADATA,XQAID)
"RTN","ORB3FUP2",133,0)
 Q
"RTN","ORB3FUP2",134,0)
RPTCON ;consult result follow-up
"RTN","ORB3FUP2",135,0)
 K XQAKILL
"RTN","ORB3FUP2",136,0)
 N NXQADATA
"RTN","ORB3FUP2",137,0)
 ;N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",138,0)
 ;S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",139,0)
 I $G(ORENVIR)="GUI" D DETAIL^ORQQCN(.ORBY,XQADATA)
"RTN","ORB3FUP2",140,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",141,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",142,0)
 .D EN^GMRCALRT(XQADATA,XQAID)
"RTN","ORB3FUP2",143,0)
 .;I XQADATA["GMRC" S NXQADATA=$P($P(XQADATA,"|",2),"@") D EN^GMRCALRT(NXQADATA,XQAID)
"RTN","ORB3FUP2",144,0)
 .;I +$G(NXQADATA)<1 D EN^GMRCALRT(XQADATA,XQAID)
"RTN","ORB3FUP2",145,0)
 .;D DEL^ORB3FUP1(.ORY,ORBXQAID) ;Dwight does the delete in GMRC
"RTN","ORB3FUP2",146,0)
 Q
"RTN","ORB3FUP2",147,0)
RPTAP ; AP lab result follow-up
"RTN","ORB3FUP2",148,0)
 K XQAKILL
"RTN","ORB3FUP2",149,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",150,0)
 S ORPT=$P($P(ORBXQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",151,0)
 N ORACCNUM,ORDTSTKN S ORACCNUM=$P(XQADATA,U,2),ORDTSTKN=$P(XQADATA,U,3)
"RTN","ORB3FUP2",152,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",153,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",154,0)
 .D EN1^ORCXPND(ORPT,ORACCNUM_"-"_ORDTSTKN,"LABS")
"RTN","ORB3FUP2",155,0)
 .D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",156,0)
 Q
"RTN","ORB3FUP2",157,0)
RPTLAB ;lab result follow-up
"RTN","ORB3FUP2",158,0)
 K XQAKILL
"RTN","ORB3FUP2",159,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",160,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",161,0)
 N ORDER,ORLAB S ORDER=$P(XQADATA,"@")
"RTN","ORB3FUP2",162,0)
 I $G(ORENVIR)="GUI" D DETAIL^ORQQLR(.ORBY,ORPT,ORDER)
"RTN","ORB3FUP2",163,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",164,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",165,0)
 .;S ORLAB=$$OETOLAB^ORQQLR1(ORDER)
"RTN","ORB3FUP2",166,0)
 .;Q:'$L($G(ORLAB))
"RTN","ORB3FUP2",167,0)
 .;D EN1^ORCXPND(ORPT,ORLAB,"LABS")  ;api used lab # pre-6/97
"RTN","ORB3FUP2",168,0)
 .D EN1^ORCXPND(ORPT,ORDER,"LABS")
"RTN","ORB3FUP2",169,0)
 .D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",170,0)
 Q
"RTN","ORB3FUP2",171,0)
RPTRAD ;radiology result follow-up for HL7-triggered notifications
"RTN","ORB3FUP2",172,0)
 K XQAKILL
"RTN","ORB3FUP2",173,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",174,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",175,0)
 N INVDT,CASE S INVDT="",CASE=""
"RTN","ORB3FUP2",176,0)
 ;XQADATA is different for HL7-triggered vs. radiology pkg triggered
"RTN","ORB3FUP2",177,0)
 S INVDT=$P(XQADATA,"~",2),CASE=$P($P(XQADATA,"~",3),"@")
"RTN","ORB3FUP2",178,0)
 I $G(ORENVIR)="GUI" D DETAIL^ORQQRA(.ORBY,ORPT,INVDT,CASE)
"RTN","ORB3FUP2",179,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",180,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",181,0)
 .D EN1^ORCXPND(ORPT,INVDT_"-"_CASE,"XRAYS")
"RTN","ORB3FUP2",182,0)
 .D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",183,0)
 Q
"RTN","ORB3FUP2",184,0)
RPTRAD2 ;radiology result follow-up for radiology pkg-triggered notifications
"RTN","ORB3FUP2",185,0)
 K XQAKILL
"RTN","ORB3FUP2",186,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",187,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",188,0)
 N INVDT,CASE S INVDT="",CASE=""
"RTN","ORB3FUP2",189,0)
 ;XQADATA is different for HL7-triggered vs. radiology pkg triggered
"RTN","ORB3FUP2",190,0)
 S INVDT=$P(XQADATA,"~",1),CASE=$P(XQADATA,"~",2)
"RTN","ORB3FUP2",191,0)
 I $G(ORENVIR)="GUI" D DETAIL^ORQQRA(.ORBY,ORPT,INVDT,CASE)
"RTN","ORB3FUP2",192,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",193,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",194,0)
 .D EN1^ORCXPND(ORPT,INVDT_"-"_CASE,"XRAYS")
"RTN","ORB3FUP2",195,0)
 .D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",196,0)
 Q
"RTN","ORB3FUP2",197,0)
EXOI ;expiring flagged orderable items follow-up
"RTN","ORB3FUP2",198,0)
 K XQAKILL
"RTN","ORB3FUP2",199,0)
 N ORPT,ORDG,ORBXQAID,ORY,ORBLMDEL
"RTN","ORB3FUP2",200,0)
 S ORBXQAID=XQAID
"RTN","ORB3FUP2",201,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",202,0)
 ;the FLG code for EXPIRING orders in ORQ1 is '5'
"RTN","ORB3FUP2",203,0)
 I $G(ORENVIR)="GUI" D LIST^ORQOR1(.ORBY,ORPT,"ALL",5,"","")
"RTN","ORB3FUP2",204,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",205,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",206,0)
 .S ORDG=$$DG^ORQOR1("ALL")  ;get Display Group ien
"RTN","ORB3FUP2",207,0)
 .D EN^ORCB(ORPT,5,ORDG,.ORBLMDEL)
"RTN","ORB3FUP2",208,0)
 .K ^TMP("ORR",$J)
"RTN","ORB3FUP2",209,0)
 .Q:$G(ORBLMDEL)=1  ;if EN^ORCB rtns ORBLMDEL=1, alert was removed in LM
"RTN","ORB3FUP2",210,0)
 .D EN^ORQ1(ORPT_";DPT(",ORDG,5,"","","",0,0)
"RTN","ORB3FUP2",211,0)
 .S X="",X=$O(^TMP("ORR",$J,X)) Q:X=""  I +$G(^TMP("ORR",$J,X,"TOT"))<1 D
"RTN","ORB3FUP2",212,0)
 ..D DEL^ORB3FUP1(.ORY,ORBXQAID)  ;if no more EXPIRING orders found, delete the alert
"RTN","ORB3FUP2",213,0)
 .K X,^TMP("ORR",$J)
"RTN","ORB3FUP2",214,0)
 Q
"RTN","ORB3FUP2",215,0)
INTCON ;consult interpretation follow-up
"RTN","ORB3FUP2",216,0)
 K XQAKILL
"RTN","ORB3FUP2",217,0)
 N NXQADATA
"RTN","ORB3FUP2",218,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",219,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",220,0)
 .R !!?5,"This alert must be processed in the CPRS GUI.",X:10
"RTN","ORB3FUP2",221,0)
 .K X
"RTN","ORB3FUP2",222,0)
 Q
"RTN","ORB3FUP2",223,0)
CHGRAD ;radiology follow-up for #67 Imaging Request Changed
"RTN","ORB3FUP2",224,0)
 K XQAKILL
"RTN","ORB3FUP2",225,0)
 N ORPT,ORBXQAID,ORY S ORBXQAID=XQAID
"RTN","ORB3FUP2",226,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORB3FUP2",227,0)
 I $G(ORENVIR)'="GUI" D
"RTN","ORB3FUP2",228,0)
 .D MSG^ORB3FUP1
"RTN","ORB3FUP2",229,0)
 .I $L($T(EN1^RAO7PC4))>0 D
"RTN","ORB3FUP2",230,0)
 ..D EN1^RAO7PC4  ;display before and after change(s)
"RTN","ORB3FUP2",231,0)
 ..D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",232,0)
 Q
"RTN","ORB3FUP2",233,0)
INFODEL ;follow-up action to delete "informational" alerts
"RTN","ORB3FUP2",234,0)
 K XQAKILL
"RTN","ORB3FUP2",235,0)
 N ORY,ORBXQAID
"RTN","ORB3FUP2",236,0)
 S ORBXQAID=XQAID
"RTN","ORB3FUP2",237,0)
 D MSG^ORB3FUP1
"RTN","ORB3FUP2",238,0)
 D DEL^ORB3FUP1(.ORY,ORBXQAID)
"RTN","ORB3FUP2",239,0)
 Q
"RTN","ORB3FUP2",240,0)
RTC ;followup action for RTC order alert
"RTN","ORB3FUP2",241,0)
 N ORY
"RTN","ORB3FUP2",242,0)
 W !,"You must use CPRS to process this alert!"
"RTN","ORB3FUP2",243,0)
 D RENEW^ORB31(.ORY,XQAID)
"RTN","ORB3FUP2",244,0)
 Q
"RTN","ORB3FUP2",245,0)
 ;
"RTN","ORCACT0")
0^13^B67480788
"RTN","ORCACT0",1,0)
ORCACT0 ;SLC/MKB-Validate order action ;06/13/17
"RTN","ORCACT0",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,48,72,86,92,94,141,165,177,173,190,215,243,289,204,306,350,425,434**;Dec 17, 1997;Build 35
"RTN","ORCACT0",3,0)
 ;
"RTN","ORCACT0",4,0)
 ;Reference to REFILL^PSOREF supported by IA #2399
"RTN","ORCACT0",5,0)
 ;
"RTN","ORCACT0",6,0)
VALID(IFN,ACTION,ERROR,NATR) ; -- Determines if action is valid for order IFN
"RTN","ORCACT0",7,0)
 N OR0,OR3,ORA0,AIFN,PKG,DG,ORDSTS,ACTSTS,VER,X,Y,MEDPARM,CSORD,ORDLG,ORENVIR K ERROR
"RTN","ORCACT0",8,0)
 S OR0=$G(^OR(100,+IFN,0)),OR3=$G(^(3)),PKG=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORCACT0",9,0)
 S ORENVIR=$S('$D(XQY0):"",$P(XQY0,U)="OR CPRS GUI CHART":"GUI",1:"")
"RTN","ORCACT0",10,0)
 I $G(ORENVIR)'="GUI"&(ACTION="ES") D  G VQ
"RTN","ORCACT0",11,0)
 . S CSORD="" D CSVALUE^ORDEA(.CSORD,+IFN)
"RTN","ORCACT0",12,0)
 . S ORDLG=$S($P(OR0,U,5)["101.41":$P($G(^ORD(101.41,+$P(OR0,U,5),0)),U),1:"")
"RTN","ORCACT0",13,0)
 . I CSORD&(ORDLG="PSO OERR") D
"RTN","ORCACT0",14,0)
 . . S ERROR="Outpatient controlled substance order(s) cannot be signed in VistA due to"_$C(13,10)
"RTN","ORCACT0",15,0)
 . . S ERROR=ERROR_"     DEA rules! Please sign your order(s) from the CPRS GUI."
"RTN","ORCACT0",16,0)
 . . Q
"RTN","ORCACT0",17,0)
 S DG=$P($G(^ORD(100.98,+$P(OR0,U,11),0)),U,3)
"RTN","ORCACT0",18,0)
 S MEDPARM=$S($G(NATR)="A":2,PKG'="PS":2,'$D(^XUSEC("OREMAS",DUZ)):2,DG="NV RX":$$GET^XPAR("ALL","OR OREMAS NON-VA MED ORDERS"),1:$$GET^XPAR("ALL","OR OREMAS MED ORDERS"))
"RTN","ORCACT0",19,0)
 S AIFN=$P(IFN,";",2) S:'AIFN AIFN=+$P(OR3,U,7)
"RTN","ORCACT0",20,0)
 S ORA0=$G(^OR(100,+IFN,8,AIFN,0)),ACTSTS=$P(ORA0,U,15)
"RTN","ORCACT0",21,0)
 S ORDSTS=$P(OR3,U,3),VER=$S($P(OR0,U,5)["101.41":3,1:2)
"RTN","ORCACT0",22,0)
CM ;I ACTION="CM" S ERROR="This action is no longer available!" G VQ ; ward comments - no restrictions
"RTN","ORCACT0",23,0)
FL I ACTION="FL" D  G VQ ; flag
"RTN","ORCACT0",24,0)
 . I PKG="SD" S ERROR="Flagging not allowed on Scheduling orders!" Q
"RTN","ORCACT0",25,0)
 . I +$G(^OR(100,+IFN,8,AIFN,3)) S ERROR="This order is already flagged!" Q
"RTN","ORCACT0",26,0)
UF I ACTION="UF" D  G VQ ; unflag
"RTN","ORCACT0",27,0)
 . I PKG="SD" S ERROR="Un-Flagging not allowed on Scheduling orders!" Q
"RTN","ORCACT0",28,0)
 . I '+$G(^OR(100,+IFN,8,AIFN,3)) S ERROR="This order is not flagged!" Q
"RTN","ORCACT0",29,0)
DC1 I ACTION="DC",ACTSTS D  G VQ ; discontinue/cancel unrel or canc order
"RTN","ORCACT0",30,0)
 . I (ACTSTS=11)!(ACTSTS=10) D  Q  ; unreleased
"RTN","ORCACT0",31,0)
 .. I 'MEDPARM S ERROR="You are not authorized to cancel med orders!" Q
"RTN","ORCACT0",32,0)
 .. I $G(NATR)="A" S X=$O(^ORE(100.2,"AO",+IFN,0)) I X,'$G(^ORE(100.2,X,1)) S ERROR="Future event orders may not be auto-discontinued!" Q
"RTN","ORCACT0",33,0)
 . I ACTSTS=12 S ERROR="This order has been dc'd due to edit!" Q
"RTN","ORCACT0",34,0)
 . I ACTSTS=13 S ERROR="This order has been cancelled!" Q
"RTN","ORCACT0",35,0)
ES I (ACTION="ES")!(ACTION="OC")!(ACTION="RS")!(ACTION="DS") D ES^ORCACT01 G VQ ; sign
"RTN","ORCACT0",36,0)
VR I ACTION="VR" D  G VQ ; verify
"RTN","ORCACT0",37,0)
 . I $G(ORVER)="N",$P(ORA0,U,9) S ERROR="This order has been verified!" Q
"RTN","ORCACT0",38,0)
 . I $G(ORVER)="C",$P(ORA0,U,11) S ERROR="This order has been verified!" Q
"RTN","ORCACT0",39,0)
 . I $G(ORVER)="R",$P(ORA0,U,19) S ERROR="This order has been reviewed!" Q
"RTN","ORCACT0",40,0)
 . I (ACTSTS=11)!(ACTSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT0",41,0)
 . I AIFN=1,ORDSTS=5,PKG="PS" S X=$$DISABLED I X S ERROR=$P(X,U,2) Q
"RTN","ORCACT0",42,0)
DIS S X=$$DISABLED I X S ERROR=$P(X,U,2) G VQ
"RTN","ORCACT0",43,0)
MN I ACTION="MN" D  G VQ ; manually release (delayed)
"RTN","ORCACT0",44,0)
 . I ACTSTS'=10,ACTSTS'=11 S ERROR="This order has already been released!" Q
"RTN","ORCACT0",45,0)
 . ;I $P(OR0,U,12)="I",'$G(^DPT(+ORVP,.105)) S ERROR="This patient is not currently admitted!"
"RTN","ORCACT0",46,0)
GMRA I PKG="GMRA" S ERROR="This action is not allowed on an allergy/adverse reaction!" G VQ ; no actions allowed on Allergies
"RTN","ORCACT0",47,0)
MEDS I PKG="PS",'MEDPARM S ERROR="You are not authorized to enter med orders!" G VQ
"RTN","ORCACT0",48,0)
RW I ACTION="RW" D RW^ORCACT01 G VQ ; rewrite/copy
"RTN","ORCACT0",49,0)
XFR I ACTION="XFR" D  G VQ
"RTN","ORCACT0",50,0)
 . N A
"RTN","ORCACT0",51,0)
 . S A=""
"RTN","ORCACT0",52,0)
 . F  S A=$O(^OR(100,+IFN,4.5,"ID","CONJ",A)) Q:'A  I ^OR(100,+IFN,4.5,A,1)="X" S ERROR="Orders with a conjunction of 'EXCEPT' may not be transferred." Q
"RTN","ORCACT0",53,0)
 . F  S A=$O(^OR(100,+IFN,4.5,"ID","CONJ",A)) Q:'A  I ^OR(100,+IFN,4.5,A,1)="T" S ERROR="Orders with a conjunction of 'THEN' may not be transferred." Q
"RTN","ORCACT0",54,0)
 . I $G(ERROR)]"" Q
"RTN","ORCACT0",55,0)
 . D XFR^ORCACT01 ; transfer to in/outpt
"RTN","ORCACT0",56,0)
RN I ACTION="RN" D RN^ORCACT01 G VQ ; renew
"RTN","ORCACT0",57,0)
TRM I $$DONE G VQ ; ORDSTS=1,2,7,12,13
"RTN","ORCACT0",58,0)
EV I ACTION="EV" D  G VQ ; change delay event
"RTN","ORCACT0",59,0)
 . I ORDSTS'=10,ORDSTS'=11 S ERROR="This order has been released!" Q
"RTN","ORCACT0",60,0)
 . I DG="NV RX" S ERROR="Non-VA Med orders do not support this action!" Q
"RTN","ORCACT0",61,0)
 . I $$EVTORDER^OREVNTX(IFN) S ERROR="The release event for this order may not be changed!" Q
"RTN","ORCACT0",62,0)
 . S X=$P(ORA0,U,4) I X'=2,X'=3 S ERROR="Signed orders may not be delayed to another event!" Q
"RTN","ORCACT0",63,0)
DC2 I ACTION="DC",ACTSTS="" D  G VQ ; DC released order
"RTN","ORCACT0",64,0)
 . I $G(NATR)="A" D  Q:$D(ERROR)
"RTN","ORCACT0",65,0)
 .. S X=$O(^ORE(100.2,"AO",+IFN,0)) I X S:'$G(^ORE(100.2,X,1)) ERROR="Future event orders may not be auto-discontinued!" Q
"RTN","ORCACT0",66,0)
 .. I $$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)="PSO",$G(DGPMT)=1 Q  ;177 If admission auto-dc and order is outpt med then no further checking needed
"RTN","ORCACT0",67,0)
 .. I $G(DGPMT)=1,$P($G(^SC(+$P(OR0,U,10),0)),U,3)'="C" S ERROR="Only outpatient orders may be auto-discontinued!" Q
"RTN","ORCACT0",68,0)
 .. I $G(DGPMT)'=1,$P($G(^SC(+$P(OR0,U,10),0)),U,3)="C",PKG'="PS" S ERROR="Only inpatient orders may be auto-discontinued!" Q
"RTN","ORCACT0",69,0)
 . I PKG="RA",ORDSTS=6 S ERROR="Active Radiology orders cannot be discontinued!" Q
"RTN","ORCACT0",70,0)
 . I PKG="VBEC",ORDSTS=6 S ERROR="Active Blood Product orders cannot be discontinued!" Q
"RTN","ORCACT0",71,0)
 . I PKG="LR" D  Q
"RTN","ORCACT0",72,0)
 .. I $$COLLECTD S ERROR="Lab orders that have been collected may not be discontinued!" Q
"RTN","ORCACT0",73,0)
 .. I $G(NATR)="A","^12^38^"'[(U_$P($G(DGPMA),U,18)_U),$$VALUE^ORX8(+IFN,"COLLECT")="SP",$P(OR0,U,8)'<DT S ERROR="Future Send Patient orders may not be auto-discontinued!" Q
"RTN","ORCACT0",74,0)
 . I PKG="GMRC",ORDSTS=9 S ERROR="Consults orders with partial results cannot be discontinued!" Q
"RTN","ORCACT0",75,0)
 . I DG="DO",$G(DGPMT)'=3,ORDSTS=6,'$$NPO(+IFN) S ERROR="Active Diets cannot be discontinued; please order a new diet!" Q
"RTN","ORCACT0",76,0)
RL I ACTION="RL" D  G VQ  ; release hold
"RTN","ORCACT0",77,0)
 . I ORDSTS'=3 D  Q
"RTN","ORCACT0",78,0)
 ..I $P(ORA0,U,4)=2 S ERROR="Providers has not yet signed the hold order and therefor it cannot yet be released" Q
"RTN","ORCACT0",79,0)
 ..S ERROR="Orders not on hold cannot be released!" Q
"RTN","ORCACT0",80,0)
 . I ACTSTS S ERROR=$$ACTION($P(ORA0,U,2))_" orders cannot be released from hold!" Q
"RTN","ORCACT0",81,0)
 . N NATR,ACT S ACT=$S($P(ORA0,U,2)="HD":AIFN,1:+$P(OR3,U,7))
"RTN","ORCACT0",82,0)
 . S NATR=+$P($G(^OR(100,+IFN,8,ACT,0)),U,12),ACT=$P($G(^(0)),U,2)
"RTN","ORCACT0",83,0)
 . I PKG="RA"!(ACT'="HD")!($P($G(^ORD(100.02,NATR,0)),U,2)="S") S ERROR="Orders held by a service must be released from hold through the service!" Q
"RTN","ORCACT0",84,0)
AIFN S X=$P(ORA0,U,2) I AIFN>1,ACTSTS S ERROR="This action is not allowed on a "_$$ACTION(X)_" order!" G VQ
"RTN","ORCACT0",85,0)
RF I ACTION="RF" D  G VQ
"RTN","ORCACT0",86,0)
 . I DG'="O RX",DG'="SPLY" S ERROR="Only Outpatient Med and Supply orders may be refilled!" Q
"RTN","ORCACT0",87,0)
 . I ORDSTS=5 S ERROR="Pending orders may not be refilled!" Q
"RTN","ORCACT0",88,0)
 . I ORDSTS=7 S ERROR="Expired orders may not be refilled!" Q
"RTN","ORCACT0",89,0)
 . N X,PSIFN S PSIFN=$G(^OR(100,+IFN,4))
"RTN","ORCACT0",90,0)
 . S X=$$REFILL^PSOREF(PSIFN) I X'>0 S ERROR=$P(X,U,2) Q
"RTN","ORCACT0",91,0)
CP I ACTION="CP" D  G VQ ; complete
"RTN","ORCACT0",92,0)
 . I PKG'="OR" S ERROR="Only generic text orders may be completed through this option!" Q
"RTN","ORCACT0",93,0)
 . I ORDSTS=11!(ORDSTS=10) S ERROR="This order has not been released!" Q
"RTN","ORCACT0",94,0)
AL I ACTION="AL" D  G VQ
"RTN","ORCACT0",95,0)
 . I PKG'="LR",PKG'="RA",PKG'="GMRC" S ERROR="This order does not generate results!" Q
"RTN","ORCACT0",96,0)
 . I $P(OR3,U,10) S ERROR="This order is already flagged to alert the provider when resulted!" Q
"RTN","ORCACT0",97,0)
XX I ACTION="XX" D  G VQ ; edit/change
"RTN","ORCACT0",98,0)
 . I PKG="SD",ORDSTS'=11 S ERROR="Change action not allowed on Scheduling orders!" Q
"RTN","ORCACT0",99,0)
 . I ORDSTS=7 S ERROR="Expired orders may not be changed!" Q
"RTN","ORCACT0",100,0)
 . D XX^ORCACT01
"RTN","ORCACT0",101,0)
HD I ACTION="HD" D  G VQ ; hold
"RTN","ORCACT0",102,0)
 . I PKG="FH" S ERROR="Diet orders cannot be held!" Q
"RTN","ORCACT0",103,0)
 . I PKG="LR" S ERROR="Lab orders cannot be held!" Q
"RTN","ORCACT0",104,0)
 . I PKG="RA" S ERROR="Radiology orders cannot be held!" Q
"RTN","ORCACT0",105,0)
 . I PKG="GMRC" S ERROR="Consult orders cannot be held!" Q
"RTN","ORCACT0",106,0)
 . I DG="NV RX" S ERROR="Non-VA Med orders cannot be held!" Q
"RTN","ORCACT0",107,0)
 . I PKG="SD" S ERROR="Scheduling orders cannot be held!" Q
"RTN","ORCACT0",108,0)
 . I ORDSTS=3 S ERROR="This order is already on hold!" Q
"RTN","ORCACT0",109,0)
 . I ORDSTS'=6,PKG="PS" S ERROR="Only active Pharmacy orders may be held!" Q
"RTN","ORCACT0",110,0)
 . I (ORDSTS=11)!(ORDSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT0",111,0)
VQ S Y=$S($D(ERROR):0,1:1)
"RTN","ORCACT0",112,0)
 Q Y
"RTN","ORCACT0",113,0)
 ;
"RTN","ORCACT0",114,0)
ACTION(X) ; -- Return text of action X
"RTN","ORCACT0",115,0)
 N Y S Y=$S(X="NW":"New",X="DC":"Discontinue",X="HD":"Hold",X="RL":"Release Hold",X="RN":"Renew",1:X)
"RTN","ORCACT0",116,0)
 Q Y
"RTN","ORCACT0",117,0)
 ;
"RTN","ORCACT0",118,0)
NPO(ORIFN) ; -- Returns 1 or 0, if order ORIFN is for NPO
"RTN","ORCACT0",119,0)
 N X,Y S X=$$VALUE^ORX8(+ORIFN,"ORDERABLE",1,"E")
"RTN","ORCACT0",120,0)
 S Y=$S($E(X,1,3)="NPO":1,1:0)
"RTN","ORCACT0",121,0)
 Q Y
"RTN","ORCACT0",122,0)
 ;
"RTN","ORCACT0",123,0)
COLLECTD() ; -- Lab order collected/active (incl all children)?
"RTN","ORCACT0",124,0)
 I (ORDSTS=11)!(ORDSTS=10) Q 0 ; unreleased
"RTN","ORCACT0",125,0)
 I '$O(^OR(100,+IFN,2,0)) Q (ORDSTS'=5)
"RTN","ORCACT0",126,0)
 ;I ORDSTS'=6 Q 1 ; Parent -> active instead of pending
"RTN","ORCACT0",127,0)
 N Y,Z S Y=1,Z=0
"RTN","ORCACT0",128,0)
 F  S Z=$O(^OR(100,+IFN,2,Z)) Q:Z'>0  I $P($G(^OR(100,Z,3)),U,3)=5 S Y=0 Q
"RTN","ORCACT0",129,0)
 Q Y
"RTN","ORCACT0",130,0)
 ;
"RTN","ORCACT0",131,0)
DONE() ; -- sets ERROR if terminal status
"RTN","ORCACT0",132,0)
 I ORDSTS=1 S ERROR="This order has been discontinued!" Q 1
"RTN","ORCACT0",133,0)
 I ORDSTS=2 S ERROR="This order has been completed!" Q 1
"RTN","ORCACT0",134,0)
 I ORDSTS=7,DG'="O RX" S ERROR="This order has expired!" Q 1
"RTN","ORCACT0",135,0)
 I ORDSTS=12 S ERROR="This order has been changed!" Q 1
"RTN","ORCACT0",136,0)
 I ORDSTS=13 S ERROR="This order has been cancelled!" Q 1
"RTN","ORCACT0",137,0)
 I ORDSTS=14 S ERROR="This order has lapsed!" Q 1
"RTN","ORCACT0",138,0)
 I ORDSTS=15 S ERROR="This order has been renewed!" Q 1
"RTN","ORCACT0",139,0)
 Q 0
"RTN","ORCACT0",140,0)
 ;
"RTN","ORCACT0",141,0)
DISABLED() ; -- Order dialog [or protocol] disabled?
"RTN","ORCACT0",142,0)
 N X,DLG S DLG=$P(OR0,U,5),X=0 I +DLG'>0 Q X
"RTN","ORCACT0",143,0)
 I VER'<3,DLG?1.N1";ORD(101.41," S X=$$MSG^ORXD(+DLG) Q X
"RTN","ORCACT0",144,0)
 S DLG=$S(PKG="RA":"RA OERR EXAM",PKG="GMRC":"GMRCOR CONSULT",1:"")
"RTN","ORCACT0",145,0)
 I $L(DLG) S DLG=+$O(^ORD(101.41,"AB",DLG,0)),X=$$MSG^ORXD(DLG)
"RTN","ORCACT0",146,0)
 Q X
"RTN","ORCDSD")
0^4^B4626273
"RTN","ORCDSD",1,0)
ORCDSD ;SLC/AGP Scheduling Order dialog utilities ;09/12/17
"RTN","ORCDSD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**434**;Dec 17, 1997;Build 35
"RTN","ORCDSD",3,0)
 ;Per VHA Directive 6402, this routine should not be modified.
"RTN","ORCDSD",4,0)
 Q
"RTN","ORCDSD",5,0)
 ;
"RTN","ORCDSD",6,0)
INTERH ;
"RTN","ORCDSD",7,0)
 N LIST,NAME
"RTN","ORCDSD",8,0)
 W !,"Select one of the following:"
"RTN","ORCDSD",9,0)
 D INTERL(.LIST)
"RTN","ORCDSD",10,0)
 S NAME="" F  S NAME=$O(LIST(NAME)) Q:NAME=""  W !,"  "_NAME
"RTN","ORCDSD",11,0)
 Q
"RTN","ORCDSD",12,0)
INTERL(LIST) ;
"RTN","ORCDSD",13,0)
 S LIST("WEEKLY")="",LIST("DAILY")=""
"RTN","ORCDSD",14,0)
 Q
"RTN","ORCDSD",15,0)
 ;
"RTN","ORCDSD",16,0)
INTERV ;
"RTN","ORCDSD",17,0)
 N NAME,LIST,TMP
"RTN","ORCDSD",18,0)
 S TMP=$$UP^XLFSTR(X)
"RTN","ORCDSD",19,0)
 D INTERL(.LIST)
"RTN","ORCDSD",20,0)
 I $D(LIST(TMP)) Q
"RTN","ORCDSD",21,0)
 W !!,X_"is an invalid interval",!!
"RTN","ORCDSD",22,0)
 D INTERH
"RTN","ORCDSD",23,0)
 W !
"RTN","ORCDSD",24,0)
 K X
"RTN","ORCDSD",25,0)
 Q
"RTN","ORCDSD",26,0)
 ;
"RTN","ORCDSD",27,0)
PREREQP(LIST) ;
"RTN","ORCDSD",28,0)
 N ERR
"RTN","ORCDSD",29,0)
 D GETLST^XPAR(.LIST,"SYS","OR SD DIALOG PREREQ","N",.ERR)
"RTN","ORCDSD",30,0)
 Q
"RTN","ORCDSD",31,0)
 ;
"RTN","ORCDSD",32,0)
PREREQH ;
"RTN","ORCDSD",33,0)
 N CNT,LIST
"RTN","ORCDSD",34,0)
 D PREREQP(.LIST)
"RTN","ORCDSD",35,0)
 I '$D(LIST) W !,"No prerequisites defined"
"RTN","ORCDSD",36,0)
 W !,"Select from the following:"
"RTN","ORCDSD",37,0)
 S CNT=0 F  S CNT=$O(LIST(CNT)) Q:CNT'>0  D
"RTN","ORCDSD",38,0)
 .I $P(LIST(CNT),U)="" Q
"RTN","ORCDSD",39,0)
 .W !,"  "_$P(LIST(CNT),U)
"RTN","ORCDSD",40,0)
 Q
"RTN","ORCDSD",41,0)
 ;
"RTN","ORCDSD",42,0)
PREREQN() ;
"RTN","ORCDSD",43,0)
 N LIST,NUM
"RTN","ORCDSD",44,0)
 D PREREQP(.LIST)
"RTN","ORCDSD",45,0)
 I '$D(LIST) Q 0
"RTN","ORCDSD",46,0)
 S NUM=LIST
"RTN","ORCDSD",47,0)
 Q NUM
"RTN","ORCDSD",48,0)
 ;
"RTN","ORCDSD",49,0)
PREREQV ;
"RTN","ORCDSD",50,0)
 N ARRAY,CNT,NODE,LIST,TMP
"RTN","ORCDSD",51,0)
 S TMP=$$UP^XLFSTR(X)
"RTN","ORCDSD",52,0)
 D PREREQP(.LIST)
"RTN","ORCDSD",53,0)
 S CNT=0 F  S CNT=$O(LIST(CNT)) Q:CNT'>0  D
"RTN","ORCDSD",54,0)
 .I $P(LIST(CNT),U)="" Q
"RTN","ORCDSD",55,0)
 .S ARRAY($$UP^XLFSTR($P(LIST(CNT),U)))=""
"RTN","ORCDSD",56,0)
 I '$D(ARRAY(TMP)) W !,X_" is not a valid prerequisite" K X Q
"RTN","ORCDSD",57,0)
 I $G(X)="" W !! D PREREQH
"RTN","ORCDSD",58,0)
 Q
"RTN","ORCDSD",59,0)
 ;
"RTN","ORCDSD",60,0)
SETSTOP() ;
"RTN","ORCDSD",61,0)
 N %DT,CIDC,RESULT,OFFSET,X,Y
"RTN","ORCDSD",62,0)
 S RESULT="T"
"RTN","ORCDSD",63,0)
 S X=$$VAL^ORCD("CLINICALLY")
"RTN","ORCDSD",64,0)
 S %DT="T" D ^%DT
"RTN","ORCDSD",65,0)
 S OFFSET=$$GET^XPAR("SYS","OR SD CIDC STOP OFFSET",1,"E")
"RTN","ORCDSD",66,0)
 I Y>0 S RESULT=$$FMADD^XLFDT(Y,OFFSET)
"RTN","ORCDSD",67,0)
 Q RESULT
"RTN","ORCDSD",68,0)
 ;
"RTN","ORCDSD",69,0)
VALCLINC(Y) ;
"RTN","ORCDSD",70,0)
 ;N IEN
"RTN","ORCDSD",71,0)
 ;S IEN=$O(^SC("B",X,"")) I IEN'>0 Q 0
"RTN","ORCDSD",72,0)
 I ("C"'[$P($G(^SC(Y,0)),U,3)!('$$ACTLOC^ORWU(Y))) Q 0
"RTN","ORCDSD",73,0)
 Q 1
"RTN","ORCDSD",74,0)
 ;
"RTN","ORM")
0^9^B18341854
"RTN","ORM",1,0)
ORM ; SLC/MKB/JDL - ORM msg router ;08/17/17
"RTN","ORM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,97,141,187,195,434**;Dec 17, 1997;Build 35
"RTN","ORM",3,0)
EN(MSG) ; -- main entry point for OR RECEIVE where MSG contains HL7 msg
"RTN","ORM",4,0)
 N ORMSG,ORNMSP,ORTYPE,MSH,PID,PV1,ORC,ORVP,ORTS,ORL,ORCAT,ORAPPT
"RTN","ORM",5,0)
 S ORAPPT="",ORL=0
"RTN","ORM",6,0)
 S ORMSG=$S($L($G(MSG)):MSG,1:"MSG") ; MSG="NAME" or MSG(#)=message
"RTN","ORM",7,0)
 I '$O(@ORMSG@(0)) D EN^ORERR("Missing HL7 message",.ORMSG) Q
"RTN","ORM",8,0)
 S MSH=0 F  S MSH=$O(@ORMSG@(MSH)) Q:MSH'>0  Q:$E(@ORMSG@(MSH),1,3)="MSH"
"RTN","ORM",9,0)
 I 'MSH D EN^ORERR("Missing or invalid MSH segment",.ORMSG) Q
"RTN","ORM",10,0)
 S ORNMSP=$$NMSP($P(@ORMSG@(MSH),"|",3)),ORTYPE=$P(@ORMSG@(MSH),"|",9)
"RTN","ORM",11,0)
 I ORTYPE="SRM" D EN^ORMSD(.MSG) Q
"RTN","ORM",12,0)
 I '$L(ORNMSP) D EN^ORERR("Missing or invalid sending application",.ORMSG) Q
"RTN","ORM",13,0)
 D PID I '$G(ORVP) D EN^ORERR("Missing or invalid patient ID",.ORMSG) Q
"RTN","ORM",14,0)
 D PV1 S ORC=PID
"RTN","ORM",15,0)
EN1 F  S ORC=$O(@ORMSG@(+ORC)) Q:ORC'>0  I $E(@ORMSG@(ORC),1,3)="ORC" D
"RTN","ORM",16,0)
 . N ORDCNTRL,ORDSTS,PKGIFN,ORIFN,ORNP,ORTN,ORERR,ORLOG,ORDUZ,ORQT,ORSTRT,ORSTOP,ORURG,ORNATR,OREASON
"RTN","ORM",17,0)
 . S ORC=ORC_U_@ORMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","ORM",18,0)
 . I '$L(ORDCNTRL) S ORERR="Invalid control code" D ERROR Q
"RTN","ORM",19,0)
 . S ORIFN=$P($P(ORC,"|",3),U),PKGIFN=$P($P(ORC,"|",4),U)
"RTN","ORM",20,0)
 . I ORIFN,$D(^OR(100,+ORIFN,0)),$P(^(0),U,2)'=ORVP S ORERR="Patient doesn't match" D ERROR Q
"RTN","ORM",21,0)
 . S ORDSTS=$P(ORC,"|",6),ORQT=$P(ORC,"|",8)
"RTN","ORM",22,0)
 . S ORSTRT=$$FMDATE($P(ORQT,U,4)),ORSTOP=$$FMDATE($P(ORQT,U,5))
"RTN","ORM",23,0)
 . S ORURG=$$URGENCY($P(ORQT,U,6)),ORLOG=$$FMDATE($P(ORC,"|",10))
"RTN","ORM",24,0)
 . S ORDUZ=+$P(ORC,"|",11),ORNP=+$P(ORC,"|",13),OREASON=$P(ORC,"|",17)
"RTN","ORM",25,0)
 . S ORNATR=$S($P(OREASON,U,3)="99ORN":$P(OREASON,U),1:"")
"RTN","ORM",26,0)
 . S ORTN="EN^ORM"_ORNMSP D @ORTN I $D(ORERR) D ERROR Q
"RTN","ORM",27,0)
 . I ORDCNTRL="SN",$G(ORIFN) D MSG^ORMBLD(ORIFN,"NA")
"RTN","ORM",28,0)
 . I $G(DGPMT),ORDCNTRL="OD"!(ORDCNTRL="OC") D XTMP
"RTN","ORM",29,0)
 Q
"RTN","ORM",30,0)
 ;
"RTN","ORM",31,0)
NMSP(NAME) ; -- Returns pkg namespace
"RTN","ORM",32,0)
 I NAME="RADIOLOGY"!(NAME="IMAGING") Q "RA"
"RTN","ORM",33,0)
 I NAME="LABORATORY" Q "LR"
"RTN","ORM",34,0)
 I NAME="DIETETICS" Q "FH"
"RTN","ORM",35,0)
 I NAME="PHARMACY" Q "PS"
"RTN","ORM",36,0)
 I NAME="CONSULTS" Q "GMRC"
"RTN","ORM",37,0)
 I NAME="PROCEDURES" Q "GMRC"
"RTN","ORM",38,0)
 I NAME="ORDER ENTRY" Q "ORG"
"RTN","ORM",39,0)
 I NAME="SCHEDULING" Q "SD"
"RTN","ORM",40,0)
 Q ""
"RTN","ORM",41,0)
 ;
"RTN","ORM",42,0)
PID ; -- Returns patient from PID segment in current msg
"RTN","ORM",43,0)
 ;    Sets PID, ORVP, ORTS if valid patient
"RTN","ORM",44,0)
 N I,DFN,SEG S I=MSH,PID=""
"RTN","ORM",45,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="PID" D  Q
"RTN","ORM",46,0)
 . S DFN=+$P(@ORMSG@(I),"|",4),PID=I
"RTN","ORM",47,0)
 . I $D(^DPT(DFN,0)) S ORVP=DFN_";DPT(",ORTS=$G(^DPT(DFN,.103)) Q
"RTN","ORM",48,0)
 . S:$L($P(@ORMSG@(I),"|",5)) ORVP=$P(@ORMSG@(I),"|",5) ; alt ID for Lab
"RTN","ORM",49,0)
 Q
"RTN","ORM",50,0)
 ;
"RTN","ORM",51,0)
PV1 ; -- Returns patient location in PV1 segment in current msg
"RTN","ORM",52,0)
 ;    Sets PV1, ORCAT, & ORL if valid location, ORAPPT: IMO appointment
"RTN","ORM",53,0)
 N I,X,SEG S I=PID,PV1=""
"RTN","ORM",54,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="PV1" D  Q
"RTN","ORM",55,0)
 . S X=+$P(@ORMSG@(I),"|",4),ORCAT=$P(@ORMSG@(I),"|",3),PV1=I
"RTN","ORM",56,0)
 . S:$D(^SC(X,0)) ORL=X_";SC("
"RTN","ORM",57,0)
 . S ORAPPT=$P(@ORMSG@(I),"|",45)
"RTN","ORM",58,0)
 . S:+$G(ORAPPT) ORAPPT=$$FMDATE($G(ORAPPT))
"RTN","ORM",59,0)
 Q
"RTN","ORM",60,0)
 ;
"RTN","ORM",61,0)
ORDITEM(USID) ; -- Returns pointer to Orderable Item file for USID
"RTN","ORM",62,0)
 N ID,OI
"RTN","ORM",63,0)
 S ID=$P(USID,U,4)_";"_$P(USID,U,6)
"RTN","ORM",64,0)
 S OI=+$O(^ORD(101.43,"ID",ID,0))
"RTN","ORM",65,0)
 Q OI
"RTN","ORM",66,0)
 ;
"RTN","ORM",67,0)
URGENCY(CODE) ; -- Return ptr to Order Urgency file #101.42
"RTN","ORM",68,0)
 S:'$L(CODE) CODE="R"
"RTN","ORM",69,0)
 Q $O(^ORD(101.42,"C",CODE,0))
"RTN","ORM",70,0)
 ;
"RTN","ORM",71,0)
FMDATE(Y) ; -- Convert HL7 date/time to FM format
"RTN","ORM",72,0)
 Q $$HL7TFM^XLFDT(Y)  ;**97
"RTN","ORM",73,0)
 ;
"RTN","ORM",74,0)
ERROR ; -- Sends a DE reply to current msg
"RTN","ORM",75,0)
 ; Uses ORVP, ORNMSP, ORDUZ, ORIFN, ORERR, and PKGIFN
"RTN","ORM",76,0)
 N ORV S ORV("XQY0")="" D EN^ORERR(ORERR,.ORMSG,.ORV)
"RTN","ORM",77,0)
 Q:ORTYPE="ORR"  Q:'$L($G(ORNMSP))
"RTN","ORM",78,0)
 N OREMSG,ORVP,ORTS S:'$G(ORDUZ) ORDUZ=DUZ D:'$G(ORVP) PID
"RTN","ORM",79,0)
 S OREMSG(1)=$$MSH^ORMBLD("ORR",ORNMSP),OREMSG(2)=$$PID^ORMBLD($G(ORVP))
"RTN","ORM",80,0)
 S OREMSG(3)="ORC|DE|"_$S($G(ORIFN):ORIFN_"^OR",1:"")_"|"_$S($L($G(PKGIFN)):PKGIFN_U_ORNMSP,1:"")_"|||||||"_ORDUZ_"||||||"_ORERR
"RTN","ORM",81,0)
 D MSG^XQOR("OR EVSEND "_ORNMSP,.OREMSG)
"RTN","ORM",82,0)
 Q
"RTN","ORM",83,0)
 ;
"RTN","ORM",84,0)
FIND(SEG,PIECE) ; -- Returns value in $P(@ORMSG@(SEG),"|",PIECE)
"RTN","ORM",85,0)
 N X,Y,FLDS,I,DONE
"RTN","ORM",86,0)
 S X=$G(@ORMSG@(SEG)),FLDS=$L(X,"|"),Y="",(I,DONE)=0
"RTN","ORM",87,0)
 F  D  Q:DONE
"RTN","ORM",88,0)
 . I PIECE<FLDS S Y=$P(X,"|",PIECE),DONE=1 Q
"RTN","ORM",89,0)
 . I PIECE=FLDS D  Q
"RTN","ORM",90,0)
 . . S Y=$P(X,"|",PIECE),I=$O(@ORMSG@(SEG,I)),DONE=1
"RTN","ORM",91,0)
 . . I I S Y=Y_$P($G(@ORMSG@(SEG,I)),"|")
"RTN","ORM",92,0)
 . S I=$O(@ORMSG@(SEG,I)) I 'I S Y="",DONE=1 Q
"RTN","ORM",93,0)
 . S PIECE=PIECE-(FLDS-1),X=$G(@ORMSG@(SEG,I)),FLDS=$L(X,"|")
"RTN","ORM",94,0)
FQ Q Y
"RTN","ORM",95,0)
 ;
"RTN","ORM",96,0)
XTMP ; -- Save package auto-dc'd order numbers in ^XTMP
"RTN","ORM",97,0)
 ;    Uses ORIFN, ORNMSP
"RTN","ORM",98,0)
 Q:'$G(ORIFN)  Q:"^1^13^"'[($P($G(^OR(100,+ORIFN,3)),U,3)_U)
"RTN","ORM",99,0)
 N ORNOW,ORDC S ORNOW=+$$NOW^XLFDT,ORDC="ORDC-"_$G(DGPMDA)
"RTN","ORM",100,0)
 I $G(^XTMP(ORDC,0)),+^(0)<ORNOW K ^XTMP(ORDC)
"RTN","ORM",101,0)
 I '$G(^XTMP(ORDC,0)) D
"RTN","ORM",102,0)
 . N ORNOW1H S ORNOW1H=$$FMADD^XLFDT(ORNOW,,1)
"RTN","ORM",103,0)
 . S ^XTMP(ORDC,0)=ORNOW1H_U_ORNOW_"^Orders AutoDC'd by Packages on Discharge"
"RTN","ORM",104,0)
 S ^XTMP(ORDC,+ORIFN)=$G(ORNMSP)
"RTN","ORM",105,0)
 Q
"RTN","ORMBLD")
0^7^B46482441
"RTN","ORMBLD",1,0)
ORMBLD ; SLC/MKB/JDL - Build outgoing ORM msgs ;05/10/17  10:08
"RTN","ORMBLD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,33,26,45,79,97,133,168,187,190,195,215,350,434**;Dec 17, 1997;Build 35
"RTN","ORMBLD",3,0)
 ;
"RTN","ORMBLD",4,0)
 ;
"RTN","ORMBLD",5,0)
 ;
"RTN","ORMBLD",6,0)
NEW(IFN,CODE) ; -- Send NW order message to pkg
"RTN","ORMBLD",7,0)
 ;I $P($G(^ORD(101.42,+$$VALUE^ORCSAVE2(IFN,"URGENCY"),0)),U)="DONE" D STATUS^ORCSAVE2(IFN,2) Q  ; complete -> don't send to pkg
"RTN","ORMBLD",8,0)
 N ORPKG,ORMSG,DGQUIET K ^TMP("ORWORD",$J)
"RTN","ORMBLD",9,0)
 S DGQUIET=1 D  Q:'$O(ORMSG(0))  ;build msg, ORDIALOG gone when posted
"RTN","ORMBLD",10,0)
 . N OR0,OR3,OR8,ORVP,ORDG,ORDIALOG,ORPARENT S:'$D(CODE) CODE="NW"
"RTN","ORMBLD",11,0)
 . S OR0=$G(^OR(100,IFN,0)) Q:'$L(OR0)  S OR3=$G(^(3)),OR8=$G(^(8,1,0))
"RTN","ORMBLD",12,0)
 . S ORVP=$P(OR0,U,2),ORDG=$P(OR0,U,11),ORPKG=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORMBLD",13,0)
 . Q:"^GMRA^GMRC^FH^LR^PS^RA^OR^SD^"'[(U_ORPKG_U)
"RTN","ORMBLD",14,0)
 . S ORDIALOG=+$P(OR0,U,5) Q:'ORDIALOG
"RTN","ORMBLD",15,0)
 . D GETDLG1^ORCD(ORDIALOG),GETORDER^ORCD(IFN)
"RTN","ORMBLD",16,0)
 . S ORMSG(1)=$$MSH("ORM",ORPKG),ORMSG(2)=$$PID(ORVP)
"RTN","ORMBLD",17,0)
 . S ORMSG(3)=$$PV1(ORVP,$P(OR0,U,12),+$P(OR0,U,10),"",$P(OR0,U,18))
"RTN","ORMBLD",18,0)
 . S ORPARENT=$P(OR3,U,9) I ORPARENT,$G(ORDIALOG($$PTR^ORCD("OR GTX SCHEDULE"),1))="NOW"!'$O(^OR(100,+ORPARENT,4.5,"ID","CONJ",0)) S ORPARENT="" ;no parent if NOW or only child
"RTN","ORMBLD",19,0)
 . S ORMSG(4)="ORC|"_CODE_"|"_+OR0_";1^OR||||||"_ORPARENT_"|"_$$HL7DATE($P(OR0,U,7))_"|"_+$P(OR0,U,6)_"||"_+$P(OR0,U,4)_"|||"_$$HL7DATE($$NOW^XLFDT)_"|"_$$NATURE($P(OR8,U,12))_"^^^"
"RTN","ORMBLD",20,0)
 . D @ORPKG K ^TMP("ORWORD",$J)
"RTN","ORMBLD",21,0)
 I $G(ORZTEST) M ORZTEST=ORMSG Q  ;testing only
"RTN","ORMBLD",22,0)
 D MSG^XQOR("OR EVSEND "_ORPKG,.ORMSG)
"RTN","ORMBLD",23,0)
 Q
"RTN","ORMBLD",24,0)
 ;
"RTN","ORMBLD",25,0)
MSG(IFN,CODE,REASON) ; -- Send all other order msgs
"RTN","ORMBLD",26,0)
 N ORPKG,ORMSG,DGQUIET K ^TMP("ORWORD",$J)
"RTN","ORMBLD",27,0)
 S DGQUIET=1 D  Q:'$O(ORMSG(0))  ; build message
"RTN","ORMBLD",28,0)
 . N OR0,OR8,DG,PKGID,I,TYPE,DA,PROV,NATR,STS,OI
"RTN","ORMBLD",29,0)
 . S OR0=$G(^OR(100,+IFN,0)),PKGID=$G(^(4)),STS=$P($G(^(3)),U,3)
"RTN","ORMBLD",30,0)
 . S ORPKG=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORMBLD",31,0)
 . I ORPKG="VBEC" D:$L($T(CA^ORMBLDVB)) CA^ORMBLDVB(IFN,$G(REASON)) Q
"RTN","ORMBLD",32,0)
 . Q:"^GMRA^GMRC^FH^LR^PS^RA^OR^SD^"'[(U_ORPKG_U)
"RTN","ORMBLD",33,0)
 . I ORPKG="LR" S ORPKG="LRCH" S:CODE="DC" CODE="CA" ;DC if VBEC child
"RTN","ORMBLD",34,0)
 . S DA=+$P(IFN,";",2),OR8=$G(^OR(100,+IFN,8,DA,0))
"RTN","ORMBLD",35,0)
 . S PROV=$P(OR8,U,3),NATR=$P(OR8,U,12) S:'PROV PROV=$G(ORNP)
"RTN","ORMBLD",36,0)
 . S TYPE=$S(CODE="NA"!(CODE="DE"):"ORR",1:"ORM")
"RTN","ORMBLD",37,0)
 . S ORMSG(1)=$$MSH(TYPE,ORPKG),ORMSG(2)=$$PID($P(OR0,U,2)),I=2
"RTN","ORMBLD",38,0)
 . I ORPKG="SD",CODE="DC" D DC^ORMBLDSD Q
"RTN","ORMBLD",39,0)
 . I ORPKG="PS"!(ORPKG="FH"&($P(OR0,U,12)="O")) S I=I+1,ORMSG(I)=$$PV1($P(OR0,U,2),$P(OR0,U,12),+$P(OR0,U,10))
"RTN","ORMBLD",40,0)
 . S I=I+1,ORMSG(I)="ORC|"_CODE_"|"_IFN_"^OR|"_PKGID_U_ORPKG_"||||||"_$S($G(DGPMA):$$HL7DATE($P(DGPMA,U)),1:"")_"|"_DUZ_"||"_PROV_"|||"_$$HL7DATE($$NOW^XLFDT)_"|"_$$REASON(+$G(REASON),NATR)
"RTN","ORMBLD",41,0)
 . I ORPKG="FH",CODE="SS" S $P(ORMSG(I),"|",6)=$S(STS=8:"SC",STS=6:"IP",1:"")
"RTN","ORMBLD",42,0)
 . I $E(ORPKG,1,2)="LR" S OI=+$O(^OR(100,+IFN,.1,0)),OI=+$G(^(OI,0)) S:OI I=I+1,ORMSG(I)="OBR||||"_$$USID(OI)
"RTN","ORMBLD",43,0)
 . I $P(^ORD(100.98,$P(OR0,U,11),0),U)="NON-VA MEDICATIONS" D
"RTN","ORMBLD",44,0)
 . . I (CODE="CA")!(CODE="DC") S I=I+1,ORMSG(I)="ZRN|N"
"RTN","ORMBLD",45,0)
 . K ^TMP("ORWORD",$J)
"RTN","ORMBLD",46,0)
 D MSG^XQOR("OR EVSEND "_ORPKG,.ORMSG)
"RTN","ORMBLD",47,0)
 Q
"RTN","ORMBLD",48,0)
 ;
"RTN","ORMBLD",49,0)
BHS(PAT) ; -- Send batch header segment/message to Lab
"RTN","ORMBLD",50,0)
 N ORMSG S ORMSG(1)="BHS|^~\&|ORDER ENTRY|"_$G(DUZ(2))_"|LABORATORY|"_$G(DUZ(2))_"|"_$$HL7DATE($$NOW^XLFDT)
"RTN","ORMBLD",51,0)
 S ORMSG(2)=$$PID($G(PAT))
"RTN","ORMBLD",52,0)
 D MSG^XQOR("OR EVSEND LRCH",.ORMSG)
"RTN","ORMBLD",53,0)
 Q
"RTN","ORMBLD",54,0)
 ;
"RTN","ORMBLD",55,0)
BTS(PAT) ; -- Send batch trailer segment/message to Lab
"RTN","ORMBLD",56,0)
 N ORMSG S ORMSG(1)="BTS",ORMSG(2)=$$PID($G(PAT))
"RTN","ORMBLD",57,0)
 D MSG^XQOR("OR EVSEND LRCH",.ORMSG)
"RTN","ORMBLD",58,0)
 Q
"RTN","ORMBLD",59,0)
 ;
"RTN","ORMBLD",60,0)
MSH(TYPE,TO) ; -- MSH segment
"RTN","ORMBLD",61,0)
 N MSH
"RTN","ORMBLD",62,0)
 S MSH="MSH|^~\&|ORDER ENTRY|"_$G(DUZ(2))_"|"_$$NAME(TO)_"|"_$G(DUZ(2))_"|"_$$HL7DATE($$NOW^XLFDT)_"||"_TYPE
"RTN","ORMBLD",63,0)
 Q MSH
"RTN","ORMBLD",64,0)
 ;
"RTN","ORMBLD",65,0)
NAME(NMSP) ; -- Returns name of pkg NMSP
"RTN","ORMBLD",66,0)
 I NMSP="GMRA" Q "ALLERGIES"
"RTN","ORMBLD",67,0)
 I NMSP="GMRC" Q "CONSULTS"
"RTN","ORMBLD",68,0)
 I NMSP="FH" Q "DIETETICS"
"RTN","ORMBLD",69,0)
 I NMSP?1"LR".E Q "LABORATORY"
"RTN","ORMBLD",70,0)
 I NMSP="PS" Q "PHARMACY"
"RTN","ORMBLD",71,0)
 I NMSP="RA" Q "RADIOLOGY"
"RTN","ORMBLD",72,0)
 I NMSP="OR" Q "ORDER ENTRY"
"RTN","ORMBLD",73,0)
 I NMSP="SD" Q "SCHEDULING"
"RTN","ORMBLD",74,0)
 Q ""
"RTN","ORMBLD",75,0)
 ;
"RTN","ORMBLD",76,0)
PID(DFN) ; -- PID segment
"RTN","ORMBLD",77,0)
 N PID,PTR,ROOT
"RTN","ORMBLD",78,0)
 S PTR=+$P(DFN,";"),ROOT=$P(DFN,";",2),PID="PID|||"
"RTN","ORMBLD",79,0)
 I ROOT="DPT(" S PID=PID_PTR_"||"_$P($G(^DPT(PTR,0)),U)
"RTN","ORMBLD",80,0)
 E  S PID=PID_"|"_DFN_"|"_$S($L(ROOT):$P($G(@(U_ROOT_PTR_",0)")),U),1:"")
"RTN","ORMBLD",81,0)
 Q PID
"RTN","ORMBLD",82,0)
 ;
"RTN","ORMBLD",83,0)
PV1(OBJ,TYPE,LOC,VISIT,APPTDT) ; -- PV1 segment
"RTN","ORMBLD",84,0)
 N PV1,RB,PACH S RB=""
"RTN","ORMBLD",85,0)
 S:$G(APPTDT) APPTDT=$$FMTHL7^XLFDT(APPTDT)
"RTN","ORMBLD",86,0)
 I TYPE="I",+OBJ,$P(OBJ,";",2)="DPT(" S RB=$P($G(^DPT(+OBJ,.101)),U)
"RTN","ORMBLD",87,0)
 S PACH=$$PATCH^XPDUTL("PSJ*5.0*111")
"RTN","ORMBLD",88,0)
 S:PACH PV1="PV1||"_TYPE_"|"_LOC_$S($L(RB):U_RB,1:"")_"||||||||||||||||"_$G(VISIT)_"|||||||||||||||||||||||||"_$G(APPTDT)
"RTN","ORMBLD",89,0)
 S:'PACH PV1="PV1||"_TYPE_"|"_LOC_$S($L(RB):U_RB,1:"")_"||||||||||||||||"_$G(VISIT)
"RTN","ORMBLD",90,0)
 Q PV1
"RTN","ORMBLD",91,0)
 ;
"RTN","ORMBLD",92,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLD",93,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLD",94,0)
 ;
"RTN","ORMBLD",95,0)
USID(OI) ; -- Returns Univ Serv ID for Orderable Item
"RTN","ORMBLD",96,0)
 N OITEM,NATL,LOCAL S OITEM=$G(^ORD(101.43,+OI,0))
"RTN","ORMBLD",97,0)
 S NATL=$P(OITEM,U,3)_U_U_$P(OITEM,U,4)
"RTN","ORMBLD",98,0)
 S LOCAL=$P($P(OITEM,U,2),";")_U_$P(OITEM,U)_U_$P($P(OITEM,U,2),";",2)
"RTN","ORMBLD",99,0)
 Q NATL_U_LOCAL
"RTN","ORMBLD",100,0)
 ;
"RTN","ORMBLD",101,0)
NATURE(X) ; -- Returns 3 ^-piece identifier for nature X
"RTN","ORMBLD",102,0)
 N ORN,Y S ORN=$G(^ORD(100.02,+$G(X),0))
"RTN","ORMBLD",103,0)
 S Y=$P(ORN,U,2)_U_$P(ORN,U)_"^99ORN"
"RTN","ORMBLD",104,0)
 Q Y
"RTN","ORMBLD",105,0)
 ;
"RTN","ORMBLD",106,0)
REASON(X,N) ; -- Returns 6 ^-piece format of reason X
"RTN","ORMBLD",107,0)
 ;    N ^ NATURE ^ 99ORN ^ # ^ Reason ^ 99ORR
"RTN","ORMBLD",108,0)
 N Y,ORR S ORR=$G(^ORD(100.03,+$G(X),0))
"RTN","ORMBLD",109,0)
 S:'$G(N) N=+$P(ORR,U,7) S Y=$$NATURE(N)
"RTN","ORMBLD",110,0)
 S:$G(X) Y=Y_U_$S(ORPKG'="RA":+X,1:"")_U_$P(ORR,U)_"^99ORR"
"RTN","ORMBLD",111,0)
 Q Y
"RTN","ORMBLD",112,0)
 ;
"RTN","ORMBLD",113,0)
IP() ; -- Returns ORIFN^Type if pt has active isolation order (or 0 if not)
"RTN","ORMBLD",114,0)
 N TYPE,START,ORIFN,Y
"RTN","ORMBLD",115,0)
 S TYPE=$O(^ORD(100.98,"B","PREC",0)),START=$$NOW^XLFDT,Y=0
"RTN","ORMBLD",116,0)
 F  S START=$O(^OR(100,"AW",ORVP,TYPE,START),-1) Q:START'>0  S ORIFN=$O(^(START,0)) I $P($G(^OR(100,ORIFN,3)),U,3)=6 S Y=ORIFN Q
"RTN","ORMBLD",117,0)
 I Y S TYPE=$$VALUE^ORCSAVE2(ORIFN,"ISOLATION"),Y=Y_U_$$GET1^DIQ(119.4,+TYPE_",",.01)
"RTN","ORMBLD",118,0)
 Q Y
"RTN","ORMBLD",119,0)
 ;
"RTN","ORMBLD",120,0)
OR ; -- new Generic order
"RTN","ORMBLD",121,0)
 I ORDG=$O(^ORD(100.98,"B","M.A.S.",0)) D ADT^ORMBLDOR Q
"RTN","ORMBLD",122,0)
 D EN^ORMBLDOR
"RTN","ORMBLD",123,0)
 Q
"RTN","ORMBLD",124,0)
 ;
"RTN","ORMBLD",125,0)
GMRA ; -- new Allergy order
"RTN","ORMBLD",126,0)
 Q:$$PATCH^XPDUTL("OR*3.0*216")  ;195 quit if patch 216 is in
"RTN","ORMBLD",127,0)
 D:$L($T(ALG^ORMBLDAL)) ALG^ORMBLDAL
"RTN","ORMBLD",128,0)
 Q
"RTN","ORMBLD",129,0)
 ;
"RTN","ORMBLD",130,0)
GMRC ; -- new Consult order
"RTN","ORMBLD",131,0)
 D CSLT^ORMBLDGM
"RTN","ORMBLD",132,0)
 Q
"RTN","ORMBLD",133,0)
 ;
"RTN","ORMBLD",134,0)
FH ; -- new Diet order
"RTN","ORMBLD",135,0)
 N ORPARAM D EN^FHWOR8(+ORVP,.ORPARAM) ; set parameters
"RTN","ORMBLD",136,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T"
"RTN","ORMBLD",137,0)
 I ORDG=$O(^ORD(100.98,"B","PRECAUTIONS",0)) D IP^ORMBLDFH Q
"RTN","ORMBLD",138,0)
 I ORDG=$O(^ORD(100.98,"B","EARLY/LATE TRAYS",0)) D TRAY^ORMBLDFH Q
"RTN","ORMBLD",139,0)
 I ORDG=$O(^ORD(100.98,"B","TUBEFEEDINGS",0)) D TF^ORMBLDFH Q
"RTN","ORMBLD",140,0)
 I ORDG=$O(^ORD(100.98,"B","DIET ADDITIONAL ORDERS",0)) D ADDN^ORMBLDFH Q
"RTN","ORMBLD",141,0)
 D DIET^ORMBLDFH
"RTN","ORMBLD",142,0)
 Q
"RTN","ORMBLD",143,0)
 ;
"RTN","ORMBLD",144,0)
LR ; -- new Lab order
"RTN","ORMBLD",145,0)
 I CODE="XO" D XO^ORMBLDLR Q  ; change
"RTN","ORMBLD",146,0)
 D CH^ORMBLDLR S ORPKG="LRCH" Q  ;no difference by subscript at this time
"RTN","ORMBLD",147,0)
 N SUB S SUB=$P($G(^ORD(100.98,ORDG,0)),U,3)
"RTN","ORMBLD",148,0)
 S:(SUB="SP")!(SUB="EM")!(SUB="AU")!(SUB="CY") SUB="AP"
"RTN","ORMBLD",149,0)
 S:(SUB="LAB")!(SUB="MI")!(SUB="HEMA") SUB="CH"
"RTN","ORMBLD",150,0)
 D @(SUB_"^ORMBLDLR") S ORPKG=ORPKG_SUB
"RTN","ORMBLD",151,0)
 Q
"RTN","ORMBLD",152,0)
 ;
"RTN","ORMBLD",153,0)
PS ; -- new Pharmacy order
"RTN","ORMBLD",154,0)
 ;I ORDG=$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",0)) D OUT^ORMBLDPS Q
"RTN","ORMBLD",155,0)
 ;D UD^ORMBLDPS
"RTN","ORMBLD",156,0)
 N IVDLG S IVDLG=+$P(OR0,U,5) ;JD
"RTN","ORMBLD",157,0)
 N PKG S PKG=$P(OR0,U,14),PKG=$$GET1^DIQ(9.4,+PKG_",",1)
"RTN","ORMBLD",158,0)
 I +$$VALUE^ORCSAVE2(IFN,"URGENCY")=99,$P(OR3,U,11)'="B" D  Q  ;only send DONE orders from BCMA
"RTN","ORMBLD",159,0)
 . D STATUS^ORCSAVE2(IFN,2) K ORMSG
"RTN","ORMBLD",160,0)
 . I $P(OR3,U,11)=1,$P($G(^OR(100,+$P(OR3,U,5),3)),U,3)=5 D MSG(+$P(OR3,U,5),"CA") ;cancel original instead
"RTN","ORMBLD",161,0)
 I ORDG=$O(^ORD(100.98,"B","IV RX",0))!(ORDG=$O(^ORD(100.98,"B","TPN",0)))!(IVDLG=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0)))!(IVDLG=$O(^ORD(101.41,"B","CLINIC OR PAT FLUID OE",0))) D IV^ORMBLDPS Q
"RTN","ORMBLD",162,0)
 D @($S(PKG="PSIV":"IV",PKG="PSO":"OUT",PKG="PSH":"NVA",1:"UD")_"^ORMBLDPS")
"RTN","ORMBLD",163,0)
 Q
"RTN","ORMBLD",164,0)
 ;
"RTN","ORMBLD",165,0)
RA ; -- new Radiology order
"RTN","ORMBLD",166,0)
 D EN^ORMBLDRA
"RTN","ORMBLD",167,0)
 Q
"RTN","ORMBLD",168,0)
 ;
"RTN","ORMBLD",169,0)
SD ;
"RTN","ORMBLD",170,0)
 D EN^ORMBLDSD(CODE)
"RTN","ORMBLD",171,0)
 Q
"RTN","ORMBLD",172,0)
 ;
"RTN","ORMBLD",173,0)
TEST(ORIFN) ; -- Build/display HL7 msgs w/o sending
"RTN","ORMBLD",174,0)
 K ORZTEST S ORZTEST=1 D NEW(ORIFN) ; leaves msg in ORZTEST() on exit
"RTN","ORMBLD",175,0)
 Q
"RTN","ORMBLDSD")
0^8^B17436904
"RTN","ORMBLDSD",1,0)
ORMBLDSD ; SLC/MKB - Build outgoing SCHEDULING ORM msgs ;10/04/17
"RTN","ORMBLDSD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**434**;Dec 17, 1997;Build 35
"RTN","ORMBLDSD",3,0)
 ;
"RTN","ORMBLDSD",4,0)
 ;
"RTN","ORMBLDSD",5,0)
 ;
"RTN","ORMBLDSD",6,0)
ESC(STR) ;
"RTN","ORMBLDSD",7,0)
 Q $$ESC^ORHLESC(STR)
"RTN","ORMBLDSD",8,0)
 ;
"RTN","ORMBLDSD",9,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLDSD",10,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLDSD",11,0)
 ;
"RTN","ORMBLDSD",12,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORMBLDSD",13,0)
 Q $O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMBLDSD",14,0)
 ;
"RTN","ORMBLDSD",15,0)
DC ;
"RTN","ORMBLDSD",16,0)
 N OR0,ORDIALOG
"RTN","ORMBLDSD",17,0)
 S OR0=$G(^OR(100,+IFN,0)) Q:'$L(OR0)
"RTN","ORMBLDSD",18,0)
 S ORDIALOG=+$P(OR0,U,5) Q:'ORDIALOG
"RTN","ORMBLDSD",19,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER^ORCD(+IFN)
"RTN","ORMBLDSD",20,0)
 D EN("DC")
"RTN","ORMBLDSD",21,0)
 Q
"RTN","ORMBLDSD",22,0)
 ;
"RTN","ORMBLDSD",23,0)
EN(CODE) ; -- Segments for new Scheduling order
"RTN","ORMBLDSD",24,0)
 N A,ACT,DATEUPD,DAYS,ORNOW,APPTNUM,APPTINV,CLINIC,COMMENT,INC,INST,LOC,LOCSEG
"RTN","ORMBLDSD",25,0)
 N NODE,OFFSET,ORIFN,ORDER,PREREQ,PKGREF,PTR,ROOM,RTCDATE,SEGCNT,START,TIME,VALUE
"RTN","ORMBLDSD",26,0)
 N TEMP,WHOENTER,WHOSIGN,X0,X1,X2,X3,X8
"RTN","ORMBLDSD",27,0)
 S ACT=$S(IFN[";":$P(IFN,";",2),1:1),DATEUPD=0
"RTN","ORMBLDSD",28,0)
 S X0=$G(^OR(100,+IFN,0)),X3=$G(^OR(100,+IFN,3)),X8=$G(^OR(100,+IFN,8,ACT,0))
"RTN","ORMBLDSD",29,0)
 S PKGREF=$P($G(^OR(100,+IFN,4)),U)
"RTN","ORMBLDSD",30,0)
 S WHOSIGN=$P(X8,U,5)
"RTN","ORMBLDSD",31,0)
 S WHOENTER=$P(X0,U,6)
"RTN","ORMBLDSD",32,0)
 S WHOSIGN=$$WHOSIGN(X8)
"RTN","ORMBLDSD",33,0)
 I WHOSIGN="" S WHOSIGN=WHOENTER
"RTN","ORMBLDSD",34,0)
 ;I WHOSIGN'>0 S WHOSIGN=$P(X8,U,7)
"RTN","ORMBLDSD",35,0)
 S WHOSIGN=WHOSIGN_U_$$GET1^DIQ(200,WHOSIGN,.01)
"RTN","ORMBLDSD",36,0)
 S WHOENTER=WHOENTER_U_$$GET1^DIQ(200,WHOENTER,.01)
"RTN","ORMBLDSD",37,0)
 I CODE'="DC" S ORDER=$P(ORMSG(4),"|",3) K ORMSG(4)
"RTN","ORMBLDSD",38,0)
 S SEGCNT=$S(CODE="DC":3,1:4)
"RTN","ORMBLDSD",39,0)
 S LOC=+$P(X0,U,10),LOCSEG=""
"RTN","ORMBLDSD",40,0)
 I LOC>0 S LOCSEG=+LOC_":"_$$GET1^DIQ(44,LOC,.01)_U
"RTN","ORMBLDSD",41,0)
 I $P($G(^SC(LOC,0)),U,3)="W" S LOCSEG=LOCSEG_$P($G(^DPT(+ORVP,.101)),U)
"RTN","ORMBLDSD",42,0)
 S ORIFN=$S(IFN[";":IFN,1:IFN_";1")
"RTN","ORMBLDSD",43,0)
 ;I PKGREF'>0,CODE="XO" D
"RTN","ORMBLDSD",44,0)
 ;.S ORPREV=$P(X3,U,5) I ORPREV'>0 Q
"RTN","ORMBLDSD",45,0)
 ;.S PKGREF=$P($G(^OR(100,ORPREV,4)),U)
"RTN","ORMBLDSD",46,0)
 ;S ORMSG(SEGCNT)="ARQ|"_ORIFN_"^OR|"_PKGREF_"|||^followup^^^^|"_$S(CODE="DC":"S05",CODE="XO":"S03",1:"S01")_"||"
"RTN","ORMBLDSD",47,0)
 S ORMSG(SEGCNT)="ARQ|"_ORIFN_"^OR|"_PKGREF_"|||^followup^^^^|"_$S(CODE="DC":"S05",1:"S01")_"||"
"RTN","ORMBLDSD",48,0)
 S $P(ORMSG(1),"|",9)="SRM|"_ORIFN_U_$S(CODE="DC":"S05",CODE="XX":"S03",1:"S01")
"RTN","ORMBLDSD",49,0)
 S A=$G(ORDIALOG($$PTR("CLINICALLY INDICATED DATE"),1))
"RTN","ORMBLDSD",50,0)
 I A["+" D
"RTN","ORMBLDSD",51,0)
 . S ORNOW=$$NOW^XLFDT()
"RTN","ORMBLDSD",52,0)
 . S OFFSET=$$UP^XLFSTR($P(A,"+",2)) S DAYS=$S(OFFSET["W":+OFFSET*7,OFFSET["M":+OFFSET*30,1:+OFFSET)
"RTN","ORMBLDSD",53,0)
 . S X1=$P(ORNOW,"."),X2=DAYS D C^%DTC S A=X_$S(A?1"N".E:"."_$P(ORNOW,"."),1:"")
"RTN","ORMBLDSD",54,0)
 . ;S X1=$P(ORNOW,"."),X2=$P(A,"+",2) D C^%DTC S A=X_$S(A?1"N".E:"."_$P(ORNOW,"."),1:"")
"RTN","ORMBLDSD",55,0)
 . S ORDIALOG($$PTR("CLINICALLY INDICATED DATE"),1)=A,DATEUPD=1
"RTN","ORMBLDSD",56,0)
 S RTCDATE=$$HL7DATE(A)
"RTN","ORMBLDSD",57,0)
 S START=$P(X0,U,8),TIME=$G(ORDIALOG($$PTR("YES/NO"),1))
"RTN","ORMBLDSD",58,0)
 S ORMSG(SEGCNT)=ORMSG(SEGCNT)_$S(TIME=1:U_RTCDATE_"|T|",1:RTCDATE_U_"||")
"RTN","ORMBLDSD",59,0)
 I +TIME=1 S ORLEAD="on or around ",ORTRAIL=""
"RTN","ORMBLDSD",60,0)
 I +TIME=0 S ORLEAD="on or around (",ORTRAIL=")"
"RTN","ORMBLDSD",61,0)
 S APPTNUM=$G(ORDIALOG($$PTR("APPT NUM"),1))
"RTN","ORMBLDSD",62,0)
 S APPTINV=+$G(ORDIALOG($$PTR("SCH INTERVAL"),1))
"RTN","ORMBLDSD",63,0)
 S ORMSG(SEGCNT)=ORMSG(SEGCNT)_$S(APPTINV>0:"Q"_APPTINV_"D",1:"")_"|"
"RTN","ORMBLDSD",64,0)
 S ORMSG(SEGCNT)=ORMSG(SEGCNT)_APPTNUM_"|"
"RTN","ORMBLDSD",65,0)
 S ORMSG(SEGCNT)=ORMSG(SEGCNT)_WHOSIGN_"||||"
"RTN","ORMBLDSD",66,0)
 S ORMSG(SEGCNT)=ORMSG(SEGCNT)_WHOENTER_"||"
"RTN","ORMBLDSD",67,0)
 S ORMSG(SEGCNT)=ORMSG(SEGCNT)_LOCSEG_"|||"
"RTN","ORMBLDSD",68,0)
 S ORMSG(SEGCNT)=ORMSG(SEGCNT)_IFN_"|"_PKGREF_"|"
"RTN","ORMBLDSD",69,0)
AIL ;
"RTN","ORMBLDSD",70,0)
 S SEGCNT=SEGCNT+1
"RTN","ORMBLDSD",71,0)
 S CLINIC=$G(ORDIALOG($$PTR("LOCATION"),1))
"RTN","ORMBLDSD",72,0)
 S CLINIC=CLINIC_U_$$GET1^DIQ(44,CLINIC,.01)
"RTN","ORMBLDSD",73,0)
 S ORMSG(SEGCNT)="AIL|||"_CLINIC
"RTN","ORMBLDSD",74,0)
 S PTR=$$PTR("PRE REQ")
"RTN","ORMBLDSD",75,0)
 ;
"RTN","ORMBLDSD",76,0)
AIG ;
"RTN","ORMBLDSD",77,0)
 S INST=0 F  S INST=$O(ORDIALOG(PTR,INST)) Q:INST'>0  S PREREQ(INST)=ORDIALOG(PTR,INST)
"RTN","ORMBLDSD",78,0)
 I $D(PREREQ) D
"RTN","ORMBLDSD",79,0)
 .S SEGCNT=SEGCNT+1,INC=0
"RTN","ORMBLDSD",80,0)
 .S INST=0 F  S INST=$O(PREREQ(INST)) Q:INST'>0  D
"RTN","ORMBLDSD",81,0)
 ..S INC=INC+1
"RTN","ORMBLDSD",82,0)
 ..I INC=1 S ORMSG(SEGCNT)="AIG|"_INC_"|"_U_PREREQ(INST)_U_U_U_U_"|||||||||||" Q
"RTN","ORMBLDSD",83,0)
 ..I INC>1 S ORMSG(SEGCNT,INC-1)="AIG|"_INC_"|"_U_PREREQ(INST)_U_U_U_U_"|||||||||||"
"RTN","ORMBLDSD",84,0)
NXT ;
"RTN","ORMBLDSD",85,0)
 S COMMENT=$G(ORDIALOG($$PTR("SD COMMENT"),1))
"RTN","ORMBLDSD",86,0)
 I COMMENT'="" S SEGCNT=SEGCNT+1,ORMSG(SEGCNT)="NTE|6|P|"_$$ESC(COMMENT)
"RTN","ORMBLDSD",87,0)
 I DATEUPD=1 S ORIFN=+ORIFN K ^OR(100,ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(ORIFN_";"_ACT)
"RTN","ORMBLDSD",88,0)
 Q
"RTN","ORMBLDSD",89,0)
WHOSIGN(X8) ;
"RTN","ORMBLDSD",90,0)
 I $P(X8,U,5)>0 Q $P(X8,U,5)
"RTN","ORMBLDSD",91,0)
 I $P(X8,U,7)>0 Q $P(X8,U,7)
"RTN","ORMBLDSD",92,0)
 I $P(X8,U,3)>0 Q $P(X8,U,3)
"RTN","ORMBLDSD",93,0)
 I $P(X8,U,17)>0 Q $P(X8,U,17)
"RTN","ORMBLDSD",94,0)
 Q ""
"RTN","ORMBLDSD",95,0)
 ;
"RTN","ORMSD")
0^11^B98846550
"RTN","ORMSD",1,0)
ORMSD ; SLC/AGP - Process Scheduling ORM msgs ;07/05/17
"RTN","ORMSD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**434**;Dec 17, 1997;Build 35
"RTN","ORMSD",3,0)
 ;
"RTN","ORMSD",4,0)
 ;EN builds an results array
"RTN","ORMSD",5,0)
 ;INPUTS("APPT IEN")=0
"RTN","ORMSD",6,0)
 ;INPUTS("APPT TYPE")="followup"
"RTN","ORMSD",7,0)
 ;INPUTS("CLINIC")="240^20 MINUTE"
"RTN","ORMSD",8,0)
 ;INPUTS("COMMENT")="This is the new comment field"
"RTN","ORMSD",9,0)
 ;INPUTS("ENTERED BY")="10000000195^PULEO,ANTHONY"
"RTN","ORMSD",10,0)
 ;INPUTS("INTERVAL")="Q7D"
"RTN","ORMSD",11,0)
 ;INPUTS("MSG ID")=""
"RTN","ORMSD",12,0)
 ;INPUTS("DISCONTINUE")=1
"RTN","ORMSD",13,0)
 ;INPUTS("ENTERED IN ERROR")=1
"RTN","ORMSD",14,0)
 ;INPUTS("NLT")=1
"RTN","ORMSD",15,0)
 ;INPUTS("NUMBER APPT")=4
"RTN","ORMSD",16,0)
 ;INPUTS("ORDER IEN")=14524362
"RTN","ORMSD",17,0)
 ;INPUTS("PATIENT")="346^"
"RTN","ORMSD",18,0)
 ;INPUTS("PREREQ",2)="XRAY"
"RTN","ORMSD",19,0)
 ;INPUTS("PREREQ",3)="VITALS"
"RTN","ORMSD",20,0)
 ;INPUTS("RTC DATE")=20170524
"RTN","ORMSD",21,0)
 ;INPUTS("SIGNED BY")=""
"RTN","ORMSD",22,0)
 ;
"RTN","ORMSD",23,0)
 ;
"RTN","ORMSD",24,0)
UNESC(STR) ;
"RTN","ORMSD",25,0)
 Q $$ESC^ORHLESC(STR)
"RTN","ORMSD",26,0)
 ;
"RTN","ORMSD",27,0)
CREATACT(NATURE) ;
"RTN","ORMSD",28,0)
 N IEN
"RTN","ORMSD",29,0)
 S IEN=$O(^ORD(100.02,"C",NATURE,"")) I IEN'>0 Q 0
"RTN","ORMSD",30,0)
 I +$P($G(^ORD(100.02,IEN,1)),U)=1 Q 1
"RTN","ORMSD",31,0)
 Q 0
"RTN","ORMSD",32,0)
 ;
"RTN","ORMSD",33,0)
EN(MSG) ; -- main entry point for OR RECEIVE where MSG contains HL7 msg
"RTN","ORMSD",34,0)
 N ACTION,AIG,AIL,ARQ,DATE,ENTER,ERROR,FAILMSA,FREQ,HASMSA,INST,MSH,NODE,NUM,NXT,ORMSG,PAT,RESULT,X,PID,PV1,SEG,SIGN
"RTN","ORMSD",35,0)
 S ERROR=""
"RTN","ORMSD",36,0)
 S ORMSG=$S($L($G(MSG)):MSG,1:"MSG") ; MSG="NAME" or MSG(#)=message
"RTN","ORMSD",37,0)
 I '$O(@ORMSG@(0)) D EN^ORERR("Missing HL7 message",.MSG) Q
"RTN","ORMSD",38,0)
 S MSH=0 F  S MSH=$O(@ORMSG@(MSH)) Q:MSH'>0  Q:$E(@ORMSG@(MSH),1,3)="MSH"
"RTN","ORMSD",39,0)
 I 'MSH D EN^ORERR("Missing or invalid MSH segment",.MSG)
"RTN","ORMSD",40,0)
 S X=0,FAILMSA=0,HASMSA=0 F  S X=$O(@ORMSG@(X)) Q:X'>0!(ERROR'="")!(HASMSA=1)  D
"RTN","ORMSD",41,0)
 .S SEG=$P(@ORMSG@(X),"|"),NODE=$P(@ORMSG@(X),"|",2,99)
"RTN","ORMSD",42,0)
 .I SEG="MSA" S HASMSA=1
"RTN","ORMSD",43,0)
 .S SEG=SEG_"(.RESULT,X,NODE,.ERROR)"
"RTN","ORMSD",44,0)
 .D @SEG
"RTN","ORMSD",45,0)
 I FAILMSA=1 D REJECT(.RESULT) G ENX
"RTN","ORMSD",46,0)
 I HASMSA=1 D ACCEPT(.RESULT) G ENX
"RTN","ORMSD",47,0)
 I $G(ERROR)'="" D SENDFAIL(.ERROR,.RESULT) G ENX
"RTN","ORMSD",48,0)
 I '$$VALIDATE(.RESULT,.ERROR) D SENDFAIL(.ERROR,.RESULT) G ENX
"RTN","ORMSD",49,0)
 D SAVEREC(.RESULT)
"RTN","ORMSD",50,0)
 D SENDOK(.RESULT)
"RTN","ORMSD",51,0)
ENX ;
"RTN","ORMSD",52,0)
 Q
"RTN","ORMSD",53,0)
 ;
"RTN","ORMSD",54,0)
LASTACT(ORIFN) ;
"RTN","ORMSD",55,0)
 N RESULT
"RTN","ORMSD",56,0)
 I ORIFN[";" S RESULT=$P(ORIFN,";",2) G LASTACTX
"RTN","ORMSD",57,0)
 S RESULT=$O(^OR(100,ORIFN,8,""),-1)
"RTN","ORMSD",58,0)
 I RESULT="" S RESULT=1
"RTN","ORMSD",59,0)
LASTACTX ;
"RTN","ORMSD",60,0)
 Q RESULT
"RTN","ORMSD",61,0)
 ;
"RTN","ORMSD",62,0)
MSH(RESULT,X,SEG,ERROR) ;
"RTN","ORMSD",63,0)
 S RESULT("MSG ID")=$P(SEG,"|",9)
"RTN","ORMSD",64,0)
 S RESULT("MSG DATE/TIME")=$$HL7TFM^XLFDT($P(SEG,"|",6),"L")
"RTN","ORMSD",65,0)
 Q
"RTN","ORMSD",66,0)
 ;
"RTN","ORMSD",67,0)
MSA(RESULT,X,SEG,ERROR) ;
"RTN","ORMSD",68,0)
 N STATUS
"RTN","ORMSD",69,0)
 I $P(SEG,"|")'="AR" D  Q
"RTN","ORMSD",70,0)
 .S STATUS=$P(SEG,"|",2)
"RTN","ORMSD",71,0)
 .S RESULT("APPT IEN")=$P(STATUS,U,2)
"RTN","ORMSD",72,0)
 S RESULT("REJECTION ERROR")=$P(SEG,"|",2) S FAILMSA=1
"RTN","ORMSD",73,0)
 ;S OREASON=RESULT("REJECTION ERROR")
"RTN","ORMSD",74,0)
 Q
"RTN","ORMSD",75,0)
 ;
"RTN","ORMSD",76,0)
SCH(RESULT,X,SEG,ERROR) ;
"RTN","ORMSD",77,0)
 N TIME
"RTN","ORMSD",78,0)
 S RESULT("ORDER IEN")=$P(SEG,"|",2),RESULT("APPT IEN")=+$P(SEG,"|",1)
"RTN","ORMSD",79,0)
 S RESULT("APPT TYPE")=$P($P(SEG,"|",5),U,2)
"RTN","ORMSD",80,0)
 S ACTION=$P(SEG,"|",6) S RESULT($S($P(ACTION,U)="S15":"DISCONTINUE",1:"COMPLETE"))=1
"RTN","ORMSD",81,0)
 I $P(ACTION,U,2)="PARTIAL" S RESULT("PARTIAL")=1
"RTN","ORMSD",82,0)
 S DATE=$P(SEG,"|",8),TIME=$P(SEG,"|",9)
"RTN","ORMSD",83,0)
 I TIME="T" S RESULT("NLT")=1
"RTN","ORMSD",84,0)
 S RESULT("RTC DATE")=$$HL7TFM^XLFDT($S(TIME="T":$P(DATE,U,2),1:$P(DATE,U)),"L")
"RTN","ORMSD",85,0)
 S FREQ=$P(SEG,"|",10),NUM=+$P(SEG,"|",11)
"RTN","ORMSD",86,0)
 S RESULT("NUMBER APPT")=NUM I NUM>0 S RESULT("INTERVAL")=+$E(FREQ,2,3)
"RTN","ORMSD",87,0)
 S RESULT("SIGNED BY")=$P(SEG,"|",14)
"RTN","ORMSD",88,0)
 S RESULT("DISPOSITION BY")=$P(SEG,"|",16)
"RTN","ORMSD",89,0)
 Q
"RTN","ORMSD",90,0)
 ;
"RTN","ORMSD",91,0)
AIL(RESULT,X,SEG,ERROR) ;
"RTN","ORMSD",92,0)
 S RESULT("CLINIC")=$P(SEG,"|",3)
"RTN","ORMSD",93,0)
 Q
"RTN","ORMSD",94,0)
AIG(RESULT,X,SEG,ERROR) ;
"RTN","ORMSD",95,0)
 N INST,NODE
"RTN","ORMSD",96,0)
 S RESULT("PREREQ",$P(SEG,"|"))=$P($P(SEG,"|",2),U,2)
"RTN","ORMSD",97,0)
 S INST=0 F  S INST=$O(@ORMSG@(X,INST)) Q:INST'>0  D
"RTN","ORMSD",98,0)
 .S NODE=$P(@ORMSG@(X,INST),"|",2,99)
"RTN","ORMSD",99,0)
 .S RESULT("PREREQ",$P(NODE,"|"))=$P($P(NODE,"|",2),U,2)
"RTN","ORMSD",100,0)
 Q
"RTN","ORMSD",101,0)
 ;
"RTN","ORMSD",102,0)
NTE(RESULT,X,SEG,ERROR) ;
"RTN","ORMSD",103,0)
 S RESULT("COMMENT")=$$UNESC($P(SEG,"|",3))
"RTN","ORMSD",104,0)
 Q
"RTN","ORMSD",105,0)
 ;
"RTN","ORMSD",106,0)
 ;
"RTN","ORMSD",107,0)
PID(RESULT,X,SEG,ERROR) ;
"RTN","ORMSD",108,0)
 S RESULT("PATIENT")=$P(SEG,"|",3)_U_$P(SEG,"|",5)
"RTN","ORMSD",109,0)
 Q
"RTN","ORMSD",110,0)
 ;
"RTN","ORMSD",111,0)
PV1(RESULT,X,SEG,ERROR) ; -- Gets Patient location info.
"RTN","ORMSD",112,0)
 ;    may not be needed for scheduling
"RTN","ORMSD",113,0)
 Q
"RTN","ORMSD",114,0)
 ;
"RTN","ORMSD",115,0)
FMDATE(Y) ; -- Convert HL7 date/time to FM format
"RTN","ORMSD",116,0)
 Q $$HL7TFM^XLFDT(Y)
"RTN","ORMSD",117,0)
 ;
"RTN","ORMSD",118,0)
REJECT(RESULT) ;
"RTN","ORMSD",119,0)
 N ORIFN,ORNATR
"RTN","ORMSD",120,0)
 S ORIFN=$P($G(RESULT("MSG ID")),U) Q:+ORIFN'>0
"RTN","ORMSD",121,0)
 S:'$G(ORNATR) ORNATR="X" ;Rejected
"RTN","ORMSD",122,0)
 S ^OR(100,+ORIFN,6)=$O(^ORD(100.02,"C",ORNATR,0))_U_U_+$E($$NOW^XLFDT,1,12)_U_U_RESULT("REJECTION ERROR")
"RTN","ORMSD",123,0)
 I $P($G(^OR(100,+ORIFN,3)),U,11)=2 N ORIG S ORIG=$P(^(3),U,5) S:ORIG $P(^OR(100,ORIG,3),U,6)="" ;remove fwd ptr if pending renewal
"RTN","ORMSD",124,0)
 S ORERR=RESULT("REJECTION ERROR")
"RTN","ORMSD",125,0)
 N ORDA S ORDA=+$P(ORIFN,";",2) I ORDA D
"RTN","ORMSD",126,0)
 . S $P(^OR(100,+ORIFN,8,ORDA,0),U,15)=13 ;request rejected
"RTN","ORMSD",127,0)
 . S:$L(RESULT("REJECTION ERROR")) ^OR(100,+ORIFN,8,ORDA,1)=RESULT("REJECTION ERROR")
"RTN","ORMSD",128,0)
 D STATUS^ORCSAVE2(+ORIFN,13)
"RTN","ORMSD",129,0)
 Q
"RTN","ORMSD",130,0)
 ;
"RTN","ORMSD",131,0)
ACCEPT(RESULT) ;
"RTN","ORMSD",132,0)
 N ORIFN
"RTN","ORMSD",133,0)
 S ORIFN=$P($G(RESULT("MSG ID")),U)
"RTN","ORMSD",134,0)
 I $P(RESULT("MSG ID"),U,2)'="S05" D  Q
"RTN","ORMSD",135,0)
 .S ^OR(100,+ORIFN,4)=$G(RESULT("APPT IEN"))
"RTN","ORMSD",136,0)
 .D STATUS^ORCSAVE2(+ORIFN,5)
"RTN","ORMSD",137,0)
 .D DATES^ORCSAVE2(+ORIFN,DT,"")
"RTN","ORMSD",138,0)
 D DCACK(+ORIFN,.RESULT)
"RTN","ORMSD",139,0)
 Q
"RTN","ORMSD",140,0)
 ;
"RTN","ORMSD",141,0)
DCACK(ORIFN,RESULT) ;
"RTN","ORMSD",142,0)
 N ORSTS
"RTN","ORMSD",143,0)
 ;set status to discontinue used as a variable for future code changes
"RTN","ORMSD",144,0)
 S ORSTS=1
"RTN","ORMSD",145,0)
 D EXPDT(ORIFN)
"RTN","ORMSD",146,0)
 D STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMSD",147,0)
 I $G(RESULT("APPT IEN"))'="" S ^OR(100,+ORIFN,4)=RESULT("APPT IEN")
"RTN","ORMSD",148,0)
 Q
"RTN","ORMSD",149,0)
 ;
"RTN","ORMSD",150,0)
GETSTAT(RESULT) ;
"RTN","ORMSD",151,0)
 I +$G(RESULT("DISCONTINUE")) Q $O(^ORD(100.01,"B","DISCONTINUED",""))
"RTN","ORMSD",152,0)
 I +$G(RESULT("PARTIAL")) Q $O(^ORD(100.01,"B","PARTIAL RESULTS",""))
"RTN","ORMSD",153,0)
 Q $O(^ORD(100.01,"B","COMPLETE",""))
"RTN","ORMSD",154,0)
 ;
"RTN","ORMSD",155,0)
EXPDT(ORIFN) ; -- save exp date when dc'd
"RTN","ORMSD",156,0)
 N STOP S STOP=$P($G(^OR(100,+ORIFN,0)),U,9)
"RTN","ORMSD",157,0)
 I STOP,STOP<$$NOW^XLFDT,'$P($G(^OR(100,+ORIFN,6)),U,6) S $P(^(6),U,6)=STOP
"RTN","ORMSD",158,0)
 Q
"RTN","ORMSD",159,0)
 ;
"RTN","ORMSD",160,0)
VALIDATE(RESULT,ERROR) ;
"RTN","ORMSD",161,0)
 ;INPUTS("APPT IEN")=0
"RTN","ORMSD",162,0)
 ;INPUTS("APPT TYPE")="followup"
"RTN","ORMSD",163,0)
 ;INPUTS("CLINIC")="240^20 MINUTE"
"RTN","ORMSD",164,0)
 ;INPUTS("COMMENT")="This is the new comment field"
"RTN","ORMSD",165,0)
 ;INPUTS("ENTERED BY")="10000000195^PULEO,ANTHONY"
"RTN","ORMSD",166,0)
 ;INPUTS("INTERVAL")="Q7D"
"RTN","ORMSD",167,0)
 ;INPUTS("MSG ID")=""
"RTN","ORMSD",168,0)
 ;INPUTS("DISCONTINUE")=1
"RTN","ORMSD",169,0)
 ;INPUTS("ENTERED IN ERROR")=1
"RTN","ORMSD",170,0)
 ;INPUTS("NLT")=1
"RTN","ORMSD",171,0)
 ;INPUTS("NUMBER APPT")=4
"RTN","ORMSD",172,0)
 ;INPUTS("ORDER IEN")=14524362
"RTN","ORMSD",173,0)
 ;INPUTS("PATIENT")="346^"
"RTN","ORMSD",174,0)
 ;INPUTS("PREREQ",2)="XRAY"
"RTN","ORMSD",175,0)
 ;INPUTS("PREREQ",3)="VITALS"
"RTN","ORMSD",176,0)
 ;INPUTS("RTC DATE")=20170524
"RTN","ORMSD",177,0)
 ;INPUTS("SIGNED BY")=""
"RTN","ORMSD",178,0)
 N OK,ORIFN,OR3,STS
"RTN","ORMSD",179,0)
 S OK=1
"RTN","ORMSD",180,0)
 I +$G(RESULT("CLINIC"))'>0 S ERROR="Clinic location not defined" S OK=0 G VALIDATX
"RTN","ORMSD",181,0)
 I '$G(RESULT("COMPLETE")),'$G(RESULT("DISCONTINUE")) S ERROR="Status not defined" S OK=0 G VALIDATX
"RTN","ORMSD",182,0)
 I +$G(RESULT("PATIENT"))'>0 S ERROR="Patient is not defined" S OK=0 G VALIDATX
"RTN","ORMSD",183,0)
 I +$G(RESULT("PATIENT"))_";DPT("'=$P($G(^OR(100,RESULT("ORDER IEN"),0)),U,2) S ERROR="Patient doesn't match" S OK=0 G VALIDATX
"RTN","ORMSD",184,0)
 I '+$G(RESULT("DISPOSITION BY")) S ERROR="User who disposition the order not defined" S OK=0 G VALIDATX
"RTN","ORMSD",185,0)
 S ORIFN=RESULT("ORDER IEN") I +ORIFN'>0 S ERROR="Order number not defined" S OK=0 G VALIDATX
"RTN","ORMSD",186,0)
 S OR3=$G(^OR(100,+ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORMSD",187,0)
 I STS=1!(STS=2) S ERROR="Order with a status of "_$S(STS=1:"discontinued",1:"complete")_" cannot be changed" S OK=0 G VALIDATX
"RTN","ORMSD",188,0)
VALIDATX ;
"RTN","ORMSD",189,0)
 Q OK
"RTN","ORMSD",190,0)
 ;
"RTN","ORMSD",191,0)
SAVEREC(RESULT) ;
"RTN","ORMSD",192,0)
 N C,CREATACT,DISPBY,I,ID,ISTIME,OERR,ORDA,ORDG,ORDIALOG,ORIFN,ORNATR,ORNP,ORNOW,ORPKG,ORSTRT,ORVP,ORWHO,STATUS,TYPE,WHOSIGN,X0,X8
"RTN","ORMSD",193,0)
 N ORLEAD,ORTRAIL
"RTN","ORMSD",194,0)
 S ORWHO=+RESULT("DISPOSITION BY")
"RTN","ORMSD",195,0)
 S ORNP=ORWHO
"RTN","ORMSD",196,0)
 S ORNOW=+$E($$NOW^XLFDT,1,12)
"RTN","ORMSD",197,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","SD RTC",0))
"RTN","ORMSD",198,0)
 S ORDG=+$O(^ORD(100.98,"B","CLINIC SCHEDULING",0))
"RTN","ORMSD",199,0)
 S ORIFN=RESULT("ORDER IEN")
"RTN","ORMSD",200,0)
 S ORVP=+RESULT("PATIENT")_";DPT("
"RTN","ORMSD",201,0)
 S ORPKG=+$$PKG("SD") D GETDLG1^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN,"ORDIALOG")
"RTN","ORMSD",202,0)
 ;set ORDIALOG array to values returned from scheduling single instance
"RTN","ORMSD",203,0)
 ;D UPDRESP(ORIFN,.ORDIALOG)
"RTN","ORMSD",204,0)
 S ORDA=$P(ORIFN,";",2) I ORDA="" S ORDA=1
"RTN","ORMSD",205,0)
 S X0=$G(^OR(100,+ORIFN,0)),X8=$G(^OR(100,ORIFN,8,ORDA,0))
"RTN","ORMSD",206,0)
 ;get whosigned and start date for later
"RTN","ORMSD",207,0)
 S WHOSIGN=$P(X8,U,5),ORSTRT=$P(X0,U,8)
"RTN","ORMSD",208,0)
 ;update package reference
"RTN","ORMSD",209,0)
 S ^OR(100,+ORIFN,4)=$G(RESULT("APPT IEN"))
"RTN","ORMSD",210,0)
 ;create new order action
"RTN","ORMSD",211,0)
 ;set to complete status until next iteration of VSE
"RTN","ORMSD",212,0)
 ;S STATUS=$S(+$G(RESULT("DISCONTINUE")):$O(^ORD(100.01,"B","CANCELLED","")),1:$O(^ORD(100.01,"B","COMPLETE","")))
"RTN","ORMSD",213,0)
 ;S STATUS=$S(+$G(RESULT("DISCONTINUE")):$O(^ORD(100.01,"B","DISCONTINUED","")),+$G(RESULT("PARTIAL")):$O(^ORD(100.01,"B","PARTIAL RESULTS","")),1:$O(^ORD(100.01,"B","COMPLETE","")))
"RTN","ORMSD",214,0)
 S STATUS=$$GETSTAT(.RESULT)
"RTN","ORMSD",215,0)
 S TYPE=$S(+$G(RESULT("DISCONTINUE")):"DC",1:"XX")
"RTN","ORMSD",216,0)
 D STATUS^ORCSAVE2(ORIFN,STATUS)
"RTN","ORMSD",217,0)
 S CREATACT=$$CREATACT("I")
"RTN","ORMSD",218,0)
 I CREATACT=1 S ORDA=$$ACTION^ORCSAVE(TYPE,ORIFN,WHOSIGN,$S(TYPE="DC":"Per Scheduling",1:""),ORNOW,ORWHO)
"RTN","ORMSD",219,0)
 I CREATACT=0 S ORDA=$$LASTACT(ORIFN)
"RTN","ORMSD",220,0)
 ;if order is not created how to get this to expert system
"RTN","ORMSD",221,0)
 I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMSD",222,0)
 ;update status to compete set indexes
"RTN","ORMSD",223,0)
 ;I TYPE'="DC" D SETALL^ORDD100(ORIFN)
"RTN","ORMSD",224,0)
 D SETALL^ORDD100(ORIFN)
"RTN","ORMSD",225,0)
 ;set the order as it has been release to scheduling with the update
"RTN","ORMSD",226,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,ORWHO,"I")
"RTN","ORMSD",227,0)
 S ORNATR="I"
"RTN","ORMSD",228,0)
 D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMSD",229,0)
 ;update dates
"RTN","ORMSD",230,0)
 D DATES^ORCSAVE2(ORIFN,ORSTRT,ORNOW)
"RTN","ORMSD",231,0)
 ;set disposition fields
"RTN","ORMSD",232,0)
 N DA,DR,DIE
"RTN","ORMSD",233,0)
 S DA(1)=ORIFN,DA=ORDA
"RTN","ORMSD",234,0)
 S DIE="^OR(100,"_DA(1)_",8,"
"RTN","ORMSD",235,0)
 S DR="40////"_ORWHO_";41////"_RESULT("MSG DATE/TIME")
"RTN","ORMSD",236,0)
 D ^DIE
"RTN","ORMSD",237,0)
 S $P(^OR(100,+ORIFN,8,ORDA,0),U,14)=ORDA
"RTN","ORMSD",238,0)
 S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMSD",239,0)
 I TYPE="DC" D
"RTN","ORMSD",240,0)
 .D CANCEL^ORCSEND(+ORIFN)
"RTN","ORMSD",241,0)
 .D EN^ORB3(91,+RESULT("PATIENT"),ORIFN,"","Appointment Request Cancelled in Scheduling","NEW,"_ORIFN) Q
"RTN","ORMSD",242,0)
 ;Discontinue updates only
"RTN","ORMSD",243,0)
 ;I TYPE="DC" D  Q
"RTN","ORMSD",244,0)
 ;.S ORNATR="E"
"RTN","ORMSD",245,0)
 ;.;D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMSD",246,0)
 ;.S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMSD",247,0)
 ;.D CANCEL^ORCSEND(+ORIFN)
"RTN","ORMSD",248,0)
 ;update responses 4.5 and SIG
"RTN","ORMSD",249,0)
 S ISTIME=ORDIALOG($$PTR($P("YES/NO",U)),1)
"RTN","ORMSD",250,0)
 S ORLEAD=$S(ISTIME=1:"on or before ",1:"on or around ("),ORTRAIL=$S(ISTIME=1:"",1:")")
"RTN","ORMSD",251,0)
 K ^OR(100,+ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(+ORIFN_";"_ORDA)
"RTN","ORMSD",252,0)
 ;update the dialog and package fiels. This may have value in future version of VSE
"RTN","ORMSD",253,0)
 S $P(^OR(100,ORIFN,0),U,5)=ORDIALOG_";ORD(101.41,",$P(^(0),U,14)=ORPKG
"RTN","ORMSD",254,0)
 ;validate display group and update if needed
"RTN","ORMSD",255,0)
 I $P(^OR(100,ORIFN,0),U,11)'=ORDG D
"RTN","ORMSD",256,0)
 . N DA,DR,DIE
"RTN","ORMSD",257,0)
 . S DA=ORIFN,DR="23////"_ORDG,DIE="^OR(100," D ^DIE
"RTN","ORMSD",258,0)
 ;S $P(^(8,ORDA,0),U,14)=ORDA
"RTN","ORMSD",259,0)
 ;send back ack back, because scheduling is using a SRM message this code is branched from
"RTN","ORMSD",260,0)
 ;the standard OR HL7 message. This handle in the EN line tag of this routine.
"RTN","ORMSD",261,0)
 ;S ORIFN=ORIFN_";"_ORDA,ORDCNTRL="SN" ;to send NA msg back
"RTN","ORMSD",262,0)
 Q
"RTN","ORMSD",263,0)
 ;
"RTN","ORMSD",264,0)
UPDRESP(ORIFN,ORDIALOG) ;
"RTN","ORMSD",265,0)
 N C,I,ID,TYPE
"RTN","ORMSD",266,0)
 F ID="LOCATION","CLINICALLY","YN","SDNUM","SDINT","SDCOMMENT" D
"RTN","ORMSD",267,0)
 .S TYPE=$$PMPTMAP(ID) I ID="" Q
"RTN","ORMSD",268,0)
 .I ID="SDINT",+$G(ORDIALOG($$PTR($P(TYPE,U)),1))=0,$P($G(RESULT($P(TYPE,U,2))),U)=0 Q
"RTN","ORMSD",269,0)
 .I $P($G(RESULT($P(TYPE,U,2))),U)'="" S ORDIALOG($$PTR($P(TYPE,U)),1)=$P($G(RESULT($P(TYPE,U,2))),U) Q
"RTN","ORMSD",270,0)
 .I $G(ORDIALOG($$PTR($P(TYPE,U)),1))'="" S ORDIALOG($$PTR($P(TYPE,U)),1)="@"
"RTN","ORMSD",271,0)
 ;set ORDIALOG array to values returned from scheduling multiple instances
"RTN","ORMSD",272,0)
 ;I $D(RESULT("PREREQ")) D
"RTN","ORMSD",273,0)
 ;.S C=0,I=0 F  S I=$O(RESULT("PREREQ",I)) Q:I'>0  D
"RTN","ORMSD",274,0)
 ;..S C=C+1,ORDIALOG($$PTR("PRE REQ"),C)=$G(RESULT("PREREQ",I))
"RTN","ORMSD",275,0)
 Q
"RTN","ORMSD",276,0)
 ;
"RTN","ORMSD",277,0)
PMPTMAP(ID) ;
"RTN","ORMSD",278,0)
 I ID="CLINIC" Q "LOCATION"_U_"CLINIC"
"RTN","ORMSD",279,0)
 I ID="CLINICALLY" Q "CLINICALLY INDICATED DATE"_U_"RTC DATE"
"RTN","ORMSD",280,0)
 I ID="SDNUM" Q "APPT NUM"_U_"NUMBER APPT"
"RTN","ORMSD",281,0)
 I ID="SDINT" Q "SCH INTERVAL"_U_"INTERVAL"
"RTN","ORMSD",282,0)
 I ID="SDCOMMENT" Q "SD COMMENT"_U_"COMMENT"
"RTN","ORMSD",283,0)
 I ID="YN" Q "YES/NO"_U_"NLT"
"RTN","ORMSD",284,0)
 Q ""
"RTN","ORMSD",285,0)
 ;
"RTN","ORMSD",286,0)
SENDFAIL(ERROR,RESULT) ;
"RTN","ORMSD",287,0)
 N ORV
"RTN","ORMSD",288,0)
 S ORV("XQY0")="" D EN^ORERR(ERROR,.ORMSG,.ORV)
"RTN","ORMSD",289,0)
 ;Q:ORTYPE="ORR"  Q:'$L($G(ORNMSP))
"RTN","ORMSD",290,0)
 N OREMSG
"RTN","ORMSD",291,0)
 ;N ORVP,ORTS S:'$G(ORDUZ) ORDUZ=PAT_";DPT(" D:'$G(ORVP) PID
"RTN","ORMSD",292,0)
 S OREMSG(1)=$$MSH^ORMBLD("SRM","SD")_"|"_$G(RESULT("MSG ID"))
"RTN","ORMSD",293,0)
 S OREMSG(2)="MSA|AR|"_ERROR_"|||207^"_ERROR
"RTN","ORMSD",294,0)
 S OREMSG(3)="ERR|^^^"
"RTN","ORMSD",295,0)
 D MSG^XQOR("OR EVSEND SD",.OREMSG)
"RTN","ORMSD",296,0)
 Q
"RTN","ORMSD",297,0)
 ;
"RTN","ORMSD",298,0)
SENDOK(RESULT) ;
"RTN","ORMSD",299,0)
 N ORMSG
"RTN","ORMSD",300,0)
 S ORMSG(1)=$$MSH^ORMBLD("SRM","SD")_"|"_RESULT("MSG ID")
"RTN","ORMSD",301,0)
 S ORMSG(2)="MSA|AA|OK|||"
"RTN","ORMSD",302,0)
 D MSG^XQOR("OR EVSEND SD",.ORMSG)
"RTN","ORMSD",303,0)
 Q
"RTN","ORMSD",304,0)
 ;
"RTN","ORMSD",305,0)
PKG(NMSP) ; -- Return Package file ptr for NMSP
"RTN","ORMSD",306,0)
 N I S I=0
"RTN","ORMSD",307,0)
 F  S I=+$O(^DIC(9.4,"C",NMSP,I)) Q:I<1  Q:'$O(^(I,0))  ;no Addl Prefs
"RTN","ORMSD",308,0)
 Q I
"RTN","ORMSD",309,0)
 ;
"RTN","ORMSD",310,0)
PTR(X) ; -- Return ptr to prompt OR GTX X
"RTN","ORMSD",311,0)
 Q +$O(^ORD(101.41,"AB","OR GTX "_X,0))
"RTN","ORMSD",312,0)
 ;
"RTN","ORMSD",313,0)
VALUE(ID) ; -- Return value of ID in ^OR(100,+ORIFN,4.5,"ID")
"RTN","ORMSD",314,0)
 N I,Y I '$L($G(ID)) Q ""
"RTN","ORMSD",315,0)
 S I=+$O(^OR(100,+ORIFN,4.5,"ID",ID,0))
"RTN","ORMSD",316,0)
 S Y=$G(^OR(100,+ORIFN,4.5,I,1))
"RTN","ORMSD",317,0)
 Q Y
"RTN","ORQ20")
0^15^B51272743
"RTN","ORQ20",1,0)
ORQ20 ; SLC/MKB - Detailed Order Report cont ;8/17/2017
"RTN","ORQ20",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**12,27,92,94,116,141,177,186,190,215,243,434**;Dec 17, 1997;Build 35
"RTN","ORQ20",3,0)
ACT ; -- add Activity [from ^ORQ2]
"RTN","ORQ20",4,0)
 N ORACT S ORACT=$P(ACTION,U,2)
"RTN","ORQ20",5,0)
 I ORACT'="NW",$P(ACTION,U,4)=5,$P(ACTION,U,15)=13 Q  ;skip canc actions
"RTN","ORQ20",6,0)
 N NVA,USER S:$P(^ORD(100.98,$P(^OR(100,+ORIFN,0),U,11),0),U)="NON-VA MEDICATIONS" NVA=1
"RTN","ORQ20",7,0)
 S CNT=CNT+1,@ORY@(CNT)=$$DATE($P(ACTION,U))_"  "_$$ACTION(ORACT)
"RTN","ORQ20",8,0)
 I $P(ACTION,U,13) S @ORY@(CNT)=@ORY@(CNT)_" entered by "_$$USER(+$P(ACTION,U,13))
"RTN","ORQ20",9,0)
 I ORACT="NW" D  ;Show original order text
"RTN","ORQ20",10,0)
 . N ORZ,I,ORIGVIEW S ORIGVIEW=2 D TEXT^ORQ12(.ORZ,ORIFN_";1",80)
"RTN","ORQ20",11,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Order Text:        "_$G(ORZ(1))
"RTN","ORQ20",12,0)
 . S I=1 F  S I=$O(ORZ(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORZ(I))
"RTN","ORQ20",13,0)
 I ORACT="XX" D  ;Changed - show new text
"RTN","ORQ20",14,0)
 . N ORZ,I,ORIGVIEW S ORIGVIEW=2 D TEXT^ORQ12(.ORZ,ORIFN_";"_ORI,80)
"RTN","ORQ20",15,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Changed to:        "_$G(ORZ(1))
"RTN","ORQ20",16,0)
 . S I=1 F  S I=$O(ORZ(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORZ(I))
"RTN","ORQ20",17,0)
A1 I $P(ACTION,U,12) D  ;Nature of Order/Release
"RTN","ORQ20",18,0)
 . N ORZ S ORZ=$G(^ORD(100.02,+$P(ACTION,U,12),0))
"RTN","ORQ20",19,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Nature of Order:   "_$P(ORZ,U)
"RTN","ORQ20",20,0)
 . I $P(OR0,U,17),(ORACT="NW") Q  ;see event
"RTN","ORQ20",21,0)
 . I "^V^P^"[(U_$P(ORZ,U,2)_U),$P(ACTION,U,16) S CNT=CNT+1,@ORY@(CNT)="     Released by:       "_$$USER(+$P(ACTION,U,17))_" on "_$$DATE($P(ACTION,U,16))
"RTN","ORQ20",22,0)
 I $P(OR0,U,17)&(ORACT="NW") D  ;Delayed Release Event
"RTN","ORQ20",23,0)
 . N EVT,X,ORV,I S EVT=+$P(OR0,U,17),X=$$NAME^OREVNTX(EVT)
"RTN","ORQ20",24,0)
 . S:$E(X,1,8)="Delayed " X=$E(X,9,99)
"RTN","ORQ20",25,0)
 . I $G(^ORE(100.2,EVT,1)),'$P(ACTION,U,16) S X=X_" on "_$$DATE(+^(1))
"RTN","ORQ20",26,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Delayed Until:     "_X Q:'$P(ACTION,U,16)
"RTN","ORQ20",27,0)
 . D EVENT(.ORV) S CNT=CNT+1,@ORY@(CNT)="     Released by:       "_ORV(1)
"RTN","ORQ20",28,0)
 . S I=1 F  S I=$O(ORV(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORV(I))
"RTN","ORQ20",29,0)
A2 I $P(ACTION,U,5) S CNT=CNT+1,@ORY@(CNT)=$S($P(ACTION,U,4)=7:"      Dig",1:"     Elec")_" Signature:    "_$$USER(+$P(ACTION,U,5))_" on "_$$DATE($P(ACTION,U,6))
"RTN","ORQ20",30,0)
 I '$P(ACTION,U,5)!($P(ACTION,U,3)'=$P(ACTION,U,5)),'$$SERVCORR S CNT=CNT+1,@ORY@(CNT)="     "_$S($D(NVA):"Documented by:",1:"Ordered by:   ")_"     "_$$USER(+$P(ACTION,U,3))
"RTN","ORQ20",31,0)
 I '$P(ACTION,U,5),$L($P(ACTION,U,4)) D
"RTN","ORQ20",32,0)
 .I $P(ACTION,U,4)=0 D
"RTN","ORQ20",33,0)
 ..S USER=$$USER(+$P(ACTION,U,7))
"RTN","ORQ20",34,0)
 ..S CNT=CNT+1
"RTN","ORQ20",35,0)
 ..I USER'="" S @ORY@(CNT)="     Released by:       "_USER_" on "_$$DATE($P(ACTION,U,16))
"RTN","ORQ20",36,0)
 ..I USER="" S @ORY@(CNT)="        Released:       "_$$DATE($P(ACTION,U,16))
"RTN","ORQ20",37,0)
 .S CNT=CNT+1,@ORY@(CNT)="     Signature:         "_$$SIG($P(ACTION,U,4)) ;186
"RTN","ORQ20",38,0)
 ;I '$P(ACTION,U,5),$L($P(ACTION,U,4)) S:$P(ACTION,U,4)=0 CNT=CNT+1,@ORY@(CNT)="     Released by:       "_$$USER(+$P(ACTION,U,7))_" on "_$$DATE($P(ACTION,U,16)) S CNT=CNT+1,@ORY@(CNT)="     Signature:         "_$$SIG($P(ACTION,U,4)) ;186
"RTN","ORQ20",39,0)
 I $P(ACTION,U,9) S CNT=CNT+1,@ORY@(CNT)="     Nurse Verified:    "_$S($P(ACTION,U,8):$$USER(+$P(ACTION,U,8))_" on ",1:"")_$$DATE($P(ACTION,U,9))
"RTN","ORQ20",40,0)
 I $P(ACTION,U,11) S CNT=CNT+1,@ORY@(CNT)="     Clerk Verified:    "_$S($P(ACTION,U,10):$$USER(+$P(ACTION,U,10))_" on ",1:"")_$$DATE($P(ACTION,U,11))
"RTN","ORQ20",41,0)
 I $P(ACTION,U,19) S CNT=CNT+1,@ORY@(CNT)="     Chart Reviewed:    "_$S($P(ACTION,U,18):$$USER(+$P(ACTION,U,18))_" on ",1:"")_$$DATE($P(ACTION,U,19))
"RTN","ORQ20",42,0)
A3 I $P(ACTION,U,2)="DC",$L(OR6) S X=$S($L($P(OR6,U,5)):$P(OR6,U,5),$P(OR6,U,4):$P($G(^ORD(100.03,+$P(OR6,U,4),0)),U),$P(OR6,U):$P($G(^ORD(100.02,+$P(OR6,U),0)),U),1:"") S:$L(X) CNT=CNT+1,@ORY@(CNT)="     Reason for DC:     "_X
"RTN","ORQ20",43,0)
 I $L($G(^OR(100,ORIFN,8,ORI,1))) S X=^(1) D  ;add backdoor comments
"RTN","ORQ20",44,0)
 . N LBL,I S LBL=""
"RTN","ORQ20",45,0)
 . I $P(ACTION,U,15)="",$P(ACTION,U,2)'="DC" S LBL="     Comments:          " ;DC shown above
"RTN","ORQ20",46,0)
 . I $P(ACTION,U,15)=13,$P(ACTION,U,2)'="NW" S LBL="     Cancelled:         " ;NW shown in ORQ2
"RTN","ORQ20",47,0)
 . Q:'$L(LBL)  I $L(X)'>56 S CNT=CNT+1,@ORY@(CNT)=LBL_X Q
"RTN","ORQ20",48,0)
 . S DIWL=1,DIWR=56,DIWF="C56" K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ20",49,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=LBL_^(I,0),LBL="                        "
"RTN","ORQ20",50,0)
 I $D(^OR(100,ORIFN,8,ORI,5)) D  ;Ward comments
"RTN","ORQ20",51,0)
 . N X,ORJ K ^UTILITY($J,"W")
"RTN","ORQ20",52,0)
 . S ORJ=0 F  S ORJ=$O(^OR(100,ORIFN,8,ORI,5,ORJ)) Q:ORJ'>0  S X=^(ORJ,0) D ^DIWP
"RTN","ORQ20",53,0)
 . S ORJ=0 F  S ORJ=$O(^UTILITY($J,"W",DIWL,ORJ)) Q:ORJ'>0  S CNT=CNT+1,@ORY@(CNT)=$S(ORJ=1:"     Ward/Clinic Cmmts: ",1:"                        ")_^(ORJ,0)
"RTN","ORQ20",54,0)
 . K ^UTILITY($J,"W")
"RTN","ORQ20",55,0)
A4 I $P(ACTION,U,2)="HD",$G(^OR(100,ORIFN,8,ORI,2)) S X2=^(2),CNT=CNT+1,@ORY@(CNT)="     Hold Released:     "_$$FMTE^XLFDT($P(X2,U),"2P")_" by "_$$USER($P(X2,U,2))
"RTN","ORQ20",56,0)
 I $D(^OR(100,ORIFN,8,ORI,3)) D  ;Un-/Flagged
"RTN","ORQ20",57,0)
 . N X S X=$G(^OR(100,ORIFN,8,ORI,3))
"RTN","ORQ20",58,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Flagged by:        "_$$USER(+$P(X,U,4))_" on "_$$DATE($P(X,U,3))
"RTN","ORQ20",59,0)
 . S CNT=CNT+1,@ORY@(CNT)="                        "_$P(X,U,5)
"RTN","ORQ20",60,0)
 . Q:X  S CNT=CNT+1,@ORY@(CNT)="     Unflagged by:      "_$$USER(+$P(X,U,7))_" on "_$$DATE($P(X,U,6))
"RTN","ORQ20",61,0)
 . S CNT=CNT+1,@ORY@(CNT)="                        "_$P(X,U,8)
"RTN","ORQ20",62,0)
A5 ;disposition/RTC Orders
"RTN","ORQ20",63,0)
 I $D(^OR(100,ORIFN,8,ORI,4)) D
"RTN","ORQ20",64,0)
 .N S S X=$G(^OR(100,ORIFN,8,ORI,4))
"RTN","ORQ20",65,0)
 .I +$P(X,U)>0 S CNT=CNT+1,@ORY@(CNT)="     Disposition by:    "_$$USER(+$P(X,U))_" on "_$$DATE($P(X,U,2))
"RTN","ORQ20",66,0)
 Q
"RTN","ORQ20",67,0)
 ;
"RTN","ORQ20",68,0)
DC ; -- Add Reason for DC
"RTN","ORQ20",69,0)
 S CNT=CNT+1,@ORY@(CNT)=$$DATE($P(OR6,U,3))_$S($P(OR6,U,8):"  Auto-",1:"  ")_"Discontinued"
"RTN","ORQ20",70,0)
 I $P(OR6,U,8) D  Q
"RTN","ORQ20",71,0)
 . N EVT,PKG,ORV,I
"RTN","ORQ20",72,0)
 . S EVT=$P(OR6,U,8),PKG=$P($G(^ORE(100.2,+EVT,3,ORIFN,0)),U,2)
"RTN","ORQ20",73,0)
 . S @ORY@(CNT)=@ORY@(CNT)_" by "_$S(PKG="FH":"DIETETICS",PKG="LR":"LABORATORY",PKG="PS":"PHARMACY",1:"CPRS")
"RTN","ORQ20",74,0)
 . D EVENT(.ORV,1) S CNT=CNT+1,@ORY@(CNT)="     Patient Movement:  "_ORV(1)
"RTN","ORQ20",75,0)
 . S I=1 F  S I=$O(ORV(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORV(I))
"RTN","ORQ20",76,0)
 I $P(OR6,U,2),$P($G(^ORD(100.02,+$P(OR6,U),0)),U,2)'="A" S @ORY@(CNT)=@ORY@(CNT)_" by "_$$USER($P(OR6,U,2)) ;don't show user name if auto-dc
"RTN","ORQ20",77,0)
 N X S X=$S($L($P(OR6,U,5)):$P(OR6,U,5),$P(OR6,U,4):$P($G(^ORD(100.03,+$P(OR6,U,4),0)),U),$P(OR6,U):$P($G(^ORD(100.02,+$P(OR6,U),0)),U),1:"") S:$L(X) CNT=CNT+1,@ORY@(CNT)="     Reason for DC:     "_X
"RTN","ORQ20",78,0)
 Q
"RTN","ORQ20",79,0)
 ;
"RTN","ORQ20",80,0)
ACTION(CODE) ; -- Return name of action CODE
"RTN","ORQ20",81,0)
 N NAME S NAME=$S(CODE="NW":"New Order",CODE="DC":"Discontinue",CODE="HD":"Hold",CODE="RL":"Release Hold",CODE="RN":"Renewal",CODE="XX":"Change",1:"")
"RTN","ORQ20",82,0)
 I CODE="NW",$P(OR3,U,11) S NAME=NAME_$S($P(OR3,U,11)=1:" (Change)",$P(OR3,U,11)=2:" (Renewal)",1:"")
"RTN","ORQ20",83,0)
 Q NAME
"RTN","ORQ20",84,0)
 ;
"RTN","ORQ20",85,0)
XACT(X) ; -- Return name of transaction code X
"RTN","ORQ20",86,0)
 N Y S X=$G(X)
"RTN","ORQ20",87,0)
 S Y=$S(X="XX":"Edited",X="DC":"Discontinued",X="HD":"Held",X="RL":"Hold Released",X="FW":"Forwarded",X="CA":"Cancelled",1:"")
"RTN","ORQ20",88,0)
 Q Y
"RTN","ORQ20",89,0)
 ;
"RTN","ORQ20",90,0)
DATE(X) ; -- Return date formatted as 00/00/0000 00:00
"RTN","ORQ20",91,0)
 N T,Y  S T=$P(X,".",2)_"0000"
"RTN","ORQ20",92,0)
 S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3))
"RTN","ORQ20",93,0)
 I T S Y=Y_" "_$E(T,1,2)_":"_$E(T,3,4)
"RTN","ORQ20",94,0)
 Q Y
"RTN","ORQ20",95,0)
 ;
"RTN","ORQ20",96,0)
USER(X) ; -- Returns NAME (TITLE) of New Person X
"RTN","ORQ20",97,0)
 N X0,Y S X0=$G(^VA(200,+X,0)),Y=$P(X0,U)
"RTN","ORQ20",98,0)
 S:$P(X0,U,9) Y=Y_" ("_$E($P($G(^DIC(3.1,+$P(X0,U,9),0)),U),1,15)_")"
"RTN","ORQ20",99,0)
 Q Y
"RTN","ORQ20",100,0)
 ;
"RTN","ORQ20",101,0)
SIG(X) ; -- Returns text of signature status X
"RTN","ORQ20",102,0)
 N Y S Y=""
"RTN","ORQ20",103,0)
 I X=0 S Y="ON CHART WITH WRITTEN ORDERS"
"RTN","ORQ20",104,0)
 I X=1 S Y="ELECTRONICALLY SIGNED"
"RTN","ORQ20",105,0)
 I X=2 S Y="NOT SIGNED"
"RTN","ORQ20",106,0)
 I X=3 S Y="NOT REQUIRED"
"RTN","ORQ20",107,0)
 I X=4 S Y="ON CHART WITH PRINTED ORDERS"
"RTN","ORQ20",108,0)
 I X=5 S Y="NOT REQUIRED DUE TO SERVICE CANCEL/LAPSE"
"RTN","ORQ20",109,0)
 I X=6 S Y="SERVICE CORRECTION TO SIGNED ORDER"
"RTN","ORQ20",110,0)
 Q Y
"RTN","ORQ20",111,0)
 ;
"RTN","ORQ20",112,0)
SERVCORR() ; -- Returns 1 or 0, if current ACTION is a serv corr change
"RTN","ORQ20",113,0)
 N Y,NATURE,I,X S Y=0
"RTN","ORQ20",114,0)
 G:ORACT'="XX" SCQ
"RTN","ORQ20",115,0)
 S NATURE=+$P(ACTION,U,12),NATURE=$P($G(^ORD(100.02,NATURE,0)),U,2)
"RTN","ORQ20",116,0)
 I "^S^I^"'[(U_NATURE_U) G SCQ
"RTN","ORQ20",117,0)
 S I=$O(^OR(100,ORIFN,8,ORI),-1),X=$G(^(I,0))
"RTN","ORQ20",118,0)
 I $P(X,U,3)'=$P(ACTION,U,3),$P(X,U,5)'=$P(ACTION,U,3) G SCQ ;show prov
"RTN","ORQ20",119,0)
 S Y=1
"RTN","ORQ20",120,0)
SCQ Q Y
"RTN","ORQ20",121,0)
 ;
"RTN","ORQ20",122,0)
EVENT(ORTX,DC) ; -- Returns patient event info for EVT
"RTN","ORQ20",123,0)
 N EVT1,REL,X,Y,I,ORMAX
"RTN","ORQ20",124,0)
 S ORTX(1)="" ;177
"RTN","ORQ20",125,0)
 S EVT1=$G(^ORE(100.2,EVT,1)),REL=$G(^ORE(100.2,EVT,2,ORIFN,0))
"RTN","ORQ20",126,0)
 ; Return event data if AutoDC or auto-released by an event:
"RTN","ORQ20",127,0)
 I $G(DC)!(REL&'$L($P(REL,U,2))&($P(EVT1,U,2)!$P(EVT1,U,4))) D  Q
"RTN","ORQ20",128,0)
 . S Y=$S($P(EVT1,U,5):$P(EVT1,U,5),1:EVT) ;parent owns Activity
"RTN","ORQ20",129,0)
 . S Y=+$O(^ORE(100.2,+Y,10,0)),Y=$G(^(Y,0)),X=$P(Y,U,4) Q:'$L(X)
"RTN","ORQ20",130,0)
 . S X=$S(X="A":"ADMISSION",X="T":"TRANSFER",X="D":"DISCHARGE",X="S":"SPECIALTY CHANGE",1:$S($P(EVT1,U)>$$DPI^ORUTL1("SR*3.0*157"):"IN TO O.R.",1:"OUT OF O.R."))_" on "_$$DATE($P(EVT1,U)) ;243
"RTN","ORQ20",131,0)
 . S ORTX(1)=X,ORTX=1,ORMAX=56
"RTN","ORQ20",132,0)
 . I $P(Y,U,6) S X=$S($P(Y,U,4)="D":"from ",1:"to ")_$$GET1^DIQ(45.7,+$P(Y,U,6)_",",.01) D TXT^ORCHTAB
"RTN","ORQ20",133,0)
 . I $P(Y,U,7) S X="on "_$$GET1^DIQ(42,+$P(Y,U,7)_",",.01) D TXT^ORCHTAB
"RTN","ORQ20",134,0)
 S X=$$USER(+$P(ACTION,U,17))_" on "_$$DATE($P(ACTION,U,16))
"RTN","ORQ20",135,0)
 I ORIFN'=+$P($G(^ORE(100.2,EVT,0)),U,4),$P(REL,U,2)="MN" S X=X_" (manually released)"
"RTN","ORQ20",136,0)
 S ORTX(1)=X
"RTN","ORQ20",137,0)
 Q
"RTN","ORUTL4")
0^1^B10504145
"RTN","ORUTL4",1,0)
ORUTL4 ;SLC/CB/TC - OE/RR Utilities ;06/27/17  15:02
"RTN","ORUTL4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**350,424,434**;Dec 17, 1997;Build 35
"RTN","ORUTL4",3,0)
 ;
"RTN","ORUTL4",4,0)
 ;
"RTN","ORUTL4",5,0)
 ;
"RTN","ORUTL4",6,0)
DLL(ORRSLTS,ORDLLNME,ORDLLVRS) ; Will check DLL version against the server to see if it's valid
"RTN","ORUTL4",7,0)
 ; Input parameters
"RTN","ORUTL4",8,0)
 ;  1. ORRSLTS    RPC Return array
"RTN","ORUTL4",9,0)
 ;  2. ORDLLNME   Name of Dll to look up
"RTN","ORUTL4",10,0)
 ;  3. ORDLLVRS   Version of the DLL on the user's machine
"RTN","ORUTL4",11,0)
 ;
"RTN","ORUTL4",12,0)
 S ORDLLNME=$$UP^XLFSTR(ORDLLNME)
"RTN","ORUTL4",13,0)
 I ORDLLNME="GMV_VITALSVIEWENTER.DLL" D VITAL(.ORRSLTS,ORDLLVRS)
"RTN","ORUTL4",14,0)
 I ORDLLNME=$$UP^XLFSTR($$GET^XPAR("SYS","YS MHA_A DLL NAME")) D MENTAL(.ORRSLTS,ORDLLVRS,ORDLLNME)
"RTN","ORUTL4",15,0)
 I ORDLLNME="CPRS MOB DLL" D CPRSMOB(.ORRSLTS,ORDLLVRS) S ^TMP($J,"OR MOB APP1")=""
"RTN","ORUTL4",16,0)
 I ORRSLTS="" S ORRSLTS="-1"
"RTN","ORUTL4",17,0)
 Q
"RTN","ORUTL4",18,0)
 ;
"RTN","ORUTL4",19,0)
VITAL(ORRSLTS,ORDLLVRS) ;
"RTN","ORUTL4",20,0)
 ; Input parameters
"RTN","ORUTL4",21,0)
 ;  1. ORRSLTS    The return message
"RTN","ORUTL4",22,0)
 ;  2. ORDLLVRS   Version of the DLL on the user's machine
"RTN","ORUTL4",23,0)
 ;
"RTN","ORUTL4",24,0)
 N ORVAL S ORRSLTS=""
"RTN","ORUTL4",25,0)
 S ORVAL=$$GET^XPAR("SYS","GMV DLL VERSION",ORDLLVRS,"E")
"RTN","ORUTL4",26,0)
 I ORVAL="YES" S ORRSLTS=1
"RTN","ORUTL4",27,0)
 E  S ORRSLTS="-1^This version of the Vitals Viewer "_ORDLLVRS_" is not compatible with the server software. Please contact IRM to update the GMV_VitalsViewEnter.dll file."
"RTN","ORUTL4",28,0)
 Q
"RTN","ORUTL4",29,0)
 ;
"RTN","ORUTL4",30,0)
MENTAL(ORRSLTS,ORDLLVRS,ORDLLNME) ;
"RTN","ORUTL4",31,0)
 ; Input parameters
"RTN","ORUTL4",32,0)
 ;  1. ORRSLTS    The return message
"RTN","ORUTL4",33,0)
 ;  2. ORDLLVRS   Version of the DLL on the user's machine
"RTN","ORUTL4",34,0)
 ;  3. ORDLLNME   Name of Dll to look up
"RTN","ORUTL4",35,0)
 ;
"RTN","ORUTL4",36,0)
 N ORYSLST,ORYSVAL,ORREQVER S ORRSLTS=""
"RTN","ORUTL4",37,0)
 D FIND^DIC(19,,1,"X","YS BROKER1",1,,,,"ORYSLST")
"RTN","ORUTL4",38,0)
 I 'ORYSLST("DILIST",0) S ORRSLTS="-1^The YS BROKER1 option is not installed on this server. Please contact IRM to get this installed." Q
"RTN","ORUTL4",39,0)
 S ORYSVAL=$G(ORYSLST("DILIST","ID",1,1))
"RTN","ORUTL4",40,0)
 S ORREQVER=$P($P(ORYSVAL,"version ",2),"~",2)
"RTN","ORUTL4",41,0)
 I ORDLLVRS=ORREQVER S ORRSLTS=1
"RTN","ORUTL4",42,0)
 E  S ORRSLTS="-1^This is version "_ORDLLVRS_" of "_ORDLLNME_". "_ORREQVER_" is now the proper version in service. Please contact your local IRM or CPRS expert to obtain the updated version."
"RTN","ORUTL4",43,0)
 Q
"RTN","ORUTL4",44,0)
 ;
"RTN","ORUTL4",45,0)
CPRSMOB(ORRSLTS,ORDLLVRS) ;get the expected version of the CPRS MOB DLL
"RTN","ORUTL4",46,0)
 ; Input parameters
"RTN","ORUTL4",47,0)
 ;  1. ORRSLTS    The return message
"RTN","ORUTL4",48,0)
 ;  2. ORDLLVRS   Version of the DLL on the user's machine
"RTN","ORUTL4",49,0)
 ;
"RTN","ORUTL4",50,0)
 N ORREQVER S ORRSLTS=""
"RTN","ORUTL4",51,0)
 S ORREQVER=$$GET^XPAR("SYS^PKG","OR MOB DLL VERSION")
"RTN","ORUTL4",52,0)
 I ORDLLVRS=ORREQVER S ORRSLTS="1^"_ORREQVER
"RTN","ORUTL4",53,0)
 E  S ORRSLTS="-1^"_ORREQVER_"^This version of the CPRS MOB "_ORDLLVRS_" is not compatible with the server software. Please contact IRM to update the OrderCom.dll file."
"RTN","ORUTL4",54,0)
 Q
"RTN","ORUTL4",55,0)
 ;
"RTN","ORWCIRN")
0^2^B11510332
"RTN","ORWCIRN",1,0)
ORWCIRN ;SLC/DCM,REV - FUNCTIONS FOR GUI CIRN ACTIONS ;03/17/2015  10:24
"RTN","ORWCIRN",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,101,109,132,141,160,208,239,215,243,350,434**;Dec 17, 1997;Build 35
"RTN","ORWCIRN",3,0)
 ;
"RTN","ORWCIRN",4,0)
FACLIST(ORY,ORDFN) ; Return list of remote facilities for patient
"RTN","ORWCIRN",5,0)
 ;Check to see if CIRN PD/MPI installed
"RTN","ORWCIRN",6,0)
 N X,ORSITES,I,IFN,LOCAL,CTR,HDRFLG,GOTNHIN,JLV
"RTN","ORWCIRN",7,0)
 S X="MPIF001" X ^%ZOSF("TEST")
"RTN","ORWCIRN",8,0)
 I '$T S ORY(0)="-1^CIRN MPI not installed." Q
"RTN","ORWCIRN",9,0)
 S X="VAFCTFU1" X ^%ZOSF("TEST")
"RTN","ORWCIRN",10,0)
 I '$T S ORY(0)="-1^Remote data view not installed." Q
"RTN","ORWCIRN",11,0)
 S X=$$GET^XPAR("ALL","ORWRP CIRN REMOTE DATA ALLOW",1,"I")
"RTN","ORWCIRN",12,0)
 I 'X S ORY(0)="-1^Remote access not allowed" Q
"RTN","ORWCIRN",13,0)
 D TFL^VAFCTFU1(.ORY,ORDFN)
"RTN","ORWCIRN",14,0)
 S (GOTNHIN,I)=0 F  S I=$O(ORY(I)) Q:'I  I $P(ORY(I),"^",5)="OTHER" D  ;Screen out Type 'OTHER' locations
"RTN","ORWCIRN",15,0)
 . I $P(ORY(I),"^")="200HD" Q  ;HDR
"RTN","ORWCIRN",16,0)
 . I $P(ORY(I),"^")="200NDD" Q  ;DoD Correlated Patients
"RTN","ORWCIRN",17,0)
 . S JLV="VistAWeb"
"RTN","ORWCIRN",18,0)
 . I $L($T(JLV^ORWCIRN)) D JLV(.X) S JLV=$S($L(X):X,1:"VistAWeb")
"RTN","ORWCIRN",19,0)
 . I $E($P(ORY(I),"^"),1,4)="200N",'GOTNHIN S GOTNHIN=1,$P(ORY(I),"^",2)="Non-VA Data may be Available - Use "_JLV_" to Access" Q  ;NwHIN Master Item
"RTN","ORWCIRN",20,0)
 . K ORY(I)
"RTN","ORWCIRN",21,0)
 S HDRFLG=0
"RTN","ORWCIRN",22,0)
 I $$GET^XPAR("ALL","ORWRP CIRN SITES ALL",1,"I") D
"RTN","ORWCIRN",23,0)
 . S (CTR,I)=0
"RTN","ORWCIRN",24,0)
 . F  S I=$O(ORY(I)) Q:'I  S $P(ORY(I),"^",5)=1,CTR=CTR+1 D
"RTN","ORWCIRN",25,0)
 .. I $P(ORY(I),"^")=200 S $P(ORY(I),"^",2)="DEPT. OF DEFENSE"
"RTN","ORWCIRN",26,0)
 .. I $P(ORY(I),"^")="200HD" D
"RTN","ORWCIRN",27,0)
 ... I +$$GET^XPAR("ALL","ORWRP HDR ON",1,"I")=0 K ORY(I) S CTR=CTR-1 Q
"RTN","ORWCIRN",28,0)
 ... S HDRFLG=I ; Remove commented out code to enable HDR + 1 other site. 
"RTN","ORWCIRN",29,0)
 D GETLST^XPAR(.ORSITES,"ALL","ORWRP CIRN SITES","I")
"RTN","ORWCIRN",30,0)
 S (CTR,I)=0,LOCAL=$P($$SITE^VASITE,"^",3)
"RTN","ORWCIRN",31,0)
 F  S I=$O(ORY(I)) Q:'I  D
"RTN","ORWCIRN",32,0)
 . I +ORY(I)=+LOCAL K ORY(I) Q
"RTN","ORWCIRN",33,0)
 . S IFN=$$IEN^XUAF4(ORY(I)),CTR=CTR+1
"RTN","ORWCIRN",34,0)
 . I IFN,$G(ORSITES(IFN)) S $P(ORY(I),"^",5)=1 D
"RTN","ORWCIRN",35,0)
 .. I $P(ORY(I),"^")=200 S $P(ORY(I),"^",2)="DEPT. OF DEFENSE"
"RTN","ORWCIRN",36,0)
 . I IFN,$G(ORSITES(IFN)),$P(ORY(I),"^")="200HD" D
"RTN","ORWCIRN",37,0)
 .. I +$$GET^XPAR("ALL","ORWRP HDR ON",1,"I")=0 K ORY(I) S CTR=CTR-1 Q
"RTN","ORWCIRN",38,0)
 .. S HDRFLG=I ; Remove commented out code to enable HDR + 1 other site. 
"RTN","ORWCIRN",39,0)
 I '$L($O(ORY(""))) S ORY(0)="-1^Only local data exists for this patient"
"RTN","ORWCIRN",40,0)
 I $G(HDRFLG),CTR'>1 K ORY(HDRFLG) S ORY(0)="-1^Only HDR has data for this patient"
"RTN","ORWCIRN",41,0)
 Q
"RTN","ORWCIRN",42,0)
RESTRICT(ORY,PATID) ;Check for sensitive patient
"RTN","ORWCIRN",43,0)
 N DFN,ICN,SITE
"RTN","ORWCIRN",44,0)
 I '$G(PATID) S ORY(1)="-1",ORY(2)="Invalid Patient ID" Q
"RTN","ORWCIRN",45,0)
 S ICN=$P(PATID,";",2)
"RTN","ORWCIRN",46,0)
 I 'ICN S ORY(1)="-1",ORY(2)="Invalid ICN" Q
"RTN","ORWCIRN",47,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)
"RTN","ORWCIRN",48,0)
 S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","ORWCIRN",49,0)
 I DFN<0 S ORY(1)="-1",ORY(2)="Patient not found on remote system ("_SITE_")" Q
"RTN","ORWCIRN",50,0)
 D PTSEC^DGSEC4(.ORY,DFN)
"RTN","ORWCIRN",51,0)
 Q
"RTN","ORWCIRN",52,0)
CHKLNK(ORY) ;Check for active HL7 TCP link on local system
"RTN","ORWCIRN",53,0)
 S ORY=$$STAT^HLCSLM
"RTN","ORWCIRN",54,0)
 Q
"RTN","ORWCIRN",55,0)
WEBADDR(ORY,PATID) ;Get VistaWeb Address
"RTN","ORWCIRN",56,0)
 S ORY=$$GET^XPAR("ALL","ORWRP VISTAWEB ADDRESS",1,"I")
"RTN","ORWCIRN",57,0)
 I ORY="" S ORY="https://vistaweb.domain.ext" Q
"RTN","ORWCIRN",58,0)
 I ORY="https://vistaweb.domain.ext" Q
"RTN","ORWCIRN",59,0)
 S ORY=ORY_"?q9gtw0="_$P($$SITE^VASITE,"^",3)_"&xqi4z="_PATID_"&yiicf="_DUZ
"RTN","ORWCIRN",60,0)
 Q
"RTN","ORWCIRN",61,0)
AUTORDV(ORY) ;Get parameter value for ORWRP CIRN AUTOMATIC
"RTN","ORWCIRN",62,0)
 S ORY=+$$GET^XPAR("ALL","ORWRP CIRN AUTOMATIC",1,"I")
"RTN","ORWCIRN",63,0)
 Q
"RTN","ORWCIRN",64,0)
HDRON(ORY) ;Get parameter value for ORWRP HDR ON
"RTN","ORWCIRN",65,0)
 S ORY=+$$GET^XPAR("ALL","ORWRP HDR ON",1,"I")
"RTN","ORWCIRN",66,0)
 Q
"RTN","ORWCIRN",67,0)
JLV(ORY) ;Get parameter value for ORWRP LEGACY VIEWER LABEL
"RTN","ORWCIRN",68,0)
 S ORY=$$GET^XPAR("ALL","ORWRP LEGACY VIEWER LABEL",1,"I")
"RTN","ORWCIRN",69,0)
 Q
"RTN","ORWDSD1")
0^3^B8338183
"RTN","ORWDSD1",1,0)
ORWDSD1 ;SLC/AGP - Return to Clinic Calls for Windows Dialog ;05/22/17  07:45
"RTN","ORWDSD1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**434**;Dec 17, 1997;Build 35
"RTN","ORWDSD1",3,0)
 ;
"RTN","ORWDSD1",4,0)
ODSLCT(LST,DFN,LOC) ; return default lists for dialog
"RTN","ORWDSD1",5,0)
 N ILST S ILST=0
"RTN","ORWDSD1",6,0)
 S ILST=ILST+1,LST(ILST)="~ShortList"  D SHORT
"RTN","ORWDSD1",7,0)
 ;S ILST=ILST+1,LST(ILST)="~Clinic" D CLINIC(.LST,.ILST,DFN,LOC)
"RTN","ORWDSD1",8,0)
 ;S ILST=ILST+1,LST(ILST)="~Provider" D PROVIDER(.LST,.ILST,DFN,LOC)
"RTN","ORWDSD1",9,0)
 ;S ILST=ILST+1,LST(ILST)="~Interval" D INTERVAL(.LST,.ILST,DFN,LOC)
"RTN","ORWDSD1",10,0)
 S ILST=ILST+1,LST(ILST)="~PreReq" D PREREQ(.LST,.ILST,DFN,LOC)
"RTN","ORWDSD1",11,0)
 ;S ILST=ILST+1,LST(ILST)="~Offset" D OFFSET(.LST,.ILST,DFN,LOC)
"RTN","ORWDSD1",12,0)
 S ILST=ILST+1,LST(ILST)="~Info" D INFO(.LST,.ILST,DFN,LOC)
"RTN","ORWDSD1",13,0)
 Q
"RTN","ORWDSD1",14,0)
 ;
"RTN","ORWDSD1",15,0)
CLINIC(LST,ILST,DFN,LOC) ;
"RTN","ORWDSD1",16,0)
 N CLST,CNT,FOUND,LCNT,IEN,NAME,NODE,TMP
"RTN","ORWDSD1",17,0)
 ;
"RTN","ORWDSD1",18,0)
 S NAME="",FOUND=0
"RTN","ORWDSD1",19,0)
 I LOC>0 D
"RTN","ORWDSD1",20,0)
 .S NODE=$G(^SC(LOC,0)) I $P(NODE,U,3)'="C" Q
"RTN","ORWDSD1",21,0)
 .S NAME=$P(NODE,U) I $L(NAME)<3 S TMP=NAME Q
"RTN","ORWDSD1",22,0)
 .S TMP=$E(NAME,1,($L(NAME)-1))
"RTN","ORWDSD1",23,0)
 I $G(TMP)="" Q
"RTN","ORWDSD1",24,0)
 D NEWLOC^ORWU1(.CLST,TMP,1)
"RTN","ORWDSD1",25,0)
 S CNT=0,LCNT=0 F  S CNT=$O(CLST(CNT)) Q:CNT'>0  D
"RTN","ORWDSD1",26,0)
 .S LCNT=CNT
"RTN","ORWDSD1",27,0)
 .I $P(CLST(CNT),U)=LOC,NAME'="" S ILST=ILST+1,LST(ILST)="d"_CLST(CNT),FOUND=1,ILST=ILST+1,LST(ILST)="i"_CLST(CNT) Q
"RTN","ORWDSD1",28,0)
 .S ILST=ILST+1,LST(ILST)="i"_CLST(CNT)
"RTN","ORWDSD1",29,0)
 I FOUND=0,NAME'="" S ILST=ILST+1,LST(ILST)="d"_LOC_U_NAME,ILST=ILST+1,LST(ILST)="i"_LOC_U_NAME
"RTN","ORWDSD1",30,0)
 Q
"RTN","ORWDSD1",31,0)
 ;
"RTN","ORWDSD1",32,0)
INFO(LST,ILST,DFN,LOC) ;
"RTN","ORWDSD1",33,0)
 N CNT,ERR,X
"RTN","ORWDSD1",34,0)
 D GETWP^XPAR(.X,"ALL","OR SD ADDITIONAL INFORMATION",.ERR)
"RTN","ORWDSD1",35,0)
 S CNT=0 F  S CNT=$O(X(CNT)) Q:CNT'>0  D
"RTN","ORWDSD1",36,0)
 .S ILST=ILST+1,LST(ILST)="t"_X(CNT,0)
"RTN","ORWDSD1",37,0)
 Q
"RTN","ORWDSD1",38,0)
 ;
"RTN","ORWDSD1",39,0)
INTERVAL(LST,ILST,DFN,LOC) ;
"RTN","ORWDSD1",40,0)
 S ILST=ILST+1,LST(ILST)="id^Daily"
"RTN","ORWDSD1",41,0)
 S ILST=ILST+1,LST(ILST)="iw^Weekly"
"RTN","ORWDSD1",42,0)
 Q
"RTN","ORWDSD1",43,0)
 ;
"RTN","ORWDSD1",44,0)
OFFSET(LST,ILST,DFN,LOC) ;
"RTN","ORWDSD1",45,0)
 N OFFSET
"RTN","ORWDSD1",46,0)
 S OFFSET=$$GET^XPAR("SYS","OR SD CIDC STOP OFFSET",1,"E")
"RTN","ORWDSD1",47,0)
 I OFFSET'>0 S OFFSET=30
"RTN","ORWDSD1",48,0)
 S ILST=ILST+1,LST(ILST)="i"_OFFSET_U_OFFSET
"RTN","ORWDSD1",49,0)
 Q
"RTN","ORWDSD1",50,0)
PREREQ(LST,ILST,DFN,LOC) ;
"RTN","ORWDSD1",51,0)
 N PREREQS,X
"RTN","ORWDSD1",52,0)
 D PREREQP^ORCDSD(.PREREQS)
"RTN","ORWDSD1",53,0)
 ;F X=1:1:PREREQS I $G(PREREQS(X))'=""
"RTN","ORWDSD1",54,0)
 S X=0 F  S X=$O(PREREQS(X)) Q:X'>0  I $G(PREREQS(X))'="" S ILST=ILST+1,LST(ILST)="i"_$G(PREREQS(X))
"RTN","ORWDSD1",55,0)
 ;S X=0 F  S X=$O(PREREQS(X)) Q:X'>0  I $G(PREREQS(X))'="" S ILST=ILST+1,LST(ILST)=$P($G(PREREQS(X)),U,2)
"RTN","ORWDSD1",56,0)
 Q
"RTN","ORWDSD1",57,0)
 ;
"RTN","ORWDSD1",58,0)
PROVIDER(LST,ILST,DFN,LOC) ;
"RTN","ORWDSD1",59,0)
 N CNT,PLST
"RTN","ORWDSD1",60,0)
 D NEWPERS^ORWU(.PLST,"",1,"PROVIDER",DT,0,"")
"RTN","ORWDSD1",61,0)
 S CNT=0 F  S CNT=$O(PLST(CNT)) Q:CNT'>0  S ILST=ILST+1,LST(ILST)="i"_PLST(CNT)
"RTN","ORWDSD1",62,0)
 Q
"RTN","ORWDSD1",63,0)
 ;
"RTN","ORWDSD1",64,0)
SHORT ; from DLGSLCT, get short list of med quick orders
"RTN","ORWDSD1",65,0)
 N I,X,TMP
"RTN","ORWDSD1",66,0)
 S X="CSDAM"
"RTN","ORWDSD1",67,0)
 D GETQLST^ORWDXQ(.TMP,X,"iQ")
"RTN","ORWDSD1",68,0)
 S I=0 F  S I=$O(TMP(I)) Q:'I  S ILST=ILST+1,LST(ILST)=TMP(I)
"RTN","ORWDSD1",69,0)
 Q
"RTN","ORWDSD1",70,0)
 ;
"RTN","ORWDSD1",71,0)
RTC ;
"RTN","ORWDSD1",72,0)
 N INT,NUM,PROMPT
"RTN","ORWDSD1",73,0)
 ;S PROMPT=$O(^ORD(101.41,"AB","OR GTX STOP DATE",0))
"RTN","ORWDSD1",74,0)
 ;S ORDIALOG(PROMPT,1)=$$SETSTOP^ORCDSD()
"RTN","ORWDSD1",75,0)
 ;get number of appointments and interval
"RTN","ORWDSD1",76,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX APPT NUM",0))
"RTN","ORWDSD1",77,0)
 S NUM=$G(ORDIALOG(PROMPT,1))
"RTN","ORWDSD1",78,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX SCH INTERVAL",0))
"RTN","ORWDSD1",79,0)
 S INT=$G(ORDIALOG(PROMPT,1))
"RTN","ORWDSD1",80,0)
 ;check that apppointment and interval match
"RTN","ORWDSD1",81,0)
 I NUM>1,INT="" S AUTOACK=0 Q
"RTN","ORWDSD1",82,0)
 I INT'="",NUM=1 S AUTOACK=0 Q
"RTN","ORWDSD1",83,0)
 Q
"RTN","ORWDSD1",84,0)
 ;
"RTN","ORWDXA")
0^16^B119097370
"RTN","ORWDXA",1,0)
ORWDXA ; SLC/KCM/JLI - Utilites for Order Actions ;07/13/17  06:53
"RTN","ORWDXA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,141,149,187,213,195,215,243,280,306,390,421,436,434**;Dec 17, 1997;Build 35
"RTN","ORWDXA",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","ORWDXA",4,0)
 ;
"RTN","ORWDXA",5,0)
 ;
"RTN","ORWDXA",6,0)
VALID(VAL,ORID,ACTION,ORNP,ORWNAT) ; Is action valid for order?
"RTN","ORWDXA",7,0)
 N DG,ORACT,ORVP,ORVER,ORIFN,PRTID S VAL="",PRTID=0
"RTN","ORWDXA",8,0)
 I +ORID=0 S VAL="This order has been deleted." Q
"RTN","ORWDXA",9,0)
 I '$D(^OR(100,+ORID,0)) S VAL="This order has been deleted!" Q
"RTN","ORWDXA",10,0)
 I ACTION="XFR",'$L($T(XFR^ORCACT01)) S ACTION="RW" ; for pre-POE
"RTN","ORWDXA",11,0)
 N ORNSS S ORNSS=1
"RTN","ORWDXA",12,0)
 I (ACTION="RN") D VALSCH^ORWNSS(.ORNSS,ORID)
"RTN","ORWDXA",13,0)
 I ORNSS=0 S VAL="This order contains an invalid administration schedule." Q
"RTN","ORWDXA",14,0)
 I (ACTION="RN") D ISVALIV^ORWDPS33(.VAL,ORID,ACTION) I $L(VAL)>0 Q
"RTN","ORWDXA",15,0)
 S ORIFN=ORID,ORVP=$P(^OR(100,+ORID,0),U,2)  ; ORCACT0 expects
"RTN","ORWDXA",16,0)
 I (ACTION="RN") D  Q:$L(VAL)
"RTN","ORWDXA",17,0)
 . N DLG S DLG=$P(^OR(100,+ORID,0),U,5) Q:DLG'[";ORD(101.41,"
"RTN","ORWDXA",18,0)
 . I $G(^ORD(101.41,+DLG,3))'["PROVIDER^ORCDPSIV" Q
"RTN","ORWDXA",19,0)
 . D AUTH^ORWDPS32(.VAL,ORNP,+DLG)
"RTN","ORWDXA",20,0)
 . I VAL S VAL=$P(VAL,U,2)
"RTN","ORWDXA",21,0)
 . E  S VAL=""
"RTN","ORWDXA",22,0)
 S ORVER=$S(ACTION="CR":"R",$D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:"^")
"RTN","ORWDXA",23,0)
 I ACTION="CR" S ACTION="VR"
"RTN","ORWDXA",24,0)
 I (ACTION="ES")!(ACTION="OC")!(ACTION="RS") S ORACT=ACTION ; why not defined???
"RTN","ORWDXA",25,0)
 I (ACTION="VR"),'($D(^XUSEC("ORELSE",DUZ))!$D(^XUSEC("OREMAS",DUZ))) D  Q
"RTN","ORWDXA",26,0)
 . S VAL="You are not authorized to verify these orders."
"RTN","ORWDXA",27,0)
 I $L(VAL) Q
"RTN","ORWDXA",28,0)
 N OIIEN,ISIV,IVOD
"RTN","ORWDXA",29,0)
 S (ISIV,OIIEN,IVOD)=0
"RTN","ORWDXA",30,0)
 I (ACTION="RW")!(ACTION="XX")!(ACTION="XFR") D  Q:$L(VAL)
"RTN","ORWDXA",31,0)
 . S ISIV=$P(^OR(100,+ORID,0),U,11)
"RTN","ORWDXA",32,0)
 . I ISIV,($P(^ORD(100.98,ISIV,0),U,3)="IV RX") S IVOD=1
"RTN","ORWDXA",33,0)
 . D:'IVOD GTORITM^ORWDXR(.OIIEN,+ORID)
"RTN","ORWDXA",34,0)
 . D:OIIEN ISACTOI(.VAL,OIIEN) I $L(VAL)>0 Q
"RTN","ORWDXA",35,0)
 . N DLG,FRM,A,ORDG,I,TYPE,B
"RTN","ORWDXA",36,0)
 . S A=^OR(100,+ORID,0),DLG=$P(A,U,5),ORDG=$P(A,"^",11),FRM=0
"RTN","ORWDXA",37,0)
 . I $P(DLG,";",2)'="ORD(101.41," S DLG=0
"RTN","ORWDXA",38,0)
 . I DLG D FORMID^ORWDXM(.FRM,+DLG)
"RTN","ORWDXA",39,0)
 . I '(DLG&FRM) D
"RTN","ORWDXA",40,0)
 . . S VAL="Copy & Change are not implemented for this order that predates CPRS."
"RTN","ORWDXA",41,0)
 . I ACTION="XX" D  ;PATLOC is being passed in and not defined in this routine
"RTN","ORWDXA",42,0)
 .. F I="UNIT DOSE MEDICATIONS","INPATIENT MEDICATIONS","IV MEDICATIONS" S A=$O(^ORD(100.98,"B",I,"")) I A S A(A)=""
"RTN","ORWDXA",43,0)
 .. S TYPE="" I $G(PATLOC) S TYPE=$P(^SC(PATLOC,0),"^",3)
"RTN","ORWDXA",44,0)
 .. I $D(A(ORDG)),TYPE="C" S B=1 D SDAUTHCL^SDAMA203(PATLOC,.B) I B=1 S VAL="Cannot use a Clinic Location for this change. Please check your encounter location."
"RTN","ORWDXA",45,0)
 S DG=$P(^OR(100,+ORID,0),U,11)
"RTN","ORWDXA",46,0)
 I DG,($P(^ORD(100.98,DG,0),U,3)="CSDAM"),$P($G(^OR(100,+ORID,3)),U,3)=9 S VAL="Partial Return to Clinic Orders cannot be discontinued." Q
"RTN","ORWDXA",47,0)
 N OREBUILD
"RTN","ORWDXA",48,0)
 ;I (ACTION="RW")!(ACTION="XFR")!(ACTION="RN") D ISVALIV^ORWDPS33(.VAL,ORID,ACTION) I $L(VAL)>0 Q
"RTN","ORWDXA",49,0)
 I $$VALID^ORCACT0(ORID,ACTION,.VAL,$G(ORWNAT)) S VAL="" ; VAL=error
"RTN","ORWDXA",50,0)
 I ACTION="RN",$$UPCTCHK(ORID) S VAL="Cannot renew this order due to an illegal character ""^"" in the comments or patient instructions."
"RTN","ORWDXA",51,0)
 I ACTION="RW",$$UPCTCHK(ORID) S VAL="Cannot copy this order due to an illegal character ""^"" in the comments or patient instructions."
"RTN","ORWDXA",52,0)
 Q
"RTN","ORWDXA",53,0)
 ;
"RTN","ORWDXA",54,0)
HOLD(REC,ORID,ORNP) ; Place order on hold
"RTN","ORWDXA",55,0)
 N ACTDA
"RTN","ORWDXA",56,0)
 S ACTDA=$$ACTION^ORCSAVE("HD",+ORID,ORNP)
"RTN","ORWDXA",57,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",58,0)
 Q
"RTN","ORWDXA",59,0)
UNHOLD(REC,ORID,ORNP) ; Release order from hold
"RTN","ORWDXA",60,0)
 N ACTDA
"RTN","ORWDXA",61,0)
 S ACTDA=$$ACTION^ORCSAVE("RL",+ORID,ORNP)
"RTN","ORWDXA",62,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",63,0)
 Q
"RTN","ORWDXA",64,0)
DC(REC,ORID,ORNP,ORL,REASON,DCORIG,ISNEWORD) ; Discontinue/Cancel/Delete order
"RTN","ORWDXA",65,0)
 N NATURE,CREATE,PRINT,STATUS,ACTDA,SIGSTS
"RTN","ORWDXA",66,0)
 N X3,X8,CURRACT
"RTN","ORWDXA",67,0)
 Q:'+ORID
"RTN","ORWDXA",68,0)
 I $G(DCORIG)="" S DCORIG=0
"RTN","ORWDXA",69,0)
 S CURRACT=0
"RTN","ORWDXA",70,0)
 S ORL(2)=ORL_";SC(",ORL=ORL(2),NATURE=""
"RTN","ORWDXA",71,0)
 I REASON S NATURE=$P(^ORD(100.02,$P(^ORD(100.03,REASON,0),U,7),0),U,2)
"RTN","ORWDXA",72,0)
 S:NATURE="" NATURE="W"  ; S:ORNP=DUZ NATURE="E"
"RTN","ORWDXA",73,0)
 ;change the way create work to support forcing signature for all DC
"RTN","ORWDXA",74,0)
 ;reasons
"RTN","ORWDXA",75,0)
 S CREATE=1,PRINT=$$PRINT^ORCACT2(NATURE)
"RTN","ORWDXA",76,0)
 ;S CREATE=$$CREATE^ORX1(NATURE)
"RTN","ORWDXA",77,0)
 S X3=$G(^OR(100,+ORID,3))
"RTN","ORWDXA",78,0)
 S CURRACT=$P(X3,U,7) S:CURRACT<1 CURRACT=+$O(^OR(100,+ORID,8,"?"),-1)
"RTN","ORWDXA",79,0)
 I '$D(^OR(100,+ORID,8,+$P(ORID,";",2),0)) D
"RTN","ORWDXA",80,0)
 . S X8=$G(^OR(100,+ORID,8,CURRACT,0))
"RTN","ORWDXA",81,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",82,0)
 . S $P(ORID,";",2)=CURRACT
"RTN","ORWDXA",83,0)
 E  D
"RTN","ORWDXA",84,0)
 . S X8=^OR(100,+ORID,8,+$P(ORID,";",2),0)
"RTN","ORWDXA",85,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",86,0)
 I '$D(SIGSTS) S SIGSTS=1
"RTN","ORWDXA",87,0)
 S STATUS=$P($G(^OR(100,+ORID,8,+$P(ORID,";",2),0)),U,15)
"RTN","ORWDXA",88,0)
 I (STATUS=10)!(STATUS=11) D  Q   ; delete/cancel unreleased order
"RTN","ORWDXA",89,0)
 . N RPLORD
"RTN","ORWDXA",90,0)
 . S RPLORD=$P($G(^OR(100,+ORID,3)),U,5)    ; replaced order
"RTN","ORWDXA",91,0)
 . D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",92,0)
 . I STATUS=10,($P(X8,U,4)'=2) D  ; CANCEL signed, delayed, unreleased
"RTN","ORWDXA",93,0)
 . . ; taken from CLRDLY^ORCACT2
"RTN","ORWDXA",94,0)
 . . I REASON D SET^ORCACT2(+ORID,NATURE,REASON,,DCORIG)
"RTN","ORWDXA",95,0)
 . . I 'REASON D SET^ORCACT2(+ORID,"M","","Delayed Order Cancelled",DCORIG)
"RTN","ORWDXA",96,0)
 . . D STATUS^ORCSAVE2(+ORID,13) S $P(^OR(100,+ORID,8,1,0),U,15)=13
"RTN","ORWDXA",97,0)
 . . ;D COMP^ORMBLDOR(+$G(ORID)) ;  modified to trigger an unsolicited sync action when a signed order is discontinued
"RTN","ORWDXA",98,0)
 . E  D                           ; CANCEL OR DELETE unsigned, unreleased
"RTN","ORWDXA",99,0)
 . . I $P(X8,U,2)="DC" K ^OR(100,+ORID,6)
"RTN","ORWDXA",100,0)
 . . ; delete fwd ptr to order about to be deleted
"RTN","ORWDXA",101,0)
 . . I RPLORD,$P(X8,U,2)="NW" S $P(^OR(100,RPLORD,3),U,6)=""
"RTN","ORWDXA",102,0)
 . . ; delete ptr to order in Patient Event file #100.2
"RTN","ORWDXA",103,0)
 . . N EVT S EVT=$P($G(^OR(100,+ORID,0)),U,17) I EVT,EVT=+$O(^ORE(100.2,"AO",+ORID,0)) S $P(^ORE(100.2,EVT,0),U,4)="" K ^ORE(100.2,"AO",+ORID,EVT)
"RTN","ORWDXA",104,0)
 . . I $G(ISNEWORD) D POST^HMPEVNT(+$P(^OR(100,+ORID,0),U,2),"order",+ORID,"@") D
"RTN","ORWDXA",105,0)
 . . . ; Delete the discontinued order in HMP(800000, if the order is discontinued before it is signed it is deleted in OR(100,
"RTN","ORWDXA",106,0)
 . . . ; we need to delete in HMP(800000 as since the order number can be reused by OR(100
"RTN","ORWDXA",107,0)
 . . . N HDFN S HDFN=+$P(^OR(100,+ORID,0),U,2) I $D(^HMP(800000,$$SRVRNO^HMPOR(HDFN),1,HDFN,1,+ORID,0)) D DELORDR^HMPOR(+HDFN,+ORID)
"RTN","ORWDXA",108,0)
 . . I $G(ISNEWORD) D DELETE^ORCSAVE2(ORID)
"RTN","ORWDXA",109,0)
 . . I '$G(ISNEWORD) D
"RTN","ORWDXA",110,0)
 . . . ; Update action date/time in hmp orders subfile
"RTN","ORWDXA",111,0)
 . . . N RSLT,VALS,HDFN
"RTN","ORWDXA",112,0)
 . . . S HDFN=+$P(^OR(100,+ORID,0),U,2)
"RTN","ORWDXA",113,0)
 . . . S VALS(.15)=$$NOW^XLFDT
"RTN","ORWDXA",114,0)
 . . . D UPDTORDR^HMPOR(.RSLT,.VALS,+ORID,HDFN)
"RTN","ORWDXA",115,0)
 . . . ; handle errors from UPDTORDR, Can't just quit here
"RTN","ORWDXA",116,0)
 . . . ; Trigger unsolicited update
"RTN","ORWDXA",117,0)
 . . . D POST^HMPEVNT(+$P(^OR(100,+ORID,0),U,2),"order",+ORID)
"RTN","ORWDXA",118,0)
 . . . ; Now cancel the order
"RTN","ORWDXA",119,0)
 . . . D CANCEL^ORCSAVE2(ORID)
"RTN","ORWDXA",120,0)
 . I RPLORD,'(SIGSTS=1) S ORID=RPLORD  ; for Renews & Changes, show replaced order
"RTN","ORWDXA",121,0)
 . I '$D(^OR(100,+ORID)) D
"RTN","ORWDXA",122,0)
 . . S $P(REC(1),U)="~0",REC(2)="tDELETED: "_$E(REC(2),2,245)
"RTN","ORWDXA",123,0)
 . E  D
"RTN","ORWDXA",124,0)
 . . K REC
"RTN","ORWDXA",125,0)
 . . D GETBYIFN^ORWORR(.REC,+ORID_";"_$P($G(^OR(100,+ORID,3)),U,7))
"RTN","ORWDXA",126,0)
 . S $P(REC(1),U,14)=2 ; DCType = deletion
"RTN","ORWDXA",127,0)
 S ACTDA=$$ACTION^ORCSAVE("DC",+ORID,ORNP)
"RTN","ORWDXA",128,0)
 D SET^ORCACT2(+ORID,NATURE,REASON,,DCORIG)
"RTN","ORWDXA",129,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",130,0)
 S $P(REC(1),U,14)=$S(CREATE:1,1:3)  ;DCType - 1=NewOrder, 3=NewStatus
"RTN","ORWDXA",131,0)
 N PKG
"RTN","ORWDXA",132,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",133,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",134,0)
 I REASON=16&(PKG="PS") D
"RTN","ORWDXA",135,0)
 . N XMB
"RTN","ORWDXA",136,0)
 . S XMB="OR DRUG ORDER CANCELLED"
"RTN","ORWDXA",137,0)
 . S XMB(1)=$P($G(REC(2)),"tDiscontinue",2),XMB(4)=$P($G(^VA(200,DUZ,0)),U)
"RTN","ORWDXA",138,0)
 . S XMB(2)=+ORID
"RTN","ORWDXA",139,0)
 . S XMB(3)=+$P($G(^OR(100,+ORID,0)),U,2)
"RTN","ORWDXA",140,0)
 . S XMB(3)=$P($G(^DPT(XMB(3),0)),U)
"RTN","ORWDXA",141,0)
 . D ^XMB
"RTN","ORWDXA",142,0)
 Q
"RTN","ORWDXA",143,0)
DCREQIEN(VAL) ; Return IEN for Req Phys Cancelled reason
"RTN","ORWDXA",144,0)
 S VAL=$O(^ORD(100.03,"S","REQ",0))
"RTN","ORWDXA",145,0)
 Q
"RTN","ORWDXA",146,0)
COMPLETE(REC,ORID,ESCODE) ; Complete order (generic)
"RTN","ORWDXA",147,0)
 ;N X S X=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDXA",148,0)
 ;D DATES^ORCSAVE2(+ORID,,X)
"RTN","ORWDXA",149,0)
 ;D STATUS^ORCSAVE2(+ORID,2)
"RTN","ORWDXA",150,0)
 ; validate ESCode
"RTN","ORWDXA",151,0)
 D COMP^ORCSAVE2(ORID)
"RTN","ORWDXA",152,0)
 D COMP^ORMBLDOR(ORID)
"RTN","ORWDXA",153,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",154,0)
 Q
"RTN","ORWDXA",155,0)
VERIFY(REC,ORID,ESCODE,ORVER) ; Verify order
"RTN","ORWDXA",156,0)
 ; validate ESCode
"RTN","ORWDXA",157,0)
 S ORVER=$G(ORVER,$S($D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:U))
"RTN","ORWDXA",158,0)
 I ORVER'=U D
"RTN","ORWDXA",159,0)
 . N ORIFN,ORES,ORI
"RTN","ORWDXA",160,0)
 . ; VERIFY any replaced orders:
"RTN","ORWDXA",161,0)
 . S ORIFN=ORID,ORES(ORIFN)="" D REPLCD^ORCACT1
"RTN","ORWDXA",162,0)
 . S ORI="" F  S ORI=$O(ORES(ORI)) Q:ORI=""  D EN^ORCSEND(ORI,"VR","",""),UNLK1^ORX2(+ORI):ORI'=ORID ;ORID locked prior
"RTN","ORWDXA",163,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",164,0)
 Q
"RTN","ORWDXA",165,0)
ALERT(DUMMY,ORID,ORDUZ) ; alert user (ORDUZ) when order (ORID) resulted
"RTN","ORWDXA",166,0)
 ;if no user passed, use ordering provider:
"RTN","ORWDXA",167,0)
 I $G(ORDUZ)<1 S ORDUZ=+$$ORDERER^ORQOR2(+ORID)
"RTN","ORWDXA",168,0)
 I $L($G(ORDUZ))<1 S ORDUZ=DUZ
"RTN","ORWDXA",169,0)
 S DUMMY=1,$P(^OR(100,+ORID,3),U,10)=ORDUZ
"RTN","ORWDXA",170,0)
 Q
"RTN","ORWDXA",171,0)
FLAG(REC,ORIFN,OREASON,ORNP) ; Flag order
"RTN","ORWDXA",172,0)
 ;variable XMZ is not defined by this section, but passed in (if available)
"RTN","ORWDXA",173,0)
 N ORB,ORVP,DA,ORPS,ORNOW
"RTN","ORWDXA",174,0)
 S ORNOW=$$NOW^XLFDT
"RTN","ORWDXA",175,0)
 D BULLETIN
"RTN","ORWDXA",176,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",177,0)
 K ^OR(100,+ORIFN,8,DA,3) S ^(3)="1^"_$G(XMZ)_U_+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON_$S($G(ORNP):"^^^^"_+ORNP,1:"")
"RTN","ORWDXA",178,0)
 D KILL^XM,MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",179,0)
 S $P(^OR(100,+ORIFN,3),U)=ORNOW ; Last Activity
"RTN","ORWDXA",180,0)
 I +$G(ORNP)<1 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",181,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^1" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",182,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",183,0)
 D HMPFLAG(+ORIFN,ORVP,ORNOW,DUZ,"F",OREASON,DA)
"RTN","ORWDXA",184,0)
 ;
"RTN","ORWDXA",185,0)
 Q
"RTN","ORWDXA",186,0)
BULLETIN ; flagged order bulletin
"RTN","ORWDXA",187,0)
 ;variables OREASON and ORIFN are assumed to be defined by the calling process and
"RTN","ORWDXA",188,0)
 ;are neither KILLed or NEWed in this section
"RTN","ORWDXA",189,0)
 N OR0,OR3,ORDTXT,XMB,XMY,XMDUZ,ORENT,BULL,ORSRV,ORUSR
"RTN","ORWDXA",190,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORWDXA",191,0)
 ;CLA - 3/21/96:
"RTN","ORWDXA",192,0)
 S ORUSR=+$P(OR0,U,4)
"RTN","ORWDXA",193,0)
 S ORSRV=$G(^VA(200,ORUSR,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWDXA",194,0)
 S ORENT="USR.`"_ORUSR_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","ORWDXA",195,0)
 S BULL=$$GET^XPAR(ORENT,"ORB FLAGGED ORDERS BULLETIN",1,"Q")
"RTN","ORWDXA",196,0)
 Q:$G(BULL)'="Y"   ;quit if parm val not 'Y'es
"RTN","ORWDXA",197,0)
 ;
"RTN","ORWDXA",198,0)
 S XMB="OR FLAGGED ORDER",XMDUZ=DUZ,XMY(+$P(OR0,U,4))=""
"RTN","ORWDXA",199,0)
 S XMB(1)=$P(^DPT(+$P(OR0,U,2),0),U),XMB(2)=$P(^(0),U,9),XMB(3)="" ;sb AGE
"RTN","ORWDXA",200,0)
 S XMB(4)=$$FMTE^XLFDT($P(OR0,U,7))
"RTN","ORWDXA",201,0)
 D TEXT^ORQ12(.ORDTXT,+ORIFN,80)
"RTN","ORWDXA",202,0)
 S XMB(5)=$G(ORDTXT(1)),XMB(6)=$G(ORDTXT(2)),XMB(7)=$G(ORDTXT(3))
"RTN","ORWDXA",203,0)
 S XMB(8)=$$FMTE^XLFDT($P(OR0,U,8)),XMB(9)=$$FMTE^XLFDT($P(OR0,U,9)),XMB(10)=OREASON
"RTN","ORWDXA",204,0)
 S XMB(11)=$P($G(^ORD(100.01,+$P(OR3,U,3),0)),U)
"RTN","ORWDXA",205,0)
 D EN^XMB
"RTN","ORWDXA",206,0)
 Q
"RTN","ORWDXA",207,0)
UNFLAG(REC,ORIFN,OREASON) ; Unflag order
"RTN","ORWDXA",208,0)
 N DA,ORB,ORNP,ORVP,ORPS,ORNOW
"RTN","ORWDXA",209,0)
 S ORNOW=$$NOW^XLFDT
"RTN","ORWDXA",210,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",211,0)
 S $P(^OR(100,+ORIFN,8,DA,3),U)=0,$P(^(3),U,6,8)=+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON D MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",212,0)
 S $P(^OR(100,+ORIFN,3),U)=ORNOW  ; Last Activity
"RTN","ORWDXA",213,0)
 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",214,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^0" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",215,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",216,0)
 D HMPFLAG(+ORIFN,ORVP,ORNOW,DUZ,"U",OREASON,DA)
"RTN","ORWDXA",217,0)
 Q
"RTN","ORWDXA",218,0)
FLAGTXT(LST,ORID) ; flag reason
"RTN","ORWDXA",219,0)
 N FLAG
"RTN","ORWDXA",220,0)
 S FLAG=$G(^OR(100,+ORID,8,$P(ORID,";",2),3))
"RTN","ORWDXA",221,0)
 S LST(1)="FLAGGED: "_$$FMTE^XLFDT($P(FLAG,U,3))_" by "_$P($G(^VA(200,+$P(FLAG,U,4),0)),U)
"RTN","ORWDXA",222,0)
 S LST(2)=$P(FLAG,U,5) ; reason
"RTN","ORWDXA",223,0)
 Q
"RTN","ORWDXA",224,0)
WCGET(LST,ORID) ; ward comments
"RTN","ORWDXA",225,0)
 N I,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",226,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,8,ACT,5,I)) Q:'I  S LST(I)=$G(^(I,0))
"RTN","ORWDXA",227,0)
 Q
"RTN","ORWDXA",228,0)
WCPUT(ERR,ORID,WCLST) ; Set ward comments
"RTN","ORWDXA",229,0)
 N DIERR,ERRLST,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",230,0)
 D WP^DIE(100.008,ACT_","_ORIFN_",",50,"","WCLST","ERRLST")
"RTN","ORWDXA",231,0)
 S ERR="" I $D(DIERR) S ERR="An error occurred while saving comments."
"RTN","ORWDXA",232,0)
 Q
"RTN","ORWDXA",233,0)
OFCPLX(ORY,ORID,PRTORDER) ; is ORID child of PRTORDER
"RTN","ORWDXA",234,0)
 N NUMCHDS,NOWID,NOWVAL,X3,ORDA,ISNOW
"RTN","ORWDXA",235,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXA",236,0)
 S ISNOW=0
"RTN","ORWDXA",237,0)
 D ISNOW^ORWDXR(.ISNOW,+ORID)
"RTN","ORWDXA",238,0)
 Q:ISNOW
"RTN","ORWDXA",239,0)
 N PKG
"RTN","ORWDXA",240,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",241,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",242,0)
 I PKG'="PS" Q
"RTN","ORWDXA",243,0)
 I $L($G(^OR(100,+ORID,3))),('$L($P(^(3),U,9))) Q
"RTN","ORWDXA",244,0)
 S (NUMCHDS,NOWID,NOWVAL,X3,ORDA)=0
"RTN","ORWDXA",245,0)
 S PRTORDER=+$P(^(3),U,9)
"RTN","ORWDXA",246,0)
 S X3=$G(^OR(100,PRTORDER,3)),ORDA=$P(X3,U,7)
"RTN","ORWDXA",247,0)
 S PRTORDER=PRTORDER_";"_ORDA
"RTN","ORWDXA",248,0)
 S NUMCHDS=$P($G(^OR(100,+PRTORDER,2,0)),U,4)
"RTN","ORWDXA",249,0)
 I NUMCHDS>2 S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",250,0)
 S:$D(^OR(100,+PRTORDER,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXA",251,0)
 S:NOWID NOWVAL=$G(^OR(100,+PRTORDER,4.5,NOWID,1))
"RTN","ORWDXA",252,0)
 I NOWVAL=1 Q
"RTN","ORWDXA",253,0)
 E  S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",254,0)
 Q
"RTN","ORWDXA",255,0)
ISACTOI(ORY,OI) ; Is ord item active?
"RTN","ORWDXA",256,0)
 I $G(^ORD(101.43,+OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXA",257,0)
 . S ORY=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXA",258,0)
 Q
"RTN","ORWDXA",259,0)
UPCTCHK(ORID) ;
"RTN","ORWDXA",260,0)
 ;ORID=ORDER NUMBER
"RTN","ORWDXA",261,0)
 ;RETURNS 1 IF THERE IS AN UPCARET IN THE ORDER'S COMMENTS
"RTN","ORWDXA",262,0)
 N RET,COMMID,WPCNT,PIID S RET=0
"RTN","ORWDXA",263,0)
 S COMMID=$O(^OR(100,+ORID,4.5,"ID","COMMENT",0))
"RTN","ORWDXA",264,0)
 I COMMID S WPCNT=0 F  S WPCNT=$O(^OR(100,+ORID,4.5,COMMID,2,WPCNT)) Q:'WPCNT!(RET)  D
"RTN","ORWDXA",265,0)
 .I $G(^OR(100,+ORID,4.5,COMMID,2,WPCNT,0))["^" S RET=1
"RTN","ORWDXA",266,0)
 S PIID=$O(^OR(100,+ORID,4.5,"ID","PI",0))
"RTN","ORWDXA",267,0)
 I PIID S WPCNT=0 F  S WPCNT=$O(^OR(100,+ORID,4.5,PIID,2,WPCNT)) Q:'WPCNT!(RET)  D
"RTN","ORWDXA",268,0)
 .I $G(^OR(100,+ORID,4.5,PIID,2,WPCNT,0))["^" S RET=1
"RTN","ORWDXA",269,0)
 Q RET
"RTN","ORWDXA",270,0)
HMPFLAG(ORIFN,HMDFN,WHEN,USR,FLGACTN,RSN,ORACLVL) ;
"RTN","ORWDXA",271,0)
 ; ORACLVL = ^OR(100,ORIFN,8,level)
"RTN","ORWDXA",272,0)
 ;
"RTN","ORWDXA",273,0)
 N RSLT,VAL  ; result, FileMan values
"RTN","ORWDXA",274,0)
 S VAL(.01)=$G(WHEN)  ; date/time of activity
"RTN","ORWDXA",275,0)
 S VAL(.02)=$G(FLGACTN)  ; flag or unflag
"RTN","ORWDXA",276,0)
 S VAL(.03)=$G(USR)  ; DUZ
"RTN","ORWDXA",277,0)
 S VAL(.04)=$G(RSN)  ; flag/unflag reason
"RTN","ORWDXA",278,0)
 D ADDFLAG^HMPOR(.RSLT,.VAL,+$G(ORIFN),$G(HMDFN),ORACLVL_";"_$G(FLGACTN))
"RTN","ORWDXA",279,0)
 Q:RSLT<0  D COMP^ORMBLDOR(+$G(ORIFN))  ;trigger unsolicited synch for flag/unflag
"RTN","ORWDXA",280,0)
 Q
"RTN","ORWDXM1")
0^12^B111273921
"RTN","ORWDXM1",1,0)
ORWDXM1 ;SLC/KCM - Order Dialogs, Menus ;05/22/17  11:15
"RTN","ORWDXM1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,178,185,187,215,243,280,331,388,350,423,434**;Dec 17, 1997;Build 35
"RTN","ORWDXM1",3,0)
 ;
"RTN","ORWDXM1",4,0)
 ;
"RTN","ORWDXM1",5,0)
BLDQRSP(LST,ORIT,FLDS,ISIMO,ENCLOC) ; Build responses for an order
"RTN","ORWDXM1",6,0)
 ; LST=QuickLevel^ResponseID(ORIT;$H)^Dialog^Type^FormID^DGrp
"RTN","ORWDXM1",7,0)
 ; LST(n)=verify or reject text
"RTN","ORWDXM1",8,0)
 ; ORIT= ptr to 101.41 for quick order, 100 for copy
"RTN","ORWDXM1",9,0)
 ; 1 2 3 4 5 6 7 8 11-20
"RTN","ORWDXM1",10,0)
 ; FLDS=DFN^LOC^ORNP^INPT^SEX^AGE^EVENT^SC%^^^Key Variables...
"RTN","ORWDXM1",11,0)
 ; ORIT=+ORIT: ptr to 101.41, $E(ORIT)=C: copy $E(ORIT)=X: change
"RTN","ORWDXM1",12,0)
 ; !! SHOULD CHECK for PRE-CPRS ORDERS (treat as text?)
"RTN","ORWDXM1",13,0)
 K ^TMP($J,"ORWDX LOADRSP","QO SAVE")
"RTN","ORWDXM1",14,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWDXM1",15,0)
 N ORWMODE ; 0:Dlg,Quick 1:copy 2:change
"RTN","ORWDXM1",16,0)
 N TEMPCAT ; pt cat from DPT
"RTN","ORWDXM1",17,0)
 N ISXFER ; Trnsfr order?
"RTN","ORWDXM1",18,0)
 N ORIMO ;If IMO(inpt med on opt)
"RTN","ORWDXM1",19,0)
 N TEMPORIT
"RTN","ORWDXM1",20,0)
 N ADMLOC,PATLOC,ORDLOC,LEVEL,DELAY,SCHLOC,SCHTYP
"RTN","ORWDXM1",21,0)
 S PATLOC=$P(FLDS,U,2)
"RTN","ORWDXM1",22,0)
 S ORDLOC=$S(ORIT["C":+$P($G(^OR(100,+$P(ORIT,"C",2),0)),U,10),1:0)
"RTN","ORWDXM1",23,0)
 S ORIMO=$G(ISIMO)
"RTN","ORWDXM1",24,0)
 S ORWMODE=0,ISXFER=""
"RTN","ORWDXM1",25,0)
 S:$E(ORIT)="C" ORWMODE=1 S:$E(ORIT)="T" ORWMODE=1,ISXFER=";T" ;treat xfer as copy
"RTN","ORWDXM1",26,0)
 S:$E(ORIT)="X" ORWMODE=2
"RTN","ORWDXM1",27,0)
 S TEMPORIT=ORIT
"RTN","ORWDXM1",28,0)
 I ORWMODE S ORIT=$E(ORIT,2,999)
"RTN","ORWDXM1",29,0)
 S LST(0)=""
"RTN","ORWDXM1",30,0)
 ;disable
"RTN","ORWDXM1",31,0)
 D CHKDSBL^ORWDXM3(.LST,ORIT,ORWMODE) Q:+LST(0)=8
"RTN","ORWDXM1",32,0)
 ;action
"RTN","ORWDXM1",33,0)
 D CHKVACT^ORWDXM3(.LST,ORIT,ORWMODE,$P(FLDS,U,3)) Q:+LST(0)=8
"RTN","ORWDXM1",34,0)
 ;no copy
"RTN","ORWDXM1",35,0)
 I ORWMODE=1 D CHKCOPY^ORWDXM3(.LST,ORIT,FLDS) Q:+LST(0)=8
"RTN","ORWDXM1",36,0)
 ;change
"RTN","ORWDXM1",37,0)
 I ORWMODE=2 D BLD4CHG^ORWDXM3(.LST,ORIT,FLDS) Q
"RTN","ORWDXM1",38,0)
 I 'ORWMODE,($P(^ORD(101.41,+ORIT,0),U,4)="D"),$P(^ORD(101.41,+ORIT,0),"^",7)=$O(^DIC(9.4,"C","SD",0)) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER) Q
"RTN","ORWDXM1",39,0)
 I 'ORWMODE,($P(^ORD(101.41,+ORIT,0),U,4)="D"),'($O(^DIC(9.4,"C","OR",0))[$P(^ORD(101.41,+ORIT,0),U,7)) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER) Q
"RTN","ORWDXM1",40,0)
 N ORIMTYPE,ORCOMP,ORTAS,LRFZX,LRFSAMP,LRFSPEC,LRFDATE,LRFURG,LRFSCH
"RTN","ORWDXM1",41,0)
 N ORTIME,ORCOLLCT,ORMAX,ORTEST,ORIMTIME,ORSMAX,ORSTMS,ORSCH
"RTN","ORWDXM1",42,0)
 N PSJNOPC,ORMORE,ORINPT,ORXNP,ORSCHED,ORQTY,ORNOUNS,ORXNP,OREFILLS
"RTN","ORWDXM1",43,0)
 N ORCOMPLX,ORQTY,ORCOPAY,ORDRUG,ORWPSPIK,ORWPSWRG,ORSD,ORDSUP,ORWP94
"RTN","ORWDXM1",44,0)
 N ORPARAM,ORNPO,ORTIME,ORMEAL,ORTRAY,ORDATE,GMRCNOPD,GMRCNOAT,GMRCREAF
"RTN","ORWDXM1",45,0)
 N ORTYPE,ORVP,ORL,ORNP,ORSEX,ORAGE,ORWARD,OREVENT,ORDIV,ORSC,KEYVAR
"RTN","ORWDXM1",46,0)
 N ORDG,ORDIALOG,ORCAT,FIRST,ORQUIT,X,ORTRAIL,ORLEAD,RSPREF,AUTOACK
"RTN","ORWDXM1",47,0)
 N OREVNTYP
"RTN","ORWDXM1",48,0)
 S ORWP94=$O(^ORD(101.41,"AB","PS MEDS",0))>0
"RTN","ORWDXM1",49,0)
 S ORVP=$P(FLDS,U,1)_";DPT(",ORNP=+$P(FLDS,U,3),ORSC=$P(FLDS,U,8)
"RTN","ORWDXM1",50,0)
 S ORL=$P(FLDS,U,2)_";SC(",ORL(2)=ORL
"RTN","ORWDXM1",51,0)
 S ORSEX=$P(FLDS,U,5),ORAGE=$P(FLDS,U,6),ORTYPE="Q",FIRST=1
"RTN","ORWDXM1",52,0)
 I $P(FLDS,U,4),$G(^SC(+ORL,42)) S ORWARD=+^SC(+ORL,42)
"RTN","ORWDXM1",53,0)
 I $L($P(FLDS,U,7)) D
"RTN","ORWDXM1",54,0)
 . S OREVENT=$P(FLDS,U,7)
"RTN","ORWDXM1",55,0)
 . S OREVNTYP=$P(OREVENT,";",2)
"RTN","ORWDXM1",56,0)
 . S OREVENT("TS")=$P(OREVENT,";",3)
"RTN","ORWDXM1",57,0)
 . S OREVENT("EFFECTIVE")=$P(OREVENT,";",4)
"RTN","ORWDXM1",58,0)
 . S OREVENT=+$P(OREVENT,";",1)
"RTN","ORWDXM1",59,0)
 I 'ORWMODE D
"RTN","ORWDXM1",60,0)
 . D SETKEYV^ORWDXM3($P(FLDS,U,11,20)) ; from menu path
"RTN","ORWDXM1",61,0)
 . S KEYVAR=$$KEYVAR^ORWDXM3(ORIT) ; from entry action
"RTN","ORWDXM1",62,0)
 . D SETKEYV^ORWDXM3(KEYVAR)
"RTN","ORWDXM1",63,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",64,0)
 ; init return record based on auto-accept
"RTN","ORWDXM1",65,0)
 I ORWMODE S LST(0)="2^"_ORIT ;verify on copy
"RTN","ORWDXM1",66,0)
 E  S LST(0)=+$P($G(^ORD(101.41,ORIT,5)),U,8)_U_ORIT
"RTN","ORWDXM1",67,0)
 S TEMPCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDXM1",68,0)
 I TEMPCAT="I",+$P(FLDS,U,4)=1,$E(TEMPORIT)="C",$P($G(^ORD(100.98,$P($G(^OR(100,+ORIT,0)),U,11),0)),U)="OUTPATIENT MEDICATIONS" S TEMPCAT="O"
"RTN","ORWDXM1",69,0)
 I $L($G(OREVNTYP)) D
"RTN","ORWDXM1",70,0)
 . S ORCAT=$S(OREVNTYP="A":"I",OREVNTYP="T":"I",OREVNTYP="O":TEMPCAT,OREVNTYP="M":TEMPCAT,OREVNTYP="C":TEMPCAT,1:"O") I $G(OREVENT) D
"RTN","ORWDXM1",71,0)
 .. N X S X=$$EVT^OREVNTX(OREVENT),X=$P($G(^ORD(100.5,+X,0)),U,7)
"RTN","ORWDXM1",72,0)
 .. I OREVNTYP="T",X,X<4 S ORCAT="O" ;To pass=outpt
"RTN","ORWDXM1",73,0)
 .. I OREVNTYP="D",X=41 S ORCAT="I" ;From ASIH=inpt
"RTN","ORWDXM1",74,0)
 E  S ORCAT=TEMPCAT
"RTN","ORWDXM1",75,0)
 D SETUP^ORWDXM4 Q:+LST(0)=8
"RTN","ORWDXM1",76,0)
 S X="OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:"")
"RTN","ORWDXM1",77,0)
 I ORWMODE,(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D  ;remove old values
"RTN","ORWDXM1",78,0)
 . K ORDIALOG($$PTR^ORCD(X),1)
"RTN","ORWDXM1",79,0)
 . I ORWMODE=2,$$DRAFT^ORWDX2(ORIT) Q  ;keep comments
"RTN","ORWDXM1",80,0)
 . K:ISXFER'["T" ORDIALOG($$PTR^ORCD("OR GTX WORD PROCESSING 1"),1)
"RTN","ORWDXM1",81,0)
 D SETUPS^ORWDXM4 ;moved to save space, expects X
"RTN","ORWDXM1",82,0)
 Q:+LST(0)=8
"RTN","ORWDXM1",83,0)
 I $G(ORQUIT) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR) Q
"RTN","ORWDXM1",84,0)
 N SEQ,DA,XCODE,MUSTASK,PROMPT,INST,KEY,IVFID,CLIVFID
"RTN","ORWDXM1",85,0)
 S IVFID=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",86,0)
 S CLIVFID=$O(^ORD(101.41,"B","CLINIC OR PAT FLUID OE",0))
"RTN","ORWDXM1",87,0)
 S AUTOACK=$S($D(ORWPSWRG):0,1:1)
"RTN","ORWDXM1",88,0)
 ; If copying, clear bad dates. Later, SETITEM will fill dates with default values. ;DJE-VM *331
"RTN","ORWDXM1",89,0)
 I ORWMODE=1 D  ;
"RTN","ORWDXM1",90,0)
 . I $L($$VAL^ORCD("START DATE")) D  ;
"RTN","ORWDXM1",91,0)
 . . S X=$$VAL^ORCD("START DATE"),%DT="TX" D ^%DT
"RTN","ORWDXM1",92,0)
 . . I Y'<$$DT^XLFDT,(($L($$VAL^ORCD("STOP DATE"))=0)!('$$FTDCOMP^ORCD("START DATE","STOP DATE",">"))) Q  ;quit if valid dates: start not in the past or stop after start
"RTN","ORWDXM1",93,0)
 . . K ORDIALOG($$PTR("START DATE"),1),ORDIALOG($$PTR("START DATE/TIME"),1) ;erase bad start and stop dates.
"RTN","ORWDXM1",94,0)
 . . K ORDIALOG($$PTR("STOP DATE"),1),ORDIALOG($$PTR("STOP DATE/TIME"),1)
"RTN","ORWDXM1",95,0)
 . ; check start and stop dates found in diet orders
"RTN","ORWDXM1",96,0)
 . I $L($$VAL^ORCD("EFFECTIVE DATE/TIME")) D  ;
"RTN","ORWDXM1",97,0)
 . . S X=$$VAL^ORCD("EFFECTIVE DATE/TIME"),%DT="TX" D ^%DT
"RTN","ORWDXM1",98,0)
 . . I Y'<$$DT^XLFDT,(($L($$VAL^ORCD("EXPIRATION DATE/TIME"))=0)!('$$FTDCOMP^ORCD("EFFECTIVE DATE/TIME","EXPIRATION DATE/TIME",">"))) Q  ;quit if valid dates: start not in the past or stop after start
"RTN","ORWDXM1",99,0)
 . . K ORDIALOG($P(ORDIALOG("B","EFFECTIVE DATE/TIME"),U,2),1) ;erase bad start and stop dates.
"RTN","ORWDXM1",100,0)
 . . K ORDIALOG($P(ORDIALOG("B","EXPIRATION DATE/TIME"),U,2),1)
"RTN","ORWDXM1",101,0)
 . ; check date desired field found in imaging orders
"RTN","ORWDXM1",102,0)
 . I $L($$VAL^ORCD("DATE DESIRED")) D  ;
"RTN","ORWDXM1",103,0)
 . . S X=$$VAL^ORCD("DATE DESIRED"),%DT="TX" D ^%DT
"RTN","ORWDXM1",104,0)
 . . I Y'<$$DT^XLFDT Q  ;quit if not a past date
"RTN","ORWDXM1",105,0)
 . . K ORDIALOG($P(ORDIALOG("B","DATE DESIRED"),U,2),1) ;erase bad date
"RTN","ORWDXM1",106,0)
 . ; check collection date field found in lab orders
"RTN","ORWDXM1",107,0)
 . I $L($$VAL^ORCD("COLLECTION DATE/TIME")) D  ;
"RTN","ORWDXM1",108,0)
 . . S X=$$VAL^ORCD("COLLECTION DATE/TIME")
"RTN","ORWDXM1",109,0)
 . . I X="NEXT" Q  ;No need to check this.
"RTN","ORWDXM1",110,0)
 . . S %DT="TX" D ^%DT
"RTN","ORWDXM1",111,0)
 . . I $P(Y,".",2),Y'<$E($$NOW^XLFDT,1,12) Q  ;quit if not a past date and time (lab is more precise than other dates)
"RTN","ORWDXM1",112,0)
 . . I $P(Y,".",2)="",Y'<$$DT^XLFDT Q  ;
"RTN","ORWDXM1",113,0)
 . . K ORDIALOG($P(ORDIALOG("B","COLLECTION DATE/TIME"),U,2),1) ;erase bad date
"RTN","ORWDXM1",114,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:'SEQ  D
"RTN","ORWDXM1",115,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM1",116,0)
 . . ; skip if child prmpt
"RTN","ORWDXM1",117,0)
 . . I $P(^ORD(101.41,+ORDIALOG,10,DA,0),U,11) Q
"RTN","ORWDXM1",118,0)
 . . ; set dflt for prmpt, chk if interactive
"RTN","ORWDXM1",119,0)
 . . S PROMPT=$P(^ORD(101.41,+ORDIALOG,10,DA,0),U,2)
"RTN","ORWDXM1",120,0)
 . . D SETITEM(DA,PROMPT,1,.MUSTASK)
"RTN","ORWDXM1",121,0)
 . . I MUSTASK S AUTOACK=0 Q
"RTN","ORWDXM1",122,0)
 . . ; iterate through child items if parent & edit only
"RTN","ORWDXM1",123,0)
 . . Q:'$D(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT))
"RTN","ORWDXM1",124,0)
 . . N CSEQ,CDA,CPROMPT,INST,ORQUIT
"RTN","ORWDXM1",125,0)
 . . S CSEQ=0 F  S CSEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ)) Q:'CSEQ  D  Q:$G(ORQUIT)
"RTN","ORWDXM1",126,0)
 . . . S CDA=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ,0))
"RTN","ORWDXM1",127,0)
 . . . S CPROMPT=$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,2)
"RTN","ORWDXM1",128,0)
 . . . ; if req & no instances then need interaction
"RTN","ORWDXM1",129,0)
 . . . I $P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6) D
"RTN","ORWDXM1",130,0)
 . . . . I ORDIALOG=IVFID!(ORDIALOG=CLIVFID) Q
"RTN","ORWDXM1",131,0)
 . . . . I '$O(ORDIALOG(CPROMPT,0)) S AUTOACK=0
"RTN","ORWDXM1",132,0)
 . . . S INST=0 F  S INST=$O(ORDIALOG(CPROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",133,0)
 . . . . N ORASK D VBASK^ORWDXM4(INST) ; set ORASK for VBECS
"RTN","ORWDXM1",134,0)
 . . . . ; set dflt for each child prmpt
"RTN","ORWDXM1",135,0)
 . . . . D SETITEM(CDA,CPROMPT,INST,.MUSTASK)
"RTN","ORWDXM1",136,0)
 . . . . ; if no val & child prmpt req'd then need interaction
"RTN","ORWDXM1",137,0)
 . . . . I MUSTASK,$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6) S AUTOACK=0
"RTN","ORWDXM1",138,0)
 N IVDLG,CLINFDLG,SPLYDLG
"RTN","ORWDXM1",139,0)
 S IVDLG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",140,0)
 S CLINFDLG=$O(^ORD(101.41,"AB","CLINIC OR PAT FLUID OE",0))
"RTN","ORWDXM1",141,0)
 S SPLYDLG=$O(^ORD(101.41,"AB","PSO SUPPLY",0))
"RTN","ORWDXM1",142,0)
 I $$ISMED(ORIT),(ORDIALOG'=IVDLG),(ORDIALOG'=CLINFDLG),(ORDIALOG'=SPLYDLG),(ORCAT="I") D
"RTN","ORWDXM1",143,0)
 . N P
"RTN","ORWDXM1",144,0)
 . F P="PATIENT INSTRUCTIONS","DAYS SUPPLY","QUANTITY","REFILLS","ROUTING","SERVICE CONNECTED" K ORDIALOG($$PTR(P),1)
"RTN","ORWDXM1",145,0)
 . I '$$ISQO(ORIT) K ORDIALOG($$PTR("START DATE/TIME"),1) ; kill if not a non-VA med quick order. p388
"RTN","ORWDXM1",146,0)
 S KEY=$S(ORWMODE:"C",1:"")_ORIT_"-"_$P($H,",",2),SEQ=0
"RTN","ORWDXM1",147,0)
 I $$ISINPMED(ORIT) D
"RTN","ORWDXM1",148,0)
 .S LEVEL=$P(LST(0),U),DELAY=$S($P($G(OREVENT),";")>0:1,1:0)
"RTN","ORWDXM1",149,0)
 .I LEVEL=2!(ISIMO) D ADMTIME^ORWDXM2(ORDLOC,PATLOC,ENCLOC,DELAY,ISIMO)
"RTN","ORWDXM1",150,0)
 I ($$ISMED(ORIT)),'($$VALQO^ORWDXM3(ORIT)) S AUTOACK=0
"RTN","ORWDXM1",151,0)
 I 'ORWMODE,$P(^ORD(101.41,+ORIT,0),U,7)=$O(^DIC(9.4,"C","SD",0)),'($$SDRTCVER^ORWDXM3(.ORDIALOG)) S AUTOACK=0
"RTN","ORWDXM1",152,0)
 S PROMPT=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:'PROMPT  D
"RTN","ORWDXM1",153,0)
 . I '$D(^ORD(101.41,ORDIALOG,10,"D",PROMPT)) K ORDIALOG(PROMPT) Q
"RTN","ORWDXM1",154,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",155,0)
 . . S SEQ=SEQ+1,^TMP("ORWDXMQ",$J,KEY,SEQ,0)=U_PROMPT_U_INST
"RTN","ORWDXM1",156,0)
 . . ; save word proc val
"RTN","ORWDXM1",157,0)
 . . I $E(ORDIALOG(PROMPT,0))="W",$L(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",158,0)
 . . . M ^TMP("ORWDXMQ",$J,KEY,SEQ,2)=@ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",159,0)
 . . ; save other val types
"RTN","ORWDXM1",160,0)
 . . E  S ^TMP("ORWDXMQ",$J,KEY,SEQ,1)=ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",161,0)
 I AUTOACK D
"RTN","ORWDXM1",162,0)
 . I ORWMODE S AUTOACK=2
"RTN","ORWDXM1",163,0)
 . I 'ORWMODE,($P(^ORD(101.41,ORIT,0),U,8)!'LST(0)) S AUTOACK=2
"RTN","ORWDXM1",164,0)
 ;I ($$ISMED(ORIT)),'($$VALQO^ORWDXM3(ORIT)) S AUTOACK=0
"RTN","ORWDXM1",165,0)
 I ORIMO,ORWMODE S AUTOACK=2
"RTN","ORWDXM1",166,0)
 ; accept Herbal/OTC/NonVA Med quick orders
"RTN","ORWDXM1",167,0)
 I $L($G(^ORD(101.41,+ORIT,0))),($P(^ORD(100.98,$P(^ORD(101.41,+ORIT,0),U,5),0),U,3)="NV RX"),($P($G(^ORD(101.41,+ORIT,5)),U,8)) S AUTOACK=1
"RTN","ORWDXM1",168,0)
 ;I AUTOACK=2,$$ISMED(ORIT),(ORDIALOG=IVDLG),$$VERORD^ORWDXM3=0 S AUTOACK=0
"RTN","ORWDXM1",169,0)
 I AUTOACK=2,$$ISMED(ORIT),$$VERORD^ORWDXM3(ORIT)=0 S AUTOACK=0
"RTN","ORWDXM1",170,0)
 I AUTOACK=2 D VERTXT^ORWDXM2
"RTN","ORWDXM1",171,0)
 S LST(0)=AUTOACK_U_KEY_U_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR)
"RTN","ORWDXM1",172,0)
 I $P(LST(0),U,4)="D" S $P(LST(0),U,4)="Q"
"RTN","ORWDXM1",173,0)
 I ORWMODE=1 S $P(LST(0),U,4)="C"
"RTN","ORWDXM1",174,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",175,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J)
"RTN","ORWDXM1",176,0)
 Q
"RTN","ORWDXM1",177,0)
SETITEM(DA,PROMPT,INST,MUSTASK) ; set dflt val & return if must prompt
"RTN","ORWDXM1",178,0)
 N EDITONLY,Y,VALIV,XCODE
"RTN","ORWDXM1",179,0)
 S MUSTASK=0,EDITONLY=0,VALIV=0
"RTN","ORWDXM1",180,0)
 I $D(^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)) D
"RTN","ORWDXM1",181,0)
 . I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORWDXM1",182,0)
 . . S ^TMP("ORWORD",$J,PROMPT,INST,1,0)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",183,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",184,0)
 . E  S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",185,0)
 I $D(^TMP("ORWDHTM",$J,ORIT,PROMPT)) D
"RTN","ORWDXM1",186,0)
 . S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORIT,PROMPT)
"RTN","ORWDXM1",187,0)
 . ; NEED TO CLEAN UP ^TMP("ORWDHTM") after process order set!!!
"RTN","ORWDXM1",188,0)
 ;
"RTN","ORWDXM1",189,0)
 ; skip if a value already exists for this prompt and not WP
"RTN","ORWDXM1",190,0)
 Q:$D(ORDIALOG(PROMPT,INST))&($E(ORDIALOG(PROMPT,0))'="W")
"RTN","ORWDXM1",191,0)
 ; execute default action if no value in QO, checking EDITONLY afterwards
"RTN","ORWDXM1",192,0)
 I '$D(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",193,0)
 . ;
"RTN","ORWDXM1",194,0)
 . ;Intermittent IV orders do not require a solution or an infusion rate
"RTN","ORWDXM1",195,0)
 . I PROMPT=$$PTR("INFUSION RATE"),$$GETIVTYP^ORWDXM3="I" S VALIV=1 Q
"RTN","ORWDXM1",196,0)
 . I PROMPT=$$PTR("ORDERABLE ITEM"),$$GETIVTYP^ORWDXM3="I" S VALIV=1 Q
"RTN","ORWDXM1",197,0)
 . I $E(ORDIALOG(PROMPT,0))="W",$D(^ORD(101.41,+ORDIALOG,10,DA,8))>9 D
"RTN","ORWDXM1",198,0)
 . . M ^TMP("ORWORD",$J,PROMPT,INST)=^ORD(101.41,+ORDIALOG,10,DA,8)
"RTN","ORWDXM1",199,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",200,0)
 . E  D
"RTN","ORWDXM1",201,0)
 . . S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,7)))
"RTN","ORWDXM1",202,0)
 . . I $L(XCODE) X XCODE S:$D(Y) ORDIALOG(PROMPT,INST)=Y
"RTN","ORWDXM1",203,0)
 Q:VALIV=1
"RTN","ORWDXM1",204,0)
 Q:$G(EDITONLY)
"RTN","ORWDXM1",205,0)
 I 'ORWMODE,$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,8) Q
"RTN","ORWDXM1",206,0)
 I ORWMODE,($P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,9)'["W"),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6)!$D(ORDIALOG(PROMPT,INST)) Q
"RTN","ORWDXM1",207,0)
 I 'ORWMODE,LST(0),$D(ORDIALOG(PROMPT,INST)),($E(ORDIALOG(PROMPT,0))="W") Q
"RTN","ORWDXM1",208,0)
 I 'ORWMODE,LST(0),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6) Q
"RTN","ORWDXM1",209,0)
 S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,3)))
"RTN","ORWDXM1",210,0)
 I $L(XCODE) X XCODE Q:'$T
"RTN","ORWDXM1",211,0)
 S MUSTASK=1
"RTN","ORWDXM1",212,0)
 Q
"RTN","ORWDXM1",213,0)
SUBCODE(X) ; substitute code
"RTN","ORWDXM1",214,0)
 I X["$$REQDCOMM^ORCDLR" Q "I $$LRRQCM^ORWDXM2"
"RTN","ORWDXM1",215,0)
 I X["$$ASKSAMP^ORCDLR" Q "I $$LRASMP^ORWDXM2"
"RTN","ORWDXM1",216,0)
 I X["$$SCHEDULD^ORCDRA1" Q "I $$SCHEDULD^ORWDXM2"
"RTN","ORWDXM1",217,0)
 I X["(^PSX(550,""C"")" Q "S Y=$E($$DEFPICK^ORWDPS32) K:'$L(Y) Y"
"RTN","ORWDXM1",218,0)
 I X["I $$ASKURG^ORCDVBEC" Q "I 1"
"RTN","ORWDXM1",219,0)
 I X["K:$G(ORASK)" Q "I $G(ORASK)"
"RTN","ORWDXM1",220,0)
 Q X
"RTN","ORWDXM1",221,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME
"RTN","ORWDXM1",222,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORWDXM1",223,0)
 ;
"RTN","ORWDXM1",224,0)
ISINPMED(IFN) ;
"RTN","ORWDXM1",225,0)
 N PKG,RESULT,Y
"RTN","ORWDXM1",226,0)
 I 'ORWMODE S PKG=$P($G(^ORD(101.41,IFN,0)),U,7)
"RTN","ORWDXM1",227,0)
 E  S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM1",228,0)
 S Y=$$GET1^DIQ(9.4,+PKG_",",1)
"RTN","ORWDXM1",229,0)
 S RESULT=$S($E(Y,1,3)="PSJ":1,1:0)
"RTN","ORWDXM1",230,0)
 Q RESULT
"RTN","ORWDXM1",231,0)
 ;
"RTN","ORWDXM1",232,0)
ISMED(IFN) ; return 1 if pharmacy order dlg used
"RTN","ORWDXM1",233,0)
 N PKG
"RTN","ORWDXM1",234,0)
 I 'ORWMODE S PKG=$P($G(^ORD(101.41,IFN,0)),U,7)
"RTN","ORWDXM1",235,0)
 E  S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM1",236,0)
 Q $$NMSP^ORCD(PKG)="PS"
"RTN","ORWDXM1",237,0)
SITEVAL() ;return 1 if site does want the reason for study to carry through from past orders of this ordering session
"RTN","ORWDXM1",238,0)
 I $$GET^XPAR("ALL^SRV.`"_+^VA(200,DUZ,5),"OR RA RFS CARRY ON")=0 Q 0
"RTN","ORWDXM1",239,0)
 Q 1
"RTN","ORWDXM1",240,0)
SVRPC(RET,X) ;RPC FOR SITEVAL
"RTN","ORWDXM1",241,0)
 S RET=$$SITEVAL
"RTN","ORWDXM1",242,0)
 Q
"RTN","ORWDXM1",243,0)
ISQO(IFN) ;return 1 if a non-VA medication quick order type of order dialog. p388
"RTN","ORWDXM1",244,0)
 I $P($G(^ORD(101.41,IFN,0)),U,5)'=$O(^ORD(100.98,"B","NV RX",0)) Q 0
"RTN","ORWDXM1",245,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)="Q" Q 1
"RTN","ORWDXM1",246,0)
 Q 0
"RTN","ORWDXM3")
0^14^B118361960
"RTN","ORWDXM3",1,0)
ORWDXM3 ; SLC/KCM/JLI - Quick Orders ;06/22/17
"RTN","ORWDXM3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,185,187,190,195,215,243,303,296,280,350,434**;Dec 17, 1997;Build 35
"RTN","ORWDXM3",3,0)
 ;
"RTN","ORWDXM3",4,0)
 ;
"RTN","ORWDXM3",5,0)
 ;
"RTN","ORWDXM3",6,0)
VALCOUNT(NAME,ORDIALOG) ;
"RTN","ORWDXM3",7,0)
 N COUNT,IEN,NUM
"RTN","ORWDXM3",8,0)
 S NUM=0,COUNT=0
"RTN","ORWDXM3",9,0)
 S IEN=$P($G(ORDIALOG("B",NAME)),U,2) Q:IEN'>0
"RTN","ORWDXM3",10,0)
 F  S NUM=$O(ORDIALOG(IEN,NUM)) Q:+NUM'>0  S COUNT=COUNT+1
"RTN","ORWDXM3",11,0)
 Q COUNT
"RTN","ORWDXM3",12,0)
 ;
"RTN","ORWDXM3",13,0)
ISMISSFL(ORDIALOG,IVTYPE) ;
"RTN","ORWDXM3",14,0)
 N ADDCNT,RESULT,SOLCNT,STRCNT
"RTN","ORWDXM3",15,0)
 S RESULT=0
"RTN","ORWDXM3",16,0)
 S ADDCNT=$$VALCOUNT("ADDITIVE",.ORDIALOG)
"RTN","ORWDXM3",17,0)
 S STRCNT=$$VALCOUNT("STRENGTH",.ORDIALOG)
"RTN","ORWDXM3",18,0)
 S SOLCNT=$$VALCOUNT("SOLUTION",.ORDIALOG)
"RTN","ORWDXM3",19,0)
 I IVTYPE'="I",ADDCNT'=STRCNT S RESULT=1
"RTN","ORWDXM3",20,0)
 I IVTYPE="I" D
"RTN","ORWDXM3",21,0)
 .I ADDCNT=0,SOLCNT>0 Q
"RTN","ORWDXM3",22,0)
 .I ADDCNT=0 S RESULT=1 Q
"RTN","ORWDXM3",23,0)
 .I ADDCNT'=STRCNT S RESULT=1 Q
"RTN","ORWDXM3",24,0)
 Q RESULT
"RTN","ORWDXM3",25,0)
 ;
"RTN","ORWDXM3",26,0)
IVADFCHK(ORDIALOG) ;
"RTN","ORWDXM3",27,0)
 ; This line tag checks to see if there are the same number of values
"RTN","ORWDXM3",28,0)
 ;for ADDITIVE and Additive Frequency. This also checks to see if
"RTN","ORWDXM3",29,0)
 ;the value assigned to ADDFREQ is one of the three possible values
"RTN","ORWDXM3",30,0)
 ;All Bags, 1 bag/day, See Comments. If See Comments it also checks
"RTN","ORWDXM3",31,0)
 ;for text in the comment section.
"RTN","ORWDXM3",32,0)
 N ADDCNT,ADDFCNT,ADDFREQ,COMMENT,FREQ,INST,RESULT
"RTN","ORWDXM3",33,0)
 S ADDCNT=$$VALCOUNT("ADDITIVE",.ORDIALOG)
"RTN","ORWDXM3",34,0)
 S ADDFCNT=$$VALCOUNT("ADDITIVE FREQUENCY",.ORDIALOG)
"RTN","ORWDXM3",35,0)
 I ADDCNT'=ADDFCNT Q 0
"RTN","ORWDXM3",36,0)
 S ADDFREQ=$O(^ORD(101.41,"AB","OR GTX ADDITIVE FREQUENCY",""))
"RTN","ORWDXM3",37,0)
 S COMMENT=$O(^ORD(101.41,"AB","OR GTX WORD PROCESSING 1",""))
"RTN","ORWDXM3",38,0)
 I +$G(ADDFREQ)'>0 Q 0
"RTN","ORWDXM3",39,0)
 S INST=0,RESULT=1
"RTN","ORWDXM3",40,0)
 F  S INST=$O(ORDIALOG(ADDFREQ,INST)) Q:INST'>0!(RESULT=0)  D
"RTN","ORWDXM3",41,0)
 .S FREQ=$$ADDFRQCV^ORMBLDP1($G(ORDIALOG(ADDFREQ,INST)),"O")
"RTN","ORWDXM3",42,0)
 .I FREQ="A"!(FREQ=1) Q
"RTN","ORWDXM3",43,0)
 .I FREQ="" S RESULT=0 Q
"RTN","ORWDXM3",44,0)
 .I FREQ="S",'$L($G(ORDIALOG(COMMENT,1))) S RESULT=0 Q
"RTN","ORWDXM3",45,0)
 Q RESULT
"RTN","ORWDXM3",46,0)
 ;
"RTN","ORWDXM3",47,0)
KEYVAR(DLG)  ; Parse entry action for key variables & return in string
"RTN","ORWDXM3",48,0)
 ; RV=CollTp^Samp^Spec^CollDt^Urg^Sched^NoComm^NoDiag^NoProv^NoRsn
"RTN","ORWDXM3",49,0)
 N XCODE,RV,POS,Z
"RTN","ORWDXM3",50,0)
 S XCODE=$G(^ORD(101.41,DLG,3)),RV=""
"RTN","ORWDXM3",51,0)
 I '$L(XCODE) Q ""
"RTN","ORWDXM3",52,0)
 S POS=$F(XCODE,"LRFZX=")    I POS S $P(RV,U,1)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",53,0)
 S POS=$F(XCODE,"LRFSAMP=")  I POS S $P(RV,U,2)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",54,0)
 S POS=$F(XCODE,"LRFSPEC=")  I POS S $P(RV,U,3)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",55,0)
 S POS=$F(XCODE,"LRFDATE=")  I POS S $P(RV,U,4)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",56,0)
 S POS=$F(XCODE,"LRFURG=")   I POS S $P(RV,U,5)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",57,0)
 S POS=$F(XCODE,"LRFSCH=")   I POS S $P(RV,U,6)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",58,0)
 S POS=$F(XCODE,"PSJNOPC=")  I POS S $P(RV,U,7)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",59,0)
 S POS=$F(XCODE,"GMRCNOPD=") I POS S $P(RV,U,8)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",60,0)
 S POS=$F(XCODE,"GMRCNOAT=") I POS S $P(RV,U,9)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",61,0)
 S POS=$F(XCODE,"GMRCREAF=") I POS S $P(RV,U,10)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",62,0)
 S POS=$F(XCODE,"ORFORGET=") I POS D
"RTN","ORWDXM3",63,0)
 . ; need to change this so that it is executed in SETKEYV so
"RTN","ORWDXM3",64,0)
 . ; that it is executed each time menu is revisited
"RTN","ORWDXM3",65,0)
 . N ORFORGET S ORFORGET=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",66,0)
 . I ORFORGET K ^TMP("ORECALL",$J,+ORFORGET)
"RTN","ORWDXM3",67,0)
 . E  K ^TMP("ORECALL",$J)
"RTN","ORWDXM3",68,0)
 Q RV
"RTN","ORWDXM3",69,0)
VALUE(STR,BEG) ; Return value of "var=" (copied from ORCONVRT)
"RTN","ORWDXM3",70,0)
 N X,Y,I S X=$E(STR,BEG,999),Y=""
"RTN","ORWDXM3",71,0)
 S:$E(X)="""" X=$E(X,2,999) ; strip leading "
"RTN","ORWDXM3",72,0)
 F I=1:1:$L(X) S Z=$E(X,I) Q:(Z=",")!(Z=" ")!(Z="""")  S Y=Y_Z
"RTN","ORWDXM3",73,0)
 Q $TR(Y,U,"")
"RTN","ORWDXM3",74,0)
 ;
"RTN","ORWDXM3",75,0)
SETKEYV(X)      ; Set the key variables based on contents of X
"RTN","ORWDXM3",76,0)
 I $L($P(X,U,1))  S LRFZX=$P(X,U,1)
"RTN","ORWDXM3",77,0)
 I $L($P(X,U,2))  S LRFSAMP=$P(X,U,2)
"RTN","ORWDXM3",78,0)
 I $L($P(X,U,3))  S LRFSPEC=$P(X,U,3)
"RTN","ORWDXM3",79,0)
 I $L($P(X,U,4))  S LRFDATE=$P(X,U,4)
"RTN","ORWDXM3",80,0)
 I $L($P(X,U,5))  S LRFURG=$P(X,U,5)
"RTN","ORWDXM3",81,0)
 I $L($P(X,U,6))  S LRFSCH=$P(X,U,6)
"RTN","ORWDXM3",82,0)
 I $L($P(X,U,7))  S PSJNOPC=$P(X,U,7)
"RTN","ORWDXM3",83,0)
 I $L($P(X,U,8))  S GMRCNOPD=$P(X,U,8)
"RTN","ORWDXM3",84,0)
 I $L($P(X,U,9))  S GMRCNOAT=$P(X,U,9)
"RTN","ORWDXM3",85,0)
 I $L($P(X,U,10)) S GMRCREAF=$P(X,U,10)
"RTN","ORWDXM3",86,0)
 Q
"RTN","ORWDXM3",87,0)
DLGINFO(IEN,MODE)    ; return information about a dialog
"RTN","ORWDXM3",88,0)
 ; IEN=DlgIEN or ORIFN, MODE=0:Dlg,1:Copy,2:Change
"RTN","ORWDXM3",89,0)
 ; RESULT=DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",90,0)
 ; If MODE="1;T",don't check "PS MEDS" for transfer order
"RTN","ORWDXM3",91,0)
 ; PSMDGP=1: Unit/Dose  Group
"RTN","ORWDXM3",92,0)
 ; PSMDGP=2: OutPatient Group
"RTN","ORWDXM3",93,0)
 N X0,DLGIEN,TYP,FID,DGRP,PSMDGP,ISXF
"RTN","ORWDXM3",94,0)
 S PSMDGP=0,ISXF=""
"RTN","ORWDXM3",95,0)
 S ISXF=$P(MODE,";",2)
"RTN","ORWDXM3",96,0)
 S MODE=+MODE
"RTN","ORWDXM3",97,0)
 S DLGIEN=IEN I MODE,(ISXF'="T") D
"RTN","ORWDXM3",98,0)
 . S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",99,0)
 . I $P(^ORD(101.41,DLGIEN,0),U)="PS MEDS" D
"RTN","ORWDXM3",100,0)
 . . N PTCAT S PTCAT=$P($G(^OR(100,+IEN,0)),U,12)
"RTN","ORWDXM3",101,0)
 . . I PTCAT="I" S DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)),PSMDGP=1
"RTN","ORWDXM3",102,0)
 . . I PTCAT="O" S DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)),PSMDGP=2
"RTN","ORWDXM3",103,0)
 I MODE,(ISXF="T") S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",104,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),TYP=$P(X0,U,4),DGRP=$P(X0,U,5)
"RTN","ORWDXM3",105,0)
 I MODE S DGRP=+$P($G(^OR(100,+IEN,0)),U,11)
"RTN","ORWDXM3",106,0)
 ;JD NEW START 11/13/02
"RTN","ORWDXM3",107,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) S PSMDGP=1
"RTN","ORWDXM3",108,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)) S PSMDGP=2
"RTN","ORWDXM3",109,0)
 ;JD NEW END 11/13/02
"RTN","ORWDXM3",110,0)
 ; for copy or change, if the base dialog has changed, use it's info
"RTN","ORWDXM3",111,0)
 I MODE,$G(ORDIALOG),(+DLGIEN'=+ORDIALOG),(PSMDGP=0) D
"RTN","ORWDXM3",112,0)
 . S DLGIEN=+ORDIALOG,DGRP=$P(^ORD(101.41,+ORDIALOG,0),U,5)
"RTN","ORWDXM3",113,0)
 D FORMID^ORWDXM(.FID,DLGIEN)
"RTN","ORWDXM3",114,0)
 Q DLGIEN_U_TYP_U_FID_U_DGRP
"RTN","ORWDXM3",115,0)
 ;
"RTN","ORWDXM3",116,0)
CHKDSBL(LST,ID,MODE)  ; return message if dialog disabled
"RTN","ORWDXM3",117,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",118,0)
 ; LST=QL_REJECT + disabled message or unchanged
"RTN","ORWDXM3",119,0)
 N PKG
"RTN","ORWDXM3",120,0)
 S DLGIEN=+ID I MODE S DLGIEN=+$P($G(^OR(100,+ID,0)),U,5)
"RTN","ORWDXM3",121,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),X=$P(X0,U,3)
"RTN","ORWDXM3",122,0)
 I '$L(X),($P(X0,U,4)="Q") D  ; check default dialog
"RTN","ORWDXM3",123,0)
 . S DLGIEN=+$$DEFDLG^ORWDXQ($P(X0,U,5))
"RTN","ORWDXM3",124,0)
 . S X=$P($G(^ORD(101.41,DLGIEN,0)),U,3)
"RTN","ORWDXM3",125,0)
 I $L(X) D
"RTN","ORWDXM3",126,0)
 . I MODE D GETTXT^ORWORR(.LST,ID) S LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",127,0)
 . S LST(0)="8^0",LST(.5)="Dialog Disabled:  "_X
"RTN","ORWDXM3",128,0)
 S PKG=$P(X0,"^",7) I PKG]"",$P($G(^DIC(9.4,PKG,0)),"^",2)="SD",'$$PATCH^XPDUTL("SD*5.3*671") S LST(0)="8^0",LST(.5)="Dialog Disabled: VSE patch SD*5.3*671 not installed"
"RTN","ORWDXM3",129,0)
 Q
"RTN","ORWDXM3",130,0)
CHKVACT(LST,ID,MODE,ORNP)  ; return message if action not valid
"RTN","ORWDXM3",131,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",132,0)
 ; LST=QL_REJECT + invalid action message or unchanged
"RTN","ORWDXM3",133,0)
 Q:'MODE  ; not an action on an order
"RTN","ORWDXM3",134,0)
 N X,ACT S ACT=$S(MODE=1:"RW",MODE=2:"XX",1:"")
"RTN","ORWDXM3",135,0)
 D VALID^ORWDXA(.X,ID,ACT,ORNP)
"RTN","ORWDXM3",136,0)
 I $L(X) D GETTXT^ORWORR(.LST,ID) D
"RTN","ORWDXM3",137,0)
 . S LST(0)="8^0",LST(.5)=X,LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",138,0)
 Q
"RTN","ORWDXM3",139,0)
CHKCOPY(LST,ID,FLDS)  ; return message if can't copy this order
"RTN","ORWDXM3",140,0)
 ; ID=ORIFN;ACT FLDS=EventType in 7th piece
"RTN","ORWDXM3",141,0)
 ; LST=QL_REJECT + cannot copy message or unchanged
"RTN","ORWDXM3",142,0)
 I "^A^D^T^"'[(U_$E($P(FLDS,U,7))_U) Q             ; not event delayed
"RTN","ORWDXM3",143,0)
 N PKG S PKG=$P($G(^OR(100,+ID,0)),U,14)
"RTN","ORWDXM3",144,0)
 S PKG=$$NMSP^ORCD(PKG) I PKG="OR"!(PKG="PS") Q    ; xfer meds, generics
"RTN","ORWDXM3",145,0)
 N ORWCAT S ORWCAT=$P($G(^OR(100,+ID,0)),U,12)
"RTN","ORWDXM3",146,0)
 I ORWCAT="I",("^A^T^"[(U_$E($P(FLDS,U,7))_U)) Q   ; admit, xfer inpt
"RTN","ORWDXM3",147,0)
 I ORWCAT="O",$E($P(FLDS,U,7))="D" Q               ; discharge outpt
"RTN","ORWDXM3",148,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM3",149,0)
 I ORWCAT="I" S LST(.5)="inpatient order to outpatient -"
"RTN","ORWDXM3",150,0)
 I ORWCAT="O" S LST(.5)="outpatient order to inpatient -"
"RTN","ORWDXM3",151,0)
 S:$D(LST(.5)) LST(.5)="Cannot copy the following "_LST(.5)
"RTN","ORWDXM3",152,0)
 S LST(0)="8^0",LST(.7)=""
"RTN","ORWDXM3",153,0)
 Q
"RTN","ORWDXM3",154,0)
BLD4CHG(LST,ID,FLDS)  ; build responses for an edit
"RTN","ORWDXM3",155,0)
 ; ID=ORIFN;ACT FLDS=unused right now
"RTN","ORWDXM3",156,0)
 ; LST(0)=Qlvl^RespID(XOrderID)^DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",157,0)
 N OIDX,OI,CNT
"RTN","ORWDXM3",158,0)
 S (OI,OIDX,CNT)=0
"RTN","ORWDXM3",159,0)
 S:$D(^OR(100,+ID,4.5,"ID","ORDERABLE")) OIDX=$O(^OR(100,+ID,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXM3",160,0)
 I $D(^OR(100,+ID,4.5,OIDX)) D
"RTN","ORWDXM3",161,0)
 . F  S CNT=$O(^OR(100,+ID,4.5,OIDX,CNT)) Q:'CNT  D
"RTN","ORWDXM3",162,0)
 . . S OI=^(CNT) D VALDOI
"RTN","ORWDXM3",163,0)
 I +LST(0)=8 S LST(.5)="You can not change this order." Q
"RTN","ORWDXM3",164,0)
 S LST(0)="0^X"_ID_U_$$DLGINFO(+ID,2)
"RTN","ORWDXM3",165,0)
 S $P(LST(0),U,4)="X"
"RTN","ORWDXM3",166,0)
 Q
"RTN","ORWDXM3",167,0)
GETIVTYP() ;
"RTN","ORWDXM3",168,0)
 N RESULT,TYPEIEN
"RTN","ORWDXM3",169,0)
 S RESULT=""
"RTN","ORWDXM3",170,0)
 S TYPEIEN=$O(^ORD(101.41,"B","OR GTX IV TYPE","")) I TYPEIEN'>0 Q RESULT
"RTN","ORWDXM3",171,0)
 S RESULT=$G(ORDIALOG(TYPEIEN,1))
"RTN","ORWDXM3",172,0)
 Q RESULT
"RTN","ORWDXM3",173,0)
 ;
"RTN","ORWDXM3",174,0)
VALDOI ; Validate the Orderable Items
"RTN","ORWDXM3",175,0)
 N ORQUIT,ORPS
"RTN","ORWDXM3",176,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXM3",177,0)
 . S ORQUIT=1
"RTN","ORWDXM3",178,0)
 . S LST(0)="8^0"
"RTN","ORWDXM3",179,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDXM3",180,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS"))
"RTN","ORWDXM3",181,0)
 I $P(ORPS,U,1,4)="0^0^0^0",($P(ORPS,U,7)=0) S LST(0)="8^0"
"RTN","ORWDXM3",182,0)
 Q
"RTN","ORWDXM3",183,0)
VERDUR(ORDIALOG) ;
"RTN","ORWDXM3",184,0)
 ;check for duration value if a THEN conjunation is used
"RTN","ORWDXM3",185,0)
 N CONJ,CONVALUE,DUR,I,SUCC
"RTN","ORWDXM3",186,0)
 S SUCC=1
"RTN","ORWDXM3",187,0)
 S CONJ=$$PTR^ORCDPS1("AND/THEN")
"RTN","ORWDXM3",188,0)
 S DUR=$$PTR^ORCDPS1("DURATION")
"RTN","ORWDXM3",189,0)
 S I=0 F  S I=$O(ORDIALOG(CONJ,I)) Q:I'>0!(SUCC=0)  D
"RTN","ORWDXM3",190,0)
 . I $$UP^XLFSTR($E($G(ORDIALOG(CONJ,I)),1))="T" D
"RTN","ORWDXM3",191,0)
 . . I '$L($G(ORDIALOG(DUR,I))) S SUCC=0
"RTN","ORWDXM3",192,0)
 Q SUCC
"RTN","ORWDXM3",193,0)
 ;
"RTN","ORWDXM3",194,0)
VERORD(OIEN) ;
"RTN","ORWDXM3",195,0)
 N IFN,INFUSE,INFUID,ODG,ODP,ASSIV,SUCC,TYPE
"RTN","ORWDXM3",196,0)
 S SUCC=0,IFN=ORDIALOG
"RTN","ORWDXM3",197,0)
 S ODP=+$P($G(^ORD(101.41,+IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM3",198,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM3",199,0)
 I ODP'["PS" Q 1
"RTN","ORWDXM3",200,0)
 I ODP="PSH" Q 1
"RTN","ORWDXM3",201,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",202,0)
 I ODG="IV RX"!(ODG="TPN") D  Q SUCC
"RTN","ORWDXM3",203,0)
 .S TYPE=$$GETIVTYP
"RTN","ORWDXM3",204,0)
 .I TYPE=""
"RTN","ORWDXM3",205,0)
 .S PASSIV=$$IVRTECHK
"RTN","ORWDXM3",206,0)
 .I PASSIV=0
"RTN","ORWDXM3",207,0)
 .S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",208,0)
 .S INFUSE=$G(ORDIALOG(INFUID,1))
"RTN","ORWDXM3",209,0)
 .S SUCC=$$VALINF(TYPE,INFUSE)
"RTN","ORWDXM3",210,0)
 .I SUCC=0 Q
"RTN","ORWDXM3",211,0)
 .I TYPE="C" S SUCC=$$IVADFCHK(.ORDIALOG)
"RTN","ORWDXM3",212,0)
 I (ODP="PSJ")!(ODP="PSO"),ODG'="IV RX",ODG'="TPN" S SUCC=$$VERDUR(.ORDIALOG)
"RTN","ORWDXM3",213,0)
 Q SUCC
"RTN","ORWDXM3",214,0)
 ;
"RTN","ORWDXM3",215,0)
VALINF(TYPE,INFUSE) ;
"RTN","ORWDXM3",216,0)
 N SUCC
"RTN","ORWDXM3",217,0)
 S SUCC=0
"RTN","ORWDXM3",218,0)
 I TYPE="I" D  Q SUCC
"RTN","ORWDXM3",219,0)
 .I INFUSE="" S SUCC=1 Q
"RTN","ORWDXM3",220,0)
 .I $TR(INFUSE,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")["INFUSE OVER" S SUCC=1 Q
"RTN","ORWDXM3",221,0)
 .I $L(INFUSE)>4 Q
"RTN","ORWDXM3",222,0)
 Q 1
"RTN","ORWDXM3",223,0)
 ;
"RTN","ORWDXM3",224,0)
VALQO(IFN) ;Check to see if it's a good QO med
"RTN","ORWDXM3",225,0)
 ;If it's an IV QO: check if infusion rate entered
"RTN","ORWDXM3",226,0)
 ;If it's an UD QO: check if dosage entered
"RTN","ORWDXM3",227,0)
 ;regular order treated as good QO
"RTN","ORWDXM3",228,0)
 ;
"RTN","ORWDXM3",229,0)
 I IFN[";",($$UPCTCHK^ORWDXA(+IFN)) Q 0
"RTN","ORWDXM3",230,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM3",231,0)
 N ODP,ODG,INFUID,INFUSE,DSAGEID,SUCC,PASSIV,TYPE,PRIORID,DONEID,OK
"RTN","ORWDXM3",232,0)
 S SUCC=0
"RTN","ORWDXM3",233,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM3",234,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM3",235,0)
 I ODP'["PS" Q 1
"RTN","ORWDXM3",236,0)
 I ODP="PSH" Q 1
"RTN","ORWDXM3",237,0)
 ;check for DONE urgency/priority on Outpatient QO
"RTN","ORWDXM3",238,0)
 I ODG="O RX" D  Q:'OK 0
"RTN","ORWDXM3",239,0)
 . S OK=1,PRIORID=$O(^ORD(101.41,"B","OR GTX URGENCY",0)) Q:'PRIORID
"RTN","ORWDXM3",240,0)
 . S DONEID=$O(^ORD(101.42,"B","DONE",0)) Q:'DONEID
"RTN","ORWDXM3",241,0)
 . I $G(ORDIALOG(PRIORID,1))=DONEID S OK=0
"RTN","ORWDXM3",242,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",243,0)
 I ODG="IV RX"!(ODG="TPN") D
"RTN","ORWDXM3",244,0)
 . S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",245,0)
 . S TYPE=$$GETIVTYP
"RTN","ORWDXM3",246,0)
 . I TYPE="" Q
"RTN","ORWDXM3",247,0)
 . I $D(ORDIALOG(INFUID,1)) D
"RTN","ORWDXM3",248,0)
 . . I TYPE="I" D  Q
"RTN","ORWDXM3",249,0)
 . . . S INFUSE=$G(ORDIALOG(INFUID,1))
"RTN","ORWDXM3",250,0)
 . . . I INFUSE="" Q
"RTN","ORWDXM3",251,0)
 . . . I INFUSE["INFUSE OVER" S SUCC=1 Q
"RTN","ORWDXM3",252,0)
 . . . I $L(INFUSE)>4 Q
"RTN","ORWDXM3",253,0)
 . . . I +INFUSE>0 S INFUSE="INFUSE OVER "_INFUSE_" Minutes"
"RTN","ORWDXM3",254,0)
 . . . S ORDIALOG(INFUID,1)=INFUSE,SUCC=1
"RTN","ORWDXM3",255,0)
 . . S SUCC=1
"RTN","ORWDXM3",256,0)
 . ; additive frequency check/infusion rate checks for continuous orders
"RTN","ORWDXM3",257,0)
 . I TYPE="C" D  I SUCC=0 Q
"RTN","ORWDXM3",258,0)
 . . I $D(ORDIALOG(INFUID,1)) S SUCC=1 I SUCC=0 Q
"RTN","ORWDXM3",259,0)
 . . S SUCC=$$IVADFCHK(.ORDIALOG)
"RTN","ORWDXM3",260,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",261,0)
 . I '$D(ORDIALOG(INFUID,1)),TYPE="I" S SUCC=1
"RTN","ORWDXM3",262,0)
 . S PASSIV=$$IVRTECHK
"RTN","ORWDXM3",263,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",264,0)
 . I PASSIV=0 S SUCC=0
"RTN","ORWDXM3",265,0)
 . I SUCC=1,$$ISMISSFL(.ORDIALOG,TYPE)=1 S SUCC=0
"RTN","ORWDXM3",266,0)
 ;check dosage for UD QO
"RTN","ORWDXM3",267,0)
 I (ODP="PSJ")!(ODP="PSO"),ODG'="IV RX",ODG'="TPN" D
"RTN","ORWDXM3",268,0)
 . S DSAGEID=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDXM3",269,0)
 . I $D(ORDIALOG(DSAGEID,1)) S SUCC=1
"RTN","ORWDXM3",270,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",271,0)
 . ;
"RTN","ORWDXM3",272,0)
 . S SUCC=$$VERDUR(.ORDIALOG)
"RTN","ORWDXM3",273,0)
 ;
"RTN","ORWDXM3",274,0)
 I SUCC=1,$P($G(^ORD(101.41,IFN,5)),U,8) D
"RTN","ORWDXM3",275,0)
 .N COMMID,WPCNT
"RTN","ORWDXM3",276,0)
 .S COMMID=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWDXM3",277,0)
 .S COMMID=$O(^ORD(101.41,IFN,6,"D",COMMID,0))
"RTN","ORWDXM3",278,0)
 .I COMMID S WPCNT=0 F  S WPCNT=$O(^ORD(101.41,IFN,6,COMMID,2,WPCNT)) Q:'WPCNT!('SUCC)  D
"RTN","ORWDXM3",279,0)
 ..I ^ORD(101.41,IFN,6,COMMID,2,WPCNT,0)["^" S SUCC=0
"RTN","ORWDXM3",280,0)
 Q SUCC
"RTN","ORWDXM3",281,0)
 ;
"RTN","ORWDXM3",282,0)
IVRTECHK() ;
"RTN","ORWDXM3",283,0)
 N RTIEN,RTVALUE,RESULT
"RTN","ORWDXM3",284,0)
 N CNT,NUM,ORDERIDS,OIIEN,OTYPE,ROUTE
"RTN","ORWDXM3",285,0)
 S CNT=0,RESULT=0
"RTN","ORWDXM3",286,0)
 S RTIEN=+$P($G(ORDIALOG("B","ROUTE")),U,2) I RTIEN'>0 Q RESULT
"RTN","ORWDXM3",287,0)
 S RTVALUE=+$G(ORDIALOG(RTIEN,1)) I RTVALUE'>0 Q RESULT
"RTN","ORWDXM3",288,0)
 F OTYPE="SOLUTION","ADDITIVE" D
"RTN","ORWDXM3",289,0)
 .S OIIEN=+$P($G(ORDIALOG("B",OTYPE)),U,2) I OIIEN>0 D
"RTN","ORWDXM3",290,0)
 ..S NUM=0 F  S NUM=$O(ORDIALOG(OIIEN,NUM)) Q:NUM'>0  I +$G(ORDIALOG(OIIEN,NUM))>0 D
"RTN","ORWDXM3",291,0)
 ...S CNT=CNT+1,ORDERIDS(CNT)=ORDIALOG(OIIEN,NUM)
"RTN","ORWDXM3",292,0)
 I $D(ORDERIDS)=0 Q
"RTN","ORWDXM3",293,0)
 S ROUTE=$$IVQOVAL^ORWDPS33(.ORDERIDS,RTVALUE)
"RTN","ORWDXM3",294,0)
 I ROUTE="" S ORDIALOG(RTIEN,1)=ROUTE
"RTN","ORWDXM3",295,0)
 I ROUTE'="" S RESULT=1
"RTN","ORWDXM3",296,0)
 ;K ^TMP($J,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",297,0)
 ;D ALL^PSS51P2(RTVALUE,,,,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",298,0)
 ;I +^TMP($J,"ORWDXM3 IVRTECHK",RTVALUE,6)'=1 S ORDIALOG(RTIEN,1)="",RESULT=0
"RTN","ORWDXM3",299,0)
 ;K ^TMP($J,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",300,0)
 Q RESULT
"RTN","ORWDXM3",301,0)
 ;
"RTN","ORWDXM3",302,0)
ISUDQO(ORY,DLGID) ;True: is unit dose quick order
"RTN","ORWDXM3",303,0)
 S ORY=0
"RTN","ORWDXM3",304,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORWDXM3",305,0)
 N CLODGRP,CLIVDGRP,UDGRP1,UDGRP2,DLGTYP,DLGGRP
"RTN","ORWDXM3",306,0)
 S UDGRP1=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDXM3",307,0)
 S UDGRP2=$O(^ORD(100.98,"B","I RX",0))
"RTN","ORWDXM3",308,0)
 S CLODGRP=$O(^ORD(100.98,"B","CLINIC MEDICATIONS",""))
"RTN","ORWDXM3",309,0)
 S CLIVDGRP=$O(^ORD(100.98,"B","CLINIC INFUSIONS",""))
"RTN","ORWDXM3",310,0)
 S DLGTYP=$P($G(^ORD(101.41,DLGID,0)),U,4)
"RTN","ORWDXM3",311,0)
 S DLGGRP=$P($G(^ORD(101.41,DLGID,0)),U,5)
"RTN","ORWDXM3",312,0)
 I (DLGTYP="Q"),((DLGGRP=UDGRP1)!(DLGGRP=UDGRP2)!(DLGGRP=CLODGRP)!(DLGGRP=CLIVDGRP)) S ORY=1
"RTN","ORWDXM3",313,0)
 Q
"RTN","ORWDXM3",314,0)
 ;
"RTN","ORWDXM3",315,0)
SDRTCVER(ORDIALOG) ;
"RTN","ORWDXM3",316,0)
 ;Return to Clinic QO verifier
"RTN","ORWDXM3",317,0)
 I +$$VAL^ORCD("NUMBER OF APPOINTMENTS")>1,+$$VAL^ORCD("INTERVAL")<1 Q 0
"RTN","ORWDXM3",318,0)
 I +$$VAL^ORCD("NUMBER OF APPOINTMENTS")=1,+$$VAL^ORCD("INTERVAL")>0 Q 0
"RTN","ORWDXM3",319,0)
 Q 1
"RTN","ORWDXM3",320,0)
 ;
"RTN","ORWDXM4")
0^5^B43793101
"RTN","ORWDXM4",1,0)
ORWDXM4 ; SLC/KCM - Order Dialogs, Menus;05/09/17 ;05/10/17  07:48
"RTN","ORWDXM4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,215,296,280,394,350,434**;Dec 17, 1997;Build 35
"RTN","ORWDXM4",3,0)
 ;
"RTN","ORWDXM4",4,0)
SETUP ; -- setup dialog (continued from ORWDXM1)
"RTN","ORWDXM4",5,0)
 ;    if xfer med order, setup ORDIALOG differently
"RTN","ORWDXM4",6,0)
 I ORWMODE,$$ISMED(ORIT),$$CHGSTS(ORCAT,ORIT) D MEDXFER Q
"RTN","ORWDXM4",7,0)
 ;    get base dialog (based on display group) & location of responses
"RTN","ORWDXM4",8,0)
 I ORWMODE D
"RTN","ORWDXM4",9,0)
 . S ORDG=$P(^OR(100,+ORIT,0),U,11),ORDIALOG=+$P(^(0),U,5)
"RTN","ORWDXM4",10,0)
 . S RSPREF="^OR(100,"_+ORIT_",4.5)"
"RTN","ORWDXM4",11,0)
 E  D
"RTN","ORWDXM4",12,0)
 . N X0 S X0=$G(^ORD(101.41,ORIT,0))
"RTN","ORWDXM4",13,0)
 . S ORDIALOG=$S($P(X0,U,4)="D":ORIT,1:0)
"RTN","ORWDXM4",14,0)
 . S ORDG=$P(X0,U,5) Q:'ORDG
"RTN","ORWDXM4",15,0)
 . I 'ORDIALOG S ORDIALOG=+$$DEFDLG^ORWDXQ(ORDG)
"RTN","ORWDXM4",16,0)
 . S RSPREF="^ORD(101.41,"_ORIT_",6)"
"RTN","ORWDXM4",17,0)
 ;    setup the ORDIALOG array
"RTN","ORWDXM4",18,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXM4",19,0)
 D GETORDER^ORCD(RSPREF)
"RTN","ORWDXM4",20,0)
 Q
"RTN","ORWDXM4",21,0)
SETUPS ; -- setup for specific types of dialogs (continued from ORWDXM1)
"RTN","ORWDXM4",22,0)
 ; pharmacy uses ORCAT to know order package
"RTN","ORWDXM4",23,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0)) S ORCAT="O"
"RTN","ORWDXM4",24,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) D
"RTN","ORWDXM4",25,0)
 . I ORCAT="O",'ORIMO S ORWPSWRG="" ; not auto-ack, pt not inpt
"RTN","ORWDXM4",26,0)
 . S ORCAT="I"
"RTN","ORWDXM4",27,0)
 I ORCAT="O",$D(OREVENT("EFFECTIVE")),(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D
"RTN","ORWDXM4",28,0)
 . S ORDIALOG($O(^ORD(101.41,"B",X,0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDXM4",29,0)
 ;p394 force interactive dialog for imaging QO for female of child-bearing age.
"RTN","ORWDXM4",30,0)
 N ORRAORD S ORRAORD=0 ;set is radiology flag to false (0)
"RTN","ORWDXM4",31,0)
 I ORDIALOG=$O(^ORD(101.41,"B","RA OERR EXAM",0)) D
"RTN","ORWDXM4",32,0)
 . N ORPRMPT1,ORPRMPT2,ORCODE S ORRAORD=1
"RTN","ORWDXM4",33,0)
 . Q:($G(ORTYPE)'="Q")!($G(ORSEX)'="F")
"RTN","ORWDXM4",34,0)
 . S ORPRMPT1=$O(^ORD(101.41,"B","OR GTX PREGNANT",0)),ORPRMPT2=$P($G(ORDIALOG(ORPRMPT1)),"^")
"RTN","ORWDXM4",35,0)
 . S ORCODE=$G(^ORD(101.41,ORDIALOG,10,ORPRMPT2,7)) N Y S Y="Y" X ORCODE K ORCODE
"RTN","ORWDXM4",36,0)
 . S:Y="Y" ORWPSWRG="" ;
"RTN","ORWDXM4",37,0)
 I ORRAORD D RA^ORWDXM2 G XENV
"RTN","ORWDXM4",38,0)
 I ORDIALOG=$O(^ORD(101.41,"B","LR OTHER LAB TESTS",0))   D LR^ORWDXM2 G XENV
"RTN","ORWDXM4",39,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW1",0))                 D DO^ORWDXM2 G XENV
"RTN","ORWDXM4",40,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW2",0))                 D EL^ORWDXM2 G XENV
"RTN","ORWDXM4",41,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0))        D UD^ORWDXM2 G XENV
"RTN","ORWDXM4",42,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR CLINIC OE",0))        D UD^ORWDXM2 G XENV
"RTN","ORWDXM4",43,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0)) D IV^ORWDXM2 G XENV
"RTN","ORWDXM4",44,0)
 I ORDIALOG=$O(^ORD(101.41,"B","CLINIC OR PAT FLUID OE",0)) D IV^ORWDXM2 G XENV
"RTN","ORWDXM4",45,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0))             D OP^ORWDXM2 G XENV
"RTN","ORWDXM4",46,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO SUPPLY",0))           D OP^ORWDXM2 G XENV
"RTN","ORWDXM4",47,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PS MEDS",0))              D PS^ORWDPS3 G XENV
"RTN","ORWDXM4",48,0)
 I ORDIALOG=$O(^ORD(101.41,"B","VBEC BLOOD BANK",0))      D VB^ORWDXM4 G XENV
"RTN","ORWDXM4",49,0)
 I ORDIALOG=$O(^ORD(101.41,"B","SD RTC",0))      D RTC^ORWDSD1 G XENV
"RTN","ORWDXM4",50,0)
 I ORDIALOG=$O(^ORD(101.41,"B","GMRAOR ALLERGY ENTER/EDIT",0)) S ORQUIT=1
"RTN","ORWDXM4",51,0)
XENV ;    end case
"RTN","ORWDXM4",52,0)
 Q
"RTN","ORWDXM4",53,0)
MEDXFER ; -- setup ORDIALOG for a med that is transferred (from SETUP)
"RTN","ORWDXM4",54,0)
 ;
"RTN","ORWDXM4",55,0)
 ; use ORWDPS3 if OR*3*94 installed
"RTN","ORWDXM4",56,0)
 I ORWP94 G MEDXFER^ORWDPS3
"RTN","ORWDXM4",57,0)
 ;
"RTN","ORWDXM4",58,0)
 N UDLG,FDLG,ODLG,DLG,OI K ^TMP("PS",$J)
"RTN","ORWDXM4",59,0)
 S UDLG=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORWDXM4",60,0)
 S FDLG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM4",61,0)
 S ODLG=$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORWDXM4",62,0)
 S DLG=$P($G(^OR(100,+ORIT,0)),U,5)
"RTN","ORWDXM4",63,0)
 S ORDIALOG=$S(+DLG=UDLG:ODLG,+DLG=ODLG:UDLG,+DLG=FDLG:FDLG,1:0)
"RTN","ORWDXM4",64,0)
 I 'ORDIALOG D SETERR(ORIT,"Incomplete Order Record") Q
"RTN","ORWDXM4",65,0)
 S ORDG=+$P(^ORD(101.41,ORDIALOG,0),U,5)
"RTN","ORWDXM4",66,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXM4",67,0)
 D GETORDER^ORCD("^OR(100,"_+ORIT_",4.5)")
"RTN","ORWDXM4",68,0)
 S OI=$$VAL^ORCD("MEDICATION")
"RTN","ORWDXM4",69,0)
 I '$$MEDOK(OI,ORCAT) D SETERR(ORIT,"This may not be ordered as an "_$S(ORCAT="I":"in",1:"out")_"patient drug.") Q
"RTN","ORWDXM4",70,0)
 I $G(^ORD(101.43,OI,.1)),(^(.1)<$$NOW^XLFDT) D SETERR(ORIT,"This may no longer be ordered.") Q
"RTN","ORWDXM4",71,0)
 K ORDIALOG($$PTR("DISPENSE DRUG"),1)
"RTN","ORWDXM4",72,0)
 K ORDIALOG($$PTR("WORD PROCESSING 1"),1)
"RTN","ORWDXM4",73,0)
 I ORDIALOG=ODLG D IN2OUT  ; could call  IN^ORCMED except for writes
"RTN","ORWDXM4",74,0)
 I ORDIALOG=UDLG D OUT2IN  ; could call OUT^ORCMED except for writes
"RTN","ORWDXM4",75,0)
 Q
"RTN","ORWDXM4",76,0)
IN2OUT ; -- make inpatient responses into outpatient
"RTN","ORWDXM4",77,0)
 N I,DDRUG,PKGID,DOSE
"RTN","ORWDXM4",78,0)
 S DOSE=$G(ORDIALOG($$PTR("INSTRUCTIONS"),1))
"RTN","ORWDXM4",79,0)
 F I="INSTRUCTIONS","UNITS/DOSE","FREE TEXT","DISPENSE DRUG" K ORDIALOG($$PTR(I),1)
"RTN","ORWDXM4",80,0)
 S PKGID=$G(^OR(100,+ORIT,4))_";"_$P(^(0),U,12)
"RTN","ORWDXM4",81,0)
 D OEL^PSOORRL(+ORVP,PKGID) S DDRUG=$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORWDXM4",82,0)
 I $P(DDRUG,U,3) S ORDIALOG($$PTR("DISPENSE DRUG"),1)=$P(DDRUG,U,3)
"RTN","ORWDXM4",83,0)
 ;    keep instructions if IV med, otherwise use units returned
"RTN","ORWDXM4",84,0)
 I $P($G(^ORD(101.43,OI,"PS")),U)=2 S ORDIALOG($$PTR("INSTRUCTIONS"),1)=DOSE
"RTN","ORWDXM4",85,0)
 E  S:$P(DDRUG,U,2) ORDIALOG($$PTR("INSTRUCTIONS"),1)=$P(DDRUG,U,2)
"RTN","ORWDXM4",86,0)
 ;    change orderable item if new orderable item returned
"RTN","ORWDXM4",87,0)
 I $P(DDRUG,U,4),$P(DDRUG,U,4)'=+$P($G(^ORD(101.43,OI,0)),U,2) D
"RTN","ORWDXM4",88,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(DDRUG,U,4)_";99PSP",0))
"RTN","ORWDXM4",89,0)
 . S:OI ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORWDXM4",90,0)
 Q
"RTN","ORWDXM4",91,0)
OUT2IN ; make outpatient responses into inpatient
"RTN","ORWDXM4",92,0)
 N ORP,ORI,PROMPT,PKGID,DDRUG,ONE
"RTN","ORWDXM4",93,0)
 D CHANGED^ORCDPS("XFR") ; Kill extra values not in inpt dialog
"RTN","ORWDXM4",94,0)
 S PKGID=$G(^OR(100,+ORIT,4))_";"_$P(^(0),U,12)
"RTN","ORWDXM4",95,0)
 D OEL^PSOORRL(+ORVP,PKGID) S DDRUG=$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORWDXM4",96,0)
 S:$P(DDRUG,U,3) ORDIALOG($$PTR("DISPENSE DRUG"),1)=$P(DDRUG,U,3)
"RTN","ORWDXM4",97,0)
 I $P(DDRUG,U,4),$P(DDRUG,U,4)'=+$P($G(^ORD(101.43,+OI,0)),U,2) D
"RTN","ORWDXM4",98,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(DDRUG,U,4)_";99PSP",0))
"RTN","ORWDXM4",99,0)
 . S:OI ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORWDXM4",100,0)
 S ONE=$O(ORDIALOG($$PTR("INSTRUCTIONS"),0)) ; first inst
"RTN","ORWDXM4",101,0)
 F ORP="ROUTE","SCHEDULE" D
"RTN","ORWDXM4",102,0)
 . S ORI=0,PROMPT=$$PTR(ORP)
"RTN","ORWDXM4",103,0)
 . F  S ORI=$O(ORDIALOG(PROMPT,ORI)) Q:ORI'>0  I ORDIALOG(PROMPT,ORI)=""!(ORI>ONE) K ORDIALOG(PROMPT,ORI)
"RTN","ORWDXM4",104,0)
 Q
"RTN","ORWDXM4",105,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME (copied from ORCMED)
"RTN","ORWDXM4",106,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORWDXM4",107,0)
 ;
"RTN","ORWDXM4",108,0)
MEDOK(OI,CAT)   ; return 1 if med may be ordered for this patient category
"RTN","ORWDXM4",109,0)
 N P S P=$S(CAT="I":1,1:2)
"RTN","ORWDXM4",110,0)
 Q $P($G(^ORD(101.43,+OI,"PS")),U,P)
"RTN","ORWDXM4",111,0)
 ;
"RTN","ORWDXM4",112,0)
CHGSTS(ECAT,IFN)        ; return 1 if out to in or in to out
"RTN","ORWDXM4",113,0)
 N OCAT
"RTN","ORWDXM4",114,0)
 S OCAT=$P($G(^OR(100,+IFN,0)),U,12)
"RTN","ORWDXM4",115,0)
 Q OCAT'=ECAT
"RTN","ORWDXM4",116,0)
 ;
"RTN","ORWDXM4",117,0)
ISMED(IFN)      ; return 1 if this is a pharmacy order
"RTN","ORWDXM4",118,0)
 N PKG S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM4",119,0)
 Q $$NMSP^ORCD(PKG)="PS"
"RTN","ORWDXM4",120,0)
SETERR(ID,X)       ; sets LST to rejection with error message
"RTN","ORWDXM4",121,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM4",122,0)
 S LST(0)="8^0",LST(.5)=X,LST(.6)=""
"RTN","ORWDXM4",123,0)
 Q
"RTN","ORWDXM4",124,0)
VB ; setup environment for VBECS
"RTN","ORWDXM4",125,0)
 ; -- setup ORTIME, ORIMTIME arrays
"RTN","ORWDXM4",126,0)
 D GETIMES^ORCDLR1
"RTN","ORWDXM4",127,0)
 ; -- setup ORCOMP, ORTEST, and ORTAS
"RTN","ORWDXM4",128,0)
 S (ORCOMP,ORTEST,ORTAS)=""
"RTN","ORWDXM4",129,0)
 N P,PROMPT,I,X,X0
"RTN","ORWDXM4",130,0)
 S P=+$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM4",131,0)
 S I=0 F  S I=$O(ORDIALOG(P,I)) Q:I<1  S X=+$G(ORDIALOG(P,I)) D
"RTN","ORWDXM4",132,0)
 . S X0=$G(^ORD(101.43,X,"VB")),X=+$P($G(^(0)),U,2)
"RTN","ORWDXM4",133,0)
 . I $P(X0,U) S ORCOMP=ORCOMP_$S($L(ORCOMP):U,1:"")_X Q
"RTN","ORWDXM4",134,0)
 . S ORTEST=ORTEST_$S($L(ORTEST):U,1:"")_X
"RTN","ORWDXM4",135,0)
 . I X=2 S ORTAS=1
"RTN","ORWDXM4",136,0)
 I '$D(ORTEST("Lab CollSamp")) D
"RTN","ORWDXM4",137,0)
 . N I,V,T,LC S LC=1
"RTN","ORWDXM4",138,0)
 . F I=1:1:$L(ORTEST,U) S V=+$P(ORTEST,U,I) D  Q:'LC  ;no LC samp
"RTN","ORWDXM4",139,0)
 .. S T=$$LAB60^ORCDVBEC(V) ;VBECS ID -> #60 ien
"RTN","ORWDXM4",140,0)
 .. I '$P($G(^LAB(60,T,0)),U,9) S LC=0 Q
"RTN","ORWDXM4",141,0)
 . S ORTEST("Lab CollSamp")=LC
"RTN","ORWDXM4",142,0)
 I '$D(ORTIME),'$D(ORIMTIME) D GETIMES^ORCDLR1
"RTN","ORWDXM4",143,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX COLLECTION TYPE",0))
"RTN","ORWDXM4",144,0)
 I $D(ORDIALOG(PROMPT,1)) S ORCOLLCT=ORDIALOG(PROMPT,1) I 1
"RTN","ORWDXM4",145,0)
 E  S EDITONLY=0,ORCOLLCT=$$COLLTYPE^ORCDLR1
"RTN","ORWDXM4",146,0)
 I ORCOLLCT="I" D
"RTN","ORWDXM4",147,0)
 . S PROMPT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXM4",148,0)
 . D LRICTMOK^ORWDXM2
"RTN","ORWDXM4",149,0)
 Q
"RTN","ORWDXM4",150,0)
VBASK(I) ; set the ORASK variable for child component prompts in VBECS order
"RTN","ORWDXM4",151,0)
 I ORDIALOG'=$O(^ORD(101.41,"B","VBEC BLOOD BANK",0)) Q
"RTN","ORWDXM4",152,0)
 N P S P=+$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM4",153,0)
 N OI S OI=+$G(ORDIALOG(P,I))
"RTN","ORWDXM4",154,0)
 I +$G(^ORD(101.43,+$G(OI),"VB")) S ORASK=1
"RTN","ORWDXM4",155,0)
 Q
"RTN","ORWDXM4",156,0)
VBQO(IFN) ;Check to see if it's a good VBECS QO
"RTN","ORWDXM4",157,0)
 ;regular order treated as good QO
"RTN","ORWDXM4",158,0)
 ;
"RTN","ORWDXM4",159,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM4",160,0)
 N ODP,ODG,RESULT,P,TNS,I
"RTN","ORWDXM4",161,0)
 S RESULT=0
"RTN","ORWDXM4",162,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM4",163,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM4",164,0)
 I ODP'["VBEC" Q 1
"RTN","ORWDXM4",165,0)
 Q RESULT
"RTN","ORY434")
0^^B11036555
"RTN","ORY434",1,0)
ORY434 ;ISL/JLC - ENVIRONMENT CHECK FOR CPRS VERSION 31A ;06/27/17
"RTN","ORY434",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**434**;Dec 17, 1997;Build 35
"RTN","ORY434",3,0)
 ;
"RTN","ORY434",4,0)
 ;
"RTN","ORY434",5,0)
 Q
"RTN","ORY434",6,0)
POST ;;SET THE MOB DLL VERSION
"RTN","ORY434",7,0)
 ;D PUT^XPAR("PKG","OR MOB DLL VERSION",1,"2.0.17.0")
"RTN","ORY434",8,0)
 D PUT^XPAR("PKG","OR MOB DLL NAME",1,"OrderCom.dll")
"RTN","ORY434",9,0)
 I $$PATCH^XPDUTL("SD*5.3*671") D ADD^XPDPROT("OR EVSEND SD","SD RECEIVE OR","",1)
"RTN","ORY434",10,0)
 N TEXT
"RTN","ORY434",11,0)
 S TEXT(1)=" "
"RTN","ORY434",12,0)
 S TEXT(2)="  Adding 'Clinic Scheduling' Display Group to"
"RTN","ORY434",13,0)
 S TEXT(3)="  the 'All Services' Display Group..."
"RTN","ORY434",14,0)
 D MES^XPDUTL(.TEXT)
"RTN","ORY434",15,0)
 D SETDG
"RTN","ORY434",16,0)
 D MES^XPDUTL("  DONE")
"RTN","ORY434",17,0)
 S TEXT(1)=" "
"RTN","ORY434",18,0)
 S TEXT(2)="  Adding 'Clinic Scheduling' Display Group to"
"RTN","ORY434",19,0)
 S TEXT(3)="  parameter 'ORWOR CATEGORY SEQUENCE'..."
"RTN","ORY434",20,0)
 D MES^XPDUTL(.TEXT)
"RTN","ORY434",21,0)
 D SETPAR
"RTN","ORY434",22,0)
 D MES^XPDUTL("  DONE")
"RTN","ORY434",23,0)
 ;SEND NEW NOTIFICATION
"RTN","ORY434",24,0)
 N ENT,EXIT,INST,ORMSG,LINE,ORI
"RTN","ORY434",25,0)
 D BMES^XPDUTL("  Loading parameter values for new notification...")
"RTN","ORY434",26,0)
 S ENT="PKG.ORDER ENTRY/RESULTS REPORTING"
"RTN","ORY434",27,0)
 S ORI=91 D  S EXIT=0
"RTN","ORY434",28,0)
 . F LINE=1:1 Q:$G(EXIT)  D
"RTN","ORY434",29,0)
 .. N TEXT,ORERROR
"RTN","ORY434",30,0)
 .. S TEXT=$P($T(PARAM+LINE),";;",2)
"RTN","ORY434",31,0)
 .. S INST=$P($G(^ORD(100.9,ORI,0)),U,1)
"RTN","ORY434",32,0)
 .. I $P(TEXT," ")="ORB" D  Q
"RTN","ORY434",33,0)
 ... D EN^XPAR(ENT,$P(TEXT,U),INST,$P(TEXT,U,2),.ORERROR)  ;ICR #2336
"RTN","ORY434",34,0)
 ... I +ORERROR D
"RTN","ORY434",35,0)
 .... S ORMSG(1)=" ",EXIT=2
"RTN","ORY434",36,0)
 .... S ORMSG(2)="ERROR: Unable to configure the new "_INST_" notification"
"RTN","ORY434",37,0)
 .... S ORMSG(3)="Kernel Parameter Tools Error #"_+ORERROR_": "_$P(ORERROR,U,2)
"RTN","ORY434",38,0)
 .... D BMES^XPDUTL(.ORMSG)
"RTN","ORY434",39,0)
 .. I TEXT="" S EXIT=1
"RTN","ORY434",40,0)
 D:$G(EXIT)<2 MES^XPDUTL("  Finished loading new notification values")
"RTN","ORY434",41,0)
 Q
"RTN","ORY434",42,0)
PARAM ;PARAMETER VALUES TO LOAD
"RTN","ORY434",43,0)
 ;;ORB ARCHIVE PERIOD^30
"RTN","ORY434",44,0)
 ;;ORB DELETE MECHANISM^Individual Recipient
"RTN","ORY434",45,0)
 ;;ORB FORWARD BACKUP REVIEWER^0
"RTN","ORY434",46,0)
 ;;ORB FORWARD SUPERVISOR^0
"RTN","ORY434",47,0)
 ;;ORB FORWARD SURROGATES^0
"RTN","ORY434",48,0)
 ;;ORB PROCESSING FLAG^Disabled
"RTN","ORY434",49,0)
 ;;ORB PROVIDER RECIPIENTS^O
"RTN","ORY434",50,0)
 ;;ORB URGENCY^High
"RTN","ORY434",51,0)
 Q
"RTN","ORY434",52,0)
SETDG ;
"RTN","ORY434",53,0)
 N DA,DIC,DLAYGO,ORDG,X
"RTN","ORY434",54,0)
 S ORDG=$O(^ORD(100.98,"B","ALL SERVICES",0)) Q:'ORDG
"RTN","ORY434",55,0)
 S X=$O(^ORD(100.98,"B","CLINIC SCHEDULING",0)),DA(1)=ORDG I 'X D MES^XPDUTL("  'Clinic Scheduling' display group not found") Q
"RTN","ORY434",56,0)
 I $O(^ORD(100.98,DA(1),1,"B",X,0)) D MES^XPDUTL("  Display group already attached")  Q  ;not first install - done.
"RTN","ORY434",57,0)
 S:'$D(^ORD(100.98,DA(1),1,0)) ^(0)="^100.981P^^"
"RTN","ORY434",58,0)
 S DIC="^ORD(100.98,"_DA(1)_",1,",DIC(0)="NLX",DLAYGO=100.98
"RTN","ORY434",59,0)
 S X="CLINIC SCHEDULING" D ^DIC
"RTN","ORY434",60,0)
 Q
"RTN","ORY434",61,0)
SETPAR ;
"RTN","ORY434",62,0)
 N X
"RTN","ORY434",63,0)
 I '$D(^ORD(100.98,"B","CLINIC SCHEDULING")) D MES^XPDUTL("  Display group already attached") Q
"RTN","ORY434",64,0)
 S X=0,X=$O(^ORD(100.98,"B","CLINIC SCHEDULING",X)) Q:'X  D
"RTN","ORY434",65,0)
 . D PUT^XPAR("PKG","ORWOR CATEGORY SEQUENCE",135,X)
"RTN","ORY434",66,0)
 Q
"RTN","ORY434",67,0)
SENDDLG(ANAME) ;Entries from 101.41 to send
"RTN","ORY434",68,0)
 ;I ANAME="OR GTX CLINIC LOCATION" Q 1
"RTN","ORY434",69,0)
 I ANAME="OR GTX SD COMMENT" Q 1
"RTN","ORY434",70,0)
 I ANAME="OR GTX APPT NUM" Q 1
"RTN","ORY434",71,0)
 I ANAME="OR GTX SCH INTERVAL" Q 1
"RTN","ORY434",72,0)
 I ANAME="OR GTX PRE REQ" Q 1
"RTN","ORY434",73,0)
 I ANAME="SD RTC" Q 1
"RTN","ORY434",74,0)
 Q 0
"UP",100,100.008,-1)
100^8
"UP",100,100.008,0)
100.008
"VER")
8.0^22.2
"^DD",100,100.008,40,0)
DISPOSITION BY^P200'^VA(200,^4;1^Q
"^DD",100,100.008,40,3)
Enter the person who dispositioned this order. DO NOT EDIT THIS FIELD
"^DD",100,100.008,40,21,0)
^^2^2^3170620^
"^DD",100,100.008,40,21,1,0)
This is the person who dispositioned the order in the scheduling package. 
"^DD",100,100.008,40,21,2,0)
Only applies to Scheduling orders.
"^DD",100,100.008,40,"DT")
3170629
"^DD",100,100.008,41,0)
DISPOSITION DATE/TIME^D^^4;2^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",100,100.008,41,3)
Enter the date/time the request was dispositioned. DO NOT EDIT THIS FIELD
"^DD",100,100.008,41,21,0)
^^2^2^3170620^
"^DD",100,100.008,41,21,1,0)
This is the date/time a scheduler dispositioned an appointment request 
"^DD",100,100.008,41,21,2,0)
in the scheduling package. Only applies to Return to Clinic Order.
"^DD",100,100.008,41,"DT")
3170629
"^DD",100.9,100.9,0)
FIELD^^2^13
"^DD",100.9,100.9,0,"DDA")
N
"^DD",100.9,100.9,0,"DT")
3140915
"^DD",100.9,100.9,0,"IX","B",100.9,.01)

"^DD",100.9,100.9,0,"IX","C",100.9,.02)

"^DD",100.9,100.9,0,"IX","D",100.9,.03)

"^DD",100.9,100.9,0,"NM","OE/RR NOTIFICATIONS")

"^DD",100.9,100.9,0,"PT",100.21019,.01)

"^DD",100.9,100.9,0,"PT",860.22,3)

"^DD",100.9,100.9,0,"PT",21695.2,.1)

"^DD",100.9,100.9,0,"PT",21695.52,.01)

"^DD",100.9,100.9,0,"VRPK")
OR
"^DD",100.9,100.9,.001,0)
NUMBER^NJ9,0X^^ ^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N)!('$$VALNUM^ORBINPTR(X)) X
"^DD",100.9,100.9,.001,3)
Enter your station number, followed by 01 to 99. For example, 66001. Numbers 1-9999 are reserved for National notifications only.
"^DD",100.9,100.9,.001,21,0)
^^11^11^3121106^
"^DD",100.9,100.9,.001,21,1,0)
This is the internal entry number assigned to a notification.  Entries
"^DD",100.9,100.9,.001,21,2,0)
1 through 9999 are reserved for National release by the OE/RR 
"^DD",100.9,100.9,.001,21,3,0)
Notifications package.
"^DD",100.9,100.9,.001,21,4,0)
 
"^DD",100.9,100.9,.001,21,5,0)
For local site-defined notifications, the internal entry number must be 
"^DD",100.9,100.9,.001,21,6,0)
specific to your VAMC in the following format:
"^DD",100.9,100.9,.001,21,7,0)
 
"^DD",100.9,100.9,.001,21,8,0)
<your station number><incremental notification number 01-99>
"^DD",100.9,100.9,.001,21,9,0)
 
"^DD",100.9,100.9,.001,21,10,0)
For example, if your site is number 456, your first locally created 
"^DD",100.9,100.9,.001,21,11,0)
notification would be 45601.                         
"^DD",100.9,100.9,.001,23,0)
^.001^3^3^3121106^^^^
"^DD",100.9,100.9,.001,23,1,0)
This field is used by DHCP packages triggering notifications (Lab, MAS, etc)
"^DD",100.9,100.9,.001,23,2,0)
to send the correct message and parameters to OE/RR.  These numbers must not
"^DD",100.9,100.9,.001,23,3,0)
be altered in any fashion.
"^DD",100.9,100.9,.001,"DT")
3121026
"^DD",100.9,100.9,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",100.9,100.9,.01,1,0)
^.1
"^DD",100.9,100.9,.01,1,1,0)
100.9^B
"^DD",100.9,100.9,.01,1,1,1)
S ^ORD(100.9,"B",$E(X,1,30),DA)=""
"^DD",100.9,100.9,.01,1,1,2)
K ^ORD(100.9,"B",$E(X,1,30),DA)
"^DD",100.9,100.9,.01,1,2,0)
^^TRIGGER^100.9^.02
"^DD",100.9,100.9,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^ORD(100.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="OR" X ^DD(100.9,.01,1,2,1.4)
"^DD",100.9,100.9,.01,1,2,1.4)
S DIH=$S($D(^ORD(100.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=100.9,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",100.9,100.9,.01,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^ORD(100.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=X X ^DD(100.9,.01,1,2,2.4)
"^DD",100.9,100.9,.01,1,2,2.4)
S DIH=$S($D(^ORD(100.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=100.9,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",100.9,100.9,.01,1,2,"%D",0)
^^2^2^2920505^
"^DD",100.9,100.9,.01,1,2,"%D",1,0)
Automatically trigger the setting of the PACKAGE ID field with "OR"
"^DD",100.9,100.9,.01,1,2,"%D",2,0)
to indicate ORder entry when a notification is created.
"^DD",100.9,100.9,.01,1,2,"CREATE VALUE")
"OR"
"^DD",100.9,100.9,.01,1,2,"DELETE VALUE")
OLD NAME
"^DD",100.9,100.9,.01,1,2,"DT")
2920505
"^DD",100.9,100.9,.01,1,2,"FIELD")
PACKAGE ID
"^DD",100.9,100.9,.01,3)
Answer must be 3-30 characters in length. Enter the name of the notification.  The name should match the entry in the MESSAGE TEXT field as closely as possible.
"^DD",100.9,100.9,.01,21,0)
^^4^4^2990416^^^^
"^DD",100.9,100.9,.01,21,1,0)
This is the name of the notification.  It should match the text in the
"^DD",100.9,100.9,.01,21,2,0)
MESSAGE TEXT field as closely as possible (it may be an abbreviated version
"^DD",100.9,100.9,.01,21,3,0)
of the entry in MESSAGE TEXT.)  This field is displayed to users when
"^DD",100.9,100.9,.01,21,4,0)
selecting or reviewing entries in this file (100.9).
"^DD",100.9,100.9,.01,"DT")
2920505
"^DD",100.9,100.9,.02,0)
PACKAGE ID^RFX^^0;2^S X="OR" ;K:X[""""!($A(X)=^ X I $D(X) K:$L(X)>20!($L(X)<2) X
"^DD",100.9,100.9,.02,1,0)
^.1
"^DD",100.9,100.9,.02,1,1,0)
100.9^C
"^DD",100.9,100.9,.02,1,1,1)
S ^ORD(100.9,"C",$E(X,1,30),DA)=""
"^DD",100.9,100.9,.02,1,1,2)
K ^ORD(100.9,"C",$E(X,1,30),DA)
"^DD",100.9,100.9,.02,1,1,"%D",0)
^^2^2^2920427^^
"^DD",100.9,100.9,.02,1,1,"%D",1,0)
This cross-reference provides a way to group notifications by package or 
"^DD",100.9,100.9,.02,1,1,"%D",2,0)
other category.
"^DD",100.9,100.9,.02,1,1,"DT")
2910429
"^DD",100.9,100.9,.02,3)
Always enter "OR" in this field.  This field is used to create the XQAID field passed to the XQALERT entry points.  It will typically be the Package ID. 
"^DD",100.9,100.9,.02,5,1,0)
100.9^.01^2
"^DD",100.9,100.9,.02,9)
^
"^DD",100.9,100.9,.02,21,0)
^^10^10^2990416^^^^
"^DD",100.9,100.9,.02,21,1,0)
This entry should always be "OR" to indicate the alert (notification) is 
"^DD",100.9,100.9,.02,21,2,0)
processed by OE/RR.  "OR" is stuffed via a trigger x-ref in field .01.
"^DD",100.9,100.9,.02,21,3,0)
This Package ID will have ";DFN;NIEN" concatenated to the end of it, to
"^DD",100.9,100.9,.02,21,4,0)
make the XQAID variable which is used by the XQALERT routine to provide a
"^DD",100.9,100.9,.02,21,5,0)
unique cross-reference.  The order entry notification system will check
"^DD",100.9,100.9,.02,21,6,0)
the New person file to determine if this message is already pending for
"^DD",100.9,100.9,.02,21,7,0)
the user.  If it already exists, the user will not receive a second message.
"^DD",100.9,100.9,.02,21,8,0)
 
"^DD",100.9,100.9,.02,21,9,0)
DFN is the Patient File internal entry number.
"^DD",100.9,100.9,.02,21,10,0)
NIEN is the Notification File internal entry number.
"^DD",100.9,100.9,.02,"DT")
2911008
"^DD",100.9,100.9,.03,0)
MESSAGE TEXT^RF^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>51!($L(X)<3) X
"^DD",100.9,100.9,.03,1,0)
^.1
"^DD",100.9,100.9,.03,1,1,0)
100.9^D
"^DD",100.9,100.9,.03,1,1,1)
S ^ORD(100.9,"D",$E(X,1,30),DA)=""
"^DD",100.9,100.9,.03,1,1,2)
K ^ORD(100.9,"D",$E(X,1,30),DA)
"^DD",100.9,100.9,.03,1,1,"%D",0)
^^1^1^2910429^
"^DD",100.9,100.9,.03,1,1,"%D",1,0)
This cross reference provides a look-up based on the Message Text.
"^DD",100.9,100.9,.03,1,1,"DT")
2910429
"^DD",100.9,100.9,.03,3)
Answer must be 3-51 characters in length.  This entry is used as the actual text of the notification (MESSAGE TYPE = 'NOT') or the default text (MESSAGE TEXT = 'PKG').
"^DD",100.9,100.9,.03,21,0)
^^6^6^2920224^^^^
"^DD",100.9,100.9,.03,21,1,0)
This text will be appended to the Patient last name and last 4 characters of
"^DD",100.9,100.9,.03,21,2,0)
the social security number to create the order notification text.
"^DD",100.9,100.9,.03,21,3,0)
(e.g., SMITH (4356): Unsigned orders. - Where "Unsigned orders." is the 
"^DD",100.9,100.9,.03,21,4,0)
content of MESSAGE TEXT.)  Text entered into this field is the default text
"^DD",100.9,100.9,.03,21,5,0)
for notifications where the text message usually comes from the package
"^DD",100.9,100.9,.03,21,6,0)
(MESSAGE TYPE = PKG).
"^DD",100.9,100.9,.03,"DT")
2911008
"^DD",100.9,100.9,.04,0)
MESSAGE TYPE^RS^PKG:PACKAGE PROVIDES A VARIABLE MESSAGE;NOT:NOTIFICATION FILE PROVIDES MESSAGE;^0;4^Q
"^DD",100.9,100.9,.04,3)
Messages can be provided by the NOTIFICATION file where they are defined with the notification 'NOT' or they can be variable messages supplied by the package 'PKG' when the notification is triggered.
"^DD",100.9,100.9,.04,21,0)
^^1^1^2960503^^^^
"^DD",100.9,100.9,.04,21,1,0)
MESSAGE TYPE field is used as a flag to determine where the message text originates.  If from the NOTIFICATION file, MESSAGE TYPE is 'NOT.'  If the message comes from the package, MESSAGE TYPE is 'PKG.'
"^DD",100.9,100.9,.04,"DT")
2910627
"^DD",100.9,100.9,.05,0)
ACTION FLAG^RS^I:INFORMATION ONLY;R:RUN ROUTINE;^0;5^Q
"^DD",100.9,100.9,.05,3)
Enter 'I' if the user is to take no follow-up action for this notification.  Enter 'R' if the user is to take a follow-up action after viewing this notification (e.g. Sign an unsigned order.)
"^DD",100.9,100.9,.05,21,0)
^^7^7^2920417^^^^
"^DD",100.9,100.9,.05,21,1,0)
This a mandatory flag used to regulate processing in XQALERT processing.
"^DD",100.9,100.9,.05,21,2,0)
The flag is set to I to indicate the notification is for INFORMATION ONLY - 
"^DD",100.9,100.9,.05,21,3,0)
no follow-up action is to be taken.  'I' notifications are deleted as each
"^DD",100.9,100.9,.05,21,4,0)
user reviews them.  'R' notifications have a follow-up action associated
"^DD",100.9,100.9,.05,21,5,0)
with them.  The user will be taken to another routine or option when they
"^DD",100.9,100.9,.05,21,6,0)
select a notification with ACTION FLAG = R and a follow-up routine/option
"^DD",100.9,100.9,.05,21,7,0)
is defined.
"^DD",100.9,100.9,.05,"DT")
2910627
"^DD",100.9,100.9,.06,0)
ENTRY POINT^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",100.9,100.9,.06,3)
Answer must be 1-8 characters in length.  This should be the tag to be concatenated with the ROUTINE NAME (.07) field.  It is the entry point for follow-up action in that routine.
"^DD",100.9,100.9,.06,21,0)
^^2^2^2920224^^^
"^DD",100.9,100.9,.06,21,1,0)
This is an optional field used to create the XQAROU variable to be used by
"^DD",100.9,100.9,.06,21,2,0)
the XQALERT routine.  This field represents the TAG in tag^routine. 
"^DD",100.9,100.9,.06,"DT")
2910429
"^DD",100.9,100.9,.07,0)
ROUTINE NAME^F^^0;7^K:$L(X)>8!($L(X)<2) X
"^DD",100.9,100.9,.07,3)
Answer must be 2-8 characters in length.  This is concatenated with the ENTRY POINT (.06) to create XQAROU.  It is the routine where the follow-up action (if any) for this notification is initiated.
"^DD",100.9,100.9,.07,21,0)
^^2^2^2920224^^^
"^DD",100.9,100.9,.07,21,1,0)
This is an optional variable identifying a routine or tag(field .06)^routine
"^DD",100.9,100.9,.07,21,2,0)
used to create XQAROU for processing by XQALERT.
"^DD",100.9,100.9,.07,"DT")
2910429
"^DD",100.9,100.9,1,0)
NON-MENU TYPE OPTION ACTION^P19'^DIC(19,^1;1^Q
"^DD",100.9,100.9,1,3)
This field is for future enhancements.  It is currently (5/92) unused.
"^DD",100.9,100.9,1,21,0)
^^5^5^2920506^^^^
"^DD",100.9,100.9,1,21,1,0)
This is an optional field used to create the variable XQAOPT for use
"^DD",100.9,100.9,1,21,2,0)
by XQALERT.  It should indicate a non-menu type option on the user's
"^DD",100.9,100.9,1,21,3,0)
primary or secondary menu, not on the Common menu.  The phantom jump 
"^DD",100.9,100.9,1,21,4,0)
is used to navigate to the destination option and will check pathway
"^DD",100.9,100.9,1,21,5,0)
restrictions in doing so.
"^DD",100.9,100.9,1,"DT")
2910429
"^DD",100.9,100.9,1.5,0)
RELATED PACKAGE^F^^1;2^K:$L(X)>30!($L(X)<2) X
"^DD",100.9,100.9,1.5,3)
Answer must be 2-30 characters in length.  Enter the appropriate name of the package where the notification originates (e.g., LAB, MAS, Pharmacy.)
"^DD",100.9,100.9,1.5,21,0)
^^1^1^2920224^^^
"^DD",100.9,100.9,1.5,21,1,0)
This field contains the name of the package where the notification originates or is triggered (e.g., LAB, MAS, Pharmacy.)
"^DD",100.9,100.9,1.5,"DT")
2910627
"^DD",100.9,100.9,2,0)
PROCESSING FLAGS^100.92S^^5;0
"^DD",100.9,100.9,2,21,0)
^^2^2^3140701^
"^DD",100.9,100.9,2,21,1,0)
This field tells the notification system any special instructions to 
"^DD",100.9,100.9,2,21,2,0)
follow when creating the notification.
"^DD",100.9,100.9,4,0)
DESCRIPTION^RF^^4;1^K:$L(X)>250!($L(X)<3) X
"^DD",100.9,100.9,4,3)
Answer must be 3-250 characters in length.  Enter a description of the notification with emphasis on what triggers the notification and what actions delete it.
"^DD",100.9,100.9,4,21,0)
^^2^2^2950711^^^
"^DD",100.9,100.9,4,21,1,0)
This field contains free text describing the notification, how it is trig-
"^DD",100.9,100.9,4,21,2,0)
gered and what action(s) delete it.
"^DD",100.9,100.9,4,"DT")
2950424
"^DD",100.9,100.9,5,0)
FOLLOW-UP TYPE^S^0:REPORT;1:COSIGN_PN;2:EXPIRING_ORDER;3:FLAGGED_ORDER;4:ORDER;5:UNLINKED;6:NEW_CONSULT;7:NEW_ORDER;8:COSIGN_ORDER;9:ES_ORDER;10:UNSIGN_PN;11:UNVERIFIED_MED;^3;2^Q
"^DD",100.9,100.9,5,3)
Enter the follow-up code correspond to the notification's follow-up action.  If unsure, leave blank.
"^DD",100.9,100.9,5,21,0)
^^5^5^2990412^^^^
"^DD",100.9,100.9,5,21,1,0)
This field contains the type of follow-up action to be taken.  It is used 
"^DD",100.9,100.9,5,21,2,0)
by the application managing the follow-up action  (e.g. GUI interface) to
"^DD",100.9,100.9,5,21,3,0)
initiate the proper follow-up action separate from the underlying data 
"^DD",100.9,100.9,5,21,4,0)
base and application layers.  Example follow-up types include: report,
"^DD",100.9,100.9,5,21,5,0)
e/s, flag.
"^DD",100.9,100.9,5,23,0)
^^6^6^2990412^^^^
"^DD",100.9,100.9,5,23,1,0)
This field is basically a flag for the environment (e.g. GUI - Delphi)
"^DD",100.9,100.9,5,23,2,0)
handling notification follow-up to initiate the appropriate action.  For
"^DD",100.9,100.9,5,23,3,0)
example if the type was report, the data returned in the API call would be
"^DD",100.9,100.9,5,23,4,0)
stuffed into a generic text box for display; whereas if the type was
"^DD",100.9,100.9,5,23,5,0)
flag, the follow-up action would be to find and display all flagged orders
"^DD",100.9,100.9,5,23,6,0)
for the patient and allow unflagging.
"^DD",100.9,100.9,5,"DT")
2990412
"^DD",100.9,100.92,0)
PROCESSING FLAGS SUB-FIELD^^.01^1
"^DD",100.9,100.92,0,"DT")
3140915
"^DD",100.9,100.92,0,"IX","B",100.92,.01)

"^DD",100.9,100.92,0,"NM","PROCESSING FLAGS")

"^DD",100.9,100.92,0,"UP")
100.9
"^DD",100.9,100.92,.01,0)
PROCESSING FLAG^MSX^ONPP:GENERATE ONE NOTIFICATION PER PATIENT;CD:COMBINE DATA FROM DUPLICATES;^0;1^I X="ONPP",$P(^ORD(100.9,DA(1),0),U,6,7)='"INDORDER^ORB3FUP1" K X
"^DD",100.9,100.92,.01,1,0)
^.1
"^DD",100.9,100.92,.01,1,1,0)
100.92^B
"^DD",100.9,100.92,.01,1,1,1)
S ^ORD(100.9,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",100.9,100.92,.01,1,1,2)
K ^ORD(100.9,DA(1),5,"B",$E(X,1,30),DA)
"^DD",100.9,100.92,.01,3)
Select the flag to control creation of this notification.
"^DD",100.9,100.92,.01,21,0)
^^2^2^3140701^
"^DD",100.9,100.92,.01,21,1,0)
This field stores a special instruction that the notification system will 
"^DD",100.9,100.92,.01,21,2,0)
follow when creating the notification.
"^DD",100.9,100.92,.01,"DT")
3140915
"^DD",100.98,100.98,0)
FIELD^NL^5^6
"^DD",100.98,100.98,0,"DDA")
N
"^DD",100.98,100.98,0,"DT")
3170504
"^DD",100.98,100.98,0,"IX","AD",100.981,.01)

"^DD",100.98,100.98,0,"IX","B",100.98,.01)

"^DD",100.98,100.98,0,"IX","B",100.98,3)

"^DD",100.98,100.98,0,"NM","DISPLAY GROUP")

"^DD",100.98,100.98,0,"PT",100,23)

"^DD",100.98,100.98,0,"PT",100.65,.01)

"^DD",100.98,100.98,0,"PT",100.981,.01)

"^DD",100.98,100.98,0,"PT",100.995,1.1)

"^DD",100.98,100.98,0,"PT",101.41,5)

"^DD",100.98,100.98,0,"PT",101.43,5)

"^DD",100.98,100.98,0,"PT",123.5,123.01)

"^DD",100.98,100.98,0,"VRPK")
ORDER ENTRY/RESULTS REPORTING
"^DD",100.98,100.98,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",100.98,100.98,.01,1,0)
^.1^^-1
"^DD",100.98,100.98,.01,1,1,0)
100.98^B
"^DD",100.98,100.98,.01,1,1,1)
S ^ORD(100.98,"B",$E(X,1,30),DA)=""
"^DD",100.98,100.98,.01,1,1,2)
K ^ORD(100.98,"B",$E(X,1,30),DA)
"^DD",100.98,100.98,.01,3)
ANSWER MUST BE 3-30 CHARACTERS IN LENGTH
"^DD",100.98,100.98,.01,4)

"^DD",100.98,100.98,.01,21,0)
^^3^3^2920224^^^^
"^DD",100.98,100.98,.01,21,1,0)
This is the name of the display group for a particular kind of order.
"^DD",100.98,100.98,.01,21,2,0)
The display group generally corresponds to a hospital service or part
"^DD",100.98,100.98,.01,21,3,0)
of a service.
"^DD",100.98,100.98,.01,"DT")
2890131
"^DD",100.98,100.98,1,0)
MEMBER^100.981P^^1;0
"^DD",100.98,100.98,1,3)
Enter a display group as a member.
"^DD",100.98,100.98,1,21,0)
^^3^3^3161110^
"^DD",100.98,100.98,1,21,1,0)
This is a list of specific display groups that `belong' to the display
"^DD",100.98,100.98,1,21,2,0)
group listed in the NAME field.  (This is similar to menu items in the
"^DD",100.98,100.98,1,21,3,0)
OPTION File.)
"^DD",100.98,100.98,2,0)
MIXED NAME^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",100.98,100.98,2,3)
Answer must be 1-30 characters in length.
"^DD",100.98,100.98,2,21,0)
^^3^3^2960617^
"^DD",100.98,100.98,2,21,1,0)
This field contains a mixed case name for the display group.  The name 
"^DD",100.98,100.98,2,21,2,0)
should be as short as possible without being obscure.  This name is 
"^DD",100.98,100.98,2,21,3,0)
primarily intended for use in the windows display of orders.
"^DD",100.98,100.98,2,"DT")
2960617
"^DD",100.98,100.98,3,0)
SHORT NAME^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<1) X
"^DD",100.98,100.98,3,1,0)
^.1
"^DD",100.98,100.98,3,1,1,0)
100.98^B^MNEMONIC
"^DD",100.98,100.98,3,1,1,1)
S:'$D(^ORD(100.98,"B",$E(X,1,30),DA)) ^(DA)=1
"^DD",100.98,100.98,3,1,1,2)
I $D(^ORD(100.98,"B",$E(X,1,30),DA)),^(DA) K ^(DA)
"^DD",100.98,100.98,3,3)
ANSWER MUST BE 1-5 CHARACTERS IN LENGTH
"^DD",100.98,100.98,3,21,0)
^^2^2^2920224^^^
"^DD",100.98,100.98,3,21,1,0)
This is an abbreviation for the display group to be used in displays and
"^DD",100.98,100.98,3,21,2,0)
reports.
"^DD",100.98,100.98,3,"DT")
2880308
"^DD",100.98,100.98,4,0)
DEFAULT DIALOG^P101.41'^ORD(101.41,^0;4^Q
"^DD",100.98,100.98,4,3)
Enter the default ordering dialog for this display group.
"^DD",100.98,100.98,4,21,0)
^^2^2^2960815^^
"^DD",100.98,100.98,4,21,1,0)
This is the dialog that will be used as the default definition when
"^DD",100.98,100.98,4,21,2,0)
placing quick orders associated with this display group.
"^DD",100.98,100.98,4,"DT")
2960814
"^DD",100.98,100.98,5,0)
SECURITY KEY^100.985P^^2;0
"^DD",100.98,100.98,5,21,0)
^^2^2^3161110^
"^DD",100.98,100.98,5,21,1,0)
A list of Security Keys assigned to a Display Group to be used for
"^DD",100.98,100.98,5,21,2,0)
validating a user's privileges when attempting to unflag an order.
"^DD",100.98,100.981,0)
MEMBER SUB-FIELD^^.01^2
"^DD",100.98,100.981,0,"DT")
2920601
"^DD",100.98,100.981,0,"IX","B",100.981,.01)

"^DD",100.98,100.981,0,"NM","MEMBER")

"^DD",100.98,100.981,0,"UP")
100.98
"^DD",100.98,100.981,.001,0)
SEQUENCE^NJ5,1^^ ^K:+X'=X!(X>900)!(X<0)!(X?.E1"."2N.N) X
"^DD",100.98,100.981,.001,3)
Type a Number between 0 and 900, 1 Decimal Digit
"^DD",100.98,100.981,.001,21,0)
^^2^2^2920601^
"^DD",100.98,100.981,.001,21,1,0)
This is the sequence of the member in the display group for reporting
"^DD",100.98,100.981,.001,21,2,0)
purposes.
"^DD",100.98,100.981,.001,"DT")
2920601
"^DD",100.98,100.981,.01,0)
MEMBER^MP100.98X^ORD(100.98,^0;1^S ORDDF=100.98 D TREE^ORDD101
"^DD",100.98,100.981,.01,1,0)
^.1
"^DD",100.98,100.981,.01,1,1,0)
100.981^B
"^DD",100.98,100.981,.01,1,1,1)
S ^ORD(100.98,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",100.98,100.981,.01,1,1,2)
K ^ORD(100.98,DA(1),1,"B",$E(X,1,30),DA)
"^DD",100.98,100.981,.01,1,2,0)
100.98^AD^MUMPS
"^DD",100.98,100.981,.01,1,2,1)
S ^ORD(100.98,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",100.98,100.981,.01,1,2,2)
K ^ORD(100.98,"AD",$E(X,1,30),DA(1),DA)
"^DD",100.98,100.981,.01,1,2,"%D",0)
^^2^2^2971217^^
"^DD",100.98,100.981,.01,1,2,"%D",1,0)
^ORD(100.98,"AD",ORMEM,ORGRP,DA)
"^DD",100.98,100.981,.01,1,2,"%D",2,0)
Provides backwards pointer from member to parent group.
"^DD",100.98,100.981,.01,3)
Enter a display group.  A display group that is an ancestor may not also be a member.
"^DD",100.98,100.981,.01,4)

"^DD",100.98,100.981,.01,21,0)
^^2^2^2920224^^^
"^DD",100.98,100.981,.01,21,1,0)
This is a display group listed in the NAME field. (This is similar to a
"^DD",100.98,100.981,.01,21,2,0)
menu item in the OPTION File.)
"^DD",100.98,100.981,.01,"DT")
2890207
"^DD",100.98,100.985,0)
SECURITY KEY SUB-FIELD^^.01^1
"^DD",100.98,100.985,0,"DT")
3170208
"^DD",100.98,100.985,0,"IX","B",100.985,.01)

"^DD",100.98,100.985,0,"NM","SECURITY KEY")

"^DD",100.98,100.985,0,"UP")
100.98
"^DD",100.98,100.985,.01,0)
SECURITY KEY^P19.1'^DIC(19.1,^0;1^Q
"^DD",100.98,100.985,.01,1,0)
^.1
"^DD",100.98,100.985,.01,1,1,0)
100.985^B
"^DD",100.98,100.985,.01,1,1,1)
S ^ORD(100.98,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",100.98,100.985,.01,1,1,2)
K ^ORD(100.98,DA(1),2,"B",$E(X,1,30),DA)
"^DD",100.98,100.985,.01,3)
Enter a Security Key from file 19.1 to be assigned to this Display Group
"^DD",100.98,100.985,.01,21,0)
^^2^2^3161110^
"^DD",100.98,100.985,.01,21,1,0)
A Security Key assigned to this Display Group to be used for
"^DD",100.98,100.985,.01,21,2,0)
validating a user's privileges when attempting to unflag an order.
"^DD",100.98,100.985,.01,"DT")
3161110
"^DD",101.41,101.41,0)
FIELD^^99^30
"^DD",101.41,101.41,0,"DDA")
N
"^DD",101.41,101.41,0,"DT")
3170621
"^DD",101.41,101.41,0,"IX","AB",101.41,.01)

"^DD",101.41,101.41,0,"IX","AD",101.412,2)

"^DD",101.41,101.41,0,"IX","AM",101.41,99)

"^DD",101.41,101.41,0,"IX","AM2",101.41,2)

"^DD",101.41,101.41,0,"IX","AM51",101.41,51)

"^DD",101.41,101.41,0,"IX","AM52",101.41,52)

"^DD",101.41,101.41,0,"IX","AMM",101.412,.01)

"^DD",101.41,101.41,0,"IX","AMM2",101.412,2)

"^DD",101.41,101.41,0,"IX","AMM3",101.412,3)

"^DD",101.41,101.41,0,"IX","AMM4",101.412,4)

"^DD",101.41,101.41,0,"IX","AMM5",101.412,5)

"^DD",101.41,101.41,0,"IX","APKG",101.41,7)

"^DD",101.41,101.41,0,"IX","C",101.41,2)

"^DD",101.41,101.41,0,"NM","ORDER DIALOG")

"^DD",101.41,101.41,0,"PT",100,2)

"^DD",101.41,101.41,0,"PT",100,7)

"^DD",101.41,101.41,0,"PT",100.045,.02)

"^DD",101.41,101.41,0,"PT",100.5,4)

"^DD",101.41,101.41,0,"PT",100.5,5)

"^DD",101.41,101.41,0,"PT",100.95,3)

"^DD",101.41,101.41,0,"PT",100.98,4)

"^DD",101.41,101.41,0,"PT",101.412,1)

"^DD",101.41,101.41,0,"PT",101.412,2)

"^DD",101.41,101.41,0,"PT",101.415,2)

"^DD",101.41,101.41,0,"PT",101.416,.02)

"^DD",101.41,101.41,0,"PT",101.441,.01)

"^DD",101.41,101.41,0,"PT",801.41,15)

"^DD",101.41,101.41,0,"PT",801.4118,.01)

"^DD",101.41,101.41,0,"PT",800001.05,.01)

"^DD",101.41,101.41,0,"VRPK")
OR
"^DD",101.41,101.41,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",101.41,101.41,.01,1,0)
^.1^^-1
"^DD",101.41,101.41,.01,1,2,0)
101.41^AB
"^DD",101.41,101.41,.01,1,2,1)
S ^ORD(101.41,"AB",$E(X,1,63),DA)=""
"^DD",101.41,101.41,.01,1,2,2)
K ^ORD(101.41,"AB",$E(X,1,63),DA)
"^DD",101.41,101.41,.01,1,2,"%D",0)
^^1^1^2971020^
"^DD",101.41,101.41,.01,1,2,"%D",1,0)
This is a regular index on the full 63 characters of the Name field.
"^DD",101.41,101.41,.01,1,2,"DT")
2971020
"^DD",101.41,101.41,.01,3)
Answer must be 3-63 characters in length.
"^DD",101.41,101.41,.01,21,0)
^^3^3^2971219^
"^DD",101.41,101.41,.01,21,1,0)
This is the name of the dialog; entries that were converted from the
"^DD",101.41,101.41,.01,21,2,0)
Protocol file will retain the same name.  Namespacing is not required,
"^DD",101.41,101.41,.01,21,3,0)
but still encouraged.
"^DD",101.41,101.41,.01,"DT")
2971020
"^DD",101.41,101.41,2,0)
DISPLAY TEXT^FX^^0;2^K:$L(X)>80!($L(X)<3)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.41,2,1,0)
^.1
"^DD",101.41,101.41,2,1,1,0)
101.41^C
"^DD",101.41,101.41,2,1,1,1)
S ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)=""
"^DD",101.41,101.41,2,1,1,2)
K ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)
"^DD",101.41,101.41,2,1,1,"DT")
2950112
"^DD",101.41,101.41,2,1,2,0)
101.41^AM2^MUMPS
"^DD",101.41,101.41,2,1,2,1)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,2)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,2,1,2,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.41,2,1,2,"DT")
2990210
"^DD",101.41,101.41,2,3)
Answer must be 3-80 characters and cannot contain an up-arrow (^) or semi-colon (;).
"^DD",101.41,101.41,2,21,0)
^.001^1^1^3010913^^^^
"^DD",101.41,101.41,2,21,1,0)
The text of this dialog's name as it appears on a menu or subheader.
"^DD",101.41,101.41,2,"DT")
3000823
"^DD",101.41,101.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",101.41,101.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",101.41,101.41,3,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,3,21,1,0)
This field disables use of this dialog when it contains text.  The text
"^DD",101.41,101.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",101.41,101.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",101.41,101.41,3,"DT")
2950112
"^DD",101.41,101.41,4,0)
TYPE^RS^P:prompt;D:dialog;Q:quick order;O:order set;M:menu;A:action;^0;4^Q
"^DD",101.41,101.41,4,3)
Specify a type for this dialog.
"^DD",101.41,101.41,4,21,0)
^^5^5^2950716^^^^
"^DD",101.41,101.41,4,21,1,0)
This field defines the type of order dialog to be processed.  Control
"^DD",101.41,101.41,4,21,2,0)
will be passed to the OE/RR Dialog Processor for dialog items; menu types
"^DD",101.41,101.41,4,21,3,0)
are used for displaying and selecting dialog items.  Action types will only
"^DD",101.41,101.41,4,21,4,0)
execute the entry and exit actions, ignoring any items that may exist; these
"^DD",101.41,101.41,4,21,5,0)
dialogs should not create entries in the Orders file.
"^DD",101.41,101.41,4,"DT")
2950716
"^DD",101.41,101.41,5,0)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"^DD",101.41,101.41,5,3)
Enter the display group containing orderable items defined by this dialog.
"^DD",101.41,101.41,5,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,5,21,1,0)
This field determines what display group this dialog has been defined for.
"^DD",101.41,101.41,5,21,2,0)
It will define which orderable items are selectable with this dialog,
"^DD",101.41,101.41,5,21,3,0)
as well as what service to send the order to when it is complete.
"^DD",101.41,101.41,5,"DT")
2950112
"^DD",101.41,101.41,6,0)
SIGNATURE REQUIRED^S^0:NONE;1:ORELSE;2:ORES;^0;6^Q
"^DD",101.41,101.41,6,3)
Enter the OR key required to sign orders created by this dialog
"^DD",101.41,101.41,6,21,0)
^^6^6^2970318^^
"^DD",101.41,101.41,6,21,1,0)
This field indicates what signature will be required for orders created by
"^DD",101.41,101.41,6,21,2,0)
this dialog, to be considered complete and ready to release to the service
"^DD",101.41,101.41,6,21,3,0)
for action.  If this flag is set to NO and the dialog contains a prompt
"^DD",101.41,101.41,6,21,4,0)
for item(s) from the Orderable Item file, the order created may still
"^DD",101.41,101.41,6,21,5,0)
require a signature if any of the items ordered are individually flagged
"^DD",101.41,101.41,6,21,6,0)
as requiring a signature.
"^DD",101.41,101.41,6,"DT")
3170621
"^DD",101.41,101.41,7,0)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"^DD",101.41,101.41,7,1,0)
^.1
"^DD",101.41,101.41,7,1,1,0)
101.41^APKG
"^DD",101.41,101.41,7,1,1,1)
S ^ORD(101.41,"APKG",$E(X,1,30),DA)=""
"^DD",101.41,101.41,7,1,1,2)
K ^ORD(101.41,"APKG",$E(X,1,30),DA)
"^DD",101.41,101.41,7,1,1,"DT")
2970325
"^DD",101.41,101.41,7,3)
Enter the VISTA package that is to receive orders created by this dialog.
"^DD",101.41,101.41,7,21,0)
^^3^3^2950208^
"^DD",101.41,101.41,7,21,1,0)
This is the VISTA package that is intended to receive orders created by
"^DD",101.41,101.41,7,21,2,0)
this dialog; this is required for creating the HL7 messages to pass the
"^DD",101.41,101.41,7,21,3,0)
order.
"^DD",101.41,101.41,7,"DT")
2970325
"^DD",101.41,101.41,8,0)
VERIFY ORDER^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.41,8,3)
Enter YES to have orders created by this dialog presented to the user before saving, with the opportunity to edit.
"^DD",101.41,101.41,8,21,0)
^^3^3^2950623^
"^DD",101.41,101.41,8,21,1,0)
This field is a flag, which determines if the order created by this dialog
"^DD",101.41,101.41,8,21,2,0)
will be presented to the user for verification before saving in the Orders
"^DD",101.41,101.41,8,21,3,0)
file; for most quick orders, this flag should be set to 0 (no).
"^DD",101.41,101.41,8,"DT")
3170621
"^DD",101.41,101.41,9,0)
ASK FOR ANOTHER ORDER^S^0:NO;1:YES;2:YES-DON'T ASK;^0;9^Q
"^DD",101.41,101.41,9,3)
Enter YES to have the user asked to enter another order from this dialog before exiting.
"^DD",101.41,101.41,9,21,0)
^^6^6^2970616^^^
"^DD",101.41,101.41,9,21,1,0)
This field allows the user to add another order from this dialog, when the
"^DD",101.41,101.41,9,21,2,0)
initial order is accepted and placed; if set to YES, the user will be
"^DD",101.41,101.41,9,21,3,0)
asked "Add another <dialog display text> order?" to allow for either
"^DD",101.41,101.41,9,21,4,0)
exiting the processor or adding an additional order of the same type.
"^DD",101.41,101.41,9,21,5,0)
This field can also be set to YES-DON'T ASK to force the processor to
"^DD",101.41,101.41,9,21,6,0)
automatically drop into prompting for another order without asking first.
"^DD",101.41,101.41,9,"DT")
2970616
"^DD",101.41,101.41,10,0)
ITEMS^101.412IA^^10;0
"^DD",101.41,101.41,10,21,0)
^^5^5^2990211^^^^
"^DD",101.41,101.41,10,21,1,0)
This field contains the components for dialogs:
"^DD",101.41,101.41,10,21,2,0)
     Dialogs      -> prompts
"^DD",101.41,101.41,10,21,3,0)
     Quick orders -> prompts (completed)
"^DD",101.41,101.41,10,21,4,0)
     Order sets   -> dialogs or quick orders
"^DD",101.41,101.41,10,21,5,0)
     Menus        -> dialogs, quick orders, or order sets
"^DD",101.41,101.41,11,0)
DATA TYPE^S^D:date/time;R:free text date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;^1;1^Q
"^DD",101.41,101.41,11,3)
Enter the type of data to be collected at this prompt.
"^DD",101.41,101.41,11,21,0)
^^2^2^2950823^^
"^DD",101.41,101.41,11,21,1,0)
This is the type of data being prompted for; this field is used to define
"^DD",101.41,101.41,11,21,2,0)
a call to the reader (^DIR) in most cases.
"^DD",101.41,101.41,11,23,0)
^^1^1^2950823^^
"^DD",101.41,101.41,11,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,11,"DT")
2950407
"^DD",101.41,101.41,12,0)
DOMAIN^F^^1;2^K:$L(X)>235!($L(X)<1) X
"^DD",101.41,101.41,12,3)
Answer must be 1-235 characters in length.
"^DD",101.41,101.41,12,21,0)
^^3^3^2990225^^^^
"^DD",101.41,101.41,12,21,1,0)
This is a parameter that may be used to further specify the data type.
"^DD",101.41,101.41,12,21,2,0)
The string stored here should be appropriate for the second ^-piece of
"^DD",101.41,101.41,12,21,3,0)
DIR(0) when used with the data type field.
"^DD",101.41,101.41,12,23,0)
^^1^1^2990225^^^^
"^DD",101.41,101.41,12,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,12,"DT")
2990225
"^DD",101.41,101.41,13,0)
ID^F^^1;3^K:$L(X)>10!($L(X)<2) X
"^DD",101.41,101.41,13,3)
Answer must be 2-10 characters in length.
"^DD",101.41,101.41,13,21,0)
^.001^20^20^3010727^^
"^DD",101.41,101.41,13,21,1,0)
This field may contain a single word identifier which will be
"^DD",101.41,101.41,13,21,2,0)
stored with the user response in the Orders file #100, where it
"^DD",101.41,101.41,13,21,3,0)
will be indexed for quick reference to certain values in the
"^DD",101.41,101.41,13,21,4,0)
order dialog.  The following are some examples of values
"^DD",101.41,101.41,13,21,5,0)
currently in use:
"^DD",101.41,101.41,13,21,6,0)
 
"^DD",101.41,101.41,13,21,7,0)
   START      -> Start date/time
"^DD",101.41,101.41,13,21,8,0)
   STOP       -> Stop date/time
"^DD",101.41,101.41,13,21,9,0)
   SCHEDULE   -> Administration Schedule
"^DD",101.41,101.41,13,21,10,0)
   ORDERABLE  -> Orderable Item
"^DD",101.41,101.41,13,21,11,0)
   DRUG       -> Dispense Drug
"^DD",101.41,101.41,13,21,12,0)
   CANCEL     -> Cancel Future Orders flag
"^DD",101.41,101.41,13,21,13,0)
   COMMENT    -> Word processing comments
"^DD",101.41,101.41,13,21,14,0)
 
"^DD",101.41,101.41,13,21,15,0)
These values must be unique among entries within an order dialog
"^DD",101.41,101.41,13,21,16,0)
but do not need to be unique across the entire file.  Be sure to
"^DD",101.41,101.41,13,21,17,0)
check the IDs assigned to generic text entries to make sure that
"^DD",101.41,101.41,13,21,18,0)
all IDs are unique.  In order to avoid potential problems it's
"^DD",101.41,101.41,13,21,19,0)
recommended that you use unique IDs for any local entries that you
"^DD",101.41,101.41,13,21,20,0)
create.
"^DD",101.41,101.41,13,"DT")
2960215
"^DD",101.41,101.41,17,0)
VALIDATION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,17,9)
@
"^DD",101.41,101.41,17,21,0)
^^3^3^2960912^
"^DD",101.41,101.41,17,21,1,0)
This is MUMPS code that will be executed at the time of releasing an
"^DD",101.41,101.41,17,21,2,0)
order created with this dialog; dialog responses may be checked again
"^DD",101.41,101.41,17,21,3,0)
here before releasing the order to the service.
"^DD",101.41,101.41,17,"DT")
2960912
"^DD",101.41,101.41,19,0)
ADDITIONAL TEXT^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,19,9)
@
"^DD",101.41,101.41,19,21,0)
^^3^3^2960405^^
"^DD",101.41,101.41,19,21,1,0)
This is MUMPS code that will be executed when order ORIFN created by this
"^DD",101.41,101.41,19,21,2,0)
dialog is about to be displayed; any string that should be appended to the
"^DD",101.41,101.41,19,21,3,0)
order text should be returned in Y.
"^DD",101.41,101.41,19,"DT")
2960405
"^DD",101.41,101.41,20,0)
DESCRIPTION^101.411^^2;0
"^DD",101.41,101.41,20,21,0)
^^1^1^2971219^
"^DD",101.41,101.41,20,21,1,0)
This is a description of the dialog and its uses.
"^DD",101.41,101.41,21,0)
RESPONSES^101.416^^6;0
"^DD",101.41,101.41,21,21,0)
^^2^2^2971219^
"^DD",101.41,101.41,21,21,1,0)
This multiple contains any responses to prompts that have been pre-answered
"^DD",101.41,101.41,21,21,2,0)
to create a quick order.
"^DD",101.41,101.41,30,0)
ENTRY ACTION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,30,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,30,9)
@
"^DD",101.41,101.41,30,21,0)
^^4^4^2950425^
"^DD",101.41,101.41,30,21,1,0)
This is MUMPS code that will be executed at the top of a dialog, prior to
"^DD",101.41,101.41,30,21,2,0)
the execution of any prompts; it may perform functions such as listing
"^DD",101.41,101.41,30,21,3,0)
the recent Radiology exams before ordering a new one, or alerting the
"^DD",101.41,101.41,30,21,4,0)
user to an existing diet order before making a change.
"^DD",101.41,101.41,30,"DT")
2950425
"^DD",101.41,101.41,31,0)
QUICK SETUP^K^^3.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,31,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,31,9)
@
"^DD",101.41,101.41,31,21,0)
^^3^3^2970113^
"^DD",101.41,101.41,31,21,1,0)
This is MUMPS code that will be executed in the place of the Entry Action
"^DD",101.41,101.41,31,21,2,0)
when creating quick orders for this dialog; variables may be set here
"^DD",101.41,101.41,31,21,3,0)
instead to bypass the usual dependence on specific patient values.
"^DD",101.41,101.41,31,"DT")
2970113
"^DD",101.41,101.41,40,0)
EXIT ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,40,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,40,9)
@
"^DD",101.41,101.41,40,21,0)
^^2^2^2950622^
"^DD",101.41,101.41,40,21,1,0)
This is MUMPS code that will be executed upon completion of processing the
"^DD",101.41,101.41,40,21,2,0)
dialog; it is currently used only with dialog-type entries.
"^DD",101.41,101.41,40,"DT")
2950622
"^DD",101.41,101.41,50,0)
CONTROLS^101.415A^^50;0
"^DD",101.41,101.41,51,0)
COLUMN WIDTH^NJ3,0^^5;1^K:+X'=X!(X>240)!(X<20)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,51,1,0)
^.1
"^DD",101.41,101.41,51,1,1,0)
101.41^AM51^MUMPS
"^DD",101.41,101.41,51,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,51,1,1,"%D",1,0)
Update TIMESTAMP whenever COLUMN WIDTH is changed.
"^DD",101.41,101.41,51,1,1,"DT")
2990210
"^DD",101.41,101.41,51,3)
Type a Number between 20 and 240, 0 Decimal Digits
"^DD",101.41,101.41,51,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,51,21,1,0)
This is the width, in characters, for each column in a menu.  For example,
"^DD",101.41,101.41,51,21,2,0)
to have 3 columns on an 80 character device, enter a width of 26.
"^DD",101.41,101.41,51,"DT")
2990210
"^DD",101.41,101.41,52,0)
MNEMONIC WIDTH^NJ1,0^^5;2^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,52,1,0)
^.1
"^DD",101.41,101.41,52,1,1,0)
101.41^AM52^MUMPS
"^DD",101.41,101.41,52,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,52,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC WIDTH is changed.
"^DD",101.41,101.41,52,1,1,"DT")
2990210
"^DD",101.41,101.41,52,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",101.41,101.41,52,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,52,21,1,0)
This field allows the width of item mnemonics to be varied; the default
"^DD",101.41,101.41,52,21,2,0)
value is 5.
"^DD",101.41,101.41,52,"DT")
2990210
"^DD",101.41,101.41,53,0)
PATH SWITCH^S^1:YES;0:NO;^5;3^Q
"^DD",101.41,101.41,53,3)
Enter YES if this menu should be redisplayed when traversing back up the menu tree.
"^DD",101.41,101.41,53,21,0)
^^5^5^2950623^
"^DD",101.41,101.41,53,21,1,0)
This switch allows the user, when traversing back UP the tree of menus and
"^DD",101.41,101.41,53,21,2,0)
items, to select a new path back down the tree.  In other words, the menu
"^DD",101.41,101.41,53,21,3,0)
is redisplayed when returning to that menu's level in the tree and
"^DD",101.41,101.41,53,21,4,0)
processing back down the tree is possible from that point.  If nothing is
"^DD",101.41,101.41,53,21,5,0)
selected from the menu, the path continues back up the tree.
"^DD",101.41,101.41,53,"DT")
2950623
"^DD",101.41,101.41,54,0)
LISTBOX TEXT^F^^5;4^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.41,54,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.41,54,"DT")
2960524
"^DD",101.41,101.41,55,0)
WINDOW FORM ID^NJ4,0^^5;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,55,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",101.41,101.41,55,21,0)
^.001^23^23^3010727^^
"^DD",101.41,101.41,55,21,1,0)
This field tells the GUI DELPHI code which form to use to process the
"^DD",101.41,101.41,55,21,2,0)
order dialog.  Each number represents a unique form.  Following are some
"^DD",101.41,101.41,55,21,3,0)
of the more common codes and their corresponding form in DELPHI.
"^DD",101.41,101.41,55,21,4,0)
 
"^DD",101.41,101.41,55,21,5,0)
    Form Name     Windows Form ID
"^DD",101.41,101.41,55,21,6,0)
    ---------     ---------------
"^DD",101.41,101.41,55,21,7,0)
  OD_ACTIVITY           100
"^DD",101.41,101.41,55,21,8,0)
  OD_ALLERGY            105
"^DD",101.41,101.41,55,21,9,0)
  OD_CONSULT            110
"^DD",101.41,101.41,55,21,10,0)
  OD_PROCEDURE          112
"^DD",101.41,101.41,55,21,11,0)
  OD_DIET_TXT           115
"^DD",101.41,101.41,55,21,12,0)
  OD_DIET               117
"^DD",101.41,101.41,55,21,13,0)
  OD_LAB                120
"^DD",101.41,101.41,55,21,14,0)
  OD_MEDINPT            130
"^DD",101.41,101.41,55,21,15,0)
  OD_MEDS               135
"^DD",101.41,101.41,55,21,16,0)
  OD_MEDOUTPT           140
"^DD",101.41,101.41,55,21,17,0)
  OD_NURSING            150
"^DD",101.41,101.41,55,21,18,0)
  OD_MISC               151
"^DD",101.41,101.41,55,21,19,0)
  OD_GENERIC            152
"^DD",101.41,101.41,55,21,20,0)
  OD_IMAGING            160
"^DD",101.41,101.41,55,21,21,0)
  OD_VITALS             171 
"^DD",101.41,101.41,55,21,22,0)
  OD_MEDIV              180
"^DD",101.41,101.41,55,21,23,0)
  OD_TEXTONLY           999
"^DD",101.41,101.41,55,"DT")
2960804
"^DD",101.41,101.41,56,0)
CREATE PARENT ORDER^S^1:YES;0:NO;^5;6^Q
"^DD",101.41,101.41,56,3)
Enter YES if a parent order should be created for this order set
"^DD",101.41,101.41,56,21,0)
^^6^6^2970227^
"^DD",101.41,101.41,56,21,1,0)
This flag indicates whether a parent order should be created to group
"^DD",101.41,101.41,56,21,2,0)
together all the orders created by this order set; this flag is only
"^DD",101.41,101.41,56,21,3,0)
valid with SET type order dialogs.  If this value is YES, a parent
"^DD",101.41,101.41,56,21,4,0)
order will be created, and only the parent will be presented on the
"^DD",101.41,101.41,56,21,5,0)
orders list for display and action; NO will prevent a parent from being
"^DD",101.41,101.41,56,21,6,0)
created and all orders will be created and displayed independently.
"^DD",101.41,101.41,56,"DT")
2970227
"^DD",101.41,101.41,57,0)
DISPLAY SUBHEADER^S^1:YES;0:NO;^5;7^Q
"^DD",101.41,101.41,57,3)
Enter YES if a subheader should be displayed as each order in this set is processed
"^DD",101.41,101.41,57,21,0)
^^3^3^2970227^
"^DD",101.41,101.41,57,21,1,0)
This flag indicates whether a subheader is to be displayed for each order
"^DD",101.41,101.41,57,21,2,0)
in this set as it is processed and placed; this flag is only valid with
"^DD",101.41,101.41,57,21,3,0)
SET type order dialogs.
"^DD",101.41,101.41,57,"DT")
2970227
"^DD",101.41,101.41,58,0)
AUTO-ACCEPT QUICK ORDER^S^1:YES;^5;8^Q
"^DD",101.41,101.41,58,3)
Enter 'Yes' if the order should be placed without displaying the dialog window.
"^DD",101.41,101.41,58,21,0)
^^2^2^2980902^
"^DD",101.41,101.41,58,21,1,0)
This can be set to yes for a quick order so that it can be placed simply
"^DD",101.41,101.41,58,21,2,0)
by clicking on it in the GUI (no ordering dialog is displayed).
"^DD",101.41,101.41,58,"DT")
2980902
"^DD",101.41,101.41,99,0)
TIMESTAMP^F^^99;1^K:$L(X)>15!($L(X)<1) X
"^DD",101.41,101.41,99,1,0)
^.1
"^DD",101.41,101.41,99,1,1,0)
101.41^AM^MUMPS
"^DD",101.41,101.41,99,1,1,1)
D SET^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,2)
D KILL^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,"%D",0)
^^2^2^2990210^
"^DD",101.41,101.41,99,1,1,"%D",1,0)
Recompiles order dialog menus in ^XUTL("XQORM",<dialog#>_";ORD(101.41,")
"^DD",101.41,101.41,99,1,1,"%D",2,0)
whenever fields necessary to displaying the menu are changed.
"^DD",101.41,101.41,99,1,1,"DT")
2990210
"^DD",101.41,101.41,99,3)
Answer must be 1-15 characters in length.
"^DD",101.41,101.41,99,21,0)
^^2^2^2980501^
"^DD",101.41,101.41,99,21,1,0)
For menus, this contains the $H time the menu was last compiled for use
"^DD",101.41,101.41,99,21,2,0)
with the Unwinder utility (^XQOR).
"^DD",101.41,101.41,99,"DT")
2990210
"^DD",101.41,101.411,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",101.41,101.411,0,"DT")
2950407
"^DD",101.41,101.411,0,"NM","DESCRIPTION")

"^DD",101.41,101.411,0,"UP")
101.41
"^DD",101.41,101.411,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",101.41,101.411,.01,3)
Enter a description of this dialog.
"^DD",101.41,101.411,.01,21,0)
^^1^1^2950425^^
"^DD",101.41,101.411,.01,21,1,0)
This field contains a description of the content and use of this dialog.
"^DD",101.41,101.411,.01,"DT")
2950407
"^DD",101.41,101.412,0)
ITEMS SUB-FIELD^^117^37
"^DD",101.41,101.412,0,"DT")
2971117
"^DD",101.41,101.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^ORD(101.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",101.41,101.412,0,"IX","ATXT",101.412,21)

"^DD",101.41,101.412,0,"IX","B",101.412,.01)

"^DD",101.41,101.412,0,"IX","D",101.412,2)

"^DD",101.41,101.412,0,"IX","DAD",101.412,1)

"^DD",101.41,101.412,0,"IX","DAD1",101.412,.01)

"^DD",101.41,101.412,0,"NM","ITEMS")

"^DD",101.41,101.412,0,"UP")
101.41
"^DD",101.41,101.412,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.41,101.412,.01,1,0)
^.1
"^DD",101.41,101.412,.01,1,1,0)
101.412^B
"^DD",101.41,101.412,.01,1,1,1)
S ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.412,.01,1,1,2)
K ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.41,101.412,.01,1,2,0)
101.412^DAD1^MUMPS
"^DD",101.41,101.412,.01,1,2,1)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) S:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)=""
"^DD",101.41,101.412,.01,1,2,2)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) K:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)
"^DD",101.41,101.412,.01,1,2,"%D",0)
^^1^1^2950511^
"^DD",101.41,101.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,.01,1,2,"DT")
2950511
"^DD",101.41,101.412,.01,1,3,0)
101.41^AMM^MUMPS
"^DD",101.41,101.412,.01,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",101.41,101.412,.01,1,3,"DT")
2990210
"^DD",101.41,101.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",101.41,101.412,.01,21,0)
^^2^2^2971117^^^^
"^DD",101.41,101.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",101.41,101.412,.01,21,2,0)
processed.
"^DD",101.41,101.412,.01,"DT")
2990210
"^DD",101.41,101.412,.1,0)
INPUT TRANSFORM^K^^.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,.1,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,.1,9)
@
"^DD",101.41,101.412,.1,21,0)
^^2^2^2950816^
"^DD",101.41,101.412,.1,21,1,0)
This is code that will be used as the third piece of DIR(0) when asking
"^DD",101.41,101.412,.1,21,2,0)
this prompt.
"^DD",101.41,101.412,.1,"DT")
2950816
"^DD",101.41,101.412,1,0)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"^DD",101.41,101.412,1,1,0)
^.1
"^DD",101.41,101.412,1,1,1,0)
101.412^DAD^MUMPS
"^DD",101.41,101.412,1,1,1,1)
S ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)=""
"^DD",101.41,101.412,1,1,1,2)
K ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)
"^DD",101.41,101.412,1,1,1,"%D",0)
^^1^1^2950511^^
"^DD",101.41,101.412,1,1,1,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,1,1,1,"DT")
2950511
"^DD",101.41,101.412,1,3)
If this prompt is subordinate to another in this dialog, enter the parent prompt here
"^DD",101.41,101.412,1,21,0)
^^4^4^2950511^
"^DD",101.41,101.412,1,21,1,0)
This field controls the behavior of this prompt.  If a parent is defined
"^DD",101.41,101.412,1,21,2,0)
here, this prompt will be asked from within the parent's dialog; when it
"^DD",101.41,101.412,1,21,3,0)
is invoked independently based on its position sequence number, the child
"^DD",101.41,101.412,1,21,4,0)
prompt will be ignored.
"^DD",101.41,101.412,1,"DT")
2950511
"^DD",101.41,101.412,2,0)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"^DD",101.41,101.412,2,1,0)
^.1
"^DD",101.41,101.412,2,1,1,0)
101.41^AD
"^DD",101.41,101.412,2,1,1,1)
S ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",101.41,101.412,2,1,1,2)
K ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",101.41,101.412,2,1,1,"DT")
2950123
"^DD",101.41,101.412,2,1,2,0)
101.412^D
"^DD",101.41,101.412,2,1,2,1)
S ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.412,2,1,2,2)
K ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",101.41,101.412,2,1,2,"DT")
2950411
"^DD",101.41,101.412,2,1,3,0)
101.41^AMM2^MUMPS
"^DD",101.41,101.412,2,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",101.41,101.412,2,1,3,"DT")
2990210
"^DD",101.41,101.412,2,3)
Enter an order dialog; a dialog that is an ancestor may not also be a sub-item.
"^DD",101.41,101.412,2,21,0)
^^3^3^2950123^
"^DD",101.41,101.412,2,21,1,0)
This field points to an order dialog which is subordinate to this dialog.
"^DD",101.41,101.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",101.41,101.412,2,21,3,0)
as an item.
"^DD",101.41,101.412,2,"DT")
2990217
"^DD",101.41,101.412,3,0)
MNEMONIC^FX^^0;3^K:$L(X)>4!($L(X)<1)!(+X=X&($L(X,".")>1))!($$CHKMNE^ORUTL(X)) X
"^DD",101.41,101.412,3,1,0)
^.1
"^DD",101.41,101.412,3,1,1,0)
101.41^AMM3^MUMPS
"^DD",101.41,101.412,3,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,3,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC is changed.
"^DD",101.41,101.412,3,1,1,"DT")
2990210
"^DD",101.41,101.412,3,3)
Enter a mnemonic to be used when this dialog is displayed for selection, 1-4 characters in length with no decimal places if numeric. Standard list manager mnemonics may not be used.
"^DD",101.41,101.412,3,21,0)
^.001^2^2^3010727^^^^
"^DD",101.41,101.412,3,21,1,0)
This is a short abbreviation for this item dialog to be used when this
"^DD",101.41,101.412,3,21,2,0)
dialog is displayed for selection.
"^DD",101.41,101.412,3,"DT")
3000822
"^DD",101.41,101.412,4,0)
DISPLAY TEXT^FX^^0;4^K:$L(X)>80!($L(X)<1)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.412,4,1,0)
^.1
"^DD",101.41,101.412,4,1,1,0)
101.41^AMM4^MUMPS
"^DD",101.41,101.412,4,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,4,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.412,4,1,1,"DT")
2990210
"^DD",101.41,101.412,4,3)
Answer must be 1-80 characters in length and cannot contain an up-arrow (^) or semi-colon (;).
"^DD",101.41,101.412,4,21,0)
^.001^2^2^3010419^^^^
"^DD",101.41,101.412,4,21,1,0)
This field allows the text that normally appears for this item to be
"^DD",101.41,101.412,4,21,2,0)
replaced with alternate text for use in this dialog or menu.
"^DD",101.41,101.412,4,"DT")
3000823
"^DD",101.41,101.412,5,0)
DISPLAY ONLY?^S^0:NO;1:YES;2:YES-HEADER;^0;5^Q
"^DD",101.41,101.412,5,1,0)
^.1
"^DD",101.41,101.412,5,1,1,0)
101.41^AMM5^MUMPS
"^DD",101.41,101.412,5,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,5,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY ONLY? is changed.
"^DD",101.41,101.412,5,1,1,"DT")
2990210
"^DD",101.41,101.412,5,3)
Enter YES if this item is text for display only and not a selectable item.
"^DD",101.41,101.412,5,21,0)
^^3^3^2970409^^^^
"^DD",101.41,101.412,5,21,1,0)
This field identifies an item as being free text for display purposes
"^DD",101.41,101.412,5,21,2,0)
only.  The text in the Display Text field will be displayed, but it
"^DD",101.41,101.412,5,21,3,0)
is not selectable; if designated as a header, the text will be underlined.
"^DD",101.41,101.412,5,"DT")
2990210
"^DD",101.41,101.412,6,0)
REQUIRED^S^1:YES;0:NO;^0;6^Q
"^DD",101.41,101.412,6,3)
Enter YES if a response to this prompt is mandatory.
"^DD",101.41,101.412,6,21,0)
^^1^1^2950407^
"^DD",101.41,101.412,6,21,1,0)
This field indicates that the user must enter a response to this prompt.
"^DD",101.41,101.412,6,"DT")
2950407
"^DD",101.41,101.412,7,0)
MULTIPLE VALUED^S^1:YES;0:NO;^0;7^Q
"^DD",101.41,101.412,7,3)
Enter YES if this prompt is to be asked multiple times.
"^DD",101.41,101.412,7,21,0)
^^3^3^2950407^
"^DD",101.41,101.412,7,21,1,0)
This field determines if this prompt will be allowed to have multiple
"^DD",101.41,101.412,7,21,2,0)
values, or be prompted for only once; if this prompt is a sub-dialog,
"^DD",101.41,101.412,7,21,3,0)
the entire dialog will be asked once or many times, as a group.
"^DD",101.41,101.412,7,"DT")
2950407
"^DD",101.41,101.412,7.1,0)
MAX NUMBER OF MULTIPLES^NJ2,0^^0;12^K:+X'=X!(X>99)!(X<2)!(X?.E1"."1N.N) X
"^DD",101.41,101.412,7.1,3)
Type a Number between 2 and 99, 0 Decimal Digits
"^DD",101.41,101.412,7.1,21,0)
^^4^4^2950815^
"^DD",101.41,101.412,7.1,21,1,0)
This is the maximum number of values that may be entered for this prompt,
"^DD",101.41,101.412,7.1,21,2,0)
if it is flagged as being multiple-valued.  For example, a diet order may
"^DD",101.41,101.412,7.1,21,3,0)
have up to 5 diet modifications entered, where 5 is the maximum allowed
"^DD",101.41,101.412,7.1,21,4,0)
that would be entered here.
"^DD",101.41,101.412,7.1,"DT")
2950815
"^DD",101.41,101.412,7.2,0)
TITLE^F^^0;13^K:$L(X)>30!($L(X)<3) X
"^DD",101.41,101.412,7.2,3)
Answer must be 3-30 characters in length.
"^DD",101.41,101.412,7.2,21,0)
^^8^8^2970430^^
"^DD",101.41,101.412,7.2,21,1,0)
This is text that will be used in place of the prompt when the order is
"^DD",101.41,101.412,7.2,21,2,0)
displayed for place, edit, or cancel, or at the top of a multiple-valued
"^DD",101.41,101.412,7.2,21,3,0)
prompt.  The Display Text for the prompt will be used together with the
"^DD",101.41,101.412,7.2,21,4,0)
instance number to prompt for user input; for example if Title="Lab Tests:"
"^DD",101.41,101.412,7.2,21,5,0)
and Display Text="Test:" the user would see
"^DD",101.41,101.412,7.2,21,6,0)
  Lab Tests:
"^DD",101.41,101.412,7.2,21,7,0)
  1. Test:
"^DD",101.41,101.412,7.2,21,8,0)
  2. Test:
"^DD",101.41,101.412,7.2,"DT")
2950815
"^DD",101.41,101.412,7.3,0)
PROMPT^F^^0;14^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,7.3,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,7.3,21,0)
^^3^3^2970618^
"^DD",101.41,101.412,7.3,21,1,0)
This field contains text that will be appended to the beginning of the
"^DD",101.41,101.412,7.3,21,2,0)
display text when prompting for additional values; if this field is
"^DD",101.41,101.412,7.3,21,3,0)
empty, then "Another " will be used.
"^DD",101.41,101.412,7.3,"DT")
2970618
"^DD",101.41,101.412,8,0)
ASK ON EDIT ONLY^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.412,8,3)
Enter YES if this prompt should not be asked initially when creating this order, only if the user chooses to edit the order.
"^DD",101.41,101.412,8,21,0)
^^4^4^2960112^^^
"^DD",101.41,101.412,8,21,1,0)
This field determines the behaviour of the dialog driver for this prompt;
"^DD",101.41,101.412,8,21,2,0)
if no value or the defined default is usually correct for this prompt,
"^DD",101.41,101.412,8,21,3,0)
enter YES here to have this prompt skipped on the first pass through this
"^DD",101.41,101.412,8,21,4,0)
dialog when creating an order.
"^DD",101.41,101.412,8,"DT")
2950407
"^DD",101.41,101.412,9,0)
ASK ON ACTION^F^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",101.41,101.412,9,3)
Answer must be 1-3 characters in length.
"^DD",101.41,101.412,9,21,0)
^^6^6^2970708^^^
"^DD",101.41,101.412,9,21,1,0)
This field determines the behaviour of the dialog driver for this prompt
"^DD",101.41,101.412,9,21,2,0)
when taking a particular action on an order created by this dialog.  If
"^DD",101.41,101.412,9,21,3,0)
this string contains "R", this prompt will be asked when renewing an order;
"^DD",101.41,101.412,9,21,4,0)
if this string contains "C", this prompt will be asked when changing an
"^DD",101.41,101.412,9,21,5,0)
order; if this string contains "W", this prompt will be asked when
"^DD",101.41,101.412,9,21,6,0)
rewriting an order.
"^DD",101.41,101.412,9,"DT")
2970708
"^DD",101.41,101.412,10,0)
INDEX^F^^0;10^K:$L(X)>25!($L(X)<1) X
"^DD",101.41,101.412,10,3)
Answer must be 1-25 characters in length.
"^DD",101.41,101.412,10,21,0)
^^3^3^2950713^^^
"^DD",101.41,101.412,10,21,1,0)
For pointer-type prompts, this is the index to use when searching the file;
"^DD",101.41,101.412,10,21,2,0)
it must be in the form of a regular cross-reference.  To search on multiple
"^DD",101.41,101.412,10,21,3,0)
indices, enter a string of index names separated by semi-colons, i.e. "B;C".
"^DD",101.41,101.412,10,"DT")
2950713
"^DD",101.41,101.412,11,0)
HELP MESSAGE^F^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",101.41,101.412,11,3)
Answer must be 1-160 characters in length.
"^DD",101.41,101.412,11,21,0)
^^2^2^2970609^^
"^DD",101.41,101.412,11,21,1,0)
This field contains the help message to be presented when the user enters
"^DD",101.41,101.412,11,21,2,0)
a question mark at this prompt.
"^DD",101.41,101.412,11,"DT")
2970609
"^DD",101.41,101.412,12,0)
SPECIAL LOOKUP ROUTINE^F^^1;2^K:$L(X)>20!($L(X)<3) X
"^DD",101.41,101.412,12,3)
Enter the routine to use instead of DIC to do this lookup, as [TAG;]ROUTINE
"^DD",101.41,101.412,12,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,12,21,1,0)
This field contains a routine to execute that will replace the standard
"^DD",101.41,101.412,12,21,2,0)
DIC lookup for this prompt; it must be entered here as LINETAG;ROUTINE
"^DD",101.41,101.412,12,21,3,0)
using a ; instead of ^ and where LINETAG is optional.
"^DD",101.41,101.412,12,"DT")
2970609
"^DD",101.41,101.412,13,0)
ASK ON CONDITION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,13,3)
This is MUMPS code that sets $T to determine if this prompt should be asked, or given a default value and bypassed.
"^DD",101.41,101.412,13,9)
@
"^DD",101.41,101.412,13,21,0)
^^5^5^2950407^
"^DD",101.41,101.412,13,21,1,0)
This is MUMPS code that sets $T to determine if this prompt should be asked
"^DD",101.41,101.412,13,21,2,0)
or simply given a default value and presented to the user for acceptance
"^DD",101.41,101.412,13,21,3,0)
or editing.  For example, the prompt "Pregnant: " may have code here to
"^DD",101.41,101.412,13,21,4,0)
check the sex of the current patient, i.e. I ORSEX="F" will allow it to be
"^DD",101.41,101.412,13,21,5,0)
asked only for female patients.
"^DD",101.41,101.412,13,"DT")
2950407
"^DD",101.41,101.412,14,0)
SCREEN^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,14,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,14,9)
@
"^DD",101.41,101.412,14,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,14,21,1,0)
For pointer-type prompts, this field may contain MUMPS code that will be
"^DD",101.41,101.412,14,21,2,0)
set into DIC("S") to screen the possible choices in the pointed-to file.
"^DD",101.41,101.412,14,"DT")
2950407
"^DD",101.41,101.412,15,0)
POST-SELECTION ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,15,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,15,9)
@
"^DD",101.41,101.412,15,21,0)
^^3^3^2970923^^^^
"^DD",101.41,101.412,15,21,1,0)
This is code that will be executed after a response is entered to this
"^DD",101.41,101.412,15,21,2,0)
prompt; if this prompt should be re-asked, kill the variable DONE.
"^DD",101.41,101.412,15,21,3,0)
If execution of the ordering dialog should be stopped, set ORQUIT=1.
"^DD",101.41,101.412,15,"DT")
2970923
"^DD",101.41,101.412,16,0)
XECUTABLE HELP^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,16,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,16,9)
@
"^DD",101.41,101.412,16,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,16,21,1,0)
This is code that is to be executed when the user enters two or more
"^DD",101.41,101.412,16,21,2,0)
question marks at this prompt.
"^DD",101.41,101.412,16,"DT")
2950407
"^DD",101.41,101.412,17,0)
DEFAULT^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,17,9)
@
"^DD",101.41,101.412,17,21,0)
^^2^2^2971219^^^^
"^DD",101.41,101.412,17,21,1,0)
This is code that is to be executed to determine the appropriate default
"^DD",101.41,101.412,17,21,2,0)
value for this prompt, setting Y=internal form of this value.
"^DD",101.41,101.412,17,"DT")
2950519
"^DD",101.41,101.412,18,0)
DEFAULT WORD-PROCESSING TEXT^101.41218^^8;0
"^DD",101.41,101.412,18,21,0)
^^1^1^2971219^
"^DD",101.41,101.412,18,21,1,0)
This is default text to be stuffed into this word-processing prompt.
"^DD",101.41,101.412,19,0)
ENTRY ACTION^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,19,9)
@
"^DD",101.41,101.412,19,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,19,21,1,0)
This is code that will be executed at the beginning of the processing of
"^DD",101.41,101.412,19,21,2,0)
this prompt, before the Default and Ask on Condition fields are executed;
"^DD",101.41,101.412,19,21,3,0)
any special setup required for this field should be done here.
"^DD",101.41,101.412,19,"DT")
2970609
"^DD",101.41,101.412,20,0)
EXIT ACTION^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,20,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,20,9)
@
"^DD",101.41,101.412,20,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,20,21,1,0)
This is code that will be executed at the very end of the processing of
"^DD",101.41,101.412,20,21,2,0)
this prompt, after prompting and the Validation field is executed;
"^DD",101.41,101.412,20,21,3,0)
any special cleanup should be done here.
"^DD",101.41,101.412,20,"DT")
2970609
"^DD",101.41,101.412,21,0)
ORDER TEXT SEQUENCE^NJ5,2^^2;1^K:+X'=X!(X>99.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",101.41,101.412,21,1,0)
^.1
"^DD",101.41,101.412,21,1,1,0)
101.412^ATXT
"^DD",101.41,101.412,21,1,1,1)
S ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)=""
"^DD",101.41,101.412,21,1,1,2)
K ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)
"^DD",101.41,101.412,21,1,1,"%D",0)
^^1^1^2960226^
"^DD",101.41,101.412,21,1,1,"%D",1,0)
Used to build order text.
"^DD",101.41,101.412,21,1,1,"DT")
2960226
"^DD",101.41,101.412,21,3)
Enter the order in which this value should be added to the order text, as a number between 1 and 99.99; leave this field blank to prevent this value from being included
"^DD",101.41,101.412,21,21,0)
^^3^3^2970607^^^
"^DD",101.41,101.412,21,21,1,0)
This field indicates the order in which values will be concatenated
"^DD",101.41,101.412,21,21,2,0)
together to build the order text; this may differ from the prompting
"^DD",101.41,101.412,21,21,3,0)
order defined in the .01 Sequence field.
"^DD",101.41,101.412,21,"DT")
2960226
"^DD",101.41,101.412,22,0)
FORMAT^F^^2;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,22,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,22,21,0)
^^15^15^2971207^^^^
"^DD",101.41,101.412,22,21,1,0)
This is a string of characters that will define any exceptions to how
"^DD",101.41,101.412,22,21,2,0)
the external form of this value is generated.  Possible values include:
"^DD",101.41,101.412,22,21,3,0)
  Pointer         -> <field #>~<piece in RPC list of field #>, default =.01
"^DD",101.41,101.412,22,21,4,0)
  Set of Codes    -> 1~<piece in RPC list of code> to use code for name
"^DD",101.41,101.412,22,21,5,0)
  Date/Time       -> Format string to pass $$FMTE^XLFDT (default = 2)
"^DD",101.41,101.412,22,21,6,0)
  
"^DD",101.41,101.412,22,21,7,0)
  Suppress value  -> @
"^DD",101.41,101.412,22,21,8,0)
  Replace value   -> @<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,9,0)
                      whose value, when present, supersedes this value
"^DD",101.41,101.412,22,21,10,0)
  Required value  -> *<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,11,0)
                      whose value is required to be present to include
"^DD",101.41,101.412,22,21,12,0)
                      this value
"^DD",101.41,101.412,22,21,13,0)
  Ignore if same  -> =<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,14,0)
                      whose value, if the external form is the same,
"^DD",101.41,101.412,22,21,15,0)
                      supersedes this value
"^DD",101.41,101.412,22,"DT")
2960226
"^DD",101.41,101.412,23,0)
OMIT TEXT^F^^2;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,23,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,23,21,0)
^^3^3^2970829^^^^
"^DD",101.41,101.412,23,21,1,0)
This is the external form of a value that is not to be included when building
"^DD",101.41,101.412,23,21,2,0)
the order text.  E.g. to include the urgency in the order text unless it
"^DD",101.41,101.412,23,21,3,0)
is routine, enter "ROUTINE" here.
"^DD",101.41,101.412,23,"DT")
2970829
"^DD",101.41,101.412,24,0)
LEADING TEXT^F^^2;4^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,24,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,24,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,24,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,24,21,2,0)
immediately in front of this value, e.g. "Instructions:".  If this text
"^DD",101.41,101.412,24,21,3,0)
is contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,24,"DT")
2970724
"^DD",101.41,101.412,25,0)
TRAILING TEXT^F^^2;5^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,25,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,25,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,25,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,25,21,2,0)
immediately following this value, e.g. "refills".  If this text is
"^DD",101.41,101.412,25,21,3,0)
contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,25,"DT")
2970724
"^DD",101.41,101.412,26,0)
START NEW LINE^S^1:YES;0:NO;^2;6^Q
"^DD",101.41,101.412,26,3)
Enter YES if this value should begin on a new line in the order text.
"^DD",101.41,101.412,26,21,0)
0^^2^2^2970911^
"^DD",101.41,101.412,26,21,1,0)
This field determines if this value is concatenated onto the current line
"^DD",101.41,101.412,26,21,2,0)
when building the order text, or if a new line is started with this value.
"^DD",101.41,101.412,26,"DT")
2970911
"^DD",101.41,101.412,27,0)
WORD-WRAP^S^1:DON'T WRAP;0:WRAP;^2;7^Q
"^DD",101.41,101.412,27,3)
Enter 'Don't Wrap' to have the text be added line-by-line as it is stored; the default formatting is 'Wrap'.
"^DD",101.41,101.412,27,21,0)
^^3^3^2970926^^^
"^DD",101.41,101.412,27,21,1,0)
This field determines if this text should be wrapped when added to the
"^DD",101.41,101.412,27,21,2,0)
order text, or appended line by line as stored in the file; this is only
"^DD",101.41,101.412,27,21,3,0)
used for word-processing type prompts.
"^DD",101.41,101.412,27,"DT")
2970926
"^DD",101.41,101.412,101,0)
WINDOWS CONTROL^F^^W;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,101,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,101,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,101,21,1,0)
Stores the type of Windows control necessary to get the data for this
"^DD",101.41,101.412,101,21,2,0)
prompt.
"^DD",101.41,101.412,101,"DT")
2960517
"^DD",101.41,101.412,102,0)
API NAME^F^^W;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,102,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,102,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,102,21,1,0)
This is the API that should be called when the control is used.  How the API
"^DD",101.41,101.412,102,21,2,0)
is used varys with the control.  Examples are: filling list boxes, getting
"^DD",101.41,101.412,102,21,3,0)
boilerplate text, etc.
"^DD",101.41,101.412,102,"DT")
2951002
"^DD",101.41,101.412,103,0)
API PARAMETER #1^F^^W;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,103,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,103,21,0)
^^1^1^2950715^
"^DD",101.41,101.412,103,21,1,0)
A parameter that is used by the API call may be stored here.
"^DD",101.41,101.412,103,"DT")
2950715
"^DD",101.41,101.412,113,0)
WINDOWS CONDITION^K^^W3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,113,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,113,9)
@
"^DD",101.41,101.412,113,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,113,21,1,0)
This is silent code that is executed when building the dialog for windows.
"^DD",101.41,101.412,113,21,2,0)
It identifies which prompts should be included in the dialog.  The condition
"^DD",101.41,101.412,113,21,3,0)
should leave $T false if the prompt should not be asked.
"^DD",101.41,101.412,113,"DT")
2950715
"^DD",101.41,101.412,117,0)
WINDOWS DEFAULT^K^^W7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,117,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,117,9)
@
"^DD",101.41,101.412,117,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,117,21,1,0)
This code should silently set the default value of a prompt when it is 
"^DD",101.41,101.412,117,21,2,0)
selected.
"^DD",101.41,101.412,117,"DT")
2950715
"^DD",101.41,101.41218,0)
DEFAULT WORD-PROCESSING TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.41218,0,"DT")
2950407
"^DD",101.41,101.41218,0,"NM","DEFAULT WORD-PROCESSING TEXT")

"^DD",101.41,101.41218,0,"UP")
101.412
"^DD",101.41,101.41218,.01,0)
DEFAULT WORD-PROCESSING TEXT^W^^0;1^Q
"^DD",101.41,101.41218,.01,3)
Enter the default response for a word-processing type prompt.
"^DD",101.41,101.41218,.01,21,0)
^^2^2^2950407^
"^DD",101.41,101.41218,.01,21,1,0)
This field contains the text to be presented as the default for this prompt,
"^DD",101.41,101.41218,.01,21,2,0)
for word-processing type prompts.
"^DD",101.41,101.41218,.01,"DT")
2950407
"^DD",101.41,101.415,0)
CONTROLS SUB-FIELD^^14^14
"^DD",101.41,101.415,0,"DT")
2960202
"^DD",101.41,101.415,0,"IX","AC",101.415,3)

"^DD",101.41,101.415,0,"IX","B",101.415,.01)

"^DD",101.41,101.415,0,"NM","CONTROLS")

"^DD",101.41,101.415,0,"UP")
101.41
"^DD",101.41,101.415,.01,0)
LOGICAL NAME^MF^^0;1^K:$L(X)>8!($L(X)<1)!'(X?1.8U) X
"^DD",101.41,101.415,.01,1,0)
^.1
"^DD",101.41,101.415,.01,1,1,0)
101.415^B
"^DD",101.41,101.415,.01,1,1,1)
S ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.415,.01,1,1,2)
K ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)
"^DD",101.41,101.415,.01,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,.01,21,0)
^^1^1^2960202^
"^DD",101.41,101.415,.01,21,1,0)
This is the name by which controls can refer to each other.
"^DD",101.41,101.415,.01,"DT")
2960202
"^DD",101.41,101.415,2,0)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.415,2,"DT")
2960202
"^DD",101.41,101.415,3,0)
CREATE SEQUENCE^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,3,1,0)
^.1
"^DD",101.41,101.415,3,1,1,0)
101.415^AC
"^DD",101.41,101.415,3,1,1,1)
S ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)=""
"^DD",101.41,101.415,3,1,1,2)
K ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)
"^DD",101.41,101.415,3,1,1,"%D",0)
^^2^2^2960202^
"^DD",101.41,101.415,3,1,1,"%D",1,0)
The 'AC' cross-reference puts in window controls in order by creation 
"^DD",101.41,101.415,3,1,1,"%D",2,0)
sequence.
"^DD",101.41,101.415,3,1,1,"DT")
2960202
"^DD",101.41,101.415,3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.41,101.415,3,"DT")
2960202
"^DD",101.41,101.415,4,0)
CONTROL TYPE^S^0:Label;1:Button;2:Edit;3:Memo;4:ListBox;5:SimpleCombo;6:DropDownList;7:LongCombo;^0;4^Q
"^DD",101.41,101.415,4,"DT")
2960202
"^DD",101.41,101.415,5,0)
LABEL^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.415,5,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.415,5,"DT")
2960202
"^DD",101.41,101.415,6,0)
BESIDE^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,6,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,6,"DT")
2960202
"^DD",101.41,101.415,7,0)
BELOW^F^^0;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,7,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,7,"DT")
2960202
"^DD",101.41,101.415,8,0)
WIDTH^NJ6,4^^0;8^K:+X'=X!(X>1)!(X<0)!(X?.E1"."5N.N) X
"^DD",101.41,101.415,8,3)
Type a Number between 0 and 1, 4 Decimal Digits
"^DD",101.41,101.415,8,"DT")
2960202
"^DD",101.41,101.415,9,0)
LEFT CONTROL^F^^0;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,9,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,9,"DT")
2960202
"^DD",101.41,101.415,10,0)
RIGHT CONTROL^F^^0;10^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,10,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,10,"DT")
2960202
"^DD",101.41,101.415,11,0)
HEIGHT^NJ2,0^^0;11^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,11,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.41,101.415,11,"DT")
2960202
"^DD",101.41,101.415,12,0)
UPPER CONTROL^F^^0;12^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,12,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,12,"DT")
2960202
"^DD",101.41,101.415,13,0)
LOWER CONTROL^F^^0;13^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,13,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,13,"DT")
2960202
"^DD",101.41,101.415,14,0)
TAB SEQUENCE^NJ2,0^^0;14^K:+X'=X!(X>89)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,14,3)
Type a Number between 0 and 89, 0 Decimal Digits
"^DD",101.41,101.415,14,"DT")
2960202
"^DD",101.41,101.416,0)
RESPONSES SUB-FIELD^^2^5
"^DD",101.41,101.416,0,"DT")
2960717
"^DD",101.41,101.416,0,"IX","D",101.416,.02)

"^DD",101.41,101.416,0,"NM","RESPONSES")

"^DD",101.41,101.416,0,"UP")
101.41
"^DD",101.41,101.416,.01,0)
ITEM ENTRY^MNJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.01,1,0)
^.1^^0
"^DD",101.41,101.416,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.01,21,0)
^^2^2^2971219^^^
"^DD",101.41,101.416,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",101.41,101.416,.01,21,2,0)
by which this response was obtained.
"^DD",101.41,101.416,.01,"DT")
2961118
"^DD",101.41,101.416,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.416,.02,1,0)
^.1
"^DD",101.41,101.416,.02,1,1,0)
101.416^D
"^DD",101.41,101.416,.02,1,1,1)
S ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.416,.02,1,1,2)
K ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)
"^DD",101.41,101.416,.02,1,1,"DT")
2961118
"^DD",101.41,101.416,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",101.41,101.416,.02,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",101.41,101.416,.02,21,2,0)
as type prompt.
"^DD",101.41,101.416,.02,"DT")
2961118
"^DD",101.41,101.416,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.03,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",101.41,101.416,.03,21,2,0)
individual instance.
"^DD",101.41,101.416,.03,"DT")
2960717
"^DD",101.41,101.416,1,0)
VALUE^FO^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",101.41,101.416,1,2)
S Y(0)=Y S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,2.1)
S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,3)
Answer must be 1-245 characters in length.
"^DD",101.41,101.416,1,21,0)
^^2^2^2971219^^
"^DD",101.41,101.416,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",101.41,101.416,1,21,2,0)
type.
"^DD",101.41,101.416,1,"DT")
2980717
"^DD",101.41,101.416,2,0)
TEXT^101.4162^^2;0
"^DD",101.41,101.416,2,21,0)
^^1^1^2971219^
"^DD",101.41,101.416,2,21,1,0)
This contains the actual response, for word-processing type prompts.
"^DD",101.41,101.416,2,"DT")
2960717
"^DD",101.41,101.4162,0)
TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.4162,0,"DT")
2960717
"^DD",101.41,101.4162,0,"NM","TEXT")

"^DD",101.41,101.4162,0,"UP")
101.416
"^DD",101.41,101.4162,.01,0)
TEXT^WL^^0;1^Q
"^DD",101.41,101.4162,.01,21,0)
^^1^1^2960717^^
"^DD",101.41,101.4162,.01,21,1,0)
This contains responses to items that are a word processing type.
"^DD",101.41,101.4162,.01,"DT")
2960717
"^DIC",100.9,100.9,0)
OE/RR NOTIFICATIONS^100.9
"^DIC",100.9,100.9,0,"GL")
^ORD(100.9,
"^DIC",100.9,100.9,"%D",0)
^^5^5^2970731^^^
"^DIC",100.9,100.9,"%D",1,0)
This file contains data used to generate notifications.  Packages
"^DIC",100.9,100.9,"%D",2,0)
determine if a notification should be sent then send the patient ID and
"^DIC",100.9,100.9,"%D",3,0)
notification ID (IEN in this file) to order entry routines.  Based on the
"^DIC",100.9,100.9,"%D",4,0)
notification IEN, data from this file is used to generate the notification
"^DIC",100.9,100.9,"%D",5,0)
and help determine its recipients.
"^DIC",100.9,"B","OE/RR NOTIFICATIONS",100.9)

"^DIC",100.98,100.98,0)
DISPLAY GROUP^100.98I
"^DIC",100.98,100.98,0,"GL")
^ORD(100.98,
"^DIC",100.98,100.98,"%D",0)
^^5^5^2971218^^^^
"^DIC",100.98,100.98,"%D",1,0)
This file allows orders to be clustered in groups other than by package.
"^DIC",100.98,100.98,"%D",2,0)
It is similar in structure to the OPTION File (19).  This allows display
"^DIC",100.98,100.98,"%D",3,0)
groups to be arranged in a hierarchy.  The main entry in this file
"^DIC",100.98,100.98,"%D",4,0)
should be 'ALL SERVICES'.  Other entries should be logically subordinate
"^DIC",100.98,100.98,"%D",5,0)
to the 'ALL SERVICES' entry.
"^DIC",100.98,"B","DISPLAY GROUP",100.98)

"^DIC",101.41,101.41,0)
ORDER DIALOG^101.41
"^DIC",101.41,101.41,0,"GL")
^ORD(101.41,
"^DIC",101.41,101.41,"%D",0)
^^2^2^2960819^^
"^DIC",101.41,101.41,"%D",1,0)
This file contains the information needed to define how to prompt for each
"^DIC",101.41,101.41,"%D",2,0)
order, what values are acceptable, etc.
"^DIC",101.41,"B","ORDER DIALOG",101.41)

**INSTALL NAME**
GMRV*5.0*34
"BLD",9673,0)
GMRV*5.0*34^GEN. MED. REC. - VITALS^0^3171010^y
"BLD",9673,4,0)
^9.64PA^^
"BLD",9673,6.3)
30
"BLD",9673,"INIT")
EN^GMV34PST
"BLD",9673,"KRN",0)
^9.67PA^779.2^20
"BLD",9673,"KRN",.4,0)
.4
"BLD",9673,"KRN",.401,0)
.401
"BLD",9673,"KRN",.402,0)
.402
"BLD",9673,"KRN",.403,0)
.403
"BLD",9673,"KRN",.5,0)
.5
"BLD",9673,"KRN",.84,0)
.84
"BLD",9673,"KRN",3.6,0)
3.6
"BLD",9673,"KRN",3.8,0)
3.8
"BLD",9673,"KRN",9.2,0)
9.2
"BLD",9673,"KRN",9.8,0)
9.8
"BLD",9673,"KRN",19,0)
19
"BLD",9673,"KRN",19.1,0)
19.1
"BLD",9673,"KRN",101,0)
101
"BLD",9673,"KRN",409.61,0)
409.61
"BLD",9673,"KRN",771,0)
771
"BLD",9673,"KRN",779.2,0)
779.2
"BLD",9673,"KRN",870,0)
870
"BLD",9673,"KRN",8989.51,0)
8989.51
"BLD",9673,"KRN",8989.52,0)
8989.52
"BLD",9673,"KRN",8994,0)
8994
"BLD",9673,"KRN","B",.4,.4)

"BLD",9673,"KRN","B",.401,.401)

"BLD",9673,"KRN","B",.402,.402)

"BLD",9673,"KRN","B",.403,.403)

"BLD",9673,"KRN","B",.5,.5)

"BLD",9673,"KRN","B",.84,.84)

"BLD",9673,"KRN","B",3.6,3.6)

"BLD",9673,"KRN","B",3.8,3.8)

"BLD",9673,"KRN","B",9.2,9.2)

"BLD",9673,"KRN","B",9.8,9.8)

"BLD",9673,"KRN","B",19,19)

"BLD",9673,"KRN","B",19.1,19.1)

"BLD",9673,"KRN","B",101,101)

"BLD",9673,"KRN","B",409.61,409.61)

"BLD",9673,"KRN","B",771,771)

"BLD",9673,"KRN","B",779.2,779.2)

"BLD",9673,"KRN","B",870,870)

"BLD",9673,"KRN","B",8989.51,8989.51)

"BLD",9673,"KRN","B",8989.52,8989.52)

"BLD",9673,"KRN","B",8994,8994)

"BLD",9673,"QUES",0)
^9.62^^
"BLD",9673,"REQB",0)
^9.611^1^1
"BLD",9673,"REQB",1,0)
OR*3.0*434^2
"BLD",9673,"REQB","B","OR*3.0*434",1)

"INIT")
EN^GMV34PST
"MBREQ")
1
"PKG",503,-1)
1^1
"PKG",503,0)
GEN. MED. REC. - VITALS^GMRV^Vitals/Measurements Module of General Medical Record.
"PKG",503,20,0)
^9.402P^^
"PKG",503,22,0)
^9.49I^1^1
"PKG",503,22,1,0)
5.0^3021028^3030402^11748
"PKG",503,22,1,"PAH",1,0)
34^3171010^10000000200
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","GMV34PST")
0^^B860960
"RTN","GMV34PST",1,0)
GMV34PST ;SLCIO/JLC - FIX PARAMETER SETTINGS ; 04/13/15 03:30pm
"RTN","GMV34PST",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**34**;Oct 31, 2002;Build 30
"RTN","GMV34PST",3,0)
 Q
"RTN","GMV34PST",4,0)
 ; This routine uses the following IAs:
"RTN","GMV34PST",5,0)
 ; 2263 - ^XPAR                  (supported)
"RTN","GMV34PST",6,0)
 ; 
"RTN","GMV34PST",7,0)
EN ; main entry point 
"RTN","GMV34PST",8,0)
 D DLL
"RTN","GMV34PST",9,0)
 Q
"RTN","GMV34PST",10,0)
DLL ;
"RTN","GMV34PST",11,0)
 ; Variables:
"RTN","GMV34PST",12,0)
 ;  GMV:    [Private] Scratch
"RTN","GMV34PST",13,0)
 ;  GMVDLL: [Private] Current version of DLL being installed
"RTN","GMV34PST",14,0)
 ;  GMVLST: [Private] Scratch List
"RTN","GMV34PST",15,0)
 ;
"RTN","GMV34PST",16,0)
 ; New private variables
"RTN","GMV34PST",17,0)
 N GMV,GMVDLL,GMVLST
"RTN","GMV34PST",18,0)
 ; Announce my intentions
"RTN","GMV34PST",19,0)
 D BMES^XPDUTL("Updating DLL parameter.")
"RTN","GMV34PST",20,0)
 ; Deactivate all previous versions from XPAR
"RTN","GMV34PST",21,0)
 D GETLST^XPAR(.GMVLST,"SYS","GMV DLL VERSION")
"RTN","GMV34PST",22,0)
 F GMV=0:0 S GMV=$O(GMVLST(GMV)) Q:'GMV  D
"RTN","GMV34PST",23,0)
 . D EN^XPAR("SYS","GMV DLL VERSION",$P(GMVLST(GMV),"^",1),0)
"RTN","GMV34PST",24,0)
 ; Add and/or activate current client versions
"RTN","GMV34PST",25,0)
 S GMVDLL="5.0.34.5" ;patch 34
"RTN","GMV34PST",26,0)
 D EN^XPAR("SYS","GMV DLL VERSION",GMVDLL,1)
"RTN","GMV34PST",27,0)
 Q
"VER")
8.0^22.2
**INSTALL NAME**
YS*5.01*128
"BLD",9676,0)
YS*5.01*128^MENTAL HEALTH^0^3171010^y
"BLD",9676,4,0)
^9.64PA^^
"BLD",9676,6.3)
26
"BLD",9676,"ABPKG")
n
"BLD",9676,"INIT")
POST^YS128PS0
"BLD",9676,"KRN",0)
^9.67PA^779.2^20
"BLD",9676,"KRN",.4,0)
.4
"BLD",9676,"KRN",.401,0)
.401
"BLD",9676,"KRN",.402,0)
.402
"BLD",9676,"KRN",.403,0)
.403
"BLD",9676,"KRN",.5,0)
.5
"BLD",9676,"KRN",.84,0)
.84
"BLD",9676,"KRN",3.6,0)
3.6
"BLD",9676,"KRN",3.8,0)
3.8
"BLD",9676,"KRN",9.2,0)
9.2
"BLD",9676,"KRN",9.8,0)
9.8
"BLD",9676,"KRN",19,0)
19
"BLD",9676,"KRN",19,"NM",0)
^9.68A^^0
"BLD",9676,"KRN",19.1,0)
19.1
"BLD",9676,"KRN",101,0)
101
"BLD",9676,"KRN",409.61,0)
409.61
"BLD",9676,"KRN",771,0)
771
"BLD",9676,"KRN",779.2,0)
779.2
"BLD",9676,"KRN",870,0)
870
"BLD",9676,"KRN",8989.51,0)
8989.51
"BLD",9676,"KRN",8989.52,0)
8989.52
"BLD",9676,"KRN",8994,0)
8994
"BLD",9676,"KRN","B",.4,.4)

"BLD",9676,"KRN","B",.401,.401)

"BLD",9676,"KRN","B",.402,.402)

"BLD",9676,"KRN","B",.403,.403)

"BLD",9676,"KRN","B",.5,.5)

"BLD",9676,"KRN","B",.84,.84)

"BLD",9676,"KRN","B",3.6,3.6)

"BLD",9676,"KRN","B",3.8,3.8)

"BLD",9676,"KRN","B",9.2,9.2)

"BLD",9676,"KRN","B",9.8,9.8)

"BLD",9676,"KRN","B",19,19)

"BLD",9676,"KRN","B",19.1,19.1)

"BLD",9676,"KRN","B",101,101)

"BLD",9676,"KRN","B",409.61,409.61)

"BLD",9676,"KRN","B",771,771)

"BLD",9676,"KRN","B",779.2,779.2)

"BLD",9676,"KRN","B",870,870)

"BLD",9676,"KRN","B",8989.51,8989.51)

"BLD",9676,"KRN","B",8989.52,8989.52)

"BLD",9676,"KRN","B",8994,8994)

"BLD",9676,"QUES",0)
^9.62^^
"BLD",9676,"REQB",0)
^9.611^2^2
"BLD",9676,"REQB",1,0)
OR*3.0*434^2
"BLD",9676,"REQB",2,0)
YS*5.01*116^2
"BLD",9676,"REQB","B","OR*3.0*434",1)

"BLD",9676,"REQB","B","YS*5.01*116",2)

"INIT")
POST^YS128PS0
"MBREQ")
1
"PKG",166,-1)
1^1
"PKG",166,0)
MENTAL HEALTH^YS^Version 5.01 of Mental Health
"PKG",166,20,0)
^9.402P^^
"PKG",166,22,0)
^9.49I^1^1
"PKG",166,22,1,0)
5.01^2941230^2950310
"PKG",166,22,1,"PAH",1,0)
128^3171010
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","YS128PS0")
0^^B1407495
"RTN","YS128PS0",1,0)
YS128PS0 ;SLC/JLC - Patch 128 post-init - utilities; 9/15/2015 ;05/30/17  07:55
"RTN","YS128PS0",2,0)
 ;;5.01;MENTAL HEALTH;**128**;Dec 30, 1994;Build 26
"RTN","YS128PS0",3,0)
 ;
"RTN","YS128PS0",4,0)
 ;
"RTN","YS128PS0",5,0)
 Q
"RTN","YS128PS0",6,0)
 ;
"RTN","YS128PS0",7,0)
UPDVER(WHICH,VER) ; update MHA version number in broker option
"RTN","YS128PS0",8,0)
 ; WHICH: 1=server, 2="A" DLL, 3=MHA exe
"RTN","YS128PS0",9,0)
 ; VER: version string for WHICH component
"RTN","YS128PS0",10,0)
 N OPT,TXT,VERPART,FDA,DIERR
"RTN","YS128PS0",11,0)
 S OPT=$$FIND1^DIC(19,"","X","YS BROKER1","B")
"RTN","YS128PS0",12,0)
 I 'OPT D BMES^XPDUTL("ERROR: YS BROKER1 not found on this system.") QUIT
"RTN","YS128PS0",13,0)
 I $D(DIERR) D BMES^XPDUTL("ERROR: "_$G(^TMP("DIERR",$J,1,"TEXT",1))) QUIT
"RTN","YS128PS0",14,0)
 S TXT=$$GET1^DIQ(19,OPT_",",1),VERPART=$P(TXT,"version ",2)
"RTN","YS128PS0",15,0)
 S $P(VERPART,"~",WHICH)=VER,$P(TXT,"version ",2)=VERPART
"RTN","YS128PS0",16,0)
 S FDA(19,OPT_",",1)=TXT
"RTN","YS128PS0",17,0)
 D FILE^DIE("","FDA")
"RTN","YS128PS0",18,0)
 I $D(DIERR) D BMES^XPDUTL("ERROR: "_$G(^TMP("DIERR",$J,1,"TEXT",1)))
"RTN","YS128PS0",19,0)
 D CLEAN^DILF
"RTN","YS128PS0",20,0)
 Q
"RTN","YS128PS0",21,0)
POST ;update DLL version number
"RTN","YS128PS0",22,0)
 D UPDVER(2,"1.0.5.4")
"RTN","YS128PS0",23,0)
 Q
"VER")
8.0^22.2
**END**
**END**
