KIDS Distribution saved on May 01, 2015@11:46:25
DG*5.3*897
**KIDS**:DG*5.3*897^IVM*2.0*159^

**INSTALL NAME**
DG*5.3*897
"BLD",9744,0)
DG*5.3*897^REGISTRATION^0^3150501^y
"BLD",9744,1,0)
^^4^4^3141027^^^^
"BLD",9744,1,1,0)
Patch DG*5.3*897 addresses one issue:
"BLD",9744,1,2,0)
 
"BLD",9744,1,3,0)
       1.  Patient File Update Utility is not dinuming patients with 
"BLD",9744,1,4,0)
           multiple races correctly.
"BLD",9744,4,0)
^9.64PA^^
"BLD",9744,6.3)
10
"BLD",9744,"ABPKG")
n
"BLD",9744,"KRN",0)
^9.67PA^779.2^20
"BLD",9744,"KRN",.4,0)
.4
"BLD",9744,"KRN",.401,0)
.401
"BLD",9744,"KRN",.402,0)
.402
"BLD",9744,"KRN",.403,0)
.403
"BLD",9744,"KRN",.5,0)
.5
"BLD",9744,"KRN",.84,0)
.84
"BLD",9744,"KRN",3.6,0)
3.6
"BLD",9744,"KRN",3.8,0)
3.8
"BLD",9744,"KRN",9.2,0)
9.2
"BLD",9744,"KRN",9.8,0)
9.8
"BLD",9744,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9744,"KRN",9.8,"NM",1,0)
DGROHLR1^^0^B58139675
"BLD",9744,"KRN",9.8,"NM",2,0)
DG53P897^^0^B28669570
"BLD",9744,"KRN",9.8,"NM","B","DG53P897",2)

"BLD",9744,"KRN",9.8,"NM","B","DGROHLR1",1)

"BLD",9744,"KRN",19,0)
19
"BLD",9744,"KRN",19.1,0)
19.1
"BLD",9744,"KRN",101,0)
101
"BLD",9744,"KRN",409.61,0)
409.61
"BLD",9744,"KRN",771,0)
771
"BLD",9744,"KRN",779.2,0)
779.2
"BLD",9744,"KRN",870,0)
870
"BLD",9744,"KRN",8989.51,0)
8989.51
"BLD",9744,"KRN",8989.52,0)
8989.52
"BLD",9744,"KRN",8994,0)
8994
"BLD",9744,"KRN","B",.4,.4)

"BLD",9744,"KRN","B",.401,.401)

"BLD",9744,"KRN","B",.402,.402)

"BLD",9744,"KRN","B",.403,.403)

"BLD",9744,"KRN","B",.5,.5)

"BLD",9744,"KRN","B",.84,.84)

"BLD",9744,"KRN","B",3.6,3.6)

"BLD",9744,"KRN","B",3.8,3.8)

"BLD",9744,"KRN","B",9.2,9.2)

"BLD",9744,"KRN","B",9.8,9.8)

"BLD",9744,"KRN","B",19,19)

"BLD",9744,"KRN","B",19.1,19.1)

"BLD",9744,"KRN","B",101,101)

"BLD",9744,"KRN","B",409.61,409.61)

"BLD",9744,"KRN","B",771,771)

"BLD",9744,"KRN","B",779.2,779.2)

"BLD",9744,"KRN","B",870,870)

"BLD",9744,"KRN","B",8989.51,8989.51)

"BLD",9744,"KRN","B",8989.52,8989.52)

"BLD",9744,"KRN","B",8994,8994)

"BLD",9744,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",9744,"QUES",0)
^9.62^^
"BLD",9744,"REQB",0)
^9.611^1^1
"BLD",9744,"REQB",1,0)
DG*5.3*797^2
"BLD",9744,"REQB","B","DG*5.3*797",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
897^3150501
"PKG",5,22,1,"PAH",1,1,0)
^^4^4^3150501
"PKG",5,22,1,"PAH",1,1,1,0)
Patch DG*5.3*897 addresses one issue:
"PKG",5,22,1,"PAH",1,1,2,0)
 
"PKG",5,22,1,"PAH",1,1,3,0)
       1.  Patient File Update Utility is not dinuming patients with 
"PKG",5,22,1,"PAH",1,1,4,0)
           multiple races correctly.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DG53P897")
0^2^B28669570
"RTN","DG53P897",1,0)
DG53P897 ;BAY/JAT - Patient File Updat; 6/7/04 7:13pm ; 9/9/14 8:15am
"RTN","DG53P897",2,0)
 ;;5.3;Registration;**897**;Aug 13,1993;Build 10
"RTN","DG53P897",3,0)
 Q
"RTN","DG53P897",4,0)
 ;
"RTN","DG53P897",5,0)
CLEANUP ;This entry point will do the update.
"RTN","DG53P897",6,0)
 ;
"RTN","DG53P897",7,0)
 N DGENSKIP
"RTN","DG53P897",8,0)
 S DGENSKIP=0
"RTN","DG53P897",9,0)
 W !,"This is a one-time update of the Patient File."
"RTN","DG53P897",10,0)
 W !,"It will correct Race & Ethnicity records."
"RTN","DG53P897",11,0)
 N X1,X2
"RTN","DG53P897",12,0)
 K ^XTMP("DG53P897",$J)
"RTN","DG53P897",13,0)
 S X1=DT,X2=90 D C^%DTC
"RTN","DG53P897",14,0)
 S ^XTMP("DG53P897",$J,0)=X_"^"_DT_"^Patient File update"
"RTN","DG53P897",15,0)
 I $$DEVICE() D ENTER
"RTN","DG53P897",16,0)
 Q
"RTN","DG53P897",17,0)
 ;
"RTN","DG53P897",18,0)
REPORT ;This entry point was provided for testing, so that before
"RTN","DG53P897",19,0)
 ;patient records are updated the site can have a list of
"RTN","DG53P897",20,0)
 ;the DFN's that would be affected.
"RTN","DG53P897",21,0)
 ; 
"RTN","DG53P897",22,0)
 ;Use this entry point to report on what the update would do.
"RTN","DG53P897",23,0)
 ;No changes will be made to the database.
"RTN","DG53P897",24,0)
 ;
"RTN","DG53P897",25,0)
 N DGENSKIP
"RTN","DG53P897",26,0)
 S DGENSKIP=1
"RTN","DG53P897",27,0)
 W !,"This is a preliminary report by DFN of the Patient file"
"RTN","DG53P897",28,0)
 W !,"records which would be affected by the update."
"RTN","DG53P897",29,0)
 N X1,X2
"RTN","DG53P897",30,0)
 K ^XTMP("DG53P897",$J)
"RTN","DG53P897",31,0)
 S X1=DT,X2=90 D C^%DTC
"RTN","DG53P897",32,0)
 S ^XTMP("DG53P897",$J,0)=X_"^"_DT_"^Patient File update"
"RTN","DG53P897",33,0)
 I $$DEVICE() D ENTER
"RTN","DG53P897",34,0)
 Q
"RTN","DG53P897",35,0)
 ;
"RTN","DG53P897",36,0)
ENTER ;
"RTN","DG53P897",37,0)
 ;
"RTN","DG53P897",38,0)
 D UPDATE(DGENSKIP)
"RTN","DG53P897",39,0)
 D:(DGENSKIP) ^%ZISC
"RTN","DG53P897",40,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DG53P897",41,0)
 Q
"RTN","DG53P897",42,0)
DEVICE() ;
"RTN","DG53P897",43,0)
 ;Description: allows the user to select a device.
"RTN","DG53P897",44,0)
 ;
"RTN","DG53P897",45,0)
 ;Output:
"RTN","DG53P897",46,0)
 ;  Function Value - Returns 0 if the user decides not to print or to
"RTN","DG53P897",47,0)
 ;       queue the report, 1 otherwise.
"RTN","DG53P897",48,0)
 ;
"RTN","DG53P897",49,0)
 N OK,IOP,POP,%ZIS
"RTN","DG53P897",50,0)
 S OK=1
"RTN","DG53P897",51,0)
 S %ZIS="MQ"
"RTN","DG53P897",52,0)
 D ^%ZIS
"RTN","DG53P897",53,0)
 S:POP OK=0
"RTN","DG53P897",54,0)
 D:OK&$D(IO("Q"))
"RTN","DG53P897",55,0)
 .N ZTRTN,ZTDESC,ZTSKM,ZTREQ,ZTSTOP
"RTN","DG53P897",56,0)
 .S ZTRTN="ENTER^DG53P897",ZTDESC=$S(DGENSKIP:"Report",1:"Update")_" of Patient Records"
"RTN","DG53P897",57,0)
 .S ZTSAVE("DGENSKIP")=""
"RTN","DG53P897",58,0)
 .D ^%ZTLOAD
"RTN","DG53P897",59,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","DG53P897",60,0)
 .D HOME^%ZIS
"RTN","DG53P897",61,0)
 .S OK=0
"RTN","DG53P897",62,0)
 Q OK
"RTN","DG53P897",63,0)
 ;
"RTN","DG53P897",64,0)
UPDATE(DGENSKIP) ;
"RTN","DG53P897",65,0)
 ;This will update patient records --
"RTN","DG53P897",66,0)
 ;
"RTN","DG53P897",67,0)
 ;Input: If DGENSKIP=1, the records will not be updated,
"RTN","DG53P897",68,0)
 ;just reported.
"RTN","DG53P897",69,0)
 ;
"RTN","DG53P897",70,0)
 N DFN,COUNT,DGMULT,DGSAVE,DGDUPE,DGETHN,DGDATA,DGRACE,DGETHNIC,DGFDA,X,DINUM,DIC,DA,DGTEST
"RTN","DG53P897",71,0)
 S (COUNT,DFN)=0
"RTN","DG53P897",72,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  D
"RTN","DG53P897",73,0)
 .; merged record
"RTN","DG53P897",74,0)
 .I $D(^DPT(DFN,-9)) Q
"RTN","DG53P897",75,0)
 .; in process of being merged
"RTN","DG53P897",76,0)
 .I $P($G(^DPT(DFN,0)),U)["MERGING INTO" Q
"RTN","DG53P897",77,0)
 .I '$D(^DPT(DFN,0)) Q
"RTN","DG53P897",78,0)
 .I $P(^DPT(DFN,0),U)="" Q
"RTN","DG53P897",79,0)
 .; look for duplicates
"RTN","DG53P897",80,0)
 .S (DGMULT,DGSAVE,DGDUPE)=0
"RTN","DG53P897",81,0)
 .F  S DGMULT=$O(^DPT(DFN,.02,DGMULT)) Q:'DGMULT  D
"RTN","DG53P897",82,0)
 ..I DGSAVE=0 S DGSAVE=$P($G(^DPT(DFN,.02,DGMULT,0)),U) Q
"RTN","DG53P897",83,0)
 ..I DGSAVE=$P($G(^DPT(DFN,.02,DGMULT,0)),U) S DGDUPE=1 D UPDR S DGDUPE=0
"RTN","DG53P897",84,0)
 .S (DGMULT,DGSAVE,DGETHN)=0
"RTN","DG53P897",85,0)
 .F  S DGMULT=$O(^DPT(DFN,.06,DGMULT)) Q:'DGMULT  D
"RTN","DG53P897",86,0)
 ..I DGSAVE=0 S DGSAVE=$P($G(^DPT(DFN,.06,DGMULT,0)),U) Q
"RTN","DG53P897",87,0)
 ..I DGSAVE=$P($G(^DPT(DFN,.06,DGMULT,0)),U) S DGETHN=1 D UPDR S DGETHN=0
"RTN","DG53P897",88,0)
 .;look for no dinums
"RTN","DG53P897",89,0)
 .S (DGMULT,DGRACE,DGETHNIC)=0
"RTN","DG53P897",90,0)
 .F  S DGMULT=$O(^DPT(DFN,.02,DGMULT)) Q:'DGMULT  D
"RTN","DG53P897",91,0)
 ..S DGDATA=$G(^DPT(DFN,.02,DGMULT,0))
"RTN","DG53P897",92,0)
 ..S DGRACE=$P(DGDATA,U)
"RTN","DG53P897",93,0)
 ..I DGMULT'=DGRACE D UPDR
"RTN","DG53P897",94,0)
 .S (DGMULT,DGRACE,DGETHNIC)=0
"RTN","DG53P897",95,0)
 .F  S DGMULT=$O(^DPT(DFN,.06,DGMULT)) Q:'DGMULT  D
"RTN","DG53P897",96,0)
 ..S DGDATA=$G(^DPT(DFN,.06,DGMULT,0))
"RTN","DG53P897",97,0)
 ..S DGETHNIC=$P(DGDATA,U)
"RTN","DG53P897",98,0)
 ..I DGMULT'=DGETHNIC D UPDR
"RTN","DG53P897",99,0)
 ;
"RTN","DG53P897",100,0)
 D PRINT
"RTN","DG53P897",101,0)
 Q
"RTN","DG53P897",102,0)
 ;
"RTN","DG53P897",103,0)
UPDR ;
"RTN","DG53P897",104,0)
 I '$D(^XTMP("DG53P897",$J,DFN)) S COUNT=COUNT+1
"RTN","DG53P897",105,0)
 S DGTEXT=""
"RTN","DG53P897",106,0)
 I $D(^XTMP("DG53P897",$J,DFN)) S DGTEXT=$G(^XTMP("DG53P897",$J,DFN))
"RTN","DG53P897",107,0)
 S ^XTMP("DG53P897",$J,DFN)=$S(DGDUPE:"dupe race",DGETHN:"dupe ethnic",DGRACE:"race entry not dinumed",DGETHNIC:"ethnicity entry not dinumed",1:"unknown")_"^"_DGTEXT
"RTN","DG53P897",108,0)
 I 'DGENSKIP D
"RTN","DG53P897",109,0)
 .I DGDUPE D
"RTN","DG53P897",110,0)
 ..S DGFDA(2.02,DGMULT_","_DFN_",",.01)="@"
"RTN","DG53P897",111,0)
 ..D FILE^DIE(,"DGFDA",)
"RTN","DG53P897",112,0)
 .I DGETHN D
"RTN","DG53P897",113,0)
 ..S DGFDA(2.06,DGMULT_","_DFN_",",.01)="@"
"RTN","DG53P897",114,0)
 ..D FILE^DIE(,"DGFDA",)
"RTN","DG53P897",115,0)
 .I DGRACE D
"RTN","DG53P897",116,0)
 ..S DGFDA(2.02,DGMULT_","_DFN_",",.01)="@"
"RTN","DG53P897",117,0)
 ..D FILE^DIE(,"DGFDA",)
"RTN","DG53P897",118,0)
 ..S (X,DINUM)=DGRACE,DIC="^DPT(DFN,.02,",DA(1)=DFN,DIC(0)="L"
"RTN","DG53P897",119,0)
 ..K DO D FILE^DICN
"RTN","DG53P897",120,0)
 .I DGETHNIC D
"RTN","DG53P897",121,0)
 ..S DGFDA(2.06,DGMULT_","_DFN_",",.01)="@"
"RTN","DG53P897",122,0)
 ..D FILE^DIE(,"DGFDA",)
"RTN","DG53P897",123,0)
 ..S (X,DINUM)=DGETHNIC,DIC="^DPT(DFN,.06,",DA(1)=DFN,DIC(0)="L"
"RTN","DG53P897",124,0)
 ..K DO D FILE^DICN
"RTN","DG53P897",125,0)
 Q
"RTN","DG53P897",126,0)
PRINT ;
"RTN","DG53P897",127,0)
 U IO
"RTN","DG53P897",128,0)
 N DGDDT,DGQUIT,DGPG
"RTN","DG53P897",129,0)
 S DGDDT=$$FMTE^XLFDT($$NOW^XLFDT,"D")
"RTN","DG53P897",130,0)
 S (DGQUIT,DGPG)=0
"RTN","DG53P897",131,0)
 D HEAD
"RTN","DG53P897",132,0)
 I '$G(COUNT) D  Q
"RTN","DG53P897",133,0)
 .W !!!,?20,"*** No records to report ***"
"RTN","DG53P897",134,0)
 W !!,"*** COUNT OF BAD PATIENT RECORDS"_$S(DGENSKIP:"",1:" UPDATED")_": ",COUNT," ***",!!
"RTN","DG53P897",135,0)
 S DFN=0
"RTN","DG53P897",136,0)
 F  S DFN=$O(^XTMP("DG53P897",$J,DFN)) Q:'DFN  D  Q:DGQUIT
"RTN","DG53P897",137,0)
 .I $Y>(IOSL-4) D HEAD
"RTN","DG53P897",138,0)
 .W ?2,DFN,?15,$G(^XTMP("DG53P897",$J,DFN)),!
"RTN","DG53P897",139,0)
 ;
"RTN","DG53P897",140,0)
 I DGQUIT W:$D(ZTQUEUED) !!,"Report stopped at user's request" Q
"RTN","DG53P897",141,0)
 I $G(DGPG)>0,$E(IOST)="C" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQUIT=1
"RTN","DG53P897",142,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DG53P897",143,0)
 Q
"RTN","DG53P897",144,0)
 ;
"RTN","DG53P897",145,0)
HEAD ;
"RTN","DG53P897",146,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,DGQUIT)=1 Q
"RTN","DG53P897",147,0)
 I $G(DGPG)>0,$E(IOST)="C" K DIR S DIR(0)="E" D ^DIR K DIR S:+Y=0 DGQUIT=1
"RTN","DG53P897",148,0)
 Q:DGQUIT
"RTN","DG53P897",149,0)
 S DGPG=$G(DGPG)+1
"RTN","DG53P897",150,0)
 W @IOF,!,DGDDT,?15,"DG*5.3*897 Patient File Update Utility",?70,"Page:",$J(DGPG,5),! K X S $P(X,"-",81)="" W X,!
"RTN","DG53P897",151,0)
 W !
"RTN","DG53P897",152,0)
 W !,?2,"DFN",?15,"Action to be taken",!
"RTN","DG53P897",153,0)
 S $P(X,"-",81)="" W X,!
"RTN","DG53P897",154,0)
 Q
"RTN","DGROHLR1")
0^1^B58139675
"RTN","DGROHLR1",1,0)
DGROHLR1 ;GTS/PHH,TDM - ROM HL7 RECEIVE DRIVERS ; 6/26/13 2:37pm
"RTN","DGROHLR1",2,0)
 ;;5.3;Registration;**572,622,647,809,754,797,897**;Aug 13, 1993;Build 10
"RTN","DGROHLR1",3,0)
 ;
"RTN","DGROHLR1",4,0)
CONVFDA(DFN,DGDATA) ; LOOP THROUGH DATA TO FILE
"RTN","DGROHLR1",5,0)
 N DFNC,F,IEN,FIELD,DGROAR,FNUM,QVAR,INX,DGRONUPD
"RTN","DGROHLR1",6,0)
 ;
"RTN","DGROHLR1",7,0)
 ;*DGROAR: Indirect reference to DGROAYi where "i" is the ORDER INDEX
"RTN","DGROHLR1",8,0)
 ;* field value in 391.23.  ORDER INDEX defines order for a group of
"RTN","DGROHLR1",9,0)
 ;* fields loaded into the LST.
"RTN","DGROHLR1",10,0)
 ;* DGROAYi defined for each group maintaining proper order.
"RTN","DGROHLR1",11,0)
 ;*  DG*5.3*572
"RTN","DGROHLR1",12,0)
 ;* DGRONUPD flag used to suppress updating the 'CHANGE DT/TM' &
"RTN","DGROHLR1",13,0)
 ;*          'CHANGE SITE' fields for CONF & TEMP address data.
"RTN","DGROHLR1",14,0)
 ;
"RTN","DGROHLR1",15,0)
 S DFNC=DFN_","
"RTN","DGROHLR1",16,0)
 S INX=""
"RTN","DGROHLR1",17,0)
 S DGRONUPD=1
"RTN","DGROHLR1",18,0)
 F  S INX=$O(^DGRO(391.23,"D",INX)) Q:INX=""  D
"RTN","DGROHLR1",19,0)
 . S DGROAR="DGROAY"_INX
"RTN","DGROHLR1",20,0)
 . S QVAR=0
"RTN","DGROHLR1",21,0)
 . S F=""
"RTN","DGROHLR1",22,0)
 . F  S F=$O(@DGDATA@(F)) Q:F=""  D
"RTN","DGROHLR1",23,0)
 . . S IEN=""
"RTN","DGROHLR1",24,0)
 . . F  S IEN=$O(@DGDATA@(F,IEN)) Q:IEN=""  D
"RTN","DGROHLR1",25,0)
 . . . S FIELD=""
"RTN","DGROHLR1",26,0)
 . . . F  S FIELD=$O(@DGDATA@(F,IEN,FIELD)) Q:FIELD=""  D
"RTN","DGROHLR1",27,0)
 . . . . Q:$$DIS(F,FIELD)
"RTN","DGROHLR1",28,0)
 . . . . S ORDINX=$O(^DGRO(391.23,"E",F,FIELD,""))
"RTN","DGROHLR1",29,0)
 . . . . D:(ORDINX=INX) SETARY
"RTN","DGROHLR1",30,0)
 . . . . ;* Following line files Internal PEC, Rmv once Ext PEC is filed
"RTN","DGROHLR1",31,0)
 . . . . I (ORDINX=INX)&(F=2) DO
"RTN","DGROHLR1",32,0)
 . . . . .D:(FIELD=.1417) FILECSTD
"RTN","DGROHLR1",33,0)
 . . . . .D:(FIELD=.361) FILEPEC
"RTN","DGROHLR1",34,0)
 . . . . .D:((FIELD=.117)!(FIELD=.12111)!(FIELD=.14111)) FILECNTY
"RTN","DGROHLR1",35,0)
 . . I (+$O(@DGROAR@(""))>0) S QVAR=1 D FILE
"RTN","DGROHLR1",36,0)
 Q
"RTN","DGROHLR1",37,0)
 ;
"RTN","DGROHLR1",38,0)
FILECSTD ;File CONFIDENTIAL START DATE bypassing FM restrictions
"RTN","DGROHLR1",39,0)
 ;Called from CONVFDA^DGROHLR1
"RTN","DGROHLR1",40,0)
 I $D(@DGROAR@(F,DFNC,FIELD)) D
"RTN","DGROHLR1",41,0)
 . S X=@DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",42,0)
 . S %DT="X" D ^%DT I Y D
"RTN","DGROHLR1",43,0)
 . . S DGROCST(F,DFNC,FIELD)=Y
"RTN","DGROHLR1",44,0)
 . . D FILE^DIE("U","DGROCST","ERR")
"RTN","DGROHLR1",45,0)
 . K @DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",46,0)
 . K DGROCST,X,%DT,Y
"RTN","DGROHLR1",47,0)
 Q
"RTN","DGROHLR1",48,0)
 ;
"RTN","DGROHLR1",49,0)
FILECNTY ;*Retrieve county IEN and file county
"RTN","DGROHLR1",50,0)
 ;*Retrieve State IEN corresponding to Temp, Conf, or Perm State
"RTN","DGROHLR1",51,0)
 I (FIELD=.117),($D(^DPT(DFN,.11))) S STATEIEN=$P(^DPT(DFN,.11),"^",5)
"RTN","DGROHLR1",52,0)
 I (FIELD=.12111),($D(^DPT(DFN,.121))) S STATEIEN=$P(^DPT(DFN,.121),"^",5)
"RTN","DGROHLR1",53,0)
 I (FIELD=.14111),($D(^DPT(DFN,.141))) S STATEIEN=$P(^DPT(DFN,.141),"^",5)
"RTN","DGROHLR1",54,0)
 ;
"RTN","DGROHLR1",55,0)
 ;*Retrieve County IEN for exact county returned from LST
"RTN","DGROHLR1",56,0)
 ; DG*647
"RTN","DGROHLR1",57,0)
 I $G(STATEIEN)="" G NOCNTY
"RTN","DGROHLR1",58,0)
 I '$D(@DGROAR@(F,DFNC,FIELD)) G NOCNTY
"RTN","DGROHLR1",59,0)
 S DIC="^DIC(5,"_STATEIEN_",1,"
"RTN","DGROHLR1",60,0)
 S DIC(0)="XS"
"RTN","DGROHLR1",61,0)
 S X=@DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",62,0)
 D ^DIC
"RTN","DGROHLR1",63,0)
 S DGROCTY(F,DFNC,FIELD)=+Y
"RTN","DGROHLR1",64,0)
 D FILE^DIE("","DGROCTY","ERR") ;File County IEN
"RTN","DGROHLR1",65,0)
NOCNTY K @DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",66,0)
 K STATEIEN,DGROCTY
"RTN","DGROHLR1",67,0)
 Q
"RTN","DGROHLR1",68,0)
 ;
"RTN","DGROHLR1",69,0)
FILEPEC ;File Internal value of Prim Elig Code
"RTN","DGROHLR1",70,0)
 ;Called from CONVFDA^DGROHLR1
"RTN","DGROHLR1",71,0)
 ;Remove this call when fields required by PEC are received
"RTN","DGROHLR1",72,0)
 ; from LST
"RTN","DGROHLR1",73,0)
 I $D(@DGROAR@(F,DFNC,FIELD)) DO
"RTN","DGROHLR1",74,0)
 . S DIC="^DIC(8,"
"RTN","DGROHLR1",75,0)
 . S DIC(0)="MNSX"
"RTN","DGROHLR1",76,0)
 . S X=@DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",77,0)
 . D ^DIC
"RTN","DGROHLR1",78,0)
 . S DGROPEC(F,DFNC,FIELD)=+Y
"RTN","DGROHLR1",79,0)
 . D FILE^DIE("","DGROPEC","ERR")
"RTN","DGROHLR1",80,0)
 . K @DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",81,0)
 . K DGROPEC,DIC,X
"RTN","DGROHLR1",82,0)
 Q
"RTN","DGROHLR1",83,0)
 ;
"RTN","DGROHLR1",84,0)
FILE ;*Execute FILE or UPDATE per FNUM (1st subscpt) for file # according
"RTN","DGROHLR1",85,0)
 ;* to file/multiple record add or adding existing Patient data add
"RTN","DGROHLR1",86,0)
 S FNUM=$O(@DGROAR@(""))
"RTN","DGROHLR1",87,0)
 K %DT ;* Clean up leaks from Input transforms that set %DT(0)
"RTN","DGROHLR1",88,0)
 ;
"RTN","DGROHLR1",89,0)
 ;* Patient file processing
"RTN","DGROHLR1",90,0)
 I +FNUM=2 DO
"RTN","DGROHLR1",91,0)
 . D FILE^DIE("E","@DGROAR","ERR") ;*Add to existing Patient entry
"RTN","DGROHLR1",92,0)
 ;
"RTN","DGROHLR1",93,0)
 ;* Patient file multiples processing
"RTN","DGROHLR1",94,0)
 I (+FNUM=2.01)!(+FNUM=2.141)!(+FNUM=2.11) DO
"RTN","DGROHLR1",95,0)
 . D UPDATE^DIE("E","@DGROAR","","ERR")
"RTN","DGROHLR1",96,0)
 I +FNUM=2.3216 D
"RTN","DGROHLR1",97,0)
 . D CONVERT ;Convert MSE fields to internal format
"RTN","DGROHLR1",98,0)
 . D UPDATE^DIE("","@DGROAR","","ERR")
"RTN","DGROHLR1",99,0)
 I (+FNUM=2.02)!(+FNUM=2.06) DO
"RTN","DGROHLR1",100,0)
 . N DGRODNUM,DGIEN,DNUMDATA,DGIEN2,DGROIEN,DGFLD
"RTN","DGROHLR1",101,0)
 . S DGRODNUM=0
"RTN","DGROHLR1",102,0)
 . F  S DGRODNUM=$O(@DGROAR@(+FNUM,DGRODNUM)) Q:DGRODNUM=""  D
"RTN","DGROHLR1",103,0)
 . . S DGIEN=$P(DGRODNUM,",")
"RTN","DGROHLR1",104,0)
 . . I DGIEN S DGIEN2=$P(DGIEN,"+",2)
"RTN","DGROHLR1",105,0)
 . . S DNUMDATA=$G(@DGROAR@(+FNUM,DGRODNUM,.01))
"RTN","DGROHLR1",106,0)
 . . ; Changed FileMan call for processing of DINUM recs DG*5.3*897
"RTN","DGROHLR1",107,0)
 . . ; I DGIEN2 S DGROIEN(DGIEN2)=DNUMDATA D
"RTN","DGROHLR1",108,0)
 . . ; . D UPDATE^DIE("","@DGROAR","DGROIEN","ERR") ;*Converted Ext to Int
"RTN","DGROHLR1",109,0)
 . . I DGIEN2 S DGROIEN(DGIEN2)=DNUMDATA
"RTN","DGROHLR1",110,0)
 . . S DGFLD="."_$P(FNUM,".",2) D
"RTN","DGROHLR1",111,0)
 . . . S (X,DINUM)=DNUMDATA,DIC="^DPT(DFN,DGFLD,",DA(1)=DFN,DIC(0)="L"
"RTN","DGROHLR1",112,0)
 . . . K DO D FILE^DICN K DIC,X,DINUM,DA
"RTN","DGROHLR1",113,0)
 ;
"RTN","DGROHLR1",114,0)
 ;* Processing fields [indicated in 391.23] not part of Patient file.
"RTN","DGROHLR1",115,0)
 ;* Define IF section for each file not a Patient file field or
"RTN","DGROHLR1",116,0)
 ;* Multiple.
"RTN","DGROHLR1",117,0)
 I (+$P(FNUM,".")'=2) DO
"RTN","DGROHLR1",118,0)
 . I +FNUM=38.1 DO
"RTN","DGROHLR1",119,0)
 . . N DGROARBI
"RTN","DGROHLR1",120,0)
 . . S DGROARBI(1)=DFN ;*Set 38.1 IEN to DFN
"RTN","DGROHLR1",121,0)
 . . D UPDATE^DIE("E","@DGROAR","DGROARBI","ERR")
"RTN","DGROHLR1",122,0)
 ;
"RTN","DGROHLR1",123,0)
 K @DGROAR
"RTN","DGROHLR1",124,0)
 Q
"RTN","DGROHLR1",125,0)
 ;
"RTN","DGROHLR1",126,0)
SETARY ;* Setup arrays of data to be filed
"RTN","DGROHLR1",127,0)
 N U,D,DATA,NODE,NODE2,INENNUM
"RTN","DGROHLR1",128,0)
 ;
"RTN","DGROHLR1",129,0)
 I '$D(^DGRO(391.23,"C",F,FIELD)) Q
"RTN","DGROHLR1",130,0)
 ;
"RTN","DGROHLR1",131,0)
 S U="^"
"RTN","DGROHLR1",132,0)
 ;
"RTN","DGROHLR1",133,0)
 ;CHECK LOCAL PATIENT FILE FOR EXISTING DATA, DO NOT OVERWRITE
"RTN","DGROHLR1",134,0)
 S D=$$GET1^DIQ(F,DFNC,FIELD)
"RTN","DGROHLR1",135,0)
 I D'="" K @DGDATA@(F,IEN,FIELD) Q
"RTN","DGROHLR1",136,0)
 ;
"RTN","DGROHLR1",137,0)
 S DATA=$G(@DGDATA@(F,IEN,FIELD,"E"))
"RTN","DGROHLR1",138,0)
 Q:DATA=""
"RTN","DGROHLR1",139,0)
 ;
"RTN","DGROHLR1",140,0)
 ;* Design of this Subroutine:
"RTN","DGROHLR1",141,0)
 ;* Set array defining groups of date for Fileman filing in
"RTN","DGROHLR1",142,0)
 ;*  a predefined order.
"RTN","DGROHLR1",143,0)
 ;* Indirection defined various array names for different ordered
"RTN","DGROHLR1",144,0)
 ;*  data groups in CONVFDA.
"RTN","DGROHLR1",145,0)
 ;* File Ext. values returned from LST per ORDER INDEX.
"RTN","DGROHLR1",146,0)
 ;* DG*5.3*572
"RTN","DGROHLR1",147,0)
 ;
"RTN","DGROHLR1",148,0)
 ;* Get field entry IEN in ROM 391.23 file
"RTN","DGROHLR1",149,0)
 S INENNUM=INX
"RTN","DGROHLR1",150,0)
 ;
"RTN","DGROHLR1",151,0)
 I F=2 DO  Q
"RTN","DGROHLR1",152,0)
 . S @DGROAR@(F,DFNC,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",153,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",154,0)
 ;
"RTN","DGROHLR1",155,0)
 ;* Set array for all other files (not Patient or Security files)
"RTN","DGROHLR1",156,0)
 ;* This section is for new entries in files.  Not for Multiples.
"RTN","DGROHLR1",157,0)
 ;*  Code to process specific files needed in CONVFDA
"RTN","DGROHLR1",158,0)
 I (+$P(F,".")'=2),(F'=38.1) DO  Q
"RTN","DGROHLR1",159,0)
 . S @DGROAR@(F,"+1,",FIELD)=DATA
"RTN","DGROHLR1",160,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",161,0)
 ;
"RTN","DGROHLR1",162,0)
 ;SET ALIAS, CONFIDENTIAL ADDRESS CAT. AND MILITARY SERVICE EPISODE
"RTN","DGROHLR1",163,0)
 ;SUBFILE ARRAYS
"RTN","DGROHLR1",164,0)
 I (F=2.01)!(F=2.141)!(F=2.11)!(F=2.3216) D  Q
"RTN","DGROHLR1",165,0)
 . S NODE2="+"
"RTN","DGROHLR1",166,0)
 . S NODE2=NODE2_$P(IEN,",")_","_DFNC
"RTN","DGROHLR1",167,0)
 . S @DGROAR@(F,NODE2,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",168,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",169,0)
 ;
"RTN","DGROHLR1",170,0)
 ;SET RACE AND ETHNICITY ARRAYS
"RTN","DGROHLR1",171,0)
 I (F=2.02)!(F=2.06) D  Q
"RTN","DGROHLR1",172,0)
 . N REFILE,REIEN,DATA30,QFL,DATACOMP,TEST,ERR,INACTIVE
"RTN","DGROHLR1",173,0)
 . I (F=2.02),(FIELD=.01) S REFILE=10
"RTN","DGROHLR1",174,0)
 . I (F=2.06),(FIELD=.01) S REFILE=10.2
"RTN","DGROHLR1",175,0)
 . I FIELD=.02 S REFILE=10.3
"RTN","DGROHLR1",176,0)
 . S DATA30=$E(DATA,1,30) D
"RTN","DGROHLR1",177,0)
 . . S QFL=0,REIEN="",NODE=""
"RTN","DGROHLR1",178,0)
 . . D FIND^DIC(REFILE,"","@;.01;200","",DATA30,,"B","","","TEST","ERR")
"RTN","DGROHLR1",179,0)
 . . F  S NODE=$O(TEST("DILIST",2,NODE)) Q:'NODE  D  Q:$G(QFL)=1
"RTN","DGROHLR1",180,0)
 . . . S REIEN=$G(TEST("DILIST",2,NODE))
"RTN","DGROHLR1",181,0)
 . . . S INACTIVE=$G(TEST("DILIST","ID",NODE,200))
"RTN","DGROHLR1",182,0)
 . . . Q:INACTIVE="YES"  ;* QUIT if Race or Eth Inact
"RTN","DGROHLR1",183,0)
 . . . S DATACOMP=$G(TEST("DILIST","ID",NODE,.01))
"RTN","DGROHLR1",184,0)
 . . . I DATACOMP=DATA S QFL=1
"RTN","DGROHLR1",185,0)
 . Q:'QFL
"RTN","DGROHLR1",186,0)
 . Q:$G(INACTIVE)="YES"  ;* No entry for Inactive Race/Ethncty
"RTN","DGROHLR1",187,0)
 . S DATA=REIEN ;*Race/Ethncty/MOC (10/10.2/10.3) IEN for data recvd
"RTN","DGROHLR1",188,0)
 . ;
"RTN","DGROHLR1",189,0)
 . S NODE2="+" ;*+ for all fields, All fields added in one UPDATE
"RTN","DGROHLR1",190,0)
 . S NODE2=NODE2_$P(IEN,",")_","_DFNC ;*No + for DFNC, DPT record exists
"RTN","DGROHLR1",191,0)
 . S @DGROAR@(F,NODE2,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",192,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",193,0)
 ;
"RTN","DGROHLR1",194,0)
 ;* Set all sensitive fields (38.1) in array
"RTN","DGROHLR1",195,0)
 I F=38.1 D  Q
"RTN","DGROHLR1",196,0)
 . Q:('$D(@DGDATA@(F)))  ;*Data already filed
"RTN","DGROHLR1",197,0)
 . S FIELD=.01
"RTN","DGROHLR1",198,0)
 . S @DGROAR@(F,"+1,",FIELD)=$$GET1^DIQ(2,DFN,.01)
"RTN","DGROHLR1",199,0)
 . F  S FIELD=$O(@DGDATA@(F,IEN,FIELD)) Q:'FIELD  D
"RTN","DGROHLR1",200,0)
 . . S @DGROAR@(F,"+1,",FIELD)=@DGDATA@(F,IEN,FIELD,"E")
"RTN","DGROHLR1",201,0)
 . K @DGDATA@(F,IEN)
"RTN","DGROHLR1",202,0)
 . S FIELD=999999 ;*Skip to end of 38.1 field list in @DGDATA
"RTN","DGROHLR1",203,0)
 Q
"RTN","DGROHLR1",204,0)
 ;
"RTN","DGROHLR1",205,0)
DIS(F,FIELD) ;Check for disabled
"RTN","DGROHLR1",206,0)
 N SUB S SUB=$O(^DGRO(391.23,"C",F,FIELD,0)) Q:'SUB 1
"RTN","DGROHLR1",207,0)
 I $P($G(^DGRO(391.23,SUB,0)),"^",5)=1 Q 1
"RTN","DGROHLR1",208,0)
 Q 0
"RTN","DGROHLR1",209,0)
 ;
"RTN","DGROHLR1",210,0)
CONVERT ;External to Internal Conversion (clears field if no match found)
"RTN","DGROHLR1",211,0)
 N BOS,DATE,COMP,DISCH,F,INTERNAL,LOCK,SUB,X,Y
"RTN","DGROHLR1",212,0)
 S F=2.3216,SUB=""
"RTN","DGROHLR1",213,0)
 F  S SUB=$O(@DGROAR@(F,SUB)) Q:SUB=""  D
"RTN","DGROHLR1",214,0)
 .;Convert Branch
"RTN","DGROHLR1",215,0)
 .I $D(@DGROAR@(F,SUB,.03)) D
"RTN","DGROHLR1",216,0)
 ..S BOS=$G(@DGROAR@(F,SUB,.03)) Q:BOS=""
"RTN","DGROHLR1",217,0)
 ..S INTERNAL=$O(^DIC(23,"B",BOS,""))
"RTN","DGROHLR1",218,0)
 ..S @DGROAR@(F,SUB,.03)=INTERNAL
"RTN","DGROHLR1",219,0)
 .;Convert Discharge
"RTN","DGROHLR1",220,0)
 .I $D(@DGROAR@(F,SUB,.06)) D
"RTN","DGROHLR1",221,0)
 ..S DISCH=$G(@DGROAR@(F,SUB,.06)) Q:DISCH=""
"RTN","DGROHLR1",222,0)
 ..S INTERNAL=$O(^DIC(25,"B",DISCH,""))
"RTN","DGROHLR1",223,0)
 ..S @DGROAR@(F,SUB,.06)=INTERNAL
"RTN","DGROHLR1",224,0)
 .;Convert Component
"RTN","DGROHLR1",225,0)
 .I $D(@DGROAR@(F,SUB,.04)) D
"RTN","DGROHLR1",226,0)
 ..S COMP=$G(@DGROAR@(F,SUB,.04)) Q:COMP=""
"RTN","DGROHLR1",227,0)
 ..S INTERNAL=""
"RTN","DGROHLR1",228,0)
 ..S:COMP="REGULAR" INTERNAL="R"
"RTN","DGROHLR1",229,0)
 ..S:COMP="ACTIVATED NG" INTERNAL="G"
"RTN","DGROHLR1",230,0)
 ..S:COMP="ACTIVATED RESERVE" INTERNAL="V"
"RTN","DGROHLR1",231,0)
 ..S @DGROAR@(F,SUB,.04)=INTERNAL
"RTN","DGROHLR1",232,0)
 .;Convert Lock flag
"RTN","DGROHLR1",233,0)
 .I $D(@DGROAR@(F,SUB,.07)) D
"RTN","DGROHLR1",234,0)
 ..S LOCK=$G(@DGROAR@(F,SUB,.07)) Q:LOCK=""
"RTN","DGROHLR1",235,0)
 ..S INTERNAL=$S(LOCK="YES":1,LOCK="NO":0,1:"")
"RTN","DGROHLR1",236,0)
 ..S @DGROAR@(F,SUB,.07)=INTERNAL
"RTN","DGROHLR1",237,0)
 .;Convert dates
"RTN","DGROHLR1",238,0)
 .I $D(@DGROAR@(F,SUB,.01)) D
"RTN","DGROHLR1",239,0)
 ..S X=$G(@DGROAR@(F,SUB,.01)) Q:X=""
"RTN","DGROHLR1",240,0)
 ..D ^%DT
"RTN","DGROHLR1",241,0)
 ..S @DGROAR@(F,SUB,.01)=Y
"RTN","DGROHLR1",242,0)
 .I $D(@DGROAR@(F,SUB,.02)) D
"RTN","DGROHLR1",243,0)
 ..S X=$G(@DGROAR@(F,SUB,.02)) Q:X=""
"RTN","DGROHLR1",244,0)
 ..D ^%DT
"RTN","DGROHLR1",245,0)
 ..S @DGROAR@(F,SUB,.02)=Y
"RTN","DGROHLR1",246,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
IVM*2.0*159
"BLD",9747,0)
IVM*2.0*159^INCOME VERIFICATION MATCH^0^3150501^y
"BLD",9747,1,0)
^^4^4^3150501^
"BLD",9747,1,1,0)
Patch IVM*2*159 addresses one issue:
"BLD",9747,1,2,0)
 
"BLD",9747,1,3,0)
       1.  MPI/IVM process is not dinuming patients ethnicities and 
"BLD",9747,1,4,0)
           mulitple races correctly.
"BLD",9747,4,0)
^9.64PA^^
"BLD",9747,6.3)
9
"BLD",9747,"ABPKG")
n
"BLD",9747,"KRN",0)
^9.67PA^779.2^20
"BLD",9747,"KRN",.4,0)
.4
"BLD",9747,"KRN",.401,0)
.401
"BLD",9747,"KRN",.402,0)
.402
"BLD",9747,"KRN",.403,0)
.403
"BLD",9747,"KRN",.5,0)
.5
"BLD",9747,"KRN",.84,0)
.84
"BLD",9747,"KRN",3.6,0)
3.6
"BLD",9747,"KRN",3.8,0)
3.8
"BLD",9747,"KRN",9.2,0)
9.2
"BLD",9747,"KRN",9.8,0)
9.8
"BLD",9747,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9747,"KRN",9.8,"NM",1,0)
IVMPREC9^^0^B71223010
"BLD",9747,"KRN",9.8,"NM","B","IVMPREC9",1)

"BLD",9747,"KRN",19,0)
19
"BLD",9747,"KRN",19.1,0)
19.1
"BLD",9747,"KRN",101,0)
101
"BLD",9747,"KRN",409.61,0)
409.61
"BLD",9747,"KRN",771,0)
771
"BLD",9747,"KRN",779.2,0)
779.2
"BLD",9747,"KRN",870,0)
870
"BLD",9747,"KRN",8989.51,0)
8989.51
"BLD",9747,"KRN",8989.52,0)
8989.52
"BLD",9747,"KRN",8994,0)
8994
"BLD",9747,"KRN","B",.4,.4)

"BLD",9747,"KRN","B",.401,.401)

"BLD",9747,"KRN","B",.402,.402)

"BLD",9747,"KRN","B",.403,.403)

"BLD",9747,"KRN","B",.5,.5)

"BLD",9747,"KRN","B",.84,.84)

"BLD",9747,"KRN","B",3.6,3.6)

"BLD",9747,"KRN","B",3.8,3.8)

"BLD",9747,"KRN","B",9.2,9.2)

"BLD",9747,"KRN","B",9.8,9.8)

"BLD",9747,"KRN","B",19,19)

"BLD",9747,"KRN","B",19.1,19.1)

"BLD",9747,"KRN","B",101,101)

"BLD",9747,"KRN","B",409.61,409.61)

"BLD",9747,"KRN","B",771,771)

"BLD",9747,"KRN","B",779.2,779.2)

"BLD",9747,"KRN","B",870,870)

"BLD",9747,"KRN","B",8989.51,8989.51)

"BLD",9747,"KRN","B",8989.52,8989.52)

"BLD",9747,"KRN","B",8994,8994)

"BLD",9747,"QDEF")
^^^^NO^^^^^^YES
"BLD",9747,"QUES",0)
^9.62^^
"BLD",9747,"REQB",0)
^9.611^1^1
"BLD",9747,"REQB",1,0)
IVM*2.0*151^2
"BLD",9747,"REQB","B","IVM*2.0*151",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
159^3150501
"PKG",220,22,1,"PAH",1,1,0)
^^4^4^3150501
"PKG",220,22,1,"PAH",1,1,1,0)
Patch IVM*2*159 addresses one issue:
"PKG",220,22,1,"PAH",1,1,2,0)
 
"PKG",220,22,1,"PAH",1,1,3,0)
       1.  MPI/IVM process is not dinuming patients ethnicities and 
"PKG",220,22,1,"PAH",1,1,4,0)
           mulitple races correctly.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMPREC9")
0^1^B71223010
"RTN","IVMPREC9",1,0)
IVMPREC9 ;ALB/KCL/BRM/CKN,TDM - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES (CON'T) ; 5/1/15 10:03am
"RTN","IVMPREC9",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**34,58,115,121,151,159**; 21-OCT-94;Build 9
"RTN","IVMPREC9",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IVMPREC9",4,0)
 ;
"RTN","IVMPREC9",5,0)
 ;
"RTN","IVMPREC9",6,0)
 ;
"RTN","IVMPREC9",7,0)
STORE ; - store HL7 fields that have a different value than DHCP fields in
"RTN","IVMPREC9",8,0)
 ;   the IVM Patient (#301.5) file (#301.511) multiple for uploading
"RTN","IVMPREC9",9,0)
 ;
"RTN","IVMPREC9",10,0)
 S:$D(AUPFARY(IVMDEMDA)) UPDAUP(IVMDEMDA)=""
"RTN","IVMPREC9",11,0)
 G:IVMFLG STORE2
"RTN","IVMPREC9",12,0)
 S X=$$IEN^IVMUFNC4("PID")
"RTN","IVMPREC9",13,0)
 ;
"RTN","IVMPREC9",14,0)
 K DIC("DR")
"RTN","IVMPREC9",15,0)
 S DA(1)=IVM3015
"RTN","IVMPREC9",16,0)
 I $G(^IVM(301.5,DA(1),"IN",0))']"" S ^(0)="^301.501PA^^"
"RTN","IVMPREC9",17,0)
 S DIC="^IVM(301.5,"_DA(1)_",""IN"",",DIC(0)="L",DLAYGO=301.501
"RTN","IVMPREC9",18,0)
 K DD,DO D FILE^DICN
"RTN","IVMPREC9",19,0)
 K DIC,DLAYGO,X,Y
"RTN","IVMPREC9",20,0)
 ;
"RTN","IVMPREC9",21,0)
 ; - build mail message if SUPRESS DEMOGRAPHIC NOTIFICATION field is
"RTN","IVMPREC9",22,0)
 ;   not set in the IVM Site Parameter (#301.9) file
"RTN","IVMPREC9",23,0)
 ;
"RTN","IVMPREC9",24,0)
 I '$P($G(^IVM(301.9,1,0)),"^",5),'IVMADFLG D DEMBULL^IVMPREC6
"RTN","IVMPREC9",25,0)
 ;
"RTN","IVMPREC9",26,0)
 ; - set flag in order to not repeat STORE tag for one msg
"RTN","IVMPREC9",27,0)
 S IVMFLG=1
"RTN","IVMPREC9",28,0)
 ;
"RTN","IVMPREC9",29,0)
 S DA(2)=DA(1)
"RTN","IVMPREC9",30,0)
 S DA(1)=$P(^IVM(301.5,DA(1),"IN",0),"^",3)
"RTN","IVMPREC9",31,0)
 ;
"RTN","IVMPREC9",32,0)
STORE2 ;
"RTN","IVMPREC9",33,0)
 ; - X as the record in the IVM Demo Upload Fields (#301.92) file
"RTN","IVMPREC9",34,0)
 S X=+IVMDEMDA
"RTN","IVMPREC9",35,0)
 I $G(^IVM(301.5,DA(2),"IN",DA(1),"DEM",0))']"" S ^(0)="^301.511PA^^"
"RTN","IVMPREC9",36,0)
 S DIC="^IVM(301.5,"_DA(2)_",""IN"",DA(1),""DEM"",",DIC(0)="L"
"RTN","IVMPREC9",37,0)
 S DIC("DR")=".02////^S X=IVMFLD",DLAYGO=301.511
"RTN","IVMPREC9",38,0)
 K DD,DO D FILE^DICN
"RTN","IVMPREC9",39,0)
 K DIC,DLAYGO,X,Y
"RTN","IVMPREC9",40,0)
 ;
"RTN","IVMPREC9",41,0)
 Q
"RTN","IVMPREC9",42,0)
 ;
"RTN","IVMPREC9",43,0)
 ;
"RTN","IVMPREC9",44,0)
LOOK ; Find the current DHCP field value.
"RTN","IVMPREC9",45,0)
 ;  Input:   DR  --   Field number of the field in file #2
"RTN","IVMPREC9",46,0)
 ;          DFN  --   Pointer to the patient in file #2
"RTN","IVMPREC9",47,0)
 ;  Output:   Y  --   Internal value of field
"RTN","IVMPREC9",48,0)
 ;
"RTN","IVMPREC9",49,0)
 N IVMOUTTY,I
"RTN","IVMPREC9",50,0)
 ;S DIC="^DPT(",DA=DFN,DIQ="IVM",DIQ(0)="I" D EN^DIQ1
"RTN","IVMPREC9",51,0)
 S DIQ(0)=$S($G(DIQ(0))="":"I",$G(DIQ(0))="E":"E",1:"I")
"RTN","IVMPREC9",52,0)
 S IVMOUTTY=DIQ(0)
"RTN","IVMPREC9",53,0)
 S DIC="^DPT(",DA=DFN,DIQ="IVM" D EN^DIQ1
"RTN","IVMPREC9",54,0)
 ;S Y=$G(IVM(2,DFN,DR,"I"))
"RTN","IVMPREC9",55,0)
 S Y=$G(IVM(2,DFN,DR,IVMOUTTY))
"RTN","IVMPREC9",56,0)
 K DIC,DIQ,DR,IVM
"RTN","IVMPREC9",57,0)
 Q
"RTN","IVMPREC9",58,0)
AUTOEPC(DFN,UPDEPC) ;
"RTN","IVMPREC9",59,0)
 ; this functionality is copied from IVMLDEM6 and modified to allow
"RTN","IVMPREC9",60,0)
 ; an automated upload of patient communications information
"RTN","IVMPREC9",61,0)
 ;  Input:     DFN  -  as patient IEN
"RTN","IVMPREC9",62,0)
 ;          UPDEPC  -  array contains flag for update/noupdate for all
"RTN","IVMPREC9",63,0)
 ;                     communication types.
"RTN","IVMPREC9",64,0)
 ; Output: IVMFLAG  -  1 if communications fields updated
"RTN","IVMPREC9",65,0)
 ;                     0 if communications fields not updated
"RTN","IVMPREC9",66,0)
 ;
"RTN","IVMPREC9",67,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y,UPDT,IVMCVAL,IVMCFLD,SITEFLD,DFLG,CTYP,UPDT
"RTN","IVMPREC9",68,0)
 S IVMFLAG=0  ;initialize flags
"RTN","IVMPREC9",69,0)
 ; - check for required parameters
"RTN","IVMPREC9",70,0)
 Q:'$G(DFN) IVMFLAG
"RTN","IVMPREC9",71,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMPREC9",72,0)
 Q:'$G(IVMDA2) IVMFLAG
"RTN","IVMPREC9",73,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMPREC9",74,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMPREC9",75,0)
 Q:'IVMDA1 IVMFLAG
"RTN","IVMPREC9",76,0)
 ;
"RTN","IVMPREC9",77,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.92,"AD",IVMI)) Q:IVMI']""  D
"RTN","IVMPREC9",78,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMPREC9",79,0)
 ..S (UPDT,DFLG)=0
"RTN","IVMPREC9",80,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMPREC9",81,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMPREC9",82,0)
 ..I ('+IVMNODE)!($P(IVMNODE,"^",2)']"") Q
"RTN","IVMPREC9",83,0)
 ..;Check if fields needs to be updated for particular comm. Type.
"RTN","IVMPREC9",84,0)
 ..S CTYP=0 F  S CTYP=$O(UPDEPC(CTYP)) Q:CTYP=""!UPDT  D
"RTN","IVMPREC9",85,0)
 ...I ("^"_$G(UPDEPC(CTYP))_"^")[("^"_+IVMNODE_"^") S UPDT=1
"RTN","IVMPREC9",86,0)
 ..S IVMCFLD=$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),IVMCVAL=$P(IVMNODE,"^",2)
"RTN","IVMPREC9",87,0)
 ..; - load communications fields rec'd from IVM into DHCP (#2) file
"RTN","IVMPREC9",88,0)
 ..I UPDT D UPLOAD^IVMLDEM6(+DFN,IVMCFLD,IVMCVAL) S IVMFLAG=1
"RTN","IVMPREC9",89,0)
 ..; delete inaccurate Addr Change Site data if Source is not VAMC
"RTN","IVMPREC9",90,0)
 ..I UPDT,((IVMCFLD=.1311)!(IVMCFLD=.1313)!(IVMCFLD=.137)) D
"RTN","IVMPREC9",91,0)
 ...I IVMCVAL="VAMC" Q
"RTN","IVMPREC9",92,0)
 ...S SITEFLD=$S(IVMCFLD=.1311:.13111,IVMCFLD=.1313:.1314,IVMCFLD=.137:.138)
"RTN","IVMPREC9",93,0)
 ... S FDA(2,+DFN_",",SITEFLD)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMPREC9",94,0)
 ..; - remove entry only for Email, Cell and Pager from (#301.511) sub-file
"RTN","IVMPREC9",95,0)
 ..S CTYP=0 F  S CTYP=$O(EPCFARY(CTYP)) Q:CTYP=""!DFLG  D
"RTN","IVMPREC9",96,0)
 ...I ("^"_$G(EPCFARY(CTYP))_"^")[("^"_+IVMNODE_"^") S DFLG=1
"RTN","IVMPREC9",97,0)
 ..I DFLG D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMPREC9",98,0)
 ;Delete all communication data (Email, Cell phone, Pager) if they are not received in Z05.
"RTN","IVMPREC9",99,0)
 I $D(EPCDEL) D
"RTN","IVMPREC9",100,0)
 . N CTYPE,DIE,DR,DA,CNTR,VAL
"RTN","IVMPREC9",101,0)
 . S DR="",CNTR=0,VAL="@"
"RTN","IVMPREC9",102,0)
 . S CTYPE="" F  S CTYPE=$O(EPCDEL(CTYPE)) Q:CTYPE=""  D
"RTN","IVMPREC9",103,0)
 . . F I=1:1:$L(EPCDEL(CTYPE),"^") S CNTR=CNTR+1,$P(DR,";",CNTR)=$P(EPCDEL(CTYPE),"^",I)_"////^S X=VAL"
"RTN","IVMPREC9",104,0)
 . S DIE="^DPT(",DA=DFN
"RTN","IVMPREC9",105,0)
 . D ^DIE K DIE,DA,DR
"RTN","IVMPREC9",106,0)
 Q IVMFLAG
"RTN","IVMPREC9",107,0)
 ;
"RTN","IVMPREC9",108,0)
AUTORINC(DFN) ;
"RTN","IVMPREC9",109,0)
 ; application to automatically upload Rated Incompetent data
"RTN","IVMPREC9",110,0)
 ; Input:     DFN   -   Patient IEN
"RTN","IVMPREC9",111,0)
 N IVMI,IVMJ,IVMDA1,IVMDA2,IVMNODE,IVMFLAG,IVMRIVAL,IVMRIFLD
"RTN","IVMPREC9",112,0)
 S IVMFLAG=0
"RTN","IVMPREC9",113,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMPREC9",114,0)
 I 'IVMDA2 Q IVMFLAG
"RTN","IVMPREC9",115,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMPREC9",116,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMPREC9",117,0)
 S IVMI=$O(^IVM(301.92,"C","ZPD08","")) I IVMI="" Q IVMFLAG
"RTN","IVMPREC9",118,0)
 S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,""))
"RTN","IVMPREC9",119,0)
 I IVMJ']"" Q IVMFLAG
"RTN","IVMPREC9",120,0)
 ; - check for data node in (#301.511) sub-file
"RTN","IVMPREC9",121,0)
 S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMPREC9",122,0)
 I '(+IVMNODE)!($P(IVMNODE,"^",2)']"") Q IVMFLAG
"RTN","IVMPREC9",123,0)
 S IVMRIFLD=$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),IVMRIVAL=$P(IVMNODE,"^",2)
"RTN","IVMPREC9",124,0)
 I IVMRIVAL="""""" S IVMRIVAL="@"
"RTN","IVMPREC9",125,0)
 D UPLOAD^IVMLDEM6(DFN,IVMRIFLD,IVMRIVAL) S IVMFLAG=1
"RTN","IVMPREC9",126,0)
 ; - remove entry from (#301.511) sub-file
"RTN","IVMPREC9",127,0)
 D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMPREC9",128,0)
 Q IVMFLAG
"RTN","IVMPREC9",129,0)
PHONE ; - ask user to delete phone # [Residence] from Patient (#2) file
"RTN","IVMPREC9",130,0)
 ; This tag is moved here from IVMLDEM6 due to routine size limit
"RTN","IVMPREC9",131,0)
 D FULL^VALM1
"RTN","IVMPREC9",132,0)
 W ! S DIR("A")="Is it okay to delete the patient's Phone Number [Residence]"
"RTN","IVMPREC9",133,0)
 W ! S DIR("A",1)="The patient's address has been updated and the phonenumber"
"RTN","IVMPREC9",134,0)
 S DIR("A",2)="remains on file."
"RTN","IVMPREC9",135,0)
 S DIR("A",3)=" "
"RTN","IVMPREC9",136,0)
 S DIR("A",4)="Patient Name: "_$P($$PT^IVMUFNC4(+DFN),"^")_" ("_$P($$PT^IVMUFNC4(+DFN),"^",3)_")"
"RTN","IVMPREC9",137,0)
 S DIR("A",5)="Phone Number [Residence]: "_$P($G(^DPT(+DFN,.13)),"^")
"RTN","IVMPREC9",138,0)
 S DIR("A",6)=" "
"RTN","IVMPREC9",139,0)
 S DIR("?",1)="Enter 'YES' to delete the patient's Phone Number [Residence] that is"
"RTN","IVMPREC9",140,0)
 S DIR("?",2)="currently on file.  Enter 'NO' to quit without deleting the patient's"
"RTN","IVMPREC9",141,0)
 S DIR("?")="Phone Number [Residence]."
"RTN","IVMPREC9",142,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMPREC9",143,0)
 D ^DIR K DIR
"RTN","IVMPREC9",144,0)
 S:Y $P(^DPT(DFN,.13),"^")="" W !!,"Patient's Phone Number [Residence] has ",$S(Y:"",1:"not "),"been deleted."
"RTN","IVMPREC9",145,0)
 Q
"RTN","IVMPREC9",146,0)
 ;
"RTN","IVMPREC9",147,0)
AUTOAUP(DFN,UPDAUP,UPDAUPG) ;
"RTN","IVMPREC9",148,0)
 ; automated upload of misc information
"RTN","IVMPREC9",149,0)
 ;  Input:     DFN  -  patient IEN
"RTN","IVMPREC9",150,0)
 ;          UPDAUP  -  array contains fields for auto-upload
"RTN","IVMPREC9",151,0)
 ;         UPDAUPG  -  array contains field group flag for auto-upload
"RTN","IVMPREC9",152,0)
 ;
"RTN","IVMPREC9",153,0)
 N IVMDA2,IVMDA1,IVMI,MULTFLG,IVMXREF,UFLG,IVMJ,IVMNODE,IVMCFLD,IVMCVAL,Y,IVM30192,MULFIL
"RTN","IVMPREC9",154,0)
 Q:'$G(DFN)
"RTN","IVMPREC9",155,0)
 S IVMDA2=$G(IVM3015) Q:'IVMDA2
"RTN","IVMPREC9",156,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMPREC9",157,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1) Q:'IVMDA1
"RTN","IVMPREC9",158,0)
 ;
"RTN","IVMPREC9",159,0)
 S IVMI="" F  S IVMI=$O(UPDAUP(IVMI)) Q:IVMI=""  D
"RTN","IVMPREC9",160,0)
 .;
"RTN","IVMPREC9",161,0)
 .;If DHCP field is a multiple set multiple flag for special filing
"RTN","IVMPREC9",162,0)
 .S MULTFLG=0
"RTN","IVMPREC9",163,0)
 .S IVM30192=$G(^IVM(301.92,IVMI,0)),IVMXREF=$P(IVM30192,"^",2)
"RTN","IVMPREC9",164,0)
 .I IVMXREF="PID10" S MULTFLG=1       ;Race
"RTN","IVMPREC9",165,0)
 .I IVMXREF="PID117C" S MULTFLG=1     ;Conf Addr Category
"RTN","IVMPREC9",166,0)
 .I IVMXREF="PID22" S MULTFLG=1       ;Ethnicity
"RTN","IVMPREC9",167,0)
 .;
"RTN","IVMPREC9",168,0)
 .;Don't file if part of a group & group update flag not set
"RTN","IVMPREC9",169,0)
 .S UFLG=1 I AUPFARY(IVMI)'="",'UPDAUPG(AUPFARY(IVMI)) S UFLG=0
"RTN","IVMPREC9",170,0)
 .;
"RTN","IVMPREC9",171,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMPREC9",172,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMPREC9",173,0)
 ..I $G(AUPFARY(+$P(IVMNODE,"^")))'="",(($P(IVMNODE,"^",2)="")!($P(IVMNODE,"^",2)="""""")) S $P(IVMNODE,"^",2)="@"
"RTN","IVMPREC9",174,0)
 ..I +$G(ZEMADRUP(IVMXREF)),$P(IVMNODE,"^",2)="" S $P(IVMNODE,"^",2)="@"
"RTN","IVMPREC9",175,0)
 ..I ('+IVMNODE)!($P(IVMNODE,"^",2)']"") Q
"RTN","IVMPREC9",176,0)
 ..S IVMCFLD=$P($G(^IVM(301.92,+IVMNODE,0)),"^",5)
"RTN","IVMPREC9",177,0)
 ..S IVMCVAL=$P(IVMNODE,"^",2)
"RTN","IVMPREC9",178,0)
 ..;
"RTN","IVMPREC9",179,0)
 ..I UFLG D
"RTN","IVMPREC9",180,0)
 ...I MULTFLG D AUTOAUPM(+DFN,IVM30192,IVMCVAL)         ;file mult fld
"RTN","IVMPREC9",181,0)
 ...I 'MULTFLG D UPLOAD^IVMLDEM6(+DFN,IVMCFLD,IVMCVAL)  ;file non-mult
"RTN","IVMPREC9",182,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)          ;remove from 301.511
"RTN","IVMPREC9",183,0)
 ..; - if no display or uploadable fields left, delete the PID segment
"RTN","IVMPREC9",184,0)
 ..I '$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0),'$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1) D
"RTN","IVMPREC9",185,0)
 ...D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ") ; Dummy up name parameter
"RTN","IVMPREC9",186,0)
 Q
"RTN","IVMPREC9",187,0)
 ;
"RTN","IVMPREC9",188,0)
AUTOAUPM(DFN,IVM30192,IVMVALUE) ;
"RTN","IVMPREC9",189,0)
 ;  Input:       DFN  -  as patient IEN
"RTN","IVMPREC9",190,0)
 ;          IVM30192  -  as '0' node of the 301.92 entry
"RTN","IVMPREC9",191,0)
 ;          IVMVALUE  -  as the value of the field
"RTN","IVMPREC9",192,0)
 ;
"RTN","IVMPREC9",193,0)
 ; Output: None
"RTN","IVMPREC9",194,0)
 ;
"RTN","IVMPREC9",195,0)
 N MFIL,MFLD,DDINFO,DDMNOD,DDMFLD,DA,DIK,DGENDA,MULFIL,DATA,SUB
"RTN","IVMPREC9",196,0)
 S MFIL=$P(IVM30192,"^",4),MFLD=$P(IVM30192,"^",5)
"RTN","IVMPREC9",197,0)
 S DDINFO=$G(^DD(MFIL,MFLD,0))
"RTN","IVMPREC9",198,0)
 S DDMNOD=$P($P(DDINFO,"^",4),";"),DDMFLD=+$P(DDINFO,"^",2)
"RTN","IVMPREC9",199,0)
 ;
"RTN","IVMPREC9",200,0)
 ; - delete values currently in the multiple field
"RTN","IVMPREC9",201,0)
 S DA(1)=DFN,DIK="^DPT("_DFN_","""_DDMNOD_""","
"RTN","IVMPREC9",202,0)
 S DA=0 F  S DA=$O(^DPT(DFN,DDMNOD,DA)) Q:'DA  D ^DIK
"RTN","IVMPREC9",203,0)
 ;
"RTN","IVMPREC9",204,0)
 ; - add new values to multiple field
"RTN","IVMPREC9",205,0)
 S DGENDA(1)=DFN
"RTN","IVMPREC9",206,0)
 ;
"RTN","IVMPREC9",207,0)
 I DDMFLD=2.02 D
"RTN","IVMPREC9",208,0)
 .S DATA(.02)=$$FIND1^DIC(10.3,,,"SELF IDENTIFICATION")
"RTN","IVMPREC9",209,0)
 .S SUB="" F  S SUB=$O(IVMRACE(2,SUB)) Q:SUB=""  D
"RTN","IVMPREC9",210,0)
 ..S DATA(.01)=SUB
"RTN","IVMPREC9",211,0)
 ..; Changed FileMan call for processing of DINUM recs IVM*2.0*159
"RTN","IVMPREC9",212,0)
 ..;I $$ADD^DGENDBS(DDMFLD,.DGENDA,.DATA)
"RTN","IVMPREC9",213,0)
 ..S (X,DINUM)=DATA(.01),DIC="^DPT(DFN,.02,",DA(1)=DFN,DIC(0)="L"
"RTN","IVMPREC9",214,0)
 ..K DO D FILE^DICN K DIC,X,DINUM,DA
"RTN","IVMPREC9",215,0)
 ;
"RTN","IVMPREC9",216,0)
 I DDMFLD=2.06 D
"RTN","IVMPREC9",217,0)
 .S DATA(.01)=IVMVALUE
"RTN","IVMPREC9",218,0)
 .S DATA(.02)=$$FIND1^DIC(10.3,,,"SELF IDENTIFICATION")
"RTN","IVMPREC9",219,0)
 .;Changed Fileman call for processing of Dinum recs IVM*2.0*159-BG
"RTN","IVMPREC9",220,0)
 .;I $$ADD^DGENDBS(DDMFLD,.DGENDA,.DATA)
"RTN","IVMPREC9",221,0)
 .S (X,DINUM)=DATA(.01),DIC="^DPT(DFN,.06,",DA(1)=DFN,DIC(0)="L"
"RTN","IVMPREC9",222,0)
 .K DO D FILE^DICN K DIC,X,DINUM,DA
"RTN","IVMPREC9",223,0)
 ;
"RTN","IVMPREC9",224,0)
 I DDMFLD=2.141 D
"RTN","IVMPREC9",225,0)
 .S DATA(1)="Y"
"RTN","IVMPREC9",226,0)
 .S SUB="" F  S SUB=$O(CONFADCT(SUB)) Q:SUB=""  D
"RTN","IVMPREC9",227,0)
 ..S DATA(.01)=SUB
"RTN","IVMPREC9",228,0)
 ..I $$ADD^DGENDBS(DDMFLD,.DGENDA,.DATA)
"RTN","IVMPREC9",229,0)
 Q
"VER")
8.0^22.0
**END**
**END**
