KIDS Distribution saved on Mar 22, 2016@22:42:35
FINAL BUILD FOR RELEASE - PATCH 10 AND 14
**KIDS**:VPS FY15 1.0^VPS*1.0*10^VPS*1.0*14^

**INSTALL NAME**
VPS FY15 1.0
"BLD",9890,0)
VPS FY15 1.0^^1^3160322^y
"BLD",9890,1,0)
^^1^1^3160322^
"BLD",9890,1,1,0)
VPS FY15 COMBINED BUILD.  Patches 10 and 14
"BLD",9890,6.3)
1
"BLD",9890,10,0)
^9.63^2^2
"BLD",9890,10,1,0)
VPS*1.0*10^1
"BLD",9890,10,2,0)
VPS*1.0*14^1
"BLD",9890,10,"B","VPS*1.0*10",1)

"BLD",9890,10,"B","VPS*1.0*14",2)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
VPS*1.0*10
"BLD",9838,0)
VPS*1.0*10^VPS KIOSK^0^3160322^y
"BLD",9838,4,0)
^9.64PA^^
"BLD",9838,6.3)
16
"BLD",9838,"KRN",0)
^9.67PA^779.2^20
"BLD",9838,"KRN",.4,0)
.4
"BLD",9838,"KRN",.401,0)
.401
"BLD",9838,"KRN",.402,0)
.402
"BLD",9838,"KRN",.403,0)
.403
"BLD",9838,"KRN",.5,0)
.5
"BLD",9838,"KRN",.84,0)
.84
"BLD",9838,"KRN",3.6,0)
3.6
"BLD",9838,"KRN",3.8,0)
3.8
"BLD",9838,"KRN",9.2,0)
9.2
"BLD",9838,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",9838,"KRN",9.8,0)
9.8
"BLD",9838,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9838,"KRN",9.8,"NM",1,0)
VPSVTL01^^0^B12016894
"BLD",9838,"KRN",9.8,"NM",2,0)
VPSVTL02^^0^B18365565
"BLD",9838,"KRN",9.8,"NM","B","VPSVTL01",1)

"BLD",9838,"KRN",9.8,"NM","B","VPSVTL02",2)

"BLD",9838,"KRN",19,0)
19
"BLD",9838,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9838,"KRN",19,"NM",1,0)
VPS KIOSK INTERFACE^^0
"BLD",9838,"KRN",19,"NM","B","VPS KIOSK INTERFACE",1)

"BLD",9838,"KRN",19.1,0)
19.1
"BLD",9838,"KRN",101,0)
101
"BLD",9838,"KRN",409.61,0)
409.61
"BLD",9838,"KRN",771,0)
771
"BLD",9838,"KRN",779.2,0)
779.2
"BLD",9838,"KRN",870,0)
870
"BLD",9838,"KRN",8989.51,0)
8989.51
"BLD",9838,"KRN",8989.52,0)
8989.52
"BLD",9838,"KRN",8994,0)
8994
"BLD",9838,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",9838,"KRN",8994,"NM",1,0)
VPS RETRIEVE PATIENT VITALS^^0
"BLD",9838,"KRN",8994,"NM",2,0)
VPS STORE VITALS^^0
"BLD",9838,"KRN",8994,"NM","B","VPS RETRIEVE PATIENT VITALS",1)

"BLD",9838,"KRN",8994,"NM","B","VPS STORE VITALS",2)

"BLD",9838,"KRN","B",.4,.4)

"BLD",9838,"KRN","B",.401,.401)

"BLD",9838,"KRN","B",.402,.402)

"BLD",9838,"KRN","B",.403,.403)

"BLD",9838,"KRN","B",.5,.5)

"BLD",9838,"KRN","B",.84,.84)

"BLD",9838,"KRN","B",3.6,3.6)

"BLD",9838,"KRN","B",3.8,3.8)

"BLD",9838,"KRN","B",9.2,9.2)

"BLD",9838,"KRN","B",9.8,9.8)

"BLD",9838,"KRN","B",19,19)

"BLD",9838,"KRN","B",19.1,19.1)

"BLD",9838,"KRN","B",101,101)

"BLD",9838,"KRN","B",409.61,409.61)

"BLD",9838,"KRN","B",771,771)

"BLD",9838,"KRN","B",779.2,779.2)

"BLD",9838,"KRN","B",870,870)

"BLD",9838,"KRN","B",8989.51,8989.51)

"BLD",9838,"KRN","B",8989.52,8989.52)

"BLD",9838,"KRN","B",8994,8994)

"BLD",9838,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9838,"QUES",0)
^9.62^^
"BLD",9838,"REQB",0)
^9.611^^0
"KRN",19,11435,-1)
0^1
"KRN",19,11435,0)
VPS KIOSK INTERFACE^VPS KIOSK INTERFACE^^B^^^^^^^y^VPS KIOSK
"KRN",19,11435,1,0)
^19.06^3^3^3151027^^^^
"KRN",19,11435,1,1,0)
The RPCs that support the Vetlink Point of Service (Kiosk) system which
"KRN",19,11435,1,2,0)
will will call upon these RPCs for specific events triggered by the
"KRN",19,11435,1,3,0)
Vetlink patient-facing and staff-facing interfaces.
"KRN",19,11435,10.1)
VPS KIOSK INTERFACE
"KRN",19,11435,99.1)
63797,37374
"KRN",19,11435,"RPC",0)
^19.05P^54^54
"KRN",19,11435,"RPC",1,0)
VPS GET CLINIC
"KRN",19,11435,"RPC",2,0)
VPS GET PATIENT DEMOGRAPHIC
"KRN",19,11435,"RPC",3,0)
XWB GET VARIABLE VALUE
"KRN",19,11435,"RPC",6,0)
VPS EDIT PATIENT DEMOGRAPHIC
"KRN",19,11435,"RPC",7,0)
VPS FULLSSN
"KRN",19,11435,"RPC",8,0)
VPS GET DFN
"KRN",19,11435,"RPC",9,0)
VPS GET SITES
"KRN",19,11435,"RPC",10,0)
VPS LAST5
"KRN",19,11435,"RPC",11,0)
VPS PATIENT CHECK-IN
"KRN",19,11435,"RPC",12,0)
VPS PATIENT PRE-REGISTRATION
"KRN",19,11435,"RPC",13,0)
VPS LIST ALL
"KRN",19,11435,"RPC",19,0)
ORWRP PRINT REPORT
"KRN",19,11435,"RPC",21,0)
VPS GET2 PATIENT DEMOGRAPHIC
"KRN",19,11435,"RPC",23,0)
VPS GET CLINICAL REMINDERS
"KRN",19,11435,"RPC",24,0)
VPS PRINT PATIENT LABEL
"KRN",19,11435,"RPC",25,0)
VPS PATIENT WRISTBAND PRINT
"KRN",19,11435,"RPC",26,0)
VPS ENHANCED GET PATIENT DEMO
"KRN",19,11435,"RPC",32,0)
VPS GET PRINTERS
"KRN",19,11435,"RPC",37,0)
VPS GET ALL CLINICS
"KRN",19,11435,"RPC",38,0)
VPS GET APPOINTMENTS
"KRN",19,11435,"RPC",39,0)
VPS GET CHANGED APPOINTMENTS
"KRN",19,11435,"RPC",40,0)
VPS SAVE CLINICAL SURVEY
"KRN",19,11435,"RPC",41,0)
VPS GET SURVEY DATA
"KRN",19,11435,"RPC",42,0)
VPS GET ALLERGIES
"KRN",19,11435,"RPC",43,0)
VPS GET MRAR PDO
"KRN",19,11435,"RPC",44,0)
VPS GET LAST MRAR
"KRN",19,11435,"RPC",45,0)
VPS UPDATE LAST MRAR TIU IEN
"KRN",19,11435,"RPC",46,0)
VPS WRITE KIOSK PARAMETERS
"KRN",19,11435,"RPC",47,0)
VPS WRITE MRAR PDO
"KRN",19,11435,"RPC",48,0)
TIU SIGN RECORD
"KRN",19,11435,"RPC",49,0)
TIU LONG LIST OF TITLES
"KRN",19,11435,"RPC",50,0)
TIU CREATE RECORD
"KRN",19,11435,"RPC",51,0)
TIU SET DOCUMENT TEXT
"KRN",19,11435,"RPC",52,0)
TIU REQUIRES COSIGNATURE
"KRN",19,11435,"RPC",53,0)
VPS RETRIEVE PATIENT VITALS
"KRN",19,11435,"RPC",54,0)
VPS STORE VITALS
"KRN",19,11435,"U")
VPS KIOSK INTERFACE
"KRN",8994,3214,-1)
0^1
"KRN",8994,3214,0)
VPS RETRIEVE PATIENT VITALS^GET^VPSVTL01^2^^^^1
"KRN",8994,3214,1,0)
^8994.01^2^2^3151026^^
"KRN",8994,3214,1,1,0)
This RPC is called  by the Vetlink Kiosk (point of service) system.
"KRN",8994,3214,1,2,0)
This RPC returns the patient vitals information for as given patient.
"KRN",8994,3214,2,0)
^8994.02A^5^5
"KRN",8994,3214,2,1,0)
VPSNUM^1^25^1^1
"KRN",8994,3214,2,1,1,0)
^^1^1^3150728^
"KRN",8994,3214,2,1,1,1,0)
Patient ID such as the patient SSN OR DFN OR ICN OR VIC/CAC.
"KRN",8994,3214,2,2,0)
VPSTYP^1^7^1^2
"KRN",8994,3214,2,2,1,0)
^^1^1^3150728^
"KRN",8994,3214,2,2,1,1,0)
Patient ID TYPE such as SSN or DFN OR ICN OR VIC/CAC.
"KRN",8994,3214,2,3,0)
VTYP^1^80^1^3
"KRN",8994,3214,2,3,1,0)
^^3^3^3151026^
"KRN",8994,3214,2,3,1,1,0)
VTYP is the type of vital to retrieve. It can be ALL, LAST or one or more
"KRN",8994,3214,2,3,1,2,0)
vital abbreviations concatenated together separated by semi-colons.
"KRN",8994,3214,2,3,1,3,0)
ie VTYP="BP;T;P" for vitals of blood pressure, temperature and pulse
"KRN",8994,3214,2,4,0)
BDT^1^14^1^4
"KRN",8994,3214,2,4,1,0)
^^1^1^3150728^
"KRN",8994,3214,2,4,1,1,0)
Starting date for vitals retrieval.
"KRN",8994,3214,2,5,0)
EDT^1^14^1^5
"KRN",8994,3214,2,5,1,0)
^8994.021^1^1^3151026^^
"KRN",8994,3214,2,5,1,1,0)
End date for vitals retrieval.
"KRN",8994,3214,2,"B","BDT",4)

"KRN",8994,3214,2,"B","EDT",5)

"KRN",8994,3214,2,"B","VPSNUM",1)

"KRN",8994,3214,2,"B","VPSTYP",2)

"KRN",8994,3214,2,"B","VTYP",3)

"KRN",8994,3214,2,"PARAMSEQ",1,1)

"KRN",8994,3214,2,"PARAMSEQ",2,2)

"KRN",8994,3214,2,"PARAMSEQ",3,3)

"KRN",8994,3214,2,"PARAMSEQ",4,4)

"KRN",8994,3214,2,"PARAMSEQ",5,5)

"KRN",8994,3214,3,0)
^8994.03^3^3^3151026^^
"KRN",8994,3214,3,1,0)
Returns a array of patient vitals.
"KRN",8994,3214,3,2,0)
 VPSARR(1..n)= Vital Date/Time ^ Vital Type ^ Rate ^ High Risk Flag ^
"KRN",8994,3214,3,3,0)
                    Location ^ Q1 ; Q2 ^ Sup O2
"KRN",8994,3215,-1)
0^2
"KRN",8994,3215,0)
VPS STORE VITALS^WRITE^VPSVTL02^1^^^^1
"KRN",8994,3215,1,0)
^8994.01^2^2^3150731^^
"KRN",8994,3215,1,1,0)
This RPC is called  by the Vetlink Kiosk (point of service) system.
"KRN",8994,3215,1,2,0)
This RPC stores the patient vitals sent from the Kiosk.
"KRN",8994,3215,2,0)
^8994.02A^9^9
"KRN",8994,3215,2,1,0)
VPSNUM^1^25^1^1
"KRN",8994,3215,2,1,1,0)
^^1^1^3150731^
"KRN",8994,3215,2,1,1,1,0)
Patient ID such as the patient SSN OR DFN OR ICN OR VIC/CAC.
"KRN",8994,3215,2,2,0)
VPSTYP^1^7^1^2
"KRN",8994,3215,2,2,1,0)
^^1^1^3150731^
"KRN",8994,3215,2,2,1,1,0)
Patient ID TYPE such as SSN or DFN OR ICN OR VIC/CAC.
"KRN",8994,3215,2,3,0)
VTYP^1^10^1^3
"KRN",8994,3215,2,3,1,0)
^^1^1^3150731^
"KRN",8994,3215,2,3,1,1,0)
Vital type being stored. (i.e. BP for blood pressure)
"KRN",8994,3215,2,4,0)
VVAL^1^20^1^4
"KRN",8994,3215,2,4,1,0)
^^1^1^3150731^
"KRN",8994,3215,2,4,1,1,0)
The rate or value of the vital measurement.
"KRN",8994,3215,2,5,0)
DTM^1^14^1^5
"KRN",8994,3215,2,5,1,0)
^^1^1^3150731^
"KRN",8994,3215,2,5,1,1,0)
Date / time vital measurement was taken.
"KRN",8994,3215,2,6,0)
USER^1^9^1^6
"KRN",8994,3215,2,6,1,0)
^^1^1^3150731^
"KRN",8994,3215,2,6,1,1,0)
User that is entering the vitals
"KRN",8994,3215,2,7,0)
LOC^1^9^1^7
"KRN",8994,3215,2,7,1,0)
^^1^1^3150731^
"KRN",8994,3215,2,7,1,1,0)
Hospital location where the vitals where obtained.
"KRN",8994,3215,2,8,0)
QLFS^1^32^^8
"KRN",8994,3215,2,8,1,0)
^^2^2^3150731^
"KRN",8994,3215,2,8,1,1,0)
Any qualifiers for this vital entry. Qualifiers are concatinated together 
"KRN",8994,3215,2,8,1,2,0)
with colon seperator. (SITTING:R ARM)
"KRN",8994,3215,2,9,0)
OXY^1^30^^9
"KRN",8994,3215,2,9,1,0)
^8994.021^1^1^3150731^^
"KRN",8994,3215,2,9,1,1,0)
Oxygen flow rate and percent value (2 l/min 95%)
"KRN",8994,3215,2,"B","DTM",5)

"KRN",8994,3215,2,"B","LOC",7)

"KRN",8994,3215,2,"B","OXY",9)

"KRN",8994,3215,2,"B","QLFS",8)

"KRN",8994,3215,2,"B","USER",6)

"KRN",8994,3215,2,"B","VPSNUM",1)

"KRN",8994,3215,2,"B","VPSTYP",2)

"KRN",8994,3215,2,"B","VTYP",3)

"KRN",8994,3215,2,"B","VVAL",4)

"KRN",8994,3215,2,"PARAMSEQ",1,1)

"KRN",8994,3215,2,"PARAMSEQ",2,2)

"KRN",8994,3215,2,"PARAMSEQ",3,3)

"KRN",8994,3215,2,"PARAMSEQ",4,4)

"KRN",8994,3215,2,"PARAMSEQ",5,5)

"KRN",8994,3215,2,"PARAMSEQ",6,6)

"KRN",8994,3215,2,"PARAMSEQ",7,7)

"KRN",8994,3215,2,"PARAMSEQ",8,8)

"KRN",8994,3215,2,"PARAMSEQ",9,9)

"KRN",8994,3215,3,0)
^^1^1^3150731^
"KRN",8994,3215,3,1,0)
If error returns 0^Error message, otherwise returns 1.
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",221,-1)
1^1
"PKG",221,0)
VPS KIOSK^VPS^RPC components that support VPS Kiosk.
"PKG",221,20,0)
^9.402P^^
"PKG",221,22,0)
^9.49I^1^1
"PKG",221,22,1,0)
1.0
"PKG",221,22,1,"PAH",1,0)
10^3160322^123456830
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","VPSVTL01")
0^1^B12016894
"RTN","VPSVTL01",1,0)
VPSVTL01 ;ALBANY/KC - Patient Vitals RPC;08/14/14 09:28
"RTN","VPSVTL01",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**10**;July 8, 2015;Build 16
"RTN","VPSVTL01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSVTL01",4,0)
 ;
"RTN","VPSVTL01",5,0)
 ; External Reference DBIA#
"RTN","VPSVTL01",6,0)
 ; ------------------------
"RTN","VPSVTL01",7,0)
 ; #5047  - $$GETIEN^GMVGETVT         (supported)
"RTN","VPSVTL01",8,0)
 ; #3647  - EN1^GMRVUT0               (Supported)
"RTN","VPSVTL01",9,0)
 ; #10040 - File #44 ^SC( references  (Supported)
"RTN","VPSVTL01",10,0)
 Q
"RTN","VPSVTL01",11,0)
GET(VPSARR,VPSNUM,VPSTYP,VTYP,BDT,EDT) ;
"RTN","VPSVTL01",12,0)
 ;
"RTN","VPSVTL01",13,0)
 ; INPUT
"RTN","VPSVTL01",14,0)
 ;   VPSNUM  - Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSVTL01",15,0)
 ;   VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSVTL01",16,0)
 ;   VTYP    - Parameter for Vital Type
"RTN","VPSVTL01",17,0)
 ;   BDT     - Parameter Begin Date
"RTN","VPSVTL01",18,0)
 ;   EDT     - Parameter End Date
"RTN","VPSVTL01",19,0)
 ;
"RTN","VPSVTL01",20,0)
 ; OUTPUT
"RTN","VPSVTL01",21,0)
 ;   VPSARR  - passed in by reference; return array of patient Vitals
"RTN","VPSVTL01",22,0)
 ;           If error 
"RTN","VPSVTL01",23,0)
 ;                   VPSARR(1)=99^Error message
"RTN","VPSVTL01",24,0)
 ;           otherwise
"RTN","VPSVTL01",25,0)
 ;                   VPSRES(0)=1^Total number of Vitals being returned
"RTN","VPSVTL01",26,0)
 ;                   VPSARR(1)= Vital Date/Time ^ Vital Type ^ Rate ^ High Risk Flag ^ Location ^ Q1 ; Q2 ^ Sup O2
"RTN","VPSVTL01",27,0)
 ;                   VPSARR(n)= Vital Date/Time ^ Vital Type ^ Rate ^ High Risk Flag ^ Location ^ Q1      ^ Sup O2
"RTN","VPSVTL01",28,0)
 ;                                     Where Q1, Q2, .. Qn are the Qualifiers
"RTN","VPSVTL01",29,0)
 ;
"RTN","VPSVTL01",30,0)
 ;
"RTN","VPSVTL01",31,0)
 N CNT,DFN
"RTN","VPSVTL01",32,0)
 S CNT=0
"RTN","VPSVTL01",33,0)
 K VPSARR
"RTN","VPSVTL01",34,0)
 S DFN=$$VALIDATE^VPSRPC1($G(VPSTYP),$G(VPSNUM))
"RTN","VPSVTL01",35,0)
 I +DFN<0 S VPSARR(1)="99^"_$P(DFN,"^",2) Q
"RTN","VPSVTL01",36,0)
 ;
"RTN","VPSVTL01",37,0)
 N VID,VDAT,I
"RTN","VPSVTL01",38,0)
 S VID=""
"RTN","VPSVTL01",39,0)
 S VTYP=$G(VTYP)
"RTN","VPSVTL01",40,0)
 G:VTYP="LAST"!(VTYP="ALL") C1
"RTN","VPSVTL01",41,0)
 F I=1:1:$L(VTYP,";") D
"RTN","VPSVTL01",42,0)
 . S VDAT=$P(VTYP,";",I)
"RTN","VPSVTL01",43,0)
 . S VID=$$GETIEN^GMVGETVT(VTYP,2)
"RTN","VPSVTL01",44,0)
 . I VID=""!(VID=-1) S VPSARR="99^Invalid Vital Type"
"RTN","VPSVTL01",45,0)
 Q:$G(VPSARR)]""
"RTN","VPSVTL01",46,0)
C1 ;
"RTN","VPSVTL01",47,0)
 I $G(BDT)="" D NOW^%DTC S BDT=$P(%,".")_".0000"
"RTN","VPSVTL01",48,0)
 I $G(EDT)="" D
"RTN","VPSVTL01",49,0)
 . N X,%H
"RTN","VPSVTL01",50,0)
 . S X=BDT
"RTN","VPSVTL01",51,0)
 . D H^%DTC
"RTN","VPSVTL01",52,0)
 . S %H=%H+1
"RTN","VPSVTL01",53,0)
 . S X=0
"RTN","VPSVTL01",54,0)
 . D YMD^%DTC
"RTN","VPSVTL01",55,0)
 . S EDT=X_".0001"
"RTN","VPSVTL01",56,0)
 I $$DTCHK($G(BDT)) S VPSARR="99^Invalid or missing Start Date" Q
"RTN","VPSVTL01",57,0)
 I $$DTCHK($G(EDT)) S VPSARR="99^Invalid or missing End Date" Q
"RTN","VPSVTL01",58,0)
 I $P(EDT,".",2)="" S EDT=EDT_".2400"
"RTN","VPSVTL01",59,0)
 I BDT>EDT S VPSARR="99^Start date is after end date" Q
"RTN","VPSVTL01",60,0)
 ;
"RTN","VPSVTL01",61,0)
 N GMRVSTR
"RTN","VPSVTL01",62,0)
 I VTYP="ALL" S GMRVSTR="AG;AUD;BP;CG;CVP;FH;FT;HC;HE;HT;P;PN;PO2;R;T;TON;VC;VU;WT"
"RTN","VPSVTL01",63,0)
 I VTYP'="LAST",VTYP'="ALL" S GMRVSTR=VTYP
"RTN","VPSVTL01",64,0)
 S GMRVSTR(0)=BDT_"^"_EDT_"^99^1"
"RTN","VPSVTL01",65,0)
 I VTYP="LAST" S GMRVSTR="AG;AUD;BP;CG;CVP;FH;FT;HC;HE;HT;P;PN;PO2;R;T;TON;VC;VU;WT",$P(GMRVSTR(0),U,3)=1
"RTN","VPSVTL01",66,0)
 K ^UTILITY($J,"GMRVD")
"RTN","VPSVTL01",67,0)
 D EN1^GMRVUT0
"RTN","VPSVTL01",68,0)
 ; The utility will create an array with the desired information.  The
"RTN","VPSVTL01",69,0)
 ; array structure will be as follows if '$P(GMRVSTR(0),"^",4):
"RTN","VPSVTL01",70,0)
 ;      ^UTILITY($J,"GMRVD",GMRVTYP,GMRVRDT,GMRVIEN)=GMRVDATA
"RTN","VPSVTL01",71,0)
 ; or if $P(GMRVSTR(0),"^",4) then the following will be returned:
"RTN","VPSVTL01",72,0)
 ;      ^UTILITY($J,"GMRVD",GMRVRDT,GMRVTYP,GMRVIEN)=GMRVDATA
"RTN","VPSVTL01",73,0)
 ; where GMRVRDT  = Reverse FileMan date/time.
"RTN","VPSVTL01",74,0)
 ;                  9999999-Date/time vital/measurement was taken.
"RTN","VPSVTL01",75,0)
 ;       GMRVTYP  = The abbreviation used in the GMRVSTR string for the
"RTN","VPSVTL01",76,0)
 ;                  type of vital/measurement taken.
"RTN","VPSVTL01",77,0)
 ;       GMRVIEN  = Entry number in FILE 120.5 or
"RTN","VPSVTL01",78,0)
 ;                  pseudo entry number for File 704.117
"RTN","VPSVTL01",79,0)
 ;       GMRVDATA = $P(^GMR(120.5,GMRVIEN,0),"^",1,9) will be the patient data as
"RTN","VPSVTL01",80,0)
 ;                  currently defined in the DD for file 120.5.
"RTN","VPSVTL01",81,0)
 ;       $P(GMRVDATA,"^",10) = the first qualifier
"RTN","VPSVTL01",82,0)
 ;       $P(GMRVDATA,"^",11) = the second qualifier
"RTN","VPSVTL01",83,0)
 ;       $P(GMRVDATA,"^",12)= "*" for abnormal measurement, otherwise = ""
"RTN","VPSVTL01",84,0)
 ;       $P(GMRVDATA,"^",13)= values in centigrade for T; KG for WT; 
"RTN","VPSVTL01",85,0)
 ;                            in centimeter for HT and Circumference/Girth;
"RTN","VPSVTL01",86,0)
 ;                            in mmHg for CVP.
"RTN","VPSVTL01",87,0)
 ;       $P(GMRVDATA,"^",14)= Body Mass Index.
"RTN","VPSVTL01",88,0)
 ;       $P(GMRVDATA,"^",15)= L/Min of supplemental O2.
"RTN","VPSVTL01",89,0)
 ;       $P(GMRVDATA,"^",16)= % of supplemental O2.
"RTN","VPSVTL01",90,0)
 ;       $P(GMRVDATA,"^",17)= all qualifiers.
"RTN","VPSVTL01",91,0)
 ; ^UTILITY(551103247,"GMRVD",6849277.86,"HT",20)="3150721.14^7169761^8^3150721.141^5^123458951^^76^^ACTUAL^^^193.04^^^^ACTUAL"
"RTN","VPSVTL01",92,0)
 N TY,IEN,DAT,LOC
"RTN","VPSVTL01",93,0)
 S I="",TY="",IEN=""
"RTN","VPSVTL01",94,0)
 F  S I=$O(^UTILITY($J,"GMRVD",I)) Q:I=""  F  S TY=$O(^UTILITY($J,"GMRVD",I,TY)) Q:TY=""  F  S IEN=$O(^UTILITY($J,"GMRVD",I,TY,IEN)) Q:IEN=""  D
"RTN","VPSVTL01",95,0)
 . S DAT=^UTILITY($J,"GMRVD",I,TY,IEN)
"RTN","VPSVTL01",96,0)
 . S CNT=CNT+1
"RTN","VPSVTL01",97,0)
 . S LOC=$$GET1^DIQ(44,$P(DAT,U,5)_",",.01)
"RTN","VPSVTL01",98,0)
 . S VPSARR(CNT)=$P(DAT,U)_U_TY_U_$P(DAT,U,8)_U_$S($P(DAT,U,12)="*":1,1:"")_U_LOC_U_$P(DAT,U,17)_U_$P(DAT,U,16)
"RTN","VPSVTL01",99,0)
 S VPSARR(0)="1^"_CNT
"RTN","VPSVTL01",100,0)
 Q
"RTN","VPSVTL01",101,0)
 ;
"RTN","VPSVTL01",102,0)
 ; Date check function
"RTN","VPSVTL01",103,0)
DTCHK(DDT) ;
"RTN","VPSVTL01",104,0)
 N H,FM,MN,FLG
"RTN","VPSVTL01",105,0)
 Q:+$G(DDT)=0 1
"RTN","VPSVTL01",106,0)
 S MN=$P(DDT,".",2)
"RTN","VPSVTL01",107,0)
 S MN=$E(MN_"000000",1,6)
"RTN","VPSVTL01",108,0)
 S FLG=0
"RTN","VPSVTL01",109,0)
 I MN<0 S FLG=1
"RTN","VPSVTL01",110,0)
 I $E(MN,1)>2 S FLG=1
"RTN","VPSVTL01",111,0)
 I $E(MN,3)>5 S FLG=1
"RTN","VPSVTL01",112,0)
 I $E(MN,5)>5 S FLG=1
"RTN","VPSVTL01",113,0)
 Q:FLG 1
"RTN","VPSVTL01",114,0)
 S H=$$FMTH^XLFDT(DDT)
"RTN","VPSVTL01",115,0)
 I $P(H,",",2)=0 S FM=$$HTFM^XLFDT($P(H,","))
"RTN","VPSVTL01",116,0)
 E  S FM=$$HTFM^XLFDT(H)
"RTN","VPSVTL01",117,0)
 I +$P(DDT,".",2)=0 S DDT=$P(DDT,".")
"RTN","VPSVTL01",118,0)
 S $P(DDT,".",2)=$E($P(DDT,".",2)_"000000",1,6)
"RTN","VPSVTL01",119,0)
 S $P(FM,".",2)=$E($P(FM,".",2)_"000000",1,6)
"RTN","VPSVTL01",120,0)
 Q:FM=DDT 0
"RTN","VPSVTL01",121,0)
 Q 1
"RTN","VPSVTL02")
0^2^B18365565
"RTN","VPSVTL02",1,0)
VPSVTL02 ;ALBANY/KC - Patient Vitals RPC;08/14/14 09:28
"RTN","VPSVTL02",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**10**;July 8, 2015;Build 16
"RTN","VPSVTL02",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSVTL02",4,0)
 ;
"RTN","VPSVTL02",5,0)
 ; External Reference DBIA#
"RTN","VPSVTL02",6,0)
 ; ------------------------
"RTN","VPSVTL02",7,0)
 ; #3217    DDR FIND1                 (Supported)
"RTN","VPSVTL02",8,0)
 ; #4815    GMVDCSAV                  (Controlled)
"RTN","VPSVTL02",9,0)
 ; #6207    ABBVAL GMVUTL             (Controlled)
"RTN","VPSVTL02",10,0)
 Q
"RTN","VPSVTL02",11,0)
WRITE(VPSARR,VPSNUM,VPSTYP,VTYP,VVAL,DTM,BY,LOC,QLFS,OX) ;
"RTN","VPSVTL02",12,0)
 ;
"RTN","VPSVTL02",13,0)
 ; INPUT
"RTN","VPSVTL02",14,0)
 ;   VPSNUM  - Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSVTL02",15,0)
 ;   VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSVTL02",16,0)
 ;   VTYP    - Parameter for Vital Type
"RTN","VPSVTL02",17,0)
 ;   VVAL    - Rate for the Vital Type
"RTN","VPSVTL02",18,0)
 ;   DTM     - Date Time
"RTN","VPSVTL02",19,0)
 ;   BY      - Vitals entered by (user in File #200)
"RTN","VPSVTL02",20,0)
 ;   LOC     - Hospital location (File 44)
"RTN","VPSVTL02",21,0)
 ;   QLFS    - String of Qualifiers for this vital entry (Q1:Q2:Q3) (SITTING:R ARM)
"RTN","VPSVTL02",22,0)
 ;   OX      = Oxygen flow rate and percentage value (1 l/min 90%)
"RTN","VPSVTL02",23,0)
 ;
"RTN","VPSVTL02",24,0)
 ; OUTPUT
"RTN","VPSVTL02",25,0)
 ;   VPSARR  - 
"RTN","VPSVTL02",26,0)
 ;           If error 
"RTN","VPSVTL02",27,0)
 ;                   VPSARR=0^Error message
"RTN","VPSVTL02",28,0)
 ;           otherwise
"RTN","VPSVTL02",29,0)
 ;                   VPSARR=1(^Alert of abnormal vital vlaue - optional)
"RTN","VPSVTL02",30,0)
 ;                   
"RTN","VPSVTL02",31,0)
 ;
"RTN","VPSVTL02",32,0)
 ;
"RTN","VPSVTL02",33,0)
 ;
"RTN","VPSVTL02",34,0)
 N CNT,DFN,DDR,RES,VTIEN,ALERT
"RTN","VPSVTL02",35,0)
 S CNT=0
"RTN","VPSVTL02",36,0)
 S ALERT=""
"RTN","VPSVTL02",37,0)
 K VPSARR
"RTN","VPSVTL02",38,0)
 S VPSARR=1
"RTN","VPSVTL02",39,0)
 S DFN=$$VALIDATE^VPSRPC1($G(VPSTYP),$G(VPSNUM))
"RTN","VPSVTL02",40,0)
 I $G(BY)="" S BY=$G(DUZ)
"RTN","VPSVTL02",41,0)
 I +DFN<0 S VPSARR="0^"_$P(DFN,"^",2) Q
"RTN","VPSVTL02",42,0)
 I $G(VVAL)="" S VPSARR="0^Missing vital measurement value" Q
"RTN","VPSVTL02",43,0)
 I $G(VTYP)="" S VPSARR="0^Missing vital type" Q
"RTN","VPSVTL02",44,0)
 I VTYP="T",((+VVAL<45)!(+VVAL>120)) S VPSARR="0^Invalid vital measurement value for temperature of "_VVAL Q
"RTN","VPSVTL02",45,0)
 I VTYP="BP",VVAL'?1.N."/".N S VPSARR="0^Invalid vital measurement value for BP of "_VVAL Q
"RTN","VPSVTL02",46,0)
 I VTYP="BP" D
"RTN","VPSVTL02",47,0)
 . N DIA,SYT
"RTN","VPSVTL02",48,0)
 . S SYT=$P(VVAL,"/")
"RTN","VPSVTL02",49,0)
 . S DIA=$P(VVAL,"/",2)
"RTN","VPSVTL02",50,0)
 . I SYT<0!(SYT>300)!(DIA<0)!(DIA>300) S VPSARR="0^Invalid vital measurement value for BP of "_VVAL
"RTN","VPSVTL02",51,0)
 I VTYP'="BP",VVAL'?1.E S VPSARR="0^Invalid vital measurement value for "_VTYP_" of "_VVAL Q
"RTN","VPSVTL02",52,0)
 I VTYP="PN",VVAL<0!((VVAL>10)&(VVAL'=99)) S VPSARR="0^Invalid vital measurement value for Pain of "_VVAL Q
"RTN","VPSVTL02",53,0)
 I VTYP="PO2",VVAL<0!(VVAL>100) S VPSARR="0^Invalid vital measurement value for "_VTYP_" of "_VVAL Q
"RTN","VPSVTL02",54,0)
 I VTYP="P",VVAL<0!(VVAL>300) S VPSARR="0^Invalid vital measurement value for "_VTYP_" of "_VVAL Q
"RTN","VPSVTL02",55,0)
 I VTYP="R",VVAL<0!(VVAL>100) S VPSARR="0^Invalid vital measurement value for "_VTYP_" of "_VVAL Q
"RTN","VPSVTL02",56,0)
 I VTYP="WT",VVAL<0!(VVAL>1500) S VPSARR="0^Invalid vital measurement value for "_VTYP_" of "_VVAL Q
"RTN","VPSVTL02",57,0)
 I VTYP="HT",VVAL<10!(VVAL>100) S VPSARR="0^Invalid vital measurement value for "_VTYP_" of "_VVAL Q
"RTN","VPSVTL02",58,0)
 ;
"RTN","VPSVTL02",59,0)
 Q:$P(VPSARR,U)=0 
"RTN","VPSVTL02",60,0)
 ; Find Vital Type IEN using Vital Type Abbrev.
"RTN","VPSVTL02",61,0)
 S RES=""
"RTN","VPSVTL02",62,0)
 S DDR("FILE")=120.51
"RTN","VPSVTL02",63,0)
 S DDR("VALUE")=VTYP
"RTN","VPSVTL02",64,0)
 S DDR("FLAGS")="MX"
"RTN","VPSVTL02",65,0)
 D FIND1C^DDR2(.RES,.DDR)
"RTN","VPSVTL02",66,0)
 S VTIEN=+$G(RES(1))
"RTN","VPSVTL02",67,0)
 I VTIEN=0 S VPSARR="0^Invalid Vital Type ("_VTYP_")" Q
"RTN","VPSVTL02",68,0)
 N RK
"RTN","VPSVTL02",69,0)
 S RK=$$ABBVAL^GMVUTL7(VTIEN)
"RTN","VPSVTL02",70,0)
 I $L(RK)>0 D
"RTN","VPSVTL02",71,0)
 . I +VVAL>$P(RK,U)!(+VVAL<$P(RK,U,2)) S ALERT="Abnormal value of "_VVAL_" for vital type "_VTYP
"RTN","VPSVTL02",72,0)
 . I VTYP="BP",+$P(VVAL,"/",2)>$P(RK,U,3)!(+$P(VVAL,"/",2)<$P(RK,U,4)) S ALERT="Abnormal value of "_VVAL_" for vital type "_VTYP
"RTN","VPSVTL02",73,0)
 ;
"RTN","VPSVTL02",74,0)
 ;
"RTN","VPSVTL02",75,0)
 ; Find Qualifier IENs
"RTN","VPSVTL02",76,0)
 G:$G(QLFS)="" DT1
"RTN","VPSVTL02",77,0)
 K RES
"RTN","VPSVTL02",78,0)
 N QL,QIEN,ER,QIENS,I
"RTN","VPSVTL02",79,0)
 S DDR("FILE")=120.52
"RTN","VPSVTL02",80,0)
 S DDR("FLAGS")="MX"
"RTN","VPSVTL02",81,0)
 S ER=0
"RTN","VPSVTL02",82,0)
 S QIENS=""
"RTN","VPSVTL02",83,0)
 F I=1:1:$L(QLFS,":") S QL=$P(QLFS,":",I) D
"RTN","VPSVTL02",84,0)
 . S DDR("VALUE")=QL
"RTN","VPSVTL02",85,0)
 . D FIND1C^DDR2(.RES,.DDR)
"RTN","VPSVTL02",86,0)
 . S QIEN=+$G(RES(1))
"RTN","VPSVTL02",87,0)
 . I QIEN=0 S VPSARR="0^Invalid Qualifier ("_QL_")",ER=1 Q
"RTN","VPSVTL02",88,0)
 . S QIENS=QIENS_":"_QIEN
"RTN","VPSVTL02",89,0)
 Q:ER
"RTN","VPSVTL02",90,0)
 ; Remove leading colon
"RTN","VPSVTL02",91,0)
 S QIENS=$E(QIENS,2,999)
"RTN","VPSVTL02",92,0)
 ;
"RTN","VPSVTL02",93,0)
DT1 ;
"RTN","VPSVTL02",94,0)
 I $$DTCHK^VPSVTL01($G(DTM)) S VPSARR="0^Invalid or missing Date time" Q
"RTN","VPSVTL02",95,0)
 ; Set up variables for call to store vitals by calling EN1^GMVDCSAV
"RTN","VPSVTL02",96,0)
 ; GMVDATA has the following data:
"RTN","VPSVTL02",97,0)
 ; piece1^piece2^piece3^piece4^piece5
"RTN","VPSVTL02",98,0)
 ; where:
"RTN","VPSVTL02",99,0)
 ;   piece1 = date/time in FileMan internal format
"RTN","VPSVTL02",100,0)
 ;   piece2 = patient number from FILE 2 (i.e., DFN)
"RTN","VPSVTL02",101,0)
 ;   piece3 = vital type, a semi-colon, the reading, a semi-colon, and
"RTN","VPSVTL02",102,0)
 ;            oxygen flow rate and percentage values [optional] (e.g.,
"RTN","VPSVTL02",103,0)
 ;            21;99;1 l/min 90%)
"RTN","VPSVTL02",104,0)
 ;   piece4 = hospital location (FILE 44) pointer value
"RTN","VPSVTL02",105,0)
 ;   piece5 = FILE 200 user number (i.e., DUZ), an asterisk, and the 
"RTN","VPSVTL02",106,0)
 ;            qualifier (File 120.52) internal entry numbers separated by
"RTN","VPSVTL02",107,0)
 ;            colons (e.g., 547*50:65)
"RTN","VPSVTL02",108,0)
 ; Example:
"RTN","VPSVTL02",109,0)
 ;  > S GMVDATA="3051011.1635^134^1;120/80;^67^87*2:38:50:75"
"RTN","VPSVTL02",110,0)
 ;  > D EN1^GMVDCSAV(.RESULT,GMVDATA)
"RTN","VPSVTL02",111,0)
 N GMVDATA,RESULT
"RTN","VPSVTL02",112,0)
 S GMVDATA=DTM_U_DFN_U_VTIEN_";"_$G(VVAL)_";"_$G(OX)_U_$G(LOC)_U_$G(BY)_"*"_$G(QIENS)
"RTN","VPSVTL02",113,0)
 D EN1^GMVDCSAV(.RESULT,GMVDATA)
"RTN","VPSVTL02",114,0)
 I $G(RESULT(0))="" S VPSARR=1
"RTN","VPSVTL02",115,0)
 E  I RESULT(0)="ERROR" S VPSARR="0^"_$O(RESULT(""),-1)
"RTN","VPSVTL02",116,0)
 I VPSARR=1,ALERT]"" S VPSARR="1^"_ALERT
"RTN","VPSVTL02",117,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
VPS*1.0*14
"BLD",9844,0)
VPS*1.0*14^VPS KIOSK^0^3160322^y
"BLD",9844,4,0)
^9.64PA^853.85^2
"BLD",9844,4,853.8,0)
853.8
"BLD",9844,4,853.8,222)
y^n^f^^^^n
"BLD",9844,4,853.85,0)
853.85
"BLD",9844,4,853.85,222)
y^n^f^^^^n
"BLD",9844,4,"B",853.8,853.8)

"BLD",9844,4,"B",853.85,853.85)

"BLD",9844,6.3)
26
"BLD",9844,"ABPKG")
n
"BLD",9844,"INI")
EN^VPSCSQ1
"BLD",9844,"INID")
^y
"BLD",9844,"INIT")
UPDATE^VPSCSQ1
"BLD",9844,"KRN",0)
^9.67PA^779.2^20
"BLD",9844,"KRN",.4,0)
.4
"BLD",9844,"KRN",.401,0)
.401
"BLD",9844,"KRN",.402,0)
.402
"BLD",9844,"KRN",.403,0)
.403
"BLD",9844,"KRN",.5,0)
.5
"BLD",9844,"KRN",.84,0)
.84
"BLD",9844,"KRN",3.6,0)
3.6
"BLD",9844,"KRN",3.8,0)
3.8
"BLD",9844,"KRN",9.2,0)
9.2
"BLD",9844,"KRN",9.8,0)
9.8
"BLD",9844,"KRN",9.8,"NM",0)
^9.68A^12^10
"BLD",9844,"KRN",9.8,"NM",3,0)
VPSSRVY1^^0^B179593704
"BLD",9844,"KRN",9.8,"NM",4,0)
VPSSRVY2^^0^B56708984
"BLD",9844,"KRN",9.8,"NM",5,0)
VPSSRVY3^^0^B87941101
"BLD",9844,"KRN",9.8,"NM",6,0)
VPSCSQ1^^0^B55063195
"BLD",9844,"KRN",9.8,"NM",7,0)
VPSRPC1^^0^B29854527
"BLD",9844,"KRN",9.8,"NM",8,0)
VPSRPC15^^0^B13343975
"BLD",9844,"KRN",9.8,"NM",9,0)
VPSRPC16^^0^B180097049
"BLD",9844,"KRN",9.8,"NM",10,0)
VPSRPC13^^0^B13640535
"BLD",9844,"KRN",9.8,"NM",11,0)
VPSRPC26^^0^B119461952
"BLD",9844,"KRN",9.8,"NM",12,0)
VPSSRVY4^^0^B29387621
"BLD",9844,"KRN",9.8,"NM","B","VPSCSQ1",6)

"BLD",9844,"KRN",9.8,"NM","B","VPSRPC1",7)

"BLD",9844,"KRN",9.8,"NM","B","VPSRPC13",10)

"BLD",9844,"KRN",9.8,"NM","B","VPSRPC15",8)

"BLD",9844,"KRN",9.8,"NM","B","VPSRPC16",9)

"BLD",9844,"KRN",9.8,"NM","B","VPSRPC26",11)

"BLD",9844,"KRN",9.8,"NM","B","VPSSRVY1",3)

"BLD",9844,"KRN",9.8,"NM","B","VPSSRVY2",4)

"BLD",9844,"KRN",9.8,"NM","B","VPSSRVY3",5)

"BLD",9844,"KRN",9.8,"NM","B","VPSSRVY4",12)

"BLD",9844,"KRN",19,0)
19
"BLD",9844,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9844,"KRN",19,"NM",1,0)
VPS KIOSK INTERFACE^^0
"BLD",9844,"KRN",19,"NM","B","VPS KIOSK INTERFACE",1)

"BLD",9844,"KRN",19.1,0)
19.1
"BLD",9844,"KRN",101,0)
101
"BLD",9844,"KRN",409.61,0)
409.61
"BLD",9844,"KRN",771,0)
771
"BLD",9844,"KRN",779.2,0)
779.2
"BLD",9844,"KRN",870,0)
870
"BLD",9844,"KRN",8989.51,0)
8989.51
"BLD",9844,"KRN",8989.52,0)
8989.52
"BLD",9844,"KRN",8994,0)
8994
"BLD",9844,"KRN",8994,"NM",0)
^9.68A^5^5
"BLD",9844,"KRN",8994,"NM",1,0)
VPS GET SURVEY DATA^^0
"BLD",9844,"KRN",8994,"NM",2,0)
VPS SAVE CLINICAL SURVEY^^0
"BLD",9844,"KRN",8994,"NM",3,0)
VPS ENHANCED GET PATIENT DEMO^^0
"BLD",9844,"KRN",8994,"NM",4,0)
VPS GET PATIENT DEMOGRAPHIC^^0
"BLD",9844,"KRN",8994,"NM",5,0)
VPS GET2 PATIENT DEMOGRAPHIC^^0
"BLD",9844,"KRN",8994,"NM","B","VPS ENHANCED GET PATIENT DEMO",3)

"BLD",9844,"KRN",8994,"NM","B","VPS GET PATIENT DEMOGRAPHIC",4)

"BLD",9844,"KRN",8994,"NM","B","VPS GET SURVEY DATA",1)

"BLD",9844,"KRN",8994,"NM","B","VPS GET2 PATIENT DEMOGRAPHIC",5)

"BLD",9844,"KRN",8994,"NM","B","VPS SAVE CLINICAL SURVEY",2)

"BLD",9844,"KRN","B",.4,.4)

"BLD",9844,"KRN","B",.401,.401)

"BLD",9844,"KRN","B",.402,.402)

"BLD",9844,"KRN","B",.403,.403)

"BLD",9844,"KRN","B",.5,.5)

"BLD",9844,"KRN","B",.84,.84)

"BLD",9844,"KRN","B",3.6,3.6)

"BLD",9844,"KRN","B",3.8,3.8)

"BLD",9844,"KRN","B",9.2,9.2)

"BLD",9844,"KRN","B",9.8,9.8)

"BLD",9844,"KRN","B",19,19)

"BLD",9844,"KRN","B",19.1,19.1)

"BLD",9844,"KRN","B",101,101)

"BLD",9844,"KRN","B",409.61,409.61)

"BLD",9844,"KRN","B",771,771)

"BLD",9844,"KRN","B",779.2,779.2)

"BLD",9844,"KRN","B",870,870)

"BLD",9844,"KRN","B",8989.51,8989.51)

"BLD",9844,"KRN","B",8989.52,8989.52)

"BLD",9844,"KRN","B",8994,8994)

"BLD",9844,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9844,"QUES",0)
^9.62^^
"BLD",9844,"REQB",0)
^9.611^4^3
"BLD",9844,"REQB",1,0)
VPS*1.0*2^1
"BLD",9844,"REQB",3,0)
VPS*1.0*4^1
"BLD",9844,"REQB",4,0)
VPS*1.0*5^1
"BLD",9844,"REQB","B","VPS*1.0*2",1)

"BLD",9844,"REQB","B","VPS*1.0*4",3)

"BLD",9844,"REQB","B","VPS*1.0*5",4)

"FIA",853.8)
VPS CLINICAL SURVEY
"FIA",853.8,0)
^VPS(853.8,
"FIA",853.8,0,0)
853.8P
"FIA",853.8,0,1)
y^n^f^^^^n
"FIA",853.8,0,10)

"FIA",853.8,0,11)

"FIA",853.8,0,"RLRO")

"FIA",853.8,0,"VR")
1.0^VPS
"FIA",853.8,853.8)
0
"FIA",853.8,853.805)
0
"FIA",853.8,853.81)
0
"FIA",853.8,853.811)
0
"FIA",853.8,853.8111)
0
"FIA",853.8,853.8112)
0
"FIA",853.8,853.8113)
0
"FIA",853.8,853.81132)
0
"FIA",853.8,853.81133)
0
"FIA",853.8,853.811336)
0
"FIA",853.85)
VPS QUESTIONNAIRE IDENTIFIERS
"FIA",853.85,0)
^VPS(853.85,
"FIA",853.85,0,0)
853.85
"FIA",853.85,0,1)
y^n^f^^^^n
"FIA",853.85,0,10)

"FIA",853.85,0,11)

"FIA",853.85,0,"RLRO")

"FIA",853.85,0,"VR")
1.0^VPS
"FIA",853.85,853.85)
0
"FIA",853.85,853.853)
0
"INI")
EN^VPSCSQ1
"INIT")
UPDATE^VPSCSQ1
"IX",853.8,853.8,"D",0)
853.8^D^Index to assist in locating records to modify^R^^R^IR^W^853.811^^^^^LS
"IX",853.8,853.8,"D",1)
S ^VPS(853.8,"D",$E(X(1),1,30),$E(X(2),1,14),DA(3),DA(2),DA(1),DA)=""
"IX",853.8,853.8,"D",2)
K ^VPS(853.8,"D",$E(X(1),1,30),$E(X(2),1,14),DA(3),DA(2),DA(1),DA)
"IX",853.8,853.8,"D",2.5)
K ^VPS(853.8,"D")
"IX",853.8,853.8,"D",11.1,0)
^.114IA^2^2
"IX",853.8,853.8,"D",11.1,1,0)
1^F^853.811^.01^30^1^F
"IX",853.8,853.8,"D",11.1,1,3)

"IX",853.8,853.8,"D",11.1,2,0)
2^F^853.811^.02^14^2^F
"IX",853.8,853.8,"D",11.1,2,3)

"IX",853.8,853.8,"G",0)
853.8^G^New index^R^^R^IR^W^853.81^^^^^LS
"IX",853.8,853.8,"G",1)
S ^VPS(853.8,"G",X(1),X(2),DA(1),DA)=""
"IX",853.8,853.8,"G",2)
K ^VPS(853.8,"G",X(1),X(2),DA(1),DA)
"IX",853.8,853.8,"G",2.5)
K ^VPS(853.8,"G")
"IX",853.8,853.8,"G",11.1,0)
^.114IA^2^2
"IX",853.8,853.8,"G",11.1,1,0)
1^F^853.81^2^^1^F
"IX",853.8,853.8,"G",11.1,1,3)

"IX",853.8,853.8,"G",11.1,2,0)
2^F^853.81^7^^2^F
"IX",853.8,853.8,"G",11.1,2,3)

"IX",853.8,853.8,"H",0)
853.8^H^Index for Patient Identifier^R^^F^IR^I^853.8^^^^^LS
"IX",853.8,853.8,"H",1)
S ^VPS(853.8,"H",X,DA)=""
"IX",853.8,853.8,"H",2)
K ^VPS(853.8,"H",X,DA)
"IX",853.8,853.8,"H",2.5)
K ^VPS(853.8,"H")
"IX",853.8,853.8,"H",11.1,0)
^.114IA^1^1
"IX",853.8,853.8,"H",11.1,1,0)
1^F^853.8^.01^^1^F
"IX",853.8,853.8,"H",11.1,1,3)

"IX",853.85,853.85,"B",0)
853.85^B^Survey template ID cross reference to survey name.^R^^F^IR^I^853.85^^^^^LS
"IX",853.85,853.85,"B",1)
S ^VPS(853.85,"B",$E(X,1,60),DA)=""
"IX",853.85,853.85,"B",2)
K ^VPS(853.85,"B",$E(X,1,60),DA)
"IX",853.85,853.85,"B",2.5)
K ^VPS(853.85,"B")
"IX",853.85,853.85,"B",11.1,0)
^.114IA^1^1
"IX",853.85,853.85,"B",11.1,1,0)
1^F^853.85^.01^60^1^F
"KRN",19,11435,-1)
0^1
"KRN",19,11435,0)
VPS KIOSK INTERFACE^VPS KIOSK INTERFACE^^B^^^^^^^y^VPS KIOSK
"KRN",19,11435,1,0)
^19.06^3^3^3151027^^^^
"KRN",19,11435,1,1,0)
The RPCs that support the Vetlink Point of Service (Kiosk) system which
"KRN",19,11435,1,2,0)
will will call upon these RPCs for specific events triggered by the
"KRN",19,11435,1,3,0)
Vetlink patient-facing and staff-facing interfaces.
"KRN",19,11435,10.1)
VPS KIOSK INTERFACE
"KRN",19,11435,99.1)
63797,37374
"KRN",19,11435,"RPC",0)
^19.05P^54^54
"KRN",19,11435,"RPC",1,0)
VPS GET CLINIC
"KRN",19,11435,"RPC",2,0)
VPS GET PATIENT DEMOGRAPHIC
"KRN",19,11435,"RPC",3,0)
XWB GET VARIABLE VALUE
"KRN",19,11435,"RPC",6,0)
VPS EDIT PATIENT DEMOGRAPHIC
"KRN",19,11435,"RPC",7,0)
VPS FULLSSN
"KRN",19,11435,"RPC",8,0)
VPS GET DFN
"KRN",19,11435,"RPC",9,0)
VPS GET SITES
"KRN",19,11435,"RPC",10,0)
VPS LAST5
"KRN",19,11435,"RPC",11,0)
VPS PATIENT CHECK-IN
"KRN",19,11435,"RPC",12,0)
VPS PATIENT PRE-REGISTRATION
"KRN",19,11435,"RPC",13,0)
VPS LIST ALL
"KRN",19,11435,"RPC",19,0)
ORWRP PRINT REPORT
"KRN",19,11435,"RPC",21,0)
VPS GET2 PATIENT DEMOGRAPHIC
"KRN",19,11435,"RPC",23,0)
VPS GET CLINICAL REMINDERS
"KRN",19,11435,"RPC",24,0)
VPS PRINT PATIENT LABEL
"KRN",19,11435,"RPC",25,0)
VPS PATIENT WRISTBAND PRINT
"KRN",19,11435,"RPC",26,0)
VPS ENHANCED GET PATIENT DEMO
"KRN",19,11435,"RPC",32,0)
VPS GET PRINTERS
"KRN",19,11435,"RPC",37,0)
VPS GET ALL CLINICS
"KRN",19,11435,"RPC",38,0)
VPS GET APPOINTMENTS
"KRN",19,11435,"RPC",39,0)
VPS GET CHANGED APPOINTMENTS
"KRN",19,11435,"RPC",40,0)
VPS SAVE CLINICAL SURVEY
"KRN",19,11435,"RPC",41,0)
VPS GET SURVEY DATA
"KRN",19,11435,"RPC",42,0)
VPS GET ALLERGIES
"KRN",19,11435,"RPC",43,0)
VPS GET MRAR PDO
"KRN",19,11435,"RPC",44,0)
VPS GET LAST MRAR
"KRN",19,11435,"RPC",45,0)
VPS UPDATE LAST MRAR TIU IEN
"KRN",19,11435,"RPC",46,0)
VPS WRITE KIOSK PARAMETERS
"KRN",19,11435,"RPC",47,0)
VPS WRITE MRAR PDO
"KRN",19,11435,"RPC",48,0)
TIU SIGN RECORD
"KRN",19,11435,"RPC",49,0)
TIU LONG LIST OF TITLES
"KRN",19,11435,"RPC",50,0)
TIU CREATE RECORD
"KRN",19,11435,"RPC",51,0)
TIU SET DOCUMENT TEXT
"KRN",19,11435,"RPC",52,0)
TIU REQUIRES COSIGNATURE
"KRN",19,11435,"RPC",53,0)
VPS RETRIEVE PATIENT VITALS
"KRN",19,11435,"RPC",54,0)
VPS STORE VITALS
"KRN",19,11435,"U")
VPS KIOSK INTERFACE
"KRN",8994,2960,-1)
0^4
"KRN",8994,2960,0)
VPS GET PATIENT DEMOGRAPHIC^GETDATA^VPSRPC1^2^P^0^^1^1^^1
"KRN",8994,2960,1,0)
^^4^4^3151020^
"KRN",8994,2960,1,1,0)
Called by the Vetlink Kiosk system.  The RPC will accept a single input
"KRN",8994,2960,1,2,0)
value whic is the patient SSN.  The RPC returns the patient demographics,
"KRN",8994,2960,1,3,0)
insurance, and appointments (Starting from T-60 and including future 
"KRN",8994,2960,1,4,0)
appointments).
"KRN",8994,2960,2,0)
^8994.02A^1^1
"KRN",8994,2960,2,1,0)
SSN^1^12^1^1
"KRN",8994,2960,2,1,1,0)
^8994.021^1^1^3151020^^^^
"KRN",8994,2960,2,1,1,1,0)
Social Security Number
"KRN",8994,2960,2,"B","SSN",1)

"KRN",8994,2960,2,"PARAMSEQ",1,1)

"KRN",8994,2960,3,0)
^8994.03^5^5^3151020^^^^
"KRN",8994,2960,3,1,0)
Single dimensional array that represents the patient demographics, 
"KRN",8994,2960,3,2,0)
appointments, insurance information.
"KRN",8994,2960,3,3,0)
ARRAY(n)=File#^dfn;multiple entries^field#^Data^Fieldname"
"KRN",8994,2960,3,4,0)
exception data string:
"KRN",8994,2960,3,5,0)
ARRAY(n)="-1^Error text message"
"KRN",8994,3162,-1)
0^5
"KRN",8994,3162,0)
VPS GET2 PATIENT DEMOGRAPHIC^GETDATA2^VPSRPC1^2^P^0^^1^1
"KRN",8994,3162,1,0)
^^4^4^3151020^
"KRN",8994,3162,1,1,0)
Called by the Vetlink Kiosk system. The RPC will accept two input parameters 
"KRN",8994,3162,1,2,0)
which are the patient SSN or DFN and the patient type. The RPC returns the 
"KRN",8994,3162,1,3,0)
patient demographics,insurance, and appointments (Starting from T-60 and 
"KRN",8994,3162,1,4,0)
including future appointments).
"KRN",8994,3162,2,0)
^8994.02A^2^2
"KRN",8994,3162,2,1,0)
VPSNUM^1^12^1^1
"KRN",8994,3162,2,1,1,0)
^^1^1^3130306^
"KRN",8994,3162,2,1,1,1,0)
Patient Social Security Number or Patient IEN.
"KRN",8994,3162,2,2,0)
VPSTYP^1^10^1^2
"KRN",8994,3162,2,2,1,0)
^8994.021^1^1^3151020^^
"KRN",8994,3162,2,2,1,1,0)
SSN or DFN
"KRN",8994,3162,2,"B","VPSNUM",1)

"KRN",8994,3162,2,"B","VPSTYP",2)

"KRN",8994,3162,2,"PARAMSEQ",1,1)

"KRN",8994,3162,2,"PARAMSEQ",2,2)

"KRN",8994,3201,-1)
0^3
"KRN",8994,3201,0)
VPS ENHANCED GET PATIENT DEMO^GETDATA3^VPSRPC1^2^P^0^^1^1^^1
"KRN",8994,3201,1,0)
^8994.01^4^4^3151020^^^^
"KRN",8994,3201,1,1,0)
This RPC is called  by the Vetlink Kiosk (point of service) system.  
"KRN",8994,3201,1,2,0)
Given Patient SSN or DFN or ICN or VIC/CAC, this RPC returns the
"KRN",8994,3201,1,3,0)
patient demographics,insurance,and up-coming appointments, etc
"KRN",8994,3201,1,4,0)
for selected categories
"KRN",8994,3201,2,0)
^8994.02A^3^3
"KRN",8994,3201,2,1,0)
VPSNUM^1^25^1^1
"KRN",8994,3201,2,1,1,0)
^^1^1^3140821^
"KRN",8994,3201,2,1,1,1,0)
Patient ID such as the patient SSN OR DFN OR ICN OR VIC/CAC
"KRN",8994,3201,2,2,0)
VPSTYP^1^7^1^2
"KRN",8994,3201,2,2,1,0)
^^1^1^3140821^
"KRN",8994,3201,2,2,1,1,0)
Patient ID TYPE such as SSN or DFN OR ICN OR VIC/CAC
"KRN",8994,3201,2,3,0)
VPSCAT^2^20^1^3
"KRN",8994,3201,2,3,1,0)
^^20^20^3151020^
"KRN",8994,3201,2,3,1,1,0)
Input Format:  VPSCAT(SEQ#)=CATEGORY;FROMDATE:THROUGH DATE
"KRN",8994,3201,2,3,1,2,0)
Example input parameter : 
"KRN",8994,3201,2,3,1,3,0)
   VPSCAT(1)=1;3140101:3141231 <- returns Appointments start from 1/1/2014 through 12/31/2014
"KRN",8994,3201,2,3,1,4,0)
   VPSCAT(2)=2;3140601:3140630 <- returns Lab Orders start from 6/1/2014 through 6/30/2014
"KRN",8994,3201,2,3,1,5,0)
   VPSCAT(3)=3                 <- returns all consults
"KRN",8994,3201,2,3,1,6,0)
   VPSCAT(4)=6                 <- returns Patient Demographics
"KRN",8994,3201,2,3,1,7,0)
 
"KRN",8994,3201,2,3,1,8,0)
Valid Categories:
"KRN",8994,3201,2,3,1,9,0)
   1 - Appointment (With Date Range option)
"KRN",8994,3201,2,3,1,10,0)
   2 - Lab Orders (With Date Range option)
"KRN",8994,3201,2,3,1,11,0)
   3 - Consults (With Date Range option)
"KRN",8994,3201,2,3,1,12,0)
   4 - Radiology (With Date Range option)
"KRN",8994,3201,2,3,1,13,0)
   5 - Problem
"KRN",8994,3201,2,3,1,14,0)
   6 - Patient demographics
"KRN",8994,3201,2,3,1,15,0)
     - Patient Current Inpatient Status
"KRN",8994,3201,2,3,1,16,0)
     - Patient Ward Location
"KRN",8994,3201,2,3,1,17,0)
     - Patient Bed Assignment
"KRN",8994,3201,2,3,1,18,0)
     - Facility Directory Preference
"KRN",8994,3201,2,3,1,19,0)
   7 - Patient Additional patient demographic data
"KRN",8994,3201,2,3,1,20,0)
   8 - Patient Clinical (Health Factor)
"KRN",8994,3201,2,"B","VPSCAT",3)

"KRN",8994,3201,2,"B","VPSNUM",1)

"KRN",8994,3201,2,"B","VPSTYP",2)

"KRN",8994,3201,2,"PARAMSEQ",1,1)

"KRN",8994,3201,2,"PARAMSEQ",2,2)

"KRN",8994,3201,2,"PARAMSEQ",3,3)

"KRN",8994,3206,-1)
0^2
"KRN",8994,3206,0)
VPS SAVE CLINICAL SURVEY^SAVE^VPSSRVY1^1
"KRN",8994,3206,1,0)
^8994.01^39^39^3151109^^^^
"KRN",8994,3206,1,1,0)
This RPC will return success flag (1) or error flag (-1^error message)
"KRN",8994,3206,1,2,0)
VPSDFN  : Patient IEN
"KRN",8994,3206,1,3,0)
VPSDATA : Array of field-value pair to store
"KRN",8994,3206,1,4,0)
 
"KRN",8994,3206,1,5,0)
   Format : VPSDATA(1..n)=FIELD-NAME^SEQ#^FIELD-VALUE
"KRN",8994,3206,1,6,0)
 
"KRN",8994,3206,1,7,0)
   Example: 
"KRN",8994,3206,1,8,0)
                       Survey Name
"KRN",8994,3206,1,9,0)
            VPSDATA(1) = NAME^^Survey #1  
"KRN",8994,3206,1,10,0)
                       Survey Internal Name
"KRN",8994,3206,1,11,0)
            VPSDATA(2) = INTERNAL^^Survey Internal #1  
"KRN",8994,3206,1,12,0)
                       Questionnaire Template ID
"KRN",8994,3206,1,13,0)
            VPSDATA(3) = TEMPLATE ID^^5     
"KRN",8994,3206,1,14,0)
                       Survey Version
"KRN",8994,3206,1,15,0)
            VPSDATA(4) = VERSION^^10    
"KRN",8994,3206,1,16,0)
                       Date/Time Survey was taken                    
"KRN",8994,3206,1,17,0)
            VPSDATA(5) = DATE/TIME TAKEN^^9/24/2014@093001  
"KRN",8994,3206,1,18,0)
                       Date/Time Survey was modified
"KRN",8994,3206,1,19,0)
            VPSDATA(6) = DATE/TIME MODIFIED^^12/31/2014@153301 
"KRN",8994,3206,1,20,0)
                       Completion STATUS (C=Completed, I=Incomplete)
"KRN",8994,3206,1,21,0)
            VPSDATA(7) = STATUS^^C 
"KRN",8994,3206,1,22,0)
                       DUZ of INTERVIEWER
"KRN",8994,3206,1,23,0)
            VPSDATA(8) = INTERVIEWER^^4667 
"KRN",8994,3206,1,24,0)
                       Patient Safety (N=NO, Y=YES)
"KRN",8994,3206,1,25,0)
            VPSDATA(9) = SAFETY^^Y  
"KRN",8994,3206,1,26,0)
                       Immediate Action (N=NO, Y=YES)                      
"KRN",8994,3206,1,27,0)
            VPSDATA(10)= ACTION^^Y  
"KRN",8994,3206,1,28,0)
                       Survey Calculated Value                       
"KRN",8994,3206,1,29,0)
            The SURVEY CALC field is used to store overall survey 
"KRN",8994,3206,1,30,0)
            calculated values in a delimted string.  The string 
"KRN",8994,3206,1,31,0)
            format is as follows:
"KRN",8994,3206,1,32,0)
 
"KRN",8994,3206,1,33,0)
                        OVERALL SURVEY CALCULATED^CALCULATION LABEL_1;VALUE_1~CALCULATION LABEL_2;VALUE_2~~CALCULATION LABEL_NN;CALCULATION VALUE_NN
"KRN",8994,3206,1,34,0)
                      
"KRN",8994,3206,1,35,0)
             VPSDATA(11)= SURVEY CALC^^435.9^SCORE;89.5~AVG RATE;24~AVG NO COMPLETE;7
"KRN",8994,3206,1,36,0)
OUTPUT
"KRN",8994,3206,1,37,0)
  VPSRES =  1                   (Survey is stored successully)
"KRN",8994,3206,1,38,0)
           -1^Error Message     (Survey is not stored because an Error)
"KRN",8994,3206,1,39,0)
 
"KRN",8994,3206,1,40,0)
LABEL_NN;CALCULATION VALUE_NN
"KRN",8994,3206,1,41,0)
 
"KRN",8994,3206,1,42,0)
                
"KRN",8994,3206,1,43,0)
            VPSDATA(11)= SURVEY CALC^^435.9^SCORE;89.5~AVG RATE;24~AVG 
"KRN",8994,3206,1,44,0)
NO COMPLETE;7"
"KRN",8994,3206,1,45,0)
                       DUZ of survey creator         
"KRN",8994,3206,1,46,0)
            VPSDATA(12)= CREATOR^^45465           
"KRN",8994,3206,1,47,0)
   Multiple Questions
"KRN",8994,3206,1,48,0)
            VPSDATA(13)= QUESTION^1^Enter Your Name:
"KRN",8994,3206,1,49,0)
            VPSDATA(14)= QUESTION^2^Do you feel the doctor qualify?
"KRN",8994,3206,1,50,0)
            VPSDATA(15)= QUESTION^3^Rate visit (1-10) 1=Bad, 10:GREAT?
"KRN",8994,3206,1,51,0)
   Multiple Response
"KRN",8994,3206,1,52,0)
            VPSDATA(16)= RESPONSE^1^MCENROE,JOHN
"KRN",8994,3206,1,53,0)
            VPSDATA(17)= RESPONSE^2^NO
"KRN",8994,3206,1,54,0)
            VPSDATA(18)= RESPONSE^3^5
"KRN",8994,3206,1,55,0)
   Multiple Survey Calculated Values
"KRN",8994,3206,1,56,0)
            VPSDATA(19)= QUESTION CALC^1^Name: John McEnroe
"KRN",8994,3206,1,57,0)
            VPSDATA(20)= QUESTION CALC^2^Dr. Carter is not qualified to 
"KRN",8994,3206,1,58,0)
treat my illness
"KRN",8994,3206,1,59,0)
            VPSDATA(21)= QUESTION CALC^3^I rated my visit as 
"KRN",8994,3206,1,60,0)
unsatisfactory
"KRN",8994,3206,1,61,0)
 
"KRN",8994,3206,1,62,0)
OUTPUT
"KRN",8994,3206,1,63,0)
  VPSRES =  1                   (Survey is stored successully)
"KRN",8994,3206,1,64,0)
           -1^Error Message     (Survey is not stored because an Error)
"KRN",8994,3206,2,0)
^8994.02A^3^3
"KRN",8994,3206,2,1,0)
VPSDFN^1^9^1^1
"KRN",8994,3206,2,1,1,0)
^8994.021^1^1^3140930^^^
"KRN",8994,3206,2,1,1,1,0)
Patient ID (DFN) who enters the Clinical Survey Questionannire 
"KRN",8994,3206,2,2,0)
VPSDATA^2^255^1^2
"KRN",8994,3206,2,2,1,0)
^8994.021^1^1^3151109^^^
"KRN",8994,3206,2,2,1,1,0)
Array of Data containing Clinical Survey Questionnaire to be stored in VistA.
"KRN",8994,3206,2,3,0)
MODFLG^1^1^^3
"KRN",8994,3206,2,3,1,0)
^^5^5^3151109^
"KRN",8994,3206,2,3,1,1,0)
A flag to indicate that an existing response is being modified
"KRN",8994,3206,2,3,1,2,0)
  0 new occurrence
"KRN",8994,3206,2,3,1,3,0)
  1 edit existing data, but add new responses while keeping previous
"KRN",8994,3206,2,3,1,4,0)
    response
"KRN",8994,3206,2,3,1,5,0)
  2 edit existing data, but over write previous response
"KRN",8994,3206,2,"B","MODFLG",3)

"KRN",8994,3206,2,"B","VPSDATA",2)

"KRN",8994,3206,2,"B","VPSDFN",1)

"KRN",8994,3206,2,"PARAMSEQ",1,1)

"KRN",8994,3206,2,"PARAMSEQ",2,2)

"KRN",8994,3206,2,"PARAMSEQ",3,3)

"KRN",8994,3207,-1)
0^1
"KRN",8994,3207,0)
VPS GET SURVEY DATA^GETRPC^VPSSRVY2^4^^^^1
"KRN",8994,3207,1,0)
^8994.01^1^1^3151013^^^^
"KRN",8994,3207,1,1,0)
Retrieves an array containing the patient's Clinical Survey information.
"KRN",8994,3207,2,0)
^8994.02A^8^8
"KRN",8994,3207,2,1,0)
VPSPID^1^25^1^1
"KRN",8994,3207,2,1,1,0)
^8994.021^3^3^3141113^^
"KRN",8994,3207,2,1,1,1,0)
Patient ID such as the patient SSN OR DFN OR ICN OR VIC/CAC
"KRN",8994,3207,2,1,1,2,0)
for whom the Clinical Questionnaire information is being
"KRN",8994,3207,2,1,1,3,0)
requested.
"KRN",8994,3207,2,2,0)
VPSQIEN^1^9^^3
"KRN",8994,3207,2,2,1,0)
^8994.021^1^1^3141113^^
"KRN",8994,3207,2,2,1,1,0)
Questionnaire IEN for filtering the results.
"KRN",8994,3207,2,3,0)
VPSQNM^1^60^^4
"KRN",8994,3207,2,3,1,0)
^8994.021^1^1^3141113^^
"KRN",8994,3207,2,3,1,1,0)
Questionnaire Name for filtering the results.
"KRN",8994,3207,2,4,0)
VPSFDT^1^14^^5
"KRN",8994,3207,2,4,1,0)
^8994.021^1^1^3141113^^
"KRN",8994,3207,2,4,1,1,0)
Date From for filtering the results
"KRN",8994,3207,2,5,0)
VPSTDT^1^14^^6
"KRN",8994,3207,2,5,1,0)
^8994.021^1^1^3141113^^
"KRN",8994,3207,2,5,1,1,0)
Date To for filtering the results
"KRN",8994,3207,2,6,0)
VPSNUM^1^4^^7
"KRN",8994,3207,2,6,1,0)
^8994.021^1^1^3141113^^^
"KRN",8994,3207,2,6,1,1,0)
Maxumum number of occurrences to return.
"KRN",8994,3207,2,7,0)
VPSTYP^1^7^1^2
"KRN",8994,3207,2,7,1,0)
^8994.021^1^1^3151009^^
"KRN",8994,3207,2,7,1,1,0)
Patient ID TYPE such as SSN or DFN OR ICN OR VIC/CAC.
"KRN",8994,3207,2,8,0)
AHFLG^1^1^0^8
"KRN",8994,3207,2,8,1,0)
^8994.021^4^4^3151013^^^
"KRN",8994,3207,2,8,1,1,0)
Answer History Flag
"KRN",8994,3207,2,8,1,2,0)
 
"KRN",8994,3207,2,8,1,3,0)
0 - current answer (default)
"KRN",8994,3207,2,8,1,4,0)
1 - all answers to the question
"KRN",8994,3207,2,"B","AHFLG",8)

"KRN",8994,3207,2,"B","VPSFDT",4)

"KRN",8994,3207,2,"B","VPSNUM",6)

"KRN",8994,3207,2,"B","VPSPID",1)

"KRN",8994,3207,2,"B","VPSQIEN",2)

"KRN",8994,3207,2,"B","VPSQNM",3)

"KRN",8994,3207,2,"B","VPSTDT",5)

"KRN",8994,3207,2,"B","VPSTYP",7)

"KRN",8994,3207,2,"PARAMSEQ",1,1)

"KRN",8994,3207,2,"PARAMSEQ",2,7)

"KRN",8994,3207,2,"PARAMSEQ",3,2)

"KRN",8994,3207,2,"PARAMSEQ",4,3)

"KRN",8994,3207,2,"PARAMSEQ",5,4)

"KRN",8994,3207,2,"PARAMSEQ",6,5)

"KRN",8994,3207,2,"PARAMSEQ",7,6)

"KRN",8994,3207,2,"PARAMSEQ",8,8)

"KRN",8994,3207,3,0)
^^42^42^3151013^
"KRN",8994,3207,3,1,0)
AN array is returned.
"KRN",8994,3207,3,2,0)
 
"KRN",8994,3207,3,3,0)
 OUTPUT
"KRN",8994,3207,3,4,0)
  If error
"KRN",8994,3207,3,5,0)
   VPSRES(0)=-1^Error Message
"KRN",8994,3207,3,6,0)
 
"KRN",8994,3207,3,7,0)
  otherwise
"KRN",8994,3207,3,8,0)
   VPSRES(0)=1^Number of Questionnaires
"KRN",8994,3207,3,9,0)
   VPSRES(1) = <CSQ>
"KRN",8994,3207,3,10,0)
   VPSRES(2) =     PATIENT ^ QUESTIONNAIRE TEMPLATE ID ^ QUESTIONNAIRE 
"KRN",8994,3207,3,11,0)
TEMPLATE NAME ^ QUESTIONNAIRE TEMPLATE IEN ^ VERSION
"KRN",8994,3207,3,12,0)
   VPSRES(3) =     <RESPONSE>
"KRN",8994,3207,3,13,0)
   VPSRES(4) =          RESPONSE IDENTIFIER ^ DATE/TIME TAKEN ^ DATE/TIME 
"KRN",8994,3207,3,14,0)
LAST MODIFIED
"KRN",8994,3207,3,15,0)
   VPSRES(5) =          COMPLETION STATUS ^ PATIENT SAFETY ^ IMMEDIATE 
"KRN",8994,3207,3,16,0)
ACTION ^ SURVEY CALCULATED VALUE
"KRN",8994,3207,3,17,0)
   VPSRES(6) =          <APPOINTMENT CHECK-IN>
"KRN",8994,3207,3,18,0)
   VPSRES(7) =               APPOINTMENT CHECK-IN ID
"KRN",8994,3207,3,19,0)
   VPSRES(8) =          </APPOINTMENT CHECK-IN>
"KRN",8994,3207,3,20,0)
   VPSRES(9) =          <ADDITIONAL CALCULATED VALUE>
"KRN",8994,3207,3,21,0)
   VPSRES(10) =               ADDITIONAL CALC VALUE NAME ^ ADDITIONAL 
"KRN",8994,3207,3,22,0)
CALC VALUE SCORE
"KRN",8994,3207,3,23,0)
   VPSRES(11) =          </ADDITIONAL CALCULATED VALUE>
"KRN",8994,3207,3,24,0)
   VPSRES(12) =          <QUESTIONS>
"KRN",8994,3207,3,25,0)
   VPSRES(13) =               QUESTION NUMBER ^ QUESTION CALCULATED VALUE
"KRN",8994,3207,3,26,0)
   VPSRES(14) =               <QUESTION PRESENTED>
"KRN",8994,3207,3,27,0)
   VPSRES(15) =                    QUESTION TEXT....
"KRN",8994,3207,3,28,0)
   VPSRES(16) =               </QUESTION PRESENTED>
"KRN",8994,3207,3,29,0)
   VPSRES(17) =               <ANSWER>
"KRN",8994,3207,3,30,0)
   VPSRES(18) =                    ANSWER IDENTIFIER ^ INTERFACE USED ^ 
"KRN",8994,3207,3,31,0)
RESPONDENT ^ RESPONDENT NAME ^ ANSWER DATE/TIME ^ INTERVIEWER NAME ^ 
"KRN",8994,3207,3,32,0)
KIOSK IDENTIFIER ^ KIOSK SESSION IDENTIFIER ^ KIOSK GROUP IDENTIFIER
"KRN",8994,3207,3,33,0)
   VPSRES(19) =                    <ANSWER RESPONSE>
"KRN",8994,3207,3,34,0)
   VPSRES(20) =                         ANSWER TEXT
"KRN",8994,3207,3,35,0)
   VPSRES(21) =                    </ANSWER RESPONSE>
"KRN",8994,3207,3,36,0)
   VPSRES(22) =               </ANSWER>
"KRN",8994,3207,3,37,0)
   VPSRES(23) =          </QUESTIONS>
"KRN",8994,3207,3,38,0)
   VPSRES(24) =     </RESPONSE>
"KRN",8994,3207,3,39,0)
   VPSRES(25) = </CSQ>
"KRN",8994,3207,3,40,0)
   VPSRES(26) = <CSQ> 
"KRN",8994,3207,3,41,0)
   ...
"KRN",8994,3207,3,42,0)
   VPSRES(n) = </CSQ>
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",221,-1)
1^1
"PKG",221,0)
VPS KIOSK^VPS^RPC components that support VPS Kiosk.
"PKG",221,20,0)
^9.402P^^
"PKG",221,22,0)
^9.49I^1^1
"PKG",221,22,1,0)
1.0
"PKG",221,22,1,"PAH",1,0)
14^3160322^123456830
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","VPSCSQ1")
0^6^B55063195
"RTN","VPSCSQ1",1,0)
VPSCSQ1  ;KC - preinstall routine to save off data and remove existing DD stucture;08/20/14 09:28
"RTN","VPSCSQ1",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**14**;Aug 20, 2015;Build 26
"RTN","VPSCSQ1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSCSQ1",4,0)
 ;
"RTN","VPSCSQ1",5,0)
 QUIT
"RTN","VPSCSQ1",6,0)
 ;
"RTN","VPSCSQ1",7,0)
 ;
"RTN","VPSCSQ1",8,0)
EN ; Entry point for calling both tags to save off existing VPS information
"RTN","VPSCSQ1",9,0)
 I $D(^DD(853.81133)) S ^TMP("VPS 1*14",$J,"DNC")=1 Q
"RTN","VPSCSQ1",10,0)
 D EN0,EN1
"RTN","VPSCSQ1",11,0)
 Q
"RTN","VPSCSQ1",12,0)
EN0 ; entry point for saving off existing VPS QUESTIONNAIRE INTERNAL NAME (File: 853.85, Field 3)
"RTN","VPSCSQ1",13,0)
 N A,VPSARR
"RTN","VPSCSQ1",14,0)
 S A=0
"RTN","VPSCSQ1",15,0)
 S VPSARR="^TMP(""VPS QIN"",$J)"
"RTN","VPSCSQ1",16,0)
 K @VPSARR
"RTN","VPSCSQ1",17,0)
 F  S A=$O(^VPS(853.85,A)) Q:'A  S @VPSARR@(A,1,0)=$$GET1^DIQ(853.85,A_",",3)
"RTN","VPSCSQ1",18,0)
 ;K ^TMP("VPS 853.85 HOLD")
"RTN","VPSCSQ1",19,0)
 ;M ^TMP("VPS 853.85 HOLD",853.85)=^VPS(853.85)
"RTN","VPSCSQ1",20,0)
 Q
"RTN","VPSCSQ1",21,0)
EN1 ; entry point for saving off existing VPS CSQ data
"RTN","VPSCSQ1",22,0)
 ; 
"RTN","VPSCSQ1",23,0)
 ; Save off existing VPS CSQ data into TMP global
"RTN","VPSCSQ1",24,0)
 N CSQARR,DFN
"RTN","VPSCSQ1",25,0)
 S CSQARR="^TMP(""VPS CSQ"",$J)"
"RTN","VPSCSQ1",26,0)
 K @CSQARR
"RTN","VPSCSQ1",27,0)
 S DFN=0
"RTN","VPSCSQ1",28,0)
 F  S DFN=$O(^VPS(853.8,DFN)) Q:'DFN  D GETS^DIQ(853.8,DFN_",","**","I",.CSQARR)
"RTN","VPSCSQ1",29,0)
 ;K ^TMP("VPS 853.8 HOLD")
"RTN","VPSCSQ1",30,0)
 ;M ^TMP("VPS 853.8 HOLD",853.8)=^VPS(853.8)
"RTN","VPSCSQ1",31,0)
 H 2
"RTN","VPSCSQ1",32,0)
 ;
"RTN","VPSCSQ1",33,0)
 ; Remove existing VPS CSQ DD and data
"RTN","VPSCSQ1",34,0)
 S DIU="^VPS(853.8,",DIU(0)="DS" D EN^DIU2
"RTN","VPSCSQ1",35,0)
 ; now evironment is prepared for the installation of VPS*1.0*14
"RTN","VPSCSQ1",36,0)
 ; which has a totally new data structure for VPS CSQ information
"RTN","VPSCSQ1",37,0)
 Q
"RTN","VPSCSQ1",38,0)
 ;
"RTN","VPSCSQ1",39,0)
 ; Entry point for moving saved off information into new structure
"RTN","VPSCSQ1",40,0)
UPDATE ;
"RTN","VPSCSQ1",41,0)
 I $G(^TMP("VPS 1*14",$J,"DNC"))=1 Q
"RTN","VPSCSQ1",42,0)
 D EN2,EN3
"RTN","VPSCSQ1",43,0)
 Q
"RTN","VPSCSQ1",44,0)
 ;
"RTN","VPSCSQ1",45,0)
EN2 ; Entry point for moving VPS QUESTIONNAIRE INTERNAL NAME into its word processing field
"RTN","VPSCSQ1",46,0)
 N A,VPSARR,FDAERR,QIN,DIK
"RTN","VPSCSQ1",47,0)
 S A=0
"RTN","VPSCSQ1",48,0)
 S VPSARR="^TMP(""VPS QIN"",$J)"
"RTN","VPSCSQ1",49,0)
 F  S A=$O(@VPSARR@(A)) Q:'A!$D(FDAERR)  D WP^DIE(853.85,A_",",3,"","^TMP(""VPS QIN"",$J,"_A_")","FDAERR")
"RTN","VPSCSQ1",50,0)
 ;
"RTN","VPSCSQ1",51,0)
 ; Add leading space to Template ID field to prevent it from being evaluated as a number
"RTN","VPSCSQ1",52,0)
 ;S A=0
"RTN","VPSCSQ1",53,0)
 ;F  S A=$O(^VPS(853.85,A)) Q:'A  S QIN=$P(^VPS(853.85,A,0),U),QIN="VPS_"_QIN,$P(^VPS(853.85,A,0),U)=QIN
"RTN","VPSCSQ1",54,0)
 K ^VPS(853.85,"B")
"RTN","VPSCSQ1",55,0)
 S DIK="^VPS(853.85," D IXALL^DIK
"RTN","VPSCSQ1",56,0)
 Q
"RTN","VPSCSQ1",57,0)
EN3 ; Entry point for moving previous CSQ information into the new CSQ data structure
"RTN","VPSCSQ1",58,0)
 ;
"RTN","VPSCSQ1",59,0)
 N CSQARR,DFN,SUB8,SUB81,SUB811
"RTN","VPSCSQ1",60,0)
 N DTS,DTT,DTLM,DAT,INV,SCV,CS,PS,IA,TID,CREATOR
"RTN","VPSCSQ1",61,0)
 N CNT,QNUM,QUEST,ANS,QCV
"RTN","VPSCSQ1",62,0)
 ;
"RTN","VPSCSQ1",63,0)
 S CSQARR="^TMP(""VPS CSQ"",$J)"
"RTN","VPSCSQ1",64,0)
 ;
"RTN","VPSCSQ1",65,0)
 S SUB8=""
"RTN","VPSCSQ1",66,0)
CSQ8 ;Obtain DFN
"RTN","VPSCSQ1",67,0)
 S SUB8=$O(@CSQARR@(853.8,SUB8))
"RTN","VPSCSQ1",68,0)
 G:SUB8="" DONE
"RTN","VPSCSQ1",69,0)
 S DFN=@CSQARR@(853.8,SUB8,.01,"I") ; PATIENT
"RTN","VPSCSQ1",70,0)
 ;
"RTN","VPSCSQ1",71,0)
 S SUB81=""
"RTN","VPSCSQ1",72,0)
 ; Obtain data from the 853.81 sub-file for given DFN
"RTN","VPSCSQ1",73,0)
CSQ81 ;
"RTN","VPSCSQ1",74,0)
 S SUB81=$O(@CSQARR@(853.81,SUB81))
"RTN","VPSCSQ1",75,0)
 G:SUB81="" CSQ8
"RTN","VPSCSQ1",76,0)
 I $P(SUB81,",",2)'=DFN G CSQ81
"RTN","VPSCSQ1",77,0)
 S DTS=@CSQARR@(853.81,SUB81,.01,"I") ; DATE/TIME STORED
"RTN","VPSCSQ1",78,0)
 S DTT=@CSQARR@(853.81,SUB81,2,"I") ; DATE/TIME TAKEN
"RTN","VPSCSQ1",79,0)
 S DTLM=@CSQARR@(853.81,SUB81,3,"I") ;   DATE/TIME LAST MODIFIED
"RTN","VPSCSQ1",80,0)
 S DAT=@CSQARR@(853.81,SUB81,4,"I")
"RTN","VPSCSQ1",81,0)
 S INV=$$GET1^DIQ(200,DAT_",",.01) ;  INTERVIEWER STAFF
"RTN","VPSCSQ1",82,0)
 S SCV=@CSQARR@(853.81,SUB81,5,"I") ; SURVEY CALCULATED VALUE
"RTN","VPSCSQ1",83,0)
 S CS=@CSQARR@(853.81,SUB81,6,"I") ; COMPLETION STATUS
"RTN","VPSCSQ1",84,0)
 ; Convert completion status into new set values
"RTN","VPSCSQ1",85,0)
 I CS="C" S CS=1
"RTN","VPSCSQ1",86,0)
 E  S CS=2
"RTN","VPSCSQ1",87,0)
 S PS=@CSQARR@(853.81,SUB81,7,"I") ; PATIENT SAFETY
"RTN","VPSCSQ1",88,0)
 ; Convert patient safety into new set values
"RTN","VPSCSQ1",89,0)
 I PS="Y" S PS=1
"RTN","VPSCSQ1",90,0)
 E  S PS=2
"RTN","VPSCSQ1",91,0)
 ;
"RTN","VPSCSQ1",92,0)
 S IA=@CSQARR@(853.81,SUB81,8,"I") ; IMMEDIATE ACTION
"RTN","VPSCSQ1",93,0)
 ; Convert immediate action into new set values
"RTN","VPSCSQ1",94,0)
 I IA="Y" S IA=1
"RTN","VPSCSQ1",95,0)
 E  S IA=2
"RTN","VPSCSQ1",96,0)
 ;
"RTN","VPSCSQ1",97,0)
 S TID=@CSQARR@(853.81,SUB81,11,"I") ;  QUESTIONNAIRE TEMPLATE ID
"RTN","VPSCSQ1",98,0)
 S CREATOR=@CSQARR@(853.81,SUB81,12,"I") ;  SURVEY CREATOR
"RTN","VPSCSQ1",99,0)
 ;
"RTN","VPSCSQ1",100,0)
 S SUB811=""
"RTN","VPSCSQ1",101,0)
 S CNT=0
"RTN","VPSCSQ1",102,0)
 K QNUM,QUEST,ANS,QCV
"RTN","VPSCSQ1",103,0)
 ; Obtain data from the 853.811 sub-file for given DFN
"RTN","VPSCSQ1",104,0)
CSQ811 ;
"RTN","VPSCSQ1",105,0)
 S SUB811=$O(@CSQARR@(853.811,SUB811))
"RTN","VPSCSQ1",106,0)
 G:SUB811="" STORE
"RTN","VPSCSQ1",107,0)
 I $P(SUB811,",",3)'=DFN G CSQ811 ; making sure dealing wiht same paitent
"RTN","VPSCSQ1",108,0)
 I $P(SUB811,",",2)'=DTS G CSQ811 ; making sure information is for same date/time stored
"RTN","VPSCSQ1",109,0)
 S CNT=CNT+1
"RTN","VPSCSQ1",110,0)
 S QNUM(CNT)=@CSQARR@(853.811,SUB811,.01,"I") ; QUESTION NUMBER
"RTN","VPSCSQ1",111,0)
 S QUEST(CNT)=@CSQARR@(853.811,SUB811,1,"I") ; QUESTION PRESENTED
"RTN","VPSCSQ1",112,0)
 S ANS(CNT)=@CSQARR@(853.811,SUB811,2,"I") ; ANSWER RESPONSE PROVIDED
"RTN","VPSCSQ1",113,0)
 S QCV(CNT)=@CSQARR@(853.811,SUB811,3,"I") ; QUESTION CALCULATED VALUE
"RTN","VPSCSQ1",114,0)
 G CSQ811
"RTN","VPSCSQ1",115,0)
 ;
"RTN","VPSCSQ1",116,0)
 ; Create CSQ record for the information 
"RTN","VPSCSQ1",117,0)
STORE ;
"RTN","VPSCSQ1",118,0)
 ;
"RTN","VPSCSQ1",119,0)
 ; STORE DATA
"RTN","VPSCSQ1",120,0)
 D ADDDFN(DFN)
"RTN","VPSCSQ1",121,0)
 D ADDQST(DFN,TID)
"RTN","VPSCSQ1",122,0)
 D ADDSRVY(DFN,TID,DTS,CREATOR)
"RTN","VPSCSQ1",123,0)
 D ADDRES(DFN,TID,DTS,DTT,DTLM,CS,PS,IA)
"RTN","VPSCSQ1",124,0)
 D ADDQUEST(DFN,TID,DTS,DTLM,.QNUM,.QCV,.QUEST,.ANS)
"RTN","VPSCSQ1",125,0)
 G CSQ81
"RTN","VPSCSQ1",126,0)
 ;
"RTN","VPSCSQ1",127,0)
 ;
"RTN","VPSCSQ1",128,0)
 ;
"RTN","VPSCSQ1",129,0)
DONE ;
"RTN","VPSCSQ1",130,0)
 QUIT
"RTN","VPSCSQ1",131,0)
 ;
"RTN","VPSCSQ1",132,0)
 ;================================================================================================================
"RTN","VPSCSQ1",133,0)
 ; THE BELOW CODE COULD BE MODIFIED TO STORE INFOMATION IN THE NEW CSQ DATA STRUCTURE
"RTN","VPSCSQ1",134,0)
 ;
"RTN","VPSCSQ1",135,0)
 ;================================================================================================================
"RTN","VPSCSQ1",136,0)
ADDDFN(VPSDFN) ;Add Survey (patient level)
"RTN","VPSCSQ1",137,0)
 QUIT:$D(^VPS(853.8,VPSDFN,0)) ""
"RTN","VPSCSQ1",138,0)
 N FIL S FIL=853.8
"RTN","VPSCSQ1",139,0)
 N IENS S IENS(1)=VPSDFN
"RTN","VPSCSQ1",140,0)
 N FDA S FDA(FIL,"+1,",.01)=VPSDFN
"RTN","VPSCSQ1",141,0)
 N FDAERR D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSCSQ1",142,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSCSQ1",143,0)
 ;
"RTN","VPSCSQ1",144,0)
ADDQST(VPSDFN,SURVEY) ;add  (QUESTIONNAIRE IDENTIFIER level)
"RTN","VPSCSQ1",145,0)
 N FIL S FIL=853.805
"RTN","VPSCSQ1",146,0)
 N IENS S IENS(1)=SURVEY
"RTN","VPSCSQ1",147,0)
 N SUBS S SUBS="+1,"_VPSDFN_","
"RTN","VPSCSQ1",148,0)
 N FDA,FDAERR
"RTN","VPSCSQ1",149,0)
 N FLD S FLD=0
"RTN","VPSCSQ1",150,0)
 ;
"RTN","VPSCSQ1",151,0)
 S FDA(FIL,SUBS,.01)=SURVEY
"RTN","VPSCSQ1",152,0)
 ;
"RTN","VPSCSQ1",153,0)
 ; -- store the survey data
"RTN","VPSCSQ1",154,0)
 D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSCSQ1",155,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSCSQ1",156,0)
ADDSRVY(VPSDFN,TID,TRNDT,SURVEY) ;add survey (questionnaire level)
"RTN","VPSCSQ1",157,0)
 N FIL S FIL=853.81
"RTN","VPSCSQ1",158,0)
 N IENS S IENS(1)=TRNDT
"RTN","VPSCSQ1",159,0)
 N SUBS S SUBS="+1,"_TID_","_VPSDFN_","
"RTN","VPSCSQ1",160,0)
 N FDA,FDAERR
"RTN","VPSCSQ1",161,0)
 N FLD S FLD=0
"RTN","VPSCSQ1",162,0)
 ;
"RTN","VPSCSQ1",163,0)
 ; -- fill in FDA with the survey data
"RTN","VPSCSQ1",164,0)
 S FDA(853.81,SUBS,.01)=TRNDT
"RTN","VPSCSQ1",165,0)
 ;S FDA(853.81,SUBS,.02)=.5
"RTN","VPSCSQ1",166,0)
 ;
"RTN","VPSCSQ1",167,0)
 ; -- store the survey data
"RTN","VPSCSQ1",168,0)
 D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSCSQ1",169,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSCSQ1",170,0)
ADDRES(VPSDFN,TID,TRNDT,DTT,DTLM,CS,PS,IA) ;add questionnaire response
"RTN","VPSCSQ1",171,0)
 N FIL S FIL=853.811
"RTN","VPSCSQ1",172,0)
 N IENS S IENS(1)=1
"RTN","VPSCSQ1",173,0)
 N SUBS S SUBS="+1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSCSQ1",174,0)
 N FDA,FDAERR
"RTN","VPSCSQ1",175,0)
 ; -- fill in FDA with the survey data
"RTN","VPSCSQ1",176,0)
 S FDA(853.811,SUBS,.01)="CONVERTED"
"RTN","VPSCSQ1",177,0)
 S FDA(853.811,SUBS,.02)=DTT
"RTN","VPSCSQ1",178,0)
 S FDA(853.811,SUBS,.03)=DTLM
"RTN","VPSCSQ1",179,0)
 S FDA(853.811,SUBS,.04)=CS
"RTN","VPSCSQ1",180,0)
 S FDA(853.811,SUBS,.05)=PS
"RTN","VPSCSQ1",181,0)
 S FDA(853.811,SUBS,.06)=IA
"RTN","VPSCSQ1",182,0)
 D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSCSQ1",183,0)
 ;
"RTN","VPSCSQ1",184,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSCSQ1",185,0)
 ;
"RTN","VPSCSQ1",186,0)
ADDQUEST(VPSDFN,TID,TRNDT,DTLM,QNUM,QCV,QUEST,ANS) ;add question
"RTN","VPSCSQ1",187,0)
 N FIL S FIL=853.8113
"RTN","VPSCSQ1",188,0)
 N SUBS,SUBWP
"RTN","VPSCSQ1",189,0)
 N IENS
"RTN","VPSCSQ1",190,0)
 N FDA,FDAERR
"RTN","VPSCSQ1",191,0)
 N WPERR,I,MULT
"RTN","VPSCSQ1",192,0)
 ; -- fill in FDA with the survey data
"RTN","VPSCSQ1",193,0)
 S I=0
"RTN","VPSCSQ1",194,0)
 F  S I=$O(QNUM(I)) Q:'I  D
"RTN","VPSCSQ1",195,0)
 . S IENS(1)=I
"RTN","VPSCSQ1",196,0)
 . S SUBS="+1,"_1_","_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSCSQ1",197,0)
 . S FDA(853.8113,SUBS,.01)=QNUM(I)
"RTN","VPSCSQ1",198,0)
 . S FDA(853.8113,SUBS,1)=QCV(I)
"RTN","VPSCSQ1",199,0)
 . D UPDATE^DIE("E","FDA","IENS","FDAERR")
"RTN","VPSCSQ1",200,0)
 . K ^TMP("CSQ CON",$J)
"RTN","VPSCSQ1",201,0)
 . S ^TMP("CSQ CON",$J,1,0)=QUEST(I)
"RTN","VPSCSQ1",202,0)
 . S SUBWP=I_",1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSCSQ1",203,0)
 . K WPERR
"RTN","VPSCSQ1",204,0)
 . D WP^DIE(FIL,SUBWP,2,"","^TMP(""CSQ CON"",$J)","WPERR")
"RTN","VPSCSQ1",205,0)
 . S MULT=0
"RTN","VPSCSQ1",206,0)
 . I ANS(I)["~"!(ANS(I)["^") S MULT=1
"RTN","VPSCSQ1",207,0)
 . I MULT=0 D ADDANS(SUBWP,I,VPSDFN,TID,TRNDT,.ANS,DTLM)
"RTN","VPSCSQ1",208,0)
 . I MULT=1 D
"RTN","VPSCSQ1",209,0)
 .. N ARR,J
"RTN","VPSCSQ1",210,0)
 .. I ANS(I)["~" F J=1:1:$L(ANS(I),"~") S ARR(I)=$P(ANS(I),"~",J) D ADDANS(SUBWP,I,VPSDFN,TID,TRNDT,.ARR,DTLM)
"RTN","VPSCSQ1",211,0)
 .. I ANS(I)["^" F J=1:1:$L(ANS(I),"^") S ARR(I)=$P(ANS(I),"^",J) D ADDANS(SUBWP,I,VPSDFN,TID,TRNDT,.ARR,DTLM)
"RTN","VPSCSQ1",212,0)
 ;
"RTN","VPSCSQ1",213,0)
 ;
"RTN","VPSCSQ1",214,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSCSQ1",215,0)
 ;
"RTN","VPSCSQ1",216,0)
ADDANS(SUBS,I,VPSDFN,TID,TRNDT,ANS,DTLM) ;add ANSWER
"RTN","VPSCSQ1",217,0)
 N FIL S FIL=853.81133
"RTN","VPSCSQ1",218,0)
 N IENS
"RTN","VPSCSQ1",219,0)
 N FDA,FDAERR
"RTN","VPSCSQ1",220,0)
 N SUBWP,WPERR
"RTN","VPSCSQ1",221,0)
 ; -- fill in FDA with the survey data
"RTN","VPSCSQ1",222,0)
 ;
"RTN","VPSCSQ1",223,0)
 Q:'$D(ANS(I))
"RTN","VPSCSQ1",224,0)
 S IENS(1)=I
"RTN","VPSCSQ1",225,0)
 S SUBS="+1,"_SUBS
"RTN","VPSCSQ1",226,0)
 S FDA(853.81133,SUBS,.01)="ANSWER "_I
"RTN","VPSCSQ1",227,0)
 S FDA(853.81133,SUBS,.02)=2
"RTN","VPSCSQ1",228,0)
 S FDA(853.81133,SUBS,.03)=1
"RTN","VPSCSQ1",229,0)
 S FDA(853.81133,SUBS,1)=DTLM
"RTN","VPSCSQ1",230,0)
 S FDA(853.81133,SUBS,3)="CONVERTED"
"RTN","VPSCSQ1",231,0)
 S FDA(853.81133,SUBS,4)="CONVERTED"
"RTN","VPSCSQ1",232,0)
 S FDA(853.81133,SUBS,5)="CONVERTED"
"RTN","VPSCSQ1",233,0)
 D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSCSQ1",234,0)
 K ^TMP("CSQ CON",$J)
"RTN","VPSCSQ1",235,0)
 S ^TMP("CSQ CON",$J,1,0)=ANS(I)
"RTN","VPSCSQ1",236,0)
 S SUBWP=I_","_I_",1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSCSQ1",237,0)
 K WPERR
"RTN","VPSCSQ1",238,0)
 D WP^DIE(FIL,SUBWP,6,"","^TMP(""CSQ CON"",$J)","WPERR")
"RTN","VPSCSQ1",239,0)
 ;
"RTN","VPSCSQ1",240,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSCSQ1",241,0)
 ;
"RTN","VPSCSQ1",242,0)
ERROR(FDAERR) ;return error text
"RTN","VPSCSQ1",243,0)
 QUIT:'$D(FDAERR) ""
"RTN","VPSCSQ1",244,0)
 N ERRNUM S ERRNUM=0
"RTN","VPSCSQ1",245,0)
 S ERRNUM=$O(FDAERR("DIERR",ERRNUM))
"RTN","VPSCSQ1",246,0)
 N ERRTXT S ERRTXT=""
"RTN","VPSCSQ1",247,0)
 S:ERRNUM ERRTXT=FDAERR("DIERR",ERRNUM,"TEXT",1)
"RTN","VPSCSQ1",248,0)
 QUIT ERRTXT
"RTN","VPSCSQ1",249,0)
 ;
"RTN","VPSCSQ1",250,0)
LOCK(VPSDFN) ;Lock this process
"RTN","VPSCSQ1",251,0)
 L +^TMP("VPSSRVY1",VPSDFN):3 E  QUIT "Another process updating survey for this patient"
"RTN","VPSCSQ1",252,0)
 QUIT ""
"RTN","VPSCSQ1",253,0)
 ;
"RTN","VPSCSQ1",254,0)
UNLOCK(VPSDFN) ;Unlock this process
"RTN","VPSCSQ1",255,0)
 L -^TMP("VPSSRVY1",VPSDFN)
"RTN","VPSCSQ1",256,0)
 QUIT
"RTN","VPSRPC1")
0^7^B29854527
"RTN","VPSRPC1",1,0)
VPSRPC1  ;BPOIFO/EL,WOIFO/BT - Patient Demographic and Clinic RPC;08/14/14 09:28
"RTN","VPSRPC1",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**1,2,4,14**;Aug 8, 2014;Build 26
"RTN","VPSRPC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC1",4,0)
 ;
"RTN","VPSRPC1",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC1",6,0)
 ; ------------------------
"RTN","VPSRPC1",7,0)
 ; #10035 - ^DPT( references      (Supported)
"RTN","VPSRPC1",8,0)
 ; #10040 - ^SC( references       (Supported)
"RTN","VPSRPC1",9,0)
 ; #2052  - DID call              (Supported)
"RTN","VPSRPC1",10,0)
 ; #2056  - DIQ call              (Supported)
"RTN","VPSRPC1",11,0)
 ; #2701  - MPIF001 call          (Supported)
"RTN","VPSRPC1",12,0)
 ; #10104 - XLFSTR call           (Supported)
"RTN","VPSRPC1",13,0)
 ; #5888  - RPCVIC^DPTLK          (Controlled Sub)
"RTN","VPSRPC1",14,0)
 ; #10061 - VADPT call            (Supported)
"RTN","VPSRPC1",15,0)
 QUIT
"RTN","VPSRPC1",16,0)
 ;
"RTN","VPSRPC1",17,0)
GETCLN(VPSARR,CLNAM) ; RPC: VPS GET CLINIC - CLINIC NAME ENTRY
"RTN","VPSRPC1",18,0)
 ; Called by Vetlink Kiosk system.     
"RTN","VPSRPC1",19,0)
 ; The RPC will accept 2 parameters.  The first parameter represents the 
"RTN","VPSRPC1",20,0)
 ; return value as required by RPC Broker, and the 2nd parameter is
"RTN","VPSRPC1",21,0)
 ; single input value representing the name of the clinic (full or partial 
"RTN","VPSRPC1",22,0)
 ; name).  The output produced will be an array that returns all the 
"RTN","VPSRPC1",23,0)
 ; possible matches for the clinic (one to many clinics).  Values returned 
"RTN","VPSRPC1",24,0)
 ; will be the name of the clinic and the ien of the clinic.
"RTN","VPSRPC1",25,0)
 ;
"RTN","VPSRPC1",26,0)
 ; OUTPUT
"RTN","VPSRPC1",27,0)
 ;   VPSARR - passed in by reference; return array of clinics that **contains** input string (CLNAM)
"RTN","VPSRPC1",28,0)
 ; INPUT
"RTN","VPSRPC1",29,0)
 ;   CLNAM  - partial or full name of clinic; 
"RTN","VPSRPC1",30,0)
 ;
"RTN","VPSRPC1",31,0)
 K VPSARR
"RTN","VPSRPC1",32,0)
 I $G(CLNAM)="" S VPSARR(1)="-1^CLINIC NAME NOT SENT" QUIT
"RTN","VPSRPC1",33,0)
 ;
"RTN","VPSRPC1",34,0)
 N VPSCLN,VPSIEN,LOCATION
"RTN","VPSRPC1",35,0)
 N VPSUPNAM S VPSUPNAM=$$UP^XLFSTR(CLNAM)
"RTN","VPSRPC1",36,0)
 N VPSCNAM S VPSCNAM=""
"RTN","VPSRPC1",37,0)
 N VPSFL S VPSFL=44
"RTN","VPSRPC1",38,0)
 ;
"RTN","VPSRPC1",39,0)
 F  S VPSCNAM=$O(^SC("B",VPSCNAM)) QUIT:$G(VPSCNAM)=""  I VPSCNAM[VPSUPNAM D
"RTN","VPSRPC1",40,0)
 . S VPSCLN=""
"RTN","VPSRPC1",41,0)
 . F   S VPSCLN=$O(^SC("B",VPSCNAM,VPSCLN)) QUIT:$G(VPSCLN)=""  D
"RTN","VPSRPC1",42,0)
 . . S VPSIEN=VPSCLN
"RTN","VPSRPC1",43,0)
 . . D SET(.VPSARR,VPSFL,VPSIEN,".001",VPSCLN,"CLINIC NUMBER") ;Clinic IEN
"RTN","VPSRPC1",44,0)
 . . D SET(.VPSARR,VPSFL,VPSIEN,".01",VPSCNAM) ;Clinic Name
"RTN","VPSRPC1",45,0)
 . . S LOCATION=$$GET1^DIQ(VPSFL,VPSCLN_",",10,"E") ;Physical Location
"RTN","VPSRPC1",46,0)
 . . D SET(.VPSARR,VPSFL,VPSIEN,10,LOCATION)
"RTN","VPSRPC1",47,0)
 ;
"RTN","VPSRPC1",48,0)
 I '$D(VPSARR) S VPSARR(1)="-1^CLINIC COULD NOT BE FOUND." QUIT
"RTN","VPSRPC1",49,0)
 ;
"RTN","VPSRPC1",50,0)
 QUIT
"RTN","VPSRPC1",51,0)
 ;
"RTN","VPSRPC1",52,0)
GETDATA(VPSARR,SSN) ; RPC: VPS GET PATIENT DEMOGRAPHIC
"RTN","VPSRPC1",53,0)
 ; This RPC is called  by the Vetlink Kiosk (point of service) system.  
"RTN","VPSRPC1",54,0)
 ; Given Patient SSN, this RPC returns the patient demographics,insurance,and up-coming appointments, etc.
"RTN","VPSRPC1",55,0)
 ;
"RTN","VPSRPC1",56,0)
 ; INPUT
"RTN","VPSRPC1",57,0)
 ;   SSN    - patient SSN 
"RTN","VPSRPC1",58,0)
 ; OUTPUT
"RTN","VPSRPC1",59,0)
 ;   VPSARR - passed in by reference; return array of patient demographics
"RTN","VPSRPC1",60,0)
 ;
"RTN","VPSRPC1",61,0)
 D GETDATA2(.VPSARR,$G(SSN),"SSN")
"RTN","VPSRPC1",62,0)
 QUIT
"RTN","VPSRPC1",63,0)
 ;
"RTN","VPSRPC1",64,0)
GETDATA2(VPSARR,VPSNUM,VPSTYP) ; RPC: VPS GET2 PATIENT DEMOGRAPHIC
"RTN","VPSRPC1",65,0)
 ; This RPC is called  by the Vetlink Kiosk (point of service) system.  
"RTN","VPSRPC1",66,0)
 ; Given Patient SSN or DFN or ICN or VIC/CAC, this RPC returns the patient demographics,insurance,and up-coming appointments, etc.
"RTN","VPSRPC1",67,0)
 ;
"RTN","VPSRPC1",68,0)
 ; OUTPUT
"RTN","VPSRPC1",69,0)
 ;   VPSARR  - passed in by reference; return array of patient demographics,appts
"RTN","VPSRPC1",70,0)
 ; INPUT
"RTN","VPSRPC1",71,0)
 ;   VPSNUM  - Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",72,0)
 ;   VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",73,0)
 ;
"RTN","VPSRPC1",74,0)
 ; Return all categories
"RTN","VPSRPC1",75,0)
 N CATEGORY,ICAT ;F ICAT=1:1:6 S CATEGORY(ICAT)=ICAT
"RTN","VPSRPC1",76,0)
 N ANS
"RTN","VPSRPC1",77,0)
 D DT^DILF("E","T-60",.ANS)
"RTN","VPSRPC1",78,0)
 S CATEGORY(1)=1_";"_ANS_":"
"RTN","VPSRPC1",79,0)
 S CATEGORY(2)=6
"RTN","VPSRPC1",80,0)
 D GETDATA3(.VPSARR,$G(VPSNUM),$G(VPSTYP),.CATEGORY) ; RPC: VPS GET2 PATIENT DEMOGRAPHIC
"RTN","VPSRPC1",81,0)
 QUIT
"RTN","VPSRPC1",82,0)
 ;
"RTN","VPSRPC1",83,0)
GETDATA3(VPSARR,VPSNUM,VPSTYP,VPSCAT) ; RPC: VPS ENHANCED GET PATIENT DEMOGRAPHIC
"RTN","VPSRPC1",84,0)
 ; This RPC is called  by the Vetlink Kiosk (point of service) system.  
"RTN","VPSRPC1",85,0)
 ; Given Patient SSN or DFN or ICN or VIC/CAC, this RPC returns the patient demographics,insurance,and up-coming appointments, etc
"RTN","VPSRPC1",86,0)
 ; for selected categories
"RTN","VPSRPC1",87,0)
 ;
"RTN","VPSRPC1",88,0)
 ; OUTPUT
"RTN","VPSRPC1",89,0)
 ;   VPSARR  - passed in by reference; return array of patient demographics,appts
"RTN","VPSRPC1",90,0)
 ; INPUT
"RTN","VPSRPC1",91,0)
 ;   VPSNUM  - Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",92,0)
 ;   VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",93,0)
 ;   VPSCAT  - List of Category to print (REQUIRED)
"RTN","VPSRPC1",94,0)
 ;             VPSCAT(1..N)=CATEGORY;FROMDATE:THROUGHDATE
"RTN","VPSRPC1",95,0)
 ;             Example input parameter : 
"RTN","VPSRPC1",96,0)
 ;                 VPSCAT(1)=6                 - Patient demographics
"RTN","VPSRPC1",97,0)
 ;                 VPSCAT(2)=1;3140101:3141231 - Appointments start from 1/1/2014 through 12/31/2014
"RTN","VPSRPC1",98,0)
 ;                 VPSCAT(3)=2;3140601:3140630 - Lab Orders start from 6/1/2014 through 6/30/2014
"RTN","VPSRPC1",99,0)
 ;             Valid Category:
"RTN","VPSRPC1",100,0)
 ;                 1 - Appointment (With Date Range option)
"RTN","VPSRPC1",101,0)
 ;                 2 - Lab Orders (With Date Range option)
"RTN","VPSRPC1",102,0)
 ;                 3 - Consults
"RTN","VPSRPC1",103,0)
 ;                 4 - Radiology (With Date Range option)
"RTN","VPSRPC1",104,0)
 ;                 5 - Problem
"RTN","VPSRPC1",105,0)
 ;                 6 - Patient Characteristics
"RTN","VPSRPC1",106,0)
 ;                   - Patient Current Inpatient Status
"RTN","VPSRPC1",107,0)
 ;                   - Patient Ward Location
"RTN","VPSRPC1",108,0)
 ;                   - Patient Bed Assignment
"RTN","VPSRPC1",109,0)
 ;                   - Facility Directory Preference
"RTN","VPSRPC1",110,0)
 ;                 7 - Patient Additional patient demographic data
"RTN","VPSRPC1",111,0)
 ;                 8 - Patient Clinical (Health Factor)
"RTN","VPSRPC1",112,0)
 ;
"RTN","VPSRPC1",113,0)
 ;
"RTN","VPSRPC1",114,0)
 K VPSARR
"RTN","VPSRPC1",115,0)
 S VPSARR(1)=$$VALIDATE($G(VPSTYP),$G(VPSNUM))
"RTN","VPSRPC1",116,0)
 QUIT:+VPSARR(1)=-1
"RTN","VPSRPC1",117,0)
 ;
"RTN","VPSRPC1",118,0)
 N DFN S DFN=VPSARR(1)
"RTN","VPSRPC1",119,0)
 K VPSARR
"RTN","VPSRPC1",120,0)
 N CAT,DTRANGE,SEQ S SEQ=0
"RTN","VPSRPC1",121,0)
 ;
"RTN","VPSRPC1",122,0)
 F  S SEQ=$O(VPSCAT(SEQ)) QUIT:'SEQ  D
"RTN","VPSRPC1",123,0)
 . S CAT=$P(VPSCAT(SEQ),";")
"RTN","VPSRPC1",124,0)
 . S DTRANGE=$P(VPSCAT(SEQ),";",2)
"RTN","VPSRPC1",125,0)
 . I CAT=1,$P(DTRANGE,":")="" D
"RTN","VPSRPC1",126,0)
 .. N ANS
"RTN","VPSRPC1",127,0)
 .. D DT^DILF("E","T-60",.ANS)
"RTN","VPSRPC1",128,0)
 .. S DTRANGE=ANS_":"_$P(DTRANGE,":",2)
"RTN","VPSRPC1",129,0)
 . I CAT=1 D GETAPPT^VPSRPC11(.VPSARR,DFN,DTRANGE) ;Appointments
"RTN","VPSRPC1",130,0)
 . I CAT=2 D GETLAB^VPSRPC12(.VPSARR,DFN,DTRANGE) ;Lab Orders
"RTN","VPSRPC1",131,0)
 . I CAT=3 D GETCNSLT^VPSRPC13(.VPSARR,DFN,DTRANGE) ;Consult
"RTN","VPSRPC1",132,0)
 . I CAT=4 D GETRAD^VPSRPC14(.VPSARR,DFN,DTRANGE) ;Radiology
"RTN","VPSRPC1",133,0)
 . I CAT=5 D GETPRBLM^VPSRPC15(.VPSARR,DFN) ;Problem
"RTN","VPSRPC1",134,0)
 . I CAT=6 D GETDEM^VPSRPC16(.VPSARR,DFN) ;Demographics
"RTN","VPSRPC1",135,0)
 . I CAT=7 D GETADEM^VPSRPC15(.VPSARR,DFN) ; Additional demographic data
"RTN","VPSRPC1",136,0)
 . I CAT=8 D GETHF^VPSRPC15(.VPSARR,DFN) ; Patient Health Factor
"RTN","VPSRPC1",137,0)
 QUIT
"RTN","VPSRPC1",138,0)
 ;
"RTN","VPSRPC1",139,0)
VALIDATE(VPSTYP,VPSNUM) ;validate patient-id type and patient id value
"RTN","VPSRPC1",140,0)
 ; INPUT
"RTN","VPSRPC1",141,0)
 ;   VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",142,0)
 ;   VPSNUM  - Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",143,0)
 ; RETURN
"RTN","VPSRPC1",144,0)
 ;   DFN if patient-type/id pair is valid otherwise return -1^Errormessage 
"RTN","VPSRPC1",145,0)
 ;
"RTN","VPSRPC1",146,0)
 N CM S CM=","
"RTN","VPSRPC1",147,0)
 ;
"RTN","VPSRPC1",148,0)
 QUIT:$G(VPSTYP)="" "-1^TYPE IS REQUIRED (VALID TYPE: SSN, DFN, ICN OR VIC/CAC)"
"RTN","VPSRPC1",149,0)
 QUIT:'$F(",SSN,DFN,ICN,VIC/CAC,",CM_VPSTYP_CM) "-1^INVALID TYPE (VALID TYPE: SSN, DFN, ICN OR VIC/CAC)"
"RTN","VPSRPC1",150,0)
 QUIT:$G(VPSNUM)="" "-1^"_VPSTYP_" IS REQUIRED"
"RTN","VPSRPC1",151,0)
 ; 
"RTN","VPSRPC1",152,0)
 N DFN S DFN=0
"RTN","VPSRPC1",153,0)
 ;
"RTN","VPSRPC1",154,0)
 I VPSTYP="SSN" D
"RTN","VPSRPC1",155,0)
 . N SSN S SSN=$TR(VPSNUM,"- ")
"RTN","VPSRPC1",156,0)
 . I SSN'?1.N S DFN="-1"_U_"SSN SHOULD BE NUMERIC: "_VPSNUM QUIT
"RTN","VPSRPC1",157,0)
 . S DFN=$O(^DPT("SSN",SSN,0))
"RTN","VPSRPC1",158,0)
 . I +DFN'>0 S DFN="-1"_U_"NO PATIENT FOUND WITH SSN: "_VPSNUM
"RTN","VPSRPC1",159,0)
 QUIT:DFN DFN
"RTN","VPSRPC1",160,0)
 ;
"RTN","VPSRPC1",161,0)
 I VPSTYP="DFN" D
"RTN","VPSRPC1",162,0)
 . S DFN=VPSNUM
"RTN","VPSRPC1",163,0)
 . I '$D(^DPT(DFN)) S DFN="-1"_U_"NO PATIENT FOUND WITH DFN: "_DFN
"RTN","VPSRPC1",164,0)
 QUIT:DFN DFN
"RTN","VPSRPC1",165,0)
 ;
"RTN","VPSRPC1",166,0)
 I VPSTYP="VIC/CAC" D
"RTN","VPSRPC1",167,0)
 . D RPCVIC^DPTLK(.DFN,VPSNUM) ; get DFN given VIC/CAC number - IA 5888
"RTN","VPSRPC1",168,0)
 . S:DFN=-1 DFN="-1^INVALID VIC/CAC NUMBER "_VPSNUM
"RTN","VPSRPC1",169,0)
 QUIT:DFN DFN
"RTN","VPSRPC1",170,0)
 ;
"RTN","VPSRPC1",171,0)
 I VPSTYP="ICN" D
"RTN","VPSRPC1",172,0)
 . S DFN=$$GETDFN^MPIF001(VPSNUM) ; get DFN given ICN in the Patient file  - IA 2701
"RTN","VPSRPC1",173,0)
 ;
"RTN","VPSRPC1",174,0)
 QUIT DFN
"RTN","VPSRPC1",175,0)
 ;
"RTN","VPSRPC1",176,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS,VPSCAT) ;Set line item to output array
"RTN","VPSRPC1",177,0)
 ; OUTPUT
"RTN","VPSRPC1",178,0)
 ;   VPSARR - passed in by reference; This is the Array of clinics contains the line item
"RTN","VPSRPC1",179,0)
 ; INPUT
"RTN","VPSRPC1",180,0)
 ;   VPSFL  - File Number
"RTN","VPSRPC1",181,0)
 ;   VPSIEN - File IEN
"RTN","VPSRPC1",182,0)
 ;   VPSFLD - File Field Number
"RTN","VPSRPC1",183,0)
 ;   VPSDA  - Field Value
"RTN","VPSRPC1",184,0)
 ;   VPSDS  - (optional) User defined Field Name - default is the Fileman fieldname
"RTN","VPSRPC1",185,0)
 ;   VPSCAT - Category: 1 - Appointment, 2 - Lab Orders, 3 - Consults, 4 - Radiology, 5 - Problem, 6 - Patient demographics
"RTN","VPSRPC1",186,0)
 ;
"RTN","VPSRPC1",187,0)
 N CNT S CNT=$O(VPSARR(""),-1)+1
"RTN","VPSRPC1",188,0)
 I $G(VPSDS)="",$G(VPSFL),$G(VPSFLD) N VPSOUT D FIELD^DID(VPSFL,VPSFLD,"","LABEL","VPSOUT") S VPSDS=VPSOUT("LABEL")
"RTN","VPSRPC1",189,0)
 S VPSARR(CNT)=$G(VPSFL)_U_$G(VPSIEN)_U_$G(VPSFLD)_U_$G(VPSDA)_U_$G(VPSDS)_U_$G(VPSCAT)
"RTN","VPSRPC1",190,0)
 QUIT
"RTN","VPSRPC13")
0^10^B13640535
"RTN","VPSRPC13",1,0)
VPSRPC13  ;WOIFO/BT - Patient Demographic RPC - Consult/Procedure;08/14/14 13:07
"RTN","VPSRPC13",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4,14**;Aug 14, 2014;Build 26
"RTN","VPSRPC13",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC13",4,0)
 ;
"RTN","VPSRPC13",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC13",6,0)
 ; ------------------------
"RTN","VPSRPC13",7,0)
 ; #2740 - Call to OER^GMRCSLM1      (Controlled Subs)
"RTN","VPSRPC13",8,0)
 ; #1252 - Call to $$OUTPTPR^SDUTL3  (Supported)
"RTN","VPSRPC13",9,0)
 ; #1252 - Call to $$OUTPTTM^SDUTL3  (Supported)
"RTN","VPSRPC13",10,0)
 ; #6116 - Read-Only access to File #123, Fields .01,.03,3,5,8,10,13,17 (Controlled Subs)
"RTN","VPSRPC13",11,0)
 QUIT
"RTN","VPSRPC13",12,0)
 ;
"RTN","VPSRPC13",13,0)
GETCNSLT(VPSARR,DFN,PARAMS) ;given DFN, returns the patient lab
"RTN","VPSRPC13",14,0)
 ; OUTPUT
"RTN","VPSRPC13",15,0)
 ;   VPSARR   - passed in by reference; this is the output array to store Consult
"RTN","VPSRPC13",16,0)
 ; INPUT
"RTN","VPSRPC13",17,0)
 ;   DFN      - patient DFN (This value must be validated before calling this procedure)
"RTN","VPSRPC13",18,0)
 ;   PARAMS   - optional date range
"RTN","VPSRPC13",19,0)
 ;
"RTN","VPSRPC13",20,0)
 N ORSERV S ORSERV="" ;Service
"RTN","VPSRPC13",21,0)
 S PARAMS=$G(PARAMS)
"RTN","VPSRPC13",22,0)
 N ORSDT S ORSDT=$P(PARAMS,":") ;Beg Date for Search
"RTN","VPSRPC13",23,0)
 N OREDT S OREDT=$P(PARAMS,":",2) ;End Date for Search
"RTN","VPSRPC13",24,0)
 N ORSTATUS S ORSTATUS="" ;ALL STATI
"RTN","VPSRPC13",25,0)
 N GMRCOER S GMRCOER=2 ;0 if request is from CONSULTS, 1 if request is for CPRS List Manager, 2 if for CPRS GUI
"RTN","VPSRPC13",26,0)
 ;
"RTN","VPSRPC13",27,0)
 K ^TMP("GMRCR",$J)
"RTN","VPSRPC13",28,0)
 D OER^GMRCSLM1(DFN,ORSERV,ORSDT,OREDT,ORSTATUS,GMRCOER) ;Return list of consult/procedures
"RTN","VPSRPC13",29,0)
 ;
"RTN","VPSRPC13",30,0)
 N CSLTIEN,VAL,DATA
"RTN","VPSRPC13",31,0)
 N SEQ S SEQ=0
"RTN","VPSRPC13",32,0)
 N EXIST S EXIST=0
"RTN","VPSRPC13",33,0)
 ;
"RTN","VPSRPC13",34,0)
 F  S SEQ=$O(^TMP("GMRCR",$J,"CS",SEQ)) QUIT:'SEQ  D
"RTN","VPSRPC13",35,0)
 . S DATA=$G(^TMP("GMRCR",$J,"CS",SEQ,0))
"RTN","VPSRPC13",36,0)
 . QUIT:$F(DATA,"PATIENT DOES NOT HAVE ANY CONSULTS/REQUESTS")
"RTN","VPSRPC13",37,0)
 . S EXIST=1
"RTN","VPSRPC13",38,0)
 . S CSLTIEN=$P(DATA,U) D SET(.VPSARR,123,DFN_";"_CSLTIEN,.001,CSLTIEN,"CONSULT IEN") ; CONSULT IEN
"RTN","VPSRPC13",39,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",.01,"I") D SET(.VPSARR,123,DFN_";"_CSLTIEN,.01,VAL) ; FILE ENTRY DATE
"RTN","VPSRPC13",40,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",8,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,8,VAL) ; CPRS STATUS
"RTN","VPSRPC13",41,0)
 . S VAL=$P(DATA,U,4) D SET(.VPSARR,123.5,DFN_";"_CSLTIEN,.01,VAL,"CONSULT NAME") ; CONSULT NAME
"RTN","VPSRPC13",42,0)
 . S VAL=$$OUTPTPR^SDUTL3(DFN) D SET(.VPSARR,200,DFN,.01,$P(VAL,U,2),"PC PROVIDER") ; PC PROVIDER
"RTN","VPSRPC13",43,0)
 . S VAL=$$OUTPTTM^SDUTL3(DFN) D SET(.VPSARR,404.51,DFN,.01,$P(VAL,U,2),"PC TEAM") ; PC TEAM NAME
"RTN","VPSRPC13",44,0)
 . S VAL=$P(DATA,U,5) D SET(.VPSARR,123,DFN_";"_CSLTIEN,4,VAL,"PROCEDURE") ; CONSULT/PROC/REQUEST TYPE
"RTN","VPSRPC13",45,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",.03,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,.03,VAL) ; OE/RR FILE NUMBER
"RTN","VPSRPC13",46,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",13,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,13,VAL,"REQUEST TYPE") ; REQUEST TYPE
"RTN","VPSRPC13",47,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",10,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,10,VAL) ; SENDING PROVIDER/REQUESTED PC PROVIDER
"RTN","VPSRPC13",48,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",17,"I") D SET(.VPSARR,123,DFN_";"_CSLTIEN,17,VAL) ; EARLIEST APPT.DATE/SCHEDULED PC APP DATE
"RTN","VPSRPC13",49,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",3,"I") D SET(.VPSARR,123,DFN_";"_CSLTIEN,3,VAL) ; DATE OF REQUEST
"RTN","VPSRPC13",50,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",5,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,5,VAL) ; URGENCY
"RTN","VPSRPC13",51,0)
 ;
"RTN","VPSRPC13",52,0)
 I 'EXIST D SET(.VPSARR,"E",DFN,"","NO CONSULT DETAIL RECORDS FOUND FOR PATIENT","CONSULT NOT FOUND")
"RTN","VPSRPC13",53,0)
 K ^TMP("GMRCR",$J)
"RTN","VPSRPC13",54,0)
 QUIT
"RTN","VPSRPC13",55,0)
 ;
"RTN","VPSRPC13",56,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC13",57,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),3) ;Set line item to output array
"RTN","VPSRPC13",58,0)
 QUIT
"RTN","VPSRPC15")
0^8^B13343975
"RTN","VPSRPC15",1,0)
VPSRPC15  ;BPOIFO/KG - Patient Problems;07/31/14 13:07
"RTN","VPSRPC15",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4,14**;Jul 31, 2014;Build 26
"RTN","VPSRPC15",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC15",4,0)
 ;
"RTN","VPSRPC15",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC15",6,0)
 ; ------------------------
"RTN","VPSRPC15",7,0)
 ; #2741 - DETAIL^GMPLUTL2   (Controlled Sub)
"RTN","VPSRPC15",8,0)
 ; #2741 - LIST^GMPLUTL2     (Controlled Sub)
"RTN","VPSRPC15",9,0)
 ; #2977 - GETFLDS^GMPLEDT3  (Controlled Sub)
"RTN","VPSRPC15",10,0)
 QUIT
"RTN","VPSRPC15",11,0)
 ;
"RTN","VPSRPC15",12,0)
GETPRBLM(VPSARR,DFN) ;given DFN, returns the patient problems
"RTN","VPSRPC15",13,0)
 N ICDIEN,PRBIEN,PRBIENS,PRBINFO,GMPL
"RTN","VPSRPC15",14,0)
 ;
"RTN","VPSRPC15",15,0)
 ;--- Load a list of active problems
"RTN","VPSRPC15",16,0)
 N PLST D LIST^GMPLUTL2(.PLST,DFN,"A",0) ; Returns list of Prob for Pt.
"RTN","VPSRPC15",17,0)
 ;
"RTN","VPSRPC15",18,0)
 ;--- Browse through the problems
"RTN","VPSRPC15",19,0)
 N CNT S CNT=0
"RTN","VPSRPC15",20,0)
 N FILE S FILE=9000011
"RTN","VPSRPC15",21,0)
 N EXIST S EXIST=0
"RTN","VPSRPC15",22,0)
 ;
"RTN","VPSRPC15",23,0)
 F  S CNT=$O(PLST(CNT)) Q:CNT=""  D
"RTN","VPSRPC15",24,0)
 . S PRBIEN=$P(PLST(CNT),U)
"RTN","VPSRPC15",25,0)
 . Q:PRBIEN'>0
"RTN","VPSRPC15",26,0)
 . S EXIST=1
"RTN","VPSRPC15",27,0)
 . K GMPL D DETAIL^GMPLUTL2(PRBIEN,.GMPL)
"RTN","VPSRPC15",28,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.01,$G(GMPL("DIAGNOSIS")),"DIAGNOSIS")
"RTN","VPSRPC15",29,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.03,$G(GMPL("MODIFIED")),"DATE LAST MODIFIED")
"RTN","VPSRPC15",30,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.05,$G(GMPL("NARRATIVE")),"PROVIDER NARRATIVE")
"RTN","VPSRPC15",31,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.06,$P($G(GMPL("FACILITY")),U,2),"FACILITY")
"RTN","VPSRPC15",32,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.08,$P($G(GMPL("ENTERED")),U),"DATE ENTERED")
"RTN","VPSRPC15",33,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.12,$G(GMPL("STATUS")),"STATUS")
"RTN","VPSRPC15",34,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.02,$G(GMPL("CONDITION")),"CONDITION")
"RTN","VPSRPC15",35,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.03,$P($G(GMPL("ENTERED")),U,2),"ENTERED BY")
"RTN","VPSRPC15",36,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.04,$P($G(GMPL("RECORDED")),U,2),"RECORDING PROVIDER")
"RTN","VPSRPC15",37,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.05,$G(GMPL("PROVIDER")),"RESPONSIBLE PROVIDER")
"RTN","VPSRPC15",38,0)
 . D SETEXP(.VPSARR,FILE,DFN,PRBIEN) ;set expression
"RTN","VPSRPC15",39,0)
 ;
"RTN","VPSRPC15",40,0)
 I 'EXIST D SET(.VPSARR,"E",DFN,"","NO PROBLEM RECORDS FOUND FOR PATIENT","PROBLEM NOT FOUND")
"RTN","VPSRPC15",41,0)
 QUIT
"RTN","VPSRPC15",42,0)
 ;
"RTN","VPSRPC15",43,0)
SETEXP(VPSARR,FILE,DFN,PRBIEN) ;set expression
"RTN","VPSRPC15",44,0)
 N GMPVAMC S GMPVAMC=0
"RTN","VPSRPC15",45,0)
 N GMPROV S GMPROV=0
"RTN","VPSRPC15",46,0)
 N GMPORIG,GMPFLD
"RTN","VPSRPC15",47,0)
 D GETFLDS^GMPLEDT3(PRBIEN)
"RTN","VPSRPC15",48,0)
 D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.01,$P($G(GMPFLD(1.01)),U,2),"EXPRESSIONS")
"RTN","VPSRPC15",49,0)
 QUIT
"RTN","VPSRPC15",50,0)
 ;
"RTN","VPSRPC15",51,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC15",52,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),5) ;Set line item to output array
"RTN","VPSRPC15",53,0)
 QUIT
"RTN","VPSRPC15",54,0)
 ;
"RTN","VPSRPC15",55,0)
GETHF(VPSARR,DFN) ;given DFN, returns the patient health factors
"RTN","VPSRPC15",56,0)
 N IEN,DAT
"RTN","VPSRPC15",57,0)
 S IEN=""
"RTN","VPSRPC15",58,0)
 ; Look up health factors for the patient
"RTN","VPSRPC15",59,0)
 F  S IEN=$O(^AUPNVHF("C",DFN,IEN)) Q:'IEN  D
"RTN","VPSRPC15",60,0)
 . S DAT=$$GET1^DIQ(9000010.23,IEN_",",.01) ; retrieve the patient's health factor
"RTN","VPSRPC15",61,0)
 . D SET^VPSRPC1(.VPSARR,9000010.23,DFN_";"_IEN,.01,DAT,"HEALTH FACTOR",9)
"RTN","VPSRPC15",62,0)
 QUIT
"RTN","VPSRPC15",63,0)
 ;
"RTN","VPSRPC15",64,0)
GETADEM(VPSARR,DFN) ;given DFN, returns the patient demographics, insurance, and up-coming appointments.
"RTN","VPSRPC15",65,0)
 ; OUTPUT
"RTN","VPSRPC15",66,0)
 ;   VPSARR - passed in by reference; this is the output array to store patient demographics
"RTN","VPSRPC15",67,0)
 ; INPUT
"RTN","VPSRPC15",68,0)
 ;   DFN    - patient DFN (This value must be validated before calling this procedure)
"RTN","VPSRPC15",69,0)
 ;
"RTN","VPSRPC15",70,0)
 D ENR^VPSRPC16(.VPSARR,DFN) ; Store Patient Enrollment
"RTN","VPSRPC15",71,0)
 D OTH^VPSRPC26(.VPSARR,DFN) ; Store Other information not in KNOWN API
"RTN","VPSRPC15",72,0)
 D POW^VPSRPC26(.VPSARR,DFN) ; Store POW
"RTN","VPSRPC15",73,0)
 D PH^VPSRPC26(.VPSARR,DFN) ; Store Purple Heart
"RTN","VPSRPC15",74,0)
 D MP^VPSRPC26(.VPSARR,DFN) ; Store Missing Person
"RTN","VPSRPC15",75,0)
 D SVC^VPSRPC26(.VPSARR,DFN) ; Store Service Connected and Rated Disabilities
"RTN","VPSRPC15",76,0)
 D CHG^VPSRPC26(.VPSARR,DFN) ; Store Change DT/TM
"RTN","VPSRPC15",77,0)
 D BLPAT^VPSRPC26(.VPSARR,DFN) ; Store Billing Patient
"RTN","VPSRPC15",78,0)
 D PCT^VPSRPC26(.VPSARR,DFN) ; Primary Care Team
"RTN","VPSRPC15",79,0)
 Q
"RTN","VPSRPC16")
0^9^B180097049
"RTN","VPSRPC16",1,0)
VPSRPC16  ;BPOIFO/EL,WOIFO/BT - Patient Demographic (continue);07/31/14 13:07
"RTN","VPSRPC16",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4,14**;Jul 31, 2014;Build 26
"RTN","VPSRPC16",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC16",4,0)
 ;
"RTN","VPSRPC16",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC16",6,0)
 ; ------------------------
"RTN","VPSRPC16",7,0)
 ; #10035 - ^DPT( references       (Supported)
"RTN","VPSRPC16",8,0)
 ; #2462  - ^DGEN( reference       (Controlled Sub) 
"RTN","VPSRPC16",9,0)
 ; #2056  - DIQ call               (Supported)
"RTN","VPSRPC16",10,0)
 ; #3402  - PTSEC^DGSEC4 call      (Supported)
"RTN","VPSRPC16",11,0)
 ; #3403  - NOTICE^DGSEC4 call     (Supported)
"RTN","VPSRPC16",12,0)
 ; #3812  - GET^DGENA              (Controlled Subs)
"RTN","VPSRPC16",13,0)
 ; #2701  - MPIF001 call           (Supported)
"RTN","VPSRPC16",14,0)
 ; #10061 - VADPT call             (Supported)
"RTN","VPSRPC16",15,0)
 ; #10103 - XLFDT call             (Supported)
"RTN","VPSRPC16",16,0)
 ; #6098  - Read-Only access to ^DGMT(408.31,"C",DFN) and FIELD HARDSHIP (Controlled Sub)
"RTN","VPSRPC16",17,0)
 QUIT
"RTN","VPSRPC16",18,0)
 ;
"RTN","VPSRPC16",19,0)
GETDEM(VPSARR,DFN) ;given DFN, returns the patient demographics, insurance, and up-coming appointments.
"RTN","VPSRPC16",20,0)
 ; OUTPUT
"RTN","VPSRPC16",21,0)
 ;   VPSARR - passed in by reference; this is the output array to store patient demographics
"RTN","VPSRPC16",22,0)
 ; INPUT
"RTN","VPSRPC16",23,0)
 ;   DFN    - patient DFN (This value must be validated before calling this procedure)
"RTN","VPSRPC16",24,0)
 ;
"RTN","VPSRPC16",25,0)
 D DEM(.VPSARR,DFN) ; Store Patient Demographic Data
"RTN","VPSRPC16",26,0)
 D SENLOG(.VPSARR,DFN) ; Store Patient Sensitive Record File-38.1
"RTN","VPSRPC16",27,0)
 D ELIG(.VPSARR,DFN) ; Store Patient Eligibily
"RTN","VPSRPC16",28,0)
 ;D ENR(.VPSARR,DFN) ; Store Patient Enrollment
"RTN","VPSRPC16",29,0)
 N X,Y
"RTN","VPSRPC16",30,0)
 S X="",X=$O(^DGEN(27.11,"C",DFN,X),-1) Q:$G(X)=""
"RTN","VPSRPC16",31,0)
 S Y="",Y=$$GET1^DIQ(27.11,X_",",.04,"E")
"RTN","VPSRPC16",32,0)
 I $G(Y)'="" D SET(.VPSARR,27.11,DFN,".04",Y)
"RTN","VPSRPC16",33,0)
 D ADD(.VPSARR,DFN) ; Store Patient Address
"RTN","VPSRPC16",34,0)
 D OAD(.VPSARR,DFN) ; Store Other Patient Variables
"RTN","VPSRPC16",35,0)
 D INP(.VPSARR,DFN) ; Inpatient information
"RTN","VPSRPC16",36,0)
 D IBB^VPSRPC26(.VPSARR,DFN) ; Store Patient Insurance Info
"RTN","VPSRPC16",37,0)
 D REC^VPSRPC26(.VPSARR,DFN) ; Store Patient Record Flag
"RTN","VPSRPC16",38,0)
 D DGS^VPSRPC26(.VPSARR,DFN) ; Store Pre-Registration Audit
"RTN","VPSRPC16",39,0)
 D BAL^VPSRPC26(.VPSARR,DFN) ; Store Balance
"RTN","VPSRPC16",40,0)
 ;D OTH^VPSRPC26(.VPSARR,DFN) ; Store Other information not in KNOWN API
"RTN","VPSRPC16",41,0)
 ;D POW^VPSRPC26(.VPSARR,DFN) ; Store POW
"RTN","VPSRPC16",42,0)
 ;D PH^VPSRPC26(.VPSARR,DFN) ; Store Purple Heart
"RTN","VPSRPC16",43,0)
 ;D MP^VPSRPC26(.VPSARR,DFN) ; Store Missing Person
"RTN","VPSRPC16",44,0)
 ;D SVC^VPSRPC26(.VPSARR,DFN) ; Store Service Connected and Rated Disabilities
"RTN","VPSRPC16",45,0)
 ;D CHG^VPSRPC26(.VPSARR,DFN) ; Store Change DT/TM
"RTN","VPSRPC16",46,0)
 ;D BLPAT^VPSRPC26(.VPSARR,DFN) ; Store Billing Patient
"RTN","VPSRPC16",47,0)
 ;D PCT^VPSRPC26(.VPSARR,DFN) ; Primary Care Team
"RTN","VPSRPC16",48,0)
 Q
"RTN","VPSRPC16",49,0)
 ;
"RTN","VPSRPC16",50,0)
DEM(VPSARR,DFN) ; Store Patient Demographic Data
"RTN","VPSRPC16",51,0)
 ; -- Store patient DFN
"RTN","VPSRPC16",52,0)
 D SET(.VPSARR,2,DFN,".001",DFN,"DFN")
"RTN","VPSRPC16",53,0)
 ;
"RTN","VPSRPC16",54,0)
 ; -- Store Patient ICN if exist
"RTN","VPSRPC16",55,0)
 N VPSICN S VPSICN=$$GETICN^MPIF001(DFN)
"RTN","VPSRPC16",56,0)
 N ICN S ICN=$P(VPSICN,"V")
"RTN","VPSRPC16",57,0)
 I $G(ICN)'="" D SET(.VPSARR,2,DFN,"991.01",ICN)
"RTN","VPSRPC16",58,0)
 ;
"RTN","VPSRPC16",59,0)
 ; -- Retrieve patient demographics data
"RTN","VPSRPC16",60,0)
 N VADM D DEM^VADPT
"RTN","VPSRPC16",61,0)
 ;
"RTN","VPSRPC16",62,0)
 ; -- Store patient demographics
"RTN","VPSRPC16",63,0)
 N VAL
"RTN","VPSRPC16",64,0)
 S VAL=$G(VADM(1)) D SET(.VPSARR,2,DFN,".01",VAL) ; patient name
"RTN","VPSRPC16",65,0)
 S VAL=$P($G(VADM(2)),U) D SET(.VPSARR,2,DFN,".09",VAL) ; SSN
"RTN","VPSRPC16",66,0)
 S VAL=$P($G(VADM(3)),U) D SET(.VPSARR,2,DFN,".03",VAL) ; DOB - kiosk needs internal (FM) format for all dates
"RTN","VPSRPC16",67,0)
 S VAL=$P($G(VADM(5)),U,2) D SET(.VPSARR,2,DFN,".02",VAL) ; SEX
"RTN","VPSRPC16",68,0)
 S VAL=$P($G(VADM(9)),U,2) D SET(.VPSARR,2,DFN,".08",VAL)
"RTN","VPSRPC16",69,0)
 S VAL=$P($G(VADM(10)),U,2) D SET(.VPSARR,2,DFN,".05",VAL)
"RTN","VPSRPC16",70,0)
 ;
"RTN","VPSRPC16",71,0)
 ; -- Store patient ethnicity
"RTN","VPSRPC16",72,0)
 N SEQ,VPSFL,VPSIEN
"RTN","VPSRPC16",73,0)
 ;
"RTN","VPSRPC16",74,0)
 I $G(VADM(11))'="" D
"RTN","VPSRPC16",75,0)
 . N VPSFL S VPSFL="2.06",SEQ=""
"RTN","VPSRPC16",76,0)
 . F  S SEQ=$O(VADM(11,SEQ)) QUIT:SEQ=""  D
"RTN","VPSRPC16",77,0)
 . . S VAL=$P(VADM(11,SEQ),U,2)
"RTN","VPSRPC16",78,0)
 . . S VPSIEN=DFN_";"_SEQ D SET(.VPSARR,VPSFL,VPSIEN,".01",VAL)
"RTN","VPSRPC16",79,0)
 ;
"RTN","VPSRPC16",80,0)
 ; -- Store patient race
"RTN","VPSRPC16",81,0)
 I $G(VADM(12))'="" D
"RTN","VPSRPC16",82,0)
 . S VPSFL="2.02",SEQ=""
"RTN","VPSRPC16",83,0)
 . F  S SEQ=$O(VADM(12,SEQ)) QUIT:SEQ=""  D
"RTN","VPSRPC16",84,0)
 . . S VAL=$P(VADM(12,SEQ),U,2)
"RTN","VPSRPC16",85,0)
 . . S VPSIEN=DFN_";"_SEQ D SET(.VPSARR,VPSFL,VPSIEN,".01",VAL)
"RTN","VPSRPC16",86,0)
 ;
"RTN","VPSRPC16",87,0)
 QUIT
"RTN","VPSRPC16",88,0)
 ;
"RTN","VPSRPC16",89,0)
SENLOG(VPSARR,DFN) ; Check Patient Sensitive Record File-38.1
"RTN","VPSRPC16",90,0)
 N DGRES
"RTN","VPSRPC16",91,0)
 N VAL S VAL=""
"RTN","VPSRPC16",92,0)
 N DGOPT S DGOPT=U_"VPS KIOSK-PATIENT-SELF-CHECKIN"
"RTN","VPSRPC16",93,0)
 N DGMSG S DGMSG=1
"RTN","VPSRPC16",94,0)
 D PTSEC^DGSEC4(.DGRES,DFN,DGMSG,DGOPT)
"RTN","VPSRPC16",95,0)
 N RES S RES=$G(DGRES(1))
"RTN","VPSRPC16",96,0)
 ;
"RTN","VPSRPC16",97,0)
 I RES=2 D  QUIT
"RTN","VPSRPC16",98,0)
 . N ACTION S ACTION=1
"RTN","VPSRPC16",99,0)
 . D NOTICE^DGSEC4(.DGRES,DFN,DGOPT,ACTION)
"RTN","VPSRPC16",100,0)
 . S VAL="2;SENSITIVE & SEC-AUDIT LOG & KIOSK MACHINE LOGIN-DUZ HOLDING NOSECURITY KEY"
"RTN","VPSRPC16",101,0)
 . D SET(.VPSARR,38.1,DFN,"IA3403",VAL,"SENSITIVE")
"RTN","VPSRPC16",102,0)
 ;
"RTN","VPSRPC16",103,0)
 S:RES=0 VAL="0;NON-SENSITIVE"
"RTN","VPSRPC16",104,0)
 S:RES=1 VAL="1;SENSITIVE & SEC-AUDIT LOG & KIOSK MACHINE LOGIN-DUZ HOLDING SECURITY KEY"
"RTN","VPSRPC16",105,0)
 S:RES=3 VAL="3;CANNOT CHECK SENSITIVE DUE TO KIOSK MACHINE LOGIN-DUZ ACCESSING OWN RECORD"
"RTN","VPSRPC16",106,0)
 S:RES=4 VAL="4;CANNOT CHECK SENSITIVE DUE TO KIOSK MACHINE LOGIN-DUZ MISSING SSN"
"RTN","VPSRPC16",107,0)
 S:VAL="" VAL="-1;MISSING DFN IN SENSITIVE CHECK"
"RTN","VPSRPC16",108,0)
 D SET(.VPSARR,38.1,DFN,"IA3402",VAL,"SENSITIVE")
"RTN","VPSRPC16",109,0)
 ;
"RTN","VPSRPC16",110,0)
 QUIT
"RTN","VPSRPC16",111,0)
 ;
"RTN","VPSRPC16",112,0)
ELIG(VPSARR,DFN) ; Eligibily
"RTN","VPSRPC16",113,0)
 N VAEL D ELIG^VADPT
"RTN","VPSRPC16",114,0)
 N VAL
"RTN","VPSRPC16",115,0)
 S VAL=$P($G(VAEL(6)),U,2) D SET(.VPSARR,2,DFN,391,VAL) ; Patient Type
"RTN","VPSRPC16",116,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.381,"E") D SET(.VPSARR,2,DFN,.381,VAL) ;Eligibility for Medicare
"RTN","VPSRPC16",117,0)
 ;
"RTN","VPSRPC16",118,0)
 ; --- Primary Eligibility Code
"RTN","VPSRPC16",119,0)
 N PELIG S PELIG=$P($G(VAEL(1)),U)
"RTN","VPSRPC16",120,0)
 S VAL=$P($G(VAEL(1)),U,2) D SET(.VPSARR,2,DFN,.361,VAL)
"RTN","VPSRPC16",121,0)
 ;
"RTN","VPSRPC16",122,0)
 S VAL=$P($G(VAEL(5,1)),U) D SET(.VPSARR,2,DFN,.152,VAL) ;InEligible Date
"RTN","VPSRPC16",123,0)
 S VAL=$P($G(VAEL(8)),U,2) D SET(.VPSARR,2,DFN,.3611,VAL) ;Eligibility Status
"RTN","VPSRPC16",124,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3612,"I") D SET(.VPSARR,2,DFN,.3612,VAL) ; Eligibility Status Date
"RTN","VPSRPC16",125,0)
 S VAL=$P($G(VAEL(9)),U,2) D SET(.VPSARR,2,DFN,.14,VAL) ; Means Test Status
"RTN","VPSRPC16",126,0)
 ;
"RTN","VPSRPC16",127,0)
 ; --- Secondary Eligibility codes
"RTN","VPSRPC16",128,0)
 N ELIG,ELIGNAM S ELIG=0
"RTN","VPSRPC16",129,0)
 F  S ELIG=$O(^DPT("AEL",DFN,ELIG)) Q:'ELIG  D
"RTN","VPSRPC16",130,0)
 . I ELIG'=PELIG S ELIGNAM=$$GET1^DIQ(8,ELIG_",",.01) D SET(.VPSARR,8,DFN_";"_ELIG,.01,ELIGNAM,"SECONDARY ELIGIBILITY CODE")
"RTN","VPSRPC16",131,0)
 ;
"RTN","VPSRPC16",132,0)
 ; --- Annual Mean Test
"RTN","VPSRPC16",133,0)
 N MTIEN S MTIEN=$O(^DGMT(408.31,"C",DFN,0))
"RTN","VPSRPC16",134,0)
 I MTIEN S VAL=$$GET1^DIQ(408.31,MTIEN_",",.2,"E") D SET(.VPSARR,408.31,DFN_";"_MTIEN,.2,VAL) ; HARDSHIP?
"RTN","VPSRPC16",135,0)
 QUIT
"RTN","VPSRPC16",136,0)
 ;
"RTN","VPSRPC16",137,0)
INP(VPSARR,DFN) ;
"RTN","VPSRPC16",138,0)
 N VAIP
"RTN","VPSRPC16",139,0)
 D IN5^VADPT
"RTN","VPSRPC16",140,0)
 D SET(.VPSARR,2,DFN,"",$S(VAIP(5)]"":"YES",1:"NO"),"INPATIENT STATUS") ; Inpatient Status
"RTN","VPSRPC16",141,0)
 D SET(.VPSARR,2,DFN,.1,$P(VAIP(5),U,2),"") ; Patient Ward Location
"RTN","VPSRPC16",142,0)
 D SET(.VPSARR,2,DFN,.101,$P(VAIP(6),U,2),"") ; Patient Bed Assignment
"RTN","VPSRPC16",143,0)
 D SET(.VPSARR,2,DFN,.109,$P(VAIP(19,1),U,2),"") ; Facility Directory Preference
"RTN","VPSRPC16",144,0)
 QUIT
"RTN","VPSRPC16",145,0)
 ;
"RTN","VPSRPC16",146,0)
ENR(VPSARR,DFN) ; Enrollment
"RTN","VPSRPC16",147,0)
 N ENRIEN S ENRIEN=$O(^DGEN(27.11,"C",DFN,""),-1)
"RTN","VPSRPC16",148,0)
 QUIT:ENRIEN=""
"RTN","VPSRPC16",149,0)
 N DGENR D GET^DGENA(ENRIEN,.DGENR)
"RTN","VPSRPC16",150,0)
 N VAL
"RTN","VPSRPC16",151,0)
 S VAL=$G(DGENR("STATUS")),VAL=$$GET1^DIQ(27.11,ENRIEN_",",.04,"E") D SET(.VPSARR,27.11,DFN_";"_ENRIEN,.04,VAL) ;ENROLLMENT STATUS
"RTN","VPSRPC16",152,0)
 S VAL=$G(DGENR("ELIG","CODE")),VAL=$$GET1^DIQ(27.11,ENRIEN_",",50.01,"E") D SET(.VPSARR,27.11,DFN_";"_ENRIEN,50.01,VAL) ;ELIGIBILITY CODE
"RTN","VPSRPC16",153,0)
 S VAL=$G(DGENR("ELIG","SC")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,50.02,VAL) ;SERVICE CONNECTED
"RTN","VPSRPC16",154,0)
 S VAL=$G(DGENR("ELIG","SCPER")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,50.03,VAL) ;SERVICE CONNECTED PERCENTAGE
"RTN","VPSRPC16",155,0)
 S VAL=$G(DGENR("DATE")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,.1,VAL) ;ENROLLMENT DATE
"RTN","VPSRPC16",156,0)
 S VAL=$G(DGENR("EFFDATE")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,.08,VAL) ;EFFECTIVE DATE
"RTN","VPSRPC16",157,0)
 S VAL=$G(DGENR("PRIORITY")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,.07,VAL) ;ENROLLMENT PRIORITY
"RTN","VPSRPC16",158,0)
 S VAL=$G(DGENR("ELIG","EC")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,50.13,VAL) ;SOUTH WEST ASIA CONDITION
"RTN","VPSRPC16",159,0)
 ;
"RTN","VPSRPC16",160,0)
 ; -- Enrollment Clinic
"RTN","VPSRPC16",161,0)
 N ENRCLN,ENRDATE,VAL
"RTN","VPSRPC16",162,0)
 N ECLNSEQ S ECLNSEQ=0
"RTN","VPSRPC16",163,0)
 N EDTSEQ S EDTSEQ=0
"RTN","VPSRPC16",164,0)
 ;
"RTN","VPSRPC16",165,0)
 F  S ECLNSEQ=$O(^DPT(DFN,"DE",ECLNSEQ)) QUIT:'ECLNSEQ  D
"RTN","VPSRPC16",166,0)
 . S ENRCLN=$G(^DPT(DFN,"DE",ECLNSEQ,0)) QUIT:ENRCLN=""
"RTN","VPSRPC16",167,0)
 . S VAL=$$GET1^DIQ(2.001,ECLNSEQ_","_DFN_",",.01,"E") ; enrollment clinic
"RTN","VPSRPC16",168,0)
 . D SET(.VPSARR,2.001,DFN_";"_ECLNSEQ,.01,VAL)
"RTN","VPSRPC16",169,0)
 . N VAL S VAL=$$GET1^DIQ(2.001,ECLNSEQ_","_DFN_",",2,"E") ; current status
"RTN","VPSRPC16",170,0)
 . D SET(.VPSARR,2.001,DFN_";"_ECLNSEQ,2,VAL)
"RTN","VPSRPC16",171,0)
 . ;
"RTN","VPSRPC16",172,0)
 . ; -- Enrollment Data
"RTN","VPSRPC16",173,0)
 . S EDTSEQ=0
"RTN","VPSRPC16",174,0)
 . F  S EDTSEQ=$O(^DPT(DFN,"DE",ECLNSEQ,1,EDTSEQ)) Q:'EDTSEQ  D
"RTN","VPSRPC16",175,0)
 . . S ENRDATE=$G(^DPT(DFN,"DE",ECLNSEQ,1,EDTSEQ,0)) QUIT:ENRDATE=""
"RTN","VPSRPC16",176,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",.01,"I") ; Date of Enrollment
"RTN","VPSRPC16",177,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,.01,VAL)
"RTN","VPSRPC16",178,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",1,"E") ; opt or ac
"RTN","VPSRPC16",179,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,1,VAL)
"RTN","VPSRPC16",180,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",2,"E") ; Service
"RTN","VPSRPC16",181,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,2,VAL)
"RTN","VPSRPC16",182,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",3,"I") ; Date of Discharge
"RTN","VPSRPC16",183,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,3,VAL)
"RTN","VPSRPC16",184,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",4,"E") ; Reason of Discharge
"RTN","VPSRPC16",185,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,4,VAL)
"RTN","VPSRPC16",186,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",5,"I") ; Review Date
"RTN","VPSRPC16",187,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,5,VAL)
"RTN","VPSRPC16",188,0)
 ;
"RTN","VPSRPC16",189,0)
 QUIT
"RTN","VPSRPC16",190,0)
 ;
"RTN","VPSRPC16",191,0)
ADD(VPSARR,DFN) ; Addresses
"RTN","VPSRPC16",192,0)
 N VAPA D ADD^VADPT
"RTN","VPSRPC16",193,0)
 N VAL,TODAY S TODAY=$$DT^XLFDT()
"RTN","VPSRPC16",194,0)
 ;
"RTN","VPSRPC16",195,0)
 S VAL=$P($G(VAPA(9)),U)
"RTN","VPSRPC16",196,0)
 I VAL=""!(TODAY<VAL) D SETPERM(.VPSARR,DFN,.VAPA) QUIT
"RTN","VPSRPC16",197,0)
 ;
"RTN","VPSRPC16",198,0)
 S VAL=$P($G(VAPA(10)),U)
"RTN","VPSRPC16",199,0)
 I VAL=""!(TODAY'>VAL) D SETMP(.VPSARR,DFN,.VAPA) QUIT
"RTN","VPSRPC16",200,0)
 ;
"RTN","VPSRPC16",201,0)
 D SETPERM(.VPSARR,DFN,.VAPA)
"RTN","VPSRPC16",202,0)
 QUIT
"RTN","VPSRPC16",203,0)
 ;
"RTN","VPSRPC16",204,0)
SETPERM(VPSARR,DFN,VAPA) ;  PERM ADDRESS
"RTN","VPSRPC16",205,0)
 N VAL
"RTN","VPSRPC16",206,0)
 S VAL=$G(VAPA(1)) D SET(.VPSARR,2,DFN,".111",VAL)
"RTN","VPSRPC16",207,0)
 S VAL=$G(VAPA(2)) D SET(.VPSARR,2,DFN,".112",VAL)
"RTN","VPSRPC16",208,0)
 S VAL=$G(VAPA(3)) D SET(.VPSARR,2,DFN,".113",VAL)
"RTN","VPSRPC16",209,0)
 S VAL=$G(VAPA(4)) D SET(.VPSARR,2,DFN,".114",VAL)
"RTN","VPSRPC16",210,0)
 S VAL=$P($G(VAPA(5)),U,2) D SET(.VPSARR,2,DFN,".115",VAL)
"RTN","VPSRPC16",211,0)
 S VAL=$P($G(VAPA(7)),U,2) D SET(.VPSARR,2,DFN,".117",VAL)
"RTN","VPSRPC16",212,0)
 S VAL=$G(VAPA(8)) D SET(.VPSARR,2,DFN,".131",VAL)
"RTN","VPSRPC16",213,0)
 S VAL=$P($G(VAPA(11)),U,2) D SET(.VPSARR,2,DFN,".1112",VAL)
"RTN","VPSRPC16",214,0)
 S VAL=$P($G(VAPA(25)),U,2) D SET(.VPSARR,2,DFN,".1173",VAL)
"RTN","VPSRPC16",215,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1171,"E") D SET(.VPSARR,2,DFN,".1171",VAL)
"RTN","VPSRPC16",216,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1172,"E") D SET(.VPSARR,2,DFN,".1172",VAL)
"RTN","VPSRPC16",217,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.121,"E") D SET(.VPSARR,2,DFN,".121",VAL)
"RTN","VPSRPC16",218,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.132,"E") D SET(.VPSARR,2,DFN,".132",VAL)
"RTN","VPSRPC16",219,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.134,"E") D SET(.VPSARR,2,DFN,".134",VAL)
"RTN","VPSRPC16",220,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.133,"E") D SET(.VPSARR,2,DFN,".133",VAL)
"RTN","VPSRPC16",221,0)
 D SETCONF(.VPSARR,DFN,.VAPA)
"RTN","VPSRPC16",222,0)
 QUIT
"RTN","VPSRPC16",223,0)
 ;
"RTN","VPSRPC16",224,0)
SETMP(VPSARR,DFN,VAPA) ; SET TEMP ADD
"RTN","VPSRPC16",225,0)
 N VAL
"RTN","VPSRPC16",226,0)
 S VAL=$G(VAPA(1)) D SET(.VPSARR,2,DFN,".1211",VAL)
"RTN","VPSRPC16",227,0)
 S VAL=$G(VAPA(2)) D SET(.VPSARR,2,DFN,".1212",VAL)
"RTN","VPSRPC16",228,0)
 S VAL=$G(VAPA(3)) D SET(.VPSARR,2,DFN,".1213",VAL)
"RTN","VPSRPC16",229,0)
 S VAL=$G(VAPA(4)) D SET(.VPSARR,2,DFN,".1214",VAL)
"RTN","VPSRPC16",230,0)
 S VAL=$P($G(VAPA(5)),U,2) D SET(.VPSARR,2,DFN,".1215",VAL)
"RTN","VPSRPC16",231,0)
 S VAL=$P($G(VAPA(7)),U,2) D SET(.VPSARR,2,DFN,".12111",VAL)
"RTN","VPSRPC16",232,0)
 S VAL=$G(VAPA(8)) D SET(.VPSARR,2,DFN,".1219",VAL)
"RTN","VPSRPC16",233,0)
 S VAL=$P($G(VAPA(9)),U,2) D SET(.VPSARR,2,DFN,".1217",VAL)
"RTN","VPSRPC16",234,0)
 S VAL=$P($G(VAPA(10)),U,2) D SET(.VPSARR,2,DFN,".1218",VAL)
"RTN","VPSRPC16",235,0)
 S VAL=$P($G(VAPA(11)),U,2) D SET(.VPSARR,2,DFN,".12112",VAL)
"RTN","VPSRPC16",236,0)
 S VAL=$P($G(VAPA(25)),U,2) D SET(.VPSARR,2,DFN,".1223",VAL)
"RTN","VPSRPC16",237,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1221,"E") D SET(.VPSARR,2,DFN,".1221",VAL)
"RTN","VPSRPC16",238,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1222,"E") D SET(.VPSARR,2,DFN,".1222",VAL)
"RTN","VPSRPC16",239,0)
 ;
"RTN","VPSRPC16",240,0)
 K VAPA S VAPA("P")="" D ADD^VADPT
"RTN","VPSRPC16",241,0)
 D SETPERM(.VPSARR,DFN,.VAPA)
"RTN","VPSRPC16",242,0)
 ;
"RTN","VPSRPC16",243,0)
 QUIT
"RTN","VPSRPC16",244,0)
 ;
"RTN","VPSRPC16",245,0)
SETCONF(VPSARR,DFN,VAPA) ;Confindential address
"RTN","VPSRPC16",246,0)
 N VAL
"RTN","VPSRPC16",247,0)
 S VAL=$G(VAPA(13)) D SET(.VPSARR,2,DFN,".1411",VAL) ; CONFIDENTIAL STREET [LINE 1]
"RTN","VPSRPC16",248,0)
 S VAL=$G(VAPA(14)) D SET(.VPSARR,2,DFN,".1412",VAL) ; CONFIDENTIAL STREET [LINE 2]
"RTN","VPSRPC16",249,0)
 S VAL=$G(VAPA(15)) D SET(.VPSARR,2,DFN,".1413",VAL) ; CONFIDENTIAL STREET [LINE 2]
"RTN","VPSRPC16",250,0)
 S VAL=$G(VAPA(16)) D SET(.VPSARR,2,DFN,".1414",VAL) ; CONFIDENTIAL ADDRESS CITY
"RTN","VPSRPC16",251,0)
 S VAL=$G(VAPA(17)) S VAL=$P(VAL,U,2) D SET(.VPSARR,2,DFN,".1415",VAL) ; CONFIDENTIAL ADDRESS STATE
"RTN","VPSRPC16",252,0)
 S VAL=$G(VAPA(18)) S VAL=$P(VAL,U,2) D SET(.VPSARR,2,DFN,".1416",VAL) ; CONFIDENTIAL ADDRESS ZIP CODE
"RTN","VPSRPC16",253,0)
 S VAL=$G(VAPA(19)) D SET(.VPSARR,2,DFN,".14111",VAL) ; CONFIDENTIAL ADDRESS COUNTY
"RTN","VPSRPC16",254,0)
 S VAL=$G(VAPA(20)) I +VAL D SET(.VPSARR,2,DFN,".1417",+VAL) ; CONFIDENTIAL START DATE
"RTN","VPSRPC16",255,0)
 S VAL=$G(VAPA(21)) I +VAL D SET(.VPSARR,2,DFN,".1418",+VAL) ; CONFIDENTIAL END DATE
"RTN","VPSRPC16",256,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.14105,"E") D SET(.VPSARR,2,DFN,".14105",VAL) ; CONFIDENTIAL ADDRESS ACTIVE?
"RTN","VPSRPC16",257,0)
 S VAL=$P($G(VAPA(28)),U,2) D SET(.VPSARR,2,DFN,".14116",VAL) ; CONFIDENTIAL ADDRESS COUNTRY
"RTN","VPSRPC16",258,0)
 S VAL=$G(VAPA(29)) D SET(.VPSARR,2,DFN,".1315",VAL) ; CONFIDENTIAL PHONE NUMBER
"RTN","VPSRPC16",259,0)
 ;
"RTN","VPSRPC16",260,0)
 ; -- Confidential Address categories
"RTN","VPSRPC16",261,0)
 N TYP S TYP=0
"RTN","VPSRPC16",262,0)
 F  S TYP=$O(VAPA(22,TYP)) Q:'TYP  D
"RTN","VPSRPC16",263,0)
 . S VAL=$P(VAPA(22,TYP),U,2)
"RTN","VPSRPC16",264,0)
 . D SET(.VPSARR,2.141,DFN_";"_TYP,".01",VAL) ; CONFIDENTIAL ADDRESS CATEGORY
"RTN","VPSRPC16",265,0)
 ;
"RTN","VPSRPC16",266,0)
 QUIT
"RTN","VPSRPC16",267,0)
 ;
"RTN","VPSRPC16",268,0)
OAD(VPSARR,DFN) ; Other Patient Variables
"RTN","VPSRPC16",269,0)
 N VAL,VAOA S VAOA("A")=7 D OAD^VADPT    ; NOK
"RTN","VPSRPC16",270,0)
 S VAL=$G(VAOA(1)) D SET(.VPSARR,2,DFN,".213",VAL)
"RTN","VPSRPC16",271,0)
 S VAL=$G(VAOA(2)) D SET(.VPSARR,2,DFN,".214",VAL)
"RTN","VPSRPC16",272,0)
 S VAL=$G(VAOA(3)) D SET(.VPSARR,2,DFN,".215",VAL)
"RTN","VPSRPC16",273,0)
 S VAL=$G(VAOA(4)) D SET(.VPSARR,2,DFN,".216",VAL)
"RTN","VPSRPC16",274,0)
 S VAL=$P(VAOA(5),U,2) D SET(.VPSARR,2,DFN,".217",VAL)
"RTN","VPSRPC16",275,0)
 S VAL=$G(VAOA(11)) S VAL=$P(VAL,U,2) D SET(.VPSARR,2,DFN,".2207",VAL)
"RTN","VPSRPC16",276,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".219",VAL)
"RTN","VPSRPC16",277,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".211",VAL)
"RTN","VPSRPC16",278,0)
 S VAL=$G(VAOA(10)) D SET(.VPSARR,2,DFN,".212",VAL)
"RTN","VPSRPC16",279,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.21011,"E") D SET(.VPSARR,2,DFN,".21011",VAL)
"RTN","VPSRPC16",280,0)
 ;
"RTN","VPSRPC16",281,0)
 K VAOA S VAOA("A")=3 D OAD^VADPT    ; Second NOK
"RTN","VPSRPC16",282,0)
 S VAL=$G(VAOA(1)) D SET(.VPSARR,2,DFN,".2193",VAL)
"RTN","VPSRPC16",283,0)
 S VAL=$G(VAOA(2)) D SET(.VPSARR,2,DFN,".2194",VAL)
"RTN","VPSRPC16",284,0)
 S VAL=$G(VAOA(3)) D SET(.VPSARR,2,DFN,".2195",VAL)
"RTN","VPSRPC16",285,0)
 S VAL=$G(VAOA(4)) D SET(.VPSARR,2,DFN,".2196",VAL)
"RTN","VPSRPC16",286,0)
 S VAL=$P($G(VAOA(5)),U,2) D SET(.VPSARR,2,DFN,".2197",VAL)
"RTN","VPSRPC16",287,0)
 S VAL=$G(VAOA(11)) S VAL=$P(VAL,U,2) D SET(.VPSARR,2,DFN,".2203",VAL)
"RTN","VPSRPC16",288,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".2199",VAL)
"RTN","VPSRPC16",289,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".2191",VAL)
"RTN","VPSRPC16",290,0)
 S VAL=$G(VAOA(10)) D SET(.VPSARR,2,DFN,".2192",VAL)
"RTN","VPSRPC16",291,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.211011,"E") D SET(.VPSARR,2,DFN,".211011",VAL)
"RTN","VPSRPC16",292,0)
 ;
"RTN","VPSRPC16",293,0)
 K VAOA S VAOA("A")=1 D OAD^VADPT    ; Emergency Contact
"RTN","VPSRPC16",294,0)
 S VAL=$G(VAOA(1)) D SET(.VPSARR,2,DFN,".333",VAL)
"RTN","VPSRPC16",295,0)
 S VAL=$G(VAOA(2)) D SET(.VPSARR,2,DFN,".334",VAL)
"RTN","VPSRPC16",296,0)
 S VAL=$G(VAOA(3)) D SET(.VPSARR,2,DFN,".335",VAL)
"RTN","VPSRPC16",297,0)
 S VAL=$G(VAOA(4)) D SET(.VPSARR,2,DFN,".336",VAL)
"RTN","VPSRPC16",298,0)
 S VAL=$P($G(VAOA(5)),U,2) D SET(.VPSARR,2,DFN,".337",VAL)
"RTN","VPSRPC16",299,0)
 S VAL=$P($G(VAOA(11)),U,2) D SET(.VPSARR,2,DFN,".2201",VAL)
"RTN","VPSRPC16",300,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".339",VAL)
"RTN","VPSRPC16",301,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".331",VAL)
"RTN","VPSRPC16",302,0)
 S VAL=$G(VAOA(10)) D SET(.VPSARR,2,DFN,".332",VAL)
"RTN","VPSRPC16",303,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.33011,"E") D SET(.VPSARR,2,DFN,".33011",VAL)
"RTN","VPSRPC16",304,0)
 ;
"RTN","VPSRPC16",305,0)
 K VAOA S VAOA("A")=4 D OAD^VADPT    ; Second Emergency Contact
"RTN","VPSRPC16",306,0)
 S VAL=$G(VAOA(1)) D SET(.VPSARR,2,DFN,".3313",VAL)
"RTN","VPSRPC16",307,0)
 S VAL=$G(VAOA(2)) D SET(.VPSARR,2,DFN,".3314",VAL)
"RTN","VPSRPC16",308,0)
 S VAL=$G(VAOA(3)) D SET(.VPSARR,2,DFN,".3315",VAL)
"RTN","VPSRPC16",309,0)
 S VAL=$G(VAOA(4)) D SET(.VPSARR,2,DFN,".3316",VAL)
"RTN","VPSRPC16",310,0)
 S VAL=$P($G(VAOA(5)),U,2) D SET(.VPSARR,2,DFN,".3317",VAL)
"RTN","VPSRPC16",311,0)
 S VAL=$P($G(VAOA(11)),U,2) D SET(.VPSARR,2,DFN,".2204",VAL)
"RTN","VPSRPC16",312,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".3319",VAL)
"RTN","VPSRPC16",313,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".3311",VAL)
"RTN","VPSRPC16",314,0)
 S VAL=$G(VAOA(10)) D SET(.VPSARR,2,DFN,".3312",VAL)
"RTN","VPSRPC16",315,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.331011,"E") D SET(.VPSARR,2,DFN,".331011",VAL)
"RTN","VPSRPC16",316,0)
 ;
"RTN","VPSRPC16",317,0)
 K VAOA S VAOA("A")=5 D OAD^VADPT    ; Patient Employer
"RTN","VPSRPC16",318,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".3119",VAL)
"RTN","VPSRPC16",319,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".3111",VAL)
"RTN","VPSRPC16",320,0)
 ;
"RTN","VPSRPC16",321,0)
 N VAPD D OPD^VADPT
"RTN","VPSRPC16",322,0)
 S VAL=$P($G(VAPD(7)),U,2) D SET(.VPSARR,2,DFN,".31115",VAL)
"RTN","VPSRPC16",323,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.31116,"E") D SET(.VPSARR,2,DFN,".31116",VAL)
"RTN","VPSRPC16",324,0)
 ;
"RTN","VPSRPC16",325,0)
 K VAOA S VAOA("A")=6 D OAD^VADPT    ; Spouse's Employer
"RTN","VPSRPC16",326,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".258",VAL)
"RTN","VPSRPC16",327,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".251",VAL)
"RTN","VPSRPC16",328,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.2515,"E") D SET(.VPSARR,2,DFN,".2515",VAL)
"RTN","VPSRPC16",329,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.2516,"E") D SET(.VPSARR,2,DFN,".2516",VAL)
"RTN","VPSRPC16",330,0)
 ;
"RTN","VPSRPC16",331,0)
 QUIT
"RTN","VPSRPC16",332,0)
 ;
"RTN","VPSRPC16",333,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC16",334,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),6) ;Set line item to output array
"RTN","VPSRPC16",335,0)
 QUIT
"RTN","VPSRPC26")
0^11^B119461952
"RTN","VPSRPC26",1,0)
VPSRPC26  ;BPOIFO/EL,SLOIFO/BT - Patient Demographic (continue);07/31/14 13:07
"RTN","VPSRPC26",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4,14**;Jul 31, 2014;Build 26
"RTN","VPSRPC26",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC26",4,0)
 ;
"RTN","VPSRPC26",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC26",6,0)
 ; ------------------------
"RTN","VPSRPC26",7,0)
 ; #2056  - DIQ call              (Supported)
"RTN","VPSRPC26",8,0)
 ; #2701  - MPIF001 call          (Supported)
"RTN","VPSRPC26",9,0)
 ; #3860  - DGPFAPI call          (Controlled Sub)
"RTN","VPSRPC26",10,0)
 ; #4289  - PRCAHV call           (Controlled Sub)
"RTN","VPSRPC26",11,0)
 ; #4419  - IBBAPI call           (Supported)
"RTN","VPSRPC26",12,0)
 ; #4425  - ^DGS( references      (Controlled Sub)
"RTN","VPSRPC26",13,0)
 ; #4462  - $$GETSHAD^DGUTL3      (Supported)
"RTN","VPSRPC26",14,0)
 ; #4499  - $$LST^EASECU          (Controlled Sub)
"RTN","VPSRPC26",15,0)
 ; #4807  - $$RDIS^DGRPDB         (Supported)
"RTN","VPSRPC26",16,0)
 ; #6107  - PCDETAIL^ORWPT1 call  (Controlled Sub)
"RTN","VPSRPC26",17,0)
 ; #10035 - ^DPT( references      (Supported)
"RTN","VPSRPC26",18,0)
 ; #10103 - XLFDT call            (Supported)
"RTN","VPSRPC26",19,0)
 ; #10147 - $$RXST^IBARXEU        (Supported)
"RTN","VPSRPC26",20,0)
 QUIT
"RTN","VPSRPC26",21,0)
 ;
"RTN","VPSRPC26",22,0)
IBB(VPSARR,DFN) ; Insurance Info
"RTN","VPSRPC26",23,0)
 N VPSIBB,VPSIBFLD S VPSIBFLD="1,10,11,13,14,21"
"RTN","VPSRPC26",24,0)
 N VAL S VAL=$$INSUR^IBBAPI(DFN,,"ABR",.VPSIBB,VPSIBFLD)
"RTN","VPSRPC26",25,0)
 QUIT:VAL'>0
"RTN","VPSRPC26",26,0)
 ;
"RTN","VPSRPC26",27,0)
 N VPSFL,VPSIEN
"RTN","VPSRPC26",28,0)
 N SEQ S SEQ=""
"RTN","VPSRPC26",29,0)
 ;
"RTN","VPSRPC26",30,0)
 F  S SEQ=$O(VPSIBB("IBBAPI","INSUR",SEQ)) Q:SEQ=""  D
"RTN","VPSRPC26",31,0)
 . S VPSFL="2.312",VPSIEN=DFN_";"_SEQ
"RTN","VPSRPC26",32,0)
 . ; Insurance Company Name
"RTN","VPSRPC26",33,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,1))
"RTN","VPSRPC26",34,0)
 . S VAL=$P(VAL,U,2) D SET(.VPSARR,36,VPSIEN,.01,VAL)
"RTN","VPSRPC26",35,0)
 . ; Policy Effective Date
"RTN","VPSRPC26",36,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,10))
"RTN","VPSRPC26",37,0)
 . D SET(.VPSARR,VPSFL,VPSIEN,8,VAL)
"RTN","VPSRPC26",38,0)
 . ; Policy Expiration Date
"RTN","VPSRPC26",39,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,11))
"RTN","VPSRPC26",40,0)
 . D SET(.VPSARR,VPSFL,VPSIEN,3,VAL)
"RTN","VPSRPC26",41,0)
 . ; Subscribe Name
"RTN","VPSRPC26",42,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,13))
"RTN","VPSRPC26",43,0)
 . D SET(.VPSARR,VPSFL,VPSIEN,17,VAL)
"RTN","VPSRPC26",44,0)
 . ; Subscribe ID
"RTN","VPSRPC26",45,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,14))
"RTN","VPSRPC26",46,0)
 . D SET(.VPSARR,VPSFL,VPSIEN,1,VAL)
"RTN","VPSRPC26",47,0)
 ;
"RTN","VPSRPC26",48,0)
 QUIT
"RTN","VPSRPC26",49,0)
 ;
"RTN","VPSRPC26",50,0)
REC(VPSARR,DFN) ; Patient Record Flag
"RTN","VPSRPC26",51,0)
 N PRF,NPRF,PRFFIL,PRFLAG,VAL
"RTN","VPSRPC26",52,0)
 S NPRF=$$GETACT^DGPFAPI(DFN,"VPSREC") ;Retrieve all ACTIVE Patient record flag assignments
"RTN","VPSRPC26",53,0)
 ;
"RTN","VPSRPC26",54,0)
 ; Store all Patient Record Flags and Assigment Narratives into result array (VPSARR)
"RTN","VPSRPC26",55,0)
 F PRF=1:1:NPRF D
"RTN","VPSRPC26",56,0)
 . ;store flag type
"RTN","VPSRPC26",57,0)
 . S VAL=$P(VPSREC(PRF,"FLAGTYPE"),U,2)
"RTN","VPSRPC26",58,0)
 . S PRFLAG=$P(VPSREC(PRF,"FLAG"),U)
"RTN","VPSRPC26",59,0)
 . I VAL'="",PRFLAG'="" D
"RTN","VPSRPC26",60,0)
 . . S PRFFIL=$P($P(PRFLAG,"DGPF(",2),",")
"RTN","VPSRPC26",61,0)
 . . I PRFFIL'="" D SET(.VPSARR,PRFFIL,DFN,".03",VAL,"FLAG TYPE")
"RTN","VPSRPC26",62,0)
 . ;store flag name
"RTN","VPSRPC26",63,0)
 . S VAL=$P(VPSREC(PRF,"FLAG"),U,2) D SET(.VPSARR,"26.13",DFN,".02",VAL)
"RTN","VPSRPC26",64,0)
 . D STNARR(PRF,.VPSREC) ; Store ASSIGNMENT NARRATIVE (word-processing) for this counter
"RTN","VPSRPC26",65,0)
 ;
"RTN","VPSRPC26",66,0)
 QUIT
"RTN","VPSRPC26",67,0)
 ;
"RTN","VPSRPC26",68,0)
STNARR(PRF,VPSREC) ; Store ASSIGNMENT NARRATIVE (word-processing) into result array (VPSARR)
"RTN","VPSRPC26",69,0)
 N VAL,NARRCNT S NARRCNT=""
"RTN","VPSRPC26",70,0)
 F  S NARRCNT=$O(VPSREC(PRF,"NARR",NARRCNT)) Q:NARRCNT=""  D
"RTN","VPSRPC26",71,0)
 . S VAL=$G(VPSREC(PRF,"NARR",NARRCNT,0)) D SET(.VPSARR,"26.132",DFN,".01",VAL)
"RTN","VPSRPC26",72,0)
 QUIT
"RTN","VPSRPC26",73,0)
 ;
"RTN","VPSRPC26",74,0)
DGS(VPSARR,DFN) ; Pre-Registration Audit
"RTN","VPSRPC26",75,0)
 N VPSFL S VPSFL="41.41"
"RTN","VPSRPC26",76,0)
 N DGIEN S DGIEN=$O(^DGS(VPSFL,"ADC",DFN,""),-1)
"RTN","VPSRPC26",77,0)
 D SET(.VPSARR,VPSFL,DFN,1,DGIEN)
"RTN","VPSRPC26",78,0)
 QUIT
"RTN","VPSRPC26",79,0)
 ;
"RTN","VPSRPC26",80,0)
BAL(VPSARR,DFN) ; BALANCE-OWED
"RTN","VPSRPC26",81,0)
 N VPSICN S VPSICN=$$GETICN^MPIF001(DFN)
"RTN","VPSRPC26",82,0)
 N ICN S ICN=$P(VPSICN,"V")
"RTN","VPSRPC26",83,0)
 N VAL,BAL S BAL=$$BALANCE^PRCAHV(.VAL,ICN,"ALL")
"RTN","VPSRPC26",84,0)
 I BAL=1 D SET(.VPSARR,430,DFN,"COMPUTED",VAL,"BALANCE")
"RTN","VPSRPC26",85,0)
 QUIT
"RTN","VPSRPC26",86,0)
 ;
"RTN","VPSRPC26",87,0)
OTH(VPSARR,DFN) ; Other info not in known category
"RTN","VPSRPC26",88,0)
 N VAL
"RTN","VPSRPC26",89,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.323,"E") D SET(.VPSARR,2,DFN,.323,VAL) ;Period of Service
"RTN","VPSRPC26",90,0)
 S VAL=$$GET1^DIQ(2,DFN_",",1100.01,"E") D SET(.VPSARR,2,DFN,1100.01,VAL) ; Fugitive Felon Flag
"RTN","VPSRPC26",91,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.109,"E") D SET(.VPSARR,2,DFN,.109,VAL) ; Exclude From Facility DIRECTORY?
"RTN","VPSRPC26",92,0)
 S VAL=$$GET1^DIQ(2,DFN_",",63,"E") D SET(.VPSARR,2,DFN,63,VAL) ; Laboratory Reference
"RTN","VPSRPC26",93,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.305,"E") D SET(.VPSARR,2,DFN,.305,VAL) ; Unemployable
"RTN","VPSRPC26",94,0)
 QUIT
"RTN","VPSRPC26",95,0)
 ;
"RTN","VPSRPC26",96,0)
POW(VPSARR,DFN) ; POW information
"RTN","VPSRPC26",97,0)
 N VAL
"RTN","VPSRPC26",98,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.525,"E") D SET(.VPSARR,2,DFN,".525",VAL) ; POW Status Indicated?
"RTN","VPSRPC26",99,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.526,"E") D SET(.VPSARR,2,DFN,".526",VAL) ; POW Confinement Location
"RTN","VPSRPC26",100,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.527,"I") D SET(.VPSARR,2,DFN,".527",VAL) ; POW From Date
"RTN","VPSRPC26",101,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.528,"I") D SET(.VPSARR,2,DFN,".528",VAL) ; POW Through Date
"RTN","VPSRPC26",102,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.529,"I") D SET(.VPSARR,2,DFN,".529",VAL) ; POW Status Verified
"RTN","VPSRPC26",103,0)
 QUIT
"RTN","VPSRPC26",104,0)
 ;
"RTN","VPSRPC26",105,0)
PH(VPSARR,DFN) ; Store PURPLE HEART
"RTN","VPSRPC26",106,0)
 N VAL
"RTN","VPSRPC26",107,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.531,"E") D SET(.VPSARR,2,DFN,".531",VAL) ; Current PH Indicator
"RTN","VPSRPC26",108,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.532,"E") D SET(.VPSARR,2,DFN,".532",VAL) ; Current PH Status
"RTN","VPSRPC26",109,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.533,"E") D SET(.VPSARR,2,DFN,".533",VAL) ; Current PH Remarks
"RTN","VPSRPC26",110,0)
 QUIT
"RTN","VPSRPC26",111,0)
 ;
"RTN","VPSRPC26",112,0)
MP(VPSARR,DFN) ; Store Missing Person
"RTN","VPSRPC26",113,0)
 N VAL S VAL=$$GET1^DIQ(2,DFN_",",.153,"I") D SET(.VPSARR,2,DFN,.153,VAL) ; Missing Person Date
"RTN","VPSRPC26",114,0)
 ;
"RTN","VPSRPC26",115,0)
 N WP S WP=$$GET1^DIQ(2,DFN_",",.16,"","WP") ; Missing or ineligible
"RTN","VPSRPC26",116,0)
 N SEQ S SEQ=0 S VAL=""
"RTN","VPSRPC26",117,0)
 F  S SEQ=$O(WP(SEQ)) QUIT:'SEQ  S VAL=VAL_" "_WP(SEQ)
"RTN","VPSRPC26",118,0)
 D SET(.VPSARR,2,DFN,.16,VAL)
"RTN","VPSRPC26",119,0)
 ;
"RTN","VPSRPC26",120,0)
 N INE S INE=$G(^DPT(DFN,"INE"))
"RTN","VPSRPC26",121,0)
 QUIT:INE=""
"RTN","VPSRPC26",122,0)
 S VAL=$P(INE,U,7) D SET(.VPSARR,2,DFN,".1657",VAL) ; Missing Person TWX Source
"RTN","VPSRPC26",123,0)
 S VAL=$P(INE,U,8) D SET(.VPSARR,2,DFN,".1658",VAL) ; Missing Person TWX City
"RTN","VPSRPC26",124,0)
 S VAL=$P(INE,U,9) D SET(.VPSARR,2,DFN,".1659",VAL) ; Missing Person TWX State
"RTN","VPSRPC26",125,0)
 QUIT
"RTN","VPSRPC26",126,0)
 ;
"RTN","VPSRPC26",127,0)
SVC(VPSARR,DFN) ; Store Service Connected and Rated Disabilities
"RTN","VPSRPC26",128,0)
 N VAL
"RTN","VPSRPC26",129,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3012,"I") D SET(.VPSARR,2,DFN,.3012,VAL) ; SC Award Date
"RTN","VPSRPC26",130,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3014,"I") D SET(.VPSARR,2,DFN,.3014,VAL) ; Effective Date Combine SC% EVAL
"RTN","VPSRPC26",131,0)
 ;
"RTN","VPSRPC26",132,0)
 N DGARR S VAL=$$RDIS^DGRPDB(DFN,.DGARR)
"RTN","VPSRPC26",133,0)
 N SEQ S SEQ=0
"RTN","VPSRPC26",134,0)
 F  S SEQ=$O(DGARR(SEQ)) QUIT:'SEQ  D
"RTN","VPSRPC26",135,0)
 . S VAL=$P(DGARR(SEQ),U,2) D SET(.VPSARR,2.04,DFN,2,VAL) ; Disability %
"RTN","VPSRPC26",136,0)
 . S VAL=$P(DGARR(SEQ),U,3),VAL=$S(VAL=1:"YES",1:"NO") D SET(.VPSARR,2.04,DFN,3,VAL) ; Service Connected
"RTN","VPSRPC26",137,0)
 . S VAL=$P(DGARR(SEQ),U,4),VAL=$$GETXAFF(VAL) D SET(.VPSARR,2.04,DFN,4,VAL) ; Extremity Affected
"RTN","VPSRPC26",138,0)
 . S VAL=$P(DGARR(SEQ),U,5) D SET(.VPSARR,2.04,DFN,5,VAL) ; Original Effective Date
"RTN","VPSRPC26",139,0)
 . S VAL=$P(DGARR(SEQ),U,6) D SET(.VPSARR,2.04,DFN,6,VAL) ; Current Effective Date
"RTN","VPSRPC26",140,0)
 ;
"RTN","VPSRPC26",141,0)
 ;Flags/Environment Indicators
"RTN","VPSRPC26",142,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32102,"E") D SET(.VPSARR,2,DFN,.32102,VAL) ; Agent Orange Exposure Indicated
"RTN","VPSRPC26",143,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32107,"I") D SET(.VPSARR,2,DFN,.32107,VAL) ; Agent Orange Registration Date
"RTN","VPSRPC26",144,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32109,"I") D SET(.VPSARR,2,DFN,.32109,VAL) ; Agent Orange Examination Date
"RTN","VPSRPC26",145,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32103,"E") D SET(.VPSARR,2,DFN,.32103,VAL) ; Radiation Exposure Indicated
"RTN","VPSRPC26",146,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32111,"E") D SET(.VPSARR,2,DFN,.32111,VAL) ; Radiation Registration Date
"RTN","VPSRPC26",147,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3212,"E") D SET(.VPSARR,2,DFN,.3212,VAL) ; Radiation Exposure Method
"RTN","VPSRPC26",148,0)
 S VAL=$$GETSHAD^DGUTL3(DFN),VAL=$S(VAL=1:"YES",1:"NO") D SET(.VPSARR,2,DFN,.32115,VAL) ; Proj 112/shad
"RTN","VPSRPC26",149,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.5291,"E") D SET(.VPSARR,2,DFN,.5291,VAL) ; Combat Service Indicated
"RTN","VPSRPC26",150,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.5293,"I") D SET(.VPSARR,2,DFN,.5293,VAL) ; Combat from date
"RTN","VPSRPC26",151,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.5294,"I") D SET(.VPSARR,2,DFN,.5294,VAL) ; Combat to Date
"RTN","VPSRPC26",152,0)
 QUIT
"RTN","VPSRPC26",153,0)
 ;
"RTN","VPSRPC26",154,0)
GETXAFF(VAL) ; Get external value of Extremity Affected
"RTN","VPSRPC26",155,0)
 QUIT:VAL="BL" "BOTH LOWER"
"RTN","VPSRPC26",156,0)
 QUIT:VAL="BU" "BOTH UPPER"
"RTN","VPSRPC26",157,0)
 QUIT:VAL="RL" "RIGHT LOWER"
"RTN","VPSRPC26",158,0)
 QUIT:VAL="RU" "RIGHT UPPER"
"RTN","VPSRPC26",159,0)
 QUIT:VAL="LL" "LEFT LOWER"
"RTN","VPSRPC26",160,0)
 QUIT:VAL="LU" "LEFT UPPER"
"RTN","VPSRPC26",161,0)
 QUIT ""
"RTN","VPSRPC26",162,0)
 ;
"RTN","VPSRPC26",163,0)
CHG(VPSARR,DFN) ; Store Change DT/TM fields
"RTN","VPSRPC26",164,0)
 N VAL
"RTN","VPSRPC26",165,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.118,"I") D SET(.VPSARR,2,DFN,".118",VAL) ;Address Change DT/TM
"RTN","VPSRPC26",166,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.12113,"I") D SET(.VPSARR,2,DFN,".12113",VAL) ;Temp Address Change DT/TM
"RTN","VPSRPC26",167,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.14112,"I") D SET(.VPSARR,2,DFN,".14112",VAL) ; CONFIDENTIAL ADDRESS CHANGE DT/TM
"RTN","VPSRPC26",168,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1312,"I") D SET(.VPSARR,2,DFN,".1312",VAL) ; Pager Number Change DT/TM
"RTN","VPSRPC26",169,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.136,"I") D SET(.VPSARR,2,DFN,".136",VAL) ; Email Address Change DT/TM
"RTN","VPSRPC26",170,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.139,"I") D SET(.VPSARR,2,DFN,".139",VAL) ; CELLULAR NUMBER CHANGE DATE/TIME
"RTN","VPSRPC26",171,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.33012,"I") D SET(.VPSARR,2,DFN,".33012",VAL) ; E-Contact Change DT/TM
"RTN","VPSRPC26",172,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.33112,"I") D SET(.VPSARR,2,DFN,".33112",VAL) ; E2-Contact Change DT/TM
"RTN","VPSRPC26",173,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3412,"I") D SET(.VPSARR,2,DFN,".3412",VAL) ; Designee Change DT/TM
"RTN","VPSRPC26",174,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.21012,"I") D SET(.VPSARR,2,DFN,".21012",VAL) ; PRIMARY NOK CHANGE DATE/TIME
"RTN","VPSRPC26",175,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.211012,"I") D SET(.VPSARR,2,DFN,".211012",VAL) ; SECONDARY NOK CHANGE DATE/TIME
"RTN","VPSRPC26",176,0)
 QUIT
"RTN","VPSRPC26",177,0)
 ;
"RTN","VPSRPC26",178,0)
BLPAT(VPSARR,DFN) ; Store Billing Patient
"RTN","VPSRPC26",179,0)
 N BP S BP=+$$RXST^IBARXEU(DFN)
"RTN","VPSRPC26",180,0)
 QUIT:BP=-1
"RTN","VPSRPC26",181,0)
 N VAL S VAL=$S(BP=0:"NON-EXEMPT",1:"EXEMPT") D SET(.VPSARR,354,DFN,"RX COPAY",VAL) ; COPAY INCOME EXEMPTION STATUS-
"RTN","VPSRPC26",182,0)
 ;N VAL S VAL=$S(BP=0:"NON-EXEMPT",1:"EXEMPT") D SET(.VPSARR,354,DFN,"COMPUTED",VAL) ; COPAY INCOME EXEMPTION STATUS
"RTN","VPSRPC26",183,0)
 D SET(.VPSARR,408.31,DFN,".03",$P($$LST^EASECU(DFN),U,3)) ;"LTC CO-PAY"
"RTN","VPSRPC26",184,0)
 QUIT
"RTN","VPSRPC26",185,0)
 ;
"RTN","VPSRPC26",186,0)
PCT(VPSARR,DFN) ; Primary Care Team
"RTN","VPSRPC26",187,0)
 N PCTLST D PCDETAIL^ORWPT1(.PCTLST,DFN)
"RTN","VPSRPC26",188,0)
 N REC,FLD,FLDVAL
"RTN","VPSRPC26",189,0)
 N PROVIDER
"RTN","VPSRPC26",190,0)
 N ILST S ILST=0
"RTN","VPSRPC26",191,0)
 ;
"RTN","VPSRPC26",192,0)
 F  S ILST=$O(PCTLST(ILST)) QUIT:'ILST  D
"RTN","VPSRPC26",193,0)
 . S REC=PCTLST(ILST)
"RTN","VPSRPC26",194,0)
 . QUIT:'$F(REC,":")
"RTN","VPSRPC26",195,0)
 . S FLD=$$TRIM^XLFSTR($P(REC,":"))
"RTN","VPSRPC26",196,0)
 . S FLDVAL=$$TRIM^XLFSTR($P(REC,":",2))
"RTN","VPSRPC26",197,0)
 . ;
"RTN","VPSRPC26",198,0)
 . I FLD="Primary Care Team" D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE TEAM NAME")
"RTN","VPSRPC26",199,0)
 . I FLD="Phone" D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE TEAM TELEPHONE NUMBER")
"RTN","VPSRPC26",200,0)
 . ;
"RTN","VPSRPC26",201,0)
 . I FLD="Primary Care Provider" S PROVIDER=1 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE PROVIDER NAME")
"RTN","VPSRPC26",202,0)
 . I FLD="Analog Pager",$G(PROVIDER)=1 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE PROVIDER ANALOG PAGER")
"RTN","VPSRPC26",203,0)
 . I FLD="Digital Pager",$G(PROVIDER)=1 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE PROVIDER DIGITAL PAGER")
"RTN","VPSRPC26",204,0)
 . I FLD="Office Phone",$G(PROVIDER)=1 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE PROVIDER OFFICE PHONE")
"RTN","VPSRPC26",205,0)
 . ;
"RTN","VPSRPC26",206,0)
 . I FLD="Associate Provider" S PROVIDER=2 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ASSOCIATE PROVIDER NAME")
"RTN","VPSRPC26",207,0)
 . I FLD="Analog Pager",$G(PROVIDER)=2 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ASSOCIATE PROVIDER ANALOG PAGER")
"RTN","VPSRPC26",208,0)
 . I FLD="Digital Pager",$G(PROVIDER)=2 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ASSOCIATE PROVIDER DIGITAL PAGER")
"RTN","VPSRPC26",209,0)
 . I FLD="Office Phone",$G(PROVIDER)=2 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ASSOCIATE PROVIDER OFFICE PHONE")
"RTN","VPSRPC26",210,0)
 . ;
"RTN","VPSRPC26",211,0)
 . I FLD="Attending Physician" S PROVIDER=3 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ATTENDING PHYSICIAN NAME")
"RTN","VPSRPC26",212,0)
 . I FLD="Analog Pager",$G(PROVIDER)=3 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ATTENDING PHYSICIAN ANALOG PAGER")
"RTN","VPSRPC26",213,0)
 . I FLD="Digital Pager",$G(PROVIDER)=3 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ATTENDING PHYSICIAN DIGITAL PAGER")
"RTN","VPSRPC26",214,0)
 . I FLD="Office Phone",$G(PROVIDER)=3 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ATTENDING PHYSICIAN OFFICE PHONE")
"RTN","VPSRPC26",215,0)
 . ; 
"RTN","VPSRPC26",216,0)
 . I FLD="MH Treatment Team" S PROVIDER=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH TEAM")
"RTN","VPSRPC26",217,0)
 . I FLD="MH Treatment Coordinator" S PROVIDER=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH COORDINATOR")
"RTN","VPSRPC26",218,0)
 . I FLD="Analog Pager",$G(PROVIDER)=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH PROVIDER ANALOG PAGER")
"RTN","VPSRPC26",219,0)
 . I FLD="Digital Pager",$G(PROVIDER)=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH PROVIDER DIGITAL PAGER")
"RTN","VPSRPC26",220,0)
 . I FLD="Office Phone",$G(PROVIDER)=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH PROVIDER OFFICE PHONE")
"RTN","VPSRPC26",221,0)
 QUIT
"RTN","VPSRPC26",222,0)
 ;
"RTN","VPSRPC26",223,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC26",224,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),6) ;Set line item to output array
"RTN","VPSRPC26",225,0)
 QUIT
"RTN","VPSSRVY1")
0^3^B179593704
"RTN","VPSSRVY1",1,0)
VPSSRVY1 ;WOIFO/BT - VPS CLINICAL SURVEY QUESTIONNAIRE;01/16/2015 11:23
"RTN","VPSSRVY1",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5,14**;Jan 16, 2015;Build 26
"RTN","VPSSRVY1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSSRVY1",4,0)
 ;
"RTN","VPSSRVY1",5,0)
 ; External Reference DBIA#
"RTN","VPSSRVY1",6,0)
 ; ------------------------
"RTN","VPSSRVY1",7,0)
 ; IA #10103 - supported use of XLFDT function 
"RTN","VPSSRVY1",8,0)
 ;
"RTN","VPSSRVY1",9,0)
 QUIT
"RTN","VPSSRVY1",10,0)
 ;
"RTN","VPSSRVY1",11,0)
SAVE(VPSRES,VPSDFN,VPSDATA,MODFLG) ;RPC: VPS SAVE CLINICAL SURVEY
"RTN","VPSSRVY1",12,0)
 ;INPUT
"RTN","VPSSRVY1",13,0)
 ;  VPSDFN  : Patient IEN
"RTN","VPSSRVY1",14,0)
 ;  VPSDATA : Array of field-value pair to store
"RTN","VPSSRVY1",15,0)
 ;            Format : VPSDATA(1..n)=FIELD-NAME^SEQ#^Answer Sequence#^FIELD-VALUE
"RTN","VPSSRVY1",16,0)
 ;            Example: 
"RTN","VPSSRVY1",17,0)
 ;      
"RTN","VPSSRVY1",18,0)
 ;           VPSDATA(1)="NAME^^^RAMDOM QUESTIONS"                <-- Survey Name
"RTN","VPSSRVY1",19,0)
 ;           VPSDATA(2)="INTERNAL^^^RANDOM Checklist"            <-- Survey Internal Name
"RTN","VPSSRVY1",20,0)
 ;           VPSDATA(3)="TEMPLATE ID^^^RANDOM001"                <-- Questionnaire Template ID
"RTN","VPSSRVY1",21,0)
 ;           VPSDATA(4)="VERSION^^^10"                           <-- Survey Version
"RTN","VPSSRVY1",22,0)
 ;           VPSDATA(5)="DATE/TIME TAKEN^^^3150910.1234"         <-- Date/Time Survey was taken
"RTN","VPSSRVY1",23,0)
 ;           VPSDATA(6)="DATE/TIME MODIFIED^^^3150911.093001"    <-- Date/Time Survey was modified
"RTN","VPSSRVY1",24,0)
 ;           VPSDATA(7)="COMPLETION STATUS^^^2"                  <-- Completion STATUS
"RTN","VPSSRVY1",25,0)
 ;           VPSDATA(9)="PATIENT SAFETY^^^2"                     <-- Patient Safety
"RTN","VPSSRVY1",26,0)
 ;           VPSDATA(10)="IMMEDIATE ACTION^^^2"                  <-- Immediate Action
"RTN","VPSSRVY1",27,0)
 ;           VPSDATA(11)="RESPONSE IDENTIFIER^^^RESP 0910"
"RTN","VPSSRVY1",28,0)
 ;           VPSDATA(12)="SURVEY CALCULATED VALUE^^^Ebola Survey#223"
"RTN","VPSSRVY1",29,0)
 ;           VPSDATA(13)="APPOINTMENT CHECK-IN ID^1^^CHECK-IN FREE TEXT"
"RTN","VPSSRVY1",30,0)
 ;           VPSDATA(14)="ADDITIONAL CALC VALUE NAME^1^^CALC NAME"
"RTN","VPSSRVY1",31,0)
 ;           VPSDATA(15)="ADDITIONAL CALC VALUE SCORE^1^^CALC SCORE"
"RTN","VPSSRVY1",32,0)
 ;      Multiple Questions
"RTN","VPSSRVY1",33,0)
 ;           VPSDATA(16)="QUESTION NUMBER^1^^Q1"
"RTN","VPSSRVY1",34,0)
 ;           VPSDATA(17)="QUESTION CALCULATED VALUE^1^^QCV 40"
"RTN","VPSSRVY1",35,0)
 ;           VPSDATA(18)="QUESTION PRESENTED^1^^Have you travelled outside the U.S. in the last 5 TO 10 days?"
"RTN","VPSSRVY1",36,0)
 ;      Multiple Answers
"RTN","VPSSRVY1",37,0)
 ;           VPSDATA(19)="ANSWER IDENTIFIER^1^1^AN1-A"
"RTN","VPSSRVY1",38,0)
 ;           VPSDATA(20)="INTERFACE USED^1^1^2"
"RTN","VPSSRVY1",39,0)
 ;           VPSDATA(21)="RESPONDENT^1^1^1"
"RTN","VPSSRVY1",40,0)
 ;           VPSDATA(22)="RESPONDENT NAME^1^1^"
"RTN","VPSSRVY1",41,0)
 ;           VPSDATA(23)="ANSWER DATE/TIME^1^1^3150903.1211"
"RTN","VPSSRVY1",42,0)
 ;           VPSDATA(24)="INTERVIEWER NAME^1^1^JOE JOE"
"RTN","VPSSRVY1",43,0)
 ;           VPSDATA(25)="KIOSK IDENTIFIER^1^1^KIOSK ID 12"
"RTN","VPSSRVY1",44,0)
 ;           VPSDATA(26)="KIOSK SESSION IDENTIFIER^1^1^KIOSK SESS 100"
"RTN","VPSSRVY1",45,0)
 ;           VPSDATA(27)="KIOSK GROUP IDENTIFIER^1^1^KIOSK GRP ID 009"
"RTN","VPSSRVY1",46,0)
 ;           VPSDATA(28)="ANSWER TEXT^1^1^Absolutely"
"RTN","VPSSRVY1",47,0)
 ;           VPSDATA(29)="QUESTION NUMBER^2^^Q2"
"RTN","VPSSRVY1",48,0)
 ;           VPSDATA(30)="QUESTION CALCULATED VALUE^2^^QCV 400"
"RTN","VPSSRVY1",49,0)
 ;           VPSDATA(31)="QUESTION PRESENTED^2^^Have you travelled outside the U.S. in the last 5 TO 10 days?"
"RTN","VPSSRVY1",50,0)
 ;           VPSDATA(32)="ANSWER IDENTIFIER^2^1^AN2-A"
"RTN","VPSSRVY1",51,0)
 ;           VPSDATA(33)="INTERFACE USED^2^1^2"
"RTN","VPSSRVY1",52,0)
 ;           VPSDATA(34)="RESPONDENT^2^1^3"
"RTN","VPSSRVY1",53,0)
 ;           VPSDATA(35)="RESPONDENT NAME^2^1^LAST, FIRST"
"RTN","VPSSRVY1",54,0)
 ;           VPSDATA(36)="ANSWER DATE/TIME^2^1^3150903.1211"
"RTN","VPSSRVY1",55,0)
 ;           VPSDATA(37)="INTERVIEWER NAME^2^1^JOE JOE"
"RTN","VPSSRVY1",56,0)
 ;           VPSDATA(38)="KIOSK IDENTIFIER^2^1^KIOSK ID 12"
"RTN","VPSSRVY1",57,0)
 ;           VPSDATA(39)="KIOSK SESSION IDENTIFIER^2^1^KIOSK SESS 100"
"RTN","VPSSRVY1",58,0)
 ;           VPSDATA(40)="KIOSK GROUP IDENTIFIER^2^1^KIOSK GRP ID 009"
"RTN","VPSSRVY1",59,0)
 ;           VPSDATA(41)="ANSWER TEXT^2^1^I already answered this question."
"RTN","VPSSRVY1",60,0)
 ;            
"RTN","VPSSRVY1",61,0)
 ;                     MODFLG = A flag to indicate that an existing response is being modified
"RTN","VPSSRVY1",62,0)
 ;                              0 not an edit
"RTN","VPSSRVY1",63,0)
 ;                              1 edit existing data, but add new responses while keeping previous response
"RTN","VPSSRVY1",64,0)
 ;                              2 edit existing data, but over write previous response
"RTN","VPSSRVY1",65,0)
 ;
"RTN","VPSSRVY1",66,0)
 ;OUTPUT
"RTN","VPSSRVY1",67,0)
 ;  VPSRES =  1                   (Survey is stored successully)
"RTN","VPSSRVY1",68,0)
 ;           -1^Error Message     (Survey is not stored because an Error)
"RTN","VPSSRVY1",69,0)
 ;
"RTN","VPSSRVY1",70,0)
 S VPSRES=""
"RTN","VPSSRVY1",71,0)
 I +$G(VPSDFN)=0 S VPSRES="-1^Patient IEN not sent" Q
"RTN","VPSSRVY1",72,0)
 I '$D(^DPT(VPSDFN)) S VPSRES="-1^Patient not on File" Q
"RTN","VPSSRVY1",73,0)
 I '$D(VPSDATA) S VPSRES="-1^Survey Data not sent" Q
"RTN","VPSSRVY1",74,0)
 I $P($G(VPSDATA(3)),U,4)="" S VPSRES="-1^Template ID is required" Q
"RTN","VPSSRVY1",75,0)
 I $P($G(VPSDATA(1)),U,4)="" S VPSRES="-1^Survey Name is required" Q
"RTN","VPSSRVY1",76,0)
 I $P($G(VPSDATA(4)),U,4)="" S VPSRES="-1^Version is required" Q
"RTN","VPSSRVY1",77,0)
 N TRNDT S TRNDT=$$NOW^XLFDT()
"RTN","VPSSRVY1",78,0)
 S VPSDATA(1)=$$UPCASE^VPSSRVY2(VPSDATA(1))
"RTN","VPSSRVY1",79,0)
 I '$$OKID Q
"RTN","VPSSRVY1",80,0)
 Q:$G(VPSRES)'=""
"RTN","VPSSRVY1",81,0)
 ;
"RTN","VPSSRVY1",82,0)
 ; -- Prepare Survey Data to file
"RTN","VPSSRVY1",83,0)
 N SURVEY,SURVEYM,ID,TID,APDATA,ACDATA,QSTDATA,ANSDATA,WPDATA
"RTN","VPSSRVY1",84,0)
 N ER S ER=""
"RTN","VPSSRVY1",85,0)
 S ER=$$PREP(.VPSDATA,.SURVEY,.APDATA,.ACDATA,.QSTDATA,.ANSDATA,.WPDATA)
"RTN","VPSSRVY1",86,0)
 ;
"RTN","VPSSRVY1",87,0)
 S MODFLG=+$G(MODFLG)
"RTN","VPSSRVY1",88,0)
 ;
"RTN","VPSSRVY1",89,0)
 ; -- Lock patient survey
"RTN","VPSSRVY1",90,0)
 I ER="" S ER=$$LOCK(VPSDFN)
"RTN","VPSSRVY1",91,0)
 ;
"RTN","VPSSRVY1",92,0)
 ; If flag set to update an existing questionnaire do update and skip add
"RTN","VPSSRVY1",93,0)
 I MODFLG>0 S ER=$$UPDATE(VPSDFN,.VPSDATA,.SURVEY,.APDATA,.ACDATA,.QSTDATA,.ANSDATA,.WPDATA,MODFLG)
"RTN","VPSSRVY1",94,0)
 G:MODFLG>0 EX1
"RTN","VPSSRVY1",95,0)
 ;
"RTN","VPSSRVY1",96,0)
 ; Add survey identifiers to file # 853.85
"RTN","VPSSRVY1",97,0)
 I ER="" S ER=$$ADSRVYKY()
"RTN","VPSSRVY1",98,0)
 ;
"RTN","VPSSRVY1",99,0)
 ;========================================================================================================
"RTN","VPSSRVY1",100,0)
 ;========================================================================================================
"RTN","VPSSRVY1",101,0)
 I ER="" S ER=$$ADDDFN(VPSDFN)
"RTN","VPSSRVY1",102,0)
 I ER="" D
"RTN","VPSSRVY1",103,0)
 . S ID=$P(VPSDATA(3),U,4)
"RTN","VPSSRVY1",104,0)
 . S TID=$O(^VPS(853.85,"B",ID,""))
"RTN","VPSSRVY1",105,0)
 . I TID="" S ER="Error with Template "_$P(VPSDATA(3),U,4) G EX1
"RTN","VPSSRVY1",106,0)
 I ER="" S ER=$$ADDQST(VPSDFN,TID)
"RTN","VPSSRVY1",107,0)
 I ER="" S ER=$$ADDSRVY^VPSSRVY4(VPSDFN,TID,TRNDT)
"RTN","VPSSRVY1",108,0)
 I ER="" S ER=$$ADDRES^VPSSRVY4(VPSDFN,TID,TRNDT,.SURVEY,0)
"RTN","VPSSRVY1",109,0)
 I ER="" S ER=$$ADDAPPT^VPSSRVY4(VPSDFN,TID,TRNDT,.APDATA,0)
"RTN","VPSSRVY1",110,0)
 I ER="" S ER=$$ADDCALC^VPSSRVY4(VPSDFN,TID,TRNDT,.ACDATA,0)
"RTN","VPSSRVY1",111,0)
 I ER="" S ER=$$ADDQUEST^VPSSRVY4(VPSDFN,TID,TRNDT,.QSTDATA,.ANSDATA,.WPDATA,0)
"RTN","VPSSRVY1",112,0)
 ;I ER="" S ER=$$ADDANS(VPSDFN,TID,TRNDT,.ANSDATA,.WPDATA)
"RTN","VPSSRVY1",113,0)
 ;========================================================================================================
"RTN","VPSSRVY1",114,0)
 ;========================================================================================================
"RTN","VPSSRVY1",115,0)
 ; -- Result
"RTN","VPSSRVY1",116,0)
EX1 ;
"RTN","VPSSRVY1",117,0)
 I ER="" S VPSRES=1
"RTN","VPSSRVY1",118,0)
 I ER'="" D
"RTN","VPSSRVY1",119,0)
 . S ID=$P(VPSDATA(3),U,4)
"RTN","VPSSRVY1",120,0)
 . S TID=$O(^VPS(853.85,"B",ID,""))
"RTN","VPSSRVY1",121,0)
 . S VPSRES=-1_U_ER D CLNSRVY(VPSDFN,TID,TRNDT) ;delete unstorable survey
"RTN","VPSSRVY1",122,0)
 ;
"RTN","VPSSRVY1",123,0)
 ; -- unlock patient survey
"RTN","VPSSRVY1",124,0)
 D STOREQNM
"RTN","VPSSRVY1",125,0)
 D UNLOCK(VPSDFN)
"RTN","VPSSRVY1",126,0)
 ;
"RTN","VPSSRVY1",127,0)
 QUIT
"RTN","VPSSRVY1",128,0)
 ;
"RTN","VPSSRVY1",129,0)
OKID() ;
"RTN","VPSSRVY1",130,0)
 N QNAME,VER,ID,IEN
"RTN","VPSSRVY1",131,0)
 S QNAME=$P(VPSDATA(1),U,4)
"RTN","VPSSRVY1",132,0)
 S VER=+$P(VPSDATA(4),U,4)
"RTN","VPSSRVY1",133,0)
 S ID=$P(VPSDATA(3),U,4)
"RTN","VPSSRVY1",134,0)
 S IEN=$O(^VPS(853.85,"B",ID,""))
"RTN","VPSSRVY1",135,0)
 Q:IEN="" 1
"RTN","VPSSRVY1",136,0)
 I VER'=$$GET1^DIQ(853.85,IEN_",",2) S VPSRES="-1^Template ID and version do not match existing information" Q 0
"RTN","VPSSRVY1",137,0)
 I $L(QNAME)<3 S VPSRES=-1_U_"Survey name length too short: "_QNAME Q 0
"RTN","VPSSRVY1",138,0)
 I $L(QNAME)>240 S VPSRES=-1_U_"SURVEY NAME length violation: "_QNAME Q 0
"RTN","VPSSRVY1",139,0)
 I QNAME'=$$GET1^DIQ(853.85,IEN_",",1) D
"RTN","VPSSRVY1",140,0)
 . ; If name changed remove old name 
"RTN","VPSSRVY1",141,0)
 . N NM,ER
"RTN","VPSSRVY1",142,0)
 . S ER=""
"RTN","VPSSRVY1",143,0)
 . ;S NM=$$GET1(853.85,IEN_",",1)
"RTN","VPSSRVY1",144,0)
 . ;D CLRNM(VER,NM)
"RTN","VPSSRVY1",145,0)
 . S ER=$$UPDATENM(IEN,QNAME)
"RTN","VPSSRVY1",146,0)
 . I ER]"" S VPSRES=-1_U_ER
"RTN","VPSSRVY1",147,0)
 Q 1
"RTN","VPSSRVY1",148,0)
STOREQNM ;
"RTN","VPSSRVY1",149,0)
 ;
"RTN","VPSSRVY1",150,0)
 N QNAME,VER
"RTN","VPSSRVY1",151,0)
 S QNAME=$P(VPSDATA(1),U,4)
"RTN","VPSSRVY1",152,0)
 S VER=$P(VPSDATA(4),U,4)
"RTN","VPSSRVY1",153,0)
 I '$D(^VPS(853.875,"B",QNAME)) D STOREQN(QNAME)
"RTN","VPSSRVY1",154,0)
 I '$D(^VPS(853.875,"B",QNAME_":::V "_VER)) D STOREQN(QNAME_":::V "_VER)
"RTN","VPSSRVY1",155,0)
 Q
"RTN","VPSSRVY1",156,0)
 ;
"RTN","VPSSRVY1",157,0)
STOREQN(X) ;
"RTN","VPSSRVY1",158,0)
 N DIC
"RTN","VPSSRVY1",159,0)
 L +^VPS(853.875):5 E  Q
"RTN","VPSSRVY1",160,0)
 S DIC="^VPS(853.875,"
"RTN","VPSSRVY1",161,0)
 S DIC(0)=""
"RTN","VPSSRVY1",162,0)
 D FILE^DICN
"RTN","VPSSRVY1",163,0)
 L -^VPS(853.875)
"RTN","VPSSRVY1",164,0)
 Q
"RTN","VPSSRVY1",165,0)
 ;
"RTN","VPSSRVY1",166,0)
CLRNM(VER,NM) ; Survey Name changed so remove previous name
"RTN","VPSSRVY1",167,0)
 N FIL S FIL=853.875
"RTN","VPSSRVY1",168,0)
 N IE
"RTN","VPSSRVY1",169,0)
 S IE=$O(^VPS(853.875,"B",NM,""))
"RTN","VPSSRVY1",170,0)
 N FDA S FDA(FIL,IE_",",.01)="@"
"RTN","VPSSRVY1",171,0)
 N FDAERR D FILE^DIE("","FDA","FDAERR")
"RTN","VPSSRVY1",172,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",173,0)
 S IE=$O(^VPS(853.875,"B",NM_":::V "_VER,""))
"RTN","VPSSRVY1",174,0)
 N FDA S FDA(FIL,IE_",",.01)="@"
"RTN","VPSSRVY1",175,0)
 N FDAERR D FILE^DIE("","FDA","FDAERR")
"RTN","VPSSRVY1",176,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",177,0)
 ;
"RTN","VPSSRVY1",178,0)
UPDATENM(IEN,NM) ; Update Survey Name
"RTN","VPSSRVY1",179,0)
 N FIL S FIL=853.85
"RTN","VPSSRVY1",180,0)
 N FDA S FDA(FIL,IEN_",",1)=NM
"RTN","VPSSRVY1",181,0)
 N FDAERR D FILE^DIE("","FDA","FDAERR")
"RTN","VPSSRVY1",182,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",183,0)
 ;
"RTN","VPSSRVY1",184,0)
 ;
"RTN","VPSSRVY1",185,0)
ADSRVYKY() ;add survey Identifiers
"RTN","VPSSRVY1",186,0)
 N FIL S FIL=853.85
"RTN","VPSSRVY1",187,0)
 N SUBS S SUBS="+1,"
"RTN","VPSSRVY1",188,0)
 N FDA,FDAERR
"RTN","VPSSRVY1",189,0)
 N FLD S FLD=0
"RTN","VPSSRVY1",190,0)
 N QNAME,VER,ID,IEN,INM
"RTN","VPSSRVY1",191,0)
 S QNAME=$P(VPSDATA(1),U,4)
"RTN","VPSSRVY1",192,0)
 S VER=$P(VPSDATA(4),U,4)
"RTN","VPSSRVY1",193,0)
 S ID=$P(VPSDATA(3),U,4)
"RTN","VPSSRVY1",194,0)
 S INM=$P(VPSDATA(2),U,4)
"RTN","VPSSRVY1",195,0)
 Q:$O(^VPS(FIL,"B",ID,""))'="" ""
"RTN","VPSSRVY1",196,0)
 I $L(QNAME)<3 Q "Survey name length too short "_QNAME
"RTN","VPSSRVY1",197,0)
 I $L(QNAME)>240 Q "SURVEY NAME length violation "_QNAME
"RTN","VPSSRVY1",198,0)
 I $L(INM)<3 Q "QUESTIONNAIRE INTERNAL NAME length violation "_INM
"RTN","VPSSRVY1",199,0)
 ;
"RTN","VPSSRVY1",200,0)
 ; -- fill in FDA with the survey data
"RTN","VPSSRVY1",201,0)
 S FDA(FIL,SUBS,.01)=ID
"RTN","VPSSRVY1",202,0)
 S FDA(FIL,SUBS,1)=QNAME
"RTN","VPSSRVY1",203,0)
 S FDA(FIL,SUBS,2)=VER
"RTN","VPSSRVY1",204,0)
 ;S FDA(853.85,SUBS,3)=INM
"RTN","VPSSRVY1",205,0)
 ;
"RTN","VPSSRVY1",206,0)
 ; -- store the survey data
"RTN","VPSSRVY1",207,0)
 D UPDATE^DIE("E","FDA","","FDAERR")
"RTN","VPSSRVY1",208,0)
 I '$D(FDAERR) D
"RTN","VPSSRVY1",209,0)
 . K ^TMP("CSQ ARRAY",$J)
"RTN","VPSSRVY1",210,0)
 . S ^TMP("CSQ ARRAY",$J,1,0)=INM
"RTN","VPSSRVY1",211,0)
 . S SUBS=$O(^VPS(FIL,"B",ID,""))_","
"RTN","VPSSRVY1",212,0)
 . D WP^DIE(FIL,SUBS,3,"","^TMP(""CSQ ARRAY"",$J)","FDAERR")
"RTN","VPSSRVY1",213,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",214,0)
 ;
"RTN","VPSSRVY1",215,0)
ADDDFN(VPSDFN) ;Add Survey (patient level)
"RTN","VPSSRVY1",216,0)
 QUIT:$D(^VPS(853.8,VPSDFN,0)) ""
"RTN","VPSSRVY1",217,0)
 N FIL S FIL=853.8
"RTN","VPSSRVY1",218,0)
 N IENS S IENS(1)=VPSDFN
"RTN","VPSSRVY1",219,0)
 N FDA S FDA(FIL,"+1,",.01)=VPSDFN
"RTN","VPSSRVY1",220,0)
 N FDAERR D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSSRVY1",221,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",222,0)
 ;
"RTN","VPSSRVY1",223,0)
ADDQST(VPSDFN,TMPIEN) ;add  (QUESTIONNAIRE IDENTIFIER level)
"RTN","VPSSRVY1",224,0)
 Q:$D(^VPS(853.8,VPSDFN,1,TID)) ""
"RTN","VPSSRVY1",225,0)
 N FIL S FIL=853.805
"RTN","VPSSRVY1",226,0)
 N IENS S IENS(1)=TMPIEN
"RTN","VPSSRVY1",227,0)
 N SUBS S SUBS="+1,"_VPSDFN_","
"RTN","VPSSRVY1",228,0)
 N FDA,FDAERR
"RTN","VPSSRVY1",229,0)
 N FLD S FLD=0
"RTN","VPSSRVY1",230,0)
 ;
"RTN","VPSSRVY1",231,0)
 S FDA(FIL,SUBS,.01)=TMPIEN
"RTN","VPSSRVY1",232,0)
 ;
"RTN","VPSSRVY1",233,0)
 ; -- store the survey data
"RTN","VPSSRVY1",234,0)
 D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSSRVY1",235,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",236,0)
 ;
"RTN","VPSSRVY1",237,0)
UPDATE(VPSDFN,VPSDATA,SURVEY,APDATA,ACDATA,QSTDATA,ANSDATA,WPDATA,MODFLG) ;
"RTN","VPSSRVY1",238,0)
 N ER,ID,TID,TRNDT
"RTN","VPSSRVY1",239,0)
 S ER=""
"RTN","VPSSRVY1",240,0)
 S ID=$P(VPSDATA(3),U,4)
"RTN","VPSSRVY1",241,0)
 S TID=$O(^VPS(853.85,"B",ID,""))
"RTN","VPSSRVY1",242,0)
 I TID="" S ER="No record for this questionnaire "_ID
"RTN","VPSSRVY1",243,0)
 I ER="",'$D(^VPS(853.8,VPSDFN,1,TID)) S ER="Cannot update, no record of patient "_VPSDFN_" ever submitting this questionnaire "_$P(VPSDATA(3),U,4)
"RTN","VPSSRVY1",244,0)
 I ER="" D
"RTN","VPSSRVY1",245,0)
 . I $G(SURVEY(.01))=""!($G(SURVEY(.02))="") S ER="Key information missing: Response ID: "_$G(SURVEY(.01))_" date/time questionnaire taken "_$G(SURVEY(.02))
"RTN","VPSSRVY1",246,0)
 . Q:ER]""
"RTN","VPSSRVY1",247,0)
 . S TRNDT=$O(^VPS(853.8,"D",SURVEY(.01),SURVEY(.02),VPSDFN,TID,""),-1)
"RTN","VPSSRVY1",248,0)
 . I TRNDT="" S ER="No questionnaire for patient "_VPSDFN_" matches information Questionnaire :"_ID_" Response ID: "_SURVEY(.01)_" date/time questionnaire taken "_SURVEY(.02)
"RTN","VPSSRVY1",249,0)
 I ER="" S ER=$$ADDRES^VPSSRVY4(VPSDFN,TID,TRNDT,.SURVEY,MODFLG)
"RTN","VPSSRVY1",250,0)
 I ER="" S ER=$$ADDAPPT^VPSSRVY4(VPSDFN,TID,TRNDT,.APDATA,MODFLG)
"RTN","VPSSRVY1",251,0)
 I ER="" S ER=$$ADDCALC^VPSSRVY4(VPSDFN,TID,TRNDT,.ACDATA,MODFLG)
"RTN","VPSSRVY1",252,0)
 I ER="" S ER=$$ADDQUEST^VPSSRVY4(VPSDFN,TID,TRNDT,.QSTDATA,.ANSDATA,.WPDATA,MODFLG)
"RTN","VPSSRVY1",253,0)
 Q ER
"RTN","VPSSRVY1",254,0)
CLNSRVY(VPSDFN,TID,TRNDT) ; delete Questionnaire
"RTN","VPSSRVY1",255,0)
 N FIL S FIL=853.81
"RTN","VPSSRVY1",256,0)
 N FDA S FDA(FIL,TRNDT_","_TID_","_VPSDFN_",",.01)="@"
"RTN","VPSSRVY1",257,0)
 N ERR D FILE^DIE("","FDA")
"RTN","VPSSRVY1",258,0)
 QUIT
"RTN","VPSSRVY1",259,0)
 ;
"RTN","VPSSRVY1",260,0)
GETFLD(SVYLST,APSVYLST,ACSVYLST,QSVYLST,ANSVYLST,WPLST,FLDLEN,REQFLD) ;get field maps
"RTN","VPSSRVY1",261,0)
 N LN,LINE,STRING
"RTN","VPSSRVY1",262,0)
 F LN=1:1 S LINE=$T(LST+LN),STRING=$P(LINE,";;",2) Q:STRING=""  S SVYLST($P(STRING,U,2))=$P(STRING,U),FLDLEN(853.811,$P(STRING,U,2))=$P(STRING,U,4,5),REQFLD(853.811,$P(STRING,U,2))=$P(STRING,U,6)
"RTN","VPSSRVY1",263,0)
 F LN=1:1 S LINE=$T(APLST+LN),STRING=$P(LINE,";;",2) Q:STRING=""  S APSVYLST($P(STRING,U,2))=$P(STRING,U),FLDLEN(853.8111,$P(STRING,U,2))=$P(STRING,U,4,5),REQFLD(853.8111,$P(STRING,U,2))=$P(STRING,U,6)
"RTN","VPSSRVY1",264,0)
 F LN=1:1 S LINE=$T(ACLST+LN),STRING=$P(LINE,";;",2) Q:STRING=""  S ACSVYLST($P(STRING,U,2))=$P(STRING,U),FLDLEN(853.8112,$P(STRING,U,2))=$P(STRING,U,4,5),REQFLD(853.8112,$P(STRING,U,2))=$P(STRING,U,6)
"RTN","VPSSRVY1",265,0)
 F LN=1:1 S LINE=$T(QSTLST+LN),STRING=$P(LINE,";;",2) Q:STRING=""  D
"RTN","VPSSRVY1",266,0)
 . S QSVYLST($P(STRING,U,2))=$P(STRING,U)
"RTN","VPSSRVY1",267,0)
 . S FLDLEN(853.8113,$P(STRING,U,2))=$P(STRING,U,4,5)
"RTN","VPSSRVY1",268,0)
 . S REQFLD(853.8113,$P(STRING,U,2))=$P(STRING,U,6)
"RTN","VPSSRVY1",269,0)
 . I $P(STRING,U,3)=1 S WPLST(853.8113,$P(STRING,U))=1
"RTN","VPSSRVY1",270,0)
 F LN=1:1 S LINE=$T(ANSLST+LN),STRING=$P(LINE,";;",2) Q:STRING=""  D
"RTN","VPSSRVY1",271,0)
 . S ANSVYLST($P(STRING,U,2))=$P(STRING,U)
"RTN","VPSSRVY1",272,0)
 . S FLDLEN(853.81133,$P(STRING,U,2))=$P(STRING,U,4,5)
"RTN","VPSSRVY1",273,0)
 . S REQFLD(853.81133,$P(STRING,U,2))=$P(STRING,U,6)
"RTN","VPSSRVY1",274,0)
 . I $P(STRING,U,3)=1 S WPLST(853.81133,$P(STRING,U))=1
"RTN","VPSSRVY1",275,0)
 QUIT
"RTN","VPSSRVY1",276,0)
 ;
"RTN","VPSSRVY1",277,0)
PREP(INDATA,SURVEY,APDAT,ACDAT,QDAT,ANSDAT,WPFLD) ;Based on Vetlink input data, prepare survey data to file
"RTN","VPSSRVY1",278,0)
 N SVYFLD,MSVYFLD,FLDLEN,APFLD,ACFLD,QSTFLD,ANFLD,FLDLEN,REQFLD
"RTN","VPSSRVY1",279,0)
 D GETFLD(.SVYFLD,.APFLD,.ACFLD,.QSTFLD,.ANFLD,.WPFLD,.FLDLEN,.REQFLD)
"RTN","VPSSRVY1",280,0)
 ;
"RTN","VPSSRVY1",281,0)
 N FLD,FLDNO,FLDVAL,MULTSEQ
"RTN","VPSSRVY1",282,0)
 N ER S ER=""
"RTN","VPSSRVY1",283,0)
 N SEQ S SEQ=0
"RTN","VPSSRVY1",284,0)
 N QLC
"RTN","VPSSRVY1",285,0)
 N ALC
"RTN","VPSSRVY1",286,0)
 N SQN
"RTN","VPSSRVY1",287,0)
 N QLEN
"RTN","VPSSRVY1",288,0)
 ;
"RTN","VPSSRVY1",289,0)
 F  S SEQ=$O(INDATA(SEQ)) Q:'SEQ  D  QUIT:ER'=""
"RTN","VPSSRVY1",290,0)
 . S MULTSEQ=$P(INDATA(SEQ),U,2) ;multiple sequence # for multiple field such as Questions, responses, and calculated values
"RTN","VPSSRVY1",291,0)
 . S FLD=$P(INDATA(SEQ),U) I FLD="" S ER="Field Name is required" QUIT  ;Input Field Name
"RTN","VPSSRVY1",292,0)
 . S SQN=$P(INDATA(SEQ),U,3)
"RTN","VPSSRVY1",293,0)
 . S FLDVAL=$P(INDATA(SEQ),U,4)
"RTN","VPSSRVY1",294,0)
 . S FLDNO=$S($D(APFLD(FLD)):APFLD(FLD),$D(ACFLD(FLD)):ACFLD(FLD),$D(QSTFLD(FLD)):QSTFLD(FLD),$D(ANFLD(FLD)):ANFLD(FLD),1:$G(SVYFLD(FLD))) ;Field #
"RTN","VPSSRVY1",295,0)
 . I FLDNO="" S ER="Invalid Field - "_FLD QUIT
"RTN","VPSSRVY1",296,0)
 . I $D(SVYFLD(FLD)) S SURVEY(FLDNO)=FLDVAL,ER=$$LENCHK($G(FLDLEN(853.811,FLDNO)),FLDVAL,FLDNO) I ER="" S ER=$$REQ($G(REQFLD(853.811,FLD)),FLDVAL,FLD)
"RTN","VPSSRVY1",297,0)
 . I $D(APFLD(FLD)) S APDAT(MULTSEQ,FLDNO)=FLDVAL,ER=$$LENCHK($G(FLDLEN(853.8111,FLDNO)),FLDVAL,FLDNO) I ER="" S ER=$$REQ($G(REQFLD(853.8111,FLD)),FLDVAL,FLD)
"RTN","VPSSRVY1",298,0)
 . I $D(ACFLD(FLD)) S ACDAT(MULTSEQ,FLDNO)=FLDVAL,ER=$$LENCHK($G(FLDLEN(853.8112,FLDNO)),FLDVAL,FLDNO) I ER="" S ER=$$REQ($G(REQFLD(853.8112,FLD)),FLDVAL,FLD)
"RTN","VPSSRVY1",299,0)
 . I $D(QSTFLD(FLD)) D
"RTN","VPSSRVY1",300,0)
 .. I $D(WPFLD(853.8113,FLDNO)) S QLC(MULTSEQ)=$G(QLC(MULTSEQ))+1,QDAT(MULTSEQ,FLDNO,QLC(MULTSEQ))=FLDVAL
"RTN","VPSSRVY1",301,0)
 .. E  S QDAT(MULTSEQ,FLDNO)=FLDVAL,ER=$$LENCHK($G(FLDLEN(853.8113,FLDNO)),FLDVAL,FLDNO) I ER="" S ER=$$REQ($G(REQFLD(853.8113,FLD)),FLDVAL,FLD)
"RTN","VPSSRVY1",302,0)
 . I $D(ANFLD(FLD)) D
"RTN","VPSSRVY1",303,0)
 .. I $D(WPFLD(853.81133,FLDNO)) D
"RTN","VPSSRVY1",304,0)
 ... S ALC(MULTSEQ)=$G(ALC(MULTSEQ))+1,ANSDAT(MULTSEQ,+SQN,FLDNO,ALC(MULTSEQ))=FLDVAL
"RTN","VPSSRVY1",305,0)
 .. E  D
"RTN","VPSSRVY1",306,0)
 ... S ANSDAT(MULTSEQ,+SQN,FLDNO)=FLDVAL,ER=$$LENCHK($G(FLDLEN(853.81133,FLDNO)),FLDVAL,FLDNO) I ER="" S ER=$$REQ($G(REQFLD(853.81133,FLD)),FLDVAL,FLD)
"RTN","VPSSRVY1",307,0)
 ... I FLDNO=1,FLDVAL="" N %,%I,%H,X D NOW^%DTC S ANSDAT(MULTSEQ,+SQN,FLDNO)=%
"RTN","VPSSRVY1",308,0)
 N I,J
"RTN","VPSSRVY1",309,0)
 S I=0
"RTN","VPSSRVY1",310,0)
 F  S I=$O(QDAT(I)) Q:'I  S J=0,QLEN(I)=0 F  S J=$O(QDAT(I,2,J)) Q:'J  S QLEN(I)=QLEN(I)+$L(QDAT(I,2,J))
"RTN","VPSSRVY1",311,0)
 S I=0
"RTN","VPSSRVY1",312,0)
 F  S I=$O(QLEN(I)) Q:'I  I QLEN(I)<1 S ER="Data incorrect length for field QUESTION PRESENTED"
"RTN","VPSSRVY1",313,0)
 ;
"RTN","VPSSRVY1",314,0)
 QUIT ER
"RTN","VPSSRVY1",315,0)
 ;
"RTN","VPSSRVY1",316,0)
 ;
"RTN","VPSSRVY1",317,0)
LENCHK(LENSTR,STRING,FLD) ;
"RTN","VPSSRVY1",318,0)
 ;
"RTN","VPSSRVY1",319,0)
 N MIN,MAX
"RTN","VPSSRVY1",320,0)
 S MIN=+$P(LENSTR,U)
"RTN","VPSSRVY1",321,0)
 S MAX=+$P(LENSTR,U,2)
"RTN","VPSSRVY1",322,0)
 I MIN=0,MAX=0 Q ""
"RTN","VPSSRVY1",323,0)
 I MIN>0,MIN>$L(STRING) Q "Data incorrect length for field "_FLD
"RTN","VPSSRVY1",324,0)
 I MAX>0,MAX<$L(STRING) Q "Data incorrect length for field "_FLD
"RTN","VPSSRVY1",325,0)
 Q ""
"RTN","VPSSRVY1",326,0)
 ;
"RTN","VPSSRVY1",327,0)
REQ(REQFLG,STR,FLD) ;
"RTN","VPSSRVY1",328,0)
 I '+REQFLG Q ""
"RTN","VPSSRVY1",329,0)
 I STR="" Q "Data required for field "_FLD
"RTN","VPSSRVY1",330,0)
 Q ""
"RTN","VPSSRVY1",331,0)
 ;
"RTN","VPSSRVY1",332,0)
ERROR(FDAERR) ;return error text
"RTN","VPSSRVY1",333,0)
 QUIT:'$D(FDAERR) ""
"RTN","VPSSRVY1",334,0)
 N ERRNUM S ERRNUM=0
"RTN","VPSSRVY1",335,0)
 S ERRNUM=$O(FDAERR("DIERR",ERRNUM))
"RTN","VPSSRVY1",336,0)
 N ERRTXT S ERRTXT=""
"RTN","VPSSRVY1",337,0)
 S:ERRNUM ERRTXT=FDAERR("DIERR",ERRNUM,"TEXT",1)
"RTN","VPSSRVY1",338,0)
 QUIT ERRTXT
"RTN","VPSSRVY1",339,0)
 ;
"RTN","VPSSRVY1",340,0)
LOCK(VPSDFN) ;Lock this process
"RTN","VPSSRVY1",341,0)
 L +^TMP("VPSSRVY1",VPSDFN):3 E  QUIT "Another process updating survey for this patient"
"RTN","VPSSRVY1",342,0)
 QUIT ""
"RTN","VPSSRVY1",343,0)
 ;
"RTN","VPSSRVY1",344,0)
UNLOCK(VPSDFN) ;Unlock this process
"RTN","VPSSRVY1",345,0)
 L -^TMP("VPSSRVY1",VPSDFN)
"RTN","VPSSRVY1",346,0)
 QUIT
"RTN","VPSSRVY1",347,0)
 ;
"RTN","VPSSRVY1",348,0)
 ;
"RTN","VPSSRVY1",349,0)
 ; Field # ^ Field Name ^ Word process field flag ^ Min length ^ Max lenght ^ Required
"RTN","VPSSRVY1",350,0)
 ;
"RTN","VPSSRVY1",351,0)
LST ; list of 853.811 fields (Questionnaire response)
"RTN","VPSSRVY1",352,0)
 ;;.01^RESPONSE IDENTIFIER^^3^250^1
"RTN","VPSSRVY1",353,0)
 ;;.02^DATE/TIME TAKEN
"RTN","VPSSRVY1",354,0)
 ;;.03^DATE/TIME MODIFIED
"RTN","VPSSRVY1",355,0)
 ;;.04^COMPLETION STATUS^^^^1
"RTN","VPSSRVY1",356,0)
 ;;.05^PATIENT SAFETY^^^^1
"RTN","VPSSRVY1",357,0)
 ;;.06^IMMEDIATE ACTION^^^^1
"RTN","VPSSRVY1",358,0)
 ;;4^SURVEY CALCULATED VALUE^^^^1
"RTN","VPSSRVY1",359,0)
 ;;1^NAME^^3^255^1
"RTN","VPSSRVY1",360,0)
 ;;9^INTERNAL
"RTN","VPSSRVY1",361,0)
 ;;10^VERSION^^^^1
"RTN","VPSSRVY1",362,0)
 ;;11^TEMPLATE ID^^3^60^1
"RTN","VPSSRVY1",363,0)
 ;;
"RTN","VPSSRVY1",364,0)
APLST ; list of 853.8111 fields (Appointment check-in)
"RTN","VPSSRVY1",365,0)
 ;;.01^APPOINTMENT CHECK-IN ID
"RTN","VPSSRVY1",366,0)
 ;;
"RTN","VPSSRVY1",367,0)
ACLST ; list of 853.8112 fields (ADDITIONAL CALCULATED VALUE)
"RTN","VPSSRVY1",368,0)
 ;;.01^ADDITIONAL CALC VALUE NAME^^1^20^1
"RTN","VPSSRVY1",369,0)
 ;;.02^ADDITIONAL CALC VALUE SCORE^^1^20^1
"RTN","VPSSRVY1",370,0)
 ;;
"RTN","VPSSRVY1",371,0)
QSTLST ; list of 853.8113 fields (QUESTIONS)
"RTN","VPSSRVY1",372,0)
 ;;.01^QUESTION NUMBER^^1^4^1
"RTN","VPSSRVY1",373,0)
 ;;1^QUESTION CALCULATED VALUE^^3^250^1
"RTN","VPSSRVY1",374,0)
 ;;2^QUESTION PRESENTED^1^1^^1
"RTN","VPSSRVY1",375,0)
 ;;
"RTN","VPSSRVY1",376,0)
ANSLST ; list of 853.81133 fields (ANSWER)
"RTN","VPSSRVY1",377,0)
 ;;.01^ANSWER IDENTIFIER^^3^250^1
"RTN","VPSSRVY1",378,0)
 ;;.02^INTERFACE USED^^^^1
"RTN","VPSSRVY1",379,0)
 ;;.03^RESPONDENT^^^^1
"RTN","VPSSRVY1",380,0)
 ;;.04^RESPONDENT NAME^^0^60
"RTN","VPSSRVY1",381,0)
 ;;1^ANSWER DATE/TIME
"RTN","VPSSRVY1",382,0)
 ;;2^INTERVIEWER NAME^^0^60
"RTN","VPSSRVY1",383,0)
 ;;3^KIOSK IDENTIFIER^^3^250
"RTN","VPSSRVY1",384,0)
 ;;4^KIOSK SESSION IDENTIFIER^^3^250
"RTN","VPSSRVY1",385,0)
 ;;5^KIOSK GROUP IDENTIFIER^^3^250
"RTN","VPSSRVY1",386,0)
 ;;6^ANSWER TEXT^1
"RTN","VPSSRVY1",387,0)
 ;;
"RTN","VPSSRVY1",388,0)
 QUIT
"RTN","VPSSRVY2")
0^4^B56708984
"RTN","VPSSRVY2",1,0)
VPSSRVY2 ;WOIFO/BT - VPS CLINICAL SURVEY QUESTIONNAIRE;01/16/2015 11:23
"RTN","VPSSRVY2",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5,14**;Jan 16, 2015;Build 26
"RTN","VPSSRVY2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSSRVY2",4,0)
 ;
"RTN","VPSSRVY2",5,0)
 ; External Reference DBIA#
"RTN","VPSSRVY2",6,0)
 ; ------------------------
"RTN","VPSSRVY2",7,0)
 ;
"RTN","VPSSRVY2",8,0)
 QUIT
"RTN","VPSSRVY2",9,0)
GETRPC(VPSRES,VPSPID,VPSTYP,VPSQIEN,VPSQNM,VPSFDT,VPSTDT,VPSNUM,AHFLG) ;
"RTN","VPSSRVY2",10,0)
 ;INPUT
"RTN","VPSSRVY2",11,0)
 ;  VPSPID  : Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSSRVY2",12,0)
 ;  VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSSRVY2",13,0)
 ;  VPSQIEN : Questionnaire IEN
"RTN","VPSSRVY2",14,0)
 ;  VPSQNM  : Questionnaire Name
"RTN","VPSSRVY2",15,0)
 ;  VPSFDT  : From Date
"RTN","VPSSRVY2",16,0)
 ;  VPSTDT  : To Date
"RTN","VPSSRVY2",17,0)
 ;  VPSNUM  : Number of Occurrences
"RTN","VPSSRVY2",18,0)
 ;  AHFLG   : Answer history Flag
"RTN","VPSSRVY2",19,0)
 ;            current answer          - 0 (default)
"RTN","VPSSRVY2",20,0)
 ;            all answers to question - 1     1
"RTN","VPSSRVY2",21,0)
 ;
"RTN","VPSSRVY2",22,0)
 ;OUTPUT
"RTN","VPSSRVY2",23,0)
 ; If error
"RTN","VPSSRVY2",24,0)
 ;  VPSRES(0)=-1^Error Message
"RTN","VPSSRVY2",25,0)
 ;
"RTN","VPSSRVY2",26,0)
 ; otherwise
"RTN","VPSSRVY2",27,0)
 ;  VPSRES(0)=1^Number of Questionnaires
"RTN","VPSSRVY2",28,0)
 ;  VPSRES(1) = <CSQ>
"RTN","VPSSRVY2",29,0)
 ;  VPSRES(2) =     PATIENT ^ QUESTIONNAIRE TEMPLATE ID ^ QUESTIONNAIRE TEMPLATE NAME ^ QUESTIONNAIRE TEMPLATE IEN ^ VERSION
"RTN","VPSSRVY2",30,0)
 ;  VPSRES(3) =     <RESPONSE>
"RTN","VPSSRVY2",31,0)
 ;  VPSRES(4) =          RESPONSE IDENTIFIER ^ DATE/TIME TAKEN ^ DATE/TIME LAST MODIFIED ^ COMPLETION STATUS ^ PATIENT SAFETY ^ IMMEDIATE ACTION ^ SURVEY CALCULATED VALUE
"RTN","VPSSRVY2",32,0)
 ;  VPSRES(5) =          <APPOINTMENT CHECK-IN>
"RTN","VPSSRVY2",33,0)
 ;  VPSRES(6) =               APPOINTMENT CHECK-IN ID
"RTN","VPSSRVY2",34,0)
 ;  VPSRES(7) =          </APPOINTMENT CHECK-IN>
"RTN","VPSSRVY2",35,0)
 ;  VPSRES(8) =          <ADDITIONAL CALCULATED VALUE>
"RTN","VPSSRVY2",36,0)
 ;  VPSRES(9) =               ADDITIONAL CALC VALUE NAME ^ ADDITIONAL CALC VALUE SCORE
"RTN","VPSSRVY2",37,0)
 ;  VPSRES(10) =          </ADDITIONAL CALCULATED VALUE>
"RTN","VPSSRVY2",38,0)
 ;  VPSRES(11) =          <QUESTIONS>
"RTN","VPSSRVY2",39,0)
 ;  VPSRES(12) =               QUESTION NUMBER ^ QUESTION CALCULATED VALUE
"RTN","VPSSRVY2",40,0)
 ;  VPSRES(13) =               <QUESTION PRESENTED>
"RTN","VPSSRVY2",41,0)
 ;  VPSRES(14) =                    QUESTION TEXT....
"RTN","VPSSRVY2",42,0)
 ;  VPSRES(15) =               </QUESTION PRESENTED>
"RTN","VPSSRVY2",43,0)
 ;  VPSRES(16) =               <ANSWER>
"RTN","VPSSRVY2",44,0)
 ;  VPSRES(17) =                    ANSWER IDENTIFIER ^ INTERFACE USED ^ RESPONDENT ^ RESPONDENT NAME ^ ANSWER DATE/TIME ^ INTERVIEWER NAME ^ KIOSK IDENTIFIER ^ KIOSK SESSION IDENTIFIER ^ KIOSK GROUP IDENTIFIER
"RTN","VPSSRVY2",45,0)
 ;  VPSRES(18) =                    <ANSWER RESPONSE>
"RTN","VPSSRVY2",46,0)
 ;  VPSRES(19) =                         ANSWER TEXT
"RTN","VPSSRVY2",47,0)
 ;  VPSRES(20) =                    </ANSWER RESPONSE>
"RTN","VPSSRVY2",48,0)
 ;  VPSRES(21) =               </ANSWER>
"RTN","VPSSRVY2",49,0)
 ;  VPSRES(22) =          </QUESTIONS>
"RTN","VPSSRVY2",50,0)
 ;  VPSRES(23) =     </RESPONSE>
"RTN","VPSSRVY2",51,0)
 ;  VPSRES(24) = </CSQ>
"RTN","VPSSRVY2",52,0)
 ;  VPSRES(25) = <CSQ> 
"RTN","VPSSRVY2",53,0)
 ;  ...
"RTN","VPSSRVY2",54,0)
 ;  VPSRES(n) = </CSQ>
"RTN","VPSSRVY2",55,0)
 ;
"RTN","VPSSRVY2",56,0)
 ;
"RTN","VPSSRVY2",57,0)
 K ^TMP("VPSGSRY",$J)
"RTN","VPSSRVY2",58,0)
 S VPSRES=$NA(^TMP("VPSGSRY",$J))
"RTN","VPSSRVY2",59,0)
 N VPSDFN
"RTN","VPSSRVY2",60,0)
 I $G(VPSTYP)="" S VPSTYP="DFN"
"RTN","VPSSRVY2",61,0)
 I $G(VPSQNM)]"" S VPSQNM=$$UPCASE(VPSQNM)
"RTN","VPSSRVY2",62,0)
 S VPSDFN=$$VALIDATE^VPSRPC1($G(VPSTYP),$G(VPSPID))
"RTN","VPSSRVY2",63,0)
 I +VPSDFN=-1 D ADDERR(VPSDFN) Q
"RTN","VPSSRVY2",64,0)
 I $G(VPSDFN)="" D ADDERR("-1^Patient IEN not sent") Q
"RTN","VPSSRVY2",65,0)
 I '$D(^DPT(VPSDFN)) D ADDERR("-1^Patient not found") Q
"RTN","VPSSRVY2",66,0)
 I '$D(^VPS(853.8,VPSDFN)) D ADDERR("-1^No questionnaires found") Q
"RTN","VPSSRVY2",67,0)
 ;
"RTN","VPSSRVY2",68,0)
 N FDT,CNT,FLG,DAT,DATA,X,Y,TID,TMP
"RTN","VPSSRVY2",69,0)
 S FDT=0,TID=0
"RTN","VPSSRVY2",70,0)
 S CNT=0,FLG=0
"RTN","VPSSRVY2",71,0)
 I $G(VPSFDT)["T" S X=VPSFDT D ^%DT S VPSFDT=Y I Y=-1 D ADDERR("-1^Issue with From Date") Q
"RTN","VPSSRVY2",72,0)
 I $G(VPSTDT)["T" S X=VPSTDT D ^%DT S VPSTDT=Y I Y=-1 D ADDERR("-1^Issue with To Date") Q
"RTN","VPSSRVY2",73,0)
 I $G(VPSFDT) S FDT=$P(VPSFDT,".")-.000001
"RTN","VPSSRVY2",74,0)
 I $G(VPSTDT) S VPSTDT=$P(VPSTDT,".")_".999999"
"RTN","VPSSRVY2",75,0)
 N VFDT
"RTN","VPSSRVY2",76,0)
 S VFDT=FDT
"RTN","VPSSRVY2",77,0)
 F  S TID=$O(^VPS(853.8,VPSDFN,1,TID)) Q:'TID  D
"RTN","VPSSRVY2",78,0)
 . S FDT=VFDT
"RTN","VPSSRVY2",79,0)
 . F  S FDT=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT)) Q:'FDT  D
"RTN","VPSSRVY2",80,0)
 .. I $G(VPSTDT),FDT>VPSTDT Q
"RTN","VPSSRVY2",81,0)
 .. I $$PASSCHK(TID,$G(VPSQIEN),$G(VPSQNM)) S TMP(FDT,TID)=""
"RTN","VPSSRVY2",82,0)
 S FDT=""
"RTN","VPSSRVY2",83,0)
 N LN
"RTN","VPSSRVY2",84,0)
 S LN=0
"RTN","VPSSRVY2",85,0)
 F  S FDT=$O(TMP(FDT)) Q:'FDT!(FLG)  D
"RTN","VPSSRVY2",86,0)
 . S TID=""
"RTN","VPSSRVY2",87,0)
 . F  S TID=$O(TMP(FDT,TID)) Q:'TID!(FLG)  D
"RTN","VPSSRVY2",88,0)
 .. S LN=LN+1
"RTN","VPSSRVY2",89,0)
 .. D STORE(LN,"<CSQ>")
"RTN","VPSSRVY2",90,0)
 .. D GETDATA(.LN,TID,FDT)
"RTN","VPSSRVY2",91,0)
 .. S CNT=CNT+1
"RTN","VPSSRVY2",92,0)
 .. I $G(VPSNUM),CNT=VPSNUM S FLG=1 Q
"RTN","VPSSRVY2",93,0)
 . S LN=LN+1
"RTN","VPSSRVY2",94,0)
 . D STORE(LN,"</CSQ>")
"RTN","VPSSRVY2",95,0)
 D STORE(0,"1^"_CNT)
"RTN","VPSSRVY2",96,0)
 ;
"RTN","VPSSRVY2",97,0)
 Q
"RTN","VPSSRVY2",98,0)
 ;
"RTN","VPSSRVY2",99,0)
 ;
"RTN","VPSSRVY2",100,0)
PASSCHK(ID1,VPSQIEN,VPSQNM) ;
"RTN","VPSSRVY2",101,0)
 ; test is see if this is the survey being requested
"RTN","VPSSRVY2",102,0)
 I $G(VPSQIEN)="",$G(VPSQNM)="" Q 1
"RTN","VPSSRVY2",103,0)
 N ID,FLG
"RTN","VPSSRVY2",104,0)
 S FLG=1
"RTN","VPSSRVY2",105,0)
 I $G(VPSQIEN)]"" D  Q 'FLG
"RTN","VPSSRVY2",106,0)
 . S ID=$O(^VPS(853.85,"B",VPSQIEN,""))
"RTN","VPSSRVY2",107,0)
 . I ID1=ID S FLG=0
"RTN","VPSSRVY2",108,0)
 I $G(VPSQNM)]"" D  Q 'FLG
"RTN","VPSSRVY2",109,0)
 . I $$GET1^DIQ(853.85,ID1_",",1)=VPSQNM S FLG=0
"RTN","VPSSRVY2",110,0)
 Q 0
"RTN","VPSSRVY2",111,0)
 ;
"RTN","VPSSRVY2",112,0)
 ;
"RTN","VPSSRVY2",113,0)
ADDERR(MSG) ;add error message to result array
"RTN","VPSSRVY2",114,0)
 S ^TMP("VPSGSRY",$J,0)=MSG
"RTN","VPSSRVY2",115,0)
 Q
"RTN","VPSSRVY2",116,0)
 ;
"RTN","VPSSRVY2",117,0)
GETDATA(LN,TID,FDT) ;
"RTN","VPSSRVY2",118,0)
 N I,DAT,DATA
"RTN","VPSSRVY2",119,0)
 S DATA=$G(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,0))
"RTN","VPSSRVY2",120,0)
 ; Patient DFN ^ Patient Name ^  Template ID ^ Questionnaire Name ^ Version
"RTN","VPSSRVY2",121,0)
 S DAT=VPSDFN_U_$$GET1^DIQ(2,VPSDFN_",",.01)_U_$E($$GET1^DIQ(853.85,TID_",",.01),5,99)_U_$$GET1^DIQ(853.85,TID_",",1)_U_$$GET1^DIQ(853.85,TID_",",2)
"RTN","VPSSRVY2",122,0)
 S LN=LN+1
"RTN","VPSSRVY2",123,0)
 D STORE(LN,DAT)
"RTN","VPSSRVY2",124,0)
 S LN=LN+1
"RTN","VPSSRVY2",125,0)
 D STORE(LN,"<RESPONSE>")
"RTN","VPSSRVY2",126,0)
 ; Obtain Response identifier
"RTN","VPSSRVY2",127,0)
 S DAT=$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.01)
"RTN","VPSSRVY2",128,0)
 ; Obtain converted Date and Time Taken
"RTN","VPSSRVY2",129,0)
 S DAT=DAT_U_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.02)
"RTN","VPSSRVY2",130,0)
 ; Obtain Date and Time Last Modified and convert to external format
"RTN","VPSSRVY2",131,0)
 S DAT=DAT_U_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.03)
"RTN","VPSSRVY2",132,0)
 ; Obtain COMPLETION STATUS
"RTN","VPSSRVY2",133,0)
 S DAT=DAT_U_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.04)
"RTN","VPSSRVY2",134,0)
 ; Obtain PATIENT SAFETY
"RTN","VPSSRVY2",135,0)
 S DAT=DAT_U_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.05)
"RTN","VPSSRVY2",136,0)
 ; Obtain IMMEDIATE ACTION
"RTN","VPSSRVY2",137,0)
 S DAT=DAT_U_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.06)
"RTN","VPSSRVY2",138,0)
 ; Obtain SURVEY CALCULATED VALUE
"RTN","VPSSRVY2",139,0)
 S DAT=DAT_U_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",4)
"RTN","VPSSRVY2",140,0)
 S LN=LN+1
"RTN","VPSSRVY2",141,0)
 D STORE(LN,DAT)
"RTN","VPSSRVY2",142,0)
 S LN=LN+1
"RTN","VPSSRVY2",143,0)
 D STORE(LN,"<APPOINTMENT CHECK-IN>")
"RTN","VPSSRVY2",144,0)
 S I=0
"RTN","VPSSRVY2",145,0)
 F  S I=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,1,I)) Q:'I  D
"RTN","VPSSRVY2",146,0)
 . S DAT=^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,1,I,0)
"RTN","VPSSRVY2",147,0)
 . S LN=LN+1
"RTN","VPSSRVY2",148,0)
 . D STORE(LN,DAT)
"RTN","VPSSRVY2",149,0)
 S LN=LN+1
"RTN","VPSSRVY2",150,0)
 D STORE(LN,"</APPOINTMENT CHECK-IN>")
"RTN","VPSSRVY2",151,0)
 S LN=LN+1
"RTN","VPSSRVY2",152,0)
 D STORE(LN,"<ADDITIONAL CALCULATED VALUE>")
"RTN","VPSSRVY2",153,0)
 S I=0
"RTN","VPSSRVY2",154,0)
 F  S I=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,2,I)) Q:'I  D
"RTN","VPSSRVY2",155,0)
 . S DAT=^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,2,I,0)
"RTN","VPSSRVY2",156,0)
 . S LN=LN+1
"RTN","VPSSRVY2",157,0)
 . D STORE(LN,DAT)
"RTN","VPSSRVY2",158,0)
 S LN=LN+1
"RTN","VPSSRVY2",159,0)
 D STORE(LN,"</APPOINTMENT CHECK-IN>")
"RTN","VPSSRVY2",160,0)
 S LN=LN+1
"RTN","VPSSRVY2",161,0)
 D STORE(LN,"<QUESTIONS>")
"RTN","VPSSRVY2",162,0)
 N J,II
"RTN","VPSSRVY2",163,0)
 S I=0
"RTN","VPSSRVY2",164,0)
 F  S I=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,3,I)) Q:'I  D
"RTN","VPSSRVY2",165,0)
 . S DAT=$$GET1^DIQ(853.8113,I_",1,"_FDT_","_TID_","_VPSDFN_",",.01)
"RTN","VPSSRVY2",166,0)
 . S DAT=DAT_U_$$GET1^DIQ(853.8113,I_",1,"_FDT_","_TID_","_VPSDFN_",",1)
"RTN","VPSSRVY2",167,0)
 . S LN=LN+1
"RTN","VPSSRVY2",168,0)
 . D STORE(LN,DAT)
"RTN","VPSSRVY2",169,0)
 . S LN=LN+1
"RTN","VPSSRVY2",170,0)
 . D STORE(LN,"<QUESTION PRESENTED>")
"RTN","VPSSRVY2",171,0)
 . N TMP
"RTN","VPSSRVY2",172,0)
 . I $$GET1^DIQ(853.8113,I_",1,"_FDT_","_TID_","_VPSDFN_",",2,"","TMP")
"RTN","VPSSRVY2",173,0)
 . S J=0
"RTN","VPSSRVY2",174,0)
 . F  S J=$O(TMP(J)) Q:'J  S LN=LN+1 D STORE(LN,TMP(J))
"RTN","VPSSRVY2",175,0)
 . S LN=LN+1
"RTN","VPSSRVY2",176,0)
 . D STORE(LN,"</QUESTION PRESENTED>")
"RTN","VPSSRVY2",177,0)
 . ;S LN=LN+1
"RTN","VPSSRVY2",178,0)
 . ;D STORE(LN,"<ANSWER>")
"RTN","VPSSRVY2",179,0)
 . S II="A"
"RTN","VPSSRVY2",180,0)
 . N CUR
"RTN","VPSSRVY2",181,0)
 . S CUR=0
"RTN","VPSSRVY2",182,0)
 . F  S II=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,3,I,3,II),-1) Q:'II!(CUR=99&(+$G(AHFLG)=0))  D
"RTN","VPSSRVY2",183,0)
 .. ; Obtain ANSWER IDENTIFIER
"RTN","VPSSRVY2",184,0)
 .. I CUR'=0,CUR'=$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",1),+$G(AHFLG)=0 S CUR=99 Q
"RTN","VPSSRVY2",185,0)
 .. S LN=LN+1
"RTN","VPSSRVY2",186,0)
 .. D STORE(LN,"<ANSWER>")
"RTN","VPSSRVY2",187,0)
 .. I CUR=0 S CUR=$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",1)
"RTN","VPSSRVY2",188,0)
 .. S DAT=$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.01)
"RTN","VPSSRVY2",189,0)
 .. S DAT=DAT_U_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.02)
"RTN","VPSSRVY2",190,0)
 .. S DAT=DAT_U_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.03)
"RTN","VPSSRVY2",191,0)
 .. S DAT=DAT_U_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.04)
"RTN","VPSSRVY2",192,0)
 .. S DAT=DAT_U_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",1)
"RTN","VPSSRVY2",193,0)
 .. S DAT=DAT_U_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",2)
"RTN","VPSSRVY2",194,0)
 .. S DAT=DAT_U_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",3)
"RTN","VPSSRVY2",195,0)
 .. S DAT=DAT_U_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",4)
"RTN","VPSSRVY2",196,0)
 .. S DAT=DAT_U_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",5)
"RTN","VPSSRVY2",197,0)
 .. S LN=LN+1
"RTN","VPSSRVY2",198,0)
 .. D STORE(LN,DAT)
"RTN","VPSSRVY2",199,0)
 .. S DAT=""
"RTN","VPSSRVY2",200,0)
 .. S LN=LN+1
"RTN","VPSSRVY2",201,0)
 .. D STORE(LN,"<ANSWER RESPONSE>")
"RTN","VPSSRVY2",202,0)
 .. K TMP
"RTN","VPSSRVY2",203,0)
 .. I $$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",6,"","TMP")
"RTN","VPSSRVY2",204,0)
 .. S J=0
"RTN","VPSSRVY2",205,0)
 .. F  S J=$O(TMP(J)) Q:'J  S LN=LN+1 D STORE(LN,TMP(J))
"RTN","VPSSRVY2",206,0)
 .. S LN=LN+1
"RTN","VPSSRVY2",207,0)
 .. D STORE(LN,"</ANSWER RESPONSE>")
"RTN","VPSSRVY2",208,0)
 .. S LN=LN+1
"RTN","VPSSRVY2",209,0)
 .. D STORE(LN,"</ANSWER>")
"RTN","VPSSRVY2",210,0)
 . ;S LN=LN+1
"RTN","VPSSRVY2",211,0)
 . ;D STORE(LN,"</ANSWER>")
"RTN","VPSSRVY2",212,0)
 S LN=LN+1
"RTN","VPSSRVY2",213,0)
 D STORE(LN,"</QUESTIONS>")
"RTN","VPSSRVY2",214,0)
 S LN=LN+1
"RTN","VPSSRVY2",215,0)
 D STORE(LN,"</RESPONSE>")
"RTN","VPSSRVY2",216,0)
 Q
"RTN","VPSSRVY2",217,0)
 ;
"RTN","VPSSRVY2",218,0)
APPEND(LINE,ARR) ;
"RTN","VPSSRVY2",219,0)
 N J,STR
"RTN","VPSSRVY2",220,0)
 S J=0
"RTN","VPSSRVY2",221,0)
 F  S J=$O(ARR(J)) Q:'J  S STR=STR_ARR(J)
"RTN","VPSSRVY2",222,0)
 I LINE=""  S LINE=STR
"RTN","VPSSRVY2",223,0)
 E  S LINE=LINE_U_STR
"RTN","VPSSRVY2",224,0)
 Q
"RTN","VPSSRVY2",225,0)
 ;
"RTN","VPSSRVY2",226,0)
STORE(IEN,MSG) ;add message to result array
"RTN","VPSSRVY2",227,0)
 S ^TMP("VPSGSRY",$J,IEN)=MSG
"RTN","VPSSRVY2",228,0)
 Q
"RTN","VPSSRVY2",229,0)
 ;
"RTN","VPSSRVY2",230,0)
 ; Convert string to upper case
"RTN","VPSSRVY2",231,0)
UPCASE(X) ;
"RTN","VPSSRVY2",232,0)
 N STR,I
"RTN","VPSSRVY2",233,0)
 S STR=""
"RTN","VPSSRVY2",234,0)
 F I=1:1:$L(X) S STR=STR_$$CAP($E(X,I))
"RTN","VPSSRVY2",235,0)
 Q STR
"RTN","VPSSRVY2",236,0)
 ;
"RTN","VPSSRVY2",237,0)
CAP(X) ; Convert lower case X to UPPER CASE
"RTN","VPSSRVY2",238,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","VPSSRVY3")
0^5^B87941101
"RTN","VPSSRVY3",1,0)
VPSSRVY3 ;WOIFO/BT - VPS CLINICAL SURVEY QUESTIONNAIRE;01/16/15 13:07
"RTN","VPSSRVY3",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5,14**;Jan 16, 2015;Build 26
"RTN","VPSSRVY3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSSRVY3",4,0)
 ;
"RTN","VPSSRVY3",5,0)
 ; External Reference DBIA#
"RTN","VPSSRVY3",6,0)
 ; ------------------------
"RTN","VPSSRVY3",7,0)
 ;
"RTN","VPSSRVY3",8,0)
 QUIT
"RTN","VPSSRVY3",9,0)
UTGET(VPSDFN,TARGET,VPSQIEN,VPSQNM,VPSFDT,VPSTDT,VPSNUM) ;
"RTN","VPSSRVY3",10,0)
 N UTFLG,UT
"RTN","VPSSRVY3",11,0)
 S UTFLG=1
"RTN","VPSSRVY3",12,0)
 S UT=$$GETRPT(VPSDFN,TARGET)
"RTN","VPSSRVY3",13,0)
 ;S UT=$$GETRPT(VPSDFN,TARGET,$G(VPSQIEN),$G(VPSQNM),$G(VPSFDT),$G(VPSTDT),$G(VPSNUM))
"RTN","VPSSRVY3",14,0)
 Q UT
"RTN","VPSSRVY3",15,0)
 ;
"RTN","VPSSRVY3",16,0)
GETRPT(VPSDFN,TARGET,VPSQIEN,VPSQNM,VPSFDT,VPSTDT,VPSNUM,AHFLG) ;
"RTN","VPSSRVY3",17,0)
 ;INPUT
"RTN","VPSSRVY3",18,0)
 ;  VPSDFN  : Patient IEN
"RTN","VPSSRVY3",19,0)
 ;  TARGET  : Location for the results
"RTN","VPSSRVY3",20,0)
 ;  VPSQIEN : Questionnaire IEN
"RTN","VPSSRVY3",21,0)
 ;  VPSQNM  : Questionnaire Name
"RTN","VPSSRVY3",22,0)
 ;  VPSFDT  : From Date
"RTN","VPSSRVY3",23,0)
 ;  VPSTDT  : To Date
"RTN","VPSSRVY3",24,0)
 ;  VPSNUM  : Number of Occurrences
"RTN","VPSSRVY3",25,0)
 ;  AHFLG   : Answer history Flag
"RTN","VPSSRVY3",26,0)
 ;            current answer          - 0 (default)
"RTN","VPSSRVY3",27,0)
 ;            all answers to question - 1     1
"RTN","VPSSRVY3",28,0)
 ;
"RTN","VPSSRVY3",29,0)
 ;OUTPUT
"RTN","VPSSRVY3",30,0)
 ; If error
"RTN","VPSSRVY3",31,0)
 ;  VPSRES(0)=-1^Error Message
"RTN","VPSSRVY3",32,0)
 ;
"RTN","VPSSRVY3",33,0)
 ; otherwise
"RTN","VPSSRVY3",34,0)
 ;  RESULT(0) = Success or Fail flag
"RTN","VPSSRVY3",35,0)
 ;RESULT(1..n) = Formatted Questionnaire data
"RTN","VPSSRVY3",36,0)
 ;
"RTN","VPSSRVY3",37,0)
 ;Example:
"RTN","VPSSRVY3",38,0)
 ;
"RTN","VPSSRVY3",39,0)
 ;RESULT(0) = 1 (Success) ^ 2 (No of questionnaires found)
"RTN","VPSSRVY3",40,0)
 ;RESULT(1) = Patient Name: TEST, PATIENT
"RTN","VPSSRVY3",41,0)
 ;RESULT(2) = Questionnaire IEN: 20
"RTN","VPSSRVY3",42,0)
 ;RESULT(3) = Questionnaire Name: PTSD Survey
"RTN","VPSSRVY3",43,0)
 ;RESULT(4) = Date and Time Taken: 8/20/14 3:15pm
"RTN","VPSSRVY3",44,0)
 ;RESULT(5) = Date and Time Last Modified: 8/20/14 4:00pm
"RTN","VPSSRVY3",45,0)
 ;RESULT(6) = Questions and Answers:
"RTN","VPSSRVY3",46,0)
 ;RESULT(7) = Are you a smoker?  Yes
"RTN","VPSSRVY3",47,0)
 ;RESULT(8) = How many packs per week?  3
"RTN","VPSSRVY3",48,0)
 ;
"RTN","VPSSRVY3",49,0)
 ;
"RTN","VPSSRVY3",50,0)
 N CNT,NEXTLINE,TDT
"RTN","VPSSRVY3",51,0)
 S NEXTLINE=0
"RTN","VPSSRVY3",52,0)
 S CNT=0
"RTN","VPSSRVY3",53,0)
 ;
"RTN","VPSSRVY3",54,0)
STARTHS ;
"RTN","VPSSRVY3",55,0)
 K @TARGET
"RTN","VPSSRVY3",56,0)
 ; valid input parameters
"RTN","VPSSRVY3",57,0)
 ; set up variables for the extraction of clinical survey information
"RTN","VPSSRVY3",58,0)
 I $G(VPSDFN)="" S @TARGET@(0)="-1^Patient IEN not sent" G EX
"RTN","VPSSRVY3",59,0)
 I '$D(^DPT(VPSDFN)) S @TARGET@(0)="-1^Patient not found" G EX
"RTN","VPSSRVY3",60,0)
 I '$D(^VPS(853.8,VPSDFN)) S @TARGET@(0)="-1^There are no questionnaires for this patient" G EX
"RTN","VPSSRVY3",61,0)
 ;
"RTN","VPSSRVY3",62,0)
 N FDT,FLG,DAT,DATA,X,Y,FLT
"RTN","VPSSRVY3",63,0)
 S TDT=$$NOW^XLFDT()+.0001
"RTN","VPSSRVY3",64,0)
 S FLG=0
"RTN","VPSSRVY3",65,0)
 I $G(VPSTDT) D
"RTN","VPSSRVY3",66,0)
 . I VPSTDT["." S TDT=VPSTDT+.0001 Q
"RTN","VPSSRVY3",67,0)
 . I VPSTDT'["." S TDT=VPSTDT+1
"RTN","VPSSRVY3",68,0)
 S VPSQIEN=$G(VPSQIEN)
"RTN","VPSSRVY3",69,0)
 S VPSQNM=$G(VPSQNM)
"RTN","VPSSRVY3",70,0)
 S VPSQNM=$$UPCASE^VPSSRVY2(VPSQNM)
"RTN","VPSSRVY3",71,0)
 ; loop through obtaining the most current information first
"RTN","VPSSRVY3",72,0)
 S FLG=0,TID=0
"RTN","VPSSRVY3",73,0)
 F  S TID=$O(^VPS(853.8,VPSDFN,1,TID)) Q:'TID!FLG  D
"RTN","VPSSRVY3",74,0)
 . S FDT=TDT
"RTN","VPSSRVY3",75,0)
 . F  S FDT=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT),-1) Q:'FDT!FLG  D
"RTN","VPSSRVY3",76,0)
 .. I $G(VPSFDT),TDT<VPSFDT Q
"RTN","VPSSRVY3",77,0)
 .. I $G(VPSTDT)="",$G(VPSFDT)]"",$G(VPSFDT)'=$P(FDT,".") Q
"RTN","VPSSRVY3",78,0)
 .. I $G(VPSNUM),CNT=VPSNUM S FLG=1 Q
"RTN","VPSSRVY3",79,0)
 .. I $$PASSCHK(TID,$G(VPSQIEN),$G(VPSQNM)) D
"RTN","VPSSRVY3",80,0)
 ... D GETDATA(VPSDFN,TID,FDT,VPSQNM)
"RTN","VPSSRVY3",81,0)
 ... S CNT=CNT+1
"RTN","VPSSRVY3",82,0)
 I CNT=0 D
"RTN","VPSSRVY3",83,0)
 . N STR
"RTN","VPSSRVY3",84,0)
 . S STR="No Survey results for "
"RTN","VPSSRVY3",85,0)
 . I $G(VPSQIEN)]"" S STR=STR_"CSQ IEN: "_VPSQIEN_", "
"RTN","VPSSRVY3",86,0)
 . I $G(VPSQNM)]"" S STR=STR_"CSQ NAME: "_VPSQNM_" "
"RTN","VPSSRVY3",87,0)
 . I $G(VPSFDT)]"" S STR=STR_"since "_VPSFDT
"RTN","VPSSRVY3",88,0)
 . D ADD(STR)
"RTN","VPSSRVY3",89,0)
 S @TARGET@(0)="1^"_CNT
"RTN","VPSSRVY3",90,0)
 ;
"RTN","VPSSRVY3",91,0)
EX ;
"RTN","VPSSRVY3",92,0)
 I $G(VPSHSFLG)=1 Q
"RTN","VPSSRVY3",93,0)
 I $G(UTFLG) Q "~@"_$NA(@TARGET)
"RTN","VPSSRVY3",94,0)
 D PDO(VPSDFN,.TARGET)
"RTN","VPSSRVY3",95,0)
 ;
"RTN","VPSSRVY3",96,0)
 Q "~@"_$NA(@TARGET)
"RTN","VPSSRVY3",97,0)
 ;
"RTN","VPSSRVY3",98,0)
PASSCHK(ID1,VPSQIEN,VPSQNM) ;
"RTN","VPSSRVY3",99,0)
 ; test is see if this is the survey being requested
"RTN","VPSSRVY3",100,0)
 I $G(VPSQIEN)="",$G(VPSQNM)="" Q 1
"RTN","VPSSRVY3",101,0)
 N ID,FLG
"RTN","VPSSRVY3",102,0)
 S FLG=1
"RTN","VPSSRVY3",103,0)
 I $G(VPSQIEN)]"" D  Q 'FLG
"RTN","VPSSRVY3",104,0)
 . S ID=$O(^VPS(853.85,"B",VPSQIEN,""))
"RTN","VPSSRVY3",105,0)
 . I ID1=ID S FLG=0
"RTN","VPSSRVY3",106,0)
 I $G(VPSQNM)]"" D  Q 'FLG
"RTN","VPSSRVY3",107,0)
 . I $$GET1^DIQ(853.85,ID1_",",1)=VPSQNM S FLG=0
"RTN","VPSSRVY3",108,0)
 Q 0
"RTN","VPSSRVY3",109,0)
 ;
"RTN","VPSSRVY3",110,0)
 ;
"RTN","VPSSRVY3",111,0)
 ; obtain the information from the clinical survey
"RTN","VPSSRVY3",112,0)
 ; and format the information into the report
"RTN","VPSSRVY3",113,0)
GETDATA(VPSDFN,TID,FDT,VPSQNM) ;
"RTN","VPSSRVY3",114,0)
 ;
"RTN","VPSSRVY3",115,0)
 N I,DAT,DATA
"RTN","VPSSRVY3",116,0)
 S DATA=$G(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,0))
"RTN","VPSSRVY3",117,0)
 ; Patient DFN ^ Patient Name ^  Template ID ^ Questionnaire Name ^ Version
"RTN","VPSSRVY3",118,0)
 ;S DAT="Patient DFN: "_VPSDFN
"RTN","VPSSRVY3",119,0)
 ;D ADD(DAT)
"RTN","VPSSRVY3",120,0)
 ;S DAT="Patient Name: "_$$GET1^DIQ(2,VPSDFN_",",.01)
"RTN","VPSSRVY3",121,0)
 ;D ADD(DAT)
"RTN","VPSSRVY3",122,0)
 S DAT="Questionnaire Name: "_$$GET1^DIQ(853.85,TID_",",1)
"RTN","VPSSRVY3",123,0)
 D ADD(DAT)
"RTN","VPSSRVY3",124,0)
 S DAT="ID: "_$$GET1^DIQ(853.85,TID_",",.01)
"RTN","VPSSRVY3",125,0)
 ;D ADD(DAT)
"RTN","VPSSRVY3",126,0)
 S DAT=DAT_$J(" ",66-$L(DAT))_"Ver: "_$$GET1^DIQ(853.85,TID_",",2)
"RTN","VPSSRVY3",127,0)
 D ADD(DAT)
"RTN","VPSSRVY3",128,0)
 ; Obtain Response identifier
"RTN","VPSSRVY3",129,0)
 S DAT="Response Identifier: "_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.01)
"RTN","VPSSRVY3",130,0)
 D ADD(DAT)
"RTN","VPSSRVY3",131,0)
 ; Obtain converted Date and Time Taken
"RTN","VPSSRVY3",132,0)
 S DAT="Date/Time Taken: "_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.02)
"RTN","VPSSRVY3",133,0)
 ;D ADD(DAT)
"RTN","VPSSRVY3",134,0)
 ; Obtain Date and Time Last Modified and convert to external format
"RTN","VPSSRVY3",135,0)
 S DAT=DAT_$J(" ",41-$L(DAT))_"Last Modified: "_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.03)
"RTN","VPSSRVY3",136,0)
 D ADD(DAT)
"RTN","VPSSRVY3",137,0)
 ; Obtain COMPLETION STATUS
"RTN","VPSSRVY3",138,0)
 S DAT="Completion Status: "_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.04)
"RTN","VPSSRVY3",139,0)
 D ADD(DAT)
"RTN","VPSSRVY3",140,0)
 ; Obtain PATIENT SAFETY
"RTN","VPSSRVY3",141,0)
 S DAT="Patient Safety: "_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.05)
"RTN","VPSSRVY3",142,0)
 S DAT=DAT_$J(" ",41-$L(DAT))_"Immediate Action: "_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.06)
"RTN","VPSSRVY3",143,0)
 D ADD(DAT)
"RTN","VPSSRVY3",144,0)
 ; Obtain IMMEDIATE ACTION
"RTN","VPSSRVY3",145,0)
 ;S DAT="Immediate Action: "_$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",.06)
"RTN","VPSSRVY3",146,0)
 ;D ADD(DAT)
"RTN","VPSSRVY3",147,0)
 ; Obtain SURVEY CALCULATED VALUE
"RTN","VPSSRVY3",148,0)
 S DAT=$$GET1^DIQ(853.811,"1,"_FDT_","_TID_","_VPSDFN_",",4)
"RTN","VPSSRVY3",149,0)
 I $G(CALC),DAT]"" D ADD("Survey Calculated Value: "_DAT)
"RTN","VPSSRVY3",150,0)
 S I=0
"RTN","VPSSRVY3",151,0)
 N DAT1
"RTN","VPSSRVY3",152,0)
 F  S I=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,2,I)) Q:'I  D
"RTN","VPSSRVY3",153,0)
 . S DAT=$P(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,2,I,0),U)
"RTN","VPSSRVY3",154,0)
 . I DAT]"" S DAT="Additional Calc Value Name: "_DAT ;D ADD(DAT)
"RTN","VPSSRVY3",155,0)
 . S DAT1=$P(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,2,I,0),U,2)
"RTN","VPSSRVY3",156,0)
 . I DAT1]"" S DAT1="Additional Calc Value Score: "_DAT1 ;D ADD(DAT)
"RTN","VPSSRVY3",157,0)
 . I DAT]""!(DAT1]"") S DAT=DAT_$J(" ",41-$L(DAT))_DAT1 D ADD(DAT)
"RTN","VPSSRVY3",158,0)
 S I=0
"RTN","VPSSRVY3",159,0)
 F  S I=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,1,I)) Q:'I  D
"RTN","VPSSRVY3",160,0)
 . S DAT="Appointment Check-in: "_^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,1,I,0)
"RTN","VPSSRVY3",161,0)
 . D ADD(DAT)
"RTN","VPSSRVY3",162,0)
 N J,II
"RTN","VPSSRVY3",163,0)
 S I=0
"RTN","VPSSRVY3",164,0)
 F  S I=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,3,I)) Q:'I  D
"RTN","VPSSRVY3",165,0)
 . D ADD("______________________________")
"RTN","VPSSRVY3",166,0)
 . ;S DAT="Question Number: "_$$GET1^DIQ(853.8113,I_",1,"_FDT_","_TID_","_VPSDFN_",",.01)
"RTN","VPSSRVY3",167,0)
 . ;D ADD(DAT)
"RTN","VPSSRVY3",168,0)
 . S DAT=$$GET1^DIQ(853.8113,I_",1,"_FDT_","_TID_","_VPSDFN_",",1)
"RTN","VPSSRVY3",169,0)
 . I $G(CALC),DAT]"" D ADD("Question Calculated Value: "_DAT)
"RTN","VPSSRVY3",170,0)
 . N TMP
"RTN","VPSSRVY3",171,0)
 . I $$GET1^DIQ(853.8113,I_",1,"_FDT_","_TID_","_VPSDFN_",",2,"","TMP")
"RTN","VPSSRVY3",172,0)
 . I $D(TMP(1)) S TMP(1)=$$GET1^DIQ(853.8113,I_",1,"_FDT_","_TID_","_VPSDFN_",",.01)_" - "_TMP(1)
"RTN","VPSSRVY3",173,0)
 . S J=0
"RTN","VPSSRVY3",174,0)
 . F  S J=$O(TMP(J)) Q:'J  D ADD(TMP(J))
"RTN","VPSSRVY3",175,0)
 . S II="A"
"RTN","VPSSRVY3",176,0)
 . N CUR
"RTN","VPSSRVY3",177,0)
 . S CUR=0
"RTN","VPSSRVY3",178,0)
 . F  S II=$O(^VPS(853.8,VPSDFN,1,TID,1,FDT,1,1,3,I,3,II),-1) Q:'II!(CUR=99&(+$G(AHFLG)=0))  D
"RTN","VPSSRVY3",179,0)
 .. I CUR'=0,CUR'=$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",1),+$G(AHFLG)=0 S CUR=99 Q
"RTN","VPSSRVY3",180,0)
 .. I CUR=0 S CUR=$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",1)
"RTN","VPSSRVY3",181,0)
 .. ;D ADD("     _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-")
"RTN","VPSSRVY3",182,0)
 .. ; Obtain ANSWER IDENTIFIER
"RTN","VPSSRVY3",183,0)
 .. ;S DAT="Answer Identifier: "_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.01)
"RTN","VPSSRVY3",184,0)
 .. ;D ADD(DAT)
"RTN","VPSSRVY3",185,0)
 .. ;S DAT="Interface Used: "_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.02)
"RTN","VPSSRVY3",186,0)
 .. ;D ADD(DAT)
"RTN","VPSSRVY3",187,0)
 .. ;S DAT="Kiosk Identifier: "_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",3)
"RTN","VPSSRVY3",188,0)
 .. ;D ADD(DAT)
"RTN","VPSSRVY3",189,0)
 .. ;S DAT="Kiosk Session Identifier: "_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",4)
"RTN","VPSSRVY3",190,0)
 .. ;D ADD(DAT)
"RTN","VPSSRVY3",191,0)
 .. ;S DAT="Kiosk Group Identifier: "_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",5)
"RTN","VPSSRVY3",192,0)
 .. ;D ADD(DAT)
"RTN","VPSSRVY3",193,0)
 .. S DAT=""
"RTN","VPSSRVY3",194,0)
 .. K TMP
"RTN","VPSSRVY3",195,0)
 .. I $$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",6,"","TMP")
"RTN","VPSSRVY3",196,0)
 .. I $D(TMP(1)) D ADD("   "_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.01)_" - "_TMP(1))
"RTN","VPSSRVY3",197,0)
 .. S J=1
"RTN","VPSSRVY3",198,0)
 .. F  S J=$O(TMP(J)) Q:'J  D ADD("     "_TMP(J))
"RTN","VPSSRVY3",199,0)
 .. S DAT=$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.03)
"RTN","VPSSRVY3",200,0)
 .. I DAT'="PATIENT" D
"RTN","VPSSRVY3",201,0)
 ... S DAT="    Respondent: "_DAT
"RTN","VPSSRVY3",202,0)
 ... ;D ADD("    "_DAT)
"RTN","VPSSRVY3",203,0)
 ... S DAT=DAT_$J(" ",41-$L(DAT))_"Respondent Name: "_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",.04)
"RTN","VPSSRVY3",204,0)
 ... D ADD(DAT)
"RTN","VPSSRVY3",205,0)
 .. S DAT="    Answer Date/Time: "_$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",1)
"RTN","VPSSRVY3",206,0)
 .. ;D ADD("    "_DAT)
"RTN","VPSSRVY3",207,0)
 .. S DAT1=$$GET1^DIQ(853.81133,II_","_I_",1,"_FDT_","_TID_","_VPSDFN_",",2)
"RTN","VPSSRVY3",208,0)
 .. I DAT1]"",+DAT1=0,DAT1'=0 D
"RTN","VPSSRVY3",209,0)
 ... S DAT1="Interviewer Name: "_DAT1
"RTN","VPSSRVY3",210,0)
 ... S DAT=DAT_$J(" ",41-$L(DAT))_DAT1
"RTN","VPSSRVY3",211,0)
 ... D ADD(DAT)
"RTN","VPSSRVY3",212,0)
 .. D ADD("")
"RTN","VPSSRVY3",213,0)
 .. S CUR=1
"RTN","VPSSRVY3",214,0)
 D ADD("@#END OF SURVEY#@")
"RTN","VPSSRVY3",215,0)
 Q
"RTN","VPSSRVY3",216,0)
ADD(TXT) ;
"RTN","VPSSRVY3",217,0)
 S NEXTLINE=NEXTLINE+1
"RTN","VPSSRVY3",218,0)
 S @TARGET@(NEXTLINE)=TXT
"RTN","VPSSRVY3",219,0)
 Q
"RTN","VPSSRVY3",220,0)
 ;
"RTN","VPSSRVY3",221,0)
PDO(PTIEN,PDOARY) ;
"RTN","VPSSRVY3",222,0)
 ; create object and store the results of this clinical survey request
"RTN","VPSSRVY3",223,0)
 N PDOOREF,LINE,ARR
"RTN","VPSSRVY3",224,0)
 S ARR="^TMP(""VPSSRVY3PDO"",$J)"
"RTN","VPSSRVY3",225,0)
 S PDOOREF=$$NEW^VPSOBJ(PTIEN,ARR)
"RTN","VPSSRVY3",226,0)
 I $P(@PDOARY@(0),U)=-1 D ADDPDO^VPSOBJ(PDOOREF,$P(@TARGET@(0),U,2)) G CLOSE
"RTN","VPSSRVY3",227,0)
 S LINE=0
"RTN","VPSSRVY3",228,0)
 F  S LINE=$O(@PDOARY@(LINE)) Q:'LINE  D
"RTN","VPSSRVY3",229,0)
 . I @PDOARY@(LINE)'="@#END OF SURVEY#@" D ADDPDO^VPSOBJ(PDOOREF,@PDOARY@(LINE)) I 1
"RTN","VPSSRVY3",230,0)
 . E  D ADDBLANK^VPSOBJ(PDOOREF),ADDUNDLN^VPSOBJ(PDOOREF),ADDBLANK^VPSOBJ(PDOOREF)
"RTN","VPSSRVY3",231,0)
CLOSE ;
"RTN","VPSSRVY3",232,0)
 ; close the object
"RTN","VPSSRVY3",233,0)
 D CLOSE^VPSOBJ(PDOOREF)
"RTN","VPSSRVY3",234,0)
 S PDOARY=ARR
"RTN","VPSSRVY3",235,0)
 Q
"RTN","VPSSRVY3",236,0)
 ;
"RTN","VPSSRVY3",237,0)
HSAHCAL ;
"RTN","VPSSRVY3",238,0)
 ; Entry point for including answer history and calculated values with the health summary 
"RTN","VPSSRVY3",239,0)
 ; AHFLG - is the flag for obtaining answer history
"RTN","VPSSRVY3",240,0)
 N AHFLG
"RTN","VPSSRVY3",241,0)
 S AHFLG=1
"RTN","VPSSRVY3",242,0)
HSCAL ;
"RTN","VPSSRVY3",243,0)
 ; Entry point for including calculated values with the health summary 
"RTN","VPSSRVY3",244,0)
 ; CALC - is the flag for obtaining calcualted values
"RTN","VPSSRVY3",245,0)
 N CALC
"RTN","VPSSRVY3",246,0)
 S CALC=1
"RTN","VPSSRVY3",247,0)
HS ;
"RTN","VPSSRVY3",248,0)
 ; Entry point for health summary
"RTN","VPSSRVY3",249,0)
 ; VPSHSFLG - Flag that indicates health summary so the report is processed accordingly
"RTN","VPSSRVY3",250,0)
 ; obtains key values that are provided by the CPRS call
"RTN","VPSSRVY3",251,0)
 N VPSHSFLG,LINE,DATA,VPSDFN,TARGET,VPSQIEN,VPSQNM,VPSFDT,VPSTDT,VPSNUM,DIEN
"RTN","VPSSRVY3",252,0)
 S VPSHSFLG=1
"RTN","VPSSRVY3",253,0)
 S TARGET="^TMP(""VPSSRVY3 HS"",$J)"
"RTN","VPSSRVY3",254,0)
 I $G(DFN)]"" S VPSDFN=DFN
"RTN","VPSSRVY3",255,0)
 I $G(GMTSBEG)=1 S GMTSBEG=""
"RTN","VPSSRVY3",256,0)
 I $G(GMTSEND)=9999999 S GMTSEND=""
"RTN","VPSSRVY3",257,0)
 I $G(GMTSNDM)=-1 S GMTSNDM=""
"RTN","VPSSRVY3",258,0)
 I $G(GMTSNDM)]"" S VPSNUM=GMTSNDM
"RTN","VPSSRVY3",259,0)
 I $G(GMTSBEG)]"" S VPSFDT=GMTSBEG
"RTN","VPSSRVY3",260,0)
 I $G(GMTSEND)]"" S VPSTDT=GMTSEND
"RTN","VPSSRVY3",261,0)
 W !,$$CJ^XLFSTR(GMTSEGH,75),!
"RTN","VPSSRVY3",262,0)
 N CNT,NEXTLINE,I
"RTN","VPSSRVY3",263,0)
 S NEXTLINE=0,CNT=0
"RTN","VPSSRVY3",264,0)
 I '$D(GMTSEG(1,853.875)) D STARTHS,PRINTHS("") Q
"RTN","VPSSRVY3",265,0)
 S I=0
"RTN","VPSSRVY3",266,0)
 F  S I=$O(GMTSEG(1,853.875,I)) Q:'I  D
"RTN","VPSSRVY3",267,0)
 . S DIEN=$G(GMTSEG(1,853.875,I))
"RTN","VPSSRVY3",268,0)
 . S VPSQNM=$P($G(^VPS(853.875,DIEN,0)),U)
"RTN","VPSSRVY3",269,0)
 . S CNT=0
"RTN","VPSSRVY3",270,0)
 . D STARTHS
"RTN","VPSSRVY3",271,0)
 . D PRINTHS(VPSQNM_" - "_GMTSEGL)
"RTN","VPSSRVY3",272,0)
 Q
"RTN","VPSSRVY3",273,0)
 ;
"RTN","VPSSRVY3",274,0)
 ; print the results of the health summary
"RTN","VPSSRVY3",275,0)
 ;
"RTN","VPSSRVY3",276,0)
PRINTHS(SURVEY) ;
"RTN","VPSSRVY3",277,0)
 N LINE
"RTN","VPSSRVY3",278,0)
 W $$REPEAT^XLFSTR("_",75),!,$$CJ^XLFSTR(SURVEY,75),!,!
"RTN","VPSSRVY3",279,0)
 I $P(@TARGET@(0),U)=-1 W !,$P(@TARGET@(0),U,2) Q
"RTN","VPSSRVY3",280,0)
 I $P(@TARGET@(0),U,2)=0 W !,"No results",!,$$REPEAT^XLFSTR("_",75),! Q
"RTN","VPSSRVY3",281,0)
 S LINE=0
"RTN","VPSSRVY3",282,0)
 F  S LINE=$O(@TARGET@(LINE)) Q:'LINE  D
"RTN","VPSSRVY3",283,0)
 . S DATA=@TARGET@(LINE)
"RTN","VPSSRVY3",284,0)
 . I DATA'="@#END OF SURVEY#@" W !,DATA
"RTN","VPSSRVY3",285,0)
 . E  W !,$$REPEAT^XLFSTR("_",75),!
"RTN","VPSSRVY3",286,0)
 Q
"RTN","VPSSRVY4")
0^12^B29387621
"RTN","VPSSRVY4",1,0)
VPSSRVY4 ;WOIFO/KC - VPS CLINICAL SURVEY QUESTIONNAIRE;11/06/2015 11:23
"RTN","VPSSRVY4",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**14**;Nov 6, 2015;Build 26
"RTN","VPSSRVY4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSSRVY4",4,0)
 ;
"RTN","VPSSRVY4",5,0)
 ; External Reference DBIA#
"RTN","VPSSRVY4",6,0)
 ; ------------------------
"RTN","VPSSRVY4",7,0)
 ; IA #10103 - supported use of XLFDT function 
"RTN","VPSSRVY4",8,0)
 ;
"RTN","VPSSRVY4",9,0)
 QUIT
"RTN","VPSSRVY4",10,0)
 ;
"RTN","VPSSRVY4",11,0)
ADDSRVY(VPSDFN,TID,TRNDT) ;add survey (questionnaire level)
"RTN","VPSSRVY4",12,0)
 N FIL S FIL=853.81
"RTN","VPSSRVY4",13,0)
 N IENS S IENS(1)=TRNDT
"RTN","VPSSRVY4",14,0)
 N SUBS S SUBS="+1,"_TID_","_VPSDFN_","
"RTN","VPSSRVY4",15,0)
 N FDA,FDAERR
"RTN","VPSSRVY4",16,0)
 N FLD S FLD=0
"RTN","VPSSRVY4",17,0)
 ;
"RTN","VPSSRVY4",18,0)
 ; -- fill in FDA with the survey data
"RTN","VPSSRVY4",19,0)
 S FDA(853.81,SUBS,.01)=TRNDT
"RTN","VPSSRVY4",20,0)
 ;
"RTN","VPSSRVY4",21,0)
 ; -- store the survey data
"RTN","VPSSRVY4",22,0)
 D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSSRVY4",23,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY4",24,0)
 ;
"RTN","VPSSRVY4",25,0)
ADDRES(VPSDFN,TID,TRNDT,MSURVEY,MODFLG) ;add questionnaire response
"RTN","VPSSRVY4",26,0)
 N FIL S FIL=853.811
"RTN","VPSSRVY4",27,0)
 N SUBS
"RTN","VPSSRVY4",28,0)
 I MODFLG=0 S SUBS="+1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",29,0)
 E  S SUBS="1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",30,0)
 N FDA,FDAERR
"RTN","VPSSRVY4",31,0)
 N SEQ,FLD S SEQ=0
"RTN","VPSSRVY4",32,0)
 ;
"RTN","VPSSRVY4",33,0)
 F  S SEQ=$O(MSURVEY(SEQ)) Q:'SEQ  I ",1,9,10,11,"'[(","_SEQ_",") D  QUIT:$D(FDAERR)
"RTN","VPSSRVY4",34,0)
 . S FDA(FIL,SUBS,SEQ)=MSURVEY(SEQ)
"RTN","VPSSRVY4",35,0)
 I $D(FDA) D UPDATE^DIE("E","FDA",,"FDAERR")
"RTN","VPSSRVY4",36,0)
 ;
"RTN","VPSSRVY4",37,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY4",38,0)
 ;
"RTN","VPSSRVY4",39,0)
ADDAPPT(VPSDFN,TID,TRNDT,MSURVEY,MODFLG) ;add survey (questionnaire level)
"RTN","VPSSRVY4",40,0)
 N FIL S FIL=853.8111
"RTN","VPSSRVY4",41,0)
 N SUBS
"RTN","VPSSRVY4",42,0)
 I MODFLG=0 S SUBS="+1,1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",43,0)
 E  S SUBS="1,1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",44,0)
 N FDA,FDAERR
"RTN","VPSSRVY4",45,0)
 N FLD S FLD=0
"RTN","VPSSRVY4",46,0)
 N SEQ S SEQ=0
"RTN","VPSSRVY4",47,0)
 ;
"RTN","VPSSRVY4",48,0)
 ; -- fill in FDA with the survey data
"RTN","VPSSRVY4",49,0)
 F  S SEQ=$O(MSURVEY(SEQ)) Q:'SEQ  D  QUIT:$D(FDAERR)
"RTN","VPSSRVY4",50,0)
 . K FDA S FLD=0
"RTN","VPSSRVY4",51,0)
 . F  S FLD=$O(MSURVEY(SEQ,FLD)) QUIT:'FLD  S FDA(FIL,SUBS,FLD)=MSURVEY(SEQ,FLD)
"RTN","VPSSRVY4",52,0)
 . D UPDATE^DIE("E","FDA",,"FDAERR")
"RTN","VPSSRVY4",53,0)
 ; ;
"RTN","VPSSRVY4",54,0)
 ; -- store the survey data
"RTN","VPSSRVY4",55,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY4",56,0)
 ;
"RTN","VPSSRVY4",57,0)
ADDCALC(VPSDFN,TID,TRNDT,MSURVEY,MODFLG) ;add additional calcualted information
"RTN","VPSSRVY4",58,0)
 N FIL S FIL=853.8112
"RTN","VPSSRVY4",59,0)
 N SUBS
"RTN","VPSSRVY4",60,0)
 I MODFLG=0 S SUBS="+1,1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",61,0)
 E  S SUBS="1,1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",62,0)
 N FDA,FDAERR
"RTN","VPSSRVY4",63,0)
 N FLD S FLD=0
"RTN","VPSSRVY4",64,0)
 N SEQ S SEQ=0
"RTN","VPSSRVY4",65,0)
 ;
"RTN","VPSSRVY4",66,0)
 ; -- fill in FDA with the survey data
"RTN","VPSSRVY4",67,0)
 F  S SEQ=$O(MSURVEY(SEQ)) Q:'SEQ  D  QUIT:$D(FDAERR)
"RTN","VPSSRVY4",68,0)
 . K FDA S FLD=0
"RTN","VPSSRVY4",69,0)
 . F  S FLD=$O(MSURVEY(SEQ,FLD)) QUIT:'FLD  S FDA(FIL,SUBS,FLD)=MSURVEY(SEQ,FLD)
"RTN","VPSSRVY4",70,0)
 . D UPDATE^DIE("E","FDA",,"FDAERR")
"RTN","VPSSRVY4",71,0)
 ; ;
"RTN","VPSSRVY4",72,0)
 ; -- store the survey data
"RTN","VPSSRVY4",73,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY4",74,0)
 ;
"RTN","VPSSRVY4",75,0)
ADDQUEST(VPSDFN,TID,TRNDT,MSURVEY,ANSSUR,WPFLD,MODFLG) ;add question
"RTN","VPSSRVY4",76,0)
 N FIL S FIL=853.8113
"RTN","VPSSRVY4",77,0)
 N SUBS,SUBWP
"RTN","VPSSRVY4",78,0)
 N ER
"RTN","VPSSRVY4",79,0)
 ;N FDA,FDAERR
"RTN","VPSSRVY4",80,0)
 N WPERR,I
"RTN","VPSSRVY4",81,0)
 ; -- fill in FDA with the survey data
"RTN","VPSSRVY4",82,0)
 S SEQ=0
"RTN","VPSSRVY4",83,0)
 F  S SEQ=$O(MSURVEY(SEQ)) Q:'SEQ  D  QUIT:($D(FDAERR)!$D(WPERR)!($G(ER)))
"RTN","VPSSRVY4",84,0)
 . I MODFLG=0 S SUBS="+1,1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",85,0)
 . E  S SUBS=SEQ_",1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",86,0)
 . K FDA S FLD=0
"RTN","VPSSRVY4",87,0)
 . F  S FLD=$O(MSURVEY(SEQ,FLD)) QUIT:'FLD  D
"RTN","VPSSRVY4",88,0)
 .. I '$D(WPFLD(FIL,FLD)) S FDA(FIL,SUBS,FLD)=MSURVEY(SEQ,FLD)
"RTN","VPSSRVY4",89,0)
 .. I $D(WPFLD(FIL,FLD)) D
"RTN","VPSSRVY4",90,0)
 ... N I
"RTN","VPSSRVY4",91,0)
 ... S I=0
"RTN","VPSSRVY4",92,0)
 ... K ^TMP("CSQ ARRAY",$J)
"RTN","VPSSRVY4",93,0)
 ... F  S I=$O(MSURVEY(SEQ,FLD,I)) Q:'I  S ^TMP("CSQ ARRAY",$J,I,0)=MSURVEY(SEQ,FLD,I)
"RTN","VPSSRVY4",94,0)
 . D UPDATE^DIE("E","FDA",,"FDAERR")
"RTN","VPSSRVY4",95,0)
 . S SUBWP=SEQ_",1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",96,0)
 . K WPERR
"RTN","VPSSRVY4",97,0)
 . D WP^DIE(FIL,SUBWP,2,"","^TMP(""CSQ ARRAY"",$J)","WPERR")
"RTN","VPSSRVY4",98,0)
 . I $D(ANSSUR(SEQ)) D
"RTN","VPSSRVY4",99,0)
 .. I MODFLG=2 D  ;K ^VPS(853.8,VPSDFN,1,TID,1,TRNDT,1,1,3,SEQ,3)
"RTN","VPSSRVY4",100,0)
 ... N DIK,DA
"RTN","VPSSRVY4",101,0)
 ... S DIK="^VPS(853.8,VPSDFN,1,TID,1,TRNDT,1,1,3,SEQ,3,"
"RTN","VPSSRVY4",102,0)
 ... S DA(1)=SEQ,DA(2)=1,DA(3)=TRNDT,DA(4)=TID,DA(5)=VPSDFN
"RTN","VPSSRVY4",103,0)
 ... S DA=" "
"RTN","VPSSRVY4",104,0)
 ... F  S DA=$O(^VPS(853.8,VPSDFN,1,TID,1,TRNDT,1,1,3,SEQ,3,DA),-1) Q:'DA  D ^DIK
"RTN","VPSSRVY4",105,0)
 .. N SQN
"RTN","VPSSRVY4",106,0)
 .. S SQN=""
"RTN","VPSSRVY4",107,0)
 .. F  S SQN=$O(ANSSUR(SEQ,SQN)) Q:SQN=""!($G(ER)]"")  S ER=$$ADDANS(VPSDFN,TID,TRNDT,.ANSSUR,.WPFLD,SEQ,SQN,SUBWP,MODFLG)
"RTN","VPSSRVY4",108,0)
 I '$D(FDAERR),$D(WPERR) G QWPER
"RTN","VPSSRVY4",109,0)
 ;
"RTN","VPSSRVY4",110,0)
 Q:$G(ER)]"" ER
"RTN","VPSSRVY4",111,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY4",112,0)
 ;
"RTN","VPSSRVY4",113,0)
QWPER ;
"RTN","VPSSRVY4",114,0)
 QUIT $$ERROR(.WPERR)
"RTN","VPSSRVY4",115,0)
 ;
"RTN","VPSSRVY4",116,0)
ADDANS(VPSDFN,TID,TRNDT,MSURVEY,WPFLD,SEQ,SQN,SUBS,MODFLG) ;add ANSWER
"RTN","VPSSRVY4",117,0)
 N FIL S FIL=853.81133
"RTN","VPSSRVY4",118,0)
 N FDA,FDAERR
"RTN","VPSSRVY4",119,0)
 N SUBWP,WPERR
"RTN","VPSSRVY4",120,0)
 ; -- fill in FDA with the survey data
"RTN","VPSSRVY4",121,0)
 ;
"RTN","VPSSRVY4",122,0)
 S SUBS="+1,"_SUBS
"RTN","VPSSRVY4",123,0)
 ;I MODFLG<2 S SUBS="+1,"_SUBS
"RTN","VPSSRVY4",124,0)
 ;E  S SUBS=$O(^VPS(853.8,VPSDFN,1,TID,1,TRNDT,1,1,3,SEQ,3," "),-1)_","_SUBS
"RTN","VPSSRVY4",125,0)
 K FDA S FLD=0
"RTN","VPSSRVY4",126,0)
 F  S FLD=$O(MSURVEY(SEQ,SQN,FLD)) QUIT:'FLD!($D(FDAERR))  D
"RTN","VPSSRVY4",127,0)
 . I '$D(WPFLD(FIL,FLD)) D
"RTN","VPSSRVY4",128,0)
 .. I FLD=.03,(MSURVEY(SEQ,SQN,FLD)=3!(MSURVEY(SEQ,SQN,FLD)["O")),$G(MSURVEY(SEQ,SQN,.04))="" S FDAERR("DIERR",1,"TEXT",1)="RESPONDENT NAME is required when RESPONDENT is other" Q
"RTN","VPSSRVY4",129,0)
 .. I '$D(WPFLD(FIL,FLD)) S FDA(FIL,SUBS,FLD)=MSURVEY(SEQ,SQN,FLD)
"RTN","VPSSRVY4",130,0)
 . I $D(WPFLD(FIL,FLD)) D
"RTN","VPSSRVY4",131,0)
 .. N I
"RTN","VPSSRVY4",132,0)
 .. S I=0
"RTN","VPSSRVY4",133,0)
 .. K ^TMP("CSQ ARRAY",$J)
"RTN","VPSSRVY4",134,0)
 .. F  S I=$O(MSURVEY(SEQ,SQN,FLD,I)) Q:'I  S ^TMP("CSQ ARRAY",$J,I,0)=MSURVEY(SEQ,SQN,FLD,I)
"RTN","VPSSRVY4",135,0)
 . Q:$D(FDAERR)
"RTN","VPSSRVY4",136,0)
 G:$D(FDAERR) AAEX
"RTN","VPSSRVY4",137,0)
 N IEN
"RTN","VPSSRVY4",138,0)
 D UPDATE^DIE("E","FDA","IEN","FDAERR")
"RTN","VPSSRVY4",139,0)
 I '$D(FDAERR) D
"RTN","VPSSRVY4",140,0)
 . I $G(IEN(1))="" S IEN(1)=1
"RTN","VPSSRVY4",141,0)
 . I MODFLG<2 S SUBWP=IEN(1)_","_SEQ_",1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",142,0)
 . E  S SUBWP=$O(^VPS(853.8,VPSDFN,1,TID,1,TRNDT,1,1,3,SEQ,3," "),-1)_","_SEQ_",1,"_TRNDT_","_TID_","_VPSDFN_","
"RTN","VPSSRVY4",143,0)
 . K WPERR
"RTN","VPSSRVY4",144,0)
 . D WP^DIE(FIL,SUBWP,6,"","^TMP(""CSQ ARRAY"",$J)","WPERR")
"RTN","VPSSRVY4",145,0)
 ;
"RTN","VPSSRVY4",146,0)
 I '$D(FDAERR),$D(WPERR) G QWPER
"RTN","VPSSRVY4",147,0)
 ;
"RTN","VPSSRVY4",148,0)
AAEX ;
"RTN","VPSSRVY4",149,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY4",150,0)
 ;
"RTN","VPSSRVY4",151,0)
ERROR(FDAERR) ;return error text
"RTN","VPSSRVY4",152,0)
 QUIT:'$D(FDAERR) ""
"RTN","VPSSRVY4",153,0)
 N ERRNUM S ERRNUM=0
"RTN","VPSSRVY4",154,0)
 S ERRNUM=$O(FDAERR("DIERR",ERRNUM))
"RTN","VPSSRVY4",155,0)
 N ERRTXT S ERRTXT=""
"RTN","VPSSRVY4",156,0)
 S:ERRNUM ERRTXT=FDAERR("DIERR",ERRNUM,"TEXT",1)
"RTN","VPSSRVY4",157,0)
 QUIT ERRTXT
"VER")
8.0^22.0
"^DD",853.8,853.8,0)
FIELD^^1^2
"^DD",853.8,853.8,0,"DDA")
N
"^DD",853.8,853.8,0,"DT")
3150916
"^DD",853.8,853.8,0,"IX","B",853.8,.01)

"^DD",853.8,853.8,0,"IX","C",853.81,1)

"^DD",853.8,853.8,0,"IX","C",853.81133,4)

"^DD",853.8,853.8,0,"IX","D",853.81,11)

"^DD",853.8,853.8,0,"IX","E",853.81,7)

"^DD",853.8,853.8,0,"IX","F",853.81,12)

"^DD",853.8,853.8,0,"NM","VPS CLINICAL SURVEY")

"^DD",853.8,853.8,0,"VRPK")
VPS
"^DD",853.8,853.8,.01,0)
PATIENT^RP2'X^DPT(^0;1^S DINUM=X Q
"^DD",853.8,853.8,.01,1,0)
^.1
"^DD",853.8,853.8,.01,1,1,0)
853.8^B
"^DD",853.8,853.8,.01,1,1,1)
S ^VPS(853.8,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.8,.01,1,1,2)
K ^VPS(853.8,"B",$E(X,1,30),DA)
"^DD",853.8,853.8,.01,1,1,"DT")
3140926
"^DD",853.8,853.8,.01,3)
Select the patient who entered the questionnaire.
"^DD",853.8,853.8,.01,21,0)
^.001^1^1^3150826^^^
"^DD",853.8,853.8,.01,21,1,0)
This is the patient who entered the questionnaire.
"^DD",853.8,853.8,.01,23,0)
^.001^2^2^3150826^^^
"^DD",853.8,853.8,.01,23,1,0)
Since this value is DINUM, this field represents the root IEN for this 
"^DD",853.8,853.8,.01,23,2,0)
file as well.
"^DD",853.8,853.8,.01,"DT")
3150824
"^DD",853.8,853.8,1,0)
QUESTIONNAIRE IDENTIFIER^853.805PA^^1;0
"^DD",853.8,853.8,1,21,0)
^.001^2^2^3150916^^^^
"^DD",853.8,853.8,1,21,1,0)
This multiple stores all the patient's questionnaire
"^DD",853.8,853.8,1,21,2,0)
identification information.
"^DD",853.8,853.8,1,"DT")
3141112
"^DD",853.8,853.805,0)
QUESTIONNAIRE IDENTIFIER SUB-FIELD^^1^2
"^DD",853.8,853.805,0,"DT")
3150916
"^DD",853.8,853.805,0,"IX","B",853.805,.01)

"^DD",853.8,853.805,0,"NM","QUESTIONNAIRE IDENTIFIER")

"^DD",853.8,853.805,0,"UP")
853.8
"^DD",853.8,853.805,.01,0)
QUESTIONNAIRE IDENTIFIER^RP853.85'X^VPS(853.85,^0;1^S DINUM=X Q
"^DD",853.8,853.805,.01,1,0)
^.1
"^DD",853.8,853.805,.01,1,1,0)
853.805^B
"^DD",853.8,853.805,.01,1,1,1)
S ^VPS(853.8,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.805,.01,1,1,2)
K ^VPS(853.8,DA(1),1,"B",$E(X,1,30),DA)
"^DD",853.8,853.805,.01,3)
Enter the IEN to the questionnaire that is being stored.
"^DD",853.8,853.805,.01,21,0)
^^2^2^3150916^
"^DD",853.8,853.805,.01,21,1,0)
This is a pointer to the VPS QUESTIONNAIRE IDENTIFIERS FILE (853.85).
"^DD",853.8,853.805,.01,21,2,0)
It indicates which questionnaire the patient has responsed to.
"^DD",853.8,853.805,.01,"DT")
3150824
"^DD",853.8,853.805,1,0)
QUESTIONNAIRE^853.81DA^^1;0
"^DD",853.8,853.805,1,21,0)
^.001^1^1^3150916^^^^
"^DD",853.8,853.805,1,21,1,0)
This multiple represents all questionnaires for the patient.
"^DD",853.8,853.81,0)
QUESTIONNAIRE SUB-FIELD^^1^13
"^DD",853.8,853.81,0,"DT")
3150916
"^DD",853.8,853.81,0,"IX","B",853.81,.01)

"^DD",853.8,853.81,0,"NM","QUESTIONNAIRE")

"^DD",853.8,853.81,0,"UP")
853.805
"^DD",853.8,853.81,.01,0)
DATE/TIME STORED^RDX^^0;1^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X S:$D(X) DINUM=X Q
"^DD",853.8,853.81,.01,1,0)
^.1
"^DD",853.8,853.81,.01,1,1,0)
853.81^B
"^DD",853.8,853.81,.01,1,1,1)
S ^VPS(853.8,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.81,.01,1,1,2)
K ^VPS(853.8,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",853.8,853.81,.01,3)
Enter Date/Time the questionnaire was stored.
"^DD",853.8,853.81,.01,21,0)
^^2^2^3150827^
"^DD",853.8,853.81,.01,21,1,0)
This is the Date/Time when the questionnaire sent by VetLink is stored in 
"^DD",853.8,853.81,.01,21,2,0)
VistA. This Date/Time is automatically generated.
"^DD",853.8,853.81,.01,"DT")
3150824
"^DD",853.8,853.81,.02,0)
SURVEY CREATOR^RP200'^VA(200,^0;2^Q
"^DD",853.8,853.81,.02,3)
Enter the staff who created this survey.
"^DD",853.8,853.81,.02,21,0)
^^1^1^3160118^
"^DD",853.8,853.81,.02,21,1,0)
This is the staff who created this survey.
"^DD",853.8,853.81,.02,"DT")
3160118
"^DD",853.8,853.81,1,0)
QUESTIONNAIRE RESPONSE^853.811A^^1;0
"^DD",853.8,853.81,1,21,0)
^.001^2^2^3150916^^^^
"^DD",853.8,853.81,1,21,1,0)
This is the questionnaire response multiple.  A patient may respond to a 
"^DD",853.8,853.81,1,21,2,0)
questionnaire more than one time.
"^DD",853.8,853.81,2,0)
DATE/TIME TAKEN^RD^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",853.8,853.81,2,3)
Enter Date/Time the questionnaire was taken.
"^DD",853.8,853.81,2,21,0)
^.001^1^1^3141114^^^^
"^DD",853.8,853.81,2,21,1,0)
This is the date/time the survey was taken by the patient.
"^DD",853.8,853.81,2,"DT")
3141114
"^DD",853.8,853.81,3,0)
DATE/TIME LAST MODIFIED^RD^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",853.8,853.81,3,3)
Enter Date/Time the questionnaire last modified.
"^DD",853.8,853.81,3,21,0)
^.001^1^1^3141107^^^
"^DD",853.8,853.81,3,21,1,0)
This is the Date/Time the survey was modified by patient or staff.
"^DD",853.8,853.81,3,"DT")
3141107
"^DD",853.8,853.81,4,0)
INTERVIEWER STAFF^P200'^VA(200,^0;5^Q
"^DD",853.8,853.81,4,3)
Enter the staff who interviewed the patient.
"^DD",853.8,853.81,4,21,0)
^^1^1^3140825^^
"^DD",853.8,853.81,4,21,1,0)
This is the staff who interviewed the patient during the survey.
"^DD",853.8,853.81,4,"DT")
3140825
"^DD",853.8,853.81,5,0)
SURVEY CALCULATED VALUE^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",853.8,853.81,5,3)
Enter calculated value for the survey. This value must be 3-250 characters in length.
"^DD",853.8,853.81,5,21,0)
^.001^1^1^3141104^^
"^DD",853.8,853.81,5,21,1,0)
This is the calculated value for the whole survey generated by Vetlink.
"^DD",853.8,853.81,5,"DT")
3140825
"^DD",853.8,853.81,6,0)
COMPLETION STATUS^S^C:COMPLETED;I:INCOMPLETE;^2;1^Q
"^DD",853.8,853.81,6,3)
Enter completion status for the questionnaire.
"^DD",853.8,853.81,6,21,0)
^^1^1^3140825^
"^DD",853.8,853.81,6,21,1,0)
This field indicates whether or not the survey was completed.
"^DD",853.8,853.81,6,"DT")
3140825
"^DD",853.8,853.81,7,0)
PATIENT SAFETY^S^Y:YES;N:NO;^2;2^Q
"^DD",853.8,853.81,7,1,0)
^.1
"^DD",853.8,853.81,7,1,1,0)
853.8^E
"^DD",853.8,853.81,7,1,1,1)
S ^VPS(853.8,"E",$E(X,1,30),DA(1),DA)=""
"^DD",853.8,853.81,7,1,1,2)
K ^VPS(853.8,"E",$E(X,1,30),DA(1),DA)
"^DD",853.8,853.81,7,1,1,"%D",0)
^^1^1^3141114^
"^DD",853.8,853.81,7,1,1,"%D",1,0)
This cross refernce of Patient Safty Field is for searching.
"^DD",853.8,853.81,7,1,1,"DT")
3141114
"^DD",853.8,853.81,7,3)
Enter whether or not this is Patient Safety Questionnaire.
"^DD",853.8,853.81,7,21,0)
^^1^1^3140825^
"^DD",853.8,853.81,7,21,1,0)
This field indicates whether or not the survey is a patient safety.
"^DD",853.8,853.81,7,"DT")
3141114
"^DD",853.8,853.81,8,0)
IMMEDIATE ACTION^S^Y:YES;N:NO;^2;3^Q
"^DD",853.8,853.81,8,3)
Enter whether or not the questionnaire requires immediate action.
"^DD",853.8,853.81,8,21,0)
^^1^1^3140825^
"^DD",853.8,853.81,8,21,1,0)
This field indicates whether or not the survey requires immediate action.
"^DD",853.8,853.81,8,"DT")
3140825
"^DD",853.8,853.81,11,0)
QUESTIONNAIRE TEMPLATE ID^RP853.85^VPS(853.85,^0;7^Q
"^DD",853.8,853.81,11,1,0)
^.1
"^DD",853.8,853.81,11,1,1,0)
853.8^D
"^DD",853.8,853.81,11,1,1,1)
S ^VPS(853.8,"D",$E(X,1,30),DA(1),DA)=""
"^DD",853.8,853.81,11,1,1,2)
K ^VPS(853.8,"D",$E(X,1,30),DA(1),DA)
"^DD",853.8,853.81,11,1,1,"%D",0)
^.101^2^2^3141107^^
"^DD",853.8,853.81,11,1,1,"%D",1,0)
This cross reference selects questionnaires taken by patients
"^DD",853.8,853.81,11,1,1,"%D",2,0)
using the Questionnaire Template ID.
"^DD",853.8,853.81,11,1,1,"DT")
3141001
"^DD",853.8,853.81,11,3)

"^DD",853.8,853.81,11,21,0)
^.001^1^1^3150310^^^^
"^DD",853.8,853.81,11,21,1,0)
This is the questionnaire template identification number.
"^DD",853.8,853.81,11,"DT")
3150310
"^DD",853.8,853.81,11,"V",0)
^.12P^1^1
"^DD",853.8,853.81,11,"V",1,0)
853.875^pointer to Template ID^1^ID^n^y
"^DD",853.8,853.81,12,0)
SURVEY CREATOR^RP200'^VA(200,^0;8^Q
"^DD",853.8,853.81,12,1,0)
^.1
"^DD",853.8,853.81,12,1,1,0)
853.8^F
"^DD",853.8,853.81,12,1,1,1)
S ^VPS(853.8,"F",$E(X,1,30),DA(1),DA)=""
"^DD",853.8,853.81,12,1,1,2)
K ^VPS(853.8,"F",$E(X,1,30),DA(1),DA)
"^DD",853.8,853.81,12,1,1,"%D",0)
^^1^1^3141114^
"^DD",853.8,853.81,12,1,1,"%D",1,0)
This cross reference of the survey creator is for searching.
"^DD",853.8,853.81,12,1,1,"DT")
3141114
"^DD",853.8,853.81,12,3)
Enter the staff who created this survey.
"^DD",853.8,853.81,12,21,0)
^^1^1^3141112^
"^DD",853.8,853.81,12,21,1,0)
This is the staff who created this survey.
"^DD",853.8,853.81,12,"DT")
3141114
"^DD",853.8,853.81,20,0)
QUESTIONS^853.811^^3;0
"^DD",853.8,853.81,20,21,0)
^.001^1^1^3141104^^
"^DD",853.8,853.81,20,21,1,0)
This multiple represents all questions for the survey.
"^DD",853.8,853.811,0)
QUESTIONNAIRE RESPONSE SUB-FIELD^^4^10
"^DD",853.8,853.811,0,"DT")
3150916
"^DD",853.8,853.811,0,"IX","B",853.811,.01)

"^DD",853.8,853.811,0,"NM","QUESTIONNAIRE RESPONSE")

"^DD",853.8,853.811,0,"UP")
853.81
"^DD",853.8,853.811,.01,0)
RESPONSE IDENTIFIER^RF^^0;1^K:$L(X)>60!($L(X)<3) X
"^DD",853.8,853.811,.01,1,0)
^.1
"^DD",853.8,853.811,.01,1,1,0)
853.811^B
"^DD",853.8,853.811,.01,1,1,1)
S ^VPS(853.8,DA(3),1,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.811,.01,1,1,2)
K ^VPS(853.8,DA(3),1,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",853.8,853.811,.01,3)
Answer must be 3-60 characters in length.
"^DD",853.8,853.811,.01,21,0)
^^1^1^3150826^
"^DD",853.8,853.811,.01,21,1,0)
This field contains the questionnaire response identifier from VetLink.
"^DD",853.8,853.811,.01,"DT")
3150909
"^DD",853.8,853.811,.02,0)
DATE/TIME TAKEN^D^^0;2^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",853.8,853.811,.02,3)
Enter date/time patient took the questionnaire.
"^DD",853.8,853.811,.02,21,0)
^.001^1^1^3150916^^^
"^DD",853.8,853.811,.02,21,1,0)
This field contains the date/time the patient took this questionnaire.
"^DD",853.8,853.811,.02,"DT")
3150916
"^DD",853.8,853.811,.03,0)
DATE/TIME LAST MODIFIED^D^^0;3^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",853.8,853.811,.03,3)
Enter the date/time someone last modified this questionnaire.
"^DD",853.8,853.811,.03,21,0)
^.001^1^1^3150916^^
"^DD",853.8,853.811,.03,21,1,0)
This is the Date/Time the survey was modified by patient or staff.
"^DD",853.8,853.811,.03,"DT")
3150916
"^DD",853.8,853.811,.04,0)
COMPLETION STATUS^RS^1:COMPLETE;2:INCOMPLETE;^0;4^Q
"^DD",853.8,853.811,.04,3)
Enter the completion status.
"^DD",853.8,853.811,.04,21,0)
^.001^1^1^3150916^^^
"^DD",853.8,853.811,.04,21,1,0)
This field contains the completion status for this questionnaire.
"^DD",853.8,853.811,.04,"DT")
3150824
"^DD",853.8,853.811,.05,0)
PATIENT SAFETY^RS^1:YES;2:NO;^0;5^Q
"^DD",853.8,853.811,.05,3)
Enter the patient safety status.
"^DD",853.8,853.811,.05,21,0)
^.001^1^1^3150916^^^
"^DD",853.8,853.811,.05,21,1,0)
This field contains the indicator for patient safety.
"^DD",853.8,853.811,.05,"DT")
3150824
"^DD",853.8,853.811,.06,0)
IMMEDIATE ACTION^S^1:YES;2:NO;^0;6^Q
"^DD",853.8,853.811,.06,3)
Enter the immediate action status.
"^DD",853.8,853.811,.06,21,0)
^.001^1^1^3150916^^^
"^DD",853.8,853.811,.06,21,1,0)
This field contains an indicator that immediate action is required.
"^DD",853.8,853.811,.06,"DT")
3150824
"^DD",853.8,853.811,1,0)
APPOINTMENT CHECK-IN^853.8111A^^1;0
"^DD",853.8,853.811,1,3)
Enter question presented in the questionnaire (must be 1-250 characters).
"^DD",853.8,853.811,1,21,0)
^.001^1^1^3150916^^^^
"^DD",853.8,853.811,1,21,1,0)
This multiple contains appointment check-in identifiers.
"^DD",853.8,853.811,1,"DT")
3140825
"^DD",853.8,853.811,2,0)
ADDITIONAL CALCULATED VALUE^853.8112A^^2;0
"^DD",853.8,853.811,2,3)
Enter response provided to the question (must be 1-250 characters).
"^DD",853.8,853.811,2,21,0)
^^1^1^3150826^
"^DD",853.8,853.811,2,21,1,0)
This multiple stores response additional calculated value information.
"^DD",853.8,853.811,2,"DT")
3140825
"^DD",853.8,853.811,3,0)
QUESTIONS^853.8113A^^3;0
"^DD",853.8,853.811,3,3)
Enter calculated value for the question (must be 1-250 characters).
"^DD",853.8,853.811,3,21,0)
^.001^1^1^3150916^^^^
"^DD",853.8,853.811,3,21,1,0)
This multiple contains the question details of a given questionnaire.
"^DD",853.8,853.811,3,"DT")
3140825
"^DD",853.8,853.811,4,0)
SURVEY CALCULATED VALUE^RF^^4;1^K:$L(X)>250!($L(X)<3) X
"^DD",853.8,853.811,4,3)
Enter calculated value for the survey. This value must be 3-250 characters in length. 
"^DD",853.8,853.811,4,21,0)
^^1^1^3150827^
"^DD",853.8,853.811,4,21,1,0)
This is the calculated value for the whole survey generated by Vetlink. 
"^DD",853.8,853.811,4,"DT")
3150826
"^DD",853.8,853.8111,0)
APPOINTMENT CHECK-IN SUB-FIELD^^.01^2
"^DD",853.8,853.8111,0,"DT")
3150824
"^DD",853.8,853.8111,0,"NM","APPOINTMENT CHECK-IN")

"^DD",853.8,853.8111,0,"UP")
853.811
"^DD",853.8,853.8111,.01,0)
APPOINTMENT CHECK-IN ID^F^^0;1^K:$L(X)>250!($L(X)<3) X
"^DD",853.8,853.8111,.01,1,0)
^.1^^0
"^DD",853.8,853.8111,.01,3)
Answer must be 3-250 characters in length.
"^DD",853.8,853.8111,.01,21,0)
^.001^1^1^3150916^^^^
"^DD",853.8,853.8111,.01,21,1,0)
This field contains an appointment check-in identifier.
"^DD",853.8,853.8111,.01,"DT")
3150916
"^DD",853.8,853.8111,1,0)
ANSWER HISTORY D/T^D^^1;1^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",853.8,853.8111,1,3)
Enter the date/time the Clinical Survey answer was recorded. 
"^DD",853.8,853.8111,1,21,0)
^^2^2^3160309^
"^DD",853.8,853.8111,1,21,1,0)
Answer History date/time represents the date and time the entry in this
"^DD",853.8,853.8111,1,21,2,0)
subfile was recorded.
"^DD",853.8,853.8111,1,"DT")
3160310
"^DD",853.8,853.8112,0)
ADDITIONAL CALCULATED VALUE SUB-FIELD^^.02^3
"^DD",853.8,853.8112,0,"DT")
3150824
"^DD",853.8,853.8112,0,"IX","B",853.8112,.01)

"^DD",853.8,853.8112,0,"NM","ADDITIONAL CALCULATED VALUE")

"^DD",853.8,853.8112,0,"UP")
853.811
"^DD",853.8,853.8112,.01,0)
ADDITIONAL CALC VALUE NAME^RF^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",853.8,853.8112,.01,1,0)
^.1
"^DD",853.8,853.8112,.01,1,1,0)
853.8112^B
"^DD",853.8,853.8112,.01,1,1,1)
S ^VPS(853.8,DA(4),1,DA(3),1,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.8112,.01,1,1,2)
K ^VPS(853.8,DA(4),1,DA(3),1,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",853.8,853.8112,.01,3)
Answer must be 1-20 characters in length.
"^DD",853.8,853.8112,.01,21,0)
^^1^1^3150826^
"^DD",853.8,853.8112,.01,21,1,0)
This field contains the name of the additional calculated value.
"^DD",853.8,853.8112,.01,"DT")
3150824
"^DD",853.8,853.8112,.02,0)
ADDITIONAL CALC VALUE SCORE^RF^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",853.8,853.8112,.02,3)
Answer must be 1-20 characters in length.
"^DD",853.8,853.8112,.02,21,0)
^^1^1^3150826^
"^DD",853.8,853.8112,.02,21,1,0)
This field contains the score for the additional calcualted value.
"^DD",853.8,853.8112,.02,"DT")
3150824
"^DD",853.8,853.8112,1,0)
ANSWER HISTORY D/T^D^^2;1^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",853.8,853.8112,1,3)
Enter the date/time the Clinical Survey answer was recorded. 
"^DD",853.8,853.8112,1,21,0)
^^2^2^3160309^
"^DD",853.8,853.8112,1,21,1,0)
Answer History date/time represents the date and time the entry in this
"^DD",853.8,853.8112,1,21,2,0)
subfile was recorded.
"^DD",853.8,853.8112,1,"DT")
3160310
"^DD",853.8,853.8113,0)
QUESTIONS SUB-FIELD^^3^4
"^DD",853.8,853.8113,0,"DT")
3150916
"^DD",853.8,853.8113,0,"IX","B",853.8113,.01)

"^DD",853.8,853.8113,0,"NM","QUESTIONS")

"^DD",853.8,853.8113,0,"UP")
853.811
"^DD",853.8,853.8113,.01,0)
QUESTION NUMBER^RF^^0;1^K:$L(X)>4!($L(X)<1) X
"^DD",853.8,853.8113,.01,1,0)
^.1
"^DD",853.8,853.8113,.01,1,1,0)
853.8113^B
"^DD",853.8,853.8113,.01,1,1,1)
S ^VPS(853.8,DA(4),1,DA(3),1,DA(2),1,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.8113,.01,1,1,2)
K ^VPS(853.8,DA(4),1,DA(3),1,DA(2),1,DA(1),3,"B",$E(X,1,30),DA)
"^DD",853.8,853.8113,.01,3)
Answer must be 1-4 characters in length.
"^DD",853.8,853.8113,.01,21,0)
^.001^2^2^3150827^^
"^DD",853.8,853.8113,.01,21,1,0)
This field contains the number associated with a question on the given 
"^DD",853.8,853.8113,.01,21,2,0)
questionnaire.
"^DD",853.8,853.8113,.01,"DT")
3150824
"^DD",853.8,853.8113,1,0)
QUESTION CALCULATED VALUE^RF^^1;1^K:$L(X)>250!($L(X)<3) X
"^DD",853.8,853.8113,1,3)
Enter calculated value for the question (must be 3-250 characters). 
"^DD",853.8,853.8113,1,21,0)
^^1^1^3150827^
"^DD",853.8,853.8113,1,21,1,0)
This is calculated value for each question generated by Vetlink. 
"^DD",853.8,853.8113,1,"DT")
3150824
"^DD",853.8,853.8113,2,0)
QUESTION PRESENTED^853.81132^^2;0
"^DD",853.8,853.8113,2,21,0)
^.001^3^3^3150831^^
"^DD",853.8,853.8113,2,21,1,0)
This field contains a question of the given questionnaire. This question 
"^DD",853.8,853.8113,2,21,2,0)
is displayed to the patient then the patient is to provide an answer to 
"^DD",853.8,853.8113,2,21,3,0)
this question.
"^DD",853.8,853.8113,3,0)
ANSWER^853.81133A^^3;0
"^DD",853.8,853.8113,3,21,0)
^.001^2^2^3150916^^^^
"^DD",853.8,853.8113,3,21,1,0)
This multiple contains the answer(s) the patient gave to the given 
"^DD",853.8,853.8113,3,21,2,0)
question on the given questionnaire.
"^DD",853.8,853.81132,0)
QUESTION PRESENTED SUB-FIELD^^.01^1
"^DD",853.8,853.81132,0,"DT")
3150824
"^DD",853.8,853.81132,0,"NM","QUESTION PRESENTED")

"^DD",853.8,853.81132,0,"UP")
853.8113
"^DD",853.8,853.81132,.01,0)
QUESTION PRESENTED^Wx^^0;1^Q
"^DD",853.8,853.81132,.01,3)
Enter a question for the given questionnaire to be answered by the patient.
"^DD",853.8,853.81132,.01,21,0)
^.001^3^3^3150831^^
"^DD",853.8,853.81132,.01,21,1,0)
This field contains a question of the given questionnaire. This question
"^DD",853.8,853.81132,.01,21,2,0)
is displayed to the patient then the patient is to provide an answer to
"^DD",853.8,853.81132,.01,21,3,0)
this question.
"^DD",853.8,853.81132,.01,"DT")
3150824
"^DD",853.8,853.81133,0)
ANSWER SUB-FIELD^^6^11
"^DD",853.8,853.81133,0,"DT")
3150916
"^DD",853.8,853.81133,0,"IX","B",853.81133,.01)

"^DD",853.8,853.81133,0,"NM","ANSWER")

"^DD",853.8,853.81133,0,"UP")
853.8113
"^DD",853.8,853.81133,.01,0)
ANSWER IDENTIFIER^RF^^0;1^K:$L(X)>250!($L(X)<3) X
"^DD",853.8,853.81133,.01,1,0)
^.1
"^DD",853.8,853.81133,.01,1,1,0)
853.81133^B
"^DD",853.8,853.81133,.01,1,1,1)
S ^VPS(853.8,DA(5),1,DA(4),1,DA(3),1,DA(2),3,DA(1),3,"B",$E(X,1,250),DA)=""
"^DD",853.8,853.81133,.01,1,1,2)
K ^VPS(853.8,DA(5),1,DA(4),1,DA(3),1,DA(2),3,DA(1),3,"B",$E(X,1,250),DA)
"^DD",853.8,853.81133,.01,3)
Answer must be 3-250 characters in length.
"^DD",853.8,853.81133,.01,21,0)
^^1^1^3150826^
"^DD",853.8,853.81133,.01,21,1,0)
This field contains an answer identifier.
"^DD",853.8,853.81133,.01,"DT")
3150824
"^DD",853.8,853.81133,.02,0)
INTERFACE USED^RS^1:ADMIN;2:KIOSK;^1;1^Q
"^DD",853.8,853.81133,.02,3)
Enter a value for which interface was used.
"^DD",853.8,853.81133,.02,21,0)
^.001^1^1^3150916^^
"^DD",853.8,853.81133,.02,21,1,0)
This field identifies what interface the data came from.
"^DD",853.8,853.81133,.02,"DT")
3150824
"^DD",853.8,853.81133,.03,0)
RESPONDENT^RS^1:PATIENT;2:STAFF;3:OTHER;^1;2^Q
"^DD",853.8,853.81133,.03,3)
Enter a value for the respondent.
"^DD",853.8,853.81133,.03,21,0)
^.001^1^1^3150916^^
"^DD",853.8,853.81133,.03,21,1,0)
This field captures who actually supplied the data.
"^DD",853.8,853.81133,.03,"DT")
3150824
"^DD",853.8,853.81133,.04,0)
RESPONDENT NAME^F^^1;3^K:$L(X)>60!($L(X)<1) X
"^DD",853.8,853.81133,.04,3)
Answer must be 1-60 characters in length.
"^DD",853.8,853.81133,.04,21,0)
^^3^3^3150826^
"^DD",853.8,853.81133,.04,21,1,0)
This is the name of the person that answered this question, if different 
"^DD",853.8,853.81133,.04,21,2,0)
from the patient.  If the response was not answered by the patient, this 
"^DD",853.8,853.81133,.04,21,3,0)
field is required.
"^DD",853.8,853.81133,.04,"DT")
3150824
"^DD",853.8,853.81133,.05,0)
ANSWER HISTORY D/T^D^^1;6^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",853.8,853.81133,.05,3)
Enter the date/time the Clinical Survey answer was recorded.
"^DD",853.8,853.81133,.05,21,0)
^^2^2^3160309^
"^DD",853.8,853.81133,.05,21,1,0)
Answer History date/time represents the date and time the entry in this
"^DD",853.8,853.81133,.05,21,2,0)
subfile was recorded.
"^DD",853.8,853.81133,.05,"DT")
3160310
"^DD",853.8,853.81133,1,0)
ANSWER DATE/TIME^RD^^1;4^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",853.8,853.81133,1,3)
Enter date/time answer was provided.
"^DD",853.8,853.81133,1,21,0)
^.001^1^1^3150916^^
"^DD",853.8,853.81133,1,21,1,0)
This field contains the date/time the patient answered the given question.
"^DD",853.8,853.81133,1,"DT")
3150916
"^DD",853.8,853.81133,2,0)
INTERVIEWER NAME^F^^1;5^K:$L(X)>60!($L(X)<1) X
"^DD",853.8,853.81133,2,3)
Answer must be 1-60 characters in length.
"^DD",853.8,853.81133,2,21,0)
^^1^1^3150826^
"^DD",853.8,853.81133,2,21,1,0)
This is the name of the staff member that asked the associated question.
"^DD",853.8,853.81133,2,"DT")
3150824
"^DD",853.8,853.81133,3,0)
KIOSK IDENTIFIER^F^^2;1^K:$L(X)>250!($L(X)<3) X
"^DD",853.8,853.81133,3,3)
Answer must be 3-250 characters in length.
"^DD",853.8,853.81133,3,21,0)
^^1^1^3150826^
"^DD",853.8,853.81133,3,21,1,0)
This field contains the kiosk identifier.
"^DD",853.8,853.81133,3,"DT")
3150824
"^DD",853.8,853.81133,4,0)
KIOSK SESSION IDENTIFIER^F^^3;1^K:$L(X)>250!($L(X)<3) X
"^DD",853.8,853.81133,4,1,0)
^.1
"^DD",853.8,853.81133,4,1,1,0)
853.8^C
"^DD",853.8,853.81133,4,1,1,1)
S ^VPS(853.8,"C",$E(X,1,30),DA(5),DA(4),DA(3),DA(2),DA(1),DA)=""
"^DD",853.8,853.81133,4,1,1,2)
K ^VPS(853.8,"C",$E(X,1,30),DA(5),DA(4),DA(3),DA(2),DA(1),DA)
"^DD",853.8,853.81133,4,1,1,"%D",0)
^^2^2^3150911^
"^DD",853.8,853.81133,4,1,1,"%D",1,0)
Index needed for edit validation. If key fields do not match then 
"^DD",853.8,853.81133,4,1,1,"%D",2,0)
information cannot be editted.
"^DD",853.8,853.81133,4,1,1,"DT")
3150911
"^DD",853.8,853.81133,4,3)
Answer must be 3-250 characters in length.
"^DD",853.8,853.81133,4,21,0)
^^1^1^3150826^
"^DD",853.8,853.81133,4,21,1,0)
This field contains the kiosk session identifier.
"^DD",853.8,853.81133,4,"DT")
3150911
"^DD",853.8,853.81133,5,0)
KIOSK GROUP IDENTIFIER^F^^4;1^K:$L(X)>250!($L(X)<3) X
"^DD",853.8,853.81133,5,3)
Answer must be 3-250 characters in length.
"^DD",853.8,853.81133,5,21,0)
^^1^1^3150826^
"^DD",853.8,853.81133,5,21,1,0)
This field contains the kiosk group identifier.
"^DD",853.8,853.81133,5,"DT")
3150824
"^DD",853.8,853.81133,6,0)
ANSWER TEXT^853.811336^^5;0
"^DD",853.8,853.81133,6,21,0)
^.001^2^2^3150827^^
"^DD",853.8,853.81133,6,21,1,0)
This field contains the information the patient gave in response to the 
"^DD",853.8,853.81133,6,21,2,0)
given question.
"^DD",853.8,853.811336,0)
ANSWER TEXT SUB-FIELD^^.01^1
"^DD",853.8,853.811336,0,"DT")
3150824
"^DD",853.8,853.811336,0,"NM","ANSWER TEXT")

"^DD",853.8,853.811336,0,"UP")
853.81133
"^DD",853.8,853.811336,.01,0)
ANSWER TEXT^Wx^^0;1^Q
"^DD",853.8,853.811336,.01,3)
Enter the patient's response to the given question.
"^DD",853.8,853.811336,.01,21,0)
^.001^2^2^3150827^^
"^DD",853.8,853.811336,.01,21,1,0)
This field contains the information the patient gave in response to the
"^DD",853.8,853.811336,.01,21,2,0)
given question.
"^DD",853.8,853.811336,.01,"DT")
3150824
"^DD",853.85,853.85,0)
FIELD^^3^4
"^DD",853.85,853.85,0,"DDA")
N
"^DD",853.85,853.85,0,"DT")
3150930
"^DD",853.85,853.85,0,"IX","B",853.85,.01)

"^DD",853.85,853.85,0,"NM","VPS QUESTIONNAIRE IDENTIFIERS")

"^DD",853.85,853.85,0,"PT",853.805,.01)

"^DD",853.85,853.85,0,"PT",853.81,11)

"^DD",853.85,853.85,0,"VRPK")
VPS
"^DD",853.85,853.85,.01,0)
TEMPLATE ID^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",853.85,853.85,.01,1,0)
^.1^^0
"^DD",853.85,853.85,.01,1,1,0)
853.85^B
"^DD",853.85,853.85,.01,1,1,1)
S ^VPS(853.85,"B",$E(X,1,30),DA)=""
"^DD",853.85,853.85,.01,1,1,2)
K ^VPS(853.85,"B",$E(X,1,30),DA)
"^DD",853.85,853.85,.01,3)
Answer must be 3-60 characters in length.
"^DD",853.85,853.85,.01,21,0)
^^1^1^3150310^
"^DD",853.85,853.85,.01,21,1,0)
This is the unique questionnaire template identification string.
"^DD",853.85,853.85,.01,"DT")
3150325
"^DD",853.85,853.85,1,0)
SURVEY NAME^RF^^1;1^K:$L(X)>240!($L(X)<3) X
"^DD",853.85,853.85,1,3)
Answer must be 3-240 characters in length.
"^DD",853.85,853.85,1,21,0)
^^2^2^3150327^
"^DD",853.85,853.85,1,21,1,0)
This Questionnaire Name represents the questionnaire built by and stored 
"^DD",853.85,853.85,1,21,2,0)
in VetLink. This value must be 3-240 characters in length.
"^DD",853.85,853.85,1,"DT")
3150327
"^DD",853.85,853.85,2,0)
VERSION^RNJ4,0^^1;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",853.85,853.85,2,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",853.85,853.85,2,21,0)
^^2^2^3150310^
"^DD",853.85,853.85,2,21,1,0)
This is the questionnaire version number which tracks questionnaire
"^DD",853.85,853.85,2,21,2,0)
revisions.
"^DD",853.85,853.85,2,"DT")
3150310
"^DD",853.85,853.85,3,0)
QUESTIONNAIRE INTERNAL NAME^853.853^^2;0
"^DD",853.85,853.85,3,"DT")
3150310
"^DD",853.85,853.853,0)
QUESTIONNAIRE INTERNAL NAME SUB-FIELD^^.01^1
"^DD",853.85,853.853,0,"DT")
3150930
"^DD",853.85,853.853,0,"NM","QUESTIONNAIRE INTERNAL NAME")

"^DD",853.85,853.853,0,"UP")
853.85
"^DD",853.85,853.853,.01,0)
QUESTIONNAIRE INTERNAL NAME^Wx^^0;1^Q
"^DD",853.85,853.853,.01,3)
Enter Questionnaire internal name.
"^DD",853.85,853.853,.01,21,0)
^.001^1^1^3151026^^^^
"^DD",853.85,853.853,.01,21,1,0)
This is the Questionnaire Internal Name.
"^DD",853.85,853.853,.01,"DT")
3150930
"^DIC",853.8,853.8,0)
VPS CLINICAL SURVEY^853.8
"^DIC",853.8,853.8,0,"GL")
^VPS(853.8,
"^DIC",853.8,853.8,"%",0)
^1.005^1^1
"^DIC",853.8,853.8,"%",1,0)
GMTS
"^DIC",853.8,853.8,"%","B","GMTS",1)

"^DIC",853.8,853.8,"%D",0)
^^8^8^3150826^
"^DIC",853.8,853.8,"%D",1,0)
This is the Clinical Survey Questionnaire data file for VA Point of 
"^DIC",853.8,853.8,"%D",2,0)
Service (VPS) Kiosk application. VetLink (patient-facing or staff-facing) 
"^DIC",853.8,853.8,"%D",3,0)
uses Remote Procedure Call (RPC) APIs to store Survey Questionnaire
"^DIC",853.8,853.8,"%D",4,0)
question-patient responses pairs.
"^DIC",853.8,853.8,"%D",5,0)
 
"^DIC",853.8,853.8,"%D",6,0)
The data stored in this file is sorted by patient and by survey. Each 
"^DIC",853.8,853.8,"%D",7,0)
patient will have multiple surveys and each survey contains multiple 
"^DIC",853.8,853.8,"%D",8,0)
questions and responses.
"^DIC",853.8,"B","VPS CLINICAL SURVEY",853.8)

"^DIC",853.85,853.85,0)
VPS QUESTIONNAIRE IDENTIFIERS^853.85
"^DIC",853.85,853.85,0,"GL")
^VPS(853.85,
"^DIC",853.85,853.85,"%",0)
^1.005^1^1
"^DIC",853.85,853.85,"%",1,0)
GMTS
"^DIC",853.85,853.85,"%","B","GMTS",1)

"^DIC",853.85,853.85,"%D",0)
^^3^3^3150310^
"^DIC",853.85,853.85,"%D",1,0)
This file contains the key identifiers for a VPS Clinical Survey.
"^DIC",853.85,853.85,"%D",2,0)
The Template ID is the unique identifier of the VPS Clinical Survey. This
"^DIC",853.85,853.85,"%D",3,0)
file contains the Template ID, Survey Name and Version.
"^DIC",853.85,"B","VPS QUESTIONNAIRE IDENTIFIERS",853.85)

**END**
**END**
