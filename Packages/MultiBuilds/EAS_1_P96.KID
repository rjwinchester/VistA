KIDS Distribution saved on Feb 19, 2014@16:17:38
Patch EAS*1*96 and IVM*2*156
**KIDS**:EAS*1.0*96^IVM*2.0*156^

**INSTALL NAME**
EAS*1.0*96
"BLD",7189,0)
EAS*1.0*96^ENROLLMENT APPLICATION SYSTEM^0^3140219^y
"BLD",7189,1,0)
^^5^5^3130621^
"BLD",7189,1,1,0)
Enrollment System Redesign (ESR) became the official System 
"BLD",7189,1,2,0)
of Record on March 29, 2009. The Health Eligibility Center Legacy (HECL)
"BLD",7189,1,3,0)
system will be decommissioned.  This patch will inactivate the HL7
"BLD",7189,1,4,0)
protocols used for messaging with the HECL and will be installed shortly
"BLD",7189,1,5,0)
before the HECL is decommissioned.
"BLD",7189,4,0)
^9.64PA^^
"BLD",7189,6.3)
18
"BLD",7189,"ABPKG")
n
"BLD",7189,"INID")
n^n^n
"BLD",7189,"INIT")
EN^EAS1096P
"BLD",7189,"KRN",0)
^9.67PA^779.2^20
"BLD",7189,"KRN",.4,0)
.4
"BLD",7189,"KRN",.401,0)
.401
"BLD",7189,"KRN",.402,0)
.402
"BLD",7189,"KRN",.403,0)
.403
"BLD",7189,"KRN",.5,0)
.5
"BLD",7189,"KRN",.84,0)
.84
"BLD",7189,"KRN",3.6,0)
3.6
"BLD",7189,"KRN",3.8,0)
3.8
"BLD",7189,"KRN",9.2,0)
9.2
"BLD",7189,"KRN",9.8,0)
9.8
"BLD",7189,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7189,"KRN",9.8,"NM",1,0)
EAS1096P^^0^B5144422
"BLD",7189,"KRN",9.8,"NM",2,0)
EAS1071B^^0^B28016852
"BLD",7189,"KRN",9.8,"NM",3,0)
EASCM^^0^B80540897
"BLD",7189,"KRN",9.8,"NM","B","EAS1071B",2)

"BLD",7189,"KRN",9.8,"NM","B","EAS1096P",1)

"BLD",7189,"KRN",9.8,"NM","B","EASCM",3)

"BLD",7189,"KRN",19,0)
19
"BLD",7189,"KRN",19,"NM",0)
^9.68A^^
"BLD",7189,"KRN",19.1,0)
19.1
"BLD",7189,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",7189,"KRN",101,0)
101
"BLD",7189,"KRN",409.61,0)
409.61
"BLD",7189,"KRN",771,0)
771
"BLD",7189,"KRN",779.2,0)
779.2
"BLD",7189,"KRN",870,0)
870
"BLD",7189,"KRN",8989.51,0)
8989.51
"BLD",7189,"KRN",8989.52,0)
8989.52
"BLD",7189,"KRN",8994,0)
8994
"BLD",7189,"KRN","B",.4,.4)

"BLD",7189,"KRN","B",.401,.401)

"BLD",7189,"KRN","B",.402,.402)

"BLD",7189,"KRN","B",.403,.403)

"BLD",7189,"KRN","B",.5,.5)

"BLD",7189,"KRN","B",.84,.84)

"BLD",7189,"KRN","B",3.6,3.6)

"BLD",7189,"KRN","B",3.8,3.8)

"BLD",7189,"KRN","B",9.2,9.2)

"BLD",7189,"KRN","B",9.8,9.8)

"BLD",7189,"KRN","B",19,19)

"BLD",7189,"KRN","B",19.1,19.1)

"BLD",7189,"KRN","B",101,101)

"BLD",7189,"KRN","B",409.61,409.61)

"BLD",7189,"KRN","B",771,771)

"BLD",7189,"KRN","B",779.2,779.2)

"BLD",7189,"KRN","B",870,870)

"BLD",7189,"KRN","B",8989.51,8989.51)

"BLD",7189,"KRN","B",8989.52,8989.52)

"BLD",7189,"KRN","B",8994,8994)

"BLD",7189,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7189,"QUES",0)
^9.62^^
"BLD",7189,"REQB",0)
^9.611^1^1
"BLD",7189,"REQB",1,0)
EAS*1.0*71^2
"BLD",7189,"REQB","B","EAS*1.0*71",1)

"INIT")
EN^EAS1096P
"MBREQ")
0
"PKG",187,-1)
1^1
"PKG",187,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",187,20,0)
^9.402P^^0
"PKG",187,22,0)
^9.49I^1^1
"PKG",187,22,1,0)
1.0^3010315^3010321^66481
"PKG",187,22,1,"PAH",1,0)
96^3140219^123457011
"PKG",187,22,1,"PAH",1,1,0)
^^5^5^3140219
"PKG",187,22,1,"PAH",1,1,1,0)
Enrollment System Redesign (ESR) became the official System 
"PKG",187,22,1,"PAH",1,1,2,0)
of Record on March 29, 2009. The Health Eligibility Center Legacy (HECL)
"PKG",187,22,1,"PAH",1,1,3,0)
system will be decommissioned.  This patch will inactivate the HL7
"PKG",187,22,1,"PAH",1,1,4,0)
protocols used for messaging with the HECL and will be installed shortly
"PKG",187,22,1,"PAH",1,1,5,0)
before the HECL is decommissioned.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","EAS1071B")
0^2^B28016852
"RTN","EAS1071B",1,0)
EAS1071B ;ALB/PJH - EAS*1*71; ; 22 Jan 2014  12:46 PM
"RTN","EAS1071B",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**71,96**;15-MAR-01;Build 18
"RTN","EAS1071B",3,0)
 Q
"RTN","EAS1071B",4,0)
 ;
"RTN","EAS1071B",5,0)
EN(ARR) ;ENTRY POINT
"RTN","EAS1071B",6,0)
 ;
"RTN","EAS1071B",7,0)
 N DA,DIK,LINE,LCT,NAM,PREFIX,RESULT
"RTN","EAS1071B",8,0)
 ;
"RTN","EAS1071B",9,0)
 S ARR="HEC messaging NOT disabled"
"RTN","EAS1071B",10,0)
 ;
"RTN","EAS1071B",11,0)
 ; Get site's Station #
"RTN","EAS1071B",12,0)
 S PREFIX="VAMC "_$P($$SITE^VASITE,"^",3)_" "
"RTN","EAS1071B",13,0)
 ;
"RTN","EAS1071B",14,0)
 I $$SOR^EAS1071C(PREFIX,PREFIX) D  Q
"RTN","EAS1071B",15,0)
 .S ARR="Unable to disable messaging, HEC is SOR"
"RTN","EAS1071B",16,0)
 ;
"RTN","EAS1071B",17,0)
 ;Remove HEC client subscriber protocols from shared servers.  Only quit processing if not EAS1096P
"RTN","EAS1071B",18,0)
 F LCT=1:1 S LINE=$T(PROTDAT+LCT) Q:$P(LINE,";",3)="END"  D  I '$G(EAS1096P) Q:STOP
"RTN","EAS1071B",19,0)
 .S NAM=PREFIX_$P(LINE,";",3)_" CLIENT"
"RTN","EAS1071B",20,0)
 .S SIEN101=$O(^ORD(101,"B",NAM,0))
"RTN","EAS1071B",21,0)
 .I +SIEN101=0 D  Q
"RTN","EAS1071B",22,0)
 ..S ERROR="IEN OF RECORD TO BE UPDATED NOT FOUND"
"RTN","EAS1071B",23,0)
 ..S RETURN=-1_"^"_ERROR
"RTN","EAS1071B",24,0)
 ..D ERROR(RETURN,"Event Driver:"_NAM)
"RTN","EAS1071B",25,0)
 .;If this is a SUBSCRIBER remove from SERVER
"RTN","EAS1071B",26,0)
 .I $O(^ORD(101,"AB",SIEN101,0)) D REMOVE(SIEN101,NAM)
"RTN","EAS1071B",27,0)
 ;
"RTN","EAS1071B",28,0)
 ;Add disable text to HEC to ESR servers
"RTN","EAS1071B",29,0)
 F LCT=1:1 S LINE=$T(PROTDAT1+LCT) Q:$P(LINE,";",3)="END"  D
"RTN","EAS1071B",30,0)
 .S NAM=PREFIX_$P(LINE,";",3)
"RTN","EAS1071B",31,0)
 .;Insert disable text
"RTN","EAS1071B",32,0)
 .S RESULT=$$EDP(NAM,"Disable VistA to HEC Messaging")
"RTN","EAS1071B",33,0)
 .I +RESULT<0 D ERROR(RESULT,"Event Driver:"_NAM)
"RTN","EAS1071B",34,0)
 ;
"RTN","EAS1071B",35,0)
 S:'STOP ARR="HEC messaging disabled"
"RTN","EAS1071B",36,0)
 Q
"RTN","EAS1071B",37,0)
 ;
"RTN","EAS1071B",38,0)
EDP(PNAME,DTXT) ;Remove Disable Text from Event Driver Protocols
"RTN","EAS1071B",39,0)
 ;
"RTN","EAS1071B",40,0)
 N DATA,FILE,DGENDA,RETURN,ERROR,DA
"RTN","EAS1071B",41,0)
 S FILE=101
"RTN","EAS1071B",42,0)
 S IEN101=$O(^ORD(101,"B",PNAME,0))
"RTN","EAS1071B",43,0)
 I 'IEN101 D  Q RETURN
"RTN","EAS1071B",44,0)
 . S ERROR="IEN OF RECORD TO BE UPDATED NOT FOUND"
"RTN","EAS1071B",45,0)
 . S RETURN=-1_"^"_ERROR
"RTN","EAS1071B",46,0)
 ;
"RTN","EAS1071B",47,0)
 S DATA(2)=DTXT
"RTN","EAS1071B",48,0)
 S RETURN=$$UPD^DGENDBS(FILE,IEN101,.DATA,.ERROR)
"RTN","EAS1071B",49,0)
 I ERROR'=""!(+RETURN=0) S RETURN=-1_"^"_ERROR
"RTN","EAS1071B",50,0)
 ;
"RTN","EAS1071B",51,0)
 Q RETURN
"RTN","EAS1071B",52,0)
 ;
"RTN","EAS1071B",53,0)
REMOVE(CLIENT,CNAM) ;Remove clients from server
"RTN","EAS1071B",54,0)
 N DA,DIK,SERV,SNAM,SUB
"RTN","EAS1071B",55,0)
 S SERV=0
"RTN","EAS1071B",56,0)
 F  S SERV=$O(^ORD(101,"AB",CLIENT,SERV)) Q:'SERV  D
"RTN","EAS1071B",57,0)
 .S SUB=0,SNAM=$P($G(^ORD(101,SERV,0)),U)
"RTN","EAS1071B",58,0)
 .F  S SUB=$O(^ORD(101,"AB",CLIENT,SERV,SUB)) Q:'SUB  D
"RTN","EAS1071B",59,0)
 ..S DA(1)=SERV,DA=SUB,DIK="^ORD(101,"_DA(1)_",775," D ^DIK
"RTN","EAS1071B",60,0)
 Q
"RTN","EAS1071B",61,0)
 ;
"RTN","EAS1071B",62,0)
PROTDAT ;VistA to HEC clients on shared Event Drivers
"RTN","EAS1071B",63,0)
 ;;ORU-Z07
"RTN","EAS1071B",64,0)
 ;;ORU-Z09
"RTN","EAS1071B",65,0)
 ;;ORF-Z07
"RTN","EAS1071B",66,0)
 ;;END
"RTN","EAS1071B",67,0)
 ;;NOTE THAT THESE ARE HANDLED BY QRY^EAS1071A
"RTN","EAS1071B",68,0)
 ;;QRY-Z10
"RTN","EAS1071B",69,0)
 ;;QRY-Z11
"RTN","EAS1071B",70,0)
 ;;END
"RTN","EAS1071B",71,0)
 ;
"RTN","EAS1071B",72,0)
PROTDAT1 ;HEC to Vista Event Drivers to disable
"RTN","EAS1071B",73,0)
 ;;ORU-Z04 SERVER H
"RTN","EAS1071B",74,0)
 ;;ORU-Z04 SERVER V
"RTN","EAS1071B",75,0)
 ;;ORU-Z05 SERVER
"RTN","EAS1071B",76,0)
 ;;ORU-Z10 SERVER
"RTN","EAS1071B",77,0)
 ;;ORU-Z11 SERVER
"RTN","EAS1071B",78,0)
 ;;ORF-Z10 SERVER
"RTN","EAS1071B",79,0)
 ;;ORF-Z11 SERVER
"RTN","EAS1071B",80,0)
 ;;QRY-Z07 SERVER
"RTN","EAS1071B",81,0)
 ;;MFN-ZEG SERVER
"RTN","EAS1071B",82,0)
 ;;END
"RTN","EAS1071B",83,0)
 ;
"RTN","EAS1071B",84,0)
RESET(ARR) ;Enable or Attach HEC protocols
"RTN","EAS1071B",85,0)
 ; Do not perform Reset for EAS1096P Project
"RTN","EAS1071B",86,0)
 I $G(EAS1096P) Q
"RTN","EAS1071B",87,0)
 ;
"RTN","EAS1071B",88,0)
 N DA,DIK,ERROR,IEN101,LINE,LCT,NAM,PREFIX,SIEN101,SNAM,STOP
"RTN","EAS1071B",89,0)
 ;
"RTN","EAS1071B",90,0)
 S ARR="HEC messaging NOT re enabled"
"RTN","EAS1071B",91,0)
 ;
"RTN","EAS1071B",92,0)
 ; Get site's Station #
"RTN","EAS1071B",93,0)
 S PREFIX="VAMC "_$P($$SITE^VASITE,"^",3)_" ",STOP=0
"RTN","EAS1071B",94,0)
 ;
"RTN","EAS1071B",95,0)
 ;Enable to VistA to HEC Legacy servers
"RTN","EAS1071B",96,0)
 F LCT=1:1 S LINE=$T(PROTDAT1+LCT) Q:$P(LINE,";",3)="END"  D
"RTN","EAS1071B",97,0)
 .S NAM=PREFIX_$P(LINE,";",3)
"RTN","EAS1071B",98,0)
 .;Remove disable text
"RTN","EAS1071B",99,0)
 .S RESULT=$$EDP(NAM,"")
"RTN","EAS1071B",100,0)
 .I +RESULT<0 D ERROR(RESULT,"Event Driver:"_NAM)
"RTN","EAS1071B",101,0)
 ;
"RTN","EAS1071B",102,0)
 ;
"RTN","EAS1071B",103,0)
 ;Add HEC client protocols to shared servers
"RTN","EAS1071B",104,0)
 F LCT=1:1 S LINE=$T(PROTDAT+LCT) Q:$P(LINE,";",3)="END"  D
"RTN","EAS1071B",105,0)
 .S FILE=101
"RTN","EAS1071B",106,0)
 .;Server protocol
"RTN","EAS1071B",107,0)
 .S NAM=PREFIX_$P(LINE,";",3)_" SERVER"
"RTN","EAS1071B",108,0)
 .I NAM["Z04" S NAM=NAM_" V"
"RTN","EAS1071B",109,0)
 .S IEN101=$O(^ORD(101,"B",NAM,0))
"RTN","EAS1071B",110,0)
 .; Fix Error reporting
"RTN","EAS1071B",111,0)
 .I 'IEN101 D  Q  ;RETURN
"RTN","EAS1071B",112,0)
 ..S ERROR="IEN OF RECORD TO BE UPDATED NOT FOUND"
"RTN","EAS1071B",113,0)
 ..S RETURN=-1_"^"_ERROR
"RTN","EAS1071B",114,0)
 ..D ERROR(RETURN,"Server:"_NAM)
"RTN","EAS1071B",115,0)
 .;
"RTN","EAS1071B",116,0)
 .;Client protocol (subscriber)
"RTN","EAS1071B",117,0)
 .S SNAM=PREFIX_$P(LINE,";",3)_" CLIENT"
"RTN","EAS1071B",118,0)
 .I SNAM["Z04" S SNAM=SNAM_" V"
"RTN","EAS1071B",119,0)
 .S SIEN101=$O(^ORD(101,"B",SNAM,0))
"RTN","EAS1071B",120,0)
 .I +SIEN101=0 D  Q
"RTN","EAS1071B",121,0)
 ..S ERROR="IEN OF RECORD TO BE UPDATED NOT FOUND"
"RTN","EAS1071B",122,0)
 ..S RETURN=-1_"^"_ERROR
"RTN","EAS1071B",123,0)
 ..D ERROR(RETURN,"Subscriber:"_SNAM)
"RTN","EAS1071B",124,0)
 .;Skip if already present
"RTN","EAS1071B",125,0)
 .I $D(^ORD(101,IEN101,775,"B",SIEN101)) D  Q
"RTN","EAS1071B",126,0)
 ..D WARN(NAM,SNAM)
"RTN","EAS1071B",127,0)
 .;Add subscriber to event driver
"RTN","EAS1071B",128,0)
 .S RETURN=$$SUBSCR(IEN101,SIEN101)
"RTN","EAS1071B",129,0)
 .I +RETURN<0 D ERROR(RETURN,"driver with Subscriber:"_SNAM) Q
"RTN","EAS1071B",130,0)
 ;
"RTN","EAS1071B",131,0)
 S:'STOP ARR="HEC messaging re enabled"
"RTN","EAS1071B",132,0)
 Q
"RTN","EAS1071B",133,0)
 ;
"RTN","EAS1071B",134,0)
 ;
"RTN","EAS1071B",135,0)
ERROR(ERRMSG,SUBJ) ;Display Install Error message and set STOP
"RTN","EAS1071B",136,0)
 N ARR
"RTN","EAS1071B",137,0)
 ;
"RTN","EAS1071B",138,0)
 S STOP=1
"RTN","EAS1071B",139,0)
 ;
"RTN","EAS1071B",140,0)
 S ARR(1)="===================================================="
"RTN","EAS1071B",141,0)
 S ARR(2)="=                   ERROR                          ="
"RTN","EAS1071B",142,0)
 S ARR(3)="===================================================="
"RTN","EAS1071B",143,0)
 S ARR(4)="When updating "_SUBJ
"RTN","EAS1071B",144,0)
 S ARR(5)="===================================================="
"RTN","EAS1071B",145,0)
 S ARR(5)="**ERROR MSG: "_$P(ERRMSG,"^",2)
"RTN","EAS1071B",146,0)
 ;
"RTN","EAS1071B",147,0)
 ;Display result of RPC and any warnings or errors for EAS1096P only
"RTN","EAS1071B",148,0)
 I $G(EAS1096P) D BMES^XPDUTL(.ARR)
"RTN","EAS1071B",149,0)
 Q
"RTN","EAS1071B",150,0)
 ;
"RTN","EAS1071B",151,0)
WARN(EDP,SP) ;Display Warning Message
"RTN","EAS1071B",152,0)
 N ARR
"RTN","EAS1071B",153,0)
 ;
"RTN","EAS1071B",154,0)
 S ARR(1)="===================================================="
"RTN","EAS1071B",155,0)
 S ARR(2)="=                 WARNING                          ="
"RTN","EAS1071B",156,0)
 S ARR(3)="===================================================="
"RTN","EAS1071B",157,0)
 S ARR(4)="When updating "_EDP
"RTN","EAS1071B",158,0)
 S ARR(5)="===================================================="
"RTN","EAS1071B",159,0)
 S ARR(5)="**"_SP_" is already defined**"
"RTN","EAS1071B",160,0)
 ;
"RTN","EAS1071B",161,0)
 Q
"RTN","EAS1071B",162,0)
 ;
"RTN","EAS1071B",163,0)
SUBSCR(IEN101,SIEN101) ;Add client to event driver as a subscriber
"RTN","EAS1071B",164,0)
 ;
"RTN","EAS1071B",165,0)
 N DATA,DGENDA,ERROR,FILE,RETURN
"RTN","EAS1071B",166,0)
 S DGENDA(1)=IEN101
"RTN","EAS1071B",167,0)
 S FILE=101.0775
"RTN","EAS1071B",168,0)
 S DATA(.01)=SIEN101
"RTN","EAS1071B",169,0)
 S RETURN=$$ADD^DGENDBS(FILE,.DGENDA,.DATA,.ERROR)
"RTN","EAS1071B",170,0)
 S:ERROR'=""!(+RETURN=0) RETURN=-1_"^"_ERROR
"RTN","EAS1096P")
0^1^B5144422
"RTN","EAS1096P",1,0)
EAS1096P ;ALB/PJH - Utility to disable HEC legacy protocols; ; 7/2/09 4:36pm
"RTN","EAS1096P",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**96**; 15-MAR-01;Build 18
"RTN","EAS1096P",3,0)
 Q
"RTN","EAS1096P",4,0)
 ;
"RTN","EAS1096P",5,0)
 ;This routine is the post install for patch EAS*1*96
"RTN","EAS1096P",6,0)
 ;
"RTN","EAS1096P",7,0)
 ;The routine calls the EAS1071A routine to remove HEC Legacy
"RTN","EAS1096P",8,0)
 ;subscriber protocols used for dual messaging of outbound Z07
"RTN","EAS1096P",9,0)
 ;and also to insert disable text into all HEC Legacy server
"RTN","EAS1096P",10,0)
 ;protocols
"RTN","EAS1096P",11,0)
 ;
"RTN","EAS1096P",12,0)
 ;
"RTN","EAS1096P",13,0)
EN ;Entry Point
"RTN","EAS1096P",14,0)
 N PNAME,RESULT,RTN,STATION,STOP,EAS1096P
"RTN","EAS1096P",15,0)
 ;
"RTN","EAS1096P",16,0)
 D BMES^XPDUTL("Post Install Running")
"RTN","EAS1096P",17,0)
 ;
"RTN","EAS1096P",18,0)
 ;Reset QRY protocols
"RTN","EAS1096P",19,0)
 S STATION=$P($$SITE^VASITE,"^",3),STOP=0,RTN="D ORF^EASCM"
"RTN","EAS1096P",20,0)
 ;
"RTN","EAS1096P",21,0)
 ;Update Z10 server
"RTN","EAS1096P",22,0)
 S PNAME="VAMC "_STATION_" QRY-Z10 SERVER"
"RTN","EAS1096P",23,0)
 S RESULT=$$EDP(PNAME,RTN)
"RTN","EAS1096P",24,0)
 D:+RESULT<0 ERROR(RESULT,PNAME)
"RTN","EAS1096P",25,0)
 ;
"RTN","EAS1096P",26,0)
 ;Update Z11 server
"RTN","EAS1096P",27,0)
 S PNAME="VAMC "_STATION_" QRY-Z11 SERVER"
"RTN","EAS1096P",28,0)
 S RESULT=$$EDP(PNAME,RTN)
"RTN","EAS1096P",29,0)
 D:+RESULT<0 ERROR(RESULT,PNAME)
"RTN","EAS1096P",30,0)
 ;
"RTN","EAS1096P",31,0)
 ;Abort if unable to update QRY protocols correctly - Removed to allow for sites that may not have all interfaces
"RTN","EAS1096P",32,0)
 ;I STOP D BMES^XPDUTL("Post Install Unable to Complete") Q
"RTN","EAS1096P",33,0)
 ;
"RTN","EAS1096P",34,0)
 ; To prevent Reset and Quitting from Loop if any protocols missing
"RTN","EAS1096P",35,0)
 S EAS1096P=1
"RTN","EAS1096P",36,0)
 ;
"RTN","EAS1096P",37,0)
 ;Disable HECL protocols
"RTN","EAS1096P",38,0)
 D TAG^EAS1071A(.RESULT,3)
"RTN","EAS1096P",39,0)
 ;Display result of RPC and any warnings or errors - Removed as errors are printed in EAS1071B
"RTN","EAS1096P",40,0)
 ;D BMES^XPDUTL(.RESULT)
"RTN","EAS1096P",41,0)
 ;Completed OK
"RTN","EAS1096P",42,0)
 D BMES^XPDUTL("Post Install Completed")
"RTN","EAS1096P",43,0)
 ;
"RTN","EAS1096P",44,0)
 Q
"RTN","EAS1096P",45,0)
 ;
"RTN","EAS1096P",46,0)
EDP(PNAME,RTN) ;Update response routine on QRY Z10/Z11 server Protocols
"RTN","EAS1096P",47,0)
 ;
"RTN","EAS1096P",48,0)
 N DA,DATA,DGENDA,ERROR,FILE,IEN101,RETURN
"RTN","EAS1096P",49,0)
 S FILE=101
"RTN","EAS1096P",50,0)
 ; If already exists then skip
"RTN","EAS1096P",51,0)
 S IEN101=$O(^ORD(101,"B",PNAME,0))
"RTN","EAS1096P",52,0)
 I 'IEN101 D  Q RETURN
"RTN","EAS1096P",53,0)
 . S ERROR="IEN OF RECORD TO BE UPDATED NOT FOUND"
"RTN","EAS1096P",54,0)
 . S RETURN=-1_"^"_ERROR,RETURN(1)=PNAME
"RTN","EAS1096P",55,0)
 ;
"RTN","EAS1096P",56,0)
 S DATA(772)=RTN
"RTN","EAS1096P",57,0)
 S RETURN=$$UPD^DGENDBS(FILE,IEN101,.DATA,.ERROR)
"RTN","EAS1096P",58,0)
 I ERROR'=""!(+RETURN=0) S RETURN=-1_"^"_ERROR,RETURN(1)=PNAME
"RTN","EAS1096P",59,0)
 ;
"RTN","EAS1096P",60,0)
 Q RETURN
"RTN","EAS1096P",61,0)
 ;
"RTN","EAS1096P",62,0)
ERROR(ERRMSG,SUBJ) ;Display Install Error message and set STOP
"RTN","EAS1096P",63,0)
 N ARR
"RTN","EAS1096P",64,0)
 ;
"RTN","EAS1096P",65,0)
 S STOP=1
"RTN","EAS1096P",66,0)
 S ARR(1)="===================================================="
"RTN","EAS1096P",67,0)
 S ARR(2)="=                   WARNING                        ="
"RTN","EAS1096P",68,0)
 S ARR(3)="===================================================="
"RTN","EAS1096P",69,0)
 S ARR(4)="When updating "_SUBJ
"RTN","EAS1096P",70,0)
 S ARR(5)="===================================================="
"RTN","EAS1096P",71,0)
 S ARR(5)="**ERROR MSG: "_$P(ERRMSG,"^",2)
"RTN","EAS1096P",72,0)
 ;
"RTN","EAS1096P",73,0)
 D BMES^XPDUTL(.ARR)
"RTN","EAS1096P",74,0)
 Q
"RTN","EASCM")
0^3^B80540897
"RTN","EASCM",1,0)
EASCM ;ALB/PJH - PROCESS INCOME TEST (Z10) TRANSMISSIONS ; 7/1/09 3:36pm
"RTN","EASCM",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**71,96**; 15-MAR-01;Build 18
"RTN","EASCM",3,0)
 ;
"RTN","EASCM",4,0)
 ;CLONED FROM IVMCM (ESR EVENT DRIVER)
"RTN","EASCM",5,0)
 ;
"RTN","EASCM",6,0)
ORF ; Handler for ORF type HL7 messages received from HEC
"RTN","EASCM",7,0)
 ;
"RTN","EASCM",8,0)
 ; Make sure POSTMASTER DUZ instead of DUZ of Person who
"RTN","EASCM",9,0)
 ; started Incoming Logical Link.
"RTN","EASCM",10,0)
 S DUZ=.5
"RTN","EASCM",11,0)
 N CNT,IVMRTN,SEGCNT
"RTN","EASCM",12,0)
 S IVMRTN="IVMCMX"  ;USE "IVMCMX" BECAUSE "IVMCM" ALREADY USED
"RTN","EASCM",13,0)
 K ^TMP($J,IVMRTN),DIC
"RTN","EASCM",14,0)
 S (DGMSGF,DGMTMSG)=1  ; HL7 rtn. Don't need DG interative messages.
"RTN","EASCM",15,0)
 S HLECH=HL("ECH"),HLQ=HL("Q"),HLMID=HL("MID")
"RTN","EASCM",16,0)
 K %,%H,%I D NOW^%DTC S HLDT=%
"RTN","EASCM",17,0)
 F SEGCNT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","EASCM",18,0)
 . S CNT=0
"RTN","EASCM",19,0)
 . S ^TMP($J,IVMRTN,SEGCNT,CNT)=HLNODE
"RTN","EASCM",20,0)
 . F  S CNT=$O(HLNODE(CNT)) Q:'CNT  D
"RTN","EASCM",21,0)
 . . S ^TMP($J,IVMRTN,SEGCNT,CNT)=HLNODE(CNT)
"RTN","EASCM",22,0)
 S HLDA=HLMTIEN
"RTN","EASCM",23,0)
 ;
"RTN","EASCM",24,0)
 N SEG,EVENT,MSGID
"RTN","EASCM",25,0)
 S:'$D(HLEVN) HLEVN=0
"RTN","EASCM",26,0)
 D NXTSEG^DGENUPL(HLDA,0,.SEG)
"RTN","EASCM",27,0)
 Q:(SEG("TYPE")'="MSH")  ;would not have reached here if this happened!
"RTN","EASCM",28,0)
 S EVENT=$P(SEG(9),$E(HLECH),2)
"RTN","EASCM",29,0)
 ;
"RTN","EASCM",30,0)
 ; INITIALIZE HL7 VARIABLES
"RTN","EASCM",31,0)
 S HLEID="EAS ESR "_$P($$SITE^VASITE,"^",3)_" ORF-"_EVENT_" SERVER"
"RTN","EASCM",32,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","EASCM",33,0)
 D INIT^HLFNC2(HLEID,.HL)
"RTN","EASCM",34,0)
 S HLEIDS=$O(^ORD(101,HLEID,775,"B",0))
"RTN","EASCM",35,0)
 ;
"RTN","EASCM",36,0)
 ; Handle means test signature ORF (Z06) event
"RTN","EASCM",37,0)
 I EVENT="Z06" D ORF^IVMPREC7
"RTN","EASCM",38,0)
 ;
"RTN","EASCM",39,0)
 ; Handle income test ORF (Z10) event
"RTN","EASCM",40,0)
 I EVENT="Z10" D Z10^IVMCM
"RTN","EASCM",41,0)
 ;
"RTN","EASCM",42,0)
 ; Handle enrollment/elig. ORF (Z11) event
"RTN","EASCM",43,0)
 I EVENT="Z11" D
"RTN","EASCM",44,0)
 .S MSGID=SEG(10)
"RTN","EASCM",45,0)
 .D ORFZ11^DGENUPL(HLDA,MSGID)
"RTN","EASCM",46,0)
 ;
"RTN","EASCM",47,0)
 K ^TMP($J,IVMRTN)
"RTN","EASCM",48,0)
 Q
"RTN","EASCM",49,0)
 ; Code below this line is not used - left in place for reference only
"RTN","EASCM",50,0)
 ; all Z10 processing performed within IVMCM
"RTN","EASCM",51,0)
Z10 ; Entry point for receipt of ORF~Z10 transmission
"RTN","EASCM",52,0)
 ; The Income Test (Z10) transmission has the following format:
"RTN","EASCM",53,0)
 ;
"RTN","EASCM",54,0)
 ;       BHS           ORF msgs do not include batch header or trailer.
"RTN","EASCM",55,0)
 ;       {MSH
"RTN","EASCM",56,0)
 ;        PID          They will include the sequence:  MSA 
"RTN","EASCM",57,0)
 ;        ZIC                                           QRD
"RTN","EASCM",58,0)
 ;        ZIR                                           QRF
"RTN","EASCM",59,0)
 ;        {ZDP         These segments will follow the MSH segment.
"RTN","EASCM",60,0)
 ;         ZIC
"RTN","EASCM",61,0)
 ;         ZIR
"RTN","EASCM",62,0)
 ;        }
"RTN","EASCM",63,0)
 ;        {ZDP}        Inactive Dependent Spouse Entries
"RTN","EASCM",64,0)
 ;        {ZDP}        Inactive Dependent Child Entries
"RTN","EASCM",65,0)
 ;        {ZMT
"RTN","EASCM",66,0)
 ;        }
"RTN","EASCM",67,0)
 ;        ZBT
"RTN","EASCM",68,0)
 ;       }
"RTN","EASCM",69,0)
 ;       BTS
"RTN","EASCM",70,0)
 ;
"RTN","EASCM",71,0)
 S IVMORF=1 ; set ORF msg flag
"RTN","EASCM",72,0)
 S (HLEVN,IVMCT,IVMERROR,IVMCNTR)=0 ; init vars
"RTN","EASCM",73,0)
 ;
"RTN","EASCM",74,0)
ORU ; Entry point for receipt of ORU~Z10 trans (called by IVMPREC2)
"RTN","EASCM",75,0)
 S IVMTYPE=5,IVMZ10F=1
"RTN","EASCM",76,0)
 ;
"RTN","EASCM",77,0)
 ; - loop through the msg in (#772 file), and process (PROC) msgs
"RTN","EASCM",78,0)
 S IVMDA=0 F  S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  S IVMSEG=$G(^(IVMDA,0)) I $E(IVMSEG,1,3)="MSH" D PROC Q:'IVMDA
"RTN","EASCM",79,0)
 ;
"RTN","EASCM",80,0)
 ; - if ORF msg flag, update the Query Tran Log and send ACK
"RTN","EASCM",81,0)
 I $G(IVMORF) D
"RTN","EASCM",82,0)
 .I $G(DFN),$D(IVMMCI) D
"RTN","EASCM",83,0)
 ..N IVMCR
"RTN","EASCM",84,0)
 ..S IVMCR=$P("1^2^3^7^5^6^4","^",IVMTYPE)  ;map reason to test type
"RTN","EASCM",85,0)
 ..D FIND^IVMCQ2(DFN,IVMMCI,HLDT,$S($D(HLERR):5,1:IVMCR),1)
"RTN","EASCM",86,0)
 .;D ACK^IVMPREC:'$D(HLERR)
"RTN","EASCM",87,0)
 .;N HLRESLTA,HLP
"RTN","EASCM",88,0)
 .;D GENACK^HLMA1(HLEID,HLMTIEN,HLEIDS,"LM",1,.HLRESLTA,"",.HLP)
"RTN","EASCM",89,0)
 ;
"RTN","EASCM",90,0)
 ; - if tests are uploaded, generate notification msg
"RTN","EASCM",91,0)
 I $D(^TMP($J,"IVMBULL")) D ^IVMCMB
"RTN","EASCM",92,0)
 ;
"RTN","EASCM",93,0)
ENQ ;
"RTN","EASCM",94,0)
 K IVMDA,IVMORF,IVMSEG,IVMFLGC,IVMTYPE,IVMMTIEN,IVMMTDT,IVMDGBT,IVMMCI
"RTN","EASCM",95,0)
 K ^TMP($J,"IVMCM"),^("IVMBULL"),DGMSGF,DGADDF,IVMCPAY,IVMBULL,DFN
"RTN","EASCM",96,0)
 K DGMTMSG,IVMZ10F
"RTN","EASCM",97,0)
 Q
"RTN","EASCM",98,0)
 ;
"RTN","EASCM",99,0)
PROC ; Process each HL7 message from (#772) file
"RTN","EASCM",100,0)
 ;
"RTN","EASCM",101,0)
 N IVMFUTR,TMSTAMP,SOURCE,NODE,HSDATE,IVMZ10,DGMTP,DGMTACT,DGMTI,DGMTA
"RTN","EASCM",102,0)
 S DGMTACT="ADD"
"RTN","EASCM",103,0)
 D PRIOR^DGMTEVT
"RTN","EASCM",104,0)
 S IVMZ10="UPLOAD IN PROGRESS"
"RTN","EASCM",105,0)
 S IVMFUTR=0 ;this flag will indicate whether or not a test with a future date is being uploaded
"RTN","EASCM",106,0)
 S IVMMTIEN=0
"RTN","EASCM",107,0)
 ;
"RTN","EASCM",108,0)
 S MSGID=$P(IVMSEG,HLFS,10) ; msg control id for ACK's
"RTN","EASCM",109,0)
 ; - check if DCD messaging is enabled
"RTN","EASCM",110,0)
 I '$$DCDON^IVMUPAR1() D PROB^IVMCMC("Facility has DCD messaging disabled") Q
"RTN","EASCM",111,0)
 ;
"RTN","EASCM",112,0)
 ; - check HL7 msg structure for errors
"RTN","EASCM",113,0)
 K HLERR,^TMP($J,"IVMCM")
"RTN","EASCM",114,0)
 D ^IVMCMC I $D(HLERR) K:HLERR="" HLERR Q
"RTN","EASCM",115,0)
 ;
"RTN","EASCM",116,0)
 ; Determine type of test/transmission
"RTN","EASCM",117,0)
 S IVMTYPE=0
"RTN","EASCM",118,0)
 ;
"RTN","EASCM",119,0)
 ; - was a means test sent?
"RTN","EASCM",120,0)
 I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2) S IVMTYPE=1 ; MT trans
"RTN","EASCM",121,0)
 ;
"RTN","EASCM",122,0)
 ; - if MT and CT transmitted, error - pt can't have both unless
"RTN","EASCM",123,0)
 ;   one is a deletion, but HEC not currently handling that situation
"RTN","EASCM",124,0)
 I IVMTYPE,$P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) D PROB^IVMCMC("Patient  can not have both a Means Test and Copay Test") Q
"RTN","EASCM",125,0)
 I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) S IVMTYPE=2 ; CT trans
"RTN","EASCM",126,0)
 ;
"RTN","EASCM",127,0)
 ; - if no MT or CT or LTC then Income Screening
"RTN","EASCM",128,0)
 I 'IVMTYPE,'$P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,2) S IVMTYPE=3 ; IS trans
"RTN","EASCM",129,0)
 ;
"RTN","EASCM",130,0)
 ;send an eligibility query if no eligibility code
"RTN","EASCM",131,0)
 I '$$ELIG^IVMCUF1(DFN),'$$PENDING^DGENQRY(DFN) I $$SEND^DGENQRY1(DFN)
"RTN","EASCM",132,0)
 ;
"RTN","EASCM",133,0)
 ; obtain locks used to sychronize upload with local income test options
"RTN","EASCM",134,0)
 D GETLOCKS^IVMCUPL(DFN)
"RTN","EASCM",135,0)
 ;
"RTN","EASCM",136,0)
 ;
"RTN","EASCM",137,0)
MT ; If transmission is a Means Test
"RTN","EASCM",138,0)
 N NODE0,RET,CODE,DATA,MTSIG,MTSIGDT
"RTN","EASCM",139,0)
 S HLQ=$G(HL("Q"))
"RTN","EASCM",140,0)
 S:HLQ="" HLQ=""""""
"RTN","EASCM",141,0)
 I IVMTYPE=1 D  I $D(HLERR) G PROCQ
"RTN","EASCM",142,0)
 .S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2))
"RTN","EASCM",143,0)
 .S TMSTAMP=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,25))
"RTN","EASCM",144,0)
 .S HSDATE=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,24))
"RTN","EASCM",145,0)
 .S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,22)
"RTN","EASCM",146,0)
 .S MTSIG=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,27)
"RTN","EASCM",147,0)
 .S MTSIGDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,15))
"RTN","EASCM",148,0)
 .S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,1)
"RTN","EASCM",149,0)
 .Q:$$UPDMTSIG^IVMCMF(+IVMLAST,TMSTAMP,MTSIG,MTSIGDT)
"RTN","EASCM",150,0)
 .I $$Z06MT^EASPTRN1(+IVMLAST) Q
"RTN","EASCM",151,0)
 .I '$$ELIG^IVMUFNC5(DFN) S ERRMSG="Means Test upload not appropriate for current patient"
"RTN","EASCM",152,0)
 .I $$AGE^IVMUFNC5(DT)>$$INCY^IVMUFNC5(IVMMTDT) D
"RTN","EASCM",153,0)
 ..N CATCZMT S CATCZMT=$G(^TMP($J,"IVMCM","ZMT1"))
"RTN","EASCM",154,0)
 ..S CATC=$$CATC^IVMUFNC5(CATCZMT)
"RTN","EASCM",155,0)
 ..I '+$G(CATC) S ERRMSG="Only Means Tests in current/previous income years are valid (not effective)"
"RTN","EASCM",156,0)
 .I $G(ERRMSG)'="" D PROB^IVMCMC(ERRMSG) K ERRMSG,CATC Q
"RTN","EASCM",157,0)
 .;
"RTN","EASCM",158,0)
 .; - perform edit checks and file MT
"RTN","EASCM",159,0)
 .D CHKDT
"RTN","EASCM",160,0)
 .;deletion indicator sent?
"RTN","EASCM",161,0)
 .I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,3)=HLQ D  Q
"RTN","EASCM",162,0)
 ..D
"RTN","EASCM",163,0)
 ...;if there is a future test for that income year, delete that
"RTN","EASCM",164,0)
 ...N IEN,DATA,IVMPAT
"RTN","EASCM",165,0)
 ...S IEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),1,.IVMPAT)
"RTN","EASCM",166,0)
 ...I IEN S DATA(.06)="" I $$UPD^DGENDBS(301.5,IVMPAT,.DATA)
"RTN","EASCM",167,0)
 ...I IEN,$D(^DGMT(408.31,IEN,0)) D
"RTN","EASCM",168,0)
 ....S IVMMTIEN=IEN
"RTN","EASCM",169,0)
 ....S IVMFUTR=1
"RTN","EASCM",170,0)
 ...E  D
"RTN","EASCM",171,0)
 ....S IVMFUTR=0
"RTN","EASCM",172,0)
 ..Q:('IVMMTIEN)
"RTN","EASCM",173,0)
 ..S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASCM",174,0)
 ..I $$EN^IVMCMD(IVMMTIEN) D
"RTN","EASCM",175,0)
 ...S RET=$$LST^DGMTU(DFN,DT,IVMTYPE)
"RTN","EASCM",176,0)
 ...S CODE=$S(($E($P(RET,"^",2),1,3)=$E(DT,1,3)):$P(RET,"^",4),1:"")
"RTN","EASCM",177,0)
 ...D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"DELETE FUTR TEST",1:"DELETE PRMRY TEST"),+$G(NODE0),$$GETCODE^DGMTH($P(NODE0,"^",3)),CODE)
"RTN","EASCM",178,0)
 .;
"RTN","EASCM",179,0)
 .;check timestamp - if matches current primary test and hardship matches, then this is a duplicate and does not need to be uploaded
"RTN","EASCM",180,0)
 .I TMSTAMP D
"RTN","EASCM",181,0)
 ..S NODE=""
"RTN","EASCM",182,0)
 ..I IVMFUTR N IVMMTIEN S IVMMTIEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),1)
"RTN","EASCM",183,0)
 ..Q:'IVMMTIEN
"RTN","EASCM",184,0)
 ..S NODE=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","EASCM",185,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASCM",186,0)
 .I TMSTAMP,TMSTAMP=$P(NODE,"^",2),IVMMTDT=$P(NODE0,"^"),SOURCE=$P(NODE,"^",5),(HSDATE=$P(NODE,"^")) Q
"RTN","EASCM",187,0)
 .;
"RTN","EASCM",188,0)
 .D DELTYPE^IVMCMD(DFN,IVMMTDT,2)
"RTN","EASCM",189,0)
 .D EN^IVMCM1
"RTN","EASCM",190,0)
 ;
"RTN","EASCM",191,0)
 ;
"RTN","EASCM",192,0)
CT ; If transmission is a Copay Test
"RTN","EASCM",193,0)
 N NODE0,RET,CODE,DATA
"RTN","EASCM",194,0)
 I IVMTYPE=2 D  I $D(HLERR) G PROCQ
"RTN","EASCM",195,0)
 .S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2))
"RTN","EASCM",196,0)
 .S TMSTAMP=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,25))
"RTN","EASCM",197,0)
 .S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,22)
"RTN","EASCM",198,0)
 .S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,2)
"RTN","EASCM",199,0)
 .S IVMCPAY=$$RXST^IBARXEU(DFN)
"RTN","EASCM",200,0)
 .I $$AGE^IVMUFNC5(DT)>$$INCY^IVMUFNC5(IVMMTDT) D PROB^IVMCMC("Only Copay Tests in the current/previous income years are valid. (Not effective)") Q
"RTN","EASCM",201,0)
 .; - perform edit checks and file CT
"RTN","EASCM",202,0)
 .D CHKDT
"RTN","EASCM",203,0)
 .;deletion indicator sent?
"RTN","EASCM",204,0)
 .I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,3)=HLQ D  Q
"RTN","EASCM",205,0)
 ..D
"RTN","EASCM",206,0)
 ...;if there is a future test for that income year, delete that
"RTN","EASCM",207,0)
 ...N IEN,DATA,IVMPAT
"RTN","EASCM",208,0)
 ...S IEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),2,.IVMPAT)
"RTN","EASCM",209,0)
 ...I IEN S DATA(.07)="" I $$UPD^DGENDBS(301.5,IVMPAT,.DATA)
"RTN","EASCM",210,0)
 ...I IEN,$D(^DGMT(408.31,IEN,0)) D
"RTN","EASCM",211,0)
 ....S IVMMTIEN=IEN
"RTN","EASCM",212,0)
 ....S IVMFUTR=1
"RTN","EASCM",213,0)
 ...E  D
"RTN","EASCM",214,0)
 ....S IVMFUTR=0
"RTN","EASCM",215,0)
 ..Q:('IVMMTIEN)
"RTN","EASCM",216,0)
 ..S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASCM",217,0)
 ..I $$EN^IVMCMD(IVMMTIEN) D
"RTN","EASCM",218,0)
 ...S RET=$$LST^DGMTU(DFN,DT,IVMTYPE)
"RTN","EASCM",219,0)
 ...S CODE=$S(($E($P(RET,"^",2),1,3)=$E(DT,1,3)):$P(RET,"^",4),1:"")
"RTN","EASCM",220,0)
 ...D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"DELETE FUTR TEST",1:"DELETE PRMRY TEST"),+$G(NODE0),$$GETCODE^DGMTH($P(NODE0,"^",3)),CODE)
"RTN","EASCM",221,0)
 .;
"RTN","EASCM",222,0)
 .;check timestamp - if matches current primary test, then this is a duplicate and does not need to be uploaded
"RTN","EASCM",223,0)
 .I TMSTAMP D
"RTN","EASCM",224,0)
 ..S NODE=""
"RTN","EASCM",225,0)
 ..I IVMFUTR N IVMMTIEN S IVMMTIEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),2)
"RTN","EASCM",226,0)
 ..Q:'IVMMTIEN
"RTN","EASCM",227,0)
 ..S NODE=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","EASCM",228,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASCM",229,0)
 .I TMSTAMP,TMSTAMP=$P(NODE,"^",2),IVMMTDT=$P(NODE0,"^"),SOURCE=$P(NODE,"^",5) Q
"RTN","EASCM",230,0)
 .;
"RTN","EASCM",231,0)
 .D DELTYPE^IVMCMD(DFN,IVMMTDT,1)
"RTN","EASCM",232,0)
 .D EN^IVMCM1
"RTN","EASCM",233,0)
 ;
"RTN","EASCM",234,0)
IS ; - If transmission is income screening info only then do not process
"RTN","EASCM",235,0)
 ; - outside of the scope of MTS
"RTN","EASCM",236,0)
 I IVMTYPE=3 S IVMMTDT=0
"RTN","EASCM",237,0)
 ;
"RTN","EASCM",238,0)
LTC ; If transmission contains a Long Term Care Test (TYPE 4 TEST)
"RTN","EASCM",239,0)
 I $P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,2) D LTC^IVMCM1
"RTN","EASCM",240,0)
 ;
"RTN","EASCM",241,0)
PROCQ ;
"RTN","EASCM",242,0)
 ; release locks used to sychronize upload with local income test options
"RTN","EASCM",243,0)
 D RELLOCKS^IVMCUPL(DFN)
"RTN","EASCM",244,0)
 Q
"RTN","EASCM",245,0)
 ;
"RTN","EASCM",246,0)
CHKDT ; check date of income test being uploaded
"RTN","EASCM",247,0)
 ; Is it a future date?  If so, set IVMFUTR=1
"RTN","EASCM",248,0)
 ;
"RTN","EASCM",249,0)
 ; IVMMTIEN is the IEN of current primary test for the year
"RTN","EASCM",250,0)
 ;
"RTN","EASCM",251,0)
 I $E($P(IVMLAST,"^",2),1,3)=$E(IVMMTDT,1,3) S IVMMTIEN=+IVMLAST
"RTN","EASCM",252,0)
 I IVMMTDT>DT S IVMFUTR=1
"RTN","EASCM",253,0)
 Q
"RTN","EASCM",254,0)
FUTURE(DFN,YEAR,TYPE,IVMPAT) ;
"RTN","EASCM",255,0)
 ;Returns the ien of the future test, if there is one
"RTN","EASCM",256,0)
 ;Inputs:  DFN
"RTN","EASCM",257,0)
 ;         YEAR  - income year
"RTN","EASCM",258,0)
 ;         TYPE - type of test
"RTN","EASCM",259,0)
 ;Output:
"RTN","EASCM",260,0)
 ;  function value - ien of future means test, if there is one, "" otherwise
"RTN","EASCM",261,0)
 ;  IVMPAT - Pointer to the IVM Patient file for the income year if there is an entry (pass by reference)
"RTN","EASCM",262,0)
 ;
"RTN","EASCM",263,0)
 N RET
"RTN","EASCM",264,0)
 S RET=""
"RTN","EASCM",265,0)
 S IVMPAT=$$FIND^IVMPLOG(DFN,YEAR)
"RTN","EASCM",266,0)
 I IVMPAT S RET=$P($G(^IVM(301.5,IVMPAT,0)),"^",$S(TYPE=1:6,1:7))
"RTN","EASCM",267,0)
 Q RET
"VER")
8.0^22.0
**INSTALL NAME**
IVM*2.0*156
"BLD",8551,0)
IVM*2.0*156^INCOME VERIFICATION MATCH^0^3140219^y
"BLD",8551,1,0)
^^7^7^3140214^
"BLD",8551,1,1,0)
This patch will make changes to the IVM routines that will check and verify
"BLD",8551,1,2,0)
the HL7 is active before creating and transmitting the HL7 data.  Patch
"BLD",8551,1,3,0)
EAS*1*96 will disable the HL7 protocols to prevent data from being sent to the
"BLD",8551,1,4,0)
HEC system.  Prior to the installation of this patch, the IVM routines did
"BLD",8551,1,5,0)
not check for the protocols to see if they are disabled.  Once this patch is
"BLD",8551,1,6,0)
installed, the routines will make the check and stop the transmission of data
"BLD",8551,1,7,0)
if the protocol is disabled.
"BLD",8551,4,0)
^9.64PA^^
"BLD",8551,6.3)
3
"BLD",8551,"ABPKG")
n
"BLD",8551,"KRN",0)
^9.67PA^779.2^20
"BLD",8551,"KRN",.4,0)
.4
"BLD",8551,"KRN",.401,0)
.401
"BLD",8551,"KRN",.402,0)
.402
"BLD",8551,"KRN",.403,0)
.403
"BLD",8551,"KRN",.5,0)
.5
"BLD",8551,"KRN",.84,0)
.84
"BLD",8551,"KRN",3.6,0)
3.6
"BLD",8551,"KRN",3.8,0)
3.8
"BLD",8551,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",8551,"KRN",9.2,0)
9.2
"BLD",8551,"KRN",9.8,0)
9.8
"BLD",8551,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8551,"KRN",9.8,"NM",1,0)
IVMLINS2^^0^B26072131
"BLD",8551,"KRN",9.8,"NM","B","IVMLINS2",1)

"BLD",8551,"KRN",19,0)
19
"BLD",8551,"KRN",19,"NM",0)
^9.68A^^0
"BLD",8551,"KRN",19.1,0)
19.1
"BLD",8551,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",8551,"KRN",101,0)
101
"BLD",8551,"KRN",101,"NM",0)
^9.68A^^0
"BLD",8551,"KRN",409.61,0)
409.61
"BLD",8551,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",8551,"KRN",771,0)
771
"BLD",8551,"KRN",771,"NM",0)
^9.68A^^0
"BLD",8551,"KRN",779.2,0)
779.2
"BLD",8551,"KRN",870,0)
870
"BLD",8551,"KRN",8989.51,0)
8989.51
"BLD",8551,"KRN",8989.52,0)
8989.52
"BLD",8551,"KRN",8994,0)
8994
"BLD",8551,"KRN","B",.4,.4)

"BLD",8551,"KRN","B",.401,.401)

"BLD",8551,"KRN","B",.402,.402)

"BLD",8551,"KRN","B",.403,.403)

"BLD",8551,"KRN","B",.5,.5)

"BLD",8551,"KRN","B",.84,.84)

"BLD",8551,"KRN","B",3.6,3.6)

"BLD",8551,"KRN","B",3.8,3.8)

"BLD",8551,"KRN","B",9.2,9.2)

"BLD",8551,"KRN","B",9.8,9.8)

"BLD",8551,"KRN","B",19,19)

"BLD",8551,"KRN","B",19.1,19.1)

"BLD",8551,"KRN","B",101,101)

"BLD",8551,"KRN","B",409.61,409.61)

"BLD",8551,"KRN","B",771,771)

"BLD",8551,"KRN","B",779.2,779.2)

"BLD",8551,"KRN","B",870,870)

"BLD",8551,"KRN","B",8989.51,8989.51)

"BLD",8551,"KRN","B",8989.52,8989.52)

"BLD",8551,"KRN","B",8994,8994)

"BLD",8551,"QUES",0)
^9.62^^
"BLD",8551,"REQB",0)
^9.611^^
"MBREQ")
0
"PKG",120,-1)
1^1
"PKG",120,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",120,20,0)
^9.402P^^
"PKG",120,22,0)
^9.49I^1^1
"PKG",120,22,1,0)
2.0^2941021^2960823
"PKG",120,22,1,"PAH",1,0)
156^3140219
"PKG",120,22,1,"PAH",1,1,0)
^^7^7^3140219
"PKG",120,22,1,"PAH",1,1,1,0)
This patch will make changes to the IVM routines that will check and verify
"PKG",120,22,1,"PAH",1,1,2,0)
the HL7 is active before creating and transmitting the HL7 data.  Patch
"PKG",120,22,1,"PAH",1,1,3,0)
EAS*1*96 will disable the HL7 protocols to prevent data from being sent to the
"PKG",120,22,1,"PAH",1,1,4,0)
HEC system.  Prior to the installation of this patch, the IVM routines did
"PKG",120,22,1,"PAH",1,1,5,0)
not check for the protocols to see if they are disabled.  Once this patch is
"PKG",120,22,1,"PAH",1,1,6,0)
installed, the routines will make the check and stop the transmission of data
"PKG",120,22,1,"PAH",1,1,7,0)
if the protocol is disabled.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMLINS2")
0^1^B26072131
"RTN","IVMLINS2",1,0)
IVMLINS2 ;ALB/KCL - IVM INSURANCE POLICY PURGE ; 14 Feb 2014  1:53 PM
"RTN","IVMLINS2",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**14,34,111,156**; 21-OCT-94;Build 3
"RTN","IVMLINS2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLINS2",4,0)
 ;
"RTN","IVMLINS2",5,0)
 ;
"RTN","IVMLINS2",6,0)
ASK ; - ask user to 'T'ransfer or 'P'urge IVM insurance policy
"RTN","IVMLINS2",7,0)
 S DIR(0)="S^1:Transfer IVM Insurance Policy to insurance module;2:Purge IVM Insurance Policy;3:Return to Display Screen"
"RTN","IVMLINS2",8,0)
 S DIR("A")="Select Action",DIR("?")="^D HLP1^IVMLINS2"
"RTN","IVMLINS2",9,0)
 D ^DIR K DIR S IVMACT=Y G:$D(DIRUT)!($D(DUOUT))!(IVMACT=3) IVMQ^IVMLINS3
"RTN","IVMLINS2",10,0)
 I IVMACT[1 D TRANSFER^IVMLINS3(0) Q
"RTN","IVMLINS2",11,0)
 ;
"RTN","IVMLINS2",12,0)
 ;
"RTN","IVMLINS2",13,0)
PURGE ; - purge IVM insurance information - ask for reason why
"RTN","IVMLINS2",14,0)
 ;
"RTN","IVMLINS2",15,0)
 W !!,"The 'Purge IVM Insurance Policy' action has been selected."
"RTN","IVMLINS2",16,0)
 ;
"RTN","IVMLINS2",17,0)
 W !!,"This action will cause the insurance information which has been"
"RTN","IVMLINS2",18,0)
 W !,"received from HEC to be deleted from the system!",!,*7
"RTN","IVMLINS2",19,0)
 ;
"RTN","IVMLINS2",20,0)
 W !,"Please select a reason for purging the IVM insurance information."
"RTN","IVMLINS2",21,0)
 S DIC="^IVM(301.91,",DIC("A")="Select reason for purging: ",DIC(0)="QEAMZ"
"RTN","IVMLINS2",22,0)
 D ^DIC K DIC G:Y<0!($D(DTOUT))!($D(DUOUT)) ASK
"RTN","IVMLINS2",23,0)
 S IVMREPTR=+Y
"RTN","IVMLINS2",24,0)
 ;
"RTN","IVMLINS2",25,0)
 ; - ask user 'are you sure you want to purge'
"RTN","IVMLINS2",26,0)
 W ! S DIR(0)="Y",DIR("A")="Are you sure that you want to purge IVM insurance policy"
"RTN","IVMLINS2",27,0)
 ;
"RTN","IVMLINS2",28,0)
 ; - set default = 'NO'
"RTN","IVMLINS2",29,0)
 S DIR("B")="NO"
"RTN","IVMLINS2",30,0)
 ;
"RTN","IVMLINS2",31,0)
 ; - user help
"RTN","IVMLINS2",32,0)
 S DIR("?")="Answer 'Y'ES to go ahead with this action or 'N'O to abort"
"RTN","IVMLINS2",33,0)
 D ^DIR K DIR G:'Y ASK
"RTN","IVMLINS2",34,0)
 ;
"RTN","IVMLINS2",35,0)
 ; - update the INSURANCE SEGMENT multiple stored in (#301.5) file 
"RTN","IVMLINS2",36,0)
 W !!,"Purging the 'Insurance Policy' received from IVM... "
"RTN","IVMLINS2",37,0)
 N DA,DR,DIE,IVMINSST
"RTN","IVMLINS2",38,0)
 ;
"RTN","IVMLINS2",39,0)
 ; stuff UPLOAD INSURANCE DATA(.04) and REASON NOT UPLOADING INSURANCE
"RTN","IVMLINS2",40,0)
 ; (.08)
"RTN","IVMLINS2",41,0)
 S DA=IVMJ,DA(1)=IVMI
"RTN","IVMLINS2",42,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"","
"RTN","IVMLINS2",43,0)
 S DR=".04////0;.08////^S X=IVMREPTR" D ^DIE
"RTN","IVMLINS2",44,0)
 ;
"RTN","IVMLINS2",45,0)
 S IVMINSST=0
"RTN","IVMLINS2",46,0)
 D HL7 ;send HL7 message to HEC
"RTN","IVMLINS2",47,0)
 ;
"RTN","IVMLINS2",48,0)
DELETE ; - delete segment name (.02 field of 301.501 multiple) from IVM PATIENT
"RTN","IVMLINS2",49,0)
 ;   file to remove from ASEG cross-reference
"RTN","IVMLINS2",50,0)
 ;
"RTN","IVMLINS2",51,0)
 S DA=IVMJ,DA(1)=IVMI
"RTN","IVMLINS2",52,0)
 S DIE="^IVM(301.5,"_DA(1)_",""IN"",",DR=".02////@" D ^DIE
"RTN","IVMLINS2",53,0)
 ;
"RTN","IVMLINS2",54,0)
 ; - delete incoming segments strings
"RTN","IVMLINS2",55,0)
 K ^IVM(301.5,DA(1),"IN",DA,"ST"),^("ST1")
"RTN","IVMLINS2",56,0)
 W "completed.",!
"RTN","IVMLINS2",57,0)
 ;
"RTN","IVMLINS2",58,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR K DIR
"RTN","IVMLINS2",59,0)
 ;
"RTN","IVMLINS2",60,0)
 ; - delete entry from the List Manager display once purged
"RTN","IVMLINS2",61,0)
 K ^TMP("IVMIUPL",$J,IVMNAME,IVMI,IVMJ)
"RTN","IVMLINS2",62,0)
 ;
"RTN","IVMLINS2",63,0)
 ; - action completed
"RTN","IVMLINS2",64,0)
 S IVMDONE=1
"RTN","IVMLINS2",65,0)
 D IVMQ^IVMLINS3
"RTN","IVMLINS2",66,0)
 Q
"RTN","IVMLINS2",67,0)
 ;
"RTN","IVMLINS2",68,0)
HL7 ; - send HL7 message to HEC
"RTN","IVMLINS2",69,0)
 ;
"RTN","IVMLINS2",70,0)
 N IVMIN1,IVMIN2,IVMZIV
"RTN","IVMLINS2",71,0)
 N HLEID,HL,HLRESLT
"RTN","IVMLINS2",72,0)
 ;
"RTN","IVMLINS2",73,0)
 ; MESSAGE PROTOCOL
"RTN","IVMLINS2",74,0)
 S HLEID="VAMC "_$P($$SITE^VASITE,"^",3)_" ORU-Z04 SERVER V"
"RTN","IVMLINS2",75,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMLINS2",76,0)
 ;
"RTN","IVMLINS2",77,0)
 ; - initialize variables for HL7/IVM
"RTN","IVMLINS2",78,0)
 D INIT^IVMUFNC(HLEID,.HL) S HLMTN="ORU"
"RTN","IVMLINS2",79,0)
 I $O(HL(""))="" QUIT  ; the protocol is disabled or could not be initialized
"RTN","IVMLINS2",80,0)
 ;
"RTN","IVMLINS2",81,0)
 ;
"RTN","IVMLINS2",82,0)
 ; - create PID,IN1,ZIV segments
"RTN","IVMLINS2",83,0)
 ;
"RTN","IVMLINS2",84,0)
 ; - PID segment
"RTN","IVMLINS2",85,0)
 K IVMPID,VAFPID
"RTN","IVMLINS2",86,0)
 S IVMPID=$$EN^VAFHLPID(DFN,"1,3,5,7,19")
"RTN","IVMLINS2",87,0)
 I $P(IVMPID,HLFS,20)["P" D PSEUDO^IVMPTRN1
"RTN","IVMLINS2",88,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMLINS2",89,0)
 K IVMPID,VAFPID
"RTN","IVMLINS2",90,0)
 ;
"RTN","IVMLINS2",91,0)
 ; - IN1 segment
"RTN","IVMLINS2",92,0)
 S IVMIN1="IN1^1"
"RTN","IVMLINS2",93,0)
 S IVMIN2=$G(^IVM(301.5,IVMI,"IN",IVMJ,"ST"))_$G(^("ST1"))
"RTN","IVMLINS2",94,0)
 S $P(IVMIN1,"^",5)=$P(IVMIN2,"^",4)
"RTN","IVMLINS2",95,0)
 S $P(IVMIN1,"^",37)=$P(IVMIN2,"^",36)
"RTN","IVMLINS2",96,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMIN1
"RTN","IVMLINS2",97,0)
 ;
"RTN","IVMLINS2",98,0)
 ; - ZIV segment
"RTN","IVMLINS2",99,0)
 S IVMZIV="ZIV^1"
"RTN","IVMLINS2",100,0)
 ; - get ivm ien, strip off date of death
"RTN","IVMLINS2",101,0)
 S $P(IVMZIV,"^",10)=$P($P($G(^IVM(301.5,IVMI,"IN",IVMJ,0)),"^",7),"/")
"RTN","IVMLINS2",102,0)
 S $P(IVMZIV,"^",11)=IVMINSST
"RTN","IVMLINS2",103,0)
 S:IVMINSST=0 $P(IVMZIV,"^",12)=IVMREPTR
"RTN","IVMLINS2",104,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMZIV
"RTN","IVMLINS2",105,0)
 ;
"RTN","IVMLINS2",106,0)
 D GENERATE^HLMA(HLEID,"GM",1,.HLRESLT)  ; - create mail message
"RTN","IVMLINS2",107,0)
 K ^TMP("HLS",$J)
"RTN","IVMLINS2",108,0)
 D CLEAN^IVMUFNC
"RTN","IVMLINS2",109,0)
 Q
"RTN","IVMLINS2",110,0)
 ;
"RTN","IVMLINS2",111,0)
DOD ; - Alert user if date of death reported in DHCP or from HEC
"RTN","IVMLINS2",112,0)
 ;
"RTN","IVMLINS2",113,0)
 W !!,*7,"'Date of Death' reported for this patient "
"RTN","IVMLINS2",114,0)
 W $S($P($G(^DPT(+DFN,.35)),"^")]"":"in DHCP as "_$$DAT2^IVMUFNC4($P($G(^DPT(+DFN,.35)),"^")),$P(IVMDND,"^",6)]"":"by HEC as "_$$DAT2^IVMUFNC4($P(IVMDND,"^",6)))_".",!
"RTN","IVMLINS2",115,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR K DIR
"RTN","IVMLINS2",116,0)
 Q
"RTN","IVMLINS2",117,0)
 ;
"RTN","IVMLINS2",118,0)
 ;
"RTN","IVMLINS2",119,0)
HLP1 ; - help for ASK  Transfer or Purge
"RTN","IVMLINS2",120,0)
 ;
"RTN","IVMLINS2",121,0)
 ; - if user enters single '?'
"RTN","IVMLINS2",122,0)
 I X="?" D
"RTN","IVMLINS2",123,0)
 .W !!,"Enter one of the following responses:"
"RTN","IVMLINS2",124,0)
 .W !,"    1   -  to transfer the Insurance Policy that was received from HEC to the insurance module"
"RTN","IVMLINS2",125,0)
 .W !,"    2   -  to delete the Insurance Policy that was received from HEC"
"RTN","IVMLINS2",126,0)
 .W !,"    3   -  to return to the previous display screen"
"RTN","IVMLINS2",127,0)
 .W !,"   '^'  -  to return to the previous display screen"
"RTN","IVMLINS2",128,0)
 ;
"RTN","IVMLINS2",129,0)
 ; - if user enters double '??'
"RTN","IVMLINS2",130,0)
 I X="??" D
"RTN","IVMLINS2",131,0)
 .W !!,"Entering '1' at this prompt will allow the user to transfer the Insurance Policy"
"RTN","IVMLINS2",132,0)
 .W !,"that was received from HEC to the insurance module.  Entering '2' at this prompt"
"RTN","IVMLINS2",133,0)
 .W !,"will allow the user to delete the Insurance Policy that was received from HEC."
"RTN","IVMLINS2",134,0)
 .W !,"Entering '3' or '^' will abort this action."
"RTN","IVMLINS2",135,0)
 Q
"VER")
8.0^22.0
**END**
**END**
