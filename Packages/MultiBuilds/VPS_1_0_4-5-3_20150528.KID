KIDS Distribution saved on May 28, 2015@11:17:34
Combined build contains VPS*1.0*4, VPS*1.0*5, and VPS*1.0*3 in that order.
**KIDS**:VPS COMBINED 4,5,3 BUILD 1.0^VPS*1.0*4^VPS*1.0*5^VPS*1.0*3^

**INSTALL NAME**
VPS COMBINED 4,5,3 BUILD 1.0
"BLD",9249,0)
VPS COMBINED 4,5,3 BUILD 1.0^^1^3150528^y
"BLD",9249,1,0)
^^2^2^3150528^
"BLD",9249,1,1,0)
This combined build contains VPS*1.0*4, VPS*1.0*5, and VPS*1.0*3 in that
"BLD",9249,1,2,0)
order.
"BLD",9249,6.3)
1
"BLD",9249,10,0)
^9.63^3^3
"BLD",9249,10,1,0)
VPS*1.0*4^1
"BLD",9249,10,2,0)
VPS*1.0*5^1
"BLD",9249,10,3,0)
VPS*1.0*3^1
"BLD",9249,10,"B","VPS*1.0*3",3)

"BLD",9249,10,"B","VPS*1.0*4",1)

"BLD",9249,10,"B","VPS*1.0*5",2)

"BLD",9249,"KRN",0)
^9.67PA^779.2^20
"BLD",9249,"KRN",.4,0)
.4
"BLD",9249,"KRN",.401,0)
.401
"BLD",9249,"KRN",.402,0)
.402
"BLD",9249,"KRN",.403,0)
.403
"BLD",9249,"KRN",.5,0)
.5
"BLD",9249,"KRN",.84,0)
.84
"BLD",9249,"KRN",3.6,0)
3.6
"BLD",9249,"KRN",3.8,0)
3.8
"BLD",9249,"KRN",9.2,0)
9.2
"BLD",9249,"KRN",9.8,0)
9.8
"BLD",9249,"KRN",19,0)
19
"BLD",9249,"KRN",19.1,0)
19.1
"BLD",9249,"KRN",101,0)
101
"BLD",9249,"KRN",409.61,0)
409.61
"BLD",9249,"KRN",771,0)
771
"BLD",9249,"KRN",779.2,0)
779.2
"BLD",9249,"KRN",870,0)
870
"BLD",9249,"KRN",8989.51,0)
8989.51
"BLD",9249,"KRN",8989.52,0)
8989.52
"BLD",9249,"KRN",8994,0)
8994
"BLD",9249,"KRN","B",.4,.4)

"BLD",9249,"KRN","B",.401,.401)

"BLD",9249,"KRN","B",.402,.402)

"BLD",9249,"KRN","B",.403,.403)

"BLD",9249,"KRN","B",.5,.5)

"BLD",9249,"KRN","B",.84,.84)

"BLD",9249,"KRN","B",3.6,3.6)

"BLD",9249,"KRN","B",3.8,3.8)

"BLD",9249,"KRN","B",9.2,9.2)

"BLD",9249,"KRN","B",9.8,9.8)

"BLD",9249,"KRN","B",19,19)

"BLD",9249,"KRN","B",19.1,19.1)

"BLD",9249,"KRN","B",101,101)

"BLD",9249,"KRN","B",409.61,409.61)

"BLD",9249,"KRN","B",771,771)

"BLD",9249,"KRN","B",779.2,779.2)

"BLD",9249,"KRN","B",870,870)

"BLD",9249,"KRN","B",8989.51,8989.51)

"BLD",9249,"KRN","B",8989.52,8989.52)

"BLD",9249,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
VPS*1.0*4
"BLD",9166,0)
VPS*1.0*4^VPS KIOSK^0^3150528^y
"BLD",9166,1,0)
^^7^7^3140821^
"BLD",9166,1,1,0)
VPS*1*4 includes:
"BLD",9166,1,2,0)
1. New RPC to Print Patient Wristband with option to print EDIPI/SSN
"BLD",9166,1,3,0)
barcode
"BLD",9166,1,4,0)
2  New RPC to print Patient label with option to print EDIPI/SSN barcode  
"BLD",9166,1,5,0)
3. New RPCs to integrate with Howdy package
"BLD",9166,1,6,0)
4. New RPC to integrate with Patient Clinical Reminders
"BLD",9166,1,7,0)
5. Enhancement to Patient Demographic
"BLD",9166,4,0)
^9.64PA^^
"BLD",9166,6.3)
27
"BLD",9166,"ABPKG")
n
"BLD",9166,"KRN",0)
^9.67PA^779.2^20
"BLD",9166,"KRN",.4,0)
.4
"BLD",9166,"KRN",.401,0)
.401
"BLD",9166,"KRN",.402,0)
.402
"BLD",9166,"KRN",.403,0)
.403
"BLD",9166,"KRN",.5,0)
.5
"BLD",9166,"KRN",.84,0)
.84
"BLD",9166,"KRN",3.6,0)
3.6
"BLD",9166,"KRN",3.8,0)
3.8
"BLD",9166,"KRN",9.2,0)
9.2
"BLD",9166,"KRN",9.8,0)
9.8
"BLD",9166,"KRN",9.8,"NM",0)
^9.68A^20^13
"BLD",9166,"KRN",9.8,"NM",2,0)
VPSPTCR^^0^B36918208
"BLD",9166,"KRN",9.8,"NM",3,0)
VPSWRIST^^0^B3394620
"BLD",9166,"KRN",9.8,"NM",4,0)
VPSRLBLS^^0^B8243781
"BLD",9166,"KRN",9.8,"NM",5,0)
VPSPRINT^^0^B5753200
"BLD",9166,"KRN",9.8,"NM",12,0)
VPSRPC26^^0^B117511203
"BLD",9166,"KRN",9.8,"NM",13,0)
VPSRPC1^^0^B24609733
"BLD",9166,"KRN",9.8,"NM",14,0)
VPSRPC11^^0^B16439585
"BLD",9166,"KRN",9.8,"NM",15,0)
VPSRPC12^^0^B12694727
"BLD",9166,"KRN",9.8,"NM",16,0)
VPSRPC13^^0^B13168456
"BLD",9166,"KRN",9.8,"NM",17,0)
VPSRPC14^^0^B19859948
"BLD",9166,"KRN",9.8,"NM",18,0)
VPSRPC15^^0^B7747789
"BLD",9166,"KRN",9.8,"NM",19,0)
VPSRPC16^^0^B169070534
"BLD",9166,"KRN",9.8,"NM",20,0)
VPSRPC10^^0^B15952235
"BLD",9166,"KRN",9.8,"NM","B","VPSPRINT",5)

"BLD",9166,"KRN",9.8,"NM","B","VPSPTCR",2)

"BLD",9166,"KRN",9.8,"NM","B","VPSRLBLS",4)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC1",13)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC10",20)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC11",14)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC12",15)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC13",16)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC14",17)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC15",18)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC16",19)

"BLD",9166,"KRN",9.8,"NM","B","VPSRPC26",12)

"BLD",9166,"KRN",9.8,"NM","B","VPSWRIST",3)

"BLD",9166,"KRN",19,0)
19
"BLD",9166,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9166,"KRN",19,"NM",1,0)
VPS KIOSK INTERFACE^^0
"BLD",9166,"KRN",19,"NM","B","VPS KIOSK INTERFACE",1)

"BLD",9166,"KRN",19.1,0)
19.1
"BLD",9166,"KRN",101,0)
101
"BLD",9166,"KRN",409.61,0)
409.61
"BLD",9166,"KRN",771,0)
771
"BLD",9166,"KRN",779.2,0)
779.2
"BLD",9166,"KRN",870,0)
870
"BLD",9166,"KRN",8989.51,0)
8989.51
"BLD",9166,"KRN",8989.52,0)
8989.52
"BLD",9166,"KRN",8994,0)
8994
"BLD",9166,"KRN",8994,"NM",0)
^9.68A^6^6
"BLD",9166,"KRN",8994,"NM",1,0)
VPS GET CLINICAL REMINDERS^^0
"BLD",9166,"KRN",8994,"NM",2,0)
VPS PRINT PATIENT LABEL^^0
"BLD",9166,"KRN",8994,"NM",3,0)
VPS PATIENT WRISTBAND PRINT^^0
"BLD",9166,"KRN",8994,"NM",4,0)
VPS ENHANCED GET PATIENT DEMO^^0
"BLD",9166,"KRN",8994,"NM",5,0)
VPS GET PRINTERS^^0
"BLD",9166,"KRN",8994,"NM",6,0)
VPS GET ALL CLINICS^^0
"BLD",9166,"KRN",8994,"NM","B","VPS ENHANCED GET PATIENT DEMO",4)

"BLD",9166,"KRN",8994,"NM","B","VPS GET ALL CLINICS",6)

"BLD",9166,"KRN",8994,"NM","B","VPS GET CLINICAL REMINDERS",1)

"BLD",9166,"KRN",8994,"NM","B","VPS GET PRINTERS",5)

"BLD",9166,"KRN",8994,"NM","B","VPS PATIENT WRISTBAND PRINT",3)

"BLD",9166,"KRN",8994,"NM","B","VPS PRINT PATIENT LABEL",2)

"BLD",9166,"KRN","B",.4,.4)

"BLD",9166,"KRN","B",.401,.401)

"BLD",9166,"KRN","B",.402,.402)

"BLD",9166,"KRN","B",.403,.403)

"BLD",9166,"KRN","B",.5,.5)

"BLD",9166,"KRN","B",.84,.84)

"BLD",9166,"KRN","B",3.6,3.6)

"BLD",9166,"KRN","B",3.8,3.8)

"BLD",9166,"KRN","B",9.2,9.2)

"BLD",9166,"KRN","B",9.8,9.8)

"BLD",9166,"KRN","B",19,19)

"BLD",9166,"KRN","B",19.1,19.1)

"BLD",9166,"KRN","B",101,101)

"BLD",9166,"KRN","B",409.61,409.61)

"BLD",9166,"KRN","B",771,771)

"BLD",9166,"KRN","B",779.2,779.2)

"BLD",9166,"KRN","B",870,870)

"BLD",9166,"KRN","B",8989.51,8989.51)

"BLD",9166,"KRN","B",8989.52,8989.52)

"BLD",9166,"KRN","B",8994,8994)

"BLD",9166,"QUES",0)
^9.62^^
"BLD",9166,"REQB",0)
^9.611^1^1
"BLD",9166,"REQB",1,0)
VPS*1.0*2^2
"BLD",9166,"REQB","B","VPS*1.0*2",1)

"KRN",19,13051,-1)
0^1
"KRN",19,13051,0)
VPS KIOSK INTERFACE^VPS KIOSK INTERFACE^^B^^^^^^^y^
"KRN",19,13051,1,0)
^19.06^3^3^3141111^^^^
"KRN",19,13051,1,1,0)
The RPCs that support the Vetlink Point of Service (Kiosk) system which
"KRN",19,13051,1,2,0)
will will call upon these RPCs for specific events triggered by the
"KRN",19,13051,1,3,0)
Vetlink patient-facing and staff-facing interfaces.
"KRN",19,13051,10.1)
VPS KIOSK INTERFACE
"KRN",19,13051,99.1)
63378,44177
"KRN",19,13051,"RPC",0)
^19.05P^52^52
"KRN",19,13051,"RPC",1,0)
VPS GET CLINIC
"KRN",19,13051,"RPC",2,0)
VPS GET PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",3,0)
XWB GET VARIABLE VALUE
"KRN",19,13051,"RPC",6,0)
VPS EDIT PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",7,0)
VPS FULLSSN
"KRN",19,13051,"RPC",8,0)
VPS GET DFN
"KRN",19,13051,"RPC",9,0)
VPS GET SITES
"KRN",19,13051,"RPC",10,0)
VPS LAST5
"KRN",19,13051,"RPC",11,0)
VPS PATIENT CHECK-IN
"KRN",19,13051,"RPC",12,0)
VPS PATIENT PRE-REGISTRATION
"KRN",19,13051,"RPC",13,0)
VPS LIST ALL
"KRN",19,13051,"RPC",19,0)
ORWRP PRINT REPORT
"KRN",19,13051,"RPC",21,0)
VPS GET2 PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",23,0)
VPS GET CLINICAL REMINDERS
"KRN",19,13051,"RPC",24,0)
VPS PRINT PATIENT LABEL
"KRN",19,13051,"RPC",25,0)
VPS PATIENT WRISTBAND PRINT
"KRN",19,13051,"RPC",26,0)
VPS ENHANCED GET PATIENT DEMO
"KRN",19,13051,"RPC",32,0)
VPS GET PRINTERS
"KRN",19,13051,"RPC",37,0)
VPS GET ALL CLINICS
"KRN",19,13051,"RPC",38,0)
VPS GET APPOINTMENTS
"KRN",19,13051,"RPC",39,0)
VPS GET CHANGED APPOINTMENTS
"KRN",19,13051,"RPC",40,0)
VPS SAVE CLINICAL SURVEY
"KRN",19,13051,"RPC",41,0)
VPS GET SURVEY DATA
"KRN",19,13051,"RPC",42,0)
VPS GET ALLERGIES
"KRN",19,13051,"RPC",43,0)
VPS GET MRAR PDO
"KRN",19,13051,"RPC",44,0)
VPS GET LAST MRAR
"KRN",19,13051,"RPC",45,0)
VPS UPDATE LAST MRAR TIU IEN
"KRN",19,13051,"RPC",46,0)
VPS WRITE KIOSK PARAMETERS
"KRN",19,13051,"RPC",47,0)
VPS WRITE MRAR PDO
"KRN",19,13051,"RPC",48,0)
TIU SIGN RECORD
"KRN",19,13051,"RPC",49,0)
TIU LONG LIST OF TITLES
"KRN",19,13051,"RPC",50,0)
TIU CREATE RECORD
"KRN",19,13051,"RPC",51,0)
TIU SET DOCUMENT TEXT
"KRN",19,13051,"RPC",52,0)
TIU REQUIRES COSIGNATURE
"KRN",19,13051,"U")
VPS KIOSK INTERFACE
"KRN",8994,3237,-1)
0^1
"KRN",8994,3237,0)
VPS GET CLINICAL REMINDERS^REMIND^VPSPTCR^2^P^0
"KRN",8994,3237,1,0)
^8994.01^2^2^3140926^^^
"KRN",8994,3237,1,1,0)
Called by the Vetlink Kiosk system. The RPC returns the DUE NOW Clinical 
"KRN",8994,3237,1,2,0)
Reminders for the patient.
"KRN",8994,3237,2,0)
^8994.02A^6^5
"KRN",8994,3237,2,1,0)
DFN^1^12^1^1
"KRN",8994,3237,2,1,1,0)
^^1^1^3140718^
"KRN",8994,3237,2,1,1,1,0)
Patient IEN.
"KRN",8994,3237,2,2,0)
DIVISION^1^12^0^2
"KRN",8994,3237,2,2,1,0)
^^1^1^3140718^
"KRN",8994,3237,2,2,1,1,0)
Division IEN.
"KRN",8994,3237,2,3,0)
SERVICE^1^12^0^3
"KRN",8994,3237,2,3,1,0)
^^1^1^3140718^
"KRN",8994,3237,2,3,1,1,0)
Service IEN.
"KRN",8994,3237,2,4,0)
LOCATION^1^12^0^4
"KRN",8994,3237,2,4,1,0)
^^1^1^3140718^
"KRN",8994,3237,2,4,1,1,0)
Location IEN.
"KRN",8994,3237,2,6,0)
USERCLASS^1^50^0^5
"KRN",8994,3237,2,6,1,0)
^8994.021^1^1^3140926^^^
"KRN",8994,3237,2,6,1,1,0)
User Class IENs separated by "^".
"KRN",8994,3237,2,"B","DFN",1)

"KRN",8994,3237,2,"B","DIVISION",2)

"KRN",8994,3237,2,"B","LOCATION",4)

"KRN",8994,3237,2,"B","SERVICE",3)

"KRN",8994,3237,2,"B","USERCLASS",6)

"KRN",8994,3237,2,"PARAMSEQ",1,1)

"KRN",8994,3237,2,"PARAMSEQ",2,2)

"KRN",8994,3237,2,"PARAMSEQ",3,3)

"KRN",8994,3237,2,"PARAMSEQ",4,4)

"KRN",8994,3237,2,"PARAMSEQ",5,6)

"KRN",8994,3238,-1)
0^3
"KRN",8994,3238,0)
VPS PATIENT WRISTBAND PRINT^PRINT^VPSWRIST^1
"KRN",8994,3238,1,0)
^8994.01^2^2^3141015^^^^
"KRN",8994,3238,1,1,0)
This RPC prints patient wristband to VistA printer using VistA standard pat
"KRN",8994,3238,1,2,0)
Patient Wristband Print routine (DGPWB).
"KRN",8994,3238,2,0)
^8994.02A^5^3
"KRN",8994,3238,2,3,0)
VPSIO^1^50^1^3
"KRN",8994,3238,2,3,1,0)
^8994.021^1^1^3141015^^^^
"KRN",8994,3238,2,3,1,1,0)
This is the device name where the wristband label to print on.
"KRN",8994,3238,2,4,0)
VPSTYP^1^7^1^1
"KRN",8994,3238,2,4,1,0)
^^1^1^3141015^
"KRN",8994,3238,2,4,1,1,0)
Patient ID Type. Valid Input parameter: DFN, SSN, ICN, VIC/CAC
"KRN",8994,3238,2,5,0)
VPSNUM^1^50^1^2
"KRN",8994,3238,2,5,1,0)
^8994.021^1^1^3141015^^
"KRN",8994,3238,2,5,1,1,0)
Patient ID. This could be DFN, SSN, ICN, VIC/CAC
"KRN",8994,3238,2,"B","VPSIO",3)

"KRN",8994,3238,2,"B","VPSNUM",5)

"KRN",8994,3238,2,"B","VPSTYP",4)

"KRN",8994,3238,2,"PARAMSEQ",1,4)

"KRN",8994,3238,2,"PARAMSEQ",2,5)

"KRN",8994,3238,2,"PARAMSEQ",3,3)

"KRN",8994,3239,-1)
0^2
"KRN",8994,3239,0)
VPS PRINT PATIENT LABEL^PRINT^VPSRLBLS^1
"KRN",8994,3239,1,0)
^8994.01^2^2^3141015^^^^
"KRN",8994,3239,1,1,0)
This RPC prints patient label using the standard VistA
"KRN",8994,3239,1,2,0)
Print Patient Label routine (DGPLBL).
"KRN",8994,3239,2,0)
^8994.02A^8^6
"KRN",8994,3239,2,3,0)
VPSLOC^1^1^1^3
"KRN",8994,3239,2,3,1,0)
^8994.021^2^2^3141015^^
"KRN",8994,3239,2,3,1,1,0)
This is a flag to indicate to print routine to include ward location
"KRN",8994,3239,2,3,1,2,0)
or not.
"KRN",8994,3239,2,4,0)
VPSLBCNT^1^3^1^4
"KRN",8994,3239,2,4,1,0)
^8994.021^2^2^3141015^^
"KRN",8994,3239,2,4,1,1,0)
This is label count to indicate to print routine how many duplicate
"KRN",8994,3239,2,4,1,2,0)
labels to print for the patient.
"KRN",8994,3239,2,5,0)
VPSLPL^1^2^1^5
"KRN",8994,3239,2,5,1,0)
^8994.021^2^2^3141015^^
"KRN",8994,3239,2,5,1,1,0)
This is Lines/Label to indicate to print routine the maximum lines 
"KRN",8994,3239,2,5,1,2,0)
to print for each label.
"KRN",8994,3239,2,6,0)
VPSIO^1^50^1^6
"KRN",8994,3239,2,6,1,0)
^8994.021^1^1^3141015^^^^
"KRN",8994,3239,2,6,1,1,0)
This is the device name where the label will be printed to.
"KRN",8994,3239,2,7,0)
VPSTYP^1^7^1^1
"KRN",8994,3239,2,7,1,0)
^^1^1^3141015^
"KRN",8994,3239,2,7,1,1,0)
Patient ID Type. Valid Input parameter: DFN,SSN,ICN,VIC/CAC
"KRN",8994,3239,2,8,0)
VPSNUM^1^50^1^2
"KRN",8994,3239,2,8,1,0)
^8994.021^1^1^3141015^^^^
"KRN",8994,3239,2,8,1,1,0)
Patient ID. This could be SSN, DFN, VIC/CAC, ICN
"KRN",8994,3239,2,"B","VPSIO",6)

"KRN",8994,3239,2,"B","VPSLBCNT",4)

"KRN",8994,3239,2,"B","VPSLOC",3)

"KRN",8994,3239,2,"B","VPSLPL",5)

"KRN",8994,3239,2,"B","VPSNUM",8)

"KRN",8994,3239,2,"B","VPSTYP",7)

"KRN",8994,3239,2,"PARAMSEQ",1,7)

"KRN",8994,3239,2,"PARAMSEQ",2,8)

"KRN",8994,3239,2,"PARAMSEQ",3,3)

"KRN",8994,3239,2,"PARAMSEQ",4,4)

"KRN",8994,3239,2,"PARAMSEQ",5,5)

"KRN",8994,3239,2,"PARAMSEQ",6,6)

"KRN",8994,3240,-1)
0^4
"KRN",8994,3240,0)
VPS ENHANCED GET PATIENT DEMO^GETDATA3^VPSRPC1^2^P^0^^1^1^^1
"KRN",8994,3240,1,0)
^8994.01^4^4^3140821^^^^
"KRN",8994,3240,1,1,0)
This RPC is called  by the Vetlink Kiosk (point of service) system.  
"KRN",8994,3240,1,2,0)
Given Patient SSN or DFN or ICN or VIC/CAC, this RPC returns the
"KRN",8994,3240,1,3,0)
patient demographics,insurance,and up-coming appointments, etc
"KRN",8994,3240,1,4,0)
for selected categories
"KRN",8994,3240,2,0)
^8994.02A^3^3
"KRN",8994,3240,2,1,0)
VPSNUM^1^25^1^1
"KRN",8994,3240,2,1,1,0)
^^1^1^3140821^
"KRN",8994,3240,2,1,1,1,0)
Patient ID such as the patient SSN OR DFN OR ICN OR VIC/CAC
"KRN",8994,3240,2,2,0)
VPSTYP^1^7^1^2
"KRN",8994,3240,2,2,1,0)
^^1^1^3140821^
"KRN",8994,3240,2,2,1,1,0)
Patient ID TYPE such as SSN or DFN OR ICN OR VIC/CAC
"KRN",8994,3240,2,3,0)
VPSCAT^2^20^1^3
"KRN",8994,3240,2,3,1,0)
^8994.021^14^14^3140821^^^^
"KRN",8994,3240,2,3,1,1,0)
Input Format:  VPSCAT(SEQ#)=CATEGORY;FROMDATE:THROUGH DATE
"KRN",8994,3240,2,3,1,2,0)
Example input parameter : 
"KRN",8994,3240,2,3,1,3,0)
   VPSCAT(1)=1;3140101:3141231 <- returns Appointments start from 1/1/2014 through 12/31/2014
"KRN",8994,3240,2,3,1,4,0)
   VPSCAT(2)=2;3140601:3140630 <- returns Lab Orders start from 6/1/2014 through 6/30/2014
"KRN",8994,3240,2,3,1,5,0)
   VPSCAT(3)=3                 <- returns all consults
"KRN",8994,3240,2,3,1,6,0)
   VPSCAT(4)=6                 <- returns Patient Demographics
"KRN",8994,3240,2,3,1,7,0)
 
"KRN",8994,3240,2,3,1,8,0)
Valid Categories:
"KRN",8994,3240,2,3,1,9,0)
   1 - Appointment (With Date Range option)
"KRN",8994,3240,2,3,1,10,0)
   2 - Lab Orders (With Date Range option)
"KRN",8994,3240,2,3,1,11,0)
   3 - Consults
"KRN",8994,3240,2,3,1,12,0)
   4 - Radiology (With Date Range option)
"KRN",8994,3240,2,3,1,13,0)
   5 - Problem
"KRN",8994,3240,2,3,1,14,0)
   6 - Patient demographics
"KRN",8994,3240,2,"B","VPSCAT",3)

"KRN",8994,3240,2,"B","VPSNUM",1)

"KRN",8994,3240,2,"B","VPSTYP",2)

"KRN",8994,3240,2,"PARAMSEQ",1,1)

"KRN",8994,3240,2,"PARAMSEQ",2,2)

"KRN",8994,3240,2,"PARAMSEQ",3,3)

"KRN",8994,3241,-1)
0^5
"KRN",8994,3241,0)
VPS GET PRINTERS^DEVICE^VPSPRINT^2
"KRN",8994,3241,1,0)
^^1^1^3141015^
"KRN",8994,3241,1,1,0)
This RPC returns up to 20 entries from the device file based on Input Criteria.
"KRN",8994,3241,2,0)
^8994.02A^2^2
"KRN",8994,3241,2,1,0)
FROM^1^50^0^1
"KRN",8994,3241,2,1,1,0)
^^3^3^3141015^
"KRN",8994,3241,2,1,1,1,0)
This input parameter is used to filter the output by returning result start with or start from (up to 20 printers). 
"KRN",8994,3241,2,1,1,2,0)
Example: Input Parameter "B" will return all printers (up to 20) start *with* "B"
"KRN",8994,3241,2,1,1,3,0)
Example: Input Parameter "B*" will return all printers (up to 20) start *from* "B"
"KRN",8994,3241,2,2,0)
DIR^1^2^0^2
"KRN",8994,3241,2,2,1,0)
^^3^3^3141015^
"KRN",8994,3241,2,2,1,1,0)
This input parameter causes output result to be sorted in printer name ascending or descending order.
"KRN",8994,3241,2,2,1,2,0)
Input Parameter: 1 (return printer names in ascending order)
"KRN",8994,3241,2,2,1,3,0)
Input Parameter: -1 (return printer names in descending order)
"KRN",8994,3241,2,"B","DIR",2)

"KRN",8994,3241,2,"B","FROM",1)

"KRN",8994,3241,2,"PARAMSEQ",1,1)

"KRN",8994,3241,2,"PARAMSEQ",2,2)

"KRN",8994,3242,-1)
0^6
"KRN",8994,3242,0)
VPS GET ALL CLINICS^ALLCLN^VPSRPC10^4^R^^^1^1
"KRN",8994,3242,1,0)
^8994.01^1^1^3141029^^
"KRN",8994,3242,1,1,0)
This RPC returns a list of hospital locations (defined in the HOSPITAL LOCATION file), which conform the criteria.
"KRN",8994,3242,2,0)
^8994.02A^6^6
"KRN",8994,3242,2,1,0)
HLTYPES^1^^^1
"KRN",8994,3242,2,1,1,0)
^^11^11^3141029^
"KRN",8994,3242,2,1,1,1,0)
List of location types separated by commas (internal values of the TYPE field of the HOSPITAL LOCATION file):
"KRN",8994,3242,2,1,1,2,0)
  C  Clinic
"KRN",8994,3242,2,1,1,3,0)
  F  File Area
"KRN",8994,3242,2,1,1,4,0)
  I  Imaging
"KRN",8994,3242,2,1,1,5,0)
  M  Module
"KRN",8994,3242,2,1,1,6,0)
  N  Non-Clinic Stop
"KRN",8994,3242,2,1,1,7,0)
  OR Operating Room
"KRN",8994,3242,2,1,1,8,0)
  W  Ward
"KRN",8994,3242,2,1,1,9,0)
  Z  Other Location
"KRN",8994,3242,2,1,1,10,0)
 
"KRN",8994,3242,2,1,1,11,0)
Only locations of the types defined by this parameter are selected by the remote procedure. By default ($G(HLTYPES)=""), all locations are selected.
"KRN",8994,3242,2,2,0)
DIVIEN^1^^^2
"KRN",8994,3242,2,2,1,0)
^^1^1^3141029^
"KRN",8994,3242,2,2,1,1,0)
Division IEN. If this parameter is defined and greated than zero then only the locations associated with this division are selected.
"KRN",8994,3242,2,3,0)
PART^1^30^^3
"KRN",8994,3242,2,3,1,0)
^^1^1^3141029^
"KRN",8994,3242,2,3,1,1,0)
The partial match restriction.
"KRN",8994,3242,2,4,0)
FLAGS^1^^^4
"KRN",8994,3242,2,4,1,0)
^8994.021^6^6^3141029^^
"KRN",8994,3242,2,4,1,1,0)
Flags that control the execution (can be combined):
"KRN",8994,3242,2,4,1,2,0)
 
"KRN",8994,3242,2,4,1,3,0)
  A  Include active locations (default)
"KRN",8994,3242,2,4,1,4,0)
  B  Backwards. Traverses the index in the opposite
"KRN",8994,3242,2,4,1,5,0)
     direction of normal traversal.
"KRN",8994,3242,2,4,1,6,0)
  I  Include inactive locations
"KRN",8994,3242,2,5,0)
NUMBER^1^^^5
"KRN",8994,3242,2,5,1,0)
^^1^1^3141029^
"KRN",8994,3242,2,5,1,1,0)
Maximum number of entries to return. A value of "*" or no value in this parameter designates all entries
"KRN",8994,3242,2,6,0)
FROM^1^^^6
"KRN",8994,3242,2,6,1,0)
^8994.021^8^8^3141029^^
"KRN",8994,3242,2,6,1,1,0)
The index entry(s) from which to begin the list
"KRN",8994,3242,2,6,1,2,0)
  ^01: From Name
"KRN",8994,3242,2,6,1,3,0)
  ^02: From IEN
"KRN",8994,3242,2,6,1,4,0)
 
"KRN",8994,3242,2,6,1,5,0)
For example, a FROM value of "VA" would list entries following VA. You can use the 2nd and 3rd "^"- pieces of the @RESULT@(0) node to continue the listing in the subsequent procedure calls.
"KRN",8994,3242,2,6,1,6,0)
 
"KRN",8994,3242,2,6,1,7,0)
NOTE: The FROM value itself is not included in the resulting list
"KRN",8994,3242,2,6,1,8,0)
See description of the LIST^DIC for more details about the PART, NUMBER, and FROM parameters.
"KRN",8994,3242,2,"B","DIVIEN",2)

"KRN",8994,3242,2,"B","FLAGS",4)

"KRN",8994,3242,2,"B","FROM",6)

"KRN",8994,3242,2,"B","HLTYPES",1)

"KRN",8994,3242,2,"B","NUMBER",5)

"KRN",8994,3242,2,"B","PART",3)

"KRN",8994,3242,2,"PARAMSEQ",1,1)

"KRN",8994,3242,2,"PARAMSEQ",2,2)

"KRN",8994,3242,2,"PARAMSEQ",3,3)

"KRN",8994,3242,2,"PARAMSEQ",4,4)

"KRN",8994,3242,2,"PARAMSEQ",5,5)

"KRN",8994,3242,2,"PARAMSEQ",6,6)

"KRN",8994,3242,3,0)
^8994.03^21^21^3141029^^
"KRN",8994,3242,3,1,0)
A negative value of the first "^"-piece of the RESULTS(0) indicates that an error occurred during the execution of the remote procedure. In this case, the second piece of the RESULT(0) will contain number of the error descriptors returned in the
"KRN",8994,3242,3,2,0)
 subsequent nodes of the RESULTS array:
"KRN",8994,3242,3,3,0)
  RESULTS(0)         Result Descriptior
"KRN",8994,3242,3,4,0)
                     ^01: The last error code
"KRN",8994,3242,3,5,0)
                     ^02: Message
"KRN",8994,3242,3,6,0)
 
"KRN",8994,3242,3,7,0)
Othewise, number of hospital locations and the value of the FROM parameter for the next procedure call are return in the RESULTS(0) and the subsequent nodes of the global array contain the locations.
"KRN",8994,3242,3,8,0)
 
"KRN",8994,3242,3,9,0)
  RESULTS(0)          Result Descriptor
"KRN",8994,3242,3,10,0)
                       ^01: Number of locations
"KRN",8994,3242,3,11,0)
                       ^02: From Name
"KRN",8994,3242,3,12,0)
                       ^03: From IEN
"KRN",8994,3242,3,13,0)
 
"KRN",8994,3242,3,14,0)
  RESULTS(1..n)       Hospital Location
"KRN",8994,3242,3,15,0)
                       ^01: IEN
"KRN",8994,3242,3,16,0)
                       ^02: Name
"KRN",8994,3242,3,17,0)
                       ^03: Location Type (internal)
"KRN",8994,3242,3,18,0)
                       ^04: Institution IEN
"KRN",8994,3242,3,19,0)
                       ^05: Division IEN
"KRN",8994,3242,3,20,0)
                       ^06: Active (0/1)
"KRN",8994,3242,3,21,0)
NOTE: The 6th "^"-piece of the location record (Active) is populated only if both "A" and "I" flags are used.
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",522,-1)
1^1
"PKG",522,0)
VPS KIOSK^VPS^RPC components that support VPS Kiosk.
"PKG",522,20,0)
^9.402P^^
"PKG",522,22,0)
^9.49I^1^1
"PKG",522,22,1,0)
1.0
"PKG",522,22,1,"PAH",1,0)
4^3150528^123458951
"PKG",522,22,1,"PAH",1,1,0)
^^7^7^3150528
"PKG",522,22,1,"PAH",1,1,1,0)
VPS*1*4 includes:
"PKG",522,22,1,"PAH",1,1,2,0)
1. New RPC to Print Patient Wristband with option to print EDIPI/SSN
"PKG",522,22,1,"PAH",1,1,3,0)
barcode
"PKG",522,22,1,"PAH",1,1,4,0)
2  New RPC to print Patient label with option to print EDIPI/SSN barcode  
"PKG",522,22,1,"PAH",1,1,5,0)
3. New RPCs to integrate with Howdy package
"PKG",522,22,1,"PAH",1,1,6,0)
4. New RPC to integrate with Patient Clinical Reminders
"PKG",522,22,1,"PAH",1,1,7,0)
5. Enhancement to Patient Demographic
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","VPSPRINT")
0^5^B5753200
"RTN","VPSPRINT",1,0)
VPSPRINT ;SLOIFO/BT - Common APIs used for VPS Printing;07/18/14 15:08
"RTN","VPSPRINT",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Jul 18,2014;Build 27
"RTN","VPSPRINT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPRINT",4,0)
 ;
"RTN","VPSPRINT",5,0)
 ; External Reference DBIA#
"RTN","VPSPRINT",6,0)
 ; ------------------------
"RTN","VPSPRINT",7,0)
 ; #2171  - $$LKUP^XUAF4       - Supported
"RTN","VPSPRINT",8,0)
 ; #3771  - DEVICE^XUDHGUI     - Supported
"RTN","VPSPRINT",9,0)
 ; #2701  - MPIF001 call       - Supported
"RTN","VPSPRINT",10,0)
 ; #5888  - RPCVIC^DPTLK       - Controlled Sub
"RTN","VPSPRINT",11,0)
 ; #10114 - DEVICE file ^%ZIS(1)     (Supported)
"RTN","VPSPRINT",12,0)
 QUIT
"RTN","VPSPRINT",13,0)
 ;
"RTN","VPSPRINT",14,0)
GETDFN(VPSTYP,VPSNUM) ;Return DFN given Patient ID Type and Value
"RTN","VPSPRINT",15,0)
 ;INPUT
"RTN","VPSPRINT",16,0)
 ;   VPSTYP   Patients ID Type - SSN or DFN OR ICN OR VIC/CAC (REQUIRED) 
"RTN","VPSPRINT",17,0)
 ;   VPSNUM   Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSPRINT",18,0)
 ;RETURN
"RTN","VPSPRINT",19,0)
 ;   DFN        (successful)  OR
"RTN","VPSPRINT",20,0)
 ;   "-1^ERROR" (error/not found)
"RTN","VPSPRINT",21,0)
 ;
"RTN","VPSPRINT",22,0)
 N CM S CM=","
"RTN","VPSPRINT",23,0)
 ;
"RTN","VPSPRINT",24,0)
 QUIT:$G(VPSTYP)="" "-1^TYPE IS REQUIRED (VALID TYPE: SSN, DFN, ICN OR VIC/CAC)"
"RTN","VPSPRINT",25,0)
 QUIT:'$F(",SSN,DFN,ICN,VIC/CAC,",CM_VPSTYP_CM) "-1^INVALID TYPE (VALID TYPE: SSN, DFN, ICN OR VIC/CAC)"
"RTN","VPSPRINT",26,0)
 QUIT:$G(VPSNUM)="" "-1^SSN, DFN, ICN OR VIC/CAC IS REQUIRED"
"RTN","VPSPRINT",27,0)
 ;
"RTN","VPSPRINT",28,0)
 N DFN
"RTN","VPSPRINT",29,0)
 ;
"RTN","VPSPRINT",30,0)
 I VPSTYP="SSN" D 
"RTN","VPSPRINT",31,0)
 . S DFN=$O(^DPT("SSN",VPSNUM,0))
"RTN","VPSPRINT",32,0)
 . I +DFN'>0 S DFN="-1"_U_"NO PATIENT FOUND WITH SSN: "_VPSNUM
"RTN","VPSPRINT",33,0)
 I VPSTYP="DFN" D
"RTN","VPSPRINT",34,0)
 . S DFN=VPSNUM
"RTN","VPSPRINT",35,0)
 . I '$D(^DPT(DFN)) S DFN="-1"_U_"NO PATIENT FOUND WITH DFN: "_VPSNUM
"RTN","VPSPRINT",36,0)
 I VPSTYP="VIC/CAC" D
"RTN","VPSPRINT",37,0)
 . D RPCVIC^DPTLK(.DFN,VPSNUM) ; get DFN given VIC/CAC number - IA 5888
"RTN","VPSPRINT",38,0)
 . S:DFN=-1 DFN="-1^NO DFN FOR VIC/CAC NUMBER"
"RTN","VPSPRINT",39,0)
 I VPSTYP="ICN" D
"RTN","VPSPRINT",40,0)
 . S DFN=$$GETDFN^MPIF001(VPSNUM) ; get DFN given ICN in the Patient file  - IA 2701
"RTN","VPSPRINT",41,0)
 ;
"RTN","VPSPRINT",42,0)
 QUIT DFN
"RTN","VPSPRINT",43,0)
 ;
"RTN","VPSPRINT",44,0)
DEVICE(VPSDEV,FROM,DIR) ; RPC: VPS GET PRINTERS
"RTN","VPSPRINT",45,0)
 ; -- Return up to 20 entries from the Device file based on Input criteria
"RTN","VPSPRINT",46,0)
 ; INPUT
"RTN","VPSPRINT",47,0)
 ;   FROM   : List all printers start from (text to $O from)
"RTN","VPSPRINT",48,0)
 ;            B (all device with name start *WITH* B)
"RTN","VPSPRINT",49,0)
 ;            B* (all device with name start *FROM* B)
"RTN","VPSPRINT",50,0)
 ;   DIR    : Ascending order (1) or Descending order (-1) ($O direction)
"RTN","VPSPRINT",51,0)
 ; OUTPUT
"RTN","VPSPRINT",52,0)
 ;   VPSDEV : By reference local array contains VistA printers based on input criteria
"RTN","VPSPRINT",53,0)
 ;   SYNTAX
"RTN","VPSPRINT",54,0)
 ;            Found     : VPSDEV(0) = 1
"RTN","VPSPRINT",55,0)
 ;                        VPSDEV(1..n)=IEN^Name^DisplayName^Location^RMar^PLen
"RTN","VPSPRINT",56,0)
 ;
"RTN","VPSPRINT",57,0)
 ;            Not Found : VPSDEV(0) = -1^No printers on file
"RTN","VPSPRINT",58,0)
 ;
"RTN","VPSPRINT",59,0)
 K VPSDEV
"RTN","VPSPRINT",60,0)
 S FROM=$G(FROM)
"RTN","VPSPRINT",61,0)
 S DIR=$G(DIR,1)
"RTN","VPSPRINT",62,0)
 D DEVICE^XUDHGUI(.VPSDEV,FROM,DIR)
"RTN","VPSPRINT",63,0)
 I $D(VPSDEV) S VPSDEV(0)=1 ; At least there is one device in the list
"RTN","VPSPRINT",64,0)
 I '$D(VPSDEV) S VPSDEV(0)="-1^No printers on file"
"RTN","VPSPRINT",65,0)
 QUIT
"RTN","VPSPRINT",66,0)
 ;
"RTN","VPSPRINT",67,0)
DEVEXIST(DEVNAME) ;check if DEVNAME exists on file
"RTN","VPSPRINT",68,0)
 ; Returns 1 if found, otherwise returns -1^err message
"RTN","VPSPRINT",69,0)
 QUIT:$G(DEVNAME)="" "-1^NO DEVICE SENT"
"RTN","VPSPRINT",70,0)
 N DIC S DIC="^%ZIS(1,"
"RTN","VPSPRINT",71,0)
 N X S X=DEVNAME
"RTN","VPSPRINT",72,0)
 N Y D ^DIC
"RTN","VPSPRINT",73,0)
 QUIT:$P(Y,U,2)'=DEVNAME "-1"_U_"DEVICE "_DEVNAME_" NOT FOUND"
"RTN","VPSPRINT",74,0)
 QUIT 1
"RTN","VPSPTCR")
0^2^B36918208
"RTN","VPSPTCR",1,0)
VPSPTCR  ;BPIFO/KG - Patient DUE NOW Reminders RPC;07/03/14 15:30
"RTN","VPSPTCR",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Jul 3,2014;Build 27
"RTN","VPSPTCR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPTCR",4,0)
 ;
"RTN","VPSPTCR",5,0)
 ; External Reference DBIA#
"RTN","VPSPTCR",6,0)
 ; ------------------------
"RTN","VPSPTCR",7,0)
 ; #2051  - FIND1^DIC              (Supported)
"RTN","VPSPTCR",8,0)
 ; #2056  - GET1^DIQ               (Supported)
"RTN","VPSPTCR",9,0)
 ; #2263  - GETWP^XPAR             (Supported)
"RTN","VPSPTCR",10,0)
 ; #2263  - GETLST^XPAR            (Supported)
"RTN","VPSPTCR",11,0)
 ; #2182  - MAIN^PXRM              (Controlled Subs)
"RTN","VPSPTCR",12,0)
 ; #3333  - CATREM^PXRMAPI0        (Controlled Subs)
"RTN","VPSPTCR",13,0)
 ; #3960  - READ ACCESS TO File #811.7, Items .01                 (Controlled Subs)
"RTN","VPSPTCR",14,0)
 ; #6113  - READ ACCESS TO File #811.9, Items 1.2, 1.6, 1.91, 103 (Controlled Subs)
"RTN","VPSPTCR",15,0)
 ; #10060 - READ ACCESS TO File #200, Items 16,29                 (Supported)
"RTN","VPSPTCR",16,0)
 ; #1518  - READ ACCESS TO File #8989.3, Items 217                (Controlled Subs)
"RTN","VPSPTCR",17,0)
 Q
"RTN","VPSPTCR",18,0)
 ;
"RTN","VPSPTCR",19,0)
REMIND(RESULT,DFN,DIV,SRV,LOC,USRCL) ;RPC: VPS GET CLINICAL REMINDERS
"RTN","VPSPTCR",20,0)
 ;Returns a list of patient's currently due PCE clinical reminders
"RTN","VPSPTCR",21,0)
 ;Input Parameter(s):
"RTN","VPSPTCR",22,0)
 ; DFN - Patient Identifier (File #2)
"RTN","VPSPTCR",23,0)
 ; DIV - Division Identifier (File #4)
"RTN","VPSPTCR",24,0)
 ; SRV - Service Identifier (File #49)
"RTN","VPSPTCR",25,0)
 ; LOC - Location Identifier (File #44)
"RTN","VPSPTCR",26,0)
 ; USRCL - List of User Classes separated by "^" (File #8930)
"RTN","VPSPTCR",27,0)
 ;Output Parameter(s):
"RTN","VPSPTCR",28,0)
 ; RESULT - Passed by reference, list of due now reminders
"RTN","VPSPTCR",29,0)
 ;   Success : RESULT(0)=0, RESULT(1..n)= file 811.9 ien^reminder print name^date due^last occur.
"RTN","VPSPTCR",30,0)
 ;   Error   : RESULT(0)=-1^Error Message
"RTN","VPSPTCR",31,0)
 ;
"RTN","VPSPTCR",32,0)
 N VPSLST,VPSI,VPSJ,VPSIEN,VPSTXT,VPSX,VPSLSTDT,VPSDUEDT,VPSPRI,VPSDUE,VPSSTA
"RTN","VPSPTCR",33,0)
 ;
"RTN","VPSPTCR",34,0)
 ; -- validate patient ID
"RTN","VPSPTCR",35,0)
 I $G(DFN)="" S RESULT(0)="-1^PATIENT ID NOT SENT" Q
"RTN","VPSPTCR",36,0)
 I '$D(^DPT(DFN)) S RESULT(0)="-1^PATIENT "_DFN_" NOT FOUND" Q
"RTN","VPSPTCR",37,0)
 ;
"RTN","VPSPTCR",38,0)
 ; -- get all cover sheer reminder list
"RTN","VPSPTCR",39,0)
 D REMLIST(.VPSLST,$G(DIV),$G(SRV),$G(LOC),$G(USRCL))
"RTN","VPSPTCR",40,0)
 ;
"RTN","VPSPTCR",41,0)
 ; -- get clinical reminder for patient
"RTN","VPSPTCR",42,0)
 S VPSI=0,VPSJ=0
"RTN","VPSPTCR",43,0)
 F  S VPSI=$O(VPSLST(VPSI)) Q:'VPSI  D
"RTN","VPSPTCR",44,0)
 . S VPSIEN=$P(VPSLST(VPSI),U,2)
"RTN","VPSPTCR",45,0)
 . K ^TMP("PXRHM",$J)
"RTN","VPSPTCR",46,0)
 . D MAIN^PXRM(DFN,VPSIEN,0)
"RTN","VPSPTCR",47,0)
 . S VPSTXT="",VPSTXT=$O(^TMP("PXRHM",$J,VPSIEN,VPSTXT)) Q:VPSTXT=""  D
"RTN","VPSPTCR",48,0)
 . . S VPSX=^TMP("PXRHM",$J,VPSIEN,VPSTXT)
"RTN","VPSPTCR",49,0)
 . . S VPSSTA=$P(VPSX,U,1),VPSDUEDT=$P(VPSX,U,2),VPSLSTDT=$P(VPSX,U,3)
"RTN","VPSPTCR",50,0)
 . . S VPSLSTDT=$S(+$G(VPSLSTDT)>0:VPSLSTDT,1:"") ;null if not a date
"RTN","VPSPTCR",51,0)
 . . S VPSJ=VPSJ+1
"RTN","VPSPTCR",52,0)
 . . S VPSDUE=$S(VPSSTA["DUE":1,VPSSTA["ERROR":3,VPSSTA["CNBD":4,1:2)
"RTN","VPSPTCR",53,0)
 . . I VPSDUE'=2 D  I 1
"RTN","VPSPTCR",54,0)
 . . . S VPSPRI=$$GET1^DIQ(811.9,VPSIEN_",",1.91,"I") ;Priority
"RTN","VPSPTCR",55,0)
 . . . I VPSPRI="" S VPSPRI=2
"RTN","VPSPTCR",56,0)
 . . E  S VPSDUEDT="",VPSLSTDT="",VPSPRI=""
"RTN","VPSPTCR",57,0)
 . . S RESULT(VPSJ)=VPSIEN_U_VPSTXT_U_VPSDUEDT_U_VPSLSTDT_U_VPSPRI_U_VPSDUE  ;_U_$$DLG^PXRMRPCA(VPSIEN)_U_U_U_U_$$DLGWIPE^PXRMRPCA(VPSIEN)
"RTN","VPSPTCR",58,0)
 . K ^TMP("PXRHM",$J)
"RTN","VPSPTCR",59,0)
 ;
"RTN","VPSPTCR",60,0)
 I '$D(RESULT) S RESULT(0)="-1^NO CLINICAL REMINDERS FOUND FOR PATIENT "_DFN Q
"RTN","VPSPTCR",61,0)
 S RESULT(0)=1
"RTN","VPSPTCR",62,0)
 Q
"RTN","VPSPTCR",63,0)
 ;
"RTN","VPSPTCR",64,0)
REMACCUM(RESULT,LVL,TYP,SORT,CLASS) ;Gets Reminder data for each Parameter Entity
"RTN","VPSPTCR",65,0)
 ;Input Parameter(s):
"RTN","VPSPTCR",66,0)
 ; LVL - Parameter Entity
"RTN","VPSPTCR",67,0)
 ; TYP - Format of returned data
"RTN","VPSPTCR",68,0)
 ; SORT - Sort order for Reminders
"RTN","VPSPTCR",69,0)
 ; CLASS - User classes
"RTN","VPSPTCR",70,0)
 ;Output Parameter(s):
"RTN","VPSPTCR",71,0)
 ; RESULT - Sorted list of Reminders
"RTN","VPSPTCR",72,0)
 ; 
"RTN","VPSPTCR",73,0)
 ; Format of entries in ORQQPX COVER SHEET REMINDERS:
"RTN","VPSPTCR",74,0)
 ; L:Lock;R:Remove;N:Normal / C:Category;R:Reminder / Cat or Rem IEN
"RTN","VPSPTCR",75,0)
 N IDX,I,J,K,M,FOUND,VPSERR,VPSTMP,FLAG,IEN
"RTN","VPSPTCR",76,0)
 N FFLAG,FIEN,OUT,P2,ADD,DOADD,CODE
"RTN","VPSPTCR",77,0)
 I LVL="CLASS" D  I 1
"RTN","VPSPTCR",78,0)
 . N VPSLST,VPSCLS,VPSCLSPM,VPSWP
"RTN","VPSPTCR",79,0)
 . S VPSCLSPM="ORQQPX COVER SHEET REM CLASSES"
"RTN","VPSPTCR",80,0)
 . D GETLST^XPAR(.VPSLST,"SYS",VPSCLSPM,"Q",.VPSERR)
"RTN","VPSPTCR",81,0)
 . S I=0,M=0,CLASS=$G(CLASS)
"RTN","VPSPTCR",82,0)
 . F  S I=$O(VPSLST(I)) Q:'I  D
"RTN","VPSPTCR",83,0)
 . . S VPSCLS=$P(VPSLST(I),U,1)
"RTN","VPSPTCR",84,0)
 . . S ADD=0
"RTN","VPSPTCR",85,0)
 . . I CLASS]"" S ADD=(U_CLASS_U)[(U_VPSCLS_U)
"RTN","VPSPTCR",86,0)
 . . I +ADD D
"RTN","VPSPTCR",87,0)
 . . . D GETWP^XPAR(.VPSWP,"SYS",VPSCLSPM,VPSCLS,.VPSERR)
"RTN","VPSPTCR",88,0)
 . . . S K=0
"RTN","VPSPTCR",89,0)
 . . . F  S K=$O(VPSWP(K)) Q:'K  D
"RTN","VPSPTCR",90,0)
 . . . . S M=M+1
"RTN","VPSPTCR",91,0)
 . . . . S J=$P(VPSWP(K,0),";",1)
"RTN","VPSPTCR",92,0)
 . . . . S VPSTMP(M)=J_U_$P(VPSWP(K,0),";",2)
"RTN","VPSPTCR",93,0)
 E  D GETLST^XPAR(.VPSTMP,LVL,"ORQQPX COVER SHEET REMINDERS",TYP,.VPSERR)
"RTN","VPSPTCR",94,0)
 S I=0,IDX=$O(RESULT(999999),-1)+1,ADD=(SORT="")
"RTN","VPSPTCR",95,0)
 F  S I=$O(VPSTMP(I)) Q:'I  D
"RTN","VPSPTCR",96,0)
 . S (FOUND,J)=0,P2=$P(VPSTMP(I),U,2)
"RTN","VPSPTCR",97,0)
 . S FLAG=$E(P2),IEN=$E(P2,2,999)
"RTN","VPSPTCR",98,0)
 . I ADD S DOADD=1
"RTN","VPSPTCR",99,0)
 . E  D
"RTN","VPSPTCR",100,0)
 . . S DOADD=0
"RTN","VPSPTCR",101,0)
 . . F  S J=$O(RESULT(J)) Q:'J  D  Q:FOUND
"RTN","VPSPTCR",102,0)
 . . . S P2=$P(RESULT(J),U,2)
"RTN","VPSPTCR",103,0)
 . . . S FIEN=$E(P2,2,999)
"RTN","VPSPTCR",104,0)
 . . . I FIEN=IEN S FOUND=J,FFLAG=$E(P2)
"RTN","VPSPTCR",105,0)
 . . I FOUND D  I 1
"RTN","VPSPTCR",106,0)
 . . . I FLAG="R",FFLAG'="L" K RESULT(FOUND)
"RTN","VPSPTCR",107,0)
 . . . I FLAG'=FFLAG,(FLAG_FFLAG)["L" S $E(P2)="L",$P(RESULT(FOUND),U,2)=P2
"RTN","VPSPTCR",108,0)
 . . E  I (FLAG'="R") S DOADD=1
"RTN","VPSPTCR",109,0)
 . I DOADD D
"RTN","VPSPTCR",110,0)
 . . S OUT(IDX)=VPSTMP(I)
"RTN","VPSPTCR",111,0)
 . . S $P(OUT(IDX),U)=$P(OUT(IDX),U)_SORT
"RTN","VPSPTCR",112,0)
 . . I SORT="" S OUT(IDX)=$$ADDNAME(OUT(IDX))
"RTN","VPSPTCR",113,0)
 . . S IDX=IDX+1
"RTN","VPSPTCR",114,0)
 M RESULT=OUT
"RTN","VPSPTCR",115,0)
 Q
"RTN","VPSPTCR",116,0)
 ;
"RTN","VPSPTCR",117,0)
REMLIST(RESULT,DIV,SRV,LOC,UCL) ;Returns a list of all cover sheet reminders
"RTN","VPSPTCR",118,0)
 ;Input Parameter(s):
"RTN","VPSPTCR",119,0)
 ; DIV - Division Identifier
"RTN","VPSPTCR",120,0)
 ; SRV - Service Identifier
"RTN","VPSPTCR",121,0)
 ; LOC - Location Identifier
"RTN","VPSPTCR",122,0)
 ; UCL - List of User Classes separated by "^"
"RTN","VPSPTCR",123,0)
 ;Output Parameter(s):
"RTN","VPSPTCR",124,0)
 ; RESULT - Passed by reference, list of cover sheet reminders
"RTN","VPSPTCR",125,0)
 ; 
"RTN","VPSPTCR",126,0)
 N I,J,VPSLST,CODE,IDX,IEN,NEWP,VPSERR
"RTN","VPSPTCR",127,0)
 ;
"RTN","VPSPTCR",128,0)
 D NEWCVOK(.NEWP,DIV,SRV)
"RTN","VPSPTCR",129,0)
 I 'NEWP D GETLST^XPAR(.RESULT,"LOC.`"_+LOC_"^SRV.`"_+SRV_"^DIV.`"_+DIV_"^SYS^PKG","ORQQPX SEARCH ITEMS","Q",.VPSERR) Q
"RTN","VPSPTCR",130,0)
 D REMACCUM(.VPSLST,"PKG","Q",1000)
"RTN","VPSPTCR",131,0)
 D REMACCUM(.VPSLST,"SYS","Q",2000)
"RTN","VPSPTCR",132,0)
 I +DIV D REMACCUM(.VPSLST,"DIV.`"_+DIV,"Q",3000)
"RTN","VPSPTCR",133,0)
 I +SRV D REMACCUM(.VPSLST,"SRV.`"_+SRV,"Q",4000)
"RTN","VPSPTCR",134,0)
 I +LOC D REMACCUM(.VPSLST,"LOC.`"_+LOC,"Q",5000)
"RTN","VPSPTCR",135,0)
 I (UCL]"") D REMACCUM(.VPSLST,"CLASS","Q",6000,UCL)
"RTN","VPSPTCR",136,0)
 S I=0
"RTN","VPSPTCR",137,0)
 F  S I=$O(VPSLST(I)) Q:'I  D
"RTN","VPSPTCR",138,0)
 . S IDX=$P(VPSLST(I),U,1)
"RTN","VPSPTCR",139,0)
 . F  Q:'$D(RESULT(IDX))  S IDX=IDX+1
"RTN","VPSPTCR",140,0)
 . S CODE=$E($P(VPSLST(I),U,2),2)
"RTN","VPSPTCR",141,0)
 . S IEN=$E($P(VPSLST(I),U,2),3,999)
"RTN","VPSPTCR",142,0)
 . I CODE="R" D ADDREM(.RESULT,IDX,IEN)
"RTN","VPSPTCR",143,0)
 . I CODE="C" D ADDCAT(.RESULT,IDX,IEN)
"RTN","VPSPTCR",144,0)
 K RESULT("B")
"RTN","VPSPTCR",145,0)
 Q
"RTN","VPSPTCR",146,0)
 ;
"RTN","VPSPTCR",147,0)
ADDNAME(VPSX) ;Add Reminder or Category Name
"RTN","VPSPTCR",148,0)
 ;Input Parameter(s):
"RTN","VPSPTCR",149,0)
 ; VPSX - Reminder Info
"RTN","VPSPTCR",150,0)
 ;Output Parameter(s):
"RTN","VPSPTCR",151,0)
 ; VPSX - Add name as 3rd piece
"RTN","VPSPTCR",152,0)
 ;
"RTN","VPSPTCR",153,0)
 N CAT,IEN
"RTN","VPSPTCR",154,0)
 S CAT=$E($P(VPSX,U,2),2)
"RTN","VPSPTCR",155,0)
 S IEN=$E($P(VPSX,U,2),3,99)
"RTN","VPSPTCR",156,0)
 I +IEN D
"RTN","VPSPTCR",157,0)
 . I CAT="R" S $P(VPSX,U,3)=$$GET1^DIQ(811.9,IEN_",",1.2,"I") ;Print Name
"RTN","VPSPTCR",158,0)
 . I CAT="C" S $P(VPSX,U,3)=$$GET1^DIQ(811.7,IEN_",",.01,"I") ;Name
"RTN","VPSPTCR",159,0)
 Q VPSX
"RTN","VPSPTCR",160,0)
 ;
"RTN","VPSPTCR",161,0)
ADDREM(RESULT,IDX,IEN) ;Add Reminder to RESULT list, if applicable
"RTN","VPSPTCR",162,0)
 ;Input Parameter(s):
"RTN","VPSPTCR",163,0)
 ; IDX - External Reminder ID
"RTN","VPSPTCR",164,0)
 ; IEN - Internal Reminder ID
"RTN","VPSPTCR",165,0)
 ;Output Parameter(s):
"RTN","VPSPTCR",166,0)
 ; RESULT - Pass by reference, list of reminders
"RTN","VPSPTCR",167,0)
 ;
"RTN","VPSPTCR",168,0)
 Q:$G(IDX)=""
"RTN","VPSPTCR",169,0)
 Q:$G(IEN)=""
"RTN","VPSPTCR",170,0)
 N USAGE
"RTN","VPSPTCR",171,0)
 I $D(RESULT("B",IEN)) Q                    ; See if it's in the list
"RTN","VPSPTCR",172,0)
 I '$$FIND1^DIC(811.9,,,"`"_IEN) Q          ; Check if Exists
"RTN","VPSPTCR",173,0)
 I $$GET1^DIQ(811.9,IEN_",",1.6,"I")'="" Q  ; Check if Active
"RTN","VPSPTCR",174,0)
 ;check to see if the reminder is assigned to CPRS
"RTN","VPSPTCR",175,0)
 S USAGE=$$GET1^DIQ(811.9,IEN_",",103,"I")  ;Usage
"RTN","VPSPTCR",176,0)
 I USAGE["L" Q
"RTN","VPSPTCR",177,0)
 I USAGE'["C",USAGE'="*" Q
"RTN","VPSPTCR",178,0)
 S RESULT(IDX)=IDX_U_IEN
"RTN","VPSPTCR",179,0)
 S RESULT("B",IEN)=""
"RTN","VPSPTCR",180,0)
 Q
"RTN","VPSPTCR",181,0)
 ;
"RTN","VPSPTCR",182,0)
ADDCAT(RESULT,IDX,IEN) ;Add Reminders in a Category Reminder to RESULT list individually
"RTN","VPSPTCR",183,0)
 ;Input Parameter(s):
"RTN","VPSPTCR",184,0)
 ; IDX - External Category Reminder ID
"RTN","VPSPTCR",185,0)
 ; IEN - Internal Category Reminder ID
"RTN","VPSPTCR",186,0)
 ;Output Parameter(s):
"RTN","VPSPTCR",187,0)
 ; RESULT - Pass by reference, list of reminders
"RTN","VPSPTCR",188,0)
 ; 
"RTN","VPSPTCR",189,0)
 Q:$G(IDX)=""
"RTN","VPSPTCR",190,0)
 Q:$G(IEN)=""
"RTN","VPSPTCR",191,0)
 N REM,I,IDX2,NREM
"RTN","VPSPTCR",192,0)
 D CATREM^PXRMAPI0(IEN,.REM)
"RTN","VPSPTCR",193,0)
 S I=0
"RTN","VPSPTCR",194,0)
 F  S I=$O(REM(I)) Q:'I  D
"RTN","VPSPTCR",195,0)
 . S IDX2="00000"_I
"RTN","VPSPTCR",196,0)
 . S IDX2=$E(IDX2,$L(IDX2)-5,99)
"RTN","VPSPTCR",197,0)
 . D ADDREM(.RESULT,+(IDX_"."_IDX2),$P(REM(I),U,1))
"RTN","VPSPTCR",198,0)
 Q
"RTN","VPSPTCR",199,0)
 ;
"RTN","VPSPTCR",200,0)
NEWCVOK(RESULT,DIV,SRV) ; Checks if New or Old style Reminders are used
"RTN","VPSPTCR",201,0)
 ;Input Parameter(s):
"RTN","VPSPTCR",202,0)
 ; DIV - Division Identifier
"RTN","VPSPTCR",203,0)
 ; SRV - Service Identifier
"RTN","VPSPTCR",204,0)
 ;Output Parameter(s):
"RTN","VPSPTCR",205,0)
 ; RESULT - Passed by reference
"RTN","VPSPTCR",206,0)
 ; RESULT = 1 - if new style reminders
"RTN","VPSPTCR",207,0)
 ; RESULT = 0 - if old style reminders
"RTN","VPSPTCR",208,0)
 ; 
"RTN","VPSPTCR",209,0)
 N VPSERR,VPSTMP
"RTN","VPSPTCR",210,0)
 S RESULT=0
"RTN","VPSPTCR",211,0)
 D GETLST^XPAR(.VPSTMP,"SRV.`"_+$G(SRV)_"^DIV.`"_+$G(DIV)_"^SYS^PKG","ORQQPX NEW REMINDER PARAMS","Q",.VPSERR)
"RTN","VPSPTCR",212,0)
 I +VPSTMP S RESULT=$P($G(VPSTMP(1)),U,2)
"RTN","VPSPTCR",213,0)
 Q
"RTN","VPSRLBLS")
0^4^B8243781
"RTN","VPSRLBLS",1,0)
VPSRLBLS ;DALOIFO/GT,SLOIFO/BT - PATIENT LABELS RPC;07/15/14 15:30
"RTN","VPSRLBLS",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Jul 15,2014;Build 27
"RTN","VPSRLBLS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRLBLS",4,0)
 ;
"RTN","VPSRLBLS",5,0)
 ; External Reference DBIA#
"RTN","VPSRLBLS",6,0)
 ; ------------------------
"RTN","VPSRLBLS",7,0)
 ; #10035 - ^DPT( references         (Supported)
"RTN","VPSRLBLS",8,0)
 ; #2119  - OPEN^%ZISUTL, USE^%ZISUTL, CLOSE^%ZISUTL (Supported)
"RTN","VPSRLBLS",9,0)
 ; #5904  - START^DGPLBL call        (Private)
"RTN","VPSRLBLS",10,0)
 ;
"RTN","VPSRLBLS",11,0)
 QUIT
"RTN","VPSRLBLS",12,0)
 ;
"RTN","VPSRLBLS",13,0)
PRINT(VPSRSLT,VPSTYP,VPSNUM,VPSLOC,VPSLBCNT,VPSLPL,VPSIO) ;VPS PRINT PATIENT LABEL
"RTN","VPSRLBLS",14,0)
 ;This RPC provide a patient demographics label that includes Patient Name,SSN, 
"RTN","VPSRLBLS",15,0)
 ;DOB and an optional inpatient location (ward and bed).
"RTN","VPSRLBLS",16,0)
 ;INPUT
"RTN","VPSRLBLS",17,0)
 ;   VPSTYP    Patients ID Type - SSN or DFN OR ICN OR VIC/CAC (REQUIRED) 
"RTN","VPSRLBLS",18,0)
 ;   VPSNUM    Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRLBLS",19,0)
 ;   VPSLOC    include location flag (0 or 1)
"RTN","VPSRLBLS",20,0)
 ;   VPSLBCNT  label count from 1 to 250
"RTN","VPSRLBLS",21,0)
 ;   VPSLPL    lines per label can contain (6-25)
"RTN","VPSRLBLS",22,0)
 ;   VPSIO     output device name
"RTN","VPSRLBLS",23,0)
 ;OUTPUT
"RTN","VPSRLBLS",24,0)
 ;   VPSRSLT   0 (Successful) 
"RTN","VPSRLBLS",25,0)
 ;            -1^Failure Message
"RTN","VPSRLBLS",26,0)
 ;
"RTN","VPSRLBLS",27,0)
 ; -- Get DFN based on Patienr ID Type and Value pair
"RTN","VPSRLBLS",28,0)
 S VPSRSLT=$$GETDFN^VPSPRINT($G(VPSTYP),$G(VPSNUM))
"RTN","VPSRLBLS",29,0)
 QUIT:+VPSRSLT=-1 VPSRSLT
"RTN","VPSRLBLS",30,0)
 N VPSDFN S VPSDFN=VPSRSLT
"RTN","VPSRLBLS",31,0)
 ;
"RTN","VPSRLBLS",32,0)
 ; -- Check Input parameters
"RTN","VPSRLBLS",33,0)
 S VPSRSLT=$$VALIDATE(VPSDFN,$G(VPSLOC),$G(VPSLBCNT),$G(VPSLPL),$G(VPSIO))
"RTN","VPSRLBLS",34,0)
 QUIT:+VPSRSLT=-1
"RTN","VPSRLBLS",35,0)
 ;
"RTN","VPSRLBLS",36,0)
 ; -- Setup handle for output device and open the device.
"RTN","VPSRLBLS",37,0)
 D OPEN^%ZISUTL("PATIENTLABEL",VPSIO)
"RTN","VPSRLBLS",38,0)
 I POP S VPSRSLT=-1_U_"DEVICE IN USE - TRY AGAIN LATER" QUIT
"RTN","VPSRLBLS",39,0)
 ; 
"RTN","VPSRLBLS",40,0)
 ; -- Print Wristband
"RTN","VPSRLBLS",41,0)
 D USE^%ZISUTL("PATIENTLABEL")
"RTN","VPSRLBLS",42,0)
 N $ETRAP,$ESTACK S $ETRAP="D ETRAP^VPSRLBLS QUIT"
"RTN","VPSRLBLS",43,0)
 N DGDFNS S DGDFNS(VPSDFN)=""
"RTN","VPSRLBLS",44,0)
 N DGLOC S DGLOC=VPSLOC
"RTN","VPSRLBLS",45,0)
 N DGLBCNT S DGLBCNT=VPSLBCNT
"RTN","VPSRLBLS",46,0)
 N DGLPL S DGLPL=VPSLPL
"RTN","VPSRLBLS",47,0)
 N VPSSSN S VPSSSN=$P(^DPT(VPSDFN,0),U,9)
"RTN","VPSRLBLS",48,0)
 D START^DGPLBL ; All the DG vars are required
"RTN","VPSRLBLS",49,0)
 ;
"RTN","VPSRLBLS",50,0)
 ; -- close output devcie
"RTN","VPSRLBLS",51,0)
 D CLOSE^%ZISUTL("PATIENTLABEL")
"RTN","VPSRLBLS",52,0)
 ;
"RTN","VPSRLBLS",53,0)
 S VPSRSLT=0
"RTN","VPSRLBLS",54,0)
 QUIT VPSRSLT
"RTN","VPSRLBLS",55,0)
 ;
"RTN","VPSRLBLS",56,0)
VALIDATE(VPSDFN,DGLOC,DGLBCNT,DGLPL,VPSIO) ; Check Input Parameters
"RTN","VPSRLBLS",57,0)
 ;INPUT
"RTN","VPSRLBLS",58,0)
 ;   VPSDFN   Patient DFN (Must be VALID)
"RTN","VPSRLBLS",59,0)
 ;   DGLOC    include location flag (0 or 1)
"RTN","VPSRLBLS",60,0)
 ;   DGLBCNT  label count from 1 to 250
"RTN","VPSRLBLS",61,0)
 ;   DGLPL    lines per label can contain (6-25)
"RTN","VPSRLBLS",62,0)
 ;   VPSIO    output device ien
"RTN","VPSRLBLS",63,0)
 ;RETURN
"RTN","VPSRLBLS",64,0)
 ;   successful : ""
"RTN","VPSRLBLS",65,0)
 ;   failed     : -1^exception message
"RTN","VPSRLBLS",66,0)
 ;
"RTN","VPSRLBLS",67,0)
 ; -- check Include Ward Location input parameter
"RTN","VPSRLBLS",68,0)
 QUIT:$G(DGLOC)="" "-1"_U_"INPUT PARAMETER 'INCLUDE WARD LOCATION FLAG' NOT SENT"
"RTN","VPSRLBLS",69,0)
 QUIT:(DGLOC<0)!(DGLOC>1) "-1"_U_"INVALID VALUE FOR 'INCLUDE WARD LOCATION FLAG'. VALID NUMBER SHOULD BE 0 OR 1"
"RTN","VPSRLBLS",70,0)
 ;
"RTN","VPSRLBLS",71,0)
 ; -- check label count
"RTN","VPSRLBLS",72,0)
 QUIT:$G(DGLBCNT)="" "-1"_U_"INPUT PARAMETER 'LABEL COUNT' NOT SENT"
"RTN","VPSRLBLS",73,0)
 QUIT:(DGLBCNT<1)!(DGLBCNT>250) "-1"_U_"INVALID VALUE FOR 'LABEL COUNT'. VALID NUMBER IS BETWEEN 1 to 250"
"RTN","VPSRLBLS",74,0)
 ;
"RTN","VPSRLBLS",75,0)
 ; -- check number of lines/label
"RTN","VPSRLBLS",76,0)
 QUIT:$G(DGLPL)="" "-1"_U_"INPUT PARAMETER 'LINES/LABEL' NOT SENT"
"RTN","VPSRLBLS",77,0)
 QUIT:(DGLPL<6)!(DGLPL>25) "-1"_U_"INVALID VALUE FOR 'LINES/LABEL'. VALID NUMBER IS BETWEEN 6 to 25"
"RTN","VPSRLBLS",78,0)
 ;
"RTN","VPSRLBLS",79,0)
 ; -- check device
"RTN","VPSRLBLS",80,0)
 N MSG S MSG=$$DEVEXIST^VPSPRINT($G(VPSIO))
"RTN","VPSRLBLS",81,0)
 QUIT:+MSG=-1 MSG
"RTN","VPSRLBLS",82,0)
 ;
"RTN","VPSRLBLS",83,0)
 QUIT ""
"RTN","VPSRLBLS",84,0)
 ;
"RTN","VPSRLBLS",85,0)
ETRAP ; ERROR TRAP during printing patient label
"RTN","VPSRLBLS",86,0)
 S VPSRSLT="-1^"_$$EC^%ZOSV
"RTN","VPSRLBLS",87,0)
 D CLOSE^%ZISUTL("PATIENTLABEL")
"RTN","VPSRLBLS",88,0)
 QUIT
"RTN","VPSRPC1")
0^13^B24609733
"RTN","VPSRPC1",1,0)
VPSRPC1  ;BPOIFO/EL,WOIFO/BT - Patient Demographic and Clinic RPC;08/14/14 09:28
"RTN","VPSRPC1",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**1,2,4**;Aug 8, 2014;Build 27
"RTN","VPSRPC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC1",4,0)
 ;
"RTN","VPSRPC1",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC1",6,0)
 ; ------------------------
"RTN","VPSRPC1",7,0)
 ; #10035 - ^DPT( references      (Supported)
"RTN","VPSRPC1",8,0)
 ; #10040 - ^SC( references       (Supported)
"RTN","VPSRPC1",9,0)
 ; #2052  - DID call              (Supported)
"RTN","VPSRPC1",10,0)
 ; #2056  - DIQ call              (Supported)
"RTN","VPSRPC1",11,0)
 ; #2701  - MPIF001 call          (Supported)
"RTN","VPSRPC1",12,0)
 ; #10104 - XLFSTR call           (Supported)
"RTN","VPSRPC1",13,0)
 ; #5888  - RPCVIC^DPTLK          (Controlled Sub)
"RTN","VPSRPC1",14,0)
 QUIT
"RTN","VPSRPC1",15,0)
 ;
"RTN","VPSRPC1",16,0)
GETCLN(VPSARR,CLNAM) ; RPC: VPS GET CLINIC - CLINIC NAME ENTRY
"RTN","VPSRPC1",17,0)
 ; Called by Vetlink Kiosk system.     
"RTN","VPSRPC1",18,0)
 ; The RPC will accept 2 parameters.  The first parameter represents the 
"RTN","VPSRPC1",19,0)
 ; return value as required by RPC Broker, and the 2nd parameter is
"RTN","VPSRPC1",20,0)
 ; single input value representing the name of the clinic (full or partial 
"RTN","VPSRPC1",21,0)
 ; name).  The output produced will be an array that returns all the 
"RTN","VPSRPC1",22,0)
 ; possible matches for the clinic (one to many clinics).  Values returned 
"RTN","VPSRPC1",23,0)
 ; will be the name of the clinic and the ien of the clinic.
"RTN","VPSRPC1",24,0)
 ;
"RTN","VPSRPC1",25,0)
 ; OUTPUT
"RTN","VPSRPC1",26,0)
 ;   VPSARR - passed in by reference; return array of clinics that **contains** input string (CLNAM)
"RTN","VPSRPC1",27,0)
 ; INPUT
"RTN","VPSRPC1",28,0)
 ;   CLNAM  - partial or full name of clinic; 
"RTN","VPSRPC1",29,0)
 ;
"RTN","VPSRPC1",30,0)
 K VPSARR
"RTN","VPSRPC1",31,0)
 I $G(CLNAM)="" S VPSARR(1)="-1^CLINIC NAME NOT SENT" QUIT
"RTN","VPSRPC1",32,0)
 ;
"RTN","VPSRPC1",33,0)
 N VPSCLN,VPSIEN,LOCATION
"RTN","VPSRPC1",34,0)
 N VPSUPNAM S VPSUPNAM=$$UP^XLFSTR(CLNAM)
"RTN","VPSRPC1",35,0)
 N VPSCNAM S VPSCNAM=""
"RTN","VPSRPC1",36,0)
 N VPSFL S VPSFL=44
"RTN","VPSRPC1",37,0)
 ;
"RTN","VPSRPC1",38,0)
 F  S VPSCNAM=$O(^SC("B",VPSCNAM)) QUIT:$G(VPSCNAM)=""  I VPSCNAM[VPSUPNAM D
"RTN","VPSRPC1",39,0)
 . S VPSCLN=""
"RTN","VPSRPC1",40,0)
 . F   S VPSCLN=$O(^SC("B",VPSCNAM,VPSCLN)) QUIT:$G(VPSCLN)=""  D
"RTN","VPSRPC1",41,0)
 . . S VPSIEN=VPSCLN
"RTN","VPSRPC1",42,0)
 . . D SET(.VPSARR,VPSFL,VPSIEN,".001",VPSCLN,"CLINIC NUMBER") ;Clinic IEN
"RTN","VPSRPC1",43,0)
 . . D SET(.VPSARR,VPSFL,VPSIEN,".01",VPSCNAM) ;Clinic Name
"RTN","VPSRPC1",44,0)
 . . S LOCATION=$$GET1^DIQ(VPSFL,VPSCLN_",",10,"E") ;Physical Location
"RTN","VPSRPC1",45,0)
 . . D SET(.VPSARR,VPSFL,VPSIEN,10,LOCATION)
"RTN","VPSRPC1",46,0)
 ;
"RTN","VPSRPC1",47,0)
 I '$D(VPSARR) S VPSARR(1)="-1^CLINIC COULD NOT BE FOUND." QUIT
"RTN","VPSRPC1",48,0)
 ;
"RTN","VPSRPC1",49,0)
 QUIT
"RTN","VPSRPC1",50,0)
 ;
"RTN","VPSRPC1",51,0)
GETDATA(VPSARR,SSN) ; RPC: VPS GET PATIENT DEMOGRAPHIC
"RTN","VPSRPC1",52,0)
 ; This RPC is called  by the Vetlink Kiosk (point of service) system.  
"RTN","VPSRPC1",53,0)
 ; Given Patient SSN, this RPC returns the patient demographics,insurance,and up-coming appointments, etc.
"RTN","VPSRPC1",54,0)
 ;
"RTN","VPSRPC1",55,0)
 ; INPUT
"RTN","VPSRPC1",56,0)
 ;   SSN    - patient SSN 
"RTN","VPSRPC1",57,0)
 ; OUTPUT
"RTN","VPSRPC1",58,0)
 ;   VPSARR - passed in by reference; return array of patient demographics
"RTN","VPSRPC1",59,0)
 ;
"RTN","VPSRPC1",60,0)
 D GETDATA2(.VPSARR,$G(SSN),"SSN")
"RTN","VPSRPC1",61,0)
 QUIT
"RTN","VPSRPC1",62,0)
 ;
"RTN","VPSRPC1",63,0)
GETDATA2(VPSARR,VPSNUM,VPSTYP) ; RPC: VPS GET2 PATIENT DEMOGRAPHIC
"RTN","VPSRPC1",64,0)
 ; This RPC is called  by the Vetlink Kiosk (point of service) system.  
"RTN","VPSRPC1",65,0)
 ; Given Patient SSN or DFN or ICN or VIC/CAC, this RPC returns the patient demographics,insurance,and up-coming appointments, etc.
"RTN","VPSRPC1",66,0)
 ;
"RTN","VPSRPC1",67,0)
 ; OUTPUT
"RTN","VPSRPC1",68,0)
 ;   VPSARR  - passed in by reference; return array of patient demographics,appts
"RTN","VPSRPC1",69,0)
 ; INPUT
"RTN","VPSRPC1",70,0)
 ;   VPSNUM  - Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",71,0)
 ;   VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",72,0)
 ;
"RTN","VPSRPC1",73,0)
 ; Return all categories
"RTN","VPSRPC1",74,0)
 N CATEGORY,ICAT F ICAT=1:1:6 S CATEGORY(ICAT)=ICAT
"RTN","VPSRPC1",75,0)
 D GETDATA3(.VPSARR,$G(VPSNUM),$G(VPSTYP),.CATEGORY) ; RPC: VPS GET2 PATIENT DEMOGRAPHIC
"RTN","VPSRPC1",76,0)
 QUIT
"RTN","VPSRPC1",77,0)
 ;
"RTN","VPSRPC1",78,0)
GETDATA3(VPSARR,VPSNUM,VPSTYP,VPSCAT) ; RPC: VPS ENHANCED GET PATIENT DEMOGRAPHIC
"RTN","VPSRPC1",79,0)
 ; This RPC is called  by the Vetlink Kiosk (point of service) system.  
"RTN","VPSRPC1",80,0)
 ; Given Patient SSN or DFN or ICN or VIC/CAC, this RPC returns the patient demographics,insurance,and up-coming appointments, etc
"RTN","VPSRPC1",81,0)
 ; for selected categories
"RTN","VPSRPC1",82,0)
 ;
"RTN","VPSRPC1",83,0)
 ; OUTPUT
"RTN","VPSRPC1",84,0)
 ;   VPSARR  - passed in by reference; return array of patient demographics,appts
"RTN","VPSRPC1",85,0)
 ; INPUT
"RTN","VPSRPC1",86,0)
 ;   VPSNUM  - Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",87,0)
 ;   VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",88,0)
 ;   VPSCAT  - List of Category to print (REQUIRED)
"RTN","VPSRPC1",89,0)
 ;             VPSCAT(1..N)=CATEGORY;FROMDATE:THROUGHDATE
"RTN","VPSRPC1",90,0)
 ;             Example input parameter : 
"RTN","VPSRPC1",91,0)
 ;                 VPSCAT(1)=6                 - Patient demographics
"RTN","VPSRPC1",92,0)
 ;                 VPSCAT(2)=1;3140101:3141231 - Appointments start from 1/1/2014 through 12/31/2014
"RTN","VPSRPC1",93,0)
 ;                 VPSCAT(3)=2;3140601:3140630 - Lab Orders start from 6/1/2014 through 6/30/2014
"RTN","VPSRPC1",94,0)
 ;             Valid Category:
"RTN","VPSRPC1",95,0)
 ;                 1 - Appointment (With Date Range option)
"RTN","VPSRPC1",96,0)
 ;                 2 - Lab Orders (With Date Range option)
"RTN","VPSRPC1",97,0)
 ;                 3 - Consults
"RTN","VPSRPC1",98,0)
 ;                 4 - Radiology (With Date Range option)
"RTN","VPSRPC1",99,0)
 ;                 5 - Problem
"RTN","VPSRPC1",100,0)
 ;                 6 - Patient demographics
"RTN","VPSRPC1",101,0)
 ;
"RTN","VPSRPC1",102,0)
 K VPSARR
"RTN","VPSRPC1",103,0)
 S VPSARR(1)=$$VALIDATE($G(VPSTYP),$G(VPSNUM))
"RTN","VPSRPC1",104,0)
 QUIT:+VPSARR(1)=-1
"RTN","VPSRPC1",105,0)
 ;
"RTN","VPSRPC1",106,0)
 N DFN S DFN=VPSARR(1)
"RTN","VPSRPC1",107,0)
 K VPSARR
"RTN","VPSRPC1",108,0)
 N CAT,DTRANGE,SEQ S SEQ=0
"RTN","VPSRPC1",109,0)
 ;
"RTN","VPSRPC1",110,0)
 F  S SEQ=$O(VPSCAT(SEQ)) QUIT:'SEQ  D
"RTN","VPSRPC1",111,0)
 . S CAT=$P(VPSCAT(SEQ),";")
"RTN","VPSRPC1",112,0)
 . S DTRANGE=$P(VPSCAT(SEQ),";",2)
"RTN","VPSRPC1",113,0)
 . I CAT=1 D GETAPPT^VPSRPC11(.VPSARR,DFN,DTRANGE) ;Appointments
"RTN","VPSRPC1",114,0)
 . I CAT=2 D GETLAB^VPSRPC12(.VPSARR,DFN,DTRANGE) ;Lab Orders
"RTN","VPSRPC1",115,0)
 . I CAT=3 D GETCNSLT^VPSRPC13(.VPSARR,DFN) ;Consult
"RTN","VPSRPC1",116,0)
 . I CAT=4 D GETRAD^VPSRPC14(.VPSARR,DFN,DTRANGE) ;Radiology
"RTN","VPSRPC1",117,0)
 . I CAT=5 D GETPRBLM^VPSRPC15(.VPSARR,DFN) ;Problem
"RTN","VPSRPC1",118,0)
 . I CAT=6 D GETDEM^VPSRPC16(.VPSARR,DFN) ;Demographics
"RTN","VPSRPC1",119,0)
 QUIT
"RTN","VPSRPC1",120,0)
 ;
"RTN","VPSRPC1",121,0)
VALIDATE(VPSTYP,VPSNUM) ;validate patient-id type and patient id value
"RTN","VPSRPC1",122,0)
 ; INPUT
"RTN","VPSRPC1",123,0)
 ;   VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",124,0)
 ;   VPSNUM  - Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSRPC1",125,0)
 ; RETURN
"RTN","VPSRPC1",126,0)
 ;   DFN if patient-type/id pair is valid otherwise return -1^Errormessage 
"RTN","VPSRPC1",127,0)
 ;
"RTN","VPSRPC1",128,0)
 N CM S CM=","
"RTN","VPSRPC1",129,0)
 ;
"RTN","VPSRPC1",130,0)
 QUIT:$G(VPSTYP)="" "-1^TYPE IS REQUIRED (VALID TYPE: SSN, DFN, ICN OR VIC/CAC)"
"RTN","VPSRPC1",131,0)
 QUIT:'$F(",SSN,DFN,ICN,VIC/CAC,",CM_VPSTYP_CM) "-1^INVALID TYPE (VALID TYPE: SSN, DFN, ICN OR VIC/CAC)"
"RTN","VPSRPC1",132,0)
 QUIT:$G(VPSNUM)="" "-1^"_VPSTYP_" IS REQUIRED"
"RTN","VPSRPC1",133,0)
 ; 
"RTN","VPSRPC1",134,0)
 N DFN S DFN=0
"RTN","VPSRPC1",135,0)
 ;
"RTN","VPSRPC1",136,0)
 I VPSTYP="SSN" D
"RTN","VPSRPC1",137,0)
 . N SSN S SSN=$TR(VPSNUM,"- ")
"RTN","VPSRPC1",138,0)
 . I SSN'?1.N S DFN="-1"_U_"SSN SHOULD BE NUMERIC: "_VPSNUM QUIT
"RTN","VPSRPC1",139,0)
 . S DFN=$O(^DPT("SSN",SSN,0))
"RTN","VPSRPC1",140,0)
 . I +DFN'>0 S DFN="-1"_U_"NO PATIENT FOUND WITH SSN: "_VPSNUM
"RTN","VPSRPC1",141,0)
 QUIT:DFN DFN
"RTN","VPSRPC1",142,0)
 ;
"RTN","VPSRPC1",143,0)
 I VPSTYP="DFN" D
"RTN","VPSRPC1",144,0)
 . S DFN=VPSNUM
"RTN","VPSRPC1",145,0)
 . I '$D(^DPT(DFN)) S DFN="-1"_U_"NO PATIENT FOUND WITH DFN: "_DFN
"RTN","VPSRPC1",146,0)
 QUIT:DFN DFN
"RTN","VPSRPC1",147,0)
 ;
"RTN","VPSRPC1",148,0)
 I VPSTYP="VIC/CAC" D
"RTN","VPSRPC1",149,0)
 . D RPCVIC^DPTLK(.DFN,VPSNUM) ; get DFN given VIC/CAC number - IA 5888
"RTN","VPSRPC1",150,0)
 . S:DFN=-1 DFN="-1^INVALID VIC/CAC NUMBER "_VPSNUM
"RTN","VPSRPC1",151,0)
 QUIT:DFN DFN
"RTN","VPSRPC1",152,0)
 ;
"RTN","VPSRPC1",153,0)
 I VPSTYP="ICN" D
"RTN","VPSRPC1",154,0)
 . S DFN=$$GETDFN^MPIF001(VPSNUM) ; get DFN given ICN in the Patient file  - IA 2701
"RTN","VPSRPC1",155,0)
 ;
"RTN","VPSRPC1",156,0)
 QUIT DFN
"RTN","VPSRPC1",157,0)
 ;
"RTN","VPSRPC1",158,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS,VPSCAT) ;Set line item to output array
"RTN","VPSRPC1",159,0)
 ; OUTPUT
"RTN","VPSRPC1",160,0)
 ;   VPSARR - passed in by reference; This is the Array of clinics contains the line item
"RTN","VPSRPC1",161,0)
 ; INPUT
"RTN","VPSRPC1",162,0)
 ;   VPSFL  - File Number
"RTN","VPSRPC1",163,0)
 ;   VPSIEN - File IEN
"RTN","VPSRPC1",164,0)
 ;   VPSFLD - File Field Number
"RTN","VPSRPC1",165,0)
 ;   VPSDA  - Field Value
"RTN","VPSRPC1",166,0)
 ;   VPSDS  - (optional) User defined Field Name - default is the Fileman fieldname
"RTN","VPSRPC1",167,0)
 ;   VPSCAT - Category: 1 - Appointment, 2 - Lab Orders, 3 - Consults, 4 - Radiology, 5 - Problem, 6 - Patient demographics
"RTN","VPSRPC1",168,0)
 ;
"RTN","VPSRPC1",169,0)
 N CNT S CNT=$O(VPSARR(""),-1)+1
"RTN","VPSRPC1",170,0)
 I $G(VPSDS)="",$G(VPSFL),$G(VPSFLD) N VPSOUT D FIELD^DID(VPSFL,VPSFLD,"","LABEL","VPSOUT") S VPSDS=VPSOUT("LABEL")
"RTN","VPSRPC1",171,0)
 S VPSARR(CNT)=$G(VPSFL)_U_$G(VPSIEN)_U_$G(VPSFLD)_U_$G(VPSDA)_U_$G(VPSDS)_U_$G(VPSCAT)
"RTN","VPSRPC1",172,0)
 QUIT
"RTN","VPSRPC10")
0^20^B15952235
"RTN","VPSRPC10",1,0)
VPSRPC10  ;WOIFO/BT - Patient Demographic and Clinic RPC;08/14/14 09:28
"RTN","VPSRPC10",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Aug 8, 2014;Build 27
"RTN","VPSRPC10",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC10",4,0)
 ;
"RTN","VPSRPC10",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC10",6,0)
 ; ------------------------
"RTN","VPSRPC10",7,0)
 ; #1246  - WIN^DGPMDDCF              (supported)
"RTN","VPSRPC10",8,0)
 ; #1713  - LIST^DIC                  (Supported)
"RTN","VPSRPC10",9,0)
 ; #10040 - File #44 ^SC( references  (Supported)
"RTN","VPSRPC10",10,0)
 ; #10104 - XLFSTR call               (Supported)
"RTN","VPSRPC10",11,0)
 QUIT
"RTN","VPSRPC10",12,0)
 ;
"RTN","VPSRPC10",13,0)
ALLCLN(RESULTS,HLTYPES,DIVIEN,PART,FLAGS,NUMBER,FROM) ;RPC: VPS GET ALL CLINICS
"RTN","VPSRPC10",14,0)
 ;***** RETURNS THE LIST OF HOSPITAL LOCATIONS
"RTN","VPSRPC10",15,0)
 ;
"RTN","VPSRPC10",16,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","VPSRPC10",17,0)
 ;               are returned to.
"RTN","VPSRPC10",18,0)
 ;
"RTN","VPSRPC10",19,0)
 ; [HLTYPES]     List of location types separated by commas (internal
"RTN","VPSRPC10",20,0)
 ;               values of the TYPE field of the HOSPITAL LOCATION
"RTN","VPSRPC10",21,0)
 ;               file). Only locations of the types defined by this
"RTN","VPSRPC10",22,0)
 ;               parameter are selected by the procedure. By default
"RTN","VPSRPC10",23,0)
 ;               ($G(HLTYPES)=""), all locations are selected.
"RTN","VPSRPC10",24,0)
 ;
"RTN","VPSRPC10",25,0)
 ; [DIVIEN]      Division IEN. If this parameter is defined and
"RTN","VPSRPC10",26,0)
 ;               greater than zero then only the locations associated 
"RTN","VPSRPC10",27,0)
 ;               with this division will be selected.
"RTN","VPSRPC10",28,0)
 ;
"RTN","VPSRPC10",29,0)
 ; [PART]        The partial match restriction.
"RTN","VPSRPC10",30,0)
 ;
"RTN","VPSRPC10",31,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","VPSRPC10",32,0)
 ;                 A  Include active locations (default)
"RTN","VPSRPC10",33,0)
 ;                 B  Backwards. Traverses the index in the opposite
"RTN","VPSRPC10",34,0)
 ;                    direction of normal traversal.
"RTN","VPSRPC10",35,0)
 ;                 I  Include inactive locations
"RTN","VPSRPC10",36,0)
 ;
"RTN","VPSRPC10",37,0)
 ; [NUMBER]      Maximum number of entries to return. A value of "*"
"RTN","VPSRPC10",38,0)
 ;               or no value in this parameter designates all entries.
"RTN","VPSRPC10",39,0)
 ;
"RTN","VPSRPC10",40,0)
 ; [FROM]        The index entry(s) from which to begin the list
"RTN","VPSRPC10",41,0)
 ;                 ^01: FromName
"RTN","VPSRPC10",42,0)
 ;                 ^02: FromIEN
"RTN","VPSRPC10",43,0)
 ;
"RTN","VPSRPC10",44,0)
 ;               For example, a FROM value of "VA" would list entries
"RTN","VPSRPC10",45,0)
 ;               following VA. You can use the 2-nd and 3-rd "^"-
"RTN","VPSRPC10",46,0)
 ;               pieces of the @RESULTS@(0) node to continue the
"RTN","VPSRPC10",47,0)
 ;               listing in the subsequent procedure calls.
"RTN","VPSRPC10",48,0)
 ;
"RTN","VPSRPC10",49,0)
 ;               NOTE: The FROM value itself is not included in
"RTN","VPSRPC10",50,0)
 ;                     the resulting list.
"RTN","VPSRPC10",51,0)
 ;
"RTN","VPSRPC10",52,0)
 ; The ^TMP("DILIST",$J) global node is used by the procedure.
"RTN","VPSRPC10",53,0)
 ;
"RTN","VPSRPC10",54,0)
 ; See description of the LIST^DIC for more details about the
"RTN","VPSRPC10",55,0)
 ; PART, NUMBER and FROM parameters.
"RTN","VPSRPC10",56,0)
 ;
"RTN","VPSRPC10",57,0)
 ; Return Values:
"RTN","VPSRPC10",58,0)
 ; =============
"RTN","VPSRPC10",59,0)
 ; A negative value of the first "^"-piece of the @RESULTS@(0) indicates an error 
"RTN","VPSRPC10",60,0)
 ; Otherwise, number of hospital locations and the value of the
"RTN","VPSRPC10",61,0)
 ; FROM parameter for the next procedure call are returned in
"RTN","VPSRPC10",62,0)
 ; the @RESULTS@(0) and the subsequent nodes of the global array
"RTN","VPSRPC10",63,0)
 ; contain the locations.
"RTN","VPSRPC10",64,0)
 ; 
"RTN","VPSRPC10",65,0)
 ; @RESULTS@(0)    Error Result Descriptor
"RTN","VPSRPC10",66,0)
 ;                         ^01: -1
"RTN","VPSRPC10",67,0)
 ;                         ^02: Error Message
"RTN","VPSRPC10",68,0)
 ;
"RTN","VPSRPC10",69,0)
 ; @RESULTS@(0)          Result Descriptor
"RTN","VPSRPC10",70,0)
 ;                         ^01: Number of locations
"RTN","VPSRPC10",71,0)
 ;                         ^02: FromName
"RTN","VPSRPC10",72,0)
 ;                         ^03: FromIEN
"RTN","VPSRPC10",73,0)
 ;
"RTN","VPSRPC10",74,0)
 ; @RESULTS@(i)          Hospital Location
"RTN","VPSRPC10",75,0)
 ;                         ^01: IEN
"RTN","VPSRPC10",76,0)
 ;                         ^02: Name
"RTN","VPSRPC10",77,0)
 ;                         ^03: Type (internal)
"RTN","VPSRPC10",78,0)
 ;                         ^04: Institution IEN
"RTN","VPSRPC10",79,0)
 ;                         ^05: Division IEN
"RTN","VPSRPC10",80,0)
 ;                         ^06: Active (0/1)
"RTN","VPSRPC10",81,0)
 ;
"RTN","VPSRPC10",82,0)
 ; NOTE: The 6th "^"-piece of the location record (Active) is
"RTN","VPSRPC10",83,0)
 ;       populated only if both "A" and "I" flags are used.
"RTN","VPSRPC10",84,0)
 ;
"RTN","VPSRPC10",85,0)
 S RESULTS=$NA(^TMP("DILIST",$J)) K ^TMP("DILIST",$J)
"RTN","VPSRPC10",86,0)
 ;
"RTN","VPSRPC10",87,0)
 ;--- Check the parameters
"RTN","VPSRPC10",88,0)
 S HLTYPES=$$UP^XLFSTR($TR($G(HLTYPES)," "))
"RTN","VPSRPC10",89,0)
 N HLT,HLTYPE F I=1:1 S HLTYPE=$P(HLTYPES,",",I) QUIT:HLTYPE=""  S HLT(HLTYPE)=""
"RTN","VPSRPC10",90,0)
 S DIVIEN=$S($G(DIVIEN)>0:+DIVIEN,1:0)
"RTN","VPSRPC10",91,0)
 S PART=$G(PART)
"RTN","VPSRPC10",92,0)
 S FLAGS=$G(FLAGS)
"RTN","VPSRPC10",93,0)
 S NUMBER=$S($G(NUMBER)>0:+NUMBER,1:"*")
"RTN","VPSRPC10",94,0)
 ;--- If neither "A" nor "I" flag is provided, add the "A" (default)
"RTN","VPSRPC10",95,0)
 S:FLAGS="B"!(FLAGS="") FLAGS=FLAGS_"A"
"RTN","VPSRPC10",96,0)
 ;--- Setup the start point
"RTN","VPSRPC10",97,0)
 I $G(FROM)'="" D
"RTN","VPSRPC10",98,0)
 . S:$P(FROM,U,2)>0 FROM("IEN")=+$P(FROM,U,2)
"RTN","VPSRPC10",99,0)
 . S FROM=$P(FROM,U)
"RTN","VPSRPC10",100,0)
 ;
"RTN","VPSRPC10",101,0)
 ;--- Compile the screen logic (be careful with naked references)
"RTN","VPSRPC10",102,0)
 N SCR S SCR=""
"RTN","VPSRPC10",103,0)
 I $D(HLT)>1 S SCR=SCR_"S D=$P($G(^(0)),U,3) I D'="""",$D(HLT(D)) "
"RTN","VPSRPC10",104,0)
 S:DIVIEN SCR=SCR_"I $P($G(^(0)),U,15)=DIVIEN "
"RTN","VPSRPC10",105,0)
 S:FLAGS'["A" SCR=SCR_"I '$$ACTLOC^VPSRPC10(+Y) "
"RTN","VPSRPC10",106,0)
 S:FLAGS'["I" SCR=SCR_"I $$ACTLOC^VPSRPC10(+Y) "
"RTN","VPSRPC10",107,0)
 ;
"RTN","VPSRPC10",108,0)
 ;--- Get the list of locations
"RTN","VPSRPC10",109,0)
 N BUF S BUF="@;.01;2I;3I;3.5I"
"RTN","VPSRPC10",110,0)
 N ORDER S ORDER="P"_$S(FLAGS["B":"B",1:"")
"RTN","VPSRPC10",111,0)
 N VPSERR D LIST^DIC(44,,BUF,ORDER,NUMBER,.FROM,PART,"B",SCR,,,"VPSERR")
"RTN","VPSRPC10",112,0)
 I $G(DIERR) K ^TMP("DILIST",$J) S @RESULTS@(0)=-1_U_$$ERROR(.VPSERR) QUIT
"RTN","VPSRPC10",113,0)
 ; 
"RTN","VPSRPC10",114,0)
 ;--- Populate the Active field if both flags are used
"RTN","VPSRPC10",115,0)
 I FLAGS["I",FLAGS["A" D
"RTN","VPSRPC10",116,0)
 . N SEQ S SEQ=0
"RTN","VPSRPC10",117,0)
 . F  S SEQ=$O(@RESULTS@(SEQ)) QUIT:SEQ=""  D
"RTN","VPSRPC10",118,0)
 . . S $P(@RESULTS@(SEQ,0),U,6)=$$ACTLOC(+@RESULTS@(SEQ,0))
"RTN","VPSRPC10",119,0)
 ;
"RTN","VPSRPC10",120,0)
 ;--- Success
"RTN","VPSRPC10",121,0)
 N TMP S TMP=$G(^TMP("DILIST",$J,0))
"RTN","VPSRPC10",122,0)
 S BUF=+$P(TMP,U)
"RTN","VPSRPC10",123,0)
 S:$P(TMP,U,3) $P(BUF,U,2,3)=$G(FROM)_U_$G(FROM("IEN"))
"RTN","VPSRPC10",124,0)
 K ^TMP("DILIST",$J,0) S @RESULTS@(0)=BUF
"RTN","VPSRPC10",125,0)
 QUIT
"RTN","VPSRPC10",126,0)
 ;
"RTN","VPSRPC10",127,0)
ACTLOC(LOCIEN) ;***** CHECKS IF THE HOSPITAL LOCATION IS ACTIVE
"RTN","VPSRPC10",128,0)
 ; LOCIEN : IEN of the hospital location
"RTN","VPSRPC10",129,0)
 QUIT:$G(^SC(LOCIEN,"OOS")) 0  ; An OOS entry
"RTN","VPSRPC10",130,0)
 ; 
"RTN","VPSRPC10",131,0)
 N D0 S D0=+$G(^SC(LOCIEN,42))
"RTN","VPSRPC10",132,0)
 N DGPMOS ; today - used in WIN^DGPMDDCF
"RTN","VPSRPC10",133,0)
 N X I D0>0 D WIN^DGPMDDCF QUIT 'X ; Check if ward is inactive
"RTN","VPSRPC10",134,0)
 N IADT S IADT=$G(^SC(LOCIEN,"I")) QUIT:'$P(IADT,U) 1 ; No inactivation date
"RTN","VPSRPC10",135,0)
 N RDT S RDT=+$P(IADT,U,2) ; reactivate date
"RTN","VPSRPC10",136,0)
 I DT>$P(IADT,U) QUIT:'RDT!(DT<RDT) 0 ; Check reactivation date 
"RTN","VPSRPC10",137,0)
 QUIT 1
"RTN","VPSRPC10",138,0)
 ;
"RTN","VPSRPC10",139,0)
ERROR(FDAERR) ;return error text
"RTN","VPSRPC10",140,0)
 QUIT:'$D(FDAERR) ""
"RTN","VPSRPC10",141,0)
 N ERRNUM S ERRNUM=0
"RTN","VPSRPC10",142,0)
 S ERRNUM=$O(FDAERR("DIERR",ERRNUM))
"RTN","VPSRPC10",143,0)
 N ERRTXT S ERRTXT=""
"RTN","VPSRPC10",144,0)
 S:ERRNUM ERRTXT=FDAERR("DIERR",ERRNUM,"TEXT",1)
"RTN","VPSRPC10",145,0)
 QUIT ERRTXT
"RTN","VPSRPC11")
0^14^B16439585
"RTN","VPSRPC11",1,0)
VPSRPC11  ;BPOIFO/EL,WOIFO/BT - Patient Demographic RPC - Appointment;9/4/14 13:07
"RTN","VPSRPC11",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Sep 4, 2014;Build 27
"RTN","VPSRPC11",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC11",4,0)
 ;
"RTN","VPSRPC11",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC11",6,0)
 ; ------------------------
"RTN","VPSRPC11",7,0)
 ; #2056 - DIQ call               (Supported)
"RTN","VPSRPC11",8,0)
 ; #4433 - SDAMA301 call          (Supported)
"RTN","VPSRPC11",9,0)
 ; #10103 - XLFDT call            (Supported)
"RTN","VPSRPC11",10,0)
 ; #10104 - XLFSTR call           (Supported)
"RTN","VPSRPC11",11,0)
 QUIT
"RTN","VPSRPC11",12,0)
 ;
"RTN","VPSRPC11",13,0)
GETAPPT(VPSARR,DFN,DTRANGE) ;  Appointment Info
"RTN","VPSRPC11",14,0)
 ; OUTPUT
"RTN","VPSRPC11",15,0)
 ;   VPSARR   - passed in by reference; this is the output array to store patient demographics
"RTN","VPSRPC11",16,0)
 ; INPUT
"RTN","VPSRPC11",17,0)
 ;   DFN      - patient DFN (This value must be validated before calling this procedure)
"RTN","VPSRPC11",18,0)
 ;   DTRANGE  - FROMDATE:THROUGH DATE
"RTN","VPSRPC11",19,0)
 ;
"RTN","VPSRPC11",20,0)
 N TODAY S TODAY=$$DT^XLFDT()
"RTN","VPSRPC11",21,0)
 N VPSFR S VPSFR=$P(DTRANGE,":")
"RTN","VPSRPC11",22,0)
 N VPSTO S VPSTO=$P(DTRANGE,":",2)
"RTN","VPSRPC11",23,0)
 S:VPSFR="" VPSFR=TODAY
"RTN","VPSRPC11",24,0)
 S:VPSTO="" VPSTO=TODAY+20000
"RTN","VPSRPC11",25,0)
 ;
"RTN","VPSRPC11",26,0)
 ; -- Set filter
"RTN","VPSRPC11",27,0)
 N VPSSD
"RTN","VPSRPC11",28,0)
 S VPSSD(1)=VPSFR_":"_VPSTO
"RTN","VPSRPC11",29,0)
 S VPSSD(3)="R;I;NS;NSR;R;CP;CPR;CC;CCR;NT"
"RTN","VPSRPC11",30,0)
 S VPSSD(4)=DFN
"RTN","VPSRPC11",31,0)
 S VPSSD("FLDS")="1;2;3;10;16;19;20;21;22"
"RTN","VPSRPC11",32,0)
 ;
"RTN","VPSRPC11",33,0)
 ; -- get appointments
"RTN","VPSRPC11",34,0)
 K ^TMP($J,"SDAMA301",DFN)
"RTN","VPSRPC11",35,0)
 N VAL S VAL=$$SDAPI^SDAMA301(.VPSSD)
"RTN","VPSRPC11",36,0)
 I VAL'>0 D SET(.VPSARR,"E",DFN,"","NO APPOINTMENTS FOUND FOR PATIENT","APPOINTMENT NOT FOUND") QUIT
"RTN","VPSRPC11",37,0)
 ; 
"RTN","VPSRPC11",38,0)
 N VPSCL,VPSDT S (VPSCL,VPSDT)=""
"RTN","VPSRPC11",39,0)
 N EXIST S EXIST=0
"RTN","VPSRPC11",40,0)
 ;
"RTN","VPSRPC11",41,0)
 F  S VPSCL=$O(^TMP($J,"SDAMA301",DFN,VPSCL)) QUIT:VPSCL=""  D
"RTN","VPSRPC11",42,0)
 . S VPSDT=""
"RTN","VPSRPC11",43,0)
 . F  S VPSDT=$O(^TMP($J,"SDAMA301",DFN,VPSCL,VPSDT)) QUIT:VPSDT=""  D
"RTN","VPSRPC11",44,0)
 . . S VPSAPT=^TMP($J,"SDAMA301",DFN,VPSCL,VPSDT)
"RTN","VPSRPC11",45,0)
 . . S VPSIEN=DFN_";"_VPSCL_";"_VPSDT
"RTN","VPSRPC11",46,0)
 . . D STAPPT(.VPSARR,VPSAPT,VPSIEN)
"RTN","VPSRPC11",47,0)
 . . S EXIST=1
"RTN","VPSRPC11",48,0)
 ;
"RTN","VPSRPC11",49,0)
 K ^TMP($J,"SDAMA301",DFN)
"RTN","VPSRPC11",50,0)
 QUIT
"RTN","VPSRPC11",51,0)
 ;
"RTN","VPSRPC11",52,0)
STAPPT(VPSARR,VPSAPT,VPSIEN) ; Store appointments
"RTN","VPSRPC11",53,0)
 ; ------ Clinic Info ------------
"RTN","VPSRPC11",54,0)
 N VAL S VAL=$P(VPSAPT,U,2)
"RTN","VPSRPC11",55,0)
 N VPSCLN S VPSCLN=$P(VAL,";")
"RTN","VPSRPC11",56,0)
 N VPSCNAM S VPSCNAM=$P(VAL,";",2)
"RTN","VPSRPC11",57,0)
 ;
"RTN","VPSRPC11",58,0)
 ; -- APPT CLINIC IEN/NAME #2
"RTN","VPSRPC11",59,0)
 D SET(.VPSARR,2.98,VPSIEN,".01",VPSCLN)
"RTN","VPSRPC11",60,0)
 ;
"RTN","VPSRPC11",61,0)
 ; -- Hospital Location
"RTN","VPSRPC11",62,0)
 N VPSFL S VPSFL="44"
"RTN","VPSRPC11",63,0)
 D SET(.VPSARR,VPSFL,VPSIEN,".01",VPSCNAM)
"RTN","VPSRPC11",64,0)
 S VAL=$$GET1^DIQ(VPSFL,VPSCLN_",",10,"E")
"RTN","VPSRPC11",65,0)
 D SET(.VPSARR,VPSFL,VPSIEN,10,VAL) ; HOSPITAL PHYSICAL LOCATION
"RTN","VPSRPC11",66,0)
 ;
"RTN","VPSRPC11",67,0)
 ; ------ Appt Info ---------------
"RTN","VPSRPC11",68,0)
 S VPSFL="2.98"
"RTN","VPSRPC11",69,0)
 S VAL=$P(VPSAPT,U,1) D SET(.VPSARR,VPSFL,VPSIEN,".001",VAL,"APPOINTMENT DATE/TIME") ; APPT DATE/TIME #1
"RTN","VPSRPC11",70,0)
 S VAL=$P(VPSAPT,U,3) D SET(.VPSARR,VPSFL,VPSIEN,3,VAL) ; STATUS #3
"RTN","VPSRPC11",71,0)
 S VAL=$P($P(VPSAPT,U,22),";",3) D SET(.VPSARR,VPSFL,VPSIEN,100,VAL) ; CURRENT STATUS #22
"RTN","VPSRPC11",72,0)
 S VAL=$P($P(VPSAPT,U,10),";",2) D SET(.VPSARR,VPSFL,VPSIEN,9.5,VAL) ; APPT TYPE IEN/NAME #10
"RTN","VPSRPC11",73,0)
 S VAL=$P(VPSAPT,U,16) D SET(.VPSARR,VPSFL,VPSIEN,20,VAL) ; DATE APPT MADE #16
"RTN","VPSRPC11",74,0)
 S VAL=$P(VPSAPT,U,19) D SET(.VPSARR,VPSFL,VPSIEN,7,VAL) ; EKG DATE/TIME #19
"RTN","VPSRPC11",75,0)
 S VAL=$P(VPSAPT,U,20) D SET(.VPSARR,VPSFL,VPSIEN,6,VAL) ; X-RAY DATE/TIME #20
"RTN","VPSRPC11",76,0)
 S VAL=$P(VPSAPT,U,21) D SET(.VPSARR,VPSFL,VPSIEN,5,VAL) ; LAB DATE/TIME #21
"RTN","VPSRPC11",77,0)
 ;
"RTN","VPSRPC11",78,0)
 N VPSDFN,VPSDT,FLD S VPSDFN=$P(VPSIEN,";") S VPSDT=$P(VPSIEN,";",3)
"RTN","VPSRPC11",79,0)
 S VAL=$$GET1^DIQ(VPSFL,VPSDT_","_VPSDFN_",",14,"E") D SET(.VPSARR,VPSFL,VPSIEN,14,VAL) ; NO-SHOW/CANCELED BY #29
"RTN","VPSRPC11",80,0)
 S VAL=$$GET1^DIQ(VPSFL,VPSDT_","_VPSDFN_",",15,"I") D SET(.VPSARR,VPSFL,VPSIEN,15,VAL) ; NO-SHOW/CANCELED DATE/TM #25
"RTN","VPSRPC11",81,0)
 S VAL=$$GET1^DIQ(VPSFL,VPSDT_","_VPSDFN_",",16,"E") D SET(.VPSARR,VPSFL,VPSIEN,16,VAL) ; Cancellation Reason #32
"RTN","VPSRPC11",82,0)
 S VAL=$$GET1^DIQ(VPSFL,VPSDT_","_VPSDFN_",",17,"E") D SET(.VPSARR,VPSFL,VPSIEN,17,VAL) ; Cancellation Remarks
"RTN","VPSRPC11",83,0)
 QUIT
"RTN","VPSRPC11",84,0)
 ;
"RTN","VPSRPC11",85,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC11",86,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),1) ;Set line item to output array
"RTN","VPSRPC11",87,0)
 QUIT
"RTN","VPSRPC12")
0^15^B12694727
"RTN","VPSRPC12",1,0)
VPSRPC12  ;WOIFO/BT - Patient Demographic - Lab Orders;08/14/14 13:07
"RTN","VPSRPC12",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Aug 14, 2014;Build 27
"RTN","VPSRPC12",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC12",4,0)
 ;
"RTN","VPSRPC12",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC12",6,0)
 ; ------------------------
"RTN","VPSRPC12",7,0)
 ; #3366  - AGET^ORWORR           (Controlled Subs)
"RTN","VPSRPC12",8,0)
 ; #3367  - GET4LST^ORWORR        (Controlled Subs)
"RTN","VPSRPC12",9,0)
 ; #6100  - DETAIL^ORWOR          (Private)
"RTN","VPSRPC12",10,0)
 ; #10104 - XLFSTR call           (Supported)
"RTN","VPSRPC12",11,0)
 QUIT
"RTN","VPSRPC12",12,0)
 ;
"RTN","VPSRPC12",13,0)
GETLAB(VPSARR,DFN,DTRANGE) ;given DFN, returns the patient lab
"RTN","VPSRPC12",14,0)
 ; OUTPUT
"RTN","VPSRPC12",15,0)
 ;   VPSARR   - passed in by reference; this is the output array to store lab order
"RTN","VPSRPC12",16,0)
 ; INPUT
"RTN","VPSRPC12",17,0)
 ;   DFN      - patient DFN (This value must be validated before calling this procedure)
"RTN","VPSRPC12",18,0)
 ;   DTRANGE  - FROMDATE:THROUGHDATE
"RTN","VPSRPC12",19,0)
 ;
"RTN","VPSRPC12",20,0)
 ; --- Filter ---------
"RTN","VPSRPC12",21,0)
 K ^TMP("ORR",$J)
"RTN","VPSRPC12",22,0)
 N DTFROM S DTFROM=$P(DTRANGE,":")
"RTN","VPSRPC12",23,0)
 N DTTHRU S DTTHRU=$P(DTRANGE,":",2)
"RTN","VPSRPC12",24,0)
 S:DTFROM="" DTFROM=0
"RTN","VPSRPC12",25,0)
 S:DTTHRU="" DTTHRU=0
"RTN","VPSRPC12",26,0)
 I $P(DTFROM,".")=$P(DTTHRU,"."),$P(DTFROM,".",2)>$P(DTTHRU,".",2),$P(DTTHRU,".",2)="" S $P(DTTHRU,".",2)=2359
"RTN","VPSRPC12",27,0)
 ;
"RTN","VPSRPC12",28,0)
 ; --- Compile ---------
"RTN","VPSRPC12",29,0)
 N GROUP S GROUP=$O(^ORD(100.98,"B","LABORATORY",0)) ;lab orders
"RTN","VPSRPC12",30,0)
 N ORSLT D AGET^ORWORR(.ORSLT,DFN,,GROUP,DTFROM,DTTHRU)
"RTN","VPSRPC12",31,0)
 N LST D PREPLST(.LST)
"RTN","VPSRPC12",32,0)
 ;
"RTN","VPSRPC12",33,0)
 ; --- Store Lab Order --------------
"RTN","VPSRPC12",34,0)
 N DETRES,VAL,ORDIEN
"RTN","VPSRPC12",35,0)
 N SEQ S SEQ=0
"RTN","VPSRPC12",36,0)
 N EXIST S EXIST=0
"RTN","VPSRPC12",37,0)
 ;
"RTN","VPSRPC12",38,0)
 F  S SEQ=$O(LST(SEQ)) QUIT:'SEQ  D
"RTN","VPSRPC12",39,0)
 . S ORDIEN=LST(SEQ)
"RTN","VPSRPC12",40,0)
 . QUIT:'ORDIEN
"RTN","VPSRPC12",41,0)
 . D DETAIL^ORWOR(.DETRES,ORDIEN,DFN) ; Get Detail Info
"RTN","VPSRPC12",42,0)
 . D STORE(.VPSARR,DFN,ORDIEN,DETRES) ;Store Lab Orders
"RTN","VPSRPC12",43,0)
 . S EXIST=1
"RTN","VPSRPC12",44,0)
 . K @DETRES
"RTN","VPSRPC12",45,0)
 ;
"RTN","VPSRPC12",46,0)
 I 'EXIST D SET(.VPSARR,"E",DFN,"","NO LAB ORDER RECORDS FOUND FOR PATIENT","LAB ORDER NOT FOUND")
"RTN","VPSRPC12",47,0)
 K ^TMP("ORR",$J)
"RTN","VPSRPC12",48,0)
 QUIT
"RTN","VPSRPC12",49,0)
 ;
"RTN","VPSRPC12",50,0)
PREPLST(LST) ;Prepare Lab Order List
"RTN","VPSRPC12",51,0)
 N MAX,DAT,SEQ
"RTN","VPSRPC12",52,0)
 S (SEQ,DAT)=0
"RTN","VPSRPC12",53,0)
 K LST
"RTN","VPSRPC12",54,0)
 ;
"RTN","VPSRPC12",55,0)
 F  S DAT=$O(^TMP("ORR",$J,DAT)) QUIT:'DAT  D
"RTN","VPSRPC12",56,0)
 . S MAX=+$G(^TMP("ORR",$J,DAT,.1)) QUIT:'MAX
"RTN","VPSRPC12",57,0)
 . F SEQ=1:1:MAX S LST(SEQ)=$P(^TMP("ORR",$J,DAT,SEQ),U)
"RTN","VPSRPC12",58,0)
 QUIT
"RTN","VPSRPC12",59,0)
 ;
"RTN","VPSRPC12",60,0)
STORE(VPSARR,DFN,ORDIEN,LST) ;Store Lab Orders
"RTN","VPSRPC12",61,0)
 ; OUTPUT
"RTN","VPSRPC12",62,0)
 ;   VPSARR   - passed in by reference; this is the output array to store lab order
"RTN","VPSRPC12",63,0)
 ; INPUT
"RTN","VPSRPC12",64,0)
 ;   DFN      - patient DFN (This value must be validated before calling this procedure)
"RTN","VPSRPC12",65,0)
 ;   ORDIEN   - Order Number
"RTN","VPSRPC12",66,0)
 ;   LST      - Detail Result Array
"RTN","VPSRPC12",67,0)
 ;
"RTN","VPSRPC12",68,0)
 N IDX S IDX=DFN_";"_ORDIEN
"RTN","VPSRPC12",69,0)
 D SET(.VPSARR,100,IDX,.01,+ORDIEN) ;ORDER NUMBER
"RTN","VPSRPC12",70,0)
 N VAL S VAL=$$GET1^DIQ(100,+ORDIEN_",",16,"I")
"RTN","VPSRPC12",71,0)
 D SET(.VPSARR,100,IDX,16,VAL,"LAB APPOINTMENT DATE/TIME")
"RTN","VPSRPC12",72,0)
 N LINE,FLD,VAL,SEQ S SEQ=0
"RTN","VPSRPC12",73,0)
 ;
"RTN","VPSRPC12",74,0)
 F  S SEQ=$O(@LST@(SEQ)) Q:'SEQ  D
"RTN","VPSRPC12",75,0)
 . S LINE=@LST@(SEQ)
"RTN","VPSRPC12",76,0)
 . S FLD=$P(LINE,":")
"RTN","VPSRPC12",77,0)
 . S VAL=$$TRIM^XLFSTR($P(LINE,":",2,99))
"RTN","VPSRPC12",78,0)
 . I FLD="Lab Test" D SET(.VPSARR,69.03,IDX,.01,VAL,"LAB TEST")
"RTN","VPSRPC12",79,0)
 . I FLD="Urgency" D SET(.VPSARR,69.03,IDX,1,VAL,"URGENCY")
"RTN","VPSRPC12",80,0)
 . I FLD="Current Status" D SET(.VPSARR,100,IDX,8,VAL,"CURRENT STATUS")
"RTN","VPSRPC12",81,0)
 . I FLD="Collection Date/Time" S VAL=$$EXT2FM(VAL) D SET(.VPSARR,69.01,IDX,10,VAL,"COLLECTION DATE/TIME")
"RTN","VPSRPC12",82,0)
 QUIT
"RTN","VPSRPC12",83,0)
 ;
"RTN","VPSRPC12",84,0)
EXT2FM(VAL) ;External to FM Date -> Oct 20, 2014@17:30 -> 3141020@173
"RTN","VPSRPC12",85,0)
 ; -- Get Date
"RTN","VPSRPC12",86,0)
 N MTHS S MTHS="Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"
"RTN","VPSRPC12",87,0)
 N MTH S MTH=$P(VAL," "),MTH=$F(MTHS,MTH)\4
"RTN","VPSRPC12",88,0)
 I 'MTH QUIT VAL
"RTN","VPSRPC12",89,0)
 N DAT S DAT=+$P(VAL," ",2)
"RTN","VPSRPC12",90,0)
 N YR S YR=+$P(VAL," ",3)
"RTN","VPSRPC12",91,0)
 N FMDT S FMDT=YR-1700*100+MTH*100+DAT
"RTN","VPSRPC12",92,0)
 ;
"RTN","VPSRPC12",93,0)
 ; -- Get Time
"RTN","VPSRPC12",94,0)
 N EXTTM S EXTTM=$P(VAL,"@",2) ;Time
"RTN","VPSRPC12",95,0)
 N FMTM S FMTM="."_$TR(EXTTM,":")
"RTN","VPSRPC12",96,0)
 ;
"RTN","VPSRPC12",97,0)
 QUIT FMDT_(+FMTM)
"RTN","VPSRPC12",98,0)
 ;
"RTN","VPSRPC12",99,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC12",100,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),2) ;Set line item to output array
"RTN","VPSRPC12",101,0)
 QUIT
"RTN","VPSRPC13")
0^16^B13168456
"RTN","VPSRPC13",1,0)
VPSRPC13  ;WOIFO/BT - Patient Demographic RPC - Consult/Procedure;08/14/14 13:07
"RTN","VPSRPC13",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Aug 14, 2014;Build 27
"RTN","VPSRPC13",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC13",4,0)
 ;
"RTN","VPSRPC13",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC13",6,0)
 ; ------------------------
"RTN","VPSRPC13",7,0)
 ; #2740 - Call to OER^GMRCSLM1      (Controlled Subs)
"RTN","VPSRPC13",8,0)
 ; #1252 - Call to $$OUTPTPR^SDUTL3  (Supported)
"RTN","VPSRPC13",9,0)
 ; #1252 - Call to $$OUTPTTM^SDUTL3  (Supported)
"RTN","VPSRPC13",10,0)
 ; #6116 - Read-Only access to File #123, Fields .01,.03,3,5,8,10,13,17 (Controlled Subs)
"RTN","VPSRPC13",11,0)
 QUIT
"RTN","VPSRPC13",12,0)
 ;
"RTN","VPSRPC13",13,0)
GETCNSLT(VPSARR,DFN) ;given DFN, returns the patient lab
"RTN","VPSRPC13",14,0)
 ; OUTPUT
"RTN","VPSRPC13",15,0)
 ;   VPSARR   - passed in by reference; this is the output array to store Consult
"RTN","VPSRPC13",16,0)
 ; INPUT
"RTN","VPSRPC13",17,0)
 ;   DFN      - patient DFN (This value must be validated before calling this procedure)
"RTN","VPSRPC13",18,0)
 ;
"RTN","VPSRPC13",19,0)
 N ORSERV S ORSERV="" ;Service
"RTN","VPSRPC13",20,0)
 N ORSDT S ORSDT="" ;Beg Date for Search
"RTN","VPSRPC13",21,0)
 N OREDT S OREDT="" ;End Date for Search
"RTN","VPSRPC13",22,0)
 N ORSTATUS S ORSTATUS="" ;ALL STATI
"RTN","VPSRPC13",23,0)
 N GMRCOER S GMRCOER=2 ;0 if request is from CONSULTS, 1 if request is for CPRS List Manager, 2 if for CPRS GUI
"RTN","VPSRPC13",24,0)
 ;
"RTN","VPSRPC13",25,0)
 K ^TMP("GMRCR",$J)
"RTN","VPSRPC13",26,0)
 D OER^GMRCSLM1(DFN,ORSERV,ORSDT,OREDT,ORSTATUS,GMRCOER) ;Return list of consult/procedures
"RTN","VPSRPC13",27,0)
 ;
"RTN","VPSRPC13",28,0)
 N CSLTIEN,VAL,DATA
"RTN","VPSRPC13",29,0)
 N SEQ S SEQ=0
"RTN","VPSRPC13",30,0)
 N EXIST S EXIST=0
"RTN","VPSRPC13",31,0)
 ;
"RTN","VPSRPC13",32,0)
 F  S SEQ=$O(^TMP("GMRCR",$J,"CS",SEQ)) QUIT:'SEQ  D
"RTN","VPSRPC13",33,0)
 . S DATA=$G(^TMP("GMRCR",$J,"CS",SEQ,0))
"RTN","VPSRPC13",34,0)
 . QUIT:$F(DATA,"PATIENT DOES NOT HAVE ANY CONSULTS/REQUESTS")
"RTN","VPSRPC13",35,0)
 . S EXIST=1
"RTN","VPSRPC13",36,0)
 . S CSLTIEN=$P(DATA,U) D SET(.VPSARR,123,DFN_";"_CSLTIEN,.001,CSLTIEN,"CONSULT IEN") ; CONSULT IEN
"RTN","VPSRPC13",37,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",.01,"I") D SET(.VPSARR,123,DFN_";"_CSLTIEN,.01,VAL) ; FILE ENTRY DATE
"RTN","VPSRPC13",38,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",8,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,8,VAL) ; CPRS STATUS
"RTN","VPSRPC13",39,0)
 . S VAL=$P(DATA,U,4) D SET(.VPSARR,123.5,DFN_";"_CSLTIEN,.01,VAL,"CONSULT NAME") ; CONSULT NAME
"RTN","VPSRPC13",40,0)
 . S VAL=$$OUTPTPR^SDUTL3(DFN) D SET(.VPSARR,200,DFN,.01,$P(VAL,U,2),"PC PROVIDER") ; PC PROVIDER
"RTN","VPSRPC13",41,0)
 . S VAL=$$OUTPTTM^SDUTL3(DFN) D SET(.VPSARR,404.51,DFN,.01,$P(VAL,U,2),"PC TEAM") ; PC TEAM NAME
"RTN","VPSRPC13",42,0)
 . S VAL=$P(DATA,U,5) D SET(.VPSARR,123,DFN_";"_CSLTIEN,4,VAL,"PROCEDURE") ; CONSULT/PROC/REQUEST TYPE
"RTN","VPSRPC13",43,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",.03,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,.03,VAL) ; OE/RR FILE NUMBER
"RTN","VPSRPC13",44,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",13,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,13,VAL,"REQUEST TYPE") ; REQUEST TYPE
"RTN","VPSRPC13",45,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",10,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,10,VAL) ; SENDING PROVIDER/REQUESTED PC PROVIDER
"RTN","VPSRPC13",46,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",17,"I") D SET(.VPSARR,123,DFN_";"_CSLTIEN,17,VAL) ; EARLIEST APPT.DATE/SCHEDULED PC APP DATE
"RTN","VPSRPC13",47,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",3,"I") D SET(.VPSARR,123,DFN_";"_CSLTIEN,3,VAL) ; DATE OF REQUEST
"RTN","VPSRPC13",48,0)
 . S VAL=$$GET1^DIQ(123,CSLTIEN_",",5,"E") D SET(.VPSARR,123,DFN_";"_CSLTIEN,5,VAL) ; URGENCY
"RTN","VPSRPC13",49,0)
 ;
"RTN","VPSRPC13",50,0)
 I 'EXIST D SET(.VPSARR,"E",DFN,"","NO CONSULT DETAIL RECORDS FOUND FOR PATIENT","CONSULT NOT FOUND")
"RTN","VPSRPC13",51,0)
 K ^TMP("GMRCR",$J)
"RTN","VPSRPC13",52,0)
 QUIT
"RTN","VPSRPC13",53,0)
 ;
"RTN","VPSRPC13",54,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC13",55,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),3) ;Set line item to output array
"RTN","VPSRPC13",56,0)
 QUIT
"RTN","VPSRPC14")
0^17^B19859948
"RTN","VPSRPC14",1,0)
VPSRPC14  ;BPOIFO/KG - Patient Radiology/Imaging Exams;07/31/14 13:07
"RTN","VPSRPC14",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Jul 31, 2014;Build 27
"RTN","VPSRPC14",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC14",4,0)
 ;
"RTN","VPSRPC14",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC14",6,0)
 ; ------------------------
"RTN","VPSRPC14",7,0)
 ; #3288 - LIST^ORQOR1                              (Controlled subs)
"RTN","VPSRPC14",8,0)
 ; #6101 - ORDOC^ORPR07                             (Private)
"RTN","VPSRPC14",9,0)
 ; #2266 - EN30^RAO7PC1                             (Supported)
"RTN","VPSRPC14",10,0)
 ; #6102 - READ ACCESS TO File #100, Field 6,33     (Private)
"RTN","VPSRPC14",11,0)
 ; #3074 - READ ACCESS TO File #75.1, Field 16,20   (Private)
"RTN","VPSRPC14",12,0)
 ; #65   - READ ACCESS TO File #70.03, Field 2,3,17 (Controlled Subs)
"RTN","VPSRPC14",13,0)
 ; #65   - READ ACCESS TO File #70.02, Field 2      (Controlled Subs)
"RTN","VPSRPC14",14,0)
 ; #586  - READ ACCESS TO File #71, Field 9         (Controlled Subs)
"RTN","VPSRPC14",15,0)
 ; #3505 - READ ACCESS TO File #79.2, Field .01,3   (Controlled Subs)
"RTN","VPSRPC14",16,0)
 QUIT
"RTN","VPSRPC14",17,0)
 ;
"RTN","VPSRPC14",18,0)
GETRAD(VPSARR,DFN,PARAMS) ;given DFN, returns the patient radiology/imaging exams
"RTN","VPSRPC14",19,0)
 N DATA,EXAMINFO,RIOIEN,RIOIENS,RIOINFO,ORDINFO,CPT,ORDIEN,ORDIENS,PROC,PROCIEN,PROCNAME,PROVNAME
"RTN","VPSRPC14",20,0)
 N IENS7002,IENS7003,DTI,CASE,DTI,TYPIEN,TYPIENS,TYPINFO,ACTIEN
"RTN","VPSRPC14",21,0)
 ;
"RTN","VPSRPC14",22,0)
 ;Get Radiology/Imaging orders from ORDER File (#100)
"RTN","VPSRPC14",23,0)
 N FILTER S FILTER=1 ;all orders
"RTN","VPSRPC14",24,0)
 N EXIST S EXIST=0
"RTN","VPSRPC14",25,0)
 S PARAMS=$G(PARAMS)
"RTN","VPSRPC14",26,0)
 N STDTE S STDTE=$P(PARAMS,":")
"RTN","VPSRPC14",27,0)
 N ENDTE S ENDTE=$P(PARAMS,":",2)
"RTN","VPSRPC14",28,0)
 N ORDLST D LIST^ORQOR1(.ORDLST,DFN,"IMAGING",FILTER,STDTE,ENDTE)
"RTN","VPSRPC14",29,0)
 ;
"RTN","VPSRPC14",30,0)
 I +$P($G(ORDLST(1)),U,1)>0 D
"RTN","VPSRPC14",31,0)
 . N CNT S CNT=""
"RTN","VPSRPC14",32,0)
 . F  S CNT=+$O(ORDLST(CNT)) Q:CNT'>0  D
"RTN","VPSRPC14",33,0)
 . . S EXIST=1
"RTN","VPSRPC14",34,0)
 . . S DATA=ORDLST(CNT)
"RTN","VPSRPC14",35,0)
 . . S ORDIEN=$P($P(DATA,U,1),";",1)
"RTN","VPSRPC14",36,0)
 . . S ACTIEN=$P($P(DATA,U,1),";",2)
"RTN","VPSRPC14",37,0)
 . . Q:ORDIEN=""
"RTN","VPSRPC14",38,0)
 . . S ORDIENS=ORDIEN_","
"RTN","VPSRPC14",39,0)
 . . K ORDINFO
"RTN","VPSRPC14",40,0)
 . . D GETS^DIQ(100,ORDIENS,"6;33","IE","ORDINFO")
"RTN","VPSRPC14",41,0)
 . . S PROVNAME=$$ORDOC^ORPR07(ORDIEN,ACTIEN)
"RTN","VPSRPC14",42,0)
 . . S PROCNAME=$P(DATA,U,2)
"RTN","VPSRPC14",43,0)
 . . D SET(.VPSARR,100,DFN_";"_ORDIEN,.01,ORDIEN,"CPRS ORDER IEN")
"RTN","VPSRPC14",44,0)
 . . D SET(.VPSARR,100,DFN_";"_ORDIEN,1,PROCNAME,"PROCEDURE NAME")
"RTN","VPSRPC14",45,0)
 . . D SET(.VPSARR,100,DFN_";"_ORDIEN,6,$G(ORDINFO(100,ORDIENS,6,"E")),"REQUESTING LOCATION")
"RTN","VPSRPC14",46,0)
 . . D SET(.VPSARR,100.008,DFN_";"_ORDIEN_";"_ACTIEN,3,PROVNAME,"REQUESTING PHYSICIAN")
"RTN","VPSRPC14",47,0)
 . . ;
"RTN","VPSRPC14",48,0)
 . . ;get info from Radiology/Imaging Order File (#75.1)
"RTN","VPSRPC14",49,0)
 . . S RIOIEN=+$G(ORDINFO(100,ORDIENS,33,"I")) ;radiology/imaging order, pointer to 75.1
"RTN","VPSRPC14",50,0)
 . . Q:RIOIEN'>0
"RTN","VPSRPC14",51,0)
 . . S RIOIENS=RIOIEN_","
"RTN","VPSRPC14",52,0)
 . . K RIOINFO
"RTN","VPSRPC14",53,0)
 . . D GETS^DIQ(75.1,RIOIENS,"16;20","IE","RIOINFO")
"RTN","VPSRPC14",54,0)
 . . D SET(.VPSARR,75.1,DFN_";"_RIOIEN,16,$G(RIOINFO(75.1,RIOIENS,16,"E")),"EXAM REQUESTED DATE")
"RTN","VPSRPC14",55,0)
 . . D SET(.VPSARR,75.1,DFN_";"_RIOIEN,20,$G(RIOINFO(75.1,RIOIENS,20,"E")),"IMAGING LOCATION NAME")
"RTN","VPSRPC14",56,0)
 . . ;
"RTN","VPSRPC14",57,0)
 . . ;get Exam info from Radiology/Imaging Patient File (#70)
"RTN","VPSRPC14",58,0)
 . . D EN30^RAO7PC1(RIOIEN)   ;DBIA 2266
"RTN","VPSRPC14",59,0)
 . . Q:'$D(^TMP($J,"RAE2",DFN))  ;no examinations
"RTN","VPSRPC14",60,0)
 . . S DTI=+$O(^RADPT("AO",RIOIEN,DFN,0)) Q:'DTI
"RTN","VPSRPC14",61,0)
 . . S CASE=+$O(^TMP($J,"RAE2",DFN,0)) Q:'CASE
"RTN","VPSRPC14",62,0)
 . . S PROC=$O(^TMP($J,"RAE2",DFN,CASE,""))
"RTN","VPSRPC14",63,0)
 . . S DATA=^TMP($J,"RAE2",DFN,CASE,PROC)
"RTN","VPSRPC14",64,0)
 . . ;
"RTN","VPSRPC14",65,0)
 . . S IENS7002=DTI_","_DFN_","     ;IENS for #70.02
"RTN","VPSRPC14",66,0)
 . . S TYPIEN=$$GET1^DIQ(70.02,IENS7002,"2","I")
"RTN","VPSRPC14",67,0)
 . . S TYPIENS=TYPIEN_","
"RTN","VPSRPC14",68,0)
 . . K TYPINFO
"RTN","VPSRPC14",69,0)
 . . D GETS^DIQ(79.2,TYPIENS,".01;3","IE","TYPINFO")
"RTN","VPSRPC14",70,0)
 . . D SET(.VPSARR,79.2,DFN_";"_TYPIEN,.01,$G(TYPINFO(79.2,TYPIENS,.01,"E")),"IMAGING TYPE ABBR")
"RTN","VPSRPC14",71,0)
 . . D SET(.VPSARR,79.2,DFN_";"_TYPIEN,3,$G(TYPINFO(79.2,TYPIENS,3,"E")),"IMAGING TYPE NAME")
"RTN","VPSRPC14",72,0)
 . . ;
"RTN","VPSRPC14",73,0)
 . . S IENS7003=CASE_","_IENS7002   ;IENS for #70.03
"RTN","VPSRPC14",74,0)
 . . D SET(.VPSARR,70.03,DFN_";"_IENS7003,.01,CASE,"RADIOLOGY CASE#")
"RTN","VPSRPC14",75,0)
 . . D SET(.VPSARR,70.03,DFN_";"_IENS7003,17,$P(DATA,U,1),"REPORT STATUS")
"RTN","VPSRPC14",76,0)
 . . D SET(.VPSARR,70.03,DFN_";"_IENS7003,13,$P(DATA,U,2),"ABNORMAL RESULTS FLAG")
"RTN","VPSRPC14",77,0)
 . . K EXAMINFO
"RTN","VPSRPC14",78,0)
 . . D GETS^DIQ(70.03,IENS7003,"2;3;17","IE","EXAMINFO")
"RTN","VPSRPC14",79,0)
 . . D SET(.VPSARR,70.03,DFN_";"_IENS7003,3,$G(EXAMINFO(70.03,IENS7003,3,"I")),"EXAM STATUS ORDER#")
"RTN","VPSRPC14",80,0)
 . . D SET(.VPSARR,70.03,DFN_";"_IENS7003,3,$G(EXAMINFO(70.03,IENS7003,3,"E")),"EXAM STATUS NAME")
"RTN","VPSRPC14",81,0)
 . . D SET(.VPSARR,70.03,DFN_";"_IENS7003,17,$G(EXAMINFO(70.03,IENS7003,17,"I")),"REPORT IEN")
"RTN","VPSRPC14",82,0)
 . . ;
"RTN","VPSRPC14",83,0)
 . . S PROCIEN=$G(EXAMINFO(70.03,IENS7003,2,"I"))  ;Procedure IEN, pointer to File #71
"RTN","VPSRPC14",84,0)
 . . S CPT=$$GET1^DIQ(71,PROCIEN_",",9,"I")
"RTN","VPSRPC14",85,0)
 . . D SET(.VPSARR,71,DFN_";"_PROCIEN,9,CPT,"CPT CODE")
"RTN","VPSRPC14",86,0)
 ;
"RTN","VPSRPC14",87,0)
 I 'EXIST D SET(.VPSARR,"E",DFN,"","NO RAD ORDERS FOUND FOR PATIENT","RAD NOT FOUND")
"RTN","VPSRPC14",88,0)
 QUIT
"RTN","VPSRPC14",89,0)
 ;
"RTN","VPSRPC14",90,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC14",91,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),4) ;Set line item to output array
"RTN","VPSRPC14",92,0)
 QUIT
"RTN","VPSRPC15")
0^18^B7747789
"RTN","VPSRPC15",1,0)
VPSRPC15  ;BPOIFO/KG - Patient Problems;07/31/14 13:07
"RTN","VPSRPC15",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Jul 31, 2014;Build 27
"RTN","VPSRPC15",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC15",4,0)
 ;
"RTN","VPSRPC15",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC15",6,0)
 ; ------------------------
"RTN","VPSRPC15",7,0)
 ; #2741 - DETAIL^GMPLUTL2   (Controlled Sub)
"RTN","VPSRPC15",8,0)
 ; #2741 - LIST^GMPLUTL2     (Controlled Sub)
"RTN","VPSRPC15",9,0)
 ; #2977 - GETFLDS^GMPLEDT3  (Controlled Sub)
"RTN","VPSRPC15",10,0)
 QUIT
"RTN","VPSRPC15",11,0)
 ;
"RTN","VPSRPC15",12,0)
GETPRBLM(VPSARR,DFN) ;given DFN, returns the patient problems
"RTN","VPSRPC15",13,0)
 N ICDIEN,PRBIEN,PRBIENS,PRBINFO,GMPL
"RTN","VPSRPC15",14,0)
 ;
"RTN","VPSRPC15",15,0)
 ;--- Load a list of active problems
"RTN","VPSRPC15",16,0)
 N PLST D LIST^GMPLUTL2(.PLST,DFN,"A",0) ; Returns list of Prob for Pt.
"RTN","VPSRPC15",17,0)
 ;
"RTN","VPSRPC15",18,0)
 ;--- Browse through the problems
"RTN","VPSRPC15",19,0)
 N CNT S CNT=0
"RTN","VPSRPC15",20,0)
 N FILE S FILE=9000011
"RTN","VPSRPC15",21,0)
 N EXIST S EXIST=0
"RTN","VPSRPC15",22,0)
 ;
"RTN","VPSRPC15",23,0)
 F  S CNT=$O(PLST(CNT)) Q:CNT=""  D
"RTN","VPSRPC15",24,0)
 . S PRBIEN=$P(PLST(CNT),U)
"RTN","VPSRPC15",25,0)
 . Q:PRBIEN'>0
"RTN","VPSRPC15",26,0)
 . S EXIST=1
"RTN","VPSRPC15",27,0)
 . K GMPL D DETAIL^GMPLUTL2(PRBIEN,.GMPL)
"RTN","VPSRPC15",28,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.01,$G(GMPL("DIAGNOSIS")),"DIAGNOSIS")
"RTN","VPSRPC15",29,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.03,$G(GMPL("MODIFIED")),"DATE LAST MODIFIED")
"RTN","VPSRPC15",30,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.05,$G(GMPL("NARRATIVE")),"PROVIDER NARRATIVE")
"RTN","VPSRPC15",31,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.06,$P($G(GMPL("FACILITY")),U,2),"FACILITY")
"RTN","VPSRPC15",32,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.08,$P($G(GMPL("ENTERED")),U),"DATE ENTERED")
"RTN","VPSRPC15",33,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,.12,$G(GMPL("STATUS")),"STATUS")
"RTN","VPSRPC15",34,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.02,$G(GMPL("CONDITION")),"CONDITION")
"RTN","VPSRPC15",35,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.03,$P($G(GMPL("ENTERED")),U,2),"ENTERED BY")
"RTN","VPSRPC15",36,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.04,$P($G(GMPL("RECORDED")),U,2),"RECORDING PROVIDER")
"RTN","VPSRPC15",37,0)
 . D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.05,$G(GMPL("PROVIDER")),"RESPONSIBLE PROVIDER")
"RTN","VPSRPC15",38,0)
 . D SETEXP(.VPSARR,FILE,DFN,PRBIEN) ;set expression
"RTN","VPSRPC15",39,0)
 ;
"RTN","VPSRPC15",40,0)
 I 'EXIST D SET(.VPSARR,"E",DFN,"","NO PROBLEM RECORDS FOUND FOR PATIENT","PROBLEM NOT FOUND")
"RTN","VPSRPC15",41,0)
 QUIT
"RTN","VPSRPC15",42,0)
 ;
"RTN","VPSRPC15",43,0)
SETEXP(VPSARR,FILE,DFN,PRBIEN) ;set expression
"RTN","VPSRPC15",44,0)
 N GMPVAMC S GMPVAMC=0
"RTN","VPSRPC15",45,0)
 N GMPPROV S GMPROV=0
"RTN","VPSRPC15",46,0)
 N GMPORIG,GMPFLD
"RTN","VPSRPC15",47,0)
 D GETFLDS^GMPLEDT3(PRBIEN)
"RTN","VPSRPC15",48,0)
 D SET(.VPSARR,FILE,DFN_";"_PRBIEN,1.01,$P($G(GMPFLD(1.01)),U,2),"EXPRESSIONS")
"RTN","VPSRPC15",49,0)
 QUIT
"RTN","VPSRPC15",50,0)
 ;
"RTN","VPSRPC15",51,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC15",52,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),5) ;Set line item to output array
"RTN","VPSRPC15",53,0)
 QUIT
"RTN","VPSRPC16")
0^19^B169070534
"RTN","VPSRPC16",1,0)
VPSRPC16  ;BPOIFO/EL,WOIFO/BT - Patient Demographic (continue);07/31/14 13:07
"RTN","VPSRPC16",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Jul 31, 2014;Build 27
"RTN","VPSRPC16",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC16",4,0)
 ;
"RTN","VPSRPC16",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC16",6,0)
 ; ------------------------
"RTN","VPSRPC16",7,0)
 ; #10035 - ^DPT( references       (Supported)
"RTN","VPSRPC16",8,0)
 ; #2462  - ^DGEN( reference       (Controlled Sub) 
"RTN","VPSRPC16",9,0)
 ; #2056  - DIQ call               (Supported)
"RTN","VPSRPC16",10,0)
 ; #3402  - PTSEC^DGSEC4 call      (Supported)
"RTN","VPSRPC16",11,0)
 ; #3403  - NOTICE^DGSEC4 call     (Supported)
"RTN","VPSRPC16",12,0)
 ; #3812  - GET^DGENA              (Controlled Subs)
"RTN","VPSRPC16",13,0)
 ; #2701  - MPIF001 call           (Supported)
"RTN","VPSRPC16",14,0)
 ; #10061 - VADPT call             (Supported)
"RTN","VPSRPC16",15,0)
 ; #10103 - XLFDT call             (Supported)
"RTN","VPSRPC16",16,0)
 ; #6098  - Read-Only access to ^DGMT(408.31,"C",DFN) and FIELD HARDSHIP (Controlled Sub)
"RTN","VPSRPC16",17,0)
 QUIT
"RTN","VPSRPC16",18,0)
 ;
"RTN","VPSRPC16",19,0)
GETDEM(VPSARR,DFN) ;given DFN, returns the patient demographics, insurance, and up-coming appointments.
"RTN","VPSRPC16",20,0)
 ; OUTPUT
"RTN","VPSRPC16",21,0)
 ;   VPSARR - passed in by reference; this is the output array to store patient demographics
"RTN","VPSRPC16",22,0)
 ; INPUT
"RTN","VPSRPC16",23,0)
 ;   DFN    - patient DFN (This value must be validated before calling this procedure)
"RTN","VPSRPC16",24,0)
 ;
"RTN","VPSRPC16",25,0)
 D DEM(.VPSARR,DFN) ; Store Patient Demographic Data
"RTN","VPSRPC16",26,0)
 D SENLOG(.VPSARR,DFN) ; Store Patient Sensitive Record File-38.1
"RTN","VPSRPC16",27,0)
 D ELIG(.VPSARR,DFN) ; Store Patient Eligibily
"RTN","VPSRPC16",28,0)
 D ENR(.VPSARR,DFN) ; Store Patient Enrollment
"RTN","VPSRPC16",29,0)
 D ADD(.VPSARR,DFN) ; Store Patient Address
"RTN","VPSRPC16",30,0)
 D OAD(.VPSARR,DFN) ; Store Other Patient Variables
"RTN","VPSRPC16",31,0)
 D IBB^VPSRPC26(.VPSARR,DFN) ; Store Patient Insurance Info
"RTN","VPSRPC16",32,0)
 D REC^VPSRPC26(.VPSARR,DFN) ; Store Patient Record Flag
"RTN","VPSRPC16",33,0)
 D DGS^VPSRPC26(.VPSARR,DFN) ; Store Pre-Registration Audit
"RTN","VPSRPC16",34,0)
 D BAL^VPSRPC26(.VPSARR,DFN) ; Store Balance
"RTN","VPSRPC16",35,0)
 D OTH^VPSRPC26(.VPSARR,DFN) ; Store Other information not in KNOWN API
"RTN","VPSRPC16",36,0)
 D POW^VPSRPC26(.VPSARR,DFN) ; Store POW
"RTN","VPSRPC16",37,0)
 D PH^VPSRPC26(.VPSARR,DFN) ; Store Purple Heart
"RTN","VPSRPC16",38,0)
 D MP^VPSRPC26(.VPSARR,DFN) ; Store Missing Person
"RTN","VPSRPC16",39,0)
 D SVC^VPSRPC26(.VPSARR,DFN) ; Store Service Connected and Rated Disabilities
"RTN","VPSRPC16",40,0)
 D CHG^VPSRPC26(.VPSARR,DFN) ; Store Change DT/TM
"RTN","VPSRPC16",41,0)
 D BLPAT^VPSRPC26(.VPSARR,DFN) ; Store Billing Patient
"RTN","VPSRPC16",42,0)
 D PCT^VPSRPC26(.VPSARR,DFN) ; Primary Care Team
"RTN","VPSRPC16",43,0)
 Q
"RTN","VPSRPC16",44,0)
 ;
"RTN","VPSRPC16",45,0)
DEM(VPSARR,DFN) ; Store Patient Demographic Data
"RTN","VPSRPC16",46,0)
 ; -- Store patient DFN
"RTN","VPSRPC16",47,0)
 D SET(.VPSARR,2,DFN,".001",DFN,"DFN")
"RTN","VPSRPC16",48,0)
 ;
"RTN","VPSRPC16",49,0)
 ; -- Store Patient ICN if exist
"RTN","VPSRPC16",50,0)
 N VPSICN S VPSICN=$$GETICN^MPIF001(DFN)
"RTN","VPSRPC16",51,0)
 N ICN S ICN=$P(VPSICN,"V")
"RTN","VPSRPC16",52,0)
 I $G(ICN)'="" D SET(.VPSARR,2,DFN,"991.01",ICN)
"RTN","VPSRPC16",53,0)
 ;
"RTN","VPSRPC16",54,0)
 ; -- Retrieve patient demographics data
"RTN","VPSRPC16",55,0)
 N VADM D DEM^VADPT
"RTN","VPSRPC16",56,0)
 ;
"RTN","VPSRPC16",57,0)
 ; -- Store patient demographics
"RTN","VPSRPC16",58,0)
 N VAL
"RTN","VPSRPC16",59,0)
 S VAL=$G(VADM(1)) D SET(.VPSARR,2,DFN,".01",VAL) ; patient name
"RTN","VPSRPC16",60,0)
 S VAL=$P($G(VADM(2)),U) D SET(.VPSARR,2,DFN,".09",VAL) ; SSN
"RTN","VPSRPC16",61,0)
 S VAL=$P($G(VADM(3)),U) D SET(.VPSARR,2,DFN,".03",VAL) ; DOB - kiosk needs internal (FM) format for all dates
"RTN","VPSRPC16",62,0)
 S VAL=$P($G(VADM(5)),U,2) D SET(.VPSARR,2,DFN,".02",VAL) ; SEX
"RTN","VPSRPC16",63,0)
 S VAL=$P($G(VADM(9)),U,2) D SET(.VPSARR,2,DFN,".08",VAL)
"RTN","VPSRPC16",64,0)
 S VAL=$P($G(VADM(10)),U,2) D SET(.VPSARR,2,DFN,".05",VAL)
"RTN","VPSRPC16",65,0)
 ;
"RTN","VPSRPC16",66,0)
 ; -- Store patient ethnicity
"RTN","VPSRPC16",67,0)
 N SEQ,VPSFL,VPSIEN
"RTN","VPSRPC16",68,0)
 ;
"RTN","VPSRPC16",69,0)
 I $G(VADM(11))'="" D
"RTN","VPSRPC16",70,0)
 . N VPSFL S VPSFL="2.06",SEQ=""
"RTN","VPSRPC16",71,0)
 . F  S SEQ=$O(VADM(11,SEQ)) QUIT:SEQ=""  D
"RTN","VPSRPC16",72,0)
 . . S VAL=$P(VADM(11,SEQ),U,2)
"RTN","VPSRPC16",73,0)
 . . S VPSIEN=DFN_";"_SEQ D SET(.VPSARR,VPSFL,VPSIEN,".01",VAL)
"RTN","VPSRPC16",74,0)
 ;
"RTN","VPSRPC16",75,0)
 ; -- Store patient race
"RTN","VPSRPC16",76,0)
 I $G(VADM(12))'="" D
"RTN","VPSRPC16",77,0)
 . S VPSFL="2.02",SEQ=""
"RTN","VPSRPC16",78,0)
 . F  S SEQ=$O(VADM(12,SEQ)) QUIT:SEQ=""  D
"RTN","VPSRPC16",79,0)
 . . S VAL=$P(VADM(12,SEQ),U,2)
"RTN","VPSRPC16",80,0)
 . . S VPSIEN=DFN_";"_SEQ D SET(.VPSARR,VPSFL,VPSIEN,".01",VAL)
"RTN","VPSRPC16",81,0)
 ;
"RTN","VPSRPC16",82,0)
 QUIT
"RTN","VPSRPC16",83,0)
 ;
"RTN","VPSRPC16",84,0)
SENLOG(VPSARR,DFN) ; Check Patient Sensitive Record File-38.1
"RTN","VPSRPC16",85,0)
 N DGRES
"RTN","VPSRPC16",86,0)
 N VAL S VAL=""
"RTN","VPSRPC16",87,0)
 N DGOPT S DGOPT=U_"VPS KIOSK-PATIENT-SELF-CHECKIN"
"RTN","VPSRPC16",88,0)
 N DGMSG S DGMSG=1
"RTN","VPSRPC16",89,0)
 D PTSEC^DGSEC4(.DGRES,DFN,DGMSG,DGOPT)
"RTN","VPSRPC16",90,0)
 N RES S RES=$G(DGRES(1))
"RTN","VPSRPC16",91,0)
 ;
"RTN","VPSRPC16",92,0)
 I RES=2 D  QUIT
"RTN","VPSRPC16",93,0)
 . N ACTION S ACTION=1
"RTN","VPSRPC16",94,0)
 . D NOTICE^DGSEC4(.DGRES,DFN,DGOPT,ACTION)
"RTN","VPSRPC16",95,0)
 . S VAL="2;SENSITIVE & SEC-AUDIT LOG & KIOSK MACHINE LOGIN-DUZ HOLDING NOSECURITY KEY"
"RTN","VPSRPC16",96,0)
 . D SET(.VPSARR,38.1,DFN,"IA3403",VAL,"SENSITIVE")
"RTN","VPSRPC16",97,0)
 ;
"RTN","VPSRPC16",98,0)
 S:RES=0 VAL="0;NON-SENSITIVE"
"RTN","VPSRPC16",99,0)
 S:RES=1 VAL="1;SENSITIVE & SEC-AUDIT LOG & KIOSK MACHINE LOGIN-DUZ HOLDING SECURITY KEY"
"RTN","VPSRPC16",100,0)
 S:RES=3 VAL="3;CANNOT CHECK SENSITIVE DUE TO KIOSK MACHINE LOGIN-DUZ ACCESSING OWN RECORD"
"RTN","VPSRPC16",101,0)
 S:RES=4 VAL="4;CANNOT CHECK SENSITIVE DUE TO KIOSK MACHINE LOGIN-DUZ MISSING SSN"
"RTN","VPSRPC16",102,0)
 S:VAL="" VAL="-1;MISSING DFN IN SENSITIVE CHECK"
"RTN","VPSRPC16",103,0)
 D SET(.VPSARR,38.1,DFN,"IA3402",VAL,"SENSITIVE")
"RTN","VPSRPC16",104,0)
 ;
"RTN","VPSRPC16",105,0)
 QUIT
"RTN","VPSRPC16",106,0)
 ;
"RTN","VPSRPC16",107,0)
ELIG(VPSARR,DFN) ; Eligibily
"RTN","VPSRPC16",108,0)
 N VAEL D ELIG^VADPT
"RTN","VPSRPC16",109,0)
 N VAL
"RTN","VPSRPC16",110,0)
 S VAL=$P($G(VAEL(6)),U,2) D SET(.VPSARR,2,DFN,391,VAL) ; Patient Type
"RTN","VPSRPC16",111,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.381,"E") D SET(.VPSARR,2,DFN,.381,VAL) ;Eligibility for Medicare
"RTN","VPSRPC16",112,0)
 ;
"RTN","VPSRPC16",113,0)
 ; --- Primary Eligibility Code
"RTN","VPSRPC16",114,0)
 N PELIG S PELIG=$P($G(VAEL(1)),U)
"RTN","VPSRPC16",115,0)
 S VAL=$P($G(VAEL(1)),U,2) D SET(.VPSARR,2,DFN,.361,VAL)
"RTN","VPSRPC16",116,0)
 ;
"RTN","VPSRPC16",117,0)
 S VAL=$P($G(VAEL(5,1)),U) D SET(.VPSARR,2,DFN,.152,VAL) ;InEligible Date
"RTN","VPSRPC16",118,0)
 S VAL=$P($G(VAEL(8)),U,2) D SET(.VPSARR,2,DFN,.3611,VAL) ;Eligibility Status
"RTN","VPSRPC16",119,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3612,"I") D SET(.VPSARR,2,DFN,.3612,VAL) ; Eligibility Status Date
"RTN","VPSRPC16",120,0)
 S VAL=$P($G(VAEL(9)),U,2) D SET(.VPSARR,2,DFN,.14,VAL) ; Means Test Status
"RTN","VPSRPC16",121,0)
 ;
"RTN","VPSRPC16",122,0)
 ; --- Secondary Eligibility codes
"RTN","VPSRPC16",123,0)
 N ELIG,ELIGNAM S ELIG=0
"RTN","VPSRPC16",124,0)
 F  S ELIG=$O(^DPT("AEL",DFN,ELIG)) Q:'ELIG  D
"RTN","VPSRPC16",125,0)
 . I ELIG'=PELIG S ELIGNAM=$$GET1^DIQ(8,ELIG_",",.01) D SET(.VPSARR,8,DFN_";"_ELIG,.01,ELIGNAM,"SECONDARY ELIGIBILITY CODE")
"RTN","VPSRPC16",126,0)
 ;
"RTN","VPSRPC16",127,0)
 ; --- Annual Mean Test
"RTN","VPSRPC16",128,0)
 N MTIEN S MTIEN=$O(^DGMT(408.31,"C",DFN,0))
"RTN","VPSRPC16",129,0)
 I MTIEN S VAL=$$GET1^DIQ(408.31,MTIEN_",",.2,"E") D SET(.VPSARR,408.31,DFN_";"_MTIEN,.2,VAL) ; HARDSHIP?
"RTN","VPSRPC16",130,0)
 QUIT
"RTN","VPSRPC16",131,0)
 ;
"RTN","VPSRPC16",132,0)
ENR(VPSARR,DFN) ; Enrollment
"RTN","VPSRPC16",133,0)
 N ENRIEN S ENRIEN=$O(^DGEN(27.11,"C",DFN,""),-1)
"RTN","VPSRPC16",134,0)
 QUIT:ENRIEN=""
"RTN","VPSRPC16",135,0)
 N DFENR D GET^DGENA(ENRIEN,.DGENR)
"RTN","VPSRPC16",136,0)
 N VAL
"RTN","VPSRPC16",137,0)
 S VAL=$G(DGENR("STATUS")),VAL=$$GET1^DIQ(27.11,ENRIEN_",",.04,"E") D SET(.VPSARR,27.11,DFN_";"_ENRIEN,.04,VAL) ;ENROLLMENT STATUS
"RTN","VPSRPC16",138,0)
 S VAL=$G(DGENR("ELIG","CODE")),VAL=$$GET1^DIQ(27.11,ENRIEN_",",50.01,"E") D SET(.VPSARR,27.11,DFN_";"_ENRIEN,50.01,VAL) ;ELIGIBILITY CODE
"RTN","VPSRPC16",139,0)
 S VAL=$G(DGENR("ELIG","SC")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,50.02,VAL) ;SERVICE CONNECTED
"RTN","VPSRPC16",140,0)
 S VAL=$G(DGENR("ELIG","SCPER")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,50.03,VAL) ;SERVICE CONNECTED PERCENTAGE
"RTN","VPSRPC16",141,0)
 S VAL=$G(DGENR("DATE")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,.1,VAL) ;ENROLLMENT DATE
"RTN","VPSRPC16",142,0)
 S VAL=$G(DGENR("EFFDATE")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,.08,VAL) ;EFFECTIVE DATE
"RTN","VPSRPC16",143,0)
 S VAL=$G(DGENR("PRIORITY")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,.07,VAL) ;ENROLLMENT PRIORITY
"RTN","VPSRPC16",144,0)
 S VAL=$G(DGENR("ELIG","EC")) D SET(.VPSARR,27.11,DFN_";"_ENRIEN,50.13,VAL) ;SOUTH WEST ASIA CONDITION
"RTN","VPSRPC16",145,0)
 ;
"RTN","VPSRPC16",146,0)
 ; -- Enrollment Clinic
"RTN","VPSRPC16",147,0)
 N ENRCLN,ENRDATE,VAL
"RTN","VPSRPC16",148,0)
 N ECLNSEQ S ECLNSEQ=0
"RTN","VPSRPC16",149,0)
 N EDTSEQ S EDTSEQ=0
"RTN","VPSRPC16",150,0)
 ;
"RTN","VPSRPC16",151,0)
 F  S ECLNSEQ=$O(^DPT(DFN,"DE",ECLNSEQ)) QUIT:'ECLNSEQ  D
"RTN","VPSRPC16",152,0)
 . S ENRCLN=$G(^DPT(DFN,"DE",ECLNSEQ,0)) QUIT:ENRCLN=""
"RTN","VPSRPC16",153,0)
 . S VAL=$$GET1^DIQ(2.001,ECLNSEQ_","_DFN_",",.01,"E") ; enrollment clinic
"RTN","VPSRPC16",154,0)
 . D SET(.VPSARR,2.001,DFN_";"_ECLNSEQ,.01,VAL)
"RTN","VPSRPC16",155,0)
 . N VAL S VAL=$$GET1^DIQ(2.001,ECLNSEQ_","_DFN_",",2,"E") ; current status
"RTN","VPSRPC16",156,0)
 . D SET(.VPSARR,2.001,DFN_";"_ECLNSEQ,2,VAL)
"RTN","VPSRPC16",157,0)
 . ;
"RTN","VPSRPC16",158,0)
 . ; -- Enrollment Data
"RTN","VPSRPC16",159,0)
 . S EDTSEQ=0
"RTN","VPSRPC16",160,0)
 . F  S EDTSEQ=$O(^DPT(DFN,"DE",ECLNSEQ,1,EDTSEQ)) Q:'EDTSEQ  D
"RTN","VPSRPC16",161,0)
 . . S ENRDATE=$G(^DPT(DFN,"DE",ECLNSEQ,1,EDTSEQ,0)) QUIT:ENRDATE=""
"RTN","VPSRPC16",162,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",.01,"I") ; Date of Enrollment
"RTN","VPSRPC16",163,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,.01,VAL)
"RTN","VPSRPC16",164,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",1,"E") ; opt or ac
"RTN","VPSRPC16",165,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,1,VAL)
"RTN","VPSRPC16",166,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",2,"E") ; Service
"RTN","VPSRPC16",167,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,2,VAL)
"RTN","VPSRPC16",168,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",3,"I") ; Date of Discharge
"RTN","VPSRPC16",169,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,3,VAL)
"RTN","VPSRPC16",170,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",4,"E") ; Reason of Discharge
"RTN","VPSRPC16",171,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,4,VAL)
"RTN","VPSRPC16",172,0)
 . . S VAL=$$GET1^DIQ(2.011,EDTSEQ_","_ECLNSEQ_","_DFN_",",5,"I") ; Review Date
"RTN","VPSRPC16",173,0)
 . . D SET(.VPSARR,2.011,DFN_";"_ECLNSEQ_";"_EDTSEQ,5,VAL)
"RTN","VPSRPC16",174,0)
 ;
"RTN","VPSRPC16",175,0)
 QUIT
"RTN","VPSRPC16",176,0)
 ;
"RTN","VPSRPC16",177,0)
ADD(VPSARR,DFN) ; Addresses
"RTN","VPSRPC16",178,0)
 N VAPA D ADD^VADPT
"RTN","VPSRPC16",179,0)
 N VAL,TODAY S TODAY=$$DT^XLFDT()
"RTN","VPSRPC16",180,0)
 ;
"RTN","VPSRPC16",181,0)
 S VAL=$P($G(VAPA(9)),U)
"RTN","VPSRPC16",182,0)
 I VAL=""!(TODAY<VAL) D SETPERM(.VPSARR,DFN,.VAPA) QUIT
"RTN","VPSRPC16",183,0)
 ;
"RTN","VPSRPC16",184,0)
 S VAL=$P($G(VAPA(10)),U)
"RTN","VPSRPC16",185,0)
 I VAL=""!(TODAY'>VAL) D SETMP(.VPSARR,DFN,.VAPA) QUIT
"RTN","VPSRPC16",186,0)
 ;
"RTN","VPSRPC16",187,0)
 D SETPERM(.VPSARR,DFN,.VAPA)
"RTN","VPSRPC16",188,0)
 QUIT
"RTN","VPSRPC16",189,0)
 ;
"RTN","VPSRPC16",190,0)
SETPERM(VPSARR,DFN,VAPA) ;  PERM ADDRESS
"RTN","VPSRPC16",191,0)
 N VAL
"RTN","VPSRPC16",192,0)
 S VAL=$G(VAPA(1)) D SET(.VPSARR,2,DFN,".111",VAL)
"RTN","VPSRPC16",193,0)
 S VAL=$G(VAPA(2)) D SET(.VPSARR,2,DFN,".112",VAL)
"RTN","VPSRPC16",194,0)
 S VAL=$G(VAPA(3)) D SET(.VPSARR,2,DFN,".113",VAL)
"RTN","VPSRPC16",195,0)
 S VAL=$G(VAPA(4)) D SET(.VPSARR,2,DFN,".114",VAL)
"RTN","VPSRPC16",196,0)
 S VAL=$P($G(VAPA(5)),U,2) D SET(.VPSARR,2,DFN,".115",VAL)
"RTN","VPSRPC16",197,0)
 S VAL=$P($G(VAPA(7)),U,2) D SET(.VPSARR,2,DFN,".117",VAL)
"RTN","VPSRPC16",198,0)
 S VAL=$G(VAPA(8)) D SET(.VPSARR,2,DFN,".131",VAL)
"RTN","VPSRPC16",199,0)
 S VAL=$P($G(VAPA(11)),U,2) D SET(.VPSARR,2,DFN,".1112",VAL)
"RTN","VPSRPC16",200,0)
 S VAL=$P($G(VAPA(25)),U,2) D SET(.VPSARR,2,DFN,".1173",VAL)
"RTN","VPSRPC16",201,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1171,"E") D SET(.VPSARR,2,DFN,".1171",VAL)
"RTN","VPSRPC16",202,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1172,"E") D SET(.VPSARR,2,DFN,".1172",VAL)
"RTN","VPSRPC16",203,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.121,"E") D SET(.VPSARR,2,DFN,".121",VAL)
"RTN","VPSRPC16",204,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.132,"E") D SET(.VPSARR,2,DFN,".132",VAL)
"RTN","VPSRPC16",205,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.134,"E") D SET(.VPSARR,2,DFN,".134",VAL)
"RTN","VPSRPC16",206,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.133,"E") D SET(.VPSARR,2,DFN,".133",VAL)
"RTN","VPSRPC16",207,0)
 D SETCONF(.VPSARR,DFN,.VAPA)
"RTN","VPSRPC16",208,0)
 QUIT
"RTN","VPSRPC16",209,0)
 ;
"RTN","VPSRPC16",210,0)
SETMP(VPSARR,DFN,VAPA) ; SET TEMP ADD
"RTN","VPSRPC16",211,0)
 N VAL
"RTN","VPSRPC16",212,0)
 S VAL=$G(VAPA(1)) D SET(.VPSARR,2,DFN,".1211",VAL)
"RTN","VPSRPC16",213,0)
 S VAL=$G(VAPA(2)) D SET(.VPSARR,2,DFN,".1212",VAL)
"RTN","VPSRPC16",214,0)
 S VAL=$G(VAPA(3)) D SET(.VPSARR,2,DFN,".1213",VAL)
"RTN","VPSRPC16",215,0)
 S VAL=$G(VAPA(4)) D SET(.VPSARR,2,DFN,".1214",VAL)
"RTN","VPSRPC16",216,0)
 S VAL=$P($G(VAPA(5)),U,2) D SET(.VPSARR,2,DFN,".1215",VAL)
"RTN","VPSRPC16",217,0)
 S VAL=$P($G(VAPA(7)),U,2) D SET(.VPSARR,2,DFN,".12111",VAL)
"RTN","VPSRPC16",218,0)
 S VAL=$G(VAPA(8)) D SET(.VPSARR,2,DFN,".1219",VAL)
"RTN","VPSRPC16",219,0)
 S VAL=$P($G(VAPA(9)),U,2) D SET(.VPSARR,2,DFN,".1217",VAL)
"RTN","VPSRPC16",220,0)
 S VAL=$P($G(VAPA(10)),U,2) D SET(.VPSARR,2,DFN,".1218",VAL)
"RTN","VPSRPC16",221,0)
 S VAL=$P($G(VAPA(11)),U,2) D SET(.VPSARR,2,DFN,".12112",VAL)
"RTN","VPSRPC16",222,0)
 S VAL=$P($G(VAPA(25)),U,2) D SET(.VPSARR,2,DFN,".1223",VAL)
"RTN","VPSRPC16",223,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1221,"E") D SET(.VPSARR,2,DFN,".1221",VAL)
"RTN","VPSRPC16",224,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1222,"E") D SET(.VPSARR,2,DFN,".1222",VAL)
"RTN","VPSRPC16",225,0)
 ;
"RTN","VPSRPC16",226,0)
 K VAPA S VAPA("P")="" D ADD^VADPT
"RTN","VPSRPC16",227,0)
 D SETPERM(.VPSARR,DFN,.VAPA)
"RTN","VPSRPC16",228,0)
 ;
"RTN","VPSRPC16",229,0)
 QUIT
"RTN","VPSRPC16",230,0)
 ;
"RTN","VPSRPC16",231,0)
SETCONF(VPSARR,DFN,VAPA) ;Confindential address
"RTN","VPSRPC16",232,0)
 N VAL
"RTN","VPSRPC16",233,0)
 S VAL=$G(VAPA(13)) D SET(.VPSARR,2,DFN,".1411",VAL) ; CONFIDENTIAL STREET [LINE 1]
"RTN","VPSRPC16",234,0)
 S VAL=$G(VAPA(14)) D SET(.VPSARR,2,DFN,".1412",VAL) ; CONFIDENTIAL STREET [LINE 2]
"RTN","VPSRPC16",235,0)
 S VAL=$G(VAPA(15)) D SET(.VPSARR,2,DFN,".1413",VAL) ; CONFIDENTIAL STREET [LINE 2]
"RTN","VPSRPC16",236,0)
 S VAL=$G(VAPA(16)) D SET(.VPSARR,2,DFN,".1414",VAL) ; CONFIDENTIAL ADDRESS CITY
"RTN","VPSRPC16",237,0)
 S VAL=$G(VAPA(17)) S VAL=$P(VAL,U,2) D SET(.VPSARR,2,DFN,".1415",VAL) ; CONFIDENTIAL ADDRESS STATE
"RTN","VPSRPC16",238,0)
 S VAL=$G(VAPA(18)) S VAL=$P(VAL,U,2) D SET(.VPSARR,2,DFN,".1416",VAL) ; CONFIDENTIAL ADDRESS ZIP CODE
"RTN","VPSRPC16",239,0)
 S VAL=$G(VAPA(19)) D SET(.VPSARR,2,DFN,".14111",VAL) ; CONFIDENTIAL ADDRESS COUNTY
"RTN","VPSRPC16",240,0)
 S VAL=$G(VAPA(20)) I +VAL D SET(.VPSARR,2,DFN,".1417",+VAL) ; CONFIDENTIAL START DATE
"RTN","VPSRPC16",241,0)
 S VAL=$G(VAPA(21)) I +VAL D SET(.VPSARR,2,DFN,".1418",+VAL) ; CONFIDENTIAL END DATE
"RTN","VPSRPC16",242,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.14105,"E") D SET(.VPSARR,2,DFN,".14105",VAL) ; CONFIDENTIAL ADDRESS ACTIVE?
"RTN","VPSRPC16",243,0)
 S VAL=$P($G(VAPA(28)),U,2) D SET(.VPSARR,2,DFN,".14116",VAL) ; CONFIDENTIAL ADDRESS COUNTRY
"RTN","VPSRPC16",244,0)
 S VAL=$G(VAPA(29)) D SET(.VPSARR,2,DFN,".1315",VAL) ; CONFIDENTIAL PHONE NUMBER
"RTN","VPSRPC16",245,0)
 ;
"RTN","VPSRPC16",246,0)
 ; -- Confidential Address categories
"RTN","VPSRPC16",247,0)
 N TYP S TYP=0
"RTN","VPSRPC16",248,0)
 F  S TYP=$O(VAPA(22,TYP)) Q:'TYP  D
"RTN","VPSRPC16",249,0)
 . S VAL=$P(VAPA(22,TYP),U,2)
"RTN","VPSRPC16",250,0)
 . D SET(.VPSARR,2.141,DFN_";"_TYP,".01",VAL) ; CONFIDENTIAL ADDRESS CATEGORY
"RTN","VPSRPC16",251,0)
 ;
"RTN","VPSRPC16",252,0)
 QUIT
"RTN","VPSRPC16",253,0)
 ;
"RTN","VPSRPC16",254,0)
OAD(VPSARR,DFN) ; Other Patient Variables
"RTN","VPSRPC16",255,0)
 N VAL,VAOA S VAOA("A")=7 D OAD^VADPT    ; NOK
"RTN","VPSRPC16",256,0)
 S VAL=$G(VAOA(1)) D SET(.VPSARR,2,DFN,".213",VAL)
"RTN","VPSRPC16",257,0)
 S VAL=$G(VAOA(2)) D SET(.VPSARR,2,DFN,".214",VAL)
"RTN","VPSRPC16",258,0)
 S VAL=$G(VAOA(3)) D SET(.VPSARR,2,DFN,".215",VAL)
"RTN","VPSRPC16",259,0)
 S VAL=$G(VAOA(4)) D SET(.VPSARR,2,DFN,".216",VAL)
"RTN","VPSRPC16",260,0)
 S VAL=$P(VAOA(5),U,2) D SET(.VPSARR,2,DFN,".217",VAL)
"RTN","VPSRPC16",261,0)
 S VAL=$G(VAOA(11)) S VAL=$P(VAL,U,2) D SET(.VPSARR,2,DFN,".2207",VAL)
"RTN","VPSRPC16",262,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".219",VAL)
"RTN","VPSRPC16",263,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".211",VAL)
"RTN","VPSRPC16",264,0)
 S VAL=$G(VAOA(10)) D SET(.VPSARR,2,DFN,".212",VAL)
"RTN","VPSRPC16",265,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.21011,"E") D SET(.VPSARR,2,DFN,".21011",VAL)
"RTN","VPSRPC16",266,0)
 ;
"RTN","VPSRPC16",267,0)
 K VAOA S VAOA("A")=3 D OAD^VADPT    ; Second NOK
"RTN","VPSRPC16",268,0)
 S VAL=$G(VAOA(1)) D SET(.VPSARR,2,DFN,".2193",VAL)
"RTN","VPSRPC16",269,0)
 S VAL=$G(VAOA(2)) D SET(.VPSARR,2,DFN,".2194",VAL)
"RTN","VPSRPC16",270,0)
 S VAL=$G(VAOA(3)) D SET(.VPSARR,2,DFN,".2195",VAL)
"RTN","VPSRPC16",271,0)
 S VAL=$G(VAOA(4)) D SET(.VPSARR,2,DFN,".2196",VAL)
"RTN","VPSRPC16",272,0)
 S VAL=$P($G(VAOA(5)),U,2) D SET(.VPSARR,2,DFN,".2197",VAL)
"RTN","VPSRPC16",273,0)
 S VAL=$G(VAOA(11)) S VAL=$P(VAL,U,2) D SET(.VPSARR,2,DFN,".2203",VAL)
"RTN","VPSRPC16",274,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".2199",VAL)
"RTN","VPSRPC16",275,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".2191",VAL)
"RTN","VPSRPC16",276,0)
 S VAL=$G(VAOA(10)) D SET(.VPSARR,2,DFN,".2192",VAL)
"RTN","VPSRPC16",277,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.211011,"E") D SET(.VPSARR,2,DFN,".211011",VAL)
"RTN","VPSRPC16",278,0)
 ;
"RTN","VPSRPC16",279,0)
 K VAOA S VAOA("A")=1 D OAD^VADPT    ; Emergency Contact
"RTN","VPSRPC16",280,0)
 S VAL=$G(VAOA(1)) D SET(.VPSARR,2,DFN,".333",VAL)
"RTN","VPSRPC16",281,0)
 S VAL=$G(VAOA(2)) D SET(.VPSARR,2,DFN,".334",VAL)
"RTN","VPSRPC16",282,0)
 S VAL=$G(VAOA(3)) D SET(.VPSARR,2,DFN,".335",VAL)
"RTN","VPSRPC16",283,0)
 S VAL=$G(VAOA(4)) D SET(.VPSARR,2,DFN,".336",VAL)
"RTN","VPSRPC16",284,0)
 S VAL=$P($G(VAOA(5)),U,2) D SET(.VPSARR,2,DFN,".337",VAL)
"RTN","VPSRPC16",285,0)
 S VAL=$P($G(VAOA(11)),U,2) D SET(.VPSARR,2,DFN,".2201",VAL)
"RTN","VPSRPC16",286,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".339",VAL)
"RTN","VPSRPC16",287,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".331",VAL)
"RTN","VPSRPC16",288,0)
 S VAL=$G(VAOA(10)) D SET(.VPSARR,2,DFN,".332",VAL)
"RTN","VPSRPC16",289,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.33011,"E") D SET(.VPSARR,2,DFN,".33011",VAL)
"RTN","VPSRPC16",290,0)
 ;
"RTN","VPSRPC16",291,0)
 K VAOA S VAOA("A")=4 D OAD^VADPT    ; Second Emergency Contact
"RTN","VPSRPC16",292,0)
 S VAL=$G(VAOA(1)) D SET(.VPSARR,2,DFN,".3313",VAL)
"RTN","VPSRPC16",293,0)
 S VAL=$G(VAOA(2)) D SET(.VPSARR,2,DFN,".3314",VAL)
"RTN","VPSRPC16",294,0)
 S VAL=$G(VAOA(3)) D SET(.VPSARR,2,DFN,".3315",VAL)
"RTN","VPSRPC16",295,0)
 S VAL=$G(VAOA(4)) D SET(.VPSARR,2,DFN,".3316",VAL)
"RTN","VPSRPC16",296,0)
 S VAL=$P($G(VAOA(5)),U,2) D SET(.VPSARR,2,DFN,".3317",VAL)
"RTN","VPSRPC16",297,0)
 S VAL=$P($G(VAOA(11)),U,2) D SET(.VPSARR,2,DFN,".2204",VAL)
"RTN","VPSRPC16",298,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".3319",VAL)
"RTN","VPSRPC16",299,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".3311",VAL)
"RTN","VPSRPC16",300,0)
 S VAL=$G(VAOA(10)) D SET(.VPSARR,2,DFN,".3312",VAL)
"RTN","VPSRPC16",301,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.331011,"E") D SET(.VPSARR,2,DFN,".331011",VAL)
"RTN","VPSRPC16",302,0)
 ;
"RTN","VPSRPC16",303,0)
 K VAOA S VAOA("A")=5 D OAD^VADPT    ; Patient Employer
"RTN","VPSRPC16",304,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".3119",VAL)
"RTN","VPSRPC16",305,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".3111",VAL)
"RTN","VPSRPC16",306,0)
 ;
"RTN","VPSRPC16",307,0)
 N VAPD D OPD^VADPT
"RTN","VPSRPC16",308,0)
 S VAL=$P($G(VAPD(7)),U,2) D SET(.VPSARR,2,DFN,".31115",VAL)
"RTN","VPSRPC16",309,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.31116,"E") D SET(.VPSARR,2,DFN,".31116",VAL)
"RTN","VPSRPC16",310,0)
 ;
"RTN","VPSRPC16",311,0)
 K VAOA S VAOA("A")=6 D OAD^VADPT    ; Spouse's Employer
"RTN","VPSRPC16",312,0)
 S VAL=$G(VAOA(8)) D SET(.VPSARR,2,DFN,".258",VAL)
"RTN","VPSRPC16",313,0)
 S VAL=$G(VAOA(9)) D SET(.VPSARR,2,DFN,".251",VAL)
"RTN","VPSRPC16",314,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.2515,"E") D SET(.VPSARR,2,DFN,".2515",VAL)
"RTN","VPSRPC16",315,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.2516,"E") D SET(.VPSARR,2,DFN,".2516",VAL)
"RTN","VPSRPC16",316,0)
 ;
"RTN","VPSRPC16",317,0)
 QUIT
"RTN","VPSRPC16",318,0)
 ;
"RTN","VPSRPC16",319,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC16",320,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),6) ;Set line item to output array
"RTN","VPSRPC16",321,0)
 QUIT
"RTN","VPSRPC26")
0^12^B117511203
"RTN","VPSRPC26",1,0)
VPSRPC26  ;BPOIFO/EL,SLOIFO/BT - Patient Demographic (continue);07/31/14 13:07
"RTN","VPSRPC26",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;Jul 31, 2014;Build 27
"RTN","VPSRPC26",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSRPC26",4,0)
 ;
"RTN","VPSRPC26",5,0)
 ; External Reference DBIA#
"RTN","VPSRPC26",6,0)
 ; ------------------------
"RTN","VPSRPC26",7,0)
 ; #2056  - DIQ call              (Supported)
"RTN","VPSRPC26",8,0)
 ; #2701  - MPIF001 call          (Supported)
"RTN","VPSRPC26",9,0)
 ; #3860  - DGPFAPI call          (Controlled Sub)
"RTN","VPSRPC26",10,0)
 ; #4289  - PRCAHV call           (Controlled Sub)
"RTN","VPSRPC26",11,0)
 ; #4419  - IBBAPI call           (Supported)
"RTN","VPSRPC26",12,0)
 ; #4425  - ^DGS( references      (Controlled Sub)
"RTN","VPSRPC26",13,0)
 ; #4462  - $$GETSHAD^DGUTL3      (Supported)
"RTN","VPSRPC26",14,0)
 ; #4807  - $$RDIS^DGRPDB         (Supported)
"RTN","VPSRPC26",15,0)
 ; #6107  - PCDETAIL^ORWPT1 call  (Controlled Sub)
"RTN","VPSRPC26",16,0)
 ; #10035 - ^DPT( references      (Supported)
"RTN","VPSRPC26",17,0)
 ; #10103 - XLFDT call            (Supported)
"RTN","VPSRPC26",18,0)
 ; #10147 - $$RXST^IBARXEU        (Supported)
"RTN","VPSRPC26",19,0)
 QUIT
"RTN","VPSRPC26",20,0)
 ;
"RTN","VPSRPC26",21,0)
IBB(VPSARR,DFN) ; Insurance Info
"RTN","VPSRPC26",22,0)
 N VPSIBB,VPSIBFLD S VPSIBFLD="1,10,11,13,14,21"
"RTN","VPSRPC26",23,0)
 N VAL S VAL=$$INSUR^IBBAPI(DFN,,"ABR",.VPSIBB,VPSIBFLD)
"RTN","VPSRPC26",24,0)
 QUIT:VAL'>0
"RTN","VPSRPC26",25,0)
 ;
"RTN","VPSRPC26",26,0)
 N VPSFL,VPSIEN
"RTN","VPSRPC26",27,0)
 N SEQ S SEQ=""
"RTN","VPSRPC26",28,0)
 ;
"RTN","VPSRPC26",29,0)
 F  S SEQ=$O(VPSIBB("IBBAPI","INSUR",SEQ)) Q:SEQ=""  D
"RTN","VPSRPC26",30,0)
 . S VPSFL="2.312",VPSIEN=DFN_";"_SEQ
"RTN","VPSRPC26",31,0)
 . ; Insurance Company Name
"RTN","VPSRPC26",32,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,1))
"RTN","VPSRPC26",33,0)
 . S VAL=$P(VAL,U,2) D SET(.VPSARR,36,VPSIEN,.01,VAL)
"RTN","VPSRPC26",34,0)
 . ; Policy Effective Date
"RTN","VPSRPC26",35,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,10))
"RTN","VPSRPC26",36,0)
 . D SET(.VPSARR,VPSFL,VPSIEN,8,VAL)
"RTN","VPSRPC26",37,0)
 . ; Policy Expiration Date
"RTN","VPSRPC26",38,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,11))
"RTN","VPSRPC26",39,0)
 . D SET(.VPSARR,VPSFL,VPSIEN,3,VAL)
"RTN","VPSRPC26",40,0)
 . ; Subscribe Name
"RTN","VPSRPC26",41,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,13))
"RTN","VPSRPC26",42,0)
 . D SET(.VPSARR,VPSFL,VPSIEN,17,VAL)
"RTN","VPSRPC26",43,0)
 . ; Subscribe ID
"RTN","VPSRPC26",44,0)
 . S VAL=$G(VPSIBB("IBBAPI","INSUR",SEQ,14))
"RTN","VPSRPC26",45,0)
 . D SET(.VPSARR,VPSFL,VPSIEN,1,VAL)
"RTN","VPSRPC26",46,0)
 ;
"RTN","VPSRPC26",47,0)
 QUIT
"RTN","VPSRPC26",48,0)
 ;
"RTN","VPSRPC26",49,0)
REC(VPSARR,DFN) ; Patient Record Flag
"RTN","VPSRPC26",50,0)
 N PRF,NPRF,PRFFIL,PRFLAG,VAL
"RTN","VPSRPC26",51,0)
 S NPRF=$$GETACT^DGPFAPI(DFN,"VPSREC") ;Retrieve all ACTIVE Patient record flag assignments
"RTN","VPSRPC26",52,0)
 ;
"RTN","VPSRPC26",53,0)
 ; Store all Patient Record Flags and Assigment Narratives into result array (VPSARR)
"RTN","VPSRPC26",54,0)
 F PRF=1:1:NPRF D
"RTN","VPSRPC26",55,0)
 . ;store flag type
"RTN","VPSRPC26",56,0)
 . S VAL=$P(VPSREC(PRF,"FLAGTYPE"),U,2)
"RTN","VPSRPC26",57,0)
 . S PRFLAG=$P(VPSREC(PRF,"FLAG"),U)
"RTN","VPSRPC26",58,0)
 . I VAL'="",PRFLAG'="" D
"RTN","VPSRPC26",59,0)
 . . S PRFFIL=$P($P(PRFLAG,"DGPF(",2),",")
"RTN","VPSRPC26",60,0)
 . . I PRFFIL'="" D SET(.VPSARR,PRFFIL,DFN,".03",VAL,"FLAG TYPE")
"RTN","VPSRPC26",61,0)
 . ;store flag name
"RTN","VPSRPC26",62,0)
 . S VAL=$P(VPSREC(PRF,"FLAG"),U,2) D SET(.VPSARR,"26.13",DFN,".02",VAL)
"RTN","VPSRPC26",63,0)
 . D STNARR(PRF,.VPSREC) ; Store ASSIGNMENT NARRATIVE (word-processing) for this counter
"RTN","VPSRPC26",64,0)
 ;
"RTN","VPSRPC26",65,0)
 QUIT
"RTN","VPSRPC26",66,0)
 ;
"RTN","VPSRPC26",67,0)
STNARR(PRF,VPSREC) ; Store ASSIGNMENT NARRATIVE (word-processing) into result array (VPSARR)
"RTN","VPSRPC26",68,0)
 N VAL,NARRCNT S NARRCNT=""
"RTN","VPSRPC26",69,0)
 F  S NARRCNT=$O(VPSREC(PRF,"NARR",NARRCNT)) Q:NARRCNT=""  D
"RTN","VPSRPC26",70,0)
 . S VAL=$G(VPSREC(PRF,"NARR",NARRCNT,0)) D SET(.VPSARR,"26.132",DFN,".01",VAL)
"RTN","VPSRPC26",71,0)
 QUIT
"RTN","VPSRPC26",72,0)
 ;
"RTN","VPSRPC26",73,0)
DGS(VPSARR,DFN) ; Pre-Registration Audit
"RTN","VPSRPC26",74,0)
 N VPSFL S VPSFL="41.41"
"RTN","VPSRPC26",75,0)
 N DGIEN S DGIEN=$O(^DGS(VPSFL,"ADC",DFN,""),-1)
"RTN","VPSRPC26",76,0)
 D SET(.VPSARR,VPSFL,DFN,1,DGIEN)
"RTN","VPSRPC26",77,0)
 QUIT
"RTN","VPSRPC26",78,0)
 ;
"RTN","VPSRPC26",79,0)
BAL(VPSARR,DFN) ; BALANCE-OWED
"RTN","VPSRPC26",80,0)
 N VPSICN S VPSICN=$$GETICN^MPIF001(DFN)
"RTN","VPSRPC26",81,0)
 N ICN S ICN=$P(VPSICN,"V")
"RTN","VPSRPC26",82,0)
 N VAL,BAL S BAL=$$BALANCE^PRCAHV(.VAL,ICN,"ALL")
"RTN","VPSRPC26",83,0)
 I BAL=1 D SET(.VPSARR,430,DFN,"COMPUTED",VAL,"BALANCE")
"RTN","VPSRPC26",84,0)
 QUIT
"RTN","VPSRPC26",85,0)
 ;
"RTN","VPSRPC26",86,0)
OTH(VPSARR,DFN) ; Other info not in known category
"RTN","VPSRPC26",87,0)
 N VAL
"RTN","VPSRPC26",88,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.323,"E") D SET(.VPSARR,2,DFN,.323,VAL) ;Period of Service
"RTN","VPSRPC26",89,0)
 S VAL=$$GET1^DIQ(2,DFN_",",1100.01,"E") D SET(.VPSARR,2,DFN,1100.01,VAL) ; Fugitive Felon Flag
"RTN","VPSRPC26",90,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.109,"E") D SET(.VPSARR,2,DFN,.109,VAL) ; Exclude From Facility DIRECTORY?
"RTN","VPSRPC26",91,0)
 S VAL=$$GET1^DIQ(2,DFN_",",63,"E") D SET(.VPSARR,2,DFN,63,VAL) ; Laboratory Reference
"RTN","VPSRPC26",92,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.305,"E") D SET(.VPSARR,2,DFN,.305,VAL) ; Unemployable
"RTN","VPSRPC26",93,0)
 QUIT
"RTN","VPSRPC26",94,0)
 ;
"RTN","VPSRPC26",95,0)
POW(VPSARR,DFN) ; POW information
"RTN","VPSRPC26",96,0)
 N VAL
"RTN","VPSRPC26",97,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.525,"E") D SET(.VPSARR,2,DFN,".525",VAL) ; POW Status Indicated?
"RTN","VPSRPC26",98,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.526,"E") D SET(.VPSARR,2,DFN,".526",VAL) ; POW Confinement Location
"RTN","VPSRPC26",99,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.527,"I") D SET(.VPSARR,2,DFN,".527",VAL) ; POW From Date
"RTN","VPSRPC26",100,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.528,"I") D SET(.VPSARR,2,DFN,".528",VAL) ; POW Through Date
"RTN","VPSRPC26",101,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.529,"I") D SET(.VPSARR,2,DFN,".529",VAL) ; POW Status Verified
"RTN","VPSRPC26",102,0)
 QUIT
"RTN","VPSRPC26",103,0)
 ;
"RTN","VPSRPC26",104,0)
PH(VPSARR,DFN) ; Store PURPLE HEART
"RTN","VPSRPC26",105,0)
 N VAL
"RTN","VPSRPC26",106,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.531,"E") D SET(.VPSARR,2,DFN,".531",VAL) ; Current PH Indicator
"RTN","VPSRPC26",107,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.532,"E") D SET(.VPSARR,2,DFN,".532",VAL) ; Current PH Status
"RTN","VPSRPC26",108,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.533,"E") D SET(.VPSARR,2,DFN,".533",VAL) ; Current PH Remarks
"RTN","VPSRPC26",109,0)
 QUIT
"RTN","VPSRPC26",110,0)
 ;
"RTN","VPSRPC26",111,0)
MP(VPSARR,DFN) ; Store Missing Person
"RTN","VPSRPC26",112,0)
 N VAL S VAL=$$GET1^DIQ(2,DFN_",",.153,"I") D SET(.VPSARR,2,DFN,.153,VAL) ; Missing Person Date
"RTN","VPSRPC26",113,0)
 ;
"RTN","VPSRPC26",114,0)
 N WP S WP=$$GET1^DIQ(2,DFN_",",.16,"","WP") ; Missing or ineligible
"RTN","VPSRPC26",115,0)
 N SEQ S SEQ=0 S VAL=""
"RTN","VPSRPC26",116,0)
 F  S SEQ=$O(WP(SEQ)) QUIT:'SEQ  S VAL=VAL_" "_WP(SEQ)
"RTN","VPSRPC26",117,0)
 D SET(.VPSARR,2,DFN,.16,VAL)
"RTN","VPSRPC26",118,0)
 ;
"RTN","VPSRPC26",119,0)
 N INE S INE=$G(^DPT(DFN,"INE"))
"RTN","VPSRPC26",120,0)
 QUIT:INE=""
"RTN","VPSRPC26",121,0)
 S VAL=$P(INE,U,7) D SET(.VPSARR,2,DFN,".1657",VAL) ; Missing Person TWX Source
"RTN","VPSRPC26",122,0)
 S VAL=$P(INE,U,8) D SET(.VPSARR,2,DFN,".1658",VAL) ; Missing Person TWX City
"RTN","VPSRPC26",123,0)
 S VAL=$P(INE,U,9) D SET(.VPSARR,2,DFN,".1659",VAL) ; Missing Person TWX State
"RTN","VPSRPC26",124,0)
 QUIT
"RTN","VPSRPC26",125,0)
 ;
"RTN","VPSRPC26",126,0)
SVC(VPSARR,DFN) ; Store Service Connected and Rated Disabilities
"RTN","VPSRPC26",127,0)
 N VAL
"RTN","VPSRPC26",128,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3012,"I") D SET(.VPSARR,2,DFN,.3012,VAL) ; SC Award Date
"RTN","VPSRPC26",129,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3014,"I") D SET(.VPSARR,2,DFN,.3014,VAL) ; Effective Date Combine SC% EVAL
"RTN","VPSRPC26",130,0)
 ;
"RTN","VPSRPC26",131,0)
 N DGARR S VAL=$$RDIS^DGRPDB(DFN,.DGARR)
"RTN","VPSRPC26",132,0)
 N SEQ S SEQ=0
"RTN","VPSRPC26",133,0)
 F  S SEQ=$O(DGARR(SEQ)) QUIT:'SEQ  D
"RTN","VPSRPC26",134,0)
 . S VAL=$P(DGARR(SEQ),U,2) D SET(.VPSARR,2.04,DFN,2,VAL) ; Disability %
"RTN","VPSRPC26",135,0)
 . S VAL=$P(DGARR(SEQ),U,3),VAL=$S(VAL=1:"YES",1:"NO") D SET(.VPSARR,2.04,DFN,3,VAL) ; Service Connected
"RTN","VPSRPC26",136,0)
 . S VAL=$P(DGARR(SEQ),U,4),VAL=$$GETXAFF(VAL) D SET(.VPSARR,2.04,DFN,4,VAL) ; Extremity Affected
"RTN","VPSRPC26",137,0)
 . S VAL=$P(DGARR(SEQ),U,5) D SET(.VPSARR,2.04,DFN,5,VAL) ; Original Effective Date
"RTN","VPSRPC26",138,0)
 . S VAL=$P(DGARR(SEQ),U,6) D SET(.VPSARR,2.04,DFN,6,VAL) ; Current Effective Date
"RTN","VPSRPC26",139,0)
 ;
"RTN","VPSRPC26",140,0)
 ;Flags/Environment Indicators
"RTN","VPSRPC26",141,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32102,"E") D SET(.VPSARR,2,DFN,.32102,VAL) ; Agent Orange Exposure Indicated
"RTN","VPSRPC26",142,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32107,"I") D SET(.VPSARR,2,DFN,.32107,VAL) ; Agent Orange Registration Date
"RTN","VPSRPC26",143,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32109,"I") D SET(.VPSARR,2,DFN,.32109,VAL) ; Agent Orange Examination Date
"RTN","VPSRPC26",144,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32103,"E") D SET(.VPSARR,2,DFN,.32103,VAL) ; Radiation Exposure Indicated
"RTN","VPSRPC26",145,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.32111,"E") D SET(.VPSARR,2,DFN,.32111,VAL) ; Radiation Registration Date
"RTN","VPSRPC26",146,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3212,"E") D SET(.VPSARR,2,DFN,.3212,VAL) ; Radiation Exposure Method
"RTN","VPSRPC26",147,0)
 S VAL=$$GETSHAD^DGUTL3(DFN),VAL=$S(VAL=1:"YES",1:"NO") D SET(.VPSARR,2,DFN,.32115,VAL) ; Proj 112/shad
"RTN","VPSRPC26",148,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.5291,"E") D SET(.VPSARR,2,DFN,.5291,VAL) ; Combat Service Indicated
"RTN","VPSRPC26",149,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.5293,"I") D SET(.VPSARR,2,DFN,.5293,VAL) ; Combat from date
"RTN","VPSRPC26",150,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.5294,"I") D SET(.VPSARR,2,DFN,.5294,VAL) ; Combat to Date
"RTN","VPSRPC26",151,0)
 QUIT
"RTN","VPSRPC26",152,0)
 ;
"RTN","VPSRPC26",153,0)
GETXAFF(VAL) ; Get external value of Extremity Affected
"RTN","VPSRPC26",154,0)
 QUIT:VAL="BL" "BOTH LOWER"
"RTN","VPSRPC26",155,0)
 QUIT:VAL="BU" "BOTH UPPER"
"RTN","VPSRPC26",156,0)
 QUIT:VAL="RL" "RIGHT LOWER"
"RTN","VPSRPC26",157,0)
 QUIT:VAL="RU" "RIGHT UPPER"
"RTN","VPSRPC26",158,0)
 QUIT:VAL="LL" "LEFT LOWER"
"RTN","VPSRPC26",159,0)
 QUIT:VAL="LU" "LEFT UPPER"
"RTN","VPSRPC26",160,0)
 QUIT ""
"RTN","VPSRPC26",161,0)
 ;
"RTN","VPSRPC26",162,0)
CHG(VPSARR,DFN) ; Store Change DT/TM fields
"RTN","VPSRPC26",163,0)
 N VAL
"RTN","VPSRPC26",164,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.118,"I") D SET(.VPSARR,2,DFN,".118",VAL) ;Address Change DT/TM
"RTN","VPSRPC26",165,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.12113,"I") D SET(.VPSARR,2,DFN,".12113",VAL) ;Temp Address Change DT/TM
"RTN","VPSRPC26",166,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.14112,"I") D SET(.VPSARR,2,DFN,".14112",VAL) ; CONFIDENTIAL ADDRESS CHANGE DT/TM
"RTN","VPSRPC26",167,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.1312,"I") D SET(.VPSARR,2,DFN,".1312",VAL) ; Pager Number Change DT/TM
"RTN","VPSRPC26",168,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.136,"I") D SET(.VPSARR,2,DFN,".136",VAL) ; Email Address Change DT/TM
"RTN","VPSRPC26",169,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.139,"I") D SET(.VPSARR,2,DFN,".139",VAL) ; CELLULAR NUMBER CHANGE DATE/TIME
"RTN","VPSRPC26",170,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.33012,"I") D SET(.VPSARR,2,DFN,".33012",VAL) ; E-Contact Change DT/TM
"RTN","VPSRPC26",171,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.33112,"I") D SET(.VPSARR,2,DFN,".33112",VAL) ; E2-Contact Change DT/TM
"RTN","VPSRPC26",172,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.3412,"I") D SET(.VPSARR,2,DFN,".3412",VAL) ; Designee Change DT/TM
"RTN","VPSRPC26",173,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.21012,"I") D SET(.VPSARR,2,DFN,".21012",VAL) ; PRIMARY NOK CHANGE DATE/TIME
"RTN","VPSRPC26",174,0)
 S VAL=$$GET1^DIQ(2,DFN_",",.211012,"I") D SET(.VPSARR,2,DFN,".211012",VAL) ; SECONDARY NOK CHANGE DATE/TIME
"RTN","VPSRPC26",175,0)
 QUIT
"RTN","VPSRPC26",176,0)
 ;
"RTN","VPSRPC26",177,0)
BLPAT(VPSARR,DFN) ; Store Billing Patient
"RTN","VPSRPC26",178,0)
 N BP S BP=+$$RXST^IBARXEU(DFN)
"RTN","VPSRPC26",179,0)
 QUIT:BP=-1
"RTN","VPSRPC26",180,0)
 N VAL S VAL=$S(BP=0:"NON-EXEMPT",1:"EXEMPT") D SET(.VPSARR,354,DFN,"COMPUTED",VAL) ; COPAY INCOME EXEMPTION STATUS
"RTN","VPSRPC26",181,0)
 QUIT
"RTN","VPSRPC26",182,0)
 ;
"RTN","VPSRPC26",183,0)
PCT(VPSARR,DFN) ; Primary Care Team
"RTN","VPSRPC26",184,0)
 N PCTLST D PCDETAIL^ORWPT1(.PCTLST,DFN)
"RTN","VPSRPC26",185,0)
 N REC,FLD,FLDVAL
"RTN","VPSRPC26",186,0)
 N PROVIDER
"RTN","VPSRPC26",187,0)
 N ILST S ILST=0
"RTN","VPSRPC26",188,0)
 ;
"RTN","VPSRPC26",189,0)
 F  S ILST=$O(PCTLST(ILST)) QUIT:'ILST  D
"RTN","VPSRPC26",190,0)
 . S REC=PCTLST(ILST)
"RTN","VPSRPC26",191,0)
 . QUIT:'$F(REC,":")
"RTN","VPSRPC26",192,0)
 . S FLD=$$TRIM^XLFSTR($P(REC,":"))
"RTN","VPSRPC26",193,0)
 . S FLDVAL=$$TRIM^XLFSTR($P(REC,":",2))
"RTN","VPSRPC26",194,0)
 . ;
"RTN","VPSRPC26",195,0)
 . I FLD="Primary Care Team" D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE TEAM NAME")
"RTN","VPSRPC26",196,0)
 . I FLD="Phone" D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE TEAM TELEPHONE NUMBER")
"RTN","VPSRPC26",197,0)
 . ;
"RTN","VPSRPC26",198,0)
 . I FLD="Primary Care Provider" S PROVIDER=1 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE PROVIDER NAME")
"RTN","VPSRPC26",199,0)
 . I FLD="Analog Pager",$G(PROVIDER)=1 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE PROVIDER ANALOG PAGER")
"RTN","VPSRPC26",200,0)
 . I FLD="Digital Pager",$G(PROVIDER)=1 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE PROVIDER DIGITAL PAGER")
"RTN","VPSRPC26",201,0)
 . I FLD="Office Phone",$G(PROVIDER)=1 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE PROVIDER OFFICE PHONE")
"RTN","VPSRPC26",202,0)
 . ;
"RTN","VPSRPC26",203,0)
 . I FLD="Associate Provider" S PROVIDER=2 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ASSOCIATE PROVIDER NAME")
"RTN","VPSRPC26",204,0)
 . I FLD="Analog Pager",$G(PROVIDER)=2 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ASSOCIATE PROVIDER ANALOG PAGER")
"RTN","VPSRPC26",205,0)
 . I FLD="Digital Pager",$G(PROVIDER)=2 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ASSOCIATE PROVIDER DIGITAL PAGER")
"RTN","VPSRPC26",206,0)
 . I FLD="Office Phone",$G(PROVIDER)=2 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ASSOCIATE PROVIDER OFFICE PHONE")
"RTN","VPSRPC26",207,0)
 . ;
"RTN","VPSRPC26",208,0)
 . I FLD="Attending Physician" S PROVIDER=3 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ATTENDING PHYSICIAN NAME")
"RTN","VPSRPC26",209,0)
 . I FLD="Analog Pager",$G(PROVIDER)=3 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ATTENDING PHYSICIAN ANALOG PAGER")
"RTN","VPSRPC26",210,0)
 . I FLD="Digital Pager",$G(PROVIDER)=3 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ATTENDING PHYSICIAN DIGITAL PAGER")
"RTN","VPSRPC26",211,0)
 . I FLD="Office Phone",$G(PROVIDER)=3 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE ATTENDING PHYSICIAN OFFICE PHONE")
"RTN","VPSRPC26",212,0)
 . ; 
"RTN","VPSRPC26",213,0)
 . I FLD="MH Treatment Team" S PROVIDER=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH TEAM")
"RTN","VPSRPC26",214,0)
 . I FLD="MH Treatment Coordinator" S PROVIDER=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH COORDINATOR")
"RTN","VPSRPC26",215,0)
 . I FLD="Analog Pager",$G(PROVIDER)=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH PROVIDER ANALOG PAGER")
"RTN","VPSRPC26",216,0)
 . I FLD="Digital Pager",$G(PROVIDER)=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH PROVIDER DIGITAL PAGER")
"RTN","VPSRPC26",217,0)
 . I FLD="Office Phone",$G(PROVIDER)=4 D SET(.VPSARR,2,DFN,"COMPUTED",FLDVAL,"PRIMARY CARE MENTAL HEALTH PROVIDER OFFICE PHONE")
"RTN","VPSRPC26",218,0)
 QUIT
"RTN","VPSRPC26",219,0)
 ;
"RTN","VPSRPC26",220,0)
SET(VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,VPSDS) ;Set line item to output array
"RTN","VPSRPC26",221,0)
 I VPSDA'="" D SET^VPSRPC1(.VPSARR,VPSFL,VPSIEN,VPSFLD,VPSDA,$G(VPSDS),6) ;Set line item to output array
"RTN","VPSRPC26",222,0)
 QUIT
"RTN","VPSWRIST")
0^3^B3394620
"RTN","VPSWRIST",1,0)
VPSWRIST ;DALOIFO/GT,SLOIFO/BT - PATIENT WRISTBAND LABEL RPC;07/15/14 15:08
"RTN","VPSWRIST",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**4**;MAR 13,2013;Build 27
"RTN","VPSWRIST",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSWRIST",4,0)
 ;
"RTN","VPSWRIST",5,0)
 ; External Reference DBIA#
"RTN","VPSWRIST",6,0)
 ; ------------------------
"RTN","VPSWRIST",7,0)
 ; #10061 - VADPT call                       (Supported)
"RTN","VPSWRIST",8,0)
 ; #10035 - ^DPT( references                 (Supported)
"RTN","VPSWRIST",9,0)
 ; #2119  - OPEN^%ZISUTL, USE^%ZISUTL, CLOSE^%ZISUTL (Supported)
"RTN","VPSWRIST",10,0)
 ; #5905  - SET^DGPWB, $$DIVISION^DGPWB      (Private)
"RTN","VPSWRIST",11,0)
 ;
"RTN","VPSWRIST",12,0)
 QUIT
"RTN","VPSWRIST",13,0)
 ;
"RTN","VPSWRIST",14,0)
PRINT(VPSRSLT,VPSTYP,VPSNUM,VPSIO) ;RPC: VPS PATIENT WRISTBAND PRINT
"RTN","VPSWRIST",15,0)
 ;The Print Patient Wristband option is used to generate a patient wristband with barcoded social security number.  
"RTN","VPSWRIST",16,0)
 ;The wristband will contain the patient name, primary long ID (usually the social security number), date of birth,
"RTN","VPSWRIST",17,0)
 ;religion, and an allergy flag (YES or a blank line for NO).  
"RTN","VPSWRIST",18,0)
 ;
"RTN","VPSWRIST",19,0)
 ;INPUT
"RTN","VPSWRIST",20,0)
 ;   VPSTYP   Patients ID Type - SSN or DFN OR ICN OR VIC/CAC (REQUIRED) 
"RTN","VPSWRIST",21,0)
 ;   VPSNUM   Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSWRIST",22,0)
 ;   VPSIO    Output Device NAME
"RTN","VPSWRIST",23,0)
 ;OUTPUT
"RTN","VPSWRIST",24,0)
 ;   VPSRSLT  0 (Successful)
"RTN","VPSWRIST",25,0)
 ;           -1^Failure Message
"RTN","VPSWRIST",26,0)
 ;
"RTN","VPSWRIST",27,0)
 ; -- Get DFN based on Patient ID Type and Value pair
"RTN","VPSWRIST",28,0)
 S VPSRSLT=$$GETDFN^VPSPRINT($G(VPSTYP),$G(VPSNUM))
"RTN","VPSWRIST",29,0)
 QUIT:+VPSRSLT=-1
"RTN","VPSWRIST",30,0)
 N VPSDFN S VPSDFN=VPSRSLT
"RTN","VPSWRIST",31,0)
 ;
"RTN","VPSWRIST",32,0)
 ; -- Check Input parameters
"RTN","VPSWRIST",33,0)
 N WARD
"RTN","VPSWRIST",34,0)
 S VPSRSLT=$$VALIDATE(VPSDFN,$G(VPSIO),.WARD)
"RTN","VPSWRIST",35,0)
 QUIT:+VPSRSLT=-1
"RTN","VPSWRIST",36,0)
 ;
"RTN","VPSWRIST",37,0)
 ; -- Setup and open handle for output device.
"RTN","VPSWRIST",38,0)
 D OPEN^%ZISUTL("WRISTBAND",VPSIO)
"RTN","VPSWRIST",39,0)
 I POP S VPSRSLT=-1_U_"DEVICE IN USE - TRY AGAIN LATER" QUIT
"RTN","VPSWRIST",40,0)
 ; 
"RTN","VPSWRIST",41,0)
 ; -- Print Wristband 
"RTN","VPSWRIST",42,0)
 D USE^%ZISUTL("WRISTBAND")
"RTN","VPSWRIST",43,0)
 N $ETRAP,$ESTACK S $ETRAP="D ETRAP^VPSWRIST QUIT"
"RTN","VPSWRIST",44,0)
 N DFN S DFN=VPSDFN
"RTN","VPSWRIST",45,0)
 N VPSSSN S VPSSSN=$P(^DPT(DFN,0),U,9)
"RTN","VPSWRIST",46,0)
 D SET^DGPWB ;Requires DFN and WARD and potentially VPSSSN for barcode
"RTN","VPSWRIST",47,0)
 ;
"RTN","VPSWRIST",48,0)
 ; -- close output device
"RTN","VPSWRIST",49,0)
 D CLOSE^%ZISUTL("WRISTBAND")
"RTN","VPSWRIST",50,0)
 ;
"RTN","VPSWRIST",51,0)
 S VPSRSLT=0
"RTN","VPSWRIST",52,0)
 QUIT
"RTN","VPSWRIST",53,0)
 ;
"RTN","VPSWRIST",54,0)
VALIDATE(VPSDFN,VPSIO,WARD) ; Check input parameters
"RTN","VPSWRIST",55,0)
 ;INPUT
"RTN","VPSWRIST",56,0)
 ;   VPSDFN     : PATIENT DFN (Must be valid)
"RTN","VPSWRIST",57,0)
 ;   VPSIO      : Output Device NAME
"RTN","VPSWRIST",58,0)
 ;OUTPUT
"RTN","VPSWRIST",59,0)
 ;   WARD       : WARD (by reference)
"RTN","VPSWRIST",60,0)
 ;RETURN
"RTN","VPSWRIST",61,0)
 ;   successful : ""
"RTN","VPSWRIST",62,0)
 ;   failed     : -1^exception message
"RTN","VPSWRIST",63,0)
 ;
"RTN","VPSWRIST",64,0)
 ;-- Check Device
"RTN","VPSWRIST",65,0)
 N MSG S MSG=$$DEVEXIST^VPSPRINT($G(VPSIO))
"RTN","VPSWRIST",66,0)
 QUIT:+MSG=-1 MSG
"RTN","VPSWRIST",67,0)
 QUIT ""
"RTN","VPSWRIST",68,0)
 ;
"RTN","VPSWRIST",69,0)
ETRAP ; ERROR TRAP during printing wristband label
"RTN","VPSWRIST",70,0)
 S VPSRSLT="-1^"_$$EC^%ZOSV
"RTN","VPSWRIST",71,0)
 D CLOSE^%ZISUTL("WRISTBAND")
"RTN","VPSWRIST",72,0)
 QUIT
"VER")
8.0^22.0
**INSTALL NAME**
VPS*1.0*5
"BLD",9167,0)
VPS*1.0*5^VPS KIOSK^0^3150528^y
"BLD",9167,4,0)
^9.64PA^853.85^5
"BLD",9167,4,853.1,0)
853.1
"BLD",9167,4,853.1,222)
y^y^f^^^^n
"BLD",9167,4,853.8,0)
853.8
"BLD",9167,4,853.8,222)
y^y^f^^^^n
"BLD",9167,4,853.85,0)
853.85
"BLD",9167,4,853.85,222)
y^y^f^^^^n
"BLD",9167,4,853.875,0)
853.875
"BLD",9167,4,853.875,222)
y^y^f^^^^n
"BLD",9167,4,853.9,0)
853.9
"BLD",9167,4,853.9,222)
y^y^f^^^^n
"BLD",9167,4,"B",853.1,853.1)

"BLD",9167,4,"B",853.8,853.8)

"BLD",9167,4,"B",853.85,853.85)

"BLD",9167,4,"B",853.875,853.875)

"BLD",9167,4,"B",853.9,853.9)

"BLD",9167,6.3)
31
"BLD",9167,"ABPKG")
n
"BLD",9167,"KRN",0)
^9.67PA^779.2^20
"BLD",9167,"KRN",.4,0)
.4
"BLD",9167,"KRN",.401,0)
.401
"BLD",9167,"KRN",.402,0)
.402
"BLD",9167,"KRN",.403,0)
.403
"BLD",9167,"KRN",.5,0)
.5
"BLD",9167,"KRN",.84,0)
.84
"BLD",9167,"KRN",3.6,0)
3.6
"BLD",9167,"KRN",3.8,0)
3.8
"BLD",9167,"KRN",9.2,0)
9.2
"BLD",9167,"KRN",9.8,0)
9.8
"BLD",9167,"KRN",9.8,"NM",0)
^9.68A^8^6
"BLD",9167,"KRN",9.8,"NM",2,0)
VPSSEND^^0^B145478731
"BLD",9167,"KRN",9.8,"NM",3,0)
VPSAPPT^^0^B93662117
"BLD",9167,"KRN",9.8,"NM",4,0)
VPSAPPT2^^0^B28951251
"BLD",9167,"KRN",9.8,"NM",6,0)
VPSSRVY2^^0^B15360627
"BLD",9167,"KRN",9.8,"NM",7,0)
VPSSRVY1^^0^B63674041
"BLD",9167,"KRN",9.8,"NM",8,0)
VPSSRVY3^^0^B43073593
"BLD",9167,"KRN",9.8,"NM","B","VPSAPPT",3)

"BLD",9167,"KRN",9.8,"NM","B","VPSAPPT2",4)

"BLD",9167,"KRN",9.8,"NM","B","VPSSEND",2)

"BLD",9167,"KRN",9.8,"NM","B","VPSSRVY1",7)

"BLD",9167,"KRN",9.8,"NM","B","VPSSRVY2",6)

"BLD",9167,"KRN",9.8,"NM","B","VPSSRVY3",8)

"BLD",9167,"KRN",19,0)
19
"BLD",9167,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9167,"KRN",19,"NM",1,0)
VPS KIOSK INTERFACE^^0
"BLD",9167,"KRN",19,"NM","B","VPS KIOSK INTERFACE",1)

"BLD",9167,"KRN",19.1,0)
19.1
"BLD",9167,"KRN",101,0)
101
"BLD",9167,"KRN",409.61,0)
409.61
"BLD",9167,"KRN",771,0)
771
"BLD",9167,"KRN",779.2,0)
779.2
"BLD",9167,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",9167,"KRN",870,0)
870
"BLD",9167,"KRN",870,"NM",0)
^9.68A^^0
"BLD",9167,"KRN",8989.51,0)
8989.51
"BLD",9167,"KRN",8989.52,0)
8989.52
"BLD",9167,"KRN",8994,0)
8994
"BLD",9167,"KRN",8994,"NM",0)
^9.68A^4^4
"BLD",9167,"KRN",8994,"NM",1,0)
VPS GET CHANGED APPOINTMENTS^^0
"BLD",9167,"KRN",8994,"NM",2,0)
VPS GET APPOINTMENTS^^0
"BLD",9167,"KRN",8994,"NM",3,0)
VPS SAVE CLINICAL SURVEY^^0
"BLD",9167,"KRN",8994,"NM",4,0)
VPS GET SURVEY DATA^^0
"BLD",9167,"KRN",8994,"NM","B","VPS GET APPOINTMENTS",2)

"BLD",9167,"KRN",8994,"NM","B","VPS GET CHANGED APPOINTMENTS",1)

"BLD",9167,"KRN",8994,"NM","B","VPS GET SURVEY DATA",4)

"BLD",9167,"KRN",8994,"NM","B","VPS SAVE CLINICAL SURVEY",3)

"BLD",9167,"KRN","B",.4,.4)

"BLD",9167,"KRN","B",.401,.401)

"BLD",9167,"KRN","B",.402,.402)

"BLD",9167,"KRN","B",.403,.403)

"BLD",9167,"KRN","B",.5,.5)

"BLD",9167,"KRN","B",.84,.84)

"BLD",9167,"KRN","B",3.6,3.6)

"BLD",9167,"KRN","B",3.8,3.8)

"BLD",9167,"KRN","B",9.2,9.2)

"BLD",9167,"KRN","B",9.8,9.8)

"BLD",9167,"KRN","B",19,19)

"BLD",9167,"KRN","B",19.1,19.1)

"BLD",9167,"KRN","B",101,101)

"BLD",9167,"KRN","B",409.61,409.61)

"BLD",9167,"KRN","B",771,771)

"BLD",9167,"KRN","B",779.2,779.2)

"BLD",9167,"KRN","B",870,870)

"BLD",9167,"KRN","B",8989.51,8989.51)

"BLD",9167,"KRN","B",8989.52,8989.52)

"BLD",9167,"KRN","B",8994,8994)

"BLD",9167,"QUES",0)
^9.62^^
"BLD",9167,"REQB",0)
^9.611^1^1
"BLD",9167,"REQB",1,0)
VPS*1.0*4^2
"BLD",9167,"REQB","B","VPS*1.0*4",1)

"FIA",853.1)
VPS HL7 SITE PARAMETERS
"FIA",853.1,0)
^VPS(853.1,
"FIA",853.1,0,0)
853.1
"FIA",853.1,0,1)
y^y^f^^^^n
"FIA",853.1,0,10)

"FIA",853.1,0,11)

"FIA",853.1,0,"RLRO")

"FIA",853.1,0,"VR")
1.0^VPS
"FIA",853.1,853.1)
0
"FIA",853.8)
VPS CLINICAL SURVEY
"FIA",853.8,0)
^VPS(853.8,
"FIA",853.8,0,0)
853.8
"FIA",853.8,0,1)
y^y^f^^^^n
"FIA",853.8,0,10)

"FIA",853.8,0,11)

"FIA",853.8,0,"RLRO")

"FIA",853.8,0,"VR")
1.0^VPS
"FIA",853.8,853.8)
0
"FIA",853.8,853.81)
0
"FIA",853.8,853.811)
0
"FIA",853.85)
VPS QUESTIONNAIRE IDENTIFIERS
"FIA",853.85,0)
^VPS(853.85,
"FIA",853.85,0,0)
853.85
"FIA",853.85,0,1)
y^y^f^^^^n
"FIA",853.85,0,10)

"FIA",853.85,0,11)

"FIA",853.85,0,"RLRO")

"FIA",853.85,0,"VR")
1.0^VPS
"FIA",853.85,853.85)
0
"FIA",853.875)
VPS QUESTIONNAIRE NAME
"FIA",853.875,0)
^VPS(853.875,
"FIA",853.875,0,0)
853.875
"FIA",853.875,0,1)
y^y^f^^^^n
"FIA",853.875,0,10)

"FIA",853.875,0,11)

"FIA",853.875,0,"RLRO")

"FIA",853.875,0,"VR")
1.0^VPS
"FIA",853.875,853.875)
0
"FIA",853.9)
VPS APPOINTMENTS QUEUE
"FIA",853.9,0)
^VPS(853.9,
"FIA",853.9,0,0)
853.9
"FIA",853.9,0,1)
y^y^f^^^^n
"FIA",853.9,0,10)

"FIA",853.9,0,11)

"FIA",853.9,0,"RLRO")

"FIA",853.9,0,"VR")
1.0^VPS
"FIA",853.9,853.9)
0
"FIA",853.9,853.91)
0
"IX",853.8,853.8,"G",0)
853.8^G^New index^R^^R^IR^W^853.81^^^^^LS
"IX",853.8,853.8,"G",1)
S ^VPS(853.8,"G",X(1),X(2),DA(1),DA)=""
"IX",853.8,853.8,"G",2)
K ^VPS(853.8,"G",X(1),X(2),DA(1),DA)
"IX",853.8,853.8,"G",2.5)
K ^VPS(853.8,"G")
"IX",853.8,853.8,"G",11.1,0)
^.114IA^2^2
"IX",853.8,853.8,"G",11.1,1,0)
1^F^853.81^2^^1^F
"IX",853.8,853.8,"G",11.1,1,3)

"IX",853.8,853.8,"G",11.1,2,0)
2^F^853.81^7^^2^F
"IX",853.8,853.8,"G",11.1,2,3)

"IX",853.8,853.8,"H",0)
853.8^H^Index for Patient Identifier^R^^F^IR^I^853.8^^^^^LS
"IX",853.8,853.8,"H",1)
S ^VPS(853.8,"H",X,DA)=""
"IX",853.8,853.8,"H",2)
K ^VPS(853.8,"H",X,DA)
"IX",853.8,853.8,"H",2.5)
K ^VPS(853.8,"H")
"IX",853.8,853.8,"H",11.1,0)
^.114IA^1^1
"IX",853.8,853.8,"H",11.1,1,0)
1^F^853.8^.01^^1^F
"IX",853.8,853.8,"H",11.1,1,3)

"IX",853.85,853.85,"B",0)
853.85^B^Survey template ID cross reference to survey name.^R^^F^IR^I^853.85^^^^^LS
"IX",853.85,853.85,"B",1)
S ^VPS(853.85,"B",$E(X,1,60),DA)=""
"IX",853.85,853.85,"B",2)
K ^VPS(853.85,"B",$E(X,1,60),DA)
"IX",853.85,853.85,"B",2.5)
K ^VPS(853.85,"B")
"IX",853.85,853.85,"B",11.1,0)
^.114IA^1^1
"IX",853.85,853.85,"B",11.1,1,0)
1^F^853.85^.01^60^1^F
"IX",853.875,853.875,"B",0)
853.875^B^This cross reference is used to look up what VPS Questionnaires.^R^^F^IR^I^853.875^^^^^LS
"IX",853.875,853.875,"B",1)
S ^VPS(853.875,"B",$E(X,1,70),DA)=""
"IX",853.875,853.875,"B",2)
K ^VPS(853.875,"B",$E(X,1,70),DA)
"IX",853.875,853.875,"B",2.5)
K ^VPS(853.875,"B")
"IX",853.875,853.875,"B",11.1,0)
^.114IA^1^1
"IX",853.875,853.875,"B",11.1,1,0)
1^F^853.875^.01^70^1^F
"IX",853.9,853.9,"CLINIC",0)
853.9^CLINIC^Uniqueness Index for Key 'A' of File #853.9^R^^F^IR^I^853.9^^^^^LS
"IX",853.9,853.9,"CLINIC",1)
S ^VPS(853.9,"CLINIC",X,DA)=""
"IX",853.9,853.9,"CLINIC",2)
K ^VPS(853.9,"CLINIC",X,DA)
"IX",853.9,853.9,"CLINIC",2.5)
K ^VPS(853.9,"CLINIC")
"IX",853.9,853.9,"CLINIC",11.1,0)
^.114IA^1^1
"IX",853.9,853.9,"CLINIC",11.1,1,0)
1^F^853.9^.01^^1
"IX",853.9,853.91,"C",0)
853.91^C^Index of Sub File 853.91 on CLINIC, APPOINTMET DT, PATIENT^R^^R^IR^I^853.91^^^^^LS
"IX",853.9,853.91,"C",.1,0)
^^2^2^3130719^
"IX",853.9,853.91,"C",.1,1,0)
Given Clinic, Appointment Date/Time, and Patient, user can use this index 
"IX",853.9,853.91,"C",.1,2,0)
to retrieve appointment record in the vps appointment queue.
"IX",853.9,853.91,"C",1)
S ^VPS(853.9,DA(1),1,"C",X(1),X(2),X(3),DA)=""
"IX",853.9,853.91,"C",2)
K ^VPS(853.9,DA(1),1,"C",X(1),X(2),X(3),DA)
"IX",853.9,853.91,"C",2.5)
K ^VPS(853.9,DA(1),1,"C")
"IX",853.9,853.91,"C",11.1,0)
^.114IA^3^3
"IX",853.9,853.91,"C",11.1,1,0)
1^F^853.91^.01^^1^F
"IX",853.9,853.91,"C",11.1,1,3)

"IX",853.9,853.91,"C",11.1,2,0)
2^F^853.91^1^^2^F
"IX",853.9,853.91,"C",11.1,2,3)

"IX",853.9,853.91,"C",11.1,3,0)
3^F^853.91^2^^3^F
"IX",853.9,853.91,"C",11.1,3,3)

"KEY",853.9,853.9,"A",0)
853.9^A^P^836
"KEY",853.9,853.9,"A",2,0)
^.312IA^1^1
"KEY",853.9,853.9,"A",2,1,0)
.01^853.9^1
"KEYPTR",853.9,853.9,"A")
853.9^CLINIC
"KRN",19,13051,-1)
0^1
"KRN",19,13051,0)
VPS KIOSK INTERFACE^VPS KIOSK INTERFACE^^B^^^^^^^y^
"KRN",19,13051,1,0)
^19.06^3^3^3141111^^^^
"KRN",19,13051,1,1,0)
The RPCs that support the Vetlink Point of Service (Kiosk) system which
"KRN",19,13051,1,2,0)
will will call upon these RPCs for specific events triggered by the
"KRN",19,13051,1,3,0)
Vetlink patient-facing and staff-facing interfaces.
"KRN",19,13051,10.1)
VPS KIOSK INTERFACE
"KRN",19,13051,99.1)
63378,44177
"KRN",19,13051,"RPC",0)
^19.05P^52^52
"KRN",19,13051,"RPC",1,0)
VPS GET CLINIC
"KRN",19,13051,"RPC",2,0)
VPS GET PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",3,0)
XWB GET VARIABLE VALUE
"KRN",19,13051,"RPC",6,0)
VPS EDIT PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",7,0)
VPS FULLSSN
"KRN",19,13051,"RPC",8,0)
VPS GET DFN
"KRN",19,13051,"RPC",9,0)
VPS GET SITES
"KRN",19,13051,"RPC",10,0)
VPS LAST5
"KRN",19,13051,"RPC",11,0)
VPS PATIENT CHECK-IN
"KRN",19,13051,"RPC",12,0)
VPS PATIENT PRE-REGISTRATION
"KRN",19,13051,"RPC",13,0)
VPS LIST ALL
"KRN",19,13051,"RPC",19,0)
ORWRP PRINT REPORT
"KRN",19,13051,"RPC",21,0)
VPS GET2 PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",23,0)
VPS GET CLINICAL REMINDERS
"KRN",19,13051,"RPC",24,0)
VPS PRINT PATIENT LABEL
"KRN",19,13051,"RPC",25,0)
VPS PATIENT WRISTBAND PRINT
"KRN",19,13051,"RPC",26,0)
VPS ENHANCED GET PATIENT DEMO
"KRN",19,13051,"RPC",32,0)
VPS GET PRINTERS
"KRN",19,13051,"RPC",37,0)
VPS GET ALL CLINICS
"KRN",19,13051,"RPC",38,0)
VPS GET APPOINTMENTS
"KRN",19,13051,"RPC",39,0)
VPS GET CHANGED APPOINTMENTS
"KRN",19,13051,"RPC",40,0)
VPS SAVE CLINICAL SURVEY
"KRN",19,13051,"RPC",41,0)
VPS GET SURVEY DATA
"KRN",19,13051,"RPC",42,0)
VPS GET ALLERGIES
"KRN",19,13051,"RPC",43,0)
VPS GET MRAR PDO
"KRN",19,13051,"RPC",44,0)
VPS GET LAST MRAR
"KRN",19,13051,"RPC",45,0)
VPS UPDATE LAST MRAR TIU IEN
"KRN",19,13051,"RPC",46,0)
VPS WRITE KIOSK PARAMETERS
"KRN",19,13051,"RPC",47,0)
VPS WRITE MRAR PDO
"KRN",19,13051,"RPC",48,0)
TIU SIGN RECORD
"KRN",19,13051,"RPC",49,0)
TIU LONG LIST OF TITLES
"KRN",19,13051,"RPC",50,0)
TIU CREATE RECORD
"KRN",19,13051,"RPC",51,0)
TIU SET DOCUMENT TEXT
"KRN",19,13051,"RPC",52,0)
TIU REQUIRES COSIGNATURE
"KRN",19,13051,"U")
VPS KIOSK INTERFACE
"KRN",8994,3243,-1)
0^2
"KRN",8994,3243,0)
VPS GET APPOINTMENTS^GET^VPSAPPT^4^^^^1^
"KRN",8994,3243,1,0)
^8994.01^1^1^3141027^^^^
"KRN",8994,3243,1,1,0)
This RPC will return appointments for a given data range for a specific Appointment Queue. This RPC will refresh an existing queue with the current appointments and typically need to be called only once a day.
"KRN",8994,3243,2,0)
^8994.02A^3^3
"KRN",8994,3243,2,1,0)
VPSQUEUE^1^3^1^1
"KRN",8994,3243,2,1,1,0)
^8994.021^1^1^3130802^^
"KRN",8994,3243,2,1,1,1,0)
Unique Queue ID representing Vecna Appointment Queue.
"KRN",8994,3243,2,2,0)
VPSFRDT^1^14^1^2
"KRN",8994,3243,2,2,1,0)
^^1^1^3130802^
"KRN",8994,3243,2,2,1,1,0)
Appointment From Date
"KRN",8994,3243,2,3,0)
VPSTODT^1^14^1^3
"KRN",8994,3243,2,3,1,0)
^8994.021^1^1^3141027^^^
"KRN",8994,3243,2,3,1,1,0)
Appointment Through Date
"KRN",8994,3243,2,"B","VPSFRDT",2)

"KRN",8994,3243,2,"B","VPSQUEUE",1)

"KRN",8994,3243,2,"B","VPSTODT",3)

"KRN",8994,3243,2,"PARAMSEQ",1,1)

"KRN",8994,3243,2,"PARAMSEQ",2,2)

"KRN",8994,3243,2,"PARAMSEQ",3,3)

"KRN",8994,3244,-1)
0^1
"KRN",8994,3244,0)
VPS GET CHANGED APPOINTMENTS^GETCHG^VPSAPPT2^4^R^^^1^1
"KRN",8994,3244,1,0)
^8994.01^1^1^3141029^^^
"KRN",8994,3244,1,1,0)
This RPC will only return new, modified, or deleted appointments and should be called periodically by VetLink to update the appointment queue.
"KRN",8994,3244,2,0)
^8994.02A^1^1
"KRN",8994,3244,2,1,0)
VPSQUEUE^1^3^1^1
"KRN",8994,3244,2,1,1,0)
^8994.021^1^1^3141029^^
"KRN",8994,3244,2,1,1,1,0)
Unique Queue ID representing Vecna Appointment Queue.
"KRN",8994,3244,2,"B","VPSQUEUE",1)

"KRN",8994,3244,2,"PARAMSEQ",1,1)

"KRN",8994,3245,-1)
0^3
"KRN",8994,3245,0)
VPS SAVE CLINICAL SURVEY^SAVE^VPSSRVY1^1
"KRN",8994,3245,1,0)
^8994.01^39^39^3141223^^^^
"KRN",8994,3245,1,1,0)
This RPC will return success flag (1) or error flag (-1^error message)
"KRN",8994,3245,1,2,0)
VPSDFN  : Patient IEN
"KRN",8994,3245,1,3,0)
VPSDATA : Array of field-value pair to store
"KRN",8994,3245,1,4,0)
 
"KRN",8994,3245,1,5,0)
   Format : VPSDATA(1..n)=FIELD-NAME^SEQ#^FIELD-VALUE
"KRN",8994,3245,1,6,0)
 
"KRN",8994,3245,1,7,0)
   Example: 
"KRN",8994,3245,1,8,0)
                       Survey Name
"KRN",8994,3245,1,9,0)
            VPSDATA(1) = NAME^^Survey #1  
"KRN",8994,3245,1,10,0)
                       Survey Internal Name
"KRN",8994,3245,1,11,0)
            VPSDATA(2) = INTERNAL^^Survey Internal #1  
"KRN",8994,3245,1,12,0)
                       Questionnaire Template ID
"KRN",8994,3245,1,13,0)
            VPSDATA(3) = TEMPLATE ID^^5     
"KRN",8994,3245,1,14,0)
                       Survey Version
"KRN",8994,3245,1,15,0)
            VPSDATA(4) = VERSION^^10    
"KRN",8994,3245,1,16,0)
                       Date/Time Survey was taken                    
"KRN",8994,3245,1,17,0)
            VPSDATA(5) = DATE/TIME TAKEN^^9/24/2014@093001  
"KRN",8994,3245,1,18,0)
                       Date/Time Survey was modified
"KRN",8994,3245,1,19,0)
            VPSDATA(6) = DATE/TIME MODIFIED^^12/31/2014@153301 
"KRN",8994,3245,1,20,0)
                       Completion STATUS (C=Completed, I=Incomplete)
"KRN",8994,3245,1,21,0)
            VPSDATA(7) = STATUS^^C 
"KRN",8994,3245,1,22,0)
                       DUZ of INTERVIEWER
"KRN",8994,3245,1,23,0)
            VPSDATA(8) = INTERVIEWER^^4667 
"KRN",8994,3245,1,24,0)
                       Patient Safety (N=NO, Y=YES)
"KRN",8994,3245,1,25,0)
            VPSDATA(9) = SAFETY^^Y  
"KRN",8994,3245,1,26,0)
                       Immediate Action (N=NO, Y=YES)                      
"KRN",8994,3245,1,27,0)
            VPSDATA(10)= ACTION^^Y  
"KRN",8994,3245,1,28,0)
                       Survey Calculated Value                       
"KRN",8994,3245,1,29,0)
            The SURVEY CALC field is used to store overall survey 
"KRN",8994,3245,1,30,0)
            calculated values in a delimted string.  The string 
"KRN",8994,3245,1,31,0)
            format is as follows:
"KRN",8994,3245,1,32,0)
 
"KRN",8994,3245,1,33,0)
                        OVERALL SURVEY CALCULATED^CALCULATION LABEL_1;VALUE_1~CALCULATION LABEL_2;VALUE_2~~CALCULATION LABEL_NN;CALCULATION VALUE_NN
"KRN",8994,3245,1,34,0)
                      
"KRN",8994,3245,1,35,0)
             VPSDATA(11)= SURVEY CALC^^435.9^SCORE;89.5~AVG RATE;24~AVG NO COMPLETE;7
"KRN",8994,3245,1,36,0)
OUTPUT
"KRN",8994,3245,1,37,0)
  VPSRES =  1                   (Survey is stored successully)
"KRN",8994,3245,1,38,0)
           -1^Error Message     (Survey is not stored because an Error)
"KRN",8994,3245,1,39,0)
 
"KRN",8994,3245,1,40,0)
LABEL_NN;CALCULATION VALUE_NN
"KRN",8994,3245,1,41,0)
 
"KRN",8994,3245,1,42,0)
                
"KRN",8994,3245,1,43,0)
            VPSDATA(11)= SURVEY CALC^^435.9^SCORE;89.5~AVG RATE;24~AVG 
"KRN",8994,3245,1,44,0)
NO COMPLETE;7"
"KRN",8994,3245,1,45,0)
                       DUZ of survey creator         
"KRN",8994,3245,1,46,0)
            VPSDATA(12)= CREATOR^^45465           
"KRN",8994,3245,1,47,0)
   Multiple Questions
"KRN",8994,3245,1,48,0)
            VPSDATA(13)= QUESTION^1^Enter Your Name:
"KRN",8994,3245,1,49,0)
            VPSDATA(14)= QUESTION^2^Do you feel the doctor qualify?
"KRN",8994,3245,1,50,0)
            VPSDATA(15)= QUESTION^3^Rate visit (1-10) 1=Bad, 10:GREAT?
"KRN",8994,3245,1,51,0)
   Multiple Response
"KRN",8994,3245,1,52,0)
            VPSDATA(16)= RESPONSE^1^MCENROE,JOHN
"KRN",8994,3245,1,53,0)
            VPSDATA(17)= RESPONSE^2^NO
"KRN",8994,3245,1,54,0)
            VPSDATA(18)= RESPONSE^3^5
"KRN",8994,3245,1,55,0)
   Multiple Survey Calculated Values
"KRN",8994,3245,1,56,0)
            VPSDATA(19)= QUESTION CALC^1^Name: John McEnroe
"KRN",8994,3245,1,57,0)
            VPSDATA(20)= QUESTION CALC^2^Dr. Carter is not qualified to 
"KRN",8994,3245,1,58,0)
treat my illness
"KRN",8994,3245,1,59,0)
            VPSDATA(21)= QUESTION CALC^3^I rated my visit as 
"KRN",8994,3245,1,60,0)
unsatisfactory
"KRN",8994,3245,1,61,0)
 
"KRN",8994,3245,1,62,0)
OUTPUT
"KRN",8994,3245,1,63,0)
  VPSRES =  1                   (Survey is stored successully)
"KRN",8994,3245,1,64,0)
           -1^Error Message     (Survey is not stored because an Error)
"KRN",8994,3245,2,0)
^8994.02A^2^2
"KRN",8994,3245,2,1,0)
VPSDFN^1^9^1^1
"KRN",8994,3245,2,1,1,0)
^8994.021^1^1^3140930^^^
"KRN",8994,3245,2,1,1,1,0)
Patient ID (DFN) who enters the Clinical Survey Questionannire 
"KRN",8994,3245,2,2,0)
VPSDATA^2^255^1^2
"KRN",8994,3245,2,2,1,0)
^^1^1^3140930^
"KRN",8994,3245,2,2,1,1,0)
Array of Data containing Clinical Survey Questionnaire to be stored in VistA.
"KRN",8994,3245,2,"B","VPSDATA",2)

"KRN",8994,3245,2,"B","VPSDFN",1)

"KRN",8994,3245,2,"PARAMSEQ",1,1)

"KRN",8994,3245,2,"PARAMSEQ",2,2)

"KRN",8994,3246,-1)
0^4
"KRN",8994,3246,0)
VPS GET SURVEY DATA^GETRPC^VPSSRVY2^4^^^^1
"KRN",8994,3246,1,0)
^8994.01^1^1^3141113^^^
"KRN",8994,3246,1,1,0)
Retrieves an array containing the patient's Clinical Survey information.
"KRN",8994,3246,2,0)
^8994.02A^7^7
"KRN",8994,3246,2,1,0)
VPSPID^1^25^1^1
"KRN",8994,3246,2,1,1,0)
^8994.021^3^3^3141113^^
"KRN",8994,3246,2,1,1,1,0)
Patient ID such as the patient SSN OR DFN OR ICN OR VIC/CAC
"KRN",8994,3246,2,1,1,2,0)
for whom the Clinical Questionnaire information is being
"KRN",8994,3246,2,1,1,3,0)
requested.
"KRN",8994,3246,2,2,0)
VPSQIEN^1^9^^3
"KRN",8994,3246,2,2,1,0)
^8994.021^1^1^3141113^^
"KRN",8994,3246,2,2,1,1,0)
Questionnaire IEN for filtering the results.
"KRN",8994,3246,2,3,0)
VPSQNM^1^60^^4
"KRN",8994,3246,2,3,1,0)
^8994.021^1^1^3141113^^
"KRN",8994,3246,2,3,1,1,0)
Questionnaire Name for filtering the results.
"KRN",8994,3246,2,4,0)
VPSFDT^1^14^^5
"KRN",8994,3246,2,4,1,0)
^8994.021^1^1^3141113^^
"KRN",8994,3246,2,4,1,1,0)
Date From for filtering the results
"KRN",8994,3246,2,5,0)
VPSTDT^1^14^^6
"KRN",8994,3246,2,5,1,0)
^8994.021^1^1^3141113^^
"KRN",8994,3246,2,5,1,1,0)
Date To for filtering the results
"KRN",8994,3246,2,6,0)
VPSNUM^1^4^^7
"KRN",8994,3246,2,6,1,0)
^8994.021^1^1^3141113^^^
"KRN",8994,3246,2,6,1,1,0)
Maxumum number of occurrences to return.
"KRN",8994,3246,2,7,0)
VPSTYP^1^7^1^2
"KRN",8994,3246,2,7,1,0)
^^1^1^3141113^
"KRN",8994,3246,2,7,1,1,0)
Patient ID TYPE such as SSN or DFN OR ICN OR VIC/CAC.
"KRN",8994,3246,2,"B","VPSFDT",4)

"KRN",8994,3246,2,"B","VPSNUM",6)

"KRN",8994,3246,2,"B","VPSPID",1)

"KRN",8994,3246,2,"B","VPSQIEN",2)

"KRN",8994,3246,2,"B","VPSQNM",3)

"KRN",8994,3246,2,"B","VPSTDT",5)

"KRN",8994,3246,2,"B","VPSTYP",7)

"KRN",8994,3246,2,"PARAMSEQ",1,1)

"KRN",8994,3246,2,"PARAMSEQ",2,7)

"KRN",8994,3246,2,"PARAMSEQ",3,2)

"KRN",8994,3246,2,"PARAMSEQ",4,3)

"KRN",8994,3246,2,"PARAMSEQ",5,4)

"KRN",8994,3246,2,"PARAMSEQ",6,5)

"KRN",8994,3246,2,"PARAMSEQ",7,6)

"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",522,-1)
1^1
"PKG",522,0)
VPS KIOSK^VPS^RPC components that support VPS Kiosk.
"PKG",522,20,0)
^9.402P^^
"PKG",522,22,0)
^9.49I^1^1
"PKG",522,22,1,0)
1.0
"PKG",522,22,1,"PAH",1,0)
5^3150528^123458951
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","VPSAPPT")
0^3^B93662117
"RTN","VPSAPPT",1,0)
VPSAPPT ;SLOIFO/BT - VPS Appointment RPC;1/16/15 11:55
"RTN","VPSAPPT",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5**;Jan 16, 2015;Build 31
"RTN","VPSAPPT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSAPPT",4,0)
 ;
"RTN","VPSAPPT",5,0)
 ; External Reference DBIA#
"RTN","VPSAPPT",6,0)
 ; ------------------------
"RTN","VPSAPPT",7,0)
 ; #3860  - DGPFAPI call          (Controlled Sub)
"RTN","VPSAPPT",8,0)
 ; #10035 - ^DPT( references      (Supported)
"RTN","VPSAPPT",9,0)
 ; #4433  - SDAMA301 call         (Supported)
"RTN","VPSAPPT",10,0)
 ; #2462  - ^DGEN( reference      (Controlled Sub) 
"RTN","VPSAPPT",11,0)
 ; ###### - File 2.98, Field 17 (Cancellation Remark) (Private)
"RTN","VPSAPPT",12,0)
 QUIT
"RTN","VPSAPPT",13,0)
 ;
"RTN","VPSAPPT",14,0)
GET(VPSAPPT,VPSQUEUE,VPSFRDT,VPSTODT) ; VPS GET APPOINTMENTS
"RTN","VPSAPPT",15,0)
 ; This RPC returns all appointments for a given appointment date range.
"RTN","VPSAPPT",16,0)
 ; Those appointments will also be stored in VPS Appointment queue (File 853.9).
"RTN","VPSAPPT",17,0)
 ; This queue is used by GETCHG^VPSAPPT2 to filter out the non-change appontments during retrieval.
"RTN","VPSAPPT",18,0)
 ;
"RTN","VPSAPPT",19,0)
 ; INPUT
"RTN","VPSAPPT",20,0)
 ;   VPSQUEUE : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT",21,0)
 ;   VPSFRDT  : Appointment From Date
"RTN","VPSAPPT",22,0)
 ;   VPSTODT  : Appointment Through Date
"RTN","VPSAPPT",23,0)
 ; OUTPUT
"RTN","VPSAPPT",24,0)
 ;   VPSAPPT : Name of Global array contains all retrieved appointments
"RTN","VPSAPPT",25,0)
 ;   Output Format: 
"RTN","VPSAPPT",26,0)
 ;   ^TMP("VPSAPPT",$J,SEQ)=TODO^APPOINTMENT ID^RECORD FLAG#^FIELD NAME^FIELD VALUE
"RTN","VPSAPPT",27,0)
 ;      TODO                    : instruct vecna to add appointment into the queue and also notify for any error
"RTN","VPSAPPT",28,0)
 ;      APPOINTMENT ID          : represent appointment record in the VPS Appointment queue
"RTN","VPSAPPT",29,0)
 ;      RECORD FLAG#            : record flag number for patient (1..n)  - use only for record flag field
"RTN","VPSAPPT",30,0)
 ;      FIELD NAME              : Field name
"RTN","VPSAPPT",31,0)
 ;      FIELD VALUE             : Field value
"RTN","VPSAPPT",32,0)
 ;
"RTN","VPSAPPT",33,0)
 ;   Output Samples:
"RTN","VPSAPPT",34,0)
 ;      ^TMP("VPSAPPT",$J,0)=ERR^^^PARAMETER^error message      <--- notify Vecna for parameter error
"RTN","VPSAPPT",35,0)
 ;      ^TMP("VPSAPPT",$J,SEQ)=ERR^99^^ERROR^error message <--- notify Vecna that there is an issue during adding appt ien #99 to the queue
"RTN","VPSAPPT",36,0)
 ;      ^TMP("VPSAPPT",$J,SEQ)=ADD^111^^<FIELD NAME>^FIELD VALUE   <--- notify Vecna to add entry #111 to the queue with those field values
"RTN","VPSAPPT",37,0)
 ;      ^TMP("VPSAPPT",$J,SEQ)=ADD^111^1^<FLAG FIELD NAME>^FIELD VALUE <--- notify Vecna to add record flag #1 to entry #111 to the queue
"RTN","VPSAPPT",38,0)
 ;
"RTN","VPSAPPT",39,0)
 ;      <FIELD NAME> is a member of
"RTN","VPSAPPT",40,0)
 ;        CLINIC IEN^CLINIC NAME^APPT DATE
"RTN","VPSAPPT",41,0)
 ;        DFN^PATIENT NAME^SSN^EMAIL
"RTN","VPSAPPT",42,0)
 ;        APPT TYPE IEN^APPT TYPE NAME^APPT COMMENTS
"RTN","VPSAPPT",43,0)
 ;        APPT STATUS IEN^APPT STATUS NAME^DISPLAYED APPT STATUS
"RTN","VPSAPPT",44,0)
 ;        BAD ADDRESS INDICATOR^BAD ADDRESS NAME
"RTN","VPSAPPT",45,0)
 ;        SENSITIVE,BALANCE,ENROLLMENT STATUS,ENROLLMENT STATUS NAME
"RTN","VPSAPPT",46,0)
 ;        PRE-REGISTRATION DATE CHANGED,ELIGIBILITY STATUS,ELIGIBILITY STATUS NAME
"RTN","VPSAPPT",47,0)
 ;        INELIGIBLE DATE^MEANS TEST STATUS^INSURANCE
"RTN","VPSAPPT",48,0)
 ;      <FLAG FIELD NAME> is a member of 
"RTN","VPSAPPT",49,0)
 ;        FLAG INDICATOR^FLAG TYPE^FLAG NAME^FLAG NARRATIVE
"RTN","VPSAPPT",50,0)
 ;
"RTN","VPSAPPT",51,0)
 S VPSAPPT=$NA(^TMP("VPSAPPT",$J)) K @VPSAPPT ; return as global array
"RTN","VPSAPPT",52,0)
 I $G(VPSQUEUE)="" D ADDERR("ERR^^^PARAM^QUEUE ID IS REQUIRED") QUIT
"RTN","VPSAPPT",53,0)
 I $G(VPSFRDT)="" D ADDERR("ERR^^^PARAM^FROM DATE IS REQUIRED") QUIT
"RTN","VPSAPPT",54,0)
 I $G(VPSTODT)="" D ADDERR("ERR^^^PARAM^THROUGH DATE IS REQUIRED") QUIT
"RTN","VPSAPPT",55,0)
 K ^TMP($J,"SDAMA301")
"RTN","VPSAPPT",56,0)
 ;
"RTN","VPSAPPT",57,0)
 N OK S OK=$$ADDQUEUE(VPSQUEUE,VPSFRDT,VPSTODT) ; create queue entry
"RTN","VPSAPPT",58,0)
 I OK D
"RTN","VPSAPPT",59,0)
 . N APPTCNT S APPTCNT=$$POPAPPTS(VPSFRDT,VPSTODT) ; populate ^TMP($J,"SDAMA301") using supported API given appointment from - through date
"RTN","VPSAPPT",60,0)
 . D:APPTCNT>0 CMPAPPTS(VPSQUEUE) ; stored appointments in the vps appointment queue file and result array
"RTN","VPSAPPT",61,0)
 ;
"RTN","VPSAPPT",62,0)
 K ^TMP($J,"SDAMA301")
"RTN","VPSAPPT",63,0)
 QUIT
"RTN","VPSAPPT",64,0)
 ;
"RTN","VPSAPPT",65,0)
ADDERR(MSG) ;add error message to result array
"RTN","VPSAPPT",66,0)
 S ^TMP("VPSAPPT",$J,0)=MSG
"RTN","VPSAPPT",67,0)
 QUIT
"RTN","VPSAPPT",68,0)
 ; 
"RTN","VPSAPPT",69,0)
ADDQUEUE(QUEUEID,FROM,THROUGH) ; create queue entry
"RTN","VPSAPPT",70,0)
 ; INPUT
"RTN","VPSAPPT",71,0)
 ;   QUEUEID : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT",72,0)
 ;   FROM    : Appointment From Date
"RTN","VPSAPPT",73,0)
 ;   THROUGH : Appointment Through Date
"RTN","VPSAPPT",74,0)
 ;
"RTN","VPSAPPT",75,0)
 K ^VPS(853.9,QUEUEID)
"RTN","VPSAPPT",76,0)
 N VPSFDA,VPSERR,IENS
"RTN","VPSAPPT",77,0)
 S IENS(1)=QUEUEID
"RTN","VPSAPPT",78,0)
 S VPSFDA(853.9,"+1,",.01)=QUEUEID
"RTN","VPSAPPT",79,0)
 S VPSFDA(853.9,"+1,",1)=FROM
"RTN","VPSAPPT",80,0)
 S VPSFDA(853.9,"+1,",2)=THROUGH
"RTN","VPSAPPT",81,0)
 D UPDATE^DIE("E","VPSFDA","IENS","VPSERR")
"RTN","VPSAPPT",82,0)
 N OK S OK='$D(DIERR)
"RTN","VPSAPPT",83,0)
 D:'OK ADDERR("ERR"_U_U_U_"FILE"_U_VPSERR("DIERR",1,"TEXT",1))
"RTN","VPSAPPT",84,0)
 K DIERR,VPSFDA,VPSERR,IENS
"RTN","VPSAPPT",85,0)
 QUIT OK
"RTN","VPSAPPT",86,0)
 ;
"RTN","VPSAPPT",87,0)
POPAPPTS(VPSFRDT,VPSTODT) ; populate ^TMP($J,"SDAMA301") using supported API given appointment from - through date
"RTN","VPSAPPT",88,0)
 ; INPUT
"RTN","VPSAPPT",89,0)
 ;   VPSFRDT : Appointment From Date
"RTN","VPSAPPT",90,0)
 ;   VPSTODT : Appointment Through Date
"RTN","VPSAPPT",91,0)
 ;
"RTN","VPSAPPT",92,0)
 N DGARRAY
"RTN","VPSAPPT",93,0)
 S DGARRAY(1)=VPSFRDT_";"_VPSTODT
"RTN","VPSAPPT",94,0)
 S DGARRAY("FLDS")="1;2;4;10;22" ;get appt date, clinic and appointment status
"RTN","VPSAPPT",95,0)
 QUIT $$SDAPI^SDAMA301(.DGARRAY)
"RTN","VPSAPPT",96,0)
 ;
"RTN","VPSAPPT",97,0)
CMPAPPTS(QUEUEID) ; stored appointments in the vps appointment queue file and result array
"RTN","VPSAPPT",98,0)
 ; INPUT
"RTN","VPSAPPT",99,0)
 ;   QUEUEID : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT",100,0)
 ;
"RTN","VPSAPPT",101,0)
 N APPTINFO,APPT,APPTDT
"RTN","VPSAPPT",102,0)
 N CLIEN S CLIEN=0
"RTN","VPSAPPT",103,0)
 F  S CLIEN=$O(^TMP($J,"SDAMA301",CLIEN)) QUIT:'CLIEN  D
"RTN","VPSAPPT",104,0)
 . N DFN S DFN=0
"RTN","VPSAPPT",105,0)
 . F  S DFN=$O(^TMP($J,"SDAMA301",CLIEN,DFN)) QUIT:'DFN  D:$D(^DPT(DFN,0))
"RTN","VPSAPPT",106,0)
 . . S APPTDT=0
"RTN","VPSAPPT",107,0)
 . . F  S APPTDT=$O(^TMP($J,"SDAMA301",CLIEN,DFN,APPTDT)) QUIT:'APPTDT  D
"RTN","VPSAPPT",108,0)
 . . . S APPTINFO=$G(^TMP($J,"SDAMA301",CLIEN,DFN,APPTDT))
"RTN","VPSAPPT",109,0)
 . . . D GETAPPT(.APPT,APPTINFO)
"RTN","VPSAPPT",110,0)
 . . . N TODO S TODO=$$ADDAPPT(QUEUEID,.APPT) ;add the appointment to temporary storage (File #853.9)
"RTN","VPSAPPT",111,0)
 . . . D ADDTMP(TODO,QUEUEID,.APPT) ;add the appointment to result array
"RTN","VPSAPPT",112,0)
 QUIT
"RTN","VPSAPPT",113,0)
 ; 
"RTN","VPSAPPT",114,0)
GETAPPT(APPT,APPTINFO) ; return the required appointment information
"RTN","VPSAPPT",115,0)
 ; INPUT
"RTN","VPSAPPT",116,0)
 ;   APPTINFO : Appointment Information returned by $$SDAPI^SDAMA301 containing clinic, patient, appt date, and appointment status
"RTN","VPSAPPT",117,0)
 ; OUTPUT
"RTN","VPSAPPT",118,0)
 ;   APPT     : Array by Reference - Extended appointment information for Vecna to display in the queue
"RTN","VPSAPPT",119,0)
 ;   APPT(FLD)       = VALUE
"RTN","VPSAPPT",120,0)
 ;   APPT("PRF",PRF) = FLAG INDICATOR^FLAG TYPE^FLAG NAME^FLAG NARRATIVE (1..n)
"RTN","VPSAPPT",121,0)
 ; RETURN
"RTN","VPSAPPT",122,0)
 ;
"RTN","VPSAPPT",123,0)
 ; -- get appointment date
"RTN","VPSAPPT",124,0)
 K APPT S APPT("APPT DATE/TIME")=$P(APPTINFO,U)
"RTN","VPSAPPT",125,0)
 ;
"RTN","VPSAPPT",126,0)
 ; -- get clinic info
"RTN","VPSAPPT",127,0)
 S APPT("CLINIC IEN")=$P($P(APPTINFO,U,2),";")
"RTN","VPSAPPT",128,0)
 S APPT("CLINIC NAME")=$P($P(APPTINFO,U,2),";",2)
"RTN","VPSAPPT",129,0)
 ;
"RTN","VPSAPPT",130,0)
 ; -- get patient info
"RTN","VPSAPPT",131,0)
 S APPT("DFN")=$P($P(APPTINFO,U,4),";")
"RTN","VPSAPPT",132,0)
 S APPT("PATIENT NAME")=$P($P(APPTINFO,U,4),";",2)
"RTN","VPSAPPT",133,0)
 N RES D GETS^DIQ(2,APPT("DFN")_",",".09;.133","E","RES")
"RTN","VPSAPPT",134,0)
 S APPT("SSN")=$G(RES(2,DFN_",",.09,"E"))
"RTN","VPSAPPT",135,0)
 S APPT("EMAIL")=$G(RES(2,DFN_",",.133,"E"))
"RTN","VPSAPPT",136,0)
 ;
"RTN","VPSAPPT",137,0)
 D GETPRF(APPT("DFN"),.APPT) ;populate APPT array with patient record flags and narrative
"RTN","VPSAPPT",138,0)
 ;
"RTN","VPSAPPT",139,0)
 ; -- get appointment type
"RTN","VPSAPPT",140,0)
 N APPTYP S APPTYP=$P(APPTINFO,U,10)
"RTN","VPSAPPT",141,0)
 S APPT("APPT TYPE IEN")=$P(APPTYP,";") ;appt type ien
"RTN","VPSAPPT",142,0)
 S APPT("APPT TYPE NAME")=$P(APPTYP,";",2) ;appt type name
"RTN","VPSAPPT",143,0)
 ;
"RTN","VPSAPPT",144,0)
 ; -- get cancellation remarks
"RTN","VPSAPPT",145,0)
 N IENS S IENS=APPT("APPT DATE/TIME")_","_APPT("DFN")_","
"RTN","VPSAPPT",146,0)
 N APPTOUT D GETS^DIQ(2.98,IENS,"17","IE","APPTOUT")
"RTN","VPSAPPT",147,0)
 S APPT("APPT COMMENTS")=$G(APPTOUT(2.98,IENS,17,"I"))
"RTN","VPSAPPT",148,0)
 ;
"RTN","VPSAPPT",149,0)
 ; -- get appointment status
"RTN","VPSAPPT",150,0)
 N STATUS S STATUS=$P(APPTINFO,U,22)
"RTN","VPSAPPT",151,0)
 S APPT("APPT STATUS IEN")=$P(STATUS,";") ;status ien
"RTN","VPSAPPT",152,0)
 S APPT("APPT STATUS NAME")=$P(STATUS,";",2) ;status name
"RTN","VPSAPPT",153,0)
 S APPT("DISPLAYED APPT STATUS")=$P(STATUS,";",3) ;Print Status (what is displayed)
"RTN","VPSAPPT",154,0)
 ;
"RTN","VPSAPPT",155,0)
 ; -- get Bad Address Indicator
"RTN","VPSAPPT",156,0)
 N BADADR S BADADR=$$BADADR^DGUTL3(DFN)
"RTN","VPSAPPT",157,0)
 I BADADR'="" D
"RTN","VPSAPPT",158,0)
 . N BADADRNM S BADADRNM=""
"RTN","VPSAPPT",159,0)
 . I BADADR=1 S BADADRNM="UNDELIVERABLE"
"RTN","VPSAPPT",160,0)
 . I BADADR=2 S BADADRNM="HOMELESS"
"RTN","VPSAPPT",161,0)
 . I BADADR=3 S BADADRNM="OTHER"
"RTN","VPSAPPT",162,0)
 . S APPT("BAD ADDRESS INDICATOR")=BADADR
"RTN","VPSAPPT",163,0)
 . S APPT("BAD ADDRESS NAME")=BADADRNM
"RTN","VPSAPPT",164,0)
 ;
"RTN","VPSAPPT",165,0)
 ; -- get Sensitive
"RTN","VPSAPPT",166,0)
 N VPSARR D SENLOG^VPSRPC16(.VPSARR,DFN)
"RTN","VPSAPPT",167,0)
 N SENS S SENS=$P($G(VPSARR(1)),U,4)
"RTN","VPSAPPT",168,0)
 S:SENS'="" APPT("SENSITIVE")=SENS
"RTN","VPSAPPT",169,0)
 ;
"RTN","VPSAPPT",170,0)
 ; -- get Balance
"RTN","VPSAPPT",171,0)
 K VPSARR D BAL^VPSRPC26(.VPSARR,DFN)
"RTN","VPSAPPT",172,0)
 N BAL S BAL=$P($G(VPSARR(1)),U,4)
"RTN","VPSAPPT",173,0)
 S:BAL'="" APPT("BALANCE")=BAL
"RTN","VPSAPPT",174,0)
 ;
"RTN","VPSAPPT",175,0)
 ; -- Get Enrollment Status
"RTN","VPSAPPT",176,0)
 N ENRIEN S ENRIEN=$O(^DGEN(27.11,"C",DFN,""),-1)
"RTN","VPSAPPT",177,0)
 I ENRIEN D
"RTN","VPSAPPT",178,0)
 . N DFENR D GET^DGENA(ENRIEN,.DGENR)
"RTN","VPSAPPT",179,0)
 . N ENRSTAT S ENRSTAT=$G(DGENR("STATUS"))
"RTN","VPSAPPT",180,0)
 . I ENRSTAT'="" D
"RTN","VPSAPPT",181,0)
 . . N ESNAME S ESNAME=$$GET1^DIQ(27.11,ENRIEN_",",.04,"E")
"RTN","VPSAPPT",182,0)
 . . S APPT("ENROLLMENT STATUS")=ENRSTAT
"RTN","VPSAPPT",183,0)
 . . S APPT("ENROLLMENT STATUS NAME")=ESNAME
"RTN","VPSAPPT",184,0)
 ;
"RTN","VPSAPPT",185,0)
 ; -- get Pre-Registration Date Changed
"RTN","VPSAPPT",186,0)
 K VPSARR D DGS^VPSRPC26(.VPSARR,DFN)
"RTN","VPSAPPT",187,0)
 N PRDT S PRDT=$P($G(VPSARR(1)),U,4)
"RTN","VPSAPPT",188,0)
 S:PRDT'="" APPT("PRE-REGISTRATION DATE CHANGED")=PRDT
"RTN","VPSAPPT",189,0)
 ;
"RTN","VPSAPPT",190,0)
 ; -- get Eligibility Code
"RTN","VPSAPPT",191,0)
 N VAEL D ELIG^VADPT
"RTN","VPSAPPT",192,0)
 N ELIGSTAT S ELIGSTAT=$P($G(VAEL(8)),U)
"RTN","VPSAPPT",193,0)
 I ELIGSTAT'="" D
"RTN","VPSAPPT",194,0)
 . S APPT("ELIGIBILITY STATUS")=ELIGSTAT
"RTN","VPSAPPT",195,0)
 . S ELIGSTAT=$P($G(VAEL(8)),U,2)
"RTN","VPSAPPT",196,0)
 . S APPT("ELIGIBILITY STATUS NAME")=ELIGSTAT
"RTN","VPSAPPT",197,0)
 ;
"RTN","VPSAPPT",198,0)
 ; -- get Ineligible date
"RTN","VPSAPPT",199,0)
 N IELIGDT S IELIGDT=$P($G(VAEL(5,1)),U)
"RTN","VPSAPPT",200,0)
 S:IELIGDT'="" APPT("INELIGIBLE DATE")=IELIGDT
"RTN","VPSAPPT",201,0)
 ;
"RTN","VPSAPPT",202,0)
 ; -- get Means Test Status
"RTN","VPSAPPT",203,0)
 N MTS S MTS=$P($G(VAEL(9)),U,2)
"RTN","VPSAPPT",204,0)
 S:MTS'="" APPT("MEANS TEST STATUS")=MTS
"RTN","VPSAPPT",205,0)
 ;
"RTN","VPSAPPT",206,0)
 ; -- get Insurance (true/false)
"RTN","VPSAPPT",207,0)
 K VPSARR D IBB^VPSRPC26(.VPSARR,DFN) ; Insurance Info
"RTN","VPSAPPT",208,0)
 N INS S INS=$P($G(VPSARR(1)),U,4)
"RTN","VPSAPPT",209,0)
 S INS=$S(INS'="":"Y",1:"N")
"RTN","VPSAPPT",210,0)
 S APPT("INSURANCE")=INS
"RTN","VPSAPPT",211,0)
 ;
"RTN","VPSAPPT",212,0)
 QUIT
"RTN","VPSAPPT",213,0)
 ;
"RTN","VPSAPPT",214,0)
GETPRF(DFN,PRFLAGS) ;populate PRFLAGS with patient record flags and narrative
"RTN","VPSAPPT",215,0)
 ;INPUT : DFN     - Patient IEN
"RTN","VPSAPPT",216,0)
 ;OUTPUT: PRFLAGS - Patient Record Flags array
"RTN","VPSAPPT",217,0)
 ;
"RTN","VPSAPPT",218,0)
 N PRF,REC,NPRF S NPRF=$$GETACT^DGPFAPI(DFN,"REC") ;Retrieve all ACTIVE Patient record flag assignments
"RTN","VPSAPPT",219,0)
 N FLAG,FLAGTYPE,PRFLAG,PRFFIL,FLAGFROM,FLAGNAME,NARR,FLAGINFO
"RTN","VPSAPPT",220,0)
 ;
"RTN","VPSAPPT",221,0)
 F PRF=1:1:NPRF D
"RTN","VPSAPPT",222,0)
 . ;store flag type
"RTN","VPSAPPT",223,0)
 . S FLAGTYPE=$P(REC(PRF,"FLAGTYPE"),U,2)
"RTN","VPSAPPT",224,0)
 . S PRFLAG=$P(REC(PRF,"FLAG"),U)
"RTN","VPSAPPT",225,0)
 . S FLAGFROM=""
"RTN","VPSAPPT",226,0)
 . I FLAGTYPE'="",PRFLAG'="" D
"RTN","VPSAPPT",227,0)
 . . S PRFFIL=$P($P(PRFLAG,"DGPF(",2),",")
"RTN","VPSAPPT",228,0)
 . . I PRFFIL'="" S FLAGFROM=$S(PRFFIL=26.11:"LOCAL",1:"NATIONAL")
"RTN","VPSAPPT",229,0)
 . . I PRFFIL="" S FLAGTYPE=""
"RTN","VPSAPPT",230,0)
 . S FLAGNAME=$P(REC(PRF,"FLAG"),U,2)
"RTN","VPSAPPT",231,0)
 . S PRFLAGS("PRF",PRF,"FLAG ORIGINATION")=FLAGFROM
"RTN","VPSAPPT",232,0)
 . S PRFLAGS("PRF",PRF,"FLAG TYPE")=FLAGTYPE
"RTN","VPSAPPT",233,0)
 . S PRFLAGS("PRF",PRF,"FLAG NAME")=FLAGNAME
"RTN","VPSAPPT",234,0)
 . M PRFLAGS("PRF.NARR",PRF)=REC(PRF,"NARR")
"RTN","VPSAPPT",235,0)
 QUIT
"RTN","VPSAPPT",236,0)
 ;
"RTN","VPSAPPT",237,0)
GETNARR(PRF,REC) ; Get ASSIGNMENT NARRATIVE (word-processing)
"RTN","VPSAPPT",238,0)
 N VAL,NARR S NARR=""
"RTN","VPSAPPT",239,0)
 N NARRCNT S NARRCNT=""
"RTN","VPSAPPT",240,0)
 F  S NARRCNT=$O(REC(PRF,"NARR",NARRCNT)) QUIT:NARRCNT=""  D
"RTN","VPSAPPT",241,0)
 . S VAL=$G(REC(PRF,"NARR",NARRCNT,0))
"RTN","VPSAPPT",242,0)
 . S NARR=NARR_VAL_U
"RTN","VPSAPPT",243,0)
 S:$E(NARR,$L(NARR))=U NARR=$E(NARR,1,$L(NARR)-1)
"RTN","VPSAPPT",244,0)
 QUIT NARR
"RTN","VPSAPPT",245,0)
 ;
"RTN","VPSAPPT",246,0)
ADDAPPT(QUEUEID,APPT) ; add appointment to sub file 853.91
"RTN","VPSAPPT",247,0)
 ; INPUT
"RTN","VPSAPPT",248,0)
 ;   QUEUEID  : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT",249,0)
 ;   APPT(FLD): Array contains value of FIELD 
"RTN","VPSAPPT",250,0)
 ;              CLINIC IEN, APPT DATE, DFN, APPT TYPE, DISPLAY APPT STATUS
"RTN","VPSAPPT",251,0)
 ;              All Values are required
"RTN","VPSAPPT",252,0)
 ; RETURN
"RTN","VPSAPPT",253,0)
 ;   TODO     : ADD               <-- successfully add the appointment
"RTN","VPSAPPT",254,0)
 ;            : ERR^ERRORMESSAGE  <-- failed adding the appointment with ERROR MESSAGE
"RTN","VPSAPPT",255,0)
 ;
"RTN","VPSAPPT",256,0)
 N TODO S TODO="ADD"
"RTN","VPSAPPT",257,0)
 N VPSFDA,VPSERR,DIERR
"RTN","VPSAPPT",258,0)
 S VPSFDA(853.91,"+1,"_QUEUEID_",",.01)=APPT("CLINIC IEN") ;clinic ien
"RTN","VPSAPPT",259,0)
 S VPSFDA(853.91,"+1,"_QUEUEID_",",1)=APPT("APPT DATE/TIME")  ;appointment date
"RTN","VPSAPPT",260,0)
 S VPSFDA(853.91,"+1,"_QUEUEID_",",2)=APPT("DFN")     ;patient ien
"RTN","VPSAPPT",261,0)
 S VPSFDA(853.91,"+1,"_QUEUEID_",",3)=APPT("APPT TYPE IEN")  ;appt type ien
"RTN","VPSAPPT",262,0)
 S VPSFDA(853.91,"+1,"_QUEUEID_",",4)=APPT("DISPLAYED APPT STATUS") ;displayed/printed version of appt status
"RTN","VPSAPPT",263,0)
 D UPDATE^DIE("","VPSFDA","","VPSERR")
"RTN","VPSAPPT",264,0)
 I $D(DIERR) S TODO="ERR"_U_VPSERR("DIERR",1,"TEXT",1)
"RTN","VPSAPPT",265,0)
 K DIERR,VPSFDA,VPSERR
"RTN","VPSAPPT",266,0)
 QUIT TODO
"RTN","VPSAPPT",267,0)
 ;
"RTN","VPSAPPT",268,0)
ADDTMP(TODO,QUEUEID,APPT) ; add appointment to result array
"RTN","VPSAPPT",269,0)
 ; INPUT
"RTN","VPSAPPT",270,0)
 ;   TODO           : Instruction to vecna what todo with the appointment (ADD or ERR)
"RTN","VPSAPPT",271,0)
 ;   QUEUEID        : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT",272,0)
 ;   APPT(FLD)      : Array contains value of FLD
"RTN","VPSAPPT",273,0)
 ;   APPT("PRF",PRF): RECORD FLAG
"RTN","VPSAPPT",274,0)
 ;                  : FLAG ORIGINATION (NATIONAL/LOCAL)^FLAG TYPE^FLAG NAME^FLAG NARRATIVE (1..n)
"RTN","VPSAPPT",275,0)
 ;
"RTN","VPSAPPT",276,0)
 N SEQ S SEQ=$O(^TMP("VPSAPPT",$J,""),-1)+1
"RTN","VPSAPPT",277,0)
 N CLIEN S CLIEN=APPT("CLINIC IEN")       ;clinic ien
"RTN","VPSAPPT",278,0)
 N APPTDT S APPTDT=APPT("APPT DATE/TIME") ;appointment date
"RTN","VPSAPPT",279,0)
 N DFN S DFN=APPT("DFN")                  ;patient ien
"RTN","VPSAPPT",280,0)
 N APPTIEN S APPTIEN=$$GETIEN^VPSAPPT(QUEUEID,CLIEN,APPTDT,DFN)
"RTN","VPSAPPT",281,0)
 I $P(TODO,U)="ERR" D SAVTMP("ERR",APPTIEN,,"ERROR",$P(TODO,U,2)) QUIT
"RTN","VPSAPPT",282,0)
 ;
"RTN","VPSAPPT",283,0)
 ; -- Save appointment fields other than RECORD FLAG
"RTN","VPSAPPT",284,0)
 N FLD S FLD=""
"RTN","VPSAPPT",285,0)
 F  S FLD=$O(APPT(FLD)) Q:FLD=""  D:$E(FLD,1,3)'="PRF" SAVTMP(TODO,APPTIEN,,FLD,APPT(FLD))
"RTN","VPSAPPT",286,0)
 ;
"RTN","VPSAPPT",287,0)
 ; -- save patient record flag
"RTN","VPSAPPT",288,0)
 N SEQ S SEQ=0
"RTN","VPSAPPT",289,0)
 N CNT S CNT=""
"RTN","VPSAPPT",290,0)
 F  S SEQ=$O(APPT("PRF",SEQ)) Q:'SEQ  D
"RTN","VPSAPPT",291,0)
 . F  S FLD=$O(APPT("PRF",SEQ,FLD)) Q:FLD=""  D
"RTN","VPSAPPT",292,0)
 . . D SAVTMP(TODO,APPTIEN,SEQ,FLD,APPT("PRF",SEQ,FLD))
"RTN","VPSAPPT",293,0)
 . F  S CNT=$O(APPT("PRF.NARR",SEQ,CNT)) Q:CNT=""  D
"RTN","VPSAPPT",294,0)
 . . D SAVTMP(TODO,APPTIEN,SEQ,"FLAG NARRATIVE "_CNT,$G(APPT("PRF.NARR",SEQ,CNT,0)))
"RTN","VPSAPPT",295,0)
 ;
"RTN","VPSAPPT",296,0)
 QUIT
"RTN","VPSAPPT",297,0)
 ;
"RTN","VPSAPPT",298,0)
SAVTMP(TODO,APPTIEN,SEQ,FLD,DATA) ;save data to result global array
"RTN","VPSAPPT",299,0)
 N LAST S LAST=$O(^TMP("VPSAPPT",$J,""),-1)+1
"RTN","VPSAPPT",300,0)
 S ^TMP("VPSAPPT",$J,LAST)=TODO_U_APPTIEN_U_$G(SEQ)_U_$G(FLD)_U_DATA
"RTN","VPSAPPT",301,0)
 QUIT
"RTN","VPSAPPT",302,0)
 ;
"RTN","VPSAPPT",303,0)
GETIEN(QUEUEID,CLIEN,APPTDT,DFN) ; return the IEN for sub file 853.91 record
"RTN","VPSAPPT",304,0)
 ; INPUT
"RTN","VPSAPPT",305,0)
 ;   QUEUEID : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT",306,0)
 ;   CLIEN   : Clinic IEN
"RTN","VPSAPPT",307,0)
 ;   APPTDT  : Appointment Date
"RTN","VPSAPPT",308,0)
 ;   DFN     : Patient IEN
"RTN","VPSAPPT",309,0)
 ; RETURN
"RTN","VPSAPPT",310,0)
 ;   APPOINTMENT IEN in the queue
"RTN","VPSAPPT",311,0)
 ;
"RTN","VPSAPPT",312,0)
 QUIT:'QUEUEID!'CLIEN!'APPTDT!'DFN ""
"RTN","VPSAPPT",313,0)
 N APPTIEN S APPTIEN=$O(^VPS(853.9,QUEUEID,1,"C",CLIEN,APPTDT,DFN,""))
"RTN","VPSAPPT",314,0)
 QUIT APPTIEN
"RTN","VPSAPPT2")
0^4^B28951251
"RTN","VPSAPPT2",1,0)
VPSAPPT2 ;SLOIFO/BT - VPS Appointment RPC;1/16/15 11:55
"RTN","VPSAPPT2",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5**;Jan 16, 2015;Build 31
"RTN","VPSAPPT2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSAPPT2",4,0)
 ;
"RTN","VPSAPPT2",5,0)
 ; External Reference DBIA#
"RTN","VPSAPPT2",6,0)
 ; ------------------------
"RTN","VPSAPPT2",7,0)
 ; #10035 - ^DPT( references      (Supported)
"RTN","VPSAPPT2",8,0)
 ; #4433 - SDAMA301 call          (Supported)
"RTN","VPSAPPT2",9,0)
 Q
"RTN","VPSAPPT2",10,0)
 ; 
"RTN","VPSAPPT2",11,0)
GETCHG(VPSAPPT,VPSQUEUE) ; VPS GET CHANGED APPOINTMENTS
"RTN","VPSAPPT2",12,0)
 ; This RPC will return the changed appointments on the queue since the last GET^VPSAPPT or GETCHG^VPSAPPT2 invoked
"RTN","VPSAPPT2",13,0)
 ;
"RTN","VPSAPPT2",14,0)
 ; INPUT
"RTN","VPSAPPT2",15,0)
 ;   VPSQUEUE : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT2",16,0)
 ; OUTPUT
"RTN","VPSAPPT2",17,0)
 ;   VPSAPPT  : Name of Global array contains all retrieved appointments
"RTN","VPSAPPT2",18,0)
 ;   Output Format: 
"RTN","VPSAPPT2",19,0)
 ;   ^TMP("VPSAPPT",$J,SEQ)=TODO^APPOINTMENT ID^RECORD FLAG#^FIELD NAME^FIELD VALUE
"RTN","VPSAPPT2",20,0)
 ;      TODO                    : instruct vecna to either Add, delete, update appointment and also notify for any error
"RTN","VPSAPPT2",21,0)
 ;      APPOINTMENT ID          : represent appointment record in the VPS Appointment queue
"RTN","VPSAPPT2",22,0)
 ;      RECORD FLAG#            : record flag number for patient (1..n)  - use only for record flag field
"RTN","VPSAPPT2",23,0)
 ;      FIELD NAME              : Field name
"RTN","VPSAPPT2",24,0)
 ;      FIELD VALUE             : Field value
"RTN","VPSAPPT2",25,0)
 ;   Output Samples:
"RTN","VPSAPPT2",26,0)
 ;      ^TMP("VPSAPPT",$J,0)=ERR^^^PARAM^error message     <--- notify Vecna for parameter error
"RTN","VPSAPPT2",27,0)
 ;      ^TMP("VPSAPPT",$J,SEQ)=ERR^99^^ERROR^error message <--- notify Vecna that there is an issue during adding/updating entry #99 to the queue
"RTN","VPSAPPT2",28,0)
 ;      ^TMP("VPSAPPT",$J,SEQ)=DEL^110                     <--- notify Vecna to delete entry #110 from the queue
"RTN","VPSAPPT2",29,0)
 ;      ^TMP("VPSAPPT",$J,SEQ)=ADD^111^^<FIELD NAME>^FIELD VALUE       <--- notify Vecna to add entry #111 to the queue with those field values
"RTN","VPSAPPT2",30,0)
 ;      ^TMP("VPSAPPT",$J,SEQ)=ADD^111^1^<FLAG FIELD NAME>^FIELD VALUE <--- notify Vecna to add record flag #1 to entry #111 to the queue
"RTN","VPSAPPT2",31,0)
 ;      ^TMP("VPSAPPT",$J,SEQ)=UPD^97^^^FIELD NAME^FIELD VALUE          <--- notify Vecna to update entry #97 in the queue with those field values
"RTN","VPSAPPT2",32,0)
 ;
"RTN","VPSAPPT2",33,0)
 ;      <FIELD NAME> is a member of
"RTN","VPSAPPT2",34,0)
 ;        CLINIC IEN^CLINIC NAME^APPT DATE
"RTN","VPSAPPT2",35,0)
 ;        DFN^PATIENT NAME^SSN^EMAIL
"RTN","VPSAPPT2",36,0)
 ;        APPT TYPE IEN^APPT TYPE NAME^APPT COMMENTS
"RTN","VPSAPPT2",37,0)
 ;        APPT STATUS IEN^APPT STATUS NAME^DISPLAYED STATUS
"RTN","VPSAPPT2",38,0)
 ;        BAD ADDRESS INDICATOR^BAD ADDRESS NAME
"RTN","VPSAPPT2",39,0)
 ;        SENSITIVE,BALANCE,ENROLLMENT STATUS,ENROLLMENT STATUS NAME
"RTN","VPSAPPT2",40,0)
 ;        PRE-REGISTRATION DATE CHANGED,ELIGIBILITY STATUS,ELIGIBILITY STATUS NAME
"RTN","VPSAPPT2",41,0)
 ;        INELIGIBLE DATE^MEANS TEST STATUS^INSURANCE
"RTN","VPSAPPT2",42,0)
 ;      <FLAG FIELD NAME> is a member of (FLAG ORIGINATION^FLAG TYPE^FLAG NAME^FLAG NARRATIVE")
"RTN","VPSAPPT2",43,0)
 ; 
"RTN","VPSAPPT2",44,0)
 S VPSAPPT=$NA(^TMP("VPSAPPT",$J)) K @VPSAPPT
"RTN","VPSAPPT2",45,0)
 K ^TMP($J,"SDAMA301")
"RTN","VPSAPPT2",46,0)
 ;
"RTN","VPSAPPT2",47,0)
 I $G(VPSQUEUE)="" D ADDERR^VPSAPPT("ERR^^^PARAM^QUEUE ID IS REQUIRED") QUIT
"RTN","VPSAPPT2",48,0)
 ;
"RTN","VPSAPPT2",49,0)
 N CNT S CNT=$$POPAPPTS(VPSQUEUE) ;populate result array with new appointment and updated appointments
"RTN","VPSAPPT2",50,0)
 I CNT D
"RTN","VPSAPPT2",51,0)
 . D UPDQUEUE(VPSQUEUE) ; add new appointments or update modified appointments
"RTN","VPSAPPT2",52,0)
 . D RMVAPPTS(VPSQUEUE) ; remove appointments from queue if appointments are no longer exist
"RTN","VPSAPPT2",53,0)
 ;
"RTN","VPSAPPT2",54,0)
 K ^TMP($J,"SDAMA301")
"RTN","VPSAPPT2",55,0)
 QUIT
"RTN","VPSAPPT2",56,0)
 ; 
"RTN","VPSAPPT2",57,0)
POPAPPTS(QUEUEID) ;populate result array with new appointment and updated appointments
"RTN","VPSAPPT2",58,0)
 ; INPUT
"RTN","VPSAPPT2",59,0)
 ;   QUEUEID : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT2",60,0)
 ;
"RTN","VPSAPPT2",61,0)
 ; -- get from, through date for the queue.
"RTN","VPSAPPT2",62,0)
 N QINFO D GETS^DIQ(853.9,QUEUEID_",","1;2","I","QINFO")
"RTN","VPSAPPT2",63,0)
 N FRMDT S FRMDT=$G(QINFO(853.9,QUEUEID_",",1,"I"))
"RTN","VPSAPPT2",64,0)
 N THRDT S THRDT=$G(QINFO(853.9,QUEUEID_",",2,"I"))
"RTN","VPSAPPT2",65,0)
 I 'FRMDT!'THRDT D ADDERR^VPSAPPT("ERR^^^GET^QUEUE has not been initialized.") QUIT 0
"RTN","VPSAPPT2",66,0)
 ;
"RTN","VPSAPPT2",67,0)
 ; -- populate ^TMP($J,"SDAMA301") using supported API given appointment from - through date
"RTN","VPSAPPT2",68,0)
 QUIT $$POPAPPTS^VPSAPPT(FRMDT,THRDT)
"RTN","VPSAPPT2",69,0)
 ;
"RTN","VPSAPPT2",70,0)
UPDQUEUE(QUEUEID) ; add new appointments or update modified appointments
"RTN","VPSAPPT2",71,0)
 N APPT,APPTINFO,APPTDT,TODO
"RTN","VPSAPPT2",72,0)
 N CLIEN S CLIEN=0
"RTN","VPSAPPT2",73,0)
 F  S CLIEN=$O(^TMP($J,"SDAMA301",CLIEN)) Q:'CLIEN  D
"RTN","VPSAPPT2",74,0)
 . N DFN S DFN=0
"RTN","VPSAPPT2",75,0)
 . F  S DFN=$O(^TMP($J,"SDAMA301",CLIEN,DFN)) Q:'DFN  D:$D(^DPT(DFN,0))
"RTN","VPSAPPT2",76,0)
 . . S APPTDT=0
"RTN","VPSAPPT2",77,0)
 . . F  S APPTDT=$O(^TMP($J,"SDAMA301",CLIEN,DFN,APPTDT)) Q:'APPTDT  D
"RTN","VPSAPPT2",78,0)
 . . . S APPTINFO=$G(^TMP($J,"SDAMA301",CLIEN,DFN,APPTDT))
"RTN","VPSAPPT2",79,0)
 . . . K APPT D GETAPPT^VPSAPPT(.APPT,APPTINFO)
"RTN","VPSAPPT2",80,0)
 . . . S TODO=$$UPDATE(QUEUEID,.APPT) ; update the appointment in temporary storage (File #853.9)
"RTN","VPSAPPT2",81,0)
 . . . D:TODO'="" ADDTMP^VPSAPPT(TODO,QUEUEID,.APPT) ; add the updated appointment to result array
"RTN","VPSAPPT2",82,0)
 QUIT
"RTN","VPSAPPT2",83,0)
 ;
"RTN","VPSAPPT2",84,0)
UPDATE(QUEUEID,APPT) ; update the appointment in temporary storage (File #853.9)
"RTN","VPSAPPT2",85,0)
 ; INPUT
"RTN","VPSAPPT2",86,0)
 ;   QUEUEID  : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT2",87,0)
 ;   APPTINFO : Extended appointment information for Vecna to display in the queue
"RTN","VPSAPPT2",88,0)
 ;              CLINIC IEN^CLINIC NAME^APPT DATE^DFN^PATIENT NAME^SSN^APPT TYPE IEN^APPT TYPE NAME^STATUS IEN^STATUS NAME^PRINTED STATUS
"RTN","VPSAPPT2",89,0)
 ; RETURN
"RTN","VPSAPPT2",90,0)
 ;   TODO     : ""    (no changed - nothing todo)
"RTN","VPSAPPT2",91,0)
 ;            : "ADD" (instruct vecna to add the appointment to the queue)
"RTN","VPSAPPT2",92,0)
 ;            : "UPD" (instruct vecna to update the appointment in the queue)
"RTN","VPSAPPT2",93,0)
 ;            : "ERR" (notify vecna there is error during add/change appointment)
"RTN","VPSAPPT2",94,0)
 ;
"RTN","VPSAPPT2",95,0)
 N TODO S TODO="" ;nothing is changed
"RTN","VPSAPPT2",96,0)
 N CLIEN S CLIEN=APPT("CLINIC IEN")
"RTN","VPSAPPT2",97,0)
 N APPTDT S APPTDT=APPT("APPT DATE/TIME")
"RTN","VPSAPPT2",98,0)
 N DFN S DFN=APPT("DFN")
"RTN","VPSAPPT2",99,0)
 N APPTIEN S APPTIEN=$$GETIEN^VPSAPPT(QUEUEID,CLIEN,APPTDT,DFN) ; return the IEN for sub file 853.91 record
"RTN","VPSAPPT2",100,0)
 ;
"RTN","VPSAPPT2",101,0)
 ; -- Not in the queue, add the new appointment
"RTN","VPSAPPT2",102,0)
 I 'APPTIEN D
"RTN","VPSAPPT2",103,0)
 . S TODO=$$ADDAPPT^VPSAPPT(QUEUEID,.APPT) ;new appointment
"RTN","VPSAPPT2",104,0)
 ;
"RTN","VPSAPPT2",105,0)
 ; -- update the existing appointment if status or type is changed
"RTN","VPSAPPT2",106,0)
 I APPTIEN D
"RTN","VPSAPPT2",107,0)
 . N SAVAPPT S SAVAPPT=$G(^VPS(853.9,QUEUEID,1,APPTIEN,0))
"RTN","VPSAPPT2",108,0)
 . N CURAPPT S CURAPPT=CLIEN_U_APPTDT_U_DFN_U_APPT("APPT TYPE IEN")_U_APPT("DISPLAYED APPT STATUS")
"RTN","VPSAPPT2",109,0)
 . I SAVAPPT'=CURAPPT S TODO=$$UPDAPPT(QUEUEID,APPTIEN,CURAPPT) ;update appointment status/type changed
"RTN","VPSAPPT2",110,0)
 QUIT TODO
"RTN","VPSAPPT2",111,0)
 ;
"RTN","VPSAPPT2",112,0)
UPDAPPT(QUEUEID,APPTIEN,APPTINFO) ;update appointment status/type changed
"RTN","VPSAPPT2",113,0)
 ; INPUT
"RTN","VPSAPPT2",114,0)
 ;   QUEUEID  : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT2",115,0)
 ;   APPTIEN  : Appointment ien in the queue
"RTN","VPSAPPT2",116,0)
 ;   APPTINFO : Appointment information in the queue file 853.9
"RTN","VPSAPPT2",117,0)
 ;              CLINIC IEN^APPT DATE^DFN^APPT TYPE IEN^PRINTED STATUS
"RTN","VPSAPPT2",118,0)
 ; RETURN
"RTN","VPSAPPT2",119,0)
 ;   TODO     : "UPD" (instruct vecna to update the appointment in the queue)
"RTN","VPSAPPT2",120,0)
 ;            : "ERR" (notify vecna there is error during add/change appointment)
"RTN","VPSAPPT2",121,0)
 ;
"RTN","VPSAPPT2",122,0)
 N TODO S TODO="UPD"
"RTN","VPSAPPT2",123,0)
 N VPSFDA
"RTN","VPSAPPT2",124,0)
 S VPSFDA(853.91,APPTIEN_","_QUEUEID_",",3)=$P(APPTINFO,U,4) ;appt type ien
"RTN","VPSAPPT2",125,0)
 S VPSFDA(853.91,APPTIEN_","_QUEUEID_",",4)=$P(APPTINFO,U,5) ;displayed version of appt status name
"RTN","VPSAPPT2",126,0)
 N VPSERR D FILE^DIE("E","VPSFDA","VPSERR")
"RTN","VPSAPPT2",127,0)
 I $D(DIERR) S TODO="ERR"_U_VPSERR("DIERR",1,"TEXT",1)
"RTN","VPSAPPT2",128,0)
 K DIERR,VPSFDA,VPSERR
"RTN","VPSAPPT2",129,0)
 QUIT TODO
"RTN","VPSAPPT2",130,0)
 ;
"RTN","VPSAPPT2",131,0)
RMVAPPTS(QUEUEID) ;remove appointment from queue if appointmentsd are no longer existed
"RTN","VPSAPPT2",132,0)
 N APPTIEN S APPTIEN=0
"RTN","VPSAPPT2",133,0)
 F  S APPTIEN=$O(^VPS(853.9,QUEUEID,1,APPTIEN)) QUIT:'APPTIEN  D
"RTN","VPSAPPT2",134,0)
 . N APPTINFO S APPTINFO=^VPS(853.9,QUEUEID,1,APPTIEN,0)
"RTN","VPSAPPT2",135,0)
 . N CLIEN S CLIEN=$P(APPTINFO,U)
"RTN","VPSAPPT2",136,0)
 . N APPTDT S APPTDT=$P(APPTINFO,U,2)
"RTN","VPSAPPT2",137,0)
 . N DFN S DFN=$P(APPTINFO,U,3)
"RTN","VPSAPPT2",138,0)
 . I '$D(^TMP($J,"SDAMA301",CLIEN,DFN,APPTDT)) D
"RTN","VPSAPPT2",139,0)
 . . D DELAPPT(QUEUEID,APPTIEN) ;delete temp appointment queue to reflect current appointments
"RTN","VPSAPPT2",140,0)
 . . D ADDDEL(APPTIEN) ;tell vecna to remove the entry
"RTN","VPSAPPT2",141,0)
 QUIT
"RTN","VPSAPPT2",142,0)
 ;
"RTN","VPSAPPT2",143,0)
DELAPPT(QUEUEID,APPTIEN) ;delete temp appointment from the queue to reflect current appointments
"RTN","VPSAPPT2",144,0)
 ; INPUT
"RTN","VPSAPPT2",145,0)
 ;   QUEUEID : Unique Queue ID represents Vecna Appointment Queue.
"RTN","VPSAPPT2",146,0)
 ;   APPTIEN  : Appointment ien in the queue
"RTN","VPSAPPT2",147,0)
 ;
"RTN","VPSAPPT2",148,0)
 N DA S DA(1)=QUEUEID,DA=APPTIEN
"RTN","VPSAPPT2",149,0)
 N DIK S DIK="^VPS(853.9,"_DA(1)_",1,"
"RTN","VPSAPPT2",150,0)
 D ^DIK
"RTN","VPSAPPT2",151,0)
 K DIK
"RTN","VPSAPPT2",152,0)
 QUIT
"RTN","VPSAPPT2",153,0)
 ;
"RTN","VPSAPPT2",154,0)
ADDDEL(APPTIEN) ;notify vecna to remove the entry from the Vecna's VPS appointment queue
"RTN","VPSAPPT2",155,0)
 ; INPUT
"RTN","VPSAPPT2",156,0)
 ;   APPTIEN  : Appointment ien in the queue
"RTN","VPSAPPT2",157,0)
 ;
"RTN","VPSAPPT2",158,0)
 N SEQ S SEQ=$O(^TMP("VPSAPPT",$J," "),-1)+1
"RTN","VPSAPPT2",159,0)
 S ^TMP("VPSAPPT",$J,SEQ)="DEL"_U_APPTIEN ;save appointment into result global array
"RTN","VPSAPPT2",160,0)
 QUIT
"RTN","VPSSEND")
0^2^B145478731
"RTN","VPSSEND",1,0)
VPSSEND ;SLOIFO/BT - Send HL7 messages (Appointment Status Change) to VetLink HL7 Server ;01/16/2015 11:23
"RTN","VPSSEND",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5**;Jan 16, 2015;Build 31
"RTN","VPSSEND",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSSEND",4,0)
 ;
"RTN","VPSSEND",5,0)
 ; External Reference DBIA#
"RTN","VPSSEND",6,0)
 ; ------------------------
"RTN","VPSSEND",7,0)
 ; #1496  - ^HLCS(870,            (Controlled Subs)
"RTN","VPSSEND",8,0)
 ; #2171  - $$NS^XUAF4            (Supported)
"RTN","VPSSEND",9,0)
 ; #2462  - ^DGEN( reference      (Controlled Sub) 
"RTN","VPSSEND",10,0)
 ; #2541  - $$KSP^XUPARAM         (Supported)
"RTN","VPSSEND",11,0)
 ; #3065  - STDNAME^XLFNAME       (Supported)
"RTN","VPSSEND",12,0)
 ; #4080  - $$BADADR^DGUTL3       (Supported)
"RTN","VPSSEND",13,0)
 ; #4433  - SDAMA301 call         (Supported)
"RTN","VPSSEND",14,0)
 ; #4716  - $$NEWMSG^HLOAPI       (Supported)
"RTN","VPSSEND",15,0)
 ; #4716  - $$SET^HLOAPI          (Supported)
"RTN","VPSSEND",16,0)
 ; #4716  - $$ADDSEG^HLOAPI       (Supported)
"RTN","VPSSEND",17,0)
 ; #4717  - $$SENDONE^HLOAPI1     (Supported)
"RTN","VPSSEND",18,0)
 ; #4730  - HLOQUE                (Supported)
"RTN","VPSSEND",19,0)
 ; #4853  - $$SETDT^HLOAPI4       (Supported)
"RTN","VPSSEND",20,0)
 ; #10040 - ^SC( references       (Supported)
"RTN","VPSSEND",21,0)
 ; #10063 - %ZTLOAD               (Supported)
"RTN","VPSSEND",22,0)
 ; #6137  - File 2.98, Field 17 (Cancellation Remark) (Private)
"RTN","VPSSEND",23,0)
 ; #6122  - locking/unlocking ^HLB("QUEUE","OUT",LINKPORT,QUEUE,IEN)) 
"RTN","VPSSEND",24,0)
 QUIT
"RTN","VPSSEND",25,0)
 ;
"RTN","VPSSEND",26,0)
EN ;Entry Point called by SDAM APPOINTMENT EVENTS protocol
"RTN","VPSSEND",27,0)
 ; SDATA will be defined when SDAM APPOINTMENT EVENTS protocol calls this entry
"RTN","VPSSEND",28,0)
 N AFTERSTS S AFTERSTS=$G(SDATA("AFTER","STATUS"))
"RTN","VPSSEND",29,0)
 N STATUS S STATUS=$P(AFTERSTS,"^",3)
"RTN","VPSSEND",30,0)
 QUIT:STATUS=""  ; Not a valid appointment
"RTN","VPSSEND",31,0)
 ;
"RTN","VPSSEND",32,0)
 ; -- is VPS HL7 active?
"RTN","VPSSEND",33,0)
 I '$$ACTIVE D ERROR("VPS HL7 IS INACTIVE") QUIT
"RTN","VPSSEND",34,0)
 ;
"RTN","VPSSEND",35,0)
 ; -- queue transmission process
"RTN","VPSSEND",36,0)
 N DFN S DFN=$P(SDATA,"^",2)
"RTN","VPSSEND",37,0)
 N APPTDT S APPTDT=$P(SDATA,"^",3)
"RTN","VPSSEND",38,0)
 N CLINIC S CLINIC=$P(SDATA,"^",4)
"RTN","VPSSEND",39,0)
 ;
"RTN","VPSSEND",40,0)
 I '$$QUE(DFN,APPTDT,CLINIC,STATUS) D ERROR("Unable to queue VPS SEND APPOINTMENT STATUS") QUIT
"RTN","VPSSEND",41,0)
 QUIT
"RTN","VPSSEND",42,0)
 ;
"RTN","VPSSEND",43,0)
ACTIVE() ;Is VPS HL7 active? 
"RTN","VPSSEND",44,0)
 ;Return 1 if HL7 active, 0 othewise
"RTN","VPSSEND",45,0)
 N SITE S SITE=$O(^VPS(853.1,"B","VPS HL7 SITE PARAMETER",0))
"RTN","VPSSEND",46,0)
 QUIT:'SITE 0
"RTN","VPSSEND",47,0)
 QUIT $P(^VPS(853.1,SITE,0),U,2)="Y"
"RTN","VPSSEND",48,0)
 ;
"RTN","VPSSEND",49,0)
QUE(DFN,APPTDT,CLINIC,STATUS) ; -- Queue Send appointment status Job
"RTN","VPSSEND",50,0)
 K ZTSK,IO("Q")
"RTN","VPSSEND",51,0)
 S ZTIO="NULL"
"RTN","VPSSEND",52,0)
 S ZTDTH=$H
"RTN","VPSSEND",53,0)
 S ZTDESC="VPS SEND APPOINTMENT STATUS"
"RTN","VPSSEND",54,0)
 S ZTRTN="SEND^VPSSEND"
"RTN","VPSSEND",55,0)
 ;
"RTN","VPSSEND",56,0)
 N SENDAPP S SENDAPP="VPS SEND APPT STATUS"
"RTN","VPSSEND",57,0)
 N RCVAPP S RCVAPP="VPS VECNA APPT STATUS"
"RTN","VPSSEND",58,0)
 N LINK S LINK="VPSAPPT"
"RTN","VPSSEND",59,0)
 ;
"RTN","VPSSEND",60,0)
 N SAV F SAV="CLINIC","DFN","APPTDT","STATUS","SENDAPP","RCVAPP","LINK" S ZTSAVE(SAV)=""
"RTN","VPSSEND",61,0)
 D ^%ZTLOAD
"RTN","VPSSEND",62,0)
 QUIT ZTSK
"RTN","VPSSEND",63,0)
 ;
"RTN","VPSSEND",64,0)
SEND ; -- Send HL7 message to VetLink
"RTN","VPSSEND",65,0)
 ;At this point LINK, CLINIC, APPTDT, STATUS, RCVAPP, SENDAPP should exist, sent by Taskman queue
"RTN","VPSSEND",66,0)
 N QUEUE S QUEUE="VPSSEND"_$J
"RTN","VPSSEND",67,0)
 N LINKPORT S LINKPORT=$$PREPQUE(LINK,QUEUE)
"RTN","VPSSEND",68,0)
 I +LINKPORT=-1 D ERROR($P(LINKPORT,U,2)) QUIT
"RTN","VPSSEND",69,0)
 ;
"RTN","VPSSEND",70,0)
 N APPT
"RTN","VPSSEND",71,0)
 S APPT("DFN")=DFN
"RTN","VPSSEND",72,0)
 S APPT("CLINIC")=CLINIC
"RTN","VPSSEND",73,0)
 S APPT("CLINIC NAME")=$P($G(^SC(CLINIC,0)),U)
"RTN","VPSSEND",74,0)
 S APPT("APPOINTMENT DATE")=APPTDT
"RTN","VPSSEND",75,0)
 ;
"RTN","VPSSEND",76,0)
 N PARMS,MSG
"RTN","VPSSEND",77,0)
 S PARMS("MESSAGE TYPE")="ADT"
"RTN","VPSSEND",78,0)
 S PARMS("EVENT")="A01"
"RTN","VPSSEND",79,0)
 S PARMS("MESSAGE STRUCTURE")="ADT_A01"
"RTN","VPSSEND",80,0)
 S PARMS("SENDING APPLICATION")=SENDAPP
"RTN","VPSSEND",81,0)
 S PARMS("ACCEPT ACK TYPE")="AL"
"RTN","VPSSEND",82,0)
 S PARMS("APP ACK TYPE")="NE"
"RTN","VPSSEND",83,0)
 S PARMS("QUEUE")=QUEUE
"RTN","VPSSEND",84,0)
 ;
"RTN","VPSSEND",85,0)
 N WHOTO
"RTN","VPSSEND",86,0)
 S WHOTO("RECEIVING APPLICATION")=RCVAPP
"RTN","VPSSEND",87,0)
 S WHOTO("FACILITY LINK NAME")=LINK
"RTN","VPSSEND",88,0)
 ;
"RTN","VPSSEND",89,0)
 N OK,ERR
"RTN","VPSSEND",90,0)
 S OK=$$NEWMSG^HLOAPI(.PARMS,.MSG,.ERR)
"RTN","VPSSEND",91,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",92,0)
 ;
"RTN","VPSSEND",93,0)
 ; -- Event segment
"RTN","VPSSEND",94,0)
 I OK D EVN(.APPT,.SEG)
"RTN","VPSSEND",95,0)
 I OK S OK=$$ADDSEG^HLOAPI(.MSG,.SEG,.ERR)
"RTN","VPSSEND",96,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",97,0)
 ;
"RTN","VPSSEND",98,0)
 ; -- Patient ID segment
"RTN","VPSSEND",99,0)
 I OK D PID(DFN,.SEG)
"RTN","VPSSEND",100,0)
 I OK S OK=$$ADDSEG^HLOAPI(.MSG,.SEG,.ERR)
"RTN","VPSSEND",101,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",102,0)
 ;
"RTN","VPSSEND",103,0)
 ; -- Patient Visit Segment for Record Flags
"RTN","VPSSEND",104,0)
 S OK=$$PV1(DFN,.SEG,.ERR)
"RTN","VPSSEND",105,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",106,0)
 ;
"RTN","VPSSEND",107,0)
 ; -- Insurance segment
"RTN","VPSSEND",108,0)
 I OK D IN1(DFN,.SEG)
"RTN","VPSSEND",109,0)
 I OK S OK=$$ADDSEG^HLOAPI(.MSG,.SEG,.ERR)
"RTN","VPSSEND",110,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",111,0)
 ;
"RTN","VPSSEND",112,0)
 ; -- VA Patient Eligibility segment
"RTN","VPSSEND",113,0)
 N VAEL D ELIG^VADPT
"RTN","VPSSEND",114,0)
 I OK D ZEL(.VAEL,.SEG)
"RTN","VPSSEND",115,0)
 I OK S OK=$$ADDSEG^HLOAPI(.MSG,.SEG,.ERR)
"RTN","VPSSEND",116,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",117,0)
 ;
"RTN","VPSSEND",118,0)
 ; -- VA Enrollment segment
"RTN","VPSSEND",119,0)
 I OK D ZEN(DFN,.SEG)
"RTN","VPSSEND",120,0)
 I OK S OK=$$ADDSEG^HLOAPI(.MSG,.SEG,.ERR)
"RTN","VPSSEND",121,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",122,0)
 ;
"RTN","VPSSEND",123,0)
 ; -- VA Means Test segment
"RTN","VPSSEND",124,0)
 I OK D ZMT(.VAEL,.SEG)
"RTN","VPSSEND",125,0)
 I OK S OK=$$ADDSEG^HLOAPI(.MSG,.SEG,.ERR)
"RTN","VPSSEND",126,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",127,0)
 ;
"RTN","VPSSEND",128,0)
 ; -- Send message
"RTN","VPSSEND",129,0)
 I OK S OK=$$SENDONE^HLOAPI1(.MSG,.PARMS,.WHOTO,.ERR)
"RTN","VPSSEND",130,0)
 I 'OK D ERROR(ERR,LINKPORT,QUEUE) QUIT
"RTN","VPSSEND",131,0)
 ;
"RTN","VPSSEND",132,0)
 D STARTQUE(LINKPORT,QUEUE) ;Start HLO Queue to send message
"RTN","VPSSEND",133,0)
 D UNLQUE(LINKPORT,QUEUE)
"RTN","VPSSEND",134,0)
 QUIT
"RTN","VPSSEND",135,0)
 ;
"RTN","VPSSEND",136,0)
ERROR(ERR,LINKPORT,QUEUE) ;Store error
"RTN","VPSSEND",137,0)
 I $G(LINKPORT)'="",$G(QUEUE)'="" D UNLQUE(LINKPORT,QUEUE)
"RTN","VPSSEND",138,0)
 ;
"RTN","VPSSEND",139,0)
 N VPSFDA,VPSERR,SITE
"RTN","VPSSEND",140,0)
 S SITE=$O(^VPS(853.1,"B","VPS HL7 SITE PARAMETER",0))
"RTN","VPSSEND",141,0)
 ;
"RTN","VPSSEND",142,0)
 I SITE D
"RTN","VPSSEND",143,0)
 . S VPSFDA(853.1,SITE_",",2)=$$NOW^XLFDT()
"RTN","VPSSEND",144,0)
 . S VPSFDA(853.1,SITE_",",3)=ERR
"RTN","VPSSEND",145,0)
 . D FILE^DIE("E","VPSFDA","VPSERR")
"RTN","VPSSEND",146,0)
 ;
"RTN","VPSSEND",147,0)
 I 'SITE D
"RTN","VPSSEND",148,0)
 . S VPSFDA(853.1,"+1,",.01)="VPS HL7 SITE PARAMETER"
"RTN","VPSSEND",149,0)
 . S VPSFDA(853.1,"+1,",1)="N"
"RTN","VPSSEND",150,0)
 . S VPSFDA(853.1,"+1,",2)=$$NOW^XLFDT()
"RTN","VPSSEND",151,0)
 . S VPSFDA(853.1,"+1,",3)=ERR
"RTN","VPSSEND",152,0)
 . D UPDATE^DIE("E","VPSFDA","IENS","VPSERR")
"RTN","VPSSEND",153,0)
 ;
"RTN","VPSSEND",154,0)
 QUIT
"RTN","VPSSEND",155,0)
 ;
"RTN","VPSSEND",156,0)
PREPQUE(LINK,QUEUE) ; -- Prepare to use HL7 Queue
"RTN","VPSSEND",157,0)
 ; INPUT 
"RTN","VPSSEND",158,0)
 ;   LINK  : HL LOGICAL LINK
"RTN","VPSSEND",159,0)
 ;   QUEUE : HL7 Transmission Queue
"RTN","VPSSEND",160,0)
 ; RETURN
"RTN","VPSSEND",161,0)
 ;   LINK_":"_HLOPORT  for success
"RTN","VPSSEND",162,0)
 ;   -1^Error Message  for error
"RTN","VPSSEND",163,0)
 ;
"RTN","VPSSEND",164,0)
 N IEN S IEN=$O(^HLCS(870,"B",LINK,0))
"RTN","VPSSEND",165,0)
 QUIT:'IEN "-1^HL LOGICAL LINK NOT DEFINED"
"RTN","VPSSEND",166,0)
 ;
"RTN","VPSSEND",167,0)
 N NODE S NODE=$G(^HLCS(870,IEN,400))
"RTN","VPSSEND",168,0)
 N HLOPORT S HLOPORT=$P(NODE,"^",8)
"RTN","VPSSEND",169,0)
 S:'HLOPORT HLOPORT=$P(NODE,"^",2)
"RTN","VPSSEND",170,0)
 QUIT:'HLOPORT "-1^INVALID HL LOGICAL LINK PORT"
"RTN","VPSSEND",171,0)
 ;
"RTN","VPSSEND",172,0)
 N LINKPORT S LINKPORT=LINK_":"_HLOPORT
"RTN","VPSSEND",173,0)
 L +^HLB("QUEUE","OUT",LINKPORT,QUEUE):3 E  QUIT "-1^QUEUE is busy"
"RTN","VPSSEND",174,0)
 D STOPQUE^HLOQUE("OUT",QUEUE)
"RTN","VPSSEND",175,0)
 ;
"RTN","VPSSEND",176,0)
 QUIT LINKPORT
"RTN","VPSSEND",177,0)
 ;
"RTN","VPSSEND",178,0)
STARTQUE(LINKPORT,QUEUE) ;start Queue
"RTN","VPSSEND",179,0)
 D UNLQUE(LINKPORT,QUEUE)
"RTN","VPSSEND",180,0)
 D STARTQUE^HLOQUE("OUT",QUEUE)
"RTN","VPSSEND",181,0)
 QUIT
"RTN","VPSSEND",182,0)
 ;
"RTN","VPSSEND",183,0)
UNLQUE(LINKPORT,QUEUE) ;Unlock Queue
"RTN","VPSSEND",184,0)
 L -^HLB("QUEUE","OUT",LINKPORT,QUEUE)
"RTN","VPSSEND",185,0)
 QUIT
"RTN","VPSSEND",186,0)
 ;
"RTN","VPSSEND",187,0)
EVN(APPT,SEG) ; -- generate PID segment
"RTN","VPSSEND",188,0)
 ;
"RTN","VPSSEND",189,0)
 ;Description:
"RTN","VPSSEND",190,0)
 ; Builds the EVN segment using the HLO segment building APIs.
"RTN","VPSSEND",191,0)
 ;
"RTN","VPSSEND",192,0)
 ; The fields that are included in the segment are:
"RTN","VPSSEND",193,0)
 ;  EVN-1 Not used
"RTN","VPSSEND",194,0)
 ;  EVN-2 Appointment date (Fileman)
"RTN","VPSSEND",195,0)
 ;  EVN-3 Appointment date (HL7)
"RTN","VPSSEND",196,0)
 ;
"RTN","VPSSEND",197,0)
 ;Input:
"RTN","VPSSEND",198,0)
 ;  APPT (pass-by-refernce) - Appointment information 
"RTN","VPSSEND",199,0)
 ;
"RTN","VPSSEND",200,0)
 ;Output:
"RTN","VPSSEND",201,0)
 ;  SEG (pass-by-reference) The segment, returned as a list of fields.
"RTN","VPSSEND",202,0)
 ;
"RTN","VPSSEND",203,0)
 K SEG S SEG="" ;The segment should start off blank.
"RTN","VPSSEND",204,0)
 ;
"RTN","VPSSEND",205,0)
 ; -- Use the HLO APIs to set the data into the segment.
"RTN","VPSSEND",206,0)
 D SET^HLOAPI(.SEG,"EVN",0) ;Set the segment type.
"RTN","VPSSEND",207,0)
 ;
"RTN","VPSSEND",208,0)
 ;Set Appointment Date into EVN-2 (Fileman date format) and EVN-3 (HL7 date format)
"RTN","VPSSEND",209,0)
 D SET^HLOAPI(.SEG,APPT("APPOINTMENT DATE"),2)
"RTN","VPSSEND",210,0)
 D SETDT^HLOAPI4(.SEG,APPT("APPOINTMENT DATE"),3)
"RTN","VPSSEND",211,0)
 ;
"RTN","VPSSEND",212,0)
 ;get appointment Status/type info
"RTN","VPSSEND",213,0)
 N PARAM
"RTN","VPSSEND",214,0)
 S PARAM(1)=APPT("APPOINTMENT DATE")_";"_APPT("APPOINTMENT DATE")
"RTN","VPSSEND",215,0)
 S PARAM("FLDS")="1;2;4;10;22"
"RTN","VPSSEND",216,0)
 S PARAM(4)=APPT("DFN")
"RTN","VPSSEND",217,0)
 N APPTCNT S APPTCNT=$$SDAPI^SDAMA301(.PARAM)
"RTN","VPSSEND",218,0)
 N TMP S TMP=$G(^TMP($J,"SDAMA301",APPT("DFN"),APPT("CLINIC"),APPT("APPOINTMENT DATE")))
"RTN","VPSSEND",219,0)
 ;
"RTN","VPSSEND",220,0)
 I TMP'="" D
"RTN","VPSSEND",221,0)
 . ;Set appointment Status IEN into EVN-4
"RTN","VPSSEND",222,0)
 . N STATUS S STATUS=$P(TMP,U,22)
"RTN","VPSSEND",223,0)
 . D SET^HLOAPI(.SEG,$P(STATUS,";"),4) ;appointment status ien
"RTN","VPSSEND",224,0)
 . ;
"RTN","VPSSEND",225,0)
 . ;Set Status (Display) into EVN-5, component 1
"RTN","VPSSEND",226,0)
 . D SET^HLOAPI(.SEG,$P(STATUS,";",3),5,1) ;Appointment Print Status (what is displayed)
"RTN","VPSSEND",227,0)
 . ;
"RTN","VPSSEND",228,0)
 . ;Set appointment type IEN/name into ENV-5, component 4 and 5
"RTN","VPSSEND",229,0)
 . N ATYPE S ATYPE=$P(TMP,U,10)
"RTN","VPSSEND",230,0)
 . D SET^HLOAPI(.SEG,$P(ATYPE,";"),5,4) ;appointment type ien
"RTN","VPSSEND",231,0)
 . D SET^HLOAPI(.SEG,$P(ATYPE,";",2),5,5) ;appointment type name
"RTN","VPSSEND",232,0)
 ;
"RTN","VPSSEND",233,0)
 ;Set the Clinic IEN/Name into ENV-5, component 2 and 3
"RTN","VPSSEND",234,0)
 D SET^HLOAPI(.SEG,APPT("CLINIC"),5,2)
"RTN","VPSSEND",235,0)
 D SET^HLOAPI(.SEG,APPT("CLINIC NAME"),5,3)
"RTN","VPSSEND",236,0)
 ;
"RTN","VPSSEND",237,0)
 ;Set comments/cancellation remarks into ENV-6
"RTN","VPSSEND",238,0)
 N IENS S IENS=APPT("APPOINTMENT DATE")_","_APPT("DFN")_","
"RTN","VPSSEND",239,0)
 N APPTOUT D GETS^DIQ(2.98,IENS,"17","IE","APPTOUT")
"RTN","VPSSEND",240,0)
 N APPTCMTS S APPTCMTS=$G(APPTOUT(2.98,IENS,17,"I"))
"RTN","VPSSEND",241,0)
 K APPTOUT
"RTN","VPSSEND",242,0)
 I APPTCMTS'="" D SET^HLOAPI(.SEG,APPTCMTS,6,1) ;cancellation remarks
"RTN","VPSSEND",243,0)
 ;
"RTN","VPSSEND",244,0)
 QUIT
"RTN","VPSSEND",245,0)
 ;
"RTN","VPSSEND",246,0)
PID(DFN,SEG) ; -- generate PID segment
"RTN","VPSSEND",247,0)
 ;
"RTN","VPSSEND",248,0)
 ;Description:
"RTN","VPSSEND",249,0)
 ; Builds the PID segment using the HLO segment building APIs.
"RTN","VPSSEND",250,0)
 ; PIMS APIs are called to obtain data from PATIENT file (#2).
"RTN","VPSSEND",251,0)
 ;
"RTN","VPSSEND",252,0)
 ; The fields that are included in the segment are:
"RTN","VPSSEND",253,0)
 ;  PID-1 Always set to '1'
"RTN","VPSSEND",254,0)
 ;  PID-2 Patient DFN, Station#, unused, Assigning Authority code
"RTN","VPSSEND",255,0)
 ;  PID-4 Sensitive flag
"RTN","VPSSEND",256,0)
 ;  PID-11 BadAddressID_BadAddressName
"RTN","VPSSEND",257,0)
 ;  PID-13 unused, unused, unused, unused, Patient Email Address
"RTN","VPSSEND",258,0)
 ;  PID-19 patient SSN
"RTN","VPSSEND",259,0)
 ;
"RTN","VPSSEND",260,0)
 ;Input:
"RTN","VPSSEND",261,0)
 ; DFN (required) The IEN of the record in the PATIENT file (#2).
"RTN","VPSSEND",262,0)
 ;
"RTN","VPSSEND",263,0)
 ;Output:
"RTN","VPSSEND",264,0)
 ;  SEG (pass-by-reference) The segment, returned as a list of fields.
"RTN","VPSSEND",265,0)
 ;
"RTN","VPSSEND",266,0)
 K SEG S SEG="" ;The segment should start off blank.
"RTN","VPSSEND",267,0)
 ;
"RTN","VPSSEND",268,0)
 ; -- Use the HLO APIs to set the data into the segment.
"RTN","VPSSEND",269,0)
 D SET^HLOAPI(.SEG,"PID",0) ;Set the segment type.
"RTN","VPSSEND",270,0)
 D SET^HLOAPI(.SEG,1,1) ;Set PID-1.
"RTN","VPSSEND",271,0)
 ;
"RTN","VPSSEND",272,0)
 ; -- Set dfn to PID-2, component 1
"RTN","VPSSEND",273,0)
 D SET^HLOAPI(.SEG,DFN,2,1)
"RTN","VPSSEND",274,0)
 ;
"RTN","VPSSEND",275,0)
 ; -- Set station number to PID-2, component 2
"RTN","VPSSEND",276,0)
 N STATION S STATION=$E($P($$NS^XUAF4($$KSP^XUPARAM("INST")),U,2),1,3) ; station number
"RTN","VPSSEND",277,0)
 D SET^HLOAPI(.SEG,STATION,2,2)
"RTN","VPSSEND",278,0)
 ;
"RTN","VPSSEND",279,0)
 ; -- Set As Assigning Authority code to PID-2, component 4
"RTN","VPSSEND",280,0)
 D SET^HLOAPI(.SEG,"USVHA",2,4)
"RTN","VPSSEND",281,0)
 ; 
"RTN","VPSSEND",282,0)
 ; -- Set Sensitive to PD1-4
"RTN","VPSSEND",283,0)
 N VPSARR D SENLOG^VPSRPC16(.VPSARR,DFN)
"RTN","VPSSEND",284,0)
 N SENS S SENS=$P($G(VPSARR(1)),U,4)
"RTN","VPSSEND",285,0)
 D:SENS'="" SET^HLOAPI(.SEG,SENS,4)
"RTN","VPSSEND",286,0)
 ;
"RTN","VPSSEND",287,0)
 ; -- Set Patient Name  to PD1-5
"RTN","VPSSEND",288,0)
 N RES D GETS^DIQ(2,DFN_",",".01;.09;.133","E","RES")
"RTN","VPSSEND",289,0)
 N PATNAM S PATNAM=$G(RES(2,DFN_",",.01,"E"))
"RTN","VPSSEND",290,0)
 N NAMPARSE S NAMPARSE=$$NAMPARSE(PATNAM)
"RTN","VPSSEND",291,0)
 D SET^HLOAPI(.SEG,$P(NAMPARSE,U),5,1) ;Last name
"RTN","VPSSEND",292,0)
 D SET^HLOAPI(.SEG,$P(NAMPARSE,U,2),5,2) ;First name
"RTN","VPSSEND",293,0)
 D SET^HLOAPI(.SEG,$P(NAMPARSE,U,3),5,3) ;Initial
"RTN","VPSSEND",294,0)
 ;
"RTN","VPSSEND",295,0)
 ; -- Set Bad Address Indicator to PD1-11, component 2
"RTN","VPSSEND",296,0)
 N BADADR S BADADR=$$BADADR^DGUTL3(DFN)
"RTN","VPSSEND",297,0)
 I BADADR'="" D
"RTN","VPSSEND",298,0)
 . N BADADRNM S BADADRNM=""
"RTN","VPSSEND",299,0)
 . I BADADR=1 S BADADRNM="UNDELIVERABLE"
"RTN","VPSSEND",300,0)
 . I BADADR=2 S BADADRNM="HOMELESS"
"RTN","VPSSEND",301,0)
 . I BADADR=3 S BADADRNM="OTHER"
"RTN","VPSSEND",302,0)
 . D SET^HLOAPI(.SEG,BADADR_"_"_BADADRNM,11,2)
"RTN","VPSSEND",303,0)
 ;
"RTN","VPSSEND",304,0)
 ; -- Set Patient Email information to PID-13, component 5
"RTN","VPSSEND",305,0)
 N EMAIL S EMAIL=$G(RES(2,DFN_",",.133,"E"))
"RTN","VPSSEND",306,0)
 D:EMAIL'="" SET^HLOAPI(.SEG,EMAIL,13,5)
"RTN","VPSSEND",307,0)
 ;
"RTN","VPSSEND",308,0)
 ; -- Set Social Security Number to PID-19
"RTN","VPSSEND",309,0)
 N SSN S SSN=$G(RES(2,DFN_",",.09,"E"))
"RTN","VPSSEND",310,0)
 D SET^HLOAPI(.SEG,SSN,19)
"RTN","VPSSEND",311,0)
 ;
"RTN","VPSSEND",312,0)
 QUIT
"RTN","VPSSEND",313,0)
 ;
"RTN","VPSSEND",314,0)
PV1(DFN,SEG,ERR) ; -- Patient Visit segment for patient record Flags
"RTN","VPSSEND",315,0)
 ;
"RTN","VPSSEND",316,0)
 ;Description:
"RTN","VPSSEND",317,0)
 ; Builds the PV1 segment using the HLO segment building APIs.
"RTN","VPSSEND",318,0)
 ;
"RTN","VPSSEND",319,0)
 ; The fields that are included in the segment are:
"RTN","VPSSEND",320,0)
 ;  PV1-1 PRF number (1..n)
"RTN","VPSSEND",321,0)
 ;  PV1-2 Always set to 'U' - Unknown
"RTN","VPSSEND",322,0)
 ;  PV1-5 Record flags: Flag Origin(national/local), Flag Type, unused, Flag Name
"RTN","VPSSEND",323,0)
 ;
"RTN","VPSSEND",324,0)
 ;Input:
"RTN","VPSSEND",325,0)
 ;  DFN (required) The IEN of the record in the PATIENT file (#2).
"RTN","VPSSEND",326,0)
 ;
"RTN","VPSSEND",327,0)
 ;Output:
"RTN","VPSSEND",328,0)
 ;  SEG (pass-by-reference) The segment, returned as a list of fields.
"RTN","VPSSEND",329,0)
 ;  ERR (pass-by-reference) Error Message
"RTN","VPSSEND",330,0)
 ;
"RTN","VPSSEND",331,0)
 ; -- Set Balance to PV1-26 for the first flag only
"RTN","VPSSEND",332,0)
 K SEG S SEG="" ;The segment should start off blank.
"RTN","VPSSEND",333,0)
 K VPSARR D BAL^VPSRPC26(.VPSARR,DFN)
"RTN","VPSSEND",334,0)
 N BAL S BAL=$P($G(VPSARR(1)),U,4)
"RTN","VPSSEND",335,0)
 D:BAL'="" SET^HLOAPI(.SEG,BAL,26)
"RTN","VPSSEND",336,0)
 ;
"RTN","VPSSEND",337,0)
 ; -- Set patient record flags to PV1-5
"RTN","VPSSEND",338,0)
 N PRFLAGS D GETPRF^VPSAPPT(DFN,.PRFLAGS)
"RTN","VPSSEND",339,0)
 N IDX,NARR,NARRTXT
"RTN","VPSSEND",340,0)
 N OK S OK=1
"RTN","VPSSEND",341,0)
 N PRF,CNT S CNT=$O(PRFLAGS("PRF",""),-1)
"RTN","VPSSEND",342,0)
 S:CNT="" CNT=1
"RTN","VPSSEND",343,0)
 ;
"RTN","VPSSEND",344,0)
 F PRF=1:1:CNT D  Q:'OK
"RTN","VPSSEND",345,0)
 . D SET^HLOAPI(.SEG,"PV1",0) ;Set the segment type.
"RTN","VPSSEND",346,0)
 . D SET^HLOAPI(.SEG,PRF,1) ;Set PV1-1
"RTN","VPSSEND",347,0)
 . D SET^HLOAPI(.SEG,"U",2) ;Set PV1-2 to Unknown
"RTN","VPSSEND",348,0)
 . I $D(PRFLAGS("PRF",PRF)) D
"RTN","VPSSEND",349,0)
 . . D SET^HLOAPI(.SEG,$G(PRFLAGS("PRF",PRF,"FLAG ORIGINATION")),5,1) ;Flag From (National/Local)
"RTN","VPSSEND",350,0)
 . . D SET^HLOAPI(.SEG,$G(PRFLAGS("PRF",PRF,"FLAG TYPE")),5,2) ;Flag Type
"RTN","VPSSEND",351,0)
 . . D SET^HLOAPI(.SEG,$G(PRFLAGS("PRF",PRF,"FLAG NAME")),5,4) ;Flag Name
"RTN","VPSSEND",352,0)
 . S OK=$$ADDSEG^HLOAPI(.MSG,.SEG,.ERR)
"RTN","VPSSEND",353,0)
 ;
"RTN","VPSSEND",354,0)
 QUIT OK
"RTN","VPSSEND",355,0)
 ;
"RTN","VPSSEND",356,0)
ZEN(DFN,SEG) ; -- generate ZEN segment (VA Enrollment)
"RTN","VPSSEND",357,0)
 ;
"RTN","VPSSEND",358,0)
 ;Description:
"RTN","VPSSEND",359,0)
 ; Builds the ZEN segment using the HLO segment building APIs.
"RTN","VPSSEND",360,0)
 ;
"RTN","VPSSEND",361,0)
 ; The fields that are included in the segment are:
"RTN","VPSSEND",362,0)
 ;  ZEN-1  Always set to '1'
"RTN","VPSSEND",363,0)
 ;  ZEN-4  Enrollment Status
"RTN","VPSSEND",364,0)
 ;  ZEN-10 Pre-Registration Date Changed
"RTN","VPSSEND",365,0)
 ;
"RTN","VPSSEND",366,0)
 ;Input:
"RTN","VPSSEND",367,0)
 ;  DFN (required) The IEN of the record in the PATIENT file (#2).
"RTN","VPSSEND",368,0)
 ;
"RTN","VPSSEND",369,0)
 ;Output:
"RTN","VPSSEND",370,0)
 ;  SEG (pass-by-reference) The segment, returned as a list of fields.
"RTN","VPSSEND",371,0)
 ;
"RTN","VPSSEND",372,0)
 K SEG S SEG="" ;The segment should start off blank.
"RTN","VPSSEND",373,0)
 ;
"RTN","VPSSEND",374,0)
 ; -- Use the HLO APIs to set the data into the segment.
"RTN","VPSSEND",375,0)
 D SET^HLOAPI(.SEG,"ZEN",0) ;Set the segment type.
"RTN","VPSSEND",376,0)
 D SET^HLOAPI(.SEG,1,1) ;Set ZEN-1.
"RTN","VPSSEND",377,0)
 ;
"RTN","VPSSEND",378,0)
 ; -- Set Enrollment Status to ZEN-4
"RTN","VPSSEND",379,0)
 N ENRIEN S ENRIEN=$O(^DGEN(27.11,"C",DFN,""),-1)
"RTN","VPSSEND",380,0)
 I ENRIEN D
"RTN","VPSSEND",381,0)
 . N DFENR D GET^DGENA(ENRIEN,.DGENR)
"RTN","VPSSEND",382,0)
 . N ENRSTAT S ENRSTAT=$G(DGENR("STATUS"))
"RTN","VPSSEND",383,0)
 . I ENRSTAT'="" D
"RTN","VPSSEND",384,0)
 . . N ESNAME S ESNAME=$$GET1^DIQ(27.11,ENRIEN_",",.04,"E")
"RTN","VPSSEND",385,0)
 . . D SET^HLOAPI(.SEG,ENRSTAT,4,1)
"RTN","VPSSEND",386,0)
 . . D SET^HLOAPI(.SEG,ESNAME,4,2)
"RTN","VPSSEND",387,0)
 ;
"RTN","VPSSEND",388,0)
 ; -- Set Pre-Registration Date Changed TO ZEN-10 (Fileman Date) and ZEN-11 (HL7 Date)
"RTN","VPSSEND",389,0)
 K VPSARR D DGS^VPSRPC26(.VPSARR,DFN)
"RTN","VPSSEND",390,0)
 N PRDT S PRDT=$P($G(VPSARR(1)),U,4)
"RTN","VPSSEND",391,0)
 I PRDT'="" D
"RTN","VPSSEND",392,0)
 . D SET^HLOAPI(.SEG,PRDT,10,1)
"RTN","VPSSEND",393,0)
 . D SETDT^HLOAPI4(.SEG,PRDT,11,2)
"RTN","VPSSEND",394,0)
 ;
"RTN","VPSSEND",395,0)
 QUIT
"RTN","VPSSEND",396,0)
 ;
"RTN","VPSSEND",397,0)
ZEL(VAEL,SEG) ; -- generate ZEL segment (VA Patient Eligibility)
"RTN","VPSSEND",398,0)
 ;
"RTN","VPSSEND",399,0)
 ;Description:
"RTN","VPSSEND",400,0)
 ; Builds the ZEL segment using the HLO segment building APIs.
"RTN","VPSSEND",401,0)
 ;
"RTN","VPSSEND",402,0)
 ; The fields that are included in the segment are:
"RTN","VPSSEND",403,0)
 ;  ZEL-1   Always set to '1'
"RTN","VPSSEND",404,0)
 ;  ZEL-2   Eligibility Code
"RTN","VPSSEND",405,0)
 ;  ZEL-4   Eligibility Status
"RTN","VPSSEND",406,0)
 ;  ZEL-11  Ineligible date (Fileman format)
"RTN","VPSSEND",407,0)
 ;  ZEL-12  Ineligible date (HL7 format)
"RTN","VPSSEND",408,0)
 ;
"RTN","VPSSEND",409,0)
 ;Input:
"RTN","VPSSEND",410,0)
 ; DFN (required) The IEN of the record in the PATIENT file (#2).
"RTN","VPSSEND",411,0)
 ;
"RTN","VPSSEND",412,0)
 ;Output:
"RTN","VPSSEND",413,0)
 ;  SEG (pass-by-reference) The segment, returned as a list of fields.
"RTN","VPSSEND",414,0)
 ;
"RTN","VPSSEND",415,0)
 K SEG S SEG="" ;The segment should start off blank.
"RTN","VPSSEND",416,0)
 ;
"RTN","VPSSEND",417,0)
 ; -- Use the HLO APIs to set the data into the segment.
"RTN","VPSSEND",418,0)
 D SET^HLOAPI(.SEG,"ZEL",0) ;Set the segment type.
"RTN","VPSSEND",419,0)
 D SET^HLOAPI(.SEG,1,1) ;Set ZEL-1.
"RTN","VPSSEND",420,0)
 ;
"RTN","VPSSEND",421,0)
 ; -- Set Primary Eligibility Code to ZEL-2
"RTN","VPSSEND",422,0)
 N ELIGSTAT S ELIGSTAT=$P($G(VAEL(8)),U)
"RTN","VPSSEND",423,0)
 D:ELIGSTAT'="" SET^HLOAPI(.SEG,ELIGSTAT,2)
"RTN","VPSSEND",424,0)
 ;
"RTN","VPSSEND",425,0)
 ; -- Set Eligibility Status to ZEL-4
"RTN","VPSSEND",426,0)
 S ELIGSTAT=$P($G(VAEL(8)),U,2)
"RTN","VPSSEND",427,0)
 D:ELIGSTAT'="" SET^HLOAPI(.SEG,ELIGSTAT,4)
"RTN","VPSSEND",428,0)
 ;
"RTN","VPSSEND",429,0)
 ; -- Set Ineligible date to ZEL-11 (Fileman Date) and ZEL-12 (HL7 date)
"RTN","VPSSEND",430,0)
 N IELIGDT S IELIGDT=$P($G(VAEL(5,1)),U)
"RTN","VPSSEND",431,0)
 I IELIGDT'="" D
"RTN","VPSSEND",432,0)
 . D SET^HLOAPI(.SEG,IELIGDT,11)
"RTN","VPSSEND",433,0)
 . D SETDT^HLOAPI4(.SEG,IELIGDT,12)
"RTN","VPSSEND",434,0)
 ;
"RTN","VPSSEND",435,0)
 QUIT
"RTN","VPSSEND",436,0)
 ;
"RTN","VPSSEND",437,0)
ZMT(VAEL,SEG) ; -- generate ZMT segment (VA Means Test)
"RTN","VPSSEND",438,0)
 ;
"RTN","VPSSEND",439,0)
 ;Description:
"RTN","VPSSEND",440,0)
 ; Builds the ZMT segment for the Mean Test using the HLO segment building APIs. 
"RTN","VPSSEND",441,0)
 ;
"RTN","VPSSEND",442,0)
 ; The fields included in the segment are:
"RTN","VPSSEND",443,0)
 ;  ZMT-1   Always set to '1'
"RTN","VPSSEND",444,0)
 ;  ZMT-3  Mean Test Status
"RTN","VPSSEND",445,0)
 ;
"RTN","VPSSEND",446,0)
 ;Input:
"RTN","VPSSEND",447,0)
 ;  DFN (required) The IEN of the record in the PATIENT file (#2).
"RTN","VPSSEND",448,0)
 ;
"RTN","VPSSEND",449,0)
 ;Output:
"RTN","VPSSEND",450,0)
 ;  SEG (pass-by-reference) Will return an array containing the segment.
"RTN","VPSSEND",451,0)
 ;    The ADDSEG^HLOAPI API must be called to move the segment into
"RTN","VPSSEND",452,0)
 ;    the message. 
"RTN","VPSSEND",453,0)
 ;
"RTN","VPSSEND",454,0)
 K SEG S SEG="" ;The segment should start off blank.
"RTN","VPSSEND",455,0)
 ;
"RTN","VPSSEND",456,0)
 ; -- Use the HLO APIs to set the data into the segment.
"RTN","VPSSEND",457,0)
 D SET^HLOAPI(.SEG,"ZMT",0) ;Set the segment type.
"RTN","VPSSEND",458,0)
 D SET^HLOAPI(.SEG,1,1) ;Set ZMT-1.
"RTN","VPSSEND",459,0)
 ;
"RTN","VPSSEND",460,0)
 ; -- Set means test status to ZMT-3
"RTN","VPSSEND",461,0)
 N MTS S MTS=$P($G(VAEL(9)),U,2)
"RTN","VPSSEND",462,0)
 D:MTS'="" SET^HLOAPI(.SEG,MTS,3)
"RTN","VPSSEND",463,0)
 ;
"RTN","VPSSEND",464,0)
 QUIT
"RTN","VPSSEND",465,0)
 ;
"RTN","VPSSEND",466,0)
IN1(DFN,SEG) ; -- generate IN1 segment (Insurance Information)
"RTN","VPSSEND",467,0)
 ;
"RTN","VPSSEND",468,0)
 ;Description:
"RTN","VPSSEND",469,0)
 ; Builds the IN1 segment for the Insurance information using the HLO segment building APIs. 
"RTN","VPSSEND",470,0)
 ;
"RTN","VPSSEND",471,0)
 ; The fields included in the segment are:
"RTN","VPSSEND",472,0)
 ;  IN1-1   Always set to '1'
"RTN","VPSSEND",473,0)
 ;  IN1-2   Patient Insured (Y or N)
"RTN","VPSSEND",474,0)
 ;
"RTN","VPSSEND",475,0)
 ;Input:
"RTN","VPSSEND",476,0)
 ;  DFN (required) The IEN of the record in the PATIENT file (#2).
"RTN","VPSSEND",477,0)
 ;
"RTN","VPSSEND",478,0)
 ;Output:
"RTN","VPSSEND",479,0)
 ;  SEG (pass-by-reference) Will return an array containing the segment.
"RTN","VPSSEND",480,0)
 ;    The ADDSEG^HLOAPI API must be called to move the segment into
"RTN","VPSSEND",481,0)
 ;    the message. 
"RTN","VPSSEND",482,0)
 ;
"RTN","VPSSEND",483,0)
 K SEG S SEG="" ;The segment should start off blank.
"RTN","VPSSEND",484,0)
 ;
"RTN","VPSSEND",485,0)
 ; -- Use the HLO APIs to set the data into the segment.
"RTN","VPSSEND",486,0)
 D SET^HLOAPI(.SEG,"IN1",0) ;Set the segment type.
"RTN","VPSSEND",487,0)
 D SET^HLOAPI(.SEG,1,1) ;Set IN1-1.
"RTN","VPSSEND",488,0)
 ;
"RTN","VPSSEND",489,0)
 ; -- Set Insurance (true/false) to IN1-2
"RTN","VPSSEND",490,0)
 K VPSARR D IBB^VPSRPC26(.VPSARR,DFN) ; Insurance Info
"RTN","VPSSEND",491,0)
 N INS S INS=$P($G(VPSARR(1)),U,4)
"RTN","VPSSEND",492,0)
 S INS=$S(INS'="":"Y",1:"N")
"RTN","VPSSEND",493,0)
 D SET^HLOAPI(.SEG,INS,2)
"RTN","VPSSEND",494,0)
 ;
"RTN","VPSSEND",495,0)
 QUIT
"RTN","VPSSEND",496,0)
 ;
"RTN","VPSSEND",497,0)
NAMPARSE(VNAME) ;  return name components for standard VistA name
"RTN","VPSSEND",498,0)
 ;Return LastName^FirstName^Middle^Suffix/Title
"RTN","VPSSEND",499,0)
 ;       on error - return ""
"RTN","VPSSEND",500,0)
 QUIT:$G(VNAME)="" ""
"RTN","VPSSEND",501,0)
 D STDNAME^XLFNAME(.VNAME,"CF")
"RTN","VPSSEND",502,0)
 N RET S RET=""
"RTN","VPSSEND",503,0)
 N FLD F FLD="FAMILY","GIVEN","MIDDLE" S RET=RET_$G(VNAME(FLD))_U
"RTN","VPSSEND",504,0)
 S:$L(RET) RET=$E(RET,1,$L(RET)-1)
"RTN","VPSSEND",505,0)
 QUIT RET
"RTN","VPSSRVY1")
0^7^B63674041
"RTN","VPSSRVY1",1,0)
VPSSRVY1 ;WOIFO/BT - VPS CLINICAL SURVEY QUESTIONNAIRE;01/16/2015 11:23
"RTN","VPSSRVY1",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5**;Jan 16, 2015;Build 31
"RTN","VPSSRVY1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSSRVY1",4,0)
 ;
"RTN","VPSSRVY1",5,0)
 ; External Reference DBIA#
"RTN","VPSSRVY1",6,0)
 ; ------------------------
"RTN","VPSSRVY1",7,0)
 ; IA #10103 - supported use of XLFDT function 
"RTN","VPSSRVY1",8,0)
 ;
"RTN","VPSSRVY1",9,0)
 QUIT
"RTN","VPSSRVY1",10,0)
 ;
"RTN","VPSSRVY1",11,0)
SAVE(VPSRES,VPSDFN,VPSDATA) ;RPC: VPS SAVE CLINICAL SURVEY
"RTN","VPSSRVY1",12,0)
 ;INPUT
"RTN","VPSSRVY1",13,0)
 ;  VPSDFN  : Patient IEN
"RTN","VPSSRVY1",14,0)
 ;  VPSDATA : Array of field-value pair to store
"RTN","VPSSRVY1",15,0)
 ;            Format : VPSDATA(1..n)=FIELD-NAME^SEQ#^FIELD-VALUE
"RTN","VPSSRVY1",16,0)
 ;            Example: VPSDATA(1) = NAME^^Survey #1                    <-- Survey Name
"RTN","VPSSRVY1",17,0)
 ;                     VPSDATA(2) = INTERNAL^^Survey Internal #1       <-- Survey Internal Name
"RTN","VPSSRVY1",18,0)
 ;                     VPSDATA(3) = TEMPLATE ID^^5                     <-- Questionnaire Template ID
"RTN","VPSSRVY1",19,0)
 ;                     VPSDATA(4) = VERSION^^10                        <-- Survey Version
"RTN","VPSSRVY1",20,0)
 ;                     VPSDATA(5) = DATE/TIME TAKEN^^9/24/2014@093001  <-- Date/Time Survey was taken
"RTN","VPSSRVY1",21,0)
 ;                     VPSDATA(6) = DATE/TIME MODIFIED^^12/31/2014@153301 <-- Date/Time Survey was modified
"RTN","VPSSRVY1",22,0)
 ;                     VPSDATA(7) = STATUS^^C                          <-- Completion STATUS (C=Completed, I=Incomplete)
"RTN","VPSSRVY1",23,0)
 ;                     VPSDATA(8) = INTERVIEWER^^PROVIDER,ONE          <-- DUZ of INTERVIEWER
"RTN","VPSSRVY1",24,0)
 ;                     VPSDATA(9) = SAFETY^^4                          <-- Patient Safety
"RTN","VPSSRVY1",25,0)
 ;                     VPSDATA(10)= ACTION^^Y                          <-- Immediate Action
"RTN","VPSSRVY1",26,0)
 ;                     VPSDATA(11)= SURVEY CALC^^Survey Test"          <-- Survey Calculated Value
"RTN","VPSSRVY1",27,0)
 ;                     VPSDATA(12)= CREATOR^^TECHNICIAN,TEN            <-- DUZ of survey creator
"RTN","VPSSRVY1",28,0)
 ;            Multiple Questions
"RTN","VPSSRVY1",29,0)
 ;                     VPSDATA(13)= QUESTION^1^Enter Your Name:
"RTN","VPSSRVY1",30,0)
 ;                     VPSDATA(14)= QUESTION^2^Do you feel the doctor qualify to treat your illness?
"RTN","VPSSRVY1",31,0)
 ;                     VPSDATA(15)= QUESTION^3^How do you rate your visit (1-10) 1=Bad, 10:Outstanding?
"RTN","VPSSRVY1",32,0)
 ;            Multiple Response
"RTN","VPSSRVY1",33,0)
 ;                     VPSDATA(16)= RESPONSE^1^MCENROE,JOHN
"RTN","VPSSRVY1",34,0)
 ;                     VPSDATA(17)= RESPONSE^2^NO
"RTN","VPSSRVY1",35,0)
 ;                     VPSDATA(18)= RESPONSE^3^5
"RTN","VPSSRVY1",36,0)
 ;            Multiple Survey Calculated Values
"RTN","VPSSRVY1",37,0)
 ;                     VPSDATA(19)= QUESTION CALC^1^Name: John McEnroe
"RTN","VPSSRVY1",38,0)
 ;                     VPSDATA(20)= QUESTION CALC^2^Dr. Carter is not qualified to treat my illness
"RTN","VPSSRVY1",39,0)
 ;                     VPSDATA(21)= QUESTION CALC^3^I rated my visit as unsatisfactory
"RTN","VPSSRVY1",40,0)
 ;
"RTN","VPSSRVY1",41,0)
 ;OUTPUT
"RTN","VPSSRVY1",42,0)
 ;  VPSRES =  1                   (Survey is stored successully)
"RTN","VPSSRVY1",43,0)
 ;           -1^Error Message     (Survey is not stored because an Error)
"RTN","VPSSRVY1",44,0)
 ;
"RTN","VPSSRVY1",45,0)
 I +$G(VPSDFN)=0 S VPSRES="-1^Patient IEN not sent" Q
"RTN","VPSSRVY1",46,0)
 I '$D(^DPT(VPSDFN)) S VPSRES="-1^Patient not on File" Q
"RTN","VPSSRVY1",47,0)
 I '$D(VPSDATA) S VPSRES="-1^Survey Data not sent" Q
"RTN","VPSSRVY1",48,0)
 I $P(VPSDATA(3),U,3)="" S VPSRES="-1^Template ID is required" Q
"RTN","VPSSRVY1",49,0)
 I $P(VPSDATA(1),U,3)="" S VPSRES="-1^Survey Name is required" Q
"RTN","VPSSRVY1",50,0)
 I $P(VPSDATA(4),U,3)="" S VPSRES="-1^Version is required" Q
"RTN","VPSSRVY1",51,0)
 N TRNDT S TRNDT=$$NOW^XLFDT()
"RTN","VPSSRVY1",52,0)
 S VPSDATA(1)=$$UPCASE^VPSSRVY2(VPSDATA(1))
"RTN","VPSSRVY1",53,0)
 I '$$OKID Q
"RTN","VPSSRVY1",54,0)
 Q:$G(VPSRES)'=""
"RTN","VPSSRVY1",55,0)
 ;
"RTN","VPSSRVY1",56,0)
 ; -- Prepare Survey Data to file
"RTN","VPSSRVY1",57,0)
 N SURVEY,SURVEYM
"RTN","VPSSRVY1",58,0)
 N ER S ER=""
"RTN","VPSSRVY1",59,0)
 I +$P(VPSDATA(8),U,3)>0 D
"RTN","VPSSRVY1",60,0)
 . I '$D(^VA(200,$P(VPSDATA(8),U,3))) S ER="The value '"_$P(VPSDATA(8),U,3)_"' for field INTERVIEWER STAFF in QUESTIONNAIRE SUB-FIELD in file VPS CLINICAL SURVEY is not valid."
"RTN","VPSSRVY1",61,0)
 . Q:ER'=""
"RTN","VPSSRVY1",62,0)
 . S $P(VPSDATA(8),U,3)=$$GET1^DIQ(200,$P(VPSDATA(8),U,3)_",",.01)
"RTN","VPSSRVY1",63,0)
 ;
"RTN","VPSSRVY1",64,0)
  I +$P(VPSDATA(12),U,3)>0 D
"RTN","VPSSRVY1",65,0)
 . I '$D(^VA(200,$P(VPSDATA(12),U,3))) S ER="The value '"_$P(VPSDATA(12),U,3)_"' for field SURVEY CREATOR in QUESTIONNAIRE SUB-FIELD in file VPS CLINICAL SURVEY is not valid."
"RTN","VPSSRVY1",66,0)
 . Q:ER'=""
"RTN","VPSSRVY1",67,0)
 . S $P(VPSDATA(12),U,3)=$$GET1^DIQ(200,$P(VPSDATA(12),U,3)_",",.01)
"RTN","VPSSRVY1",68,0)
 I ER="" S ER=$$PREP(.VPSDATA,.SURVEY,.SURVEYM)
"RTN","VPSSRVY1",69,0)
 ;
"RTN","VPSSRVY1",70,0)
 ; -- Lock patient survey
"RTN","VPSSRVY1",71,0)
 I ER="" S ER=$$LOCK(VPSDFN)
"RTN","VPSSRVY1",72,0)
 ;
"RTN","VPSSRVY1",73,0)
 ; Add survey identifiers to file # 853.85
"RTN","VPSSRVY1",74,0)
 I ER="" S ER=$$ADSRVYKY()
"RTN","VPSSRVY1",75,0)
 ;
"RTN","VPSSRVY1",76,0)
 ; -- Add Survey (patient level)
"RTN","VPSSRVY1",77,0)
 I ER="" S ER=$$ADDDFN(VPSDFN)
"RTN","VPSSRVY1",78,0)
 ;
"RTN","VPSSRVY1",79,0)
 ; -- Add Survey (Questionnaire level)
"RTN","VPSSRVY1",80,0)
 I ER="" S ER=$$ADDSRVY(VPSDFN,TRNDT,.SURVEY)
"RTN","VPSSRVY1",81,0)
 ;
"RTN","VPSSRVY1",82,0)
 ; -- Add Survey (Question/Response level)
"RTN","VPSSRVY1",83,0)
 I ER="" S ER=$$ADDMSRVY(VPSDFN,TRNDT,.SURVEYM)
"RTN","VPSSRVY1",84,0)
 ;
"RTN","VPSSRVY1",85,0)
 ; -- Result
"RTN","VPSSRVY1",86,0)
 I ER="" S VPSRES=1
"RTN","VPSSRVY1",87,0)
 I ER'="" S VPSRES=-1_U_ER D CLNSRVY(VPSDFN,TRNDT) ;delete unstorable survey
"RTN","VPSSRVY1",88,0)
 ;
"RTN","VPSSRVY1",89,0)
 ; -- unlock patient survey
"RTN","VPSSRVY1",90,0)
 D STOREQNM
"RTN","VPSSRVY1",91,0)
 D UNLOCK(VPSDFN)
"RTN","VPSSRVY1",92,0)
 ;
"RTN","VPSSRVY1",93,0)
 QUIT
"RTN","VPSSRVY1",94,0)
 ;
"RTN","VPSSRVY1",95,0)
OKID() ;
"RTN","VPSSRVY1",96,0)
 N QNAME,VER,ID,IEN
"RTN","VPSSRVY1",97,0)
 S QNAME=$P(VPSDATA(1),U,3)
"RTN","VPSSRVY1",98,0)
 S VER=+$P(VPSDATA(4),U,3)
"RTN","VPSSRVY1",99,0)
 S ID=$P(VPSDATA(3),U,3)
"RTN","VPSSRVY1",100,0)
 S IEN=$O(^VPS(853.85,"B",ID,""))
"RTN","VPSSRVY1",101,0)
 Q:IEN="" 1
"RTN","VPSSRVY1",102,0)
 I VER'=$$GET1^DIQ(853.85,IEN_",",2) S VPSRES="-1^Template ID and version do not match existing information" Q 0
"RTN","VPSSRVY1",103,0)
 I QNAME'=$$GET1^DIQ(853.85,IEN_",",1) D
"RTN","VPSSRVY1",104,0)
 . ; If name changed remove old name 
"RTN","VPSSRVY1",105,0)
 . N NM,ER
"RTN","VPSSRVY1",106,0)
 . S ER=""
"RTN","VPSSRVY1",107,0)
 . ;S NM=$$GET1(853.85,IEN_",",1)
"RTN","VPSSRVY1",108,0)
 . ;D CLRNM(VER,NM)
"RTN","VPSSRVY1",109,0)
 . S ER=$$UPDATENM(IEN,QNAME)
"RTN","VPSSRVY1",110,0)
 . I ER]"" S VPSRES=-1_U_ER
"RTN","VPSSRVY1",111,0)
 Q 1
"RTN","VPSSRVY1",112,0)
STOREQNM ;
"RTN","VPSSRVY1",113,0)
 ;
"RTN","VPSSRVY1",114,0)
 N QNAME,VER
"RTN","VPSSRVY1",115,0)
 S QNAME=$P(VPSDATA(1),U,3)
"RTN","VPSSRVY1",116,0)
 S VER=$P(VPSDATA(4),U,3)
"RTN","VPSSRVY1",117,0)
 I '$D(^VPS(853.875,"B",QNAME)) D STOREQN(QNAME)
"RTN","VPSSRVY1",118,0)
 I '$D(^VPS(853.875,"B",QNAME_":::V "_VER)) D STOREQN(QNAME_":::V "_VER)
"RTN","VPSSRVY1",119,0)
 Q
"RTN","VPSSRVY1",120,0)
 ;
"RTN","VPSSRVY1",121,0)
STOREQN(X) ;
"RTN","VPSSRVY1",122,0)
 N DIC
"RTN","VPSSRVY1",123,0)
 L +^VPS(853.875):5 E  Q
"RTN","VPSSRVY1",124,0)
 S DIC="^VPS(853.875,"
"RTN","VPSSRVY1",125,0)
 S DIC(0)=""
"RTN","VPSSRVY1",126,0)
 D FILE^DICN
"RTN","VPSSRVY1",127,0)
 L -^VPS(853.875)
"RTN","VPSSRVY1",128,0)
 Q
"RTN","VPSSRVY1",129,0)
 ;
"RTN","VPSSRVY1",130,0)
CLRNM(VER,NM) ; Survey Name changed so remove previous name
"RTN","VPSSRVY1",131,0)
 N FIL S FIL=853.875
"RTN","VPSSRVY1",132,0)
 S IE=$O(^VPS(853.875,"B",NM,""))
"RTN","VPSSRVY1",133,0)
 N FDA S FDA(FIL,IE_",",.01)="@"
"RTN","VPSSRVY1",134,0)
 N FDAERR D FILE^DIE("","FDA","FDAERR")
"RTN","VPSSRVY1",135,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",136,0)
 S IE=$O(^VPS(853.875,"B",NM_":::V "_VER,""))
"RTN","VPSSRVY1",137,0)
 N FDA S FDA(FIL,IE_",",.01)="@"
"RTN","VPSSRVY1",138,0)
 N FDAERR D FILE^DIE("","FDA","FDAERR")
"RTN","VPSSRVY1",139,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",140,0)
 ;
"RTN","VPSSRVY1",141,0)
UPDATENM(IEN,NM) ; Update Survey Name
"RTN","VPSSRVY1",142,0)
 N FIL S FIL=853.85
"RTN","VPSSRVY1",143,0)
 N FDA S FDA(FIL,IEN_",",1)=NM
"RTN","VPSSRVY1",144,0)
 N FDAERR D FILE^DIE("","FDA","FDAERR")
"RTN","VPSSRVY1",145,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",146,0)
 ;
"RTN","VPSSRVY1",147,0)
ADDDFN(VPSDFN) ;Add Survey (patient level)
"RTN","VPSSRVY1",148,0)
 QUIT:$D(^VPS(853.8,VPSDFN,0)) ""
"RTN","VPSSRVY1",149,0)
 N FIL S FIL=853.8
"RTN","VPSSRVY1",150,0)
 N IENS S IENS(1)=VPSDFN
"RTN","VPSSRVY1",151,0)
 N FDA S FDA(FIL,"+1,",.01)=VPSDFN
"RTN","VPSSRVY1",152,0)
 N FDAERR D UPDATE^DIE("","FDA","IENS","FDAERR")
"RTN","VPSSRVY1",153,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",154,0)
 ;
"RTN","VPSSRVY1",155,0)
ADSRVYKY() ;add survey Identifiers
"RTN","VPSSRVY1",156,0)
 N FIL S FIL=853.85
"RTN","VPSSRVY1",157,0)
 ;N IENS S IENS(1)="+1,"
"RTN","VPSSRVY1",158,0)
 N SUBS S SUBS="+1,"
"RTN","VPSSRVY1",159,0)
 N FDA,FDAERR
"RTN","VPSSRVY1",160,0)
 N FLD S FLD=0
"RTN","VPSSRVY1",161,0)
 N QNAME,VER,ID,IEN,INM
"RTN","VPSSRVY1",162,0)
 S QNAME=$P(VPSDATA(1),U,3)
"RTN","VPSSRVY1",163,0)
 S VER=$P(VPSDATA(4),U,3)
"RTN","VPSSRVY1",164,0)
 S ID=$P(VPSDATA(3),U,3)
"RTN","VPSSRVY1",165,0)
 S INM=$P(VPSDATA(2),U,3)
"RTN","VPSSRVY1",166,0)
 Q:$O(^VPS(853.85,"B",ID,""))'="" ""
"RTN","VPSSRVY1",167,0)
 ;
"RTN","VPSSRVY1",168,0)
 ; -- fill in FDA with the survey data
"RTN","VPSSRVY1",169,0)
 S FDA(853.85,SUBS,.01)=ID
"RTN","VPSSRVY1",170,0)
 S FDA(853.85,SUBS,1)=QNAME
"RTN","VPSSRVY1",171,0)
 S FDA(853.85,SUBS,2)=VER
"RTN","VPSSRVY1",172,0)
 S FDA(853.85,SUBS,3)=INM
"RTN","VPSSRVY1",173,0)
 ;
"RTN","VPSSRVY1",174,0)
 ; -- store the survey data
"RTN","VPSSRVY1",175,0)
 D UPDATE^DIE("E","FDA","","FDAERR")
"RTN","VPSSRVY1",176,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",177,0)
 ;
"RTN","VPSSRVY1",178,0)
ADDSRVY(VPSDFN,TRNDT,SURVEY) ;add survey (questionnaire level)
"RTN","VPSSRVY1",179,0)
 N FIL S FIL=853.81
"RTN","VPSSRVY1",180,0)
 N IENS S IENS(1)=TRNDT
"RTN","VPSSRVY1",181,0)
 N SUBS S SUBS="+1,"_VPSDFN_","
"RTN","VPSSRVY1",182,0)
 N FDA,FDAERR
"RTN","VPSSRVY1",183,0)
 N FLD S FLD=0
"RTN","VPSSRVY1",184,0)
 ;
"RTN","VPSSRVY1",185,0)
 ; -- fill in FDA with the survey data
"RTN","VPSSRVY1",186,0)
 S FDA(853.81,SUBS,.01)=TRNDT
"RTN","VPSSRVY1",187,0)
 F  S FLD=$O(SURVEY(FLD)) Q:'FLD  I ",1,9,10,"'[(","_FLD_",") S FDA(FIL,SUBS,FLD)=SURVEY(FLD)
"RTN","VPSSRVY1",188,0)
 ;
"RTN","VPSSRVY1",189,0)
 ; -- store the survey data
"RTN","VPSSRVY1",190,0)
 D UPDATE^DIE("E","FDA","IENS","FDAERR")
"RTN","VPSSRVY1",191,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",192,0)
 ; 
"RTN","VPSSRVY1",193,0)
ADDMSRVY(VPSDFN,TRNDT,MSURVEY) ;add survey (question/response level)
"RTN","VPSSRVY1",194,0)
 N FIL S FIL=853.811
"RTN","VPSSRVY1",195,0)
 N IENS S IENS="+1,"_TRNDT_","_VPSDFN_","
"RTN","VPSSRVY1",196,0)
 N FDA,FDAERR
"RTN","VPSSRVY1",197,0)
 N SEQ,FLD S SEQ=0
"RTN","VPSSRVY1",198,0)
 ;
"RTN","VPSSRVY1",199,0)
 F  S SEQ=$O(MSURVEY(SEQ)) Q:'SEQ  D  QUIT:$D(FDAERR)
"RTN","VPSSRVY1",200,0)
 . K FDA S FLD=0
"RTN","VPSSRVY1",201,0)
 . S FDA(FIL,IENS,.01)=SEQ
"RTN","VPSSRVY1",202,0)
 . F  S FLD=$O(MSURVEY(SEQ,FLD)) QUIT:'FLD  S FDA(FIL,IENS,FLD)=MSURVEY(SEQ,FLD)
"RTN","VPSSRVY1",203,0)
 . D UPDATE^DIE("E","FDA",,"FDAERR")
"RTN","VPSSRVY1",204,0)
 ;
"RTN","VPSSRVY1",205,0)
 QUIT $$ERROR(.FDAERR)
"RTN","VPSSRVY1",206,0)
 ;
"RTN","VPSSRVY1",207,0)
CLNSRVY(VPSDFN,TRNDT) ; delete Questionnaire
"RTN","VPSSRVY1",208,0)
 N FIL S FIL=853.81
"RTN","VPSSRVY1",209,0)
 N FDA S FDA(FIL,TRNDT_","_VPSDFN_",",.01)="@"
"RTN","VPSSRVY1",210,0)
 N ERR D FILE^DIE("","FDA")
"RTN","VPSSRVY1",211,0)
 QUIT
"RTN","VPSSRVY1",212,0)
 ;
"RTN","VPSSRVY1",213,0)
GETFLD(SVYLST,MSVYLST) ;get field maps
"RTN","VPSSRVY1",214,0)
 N LN,LINE,STRING
"RTN","VPSSRVY1",215,0)
 F LN=1:1 S LINE=$T(LST+LN),STRING=$P(LINE,";;",2) Q:STRING=""  S SVYLST($P(STRING,U,2))=$P(STRING,U)
"RTN","VPSSRVY1",216,0)
 F LN=1:1 S LINE=$T(MLST+LN),STRING=$P(LINE,";;",2) Q:STRING=""  S MSVYLST($P(STRING,U,2))=$P(STRING,U)
"RTN","VPSSRVY1",217,0)
 QUIT
"RTN","VPSSRVY1",218,0)
 ;
"RTN","VPSSRVY1",219,0)
PREP(INDATA,SURVEY,SURVEYM) ;Based on Vetlink input data, prepare survey data to file
"RTN","VPSSRVY1",220,0)
 N SVYFLD,MSVYFLD
"RTN","VPSSRVY1",221,0)
 D GETFLD(.SVYFLD,.MSVYFLD)
"RTN","VPSSRVY1",222,0)
 ;
"RTN","VPSSRVY1",223,0)
 N FLD,FLDNO,FLDVAL,MULTSEQ
"RTN","VPSSRVY1",224,0)
 N ER S ER=""
"RTN","VPSSRVY1",225,0)
 N SEQ S SEQ=0
"RTN","VPSSRVY1",226,0)
 ;
"RTN","VPSSRVY1",227,0)
 F  S SEQ=$O(INDATA(SEQ)) Q:'SEQ  D  QUIT:ER'=""
"RTN","VPSSRVY1",228,0)
 . S MULTSEQ=$P(INDATA(SEQ),U,2) ;multiple sequence # for multiple field such as Questions, responses, and calculated values
"RTN","VPSSRVY1",229,0)
 . S FLD=$P(INDATA(SEQ),U) I FLD="" S ER="Field Name is required" QUIT  ;Input Field Name
"RTN","VPSSRVY1",230,0)
 . S FLDVAL=$P(INDATA(SEQ),U,3)
"RTN","VPSSRVY1",231,0)
 . S FLDNO=$S(MULTSEQ:$G(MSVYFLD(FLD)),1:$G(SVYFLD(FLD))) ;Field #
"RTN","VPSSRVY1",232,0)
 . I FLDNO="" S ER="Invalid Field - "_FLD QUIT
"RTN","VPSSRVY1",233,0)
 . S:MULTSEQ SURVEYM(MULTSEQ,FLDNO)=FLDVAL
"RTN","VPSSRVY1",234,0)
 . S:'MULTSEQ SURVEY(FLDNO)=FLDVAL
"RTN","VPSSRVY1",235,0)
 ;
"RTN","VPSSRVY1",236,0)
 QUIT ER
"RTN","VPSSRVY1",237,0)
 ;
"RTN","VPSSRVY1",238,0)
ERROR(FDAERR) ;return error text
"RTN","VPSSRVY1",239,0)
 QUIT:'$D(FDAERR) ""
"RTN","VPSSRVY1",240,0)
 N ERRNUM S ERRNUM=0
"RTN","VPSSRVY1",241,0)
 S ERRNUM=$O(FDAERR("DIERR",ERRNUM))
"RTN","VPSSRVY1",242,0)
 N ERRTXT S ERRTXT=""
"RTN","VPSSRVY1",243,0)
 S:ERRNUM ERRTXT=FDAERR("DIERR",ERRNUM,"TEXT",1)
"RTN","VPSSRVY1",244,0)
 QUIT ERRTXT
"RTN","VPSSRVY1",245,0)
 ;
"RTN","VPSSRVY1",246,0)
LOCK(VPSDFN) ;Lock this process
"RTN","VPSSRVY1",247,0)
 L +^TMP("VPSSRVY1",VPSDFN):3 E  QUIT "Another process updating survey for this patient"
"RTN","VPSSRVY1",248,0)
 QUIT ""
"RTN","VPSSRVY1",249,0)
 ;
"RTN","VPSSRVY1",250,0)
UNLOCK(VPSDFN) ;Unlock this process
"RTN","VPSSRVY1",251,0)
 L -^TMP("VPSSRVY1",VPSDFN)
"RTN","VPSSRVY1",252,0)
 QUIT
"RTN","VPSSRVY1",253,0)
 ;
"RTN","VPSSRVY1",254,0)
LST ; list of 853.81 fields
"RTN","VPSSRVY1",255,0)
 ;;1^NAME
"RTN","VPSSRVY1",256,0)
 ;;2^DATE/TIME TAKEN
"RTN","VPSSRVY1",257,0)
 ;;3^DATE/TIME MODIFIED
"RTN","VPSSRVY1",258,0)
 ;;4^INTERVIEWER
"RTN","VPSSRVY1",259,0)
 ;;5^SURVEY CALC
"RTN","VPSSRVY1",260,0)
 ;;6^STATUS
"RTN","VPSSRVY1",261,0)
 ;;7^SAFETY
"RTN","VPSSRVY1",262,0)
 ;;8^ACTION
"RTN","VPSSRVY1",263,0)
 ;;9^INTERNAL
"RTN","VPSSRVY1",264,0)
 ;;10^VERSION
"RTN","VPSSRVY1",265,0)
 ;;11^TEMPLATE ID
"RTN","VPSSRVY1",266,0)
 ;;12^CREATOR
"RTN","VPSSRVY1",267,0)
 ;;
"RTN","VPSSRVY1",268,0)
MLST ; list of 853.811 fields
"RTN","VPSSRVY1",269,0)
 ;;1^QUESTION
"RTN","VPSSRVY1",270,0)
 ;;2^RESPONSE
"RTN","VPSSRVY1",271,0)
 ;;3^QUESTION CALC
"RTN","VPSSRVY1",272,0)
 ;;
"RTN","VPSSRVY1",273,0)
 QUIT
"RTN","VPSSRVY2")
0^6^B15360627
"RTN","VPSSRVY2",1,0)
VPSSRVY2 ;WOIFO/BT - VPS CLINICAL SURVEY QUESTIONNAIRE;01/16/2015 11:23
"RTN","VPSSRVY2",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5**;Jan 16, 2015;Build 31
"RTN","VPSSRVY2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSSRVY2",4,0)
 ;
"RTN","VPSSRVY2",5,0)
 ; External Reference DBIA#
"RTN","VPSSRVY2",6,0)
 ; ------------------------
"RTN","VPSSRVY2",7,0)
 ;
"RTN","VPSSRVY2",8,0)
 QUIT
"RTN","VPSSRVY2",9,0)
GETRPC(VPSRES,VPSPID,VPSTYP,VPSQIEN,VPSQNM,VPSFDT,VPSTDT,VPSNUM) ;
"RTN","VPSSRVY2",10,0)
 ;INPUT
"RTN","VPSSRVY2",11,0)
 ;  VPSPID  : Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSSRVY2",12,0)
 ;  VPSTYP  - Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSSRVY2",13,0)
 ;  VPSQIEN : Questionnaire IEN
"RTN","VPSSRVY2",14,0)
 ;  VPSQNM  : Questionnaire Name
"RTN","VPSSRVY2",15,0)
 ;  VPSFDT  : From Date
"RTN","VPSSRVY2",16,0)
 ;  VPSTDT  : To Date
"RTN","VPSSRVY2",17,0)
 ;  VPSNUM  : Number of Occurrences
"RTN","VPSSRVY2",18,0)
 ;
"RTN","VPSSRVY2",19,0)
 ;OUTPUT
"RTN","VPSSRVY2",20,0)
 ; If error
"RTN","VPSSRVY2",21,0)
 ;  VPSRES(0)=-1^Error Message
"RTN","VPSSRVY2",22,0)
 ;
"RTN","VPSSRVY2",23,0)
 ; otherwise
"RTN","VPSSRVY2",24,0)
 ;  VPSRES(0)=1^Number of Questionnaires
"RTN","VPSSRVY2",25,0)
 ;  VPSRES(1,3..n) = Survey Data IEN ^ Patient DFN ^ Patient Name ^  Questionnaire IEN ^ Questionnaire Name 
"RTN","VPSSRVY2",26,0)
 ;                   ^ Date and Time Taken ^ Date and Time Last Modified ^ Staff Interviewer IEN 
"RTN","VPSSRVY2",27,0)
 ;                   ^ Staff Interviewer Name ^ Survey Calculated Value ^ Patient Safety Flag
"RTN","VPSSRVY2",28,0)
 ;
"RTN","VPSSRVY2",29,0)
 ;  VPSRES(2,4..n+1) = Question ^ Response ^ Calculated value
"RTN","VPSSRVY2",30,0)
 ;
"RTN","VPSSRVY2",31,0)
 ;
"RTN","VPSSRVY2",32,0)
 ; File index structure
"RTN","VPSSRVY2",33,0)
 ;    VPS(853.8,"C", Questionnaire Name (Survey Name), DFN , DT )
"RTN","VPSSRVY2",34,0)
 ;    VPS(853.8,"D", Questionnaire IEN (Template ID) , DFN, DT )
"RTN","VPSSRVY2",35,0)
 ;
"RTN","VPSSRVY2",36,0)
 K ^TMP("VPSGSRY",$J)
"RTN","VPSSRVY2",37,0)
 S VPSRES=$NA(^TMP("VPSGSRY",$J))
"RTN","VPSSRVY2",38,0)
 N VPSDFN
"RTN","VPSSRVY2",39,0)
 I $G(VPSTYP)="" S VPSTYP="DFN"
"RTN","VPSSRVY2",40,0)
 I $G(VPSQNM)]"" S VPSQNM=$$UPCASE(VPSQNM)
"RTN","VPSSRVY2",41,0)
 S VPSDFN=$$VALIDATE^VPSRPC1($G(VPSTYP),$G(VPSPID))
"RTN","VPSSRVY2",42,0)
 I +VPSDFN=-1 D ADDERR(VPSDFN) Q
"RTN","VPSSRVY2",43,0)
 I $G(VPSDFN)="" D ADDERR("-1^Patient IEN not sent") Q
"RTN","VPSSRVY2",44,0)
 I '$D(^DPT(VPSDFN)) D ADDERR("-1^Patient not found") Q
"RTN","VPSSRVY2",45,0)
 I '$D(^VPS(853.8,VPSDFN)) D ADDERR("-1^No questionnaires found") Q
"RTN","VPSSRVY2",46,0)
 ;
"RTN","VPSSRVY2",47,0)
 N FDT,CNT,FLG,DAT,DATA,X,Y
"RTN","VPSSRVY2",48,0)
 S FDT=0
"RTN","VPSSRVY2",49,0)
 S CNT=0,FLG=0
"RTN","VPSSRVY2",50,0)
 I $G(VPSFDT)["T" S X=VPSFDT D ^%DT S VPSFDT=Y I Y=-1 D ADDERR("-1^Issue with From Date") Q
"RTN","VPSSRVY2",51,0)
 I $G(VPSTDT)["T" S X=VPSTDT D ^%DT S VPSTDT=Y I Y=-1 D ADDERR("-1^Issue with To Date") Q
"RTN","VPSSRVY2",52,0)
 I $G(VPSFDT) S FDT=$P(VPSFDT,".")-.000001
"RTN","VPSSRVY2",53,0)
 I $G(VPSTDT) S VPSTDT=$P(VPSTDT,".")_".999999"
"RTN","VPSSRVY2",54,0)
 F  S FDT=$O(^VPS(853.8,VPSDFN,1,FDT)) Q:'FDT!FLG  D
"RTN","VPSSRVY2",55,0)
 . I $G(VPSTDT),FDT>VPSTDT S FLG=1 Q
"RTN","VPSSRVY2",56,0)
 . I $$PASSCHK(FDT) D
"RTN","VPSSRVY2",57,0)
 .. D GETDATA(CNT,FDT)
"RTN","VPSSRVY2",58,0)
 .. S CNT=CNT+1
"RTN","VPSSRVY2",59,0)
 .. I $G(VPSNUM),CNT=VPSNUM S FLG=1 Q
"RTN","VPSSRVY2",60,0)
 D STORE(0,"1^"_CNT)
"RTN","VPSSRVY2",61,0)
 ;
"RTN","VPSSRVY2",62,0)
 Q
"RTN","VPSSRVY2",63,0)
 ;
"RTN","VPSSRVY2",64,0)
 ;
"RTN","VPSSRVY2",65,0)
PASSCHK(FDT) ;
"RTN","VPSSRVY2",66,0)
 ; test is see if this is the survey being requested
"RTN","VPSSRVY2",67,0)
 I $G(VPSQIEN)="",$G(VPSQNM)="" Q 1
"RTN","VPSSRVY2",68,0)
 N ID,ID1,FLG
"RTN","VPSSRVY2",69,0)
 S FLG=1
"RTN","VPSSRVY2",70,0)
 S ID1=$P(^VPS(853.8,VPSDFN,1,FDT,0),U,7)
"RTN","VPSSRVY2",71,0)
 I $G(VPSQIEN)]"" D  Q 'FLG
"RTN","VPSSRVY2",72,0)
 . S ID=$O(^VPS(853.85,"B",VPSQIEN,""))
"RTN","VPSSRVY2",73,0)
 . I ID1=ID S FLG=0
"RTN","VPSSRVY2",74,0)
 I $G(VPSQNM)]"" D  Q 'FLG
"RTN","VPSSRVY2",75,0)
 . I $$GET1^DIQ(853.85,ID1_",",1)=VPSQNM S FLG=0
"RTN","VPSSRVY2",76,0)
 Q 0
"RTN","VPSSRVY2",77,0)
 ;
"RTN","VPSSRVY2",78,0)
 ;
"RTN","VPSSRVY2",79,0)
ADDERR(MSG) ;add error message to result array
"RTN","VPSSRVY2",80,0)
 S ^TMP("VPSGSRY",$J,0)=MSG
"RTN","VPSSRVY2",81,0)
 Q
"RTN","VPSSRVY2",82,0)
 ;
"RTN","VPSSRVY2",83,0)
GETDATA(OIEN,IEN) ;
"RTN","VPSSRVY2",84,0)
 N I
"RTN","VPSSRVY2",85,0)
 S DATA=$G(^VPS(853.8,VPSDFN,1,IEN,0))
"RTN","VPSSRVY2",86,0)
 ; Survey Data IEN ^ Patient DFN ^ Patient Name ^  Questionnaire IEN ^ Questionnaire Name 
"RTN","VPSSRVY2",87,0)
 S DAT=IEN_U_VPSDFN_U_$$GET1^DIQ(2,VPSDFN_",",.01)_U_$$GET1^DIQ(853.85,$P(DATA,U,7)_",",.01)_U_$$GET1^DIQ(853.85,$P(DATA,U,7)_",",1)
"RTN","VPSSRVY2",88,0)
 ; Obtain converted Date and Time Taken
"RTN","VPSSRVY2",89,0)
 S DAT=DAT_U_$$GET1^DIQ(853.81,IEN_","_VPSDFN_",",2)
"RTN","VPSSRVY2",90,0)
 ; Obtain Date and Time Last Modified and convert to external format
"RTN","VPSSRVY2",91,0)
 S DAT=DAT_U_$$GET1^DIQ(853.81,IEN_","_VPSDFN_",",3)
"RTN","VPSSRVY2",92,0)
 ; Obtain Staff Interviewer IEN and Staff Interviewer Name
"RTN","VPSSRVY2",93,0)
 S Y=$P(DATA,U,5)
"RTN","VPSSRVY2",94,0)
 S DAT=DAT_U_Y_U_$$GET1^DIQ(200,Y_",",.01)
"RTN","VPSSRVY2",95,0)
 ; Obtain Survey Calculated Value
"RTN","VPSSRVY2",96,0)
 S DATA=$G(^VPS(863.8,VPSDFN,1,IEN,1))
"RTN","VPSSRVY2",97,0)
 S DAT=DAT_U_$P(DATA,U)
"RTN","VPSSRVY2",98,0)
 ; Obtain Patient Safety Flag
"RTN","VPSSRVY2",99,0)
 S DATA=$G(^VPS(863.8,VPSDFN,1,IEN,2))
"RTN","VPSSRVY2",100,0)
 S DAT=DAT_U_$$GET1^DIQ(853.81,IEN_","_VPSDFN_",",7)
"RTN","VPSSRVY2",101,0)
 S OIEN=2*OIEN+1
"RTN","VPSSRVY2",102,0)
 D STORE(OIEN,DAT)
"RTN","VPSSRVY2",103,0)
 S DAT=""
"RTN","VPSSRVY2",104,0)
 S I=0 F  S I=$O(^VPS(853.8,VPSDFN,1,IEN,3,I)) Q:'I  D
"RTN","VPSSRVY2",105,0)
 . I DAT="" S DAT=$$GET1^DIQ(853.811,I_","_IEN_","_VPSDFN_",",1)
"RTN","VPSSRVY2",106,0)
 . E  S DAT=DAT_U_$$GET1^DIQ(853.811,I_","_IEN_","_VPSDFN_",",1)
"RTN","VPSSRVY2",107,0)
 . S DAT=DAT_U_$$GET1^DIQ(853.811,I_","_IEN_","_VPSDFN_",",2)
"RTN","VPSSRVY2",108,0)
 . S DAT=DAT_U_$$GET1^DIQ(853.811,I_","_IEN_","_VPSDFN_",",3)
"RTN","VPSSRVY2",109,0)
 D STORE(OIEN+1,DAT)
"RTN","VPSSRVY2",110,0)
 Q
"RTN","VPSSRVY2",111,0)
 ;
"RTN","VPSSRVY2",112,0)
STORE(IEN,MSG) ;add message to result array
"RTN","VPSSRVY2",113,0)
 S ^TMP("VPSGSRY",$J,IEN)=MSG
"RTN","VPSSRVY2",114,0)
 Q
"RTN","VPSSRVY2",115,0)
 ;
"RTN","VPSSRVY2",116,0)
 ; Convert string to upper case
"RTN","VPSSRVY2",117,0)
UPCASE(X) ;
"RTN","VPSSRVY2",118,0)
 N STR,I
"RTN","VPSSRVY2",119,0)
 S STR=""
"RTN","VPSSRVY2",120,0)
 F I=1:1:$L(X) S STR=STR_$$CAP($E(X,I))
"RTN","VPSSRVY2",121,0)
 Q STR
"RTN","VPSSRVY2",122,0)
 ;
"RTN","VPSSRVY2",123,0)
CAP(X) ; Convert lower case X to UPPER CASE
"RTN","VPSSRVY2",124,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","VPSSRVY3")
0^8^B43073593
"RTN","VPSSRVY3",1,0)
VPSSRVY3 ;WOIFO/BT - VPS CLINICAL SURVEY QUESTIONNAIRE;01/16/15 13:07
"RTN","VPSSRVY3",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**5**;Jan 16, 2015;Build 31
"RTN","VPSSRVY3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSSRVY3",4,0)
 ;
"RTN","VPSSRVY3",5,0)
 ; External Reference DBIA#
"RTN","VPSSRVY3",6,0)
 ; ------------------------
"RTN","VPSSRVY3",7,0)
 ;
"RTN","VPSSRVY3",8,0)
 QUIT
"RTN","VPSSRVY3",9,0)
UTGET(VPSDFN,TARGET,VPSQIEN,VPSQNM,VPSFDT,VPSTDT,VPSNUM) ;
"RTN","VPSSRVY3",10,0)
 N UTFLG,UT
"RTN","VPSSRVY3",11,0)
 S UTFLG=1
"RTN","VPSSRVY3",12,0)
 S UT=$$GETRPT(VPSDFN,TARGET)
"RTN","VPSSRVY3",13,0)
 ;S UT=$$GETRPT(VPSDFN,TARGET,$G(VPSQIEN),$G(VPSQNM),$G(VPSFDT),$G(VPSTDT),$G(VPSNUM))
"RTN","VPSSRVY3",14,0)
 Q UT
"RTN","VPSSRVY3",15,0)
 ;
"RTN","VPSSRVY3",16,0)
GETRPT(VPSDFN,TARGET,VPSQIEN,VPSQNM,VPSFDT,VPSTDT,VPSNUM) ;
"RTN","VPSSRVY3",17,0)
 ;INPUT
"RTN","VPSSRVY3",18,0)
 ;  VPSDFN  : Patient IEN
"RTN","VPSSRVY3",19,0)
 ;  TARGET  : Location for the results
"RTN","VPSSRVY3",20,0)
 ;  VPSQIEN : Questionnaire IEN
"RTN","VPSSRVY3",21,0)
 ;  VPSQNM  : Questionnaire Name
"RTN","VPSSRVY3",22,0)
 ;  VPSFDT  : From Date
"RTN","VPSSRVY3",23,0)
 ;  VPSTDT  : To Date
"RTN","VPSSRVY3",24,0)
 ;  VPSNUM  : Number of Occurrences
"RTN","VPSSRVY3",25,0)
 ;
"RTN","VPSSRVY3",26,0)
 ;OUTPUT
"RTN","VPSSRVY3",27,0)
 ; If error
"RTN","VPSSRVY3",28,0)
 ;  VPSRES(0)=-1^Error Message
"RTN","VPSSRVY3",29,0)
 ;
"RTN","VPSSRVY3",30,0)
 ; otherwise
"RTN","VPSSRVY3",31,0)
 ;  RESULT(0) = Success or Fail flag
"RTN","VPSSRVY3",32,0)
 ;RESULT(1..n) = Formatted Questionnaire data
"RTN","VPSSRVY3",33,0)
 ;
"RTN","VPSSRVY3",34,0)
 ;Example:
"RTN","VPSSRVY3",35,0)
 ;
"RTN","VPSSRVY3",36,0)
 ;RESULT(0) = 1 (Success) ^ 2 (No of questionnaires found)
"RTN","VPSSRVY3",37,0)
 ;RESULT(1) = Patient Name: TEST, PATIENT
"RTN","VPSSRVY3",38,0)
 ;RESULT(2) = Questionnaire IEN: 20
"RTN","VPSSRVY3",39,0)
 ;RESULT(3) = Questionnaire Name: PTSD Survey
"RTN","VPSSRVY3",40,0)
 ;RESULT(4) = Date and Time Taken: 8/20/14 3:15pm
"RTN","VPSSRVY3",41,0)
 ;RESULT(5) = Date and Time Last Modified: 8/20/14 4:00pm
"RTN","VPSSRVY3",42,0)
 ;RESULT(6) = Questions and Answers:
"RTN","VPSSRVY3",43,0)
 ;RESULT(7) = Are you a smoker?  Yes
"RTN","VPSSRVY3",44,0)
 ;RESULT(8) = How many packs per week?  3
"RTN","VPSSRVY3",45,0)
 ;
"RTN","VPSSRVY3",46,0)
 ;
"RTN","VPSSRVY3",47,0)
 ; File index structure
"RTN","VPSSRVY3",48,0)
 ;    
"RTN","VPSSRVY3",49,0)
 ;    VPS(853.8,"D", Questionnaire IEN (Template ID) , DFN, DT )
"RTN","VPSSRVY3",50,0)
 ;K @TARGET
"RTN","VPSSRVY3",51,0)
 N CNT,NEXTLINE
"RTN","VPSSRVY3",52,0)
 S NEXTLINE=0
"RTN","VPSSRVY3",53,0)
 S CNT=0
"RTN","VPSSRVY3",54,0)
 ;
"RTN","VPSSRVY3",55,0)
STARTHS ;
"RTN","VPSSRVY3",56,0)
 K @TARGET
"RTN","VPSSRVY3",57,0)
 ; valid input parameters
"RTN","VPSSRVY3",58,0)
 ; set up variables for the extraction of clinical survey information
"RTN","VPSSRVY3",59,0)
 I $G(VPSDFN)="" S @TARGET@(0)="-1^Patient IEN not sent" G EX
"RTN","VPSSRVY3",60,0)
 I '$D(^DPT(VPSDFN)) S @TARGET@(0)="-1^Patient not found" G EX
"RTN","VPSSRVY3",61,0)
 I '$D(^VPS(853.8,VPSDFN)) S @TARGET@(0)="-1^There are no questionnaires for this patient" G EX
"RTN","VPSSRVY3",62,0)
 ;
"RTN","VPSSRVY3",63,0)
 N FDT,FLG,DAT,DATA,X,Y,FLT
"RTN","VPSSRVY3",64,0)
 S TDT=$$NOW^XLFDT()+.0001
"RTN","VPSSRVY3",65,0)
 S FLG=0
"RTN","VPSSRVY3",66,0)
 I $G(VPSTDT) D
"RTN","VPSSRVY3",67,0)
 . I VPSTDT["." S TDT=VPSTDT+.0001 Q
"RTN","VPSSRVY3",68,0)
 . I VPSTDT'["." S TDT=VPSTDT+1
"RTN","VPSSRVY3",69,0)
 S VPSQIEN=$G(VPSQIEN)
"RTN","VPSSRVY3",70,0)
 S VPSQNM=$G(VPSQNM)
"RTN","VPSSRVY3",71,0)
 S VPSQNM=$$UPCASE^VPSSRVY2(VPSQNM)
"RTN","VPSSRVY3",72,0)
 ; loop through obtaining the most current information first
"RTN","VPSSRVY3",73,0)
 F  S TDT=$O(^VPS(853.8,VPSDFN,1,TDT),-1) Q:'TDT!FLG  D
"RTN","VPSSRVY3",74,0)
 . I $G(VPSFDT),TDT<VPSFDT S FLG=1 Q
"RTN","VPSSRVY3",75,0)
 . I $G(VPSTDT)="",$G(VPSFDT)]"",$G(VPSFDT)'=$P(TDT,".") Q
"RTN","VPSSRVY3",76,0)
 . I $G(VPSNUM),CNT=VPSNUM S FLG=1 Q
"RTN","VPSSRVY3",77,0)
 . I $$PASSCHK() D 
"RTN","VPSSRVY3",78,0)
 .. S FLT=0
"RTN","VPSSRVY3",79,0)
 .. D GETDATA(CNT,TDT,.FLT)
"RTN","VPSSRVY3",80,0)
 .. Q:FLT
"RTN","VPSSRVY3",81,0)
 .. S CNT=CNT+1
"RTN","VPSSRVY3",82,0)
 I CNT=0 D
"RTN","VPSSRVY3",83,0)
 . N STR
"RTN","VPSSRVY3",84,0)
 . S STR="No Survey results for "
"RTN","VPSSRVY3",85,0)
 . I $G(VPSQIEN)]"" S STR=STR_"CSQ IEN: "_VPSQIEN_", "
"RTN","VPSSRVY3",86,0)
 . I $G(VPSQNM)]"" S STR=STR_"CSQ NAME: "_VPSQNM_" "
"RTN","VPSSRVY3",87,0)
 . I $G(VPSFDT)]"" S STR=STR_"since "_VPSFDT
"RTN","VPSSRVY3",88,0)
 . D ADD(STR)
"RTN","VPSSRVY3",89,0)
 S @TARGET@(0)="1^"_CNT
"RTN","VPSSRVY3",90,0)
 ;
"RTN","VPSSRVY3",91,0)
EX ;
"RTN","VPSSRVY3",92,0)
 I $G(VPSHSFLG)=1 Q
"RTN","VPSSRVY3",93,0)
 I $G(UTFLG) Q "~@"_$NA(@TARGET)
"RTN","VPSSRVY3",94,0)
 D PDO(VPSDFN,.TARGET)
"RTN","VPSSRVY3",95,0)
 ;
"RTN","VPSSRVY3",96,0)
 Q "~@"_$NA(@TARGET)
"RTN","VPSSRVY3",97,0)
 ;
"RTN","VPSSRVY3",98,0)
PASSCHK() ;
"RTN","VPSSRVY3",99,0)
 ; test is see if this is the survey being requested
"RTN","VPSSRVY3",100,0)
 I $G(VPSQIEN)="",$G(VPSQNM)="" Q 1
"RTN","VPSSRVY3",101,0)
 N ID,ID1,FLG
"RTN","VPSSRVY3",102,0)
 S FLG=1
"RTN","VPSSRVY3",103,0)
 S ID1=$P(^VPS(853.8,VPSDFN,1,TDT,0),U,7)
"RTN","VPSSRVY3",104,0)
 I $G(VPSQIEN)]"" D  Q 'FLG
"RTN","VPSSRVY3",105,0)
 . S ID=$O(^VPS(853.85,"B",VPSQIEN,""))
"RTN","VPSSRVY3",106,0)
 . I ID1=ID S FLG=0
"RTN","VPSSRVY3",107,0)
 I $G(VPSQNM)]"" D  Q 'FLG
"RTN","VPSSRVY3",108,0)
 . I $$GET1^DIQ(853.85,ID1_",",1)=VPSQNM S FLG=0
"RTN","VPSSRVY3",109,0)
 Q 0
"RTN","VPSSRVY3",110,0)
 ;
"RTN","VPSSRVY3",111,0)
 ;
"RTN","VPSSRVY3",112,0)
 ; obtain the information from the clinical survey
"RTN","VPSSRVY3",113,0)
 ; and format the information into the report
"RTN","VPSSRVY3",114,0)
GETDATA(OIEN,IEN,FILTER) ;
"RTN","VPSSRVY3",115,0)
 N I
"RTN","VPSSRVY3",116,0)
 S DATA=$G(^VPS(853.8,VPSDFN,1,IEN,0))
"RTN","VPSSRVY3",117,0)
 S FILTER=$P(VPSQNM,":::V ",2)]""&(+$P(VPSQNM,":::V ",2)'=$$GET1^DIQ(853.85,$P(DATA,U,7)_",",2))
"RTN","VPSSRVY3",118,0)
 Q:FILTER
"RTN","VPSSRVY3",119,0)
 ; Survey Data IEN ^ Patient DFN ^ Patient Name ^  Questionnaire IEN ^ Questionnaire Name 
"RTN","VPSSRVY3",120,0)
 D ADD("Patient Name: "_$$GET1^DIQ(2,VPSDFN_",",.01))
"RTN","VPSSRVY3",121,0)
 D ADD("Questionnaire IEN: "_$$GET1^DIQ(853.85,$P(DATA,U,7)_",",.01))
"RTN","VPSSRVY3",122,0)
 D ADD("Questionnaire Name: "_$$GET1^DIQ(853.85,$P(DATA,U,7)_",",1))
"RTN","VPSSRVY3",123,0)
 ; Obtain converted Date and Time Taken
"RTN","VPSSRVY3",124,0)
 D ADD("Date and Time Taken: "_$$GET1^DIQ(853.81,IEN_","_VPSDFN_",",2))
"RTN","VPSSRVY3",125,0)
 ; Obtain Date and Time Last Modified and convert to external format
"RTN","VPSSRVY3",126,0)
 D ADD("Date and Time Last Modified: "_$$GET1^DIQ(853.81,IEN_","_VPSDFN_",",3))
"RTN","VPSSRVY3",127,0)
 ;I $G(CALC) D ADD("Survey Calculated Value: "_$$GET1^DIQ(853.81,IEN_","_VPSDFN_",",5))
"RTN","VPSSRVY3",128,0)
 D ADD("Questions and Answers:")
"RTN","VPSSRVY3",129,0)
 ; loop through the questions and responces
"RTN","VPSSRVY3",130,0)
 N CV,CALCV
"RTN","VPSSRVY3",131,0)
 S CV=0
"RTN","VPSSRVY3",132,0)
 S I=0 F  S I=$O(^VPS(853.8,VPSDFN,1,IEN,3,I)) Q:'I  D
"RTN","VPSSRVY3",133,0)
 . D ADD($$GET1^DIQ(853.811,I_","_IEN_","_VPSDFN_",",1)_" "_$$GET1^DIQ(853.811,I_","_IEN_","_VPSDFN_",",2))
"RTN","VPSSRVY3",134,0)
 . ;I $G(CALC) D ADD("Value - "_$$GET1^DIQ(853.811,I_","_IEN_","_VPSDFN_",",3))
"RTN","VPSSRVY3",135,0)
 . S DATA=$$GET1^DIQ(853.811,I_","_IEN_","_VPSDFN_",",3)
"RTN","VPSSRVY3",136,0)
 . I $G(CALC),DATA]"" S CV=CV+1,CALCV(CV)=DATA
"RTN","VPSSRVY3",137,0)
 D ADD("- - - - - - - - - - - - - - - - - - - - -")
"RTN","VPSSRVY3",138,0)
 I $G(CALC) D ADD("Survey Calculated Value: "_$$GET1^DIQ(853.81,IEN_","_VPSDFN_",",5))
"RTN","VPSSRVY3",139,0)
 F I=1:1:CV D ADD("Value - "_CALCV(I))
"RTN","VPSSRVY3",140,0)
 D ADD("@#END OF SURVEY#@")
"RTN","VPSSRVY3",141,0)
 Q
"RTN","VPSSRVY3",142,0)
ADD(TXT) ;
"RTN","VPSSRVY3",143,0)
 S NEXTLINE=NEXTLINE+1
"RTN","VPSSRVY3",144,0)
 S @TARGET@(NEXTLINE)=TXT
"RTN","VPSSRVY3",145,0)
 Q
"RTN","VPSSRVY3",146,0)
 ;
"RTN","VPSSRVY3",147,0)
PDO(PTIEN,PDOARY) ;
"RTN","VPSSRVY3",148,0)
 ; create object and store the results of this clinical survey request
"RTN","VPSSRVY3",149,0)
 N PDOOREF,LINE,ARR
"RTN","VPSSRVY3",150,0)
 S ARR="^TMP(""VPSSRVY3PDO"",$J)"
"RTN","VPSSRVY3",151,0)
 S PDOOREF=$$NEW^VPSOBJ(PTIEN,ARR)
"RTN","VPSSRVY3",152,0)
 I $P(@PDOARY@(0),U)=-1 D ADDPDO^VPSOBJ(PDOOREF,$P(@TARGET@(0),U,2)) G CLOSE
"RTN","VPSSRVY3",153,0)
 S LINE=0
"RTN","VPSSRVY3",154,0)
 F  S LINE=$O(@PDOARY@(LINE)) Q:'LINE  D
"RTN","VPSSRVY3",155,0)
 . I @PDOARY@(LINE)'="@#END OF SURVEY#@" D ADDPDO^VPSOBJ(PDOOREF,@PDOARY@(LINE)) I 1
"RTN","VPSSRVY3",156,0)
 . E  D ADDBLANK^VPSOBJ(PDOOREF),ADDUNDLN^VPSOBJ(PDOOREF),ADDBLANK^VPSOBJ(PDOOREF)
"RTN","VPSSRVY3",157,0)
CLOSE ;
"RTN","VPSSRVY3",158,0)
 ; close the object
"RTN","VPSSRVY3",159,0)
 D CLOSE^VPSOBJ(PDOOREF)
"RTN","VPSSRVY3",160,0)
 S PDOARY=ARR
"RTN","VPSSRVY3",161,0)
 Q
"RTN","VPSSRVY3",162,0)
 ;
"RTN","VPSSRVY3",163,0)
TEST ;
"RTN","VPSSRVY3",164,0)
 S DFN=7178910
"RTN","VPSSRVY3",165,0)
 S GMTSEGH="TEST"
"RTN","VPSSRVY3",166,0)
 S GMTSEND=3150313.235959
"RTN","VPSSRVY3",167,0)
 S GMTSNDM=5
"RTN","VPSSRVY3",168,0)
 S GMTSEGL=80
"RTN","VPSSRVY3",169,0)
 S GMTSBEG=3140313.20113
"RTN","VPSSRVY3",170,0)
 S GMTSEND=3150313.235959
"RTN","VPSSRVY3",171,0)
 S GMTSEG(1)="1345^442029^5^1Y^^^"
"RTN","VPSSRVY3",172,0)
 S GMTSEG(1,853.875,0)="^VPS(853.875,"
"RTN","VPSSRVY3",173,0)
 S GMTSEG(1,853.875,1)=3
"RTN","VPSSRVY3",174,0)
 D HS
"RTN","VPSSRVY3",175,0)
 Q
"RTN","VPSSRVY3",176,0)
 ;
"RTN","VPSSRVY3",177,0)
HSCAL ;
"RTN","VPSSRVY3",178,0)
 ; Entry point for including calculated values with the health summary 
"RTN","VPSSRVY3",179,0)
 ; CALC - is the flag for obtaining calcualted values
"RTN","VPSSRVY3",180,0)
 N CALC
"RTN","VPSSRVY3",181,0)
 S CALC=1
"RTN","VPSSRVY3",182,0)
HS ;
"RTN","VPSSRVY3",183,0)
 ; Entry point for health summary
"RTN","VPSSRVY3",184,0)
 ; VPSHSFLG - Flag that indicates health summary so the report is processed accordingly
"RTN","VPSSRVY3",185,0)
 ; obtains key values that are provided by the CPRS call
"RTN","VPSSRVY3",186,0)
 N VPSHSFLG,LINE,DATA,VPSDFN,TARGET,VPSQIEN,VPSQNM,VPSFDT,VPSTDT,VPSNUM,DIEN
"RTN","VPSSRVY3",187,0)
 S VPSHSFLG=1
"RTN","VPSSRVY3",188,0)
 S TARGET="^TMP(""VPSSRVY3 HS"",$J)"
"RTN","VPSSRVY3",189,0)
 I $G(DFN)]"" S VPSDFN=DFN
"RTN","VPSSRVY3",190,0)
 I $G(GMTSBEG)=1 S GMTSBEG=""
"RTN","VPSSRVY3",191,0)
 I $G(GMTSEND)=9999999 S GMTSEND=""
"RTN","VPSSRVY3",192,0)
 I $G(GMTSNDM)=-1 S GMTSNDM=""
"RTN","VPSSRVY3",193,0)
 I $G(GMTSNDM)]"" S VPSNUM=GMTSNDM
"RTN","VPSSRVY3",194,0)
 I $G(GMTSBEG)]"" S VPSFDT=GMTSBEG
"RTN","VPSSRVY3",195,0)
 I $G(GMTSEND)]"" S VPSTDT=GMTSEND
"RTN","VPSSRVY3",196,0)
 W !,$$CJ^XLFSTR(GMTSEGH,75),!
"RTN","VPSSRVY3",197,0)
 N CNT,NEXTLINE,I
"RTN","VPSSRVY3",198,0)
 S NEXTLINE=0,CNT=0
"RTN","VPSSRVY3",199,0)
 I '$D(GMTSEG(1,853.875)) D STARTHS,PRINTHS("") Q
"RTN","VPSSRVY3",200,0)
 S I=0
"RTN","VPSSRVY3",201,0)
 F  S I=$O(GMTSEG(1,853.875,I)) Q:'I  D
"RTN","VPSSRVY3",202,0)
 . S DIEN=$G(GMTSEG(1,853.875,I))
"RTN","VPSSRVY3",203,0)
 . S VPSQNM=$P($G(^VPS(853.875,DIEN,0)),U)
"RTN","VPSSRVY3",204,0)
 . S CNT=0
"RTN","VPSSRVY3",205,0)
 . D STARTHS
"RTN","VPSSRVY3",206,0)
 . D PRINTHS(VPSQNM_" - "_GMTSEGL)
"RTN","VPSSRVY3",207,0)
 Q
"RTN","VPSSRVY3",208,0)
 ;
"RTN","VPSSRVY3",209,0)
 ; print the results of the health summary
"RTN","VPSSRVY3",210,0)
 ;
"RTN","VPSSRVY3",211,0)
PRINTHS(SURVEY) ;
"RTN","VPSSRVY3",212,0)
 N LINE
"RTN","VPSSRVY3",213,0)
 W $$REPEAT^XLFSTR("_",75),!,$$CJ^XLFSTR(SURVEY,75),!,!
"RTN","VPSSRVY3",214,0)
 I $P(@TARGET@(0),U)=-1 W !,$P(@TARGET@(0),U,2) Q
"RTN","VPSSRVY3",215,0)
 I $P(@TARGET@(0),U,2)=0 W !,"No results",!,$$REPEAT^XLFSTR("_",75),! Q
"RTN","VPSSRVY3",216,0)
 S LINE=0
"RTN","VPSSRVY3",217,0)
 F  S LINE=$O(@TARGET@(LINE)) Q:'LINE  D
"RTN","VPSSRVY3",218,0)
 . S DATA=@TARGET@(LINE)
"RTN","VPSSRVY3",219,0)
 . I DATA'="@#END OF SURVEY#@" W !,DATA
"RTN","VPSSRVY3",220,0)
 . E  W !,$$REPEAT^XLFSTR("_",75),!
"RTN","VPSSRVY3",221,0)
 Q
"SEC","^DIC",853.1,853.1,0,"AUDIT")
@
"SEC","^DIC",853.1,853.1,0,"DD")
@
"SEC","^DIC",853.1,853.1,0,"DEL")
@
"SEC","^DIC",853.1,853.1,0,"LAYGO")
@
"SEC","^DIC",853.1,853.1,0,"RD")
@
"SEC","^DIC",853.1,853.1,0,"WR")
@
"SEC","^DIC",853.8,853.8,0,"AUDIT")

"SEC","^DIC",853.8,853.8,0,"DD")

"SEC","^DIC",853.8,853.8,0,"DEL")

"SEC","^DIC",853.8,853.8,0,"LAYGO")

"SEC","^DIC",853.8,853.8,0,"RD")
 
"SEC","^DIC",853.8,853.8,0,"WR")

"SEC","^DIC",853.85,853.85,0,"AUDIT")
@
"SEC","^DIC",853.85,853.85,0,"DD")
@
"SEC","^DIC",853.85,853.85,0,"DEL")
@
"SEC","^DIC",853.85,853.85,0,"LAYGO")
@
"SEC","^DIC",853.85,853.85,0,"RD")
@
"SEC","^DIC",853.85,853.85,0,"WR")
@
"SEC","^DIC",853.875,853.875,0,"AUDIT")
@
"SEC","^DIC",853.875,853.875,0,"DD")
@
"SEC","^DIC",853.875,853.875,0,"DEL")
@
"SEC","^DIC",853.875,853.875,0,"LAYGO")
@
"SEC","^DIC",853.875,853.875,0,"RD")
@
"SEC","^DIC",853.875,853.875,0,"WR")
@
"SEC","^DIC",853.9,853.9,0,"AUDIT")

"SEC","^DIC",853.9,853.9,0,"DD")

"SEC","^DIC",853.9,853.9,0,"DEL")

"SEC","^DIC",853.9,853.9,0,"LAYGO")

"SEC","^DIC",853.9,853.9,0,"RD")

"SEC","^DIC",853.9,853.9,0,"WR")

"VER")
8.0^22.0
"^DD",853.1,853.1,0)
FIELD^^3^4
"^DD",853.1,853.1,0,"DDA")
N
"^DD",853.1,853.1,0,"DT")
3141113
"^DD",853.1,853.1,0,"IX","B",853.1,.01)

"^DD",853.1,853.1,0,"NM","VPS HL7 SITE PARAMETERS")

"^DD",853.1,853.1,0,"VRPK")
VPS
"^DD",853.1,853.1,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",853.1,853.1,.01,1,0)
^.1
"^DD",853.1,853.1,.01,1,1,0)
853.1^B
"^DD",853.1,853.1,.01,1,1,1)
S ^VPS(853.1,"B",$E(X,1,30),DA)=""
"^DD",853.1,853.1,.01,1,1,2)
K ^VPS(853.1,"B",$E(X,1,30),DA)
"^DD",853.1,853.1,.01,1,1,"%D",0)
^^1^1^3141105^
"^DD",853.1,853.1,.01,1,1,"%D",1,0)
This cross reference is for VPS HL7 SITE PARAMETERS Name look up.
"^DD",853.1,853.1,.01,3)
Answer must be 3-30 characters in length and not numeric or starting with punctuation. 
"^DD",853.1,853.1,.01,21,0)
^^1^1^3141113^
"^DD",853.1,853.1,.01,21,1,0)
Enter name with lenght 3-30 characters.
"^DD",853.1,853.1,.01,"DT")
3141113
"^DD",853.1,853.1,1,0)
ACTIVE^S^Y:Yes;N:No;^0;2^Q
"^DD",853.1,853.1,1,3)
Enter 'Y' to activate VPS HL7 or 'N' to deactivate.
"^DD",853.1,853.1,1,21,0)
^.001^1^1^3141113^^
"^DD",853.1,853.1,1,21,1,0)
This field indicates whether or not VPS HL7 is active.
"^DD",853.1,853.1,1,"DT")
3141028
"^DD",853.1,853.1,2,0)
LAST TRANSMIT ERROR DT/TM^D^^1;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",853.1,853.1,2,3)
Enter the last HL7 transmission error Date/Time.
"^DD",853.1,853.1,2,21,0)
^.001^2^2^3141105^^^
"^DD",853.1,853.1,2,21,1,0)
This field is the Date/Time when the last transmission attempt is 
"^DD",853.1,853.1,2,21,2,0)
unsuccessful.
"^DD",853.1,853.1,2,"DT")
3141105
"^DD",853.1,853.1,3,0)
LAST TRANSMISSION ERROR TEXT^F^^1;2^K:$L(X)>60!($L(X)<1) X
"^DD",853.1,853.1,3,3)
Enter the last transmission error message, 3 to 60 characters in length.
"^DD",853.1,853.1,3,21,0)
^.001^2^2^3141113^^
"^DD",853.1,853.1,3,21,1,0)
This is the error message when the last HL7 transmission attempt is 
"^DD",853.1,853.1,3,21,2,0)
unsuccessful.
"^DD",853.1,853.1,3,"DT")
3141028
"^DD",853.8,853.8,0)
FIELD^^1^2
"^DD",853.8,853.8,0,"DDA")
N
"^DD",853.8,853.8,0,"DT")
3150310
"^DD",853.8,853.8,0,"IX","B",853.8,.01)

"^DD",853.8,853.8,0,"IX","C",853.81,1)

"^DD",853.8,853.8,0,"IX","D",853.81,11)

"^DD",853.8,853.8,0,"IX","E",853.81,7)

"^DD",853.8,853.8,0,"IX","F",853.81,12)

"^DD",853.8,853.8,0,"NM","VPS CLINICAL SURVEY")

"^DD",853.8,853.8,0,"VRPK")
VPS
"^DD",853.8,853.8,.01,0)
PATIENT^RP2'X^DPT(^0;1^S DINUM=X Q
"^DD",853.8,853.8,.01,1,0)
^.1
"^DD",853.8,853.8,.01,1,1,0)
853.8^B
"^DD",853.8,853.8,.01,1,1,1)
S ^VPS(853.8,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.8,.01,1,1,2)
K ^VPS(853.8,"B",$E(X,1,30),DA)
"^DD",853.8,853.8,.01,1,1,"DT")
3140926
"^DD",853.8,853.8,.01,3)
Select the patient who entered the questionnaire.
"^DD",853.8,853.8,.01,21,0)
^.001^1^1^3141024^^
"^DD",853.8,853.8,.01,21,1,0)
This is the patient who entered the questionnaire.
"^DD",853.8,853.8,.01,23,0)
^.001^2^2^3141024^^
"^DD",853.8,853.8,.01,23,1,0)
Since this value is DINUM, this field represents the root IEN for this 
"^DD",853.8,853.8,.01,23,2,0)
file as well.
"^DD",853.8,853.8,.01,"DT")
3141119
"^DD",853.8,853.8,1,0)
QUESTIONNAIRE^853.81D^^1;0
"^DD",853.8,853.8,1,21,0)
^.001^1^1^3150310^^^^
"^DD",853.8,853.8,1,21,1,0)
This multiple represents all surveys for the patient.
"^DD",853.8,853.8,1,"DT")
3141112
"^DD",853.8,853.81,0)
QUESTIONNAIRE SUB-FIELD^^12^11
"^DD",853.8,853.81,0,"DT")
3150310
"^DD",853.8,853.81,0,"IX","B",853.81,.01)

"^DD",853.8,853.81,0,"NM","QUESTIONNAIRE")

"^DD",853.8,853.81,0,"UP")
853.8
"^DD",853.8,853.81,.01,0)
DATE/TIME STORED^RDX^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X S:$D(X) DINUM=X Q
"^DD",853.8,853.81,.01,1,0)
^.1
"^DD",853.8,853.81,.01,1,1,0)
853.81^B
"^DD",853.8,853.81,.01,1,1,1)
S ^VPS(853.8,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.81,.01,1,1,2)
K ^VPS(853.8,DA(1),1,"B",$E(X,1,30),DA)
"^DD",853.8,853.81,.01,3)
Enter Date/Time the questionnaire was stored in VistA
"^DD",853.8,853.81,.01,21,0)
^.001^2^2^3141114^^^^
"^DD",853.8,853.81,.01,21,1,0)
This is the Date/Time when the questionnaire sent by VetLink is stored in
"^DD",853.8,853.81,.01,21,2,0)
VistA. This Date/Time is automatically generated.
"^DD",853.8,853.81,.01,23,0)
^.001^1^1^3141114^^^^
"^DD",853.8,853.81,.01,23,1,0)
This Date/Time is DINUMed.
"^DD",853.8,853.81,.01,"DT")
3141112
"^DD",853.8,853.81,2,0)
DATE/TIME TAKEN^RD^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",853.8,853.81,2,3)
Enter Date/Time the questionnaire was taken.
"^DD",853.8,853.81,2,21,0)
^.001^1^1^3141114^^^^
"^DD",853.8,853.81,2,21,1,0)
This is the date/time the survey was taken by the patient.
"^DD",853.8,853.81,2,"DT")
3141114
"^DD",853.8,853.81,3,0)
DATE/TIME LAST MODIFIED^RD^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",853.8,853.81,3,3)
Enter Date/Time the questionnaire last modified.
"^DD",853.8,853.81,3,21,0)
^.001^1^1^3141107^^^
"^DD",853.8,853.81,3,21,1,0)
This is the Date/Time the survey was modified by patient or staff.
"^DD",853.8,853.81,3,"DT")
3141107
"^DD",853.8,853.81,4,0)
INTERVIEWER STAFF^P200'^VA(200,^0;5^Q
"^DD",853.8,853.81,4,3)
Enter the staff who interviewed the patient.
"^DD",853.8,853.81,4,21,0)
^^1^1^3140825^^
"^DD",853.8,853.81,4,21,1,0)
This is the staff who interviewed the patient during the survey.
"^DD",853.8,853.81,4,"DT")
3140825
"^DD",853.8,853.81,5,0)
SURVEY CALCULATED VALUE^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",853.8,853.81,5,3)
Enter calculated value for the survey. This value must be 3-250 characters in length.
"^DD",853.8,853.81,5,21,0)
^.001^1^1^3141104^^
"^DD",853.8,853.81,5,21,1,0)
This is the calculated value for the whole survey generated by Vetlink.
"^DD",853.8,853.81,5,"DT")
3140825
"^DD",853.8,853.81,6,0)
COMPLETION STATUS^S^C:COMPLETED;I:INCOMPLETE;^2;1^Q
"^DD",853.8,853.81,6,3)
Enter completion status for the questionnaire.
"^DD",853.8,853.81,6,21,0)
^^1^1^3140825^
"^DD",853.8,853.81,6,21,1,0)
This field indicates whether or not the survey was completed.
"^DD",853.8,853.81,6,"DT")
3140825
"^DD",853.8,853.81,7,0)
PATIENT SAFETY^S^Y:YES;N:NO;^2;2^Q
"^DD",853.8,853.81,7,1,0)
^.1
"^DD",853.8,853.81,7,1,1,0)
853.8^E
"^DD",853.8,853.81,7,1,1,1)
S ^VPS(853.8,"E",$E(X,1,30),DA(1),DA)=""
"^DD",853.8,853.81,7,1,1,2)
K ^VPS(853.8,"E",$E(X,1,30),DA(1),DA)
"^DD",853.8,853.81,7,1,1,"%D",0)
^^1^1^3141114^
"^DD",853.8,853.81,7,1,1,"%D",1,0)
This cross refernce of Patient Safty Field is for searching.
"^DD",853.8,853.81,7,1,1,"DT")
3141114
"^DD",853.8,853.81,7,3)
Enter whether or not this is Patient Safety Questionnaire.
"^DD",853.8,853.81,7,21,0)
^^1^1^3140825^
"^DD",853.8,853.81,7,21,1,0)
This field indicates whether or not the survey is a patient safety.
"^DD",853.8,853.81,7,"DT")
3141114
"^DD",853.8,853.81,8,0)
IMMEDIATE ACTION^S^Y:YES;N:NO;^2;3^Q
"^DD",853.8,853.81,8,3)
Enter whether or not the questionnaire requires immediate action.
"^DD",853.8,853.81,8,21,0)
^^1^1^3140825^
"^DD",853.8,853.81,8,21,1,0)
This field indicates whether or not the survey requires immediate action.
"^DD",853.8,853.81,8,"DT")
3140825
"^DD",853.8,853.81,11,0)
QUESTIONNAIRE TEMPLATE ID^RP853.85^VPS(853.85,^0;7^Q
"^DD",853.8,853.81,11,1,0)
^.1
"^DD",853.8,853.81,11,1,1,0)
853.8^D
"^DD",853.8,853.81,11,1,1,1)
S ^VPS(853.8,"D",$E(X,1,30),DA(1),DA)=""
"^DD",853.8,853.81,11,1,1,2)
K ^VPS(853.8,"D",$E(X,1,30),DA(1),DA)
"^DD",853.8,853.81,11,1,1,"%D",0)
^.101^2^2^3141107^^
"^DD",853.8,853.81,11,1,1,"%D",1,0)
This cross reference selects questionnaires taken by patients
"^DD",853.8,853.81,11,1,1,"%D",2,0)
using the Questionnaire Template ID.
"^DD",853.8,853.81,11,1,1,"DT")
3141001
"^DD",853.8,853.81,11,3)

"^DD",853.8,853.81,11,21,0)
^.001^1^1^3150310^^^^
"^DD",853.8,853.81,11,21,1,0)
This is the questionnaire template identification number.
"^DD",853.8,853.81,11,"DT")
3150310
"^DD",853.8,853.81,11,"V",0)
^.12P^1^1
"^DD",853.8,853.81,11,"V",1,0)
853.875^pointer to Template ID^1^ID^n^y
"^DD",853.8,853.81,12,0)
SURVEY CREATOR^RP200'^VA(200,^0;8^Q
"^DD",853.8,853.81,12,1,0)
^.1
"^DD",853.8,853.81,12,1,1,0)
853.8^F
"^DD",853.8,853.81,12,1,1,1)
S ^VPS(853.8,"F",$E(X,1,30),DA(1),DA)=""
"^DD",853.8,853.81,12,1,1,2)
K ^VPS(853.8,"F",$E(X,1,30),DA(1),DA)
"^DD",853.8,853.81,12,1,1,"%D",0)
^^1^1^3141114^
"^DD",853.8,853.81,12,1,1,"%D",1,0)
This cross reference of the survey creator is for searching.
"^DD",853.8,853.81,12,1,1,"DT")
3141114
"^DD",853.8,853.81,12,3)
Enter the staff who created this survey.
"^DD",853.8,853.81,12,21,0)
^^1^1^3141112^
"^DD",853.8,853.81,12,21,1,0)
This is the staff who created this survey.
"^DD",853.8,853.81,12,"DT")
3141114
"^DD",853.8,853.81,20,0)
QUESTIONS^853.811^^3;0
"^DD",853.8,853.81,20,21,0)
^.001^1^1^3141104^^
"^DD",853.8,853.81,20,21,1,0)
This multiple represents all questions for the survey.
"^DD",853.8,853.811,0)
QUESTIONS SUB-FIELD^^3^4
"^DD",853.8,853.811,0,"DT")
3141104
"^DD",853.8,853.811,0,"IX","B",853.811,.01)

"^DD",853.8,853.811,0,"NM","QUESTIONS")

"^DD",853.8,853.811,0,"UP")
853.81
"^DD",853.8,853.811,.01,0)
QUESTION^RNJ4,0X^^0;1^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",853.8,853.811,.01,1,0)
^.1
"^DD",853.8,853.811,.01,1,1,0)
853.811^B
"^DD",853.8,853.811,.01,1,1,1)
S ^VPS(853.8,DA(2),1,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",853.8,853.811,.01,1,1,2)
K ^VPS(853.8,DA(2),1,DA(1),3,"B",$E(X,1,30),DA)
"^DD",853.8,853.811,.01,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",853.8,853.811,.01,21,0)
^.001^1^1^3141104^^^
"^DD",853.8,853.811,.01,21,1,0)
This is the sequential number which represents the question.
"^DD",853.8,853.811,.01,23,0)
^.001^1^1^3141104^^^
"^DD",853.8,853.811,.01,23,1,0)
This is a DINUM value.
"^DD",853.8,853.811,.01,"DT")
3141104
"^DD",853.8,853.811,1,0)
QUESTION PRESENTED^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",853.8,853.811,1,3)
Enter question presented in the questionnaire (must be 1-250 characters).
"^DD",853.8,853.811,1,21,0)
^^1^1^3140825^
"^DD",853.8,853.811,1,21,1,0)
This represents each question presented in the questionnaire. 
"^DD",853.8,853.811,1,"DT")
3140825
"^DD",853.8,853.811,2,0)
RESPONSE PROVIDED^F^^2;1^K:$L(X)>250!($L(X)<1) X
"^DD",853.8,853.811,2,3)
Enter response provided to the question (must be 1-250 characters).
"^DD",853.8,853.811,2,21,0)
^^2^2^3140825^
"^DD",853.8,853.811,2,21,1,0)
This is the patient response for each question presented in the 
"^DD",853.8,853.811,2,21,2,0)
questionnaire.
"^DD",853.8,853.811,2,"DT")
3140825
"^DD",853.8,853.811,3,0)
QUESTION CALCULATED VALUE^F^^3;1^K:$L(X)>250!($L(X)<1) X
"^DD",853.8,853.811,3,3)
Enter calculated value for the question (must be 1-250 characters).
"^DD",853.8,853.811,3,21,0)
^^1^1^3140825^^
"^DD",853.8,853.811,3,21,1,0)
This is calculated value for each question generated by Vetlink. 
"^DD",853.8,853.811,3,"DT")
3140825
"^DD",853.85,853.85,0)
FIELD^^3^4
"^DD",853.85,853.85,0,"DDA")
N
"^DD",853.85,853.85,0,"DT")
3150327
"^DD",853.85,853.85,0,"IX","B",853.85,.01)

"^DD",853.85,853.85,0,"NM","VPS QUESTIONNAIRE IDENTIFIERS")

"^DD",853.85,853.85,0,"PT",853.81,11)

"^DD",853.85,853.85,0,"VRPK")
VPS
"^DD",853.85,853.85,.01,0)
TEMPLATE ID^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",853.85,853.85,.01,1,0)
^.1^^0
"^DD",853.85,853.85,.01,1,1,0)
853.85^B
"^DD",853.85,853.85,.01,1,1,1)
S ^VPS(853.85,"B",$E(X,1,30),DA)=""
"^DD",853.85,853.85,.01,1,1,2)
K ^VPS(853.85,"B",$E(X,1,30),DA)
"^DD",853.85,853.85,.01,3)
Answer must be 3-60 characters in length.
"^DD",853.85,853.85,.01,21,0)
^^1^1^3150310^
"^DD",853.85,853.85,.01,21,1,0)
This is the unique questionnaire template identification string.
"^DD",853.85,853.85,.01,"DT")
3150325
"^DD",853.85,853.85,1,0)
SURVEY NAME^RF^^1;1^K:$L(X)>240!($L(X)<3) X
"^DD",853.85,853.85,1,3)
Answer must be 3-240 characters in length.
"^DD",853.85,853.85,1,21,0)
^^2^2^3150327^
"^DD",853.85,853.85,1,21,1,0)
This Questionnaire Name represents the questionnaire built by and stored 
"^DD",853.85,853.85,1,21,2,0)
in VetLink. This value must be 3-240 characters in length.
"^DD",853.85,853.85,1,"DT")
3150327
"^DD",853.85,853.85,2,0)
VERSION^RNJ4,0^^1;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",853.85,853.85,2,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",853.85,853.85,2,21,0)
^^2^2^3150310^
"^DD",853.85,853.85,2,21,1,0)
This is the questionnaire version number which tracks questionnaire
"^DD",853.85,853.85,2,21,2,0)
revisions.
"^DD",853.85,853.85,2,"DT")
3150310
"^DD",853.85,853.85,3,0)
QUESTIONNAIRE INTERNAL NAME^F^^2;1^K:$L(X)>250!($L(X)<1) X
"^DD",853.85,853.85,3,3)
Answer must be 1-250 characters in length.
"^DD",853.85,853.85,3,21,0)
^^1^1^3150310^
"^DD",853.85,853.85,3,21,1,0)
This is the Questionnaire Internal Name.
"^DD",853.85,853.85,3,"DT")
3150310
"^DD",853.875,853.875,0)
FIELD^^.01^1
"^DD",853.875,853.875,0,"DDA")
N
"^DD",853.875,853.875,0,"DT")
3150309
"^DD",853.875,853.875,0,"NM","VPS QUESTIONNAIRE NAME")

"^DD",853.875,853.875,0,"PT",853.81,11)

"^DD",853.875,853.875,0,"VRPK")
VPS
"^DD",853.875,853.875,.01,0)
NAME^RFX^^0;1^K:$L(X)>70!($L(X)<3)!'(X'?1P.E) X
"^DD",853.875,853.875,.01,1,0)
^.1^^0
"^DD",853.875,853.875,.01,3)
Answer must be 3-70 characters in length.
"^DD",853.875,853.875,.01,21,0)
^^1^1^3150310^
"^DD",853.875,853.875,.01,21,1,0)
VPS Clinical Survey Questionnaire Name
"^DD",853.875,853.875,.01,"DT")
3150327
"^DD",853.9,853.9,0)
FIELD^^2^4
"^DD",853.9,853.9,0,"DDA")
N
"^DD",853.9,853.9,0,"DT")
3141113
"^DD",853.9,853.9,0,"IX","B",853.9,.01)

"^DD",853.9,853.9,0,"NM","VPS APPOINTMENTS QUEUE")

"^DD",853.9,853.9,0,"VRPK")
VPS
"^DD",853.9,853.9,.01,0)
QUEUE ID^RNJ10,0X^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X S:$D(X) DINUM=X
"^DD",853.9,853.9,.01,1,0)
^.1
"^DD",853.9,853.9,.01,1,1,0)
853.9^B
"^DD",853.9,853.9,.01,1,1,1)
S ^VPS(853.9,"B",$E(X,1,30),DA)=""
"^DD",853.9,853.9,.01,1,1,2)
K ^VPS(853.9,"B",$E(X,1,30),DA)
"^DD",853.9,853.9,.01,1,1,"%D",0)
^^1^1^3141105^
"^DD",853.9,853.9,.01,1,1,"%D",1,0)
This cross reference is utilized for identification.
"^DD",853.9,853.9,.01,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",853.9,853.9,.01,21,0)
^^3^3^3130718^
"^DD",853.9,853.9,.01,21,1,0)
This field contains a sequential number generated at the time a record is 
"^DD",853.9,853.9,.01,21,2,0)
stored in the file. It only serves to create an entry in the file and has 
"^DD",853.9,853.9,.01,21,3,0)
no other special meaning.
"^DD",853.9,853.9,.01,"DT")
3130719
"^DD",853.9,853.9,1,0)
APPOINTMENT FROM DATE^RD^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.9,853.9,1,3)
Enter Appointment From Date or Date/Time.
"^DD",853.9,853.9,1,21,0)
^.001^2^2^3141113^^^
"^DD",853.9,853.9,1,21,1,0)
This is the Appointment From Date in which the appointments for the queue 
"^DD",853.9,853.9,1,21,2,0)
was retrieved.
"^DD",853.9,853.9,1,"DT")
3141113
"^DD",853.9,853.9,2,0)
APPOINTMENT THROUGH DATE^RD^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.9,853.9,2,3)
Enter Appointment Through Date or Date/Time.
"^DD",853.9,853.9,2,21,0)
^.001^2^2^3141113^^
"^DD",853.9,853.9,2,21,1,0)
This is the Appointment Through Date in which the appointments for the
"^DD",853.9,853.9,2,21,2,0)
queue was retrieved.
"^DD",853.9,853.9,2,"DT")
3141113
"^DD",853.9,853.9,10,0)
APPOINTMENTS^853.91P^^1;0
"^DD",853.9,853.9,10,21,0)
^.001^1^1^3141203^^
"^DD",853.9,853.9,10,21,1,0)
A list of appointments for the given queue.
"^DD",853.9,853.91,0)
APPOINTMENTS SUB-FIELD^^4^5
"^DD",853.9,853.91,0,"DT")
3130719
"^DD",853.9,853.91,0,"IX","B",853.91,.01)

"^DD",853.9,853.91,0,"NM","APPOINTMENTS")

"^DD",853.9,853.91,0,"UP")
853.9
"^DD",853.9,853.91,.01,0)
CLINIC^P44'^SC(^0;1^Q
"^DD",853.9,853.91,.01,1,0)
^.1
"^DD",853.9,853.91,.01,1,1,0)
853.91^B
"^DD",853.9,853.91,.01,1,1,1)
S ^VPS(853.9,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",853.9,853.91,.01,1,1,2)
K ^VPS(853.9,DA(1),1,"B",$E(X,1,30),DA)
"^DD",853.9,853.91,.01,1,1,"%D",0)
^^1^1^3141105^
"^DD",853.9,853.91,.01,1,1,"%D",1,0)
This cross refernce is utilized for look ups.
"^DD",853.9,853.91,.01,3)
Select the Clinic for this appointment.
"^DD",853.9,853.91,.01,21,0)
^^1^1^3130719^
"^DD",853.9,853.91,.01,21,1,0)
This is the clinic associated with the appointment.
"^DD",853.9,853.91,.01,"DT")
3130719
"^DD",853.9,853.91,1,0)
APPOINTMENT DATE/TIME^DX^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",853.9,853.91,1,3)
Enter Appointment Date/Time.
"^DD",853.9,853.91,1,21,0)
^^1^1^3130719^
"^DD",853.9,853.91,1,21,1,0)
This is the Date/Time of a patient's appointment in the clinic. 
"^DD",853.9,853.91,1,"DT")
3141113
"^DD",853.9,853.91,2,0)
PATIENT^P2'^DPT(^0;3^Q
"^DD",853.9,853.91,2,3)
Select the patient.
"^DD",853.9,853.91,2,21,0)
^.001^1^1^3141113^^
"^DD",853.9,853.91,2,21,1,0)
This is the patient for whom the appointment data relates.
"^DD",853.9,853.91,2,"DT")
3130719
"^DD",853.9,853.91,3,0)
APPOINTMENT TYPE^P409.1'^SD(409.1,^0;4^Q
"^DD",853.9,853.91,3,3)
Select the Appointment Type.
"^DD",853.9,853.91,3,21,0)
^^6^6^3130719^
"^DD",853.9,853.91,3,21,1,0)
This is the type of appointment the patient is scheduled for at the time 
"^DD",853.9,853.91,3,21,2,0)
the field being populated. 
"^DD",853.9,853.91,3,21,3,0)
 
"^DD",853.9,853.91,3,21,4,0)
This time-sensitive (As-Of) version is essential to filter the 
"^DD",853.9,853.91,3,21,5,0)
non-changed appointments thus minimize number of records returned to the 
"^DD",853.9,853.91,3,21,6,0)
VPS Appointment Queue.
"^DD",853.9,853.91,3,"DT")
3130719
"^DD",853.9,853.91,4,0)
PRINTED APPOINTMENT STATUS^F^^0;5^K:$L(X)>50!($L(X)<1) X
"^DD",853.9,853.91,4,3)
Answer must be 1-50 characters in length.
"^DD",853.9,853.91,4,21,0)
^^8^8^3130719^
"^DD",853.9,853.91,4,21,1,0)
This field contains what the user will see in the VPS Appointment Queue 
"^DD",853.9,853.91,4,21,2,0)
at the time this field is being populated. This printed version is an 
"^DD",853.9,853.91,4,21,3,0)
extention of Appointment Status Name and Status indicator such as 
"^DD",853.9,853.91,4,21,4,0)
"NON-COUNT", "ACT REQ", "FUTURE", "CHECK IN", or "CHECK OUT". 
"^DD",853.9,853.91,4,21,5,0)
 
"^DD",853.9,853.91,4,21,6,0)
This time-sensitive (As-Of) version is essential to filter the 
"^DD",853.9,853.91,4,21,7,0)
non-changed appointments thus minimize number of records returned to the 
"^DD",853.9,853.91,4,21,8,0)
VPS Appointment Queue.
"^DD",853.9,853.91,4,"DT")
3130719
"^DIC",853.1,853.1,0)
VPS HL7 SITE PARAMETERS^853.1
"^DIC",853.1,853.1,0,"GL")
^VPS(853.1,
"^DIC",853.1,853.1,"%",0)
^1.005^^0
"^DIC",853.1,853.1,"%D",0)
^^5^5^3141204^^
"^DIC",853.1,853.1,"%D",1,0)
This file stores VPS HL7 Site parameters. This file contains active flag
"^DIC",853.1,853.1,"%D",2,0)
to activate or deactivate HL7 transmission. Since VPS HL7 messages are 
"^DIC",853.1,853.1,"%D",3,0)
transmitted in a background process, this file also provides last 
"^DIC",853.1,853.1,"%D",4,0)
transmission error and date/time stamp to assist application owner with 
"^DIC",853.1,853.1,"%D",5,0)
transmission problem.  
"^DIC",853.1,"B","VPS HL7 SITE PARAMETERS",853.1)

"^DIC",853.8,853.8,0)
VPS CLINICAL SURVEY^853.8
"^DIC",853.8,853.8,0,"GL")
^VPS(853.8,
"^DIC",853.8,853.8,"%",0)
^1.005^1^1
"^DIC",853.8,853.8,"%",1,0)
GMTS
"^DIC",853.8,853.8,"%","B","GMTS",1)

"^DIC",853.8,853.8,"%D",0)
^1.001^8^8^3141105^^^^
"^DIC",853.8,853.8,"%D",1,0)
This is the Clinical Survey Questionnaire data file for VA Point of 
"^DIC",853.8,853.8,"%D",2,0)
Service (VPS) Kiosk application. VetLink (patient-facing or staff-facing) 
"^DIC",853.8,853.8,"%D",3,0)
uses Remote Procedure Call (RPC) API to store the patient response as well
"^DIC",853.8,853.8,"%D",4,0)
as the question in the survey. 
"^DIC",853.8,853.8,"%D",5,0)
 
"^DIC",853.8,853.8,"%D",6,0)
The data stored in this file is sorted by patient and by survey. Each 
"^DIC",853.8,853.8,"%D",7,0)
patient will have multiple surveys and each survey contains multiple 
"^DIC",853.8,853.8,"%D",8,0)
questions and responses.
"^DIC",853.8,"B","VPS CLINICAL SURVEY",853.8)

"^DIC",853.85,853.85,0)
VPS QUESTIONNAIRE IDENTIFIERS^853.85
"^DIC",853.85,853.85,0,"GL")
^VPS(853.85,
"^DIC",853.85,853.85,"%",0)
^1.005^1^1
"^DIC",853.85,853.85,"%",1,0)
GMTS
"^DIC",853.85,853.85,"%","B","GMTS",1)

"^DIC",853.85,853.85,"%D",0)
^^3^3^3150310^
"^DIC",853.85,853.85,"%D",1,0)
This file contains the key identifiers for a VPS Clinical Survey.
"^DIC",853.85,853.85,"%D",2,0)
The Template ID is the unique identifier of the VPS Clinical Survey. This
"^DIC",853.85,853.85,"%D",3,0)
file contains the Template ID, Survey Name and Version.
"^DIC",853.85,"B","VPS QUESTIONNAIRE IDENTIFIERS",853.85)

"^DIC",853.875,853.875,0)
VPS QUESTIONNAIRE NAME^853.875
"^DIC",853.875,853.875,0,"GL")
^VPS(853.875,
"^DIC",853.875,853.875,"%",0)
^1.005^1^1
"^DIC",853.875,853.875,"%",1,0)
GMTS
"^DIC",853.875,853.875,"%","B","GMTS",1)

"^DIC",853.875,853.875,"%D",0)
^1.001^3^3^3150310^^^^
"^DIC",853.875,853.875,"%D",1,0)
This file contains the unique names of the VPS Clinical Survey
"^DIC",853.875,853.875,"%D",2,0)
Questionnaire Name and also name along with version number. CPRS
"^DIC",853.875,853.875,"%D",3,0)
Health Summary utilizes this file to filter the report results.
"^DIC",853.875,"B","VPS QUESTIONNAIRE NAME",853.875)

"^DIC",853.9,853.9,0)
VPS APPOINTMENTS QUEUE^853.9
"^DIC",853.9,853.9,0,"GL")
^VPS(853.9,
"^DIC",853.9,853.9,"%",0)
^1.005^^0
"^DIC",853.9,853.9,"%D",0)
^^12^12^3130718^
"^DIC",853.9,853.9,"%D",1,0)
This file is a temporary file containing appointments for a given date
"^DIC",853.9,853.9,"%D",2,0)
range in which initialy populated by "VPS GETALL APPOINTMENTS" RPC. 
"^DIC",853.9,853.9,"%D",3,0)
This temporary file represents appointment queue displayed in Vecna's VPS 
"^DIC",853.9,853.9,"%D",4,0)
Patient Appointment Queue application.
"^DIC",853.9,853.9,"%D",5,0)
 
"^DIC",853.9,853.9,"%D",6,0)
This temporary file will be updated periodically by Vecna's VPS 
"^DIC",853.9,853.9,"%D",7,0)
Patient Appointment Queue by calling "VPS GET UPDATED APPOINTMENTS" RPC.
"^DIC",853.9,853.9,"%D",8,0)
 
"^DIC",853.9,853.9,"%D",9,0)
The main purpose of this file is to minimize number of records returned 
"^DIC",853.9,853.9,"%D",10,0)
to the Vecna application. The "VPS GET UPDATED APPOINTMENTS" RPC will 
"^DIC",853.9,853.9,"%D",11,0)
use this file to filter out the non-modified appointments displayed in 
"^DIC",853.9,853.9,"%D",12,0)
the Vecna's VPS Patient Appointment Queue.
"^DIC",853.9,"B","VPS APPOINTMENTS QUEUE",853.9)

**INSTALL NAME**
VPS*1.0*3
"BLD",9248,0)
VPS*1.0*3^VPS KIOSK^0^3150528^y
"BLD",9248,4,0)
^9.64PA^853.7^4
"BLD",9248,4,853,0)
853
"BLD",9248,4,853,222)
y^n^f^^^^n
"BLD",9248,4,853.3,0)
853.3
"BLD",9248,4,853.3,222)
y^n^f^^n^^y^o^n
"BLD",9248,4,853.5,0)
853.5
"BLD",9248,4,853.5,222)
y^n^f^^^^n
"BLD",9248,4,853.7,0)
853.7
"BLD",9248,4,853.7,222)
y^n^f^^n^^y^o^n
"BLD",9248,4,"B",853,853)

"BLD",9248,4,"B",853.3,853.3)

"BLD",9248,4,"B",853.5,853.5)

"BLD",9248,4,"B",853.7,853.7)

"BLD",9248,6.3)
64
"BLD",9248,"ABPKG")
n
"BLD",9248,"INI")
REMOVE^VPSDDCU
"BLD",9248,"INID")
^^y
"BLD",9248,"KRN",0)
^9.67PA^779.2^20
"BLD",9248,"KRN",.4,0)
.4
"BLD",9248,"KRN",.401,0)
.401
"BLD",9248,"KRN",.402,0)
.402
"BLD",9248,"KRN",.403,0)
.403
"BLD",9248,"KRN",.5,0)
.5
"BLD",9248,"KRN",.84,0)
.84
"BLD",9248,"KRN",3.6,0)
3.6
"BLD",9248,"KRN",3.8,0)
3.8
"BLD",9248,"KRN",9.2,0)
9.2
"BLD",9248,"KRN",9.8,0)
9.8
"BLD",9248,"KRN",9.8,"NM",0)
^9.68A^23^22
"BLD",9248,"KRN",9.8,"NM",1,0)
VPSMRAR1^^0^B100795984
"BLD",9248,"KRN",9.8,"NM",2,0)
VPSMRAR2^^0^B23139399
"BLD",9248,"KRN",9.8,"NM",3,0)
VPSALL01^^0^B16140535
"BLD",9248,"KRN",9.8,"NM",4,0)
VPSPDO1^^0^B236656167
"BLD",9248,"KRN",9.8,"NM",5,0)
VPSPDO1M^^0^B136955019
"BLD",9248,"KRN",9.8,"NM",6,0)
VPSPUTL1^^0^B42815834
"BLD",9248,"KRN",9.8,"NM",7,0)
VPSPARAM^^0^B105808145
"BLD",9248,"KRN",9.8,"NM",9,0)
VPSMRAR3^^0^B9329908
"BLD",9248,"KRN",9.8,"NM",10,0)
VPSOBJ^^0^B74545346
"BLD",9248,"KRN",9.8,"NM",11,0)
VPSPDO2^^0^B60112459
"BLD",9248,"KRN",9.8,"NM",12,0)
VPSPDO2M^^0^B33280551
"BLD",9248,"KRN",9.8,"NM",13,0)
VPSPDO3M^^0^B60441285
"BLD",9248,"KRN",9.8,"NM",14,0)
VPSMRAR0^^0^B103791352
"BLD",9248,"KRN",9.8,"NM",15,0)
VPSMRAR4^^0^B20027135
"BLD",9248,"KRN",9.8,"NM",16,0)
VPSMRAR5^^0^B10353660
"BLD",9248,"KRN",9.8,"NM",17,0)
VPSMRAR7^^0^B10840964
"BLD",9248,"KRN",9.8,"NM",18,0)
VPSMRARU^^0^B5034887
"BLD",9248,"KRN",9.8,"NM",19,0)
VPSMRAR9^^0^B4594710
"BLD",9248,"KRN",9.8,"NM",20,0)
VPSMR51^^0^B3914403
"BLD",9248,"KRN",9.8,"NM",21,0)
VPSMR52^^0^B15651992
"BLD",9248,"KRN",9.8,"NM",22,0)
VPSMR54^^0^B9123814
"BLD",9248,"KRN",9.8,"NM",23,0)
VPSDDCU^^0^B710416
"BLD",9248,"KRN",9.8,"NM","B","VPSALL01",3)

"BLD",9248,"KRN",9.8,"NM","B","VPSDDCU",23)

"BLD",9248,"KRN",9.8,"NM","B","VPSMR51",20)

"BLD",9248,"KRN",9.8,"NM","B","VPSMR52",21)

"BLD",9248,"KRN",9.8,"NM","B","VPSMR54",22)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRAR0",14)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRAR1",1)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRAR2",2)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRAR3",9)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRAR4",15)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRAR5",16)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRAR7",17)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRAR9",19)

"BLD",9248,"KRN",9.8,"NM","B","VPSMRARU",18)

"BLD",9248,"KRN",9.8,"NM","B","VPSOBJ",10)

"BLD",9248,"KRN",9.8,"NM","B","VPSPARAM",7)

"BLD",9248,"KRN",9.8,"NM","B","VPSPDO1",4)

"BLD",9248,"KRN",9.8,"NM","B","VPSPDO1M",5)

"BLD",9248,"KRN",9.8,"NM","B","VPSPDO2",11)

"BLD",9248,"KRN",9.8,"NM","B","VPSPDO2M",12)

"BLD",9248,"KRN",9.8,"NM","B","VPSPDO3M",13)

"BLD",9248,"KRN",9.8,"NM","B","VPSPUTL1",6)

"BLD",9248,"KRN",19,0)
19
"BLD",9248,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9248,"KRN",19,"NM",1,0)
VPS KIOSK INTERFACE^^0
"BLD",9248,"KRN",19,"NM","B","VPS KIOSK INTERFACE",1)

"BLD",9248,"KRN",19.1,0)
19.1
"BLD",9248,"KRN",101,0)
101
"BLD",9248,"KRN",409.61,0)
409.61
"BLD",9248,"KRN",771,0)
771
"BLD",9248,"KRN",779.2,0)
779.2
"BLD",9248,"KRN",870,0)
870
"BLD",9248,"KRN",8989.51,0)
8989.51
"BLD",9248,"KRN",8989.52,0)
8989.52
"BLD",9248,"KRN",8994,0)
8994
"BLD",9248,"KRN",8994,"NM",0)
^9.68A^6^6
"BLD",9248,"KRN",8994,"NM",1,0)
VPS WRITE MRAR PDO^^0
"BLD",9248,"KRN",8994,"NM",2,0)
VPS GET ALLERGIES^^0
"BLD",9248,"KRN",8994,"NM",3,0)
VPS WRITE KIOSK PARAMETERS^^0
"BLD",9248,"KRN",8994,"NM",4,0)
VPS GET MRAR PDO^^0
"BLD",9248,"KRN",8994,"NM",5,0)
VPS UPDATE LAST MRAR TIU IEN^^0
"BLD",9248,"KRN",8994,"NM",6,0)
VPS GET LAST MRAR^^0
"BLD",9248,"KRN",8994,"NM","B","VPS GET ALLERGIES",2)

"BLD",9248,"KRN",8994,"NM","B","VPS GET LAST MRAR",6)

"BLD",9248,"KRN",8994,"NM","B","VPS GET MRAR PDO",4)

"BLD",9248,"KRN",8994,"NM","B","VPS UPDATE LAST MRAR TIU IEN",5)

"BLD",9248,"KRN",8994,"NM","B","VPS WRITE KIOSK PARAMETERS",3)

"BLD",9248,"KRN",8994,"NM","B","VPS WRITE MRAR PDO",1)

"BLD",9248,"KRN","B",.4,.4)

"BLD",9248,"KRN","B",.401,.401)

"BLD",9248,"KRN","B",.402,.402)

"BLD",9248,"KRN","B",.403,.403)

"BLD",9248,"KRN","B",.5,.5)

"BLD",9248,"KRN","B",.84,.84)

"BLD",9248,"KRN","B",3.6,3.6)

"BLD",9248,"KRN","B",3.8,3.8)

"BLD",9248,"KRN","B",9.2,9.2)

"BLD",9248,"KRN","B",9.8,9.8)

"BLD",9248,"KRN","B",19,19)

"BLD",9248,"KRN","B",19.1,19.1)

"BLD",9248,"KRN","B",101,101)

"BLD",9248,"KRN","B",409.61,409.61)

"BLD",9248,"KRN","B",771,771)

"BLD",9248,"KRN","B",779.2,779.2)

"BLD",9248,"KRN","B",870,870)

"BLD",9248,"KRN","B",8989.51,8989.51)

"BLD",9248,"KRN","B",8989.52,8989.52)

"BLD",9248,"KRN","B",8994,8994)

"BLD",9248,"QUES",0)
^9.62^^
"BLD",9248,"REQB",0)
^9.611^1^1
"BLD",9248,"REQB",1,0)
VPS*1.0*5^2
"BLD",9248,"REQB","B","VPS*1.0*5",1)

"DATA",853.3,1,0)
ALLERGY CHANGED TO ALLERGIC BY PATIENT^Allergy changed to Allergic indicator in patient-facing AR
"DATA",853.3,1,1)
X
"DATA",853.3,2,0)
ALLERGY CHANGED TO NOT ALLERGIC BY PATIENT^Allergy changed to Not Allergic in patient-facing AR
"DATA",853.3,2,1)
X
"DATA",853.3,3,0)
ALLERGY CHANGED TO ALLERGIC BY PROVIDER^Allergy changed to "Unconfirmed" (staff view) or "This is NOT CORRECT" (Veteran view) in staff-facing module
"DATA",853.3,3,1)
X
"DATA",853.3,4,0)
ALLERGY CHANGED OTHER PROVIDERS^Allergy changed (i.e., removed) by any provider other than the patient's primary provider in the staff-facing module
"DATA",853.3,4,1)
X
"DATA",853.3,5,0)
ALLERGY CHANGED OTHER PROVIDERS STAFF VIEW^Allergy changed by any patient's provider other than the primary provider in the staff-facing module's staff view
"DATA",853.3,5,1)
X
"DATA",853.3,6,0)
ALLERGY CHANGED OTHER PROVIDERS VET VIEW^Allergy changed by any patient's provider other than the primary provider in the staff-facing module's Veteran view
"DATA",853.3,6,1)
X
"DATA",853.3,7,0)
ALLERGY CHANGED PATIENT^Allergy Changed on patient-facing module
"DATA",853.3,7,1)
X
"DATA",853.3,8,0)
ALLERGY CHANGED PRIMARY PROVIDER^Allergy changed (i.e., removed) by the patient's primary provider in the staff-facing module
"DATA",853.3,8,1)
X
"DATA",853.3,9,0)
ALLERGY CHANGED PRIMARY PROVIDER STAFF VIEW^Allergy changed by the patient's primary provider in the staff-facing module's staff view
"DATA",853.3,9,1)
X
"DATA",853.3,10,0)
ALLERGY CHANGED PRIMARY PROVIDER VET VIEW^Allergy changed by the patient's primary provider in the staff-facing module's Veteran view
"DATA",853.3,10,1)
X
"DATA",853.3,11,0)
ALLERGY CHANGED PROVIDER^AllergyChanged in staff-facing module
"DATA",853.3,11,1)
X
"DATA",853.3,12,0)
ALLERGY CHANGED PROVIDER STAFF VIEW^AllergyChanged in staff view in the staff-facing modul
"DATA",853.3,12,1)
X
"DATA",853.3,13,0)
ALLERGY CHANGED PROVIDER VET VIEW^AllergyChanged in Veteran view in the staff-facing module
"DATA",853.3,13,1)
X
"DATA",853.3,14,0)
ALLERGY CHANGED UNSURE PATIENT^An allergy is changed to Unsure by the patient in AR
"DATA",853.3,14,1)
X
"DATA",853.3,15,0)
ALLERGY CONFIRMED OTHER PROVIDERS^Allergy confirmed by any provider other than the patient's primary provider
"DATA",853.3,15,1)
C
"DATA",853.3,16,0)
ALLERGY CONFIRMED OTHER PROVIDERS STAFF VIEW^Allergy confirmed by any provider other than the patient's primary provider in the staff-facing module's staff view
"DATA",853.3,16,1)
C
"DATA",853.3,17,0)
ALLERGY CONFIRMED OTHER PROVIDERS VET VIEW^Allergy confirmed by any provider other than the patient's primary provider in the staff-facing module's Veteran view
"DATA",853.3,17,1)
C
"DATA",853.3,18,0)
ALLERGY CONFIRMED PATIENT^Indicator that patient confirmed an allergy in AR
"DATA",853.3,18,1)
C
"DATA",853.3,19,0)
ALLERGY CONFIRMED PRIMARY PROVIDER^Allergy confirmed by the patient's primary provider
"DATA",853.3,19,1)
C
"DATA",853.3,20,0)
ALLERGY CONFIRMED PRIMARY PROVIDER STAFF VIEW^Allergy confirmed by the patient's primary provider in the staff-facing module's staff view
"DATA",853.3,20,1)
C
"DATA",853.3,21,0)
ALLERGY CONFIRMED PRIMARY PROVIDER VET VIEW^Allergy confirmed by the patient's primary provider in the staff-facing module's Veteran view
"DATA",853.3,21,1)
C
"DATA",853.3,22,0)
ALLERGY CONFIRMED PROVIDER^Allergy marked "Confirmed" (staff view) or "This is CORRECT" (Veteran view) in staff-facing module
"DATA",853.3,22,1)
C
"DATA",853.3,23,0)
ALLERGY CONFIRMED PROVIDER STAFF VIEW^Allergy Confirmed Provider when in staff view
"DATA",853.3,23,1)
C
"DATA",853.3,24,0)
ALLERGY CONFIRMED PROVIDER VET VIEW^Allergy Confirmed Provider when in Veteran view
"DATA",853.3,24,1)
C
"DATA",853.3,25,0)
DISCREP ALLERGY AR^Allergy discrepancies identified by patient in AR: the patient selected "Allergic", "Not allergic", or "Unsure", or added a new allergy.
"DATA",853.3,25,1)
D
"DATA",853.3,26,0)
DISCREP ALLERGY PROVIDER STAFF VIEW NOT POST AR^An allergy is marked as "Not allergic" or "Unsure", or a new allergy is added in the staff-facing module's staff view tab when the patient did not ARcomplete
"DATA",853.3,26,1)
D
"DATA",853.3,27,0)
DISCREP ALLERGY PROVIDER STAFF VIEW POST AR^An allergy is marked as "Not allergic" or "Unsure", or a new allergy is added in the staff-facing module's staff view tab when the patient did ARcomplete
"DATA",853.3,27,1)
D
"DATA",853.3,28,0)
DISCREP ALLERGY PROVIDER VET VIEW NOT POST AR^An allergy is marked as "Not allergic" or "Unsure", or a new allergy is added in the staff-facing module's Veteran view tab when the patient did not ARcomplete
"DATA",853.3,28,1)
D
"DATA",853.3,29,0)
DISCREP ALLERGY PROVIDER VET VIEW POST AR^An allergy is marked as "Not allergic" or "Unsure", or a new allergy is added in the staff-facing module's Veteran view tab when the patient did ARcomplete
"DATA",853.3,29,1)
D
"DATA",853.7,1,0)
DISCREP MED STAFF VIEW NOT POST MR^A medication is marked as "Taking differently than written", "Not taking", "Unsure", or a new medication is added in the staff-facing module's staff view tab when the patient did not MRcomplete.
"DATA",853.7,1,1)
D
"DATA",853.7,2,0)
DISCREP MED STAFF VIEW NOT TAKING^For a medication in the staff-facing module's staff view, "Not Taking" selected.
"DATA",853.7,2,1)
D
"DATA",853.7,3,0)
DISCREP MED STAFF VIEW POST MR^A medication is marked as "Taking differently than written", "Not taking", "Unsure", or a new medication is added in the staff-facing module's staff view tab when the patient did MRcomplete.
"DATA",853.7,3,1)
D
"DATA",853.7,4,0)
DISCREP MED STAFF VIEW TAKING DIFFERENTLY^For a medication in the staff-facing module's staff view, "Differently" selected.
"DATA",853.7,4,1)
D
"DATA",853.7,5,0)
DISCREP MED STAFF VIEW UNSURE^For a medication in the staff-facing module's staff view, "Unsure" selected.
"DATA",853.7,5,1)
D
"DATA",853.7,6,0)
DISCREP MED VET VIEW NOT POSTED MR^A medication is marked as "Taking differently than written", "Not taking", "Unsure", or a new medication is added in the staff-facing module's Veteran view tab when the patient did not MRcomplete.
"DATA",853.7,6,1)
D
"DATA",853.7,7,0)
DISCREP MED VET VIEW NOT TAKING^For a medication in the Veteran-facing module's staff view, "Not Taking" selected.
"DATA",853.7,7,1)
D
"DATA",853.7,8,0)
DISCREP MED VET VIEW POST MR^A medication is marked as "Taking differently than written", "Not taking", "Unsure", or a new medication is added in the staff-facing module's Veteran view tab when the patient did MRcomplete.
"DATA",853.7,8,1)
D
"DATA",853.7,9,0)
DISCREP MED VET VIEW TAKING DIFFERENTLY^For a medication in the Veteran-facing module's staff view, "Differently" selected.
"DATA",853.7,9,1)
D
"DATA",853.7,10,0)
DISCREP MED VET VIEW UNSURE^For a medication in the Veteran-facing module's staff view, "Unsure" selected.
"DATA",853.7,10,1)
D
"DATA",853.7,11,0)
DISCREP MR^Medication discrepancies identified by patient in MR.  
"DATA",853.7,11,1)
D
"DATA",853.7,12,0)
DISCREP MR NOT TAKING^Patient selects "Not Taking" for a medication in the patient-facing module.
"DATA",853.7,12,1)
D
"DATA",853.7,13,0)
DISCREP MR TAKING DIFFERENTLY^Patient selects "Taking Diffferently" for a medication in the patient-facing module.
"DATA",853.7,13,1)
D
"DATA",853.7,14,0)
DISCREP MR UNSURE^Patient selects "Unsure" for a medication in the patient-facing module.
"DATA",853.7,14,1)
D
"DATA",853.7,15,0)
MED CHANGED NOT TAKING PATIENT^Patient changed a medication status to "Not Taking" in MR.
"DATA",853.7,15,1)
X
"DATA",853.7,16,0)
MED CHANGED TAKING DIFFERENTLY PATIENT^Patient changed a medication status to "Taking Differently" in MR.
"DATA",853.7,16,1)
X
"DATA",853.7,17,0)
MED CHANGED UNSURE PATIENT^Patient changed a medication status to "Unsure" in MR.
"DATA",853.7,17,1)
X
"DATA",853.7,18,0)
MED CONFIRMED MR^Medication confirmed indicator in patient-facing Medication Review.
"DATA",853.7,18,1)
C
"DATA",853.7,19,0)
MED CONFIRMED STAFF VIEW^A medication confirmed in the staff-facing module's staff view
"DATA",853.7,19,1)
C
"DATA",853.7,20,0)
MED CONFIRMED VET VIEW^A medication confirmed in the staff-facing module's Veteran view.
"DATA",853.7,20,1)
C
"FIA",853)
VPS CONFIG HISTORY
"FIA",853,0)
^VPS(853,
"FIA",853,0,0)
853IS
"FIA",853,0,1)
y^n^f^^^^n
"FIA",853,0,10)

"FIA",853,0,11)

"FIA",853,0,"RLRO")

"FIA",853,0,"VR")
1.0^VPS
"FIA",853,853)
0
"FIA",853,853.01)
0
"FIA",853,853.011)
0
"FIA",853,853.012)
0
"FIA",853,853.013)
0
"FIA",853.3)
VPS ALLERGY DISCREPANCY INDICATORS
"FIA",853.3,0)
^VPS(853.3,
"FIA",853.3,0,0)
853.3
"FIA",853.3,0,1)
y^n^f^^n^^y^o^n
"FIA",853.3,0,10)

"FIA",853.3,0,11)

"FIA",853.3,0,"RLRO")

"FIA",853.3,0,"VR")
1.0^VPS
"FIA",853.3,853.3)
0
"FIA",853.5)
VPS MRAR PDO
"FIA",853.5,0)
^VPS(853.5,
"FIA",853.5,0,0)
853.5P
"FIA",853.5,0,1)
y^n^f^^^^n
"FIA",853.5,0,10)

"FIA",853.5,0,11)

"FIA",853.5,0,"RLRO")

"FIA",853.5,0,"VR")
1.0^VPS
"FIA",853.5,853.5)
0
"FIA",853.5,853.51)
0
"FIA",853.5,853.5121)
0
"FIA",853.5,853.52)
0
"FIA",853.5,853.523)
0
"FIA",853.5,853.525)
0
"FIA",853.5,853.526)
0
"FIA",853.5,853.527)
0
"FIA",853.5,853.53)
0
"FIA",853.5,853.531)
0
"FIA",853.5,853.54)
0
"FIA",853.5,853.5423)
0
"FIA",853.5,853.5424)
0
"FIA",853.5,853.5425)
0
"FIA",853.5,853.5452)
0
"FIA",853.5,853.5454)
0
"FIA",853.5,853.5455)
0
"FIA",853.5,853.55)
0
"FIA",853.5,853.5512)
0
"FIA",853.5,853.557)
0
"FIA",853.5,853.56)
0
"FIA",853.5,853.57)
0
"FIA",853.5,853.58)
0
"FIA",853.5,853.59)
0
"FIA",853.7)
VPS MED DISCREPANCY INDICATORS
"FIA",853.7,0)
^VPS(853.7,
"FIA",853.7,0,0)
853.7
"FIA",853.7,0,1)
y^n^f^^n^^y^o^n
"FIA",853.7,0,10)

"FIA",853.7,0,11)

"FIA",853.7,0,"RLRO")

"FIA",853.7,0,"VR")
1.0^VPS
"FIA",853.7,853.7)
0
"INI")
REMOVE^VPSDDCU
"IX",853,853.01,"C",0)
853.01^C^Uniqueness Index for Key 'A' of Subfile #853.01^R^^F^IR^I^853.01^^^^^LS
"IX",853,853.01,"C",1)
S ^VPS(853,DA(1),"PARAM","C",X,DA)=""
"IX",853,853.01,"C",2)
K ^VPS(853,DA(1),"PARAM","C",X,DA)
"IX",853,853.01,"C",2.5)
K ^VPS(853,DA(1),"PARAM","C")
"IX",853,853.01,"C",11.1,0)
^.114IA^1^1
"IX",853,853.01,"C",11.1,1,0)
1^F^853.01^.01^^1
"KRN",19,13051,-1)
0^1
"KRN",19,13051,0)
VPS KIOSK INTERFACE^VPS KIOSK INTERFACE^^B^^^^^^^y^
"KRN",19,13051,1,0)
^19.06^3^3^3141111^^^^
"KRN",19,13051,1,1,0)
The RPCs that support the Vetlink Point of Service (Kiosk) system which
"KRN",19,13051,1,2,0)
will will call upon these RPCs for specific events triggered by the
"KRN",19,13051,1,3,0)
Vetlink patient-facing and staff-facing interfaces.
"KRN",19,13051,10.1)
VPS KIOSK INTERFACE
"KRN",19,13051,99.1)
63378,44177
"KRN",19,13051,"RPC",0)
^19.05P^52^52
"KRN",19,13051,"RPC",1,0)
VPS GET CLINIC
"KRN",19,13051,"RPC",2,0)
VPS GET PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",3,0)
XWB GET VARIABLE VALUE
"KRN",19,13051,"RPC",6,0)
VPS EDIT PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",7,0)
VPS FULLSSN
"KRN",19,13051,"RPC",8,0)
VPS GET DFN
"KRN",19,13051,"RPC",9,0)
VPS GET SITES
"KRN",19,13051,"RPC",10,0)
VPS LAST5
"KRN",19,13051,"RPC",11,0)
VPS PATIENT CHECK-IN
"KRN",19,13051,"RPC",12,0)
VPS PATIENT PRE-REGISTRATION
"KRN",19,13051,"RPC",13,0)
VPS LIST ALL
"KRN",19,13051,"RPC",19,0)
ORWRP PRINT REPORT
"KRN",19,13051,"RPC",21,0)
VPS GET2 PATIENT DEMOGRAPHIC
"KRN",19,13051,"RPC",23,0)
VPS GET CLINICAL REMINDERS
"KRN",19,13051,"RPC",24,0)
VPS PRINT PATIENT LABEL
"KRN",19,13051,"RPC",25,0)
VPS PATIENT WRISTBAND PRINT
"KRN",19,13051,"RPC",26,0)
VPS ENHANCED GET PATIENT DEMO
"KRN",19,13051,"RPC",32,0)
VPS GET PRINTERS
"KRN",19,13051,"RPC",37,0)
VPS GET ALL CLINICS
"KRN",19,13051,"RPC",38,0)
VPS GET APPOINTMENTS
"KRN",19,13051,"RPC",39,0)
VPS GET CHANGED APPOINTMENTS
"KRN",19,13051,"RPC",40,0)
VPS SAVE CLINICAL SURVEY
"KRN",19,13051,"RPC",41,0)
VPS GET SURVEY DATA
"KRN",19,13051,"RPC",42,0)
VPS GET ALLERGIES
"KRN",19,13051,"RPC",43,0)
VPS GET MRAR PDO
"KRN",19,13051,"RPC",44,0)
VPS GET LAST MRAR
"KRN",19,13051,"RPC",45,0)
VPS UPDATE LAST MRAR TIU IEN
"KRN",19,13051,"RPC",46,0)
VPS WRITE KIOSK PARAMETERS
"KRN",19,13051,"RPC",47,0)
VPS WRITE MRAR PDO
"KRN",19,13051,"RPC",48,0)
TIU SIGN RECORD
"KRN",19,13051,"RPC",49,0)
TIU LONG LIST OF TITLES
"KRN",19,13051,"RPC",50,0)
TIU CREATE RECORD
"KRN",19,13051,"RPC",51,0)
TIU SET DOCUMENT TEXT
"KRN",19,13051,"RPC",52,0)
TIU REQUIRES COSIGNATURE
"KRN",19,13051,"U")
VPS KIOSK INTERFACE
"KRN",8994,3251,-1)
0^2
"KRN",8994,3251,0)
VPS GET ALLERGIES^GET^VPSALL01^2^R^0
"KRN",8994,3251,1,0)
^8994.01^3^3^3120915^^
"KRN",8994,3251,1,1,0)
Called by the Vetlink Kiosk system.   VPS GET ALLEGIES retrieves patient 
"KRN",8994,3251,1,2,0)
allergy data stored in an entry or entries in the PATIENT ALLERGIES file 
"KRN",8994,3251,1,3,0)
(120.8).  The retrieved data is made available to the Vetlink system. 
"KRN",8994,3251,2,0)
^8994.02A^1^1
"KRN",8994,3251,2,1,0)
DFN^1^30^1^1
"KRN",8994,3251,2,1,1,0)
^8994.021^2^2^3120915^^^
"KRN",8994,3251,2,1,1,1,0)
The patient DFN is used to collect the various allergy related fields 
"KRN",8994,3251,2,1,1,2,0)
stored in the Adverse Reaction Tracking package.
"KRN",8994,3251,2,"B","DFN",1)

"KRN",8994,3251,2,"PARAMSEQ",1,1)

"KRN",8994,3251,3,0)
^8994.03^19^19^3120915^^
"KRN",8994,3251,3,1,0)
Data taken from an entry or entries stored in the PATIENT ALLERGIES 
"KRN",8994,3251,3,2,0)
file (120.8) are populated into the local array.
"KRN",8994,3251,3,3,0)
 
"KRN",8994,3251,3,4,0)
Each element in the subscripted array is constructed as:
"KRN",8994,3251,3,5,0)
subscriptedArray(n)= "file number^iens (sub-entry ien, ien)^field 
"KRN",8994,3251,3,6,0)
number^field label^data value"
"KRN",8994,3251,3,7,0)
1.      where n is an incremental number that acts as an index in the 
"KRN",8994,3251,3,8,0)
array
"KRN",8994,3251,3,9,0)
2.      file number is the file or sub-file reference from where the 
"KRN",8994,3251,3,10,0)
field is defined 
"KRN",8994,3251,3,11,0)
3.      iens are the internal entry numbers at which the allergy record 
"KRN",8994,3251,3,12,0)
is stored.  This element can have either the entry level ien for 
"KRN",8994,3251,3,13,0)
non-multiple or it can have both the entry level ien and the sub-entry 
"KRN",8994,3251,3,14,0)
ien.   It is constructed as "sub-entry ien, entry ien"  for data coming 
"KRN",8994,3251,3,15,0)
from sub-files (multiples)
"KRN",8994,3251,3,16,0)
4.      field number is the numeric field reference from where the data 
"KRN",8994,3251,3,17,0)
has been retrieved
"KRN",8994,3251,3,18,0)
5.       field label is the name of the field
"KRN",8994,3251,3,19,0)
6.      data value  is the data that was retrieved from the field
"KRN",8994,3252,-1)
0^1
"KRN",8994,3252,0)
VPS WRITE MRAR PDO^WRITE^VPSMRAR1^2^R^0
"KRN",8994,3252,1,0)
^8994.01^7^7^3150501^^^^
"KRN",8994,3252,1,1,0)
Called by the Vetlink Kiosk system.  The RPC will accept 4 input 
"KRN",8994,3252,1,2,0)
parameters; and will return output when processing completes or ends with 
"KRN",8994,3252,1,3,0)
an exception.  Vetlink Kiosk has the Medication Review Allergy Review 
"KRN",8994,3252,1,4,0)
modules where a  veteran can review and make changes to his medications
"KRN",8994,3252,1,5,0)
and any allergies.  The MRAR can also be facilitated by a provider.  The
"KRN",8994,3252,1,6,0)
local arrays identify the field to be updated along with the respective
"KRN",8994,3252,1,7,0)
data changes and serves to the RPC.
"KRN",8994,3252,2,0)
^8994.02A^7^2
"KRN",8994,3252,2,1,0)
VPSPID^1^30^1^1
"KRN",8994,3252,2,1,1,0)
^8994.021^2^2^3150501^^
"KRN",8994,3252,2,1,1,1,0)
The patient identifier value corresponding to the provided identifier
"KRN",8994,3252,2,1,1,2,0)
type, VPSTYP.
"KRN",8994,3252,2,4,0)
VPSMRAR^2^^1^4
"KRN",8994,3252,2,4,1,0)
^^25^25^3150501^
"KRN",8994,3252,2,4,1,1,0)
Local array representing the kiosk Medication and Allergy 
"KRN",8994,3252,2,4,1,2,0)
Review passed in by reference.   VPSMRAR represents allergy related
"KRN",8994,3252,2,4,1,3,0)
fields, medication related fields, and statistical information about the
"KRN",8994,3252,2,4,1,4,0)
MRAR session.
"KRN",8994,3252,2,4,1,5,0)
 
"KRN",8994,3252,2,4,1,6,0)
Each subscript in the array is assigned a composite, delimited string.
"KRN",8994,3252,2,4,1,7,0)
 
"KRN",8994,3252,2,4,1,8,0)
 localArray(n) = FIELD NAME^ARRAY IENS^DATA 
"KRN",8994,3252,2,4,1,9,0)
 
"KRN",8994,3252,2,4,1,10,0)
where 
"KRN",8994,3252,2,4,1,11,0)
 
"KRN",8994,3252,2,4,1,12,0)
     n is an incremental number
"KRN",8994,3252,2,4,1,13,0)
 
"KRN",8994,3252,2,4,1,14,0)
     FIELD NAME represents the name of the field in 853.5 file 
"KRN",8994,3252,2,4,1,15,0)
 
"KRN",8994,3252,2,4,1,16,0)
     ARRAY IENS represent entry and sub-entry ctrs (e.g., if patient has 3
"KRN",8994,3252,2,4,1,17,0)
     allergies then a given value would be "1,2" where "1" represents top
"KRN",8994,3252,2,4,1,18,0)
     level entry and "2" represents the sub-entry or the 2nd allergy
"KRN",8994,3252,2,4,1,19,0)
     record.)
"KRN",8994,3252,2,4,1,20,0)
 
"KRN",8994,3252,2,4,1,21,0)
     DATA is the actual data that is populated at an entry in 853.5
"KRN",8994,3252,2,4,1,22,0)
 
"KRN",8994,3252,2,4,1,23,0)
Note:  Each element in VPSMRAR will accept values in the above format. 
"KRN",8994,3252,2,4,1,24,0)
However, elements of some multiple fields use the third index as the 
"KRN",8994,3252,2,4,1,25,0)
value and will ignore provided input values.  
"KRN",8994,3252,2,6,0)
VPSINTFC^1^1^1^3
"KRN",8994,3252,2,6,1,0)
^8994.021^3^3^3150126^^^
"KRN",8994,3252,2,6,1,1,0)
Interface Module.
"KRN",8994,3252,2,6,1,2,0)
'S' represents Staff-facing Interface Module
"KRN",8994,3252,2,6,1,3,0)
'P' represents Patient-facing Interface Module
"KRN",8994,3252,2,7,0)
VPSTYP^1^7^1^2
"KRN",8994,3252,2,7,1,0)
^^2^2^3150501^
"KRN",8994,3252,2,7,1,1,0)
Patient ID Type. Valid Values for this parameter are SSN, DFN, ICN, or
"KRN",8994,3252,2,7,1,2,0)
VIC/CAC.
"KRN",8994,3252,2,"B","VPSDFN",5)

"KRN",8994,3252,2,"B","VPSINTFC",6)

"KRN",8994,3252,2,"B","VPSMRAR",4)

"KRN",8994,3252,2,"B","VPSPID",1)

"KRN",8994,3252,2,"B","VPSTYP",7)

"KRN",8994,3252,2,"PARAMSEQ",1,1)

"KRN",8994,3252,2,"PARAMSEQ",2,4)

"KRN",8994,3252,2,"PARAMSEQ",2,6)

"KRN",8994,3252,2,"PARAMSEQ",2,7)

"KRN",8994,3252,2,"PARAMSEQ",3,4)

"KRN",8994,3252,2,"PARAMSEQ",3,6)

"KRN",8994,3252,2,"PARAMSEQ",4,4)

"KRN",8994,3252,3,0)
^^10^10^3150501^
"KRN",8994,3252,3,1,0)
Local array that returns the results of each updated field per array data
"KRN",8994,3252,3,2,0)
element.
"KRN",8994,3252,3,3,0)
        
"KRN",8994,3252,3,4,0)
SUCCESS : localArray(n) = FIELD NAME^ARRAY IENS^DATA^1 
"KRN",8994,3252,3,5,0)
  1 equals successful update to the database of the specific
"KRN",8994,3252,3,6,0)
  field declared at field label.  
"KRN",8994,3252,3,7,0)
          
"KRN",8994,3252,3,8,0)
FAILED  : localArray(n)="FIELD NAME^ARRAY IENS^DATA^99^exception message"
"KRN",8994,3252,3,9,0)
  99 means an exception and no update was made to the database for that
"KRN",8994,3252,3,10,0)
  specific field and exception message describes the error.
"KRN",8994,3253,-1)
0^3
"KRN",8994,3253,0)
VPS WRITE KIOSK PARAMETERS^WRITE^VPSPARAM^2^R^0^^1
"KRN",8994,3253,1,0)
^^23^23^3150501^
"KRN",8994,3253,1,1,0)
Called by the VetLink Kiosk system. This RPC will accept three input
"KRN",8994,3253,1,2,0)
parameters and will return result output when processing complete. The
"KRN",8994,3253,1,3,0)
input parameters are Kiosk Group (literal value) and the changed 
"KRN",8994,3253,1,4,0)
configuration values (array)
"KRN",8994,3253,1,5,0)
 
"KRN",8994,3253,1,6,0)
Kiosk Group: when an administrator of VetLink Kiosk is making any Kiosk
"KRN",8994,3253,1,7,0)
             configuration changes, he/she is making changes for a Kiosk Group.
"KRN",8994,3253,1,8,0)
Each element in the array is constructed as:
"KRN",8994,3253,1,9,0)
        array(n)  = field label^field value
"KRN",8994,3253,1,10,0)
        where      n           : an incremental number that acts as an index
"KRN",8994,3253,1,11,0)
                   field label : the name of VistA Field Name
"KRN",8994,3253,1,12,0)
                   field value : the parameter value to be stored in VistA
"KRN",8994,3253,1,13,0)
 
"KRN",8994,3253,1,14,0)
The output result has similar array structure as the array(n) with an addition
"KRN",8994,3253,1,15,0)
of the result code and potential exception message
"KRN",8994,3253,1,16,0)
Successful output structure is constructed as:
"KRN",8994,3253,1,17,0)
       output(n)  = field label^field value^1
"KRN",8994,3253,1,18,0)
                    value '1' at the end indicates the field value was stored 
"KRN",8994,3253,1,19,0)
                    successfully
"KRN",8994,3253,1,20,0)
Failed output structure is constructed as:
"KRN",8994,3253,1,21,0)
       output(n)  = field label^field value^99^exception message
"KRN",8994,3253,1,22,0)
                    value '99' at the end indicates either field label doesn't
"KRN",8994,3253,1,23,0)
                    exist in VistA or the field value is invalid.
"KRN",8994,3253,2,0)
^8994.02A^3^3
"KRN",8994,3253,2,1,0)
PARAMNAM^1^30^1^2
"KRN",8994,3253,2,1,1,0)
^8994.021^2^2^3130104^^^^
"KRN",8994,3253,2,1,1,1,0)
When An Administrator of VetLink Kiosk system made any
"KRN",8994,3253,2,1,1,2,0)
configuration changes, the changes were made against this Kiosk Group or Clinic
"KRN",8994,3253,2,2,0)
PARAMETERS^2^^^3
"KRN",8994,3253,2,2,1,0)
^8994.021^7^7^3130104^^^^
"KRN",8994,3253,2,2,1,1,0)
A subscripted array that represents the list of parameter changes to 
"KRN",8994,3253,2,2,1,2,0)
the VetLink's Kiosk Configuration.
"KRN",8994,3253,2,2,1,3,0)
Each element in the subscripted array is constructed as:
"KRN",8994,3253,2,2,1,4,0)
PARAMETERS(n) = field label^field value
"KRN",8994,3253,2,2,1,5,0)
        where   n           : an incremental number that acts as an index
"KRN",8994,3253,2,2,1,6,0)
                field label : the name of VistA Field Name
"KRN",8994,3253,2,2,1,7,0)
                field value : the parameter value to be stored in VistA
"KRN",8994,3253,2,3,0)
PARAMTYP^1^1^1^1
"KRN",8994,3253,2,3,1,0)
^8994.021^1^1^3150213^^^
"KRN",8994,3253,2,3,1,1,0)
This parameter contains either 'K' for KIOSK GROUP or 'C' for CLINIC.
"KRN",8994,3253,2,"B","PARAMETERS",2)

"KRN",8994,3253,2,"B","PARAMNAM",1)

"KRN",8994,3253,2,"B","PARAMTYP",3)

"KRN",8994,3253,2,"PARAMSEQ",1,3)

"KRN",8994,3253,2,"PARAMSEQ",2,1)

"KRN",8994,3253,2,"PARAMSEQ",3,2)

"KRN",8994,3254,-1)
0^4
"KRN",8994,3254,0)
VPS GET MRAR PDO^GET^VPSPDO1^4^R^0^^1
"KRN",8994,3254,1,0)
^8994.01^6^6^3150213^^^^
"KRN",8994,3254,1,1,0)
Software that supports this procedure will build a global array with each 
"KRN",8994,3254,1,2,0)
subscript in the array assigned a line of text representing clinical data 
"KRN",8994,3254,1,3,0)
(allergy and medications) associated with the results of a Medication 
"KRN",8994,3254,1,4,0)
Review Allergy Review with the veteran.  This is referred to as PDO output
"KRN",8994,3254,1,5,0)
and will be presented as a note on the STAFF-FACING interface on 
"KRN",8994,3254,1,6,0)
Vetlink.
"KRN",8994,3254,2,0)
^8994.02A^2^2
"KRN",8994,3254,2,1,0)
VPSNUM^1^30^1^1
"KRN",8994,3254,2,1,1,0)
^8994.021^1^1^3150126^^^^
"KRN",8994,3254,2,1,1,1,0)
Patient ID. This parameter value could be SSN, DFN, ICN, or VIC/CAC based on Patient ID Type.
"KRN",8994,3254,2,2,0)
VPSTYP^1^7^1^2
"KRN",8994,3254,2,2,1,0)
^8994.021^1^1^3150213^^^^
"KRN",8994,3254,2,2,1,1,0)
Patient ID Type. Valid Value is SSN, DFN, ICN, or VIC/CAC
"KRN",8994,3254,2,"B","PTIEN",1)

"KRN",8994,3254,2,"B","VPSNUM",1)

"KRN",8994,3254,2,"B","VPSTYP",2)

"KRN",8994,3254,2,"PARAMSEQ",1,1)

"KRN",8994,3254,2,"PARAMSEQ",2,2)

"KRN",8994,3254,3,0)
^8994.03^3^3^3150213^^^^
"KRN",8994,3254,3,1,0)
A global array with each subscript in the array assigned a line of text
"KRN",8994,3254,3,2,0)
representing clinical data (allergy and medications) associated with the
"KRN",8994,3254,3,3,0)
results of a Medication Review Allergy Review with the veteran. 
"KRN",8994,3255,-1)
0^5
"KRN",8994,3255,0)
VPS UPDATE LAST MRAR TIU IEN^UPDATE^VPSMRARU^1^R^0
"KRN",8994,3255,1,0)
^8994.01^4^4^3150213^^^^
"KRN",8994,3255,1,1,0)
This RPC will update the last Allergy and Modication review (MRAR) for
"KRN",8994,3255,1,2,0)
a patient with TIU Document IEN.
"KRN",8994,3255,1,3,0)
The last MRAR is defined as the last transaction date for a patient in
"KRN",8994,3255,1,4,0)
file 853.5 (VPS MRAR PDO)
"KRN",8994,3255,2,0)
^8994.02A^3^3
"KRN",8994,3255,2,1,0)
VPSNUM^1^10^1^1
"KRN",8994,3255,2,1,1,0)
^8994.021^2^2^3150213^^
"KRN",8994,3255,2,1,1,1,0)
This input parameter is the patient ID of the last MRAR record to be 
"KRN",8994,3255,2,1,1,2,0)
updated. Patient ID could be value of DFN, ICN, SSN, or VIC/CAC.
"KRN",8994,3255,2,2,0)
VPSTIEN^1^10^1^3
"KRN",8994,3255,2,2,1,0)
^8994.021^3^3^3150213^^^^
"KRN",8994,3255,2,2,1,1,0)
This input parameter is the TIU Document IEN which is the value to store 
"KRN",8994,3255,2,2,1,2,0)
in the TIU NOTE IEN field of the last MRAR record for the patient in VPS
"KRN",8994,3255,2,2,1,3,0)
MRAR PDO File (#853.5).
"KRN",8994,3255,2,3,0)
VPSTYP^1^7^1^2
"KRN",8994,3255,2,3,1,0)
^8994.021^2^2^3150213^^
"KRN",8994,3255,2,3,1,1,0)
This input parameter is the Patient Type. Valid Value is DFN, SSN, 
"KRN",8994,3255,2,3,1,2,0)
VIC/CAC, or ICN
"KRN",8994,3255,2,"B","VPSNUM",1)

"KRN",8994,3255,2,"B","VPSTIEN",2)

"KRN",8994,3255,2,"B","VPSTYP",3)

"KRN",8994,3255,2,"PARAMSEQ",1,1)

"KRN",8994,3255,2,"PARAMSEQ",2,3)

"KRN",8994,3255,2,"PARAMSEQ",3,2)

"KRN",8994,3256,-1)
0^6
"KRN",8994,3256,0)
VPS GET LAST MRAR^GET^VPSMRAR9^2^R
"KRN",8994,3256,1,0)
^^2^2^3150129^
"KRN",8994,3256,1,1,0)
Given Patient ID (in ID/Type pair), this RPC return the last Medication 
"KRN",8994,3256,1,2,0)
and Allergy Review data for the patient.
"KRN",8994,3256,2,0)
^8994.02A^2^2
"KRN",8994,3256,2,1,0)
VPSNUM^1^30^1^1
"KRN",8994,3256,2,1,1,0)
^^4^4^3150129^
"KRN",8994,3256,2,1,1,1,0)
This is the Patient ID based on Patient ID Type. The value could be 
"KRN",8994,3256,2,1,1,2,0)
the SSN, ICN or VIC/CAC number.
"KRN",8994,3256,2,1,1,3,0)
 
"KRN",8994,3256,2,1,1,4,0)
ICN, DFN, or VIC/CAC
"KRN",8994,3256,2,2,0)
VPSTYP^1^7^1^2
"KRN",8994,3256,2,2,1,0)
^8994.021^1^1^3150129^^
"KRN",8994,3256,2,2,1,1,0)
This is the Patient ID Type. Valid type is DFN, SSN, ICN, or VIC/CAC.
"KRN",8994,3256,2,"B","VPSNUM",1)

"KRN",8994,3256,2,"B","VPSTYP",2)

"KRN",8994,3256,2,"PARAMSEQ",1,1)

"KRN",8994,3256,2,"PARAMSEQ",2,2)

"KRN",8994,3256,3,0)
^8994.03^2^2^3150129^^
"KRN",8994,3256,3,1,0)
This RPC will return the last Medication and Allergy Review for the 
"KRN",8994,3256,3,2,0)
patient.
"MBREQ")
1
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",522,-1)
1^1
"PKG",522,0)
VPS KIOSK^VPS^RPC components that support VPS Kiosk.
"PKG",522,20,0)
^9.402P^^
"PKG",522,22,0)
^9.49I^1^1
"PKG",522,22,1,0)
1.0
"PKG",522,22,1,"PAH",1,0)
3^3150528^123458951
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
22
"RTN","VPSALL01")
0^3^B16140535
"RTN","VPSALL01",1,0)
VPSALL01 ;DALOI/KML - Retrieve Allergies for Vetlink ;11/20/11 15:30
"RTN","VPSALL01",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Oct 21, 2011;Build 64
"RTN","VPSALL01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSALL01",4,0)
 ;
"RTN","VPSALL01",5,0)
 Q
"RTN","VPSALL01",6,0)
 ; ICR 3449 - Controlled Subscription for read of ADVERSE REACTION ASSESSMENT file (120.86)
"RTN","VPSALL01",7,0)
 ; ICR 5843 - Controlled Subscription for read of PATIENT ALLERGIES file (120.8)
"RTN","VPSALL01",8,0)
 ;
"RTN","VPSALL01",9,0)
GET(VPSRES,VPSDFN) ;
"RTN","VPSALL01",10,0)
 ;RPC = VPS GET ALLERGIES
"RTN","VPSALL01",11,0)
 ; Return allergies for patient VPSDFN
"RTN","VPSALL01",12,0)
 ; 
"RTN","VPSALL01",13,0)
 ; INPUT  - VPSRES - 1st parameter required by RPC Broker; represents output
"RTN","VPSALL01",14,0)
 ;          VPSDFN - IEN of PATIENT file
"RTN","VPSALL01",15,0)
 ;
"RTN","VPSALL01",16,0)
 ; OUTPUT - VPSRES - returns results of procedure which is the data taken from the entry in file 120.8
"RTN","VPSALL01",17,0)
 ;
"RTN","VPSALL01",18,0)
 K VPSRES,ALST
"RTN","VPSALL01",19,0)
 I '+$G(VPSDFN) S VPSRES(0)="99^PATIENT DFN not sent" Q
"RTN","VPSALL01",20,0)
 I '$D(^DPT(VPSDFN)) S VPSRES(0)="99^PATIENT not in VistA database" Q
"RTN","VPSALL01",21,0)
 N VPSRA S VPSRA=$$GET1^DIQ(120.86,VPSDFN,1,"I")
"RTN","VPSALL01",22,0)
 I 'VPSRA S VPSRES(0)="0^NO ALLERGIES OR NO ASSESSMENT" Q
"RTN","VPSALL01",23,0)
 N VDA,VIEN,VIENS,DDFLDS,VCTR
"RTN","VPSALL01",24,0)
 S (VDA,VIEN)=0
"RTN","VPSALL01",25,0)
 S VCTR=1
"RTN","VPSALL01",26,0)
 D TABLE(.DDFLDS)
"RTN","VPSALL01",27,0)
 F  S VDA=$O(^GMR(120.8,"B",VPSDFN,VDA)) Q:'VDA  D
"RTN","VPSALL01",28,0)
 . D GETS^DIQ(120.8,VDA_",",".01;.02;1;4;5;22;23;24","IE","ALST")
"RTN","VPSALL01",29,0)
 . S VIENS=VDA_","
"RTN","VPSALL01",30,0)
 . D BLDRES(120.8,VIENS,.ALST,.DDFLDS,.VCTR,.VPSRES)
"RTN","VPSALL01",31,0)
 . S VIEN=0
"RTN","VPSALL01",32,0)
 . F  S VIEN=$O(^GMR(120.8,VDA,10,VIEN)) Q:'VIEN  D
"RTN","VPSALL01",33,0)
 . . S VIENS=VIEN_","_VDA_","
"RTN","VPSALL01",34,0)
 . . D GETS^DIQ(120.81,VIENS,".01;1","IE","ALST")
"RTN","VPSALL01",35,0)
 . . D BLDRES(120.81,VIENS,.ALST,.DDFLDS,.VCTR,.VPSRES)
"RTN","VPSALL01",36,0)
 . S VIEN=0
"RTN","VPSALL01",37,0)
 . F  S VIEN=$O(^GMR(120.8,VDA,26,VIEN)) Q:'VIEN  D
"RTN","VPSALL01",38,0)
 . . S VIENS=VIEN_","_VDA_","
"RTN","VPSALL01",39,0)
 . . D GETS^DIQ(120.826,VIENS,".01;1;1.5;2","IE","ALST")
"RTN","VPSALL01",40,0)
 . . D BLDRES(120.826,VIENS,.ALST,.DDFLDS,.VCTR,.VPSRES)
"RTN","VPSALL01",41,0)
 I '$D(VPSRES) S VPSRES(0)="0^NO ALLERGIES FOR THIS PATIENT" Q
"RTN","VPSALL01",42,0)
 Q
"RTN","VPSALL01",43,0)
 ;
"RTN","VPSALL01",44,0)
BLDRES(VFL,IENS,ALST,DDFLDS,CTR,RESULTS) ;
"RTN","VPSALL01",45,0)
 ; build allergy results array that gets returned to client
"RTN","VPSALL01",46,0)
 ; the results consist of allergy data taken from the entry at 120.8 and associated multiples (sub-entries)
"RTN","VPSALL01",47,0)
 ; 
"RTN","VPSALL01",48,0)
 ; INPUT
"RTN","VPSALL01",49,0)
 ;   VFL     - file number
"RTN","VPSALL01",50,0)
 ;   IENS    - internal entry numbers for top entries and any sub-entries
"RTN","VPSALL01",51,0)
 ;   ALST    - contains the data taken from the fields existing at the entry and sub-entries of 120.8 (built from GETS^DIQ)
"RTN","VPSALL01",52,0)
 ;   DDFLDS  - array of fields defined in 120.8
"RTN","VPSALL01",53,0)
 ;   CTR     - Sequential numeric value that is assigned as the subscript to the local results array, passed in by reference
"RTN","VPSALL01",54,0)
 ;   RESULTS - passed in by reference
"RTN","VPSALL01",55,0)
 ;   
"RTN","VPSALL01",56,0)
 ; OUTPUT
"RTN","VPSALL01",57,0)
 ;   RESULTS - array of patient allergies taken from specified fields in the patient entry in 120.8
"RTN","VPSALL01",58,0)
 ;   Each subscript in the array is assigned a composite, delimited string as described in the next comment:
"RTN","VPSALL01",59,0)
 ;   RESULTS(ctr)="file name^iens (top file, subfile)^field number^field name^data value"
"RTN","VPSALL01",60,0)
 ;
"RTN","VPSALL01",61,0)
 N I,Y,VFLD,VSTR,VINEX,VFNAME,N,TRMIEN
"RTN","VPSALL01",62,0)
 S VFLD=0
"RTN","VPSALL01",63,0)
 F  S VFLD=$O(ALST(VFL,IENS,VFLD)) Q:'VFLD  D
"RTN","VPSALL01",64,0)
 . S TRMIEN=$S($P(IENS,",",2)']"":$P(IENS,","),$P(IENS,",",3)']"":$P(IENS,",",1,2),1:IENS)
"RTN","VPSALL01",65,0)
 . S VSTR=DDFLDS(VFL,VFLD)
"RTN","VPSALL01",66,0)
 . S VINEX=$P(DDFLDS(VFL,VFLD),U,2)  ; internal or external value
"RTN","VPSALL01",67,0)
 . S VFNAME=$P(DDFLDS(VFL,VFLD),U)  ; field name
"RTN","VPSALL01",68,0)
 . I VINEX="IE" D  Q  ; for fields that need to return both internal and external values
"RTN","VPSALL01",69,0)
 . . F I="I","E" Q:ALST(VFL,IENS,VFLD,I)']""  S Y=$S(I="I":" IEN",1:" NAME"),RESULTS(CTR)=VFL_U_TRMIEN_U_VFLD_U_VFNAME_Y_U_ALST(VFL,IENS,VFLD,I),CTR=CTR+1
"RTN","VPSALL01",70,0)
 . I VINEX="WP" D  Q  ; word processing field (comments)
"RTN","VPSALL01",71,0)
  . . S N=0 F  S N=$O(ALST(VFL,IENS,VFLD,N)) Q:'N  Q:ALST(VFL,IENS,VFLD,N)']""  S RESULTS(CTR)=VFL_U_TRMIEN_U_VFLD_U_VFNAME_U_ALST(VFL,IENS,VFLD,N),CTR=CTR+1
"RTN","VPSALL01",72,0)
 . Q:ALST(VFL,IENS,VFLD,VINEX)']""
"RTN","VPSALL01",73,0)
 . S RESULTS(CTR)=VFL_U_TRMIEN_U_VFLD_U_VFNAME_U_ALST(VFL,IENS,VFLD,VINEX)
"RTN","VPSALL01",74,0)
 . S CTR=CTR+1
"RTN","VPSALL01",75,0)
 Q
"RTN","VPSALL01",76,0)
 ;
"RTN","VPSALL01",77,0)
TABLE(DEFS) ;the DD field array built at this procedure will be used when constructing the allergy results array
"RTN","VPSALL01",78,0)
 ;input/output - DEFS passed in by reference
"RTN","VPSALL01",79,0)
 ; example of what gets built:
"RTN","VPSALL01",80,0)
 ; DEFS(120.8,.01)="PATIENT^I"
"RTN","VPSALL01",81,0)
 ; DEFS(120.8,.02)="REACTANT^E"
"RTN","VPSALL01",82,0)
 ; DEFS(120.8,1)="GMR ALLERGY^I"
"RTN","VPSALL01",83,0)
 N LN,LINE,STRING
"RTN","VPSALL01",84,0)
 F LN=3:1 S LINE=$T(AFLDS+LN),STRING=$P(LINE,";;",2) Q:STRING=""  S DEFS($P(STRING,U,1),$P(STRING,U,2))=$P(STRING,U,3)_U_$P(STRING,U,4)
"RTN","VPSALL01",85,0)
 Q
"RTN","VPSALL01",86,0)
AFLDS ; valid fields defined in the PATIENT ALLERGIES file (120.8)
"RTN","VPSALL01",87,0)
 ; negotiated fields to be given to kiosk for MRAR event or for the purposes of tiu note during PDO invocable period 
"RTN","VPSALL01",88,0)
 ;;FILE NUMBER^FIELD NUMBER^FIELD NAME^INTERNAL/EXTERNAL VALUE
"RTN","VPSALL01",89,0)
 ;;120.8^.01^PATIENT^I^
"RTN","VPSALL01",90,0)
 ;;120.8^.02^REACTANT^E
"RTN","VPSALL01",91,0)
 ;;120.8^1^GMR ALLERGY^I
"RTN","VPSALL01",92,0)
 ;;120.8^4^ORIGINATION DATE/TIME^I
"RTN","VPSALL01",93,0)
 ;;120.8^5^ORIGINATOR^E
"RTN","VPSALL01",94,0)
 ;;120.8^22^ENTERED IN ERROR^E
"RTN","VPSALL01",95,0)
 ;;120.8^23^DATE/TIME ENTERED IN ERROR^I
"RTN","VPSALL01",96,0)
 ;;120.8^24^USER ENTERING IN ERROR^E
"RTN","VPSALL01",97,0)
 ;;120.81^.01^REACTION^IE
"RTN","VPSALL01",98,0)
 ;;120.81^1^OTHER REACTION^E
"RTN","VPSALL01",99,0)
 ;;120.826^.01^DATE/TIME COMMENT ENTERED^I
"RTN","VPSALL01",100,0)
 ;;120.826^1^USER ENTERING^E
"RTN","VPSALL01",101,0)
 ;;120.826^1.5^COMMENT TYPE^E
"RTN","VPSALL01",102,0)
 ;;120.826^2^COMMENTS^WP
"RTN","VPSDDCU")
0^23^B710416
"RTN","VPSDDCU",1,0)
VPSDDCU ;WOIFO/KC - DD clean up;1/15/15 11:26
"RTN","VPSDDCU",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSDDCU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSDDCU",4,0)
 ;
"RTN","VPSDDCU",5,0)
 QUIT
"RTN","VPSDDCU",6,0)
 ;
"RTN","VPSDDCU",7,0)
 ; Remove fields that are obsolute
"RTN","VPSDDCU",8,0)
REMOVE ;
"RTN","VPSDDCU",9,0)
 S DIK="^DD(853.54,",DA=30,DA(1)=853.54
"RTN","VPSDDCU",10,0)
 D ^DIK
"RTN","VPSDDCU",11,0)
 S DIK="^DD(853.54,",DA=31,DA(1)=853.54
"RTN","VPSDDCU",12,0)
 D ^DIK
"RTN","VPSDDCU",13,0)
 S DIK="^DD(853.54,",DA=32,DA(1)=853.54
"RTN","VPSDDCU",14,0)
 D ^DIK
"RTN","VPSDDCU",15,0)
 S DIK="^DD(853.52,",DA=12,DA(1)=853.52
"RTN","VPSDDCU",16,0)
 D ^DIK
"RTN","VPSDDCU",17,0)
 S DIK="^DD(853.52,",DA=13,DA(1)=853.52
"RTN","VPSDDCU",18,0)
 D ^DIK
"RTN","VPSDDCU",19,0)
 S DIK="^DD(853.52,",DA=14,DA(1)=853.52
"RTN","VPSDDCU",20,0)
 D ^DIK
"RTN","VPSDDCU",21,0)
 Q
"RTN","VPSMR51")
0^20^B3914403
"RTN","VPSMR51",1,0)
VPSMR51 ;WOIFO/BT - Get the last MRAR data for a patient (Transaction Level) ;01/29/15 15:30
"RTN","VPSMR51",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 29, 2015;Build 64
"RTN","VPSMR51",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMR51",4,0)
 ;
"RTN","VPSMR51",5,0)
 ; 
"RTN","VPSMR51",6,0)
TRANS(VPSMRAR,DFN,LASTMRAR) ; -- retrieve conducted with level fields and store them in VPSMRAR
"RTN","VPSMR51",7,0)
 ; INPUT
"RTN","VPSMR51",8,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR51",9,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR51",10,0)
 ; OUTPUT
"RTN","VPSMR51",11,0)
 ;   VPSMRAR: local array contains all field names/values for the last mrar
"RTN","VPSMR51",12,0)
 ;
"RTN","VPSMR51",13,0)
 N FIL S FIL=853.51
"RTN","VPSMR51",14,0)
 N TRANS D GETS^DIQ(FIL,LASTMRAR_","_DFN_",","*","IE","TRANS")
"RTN","VPSMR51",15,0)
 N ATTR,INVAL,EXVAL
"RTN","VPSMR51",16,0)
 N SUBS S SUBS=""
"RTN","VPSMR51",17,0)
 N FLD S FLD=""
"RTN","VPSMR51",18,0)
 ;
"RTN","VPSMR51",19,0)
 F  S FLD=$O(TRANS(FIL,LASTMRAR_","_DFN_",",FLD)) Q:'FLD  D
"RTN","VPSMR51",20,0)
 . K ATTR D FIELD^DID(FIL,FLD,"","LABEL;TYPE","ATTR")
"RTN","VPSMR51",21,0)
 . S INVAL=TRANS(FIL,LASTMRAR_","_DFN_",",FLD,"I")
"RTN","VPSMR51",22,0)
 . S EXVAL=TRANS(FIL,LASTMRAR_","_DFN_",",FLD,"E")
"RTN","VPSMR51",23,0)
 . I ATTR("TYPE")="WORD-PROCESSING" S EXVAL=$$WP^VPSMRAR9(.TRANS,FIL,SUBS,FLD),INVAL=""
"RTN","VPSMR51",24,0)
 . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),SUBS,INVAL,EXVAL)
"RTN","VPSMR51",25,0)
 ;
"RTN","VPSMR51",26,0)
 QUIT
"RTN","VPSMR51",27,0)
 ;
"RTN","VPSMR51",28,0)
CNDWTH(VPSMRAR,DFN,LASTMRAR) ; -- retrieve conducted with level fields and store them in VPSMRAR
"RTN","VPSMR51",29,0)
 ; INPUT
"RTN","VPSMR51",30,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR51",31,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR51",32,0)
 ; OUTPUT
"RTN","VPSMR51",33,0)
 ;   VPSMRAR: local array contains all field names/values for the last mrar
"RTN","VPSMR51",34,0)
 ;
"RTN","VPSMR51",35,0)
 N FIL S FIL=853.5121
"RTN","VPSMR51",36,0)
 N REC,INVAL,EXVAL
"RTN","VPSMR51",37,0)
 N CNDWTH S CNDWTH=0
"RTN","VPSMR51",38,0)
 N ATTR D FIELD^DID(FIL,".01","","LABEL;TYPE","ATTR")
"RTN","VPSMR51",39,0)
 N FLD S FLD=".01"
"RTN","VPSMR51",40,0)
 ;
"RTN","VPSMR51",41,0)
 F  S CNDWTH=$O(^VPS(853.5,DFN,"MRAR",LASTMRAR,"MRARWITH",CNDWTH)) Q:'CNDWTH  D
"RTN","VPSMR51",42,0)
 . K REC D GETS^DIQ(FIL,CNDWTH_","_LASTMRAR_","_DFN_",","*","IE","REC")
"RTN","VPSMR51",43,0)
 . S INVAL=REC(FIL,CNDWTH_","_LASTMRAR_","_DFN_",",FLD,"I")
"RTN","VPSMR51",44,0)
 . S EXVAL=REC(FIL,CNDWTH_","_LASTMRAR_","_DFN_",",FLD,"E")
"RTN","VPSMR51",45,0)
 . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),","_INVAL,INVAL,EXVAL)
"RTN","VPSMR51",46,0)
 ;
"RTN","VPSMR51",47,0)
 QUIT
"RTN","VPSMR52")
0^21^B15651992
"RTN","VPSMR52",1,0)
VPSMR52 ;WOIFO/BT - Get the last MRAR data for a patient (Allergy Level) ;01/29/15 15:30
"RTN","VPSMR52",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 29, 2015;Build 64
"RTN","VPSMR52",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMR52",4,0)
 ;
"RTN","VPSMR52",5,0)
 ; 
"RTN","VPSMR52",6,0)
ALLERGY(VPSMRAR,DFN,LASTMRAR) ; -- retrieve Allergy level fields and store them in VPSMRAR
"RTN","VPSMR52",7,0)
 ; INPUT
"RTN","VPSMR52",8,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR52",9,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR52",10,0)
 ; OUTPUT
"RTN","VPSMR52",11,0)
 ;   VPSMRAR: local array contains all field names/values for the last mrar
"RTN","VPSMR52",12,0)
 ;
"RTN","VPSMR52",13,0)
 N REC,INVAL,EXVAL,ALRNO,FLD,SUBS
"RTN","VPSMR52",14,0)
 N FIL S FIL=853.52
"RTN","VPSMR52",15,0)
 N ALRIEN S ALRIEN=0
"RTN","VPSMR52",16,0)
 ;
"RTN","VPSMR52",17,0)
 F  S ALRIEN=$O(^VPS(853.5,DFN,"MRAR",LASTMRAR,"ALLERGY",ALRIEN)) Q:'ALRIEN  D
"RTN","VPSMR52",18,0)
 . S SUBS=ALRIEN_","_LASTMRAR_","_DFN_","
"RTN","VPSMR52",19,0)
 . K REC D GETS^DIQ(FIL,SUBS,"*","IE","REC")
"RTN","VPSMR52",20,0)
 . S ALRNO=REC(FIL,SUBS,.01,"I")
"RTN","VPSMR52",21,0)
 . S FLD=""
"RTN","VPSMR52",22,0)
 . F  S FLD=$O(REC(FIL,SUBS,FLD)) Q:'FLD  D
"RTN","VPSMR52",23,0)
 . . K ATTR D FIELD^DID(FIL,FLD,"","LABEL;TYPE","ATTR")
"RTN","VPSMR52",24,0)
 . . S INVAL=REC(FIL,SUBS,FLD,"I")
"RTN","VPSMR52",25,0)
 . . S EXVAL=REC(FIL,SUBS,FLD,"E")
"RTN","VPSMR52",26,0)
 . . I FIL=853.52,FLD=.02 S EXVAL=$$GET1^DIQ(120.8,INVAL_",",.02,"E")
"RTN","VPSMR52",27,0)
 . . I ATTR("TYPE")="WORD-PROCESSING" S EXVAL=$$WP^VPSMRAR9(.REC,FIL,SUBS,FLD),INVAL=""
"RTN","VPSMR52",28,0)
 . . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),","_ALRNO,INVAL,EXVAL)
"RTN","VPSMR52",29,0)
 . ;
"RTN","VPSMR52",30,0)
 . D ALLIND(.VPSMRAR,VPSDFN,LASTMRAR,ALRIEN,ALRNO)
"RTN","VPSMR52",31,0)
 . D ALREACT(.VPSMRAR,VPSDFN,LASTMRAR,ALRIEN,ALRNO)
"RTN","VPSMR52",32,0)
 ;
"RTN","VPSMR52",33,0)
 QUIT
"RTN","VPSMR52",34,0)
 ;
"RTN","VPSMR52",35,0)
ALLIND(VPSMRAR,DFN,LASTMRAR,ALRIEN,ALRNO) ; -- retrieve Allergy Indicator level fields and store them in VPSMRAR
"RTN","VPSMR52",36,0)
 ; INPUT
"RTN","VPSMR52",37,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR52",38,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR52",39,0)
 ;   ALRIEN   : Allergy IEN
"RTN","VPSMR52",40,0)
 ;   ALRNO    : Allergy Entry #
"RTN","VPSMR52",41,0)
 ; OUTPUT
"RTN","VPSMR52",42,0)
 ;   VPSMRAR  : local array contains all field names/values for the last mrar
"RTN","VPSMR52",43,0)
 ;
"RTN","VPSMR52",44,0)
 N REC,INVAL,EXVAL,ATTR,SUBS
"RTN","VPSMR52",45,0)
 N FIL S FIL("ACHG")=853.525,FIL("ACNFR")=853.526,FIL("ADISCR")=853.527
"RTN","VPSMR52",46,0)
 N FLD S FLD=".01"
"RTN","VPSMR52",47,0)
 ;
"RTN","VPSMR52",48,0)
 F IND="ACHG","ACNFR","ADISCR" D
"RTN","VPSMR52",49,0)
 . K ATTR D FIELD^DID(FIL(IND),FLD,"","LABEL;TYPE","ATTR")
"RTN","VPSMR52",50,0)
 . N INDIEN S INDIEN=0
"RTN","VPSMR52",51,0)
 . F  S INDIEN=$O(^VPS(853.5,DFN,"MRAR",LASTMRAR,"ALLERGY",ALRIEN,IND,INDIEN)) Q:'INDIEN  D
"RTN","VPSMR52",52,0)
 . . S SUBS=INDIEN_","_ALRIEN_","_LASTMRAR_","_DFN_","
"RTN","VPSMR52",53,0)
 . . K REC D GETS^DIQ(FIL(IND),SUBS,"*","IE","REC")
"RTN","VPSMR52",54,0)
 . . S INVAL=REC(FIL(IND),SUBS,FLD,"I")
"RTN","VPSMR52",55,0)
 . . S EXVAL=REC(FIL(IND),SUBS,FLD,"E")
"RTN","VPSMR52",56,0)
 . . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),","_ALRNO_","_INVAL,INVAL,EXVAL)
"RTN","VPSMR52",57,0)
 ;
"RTN","VPSMR52",58,0)
 QUIT
"RTN","VPSMR52",59,0)
 ;
"RTN","VPSMR52",60,0)
ALREACT(VPSMRAR,VPSDFN,LASTMRAR,ALRIEN,ALRNO) ; -- retrieve Allergy Reaction level fields and store them in VPSMRAR
"RTN","VPSMR52",61,0)
 ; INPUT
"RTN","VPSMR52",62,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR52",63,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR52",64,0)
 ;   ALRIEN   : Allergy IEN
"RTN","VPSMR52",65,0)
 ; OUTPUT
"RTN","VPSMR52",66,0)
 ;   VPSMRAR  : local array contains all field names/values for the last mrar
"RTN","VPSMR52",67,0)
 ;
"RTN","VPSMR52",68,0)
 N REC,INVAL,EXVAL,ATTR,FLD,SUBS,REACTNO
"RTN","VPSMR52",69,0)
 N FIL S FIL=853.57
"RTN","VPSMR52",70,0)
 N REACTIEN S REACTIEN=0
"RTN","VPSMR52",71,0)
 ;
"RTN","VPSMR52",72,0)
 F  S REACTIEN=$O(^VPS(853.5,DFN,"MRAR",LASTMRAR,"ALLERGY",ALRIEN,"REACTIONS",REACTIEN)) Q:'REACTIEN  D
"RTN","VPSMR52",73,0)
 . S SUBS=REACTIEN_","_ALRIEN_","_LASTMRAR_","_DFN_","
"RTN","VPSMR52",74,0)
 . K REC D GETS^DIQ(FIL,SUBS,"*","IE","REC")
"RTN","VPSMR52",75,0)
 . S REACTNO=REC(FIL,SUBS,".01","I")
"RTN","VPSMR52",76,0)
 . S FLD=0
"RTN","VPSMR52",77,0)
 . F  S FLD=$O(REC(FIL,SUBS,FLD)) Q:'FLD  D
"RTN","VPSMR52",78,0)
 . . K ATTR D FIELD^DID(FIL,FLD,"","LABEL;TYPE","ATTR")
"RTN","VPSMR52",79,0)
 . . S INVAL=REC(FIL,SUBS,FLD,"I")
"RTN","VPSMR52",80,0)
 . . S EXVAL=REC(FIL,SUBS,FLD,"E")
"RTN","VPSMR52",81,0)
 . . I ATTR("TYPE")="WORD-PROCESSING" S EXVAL=$$WP^VPSMRAR9(.REC,FIL,SUBS,FLD),INVAL=""
"RTN","VPSMR52",82,0)
 . . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),","_ALRNO_","_REACTNO,INVAL,EXVAL)
"RTN","VPSMR52",83,0)
 ;
"RTN","VPSMR52",84,0)
 QUIT
"RTN","VPSMR52",85,0)
 ;
"RTN","VPSMR52",86,0)
ADDALLER(VPSMRAR,DFN,LASTMRAR) ; -- retrieve Additional Allergy level fields and store them in VPSMRAR
"RTN","VPSMR52",87,0)
 ; INPUT
"RTN","VPSMR52",88,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR52",89,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR52",90,0)
 ; OUTPUT
"RTN","VPSMR52",91,0)
 ;   VPSMRAR: local array contains all field names/values for the last mrar
"RTN","VPSMR52",92,0)
 ;
"RTN","VPSMR52",93,0)
 N REC,INVAL,EXVAL,ALRNO,FLD,SUBS
"RTN","VPSMR52",94,0)
 N FIL S FIL=853.53
"RTN","VPSMR52",95,0)
 N ALRIEN S ALRIEN=0
"RTN","VPSMR52",96,0)
 ;
"RTN","VPSMR52",97,0)
 F  S ALRIEN=$O(^VPS(853.5,DFN,"MRAR",LASTMRAR,"ALLERGYADD",ALRIEN)) Q:'ALRIEN  D
"RTN","VPSMR52",98,0)
 . S SUBS=ALRIEN_","_LASTMRAR_","_DFN_","
"RTN","VPSMR52",99,0)
 . K REC D GETS^DIQ(FIL,SUBS,"*","IE","REC")
"RTN","VPSMR52",100,0)
 . S ALRNO=REC(FIL,SUBS,.01,"I")
"RTN","VPSMR52",101,0)
 . S FLD=""
"RTN","VPSMR52",102,0)
 . F  S FLD=$O(REC(FIL,SUBS,FLD)) Q:'FLD  D
"RTN","VPSMR52",103,0)
 . . K ATTR D FIELD^DID(FIL,FLD,"","LABEL;TYPE","ATTR")
"RTN","VPSMR52",104,0)
 . . S INVAL=REC(FIL,SUBS,FLD,"I")
"RTN","VPSMR52",105,0)
 . . S EXVAL=REC(FIL,SUBS,FLD,"E")
"RTN","VPSMR52",106,0)
 . . I ATTR("TYPE")="WORD-PROCESSING" S EXVAL=$$WP^VPSMRAR9(.REC,FIL,SUBS,FLD),INVAL=""
"RTN","VPSMR52",107,0)
 . . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),","_ALRNO,INVAL,EXVAL)
"RTN","VPSMR52",108,0)
 ;
"RTN","VPSMR52",109,0)
 QUIT
"RTN","VPSMR54")
0^22^B9123814
"RTN","VPSMR54",1,0)
VPSMR54 ;WOIFO/BT - Get the last MRAR data for a patient (Medication Level) ;01/29/15 15:30
"RTN","VPSMR54",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 29, 2015;Build 64
"RTN","VPSMR54",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMR54",4,0)
 ;
"RTN","VPSMR54",5,0)
 ; 
"RTN","VPSMR54",6,0)
MEDS(VPSMRAR,DFN,LASTMRAR) ; -- retrieve Medication level fields and store them in VPSMRAR
"RTN","VPSMR54",7,0)
 ; INPUT
"RTN","VPSMR54",8,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR54",9,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR54",10,0)
 ; OUTPUT
"RTN","VPSMR54",11,0)
 ;   VPSMRAR: local array contains all field names/values for the last mrar
"RTN","VPSMR54",12,0)
 ;
"RTN","VPSMR54",13,0)
 N REC,INVAL,EXVAL,MEDNO,FLD,SUBS
"RTN","VPSMR54",14,0)
 N FIL S FIL=853.54
"RTN","VPSMR54",15,0)
 N MEDIEN S MEDIEN=0
"RTN","VPSMR54",16,0)
 ;
"RTN","VPSMR54",17,0)
 F  S MEDIEN=$O(^VPS(853.5,DFN,"MRAR",LASTMRAR,"MEDS",MEDIEN)) Q:'MEDIEN  D
"RTN","VPSMR54",18,0)
 . S SUBS=MEDIEN_","_LASTMRAR_","_DFN_","
"RTN","VPSMR54",19,0)
 . K REC D GETS^DIQ(FIL,SUBS,"*","IE","REC")
"RTN","VPSMR54",20,0)
 . S MEDNO=REC(FIL,SUBS,.01,"I")
"RTN","VPSMR54",21,0)
 . S FLD=""
"RTN","VPSMR54",22,0)
 . F  S FLD=$O(REC(FIL,SUBS,FLD)) Q:'FLD  D
"RTN","VPSMR54",23,0)
 . . K ATTR D FIELD^DID(FIL,FLD,"","LABEL;TYPE","ATTR")
"RTN","VPSMR54",24,0)
 . . S INVAL=REC(FIL,SUBS,FLD,"I")
"RTN","VPSMR54",25,0)
 . . S EXVAL=REC(FIL,SUBS,FLD,"E")
"RTN","VPSMR54",26,0)
 . . I ATTR("TYPE")="WORD-PROCESSING" S EXVAL=$$WP^VPSMRAR9(.REC,FIL,SUBS,FLD),INVAL=""
"RTN","VPSMR54",27,0)
 . . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),","_MEDNO,INVAL,EXVAL)
"RTN","VPSMR54",28,0)
 . ;
"RTN","VPSMR54",29,0)
 . D MEDIND(.VPSMRAR,DFN,LASTMRAR,MEDIEN,MEDNO)
"RTN","VPSMR54",30,0)
 ;
"RTN","VPSMR54",31,0)
 QUIT
"RTN","VPSMR54",32,0)
 ;
"RTN","VPSMR54",33,0)
MEDIND(VPSMRAR,DFN,LASTMRAR,MEDIEN,MEDNO) ; -- retrieve Medication Indicator level fields and store them in VPSMRAR
"RTN","VPSMR54",34,0)
 ; INPUT
"RTN","VPSMR54",35,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR54",36,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR54",37,0)
 ;   MEDIEN   : Medication IEN
"RTN","VPSMR54",38,0)
 ;   MEDNO    : Medication Entry #
"RTN","VPSMR54",39,0)
 ; OUTPUT
"RTN","VPSMR54",40,0)
 ;   VPSMRAR  : local array contains all field names/values for the last mrar
"RTN","VPSMR54",41,0)
 ;
"RTN","VPSMR54",42,0)
 N REC,INVAL,EXVAL,ATTR,SUBS
"RTN","VPSMR54",43,0)
 N FIL S FIL("MCHG")=853.5454,FIL("MCNFR")=853.5455,FIL("MDISCR")=853.5452
"RTN","VPSMR54",44,0)
 N FLD S FLD=".01"
"RTN","VPSMR54",45,0)
 ;
"RTN","VPSMR54",46,0)
 F IND="MCHG","MCNFR","MDISCR" D
"RTN","VPSMR54",47,0)
 . K ATTR D FIELD^DID(FIL(IND),FLD,"","LABEL;TYPE","ATTR")
"RTN","VPSMR54",48,0)
 . N INDIEN S INDIEN=0
"RTN","VPSMR54",49,0)
 . F  S INDIEN=$O(^VPS(853.5,DFN,"MRAR",LASTMRAR,"MEDS",MEDIEN,IND,INDIEN)) Q:'INDIEN  D
"RTN","VPSMR54",50,0)
 . . S SUBS=INDIEN_","_MEDIEN_","_LASTMRAR_","_DFN_","
"RTN","VPSMR54",51,0)
 . . K REC D GETS^DIQ(FIL(IND),SUBS,"*","IE","REC")
"RTN","VPSMR54",52,0)
 . . S INVAL=REC(FIL(IND),SUBS,FLD,"I")
"RTN","VPSMR54",53,0)
 . . S EXVAL=REC(FIL(IND),SUBS,FLD,"E")
"RTN","VPSMR54",54,0)
 . . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),","_MEDNO_","_INVAL,INVAL,EXVAL)
"RTN","VPSMR54",55,0)
 ;
"RTN","VPSMR54",56,0)
 QUIT
"RTN","VPSMR54",57,0)
 ;
"RTN","VPSMR54",58,0)
ADDMEDS(VPSMRAR,DFN,LASTMRAR) ; -- retrieve Additional Medication level fields and store them in VPSMRAR
"RTN","VPSMR54",59,0)
 ; INPUT
"RTN","VPSMR54",60,0)
 ;   DFN      : Patient IEN
"RTN","VPSMR54",61,0)
 ;   LASTMRAR : The last MRAR Transaction IEN for the patient
"RTN","VPSMR54",62,0)
 ; OUTPUT
"RTN","VPSMR54",63,0)
 ;   VPSMRAR: local array contains all field names/values for the last mrar
"RTN","VPSMR54",64,0)
 ;
"RTN","VPSMR54",65,0)
 N REC,INVAL,EXVAL,MEDNO,FLD,SUBS
"RTN","VPSMR54",66,0)
 N FIL S FIL=853.55
"RTN","VPSMR54",67,0)
 N MEDIEN S MEDIEN=0
"RTN","VPSMR54",68,0)
 ;
"RTN","VPSMR54",69,0)
 F  S MEDIEN=$O(^VPS(853.5,DFN,"MRAR",LASTMRAR,"MEDSADD",MEDIEN)) Q:'MEDIEN  D
"RTN","VPSMR54",70,0)
 . S SUBS=MEDIEN_","_LASTMRAR_","_DFN_","
"RTN","VPSMR54",71,0)
 . K REC D GETS^DIQ(FIL,SUBS,"*","IE","REC")
"RTN","VPSMR54",72,0)
 . S MEDNO=REC(FIL,SUBS,.01,"I")
"RTN","VPSMR54",73,0)
 . S FLD=""
"RTN","VPSMR54",74,0)
 . F  S FLD=$O(REC(FIL,SUBS,FLD)) Q:'FLD  D
"RTN","VPSMR54",75,0)
 . . K ATTR D FIELD^DID(FIL,FLD,"","LABEL;TYPE","ATTR")
"RTN","VPSMR54",76,0)
 . . S INVAL=REC(FIL,SUBS,FLD,"I")
"RTN","VPSMR54",77,0)
 . . S EXVAL=REC(FIL,SUBS,FLD,"E")
"RTN","VPSMR54",78,0)
 . . I ATTR("TYPE")="WORD-PROCESSING" S EXVAL=$$WP^VPSMRAR9(.REC,FIL,SUBS,FLD),INVAL=""
"RTN","VPSMR54",79,0)
 . . D ADD^VPSMRAR9(.VPSMRAR,ATTR("LABEL"),","_MEDNO,INVAL,EXVAL)
"RTN","VPSMR54",80,0)
 ;
"RTN","VPSMR54",81,0)
 QUIT
"RTN","VPSMRAR0")
0^14^B103791352
"RTN","VPSMRAR0",1,0)
VPSMRAR0  ;DALOI/KML,WOIFO/BT - Update of VPS MRAR PDO file ;1/15/15 15:30
"RTN","VPSMRAR0",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSMRAR0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRAR0",4,0)
 ;
"RTN","VPSMRAR0",5,0)
 Q
"RTN","VPSMRAR0",6,0)
 ;
"RTN","VPSMRAR0",7,0)
TABLE(ARRAY) ;build array of valid fields defined to VPS MRAR PDO (#853.5)
"RTN","VPSMRAR0",8,0)
 ;input/output - ARRAY passed in by reference
"RTN","VPSMRAR0",9,0)
 ; example of Array subset
"RTN","VPSMRAR0",10,0)
 ; ARRAY("DEVICE ID")="853.51^.02"
"RTN","VPSMRAR0",11,0)
 ; ARRAY("MODULE FUNCTION STATUS")="853.51^.07"
"RTN","VPSMRAR0",12,0)
 N LN,LINE,STRING
"RTN","VPSMRAR0",13,0)
 K ARRAY
"RTN","VPSMRAR0",14,0)
 F LN=2:1 S LINE=$T(MRARFLDS+LN),STRING=$P(LINE,";;",2) Q:STRING=""  S ARRAY($P(STRING,U,3))=$P(STRING,U,1,2)_U_$P(STRING,U,4)_U_$P(STRING,U,5)
"RTN","VPSMRAR0",15,0)
 Q
"RTN","VPSMRAR0",16,0)
 ;
"RTN","VPSMRAR0",17,0)
ERROR(FDAERR,STRING,MSG) ;
"RTN","VPSMRAR0",18,0)
 ; INPUT
"RTN","VPSMRAR0",19,0)
 ;   FDAERR : error array that was created when attempting to file the changes
"RTN","VPSMRAR0",20,0)
 ;   STRING : Field Name^IENS^Field Value
"RTN","VPSMRAR0",21,0)
 ;            IENS is composite string assigned to a subscript in the local array passed in by Vecna for the specific field
"RTN","VPSMRAR0",22,0)
 ;   MSG    : message to be appended to the returned result
"RTN","VPSMRAR0",23,0)
 ;
"RTN","VPSMRAR0",24,0)
 ; OUTPUT
"RTN","VPSMRAR0",25,0)
 ;   No Exception   : Field Name^IENS^Field Value^1
"RTN","VPSMRAR0",26,0)
 ;   With Exception : Field Name^IENS^Field Value^99^error
"RTN","VPSMRAR0",27,0)
 ;
"RTN","VPSMRAR0",28,0)
 N RESULT
"RTN","VPSMRAR0",29,0)
 N ERRNUM S ERRNUM=0
"RTN","VPSMRAR0",30,0)
 S ERRNUM=$O(FDAERR("DIERR",ERRNUM))
"RTN","VPSMRAR0",31,0)
 N ERRTXT S ERRTXT=FDAERR("DIERR",ERRNUM,"TEXT",1)
"RTN","VPSMRAR0",32,0)
 N EXIST S EXIST=ERRTXT["already exists"
"RTN","VPSMRAR0",33,0)
 S:EXIST RESULT=$$RESULT(STRING,1,"") ; not an exception as far as Vecna is concerned.
"RTN","VPSMRAR0",34,0)
 S:'EXIST RESULT=$$RESULT(STRING,99,ERRTXT_$S(MSG'="":" "_MSG,1:""))
"RTN","VPSMRAR0",35,0)
 Q RESULT
"RTN","VPSMRAR0",36,0)
 ;
"RTN","VPSMRAR0",37,0)
RESULT(DATA,RETCODE,ERRMSG) ; return result with a structure recognized by vecna
"RTN","VPSMRAR0",38,0)
 ; INPUT
"RTN","VPSMRAR0",39,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR0",40,0)
 ;             IENS is composite string assigned to a subscript in the local array passed in by Vecna for the specific field
"RTN","VPSMRAR0",41,0)
 ;   RETCODE : Return Code
"RTN","VPSMRAR0",42,0)
 ;   ERRMSG  : Error Message (optional)
"RTN","VPSMRAR0",43,0)
 ;
"RTN","VPSMRAR0",44,0)
 ; OUTPUT
"RTN","VPSMRAR0",45,0)
 ;   result string with a structure that Vecna can recognize
"RTN","VPSMRAR0",46,0)
 ;
"RTN","VPSMRAR0",47,0)
 N RESULT
"RTN","VPSMRAR0",48,0)
 S RESULT=$P(DATA,U,1,3)
"RTN","VPSMRAR0",49,0)
 S $P(RESULT,U,4)=RETCODE
"RTN","VPSMRAR0",50,0)
 S:ERRMSG'="" $P(RESULT,U,5)=ERRMSG
"RTN","VPSMRAR0",51,0)
 Q RESULT
"RTN","VPSMRAR0",52,0)
 ;
"RTN","VPSMRAR0",53,0)
GREQFLD(VARRAY,DDARRY,REQFLDS) ;Build REQFLDS array. Each sub file must have the required field in the array otherwise generates error
"RTN","VPSMRAR0",54,0)
 ; INPUTS
"RTN","VPSMRAR0",55,0)
 ;   VARRAY  : encounter, statistics, allergy and medication related data sent in a subscripted array by kiosk client
"RTN","VPSMRAR0",56,0)
 ;             VARRAY(n) = FIELD NAME^ARRAY IENS^FIELD VALUE
"RTN","VPSMRAR0",57,0)
 ;   DDARRY  : array of DD definitions defined at 853.51, 853.52, 853.53, 853.57 used for 
"RTN","VPSMRAR0",58,0)
 ;             validating and filing the data sent by kiosk client
"RTN","VPSMRAR0",59,0)
 ;             each subscript at this array is constructed as: 
"RTN","VPSMRAR0",60,0)
 ;             DDARRY(n) = FILE NUMBER^FIELD NUMBER^FIELD NAME
"RTN","VPSMRAR0",61,0)
 ; OUTPUT
"RTN","VPSMRAR0",62,0)
 ;   REQFLDS : array of required field name by required fieldname and entry number
"RTN","VPSMRAR0",63,0)
 ;             if the required field name and value exists in VARRAY, the node (REQFLDS(reqfieldname, entry#)) will be defined.
"RTN","VPSMRAR0",64,0)
 ;
"RTN","VPSMRAR0",65,0)
 ; Required fields for Sub File 853.51
"RTN","VPSMRAR0",66,0)
 S REQFLDS("KIOSK GROUP")=0
"RTN","VPSMRAR0",67,0)
 S REQFLDS("ENCOUNTER CLINIC")=0
"RTN","VPSMRAR0",68,0)
 S REQFLDS("INTERFACE MODULE")=0
"RTN","VPSMRAR0",69,0)
 S REQFLDS("LOCAL ALLERGY ID")=1
"RTN","VPSMRAR0",70,0)
 S REQFLDS("REMOTE ALLERGY ID")=1
"RTN","VPSMRAR0",71,0)
 S REQFLDS("REMOTE ALLERGY NAME")=1
"RTN","VPSMRAR0",72,0)
 S REQFLDS("MED ID")=1
"RTN","VPSMRAR0",73,0)
 S REQFLDS("MEDICATION NAME")=1
"RTN","VPSMRAR0",74,0)
 S REQFLDS("ADD ALLERGY-VET")=1
"RTN","VPSMRAR0",75,0)
 S REQFLDS("ADD ALLERGY-PROVIDER")=1
"RTN","VPSMRAR0",76,0)
 S REQFLDS("PATIENT-FACING ADD MEDICATION")=1
"RTN","VPSMRAR0",77,0)
 S REQFLDS("STAFF VIEW ADD MEDICATION")=1
"RTN","VPSMRAR0",78,0)
 S REQFLDS("VET VIEW ADD MEDICATION")=1
"RTN","VPSMRAR0",79,0)
 S REQFLDS("LOCAL REACTION ID")=2
"RTN","VPSMRAR0",80,0)
 S REQFLDS("REMOTE REACTION ID")=2
"RTN","VPSMRAR0",81,0)
 S REQFLDS("REMOTE REACTION NAME")=2
"RTN","VPSMRAR0",82,0)
 ;
"RTN","VPSMRAR0",83,0)
 N DDFLD,VPSFILE,FLDVAL,ENTRY2,ENTRY3
"RTN","VPSMRAR0",84,0)
 N SUB S SUB=""
"RTN","VPSMRAR0",85,0)
 ;
"RTN","VPSMRAR0",86,0)
 F  S SUB=$O(VARRAY(SUB)) Q:SUB=""  D
"RTN","VPSMRAR0",87,0)
 . S DDFLD=$P(VARRAY(SUB),U) ; name of field label passed in by Vecna
"RTN","VPSMRAR0",88,0)
 . Q:DDFLD=""  ;will generate error in the filing stage
"RTN","VPSMRAR0",89,0)
 . S ENTRY2=$P($P(VARRAY(SUB),U,2),",",2) ;Allergy or Medication Entry #
"RTN","VPSMRAR0",90,0)
 . S ENTRY3=$P($P(VARRAY(SUB),U,2),",",3) ;Reaction Entry #
"RTN","VPSMRAR0",91,0)
 . I $D(REQFLDS(DDFLD)) D
"RTN","VPSMRAR0",92,0)
 . . S FLDVAL=$$STRIP^XLFSTR($P(VARRAY(SUB),U,3)," ") ;IA #10104
"RTN","VPSMRAR0",93,0)
 . . I REQFLDS(DDFLD)=0 S REQFLDS(DDFLD,0)=1
"RTN","VPSMRAR0",94,0)
 . . I REQFLDS(DDFLD)=1,FLDVAL'="",ENTRY2'="" S REQFLDS(DDFLD,ENTRY2)=1
"RTN","VPSMRAR0",95,0)
 . . I REQFLDS(DDFLD)=2,FLDVAL'="",ENTRY2'="",ENTRY3'="" S REQFLDS(DDFLD,ENTRY2,ENTRY3)=1
"RTN","VPSMRAR0",96,0)
 Q
"RTN","VPSMRAR0",97,0)
 ;
"RTN","VPSMRAR0",98,0)
ADDMRAR(SUBFIL,SUBS,ENTRYNO,DIEFLAG) ;Add multiple entry
"RTN","VPSMRAR0",99,0)
 ; INPUTS 
"RTN","VPSMRAR0",100,0)
 ;   PTIEN   : D0 - Patient DFN for 853.5 entry
"RTN","VPSMRAR0",101,0)
 ;   DTIEN   : D1 - transaction date/time ien for 853.51 sub-entry
"RTN","VPSMRAR0",102,0)
 ;   ENTRYNO : Entry Number
"RTN","VPSMRAR0",103,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR0",104,0)
 ; OUTPUT
"RTN","VPSMRAR0",105,0)
 ;   Success : > 0
"RTN","VPSMRAR0",106,0)
 ;   Failed : 0
"RTN","VPSMRAR0",107,0)
 N VPSFDA S VPSFDA(SUBFIL,"+1,"_SUBS_",",.01)=ENTRYNO
"RTN","VPSMRAR0",108,0)
 K ^TMP("DIERR",$J)
"RTN","VPSMRAR0",109,0)
 D UPDATE^DIE($G(DIEFLAG),"VPSFDA")
"RTN","VPSMRAR0",110,0)
 N ADDOK S ADDOK='$D(^TMP("DIERR",$J))
"RTN","VPSMRAR0",111,0)
 K ^TMP("DIERR",$J)
"RTN","VPSMRAR0",112,0)
 Q ADDOK
"RTN","VPSMRAR0",113,0)
 ; 
"RTN","VPSMRAR0",114,0)
FILE(FIL,WP,IENS,FLD,DIEFLAG,DATA) ; Store field in FIL
"RTN","VPSMRAR0",115,0)
 ; INPUTS 
"RTN","VPSMRAR0",116,0)
 ;   FIL     : File # where the data will be filed
"RTN","VPSMRAR0",117,0)
 ;   WP      : Boolean indicates whether or not the field is a WP field
"RTN","VPSMRAR0",118,0)
 ;   IENS    : IENS sub script where the data will be filed
"RTN","VPSMRAR0",119,0)
 ;   FLD     : Field # where the data will be filed
"RTN","VPSMRAR0",120,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR0",121,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR0",122,0)
 ; 
"RTN","VPSMRAR0",123,0)
 ; OUTPUT
"RTN","VPSMRAR0",124,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR0",125,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR0",126,0)
 ;
"RTN","VPSMRAR0",127,0)
 N VPSERR
"RTN","VPSMRAR0",128,0)
 ;
"RTN","VPSMRAR0",129,0)
 I WP D  ; comments need to be filed using WP^DIE
"RTN","VPSMRAR0",130,0)
 . S DATA(1)=$P(DATA,U,3)
"RTN","VPSMRAR0",131,0)
 . D WP^DIE(FIL,IENS,FLD,"","DATA","VPSERR")
"RTN","VPSMRAR0",132,0)
 ;
"RTN","VPSMRAR0",133,0)
 I 'WP D  ; file other non-comments fields
"RTN","VPSMRAR0",134,0)
 . N VPSFDA
"RTN","VPSMRAR0",135,0)
 . S VPSFDA(FIL,IENS,FLD)=$P(DATA,U,3)
"RTN","VPSMRAR0",136,0)
 . D FILE^DIE(DIEFLAG,"VPSFDA","VPSERR")
"RTN","VPSMRAR0",137,0)
 ;
"RTN","VPSMRAR0",138,0)
 I '$D(VPSERR) S RESULT=$$RESULT(DATA,1,"") ; data for specific field was filed successfully into PDO record
"RTN","VPSMRAR0",139,0)
 I $D(VPSERR) S RESULT=$$ERROR(.VPSERR,DATA,"")
"RTN","VPSMRAR0",140,0)
 ;
"RTN","VPSMRAR0",141,0)
 Q RESULT
"RTN","VPSMRAR0",142,0)
 ; 
"RTN","VPSMRAR0",143,0)
MRARFLDS ; list of encounter, MRAR, and Kiosk statistics fields defined in VPS MRAR PDO file (#853.5)
"RTN","VPSMRAR0",144,0)
 ;;FILE NUMBER^FIELD NUMBER^FIELD NAME^comments
"RTN","VPSMRAR0",145,0)
 ;;853.51^.02^DEVICE ID^E
"RTN","VPSMRAR0",146,0)
 ;;853.51^.03^KIOSK GROUP^E
"RTN","VPSMRAR0",147,0)
 ;;853.51^.04^ENCOUNTER CLINIC^I^44
"RTN","VPSMRAR0",148,0)
 ;;853.51^.05^APPT DATE/TIME^D
"RTN","VPSMRAR0",149,0)
 ;;853.51^.06^PROVIDER^I^200
"RTN","VPSMRAR0",150,0)
 ;;853.51^.12^MRAR SESSION ID^E
"RTN","VPSMRAR0",151,0)
 ;;853.51^1^AR INITIATED DT^D
"RTN","VPSMRAR0",152,0)
 ;;853.51^2^AR COMPLETED DT^D
"RTN","VPSMRAR0",153,0)
 ;;853.51^5^AR INCOMPLETE DT^D
"RTN","VPSMRAR0",154,0)
 ;;853.51^6^AR INCOMPLETE REASON TYPE^E
"RTN","VPSMRAR0",155,0)
 ;;853.51^7^AR SESSION OUTCOME^E
"RTN","VPSMRAR0",156,0)
 ;;853.51^8^ADD ALLERGY INITIATED DT^D
"RTN","VPSMRAR0",157,0)
 ;;853.51^9^ADD ALLERGY COMPLETED DT^D
"RTN","VPSMRAR0",158,0)
 ;;853.51^10^ALLER CHANGE COMPLETED DT^D
"RTN","VPSMRAR0",159,0)
 ;;853.51^11^ALLER CHANGE INITIATED DT^D
"RTN","VPSMRAR0",160,0)
 ;;853.51^12^AR FREE TEXT USED^E
"RTN","VPSMRAR0",161,0)
 ;;853.51^13^AR FREE TEXT COMPLETED DT^D
"RTN","VPSMRAR0",162,0)
 ;;853.51^14^VET VIEW ADD ALLERGY COMP DT^D
"RTN","VPSMRAR0",163,0)
 ;;853.51^15^VET VIEW ADD ALLER INIT DT^D
"RTN","VPSMRAR0",164,0)
 ;;853.51^16^VET VIEW CHANGE ALLER COMP DT^D
"RTN","VPSMRAR0",165,0)
 ;;853.51^17^VET VIEW CHANGE ALLER INIT DT^D
"RTN","VPSMRAR0",166,0)
 ;;853.51^18^MR CHANGE REASON INITIATED DT^D
"RTN","VPSMRAR0",167,0)
 ;;853.51^19^OTH ALLERGY UNK PATIENT^E
"RTN","VPSMRAR0",168,0)
 ;;853.51^20^NO KNOWN DRUG ALLERGIES^E
"RTN","VPSMRAR0",169,0)
 ;;853.51^22^MR MULTIPLE SESSIONS^E
"RTN","VPSMRAR0",170,0)
 ;;853.51^23^MR FREE TEXT USED^E
"RTN","VPSMRAR0",171,0)
 ;;853.51^24^VET VIEW CHG DOD MED COMP DT^D
"RTN","VPSMRAR0",172,0)
 ;;853.51^25^VET VIEW CHG DOD MED INIT DT^D
"RTN","VPSMRAR0",173,0)
 ;;853.51^26^VET VIEW CHG NONVA MED COMP DT^D
"RTN","VPSMRAR0",174,0)
 ;;853.51^27^VET VIEW CHG NONVA MED INIT DT^D
"RTN","VPSMRAR0",175,0)
 ;;853.51^28^VET VIEW CHG LOCAL MED COMP DT^D
"RTN","VPSMRAR0",176,0)
 ;;853.51^29^VET VIEW CHG LOCAL MED INIT DT^D
"RTN","VPSMRAR0",177,0)
 ;;853.51^31^VET VIEW CHG REMOT MED COMP DT^D
"RTN","VPSMRAR0",178,0)
 ;;853.51^32^VET VIEW CHG REMOT MED INIT DT^D
"RTN","VPSMRAR0",179,0)
 ;;853.51^33^WEB ID^E
"RTN","VPSMRAR0",180,0)
 ;;853.51^70^PDO FIRST INVOKED DT^D
"RTN","VPSMRAR0",181,0)
 ;;853.51^72^PDO INVOCATION ERROR^E
"RTN","VPSMRAR0",182,0)
 ;;853.51^73^PDO NEXT INVOKED DT^D
"RTN","VPSMRAR0",183,0)
 ;;853.51^74^STAFF MODULE COMPLETED DT^D
"RTN","VPSMRAR0",184,0)
 ;;853.51^76^STAFF MODULE SIGNED DT^D
"RTN","VPSMRAR0",185,0)
 ;;853.51^77^MR INITIATED DT^D
"RTN","VPSMRAR0",186,0)
 ;;853.51^78^MR COMPLETED DT^D
"RTN","VPSMRAR0",187,0)
 ;;853.51^80^MR CHANGE MED INITIATED DT^D
"RTN","VPSMRAR0",188,0)
 ;;853.51^81^MR CHANGE MED COMPLETED DT^D
"RTN","VPSMRAR0",189,0)
 ;;853.51^82^MR CHANGE REASON COMPLETED DT^D
"RTN","VPSMRAR0",190,0)
 ;;853.51^83^MR INCOMPLETE REASON TYPE^E
"RTN","VPSMRAR0",191,0)
 ;;853.51^84^MR FREE TEXT SECTION DONE DT^D
"RTN","VPSMRAR0",192,0)
 ;;853.51^85^MR SESSION OUTCOME^E
"RTN","VPSMRAR0",193,0)
 ;;853.51^86^MR ADD MED INITIATED DT^D
"RTN","VPSMRAR0",194,0)
 ;;853.51^87^MR ADD MED COMPLETED DT^D
"RTN","VPSMRAR0",195,0)
 ;;853.51^88^VET VIEW ADD MED INITIATED DT^D
"RTN","VPSMRAR0",196,0)
 ;;853.51^89^VET VIEW ADD MED COMPLETED DT^D
"RTN","VPSMRAR0",197,0)
 ;;853.51^92^VET VIEW CHG ALL MED INIT DT^D
"RTN","VPSMRAR0",198,0)
 ;;853.51^93^VET VIEW CHG ALL MED COMP DT^D
"RTN","VPSMRAR0",199,0)
 ;;853.51^95^MR INCOMPLETE DT^D
"RTN","VPSMRAR0",200,0)
 ;;853.51^105^TIU NOTE^I^8925
"RTN","VPSMRAR0",201,0)
 ;;853.5121^.01^MRAR CONDUCTED WITH^E
"RTN","VPSMRAR0",202,0)
 ;;853.52^.02^LOCAL ALLERGY ID^I^120.8
"RTN","VPSMRAR0",203,0)
 ;;853.52^.03^REMOTE ALLERGY ID^E
"RTN","VPSMRAR0",204,0)
 ;;853.52^.05^REMOTE ALLERGY NAME^E
"RTN","VPSMRAR0",205,0)
 ;;853.52^.06^AR PATIENT RESPONSE^E
"RTN","VPSMRAR0",206,0)
 ;;853.52^.09^REMOTE FACILITY^I^4
"RTN","VPSMRAR0",207,0)
 ;;853.52^16^ALLERGY-MARK FOR FOLLOWUP^E
"RTN","VPSMRAR0",208,0)
 ;;853.525^.01^ALLERGY CHANGED^I^853.3
"RTN","VPSMRAR0",209,0)
 ;;853.526^.01^ALLERGY CONFIRMED^I^853.3
"RTN","VPSMRAR0",210,0)
 ;;853.527^.01^ALLERGY DISCREPANCY^I^853.3
"RTN","VPSMRAR0",211,0)
 ;;853.52^1^ALLERGY COMMENTS PATIENT^word processing field
"RTN","VPSMRAR0",212,0)
 ;;853.52^2^ALLERGY COMMENTS STAFF VIEW^word processing field
"RTN","VPSMRAR0",213,0)
 ;;853.52^3^ALLERGY COMMENTS VET VIEW^word processing field
"RTN","VPSMRAR0",214,0)
 ;;853.52^4^ALLERGY DOD^E
"RTN","VPSMRAR0",215,0)
 ;;853.53^1^ADD ALLERGY-VET^word processing field
"RTN","VPSMRAR0",216,0)
 ;;853.53^1.5^ADD ALLERGY-PROVIDER^word processing field
"RTN","VPSMRAR0",217,0)
 ;;853.53^2^ADD ALLERGY REACTION (STAFF)^E
"RTN","VPSMRAR0",218,0)
 ;;853.53^3^ADD ALLERGY ADDED BY^E
"RTN","VPSMRAR0",219,0)
 ;;853.53^4^ADD ALLERGY-MARK FOR FOLLOWUP^E
"RTN","VPSMRAR0",220,0)
 ;;853.53^5^ADD ALLERGY NOT KNOWN^E
"RTN","VPSMRAR0",221,0)
 ;;853.54^1^PRESCRIPTION ID^E
"RTN","VPSMRAR0",222,0)
 ;;853.54^2^PROVIDER NAME^E
"RTN","VPSMRAR0",223,0)
 ;;853.54^3^FILL LOCATION^I^4
"RTN","VPSMRAR0",224,0)
 ;;853.54^4^LAST FILL DATE^D
"RTN","VPSMRAR0",225,0)
 ;;853.54^5^DAYS SUPPLIED^E
"RTN","VPSMRAR0",226,0)
 ;;853.54^6^# REFILLS LEFT^E
"RTN","VPSMRAR0",227,0)
 ;;853.54^7^NEXT FILL DATE^D
"RTN","VPSMRAR0",228,0)
 ;;853.54^8^MED EXPIRE DATE^D
"RTN","VPSMRAR0",229,0)
 ;;853.54^9^MED ID^E
"RTN","VPSMRAR0",230,0)
 ;;853.54^10^MEDICATION NAME^E
"RTN","VPSMRAR0",231,0)
 ;;853.54^11^MR PRESET PATIENT RESPONSE^E
"RTN","VPSMRAR0",232,0)
 ;;853.54^12^RX STATUS^E
"RTN","VPSMRAR0",233,0)
 ;;853.54^13^MED SIG^E
"RTN","VPSMRAR0",234,0)
 ;;853.54^14^MED DOSAGE^E
"RTN","VPSMRAR0",235,0)
 ;;853.54^15^MED DOSAGE FORM^E
"RTN","VPSMRAR0",236,0)
 ;;853.54^16^MEDS-MARK FOR FOLLOWUP^E
"RTN","VPSMRAR0",237,0)
 ;;853.54^17^MED ROUTE^E
"RTN","VPSMRAR0",238,0)
 ;;853.54^18^MED IMAGE INDICATOR^E
"RTN","VPSMRAR0",239,0)
 ;;853.54^19^MED FINISHING PERSON^E
"RTN","VPSMRAR0",240,0)
 ;;853.54^20^NATIONAL DRUG SID^E
"RTN","VPSMRAR0",241,0)
 ;;853.54^21^NON-VA^E
"RTN","VPSMRAR0",242,0)
 ;;853.54^22^MAX REFILLS^E
"RTN","VPSMRAR0",243,0)
 ;;853.54^26^RX PATIENT STATUS^E
"RTN","VPSMRAR0",244,0)
 ;;853.54^27^RX NUMBER^E
"RTN","VPSMRAR0",245,0)
 ;;853.54^28^RX OUTPATIENT ID^E
"RTN","VPSMRAR0",246,0)
 ;;853.54^29^RX SC FLAG^E
"RTN","VPSMRAR0",247,0)
 ;;853.54^33^CANCEL DT^D
"RTN","VPSMRAR0",248,0)
 ;;853.54^34^CMOP STATUS^E
"RTN","VPSMRAR0",249,0)
 ;;853.54^35^COUNSELED FLAG^E
"RTN","VPSMRAR0",250,0)
 ;;853.54^36^COUNSELING UNDERSTOOD FLAG^E
"RTN","VPSMRAR0",251,0)
 ;;853.54^37^DIVISION SID^E
"RTN","VPSMRAR0",252,0)
 ;;853.54^38^ENTERED BY^E
"RTN","VPSMRAR0",253,0)
 ;;853.54^39^MED ISSUE DT^D
"RTN","VPSMRAR0",254,0)
 ;;853.54^40^COPAY TRANSACTION^E
"RTN","VPSMRAR0",255,0)
 ;;853.54^41^EBILL ACTION NUMBER^E
"RTN","VPSMRAR0",256,0)
 ;;853.54^42^ETL BATCH ID FAILURE^E
"RTN","VPSMRAR0",257,0)
 ;;853.54^43^RELEASE DT^D
"RTN","VPSMRAR0",258,0)
 ;;853.54^44^QUANTITY SUPPLIED^E
"RTN","VPSMRAR0",259,0)
 ;;853.54^45^MED REMOTE^E
"RTN","VPSMRAR0",260,0)
 ;;853.54^46^REMOTE MED FACILITY^E
"RTN","VPSMRAR0",261,0)
 ;;853.54^47^DRUG NAME W/O DOSE^E
"RTN","VPSMRAR0",262,0)
 ;;853.54^48^HIGH RISK MED CLASS^E
"RTN","VPSMRAR0",263,0)
 ;;853.54^49^HIGH RISK MED NAME^E
"RTN","VPSMRAR0",264,0)
 ;;853.54^50^HIGH RISK MED YEAR^E
"RTN","VPSMRAR0",265,0)
 ;;853.54^51^MED IMAGE^E
"RTN","VPSMRAR0",266,0)
 ;;853.54^56^PRODUCT SOURCE^E
"RTN","VPSMRAR0",267,0)
 ;;853.54^57^PRODUCT NAME^I^50.68
"RTN","VPSMRAR0",268,0)
 ;;853.54^58^VET VIEW MED IMAGE INDICATOR^E
"RTN","VPSMRAR0",269,0)
 ;;853.54^23^MEDICATION COMMENTS PATIENT^word processing field
"RTN","VPSMRAR0",270,0)
 ;;853.54^24^MEDICATION COMMENTS STAFF VIEW^word processing field
"RTN","VPSMRAR0",271,0)
 ;;853.54^25^MEDICATION COMMENTS VET VIEW^word processing field
"RTN","VPSMRAR0",272,0)
 ;;853.5452^.01^MED DISCREPANCY^I^853.7
"RTN","VPSMRAR0",273,0)
 ;;853.5454^.01^MED CHANGED^I^853.7
"RTN","VPSMRAR0",274,0)
 ;;853.5455^.01^MED CONFIRMED^I^853.7
"RTN","VPSMRAR0",275,0)
 ;;853.55^1^PATIENT-FACING ADD MEDICATION^E
"RTN","VPSMRAR0",276,0)
 ;;853.55^2^STAFF VIEW ADD MEDICATION^E
"RTN","VPSMRAR0",277,0)
 ;;853.55^3^VET VIEW ADD MEDICATION^E
"RTN","VPSMRAR0",278,0)
 ;;853.55^4^VET PLANS TO DISCUSS ADD MED^E
"RTN","VPSMRAR0",279,0)
 ;;853.55^5^ADD MED FREQUENCY (PATIENT)^E
"RTN","VPSMRAR0",280,0)
 ;;853.55^6^ADD MED DIRECTIONS (PATIENT)^E
"RTN","VPSMRAR0",281,0)
 ;;853.55^7^ADD MED COMMENTS-STAFF VIEW^word processing field
"RTN","VPSMRAR0",282,0)
 ;;853.55^8^ADD MED DOSE (STAFF)^E
"RTN","VPSMRAR0",283,0)
 ;;853.55^9^ADD MEDS-MARK FOR FOLLOW-UP^E
"RTN","VPSMRAR0",284,0)
 ;;853.55^10^ADD MED INDICATION (STAFF)^E
"RTN","VPSMRAR0",285,0)
 ;;853.55^11^ADD MED TIME (PATIENT)^E
"RTN","VPSMRAR0",286,0)
 ;;853.55^12^ADD MED COMMENTS-VET VIEW^word processing field
"RTN","VPSMRAR0",287,0)
 ;;853.57^.02^LOCAL REACTION ID^I^120.83
"RTN","VPSMRAR0",288,0)
 ;;853.57^.03^REMOTE REACTION ID^E
"RTN","VPSMRAR0",289,0)
 ;;853.57^.04^REMOTE REACTION NAME^E
"RTN","VPSMRAR0",290,0)
 ;;
"RTN","VPSMRAR1")
0^1^B100795984
"RTN","VPSMRAR1",1,0)
VPSMRAR1  ;DALOI/KML,WOIFO/BT - Update of VPS MRAR PDO file ;1/15/15 15:30
"RTN","VPSMRAR1",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSMRAR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRAR1",4,0)
 ;
"RTN","VPSMRAR1",5,0)
 Q
"RTN","VPSMRAR1",6,0)
 ;
"RTN","VPSMRAR1",7,0)
WRITE(RESULT,VPSNUM,VPSTYP,VPSINTFC,VPSMRAR) ; RPC=VPS WRITE MRAR PDO
"RTN","VPSMRAR1",8,0)
 ; Vetlink Kiosk has the Medication Review Allergy Review modules where a veteran can review and make
"RTN","VPSMRAR1",9,0)
 ; changes to his medications and any allergies. The MRAR can also be facilitated by a provider.
"RTN","VPSMRAR1",10,0)
 ; The local arrays identify the field to be updated along with the respective data changes and serves to RPC
"RTN","VPSMRAR1",11,0)
 ; 
"RTN","VPSMRAR1",12,0)
 ; INPUT
"RTN","VPSMRAR1",13,0)
 ;   RESULT   : represents the results of processing and passed in by reference (required by RPC Broker)
"RTN","VPSMRAR1",14,0)
 ;   VPSNUM   : Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSMRAR1",15,0)
 ;   VPSTYP   : Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSMRAR1",16,0)
 ;   VPSINTFC : value of 'S' indicates that the entries in VPSMRAR coming from Staff-facing interface module.
"RTN","VPSMRAR1",17,0)
 ;            : value of 'P' indicates that the entries in VPSMRAR coming from Patient-facing interface module.
"RTN","VPSMRAR1",18,0)
 ;   VPSMRAR  : local array representing the kiosk Medication and Allergy Review passed in by reference 
"RTN","VPSMRAR1",19,0)
 ;              VPSMRAR represents allergy related fields, medication related fields, and statistical information about the MRAR session.
"RTN","VPSMRAR1",20,0)
 ;              Each subscript in the array is assigned a composite, delimited string. 
"RTN","VPSMRAR1",21,0)
 ;              VPSMRAR(n) = FIELD NAME^ARRAY IENS^DATA 
"RTN","VPSMRAR1",22,0)
 ;                n is an incremental number
"RTN","VPSMRAR1",23,0)
 ;                FIELD NAME represents the name of the field in 853.5 file
"RTN","VPSMRAR1",24,0)
 ;                ARRAY IENS represent entry and sub-entry ctrs
"RTN","VPSMRAR1",25,0)
 ;                  e.g., if patient has 3 allergies with entry numbers of (10,20,30) then a given value "1,20"
"RTN","VPSMRAR1",26,0)
 ;                  where "1" represents top level entry (patient level; ien and .01) and "20" represents the allergy entry level (.01 not the SUB IEN)
"RTN","VPSMRAR1",27,0)
 ;                DATA is the actual data that is populated at an entry in 853.5 
"RTN","VPSMRAR1",28,0)
 ; 
"RTN","VPSMRAR1",29,0)
 ; OUTPUT
"RTN","VPSMRAR1",30,0)
 ;   RESULT  : local array that returns the results of each updated field per array data element.
"RTN","VPSMRAR1",31,0)
 ; 
"RTN","VPSMRAR1",32,0)
 ;   SUCCESS : localArray(n) = FIELD NAME^ARRAY IENS^DATA^1
"RTN","VPSMRAR1",33,0)
 ;             1 equals successful update to the database of the specific field declared at field label. 
"RTN","VPSMRAR1",34,0)
 ; 
"RTN","VPSMRAR1",35,0)
 ;   FAILED  : localArray(n)="FIELD NAME^ARRAY IENS^DATA^99^exception message" 
"RTN","VPSMRAR1",36,0)
 ;             99 means an exception and no update was made to the database for that specific field and exception message describes the error. 
"RTN","VPSMRAR1",37,0)
 ;
"RTN","VPSMRAR1",38,0)
 ; -- Validate parameters
"RTN","VPSMRAR1",39,0)
 N VPSDFN
"RTN","VPSMRAR1",40,0)
 S VPSINTFC=$G(VPSINTFC)
"RTN","VPSMRAR1",41,0)
 S VPSNUM=$G(VPSNUM)
"RTN","VPSMRAR1",42,0)
 S VPSTYP=$G(VPSTYP)
"RTN","VPSMRAR1",43,0)
 S RESULT(0)=$$VALPARAM(VPSNUM,VPSTYP,VPSINTFC,.VPSMRAR,.VPSDFN)
"RTN","VPSMRAR1",44,0)
 Q:RESULT(0)'=""
"RTN","VPSMRAR1",45,0)
 ;
"RTN","VPSMRAR1",46,0)
 ; -- Create MRAR PDO entry if it does not exist for this patient
"RTN","VPSMRAR1",47,0)
 S RESULT(0)=$$CRPTMRAR(VPSDFN)
"RTN","VPSMRAR1",48,0)
 Q:RESULT(0)'=""
"RTN","VPSMRAR1",49,0)
 ;
"RTN","VPSMRAR1",50,0)
 ; -- Lock File before adding/updating sub files records
"RTN","VPSMRAR1",51,0)
 L +^VPS(853.5,VPSDFN):3 E  S RESULT(0)=$$RESULT^VPSMRAR0(VPSDFN,99,"VPS PDO MRAR cannot be locked. Update to patient data object cannot occur at this time.")
"RTN","VPSMRAR1",52,0)
 Q:RESULT(0)'=""
"RTN","VPSMRAR1",53,0)
 ;
"RTN","VPSMRAR1",54,0)
 ; -- Create new transaction - sub entry at 853.51 
"RTN","VPSMRAR1",55,0)
 N TRNDT
"RTN","VPSMRAR1",56,0)
 S TRNDT=$$NOW^XLFDT() ; IA #10103 - supported use of XLFDT function 
"RTN","VPSMRAR1",57,0)
 S RESULT(0)=$$CRTSUB51(VPSDFN,VPSINTFC,TRNDT)
"RTN","VPSMRAR1",58,0)
 ;
"RTN","VPSMRAR1",59,0)
 ; -- Update PDO sub files with VPSMRAR data
"RTN","VPSMRAR1",60,0)
 I RESULT(0)="" D
"RTN","VPSMRAR1",61,0)
 . K RESULT
"RTN","VPSMRAR1",62,0)
 . D EXTRACT(VPSDFN,VPSINTFC,TRNDT,.VPSMRAR,.RESULT)
"RTN","VPSMRAR1",63,0)
 ;
"RTN","VPSMRAR1",64,0)
 L -^VPS(853.5,VPSDFN)
"RTN","VPSMRAR1",65,0)
 Q
"RTN","VPSMRAR1",66,0)
 ;
"RTN","VPSMRAR1",67,0)
VALPARAM(VPSNUM,VPSTYP,INTERFC,VPSMRAR,VPSDFN) ;Validate RPC Input parameters
"RTN","VPSMRAR1",68,0)
 ; INPUT
"RTN","VPSMRAR1",69,0)
 ;   VPSNUM  : Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSMRAR1",70,0)
 ;   VPSTYP  : Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSMRAR1",71,0)
 ;   INTERFC : value of 'S' indicates that the entries in VPSMRAR coming from Staff-facing interface module.
"RTN","VPSMRAR1",72,0)
 ;           : value of 'P' indicates that the entries in VPSMRAR coming from Patient-facing interface module.
"RTN","VPSMRAR1",73,0)
 ;   VPSMRAR : encounter, statistics, allergy and medication related data sent in a subscripted array by kiosk client
"RTN","VPSMRAR1",74,0)
 ; OUTPUT
"RTN","VPSMRAR1",75,0)
 ;   VPSDFN  : Patient DFN
"RTN","VPSMRAR1",76,0)
 ; RETURN
"RTN","VPSMRAR1",77,0)
 ;   No Error   : ""
"RTN","VPSMRAR1",78,0)
 ;   With Error : FIELD^PARAMETER^VALUE^99^error
"RTN","VPSMRAR1",79,0)
 ;
"RTN","VPSMRAR1",80,0)
 S VPSDFN=$$VALIDATE^VPSRPC1(VPSTYP,VPSNUM)
"RTN","VPSMRAR1",81,0)
 I VPSDFN<1 Q $$RESULT^VPSMRAR0("PATIENT^PARAMETER^",99,$P(VPSDFN,U,2))
"RTN","VPSMRAR1",82,0)
 I '$F("^S^P^",U_INTERFC_U) Q $$RESULT^VPSMRAR0("INTERFACE MODULE^PARAMETER^"_INTERFC,99,"Interface Module must be 'S' for Staff or 'P' for Patient")
"RTN","VPSMRAR1",83,0)
 I $D(VPSMRAR)<10 Q $$RESULT^VPSMRAR0("DATA^PARAMETER^",99,"MRAR FIELDS not sent")
"RTN","VPSMRAR1",84,0)
 I '$D(^DPT(VPSDFN)) Q $$RESULT^VPSMRAR0("PATIENT^PARAMETER^"_VPSDFN,99,"PATIENT not in VistA database")
"RTN","VPSMRAR1",85,0)
 Q ""
"RTN","VPSMRAR1",86,0)
 ;
"RTN","VPSMRAR1",87,0)
CRPTMRAR(VPSDFN) ;Create MRAR PDO entry if it does not exist for this patient
"RTN","VPSMRAR1",88,0)
 ; INPUT
"RTN","VPSMRAR1",89,0)
 ;   VPSDFN : Patient IEN
"RTN","VPSMRAR1",90,0)
 ; 
"RTN","VPSMRAR1",91,0)
 ; OUTPUT
"RTN","VPSMRAR1",92,0)
 ;   No Error : ""
"RTN","VPSMRAR1",93,0)
 ;   With Error : PATIENT^PATIENT IEN^PATIENT IEN^99^error
"RTN","VPSMRAR1",94,0)
 N VPSPTIEN,RESULT
"RTN","VPSMRAR1",95,0)
 S RESULT=""
"RTN","VPSMRAR1",96,0)
 S VPSPTIEN=$$GETPTIEN(VPSDFN)
"RTN","VPSMRAR1",97,0)
 I 'VPSPTIEN D
"RTN","VPSMRAR1",98,0)
 . S RESULT=$$CRPATPDO(VPSDFN)
"RTN","VPSMRAR1",99,0)
 . Q:RESULT'=""
"RTN","VPSMRAR1",100,0)
 . S VPSPTIEN=$$GETPTIEN(VPSDFN)
"RTN","VPSMRAR1",101,0)
 Q RESULT
"RTN","VPSMRAR1",102,0)
 ; 
"RTN","VPSMRAR1",103,0)
GETPTIEN(VPSDFN) ;Return VPS IEN for FILE 853.5 if exist, otherwise return 0
"RTN","VPSMRAR1",104,0)
 ; INPUT
"RTN","VPSMRAR1",105,0)
 ;   VPSDFN : Patient IEN
"RTN","VPSMRAR1",106,0)
 ; 
"RTN","VPSMRAR1",107,0)
 ; OUTPUT
"RTN","VPSMRAR1",108,0)
 ;   VPS IEN for FILE 853.5
"RTN","VPSMRAR1",109,0)
 ; 
"RTN","VPSMRAR1",110,0)
 Q $O(^VPS(853.5,"B",VPSDFN,""))
"RTN","VPSMRAR1",111,0)
 ;
"RTN","VPSMRAR1",112,0)
CRPATPDO(VPSDFN) ;create PDO
"RTN","VPSMRAR1",113,0)
 ; INPUT
"RTN","VPSMRAR1",114,0)
 ;   VPSDFN : Patient IEN
"RTN","VPSMRAR1",115,0)
 ; 
"RTN","VPSMRAR1",116,0)
 ; OUTPUT
"RTN","VPSMRAR1",117,0)
 ;   No Error : ""
"RTN","VPSMRAR1",118,0)
 ;   With Error : PATIENT^PATIENT IEN^PATIENT IEN^99^error
"RTN","VPSMRAR1",119,0)
 ; 
"RTN","VPSMRAR1",120,0)
 N VPSFDA,VPSIEN,VPSERR
"RTN","VPSMRAR1",121,0)
 S VPSIEN(1)=VPSDFN
"RTN","VPSMRAR1",122,0)
 S VPSFDA(853.5,"+1,",.01)=VPSDFN
"RTN","VPSMRAR1",123,0)
 D UPDATE^DIE("","VPSFDA","VPSIEN","VPSERR")
"RTN","VPSMRAR1",124,0)
 ;
"RTN","VPSMRAR1",125,0)
 N ERR S ERR=""
"RTN","VPSMRAR1",126,0)
 N PATDATA S PATDATA="PATIENT^"_VPSDFN_"^"_VPSDFN
"RTN","VPSMRAR1",127,0)
 I $D(VPSERR) S ERR=$$ERROR^VPSMRAR0(.VPSERR,PATDATA,"VPS PDO MRAR could not be created.")
"RTN","VPSMRAR1",128,0)
 Q ERR
"RTN","VPSMRAR1",129,0)
 ;
"RTN","VPSMRAR1",130,0)
CRTSUB51(VPSPTIEN,INTERFC,TRNDT) ;create stub entry at 853.51
"RTN","VPSMRAR1",131,0)
 ; INPUT
"RTN","VPSMRAR1",132,0)
 ;   VPSPTIEN : VPS IEN for FILE 853.5
"RTN","VPSMRAR1",133,0)
 ;   INTERFC  : value of 'S' indicates that the entries in VPSMRAR coming from Staff-facing interface module.
"RTN","VPSMRAR1",134,0)
 ;            : value of 'P' indicates that the entries in VPSMRAR coming from Patient-facing interface module.
"RTN","VPSMRAR1",135,0)
 ;   TRNDT    : Transaction Date
"RTN","VPSMRAR1",136,0)
 ; 
"RTN","VPSMRAR1",137,0)
 ; OUTPUT
"RTN","VPSMRAR1",138,0)
 ;   No Error   : ""
"RTN","VPSMRAR1",139,0)
 ;   With Error : PATIENT^PATIENT IEN^PATIENT IEN^99^error
"RTN","VPSMRAR1",140,0)
 ; 
"RTN","VPSMRAR1",141,0)
 N VPSERR,VPSFDA
"RTN","VPSMRAR1",142,0)
 S VPSFDA(853.51,"+1,"_VPSPTIEN_",",.01)=TRNDT
"RTN","VPSMRAR1",143,0)
 S VPSFDA(853.51,"+1,"_VPSPTIEN_",",.13)=INTERFC
"RTN","VPSMRAR1",144,0)
 D UPDATE^DIE("E","VPSFDA","","VPSERR")
"RTN","VPSMRAR1",145,0)
 ;
"RTN","VPSMRAR1",146,0)
 N PATDATA S PATDATA="PATIENT^"_VPSPTIEN_"^"_VPSPTIEN
"RTN","VPSMRAR1",147,0)
 I $D(VPSERR) Q $$ERROR^VPSMRAR0(.VPSERR,PATDATA,"Update to patient data object cannot occur at this time.")
"RTN","VPSMRAR1",148,0)
 Q ""
"RTN","VPSMRAR1",149,0)
 ;
"RTN","VPSMRAR1",150,0)
EXTRACT(VPSPTIEN,INTERFC,TRNDT,VARRAY,RES) ; process each subscript in the MRAR array and file data at MRAR sub-entries at 853.5 patient entry
"RTN","VPSMRAR1",151,0)
 ; INPUT
"RTN","VPSMRAR1",152,0)
 ;   VPSPTIEN : VPS IEN for FILE 853.5
"RTN","VPSMRAR1",153,0)
 ;   INTERFC  : value of 'S' indicates that the entries in VPSMRAR coming from Staff-facing interface module.
"RTN","VPSMRAR1",154,0)
 ;            : value of 'P' indicates that the entries in VPSMRAR coming from Patient-facing interface module.
"RTN","VPSMRAR1",155,0)
 ;   TRNDT    : Transaction Date
"RTN","VPSMRAR1",156,0)
 ;   VARRAY   : encounter, statistics, allergy and medication related data sent in a subscripted array by kiosk client
"RTN","VPSMRAR1",157,0)
 ;              VARRAY(n) = FIELD NAME^ARRAY IENS^FIELD VALUE
"RTN","VPSMRAR1",158,0)
 ; 
"RTN","VPSMRAR1",159,0)
 ; OUTPUT
"RTN","VPSMRAR1",160,0)
 ;   RES      : output result array.
"RTN","VPSMRAR1",161,0)
 ;              Success : RES(n) = Field Name^IENS^Field Value^1
"RTN","VPSMRAR1",162,0)
 ;              failed  : RES(n) = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR1",163,0)
 ;                        IENS is composite string assigned to a subscript in the local array passed in by Vecna for the specific field
"RTN","VPSMRAR1",164,0)
 K RES
"RTN","VPSMRAR1",165,0)
 N DDFLD,SUB
"RTN","VPSMRAR1",166,0)
 ;
"RTN","VPSMRAR1",167,0)
 ; DDARRY = array of DD definitions defined at 853.51, 853.52, 853.53, 853.57 used for 
"RTN","VPSMRAR1",168,0)
 ;          validating and filing the data sent by kiosk client
"RTN","VPSMRAR1",169,0)
 ;          each subscript at this array is constructed as: 
"RTN","VPSMRAR1",170,0)
 ;          DDARRY(n) = FILE NUMBER^FIELD NUMBER^FIELD NAME
"RTN","VPSMRAR1",171,0)
 ; 
"RTN","VPSMRAR1",172,0)
 ;Build MRAR definition table
"RTN","VPSMRAR1",173,0)
 N DDARRY D TABLE^VPSMRAR0(.DDARRY)
"RTN","VPSMRAR1",174,0)
 ;
"RTN","VPSMRAR1",175,0)
 ;Build REQFLDS array. Each sub file must have the required field in the array otherwise generates error
"RTN","VPSMRAR1",176,0)
 N REQFLDS D GREQFLD^VPSMRAR0(.VARRAY,.DDARRY,.REQFLDS)
"RTN","VPSMRAR1",177,0)
 N SUBS
"RTN","VPSMRAR1",178,0)
 S SUBS(853.525)="ACHG",SUBS(853.526)="ACNFR",SUBS(853.527)="ADISCR"
"RTN","VPSMRAR1",179,0)
 S SUBS(853.5454)="MCHG",SUBS(853.5455)="MCNFR",SUBS(853.5452)="MDISCR"
"RTN","VPSMRAR1",180,0)
 ;
"RTN","VPSMRAR1",181,0)
 ;Update PDO Sub Files
"RTN","VPSMRAR1",182,0)
 S SUB=""
"RTN","VPSMRAR1",183,0)
 N RESULT,STOPFLG
"RTN","VPSMRAR1",184,0)
 S STOPFLG=0
"RTN","VPSMRAR1",185,0)
 F  S SUB=$O(VARRAY(SUB)) Q:SUB=""!(STOPFLG)  D
"RTN","VPSMRAR1",186,0)
 . S RESULT=""
"RTN","VPSMRAR1",187,0)
 . S RESULT=$$CHKTRN(.REQFLDS,VARRAY(SUB))
"RTN","VPSMRAR1",188,0)
 . I RESULT'="" S RES(0)=RESULT,STOPFLG=1 Q
"RTN","VPSMRAR1",189,0)
 . S DDFLD=$P(VARRAY(SUB),U) ; name of field label passed in by Vecna
"RTN","VPSMRAR1",190,0)
 . I DDFLD="" S RES(SUB)=$$RESULT^VPSMRAR0(VARRAY(SUB),99,"Invalid Field Name") Q
"RTN","VPSMRAR1",191,0)
 . I '$D(DDARRY(DDFLD)) S RES(SUB)=$$RESULT^VPSMRAR0(VARRAY(SUB),99,DDFLD_" does not exist in VPS MRAR PDO file or this field should not be processed during this event. Data not written to PDO") Q  ; Does Vecna need this type exception? Confirm
"RTN","VPSMRAR1",192,0)
 . N FIL S FIL=$P(DDARRY(DDFLD),U) ; file #
"RTN","VPSMRAR1",193,0)
 . N FLD S FLD=$P(DDARRY(DDFLD),U,2) ; field #
"RTN","VPSMRAR1",194,0)
 . N DIEFLAG S DIEFLAG=$P(DDARRY(DDFLD),U,3) ; filing type
"RTN","VPSMRAR1",195,0)
 . N VALID
"RTN","VPSMRAR1",196,0)
 . S VALID=1
"RTN","VPSMRAR1",197,0)
 . I DIEFLAG="I" D
"RTN","VPSMRAR1",198,0)
 .. N OUT,FILE
"RTN","VPSMRAR1",199,0)
 .. S FILE=$P(DDARRY(DDFLD),U,4)
"RTN","VPSMRAR1",200,0)
 .. Q:+FILE=0
"RTN","VPSMRAR1",201,0)
 .. ;D FIND^DIC(FILE,"","@","A",$P(VARRAY(SUB),U,3),"","","","","OUT")
"RTN","VPSMRAR1",202,0)
 .. ;S VALID=+$G(OUT("DILIST",0))
"RTN","VPSMRAR1",203,0)
 .. S VALID=$$FIND1^DIC(FILE,"","A","`"_$P(VARRAY(SUB),U,3),"","","")
"RTN","VPSMRAR1",204,0)
 .. I VALID=0,$P($P(VARRAY(SUB),U,2),",",3)="" S RES(SUB)=$$RESULT^VPSMRAR0(VARRAY(SUB),99,"Invalid IEN value")
"RTN","VPSMRAR1",205,0)
 .. I VALID=0,$P($P(VARRAY(SUB),U,2),",",3)]"" S RES(SUB)=$$RESULT^VPSMRAR0(VARRAY(SUB),99,"Value does not match third index")
"RTN","VPSMRAR1",206,0)
 . Q:VALID=0
"RTN","VPSMRAR1",207,0)
 . I DIEFLAG="D" D
"RTN","VPSMRAR1",208,0)
 .. N Y,OK
"RTN","VPSMRAR1",209,0)
 .. S Y=$P(VARRAY(SUB),U,3)
"RTN","VPSMRAR1",210,0)
 .. S H=$$FMTH^XLFDT(Y)
"RTN","VPSMRAR1",211,0)
 .. S FM=$$HTFM^XLFDT(H)
"RTN","VPSMRAR1",212,0)
 .. S OK=($$FR^XLFDT(Y)=0)&(H=FM)
"RTN","VPSMRAR1",213,0)
 .. S DIEFLAG=$S(OK:"",1:"E")
"RTN","VPSMRAR1",214,0)
 . I ",E,"'[(","_DIEFLAG_",") S DIEFLAG=""
"RTN","VPSMRAR1",215,0)
 . I FIL=853.51 S RES(SUB)=$$SUB51(VPSPTIEN,TRNDT,FLD,DIEFLAG,VARRAY(SUB),.REQFLDS) ; transaction subfile
"RTN","VPSMRAR1",216,0)
 . I FIL=853.5121 S RES(SUB)=$$SUB5121(VPSPTIEN,TRNDT,VARRAY(SUB),DIEFLAG) ; 'MRAR Conducted with' subfile
"RTN","VPSMRAR1",217,0)
 . I FIL=853.52 S RES(SUB)=$$SUB52^VPSMRAR2(VPSPTIEN,TRNDT,FLD,DIEFLAG,VARRAY(SUB),.REQFLDS) ; allergies subfile
"RTN","VPSMRAR1",218,0)
 . I FIL=853.525!(FIL=853.526)!(FIL=853.527) S RES(SUB)=$$SUB52X^VPSMRAR2(FIL,SUBS(FIL),VPSPTIEN,TRNDT,VARRAY(SUB),.REQFLDS,DIEFLAG) ; allergies changed/confirmed/discrepancy subfile
"RTN","VPSMRAR1",219,0)
 . I FIL=853.57 S RES(SUB)=$$SUB57^VPSMRAR7(VPSPTIEN,TRNDT,FLD,DIEFLAG,VARRAY(SUB),.REQFLDS) ; allergy reactions subfile
"RTN","VPSMRAR1",220,0)
 . I FIL=853.54 S RES(SUB)=$$SUB54^VPSMRAR4(VPSPTIEN,TRNDT,FLD,DIEFLAG,VARRAY(SUB),.REQFLDS) ; medications subfile
"RTN","VPSMRAR1",221,0)
 . I FIL=853.5454!(FIL=853.5455)!(FIL=853.5452) S RES(SUB)=$$SUB54X^VPSMRAR4(FIL,SUBS(FIL),VPSPTIEN,TRNDT,VARRAY(SUB),.REQFLDS,DIEFLAG) ; MED changed/confirmed/discrepancy subfile
"RTN","VPSMRAR1",222,0)
 . I FIL=853.53 S RES(SUB)=$$SUB53^VPSMRAR3(VPSPTIEN,INTERFC,TRNDT,FLD,DIEFLAG,VARRAY(SUB),.REQFLDS) ; additional allergies subfile
"RTN","VPSMRAR1",223,0)
 . I FIL=853.55 S RES(SUB)=$$SUB55^VPSMRAR5(VPSPTIEN,INTERFC,TRNDT,FLD,DIEFLAG,VARRAY(SUB),.REQFLDS) ; additional medications subfile
"RTN","VPSMRAR1",224,0)
 Q
"RTN","VPSMRAR1",225,0)
 ;
"RTN","VPSMRAR1",226,0)
SUB51(PTIEN,DTIEN,FLD,DIEFLAG,DATA,REQFLDS) ; file the MRAR transaction (853.51)
"RTN","VPSMRAR1",227,0)
 ; INPUTS
"RTN","VPSMRAR1",228,0)
 ;   PTIEN   : D0 for 853.5 entry (Patient DFN Level)
"RTN","VPSMRAR1",229,0)
 ;   DTIEN   : D1 for 853.51 sub-entry (transaction date/time level)
"RTN","VPSMRAR1",230,0)
 ;   FLD     : Field # where the data will be filed
"RTN","VPSMRAR1",231,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR1",232,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR1",233,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR1",234,0)
 ; 
"RTN","VPSMRAR1",235,0)
 ; OUTPUT
"RTN","VPSMRAR1",236,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR1",237,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR1",238,0)
 ;
"RTN","VPSMRAR1",239,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR1",240,0)
 ;
"RTN","VPSMRAR1",241,0)
 ; -- Check required transaction 853.51 fields
"RTN","VPSMRAR1",242,0)
 ;S RESULT=$$CHKTRN(.REQFLDS,DATA)
"RTN","VPSMRAR1",243,0)
 ;Q:RESULT'="" RESULT
"RTN","VPSMRAR1",244,0)
 ;
"RTN","VPSMRAR1",245,0)
 ; -- file the transaction level data
"RTN","VPSMRAR1",246,0)
 N IENS S IENS=DTIEN_","_PTIEN_","
"RTN","VPSMRAR1",247,0)
 I FLD=105,$$GET1^DIQ(8925,$P(DATA,U,3)_",",.02,"I")'=PTIEN S RESULT=$$RESULT^VPSMRAR0(DATA,99,"DFN does not match DFN associated with TIU note")
"RTN","VPSMRAR1",248,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR1",249,0)
 S RESULT=$$FILE^VPSMRAR0(853.51,0,IENS,FLD,DIEFLAG,DATA)
"RTN","VPSMRAR1",250,0)
 Q RESULT
"RTN","VPSMRAR1",251,0)
 ;
"RTN","VPSMRAR1",252,0)
SUB5121(PTIEN,DTIEN,DATA,DIEFLAG) ; file the 'MRAR conducted with' multiple (853.5121)
"RTN","VPSMRAR1",253,0)
 ; INPUTS
"RTN","VPSMRAR1",254,0)
 ;   PTIEN : D0 for 853.5 entry (Patient DFN Level)
"RTN","VPSMRAR1",255,0)
 ;   DTIEN : D1 for 853.51 sub-entry (transaction date/time level)
"RTN","VPSMRAR1",256,0)
 ;   DATA  : Field Name^IENS^Field Value
"RTN","VPSMRAR1",257,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR1",258,0)
 ; 
"RTN","VPSMRAR1",259,0)
 ; OUTPUT
"RTN","VPSMRAR1",260,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR1",261,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR1",262,0)
 ;
"RTN","VPSMRAR1",263,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR1",264,0)
 ;
"RTN","VPSMRAR1",265,0)
 ; -- Get MRAR CONDUCTED WITH
"RTN","VPSMRAR1",266,0)
 N CNDCTWTH S CNDCTWTH=$P($P(DATA,U,2),",",2) ;Conduct With
"RTN","VPSMRAR1",267,0)
 I 'CNDCTWTH S RESULT=$$RESULT^VPSMRAR0(DATA,99,"MRAR Conduct With is required")
"RTN","VPSMRAR1",268,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR1",269,0)
 ;
"RTN","VPSMRAR1",270,0)
 ; -- Add MRAR CONDUCTED WITH sub entry if it doesn't exist
"RTN","VPSMRAR1",271,0)
 N EXIST S EXIST=$D(^VPS(853.5,PTIEN,"MRAR",DTIEN,"MRARWITH","B",CNDCTWTH))
"RTN","VPSMRAR1",272,0)
 I EXIST D
"RTN","VPSMRAR1",273,0)
 . S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Duplicate MRAR CONDUCTED WITH entry")
"RTN","VPSMRAR1",274,0)
 I 'EXIST D
"RTN","VPSMRAR1",275,0)
 . N ADDOK S ADDOK=$$ADDMRAR^VPSMRAR0(853.5121,DTIEN_","_PTIEN,CNDCTWTH,DIEFLAG)
"RTN","VPSMRAR1",276,0)
 . I 'ADDOK S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO. Failed to add MRAR CONDUCTED WITH entry")
"RTN","VPSMRAR1",277,0)
 ;
"RTN","VPSMRAR1",278,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR1",279,0)
 Q $$RESULT^VPSMRAR0(DATA,1,"")
"RTN","VPSMRAR1",280,0)
 ;
"RTN","VPSMRAR1",281,0)
CHKTRN(REQFLDS,DATA) ;Check required transaction fields
"RTN","VPSMRAR1",282,0)
 ; INPUTS 
"RTN","VPSMRAR1",283,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR1",284,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR1",285,0)
 ; 
"RTN","VPSMRAR1",286,0)
 ; OUTPUT
"RTN","VPSMRAR1",287,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR1",288,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR1",289,0)
 ;
"RTN","VPSMRAR1",290,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR1",291,0)
 ; -- Check required Kiosk Group or Encounter Clinic field
"RTN","VPSMRAR1",292,0)
 I '$D(REQFLDS("KIOSK GROUP",0)),'$D(REQFLDS("ENCOUNTER CLINIC",0)) D
"RTN","VPSMRAR1",293,0)
 . ;S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Kiosk Group or Encounter Clinic is required for every MRAR transaction")
"RTN","VPSMRAR1",294,0)
 . S RESULT=$$RESULT^VPSMRAR0("Required fields missing",99,"Kiosk Group or Encounter Clinic is required. Data not written to PDO.")
"RTN","VPSMRAR1",295,0)
 Q RESULT
"RTN","VPSMRAR2")
0^2^B23139399
"RTN","VPSMRAR2",1,0)
VPSMRAR2  ;DALOI/KML,WOIFO/BT - Cont. Update of VPS MRAR PDO file ;1/15/15 15:30
"RTN","VPSMRAR2",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSMRAR2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRAR2",4,0)
 ;
"RTN","VPSMRAR2",5,0)
 Q
"RTN","VPSMRAR2",6,0)
 ;
"RTN","VPSMRAR2",7,0)
SUB52(PTIEN,DTIEN,FLD,DIEFLAG,DATA,REQFLDS) ; file the ALLERGY multiple (853.52)
"RTN","VPSMRAR2",8,0)
 ; INPUTS 
"RTN","VPSMRAR2",9,0)
 ;   PTIEN   : D0 - Patient DFN for 853.5 entry1
"RTN","VPSMRAR2",10,0)
 ;   DTIEN   : D1 - transaction date/time ien for 853.51 sub-entry
"RTN","VPSMRAR2",11,0)
 ;   FLD     : Field # where the data will be filed
"RTN","VPSMRAR2",12,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR2",13,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR2",14,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR2",15,0)
 ; 
"RTN","VPSMRAR2",16,0)
 ; OUTPUT
"RTN","VPSMRAR2",17,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR2",18,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR2",19,0)
 ;
"RTN","VPSMRAR2",20,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR2",21,0)
 ;
"RTN","VPSMRAR2",22,0)
 ; -- Check required Allergy fields
"RTN","VPSMRAR2",23,0)
 S RESULT=$$CHKALR(.REQFLDS,DATA)
"RTN","VPSMRAR2",24,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",25,0)
 ;
"RTN","VPSMRAR2",26,0)
 ; -- Add Allergy sub entry if it doesn't exist
"RTN","VPSMRAR2",27,0)
 ;N ALLERID S ALLERID=$P(DATA,U,3) ;Allergy Entry #
"RTN","VPSMRAR2",28,0)
 N ALLERID S ALLERID=$P($P(DATA,U,2),",",2) ;Allergy Entry #
"RTN","VPSMRAR2",29,0)
 I '$D(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGY","B",ALLERID)) D
"RTN","VPSMRAR2",30,0)
 . N ADDOK S ADDOK=$$ADDMRAR^VPSMRAR0(853.52,DTIEN_","_PTIEN,ALLERID,DIEFLAG)
"RTN","VPSMRAR2",31,0)
 . I 'ADDOK S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO. Failed to add Allergy entry")
"RTN","VPSMRAR2",32,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",33,0)
 ;
"RTN","VPSMRAR2",34,0)
 ; -- Get Allergy IEN
"RTN","VPSMRAR2",35,0)
 N ALLERIEN S ALLERIEN=$O(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGY","B",ALLERID,""))
"RTN","VPSMRAR2",36,0)
 I ALLERIEN="" S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO")
"RTN","VPSMRAR2",37,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",38,0)
 I FLD=.02,$$GET1^DIQ(120.8,$P(DATA,U,3)_",",.01,"I")'=PTIEN S RESULT=$$RESULT^VPSMRAR0(DATA,99,"DFN does not match DFN associated with PATIENT ALLERGIES")
"RTN","VPSMRAR2",39,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",40,0)
 ;
"RTN","VPSMRAR2",41,0)
 ; -- Store 853.52 field entries
"RTN","VPSMRAR2",42,0)
 N WP S WP=FLD="1"!(FLD=2)!(FLD=3)
"RTN","VPSMRAR2",43,0)
 N IENS S IENS=ALLERIEN_","_DTIEN_","_PTIEN_","
"RTN","VPSMRAR2",44,0)
 S RESULT=$$FILE^VPSMRAR0(853.52,WP,IENS,FLD,DIEFLAG,DATA)
"RTN","VPSMRAR2",45,0)
 ;
"RTN","VPSMRAR2",46,0)
 Q RESULT
"RTN","VPSMRAR2",47,0)
 ;
"RTN","VPSMRAR2",48,0)
SUB52X(SUBFIL,SUBS,PTIEN,DTIEN,DATA,REQFLDS,DIEFLAG) ; file the ALLERGY CHANGED INDICATORS (853.525)
"RTN","VPSMRAR2",49,0)
 ; INPUTS 
"RTN","VPSMRAR2",50,0)
 ;   SUBFIL  : Sub File# : 853.525, 853.526, or 853.527
"RTN","VPSMRAR2",51,0)
 ;   SUBS    : Subscript associated with the Sub File : ACHG, ACNFR, ADISCR
"RTN","VPSMRAR2",52,0)
 ;   PTIEN   : D0 - Patient DFN for 853.5 entry1
"RTN","VPSMRAR2",53,0)
 ;   DTIEN   : D1 - transaction date/time ien for 853.51 sub-entry
"RTN","VPSMRAR2",54,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR2",55,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR2",56,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR2",57,0)
 ; 
"RTN","VPSMRAR2",58,0)
 ; OUTPUT
"RTN","VPSMRAR2",59,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR2",60,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR2",61,0)
 ;
"RTN","VPSMRAR2",62,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR2",63,0)
 ;
"RTN","VPSMRAR2",64,0)
 ; -- Check required Allergy fields
"RTN","VPSMRAR2",65,0)
 S RESULT=$$CHKALC(.REQFLDS,DATA)
"RTN","VPSMRAR2",66,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",67,0)
 ;
"RTN","VPSMRAR2",68,0)
 ; -- Add Allergy changed/confirmed/discrepancy sub entry if it doesn't exist
"RTN","VPSMRAR2",69,0)
 N ALLERID S ALLERID=$P($P(DATA,U,2),",",2)
"RTN","VPSMRAR2",70,0)
 N AIEN S AIEN=$O(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGY","B",ALLERID,0))
"RTN","VPSMRAR2",71,0)
 I 'AIEN S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Corrupted Allergy entry")
"RTN","VPSMRAR2",72,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",73,0)
 ;
"RTN","VPSMRAR2",74,0)
 N ALLCHGID S ALLCHGID=$P($P(DATA,U,2),",",3)
"RTN","VPSMRAR2",75,0)
 ;I $P(DATA,U,3)'=ALLCHGID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Value does not match third index")
"RTN","VPSMRAR2",76,0)
 ;Q:RESULT'="" RESULT
"RTN","VPSMRAR2",77,0)
 N EXIST S EXIST=$D(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGY",AIEN,SUBS,"B",ALLCHGID))
"RTN","VPSMRAR2",78,0)
 I EXIST S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Duplicate Allergy Changed/Confirmed/Discrepancy entry")
"RTN","VPSMRAR2",79,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",80,0)
 ;
"RTN","VPSMRAR2",81,0)
 N OK S OK=$$ADDMRAR^VPSMRAR0(SUBFIL,AIEN_","_DTIEN_","_PTIEN,ALLCHGID)
"RTN","VPSMRAR2",82,0)
 I 'OK S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Unable to file Allergy Changed/Confirmed/Discrepancy entry")
"RTN","VPSMRAR2",83,0)
 I OK S RESULT=$$RESULT^VPSMRAR0(DATA,1,"") ; data for specific field was filed successfully into PDO record
"RTN","VPSMRAR2",84,0)
 ;
"RTN","VPSMRAR2",85,0)
 Q RESULT
"RTN","VPSMRAR2",86,0)
  ;
"RTN","VPSMRAR2",87,0)
CHKALR(REQFLDS,DATA) ;Check required Allergy fields
"RTN","VPSMRAR2",88,0)
 ; INPUTS 
"RTN","VPSMRAR2",89,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR2",90,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR2",91,0)
 ; 
"RTN","VPSMRAR2",92,0)
 ; OUTPUT
"RTN","VPSMRAR2",93,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR2",94,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR2",95,0)
 ;
"RTN","VPSMRAR2",96,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR2",97,0)
 ; -- Allergy Entry # is required field
"RTN","VPSMRAR2",98,0)
 N ALLERID S ALLERID=$P($P(DATA,U,2),",",2)
"RTN","VPSMRAR2",99,0)
 I 'ALLERID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Allergy Entry # is required")
"RTN","VPSMRAR2",100,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",101,0)
 ;
"RTN","VPSMRAR2",102,0)
 ; -- For Local VistA, Local Allergy ID is required
"RTN","VPSMRAR2",103,0)
 ; -- For Remote (CDW), Remote Allergy ID and Remote Allergy Name are required
"RTN","VPSMRAR2",104,0)
 N ISLOCAL S ISLOCAL=$D(REQFLDS("LOCAL ALLERGY ID",ALLERID))
"RTN","VPSMRAR2",105,0)
 N ISREMOTE S ISREMOTE=$D(REQFLDS("REMOTE ALLERGY ID",ALLERID))&$D(REQFLDS("REMOTE ALLERGY NAME",ALLERID))
"RTN","VPSMRAR2",106,0)
 I 'ISLOCAL&'ISREMOTE S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Local Allergy ID or Remote Allergy ID and Remote Allergy Name are required")
"RTN","VPSMRAR2",107,0)
 Q RESULT
"RTN","VPSMRAR2",108,0)
 ;
"RTN","VPSMRAR2",109,0)
CHKALC(REQFLDS,DATA) ;Check required Allergy Changed/confirmed/discrepancy fields
"RTN","VPSMRAR2",110,0)
 ; INPUTS 
"RTN","VPSMRAR2",111,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR2",112,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR2",113,0)
 ; 
"RTN","VPSMRAR2",114,0)
 ; OUTPUT
"RTN","VPSMRAR2",115,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR2",116,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR2",117,0)
 ;
"RTN","VPSMRAR2",118,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR2",119,0)
 ; -- Allergy Entry # is required field
"RTN","VPSMRAR2",120,0)
 N ALLERID S ALLERID=$P($P(DATA,U,2),",",2)
"RTN","VPSMRAR2",121,0)
 I 'ALLERID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Allergy Entry # is required")
"RTN","VPSMRAR2",122,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",123,0)
 ;
"RTN","VPSMRAR2",124,0)
 N ALLCHGID S ALLCHGID=$P($P(DATA,U,2),",",3)
"RTN","VPSMRAR2",125,0)
 I 'ALLCHGID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Allergy Changed/Confirmed/Discrepancy is required")
"RTN","VPSMRAR2",126,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR2",127,0)
 ;
"RTN","VPSMRAR2",128,0)
 I '$D(^VPS(853.3,ALLCHGID)) S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Invalid Allergy Changed/Confirmed/Discrepancy")
"RTN","VPSMRAR2",129,0)
 Q RESULT
"RTN","VPSMRAR3")
0^9^B9329908
"RTN","VPSMRAR3",1,0)
VPSMRAR3  ;DALOI/KML,WOIFO/BT - Cont. Update of VPS MRAR PDO file ;1/15/15 15:30
"RTN","VPSMRAR3",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSMRAR3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRAR3",4,0)
 ;
"RTN","VPSMRAR3",5,0)
 Q
"RTN","VPSMRAR3",6,0)
 ;
"RTN","VPSMRAR3",7,0)
SUB53(PTIEN,INTERFC,DTIEN,FLD,DIEFLAG,DATA,REQFLDS) ; file the ADDITIONAL ALLERGIES multiple (853.53)
"RTN","VPSMRAR3",8,0)
 ; INPUTS
"RTN","VPSMRAR3",9,0)
 ;   PTIEN   : Patient DFN for 853.5 entry
"RTN","VPSMRAR3",10,0)
 ;   INTERFC : value of 'S' indicates that the entries in VPSMRAR coming from Staff-facing interface module.
"RTN","VPSMRAR3",11,0)
 ;           : value of 'P' indicates that the entries in VPSMRAR coming from Patient-facing interface module.
"RTN","VPSMRAR3",12,0)
 ;   DTIEN   : transaction date/time ien for 853.51 sub-entry
"RTN","VPSMRAR3",13,0)
 ;   FLD     : Field # where the data will be filed
"RTN","VPSMRAR3",14,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR3",15,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR3",16,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR3",17,0)
 ; 
"RTN","VPSMRAR3",18,0)
 ; OUTPUT
"RTN","VPSMRAR3",19,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR3",20,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR3",21,0)
 ; 
"RTN","VPSMRAR3",22,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR3",23,0)
 ;
"RTN","VPSMRAR3",24,0)
 ; -- Check required Additional Allergy fields
"RTN","VPSMRAR3",25,0)
 S RESULT=$$CHKADALR(INTERFC,.REQFLDS,DATA)
"RTN","VPSMRAR3",26,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR3",27,0)
 ;
"RTN","VPSMRAR3",28,0)
 ; -- Add Allergy additional sub entry if it doesn't exist
"RTN","VPSMRAR3",29,0)
 N ALLERID S ALLERID=$P($P(DATA,U,2),",",2) ;Additional Allergy Entry #
"RTN","VPSMRAR3",30,0)
 I '$D(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGYADD","B",ALLERID)) D  ; allergy sub-entry does not exist yet so create stub entry
"RTN","VPSMRAR3",31,0)
 . N ADDOK S ADDOK=$$ADDMRAR^VPSMRAR0(853.53,DTIEN_","_PTIEN,ALLERID,DIEFLAG)
"RTN","VPSMRAR3",32,0)
 . I 'ADDOK S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO. Failed to add Allergy entry")
"RTN","VPSMRAR3",33,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR3",34,0)
 ;
"RTN","VPSMRAR3",35,0)
 ; -- Get Allergy additional IEN
"RTN","VPSMRAR3",36,0)
 N ALLERIEN S ALLERIEN=$O(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGYADD","B",ALLERID,""))
"RTN","VPSMRAR3",37,0)
 Q:ALLERIEN="" $$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO")
"RTN","VPSMRAR3",38,0)
 ;
"RTN","VPSMRAR3",39,0)
 ; -- Store 853.53 field entries
"RTN","VPSMRAR3",40,0)
 N WP S WP=FLD="1"!(FLD=1.5)
"RTN","VPSMRAR3",41,0)
 N IENS S IENS=ALLERIEN_","_DTIEN_","_PTIEN_","
"RTN","VPSMRAR3",42,0)
 S RESULT=$$FILE^VPSMRAR0(853.53,WP,IENS,FLD,DIEFLAG,DATA)
"RTN","VPSMRAR3",43,0)
 ;
"RTN","VPSMRAR3",44,0)
 Q RESULT
"RTN","VPSMRAR3",45,0)
 ;
"RTN","VPSMRAR3",46,0)
CHKADALR(INTERFC,REQFLDS,DATA) ;Check required Additional Allergy fields
"RTN","VPSMRAR3",47,0)
 ; INPUTS 
"RTN","VPSMRAR3",48,0)
 ;   INTERFC : value of 'S' indicates that the entries in VPSMRAR coming from Staff-facing interface module.
"RTN","VPSMRAR3",49,0)
 ;           : value of 'P' indicates that the entries in VPSMRAR coming from Patient-facing interface module.
"RTN","VPSMRAR3",50,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR3",51,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR3",52,0)
 ; 
"RTN","VPSMRAR3",53,0)
 ; OUTPUT
"RTN","VPSMRAR3",54,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR3",55,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR3",56,0)
 ;
"RTN","VPSMRAR3",57,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR3",58,0)
 ; -- Get Additional Allergy Entry #
"RTN","VPSMRAR3",59,0)
 N ALLERID S ALLERID=$P($P(DATA,U,2),",",2) ;Additional Allergy Entry #
"RTN","VPSMRAR3",60,0)
 I 'ALLERID S RESULT="99^Additional Allergy Entry # is required"
"RTN","VPSMRAR3",61,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR3",62,0)
 ; 
"RTN","VPSMRAR3",63,0)
 ; -- Additional Allergy Name must exist
"RTN","VPSMRAR3",64,0)
 I INTERFC="P",'$D(REQFLDS("ADD ALLERGY-VET",ALLERID)) S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Additional Allergy Name (Patient Interface) is required")
"RTN","VPSMRAR3",65,0)
 I INTERFC="S",'$D(REQFLDS("ADD ALLERGY-PROVIDER",ALLERID)) S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Additional Allergy Name (Staff Interface) is required")
"RTN","VPSMRAR3",66,0)
 Q RESULT
"RTN","VPSMRAR4")
0^15^B20027135
"RTN","VPSMRAR4",1,0)
VPSMRAR4  ;DALOI/KML,WOIFO/BT - Update of VPS MRAR PDO file ;1/15/15 15:30
"RTN","VPSMRAR4",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSMRAR4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRAR4",4,0)
 ;
"RTN","VPSMRAR4",5,0)
 Q
"RTN","VPSMRAR4",6,0)
 ;
"RTN","VPSMRAR4",7,0)
SUB54(PTIEN,DTIEN,FLD,DIEFLAG,DATA,REQFLDS) ; file the MEDICATIONS multiple (853.54)
"RTN","VPSMRAR4",8,0)
 ; INPUTS
"RTN","VPSMRAR4",9,0)
 ;   PTIEN   : Patient DFN for 853.5 entry
"RTN","VPSMRAR4",10,0)
 ;   DTIEN   : transaction date/time ien for 853.51 sub-entry
"RTN","VPSMRAR4",11,0)
 ;   FLD     : Field # where the data will be filed
"RTN","VPSMRAR4",12,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR4",13,0)
 ;   DATA    : composite string assigned to a subscript in the local array passed in by Vecna for the specific field
"RTN","VPSMRAR4",14,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR4",15,0)
 ; 
"RTN","VPSMRAR4",16,0)
 ; OUTPUT
"RTN","VPSMRAR4",17,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR4",18,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR4",19,0)
 ; 
"RTN","VPSMRAR4",20,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR4",21,0)
 ;
"RTN","VPSMRAR4",22,0)
 S RESULT=$$CHKMED(.REQFLDS,DATA)
"RTN","VPSMRAR4",23,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR4",24,0)
 ;
"RTN","VPSMRAR4",25,0)
 ; -- Add Medication sub entry if it doesn't exist
"RTN","VPSMRAR4",26,0)
 N MEDID S MEDID=$P($P(DATA,U,2),",",2) ;MEDICATIONS Entry #
"RTN","VPSMRAR4",27,0)
 I '$D(^VPS(853.5,PTIEN,"MRAR",DTIEN,"MEDS","B",MEDID)) D  ; MEDS sub-entry does not exist yet so create stub entry
"RTN","VPSMRAR4",28,0)
 . N ADDOK S ADDOK=$$ADDMRAR^VPSMRAR0(853.54,DTIEN_","_PTIEN,MEDID,DIEFLAG)
"RTN","VPSMRAR4",29,0)
 . I 'ADDOK S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO. Failed to add Medications entry")
"RTN","VPSMRAR4",30,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR4",31,0)
 ;
"RTN","VPSMRAR4",32,0)
 ; -- Get Medication IEN
"RTN","VPSMRAR4",33,0)
 N MEDIEN S MEDIEN=$O(^VPS(853.5,PTIEN,"MRAR",DTIEN,"MEDS","B",MEDID,""))
"RTN","VPSMRAR4",34,0)
 Q:MEDIEN="" $$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO")
"RTN","VPSMRAR4",35,0)
 ;
"RTN","VPSMRAR4",36,0)
 ; -- Store 853.54 field entries
"RTN","VPSMRAR4",37,0)
 N WP S WP=FLD=23!(FLD=24)!(FLD=25)
"RTN","VPSMRAR4",38,0)
 N IENS S IENS=MEDIEN_","_DTIEN_","_PTIEN_","
"RTN","VPSMRAR4",39,0)
 S RESULT=$$FILE^VPSMRAR0(853.54,WP,IENS,FLD,DIEFLAG,DATA)
"RTN","VPSMRAR4",40,0)
 ;
"RTN","VPSMRAR4",41,0)
 Q RESULT
"RTN","VPSMRAR4",42,0)
 ;
"RTN","VPSMRAR4",43,0)
SUB54X(SUBFIL,SUBS,PTIEN,DTIEN,DATA,REQFLDS,DIEFLAG) ; file the MED CHANGED/CONFIRMED/DISCREPANCY INDICATORS
"RTN","VPSMRAR4",44,0)
 ; INPUTS 
"RTN","VPSMRAR4",45,0)
 ;   SUBFIL  : Sub File# : 853.5454, 853.5455, or 853.5452
"RTN","VPSMRAR4",46,0)
 ;   SUBS    : Subscript associated with the Sub File : MCHG, MCNFR, MDISCR
"RTN","VPSMRAR4",47,0)
 ;   PTIEN   : D0 - Patient DFN for 853.5 entry1
"RTN","VPSMRAR4",48,0)
 ;   DTIEN   : D1 - transaction date/time ien for 853.51 sub-entry
"RTN","VPSMRAR4",49,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR4",50,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR4",51,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR4",52,0)
 ; 
"RTN","VPSMRAR4",53,0)
 ; OUTPUT
"RTN","VPSMRAR4",54,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR4",55,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR4",56,0)
 ;
"RTN","VPSMRAR4",57,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR4",58,0)
 ;
"RTN","VPSMRAR4",59,0)
 ; -- Check required Medication fields
"RTN","VPSMRAR4",60,0)
 S RESULT=$$CHKALM(.REQFLDS,DATA)
"RTN","VPSMRAR4",61,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR4",62,0)
 ;
"RTN","VPSMRAR4",63,0)
 ; -- Add Medication changed/confirmed/discrepancy sub entry if it doesn't exist
"RTN","VPSMRAR4",64,0)
 N MEDID S MEDID=$P($P(DATA,U,2),",",2)
"RTN","VPSMRAR4",65,0)
 N MIEN S MIEN=$O(^VPS(853.5,PTIEN,"MRAR",DTIEN,"MEDS","B",MEDID,0))
"RTN","VPSMRAR4",66,0)
 I 'MIEN S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Corrupted Medication entry")
"RTN","VPSMRAR4",67,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR4",68,0)
 ;
"RTN","VPSMRAR4",69,0)
 N MEDCHGID S MEDCHGID=$P($P(DATA,U,2),",",3)
"RTN","VPSMRAR4",70,0)
 ;I $P(DATA,U,3)'=MEDCHGID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Value does not match third index")
"RTN","VPSMRAR4",71,0)
 ;Q:RESULT'="" RESULT
"RTN","VPSMRAR4",72,0)
 N EXIST S EXIST=$D(^VPS(853.5,PTIEN,"MRAR",DTIEN,"MEDS",MIEN,SUBS,"B",MEDCHGID))
"RTN","VPSMRAR4",73,0)
 I EXIST S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Duplicate Medication Changed/Confirmed/Discrepancy entry")
"RTN","VPSMRAR4",74,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR4",75,0)
 ;
"RTN","VPSMRAR4",76,0)
 N OK S OK=$$ADDMRAR^VPSMRAR0(SUBFIL,MIEN_","_DTIEN_","_PTIEN,MEDCHGID,"")
"RTN","VPSMRAR4",77,0)
 I 'OK S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Unable to file Medication Changed/Confirmed/Discrepancy entry")
"RTN","VPSMRAR4",78,0)
 I OK S RESULT=$$RESULT^VPSMRAR0(DATA,1,"") ; data for specific field was filed successfully into PDO record
"RTN","VPSMRAR4",79,0)
 ;
"RTN","VPSMRAR4",80,0)
 Q RESULT
"RTN","VPSMRAR4",81,0)
 ;
"RTN","VPSMRAR4",82,0)
CHKMED(REQFLDS,DATA) ;Check required Medication fields
"RTN","VPSMRAR4",83,0)
 ; INPUTS 
"RTN","VPSMRAR4",84,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR4",85,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR4",86,0)
 ; 
"RTN","VPSMRAR4",87,0)
 ; OUTPUT
"RTN","VPSMRAR4",88,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR4",89,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR4",90,0)
 ;
"RTN","VPSMRAR4",91,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR4",92,0)
 ; -- Medication Entry # is required field
"RTN","VPSMRAR4",93,0)
 N MEDID S MEDID=$P($P(DATA,U,2),",",2) ;MEDICATIONS Entry #
"RTN","VPSMRAR4",94,0)
 I 'MEDID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Medication Entry # is required")
"RTN","VPSMRAR4",95,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR4",96,0)
 ;
"RTN","VPSMRAR4",97,0)
 ; -- Medication ID and Name must exist
"RTN","VPSMRAR4",98,0)
 N REQEXIST S REQEXIST=$D(REQFLDS("MED ID",MEDID))&$D(REQFLDS("MEDICATION NAME",MEDID))
"RTN","VPSMRAR4",99,0)
 I 'REQEXIST S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Med ID and Medication Name are required")
"RTN","VPSMRAR4",100,0)
 Q RESULT
"RTN","VPSMRAR4",101,0)
 ;
"RTN","VPSMRAR4",102,0)
CHKALM(REQFLDS,DATA) ;Check required Med Changed/confirmed/discrepancy fields
"RTN","VPSMRAR4",103,0)
 ; INPUTS 
"RTN","VPSMRAR4",104,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR4",105,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR4",106,0)
 ; 
"RTN","VPSMRAR4",107,0)
 ; OUTPUT
"RTN","VPSMRAR4",108,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR4",109,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR4",110,0)
 ;
"RTN","VPSMRAR4",111,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR4",112,0)
 ; -- Allergy Entry # is required field
"RTN","VPSMRAR4",113,0)
 N MEDID S MEDID=$P($P(DATA,U,2),",",2)
"RTN","VPSMRAR4",114,0)
 I 'MEDID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Medication Entry # is required")
"RTN","VPSMRAR4",115,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR4",116,0)
 ;
"RTN","VPSMRAR4",117,0)
 N MEDCHGID S MEDCHGID=$P($P(DATA,U,2),",",3)
"RTN","VPSMRAR4",118,0)
 I 'MEDCHGID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Medication Changed/Confirmed/Discrepancy is required")
"RTN","VPSMRAR4",119,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR4",120,0)
 ;
"RTN","VPSMRAR4",121,0)
 I '$D(^VPS(853.7,MEDCHGID)) S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Invalid Medication Changed/Confirmed/Discrepancy")
"RTN","VPSMRAR4",122,0)
 Q RESULT
"RTN","VPSMRAR5")
0^16^B10353660
"RTN","VPSMRAR5",1,0)
VPSMRAR5  ;DALOI/KML,WOIFO/BT - Cont. Update of VPS MRAR PDO file ;1/15/15 15:30
"RTN","VPSMRAR5",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSMRAR5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRAR5",4,0)
 ;
"RTN","VPSMRAR5",5,0)
 Q
"RTN","VPSMRAR5",6,0)
 ;
"RTN","VPSMRAR5",7,0)
SUB55(PTIEN,INTERFC,DTIEN,FLD,DIEFLAG,DATA,REQFLDS) ; file the ADDITIONAL MEDICATIONS multiple (853.55)
"RTN","VPSMRAR5",8,0)
 ; INPUTS
"RTN","VPSMRAR5",9,0)
 ;   PTIEN   : Patient DFN for 853.5 entry
"RTN","VPSMRAR5",10,0)
 ;   INTERFC : value of 'S' indicates that the entries in VPSMRAR coming from Staff-facing interface module.
"RTN","VPSMRAR5",11,0)
 ;           : value of 'P' indicates that the entries in VPSMRAR coming from Patient-facing interface module.
"RTN","VPSMRAR5",12,0)
 ;   DTIEN   : transaction date/time ien for 853.51 sub-entry
"RTN","VPSMRAR5",13,0)
 ;   FLD     : Field # where the data will be filed
"RTN","VPSMRAR5",14,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR5",15,0)
 ;   DATA    : composite string assigned to a subscript in the local array passed in by Vecna for the specific field
"RTN","VPSMRAR5",16,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR5",17,0)
 ; 
"RTN","VPSMRAR5",18,0)
 ; OUTPUT
"RTN","VPSMRAR5",19,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR5",20,0)
 ;   failed : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR5",21,0)
 ; 
"RTN","VPSMRAR5",22,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR5",23,0)
 ;
"RTN","VPSMRAR5",24,0)
 ; -- Check requried Additional Medication fields
"RTN","VPSMRAR5",25,0)
 S RESULT=$$CHKADMED(INTERFC,.REQFLDS,DATA)
"RTN","VPSMRAR5",26,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR5",27,0)
 ;
"RTN","VPSMRAR5",28,0)
 ; -- Add Medication sub entry if it doesn't exist
"RTN","VPSMRAR5",29,0)
 N MEDID S MEDID=$P($P(DATA,U,2),",",2) ;MEDICATIONS Entry #
"RTN","VPSMRAR5",30,0)
 I '$D(^VPS(853.5,PTIEN,"MRAR",DTIEN,"MEDSADD","B",MEDID)) D  ; ADD MEDS sub-entry does not exist yet so create stub entry
"RTN","VPSMRAR5",31,0)
 . N ADDOK S ADDOK=$$ADDMRAR^VPSMRAR0(853.55,DTIEN_","_PTIEN,MEDID,DIEFLAG)
"RTN","VPSMRAR5",32,0)
 . I 'ADDOK S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO. Failed to add Medications entry")
"RTN","VPSMRAR5",33,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR5",34,0)
 ;
"RTN","VPSMRAR5",35,0)
 ; -- Get Additional Medication IEN
"RTN","VPSMRAR5",36,0)
 N MEDIEN S MEDIEN=$O(^VPS(853.5,PTIEN,"MRAR",DTIEN,"MEDSADD","B",MEDID,""))
"RTN","VPSMRAR5",37,0)
 Q:MEDIEN="" $$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO")
"RTN","VPSMRAR5",38,0)
 ;
"RTN","VPSMRAR5",39,0)
 ; -- Store 853.55 field entries
"RTN","VPSMRAR5",40,0)
 N WP S WP=FLD=7!(FLD=12)
"RTN","VPSMRAR5",41,0)
 N IENS S IENS=MEDIEN_","_DTIEN_","_PTIEN_","
"RTN","VPSMRAR5",42,0)
 S RESULT=$$FILE^VPSMRAR0(853.55,WP,IENS,FLD,DIEFLAG,DATA)
"RTN","VPSMRAR5",43,0)
 ;
"RTN","VPSMRAR5",44,0)
 Q RESULT
"RTN","VPSMRAR5",45,0)
 ;
"RTN","VPSMRAR5",46,0)
CHKADMED(INTERFC,REQFLDS,DATA) ;Check required Additional Medication fields
"RTN","VPSMRAR5",47,0)
 ; INPUTS 
"RTN","VPSMRAR5",48,0)
 ;   INTERFC : value of 'S' indicates that the entries in VPSMRAR coming from Staff-facing interface module.
"RTN","VPSMRAR5",49,0)
 ;           : value of 'P' indicates that the entries in VPSMRAR coming from Patient-facing interface module.
"RTN","VPSMRAR5",50,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR5",51,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR5",52,0)
 ; 
"RTN","VPSMRAR5",53,0)
 ; OUTPUT
"RTN","VPSMRAR5",54,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR5",55,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR5",56,0)
 ;
"RTN","VPSMRAR5",57,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR5",58,0)
 ; -- Get Additional Medication Entry #
"RTN","VPSMRAR5",59,0)
 N MEDID S MEDID=$P($P(DATA,U,2),",",2) ;MEDICATIONS Entry #
"RTN","VPSMRAR5",60,0)
 I 'MEDID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Additional Medications Entry # is required")
"RTN","VPSMRAR5",61,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR5",62,0)
 ; 
"RTN","VPSMRAR5",63,0)
 ; -- Additional Medication Name must exist
"RTN","VPSMRAR5",64,0)
 I INTERFC="P",'$D(REQFLDS("PATIENT-FACING ADD MEDICATION",MEDID)) S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Additional Medication Name (Patient Interface) is required")
"RTN","VPSMRAR5",65,0)
 I INTERFC="S",'$D(REQFLDS("STAFF VIEW ADD MEDICATION",MEDID))&'$D(REQFLDS("VET VIEW ADD MEDICATION",MEDID)) S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Additional Medication Name (Staff Interface) is required")
"RTN","VPSMRAR5",66,0)
 Q RESULT
"RTN","VPSMRAR7")
0^17^B10840964
"RTN","VPSMRAR7",1,0)
VPSMRAR7  ;DALOI/KML,WOIFO/BT - Cont. Update of VPS MRAR PDO file ;1/15/15 15:30
"RTN","VPSMRAR7",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSMRAR7",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRAR7",4,0)
 ;
"RTN","VPSMRAR7",5,0)
 Q
"RTN","VPSMRAR7",6,0)
 ;
"RTN","VPSMRAR7",7,0)
SUB57(PTIEN,DTIEN,FLD,DIEFLAG,DATA,REQFLDS) ; file the ALLERGY REACTIONS multiple (853.57)
"RTN","VPSMRAR7",8,0)
 ; INPUTS
"RTN","VPSMRAR7",9,0)
 ;   PTIEN   : Patient DFN for 853.5 entry
"RTN","VPSMRAR7",10,0)
 ;   DTIEN   : transaction date/time ien for 853.51 sub-entry
"RTN","VPSMRAR7",11,0)
 ;   FLD     : Field # where the data will be filed
"RTN","VPSMRAR7",12,0)
 ;   DIEFLAG : Filing Type (I = Internal, E = External)
"RTN","VPSMRAR7",13,0)
 ;   DATA    : composite string assigned to a subscript in the local array passed in by Vecna for the specific field
"RTN","VPSMRAR7",14,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR7",15,0)
 ; OUTPUT
"RTN","VPSMRAR7",16,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR7",17,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR7",18,0)
 ;
"RTN","VPSMRAR7",19,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR7",20,0)
 ;
"RTN","VPSMRAR7",21,0)
 ; -- Check required Allergy fields
"RTN","VPSMRAR7",22,0)
 S RESULT=$$CHKALR^VPSMRAR2(.REQFLDS,DATA)
"RTN","VPSMRAR7",23,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR7",24,0)
 ;
"RTN","VPSMRAR7",25,0)
 ; -- Check required Allergy Reaction fields
"RTN","VPSMRAR7",26,0)
 S RESULT=$$CHKREACT(.REQFLDS,DATA)
"RTN","VPSMRAR7",27,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR7",28,0)
 ;
"RTN","VPSMRAR7",29,0)
 ; -- retrieve the allergy ien
"RTN","VPSMRAR7",30,0)
 N ALLERID S ALLERID=$P($P(DATA,U,2),",",2)
"RTN","VPSMRAR7",31,0)
 N AIEN S AIEN=$O(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGY","B",ALLERID,""))
"RTN","VPSMRAR7",32,0)
 Q:AIEN="" $$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO")
"RTN","VPSMRAR7",33,0)
 ;
"RTN","VPSMRAR7",34,0)
 ; -- Add Allergy Reactions sub entry if it doesn't exist
"RTN","VPSMRAR7",35,0)
 N REACTID S REACTID=$P($P(DATA,U,2),",",3)
"RTN","VPSMRAR7",36,0)
 ;I $P(DATA,U,3)'=REACTID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Value does not match third index")
"RTN","VPSMRAR7",37,0)
 ;Q:RESULT'="" RESULT
"RTN","VPSMRAR7",38,0)
 I '$D(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGY",AIEN,"REACTIONS","B",REACTID)) D  ; REACTIONS sub-entry not yet created for this allergy
"RTN","VPSMRAR7",39,0)
 . N ADDOK S ADDOK=$$ADDMRAR^VPSMRAR0(853.57,AIEN_","_DTIEN_","_PTIEN,REACTID,DIEFLAG)
"RTN","VPSMRAR7",40,0)
 . I 'ADDOK S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO. Failed to add Allergy Reactions entry")
"RTN","VPSMRAR7",41,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR7",42,0)
 ;
"RTN","VPSMRAR7",43,0)
 ; -- Get Allergy Reactions IEN
"RTN","VPSMRAR7",44,0)
 N REACTIEN S REACTIEN=$O(^VPS(853.5,PTIEN,"MRAR",DTIEN,"ALLERGY",AIEN,"REACTIONS","B",REACTID,""))
"RTN","VPSMRAR7",45,0)
 Q:REACTIEN="" $$RESULT^VPSMRAR0(DATA,99,"Data was not filed into MRAR PDO")
"RTN","VPSMRAR7",46,0)
 ;
"RTN","VPSMRAR7",47,0)
 ; -- Store 853.57 field entries
"RTN","VPSMRAR7",48,0)
 N IENS S IENS=REACTIEN_","_AIEN_","_DTIEN_","_PTIEN_","
"RTN","VPSMRAR7",49,0)
 S RESULT=$$FILE^VPSMRAR0(853.57,0,IENS,FLD,DIEFLAG,DATA)
"RTN","VPSMRAR7",50,0)
 ;
"RTN","VPSMRAR7",51,0)
 Q RESULT
"RTN","VPSMRAR7",52,0)
 ;
"RTN","VPSMRAR7",53,0)
CHKREACT(REQFLDS,DATA) ;Check required Allergy Reaction fields
"RTN","VPSMRAR7",54,0)
 ; INPUTS 
"RTN","VPSMRAR7",55,0)
 ;   REQFLDS : Array of required fields by fieldname and entry number
"RTN","VPSMRAR7",56,0)
 ;   DATA    : Field Name^IENS^Field Value
"RTN","VPSMRAR7",57,0)
 ; 
"RTN","VPSMRAR7",58,0)
 ; OUTPUT
"RTN","VPSMRAR7",59,0)
 ;   success : RESULT = Field Name^IENS^Field Value^1
"RTN","VPSMRAR7",60,0)
 ;   failed  : RESULT = Field Name^IENS^Field Value^99^error text describing why data did not get filed
"RTN","VPSMRAR7",61,0)
 ;
"RTN","VPSMRAR7",62,0)
 N RESULT S RESULT=""
"RTN","VPSMRAR7",63,0)
 ; -- Allergy Reaction Entry # is required field
"RTN","VPSMRAR7",64,0)
 N ALLERID S ALLERID=$P($P(DATA,U,2),",",2)
"RTN","VPSMRAR7",65,0)
 N REACTID S REACTID=$P($P(DATA,U,2),",",3)
"RTN","VPSMRAR7",66,0)
 I 'REACTID S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Allergy Reaction Entry # is required")
"RTN","VPSMRAR7",67,0)
 Q:RESULT'="" RESULT
"RTN","VPSMRAR7",68,0)
 ; 
"RTN","VPSMRAR7",69,0)
 ; -- For Local VistA, Local Reaction ID is required
"RTN","VPSMRAR7",70,0)
 ; -- For Remote (CDW), Remote Reaction ID and Remote Reaction Name are required
"RTN","VPSMRAR7",71,0)
 N ISLOCAL S ISLOCAL=$D(REQFLDS("LOCAL REACTION ID",ALLERID,REACTID))
"RTN","VPSMRAR7",72,0)
 N ISREMOTE S ISREMOTE=$D(REQFLDS("REMOTE REACTION ID",ALLERID,REACTID))&$D(REQFLDS("REMOTE REACTION NAME",ALLERID,REACTID))
"RTN","VPSMRAR7",73,0)
 I 'ISLOCAL&'ISREMOTE S RESULT=$$RESULT^VPSMRAR0(DATA,99,"Local Reaction ID or Remote Reaction ID and Remote Reaction Name are required")
"RTN","VPSMRAR7",74,0)
 Q RESULT
"RTN","VPSMRAR9")
0^19^B4594710
"RTN","VPSMRAR9",1,0)
VPSMRAR9 ;WOIFO/BT - Get the last MRAR data for a patient;01/29/15 15:30
"RTN","VPSMRAR9",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 29, 2015;Build 64
"RTN","VPSMRAR9",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRAR9",4,0)
 ;
"RTN","VPSMRAR9",5,0)
 Q
"RTN","VPSMRAR9",6,0)
 ;IA #10103 - supported use of XLFDT functions
"RTN","VPSMRAR9",7,0)
 ;IA #10104 - supported use of XLFSTR function
"RTN","VPSMRAR9",8,0)
 ;
"RTN","VPSMRAR9",9,0)
GET(VPSMRAR,VPSNUM,VPSTYP) ; RPC: VPS GET LAST MRAR
"RTN","VPSMRAR9",10,0)
 ; INPUT
"RTN","VPSMRAR9",11,0)
 ;   VPSNUM : Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSMRAR9",12,0)
 ;   VPSTYP : Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSMRAR9",13,0)
 ; OUTPUT
"RTN","VPSMRAR9",14,0)
 ;   VPSMRAR: local array contains all field names/values for the last mrar
"RTN","VPSMRAR9",15,0)
 ;   WITH ERROR -> VPSMRAR(0) = -1 ^ error message
"RTN","VPSMRAR9",16,0)
 ;   SUCCESS    -> VPSMRAR(0) = 1
"RTN","VPSMRAR9",17,0)
 ;              -> VPSMRAR(1..n) = FIELD NAME^SUBS^DATA
"RTN","VPSMRAR9",18,0)
 ;
"RTN","VPSMRAR9",19,0)
 ; -- validate input parameters
"RTN","VPSMRAR9",20,0)
 S VPSNUM=$G(VPSNUM)
"RTN","VPSMRAR9",21,0)
 S VPSTYP=$G(VPSTYP)
"RTN","VPSMRAR9",22,0)
 N VPSDFN S VPSDFN=$$VALIDATE^VPSRPC1(VPSTYP,VPSNUM)
"RTN","VPSMRAR9",23,0)
 I VPSDFN<1 S VPSMRAR(0)=-1_U_$P(VPSDFN,U,2) QUIT
"RTN","VPSMRAR9",24,0)
 ;
"RTN","VPSMRAR9",25,0)
 ; -- get last mrar ien for the patient
"RTN","VPSMRAR9",26,0)
 N LASTMRAR S LASTMRAR=$O(^VPS(853.5,VPSDFN,"MRAR","B",""),-1)
"RTN","VPSMRAR9",27,0)
 I 'LASTMRAR S VPSMRAR(0)=-1_U_"This patient has no MRAR transaction." QUIT
"RTN","VPSMRAR9",28,0)
 ;
"RTN","VPSMRAR9",29,0)
 ; -- retrieve transaction level fields and store them in VPSMRAR
"RTN","VPSMRAR9",30,0)
 D TRANS^VPSMR51(.VPSMRAR,VPSDFN,LASTMRAR)
"RTN","VPSMRAR9",31,0)
 ;
"RTN","VPSMRAR9",32,0)
 ; -- retrieve conducted with level fields and store them in VPSMRAR
"RTN","VPSMRAR9",33,0)
 D CNDWTH^VPSMR51(.VPSMRAR,VPSDFN,LASTMRAR)
"RTN","VPSMRAR9",34,0)
 ;
"RTN","VPSMRAR9",35,0)
 ; -- retrieve Allergy level fields and store them in VPSMRAR
"RTN","VPSMRAR9",36,0)
 D ALLERGY^VPSMR52(.VPSMRAR,VPSDFN,LASTMRAR)
"RTN","VPSMRAR9",37,0)
 ;
"RTN","VPSMRAR9",38,0)
 ; -- retrieve Additional Allergy level fields and store them in VPSMRAR
"RTN","VPSMRAR9",39,0)
 D ADDALLER^VPSMR52(.VPSMRAR,VPSDFN,LASTMRAR)
"RTN","VPSMRAR9",40,0)
 ;
"RTN","VPSMRAR9",41,0)
 ; -- retrieve Medication level fields and store them in VPSMRAR
"RTN","VPSMRAR9",42,0)
 D MEDS^VPSMR54(.VPSMRAR,VPSDFN,LASTMRAR)
"RTN","VPSMRAR9",43,0)
 ;
"RTN","VPSMRAR9",44,0)
 ; -- retrieve Additional Medication level fields and store them in VPSMRAR
"RTN","VPSMRAR9",45,0)
 D ADDMEDS^VPSMR54(.VPSMRAR,VPSDFN,LASTMRAR)
"RTN","VPSMRAR9",46,0)
 ;
"RTN","VPSMRAR9",47,0)
 S VPSMRAR(0)=1
"RTN","VPSMRAR9",48,0)
 QUIT
"RTN","VPSMRAR9",49,0)
 ;
"RTN","VPSMRAR9",50,0)
ADD(VPSMRAR,FLDNAM,SUBS,INVAL,EXVAL) ;Add the record to VPSMRAR
"RTN","VPSMRAR9",51,0)
 ; INPUT
"RTN","VPSMRAR9",52,0)
 ;   FLDNAM : Field name to store
"RTN","VPSMRAR9",53,0)
 ;   SUBS   : Subscript (unique identifier for multiple values)
"RTN","VPSMRAR9",54,0)
 ;   INVAL  : Fileman Internal Value
"RTN","VPSMRAR9",55,0)
 ;   EXVAL  : Fileman Externall Value
"RTN","VPSMRAR9",56,0)
 ; OUTPUT
"RTN","VPSMRAR9",57,0)
 ;   VPSMRAR: local array contains all field names/values for the last mrar
"RTN","VPSMRAR9",58,0)
 ;
"RTN","VPSMRAR9",59,0)
 QUIT:INVAL=""&(EXVAL="")
"RTN","VPSMRAR9",60,0)
 N LAST S LAST=$O(VPSMRAR(""),-1)+1
"RTN","VPSMRAR9",61,0)
 I (EXVAL=INVAL) S INVAL=""
"RTN","VPSMRAR9",62,0)
 S VPSMRAR(LAST)=FLDNAM_U_SUBS_U_EXVAL_$S(INVAL="":"",1:U_INVAL)
"RTN","VPSMRAR9",63,0)
 QUIT
"RTN","VPSMRAR9",64,0)
 ;
"RTN","VPSMRAR9",65,0)
WP(REC,FIL,SUBS,FLD) ;return word-processing value
"RTN","VPSMRAR9",66,0)
 QUIT:$G(REC(FIL,SUBS,FLD,"E"))="" ""
"RTN","VPSMRAR9",67,0)
 ;
"RTN","VPSMRAR9",68,0)
 N WP S WP=""
"RTN","VPSMRAR9",69,0)
 N LF S LF=$C(13,10)
"RTN","VPSMRAR9",70,0)
 N IDX S IDX=0
"RTN","VPSMRAR9",71,0)
 ;
"RTN","VPSMRAR9",72,0)
 F  S IDX=$O(REC(FIL,SUBS,FLD,IDX)) Q:'IDX  D
"RTN","VPSMRAR9",73,0)
 . S WP=WP_REC(FIL,SUBS,FLD,IDX)_LF
"RTN","VPSMRAR9",74,0)
 ;
"RTN","VPSMRAR9",75,0)
 QUIT $P(WP,LF,1,$L(WP,LF)-1)
"RTN","VPSMRARU")
0^18^B5034887
"RTN","VPSMRARU",1,0)
VPSMRARU ;WOIFO/BT - UPDATE LAST MRAR TIU IEN;1/15/15 11:26
"RTN","VPSMRARU",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Jan 15, 2015;Build 64
"RTN","VPSMRARU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSMRARU",4,0)
 ;
"RTN","VPSMRARU",5,0)
 QUIT
"RTN","VPSMRARU",6,0)
 ;
"RTN","VPSMRARU",7,0)
UPDATE(VPSRSLT,VPSNUM,VPSTYP,VPSTIEN) ; RPC: VPS UPDATE LAST MRAR TIU IEN
"RTN","VPSMRARU",8,0)
 ; This RPC will be called by Vetlink after successfully create TIU NOTE.
"RTN","VPSMRARU",9,0)
 ;
"RTN","VPSMRARU",10,0)
 ; INPUT
"RTN","VPSMRARU",11,0)
 ;   VPSNUM  : Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSMRARU",12,0)
 ;   VPSTYP  : Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSMRARU",13,0)
 ;   VPSTIEN : TIU Note IEN
"RTN","VPSMRARU",14,0)
 ;
"RTN","VPSMRARU",15,0)
 ; OUTPUT
"RTN","VPSMRARU",16,0)
 ;   VPSRSLT : Result of operation (by reference)
"RTN","VPSMRARU",17,0)
 ;             1 - success, 0^exception - failed
"RTN","VPSMRARU",18,0)
 ;
"RTN","VPSMRARU",19,0)
 S VPSNUM=$G(VPSNUM)
"RTN","VPSMRARU",20,0)
 S VPSTYP=$G(VPSTYP)
"RTN","VPSMRARU",21,0)
 S VPSTIEN=$G(VPSTIEN)
"RTN","VPSMRARU",22,0)
 ;
"RTN","VPSMRARU",23,0)
 ; -- validate input parameters
"RTN","VPSMRARU",24,0)
 N VPSDFN S VPSDFN=$$VALIDATE^VPSRPC1(VPSTYP,VPSNUM)
"RTN","VPSMRARU",25,0)
 I VPSDFN<1 S VPSRSLT="0^"_$P(VPSDFN,U,2) QUIT
"RTN","VPSMRARU",26,0)
 I VPSTIEN'?1.N S VPSRSLT="0^Invalid TIU NOTE IEN" QUIT
"RTN","VPSMRARU",27,0)
 I $$GET1^DIQ(8925,VPSTIEN_",",.02,"I")'=VPSDFN S VPSRSLT="0^DFN does not match DFN associated with TIU note" QUIT
"RTN","VPSMRARU",28,0)
 ;
"RTN","VPSMRARU",29,0)
 ; -- get last transaction for this patient
"RTN","VPSMRARU",30,0)
 S VPSRSLT=$$GETLMRAR(VPSDFN)
"RTN","VPSMRARU",31,0)
 QUIT:'VPSRSLT
"RTN","VPSMRARU",32,0)
 ;
"RTN","VPSMRARU",33,0)
 ; -- update MRAR TIU NOTE IEN
"RTN","VPSMRARU",34,0)
 N LMRARDT S LMRARDT=VPSRSLT
"RTN","VPSMRARU",35,0)
 L +^VPS(853.5,VPSDFN):2 E  S VPSRSLT="0^There is another process updating File #853.5" Q
"RTN","VPSMRARU",36,0)
 S VPSRSLT=$$UPDMRAR(VPSDFN,LMRARDT,VPSTIEN)
"RTN","VPSMRARU",37,0)
 L -^VPS(853.5,VPSDFN)
"RTN","VPSMRARU",38,0)
 ;
"RTN","VPSMRARU",39,0)
 QUIT VPSRSLT
"RTN","VPSMRARU",40,0)
 ;
"RTN","VPSMRARU",41,0)
GETLMRAR(VPSDFN) ;get last MRAR date for this patient (VPSDFN)
"RTN","VPSMRARU",42,0)
 N LTRXNDT S LTRXNDT=$O(^VPS(853.5,VPSDFN,"MRAR","B",""),-1)
"RTN","VPSMRARU",43,0)
 I LTRXNDT="" QUIT "0^This patient doesn't have any MRAR transaction"
"RTN","VPSMRARU",44,0)
 QUIT LTRXNDT
"RTN","VPSMRARU",45,0)
 ;
"RTN","VPSMRARU",46,0)
UPDMRAR(VPSDFN,TRXNDT,VPSTIEN) ;update MRAR TIU NOTE ien
"RTN","VPSMRARU",47,0)
 ; INPUT
"RTN","VPSMRARU",48,0)
 ;   VPSDFN  : PATIENT DFN
"RTN","VPSMRARU",49,0)
 ;   TRXNDT  : Last MRAR Transaction Date for this patient
"RTN","VPSMRARU",50,0)
 ;   VPSTIEN : TIU Note IEN
"RTN","VPSMRARU",51,0)
 ; RETURN
"RTN","VPSMRARU",52,0)
 ;   1           : successful update
"RTN","VPSMRARU",53,0)
 ;   0^exception : update failure
"RTN","VPSMRARU",54,0)
 ;
"RTN","VPSMRARU",55,0)
 N RESULT S RESULT=1
"RTN","VPSMRARU",56,0)
 N VPSFDA,VPSERR
"RTN","VPSMRARU",57,0)
 S VPSFDA(853.51,TRXNDT_","_VPSDFN_",",105)=VPSTIEN
"RTN","VPSMRARU",58,0)
 D FILE^DIE(,"VPSFDA","VPSERR")
"RTN","VPSMRARU",59,0)
 I $D(VPSERR) D
"RTN","VPSMRARU",60,0)
 . N ERRNUM S ERRNUM=0
"RTN","VPSMRARU",61,0)
 . S ERRNUM=$O(VPSERR("DIERR",ERRNUM))
"RTN","VPSMRARU",62,0)
 . S RESULT=0_U_VPSERR("DIERR",ERRNUM,"TEXT",1)
"RTN","VPSMRARU",63,0)
 QUIT RESULT
"RTN","VPSOBJ")
0^10^B74545346
"RTN","VPSOBJ",1,0)
VPSOBJ ;WOIFO/BT - PDO OUTPUT DISPLAY - UTILITIES ;11/20/11 15:30
"RTN","VPSOBJ",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Nov 14, 2012;Build 64
"RTN","VPSOBJ",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSOBJ",4,0)
 ;;
"RTN","VPSOBJ",5,0)
 Q
"RTN","VPSOBJ",6,0)
 ;IA #10104 - supported use of XLFSTR function
"RTN","VPSOBJ",7,0)
 ;
"RTN","VPSOBJ",8,0)
NEW(PATIEN,PDOARY) ; Object Construction - create a new PDO object
"RTN","VPSOBJ",9,0)
 K:PDOARY'="" @PDOARY
"RTN","VPSOBJ",10,0)
 K ^TMP("VPSPUTL1",$J)
"RTN","VPSOBJ",11,0)
 K ^TMP("VPSOBJ",$J)
"RTN","VPSOBJ",12,0)
 ;
"RTN","VPSOBJ",13,0)
 N LASTOREF S LASTOREF=$O(^TMP("VPSOBJ",$J,""),-1)+1
"RTN","VPSOBJ",14,0)
 D SETDFN(LASTOREF,PATIEN)
"RTN","VPSOBJ",15,0)
 D SETPDO(LASTOREF,PDOARY)
"RTN","VPSOBJ",16,0)
 D SETFORMT(LASTOREF)  ; SET UP OF NOTE FORMATTING REFERENCES
"RTN","VPSOBJ",17,0)
 Q LASTOREF
"RTN","VPSOBJ",18,0)
 ;
"RTN","VPSOBJ",19,0)
CLOSE(OREF) ; Destroy object - clean up  pdo
"RTN","VPSOBJ",20,0)
 K ^TMP("VPSOBJ",$J,OREF)
"RTN","VPSOBJ",21,0)
 Q
"RTN","VPSOBJ",22,0)
 ; 
"RTN","VPSOBJ",23,0)
 ; ====== Properties =============
"RTN","VPSOBJ",24,0)
 ; -- Property DFN (Read/Write)
"RTN","VPSOBJ",25,0)
SETDFN(OREF,VAL) ; set DFN property
"RTN","VPSOBJ",26,0)
 D SET(OREF,"DFN",VAL)
"RTN","VPSOBJ",27,0)
 Q
"RTN","VPSOBJ",28,0)
GETDFN(OREF) ; get DFN property
"RTN","VPSOBJ",29,0)
 Q $$GET(OREF,"DFN")
"RTN","VPSOBJ",30,0)
 ;
"RTN","VPSOBJ",31,0)
 ; -- Property PDOARY (Read/Write)
"RTN","VPSOBJ",32,0)
SETPDO(OREF,VAL) ; set PDOARY property
"RTN","VPSOBJ",33,0)
 D SET(OREF,"PDOARY",VAL)
"RTN","VPSOBJ",34,0)
 Q
"RTN","VPSOBJ",35,0)
GETPDO(OREF) ; get PDOARY property
"RTN","VPSOBJ",36,0)
 Q $$GET(OREF,"PDOARY")
"RTN","VPSOBJ",37,0)
 ;
"RTN","VPSOBJ",38,0)
 ; -- Property LASTMRAR (Read/Write)
"RTN","VPSOBJ",39,0)
SETLSTMR(OREF,VAL) ; set LASTMRAR property
"RTN","VPSOBJ",40,0)
 D SET(OREF,"LASTMRAR",VAL)
"RTN","VPSOBJ",41,0)
 Q
"RTN","VPSOBJ",42,0)
GETLSTMR(OREF) ; get LASTMRAR property
"RTN","VPSOBJ",43,0)
 Q $$GET(OREF,"LASTMRAR")
"RTN","VPSOBJ",44,0)
 ;
"RTN","VPSOBJ",45,0)
 ; -- Property ISSTAFF (Read/Write)
"RTN","VPSOBJ",46,0)
SETSTAFF(OREF,VAL) ; set ISSTAFF property
"RTN","VPSOBJ",47,0)
 D SET(OREF,"ISSTAFF",VAL)
"RTN","VPSOBJ",48,0)
 Q
"RTN","VPSOBJ",49,0)
GETSTAFF(OREF) ; get ISSTAFF property
"RTN","VPSOBJ",50,0)
 Q $$GET(OREF,"ISSTAFF")
"RTN","VPSOBJ",51,0)
 ;
"RTN","VPSOBJ",52,0)
 ; -- Property ALLRNM (Read/Write)
"RTN","VPSOBJ",53,0)
SETALRNM(OREF,VAL) ; set ALLRNM (allergy name) property
"RTN","VPSOBJ",54,0)
 D SET(OREF,"ALLRNM",VAL)
"RTN","VPSOBJ",55,0)
 Q
"RTN","VPSOBJ",56,0)
GETALRNM(OREF) ; get ALLRNM property
"RTN","VPSOBJ",57,0)
 Q $$GET(OREF,"ALLRNM")
"RTN","VPSOBJ",58,0)
 ;
"RTN","VPSOBJ",59,0)
 ; -- Property PATRESP (Read/Write)
"RTN","VPSOBJ",60,0)
SETPATRP(OREF,VAL) ; set PATRESP (patient response) property
"RTN","VPSOBJ",61,0)
 D SET(OREF,"PATRESP",VAL)
"RTN","VPSOBJ",62,0)
 Q
"RTN","VPSOBJ",63,0)
GETPATRP(OREF) ; get PATRESP property
"RTN","VPSOBJ",64,0)
 Q $$GET(OREF,"PATRESP")
"RTN","VPSOBJ",65,0)
 ;
"RTN","VPSOBJ",66,0)
 ; -- Property STATION (Read/Write)
"RTN","VPSOBJ",67,0)
SETSTATN(OREF,VAL) ; set STATION property
"RTN","VPSOBJ",68,0)
 D SET(OREF,"STATION",VAL)
"RTN","VPSOBJ",69,0)
 Q
"RTN","VPSOBJ",70,0)
GETSTATN(OREF) ; get STATION property
"RTN","VPSOBJ",71,0)
 Q $$GET(OREF,"STATION")
"RTN","VPSOBJ",72,0)
 ;
"RTN","VPSOBJ",73,0)
 ; -- Property MARKFOL (Read/Write)
"RTN","VPSOBJ",74,0)
SETMKFOL(OREF,VAL) ; set MARKFOL property
"RTN","VPSOBJ",75,0)
 D SET(OREF,"MARKFOL",VAL)
"RTN","VPSOBJ",76,0)
 Q
"RTN","VPSOBJ",77,0)
GETMKFOL(OREF) ; get STATION property
"RTN","VPSOBJ",78,0)
 Q $$GET(OREF,"MARKFOL")
"RTN","VPSOBJ",79,0)
 ;
"RTN","VPSOBJ",80,0)
 ; -- Property ALLERGIES (Read/Write)
"RTN","VPSOBJ",81,0)
SETALLR(OREF,VAL) ; set array of ALLERGIES property
"RTN","VPSOBJ",82,0)
 K ^TMP("VPSOBJ",$J,OREF,"ALLERGIES")
"RTN","VPSOBJ",83,0)
 M ^TMP("VPSOBJ",$J,OREF,"ALLERGIES")=VAL
"RTN","VPSOBJ",84,0)
 Q
"RTN","VPSOBJ",85,0)
GETALLR(OREF,VAL) ; get array of ALLERGIES property
"RTN","VPSOBJ",86,0)
 K VAL M VAL=^TMP("VPSOBJ",$J,OREF,"ALLERGIES")
"RTN","VPSOBJ",87,0)
 Q
"RTN","VPSOBJ",88,0)
 ;
"RTN","VPSOBJ",89,0)
 ; -- Property ADDALLERGY-DONTKNOW (Read/Write)
"RTN","VPSOBJ",90,0)
SETDKNW(OREF,VAL) ;
"RTN","VPSOBJ",91,0)
 D SET(OREF,"ADDALLERGY-DONTKNOW",VAL)
"RTN","VPSOBJ",92,0)
 Q
"RTN","VPSOBJ",93,0)
GETDKNW(OREF) ;
"RTN","VPSOBJ",94,0)
 Q $$GET(OREF,"ADDALLERGY-DONTKNOW")
"RTN","VPSOBJ",95,0)
 ;
"RTN","VPSOBJ",96,0)
 ; -- Property ADDALLERGY-VET (Read/Write)
"RTN","VPSOBJ",97,0)
SETADDVT(OREF,VAL) ;
"RTN","VPSOBJ",98,0)
 K ^TMP("VPSOBJ",$J,OREF,"ADDALLERGY-VET")
"RTN","VPSOBJ",99,0)
 M ^TMP("VPSOBJ",$J,OREF,"ADDALLERGY-VET")=VAL
"RTN","VPSOBJ",100,0)
 Q
"RTN","VPSOBJ",101,0)
GETADDVT(OREF,VAL) ;
"RTN","VPSOBJ",102,0)
 K VAL M VAL=^TMP("VPSOBJ",$J,OREF,"ADDALLERGY-VET")
"RTN","VPSOBJ",103,0)
 Q
"RTN","VPSOBJ",104,0)
 ;
"RTN","VPSOBJ",105,0)
 ; -- Property ADDALLERGY-PROVIDER (Read/Write)
"RTN","VPSOBJ",106,0)
SETADDPR(OREF,VAL) ;
"RTN","VPSOBJ",107,0)
 K ^TMP("VPSOBJ",$J,OREF,"ADDALLERGY-PRV")
"RTN","VPSOBJ",108,0)
 M ^TMP("VPSOBJ",$J,OREF,"ADDALLERGY-PRV")=VAL
"RTN","VPSOBJ",109,0)
 Q
"RTN","VPSOBJ",110,0)
GETADDPR(OREF,VAL) ;
"RTN","VPSOBJ",111,0)
 K VAL M VAL=^TMP("VPSOBJ",$J,OREF,"ADDALLERGY-PRV")
"RTN","VPSOBJ",112,0)
 Q
"RTN","VPSOBJ",113,0)
 ;
"RTN","VPSOBJ",114,0)
 ; -- Property ADDALLERGY-REACTION (Read/Write)
"RTN","VPSOBJ",115,0)
SETADRCT(OREF,VAL) ;
"RTN","VPSOBJ",116,0)
 D SET(OREF,"ADDALLERGY-REACTION",VAL)
"RTN","VPSOBJ",117,0)
 Q
"RTN","VPSOBJ",118,0)
GETADRCT(OREF) ;
"RTN","VPSOBJ",119,0)
 Q $$GET(OREF,"ADDALLERGY-REACTION")
"RTN","VPSOBJ",120,0)
 ;
"RTN","VPSOBJ",121,0)
 ; -- Property ADDALLERGY-MARKFOL (Read/Write)
"RTN","VPSOBJ",122,0)
SETADDMF(OREF,VAL) ;
"RTN","VPSOBJ",123,0)
 D SET(OREF,"ADDALLERGY-MARKFOL",VAL)
"RTN","VPSOBJ",124,0)
 Q
"RTN","VPSOBJ",125,0)
GETADDMF(OREF) ;
"RTN","VPSOBJ",126,0)
 Q $$GET(OREF,"ADDALLERGY-MARKFOL")
"RTN","VPSOBJ",127,0)
 ;
"RTN","VPSOBJ",128,0)
 ; -- Property FORMATTED ADDALLERGY-VET (Read/Write)
"RTN","VPSOBJ",129,0)
SETADDFV(OREF,VAL) ;
"RTN","VPSOBJ",130,0)
 K ^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-VET")
"RTN","VPSOBJ",131,0)
 M ^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-VET")=VAL
"RTN","VPSOBJ",132,0)
 Q
"RTN","VPSOBJ",133,0)
GETADDFV(OREF,VAL) ;
"RTN","VPSOBJ",134,0)
 K VAL M VAL=^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-VET")
"RTN","VPSOBJ",135,0)
 Q
"RTN","VPSOBJ",136,0)
 ;
"RTN","VPSOBJ",137,0)
 ; -- Property FORMATTED ADDALLERGY-PROVIDER (Read/Write)
"RTN","VPSOBJ",138,0)
SETADDFP(OREF,VAL) ;
"RTN","VPSOBJ",139,0)
 K ^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-PROVIDER")
"RTN","VPSOBJ",140,0)
 M ^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-PROVIDER")=VAL
"RTN","VPSOBJ",141,0)
 Q
"RTN","VPSOBJ",142,0)
GETADDFP(OREF,VAL) ;
"RTN","VPSOBJ",143,0)
 K VAL M VAL=^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-PROVIDER")
"RTN","VPSOBJ",144,0)
 Q
"RTN","VPSOBJ",145,0)
 ;
"RTN","VPSOBJ",146,0)
 ; -- Property FORMATTED ADDALLERGY-REACTION (Read/Write)
"RTN","VPSOBJ",147,0)
SETADDFR(OREF,VAL) ;
"RTN","VPSOBJ",148,0)
 K ^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-REACTION")
"RTN","VPSOBJ",149,0)
 M ^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-REACTION")=VAL
"RTN","VPSOBJ",150,0)
 Q
"RTN","VPSOBJ",151,0)
GETADDFR(OREF,VAL) ;
"RTN","VPSOBJ",152,0)
 K VAL M VAL=^TMP("VPSOBJ",$J,OREF,"FORMATTED ADDALLERGY-REACTION")
"RTN","VPSOBJ",153,0)
 Q
"RTN","VPSOBJ",154,0)
 ; 
"RTN","VPSOBJ",155,0)
 ; -- Property NONVA med(Read/Write)
"RTN","VPSOBJ",156,0)
KILNONVA(OREF) ; Initialize prop
"RTN","VPSOBJ",157,0)
 K ^TMP("VPSOBJ",$J,OREF,"NONVA-MED")
"RTN","VPSOBJ",158,0)
 Q
"RTN","VPSOBJ",159,0)
APDNONVA(OREF,VAL) ; Append VAL
"RTN","VPSOBJ",160,0)
 M ^TMP("VPSOBJ",$J,OREF,"NONVA-MED")=VAL
"RTN","VPSOBJ",161,0)
 Q
"RTN","VPSOBJ",162,0)
GETNONVA(OREF,VAL) ;
"RTN","VPSOBJ",163,0)
 K VAL M VAL=^TMP("VPSOBJ",$J,OREF,"NONVA-MED")
"RTN","VPSOBJ",164,0)
 Q
"RTN","VPSOBJ",165,0)
 ; 
"RTN","VPSOBJ",166,0)
 ; -- Property IS MED ACTIVE (Read/Write)
"RTN","VPSOBJ",167,0)
SETACTIV(OREF,VAL) ;
"RTN","VPSOBJ",168,0)
 D SET(OREF,"ISMEDACTIVE",VAL)
"RTN","VPSOBJ",169,0)
 Q
"RTN","VPSOBJ",170,0)
GETACTIV(OREF) ;
"RTN","VPSOBJ",171,0)
 Q $$GET(OREF,"ISMEDACTIVE")
"RTN","VPSOBJ",172,0)
 ;
"RTN","VPSOBJ",173,0)
 ; -- Property IS MED NONVA (Read/Write)
"RTN","VPSOBJ",174,0)
SETISNVA(OREF,VAL) ;
"RTN","VPSOBJ",175,0)
 D SET(OREF,"ISNONVA",VAL)
"RTN","VPSOBJ",176,0)
 Q
"RTN","VPSOBJ",177,0)
GETISNVA(OREF) ;
"RTN","VPSOBJ",178,0)
 Q $$GET(OREF,"ISNONVA")
"RTN","VPSOBJ",179,0)
 ;
"RTN","VPSOBJ",180,0)
 ; -- Property PATCOMM (Read/Write)
"RTN","VPSOBJ",181,0)
SETPATCM(OREF,VAL) ; Patient comments
"RTN","VPSOBJ",182,0)
 K ^TMP("VPSOBJ",$J,OREF,"PATCOMM")
"RTN","VPSOBJ",183,0)
 M ^TMP("VPSOBJ",$J,OREF,"PATCOMM")=VAL
"RTN","VPSOBJ",184,0)
 Q
"RTN","VPSOBJ",185,0)
GETPATCM(OREF,VAL) ; Patient comments
"RTN","VPSOBJ",186,0)
 K VAL M VAL=^TMP("VPSOBJ",$J,OREF,"PATCOMM")
"RTN","VPSOBJ",187,0)
 Q
"RTN","VPSOBJ",188,0)
 ;
"RTN","VPSOBJ",189,0)
 ; -- Property NEXTFILLDT (Read/Write)
"RTN","VPSOBJ",190,0)
SETNFILL(OREF,VAL) ; DATE NEXT FILLED
"RTN","VPSOBJ",191,0)
 D SET(OREF,"NEXTFILLDT",VAL)
"RTN","VPSOBJ",192,0)
 Q
"RTN","VPSOBJ",193,0)
GETNFILL(OREF) ; DATE NEXT FILLED
"RTN","VPSOBJ",194,0)
 Q $$GET(OREF,"NEXTFILLDT")
"RTN","VPSOBJ",195,0)
 ;
"RTN","VPSOBJ",196,0)
 ; -- Property PROVIDER (Read/Write)
"RTN","VPSOBJ",197,0)
SETPROV(OREF,VAL) ; PROVIDER
"RTN","VPSOBJ",198,0)
 D SET(OREF,"PROVIDER",VAL)
"RTN","VPSOBJ",199,0)
 Q
"RTN","VPSOBJ",200,0)
GETPROV(OREF) ; PROVIDER
"RTN","VPSOBJ",201,0)
 Q $$GET(OREF,"PROVIDER")
"RTN","VPSOBJ",202,0)
 ;
"RTN","VPSOBJ",203,0)
 ; -- Property SIG (Read/Write)
"RTN","VPSOBJ",204,0)
SETSIG(OREF,VAL) ; SIG INSTRUCTION
"RTN","VPSOBJ",205,0)
 D SET(OREF,"SIG",VAL)
"RTN","VPSOBJ",206,0)
 Q
"RTN","VPSOBJ",207,0)
GETSIG(OREF,VAL) ; SIG INSTRUCTION
"RTN","VPSOBJ",208,0)
 Q $$GET(OREF,"SIG")
"RTN","VPSOBJ",209,0)
 ;
"RTN","VPSOBJ",210,0)
 ; -- Property DAYS-SUPPLIED (Read/Write)
"RTN","VPSOBJ",211,0)
SETDSPLY(OREF,VAL) ; DAYS SUPPLIED
"RTN","VPSOBJ",212,0)
 D SET(OREF,"DAYSUPPLIED",VAL)
"RTN","VPSOBJ",213,0)
 Q
"RTN","VPSOBJ",214,0)
GETDSPLY(OREF) ; DAYS SUPPLIED
"RTN","VPSOBJ",215,0)
 Q $$GET(OREF,"DAYSUPPLIED")
"RTN","VPSOBJ",216,0)
 ;
"RTN","VPSOBJ",217,0)
 ; -- Property MEDFILL (Read/Write)
"RTN","VPSOBJ",218,0)
SETMFILL(OREF,VAL) ;
"RTN","VPSOBJ",219,0)
 D SET(OREF,"MEDFILL",VAL)
"RTN","VPSOBJ",220,0)
 Q
"RTN","VPSOBJ",221,0)
GETMFILL(OREF) ;
"RTN","VPSOBJ",222,0)
 Q $$GET(OREF,"MEDFILL")
"RTN","VPSOBJ",223,0)
 ;
"RTN","VPSOBJ",224,0)
 ; -- Property LEFTREFILL (Read/Write)
"RTN","VPSOBJ",225,0)
SETLREFL(OREF,VAL) ;
"RTN","VPSOBJ",226,0)
 D SET(OREF,"LEFTREFILL",VAL)
"RTN","VPSOBJ",227,0)
 Q
"RTN","VPSOBJ",228,0)
GETLREFL(OREF) ;
"RTN","VPSOBJ",229,0)
 Q $$GET(OREF,"LEFTREFILL")
"RTN","VPSOBJ",230,0)
 ;
"RTN","VPSOBJ",231,0)
 ; -- Property MAXREFILL (Read/Write)
"RTN","VPSOBJ",232,0)
SETMREFL(OREF,VAL) ;
"RTN","VPSOBJ",233,0)
 D SET(OREF,"MAXREFILL",VAL)
"RTN","VPSOBJ",234,0)
 Q
"RTN","VPSOBJ",235,0)
GETMREFL(OREF) ;
"RTN","VPSOBJ",236,0)
 Q $$GET(OREF,"MAXREFILL")
"RTN","VPSOBJ",237,0)
 ;
"RTN","VPSOBJ",238,0)
 ; -- Property MEDTYPE (Read/Write)
"RTN","VPSOBJ",239,0)
SETMTYPE(OREF,VAL) ; MEDICATION TYPE
"RTN","VPSOBJ",240,0)
 D SET(OREF,"MEDTYPE",VAL)
"RTN","VPSOBJ",241,0)
 Q
"RTN","VPSOBJ",242,0)
GETMTYPE(OREF) ; MEDICATION TYPE
"RTN","VPSOBJ",243,0)
 Q $$GET(OREF,"MEDTYPE")
"RTN","VPSOBJ",244,0)
 ;
"RTN","VPSOBJ",245,0)
 ; -- Property ISREMOTE (Read/Write)
"RTN","VPSOBJ",246,0)
SETREMOT(OREF,VAL) ;
"RTN","VPSOBJ",247,0)
 D SET(OREF,"ISREMOTE",VAL)
"RTN","VPSOBJ",248,0)
 Q
"RTN","VPSOBJ",249,0)
GETREMOT(OREF) ;
"RTN","VPSOBJ",250,0)
 Q $$GET(OREF,"ISREMOTE")
"RTN","VPSOBJ",251,0)
 ;
"RTN","VPSOBJ",252,0)
 ; -- Property MEDNAME (Read/Write)
"RTN","VPSOBJ",253,0)
SETMEDNM(OREF,VAL) ; Med name
"RTN","VPSOBJ",254,0)
 D SET(OREF,"MEDNAME",VAL)
"RTN","VPSOBJ",255,0)
 Q
"RTN","VPSOBJ",256,0)
GETMEDNM(OREF) ; Med Name
"RTN","VPSOBJ",257,0)
 Q $$GET(OREF,"MEDNAME")
"RTN","VPSOBJ",258,0)
 ;
"RTN","VPSOBJ",259,0)
 ; -- Property REMLOC (Read/Write)
"RTN","VPSOBJ",260,0)
SETRMLOC(OREF,VAL) ; REMOTE LOCATION
"RTN","VPSOBJ",261,0)
 D SET(OREF,"REMLOC",VAL)
"RTN","VPSOBJ",262,0)
 Q
"RTN","VPSOBJ",263,0)
GETRMLOC(OREF) ; REMOTE LOCATION
"RTN","VPSOBJ",264,0)
 Q $$GET(OREF,"REMLOC")
"RTN","VPSOBJ",265,0)
 ;
"RTN","VPSOBJ",266,0)
SETFORMT(OREF) ; Set column attributes when formatting the note
"RTN","VPSOBJ",267,0)
 N LN,LINE,STR,DEFS
"RTN","VPSOBJ",268,0)
 F LN=2:1 S LINE=$T(DISFLDS+LN),STR=$P(LINE,";;",2) Q:STR=""  S DEFS($P(STR,U))=$P(STR,U,2,4)
"RTN","VPSOBJ",269,0)
 K ^TMP("VPSOBJ",$J,OREF,"COLFORMAT")
"RTN","VPSOBJ",270,0)
 M ^TMP("VPSOBJ",$J,OREF,"COLFORMAT")=DEFS
"RTN","VPSOBJ",271,0)
 K DEFS
"RTN","VPSOBJ",272,0)
 Q
"RTN","VPSOBJ",273,0)
GETFORMT(OREF,DEFS) ;  get column attributes when formatting the note
"RTN","VPSOBJ",274,0)
 K DEFS M DEFS=^TMP("VPSOBJ",$J,OREF,"COLFORMAT")
"RTN","VPSOBJ",275,0)
 Q
"RTN","VPSOBJ",276,0)
 ;
"RTN","VPSOBJ",277,0)
 ; -- Property ERROR (Write Only)
"RTN","VPSOBJ",278,0)
SETERR(OREF,ERR) ; set error PROPERTY
"RTN","VPSOBJ",279,0)
 N PDOARY S PDOARY=$$GET(OREF,"PDOARY")
"RTN","VPSOBJ",280,0)
 S @PDOARY@(1,0)=ERR
"RTN","VPSOBJ",281,0)
 D SET(OREF,"ERROR",ERR)
"RTN","VPSOBJ",282,0)
 Q 
"RTN","VPSOBJ",283,0)
 ;
"RTN","VPSOBJ",284,0)
 ; ====== External Methods =============
"RTN","VPSOBJ",285,0)
ADDPDO(OREF,STRING) ; Add STRING to PDO array
"RTN","VPSOBJ",286,0)
 I STRING'="",$TR(STRING," ")="" Q
"RTN","VPSOBJ",287,0)
 N PDOARY S PDOARY=$$GETPDO(OREF)
"RTN","VPSOBJ",288,0)
 D ADDLN^VPSPUTL1(PDOARY,STRING)
"RTN","VPSOBJ",289,0)
 Q
"RTN","VPSOBJ",290,0)
 ;
"RTN","VPSOBJ",291,0)
ADDBLANK(OREF) ; add blank line to PDOARY
"RTN","VPSOBJ",292,0)
 N STRING S STRING=""
"RTN","VPSOBJ",293,0)
 D ADDPDO^VPSOBJ(OREF,STRING)
"RTN","VPSOBJ",294,0)
 Q
"RTN","VPSOBJ",295,0)
 ;
"RTN","VPSOBJ",296,0)
ADDUNDLN(OREF) ; add underline to PDOARY
"RTN","VPSOBJ",297,0)
 N STRING S STRING=$$REPEAT^XLFSTR("_",75)
"RTN","VPSOBJ",298,0)
 D ADDPDO^VPSOBJ(OREF,STRING)
"RTN","VPSOBJ",299,0)
 Q
"RTN","VPSOBJ",300,0)
 ;
"RTN","VPSOBJ",301,0)
ADDLJ(OREF,STRING) ; left justify the string before add to PDOARY
"RTN","VPSOBJ",302,0)
 N LJSTR S LJSTR=$$LJ^XLFSTR(STRING,75)
"RTN","VPSOBJ",303,0)
 D ADDPDO^VPSOBJ(OREF,LJSTR)
"RTN","VPSOBJ",304,0)
 Q
"RTN","VPSOBJ",305,0)
 ;
"RTN","VPSOBJ",306,0)
ADDCJ(OREF,STRING) ; Center justify the string before add to PDOARY
"RTN","VPSOBJ",307,0)
 N CJSTR S CJSTR=$$CJ^XLFSTR(STRING,75)
"RTN","VPSOBJ",308,0)
 D ADDPDO^VPSOBJ(OREF,CJSTR)
"RTN","VPSOBJ",309,0)
 Q
"RTN","VPSOBJ",310,0)
 ; -- internal Set/Get property (should not be used externally). Each property should have its own set get methods
"RTN","VPSOBJ",311,0)
SET(OREF,PROP,VAL) ; set property PROP with value VAL
"RTN","VPSOBJ",312,0)
 S ^TMP("VPSOBJ",$J,OREF,PROP)=VAL
"RTN","VPSOBJ",313,0)
 Q
"RTN","VPSOBJ",314,0)
GET(OREF,PROP) ; get value from property PROP
"RTN","VPSOBJ",315,0)
 Q $G(^TMP("VPSOBJ",$J,OREF,PROP))
"RTN","VPSOBJ",316,0)
 ;
"RTN","VPSOBJ",317,0)
DISFLDS ; get the attributes of each column when formatting and displaying the lines on the note
"RTN","VPSOBJ",318,0)
 ;;ITEM NAME^COL^WIDTH^DISPLAY TEXT^comments
"RTN","VPSOBJ",319,0)
 ;;FOLLOWUP^1^3^Followup
"RTN","VPSOBJ",320,0)
 ;;PATRESP^4^1^
"RTN","VPSOBJ",321,0)
 ;;ALLERNM^7^20^Name
"RTN","VPSOBJ",322,0)
 ;;REACTION^31^20^Reaction
"RTN","VPSOBJ",323,0)
 ;;SITE^55^20^Site
"RTN","VPSOBJ",324,0)
 ;;ACTION^55^10^Action
"RTN","VPSOBJ",325,0)
 ;;ADDALLERGY-VET^5^65
"RTN","VPSOBJ",326,0)
 ;;MEDNAME^7^20
"RTN","VPSOBJ",327,0)
 ;;DOSE^29^16
"RTN","VPSOBJ",328,0)
 ;;DOSEFORM^47^16
"RTN","VPSOBJ",329,0)
 ;;SIG^9^34
"RTN","VPSOBJ",330,0)
 ;;REFILLS^47^25
"RTN","VPSOBJ",331,0)
 ;;PROVIDER^9^34
"RTN","VPSOBJ",332,0)
 ;;DAYS SUPPLIED^47^25
"RTN","VPSOBJ",333,0)
 ;;MEDS ACTION^47^25
"RTN","VPSOBJ",334,0)
 ;;PENDING STMT^4^70
"RTN","VPSOBJ",335,0)
 ;;COMMENTS^9^34
"RTN","VPSOBJ",336,0)
 ;;REMOTE^9^34
"RTN","VPSOBJ",337,0)
 ;;FILLED^47^25
"RTN","VPSOBJ",338,0)
 ;;NEXTFILL^47^25
"RTN","VPSOBJ",339,0)
 ;;MRNAME^7^25^Name
"RTN","VPSOBJ",340,0)
 ;;MRDIR^35^20^Direction
"RTN","VPSOBJ",341,0)
 ;;MRFREQ^57^20^Frequency
"RTN","VPSOBJ",342,0)
 ;;ADDMED^7^25^Name/Directions/Frequency (Pt input)
"RTN","VPSOBJ",343,0)
 ;;ADDSTAFFCOMM^35^30^Staff Comments
"RTN","VPSOBJ",344,0)
 ;;ADDMEDSTAFF^7^25^Name/Dose/Indication
"RTN","VPSOBJ",345,0)
 ;;ADDSTAFFCOMM2^35^30^Comments
"RTN","VPSOBJ",346,0)
 ;;DISCUSS^7^70
"RTN","VPSOBJ",347,0)
 ;;
"RTN","VPSPARAM")
0^7^B105808145
"RTN","VPSPARAM",1,0)
VPSPARAM ;WOIFO/BT - Update VPS PARAMETER file ;11/14/12 15:30
"RTN","VPSPARAM",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Nov 14, 2012;Build 64
"RTN","VPSPARAM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPARAM",4,0)
 ;;
"RTN","VPSPARAM",5,0)
 Q
"RTN","VPSPARAM",6,0)
 ;
"RTN","VPSPARAM",7,0)
WRITE(RESULT,PARAMTYP,PARAMNAM,PARAM) ; RPC: VPS WRITE KIOSK PARAMETERS
"RTN","VPSPARAM",8,0)
 ; Many facets of MRAR behavior are dictated by a set of business parameters defined and
"RTN","VPSPARAM",9,0)
 ; entered by the healthcare facility administrator.
"RTN","VPSPARAM",10,0)
 ; For statistical purposes, VetLink will call this RPC to store these configuration changes.
"RTN","VPSPARAM",11,0)
 ; There are two ways to store the configuration changes, by KioskGroup and by Clinic.
"RTN","VPSPARAM",12,0)
 ; 
"RTN","VPSPARAM",13,0)
 ; INPUT
"RTN","VPSPARAM",14,0)
 ;   RESULT   : the results of processing and passed in by reference (required by RPC Broker)
"RTN","VPSPARAM",15,0)
 ;   PARAMTYP : type of configuration changes, By KIOSK GROUP (K) or by Clinic (C).
"RTN","VPSPARAM",16,0)
 ;   PARAMNAM : KIOSK GROUP or CLINIC IEN depend on the PARMTYP.
"RTN","VPSPARAM",17,0)
 ;   PARAM    : array representing the configuration parameters changed made in Vetlinks passed in by reference 
"RTN","VPSPARAM",18,0)
 ;              PARAM(0..n) = FIELD NAME^FIELD VALUE
"RTN","VPSPARAM",19,0)
 ;              n is an incremental number; 
"RTN","VPSPARAM",20,0)
 ;              FIELD NAME represents the field that was changed in VetLink
"RTN","VPSPARAM",21,0)
 ;              FIELD VALUE is the actual data that was updated in VetLink and to be stored in File 853.
"RTN","VPSPARAM",22,0)
 ;             
"RTN","VPSPARAM",23,0)
 ; OUTPUT
"RTN","VPSPARAM",24,0)
 ;   RESULT  : array that returns the results of each updated field per array data element.
"RTN","VPSPARAM",25,0)
 ;             SUCCESS RESULT:
"RTN","VPSPARAM",26,0)
 ;             RESULT(n) = FIELD NAME^FIELD VALUE^1
"RTN","VPSPARAM",27,0)
 ;             '1' at the end of the result string indicates successful update to the database of the specific field declared at field label.
"RTN","VPSPARAM",28,0)
 ;         
"RTN","VPSPARAM",29,0)
 ;             FAILED RESULT :
"RTN","VPSPARAM",30,0)
 ;             RESULT(n)="FIELD NAME^FIELD VALUE^99^exception message"  
"RTN","VPSPARAM",31,0)
 ;             '99^exception message' at the end of the result string indicates an exception and no update was made to the database for that specific field and exception message describes the error.
"RTN","VPSPARAM",32,0)
 ;
"RTN","VPSPARAM",33,0)
 K RESULT
"RTN","VPSPARAM",34,0)
 S RESULT(0)=$$ISVALID($G(PARAMTYP),$G(PARAMNAM),.PARAM)
"RTN","VPSPARAM",35,0)
 Q:RESULT(0)'=""
"RTN","VPSPARAM",36,0)
 ;
"RTN","VPSPARAM",37,0)
 ; -- Lock File 853 before adding/updating
"RTN","VPSPARAM",38,0)
 N XREF S XREF=$S(PARAMTYP="C":"C",1:"D")
"RTN","VPSPARAM",39,0)
 L +^VPS(853,XREF,PARAMNAM):5 E  S RESULT(0)=$$RESULT(99,"VPS PARAMETER",PARAMTYP_","_PARAMNAM,"VPS PARAMETER cannot be locked for this Parameter Name. Update cannot occur at this time.") Q
"RTN","VPSPARAM",40,0)
 ;
"RTN","VPSPARAM",41,0)
 ; -- Create PARAM TOP Level if doesn't exist
"RTN","VPSPARAM",42,0)
 I '$D(^VPS(853,XREF,PARAMNAM)) S RESULT(0)=$$CRPARAM(PARAMTYP,PARAMNAM)
"RTN","VPSPARAM",43,0)
 ;
"RTN","VPSPARAM",44,0)
 ; -- Store parameters
"RTN","VPSPARAM",45,0)
 I RESULT(0)="" D UPDPARAM(PARAMTYP,PARAMNAM,.PARAM,.RESULT)
"RTN","VPSPARAM",46,0)
 ;
"RTN","VPSPARAM",47,0)
 L -^VPS(853,XREF,PARAMNAM)
"RTN","VPSPARAM",48,0)
 Q
"RTN","VPSPARAM",49,0)
 ;
"RTN","VPSPARAM",50,0)
UPDPARAM(PARAMTYP,PARAMNAM,PARAM,RESULT) ;Store input parameters 
"RTN","VPSPARAM",51,0)
 ; INPUT
"RTN","VPSPARAM",52,0)
 ;   PARAMTYP : type of configuration changes, By KIOSK GROUP (K) or by Clinic (C).
"RTN","VPSPARAM",53,0)
 ;   PARAMNAM : KIOSK GROUP or CLINIC IEN depend on the PARMTYP.
"RTN","VPSPARAM",54,0)
 ;   PARAM    : array representing the configuration parameters changed made in Vetlinks passed in by reference 
"RTN","VPSPARAM",55,0)
 ;              PARAM(0..n) = FIELD NAME^FIELD VALUE
"RTN","VPSPARAM",56,0)
 ;              n is an incremental number; 
"RTN","VPSPARAM",57,0)
 ;              FIELD NAME represents the field that was changed in VetLink
"RTN","VPSPARAM",58,0)
 ;              FIELD VALUE is the actual data that was updated in VetLink and to be stored in File 853.
"RTN","VPSPARAM",59,0)
 ;             
"RTN","VPSPARAM",60,0)
 ; INPUT/OUTPUT
"RTN","VPSPARAM",61,0)
 ;   RESULT  : array that returns the results of each updated field per array data element.
"RTN","VPSPARAM",62,0)
 ;             SUCCESS RESULT:
"RTN","VPSPARAM",63,0)
 ;             RESULT(n) = FIELD NAME^FIELD VALUE^1
"RTN","VPSPARAM",64,0)
 ;             '1' at the end of the result string indicates successful update to the database of the specific field declared at field label.
"RTN","VPSPARAM",65,0)
 ;         
"RTN","VPSPARAM",66,0)
 ;             FAILED RESULT :
"RTN","VPSPARAM",67,0)
 ;             RESULT(n)="FIELD NAME^FIELD VALUE^99^exception message"  
"RTN","VPSPARAM",68,0)
 ;             '99^exception message' at the end of the result string indicates an exception and no update was made to the database for that specific field and exception message describes the error.
"RTN","VPSPARAM",69,0)
 ;
"RTN","VPSPARAM",70,0)
 ; -- Get VPS PARAM IEN
"RTN","VPSPARAM",71,0)
 N PARAMIEN S PARAMIEN=$$GPARMIEN(PARAMTYP,PARAMNAM)
"RTN","VPSPARAM",72,0)
 I 'PARAMIEN S RESULT(0)=$$RESULT(99,"VPS PARAMETER",PARAMTYP_","_PARAMNAM,"Unable to retrieve record for this Parameter Name. Update cannot occur at this time.") Q
"RTN","VPSPARAM",73,0)
 ;
"RTN","VPSPARAM",74,0)
 ; -- Store parameters
"RTN","VPSPARAM",75,0)
 K RESULT
"RTN","VPSPARAM",76,0)
 N MULT,RSNTYP
"RTN","VPSPARAM",77,0)
 N TRNDT S TRNDT=$$NOW^XLFDT() ; IA #10103 - supported use of XLFDT function 
"RTN","VPSPARAM",78,0)
 N FLDDEF D TABLE(.FLDDEF) ;get array of valid fields defined to VPS PARAMETER (#853)
"RTN","VPSPARAM",79,0)
 N SUB S SUB=""
"RTN","VPSPARAM",80,0)
 ;
"RTN","VPSPARAM",81,0)
 F  S SUB=$O(PARAM(SUB)) Q:SUB=""  D
"RTN","VPSPARAM",82,0)
 . N FLDNAM S FLDNAM=$P(PARAM(SUB),U,1)
"RTN","VPSPARAM",83,0)
 . N FLDVAL S FLDVAL=$P(PARAM(SUB),U,2)
"RTN","VPSPARAM",84,0)
 . S:FLDNAM="" RESULT(SUB)=$$RESULT(99,FLDNAM,FLDVAL,"Missing Field. Data not written.")
"RTN","VPSPARAM",85,0)
 . Q:FLDNAM=""
"RTN","VPSPARAM",86,0)
 . S:'$D(FLDDEF(FLDNAM)) RESULT(SUB)=$$RESULT(99,FLDNAM,FLDVAL,FLDNAM_" does not exist in VPS CONFIG HISTORY file. Data not written.")
"RTN","VPSPARAM",87,0)
 . Q:'$D(FLDDEF(FLDNAM))
"RTN","VPSPARAM",88,0)
 . N FLDVAL S FLDVAL=$P(PARAM(SUB),U,2)
"RTN","VPSPARAM",89,0)
 . N ISMULT S ISMULT=($P(FLDDEF(FLDNAM),U,4)'="")
"RTN","VPSPARAM",90,0)
 . I 'ISMULT S RESULT(SUB)=$$STRFIL(TRNDT,PARAMIEN,FLDDEF(FLDNAM),FLDNAM,FLDVAL) ;file the data to 853.01 sub-entry
"RTN","VPSPARAM",91,0)
 . I ISMULT D  ; save multiple in a MULT array and store later, want to make sure .01 field is valid
"RTN","VPSPARAM",92,0)
 . . N FIL S FIL=$P(FLDDEF(FLDNAM),U,1)
"RTN","VPSPARAM",93,0)
 . . N FLD S FLD=$P(FLDDEF(FLDNAM),U,2)
"RTN","VPSPARAM",94,0)
 . . N RSNTYP S RSNTYP=$P(FLDVAL,",")
"RTN","VPSPARAM",95,0)
 . . N VALID S VALID=RSNTYP>0&(RSNTYP<6)
"RTN","VPSPARAM",96,0)
 . . S:VALID MULT(FIL,FLDNAM,RSNTYP)=SUB_U_FLDVAL
"RTN","VPSPARAM",97,0)
 . . S:'VALID RESULT(SUB)=$$RESULT(99,FLDNAM,FLDVAL,"Invalid Incomplete Reason Type")
"RTN","VPSPARAM",98,0)
 ;
"RTN","VPSPARAM",99,0)
 ; - Store multiple fields
"RTN","VPSPARAM",100,0)
 I $D(MULT) D STRMULT(.RESULT,PARAMIEN,TRNDT,.FLDDEF,.MULT)
"RTN","VPSPARAM",101,0)
 Q
"RTN","VPSPARAM",102,0)
 ;
"RTN","VPSPARAM",103,0)
STRMULT(RESULT,PARAMIEN,TRNDT,FLDDEF,MULT) ; Store multiple fields
"RTN","VPSPARAM",104,0)
 ; INPUT/OUTPUT
"RTN","VPSPARAM",105,0)
 ;   RESULT   : array that returns the results of each updated field per array data element.
"RTN","VPSPARAM",106,0)
 ; INPUT
"RTN","VPSPARAM",107,0)
 ;   TRNDT    : Transaction Date/Time - this field is also used as SUB IEN for this Transaction Level
"RTN","VPSPARAM",108,0)
 ;   PARAMIEN : PARAMETER IEN for file 853
"RTN","VPSPARAM",109,0)
 ;   FLDDEF   : array of field name definition
"RTN","VPSPARAM",110,0)
 ;   MULT     : array of multiple field entries
"RTN","VPSPARAM",111,0)
 ;   RSNTYP   : array of Incomplete Reason Types
"RTN","VPSPARAM",112,0)
 ;
"RTN","VPSPARAM",113,0)
 N FIL S FIL=""
"RTN","VPSPARAM",114,0)
 F  S FIL=$O(MULT(FIL)) Q:FIL=""  D
"RTN","VPSPARAM",115,0)
 . N FLDNAM S FLDNAM=""
"RTN","VPSPARAM",116,0)
 . F  S FLDNAM=$O(MULT(FIL,FLDNAM)) Q:FLDNAM=""  D
"RTN","VPSPARAM",117,0)
 . . N RSNTYP S RSNTYP=""
"RTN","VPSPARAM",118,0)
 . . F  S RSNTYP=$O(MULT(FIL,FLDNAM,RSNTYP)) Q:RSNTYP=""  D
"RTN","VPSPARAM",119,0)
 . . . N REC S REC=MULT(FIL,FLDNAM,RSNTYP)
"RTN","VPSPARAM",120,0)
 . . . N SUB S SUB=$P(REC,U)
"RTN","VPSPARAM",121,0)
 . . . N FLDVAL S FLDVAL=$P(REC,U,2)
"RTN","VPSPARAM",122,0)
 . . . S RESULT(SUB)=$$STRFIL(TRNDT,PARAMIEN,FLDDEF(FLDNAM),FLDNAM,FLDVAL) ;file the data to 853.01 sub-entry
"RTN","VPSPARAM",123,0)
 Q
"RTN","VPSPARAM",124,0)
 ; 
"RTN","VPSPARAM",125,0)
ISVALID(PARAMTYP,PARAMNAM,PARAM) ;validate RPC input parameters
"RTN","VPSPARAM",126,0)
 ; INPUT
"RTN","VPSPARAM",127,0)
 ;   PARAMTYP : type of configuration changes, (eg, By KIOSK GROUP (K) or by Clinic (C)).
"RTN","VPSPARAM",128,0)
 ;   PARAMNAM : Value of Parameter, (eg, KIOSK GROUP or CLINIC IEN depend on the PARMTYP.)
"RTN","VPSPARAM",129,0)
 ;   PARAM    : local array representing the configuration parameters changed made in Vetlinks passed in by reference 
"RTN","VPSPARAM",130,0)
 ; OUTPUT
"RTN","VPSPARAM",131,0)
 ;   SUCCESS  : Empty String
"RTN","VPSPARAM",132,0)
 ;   FAILED   : FIELD NAME^FIELD VALUE^99^exception
"RTN","VPSPARAM",133,0)
 ;
"RTN","VPSPARAM",134,0)
 N PARAMVAL S PARAMVAL=PARAMTYP_","_PARAMNAM
"RTN","VPSPARAM",135,0)
 S PARAMTYP=$$STRIP^XLFSTR(PARAMTYP," ") ;Parameter Type can't be empty - IA #10104
"RTN","VPSPARAM",136,0)
 I PARAMTYP="" Q $$RESULT(99,"VPS PARAMETER",PARAMVAL,"Invalid Parameter Type")
"RTN","VPSPARAM",137,0)
 I '$F(",K,C,",","_PARAMTYP_",") Q $$RESULT(99,"VPS PARAMETER",PARAMVAL,"Parameter Type must be 'K' for KIOSK GROUP or 'C' for CLINIC")
"RTN","VPSPARAM",138,0)
 ;
"RTN","VPSPARAM",139,0)
 S PARAMNAM=$$STRIP^XLFSTR(PARAMNAM," ") ;Parameter name can't be empty - IA #10104
"RTN","VPSPARAM",140,0)
 I PARAMNAM="" Q $$RESULT(99,"VPS PARAMETER",PARAMVAL,"Invalid Parameter Name")
"RTN","VPSPARAM",141,0)
 I PARAMNAM'?1.ANP Q $$RESULT(99,"VPS PARAMETER",PARAMVAL,"Parameter name can't have Non-printable characters")
"RTN","VPSPARAM",142,0)
 I PARAMTYP="C",PARAMNAM'?1.N Q $$RESULT(99,"VPS PARAMETER",PARAMVAL,"CLINIC IEN must be a numeric value")
"RTN","VPSPARAM",143,0)
 ;
"RTN","VPSPARAM",144,0)
 I $D(PARAM)<10 Q $$RESULT(99,"VPS PARAMETER",PARAMVAL,"No Configuration Parameters")
"RTN","VPSPARAM",145,0)
 Q ""
"RTN","VPSPARAM",146,0)
 ;
"RTN","VPSPARAM",147,0)
CRPARAM(PARAMTYP,PARAMNAM) ; Create PARAM entry in root level of file #853
"RTN","VPSPARAM",148,0)
 ; INPUT
"RTN","VPSPARAM",149,0)
 ;   PARAMTYP : type of configuration changes, (eg, By KIOSK GROUP (K) or by Clinic (C)).
"RTN","VPSPARAM",150,0)
 ;   PARAMNAM : Value of Parameter, (eg, KIOSK GROUP or CLINIC IEN depend on the PARMTYP.)
"RTN","VPSPARAM",151,0)
 ; OUTPUT
"RTN","VPSPARAM",152,0)
 ;   SUCCESS : Empty String
"RTN","VPSPARAM",153,0)
 ;   FAILED  : FIELD NAME^FIELD VALUE^99^exception
"RTN","VPSPARAM",154,0)
 ;
"RTN","VPSPARAM",155,0)
 N IENS,UPDERR,FDA
"RTN","VPSPARAM",156,0)
 N FLD S FLD=$S(PARAMTYP="C":.02,1:.03)
"RTN","VPSPARAM",157,0)
 S FDA(853,"+1,",.01)=PARAMTYP
"RTN","VPSPARAM",158,0)
 S FDA(853,"+1,",FLD)=PARAMNAM
"RTN","VPSPARAM",159,0)
 D UPDATE^DIE("","FDA",,"UPDERR")
"RTN","VPSPARAM",160,0)
 ;
"RTN","VPSPARAM",161,0)
 N ERR S ERR=""
"RTN","VPSPARAM",162,0)
 I $D(UPDERR) S ERR=$$ERROR(.UPDERR,"VPS PARAMETER",PARAMTYP_","_PARAMNAM)
"RTN","VPSPARAM",163,0)
 I $P(ERR,U,3)=1 S ERR=""
"RTN","VPSPARAM",164,0)
 Q ERR
"RTN","VPSPARAM",165,0)
 ;
"RTN","VPSPARAM",166,0)
GPARMIEN(PARAMTYP,PARAMNAM) ; Get PARAM IEN for FILE 853
"RTN","VPSPARAM",167,0)
 ; INPUT
"RTN","VPSPARAM",168,0)
 ;   PARAMTYP : type of configuration changes, (eg, By KIOSK GROUP (K) or by Clinic (C)).
"RTN","VPSPARAM",169,0)
 ;   PARAMNAM : Value of Parameter name, (eg, KIOSK GROUP or CLINIC name depend on the PARMTYP.)
"RTN","VPSPARAM",170,0)
 ; OUTPUT
"RTN","VPSPARAM",171,0)
 ;   SUCCESS : PARAMETER IEN for FILE 843
"RTN","VPSPARAM",172,0)
 ;   FAILED  : Empty string
"RTN","VPSPARAM",173,0)
 ;
"RTN","VPSPARAM",174,0)
 N PARAMIEN S PARAMIEN=0
"RTN","VPSPARAM",175,0)
 I PARAMTYP="C" S PARAMIEN=$O(^VPS(853,"C",PARAMNAM,""))
"RTN","VPSPARAM",176,0)
 I PARAMTYP="K" S PARAMIEN=$O(^VPS(853,"D",PARAMNAM,""))
"RTN","VPSPARAM",177,0)
 Q PARAMIEN
"RTN","VPSPARAM",178,0)
 ;
"RTN","VPSPARAM",179,0)
STRFIL(TRNDT,PARAMIEN,UPDFLD,FLDNAM,FLDVAL) ; Store the modified field value
"RTN","VPSPARAM",180,0)
 ; INPUT
"RTN","VPSPARAM",181,0)
 ;   TRNDT    : Transaction Date/Time - this field is also used as SUB IEN for this Transaction Level
"RTN","VPSPARAM",182,0)
 ;   PARAMIEN : PARAMETER IEN for file 853
"RTN","VPSPARAM",183,0)
 ;   UPDFLD   : field info (File Number^Field Number^input type)
"RTN","VPSPARAM",184,0)
 ;   FLDNAM   : field name to update
"RTN","VPSPARAM",185,0)
 ;   FLDVAL   : field value to update
"RTN","VPSPARAM",186,0)
 ; OUTPUT
"RTN","VPSPARAM",187,0)
 ;   SUCCESS  : FIELD NAME^FIELD VALUE^1
"RTN","VPSPARAM",188,0)
 ;   FAILED   : FIELD NAME^FIELD VALUE^99^exception message
"RTN","VPSPARAM",189,0)
 ; 
"RTN","VPSPARAM",190,0)
 ; create entry in Transaction Date/Time level
"RTN","VPSPARAM",191,0)
 N EXIST S EXIST=$D(^VPS(853,PARAMIEN,"PARAM",TRNDT))
"RTN","VPSPARAM",192,0)
 I 'EXIST S ERR=$$ADDTRXN(TRNDT,PARAMIEN)
"RTN","VPSPARAM",193,0)
 Q:ERR'="" ERR
"RTN","VPSPARAM",194,0)
 ; 
"RTN","VPSPARAM",195,0)
 ; update the parameter value on the Transaction Date/Time level
"RTN","VPSPARAM",196,0)
 N RESULT S RESULT=$$UPDTRXN(PARAMIEN,TRNDT,UPDFLD,FLDNAM,FLDVAL)
"RTN","VPSPARAM",197,0)
 Q RESULT
"RTN","VPSPARAM",198,0)
 ;
"RTN","VPSPARAM",199,0)
ADDTRXN(TRNDT,PARAMIEN) ; create an entry in Transaction Date/Time level
"RTN","VPSPARAM",200,0)
 ; INPUT
"RTN","VPSPARAM",201,0)
 ;   TRNDT    : Transaction Date/Time - this field is also used as SUB IEN for this Transaction Level
"RTN","VPSPARAM",202,0)
 ;   PARAMIEN : PARAMETER IEN for file 853
"RTN","VPSPARAM",203,0)
 ; RETURN
"RTN","VPSPARAM",204,0)
 ;   SUCCESS  : empty string
"RTN","VPSPARAM",205,0)
 ;   FAILED   : FIELD NAME^FIELD VALUE^99^exception message
"RTN","VPSPARAM",206,0)
 N IENS S IENS(1)=TRNDT
"RTN","VPSPARAM",207,0)
 N FDA,UPDERR
"RTN","VPSPARAM",208,0)
 S FDA(853.01,"+1,"_PARAMIEN_",",.01)=TRNDT
"RTN","VPSPARAM",209,0)
 D UPDATE^DIE("","FDA","IENS","UPDERR")
"RTN","VPSPARAM",210,0)
 ;
"RTN","VPSPARAM",211,0)
 N ERR S ERR=""
"RTN","VPSPARAM",212,0)
 I $D(UPDERR) S ERR=$$ERROR(.UPDERR,"TRXN DATE/TIME",TRNDT)
"RTN","VPSPARAM",213,0)
 Q ERR
"RTN","VPSPARAM",214,0)
 ;
"RTN","VPSPARAM",215,0)
UPDTRXN(PARAMIEN,TRNDT,UPDFLD,FLDNAM,FLDVAL) ; update fields in transaction level
"RTN","VPSPARAM",216,0)
 ; INPUT
"RTN","VPSPARAM",217,0)
 ;   PARAMIEN : PARAMETER IEN for file 853
"RTN","VPSPARAM",218,0)
 ;   TRNDT    : Transaction Date/Time - this field is also used as SUB IEN for this Transaction Level
"RTN","VPSPARAM",219,0)
 ;   UPDFLD   : field info (File Number^Field Number^input type^Admin level Field Number^Admin level Field name)
"RTN","VPSPARAM",220,0)
 ;   FLDNAM   : field name to update
"RTN","VPSPARAM",221,0)
 ;   FLDVAL   : field value to update
"RTN","VPSPARAM",222,0)
 ; OUTPUT
"RTN","VPSPARAM",223,0)
 ;   SUCCESS  : FIELD NAME^FIELD VALUE^1
"RTN","VPSPARAM",224,0)
 ;   FAILED   : FIELD NAME^FIELD VALUE^99^exception message
"RTN","VPSPARAM",225,0)
 ;   
"RTN","VPSPARAM",226,0)
 N FIL S FIL=$P(UPDFLD,U,1) ;File Number to update
"RTN","VPSPARAM",227,0)
 N FLD S FLD=$P(UPDFLD,U,2) ;Field Number to update
"RTN","VPSPARAM",228,0)
 N TYP S TYP=$P(UPDFLD,U,3) ;input type (I(nternal) or E(xternal)
"RTN","VPSPARAM",229,0)
 N RSNSUB S RSNSUB=$P(UPDFLD,U,4) ;Reason Subscript (ARREASON, MRREASON, AMRREASON)
"RTN","VPSPARAM",230,0)
 N RSNTYP S RSNTYP=$P(FLDVAL,",")
"RTN","VPSPARAM",231,0)
 S:TYP="" TYP="E"
"RTN","VPSPARAM",232,0)
 N MULT S MULT=(RSNSUB'="")
"RTN","VPSPARAM",233,0)
 N SUBS S SUBS=TRNDT_","_PARAMIEN
"RTN","VPSPARAM",234,0)
 ;
"RTN","VPSPARAM",235,0)
 ; -- Store fields for file 853.01 and multiple 853.011, 853.012, 853.013
"RTN","VPSPARAM",236,0)
 N ERR
"RTN","VPSPARAM",237,0)
 S:MULT SUBS=$$ADDMULT(FIL,PARAMIEN,TRNDT,RSNSUB,RSNTYP,.ERR)
"RTN","VPSPARAM",238,0)
 Q:$D(ERR) $$ERROR(.ERR,FLDNAM,FLDVAL)
"RTN","VPSPARAM",239,0)
 ;
"RTN","VPSPARAM",240,0)
 N FDA S FDA(FIL,SUBS_",",FLD)=$S(MULT:$P(FLDVAL,",",2),1:FLDVAL)
"RTN","VPSPARAM",241,0)
 D FILE^DIE(TYP,"FDA","ERR")
"RTN","VPSPARAM",242,0)
 Q:$D(ERR) $$ERROR(.ERR,FLDNAM,FLDVAL)
"RTN","VPSPARAM",243,0)
 Q $$RESULT(1,FLDNAM,FLDVAL,"") ; data for specific field was filed successfully
"RTN","VPSPARAM",244,0)
 ;
"RTN","VPSPARAM",245,0)
ADDMULT(FIL,PARAMIEN,TRNDT,RSNSUB,RSNTYP,ERR) ; Add field .01 for Multiple fields if doesn't exist
"RTN","VPSPARAM",246,0)
 ; INPUT
"RTN","VPSPARAM",247,0)
 ;   FIL      : File number (853.011, 853.012, 853.013)
"RTN","VPSPARAM",248,0)
 ;   PARAMIEN : PARAMETER IEN for file 853
"RTN","VPSPARAM",249,0)
 ;   TRNDT    : Transaction Date/Time - this field is also used as SUB IEN for this Transaction Level
"RTN","VPSPARAM",250,0)
 ;   RSNSUB   : This is the literal subscript for the sub file (eq: ARREASON, MRREASON, AMRREASON)
"RTN","VPSPARAM",251,0)
 ;   RSNTYP   : field value of Incomplete Reason Type 
"RTN","VPSPARAM",252,0)
 ; OUTPUT
"RTN","VPSPARAM",253,0)
 ;   ERR      : FileMan Error array
"RTN","VPSPARAM",254,0)
 ; RETURN
"RTN","VPSPARAM",255,0)
 ;   Multiple SUBS IEN
"RTN","VPSPARAM",256,0)
 ; 
"RTN","VPSPARAM",257,0)
 K ERR
"RTN","VPSPARAM",258,0)
 N EXIST S EXIST=$D(^VPS(853,PARAMIEN,"PARAM",TRNDT,RSNSUB,RSNTYP,0))
"RTN","VPSPARAM",259,0)
 I 'EXIST D
"RTN","VPSPARAM",260,0)
 . N IENS S IENS(1)=RSNTYP
"RTN","VPSPARAM",261,0)
 . N FDA S FDA(FIL,"+1,"_TRNDT_","_PARAMIEN_",",.01)=RSNTYP
"RTN","VPSPARAM",262,0)
 . D UPDATE^DIE("","FDA","IENS","ERR")
"RTN","VPSPARAM",263,0)
 Q RSNTYP_","_TRNDT_","_PARAMIEN
"RTN","VPSPARAM",264,0)
 ;
"RTN","VPSPARAM",265,0)
ERROR(FDAERR,FLDNAME,FLDVAL) ; Return error string that VetLink can recognize
"RTN","VPSPARAM",266,0)
 ; INPUT
"RTN","VPSPARAM",267,0)
 ;   FDAERR : error array that was created when attempting to file the changes
"RTN","VPSPARAM",268,0)
 ;   FLDNAME: the field that has invalid value
"RTN","VPSPARAM",269,0)
 ;   FLDVAL : the invalid value
"RTN","VPSPARAM",270,0)
 ; RETURN
"RTN","VPSPARAM",271,0)
 ;   Field Name^Field Value^99^error
"RTN","VPSPARAM",272,0)
 ;
"RTN","VPSPARAM",273,0)
 N RESULT
"RTN","VPSPARAM",274,0)
 N ERRNUM S ERRNUM=0
"RTN","VPSPARAM",275,0)
 S ERRNUM=$O(FDAERR("DIERR",ERRNUM))
"RTN","VPSPARAM",276,0)
 N ERRTXT S ERRTXT=FDAERR("DIERR",ERRNUM,"TEXT",1)
"RTN","VPSPARAM",277,0)
 N EXIST S EXIST=ERRTXT["already exists"
"RTN","VPSPARAM",278,0)
 S:EXIST RESULT=$$RESULT(1,FLDNAME,FLDVAL,"") ; not an exception as far as Vecna is concerned.
"RTN","VPSPARAM",279,0)
 S:'EXIST RESULT=$$RESULT(99,FLDNAME,FLDVAL,ERRTXT)
"RTN","VPSPARAM",280,0)
 Q RESULT
"RTN","VPSPARAM",281,0)
 ; 
"RTN","VPSPARAM",282,0)
RESULT(STATCODE,FLDNAME,FLDVAL,ERRMSG) ;return result in the structure that VetLink expects
"RTN","VPSPARAM",283,0)
 ; INPUT
"RTN","VPSPARAM",284,0)
 ;   STATCODE : status code (1 = successfull, 99 = error)
"RTN","VPSPARAM",285,0)
 ;   FLDNAME  : field name
"RTN","VPSPARAM",286,0)
 ;   FLDVAL   : field value
"RTN","VPSPARAM",287,0)
 ;   ERRMSG   : (OPTIONAL) error message to send back to RPC caller
"RTN","VPSPARAM",288,0)
 ; RETURN
"RTN","VPSPARAM",289,0)
 ;   FLDNAME^FLDVAL^STATCODE^ERMSG
"RTN","VPSPARAM",290,0)
 ;
"RTN","VPSPARAM",291,0)
 S:ERRMSG'="" ERRMSG=U_ERRMSG
"RTN","VPSPARAM",292,0)
 Q FLDNAME_U_FLDVAL_U_STATCODE_ERRMSG
"RTN","VPSPARAM",293,0)
 ;
"RTN","VPSPARAM",294,0)
TABLE(FLDDEF) ;build array of valid fields defined to VPS PARAMETER (#853)
"RTN","VPSPARAM",295,0)
 ; INPUT/OUTPUT
"RTN","VPSPARAM",296,0)
 ;   FLDDEF : array by field names
"RTN","VPSPARAM",297,0)
 ;            FLDDEF(field name)=file number^field number^input type^root field number
"RTN","VPSPARAM",298,0)
 ;            type : I(nternal) or E(xternal)
"RTN","VPSPARAM",299,0)
 ;            root field number : optional field. this field contains the current field value of the field being updated
"RTN","VPSPARAM",300,0)
 ;            ex: FLDDEF("PDO INVOCABLE PDO")="853.01^1^I^.02"
"RTN","VPSPARAM",301,0)
 K FLDDEF
"RTN","VPSPARAM",302,0)
 N LN,LINE,STRING
"RTN","VPSPARAM",303,0)
 F LN=2:1 S LINE=$T(PARMFLDS+LN),STRING=$P(LINE,";;",2) Q:STRING=""  D
"RTN","VPSPARAM",304,0)
 . S FLDDEF($P(STRING,U,3))=$P(STRING,U,1,2)_U_$P(STRING,U,4,6)
"RTN","VPSPARAM",305,0)
 Q
"RTN","VPSPARAM",306,0)
 ;
"RTN","VPSPARAM",307,0)
PARMFLDS ; list of Configuration Parameter Statistics fields defined in VPS PARAMETER file (#853)
"RTN","VPSPARAM",308,0)
 ;;FILE NUMBER^FIELD NUMBER^FIELD NAME^INPUT TYPE^
"RTN","VPSPARAM",309,0)
 ;;853.01^1^PDO INVOCABLE PERIOD^E^^
"RTN","VPSPARAM",310,0)
 ;;853.01^2^AR ENABLED/DISABLED DT^E^^
"RTN","VPSPARAM",311,0)
 ;;853.01^3^MR ENABLED/DISABLED DT^E^^
"RTN","VPSPARAM",312,0)
 ;;853.01^4^AUDIT ENABLED DT^E^^
"RTN","VPSPARAM",313,0)
 ;;853.01^5^AR FREE TEXT ENABLED^E^^
"RTN","VPSPARAM",314,0)
 ;;853.01^6^MR FREE TEXT ENABLED^E^^
"RTN","VPSPARAM",315,0)
 ;;853.01^7^TIME LIMIT TOO LATE ARRIVAL^E^^
"RTN","VPSPARAM",316,0)
 ;;853.01^8^TIME LIMIT TOO EARLY ARRIVAL^E^^
"RTN","VPSPARAM",317,0)
 ;;853.01^9^TIME LIMIT NOT EARLY ENOUGH^E^^
"RTN","VPSPARAM",318,0)
 ;;853.01^10^DESIRED AMR SESSION COMPLETED^E^^
"RTN","VPSPARAM",319,0)
 ;;853.01^11^DESIRED AMR TIME COMPLETED^E^^
"RTN","VPSPARAM",320,0)
 ;;853.01^12^DESIRED AR SESSION COMPLETED^E^^
"RTN","VPSPARAM",321,0)
 ;;853.01^13^DESIRED AR TIME COMPLETED^E^^
"RTN","VPSPARAM",322,0)
 ;;853.01^14^DESIRED MR SESSION COMPLETED^E^^
"RTN","VPSPARAM",323,0)
 ;;853.01^15^DESIRED MR TIME COMPLETED^E^^
"RTN","VPSPARAM",324,0)
 ;;853.01^16^TIME LIMIT AR COMPLETE^E^^
"RTN","VPSPARAM",325,0)
 ;;853.01^17^TIME LIMIT MR COMPLETE^E^^
"RTN","VPSPARAM",326,0)
 ;;853.01^18^TIME LIMIT AMR COMPLETE^E^^
"RTN","VPSPARAM",327,0)
 ;;853.01^19^LOW USE THRESHOLD PDO^E^^
"RTN","VPSPARAM",328,0)
 ;;853.01^20^AMR ENABLED/DISABLED DT^E^^
"RTN","VPSPARAM",329,0)
 ;;853.01^21^AR ENABLED^E^^
"RTN","VPSPARAM",330,0)
 ;;853.01^22^ALLERGY DISCREP UCL NO AR^E^^
"RTN","VPSPARAM",331,0)
 ;;853.01^23^ALLERGY DISCREP UCL POST AR^E^^
"RTN","VPSPARAM",332,0)
 ;;853.01^24^MED DISCREP UCL NO MR^E^^
"RTN","VPSPARAM",333,0)
 ;;853.01^25^MED DISCREP UCL POST MR^E^^
"RTN","VPSPARAM",334,0)
 ;;853.01^26^MR ENABLED^E^^
"RTN","VPSPARAM",335,0)
 ;;853.01^27^AMR ENABLED^E^^
"RTN","VPSPARAM",336,0)
 ;;853.011^1^LOW USE THRESHOLD AMR^E^AMRREASON^
"RTN","VPSPARAM",337,0)
 ;;853.012^1^LOW USE THRESHOLD AR^E^ARREASON^
"RTN","VPSPARAM",338,0)
 ;;853.013^1^LOW USE THRESHOLD MR^E^MRREASON^
"RTN","VPSPARAM",339,0)
 ;;
"RTN","VPSPDO1")
0^4^B236656167
"RTN","VPSPDO1",1,0)
VPSPDO1 ;DALOI/KML,WOIFO/BT -  PDO OUTPUT DISPLAY - ALLERGIES ;11/20/11 15:30
"RTN","VPSPDO1",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Oct 21, 2011;Build 64
"RTN","VPSPDO1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPDO1",4,0)
 ;
"RTN","VPSPDO1",5,0)
 Q
"RTN","VPSPDO1",6,0)
 ;IA #10103 - supported use of XLFDT functions
"RTN","VPSPDO1",7,0)
 ;IA #10104 - supported use of XLFSTR function
"RTN","VPSPDO1",8,0)
 ;
"RTN","VPSPDO1",9,0)
 ; The VPSPDO* procedures produce 2 separate displays of the PDO output 
"RTN","VPSPDO1",10,0)
 ; which are the  PATIENT ENTERED ALLERGY MEDICATION REVIEW and the PATIENT FACILITATED ALLERGY MEDICATION REVIEW
"RTN","VPSPDO1",11,0)
 ; which can be invoked by CPRS TIU components and as an RPC to be called by Vetlink staff-facing interface 
"RTN","VPSPDO1",12,0)
 ; the GET procedure below determines which version of the PDO output to display
"RTN","VPSPDO1",13,0)
 ;
"RTN","VPSPDO1",14,0)
GET(PDO,VPSNUM,VPSTYP) ; RPC: VPS GET MRAR PDO
"RTN","VPSPDO1",15,0)
 ; INPUT
"RTN","VPSPDO1",16,0)
 ;   PDO    : the name of global array where each line of the MRAR output will be stored  (e.g., "^TMP(""VPSPDO1"",$J)"
"RTN","VPSPDO1",17,0)
 ;   VPSNUM : Parameter Value - patient SSN OR DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSPDO1",18,0)
 ;   VPSTYP : Parameter TYPE - SSN or DFN OR ICN OR VIC/CAC (REQUIRED)
"RTN","VPSPDO1",19,0)
 ; OUTPUT
"RTN","VPSPDO1",20,0)
 ;   PDO    : the name of global array where each line of the MRAR output will be stored
"RTN","VPSPDO1",21,0)
 ;
"RTN","VPSPDO1",22,0)
 ;Store Displayed MRAR data into global array PDO
"RTN","VPSPDO1",23,0)
 S PDO=$NA(^TMP("VPSPDO1",$J))
"RTN","VPSPDO1",24,0)
 K @PDO
"RTN","VPSPDO1",25,0)
 S VPSNUM=$G(VPSNUM)
"RTN","VPSPDO1",26,0)
 S VPSTYP=$G(VPSTYP)
"RTN","VPSPDO1",27,0)
 N VPSDFN S VPSDFN=$$VALIDATE^VPSRPC1(VPSTYP,VPSNUM)
"RTN","VPSPDO1",28,0)
 I VPSDFN<1 S @PDO@(1,0)=$P(VPSDFN,U,2)
"RTN","VPSPDO1",29,0)
 I VPSDFN>0 D GETPDO(VPSDFN,PDO)
"RTN","VPSPDO1",30,0)
 Q
"RTN","VPSPDO1",31,0)
 ;
"RTN","VPSPDO1",32,0)
TIU(PTIEN,PDOARY) ;TIU DOCUMENT: |VPS MRAR PDO|
"RTN","VPSPDO1",33,0)
 ; TIU OBJECT : S X=$$TIU^VPSPDO1(DFN,"^TMP(""VPSPDO1"",$J)")
"RTN","VPSPDO1",34,0)
 ;
"RTN","VPSPDO1",35,0)
 ; INPUT
"RTN","VPSPDO1",36,0)
 ;   PTIEN  : PATIENT DFN
"RTN","VPSPDO1",37,0)
 ;   PDOARY : the name of global array where each line of the TIU will be stored
"RTN","VPSPDO1",38,0)
 ;
"RTN","VPSPDO1",39,0)
 ;Store Displayed MRAR data into global array where the name is assigned to PDOARY (eg: "^TMP(""VPSPDO1"",$J)")
"RTN","VPSPDO1",40,0)
 D GETPDO(PTIEN,PDOARY)
"RTN","VPSPDO1",41,0)
 Q "~@"_$NA(@PDOARY)
"RTN","VPSPDO1",42,0)
 ;
"RTN","VPSPDO1",43,0)
GETPDO(PTIEN,PDOARY) ;
"RTN","VPSPDO1",44,0)
 ; INPUT
"RTN","VPSPDO1",45,0)
 ;   PTIEN  : PATIENT DFN
"RTN","VPSPDO1",46,0)
 ;   PDOARY : the name of global array where each line of the TIU will be stored
"RTN","VPSPDO1",47,0)
 ;
"RTN","VPSPDO1",48,0)
 ; -- create VPS pdo object
"RTN","VPSPDO1",49,0)
 N PDOOREF S PDOOREF=$$NEW^VPSOBJ(PTIEN,PDOARY)
"RTN","VPSPDO1",50,0)
 ;
"RTN","VPSPDO1",51,0)
 ; -- initialize PDO object with date of Last Mrar and Staff flag
"RTN","VPSPDO1",52,0)
 Q:'$$INITPDO(PDOOREF)
"RTN","VPSPDO1",53,0)
 ;
"RTN","VPSPDO1",54,0)
 ; -- Okay to Invoke PDO ?
"RTN","VPSPDO1",55,0)
 Q:'$$OKINVK(PDOOREF)
"RTN","VPSPDO1",56,0)
 ; 
"RTN","VPSPDO1",57,0)
 ; -- date/time stamp the PDO FIRST INVOKED or PDO INVOKED DT field
"RTN","VPSPDO1",58,0)
 Q:'$$UPDINVK(PDOOREF,$$NOW^XLFDT())
"RTN","VPSPDO1",59,0)
 ;
"RTN","VPSPDO1",60,0)
 ; -- Generate PDO in temp global
"RTN","VPSPDO1",61,0)
 D START(PDOOREF)
"RTN","VPSPDO1",62,0)
 ;
"RTN","VPSPDO1",63,0)
 ; -- clean up PDO object
"RTN","VPSPDO1",64,0)
 D CLOSE^VPSOBJ(PDOOREF)
"RTN","VPSPDO1",65,0)
 Q
"RTN","VPSPDO1",66,0)
 ;
"RTN","VPSPDO1",67,0)
INITPDO(OREF) ; initialize PDO object with date of LAST MRAR, STAFF flag
"RTN","VPSPDO1",68,0)
 ; INPUT
"RTN","VPSPDO1",69,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",70,0)
 ; RETURN
"RTN","VPSPDO1",71,0)
 ;   1 if successfull otherwise 0
"RTN","VPSPDO1",72,0)
 ;
"RTN","VPSPDO1",73,0)
 ; -- validate patient MRAR
"RTN","VPSPDO1",74,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",75,0)
 I 'PTIEN D SETERR^VPSOBJ(OREF,"Invalid Patient IEN") Q 0
"RTN","VPSPDO1",76,0)
 I '$D(^VPS(853.5,PTIEN)) D SETERR^VPSOBJ(OREF,"This patient has no MRAR data.") Q 0
"RTN","VPSPDO1",77,0)
 ;
"RTN","VPSPDO1",78,0)
 N LASTMRAR S LASTMRAR=$O(^VPS(853.5,PTIEN,"MRAR","B",""),-1)
"RTN","VPSPDO1",79,0)
 I 'LASTMRAR D SETERR^VPSOBJ(OREF,"This patient has no MRAR transaction.") Q 0
"RTN","VPSPDO1",80,0)
 ;
"RTN","VPSPDO1",81,0)
 ; -- set last mrar
"RTN","VPSPDO1",82,0)
 D SETLSTMR^VPSOBJ(OREF,LASTMRAR)
"RTN","VPSPDO1",83,0)
 ;
"RTN","VPSPDO1",84,0)
 ; -- If field .13 (Interface module = "S" then data comes from staff-facing interfacing otherwise from patient-facing (kiosk))
"RTN","VPSPDO1",85,0)
 N STAFF S STAFF=$S($$GET1^DIQ(853.51,LASTMRAR_","_PTIEN_",",.13,"I")="S":1,1:0)
"RTN","VPSPDO1",86,0)
 D SETSTAFF^VPSOBJ(OREF,STAFF)
"RTN","VPSPDO1",87,0)
 ;
"RTN","VPSPDO1",88,0)
 Q (LASTMRAR>0)
"RTN","VPSPDO1",89,0)
 ;
"RTN","VPSPDO1",90,0)
OKINVK(OREF) ;Okay to Invoke PDO ?
"RTN","VPSPDO1",91,0)
 ; INPUT
"RTN","VPSPDO1",92,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",93,0)
 ; RETURN
"RTN","VPSPDO1",94,0)
 ;   1 if successfull otherwise 0
"RTN","VPSPDO1",95,0)
 ;
"RTN","VPSPDO1",96,0)
 ; -- get the PDO invocable period
"RTN","VPSPDO1",97,0)
 N PERIOD S PERIOD=$$GETINVPR(OREF)
"RTN","VPSPDO1",98,0)
 Q:'PERIOD 0
"RTN","VPSPDO1",99,0)
 ;
"RTN","VPSPDO1",100,0)
 ; -- how old is the last mrar
"RTN","VPSPDO1",101,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",102,0)
 N TRNDT S TRNDT=$$DT^XLFDT() ; IA #10103
"RTN","VPSPDO1",103,0)
 N AGE S AGE=$$FMDIFF^XLFDT(TRNDT,$P(LASTMRAR,"."),1)
"RTN","VPSPDO1",104,0)
 ;
"RTN","VPSPDO1",105,0)
 ; -- okay if the last mrar in the invocable period
"RTN","VPSPDO1",106,0)
 Q 1
"RTN","VPSPDO1",107,0)
 N OK S OK=(AGE'>PERIOD)
"RTN","VPSPDO1",108,0)
 I 'OK D SETERR^VPSOBJ(OREF,"The last MRAR for this patient is too old. Last MRAR Date = "_$$FMTE^XLFDT(LASTMRAR,5)_". PDO Invocable Period = "_PERIOD)
"RTN","VPSPDO1",109,0)
 Q OK
"RTN","VPSPDO1",110,0)
 ;
"RTN","VPSPDO1",111,0)
GETINVPR(OREF) ;get the PDO invocable period
"RTN","VPSPDO1",112,0)
 ; INPUT
"RTN","VPSPDO1",113,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",114,0)
 ; RETURN
"RTN","VPSPDO1",115,0)
 ;   PDO invocable period if successfull otherwise 0
"RTN","VPSPDO1",116,0)
 ;
"RTN","VPSPDO1",117,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",118,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",119,0)
 ; -- Check make sure last mrar transaction contain either Kiosk Group or Clinic.
"RTN","VPSPDO1",120,0)
 ;    These values will be used to retrieve the invocable period in file 853
"RTN","VPSPDO1",121,0)
 N KIOSKGRP S KIOSKGRP=$$GET1^DIQ(853.51,LASTMRAR_","_PTIEN_",",.03,"I")
"RTN","VPSPDO1",122,0)
 N CLINIC S CLINIC=$$GET1^DIQ(853.51,LASTMRAR_","_PTIEN_",",.04,"I")
"RTN","VPSPDO1",123,0)
 N NOREQFLD S NOREQFLD=(KIOSKGRP="")&(CLINIC="")
"RTN","VPSPDO1",124,0)
 I NOREQFLD D SETERR^VPSOBJ(OREF,"The last MRAR for this patient has undefined Kiosk Group and undefined Clinic. Either Kiosk Group or Clinic must exist")
"RTN","VPSPDO1",125,0)
 Q:NOREQFLD 0
"RTN","VPSPDO1",126,0)
 ;
"RTN","VPSPDO1",127,0)
 ; -- Get invocable period based on Kiosk Group and/or CLinic
"RTN","VPSPDO1",128,0)
 N KGPER,KGTRXDT S KGPER=$$GETPER("D",KIOSKGRP,.KGTRXDT)
"RTN","VPSPDO1",129,0)
 N CLPER,CLTRXDT S CLPER=$$GETPER("C",CLINIC,.CLTRXDT)
"RTN","VPSPDO1",130,0)
 ;
"RTN","VPSPDO1",131,0)
 ; -- Get the period that was set last (most current)
"RTN","VPSPDO1",132,0)
 N PERIOD S PERIOD=$S(KGTRXDT>CLTRXDT:KGPER,1:CLPER)
"RTN","VPSPDO1",133,0)
 S:'PERIOD PERIOD=3 ; default is 3 days
"RTN","VPSPDO1",134,0)
 Q PERIOD
"RTN","VPSPDO1",135,0)
 ;
"RTN","VPSPDO1",136,0)
GETPER(IDX,VAL,PRMTRXDT) ;Get invocable period based on Kiosk Group and/or CLinic
"RTN","VPSPDO1",137,0)
 ; INPUT
"RTN","VPSPDO1",138,0)
 ;   IDX      : Index name to get the IEN of Kiosk Group or Clinic in File 853
"RTN","VPSPDO1",139,0)
 ;   VAL      : either the Kiosk group or the Clinic IEN
"RTN","VPSPDO1",140,0)
 ; OUTPUT
"RTN","VPSPDO1",141,0)
 ;   PRMTRXDT : The last transaction date in file 853 that contains Invocable period
"RTN","VPSPDO1",142,0)
 ; RETURN
"RTN","VPSPDO1",143,0)
 ;   Invocable Period
"RTN","VPSPDO1",144,0)
 ;
"RTN","VPSPDO1",145,0)
 S PRMTRXDT=0
"RTN","VPSPDO1",146,0)
 N PERIOD S PERIOD=0
"RTN","VPSPDO1",147,0)
 ; KDC 10/31/2014
"RTN","VPSPDO1",148,0)
 I IDX=""!(VAL="") Q PERIOD
"RTN","VPSPDO1",149,0)
 N PRMIEN S PRMIEN=$O(^VPS(853,IDX,VAL,0))
"RTN","VPSPDO1",150,0)
 Q:'PRMIEN PERIOD
"RTN","VPSPDO1",151,0)
 ;
"RTN","VPSPDO1",152,0)
 S PRMTRXDT=99999999
"RTN","VPSPDO1",153,0)
 F  S PRMTRXDT=$O(^VPS(853,PRMIEN,"PARAM",PRMTRXDT),-1) Q:'PRMTRXDT  D  Q:PERIOD
"RTN","VPSPDO1",154,0)
 . S PERIOD=$P($G(^VPS(853,PRMIEN,"PARAM",PRMTRXDT,1)),U)
"RTN","VPSPDO1",155,0)
 S:PRMTRXDT=99999999 PRMTRXDT=0
"RTN","VPSPDO1",156,0)
 Q PERIOD
"RTN","VPSPDO1",157,0)
 ;
"RTN","VPSPDO1",158,0)
UPDINVK(OREF,DTSTAMP) ;update the PDO FIRST INVOKED or PDO INVOKED DT field
"RTN","VPSPDO1",159,0)
 ; INPUT
"RTN","VPSPDO1",160,0)
 ;   OREF    : Object Reference for the VPS PDO object
"RTN","VPSPDO1",161,0)
 ;   DTSTAMP : Date/Time Stamp the PDO FIRST INVOKED or PDO INVOKED DT field
"RTN","VPSPDO1",162,0)
 ; RETURN
"RTN","VPSPDO1",163,0)
 ;   1 if successfull otherwise 0
"RTN","VPSPDO1",164,0)
 ;
"RTN","VPSPDO1",165,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",166,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",167,0)
 ;
"RTN","VPSPDO1",168,0)
 ; -- Get First Invoked Date
"RTN","VPSPDO1",169,0)
 N FINVKDT S FINVKDT=$$GET1^DIQ(853.51,LASTMRAR_","_PTIEN_",",70,"I")
"RTN","VPSPDO1",170,0)
 ;
"RTN","VPSPDO1",171,0)
 ; -- if PDO FIRST INVOKED doesn't exist set it otherwise set the PDO NEXT INVOKED
"RTN","VPSPDO1",172,0)
 N VPSFDA,VPSERR
"RTN","VPSPDO1",173,0)
 I FINVKDT="" S VPSFDA(853.51,LASTMRAR_","_PTIEN_",",70)=DTSTAMP
"RTN","VPSPDO1",174,0)
 I FINVKDT'="" S VPSFDA(853.51,LASTMRAR_","_PTIEN_",",73)=DTSTAMP
"RTN","VPSPDO1",175,0)
 D FILE^DIE("","VPSFDA","VPSERR")
"RTN","VPSPDO1",176,0)
 Q:'$D(VPSERR) 1
"RTN","VPSPDO1",177,0)
 ;
"RTN","VPSPDO1",178,0)
 ; -- filing error
"RTN","VPSPDO1",179,0)
 N ERRNUM S ERRNUM=$O(VPSERR("DIERR",0))
"RTN","VPSPDO1",180,0)
 D SETERR^VPSOBJ(OREF,VPSERR("DIERR",ERRNUM,"TEXT",1))
"RTN","VPSPDO1",181,0)
 Q 0
"RTN","VPSPDO1",182,0)
 ;
"RTN","VPSPDO1",183,0)
START(OREF) ;allergy and medications section of the PDO output specifically for the PATIENT ENTERED ALLERGY MEDICATION REVIEW
"RTN","VPSPDO1",184,0)
 ; INPUT
"RTN","VPSPDO1",185,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",186,0)
 ;
"RTN","VPSPDO1",187,0)
 ; -- Header lines
"RTN","VPSPDO1",188,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1",189,0)
 D HDR(OREF)
"RTN","VPSPDO1",190,0)
 ;
"RTN","VPSPDO1",191,0)
 ; -- Review conducted with lines
"RTN","VPSPDO1",192,0)
 D:STAFF CNDWTH(OREF)
"RTN","VPSPDO1",193,0)
 ;
"RTN","VPSPDO1",194,0)
 ; -- Allergies section
"RTN","VPSPDO1",195,0)
 D ADDCJ^VPSOBJ(OREF,"***   ALLERGIES   ***   ALLERGIES   ***")
"RTN","VPSPDO1",196,0)
 D ALRLOCAL(OREF) ; build local vista allergy
"RTN","VPSPDO1",197,0)
 D ALRREMTE(OREF) ; build remote (cdw) allergy
"RTN","VPSPDO1",198,0)
 D ADDALLER(OREF) ; build additional allergy
"RTN","VPSPDO1",199,0)
 D GETCH^VPSPDO2(OREF) ; build allergy changes since last mrar
"RTN","VPSPDO1",200,0)
 ;
"RTN","VPSPDO1",201,0)
 ; -- MEDICATIONS Section
"RTN","VPSPDO1",202,0)
 N MEDITMS ; array represents the list of medications - built by MEDS and used by MEDCHNG to display only the changes
"RTN","VPSPDO1",203,0)
 D MEDHDR^VPSPDO1M(OREF) ; build medication header section
"RTN","VPSPDO1",204,0)
 D MEDS^VPSPDO1M(OREF,.MEDITMS) ; build medication section
"RTN","VPSPDO1",205,0)
 D ADDMEDS^VPSPDO3M(OREF) ; build additional medication section
"RTN","VPSPDO1",206,0)
 D MEDCHNG^VPSPDO2M(OREF,.MEDITMS) ; build Medication Changes Since section
"RTN","VPSPDO1",207,0)
 Q
"RTN","VPSPDO1",208,0)
 ; 
"RTN","VPSPDO1",209,0)
HDR(OREF) ; produce TIU Note header lines
"RTN","VPSPDO1",210,0)
 ; INPUT
"RTN","VPSPDO1",211,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",212,0)
 ;
"RTN","VPSPDO1",213,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1",214,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",215,0)
 I 'STAFF D ADDLJ^VPSOBJ(OREF,"Patient Entered Allergy Medication Review : "_$$FMTE^XLFDT(LMRARDT))
"RTN","VPSPDO1",216,0)
 I STAFF D ADDLJ^VPSOBJ(OREF,"PATIENT FACILITATED ALLERGY MEDICATION REVIEW: "_$$FMTE^XLFDT(LMRARDT))
"RTN","VPSPDO1",217,0)
 D ADDUNDLN^VPSOBJ(OREF)
"RTN","VPSPDO1",218,0)
 Q
"RTN","VPSPDO1",219,0)
 ;
"RTN","VPSPDO1",220,0)
CNDWTH(OREF) ; produce Review conducted with lines
"RTN","VPSPDO1",221,0)
 ; INPUT
"RTN","VPSPDO1",222,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",223,0)
 ;
"RTN","VPSPDO1",224,0)
 ; join conducted with items into a string
"RTN","VPSPDO1",225,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",226,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",227,0)
 ;
"RTN","VPSPDO1",228,0)
 N STRING S STRING=""
"RTN","VPSPDO1",229,0)
 N CNDWTH S CNDWTH=0
"RTN","VPSPDO1",230,0)
 ;
"RTN","VPSPDO1",231,0)
 F  S CNDWTH=$O(^VPS(853.5,PTIEN,"MRAR",LASTMRAR,"MRARWITH",CNDWTH)) Q:'CNDWTH  D
"RTN","VPSPDO1",232,0)
 . S STRING=STRING_$$GET1^DIQ(853.5121,CNDWTH_","_LASTMRAR_","_PTIEN_",",.01,"E")_", "
"RTN","VPSPDO1",233,0)
 S:STRING'="" STRING=$E(STRING,1,$L(STRING)-2)
"RTN","VPSPDO1",234,0)
 ;
"RTN","VPSPDO1",235,0)
 ; display conducted with line
"RTN","VPSPDO1",236,0)
 D ADDLJ^VPSOBJ(OREF,"REVIEW CONDUCTED WITH: "_STRING)
"RTN","VPSPDO1",237,0)
 D ADDUNDLN^VPSOBJ(OREF)
"RTN","VPSPDO1",238,0)
 Q
"RTN","VPSPDO1",239,0)
 ;
"RTN","VPSPDO1",240,0)
ALRLOCAL(OREF) ;produce local allergy section
"RTN","VPSPDO1",241,0)
 ; INPUT
"RTN","VPSPDO1",242,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",243,0)
 ;
"RTN","VPSPDO1",244,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",245,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",246,0)
 ;
"RTN","VPSPDO1",247,0)
 N BL F BL=1:1:2 D ADDBLANK^VPSOBJ(OREF)
"RTN","VPSPDO1",248,0)
 N LOCAL S LOCAL=$D(^VPS(853.5,PTIEN,"MRAR",LASTMRAR,"ALLERGY","LOCAL"))
"RTN","VPSPDO1",249,0)
 I LOCAL D
"RTN","VPSPDO1",250,0)
 . D ADDLJ^VPSOBJ(OREF,"Allergy Response Key")
"RTN","VPSPDO1",251,0)
 . D ADDLJ^VPSOBJ(OREF,"Y = Allergic")
"RTN","VPSPDO1",252,0)
 . D ADDLJ^VPSOBJ(OREF,"N = Not Allergic")
"RTN","VPSPDO1",253,0)
 . D ADDLJ^VPSOBJ(OREF,"? = Unsure")
"RTN","VPSPDO1",254,0)
 . D ADDLJ^VPSOBJ(OREF,"X = No Response (incomplete session/no answer)")
"RTN","VPSPDO1",255,0)
 . N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1",256,0)
 . I STAFF D ADDLJ^VPSOBJ(OREF,">> indicates MARK FOR FOLLOW UP")
"RTN","VPSPDO1",257,0)
 . D ADDBLANK^VPSOBJ(OREF)
"RTN","VPSPDO1",258,0)
 . D ADDCJ^VPSOBJ(OREF,"Local Allergies")
"RTN","VPSPDO1",259,0)
 . D BLD(OREF,"LOCAL")
"RTN","VPSPDO1",260,0)
 I 'LOCAL D
"RTN","VPSPDO1",261,0)
 . D ADDCJ^VPSOBJ(OREF,"Local Allergies")
"RTN","VPSPDO1",262,0)
 . D ADDLJ^VPSOBJ(OREF,"Patient has NKDA at this VA.")
"RTN","VPSPDO1",263,0)
 Q
"RTN","VPSPDO1",264,0)
 ;
"RTN","VPSPDO1",265,0)
ALRREMTE(OREF) ; produce remote allergies section
"RTN","VPSPDO1",266,0)
 ; INPUT
"RTN","VPSPDO1",267,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",268,0)
 ;
"RTN","VPSPDO1",269,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",270,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",271,0)
 ;
"RTN","VPSPDO1",272,0)
 D ADDBLANK^VPSOBJ(OREF)
"RTN","VPSPDO1",273,0)
 D ADDCJ^VPSOBJ(OREF,"Remote Allergies")
"RTN","VPSPDO1",274,0)
 N REMOTE S REMOTE=$D(^VPS(853.5,PTIEN,"MRAR",LASTMRAR,"ALLERGY","REMOTE"))
"RTN","VPSPDO1",275,0)
 I REMOTE D BLD(OREF,"REMOTE")
"RTN","VPSPDO1",276,0)
 I 'REMOTE D 
"RTN","VPSPDO1",277,0)
 . D ADDLJ^VPSOBJ(OREF,"Patient has NKDA at any remote VA.")
"RTN","VPSPDO1",278,0)
 . D ADDBLANK^VPSOBJ(OREF)
"RTN","VPSPDO1",279,0)
 Q
"RTN","VPSPDO1",280,0)
 ;
"RTN","VPSPDO1",281,0)
ADDALLER(OREF) ; build additional allergies section
"RTN","VPSPDO1",282,0)
 ; INPUT
"RTN","VPSPDO1",283,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",284,0)
 ;
"RTN","VPSPDO1",285,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",286,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",287,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1",288,0)
 ; 
"RTN","VPSPDO1",289,0)
 N ALLRADD S ALLRADD=$D(^VPS(853.5,PTIEN,"MRAR",LASTMRAR,"ALLERGYADD"))
"RTN","VPSPDO1",290,0)
 N REMOTE S REMOTE=$D(^VPS(853.5,PTIEN,"MRAR",LASTMRAR,"ALLERGY","REMOTE"))
"RTN","VPSPDO1",291,0)
 N NKDA S NKDA=($$GET1^DIQ(853.51,LASTMRAR_","_PTIEN_",",20,"I"))
"RTN","VPSPDO1",292,0)
 N DONTKNOW S DONTKNOW=$$GET1^DIQ(853.51,LASTMRAR_","_PTIEN,19)  ; patient could have also selected the structured response, "I don't know what my other allergies are". 
"RTN","VPSPDO1",293,0)
 D SETDKNW^VPSOBJ(OREF,DONTKNOW)
"RTN","VPSPDO1",294,0)
 ;
"RTN","VPSPDO1",295,0)
 I ALLRADD D BLDADD^VPSPDO2(OREF) ; build additional allergies section
"RTN","VPSPDO1",296,0)
 I STAFF,'ALLRADD,'REMOTE,NKDA D ADDLJ^VPSOBJ(OREF,"Patient has NKDA confirmed no additional allergies present.")
"RTN","VPSPDO1",297,0)
 Q
"RTN","VPSPDO1",298,0)
 ;
"RTN","VPSPDO1",299,0)
BLD(OREF,TYPE) ;  build local and remote allergy sections for Patient Entered allergy medication review note
"RTN","VPSPDO1",300,0)
 ; INPUT:
"RTN","VPSPDO1",301,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",302,0)
 ;   TYPE : "LOCAL" or "REMOTE"
"RTN","VPSPDO1",303,0)
 ;
"RTN","VPSPDO1",304,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",305,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",306,0)
 ;
"RTN","VPSPDO1",307,0)
 N HDR S HDR=0
"RTN","VPSPDO1",308,0)
 N NOALLER S NOALLER=1
"RTN","VPSPDO1",309,0)
 N ALRID,ALRIEN S (ALRID,ALRIEN)=0
"RTN","VPSPDO1",310,0)
 ;
"RTN","VPSPDO1",311,0)
 F  S ALRID=$O(^VPS(853.5,PTIEN,"MRAR",LASTMRAR,"ALLERGY",TYPE,ALRID)) Q:'ALRID  F  S ALRIEN=$O(^(ALRID,ALRIEN)) Q:'ALRIEN  D
"RTN","VPSPDO1",312,0)
 . ; initialze object with allergy name, patient response, station, mark for followup
"RTN","VPSPDO1",313,0)
 . Q:'$$ALLRFLD(OREF,TYPE,ALRIEN)  ; quit if allergy name is null (vecna needs to send a name)
"RTN","VPSPDO1",314,0)
 . ;
"RTN","VPSPDO1",315,0)
 . S NOALLER=0 ; indicate that there is allergy
"RTN","VPSPDO1",316,0)
 . D BLDALR(OREF,ALRIEN,TYPE) ; build the allergy array to be used in CHANGES SINCE algorithm
"RTN","VPSPDO1",317,0)
 . ;
"RTN","VPSPDO1",318,0)
 . I 'HDR S HDR=1 D ADALHDR(OREF,TYPE) ; Add header for allergy items (do only once)
"RTN","VPSPDO1",319,0)
 . D ADALFLDS(OREF,TYPE) ; add other allergy fields
"RTN","VPSPDO1",320,0)
 ;
"RTN","VPSPDO1",321,0)
 I NOALLER D
"RTN","VPSPDO1",322,0)
 . I TYPE="LOCAL" D ADDLJ^VPSOBJ(OREF,"Patient has NKDA at this VA.")
"RTN","VPSPDO1",323,0)
 . I TYPE'="LOCAL" D ADDLJ^VPSOBJ(OREF,"Patient has NKDA at any remote VA.")
"RTN","VPSPDO1",324,0)
 Q
"RTN","VPSPDO1",325,0)
 ; 
"RTN","VPSPDO1",326,0)
ALLRFLD(OREF,TYPE,ALRIEN) ; Initialize allergy name, patient response, station, mark for followup
"RTN","VPSPDO1",327,0)
 ; INPUT
"RTN","VPSPDO1",328,0)
 ;   OREF   : Object Reference for the VPS PDO object
"RTN","VPSPDO1",329,0)
 ;   TYPE   : Type of Allergy data(LOCAL VISTA /REMOTE - CDW)
"RTN","VPSPDO1",330,0)
 ;   ALRIEN : Allergy IEN
"RTN","VPSPDO1",331,0)
 ;
"RTN","VPSPDO1",332,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",333,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",334,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1",335,0)
 ;
"RTN","VPSPDO1",336,0)
 ; -- Initialize allergy name
"RTN","VPSPDO1",337,0)
 N ALLRNM
"RTN","VPSPDO1",338,0)
 I TYPE="LOCAL" D
"RTN","VPSPDO1",339,0)
 . S ALLRNM=$$GET1^DIQ(853.52,ALRIEN_","_LASTMRAR_","_PTIEN_",",.02,"I")
"RTN","VPSPDO1",340,0)
 . S ALLRNM=$$GET1^DIQ(120.8,ALLRNM_",",.02,"E") ; LOCAL ALLERGY ID
"RTN","VPSPDO1",341,0)
 I TYPE'="LOCAL" S ALLRNM=$$GET1^DIQ(853.52,ALRIEN_","_LASTMRAR_","_PTIEN_",",.05) ; REMOTE ALLERGY NAME
"RTN","VPSPDO1",342,0)
 Q:ALLRNM="" 0  ; quit if allergy name is null (vecna needs to send a name)
"RTN","VPSPDO1",343,0)
 D SETALRNM^VPSOBJ(OREF,ALLRNM)
"RTN","VPSPDO1",344,0)
 ;
"RTN","VPSPDO1",345,0)
 ; -- Initialize Patient Response
"RTN","VPSPDO1",346,0)
 N PATRESP S PATRESP=$$GET1^DIQ(853.52,ALRIEN_","_LASTMRAR_","_PTIEN_",",.06,"I") ; PATIENT RESPONSE which could be "YES", "NO", "NOT SURE", "NO RESPONSE"
"RTN","VPSPDO1",347,0)
 S PATRESP=$S(PATRESP="U":"?",1:PATRESP)
"RTN","VPSPDO1",348,0)
 D SETPATRP^VPSOBJ(OREF,PATRESP)
"RTN","VPSPDO1",349,0)
 ;
"RTN","VPSPDO1",350,0)
 ; -- Initialize Station
"RTN","VPSPDO1",351,0)
 N STATION S STATION=$$GET1^DIQ(853.52,ALRIEN_","_LASTMRAR_","_PTIEN_",",.09,"E")
"RTN","VPSPDO1",352,0)
 D SETSTATN^VPSOBJ(OREF,STATION)
"RTN","VPSPDO1",353,0)
 ;
"RTN","VPSPDO1",354,0)
 ; -- Initialize Mark for follow-up
"RTN","VPSPDO1",355,0)
 N MARKFOL S MARKFOL=""
"RTN","VPSPDO1",356,0)
 I STAFF S MARKFOL=$S($$GET1^DIQ(853.52,ALRIEN_","_LASTMRAR_","_PTIEN_",",16)]"":">>",1:"")  ; mark for follow-up for patient facilitated output
"RTN","VPSPDO1",357,0)
 D SETMKFOL^VPSOBJ(OREF,MARKFOL)
"RTN","VPSPDO1",358,0)
 Q 1
"RTN","VPSPDO1",359,0)
 ;
"RTN","VPSPDO1",360,0)
BLDALR(OREF,ALRIEN,TYPE) ; build the allergy array to be used in CHANGES SINCE algorithm
"RTN","VPSPDO1",361,0)
 ; INPUT
"RTN","VPSPDO1",362,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1",363,0)
 ;   ALRIEN   : Allergy IEN in File 853.52
"RTN","VPSPDO1",364,0)
 ;   TYPE     : Type of Allergy data(LOCAL VISTA /REMOTE - CDW)
"RTN","VPSPDO1",365,0)
 ;
"RTN","VPSPDO1",366,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1",367,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1",368,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1",369,0)
 N ALLRNM S ALLRNM=$$GETALRNM^VPSOBJ(OREF) ;Allergy Name must exist before calling this procedure, caller will validate
"RTN","VPSPDO1",370,0)
 ;
"RTN","VPSPDO1",371,0)
 N ALLRITMS,REACT
"RTN","VPSPDO1",372,0)
 S ALLRITMS(ALLRNM)=""
"RTN","VPSPDO1",373,0)
 N REACTIEN S REACTIEN=0
"RTN","VPSPDO1",374,0)
 ;
"RTN","VPSPDO1",375,0)
 F  S REACTIEN=$O(^VPS(853.5,PTIEN,"MRAR",LASTMRAR,"ALLERGY",ALRIEN,"REACTIONS",REACTIEN)) Q:'REACTIEN  D
"RTN","VPSPDO1",376,0)
 . S REACT(REACTIEN)=$$GETREACT(TYPE,REACTIEN,ALRIEN,LASTMRAR,PTIEN)_" " ; get reaction name
"RTN","VPSPDO1",377,0)
 . S ALLRITMS(ALLRNM,REACTIEN)=REACT(REACTIEN)
"RTN","VPSPDO1",378,0)
 ;
"RTN","VPSPDO1",379,0)
 I $D(ALLRITMS(ALLRNM)) D  ; pull reaction info for this allergy
"RTN","VPSPDO1",380,0)
 . N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1",381,0)
 . N REACTLN D REACT^VPSPUTL1(STAFF,LASTMRAR,PTIEN,ALRIEN,.COL,.REACT,.REACTLN)
"RTN","VPSPDO1",382,0)
 . M ALLRITMS(ALLRNM,"REACTLN")=REACTLN
"RTN","VPSPDO1",383,0)
 . K REACTLN
"RTN","VPSPDO1",384,0)
 ; 
"RTN","VPSPDO1",385,0)
 D SETALLR^VPSOBJ(OREF,.ALLRITMS)
"RTN","VPSPDO1",386,0)
 K ALLRITMS
"RTN","VPSPDO1",387,0)
 Q
"RTN","VPSPDO1",388,0)
 ;
"RTN","VPSPDO1",389,0)
GETREACT(TYPE,REACTIEN,ALRIEN,LASTMRAR,PTIEN) ; get reaction name
"RTN","VPSPDO1",390,0)
 ; INPUT
"RTN","VPSPDO1",391,0)
 ;   TYPE     : Type of Allergy data(LOCAL VISTA /REMOTE - CDW)
"RTN","VPSPDO1",392,0)
 ;   REACTIEN : Allergy Reaction IEN in File 853.57
"RTN","VPSPDO1",393,0)
 ;   ALRIEN   : Allergy IEN in File 853.52
"RTN","VPSPDO1",394,0)
 ;   LASTMRAR : Date of Last MRAR
"RTN","VPSPDO1",395,0)
 ;   PTIEN    : Patient DFN
"RTN","VPSPDO1",396,0)
 ;
"RTN","VPSPDO1",397,0)
 N IENS S IENS=REACTIEN_","_ALRIEN_","_LASTMRAR_","_PTIEN_","
"RTN","VPSPDO1",398,0)
 N REACTNM S REACTNM=""
"RTN","VPSPDO1",399,0)
 I TYPE="LOCAL" S REACTNM=$$GET1^DIQ(853.57,IENS,.02,"E")
"RTN","VPSPDO1",400,0)
 I TYPE'="LOCAL" S REACTNM=$$GET1^DIQ(853.57,IENS,.04)
"RTN","VPSPDO1",401,0)
 Q REACTNM
"RTN","VPSPDO1",402,0)
 ;
"RTN","VPSPDO1",403,0)
ADALHDR(OREF,TYPE) ; Add header for allergy items (do only once)
"RTN","VPSPDO1",404,0)
 ; INPUT
"RTN","VPSPDO1",405,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",406,0)
 ;   TYPE : Type of Allergy data(LOCAL VISTA /REMOTE - CDW)
"RTN","VPSPDO1",407,0)
 ;
"RTN","VPSPDO1",408,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1",409,0)
 N VPSX S VPSX=""
"RTN","VPSPDO1",410,0)
 S VPSX=$$SETFLD^VPSPUTL1("",VPSX,COL("PATRESP"))
"RTN","VPSPDO1",411,0)
 S VPSX=$$SETFLD^VPSPUTL1("Name",VPSX,COL("ALLERNM"))
"RTN","VPSPDO1",412,0)
 S VPSX=$$SETFLD^VPSPUTL1("Reaction",VPSX,COL("REACTION"))
"RTN","VPSPDO1",413,0)
 I TYPE="REMOTE" S VPSX=$$SETFLD^VPSPUTL1("Site",VPSX,COL("SITE"))
"RTN","VPSPDO1",414,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1",415,0)
 Q
"RTN","VPSPDO1",416,0)
 ;
"RTN","VPSPDO1",417,0)
ADALFLDS(OREF,TYPE) ; add other allergy fields
"RTN","VPSPDO1",418,0)
 ; INPUT
"RTN","VPSPDO1",419,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1",420,0)
 ;   TYPE : Type of Allergy data(LOCAL VISTA /REMOTE - CDW)
"RTN","VPSPDO1",421,0)
 ;
"RTN","VPSPDO1",422,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1",423,0)
 N ALRNM S ALRNM=$$GETALRNM^VPSOBJ(OREF)
"RTN","VPSPDO1",424,0)
 N PATRESP S PATRESP=$$GETPATRP^VPSOBJ(OREF)
"RTN","VPSPDO1",425,0)
 N STATION S STATION=$$GETSTATN^VPSOBJ(OREF)
"RTN","VPSPDO1",426,0)
 N MARKFOL S MARKFOL=$$GETMKFOL^VPSOBJ(OREF)
"RTN","VPSPDO1",427,0)
 N ALLR D GETALLR^VPSOBJ(OREF,.ALLR)
"RTN","VPSPDO1",428,0)
 N REACTLN M REACTLN=ALLR(ALRNM,"REACTLN")
"RTN","VPSPDO1",429,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1",430,0)
 ;
"RTN","VPSPDO1",431,0)
 N VPSX S VPSX=""
"RTN","VPSPDO1",432,0)
 I STAFF S VPSX=$$SETFLD^VPSPUTL1(MARKFOL,VPSX,COL("FOLLOWUP")) ; include MARK FOR FOLLOW-UP indicator only for staff-facing output  
"RTN","VPSPDO1",433,0)
 I STAFF S VPSX=$$SETFLD^VPSPUTL1(PATRESP,VPSX,COL("PATRESP")) ; include patient structured response in both remote and local allergy sections for staff-facing output  
"RTN","VPSPDO1",434,0)
 I 'STAFF,TYPE="LOCAL" S VPSX=$$SETFLD^VPSPUTL1(PATRESP,VPSX,COL("PATRESP")) ; only include patient structured response for local allergy section for patient-facing output
"RTN","VPSPDO1",435,0)
 S VPSX=$$SETFLD^VPSPUTL1(ALRNM,VPSX,COL("ALLERNM"))
"RTN","VPSPDO1",436,0)
 S VPSX=$$SETFLD^VPSPUTL1($G(REACTLN(1)),VPSX,COL("REACTION"))
"RTN","VPSPDO1",437,0)
 I TYPE="REMOTE" S VPSX=$$SETFLD^VPSPUTL1(STATION,VPSX,COL("SITE"))
"RTN","VPSPDO1",438,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1",439,0)
 ;
"RTN","VPSPDO1",440,0)
 ; -- Add rest of reaction list
"RTN","VPSPDO1",441,0)
 N RSS S RSS=1
"RTN","VPSPDO1",442,0)
 S VPSX=""
"RTN","VPSPDO1",443,0)
 F  S RSS=$O(REACTLN(RSS)) Q:'RSS  D
"RTN","VPSPDO1",444,0)
 . S VPSX=$$SETFLD^VPSPUTL1(REACTLN(RSS),VPSX,COL("REACTION"))
"RTN","VPSPDO1",445,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1",446,0)
 ;
"RTN","VPSPDO1",447,0)
 D ADDBLANK^VPSOBJ(OREF) ; add a blank line between allergy sets
"RTN","VPSPDO1",448,0)
 Q
"RTN","VPSPDO1",449,0)
 ;
"RTN","VPSPDO1",450,0)
 ; Health Summary entry point
"RTN","VPSPDO1",451,0)
HS ;
"RTN","VPSPDO1",452,0)
 N TARGET,I
"RTN","VPSPDO1",453,0)
 S TARGET="^TMP(""VPSPDO1"",$J)"
"RTN","VPSPDO1",454,0)
 S I=$$TIU(DFN,TARGET)
"RTN","VPSPDO1",455,0)
 S I=0
"RTN","VPSPDO1",456,0)
 F  S I=$O(@TARGET@(I)) Q:'I  W !,@TARGET@(I,0)
"RTN","VPSPDO1",457,0)
 W !!
"RTN","VPSPDO1",458,0)
 S GMTSQIT=""
"RTN","VPSPDO1",459,0)
 Q
"RTN","VPSPDO1M")
0^5^B136955019
"RTN","VPSPDO1M",1,0)
VPSPDO1M  ;DALOI/KML,WOIFO/BT -  PDO OUTPUT DISPLAY - MEDS ;11/20/11 15:30
"RTN","VPSPDO1M",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Oct 21, 2011;Build 64
"RTN","VPSPDO1M",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPDO1M",4,0)
 ;
"RTN","VPSPDO1M",5,0)
 Q
"RTN","VPSPDO1M",6,0)
 ;IA #10103 - supported use of XLFDT functions
"RTN","VPSPDO1M",7,0)
 ;IA #10104 - supported use of XLFSTR function
"RTN","VPSPDO1M",8,0)
 ;
"RTN","VPSPDO1M",9,0)
 ; The medication section of the PDO output specifically for the PATIENT ENTERED ALLERGY MEDICATION REVIEW
"RTN","VPSPDO1M",10,0)
 ; which can be invoked by CPRS TIU components and as an RPC to be called by Vetlink staff-facing interface
"RTN","VPSPDO1M",11,0)
 ;
"RTN","VPSPDO1M",12,0)
MEDHDR(OREF) ; build medication sections for Patient Entered allergy medication review note
"RTN","VPSPDO1M",13,0)
 ; active medications have an (RX) status of Active, Suspended, Hold, Provider Hold
"RTN","VPSPDO1M",14,0)
 ; INPUT
"RTN","VPSPDO1M",15,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",16,0)
 ;
"RTN","VPSPDO1M",17,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1M",18,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1M",19,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1M",20,0)
 ;
"RTN","VPSPDO1M",21,0)
 D ADDUNDLN^VPSOBJ(OREF)  ; DISPLAY UNDERSCORE
"RTN","VPSPDO1M",22,0)
 D ADDLJ^VPSOBJ(OREF,"*** MEDICATION REVIEW - PATIENT RESPONSE KEY *** ")
"RTN","VPSPDO1M",23,0)
 D ADDBLANK^VPSOBJ(OREF),ADDBLANK^VPSOBJ(OREF)  ; add 2 blank lines
"RTN","VPSPDO1M",24,0)
 ;
"RTN","VPSPDO1M",25,0)
 I $D(^VPS(853.5,PTIEN,"MRAR",LMRARDT,"MEDS")) D  ; the display of the medication patient response key occurs only if there are meds
"RTN","VPSPDO1M",26,0)
 . D ADDLJ^VPSOBJ(OREF,"'Y' TAKING as written;")
"RTN","VPSPDO1M",27,0)
 . D ADDLJ^VPSOBJ(OREF,"'N' NOT TAKING;")
"RTN","VPSPDO1M",28,0)
 . D ADDLJ^VPSOBJ(OREF,"'D' TAKING DIFFERENTLY;")
"RTN","VPSPDO1M",29,0)
 . D ADDLJ^VPSOBJ(OREF,"'?' patient UNSURE;")
"RTN","VPSPDO1M",30,0)
 . D ADDLJ^VPSOBJ(OREF,"'X' NO RESPONSE (incomplete session/no answer)")
"RTN","VPSPDO1M",31,0)
 . I STAFF D ADDLJ^VPSOBJ(OREF,">> indicates MARK FOR FOLLOW UP")
"RTN","VPSPDO1M",32,0)
 . D ADDUNDLN^VPSOBJ(OREF)  ; DISPLAY UNDERSCORE
"RTN","VPSPDO1M",33,0)
 Q
"RTN","VPSPDO1M",34,0)
 ;
"RTN","VPSPDO1M",35,0)
MEDS(OREF,SAVMEDS) ; sort the displayed meds by active, NONVA, and PAST
"RTN","VPSPDO1M",36,0)
 ; INPUT
"RTN","VPSPDO1M",37,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",38,0)
 ; OUTPUT
"RTN","VPSPDO1M",39,0)
 ;   SAVMEDS  : passed in by reference.  array represents the list of medications to display at a given section
"RTN","VPSPDO1M",40,0)
 ;
"RTN","VPSPDO1M",41,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1M",42,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1M",43,0)
 ;
"RTN","VPSPDO1M",44,0)
 ; -- build active meds section
"RTN","VPSPDO1M",45,0)
 D ADDCJ^VPSOBJ(OREF,"*** ACTIVE MEDICATIONS   ***   ACTIVE MEDICATIONS   ***")
"RTN","VPSPDO1M",46,0)
 N RXSTAT,MEDITMS
"RTN","VPSPDO1M",47,0)
 F RXSTAT=0,5,3,15 D GET(OREF,RXSTAT,.MEDITMS) ;get active, suspended, hold, provider hold meds
"RTN","VPSPDO1M",48,0)
 I $D(MEDITMS) D BLD(OREF,.MEDITMS,"ACTIVE")
"RTN","VPSPDO1M",49,0)
 N ACTIVE S ACTIVE=$$GETACTIV^VPSOBJ(OREF)
"RTN","VPSPDO1M",50,0)
 I 'ACTIVE D ADDLJ^VPSOBJ(OREF,"No active VA medications on file.")
"RTN","VPSPDO1M",51,0)
 K SAVMEDS M SAVMEDS=MEDITMS ; SAVMEDS to be used in the CHANGES SINCE algorithm
"RTN","VPSPDO1M",52,0)
 K MEDITMS
"RTN","VPSPDO1M",53,0)
 ;
"RTN","VPSPDO1M",54,0)
 ; -- build NON-VA meds section
"RTN","VPSPDO1M",55,0)
 D ADDBLANK^VPSOBJ(OREF)
"RTN","VPSPDO1M",56,0)
 D ADDCJ^VPSOBJ(OREF,"***   NON-VA MEDICATIONS   ***   NON-VA MEDICATIONS   ***")
"RTN","VPSPDO1M",57,0)
 N NONVA D GETNONVA^VPSOBJ(OREF,.NONVA)
"RTN","VPSPDO1M",58,0)
 I '$D(NONVA) D ADDLJ^VPSOBJ(OREF,"No active Non-VA medications on file.")
"RTN","VPSPDO1M",59,0)
 I $D(NONVA) D BLDNONVA(OREF)
"RTN","VPSPDO1M",60,0)
 ;
"RTN","VPSPDO1M",61,0)
 ; -- build PAST meds section
"RTN","VPSPDO1M",62,0)
 D ADDUNDLN^VPSOBJ(OREF)  ; DISPLAY UNDERSCORE
"RTN","VPSPDO1M",63,0)
 D ADDCJ^VPSOBJ(OREF,"***   EXPIRED & DISCONTINUED MEDS   ***   EXPIRED & DISCONTINUED MEDS   ***")
"RTN","VPSPDO1M",64,0)
 N RXSTAT,MEDITMS
"RTN","VPSPDO1M",65,0)
 F RXSTAT=11,12,14,15 D GET(OREF,RXSTAT,.MEDITMS) ; get expired, discontinued, discontinued by provider, discontinued edit
"RTN","VPSPDO1M",66,0)
 I '$D(MEDITMS) D ADDLJ^VPSOBJ(OREF,"No Expired or Discontinued Medications on file.")
"RTN","VPSPDO1M",67,0)
 I $D(MEDITMS) D BLD(OREF,.MEDITMS,"PAST")
"RTN","VPSPDO1M",68,0)
 M SAVMEDS=MEDITMS ; SAVMEDS to be used in the CHANGES SINCE algorithm
"RTN","VPSPDO1M",69,0)
 K MEDITMS
"RTN","VPSPDO1M",70,0)
 Q
"RTN","VPSPDO1M",71,0)
 ;
"RTN","VPSPDO1M",72,0)
GET(OREF,RXSTAT,MEDITMS) ; get MED data
"RTN","VPSPDO1M",73,0)
 ; INPUT
"RTN","VPSPDO1M",74,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",75,0)
 ;   RXSTAT   : RX status.  Medication list is displayed at specific sections of the note depending on status
"RTN","VPSPDO1M",76,0)
 ; OUTPUT
"RTN","VPSPDO1M",77,0)
 ;   MEDITMS  : passed in by reference.  array represents the list of medications to display at a given section
"RTN","VPSPDO1M",78,0)
 ;
"RTN","VPSPDO1M",79,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1M",80,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1M",81,0)
 ;
"RTN","VPSPDO1M",82,0)
 N MEDIEN S MEDIEN=0
"RTN","VPSPDO1M",83,0)
 F  S MEDIEN=$O(^VPS(853.5,PTIEN,"MRAR",LMRARDT,"MEDS","RXST",RXSTAT,MEDIEN)) Q:'MEDIEN  D
"RTN","VPSPDO1M",84,0)
 . N MEDNAME S MEDNAME=$$GET1^DIQ(853.54,MEDIEN_","_LMRARDT_","_PTIEN_",",10) ; medication name
"RTN","VPSPDO1M",85,0)
 . Q:MEDNAME=""  ; quit if medication name is null (PDO display requires a medication name)
"RTN","VPSPDO1M",86,0)
 . S MEDITMS(MEDNAME,MEDIEN)="" ; medications need to be displayed in alphabetical order; build array sorted by med name;
"RTN","VPSPDO1M",87,0)
 Q
"RTN","VPSPDO1M",88,0)
 ;
"RTN","VPSPDO1M",89,0)
BLDNONVA(OREF) ; build NON VA meds
"RTN","VPSPDO1M",90,0)
 ; INPUT
"RTN","VPSPDO1M",91,0)
 ;   OREF    : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",92,0)
 ;
"RTN","VPSPDO1M",93,0)
 N NONVA D GETNONVA^VPSOBJ(OREF,.NONVA)
"RTN","VPSPDO1M",94,0)
 N NAME S NAME=""
"RTN","VPSPDO1M",95,0)
 ;
"RTN","VPSPDO1M",96,0)
 F  S NAME=$O(NONVA(NAME)) Q:NAME=""  D 
"RTN","VPSPDO1M",97,0)
 . D SETMEDNM^VPSOBJ(OREF,NAME)
"RTN","VPSPDO1M",98,0)
 . D SETPROPS(OREF,.NONVA) ; assign data to properties for ease of handling
"RTN","VPSPDO1M",99,0)
 . D NAMELINE(OREF) ; Add followup, patient response, med name 
"RTN","VPSPDO1M",100,0)
 . D SIGLINES(OREF) ; Add SIG lines to result array
"RTN","VPSPDO1M",101,0)
 . D PRVLINES(OREF) ; Add provider lines
"RTN","VPSPDO1M",102,0)
 . D ADDNONVA(OREF) ; Add patient comments 
"RTN","VPSPDO1M",103,0)
 ;
"RTN","VPSPDO1M",104,0)
 K NONVA
"RTN","VPSPDO1M",105,0)
 Q
"RTN","VPSPDO1M",106,0)
 ;
"RTN","VPSPDO1M",107,0)
BLD(OREF,MEDITMS,TYPE) ; build the array of data associated with a given medication (at the 853.54 SUB-ENTRY)
"RTN","VPSPDO1M",108,0)
 ; INPUT
"RTN","VPSPDO1M",109,0)
 ;   OREF    : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",110,0)
 ;   MEDITMS : passed in by reference.  array represents the list of medications to display at a given section
"RTN","VPSPDO1M",111,0)
 ;   TYPE    : "ACTIVE" or "PAST" medication
"RTN","VPSPDO1M",112,0)
 ;
"RTN","VPSPDO1M",113,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1M",114,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1M",115,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1M",116,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1M",117,0)
 ;
"RTN","VPSPDO1M",118,0)
 N NONVA
"RTN","VPSPDO1M",119,0)
 N NAME S NAME=""
"RTN","VPSPDO1M",120,0)
 N MIEN S MIEN=0
"RTN","VPSPDO1M",121,0)
 D SETACTIV^VPSOBJ(OREF,0)
"RTN","VPSPDO1M",122,0)
 D SETMTYPE^VPSOBJ(OREF,TYPE)
"RTN","VPSPDO1M",123,0)
 D KILNONVA^VPSOBJ(OREF)
"RTN","VPSPDO1M",124,0)
 ;
"RTN","VPSPDO1M",125,0)
 F  S NAME=$O(MEDITMS(NAME)) Q:NAME=""  F  S MIEN=$O(MEDITMS(NAME,MIEN)) Q:'MIEN  D
"RTN","VPSPDO1M",126,0)
 . D SETMEDNM^VPSOBJ(OREF,NAME)
"RTN","VPSPDO1M",127,0)
 . N MEDLST D GETS^DIQ(853.54,MIEN_","_LMRARDT_","_PTIEN_",","2;3;4;5;6;7;9;11;13;14;15;16;21;22","IE","MEDLST")  ; refer to routine VPSMRAR2 for field references at subfile 853.54
"RTN","VPSPDO1M",128,0)
 . ;
"RTN","VPSPDO1M",129,0)
 . ; -- transform med data (fileman result) to FLD by field name
"RTN","VPSPDO1M",130,0)
 . N INEX,FLD
"RTN","VPSPDO1M",131,0)
 . ; initialize med fields
"RTN","VPSPDO1M",132,0)
 . F FLD=2,3,4,5,6,7,9,11,13,14,15,16,21,22 F INEX="E","I" S FLD(NAME,FLD,INEX)=""
"RTN","VPSPDO1M",133,0)
 . S FLD=0
"RTN","VPSPDO1M",134,0)
 . F  S FLD=$O(MEDLST(853.54,MIEN_","_LMRARDT_","_PTIEN_",",FLD)) Q:'FLD  F INEX="E","I" S FLD(NAME,FLD,INEX)=MEDLST(853.54,MIEN_","_LMRARDT_","_PTIEN_",",FLD,INEX)
"RTN","VPSPDO1M",135,0)
 . ;
"RTN","VPSPDO1M",136,0)
 . ; -- NonVA meds need to display in a separate section; save into separate array
"RTN","VPSPDO1M",137,0)
 . N ISNONVA S ISNONVA=(FLD(NAME,21,"I")="Y")
"RTN","VPSPDO1M",138,0)
 . I TYPE="ACTIVE",ISNONVA D APDNONVA^VPSOBJ(OREF,.FLD) K FLD Q
"RTN","VPSPDO1M",139,0)
 . ;
"RTN","VPSPDO1M",140,0)
 . ; -- ACTIVE (NON-VA = false) and PAST type continue here
"RTN","VPSPDO1M",141,0)
 . D SETACTIV^VPSOBJ(OREF,1)
"RTN","VPSPDO1M",142,0)
 . D SETPROPS(OREF,.FLD) ; assign data to properties for ease of handling
"RTN","VPSPDO1M",143,0)
 . D NAMELINE(OREF) ; Add followup, patient response, med name 
"RTN","VPSPDO1M",144,0)
 . D SIGLINES(OREF) ; Add SIG lines to result array
"RTN","VPSPDO1M",145,0)
 . D PRVLINES(OREF) ; Add provider lines
"RTN","VPSPDO1M",146,0)
 . ;
"RTN","VPSPDO1M",147,0)
 . ; -- patient comment lines
"RTN","VPSPDO1M",148,0)
 . N PATCOMM D GCOMM^VPSPUTL1(LMRARDT,PTIEN,MIEN,STAFF,.COL,.PATCOMM)
"RTN","VPSPDO1M",149,0)
 . D SETPATCM^VPSOBJ(OREF,.PATCOMM)
"RTN","VPSPDO1M",150,0)
 . D PTCLINES(OREF) ; Add patient comments 
"RTN","VPSPDO1M",151,0)
 . K MEDLST,PATCOMM,FLD
"RTN","VPSPDO1M",152,0)
 Q
"RTN","VPSPDO1M",153,0)
 ;
"RTN","VPSPDO1M",154,0)
SETPROPS(OREF,FLD) ; assign data to properties for ease of handling
"RTN","VPSPDO1M",155,0)
 ; INPUT
"RTN","VPSPDO1M",156,0)
 ;   OREF   : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",157,0)
 ;   FLD    : Med data by fieldname
"RTN","VPSPDO1M",158,0)
 ; 
"RTN","VPSPDO1M",159,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO1M",160,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO1M",161,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1M",162,0)
 N NAME S NAME=$$GETMEDNM^VPSOBJ(OREF)
"RTN","VPSPDO1M",163,0)
 ;
"RTN","VPSPDO1M",164,0)
 D SETLREFL^VPSOBJ(OREF,FLD(NAME,6,"E")) ;left refills
"RTN","VPSPDO1M",165,0)
 D SETMREFL^VPSOBJ(OREF,FLD(NAME,22,"E")) ;max refills
"RTN","VPSPDO1M",166,0)
 D SETSIG^VPSOBJ(OREF,FLD(NAME,13,"E")) ; SIG instruction
"RTN","VPSPDO1M",167,0)
 D SETPROV^VPSOBJ(OREF,FLD(NAME,2,"E")) ; provider
"RTN","VPSPDO1M",168,0)
 D SETDSPLY^VPSOBJ(OREF,FLD(NAME,5,"E")) ; days supplied
"RTN","VPSPDO1M",169,0)
 N MFILL S MFILL=$S(FLD(NAME,4,"I")]"":$$FMDIFF^XLFDT(DT,FLD(NAME,4,"I")),1:"")  ; days of last refill (NOW - DATE LAST FILLED)
"RTN","VPSPDO1M",170,0)
 D SETMFILL^VPSOBJ(OREF,MFILL)
"RTN","VPSPDO1M",171,0)
 N NXFILLDT S NXFILLDT=$S(FLD(NAME,7,"I")]"":$$FMTE^XLFDT(FLD(NAME,7,"I"),2),1:"")  ; DATE NEXT FILLED
"RTN","VPSPDO1M",172,0)
 D SETNFILL^VPSOBJ(OREF,NXFILLDT)
"RTN","VPSPDO1M",173,0)
 D SETRMLOC^VPSOBJ(OREF,FLD(NAME,3,"E")) ; remote fill location
"RTN","VPSPDO1M",174,0)
 D SETREMOT^VPSOBJ(OREF,FLD(NAME,9,"E")]"") ; remote med id exist
"RTN","VPSPDO1M",175,0)
 N MARKFOL S MARKFOL=FLD(NAME,16,"I") ; mark for follow-up for patient facilitated output
"RTN","VPSPDO1M",176,0)
 I STAFF,MARKFOL]"" S MARKFOL=">>" D SETMKFOL^VPSOBJ(OREF,MARKFOL)
"RTN","VPSPDO1M",177,0)
 D SETPATRP^VPSOBJ(OREF,FLD(NAME,11,"E")) ; MR preset patient response
"RTN","VPSPDO1M",178,0)
 Q
"RTN","VPSPDO1M",179,0)
 ;
"RTN","VPSPDO1M",180,0)
NAMELINE(OREF) ; Add followup, patient response, med name to result array
"RTN","VPSPDO1M",181,0)
 ; INPUT
"RTN","VPSPDO1M",182,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",183,0)
 ;
"RTN","VPSPDO1M",184,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1M",185,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO1M",186,0)
 N MARKFOL S MARKFOL=$$GETMKFOL^VPSOBJ(OREF)
"RTN","VPSPDO1M",187,0)
 N PATRESP S PATRESP=$$GETPATRP^VPSOBJ(OREF)
"RTN","VPSPDO1M",188,0)
 N NAME S NAME=$$GETMEDNM^VPSOBJ(OREF)
"RTN","VPSPDO1M",189,0)
 ;
"RTN","VPSPDO1M",190,0)
 N VPSX S VPSX=""
"RTN","VPSPDO1M",191,0)
 I STAFF S VPSX=$$SETFLD^VPSPUTL1(MARKFOL,VPSX,COL("FOLLOWUP"))
"RTN","VPSPDO1M",192,0)
 S VPSX=$$SETFLD^VPSPUTL1(PATRESP,VPSX,COL("PATRESP"))
"RTN","VPSPDO1M",193,0)
 S VPSX=$$SETFLD^VPSPUTL1(NAME,VPSX,COL("MEDNAME"))
"RTN","VPSPDO1M",194,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",195,0)
 Q
"RTN","VPSPDO1M",196,0)
 ;
"RTN","VPSPDO1M",197,0)
SIGLINES(OREF) ; Add SIG lines to result array
"RTN","VPSPDO1M",198,0)
 ; INPUT
"RTN","VPSPDO1M",199,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",200,0)
 ;
"RTN","VPSPDO1M",201,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1M",202,0)
 N TYPE S TYPE=$$GETMTYPE^VPSOBJ(OREF)
"RTN","VPSPDO1M",203,0)
 N SIG S SIG(1)=$$GETSIG^VPSOBJ(OREF)
"RTN","VPSPDO1M",204,0)
 N LFTREFIL S LFTREFIL=$$GETLREFL^VPSOBJ(OREF)
"RTN","VPSPDO1M",205,0)
 N MAXREFIL S MAXREFIL=$$GETMREFL^VPSOBJ(OREF)
"RTN","VPSPDO1M",206,0)
 N NSIG S ^TMP("VPSPUTL1",$J)=0 D FCOMM^VPSPUTL1(.SIG,$P(COL("SIG"),U,2),.NSIG)
"RTN","VPSPDO1M",207,0)
 ;
"RTN","VPSPDO1M",208,0)
 N LAST S LAST=$O(NSIG(""),-1)
"RTN","VPSPDO1M",209,0)
 N SUB S SUB=0
"RTN","VPSPDO1M",210,0)
 ;
"RTN","VPSPDO1M",211,0)
 F  S SUB=$O(NSIG(SUB)) Q:'SUB  D
"RTN","VPSPDO1M",212,0)
 . N VPSX S VPSX=$$SETFLD^VPSPUTL1(NSIG(SUB),"",COL("SIG"))
"RTN","VPSPDO1M",213,0)
 . I SUB=LAST,TYPE'="NONVA" S VPSX=$$SETFLD^VPSPUTL1("Refills left: "_LFTREFIL_" of "_MAXREFIL,VPSX,COL("REFILLS"))
"RTN","VPSPDO1M",214,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",215,0)
 Q
"RTN","VPSPDO1M",216,0)
 ;
"RTN","VPSPDO1M",217,0)
PRVLINES(OREF) ; Add provider lines
"RTN","VPSPDO1M",218,0)
 ; INPUT
"RTN","VPSPDO1M",219,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",220,0)
 ;
"RTN","VPSPDO1M",221,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1M",222,0)
 N TYPE S TYPE=$$GETMTYPE^VPSOBJ(OREF)
"RTN","VPSPDO1M",223,0)
 N PROVIDER S PROVIDER=$$GETPROV^VPSOBJ(OREF)
"RTN","VPSPDO1M",224,0)
 N DAYSUPLY S DAYSUPLY=$$GETDSPLY^VPSOBJ(OREF)
"RTN","VPSPDO1M",225,0)
 N VPSX S VPSX="",VPSX=$$SETFLD^VPSPUTL1("Provider: "_PROVIDER,VPSX,COL("PROVIDER"))
"RTN","VPSPDO1M",226,0)
 I TYPE'="NONVA" S VPSX=$$SETFLD^VPSPUTL1("Days supplied: "_DAYSUPLY,VPSX,COL("DAYS SUPPLIED"))
"RTN","VPSPDO1M",227,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",228,0)
 Q
"RTN","VPSPDO1M",229,0)
 ;
"RTN","VPSPDO1M",230,0)
PTCLINES(OREF) ; Add patient comments 
"RTN","VPSPDO1M",231,0)
 ; INPUT
"RTN","VPSPDO1M",232,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",233,0)
 ;
"RTN","VPSPDO1M",234,0)
 N REMOTE S REMOTE=$$GETREMOT^VPSOBJ(OREF)
"RTN","VPSPDO1M",235,0)
 I REMOTE D ADDREMOT(OREF)
"RTN","VPSPDO1M",236,0)
 I 'REMOTE D ADDLOCAL(OREF)
"RTN","VPSPDO1M",237,0)
 Q 
"RTN","VPSPDO1M",238,0)
 ;
"RTN","VPSPDO1M",239,0)
ADDNONVA(OREF) ; Add Non-va patient comment
"RTN","VPSPDO1M",240,0)
 ; INPUT
"RTN","VPSPDO1M",241,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",242,0)
 ;
"RTN","VPSPDO1M",243,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1M",244,0)
 N PATCOMM D GETPATCM^VPSOBJ(OREF,.PATCOMM) ; Patient comments
"RTN","VPSPDO1M",245,0)
 ; 
"RTN","VPSPDO1M",246,0)
 I $D(PATCOMM) D
"RTN","VPSPDO1M",247,0)
 . N RSS S RSS=0
"RTN","VPSPDO1M",248,0)
 . F  S RSS=$O(PATCOMM(RSS)) Q:'RSS  D
"RTN","VPSPDO1M",249,0)
 . . S VPSX="",VPSX=$$SETFLD^VPSPUTL1(PATCOMM(RSS),VPSX,COL("COMMENTS"))
"RTN","VPSPDO1M",250,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",251,0)
 D ADDBLANK^VPSOBJ(OREF)  ; add a blank line between medication sets
"RTN","VPSPDO1M",252,0)
 Q
"RTN","VPSPDO1M",253,0)
 ;
"RTN","VPSPDO1M",254,0)
ADDREMOT(OREF) ; Add remote (cdw) patient comment, filled days, next fill date to result array
"RTN","VPSPDO1M",255,0)
 ; INPUT
"RTN","VPSPDO1M",256,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",257,0)
 ;
"RTN","VPSPDO1M",258,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1M",259,0)
 N REMLOC S REMLOC=$$GETRMLOC^VPSOBJ(OREF) ; remote location
"RTN","VPSPDO1M",260,0)
 N FILLED S FILLED=$$GETMFILL^VPSOBJ(OREF) ; how long in days the medication was filled
"RTN","VPSPDO1M",261,0)
 N NXFILLDT S NXFILLDT=$$GETNFILL^VPSOBJ(OREF) ; Next Fill Date
"RTN","VPSPDO1M",262,0)
 N PATCOMM D GETPATCM^VPSOBJ(OREF,.PATCOMM) ; Patient comments
"RTN","VPSPDO1M",263,0)
 N MEDTYPE S MEDTYPE=$$GETMTYPE^VPSOBJ(OREF) ; "ACTIVE", "NONVA", "PAST" Medication
"RTN","VPSPDO1M",264,0)
 ;
"RTN","VPSPDO1M",265,0)
 N VPSX S VPSX=""
"RTN","VPSPDO1M",266,0)
 S VPSX=$$SETFLD^VPSPUTL1("Remote: "_REMLOC,VPSX,COL("REMOTE"))
"RTN","VPSPDO1M",267,0)
 S VPSX=$$SETFLD^VPSPUTL1("Filled: "_FILLED_"d ago",VPSX,COL("FILLED"))
"RTN","VPSPDO1M",268,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",269,0)
 ;
"RTN","VPSPDO1M",270,0)
 N RSS S RSS=0
"RTN","VPSPDO1M",271,0)
 N FIRST S FIRST=1
"RTN","VPSPDO1M",272,0)
 ;
"RTN","VPSPDO1M",273,0)
 F  S RSS=$O(PATCOMM(RSS)) Q:'RSS  D
"RTN","VPSPDO1M",274,0)
 . S VPSX="",VPSX=$$SETFLD^VPSPUTL1(PATCOMM(RSS),VPSX,COL("COMMENTS"))
"RTN","VPSPDO1M",275,0)
 . I TYPE'="PAST",FIRST S VPSX=$$SETFLD^VPSPUTL1("Next est fill: "_NXFILLDT,VPSX,COL("NEXTFILL")),FIRST=0
"RTN","VPSPDO1M",276,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",277,0)
 ;
"RTN","VPSPDO1M",278,0)
 I '$D(PATCOMM),TYPE'="PAST" D
"RTN","VPSPDO1M",279,0)
 . S VPSX="",VPSX=$$SETFLD^VPSPUTL1("Next est fill: "_NXFILLDT,VPSX,COL("NEXTFILL"))
"RTN","VPSPDO1M",280,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",281,0)
 Q
"RTN","VPSPDO1M",282,0)
 ;
"RTN","VPSPDO1M",283,0)
ADDLOCAL(OREF) ; Add local vista patient comment, filled days, next fill date to result array
"RTN","VPSPDO1M",284,0)
 ; INPUT
"RTN","VPSPDO1M",285,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO1M",286,0)
 ;
"RTN","VPSPDO1M",287,0)
 N VPSX S VPSX=""
"RTN","VPSPDO1M",288,0)
 N RSS S RSS=0
"RTN","VPSPDO1M",289,0)
 N NEXTFILL S NEXTFILL=0
"RTN","VPSPDO1M",290,0)
 N FIRST S FIRST=1
"RTN","VPSPDO1M",291,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO1M",292,0)
 N FILLED S FILLED=$$GETMFILL^VPSOBJ(OREF) ; how long in days the medication was filled
"RTN","VPSPDO1M",293,0)
 N NXFILLDT S NXFILLDT=$$GETNFILL^VPSOBJ(OREF) ; Next Fill Date
"RTN","VPSPDO1M",294,0)
 N PATCOMM D GETPATCM^VPSOBJ(OREF,.PATCOMM) ; Patient comments
"RTN","VPSPDO1M",295,0)
 N MEDTYPE S MEDTYPE=$$GETMTYPE^VPSOBJ(OREF) ; "ACTIVE", "NONVA", "PAST" Medication
"RTN","VPSPDO1M",296,0)
 ;
"RTN","VPSPDO1M",297,0)
 F  S RSS=$O(PATCOMM(RSS)) Q:'RSS  D
"RTN","VPSPDO1M",298,0)
 . S VPSX="",VPSX=$$SETFLD^VPSPUTL1(PATCOMM(RSS),VPSX,COL("COMMENTS"))
"RTN","VPSPDO1M",299,0)
 . I FIRST S VPSX=$$SETFLD^VPSPUTL1("Filled: "_FILLED_"d ago",VPSX,COL("FILLED")) D ADDPDO^VPSOBJ(OREF,VPSX) S FIRST=0 Q
"RTN","VPSPDO1M",300,0)
 . I TYPE'="PAST",'FIRST,'NEXTFILL S VPSX=$$SETFLD^VPSPUTL1("Next est fill: "_NXFILLDT,VPSX,COL("NEXTFILL")),NEXTFILL=1
"RTN","VPSPDO1M",301,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",302,0)
 ;
"RTN","VPSPDO1M",303,0)
 I '$D(PATCOMM) D
"RTN","VPSPDO1M",304,0)
 . S VPSX="",VPSX=$$SETFLD^VPSPUTL1("Filled: "_FILLED_"d ago",VPSX,COL("FILLED"))
"RTN","VPSPDO1M",305,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",306,0)
 ;
"RTN","VPSPDO1M",307,0)
 I TYPE="ACTIVE",'NEXTFILL S VPSX="",VPSX=$$SETFLD^VPSPUTL1("Next est fill: "_NXFILLDT,VPSX,COL("NEXTFILL")) D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO1M",308,0)
 D ADDBLANK^VPSOBJ(OREF)  ; add a blank line between medication sets
"RTN","VPSPDO1M",309,0)
 Q
"RTN","VPSPDO2")
0^11^B60112459
"RTN","VPSPDO2",1,0)
VPSPDO2 ;DALOI/KML,WOIFO/BT -  PDO OUTPUT DISPLAY - ALLERGIES (Continue);11/20/11 15:30
"RTN","VPSPDO2",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Oct 21, 2011;Build 64
"RTN","VPSPDO2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPDO2",4,0)
 ;
"RTN","VPSPDO2",5,0)
 Q
"RTN","VPSPDO2",6,0)
 ;
"RTN","VPSPDO2",7,0)
BLDADD(OREF) ; build additional allergies section for Patient Entered allergy medication review note
"RTN","VPSPDO2",8,0)
 ; INPUT
"RTN","VPSPDO2",9,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO2",10,0)
 ;
"RTN","VPSPDO2",11,0)
 D ADDCJ^VPSOBJ(OREF,"Patient-entered allergy reactions/comments")
"RTN","VPSPDO2",12,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO2",13,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO2",14,0)
 ;
"RTN","VPSPDO2",15,0)
 N HDR S HDR=0
"RTN","VPSPDO2",16,0)
 N VPSX S VPSX=""
"RTN","VPSPDO2",17,0)
 N ALRID,ALRIEN S (ALRID,ALRIEN)=0
"RTN","VPSPDO2",18,0)
 ;
"RTN","VPSPDO2",19,0)
 F  S ALRID=$O(^VPS(853.5,PTIEN,"MRAR",LASTMRAR,"ALLERGYADD","B",ALRID)) Q:'ALRID  F  S ALRIEN=$O(^(ALRID,ALRIEN)) Q:'ALRIEN  D
"RTN","VPSPDO2",20,0)
 . D INTADDAL(OREF,ALRIEN) ; initialize additional allergy info
"RTN","VPSPDO2",21,0)
 . D PREPCOM(OREF) ; prepare additional allergies comments to build
"RTN","VPSPDO2",22,0)
 . I 'HDR S HDR=1 D ADDADHDR(OREF) ; build additional allergy header
"RTN","VPSPDO2",23,0)
 . D ADDADALR(OREF) ; build additional allergy items
"RTN","VPSPDO2",24,0)
 . D ADDBLANK^VPSOBJ(OREF)  ; add a blank line between each additional allergies
"RTN","VPSPDO2",25,0)
 ;
"RTN","VPSPDO2",26,0)
 D ADDBLANK^VPSOBJ(OREF)  ; add a blank line between additional allergies and next section
"RTN","VPSPDO2",27,0)
 Q 
"RTN","VPSPDO2",28,0)
 ; 
"RTN","VPSPDO2",29,0)
INTADDAL(OREF,ALRIEN) ; initialize additional allergy info
"RTN","VPSPDO2",30,0)
 ; INPUT
"RTN","VPSPDO2",31,0)
 ;   OREF   : Object Reference for the VPS PDO object
"RTN","VPSPDO2",32,0)
 ;   ALRIEN : Additional Allergy IEN
"RTN","VPSPDO2",33,0)
 ; 
"RTN","VPSPDO2",34,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO2",35,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO2",36,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO2",37,0)
 ;
"RTN","VPSPDO2",38,0)
 N ADALRVT S ADALRVT=$$GET1^DIQ(853.53,ALRIEN_","_LASTMRAR_","_PTIEN_",",1,"","ADALRVT") ; Additional allergy entered by the patient
"RTN","VPSPDO2",39,0)
 D SETADDVT^VPSOBJ(OREF,.ADALRVT)
"RTN","VPSPDO2",40,0)
 K ADALRVT
"RTN","VPSPDO2",41,0)
 ;
"RTN","VPSPDO2",42,0)
 N ADALRPR S ADALRPR=$$GET1^DIQ(853.53,ALRIEN_","_LASTMRAR_","_PTIEN_",",1.5,"","ADALRPR") ; Additional allergy typed in by provider
"RTN","VPSPDO2",43,0)
 D SETADDPR^VPSOBJ(OREF,.ADALRPR)
"RTN","VPSPDO2",44,0)
 K ADALRPR
"RTN","VPSPDO2",45,0)
 ;
"RTN","VPSPDO2",46,0)
 N ADDREACT S ADDREACT=$$GET1^DIQ(853.53,ALRIEN_","_LASTMRAR_","_PTIEN_",",2) ; REACTION to the additional allergy typed in by the provider (staff-facing)
"RTN","VPSPDO2",47,0)
 D SETADRCT^VPSOBJ(OREF,ADDREACT)
"RTN","VPSPDO2",48,0)
 ;
"RTN","VPSPDO2",49,0)
 I STAFF D
"RTN","VPSPDO2",50,0)
 . N MARKFOL S MARKFOL=$S($$GET1^DIQ(853.53,ALRIEN_","_LASTMRAR_","_PTIEN_",",4)]"":">>",1:"")  ; mark for follow-up for patient facilitated output
"RTN","VPSPDO2",51,0)
 . D SETADDMF^VPSOBJ(OREF,MARKFOL)
"RTN","VPSPDO2",52,0)
 Q
"RTN","VPSPDO2",53,0)
 ;
"RTN","VPSPDO2",54,0)
PREPCOM(OREF) ; prepare additional allergies comments to build
"RTN","VPSPDO2",55,0)
 ; INPUT
"RTN","VPSPDO2",56,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO2",57,0)
 ;
"RTN","VPSPDO2",58,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO2",59,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO2",60,0)
 ;
"RTN","VPSPDO2",61,0)
 I 'STAFF D  ; prepare additional veteran comment
"RTN","VPSPDO2",62,0)
 . N ALRVET D GETADDVT^VPSOBJ(OREF,.ALRVET)
"RTN","VPSPDO2",63,0)
 . Q:$G(ALRVET)']""
"RTN","VPSPDO2",64,0)
 . S ^TMP("VPSPUTL1",$J)=0
"RTN","VPSPDO2",65,0)
 . N FALRVET D FCOMM^VPSPUTL1(.ALRVET,$P(COL("ADDALLERGY-VET"),U,2),.FALRVET)
"RTN","VPSPDO2",66,0)
 . N DONTKNOW S DONTKNOW=$$GETDKNW^VPSOBJ(OREF)
"RTN","VPSPDO2",67,0)
 . N FDONTKNW
"RTN","VPSPDO2",68,0)
 . I DONTKNOW]"" S DONTKNOW(1)=" ;"_DONTKNOW D FCOMM^VPSPUTL1(.DONTKNOW,$P(COL("ADDALLERGY-VET"),U,2),.FDONTKNW)
"RTN","VPSPDO2",69,0)
 . N TEMP M TEMP=FALRVET,TEMP=FDONTKNW
"RTN","VPSPDO2",70,0)
 . S ^TMP("VPSPUTL1",$J)=0
"RTN","VPSPDO2",71,0)
 . N ADDCOMM D FCOMM^VPSPUTL1(.TEMP,$P(COL("ADDALLERGY-VET"),U,2),.ADDCOMM)
"RTN","VPSPDO2",72,0)
 . D SETADDFV^VPSOBJ(OREF,.ADDCOMM)
"RTN","VPSPDO2",73,0)
 . K FALRVET,FDONTKNOW,ALRVET,ADDCOMM
"RTN","VPSPDO2",74,0)
 ;
"RTN","VPSPDO2",75,0)
 I STAFF D  ; prepare additional comment by provider
"RTN","VPSPDO2",76,0)
 . N ALRPR D GETADDPR^VPSOBJ(OREF,.ALRPR)
"RTN","VPSPDO2",77,0)
 . I $G(ALRPR)]"" D
"RTN","VPSPDO2",78,0)
 . . S ^TMP("VPSPUTL1",$J)=0
"RTN","VPSPDO2",79,0)
 . . N FALRPR D FCOMM^VPSPUTL1(.ALRPR,$P(COL("ALLERNM"),U,2),.FALRPR)
"RTN","VPSPDO2",80,0)
 . . D SETADDFP^VPSOBJ(OREF,.FALRPR)
"RTN","VPSPDO2",81,0)
 . . K FALRPR
"RTN","VPSPDO2",82,0)
 . ;
"RTN","VPSPDO2",83,0)
 . N ADDREACT S ADDREACT=$$GETADRCT^VPSOBJ(OREF)
"RTN","VPSPDO2",84,0)
 . I ADDREACT]"" D
"RTN","VPSPDO2",85,0)
 . . S ADDREACT(1)=ADDREACT
"RTN","VPSPDO2",86,0)
 . . S ^TMP("VPSPUTL1",$J)=0
"RTN","VPSPDO2",87,0)
 . . N FADDRCT D FCOMM^VPSPUTL1(.ADDREACT,$P(COL("REACTION"),U,2),.FADDRCT)
"RTN","VPSPDO2",88,0)
 . . D SETADDFR^VPSOBJ(OREF,.FADDRCT)
"RTN","VPSPDO2",89,0)
 . . K FADDRCT
"RTN","VPSPDO2",90,0)
 Q
"RTN","VPSPDO2",91,0)
 ;
"RTN","VPSPDO2",92,0)
ADDADHDR(OREF) ; build additional allergy header
"RTN","VPSPDO2",93,0)
 ; INPUT
"RTN","VPSPDO2",94,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO2",95,0)
 ;
"RTN","VPSPDO2",96,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO2",97,0)
 N VPSX S VPSX=""
"RTN","VPSPDO2",98,0)
 S VPSX=$$SETFLD^VPSPUTL1("Name",VPSX,COL("ALLERNM"))
"RTN","VPSPDO2",99,0)
 S VPSX=$$SETFLD^VPSPUTL1("Reaction",VPSX,COL("REACTION"))
"RTN","VPSPDO2",100,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2",101,0)
 Q
"RTN","VPSPDO2",102,0)
 ;
"RTN","VPSPDO2",103,0)
ADDADALR(OREF) ; build additional allergy items
"RTN","VPSPDO2",104,0)
 ; INPUT
"RTN","VPSPDO2",105,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO2",106,0)
 ;
"RTN","VPSPDO2",107,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO2",108,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO2",109,0)
 ;
"RTN","VPSPDO2",110,0)
 I 'STAFF D
"RTN","VPSPDO2",111,0)
 . N ADDCOMM D GETADDFV^VPSOBJ(OREF,.ADDCOMM)
"RTN","VPSPDO2",112,0)
 . N VPSX S VPSX=""
"RTN","VPSPDO2",113,0)
 . N RSS S RSS=0
"RTN","VPSPDO2",114,0)
 . F  S RSS=$O(ADDCOMM(RSS)) Q:'RSS  D
"RTN","VPSPDO2",115,0)
 . . S VPSX=$$SETFLD^VPSPUTL1(ADDCOMM(RSS),VPSX,COL("ADDALLERGY-VET"))
"RTN","VPSPDO2",116,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2",117,0)
 ;
"RTN","VPSPDO2",118,0)
 I STAFF D
"RTN","VPSPDO2",119,0)
 . N ADDCOMM D GETADDFP^VPSOBJ(OREF,.ADDCOMM)
"RTN","VPSPDO2",120,0)
 . N REACT D GETADDFR^VPSOBJ(OREF,.REACT)
"RTN","VPSPDO2",121,0)
 . N MARKFOL S MARKFOL=0
"RTN","VPSPDO2",122,0)
 . N VPSX S VPSX=""
"RTN","VPSPDO2",123,0)
 . N RSS S RSS=0
"RTN","VPSPDO2",124,0)
 . F  S RSS=$O(ADDCOMM(RSS)) Q:'RSS  D
"RTN","VPSPDO2",125,0)
 . . I RSS=1 D
"RTN","VPSPDO2",126,0)
 . . . S MARKFOL=$$GETADDMF^VPSOBJ(OREF)
"RTN","VPSPDO2",127,0)
 . . . S VPSX=$$SETFLD^VPSPUTL1(MARKFOL,VPSX,COL("FOLLOWUP"))
"RTN","VPSPDO2",128,0)
 . . S VPSX=$$SETFLD^VPSPUTL1(ADDCOMM(RSS),VPSX,COL("ALLERNM"))
"RTN","VPSPDO2",129,0)
 . . S VPSX=$$SETFLD^VPSPUTL1($G(REACT(RSS)),VPSX,COL("REACTION"))
"RTN","VPSPDO2",130,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2",131,0)
 . ;build the rest of reaction incase reaction lines are longer than allergy lines
"RTN","VPSPDO2",132,0)
 . S RSS=$O(ADDCOMM(""),-1)
"RTN","VPSPDO2",133,0)
 . S VPSX=""
"RTN","VPSPDO2",134,0)
 . F  S RSS=$O(REACT(RSS)) Q:'RSS  D
"RTN","VPSPDO2",135,0)
 . . S VPSX=$$SETFLD^VPSPUTL1(MARKFOL,VPSX,COL("FOLLOWUP"))
"RTN","VPSPDO2",136,0)
 . . S VPSX=$$SETFLD^VPSPUTL1($G(REACT(RSS)),VPSX,COL("REACTION"))
"RTN","VPSPDO2",137,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2",138,0)
 Q
"RTN","VPSPDO2",139,0)
 ;
"RTN","VPSPDO2",140,0)
GETCH(OREF) ;retrieve any changes to allergy profile since last MRAR
"RTN","VPSPDO2",141,0)
 ; ICR 5843 - Controlled Subscription for read of PATIENT ALLERGIES file (120.8)
"RTN","VPSPDO2",142,0)
 ; INPUT
"RTN","VPSPDO2",143,0)
 ;   OREF : Object Reference for the VPS PDO object
"RTN","VPSPDO2",144,0)
 ;
"RTN","VPSPDO2",145,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO2",146,0)
 N LASTMRAR S LASTMRAR=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO2",147,0)
 N ALLITMS D GETALLR^VPSOBJ(OREF,.ALLITMS)
"RTN","VPSPDO2",148,0)
 ;
"RTN","VPSPDO2",149,0)
 N HDR S HDR=0
"RTN","VPSPDO2",150,0)
 N VPSX S VPSX=""
"RTN","VPSPDO2",151,0)
 N VDA S VDA=0
"RTN","VPSPDO2",152,0)
 ;
"RTN","VPSPDO2",153,0)
 F  S VDA=$O(^GMR(120.8,"B",PTIEN,VDA)) Q:'VDA  D
"RTN","VPSPDO2",154,0)
 . Q:LASTMRAR>+$$GET1^DIQ(120.8,VDA_",",20,"I")  ; if VPS trxn date/time is greater than what is stored in patient allergy profile then not a changed or added allergy so skip this allergy entry
"RTN","VPSPDO2",155,0)
 . Q:+$$GET1^DIQ(120.8,VDA_",",21,"I")=0   ; if VERIFIED BY is not populated do not display the allergy
"RTN","VPSPDO2",156,0)
 . ;
"RTN","VPSPDO2",157,0)
 . ; -- get the newly entered allergy
"RTN","VPSPDO2",158,0)
 . N ANAME S ANAME=$$GET1^DIQ(120.8,VDA_",",.02)
"RTN","VPSPDO2",159,0)
 . ;
"RTN","VPSPDO2",160,0)
 . ; -- set action
"RTN","VPSPDO2",161,0)
 . N ENTERR S ENTERR=+$$GET1^DIQ(120.8,VDA_",",22,"I") ;entered in error
"RTN","VPSPDO2",162,0)
 . N ACTION
"RTN","VPSPDO2",163,0)
 . I '$D(ALLITMS(ANAME)) S ACTION=$S(ENTERR:"Deleted",1:"Added")
"RTN","VPSPDO2",164,0)
 . I $D(ALLITMS(ANAME)) S ACTION=$S(ENTERR:"Deleted",1:"Changed")
"RTN","VPSPDO2",165,0)
 . ;
"RTN","VPSPDO2",166,0)
 . ; -- get reactions
"RTN","VPSPDO2",167,0)
 . N REACTION
"RTN","VPSPDO2",168,0)
 . N VIEN S VIEN=0
"RTN","VPSPDO2",169,0)
 . N SEQ S SEQ=0
"RTN","VPSPDO2",170,0)
 . F  S VIEN=$O(^GMR(120.8,VDA,10,VIEN)) Q:'VIEN  D
"RTN","VPSPDO2",171,0)
 . . N VIENS S VIENS=VIEN_","_VDA_","
"RTN","VPSPDO2",172,0)
 . . S SEQ=SEQ+1,REACTION(SEQ)=$$GET1^DIQ(120.81,VIENS,".01")
"RTN","VPSPDO2",173,0)
 . ;
"RTN","VPSPDO2",174,0)
 . ; build allergies changes
"RTN","VPSPDO2",175,0)
 . I 'HDR S HDR=1 D ADDCHGHD(OREF)
"RTN","VPSPDO2",176,0)
 . D ADDCHG(OREF,ANAME,.REACTION,ACTION)
"RTN","VPSPDO2",177,0)
 . D ADDBLANK^VPSOBJ(OREF)  ; add a blank line between allergy sets with multiple reactions
"RTN","VPSPDO2",178,0)
 Q
"RTN","VPSPDO2",179,0)
 ;
"RTN","VPSPDO2",180,0)
ADDCHGHD(OREF) ; build allergies changes header
"RTN","VPSPDO2",181,0)
 D ADDCJ^VPSOBJ(OREF,"*** CHANGES TO ALLERGIES SINCE MRAR LAST COMPLETED ***")
"RTN","VPSPDO2",182,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO2",183,0)
 N VPSX S VPSX=""
"RTN","VPSPDO2",184,0)
 S VPSX=$$SETFLD^VPSPUTL1("Name",VPSX,COL("ALLERNM"))
"RTN","VPSPDO2",185,0)
 S VPSX=$$SETFLD^VPSPUTL1("Reaction",VPSX,COL("REACTION"))
"RTN","VPSPDO2",186,0)
 S VPSX=$$SETFLD^VPSPUTL1("Action",VPSX,COL("ACTION"))
"RTN","VPSPDO2",187,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2",188,0)
 Q
"RTN","VPSPDO2",189,0)
 ; 
"RTN","VPSPDO2",190,0)
ADDCHG(OREF,ANAME,REACTION,ACTION) ; build allergies changes
"RTN","VPSPDO2",191,0)
 ; INPUT
"RTN","VPSPDO2",192,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO2",193,0)
 ;   ANAME    : newly entered Allergy name
"RTN","VPSPDO2",194,0)
 ;   REACTION : array of reactions of the allergy
"RTN","VPSPDO2",195,0)
 ;   ACTION   : what to do with the reaction review
"RTN","VPSPDO2",196,0)
 ;
"RTN","VPSPDO2",197,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO2",198,0)
 N VPSX S VPSX=""
"RTN","VPSPDO2",199,0)
 S VPSX=$$SETFLD^VPSPUTL1(ANAME,VPSX,COL("ALLERNM"))
"RTN","VPSPDO2",200,0)
 S VPSX=$$SETFLD^VPSPUTL1(REACTION(1),VPSX,COL("REACTION"))
"RTN","VPSPDO2",201,0)
 S VPSX=$$SETFLD^VPSPUTL1(ACTION,VPSX,COL("ACTION"))
"RTN","VPSPDO2",202,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2",203,0)
 ;
"RTN","VPSPDO2",204,0)
 N RSS S RSS=1
"RTN","VPSPDO2",205,0)
 S VPSX=""
"RTN","VPSPDO2",206,0)
 F  S RSS=$O(REACTION(RSS)) Q:'RSS  D
"RTN","VPSPDO2",207,0)
 . S VPSX=$$SETFLD^VPSPUTL1(REACTION(RSS),VPSX,COL("REACTION"))
"RTN","VPSPDO2",208,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2",209,0)
 Q
"RTN","VPSPDO2M")
0^12^B33280551
"RTN","VPSPDO2M",1,0)
VPSPDO2M  ;DALOI/KML,WOIFO/BT -  PDO OUTPUT DISPLAY - MEDS ;11/20/11 15:30
"RTN","VPSPDO2M",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Oct 21, 2011;Build 64
"RTN","VPSPDO2M",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPDO2M",4,0)
 ;
"RTN","VPSPDO2M",5,0)
 Q
"RTN","VPSPDO2M",6,0)
 ;IA #10103 - supported use of XLFDT functions
"RTN","VPSPDO2M",7,0)
 ;IA #10104 - supported use of XLFSTR function
"RTN","VPSPDO2M",8,0)
 ;IA #4533 - supported use of DATA^PSS50 procedure
"RTN","VPSPDO2M",9,0)
 ; the medication section of the PDO output specifically for the PATIENT ENTERED ALLERGY MEDICATION REVIEW
"RTN","VPSPDO2M",10,0)
 ;  which can be invoked by CPRS TIU components and as an RPC to be called by Vetlink staff-facing interface
"RTN","VPSPDO2M",11,0)
 ;
"RTN","VPSPDO2M",12,0)
MEDCHNG(OREF,SAVMEDS) ;
"RTN","VPSPDO2M",13,0)
 ; INPUT
"RTN","VPSPDO2M",14,0)
 ;   OREF    : Object Reference for the VPS PDO object (contains all properties)
"RTN","VPSPDO2M",15,0)
 ;   SAVMEDS : array represents the list of active and past medications.  
"RTN","VPSPDO2M",16,0)
 ;             Will be used to determine if any changes have occurred since last MRAR.
"RTN","VPSPDO2M",17,0)
 ; 
"RTN","VPSPDO2M",18,0)
 ; per MRAR requirements for CHANGES SINCE last MRAR a change to the patient's medication profile is:
"RTN","VPSPDO2M",19,0)
 ; RX status changes since last MRAR or if a medication was added to the patient's medication profile
"RTN","VPSPDO2M",20,0)
 ;
"RTN","VPSPDO2M",21,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO2M",22,0)
 N RXDATA D GET52(OREF,.RXDATA) ; get local med data in file #52
"RTN","VPSPDO2M",23,0)
 Q:'$D(RXDATA)
"RTN","VPSPDO2M",24,0)
 ; 
"RTN","VPSPDO2M",25,0)
 D ADDBLANK^VPSOBJ(OREF) ; add blank line between last section
"RTN","VPSPDO2M",26,0)
 D ADDUNDLN^VPSOBJ(OREF) ; DISPLAY UNDERSCORE
"RTN","VPSPDO2M",27,0)
 D ADDCJ^VPSOBJ(OREF,"***   CHANGES TO OUTPATIENT MEDICATIONS SINCE MRAR LAST COMPLETED   ***")
"RTN","VPSPDO2M",28,0)
 ;
"RTN","VPSPDO2M",29,0)
 N VPSX S VPSX=""
"RTN","VPSPDO2M",30,0)
 N RXIEN S RXIEN=0
"RTN","VPSPDO2M",31,0)
 ;
"RTN","VPSPDO2M",32,0)
 F  S RXIEN=$O(RXDATA(RXIEN)) Q:'RXIEN  D
"RTN","VPSPDO2M",33,0)
 . I '$D(SAVMEDS(RXDATA(RXIEN,"MEDNAME"))) S ACTION="Filled"   ; added medication since last MRAR
"RTN","VPSPDO2M",34,0)
 . E  S ACTION=$S($P(RXDATA(RXIEN,"STATUS"),U,2)["DISCONTINUED":"Discontinued",$P(RXDATA(RXIEN,"STATUS"),U,2)="EXPIRED":"Discontinued",1:"Filled")
"RTN","VPSPDO2M",35,0)
 . S VPSX="",VPSX=$$SETFLD^VPSPUTL1(RXDATA(RXIEN,"MEDNAME"),VPSX,COL("MEDNAME"))
"RTN","VPSPDO2M",36,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2M",37,0)
 . I ACTION="Filled" D
"RTN","VPSPDO2M",38,0)
 . . S VPSX="",VPSX=$$SETFLD^VPSPUTL1(RXDATA(RXIEN,"SIG"),VPSX,COL("SIG"))
"RTN","VPSPDO2M",39,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Refills left: "_RXDATA(RXIEN,"REFILLS LEFT")_" of "_RXDATA(RXIEN,"# OF REFILLS"),VPSX,COL("REFILLS"))
"RTN","VPSPDO2M",40,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2M",41,0)
 . . S VPSX="",VPSX=$$SETFLD^VPSPUTL1("Provider: "_RXDATA(RXIEN,"PROVIDER"),VPSX,COL("PROVIDER"))
"RTN","VPSPDO2M",42,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Days supplied: "_RXDATA(RXIEN,"DAYS SUPPLIED"),VPSX,COL("DAYS SUPPLIED"))
"RTN","VPSPDO2M",43,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2M",44,0)
 . . S VPSX="",VPSX=$$SETFLD^VPSPUTL1("Filled: "_RXDATA(RXIEN,"LAST FILLED")_"d ago",VPSX,COL("FILLED"))
"RTN","VPSPDO2M",45,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Action: "_ACTION,VPSX,COL("MEDS ACTION"))
"RTN","VPSPDO2M",46,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2M",47,0)
 . I ACTION="Discontinued" D
"RTN","VPSPDO2M",48,0)
 . . S VPSX="",VPSX=$$SETFLD^VPSPUTL1(RXDATA(RXIEN,"SIG"),VPSX,COL("SIG"))
"RTN","VPSPDO2M",49,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Action: "_ACTION,VPSX,COL("MEDS ACTION"))
"RTN","VPSPDO2M",50,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2M",51,0)
 ;
"RTN","VPSPDO2M",52,0)
 D ADDBLANK^VPSOBJ(OREF)
"RTN","VPSPDO2M",53,0)
 S VPSX="",VPSX=$$SETFLD^VPSPUTL1("Pending medications will NOT display in this section. Please check",VPSX,COL("PENDING STMT"))
"RTN","VPSPDO2M",54,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2M",55,0)
 S VPSX="",VPSX=$$SETFLD^VPSPUTL1("medication orders for any pending medications that may have been",VPSX,COL("PENDING STMT"))
"RTN","VPSPDO2M",56,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2M",57,0)
 S VPSX="",VPSX=$$SETFLD^VPSPUTL1("entered since MRAR completed.",VPSX,COL("PENDING STMT"))
"RTN","VPSPDO2M",58,0)
 D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO2M",59,0)
 Q
"RTN","VPSPDO2M",60,0)
 ;
"RTN","VPSPDO2M",61,0)
GET52(OREF,RXDATA) ;  get medication profile from PRESCRIPTION file (#52)
"RTN","VPSPDO2M",62,0)
 ; INPUT
"RTN","VPSPDO2M",63,0)
 ;   OREF   : Object Reference for the VPS PDO object (contains all properties)
"RTN","VPSPDO2M",64,0)
 ;   RXDATA : array of data extracted from the temporary global array produced by RX^PSO52API
"RTN","VPSPDO2M",65,0)
 ;
"RTN","VPSPDO2M",66,0)
 ; ICR 4820 - supported API for outpatient pharmacy procedure RX^PSO52API
"RTN","VPSPDO2M",67,0)
 ;
"RTN","VPSPDO2M",68,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO2M",69,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO2M",70,0)
 K ^TMP($J,"VPSPDO1M")
"RTN","VPSPDO2M",71,0)
 K RXDATA
"RTN","VPSPDO2M",72,0)
 ;
"RTN","VPSPDO2M",73,0)
 D RX^PSO52API(PTIEN,"VPSPDO1M",,,"2,M,P,R,ST")  ; get all active medications for today
"RTN","VPSPDO2M",74,0)
 D BLD52(OREF,.RXDATA)
"RTN","VPSPDO2M",75,0)
 D RX^PSO52API(PTIEN,"VPSPDO1M",,,"2,M,P,R,ST",$P(LMRARDT,"."),DT)  ;date arguments will catch any expired medications between the date of the last mrar and current date
"RTN","VPSPDO2M",76,0)
 D BLD52(OREF,.RXDATA)
"RTN","VPSPDO2M",77,0)
 Q
"RTN","VPSPDO2M",78,0)
 ;
"RTN","VPSPDO2M",79,0)
BLD52(OREF,RXDATA) ;
"RTN","VPSPDO2M",80,0)
 ; INPUT
"RTN","VPSPDO2M",81,0)
 ;   RXDATA - array of data extracted from the temporary global array produced by RX^PSO52API
"RTN","VPSPDO2M",82,0)
 ;   RXDATA : array of data extracted from the temporary global array produced by RX^PSO52API
"RTN","VPSPDO2M",83,0)
 ;
"RTN","VPSPDO2M",84,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO2M",85,0)
 Q:$P(^TMP($J,"VPSPDO1M",PTIEN,0),U,2)="NO DATA FOUND"
"RTN","VPSPDO2M",86,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO2M",87,0)
 N RXIEN S RXIEN=0
"RTN","VPSPDO2M",88,0)
 ;
"RTN","VPSPDO2M",89,0)
 F  S RXIEN=$O(^TMP($J,"VPSPDO1M",PTIEN,RXIEN)) Q:'RXIEN  D
"RTN","VPSPDO2M",90,0)
 . N FILLED S FILLED=$P(^TMP($J,"VPSPDO1M",PTIEN,RXIEN,22),U)
"RTN","VPSPDO2M",91,0)
 . Q:LMRARDT>FILLED  ;medication in local Rx file is older than VPS transaction date/timestamp; does not count as a change
"RTN","VPSPDO2M",92,0)
 . S RXDATA(RXIEN,"PROVIDER")=$P(^TMP($J,"VPSPDO1M",PTIEN,RXIEN,4),U,2)
"RTN","VPSPDO2M",93,0)
 . S RXDATA(RXIEN,"MEDNAME")=$$GTDRGNM(^TMP($J,"VPSPDO1M",PTIEN,RXIEN,6))
"RTN","VPSPDO2M",94,0)
 . S RXDATA(RXIEN,"DAYS SUPPLIED")=^TMP($J,"VPSPDO1M",PTIEN,RXIEN,8)
"RTN","VPSPDO2M",95,0)
 . S RXDATA(RXIEN,"# OF REFILLS")=^TMP($J,"VPSPDO1M",PTIEN,RXIEN,9)
"RTN","VPSPDO2M",96,0)
 . S RXDATA(RXIEN,"STATUS")=$P(^TMP($J,"VPSPDO1M",PTIEN,RXIEN,100),2)
"RTN","VPSPDO2M",97,0)
 . N REFNUM S REFNUM=^TMP($J,"VPSPDO1M",PTIEN,RXIEN,"RF",0)  ; NUMBER OF REFILLS PERFORMED
"RTN","VPSPDO2M",98,0)
 . S RXDATA(RXIEN,"REFILL#")=$S($P(REFNUM,U)=-1:0,1:REFNUM)
"RTN","VPSPDO2M",99,0)
 . I RXDATA(RXIEN,"REFILL#") S FILLED=$P(^TMP($J,"VPSPDO1M",PTIEN,RXIEN,"RF",RXDATA(RXIEN,"REFILL#"),.01),U)
"RTN","VPSPDO2M",100,0)
 . S:'RXDATA(RXIEN,"REFILL#") RXDATA(RXIEN,"REFILL#")=1
"RTN","VPSPDO2M",101,0)
 . S RXDATA(RXIEN,"SIG")=^TMP($J,"VPSPDO1M",PTIEN,RXIEN,"M",1,0)
"RTN","VPSPDO2M",102,0)
 . S RXDATA(RXIEN,"LAST FILLED")=$S(FILLED]"":$$FMDIFF^XLFDT(DT,FILLED),1:"")
"RTN","VPSPDO2M",103,0)
 . S RXDATA(RXIEN,"REFILLS LEFT")=RXDATA(RXIEN,"# OF REFILLS")-RXDATA(RXIEN,"REFILL#")
"RTN","VPSPDO2M",104,0)
 Q
"RTN","VPSPDO2M",105,0)
 ;
"RTN","VPSPDO2M",106,0)
GTDRGNM(DRUG) ; Get Drug Name
"RTN","VPSPDO2M",107,0)
 ; INPUT
"RTN","VPSPDO2M",108,0)
 ;   DRUG  : Drug IEN ^ local drug name (file #52)
"RTN","VPSPDO2M",109,0)
 ; RETURN
"RTN","VPSPDO2M",110,0)
 ;   DRUG NAME
"RTN","VPSPDO2M",111,0)
 ;
"RTN","VPSPDO2M",112,0)
 ; LOGIC
"RTN","VPSPDO2M",113,0)
 ;  if available use the VA Print Name (File 50.68/Field 5)
"RTN","VPSPDO2M",114,0)
 ;  otherwise Use the Local Print Name.
"RTN","VPSPDO2M",115,0)
 ;  To get VA Print Name:
"RTN","VPSPDO2M",116,0)
 ;  A. From File 52 - PRESCRIPTION, go first to File 52/Field 6 and follow the pointer to File 50 - DRUG.
"RTN","VPSPDO2M",117,0)
 ;  B. Check File 50/Field 22. 
"RTN","VPSPDO2M",118,0)
 ;     If the pointer is available, follow this to File 50.68 (VA PRODUCT) and go to step C.
"RTN","VPSPDO2M",119,0)
 ;     If the pointer is unavailable, use the name in File 50/Field .01 (GENERIC NAME).
"RTN","VPSPDO2M",120,0)
 ;  C. In File 50.68, use the name in File 50.68/Field 5 (VA PRINT NAME)
"RTN","VPSPDO2M",121,0)
 ;
"RTN","VPSPDO2M",122,0)
 N DRUGIEN S DRUGIEN=$P(DRUG,U)
"RTN","VPSPDO2M",123,0)
 Q:DRUGIEN="" ""
"RTN","VPSPDO2M",124,0)
 N DRUGNM S DRUGNM=$P(DRUG,U,2) ;local drug name from File 52
"RTN","VPSPDO2M",125,0)
 K ^TMP($J,"VPSPDO2M",DRUGIEN)
"RTN","VPSPDO2M",126,0)
 D DATA^PSS50(DRUGIEN,,,,,"VPSPDO2M") ;Supported DBIA 4533
"RTN","VPSPDO2M",127,0)
 N VADRGIEN S VADRGIEN=$P($G(^TMP($J,"VPSPDO2M",DRUGIEN,22)),U)
"RTN","VPSPDO2M",128,0)
 N VAPROD S VAPROD=$$PROD2^PSNAPIS(,VADRGIEN) ;supported ICR 2531
"RTN","VPSPDO2M",129,0)
 N VADRGNM S VADRGNM=$P(VAPROD,U) ; VA PRNT NAME
"RTN","VPSPDO2M",130,0)
 S:VADRGNM]"" DRUGNM=VADRGNM
"RTN","VPSPDO2M",131,0)
 K ^TMP($J,"VPSPDO2M",DRUGIEN)
"RTN","VPSPDO2M",132,0)
 Q DRUGNM
"RTN","VPSPDO3M")
0^13^B60441285
"RTN","VPSPDO3M",1,0)
VPSPDO3M  ;DALOI/KML,WOIFO/BT -  PDO OUTPUT DISPLAY - Additional MEDS ;11/20/11 15:30
"RTN","VPSPDO3M",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Oct 21, 2011;Build 64
"RTN","VPSPDO3M",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPDO3M",4,0)
 ;
"RTN","VPSPDO3M",5,0)
 Q
"RTN","VPSPDO3M",6,0)
 ;IA #10103 - supported use of XLFDT functions
"RTN","VPSPDO3M",7,0)
 ;IA #10104 - supported use of XLFSTR function
"RTN","VPSPDO3M",8,0)
 ;
"RTN","VPSPDO3M",9,0)
ADDMEDS(OREF) ;produce additional meds section
"RTN","VPSPDO3M",10,0)
 ; INPUT
"RTN","VPSPDO3M",11,0)
 ;   OREF    : Object Reference for the VPS PDO object
"RTN","VPSPDO3M",12,0)
 ;
"RTN","VPSPDO3M",13,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO3M",14,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO3M",15,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO3M",16,0)
 ;
"RTN","VPSPDO3M",17,0)
 N PFVIEW,SFSTVIEW,SFVTVIEW
"RTN","VPSPDO3M",18,0)
 N M1 S M1=0
"RTN","VPSPDO3M",19,0)
 N M2 S M2=0
"RTN","VPSPDO3M",20,0)
 ;
"RTN","VPSPDO3M",21,0)
 F  S M1=$O(^VPS(853.5,PTIEN,"MRAR",LMRARDT,"MEDSADD","B",M1)) Q:'M1  S M2=$O(^(M1,M2)) D
"RTN","VPSPDO3M",22,0)
 . N FLD1 S FLD1=$$GET1^DIQ(853.55,M2_","_LMRARDT_","_PTIEN_",",1) ; additional medication name entered by patient-facing (kiosk)
"RTN","VPSPDO3M",23,0)
 . N FLD2 S FLD2=$$GET1^DIQ(853.55,M2_","_LMRARDT_","_PTIEN_",",2) ; additional medication name entered by staff-facing staff view
"RTN","VPSPDO3M",24,0)
 . N FLD3 S FLD3=$$GET1^DIQ(853.55,M2_","_LMRARDT_","_PTIEN_",",3) ; additional medication name entered by staff-facing vet view
"RTN","VPSPDO3M",25,0)
 . S:FLD1]"" PFVIEW(M2)=""  ; set up additional medication names array to be used in subsequent algorithm
"RTN","VPSPDO3M",26,0)
 . S:FLD2]"" SFSTVIEW(M2)=""
"RTN","VPSPDO3M",27,0)
 . S:FLD3]"" SFVTVIEW(M2)=""
"RTN","VPSPDO3M",28,0)
 ;
"RTN","VPSPDO3M",29,0)
 N STAFMEDS M STAFMEDS=PFVIEW,STAFMEDS=SFSTVIEW,STAFMEDS=SFVTVIEW  ; merge patient-facing and staff-facing added meds into a single array for the patient facilitated note logic
"RTN","VPSPDO3M",30,0)
 I 'STAFF,$D(PFVIEW) D GETAM(OREF,.PFVIEW)
"RTN","VPSPDO3M",31,0)
 I STAFF,$D(STAFMEDS) D GETAM(OREF,.STAFMEDS)
"RTN","VPSPDO3M",32,0)
 K PFVIEW,SFSTVIEW,SFVTVIEW
"RTN","VPSPDO3M",33,0)
 Q
"RTN","VPSPDO3M",34,0)
 ;
"RTN","VPSPDO3M",35,0)
GETAM(OREF,AMEDITMS)  ; get the additional medications data for each sub-entry at 853.55
"RTN","VPSPDO3M",36,0)
 ; INPUT
"RTN","VPSPDO3M",37,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO3M",38,0)
 ;   AMEDITMS : passed in by reference.  array represents the list of additional medications to display at a given section
"RTN","VPSPDO3M",39,0)
 ;
"RTN","VPSPDO3M",40,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO3M",41,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO3M",42,0)
 N STAFF S STAFF=$$GETSTAFF^VPSOBJ(OREF)
"RTN","VPSPDO3M",43,0)
 ;
"RTN","VPSPDO3M",44,0)
 D ADDUNDLN^VPSOBJ(OREF)
"RTN","VPSPDO3M",45,0)
 D ADDCJ^VPSOBJ(OREF,"***ADDITIONAL MEDICATIONS/NOT IN SYSTEM***")
"RTN","VPSPDO3M",46,0)
 ;
"RTN","VPSPDO3M",47,0)
 N FLD D GETAMDTA(PTIEN,LMRARDT,.AMEDITMS,.FLD) ; Build FLD array of Additional Med data
"RTN","VPSPDO3M",48,0)
 ;
"RTN","VPSPDO3M",49,0)
 I 'STAFF D AMVET(OREF,.FLD) ; add additional med data (patient) to result array
"RTN","VPSPDO3M",50,0)
 I STAFF D AMSTAFF1(OREF,.FLD),AMSTAFF2(OREF,.FLD) ; add additional med data (staff) to result array
"RTN","VPSPDO3M",51,0)
 Q 
"RTN","VPSPDO3M",52,0)
 ;
"RTN","VPSPDO3M",53,0)
AMVET(OREF,FLD) ; add additional med data (veteran-facing) to result array
"RTN","VPSPDO3M",54,0)
 ; INPUT
"RTN","VPSPDO3M",55,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO3M",56,0)
 ;   FLD      : array of additional medication data by fieldname
"RTN","VPSPDO3M",57,0)
 ;
"RTN","VPSPDO3M",58,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO3M",59,0)
 N HDR S HDR=0
"RTN","VPSPDO3M",60,0)
 N MIEN S MIEN=0
"RTN","VPSPDO3M",61,0)
 N VPSX S VPSX=""
"RTN","VPSPDO3M",62,0)
 ;
"RTN","VPSPDO3M",63,0)
 F  S MIEN=$O(FLD(MIEN)) Q:'MIEN  D
"RTN","VPSPDO3M",64,0)
 . I 'HDR D
"RTN","VPSPDO3M",65,0)
 . . S HDR=1
"RTN","VPSPDO3M",66,0)
 . . S VPSX=""
"RTN","VPSPDO3M",67,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Name",VPSX,COL("MRNAME"))
"RTN","VPSPDO3M",68,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Direction",VPSX,COL("MRDIR"))
"RTN","VPSPDO3M",69,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Frequency",VPSX,COL("MRFREQ"))
"RTN","VPSPDO3M",70,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO3M",71,0)
 . S VPSX=""
"RTN","VPSPDO3M",72,0)
 . S VPSX=$$SETFLD^VPSPUTL1(FLD(MIEN,1,"E"),VPSX,COL("MRNAME"))
"RTN","VPSPDO3M",73,0)
 . S VPSX=$$SETFLD^VPSPUTL1(FLD(MIEN,6,"E"),VPSX,COL("MRDIR"))
"RTN","VPSPDO3M",74,0)
 . S VPSX=$$SETFLD^VPSPUTL1(FLD(MIEN,5,"E"),VPSX,COL("MRFREQ"))
"RTN","VPSPDO3M",75,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO3M",76,0)
 . S VPSX=""
"RTN","VPSPDO3M",77,0)
 . I FLD(MIEN,4,"I")="Y" S VPSX=$$SETFLD^VPSPUTL1("Patient wants to discuss this with the provider",VPSX,COL("DISCUSS"))
"RTN","VPSPDO3M",78,0)
 . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO3M",79,0)
 Q
"RTN","VPSPDO3M",80,0)
 ; 
"RTN","VPSPDO3M",81,0)
AMSTAFF1(OREF,FLD) ; add additional med data (staff-facing) to result array - first section
"RTN","VPSPDO3M",82,0)
 ; INPUT
"RTN","VPSPDO3M",83,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO3M",84,0)
 ;   FLD      : array of additional medication data by fieldname
"RTN","VPSPDO3M",85,0)
 ;
"RTN","VPSPDO3M",86,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO3M",87,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO3M",88,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO3M",89,0)
 ;
"RTN","VPSPDO3M",90,0)
 ; -- displays only the patient entered meds and any comments made
"RTN","VPSPDO3M",91,0)
 N HDR S HDR=0
"RTN","VPSPDO3M",92,0)
 N MIEN S MIEN=0
"RTN","VPSPDO3M",93,0)
 N VPSX S VPSX=""
"RTN","VPSPDO3M",94,0)
 ;
"RTN","VPSPDO3M",95,0)
 F  S MIEN=$O(FLD(MIEN)) Q:'MIEN  D
"RTN","VPSPDO3M",96,0)
 . I 'HDR D
"RTN","VPSPDO3M",97,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Name/Directions/Frequency (Pt input)",VPSX,COL("ADDMED"))
"RTN","VPSPDO3M",98,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Staff Comments",VPSX,COL("ADDSTAFFCOMM"))
"RTN","VPSPDO3M",99,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO3M",100,0)
 . . S HDR=1
"RTN","VPSPDO3M",101,0)
 . ;
"RTN","VPSPDO3M",102,0)
 . ; -- format name/directions/frequency
"RTN","VPSPDO3M",103,0)
 . N VETADD,NVETADD
"RTN","VPSPDO3M",104,0)
 . I FLD(MIEN,1,"E")]"" S VETADD(1)=FLD(MIEN,1,"E")_";"_FLD(MIEN,6,"E")_";"_FLD(MIEN,5,"E") ; fields to be displayed at Name/Directions/Frequency  column
"RTN","VPSPDO3M",105,0)
 . I $D(VETADD) S ^TMP("VPSPUTL1",$J)=0 D FCOMM^VPSPUTL1(.VETADD,$P(COL("ADDMED"),U,2),.NVETADD)
"RTN","VPSPDO3M",106,0)
 . ;
"RTN","VPSPDO3M",107,0)
 . ; -- format staff comment
"RTN","VPSPDO3M",108,0)
 . N NSTFCMT
"RTN","VPSPDO3M",109,0)
 . N STFCMT S STFCMT=$$GET1^DIQ(853.55,MIEN_","_LMRARDT_","_PTIEN_",",7,"","STFCMT") ; comments to be displayed at Staff Comments column
"RTN","VPSPDO3M",110,0)
 . I STFCMT]"" S ^TMP("VPSPUTL1",$J)=0 D FCOMM^VPSPUTL1(.STFCMT,$P(COL("ADDSTAFFCOMM"),U,2),.NSTFCMT)
"RTN","VPSPDO3M",111,0)
 . ;
"RTN","VPSPDO3M",112,0)
 . ;-- add formatted name/directions/frequency and STAFF comment to result array
"RTN","VPSPDO3M",113,0)
 . N COL1 S COL1=$O(NVETADD(""),-1)
"RTN","VPSPDO3M",114,0)
 . N COL2 S COL2=$O(NSTFCMT(""),-1)
"RTN","VPSPDO3M",115,0)
 . N END S END=$S(COL1>COL2:COL1,1:COL2)
"RTN","VPSPDO3M",116,0)
 . N RSS
"RTN","VPSPDO3M",117,0)
 . ;
"RTN","VPSPDO3M",118,0)
 . F RSS=1:1:END D
"RTN","VPSPDO3M",119,0)
 . . S VPSX=""
"RTN","VPSPDO3M",120,0)
 . . S VPSX=$$SETFLD^VPSPUTL1($G(NVETADD(RSS)),VPSX,COL("ADDMED"))
"RTN","VPSPDO3M",121,0)
 . . S VPSX=$$SETFLD^VPSPUTL1($G(NSTFCMT(RSS)),VPSX,COL("ADDSTAFFCOMM"))
"RTN","VPSPDO3M",122,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO3M",123,0)
 . ;
"RTN","VPSPDO3M",124,0)
 . K VETADD,NVETADD,STFCMT,NSTFCMT
"RTN","VPSPDO3M",125,0)
 . D ADDBLANK^VPSOBJ(OREF) ; add blank line between additional medications display
"RTN","VPSPDO3M",126,0)
 Q
"RTN","VPSPDO3M",127,0)
 ;
"RTN","VPSPDO3M",128,0)
AMSTAFF2(OREF,FLD) ; add additional med data (staff) to result array - first section
"RTN","VPSPDO3M",129,0)
 ; INPUT
"RTN","VPSPDO3M",130,0)
 ;   OREF     : Object Reference for the VPS PDO object
"RTN","VPSPDO3M",131,0)
 ;   FLD      : array of additional medication data by fieldname
"RTN","VPSPDO3M",132,0)
 ;
"RTN","VPSPDO3M",133,0)
 N COL D GETFORMT^VPSOBJ(OREF,.COL)
"RTN","VPSPDO3M",134,0)
 N PTIEN S PTIEN=$$GETDFN^VPSOBJ(OREF)
"RTN","VPSPDO3M",135,0)
 N LMRARDT S LMRARDT=$$GETLSTMR^VPSOBJ(OREF)
"RTN","VPSPDO3M",136,0)
 ;
"RTN","VPSPDO3M",137,0)
 ; -- display staff entered meds and any comments made
"RTN","VPSPDO3M",138,0)
 N HDR S HDR=0
"RTN","VPSPDO3M",139,0)
 N MIEN S MIEN=0
"RTN","VPSPDO3M",140,0)
 N VPSX S VPSX=""
"RTN","VPSPDO3M",141,0)
 ;
"RTN","VPSPDO3M",142,0)
 F  S MIEN=$O(FLD(MIEN)) Q:'MIEN  D
"RTN","VPSPDO3M",143,0)
 . I 'HDR D
"RTN","VPSPDO3M",144,0)
 . . S VPSX=""
"RTN","VPSPDO3M",145,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Name/Dose/Indication",VPSX,COL("ADDMEDSTAFF"))
"RTN","VPSPDO3M",146,0)
 . . S VPSX=$$SETFLD^VPSPUTL1("Comments",VPSX,COL("ADDSTAFFCOMM"))
"RTN","VPSPDO3M",147,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO3M",148,0)
 . . S HDR=1
"RTN","VPSPDO3M",149,0)
 . ; -- format name/dose/indication
"RTN","VPSPDO3M",150,0)
 . N STAFFADD,NSTAFADD
"RTN","VPSPDO3M",151,0)
 . S STAFFADD(1)=FLD(MIEN,2,"E")_"   "_FLD(MIEN,3,"E") ;fields to be displayed at Name/Dose/Indication column
"RTN","VPSPDO3M",152,0)
 . S ^TMP("VPSPUTL1",$J)=0 D FCOMM^VPSPUTL1(.STAFFADD,$P(COL("ADDMEDSTAFF"),U,2),.NSTAFADD)
"RTN","VPSPDO3M",153,0)
 . ;
"RTN","VPSPDO3M",154,0)
 . ; -- format staff comment
"RTN","VPSPDO3M",155,0)
 . N STFCMT,NSTFCMT
"RTN","VPSPDO3M",156,0)
 . S STFCMT=$$GET1^DIQ(853.55,MIEN_","_LMRARDT_","_PTIEN_",",12,"","STFCMT")  ;  comments to be displayed at Comments column
"RTN","VPSPDO3M",157,0)
 . I STFCMT]"" S ^TMP("VPSPUTL1",$J)=0 D FCOMM^VPSPUTL1(.STFCMT,$P(COL("ADDSTAFFCOMM"),U,2),.NSTFCMT)
"RTN","VPSPDO3M",158,0)
 . ;
"RTN","VPSPDO3M",159,0)
 . ; -- add name/dose/indication and staff comment to result array
"RTN","VPSPDO3M",160,0)
 . N COL1 S COL1=$O(NSTAFADD(""),-1)
"RTN","VPSPDO3M",161,0)
 . N COL2 S COL2=$O(NSTFCMT(""),-1)
"RTN","VPSPDO3M",162,0)
 . N END S END=$S(COL1>COL2:COL1,1:COL2)
"RTN","VPSPDO3M",163,0)
 . N RSS
"RTN","VPSPDO3M",164,0)
 . F RSS=1:1:END D
"RTN","VPSPDO3M",165,0)
 . . S VPSX=""
"RTN","VPSPDO3M",166,0)
 . . N ADMSTAFF S VPSX=$$SETFLD^VPSPUTL1($G(NSTAFADD(RSS)),VPSX,COL("ADDMEDSTAFF"))
"RTN","VPSPDO3M",167,0)
 . . N ADSTAFFC S VPSX=$$SETFLD^VPSPUTL1($G(NSTFCMT(RSS)),VPSX,COL("ADDSTAFFCOMM"))
"RTN","VPSPDO3M",168,0)
 . . D ADDPDO^VPSOBJ(OREF,VPSX)
"RTN","VPSPDO3M",169,0)
 . ;
"RTN","VPSPDO3M",170,0)
 . K STAFFADD,NSTAFADD,STFCMT,NSTFCMT
"RTN","VPSPDO3M",171,0)
 . D ADDBLANK^VPSOBJ(OREF) ; add blank line between additional medications display
"RTN","VPSPDO3M",172,0)
 Q
"RTN","VPSPDO3M",173,0)
 ;
"RTN","VPSPDO3M",174,0)
GETAMDTA(PTIEN,LMRARDT,AMEDITMS,FLD) ; Build FLD array of Additional Med data
"RTN","VPSPDO3M",175,0)
 ; INPUT
"RTN","VPSPDO3M",176,0)
 ;   AMEDITMS : passed in by reference.  array represents the list of additional medications to display at a given section
"RTN","VPSPDO3M",177,0)
 ; OUTPUT
"RTN","VPSPDO3M",178,0)
 ;   FLD      : array of additional medication data by fieldname
"RTN","VPSPDO3M",179,0)
 ;  
"RTN","VPSPDO3M",180,0)
 N MIEN S MIEN=0
"RTN","VPSPDO3M",181,0)
 F  S MIEN=$O(AMEDITMS(MIEN)) Q:'MIEN  D
"RTN","VPSPDO3M",182,0)
 . N ADMEDLST D GETS^DIQ(853.55,MIEN_","_LMRARDT_","_PTIEN_",","1;2;3;4;5;6;8;9;10;11","IE","ADMEDLST") ;refer to routine VPSMRAR2 for field references at subfile 853.55
"RTN","VPSPDO3M",183,0)
 . ; assign data to a simpler array for ease of handling
"RTN","VPSPDO3M",184,0)
 . S FLD=0 F  S FLD=$O(ADMEDLST(853.55,MIEN_","_LMRARDT_","_PTIEN_",",FLD)) Q:'FLD  F EXTINT="E","I" S FLD(MIEN,FLD,EXTINT)=ADMEDLST(853.55,MIEN_","_LMRARDT_","_PTIEN_",",FLD,EXTINT)
"RTN","VPSPDO3M",185,0)
 . K ADMEDLST
"RTN","VPSPDO3M",186,0)
 Q
"RTN","VPSPUTL1")
0^6^B42815834
"RTN","VPSPUTL1",1,0)
VPSPUTL1 ;DALOI/KML -  PDO OUTPUT DISPLAY - UTILITIES ;11/20/11 15:30
"RTN","VPSPUTL1",2,0)
 ;;1.0;VA POINT OF SERVICE (KIOSKS);**3**;Oct 21, 2011;Build 64
"RTN","VPSPUTL1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","VPSPUTL1",4,0)
 ;
"RTN","VPSPUTL1",5,0)
 Q
"RTN","VPSPUTL1",6,0)
 ;
"RTN","VPSPUTL1",7,0)
SETFLD(STR,VAR,COLATTR) ; -- set field in var
"RTN","VPSPUTL1",8,0)
 ; INPUT 
"RTN","VPSPUTL1",9,0)
 ;   STR     : string to insert
"RTN","VPSPUTL1",10,0)
 ;   VAR     : destination string
"RTN","VPSPUTL1",11,0)
 ;   COLATTR : column attributes
"RTN","VPSPUTL1",12,0)
 Q $$SETSTR(STR,VAR,+$P(COLATTR,U),+$P(COLATTR,U,2))
"RTN","VPSPUTL1",13,0)
 ;
"RTN","VPSPUTL1",14,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","VPSPUTL1",15,0)
 ; INPUT 
"RTN","VPSPUTL1",16,0)
 ;    S : string to insert
"RTN","VPSPUTL1",17,0)
 ;    V : destination string
"RTN","VPSPUTL1",18,0)
 ;    X : insert @ col X
"RTN","VPSPUTL1",19,0)
 ;    L : clear # of chars (length)
"RTN","VPSPUTL1",20,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","VPSPUTL1",21,0)
 ;
"RTN","VPSPUTL1",22,0)
ADDLN(PDONOTE,STR) ; add a line to note
"RTN","VPSPUTL1",23,0)
 ; INPUT 
"RTN","VPSPUTL1",24,0)
 ;   PDONOTE : global or local array containing the lines of the note
"RTN","VPSPUTL1",25,0)
 ;   STR     : string of data that gets assigned to a subscript in the local or global array (PDONOTE)
"RTN","VPSPUTL1",26,0)
 N L
"RTN","VPSPUTL1",27,0)
 S L=$O(@PDONOTE@(""),-1)+1
"RTN","VPSPUTL1",28,0)
 S @PDONOTE@(L,0)=STR
"RTN","VPSPUTL1",29,0)
 Q
"RTN","VPSPUTL1",30,0)
 ;
"RTN","VPSPUTL1",31,0)
PDOERR(LMRARDT,PTIEN) ; update PDO INVOCATION ERROR field when PDO was requested after the PDO INVOCABLE PERIOD
"RTN","VPSPUTL1",32,0)
 ; INPUT:
"RTN","VPSPUTL1",33,0)
 ;    LMRARDT = Fileman date representing the last MRAR on record
"RTN","VPSPUTL1",34,0)
 ;    PTIEN = DFN
"RTN","VPSPUTL1",35,0)
 N VPSFDA
"RTN","VPSPUTL1",36,0)
 S VPSFDA(853.51,LMRARDT_","_PTIEN_",",72)="E"
"RTN","VPSPUTL1",37,0)
 D FILE^DIE("","VPSFDA","")
"RTN","VPSPUTL1",38,0)
 Q
"RTN","VPSPUTL1",39,0)
 ;
"RTN","VPSPUTL1",40,0)
FCOMM(COM,WIDTH,NCOM) ; reformat comments to to fit in column on note
"RTN","VPSPUTL1",41,0)
 ; INPUT
"RTN","VPSPUTL1",42,0)
 ;   COM   : comments array
"RTN","VPSPUTL1",43,0)
 ;   WIDTH : amount of characters available for column 
"RTN","VPSPUTL1",44,0)
 ; OUTPUT
"RTN","VPSPUTL1",45,0)
 ;   NCOM  : array built with the re-formatted contents of COM
"RTN","VPSPUTL1",46,0)
 ;          ^TMP("VPSPUTL1",$J) = maintain overall counter for comment reformatting purposes
"RTN","VPSPUTL1",47,0)
 N C1,START,END,CTR,SAV,QUIT
"RTN","VPSPUTL1",48,0)
 I '$D(^TMP("VPSPUTL1",$J)) S ^($J)=0
"RTN","VPSPUTL1",49,0)
 S C1=0,CTR=^TMP("VPSPUTL1",$J)+1
"RTN","VPSPUTL1",50,0)
 F  S C1=$O(COM(C1)) Q:'C1  D
"RTN","VPSPUTL1",51,0)
 . S QUIT=0,START=1
"RTN","VPSPUTL1",52,0)
 . I '$D(SAV) S END=WIDTH
"RTN","VPSPUTL1",53,0)
 . E  S CTR=SAV
"RTN","VPSPUTL1",54,0)
 . F CTR=CTR:1 S NCOM(CTR)=$G(NCOM(CTR))_$E(COM(C1),START,END) D  Q:QUIT
"RTN","VPSPUTL1",55,0)
 . . I NCOM(CTR)="" K NCOM(CTR) S QUIT=1 Q  ; no more comments to format
"RTN","VPSPUTL1",56,0)
 . . I $L(NCOM(CTR))<WIDTH S SAV=CTR S END=WIDTH-$L(NCOM(CTR)) S QUIT=1 Q  ; start any next line of comments where last one left off
"RTN","VPSPUTL1",57,0)
 . . S START=END+1,END=END+WIDTH
"RTN","VPSPUTL1",58,0)
 S ^TMP("VPSPUTL1",$J)=CTR
"RTN","VPSPUTL1",59,0)
 Q
"RTN","VPSPUTL1",60,0)
 ;
"RTN","VPSPUTL1",61,0)
REACT(STAFF,LMRARDT,PTIEN,A2,COL,FLD03,NCOMM) ;  format allergy reactions
"RTN","VPSPUTL1",62,0)
 ; INPUT
"RTN","VPSPUTL1",63,0)
 ;   STAFF   : is MRAR staff-facing interface ?
"RTN","VPSPUTL1",64,0)
 ;   LMRARDT : Fileman date representing the last MRAR on record
"RTN","VPSPUTL1",65,0)
 ;   PTIEN   : DFN
"RTN","VPSPUTL1",66,0)
 ;   A2      : allergy sub-entry ien
"RTN","VPSPUTL1",67,0)
 ;   COL     : COLUMN ATTRIBUTE ARRAY used when formatting the string for each line on the note
"RTN","VPSPUTL1",68,0)
 ;   FLD03   : array of reactions
"RTN","VPSPUTL1",69,0)
 ; INPUT/OUTPUT:
"RTN","VPSPUTL1",70,0)
 ;   NCOMM   : reactions and staff facing comments array formatted for display on PDO ouput
"RTN","VPSPUTL1",71,0)
 ; 
"RTN","VPSPUTL1",72,0)
 N TEMP,ARRAY
"RTN","VPSPUTL1",73,0)
 K NCOMM
"RTN","VPSPUTL1",74,0)
 D FCOMM(.FLD03,$P(COL("REACTION"),U,2),.TEMP)
"RTN","VPSPUTL1",75,0)
 M ARRAY=TEMP
"RTN","VPSPUTL1",76,0)
 I STAFF D ALLCOMM(LMRARDT,PTIEN,A2,.COL,.ARRAY)
"RTN","VPSPUTL1",77,0)
 S ^TMP("VPSPUTL1",$J)=0 D FCOMM(.ARRAY,$P(COL("REACTION"),U,2),.NCOMM)
"RTN","VPSPUTL1",78,0)
 Q
"RTN","VPSPUTL1",79,0)
 ;
"RTN","VPSPUTL1",80,0)
ALLCOMM(LMRARDT,PTIEN,A2,COL,ARRAY) ; format allergy section comments from staff-facing
"RTN","VPSPUTL1",81,0)
 ; INPUT
"RTN","VPSPUTL1",82,0)
 ;   LMRARDT : Fileman date representing the last MRAR on record
"RTN","VPSPUTL1",83,0)
 ;   PTIEN   : DFN
"RTN","VPSPUTL1",84,0)
 ;   A2      : allergy sub-entry ien
"RTN","VPSPUTL1",85,0)
 ;   COL     : COLUMN ATTRIBUTE ARRAY used when formatting the string for each line on the note
"RTN","VPSPUTL1",86,0)
 ; INPUT/OUTPUT
"RTN","VPSPUTL1",87,0)
 ;   ARRAY - reactions AND staff facing comments array formatted for display on PDO ouput
"RTN","VPSPUTL1",88,0)
 ;
"RTN","VPSPUTL1",89,0)
 N COMMENTS,TEMP
"RTN","VPSPUTL1",90,0)
 S COMMENTS=$$GET1^DIQ(853.52,A2_","_LMRARDT_","_PTIEN_",",2,"","COMMENTS")  ; staff facing staff view comments
"RTN","VPSPUTL1",91,0)
 I COMMENTS]"" S COMMENTS(1)=";"_COMMENTS(1) D FCOMM(.COMMENTS,$P(COL("REACTION"),U,2),.TEMP)
"RTN","VPSPUTL1",92,0)
 M ARRAY=TEMP
"RTN","VPSPUTL1",93,0)
 K COMMENTS,TEMP
"RTN","VPSPUTL1",94,0)
 S COMMENTS=$$GET1^DIQ(853.52,A2_","_LMRARDT_","_PTIEN_",",3,"","COMMENTS")  ; staff facing vet view comments
"RTN","VPSPUTL1",95,0)
 I COMMENTS]"" S COMMENTS(1)=";"_COMMENTS(1) D FCOMM(.COMMENTS,$P(COL("REACTION"),U,2),.TEMP)
"RTN","VPSPUTL1",96,0)
 M ARRAY=TEMP
"RTN","VPSPUTL1",97,0)
 Q
"RTN","VPSPUTL1",98,0)
 ;
"RTN","VPSPUTL1",99,0)
SIG(LMRARDT,PTIEN,FLD13,COL,SIG) ;  format patient instructions
"RTN","VPSPUTL1",100,0)
 ; INPUT:
"RTN","VPSPUTL1",101,0)
 ; LMRARDT = Fileman date representing the last MRAR on record
"RTN","VPSPUTL1",102,0)
 ; PTIEN = DFN
"RTN","VPSPUTL1",103,0)
 ; FLD13 - patient instructions (sig) at 853.54,13
"RTN","VPSPUTL1",104,0)
 ; COL - COLUMN ATTRIBUTE ARRAY used when formatting the string for each line on the note
"RTN","VPSPUTL1",105,0)
 ; INPUT/OUTPUT:
"RTN","VPSPUTL1",106,0)
 ; SIG - patient instructions formatted in an array for display on PDO output
"RTN","VPSPUTL1",107,0)
 K SIG
"RTN","VPSPUTL1",108,0)
 N PSIG
"RTN","VPSPUTL1",109,0)
 S PSIG(1)=FLD13 ; set up string into array format
"RTN","VPSPUTL1",110,0)
 S ^TMP("VPSPUTL1",$J)=0
"RTN","VPSPUTL1",111,0)
 D FCOMM(.PSIG,$P(COL("SIG"),U,2),.SIG)
"RTN","VPSPUTL1",112,0)
 I $D(SIG(3)) S SIG(2)=$E(SIG(2),1,$P(COL("SIG"),U,2)-4)_"..."  ; display just up to 2 lines of patient instructions; if 3rd line exists indicate more instructions by "..."
"RTN","VPSPUTL1",113,0)
 Q
"RTN","VPSPUTL1",114,0)
 ;
"RTN","VPSPUTL1",115,0)
GCOMM(LMRARDT,PTIEN,MIEN,STAFF,COL,PATCOMM) ;  get unstructured comment fields and reformat to fit TIU note
"RTN","VPSPUTL1",116,0)
 ; per PROVIDER FACING OUTPUT requirements; comments have a specific display format
"RTN","VPSPUTL1",117,0)
 ; unstructured comments from patient facing and provider facing (staff view and vet view) can exist and are stored as discrete fields in 853.54 sub=file
"RTN","VPSPUTL1",118,0)
 ; the potential exists for all 3 fields to be sent in a single MRAR session and comments about a medication need to be displayed at a specific column when
"RTN","VPSPUTL1",119,0)
 ; displaying the MRAR PDO.
"RTN","VPSPUTL1",120,0)
 ; INPUT:
"RTN","VPSPUTL1",121,0)
 ; LMRARDT = Fileman date representing the last MRAR on record
"RTN","VPSPUTL1",122,0)
 ; PTIEN = DFN
"RTN","VPSPUTL1",123,0)
 ; MIEN - medication sub-entry ien
"RTN","VPSPUTL1",124,0)
 ; STAFF - output represents content coming from staff-facing interface
"RTN","VPSPUTL1",125,0)
 ; COL - COLUMN ATTRIBUTE ARRAY used when formatting the string for each line on the note
"RTN","VPSPUTL1",126,0)
 ; INPUT/OUTPUT:
"RTN","VPSPUTL1",127,0)
 ; PATCOMM -  array built in this procedure that reformats word processing fields from 853.54 to fit into PDO OUTPUT (tiu note)
"RTN","VPSPUTL1",128,0)
 N LSS,QUOTE,XXX,NFLD23,NFLD24,NFLD25,FLD23,FLD24,FLD25,TEMP
"RTN","VPSPUTL1",129,0)
 S QUOTE=""""
"RTN","VPSPUTL1",130,0)
 S FLD23=$$GET1^DIQ(853.54,MIEN_","_LMRARDT_","_PTIEN_",",23,"","FLD23")  ; medication comments from patient-facing (word processing  field)
"RTN","VPSPUTL1",131,0)
 S FLD24=$$GET1^DIQ(853.54,MIEN_","_LMRARDT_","_PTIEN_",",24,"","FLD24")  ; medication comments from staff-facing staff view (word processing  field)
"RTN","VPSPUTL1",132,0)
 S FLD25=$$GET1^DIQ(853.54,MIEN_","_LMRARDT_","_PTIEN_",",25,"","FLD25")  ; medication comments from staff-facing vet view (word processing  field)
"RTN","VPSPUTL1",133,0)
 I 'STAFF,FLD23]"" D  Q
"RTN","VPSPUTL1",134,0)
 . S XXX=0 F  S XXX=$O(FLD23(XXX)) Q:'XXX
"RTN","VPSPUTL1",135,0)
 . S FLD23(1)="PATIENT COMMENTS: "_FLD23(1)
"RTN","VPSPUTL1",136,0)
 . D FCOMM(.FLD23,$P(COL("COMMENTS"),U,2),.PATCOMM)
"RTN","VPSPUTL1",137,0)
 ;if fields at 23&24&25 populated
"RTN","VPSPUTL1",138,0)
 ;23 needs to have the 'PATIENT COMMENTS:' in front of comment string and since the comments come from patient facing it needs to be in quotes; 24 and 25 need to have a pre-pended ";"
"RTN","VPSPUTL1",139,0)
 I (FLD23]"")&(FLD24]"")&(FLD25]"") D
"RTN","VPSPUTL1",140,0)
 . S XXX=0 F  S XXX=$O(FLD23(XXX)) Q:'XXX  S LSS=XXX
"RTN","VPSPUTL1",141,0)
 . S FLD23(1)="PATIENT COMMENTS: "_QUOTE_FLD23(1),FLD23(LSS)=FLD23(LSS)_QUOTE
"RTN","VPSPUTL1",142,0)
 . D FCOMM(.FLD23,$P(COL("COMMENTS"),U,2),.NFLD23)
"RTN","VPSPUTL1",143,0)
 . S FLD24(1)=";"_FLD24(1) D FCOMM(.FLD24,$P(COL("COMMENTS"),U,2),.NFLD24)
"RTN","VPSPUTL1",144,0)
 . S FLD25(1)=";"_FLD25(1) D FCOMM(.FLD25,$P(COL("COMMENTS"),U,2),.NFLD25)
"RTN","VPSPUTL1",145,0)
 . M TEMP=NFLD23,TEMP=NFLD24,TEMP=NFLD25
"RTN","VPSPUTL1",146,0)
 ;if fields at 23&24&'25 populated
"RTN","VPSPUTL1",147,0)
 ;23 needs to have the 'PATIENT COMMENTS:' in front of comment string and since the comments come from patient facing it needs to be in quotes; 24 needs to have a pre-pended ";" 
"RTN","VPSPUTL1",148,0)
 I (FLD23]"")&(FLD24]"")&(FLD25']"") D
"RTN","VPSPUTL1",149,0)
 . S X=0 F  S X=$O(FLD23(X)) Q:'X  S LSS=X
"RTN","VPSPUTL1",150,0)
 . S FLD23(1)="PATIENT COMMENTS: "_QUOTE_FLD23(1),FLD23(LSS)=FLD23(LSS)_QUOTE
"RTN","VPSPUTL1",151,0)
 . D FCOMM(.FLD23,$P(COL("COMMENTS"),U,2),.NFLD23)
"RTN","VPSPUTL1",152,0)
 . S FLD24(1)=";"_FLD24(1) D FCOMM(.FLD24,$P(COL("COMMENTS"),U,2),.NFLD24)
"RTN","VPSPUTL1",153,0)
 . M TEMP=NFLD23,TEMP=NFLD24
"RTN","VPSPUTL1",154,0)
 ; if '23&24&25
"RTN","VPSPUTL1",155,0)
 ; 24 needs to have the 'PATIENT COMMENTS:' in front of comment string;  25  needs to have a pre-pended ";"
"RTN","VPSPUTL1",156,0)
 I (FLD23']"")&(FLD24]"")&(FLD25]"") D
"RTN","VPSPUTL1",157,0)
 . S FLD24(1)="PATIENT COMMENTS: "_FLD24(1) D FCOMM(.FLD24,$P(COL("COMMENTS"),U,2),.NFLD24)
"RTN","VPSPUTL1",158,0)
 . S FLD25(1)=";"_FLD25(1) D FCOMM(.FLD25,$P(COL("COMMENTS"),U,2),.NFLD25)
"RTN","VPSPUTL1",159,0)
 . M TEMP=NFLD24,TEMP=NFLD25
"RTN","VPSPUTL1",160,0)
 ; if 23&'24&'25
"RTN","VPSPUTL1",161,0)
 ; 23 needs to have the 'PATIENT COMMENTS:' in front of comment string and since the comments come from patient facing it needs to be in quotes
"RTN","VPSPUTL1",162,0)
 I (FLD23]"")&(FLD24']"")&(FLD25']"") D
"RTN","VPSPUTL1",163,0)
 . S XXX=0 F  S XXX=$O(FLD23(XXX)) Q:'XXX  S LSS=XXX
"RTN","VPSPUTL1",164,0)
 . S FLD23(1)="PATIENT COMMENTS: "_QUOTE_FLD23(1),FLD23(LSS)=FLD23(LSS)_QUOTE
"RTN","VPSPUTL1",165,0)
 . D FCOMM(.FLD23,$P(COL("COMMENTS"),U,2),.NFLD23)
"RTN","VPSPUTL1",166,0)
 . M TEMP=NFLD23
"RTN","VPSPUTL1",167,0)
 ;if '23&24&'25
"RTN","VPSPUTL1",168,0)
 ;24 needs to have the 'PATIENT COMMENTS:' in front of comment string ; 
"RTN","VPSPUTL1",169,0)
 I (FLD23']"")&(FLD24]"")&(FLD25']"") D
"RTN","VPSPUTL1",170,0)
 . S FLD24(1)="PATIENT COMMENTS: "_FLD24(1)
"RTN","VPSPUTL1",171,0)
 . D FCOMM(.FLD24,$P(COL("COMMENTS"),U,2),.NFLD24)
"RTN","VPSPUTL1",172,0)
 . M TEMP=NFLD24
"RTN","VPSPUTL1",173,0)
 ;if '23&'24&25
"RTN","VPSPUTL1",174,0)
 ; 25 needs to have the 'PATIENT COMMENTS:' in front of comment string
"RTN","VPSPUTL1",175,0)
 I (FLD23']"")&(FLD24']"")&(FLD25]"") D
"RTN","VPSPUTL1",176,0)
 . S FLD25(1)="PATIENT COMMENTS: "_FLD25(1)
"RTN","VPSPUTL1",177,0)
 . D FCOMM(.FLD25,$P(COL("COMMENTS"),U,2),.NFLD25)
"RTN","VPSPUTL1",178,0)
 . M TEMP=NFLD25
"RTN","VPSPUTL1",179,0)
 S ^TMP("VPSPUTL1",$J)=0 D FCOMM(.TEMP,$P(COL("COMMENTS"),U,2),.PATCOMM)  ; produce displayable version of comments
"RTN","VPSPUTL1",180,0)
 Q
"VER")
8.0^22.0
"^DD",853,853,0)
FIELD^^.03^4
"^DD",853,853,0,"DDA")
N
"^DD",853,853,0,"DT")
3150108
"^DD",853,853,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^SC(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(44,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",853,853,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",853,853,0,"IX","B",853,.01)

"^DD",853,853,0,"IX","C",853,.02)

"^DD",853,853,0,"IX","D",853,.03)

"^DD",853,853,0,"NM","VPS CONFIG HISTORY")

"^DD",853,853,0,"VRPK")
VPS
"^DD",853,853,.01,0)
PARAMETER TYPE^RS^K:KIOSK GROUP;C:CLINIC;^0;1^Q
"^DD",853,853,.01,1,0)
^.1
"^DD",853,853,.01,1,1,0)
853^B
"^DD",853,853,.01,1,1,1)
S ^VPS(853,"B",$E(X,1,30),DA)=""
"^DD",853,853,.01,1,1,2)
K ^VPS(853,"B",$E(X,1,30),DA)
"^DD",853,853,.01,1,1,"%D",0)
^.101^1^1^3150213^^
"^DD",853,853,.01,1,1,"%D",1,0)
This cross reference is for VPS CONFIG History parameter type look up.
"^DD",853,853,.01,3)
Choose the Parameter Type.
"^DD",853,853,.01,21,0)
^.001^5^5^3150216^^
"^DD",853,853,.01,21,1,0)
When Vetlink makes changes to Kiosk's parameters, the changes are made 
"^DD",853,853,.01,21,2,0)
for a Kiosk Group or a clinic. This field identifies this type (Kiosk 
"^DD",853,853,.01,21,3,0)
Group or Clinic). For Parameter Type "K", KIOSK GROUP field (#.03) will 
"^DD",853,853,.01,21,4,0)
contain the Kiosk Group otherwise CLINIC field (#.02) will contain the 
"^DD",853,853,.01,21,5,0)
Clinic.
"^DD",853,853,.01,"DT")
3150216
"^DD",853,853,.02,0)
CLINIC^P44'^SC(^0;2^Q
"^DD",853,853,.02,1,0)
^.1
"^DD",853,853,.02,1,1,0)
853^C
"^DD",853,853,.02,1,1,1)
S ^VPS(853,"C",$E(X,1,30),DA)=""
"^DD",853,853,.02,1,1,2)
K ^VPS(853,"C",$E(X,1,30),DA)
"^DD",853,853,.02,1,1,"%D",0)
^.101^1^1^3150213^^
"^DD",853,853,.02,1,1,"%D",1,0)
This cross reference is for VPS CONFIG History clinic look up.
"^DD",853,853,.02,1,1,"DT")
3130501
"^DD",853,853,.02,3)
Select the Clinic.
"^DD",853,853,.02,21,0)
^.001^2^2^3150216^^
"^DD",853,853,.02,21,1,0)
This field identifies the clinic for which the changes to the Kiosk
"^DD",853,853,.02,21,2,0)
Parameters were made.
"^DD",853,853,.02,"DT")
3130507
"^DD",853,853,.03,0)
KIOSK GROUP^F^^0;3^K:$L(X)>30!($L(X)<2) X
"^DD",853,853,.03,1,0)
^.1
"^DD",853,853,.03,1,1,0)
853^D
"^DD",853,853,.03,1,1,1)
S ^VPS(853,"D",$E(X,1,30),DA)=""
"^DD",853,853,.03,1,1,2)
K ^VPS(853,"D",$E(X,1,30),DA)
"^DD",853,853,.03,1,1,"%D",0)
^^1^1^3150108^
"^DD",853,853,.03,1,1,"%D",1,0)
This cross reference is for VPS CONFIG History Kiosk group look up.
"^DD",853,853,.03,1,1,"DT")
3130507
"^DD",853,853,.03,3)
Enter the Kiosk Group (2-30 characters).
"^DD",853,853,.03,21,0)
^^2^2^3130507^
"^DD",853,853,.03,21,1,0)
This field identifies the Kiosk Group for which the changes to the Kiosk
"^DD",853,853,.03,21,2,0)
Parameters were made.
"^DD",853,853,.03,"DT")
3130507
"^DD",853,853,20,0)
PARAM INSTANCE^853.01D^^PARAM;0
"^DD",853,853,20,21,0)
^.001^3^3^3150216^^^^
"^DD",853,853,20,21,1,0)
This multiple contains transactions sent to VistA by Vetlink. The
"^DD",853,853,20,21,2,0)
transactions contain changes made to Kiosk parameters in Vetlink for
"^DD",853,853,20,21,3,0)
a Kiosk Group or a Clinic.
"^DD",853,853.01,0)
PARAM INSTANCE SUB-FIELD^^27^31
"^DD",853,853.01,0,"DT")
3150108
"^DD",853,853.01,0,"IX","B",853.01,.01)

"^DD",853,853.01,0,"NM","PARAM INSTANCE")

"^DD",853,853.01,0,"UP")
853
"^DD",853,853.01,.01,0)
TRXN DATE/TIME^RDX^^0;1^S %DT="ETX" D ^%DT S X=Y K:X<1 X S:$G(X) DINUM=X
"^DD",853,853.01,.01,1,0)
^.1
"^DD",853,853.01,.01,1,1,0)
853.01^B
"^DD",853,853.01,.01,1,1,1)
S ^VPS(853,DA(1),"PARAM","B",$E(X,1,30),DA)=""
"^DD",853,853.01,.01,1,1,2)
K ^VPS(853,DA(1),"PARAM","B",$E(X,1,30),DA)
"^DD",853,853.01,.01,3)
Enter the transaction date/time, time is optional.
"^DD",853,853.01,.01,21,0)
^.001^1^1^3150107^^
"^DD",853,853.01,.01,21,1,0)
This is the date/time (time is optional) of the transaction.
"^DD",853,853.01,.01,"DT")
3150216
"^DD",853,853.01,1,0)
PDO INVOCABLE PERIOD^NJ1,0^^1;1^K:+X'=X!(X>7)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,1,3)
Type a number between 0 and 7, 0 decimal digits.
"^DD",853,853.01,1,21,0)
^^5^5^3130603^
"^DD",853,853.01,1,21,1,0)
This is the PDO invocation period in days. The last MRAR of the patient 
"^DD",853,853.01,1,21,2,0)
can only be invoked within this period. If this field is empty, the 
"^DD",853,853.01,1,21,3,0)
default value is 3 days. This period cannot exceed the time limit set 
"^DD",853,853.01,1,21,4,0)
by the TIME LIMIT AR COMPLETE (#16) and TIME LIMIT MR COMPLETE (#17) 
"^DD",853,853.01,1,21,5,0)
fields.
"^DD",853,853.01,1,"DT")
3130603
"^DD",853,853.01,2,0)
AR ENABLED/DISABLED DT^D^^1;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853,853.01,2,3)
Enter the date/time (time is optional) the Allergy Review was enabled/disabled.
"^DD",853,853.01,2,21,0)
^^2^2^3150108^
"^DD",853,853.01,2,21,1,0)
This is the date/time stamp the Allergy Review module was enabled or 
"^DD",853,853.01,2,21,2,0)
enabled on a Kiosk Group or a Clinic. Note time is optional.
"^DD",853,853.01,2,"DT")
3150108
"^DD",853,853.01,3,0)
MR ENABLED/DISABLED DT^D^^1;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853,853.01,3,3)
Enter the date/time (time is optional) the Medication Review was enabled/disabled.
"^DD",853,853.01,3,21,0)
^^2^2^3150108^
"^DD",853,853.01,3,21,1,0)
This is the date-time stamp the Medication Review module was enabled or 
"^DD",853,853.01,3,21,2,0)
disabled on a Kiosk Group or a Clinic. Note time is optional.
"^DD",853,853.01,3,"DT")
3150108
"^DD",853,853.01,4,0)
AUDIT ENABLED DT^D^^1;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853,853.01,4,3)
Enter the date/time (time is optional) the MRAR was audited.
"^DD",853,853.01,4,21,0)
^.001^2^2^3150107^^
"^DD",853,853.01,4,21,1,0)
This is the date/time stamp the MRAR was audited to determine if AR/MR/AMR
"^DD",853,853.01,4,21,2,0)
were in enabled/disabled state. Note time is optional.
"^DD",853,853.01,4,"DT")
3150107
"^DD",853,853.01,5,0)
AR FREE TEXT ENABLED^S^Y:YES;N:NO;^1;5^Q
"^DD",853,853.01,5,3)
Is Free Text enabled for the AR module?
"^DD",853,853.01,5,21,0)
^^3^3^3130402^
"^DD",853,853.01,5,21,1,0)
This field indicates whether the free-text feature for a patient to
"^DD",853,853.01,5,21,2,0)
comment on an existing allergy is enabled or disabled for the
"^DD",853,853.01,5,21,3,0)
patient-facing Allergy Review module on a Kiosk Group or a Clinic.
"^DD",853,853.01,5,"DT")
3130402
"^DD",853,853.01,6,0)
MR FREE TEXT ENABLED^S^Y:YES;N:NO;^1;6^Q
"^DD",853,853.01,6,3)
Is Free Text enabled for the MR module?
"^DD",853,853.01,6,21,0)
^^3^3^3130402^
"^DD",853,853.01,6,21,1,0)
This field indicates whether the free-text feature for a patient to
"^DD",853,853.01,6,21,2,0)
comment on an existing medication is enabled or disabled for the
"^DD",853,853.01,6,21,3,0)
patient-facing Medication Review module on a Kiosk Group or a Clinic.
"^DD",853,853.01,6,"DT")
3130402
"^DD",853,853.01,7,0)
TIME LIMIT TOO LATE ARRIVAL^NJ4,0^^2;1^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,7,3)
Type a number between 0 and 9999, 0 decimal digits.
"^DD",853,853.01,7,21,0)
^^6^6^3130502^
"^DD",853,853.01,7,21,1,0)
This is the number in minutes that the system will use to determine 
"^DD",853,853.01,7,21,2,0)
whether or not the patient arrived too late for an appointment.
"^DD",853,853.01,7,21,3,0)
e.g., patient arrived at 1:20pm for 1:00pm appointment, if this field is
"^DD",853,853.01,7,21,4,0)
set to 10 minutes (check-in time is stopped at 1:10pm), this patient was
"^DD",853,853.01,7,21,5,0)
too late for appointment. "Too Late" patient won't be checked in and will
"^DD",853,853.01,7,21,6,0)
be directed to clerk.
"^DD",853,853.01,7,"DT")
3130502
"^DD",853,853.01,8,0)
TIME LIMIT TOO EARLY ARRIVAL^NJ4,0^^2;2^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,8,3)
Type a number between 0 and 9999, 0 decimal digits.
"^DD",853,853.01,8,21,0)
^^8^8^3130506^
"^DD",853,853.01,8,21,1,0)
This is the number in minutes that the system will use to determine
"^DD",853,853.01,8,21,2,0)
whether or not the patient arrived too early for an appointment.
"^DD",853,853.01,8,21,3,0)
e.g., patient arrived at 2:30pm for 4:00pm appointment, if this field is 
"^DD",853,853.01,8,21,4,0)
set to 60 minutes (check-in time is opened at 3:00pm), this patient was 
"^DD",853,853.01,8,21,5,0)
too early for appointment. "Too Early" patient won't be checked in and 
"^DD",853,853.01,8,21,6,0)
will be directed to clerk.
"^DD",853,853.01,8,21,7,0)
This field must be set to a number greater than TIME LIMIT NOT EARLY 
"^DD",853,853.01,8,21,8,0)
ENOUGH, otherwise the patient will never be able to be checked in.
"^DD",853,853.01,8,"DT")
3130506
"^DD",853,853.01,9,0)
TIME LIMIT NOT EARLY ENOUGH^NJ4,0^^2;3^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,9,3)
Type a number between 0 and 9999, 0 decimal digits.
"^DD",853,853.01,9,21,0)
^^8^8^3130506^
"^DD",853,853.01,9,21,1,0)
This is the number in minutes that the system will use to determine 
"^DD",853,853.01,9,21,2,0)
whether or not the patient arrived early enough for an appointment.
"^DD",853,853.01,9,21,3,0)
e.g., patient arrived at 12:50pm for 1:00pm appointment, if this field is
"^DD",853,853.01,9,21,4,0)
set to 15 minutes (check-in time is stopped at 12:45pm), this patient
"^DD",853,853.01,9,21,5,0)
didn't arrive early enough. "Not Early Enough" patient won't be checked in
"^DD",853,853.01,9,21,6,0)
and will be directed to clerk.
"^DD",853,853.01,9,21,7,0)
This field must be set to a number less than TIME LIMIT TOO EARLY 
"^DD",853,853.01,9,21,8,0)
ARRIVAL, otherwise the patient will never be able to be checked in.
"^DD",853,853.01,9,"DT")
3130506
"^DD",853,853.01,10,0)
DESIRED AMR SESSION COMPLETED^NJ6,2^^3;1^K:+X'=X!(X>100)!(X<0)!(X?.E1"."3.N) X
"^DD",853,853.01,10,3)
Type a number between 0 and 100, 2 decimal digits.
"^DD",853,853.01,10,21,0)
^^3^3^3130311^
"^DD",853,853.01,10,21,1,0)
This is a percentage value set by an administrator to mark the target
"^DD",853,853.01,10,21,2,0)
lower bound of Allergy Medication Review sessions that should be completed
"^DD",853,853.01,10,21,3,0)
at the clinic on the Kiosk.
"^DD",853,853.01,10,"DT")
3130311
"^DD",853,853.01,11,0)
DESIRED AMR TIME COMPLETED^NJ3,0^^3;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,11,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",853,853.01,11,21,0)
^^3^3^3130424^
"^DD",853,853.01,11,21,1,0)
This is time in seconds set by an administrator to mark the target upper
"^DD",853,853.01,11,21,2,0)
bound of time a patient takes to complete Allergy Medication Review at the
"^DD",853,853.01,11,21,3,0)
clinic on the Kiosk.  
"^DD",853,853.01,11,"DT")
3130424
"^DD",853,853.01,12,0)
DESIRED AR SESSION COMPLETED^NJ6,2^^3;3^K:+X'=X!(X>100)!(X<0)!(X?.E1"."3.N) X
"^DD",853,853.01,12,3)
Type a number between 0 and 100, 2 decimal digits.
"^DD",853,853.01,12,21,0)
^^3^3^3130424^
"^DD",853,853.01,12,21,1,0)
This is a percentage value set by an administrator to mark the target
"^DD",853,853.01,12,21,2,0)
lower bound of Allergy Review sessions that should be completed at the
"^DD",853,853.01,12,21,3,0)
clinic on the Kiosk.  
"^DD",853,853.01,12,"DT")
3130424
"^DD",853,853.01,13,0)
DESIRED AR TIME COMPLETED^NJ3,0^^3;4^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,13,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",853,853.01,13,21,0)
^^3^3^3130424^
"^DD",853,853.01,13,21,1,0)
This is time in seconds set by an administrator to mark the target upper
"^DD",853,853.01,13,21,2,0)
bound of time a patient takes to complete Allergy Review at the clinic on
"^DD",853,853.01,13,21,3,0)
the Kiosk.
"^DD",853,853.01,13,"DT")
3130424
"^DD",853,853.01,14,0)
DESIRED MR SESSION COMPLETED^NJ6,2^^3;5^K:+X'=X!(X>100)!(X<0)!(X?.E1"."3.N) X
"^DD",853,853.01,14,3)
Type a number between 0 and 100, 2 decimal digits.
"^DD",853,853.01,14,21,0)
^^3^3^3130424^
"^DD",853,853.01,14,21,1,0)
This is a percentage value set by an administrator to mark the target
"^DD",853,853.01,14,21,2,0)
lower bound of Medication Review sessions that should be completed at
"^DD",853,853.01,14,21,3,0)
the clinic on the Kiosk.
"^DD",853,853.01,14,"DT")
3130424
"^DD",853,853.01,15,0)
DESIRED MR TIME COMPLETED^NJ3,0^^3;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,15,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",853,853.01,15,21,0)
^^2^2^3130424^
"^DD",853,853.01,15,21,1,0)
This is time in seconds set by an administrator to mark the target upper
"^DD",853,853.01,15,21,2,0)
bound of time to complete Medication Review at the clinic on the Kiosk.
"^DD",853,853.01,15,"DT")
3130424
"^DD",853,853.01,16,0)
TIME LIMIT AR COMPLETE^NJ1,0^^4;1^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1.N) X
"^DD",853,853.01,16,3)
Type a number between 1 and 7, 0 decimal digits.
"^DD",853,853.01,16,21,0)
^^2^2^3130412^
"^DD",853,853.01,16,21,1,0)
This is the time limit in days in which a patient can re-invoke and
"^DD",853,853.01,16,21,2,0)
continue to edit an incomplete Allergy Review.
"^DD",853,853.01,16,"DT")
3130412
"^DD",853,853.01,17,0)
TIME LIMIT MR COMPLETE^NJ1,0^^4;2^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1.N) X
"^DD",853,853.01,17,3)
Type a number between 1 and 7, 0 decimal digits.
"^DD",853,853.01,17,21,0)
^^2^2^3130311^
"^DD",853,853.01,17,21,1,0)
This is the time limit in days in which a patient can re-invoke and 
"^DD",853,853.01,17,21,2,0)
continue to edit an incomplete Medication Review.
"^DD",853,853.01,17,"DT")
3130311
"^DD",853,853.01,18,0)
TIME LIMIT AMR COMPLETE^NJ1,0^^4;3^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1.N) X
"^DD",853,853.01,18,3)
Type a number between 1 and 7, 0 decimal digits.
"^DD",853,853.01,18,21,0)
^^2^2^3130424^
"^DD",853,853.01,18,21,1,0)
This is the time limit in days in which a patient can re-invoke and 
"^DD",853,853.01,18,21,2,0)
continue to edit an incomplete Allergy and Medication Review
"^DD",853,853.01,18,"DT")
3130424
"^DD",853,853.01,19,0)
LOW USE THRESHOLD PDO^NJ6,2^^5;1^K:+X'=X!(X>100)!(X<0)!(X?.E1"."3.N) X
"^DD",853,853.01,19,3)
Type a number between 0 and 100, 2 decimal digits.
"^DD",853,853.01,19,21,0)
^^10^10^3130423^
"^DD",853,853.01,19,21,1,0)
This is the percentage number that the system will use to monitor an 
"^DD",853,853.01,19,21,2,0)
acceptable level of physicians ignoring step to create TIU Note via PDO 
"^DD",853,853.01,19,21,3,0)
Invocation. The acceptable level is determined by measuring this number 
"^DD",853,853.01,19,21,4,0)
against the mean number of PDO not invoked by physicians. PDO in this 
"^DD",853,853.01,19,21,5,0)
context is a patient's module output that can be pulled by VetLink based 
"^DD",853,853.01,19,21,6,0)
on the stored MRAR in VistA. e.g., out of 100 Staff-Interface reviews, 
"^DD",853,853.01,19,21,7,0)
physicians failed to invoke PDO to create TIU Note in 15 reviews thus the 
"^DD",853,853.01,19,21,8,0)
mean number of PDO not invoked is 15% and if the LOW USE THRESHOLD PDO 
"^DD",853,853.01,19,21,9,0)
set to 10%, the system will detect an unacceptable level of reviews 
"^DD",853,853.01,19,21,10,0)
without TIU Note created via PDO Invocation.
"^DD",853,853.01,19,"DT")
3130423
"^DD",853,853.01,20,0)
AMR ENABLED/DISABLED DT^D^^1;7^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",853,853.01,20,3)
Enter the date/time (time is optional) the Allergy and Medication Review was enabled/disabled.
"^DD",853,853.01,20,21,0)
^^2^2^3150108^
"^DD",853,853.01,20,21,1,0)
This is the date/time stamp the Allergy and Medication Review module was 
"^DD",853,853.01,20,21,2,0)
enabled or enabled on a Kiosk Group or Clinic. Note time is optional.
"^DD",853,853.01,20,"DT")
3150108
"^DD",853,853.01,21,0)
AR ENABLED^S^Y:YES;N:NO;^1;8^Q
"^DD",853,853.01,21,3)
Is Allergy Review module enabled?
"^DD",853,853.01,21,21,0)
^^2^2^3150108^
"^DD",853,853.01,21,21,1,0)
This field indicates whether or not the Allergy Review module was enabled 
"^DD",853,853.01,21,21,2,0)
on a Kiosk Group or a Clinic.
"^DD",853,853.01,21,"DT")
3150108
"^DD",853,853.01,22,0)
ALLERGY DISCREP UCL NO AR^NJ2,0^^6;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,22,3)
Type a number between 0 and 99, 0 decimal digits.
"^DD",853,853.01,22,21,0)
^^3^3^3130424^
"^DD",853,853.01,22,21,1,0)
This is the upper control limit set locally for a tolerable mean allergy
"^DD",853,853.01,22,21,2,0)
discrepancies identified by provider when the patient did not identify 
"^DD",853,853.01,22,21,3,0)
discrepancies during Allergy Review.
"^DD",853,853.01,22,"DT")
3130424
"^DD",853,853.01,23,0)
ALLERGY DISCREP UCL POST AR^NJ2,0^^6;2^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,23,3)
Type a number between 0 and 99, 0 decimal digits.
"^DD",853,853.01,23,21,0)
^^2^2^3121221^
"^DD",853,853.01,23,21,1,0)
This is the upper control limit set locally for a tolerable mean of
"^DD",853,853.01,23,21,2,0)
allergy discrepancies identified by provider post Allergy Review.
"^DD",853,853.01,23,"DT")
3130412
"^DD",853,853.01,24,0)
MED DISCREP UCL NO MR^NJ2,0^^6;3^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,24,3)
Type a number between 0 and 99, 0 decimal digits.
"^DD",853,853.01,24,21,0)
^^3^3^3121221^
"^DD",853,853.01,24,21,1,0)
This is the upper control limit set locally for a tolerable mean of
"^DD",853,853.01,24,21,2,0)
medication discrepancies identified by provider when the patient did not
"^DD",853,853.01,24,21,3,0)
identify discrepancies during Medication Review.
"^DD",853,853.01,24,"DT")
3130412
"^DD",853,853.01,25,0)
MED DISCREP UCL POST MR^NJ2,0^^6;4^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",853,853.01,25,3)
Type a number between 0 and 99, 0 decimal digits.
"^DD",853,853.01,25,21,0)
^^2^2^3121221^
"^DD",853,853.01,25,21,1,0)
This is the upper control limit set locally for a tolerable mean of
"^DD",853,853.01,25,21,2,0)
medication discrepancies identified by provider post Medication Review.
"^DD",853,853.01,25,"DT")
3130412
"^DD",853,853.01,26,0)
MR ENABLED^S^Y:YES;N:NO;^1;9^Q
"^DD",853,853.01,26,3)
Is Medication Review module enabled?
"^DD",853,853.01,26,21,0)
^^2^2^3150108^
"^DD",853,853.01,26,21,1,0)
This field indicates whether or not the Medication Review module was 
"^DD",853,853.01,26,21,2,0)
enabled on a Kiosk Group or a Clinic.
"^DD",853,853.01,26,"DT")
3150108
"^DD",853,853.01,27,0)
AMR ENABLED^S^Y:YES;N:NO;^1;10^Q
"^DD",853,853.01,27,3)
Is Allergy and Medication Review module enabled?
"^DD",853,853.01,27,21,0)
^^2^2^3150108^^
"^DD",853,853.01,27,21,1,0)
This field indicates whether or not the Allergy and Medication Review 
"^DD",853,853.01,27,21,2,0)
module was enabled on a Kiosk Group or a Clinic.
"^DD",853,853.01,27,"DT")
3150108
"^DD",853,853.01,50,0)
AMR INCOMPLETE REASON TYPE^853.011S^^AMRREASON;0
"^DD",853,853.01,50,21,0)
^.001^3^3^3150108^^^
"^DD",853,853.01,50,21,1,0)
This multiple stores LOW USE THRESHOLD AMR setting value by AMR 
"^DD",853,853.01,50,21,2,0)
Incomplete Reason Type. Each AMR Incomplete Reason Type potentially has
"^DD",853,853.01,50,21,3,0)
different setting value for LOW USE THRESHOLD AMR.
"^DD",853,853.01,60,0)
AR INCOMPLETE REASON TYPE^853.012S^^ARREASON;0
"^DD",853,853.01,60,21,0)
^.001^3^3^3150113^^^^
"^DD",853,853.01,60,21,1,0)
This multiple stores LOW USE THRESHOLD AR setting value by AR Incomplete
"^DD",853,853.01,60,21,2,0)
Reason Type. Each AR Incomplete Reason Type potentially has different
"^DD",853,853.01,60,21,3,0)
setting value for LOW USE THRESHOLD AR.
"^DD",853,853.01,70,0)
MR INCOMPLETE REASON TYPE^853.013S^^MRREASON;0
"^DD",853,853.01,70,21,0)
^.001^3^3^3150113^^^^
"^DD",853,853.01,70,21,1,0)
This multiple stores LOW USE THRESHOLD MR setting value by MR Incomplete
"^DD",853,853.01,70,21,2,0)
Reason Type. Each MR Incomplete Reason Type potentially has different
"^DD",853,853.01,70,21,3,0)
setting value for LOW USE THRESHOLD MR.
"^DD",853,853.011,0)
AMR INCOMPLETE REASON TYPE SUB-FIELD^^1^2
"^DD",853,853.011,0,"DT")
3150107
"^DD",853,853.011,0,"IX","B",853.011,.01)

"^DD",853,853.011,0,"NM","AMR INCOMPLETE REASON TYPE")

"^DD",853,853.011,0,"UP")
853.01
"^DD",853,853.011,.01,0)
AMR INCOMPLETE REASON TYPE^SX^1:AMR can't start, patient is too early,too late,or not early enough;2:Patient walked away or time limit expired;3:Patient selected to exit AMR;4:Patient selected to bypass AMR;5:Service Failure;^0;1^S DINUM=X Q
"^DD",853,853.011,.01,1,0)
^.1
"^DD",853,853.011,.01,1,1,0)
853.011^B
"^DD",853,853.011,.01,1,1,1)
S ^VPS(853,DA(2),"PARAM",DA(1),"AMRREASON","B",$E(X,1,30),DA)=""
"^DD",853,853.011,.01,1,1,2)
K ^VPS(853,DA(2),"PARAM",DA(1),"AMRREASON","B",$E(X,1,30),DA)
"^DD",853,853.011,.01,1,1,"%D",0)
^^1^1^3150113^
"^DD",853,853.011,.01,1,1,"%D",1,0)
This cross reference is for VPS CONFIG History AMR INCOMPLETE REASON TYPE look up.
"^DD",853,853.011,.01,3)
Choose AMR Incomplete Reason Type.
"^DD",853,853.011,.01,21,0)
^^1^1^3150108^
"^DD",853,853.011,.01,21,1,0)
This field contains AMR incomplete reason type.
"^DD",853,853.011,.01,"DT")
3130510
"^DD",853,853.011,1,0)
LOW USE THRESHOLD AMR^NJ6,2^^0;2^K:+X'=X!(X>100)!(X<0)!(X?.E1"."3N.N) X
"^DD",853,853.011,1,3)
Type a number between 0 and 100, 2 decimal digits.
"^DD",853,853.011,1,21,0)
^.001^8^8^3150107^^
"^DD",853,853.011,1,21,1,0)
This is the percentage number that the system will use to monitor an 
"^DD",853,853.011,1,21,2,0)
acceptable level of AMR non-completion. The acceptable level is 
"^DD",853,853.011,1,21,3,0)
determined by measuring this number against the mean number of AMR 
"^DD",853,853.011,1,21,4,0)
non-completions for an AMR incomplete reason type. 
"^DD",853,853.011,1,21,5,0)
e.g., out of 100 patient AMR non-completions, 15 patients decide to bypass
"^DD",853,853.011,1,21,6,0)
the review thus the mean number for this reason type is 15% and if the Low
"^DD",853,853.011,1,21,7,0)
Use Threshold AMR is set to 10%, the system will detect an unacceptable
"^DD",853,853.011,1,21,8,0)
level of AMR non-completions where too many patients by passing review.
"^DD",853,853.011,1,"DT")
3150107
"^DD",853,853.012,0)
AR INCOMPLETE REASON TYPE SUB-FIELD^^1^2
"^DD",853,853.012,0,"DT")
3150108
"^DD",853,853.012,0,"IX","B",853.012,.01)

"^DD",853,853.012,0,"NM","AR INCOMPLETE REASON TYPE")

"^DD",853,853.012,0,"UP")
853.01
"^DD",853,853.012,.01,0)
AR INCOMPLETE REASON TYPE^SX^1:AR can't start, patient is too early,too late,or not early enough;2:Patient walked away or time limit expired;3:patient selected to exit AR;4:Patient selected to bypass AR;5:Service Failure;^0;1^S DINUM=X Q
"^DD",853,853.012,.01,1,0)
^.1
"^DD",853,853.012,.01,1,1,0)
853.012^B
"^DD",853,853.012,.01,1,1,1)
S ^VPS(853,DA(2),"PARAM",DA(1),"ARREASON","B",$E(X,1,30),DA)=""
"^DD",853,853.012,.01,1,1,2)
K ^VPS(853,DA(2),"PARAM",DA(1),"ARREASON","B",$E(X,1,30),DA)
"^DD",853,853.012,.01,1,1,"%D",0)
^^1^1^3150113^
"^DD",853,853.012,.01,1,1,"%D",1,0)
This cross reference is for VPS CONFIG History AR INCOMPLETE REASON TYPE look up.
"^DD",853,853.012,.01,3)
Choose AR Incomplete Reason Type.
"^DD",853,853.012,.01,21,0)
^.001^16^16^3150113^^^^
"^DD",853,853.012,.01,21,1,0)
This field contains description of reason why AR module couldn't be
"^DD",853,853.012,.01,21,2,0)
completed.
"^DD",853,853.012,.01,21,3,0)
 
"^DD",853,853.012,.01,21,4,0)
The AR Incomplete Reason Type is one of the following:
"^DD",853,853.012,.01,21,5,0)
 
"^DD",853,853.012,.01,21,6,0)
1. The AR module could not be started because patient arrived TOO EARLY,
"^DD",853,853.012,.01,21,7,0)
TOO LATE, or NOT EARLY ENOUGH at the device.
"^DD",853,853.012,.01,21,8,0)
2. Either the patient walked away in the middle of theAllergy Review
"^DD",853,853.012,.01,21,9,0)
or the TIME LIMIT AR COMPLETE time expired.
"^DD",853,853.012,.01,21,10,0)
3. The patient selected to exit the Allergy Review.
"^DD",853,853.012,.01,21,11,0)
4. The patient selected to bypass the Allergy Review.
"^DD",853,853.012,.01,21,12,0)
5. Service failure of VetLink at the site.
"^DD",853,853.012,.01,21,13,0)
 
"^DD",853,853.012,.01,21,14,0)
See TIME LIMIT TOO LATE ARRIVAL, TIME LIMIT TOO EARLY ARRIVAL, and TIME
"^DD",853,853.012,.01,21,15,0)
LIMIT NOT EARLY ENOUGH fields for definition of TOO LATE, TOO EARLY,
"^DD",853,853.012,.01,21,16,0)
and NOT EARLY ENOUGH.
"^DD",853,853.012,.01,"DT")
3130510
"^DD",853,853.012,1,0)
LOW USE THRESHOLD AR^NJ6,2^^0;2^K:+X'=X!(X>100)!(X<0)!(X?.E1"."3N.N) X
"^DD",853,853.012,1,3)
Type a number between 0 and 100, 2 decimal digits.
"^DD",853,853.012,1,21,0)
^.001^9^9^3150113^^^
"^DD",853,853.012,1,21,1,0)
This is the percentage number that the system will use to monitor an 
"^DD",853,853.012,1,21,2,0)
acceptable level of AR non-completion. The acceptable level is determined 
"^DD",853,853.012,1,21,3,0)
by measuring this number against the mean number of AR non-completions for
"^DD",853,853.012,1,21,4,0)
an AR incomplete reason type. 
"^DD",853,853.012,1,21,5,0)
e.g., out of 100 patient AR non-completions, 15 patients decide to bypass 
"^DD",853,853.012,1,21,6,0)
the review thus the mean number for this reason type is 15% and if the 
"^DD",853,853.012,1,21,7,0)
Low Use Threshold AR is set to 10%, the system will detect an 
"^DD",853,853.012,1,21,8,0)
unacceptable level of AR non-completions when too many patients are by- 
"^DD",853,853.012,1,21,9,0)
passing review.
"^DD",853,853.012,1,"DT")
3150108
"^DD",853,853.013,0)
MR INCOMPLETE REASON TYPE SUB-FIELD^^1^2
"^DD",853,853.013,0,"DT")
3150108
"^DD",853,853.013,0,"IX","B",853.013,.01)

"^DD",853,853.013,0,"NM","MR INCOMPLETE REASON TYPE")

"^DD",853,853.013,0,"UP")
853.01
"^DD",853,853.013,.01,0)
MR INCOMPLETE REASON TYPE^SX^1:MR can't start, patient is too early,too late,or not early enough;2:Patient walked away or time limit expired;3:Patient selected to exit MR;4:Patient selected to bypass MR;5:Service Failure;^0;1^S DINUM=X Q
"^DD",853,853.013,.01,1,0)
^.1
"^DD",853,853.013,.01,1,1,0)
853.013^B
"^DD",853,853.013,.01,1,1,1)
S ^VPS(853,DA(2),"PARAM",DA(1),"MRREASON","B",$E(X,1,30),DA)=""
"^DD",853,853.013,.01,1,1,2)
K ^VPS(853,DA(2),"PARAM",DA(1),"MRREASON","B",$E(X,1,30),DA)
"^DD",853,853.013,.01,1,1,"%D",0)
^^1^1^3150113^
"^DD",853,853.013,.01,1,1,"%D",1,0)
This cross reference is for VPS CONFIG History MR INCOMPLETE REASON TYPE look up.
"^DD",853,853.013,.01,3)
Choose MR Incomplete Reason Type.
"^DD",853,853.013,.01,21,0)
^.001^15^15^3150113^^
"^DD",853,853.013,.01,21,1,0)
This field contains description of reason why MR module couldn't be 
"^DD",853,853.013,.01,21,2,0)
completed.
"^DD",853,853.013,.01,21,3,0)
 
"^DD",853,853.013,.01,21,4,0)
The MR Incomplete Reason Type is one of the following:
"^DD",853,853.013,.01,21,5,0)
1. The MR module could not be started because patient arrived TOO EARLY,
"^DD",853,853.013,.01,21,6,0)
TOO LATE, or NOT EARLY ENOUGH at the device.
"^DD",853,853.013,.01,21,7,0)
2. Either the patient walked away in the middle of the Medication Review
"^DD",853,853.013,.01,21,8,0)
or the TIME LIMIT AR COMPLETE time expired.
"^DD",853,853.013,.01,21,9,0)
3. The patient selected to exit the Medication Review.
"^DD",853,853.013,.01,21,10,0)
4. The patient selected to bypass the Medication Review.
"^DD",853,853.013,.01,21,11,0)
5. Service failure of VetLink at the site.
"^DD",853,853.013,.01,21,12,0)
 
"^DD",853,853.013,.01,21,13,0)
See TIME LIMIT TOO LATE ARRIVAL, TIME LIMIT TOO EARLY ARRIVAL, and TIME 
"^DD",853,853.013,.01,21,14,0)
LIMIT NOT EARLY ENOUGH fields for definition of TOO LATE, TOO EARLY, and 
"^DD",853,853.013,.01,21,15,0)
NOT EARLY ENOUGH.
"^DD",853,853.013,.01,"DT")
3130510
"^DD",853,853.013,1,0)
LOW USE THRESHOLD MR^NJ6,2^^0;2^K:+X'=X!(X>100)!(X<0)!(X?.E1"."3N.N) X
"^DD",853,853.013,1,3)
Type a number between 0 and 100, 2 decimal digits.
"^DD",853,853.013,1,21,0)
^.001^8^8^3150113^^^^
"^DD",853,853.013,1,21,1,0)
This is the percentage number that the system will use to monitor an 
"^DD",853,853.013,1,21,2,0)
acceptable level of MR non-completion. The acceptable level is determined 
"^DD",853,853.013,1,21,3,0)
by measuring this number against the mean number of MR non-completions 
"^DD",853,853.013,1,21,4,0)
for an MR incomplete reason type. 
"^DD",853,853.013,1,21,5,0)
e.g., out of 100 patient MR non-completions, 15 patients decide to bypass
"^DD",853,853.013,1,21,6,0)
the review thus the mean number for this reason type is 15% and if the Low
"^DD",853,853.013,1,21,7,0)
Use Threshold MR is set to 10%, the system will detect an unacceptable
"^DD",853,853.013,1,21,8,0)
level of MR non-completions when too many patients are by-passing review.
"^DD",853,853.013,1,"DT")
3150108
"^DD",853.3,853.3,0)
FIELD^^.03^4
"^DD",853.3,853.3,0,"DDA")
N
"^DD",853.3,853.3,0,"DT")
3121221
"^DD",853.3,853.3,0,"IX","B",853.3,.01)

"^DD",853.3,853.3,0,"IX","C",853.3,.03)

"^DD",853.3,853.3,0,"NM","VPS ALLERGY DISCREPANCY INDICATORS")

"^DD",853.3,853.3,0,"PT",853.525,.01)

"^DD",853.3,853.3,0,"PT",853.526,.01)

"^DD",853.3,853.3,0,"PT",853.527,.01)

"^DD",853.3,853.3,0,"VRPK")
VPS
"^DD",853.3,853.3,.001,0)
NUMBER^RNJ4,0^^ ^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.3,853.3,.001,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",853.3,853.3,.001,21,0)
^^1^1^3121218^
"^DD",853.3,853.3,.001,21,1,0)
This is the internal entry number of the indicator entry.
"^DD",853.3,853.3,.001,"DT")
3121221
"^DD",853.3,853.3,.01,0)
INDICATOR NAME^RF^^0;1^K:$L(X)>50!($L(X)<3) X
"^DD",853.3,853.3,.01,1,0)
^.1
"^DD",853.3,853.3,.01,1,1,0)
853.3^B
"^DD",853.3,853.3,.01,1,1,1)
S ^VPS(853.3,"B",$E(X,1,30),DA)=""
"^DD",853.3,853.3,.01,1,1,2)
K ^VPS(853.3,"B",$E(X,1,30),DA)
"^DD",853.3,853.3,.01,1,1,"%D",0)
^^1^1^3150114^
"^DD",853.3,853.3,.01,1,1,"%D",1,0)
This cross reference is for VPS Allergy Discrepany indicator name look up.
"^DD",853.3,853.3,.01,3)
Answer must be 3-50 characters in length.
"^DD",853.3,853.3,.01,21,0)
^^3^3^3121218^
"^DD",853.3,853.3,.01,21,1,0)
This field is the name field of the allergy discrepancy indicator entry.
"^DD",853.3,853.3,.01,21,2,0)
The field value is a variation of allergy changed, allergy confirmed, or
"^DD",853.3,853.3,.01,21,3,0)
allergy discrepancy indicator on the Kiosk.
"^DD",853.3,853.3,.01,"DT")
3121218
"^DD",853.3,853.3,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>200!($L(X)<3) X
"^DD",853.3,853.3,.02,3)
Answer must be 3-200 characters in length.
"^DD",853.3,853.3,.02,21,0)
^^2^2^3121218^
"^DD",853.3,853.3,.02,21,1,0)
This field provides detailed description of the allergy discrepancy
"^DD",853.3,853.3,.02,21,2,0)
indicator entry.
"^DD",853.3,853.3,.02,"DT")
3121218
"^DD",853.3,853.3,.03,0)
TYPE^S^C:CONFIRMED;X:CHANGED;D:DISCREPANCY;^1;1^Q
"^DD",853.3,853.3,.03,1,0)
^.1
"^DD",853.3,853.3,.03,1,1,0)
853.3^C
"^DD",853.3,853.3,.03,1,1,1)
S ^VPS(853.3,"C",$E(X,1,30),DA)=""
"^DD",853.3,853.3,.03,1,1,2)
K ^VPS(853.3,"C",$E(X,1,30),DA)
"^DD",853.3,853.3,.03,1,1,"%D",0)
^^1^1^3150114^
"^DD",853.3,853.3,.03,1,1,"%D",1,0)
This cross reference is for VPS Allergy Discrepany indicator type look up.
"^DD",853.3,853.3,.03,1,1,"DT")
3120830
"^DD",853.3,853.3,.03,3)
Select the type of indicator.
"^DD",853.3,853.3,.03,21,0)
^^1^1^3121218^
"^DD",853.3,853.3,.03,21,1,0)
This field represents the type of indicator.
"^DD",853.3,853.3,.03,"DT")
3130123
"^DD",853.5,853.5,0)
FIELD^^.01^2
"^DD",853.5,853.5,0,"DDA")
N
"^DD",853.5,853.5,0,"DT")
3150407
"^DD",853.5,853.5,0,"IX","B",853.5,.01)

"^DD",853.5,853.5,0,"NM","VPS MRAR PDO")

"^DD",853.5,853.5,0,"VRPK")
VPS
"^DD",853.5,853.5,.01,0)
PATIENT^RP2'X^DPT(^0;1^S DINUM=X Q
"^DD",853.5,853.5,.01,1,0)
^.1
"^DD",853.5,853.5,.01,1,1,0)
853.5^B
"^DD",853.5,853.5,.01,1,1,1)
S ^VPS(853.5,"B",$E(X,1,30),DA)=""
"^DD",853.5,853.5,.01,1,1,2)
K ^VPS(853.5,"B",$E(X,1,30),DA)
"^DD",853.5,853.5,.01,3)
Select the patient.
"^DD",853.5,853.5,.01,21,0)
^^1^1^3130501^
"^DD",853.5,853.5,.01,21,1,0)
This is the patient that the MRAR belongs to.
"^DD",853.5,853.5,.01,23,0)
^.001^2^2^3130501^^^^
"^DD",853.5,853.5,.01,23,1,0)
Since this value is DINUM, this field represents the root IEN for this
"^DD",853.5,853.5,.01,23,2,0)
file as well.
"^DD",853.5,853.5,.01,"DT")
3121227
"^DD",853.5,853.5,20,0)
MRAR INSTANCE^853.51DA^^MRAR;0
"^DD",853.5,853.5,20,21,0)
^.001^1^1^3150504^^^^
"^DD",853.5,853.5,20,21,1,0)
This multiple field contains MRAR transactions sent by Vetlink to VistA. 
"^DD",853.5,853.5,20,23,0)
^.001^2^2^3150504^^^^
"^DD",853.5,853.5,20,23,1,0)
Every MRAR transaction is performed for a patient using Vetlink patient
"^DD",853.5,853.5,20,23,2,0)
or staff facing module. This MRAR will be stored in this level.
"^DD",853.5,853.51,0)
MRAR INSTANCE SUB-FIELD^^33^63
"^DD",853.5,853.51,0,"DT")
3150407
"^DD",853.5,853.51,0,"IX","B",853.51,.01)

"^DD",853.5,853.51,0,"NM","MRAR INSTANCE")

"^DD",853.5,853.51,0,"UP")
853.5
"^DD",853.5,853.51,.01,0)
TRXN DATE/TIME^RDX^^0;1^S %DT="ETX" D ^%DT S X=Y K:X<1 X S DINUM=X Q
"^DD",853.5,853.51,.01,1,0)
^.1
"^DD",853.5,853.51,.01,1,1,0)
853.51^B
"^DD",853.5,853.51,.01,1,1,1)
S ^VPS(853.5,DA(1),"MRAR","B",$E(X,1,30),DA)=""
"^DD",853.5,853.51,.01,1,1,2)
K ^VPS(853.5,DA(1),"MRAR","B",$E(X,1,30),DA)
"^DD",853.5,853.51,.01,3)
Enter the transaction date/time, time is optional.
"^DD",853.5,853.51,.01,21,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,.01,21,1,0)
This is the date/time (time is optional) of the transaction.
"^DD",853.5,853.51,.01,"DT")
3150107
"^DD",853.5,853.51,.02,0)
DEVICE ID^RF^^0;2^K:$L(X)>20!($L(X)<2) X
"^DD",853.5,853.51,.02,3)
Answer must be 2-20 characters in length.
"^DD",853.5,853.51,.02,21,0)
^.001^3^3^3150402^^
"^DD",853.5,853.51,.02,21,1,0)
This field identifies the unique device ID (eg, IP address or serial
"^DD",853.5,853.51,.02,21,2,0)
number) of the kiosk at which the patient performed the review of his/her allergies and
"^DD",853.5,853.51,.02,21,3,0)
medical history.
"^DD",853.5,853.51,.02,"DT")
3150402
"^DD",853.5,853.51,.03,0)
KIOSK GROUP^RF^^0;3^K:$L(X)>20!($L(X)<2) X
"^DD",853.5,853.51,.03,3)
Answer must be 2-20 characters in length.
"^DD",853.5,853.51,.03,21,0)
^.001^1^1^3150407^^
"^DD",853.5,853.51,.03,21,1,0)
This is the name of the kiosk group to which the kiosk belongs.
"^DD",853.5,853.51,.03,"DT")
3150407
"^DD",853.5,853.51,.04,0)
ENCOUNTER CLINIC^P44'^SC(^0;4^Q
"^DD",853.5,853.51,.04,3)
Select the encounter clinic.
"^DD",853.5,853.51,.04,21,0)
^^1^1^3130509^
"^DD",853.5,853.51,.04,21,1,0)
This is the clinic associated with the patient's appointment.
"^DD",853.5,853.51,.04,23,0)
^^1^1^3121227^
"^DD",853.5,853.51,.04,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,.04,"DT")
3130509
"^DD",853.5,853.51,.05,0)
APPT DATE/TIME^D^^0;5^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,.05,3)
Enter the patient's appointment date/time, time is optional.
"^DD",853.5,853.51,.05,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,.05,21,1,0)
This is the patient's appointment date/time (time is optional), taken
"^DD",853.5,853.51,.05,21,2,0)
from the APPOINTMENT DATE/TIME (#.001) field of the APPOINTMENT (#1900)
"^DD",853.5,853.51,.05,21,3,0)
multiple field of the PATIENT (#2) file.
"^DD",853.5,853.51,.05,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,.05,23,1,0)
This field is populated by VPS rpc when the MRAR session completes, times out, or terminates.
"^DD",853.5,853.51,.05,"DT")
3150107
"^DD",853.5,853.51,.06,0)
PROVIDER^P200'^VA(200,^0;6^Q
"^DD",853.5,853.51,.06,3)
Select the provider.
"^DD",853.5,853.51,.06,21,0)
^^1^1^3130523^
"^DD",853.5,853.51,.06,21,1,0)
This is the provider who conducts MRAR using the staff-facing module.
"^DD",853.5,853.51,.06,23,0)
^^2^2^3121227^
"^DD",853.5,853.51,.06,23,1,0)
This field is populated by VPS rpc when the MRAR session completes, times
"^DD",853.5,853.51,.06,23,2,0)
out, or terminates.
"^DD",853.5,853.51,.06,"DT")
3130523
"^DD",853.5,853.51,.12,0)
MRAR SESSION ID^RNJ10,0^^0;11^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",853.5,853.51,.12,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",853.5,853.51,.12,21,0)
^.001^1^1^3150402^^^
"^DD",853.5,853.51,.12,21,1,0)
The unique identifier of the AR or MR session initiated by the patient.
"^DD",853.5,853.51,.12,23,0)
^.001^1^1^3150402^^^
"^DD",853.5,853.51,.12,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,.12,"DT")
3150402
"^DD",853.5,853.51,.13,0)
INTERFACE MODULE^S^P:Patient-Facing Interface module;S:Staff-Facing Interface module;M:MHV;O:Other;^0;12^Q
"^DD",853.5,853.51,.13,3)
Choose Interface module.
"^DD",853.5,853.51,.13,21,0)
^^2^2^3121227^
"^DD",853.5,853.51,.13,21,1,0)
This field identifies the type of module which was used to initiate 
"^DD",853.5,853.51,.13,21,2,0)
MRAR.
"^DD",853.5,853.51,.13,"DT")
3121227
"^DD",853.5,853.51,1,0)
AR INITIATED DT^D^^1;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,1,3)
Enter the date/time (time is optional) AR initiated.
"^DD",853.5,853.51,1,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,1,21,1,0)
This is the date/time (time is optional) stamp that a patient
"^DD",853.5,853.51,1,21,2,0)
initiated Allergy Review.
"^DD",853.5,853.51,1,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,1,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,1,"DT")
3150107
"^DD",853.5,853.51,2,0)
AR COMPLETED DT^D^^1;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,2,3)
Enter date/time (time is optional) AR Completed.
"^DD",853.5,853.51,2,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,2,21,1,0)
This is the date/time (time is optional) stamp the Allergy 
"^DD",853.5,853.51,2,21,2,0)
Review module was completed on a device.
"^DD",853.5,853.51,2,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,2,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,2,"DT")
3150107
"^DD",853.5,853.51,5,0)
AR INCOMPLETE DT^D^^1;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,5,3)
Enter date/time AR is incomplete.
"^DD",853.5,853.51,5,21,0)
^.001^3^3^3150108^^^^
"^DD",853.5,853.51,5,21,1,0)
This is the date/time (time is optional) of AR module is incomplete in 
"^DD",853.5,853.51,5,21,2,0)
the patient-facing module. The AR INCOMPLETE REASON TYPE (#6) field lists
"^DD",853.5,853.51,5,21,3,0)
reasons why the AR module might be incomplete.
"^DD",853.5,853.51,5,23,0)
^.001^1^1^3150108^^^^
"^DD",853.5,853.51,5,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,5,"DT")
3150107
"^DD",853.5,853.51,6,0)
AR INCOMPLETE REASON TYPE^S^1:AR can't start, patient is too early,too late,or not early enough;2:Patient walked away or time limit expired;3:Patient selected to exit AR;4:Patient selected to bypass AR;5:Service Failure;^1;6^Q
"^DD",853.5,853.51,6,3)
Choose AR Incomplete Reason Type.
"^DD",853.5,853.51,6,21,0)
^.001^16^16^3150407^^
"^DD",853.5,853.51,6,21,1,0)
This field contains the reason why AR module couldn't be completed.
"^DD",853.5,853.51,6,21,2,0)
 
"^DD",853.5,853.51,6,21,3,0)
The AR Incomplete Reason type is one of the following:
"^DD",853.5,853.51,6,21,4,0)
1. The AR module could not be started because patient arrived TOO EARLY,
"^DD",853.5,853.51,6,21,5,0)
TOO LATE, or NOT EARLY ENOUGH at the device.
"^DD",853.5,853.51,6,21,6,0)
2. Either the patient walked away in the middle of Allergy Review or the
"^DD",853.5,853.51,6,21,7,0)
TIME LIMIT AR COMPLETE time expired.
"^DD",853.5,853.51,6,21,8,0)
3. The patient selected to exit the Allergy Review.
"^DD",853.5,853.51,6,21,9,0)
4. The patient selected to bypass the Allergy Review.
"^DD",853.5,853.51,6,21,10,0)
5. Service failure of VetLink at the site.
"^DD",853.5,853.51,6,21,11,0)
 
"^DD",853.5,853.51,6,21,12,0)
TOO LATE, TOO EARLY, and NOT EARLY ENOUGH are defined in TIME LIMIT TOO
"^DD",853.5,853.51,6,21,13,0)
LATE ARRIVAL (#7), TIME LIMIT TOO EARLY ARRIVAL (#8), and TIME LIMIT NOT
"^DD",853.5,853.51,6,21,14,0)
EARLY ENOUGH (#9) fields of the PARAM INSTANCE (#853.01) subfile of VPS
"^DD",853.5,853.51,6,21,15,0)
CONFIG HISTORY (#853). TIME LIMIT AR COMPLETE (#16) field is also defined
"^DD",853.5,853.51,6,21,16,0)
in that subfile. 
"^DD",853.5,853.51,6,23,0)
^.001^1^1^3150407^^
"^DD",853.5,853.51,6,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,6,"DT")
3130807
"^DD",853.5,853.51,7,0)
AR SESSION OUTCOME^S^A:ABBREVIATED;F:FULL;^1;7^Q
"^DD",853.5,853.51,7,3)
Choose the AR Session.
"^DD",853.5,853.51,7,21,0)
^^4^4^3130510^
"^DD",853.5,853.51,7,21,1,0)
This field indicates that the AR session was full or abbreviated.
"^DD",853.5,853.51,7,21,2,0)
It's a full session if the patient did review and returned in permitted
"^DD",853.5,853.51,7,21,3,0)
period to re-review. It's abbreviated if the patient was just accepting
"^DD",853.5,853.51,7,21,4,0)
the opportunity to review information and make any changes.
"^DD",853.5,853.51,7,23,0)
^^1^1^3120823^
"^DD",853.5,853.51,7,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,7,"DT")
3130510
"^DD",853.5,853.51,8,0)
ADD ALLERGY INITIATED DT^D^^2;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,8,3)
Enter date/time (time is optional) Add Allergy was initiated.
"^DD",853.5,853.51,8,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,8,21,1,0)
This is the date/time (time is optional) that the patient 
"^DD",853.5,853.51,8,21,2,0)
initiated the additional allergy entry section of Allergy 
"^DD",853.5,853.51,8,21,3,0)
Review.
"^DD",853.5,853.51,8,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,8,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.51,8,"DT")
3150107
"^DD",853.5,853.51,9,0)
ADD ALLERGY COMPLETED DT^D^^2;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,9,3)
Enter date/time (time is optional) Add Allergy was completed in a session.
"^DD",853.5,853.51,9,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,9,21,1,0)
This is the date/time (time is optional) that the patient completed 
"^DD",853.5,853.51,9,21,2,0)
the additional allergy section of AR in a session.
"^DD",853.5,853.51,9,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,9,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call
"^DD",853.5,853.51,9,"DT")
3150107
"^DD",853.5,853.51,10,0)
ALLER CHANGE COMPLETED DT^D^^1;8^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,10,3)
Enter date/time (time is optional) Allergy Change Completed.
"^DD",853.5,853.51,10,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,10,21,1,0)
This is date/time (time is optional) stamp of the Allergy Review 
"^DD",853.5,853.51,10,21,2,0)
module was completed during a PDO invocable period.
"^DD",853.5,853.51,10,"DT")
3150107
"^DD",853.5,853.51,11,0)
ALLER CHANGE INITIATED DT^D^^1;9^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,11,3)
Enter date/time (time is optional) Allergy Change Initiated.
"^DD",853.5,853.51,11,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,11,21,1,0)
This is date/time (time is optional) stamp of the Allergy Review
"^DD",853.5,853.51,11,21,2,0)
module was first activated during a PDO Invocable period.
"^DD",853.5,853.51,11,"DT")
3150107
"^DD",853.5,853.51,12,0)
AR FREE TEXT USED^S^1:AR free text feature is used;^1;12^Q
"^DD",853.5,853.51,12,3)
Is AR free text feature used (enter 1 if yes)?
"^DD",853.5,853.51,12,21,0)
^^1^1^3141217^
"^DD",853.5,853.51,12,21,1,0)
This field indicates whether or not AR free text feature is being used.
"^DD",853.5,853.51,12,"DT")
3141217
"^DD",853.5,853.51,13,0)
AR FREE TEXT COMPLETED DT^D^^1;13^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,13,3)
Enter date/time (time is optional) AR Free Text was completed.
"^DD",853.5,853.51,13,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,13,21,1,0)
This is the date/time (time is optional) that the patient-facing
"^DD",853.5,853.51,13,21,2,0)
Allergy Review free text entry section was completed.
"^DD",853.5,853.51,13,23,0)
^.001^1^1^3150107^^^^
"^DD",853.5,853.51,13,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,13,"DT")
3150107
"^DD",853.5,853.51,14,0)
VET VIEW ADD ALLERGY COMP DT^D^^1;14^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,14,3)
Enter the completed date/time (time is optional) of Vet View in Add Allergy Staff-facing module.
"^DD",853.5,853.51,14,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,14,21,1,0)
This is the date/time (time is optional) of the additional allergy
"^DD",853.5,853.51,14,21,2,0)
interface in the staff-facing's Veteran view tab during a PDO 
"^DD",853.5,853.51,14,21,3,0)
invocable period was completed.
"^DD",853.5,853.51,14,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,14,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,14,"DT")
3150107
"^DD",853.5,853.51,15,0)
VET VIEW ADD ALLER INIT DT^D^^1;15^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,15,3)
Enter the date/time (time is optional) of Add Allergy's vet view was first activated.
"^DD",853.5,853.51,15,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,15,21,1,0)
This is the date/time (time is optional) of the additional allergy 
"^DD",853.5,853.51,15,21,2,0)
interface was first activated in the staff-facing's Veteran view tab
"^DD",853.5,853.51,15,21,3,0)
during a PDO invocable period.
"^DD",853.5,853.51,15,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,15,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,15,"DT")
3150107
"^DD",853.5,853.51,16,0)
VET VIEW CHANGE ALLER COMP DT^D^^1;16^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,16,3)
Enter the date/time (time is optional) that review and change interface in Staff-facing module was completed. 
"^DD",853.5,853.51,16,21,0)
^^3^3^3150107^
"^DD",853.5,853.51,16,21,1,0)
This is the date/time (time is optional) of the review-and-change 
"^DD",853.5,853.51,16,21,2,0)
allergy interface in the staff-facing's Veteran view tab was 
"^DD",853.5,853.51,16,21,3,0)
completed during a PDO invocable period.
"^DD",853.5,853.51,16,23,0)
^.001^1^1^3150107^^^
"^DD",853.5,853.51,16,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,16,"DT")
3150107
"^DD",853.5,853.51,17,0)
VET VIEW CHANGE ALLER INIT DT^D^^1;17^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,17,3)
Enter date/time (time is optional) of the review-change interface in the staff-facing module was first activated.
"^DD",853.5,853.51,17,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,17,21,1,0)
This is the date/time (time is optional) of the review-and-change 
"^DD",853.5,853.51,17,21,2,0)
allergy interface was first activated in the staff-facing's Veteran
"^DD",853.5,853.51,17,21,3,0)
view tab during a PDO invocable period.
"^DD",853.5,853.51,17,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,17,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,17,"DT")
3150107
"^DD",853.5,853.51,18,0)
MR CHANGE REASON INITIATED DT^D^^5;14^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,18,3)
Enter Date/Time (time is optional) the patient enters "How are you taking tis med?" during MR.
"^DD",853.5,853.51,18,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,18,21,1,0)
This field contains the date/time (time is optional) the patient 
"^DD",853.5,853.51,18,21,2,0)
first enters "How are you taking this medication?" during MR review.
"^DD",853.5,853.51,18,"DT")
3150107
"^DD",853.5,853.51,19,0)
OTH ALLERGY UNK PATIENT^S^1:PATIENT DOES NOT KNOW OTHER ALLERGIES;^2;1^Q
"^DD",853.5,853.51,19,3)
Enter 1 if patient does not know of other allergies.
"^DD",853.5,853.51,19,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,19,21,1,0)
Allergy Review structured response from patient at kiosk (e.g., check box
"^DD",853.5,853.51,19,21,2,0)
selected): "I don't know what my other allergies are".
"^DD",853.5,853.51,19,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,19,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.51,19,"DT")
3130603
"^DD",853.5,853.51,20,0)
NO KNOWN DRUG ALLERGIES^S^1:NO KNOWN DRUG ALLERGIES;^2;2^Q
"^DD",853.5,853.51,20,3)
Enter 1 if patient has no known drug allergies.
"^DD",853.5,853.51,20,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,20,21,1,0)
Allergy Review structured response from patient at kiosk (e.g.,
"^DD",853.5,853.51,20,21,2,0)
Confirmation dialog): "Do you have any allergies or reactions?".
"^DD",853.5,853.51,20,"DT")
3130604
"^DD",853.5,853.51,21,0)
MRAR CONDUCTED WITH^853.5121S^^MRARWITH;0
"^DD",853.5,853.51,21,21,0)
^^3^3^3130510^
"^DD",853.5,853.51,21,21,1,0)
This multiple contains individuals (patient, Spouse, Other Family 
"^DD",853.5,853.51,21,21,2,0)
member, Caregiver, Friend, Outside Medication List, or Other) whom the
"^DD",853.5,853.51,21,21,3,0)
provider conducted the MRAR with.
"^DD",853.5,853.51,22,0)
MR MULTIPLE SESSIONS^S^1:MR COMPLETED OVER SEVERAL SESSIONS;^5;3^Q
"^DD",853.5,853.51,22,3)
Is MR completed over several sessions (1 = YES)?
"^DD",853.5,853.51,22,21,0)
^^2^2^3141218^
"^DD",853.5,853.51,22,21,1,0)
This field indicates that the MR was completed over several sessions by 
"^DD",853.5,853.51,22,21,2,0)
the patient within the time limit.
"^DD",853.5,853.51,22,"DT")
3141218
"^DD",853.5,853.51,23,0)
MR FREE TEXT USED^S^1:MR FREE TEXT FEATURE USED;^5;15^Q
"^DD",853.5,853.51,23,3)
Is MR Free Text feature used (1 = YES)?
"^DD",853.5,853.51,23,21,0)
^^2^2^3141218^
"^DD",853.5,853.51,23,21,1,0)
This field indicates that the MR Free Text feature is used in Medication 
"^DD",853.5,853.51,23,21,2,0)
Review.
"^DD",853.5,853.51,23,"DT")
3141218
"^DD",853.5,853.51,24,0)
VET VIEW CHG DOD MED COMP DT^D^^6;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,24,3)
Enter the date/time (time is optional) that the DOD medication was last exited.
"^DD",853.5,853.51,24,21,0)
^.001^4^4^3150107^^
"^DD",853.5,853.51,24,21,1,0)
This is the date/time (time is optional) of the review/change
"^DD",853.5,853.51,24,21,2,0)
medication entry screen for DOD medication was last exited in the
"^DD",853.5,853.51,24,21,3,0)
Veteran view tab of the staff-facing module  during the PDO
"^DD",853.5,853.51,24,21,4,0)
invocable period.
"^DD",853.5,853.51,24,"DT")
3150107
"^DD",853.5,853.51,25,0)
VET VIEW CHG DOD MED INIT DT^D^^6;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,25,3)
Enter the date/time (time is optional) when DOD medication review was first entered.
"^DD",853.5,853.51,25,21,0)
3^.001^3^3^3150107^
"^DD",853.5,853.51,25,21,1,0)
This is the date/time (time is optional) of when the review-change DOD 
"^DD",853.5,853.51,25,21,2,0)
medication entry screen is first opened in the Veteran view tab of the 
"^DD",853.5,853.51,25,21,3,0)
staff-facing module during the PDO invocable period.
"^DD",853.5,853.51,25,"DT")
3150107
"^DD",853.5,853.51,26,0)
VET VIEW CHG NONVA MED COMP DT^D^^6;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,26,3)
Enter the date/time (time is optional) that the NON-VA medication was last exited.
"^DD",853.5,853.51,26,21,0)
^.001^4^4^3150107^^
"^DD",853.5,853.51,26,21,1,0)
This is the date/time (time is optional) of the review/change 
"^DD",853.5,853.51,26,21,2,0)
medication entry screen for NON-VA medication was last exited 
"^DD",853.5,853.51,26,21,3,0)
in the Veteran view tab of the staff-facing module during the 
"^DD",853.5,853.51,26,21,4,0)
PDO invocable period.
"^DD",853.5,853.51,26,"DT")
3150107
"^DD",853.5,853.51,27,0)
VET VIEW CHG NONVA MED INIT DT^D^^6;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,27,3)
Enter the date/time (time is optional) when NON-VA medication review was first entered.
"^DD",853.5,853.51,27,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,27,21,1,0)
This is the date/time (time is optional) of when the review-change NON-VA
"^DD",853.5,853.51,27,21,2,0)
medication entry screen is first opened in the Veteran view tab of the 
"^DD",853.5,853.51,27,21,3,0)
staff-facing module during the PDO invocable period.
"^DD",853.5,853.51,27,"DT")
3150107
"^DD",853.5,853.51,28,0)
VET VIEW CHG LOCAL MED COMP DT^D^^6;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,28,3)
Enter the date/time (time is optional) when local-VA medication review was last exited.
"^DD",853.5,853.51,28,21,0)
^.001^3^3^3150107^^^^
"^DD",853.5,853.51,28,21,1,0)
This field is the date/time (time is optional) of when the review-change
"^DD",853.5,853.51,28,21,2,0)
for a local-VA medication was last existed in the Veteran view tab of 
"^DD",853.5,853.51,28,21,3,0)
the staff-facing module during the PDO invocable period.
"^DD",853.5,853.51,28,"DT")
3150107
"^DD",853.5,853.51,29,0)
VET VIEW CHG LOCAL MED INIT DT^D^^6;6^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,29,3)
Enter the date/time (time is optional) when Local medication review was first entered.
"^DD",853.5,853.51,29,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,29,21,1,0)
This is the date/time (time is optional) when the review-change local-VA
"^DD",853.5,853.51,29,21,2,0)
medication entry screen is first opened in the Veteran view tab of the 
"^DD",853.5,853.51,29,21,3,0)
staff-facing module during the PDO invocable period.
"^DD",853.5,853.51,29,"DT")
3150107
"^DD",853.5,853.51,30,0)
ALLERGIES^853.52A^^ALLERGY;0
"^DD",853.5,853.51,30,21,0)
^.001^1^1^3150504^^^^
"^DD",853.5,853.51,30,21,1,0)
Each transaction sent by Vetlink may contain multiple allergies. 
"^DD",853.5,853.51,31,0)
VET VIEW CHG REMOT MED COMP DT^D^^6;7^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,31,3)
Enter the date/time (time is optional) when remote medication was last exited.
"^DD",853.5,853.51,31,"DT")
3150107
"^DD",853.5,853.51,32,0)
VET VIEW CHG REMOT MED INIT DT^D^^6;8^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",853.5,853.51,32,3)
Enter the date/time when "How are you taking this med" answered in remote VistA.
"^DD",853.5,853.51,32,21,0)
^^5^5^3141218^
"^DD",853.5,853.51,32,21,1,0)
This field is the date/time of when the review-change medication 
"^DD",853.5,853.51,32,21,2,0)
entry screen is first opened, a selection from "How are you taking this 
"^DD",853.5,853.51,32,21,3,0)
medication" made regarding a medication from the patient's remote VistA 
"^DD",853.5,853.51,32,21,4,0)
and the "Next" button selected in the Veteran view tab of the 
"^DD",853.5,853.51,32,21,5,0)
staff-facing module during the PDO invocable period.
"^DD",853.5,853.51,32,"DT")
3141218
"^DD",853.5,853.51,33,0)
WEB ID^F^^7;1^K:$L(X)>240!($L(X)<1) X
"^DD",853.5,853.51,33,3)
Enter the unique identifier of the Web connection to the MRAR. The identifier must be between 2 and 240 characters.
"^DD",853.5,853.51,33,21,0)
^.001^2^2^3150107^^^
"^DD",853.5,853.51,33,21,1,0)
This field contains the unique identifier of the Web connection to the 
"^DD",853.5,853.51,33,21,2,0)
MRAR.
"^DD",853.5,853.51,33,"DT")
3141218
"^DD",853.5,853.51,40,0)
ADDITIONAL ALLERGIES^853.53A^^ALLERGYADD;0
"^DD",853.5,853.51,40,21,0)
^.001^2^2^3150504^^^^
"^DD",853.5,853.51,40,21,1,0)
Each transaction sent by Vetlink may contain multiple additional
"^DD",853.5,853.51,40,21,2,0)
allergies.
"^DD",853.5,853.51,50,0)
MEDICATIONS^853.54A^^MEDS;0
"^DD",853.5,853.51,50,21,0)
^.001^1^1^3150504^^^^
"^DD",853.5,853.51,50,21,1,0)
Each transaction sent by Vetlink may contain multiple medications.
"^DD",853.5,853.51,60,0)
ADDITIONAL MEDICATIONS^853.55^^MEDSADD;0
"^DD",853.5,853.51,60,21,0)
^^2^2^3121228^
"^DD",853.5,853.51,60,21,1,0)
Each transaction sent by Vetlink may contain multiple additional 
"^DD",853.5,853.51,60,21,2,0)
medications.
"^DD",853.5,853.51,70,0)
PDO FIRST INVOKED DT^D^^4;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,70,3)
Enter the date/time (time is optional) that the PDO was first invoked.
"^DD",853.5,853.51,70,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,70,21,1,0)
This is the date/time (time is optional) that the PDO was first 
"^DD",853.5,853.51,70,21,2,0)
invoked in the PDO invocation period.
"^DD",853.5,853.51,70,23,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,70,23,1,0)
This field is populated by the VistA VPS application when the PDO is 
"^DD",853.5,853.51,70,23,2,0)
first invoked.
"^DD",853.5,853.51,70,"DT")
3150107
"^DD",853.5,853.51,72,0)
PDO INVOCATION ERROR^S^E:PDO INVOCATION PERIOD EXPIRED;^4;3^Q
"^DD",853.5,853.51,72,3)
Enter 'E' to indicate that PDO is no longer retrievable. 
"^DD",853.5,853.51,72,21,0)
^^2^2^3121228^
"^DD",853.5,853.51,72,21,1,0)
When set to "E", this field indicates that a provider attempted to invoke
"^DD",853.5,853.51,72,21,2,0)
the PDO but could not because the PDO invocation period expired.
"^DD",853.5,853.51,72,"DT")
3121228
"^DD",853.5,853.51,73,0)
PDO NEXT INVOKED DT^D^^4;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,73,3)
Enter the next PDO Invoked Date/Time (excluding the first invoked, time is optional).
"^DD",853.5,853.51,73,21,0)
^.001^4^4^3150107^^
"^DD",853.5,853.51,73,21,1,0)
This field contains the subsequent date/time (time is optional) that 
"^DD",853.5,853.51,73,21,2,0)
the PDO was invoked after the first invoked in the PDO invocation 
"^DD",853.5,853.51,73,21,3,0)
period. The first invoked date/time is stored in PDO FIRST INVOKED 
"^DD",853.5,853.51,73,21,4,0)
(field #70).
"^DD",853.5,853.51,73,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,73,23,1,0)
VistA VPS application will populate this field when PDO is invoked.
"^DD",853.5,853.51,73,"DT")
3150107
"^DD",853.5,853.51,74,0)
STAFF MODULE COMPLETED DT^D^^4;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,74,3)
Enter the date/time (time is optional) that the Staff Module was completed.
"^DD",853.5,853.51,74,21,0)
^.001^7^7^3150107^^^
"^DD",853.5,853.51,74,21,1,0)
This is the date/time (time is optional) that the staff module 
"^DD",853.5,853.51,74,21,2,0)
was completed. The staff module is considered completed after the 
"^DD",853.5,853.51,74,21,3,0)
provider performed the most recent of either of these events to 
"^DD",853.5,853.51,74,21,4,0)
occur within PDO invocable period: when the staff module is signed 
"^DD",853.5,853.51,74,21,5,0)
or TIU Note is signed. Note: This means it is possible for the 
"^DD",853.5,853.51,74,21,6,0)
staff-facing module to be completed multiple times within a PDO 
"^DD",853.5,853.51,74,21,7,0)
invocable period, where each completion is by a different provider.
"^DD",853.5,853.51,74,23,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,74,23,1,0)
[source] StaffModuleCompleted - Vetlink Kiosk database. Vetlink Kiosk 
"^DD",853.5,853.51,74,23,2,0)
sends data to Vista via an RPC Broker call.
"^DD",853.5,853.51,74,"DT")
3150107
"^DD",853.5,853.51,76,0)
STAFF MODULE SIGNED DT^D^^4;7^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,76,3)
Enter the date/time (time is optional) that the Staff Module was signed.
"^DD",853.5,853.51,76,21,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,76,21,1,0)
This is the date/time (time is optional) that Staff Module was signed.
"^DD",853.5,853.51,76,23,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,76,23,1,0)
[source] StaffModuleSigned - Vetlink Kiosk database. Vetlink Kiosk sends
"^DD",853.5,853.51,76,23,2,0)
data to VistA via RPC Broker call.
"^DD",853.5,853.51,76,"DT")
3150107
"^DD",853.5,853.51,77,0)
MR INITIATED DT^D^^5;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,77,3)
Enter the date/time (time is optional) that the patient initiated MR.
"^DD",853.5,853.51,77,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,77,21,1,0)
This is the date/time (time is optional) that the patient 
"^DD",853.5,853.51,77,21,2,0)
initiated Medication Review.
"^DD",853.5,853.51,77,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,77,23,1,0)
Vetlink Kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.51,77,"DT")
3150107
"^DD",853.5,853.51,78,0)
MR COMPLETED DT^D^^5;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,78,3)
Enter the date/time (time is optional) MR was completed in patient-facing module.
"^DD",853.5,853.51,78,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,78,21,1,0)
This is the date/time (time is optional) that the patient-facing
"^DD",853.5,853.51,78,21,2,0)
Medication Review module was completed.
"^DD",853.5,853.51,78,"DT")
3150107
"^DD",853.5,853.51,80,0)
MR CHANGE MED INITIATED DT^D^^5;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,80,3)
Enter the date/time (time is optional) that the patient start entering the medication interface of MR.
"^DD",853.5,853.51,80,21,0)
^.001^7^7^3150107^^
"^DD",853.5,853.51,80,21,1,0)
This is the date/time (time is optional) of when the patient 
"^DD",853.5,853.51,80,21,2,0)
started entering the review/change medication interface. If 
"^DD",853.5,853.51,80,21,3,0)
the patient fails to start the interface, this field will be empty.
"^DD",853.5,853.51,80,21,4,0)
 
"^DD",853.5,853.51,80,21,5,0)
NOTE: The user has only a limited amount of time to complete the process,
"^DD",853.5,853.51,80,21,6,0)
as governed by the TIME LIMIT MR COMPLETE (#17) field of the PARAM
"^DD",853.5,853.51,80,21,7,0)
INSTANCE (#853.01) subfile of the VPS CONFIG HISTORY (#853) file.
"^DD",853.5,853.51,80,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,80,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,80,"DT")
3150107
"^DD",853.5,853.51,81,0)
MR CHANGE MED COMPLETED DT^D^^5;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,81,3)
Enter the date/time (time is optional) that the last medication interface of MR was completed. 
"^DD",853.5,853.51,81,21,0)
^.001^7^7^3150107^^
"^DD",853.5,853.51,81,21,1,0)
This is the date/time (time is optional) of when the patient completed
"^DD",853.5,853.51,81,21,2,0)
the review/change of the last medication interface. If patient fails to
"^DD",853.5,853.51,81,21,3,0)
complete the interface, this field will be empty.
"^DD",853.5,853.51,81,21,4,0)
 
"^DD",853.5,853.51,81,21,5,0)
NOTE: The user has only a limited amount of time to complete the process,
"^DD",853.5,853.51,81,21,6,0)
as governed by the TIME LIMIT MR COMPLETE (#17) field of the PARAM
"^DD",853.5,853.51,81,21,7,0)
INSTANCE (#853.01) subfile of the VPS CONFIG HISTORY (#853) file.
"^DD",853.5,853.51,81,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,81,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,81,"DT")
3150107
"^DD",853.5,853.51,82,0)
MR CHANGE REASON COMPLETED DT^D^^5;6^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,82,3)
Enter the date/time (time is optional) that the patient completes either the "How are you taking this medication" or the associated "Comment" screen.
"^DD",853.5,853.51,82,21,0)
^.001^8^8^3150107^^
"^DD",853.5,853.51,82,21,1,0)
This is the date/time (time is optional) of when the patient completed 
"^DD",853.5,853.51,82,21,2,0)
either the "How are you taking this medication?" or the associated 
"^DD",853.5,853.51,82,21,3,0)
"Comment" interface. If the patient fails to complete the interface, 
"^DD",853.5,853.51,82,21,4,0)
this field will be empty.
"^DD",853.5,853.51,82,21,5,0)
 
"^DD",853.5,853.51,82,21,6,0)
NOTE: The user has only a limited amount of time to complete the process,
"^DD",853.5,853.51,82,21,7,0)
as governed by the TIME LIMIT MR COMPLETE (#17) field of the PARAM
"^DD",853.5,853.51,82,21,8,0)
INSTANCE (#853.01) subfile of the VPS CONFIG HISTORY (#853) file.
"^DD",853.5,853.51,82,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,82,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,82,"DT")
3150107
"^DD",853.5,853.51,83,0)
MR INCOMPLETE REASON TYPE^S^1:MR can't start, patient is too early,too late,or not early enough;2:Patient walked away or time limit expired;3:Patient selected to exit MR;4:Patient selected to bypass MR;5:Service Failure;^5;7^Q
"^DD",853.5,853.51,83,3)
Choose MR Incomplete Reason Type.
"^DD",853.5,853.51,83,21,0)
^^16^16^3130807^
"^DD",853.5,853.51,83,21,1,0)
This field contains the reason why MR module couldn't be completed.
"^DD",853.5,853.51,83,21,2,0)
 
"^DD",853.5,853.51,83,21,3,0)
The MR Incomplete Reason type is one of the following:
"^DD",853.5,853.51,83,21,4,0)
1. The MR module could not be started because patient arrived TOO EARLY,
"^DD",853.5,853.51,83,21,5,0)
TOO LATE, or NOT EARLY ENOUGH at the device.
"^DD",853.5,853.51,83,21,6,0)
2. Either the patient walked away in the middle of Medication Review
"^DD",853.5,853.51,83,21,7,0)
or the TIME LIMIT MR COMPLETE time expired.
"^DD",853.5,853.51,83,21,8,0)
3. The patient selected to exit the Medication Review.
"^DD",853.5,853.51,83,21,9,0)
4. The patient selected to bypass the Medication Review.
"^DD",853.5,853.51,83,21,10,0)
5. Service failure of VetLink at the site.
"^DD",853.5,853.51,83,21,11,0)
 
"^DD",853.5,853.51,83,21,12,0)
TOO LATE, TOO EARLY, and NOT EARLY ENOUGH are defined in TIME LIMIT TOO
"^DD",853.5,853.51,83,21,13,0)
LATE ARRIVAL (#7), TIME LIMIT TOO EARLY ARRIVAL (#8), and TIME LIMIT NOT
"^DD",853.5,853.51,83,21,14,0)
EARLY ENOUGH (#9) fields of the PARAM INSTANCE (#853.01) subfile of VPS
"^DD",853.5,853.51,83,21,15,0)
CONFIG HISTORY (#853). TIME LIMIT MR COMPLETE (#17) field is also defined
"^DD",853.5,853.51,83,21,16,0)
in that subfile.
"^DD",853.5,853.51,83,23,0)
^^1^1^3121030^
"^DD",853.5,853.51,83,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,83,"DT")
3130807
"^DD",853.5,853.51,84,0)
MR FREE TEXT SECTION DONE DT^D^^5;8^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,84,3)
Enter the date/time (time is optional) free text section is completed in MR.
"^DD",853.5,853.51,84,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.51,84,21,1,0)
This is the date/time (time is optional) of when the patient-facing
"^DD",853.5,853.51,84,21,2,0)
Medication Review free text entry section was completed.
"^DD",853.5,853.51,84,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,84,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,84,"DT")
3150107
"^DD",853.5,853.51,85,0)
MR SESSION OUTCOME^S^F:FULL;A:ABBREVIATED;^5;9^Q
"^DD",853.5,853.51,85,3)
Choose the MR Session.
"^DD",853.5,853.51,85,21,0)
^^4^4^3130510^
"^DD",853.5,853.51,85,21,1,0)
This field indicates that the MR session was full or abbreviated.
"^DD",853.5,853.51,85,21,2,0)
It's a full session if the patient did review and returned in permitted
"^DD",853.5,853.51,85,21,3,0)
period to re-review. It's abbreviated if the patient was just accepting
"^DD",853.5,853.51,85,21,4,0)
the opportunity to review information and make any changes.
"^DD",853.5,853.51,85,23,0)
^^1^1^3121030^
"^DD",853.5,853.51,85,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,85,"DT")
3130510
"^DD",853.5,853.51,86,0)
MR ADD MED INITIATED DT^D^^5;10^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,86,3)
Enter the date/time (time is optional) that the patient starts entering the add med interface of MR.
"^DD",853.5,853.51,86,21,0)
^.001^7^7^3150107^^
"^DD",853.5,853.51,86,21,1,0)
This is the date/time (time is optional) of when the patient started 
"^DD",853.5,853.51,86,21,2,0)
entering the additional medication interface. If the patient fails to
"^DD",853.5,853.51,86,21,3,0)
start the interface, this field will be empty.
"^DD",853.5,853.51,86,21,4,0)
 
"^DD",853.5,853.51,86,21,5,0)
NOTE: The user has only a limited amount of time to complete the process,
"^DD",853.5,853.51,86,21,6,0)
as governed by the TIME LIMIT MR COMPLETE (#17) field of the PARAM
"^DD",853.5,853.51,86,21,7,0)
INSTANCE (#853.01) subfile of the VPS CONFIG HISTORY (#853) file.
"^DD",853.5,853.51,86,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,86,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,86,"DT")
3150107
"^DD",853.5,853.51,87,0)
MR ADD MED COMPLETED DT^D^^5;11^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,87,3)
Enter the date/time (time is optional) that the patient completes add med of MR.
"^DD",853.5,853.51,87,21,0)
^.001^7^7^3150107^^
"^DD",853.5,853.51,87,21,1,0)
This is the date/time (time is optional) of when the patient completed
"^DD",853.5,853.51,87,21,2,0)
the entry of the last additional medication interface. If the patient 
"^DD",853.5,853.51,87,21,3,0)
fails to complete the interface, this field will be empty.
"^DD",853.5,853.51,87,21,4,0)
 
"^DD",853.5,853.51,87,21,5,0)
NOTE: The user has only a limited amount of time to complete the process,
"^DD",853.5,853.51,87,21,6,0)
as governed by the TIME LIMIT MR COMPLETE (#17) field of the PARAM
"^DD",853.5,853.51,87,21,7,0)
INSTANCE (#853.01) subfile of the VPS CONFIG HISTORY (#853) file.
"^DD",853.5,853.51,87,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,87,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,87,"DT")
3150107
"^DD",853.5,853.51,88,0)
VET VIEW ADD MED INITIATED DT^D^^5;12^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,88,3)
Enter the date/time (time is optional) that the add med screen was first opened in the vet-view of staff-facing module.
"^DD",853.5,853.51,88,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,88,21,1,0)
This is the date/time (time is optional) of when the additional 
"^DD",853.5,853.51,88,21,2,0)
medication entry screen is first opened in the Veteran view tab of 
"^DD",853.5,853.51,88,21,3,0)
the staff-facing module during the PDO invocable period.
"^DD",853.5,853.51,88,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,88,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,88,"DT")
3150107
"^DD",853.5,853.51,89,0)
VET VIEW ADD MED COMPLETED DT^D^^5;13^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,89,3)
Enter the date/time (time is optional) that the staff exited the vet-view and the staff module was completed.
"^DD",853.5,853.51,89,21,0)
^.001^4^4^3150107^^
"^DD",853.5,853.51,89,21,1,0)
This is the date/time (time is optional) of when the staff exited the 
"^DD",853.5,853.51,89,21,2,0)
additional medication entry screen in the Veteran view tab of the 
"^DD",853.5,853.51,89,21,3,0)
staff-facing module during the PDO invocable period, in which the 
"^DD",853.5,853.51,89,21,4,0)
session's staff module was completed.
"^DD",853.5,853.51,89,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,89,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,89,"DT")
3150107
"^DD",853.5,853.51,92,0)
VET VIEW CHG ALL MED INIT DT^D^^5;16^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,92,3)
Enter the date/time (time is optional) that the review/change medication entry screen is first opened.
"^DD",853.5,853.51,92,21,0)
^.001^5^5^3150107^^
"^DD",853.5,853.51,92,21,1,0)
This is the date/time (time is optional) of when the review-change 
"^DD",853.5,853.51,92,21,2,0)
medication entry screen is first opened, a selection from "How are you
"^DD",853.5,853.51,92,21,3,0)
taking this medication?" is made regarding any medication, and the 
"^DD",853.5,853.51,92,21,4,0)
"Next" button is selected in the Veteran view tab of the staff-facing 
"^DD",853.5,853.51,92,21,5,0)
module during the PDO invocable period.
"^DD",853.5,853.51,92,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,92,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,92,"DT")
3150107
"^DD",853.5,853.51,93,0)
VET VIEW CHG ALL MED COMP DT^D^^5;17^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,93,3)
Enter the date/time (time is optional) that the review/change medication entry screen is last exited in the vet-view of staff-facing module.
"^DD",853.5,853.51,93,21,0)
^.001^5^5^3150107^^
"^DD",853.5,853.51,93,21,1,0)
This is the date/time (time is optional) of when the review-change 
"^DD",853.5,853.51,93,21,2,0)
medication entry screen is last exited after a selection for any medication
"^DD",853.5,853.51,93,21,3,0)
made from "How are you taking this medication?, and the "Next" button is 
"^DD",853.5,853.51,93,21,4,0)
selected in the Veteran view tab of the staff-facing module during the PDO 
"^DD",853.5,853.51,93,21,5,0)
invocable period, in which the session's staff module was completed.
"^DD",853.5,853.51,93,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,93,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,93,"DT")
3150107
"^DD",853.5,853.51,95,0)
MR INCOMPLETE DT^D^^5;19^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.51,95,3)
Enter the date/time (time is optional) of MR is incomplete.
"^DD",853.5,853.51,95,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.51,95,21,1,0)
This is the date/time (time is optional) of MR module is incomplete in 
"^DD",853.5,853.51,95,21,2,0)
the patient-facing module. MR INCOMPLETE REASON TYPE (#83) field lists 
"^DD",853.5,853.51,95,21,3,0)
the reason why the MR module might be incomplete.
"^DD",853.5,853.51,95,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.51,95,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.51,95,"DT")
3150107
"^DD",853.5,853.51,105,0)
TIU NOTE^P8925'^TIU(8925,^4;8^Q
"^DD",853.5,853.51,105,3)
Select the TIU document.
"^DD",853.5,853.51,105,21,0)
^^2^2^3130509^
"^DD",853.5,853.51,105,21,1,0)
This is the TIU note created by the provider after reviewing the allergy 
"^DD",853.5,853.51,105,21,2,0)
and medication for the patient.
"^DD",853.5,853.51,105,23,0)
^^3^3^3121220^
"^DD",853.5,853.51,105,23,1,0)
One of the events in Vetlink is to create a TIU Note. Vetlink will store 
"^DD",853.5,853.51,105,23,2,0)
the return value of 'TIU CREATE RECORD' RPC in this field by invoking 
"^DD",853.5,853.51,105,23,3,0)
'VPS UPDATE LAST MRAR TIU IEN' RPC.
"^DD",853.5,853.51,105,"DT")
3130509
"^DD",853.5,853.5121,0)
MRAR CONDUCTED WITH SUB-FIELD^^.01^1
"^DD",853.5,853.5121,0,"DT")
3130510
"^DD",853.5,853.5121,0,"IX","B",853.5121,.01)

"^DD",853.5,853.5121,0,"NM","MRAR CONDUCTED WITH")

"^DD",853.5,853.5121,0,"UP")
853.51
"^DD",853.5,853.5121,.01,0)
MRAR CONDUCTED WITH^S^1:Patient;2:Spouse;3:Other Family Member;4:Caregiver;5:Friend;6:Outside Medication List;7:Other;^0;1^Q
"^DD",853.5,853.5121,.01,1,0)
^.1
"^DD",853.5,853.5121,.01,1,1,0)
853.5121^B
"^DD",853.5,853.5121,.01,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"MRARWITH","B",$E(X,1,30),DA)=""
"^DD",853.5,853.5121,.01,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"MRARWITH","B",$E(X,1,30),DA)
"^DD",853.5,853.5121,.01,3)
Choose with whom the provider conducted the MRAR.
"^DD",853.5,853.5121,.01,21,0)
^^1^1^3130510^
"^DD",853.5,853.5121,.01,21,1,0)
This field indicates with whom the provider conducted the MRAR.
"^DD",853.5,853.5121,.01,"DT")
3130510
"^DD",853.5,853.52,0)
ALLERGIES SUB-FIELD^^7^15
"^DD",853.5,853.52,0,"DT")
3141219
"^DD",853.5,853.52,0,"IX","B",853.52,.01)

"^DD",853.5,853.52,0,"IX","LOCAL",853.52,.02)

"^DD",853.5,853.52,0,"IX","REMOTE",853.52,.03)

"^DD",853.5,853.52,0,"NM","ALLERGIES")

"^DD",853.5,853.52,0,"UP")
853.51
"^DD",853.5,853.52,.01,0)
ALLERGY ENTRY #^NJ10,0X^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.52,.01,1,0)
^.1
"^DD",853.5,853.52,.01,1,1,0)
853.52^B
"^DD",853.5,853.52,.01,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"ALLERGY","B",$E(X,1,30),DA)=""
"^DD",853.5,853.52,.01,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"ALLERGY","B",$E(X,1,30),DA)
"^DD",853.5,853.52,.01,1,1,"%D",0)
^.101^1^1^3150108^^
"^DD",853.5,853.52,.01,1,1,"%D",1,0)
This cross reference is for MRAR patient allergy entry # look up.
"^DD",853.5,853.52,.01,3)
Enter a number from 1 to 9999999999, 0 decimal digits.
"^DD",853.5,853.52,.01,21,0)
^^3^3^3121228^
"^DD",853.5,853.52,.01,21,1,0)
This field contains a sequential number generated at the time a record is
"^DD",853.5,853.52,.01,21,2,0)
stored in the file.  It only serves to create an entry in the file and has
"^DD",853.5,853.52,.01,21,3,0)
no other special meaning.  
"^DD",853.5,853.52,.01,"DT")
3121228
"^DD",853.5,853.52,.02,0)
LOCAL ALLERGY ID^P120.8'^GMR(120.8,^0;2^Q
"^DD",853.5,853.52,.02,1,0)
^.1
"^DD",853.5,853.52,.02,1,1,0)
853.52^LOCAL
"^DD",853.5,853.52,.02,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"ALLERGY","LOCAL",$E(X,1,30),DA)=""
"^DD",853.5,853.52,.02,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"ALLERGY","LOCAL",$E(X,1,30),DA)
"^DD",853.5,853.52,.02,1,1,"%D",0)
^.101^1^1^3150108^^^^
"^DD",853.5,853.52,.02,1,1,"%D",1,0)
This cross reference is for MRAR patient local allergy ID look up.
"^DD",853.5,853.52,.02,1,1,"DT")
3120920
"^DD",853.5,853.52,.02,3)
Select the Local Allergy.
"^DD",853.5,853.52,.02,21,0)
^.001^1^1^3150429^^^
"^DD",853.5,853.52,.02,21,1,0)
This is the patient Allergy.
"^DD",853.5,853.52,.02,23,0)
^.001^1^1^3150429^^^
"^DD",853.5,853.52,.02,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.52,.02,"DT")
3130603
"^DD",853.5,853.52,.03,0)
REMOTE ALLERGY ID^NJ10,0^^0;3^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.52,.03,1,0)
^.1
"^DD",853.5,853.52,.03,1,1,0)
853.52^REMOTE
"^DD",853.5,853.52,.03,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"ALLERGY","REMOTE",$E(X,1,30),DA)=""
"^DD",853.5,853.52,.03,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"ALLERGY","REMOTE",$E(X,1,30),DA)
"^DD",853.5,853.52,.03,1,1,"%D",0)
^.101^1^1^3150108^^^
"^DD",853.5,853.52,.03,1,1,"%D",1,0)
This cross reference is for MRAR patient remote allergy ID look up.
"^DD",853.5,853.52,.03,1,1,"DT")
3120921
"^DD",853.5,853.52,.03,3)
Enter the remote Allergy ID.
"^DD",853.5,853.52,.03,21,0)
^^1^1^3130603^
"^DD",853.5,853.52,.03,21,1,0)
This is the patient Allergy IEN in the CDW database.
"^DD",853.5,853.52,.03,23,0)
^^1^1^3120821^^
"^DD",853.5,853.52,.03,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.52,.03,"DT")
3130603
"^DD",853.5,853.52,.05,0)
REMOTE ALLERGY NAME^F^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",853.5,853.52,.05,3)
Enter Remote Allergy Name (3-30 characters).
"^DD",853.5,853.52,.05,21,0)
^^2^2^3130807^
"^DD",853.5,853.52,.05,21,1,0)
This is the name of the patient Allergy copied from CDW database, as 
"^DD",853.5,853.52,.05,21,2,0)
pointed to by the REMOTE ALLERGY ID (#.03) field.
"^DD",853.5,853.52,.05,23,0)
^^1^1^3130522^
"^DD",853.5,853.52,.05,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.52,.05,"DT")
3130807
"^DD",853.5,853.52,.06,0)
AR PATIENT RESPONSE^S^Y:ALLERGIC;N:NOT ALLERGIC;U:UNSURE;X:NO RESPONSE;^0;6^Q
"^DD",853.5,853.52,.06,3)
Choose patient response to the displayed allergy.
"^DD",853.5,853.52,.06,21,0)
^^2^2^3121228^
"^DD",853.5,853.52,.06,21,1,0)
This is the patient structured response to the displayed allergy (field 
"^DD",853.5,853.52,.06,21,2,0)
.05) on the Kiosk during MRAR.
"^DD",853.5,853.52,.06,23,0)
^^1^1^3120821^
"^DD",853.5,853.52,.06,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.52,.06,"DT")
3121228
"^DD",853.5,853.52,.07,0)
REACTIONS^853.57A^^REACTIONS;0
"^DD",853.5,853.52,.07,21,0)
^^2^2^3121228^
"^DD",853.5,853.52,.07,21,1,0)
Each transaction sent by Vetlink may contain multiple allergies. Each 
"^DD",853.5,853.52,.07,21,2,0)
allergy in that transaction may contain multiple allergy reactions.
"^DD",853.5,853.52,.09,0)
REMOTE FACILITY^P4'^DIC(4,^0;8^Q
"^DD",853.5,853.52,.09,3)
Select the facility where the allergy was reported.
"^DD",853.5,853.52,.09,21,0)
^^2^2^3130523^
"^DD",853.5,853.52,.09,21,1,0)
This is the facility where the allergy was reported. The value was 
"^DD",853.5,853.52,.09,21,2,0)
retrieved from CDW database.
"^DD",853.5,853.52,.09,23,0)
^^1^1^3121101^
"^DD",853.5,853.52,.09,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.52,.09,"DT")
3130523
"^DD",853.5,853.52,1,0)
ALLERGY COMMENTS PATIENT^853.58^^ACOMM1;0
"^DD",853.5,853.52,1,21,0)
^^1^1^3130509^
"^DD",853.5,853.52,1,21,1,0)
This field contains allergy comments entered by patient in AR.
"^DD",853.5,853.52,2,0)
ALLERGY COMMENTS STAFF VIEW ^853.56^^ACOMM2;0
"^DD",853.5,853.52,2,21,0)
^^2^2^3130509^
"^DD",853.5,853.52,2,21,1,0)
This field contains allergy comments entered by provider in staff-facing
"^DD",853.5,853.52,2,21,2,0)
modules' staff view tab.
"^DD",853.5,853.52,3,0)
ALLERGY COMMENTS VET VIEW^853.523^^ACOMM3;0
"^DD",853.5,853.52,3,21,0)
^^2^2^3130509^
"^DD",853.5,853.52,3,21,1,0)
This field contains allergy comments entered by provider in staff-facing
"^DD",853.5,853.52,3,21,2,0)
module's Veteran view tab.
"^DD",853.5,853.52,4,0)
ALLERGY DOD^S^Y:PATIENT ALLERGIES FROM DOD;^0;7^Q
"^DD",853.5,853.52,4,3)
Are allergies from DOD?
"^DD",853.5,853.52,4,21,0)
^^1^1^3141216^
"^DD",853.5,853.52,4,21,1,0)
This field indicates whether or not the allergies from DOD.
"^DD",853.5,853.52,4,"DT")
3141216
"^DD",853.5,853.52,5,0)
ALLERGY CHANGED INDICATORS^853.525P^^ACHG;0
"^DD",853.5,853.52,5,21,0)
^.001^1^1^3150107^^
"^DD",853.5,853.52,5,21,1,0)
This multiple contains all Allert Changed Indicators for an allergy.
"^DD",853.5,853.52,5,"DT")
3141219
"^DD",853.5,853.52,6,0)
ALLERGY CONFIRMED INDICATORS^853.526P^^ACNFR;0
"^DD",853.5,853.52,6,21,0)
^^2^2^3150107^
"^DD",853.5,853.52,6,21,1,0)
This multiple contains all allergy confirmed indicators identified 
"^DD",853.5,853.52,6,21,2,0)
by patient.
"^DD",853.5,853.52,7,0)
ALLERGY DISCREPANCY INDICATORS^853.527P^^ADISCR;0
"^DD",853.5,853.52,7,21,0)
^.001^2^2^3150114^^^^
"^DD",853.5,853.52,7,21,1,0)
This multiple contains all allergy discrepancy indicators identified by 
"^DD",853.5,853.52,7,21,2,0)
patient.
"^DD",853.5,853.52,16,0)
ALLERGY-MARK FOR FOLLOWUP^S^S:STAFF-FACING STAFF VIEW;V:STAFF-FACING VET VIEW;^0;26^Q
"^DD",853.5,853.52,16,3)
Is Mark for follow-up checked in Vet-View or Staff-View?
"^DD",853.5,853.52,16,21,0)
^.001^2^2^3150113^^^
"^DD",853.5,853.52,16,21,1,0)
This field is to indicate that the Mark for Follow-Up box was checked in
"^DD",853.5,853.52,16,21,2,0)
the staff-facing module's staff view or vet view.
"^DD",853.5,853.52,16,23,0)
^.001^1^1^3150113^^^
"^DD",853.5,853.52,16,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.52,16,"DT")
3141218
"^DD",853.5,853.523,0)
ALLERGY COMMENTS VET VIEW SUB-FIELD^^.01^1
"^DD",853.5,853.523,0,"DT")
3121031
"^DD",853.5,853.523,0,"NM","ALLERGY COMMENTS VET VIEW")

"^DD",853.5,853.523,0,"UP")
853.52
"^DD",853.5,853.523,.01,0)
ALLERGY COMMENTS VET VIEW^Wx^^0;1
"^DD",853.5,853.523,.01,3)
Enter Allergy comments entered by provider in staff-facing's Veteran view tab.
"^DD",853.5,853.523,.01,21,0)
^^2^2^3121228^
"^DD",853.5,853.523,.01,21,1,0)
This is the free text comment entered by provider in staff-facing module's
"^DD",853.5,853.523,.01,21,2,0)
staff view tab.
"^DD",853.5,853.523,.01,23,0)
^^1^1^3121031^
"^DD",853.5,853.523,.01,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.523,.01,"DT")
3121228
"^DD",853.5,853.525,0)
ALLERGY CHANGED INDICATORS SUB-FIELD^^.01^1
"^DD",853.5,853.525,0,"DT")
3141219
"^DD",853.5,853.525,0,"IX","B",853.525,.01)

"^DD",853.5,853.525,0,"NM","ALLERGY CHANGED INDICATORS")

"^DD",853.5,853.525,0,"UP")
853.52
"^DD",853.5,853.525,.01,0)
ALLERGY CHANGED^P853.3'^VPS(853.3,^0;1^Q
"^DD",853.5,853.525,.01,1,0)
^.1
"^DD",853.5,853.525,.01,1,1,0)
853.525^B
"^DD",853.5,853.525,.01,1,1,1)
S ^VPS(853.5,DA(3),"MRAR",DA(2),"ALLERGY",DA(1),"ACHG","B",$E(X,1,30),DA)=""
"^DD",853.5,853.525,.01,1,1,2)
K ^VPS(853.5,DA(3),"MRAR",DA(2),"ALLERGY",DA(1),"ACHG","B",$E(X,1,30),DA)
"^DD",853.5,853.525,.01,3)
Select the Allergy Changed Indicator.
"^DD",853.5,853.525,.01,21,0)
^^1^1^3141219^
"^DD",853.5,853.525,.01,21,1,0)
This is the Allergy changed indictor entered by the provider or staff.
"^DD",853.5,853.525,.01,"DT")
3141219
"^DD",853.5,853.526,0)
ALLERGY CONFIRMED INDICATORS SUB-FIELD^^.01^1
"^DD",853.5,853.526,0,"DT")
3141219
"^DD",853.5,853.526,0,"IX","B",853.526,.01)

"^DD",853.5,853.526,0,"NM","ALLERGY CONFIRMED INDICATORS")

"^DD",853.5,853.526,0,"UP")
853.52
"^DD",853.5,853.526,.01,0)
ALLERGY CONFIRMED^P853.3'^VPS(853.3,^0;1^Q
"^DD",853.5,853.526,.01,1,0)
^.1
"^DD",853.5,853.526,.01,1,1,0)
853.526^B
"^DD",853.5,853.526,.01,1,1,1)
S ^VPS(853.5,DA(3),"MRAR",DA(2),"ALLERGY",DA(1),"ACNFR","B",$E(X,1,30),DA)=""
"^DD",853.5,853.526,.01,1,1,2)
K ^VPS(853.5,DA(3),"MRAR",DA(2),"ALLERGY",DA(1),"ACNFR","B",$E(X,1,30),DA)
"^DD",853.5,853.526,.01,3)
Select the Allergy Confirmed indicator entered by provider/staff.
"^DD",853.5,853.526,.01,21,0)
^^1^1^3141219^
"^DD",853.5,853.526,.01,21,1,0)
This is the allergy confirmed indicator entered by the provider/staff.
"^DD",853.5,853.526,.01,"DT")
3141219
"^DD",853.5,853.527,0)
ALLERGY DISCREPANCY INDICATORS SUB-FIELD^^.01^1
"^DD",853.5,853.527,0,"DT")
3141219
"^DD",853.5,853.527,0,"IX","B",853.527,.01)

"^DD",853.5,853.527,0,"NM","ALLERGY DISCREPANCY INDICATORS")

"^DD",853.5,853.527,0,"UP")
853.52
"^DD",853.5,853.527,.01,0)
ALLERGY DISCREPANCY^P853.3'^VPS(853.3,^0;1^Q
"^DD",853.5,853.527,.01,1,0)
^.1
"^DD",853.5,853.527,.01,1,1,0)
853.527^B
"^DD",853.5,853.527,.01,1,1,1)
S ^VPS(853.5,DA(3),"MRAR",DA(2),"ALLERGY",DA(1),"ADISCR","B",$E(X,1,30),DA)=""
"^DD",853.5,853.527,.01,1,1,2)
K ^VPS(853.5,DA(3),"MRAR",DA(2),"ALLERGY",DA(1),"ADISCR","B",$E(X,1,30),DA)
"^DD",853.5,853.527,.01,3)
Select the Allergy Discrepancy Indicator identified by patient.
"^DD",853.5,853.527,.01,21,0)
^.001^2^2^3150114^^
"^DD",853.5,853.527,.01,21,1,0)
This is the Allergy discrepancy indicator identified by patient during 
"^DD",853.5,853.527,.01,21,2,0)
the Allergy Review.
"^DD",853.5,853.527,.01,"DT")
3141219
"^DD",853.5,853.53,0)
ADDITIONAL ALLERGIES SUB-FIELD^^5^7
"^DD",853.5,853.53,0,"DT")
3141216
"^DD",853.5,853.53,0,"IX","B",853.53,.01)

"^DD",853.5,853.53,0,"NM","ADDITIONAL ALLERGIES")

"^DD",853.5,853.53,0,"UP")
853.51
"^DD",853.5,853.53,.01,0)
ADDITIONAL ALLERGIES ENTRY #^MNJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.53,.01,1,0)
^.1
"^DD",853.5,853.53,.01,1,1,0)
853.53^B
"^DD",853.5,853.53,.01,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"ALLERGYADD","B",$E(X,1,30),DA)=""
"^DD",853.5,853.53,.01,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"ALLERGYADD","B",$E(X,1,30),DA)
"^DD",853.5,853.53,.01,3)
Enter additional allergies entry number (1-9999999999, 0 decimal digits).
"^DD",853.5,853.53,.01,21,0)
^^2^2^3121228^
"^DD",853.5,853.53,.01,21,1,0)
This field represents the additional unstructured allergy entry number
"^DD",853.5,853.53,.01,21,2,0)
sent by Vetlink.
"^DD",853.5,853.53,.01,"DT")
3130604
"^DD",853.5,853.53,1,0)
ADD ALLERGY-VET^853.531^^1;0
"^DD",853.5,853.53,1,21,0)
^^1^1^3121228^
"^DD",853.5,853.53,1,21,1,0)
This is the additional allergy typed in by patient.
"^DD",853.5,853.53,1,"DT")
3121017
"^DD",853.5,853.53,1.5,0)
ADD ALLERGY-PROVIDER^853.59^^2;0
"^DD",853.5,853.53,1.5,21,0)
^^1^1^3121228^
"^DD",853.5,853.53,1.5,21,1,0)
This is the additional allergy typed in by provider.
"^DD",853.5,853.53,2,0)
ADD ALLERGY REACTION (STAFF)^F^^0;3^K:$L(X)>35!($L(X)<3) X
"^DD",853.5,853.53,2,3)
Enter additional allergy reaction entered by provider (3-35 characters).
"^DD",853.5,853.53,2,21,0)
^^2^2^3130603^
"^DD",853.5,853.53,2,21,1,0)
This field contains the additional allergy reaction entered by provider 
"^DD",853.5,853.53,2,21,2,0)
in staff-facing interface.
"^DD",853.5,853.53,2,23,0)
^^1^1^3121228^
"^DD",853.5,853.53,2,23,1,0)
Vetlink provides data to VistA via an RPC broker call.
"^DD",853.5,853.53,2,"DT")
3130603
"^DD",853.5,853.53,3,0)
ADD ALLERGY ADDED BY^S^S:ADDED BY PROVIDER STAFF VIEW;V:ADDED BY PROVIDER VET VIEW;^0;4^Q
"^DD",853.5,853.53,3,3)
Choose whether additional Allergy was entered in Staff-view or Vet-view.
"^DD",853.5,853.53,3,21,0)
^^2^2^3130510^
"^DD",853.5,853.53,3,21,1,0)
This field indicates whether the Additional Allergy was added in the staff
"^DD",853.5,853.53,3,21,2,0)
view or in the vet view of staff-facing module.
"^DD",853.5,853.53,3,23,0)
^^1^1^3121228^
"^DD",853.5,853.53,3,23,1,0)
Vecna provides data to VistA via an RPC broker call.
"^DD",853.5,853.53,3,"DT")
3130510
"^DD",853.5,853.53,4,0)
ADD ALLERGY-MARK FOR FOLLOWUP^S^S:STAFF-FACING STAFF VIEW;V:STAFF-FACING VET VIEW;^0;5^Q
"^DD",853.5,853.53,4,3)
Choose whether 'Add Allergy Mark for followup' was checked in Staff-view or Vet-view'.
"^DD",853.5,853.53,4,21,0)
^.001^2^2^3150114^^^^
"^DD",853.5,853.53,4,21,1,0)
This field indicates that 'Additional Allergy Mark for Follow Up' box was
"^DD",853.5,853.53,4,21,2,0)
checked in the staff-facing module's staff view or Vet-view.
"^DD",853.5,853.53,4,23,0)
^.001^1^1^3150114^^^^
"^DD",853.5,853.53,4,23,1,0)
Vetlink kiosk provides data to VistA via an RPC broker call.
"^DD",853.5,853.53,4,"DT")
3121228
"^DD",853.5,853.53,5,0)
ADD ALLERGY NOT KNOWN^S^1:NO KNOWN OTHER ALLERGIES;^0;2^Q
"^DD",853.5,853.53,5,3)
Enter 1 if patient has no other known drug allergies.
"^DD",853.5,853.53,5,21,0)
^.001^2^2^3150113^^^
"^DD",853.5,853.53,5,21,1,0)
Allergy Review structured response from patient at kiosk (e.g., 
"^DD",853.5,853.53,5,21,2,0)
Confirmation dialog): "I don't know what my other allergies are".
"^DD",853.5,853.53,5,"DT")
3141216
"^DD",853.5,853.531,0)
ADD ALLERGY-VET SUB-FIELD^^.01^1
"^DD",853.5,853.531,0,"DT")
3121228
"^DD",853.5,853.531,0,"NM","ADD ALLERGY-VET")

"^DD",853.5,853.531,0,"UP")
853.53
"^DD",853.5,853.531,.01,0)
ADD ALLERGY-VET^Wx^^0;1
"^DD",853.5,853.531,.01,3)
Enter Additional Allergy type in by patient.
"^DD",853.5,853.531,.01,"DT")
3121228
"^DD",853.5,853.54,0)
MEDICATIONS SUB-FIELD^^53^55
"^DD",853.5,853.54,0,"DT")
3150115
"^DD",853.5,853.54,0,"IX","B",853.54,.01)

"^DD",853.5,853.54,0,"IX","NONVA",853.54,21)

"^DD",853.5,853.54,0,"IX","REMOTE",853.54,9)

"^DD",853.5,853.54,0,"IX","RXST",853.54,12)

"^DD",853.5,853.54,0,"NM","MEDICATIONS")

"^DD",853.5,853.54,0,"UP")
853.51
"^DD",853.5,853.54,.01,0)
MEDICATION ENTRY #^NJ10,0X^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.54,.01,1,0)
^.1
"^DD",853.5,853.54,.01,1,1,0)
853.54^B
"^DD",853.5,853.54,.01,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDS","B",$E(X,1,30),DA)=""
"^DD",853.5,853.54,.01,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDS","B",$E(X,1,30),DA)
"^DD",853.5,853.54,.01,3)
Enter medication entry number (1-9999999999, 0 decimal digits).
"^DD",853.5,853.54,.01,21,0)
^^3^3^3121228^
"^DD",853.5,853.54,.01,21,1,0)
This field contains a sequential number generated at the time a record is
"^DD",853.5,853.54,.01,21,2,0)
stored in the file.  It only serves to create an entry in the file and has
"^DD",853.5,853.54,.01,21,3,0)
no other special meaning. 
"^DD",853.5,853.54,.01,"DT")
3130603
"^DD",853.5,853.54,1,0)
PRESCRIPTION ID^NJ10,0^^0;2^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.54,1,3)
Enter the Prescription ID (a number between 1 and 999999999, 0 decimal digits).
"^DD",853.5,853.54,1,21,0)
^^1^1^3130603^
"^DD",853.5,853.54,1,21,1,0)
This field identifies the patient prescription IEN in the CDW database.
"^DD",853.5,853.54,1,"DT")
3141216
"^DD",853.5,853.54,2,0)
PROVIDER NAME^F^^0;3^K:$L(X)>35!($L(X)<3) X
"^DD",853.5,853.54,2,3)
Enter the provider name of the prescription (3-35 characters).
"^DD",853.5,853.54,2,21,0)
^^2^2^3130603^
"^DD",853.5,853.54,2,21,1,0)
This field identifies the prescriber name copied from the CDW database, 
"^DD",853.5,853.54,2,21,2,0)
as pointed to by the REMOTE PRESCRIPTION ID (#1) field.
"^DD",853.5,853.54,2,23,0)
^^1^1^3121228^
"^DD",853.5,853.54,2,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.54,2,"DT")
3141216
"^DD",853.5,853.54,3,0)
FILL LOCATION^P4'^DIC(4,^0;4^Q
"^DD",853.5,853.54,3,3)
Select the facility where the prescription was filled.
"^DD",853.5,853.54,3,21,0)
^^2^2^3130523^
"^DD",853.5,853.54,3,21,1,0)
This is the facility where the prescription was filled. The value was 
"^DD",853.5,853.54,3,21,2,0)
retrieved from CDW database.
"^DD",853.5,853.54,3,23,0)
^^1^1^3121022^
"^DD",853.5,853.54,3,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.54,3,"DT")
3141216
"^DD",853.5,853.54,4,0)
LAST FILL DATE^D^^0;5^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",853.5,853.54,4,3)
Enter the last date the prescription was filled. 
"^DD",853.5,853.54,4,21,0)
^^2^2^3130523^
"^DD",853.5,853.54,4,21,1,0)
This field contains the most recent date that the prescription was 
"^DD",853.5,853.54,4,21,2,0)
filled. This Last Fill Date was retrieved from CDW database.
"^DD",853.5,853.54,4,23,0)
^^1^1^3121022^
"^DD",853.5,853.54,4,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.54,4,"DT")
3141216
"^DD",853.5,853.54,5,0)
DAYS SUPPLIED^NJ3,0^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",853.5,853.54,5,3)
Enter the number of days the prescription will cover (0-999,0 decimal digits)
"^DD",853.5,853.54,5,21,0)
^^2^2^3130523^
"^DD",853.5,853.54,5,21,1,0)
This field contains the number of days that the prescription will cover. 
"^DD",853.5,853.54,5,21,2,0)
The value was retrieved from CDW database.
"^DD",853.5,853.54,5,23,0)
^^1^1^3121022^
"^DD",853.5,853.54,5,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.54,5,"DT")
3141216
"^DD",853.5,853.54,6,0)
# REFILLS LEFT^NJ2,0^^0;7^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",853.5,853.54,6,3)
Type a number between 0 and 99, 0 decimal digits.
"^DD",853.5,853.54,6,21,0)
^^2^2^3130523^
"^DD",853.5,853.54,6,21,1,0)
This field contains the number of refills remaining for the prescription. 
"^DD",853.5,853.54,6,21,2,0)
The value was retrieved from CDW database.
"^DD",853.5,853.54,6,23,0)
^^1^1^3121022^
"^DD",853.5,853.54,6,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.54,6,"DT")
3141216
"^DD",853.5,853.54,7,0)
NEXT FILL DATE^D^^0;8^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",853.5,853.54,7,3)
Enter the next fill date.
"^DD",853.5,853.54,7,21,0)
^^2^2^3130603^
"^DD",853.5,853.54,7,21,1,0)
This field contains the next possible fill date. The value was retrieved
"^DD",853.5,853.54,7,21,2,0)
from CDW database.
"^DD",853.5,853.54,7,23,0)
^^1^1^3121022^
"^DD",853.5,853.54,7,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.54,7,"DT")
3141216
"^DD",853.5,853.54,8,0)
MED EXPIRE DATE^D^^0;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.54,8,3)
Enter the manufacture's medication expire date.
"^DD",853.5,853.54,8,21,0)
^^1^1^3150107^
"^DD",853.5,853.54,8,21,1,0)
This field contains the manufacture's medication expiration date.
"^DD",853.5,853.54,8,"DT")
3150107
"^DD",853.5,853.54,9,0)
MED ID^NJ10,0^^0;10^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",853.5,853.54,9,1,0)
^.1
"^DD",853.5,853.54,9,1,1,0)
853.54^REMOTE
"^DD",853.5,853.54,9,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDS","REMOTE",$E(X,1,30),DA)=""
"^DD",853.5,853.54,9,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDS","REMOTE",$E(X,1,30),DA)
"^DD",853.5,853.54,9,1,1,"%D",0)
^.101^1^1^3150108^^
"^DD",853.5,853.54,9,1,1,"%D",1,0)
This cross reference is for MRAR patient MED ID look up.
"^DD",853.5,853.54,9,1,1,"DT")
3121103
"^DD",853.5,853.54,9,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",853.5,853.54,9,21,0)
^.001^1^1^3150107^^
"^DD",853.5,853.54,9,21,1,0)
This field identifies patient medication IEN in the CDW database.
"^DD",853.5,853.54,9,23,0)
^.001^1^1^3150107^^
"^DD",853.5,853.54,9,23,1,0)
Vetlink Kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.54,9,"DT")
3150107
"^DD",853.5,853.54,10,0)
MEDICATION NAME^F^^0;11^K:$L(X)>35!($L(X)<3) X
"^DD",853.5,853.54,10,3)
Enter the medication name (3-35 characters).
"^DD",853.5,853.54,10,21,0)
^^2^2^3141218^
"^DD",853.5,853.54,10,21,1,0)
This field identifies medication name copied from CDW database, as pointed
"^DD",853.5,853.54,10,21,2,0)
by the MED ID (#9) field.
"^DD",853.5,853.54,10,23,0)
^^1^1^3121022^
"^DD",853.5,853.54,10,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.54,10,"DT")
3141218
"^DD",853.5,853.54,11,0)
MR PRESET PATIENT RESPONSE^S^Y:TAKING AS WRITTEN;N:NOT TAKING;D:TAKING DIFFERENTLY;U:UNSURE;X:NO RESPONSE;^0;12^Q
"^DD",853.5,853.54,11,3)
Choose how the patient is taking the medication.
"^DD",853.5,853.54,11,21,0)
^^4^4^3130603^
"^DD",853.5,853.54,11,21,1,0)
This field represents the patient structured response to the displayed
"^DD",853.5,853.54,11,21,2,0)
medication on patient-facing module during MRAR. Patient can select preset
"^DD",853.5,853.54,11,21,3,0)
answers in MR rather than writing a free text answer (structured 
"^DD",853.5,853.54,11,21,4,0)
comments).
"^DD",853.5,853.54,11,23,0)
^^1^1^3121022^
"^DD",853.5,853.54,11,23,1,0)
Vetlink kiosk sends data to VistA via an RPC broker call.
"^DD",853.5,853.54,11,"DT")
3130603
"^DD",853.5,853.54,12,0)
RX STATUS^S^0:ACTIVE;1:NON-VERIFIED;2:REFILL;3:HOLD;4:PENDING DUE TO DRUG INTERACTIONS;5:SUSPENDED;10:DONE;11:EXPIRED;12:DISCONTINUED;13:DELETED;14:DISCONTINUED BY PROVIDER;15:DISCONTINUED (EDIT);16:PROVIDER HOLD;^0;13^Q
"^DD",853.5,853.54,12,1,0)
^.1
"^DD",853.5,853.54,12,1,1,0)
853.54^RXST
"^DD",853.5,853.54,12,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDS","RXST",$E(X,1,30),DA)=""
"^DD",853.5,853.54,12,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDS","RXST",$E(X,1,30),DA)
"^DD",853.5,853.54,12,1,1,"%D",0)
^^1^1^3150108^
"^DD",853.5,853.54,12,1,1,"%D",1,0)
This cross reference is for MRAR patient RX status look up.
"^DD",853.5,853.54,12,1,1,"DT")
3121104
"^DD",853.5,853.54,12,3)
Choose the status of the prescription.
"^DD",853.5,853.54,12,21,0)
^^2^2^3130603^
"^DD",853.5,853.54,12,21,1,0)
This field contains the status of the prescription. The value is retrieved
"^DD",853.5,853.54,12,21,2,0)
from CDW database.
"^DD",853.5,853.54,12,23,0)
^^1^1^3121024^
"^DD",853.5,853.54,12,23,1,0)
Vetlink Kiosk sends this data to VistA via an RPC Broker call.
"^DD",853.5,853.54,12,"DT")
3141218
"^DD",853.5,853.54,13,0)
MED SIG^F^^SIG;1^K:$L(X)>200!($L(X)<3) X
"^DD",853.5,853.54,13,3)
Enter the patient instructions for the prescription (3-200 characters).
"^DD",853.5,853.54,13,21,0)
^^2^2^3130523^
"^DD",853.5,853.54,13,21,1,0)
This field contains the medication instruction for this prescription. The 
"^DD",853.5,853.54,13,21,2,0)
instruction was retrieved from CDW database.
"^DD",853.5,853.54,13,23,0)
^^1^1^3121228^
"^DD",853.5,853.54,13,23,1,0)
Vetlink kiosk sends data to VistA via an RPC Broker call.
"^DD",853.5,853.54,13,"DT")
3141216
"^DD",853.5,853.54,14,0)
MED DOSAGE^F^^0;14^K:$L(X)>20!($L(X)<3) X
"^DD",853.5,853.54,14,3)
Enter the dosage for the medication (3-20 characters).
"^DD",853.5,853.54,14,21,0)
^^2^2^3130603^
"^DD",853.5,853.54,14,21,1,0)
This field contains the dosage for the medication. The value was retrieved
"^DD",853.5,853.54,14,21,2,0)
from CDW database.
"^DD",853.5,853.54,14,23,0)
^^1^1^3121104^
"^DD",853.5,853.54,14,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.54,14,"DT")
3141216
"^DD",853.5,853.54,15,0)
MED DOSAGE FORM^F^^0;15^K:$L(X)>20!($L(X)<3) X
"^DD",853.5,853.54,15,3)
Enter the medication dosage form (3-20 characters).
"^DD",853.5,853.54,15,21,0)
^^2^2^3130523^
"^DD",853.5,853.54,15,21,1,0)
This field contains the form of a medication dose, such as tablet,
"^DD",853.5,853.54,15,21,2,0)
injection, etc. This med dosage form was retrieved from CDW database. 
"^DD",853.5,853.54,15,23,0)
^^1^1^3121104^
"^DD",853.5,853.54,15,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.54,15,"DT")
3141216
"^DD",853.5,853.54,16,0)
MEDS-MARK FOR FOLLOWUP^S^S:STAFF-FACING STAFF VIEW;V:STAFF-FACING VET VIEW;^0;16^Q
"^DD",853.5,853.54,16,3)
Choose the type of view the 'Mark for followup' field was checked.
"^DD",853.5,853.54,16,21,0)
^^2^2^3130522^
"^DD",853.5,853.54,16,21,1,0)
This field indicates that 'Mark for Follow Up' box was checked in the
"^DD",853.5,853.54,16,21,2,0)
staff-facing module's staff view or in the staff-facing module's vet view.
"^DD",853.5,853.54,16,"DT")
3130522
"^DD",853.5,853.54,17,0)
MED ROUTE^F^^0;17^K:$L(X)>20!($L(X)<3) X
"^DD",853.5,853.54,17,3)
Enter the medication route (3-20 characters).
"^DD",853.5,853.54,17,21,0)
^^2^2^3130523^
"^DD",853.5,853.54,17,21,1,0)
This field indicates the method of medication administration (e.g., oral
"^DD",853.5,853.54,17,21,2,0)
buccal). This med route was retrieved from CDW database.
"^DD",853.5,853.54,17,23,0)
^^1^1^3121031^
"^DD",853.5,853.54,17,23,1,0)
Vetlink Kiosk sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.54,17,"DT")
3141216
"^DD",853.5,853.54,18,0)
MED IMAGE INDICATOR^S^Y:YES;N:NO;^0;18^Q
"^DD",853.5,853.54,18,3)
Is MIL medication image shown in MR?
"^DD",853.5,853.54,18,21,0)
^^2^2^3150112^^
"^DD",853.5,853.54,18,21,1,0)
This field indicates whether or not the MIL medication image was shown in
"^DD",853.5,853.54,18,21,2,0)
Medication Review of both patient-facing and staff-facing module.
"^DD",853.5,853.54,18,23,0)
^^1^1^3121031^
"^DD",853.5,853.54,18,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.54,18,"DT")
3150112
"^DD",853.5,853.54,19,0)
MED FINISHING PERSON^F^^2;1^K:$L(X)>50!($L(X)<2) X
"^DD",853.5,853.54,19,3)
Enter the finishing person, between 2-50 characters.
"^DD",853.5,853.54,19,21,0)
^.001^2^2^3150107^^^
"^DD",853.5,853.54,19,21,1,0)
This field contains the person who finished (completed) the medication 
"^DD",853.5,853.54,19,21,2,0)
order in Pharmacy.
"^DD",853.5,853.54,19,"DT")
3141216
"^DD",853.5,853.54,20,0)
NATIONAL DRUG SID^F^^3;1^K:$L(X)>50!($L(X)<1) X
"^DD",853.5,853.54,20,3)
Enter National Drug Identifier, between 1-50 characters.
"^DD",853.5,853.54,20,21,0)
^.001^1^1^3150107^^
"^DD",853.5,853.54,20,21,1,0)
This field contains National Drug Identifier.
"^DD",853.5,853.54,20,"DT")
3141216
"^DD",853.5,853.54,21,0)
NON-VA^S^Y:YES;N:NO;^0;21^Q
"^DD",853.5,853.54,21,1,0)
^.1
"^DD",853.5,853.54,21,1,1,0)
853.54^NONVA
"^DD",853.5,853.54,21,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDS","NONVA",$E(X,1,30),DA)=""
"^DD",853.5,853.54,21,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDS","NONVA",$E(X,1,30),DA)
"^DD",853.5,853.54,21,1,1,"%D",0)
^^1^1^3150108^
"^DD",853.5,853.54,21,1,1,"%D",1,0)
This cross reference is for MRAR patient NON-VA medication flag look up.
"^DD",853.5,853.54,21,1,1,"DT")
3121104
"^DD",853.5,853.54,21,3)
Is medication a non-VA prescription?
"^DD",853.5,853.54,21,21,0)
^^2^2^3130603^
"^DD",853.5,853.54,21,21,1,0)
This field indicates whether the medication is a non-VA prescription or 
"^DD",853.5,853.54,21,21,2,0)
not. This value is retrieved from CDW database.
"^DD",853.5,853.54,21,"DT")
3141216
"^DD",853.5,853.54,22,0)
MAX REFILLS^NJ2,0^^0;22^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",853.5,853.54,22,3)
Type a number between 0 and 99, 0 decimal digits.
"^DD",853.5,853.54,22,21,0)
^^2^2^3130523^
"^DD",853.5,853.54,22,21,1,0)
This field contains the number of fills ordered for a prescription. This 
"^DD",853.5,853.54,22,21,2,0)
max refills was retrieved from CDW database.
"^DD",853.5,853.54,22,"DT")
3141216
"^DD",853.5,853.54,23,0)
MEDICATION COMMENTS PATIENT^853.5423^^MEDCOM;0
"^DD",853.5,853.54,23,21,0)
^^1^1^3121228^
"^DD",853.5,853.54,23,21,1,0)
This is the medication comments entered by patient.
"^DD",853.5,853.54,23,"DT")
3121031
"^DD",853.5,853.54,24,0)
MEDICATION COMMENTS STAFF VIEW^853.5424^^MEDCOM2;0
"^DD",853.5,853.54,24,21,0)
^^2^2^3121228^
"^DD",853.5,853.54,24,21,1,0)
This field contains medication comments entered in the staff-view tab of 
"^DD",853.5,853.54,24,21,2,0)
staff-facing module.
"^DD",853.5,853.54,25,0)
MEDICATION COMMENTS VET VIEW^853.5425^^MEDCOM3;0
"^DD",853.5,853.54,25,21,0)
^^2^2^3121228^
"^DD",853.5,853.54,25,21,1,0)
This field contains medication comments entered in the vet-view tab of 
"^DD",853.5,853.54,25,21,2,0)
staff-facing module.
"^DD",853.5,853.54,26,0)
RX PATIENT STATUS^F^^2;2^K:$L(X)>50!($L(X)<1) X
"^DD",853.5,853.54,26,3)
Enter the patient status at the time the prescription was filled. The status must be between 1-50 characters.
"^DD",853.5,853.54,26,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,26,21,1,0)
This is the patient status at the time the prescription was filled. This 
"^DD",853.5,853.54,26,21,2,0)
value was retrieved from CDW database.
"^DD",853.5,853.54,26,"DT")
3141216
"^DD",853.5,853.54,27,0)
RX NUMBER^NJ9,0^^0;19^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.54,27,3)
Enter the RX Number (a number between 1 and 999999999, 0 decimal digits).
"^DD",853.5,853.54,27,21,0)
^^2^2^3141216^
"^DD",853.5,853.54,27,21,1,0)
This field contains the medication prescription number. The value was 
"^DD",853.5,853.54,27,21,2,0)
retrieved from CDW database.
"^DD",853.5,853.54,27,"DT")
3141216
"^DD",853.5,853.54,28,0)
RX OUTPATIENT ID^NJ9,0^^0;20^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.54,28,3)
Enter RX Outpatient ID (a number between 1 and 999999999, 0 decimal digits).
"^DD",853.5,853.54,28,21,0)
^^2^2^3141217^^
"^DD",853.5,853.54,28,21,1,0)
This field contains Outpatient Identifier in the Pharmacy's database. The 
"^DD",853.5,853.54,28,21,2,0)
value was retrieved from CDW database.
"^DD",853.5,853.54,28,"DT")
3141217
"^DD",853.5,853.54,29,0)
RX SC FLAG^S^1:MED FOR A SERVICE CONNECTED CONDITION;^2;3^Q
"^DD",853.5,853.54,29,3)
Is medication prescribed for a service connected condition (Enter 1 if yes)?
"^DD",853.5,853.54,29,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.54,29,21,1,0)
This field indicates whether the Pharmacist's response to
"^DD",853.5,853.54,29,21,2,0)
"Medication prescribed for a service connected condition?" is 'Yes' or 
"^DD",853.5,853.54,29,21,3,0)
'No'. 'Yes' answer will be stored as 1.
"^DD",853.5,853.54,29,"DT")
3141217
"^DD",853.5,853.54,33,0)
CANCEL DT^D^^2;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.54,33,3)
Enter Date/Time (time is optional) the medication was cancel.
"^DD",853.5,853.54,33,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,33,21,1,0)
This field contains the Date/Time (time is optional) when medication 
"^DD",853.5,853.54,33,21,2,0)
was cancel.
"^DD",853.5,853.54,33,"DT")
3150107
"^DD",853.5,853.54,34,0)
CMOP STATUS^S^1:CREATED;2:TRANSMITTED;3:ACKNOWLEDGED;4:CLOSED;5:RETRANSMITTED;^2;5^Q
"^DD",853.5,853.54,34,3)
Choose prescription transmission Status.
"^DD",853.5,853.54,34,21,0)
^^2^2^3141217^^
"^DD",853.5,853.54,34,21,1,0)
This field contains the Prescription Transmission Status Flag. The value 
"^DD",853.5,853.54,34,21,2,0)
was retrieved from CDW.
"^DD",853.5,853.54,34,"DT")
3141218
"^DD",853.5,853.54,35,0)
COUNSELED FLAG^S^1:RECEIVED COUNSELING ABOUT PRESCRIPTION;^2;6^Q
"^DD",853.5,853.54,35,3)
Enter the Counseled Flag (1=YES). 
"^DD",853.5,853.54,35,21,0)
^^3^3^3141217^
"^DD",853.5,853.54,35,21,1,0)
This field indicates whether or not the patient received counseling about 
"^DD",853.5,853.54,35,21,2,0)
the prescription/medication. YES Answer will be stored as 1. The value was
"^DD",853.5,853.54,35,21,3,0)
retrieved from CDW.
"^DD",853.5,853.54,35,"DT")
3141217
"^DD",853.5,853.54,36,0)
COUNSELING UNDERSTOOD FLAG^S^1:PATIENT UNDERSTOOD MEDICATION COUNSELLING;^2;7^Q
"^DD",853.5,853.54,36,3)
Enter counseling understood flag (1=Patient Understood).
"^DD",853.5,853.54,36,21,0)
^^3^3^3141217^
"^DD",853.5,853.54,36,21,1,0)
This field indicates whether or not the patient understood any provided 
"^DD",853.5,853.54,36,21,2,0)
medication counselling. YES answer will be stored as 1. The value was 
"^DD",853.5,853.54,36,21,3,0)
retrieved from CDW.
"^DD",853.5,853.54,36,"DT")
3141217
"^DD",853.5,853.54,37,0)
DIVISION SID^F^^4;1^K:$L(X)>50!($L(X)<1) X
"^DD",853.5,853.54,37,3)
Enter Division that filled the prescription (1-50 characters).
"^DD",853.5,853.54,37,21,0)
^^2^2^3141217^
"^DD",853.5,853.54,37,21,1,0)
This field contains the Outpatient Pharmacy Division that filled the 
"^DD",853.5,853.54,37,21,2,0)
prescription. The value was retrieved from CDW.
"^DD",853.5,853.54,37,"DT")
3141217
"^DD",853.5,853.54,38,0)
ENTERED BY^F^^4;2^K:$L(X)>50!($L(X)<1) X
"^DD",853.5,853.54,38,3)
Enter the name of the person who requested the medication. Name must be between 1-50 characters.
"^DD",853.5,853.54,38,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,38,21,1,0)
This field contains the name of the person who requested the medication. 
"^DD",853.5,853.54,38,21,2,0)
The value was retrieved from CDW.
"^DD",853.5,853.54,38,"DT")
3141217
"^DD",853.5,853.54,39,0)
MED ISSUE DT^D^^4;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.54,39,3)
Enter Date/Time (time is optional) the provider wrote the prescription.
"^DD",853.5,853.54,39,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.54,39,21,1,0)
This field contains the Date/Time (time is optional) when the 
"^DD",853.5,853.54,39,21,2,0)
provider wrote the prescription. The value was retrieved from 
"^DD",853.5,853.54,39,21,3,0)
CDW.
"^DD",853.5,853.54,39,"DT")
3150107
"^DD",853.5,853.54,40,0)
COPAY TRANSACTION^F^^5;1^K:$L(X)>50!($L(X)<1) X
"^DD",853.5,853.54,40,3)
Enter the name of the Integrated Billing action type. Name must be between 1-50 characters.
"^DD",853.5,853.54,40,21,0)
^.001^2^2^3150114^^^^
"^DD",853.5,853.54,40,21,1,0)
This field contains the name of Integrated Billing action type. The value 
"^DD",853.5,853.54,40,21,2,0)
was retrieved from CDW.
"^DD",853.5,853.54,40,"DT")
3141217
"^DD",853.5,853.54,41,0)
EBILL ACTION NUMBER^NJ9,0^^5;2^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",853.5,853.54,41,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",853.5,853.54,41,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,41,21,1,0)
This field contains the IEN of the Integrated Billing Action file #350.  
"^DD",853.5,853.54,41,21,2,0)
The data type is not a pointer because the value was retrieved from CDW.
"^DD",853.5,853.54,41,"DT")
3150107
"^DD",853.5,853.54,42,0)
ETL BATCH ID FAILURE^NJ9,0^^5;3^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",853.5,853.54,42,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",853.5,853.54,42,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,42,21,1,0)
This field contains the identifier of the ETL batch that failed. The 
"^DD",853.5,853.54,42,21,2,0)
value was retrieved from CDW.
"^DD",853.5,853.54,42,"DT")
3150107
"^DD",853.5,853.54,43,0)
RELEASE DT^D^^2;8^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",853.5,853.54,43,3)
Enter date/time (time is optional) of the medication was released from inventory.
"^DD",853.5,853.54,43,21,0)
^.001^3^3^3150107^^
"^DD",853.5,853.54,43,21,1,0)
This field contains the date/time (time is optional) when the medication
"^DD",853.5,853.54,43,21,2,0)
was released from inventory and ready for copay billing. The value was 
"^DD",853.5,853.54,43,21,3,0)
retrieved from CDW.
"^DD",853.5,853.54,43,"DT")
3150107
"^DD",853.5,853.54,44,0)
QUANTITY SUPPLIED^NJ12,2^^2;9^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."3N.N) X
"^DD",853.5,853.54,44,3)
Type a number between 0 and 999999999, 2 decimal digits.
"^DD",853.5,853.54,44,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,44,21,1,0)
This field contains the amount of medication dispensed. The value was 
"^DD",853.5,853.54,44,21,2,0)
retrieved from CDW.
"^DD",853.5,853.54,44,"DT")
3150107
"^DD",853.5,853.54,45,0)
MED REMOTE^S^1:MEDICATION FROM REMOTE FACILITY;^3;2^Q
"^DD",853.5,853.54,45,3)
Enter Flag indicating medication from remote VA facility (1 = YES).
"^DD",853.5,853.54,45,21,0)
^^2^2^3141217^
"^DD",853.5,853.54,45,21,1,0)
This field indicates whether or not the medication is from remote VA 
"^DD",853.5,853.54,45,21,2,0)
facility.
"^DD",853.5,853.54,45,"DT")
3141217
"^DD",853.5,853.54,46,0)
REMOTE MED FACILITY^F^^3;3^K:$L(X)>50!($L(X)<1) X
"^DD",853.5,853.54,46,3)
Enter VA Facility associated with remote medication(1-50 characters).
"^DD",853.5,853.54,46,21,0)
^.001^1^1^3150107^^
"^DD",853.5,853.54,46,21,1,0)
This field contains the VA facility associated with the remote medication.
"^DD",853.5,853.54,46,"DT")
3141217
"^DD",853.5,853.54,47,0)
DRUG NAME W/O DOSE^F^^2;10^K:$L(X)>64!($L(X)<1) X
"^DD",853.5,853.54,47,3)
Enter medication name without dose, between 1-64 characters.
"^DD",853.5,853.54,47,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,47,21,1,0)
This field contains the generic medication name without dose. The value 
"^DD",853.5,853.54,47,21,2,0)
was retrieved from CDW.
"^DD",853.5,853.54,47,"DT")
3141217
"^DD",853.5,853.54,48,0)
HIGH RISK MED CLASS^F^^6;1^K:$L(X)>50!($L(X)<1) X
"^DD",853.5,853.54,48,3)
Enter the high risk medication class, between 1-50 characters.
"^DD",853.5,853.54,48,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,48,21,1,0)
This field contains the name of the high risk or high-alert class the 
"^DD",853.5,853.54,48,21,2,0)
medication falls under.
"^DD",853.5,853.54,48,"DT")
3141217
"^DD",853.5,853.54,49,0)
HIGH RISK MED NAME^F^^6;2^K:$L(X)>50!($L(X)<1) X
"^DD",853.5,853.54,49,3)
Enter the high risk medication name, between 1-50 characters.
"^DD",853.5,853.54,49,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,49,21,1,0)
This field contains the generic medication name associated with the 
"^DD",853.5,853.54,49,21,2,0)
high-risk class.
"^DD",853.5,853.54,49,"DT")
3141217
"^DD",853.5,853.54,50,0)
HIGH RISK MED YEAR^NJ4,0^^6;3^K:+X'=X!(X>2999)!(X<1900)!(X?.E1"."1N.N) X
"^DD",853.5,853.54,50,3)
Type a number between 1900 and 2999, 0 decimal digits.
"^DD",853.5,853.54,50,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,50,21,1,0)
This field contains the year of the medication was in the high risk 
"^DD",853.5,853.54,50,21,2,0)
medication table.
"^DD",853.5,853.54,50,"DT")
3150107
"^DD",853.5,853.54,51,0)
MED IMAGE^S^1:IMAGE ERROR WAS ENCOUNTERED;2:IMAGE MATCHED;3:IMAGE NOT FOUND;4:IMAGE SUPPRESSED BY FACILITY;5:IMAGE SUPPRESSED BY NATIONAL;^6;4^Q
"^DD",853.5,853.54,51,3)
Choose Medication Image status sent by CDW.
"^DD",853.5,853.54,51,21,0)
^^1^1^3141217^
"^DD",853.5,853.54,51,21,1,0)
This field contains medication image status when sent by CDW.
"^DD",853.5,853.54,51,"DT")
3141218
"^DD",853.5,853.54,52,0)
MED DISCREPANCY INDICATORS^853.5452P^^MDISCR;0
"^DD",853.5,853.54,52,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,52,21,1,0)
This multiple contains all Medication Discrepancy indicators selected 
"^DD",853.5,853.54,52,21,2,0)
during MR using either patient or staff facing interface.
"^DD",853.5,853.54,53,0)
MED CHANGED INDICATORS^853.5454P^^MCHG;0
"^DD",853.5,853.54,55,0)
MED CONFIRMED INDICATORS^853.5455P^^MCNFR;0
"^DD",853.5,853.54,55,21,0)
^.001^2^2^3150107^^
"^DD",853.5,853.54,55,21,1,0)
This multiple contains all medication confirmed indicators selected 
"^DD",853.5,853.54,55,21,2,0)
during MR using either the patient-facing or staff-facing interface.
"^DD",853.5,853.54,56,0)
PRODUCT SOURCE^S^S:SINGLE SOURCE;M:MULTI SOURCE;^2;11^Q
"^DD",853.5,853.54,56,3)
Choose Product Source (S = Single Source, M = Multi Source).
"^DD",853.5,853.54,56,21,0)
^^3^3^3150108^
"^DD",853.5,853.54,56,21,1,0)
This field contains the Product Source (Single or Multi). Single Source 
"^DD",853.5,853.54,56,21,2,0)
refers to a Brand Name while Multi Source usually refers to a generic 
"^DD",853.5,853.54,56,21,3,0)
drug.
"^DD",853.5,853.54,56,"DT")
3150108
"^DD",853.5,853.54,57,0)
PRODUCT NAME^P50.68'^PSNDF(50.68,^2;12^Q
"^DD",853.5,853.54,57,3)
Select Product from VA PRODUCT file.
"^DD",853.5,853.54,57,21,0)
^^2^2^3150108^^
"^DD",853.5,853.54,57,21,1,0)
This is the VA Product entered in Medication Review module. The value was 
"^DD",853.5,853.54,57,21,2,0)
retrieved from CDW database.
"^DD",853.5,853.54,57,"DT")
3150108
"^DD",853.5,853.54,58,0)
VET VIEW MED IMAGE INDICATOR^S^Y:YES;N:NO;^0;23^Q
"^DD",853.5,853.54,58,3)
Is MIL medication image shown in Vet-View of Staff-facing?
"^DD",853.5,853.54,58,21,0)
^^2^2^3150112^
"^DD",853.5,853.54,58,21,1,0)
This field indicates whether or not the MIL medication image was shown in 
"^DD",853.5,853.54,58,21,2,0)
Veteran View of Staff-Facing module.
"^DD",853.5,853.54,58,"DT")
3150112
"^DD",853.5,853.5423,0)
MEDICATION COMMENTS PATIENT SUB-FIELD^^.01^1
"^DD",853.5,853.5423,0,"DT")
3121031
"^DD",853.5,853.5423,0,"NM","MEDICATION COMMENTS PATIENT")

"^DD",853.5,853.5423,0,"UP")
853.54
"^DD",853.5,853.5423,.01,0)
MEDICATION COMMENTS PATIENT^Wx^^0;1
"^DD",853.5,853.5423,.01,3)
Enter medication comments entered by patient.
"^DD",853.5,853.5423,.01,21,0)
^^1^1^3121228^
"^DD",853.5,853.5423,.01,21,1,0)
This is the comments about the medication entered by patient during MR.
"^DD",853.5,853.5423,.01,23,0)
^^1^1^3121031^
"^DD",853.5,853.5423,.01,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.5423,.01,"DT")
3121228
"^DD",853.5,853.5424,0)
MEDICATION COMMENTS STAFF VIEW SUB-FIELD^^.01^1
"^DD",853.5,853.5424,0,"DT")
3121031
"^DD",853.5,853.5424,0,"NM","MEDICATION COMMENTS STAFF VIEW")

"^DD",853.5,853.5424,0,"UP")
853.54
"^DD",853.5,853.5424,.01,0)
MEDICATION COMMENTS STAFF VIEW^Wx^^0;1
"^DD",853.5,853.5424,.01,3)
Enter the medication comment entered in the staff-view.
"^DD",853.5,853.5424,.01,21,0)
^^2^2^3121228^
"^DD",853.5,853.5424,.01,21,1,0)
This is the comments about the medication entered in the 
"^DD",853.5,853.5424,.01,21,2,0)
staff-view tab of the staff-facing module.
"^DD",853.5,853.5424,.01,23,0)
^^1^1^3121031^
"^DD",853.5,853.5424,.01,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.5424,.01,"DT")
3121228
"^DD",853.5,853.5425,0)
MEDICATION COMMENTS VET VIEW SUB-FIELD^^.01^1
"^DD",853.5,853.5425,0,"DT")
3121031
"^DD",853.5,853.5425,0,"NM","MEDICATION COMMENTS VET VIEW")

"^DD",853.5,853.5425,0,"UP")
853.54
"^DD",853.5,853.5425,.01,0)
MEDICATION COMMENTS VET VIEW^Wx^^0;1
"^DD",853.5,853.5425,.01,3)
Enter medication comments entered in vet-view.
"^DD",853.5,853.5425,.01,21,0)
^^2^2^3121228^
"^DD",853.5,853.5425,.01,21,1,0)
This is the comments about a medication entered in the Veteran view tab
"^DD",853.5,853.5425,.01,21,2,0)
of the staff-facing module.
"^DD",853.5,853.5425,.01,23,0)
^^1^1^3121031^
"^DD",853.5,853.5425,.01,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.5425,.01,"DT")
3121228
"^DD",853.5,853.5452,0)
MED DISCREPANCY INDICATORS SUB-FIELD^^.01^1
"^DD",853.5,853.5452,0,"DT")
3141219
"^DD",853.5,853.5452,0,"IX","B",853.5452,.01)

"^DD",853.5,853.5452,0,"NM","MED DISCREPANCY INDICATORS")

"^DD",853.5,853.5452,0,"UP")
853.54
"^DD",853.5,853.5452,.01,0)
MED DISCREPANCY^P853.7'^VPS(853.7,^0;1^Q
"^DD",853.5,853.5452,.01,1,0)
^.1
"^DD",853.5,853.5452,.01,1,1,0)
853.5452^B
"^DD",853.5,853.5452,.01,1,1,1)
S ^VPS(853.5,DA(3),"MRAR",DA(2),"MEDS",DA(1),"MDISCR","B",$E(X,1,30),DA)=""
"^DD",853.5,853.5452,.01,1,1,2)
K ^VPS(853.5,DA(3),"MRAR",DA(2),"MEDS",DA(1),"MDISCR","B",$E(X,1,30),DA)
"^DD",853.5,853.5452,.01,3)
Select the medication discrepancy indicator.
"^DD",853.5,853.5452,.01,21,0)
^^2^2^3141219^
"^DD",853.5,853.5452,.01,21,1,0)
This field contains the medication discrepancy indicators selected during 
"^DD",853.5,853.5452,.01,21,2,0)
MR using either patient or staff facing interface.
"^DD",853.5,853.5452,.01,"DT")
3141219
"^DD",853.5,853.5454,0)
MED CHANGED INDICATORS SUB-FIELD^^.01^1
"^DD",853.5,853.5454,0,"DT")
3150115
"^DD",853.5,853.5454,0,"IX","B",853.5454,.01)

"^DD",853.5,853.5454,0,"NM","MED CHANGED INDICATORS")

"^DD",853.5,853.5454,0,"UP")
853.54
"^DD",853.5,853.5454,.01,0)
MED CHANGED^P853.7'^VPS(853.7,^0;1^Q
"^DD",853.5,853.5454,.01,1,0)
^.1
"^DD",853.5,853.5454,.01,1,1,0)
853.5454^B
"^DD",853.5,853.5454,.01,1,1,1)
S ^VPS(853.5,DA(3),"MRAR",DA(2),"MEDS",DA(1),"MCHG","B",$E(X,1,30),DA)=""
"^DD",853.5,853.5454,.01,1,1,2)
K ^VPS(853.5,DA(3),"MRAR",DA(2),"MEDS",DA(1),"MCHG","B",$E(X,1,30),DA)
"^DD",853.5,853.5454,.01,3)
Select the medication changed indicator.
"^DD",853.5,853.5454,.01,21,0)
^^1^1^3150115^
"^DD",853.5,853.5454,.01,21,1,0)
This field contains the medication changed indicators selected.
"^DD",853.5,853.5454,.01,"DT")
3150115
"^DD",853.5,853.5455,0)
MED CONFIRMED INDICATORS SUB-FIELD^^.01^1
"^DD",853.5,853.5455,0,"DT")
3141219
"^DD",853.5,853.5455,0,"IX","B",853.5455,.01)

"^DD",853.5,853.5455,0,"NM","MED CONFIRMED INDICATORS")

"^DD",853.5,853.5455,0,"UP")
853.54
"^DD",853.5,853.5455,.01,0)
MED CONFIRMED^P853.7'^VPS(853.7,^0;1^Q
"^DD",853.5,853.5455,.01,1,0)
^.1
"^DD",853.5,853.5455,.01,1,1,0)
853.5455^B
"^DD",853.5,853.5455,.01,1,1,1)
S ^VPS(853.5,DA(3),"MRAR",DA(2),"MEDS",DA(1),"MCNFR","B",$E(X,1,30),DA)=""
"^DD",853.5,853.5455,.01,1,1,2)
K ^VPS(853.5,DA(3),"MRAR",DA(2),"MEDS",DA(1),"MCNFR","B",$E(X,1,30),DA)
"^DD",853.5,853.5455,.01,3)
Select the medication confirmed indicator.
"^DD",853.5,853.5455,.01,21,0)
^^1^1^3150107^
"^DD",853.5,853.5455,.01,21,1,0)
This field contains the medication confirmed indicators selected.
"^DD",853.5,853.5455,.01,"DT")
3141219
"^DD",853.5,853.55,0)
ADDITIONAL MEDICATIONS SUB-FIELD^^12^13
"^DD",853.5,853.55,0,"DT")
3130520
"^DD",853.5,853.55,0,"IX","B",853.55,.01)

"^DD",853.5,853.55,0,"NM","ADDITIONAL MEDICATIONS")

"^DD",853.5,853.55,0,"UP")
853.51
"^DD",853.5,853.55,.01,0)
ADDITIONAL MEDICATIONS ENTRY #^MNJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.55,.01,1,0)
^.1
"^DD",853.5,853.55,.01,1,1,0)
853.55^B
"^DD",853.5,853.55,.01,1,1,1)
S ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDSADD","B",$E(X,1,30),DA)=""
"^DD",853.5,853.55,.01,1,1,2)
K ^VPS(853.5,DA(2),"MRAR",DA(1),"MEDSADD","B",$E(X,1,30),DA)
"^DD",853.5,853.55,.01,3)
Enter additional medication entry # (a 1 to 10 digits number, 0 decimal digits).
"^DD",853.5,853.55,.01,21,0)
^^2^2^3121228^
"^DD",853.5,853.55,.01,21,1,0)
This field contains the additional medications entry number sent by
"^DD",853.5,853.55,.01,21,2,0)
Vetlink.
"^DD",853.5,853.55,.01,"DT")
3121228
"^DD",853.5,853.55,1,0)
PATIENT-FACING ADD MEDICATION^F^^0;2^K:$L(X)>100!($L(X)<3) X
"^DD",853.5,853.55,1,3)
Enter the name of additional medication entered by patient (3-100 characters).
"^DD",853.5,853.55,1,21,0)
^^3^3^3121228^
"^DD",853.5,853.55,1,21,1,0)
This field contains the text entered by patient in the 
"^DD",853.5,853.55,1,21,2,0)
"Name/Directions/Frequency" text box of additional medication in 
"^DD",853.5,853.55,1,21,3,0)
patient-facing interface.
"^DD",853.5,853.55,1,23,0)
^^1^1^3121102^
"^DD",853.5,853.55,1,23,1,0)
 Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,1,"DT")
3121228
"^DD",853.5,853.55,2,0)
STAFF VIEW ADD MEDICATION^F^^1;1^K:$L(X)>100!($L(X)<3) X
"^DD",853.5,853.55,2,3)
Enter the name of additional medication entered in staff-view (3-100 characters).
"^DD",853.5,853.55,2,21,0)
^^3^3^3121228^
"^DD",853.5,853.55,2,21,1,0)
This field contains text entered by the provider in the 
"^DD",853.5,853.55,2,21,2,0)
"Name/Dose/Indication" text box of the additional medication in
"^DD",853.5,853.55,2,21,3,0)
staff-facing module's staff view tab.
"^DD",853.5,853.55,2,23,0)
^^1^1^3121102^
"^DD",853.5,853.55,2,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,2,"DT")
3130603
"^DD",853.5,853.55,3,0)
VET VIEW ADD MEDICATION^F^^1;2^K:$L(X)>100!($L(X)<3) X
"^DD",853.5,853.55,3,3)
Enter the name of additional medication in vet-view (3-100 characters).
"^DD",853.5,853.55,3,21,0)
^^3^3^3121228^
"^DD",853.5,853.55,3,21,1,0)
This field contains the text entered by provider in the 
"^DD",853.5,853.55,3,21,2,0)
"Name/Dose/Indication" of additional medication in the staff-facing
"^DD",853.5,853.55,3,21,3,0)
module's vet view tab.
"^DD",853.5,853.55,3,23,0)
^^1^1^3121102^
"^DD",853.5,853.55,3,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,3,"DT")
3130523
"^DD",853.5,853.55,4,0)
VET PLANS TO DISCUSS ADD MED^S^Y:YES;N:NO;^1;3^Q
"^DD",853.5,853.55,4,3)
Is "I Plan to Discuss with My Provider" checked by patient?
"^DD",853.5,853.55,4,21,0)
^^2^2^3121228^
"^DD",853.5,853.55,4,21,1,0)
This field indicates whether the "I Plan to Discuss with My Provider" box
"^DD",853.5,853.55,4,21,2,0)
was checked at the medication freetext comment screen or not.
"^DD",853.5,853.55,4,23,0)
^^1^1^3121102^
"^DD",853.5,853.55,4,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,4,"DT")
3121228
"^DD",853.5,853.55,5,0)
ADD MED FREQUENCY (PATIENT)^S^1:1 times a day;2:2 times a day;3:3 times a day;4:4 times a day;5:As Needed;6:Other;^0;3^Q
"^DD",853.5,853.55,5,3)
Choose number of times a day the medication is being taken by the patient.
"^DD",853.5,853.55,5,21,0)
^^3^3^3130520^
"^DD",853.5,853.55,5,21,1,0)
This is the number of times a day the medication is being taken by 
"^DD",853.5,853.55,5,21,2,0)
the patient using additional medication interface of patient-facing 
"^DD",853.5,853.55,5,21,3,0)
module.
"^DD",853.5,853.55,5,23,0)
^^1^1^3121102^
"^DD",853.5,853.55,5,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,5,"DT")
3130520
"^DD",853.5,853.55,6,0)
ADD MED DIRECTIONS (PATIENT)^F^^0;4^K:$L(X)>35!($L(X)<3) X
"^DD",853.5,853.55,6,3)
Enter the medication directions (3-35 characters).
"^DD",853.5,853.55,6,21,0)
^^2^2^3121228^
"^DD",853.5,853.55,6,21,1,0)
This field contains the medication directions that was entered using the 
"^DD",853.5,853.55,6,21,2,0)
patient-facing interface in the Additional Medications form.
"^DD",853.5,853.55,6,23,0)
^^1^1^3121102^
"^DD",853.5,853.55,6,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,6,"DT")
3130510
"^DD",853.5,853.55,7,0)
ADD MED COMMENTS-STAFF VIEW^853.557^^AMCOMM;0
"^DD",853.5,853.55,7,21,0)
^^2^2^3130117^
"^DD",853.5,853.55,7,21,1,0)
This field contains the additional medication comments entered in the 
"^DD",853.5,853.55,7,21,2,0)
staff-view of staff-facing module.
"^DD",853.5,853.55,7,"DT")
3121126
"^DD",853.5,853.55,8,0)
ADD MED DOSE (STAFF)^F^^1;4^K:$L(X)>35!($L(X)<3) X
"^DD",853.5,853.55,8,3)
Answer must be 3-35 characters in length.
"^DD",853.5,853.55,8,21,0)
^^2^2^3121102^
"^DD",853.5,853.55,8,21,1,0)
The dosage for the additional medication entered by the staff in the
"^DD",853.5,853.55,8,21,2,0)
staff-facing interface.
"^DD",853.5,853.55,8,23,0)
^^1^1^3121102^
"^DD",853.5,853.55,8,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,8,"DT")
3130603
"^DD",853.5,853.55,9,0)
ADD MEDS-MARK FOR FOLLOW-UP^S^S:STAFF-FACING STAFF VIEW;V:STAFF-FACING VET VIEW;^1;5^Q
"^DD",853.5,853.55,9,3)
Is additional medication 'Mark for follow-up' checked in vet-view or staff-view?
"^DD",853.5,853.55,9,21,0)
^^3^3^3121228^
"^DD",853.5,853.55,9,21,1,0)
This field indicates whether the additional medication 'Mark for Follow
"^DD",853.5,853.55,9,21,2,0)
Up' box was checked in the staff-facing module's staff view or in the vet
"^DD",853.5,853.55,9,21,3,0)
view.
"^DD",853.5,853.55,9,23,0)
^^1^1^3121102^
"^DD",853.5,853.55,9,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,9,"DT")
3121228
"^DD",853.5,853.55,10,0)
ADD MED INDICATION (STAFF)^F^^2;1^K:$L(X)>35!($L(X)<3) X
"^DD",853.5,853.55,10,3)
Answer must be 3-35 characters in length.
"^DD",853.5,853.55,10,21,0)
^^2^2^3130604^
"^DD",853.5,853.55,10,21,1,0)
The indication for the additional medication entered by the staff in the
"^DD",853.5,853.55,10,21,2,0)
staff-facing interface.
"^DD",853.5,853.55,10,23,0)
^^1^1^3130604^
"^DD",853.5,853.55,10,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,10,"DT")
3130604
"^DD",853.5,853.55,11,0)
ADD MED TIME (PATIENT)^S^1:With Meals;2:Without Meals;3:In the Morning;4:At Bedtime;5:Other;^0;5^Q
"^DD",853.5,853.55,11,3)
Choose the time of day the medication is being taken by the patient.
"^DD",853.5,853.55,11,21,0)
^^3^3^3130520^
"^DD",853.5,853.55,11,21,1,0)
This field contains the time of day the medication is being taken 
"^DD",853.5,853.55,11,21,2,0)
by the patient using additional medication interface of patient-facing
"^DD",853.5,853.55,11,21,3,0)
module.
"^DD",853.5,853.55,11,23,0)
^^1^1^3121103^
"^DD",853.5,853.55,11,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.55,11,"DT")
3130520
"^DD",853.5,853.55,12,0)
ADD MED COMMENTS-VET VIEW^853.5512^^AMCOMM2;0
"^DD",853.5,853.55,12,21,0)
^^2^2^3121228^
"^DD",853.5,853.55,12,21,1,0)
This field contains the additional medication comments entered in the 
"^DD",853.5,853.55,12,21,2,0)
vet-view of staff-facing module. 
"^DD",853.5,853.5512,0)
ADD MED COMMENTS-VET VIEW SUB-FIELD^^.01^1
"^DD",853.5,853.5512,0,"DT")
3121126
"^DD",853.5,853.5512,0,"NM","ADD MED COMMENTS-VET VIEW")

"^DD",853.5,853.5512,0,"UP")
853.55
"^DD",853.5,853.5512,.01,0)
ADD MED COMMENTS-VET VIEW^Wx^^0;1
"^DD",853.5,853.5512,.01,3)
Enter additional medication comments entered in vet-view.
"^DD",853.5,853.5512,.01,21,0)
^^2^2^3121228^
"^DD",853.5,853.5512,.01,21,1,0)
This is the comments entered by the staff within the vet view screen of
"^DD",853.5,853.5512,.01,21,2,0)
the staff-facing interface additional medication module.
"^DD",853.5,853.5512,.01,23,0)
^^1^1^3121228^
"^DD",853.5,853.5512,.01,23,1,0)
Data is sent to VistA from Vetlink.
"^DD",853.5,853.5512,.01,"DT")
3121228
"^DD",853.5,853.557,0)
ADD MED COMMENTS-STAFF VIEW SUB-FIELD^^.01^1
"^DD",853.5,853.557,0,"DT")
3121102
"^DD",853.5,853.557,0,"NM","ADD MED COMMENTS-STAFF VIEW")

"^DD",853.5,853.557,0,"UP")
853.55
"^DD",853.5,853.557,.01,0)
ADD MED COMMENTS-STAFF VIEW^Wx^^0;1
"^DD",853.5,853.557,.01,3)
Data is sent to VistA from Vetlink.
"^DD",853.5,853.557,.01,21,0)
^^2^2^3121126^
"^DD",853.5,853.557,.01,21,1,0)
Staff comments entered by the staff within the staff view screen of the 
"^DD",853.5,853.557,.01,21,2,0)
staff-facing interface Additional Products module
"^DD",853.5,853.557,.01,23,0)
^^1^1^3121126^
"^DD",853.5,853.557,.01,23,1,0)
Vetlink sends the data to VistA via an RPC Broker call.
"^DD",853.5,853.557,.01,"DT")
3121126
"^DD",853.5,853.56,0)
ALLERGY COMMENTS STAFF VIEW  SUB-FIELD^^.01^1
"^DD",853.5,853.56,0,"DT")
3121031
"^DD",853.5,853.56,0,"NM","ALLERGY COMMENTS STAFF VIEW ")

"^DD",853.5,853.56,0,"UP")
853.52
"^DD",853.5,853.56,.01,0)
ALLERGY COMMENTS STAFF VIEW ^Wx^^0;1
"^DD",853.5,853.56,.01,3)
Entered Allergy Comments entered by provider in staff-facing's staff view tab.
"^DD",853.5,853.56,.01,"DT")
3130118
"^DD",853.5,853.57,0)
REACTIONS SUB-FIELD^^.04^4
"^DD",853.5,853.57,0,"DT")
3130522
"^DD",853.5,853.57,0,"IX","B",853.57,.01)

"^DD",853.5,853.57,0,"NM","REACTIONS")

"^DD",853.5,853.57,0,"UP")
853.52
"^DD",853.5,853.57,.01,0)
REACTION ENTRY #^NJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.57,.01,1,0)
^.1
"^DD",853.5,853.57,.01,1,1,0)
853.57^B
"^DD",853.5,853.57,.01,1,1,1)
S ^VPS(853.5,DA(3),"MRAR",DA(2),"ALLERGY",DA(1),"REACTIONS","B",$E(X,1,30),DA)=""
"^DD",853.5,853.57,.01,1,1,2)
K ^VPS(853.5,DA(3),"MRAR",DA(2),"ALLERGY",DA(1),"REACTIONS","B",$E(X,1,30),DA)
"^DD",853.5,853.57,.01,1,1,"%D",0)
^^1^1^3150107^
"^DD",853.5,853.57,.01,1,1,"%D",1,0)
This cross reference for MRAR patient allergy reaction entry #.
"^DD",853.5,853.57,.01,3)
Enter Reaction Entry # (a 1 to 10 digit number, 0 decimal digits).
"^DD",853.5,853.57,.01,21,0)
^^3^3^3130117^
"^DD",853.5,853.57,.01,21,1,0)
This field contains a sequential number generated at the time a record is 
"^DD",853.5,853.57,.01,21,2,0)
stored in the file. It only serves to create an entry in the file and 
"^DD",853.5,853.57,.01,21,3,0)
has no other special meaning.
"^DD",853.5,853.57,.01,23,0)
^^1^1^3120912^
"^DD",853.5,853.57,.01,23,1,0)
Added by the VPS remote procedure when processing the MRAR updates
"^DD",853.5,853.57,.01,"DT")
3130117
"^DD",853.5,853.57,.02,0)
LOCAL REACTION ID^P120.83'^GMRD(120.83,^0;2^Q
"^DD",853.5,853.57,.02,3)
Select local patient allergy reaction.
"^DD",853.5,853.57,.02,21,0)
^^1^1^3130603^
"^DD",853.5,853.57,.02,21,1,0)
This is the patient allergy reaction.
"^DD",853.5,853.57,.02,23,0)
^^1^1^3120912^
"^DD",853.5,853.57,.02,23,1,0)
Vecna provides data to VistA via an RPC broker call
"^DD",853.5,853.57,.02,"DT")
3130603
"^DD",853.5,853.57,.03,0)
REMOTE REACTION ID^NJ10,0^^0;3^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.5,853.57,.03,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",853.5,853.57,.03,21,0)
^^1^1^3130603^
"^DD",853.5,853.57,.03,21,1,0)
This is the patient allergy reaction IEN in the CDW database.
"^DD",853.5,853.57,.03,23,0)
^^1^1^3120912^
"^DD",853.5,853.57,.03,23,1,0)
Vecna provides data to VistA via an RPC broker call
"^DD",853.5,853.57,.03,"DT")
3130603
"^DD",853.5,853.57,.04,0)
REMOTE REACTION NAME^F^^0;4^K:$L(X)>30!($L(X)<3) X
"^DD",853.5,853.57,.04,3)
Enter Remote Reaction Name (3-30 characters).
"^DD",853.5,853.57,.04,21,0)
^^2^2^3130603^
"^DD",853.5,853.57,.04,21,1,0)
This is the patient allergy reaction name copied from the CDW database, 
"^DD",853.5,853.57,.04,21,2,0)
as pointed by the REMOTE REACTION ID (#.03) field.
"^DD",853.5,853.57,.04,"DT")
3130603
"^DD",853.5,853.58,0)
ALLERGY COMMENTS PATIENT SUB-FIELD^^.01^1
"^DD",853.5,853.58,0,"DT")
3121228
"^DD",853.5,853.58,0,"NM","ALLERGY COMMENTS PATIENT")

"^DD",853.5,853.58,0,"UP")
853.52
"^DD",853.5,853.58,.01,0)
ALLERGY COMMENTS PATIENT^W^^0;1
"^DD",853.5,853.58,.01,3)
Enter allergy comments entered by patient in AR.
"^DD",853.5,853.58,.01,"DT")
3130509
"^DD",853.5,853.59,0)
ADD ALLERGY-PROVIDER SUB-FIELD^^.01^1
"^DD",853.5,853.59,0,"DT")
3121017
"^DD",853.5,853.59,0,"NM","ADD ALLERGY-PROVIDER")

"^DD",853.5,853.59,0,"UP")
853.53
"^DD",853.5,853.59,.01,0)
ADD ALLERGY-PROVIDER^Wx^^0;1
"^DD",853.5,853.59,.01,3)
Enter additional allergt type in by provider.
"^DD",853.5,853.59,.01,21,0)
^^2^2^3121228^
"^DD",853.5,853.59,.01,21,1,0)
This field is the Additional allergy/comments typed in by provider 
"^DD",853.5,853.59,.01,21,2,0)
in the staff facing interface.
"^DD",853.5,853.59,.01,"DT")
3121228
"^DD",853.7,853.7,0)
FIELD^^.001^4
"^DD",853.7,853.7,0,"DDA")
N
"^DD",853.7,853.7,0,"DT")
3121218
"^DD",853.7,853.7,0,"IX","B",853.7,.01)

"^DD",853.7,853.7,0,"NM","VPS MED DISCREPANCY INDICATORS")

"^DD",853.7,853.7,0,"PT",853.5452,.01)

"^DD",853.7,853.7,0,"PT",853.5454,.01)

"^DD",853.7,853.7,0,"PT",853.5455,.01)

"^DD",853.7,853.7,0,"VRPK")
VPS
"^DD",853.7,853.7,.001,0)
NUMBER^NJ4,0^^ ^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",853.7,853.7,.001,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",853.7,853.7,.001,21,0)
^^2^2^3130124^
"^DD",853.7,853.7,.001,21,1,0)
This is the internal entry number for the medication discrepancy indicator
"^DD",853.7,853.7,.001,21,2,0)
entry.
"^DD",853.7,853.7,.001,"DT")
3130124
"^DD",853.7,853.7,.01,0)
INDICATOR NAME^RF^^0;1^K:$L(X)>50!($L(X)<3)!'(X'?1P.E) X
"^DD",853.7,853.7,.01,1,0)
^.1
"^DD",853.7,853.7,.01,1,1,0)
853.7^B
"^DD",853.7,853.7,.01,1,1,1)
S ^VPS(853.7,"B",$E(X,1,30),DA)=""
"^DD",853.7,853.7,.01,1,1,2)
K ^VPS(853.7,"B",$E(X,1,30),DA)
"^DD",853.7,853.7,.01,3)
Answer must be 3-50 characters in length.
"^DD",853.7,853.7,.01,21,0)
^^3^3^3130124^
"^DD",853.7,853.7,.01,21,1,0)
This field is the name of the medication discrepancy indicator entry. It
"^DD",853.7,853.7,.01,21,2,0)
is a variation of medication changed, medication confirmed, or medication
"^DD",853.7,853.7,.01,21,3,0)
discrepancy indicator on the Kiosk.
"^DD",853.7,853.7,.01,"DT")
3130124
"^DD",853.7,853.7,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>200!($L(X)<3) X
"^DD",853.7,853.7,.02,3)
Answer must be 3-200 characters in length.
"^DD",853.7,853.7,.02,21,0)
^^2^2^3130124^
"^DD",853.7,853.7,.02,21,1,0)
This is a detailed description of the medication discrepancy indicator
"^DD",853.7,853.7,.02,21,2,0)
entry.
"^DD",853.7,853.7,.02,"DT")
3130124
"^DD",853.7,853.7,1,0)
TYPE^S^C:CONFIRMED;D:DISCREPANCY;X:CHANGED;^1;1^Q
"^DD",853.7,853.7,1,3)
Select the type of indicator.
"^DD",853.7,853.7,1,21,0)
^^1^1^3130124^
"^DD",853.7,853.7,1,21,1,0)
This is the type of medication discrepancy indicator entry.
"^DD",853.7,853.7,1,"DT")
3130124
"^DIC",853,853,0)
VPS CONFIG HISTORY^853
"^DIC",853,853,0,"GL")
^VPS(853,
"^DIC",853,853,"%",0)
^1.005^^0
"^DIC",853,853,"%D",0)
^^6^6^3130311^
"^DIC",853,853,"%D",1,0)
This file stores all the changes made to Kiosk's configuration parameters 
"^DIC",853,853,"%D",2,0)
to facilitate aggregate business intelligence. The current values of
"^DIC",853,853,"%D",3,0)
Kiosk's parameters are stored in Vetlink's KIOSK database. The business
"^DIC",853,853,"%D",4,0)
and administrative parameters are used to configure and direct MRAR
"^DIC",853,853,"%D",5,0)
behavior amongst the Vetlink KIOSK groups or Clinics. Data in this file is
"^DIC",853,853,"%D",6,0)
populated via RPC call(s) made by the Vetlink client.
"^DIC",853,"B","VPS CONFIG HISTORY",853)

"^DIC",853.3,853.3,0)
VPS ALLERGY DISCREPANCY INDICATORS^853.3
"^DIC",853.3,853.3,0,"GL")
^VPS(853.3,
"^DIC",853.3,853.3,"%",0)
^1.005^^0
"^DIC",853.3,853.3,"%D",0)
^^6^6^3130123^
"^DIC",853.3,853.3,"%D",1,0)
This file contains a list of the various indicators that Vecna will send
"^DIC",853.3,853.3,"%D",2,0)
to VistA for the accurate capture of discrepancies and non-discrepancies.
"^DIC",853.3,853.3,"%D",3,0)
A fundamental objective of MRAR is to identify allergy data omissions and
"^DIC",853.3,853.3,"%D",4,0)
medication adherence discrepancies. The Kiosk (patient facing) and the
"^DIC",853.3,853.3,"%D",5,0)
staff-facing interface allows a veteran, staff, or provider to change an
"^DIC",853.3,853.3,"%D",6,0)
allergy status (e.g., allergic to non-allergic).
"^DIC",853.3,"B","VPS ALLERGY DISCREPANCY INDICATORS",853.3)

"^DIC",853.5,853.5,0)
VPS MRAR PDO^853.5
"^DIC",853.5,853.5,0,"GL")
^VPS(853.5,
"^DIC",853.5,853.5,"%",0)
^1.005^^0
"^DIC",853.5,853.5,"%D",0)
^1.001^13^13^3150429^^^^
"^DIC",853.5,853.5,"%D",1,0)
This is the Data file for the VA Point of Service (VPS) kiosk application.
"^DIC",853.5,853.5,"%D",2,0)
Data is stored using VPS remote procedure calls that are invoked by the
"^DIC",853.5,853.5,"%D",3,0)
Vetlink Kiosk (patient-facing) or staff-facing client interface. The
"^DIC",853.5,853.5,"%D",4,0)
Vetlink system is used by the patient or staff resource at the medical
"^DIC",853.5,853.5,"%D",5,0)
center or clinic. One of the functions of the Vetlink system is for the
"^DIC",853.5,853.5,"%D",6,0)
patient/provider review of the patient's medication history and allergy
"^DIC",853.5,853.5,"%D",7,0)
history.  Each review is saved by Vetlink and then sent to VistA for
"^DIC",853.5,853.5,"%D",8,0)
storage using RPC Broker.
"^DIC",853.5,853.5,"%D",9,0)
 
"^DIC",853.5,853.5,"%D",10,0)
The data stored in this file is sorted by PATIENT where each patient entry
"^DIC",853.5,853.5,"%D",11,0)
has one or more Medication Review Allergy Review (MRAR) session instances
"^DIC",853.5,853.5,"%D",12,0)
and these MRAR instances are sorted by transaction date/time. Each session
"^DIC",853.5,853.5,"%D",13,0)
represents a complete or incomplete MRAR.
"^DIC",853.5,"B","VPS MRAR PDO",853.5)

"^DIC",853.7,853.7,0)
VPS MED DISCREPANCY INDICATORS^853.7
"^DIC",853.7,853.7,0,"GL")
^VPS(853.7,
"^DIC",853.7,853.7,"%",0)
^1.005^^0
"^DIC",853.7,853.7,"%D",0)
^^7^7^3130124^
"^DIC",853.7,853.7,"%D",1,0)
This file contains a list of the various indicators that Vetlink will send
"^DIC",853.7,853.7,"%D",2,0)
to VistA for the accurate capture of discrepancies and non-discrepancies.
"^DIC",853.7,853.7,"%D",3,0)
A fundamental objective of MRAR is to identify allergy data omissions
"^DIC",853.7,853.7,"%D",4,0)
and medication adherence discrepancies. The Kiosk (patient facing) and
"^DIC",853.7,853.7,"%D",5,0)
the staff-facing interface allows a veteran, staff, or provider to change
"^DIC",853.7,853.7,"%D",6,0)
a medication status (e.g. from 'NO, not taking' to 'Yes, taking as 
"^DIC",853.7,853.7,"%D",7,0)
written').
"^DIC",853.7,"B","VPS MED DISCREPANCY INDICATORS",853.7)

**END**
**END**
