KIDS Distribution saved on Feb 01, 2019@08:46:54
DI*22.2*9 & VPR*1*8
**KIDS**:DI*22.2*9^VPR*1.0*8^

**INSTALL NAME**
DI*22.2*9
"BLD",9427,0)
DI*22.2*9^VA FILEMAN^0^3190201^y
"BLD",9427,1,0)
^^358^358^3190124^^^^
"BLD",9427,1,1,0)
This patch provides an option to map a VistA resource to a 
"BLD",9427,1,2,0)
representation of a Summary Document Architecture (SDA) data type.
"BLD",9427,1,3,0)
 
"BLD",9427,1,4,0)
The patch includes a new ENTITY (#1.5) file.  The ENTITY file defines 
"BLD",9427,1,5,0)
the VistA resource being mapped to an SDA type.
"BLD",9427,1,6,0)
 
"BLD",9427,1,7,0)
Patch Components:
"BLD",9427,1,8,0)
-----------------
"BLD",9427,1,9,0)
 
"BLD",9427,1,10,0)
File Name (#)               Field Name (#)      New/Modified/Deleted
"BLD",9427,1,11,0)
-------------               --------------      -------------
"BLD",9427,1,12,0)
Entity (#1.5)                                   New
"BLD",9427,1,13,0)
 
"BLD",9427,1,14,0)
Form Name                    File #             New/Modified/Deleted
"BLD",9427,1,15,0)
---------                    ------             --------------------
"BLD",9427,1,16,0)
DDE ENTITY ENTER/EDIT        1.5                New
"BLD",9427,1,17,0)
 
"BLD",9427,1,18,0)
Option Name                  Type               New/Modified/Deleted
"BLD",9427,1,19,0)
-----------                  ----               --------------------
"BLD",9427,1,20,0)
Entity Enter/Edit            
"BLD",9427,1,21,0)
[DDE ENTITY ENTER/EDIT]      run routine        New
"BLD",9427,1,22,0)
Entity Mapping             
"BLD",9427,1,23,0)
[DDE ENTITY MAPPING]         menu               New
"BLD",9427,1,24,0)
Other Options[DIOTHER]       menu               Modified
"BLD",9427,1,25,0)
 
"BLD",9427,1,26,0)
 
"BLD",9427,1,27,0)
Input Template               File #             New/Modified/Deleted
"BLD",9427,1,28,0)
--------------               ------             --------------------
"BLD",9427,1,29,0)
DDE EDIT ENITY               1.5                New
"BLD",9427,1,30,0)
 
"BLD",9427,1,31,0)
 
"BLD",9427,1,32,0)
Blood Bank Clearance:
"BLD",9427,1,33,0)
---------------------
"BLD",9427,1,34,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch DI*22.2*9 contains
"BLD",9427,1,35,0)
changes to a package referenced in ProPath standard titled: BBM Team
"BLD",9427,1,36,0)
Review of VistA Patches. This patch does not alter or modify any VistA
"BLD",9427,1,37,0)
Blood Bank software design safeguards or safety critical elements
"BLD",9427,1,38,0)
functions.
"BLD",9427,1,39,0)
 
"BLD",9427,1,40,0)
RISK ANALYSIS: Changes made by patch DI*22.2*9 have no effect on Blood
"BLD",9427,1,41,0)
Bank software functionality, therefore RISK's none. 
"BLD",9427,1,42,0)
 
"BLD",9427,1,43,0)
 
"BLD",9427,1,44,0)
Test Sites:
"BLD",9427,1,45,0)
-----------
"BLD",9427,1,46,0)
Charleston, SC
"BLD",9427,1,47,0)
North Chicago, IL
"BLD",9427,1,48,0)
 
"BLD",9427,1,49,0)
Software and Documentation Retrieval Instructions:
"BLD",9427,1,50,0)
-------------------------------------------------- 
"BLD",9427,1,51,0)
Software is being released as a host file and documentation describing
"BLD",9427,1,52,0)
the new functionality introduced by this patch is available.
"BLD",9427,1,53,0)
 
"BLD",9427,1,54,0)
The preferred method is to retrieve files from download.vista.domain.ext.
"BLD",9427,1,55,0)
This transmits the files from the first available server. Sites may 
"BLD",9427,1,56,0)
also elect to retrieve files directly from a specific server. 
"BLD",9427,1,57,0)
Sites may retrieve the software and/or documentation directly using 
"BLD",9427,1,58,0)
Secure Transfer Protocol (SFTP) from the ANONYMOUS.SOFTWARE directory 
"BLD",9427,1,59,0)
at the following OI Field Offices:
"BLD",9427,1,60,0)
   
"BLD",9427,1,61,0)
Hines:                  fo-hines.domain.ext    
"BLD",9427,1,62,0)
Salt Lake City:         fo-slc.domain.ext
"BLD",9427,1,63,0)
 
"BLD",9427,1,64,0)
Software                  File Name                   SFTP Mode
"BLD",9427,1,65,0)
----------------------------------------------------------------------
"BLD",9427,1,66,0)
VPR*1*8 & DI*22.2*9       DI_222_9_VPR_1_8.KID        ASCII
"BLD",9427,1,67,0)
 
"BLD",9427,1,68,0)
 
"BLD",9427,1,69,0)
Documentation can also be found on the VA Software Documentation Library 
"BLD",9427,1,70,0)
at: http://www.domain.ext/vdl/ 
"BLD",9427,1,71,0)
 
"BLD",9427,1,72,0)
Title                          File Name                 SFTP Mode
"BLD",9427,1,73,0)
-----------------------------------------------------------------------
"BLD",9427,1,74,0)
FileMan 22.2 Technical Manual  FM22_2TM.PDF              Binary
"BLD",9427,1,75,0)
 
"BLD",9427,1,76,0)
 
"BLD",9427,1,77,0)
Patch Installation:
"BLD",9427,1,78,0)
-------------------
"BLD",9427,1,79,0)
Software is being released as a host file, DI_222_9_VPR_1_8.KID.  The host
"BLD",9427,1,80,0)
file contains two patches; DI*22.2*9 and VPR*1*8.
"BLD",9427,1,81,0)
 
"BLD",9427,1,82,0)
Patches DI*22.2*9 and VPR*1*8 are scheduled to be released nationally as a
"BLD",9427,1,83,0)
bundle.  Installation of these patches into Production within the first 15
"BLD",9427,1,84,0)
days from the National Release date is requested. The VA leadership has asked
"BLD",9427,1,85,0)
for an expedited release to comply with the schedule for the high profile
"BLD",9427,1,86,0)
Mission Act.  Certain functionality has to be loaded into production in 130
"BLD",9427,1,87,0)
VA Medical Centers within a short timeframe.  We appreciate your cooperation.
"BLD",9427,1,88,0)
 
"BLD",9427,1,89,0)
 
"BLD",9427,1,90,0)
Pre-Installation Instructions:
"BLD",9427,1,91,0)
------------------------------
"BLD",9427,1,92,0)
This patch may be installed with users on the system although it is
"BLD",9427,1,93,0)
recommended that it be installed during non-peak hours to minimize
"BLD",9427,1,94,0)
potential disruption to users.  This patch should take less than
"BLD",9427,1,95,0)
2 minutes to install.
"BLD",9427,1,96,0)
 
"BLD",9427,1,97,0)
NOTE: This patch was created with VA FileMan 22.2, so please ensure
"BLD",9427,1,98,0)
the target system has also been upgraded to this version, otherwise
"BLD",9427,1,99,0)
installation will fail.
"BLD",9427,1,100,0)
 
"BLD",9427,1,101,0)
 
"BLD",9427,1,102,0)
Installation Instructions:
"BLD",9427,1,103,0)
--------------------------
"BLD",9427,1,104,0)
 1.  From the Kernel Installation and Distribution System (KIDS) Menu,
"BLD",9427,1,105,0)
     select the Installation menu. 
"BLD",9427,1,106,0)
 2.  Use Load a Distribution. You may need to precede the host file name
"BLD",9427,1,107,0)
     with a directory name.
"BLD",9427,1,108,0)
 3.  From the Kernel Installation and Distribution System Menu, select
"BLD",9427,1,109,0)
     the Installation Menu.  From this menu, you may elect to use the
"BLD",9427,1,110,0)
     following options. When prompted for the INSTALL NAME, enter DI*22.2*9.
"BLD",9427,1,111,0)
   a.  Backup a Transport Global - This option will create a backup message
"BLD",9427,1,112,0)
       of any routines exported with this patch. It will not backup any other
"BLD",9427,1,113,0)
       changes such as DDs or templates.
"BLD",9427,1,114,0)
   b.  Compare Transport Global to Current System - This option will allow
"BLD",9427,1,115,0)
       you to view all changes that will be made when this patch is installed.
"BLD",9427,1,116,0)
       It compares all components of this patch.
"BLD",9427,1,117,0)
   c.  Verify Checksums in Transport Global - This option will allow you to
"BLD",9427,1,118,0)
       ensure the integrity of the routines that are in the transport global.
"BLD",9427,1,119,0)
 4.  From the Installation Menu, select the Install Package(s) option and
"BLD",9427,1,120,0)
     when prompted for the INSTALL NAME, enter DI*22.2*9.
"BLD",9427,1,121,0)
 5.  When prompted "Want KIDS to Rebuild Menu Trees Upon Completion of
"BLD",9427,1,122,0)
     Install? NO//" enter NO.
"BLD",9427,1,123,0)
 6.  When prompted "Want KIDS to INHIBIT LOGONs during the install? NO//"
"BLD",9427,1,124,0)
     enter NO.
"BLD",9427,1,125,0)
 7.  When prompted "Want to DISABLE Scheduled Options, Menu Options,
"BLD",9427,1,126,0)
     and Protocols? NO//" enter NO.
"BLD",9427,1,127,0)
 8.  If prompted "Delay Install (Minutes):  (0  60): 0//" enter 0.
"BLD",9427,1,128,0)
 
"BLD",9427,1,129,0)
 
"BLD",9427,1,130,0)
Example Install:
"BLD",9427,1,131,0)
 
"BLD",9427,1,132,0)
Select OPTION NAME: XPD MAIN       Kernel Installation & Distribution System
"BLD",9427,1,133,0)
 
"BLD",9427,1,134,0)
   Edits and Distribution ...
"BLD",9427,1,135,0)
   Utilities ...
"BLD",9427,1,136,0)
   Installation ...
"BLD",9427,1,137,0)
 
"BLD",9427,1,138,0)
Select Kernel Installation & Distribution System <TEST> Option: INstallation
"BLD",9427,1,139,0)
 
"BLD",9427,1,140,0)
   1      Load a Distribution
"BLD",9427,1,141,0)
   2      Verify Checksums in Transport Global
"BLD",9427,1,142,0)
   3      Print Transport Global
"BLD",9427,1,143,0)
   4      Compare Transport Global to Current System
"BLD",9427,1,144,0)
   5      Backup a Transport Global
"BLD",9427,1,145,0)
   6      Install Package(s)
"BLD",9427,1,146,0)
          Restart Install of Package(s)
"BLD",9427,1,147,0)
          Unload a Distribution
"BLD",9427,1,148,0)
 
"BLD",9427,1,149,0)
Select Installation <TEST> Option: 1  Load a Distribution
"BLD",9427,1,150,0)
Enter a Host File: /srv/vista/oak/user/hfs/DI_222_9_VPR_1_8.KID
"BLD",9427,1,151,0)
 
"BLD",9427,1,152,0)
KIDS Distribution saved on Oct 02, 2018@10:54:44
"BLD",9427,1,153,0)
Comment: Combined patches DI*22.2*9 and VPR*1*8
"BLD",9427,1,154,0)
 
"BLD",9427,1,155,0)
This Distribution contains Transport Globals for the following Package(s):
"BLD",9427,1,156,0)
   DI*22.2*9
"BLD",9427,1,157,0)
   VPR*1.0*8
"BLD",9427,1,158,0)
Distribution OK!
"BLD",9427,1,159,0)
 
"BLD",9427,1,160,0)
Want to Continue with Load? YES// 
"BLD",9427,1,161,0)
Loading Distribution...
"BLD",9427,1,162,0)
 
"BLD",9427,1,163,0)
   DI*22.2*9
"BLD",9427,1,164,0)
   VPR*1.0*8
"BLD",9427,1,165,0)
Use INSTALL NAME: DI*22.2*9 to install this Distribution.
"BLD",9427,1,166,0)
 
"BLD",9427,1,167,0)
   1      Load a Distribution
"BLD",9427,1,168,0)
   2      Verify Checksums in Transport Global
"BLD",9427,1,169,0)
   3      Print Transport Global
"BLD",9427,1,170,0)
   4      Compare Transport Global to Current System
"BLD",9427,1,171,0)
   5      Backup a Transport Global
"BLD",9427,1,172,0)
   6      Install Package(s)
"BLD",9427,1,173,0)
          Restart Install of Package(s)
"BLD",9427,1,174,0)
          Unload a Distribution
"BLD",9427,1,175,0)
 
"BLD",9427,1,176,0)
 
"BLD",9427,1,177,0)
Select Installation <TEST> Option: 6  Install Package(s)
"BLD",9427,1,178,0)
Select INSTALL NAME: DI*22.2*9       Loaded from Distribution    10/2/18@12:43:4
"BLD",9427,1,179,0)
7
"BLD",9427,1,180,0)
     => Combined patches DI*22.2*9 and VPR*1*8  ;Created on Oct 02, 2018@10:54
"BLD",9427,1,181,0)
 
"BLD",9427,1,182,0)
This Distribution was loaded on Oct 02, 2018@12:43:47 with header of 
"BLD",9427,1,183,0)
   Combined patches DI*22.2*9 and VPR*1*8  ;Created on Oct 02, 2018@10:54:44
"BLD",9427,1,184,0)
   It consisted of the following Install(s):
"BLD",9427,1,185,0)
      DI*22.2*9      VPR*1.0*8
"BLD",9427,1,186,0)
Checking Install for Package DI*22.2*9
"BLD",9427,1,187,0)
 
"BLD",9427,1,188,0)
Install Questions for DI*22.2*9
"BLD",9427,1,189,0)
 
"BLD",9427,1,190,0)
Incoming Files:
"BLD",9427,1,191,0)
 
"BLD",9427,1,192,0)
 
"BLD",9427,1,193,0)
   1.5       ENTITY
"BLD",9427,1,194,0)
 
"BLD",9427,1,195,0)
Want KIDS to Rebuild Menu Trees Upon Completion of Install? NO// 
"BLD",9427,1,196,0)
 
"BLD",9427,1,197,0)
Checking Install for Package VPR*1.0*8
"BLD",9427,1,198,0)
 
"BLD",9427,1,199,0)
Install Questions for VPR*1.0*8
"BLD",9427,1,200,0)
 
"BLD",9427,1,201,0)
Incoming Files:
"BLD",9427,1,202,0)
 
"BLD",9427,1,203,0)
 
"BLD",9427,1,204,0)
   560       VPR SUBSCRIPTION
"BLD",9427,1,205,0)
 
"BLD",9427,1,206,0)
Want KIDS to Rebuild Menu Trees Upon Completion of Install? NO// 
"BLD",9427,1,207,0)
 
"BLD",9427,1,208,0)
 
"BLD",9427,1,209,0)
Want KIDS to INHIBIT LOGONs during the install? NO// 
"BLD",9427,1,210,0)
Want to DISABLE Scheduled Options, Menu Options, and Protocols? NO// 
"BLD",9427,1,211,0)
 
"BLD",9427,1,212,0)
Enter the Device you want to print the Install messages.
"BLD",9427,1,213,0)
You can queue the install by enter a 'Q' at the device prompt.
"BLD",9427,1,214,0)
Enter a '^' to abort the install.
"BLD",9427,1,215,0)
 
"BLD",9427,1,216,0)
DEVICE: HOME//   NETWORK
"BLD",9427,1,217,0)
 
"BLD",9427,1,218,0)
 
"BLD",9427,1,219,0)
 
"BLD",9427,1,220,0)
Post-Installation Instructions:
"BLD",9427,1,221,0)
-------------------------------
"BLD",9427,1,222,0)
None
"BLD",9427,1,223,0)
 
"BLD",9427,1,224,0)
 
"BLD",9427,1,225,0)
Backout and Rollback Procedure:
"BLD",9427,1,226,0)
-------------------------------
"BLD",9427,1,227,0)
During the VistA Installation Procedure of the KIDS build, the 
"BLD",9427,1,228,0)
installer should back up the modified routines by the use of the
"BLD",9427,1,229,0)
'Backup a Transport Global' action (step 3a in the Installations 
"BLD",9427,1,230,0)
Instructions below).
"BLD",9427,1,231,0)
 
"BLD",9427,1,232,0)
If rollback/backout is required, the installer can use the MailMan
"BLD",9427,1,233,0)
message to restore the routines to previous state. 
"BLD",9427,1,234,0)
 
"BLD",9427,1,235,0)
To backout the ENTITY (#1.5) file and DDE EDIT ENTITY input template, use 
"BLD",9427,1,236,0)
the EN^DIU2 API. Caution should be taken when using this API. For more 
"BLD",9427,1,237,0)
information on usage of this API see FileMan 22.2 Developer Guide. The
"BLD",9427,1,238,0)
following is an example execution to remove files and input template:
"BLD",9427,1,239,0)
 
"BLD",9427,1,240,0)
S DIU=1.5,DIU(0)="DT" D EN^DIU2
"BLD",9427,1,241,0)
 
"BLD",9427,1,242,0)
To rollback/backout DDE options exported with this patch, may be disabled
"BLD",9427,1,243,0)
by using VA FileMan to assign an Out of Order message as follows:
"BLD",9427,1,244,0)
 
"BLD",9427,1,245,0)
VA FileMan 22.2
"BLD",9427,1,246,0)
 
"BLD",9427,1,247,0)
 
"BLD",9427,1,248,0)
Select OPTION: 1  ENTER OR EDIT FILE ENTRIES
"BLD",9427,1,249,0)
 
"BLD",9427,1,250,0)
 
"BLD",9427,1,251,0)
Input to what File: OPTION//              (11330 entries)
"BLD",9427,1,252,0)
EDIT WHICH FIELD: ALL// OUT OF ORDER MESSAGE  
"BLD",9427,1,253,0)
THEN EDIT FIELD: 
"BLD",9427,1,254,0)
 
"BLD",9427,1,255,0)
 
"BLD",9427,1,256,0)
Select OPTION NAME: Entity Mapping       DDE ENTITY MAPPING
"BLD",9427,1,257,0)
OUT OF ORDER MESSAGE: ROLLBACK PATCH DI*22.2*9
"BLD",9427,1,258,0)
 
"BLD",9427,1,259,0)
Select OPTION NAME: 
"BLD",9427,1,260,0)
 
"BLD",9427,1,261,0)
To rollback/backout DDE form exported with this patch, use VA FileMan
"BLD",9427,1,262,0)
[DDS DELETE A FORM] option as follows:
"BLD",9427,1,263,0)
 
"BLD",9427,1,264,0)
VA FileMan 22.2
"BLD",9427,1,265,0)
 
"BLD",9427,1,266,0)
 
"BLD",9427,1,267,0)
Select OPTION: OTHER OPTIONS  
"BLD",9427,1,268,0)
Select OTHER OPTION: SCREENMAN  
"BLD",9427,1,269,0)
Select SCREENMAN OPTION: DELETE A FORM  
"BLD",9427,1,270,0)
 
"BLD",9427,1,271,0)
Delete Form for what File: OPTION// ENTITY    (2 entries)
"BLD",9427,1,272,0)
 
"BLD",9427,1,273,0)
Select FORM to delete: DDE ENTITY ENTER/EDIT  DDE ENTITY ENTER/EDIT
"BLD",9427,1,274,0)
         #165    3/6/18                 File #1.5
"BLD",9427,1,275,0)
 
"BLD",9427,1,276,0)
 
"BLD",9427,1,277,0)
  BLOCKS USED ON FORM "DDE ENTITY ENTER/EDIT" (IEN #165)
"BLD",9427,1,278,0)
 
"BLD",9427,1,279,0)
 Internal                                        Used on
"BLD",9427,1,280,0)
 Entry Number    Block Name                      Other Forms?  Deletable?
"BLD",9427,1,281,0)
 ------------    -------------                   ------------  ----------
"BLD",9427,1,282,0)
  602            DDE ENTITY HEADER                    NO            YES
"BLD",9427,1,283,0)
  603            DDE ENTITY 1                         NO            YES
"BLD",9427,1,284,0)
  604            DDE ITEMS                            NO            YES
"BLD",9427,1,285,0)
  605            DDE ENTITY 2                         NO            YES
"BLD",9427,1,286,0)
  606            DDE ENTITY 3                         NO            YES
"BLD",9427,1,287,0)
  607            DDE ITEM FIXED                       NO            YES
"BLD",9427,1,288,0)
  608            DDE ITEM ID                          NO            YES
"BLD",9427,1,289,0)
  609            DDE ITEM SIMPLE                      NO            YES
"BLD",9427,1,290,0)
  610            DDE ITEM WORD PROC                   NO            YES
"BLD",9427,1,291,0)
  611            DDE ITEM COMPLEX                     NO            YES
"BLD",9427,1,292,0)
  612            DDE ITEM ENTITY                      NO            YES
"BLD",9427,1,293,0)
  613            DDE ITEM LIST                        NO            YES
"BLD",9427,1,294,0)
  614            DDE COMPLEX LIST                     NO            YES
"BLD",9427,1,295,0)
  615            DDE LIST FILE                        NO            YES
"BLD",9427,1,296,0)
  616            DDE LIST COMPLEX                     NO            YES
"BLD",9427,1,297,0)
  617            DDE LIST COMPLEX ITEMS               NO            YES
"BLD",9427,1,298,0)
 
"BLD",9427,1,299,0)
 
"BLD",9427,1,300,0)
Delete all deletable blocks used on form DDE ENTITY ENTER/EDIT
"BLD",9427,1,301,0)
from the BLOCK file (Y/N)? YES// 
"BLD",9427,1,302,0)
 
"BLD",9427,1,303,0)
 
"BLD",9427,1,304,0)
Delete blocks without prompting (Y/N)? NO// y  YES
"BLD",9427,1,305,0)
 
"BLD",9427,1,306,0)
Continue (Y/N)? NO// YES
"BLD",9427,1,307,0)
 
"BLD",9427,1,308,0)
Deleting form DDE ENTITY ENTER/EDIT (IEN #165) ...
"BLD",9427,1,309,0)
 
"BLD",9427,1,310,0)
Deleting block DDE ENTITY HEADER (IEN #602) ...
"BLD",9427,1,311,0)
Deleting block DDE ENTITY 1 (IEN #603) ...
"BLD",9427,1,312,0)
Deleting block DDE ITEMS (IEN #604) ...
"BLD",9427,1,313,0)
Deleting block DDE ENTITY 2 (IEN #605) ...
"BLD",9427,1,314,0)
Deleting block DDE ENTITY 3 (IEN #606) ...
"BLD",9427,1,315,0)
Deleting block DDE ITEM FIXED (IEN #607) ...
"BLD",9427,1,316,0)
Deleting block DDE ITEM ID (IEN #608) ...
"BLD",9427,1,317,0)
Deleting block DDE ITEM SIMPLE (IEN #609) ...
"BLD",9427,1,318,0)
Deleting block DDE ITEM WORD PROC (IEN #610) ...
"BLD",9427,1,319,0)
Deleting block DDE ITEM COMPLEX (IEN #611) ...
"BLD",9427,1,320,0)
Deleting block DDE ITEM ENTITY (IEN #612) ...
"BLD",9427,1,321,0)
Deleting block DDE ITEM LIST (IEN #613) ...
"BLD",9427,1,322,0)
Deleting block DDE COMPLEX LIST (IEN #614) ...
"BLD",9427,1,323,0)
Deleting block DDE LIST FILE (IEN #615) ...
"BLD",9427,1,324,0)
Deleting block DDE LIST COMPLEX (IEN #616) ...
"BLD",9427,1,325,0)
Deleting block DDE LIST COMPLEX ITEMS (IEN #617) ...
"BLD",9427,1,326,0)
 
"BLD",9427,1,327,0)
DONE!
"BLD",9427,1,328,0)
 
"BLD",9427,1,329,0)
 
"BLD",9427,1,330,0)
Routine Information:
"BLD",9427,1,331,0)
====================
"BLD",9427,1,332,0)
 
"BLD",9427,1,333,0)
The second line of each of these routines now looks like:
"BLD",9427,1,334,0)
 ;;22.2;VA FileMan;**[Patch List]**;Jan 05, 2016;Build 46
"BLD",9427,1,335,0)
 
"BLD",9427,1,336,0)
The checksums below are new checksums, and
"BLD",9427,1,337,0)
 can be checked with CHECK1^XTSUMBLD.
"BLD",9427,1,338,0)
 
"BLD",9427,1,339,0)
Routine Name: DDE
"BLD",9427,1,340,0)
    Before:       n/a   After:  B4683326  **9**
"BLD",9427,1,341,0)
Routine Name: DDE1A
"BLD",9427,1,342,0)
    Before:       n/a   After:   B737990  **9**
"BLD",9427,1,343,0)
Routine Name: DDEG
"BLD",9427,1,344,0)
    Before:       n/a   After:B122631592  **9**
"BLD",9427,1,345,0)
Routine Name: DDEGET
"BLD",9427,1,346,0)
    Before:       n/a   After: B10359109  **9**
"BLD",9427,1,347,0)
Routine Name: DDEMAP
"BLD",9427,1,348,0)
    Before:       n/a   After: B44771305  **9**
"BLD",9427,1,349,0)
Routine Name: DDEOPT
"BLD",9427,1,350,0)
    Before:       n/a   After:   B794105  **9**
"BLD",9427,1,351,0)
Routine Name: DDERR
"BLD",9427,1,352,0)
    Before:       n/a   After:   B683652  **9**
"BLD",9427,1,353,0)
Routine Name: DDEX
"BLD",9427,1,354,0)
    Before:       n/a   After:  B1026050  **9**
"BLD",9427,1,355,0)
Routine Name: DII1
"BLD",9427,1,356,0)
    Before:  B2240976   After:  B2361298  **8,10,9**
"BLD",9427,1,357,0)
 
"BLD",9427,1,358,0)
Routine list of preceding patches: 10
"BLD",9427,4,0)
^9.64PA^1.5^1
"BLD",9427,4,1.5,0)
1.5
"BLD",9427,4,1.5,222)
y^y^f^^^^n
"BLD",9427,4,"B",1.5,1.5)

"BLD",9427,6.3)
73
"BLD",9427,"ABPKG")
n^n
"BLD",9427,"KRN",0)
^9.67PA^1.5^24
"BLD",9427,"KRN",.4,0)
.4
"BLD",9427,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9427,"KRN",.401,0)
.401
"BLD",9427,"KRN",.401,"NM",0)
^9.68A^^
"BLD",9427,"KRN",.402,0)
.402
"BLD",9427,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",9427,"KRN",.402,"NM",1,0)
DDE EDIT ENTITY    FILE #1.5^1.5^0
"BLD",9427,"KRN",.402,"NM","B","DDE EDIT ENTITY    FILE #1.5",1)

"BLD",9427,"KRN",.403,0)
.403
"BLD",9427,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",9427,"KRN",.403,"NM",1,0)
DDE ENTITY ENTER/EDIT    FILE #1.5^1.5^0
"BLD",9427,"KRN",.403,"NM","B","DDE ENTITY ENTER/EDIT    FILE #1.5",1)

"BLD",9427,"KRN",.5,0)
.5
"BLD",9427,"KRN",.84,0)
.84
"BLD",9427,"KRN",1.5,0)
1.5
"BLD",9427,"KRN",1.5,"NM",0)
^9.68A^^
"BLD",9427,"KRN",1.6,0)
1.6
"BLD",9427,"KRN",1.61,0)
1.61
"BLD",9427,"KRN",1.62,0)
1.62
"BLD",9427,"KRN",3.6,0)
3.6
"BLD",9427,"KRN",3.8,0)
3.8
"BLD",9427,"KRN",9.2,0)
9.2
"BLD",9427,"KRN",9.8,0)
9.8
"BLD",9427,"KRN",9.8,"NM",0)
^9.68A^27^9
"BLD",9427,"KRN",9.8,"NM",1,0)
DDE^^0^B4683326
"BLD",9427,"KRN",9.8,"NM",8,0)
DDEGET^^0^B10359109
"BLD",9427,"KRN",9.8,"NM",21,0)
DDEG^^0^B122631592
"BLD",9427,"KRN",9.8,"NM",22,0)
DDEX^^0^B1026050
"BLD",9427,"KRN",9.8,"NM",23,0)
DDE1A^^0^B737990
"BLD",9427,"KRN",9.8,"NM",24,0)
DDEOPT^^0^B794105
"BLD",9427,"KRN",9.8,"NM",25,0)
DII1^^0^B2361298
"BLD",9427,"KRN",9.8,"NM",26,0)
DDEMAP^^0^B44771305
"BLD",9427,"KRN",9.8,"NM",27,0)
DDERR^^0^B683652
"BLD",9427,"KRN",9.8,"NM","B","DDE",1)

"BLD",9427,"KRN",9.8,"NM","B","DDE1A",23)

"BLD",9427,"KRN",9.8,"NM","B","DDEG",21)

"BLD",9427,"KRN",9.8,"NM","B","DDEGET",8)

"BLD",9427,"KRN",9.8,"NM","B","DDEMAP",26)

"BLD",9427,"KRN",9.8,"NM","B","DDEOPT",24)

"BLD",9427,"KRN",9.8,"NM","B","DDERR",27)

"BLD",9427,"KRN",9.8,"NM","B","DDEX",22)

"BLD",9427,"KRN",9.8,"NM","B","DII1",25)

"BLD",9427,"KRN",19,0)
19
"BLD",9427,"KRN",19,"NM",0)
^9.68A^7^3
"BLD",9427,"KRN",19,"NM",5,0)
DIOTHER^^2
"BLD",9427,"KRN",19,"NM",6,0)
DDE ENTITY MAPPING^^0
"BLD",9427,"KRN",19,"NM",7,0)
DDE ENTITY ENTER/EDIT^^0
"BLD",9427,"KRN",19,"NM","B","DDE ENTITY ENTER/EDIT",7)

"BLD",9427,"KRN",19,"NM","B","DDE ENTITY MAPPING",6)

"BLD",9427,"KRN",19,"NM","B","DIOTHER",5)

"BLD",9427,"KRN",19.1,0)
19.1
"BLD",9427,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9427,"KRN",101,0)
101
"BLD",9427,"KRN",101,"NM",0)
^9.68A^^
"BLD",9427,"KRN",409.61,0)
409.61
"BLD",9427,"KRN",771,0)
771
"BLD",9427,"KRN",779.2,0)
779.2
"BLD",9427,"KRN",870,0)
870
"BLD",9427,"KRN",8989.51,0)
8989.51
"BLD",9427,"KRN",8989.52,0)
8989.52
"BLD",9427,"KRN",8994,0)
8994
"BLD",9427,"KRN","B",.4,.4)

"BLD",9427,"KRN","B",.401,.401)

"BLD",9427,"KRN","B",.402,.402)

"BLD",9427,"KRN","B",.403,.403)

"BLD",9427,"KRN","B",.5,.5)

"BLD",9427,"KRN","B",.84,.84)

"BLD",9427,"KRN","B",1.5,1.5)

"BLD",9427,"KRN","B",1.6,1.6)

"BLD",9427,"KRN","B",1.61,1.61)

"BLD",9427,"KRN","B",1.62,1.62)

"BLD",9427,"KRN","B",3.6,3.6)

"BLD",9427,"KRN","B",3.8,3.8)

"BLD",9427,"KRN","B",9.2,9.2)

"BLD",9427,"KRN","B",9.8,9.8)

"BLD",9427,"KRN","B",19,19)

"BLD",9427,"KRN","B",19.1,19.1)

"BLD",9427,"KRN","B",101,101)

"BLD",9427,"KRN","B",409.61,409.61)

"BLD",9427,"KRN","B",771,771)

"BLD",9427,"KRN","B",779.2,779.2)

"BLD",9427,"KRN","B",870,870)

"BLD",9427,"KRN","B",8989.51,8989.51)

"BLD",9427,"KRN","B",8989.52,8989.52)

"BLD",9427,"KRN","B",8994,8994)

"BLD",9427,"QUES",0)
^9.62^^
"BLD",9427,"REQB",0)
^9.611^2^2
"BLD",9427,"REQB",1,0)
DI*22.2*10^1
"BLD",9427,"REQB",2,0)
XU*8.0*672^2
"BLD",9427,"REQB","B","DI*22.2*10",1)

"BLD",9427,"REQB","B","XU*8.0*672",2)

"FIA",1.5)
ENTITY
"FIA",1.5,0)
^DDE(
"FIA",1.5,0,0)
1.5I
"FIA",1.5,0,1)
y^y^f^^^^n
"FIA",1.5,0,10)

"FIA",1.5,0,11)

"FIA",1.5,0,"RLRO")

"FIA",1.5,0,"VR")
22.2^DI
"FIA",1.5,1.5)
0
"FIA",1.5,1.51)
0
"FIA",1.5,1.513)
0
"FIA",1.5,1.519)
0
"IX",1.5,1.5,"FHIR",0)
1.5^FHIR^FHIR^R^^R^IR^I^1.5^^^^^LS
"IX",1.5,1.5,"FHIR",.1,0)
^^1^1^3180720^
"IX",1.5,1.5,"FHIR",.1,1,0)
Retrieve FHIR Entities by Display Name, File#
"IX",1.5,1.5,"FHIR",1)
S ^DDE("FHIR",$E(X(2),1,30),X(3),DA)=""
"IX",1.5,1.5,"FHIR",1.4)
S X=(X="F")
"IX",1.5,1.5,"FHIR",2)
K ^DDE("FHIR",$E(X(2),1,30),X(3),DA)
"IX",1.5,1.5,"FHIR",2.4)
S X=(X="F")
"IX",1.5,1.5,"FHIR",2.5)
K ^DDE("FHIR")
"IX",1.5,1.5,"FHIR",11.1,0)
^.114IA^3^3
"IX",1.5,1.5,"FHIR",11.1,1,0)
1^F^1.5^.06^^^
"IX",1.5,1.5,"FHIR",11.1,2,0)
2^F^1.5^.1^30^1^F
"IX",1.5,1.5,"FHIR",11.1,3,0)
3^F^1.5^.02^^2^F
"IX",1.5,1.5,"SDA",0)
1.5^SDA^SDA^R^^R^IR^I^1.5^^^^^LS
"IX",1.5,1.5,"SDA",.1,0)
^^1^1^3180720^
"IX",1.5,1.5,"SDA",.1,1,0)
Retrieve SDA Entities by Display Name, File#
"IX",1.5,1.5,"SDA",1)
S ^DDE("SDA",$E(X(2),1,30),X(3),DA)=""
"IX",1.5,1.5,"SDA",1.4)
S X=(X="S")
"IX",1.5,1.5,"SDA",2)
K ^DDE("SDA",$E(X(2),1,30),X(3),DA)
"IX",1.5,1.5,"SDA",2.4)
S X=(X="S")
"IX",1.5,1.5,"SDA",2.5)
K ^DDE("SDA")
"IX",1.5,1.5,"SDA",11.1,0)
^.114IA^3^3
"IX",1.5,1.5,"SDA",11.1,1,0)
1^F^1.5^.06^^^
"IX",1.5,1.5,"SDA",11.1,2,0)
2^F^1.5^.1^30^1^F
"IX",1.5,1.5,"SDA",11.1,3,0)
3^F^1.5^.02^^2^F
"KRN",.402,2293,-1)
0^1
"KRN",.402,2293,0)
DDE EDIT ENTITY^3180228.211^@^1.5^^@^3180313
"KRN",.402,2293,"DIAB",1,2,1.513,0)
ALL
"KRN",.402,2293,"DR",1,1.5)
.01;.1;.02;S FILE=X;.06;5;I $L(X) S Y=1;.03;.04;5.1;1;2;3;4;K FILE;
"KRN",.402,2293,"DR",2,1.51)
.01;.02;.03;S TYPE=X S:TYPE'="L" Y="@1";1.02;1.01;S:X=3 Y="@3" S:X=4 Y="@4";@1;Q;.04;I TYPE'="L" S Y=$S(TYPE="I":"@6",1:"@2");1.03;1.04;1.1;@2;.05;I TYPE="W" S Y="@7";I 'X S Y=$S(TYPE="S":"@5",TYPE="C":"@3",1:"@4");.06;.07;
"KRN",.402,2293,"DR",2,1.51,1)
S Y=$S(TYPE="C":"@3",TYPE="E":"@4",1:"@6");@3;3;S Y="@7";@4;.08;S Y="@7";@5;2;S Y="@7";@6;4;5;@7;6;K TYPE;
"KRN",.402,2293,"DR",3,1.513)
.01:.02
"KRN",.403,144,-1)
0^1
"KRN",.403,144,0)
DDE ENTITY ENTER/EDIT^@^@^^3180306.1434^^^1.5^0^0^1
"KRN",.403,144,11)
S DDEFILE=$P($G(^DDE(DA,0)),U,2)
"KRN",.403,144,12)
K DDEFILE
"KRN",.403,144,40,0)
^.4031I^12^12
"KRN",.403,144,40,1,0)
1^^1,1^2^3
"KRN",.403,144,40,1,1)
Page 1
"KRN",.403,144,40,1,40,0)
^.4032IP^541^2
"KRN",.403,144,40,1,40,540,0)
DDE ENTITY HEADER^1^1,1^d
"KRN",.403,144,40,1,40,541,0)
DDE ENTITY 1^2^1,1^e
"KRN",.403,144,40,2,0)
2^^1,1^3^1
"KRN",.403,144,40,2,1)
Page 2
"KRN",.403,144,40,2,40,0)
^.4032IP^543^3
"KRN",.403,144,40,2,40,540,0)
DDE ENTITY HEADER^1^1,1^d
"KRN",.403,144,40,2,40,542,0)
DDE ITEMS^3^6,1^e
"KRN",.403,144,40,2,40,542,2)
12^B^f
"KRN",.403,144,40,2,40,543,0)
DDE ENTITY 2^2^1,1^d
"KRN",.403,144,40,3,0)
3^^1,1^1^2
"KRN",.403,144,40,3,1)
Page 3
"KRN",.403,144,40,3,40,0)
^.4032IP^544^2
"KRN",.403,144,40,3,40,540,0)
DDE ENTITY HEADER^1^1,1^d
"KRN",.403,144,40,3,40,544,0)
DDE ENTITY 3^2^1,1^e
"KRN",.403,144,40,4,0)
2.1^^6,1^^^1^17,79
"KRN",.403,144,40,4,1)
Page 2.1
"KRN",.403,144,40,4,40,0)
^.4032IP^546^1
"KRN",.403,144,40,4,40,546,0)
DDE ITEM FIXED^1^2,2^e
"KRN",.403,144,40,5,0)
2.2^^6,1^^^1^17,79
"KRN",.403,144,40,5,1)
Page 2.2
"KRN",.403,144,40,5,40,0)
^.4032IP^547^1
"KRN",.403,144,40,5,40,547,0)
DDE ITEM ID^1^2,2^e
"KRN",.403,144,40,6,0)
2.3^^6,1^^^1^17,79
"KRN",.403,144,40,6,1)
Page 2.3
"KRN",.403,144,40,6,40,0)
^.4032IP^548^1
"KRN",.403,144,40,6,40,548,0)
DDE ITEM SIMPLE^1^2,2^e
"KRN",.403,144,40,7,0)
2.4^^6,1^^^1^15,79
"KRN",.403,144,40,7,1)
Page 2.4
"KRN",.403,144,40,7,40,0)
^.4032IP^549^1
"KRN",.403,144,40,7,40,549,0)
DDE ITEM WORD PROC^1^2,2^e
"KRN",.403,144,40,8,0)
2.5^^6,1^^^1^17,79
"KRN",.403,144,40,8,1)
Page 2.5
"KRN",.403,144,40,8,40,0)
^.4032IP^553^2
"KRN",.403,144,40,8,40,550,0)
DDE ITEM COMPLEX^1^2,2^e
"KRN",.403,144,40,8,40,553,0)
DDE COMPLEX LIST^2^6,2^e
"KRN",.403,144,40,8,40,553,2)
6^B^f
"KRN",.403,144,40,8,40,553,"COMP MUL")

"KRN",.403,144,40,8,40,553,"COMP MUL PTR")

"KRN",.403,144,40,9,0)
2.6^^6,1^^^1^17,79
"KRN",.403,144,40,9,1)
Page 2.6
"KRN",.403,144,40,9,40,0)
^.4032IP^551^1
"KRN",.403,144,40,9,40,551,0)
DDE ITEM ENTITY^1^2,2^e
"KRN",.403,144,40,10,0)
2.7^^6,1^^^1^17,79
"KRN",.403,144,40,10,1)
Page 2.7
"KRN",.403,144,40,10,40,0)
^.4032IP^552^1
"KRN",.403,144,40,10,40,552,0)
DDE ITEM LIST^1^2,2^e
"KRN",.403,144,40,11,0)
2.8^^7,2^^^1^16,77
"KRN",.403,144,40,11,1)
Page 2.8
"KRN",.403,144,40,11,40,0)
^.4032IP^554^1
"KRN",.403,144,40,11,40,554,0)
DDE LIST FILE^1^2,2^e
"KRN",.403,144,40,12,0)
2.9^^7,2^^^1^16,77
"KRN",.403,144,40,12,1)
Page 2.9
"KRN",.403,144,40,12,12)

"KRN",.403,144,40,12,40,0)
^.4032IP^557^2
"KRN",.403,144,40,12,40,555,0)
DDE LIST COMPLEX^1^2,2^e
"KRN",.403,144,40,12,40,557,0)
DDE LIST COMPLEX ITEMS^2^5,2^e
"KRN",.403,144,40,12,40,557,2)
5^B^f
"KRN",.403,144,40,12,40,557,"COMP MUL")

"KRN",.403,144,40,12,40,557,"COMP MUL PTR")

"KRN",.404,540,0)
DDE ENTITY HEADER^1.5^
"KRN",.404,540,40,0)
^.4044I^4^4
"KRN",.404,540,40,1,0)
1^Edit Entity^1
"KRN",.404,540,40,1,2)
^^1,35
"KRN",.404,540,40,2,0)
2^NAME^3
"KRN",.404,540,40,2,1)
.01
"KRN",.404,540,40,2,2)
2,7^30^2,1
"KRN",.404,540,40,2,4)
1^^^1
"KRN",.404,540,40,3,0)
3^Page   of 3^1
"KRN",.404,540,40,3,2)
^^2,69
"KRN",.404,540,40,4,0)
4^!M^1
"KRN",.404,540,40,4,.1)
S $P(Y,"-",80)=""
"KRN",.404,540,40,4,2)
^^3,1
"KRN",.404,541,0)
DDE ENTITY 1^1.5
"KRN",.404,541,40,0)
^.4044I^11^11
"KRN",.404,541,40,1,0)
1^1^1
"KRN",.404,541,40,1,2)
^^2,74
"KRN",.404,541,40,2,0)
2^NAME^3
"KRN",.404,541,40,2,1)
.01
"KRN",.404,541,40,2,2)
5,16^30^5,10
"KRN",.404,541,40,3,0)
3^ DISPLAY NAME^3
"KRN",.404,541,40,3,1)
.1
"KRN",.404,541,40,3,2)
6,16^65^6,1
"KRN",.404,541,40,4,0)
4^DEFAULT FILE^3
"KRN",.404,541,40,4,1)
.02
"KRN",.404,541,40,4,2)
8,16^21^8,2
"KRN",.404,541,40,4,12)
S DDEFILE=X
"KRN",.404,541,40,5,0)
5^SORT BY^3
"KRN",.404,541,40,5,1)
.03
"KRN",.404,541,40,5,2)
10,16^15^10,7
"KRN",.404,541,40,6,0)
6^FILTER BY^3
"KRN",.404,541,40,6,1)
.04
"KRN",.404,541,40,6,2)
11,16^8^11,5
"KRN",.404,541,40,7,0)
8^DATA MODEL^3
"KRN",.404,541,40,7,1)
.06
"KRN",.404,541,40,7,2)
10,58^4^10,46
"KRN",.404,541,40,8,0)
9^READ ONLY^3
"KRN",.404,541,40,8,1)
.05
"KRN",.404,541,40,8,2)
11,58^8^11,47
"KRN",.404,541,40,9,0)
7^ SCREEN^3
"KRN",.404,541,40,9,1)
5.1
"KRN",.404,541,40,9,2)
12,16^65^12,7
"KRN",.404,541,40,10,0)
10^QUERY ROUTINE^3
"KRN",.404,541,40,10,1)
5
"KRN",.404,541,40,10,2)
14,16^55^14,1
"KRN",.404,541,40,11,0)
11^DESCRIPTION^3
"KRN",.404,541,40,11,1)
19
"KRN",.404,541,40,11,2)
16,16^1^16,3
"KRN",.404,542,0)
DDE ITEMS^1.51
"KRN",.404,542,40,0)
^.4044I^5^5
"KRN",.404,542,40,1,0)
2^^3
"KRN",.404,542,40,1,1)
.02
"KRN",.404,542,40,1,2)
1,32^5
"KRN",.404,542,40,2,0)
1^^3
"KRN",.404,542,40,2,1)
.01
"KRN",.404,542,40,2,2)
1,1^30
"KRN",.404,542,40,3,0)
3^^3
"KRN",.404,542,40,3,1)
.03
"KRN",.404,542,40,3,2)
1,40^1
"KRN",.404,542,40,3,10)
S:X'="" DDSSTACK=$S(X="F":2.1,X="I":2.2,X="S":2.3,X="W":2.4,X="C":2.5,X="E":2.6,X="L":2.7,1:2.3)
"KRN",.404,542,40,4,0)
4^^3
"KRN",.404,542,40,4,1)
.05
"KRN",.404,542,40,4,2)
1,44^11
"KRN",.404,542,40,4,4)
^^^1
"KRN",.404,542,40,5,0)
5^^3
"KRN",.404,542,40,5,1)
.04
"KRN",.404,542,40,5,2)
1,56^11
"KRN",.404,542,40,5,4)
^^^1
"KRN",.404,543,0)
DDE ENTITY 2^1.5^
"KRN",.404,543,40,0)
^.4044I^6^6
"KRN",.404,543,40,1,0)
1^2^1
"KRN",.404,543,40,1,2)
^^2,74
"KRN",.404,543,40,2,0)
2^Item^1
"KRN",.404,543,40,2,2)
^^5,1
"KRN",.404,543,40,3,0)
3^Seq^1
"KRN",.404,543,40,3,2)
^^5,32
"KRN",.404,543,40,4,0)
4^Type^1
"KRN",.404,543,40,4,2)
^^5,38
"KRN",.404,543,40,5,0)
5^Field^1
"KRN",.404,543,40,5,2)
^^5,44
"KRN",.404,543,40,6,0)
6^Sub/File^1
"KRN",.404,543,40,6,2)
^^5,56
"KRN",.404,544,0)
DDE ENTITY 3^1.5
"KRN",.404,544,40,0)
^.4044I^9^9
"KRN",.404,544,40,1,0)
1^3^1
"KRN",.404,544,40,1,2)
^^2,74
"KRN",.404,544,40,2,0)
2^GET  PRE PROCESSING^3
"KRN",.404,544,40,2,1)
2
"KRN",.404,544,40,2,2)
5,22^59^5,1
"KRN",.404,544,40,3,0)
3^GET POST PROCESSING^3
"KRN",.404,544,40,3,1)
3
"KRN",.404,544,40,3,2)
6,22^58^6,1
"KRN",.404,544,40,4,0)
4^GET   ID PROCESSING^3
"KRN",.404,544,40,4,1)
4
"KRN",.404,544,40,4,2)
7,22^60^7,1
"KRN",.404,544,40,5,0)
5^GET POLICY^3
"KRN",.404,544,40,5,1)
19.1
"KRN",.404,544,40,5,2)
9,22^30^9,10
"KRN",.404,544,40,6,0)
6^PUT  PRE PROCESSING^3
"KRN",.404,544,40,6,1)
6
"KRN",.404,544,40,6,2)
12,22^59^12,1
"KRN",.404,544,40,7,0)
7^PUT POST PROCESSING^3
"KRN",.404,544,40,7,1)
7
"KRN",.404,544,40,7,2)
13,22^58^13,1
"KRN",.404,544,40,8,0)
8^PUT   ID PROCESSING^3
"KRN",.404,544,40,8,1)
8
"KRN",.404,544,40,8,2)
14,22^60^14,1
"KRN",.404,544,40,9,0)
9^PUT POLICY^3
"KRN",.404,544,40,9,1)
19.2
"KRN",.404,544,40,9,2)
16,22^30^16,10
"KRN",.404,546,0)
DDE ITEM FIXED^1.51
"KRN",.404,546,40,0)
^.4044I^2^2
"KRN",.404,546,40,1,0)
1^FIXED RESPONSE^3
"KRN",.404,546,40,1,1)
2
"KRN",.404,546,40,1,2)
2,17^57^2,1
"KRN",.404,546,40,2,0)
2^GET PROCESSING^3
"KRN",.404,546,40,2,1)
6
"KRN",.404,546,40,2,2)
5,17^57^5,1
"KRN",.404,547,0)
DDE ITEM ID^1.51
"KRN",.404,547,40,0)
^.4044I^3^3
"KRN",.404,547,40,1,0)
2^OUTPUT TRANSFORM^3
"KRN",.404,547,40,1,1)
4
"KRN",.404,547,40,1,2)
5,19^57^5,1
"KRN",.404,547,40,2,0)
3^INPUT TRANSFORM^3
"KRN",.404,547,40,2,1)
5
"KRN",.404,547,40,2,2)
6,19^57^6,2
"KRN",.404,547,40,3,0)
1^GET PROCESSING^3
"KRN",.404,547,40,3,1)
6
"KRN",.404,547,40,3,2)
2,19^57^2,3
"KRN",.404,548,0)
DDE ITEM SIMPLE^1.51
"KRN",.404,548,40,0)
^.4044I^7^4
"KRN",.404,548,40,1,0)
1^FILE#^3
"KRN",.404,548,40,1,1)
.04
"KRN",.404,548,40,1,2)
2,50^21^2,43
"KRN",.404,548,40,1,3)
!M
"KRN",.404,548,40,1,3.1)
S Y=$G(DDEFILE)
"KRN",.404,548,40,1,12)
S DDEFN=X
"KRN",.404,548,40,2,0)
2^FIELD#^3
"KRN",.404,548,40,2,1)
.05
"KRN",.404,548,40,2,2)
2,19^21^2,11
"KRN",.404,548,40,2,14)
I $G(X),$G(DDEFN),'($D(^DD(+DDEFN,X,0))#2) S DDSERROR=1
"KRN",.404,548,40,3,0)
3^EXT PTR LKUP^3
"KRN",.404,548,40,3,1)
.06
"KRN",.404,548,40,3,2)
3,19^21^3,5
"KRN",.404,548,40,4,0)
4^INTERNAL VALUE^3
"KRN",.404,548,40,4,1)
.07
"KRN",.404,548,40,4,2)
4,19^3^4,3
"KRN",.404,548,40,5,0)
6^OUTPUT TRANSFORM^3
"KRN",.404,548,40,5,1)
4
"KRN",.404,548,40,5,2)
8,19^57^8,1
"KRN",.404,548,40,6,0)
7^INPUT TRANSFORM^3
"KRN",.404,548,40,6,1)
5
"KRN",.404,548,40,6,2)
9,19^57^9,2
"KRN",.404,548,40,7,0)
5^GET PROCESSING^3
"KRN",.404,548,40,7,1)
6
"KRN",.404,548,40,7,2)
6,19^57^6,3
"KRN",.404,549,0)
DDE ITEM WORD PROC^1.51
"KRN",.404,549,40,0)
^.4044I^5^5
"KRN",.404,549,40,1,0)
1^FILE#^3
"KRN",.404,549,40,1,1)
.04
"KRN",.404,549,40,1,2)
2,50^21^2,43
"KRN",.404,549,40,1,3)
!M
"KRN",.404,549,40,1,3.1)
S Y=$G(DDEFILE)
"KRN",.404,549,40,1,12)
S DDEFN=X
"KRN",.404,549,40,2,0)
2^FIELD#^3
"KRN",.404,549,40,2,1)
.05
"KRN",.404,549,40,2,2)
2,17^21^2,9
"KRN",.404,549,40,2,14)
I $G(X),$G(DDEFN),'($D(^DD(+DDEFN,+X,0))#2) S DDSERROR=1
"KRN",.404,549,40,3,0)
5^GET PROCESSING^3
"KRN",.404,549,40,3,1)
6
"KRN",.404,549,40,3,2)
6,17^57^6,1
"KRN",.404,549,40,4,0)
3^EXT PTR LKUP^3
"KRN",.404,549,40,4,1)
.06
"KRN",.404,549,40,4,2)
3,17^21^3,3
"KRN",.404,549,40,5,0)
4^WORD WRAP^3
"KRN",.404,549,40,5,1)
.09
"KRN",.404,549,40,5,2)
4,17^3^4,6
"KRN",.404,550,0)
DDE ITEM COMPLEX^1.51
"KRN",.404,550,40,0)
^.4044I^2^2
"KRN",.404,550,40,1,0)
1^GET PROCESSING^3
"KRN",.404,550,40,1,1)
6
"KRN",.404,550,40,1,2)
2,18^57^2,2
"KRN",.404,550,40,2,0)
2^Seq   Item^1
"KRN",.404,550,40,2,2)
^^4,4
"KRN",.404,551,0)
DDE ITEM ENTITY^1.51
"KRN",.404,551,40,0)
^.4044I^8^8
"KRN",.404,551,40,1,0)
1^FILE#^3
"KRN",.404,551,40,1,1)
.04
"KRN",.404,551,40,1,2)
1,50^21^1,43
"KRN",.404,551,40,1,3)
!M
"KRN",.404,551,40,1,3.1)
S Y=$G(DDEFILE)
"KRN",.404,551,40,1,12)
S DDEFN=X
"KRN",.404,551,40,2,0)
8^ENTITY^3
"KRN",.404,551,40,2,1)
.08
"KRN",.404,551,40,2,2)
10,19^30^10,11
"KRN",.404,551,40,3,0)
2^FIELD#^3
"KRN",.404,551,40,3,1)
.05
"KRN",.404,551,40,3,2)
1,19^21^1,11
"KRN",.404,551,40,3,14)
I $G(X),$G(DDEFN),'($D(^DD(+DDEFN,+X,0))#2) S DDSERROR=1
"KRN",.404,551,40,4,0)
3^EXT PTR LKUP^3
"KRN",.404,551,40,4,1)
.06
"KRN",.404,551,40,4,2)
2,19^21^2,5
"KRN",.404,551,40,5,0)
4^INTERNAL VALUE^3
"KRN",.404,551,40,5,1)
.07
"KRN",.404,551,40,5,2)
3,19^3^3,3
"KRN",.404,551,40,6,0)
5^GET PROCESSING^3
"KRN",.404,551,40,6,1)
6
"KRN",.404,551,40,6,2)
5,19^59^5,3
"KRN",.404,551,40,7,0)
6^OUTPUT TRANSFORM^3
"KRN",.404,551,40,7,1)
4
"KRN",.404,551,40,7,2)
7,19^59^7,1
"KRN",.404,551,40,8,0)
7^INPUT TRANSFORM^3
"KRN",.404,551,40,8,1)
5
"KRN",.404,551,40,8,2)
8,19^59^8,2
"KRN",.404,552,0)
DDE ITEM LIST^1.51
"KRN",.404,552,40,0)
^.4044I^8^8
"KRN",.404,552,40,1,0)
1^LIST TYPE^3
"KRN",.404,552,40,1,1)
1.01
"KRN",.404,552,40,1,2)
1,18^7^1,7
"KRN",.404,552,40,1,10)
S:X=3 DDSSTACK=2.9 S:X<3 DDSSTACK=2.8
"KRN",.404,552,40,1,12)
S DDELST=X
"KRN",.404,552,40,2,0)
2^GET PROCESSING^3
"KRN",.404,552,40,2,1)
6
"KRN",.404,552,40,2,2)
3,18^57^3,2
"KRN",.404,552,40,2,10)
S:DDELST=3 DDSBR="XML TAG"
"KRN",.404,552,40,3,0)
4^ENTITY^3
"KRN",.404,552,40,3,1)
.08
"KRN",.404,552,40,3,2)
6,10^30^6,2
"KRN",.404,552,40,4,0)
8^XML TAG^3
"KRN",.404,552,40,4,1)
1.02
"KRN",.404,552,40,4,2)
10,10^57^10,1
"KRN",.404,552,40,5,0)
3^Select the Entity or Field to be returned for each record:^1
"KRN",.404,552,40,5,2)
^^5,2
"KRN",.404,552,40,6,0)
5^FIELD#^3
"KRN",.404,552,40,6,1)
.05
"KRN",.404,552,40,6,2)
6,51^21^6,43
"KRN",.404,552,40,6,14)
I $G(DDEFN),'($D(^DD(+DDEFN,X,0))#2) S DDSERROR=1
"KRN",.404,552,40,7,0)
6^EXT PTR^3
"KRN",.404,552,40,7,1)
.06
"KRN",.404,552,40,7,2)
7,51^13^7,42
"KRN",.404,552,40,8,0)
7^INT VAL^3
"KRN",.404,552,40,8,1)
.07
"KRN",.404,552,40,8,2)
8,51^3^8,42
"KRN",.404,553,0)
DDE COMPLEX LIST^1.513
"KRN",.404,553,40,0)
^.4044I^2^2
"KRN",.404,553,40,1,0)
1^^3
"KRN",.404,553,40,1,1)
.01
"KRN",.404,553,40,1,2)
1,2^5
"KRN",.404,553,40,1,4)
^^1
"KRN",.404,553,40,2,0)
2^^3
"KRN",.404,553,40,2,1)
.02
"KRN",.404,553,40,2,2)
1,10^48
"KRN",.404,554,0)
DDE LIST FILE^1.51
"KRN",.404,554,40,0)
^.4044I^9^5
"KRN",.404,554,40,1,0)
2^FILE#^3
"KRN",.404,554,40,1,1)
.04
"KRN",.404,554,40,1,2)
3,12^21^3,5
"KRN",.404,554,40,1,12)
S DDEFN=X
"KRN",.404,554,40,6,0)
3^XREF^3
"KRN",.404,554,40,6,1)
1.03
"KRN",.404,554,40,6,2)
4,12^15^4,6
"KRN",.404,554,40,7,0)
4^FILTER BY^3
"KRN",.404,554,40,7,1)
1.04
"KRN",.404,554,40,7,2)
5,12^8^5,1
"KRN",.404,554,40,8,0)
5^SCREEN^3
"KRN",.404,554,40,8,1)
1.1
"KRN",.404,554,40,8,2)
7,12^60^7,4
"KRN",.404,554,40,9,0)
1^Define the sub/file search for the desired records:^1
"KRN",.404,554,40,9,2)
^^1,1
"KRN",.404,555,0)
DDE LIST COMPLEX^1.51
"KRN",.404,555,40,0)
^.4044I^2^2
"KRN",.404,555,40,1,0)
2^Seq  Item^1
"KRN",.404,555,40,1,2)
^^3,6
"KRN",.404,555,40,2,0)
1^Select the Entity Items to return the desired values for this list:^1
"KRN",.404,555,40,2,2)
^^1,2
"KRN",.404,557,0)
DDE LIST COMPLEX ITEMS^1.513
"KRN",.404,557,40,0)
^.4044I^2^2
"KRN",.404,557,40,1,0)
1^^3
"KRN",.404,557,40,1,1)
.01
"KRN",.404,557,40,1,2)
1,2^7
"KRN",.404,557,40,1,4)
^^1
"KRN",.404,557,40,2,0)
2^^3
"KRN",.404,557,40,2,1)
.02
"KRN",.404,557,40,2,2)
1,11^44
"KRN",19,5148,-1)
2^5
"KRN",19,5148,0)
DIOTHER^Other Options^^M^1114^^^^^^^^^
"KRN",19,5148,10,0)
^19.01IP^11^11
"KRN",19,5148,10,11,0)
14405^^11
"KRN",19,5148,10,11,"^")
DDE ENTITY MAPPING
"KRN",19,5148,"U")
OTHER OPTIONS
"KRN",19,14396,-1)
0^7
"KRN",19,14396,0)
DDE ENTITY ENTER/EDIT^Entity Enter/Edit^^R^^^^^^^^VA FILEMAN
"KRN",19,14396,1,0)
^19.06^1^1^3170307^^
"KRN",19,14396,1,1,0)
This option is used to enter/edit an entry for the ENTITY File(#1.5).
"KRN",19,14396,25)
EN^DDE1A
"KRN",19,14396,"U")
ENTITY ENTER/EDIT
"KRN",19,14405,-1)
0^6
"KRN",19,14405,0)
DDE ENTITY MAPPING^Entity Mapping^^M^^^^^^^^VA FILEMAN
"KRN",19,14405,1,0)
^^2^2^3180801^
"KRN",19,14405,1,1,0)
This menu contains options that allow creation and management of Entities
"KRN",19,14405,1,2,0)
for mapping VistA data to other data models.
"KRN",19,14405,10,0)
^19.01IP^2^2
"KRN",19,14405,10,1,0)
14396^^1
"KRN",19,14405,10,1,"^")
DDE ENTITY ENTER/EDIT
"KRN",19,14405,99)
64884,47218
"KRN",19,14405,"U")
ENTITY MAPPING
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",11,-1)
1^1
"PKG",11,0)
VA FILEMAN^DI^FM INIT
"PKG",11,22,0)
^9.49I^1^1
"PKG",11,22,1,0)
22.2^3160105^3170227^1114
"PKG",11,22,1,"PAH",1,0)
9^3190201
"PKG",11,22,1,"PAH",1,1,0)
^^358^358^3190201
"PKG",11,22,1,"PAH",1,1,1,0)
This patch provides an option to map a VistA resource to a 
"PKG",11,22,1,"PAH",1,1,2,0)
representation of a Summary Document Architecture (SDA) data type.
"PKG",11,22,1,"PAH",1,1,3,0)
 
"PKG",11,22,1,"PAH",1,1,4,0)
The patch includes a new ENTITY (#1.5) file.  The ENTITY file defines 
"PKG",11,22,1,"PAH",1,1,5,0)
the VistA resource being mapped to an SDA type.
"PKG",11,22,1,"PAH",1,1,6,0)
 
"PKG",11,22,1,"PAH",1,1,7,0)
Patch Components:
"PKG",11,22,1,"PAH",1,1,8,0)
-----------------
"PKG",11,22,1,"PAH",1,1,9,0)
 
"PKG",11,22,1,"PAH",1,1,10,0)
File Name (#)               Field Name (#)      New/Modified/Deleted
"PKG",11,22,1,"PAH",1,1,11,0)
-------------               --------------      -------------
"PKG",11,22,1,"PAH",1,1,12,0)
Entity (#1.5)                                   New
"PKG",11,22,1,"PAH",1,1,13,0)
 
"PKG",11,22,1,"PAH",1,1,14,0)
Form Name                    File #             New/Modified/Deleted
"PKG",11,22,1,"PAH",1,1,15,0)
---------                    ------             --------------------
"PKG",11,22,1,"PAH",1,1,16,0)
DDE ENTITY ENTER/EDIT        1.5                New
"PKG",11,22,1,"PAH",1,1,17,0)
 
"PKG",11,22,1,"PAH",1,1,18,0)
Option Name                  Type               New/Modified/Deleted
"PKG",11,22,1,"PAH",1,1,19,0)
-----------                  ----               --------------------
"PKG",11,22,1,"PAH",1,1,20,0)
Entity Enter/Edit            
"PKG",11,22,1,"PAH",1,1,21,0)
[DDE ENTITY ENTER/EDIT]      run routine        New
"PKG",11,22,1,"PAH",1,1,22,0)
Entity Mapping             
"PKG",11,22,1,"PAH",1,1,23,0)
[DDE ENTITY MAPPING]         menu               New
"PKG",11,22,1,"PAH",1,1,24,0)
Other Options[DIOTHER]       menu               Modified
"PKG",11,22,1,"PAH",1,1,25,0)
 
"PKG",11,22,1,"PAH",1,1,26,0)
 
"PKG",11,22,1,"PAH",1,1,27,0)
Input Template               File #             New/Modified/Deleted
"PKG",11,22,1,"PAH",1,1,28,0)
--------------               ------             --------------------
"PKG",11,22,1,"PAH",1,1,29,0)
DDE EDIT ENITY               1.5                New
"PKG",11,22,1,"PAH",1,1,30,0)
 
"PKG",11,22,1,"PAH",1,1,31,0)
 
"PKG",11,22,1,"PAH",1,1,32,0)
Blood Bank Clearance:
"PKG",11,22,1,"PAH",1,1,33,0)
---------------------
"PKG",11,22,1,"PAH",1,1,34,0)
EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch DI*22.2*9 contains
"PKG",11,22,1,"PAH",1,1,35,0)
changes to a package referenced in ProPath standard titled: BBM Team
"PKG",11,22,1,"PAH",1,1,36,0)
Review of VistA Patches. This patch does not alter or modify any VistA
"PKG",11,22,1,"PAH",1,1,37,0)
Blood Bank software design safeguards or safety critical elements
"PKG",11,22,1,"PAH",1,1,38,0)
functions.
"PKG",11,22,1,"PAH",1,1,39,0)
 
"PKG",11,22,1,"PAH",1,1,40,0)
RISK ANALYSIS: Changes made by patch DI*22.2*9 have no effect on Blood
"PKG",11,22,1,"PAH",1,1,41,0)
Bank software functionality, therefore RISK's none. 
"PKG",11,22,1,"PAH",1,1,42,0)
 
"PKG",11,22,1,"PAH",1,1,43,0)
 
"PKG",11,22,1,"PAH",1,1,44,0)
Test Sites:
"PKG",11,22,1,"PAH",1,1,45,0)
-----------
"PKG",11,22,1,"PAH",1,1,46,0)
Charleston, SC
"PKG",11,22,1,"PAH",1,1,47,0)
North Chicago, IL
"PKG",11,22,1,"PAH",1,1,48,0)
 
"PKG",11,22,1,"PAH",1,1,49,0)
Software and Documentation Retrieval Instructions:
"PKG",11,22,1,"PAH",1,1,50,0)
-------------------------------------------------- 
"PKG",11,22,1,"PAH",1,1,51,0)
Software is being released as a host file and documentation describing
"PKG",11,22,1,"PAH",1,1,52,0)
the new functionality introduced by this patch is available.
"PKG",11,22,1,"PAH",1,1,53,0)
 
"PKG",11,22,1,"PAH",1,1,54,0)
The preferred method is to retrieve files from download.vista.domain.ext.
"PKG",11,22,1,"PAH",1,1,55,0)
This transmits the files from the first available server. Sites may 
"PKG",11,22,1,"PAH",1,1,56,0)
also elect to retrieve files directly from a specific server. 
"PKG",11,22,1,"PAH",1,1,57,0)
Sites may retrieve the software and/or documentation directly using 
"PKG",11,22,1,"PAH",1,1,58,0)
Secure Transfer Protocol (SFTP) from the ANONYMOUS.SOFTWARE directory 
"PKG",11,22,1,"PAH",1,1,59,0)
at the following OI Field Offices:
"PKG",11,22,1,"PAH",1,1,60,0)
   
"PKG",11,22,1,"PAH",1,1,61,0)
Hines:                  fo-hines.domain.ext    
"PKG",11,22,1,"PAH",1,1,62,0)
Salt Lake City:         fo-slc.domain.ext
"PKG",11,22,1,"PAH",1,1,63,0)
 
"PKG",11,22,1,"PAH",1,1,64,0)
Software                  File Name                   SFTP Mode
"PKG",11,22,1,"PAH",1,1,65,0)
----------------------------------------------------------------------
"PKG",11,22,1,"PAH",1,1,66,0)
VPR*1*8 & DI*22.2*9       DI_222_9_VPR_1_8.KID        ASCII
"PKG",11,22,1,"PAH",1,1,67,0)
 
"PKG",11,22,1,"PAH",1,1,68,0)
 
"PKG",11,22,1,"PAH",1,1,69,0)
Documentation can also be found on the VA Software Documentation Library 
"PKG",11,22,1,"PAH",1,1,70,0)
at: http://www.domain.ext/vdl/ 
"PKG",11,22,1,"PAH",1,1,71,0)
 
"PKG",11,22,1,"PAH",1,1,72,0)
Title                          File Name                 SFTP Mode
"PKG",11,22,1,"PAH",1,1,73,0)
-----------------------------------------------------------------------
"PKG",11,22,1,"PAH",1,1,74,0)
FileMan 22.2 Technical Manual  FM22_2TM.PDF              Binary
"PKG",11,22,1,"PAH",1,1,75,0)
 
"PKG",11,22,1,"PAH",1,1,76,0)
 
"PKG",11,22,1,"PAH",1,1,77,0)
Patch Installation:
"PKG",11,22,1,"PAH",1,1,78,0)
-------------------
"PKG",11,22,1,"PAH",1,1,79,0)
Software is being released as a host file, DI_222_9_VPR_1_8.KID.  The host
"PKG",11,22,1,"PAH",1,1,80,0)
file contains two patches; DI*22.2*9 and VPR*1*8.
"PKG",11,22,1,"PAH",1,1,81,0)
 
"PKG",11,22,1,"PAH",1,1,82,0)
Patches DI*22.2*9 and VPR*1*8 are scheduled to be released nationally as a
"PKG",11,22,1,"PAH",1,1,83,0)
bundle.  Installation of these patches into Production within the first 15
"PKG",11,22,1,"PAH",1,1,84,0)
days from the National Release date is requested. The VA leadership has asked
"PKG",11,22,1,"PAH",1,1,85,0)
for an expedited release to comply with the schedule for the high profile
"PKG",11,22,1,"PAH",1,1,86,0)
Mission Act.  Certain functionality has to be loaded into production in 130
"PKG",11,22,1,"PAH",1,1,87,0)
VA Medical Centers within a short timeframe.  We appreciate your cooperation.
"PKG",11,22,1,"PAH",1,1,88,0)
 
"PKG",11,22,1,"PAH",1,1,89,0)
 
"PKG",11,22,1,"PAH",1,1,90,0)
Pre-Installation Instructions:
"PKG",11,22,1,"PAH",1,1,91,0)
------------------------------
"PKG",11,22,1,"PAH",1,1,92,0)
This patch may be installed with users on the system although it is
"PKG",11,22,1,"PAH",1,1,93,0)
recommended that it be installed during non-peak hours to minimize
"PKG",11,22,1,"PAH",1,1,94,0)
potential disruption to users.  This patch should take less than
"PKG",11,22,1,"PAH",1,1,95,0)
2 minutes to install.
"PKG",11,22,1,"PAH",1,1,96,0)
 
"PKG",11,22,1,"PAH",1,1,97,0)
NOTE: This patch was created with VA FileMan 22.2, so please ensure
"PKG",11,22,1,"PAH",1,1,98,0)
the target system has also been upgraded to this version, otherwise
"PKG",11,22,1,"PAH",1,1,99,0)
installation will fail.
"PKG",11,22,1,"PAH",1,1,100,0)
 
"PKG",11,22,1,"PAH",1,1,101,0)
 
"PKG",11,22,1,"PAH",1,1,102,0)
Installation Instructions:
"PKG",11,22,1,"PAH",1,1,103,0)
--------------------------
"PKG",11,22,1,"PAH",1,1,104,0)
 1.  From the Kernel Installation and Distribution System (KIDS) Menu,
"PKG",11,22,1,"PAH",1,1,105,0)
     select the Installation menu. 
"PKG",11,22,1,"PAH",1,1,106,0)
 2.  Use Load a Distribution. You may need to precede the host file name
"PKG",11,22,1,"PAH",1,1,107,0)
     with a directory name.
"PKG",11,22,1,"PAH",1,1,108,0)
 3.  From the Kernel Installation and Distribution System Menu, select
"PKG",11,22,1,"PAH",1,1,109,0)
     the Installation Menu.  From this menu, you may elect to use the
"PKG",11,22,1,"PAH",1,1,110,0)
     following options. When prompted for the INSTALL NAME, enter DI*22.2*9.
"PKG",11,22,1,"PAH",1,1,111,0)
   a.  Backup a Transport Global - This option will create a backup message
"PKG",11,22,1,"PAH",1,1,112,0)
       of any routines exported with this patch. It will not backup any other
"PKG",11,22,1,"PAH",1,1,113,0)
       changes such as DDs or templates.
"PKG",11,22,1,"PAH",1,1,114,0)
   b.  Compare Transport Global to Current System - This option will allow
"PKG",11,22,1,"PAH",1,1,115,0)
       you to view all changes that will be made when this patch is installed.
"PKG",11,22,1,"PAH",1,1,116,0)
       It compares all components of this patch.
"PKG",11,22,1,"PAH",1,1,117,0)
   c.  Verify Checksums in Transport Global - This option will allow you to
"PKG",11,22,1,"PAH",1,1,118,0)
       ensure the integrity of the routines that are in the transport global.
"PKG",11,22,1,"PAH",1,1,119,0)
 4.  From the Installation Menu, select the Install Package(s) option and
"PKG",11,22,1,"PAH",1,1,120,0)
     when prompted for the INSTALL NAME, enter DI*22.2*9.
"PKG",11,22,1,"PAH",1,1,121,0)
 5.  When prompted "Want KIDS to Rebuild Menu Trees Upon Completion of
"PKG",11,22,1,"PAH",1,1,122,0)
     Install? NO//" enter NO.
"PKG",11,22,1,"PAH",1,1,123,0)
 6.  When prompted "Want KIDS to INHIBIT LOGONs during the install? NO//"
"PKG",11,22,1,"PAH",1,1,124,0)
     enter NO.
"PKG",11,22,1,"PAH",1,1,125,0)
 7.  When prompted "Want to DISABLE Scheduled Options, Menu Options,
"PKG",11,22,1,"PAH",1,1,126,0)
     and Protocols? NO//" enter NO.
"PKG",11,22,1,"PAH",1,1,127,0)
 8.  If prompted "Delay Install (Minutes):  (0  60): 0//" enter 0.
"PKG",11,22,1,"PAH",1,1,128,0)
 
"PKG",11,22,1,"PAH",1,1,129,0)
 
"PKG",11,22,1,"PAH",1,1,130,0)
Example Install:
"PKG",11,22,1,"PAH",1,1,131,0)
 
"PKG",11,22,1,"PAH",1,1,132,0)
Select OPTION NAME: XPD MAIN       Kernel Installation & Distribution System
"PKG",11,22,1,"PAH",1,1,133,0)
 
"PKG",11,22,1,"PAH",1,1,134,0)
   Edits and Distribution ...
"PKG",11,22,1,"PAH",1,1,135,0)
   Utilities ...
"PKG",11,22,1,"PAH",1,1,136,0)
   Installation ...
"PKG",11,22,1,"PAH",1,1,137,0)
 
"PKG",11,22,1,"PAH",1,1,138,0)
Select Kernel Installation & Distribution System <TEST> Option: INstallation
"PKG",11,22,1,"PAH",1,1,139,0)
 
"PKG",11,22,1,"PAH",1,1,140,0)
   1      Load a Distribution
"PKG",11,22,1,"PAH",1,1,141,0)
   2      Verify Checksums in Transport Global
"PKG",11,22,1,"PAH",1,1,142,0)
   3      Print Transport Global
"PKG",11,22,1,"PAH",1,1,143,0)
   4      Compare Transport Global to Current System
"PKG",11,22,1,"PAH",1,1,144,0)
   5      Backup a Transport Global
"PKG",11,22,1,"PAH",1,1,145,0)
   6      Install Package(s)
"PKG",11,22,1,"PAH",1,1,146,0)
          Restart Install of Package(s)
"PKG",11,22,1,"PAH",1,1,147,0)
          Unload a Distribution
"PKG",11,22,1,"PAH",1,1,148,0)
 
"PKG",11,22,1,"PAH",1,1,149,0)
Select Installation <TEST> Option: 1  Load a Distribution
"PKG",11,22,1,"PAH",1,1,150,0)
Enter a Host File: /srv/vista/oak/user/hfs/DI_222_9_VPR_1_8.KID
"PKG",11,22,1,"PAH",1,1,151,0)
 
"PKG",11,22,1,"PAH",1,1,152,0)
KIDS Distribution saved on Oct 02, 2018@10:54:44
"PKG",11,22,1,"PAH",1,1,153,0)
Comment: Combined patches DI*22.2*9 and VPR*1*8
"PKG",11,22,1,"PAH",1,1,154,0)
 
"PKG",11,22,1,"PAH",1,1,155,0)
This Distribution contains Transport Globals for the following Package(s):
"PKG",11,22,1,"PAH",1,1,156,0)
   DI*22.2*9
"PKG",11,22,1,"PAH",1,1,157,0)
   VPR*1.0*8
"PKG",11,22,1,"PAH",1,1,158,0)
Distribution OK!
"PKG",11,22,1,"PAH",1,1,159,0)
 
"PKG",11,22,1,"PAH",1,1,160,0)
Want to Continue with Load? YES// 
"PKG",11,22,1,"PAH",1,1,161,0)
Loading Distribution...
"PKG",11,22,1,"PAH",1,1,162,0)
 
"PKG",11,22,1,"PAH",1,1,163,0)
   DI*22.2*9
"PKG",11,22,1,"PAH",1,1,164,0)
   VPR*1.0*8
"PKG",11,22,1,"PAH",1,1,165,0)
Use INSTALL NAME: DI*22.2*9 to install this Distribution.
"PKG",11,22,1,"PAH",1,1,166,0)
 
"PKG",11,22,1,"PAH",1,1,167,0)
   1      Load a Distribution
"PKG",11,22,1,"PAH",1,1,168,0)
   2      Verify Checksums in Transport Global
"PKG",11,22,1,"PAH",1,1,169,0)
   3      Print Transport Global
"PKG",11,22,1,"PAH",1,1,170,0)
   4      Compare Transport Global to Current System
"PKG",11,22,1,"PAH",1,1,171,0)
   5      Backup a Transport Global
"PKG",11,22,1,"PAH",1,1,172,0)
   6      Install Package(s)
"PKG",11,22,1,"PAH",1,1,173,0)
          Restart Install of Package(s)
"PKG",11,22,1,"PAH",1,1,174,0)
          Unload a Distribution
"PKG",11,22,1,"PAH",1,1,175,0)
 
"PKG",11,22,1,"PAH",1,1,176,0)
 
"PKG",11,22,1,"PAH",1,1,177,0)
Select Installation <TEST> Option: 6  Install Package(s)
"PKG",11,22,1,"PAH",1,1,178,0)
Select INSTALL NAME: DI*22.2*9       Loaded from Distribution    10/2/18@12:43:4
"PKG",11,22,1,"PAH",1,1,179,0)
7
"PKG",11,22,1,"PAH",1,1,180,0)
     => Combined patches DI*22.2*9 and VPR*1*8  ;Created on Oct 02, 2018@10:54
"PKG",11,22,1,"PAH",1,1,181,0)
 
"PKG",11,22,1,"PAH",1,1,182,0)
This Distribution was loaded on Oct 02, 2018@12:43:47 with header of 
"PKG",11,22,1,"PAH",1,1,183,0)
   Combined patches DI*22.2*9 and VPR*1*8  ;Created on Oct 02, 2018@10:54:44
"PKG",11,22,1,"PAH",1,1,184,0)
   It consisted of the following Install(s):
"PKG",11,22,1,"PAH",1,1,185,0)
      DI*22.2*9      VPR*1.0*8
"PKG",11,22,1,"PAH",1,1,186,0)
Checking Install for Package DI*22.2*9
"PKG",11,22,1,"PAH",1,1,187,0)
 
"PKG",11,22,1,"PAH",1,1,188,0)
Install Questions for DI*22.2*9
"PKG",11,22,1,"PAH",1,1,189,0)
 
"PKG",11,22,1,"PAH",1,1,190,0)
Incoming Files:
"PKG",11,22,1,"PAH",1,1,191,0)
 
"PKG",11,22,1,"PAH",1,1,192,0)
 
"PKG",11,22,1,"PAH",1,1,193,0)
   1.5       ENTITY
"PKG",11,22,1,"PAH",1,1,194,0)
 
"PKG",11,22,1,"PAH",1,1,195,0)
Want KIDS to Rebuild Menu Trees Upon Completion of Install? NO// 
"PKG",11,22,1,"PAH",1,1,196,0)
 
"PKG",11,22,1,"PAH",1,1,197,0)
Checking Install for Package VPR*1.0*8
"PKG",11,22,1,"PAH",1,1,198,0)
 
"PKG",11,22,1,"PAH",1,1,199,0)
Install Questions for VPR*1.0*8
"PKG",11,22,1,"PAH",1,1,200,0)
 
"PKG",11,22,1,"PAH",1,1,201,0)
Incoming Files:
"PKG",11,22,1,"PAH",1,1,202,0)
 
"PKG",11,22,1,"PAH",1,1,203,0)
 
"PKG",11,22,1,"PAH",1,1,204,0)
   560       VPR SUBSCRIPTION
"PKG",11,22,1,"PAH",1,1,205,0)
 
"PKG",11,22,1,"PAH",1,1,206,0)
Want KIDS to Rebuild Menu Trees Upon Completion of Install? NO// 
"PKG",11,22,1,"PAH",1,1,207,0)
 
"PKG",11,22,1,"PAH",1,1,208,0)
 
"PKG",11,22,1,"PAH",1,1,209,0)
Want KIDS to INHIBIT LOGONs during the install? NO// 
"PKG",11,22,1,"PAH",1,1,210,0)
Want to DISABLE Scheduled Options, Menu Options, and Protocols? NO// 
"PKG",11,22,1,"PAH",1,1,211,0)
 
"PKG",11,22,1,"PAH",1,1,212,0)
Enter the Device you want to print the Install messages.
"PKG",11,22,1,"PAH",1,1,213,0)
You can queue the install by enter a 'Q' at the device prompt.
"PKG",11,22,1,"PAH",1,1,214,0)
Enter a '^' to abort the install.
"PKG",11,22,1,"PAH",1,1,215,0)
 
"PKG",11,22,1,"PAH",1,1,216,0)
DEVICE: HOME//   NETWORK
"PKG",11,22,1,"PAH",1,1,217,0)
 
"PKG",11,22,1,"PAH",1,1,218,0)
 
"PKG",11,22,1,"PAH",1,1,219,0)
 
"PKG",11,22,1,"PAH",1,1,220,0)
Post-Installation Instructions:
"PKG",11,22,1,"PAH",1,1,221,0)
-------------------------------
"PKG",11,22,1,"PAH",1,1,222,0)
None
"PKG",11,22,1,"PAH",1,1,223,0)
 
"PKG",11,22,1,"PAH",1,1,224,0)
 
"PKG",11,22,1,"PAH",1,1,225,0)
Backout and Rollback Procedure:
"PKG",11,22,1,"PAH",1,1,226,0)
-------------------------------
"PKG",11,22,1,"PAH",1,1,227,0)
During the VistA Installation Procedure of the KIDS build, the 
"PKG",11,22,1,"PAH",1,1,228,0)
installer should back up the modified routines by the use of the
"PKG",11,22,1,"PAH",1,1,229,0)
'Backup a Transport Global' action (step 3a in the Installations 
"PKG",11,22,1,"PAH",1,1,230,0)
Instructions below).
"PKG",11,22,1,"PAH",1,1,231,0)
 
"PKG",11,22,1,"PAH",1,1,232,0)
If rollback/backout is required, the installer can use the MailMan
"PKG",11,22,1,"PAH",1,1,233,0)
message to restore the routines to previous state. 
"PKG",11,22,1,"PAH",1,1,234,0)
 
"PKG",11,22,1,"PAH",1,1,235,0)
To backout the ENTITY (#1.5) file and DDE EDIT ENTITY input template, use 
"PKG",11,22,1,"PAH",1,1,236,0)
the EN^DIU2 API. Caution should be taken when using this API. For more 
"PKG",11,22,1,"PAH",1,1,237,0)
information on usage of this API see FileMan 22.2 Developer Guide. The
"PKG",11,22,1,"PAH",1,1,238,0)
following is an example execution to remove files and input template:
"PKG",11,22,1,"PAH",1,1,239,0)
 
"PKG",11,22,1,"PAH",1,1,240,0)
S DIU=1.5,DIU(0)="DT" D EN^DIU2
"PKG",11,22,1,"PAH",1,1,241,0)
 
"PKG",11,22,1,"PAH",1,1,242,0)
To rollback/backout DDE options exported with this patch, may be disabled
"PKG",11,22,1,"PAH",1,1,243,0)
by using VA FileMan to assign an Out of Order message as follows:
"PKG",11,22,1,"PAH",1,1,244,0)
 
"PKG",11,22,1,"PAH",1,1,245,0)
VA FileMan 22.2
"PKG",11,22,1,"PAH",1,1,246,0)
 
"PKG",11,22,1,"PAH",1,1,247,0)
 
"PKG",11,22,1,"PAH",1,1,248,0)
Select OPTION: 1  ENTER OR EDIT FILE ENTRIES
"PKG",11,22,1,"PAH",1,1,249,0)
 
"PKG",11,22,1,"PAH",1,1,250,0)
 
"PKG",11,22,1,"PAH",1,1,251,0)
Input to what File: OPTION//              (11330 entries)
"PKG",11,22,1,"PAH",1,1,252,0)
EDIT WHICH FIELD: ALL// OUT OF ORDER MESSAGE  
"PKG",11,22,1,"PAH",1,1,253,0)
THEN EDIT FIELD: 
"PKG",11,22,1,"PAH",1,1,254,0)
 
"PKG",11,22,1,"PAH",1,1,255,0)
 
"PKG",11,22,1,"PAH",1,1,256,0)
Select OPTION NAME: Entity Mapping       DDE ENTITY MAPPING
"PKG",11,22,1,"PAH",1,1,257,0)
OUT OF ORDER MESSAGE: ROLLBACK PATCH DI*22.2*9
"PKG",11,22,1,"PAH",1,1,258,0)
 
"PKG",11,22,1,"PAH",1,1,259,0)
Select OPTION NAME: 
"PKG",11,22,1,"PAH",1,1,260,0)
 
"PKG",11,22,1,"PAH",1,1,261,0)
To rollback/backout DDE form exported with this patch, use VA FileMan
"PKG",11,22,1,"PAH",1,1,262,0)
[DDS DELETE A FORM] option as follows:
"PKG",11,22,1,"PAH",1,1,263,0)
 
"PKG",11,22,1,"PAH",1,1,264,0)
VA FileMan 22.2
"PKG",11,22,1,"PAH",1,1,265,0)
 
"PKG",11,22,1,"PAH",1,1,266,0)
 
"PKG",11,22,1,"PAH",1,1,267,0)
Select OPTION: OTHER OPTIONS  
"PKG",11,22,1,"PAH",1,1,268,0)
Select OTHER OPTION: SCREENMAN  
"PKG",11,22,1,"PAH",1,1,269,0)
Select SCREENMAN OPTION: DELETE A FORM  
"PKG",11,22,1,"PAH",1,1,270,0)
 
"PKG",11,22,1,"PAH",1,1,271,0)
Delete Form for what File: OPTION// ENTITY    (2 entries)
"PKG",11,22,1,"PAH",1,1,272,0)
 
"PKG",11,22,1,"PAH",1,1,273,0)
Select FORM to delete: DDE ENTITY ENTER/EDIT  DDE ENTITY ENTER/EDIT
"PKG",11,22,1,"PAH",1,1,274,0)
         #165    3/6/18                 File #1.5
"PKG",11,22,1,"PAH",1,1,275,0)
 
"PKG",11,22,1,"PAH",1,1,276,0)
 
"PKG",11,22,1,"PAH",1,1,277,0)
  BLOCKS USED ON FORM "DDE ENTITY ENTER/EDIT" (IEN #165)
"PKG",11,22,1,"PAH",1,1,278,0)
 
"PKG",11,22,1,"PAH",1,1,279,0)
 Internal                                        Used on
"PKG",11,22,1,"PAH",1,1,280,0)
 Entry Number    Block Name                      Other Forms?  Deletable?
"PKG",11,22,1,"PAH",1,1,281,0)
 ------------    -------------                   ------------  ----------
"PKG",11,22,1,"PAH",1,1,282,0)
  602            DDE ENTITY HEADER                    NO            YES
"PKG",11,22,1,"PAH",1,1,283,0)
  603            DDE ENTITY 1                         NO            YES
"PKG",11,22,1,"PAH",1,1,284,0)
  604            DDE ITEMS                            NO            YES
"PKG",11,22,1,"PAH",1,1,285,0)
  605            DDE ENTITY 2                         NO            YES
"PKG",11,22,1,"PAH",1,1,286,0)
  606            DDE ENTITY 3                         NO            YES
"PKG",11,22,1,"PAH",1,1,287,0)
  607            DDE ITEM FIXED                       NO            YES
"PKG",11,22,1,"PAH",1,1,288,0)
  608            DDE ITEM ID                          NO            YES
"PKG",11,22,1,"PAH",1,1,289,0)
  609            DDE ITEM SIMPLE                      NO            YES
"PKG",11,22,1,"PAH",1,1,290,0)
  610            DDE ITEM WORD PROC                   NO            YES
"PKG",11,22,1,"PAH",1,1,291,0)
  611            DDE ITEM COMPLEX                     NO            YES
"PKG",11,22,1,"PAH",1,1,292,0)
  612            DDE ITEM ENTITY                      NO            YES
"PKG",11,22,1,"PAH",1,1,293,0)
  613            DDE ITEM LIST                        NO            YES
"PKG",11,22,1,"PAH",1,1,294,0)
  614            DDE COMPLEX LIST                     NO            YES
"PKG",11,22,1,"PAH",1,1,295,0)
  615            DDE LIST FILE                        NO            YES
"PKG",11,22,1,"PAH",1,1,296,0)
  616            DDE LIST COMPLEX                     NO            YES
"PKG",11,22,1,"PAH",1,1,297,0)
  617            DDE LIST COMPLEX ITEMS               NO            YES
"PKG",11,22,1,"PAH",1,1,298,0)
 
"PKG",11,22,1,"PAH",1,1,299,0)
 
"PKG",11,22,1,"PAH",1,1,300,0)
Delete all deletable blocks used on form DDE ENTITY ENTER/EDIT
"PKG",11,22,1,"PAH",1,1,301,0)
from the BLOCK file (Y/N)? YES// 
"PKG",11,22,1,"PAH",1,1,302,0)
 
"PKG",11,22,1,"PAH",1,1,303,0)
 
"PKG",11,22,1,"PAH",1,1,304,0)
Delete blocks without prompting (Y/N)? NO// y  YES
"PKG",11,22,1,"PAH",1,1,305,0)
 
"PKG",11,22,1,"PAH",1,1,306,0)
Continue (Y/N)? NO// YES
"PKG",11,22,1,"PAH",1,1,307,0)
 
"PKG",11,22,1,"PAH",1,1,308,0)
Deleting form DDE ENTITY ENTER/EDIT (IEN #165) ...
"PKG",11,22,1,"PAH",1,1,309,0)
 
"PKG",11,22,1,"PAH",1,1,310,0)
Deleting block DDE ENTITY HEADER (IEN #602) ...
"PKG",11,22,1,"PAH",1,1,311,0)
Deleting block DDE ENTITY 1 (IEN #603) ...
"PKG",11,22,1,"PAH",1,1,312,0)
Deleting block DDE ITEMS (IEN #604) ...
"PKG",11,22,1,"PAH",1,1,313,0)
Deleting block DDE ENTITY 2 (IEN #605) ...
"PKG",11,22,1,"PAH",1,1,314,0)
Deleting block DDE ENTITY 3 (IEN #606) ...
"PKG",11,22,1,"PAH",1,1,315,0)
Deleting block DDE ITEM FIXED (IEN #607) ...
"PKG",11,22,1,"PAH",1,1,316,0)
Deleting block DDE ITEM ID (IEN #608) ...
"PKG",11,22,1,"PAH",1,1,317,0)
Deleting block DDE ITEM SIMPLE (IEN #609) ...
"PKG",11,22,1,"PAH",1,1,318,0)
Deleting block DDE ITEM WORD PROC (IEN #610) ...
"PKG",11,22,1,"PAH",1,1,319,0)
Deleting block DDE ITEM COMPLEX (IEN #611) ...
"PKG",11,22,1,"PAH",1,1,320,0)
Deleting block DDE ITEM ENTITY (IEN #612) ...
"PKG",11,22,1,"PAH",1,1,321,0)
Deleting block DDE ITEM LIST (IEN #613) ...
"PKG",11,22,1,"PAH",1,1,322,0)
Deleting block DDE COMPLEX LIST (IEN #614) ...
"PKG",11,22,1,"PAH",1,1,323,0)
Deleting block DDE LIST FILE (IEN #615) ...
"PKG",11,22,1,"PAH",1,1,324,0)
Deleting block DDE LIST COMPLEX (IEN #616) ...
"PKG",11,22,1,"PAH",1,1,325,0)
Deleting block DDE LIST COMPLEX ITEMS (IEN #617) ...
"PKG",11,22,1,"PAH",1,1,326,0)
 
"PKG",11,22,1,"PAH",1,1,327,0)
DONE!
"PKG",11,22,1,"PAH",1,1,328,0)
 
"PKG",11,22,1,"PAH",1,1,329,0)
 
"PKG",11,22,1,"PAH",1,1,330,0)
Routine Information:
"PKG",11,22,1,"PAH",1,1,331,0)
====================
"PKG",11,22,1,"PAH",1,1,332,0)
 
"PKG",11,22,1,"PAH",1,1,333,0)
The second line of each of these routines now looks like:
"PKG",11,22,1,"PAH",1,1,334,0)
 ;;22.2;VA FileMan;**[Patch List]**;Jan 05, 2016;Build 46
"PKG",11,22,1,"PAH",1,1,335,0)
 
"PKG",11,22,1,"PAH",1,1,336,0)
The checksums below are new checksums, and
"PKG",11,22,1,"PAH",1,1,337,0)
 can be checked with CHECK1^XTSUMBLD.
"PKG",11,22,1,"PAH",1,1,338,0)
 
"PKG",11,22,1,"PAH",1,1,339,0)
Routine Name: DDE
"PKG",11,22,1,"PAH",1,1,340,0)
    Before:       n/a   After:  B4683326  **9**
"PKG",11,22,1,"PAH",1,1,341,0)
Routine Name: DDE1A
"PKG",11,22,1,"PAH",1,1,342,0)
    Before:       n/a   After:   B737990  **9**
"PKG",11,22,1,"PAH",1,1,343,0)
Routine Name: DDEG
"PKG",11,22,1,"PAH",1,1,344,0)
    Before:       n/a   After:B122631592  **9**
"PKG",11,22,1,"PAH",1,1,345,0)
Routine Name: DDEGET
"PKG",11,22,1,"PAH",1,1,346,0)
    Before:       n/a   After: B10359109  **9**
"PKG",11,22,1,"PAH",1,1,347,0)
Routine Name: DDEMAP
"PKG",11,22,1,"PAH",1,1,348,0)
    Before:       n/a   After: B44771305  **9**
"PKG",11,22,1,"PAH",1,1,349,0)
Routine Name: DDEOPT
"PKG",11,22,1,"PAH",1,1,350,0)
    Before:       n/a   After:   B794105  **9**
"PKG",11,22,1,"PAH",1,1,351,0)
Routine Name: DDERR
"PKG",11,22,1,"PAH",1,1,352,0)
    Before:       n/a   After:   B683652  **9**
"PKG",11,22,1,"PAH",1,1,353,0)
Routine Name: DDEX
"PKG",11,22,1,"PAH",1,1,354,0)
    Before:       n/a   After:  B1026050  **9**
"PKG",11,22,1,"PAH",1,1,355,0)
Routine Name: DII1
"PKG",11,22,1,"PAH",1,1,356,0)
    Before:  B2240976   After:  B2361298  **8,10,9**
"PKG",11,22,1,"PAH",1,1,357,0)
 
"PKG",11,22,1,"PAH",1,1,358,0)
Routine list of preceding patches: 10
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","DDE")
0^1^B4683326
"RTN","DDE",1,0)
DDE ;SPFO/RAM,MKB - Entity Main Driver ;AUG 1,2018  12:37
"RTN","DDE",2,0)
 ;;22.2;VA FileMan;**9**;Jan 05, 2016;Build 73
"RTN","DDE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDE",4,0)
 ;
"RTN","DDE",5,0)
 Q
"RTN","DDE",6,0)
 ;
"RTN","DDE",7,0)
GET1(RESOURCE,ID,QUERY,MTYPE,ERROR) ; -- GET an item
"RTN","DDE",8,0)
 ;
"RTN","DDE",9,0)
 N RESULT,RESULT1,I,C
"RTN","DDE",10,0)
 S RESOURCE=$G(RESOURCE),ID=$G(ID),MTYPE=$G(MTYPE)
"RTN","DDE",11,0)
 ;
"RTN","DDE",12,0)
 D EN^DDEGET(RESOURCE,ID,.QUERY,,MTYPE,.RESULT,.ERROR)
"RTN","DDE",13,0)
 ; ID can return multiple items, if a set or panel
"RTN","DDE",14,0)
 ;
"RTN","DDE",15,0)
 S (C,RESULT1)=""
"RTN","DDE",16,0)
 I $D(RESULT) S I=0 F  S I=$O(@RESULT@(I)) Q:'I  D
"RTN","DDE",17,0)
 . S RESULT1=RESULT1_C_$G(@RESULT@(I))
"RTN","DDE",18,0)
 . S:'MTYPE C=", " ;JSON
"RTN","DDE",19,0)
 ;
"RTN","DDE",20,0)
 Q RESULT1
"RTN","DDE",21,0)
 ;
"RTN","DDE",22,0)
GET(RESOURCE,ID,QUERY,MTYPE,MAX,RESULT,ERROR) ; -- GET an item/collection
"RTN","DDE",23,0)
 ;
"RTN","DDE",24,0)
 S RESOURCE=$G(RESOURCE),ID=$G(ID),MTYPE=$G(MTYPE)
"RTN","DDE",25,0)
 D EN^DDEGET(RESOURCE,ID,.QUERY,.MAX,MTYPE,.RESULT,.ERROR)
"RTN","DDE",26,0)
 ; return array of items in @RESULT@(#), and/or ERROR(#)
"RTN","DDE",27,0)
 ;
"RTN","DDE",28,0)
 Q
"RTN","DDE",29,0)
 ;
"RTN","DDE",30,0)
PUT(RESOURCE,ID,BODY,MTYPE) ; -- PUT an item [not in use]
"RTN","DDE",31,0)
 ;
"RTN","DDE",32,0)
 N RESULT,RESULT1,C
"RTN","DDE",33,0)
 S RESOURCE=$G(RESOURCE),BODY=$G(BODY),ID=$G(ID),MTYPE=$G(MTYPE)
"RTN","DDE",34,0)
 ;
"RTN","DDE",35,0)
 ;D:MTYPE MAIN^DDEPXML(.RESULT,RESOURCE,BODY,ID,,"PUT")
"RTN","DDE",36,0)
 ;D:'MTYPE MAIN^DDEPJSON(.RESULT,RESOURCE,BODY,ID,,"PUT")
"RTN","DDE",37,0)
 ;
"RTN","DDE",38,0)
 S (RESULT1,C)=""
"RTN","DDE",39,0)
 I $D(RESULT) S I=0 F  S I=$O(@RESULT@(I)) Q:'I  D
"RTN","DDE",40,0)
 . S RESULT1=RESULT1_C_$G(@RESULT@(I))
"RTN","DDE",41,0)
 . S:'MTYPE C=", " ;JSON
"RTN","DDE",42,0)
 ;
"RTN","DDE",43,0)
 Q RESULT1
"RTN","DDE",44,0)
 ;
"RTN","DDE",45,0)
POST(RESOURCE,ID,BODY,MTYPE) ; -- POST an item [not in use]
"RTN","DDE",46,0)
 ;
"RTN","DDE",47,0)
 N RESULT,RESULT1,C
"RTN","DDE",48,0)
 S RESOURCE=$G(RESOURCE),BODY=$G(BODY),ID=$G(ID),MTYPE=$G(MTYPE)
"RTN","DDE",49,0)
 ;
"RTN","DDE",50,0)
 ;D:MTYPE MAIN^DDEPXML(.RESULT,RESOURCE,BODY,ID,,"POST")
"RTN","DDE",51,0)
 ;D:'MTYPE MAIN^DDEPJSON(.RESULT,RESOURCE,BODY,ID,,"POST")
"RTN","DDE",52,0)
 ;
"RTN","DDE",53,0)
 S (RESULT1,C)=""
"RTN","DDE",54,0)
 I $D(RESULT) S I=0 F  S I=$O(@RESULT@(I)) Q:'I  D
"RTN","DDE",55,0)
 . S RESULT1=RESULT1_C_$G(@RESULT@(I))
"RTN","DDE",56,0)
 . S:'MTYPE C=", " ;JSON
"RTN","DDE",57,0)
 ;
"RTN","DDE",58,0)
 Q RESULT1
"RTN","DDE",59,0)
 ;
"RTN","DDE",60,0)
DEL(RESOURCE,ID,MTYPE) ; -- DELETE an item [not in use]
"RTN","DDE",61,0)
 ;
"RTN","DDE",62,0)
 N RESULT,RESULT1,C
"RTN","DDE",63,0)
 S RESOURCE=$G(RESOURCE),ID=$G(ID),MTYPE=$G(MTYPE)
"RTN","DDE",64,0)
 ;
"RTN","DDE",65,0)
 ;D:MTYPE XML^DDEDEL(.RESULT,RESOURCE,ID)
"RTN","DDE",66,0)
 ;D:'MTYPE JSON^DDEDEL(.RESULT,RESOURCE,ID)
"RTN","DDE",67,0)
 ;
"RTN","DDE",68,0)
 S (RESULT1,C)=""
"RTN","DDE",69,0)
 I $D(RESULT) S I=0 F  S I=$O(@RESULT@(I)) Q:'I  D
"RTN","DDE",70,0)
 . S RESULT1=RESULT1_C_$G(@RESULT@(I))
"RTN","DDE",71,0)
 . S:'MTYPE C=", " ;JSON
"RTN","DDE",72,0)
 ;
"RTN","DDE",73,0)
 Q RESULT1
"RTN","DDE1A")
0^23^B737990
"RTN","DDE1A",1,0)
DDE1A ;DOITFO/PLT - Entity Enter/Edit via FM ;AUG 1, 2018  12:37
"RTN","DDE1A",2,0)
 ;;22.2;VA FileMan;**9**;Jan 05, 2016;Build 73
"RTN","DDE1A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDE1A",4,0)
 ;
"RTN","DDE1A",5,0)
 QUIT
"RTN","DDE1A",6,0)
 ;
"RTN","DDE1A",7,0)
 ;entity look-up
"RTN","DDE1A",8,0)
EN ;
"RTN","DDE1A",9,0)
 N X,Y,DIC,DA,DDEIEN,DDSFILE,DDSPAGE,DR,DDSPARM
"RTN","DDE1A",10,0)
 S DIC="^DDE(",DIC(0)="AELMQZ"
"RTN","DDE1A",11,0)
 D ^DIC G END:(X="")!(X?1"^".E),EN:Y<1 S DDEIEN=+Y
"RTN","DDE1A",12,0)
 S DA=DDEIEN,DDSFILE=1.5,DDSPAGE=1,DR="[DDE ENTITY ENTER/EDIT]",DDSPARM="CS"
"RTN","DDE1A",13,0)
 D ^DDS
"RTN","DDE1A",14,0)
 G EN
"RTN","DDE1A",15,0)
 ;
"RTN","DDE1A",16,0)
END ;
"RTN","DDE1A",17,0)
 QUIT
"RTN","DDEG")
0^21^B122631592
"RTN","DDEG",1,0)
DDEG ;SPFO/RAM,MKB - Entity GET Extract ;AUG 1, 2018  12:37
"RTN","DDEG",2,0)
 ;;22.2;VA FileMan;**9**;Jan 05, 2016;Build 73
"RTN","DDEG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDEG",4,0)
 Q
"RTN","DDEG",5,0)
 ;
"RTN","DDEG",6,0)
 ; $$EN1 called from ^DDEGET, assumes validated input parameters:
"RTN","DDEG",7,0)
 ;   DIENTY = Entity file #1.5 ien
"RTN","DDEG",8,0)
 ;   DIEN   = ID of entity instance to return
"RTN","DDEG",9,0)
 ;   NOTAG  = 1 if entity is a list item (omit tags)
"RTN","DDEG",10,0)
 ;   ERROR  = returns '-1^message' if error, else ""
"RTN","DDEG",11,0)
 ;   DFORM  = format for results (0, 1, 2); default is 0=JSON
"RTN","DDEG",12,0)
 ;
"RTN","DDEG",13,0)
EN1(DIENTY,DIEN,NOTAG,ERROR) ; -- return a single Entity (expects DFORM=0/1/2)
"RTN","DDEG",14,0)
 N DIFN,DNAME,DDEOUT,DAC,DSEQ,DITM,DRES,X
"RTN","DDEG",15,0)
 S DFORM=+$G(DFORM),(DRES,ERROR)=""
"RTN","DDEG",16,0)
 S DIENTY=+$G(DIENTY),DIEN=$G(DIEN)
"RTN","DDEG",17,0)
 S DIFN=$P($G(^DDE(DIENTY,0)),U,2)
"RTN","DDEG",18,0)
 S DNAME=$G(^DDE(DIENTY,.1)) S:DNAME="" DNAME=$P($G(^(0)),U)
"RTN","DDEG",19,0)
 ;
"RTN","DDEG",20,0)
 D IENPROC I $G(DDEOUT) K DDEOUT Q ""
"RTN","DDEG",21,0)
 I $G(DIEN)="" S ERROR="-1^Record "_$G(DIEN)_" not found" G ENQ
"RTN","DDEG",22,0)
 ;
"RTN","DDEG",23,0)
 S DAC=$P($G(^DDE(+DIENTY,"GET")),U,3) I DAC D  G:ERROR ENQ
"RTN","DDEG",24,0)
 . N DDETXT,DDERR
"RTN","DDEG",25,0)
 . S DAC=$$CANDO^DIAC1(DIFN,DIEN,DAC,DUZ,,,"DDETXT","DDERR")
"RTN","DDEG",26,0)
 . S ERROR=$S(DAC<0:"-1^"_$G(DDERR(1)),'DAC:"-1^"_$G(DDETXT(1)),1:0)
"RTN","DDEG",27,0)
 ;
"RTN","DDEG",28,0)
 ; loop through items
"RTN","DDEG",29,0)
 S DSEQ=0 F  S DSEQ=$O(^DDE(DIENTY,1,"SEQ",DSEQ)) Q:'DSEQ  D  Q:ERROR
"RTN","DDEG",30,0)
 . S DITM=0 F  S DITM=$O(^DDE(DIENTY,1,"SEQ",DSEQ,DITM)) Q:'DITM  D  Q:ERROR
"RTN","DDEG",31,0)
 .. S X=$$VALUE(DITM) Q:X=""  Q:ERROR
"RTN","DDEG",32,0)
 .. S DRES=$$ADD(DRES,X,DSEQ)
"RTN","DDEG",33,0)
 ;
"RTN","DDEG",34,0)
 I $L(DRES) D
"RTN","DDEG",35,0)
 . S:'DFORM DRES="{"_DRES_"}"
"RTN","DDEG",36,0)
 . Q:$G(NOTAG)  ;for embedded items
"RTN","DDEG",37,0)
 . S DRES=$$ELEMENT("",DNAME,DRES,,,"C")
"RTN","DDEG",38,0)
ENQ ;
"RTN","DDEG",39,0)
 Q DRES
"RTN","DDEG",40,0)
 ;
"RTN","DDEG",41,0)
VALUE(ITM,NOTAG) ; -- build a complete ITEM value
"RTN","DDEG",42,0)
 N ITM0,NAME,ITEM,TYPE,FILE,FIELD,IEN
"RTN","DDEG",43,0)
 ;
"RTN","DDEG",44,0)
 S ITM0=$G(^DDE(+DIENTY,1,+ITM,0)),IEN=$G(DIEN)
"RTN","DDEG",45,0)
 S NAME=$P(ITM0,U),FILE=$P(ITM0,U,4),FIELD=$P(ITM0,U,5)
"RTN","DDEG",46,0)
 S:'FILE FILE=DIFN ;default file#
"RTN","DDEG",47,0)
 S TYPE=$P($$GET1^DIQ(1.51,(+ITM_","_+DIENTY_","),.03)," ")
"RTN","DDEG",48,0)
 ;
"RTN","DDEG",49,0)
 S ITEM="" I $L(TYPE),$L($T(@TYPE)) D @TYPE G VQ ;build ITEM
"RTN","DDEG",50,0)
 D SIMPLE
"RTN","DDEG",51,0)
VQ ;
"RTN","DDEG",52,0)
 Q ITEM
"RTN","DDEG",53,0)
 ;
"RTN","DDEG",54,0)
SIMPLE ; -- retrieve simple ITEM (from $$VALUE)
"RTN","DDEG",55,0)
 N VALUE,LKUP,FMT,XFRM
"RTN","DDEG",56,0)
 S VALUE="",XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",57,0)
 ;
"RTN","DDEG",58,0)
 ; get VALUE via code or field
"RTN","DDEG",59,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",60,0)
 I VALUE="",$G(FIELD) D  Q:VALUE=""
"RTN","DDEG",61,0)
 . S LKUP=$P(ITM0,U,6) S:LKUP'="" FIELD=FIELD_":"_LKUP
"RTN","DDEG",62,0)
 . S FMT=$S(+$P(ITM0,U,7):"I",1:"E")
"RTN","DDEG",63,0)
 . S VALUE=$$GET1^DIQ(FILE,IEN_",",FIELD,FMT)
"RTN","DDEG",64,0)
 ;
"RTN","DDEG",65,0)
 ; apply output transform
"RTN","DDEG",66,0)
 I $L(VALUE),$L(XFRM) X XFRM
"RTN","DDEG",67,0)
 ;
"RTN","DDEG",68,0)
 I $$VALID(VALUE) D  ;add tags
"RTN","DDEG",69,0)
 . S VALUE=$$ESC(VALUE)
"RTN","DDEG",70,0)
 . I 'DFORM,$G(NOTAG) S ITEM=VALUE Q  ;for List items
"RTN","DDEG",71,0)
 . S ITEM=$$ELEMENT("",NAME,VALUE)
"RTN","DDEG",72,0)
 Q
"RTN","DDEG",73,0)
 ;
"RTN","DDEG",74,0)
FIXED ; -- build one FIXED item (from $$VALUE)
"RTN","DDEG",75,0)
 N VALUE S VALUE=""
"RTN","DDEG",76,0)
 ;
"RTN","DDEG",77,0)
 ; get VALUE via code or string
"RTN","DDEG",78,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",79,0)
 S:VALUE="" VALUE=$G(^DDE(+DIENTY,1,+ITM,2)) ;Fixed Response
"RTN","DDEG",80,0)
 ;
"RTN","DDEG",81,0)
 I $$VALID(VALUE) D  ;add tags
"RTN","DDEG",82,0)
 . S VALUE=$$ESC(VALUE)
"RTN","DDEG",83,0)
 . I 'DFORM,$G(NOTAG) S ITEM=VALUE Q  ;for List items
"RTN","DDEG",84,0)
 . S ITEM=$$ELEMENT("",NAME,VALUE)
"RTN","DDEG",85,0)
 Q
"RTN","DDEG",86,0)
 ;
"RTN","DDEG",87,0)
ID ; -- build one ID item (from $$VALUE)
"RTN","DDEG",88,0)
 N VALUE,XFRM
"RTN","DDEG",89,0)
 S VALUE="",XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",90,0)
 ;
"RTN","DDEG",91,0)
 ; get VALUE via code or IEN
"RTN","DDEG",92,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",93,0)
 S:VALUE="" VALUE=IEN
"RTN","DDEG",94,0)
 ;
"RTN","DDEG",95,0)
 ; apply output transform
"RTN","DDEG",96,0)
 I $L(VALUE),$L(XFRM) X XFRM
"RTN","DDEG",97,0)
 ;
"RTN","DDEG",98,0)
 I $$VALID(VALUE) D  ;add tags
"RTN","DDEG",99,0)
 . S VALUE=$$ESC(VALUE)
"RTN","DDEG",100,0)
 . I 'DFORM,$G(NOTAG) S ITEM=VALUE Q  ;for List items
"RTN","DDEG",101,0)
 . S ITEM=$$ELEMENT("",NAME,VALUE)
"RTN","DDEG",102,0)
 Q
"RTN","DDEG",103,0)
 ;
"RTN","DDEG",104,0)
WORD ; -- build one WP ITEM (from $$VALUE)
"RTN","DDEG",105,0)
 N WP,LKUP,CRLF,I,X,VALUE S VALUE="",I=0
"RTN","DDEG",106,0)
 ;
"RTN","DDEG",107,0)
 ; get WP(n) or WP(n,0) via code or field
"RTN","DDEG",108,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",109,0)
 I '$D(WP),$G(FIELD) D  Q:'$D(WP)
"RTN","DDEG",110,0)
 . S LKUP=$P(ITM0,U,6) S:LKUP'="" FIELD=FIELD_":"_LKUP
"RTN","DDEG",111,0)
 . S I=$$GET1^DIQ(FILE,IEN_",",FIELD,,"WP")
"RTN","DDEG",112,0)
 ;
"RTN","DDEG",113,0)
 S CRLF='$P(ITM0,U,9)
"RTN","DDEG",114,0)
 S I=+$O(WP(0)),X=$S($D(WP(I,0)):WP(I,0),1:$G(WP(I)))
"RTN","DDEG",115,0)
 S VALUE=X
"RTN","DDEG",116,0)
 F  S I=$O(WP(I)) Q:I<1  D
"RTN","DDEG",117,0)
 . S X=$S($D(WP(I,0)):WP(I,0),1:WP(I))
"RTN","DDEG",118,0)
 . I $E(X)=" " S VALUE=VALUE_$C(13,10)_X Q
"RTN","DDEG",119,0)
 . I CRLF S VALUE=VALUE_$C(13,10)_X Q
"RTN","DDEG",120,0)
 . S VALUE=VALUE_$S($E(VALUE,$L(VALUE))=" ":"",1:" ")_X
"RTN","DDEG",121,0)
 ;
"RTN","DDEG",122,0)
 I $$VALID(VALUE) D  Q  ;add tags
"RTN","DDEG",123,0)
 . S VALUE=$$ESC(VALUE)
"RTN","DDEG",124,0)
 . I 'DFORM,$G(NOTAG) S ITEM=VALUE Q  ;for List items
"RTN","DDEG",125,0)
 . S ITEM=$$ELEMENT("",NAME,VALUE)
"RTN","DDEG",126,0)
 Q
"RTN","DDEG",127,0)
 ;
"RTN","DDEG",128,0)
ENTITY ; -- build an entity ITEM (from $$VALUE)
"RTN","DDEG",129,0)
 N ENTITY,ERR,VALUE,DATA,LKUP,FMT,XFRM,ID
"RTN","DDEG",130,0)
 S ENTITY=$P(ITM0,U,8) Q:ENTITY=""
"RTN","DDEG",131,0)
 S (VALUE,ERR)="",XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",132,0)
 ;
"RTN","DDEG",133,0)
 ; get VALUE via code or field, for Entity ID
"RTN","DDEG",134,0)
 ; DATA can also be defined here, to pass to Entity
"RTN","DDEG",135,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",136,0)
 I VALUE="",$G(FIELD) D  Q:VALUE=""
"RTN","DDEG",137,0)
 . S LKUP=$P(ITM0,U,6) S:LKUP'="" FIELD=FIELD_":"_LKUP
"RTN","DDEG",138,0)
 . S FMT=$S(+$P(ITM0,U,7):"I",1:"E")
"RTN","DDEG",139,0)
 . S VALUE=$$GET1^DIQ(FILE,IEN_",",FIELD,FMT)
"RTN","DDEG",140,0)
 I $L(VALUE),$L(XFRM) X XFRM
"RTN","DDEG",141,0)
 Q:VALUE=""  S ID=VALUE
"RTN","DDEG",142,0)
 ;
"RTN","DDEG",143,0)
 D PREPROC(+ENTITY) ;Pre-Processing
"RTN","DDEG",144,0)
 S VALUE=$$EN1^DDEG(+ENTITY,ID,1)
"RTN","DDEG",145,0)
 D POST(+ENTITY)    ;Post-Processing
"RTN","DDEG",146,0)
 ;
"RTN","DDEG",147,0)
 I $L(VALUE) D  Q   ;add tags
"RTN","DDEG",148,0)
 . I VALUE<0 S ERROR=VALUE Q
"RTN","DDEG",149,0)
 . I $G(NOTAG) S ITEM=VALUE Q  ;for embedded or list items
"RTN","DDEG",150,0)
 . S ITEM=$$ELEMENT("",NAME,VALUE,,,"C")
"RTN","DDEG",151,0)
 Q
"RTN","DDEG",152,0)
 ;
"RTN","DDEG",153,0)
COMPLEX ; -- build a complex ITEM (from $$VALUE)
"RTN","DDEG",154,0)
 N SEQ,IDX1,NAME1,IDX0,VALUE
"RTN","DDEG",155,0)
 ;
"RTN","DDEG",156,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",157,0)
 ;
"RTN","DDEG",158,0)
 S SEQ=0 F  S SEQ=$O(^DDE(DIENTY,1,ITM,3,"B",SEQ)) Q:'SEQ  D  Q:$G(ERROR)
"RTN","DDEG",159,0)
 . S IDX1=$O(^DDE(DIENTY,1,ITM,3,"B",SEQ,0))
"RTN","DDEG",160,0)
 . S NAME1=$P(^DDE(DIENTY,1,ITM,3,IDX1,0),U,2) Q:NAME1=""
"RTN","DDEG",161,0)
 . S IDX0=+$O(^DDE(DIENTY,1,"B",NAME1,0))
"RTN","DDEG",162,0)
 . I IDX0<1!'$D(^DDE(DIENTY,1,IDX0,0)) Q
"RTN","DDEG",163,0)
 . ;
"RTN","DDEG",164,0)
 . S VALUE=$$VALUE(IDX0) Q:$G(ERROR)
"RTN","DDEG",165,0)
 . S:VALUE'="" ITEM=$$ADD(ITEM,VALUE,SEQ)
"RTN","DDEG",166,0)
 ;
"RTN","DDEG",167,0)
 Q:$G(ERROR)  I $L(ITEM) D  ;add tags
"RTN","DDEG",168,0)
 . S:'DFORM ITEM="{"_ITEM_"}" Q:$G(NOTAG)  ;for List items
"RTN","DDEG",169,0)
 . S ITEM=$$ELEMENT("",NAME,ITEM,,,"C")
"RTN","DDEG",170,0)
 Q
"RTN","DDEG",171,0)
 ;
"RTN","DDEG",172,0)
LIST ; -- build an array of values in ITEM (from $$VALUE)
"RTN","DDEG",173,0)
 N ITM1 S ITM1=$G(^DDE(+DIENTY,1,+ITM,1))
"RTN","DDEG",174,0)
 ;
"RTN","DDEG",175,0)
 D @("LIST"_+ITM1) ;LIST_type#
"RTN","DDEG",176,0)
 ;
"RTN","DDEG",177,0)
 Q:$G(ERROR)  I $L(ITEM) D  ;add tags
"RTN","DDEG",178,0)
 . S:'DFORM ITEM="["_ITEM_"]" Q:$G(NOTAG)  ;for List items
"RTN","DDEG",179,0)
 . S ITEM=$$ELEMENT("",NAME,ITEM,,,"L")
"RTN","DDEG",180,0)
 Q
"RTN","DDEG",181,0)
 ;
"RTN","DDEG",182,0)
LIST1 ; -- list of values in FILE (from LIST)
"RTN","DDEG",183,0)
 N C,NAME,XREF,FILTER,SCREEN,FMT,XFRM,ENTITY,QUERY,DDELIST,DLIST,SEQ,IEN1,VALUE,ERR
"RTN","DDEG",184,0)
 S C=","
"RTN","DDEG",185,0)
 S NAME=$P(ITM1,U,2),XREF=$P(ITM1,U,3),FILTER=$P(ITM1,U,4)
"RTN","DDEG",186,0)
 S SCREEN=$G(^DDE(+DIENTY,1,+ITM,1.1))
"RTN","DDEG",187,0)
 ;
"RTN","DDEG",188,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",189,0)
 ;
"RTN","DDEG",190,0)
 ; set up for results: single FIELD or multi-field (record) ENTITY
"RTN","DDEG",191,0)
 I FIELD S FMT=$S(+$P(ITM0,U,7):"I",1:"E"),XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",192,0)
 E  D  Q:'ENTITY
"RTN","DDEG",193,0)
 . S ENTITY=+$P(ITM0,U,8) Q:'ENTITY
"RTN","DDEG",194,0)
 . N X0 S X0=$G(^DDE(ENTITY,0)) S:'$L(NAME) NAME=$G(^(.1))
"RTN","DDEG",195,0)
 . ; get defaults from Entity if not defined in Item
"RTN","DDEG",196,0)
 . S:'$L(XREF) XREF=$P(X0,U,3)
"RTN","DDEG",197,0)
 . S:'$L(FILTER) FILTER=$P(X0,U,4)
"RTN","DDEG",198,0)
 . S:'$L(SCREEN) SCREEN=$G(^DDE(ENTITY,5.1))
"RTN","DDEG",199,0)
 . S QUERY=$G(^DDE(ENTITY,5))
"RTN","DDEG",200,0)
 . D PREPROC(ENTITY)
"RTN","DDEG",201,0)
 I $L(FILTER) S FILTER=$S($D(@FILTER):@FILTER,1:FILTER)
"RTN","DDEG",202,0)
 S:NAME="" NAME=$P(ITM0,U)
"RTN","DDEG",203,0)
 ;
"RTN","DDEG",204,0)
L1 ; find appropriate records and process
"RTN","DDEG",205,0)
 I $L(QUERY)>1,$L($T(@($P(QUERY,"(")))) D @QUERY I 1
"RTN","DDEG",206,0)
 E  D FIND^DIC(FILE,,"@","Q",.FILTER,,XREF,SCREEN,,"DDELIST") M DLIST=DDELIST("DILIST",2)
"RTN","DDEG",207,0)
 S SEQ=0 F  S SEQ=$O(DLIST(SEQ)) Q:'SEQ  D
"RTN","DDEG",208,0)
 . S IEN1=$G(DLIST(SEQ))
"RTN","DDEG",209,0)
 . S (VALUE,ERR)=""
"RTN","DDEG",210,0)
 . I FIELD D
"RTN","DDEG",211,0)
 .. S VALUE=$$GET1^DIQ(FILE,(IEN1_C),FIELD,FMT)
"RTN","DDEG",212,0)
 .. I $L(VALUE),$L(XFRM) X XFRM ;output transform
"RTN","DDEG",213,0)
 .. S:'$$VALID(VALUE) VALUE=""
"RTN","DDEG",214,0)
 . I 'FIELD,ENTITY S VALUE=$$EN1^DDEG(ENTITY,IEN1,1,.ERR)
"RTN","DDEG",215,0)
 . ;
"RTN","DDEG",216,0)
 . Q:VALUE=""  Q:$G(ERR)
"RTN","DDEG",217,0)
 . S ITEM=$$ELEMENT(ITEM,NAME,VALUE,SEQ,"addList")
"RTN","DDEG",218,0)
 ;
"RTN","DDEG",219,0)
 D:ENTITY POST(ENTITY)
"RTN","DDEG",220,0)
 Q
"RTN","DDEG",221,0)
 ;
"RTN","DDEG",222,0)
LIST2 ; -- list of values in SUBFILE (from LIST)
"RTN","DDEG",223,0)
 N IENS,C,NAME,SCREEN,FMT,XFRM,ENTITY,DLIST,SEQ,IEN1,VALUE,ERR
"RTN","DDEG",224,0)
 S IENS=","_IEN,C=","
"RTN","DDEG",225,0)
 S NAME=$P(ITM1,U,2),SCREEN=$G(^DDE(+DIENTY,1,+ITM,1.1))
"RTN","DDEG",226,0)
 ;
"RTN","DDEG",227,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",228,0)
 ;
"RTN","DDEG",229,0)
 ; set up for results: single FIELD or multi-field ENTITY
"RTN","DDEG",230,0)
 I FIELD S FMT=$S(+$P(ITM0,U,7):"I",1:"E"),XFRM=$G(^DDE(+DIENTY,1,+ITM,4))
"RTN","DDEG",231,0)
 E  D  Q:'ENTITY
"RTN","DDEG",232,0)
 . S ENTITY=$P(ITM0,U,8) Q:'ENTITY
"RTN","DDEG",233,0)
 . S:'$L(NAME) NAME=$G(^DDE(ENTITY,.1)) ;defaults
"RTN","DDEG",234,0)
 . S:'$L(SCREEN) SCREEN=$G(^DDE(ENTITY,5.1))
"RTN","DDEG",235,0)
 . D PREPROC(ENTITY)
"RTN","DDEG",236,0)
 S:NAME="" NAME=$P(ITM0,U)
"RTN","DDEG",237,0)
 ;
"RTN","DDEG",238,0)
L2 ; find appropriate records and process
"RTN","DDEG",239,0)
 D LIST^DIC(FILE,IENS_C,"@","Q",,,,,SCREEN,,"DLIST")
"RTN","DDEG",240,0)
 S SEQ=0 F  S SEQ=$O(DLIST("DILIST",2,SEQ)) Q:'SEQ  D  Q:$G(ERR)
"RTN","DDEG",241,0)
 . S IEN1=$G(DLIST("DILIST",2,SEQ))_IENS
"RTN","DDEG",242,0)
 . S (VALUE,ERR)=""
"RTN","DDEG",243,0)
 . I FIELD D
"RTN","DDEG",244,0)
 .. S VALUE=$$GET1^DIQ(FILE,(IEN1_C),FIELD,FMT)
"RTN","DDEG",245,0)
 .. I $L(VALUE),$L(XFRM) X XFRM ;output transform
"RTN","DDEG",246,0)
 .. S:'$$VALID(VALUE) VALUE=""
"RTN","DDEG",247,0)
 . I 'FIELD,ENTITY S VALUE=$$EN1^DDEG(ENTITY,IEN1,1,.ERR)
"RTN","DDEG",248,0)
 . ;
"RTN","DDEG",249,0)
 . Q:VALUE=""  Q:$G(ERR)
"RTN","DDEG",250,0)
 . S ITEM=$$ELEMENT(ITEM,NAME,VALUE,SEQ,"addList")
"RTN","DDEG",251,0)
 ;
"RTN","DDEG",252,0)
 D:ENTITY POST(ENTITY)
"RTN","DDEG",253,0)
 Q
"RTN","DDEG",254,0)
 ;
"RTN","DDEG",255,0)
LIST3 ; -- list of values in COMPLEX FIELDS (from LIST)
"RTN","DDEG",256,0)
 N NAME,SEQ,IDX1,NM1,IDX0,VALUE
"RTN","DDEG",257,0)
 S NAME=$P(ITM1,U,2) S:NAME="" NAME=$P(ITM0,U)
"RTN","DDEG",258,0)
 ;
"RTN","DDEG",259,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",260,0)
 ;
"RTN","DDEG",261,0)
 ; process list Items
"RTN","DDEG",262,0)
 S SEQ=0 F  S SEQ=$O(^DDE(DIENTY,1,ITM,3,"B",SEQ)) Q:'SEQ  D  Q:$G(ERROR)
"RTN","DDEG",263,0)
 . S IDX1=$O(^DDE(DIENTY,1,ITM,3,"B",SEQ,0))
"RTN","DDEG",264,0)
 . S NM1=$P(^DDE(DIENTY,1,ITM,3,IDX1,0),U,2) Q:NM1=""
"RTN","DDEG",265,0)
 . S IDX0=+$O(^DDE(DIENTY,1,"B",NM1,0))
"RTN","DDEG",266,0)
 . I IDX0<1!'$D(^DDE(DIENTY,1,IDX0,0)) Q
"RTN","DDEG",267,0)
 . ;
"RTN","DDEG",268,0)
 . S VALUE=$$VALUE(IDX0,1)
"RTN","DDEG",269,0)
 . ;
"RTN","DDEG",270,0)
 . Q:VALUE=""  Q:$G(ERROR)
"RTN","DDEG",271,0)
 . S ITEM=$$ELEMENT(ITEM,NAME,VALUE,SEQ,"addList")
"RTN","DDEG",272,0)
 Q
"RTN","DDEG",273,0)
 ;
"RTN","DDEG",274,0)
LIST4 ; -- list of values in DLIST()
"RTN","DDEG",275,0)
 N DLIST,NAME,ENTITY,SEQ,X,VALUE,ERR
"RTN","DDEG",276,0)
 S NAME=$P(ITM1,U,2)
"RTN","DDEG",277,0)
 ;
"RTN","DDEG",278,0)
 ;create DLIST()=data value or ID for Entity
"RTN","DDEG",279,0)
 D ITMPROC I $G(DDEOUT) K DDEOUT Q
"RTN","DDEG",280,0)
 ;
"RTN","DDEG",281,0)
 ; set up for results: single FIELD or multi-field ENTITY
"RTN","DDEG",282,0)
 S ENTITY=$P(ITM0,U,8) I ENTITY D
"RTN","DDEG",283,0)
 . S:'$L(NAME) NAME=$G(^DDE(ENTITY,.1))
"RTN","DDEG",284,0)
 . D PREPROC(ENTITY)
"RTN","DDEG",285,0)
 I NAME="" S NAME=$P(ITM0,U)
"RTN","DDEG",286,0)
 ;
"RTN","DDEG",287,0)
 ; process list items
"RTN","DDEG",288,0)
 S SEQ=0 F  S SEQ=$O(DLIST(SEQ)) Q:'SEQ  D  Q:$G(ERR)
"RTN","DDEG",289,0)
 . S X=$G(DLIST(SEQ))
"RTN","DDEG",290,0)
 . S (VALUE,ERR)=""
"RTN","DDEG",291,0)
 . I 'ENTITY,$$VALID(X) S VALUE=X
"RTN","DDEG",292,0)
 . E  S VALUE=$$EN1^DDEG(ENTITY,X,1,.ERR)
"RTN","DDEG",293,0)
 . ;
"RTN","DDEG",294,0)
 . Q:VALUE=""  Q:$G(ERR)
"RTN","DDEG",295,0)
 . S ITEM=$$ELEMENT(ITEM,NAME,VALUE,SEQ,"addList")
"RTN","DDEG",296,0)
 ;
"RTN","DDEG",297,0)
 D:ENTITY POST(ENTITY)
"RTN","DDEG",298,0)
 Q
"RTN","DDEG",299,0)
 ;
"RTN","DDEG",300,0)
ADD(XSTRING,NAME,SEQ) ; -- add element to result string
"RTN","DDEG",301,0)
 Q:$G(NAME)="" XSTRING
"RTN","DDEG",302,0)
 ;
"RTN","DDEG",303,0)
 ; JSON:0  XML:1  TEXT:2
"RTN","DDEG",304,0)
 S DFORM=+$G(DFORM),SEQ=+$G(SEQ)
"RTN","DDEG",305,0)
 ;
"RTN","DDEG",306,0)
 N RES S RES=$G(XSTRING)
"RTN","DDEG",307,0)
 I DFORM=0 S RES=RES_$S($L($G(XSTRING)):", ",1:"")_NAME ;SEQ>1
"RTN","DDEG",308,0)
 I DFORM=1 S RES=RES_NAME
"RTN","DDEG",309,0)
 I DFORM=2 S RES=RES_$S($L($G(XSTRING)):U,1:"")_NAME ;SEQ>1
"RTN","DDEG",310,0)
 Q RES
"RTN","DDEG",311,0)
 ;
"RTN","DDEG",312,0)
ELEMENT(XSTRING,NAME,VALUE,SEQ,OPTION,DTYPE) ; -- build an element string
"RTN","DDEG",313,0)
 ; XSTRING=SERIALIZED RESPONSE
"RTN","DDEG",314,0)
 S XSTRING=$G(XSTRING) Q:$G(NAME)="" XSTRING
"RTN","DDEG",315,0)
 S:NAME["." NAME=$P(NAME,".",2)
"RTN","DDEG",316,0)
 S VALUE=$G(VALUE)
"RTN","DDEG",317,0)
 S SEQ=+$G(SEQ),OPTION=$G(OPTION,"addTags")
"RTN","DDEG",318,0)
 ;
"RTN","DDEG",319,0)
 ; does DataTYPE not require quotes?
"RTN","DDEG",320,0)
 S DTYPE=$S($G(DTYPE)="C":1,$G(DTYPE)="L":1,"[{"[$E(VALUE):1,VALUE?1.N1"E"1N.E:0,+VALUE=VALUE:1,1:0)
"RTN","DDEG",321,0)
 N X,Y S X="""",Y=$S(DTYPE:"",1:"""")
"RTN","DDEG",322,0)
 ;
"RTN","DDEG",323,0)
 S DFORM=+$G(DFORM) ; JSON:0  XML:1  TEXT:2
"RTN","DDEG",324,0)
 I OPTION="addTags" D  Q XSTRING
"RTN","DDEG",325,0)
 . S:DFORM=0 XSTRING=X_NAME_X_":"_Y_VALUE_Y
"RTN","DDEG",326,0)
 . S:DFORM=1 XSTRING="<"_NAME_">"_VALUE_"</"_NAME_">"
"RTN","DDEG",327,0)
 . S:DFORM=2 XSTRING=VALUE
"RTN","DDEG",328,0)
 ;
"RTN","DDEG",329,0)
 I OPTION="addList" D  Q XSTRING
"RTN","DDEG",330,0)
 . S:DFORM=0 XSTRING=XSTRING_$S($L(XSTRING):", ",1:"")_Y_VALUE_Y ;SEQ>1
"RTN","DDEG",331,0)
 . S:DFORM=1 XSTRING=XSTRING_"<"_NAME_">"_VALUE_"</"_NAME_">"
"RTN","DDEG",332,0)
 . S:DFORM=2 XSTRING=XSTRING_$S($L(XSTRING):"~",1:"")_Y_VALUE_Y ;SEQ>1
"RTN","DDEG",333,0)
 ;
"RTN","DDEG",334,0)
 Q XSTRING
"RTN","DDEG",335,0)
 ;
"RTN","DDEG",336,0)
VALID(X) ; -- return 1 or 0, if X is a valid string
"RTN","DDEG",337,0)
 ; Cannot be null or only white space
"RTN","DDEG",338,0)
 S X=$G(X)
"RTN","DDEG",339,0)
 I X="" Q 0
"RTN","DDEG",340,0)
 I X?." " Q 0
"RTN","DDEG",341,0)
 ;I X?.P Q 0
"RTN","DDEG",342,0)
 Q 1
"RTN","DDEG",343,0)
 ;
"RTN","DDEG",344,0)
ESC(X) ; -- convert key characters for outgoing XML/JSON
"RTN","DDEG",345,0)
 Q:DFORM=2 X
"RTN","DDEG",346,0)
 I DFORM=0 Q $$ESC^XLFJSON(X)
"RTN","DDEG",347,0)
 ; DFORM=1 XML
"RTN","DDEG",348,0)
 N I,Y,QOT S QOT=""""
"RTN","DDEG",349,0)
 ; strip control characters
"RTN","DDEG",350,0)
 F I=1:1:8,11,12,14:1:31 S X=$TR(X,$C(I))
"RTN","DDEG",351,0)
 ; handle special characters:
"RTN","DDEG",352,0)
 ;  DDESC = 1 ('&' only), 2 ('&' + CDATA), or
"RTN","DDEG",353,0)
 ;  default (0/null/undefined) = CDATA only
"RTN","DDEG",354,0)
 I (X["&")!(X["<")!(X[">")!(X["'")!(X[QOT) D  Q Y
"RTN","DDEG",355,0)
 . I $G(DDESC) D  Q:DDESC=1
"RTN","DDEG",356,0)
 .. S Y=$P(X,"&") F I=2:1:$L(X,"&") S Y=Y_"&amp;"_$P(X,"&",I)
"RTN","DDEG",357,0)
 .. S X=Y,Y=$P(X,"<") F I=2:1:$L(X,"<") S Y=Y_"&lt;"_$P(X,"<",I)
"RTN","DDEG",358,0)
 .. S X=Y,Y=$P(X,">") F I=2:1:$L(X,">") S Y=Y_"&gt;"_$P(X,">",I)
"RTN","DDEG",359,0)
 .. S X=Y,Y=$P(X,"'") F I=2:1:$L(X,"'") S Y=Y_"&apos;"_$P(X,"'",I)
"RTN","DDEG",360,0)
 .. S X=Y,Y=$P(X,QOT) F I=2:1:$L(X,QOT) S Y=Y_"&quot;"_$P(X,QOT,I)
"RTN","DDEG",361,0)
 . S Y="<![CDATA["_X_"]]>"
"RTN","DDEG",362,0)
 Q X
"RTN","DDEG",363,0)
 ;
"RTN","DDEG",364,0)
PREPROC(DIENTY) ; -- pre-processing logic
"RTN","DDEG",365,0)
 N X
"RTN","DDEG",366,0)
 S X=$G(^DDE(+DIENTY,2)) X:X'="" X
"RTN","DDEG",367,0)
 Q
"RTN","DDEG",368,0)
 ;
"RTN","DDEG",369,0)
IENPROC ; -- IEN processing logic
"RTN","DDEG",370,0)
 ; setting DDEOUT will cause this record (IEN) to not be returned
"RTN","DDEG",371,0)
 N X
"RTN","DDEG",372,0)
 S X=$G(^DDE(+DIENTY,4)) X:X'="" X
"RTN","DDEG",373,0)
 Q
"RTN","DDEG",374,0)
 ;
"RTN","DDEG",375,0)
ITMPROC ; -- ITEM processing logic
"RTN","DDEG",376,0)
 ; setting DDEOUT will cause this item to not be returned
"RTN","DDEG",377,0)
 N X
"RTN","DDEG",378,0)
 S X=$G(^DDE(+DIENTY,1,+ITM,6)) X:X'="" X
"RTN","DDEG",379,0)
 Q
"RTN","DDEG",380,0)
 ;
"RTN","DDEG",381,0)
POST(DIENTY) ; -- post-processing logic
"RTN","DDEG",382,0)
 N X
"RTN","DDEG",383,0)
 S X=$G(^DDE(+DIENTY,3)) X:X'="" X
"RTN","DDEG",384,0)
 Q
"RTN","DDEGET")
0^8^B10359109
"RTN","DDEGET",1,0)
DDEGET ;SPFO/RAM - Entity GET Handler ;AUG 1, 2018  12:37
"RTN","DDEGET",2,0)
 ;;22.2;VA FileMan;**9**;Jan 05, 2016;Build 73
"RTN","DDEGET",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDEGET",4,0)
 ;
"RTN","DDEGET",5,0)
 Q
"RTN","DDEGET",6,0)
 ;
"RTN","DDEGET",7,0)
EN(ENTITY,ID,FILTER,MAX,FORMAT,TARGET,ERROR) ; -- Return [list of] data entities
"RTN","DDEGET",8,0)
 ; where ENTITY            = ien or name of desired Entity #1.5
"RTN","DDEGET",9,0)
 ;       ID                = single item ID to return              [opt]
"RTN","DDEGET",10,0)
 ;       MAX               = maximum number of items to return     [opt]
"RTN","DDEGET",11,0)
 ;       FORMAT            = 0:JSON (default) or 1:XML             [opt]
"RTN","DDEGET",12,0)
 ;       TARGET            = closed array reference to return data [opt]
"RTN","DDEGET",13,0)
 ;       ERROR             = closed array reference for error msgs [opt]
"RTN","DDEGET",14,0)
 ;       FILTER[(#)]       = search values, if using FIND^DIC      [opt]
"RTN","DDEGET",15,0)
 ;       FILTER("start")   = start date.time of search, for Query  [opt]
"RTN","DDEGET",16,0)
 ;       FILTER("stop")    = stop date.time of search, for Query   [opt]
"RTN","DDEGET",17,0)
 ;       FILTER("patient") = DFN or DFN;ICN                        [opt]
"RTN","DDEGET",18,0)
 ;
"RTN","DDEGET",19,0)
 N DDEY,DDEI,DDER,DSYS,DTYPE,DSTRT,DSTOP,DMAX,DFORM,DDEN,DDEX,DDEZ,DDELIST,DLIST
"RTN","DDEGET",20,0)
 N DFN,ICN,FILE,QUERY,LIST
"RTN","DDEGET",21,0)
 ;
"RTN","DDEGET",22,0)
 S DDEY=$G(TARGET,$NA(^TMP("DDE GET",$J))),DDEI=0 K @DDEY
"RTN","DDEGET",23,0)
 S DDER=$G(ERROR,$NA(^TMP("DDERR",$J))) K @DDER
"RTN","DDEGET",24,0)
 S DT=$$DT^XLFDT ;for crossing midnight boundary
"RTN","DDEGET",25,0)
 S DSYS=$$SYS,ID=$G(ID)
"RTN","DDEGET",26,0)
 ;
"RTN","DDEGET",27,0)
A ; parse & validate input parameters
"RTN","DDEGET",28,0)
 I $G(ENTITY)="" D ERROR("Entity parameter invalid") Q
"RTN","DDEGET",29,0)
 S DTYPE=$S((+ENTITY=ENTITY):+ENTITY,1:+$O(^DDE("B",ENTITY,0))) ;IEN or Name
"RTN","DDEGET",30,0)
 I DTYPE<1!'$D(^DDE(DTYPE)) D ERROR("Entity "_ENTITY_" does not exist") Q
"RTN","DDEGET",31,0)
 ;
"RTN","DDEGET",32,0)
 S FILE=$P($G(^DDE(DTYPE,0)),U,2)
"RTN","DDEGET",33,0)
 I FILE,'$$VFILE^DILFD(FILE) D ERROR("Invalid file number for Entity "_DTYPE) Q
"RTN","DDEGET",34,0)
 ;
"RTN","DDEGET",35,0)
 S DSTRT=+$G(FILTER("start"),1410102)
"RTN","DDEGET",36,0)
 S DSTOP=+$G(FILTER("stop"),4141015)
"RTN","DDEGET",37,0)
 I DSTRT,DSTOP,DSTOP<DSTRT D
"RTN","DDEGET",38,0)
 . N X S X=DSTRT,DSTRT=DSTOP,DSTOP=X
"RTN","DDEGET",39,0)
 I DSTOP,$L(DSTOP,".")<2 S DSTOP=DSTOP_".24"
"RTN","DDEGET",40,0)
 S DMAX=+$G(MAX,9999)
"RTN","DDEGET",41,0)
 ;
"RTN","DDEGET",42,0)
 I ID="",$D(FILTER("id")) S ID=FILTER("id")
"RTN","DDEGET",43,0)
 S DFN=$G(FILTER("patient")),ICN=+$P($G(DFN),";",2),DFN=+$G(DFN)
"RTN","DDEGET",44,0)
 I DFN<1,ICN S DFN=+$$GETDFN^MPIF001(ICN)
"RTN","DDEGET",45,0)
 I FILE=2,DFN<1,ID S DFN=ID
"RTN","DDEGET",46,0)
 ;
"RTN","DDEGET",47,0)
 ; DFORM 2:TEXT 1:XML 0:JSON  (default = JSON)
"RTN","DDEGET",48,0)
 S DFORM=$$UP^XLFSTR($G(FORMAT))
"RTN","DDEGET",49,0)
 S DFORM=$S(DFORM=0:0,+DFORM:DFORM,DFORM="JSON":0,DFORM="XML":1,DFORM="TEXT":2,1:0)
"RTN","DDEGET",50,0)
 ;
"RTN","DDEGET",51,0)
 D PRE(DTYPE)
"RTN","DDEGET",52,0)
 ;
"RTN","DDEGET",53,0)
B ; extract data
"RTN","DDEGET",54,0)
 S QUERY=$G(^DDE(DTYPE,5)),LIST=0 ;TAG^RTN from ENTITY
"RTN","DDEGET",55,0)
 S:ID'="" DLIST(1)=ID
"RTN","DDEGET",56,0)
 I ID="" D  S:'DFORM LIST=1 ;no outer tags for a JSON list
"RTN","DDEGET",57,0)
 . N $ES,$ET S $ET="D QRY^DDERR"
"RTN","DDEGET",58,0)
 . I $L(QUERY)>1,$L($T(@($P(QUERY,"(")))) D @QUERY Q
"RTN","DDEGET",59,0)
 . N XREF,VAL,SCR
"RTN","DDEGET",60,0)
 . S XREF=$P($G(^DDE(DTYPE,0)),U,3),VAL=$P($G(^(0)),U,4),SCR=$G(^(5.1))
"RTN","DDEGET",61,0)
 . I '$L($G(FILTER)),$L(VAL) S FILTER=$S($D(@VAL):@VAL,1:VAL)
"RTN","DDEGET",62,0)
 . D FIND^DIC(FILE,,"@","Q",.FILTER,DMAX,XREF,SCR,,"DDELIST")
"RTN","DDEGET",63,0)
 . M DLIST=DDELIST("DILIST",2)
"RTN","DDEGET",64,0)
 ;
"RTN","DDEGET",65,0)
 S DDEN=0 F  S DDEN=$O(DLIST(DDEN)) Q:DDEN<1  D
"RTN","DDEGET",66,0)
 . N $ES,$ET S $ET="D ONE^DDERR"
"RTN","DDEGET",67,0)
 . S ID=DLIST(DDEN)
"RTN","DDEGET",68,0)
 . S DDEX=$$EN1^DDEG(DTYPE,ID,LIST,.DDEZ)
"RTN","DDEGET",69,0)
 . I DDEZ D ERROR($P(DDEZ,U,2)) Q  ;Error msg
"RTN","DDEGET",70,0)
 . I $L(DDEX) S DDEI=DDEI+1,@DDEY@(DDEI)=DDEX
"RTN","DDEGET",71,0)
 S @DDEY@(0)=DDEI
"RTN","DDEGET",72,0)
 ;
"RTN","DDEGET",73,0)
 D POST(DTYPE)
"RTN","DDEGET",74,0)
 S TARGET=DDEY,ERROR=DDER
"RTN","DDEGET",75,0)
 ;
"RTN","DDEGET",76,0)
 Q
"RTN","DDEGET",77,0)
 ;
"RTN","DDEGET",78,0)
PRE(ENT) ; -- pre-processing logic
"RTN","DDEGET",79,0)
 N X
"RTN","DDEGET",80,0)
 S X=$G(^DDE(+ENT,2)) X:X'="" X
"RTN","DDEGET",81,0)
 Q
"RTN","DDEGET",82,0)
 ;
"RTN","DDEGET",83,0)
POST(ENT) ; -- post-processing logic
"RTN","DDEGET",84,0)
 N X
"RTN","DDEGET",85,0)
 S X=$G(^DDE(+ENT,3)) X:X'="" X
"RTN","DDEGET",86,0)
 Q
"RTN","DDEGET",87,0)
 ;
"RTN","DDEGET",88,0)
ERROR(MSG) ; -- return error MSG
"RTN","DDEGET",89,0)
 N I S I=+$O(@DDER@("A"),-1)
"RTN","DDEGET",90,0)
 S I=I+1,@DDER@(I)=$G(MSG)
"RTN","DDEGET",91,0)
 Q
"RTN","DDEGET",92,0)
 ;
"RTN","DDEGET",93,0)
SYS() ; -- return hashed system name
"RTN","DDEGET",94,0)
 Q $$BASE^XLFUTL($$CRC16^XLFCRC($$KSP^XUPARAM("WHERE")),10,16)
"RTN","DDEMAP")
0^26^B44771305
"RTN","DDEMAP",1,0)
DDEMAP ;SPFO/RAM,MKB - DDE GENERATE ENTITY MAP ;AUG 1, 2018
"RTN","DDEMAP",2,0)
 ;;22.2;VA FileMan;**9**;Jan 05, 2016;Build 73
"RTN","DDEMAP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDEMAP",4,0)
 ;
"RTN","DDEMAP",5,0)
 Q
"RTN","DDEMAP",6,0)
 ;
"RTN","DDEMAP",7,0)
MAIN ;
"RTN","DDEMAP",8,0)
 ;
"RTN","DDEMAP",9,0)
 N FDA,IENS,FIELD,ERR,XUMF,IEN,DIR,X,Y,MAPIFN,DA,DINUM,ZERO,DIC,DA,DIRUT
"RTN","DDEMAP",10,0)
 ;
"RTN","DDEMAP",11,0)
 K DIR,X,Y
"RTN","DDEMAP",12,0)
 S DIR(0)="F^3:30^"
"RTN","DDEMAP",13,0)
 S DIR("A")="Enter name of ENTITY RESOURCE - use camelCase"
"RTN","DDEMAP",14,0)
 D ^DIR Q:$G(DIRUT)
"RTN","DDEMAP",15,0)
 ;
"RTN","DDEMAP",16,0)
 I $D(^DDE("B",Y)) W !!,"An Entity Resource name must be unique - try again",!! G MAIN
"RTN","DDEMAP",17,0)
 ;
"RTN","DDEMAP",18,0)
 S ENTITY=Y
"RTN","DDEMAP",19,0)
 ;
"RTN","DDEMAP",20,0)
NUM ;
"RTN","DDEMAP",21,0)
 ;
"RTN","DDEMAP",22,0)
 K DIR,X,Y
"RTN","DDEMAP",23,0)
 S DIR(0)="NO^1:999999999999:8^"
"RTN","DDEMAP",24,0)
 S DIR("A")="Enter file number to auto map"
"RTN","DDEMAP",25,0)
 D ^DIR Q:$G(DIRUT)
"RTN","DDEMAP",26,0)
 ;
"RTN","DDEMAP",27,0)
 I '$$VFILE^DILFD(Y) W !!,"Not a valid file number in this account - try again",!! G NUM
"RTN","DDEMAP",28,0)
 ;
"RTN","DDEMAP",29,0)
 S MAPIFN=Y
"RTN","DDEMAP",30,0)
 ;
"RTN","DDEMAP",31,0)
 D ZERO,CLEAN,ITEM,EXIT
"RTN","DDEMAP",32,0)
 ;
"RTN","DDEMAP",33,0)
 Q
"RTN","DDEMAP",34,0)
 ;
"RTN","DDEMAP",35,0)
ZERO ; -- zero node
"RTN","DDEMAP",36,0)
 ;
"RTN","DDEMAP",37,0)
 K DIC S DIC="^DDE(",X=ENTITY,DIC(0)="F" D FILE^DICN K DIC
"RTN","DDEMAP",38,0)
 ;
"RTN","DDEMAP",39,0)
 S IEN=+Y
"RTN","DDEMAP",40,0)
 S ZERO=$G(^DIC(MAPIFN,0))
"RTN","DDEMAP",41,0)
 ;
"RTN","DDEMAP",42,0)
 K FDA
"RTN","DDEMAP",43,0)
 S IENS=IEN_","
"RTN","DDEMAP",44,0)
 ;
"RTN","DDEMAP",45,0)
 S FDA(1.5,IENS,.02)=MAPIFN
"RTN","DDEMAP",46,0)
 ;
"RTN","DDEMAP",47,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","DDEMAP",48,0)
 ;
"RTN","DDEMAP",49,0)
 Q
"RTN","DDEMAP",50,0)
 ;
"RTN","DDEMAP",51,0)
CLEAN ; -- clean out SEQUENCE
"RTN","DDEMAP",52,0)
 ;
"RTN","DDEMAP",53,0)
 K FDA
"RTN","DDEMAP",54,0)
 S SEQ=0
"RTN","DDEMAP",55,0)
 F  S SEQ=$O(^DDE(IEN,1,SEQ)) Q:'SEQ  D
"RTN","DDEMAP",56,0)
 .S IENS=SEQ_","_IEN_","
"RTN","DDEMAP",57,0)
 .S FDA(1.51,IENS,.01)="@"
"RTN","DDEMAP",58,0)
 ;
"RTN","DDEMAP",59,0)
 D FILE^DIE("E","FDA")
"RTN","DDEMAP",60,0)
 ;
"RTN","DDEMAP",61,0)
 Q
"RTN","DDEMAP",62,0)
 ;
"RTN","DDEMAP",63,0)
ITEM ;
"RTN","DDEMAP",64,0)
 ;
"RTN","DDEMAP",65,0)
 N FIELD,SEQ,IDX,ZERO,NAME,SUBFILE,TYPE,ZEROIDX,REQUIRED,MIN,MAX,MULTNAME
"RTN","DDEMAP",66,0)
 ;
"RTN","DDEMAP",67,0)
 S FIELD=.001,SEQ=0,IDX=0
"RTN","DDEMAP",68,0)
 F  S FIELD=$O(^DD(MAPIFN,FIELD)) Q:'FIELD  D
"RTN","DDEMAP",69,0)
 . S ZERO=$G(^DD(MAPIFN,FIELD,0)) Q:ZERO=""
"RTN","DDEMAP",70,0)
 . S NAME=$P(ZERO,U)
"RTN","DDEMAP",71,0)
 . S TYPE=$P(ZERO,U,2)
"RTN","DDEMAP",72,0)
 . S REQUIRED=$S(TYPE["R":1,1:0)
"RTN","DDEMAP",73,0)
 . S SUBFILE=$S(TYPE:TYPE,1:"")
"RTN","DDEMAP",74,0)
 . S TYPE=$S(TYPE["F":"string",TYPE["D":"date",TYPE["N":"number",1:"string")
"RTN","DDEMAP",75,0)
 . S SUBFILE=+SUBFILE
"RTN","DDEMAP",76,0)
 . S MULTNAME=$S(SUBFILE:NAME,1:$G(MULTNAME))
"RTN","DDEMAP",77,0)
 . S SEQ=SEQ+1,IDX=IDX+1
"RTN","DDEMAP",78,0)
 . S MAX=$P(ZERO,U,5),MIN=""
"RTN","DDEMAP",79,0)
 . I MAX["K:$L(X)>" S MIN=+$P(MAX,"!($L(X)<",2),MAX=+$P(MAX,"K:$L(X)>",2)
"RTN","DDEMAP",80,0)
 . D NODE
"RTN","DDEMAP",81,0)
 . I FIELD=".01" D IDNODE
"RTN","DDEMAP",82,0)
 ;
"RTN","DDEMAP",83,0)
 Q
"RTN","DDEMAP",84,0)
 ;
"RTN","DDEMAP",85,0)
NODE ; -- ITEM NODE
"RTN","DDEMAP",86,0)
 ;
"RTN","DDEMAP",87,0)
 K FDA
"RTN","DDEMAP",88,0)
 S IENS="+"_IDX_","_IEN_","
"RTN","DDEMAP",89,0)
 S FDA(1.51,IENS,.01)=$$CC(NAME)
"RTN","DDEMAP",90,0)
 S FDA(1.51,IENS,.02)=SEQ                   ;FIELD
"RTN","DDEMAP",91,0)
 S FDA(1.51,IENS,.03)=$S(SUBFILE:"L",1:"S") ;TYPE
"RTN","DDEMAP",92,0)
 S FDA(1.51,IENS,.04)=$S(SUBFILE:SUBFILE,1:MAPIFN)
"RTN","DDEMAP",93,0)
 S:'SUBFILE FDA(1.51,IENS,.05)=FIELD
"RTN","DDEMAP",94,0)
 S:SUBFILE FDA(1.51,IENS,1.01)=2
"RTN","DDEMAP",95,0)
 ;S FDA(1.51,IENS,1.08)=SEQ
"RTN","DDEMAP",96,0)
 ;S:MIN FDA(1.51,IENS,1.04)=MIN
"RTN","DDEMAP",97,0)
 ;S:MAX FDA(1.51,IENS,1.05)=MAX
"RTN","DDEMAP",98,0)
 ;S:REQUIRED FDA(1.51,IENS,1.1)=REQUIRED
"RTN","DDEMAP",99,0)
 ;S FDA(1.51,IENS,1.12)=NAME
"RTN","DDEMAP",100,0)
 ;
"RTN","DDEMAP",101,0)
 I SUBFILE D  S FDA(1.51,IENS,.08)=NAME ;D:SUBFILE SUBFILE
"RTN","DDEMAP",102,0)
 . N DIC,X,Y,IEN,IENS,FDA
"RTN","DDEMAP",103,0)
 . ; create sub-entity
"RTN","DDEMAP",104,0)
 . I $D(^DDE("B",NAME)) S NAME=NAME_" "_SUBFILE ;ensure unique name
"RTN","DDEMAP",105,0)
 . S DIC="^DDE(",X=NAME,DIC(0)="F",DIC("DR")=".02///"_SUBFILE
"RTN","DDEMAP",106,0)
 . D FILE^DICN S (IEN,SUB)=+Y
"RTN","DDEMAP",107,0)
 . ; populate
"RTN","DDEMAP",108,0)
 . D SUBFILE
"RTN","DDEMAP",109,0)
 ;
"RTN","DDEMAP",110,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","DDEMAP",111,0)
 ;
"RTN","DDEMAP",112,0)
 Q
"RTN","DDEMAP",113,0)
 ;
"RTN","DDEMAP",114,0)
IDNODE ; id node
"RTN","DDEMAP",115,0)
 ;
"RTN","DDEMAP",116,0)
 K FDA
"RTN","DDEMAP",117,0)
 S IENS=IEN_","
"RTN","DDEMAP",118,0)
 ;
"RTN","DDEMAP",119,0)
 S FDA(1.5,IENS,1.1)=$$CC(NAME)
"RTN","DDEMAP",120,0)
 S FDA(1.5,IENS,1.2)=".01"
"RTN","DDEMAP",121,0)
 S FDA(1.5,IENS,1.4)="B"
"RTN","DDEMAP",122,0)
 ;
"RTN","DDEMAP",123,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","DDEMAP",124,0)
 ;
"RTN","DDEMAP",125,0)
 Q
"RTN","DDEMAP",126,0)
 ;
"RTN","DDEMAP",127,0)
SUBFILE ;
"RTN","DDEMAP",128,0)
 ;
"RTN","DDEMAP",129,0)
 N SUBSEQ,ZERO1FLD,SUBFIELD,SUBNAME,SUBTYPE,SUBIDX,REQUIRED,MIN,MAX
"RTN","DDEMAP",130,0)
 ;
"RTN","DDEMAP",131,0)
 S ZERO1FLD=$P($G(^DD(SUBFILE,.01,0)),U)
"RTN","DDEMAP",132,0)
 ;
"RTN","DDEMAP",133,0)
 S SUBFIELD=.001,SUBSEQ=0,SUBIDX=0
"RTN","DDEMAP",134,0)
 F  S SUBFIELD=$O(^DD(SUBFILE,SUBFIELD)) Q:'SUBFIELD  D
"RTN","DDEMAP",135,0)
 . S ZERO=$G(^DD(SUBFILE,SUBFIELD,0)) Q:ZERO=""
"RTN","DDEMAP",136,0)
 . S SUBNAME=$P(ZERO,U)
"RTN","DDEMAP",137,0)
 . S SUBTYPE=$P(ZERO,U,2)
"RTN","DDEMAP",138,0)
 . S REQUIRED=$S(SUBTYPE["R":1,1:0)
"RTN","DDEMAP",139,0)
 . S SUBTYPE=$S(SUBTYPE["F":"string",SUBTYPE["D":"date",SUBTYPE["N":"number",1:"string")
"RTN","DDEMAP",140,0)
 . S SUBSEQ=SUBSEQ+1,SUBIDX=SUBIDX+1
"RTN","DDEMAP",141,0)
 . S:SUBFIELD=".01" ZEROIDX=SUBIDX
"RTN","DDEMAP",142,0)
 . S MAX=$P(ZERO,U,5),MIN=""
"RTN","DDEMAP",143,0)
 . I MAX["K:$L(X)>" S MIN=+$P(MAX,"!($L(X)<",2),MAX=+$P(MAX,"K:$L(X)>",2)
"RTN","DDEMAP",144,0)
 . D SUBELE
"RTN","DDEMAP",145,0)
 . ;D SUBSEQ
"RTN","DDEMAP",146,0)
 ;
"RTN","DDEMAP",147,0)
 Q
"RTN","DDEMAP",148,0)
 ;
"RTN","DDEMAP",149,0)
SUBELE ; -- SUBFILE ITEMS
"RTN","DDEMAP",150,0)
 ;
"RTN","DDEMAP",151,0)
 I $O(^DDE(IEN,1,"B",$$CC(SUBNAME),0)) D
"RTN","DDEMAP",152,0)
 . N SUFFIX,ZNAME S SUFFIX=1
"RTN","DDEMAP",153,0)
 . D  S SUBNAME=ZNAME
"RTN","DDEMAP",154,0)
 .. F  S ZNAME=$$CC(SUBNAME)_SUFFIX,SUFFIX=SUFFIX+1 Q:'$O(^DDE(IEN,1,"B",ZNAME,0))
"RTN","DDEMAP",155,0)
 . S:SUBFIELD=".01" ZERO1FLD=SUBNAME
"RTN","DDEMAP",156,0)
 ;
"RTN","DDEMAP",157,0)
 N IENS
"RTN","DDEMAP",158,0)
 ;
"RTN","DDEMAP",159,0)
 ;S IDX=IDX+1
"RTN","DDEMAP",160,0)
 ;
"RTN","DDEMAP",161,0)
 N FDA
"RTN","DDEMAP",162,0)
 S IENS="+"_SUBIDX_","_IEN_","
"RTN","DDEMAP",163,0)
 S FDA(1.51,IENS,.01)=$$CC(SUBNAME)
"RTN","DDEMAP",164,0)
 S FDA(1.51,IENS,.02)=SUBIDX ;SUBFIELD
"RTN","DDEMAP",165,0)
 S FDA(1.51,IENS,.03)="S"    ;SUBTYPE
"RTN","DDEMAP",166,0)
 S FDA(1.51,IENS,.04)=SUBFILE
"RTN","DDEMAP",167,0)
 S FDA(1.51,IENS,.05)=SUBFIELD
"RTN","DDEMAP",168,0)
 ;S FDA(1.51,IENS,1.01)=$$CC(ZERO1FLD)
"RTN","DDEMAP",169,0)
 ;S:MIN FDA(1.51,IENS,1.04)=MIN
"RTN","DDEMAP",170,0)
 ;S:MAX FDA(1.51,IENS,1.05)=MAX
"RTN","DDEMAP",171,0)
 ;S:REQUIRED FDA(1.51,IENS,1.1)=REQUIRED
"RTN","DDEMAP",172,0)
 ;
"RTN","DDEMAP",173,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","DDEMAP",174,0)
 ;
"RTN","DDEMAP",175,0)
 Q
"RTN","DDEMAP",176,0)
 ;
"RTN","DDEMAP",177,0)
SUBSEQ ; -- SUBFILE SEQUENCE
"RTN","DDEMAP",178,0)
 ;
"RTN","DDEMAP",179,0)
 N IENS
"RTN","DDEMAP",180,0)
 ;
"RTN","DDEMAP",181,0)
 K FDA
"RTN","DDEMAP",182,0)
 S IENS="+"_SUBSEQ_","_ZEROIDX_","_IEN_","
"RTN","DDEMAP",183,0)
 S FDA(1.512,IENS,.01)=SUBSEQ
"RTN","DDEMAP",184,0)
 S FDA(1.512,IENS,.02)=$$CC(SUBNAME)
"RTN","DDEMAP",185,0)
 S FDA(1.512,IENS,.03)=SUBFIELD
"RTN","DDEMAP",186,0)
 ;
"RTN","DDEMAP",187,0)
 D UPDATE^DIE("E","FDA",,"ERR")
"RTN","DDEMAP",188,0)
 ;
"RTN","DDEMAP",189,0)
 Q
"RTN","DDEMAP",190,0)
 ;
"RTN","DDEMAP",191,0)
EXIT ; -- cleanup, and quit
"RTN","DDEMAP",192,0)
 ;
"RTN","DDEMAP",193,0)
 Q
"RTN","DDEMAP",194,0)
 ;
"RTN","DDEMAP",195,0)
CC(X) ; -- camelCase
"RTN","DDEMAP",196,0)
 ;
"RTN","DDEMAP",197,0)
 Q:$G(X)="" ""
"RTN","DDEMAP",198,0)
 ;
"RTN","DDEMAP",199,0)
 N Y,Y1,Y2
"RTN","DDEMAP",200,0)
 S Y=$$TITLE^XLFSTR(X)
"RTN","DDEMAP",201,0)
 S Y=$TR(Y," ","")
"RTN","DDEMAP",202,0)
 S $E(Y,1)=$$LOW^XLFSTR($E(Y,1))
"RTN","DDEMAP",203,0)
 S Y=$TR(Y,")","")
"RTN","DDEMAP",204,0)
 S Y=$TR(Y,"'","")
"RTN","DDEMAP",205,0)
 S Y=$TR(Y,"]","")
"RTN","DDEMAP",206,0)
 S Y=$TR(Y,"?","")
"RTN","DDEMAP",207,0)
 S Y=$TR(Y,"}","")
"RTN","DDEMAP",208,0)
 I Y["{" S Y1=$P(Y,"("),Y2=$P(Y,"(",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_Y2
"RTN","DDEMAP",209,0)
 I Y["[" S Y1=$P(Y,"["),Y2=$P(Y,"[",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_Y2
"RTN","DDEMAP",210,0)
 I Y["/" S Y1=$P(Y,"/"),Y2=$P(Y,"/",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_Y2
"RTN","DDEMAP",211,0)
 I Y["\" S Y1=$P(Y,"\"),Y2=$P(Y,"\",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_Y2
"RTN","DDEMAP",212,0)
 I Y["-" S Y1=$P(Y,"-"),Y2=$P(Y,"-",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_Y2
"RTN","DDEMAP",213,0)
 I Y["." S Y1=$P(Y,"."),Y2=$P(Y,".",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_Y2
"RTN","DDEMAP",214,0)
 I Y["(" S Y1=$P(Y,"("),Y2=$P(Y,"(",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_Y2
"RTN","DDEMAP",215,0)
 I Y["&" S Y1=$P(Y,"&"),Y2=$P(Y,"&",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_"And"_Y2
"RTN","DDEMAP",216,0)
 I Y["+" S Y1=$P(Y,"+"),Y2=$P(Y,"+",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_"Plus"_Y2
"RTN","DDEMAP",217,0)
 I Y["$" S Y1=$P(Y,"$"),Y2=$P(Y,"$",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_"Dollar"_Y2
"RTN","DDEMAP",218,0)
 I Y["#" S Y1=$P(Y,"#"),Y2=$P(Y,"#",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_"Number"_Y2
"RTN","DDEMAP",219,0)
 I Y["%" S Y1=$P(Y,"%"),Y2=$P(Y,"%",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_"Percent"_Y2
"RTN","DDEMAP",220,0)
 I Y["~" S Y1=$P(Y,"~"),Y2=$P(Y,"~",2),$E(Y2,1)=$$UP^XLFSTR($E(Y2,1)),Y=Y1_"Tilde"_Y2
"RTN","DDEMAP",221,0)
 ;
"RTN","DDEMAP",222,0)
 Q Y
"RTN","DDEMAP",223,0)
 ;
"RTN","DDEOPT")
0^24^B794105
"RTN","DDEOPT",1,0)
DDEOPT ;SPFO/RAM - DDE OPTIONS ;AUG 1, 2018
"RTN","DDEOPT",2,0)
 ;;22.2;VA FileMan;**9**;;Build 73;Build 42
"RTN","DDEOPT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDEOPT",4,0)
 ;
"RTN","DDEOPT",5,0)
0 S DIC="^DOPT(""DDE"","
"RTN","DDEOPT",6,0)
 G OPT:$D(^DOPT("DDE",2)) S ^(0)="ENTITY MAPPING OPTION^1.0" K ^("B")
"RTN","DDEOPT",7,0)
 F X=1:1:2 S ^DOPT("DDE",X,0)=$P($T(@X),";;",2)
"RTN","DDEOPT",8,0)
 S DIK=DIC D IXALL^DIK
"RTN","DDEOPT",9,0)
OPT ;
"RTN","DDEOPT",10,0)
 S DIC(0)="AEQIZ" D ^DIC G Q:Y<0 S DI=+Y D EN G 0
"RTN","DDEOPT",11,0)
 ;
"RTN","DDEOPT",12,0)
EN ;Entry point for all data access control options
"RTN","DDEOPT",13,0)
 D @DI W !!
"RTN","DDEOPT",14,0)
Q K %,DI,DIC,DIK,X,Y Q
"RTN","DDEOPT",15,0)
 ;
"RTN","DDEOPT",16,0)
1 ;;ENTITY ENTER/EDIT
"RTN","DDEOPT",17,0)
 G EN^DDE1A
"RTN","DDEOPT",18,0)
 ;
"RTN","DDEOPT",19,0)
2 ;;AUTO GEN ENTITY FOR A DD #
"RTN","DDEOPT",20,0)
 D MAIN^DDEMAP
"RTN","DDEOPT",21,0)
 Q
"RTN","DDERR")
0^27^B683652
"RTN","DDERR",1,0)
DDERR ;SLC/MKB -- Entity Error Handler ;9/10/18  14:33
"RTN","DDERR",2,0)
 ;;22.2;VA FileMan;**9**;Jan 05, 2016;Build 73
"RTN","DDERR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDERR",4,0)
 ;
"RTN","DDERR",5,0)
 ;
"RTN","DDERR",6,0)
QRY ; -- save Query error
"RTN","DDERR",7,0)
 N ERROR
"RTN","DDERR",8,0)
 S ERROR="Entity "_$G(DTYPE)_" query: "_$$EC^%ZOSV
"RTN","DDERR",9,0)
 G CONT
"RTN","DDERR",10,0)
 ;
"RTN","DDERR",11,0)
ONE ; -- save Record error
"RTN","DDERR",12,0)
 N ERROR
"RTN","DDERR",13,0)
 S ERROR="Entity "_$G(DTYPE)_"/ID "_$G(DLIST(DDEN))_": "_$$EC^%ZOSV
"RTN","DDERR",14,0)
 ;
"RTN","DDERR",15,0)
CONT ; -- Save error in trap, return array
"RTN","DDERR",16,0)
 ;
"RTN","DDERR",17,0)
 ;Add message to return error array
"RTN","DDERR",18,0)
 D:$D(ERROR) ERROR^DDEGET(ERROR)
"RTN","DDERR",19,0)
 ;
"RTN","DDERR",20,0)
 ;Log the error, continue to next record
"RTN","DDERR",21,0)
 D ^%ZTER,UNWIND^%ZTER
"RTN","DDERR",22,0)
 Q
"RTN","DDEX")
0^22^B1026050
"RTN","DDEX",1,0)
DDEX ;SLC/MKB - Entity DD utilities ;AUG 1, 2018  12:37
"RTN","DDEX",2,0)
 ;;22.2;VA FileMan;**9**;Jan 05, 2016;Build 73
"RTN","DDEX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DDEX",4,0)
 Q
"RTN","DDEX",5,0)
 ;
"RTN","DDEX",6,0)
TREE ;Look back up tree to make sure item is not ancestor (input xform)
"RTN","DDEX",7,0)
 ;From: 1.51,.08 Entry: DA(1),X
"RTN","DDEX",8,0)
 N DDEDA,DDED
"RTN","DDEX",9,0)
 S DDEDA=DA(1) K:X=DDEDA X
"RTN","DDEX",10,0)
 D TREE1
"RTN","DDEX",11,0)
 Q
"RTN","DDEX",12,0)
TREE1 F DDED=0:0 Q:'$D(X)  S DDED=$O(^DDE("AD",DDEDA,DDED)) Q:DDED'>0  K:DDED=X X Q:'$D(X)  D TREE2
"RTN","DDEX",13,0)
 Q
"RTN","DDEX",14,0)
TREE2 N DDEDA S DDEDA=DDED N DDED D TREE1
"RTN","DDEX",15,0)
 Q
"RTN","DDEX",16,0)
 ;
"RTN","DDEX",17,0)
FLDLST ; -- ??help for FIELD# [DDEFN set in ScreenMan form]
"RTN","DDEX",18,0)
 N FN,DIC,DO,X
"RTN","DDEX",19,0)
 S FN=$G(DDEFN) S:'FN FN=$P($G(^DDE(DA(1),1,DA,0)),U,4) Q:'FN
"RTN","DDEX",20,0)
 S DIC="^DD("_FN_",",DIC(0)="EQ",X="??" D ^DIC
"RTN","DDEX",21,0)
 Q
"RTN","DII1")
0^25^B2361298
"RTN","DII1",1,0)
DII1 ;SFISC/XAK-OTHER OPTIONS ;JUL 25, 1996  14:15
"RTN","DII1",2,0)
 ;;22.2;VA FileMan;**8,10,9**;Jan 05, 2016;Build 73
"RTN","DII1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DII1",4,0)
 ;;Submitted to OSEHRA 5 January 2015 by the VISTA Expertise Network.
"RTN","DII1",5,0)
 ;;Based on Medsphere Systems Corporation's MSC FileMan 1051.
"RTN","DII1",6,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","DII1",7,0)
 ;
"RTN","DII1",8,0)
0 S DIC="^DOPT(""DII1"","
"RTN","DII1",9,0)
 G OPT:$D(^DOPT("DII1",12)) S ^(0)="OTHER OPTION^1.01" K ^("B")
"RTN","DII1",10,0)
 F X=1:1:12 S ^DOPT("DII1",X,0)=$P($T(@X),";;",2)
"RTN","DII1",11,0)
 S DIK=DIC D IXALL^DIK
"RTN","DII1",12,0)
OPT ;
"RTN","DII1",13,0)
 S DIC(0)="AEQIZ" D ^DIC G Q:Y<0 S DI=+Y D EN G 0
"RTN","DII1",14,0)
 ;
"RTN","DII1",15,0)
EN ;
"RTN","DII1",16,0)
 D @DI W !!
"RTN","DII1",17,0)
Q K %,DIC,DIK,DI,DA,I,J,X,Y Q
"RTN","DII1",18,0)
 ;
"RTN","DII1",19,0)
1 ;;FILEGRAMS
"RTN","DII1",20,0)
 G ^DIFGO
"RTN","DII1",21,0)
 ;
"RTN","DII1",22,0)
2 ;;ARCHIVING
"RTN","DII1",23,0)
 G NOKL^DIAR
"RTN","DII1",24,0)
 ;
"RTN","DII1",25,0)
3 ;;AUDITING
"RTN","DII1",26,0)
 G ^DIAU
"RTN","DII1",27,0)
 ;
"RTN","DII1",28,0)
4 ;;SCREENMAN
"RTN","DII1",29,0)
 G ^DDSOPT
"RTN","DII1",30,0)
 ;
"RTN","DII1",31,0)
5 ;;STATISTICS
"RTN","DII1",32,0)
 G ^DIX
"RTN","DII1",33,0)
 ;
"RTN","DII1",34,0)
6 ;;EXTRACT DATA TO FILEMAN FILE
"RTN","DII1",35,0)
 G ^DIAX
"RTN","DII1",36,0)
 ;
"RTN","DII1",37,0)
7 ;;DATA EXPORT TO FOREIGN FORMAT
"RTN","DII1",38,0)
 G NOKL^DDXP
"RTN","DII1",39,0)
 ;
"RTN","DII1",40,0)
8 ;;IMPORT DATA
"RTN","DII1",41,0)
 G EN^DDMPU
"RTN","DII1",42,0)
 ;
"RTN","DII1",43,0)
9 ;;BROWSER
"RTN","DII1",44,0)
 G ^DDBR
"RTN","DII1",45,0)
 ;
"RTN","DII1",46,0)
10 ;;DATA ACCESS CONTROL
"RTN","DII1",47,0)
 G ^DIACOPT
"RTN","DII1",48,0)
 ;
"RTN","DII1",49,0)
11 ;;DATA TYPE OPTIONS
"RTN","DII1",50,0)
 G ^DIFMEDT1
"RTN","DII1",51,0)
 ;
"RTN","DII1",52,0)
12 ;;ENTITY MAPPING
"RTN","DII1",53,0)
 G ^DDEOPT
"SEC","^DIC",1.5,1.5,0,"AUDIT")
@
"SEC","^DIC",1.5,1.5,0,"DD")
@
"SEC","^DIC",1.5,1.5,0,"DEL")
@
"SEC","^DIC",1.5,1.5,0,"LAYGO")
@
"SEC","^DIC",1.5,1.5,0,"RD")
@
"SEC","^DIC",1.5,1.5,0,"WR")
@
"VER")
8.0^22.2
"^DD",1.5,1.5,0)
FIELD^NL^19^33
"^DD",1.5,1.5,0,"DT")
3180720
"^DD",1.5,1.5,0,"ID","W.06")
W "   ",@("$P($P($C(59)_$S($D(^DD(1.5,.06,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,6)_"":"",2),$C(59),1)")
"^DD",1.5,1.5,0,"IX","AD",1.51,.08)

"^DD",1.5,1.5,0,"IX","B",1.5,.01)

"^DD",1.5,1.5,0,"IX","F",1.5,.02)

"^DD",1.5,1.5,0,"NM","ENTITY")

"^DD",1.5,1.5,0,"PT",1.51,.08)

"^DD",1.5,1.5,0,"VRPK")
VPR
"^DD",1.5,1.5,.01,0)
NAME^RFJ30^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",1.5,1.5,.01,1,0)
^.1
"^DD",1.5,1.5,.01,1,1,0)
1.5^B
"^DD",1.5,1.5,.01,1,1,1)
S ^DDE("B",$E(X,1,30),DA)=""
"^DD",1.5,1.5,.01,1,1,2)
K ^DDE("B",$E(X,1,30),DA)
"^DD",1.5,1.5,.01,1,1,"DT")
3150910
"^DD",1.5,1.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",1.5,1.5,.01,21,0)
^.001^1^1^3180208^^^^
"^DD",1.5,1.5,.01,21,1,0)
The name of the entity or resource this record will represent.
"^DD",1.5,1.5,.01,"DT")
3180412
"^DD",1.5,1.5,.02,0)
DEFAULT FILE NUMBER^NJ21,8X^^0;2^K:+X'=X!(X>999999999999)!(X<.1)!(X?.E1"."9N.N)!'($D(^DD(+X,0))#2) X
"^DD",1.5,1.5,.02,1,0)
^.1
"^DD",1.5,1.5,.02,1,1,0)
1.5^F
"^DD",1.5,1.5,.02,1,1,1)
S ^DDE("F",$E(X,1,30),DA)=""
"^DD",1.5,1.5,.02,1,1,2)
K ^DDE("F",$E(X,1,30),DA)
"^DD",1.5,1.5,.02,1,1,"%D",0)
^.101^1^1^3180720^^
"^DD",1.5,1.5,.02,1,1,"%D",1,0)
Allows finding Entities by primary file number
"^DD",1.5,1.5,.02,1,1,"DT")
3180305
"^DD",1.5,1.5,.02,3)
Enter the file number associated with this entity, between .1 and 999999999999.
"^DD",1.5,1.5,.02,21,0)
^^3^3^3180410^
"^DD",1.5,1.5,.02,21,1,0)
This is the primary file or sub-file number associated with this entity, 
"^DD",1.5,1.5,.02,21,2,0)
and the default source file for data. It is optional if no data associated
"^DD",1.5,1.5,.02,21,3,0)
with this entity is stored in any FileMan file.
"^DD",1.5,1.5,.02,"DT")
3180418
"^DD",1.5,1.5,.03,0)
SORT BY^FJ15^^0;3^K:$L(X)>15!($L(X)<1) X
"^DD",1.5,1.5,.03,3)
Answer must be 1-15 characters in length.
"^DD",1.5,1.5,.03,21,0)
^^4^4^3180305^
"^DD",1.5,1.5,.03,21,1,0)
This is the default cross reference to use when GETting instances of this
"^DD",1.5,1.5,.03,21,2,0)
entity or resource; it may be overridden by the XREF field in the Item
"^DD",1.5,1.5,.03,21,3,0)
multiple when this entity is embedded inside another, or by other query
"^DD",1.5,1.5,.03,21,4,0)
parameters.
"^DD",1.5,1.5,.03,"DT")
3180305
"^DD",1.5,1.5,.04,0)
FILTER BY^FJ8^^0;4^K:$L(X)>8!($L(X)<1) X
"^DD",1.5,1.5,.04,3)
Answer must be 1-8 characters in length.
"^DD",1.5,1.5,.04,21,0)
^^5^5^3180322^
"^DD",1.5,1.5,.04,21,1,0)
Enter the name of a local variable that contains the value to filter
"^DD",1.5,1.5,.04,21,2,0)
entries by using the specified cross reference. See the FileMan 
"^DD",1.5,1.5,.04,21,3,0)
Developer's Guide for a list of variables that will be available to use
"^DD",1.5,1.5,.04,21,4,0)
(read only). Other variables can be set and killed by the Entity's GET Pre
"^DD",1.5,1.5,.04,21,5,0)
and Post Processing code fields.
"^DD",1.5,1.5,.04,"DT")
3180305
"^DD",1.5,1.5,.05,0)
READ ONLY^S^1:READONLY;^0;5^Q
"^DD",1.5,1.5,.05,3)
Enter 1 to set the read only flag for ENTITY.
"^DD",1.5,1.5,.05,21,0)
^.001^2^2^3180410^^
"^DD",1.5,1.5,.05,21,1,0)
Set this flag if this entity is read only. It will then not support the 
"^DD",1.5,1.5,.05,21,2,0)
create, post, or put http verbs.
"^DD",1.5,1.5,.05,"DT")
3180720
"^DD",1.5,1.5,.06,0)
DATA MODEL^S^S:SDA;F:FHIR;^0;6^Q
"^DD",1.5,1.5,.06,3)
Enter the data model that this entity represents.
"^DD",1.5,1.5,.06,21,0)
^^2^2^3180305^
"^DD",1.5,1.5,.06,21,1,0)
If this entity is intended to return data according to the constraints of
"^DD",1.5,1.5,.06,21,2,0)
a specific model, such as SDA or FHIR, then enter that here.
"^DD",1.5,1.5,.06,"DT")
3180418
"^DD",1.5,1.5,.1,0)
DISPLAY NAME^FJ80^^.1;1^K:$L(X)>80!($L(X)<1) X
"^DD",1.5,1.5,.1,3)
Answer must be 1-80 characters in length.
"^DD",1.5,1.5,.1,21,0)
^^2^2^3180208^
"^DD",1.5,1.5,.1,21,1,0)
This is the name that will be used for the XML or JSON tags. If no value
"^DD",1.5,1.5,.1,21,2,0)
is entered here, the Name (.01) field will be used.
"^DD",1.5,1.5,.1,"DT")
3180418
"^DD",1.5,1.5,1,0)
ITEM^1.51^^1;0
"^DD",1.5,1.5,1,21,0)
^.001^1^1^3180518^^^^
"^DD",1.5,1.5,1,21,1,0)
The Items multiple defines the data elements that make up the entity.
"^DD",1.5,1.5,1,"DT")
3180209
"^DD",1.5,1.5,1.1,0)
KEY ITEM^F^^ID;1^K:$L(X)>100!($L(X)<2) X
"^DD",1.5,1.5,1.1,3)
Answer must be 2-100 characters in length.
"^DD",1.5,1.5,1.1,21,0)
^^1^1^3150903^
"^DD",1.5,1.5,1.1,21,1,0)
The item that is the key value of this entity.
"^DD",1.5,1.5,1.1,"DT")
3150903
"^DD",1.5,1.5,1.2,0)
KEY FIELD NUMBER^NJ22,9^^ID;2^K:+X'=X!(X>999999999999)!(X<.01)!(X?.E1"."10N.N) X
"^DD",1.5,1.5,1.2,3)
Type a number between .01 and 999999999999, 9 decimal digits.
"^DD",1.5,1.5,1.2,21,0)
^^1^1^3150903^
"^DD",1.5,1.5,1.2,21,1,0)
The field number associated with the item that is the key to the entity.
"^DD",1.5,1.5,1.2,"DT")
3150903
"^DD",1.5,1.5,1.3,0)
KEY CODSYS^F^^ID;3^K:$L(X)>20!($L(X)<2) X
"^DD",1.5,1.5,1.3,3)
Answer must be 2-20 characters in length.
"^DD",1.5,1.5,1.3,21,0)
^^1^1^3150903^
"^DD",1.5,1.5,1.3,21,1,0)
The coding system associated with the key.
"^DD",1.5,1.5,1.3,"DT")
3150903
"^DD",1.5,1.5,1.4,0)
KEY XREF^F^^ID;4^K:$L(X)>20!($L(X)<1) X
"^DD",1.5,1.5,1.4,3)
Answer must be 1-20 characters in length.
"^DD",1.5,1.5,1.4,21,0)
^^1^1^3150903^
"^DD",1.5,1.5,1.4,21,1,0)
The name of the item that is the alternate key to the entity type.
"^DD",1.5,1.5,1.4,"DT")
3150903
"^DD",1.5,1.5,2,0)
GET PRE PROCESSING^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,2,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,2,9)
@
"^DD",1.5,1.5,2,21,0)
^^8^8^3181120^
"^DD",1.5,1.5,2,21,1,0)
This is code that will be executed prior to any other processing for the 
"^DD",1.5,1.5,2,21,2,0)
GET method. If you set any additional variables here for use inside the 
"^DD",1.5,1.5,2,21,3,0)
Entity, remember to kill them in the GET POST PROCESSING.
"^DD",1.5,1.5,2,21,4,0)
 
"^DD",1.5,1.5,2,21,5,0)
If this Entity is being processed inside another one, the local variable 
"^DD",1.5,1.5,2,21,6,0)
ID holds the string that the parent entity will be passing into this one 
"^DD",1.5,1.5,2,21,7,0)
(i.e., a pointer from a field value that is being expanded into a full 
"^DD",1.5,1.5,2,21,8,0)
coded element by this entity).
"^DD",1.5,1.5,2,"DT")
3150903
"^DD",1.5,1.5,3,0)
GET POST PROCESSING^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,3,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,3,9)
@
"^DD",1.5,1.5,3,21,0)
^^3^3^3181120^
"^DD",1.5,1.5,3,21,1,0)
This is code that will be executed after all other processing for the
"^DD",1.5,1.5,3,21,2,0)
GET method. Be sure to kill any variables set in the GET PRE PROCESSING 
"^DD",1.5,1.5,3,21,3,0)
field.
"^DD",1.5,1.5,3,"DT")
3150903
"^DD",1.5,1.5,4,0)
GET ID PROCESSING^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,4,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,4,9)
@
"^DD",1.5,1.5,4,21,0)
^^5^5^3181120^
"^DD",1.5,1.5,4,21,1,0)
This is code that will be executed for each record, to identify or
"^DD",1.5,1.5,4,21,2,0)
validate it. Local variable DIEN contains the id value or string passed 
"^DD",1.5,1.5,4,21,3,0)
into this Entity to operate on.
"^DD",1.5,1.5,4,21,4,0)
 
"^DD",1.5,1.5,4,21,5,0)
Set DDEOUT=1 to skip or omit this entire record from the results.
"^DD",1.5,1.5,4,"DT")
3150903
"^DD",1.5,1.5,5,0)
GET QUERY ROUTINE^Ft12^^5;E1,99^
"^DD",1.5,1.5,5,3)
Enter the tag^routine to be used in place of FIND^DIC for this Entity.
"^DD",1.5,1.5,5,21,0)
^^11^11^3181120^
"^DD",1.5,1.5,5,21,1,0)
Enter the tag^routine to be used for finding the appropriate records in
"^DD",1.5,1.5,5,21,2,0)
the VistA primary source file, instead of FIND^DIC. This routine should 
"^DD",1.5,1.5,5,21,3,0)
create the array DLIST(#)=ID, where # is a sequential number and ID is a 
"^DD",1.5,1.5,5,21,4,0)
string that identifies a record in the Default File. ID may also be a 
"^DD",1.5,1.5,5,21,5,0)
string that is processed by this entity.
"^DD",1.5,1.5,5,21,6,0)
 
"^DD",1.5,1.5,5,21,7,0)
Local variables that may be referenced and used (not changed or killed) 
"^DD",1.5,1.5,5,21,8,0)
include: DFN = Patient file #2 ien
"^DD",1.5,1.5,5,21,9,0)
       DSTRT = Start date.time of search (FileMan format)
"^DD",1.5,1.5,5,21,10,0)
       DSTOP = Stop date.time of search (FileMan format)
"^DD",1.5,1.5,5,21,11,0)
        DMAX = Maximum number of results to return
"^DD",1.5,1.5,5,101,0)
^.10101P^7.1^1
"^DD",1.5,1.5,5,101,7.1,0)
7.1^
"^DD",1.5,1.5,5,101,7.1,31)
1
"^DD",1.5,1.5,5,"DT")
3180307
"^DD",1.5,1.5,5.1,0)
SCREEN^K^^5.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,5.1,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,5.1,9)
@
"^DD",1.5,1.5,5.1,21,0)
^^2^2^3180303^
"^DD",1.5,1.5,5.1,21,1,0)
This is Standard MUMPS code that will set DIC('S') for a screen, to be
"^DD",1.5,1.5,5.1,21,2,0)
used in a FIND^DIC query.
"^DD",1.5,1.5,5.1,"DT")
3180303
"^DD",1.5,1.5,6,0)
PUT PRE PROCESSING^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,6,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,6,9)
@
"^DD",1.5,1.5,6,21,0)
^.001^2^2^3180208^^^^
"^DD",1.5,1.5,6,21,1,0)
This is code that will be executed prior to any other processing for the
"^DD",1.5,1.5,6,21,2,0)
PUT method.
"^DD",1.5,1.5,6,"DT")
3150903
"^DD",1.5,1.5,7,0)
PUT POST PROCESSING^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,7,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,7,9)
@
"^DD",1.5,1.5,7,21,0)
^.001^2^2^3180208^^^
"^DD",1.5,1.5,7,21,1,0)
This is code that will be executed after all other processing for the
"^DD",1.5,1.5,7,21,2,0)
PUT method.
"^DD",1.5,1.5,7,"DT")
3150903
"^DD",1.5,1.5,8,0)
PUT ID PROCESSING^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,8,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,8,9)
@
"^DD",1.5,1.5,8,21,0)
^.001^2^2^3180208^^^
"^DD",1.5,1.5,8,21,1,0)
This is code that will be executed for each record, to identify or
"^DD",1.5,1.5,8,21,2,0)
validate it.
"^DD",1.5,1.5,8,"DT")
3150903
"^DD",1.5,1.5,10,0)
PUT CREATE PROCESSING^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,10,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,10,9)
@
"^DD",1.5,1.5,10,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,10,21,1,0)
This is code that will be executed whenever a new record is created via
"^DD",1.5,1.5,10,21,2,0)
the PUT method.
"^DD",1.5,1.5,10,"DT")
3180208
"^DD",1.5,1.5,11,0)
DELETE PRE PROCESSING^K^^11;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,11,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,11,9)
@
"^DD",1.5,1.5,11,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,11,21,1,0)
This is code that will be executed prior to any other processing for the
"^DD",1.5,1.5,11,21,2,0)
DELETE method.
"^DD",1.5,1.5,11,"DT")
3150903
"^DD",1.5,1.5,12,0)
DELETE POST PROCESSING^K^^12;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,12,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,12,9)
@
"^DD",1.5,1.5,12,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,12,21,1,0)
This is code that will be executed after all other processing for the
"^DD",1.5,1.5,12,21,2,0)
DELETE method.
"^DD",1.5,1.5,12,"DT")
3150903
"^DD",1.5,1.5,13,0)
DELETE ID PROCESSING^K^^13;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,13,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,13,9)
@
"^DD",1.5,1.5,13,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,13,21,1,0)
This is code that will be executed for each record, to identify or
"^DD",1.5,1.5,13,21,2,0)
validate it.
"^DD",1.5,1.5,13,"DT")
3150903
"^DD",1.5,1.5,14,0)
POST PRE PROCESSING^K^^14;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,14,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,14,9)
@
"^DD",1.5,1.5,14,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,14,21,1,0)
This is code that will be executed prior to any other processing for the
"^DD",1.5,1.5,14,21,2,0)
POST method.
"^DD",1.5,1.5,14,"DT")
3150903
"^DD",1.5,1.5,15,0)
POST POST PROCESSING^K^^15;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,15,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,15,9)
@
"^DD",1.5,1.5,15,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,15,21,1,0)
This is code that will be executed after all other processing for the
"^DD",1.5,1.5,15,21,2,0)
POST method.
"^DD",1.5,1.5,15,"DT")
3150903
"^DD",1.5,1.5,16,0)
POST ID PROCESSING^K^^16;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,16,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,16,9)
@
"^DD",1.5,1.5,16,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,16,21,1,0)
This is code that will be executed for each record, to identify or
"^DD",1.5,1.5,16,21,2,0)
validate it.
"^DD",1.5,1.5,16,"DT")
3150903
"^DD",1.5,1.5,18,0)
POST CREATE PROCESSING^K^^18;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.5,18,3)
This is Standard MUMPS code.
"^DD",1.5,1.5,18,9)
@
"^DD",1.5,1.5,18,21,0)
^.001^2^2^3180208^^
"^DD",1.5,1.5,18,21,1,0)
This is code that will be executed whenever a new record is created via
"^DD",1.5,1.5,18,21,2,0)
the POST method.
"^DD",1.5,1.5,18,"DT")
3150903
"^DD",1.5,1.5,19,0)
DESCRIPTION^1.519^^19;0
"^DD",1.5,1.5,19.1,0)
GET POLICY^P1.61'^DIAC(1.61,^DAC;1^Q
"^DD",1.5,1.5,19.1,3)
Select the equivalent Application Action to GET instances of this Entity.
"^DD",1.5,1.5,19.1,21,0)
^^5^5^3170320^
"^DD",1.5,1.5,19.1,21,1,0)
This field points to the Application Action #1.61 entry which is the VistA
"^DD",1.5,1.5,19.1,21,2,0)
equivalent of the GET method for the Entity. The Application Action is
"^DD",1.5,1.5,19.1,21,3,0)
linked to a Data Access Control Policy in file #1.6. This policy will be
"^DD",1.5,1.5,19.1,21,4,0)
evaluated when a GET request is made for this Entity, to determine if the
"^DD",1.5,1.5,19.1,21,5,0)
user or client is authorized to access the data.
"^DD",1.5,1.5,19.1,"DT")
3170320
"^DD",1.5,1.5,19.2,0)
PUT POLICY^P1.61'^DIAC(1.61,^DAC;2^Q
"^DD",1.5,1.5,19.2,3)
Select the equivalent Application Action to PUT an instance of this Entity.
"^DD",1.5,1.5,19.2,21,0)
^^5^5^3170320^
"^DD",1.5,1.5,19.2,21,1,0)
This field points to the Application Action #1.61 entry which is the VistA
"^DD",1.5,1.5,19.2,21,2,0)
equivalent of the PUT method for the Entity. The Application Action is
"^DD",1.5,1.5,19.2,21,3,0)
linked to a Data Access Control Policy in file #1.6. This policy will be
"^DD",1.5,1.5,19.2,21,4,0)
evaluated when a PUT request is made for this Entity, to determine if the
"^DD",1.5,1.5,19.2,21,5,0)
user or client is authorized to access the data.
"^DD",1.5,1.5,19.2,"DT")
3170320
"^DD",1.5,1.5,19.3,0)
DELETE POLICY^P1.61'^DIAC(1.61,^DAC;3^Q
"^DD",1.5,1.5,19.3,3)
Select the equivalent Application Action to DELETE an instance of this Entity.
"^DD",1.5,1.5,19.3,21,0)
^^5^5^3170320^
"^DD",1.5,1.5,19.3,21,1,0)
This field points to the Application Action #1.61 entry which is the VistA
"^DD",1.5,1.5,19.3,21,2,0)
equivalent of the DELETE method for the Entity. The Application Action is
"^DD",1.5,1.5,19.3,21,3,0)
linked to a Data Access Control Policy in file #1.6. This policy will be
"^DD",1.5,1.5,19.3,21,4,0)
evaluated when a DELETE request is made for this Entity, to determine if
"^DD",1.5,1.5,19.3,21,5,0)
the user or client is authorized to access the data.
"^DD",1.5,1.5,19.3,"DT")
3170320
"^DD",1.5,1.5,19.4,0)
POST POLICY^P1.61'^DIAC(1.61,^DAC;4^Q
"^DD",1.5,1.5,19.4,3)
Select the equivalent Application Action to POST an instance of this Entity.
"^DD",1.5,1.5,19.4,21,0)
^^5^5^3170320^
"^DD",1.5,1.5,19.4,21,1,0)
This field points to the Application Action #1.61 entry which is the VistA
"^DD",1.5,1.5,19.4,21,2,0)
equivalent of the POST method for the Entity. The Application Action is
"^DD",1.5,1.5,19.4,21,3,0)
linked to a Data Access Control Policy in file #1.6. This policy will be
"^DD",1.5,1.5,19.4,21,4,0)
evaluated when a POST request is made for this Entity, to determine if the
"^DD",1.5,1.5,19.4,21,5,0)
user or client is authorized to access the data.
"^DD",1.5,1.5,19.4,"DT")
3170320
"^DD",1.5,1.51,0)
ITEM SUB-FIELD^NL^.09^23
"^DD",1.5,1.51,0,"DT")
3180518
"^DD",1.5,1.51,0,"IX","B",1.51,.01)

"^DD",1.5,1.51,0,"IX","SEQ",1.51,.02)

"^DD",1.5,1.51,0,"NM","ITEM")

"^DD",1.5,1.51,0,"UP")
1.5
"^DD",1.5,1.51,.01,0)
ITEM^MFJ80^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",1.5,1.51,.01,1,0)
^.1
"^DD",1.5,1.51,.01,1,1,0)
1.51^B
"^DD",1.5,1.51,.01,1,1,1)
S ^DDE(DA(1),1,"B",$E(X,1,60),DA)=""
"^DD",1.5,1.51,.01,1,1,2)
K ^DDE(DA(1),1,"B",$E(X,1,60),DA)
"^DD",1.5,1.51,.01,3)
Answer must be 1-80 characters in length.
"^DD",1.5,1.51,.01,21,0)
^.001^1^1^3180208^^^^
"^DD",1.5,1.51,.01,21,1,0)
This is the name of the Item, which will be used as the XML or JSON tag.
"^DD",1.5,1.51,.01,"DT")
3180208
"^DD",1.5,1.51,.02,0)
SEQUENCE^NJ7,3^^0;2^K:+X'=X!(X>999)!(X<.001)!(X?.E1"."4N.N) X
"^DD",1.5,1.51,.02,1,0)
^.1
"^DD",1.5,1.51,.02,1,1,0)
1.51^SEQ
"^DD",1.5,1.51,.02,1,1,1)
S ^DDE(DA(1),1,"SEQ",$E(X,1,30),DA)=""
"^DD",1.5,1.51,.02,1,1,2)
K ^DDE(DA(1),1,"SEQ",$E(X,1,30),DA)
"^DD",1.5,1.51,.02,1,1,"%D",0)
^^1^1^3180209^
"^DD",1.5,1.51,.02,1,1,"%D",1,0)
Allows traversal of Items by Sequence
"^DD",1.5,1.51,.02,1,1,"DT")
3180209
"^DD",1.5,1.51,.02,3)
Type a number between .001 and 999, 3 decimal digits.
"^DD",1.5,1.51,.02,21,0)
^^2^2^3180208^
"^DD",1.5,1.51,.02,21,1,0)
This field defines the sequence in which to process top-level items; leave
"^DD",1.5,1.51,.02,21,2,0)
this blank for Items that will be processed via the Complex Fields group.
"^DD",1.5,1.51,.02,"DT")
3180209
"^DD",1.5,1.51,.03,0)
ITEM TYPE^RS^I:ID;F:FIXED STRING;S:SIMPLE FIELD;C:COMPLEX GROUP;E:ENTITY;L:LIST;W:WORD PROCESSING;^0;3^Q
"^DD",1.5,1.51,.03,3)
Select the XML or JSON element type for this item.
"^DD",1.5,1.51,.03,21,0)
^^9^9^3180411^
"^DD",1.5,1.51,.03,21,1,0)
This is the type of element for this Item. It describes how to find the 
"^DD",1.5,1.51,.03,21,2,0)
source data in VistA, as well as its structure in the XML or JSON results:
"^DD",1.5,1.51,.03,21,3,0)
 I = record ID
"^DD",1.5,1.51,.03,21,4,0)
 F = fixed string
"^DD",1.5,1.51,.03,21,5,0)
 S = simple VistA field
"^DD",1.5,1.51,.03,21,6,0)
 C = complex field (group of items)
"^DD",1.5,1.51,.03,21,7,0)
 E = embedded entity
"^DD",1.5,1.51,.03,21,8,0)
 L = list of simple fields, items, or entities
"^DD",1.5,1.51,.03,21,9,0)
 W = word processing VistA field
"^DD",1.5,1.51,.03,"DT")
3180312
"^DD",1.5,1.51,.04,0)
FILE NUMBER^NJ21,8X^^0;4^K:+X'=X!(X>999999999999)!(X<.1)!(X?.E1"."9N.N)!'($D(^DD(+X,0))#2) X
"^DD",1.5,1.51,.04,3)
Enter the number of the VistA file containing the data for this Item, between .1 and 999999999999.
"^DD",1.5,1.51,.04,21,0)
^^3^3^3180410^
"^DD",1.5,1.51,.04,21,1,0)
Enter the VistA file or sub-file number containing the data value(s) for
"^DD",1.5,1.51,.04,21,2,0)
this Item. Note that the IEN may need to be modified if this differs from 
"^DD",1.5,1.51,.04,21,3,0)
the Entity's Default File Number.
"^DD",1.5,1.51,.04,"DT")
3180412
"^DD",1.5,1.51,.05,0)
FIELD NUMBER^NJ21,8^^0;5^K:+X'=X!(X>999999999999)!(X<.001)!(X?.E1"."9N.N) X
"^DD",1.5,1.51,.05,1,0)
^.1^^0
"^DD",1.5,1.51,.05,3)
Enter the field number that holds the data, between .001 and 999999999999.
"^DD",1.5,1.51,.05,4)
D FLDLST^DDEX
"^DD",1.5,1.51,.05,21,0)
^.001^2^2^3180410^^^^
"^DD",1.5,1.51,.05,21,1,0)
This is the number of a field in the File that is the source of the
"^DD",1.5,1.51,.05,21,2,0)
data for this Item.
"^DD",1.5,1.51,.05,"DT")
3180319
"^DD",1.5,1.51,.06,0)
EXTENDED POINTER LKUP^NJ21,8^^0;6^K:+X'=X!(X>999999999999)!(X<.001)!(X?.E1"."9N.N) X
"^DD",1.5,1.51,.06,3)
Enter a field number in the pointed-to file, between .001 and 999999999999.
"^DD",1.5,1.51,.06,21,0)
^.001^2^2^3180410^^^
"^DD",1.5,1.51,.06,21,1,0)
This is the number of a field in the pointed-to file to return as the
"^DD",1.5,1.51,.06,21,2,0)
resolved external value, instead of the .01 field.
"^DD",1.5,1.51,.06,"DT")
3180313
"^DD",1.5,1.51,.07,0)
RETURN INTERNAL VALUE^S^1:YES;^0;7^Q
"^DD",1.5,1.51,.07,3)
Enter YES to return the internal form of the value for this Item.
"^DD",1.5,1.51,.07,21,0)
^.001^2^2^3180228^^^^
"^DD",1.5,1.51,.07,21,1,0)
Set this to YES if the value of this item should remain in internal
"^DD",1.5,1.51,.07,21,2,0)
format; the default is to return the external format.
"^DD",1.5,1.51,.07,"DT")
3180228
"^DD",1.5,1.51,.08,0)
ENTITY^P1.5X^DDE(^0;8^D TREE^DDEX
"^DD",1.5,1.51,.08,1,0)
^.1
"^DD",1.5,1.51,.08,1,1,0)
1.5^AD
"^DD",1.5,1.51,.08,1,1,1)
S ^DDE("AD",$E(X,1,30),DA(1),DA)=""
"^DD",1.5,1.51,.08,1,1,2)
K ^DDE("AD",$E(X,1,30),DA(1),DA)
"^DD",1.5,1.51,.08,1,1,"%D",0)
^^2^2^3180315^
"^DD",1.5,1.51,.08,1,1,"%D",1,0)
For Input Transform, to look back up the tree and ensure item is not
"^DD",1.5,1.51,.08,1,1,"%D",2,0)
an ancestor.
"^DD",1.5,1.51,.08,1,1,"DT")
3180315
"^DD",1.5,1.51,.08,3)
Select an Entity to evaluate as the value for this Item; an ancestor may not be selected as an item.
"^DD",1.5,1.51,.08,21,0)
^.001^3^3^3180410^^
"^DD",1.5,1.51,.08,21,1,0)
Enter the name of an Entity whose value should be constructed and
"^DD",1.5,1.51,.08,21,2,0)
returned as the value for this Item. A parent or ancestor of this Entity 
"^DD",1.5,1.51,.08,21,3,0)
may not be used as a descendant item.
"^DD",1.5,1.51,.08,"DT")
3180315
"^DD",1.5,1.51,.09,0)
WORD WRAP^St11^^0;9^
"^DD",1.5,1.51,.09,3)
Enter YES if this text should be returned in word-wrap mode, without carriage returns.
"^DD",1.5,1.51,.09,21,0)
^^3^3^3180518^
"^DD",1.5,1.51,.09,21,1,0)
If this value is YES, the text will be returned without carriage returns
"^DD",1.5,1.51,.09,21,2,0)
or line feeds so the client can allow the text to wrap; the default is
"^DD",1.5,1.51,.09,21,3,0)
No, which will insert CR-LF characters between lines.
"^DD",1.5,1.51,.09,"DT")
3180518
"^DD",1.5,1.51,1.01,0)
LIST TYPE^S^1:FILE;2:SUBFILE;3:COMPLEX;4:ARRAY;^1;1^Q
"^DD",1.5,1.51,1.01,3)
Select the source of the instances for this list.
"^DD",1.5,1.51,1.01,21,0)
^^3^3^3180410^
"^DD",1.5,1.51,1.01,21,1,0)
Select the source of this Item's values, if the list instances will come
"^DD",1.5,1.51,1.01,21,2,0)
from a file, sub-file, the Complex Fields group, or an array created by
"^DD",1.5,1.51,1.01,21,3,0)
the GET PROCESSING logic.
"^DD",1.5,1.51,1.01,"DT")
3180206
"^DD",1.5,1.51,1.02,0)
XML NAME^FJ60^^1;2^K:$L(X)>60!($L(X)<1) X
"^DD",1.5,1.51,1.02,3)
Answer must be 1-60 characters in length.
"^DD",1.5,1.51,1.02,21,0)
^^3^3^3180410^
"^DD",1.5,1.51,1.02,21,1,0)
Enter the name to be used for the tags around this Item when returning 
"^DD",1.5,1.51,1.02,21,2,0)
XML, for each entry in the list. If this Item is an entity, its Display
"^DD",1.5,1.51,1.02,21,3,0)
Name will be the default but this name will override it if defined.
"^DD",1.5,1.51,1.02,"DT")
3180315
"^DD",1.5,1.51,1.03,0)
XREF^FJ15^^1;3^K:$L(X)>15!($L(X)<1) X
"^DD",1.5,1.51,1.03,3)
Answer must be 1-15 characters in length.
"^DD",1.5,1.51,1.03,21,0)
^.001^2^2^3180208^^^^
"^DD",1.5,1.51,1.03,21,1,0)
If this list is coming from a file, enter the cross reference to be used
"^DD",1.5,1.51,1.03,21,2,0)
to find the desired records.
"^DD",1.5,1.51,1.03,"DT")
3180206
"^DD",1.5,1.51,1.04,0)
FILTER BY^FJ8^^1;4^K:$L(X)>8!($L(X)<1) X
"^DD",1.5,1.51,1.04,3)
Answer must be 1-8 characters in length.
"^DD",1.5,1.51,1.04,21,0)
^^6^6^3180322^
"^DD",1.5,1.51,1.04,21,1,0)
If this list is coming from a file, you may enter the name of a local
"^DD",1.5,1.51,1.04,21,2,0)
variable that contains the value to filter entries by using the specified
"^DD",1.5,1.51,1.04,21,3,0)
cross reference. See the FileMan Developer's Guide for a list of 
"^DD",1.5,1.51,1.04,21,4,0)
variables that will be available to use (read only). Other variables may
"^DD",1.5,1.51,1.04,21,5,0)
be created in the GET PROCESSING code field; these should be killed in the
"^DD",1.5,1.51,1.04,21,6,0)
Entity's GET POST PROCESSING.
"^DD",1.5,1.51,1.04,"DT")
3180206
"^DD",1.5,1.51,1.06,0)
OVERWRITE SUBFILE^S^1:YES;0:NO;^1;6^Q
"^DD",1.5,1.51,1.06,3)
If the item represents the .01 of a multiple and you don't want to replace not append data then set this flag to yes.
"^DD",1.5,1.51,1.06,21,0)
^^3^3^3180410^
"^DD",1.5,1.51,1.06,21,1,0)
If the Item represents the .01 of a multiple field, set this flag to YES 
"^DD",1.5,1.51,1.06,21,2,0)
if you want to replace the existing sub-file with the values in the 
"^DD",1.5,1.51,1.06,21,3,0)
incoming message rather than append the values on a PUT.
"^DD",1.5,1.51,1.06,"DT")
3170413
"^DD",1.5,1.51,1.07,0)
VUID PREFIX^S^VUID:VUID;^1;7^Q
"^DD",1.5,1.51,1.07,3)
Select 'VUID' if this item is referenced by VUID.
"^DD",1.5,1.51,1.07,21,0)
^^3^3^3180410^
"^DD",1.5,1.51,1.07,21,1,0)
If this item is referenced by VUID then specify this prefix.  A VUID is a 
"^DD",1.5,1.51,1.07,21,2,0)
unique key assigned by terminology service during data standardization, 
"^DD",1.5,1.51,1.07,21,3,0)
so this field flags items that should look up based on VUID.
"^DD",1.5,1.51,1.07,"DT")
3170413
"^DD",1.5,1.51,1.1,0)
SCREEN^K^^1.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,1.1,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,1.1,9)
@
"^DD",1.5,1.51,1.1,21,0)
^.001^1^1^3180410^^^
"^DD",1.5,1.51,1.1,21,1,0)
This is standard MUMPS code that should set DIC('S') for a screen.
"^DD",1.5,1.51,1.1,"DT")
3180206
"^DD",1.5,1.51,2,0)
FIXED RESPONSE^FJ80^^2;1^K:$L(X)>80!($L(X)<1) X
"^DD",1.5,1.51,2,3)
Answer must be 1-80 characters in length.
"^DD",1.5,1.51,2,21,0)
^.001^2^2^3180410^^^
"^DD",1.5,1.51,2,21,1,0)
Enter static text that should always be returned as the value of this
"^DD",1.5,1.51,2,21,2,0)
Item.
"^DD",1.5,1.51,2,"DT")
3180206
"^DD",1.5,1.51,3,0)
COMPLEX TYPE^1.513I^^3;0
"^DD",1.5,1.51,3,21,0)
^.001^1^1^3180209^^
"^DD",1.5,1.51,3,21,1,0)
This field allows an Item to return a group of fields or data elements.
"^DD",1.5,1.51,4,0)
OUTPUT TRANSFORM^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,4,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,4,9)
@
"^DD",1.5,1.51,4,21,0)
^^5^5^3181120^
"^DD",1.5,1.51,4,21,1,0)
This is code that will be executed after extracting the data value, that
"^DD",1.5,1.51,4,21,2,0)
may be used to re-format it for XML or JSON. It expects the variable 
"^DD",1.5,1.51,4,21,3,0)
VALUE to contain the current form of this property's value, and should 
"^DD",1.5,1.51,4,21,4,0)
leave VALUE set to the desired form (for example, S VALUE=+VALUE). If the 
"^DD",1.5,1.51,4,21,5,0)
value should be omitted, set VALUE to null.
"^DD",1.5,1.51,4,"DT")
3180206
"^DD",1.5,1.51,5,0)
INPUT TRANSFORM^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,5,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,5,9)
@
"^DD",1.5,1.51,5,21,0)
^.001^2^2^3180208^^^
"^DD",1.5,1.51,5,21,1,0)
This is code that will be executed after extracting the data value from
"^DD",1.5,1.51,5,21,2,0)
an incoming resource, to re-format it for saving in VistA.
"^DD",1.5,1.51,5,"DT")
3180206
"^DD",1.5,1.51,6,0)
GET PROCESSING^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,6,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,6,9)
@
"^DD",1.5,1.51,6,21,0)
^^18^18^3181120^
"^DD",1.5,1.51,6,21,1,0)
This is code that will be executed when extracting this item from VistA.
"^DD",1.5,1.51,6,21,2,0)
It may do additional set up tasks for non-simple elements, or even
"^DD",1.5,1.51,6,21,3,0)
create the return value itself for simple fields that cannot be pulled
"^DD",1.5,1.51,6,21,4,0)
directly from VistA.
"^DD",1.5,1.51,6,21,5,0)
 
"^DD",1.5,1.51,6,21,6,0)
At the time this code is executed within ^DDE, the following variables 
"^DD",1.5,1.51,6,21,7,0)
may be referenced:
"^DD",1.5,1.51,6,21,8,0)
  IEN   = internal entry number of record, or the string being processed
"^DD",1.5,1.51,6,21,9,0)
  NAME  = name of property
"^DD",1.5,1.51,6,21,10,0)
  FILE  = VistA source sub/file number
"^DD",1.5,1.51,6,21,11,0)
  FIELD = VistA source field number
"^DD",1.5,1.51,6,21,12,0)
  
"^DD",1.5,1.51,6,21,13,0)
The variable VALUE may be returned as the value of this property. If 
"^DD",1.5,1.51,6,21,14,0)
VALUE is not set here, then $$GET1^DIQ will be called using the Item's 
"^DD",1.5,1.51,6,21,15,0)
properties to determine a value.
"^DD",1.5,1.51,6,21,16,0)
  
"^DD",1.5,1.51,6,21,17,0)
If a value for this Item cannot or should not be returned, set DDEOUT=1 
"^DD",1.5,1.51,6,21,18,0)
to cause ^DDE to quit the item and go on to the next one.
"^DD",1.5,1.51,6,"DT")
3180206
"^DD",1.5,1.51,7,0)
PUT PROCESSING^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,7,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,7,9)
@
"^DD",1.5,1.51,7,21,0)
^^2^2^3180208^
"^DD",1.5,1.51,7,21,1,0)
For the PUT method, you may add logic for each item to set the value,
"^DD",1.5,1.51,7,21,2,0)
transform, validate, or enforce business logic.
"^DD",1.5,1.51,7,"DT")
3180208
"^DD",1.5,1.51,8,0)
POST PROCESSING^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",1.5,1.51,8,3)
This is Standard MUMPS code.
"^DD",1.5,1.51,8,9)
@
"^DD",1.5,1.51,8,21,0)
^^2^2^3180208^
"^DD",1.5,1.51,8,21,1,0)
For the POST method, you may add logic for each Item to set the value,
"^DD",1.5,1.51,8,21,2,0)
transform, validate, or enforce business logic.
"^DD",1.5,1.51,8,"DT")
3180208
"^DD",1.5,1.513,0)
COMPLEX TYPE SUB-FIELD^^.02^2
"^DD",1.5,1.513,0,"DT")
3180228
"^DD",1.5,1.513,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",1.5,1.513,0,"IX","B",1.513,.01)

"^DD",1.5,1.513,0,"NM","COMPLEX TYPE")

"^DD",1.5,1.513,0,"UP")
1.51
"^DD",1.5,1.513,.01,0)
COMPLEX ITEM SEQUENCE^MNJ7,3^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."4N.N) X
"^DD",1.5,1.513,.01,1,0)
^.1
"^DD",1.5,1.513,.01,1,1,0)
1.513^B
"^DD",1.5,1.513,.01,1,1,1)
S ^DDE(DA(2),1,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",1.5,1.513,.01,1,1,2)
K ^DDE(DA(2),1,DA(1),3,"B",$E(X,1,30),DA)
"^DD",1.5,1.513,.01,3)
Type a number between 1 and 999, 3 decimal digits.
"^DD",1.5,1.513,.01,21,0)
^^1^1^3180208^
"^DD",1.5,1.513,.01,21,1,0)
This is the sequence in which to process these items within the group.
"^DD",1.5,1.513,.01,"DT")
3180208
"^DD",1.5,1.513,.02,0)
COMPLEX ITEM NAME^FJ80^^0;2^K:$L(X)>80!($L(X)<1) X
"^DD",1.5,1.513,.02,3)
Answer must be 1-80 characters in length.
"^DD",1.5,1.513,.02,21,0)
^.001^2^2^3180208^^^^
"^DD",1.5,1.513,.02,21,1,0)
Enter the name of an Item that will be processed as part of this
"^DD",1.5,1.513,.02,21,2,0)
complex group.
"^DD",1.5,1.513,.02,"DT")
3180228
"^DD",1.5,1.519,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",1.5,1.519,0,"DT")
3180412
"^DD",1.5,1.519,0,"NM","DESCRIPTION")

"^DD",1.5,1.519,0,"UP")
1.5
"^DD",1.5,1.519,.01,0)
DESCRIPTION^Wx^^0;1^Q
"^DD",1.5,1.519,.01,3)
Enter a description of this Entity, for documentation.
"^DD",1.5,1.519,.01,21,0)
^^2^2^3180412^
"^DD",1.5,1.519,.01,21,1,0)
This is a description of the Entity, to document its usage or data sources
"^DD",1.5,1.519,.01,21,2,0)
or any other information that is helpful for maintenance.
"^DD",1.5,1.519,.01,"DT")
3180412
"^DIC",1.5,1.5,0)
ENTITY^1.5
"^DIC",1.5,1.5,0,"GL")
^DDE(
"^DIC",1.5,1.5,"%",0)
^1.005^^
"^DIC",1.5,1.5,"%D",0)
^^4^4^3180309^
"^DIC",1.5,1.5,"%D",1,0)
The ENTITY (#1.5) file maps VistA data to entities or resources, which can
"^DIC",1.5,1.5,"%D",2,0)
be exposed RESTfully to standard web methods and formats. It can support
"^DIC",1.5,1.5,"%D",3,0)
various data models such as Fast Healthcare Interoperability Resources
"^DIC",1.5,1.5,"%D",4,0)
(FHIR) or Intersystems' Summary Document Architecture (SDA).
"^DIC",1.5,"B","ENTITY",1.5)

**INSTALL NAME**
VPR*1.0*8
"BLD",9452,0)
VPR*1.0*8^VIRTUAL PATIENT RECORD^0^3190201^y
"BLD",9452,1,0)
^^42^42^3190122^^
"BLD",9452,1,1,0)
This patch extends the Virtual Patient Record (VPR) application, to 
"BLD",9452,1,2,0)
provide a new method of retrieving patient health data from a Veterans
"BLD",9452,1,3,0)
Health Information Systems (VistA) database.
"BLD",9452,1,4,0)
 
"BLD",9452,1,5,0)
Patch DI*22.2*9 released a new VA FileManager utility that provides the 
"BLD",9452,1,6,0)
ability to map VistA files and fields to other data models, and extract 
"BLD",9452,1,7,0)
that data as XML or JSON objects. This VPR patch will populate the new 
"BLD",9452,1,8,0)
Entity file (#1.5) to map VistA data elements to InterSystems' Summary 
"BLD",9452,1,9,0)
Data Architecture (SDA) model, and use the new supported calls to 
"BLD",9452,1,10,0)
retrieve the requested data.
"BLD",9452,1,11,0)
 
"BLD",9452,1,12,0)
This patch also installs a mechanism to monitor clinical data events in 
"BLD",9452,1,13,0)
VistA, to enable retrieval of updated information as a patient's data
"BLD",9452,1,14,0)
changes. New Protocol file (#101) entries will be added, and linked to
"BLD",9452,1,15,0)
appropriate clinical application events; the file and record numbers
"BLD",9452,1,16,0)
modified will be collected in the new VPR Subscription file (#560) until
"BLD",9452,1,17,0)
retrieved and updated.
"BLD",9452,1,18,0)
  
"BLD",9452,1,19,0)
  
"BLD",9452,1,20,0)
Patch Installation:
"BLD",9452,1,21,0)
-------------------
"BLD",9452,1,22,0)
Software is being released as a host file, DI_222_9_VPR_1_8.KID.  The host
"BLD",9452,1,23,0)
file contains two patches; DI*22.2*9 and VPR*1*8. Refer to Patch 
"BLD",9452,1,24,0)
DI*22.2*9 for installation instructions.
"BLD",9452,1,25,0)
 
"BLD",9452,1,26,0)
Patches DI*22.2*9 and VPR*1*8 are scheduled to be released nationally as a
"BLD",9452,1,27,0)
bundle.  Installation of these patches into Production within the first 5
"BLD",9452,1,28,0)
days from the National Release date is requested. The VA leadership has 
"BLD",9452,1,29,0)
asked for an expedited release to comply with the schedule for the high
"BLD",9452,1,30,0)
profile Mission Act.  Certain functionality has to be loaded into
"BLD",9452,1,31,0)
production in 130 VA Medical Centers within a short timeframe.  We
"BLD",9452,1,32,0)
appreciate your cooperation.
"BLD",9452,1,33,0)
  
"BLD",9452,1,34,0)
  
"BLD",9452,1,35,0)
Backout Procedures:
"BLD",9452,1,36,0)
-------------------
"BLD",9452,1,37,0)
Back-out will be done only with the concurrence and participation of the 
"BLD",9452,1,38,0)
development team, health product support, and appropriate VA site/region 
"BLD",9452,1,39,0)
personnel. All components exported by the patch (excluding linked 
"BLD",9452,1,40,0)
Protocol menus) are new and could be removed from the system if needed.
"BLD",9452,1,41,0)
Please call the national help desk or enter a help desk ticket for
"BLD",9452,1,42,0)
assistance.
"BLD",9452,4,0)
^9.64PA^560^1
"BLD",9452,4,560,0)
560
"BLD",9452,4,560,222)
y^y^f^^^^n
"BLD",9452,4,"B",560,560)

"BLD",9452,6.3)
87
"BLD",9452,"ABPKG")
n
"BLD",9452,"INI")

"BLD",9452,"INIT")
POST^VPRP8I
"BLD",9452,"KRN",0)
^9.67PA^1.5^24
"BLD",9452,"KRN",.4,0)
.4
"BLD",9452,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9452,"KRN",.401,0)
.401
"BLD",9452,"KRN",.402,0)
.402
"BLD",9452,"KRN",.403,0)
.403
"BLD",9452,"KRN",.5,0)
.5
"BLD",9452,"KRN",.84,0)
.84
"BLD",9452,"KRN",1.5,0)
1.5
"BLD",9452,"KRN",1.5,"NM",0)
^9.68A^155^143
"BLD",9452,"KRN",1.5,"NM",1,0)
VPR ADVANCE DIRECTIVE^^0
"BLD",9452,"KRN",1.5,"NM",2,0)
VPR ALLERGY^^0
"BLD",9452,"KRN",1.5,"NM",3,0)
VPR ALLERGY SIGN/SYMPTOM^^0
"BLD",9452,"KRN",1.5,"NM",4,0)
VPR APPOINTMENT^^0
"BLD",9452,"KRN",1.5,"NM",5,0)
VPR CONSULT SERVICE^^0
"BLD",9452,"KRN",1.5,"NM",6,0)
VPR DISPLAY GROUP^^0
"BLD",9452,"KRN",1.5,"NM",7,0)
VPR DOCUMENT^^0
"BLD",9452,"KRN",1.5,"NM",8,0)
VPR DOCUMENT TYPE^^0
"BLD",9452,"KRN",1.5,"NM",10,0)
VPR EXAM^^0
"BLD",9452,"KRN",1.5,"NM",11,0)
VPR FACILITY^^0
"BLD",9452,"KRN",1.5,"NM",12,0)
VPR FAMILY HISTORY^^0
"BLD",9452,"KRN",1.5,"NM",13,0)
VPR HEALTH FACTOR^^0
"BLD",9452,"KRN",1.5,"NM",14,0)
VPR ICD^^0
"BLD",9452,"KRN",1.5,"NM",15,0)
VPR LAB ORDER^^0
"BLD",9452,"KRN",1.5,"NM",16,0)
VPR LAB TEST^^0
"BLD",9452,"KRN",1.5,"NM",17,0)
VPR LAB URGENCY^^0
"BLD",9452,"KRN",1.5,"NM",18,0)
VPR LOCATION^^0
"BLD",9452,"KRN",1.5,"NM",19,0)
VPR LOINC^^0
"BLD",9452,"KRN",1.5,"NM",20,0)
VPR LRCH RESULT^^0
"BLD",9452,"KRN",1.5,"NM",21,0)
VPR LRCH RESULT ITEM^^0
"BLD",9452,"KRN",1.5,"NM",22,0)
VPR MARITAL STATUS^^0
"BLD",9452,"KRN",1.5,"NM",24,0)
VPR ORDER URGENCY^^0
"BLD",9452,"KRN",1.5,"NM",25,0)
VPR ORDERABLE ITEM^^0
"BLD",9452,"KRN",1.5,"NM",26,0)
VPR OTHER ORDER^^0
"BLD",9452,"KRN",1.5,"NM",27,0)
VPR PATIENT^^0
"BLD",9452,"KRN",1.5,"NM",28,0)
VPR PATIENT ADDRESS^^0
"BLD",9452,"KRN",1.5,"NM",29,0)
VPR PATIENT ALIAS^^0
"BLD",9452,"KRN",1.5,"NM",34,0)
VPR PROBLEM^^0
"BLD",9452,"KRN",1.5,"NM",35,0)
VPR PROCEDURE^^0
"BLD",9452,"KRN",1.5,"NM",36,0)
VPR PROVIDER^^0
"BLD",9452,"KRN",1.5,"NM",37,0)
VPR RAD ORDER^^0
"BLD",9452,"KRN",1.5,"NM",38,0)
VPR RAD RESULT^^0
"BLD",9452,"KRN",1.5,"NM",39,0)
VPR REFERRAL^^0
"BLD",9452,"KRN",1.5,"NM",40,0)
VPR RELIGION^^0
"BLD",9452,"KRN",1.5,"NM",41,0)
VPR SOCIAL HISTORY^^0
"BLD",9452,"KRN",1.5,"NM",42,0)
VPR STATE^^0
"BLD",9452,"KRN",1.5,"NM",43,0)
VPR SURGERY^^0
"BLD",9452,"KRN",1.5,"NM",44,0)
VPR USER^^0
"BLD",9452,"KRN",1.5,"NM",45,0)
VPR VITAL TYPE^^0
"BLD",9452,"KRN",1.5,"NM",46,0)
VPR V PROVIDER^^0
"BLD",9452,"KRN",1.5,"NM",47,0)
VPR VITAL QUALIFIER^^0
"BLD",9452,"KRN",1.5,"NM",51,0)
VPR DOSAGE STEP^^0
"BLD",9452,"KRN",1.5,"NM",52,0)
VPR DRUG PRODUCT^^0
"BLD",9452,"KRN",1.5,"NM",53,0)
VPR IMM ADMINISTRATION^^0
"BLD",9452,"KRN",1.5,"NM",54,0)
VPR IMM ROUTE^^0
"BLD",9452,"KRN",1.5,"NM",55,0)
VPR IMM SITE^^0
"BLD",9452,"KRN",1.5,"NM",56,0)
VPR IMMUNIZATION^^0
"BLD",9452,"KRN",1.5,"NM",57,0)
VPR MED ROUTE^^0
"BLD",9452,"KRN",1.5,"NM",58,0)
VPR MEDICATION^^0
"BLD",9452,"KRN",1.5,"NM",59,0)
VPR PATIENT RECORD FLAG^^0
"BLD",9452,"KRN",1.5,"NM",60,0)
VPR VACCINATION^^0
"BLD",9452,"KRN",1.5,"NM",61,0)
VPR PATIENT ID^^0
"BLD",9452,"KRN",1.5,"NM",62,0)
VPR INSURANCE^^0
"BLD",9452,"KRN",1.5,"NM",63,0)
VPR INSURANCE PLAN^^0
"BLD",9452,"KRN",1.5,"NM",64,0)
VPR COUNTRY^^0
"BLD",9452,"KRN",1.5,"NM",65,0)
VPR INS COMPANY ADDRESS^^0
"BLD",9452,"KRN",1.5,"NM",66,0)
VPR INS GROUP NAME^^0
"BLD",9452,"KRN",1.5,"NM",67,0)
VPR INSURANCE COMPANY^^0
"BLD",9452,"KRN",1.5,"NM",68,0)
VPR INSURED ADDRESS^^0
"BLD",9452,"KRN",1.5,"NM",69,0)
VPR NAME^^0
"BLD",9452,"KRN",1.5,"NM",70,0)
VPR PERSON CLASS^^0
"BLD",9452,"KRN",1.5,"NM",71,0)
VPR CODE TABLE^^0
"BLD",9452,"KRN",1.5,"NM",72,0)
VPR PATIENT NUMBER^^0
"BLD",9452,"KRN",1.5,"NM",73,0)
VPR ADMISSION^^0
"BLD",9452,"KRN",1.5,"NM",74,0)
VPR CODE ONLY^^0
"BLD",9452,"KRN",1.5,"NM",75,0)
VPR CW NOTES^^0
"BLD",9452,"KRN",1.5,"NM",76,0)
VPR DOCUMENT STATUS^^0
"BLD",9452,"KRN",1.5,"NM",77,0)
VPR ETHNICITY^^0
"BLD",9452,"KRN",1.5,"NM",78,0)
VPR LANGUAGE^^0
"BLD",9452,"KRN",1.5,"NM",79,0)
VPR PATIENT BIRTHPLACE^^0
"BLD",9452,"KRN",1.5,"NM",80,0)
VPR PATIENT ECON^^0
"BLD",9452,"KRN",1.5,"NM",81,0)
VPR PATIENT ECON ADDRESS^^0
"BLD",9452,"KRN",1.5,"NM",82,0)
VPR PATIENT EMPLOYER^^0
"BLD",9452,"KRN",1.5,"NM",83,0)
VPR PATIENT EMPLOYER ADDRESS^^0
"BLD",9452,"KRN",1.5,"NM",84,0)
VPR PATIENT NOK^^0
"BLD",9452,"KRN",1.5,"NM",85,0)
VPR PATIENT NOK ADDRESS^^0
"BLD",9452,"KRN",1.5,"NM",86,0)
VPR RACE^^0
"BLD",9452,"KRN",1.5,"NM",87,0)
VPR SPECIALTY^^0
"BLD",9452,"KRN",1.5,"NM",88,0)
VPR MED ADMINISTRATION^^0
"BLD",9452,"KRN",1.5,"NM",89,0)
VPR CPT^^0
"BLD",9452,"KRN",1.5,"NM",91,0)
VPR LRAP REPORT^^0
"BLD",9452,"KRN",1.5,"NM",92,0)
VPR PREGNANCY^^0
"BLD",9452,"KRN",1.5,"NM",93,0)
VPR PTF^^0
"BLD",9452,"KRN",1.5,"NM",94,0)
VPR V CPT^^0
"BLD",9452,"KRN",1.5,"NM",95,0)
VPR V EXAM^^0
"BLD",9452,"KRN",1.5,"NM",96,0)
VPR V POV^^0
"BLD",9452,"KRN",1.5,"NM",97,0)
VPR VISIT^^0
"BLD",9452,"KRN",1.5,"NM",98,0)
VPR VITAL MEASUREMENT^^0
"BLD",9452,"KRN",1.5,"NM",99,0)
VPR LRMI REPORT^^0
"BLD",9452,"KRN",1.5,"NM",100,0)
VPR RAD REPORT^^0
"BLD",9452,"KRN",1.5,"NM",101,0)
VPR SCHEDULED ADMISSION^^0
"BLD",9452,"KRN",1.5,"NM",102,0)
VPR DRUG CLASS^^0
"BLD",9452,"KRN",1.5,"NM",103,0)
VPR DRUG GENERIC^^0
"BLD",9452,"KRN",1.5,"NM",105,0)
VPR IV PRODUCT^^0
"BLD",9452,"KRN",1.5,"NM",106,0)
VPR ADMISSION EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",107,0)
VPR ALLERGY EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",108,0)
VPR APPOINTMENT EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",109,0)
VPR COMMENT^^0
"BLD",9452,"KRN",1.5,"NM",110,0)
VPR DOCUMENT EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",111,0)
VPR DOCUMENT ROLE^^0
"BLD",9452,"KRN",1.5,"NM",112,0)
VPR DOCUMENT SERVICE^^0
"BLD",9452,"KRN",1.5,"NM",113,0)
VPR DOCUMENT SETTING^^0
"BLD",9452,"KRN",1.5,"NM",114,0)
VPR DOCUMENT SUBJECT^^0
"BLD",9452,"KRN",1.5,"NM",115,0)
VPR DOCUMENT TITLE^^0
"BLD",9452,"KRN",1.5,"NM",116,0)
VPR DRUG INGREDIENT^^0
"BLD",9452,"KRN",1.5,"NM",117,0)
VPR LOCATION EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",118,0)
VPR PATIENT DISABILITY^^0
"BLD",9452,"KRN",1.5,"NM",119,0)
VPR PATIENT ELIGIBILITY^^0
"BLD",9452,"KRN",1.5,"NM",120,0)
VPR PATIENT EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",121,0)
VPR PERSON CLASS EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",122,0)
VPR PRF EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",123,0)
VPR PROBLEM EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",124,0)
VPR PTF EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",125,0)
VPR VISIT EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",126,0)
VPR HF EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",127,0)
VPR IMM EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",128,0)
VPR IMM VIS^^0
"BLD",9452,"KRN",1.5,"NM",129,0)
VPR LRCH RESULT EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",130,0)
VPR MED EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",131,0)
VPR MED FILL^^0
"BLD",9452,"KRN",1.5,"NM",132,0)
VPR ORDER EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",133,0)
VPR PROCEDURE EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",134,0)
VPR RAD RESULT EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",135,0)
VPR REFERRAL EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",136,0)
VPR SURGERY EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",137,0)
VPR VITAL EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",138,0)
VPR CPT MODIFIER^^0
"BLD",9452,"KRN",1.5,"NM",139,0)
VPR ALLERGY ASSESSMENT^^0
"BLD",9452,"KRN",1.5,"NM",140,0)
VPR CUSTOM PAIR^^0
"BLD",9452,"KRN",1.5,"NM",141,0)
VPR FIM^^0
"BLD",9452,"KRN",1.5,"NM",142,0)
VPR LRAP EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",143,0)
VPR LRMI EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",144,0)
VPR RAD RPT EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",145,0)
VPR SIGNER^^0
"BLD",9452,"KRN",1.5,"NM",146,0)
VPR HEALTH CONCERN^^0
"BLD",9452,"KRN",1.5,"NM",147,0)
VPR FIM EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",148,0)
VPR ORDER STATUS^^0
"BLD",9452,"KRN",1.5,"NM",149,0)
VPR TEAM MEMBER^^0
"BLD",9452,"KRN",1.5,"NM",151,0)
VPR AMIS^^0
"BLD",9452,"KRN",1.5,"NM",152,0)
VPR FACILITY ADDRESS^^0
"BLD",9452,"KRN",1.5,"NM",153,0)
VPR FAMILY DOCTOR^^0
"BLD",9452,"KRN",1.5,"NM",154,0)
VPR PROVIDER EXTENSION^^0
"BLD",9452,"KRN",1.5,"NM",155,0)
VPR PATIENT LANGUAGE^^0
"BLD",9452,"KRN",1.5,"NM","B","VPR ADMISSION",73)

"BLD",9452,"KRN",1.5,"NM","B","VPR ADMISSION EXTENSION",106)

"BLD",9452,"KRN",1.5,"NM","B","VPR ADVANCE DIRECTIVE",1)

"BLD",9452,"KRN",1.5,"NM","B","VPR ALLERGY",2)

"BLD",9452,"KRN",1.5,"NM","B","VPR ALLERGY ASSESSMENT",139)

"BLD",9452,"KRN",1.5,"NM","B","VPR ALLERGY EXTENSION",107)

"BLD",9452,"KRN",1.5,"NM","B","VPR ALLERGY SIGN/SYMPTOM",3)

"BLD",9452,"KRN",1.5,"NM","B","VPR AMIS",151)

"BLD",9452,"KRN",1.5,"NM","B","VPR APPOINTMENT",4)

"BLD",9452,"KRN",1.5,"NM","B","VPR APPOINTMENT EXTENSION",108)

"BLD",9452,"KRN",1.5,"NM","B","VPR CODE ONLY",74)

"BLD",9452,"KRN",1.5,"NM","B","VPR CODE TABLE",71)

"BLD",9452,"KRN",1.5,"NM","B","VPR COMMENT",109)

"BLD",9452,"KRN",1.5,"NM","B","VPR CONSULT SERVICE",5)

"BLD",9452,"KRN",1.5,"NM","B","VPR COUNTRY",64)

"BLD",9452,"KRN",1.5,"NM","B","VPR CPT",89)

"BLD",9452,"KRN",1.5,"NM","B","VPR CPT MODIFIER",138)

"BLD",9452,"KRN",1.5,"NM","B","VPR CUSTOM PAIR",140)

"BLD",9452,"KRN",1.5,"NM","B","VPR CW NOTES",75)

"BLD",9452,"KRN",1.5,"NM","B","VPR DISPLAY GROUP",6)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT",7)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT EXTENSION",110)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT ROLE",111)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT SERVICE",112)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT SETTING",113)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT STATUS",76)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT SUBJECT",114)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT TITLE",115)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOCUMENT TYPE",8)

"BLD",9452,"KRN",1.5,"NM","B","VPR DOSAGE STEP",51)

"BLD",9452,"KRN",1.5,"NM","B","VPR DRUG CLASS",102)

"BLD",9452,"KRN",1.5,"NM","B","VPR DRUG GENERIC",103)

"BLD",9452,"KRN",1.5,"NM","B","VPR DRUG INGREDIENT",116)

"BLD",9452,"KRN",1.5,"NM","B","VPR DRUG PRODUCT",52)

"BLD",9452,"KRN",1.5,"NM","B","VPR ETHNICITY",77)

"BLD",9452,"KRN",1.5,"NM","B","VPR EXAM",10)

"BLD",9452,"KRN",1.5,"NM","B","VPR FACILITY",11)

"BLD",9452,"KRN",1.5,"NM","B","VPR FACILITY ADDRESS",152)

"BLD",9452,"KRN",1.5,"NM","B","VPR FAMILY DOCTOR",153)

"BLD",9452,"KRN",1.5,"NM","B","VPR FAMILY HISTORY",12)

"BLD",9452,"KRN",1.5,"NM","B","VPR FIM",141)

"BLD",9452,"KRN",1.5,"NM","B","VPR FIM EXTENSION",147)

"BLD",9452,"KRN",1.5,"NM","B","VPR HEALTH CONCERN",146)

"BLD",9452,"KRN",1.5,"NM","B","VPR HEALTH FACTOR",13)

"BLD",9452,"KRN",1.5,"NM","B","VPR HF EXTENSION",126)

"BLD",9452,"KRN",1.5,"NM","B","VPR ICD",14)

"BLD",9452,"KRN",1.5,"NM","B","VPR IMM ADMINISTRATION",53)

"BLD",9452,"KRN",1.5,"NM","B","VPR IMM EXTENSION",127)

"BLD",9452,"KRN",1.5,"NM","B","VPR IMM ROUTE",54)

"BLD",9452,"KRN",1.5,"NM","B","VPR IMM SITE",55)

"BLD",9452,"KRN",1.5,"NM","B","VPR IMM VIS",128)

"BLD",9452,"KRN",1.5,"NM","B","VPR IMMUNIZATION",56)

"BLD",9452,"KRN",1.5,"NM","B","VPR INS COMPANY ADDRESS",65)

"BLD",9452,"KRN",1.5,"NM","B","VPR INS GROUP NAME",66)

"BLD",9452,"KRN",1.5,"NM","B","VPR INSURANCE",62)

"BLD",9452,"KRN",1.5,"NM","B","VPR INSURANCE COMPANY",67)

"BLD",9452,"KRN",1.5,"NM","B","VPR INSURANCE PLAN",63)

"BLD",9452,"KRN",1.5,"NM","B","VPR INSURED ADDRESS",68)

"BLD",9452,"KRN",1.5,"NM","B","VPR IV PRODUCT",105)

"BLD",9452,"KRN",1.5,"NM","B","VPR LAB ORDER",15)

"BLD",9452,"KRN",1.5,"NM","B","VPR LAB TEST",16)

"BLD",9452,"KRN",1.5,"NM","B","VPR LAB URGENCY",17)

"BLD",9452,"KRN",1.5,"NM","B","VPR LANGUAGE",78)

"BLD",9452,"KRN",1.5,"NM","B","VPR LOCATION",18)

"BLD",9452,"KRN",1.5,"NM","B","VPR LOCATION EXTENSION",117)

"BLD",9452,"KRN",1.5,"NM","B","VPR LOINC",19)

"BLD",9452,"KRN",1.5,"NM","B","VPR LRAP EXTENSION",142)

"BLD",9452,"KRN",1.5,"NM","B","VPR LRAP REPORT",91)

"BLD",9452,"KRN",1.5,"NM","B","VPR LRCH RESULT",20)

"BLD",9452,"KRN",1.5,"NM","B","VPR LRCH RESULT EXTENSION",129)

"BLD",9452,"KRN",1.5,"NM","B","VPR LRCH RESULT ITEM",21)

"BLD",9452,"KRN",1.5,"NM","B","VPR LRMI EXTENSION",143)

"BLD",9452,"KRN",1.5,"NM","B","VPR LRMI REPORT",99)

"BLD",9452,"KRN",1.5,"NM","B","VPR MARITAL STATUS",22)

"BLD",9452,"KRN",1.5,"NM","B","VPR MED ADMINISTRATION",88)

"BLD",9452,"KRN",1.5,"NM","B","VPR MED EXTENSION",130)

"BLD",9452,"KRN",1.5,"NM","B","VPR MED FILL",131)

"BLD",9452,"KRN",1.5,"NM","B","VPR MED ROUTE",57)

"BLD",9452,"KRN",1.5,"NM","B","VPR MEDICATION",58)

"BLD",9452,"KRN",1.5,"NM","B","VPR NAME",69)

"BLD",9452,"KRN",1.5,"NM","B","VPR ORDER EXTENSION",132)

"BLD",9452,"KRN",1.5,"NM","B","VPR ORDER STATUS",148)

"BLD",9452,"KRN",1.5,"NM","B","VPR ORDER URGENCY",24)

"BLD",9452,"KRN",1.5,"NM","B","VPR ORDERABLE ITEM",25)

"BLD",9452,"KRN",1.5,"NM","B","VPR OTHER ORDER",26)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT",27)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT ADDRESS",28)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT ALIAS",29)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT BIRTHPLACE",79)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT DISABILITY",118)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT ECON",80)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT ECON ADDRESS",81)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT ELIGIBILITY",119)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT EMPLOYER",82)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT EMPLOYER ADDRESS",83)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT EXTENSION",120)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT ID",61)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT LANGUAGE",155)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT NOK",84)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT NOK ADDRESS",85)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT NUMBER",72)

"BLD",9452,"KRN",1.5,"NM","B","VPR PATIENT RECORD FLAG",59)

"BLD",9452,"KRN",1.5,"NM","B","VPR PERSON CLASS",70)

"BLD",9452,"KRN",1.5,"NM","B","VPR PERSON CLASS EXTENSION",121)

"BLD",9452,"KRN",1.5,"NM","B","VPR PREGNANCY",92)

"BLD",9452,"KRN",1.5,"NM","B","VPR PRF EXTENSION",122)

"BLD",9452,"KRN",1.5,"NM","B","VPR PROBLEM",34)

"BLD",9452,"KRN",1.5,"NM","B","VPR PROBLEM EXTENSION",123)

"BLD",9452,"KRN",1.5,"NM","B","VPR PROCEDURE",35)

"BLD",9452,"KRN",1.5,"NM","B","VPR PROCEDURE EXTENSION",133)

"BLD",9452,"KRN",1.5,"NM","B","VPR PROVIDER",36)

"BLD",9452,"KRN",1.5,"NM","B","VPR PROVIDER EXTENSION",154)

"BLD",9452,"KRN",1.5,"NM","B","VPR PTF",93)

"BLD",9452,"KRN",1.5,"NM","B","VPR PTF EXTENSION",124)

"BLD",9452,"KRN",1.5,"NM","B","VPR RACE",86)

"BLD",9452,"KRN",1.5,"NM","B","VPR RAD ORDER",37)

"BLD",9452,"KRN",1.5,"NM","B","VPR RAD REPORT",100)

"BLD",9452,"KRN",1.5,"NM","B","VPR RAD RESULT",38)

"BLD",9452,"KRN",1.5,"NM","B","VPR RAD RESULT EXTENSION",134)

"BLD",9452,"KRN",1.5,"NM","B","VPR RAD RPT EXTENSION",144)

"BLD",9452,"KRN",1.5,"NM","B","VPR REFERRAL",39)

"BLD",9452,"KRN",1.5,"NM","B","VPR REFERRAL EXTENSION",135)

"BLD",9452,"KRN",1.5,"NM","B","VPR RELIGION",40)

"BLD",9452,"KRN",1.5,"NM","B","VPR SCHEDULED ADMISSION",101)

"BLD",9452,"KRN",1.5,"NM","B","VPR SIGNER",145)

"BLD",9452,"KRN",1.5,"NM","B","VPR SOCIAL HISTORY",41)

"BLD",9452,"KRN",1.5,"NM","B","VPR SPECIALTY",87)

"BLD",9452,"KRN",1.5,"NM","B","VPR STATE",42)

"BLD",9452,"KRN",1.5,"NM","B","VPR SURGERY",43)

"BLD",9452,"KRN",1.5,"NM","B","VPR SURGERY EXTENSION",136)

"BLD",9452,"KRN",1.5,"NM","B","VPR TEAM MEMBER",149)

"BLD",9452,"KRN",1.5,"NM","B","VPR USER",44)

"BLD",9452,"KRN",1.5,"NM","B","VPR V CPT",94)

"BLD",9452,"KRN",1.5,"NM","B","VPR V EXAM",95)

"BLD",9452,"KRN",1.5,"NM","B","VPR V POV",96)

"BLD",9452,"KRN",1.5,"NM","B","VPR V PROVIDER",46)

"BLD",9452,"KRN",1.5,"NM","B","VPR VACCINATION",60)

"BLD",9452,"KRN",1.5,"NM","B","VPR VISIT",97)

"BLD",9452,"KRN",1.5,"NM","B","VPR VISIT EXTENSION",125)

"BLD",9452,"KRN",1.5,"NM","B","VPR VITAL EXTENSION",137)

"BLD",9452,"KRN",1.5,"NM","B","VPR VITAL MEASUREMENT",98)

"BLD",9452,"KRN",1.5,"NM","B","VPR VITAL QUALIFIER",47)

"BLD",9452,"KRN",1.5,"NM","B","VPR VITAL TYPE",45)

"BLD",9452,"KRN",1.6,0)
1.6
"BLD",9452,"KRN",1.61,0)
1.61
"BLD",9452,"KRN",1.62,0)
1.62
"BLD",9452,"KRN",3.6,0)
3.6
"BLD",9452,"KRN",3.8,0)
3.8
"BLD",9452,"KRN",9.2,0)
9.2
"BLD",9452,"KRN",9.8,0)
9.8
"BLD",9452,"KRN",9.8,"NM",0)
^9.68A^15^15
"BLD",9452,"KRN",9.8,"NM",1,0)
VPRSDA^^0^B175529612
"BLD",9452,"KRN",9.8,"NM",2,0)
VPRSDAR^^0^B9382651
"BLD",9452,"KRN",9.8,"NM",3,0)
VPRHS^^0^B23926181
"BLD",9452,"KRN",9.8,"NM",4,0)
VPRSDAQ^^0^B144153181
"BLD",9452,"KRN",9.8,"NM",5,0)
VPREVNT^^0^B123701454
"BLD",9452,"KRN",9.8,"NM",6,0)
VPRSDAP^^0^B21076843
"BLD",9452,"KRN",9.8,"NM",7,0)
VPRSDAL^^0^B7855097
"BLD",9452,"KRN",9.8,"NM",8,0)
VPRIDX^^0^B2708676
"BLD",9452,"KRN",9.8,"NM",9,0)
VPREHL7^^0^B7760700
"BLD",9452,"KRN",9.8,"NM",10,0)
VPRPROC^^0^B449786
"BLD",9452,"KRN",9.8,"NM",11,0)
VPRSR^^0^B1400443
"BLD",9452,"KRN",9.8,"NM",12,0)
VPRHST^^0^B15285575
"BLD",9452,"KRN",9.8,"NM",13,0)
VPRHSX^^0^B13465259
"BLD",9452,"KRN",9.8,"NM",14,0)
VPRP8I^^0^B775515
"BLD",9452,"KRN",9.8,"NM",15,0)
VPRHST1^^0^B5849231
"BLD",9452,"KRN",9.8,"NM","B","VPREHL7",9)

"BLD",9452,"KRN",9.8,"NM","B","VPREVNT",5)

"BLD",9452,"KRN",9.8,"NM","B","VPRHS",3)

"BLD",9452,"KRN",9.8,"NM","B","VPRHST",12)

"BLD",9452,"KRN",9.8,"NM","B","VPRHST1",15)

"BLD",9452,"KRN",9.8,"NM","B","VPRHSX",13)

"BLD",9452,"KRN",9.8,"NM","B","VPRIDX",8)

"BLD",9452,"KRN",9.8,"NM","B","VPRP8I",14)

"BLD",9452,"KRN",9.8,"NM","B","VPRPROC",10)

"BLD",9452,"KRN",9.8,"NM","B","VPRSDA",1)

"BLD",9452,"KRN",9.8,"NM","B","VPRSDAL",7)

"BLD",9452,"KRN",9.8,"NM","B","VPRSDAP",6)

"BLD",9452,"KRN",9.8,"NM","B","VPRSDAQ",4)

"BLD",9452,"KRN",9.8,"NM","B","VPRSDAR",2)

"BLD",9452,"KRN",9.8,"NM","B","VPRSR",11)

"BLD",9452,"KRN",19,0)
19
"BLD",9452,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",9452,"KRN",19,"NM",1,0)
VPR HS CLEAR LIST^^0
"BLD",9452,"KRN",19,"NM",2,0)
VPR HS ENABLE^^0
"BLD",9452,"KRN",19,"NM",3,0)
VPR HS MENU^^0
"BLD",9452,"KRN",19,"NM",4,0)
VPR HS PUSH^^0
"BLD",9452,"KRN",19,"NM",5,0)
VPR HS TEST^^0
"BLD",9452,"KRN",19,"NM","B","VPR HS CLEAR LIST",1)

"BLD",9452,"KRN",19,"NM","B","VPR HS ENABLE",2)

"BLD",9452,"KRN",19,"NM","B","VPR HS MENU",3)

"BLD",9452,"KRN",19,"NM","B","VPR HS PUSH",4)

"BLD",9452,"KRN",19,"NM","B","VPR HS TEST",5)

"BLD",9452,"KRN",19.1,0)
19.1
"BLD",9452,"KRN",101,0)
101
"BLD",9452,"KRN",101,"NM",0)
^9.68A^45^42
"BLD",9452,"KRN",101,"NM",1,0)
DG FIELD MONITOR^^2
"BLD",9452,"KRN",101,"NM",2,0)
DGPF PRF ORU/R01 EVENT^^2
"BLD",9452,"KRN",101,"NM",3,0)
DGPM MOVEMENT EVENTS^^2
"BLD",9452,"KRN",101,"NM",4,0)
FH EVSEND OR^^2
"BLD",9452,"KRN",101,"NM",5,0)
GMPL EVENT^^2
"BLD",9452,"KRN",101,"NM",6,0)
GMRA ENTERED IN ERROR^^2
"BLD",9452,"KRN",101,"NM",7,0)
GMRA SIGN-OFF ON DATA^^2
"BLD",9452,"KRN",101,"NM",8,0)
GMRC EVSEND OR^^2
"BLD",9452,"KRN",101,"NM",9,0)
IBCN NEW INSURANCE EVENTS^^2
"BLD",9452,"KRN",101,"NM",10,0)
LR7O CH EVSEND OR^^2
"BLD",9452,"KRN",101,"NM",11,0)
OR EVSEND FH^^2
"BLD",9452,"KRN",101,"NM",12,0)
OR EVSEND GMRC^^2
"BLD",9452,"KRN",101,"NM",13,0)
OR EVSEND LRCH^^2
"BLD",9452,"KRN",101,"NM",14,0)
OR EVSEND ORG^^2
"BLD",9452,"KRN",101,"NM",15,0)
OR EVSEND PS^^2
"BLD",9452,"KRN",101,"NM",16,0)
OR EVSEND RA^^2
"BLD",9452,"KRN",101,"NM",17,0)
OR EVSEND VPR^^2
"BLD",9452,"KRN",101,"NM",18,0)
PS EVSEND OR^^2
"BLD",9452,"KRN",101,"NM",19,0)
PXK VISIT DATA EVENT^^2
"BLD",9452,"KRN",101,"NM",20,0)
RA EVSEND OR^^2
"BLD",9452,"KRN",101,"NM",21,0)
RMIM DRIVER^^2
"BLD",9452,"KRN",101,"NM",22,0)
SDAM APPOINTMENT EVENTS^^2
"BLD",9452,"KRN",101,"NM",24,0)
VAFC ADT-A08 SERVER^^2
"BLD",9452,"KRN",101,"NM",26,0)
VPR ADT-A08 CLIENT^^0
"BLD",9452,"KRN",101,"NM",27,0)
VPR APPT EVENTS^^0
"BLD",9452,"KRN",101,"NM",28,0)
VPR DG UPDATES^^0
"BLD",9452,"KRN",101,"NM",29,0)
VPR DGPF EVENTS^^0
"BLD",9452,"KRN",101,"NM",30,0)
VPR GMPL EVENT^^0
"BLD",9452,"KRN",101,"NM",31,0)
VPR GMRA ERROR EVENTS^^0
"BLD",9452,"KRN",101,"NM",32,0)
VPR GMRA EVENTS^^0
"BLD",9452,"KRN",101,"NM",33,0)
VPR IBCN EVENTS^^0
"BLD",9452,"KRN",101,"NM",34,0)
VPR INPT EVENTS^^0
"BLD",9452,"KRN",101,"NM",35,0)
VPR NA EVENTS^^0
"BLD",9452,"KRN",101,"NM",36,0)
VPR PCE EVENTS^^0
"BLD",9452,"KRN",101,"NM",37,0)
VPR RMIM EVENTS^^0
"BLD",9452,"KRN",101,"NM",38,0)
VPR XQOR EVENTS^^0
"BLD",9452,"KRN",101,"NM",39,0)
VPR PCMM TEAM^^0
"BLD",9452,"KRN",101,"NM",40,0)
VPR PCMM TEAM POSITION^^0
"BLD",9452,"KRN",101,"NM",41,0)
SCMC PATIENT TEAM CHANGES^^2
"BLD",9452,"KRN",101,"NM",42,0)
SCMC PATIENT TEAM POSITION CHANGES^^2
"BLD",9452,"KRN",101,"NM",44,0)
VPR LRAP EVENTS^^0
"BLD",9452,"KRN",101,"NM",45,0)
LR7O AP EVSEND OR^^2
"BLD",9452,"KRN",101,"NM","B","DG FIELD MONITOR",1)

"BLD",9452,"KRN",101,"NM","B","DGPF PRF ORU/R01 EVENT",2)

"BLD",9452,"KRN",101,"NM","B","DGPM MOVEMENT EVENTS",3)

"BLD",9452,"KRN",101,"NM","B","FH EVSEND OR",4)

"BLD",9452,"KRN",101,"NM","B","GMPL EVENT",5)

"BLD",9452,"KRN",101,"NM","B","GMRA ENTERED IN ERROR",6)

"BLD",9452,"KRN",101,"NM","B","GMRA SIGN-OFF ON DATA",7)

"BLD",9452,"KRN",101,"NM","B","GMRC EVSEND OR",8)

"BLD",9452,"KRN",101,"NM","B","IBCN NEW INSURANCE EVENTS",9)

"BLD",9452,"KRN",101,"NM","B","LR7O AP EVSEND OR",45)

"BLD",9452,"KRN",101,"NM","B","LR7O CH EVSEND OR",10)

"BLD",9452,"KRN",101,"NM","B","OR EVSEND FH",11)

"BLD",9452,"KRN",101,"NM","B","OR EVSEND GMRC",12)

"BLD",9452,"KRN",101,"NM","B","OR EVSEND LRCH",13)

"BLD",9452,"KRN",101,"NM","B","OR EVSEND ORG",14)

"BLD",9452,"KRN",101,"NM","B","OR EVSEND PS",15)

"BLD",9452,"KRN",101,"NM","B","OR EVSEND RA",16)

"BLD",9452,"KRN",101,"NM","B","OR EVSEND VPR",17)

"BLD",9452,"KRN",101,"NM","B","PS EVSEND OR",18)

"BLD",9452,"KRN",101,"NM","B","PXK VISIT DATA EVENT",19)

"BLD",9452,"KRN",101,"NM","B","RA EVSEND OR",20)

"BLD",9452,"KRN",101,"NM","B","RMIM DRIVER",21)

"BLD",9452,"KRN",101,"NM","B","SCMC PATIENT TEAM CHANGES",41)

"BLD",9452,"KRN",101,"NM","B","SCMC PATIENT TEAM POSITION CHANGES",42)

"BLD",9452,"KRN",101,"NM","B","SDAM APPOINTMENT EVENTS",22)

"BLD",9452,"KRN",101,"NM","B","VAFC ADT-A08 SERVER",24)

"BLD",9452,"KRN",101,"NM","B","VPR ADT-A08 CLIENT",26)

"BLD",9452,"KRN",101,"NM","B","VPR APPT EVENTS",27)

"BLD",9452,"KRN",101,"NM","B","VPR DG UPDATES",28)

"BLD",9452,"KRN",101,"NM","B","VPR DGPF EVENTS",29)

"BLD",9452,"KRN",101,"NM","B","VPR GMPL EVENT",30)

"BLD",9452,"KRN",101,"NM","B","VPR GMRA ERROR EVENTS",31)

"BLD",9452,"KRN",101,"NM","B","VPR GMRA EVENTS",32)

"BLD",9452,"KRN",101,"NM","B","VPR IBCN EVENTS",33)

"BLD",9452,"KRN",101,"NM","B","VPR INPT EVENTS",34)

"BLD",9452,"KRN",101,"NM","B","VPR LRAP EVENTS",44)

"BLD",9452,"KRN",101,"NM","B","VPR NA EVENTS",35)

"BLD",9452,"KRN",101,"NM","B","VPR PCE EVENTS",36)

"BLD",9452,"KRN",101,"NM","B","VPR PCMM TEAM",39)

"BLD",9452,"KRN",101,"NM","B","VPR PCMM TEAM POSITION",40)

"BLD",9452,"KRN",101,"NM","B","VPR RMIM EVENTS",37)

"BLD",9452,"KRN",101,"NM","B","VPR XQOR EVENTS",38)

"BLD",9452,"KRN",409.61,0)
409.61
"BLD",9452,"KRN",771,0)
771
"BLD",9452,"KRN",771,"NM",0)
^9.68A^1^1
"BLD",9452,"KRN",771,"NM",1,0)
VPR HL7^^0
"BLD",9452,"KRN",771,"NM","B","VPR HL7",1)

"BLD",9452,"KRN",779.2,0)
779.2
"BLD",9452,"KRN",870,0)
870
"BLD",9452,"KRN",8989.51,0)
8989.51
"BLD",9452,"KRN",8989.52,0)
8989.52
"BLD",9452,"KRN",8994,0)
8994
"BLD",9452,"KRN","B",.4,.4)

"BLD",9452,"KRN","B",.401,.401)

"BLD",9452,"KRN","B",.402,.402)

"BLD",9452,"KRN","B",.403,.403)

"BLD",9452,"KRN","B",.5,.5)

"BLD",9452,"KRN","B",.84,.84)

"BLD",9452,"KRN","B",1.5,1.5)

"BLD",9452,"KRN","B",1.6,1.6)

"BLD",9452,"KRN","B",1.61,1.61)

"BLD",9452,"KRN","B",1.62,1.62)

"BLD",9452,"KRN","B",3.6,3.6)

"BLD",9452,"KRN","B",3.8,3.8)

"BLD",9452,"KRN","B",9.2,9.2)

"BLD",9452,"KRN","B",9.8,9.8)

"BLD",9452,"KRN","B",19,19)

"BLD",9452,"KRN","B",19.1,19.1)

"BLD",9452,"KRN","B",101,101)

"BLD",9452,"KRN","B",409.61,409.61)

"BLD",9452,"KRN","B",771,771)

"BLD",9452,"KRN","B",779.2,779.2)

"BLD",9452,"KRN","B",870,870)

"BLD",9452,"KRN","B",8989.51,8989.51)

"BLD",9452,"KRN","B",8989.52,8989.52)

"BLD",9452,"KRN","B",8994,8994)

"BLD",9452,"QUES",0)
^9.62^^
"BLD",9452,"REQB",0)
^9.611^2^2
"BLD",9452,"REQB",1,0)
DI*22.2*9^2
"BLD",9452,"REQB",2,0)
XU*8.0*672^2
"BLD",9452,"REQB","B","DI*22.2*9",1)

"BLD",9452,"REQB","B","XU*8.0*672",2)

"FIA",560)
VPR SUBSCRIPTION
"FIA",560,0)
^VPR(
"FIA",560,0,0)
560
"FIA",560,0,1)
y^y^f^^^^n
"FIA",560,0,10)

"FIA",560,0,11)

"FIA",560,0,"RLRO")

"FIA",560,0,"VR")
1.0^VPR
"FIA",560,560)
0
"FIA",560,560.02)
0
"INIT")
POST^VPRP8I
"IX",560,560,"ANEW",0)
560^ANEW^Mark New Patients for Regional Health Connect^MU^^F^^W^560.02^^^^^A
"IX",560,560,"ANEW",.1,0)
^^10^10^3181116^
"IX",560,560,"ANEW",.1,1,0)
This cross reference is used to notify the Regional Health Connect that
"IX",560,560,"ANEW",.1,2,0)
a new patient needs to be added to the repository. Changes to patient
"IX",560,560,"ANEW",.1,3,0)
information are monitored by VPR listeners attached to cross references
"IX",560,560,"ANEW",.1,4,0)
and Protocol file events; when there is activity on a patient not in the
"IX",560,560,"ANEW",.1,5,0)
repository, the following node will be set by routine NEW^VPRHS:
"IX",560,560,"ANEW",.1,6,0)
 
"IX",560,560,"ANEW",.1,7,0)
  ^VPR("ANEW",seq#,DFN)=ICN
"IX",560,560,"ANEW",.1,8,0)
 
"IX",560,560,"ANEW",.1,9,0)
This node is monitored by the Regional Health Connect and will be deleted
"IX",560,560,"ANEW",.1,10,0)
after it has been processed.
"IX",560,560,"ANEW",1)
Q
"IX",560,560,"ANEW",2)
Q
"IX",560,560,"ANEW",11.1,0)
^.114IA^2^2
"IX",560,560,"ANEW",11.1,1,0)
1^C^^^15^1^F
"IX",560,560,"ANEW",11.1,1,1.5)
S X=+$G(^VPR(DA(1),1))
"IX",560,560,"ANEW",11.1,2,0)
2^F^560.02^.01^15^2^F
"IX",560,560,"ANEW","NOREINDEX")
1
"IX",560,560,"AVPR",0)
560^AVPR^Mark Patients for Regional Health Connect^MU^^F^^W^560.02^^^^^A
"IX",560,560,"AVPR",.1,0)
^^10^10^3181016^^
"IX",560,560,"AVPR",.1,1,0)
This cross reference is used to notify the Regional Health Connect that
"IX",560,560,"AVPR",.1,2,0)
the given patient information has been added to or modified. Changes to
"IX",560,560,"AVPR",.1,3,0)
patient information are monitored by VPR listeners attached to cross
"IX",560,560,"AVPR",.1,4,0)
references and Protocol file events; when data has changed, the following
"IX",560,560,"AVPR",.1,5,0)
node will be set by routine POST^VPRHS:                    
"IX",560,560,"AVPR",.1,6,0)
   
"IX",560,560,"AVPR",.1,7,0)
  ^VPR("AVPR",seq#,DFN)=ICN^TYPE^ID^ACTION^VISIT# 
"IX",560,560,"AVPR",.1,8,0)
   
"IX",560,560,"AVPR",.1,9,0)
This node is monitored by the Regional Health Connect and will be deleted
"IX",560,560,"AVPR",.1,10,0)
after it has been processed.
"IX",560,560,"AVPR",1)
Q
"IX",560,560,"AVPR",2)
Q
"IX",560,560,"AVPR",11.1,0)
^.114IA^2^2
"IX",560,560,"AVPR",11.1,1,0)
1^C^^^15^1^F
"IX",560,560,"AVPR",11.1,1,1.5)
S X=+$G(^VPR(DA(1),1))
"IX",560,560,"AVPR",11.1,2,0)
2^F^560.02^.01^15^2^F
"IX",560,560,"AVPR",11.1,2,3)

"IX",560,560,"AVPR","NOREINDEX")
1
"KRN",1.5,2,-1)
0^61
"KRN",1.5,2,0)
VPR PATIENT ID^2^^^^S
"KRN",1.5,2,.1)
PatientID
"KRN",1.5,2,1,0)
^1.51^8^4
"KRN",1.5,2,1,1,0)
PatientNumbers^1^L
"KRN",1.5,2,1,1,1)
3^PatientNumber
"KRN",1.5,2,1,1,3,0)
^1.513I^3^3
"KRN",1.5,2,1,1,3,1,0)
1^SSN
"KRN",1.5,2,1,1,3,2,0)
2^MRN
"KRN",1.5,2,1,1,3,3,0)
3^ICN
"KRN",1.5,2,1,1,3,"B",1,1)

"KRN",1.5,2,1,1,3,"B",2,2)

"KRN",1.5,2,1,1,3,"B",3,3)

"KRN",1.5,2,1,2,0)
SSN^^E^2^.09^^^VPR PATIENT NUMBER
"KRN",1.5,2,1,2,4)
S VALUE=VALUE_"^SSN^^SSA"
"KRN",1.5,2,1,3,0)
MRN^^E^2^^^^VPR PATIENT NUMBER
"KRN",1.5,2,1,3,6)
S VALUE=DIEN_"^MRN"_U_$G(VASITE)
"KRN",1.5,2,1,8,0)
ICN^^E^2^^^^VPR PATIENT NUMBER
"KRN",1.5,2,1,8,6)
S VALUE=$$GETICN^MPIF001(DIEN)_"^ICN"
"KRN",1.5,2,1,"B","ICN",8)

"KRN",1.5,2,1,"B","MRN",3)

"KRN",1.5,2,1,"B","PatientNumbers",1)

"KRN",1.5,2,1,"B","SSN",2)

"KRN",1.5,2,1,"SEQ",1,1)

"KRN",1.5,2,4)
S DNAME="Patient"
"KRN",1.5,2,19,0)
^^3^3^3180606^
"KRN",1.5,2,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,2,19,2,0)
as the ID. It builds an abbreviated version of VPR PATIENT that includes
"KRN",1.5,2,19,3,0)
only the patient numbers.
"KRN",1.5,9,-1)
0^62
"KRN",1.5,9,0)
VPR INSURANCE^2.312^^^^S
"KRN",1.5,9,.1)
MemberEnrollment
"KRN",1.5,9,1,0)
^1.51^14^14
"KRN",1.5,9,1,1,0)
EnteredBy^1^E^2.312^1.02^^1^VPR USER
"KRN",1.5,9,1,2,0)
EnteredAt^2^E^2.312^^^^VPR FACILITY
"KRN",1.5,9,1,2,6)
S VALUE=$G(VASITE) ; default #4 ien
"KRN",1.5,9,1,3,0)
EnteredOn^3^S^2.312^1.01^^1
"KRN",1.5,9,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,9,1,4,0)
FromTime^5^S^2.312^8^^1
"KRN",1.5,9,1,4,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,9,1,4,6)
S VALUE=$G(VPRINS(VPRP,10))
"KRN",1.5,9,1,5,0)
ToTime^6^S^2.312^3^^1
"KRN",1.5,9,1,5,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,9,1,5,6)
S VALUE=$G(VPRINS(VPRP,11))
"KRN",1.5,9,1,6,0)
CarrierSpecificMemberID^12^S^2.312^5.01
"KRN",1.5,9,1,7,0)
InsuranceTypeOrProductCode^15^E^2.312^.18^.09^^VPR CODE TABLE
"KRN",1.5,9,1,7,4)
S VALUE=VALUE_"^^VHAT"
"KRN",1.5,9,1,7,6)
S VALUE=$P($G(VPRINS(VPRP,21)),U,2)
"KRN",1.5,9,1,8,0)
IndividualRelationshipCode^17^E^2.312^16^^^VPR CODE TABLE
"KRN",1.5,9,1,8,4)
S VALUE=VALUE_"^^VHAT"
"KRN",1.5,9,1,8,6)
S VALUE=$P($G(VPRINS(VPRP,19)),U,2)
"KRN",1.5,9,1,9,0)
InsuredGroupOrPolicyNumber^18^S^2.312^.18^.04
"KRN",1.5,9,1,9,6)
S VALUE=$G(VPRINS(VPRP,18))
"KRN",1.5,9,1,10,0)
PrescriptionCoverage^21^F^
"KRN",1.5,9,1,10,6)
N X S X=$G(VPRINS(VPRP,15)),VALUE=$S(X="":3,+X:1,1:2) ;1=YES, 2=NO, 3=UNK
"KRN",1.5,9,1,11,0)
PrimaryInsuranceIndicator^22^S^2.312^.2^^1
"KRN",1.5,9,1,11,4)
S VALUE=$S(+VALUE=1:1,VALUE:4,1:3) ;1=YES,3=UNK,4=OTHER
"KRN",1.5,9,1,11,6)
S VALUE=$G(VPRINS(VPRP,7))
"KRN",1.5,9,1,12,0)
PlanSpecificSubscriberID^26^S^2.312^7.02
"KRN",1.5,9,1,12,6)
S VALUE=$G(VPRINS(VPRP,14))
"KRN",1.5,9,1,13,0)
HealthFund^30^E^2.312^^^^VPR INSURANCE PLAN
"KRN",1.5,9,1,13,6)
S VALUE=DIEN
"KRN",1.5,9,1,14,0)
MemberEnrollmentNumber^10^F
"KRN",1.5,9,1,14,6)
S VALUE=+$G(VPRINS(VPRP,1))_";"_+$G(VPRINS(VPRP,8))_";"_$G(VPRINS(VPRP,14)) ; = Company#;Policy#;SubscriberID
"KRN",1.5,9,1,"B","CarrierSpecificMemberID",6)

"KRN",1.5,9,1,"B","EnteredAt",2)

"KRN",1.5,9,1,"B","EnteredBy",1)

"KRN",1.5,9,1,"B","EnteredOn",3)

"KRN",1.5,9,1,"B","FromTime",4)

"KRN",1.5,9,1,"B","HealthFund",13)

"KRN",1.5,9,1,"B","IndividualRelationshipCode",8)

"KRN",1.5,9,1,"B","InsuranceTypeOrProductCode",7)

"KRN",1.5,9,1,"B","InsuredGroupOrPolicyNumber",9)

"KRN",1.5,9,1,"B","MemberEnrollmentNumber",14)

"KRN",1.5,9,1,"B","PlanSpecificSubscriberID",12)

"KRN",1.5,9,1,"B","PrescriptionCoverage",10)

"KRN",1.5,9,1,"B","PrimaryInsuranceIndicator",11)

"KRN",1.5,9,1,"B","ToTime",5)

"KRN",1.5,9,1,"SEQ",1,1)

"KRN",1.5,9,1,"SEQ",2,2)

"KRN",1.5,9,1,"SEQ",3,3)

"KRN",1.5,9,1,"SEQ",5,4)

"KRN",1.5,9,1,"SEQ",6,5)

"KRN",1.5,9,1,"SEQ",10,14)

"KRN",1.5,9,1,"SEQ",12,6)

"KRN",1.5,9,1,"SEQ",15,7)

"KRN",1.5,9,1,"SEQ",17,8)

"KRN",1.5,9,1,"SEQ",18,9)

"KRN",1.5,9,1,"SEQ",21,10)

"KRN",1.5,9,1,"SEQ",22,11)

"KRN",1.5,9,1,"SEQ",26,12)

"KRN",1.5,9,1,"SEQ",30,13)

"KRN",1.5,9,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,9,3)
K VPRINS,VPRP,VASITE
"KRN",1.5,9,4)
S VPRP=DIEN
"KRN",1.5,9,5)
INS^VPRSDAQ
"KRN",1.5,9,19,0)
^^1^1^3181227^
"KRN",1.5,9,19,1,0)
This entity populates the Member Enrollment container in HealthShare.
"KRN",1.5,11,-1)
0^63
"KRN",1.5,11,0)
VPR INSURANCE PLAN^2.312^^^^S
"KRN",1.5,11,.1)
HealthFund
"KRN",1.5,11,1,0)
^1.51^15^13
"KRN",1.5,11,1,1,0)
HealthFund^2^E^2.312^.01^^1^VPR INSURANCE COMPANY
"KRN",1.5,11,1,1,6)
S VALUE=$P($G(VPRINS(VPRP,1)),U)
"KRN",1.5,11,1,2,0)
HealthFundPlan^3^E^2.312^.18^^1^VPR INS GROUP NAME
"KRN",1.5,11,1,2,6)
S VALUE=$P($G(VPRINS(VPRP,8)),U)
"KRN",1.5,11,1,3,0)
GroupName^4^S^2.312^.18^2.01
"KRN",1.5,11,1,3,6)
S VALUE=$P($G(VPRINS(VPRP,8)),U,2)
"KRN",1.5,11,1,4,0)
GroupNumber^5^S^2.312^.18^2.02
"KRN",1.5,11,1,4,6)
S VALUE=$G(VPRINS(VPRP,18))
"KRN",1.5,11,1,5,0)
MembershipNumber^6^S^2.312^7.02^
"KRN",1.5,11,1,5,6)
S VALUE=$G(VPRINS(VPRP,14))
"KRN",1.5,11,1,6,0)
InsuredName^8^E^2.312^7.01^^^VPR NAME
"KRN",1.5,11,1,6,6)
S VALUE=$G(VPRINS(VPRP,13))
"KRN",1.5,11,1,7,0)
InsuredAddress^9^E^2.312^^^^VPR INSURED ADDRESS
"KRN",1.5,11,1,7,6)

"KRN",1.5,11,1,8,0)
InsuredContact^10^C^
"KRN",1.5,11,1,8,3,0)
^1.513I^1^1
"KRN",1.5,11,1,8,3,1,0)
1^HomePhoneNumber
"KRN",1.5,11,1,8,3,"B",1,1)

"KRN",1.5,11,1,9,0)
InsuredRelationship^11^E^2.312^16^^1^VPR CODE TABLE
"KRN",1.5,11,1,9,6)
S VALUE=$G(VPRINS(VPRP,12))
"KRN",1.5,11,1,10,0)
EnteredAt^14^E^2.312^^^^VPR FACILITY
"KRN",1.5,11,1,10,6)
S VALUE=$G(VASITE) ;default #4 ien
"KRN",1.5,11,1,11,0)
FromTime^16^S^2.312^8^^1
"KRN",1.5,11,1,11,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,11,1,11,6)
S VALUE=$G(VPRINS(VPRP,10))
"KRN",1.5,11,1,12,0)
ToTime^17^S^2.312^3^^1
"KRN",1.5,11,1,12,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,11,1,12,6)
S VALUE=$G(VPRINS(VPRP,11))
"KRN",1.5,11,1,15,0)
HomePhoneNumber^^S^2.312^3.11
"KRN",1.5,11,1,"B","EnteredAt",10)

"KRN",1.5,11,1,"B","FromTime",11)

"KRN",1.5,11,1,"B","GroupName",3)

"KRN",1.5,11,1,"B","GroupNumber",4)

"KRN",1.5,11,1,"B","HealthFund",1)

"KRN",1.5,11,1,"B","HealthFundPlan",2)

"KRN",1.5,11,1,"B","HomePhoneNumber",15)

"KRN",1.5,11,1,"B","InsuredAddress",7)

"KRN",1.5,11,1,"B","InsuredContact",8)

"KRN",1.5,11,1,"B","InsuredName",6)

"KRN",1.5,11,1,"B","InsuredRelationship",9)

"KRN",1.5,11,1,"B","MembershipNumber",5)

"KRN",1.5,11,1,"B","ToTime",12)

"KRN",1.5,11,1,"SEQ",2,1)

"KRN",1.5,11,1,"SEQ",3,2)

"KRN",1.5,11,1,"SEQ",4,3)

"KRN",1.5,11,1,"SEQ",5,4)

"KRN",1.5,11,1,"SEQ",6,5)

"KRN",1.5,11,1,"SEQ",8,6)

"KRN",1.5,11,1,"SEQ",9,7)

"KRN",1.5,11,1,"SEQ",10,8)

"KRN",1.5,11,1,"SEQ",11,9)

"KRN",1.5,11,1,"SEQ",14,10)

"KRN",1.5,11,1,"SEQ",16,11)

"KRN",1.5,11,1,"SEQ",17,12)

"KRN",1.5,12,-1)
0^67
"KRN",1.5,12,0)
VPR INSURANCE COMPANY^36^^^^S
"KRN",1.5,12,.1)
HealthFundCode
"KRN",1.5,12,1,0)
^1.51^6^6
"KRN",1.5,12,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,12,1,1,2)
VA36
"KRN",1.5,12,1,2,0)
Code^6^I
"KRN",1.5,12,1,3,0)
Description^7^S^36^.01
"KRN",1.5,12,1,3,6)
S VALUE=$P($G(VPRINS(VPRP,1)),U,2)
"KRN",1.5,12,1,4,0)
Address^8^E^36^^^^VPR INS COMPANY ADDRESS
"KRN",1.5,12,1,4,6)

"KRN",1.5,12,1,5,0)
ContactInfo^10^C^
"KRN",1.5,12,1,5,3,0)
^1.513I^1^1
"KRN",1.5,12,1,5,3,1,0)
3^WorkPhoneNumber
"KRN",1.5,12,1,5,3,"B",3,1)

"KRN",1.5,12,1,6,0)
WorkPhoneNumber^^S^36^.131
"KRN",1.5,12,1,6,6)
S VALUE=$G(VPRINS(VPRP,6))
"KRN",1.5,12,1,"B","Address",4)

"KRN",1.5,12,1,"B","Code",2)

"KRN",1.5,12,1,"B","ContactInfo",5)

"KRN",1.5,12,1,"B","Description",3)

"KRN",1.5,12,1,"B","SDACodingStandard",1)

"KRN",1.5,12,1,"B","WorkPhoneNumber",6)

"KRN",1.5,12,1,"SEQ",1,1)

"KRN",1.5,12,1,"SEQ",6,2)

"KRN",1.5,12,1,"SEQ",7,3)

"KRN",1.5,12,1,"SEQ",8,4)

"KRN",1.5,12,1,"SEQ",10,5)

"KRN",1.5,15,-1)
0^66
"KRN",1.5,15,0)
VPR INS GROUP NAME^355.3^^^^S
"KRN",1.5,15,.1)
HealthFundPlan
"KRN",1.5,15,1,0)
^1.51^3^3
"KRN",1.5,15,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,15,1,1,2)
VA355.3
"KRN",1.5,15,1,2,0)
Code^6^I^355.3
"KRN",1.5,15,1,3,0)
Description^7^S^355.3^2.01
"KRN",1.5,15,1,3,6)
S VALUE=$P($G(VPRINS(VPRP,8)),U,2)
"KRN",1.5,15,1,"B","Code",2)

"KRN",1.5,15,1,"B","Description",3)

"KRN",1.5,15,1,"B","SDACodingStandard",1)

"KRN",1.5,15,1,"SEQ",1,1)

"KRN",1.5,15,1,"SEQ",6,2)

"KRN",1.5,15,1,"SEQ",7,3)

"KRN",1.5,27,-1)
0^69
"KRN",1.5,27,0)
VPR NAME^^^^^S
"KRN",1.5,27,.1)
Name
"KRN",1.5,27,1,0)
^1.51^4^4
"KRN",1.5,27,1,1,0)
FamilyName^2^F
"KRN",1.5,27,1,1,6)
S VALUE=$G(VPRNAME("FAMILY"))
"KRN",1.5,27,1,2,0)
NameSuffix^5^F
"KRN",1.5,27,1,2,6)
S VALUE=$G(VPRNAME("SUFFIX"))
"KRN",1.5,27,1,3,0)
GivenName^6^F
"KRN",1.5,27,1,3,6)
S VALUE=$G(VPRNAME("GIVEN"))
"KRN",1.5,27,1,4,0)
MiddleName^7^F
"KRN",1.5,27,1,4,6)
S VALUE=$G(VPRNAME("MIDDLE"))
"KRN",1.5,27,1,"B","FamilyName",1)

"KRN",1.5,27,1,"B","GivenName",3)

"KRN",1.5,27,1,"B","MiddleName",4)

"KRN",1.5,27,1,"B","NameSuffix",2)

"KRN",1.5,27,1,"SEQ",2,1)

"KRN",1.5,27,1,"SEQ",5,2)

"KRN",1.5,27,1,"SEQ",6,3)

"KRN",1.5,27,1,"SEQ",7,4)

"KRN",1.5,27,3)
K VPRNAME
"KRN",1.5,27,4)
K VPRNAME S VPRNAME=$G(DIEN) D NAMECOMP^XLFNAME(.VPRNAME)
"KRN",1.5,27,19,0)
^1.519^2^2^3180606^^
"KRN",1.5,27,19,1,0)
This entity accepts a standard formatted name string (LNAME,FNAME MI)
"KRN",1.5,27,19,2,0)
as the ID and parses the components using Kernel's XLFNAME utilities.
"KRN",1.5,28,-1)
0^11
"KRN",1.5,28,0)
VPR FACILITY^4^^^^S
"KRN",1.5,28,.1)
Organization
"KRN",1.5,28,1,0)
^1.51^3^3
"KRN",1.5,28,1,1,0)
Code^4^S^4^99
"KRN",1.5,28,1,1,6)
S VALUE=$$STA^XUAF4(DIEN)
"KRN",1.5,28,1,2,0)
Description^5^S^4^.01
"KRN",1.5,28,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,28,1,3,2)
VA4
"KRN",1.5,28,1,"B","Code",1)

"KRN",1.5,28,1,"B","Description",2)

"KRN",1.5,28,1,"B","SDACodingStandard",3)

"KRN",1.5,28,1,"SEQ",1,3)

"KRN",1.5,28,1,"SEQ",4,1)

"KRN",1.5,28,1,"SEQ",5,2)

"KRN",1.5,29,-1)
0^44
"KRN",1.5,29,0)
VPR USER^200^^^^S
"KRN",1.5,29,.1)
User
"KRN",1.5,29,1,0)
^1.51^3^3
"KRN",1.5,29,1,1,0)
Code^4^I
"KRN",1.5,29,1,2,0)
Description^5^S^200^.01
"KRN",1.5,29,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,29,1,3,2)
VA200
"KRN",1.5,29,1,"B","Code",1)

"KRN",1.5,29,1,"B","Description",2)

"KRN",1.5,29,1,"B","SDACodingStandard",3)

"KRN",1.5,29,1,"SEQ",1,3)

"KRN",1.5,29,1,"SEQ",4,1)

"KRN",1.5,29,1,"SEQ",5,2)

"KRN",1.5,30,-1)
0^36
"KRN",1.5,30,0)
VPR PROVIDER^200^^^^S
"KRN",1.5,30,.1)
CareProvider
"KRN",1.5,30,1,0)
^1.51^10^10
"KRN",1.5,30,1,1,0)
Code^4^I
"KRN",1.5,30,1,2,0)
Description^5^S^200^.01
"KRN",1.5,30,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,30,1,3,2)
VA200
"KRN",1.5,30,1,4,0)
Name^6^E^200^.01^^^VPR NAME
"KRN",1.5,30,1,5,0)
ContactInfo^8^C^
"KRN",1.5,30,1,5,3,0)
^1.513I^3^3
"KRN",1.5,30,1,5,3,1,0)
3^WorkPhoneNumber
"KRN",1.5,30,1,5,3,2,0)
4^MobilePhoneNumber
"KRN",1.5,30,1,5,3,3,0)
5^EmailAddress
"KRN",1.5,30,1,5,3,"B",3,1)

"KRN",1.5,30,1,5,3,"B",4,2)

"KRN",1.5,30,1,5,3,"B",5,3)

"KRN",1.5,30,1,6,0)
WorkPhoneNumber^^S^200^.132
"KRN",1.5,30,1,7,0)
MobilePhoneNumber^^S^200^.137
"KRN",1.5,30,1,8,0)
EmailAddress^^S^200^.151
"KRN",1.5,30,1,9,0)
CareProviderType^9^E^200^^^^VPR PERSON CLASS
"KRN",1.5,30,1,9,6)
S DATA=$$TAXIND^XUSTAX(DIEN) I DATA'="^",$P(DATA,U)'=-1 S VALUE=$P(DATA,U,2)
"KRN",1.5,30,1,10,0)
Extension^3^E^200^^^^VPR PROVIDER EXTENSION
"KRN",1.5,30,1,10,6)
S VALUE=DIEN
"KRN",1.5,30,1,"B","CareProviderType",9)

"KRN",1.5,30,1,"B","Code",1)

"KRN",1.5,30,1,"B","ContactInfo",5)

"KRN",1.5,30,1,"B","Description",2)

"KRN",1.5,30,1,"B","EmailAddress",8)

"KRN",1.5,30,1,"B","Extension",10)

"KRN",1.5,30,1,"B","MobilePhoneNumber",7)

"KRN",1.5,30,1,"B","Name",4)

"KRN",1.5,30,1,"B","SDACodingStandard",3)

"KRN",1.5,30,1,"B","WorkPhoneNumber",6)

"KRN",1.5,30,1,"SEQ",1,3)

"KRN",1.5,30,1,"SEQ",3,10)

"KRN",1.5,30,1,"SEQ",4,1)

"KRN",1.5,30,1,"SEQ",5,2)

"KRN",1.5,30,1,"SEQ",6,4)

"KRN",1.5,30,1,"SEQ",8,5)

"KRN",1.5,30,1,"SEQ",9,9)

"KRN",1.5,30,3)
K VPROLE
"KRN",1.5,30,4)
S VPROLE=$P(DIEN,U,2),DIEN=+DIEN
"KRN",1.5,31,-1)
0^14
"KRN",1.5,31,0)
VPR ICD^80^^^^S
"KRN",1.5,31,.1)
DiagnosisCode
"KRN",1.5,31,1,0)
^1.51^4^4
"KRN",1.5,31,1,1,0)
Code^6^S^80^.01
"KRN",1.5,31,1,1,6)
S:$G(VPRCODE) VALUE=$P(VPRCODE,U,2)
"KRN",1.5,31,1,2,0)
Description^7^F
"KRN",1.5,31,1,2,6)
S VALUE=$P($G(VPRCODE),U,4)
"KRN",1.5,31,1,3,0)
SDACodingStandard^1^S^80
"KRN",1.5,31,1,3,4)

"KRN",1.5,31,1,3,5)

"KRN",1.5,31,1,3,6)
S VALUE=$$SNAM^ICDEX($P(VPRCODE,U,20))
"KRN",1.5,31,1,4,0)
OriginalText^3^F
"KRN",1.5,31,1,4,6)
S VALUE=$G(DATA("TEXT"))
"KRN",1.5,31,1,"B","Code",1)

"KRN",1.5,31,1,"B","Description",2)

"KRN",1.5,31,1,"B","OriginalText",4)

"KRN",1.5,31,1,"B","SDACodingStandard",3)

"KRN",1.5,31,1,"SEQ",1,3)

"KRN",1.5,31,1,"SEQ",3,4)

"KRN",1.5,31,1,"SEQ",6,1)

"KRN",1.5,31,1,"SEQ",7,2)

"KRN",1.5,31,2)
S VPRSYS=$G(DATA("SYS")),VPRDT=$G(DATA("DATE"),DT)
"KRN",1.5,31,3)
K VPRSYS,VPRDT,VPRCODE
"KRN",1.5,31,4)
S:VPRSYS="" VPRSYS=$$SAB^ICDEX($$CSI^ICDEX(80,DIEN),VPRDT) S VPRCODE=$$ICDDATA^ICDXCODE(VPRSYS,DIEN,VPRDT,"I")
"KRN",1.5,32,-1)
0^34
"KRN",1.5,32,0)
VPR PROBLEM^9000011^^^^S
"KRN",1.5,32,.1)
Problem
"KRN",1.5,32,1,0)
^1.51^13^12
"KRN",1.5,32,1,1,0)
Extension^4^E^9000011^^^^VPR PROBLEM EXTENSION
"KRN",1.5,32,1,1,6)
S VALUE=DIEN
"KRN",1.5,32,1,2,0)
UpdatedOn^1^S^9000011^.03^^1
"KRN",1.5,32,1,2,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,32,1,2,6)
S VALUE=$P($G(GMPFLD(.03)),U)
"KRN",1.5,32,1,3,0)
EnteredOn^16^S^9000011^.08^^1
"KRN",1.5,32,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,32,1,3,6)
S VALUE=$P($G(GMPFLD(.08)),U)
"KRN",1.5,32,1,4,0)
EnteredBy^14^E^9000011^1.03^^1^VPR USER
"KRN",1.5,32,1,5,0)
EnteredAt^15^E^9000011^.06^^1^VPR FACILITY
"KRN",1.5,32,1,6,0)
Problem^6.1^E^9000011^.01^^1^VPR ICD
"KRN",1.5,32,1,6,6)
S:$L($G(GMPFLD(80001))) DDEOUT=1 I $G(GMPFLD(80001))="" S VALUE=$P($G(GMPFLD(.01)),U),DATA("DATE")=$P($G(GMPFLD(80201)),U),DATA("SYS")=$P($G(GMPFLD(80202)),U)
"KRN",1.5,32,1,7,0)
ProblemDetails^5^S^9000011^.05
"KRN",1.5,32,1,7,6)
S VALUE=$P($G(GMPFLD(.05)),U,2)
"KRN",1.5,32,1,8,0)
Clinician^7^E^9000011^1.05^^1^VPR PROVIDER
"KRN",1.5,32,1,8,6)
S VALUE=$P($G(GMPFLD(1.05)),U)
"KRN",1.5,32,1,9,0)
Status^9^E^9000011^.12^^1^VPR CODE TABLE
"KRN",1.5,32,1,9,4)
S VALUE=$S(VALUE="A":"55561003^Active^SNOMED CT",VALUE="I":"73425007^Inactive^SNOMED CT",1:"")
"KRN",1.5,32,1,9,6)
S VALUE=$P($G(GMPFLD(.12)),U)
"KRN",1.5,32,1,10,0)
FromTime^17^S^9000011^.13^^1
"KRN",1.5,32,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,32,1,10,6)
S VALUE=$P($G(GMPFLD(.13)),U)
"KRN",1.5,32,1,11,0)
ToTime^18^S^9000011^1.07^^1
"KRN",1.5,32,1,11,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,32,1,11,6)
S VALUE=$P($G(GMPFLD(1.07)),U)
"KRN",1.5,32,1,13,0)
Problem^6^E^9000011^80001^^^VPR CODE TABLE
"KRN",1.5,32,1,13,4)
S VALUE=VALUE_U_$$SCTTEXT^VPRSDA(VALUE,DIEN)_"^SNOMED CT"
"KRN",1.5,32,1,13,6)
S VALUE=$P($G(GMPFLD(80001)),U)
"KRN",1.5,32,1,"B","Clinician",8)

"KRN",1.5,32,1,"B","EnteredAt",5)

"KRN",1.5,32,1,"B","EnteredBy",4)

"KRN",1.5,32,1,"B","EnteredOn",3)

"KRN",1.5,32,1,"B","Extension",1)

"KRN",1.5,32,1,"B","FromTime",10)

"KRN",1.5,32,1,"B","Problem",6)

"KRN",1.5,32,1,"B","Problem",13)

"KRN",1.5,32,1,"B","ProblemDetails",7)

"KRN",1.5,32,1,"B","Status",9)

"KRN",1.5,32,1,"B","ToTime",11)

"KRN",1.5,32,1,"B","UpdatedOn",2)

"KRN",1.5,32,1,"SEQ",1,2)

"KRN",1.5,32,1,"SEQ",4,1)

"KRN",1.5,32,1,"SEQ",5,7)

"KRN",1.5,32,1,"SEQ",6,13)

"KRN",1.5,32,1,"SEQ",6.1,6)

"KRN",1.5,32,1,"SEQ",7,8)

"KRN",1.5,32,1,"SEQ",9,9)

"KRN",1.5,32,1,"SEQ",14,4)

"KRN",1.5,32,1,"SEQ",15,5)

"KRN",1.5,32,1,"SEQ",16,3)

"KRN",1.5,32,1,"SEQ",17,10)

"KRN",1.5,32,1,"SEQ",18,11)

"KRN",1.5,32,3)
K GMPFLD,GMPORIG
"KRN",1.5,32,4)
K GMPFLD,GMPORIG D GETFLDS^GMPLEDT3(DIEN)
"KRN",1.5,32,5)
PROBLEMS^VPRSDAQ
"KRN",1.5,32,19,0)
^^1^1^3181227^
"KRN",1.5,32,19,1,0)
This entity populates the Problem container in HealthShare.
"KRN",1.5,33,-1)
0^19
"KRN",1.5,33,0)
VPR LOINC^95.3^^^^S
"KRN",1.5,33,.1)
ObservationValueCode
"KRN",1.5,33,1,0)
^1.51^3^3
"KRN",1.5,33,1,1,0)
Code^2^S^95.3^.01
"KRN",1.5,33,1,2,0)
Description^3^S^95.3^80
"KRN",1.5,33,1,2,6)
S VALUE=$G(^LAB(95.3,DIEN,83)) ;use field #83 if installed
"KRN",1.5,33,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,33,1,3,2)
LOINC
"KRN",1.5,33,1,"B","Code",1)

"KRN",1.5,33,1,"B","Description",2)

"KRN",1.5,33,1,"B","SDACodingStandard",3)

"KRN",1.5,33,1,"SEQ",1,3)

"KRN",1.5,33,1,"SEQ",2,1)

"KRN",1.5,33,1,"SEQ",3,2)

"KRN",1.5,34,-1)
0^15
"KRN",1.5,34,0)
VPR LAB ORDER^100^^^^S
"KRN",1.5,34,.1)
LabOrder
"KRN",1.5,34,1,0)
^1.51^21^20
"KRN",1.5,34,1,1,0)
EnteredAt^35^E^100^6^^1^VPR FACILITY
"KRN",1.5,34,1,1,4)
S:VALUE VALUE=$$GET1^DIQ(44,+VALUE_",",3,"I") S:'VALUE VALUE=$G(VASITE) ;#4 ien
"KRN",1.5,34,1,2,0)
EnteredBy^34^E^100^3^^1^VPR USER
"KRN",1.5,34,1,3,0)
EnteredOn^36^S^100^4^^1
"KRN",1.5,34,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,34,1,4,0)
FillerId^3^S^100^33
"KRN",1.5,34,1,4,6)
S VALUE=$$PKGID^ORX8(DIEN) S:VALUE?1.";" DDEOUT=1
"KRN",1.5,34,1,5,0)
OrderCategory^6^E^100^23^^1^VPR DISPLAY GROUP
"KRN",1.5,34,1,6,0)
OrderItem^5^E^100.001^.01^^^VPR ORDERABLE ITEM
"KRN",1.5,34,1,6,6)
S VALUE=+$O(^OR(100,DIEN,.1,"B",0)) ;only 1
"KRN",1.5,34,1,7,0)
OrderedBy^8^E^100^1^^1^VPR PROVIDER
"KRN",1.5,34,1,9,0)
Priority^19^E^100^^^^VPR LAB URGENCY
"KRN",1.5,34,1,9,6)
S VALUE=$$VALUE^ORX8(DIEN,"URGENCY")
"KRN",1.5,34,1,10,0)
ResultCopiesTo^29^L^100^35^^1^VPR PROVIDER
"KRN",1.5,34,1,10,1)
4^CareProvider
"KRN",1.5,34,1,10,6)
S DLIST(1)=$$GET1^DIQ(FILE,DIEN_",",FIELD,"I")
"KRN",1.5,34,1,11,0)
Specimen^12^S^100
"KRN",1.5,34,1,11,6)
N ID S ID=$$VALUE^ORX8(DIEN,"SPECIMEN") S:ID VALUE=$$GET1^DIQ(61,ID_",",.01)
"KRN",1.5,34,1,12,0)
SpecimenCollectedTime^13^S^100^21^^1
"KRN",1.5,34,1,12,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,34,1,13,0)
Status^18^S^100^5^.02
"KRN",1.5,34,1,13,4)
N X S X=VALUE,VALUE=$S(X="dc":"D",X="canc":"C",X="laps":"C",X="dc/e":"R",X="comp":"E",X="exp":"E",X="hold":"H",X="part":"A",1:"IP")
"KRN",1.5,34,1,14,0)
Result^39^E^100^33^^^VPR LRCH RESULT
"KRN",1.5,34,1,14,4)
S VALUE=$P(VALUE,";",5)_","_+$G(LRDFN),DATA=+$P($$OI^ORX8(DIEN),U,3) S:'VALUE DDEOUT=1
"KRN",1.5,34,1,14,6)
S VALUE=$$PKGID^ORX8(DIEN) S:$L(VALUE,";")<5 DDEOUT=1 ;no results
"KRN",1.5,34,1,15,0)
PlacerId^1^I
"KRN",1.5,34,1,16,0)
EnteringOrganization^9^E^100^6^^1^VPR LOCATION
"KRN",1.5,34,1,16,4)
S:VALUE VALUE=+VALUE
"KRN",1.5,34,1,17,0)
FromTime^37^S^100^21^^1
"KRN",1.5,34,1,17,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,34,1,18,0)
ToTime^38^S^100^22^^1
"KRN",1.5,34,1,18,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,34,1,19,0)
UpdatedOn^50^S^100^31^^1
"KRN",1.5,34,1,19,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,34,1,20,0)
AuthorizationTime^26^S^100.008^6^^1
"KRN",1.5,34,1,20,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,34,1,20,6)
S IEN="1,"_DIEN
"KRN",1.5,34,1,21,0)
Extension^53^E^100^^^^VPR ORDER EXTENSION
"KRN",1.5,34,1,21,6)
S VALUE=DIEN
"KRN",1.5,34,1,"B","AuthorizationTime",20)

"KRN",1.5,34,1,"B","EnteredAt",1)

"KRN",1.5,34,1,"B","EnteredBy",2)

"KRN",1.5,34,1,"B","EnteredOn",3)

"KRN",1.5,34,1,"B","EnteringOrganization",16)

"KRN",1.5,34,1,"B","Extension",21)

"KRN",1.5,34,1,"B","FillerId",4)

"KRN",1.5,34,1,"B","FromTime",17)

"KRN",1.5,34,1,"B","OrderCategory",5)

"KRN",1.5,34,1,"B","OrderItem",6)

"KRN",1.5,34,1,"B","OrderedBy",7)

"KRN",1.5,34,1,"B","PlacerId",15)

"KRN",1.5,34,1,"B","Priority",9)

"KRN",1.5,34,1,"B","Result",14)

"KRN",1.5,34,1,"B","ResultCopiesTo",10)

"KRN",1.5,34,1,"B","Specimen",11)

"KRN",1.5,34,1,"B","SpecimenCollectedTime",12)

"KRN",1.5,34,1,"B","Status",13)

"KRN",1.5,34,1,"B","ToTime",18)

"KRN",1.5,34,1,"B","UpdatedOn",19)

"KRN",1.5,34,1,"SEQ",1,15)

"KRN",1.5,34,1,"SEQ",3,4)

"KRN",1.5,34,1,"SEQ",5,6)

"KRN",1.5,34,1,"SEQ",6,5)

"KRN",1.5,34,1,"SEQ",8,7)

"KRN",1.5,34,1,"SEQ",9,16)

"KRN",1.5,34,1,"SEQ",12,11)

"KRN",1.5,34,1,"SEQ",13,12)

"KRN",1.5,34,1,"SEQ",18,13)

"KRN",1.5,34,1,"SEQ",19,9)

"KRN",1.5,34,1,"SEQ",26,20)

"KRN",1.5,34,1,"SEQ",29,10)

"KRN",1.5,34,1,"SEQ",34,2)

"KRN",1.5,34,1,"SEQ",35,1)

"KRN",1.5,34,1,"SEQ",36,3)

"KRN",1.5,34,1,"SEQ",37,17)

"KRN",1.5,34,1,"SEQ",38,18)

"KRN",1.5,34,1,"SEQ",39,14)

"KRN",1.5,34,1,"SEQ",50,19)

"KRN",1.5,34,1,"SEQ",53,21)

"KRN",1.5,34,2)
S:'DFN&ID DFN=+$P($G(^OR(100,ID,0)),U,2) S LRDFN=+$G(^DPT(DFN,"LR")) S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,34,3)
K LRDFN,VASITE
"KRN",1.5,34,5)
ORDERS^VPRSDAQ("CH")
"KRN",1.5,34,19,0)
^^1^1^3181227^
"KRN",1.5,34,19,1,0)
This entity populates the Lab Order container in HealthShare.
"KRN",1.5,35,-1)
0^6
"KRN",1.5,35,0)
VPR DISPLAY GROUP^100.98^^^^S
"KRN",1.5,35,.1)
OrderCategory
"KRN",1.5,35,1,0)
^1.51^4^4
"KRN",1.5,35,1,1,0)
Code^6^S^100.98^3
"KRN",1.5,35,1,2,0)
Description^7^S^100.98^.01
"KRN",1.5,35,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,35,1,3,2)
VA100.98
"KRN",1.5,35,1,4,0)
OriginalText^3^F
"KRN",1.5,35,1,4,6)
S VALUE=$G(DATA)
"KRN",1.5,35,1,"B","Code",1)

"KRN",1.5,35,1,"B","Description",2)

"KRN",1.5,35,1,"B","OriginalText",4)

"KRN",1.5,35,1,"B","SDACodingStandard",3)

"KRN",1.5,35,1,"SEQ",1,3)

"KRN",1.5,35,1,"SEQ",3,4)

"KRN",1.5,35,1,"SEQ",6,1)

"KRN",1.5,35,1,"SEQ",7,2)

"KRN",1.5,36,-1)
0^25
"KRN",1.5,36,0)
VPR ORDERABLE ITEM^101.43^^^^S
"KRN",1.5,36,.1)
Order
"KRN",1.5,36,1,0)
^1.51^3^3
"KRN",1.5,36,1,1,0)
Code^4^I
"KRN",1.5,36,1,2,0)
Description^5^S^101.43^.01
"KRN",1.5,36,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,36,1,3,2)
VA101.43
"KRN",1.5,36,1,"B","Code",1)

"KRN",1.5,36,1,"B","Description",2)

"KRN",1.5,36,1,"B","SDACodingStandard",3)

"KRN",1.5,36,1,"SEQ",1,3)

"KRN",1.5,36,1,"SEQ",4,1)

"KRN",1.5,36,1,"SEQ",5,2)

"KRN",1.5,37,-1)
0^17
"KRN",1.5,37,0)
VPR LAB URGENCY^62.05^^^^S
"KRN",1.5,37,.1)
Priority
"KRN",1.5,37,1,0)
^1.51^3^3
"KRN",1.5,37,1,1,0)
Code^4^S^62.05^3^^
"KRN",1.5,37,1,2,0)
Description^5^S^62.05^.01
"KRN",1.5,37,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,37,1,3,2)
VA62.05
"KRN",1.5,37,1,"B","Code",1)

"KRN",1.5,37,1,"B","Description",2)

"KRN",1.5,37,1,"B","SDACodingStandard",3)

"KRN",1.5,37,1,"SEQ",1,3)

"KRN",1.5,37,1,"SEQ",4,1)

"KRN",1.5,37,1,"SEQ",5,2)

"KRN",1.5,38,-1)
0^20
"KRN",1.5,38,0)
VPR LRCH RESULT^63.04^^^^S
"KRN",1.5,38,.1)
Result
"KRN",1.5,38,1,0)
^1.51^9^9
"KRN",1.5,38,1,1,0)
Extension^3^E^63.04^^^^VPR LRCH RESULT EXTENSION
"KRN",1.5,38,1,1,6)
S VALUE=DIEN
"KRN",1.5,38,1,2,0)
EnteredAt^22^E^63.04^.112^^1^VPR FACILITY
"KRN",1.5,38,1,2,6)
S VALUE=$G(LRFAC)
"KRN",1.5,38,1,3,0)
ResultTime^7^S^63.04^.03^^1
"KRN",1.5,38,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,38,1,4,0)
ResultStatus^8^S^63.04^.03^^1
"KRN",1.5,38,1,4,4)
S VALUE=$S(VALUE:"F",1:"P") ;Date Rpt Comp = Final
"KRN",1.5,38,1,4,5)
S VALUE=""
"KRN",1.5,38,1,5,0)
ResultType^4^F
"KRN",1.5,38,1,5,2)
AT
"KRN",1.5,38,1,6,0)
VerifiedBy^6^E^63.04^.04^^1^VPR USER
"KRN",1.5,38,1,6,6)
S VALUE=$G(LRVER)
"KRN",1.5,38,1,7,0)
Comments^15^W^63.04^.99^^^^1
"KRN",1.5,38,1,7,6)
N I S I=0 F  S I=$O(^LR(+$G(LRDFN),"CH",+IEN,1,I)) S:(I="")&'$D(WP) DDEOUT=1 Q:I<1  S WP(I)=$P($G(^(I,0)),U)
"KRN",1.5,38,1,8,0)
ResultItems^5^L^^^^^VPR LRCH RESULT ITEM
"KRN",1.5,38,1,8,1)
4^LabResultItem
"KRN",1.5,38,1,8,6)
D EXPAND^LR7OU1(+DATA,.DLIST) N T S T=0 F  S T=$O(DLIST(T)) Q:T<1  S DLIST(T)=$$LRDN^LRPXAPIU(T)_","_DIEN ;DLIST(60 ien) = CH data node#,LRIDT,LRDFN
"KRN",1.5,38,1,9,0)
ExternalId^24^F
"KRN",1.5,38,1,9,6)
S VALUE="CH;"_+DIEN
"KRN",1.5,38,1,"B","Comments",7)

"KRN",1.5,38,1,"B","EnteredAt",2)

"KRN",1.5,38,1,"B","Extension",1)

"KRN",1.5,38,1,"B","ExternalId",9)

"KRN",1.5,38,1,"B","ResultItems",8)

"KRN",1.5,38,1,"B","ResultStatus",4)

"KRN",1.5,38,1,"B","ResultTime",3)

"KRN",1.5,38,1,"B","ResultType",5)

"KRN",1.5,38,1,"B","VerifiedBy",6)

"KRN",1.5,38,1,"SEQ",3,1)

"KRN",1.5,38,1,"SEQ",4,5)

"KRN",1.5,38,1,"SEQ",5,8)

"KRN",1.5,38,1,"SEQ",6,6)

"KRN",1.5,38,1,"SEQ",7,3)

"KRN",1.5,38,1,"SEQ",8,4)

"KRN",1.5,38,1,"SEQ",15,7)

"KRN",1.5,38,1,"SEQ",22,2)

"KRN",1.5,38,1,"SEQ",24,9)

"KRN",1.5,38,3)
K LRVER,LRFAC
"KRN",1.5,39,-1)
0^21
"KRN",1.5,39,0)
VPR LRCH RESULT ITEM^63.04^^^^S
"KRN",1.5,39,.1)
ResultItem
"KRN",1.5,39,1,0)
^1.51^9^9
"KRN",1.5,39,1,1,0)
ObservationTime^18^S^63.04
"KRN",1.5,39,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,39,1,1,6)
S VALUE=9999999-$P(IEN,",",2)
"KRN",1.5,39,1,2,0)
ResultValue^5^F
"KRN",1.5,39,1,2,6)
S VALUE=$P(LRNODE,U)
"KRN",1.5,39,1,3,0)
ResultValueUnits^7^F
"KRN",1.5,39,1,3,6)
S VALUE=$P($P(LRNODE,U,5),"!",7)
"KRN",1.5,39,1,4,0)
ResultInterpretation^9^F
"KRN",1.5,39,1,4,6)
N X S X=$P(LRNODE,U,2) S:$L(X) VALUE=$E(X)_$S($E(X,2)="*":$E(X),1:"")
"KRN",1.5,39,1,5,0)
ResultNormalRange^8^F
"KRN",1.5,39,1,5,6)
S VALUE=$TR($P($P(LRNODE,U,5),"!",2,3),"!","-") I VALUE="-" S DDEOUT=1
"KRN",1.5,39,1,6,0)
TestItemCode^4^E^63.04^^^^VPR LAB TEST
"KRN",1.5,39,1,6,6)
S VALUE=$P($P(LRNODE,U,3),"!",7) S:VALUE="" VALUE=$$TEST^LRPXAPIU(+IEN)
"KRN",1.5,39,1,7,0)
PerformedAt^13^E^63.04^^^^VPR FACILITY
"KRN",1.5,39,1,7,6)
S VALUE=$P(LRNODE,U,9),LRFAC=VALUE
"KRN",1.5,39,1,8,0)
ResultCodedValue^17^E^63.04^^^^VPR LOINC
"KRN",1.5,39,1,8,6)
S VALUE=$P($P(LRNODE,U,3),"!",3)
"KRN",1.5,39,1,9,0)
ExternalId^23^F
"KRN",1.5,39,1,9,6)
S VALUE="CH;"_+$P(DIEN,",",2)_";"_+DIEN
"KRN",1.5,39,1,"B","ExternalId",9)

"KRN",1.5,39,1,"B","ObservationTime",1)

"KRN",1.5,39,1,"B","PerformedAt",7)

"KRN",1.5,39,1,"B","ResultCodedValue",8)

"KRN",1.5,39,1,"B","ResultInterpretation",4)

"KRN",1.5,39,1,"B","ResultNormalRange",5)

"KRN",1.5,39,1,"B","ResultValue",2)

"KRN",1.5,39,1,"B","ResultValueUnits",3)

"KRN",1.5,39,1,"B","TestItemCode",6)

"KRN",1.5,39,1,"SEQ",4,6)

"KRN",1.5,39,1,"SEQ",5,2)

"KRN",1.5,39,1,"SEQ",7,3)

"KRN",1.5,39,1,"SEQ",8,5)

"KRN",1.5,39,1,"SEQ",9,4)

"KRN",1.5,39,1,"SEQ",13,7)

"KRN",1.5,39,1,"SEQ",17,8)

"KRN",1.5,39,1,"SEQ",18,1)

"KRN",1.5,39,1,"SEQ",23,9)

"KRN",1.5,39,3)
K LRNODE
"KRN",1.5,39,4)
S LRNODE=$G(^LR(+$P(DIEN,",",3),"CH",+$P(DIEN,",",2),+DIEN)),LRVER=$P(LRNODE,"|",4) S:LRNODE="" DDEOUT=1
"KRN",1.5,40,-1)
0^16
"KRN",1.5,40,0)
VPR LAB TEST^60^^^^S
"KRN",1.5,40,.1)
LabTestItem
"KRN",1.5,40,1,0)
^1.51^3^3
"KRN",1.5,40,1,1,0)
Code^4^I
"KRN",1.5,40,1,2,0)
Description^5^S^60^.01
"KRN",1.5,40,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,40,1,3,2)
VA60
"KRN",1.5,40,1,"B","Code",1)

"KRN",1.5,40,1,"B","Description",2)

"KRN",1.5,40,1,"B","SDACodingStandard",3)

"KRN",1.5,40,1,"SEQ",1,3)

"KRN",1.5,40,1,"SEQ",4,1)

"KRN",1.5,40,1,"SEQ",5,2)

"KRN",1.5,41,-1)
0^27
"KRN",1.5,41,0)
VPR PATIENT^2^^^^S
"KRN",1.5,41,.1)
Patient
"KRN",1.5,41,1,0)
^1.51^50^37
"KRN",1.5,41,1,1,0)
Name^3^E^2^.01^^^VPR NAME
"KRN",1.5,41,1,1,6)
S VALUE=$G(VADM(1))
"KRN",1.5,41,1,4,0)
MothersMaidenName^5^S^2^.2403
"KRN",1.5,41,1,4,4)
S VALUE=$P(VALUE,",")
"KRN",1.5,41,1,4,6)
S VALUE=$G(VAPD(5))
"KRN",1.5,41,1,5,0)
MothersFullName^6^E^2^.2402^^^VPR NAME
"KRN",1.5,41,1,5,6)
S VALUE=$G(VAPD(4))
"KRN",1.5,41,1,6,0)
Aliases^7^L^2.01^^^^VPR PATIENT ALIAS
"KRN",1.5,41,1,6,1)
2^Name
"KRN",1.5,41,1,7,0)
PrimaryLanguage^8^E^2.07^^^^VPR LANGUAGE
"KRN",1.5,41,1,7,6)
N X S X=$P($G(VADM(13,1)),U,2) I $L(X) S DATA=X,VALUE=$$FIND1^DIC(.85,,"X",X)
"KRN",1.5,41,1,8,0)
Religion^10^E^2^.08^^1^VPR RELIGION
"KRN",1.5,41,1,8,6)
S VALUE=$P($G(VADM(9)),U),DATA=$P($G(VADM(9)),U,2)
"KRN",1.5,41,1,9,0)
MaritalStatus^11^E^2^.05^^1^VPR MARITAL STATUS
"KRN",1.5,41,1,9,6)
N X S X=$G(VADM(10)) S:'X DDEOUT=1 I X S VALUE=+$G(^DIC(11,+X,"MASTER")) S:'VALUE VALUE=X
"KRN",1.5,41,1,10,0)
Gender^12^E^2^.02^^1^VPR CODE TABLE
"KRN",1.5,41,1,10,6)
S VALUE=$G(VADM(5))
"KRN",1.5,41,1,11,0)
Races^15^L^2.02^^^^VPR RACE
"KRN",1.5,41,1,11,1)
4^Race
"KRN",1.5,41,1,11,6)
M DLIST=VADM(12)
"KRN",1.5,41,1,12,0)
EthnicGroup^16^E^2.06^^^^VPR ETHNICITY
"KRN",1.5,41,1,12,6)
S VALUE=$P($G(VADM(11,1)),U),DATA=$P($G(VADM(11,1)),U,2)
"KRN",1.5,41,1,13,0)
SupportContacts^17^L^2
"KRN",1.5,41,1,13,1)
3^SupportContact
"KRN",1.5,41,1,13,3,0)
^1.513I^2^2
"KRN",1.5,41,1,13,3,1,0)
1^NOK
"KRN",1.5,41,1,13,3,2,0)
2^ECON
"KRN",1.5,41,1,13,3,"B",1,1)

"KRN",1.5,41,1,13,3,"B",2,2)

"KRN",1.5,41,1,14,0)
BirthTime^18^S^2^.03^^1
"KRN",1.5,41,1,14,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,41,1,14,6)
S VALUE=$P($G(VADM(3)),U) I $E(VALUE,4,5)="00"!($E(VALUE,6,7)="00") S DDEOUT=1
"KRN",1.5,41,1,15,0)
IsProtected^21^S^38.1^2^^1
"KRN",1.5,41,1,15,4)
S VALUE=$S(VALUE:"true",VALUE=0:"false",1:"")
"KRN",1.5,41,1,15,5)
S VALUE=$S(VALUE="true":1,VALUE="false":0,1:"")
"KRN",1.5,41,1,16,0)
ProtectedEffectiveDate^22^S^38.1^4^^1
"KRN",1.5,41,1,16,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,41,1,17,0)
DeathTime^23^S^2^.351^^1
"KRN",1.5,41,1,17,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,41,1,17,6)
S VALUE=$P($G(VADM(6)),U)
"KRN",1.5,41,1,18,0)
IsDead^24^S^2^.351^^1
"KRN",1.5,41,1,18,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,41,1,18,5)
S VALUE=""
"KRN",1.5,41,1,18,6)
S VALUE=+$G(VADM(6))
"KRN",1.5,41,1,19,0)
PatientNumbers^28^L
"KRN",1.5,41,1,19,1)
3^PatientNumber
"KRN",1.5,41,1,19,3,0)
^1.513I^2^2
"KRN",1.5,41,1,19,3,1,0)
1^SSN
"KRN",1.5,41,1,19,3,2,0)
2^MRN
"KRN",1.5,41,1,19,3,"B",1,1)

"KRN",1.5,41,1,19,3,"B",2,2)

"KRN",1.5,41,1,20,0)
Addresses^30^L
"KRN",1.5,41,1,20,1)
3^Address
"KRN",1.5,41,1,20,3,0)
^1.513I^1^1
"KRN",1.5,41,1,20,3,1,0)
1^PermanentAddress
"KRN",1.5,41,1,20,3,"B",1,1)

"KRN",1.5,41,1,21,0)
ContactInfo^31^C^
"KRN",1.5,41,1,21,3,0)
^1.513I^4^4
"KRN",1.5,41,1,21,3,1,0)
1^HomePhoneNumber
"KRN",1.5,41,1,21,3,2,0)
2^WorkPhoneNumber
"KRN",1.5,41,1,21,3,3,0)
3^MobilePhoneNumber
"KRN",1.5,41,1,21,3,4,0)
4^EmailAddress
"KRN",1.5,41,1,21,3,"B",1,1)

"KRN",1.5,41,1,21,3,"B",2,2)

"KRN",1.5,41,1,21,3,"B",3,3)

"KRN",1.5,41,1,21,3,"B",4,4)

"KRN",1.5,41,1,22,0)
FamilyDoctor^32^E^2^^^^VPR FAMILY DOCTOR
"KRN",1.5,41,1,22,6)
N X S X=$$OUTPTPR^SDUTL3(DIEN) S:X VALUE=+X ;pcProvider
"KRN",1.5,41,1,23,0)
Occupation^34^E^2^.07^^^VPR CODE ONLY
"KRN",1.5,41,1,23,6)
S VALUE=$G(VAPD(6))
"KRN",1.5,41,1,24,0)
Comments^37^S^2^.091
"KRN",1.5,41,1,24,6)
S VALUE=$G(VADM(7))
"KRN",1.5,41,1,27,0)
EnteredBy^43^E^2^.096^^1^VPR USER
"KRN",1.5,41,1,28,0)
EnteredAt^45^E^2^^^^VPR FACILITY
"KRN",1.5,41,1,28,6)
S VALUE=$G(VASITE) ;default #4 ien
"KRN",1.5,41,1,29,0)
EnteredOn^46^S^2^.097^^1
"KRN",1.5,41,1,29,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,41,1,32,0)
PermanentAddress^^E^2^^^^VPR PATIENT ADDRESS
"KRN",1.5,41,1,32,6)
S VALUE=DIEN
"KRN",1.5,41,1,33,0)
HomePhoneNumber^^S^2^.131
"KRN",1.5,41,1,34,0)
WorkPhoneNumber^^S^2^.132
"KRN",1.5,41,1,35,0)
MobilePhoneNumber^^S^2^.134
"KRN",1.5,41,1,36,0)
EmailAddress^^S^2^.133
"KRN",1.5,41,1,37,0)
SSN^^E^2^.09^^^VPR PATIENT NUMBER
"KRN",1.5,41,1,37,4)
S VALUE=$P($G(VADM(2)),U)_"^SSN^^SSA"
"KRN",1.5,41,1,42,0)
MRN^^E^2^^^^VPR PATIENT NUMBER
"KRN",1.5,41,1,42,6)
S VALUE=DIEN_"^MRN^"_$G(VASTN)_U_$G(VASTN)
"KRN",1.5,41,1,46,0)
BirthPlace^19^E^2^^^^VPR PATIENT BIRTHPLACE
"KRN",1.5,41,1,46,6)
S VALUE=DIEN
"KRN",1.5,41,1,47,0)
NOK^^E^2^^^^VPR PATIENT NOK
"KRN",1.5,41,1,47,6)
S VALUE=DIEN
"KRN",1.5,41,1,48,0)
ECON^^E^2^^^^VPR PATIENT ECON
"KRN",1.5,41,1,48,6)
S VALUE=DIEN
"KRN",1.5,41,1,49,0)
Extension^1^E^2^^^^VPR PATIENT EXTENSION
"KRN",1.5,41,1,49,6)
S VALUE=DIEN
"KRN",1.5,41,1,50,0)
OtherLanguages^9^L^^^^^VPR PATIENT LANGUAGE
"KRN",1.5,41,1,50,1)
4^PatientLanguage
"KRN",1.5,41,1,50,6)
N I S I=+$G(VADM(13,1)) S:I DLIST(1)=I_","_$G(DFN)
"KRN",1.5,41,1,"B","Addresses",20)

"KRN",1.5,41,1,"B","Aliases",6)

"KRN",1.5,41,1,"B","BirthPlace",46)

"KRN",1.5,41,1,"B","BirthTime",14)

"KRN",1.5,41,1,"B","Comments",24)

"KRN",1.5,41,1,"B","ContactInfo",21)

"KRN",1.5,41,1,"B","DeathTime",17)

"KRN",1.5,41,1,"B","ECON",48)

"KRN",1.5,41,1,"B","EmailAddress",36)

"KRN",1.5,41,1,"B","EnteredAt",28)

"KRN",1.5,41,1,"B","EnteredBy",27)

"KRN",1.5,41,1,"B","EnteredOn",29)

"KRN",1.5,41,1,"B","EthnicGroup",12)

"KRN",1.5,41,1,"B","Extension",49)

"KRN",1.5,41,1,"B","FamilyDoctor",22)

"KRN",1.5,41,1,"B","Gender",10)

"KRN",1.5,41,1,"B","HomePhoneNumber",33)

"KRN",1.5,41,1,"B","IsDead",18)

"KRN",1.5,41,1,"B","IsProtected",15)

"KRN",1.5,41,1,"B","MRN",42)

"KRN",1.5,41,1,"B","MaritalStatus",9)

"KRN",1.5,41,1,"B","MobilePhoneNumber",35)

"KRN",1.5,41,1,"B","MothersFullName",5)

"KRN",1.5,41,1,"B","MothersMaidenName",4)

"KRN",1.5,41,1,"B","NOK",47)

"KRN",1.5,41,1,"B","Name",1)

"KRN",1.5,41,1,"B","Occupation",23)

"KRN",1.5,41,1,"B","OtherLanguages",50)

"KRN",1.5,41,1,"B","PatientNumbers",19)

"KRN",1.5,41,1,"B","PermanentAddress",32)

"KRN",1.5,41,1,"B","PrimaryLanguage",7)

"KRN",1.5,41,1,"B","ProtectedEffectiveDate",16)

"KRN",1.5,41,1,"B","Races",11)

"KRN",1.5,41,1,"B","Religion",8)

"KRN",1.5,41,1,"B","SSN",37)

"KRN",1.5,41,1,"B","SupportContacts",13)

"KRN",1.5,41,1,"B","WorkPhoneNumber",34)

"KRN",1.5,41,1,"SEQ",1,49)

"KRN",1.5,41,1,"SEQ",3,1)

"KRN",1.5,41,1,"SEQ",5,4)

"KRN",1.5,41,1,"SEQ",6,5)

"KRN",1.5,41,1,"SEQ",7,6)

"KRN",1.5,41,1,"SEQ",8,7)

"KRN",1.5,41,1,"SEQ",9,50)

"KRN",1.5,41,1,"SEQ",10,8)

"KRN",1.5,41,1,"SEQ",11,9)

"KRN",1.5,41,1,"SEQ",12,10)

"KRN",1.5,41,1,"SEQ",15,11)

"KRN",1.5,41,1,"SEQ",16,12)

"KRN",1.5,41,1,"SEQ",17,13)

"KRN",1.5,41,1,"SEQ",18,14)

"KRN",1.5,41,1,"SEQ",19,46)

"KRN",1.5,41,1,"SEQ",21,15)

"KRN",1.5,41,1,"SEQ",22,16)

"KRN",1.5,41,1,"SEQ",23,17)

"KRN",1.5,41,1,"SEQ",24,18)

"KRN",1.5,41,1,"SEQ",28,19)

"KRN",1.5,41,1,"SEQ",30,20)

"KRN",1.5,41,1,"SEQ",31,21)

"KRN",1.5,41,1,"SEQ",32,22)

"KRN",1.5,41,1,"SEQ",34,23)

"KRN",1.5,41,1,"SEQ",37,24)

"KRN",1.5,41,1,"SEQ",43,27)

"KRN",1.5,41,1,"SEQ",45,28)

"KRN",1.5,41,1,"SEQ",46,29)

"KRN",1.5,41,2)
N X S X=$$SITE^VASITE S:X>0 VASITE=+X,VASTN=$P(X,U,3) I X'>0 S VASITE=$$KSP^XUPARAM("INST"),VASTN=$$STA^XUAF4(VASITE)
"KRN",1.5,41,3)
K VA,VADM,VAPD,DDESC,VASITE,VASTN
"KRN",1.5,41,4)
S DFN=DIEN D DEM^VADPT,OPD^VADPT
"KRN",1.5,41,19,0)
^1.519^2^2^3181227^^^^
"KRN",1.5,41,19,1,0)
This entity populates the Patient container in HealthShare. Data is pulled
"KRN",1.5,41,19,2,0)
from the Registration package using supported calls to VADPT.
"KRN",1.5,42,-1)
0^29
"KRN",1.5,42,0)
VPR PATIENT ALIAS^2.01^^^^S
"KRN",1.5,42,.1)
Alias
"KRN",1.5,42,1,0)
^1.51^4^4
"KRN",1.5,42,1,1,0)
FamilyName^1^F
"KRN",1.5,42,1,1,6)
S VALUE=$P(DPTNM,U)
"KRN",1.5,42,1,2,0)
GivenName^3^F
"KRN",1.5,42,1,2,6)
S VALUE=$P(DPTNM,U,2)
"KRN",1.5,42,1,3,0)
NameSuffix^2^F
"KRN",1.5,42,1,3,6)
S VALUE=$P(DPTNM,U,4)
"KRN",1.5,42,1,4,0)
MiddleName^4^F
"KRN",1.5,42,1,4,6)
S VALUE=$P(DPTNM,U,3)
"KRN",1.5,42,1,"B","FamilyName",1)

"KRN",1.5,42,1,"B","GivenName",2)

"KRN",1.5,42,1,"B","MiddleName",4)

"KRN",1.5,42,1,"B","NameSuffix",3)

"KRN",1.5,42,1,"SEQ",1,1)

"KRN",1.5,42,1,"SEQ",2,3)

"KRN",1.5,42,1,"SEQ",3,2)

"KRN",1.5,42,1,"SEQ",4,4)

"KRN",1.5,42,3)
K DPTNM
"KRN",1.5,42,4)
K DPTNM S DPTNM=$$GET1^DIQ(2.01,DIEN_",",.01),DPTNM=$$NAMECOMP^VPRSDA(DPTNM)
"KRN",1.5,42,19,0)
^^2^2^3180606^
"KRN",1.5,42,19,1,0)
This entity supports VPR PATIENT, and expects the FileMan IENS string as 
"KRN",1.5,42,19,2,0)
the ID for each entry in the Alias sub-file.
"KRN",1.5,43,-1)
0^78
"KRN",1.5,43,0)
VPR LANGUAGE^.85^^^^S
"KRN",1.5,43,.1)
Language
"KRN",1.5,43,1,0)
^1.51^3^3
"KRN",1.5,43,1,1,0)
Code^6^S^.85^.02
"KRN",1.5,43,1,2,0)
Description^7^S^.85^.01
"KRN",1.5,43,1,2,6)
S VALUE=$G(DATA)
"KRN",1.5,43,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,43,1,3,2)
ISO639
"KRN",1.5,43,1,"B","Code",1)

"KRN",1.5,43,1,"B","Description",2)

"KRN",1.5,43,1,"B","SDACodingStandard",3)

"KRN",1.5,43,1,"SEQ",1,3)

"KRN",1.5,43,1,"SEQ",6,1)

"KRN",1.5,43,1,"SEQ",7,2)

"KRN",1.5,43,19,0)
^^5^5^3180606^
"KRN",1.5,43,19,1,0)
This entity supports VPR PATIENT, and expects the Language file #.85 ien
"KRN",1.5,43,19,2,0)
as the ID. 
"KRN",1.5,43,19,3,0)
 
"KRN",1.5,43,19,4,0)
If the local variable DATA is defined, it will be used as the value for 
"KRN",1.5,43,19,5,0)
the Description.
"KRN",1.5,44,-1)
0^86
"KRN",1.5,44,0)
VPR RACE^10.99^^^^S
"KRN",1.5,44,.1)
Race
"KRN",1.5,44,1,0)
^1.51^3^3
"KRN",1.5,44,1,1,0)
Code^6^S^10.99^1^
"KRN",1.5,44,1,1,6)
I $G(DATA) S VALUE=$$GET1^DIQ(10,+DATA,3,"I")
"KRN",1.5,44,1,2,0)
Description^7^S^10^.01
"KRN",1.5,44,1,2,6)
I $G(DATA) S VALUE=$$LOWER^VALM1($P(DATA,U,2))
"KRN",1.5,44,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,44,1,3,2)
CDC
"KRN",1.5,44,1,"B","Code",1)

"KRN",1.5,44,1,"B","Description",2)

"KRN",1.5,44,1,"B","SDACodingStandard",3)

"KRN",1.5,44,1,"SEQ",1,3)

"KRN",1.5,44,1,"SEQ",6,1)

"KRN",1.5,44,1,"SEQ",7,2)

"KRN",1.5,44,3)
K DATA
"KRN",1.5,44,4)
I DIEN["^" S DATA=DIEN ;unconverted #10 ien^name
"KRN",1.5,44,19,0)
^^4^4^3180904^
"KRN",1.5,44,19,1,0)
This entity supports VPR PATIENT, and expects the Race Master file #10.99
"KRN",1.5,44,19,2,0)
ien as the ID. If the local variable DATA is defined (i.e., the Race 
"KRN",1.5,44,19,3,0)
Master record cannot be identified), it will contain the #10 ien^name and 
"KRN",1.5,44,19,4,0)
use the CDC code and name from that file instead.
"KRN",1.5,45,-1)
0^28
"KRN",1.5,45,0)
VPR PATIENT ADDRESS^2^^^^S
"KRN",1.5,45,.1)
Address
"KRN",1.5,45,1,0)
^1.51^6^5
"KRN",1.5,45,1,1,0)
Street^4^S^2^.111
"KRN",1.5,45,1,1,6)
S VALUE=$G(VAPA(1)) I $L(VALUE) N I F I=2,3 S:$L($G(VAPA(I))) VALUE=VALUE_";"_VAPA(I)
"KRN",1.5,45,1,2,0)
City^5^E^2^.114^^^VPR CODE ONLY
"KRN",1.5,45,1,2,6)
S VALUE=$G(VAPA(4))
"KRN",1.5,45,1,3,0)
State^6^E^2^.115^^1^VPR STATE
"KRN",1.5,45,1,3,6)
S VALUE=$P($G(VAPA(5)),U)
"KRN",1.5,45,1,4,0)
Zip^7^E^2^.1112^^^VPR CODE ONLY
"KRN",1.5,45,1,4,6)
S VALUE=$G(VAPA(6))
"KRN",1.5,45,1,6,0)
Country^8^E^2^.1173^^1^VPR COUNTRY
"KRN",1.5,45,1,"B","City",2)

"KRN",1.5,45,1,"B","Country",6)

"KRN",1.5,45,1,"B","State",3)

"KRN",1.5,45,1,"B","Street",1)

"KRN",1.5,45,1,"B","Zip",4)

"KRN",1.5,45,1,"SEQ",4,1)

"KRN",1.5,45,1,"SEQ",5,2)

"KRN",1.5,45,1,"SEQ",6,3)

"KRN",1.5,45,1,"SEQ",7,4)

"KRN",1.5,45,1,"SEQ",8,6)

"KRN",1.5,45,2)
S DFN=DIEN,VAPA("P")="" D ADD^VADPT
"KRN",1.5,45,3)
K VAPA
"KRN",1.5,45,19,0)
^^2^2^3180606^
"KRN",1.5,45,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,45,19,2,0)
as the ID.
"KRN",1.5,46,-1)
0^42
"KRN",1.5,46,0)
VPR STATE^5^^^^S
"KRN",1.5,46,.1)
State
"KRN",1.5,46,1,0)
^1.51^2^2
"KRN",1.5,46,1,1,0)
Code^1^S^5^1
"KRN",1.5,46,1,2,0)
Description^2^S^5^.01
"KRN",1.5,46,1,"B","Code",1)

"KRN",1.5,46,1,"B","Description",2)

"KRN",1.5,46,1,"SEQ",1,1)

"KRN",1.5,46,1,"SEQ",2,2)

"KRN",1.5,47,-1)
0^77
"KRN",1.5,47,0)
VPR ETHNICITY^10.2^^^^S
"KRN",1.5,47,.1)
EthnicGroup
"KRN",1.5,47,1,0)
^1.51^3^3
"KRN",1.5,47,1,1,0)
Code^2^S^10.2^3^
"KRN",1.5,47,1,2,0)
Description^3^S^10.2^.01
"KRN",1.5,47,1,2,6)
S VALUE=$G(DATA)
"KRN",1.5,47,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,47,1,3,2)
CDC
"KRN",1.5,47,1,"B","Code",1)

"KRN",1.5,47,1,"B","Description",2)

"KRN",1.5,47,1,"B","SDACodingStandard",3)

"KRN",1.5,47,1,"SEQ",1,3)

"KRN",1.5,47,1,"SEQ",2,1)

"KRN",1.5,47,1,"SEQ",3,2)

"KRN",1.5,47,19,0)
^^5^5^3180606^
"KRN",1.5,47,19,1,0)
This entity supports VPR PATIENT, and expects the Ethnicity file #10.2
"KRN",1.5,47,19,2,0)
ien as the ID.
"KRN",1.5,47,19,3,0)
 
"KRN",1.5,47,19,4,0)
If the local variable DATA is defined, it will be used as the value for
"KRN",1.5,47,19,5,0)
the Description.
"KRN",1.5,48,-1)
0^40
"KRN",1.5,48,0)
VPR RELIGION^13^^^^S
"KRN",1.5,48,.1)
Religion
"KRN",1.5,48,1,0)
^1.51^3^3
"KRN",1.5,48,1,1,0)
Code^4^S^13^3
"KRN",1.5,48,1,2,0)
Description^5^S^13^.01
"KRN",1.5,48,1,2,6)
S VALUE=$G(DATA)
"KRN",1.5,48,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,48,1,3,2)
VA13
"KRN",1.5,48,1,"B","Code",1)

"KRN",1.5,48,1,"B","Description",2)

"KRN",1.5,48,1,"B","SDACodingStandard",3)

"KRN",1.5,48,1,"SEQ",1,3)

"KRN",1.5,48,1,"SEQ",4,1)

"KRN",1.5,48,1,"SEQ",5,2)

"KRN",1.5,48,19,0)
^1.519^5^5^3180606^^
"KRN",1.5,48,19,1,0)
This entity supports VPR PATIENT, and expects the Religion file #13 ien 
"KRN",1.5,48,19,2,0)
as the ID.
"KRN",1.5,48,19,3,0)
 
"KRN",1.5,48,19,4,0)
If the local variable DATA is defined, it will be used as the value for 
"KRN",1.5,48,19,5,0)
the Description.
"KRN",1.5,49,-1)
0^22
"KRN",1.5,49,0)
VPR MARITAL STATUS^11.99^^^^S
"KRN",1.5,49,.1)
MaritalStatus
"KRN",1.5,49,1,0)
^1.51^3^3
"KRN",1.5,49,1,1,0)
Code^4^S^11.99^1^^1
"KRN",1.5,49,1,1,6)
I $G(DATA) N X S X=$$GET1^DIQ(11,+DATA,2,"I"),VALUE=$S(X="S":"A",X="N":"S",1:X)
"KRN",1.5,49,1,2,0)
Description^5^S^11.99^.01
"KRN",1.5,49,1,2,6)
I $G(DATA) N X S X=$P(DATA,U,2),VALUE=$S(X="NEVER MARRIED":"Single",1:$$LOWER^VALM1(X))
"KRN",1.5,49,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,49,1,3,2)
HL7
"KRN",1.5,49,1,3,6)

"KRN",1.5,49,1,"B","Code",1)

"KRN",1.5,49,1,"B","Description",2)

"KRN",1.5,49,1,"B","SDACodingStandard",3)

"KRN",1.5,49,1,"SEQ",1,3)

"KRN",1.5,49,1,"SEQ",4,1)

"KRN",1.5,49,1,"SEQ",5,2)

"KRN",1.5,49,4)
I DIEN["^" S DATA=DIEN ;unconverted #11 ien^name
"KRN",1.5,49,19,0)
^^4^4^3180904^
"KRN",1.5,49,19,1,0)
This entity supports VPR PATIENT, and expects the Master Marital Status
"KRN",1.5,49,19,2,0)
file #11.99 ien as the ID. If the local variable DATA is defined (i.e.,
"KRN",1.5,49,19,3,0)
the Master Marital Status record cannot be identified), it will contain 
"KRN",1.5,49,19,4,0)
the #11 ien^name and be converted manually to HL7 table values.
"KRN",1.5,50,-1)
0^97
"KRN",1.5,50,0)
VPR VISIT^9000010^^^^S
"KRN",1.5,50,.1)
Encounter
"KRN",1.5,50,1,0)
^1.51^15^13
"KRN",1.5,50,1,1,0)
EncounterNumber^3^I
"KRN",1.5,50,1,2,0)
EncounterType^5^S^9000010^15002^^1
"KRN",1.5,50,1,2,4)
S VALUE=$S(VALUE:"I",VALUE=0:"O",1:VALUE)
"KRN",1.5,50,1,2,6)
S VALUE=$P($G(@VPRVST@(150)),U,2) S:$O(^EDP(230,"V",DIEN,0)) VALUE="E" ;Emergency
"KRN",1.5,50,1,3,0)
EncounterCodedType^6^E^9000010^.07^^1^VPR CODE TABLE
"KRN",1.5,50,1,3,6)
S VALUE=$P($G(@VPRVST@(0)),U,7)
"KRN",1.5,50,1,4,0)
ConsultingClinicians^9^L^9000010.06^^^^VPR PROVIDER
"KRN",1.5,50,1,4,1)
4^CareProvider^AD^DIEN
"KRN",1.5,50,1,4,6)
D VPRV^VPRSDA(DIEN)
"KRN",1.5,50,1,5,0)
AccountNumber^11^S^9000010^.26
"KRN",1.5,50,1,5,6)
S VALUE=$P($G(@VPRVST@(0)),U,26)
"KRN",1.5,50,1,6,0)
HealthCareFacility^22^E^9000010^.22^^1^VPR LOCATION
"KRN",1.5,50,1,6,6)
S VALUE=$P($G(@VPRVST@(0)),U,22)
"KRN",1.5,50,1,8,0)
EnteredBy^41^E^9000010^.23^^1^VPR USER
"KRN",1.5,50,1,8,6)
S VALUE=$P($G(@VPRVST@(0)),U,23)
"KRN",1.5,50,1,9,0)
EnteredAt^42^E^9000010^.06^^1^VPR FACILITY
"KRN",1.5,50,1,9,6)
S VALUE=$P($G(@VPRVST@(0)),U,6) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,50,1,10,0)
EnteredOn^43^S^9000010^.02^^1
"KRN",1.5,50,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,50,1,10,6)
S VALUE=$P($G(@VPRVST@(0)),U,2)
"KRN",1.5,50,1,11,0)
FromTime^44^S^9000010^.01^^1
"KRN",1.5,50,1,11,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,50,1,11,6)
S VALUE=$P($G(@VPRVST@(0)),U)
"KRN",1.5,50,1,12,0)
ToTime^45^S^9000010^.18^^1
"KRN",1.5,50,1,12,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,50,1,12,6)
S VALUE=$P($G(@VPRVST@(0)),U,18) S:'VALUE VALUE=$$VTO^VPRSDA(DIEN)
"KRN",1.5,50,1,14,0)
Extension^2^E^9000010^^^^VPR VISIT EXTENSION
"KRN",1.5,50,1,14,6)
S VALUE=DIEN
"KRN",1.5,50,1,15,0)
Priority^35^E^9000010^15003^^1^VPR CODE TABLE
"KRN",1.5,50,1,15,6)
S VALUE=$P($G(@VPRVST@(150)),U,3)
"KRN",1.5,50,1,"B","AccountNumber",5)

"KRN",1.5,50,1,"B","ConsultingClinicians",4)

"KRN",1.5,50,1,"B","EncounterCodedType",3)

"KRN",1.5,50,1,"B","EncounterNumber",1)

"KRN",1.5,50,1,"B","EncounterType",2)

"KRN",1.5,50,1,"B","EnteredAt",9)

"KRN",1.5,50,1,"B","EnteredBy",8)

"KRN",1.5,50,1,"B","EnteredOn",10)

"KRN",1.5,50,1,"B","Extension",14)

"KRN",1.5,50,1,"B","FromTime",11)

"KRN",1.5,50,1,"B","HealthCareFacility",6)

"KRN",1.5,50,1,"B","Priority",15)

"KRN",1.5,50,1,"B","ToTime",12)

"KRN",1.5,50,1,"SEQ",2,14)

"KRN",1.5,50,1,"SEQ",3,1)

"KRN",1.5,50,1,"SEQ",5,2)

"KRN",1.5,50,1,"SEQ",6,3)

"KRN",1.5,50,1,"SEQ",9,4)

"KRN",1.5,50,1,"SEQ",11,5)

"KRN",1.5,50,1,"SEQ",22,6)

"KRN",1.5,50,1,"SEQ",35,15)

"KRN",1.5,50,1,"SEQ",41,8)

"KRN",1.5,50,1,"SEQ",42,9)

"KRN",1.5,50,1,"SEQ",43,10)

"KRN",1.5,50,1,"SEQ",44,11)

"KRN",1.5,50,1,"SEQ",45,12)

"KRN",1.5,50,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,50,3)
K ^TMP("PXKENC",$J),VPRVST,VADMVT,VAIP,VASITE
"KRN",1.5,50,4)
D VST^VPRSDA(DIEN)
"KRN",1.5,50,5)
VISITS^VPRSDAQ
"KRN",1.5,50,19,0)
^^1^1^3181227^
"KRN",1.5,50,19,1,0)
This entity populates the Encounter container in HealthShare.
"KRN",1.5,51,-1)
0^18
"KRN",1.5,51,0)
VPR LOCATION^44^^^^S
"KRN",1.5,51,.1)
HealthCareFacility
"KRN",1.5,51,1,0)
^1.51^6^6
"KRN",1.5,51,1,1,0)
Code^4^I
"KRN",1.5,51,1,2,0)
Description^5^S^44^.01
"KRN",1.5,51,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,51,1,3,2)
VA44
"KRN",1.5,51,1,4,0)
Organization^6^E^44^3^^1^VPR FACILITY
"KRN",1.5,51,1,5,0)
LocationType^7^S^44^2^^1
"KRN",1.5,51,1,5,4)
N X S X=VALUE,VALUE=$S(X="C":"CLINIC",X="W":"WARD",(X="I")!(X="OR"):"DEPARTMENT",1:"OTHER")
"KRN",1.5,51,1,6,0)
Extension^3^E^44^^^^VPR LOCATION EXTENSION
"KRN",1.5,51,1,6,6)
S VALUE=DIEN
"KRN",1.5,51,1,"B","Code",1)

"KRN",1.5,51,1,"B","Description",2)

"KRN",1.5,51,1,"B","Extension",6)

"KRN",1.5,51,1,"B","LocationType",5)

"KRN",1.5,51,1,"B","Organization",4)

"KRN",1.5,51,1,"B","SDACodingStandard",3)

"KRN",1.5,51,1,"SEQ",1,3)

"KRN",1.5,51,1,"SEQ",3,6)

"KRN",1.5,51,1,"SEQ",4,1)

"KRN",1.5,51,1,"SEQ",5,2)

"KRN",1.5,51,1,"SEQ",6,4)

"KRN",1.5,51,1,"SEQ",7,5)

"KRN",1.5,52,-1)
0^2
"KRN",1.5,52,0)
VPR ALLERGY^120.8^^^^S
"KRN",1.5,52,.1)
Allergy
"KRN",1.5,52,1,0)
^1.51^24^17
"KRN",1.5,52,1,1,0)
Allergy^3^E^120.8^1^^1^VPR CODE TABLE
"KRN",1.5,52,1,1,4)
S VALUE=$$ALLERGEN^VPRSDAL(VALUE)
"KRN",1.5,52,1,1,6)
S VALUE=$P(VPRALG,U,9)
"KRN",1.5,52,1,2,0)
AllergyCategory^4^E^120.8^3.1^^1^VPR CODE TABLE
"KRN",1.5,52,1,2,4)
N X S X=$$EXTERNAL^DILFD(120.8,3.1,,VALUE),VALUE=X_U_X_"^VHAT"
"KRN",1.5,52,1,2,6)
S VALUE=$P(VPRALG,U,7)
"KRN",1.5,52,1,3,0)
EnteredBy^22^E^120.8^5^^1^VPR USER
"KRN",1.5,52,1,4,0)
Reaction^6^E^120.8^^^^VPR ALLERGY SIGN/SYMPTOM
"KRN",1.5,52,1,4,6)
I $D(VPRALG("S")) N X S X=$P($G(VPRALG("S",1)),U),VALUE=$P(X,";",2)_U_$P(X,";") ;first
"KRN",1.5,52,1,5,0)
Severity^7^E^120.85^^^^VPR CODE TABLE
"KRN",1.5,52,1,5,6)
S VALUE=$$ALGSEV^VPRSDAL(DIEN)
"KRN",1.5,52,1,6,0)
Certainty^8^E^120.8^19^^1^VPR CODE TABLE
"KRN",1.5,52,1,6,4)
S VALUE=VALUE_U_$S('VALUE:"Unv",1:"V")_"erified"
"KRN",1.5,52,1,6,6)
S VALUE=($E($P($G(GMRAY),U,4))="V")
"KRN",1.5,52,1,8,0)
VerifiedTime^14^S^120.8^20^^1
"KRN",1.5,52,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,52,1,8,6)
S VALUE=$P($G(GMRAY),U,9)
"KRN",1.5,52,1,9,0)
FreeTextAllergy^17^S^120.8^.02
"KRN",1.5,52,1,9,6)
S VALUE=$P(VPRALG,U,2)
"KRN",1.5,52,1,11,0)
EnteredAt^23^E^120.8^^^^VPR FACILITY
"KRN",1.5,52,1,11,6)
S VALUE=$G(VASITE) ;default #4 ien
"KRN",1.5,52,1,12,0)
EnteredOn^24^S^120.8^4^^1
"KRN",1.5,52,1,12,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,52,1,12,6)
N X,Y,%DT S X=$P($G(GMRAY),U,10),%DT="TSX" I $L(X) D ^%DT S:Y>0 VALUE=Y
"KRN",1.5,52,1,18,0)
Extension^2^E^120.8^^^^VPR ALLERGY EXTENSION
"KRN",1.5,52,1,18,6)
S VALUE=DIEN
"KRN",1.5,52,1,19,0)
Clinician^5^E^120.8^21^^1^VPR PROVIDER
"KRN",1.5,52,1,20,0)
Status^19^S^120.8^22^^1
"KRN",1.5,52,1,20,4)
S VALUE=$S(VALUE:"I",1:"A")
"KRN",1.5,52,1,21,0)
FromTime^25^S^120.85
"KRN",1.5,52,1,21,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,52,1,21,6)
S VALUE=$$ALGDT^VPRSDAL(DIEN)
"KRN",1.5,52,1,22,0)
ToTime^26^S^120.8^23^^1
"KRN",1.5,52,1,22,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,52,1,23,0)
InactiveTime^12^S^120.8^23^^1
"KRN",1.5,52,1,23,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,52,1,24,0)
InactiveComments^13^S^120.8
"KRN",1.5,52,1,24,6)
S VALUE=$$ALGCMT1^VPRSDAL(DIEN,"E")
"KRN",1.5,52,1,"B","Allergy",1)

"KRN",1.5,52,1,"B","AllergyCategory",2)

"KRN",1.5,52,1,"B","Certainty",6)

"KRN",1.5,52,1,"B","Clinician",19)

"KRN",1.5,52,1,"B","EnteredAt",11)

"KRN",1.5,52,1,"B","EnteredBy",3)

"KRN",1.5,52,1,"B","EnteredOn",12)

"KRN",1.5,52,1,"B","Extension",18)

"KRN",1.5,52,1,"B","FreeTextAllergy",9)

"KRN",1.5,52,1,"B","FromTime",21)

"KRN",1.5,52,1,"B","InactiveComments",24)

"KRN",1.5,52,1,"B","InactiveTime",23)

"KRN",1.5,52,1,"B","Reaction",4)

"KRN",1.5,52,1,"B","Severity",5)

"KRN",1.5,52,1,"B","Status",20)

"KRN",1.5,52,1,"B","ToTime",22)

"KRN",1.5,52,1,"B","VerifiedTime",8)

"KRN",1.5,52,1,"SEQ",2,18)

"KRN",1.5,52,1,"SEQ",3,1)

"KRN",1.5,52,1,"SEQ",4,2)

"KRN",1.5,52,1,"SEQ",5,19)

"KRN",1.5,52,1,"SEQ",6,4)

"KRN",1.5,52,1,"SEQ",7,5)

"KRN",1.5,52,1,"SEQ",8,6)

"KRN",1.5,52,1,"SEQ",12,23)

"KRN",1.5,52,1,"SEQ",13,24)

"KRN",1.5,52,1,"SEQ",14,8)

"KRN",1.5,52,1,"SEQ",17,9)

"KRN",1.5,52,1,"SEQ",19,20)

"KRN",1.5,52,1,"SEQ",22,3)

"KRN",1.5,52,1,"SEQ",23,11)

"KRN",1.5,52,1,"SEQ",24,12)

"KRN",1.5,52,1,"SEQ",25,21)

"KRN",1.5,52,1,"SEQ",26,22)

"KRN",1.5,52,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,52,3)
K GMRAL,GMRAY,VPRALG,VASITE
"KRN",1.5,52,4)
D ALG1^VPRSDAL(DIEN)
"KRN",1.5,52,5)
ALLERGYS^VPRSDAQ
"KRN",1.5,52,19,0)
^^1^1^3181227^
"KRN",1.5,52,19,1,0)
This entity populates the Allergy container in HealthShare.
"KRN",1.5,53,-1)
0^7
"KRN",1.5,53,0)
VPR DOCUMENT^8925^^^^S
"KRN",1.5,53,.1)
Document
"KRN",1.5,53,1,0)
^1.51^19^17
"KRN",1.5,53,1,1,0)
FromTime^1^S^8925^.07^^1
"KRN",1.5,53,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,53,1,1,6)
S VALUE=$G(VPRTIU(DIEN,.07,"I"))
"KRN",1.5,53,1,2,0)
ToTime^2^S^8925^.08^^1
"KRN",1.5,53,1,2,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,53,1,2,6)
S VALUE=$G(VPRTIU(DIEN,.08,"I"))
"KRN",1.5,53,1,3,0)
EncounterNumber^3^S^8925^.03^^1
"KRN",1.5,53,1,3,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,53,1,3,6)
S VALUE=$G(VPRTIU(DIEN,.03,"I"))
"KRN",1.5,53,1,4,0)
DocumentTime^6^S^8925^1301^^1
"KRN",1.5,53,1,4,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,53,1,4,6)
S VALUE=$G(VPRTIU(DIEN,1301,"I"))
"KRN",1.5,53,1,5,0)
NoteText^7^W^8925^2
"KRN",1.5,53,1,5,6)
N VPRT D RPT^VPRDTIU(.VPRT,DIEN) M WP=@VPRT
"KRN",1.5,53,1,6,0)
DocumentType^8^E^8925^.01^^1^VPR CODE TABLE
"KRN",1.5,53,1,6,4)
S VALUE=$$TIUTYPE^VPRSDA(VALUE)
"KRN",1.5,53,1,6,6)
S VALUE=$G(VPRTIU(DIEN,.01,"I"))
"KRN",1.5,53,1,7,0)
Clinician^9^E^8925^1202^^1^VPR PROVIDER
"KRN",1.5,53,1,7,6)
S VALUE=$G(VPRTIU(DIEN,1202,"I"))
"KRN",1.5,53,1,8,0)
TranscriptionTime^10^S^8925^1307^^1
"KRN",1.5,53,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,53,1,8,6)
S VALUE=$G(VPRTIU(DIEN,1307,"I"))
"KRN",1.5,53,1,9,0)
AuthorizationTime^11^S^8925^1501^^1
"KRN",1.5,53,1,9,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,53,1,9,6)
S VALUE=$$TIUSIG^VPRSDA
"KRN",1.5,53,1,10,0)
DocumentName^12^S^8925^.01
"KRN",1.5,53,1,10,6)
S VALUE=$P($G(^TIU(8925.1,+$G(VPRTIU(DIEN,.01,"I")),0)),U)
"KRN",1.5,53,1,11,0)
DocumentNumber^16^I
"KRN",1.5,53,1,11,4)
S VALUE=VALUE_";TIU"
"KRN",1.5,53,1,11,5)
S:$P(VALUE,";",2)="TIU" VALUE=+VALUE
"KRN",1.5,53,1,12,0)
DocumentCompletionStatus^19^E^8925^.05^^1^VPR DOCUMENT STATUS
"KRN",1.5,53,1,12,6)
S VALUE=$G(VPRTIU(DIEN,.05,"I"))
"KRN",1.5,53,1,13,0)
EnteredBy^22^E^8925^1302^^1^VPR USER
"KRN",1.5,53,1,13,6)
S VALUE=$G(VPRTIU(DIEN,1302,"I"))
"KRN",1.5,53,1,14,0)
EnteredAt^23^E^8925^1212^^1^VPR FACILITY
"KRN",1.5,53,1,14,6)
S VALUE=$G(VPRTIU(DIEN,1212,"I")) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,53,1,15,0)
EnteredOn^24^S^8925^1201^^1
"KRN",1.5,53,1,15,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,53,1,15,6)
S VALUE=$G(VPRTIU(DIEN,1201,"I"))
"KRN",1.5,53,1,18,0)
FileType^13^F
"KRN",1.5,53,1,18,2)
TXT
"KRN",1.5,53,1,19,0)
Extension^5^E^8925^^^^VPR DOCUMENT EXTENSION
"KRN",1.5,53,1,19,6)
S VALUE=DIEN
"KRN",1.5,53,1,"B","AuthorizationTime",9)

"KRN",1.5,53,1,"B","Clinician",7)

"KRN",1.5,53,1,"B","DocumentCompletionStatus",12)

"KRN",1.5,53,1,"B","DocumentName",10)

"KRN",1.5,53,1,"B","DocumentNumber",11)

"KRN",1.5,53,1,"B","DocumentTime",4)

"KRN",1.5,53,1,"B","DocumentType",6)

"KRN",1.5,53,1,"B","EncounterNumber",3)

"KRN",1.5,53,1,"B","EnteredAt",14)

"KRN",1.5,53,1,"B","EnteredBy",13)

"KRN",1.5,53,1,"B","EnteredOn",15)

"KRN",1.5,53,1,"B","Extension",19)

"KRN",1.5,53,1,"B","FileType",18)

"KRN",1.5,53,1,"B","FromTime",1)

"KRN",1.5,53,1,"B","NoteText",5)

"KRN",1.5,53,1,"B","ToTime",2)

"KRN",1.5,53,1,"B","TranscriptionTime",8)

"KRN",1.5,53,1,"SEQ",1,1)

"KRN",1.5,53,1,"SEQ",2,2)

"KRN",1.5,53,1,"SEQ",3,3)

"KRN",1.5,53,1,"SEQ",5,19)

"KRN",1.5,53,1,"SEQ",6,4)

"KRN",1.5,53,1,"SEQ",7,5)

"KRN",1.5,53,1,"SEQ",8,6)

"KRN",1.5,53,1,"SEQ",9,7)

"KRN",1.5,53,1,"SEQ",10,8)

"KRN",1.5,53,1,"SEQ",11,9)

"KRN",1.5,53,1,"SEQ",12,10)

"KRN",1.5,53,1,"SEQ",13,18)

"KRN",1.5,53,1,"SEQ",16,11)

"KRN",1.5,53,1,"SEQ",19,12)

"KRN",1.5,53,1,"SEQ",22,13)

"KRN",1.5,53,1,"SEQ",23,14)

"KRN",1.5,53,1,"SEQ",24,15)

"KRN",1.5,53,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,53,3)
K VPRTIU,VASITE
"KRN",1.5,53,4)
K VPRTIU D EXTRACT^TIULQ(DIEN,"VPRTIU",,".01:.08;1201;1212;1301;1302;1307;1501:1508;1606;1701;2101",,,"I")
"KRN",1.5,53,5)
DOCUMENT^VPRSDAQ
"KRN",1.5,53,19,0)
^^1^1^3181227^
"KRN",1.5,53,19,1,0)
This entity populates the Document container in HealthShare.
"KRN",1.5,54,-1)
0^3
"KRN",1.5,54,0)
VPR ALLERGY SIGN/SYMPTOM^120.83^^^^S
"KRN",1.5,54,.1)
Reaction
"KRN",1.5,54,1,0)
^1.51^3^3
"KRN",1.5,54,1,1,0)
Code^4^I
"KRN",1.5,54,1,1,6)
S VALUE=$P($G(DATA),U)
"KRN",1.5,54,1,2,0)
Description^5^S^120.83^.01
"KRN",1.5,54,1,2,6)
S VALUE=$P($G(DATA),U,2)
"KRN",1.5,54,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,54,1,3,2)
VA120.83
"KRN",1.5,54,1,3,6)
S VALUE=$P($G(DATA),U,3)
"KRN",1.5,54,1,"B","Code",1)

"KRN",1.5,54,1,"B","Description",2)

"KRN",1.5,54,1,"B","SDACodingStandard",3)

"KRN",1.5,54,1,"SEQ",1,3)

"KRN",1.5,54,1,"SEQ",4,1)

"KRN",1.5,54,1,"SEQ",5,2)

"KRN",1.5,54,4)
D ALGSIGN^VPRSDAL(.DIEN) ;convert to national code
"KRN",1.5,55,-1)
0^37
"KRN",1.5,55,0)
VPR RAD ORDER^100^^^^S
"KRN",1.5,55,.1)
RadOrder
"KRN",1.5,55,1,0)
^1.51^23^20
"KRN",1.5,55,1,1,0)
EnteredAt^35^E^100^6^^1^VPR FACILITY
"KRN",1.5,55,1,1,4)
S:VALUE VALUE=$$GET1^DIQ(44,+VALUE_",",3,"I") S:'VALUE VALUE=$G(VASITE) ;#4 ien
"KRN",1.5,55,1,2,0)
EnteredBy^34^E^100^3^^1^VPR USER
"KRN",1.5,55,1,3,0)
EnteredOn^36^S^100^4^^1
"KRN",1.5,55,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,55,1,4,0)
FillerId^3^S^100^33
"KRN",1.5,55,1,4,6)
S VALUE=$$PKGID^ORX8(DIEN)
"KRN",1.5,55,1,5,0)
OrderCategory^6^E^100^23^^1^VPR DISPLAY GROUP
"KRN",1.5,55,1,6,0)
OrderItem^5^E^100.01^.01^^^VPR ORDERABLE ITEM
"KRN",1.5,55,1,6,6)
S VALUE=+$O(^OR(100,DIEN,.1,"B",0)) ;only 1
"KRN",1.5,55,1,7,0)
OrderedBy^8^E^100^1^^1^VPR PROVIDER
"KRN",1.5,55,1,9,0)
Priority^19^E^100^^^^VPR ORDER URGENCY
"KRN",1.5,55,1,9,6)
S VALUE=$$VALUE^ORX8(DIEN,"URGENCY")
"KRN",1.5,55,1,10,0)
ResultCopiesTo^29^L^100^35^^1^VPR PROVIDER
"KRN",1.5,55,1,10,1)
4^CareProvider
"KRN",1.5,55,1,10,6)
S DLIST(1)=$$GET1^DIQ(FILE,DIEN_",",FIELD,"I")
"KRN",1.5,55,1,13,0)
Status^18^S^100^5^.02
"KRN",1.5,55,1,13,4)
N X S X=VALUE,VALUE=$S(X="dc":"D",X="canc":"C",X="laps":"C",X="dc/e":"R",X="comp":"E",X="exp":"E",X="hold":"H",X="part":"A",1:"IP")
"KRN",1.5,55,1,14,0)
Result^39^E^100^33^^^VPR RAD RESULT
"KRN",1.5,55,1,14,4)
N CASE,EXAM S EXAM=+$O(^RADPT("AO",VALUE,DFN,0)),CASE=+$O(^(EXAM,0)),DATA=VALUE,VALUE=$S(CASE&EXAM:CASE_","_EXAM,1:"") ;save RA order# in DATA, reset VALUE for Exam-Case
"KRN",1.5,55,1,14,6)
S VALUE=$$PKGID^ORX8(DIEN) S:VALUE="" DDEOUT=1 ;no results
"KRN",1.5,55,1,15,0)
PlacerId^1^I
"KRN",1.5,55,1,16,0)
FromTime^37^S^100^21^^1
"KRN",1.5,55,1,16,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,55,1,17,0)
ToTime^38^S^100^22^^1
"KRN",1.5,55,1,17,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,55,1,18,0)
UpdatedOn^50^S^100^31^^1
"KRN",1.5,55,1,18,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,55,1,19,0)
ClinicalInformation^41^S^100
"KRN",1.5,55,1,19,6)
S VALUE=$$VALUE^ORX8(DIEN,"COMMENT")
"KRN",1.5,55,1,20,0)
ReasonForStudy^49^E^100^^^^VPR CODE ONLY
"KRN",1.5,55,1,20,6)
S VALUE=$$VALUE^ORX8(DIEN,"REASON")
"KRN",1.5,55,1,21,0)
AuthorizationTime^26^S^100.008^6^^1
"KRN",1.5,55,1,21,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,55,1,21,6)
S IEN="1,"_DIEN
"KRN",1.5,55,1,22,0)
EnteringOrganization^9^E^100^6^^1^VPR LOCATION
"KRN",1.5,55,1,22,4)
S:VALUE VALUE=+VALUE
"KRN",1.5,55,1,23,0)
Extension^53^E^100^^^^VPR ORDER EXTENSION
"KRN",1.5,55,1,23,6)
S VALUE=DIEN
"KRN",1.5,55,1,"B","AuthorizationTime",21)

"KRN",1.5,55,1,"B","ClinicalInformation",19)

"KRN",1.5,55,1,"B","EnteredAt",1)

"KRN",1.5,55,1,"B","EnteredBy",2)

"KRN",1.5,55,1,"B","EnteredOn",3)

"KRN",1.5,55,1,"B","EnteringOrganization",22)

"KRN",1.5,55,1,"B","Extension",23)

"KRN",1.5,55,1,"B","FillerId",4)

"KRN",1.5,55,1,"B","FromTime",16)

"KRN",1.5,55,1,"B","OrderCategory",5)

"KRN",1.5,55,1,"B","OrderItem",6)

"KRN",1.5,55,1,"B","OrderedBy",7)

"KRN",1.5,55,1,"B","PlacerId",15)

"KRN",1.5,55,1,"B","Priority",9)

"KRN",1.5,55,1,"B","ReasonForStudy",20)

"KRN",1.5,55,1,"B","Result",14)

"KRN",1.5,55,1,"B","ResultCopiesTo",10)

"KRN",1.5,55,1,"B","Status",13)

"KRN",1.5,55,1,"B","ToTime",17)

"KRN",1.5,55,1,"B","UpdatedOn",18)

"KRN",1.5,55,1,"SEQ",1,15)

"KRN",1.5,55,1,"SEQ",3,4)

"KRN",1.5,55,1,"SEQ",5,6)

"KRN",1.5,55,1,"SEQ",6,5)

"KRN",1.5,55,1,"SEQ",8,7)

"KRN",1.5,55,1,"SEQ",9,22)

"KRN",1.5,55,1,"SEQ",18,13)

"KRN",1.5,55,1,"SEQ",19,9)

"KRN",1.5,55,1,"SEQ",26,21)

"KRN",1.5,55,1,"SEQ",29,10)

"KRN",1.5,55,1,"SEQ",34,2)

"KRN",1.5,55,1,"SEQ",35,1)

"KRN",1.5,55,1,"SEQ",36,3)

"KRN",1.5,55,1,"SEQ",37,16)

"KRN",1.5,55,1,"SEQ",38,17)

"KRN",1.5,55,1,"SEQ",39,14)

"KRN",1.5,55,1,"SEQ",41,19)

"KRN",1.5,55,1,"SEQ",49,20)

"KRN",1.5,55,1,"SEQ",50,18)

"KRN",1.5,55,1,"SEQ",53,23)

"KRN",1.5,55,2)
D PRE^VPRSDAR S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,55,3)
D POST^VPRSDAR K VASITE
"KRN",1.5,55,5)
ORDERS^VPRSDAQ("XRAY")
"KRN",1.5,55,19,0)
^^1^1^3181227^
"KRN",1.5,55,19,1,0)
This entity populates the Rad Order container in HealthShare.
"KRN",1.5,56,-1)
0^26
"KRN",1.5,56,0)
VPR OTHER ORDER^100^^^^S
"KRN",1.5,56,.1)
OtherOrder
"KRN",1.5,56,1,0)
^1.51^21^17
"KRN",1.5,56,1,1,0)
EnteredAt^35^E^100^6^^1^VPR FACILITY
"KRN",1.5,56,1,1,4)
S:VALUE VALUE=$$GET1^DIQ(44,+VALUE_",",3,"I") S:'VALUE VALUE=$G(VASITE) ;#4 ien
"KRN",1.5,56,1,2,0)
EnteredBy^34^E^100^3^^1^VPR USER
"KRN",1.5,56,1,3,0)
EnteredOn^36^S^100^4^^1
"KRN",1.5,56,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,56,1,4,0)
FillerId^3^S^100^33
"KRN",1.5,56,1,4,6)
S VALUE=$$PKGID^ORX8(DIEN)
"KRN",1.5,56,1,5,0)
OrderCategory^6^E^100^23^^1^VPR DISPLAY GROUP
"KRN",1.5,56,1,6,0)
OrderItem^5^E^100.01^.01^^^VPR ORDERABLE ITEM
"KRN",1.5,56,1,6,6)
S VALUE=$O(^OR(100,DIEN,.1,"B",0)) ;first
"KRN",1.5,56,1,7,0)
OrderedBy^8^E^100^1^^1^VPR PROVIDER
"KRN",1.5,56,1,9,0)
Priority^19^E^100^^^^VPR ORDER URGENCY
"KRN",1.5,56,1,9,6)
S VALUE=$$VALUE^ORX8(DIEN,"URGENCY")
"KRN",1.5,56,1,10,0)
ResultCopiesTo^29^L^100^35^^1^VPR PROVIDER
"KRN",1.5,56,1,10,1)
4^CareProvider
"KRN",1.5,56,1,10,6)
N X S X=$$GET1^DIQ(FILE,DIEN_",",FIELD,"I") S:X DLIST(1)=X I X="" S DDEOUT=1
"KRN",1.5,56,1,13,0)
Status^18^S^100^5^.02
"KRN",1.5,56,1,13,4)
N X S X=VALUE,VALUE=$S(X="dc":"D",X="canc":"C",X="laps":"C",X="dc/e":"R",X="comp":"E",X="exp":"E",X="hold":"H",X="part":"A",1:"IP")
"KRN",1.5,56,1,15,0)
PlacerId^1^I
"KRN",1.5,56,1,16,0)
EnteringOrganization^9^E^100^6^^1^VPR LOCATION
"KRN",1.5,56,1,16,4)
S:VALUE VALUE=+VALUE
"KRN",1.5,56,1,17,0)
FromTime^37^S^100^21^^1
"KRN",1.5,56,1,17,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,56,1,18,0)
ToTime^38^S^100^22^^1
"KRN",1.5,56,1,18,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,56,1,19,0)
UpdatedOn^50^S^100^31^^1
"KRN",1.5,56,1,19,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,56,1,20,0)
AuthorizationTime^26^S^100.008^6^^1
"KRN",1.5,56,1,20,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,56,1,20,6)
S IEN="1,"_DIEN
"KRN",1.5,56,1,21,0)
Extension^53^E^100^^^^VPR ORDER EXTENSION
"KRN",1.5,56,1,21,6)
S VALUE=DIEN
"KRN",1.5,56,1,"B","AuthorizationTime",20)

"KRN",1.5,56,1,"B","EnteredAt",1)

"KRN",1.5,56,1,"B","EnteredBy",2)

"KRN",1.5,56,1,"B","EnteredOn",3)

"KRN",1.5,56,1,"B","EnteringOrganization",16)

"KRN",1.5,56,1,"B","Extension",21)

"KRN",1.5,56,1,"B","FillerId",4)

"KRN",1.5,56,1,"B","FromTime",17)

"KRN",1.5,56,1,"B","OrderCategory",5)

"KRN",1.5,56,1,"B","OrderItem",6)

"KRN",1.5,56,1,"B","OrderedBy",7)

"KRN",1.5,56,1,"B","PlacerId",15)

"KRN",1.5,56,1,"B","Priority",9)

"KRN",1.5,56,1,"B","ResultCopiesTo",10)

"KRN",1.5,56,1,"B","Status",13)

"KRN",1.5,56,1,"B","ToTime",18)

"KRN",1.5,56,1,"B","UpdatedOn",19)

"KRN",1.5,56,1,"SEQ",1,15)

"KRN",1.5,56,1,"SEQ",3,4)

"KRN",1.5,56,1,"SEQ",5,6)

"KRN",1.5,56,1,"SEQ",6,5)

"KRN",1.5,56,1,"SEQ",8,7)

"KRN",1.5,56,1,"SEQ",9,16)

"KRN",1.5,56,1,"SEQ",18,13)

"KRN",1.5,56,1,"SEQ",19,9)

"KRN",1.5,56,1,"SEQ",26,20)

"KRN",1.5,56,1,"SEQ",29,10)

"KRN",1.5,56,1,"SEQ",34,2)

"KRN",1.5,56,1,"SEQ",35,1)

"KRN",1.5,56,1,"SEQ",36,3)

"KRN",1.5,56,1,"SEQ",37,17)

"KRN",1.5,56,1,"SEQ",38,18)

"KRN",1.5,56,1,"SEQ",50,19)

"KRN",1.5,56,1,"SEQ",53,21)

"KRN",1.5,56,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,56,3)
K VASITE
"KRN",1.5,56,5)
NONORD^VPRSDAQ
"KRN",1.5,56,19,0)
^^1^1^3181227^
"KRN",1.5,56,19,1,0)
This entity populates the Other Order container in HealthShare.
"KRN",1.5,57,-1)
0^24
"KRN",1.5,57,0)
VPR ORDER URGENCY^101.42^^^^S
"KRN",1.5,57,.1)
Priority
"KRN",1.5,57,1,0)
^1.51^3^3
"KRN",1.5,57,1,1,0)
Code^4^S^101.42^2
"KRN",1.5,57,1,2,0)
Description^5^S^101.42^.01
"KRN",1.5,57,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,57,1,3,2)
VA101.42
"KRN",1.5,57,1,"B","Code",1)

"KRN",1.5,57,1,"B","Description",2)

"KRN",1.5,57,1,"B","SDACodingStandard",3)

"KRN",1.5,57,1,"SEQ",1,3)

"KRN",1.5,57,1,"SEQ",4,1)

"KRN",1.5,57,1,"SEQ",5,2)

"KRN",1.5,58,-1)
0^38
"KRN",1.5,58,0)
VPR RAD RESULT^70.03^^^^S
"KRN",1.5,58,.1)
Result
"KRN",1.5,58,1,0)
^1.51^16^16
"KRN",1.5,58,1,1,0)
Extension^3^E^70.03^17^^1^VPR RAD RESULT EXTENSION
"KRN",1.5,58,1,1,6)
S VALUE=$G(RARPT) S:'VALUE DDEOUT=1
"KRN",1.5,58,1,2,0)
ResultType^4^F
"KRN",1.5,58,1,2,2)
IM
"KRN",1.5,58,1,3,0)
VerifiedBy^6^E^70.03^15^^1^VPR PROVIDER
"KRN",1.5,58,1,3,6)
S VALUE=+$G(@VPRAE2@("V")) S:VALUE<1 DDEOUT=1
"KRN",1.5,58,1,4,0)
ResultTime^7^S^70.03^17^8^1
"KRN",1.5,58,1,4,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,58,1,5,0)
ResultStatus^8^S^70.03^17^5^
"KRN",1.5,58,1,5,4)
S VALUE=$S(VALUE["Draft":"P",VALUE="Deleted":"X",VALUE["Released/Not":"P",VALUE="No Report":"S",1:"F")
"KRN",1.5,58,1,5,6)
S VALUE=$P(@VPRAE2,U)
"KRN",1.5,58,1,6,0)
ResultText^9^W^70.03^17^200^^^1
"KRN",1.5,58,1,6,6)
M WP=@VPRAE2@("R")
"KRN",1.5,58,1,7,0)
FileType^10^F
"KRN",1.5,58,1,7,2)
TXT
"KRN",1.5,58,1,8,0)
DocumentName^11^S^70.03
"KRN",1.5,58,1,8,6)
S VALUE=$P(VPRAE1,U)
"KRN",1.5,58,1,9,0)
DocumentNumber^14^S^70.03^17^^1
"KRN",1.5,58,1,9,6)
S VALUE=RARPT_";RA"
"KRN",1.5,58,1,10,0)
AuthorizationTime^16^S^70.03^17^7^1
"KRN",1.5,58,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,58,1,11,0)
PerformedAt^17^E^70.03^^^^VPR FACILITY
"KRN",1.5,58,1,11,6)
N IMG,HLOC S IMG=$P(VPRAE1,U,7) S:$L(IMG) HLOC=+$O(^SC("B",IMG,0)),VALUE=$$GET1^DIQ(44,HLOC_",",3,"I")
"KRN",1.5,58,1,12,0)
ResultInterpretation^18^S^70.03
"KRN",1.5,58,1,12,6)
S VALUE=$S($P(VPRAE1,U,4)="Y":1,$P(VPRAE1,U,9)="Y":1,1:"") S:VALUE VALUE="A" ;Abnormal
"KRN",1.5,58,1,13,0)
EnteredBy^21^E^70.03^17^11^1^VPR USER
"KRN",1.5,58,1,14,0)
EnteredAt^22^E^70.03^^^^VPR FACILITY
"KRN",1.5,58,1,14,6)
N IMG,HLOC S IMG=$P(VPRAE1,U,7) S:$L(IMG) HLOC=+$O(^SC("B",IMG,0)),VALUE=$$GET1^DIQ(44,HLOC_",",3,"I") S:'$G(VALUE) VALUE=$G(VASITE)
"KRN",1.5,58,1,15,0)
EnteredOn^23^S^70.03^17^6^1
"KRN",1.5,58,1,15,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,58,1,16,0)
FromTime^1^S^70.03
"KRN",1.5,58,1,16,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,58,1,16,6)
S VALUE=9999999.9999-$P(DIEN,",",2)
"KRN",1.5,58,1,"B","AuthorizationTime",10)

"KRN",1.5,58,1,"B","DocumentName",8)

"KRN",1.5,58,1,"B","DocumentNumber",9)

"KRN",1.5,58,1,"B","EnteredAt",14)

"KRN",1.5,58,1,"B","EnteredBy",13)

"KRN",1.5,58,1,"B","EnteredOn",15)

"KRN",1.5,58,1,"B","Extension",1)

"KRN",1.5,58,1,"B","FileType",7)

"KRN",1.5,58,1,"B","FromTime",16)

"KRN",1.5,58,1,"B","PerformedAt",11)

"KRN",1.5,58,1,"B","ResultInterpretation",12)

"KRN",1.5,58,1,"B","ResultStatus",5)

"KRN",1.5,58,1,"B","ResultText",6)

"KRN",1.5,58,1,"B","ResultTime",4)

"KRN",1.5,58,1,"B","ResultType",2)

"KRN",1.5,58,1,"B","VerifiedBy",3)

"KRN",1.5,58,1,"SEQ",1,16)

"KRN",1.5,58,1,"SEQ",3,1)

"KRN",1.5,58,1,"SEQ",4,2)

"KRN",1.5,58,1,"SEQ",6,3)

"KRN",1.5,58,1,"SEQ",7,4)

"KRN",1.5,58,1,"SEQ",8,5)

"KRN",1.5,58,1,"SEQ",9,6)

"KRN",1.5,58,1,"SEQ",10,7)

"KRN",1.5,58,1,"SEQ",11,8)

"KRN",1.5,58,1,"SEQ",14,9)

"KRN",1.5,58,1,"SEQ",16,10)

"KRN",1.5,58,1,"SEQ",17,11)

"KRN",1.5,58,1,"SEQ",18,12)

"KRN",1.5,58,1,"SEQ",21,13)

"KRN",1.5,58,1,"SEQ",22,14)

"KRN",1.5,58,1,"SEQ",23,15)

"KRN",1.5,58,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,58,3)
K VASITE
"KRN",1.5,58,4)
D ONE^VPRSDAR
"KRN",1.5,59,-1)
0^1
"KRN",1.5,59,0)
VPR ADVANCE DIRECTIVE^8925^^^^S
"KRN",1.5,59,.1)
AdvanceDirective
"KRN",1.5,59,1,0)
^1.51^14^10
"KRN",1.5,59,1,2,0)
AlertType^4^E^8925^.04^^1^VPR CODE TABLE
"KRN",1.5,59,1,2,6)
S VALUE="AD^ADVANCE DIRECTIVE"
"KRN",1.5,59,1,3,0)
Alert^5^E^8925^.01^^1^VPR DOCUMENT TITLE
"KRN",1.5,59,1,3,6)
S VALUE=$G(VPRTIU(DIEN,.01,"I"))
"KRN",1.5,59,1,4,0)
Comments^6^W^8925^2
"KRN",1.5,59,1,4,6)
M WP=VPRTIU(DIEN,"TEXT")
"KRN",1.5,59,1,5,0)
Status^7^F^8925^^^
"KRN",1.5,59,1,5,4)

"KRN",1.5,59,1,5,6)
S VALUE=$P($G(VPRADV),U,2)
"KRN",1.5,59,1,6,0)
EnteredBy^8^E^8925^1302^^1^VPR USER
"KRN",1.5,59,1,6,6)
S VALUE=$G(VPRTIU(DIEN,1202,"I"))
"KRN",1.5,59,1,7,0)
EnteredAt^9^E^8925^1212^^1^VPR FACILITY
"KRN",1.5,59,1,7,6)
S VALUE=$G(VPRTIU(DIEN,1212,"I")) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,59,1,8,0)
EnteredOn^10^S^8925^1201^^1
"KRN",1.5,59,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,59,1,8,6)
S VALUE=$G(VPRTIU(DIEN,1201,"I"))
"KRN",1.5,59,1,9,0)
FromTime^11^S^8925^1301^^1
"KRN",1.5,59,1,9,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,59,1,9,6)
S VALUE=$G(VPRTIU(DIEN,1301,"I"))
"KRN",1.5,59,1,13,0)
ToTime^12^S^8925
"KRN",1.5,59,1,13,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,59,1,13,6)
S VALUE=$P($G(VPRADV),U,3)
"KRN",1.5,59,1,14,0)
ExternalId^13^I
"KRN",1.5,59,1,14,4)
S VALUE=VALUE_";TIU(8925,"
"KRN",1.5,59,1,"B","Alert",3)

"KRN",1.5,59,1,"B","AlertType",2)

"KRN",1.5,59,1,"B","Comments",4)

"KRN",1.5,59,1,"B","EnteredAt",7)

"KRN",1.5,59,1,"B","EnteredBy",6)

"KRN",1.5,59,1,"B","EnteredOn",8)

"KRN",1.5,59,1,"B","ExternalId",14)

"KRN",1.5,59,1,"B","FromTime",9)

"KRN",1.5,59,1,"B","Status",5)

"KRN",1.5,59,1,"B","ToTime",13)

"KRN",1.5,59,1,"SEQ",4,2)

"KRN",1.5,59,1,"SEQ",5,3)

"KRN",1.5,59,1,"SEQ",6,4)

"KRN",1.5,59,1,"SEQ",7,5)

"KRN",1.5,59,1,"SEQ",8,6)

"KRN",1.5,59,1,"SEQ",9,7)

"KRN",1.5,59,1,"SEQ",10,8)

"KRN",1.5,59,1,"SEQ",11,9)

"KRN",1.5,59,1,"SEQ",12,13)

"KRN",1.5,59,1,"SEQ",13,14)

"KRN",1.5,59,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,59,3)
K VPRTIU,VPRADV,^TMP("TIUPPCV",$J),VASITE
"KRN",1.5,59,4)
D AD^VPRSDA(.DIEN)
"KRN",1.5,59,5)
ADVDIR^VPRSDAQ
"KRN",1.5,59,19,0)
^^1^1^3181227^
"KRN",1.5,59,19,1,0)
This entity populates the Advance Directive container in HealthShare.
"KRN",1.5,60,-1)
0^115
"KRN",1.5,60,0)
VPR DOCUMENT TITLE^8926.1^^^^S
"KRN",1.5,60,.1)
NationalTitle
"KRN",1.5,60,1,0)
^1.51^4^4
"KRN",1.5,60,1,1,0)
Code^6^I
"KRN",1.5,60,1,1,6)
S VALUE=$P($G(DATA),U)
"KRN",1.5,60,1,2,0)
Description^7^S^8926.1^.01
"KRN",1.5,60,1,2,6)
S VALUE=$P($G(DATA),U,2)
"KRN",1.5,60,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,60,1,3,2)
VA8926.1
"KRN",1.5,60,1,3,6)
S VALUE=$P($G(DATA),U,3)
"KRN",1.5,60,1,4,0)
OriginalText^3^F
"KRN",1.5,60,1,4,6)
S VALUE=$G(TIUTTL)
"KRN",1.5,60,1,"B","Code",1)

"KRN",1.5,60,1,"B","Description",2)

"KRN",1.5,60,1,"B","OriginalText",4)

"KRN",1.5,60,1,"B","SDACodingStandard",3)

"KRN",1.5,60,1,"SEQ",1,3)

"KRN",1.5,60,1,"SEQ",3,4)

"KRN",1.5,60,1,"SEQ",6,1)

"KRN",1.5,60,1,"SEQ",7,2)

"KRN",1.5,60,2)
D TIULNC^VPRSDA(.ID) ;ID=#8925.1 ien
"KRN",1.5,60,3)
K TIUTTL
"KRN",1.5,60,19,0)
^^3^3^3180611^
"KRN",1.5,60,19,1,0)
This entity supports VPR ADVANCE DIRECTIVE, VPR CW NOTES, and VPR DOCUMENT
"KRN",1.5,60,19,2,0)
EXTENSION. It expects a TIU Document Type #8925.1 ien, and converts that
"KRN",1.5,60,19,3,0)
to a National Title #8926.1 ien to extract a record.
"KRN",1.5,61,-1)
0^4
"KRN",1.5,61,0)
VPR APPOINTMENT^2.98^^^^S
"KRN",1.5,61,.1)
Appointment
"KRN",1.5,61,1,0)
^1.51^14^12
"KRN",1.5,61,1,2,0)
Extension^2^E^2.98^^^^VPR APPOINTMENT EXTENSION
"KRN",1.5,61,1,2,6)
S VALUE=DIEN
"KRN",1.5,61,1,3,0)
Status^4^S^2.98^3
"KRN",1.5,61,1,3,6)
S VALUE=$P($P($G(VPRAPPT),U,3),";",2)
"KRN",1.5,61,1,4,0)
NoShow^5^S^2.98^3^^1
"KRN",1.5,61,1,4,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,61,1,4,6)
S VALUE=($P($G(VPRAPPT),U,3)?1"NS".E)
"KRN",1.5,61,1,5,0)
Type^6^E^2.98^9.5^^1^VPR CODE TABLE
"KRN",1.5,61,1,5,4)
S $P(VALUE,U,3)="VA409.1"
"KRN",1.5,61,1,5,6)
S VALUE=$TR($P($G(VPRAPPT),U,10),";","^")
"KRN",1.5,61,1,6,0)
FillerApptId^8^I
"KRN",1.5,61,1,8,0)
Location^13^E^2.98^.01^^1^VPR LOCATION
"KRN",1.5,61,1,8,6)
S VALUE=+$P($G(VPRAPPT),U,2)
"KRN",1.5,61,1,9,0)
EnteredBy^15^E^2.98^19^^1^VPR USER
"KRN",1.5,61,1,10,0)
EnteredAt^16^E^2.98^.01^3^1^VPR FACILITY
"KRN",1.5,61,1,10,6)
S VALUE=$$GET1^DIQ(44,+$P(VPRAPPT,U,2)_",",3,"I") S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,61,1,11,0)
EnteredOn^17^S^2.98^20^^1
"KRN",1.5,61,1,11,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,61,1,12,0)
FromTime^18^S^2.98^.001
"KRN",1.5,61,1,12,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,61,1,12,6)
S VALUE=+$G(VPRAPPT)
"KRN",1.5,61,1,13,0)
ToTime^19^S^2.98^15^^1
"KRN",1.5,61,1,13,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,61,1,13,6)
S VALUE=$P($G(VPRAPPT),U,11) I VALUE="",$P(VPRAPPT,U,3)["NS" S VALUE=$$GET1^DIQ(2.98,DIEN_",",15,"I")
"KRN",1.5,61,1,14,0)
PlacerApptId^7^F
"KRN",1.5,61,1,14,6)
S VALUE="A;"_+$G(VPRAPPT)_";"_+$P($G(VPRAPPT),U,2)
"KRN",1.5,61,1,"B","EnteredAt",10)

"KRN",1.5,61,1,"B","EnteredBy",9)

"KRN",1.5,61,1,"B","EnteredOn",11)

"KRN",1.5,61,1,"B","Extension",2)

"KRN",1.5,61,1,"B","FillerApptId",6)

"KRN",1.5,61,1,"B","FromTime",12)

"KRN",1.5,61,1,"B","Location",8)

"KRN",1.5,61,1,"B","NoShow",4)

"KRN",1.5,61,1,"B","PlacerApptId",14)

"KRN",1.5,61,1,"B","Status",3)

"KRN",1.5,61,1,"B","ToTime",13)

"KRN",1.5,61,1,"B","Type",5)

"KRN",1.5,61,1,"SEQ",2,2)

"KRN",1.5,61,1,"SEQ",4,3)

"KRN",1.5,61,1,"SEQ",5,4)

"KRN",1.5,61,1,"SEQ",6,5)

"KRN",1.5,61,1,"SEQ",7,14)

"KRN",1.5,61,1,"SEQ",8,6)

"KRN",1.5,61,1,"SEQ",13,8)

"KRN",1.5,61,1,"SEQ",15,9)

"KRN",1.5,61,1,"SEQ",16,10)

"KRN",1.5,61,1,"SEQ",17,11)

"KRN",1.5,61,1,"SEQ",18,12)

"KRN",1.5,61,1,"SEQ",19,13)

"KRN",1.5,61,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,61,3)
K ^TMP($J,"SDAMA301"),VPRAPPT,VASITE
"KRN",1.5,61,4)
D APPT1^VPRSDA(DIEN)
"KRN",1.5,61,5)
APPTS^VPRSDAQ
"KRN",1.5,61,19,0)
^^1^1^3181227^
"KRN",1.5,61,19,1,0)
This entity populates the Appointment container in HealthShare.
"KRN",1.5,62,-1)
0^98
"KRN",1.5,62,0)
VPR VITAL MEASUREMENT^120.5^^^^S
"KRN",1.5,62,.1)
Observation
"KRN",1.5,62,1,0)
^1.51^12^10
"KRN",1.5,62,1,2,0)
Extension^6^E^120.5^^^^VPR VITAL EXTENSION
"KRN",1.5,62,1,2,6)
S VALUE=DIEN
"KRN",1.5,62,1,3,0)
ObservationTime^7^S^120.5^.01^^1
"KRN",1.5,62,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,62,1,3,6)
S VALUE=$P($G(VPRGMV),U)
"KRN",1.5,62,1,4,0)
ObservationCode^8^E^120.5^.03^^1^VPR VITAL TYPE
"KRN",1.5,62,1,4,6)
S VALUE=$P($G(VPRGMV),U,3)
"KRN",1.5,62,1,5,0)
ObservationValue^9^S^120.5^1.2
"KRN",1.5,62,1,5,6)
S VALUE=$P($G(VPRGMV),U,8)
"KRN",1.5,62,1,7,0)
GroupId^15^S^120.5^.01^^1
"KRN",1.5,62,1,7,6)
S VALUE=$P($G(VPRGMV),U)
"KRN",1.5,62,1,8,0)
ObservationMethods^16^L^120.505^^^^VPR VITAL QUALIFIER
"KRN",1.5,62,1,8,1)
4^ObservationMethod
"KRN",1.5,62,1,8,6)
D VITQUAL^VPRSDA
"KRN",1.5,62,1,9,0)
EnteredBy^18^E^120.5^.06^^1^VPR USER
"KRN",1.5,62,1,9,6)
S VALUE=$P($G(VPRGMV),U,6)
"KRN",1.5,62,1,10,0)
EnteredAt^19^E^120.5^.05^3^1^VPR FACILITY
"KRN",1.5,62,1,10,6)
N HLOC S HLOC=+$P($G(VPRGMV),U,5),VALUE=$$GET1^DIQ(44,HLOC,3,"I") S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,62,1,11,0)
EnteredOn^20^S^120.5^.04^^1
"KRN",1.5,62,1,11,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,62,1,11,6)
S VALUE=$P($G(VPRGMV),U,4)
"KRN",1.5,62,1,12,0)
ExternalId^4^I
"KRN",1.5,62,1,"B","EnteredAt",10)

"KRN",1.5,62,1,"B","EnteredBy",9)

"KRN",1.5,62,1,"B","EnteredOn",11)

"KRN",1.5,62,1,"B","Extension",2)

"KRN",1.5,62,1,"B","ExternalId",12)

"KRN",1.5,62,1,"B","GroupId",7)

"KRN",1.5,62,1,"B","ObservationCode",4)

"KRN",1.5,62,1,"B","ObservationMethods",8)

"KRN",1.5,62,1,"B","ObservationTime",3)

"KRN",1.5,62,1,"B","ObservationValue",5)

"KRN",1.5,62,1,"SEQ",4,12)

"KRN",1.5,62,1,"SEQ",6,2)

"KRN",1.5,62,1,"SEQ",7,3)

"KRN",1.5,62,1,"SEQ",8,4)

"KRN",1.5,62,1,"SEQ",9,5)

"KRN",1.5,62,1,"SEQ",15,7)

"KRN",1.5,62,1,"SEQ",16,8)

"KRN",1.5,62,1,"SEQ",18,9)

"KRN",1.5,62,1,"SEQ",19,10)

"KRN",1.5,62,1,"SEQ",20,11)

"KRN",1.5,62,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,62,3)
K VPRV,VPRGMV,^TMP("VPRGMV",$J),VPRANGE,VPRTYPE,VASITE
"KRN",1.5,62,4)
D VIT1^VPRSDA(DIEN)
"KRN",1.5,62,5)
VITALS^VPRSDAQ
"KRN",1.5,62,19,0)
^^1^1^3181227^
"KRN",1.5,62,19,1,0)
This entity populates the Observation container in HealthShare.
"KRN",1.5,63,-1)
0^45
"KRN",1.5,63,0)
VPR VITAL TYPE^120.51^^^^S
"KRN",1.5,63,.1)
ObservationCode
"KRN",1.5,63,1,0)
^1.51^4^4
"KRN",1.5,63,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,63,1,1,2)
VA120.51
"KRN",1.5,63,1,1,6)
S:$G(VPRVUID) VALUE="VHAT"
"KRN",1.5,63,1,2,0)
Code^6^I^120.51^
"KRN",1.5,63,1,2,6)
S:$G(VPRVUID) VALUE=VPRVUID
"KRN",1.5,63,1,3,0)
Description^7^S^120.51^.01
"KRN",1.5,63,1,3,6)
S VALUE=$$FIELD^GMVGETVT(IEN,1)
"KRN",1.5,63,1,4,0)
ObservationValueUnits^8^E^120.51^^^^VPR CODE TABLE
"KRN",1.5,63,1,4,4)
S VALUE=$S(VALUE="F":"[degF]",VALUE="in":"[in_us]",VALUE="lb":"[lb_av]",1:VALUE)_"^^UCUM"
"KRN",1.5,63,1,4,6)
N TYPE S TYPE=$G(VPRTYPE),VALUE=$$UNIT^VPRDGMV(TYPE),DATA=VALUE S:VALUE="" DDEOUT=1
"KRN",1.5,63,1,"B","Code",2)

"KRN",1.5,63,1,"B","Description",3)

"KRN",1.5,63,1,"B","ObservationValueUnits",4)

"KRN",1.5,63,1,"B","SDACodingStandard",1)

"KRN",1.5,63,1,"SEQ",1,1)

"KRN",1.5,63,1,"SEQ",6,2)

"KRN",1.5,63,1,"SEQ",7,3)

"KRN",1.5,63,1,"SEQ",8,4)

"KRN",1.5,63,3)
K VPRVUID
"KRN",1.5,63,4)
S VPRVUID=$$VUID^VPRD(+DIEN,120.51)
"KRN",1.5,64,-1)
0^95
"KRN",1.5,64,0)
VPR V EXAM^9000010.13^^^^S
"KRN",1.5,64,.1)
PhysicalExam
"KRN",1.5,64,1,0)
^1.51^9^9
"KRN",1.5,64,1,1,0)
EncounterNumber^5^S^9000010.13^.03^^1
"KRN",1.5,64,1,1,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,64,1,1,6)
S VALUE=$G(VPRVST)
"KRN",1.5,64,1,2,0)
ExternalId^4^I^
"KRN",1.5,64,1,3,0)
PhysExamTime^7^S^9000010.13^1201^^1
"KRN",1.5,64,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,64,1,3,6)
S VALUE=$G(VPRXM("EVENT DATE AND TIME"))
"KRN",1.5,64,1,4,0)
PhysExamCode^8^E^9000010.13^.01^^1^VPR EXAM
"KRN",1.5,64,1,4,6)
S VALUE=$P(VPRXM,U,2)
"KRN",1.5,64,1,5,0)
PhysExamObsValue^11^E^9000010.13^.04^^1^VPR CODE TABLE
"KRN",1.5,64,1,5,6)
S VALUE=$G(VPRXM("VALUE"))
"KRN",1.5,64,1,6,0)
NoteText^12^S^9000010.13^81101
"KRN",1.5,64,1,6,6)
S VALUE=$G(VPRXM("COMMENTS"))
"KRN",1.5,64,1,7,0)
EnteredBy^14^E^9000010.13^.03^.23^1^VPR USER
"KRN",1.5,64,1,7,6)
S VALUE=$P(VPRVST0,U,23)
"KRN",1.5,64,1,8,0)
EnteredAt^15^E^9000010.13^.03^.06^1^VPR FACILITY
"KRN",1.5,64,1,8,6)
S VALUE=$P(VPRVST0,U,6) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,64,1,9,0)
EnteredOn^16^S^9000010.13^.03^.02^1
"KRN",1.5,64,1,9,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,64,1,9,6)
S VALUE=$P(VPRVST0,U,2)
"KRN",1.5,64,1,"B","EncounterNumber",1)

"KRN",1.5,64,1,"B","EnteredAt",8)

"KRN",1.5,64,1,"B","EnteredBy",7)

"KRN",1.5,64,1,"B","EnteredOn",9)

"KRN",1.5,64,1,"B","ExternalId",2)

"KRN",1.5,64,1,"B","NoteText",6)

"KRN",1.5,64,1,"B","PhysExamCode",4)

"KRN",1.5,64,1,"B","PhysExamObsValue",5)

"KRN",1.5,64,1,"B","PhysExamTime",3)

"KRN",1.5,64,1,"SEQ",4,2)

"KRN",1.5,64,1,"SEQ",5,1)

"KRN",1.5,64,1,"SEQ",7,3)

"KRN",1.5,64,1,"SEQ",8,4)

"KRN",1.5,64,1,"SEQ",11,5)

"KRN",1.5,64,1,"SEQ",12,6)

"KRN",1.5,64,1,"SEQ",14,7)

"KRN",1.5,64,1,"SEQ",15,8)

"KRN",1.5,64,1,"SEQ",16,9)

"KRN",1.5,64,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,64,3)
K VPRXM,VPRVST,VPRVST0,VASITE
"KRN",1.5,64,4)
K VPRXM D:$D(^AUPNVXAM(+DIEN)) VXAM^PXPXRM(+DIEN,.VPRXM) S VPRVST=$G(VPRXM("VISIT")),VPRXM=DIEN,DIEN=+DIEN,VPRVST0=$G(^AUPNVSIT(+VPRVST,0))
"KRN",1.5,64,5)
EXAMS^VPRSDAQ
"KRN",1.5,64,19,0)
^^1^1^3181227^
"KRN",1.5,64,19,1,0)
This entity populates the Physical Exam container in HealthShare.
"KRN",1.5,65,-1)
0^10
"KRN",1.5,65,0)
VPR EXAM^9999999.15^^^^S
"KRN",1.5,65,.1)
PhysExamCode
"KRN",1.5,65,1,0)
^1.51^3^3
"KRN",1.5,65,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,65,1,1,2)
VA9999999.15
"KRN",1.5,65,1,2,0)
Code^6^I
"KRN",1.5,65,1,3,0)
Description^7^S^9999999.15^.01
"KRN",1.5,65,1,"B","Code",2)

"KRN",1.5,65,1,"B","Description",3)

"KRN",1.5,65,1,"B","SDACodingStandard",1)

"KRN",1.5,65,1,"SEQ",1,1)

"KRN",1.5,65,1,"SEQ",6,2)

"KRN",1.5,65,1,"SEQ",7,3)

"KRN",1.5,66,-1)
0^12
"KRN",1.5,66,0)
VPR FAMILY HISTORY^9000010.23^^^^S
"KRN",1.5,66,.1)
FamilyHistory
"KRN",1.5,66,1,0)
^1.51^10^9
"KRN",1.5,66,1,1,0)
EncounterNumber^2^S^9000010.23^.03^^1
"KRN",1.5,66,1,1,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,66,1,1,6)
S VALUE=$G(VPRVST)
"KRN",1.5,66,1,3,0)
Diagnosis^6^E^9000010.23^.01^^1^VPR HEALTH FACTOR
"KRN",1.5,66,1,3,6)
S VALUE=$P(VPRHF,U,2)
"KRN",1.5,66,1,4,0)
NoteText^7^S^9000010.23^81101
"KRN",1.5,66,1,4,6)
S VALUE=$G(VPRHF("COMMENTS"))
"KRN",1.5,66,1,5,0)
EnteredBy^10^E^9000010.23^.03^.23^1^VPR USER
"KRN",1.5,66,1,5,6)
S VALUE=$P(VPRVST0,U,23)
"KRN",1.5,66,1,6,0)
EnteredAt^11^E^9000010.23^.03^.06^1^VPR FACILITY
"KRN",1.5,66,1,6,6)
S VALUE=$P(VPRVST0,U,6) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,66,1,7,0)
EnteredOn^12^S^9000010.23^.03^.02^1
"KRN",1.5,66,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,66,1,7,6)
S VALUE=$P(VPRVST0,U,2)
"KRN",1.5,66,1,8,0)
FamilyMember^5^E^9000010.23^^^^VPR CODE TABLE
"KRN",1.5,66,1,8,6)
S VALUE="UNK^UNKNOWN"
"KRN",1.5,66,1,9,0)
ExternalId^15^I
"KRN",1.5,66,1,9,4)
S VALUE=VALUE_";HF"
"KRN",1.5,66,1,10,0)
CustomPairs^3^L^^^^^VPR CUSTOM PAIR
"KRN",1.5,66,1,10,1)
4
"KRN",1.5,66,1,10,6)
N X S X=$G(VPRHF("VALUE")) I $L(X) S DLIST(1)="Severity^"_$$EXTERNAL^DILFD(9000010.23,.04,,X)
"KRN",1.5,66,1,"B","CustomPairs",10)

"KRN",1.5,66,1,"B","Diagnosis",3)

"KRN",1.5,66,1,"B","EncounterNumber",1)

"KRN",1.5,66,1,"B","EnteredAt",6)

"KRN",1.5,66,1,"B","EnteredBy",5)

"KRN",1.5,66,1,"B","EnteredOn",7)

"KRN",1.5,66,1,"B","ExternalId",9)

"KRN",1.5,66,1,"B","FamilyMember",8)

"KRN",1.5,66,1,"B","NoteText",4)

"KRN",1.5,66,1,"SEQ",2,1)

"KRN",1.5,66,1,"SEQ",3,10)

"KRN",1.5,66,1,"SEQ",5,8)

"KRN",1.5,66,1,"SEQ",6,3)

"KRN",1.5,66,1,"SEQ",7,4)

"KRN",1.5,66,1,"SEQ",10,5)

"KRN",1.5,66,1,"SEQ",11,6)

"KRN",1.5,66,1,"SEQ",12,7)

"KRN",1.5,66,1,"SEQ",15,9)

"KRN",1.5,66,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,66,3)
K VPRHF,VPRVST,VPRVST0,VASITE
"KRN",1.5,66,4)
K VPRHF D:$D(^AUPNVHF(+DIEN)) VHF^PXPXRM(+DIEN,.VPRHF) S VPRVST=$G(VPRHF("VISIT")),VPRHF=DIEN,DIEN=+DIEN,VPRVST0=$G(^AUPNVSIT(+VPRVST,0))
"KRN",1.5,66,5)
HFM^VPRSDAQ
"KRN",1.5,66,19,0)
^^2^2^3181227^
"KRN",1.5,66,19,1,0)
This entity populates the Family History container in HealthShare with 
"KRN",1.5,66,19,2,0)
Health Factors that contain "Family History" or "Family Hx".
"KRN",1.5,67,-1)
0^13
"KRN",1.5,67,0)
VPR HEALTH FACTOR^9999999.64^^^^S
"KRN",1.5,67,.1)
DiagnosisCode
"KRN",1.5,67,1,0)
^1.51^3^3
"KRN",1.5,67,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,67,1,1,2)
VA9999999.64
"KRN",1.5,67,1,2,0)
Code^6^I^9999999.64
"KRN",1.5,67,1,3,0)
Description^7^S^9999999.64^.01
"KRN",1.5,67,1,"B","Code",2)

"KRN",1.5,67,1,"B","Description",3)

"KRN",1.5,67,1,"B","SDACodingStandard",1)

"KRN",1.5,67,1,"SEQ",1,1)

"KRN",1.5,67,1,"SEQ",6,2)

"KRN",1.5,67,1,"SEQ",7,3)

"KRN",1.5,68,-1)
0^41
"KRN",1.5,68,0)
VPR SOCIAL HISTORY^9000010.23^^^^S
"KRN",1.5,68,.1)
SocialHistory
"KRN",1.5,68,1,0)
^1.51^9^8
"KRN",1.5,68,1,1,0)
EncounterNumber^2^S^9000010.23^.03^^1
"KRN",1.5,68,1,1,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,68,1,1,6)
S VALUE=$G(VPRVST)
"KRN",1.5,68,1,3,0)
SocialHabit^5^E^9000010.23^.01^^^VPR CODE TABLE
"KRN",1.5,68,1,3,4)
S VALUE=VALUE_"^^VHAT"
"KRN",1.5,68,1,3,6)
S:$P(VPRHF,U,2) VALUE=$P($G(^AUTTHF(+$P(VPRHF,U,2),0)),U)
"KRN",1.5,68,1,4,0)
SocialHabitCategory^7^E^9000010.23^.01^.03^1^VPR HEALTH FACTOR
"KRN",1.5,68,1,4,6)
S:$P(VPRHF,U,2) VALUE=$P($G(^AUTTHF(+$P(VPRHF,U,2),0)),U,3)
"KRN",1.5,68,1,5,0)
SocialHabitComments^8^S^9000010.23^81101
"KRN",1.5,68,1,5,6)
S VALUE=$G(VPRHF("COMMENTS"))
"KRN",1.5,68,1,6,0)
EnteredBy^10^E^9000010.23^.03^.23^1^VPR USER
"KRN",1.5,68,1,6,6)
S VALUE=$P(VPRVST0,U,23)
"KRN",1.5,68,1,7,0)
EnteredAt^11^E^9000010.23^.03^.06^1^VPR FACILITY
"KRN",1.5,68,1,7,6)
S VALUE=$P(VPRVST0,U,6) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,68,1,8,0)
EnteredOn^12^S^9000010.23^.03^.02^1
"KRN",1.5,68,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,68,1,8,6)
S VALUE=$P(VPRVST0,U,2)
"KRN",1.5,68,1,9,0)
CustomPairs^3^L^^^^^VPR CUSTOM PAIR
"KRN",1.5,68,1,9,1)
4
"KRN",1.5,68,1,9,6)
N X S X=$G(VPRHF("VALUE")) I $L(X) S DLIST(1)="Severity^"_$$EXTERNAL^DILFD(9000010.23,.04,,X)
"KRN",1.5,68,1,"B","CustomPairs",9)

"KRN",1.5,68,1,"B","EncounterNumber",1)

"KRN",1.5,68,1,"B","EnteredAt",7)

"KRN",1.5,68,1,"B","EnteredBy",6)

"KRN",1.5,68,1,"B","EnteredOn",8)

"KRN",1.5,68,1,"B","SocialHabit",3)

"KRN",1.5,68,1,"B","SocialHabitCategory",4)

"KRN",1.5,68,1,"B","SocialHabitComments",5)

"KRN",1.5,68,1,"SEQ",2,1)

"KRN",1.5,68,1,"SEQ",3,9)

"KRN",1.5,68,1,"SEQ",5,3)

"KRN",1.5,68,1,"SEQ",7,4)

"KRN",1.5,68,1,"SEQ",8,5)

"KRN",1.5,68,1,"SEQ",10,6)

"KRN",1.5,68,1,"SEQ",11,7)

"KRN",1.5,68,1,"SEQ",12,8)

"KRN",1.5,68,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,68,3)
K VPRHF,VPRVST,VPRVST0,VASITE
"KRN",1.5,68,4)
K VPRHF D:$D(^AUPNVHF(+DIEN)) VHF^PXPXRM(+DIEN,.VPRHF) S VPRVST=$G(VPRHF("VISIT")),VPRHF=DIEN,DIEN=+DIEN,VPRVST0=$G(^AUPNVSIT(+VPRVST,0))
"KRN",1.5,68,5)
HFS^VPRSDAQ
"KRN",1.5,68,19,0)
^^2^2^3181227^
"KRN",1.5,68,19,1,0)
This entity populates the Social History container in HealthShare with 
"KRN",1.5,68,19,2,0)
smoking or tobacco related Health Factors.
"KRN",1.5,69,-1)
0^39
"KRN",1.5,69,0)
VPR REFERRAL^123^^^^S
"KRN",1.5,69,.1)
Referral
"KRN",1.5,69,1,0)
^1.51^16^16
"KRN",1.5,69,1,1,0)
EnteredBy^1^E^123^^^^VPR USER
"KRN",1.5,69,1,1,6)
S VALUE=+$P($G(^GMR(123,DIEN,40,1,0)),U,5)
"KRN",1.5,69,1,2,0)
EnteredAt^2^E^123^.05^^1^VPR FACILITY
"KRN",1.5,69,1,2,6)
S VALUE=$P($G(VPRCONS(0)),U,21) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,69,1,3,0)
UpdatedOn^3^S^123
"KRN",1.5,69,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,69,1,3,6)
S VALUE=$O(^GMR(123,DIEN,40,"B","A"),-1)
"KRN",1.5,69,1,4,0)
EncounterNumber^5^S^123^16^.03^1
"KRN",1.5,69,1,4,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,69,1,4,6)
N TIU,VPRT S TIU=$P($G(VPRCONS(0)),U,20) I TIU D EXTRACT^TIULQ(TIU,"VPRT",,.03,,,"I") S VALUE=$G(VPRT(TIU,.03,"I"))
"KRN",1.5,69,1,5,0)
Extension^6^E^123^^^^VPR REFERRAL EXTENSION
"KRN",1.5,69,1,5,6)
S VALUE=DIEN
"KRN",1.5,69,1,6,0)
PlacerId^7^S^123^.03^^1
"KRN",1.5,69,1,6,6)
S VALUE=$P($G(VPRCONS(0)),U,3)
"KRN",1.5,69,1,7,0)
FillerId^8^I
"KRN",1.5,69,1,8,0)
ReferralReason^9^W^123^20^^^^1
"KRN",1.5,69,1,8,6)
M WP=VPRCONS(20)
"KRN",1.5,69,1,9,0)
ReferringProvider^10^E^123^10^^1^VPR PROVIDER
"KRN",1.5,69,1,9,6)
S VALUE=$P($G(VPRCONS(0)),U,14)
"KRN",1.5,69,1,10,0)
ReferringOrganization^11^E^123^2^^1^VPR LOCATION
"KRN",1.5,69,1,10,6)
S VALUE=$P($G(VPRCONS(0)),U,6)
"KRN",1.5,69,1,11,0)
ReferredToProvider^12^E^123^7^^1^VPR PROVIDER
"KRN",1.5,69,1,11,6)
S VALUE=$P($G(VPRCONS(0)),U,11)
"KRN",1.5,69,1,12,0)
ReferredToOrganization^13^E^123^1^^1^VPR CONSULT SERVICE
"KRN",1.5,69,1,13,0)
EnteredOn^15^S^123^.01
"KRN",1.5,69,1,13,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,69,1,13,6)
S VALUE=$P($G(VPRCONS(0)),U)
"KRN",1.5,69,1,14,0)
FromTime^16^S^123^3^^1
"KRN",1.5,69,1,14,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,69,1,14,6)
S VALUE=$P($G(VPRCONS(0)),U,7)
"KRN",1.5,69,1,15,0)
ToTime^17^S^123^.03^22^1
"KRN",1.5,69,1,15,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,69,1,15,6)
N ORD S ORD=$P($G(VPRCONS(0)),U,3) S:ORD VALUE=$$GET1^DIQ(100,ORD,22,"I")
"KRN",1.5,69,1,16,0)
ExternalId^4^I
"KRN",1.5,69,1,"B","EncounterNumber",4)

"KRN",1.5,69,1,"B","EnteredAt",2)

"KRN",1.5,69,1,"B","EnteredBy",1)

"KRN",1.5,69,1,"B","EnteredOn",13)

"KRN",1.5,69,1,"B","Extension",5)

"KRN",1.5,69,1,"B","ExternalId",16)

"KRN",1.5,69,1,"B","FillerId",7)

"KRN",1.5,69,1,"B","FromTime",14)

"KRN",1.5,69,1,"B","PlacerId",6)

"KRN",1.5,69,1,"B","ReferralReason",8)

"KRN",1.5,69,1,"B","ReferredToOrganization",12)

"KRN",1.5,69,1,"B","ReferredToProvider",11)

"KRN",1.5,69,1,"B","ReferringOrganization",10)

"KRN",1.5,69,1,"B","ReferringProvider",9)

"KRN",1.5,69,1,"B","ToTime",15)

"KRN",1.5,69,1,"B","UpdatedOn",3)

"KRN",1.5,69,1,"SEQ",1,1)

"KRN",1.5,69,1,"SEQ",2,2)

"KRN",1.5,69,1,"SEQ",3,3)

"KRN",1.5,69,1,"SEQ",4,16)

"KRN",1.5,69,1,"SEQ",5,4)

"KRN",1.5,69,1,"SEQ",6,5)

"KRN",1.5,69,1,"SEQ",7,6)

"KRN",1.5,69,1,"SEQ",8,7)

"KRN",1.5,69,1,"SEQ",9,8)

"KRN",1.5,69,1,"SEQ",10,9)

"KRN",1.5,69,1,"SEQ",11,10)

"KRN",1.5,69,1,"SEQ",12,11)

"KRN",1.5,69,1,"SEQ",13,12)

"KRN",1.5,69,1,"SEQ",15,13)

"KRN",1.5,69,1,"SEQ",16,14)

"KRN",1.5,69,1,"SEQ",17,15)

"KRN",1.5,69,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,69,3)
K VPRCONS,VASITE
"KRN",1.5,69,4)
K VPRCONS D GET^GMRCAPI(.VPRCONS,DIEN)
"KRN",1.5,69,5)
CONSULTS^VPRSDAQ
"KRN",1.5,69,19,0)
^^1^1^3181227^
"KRN",1.5,69,19,1,0)
This entity populates the Referral container in HealthShare.
"KRN",1.5,70,-1)
0^5
"KRN",1.5,70,0)
VPR CONSULT SERVICE^123.5^^^^S
"KRN",1.5,70,.1)
HealthCareFacility
"KRN",1.5,70,1,0)
^1.51^5^5
"KRN",1.5,70,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,70,1,1,2)
VA123.5
"KRN",1.5,70,1,2,0)
Code^4^I
"KRN",1.5,70,1,3,0)
Description^5^S^123.5^.01
"KRN",1.5,70,1,4,0)
Organization^6^E^123.5^132^^1^VPR FACILITY
"KRN",1.5,70,1,4,6)
I '$G(^GMR(123.5,DIEN,"IFC")) S VALUE=$G(VASITE)
"KRN",1.5,70,1,5,0)
LocationType^7^F
"KRN",1.5,70,1,5,2)
DEPARTMENT
"KRN",1.5,70,1,"B","Code",2)

"KRN",1.5,70,1,"B","Description",3)

"KRN",1.5,70,1,"B","LocationType",5)

"KRN",1.5,70,1,"B","Organization",4)

"KRN",1.5,70,1,"B","SDACodingStandard",1)

"KRN",1.5,70,1,"SEQ",1,1)

"KRN",1.5,70,1,"SEQ",4,2)

"KRN",1.5,70,1,"SEQ",5,3)

"KRN",1.5,70,1,"SEQ",6,4)

"KRN",1.5,70,1,"SEQ",7,5)

"KRN",1.5,70,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,70,3)
K VASITE
"KRN",1.5,71,-1)
0^43
"KRN",1.5,71,0)
VPR SURGERY^130^^^^S
"KRN",1.5,71,.1)
Procedure
"KRN",1.5,71,1,0)
^1.51^12^10
"KRN",1.5,71,1,1,0)
FromTime^2^S^130^.09^^1
"KRN",1.5,71,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,71,1,1,6)
S VALUE=$P(VPRSR(DIEN),U,3)
"KRN",1.5,71,1,3,0)
EncounterNumber^4^S^8925^.03^^1
"KRN",1.5,71,1,3,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,71,1,3,6)
N I S I=+$O(VPRSR(DIEN,0)),IEN=+$G(VPRSR(DIEN,I)) S:IEN<1 DDEOUT=1 ;TIU ien
"KRN",1.5,71,1,4,0)
Extension^5^E^130^^^^VPR SURGERY EXTENSION
"KRN",1.5,71,1,4,6)
S VALUE=DIEN
"KRN",1.5,71,1,6,0)
Clinician^7^E^130^.14^^1^VPR PROVIDER
"KRN",1.5,71,1,6,6)
N X S X=+$P(VPRSR(DIEN),U,4) S:X VALUE=X
"KRN",1.5,71,1,7,0)
ProcedureTime^9^S^130^.09^^1
"KRN",1.5,71,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,71,1,7,6)
S VALUE=$P(VPRSR(DIEN),U,3)
"KRN",1.5,71,1,8,0)
EnteredBy^10^E^130^1.099^^1^VPR USER
"KRN",1.5,71,1,9,0)
EnteredAt^11^E^130^50^^1^VPR FACILITY
"KRN",1.5,71,1,9,6)
S VALUE=$G(VASITE)
"KRN",1.5,71,1,10,0)
EnteredOn^12^S^130^1.098^^1
"KRN",1.5,71,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,71,1,11,0)
Procedure^6^E^130^26^^^VPR CODE TABLE
"KRN",1.5,71,1,11,6)
D SRF^VPRSDA(DIEN)
"KRN",1.5,71,1,12,0)
ExternalId^13^I
"KRN",1.5,71,1,12,4)
S VALUE=VALUE_";SR"
"KRN",1.5,71,1,"B","Clinician",6)

"KRN",1.5,71,1,"B","EncounterNumber",3)

"KRN",1.5,71,1,"B","EnteredAt",9)

"KRN",1.5,71,1,"B","EnteredBy",8)

"KRN",1.5,71,1,"B","EnteredOn",10)

"KRN",1.5,71,1,"B","Extension",4)

"KRN",1.5,71,1,"B","ExternalId",12)

"KRN",1.5,71,1,"B","FromTime",1)

"KRN",1.5,71,1,"B","Procedure",11)

"KRN",1.5,71,1,"B","ProcedureTime",7)

"KRN",1.5,71,1,"SEQ",2,1)

"KRN",1.5,71,1,"SEQ",4,3)

"KRN",1.5,71,1,"SEQ",5,4)

"KRN",1.5,71,1,"SEQ",6,11)

"KRN",1.5,71,1,"SEQ",7,6)

"KRN",1.5,71,1,"SEQ",9,7)

"KRN",1.5,71,1,"SEQ",10,8)

"KRN",1.5,71,1,"SEQ",11,9)

"KRN",1.5,71,1,"SEQ",12,10)

"KRN",1.5,71,1,"SEQ",13,12)

"KRN",1.5,71,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,71,3)
K VPRSR,VASITE
"KRN",1.5,71,4)
D ONE^SROESTV("VPRSR",DIEN) S:'$D(VPRSR) VPRSR(DIEN)=""
"KRN",1.5,71,5)
SURGERYS^VPRSDAQ
"KRN",1.5,71,19,0)
^^1^1^3181227^
"KRN",1.5,71,19,1,0)
This entity populates the Procedure container in HealthShare.
"KRN",1.5,72,-1)
0^35
"KRN",1.5,72,0)
VPR PROCEDURE^702^^^^S
"KRN",1.5,72,.1)
Procedure
"KRN",1.5,72,1,0)
^1.51^11^10
"KRN",1.5,72,1,1,0)
FromTime^2^S^702^.06^70202^1
"KRN",1.5,72,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,72,1,1,6)
S VALUE=$P(VPRCP,U,6)
"KRN",1.5,72,1,3,0)
EncounterNumber^4^S^702^.06^.03^1
"KRN",1.5,72,1,3,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,72,1,3,6)
S VALUE=$G(VPRTIU(.03,"I"))
"KRN",1.5,72,1,4,0)
Extension^5^E^702^^^^VPR PROCEDURE EXTENSION
"KRN",1.5,72,1,4,6)
S VALUE=DIEN
"KRN",1.5,72,1,5,0)
Procedure^6^E^702^.04^^1^VPR CODE TABLE
"KRN",1.5,72,1,5,6)
N X S X=$$FIND1^DIC(702.01,,"QX",$P(VPRCP,U)) S:X VALUE=X_U_$P(VPRCP,U)_"^VA702.01"
"KRN",1.5,72,1,6,0)
Clinician^7^E^702^.06^1202^1^VPR PROVIDER
"KRN",1.5,72,1,6,6)
S VALUE=$G(VPRTIU(1202,"I"))
"KRN",1.5,72,1,7,0)
ProcedureTime^9^S^702^.06^70202^1
"KRN",1.5,72,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,72,1,7,6)
S VALUE=$P(VPRCP,U,6)
"KRN",1.5,72,1,8,0)
EnteredBy^10^E^702^.03^^1^VPR USER
"KRN",1.5,72,1,9,0)
EnteredAt^11^E^702^.06^1212^1^VPR FACILITY
"KRN",1.5,72,1,9,6)
S VALUE=$G(VPRTIU(1212,"I")) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,72,1,10,0)
EnteredOn^12^S^702^.02^^1
"KRN",1.5,72,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,72,1,11,0)
ExternalId^13^I
"KRN",1.5,72,1,11,4)
S VALUE=VALUE_";MD"
"KRN",1.5,72,1,"B","Clinician",6)

"KRN",1.5,72,1,"B","EncounterNumber",3)

"KRN",1.5,72,1,"B","EnteredAt",9)

"KRN",1.5,72,1,"B","EnteredBy",8)

"KRN",1.5,72,1,"B","EnteredOn",10)

"KRN",1.5,72,1,"B","Extension",4)

"KRN",1.5,72,1,"B","ExternalId",11)

"KRN",1.5,72,1,"B","FromTime",1)

"KRN",1.5,72,1,"B","Procedure",5)

"KRN",1.5,72,1,"B","ProcedureTime",7)

"KRN",1.5,72,1,"SEQ",2,1)

"KRN",1.5,72,1,"SEQ",4,3)

"KRN",1.5,72,1,"SEQ",5,4)

"KRN",1.5,72,1,"SEQ",6,5)

"KRN",1.5,72,1,"SEQ",7,6)

"KRN",1.5,72,1,"SEQ",9,7)

"KRN",1.5,72,1,"SEQ",10,8)

"KRN",1.5,72,1,"SEQ",11,9)

"KRN",1.5,72,1,"SEQ",12,10)

"KRN",1.5,72,1,"SEQ",13,11)

"KRN",1.5,72,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,72,3)
K ^TMP("MDHSP",$J),VPRCP,VPRCN,VPRTIU,VASITE
"KRN",1.5,72,4)
D CP1^VPRSDA(DIEN)
"KRN",1.5,72,5)
CPROCS^VPRSDAQ
"KRN",1.5,72,19,0)
^^1^1^3181227^
"KRN",1.5,72,19,1,0)
This entity populates the Procedure container in HealthShare.
"KRN",1.5,73,-1)
0^46
"KRN",1.5,73,0)
VPR V PROVIDER^9000010.06^AD
"KRN",1.5,73,.1)
CareProvider
"KRN",1.5,73,1,0)
^1.51^3^3
"KRN",1.5,73,1,1,0)
Code^4^S^9000010.06^.01^^1
"KRN",1.5,73,1,2,0)
Description^5^S^9000010.06^.01
"KRN",1.5,73,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,73,1,3,2)
VA200
"KRN",1.5,73,1,"B","Code",1)

"KRN",1.5,73,1,"B","Description",2)

"KRN",1.5,73,1,"B","SDACodingStandard",3)

"KRN",1.5,73,1,"SEQ",1,3)

"KRN",1.5,73,1,"SEQ",4,1)

"KRN",1.5,73,1,"SEQ",5,2)

"KRN",1.5,75,-1)
0^47
"KRN",1.5,75,0)
VPR VITAL QUALIFIER^120.52^^^^S
"KRN",1.5,75,.1)
ObservationMethods
"KRN",1.5,75,1,0)
^1.51^3^3
"KRN",1.5,75,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,75,1,1,2)
VA120.52
"KRN",1.5,75,1,1,6)
S:$G(VPRVUID) VALUE="VHAT"
"KRN",1.5,75,1,2,0)
Code^2^I^120.52^^^
"KRN",1.5,75,1,2,6)
S:$G(VPRVUID) VALUE=VPRVUID
"KRN",1.5,75,1,3,0)
Description^3^S^120.52^.01
"KRN",1.5,75,1,3,6)
S VALUE=$$FIELD^GMVGETQL(IEN,1)
"KRN",1.5,75,1,"B","Code",2)

"KRN",1.5,75,1,"B","Description",3)

"KRN",1.5,75,1,"B","SDACodingStandard",1)

"KRN",1.5,75,1,"SEQ",1,1)

"KRN",1.5,75,1,"SEQ",2,2)

"KRN",1.5,75,1,"SEQ",3,3)

"KRN",1.5,75,3)
K VPRVUID
"KRN",1.5,75,4)
S VPRVUID=$$VUID^VPRD(+DIEN,120.52)
"KRN",1.5,76,-1)
0^59
"KRN",1.5,76,0)
VPR PATIENT RECORD FLAG^26.13^^^^S
"KRN",1.5,76,.1)
Alert
"KRN",1.5,76,1,0)
^1.51^11^11
"KRN",1.5,76,1,1,0)
AlertType^4^E^26.13^^^^VPR CODE TABLE
"KRN",1.5,76,1,1,6)
S VALUE="PRF^PATIENT RECORD FLAG"
"KRN",1.5,76,1,2,0)
Alert^5^E^26.13^.02^^1^VPR CODE TABLE
"KRN",1.5,76,1,2,6)
N X S X=$G(VPRF1("FLAG")) S:X VALUE=+X_U_$P(X,U,2)_"^VA"_+$P(X,"(",2) S:'X DDEOUT=1
"KRN",1.5,76,1,3,0)
Comments^6^W^26.13^1^^^^1
"KRN",1.5,76,1,3,6)
M WP=VPRF1("NARR") S:'$D(WP) DDEOUT=1
"KRN",1.5,76,1,4,0)
Status^7^F
"KRN",1.5,76,1,4,2)
A
"KRN",1.5,76,1,5,0)
EnteredBy^8^E^26.14^.05^^1^VPR USER
"KRN",1.5,76,1,5,6)
S VALUE=+$G(VPRF1("APPRVBY")) S:'VALUE DDEOUT=1
"KRN",1.5,76,1,6,0)
EnteredAt^9^E^26.13^.05^^1^VPR FACILITY
"KRN",1.5,76,1,6,6)
S VALUE=$P($G(VPRF1("ORIGSITE")),U) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,76,1,7,0)
EnteredOn^10^S^26.14^.02^^1
"KRN",1.5,76,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,76,1,7,6)
S VALUE=+$G(VPRF1("ASSIGNDT")) S:'VALUE DDEOUT=1
"KRN",1.5,76,1,8,0)
FromTime^11^S^26.14^.02^^1
"KRN",1.5,76,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,76,1,8,6)
S VALUE=+$G(VPRF1("ASSIGNDT")) S:'VALUE DDEOUT=1
"KRN",1.5,76,1,9,0)
ToTime^12^S^26.13^.06^^1
"KRN",1.5,76,1,9,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,76,1,9,6)
S VALUE=$P($G(VPRF1("REVIEWDT")),U) S:'VALUE DDEOUT=1
"KRN",1.5,76,1,10,0)
Extension^3^E^26.13^^^^VPR PRF EXTENSION
"KRN",1.5,76,1,10,6)
S VALUE=DIEN
"KRN",1.5,76,1,11,0)
ExternalId^13^F
"KRN",1.5,76,1,11,6)
S VALUE=$P($G(VPRF1("FLAG")),U) ;vptr
"KRN",1.5,76,1,"B","Alert",2)

"KRN",1.5,76,1,"B","AlertType",1)

"KRN",1.5,76,1,"B","Comments",3)

"KRN",1.5,76,1,"B","EnteredAt",6)

"KRN",1.5,76,1,"B","EnteredBy",5)

"KRN",1.5,76,1,"B","EnteredOn",7)

"KRN",1.5,76,1,"B","Extension",10)

"KRN",1.5,76,1,"B","ExternalId",11)

"KRN",1.5,76,1,"B","FromTime",8)

"KRN",1.5,76,1,"B","Status",4)

"KRN",1.5,76,1,"B","ToTime",9)

"KRN",1.5,76,1,"SEQ",3,10)

"KRN",1.5,76,1,"SEQ",4,1)

"KRN",1.5,76,1,"SEQ",5,2)

"KRN",1.5,76,1,"SEQ",6,3)

"KRN",1.5,76,1,"SEQ",7,4)

"KRN",1.5,76,1,"SEQ",8,5)

"KRN",1.5,76,1,"SEQ",9,6)

"KRN",1.5,76,1,"SEQ",10,7)

"KRN",1.5,76,1,"SEQ",11,8)

"KRN",1.5,76,1,"SEQ",12,9)

"KRN",1.5,76,1,"SEQ",13,11)

"KRN",1.5,76,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,76,3)
K VPRF,VPRF1,VASITE
"KRN",1.5,76,4)
D PRF1^VPRSDA(DIEN)
"KRN",1.5,76,5)
PRF^VPRSDAQ
"KRN",1.5,76,19,0)
^^2^2^3181227^
"KRN",1.5,76,19,1,0)
This entity populates the Alert container in HealthShare with active
"KRN",1.5,76,19,2,0)
national Patient Record Flags for a patient DFN.
"KRN",1.5,78,-1)
0^93
"KRN",1.5,78,0)
VPR PTF^45^^^^S
"KRN",1.5,78,.1)
Diagnosis
"KRN",1.5,78,1,0)
^1.51^9^8
"KRN",1.5,78,1,1,0)
FromTime^2^S^45^2^^1
"KRN",1.5,78,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,78,1,1,6)
S VALUE=$G(VPRPTF("ADMISSION DATE"))
"KRN",1.5,78,1,2,0)
ToTime^3^S^45^70^^1
"KRN",1.5,78,1,2,4)
S VPRDISDT=VALUE,VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,78,1,2,6)
S VALUE=$G(VPRPTF("DISCHARGE DATE"))
"KRN",1.5,78,1,3,0)
DiagnosingClinician^6^E^45^79.1^^1^VPR PROVIDER
"KRN",1.5,78,1,3,6)
S VALUE=$G(VPRPTF("DISCHARGE PROVIDER"))
"KRN",1.5,78,1,4,0)
Diagnosis^7^E^45^79^^1^VPR ICD
"KRN",1.5,78,1,4,6)
S VALUE=$P(VPRPTF,U,2),DATA("DATE")=$G(VPRDISDT,DT)
"KRN",1.5,78,1,5,0)
DiagnosisType^8^E^45^^^^VPR CODE TABLE
"KRN",1.5,78,1,5,6)
S VALUE="DXLS^Diagnosis for Length of Stay"
"KRN",1.5,78,1,6,0)
EnteredAt^17^E^45^3^^^VPR FACILITY
"KRN",1.5,78,1,6,4)
S VALUE=+$O(^DIC(4,"D",VALUE,0)) ;PTF saves stn#
"KRN",1.5,78,1,6,6)
S VALUE=$G(VPRPTF("FACILITY"))
"KRN",1.5,78,1,7,0)
EncounterNumber^4^S^45
"KRN",1.5,78,1,7,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,78,1,7,6)
N ADM S ADM=$$FIND1^DIC(405,,"Q",DIEN,"APTF"),VALUE=$$VNUM^VPRSDA(ADM)
"KRN",1.5,78,1,9,0)
ExternalId^19^I
"KRN",1.5,78,1,9,4)
S VALUE=VALUE_";PTF"
"KRN",1.5,78,1,"B","DiagnosingClinician",3)

"KRN",1.5,78,1,"B","Diagnosis",4)

"KRN",1.5,78,1,"B","DiagnosisType",5)

"KRN",1.5,78,1,"B","EncounterNumber",7)

"KRN",1.5,78,1,"B","EnteredAt",6)

"KRN",1.5,78,1,"B","ExternalId",9)

"KRN",1.5,78,1,"B","FromTime",1)

"KRN",1.5,78,1,"B","ToTime",2)

"KRN",1.5,78,1,"SEQ",2,1)

"KRN",1.5,78,1,"SEQ",3,2)

"KRN",1.5,78,1,"SEQ",4,7)

"KRN",1.5,78,1,"SEQ",6,3)

"KRN",1.5,78,1,"SEQ",7,4)

"KRN",1.5,78,1,"SEQ",8,5)

"KRN",1.5,78,1,"SEQ",17,6)

"KRN",1.5,78,1,"SEQ",19,9)

"KRN",1.5,78,3)
K VPRDISDT,VPRPTF
"KRN",1.5,78,4)
K VPRPTF D PTF^DGPTPXRM(+DIEN,.VPRPTF) S VPRPTF=DIEN,DIEN=+DIEN
"KRN",1.5,78,5)
PTF^VPRSDAQ
"KRN",1.5,78,19,0)
^^1^1^3181227^
"KRN",1.5,78,19,1,0)
This entity populates the Diagnosis container in HealthShare.
"KRN",1.5,79,-1)
0^58
"KRN",1.5,79,0)
VPR MEDICATION^100^^^^S
"KRN",1.5,79,.1)
Medication
"KRN",1.5,79,1,0)
^1.51^42^35
"KRN",1.5,79,1,1,0)
EnteredAt^30^E^100^6^^1^VPR FACILITY
"KRN",1.5,79,1,1,4)
S:VALUE VALUE=$$GET1^DIQ(44,+VALUE_",",3,"I") S:'VALUE VALUE=$G(VASITE) ;#4 ien
"KRN",1.5,79,1,2,0)
EnteredBy^29^E^100^3^^1^VPR USER
"KRN",1.5,79,1,3,0)
EnteredOn^31^S^100^4^^1
"KRN",1.5,79,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,79,1,4,0)
FillerId^3^S^100^33
"KRN",1.5,79,1,4,6)
S VALUE=$$PKGID^ORX8(DIEN)
"KRN",1.5,79,1,5,0)
OrderCategory^6^E^100^23^^1^VPR DISPLAY GROUP
"KRN",1.5,79,1,5,6)
S DATA=$S($G(PSTYPE)="N":"OTC",$G(PSTYPE)="O":"Prescription",1:"") ;HITSP category
"KRN",1.5,79,1,6,0)
OrderItem^5^E^100^^^^VPR ORDERABLE ITEM
"KRN",1.5,79,1,6,6)
S VALUE=+$$OI^ORX8(DIEN) ;first
"KRN",1.5,79,1,7,0)
OrderedBy^8^E^100^1^^1^VPR PROVIDER
"KRN",1.5,79,1,9,0)
Priority^16^E^100^^^^VPR ORDER URGENCY
"KRN",1.5,79,1,9,6)
S VALUE=$$VALUE^ORX8(DIEN,"URGENCY")
"KRN",1.5,79,1,13,0)
Status^15^S^100^5^.02
"KRN",1.5,79,1,13,4)
N X S X=VALUE,VALUE=$S(X="dc":"D",X="canc":"C",X="laps":"C",X="dc/e":"R",X="comp":"E",X="exp":"E",X="hold":"H",X="part":"A",1:"IP")
"KRN",1.5,79,1,15,0)
PlacerId^1^I
"KRN",1.5,79,1,16,0)
EnteringOrganization^9^E^100^6^^1^VPR LOCATION
"KRN",1.5,79,1,16,4)
S:VALUE VALUE=+VALUE
"KRN",1.5,79,1,17,0)
FromTime^32^S^100^21^^1
"KRN",1.5,79,1,17,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,79,1,18,0)
ToTime^33^S^100^22^^1
"KRN",1.5,79,1,18,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,79,1,19,0)
UpdatedOn^58^S^100^31^^1
"KRN",1.5,79,1,19,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,79,1,20,0)
AuthorizationTime^23^S^100.008^16^^1
"KRN",1.5,79,1,20,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,79,1,20,6)
S IEN="1,"_DIEN
"KRN",1.5,79,1,21,0)
VerifiedBy^10^E^100^^^^VPR PROVIDER
"KRN",1.5,79,1,21,4)

"KRN",1.5,79,1,21,5)

"KRN",1.5,79,1,21,6)
S VALUE=$P($G(@VPRPS@("RXN",0)),U,5)
"KRN",1.5,79,1,22,0)
TextInstruction^19^S^100
"KRN",1.5,79,1,22,6)
S VALUE=$$VALUE^ORX8(DIEN,"PI")
"KRN",1.5,79,1,23,0)
DrugProduct^34^E^100^^^^VPR DRUG PRODUCT
"KRN",1.5,79,1,23,6)
S VALUE=$$VALUE^ORX8(DIEN,"DRUG",1) S:'VALUE DDEOUT=1
"KRN",1.5,79,1,24,0)
DosageForm^44^E^100^^^^VPR CODE TABLE
"KRN",1.5,79,1,24,6)
S VALUE=$$DOSEFORM^VPRSDAP(DIEN)
"KRN",1.5,79,1,25,0)
DosageSteps^51^L^^^^^VPR DOSAGE STEP
"KRN",1.5,79,1,25,1)
4^DosageStep
"KRN",1.5,79,1,25,6)
D DOSES^VPRSDAP(DIEN)
"KRN",1.5,79,1,27,0)
Route^45^E^51.2^^^^VPR MED ROUTE
"KRN",1.5,79,1,27,6)
S VALUE=$$VALUE^ORX8(DIEN,"ROUTE")
"KRN",1.5,79,1,29,0)
OrderQuantity^7^S^100
"KRN",1.5,79,1,29,6)
S VALUE=$$VALUE^ORX8(DIEN,"QTY")
"KRN",1.5,79,1,30,0)
NumberOfRefills^43^S^100
"KRN",1.5,79,1,30,6)
S:$G(PSTYPE)="O" VALUE=$$VALUE^ORX8(DIEN,"REFILLS")
"KRN",1.5,79,1,31,0)
PrescriptionNumber^48^S^100^
"KRN",1.5,79,1,31,4)

"KRN",1.5,79,1,31,6)
S:$G(PSTYPE)="O" VALUE=$P($G(@VPRPS@("RXN",0)),U)
"KRN",1.5,79,1,32,0)
RefillNumber^49^S^100^
"KRN",1.5,79,1,32,4)

"KRN",1.5,79,1,32,6)
S:$G(PSTYPE)="O" VALUE=$O(@VPRPS@("REF",""),-1) ;last#
"KRN",1.5,79,1,33,0)
ComponentMeds^53^L^^^^^VPR IV PRODUCT
"KRN",1.5,79,1,33,1)
4^DrugProduct
"KRN",1.5,79,1,33,6)
I $G(PSTYPE)="V" D IVMEDS^VPRSDAP(ORIFN)
"KRN",1.5,79,1,34,0)
RateAmount^37^S^100
"KRN",1.5,79,1,34,6)
I $G(PSTYPE)="V" S VALUE=$$IVRATE^VPRSDAP(ORIFN)
"KRN",1.5,79,1,35,0)
RateUnits^38^E^100^^^^VPR CODE ONLY
"KRN",1.5,79,1,35,6)
S:$G(PSTYPE)="V"&$G(VPRATE) VALUE="ml"
"KRN",1.5,79,1,36,0)
RateTimeUnit^39^F
"KRN",1.5,79,1,36,2)

"KRN",1.5,79,1,36,6)
S:$G(PSTYPE)="V"&$G(VPRATE) VALUE="per hour"
"KRN",1.5,79,1,37,0)
Frequency^13^E^100^^^^VPR CODE ONLY
"KRN",1.5,79,1,37,6)
S:$G(PSTYPE)="V" VALUE=$P($G(@VPRPS@("SCH",1,0)),U)
"KRN",1.5,79,1,38,0)
Duration^14^E^100^^^^VPR CODE ONLY
"KRN",1.5,79,1,38,6)
S:$G(PSTYPE)="V" VALUE=$$VALUE^ORX8(ORIFN,"DAYS")
"KRN",1.5,79,1,39,0)
StrengthVolume^35^S^100
"KRN",1.5,79,1,39,6)
I $G(PSTYPE)="V" S VALUE=$$VALUE^ORX8(DIEN,"VOLUME"),VPRUNTS=$S(VALUE:"ML",1:"")
"KRN",1.5,79,1,40,0)
StrengthVolumeUnits^36^F^100
"KRN",1.5,79,1,40,6)
I $G(PSTYPE)="V" S VALUE=$G(VPRUNTS) K VPRUNTS
"KRN",1.5,79,1,41,0)
Extension^59^E^100^^^^VPR MED EXTENSION
"KRN",1.5,79,1,41,6)
S VALUE=DIEN
"KRN",1.5,79,1,42,0)
PharmacyStatus^47^F
"KRN",1.5,79,1,42,6)
S VALUE=$P($G(@VPRPS@(0)),U,6)
"KRN",1.5,79,1,"B","AuthorizationTime",20)

"KRN",1.5,79,1,"B","ComponentMeds",33)

"KRN",1.5,79,1,"B","DosageForm",24)

"KRN",1.5,79,1,"B","DosageSteps",25)

"KRN",1.5,79,1,"B","DrugProduct",23)

"KRN",1.5,79,1,"B","Duration",38)

"KRN",1.5,79,1,"B","EnteredAt",1)

"KRN",1.5,79,1,"B","EnteredBy",2)

"KRN",1.5,79,1,"B","EnteredOn",3)

"KRN",1.5,79,1,"B","EnteringOrganization",16)

"KRN",1.5,79,1,"B","Extension",41)

"KRN",1.5,79,1,"B","FillerId",4)

"KRN",1.5,79,1,"B","Frequency",37)

"KRN",1.5,79,1,"B","FromTime",17)

"KRN",1.5,79,1,"B","NumberOfRefills",30)

"KRN",1.5,79,1,"B","OrderCategory",5)

"KRN",1.5,79,1,"B","OrderItem",6)

"KRN",1.5,79,1,"B","OrderQuantity",29)

"KRN",1.5,79,1,"B","OrderedBy",7)

"KRN",1.5,79,1,"B","PharmacyStatus",42)

"KRN",1.5,79,1,"B","PlacerId",15)

"KRN",1.5,79,1,"B","PrescriptionNumber",31)

"KRN",1.5,79,1,"B","Priority",9)

"KRN",1.5,79,1,"B","RateAmount",34)

"KRN",1.5,79,1,"B","RateTimeUnit",36)

"KRN",1.5,79,1,"B","RateUnits",35)

"KRN",1.5,79,1,"B","RefillNumber",32)

"KRN",1.5,79,1,"B","Route",27)

"KRN",1.5,79,1,"B","Status",13)

"KRN",1.5,79,1,"B","StrengthVolume",39)

"KRN",1.5,79,1,"B","StrengthVolumeUnits",40)

"KRN",1.5,79,1,"B","TextInstruction",22)

"KRN",1.5,79,1,"B","ToTime",18)

"KRN",1.5,79,1,"B","UpdatedOn",19)

"KRN",1.5,79,1,"B","VerifiedBy",21)

"KRN",1.5,79,1,"SEQ",1,15)

"KRN",1.5,79,1,"SEQ",3,4)

"KRN",1.5,79,1,"SEQ",5,6)

"KRN",1.5,79,1,"SEQ",6,5)

"KRN",1.5,79,1,"SEQ",7,29)

"KRN",1.5,79,1,"SEQ",8,7)

"KRN",1.5,79,1,"SEQ",9,16)

"KRN",1.5,79,1,"SEQ",10,21)

"KRN",1.5,79,1,"SEQ",13,37)

"KRN",1.5,79,1,"SEQ",14,38)

"KRN",1.5,79,1,"SEQ",15,13)

"KRN",1.5,79,1,"SEQ",16,9)

"KRN",1.5,79,1,"SEQ",19,22)

"KRN",1.5,79,1,"SEQ",23,20)

"KRN",1.5,79,1,"SEQ",29,2)

"KRN",1.5,79,1,"SEQ",30,1)

"KRN",1.5,79,1,"SEQ",31,3)

"KRN",1.5,79,1,"SEQ",32,17)

"KRN",1.5,79,1,"SEQ",33,18)

"KRN",1.5,79,1,"SEQ",34,23)

"KRN",1.5,79,1,"SEQ",35,39)

"KRN",1.5,79,1,"SEQ",36,40)

"KRN",1.5,79,1,"SEQ",37,34)

"KRN",1.5,79,1,"SEQ",38,35)

"KRN",1.5,79,1,"SEQ",39,36)

"KRN",1.5,79,1,"SEQ",43,30)

"KRN",1.5,79,1,"SEQ",44,24)

"KRN",1.5,79,1,"SEQ",45,27)

"KRN",1.5,79,1,"SEQ",47,42)

"KRN",1.5,79,1,"SEQ",48,31)

"KRN",1.5,79,1,"SEQ",49,32)

"KRN",1.5,79,1,"SEQ",51,25)

"KRN",1.5,79,1,"SEQ",53,33)

"KRN",1.5,79,1,"SEQ",58,19)

"KRN",1.5,79,1,"SEQ",59,41)

"KRN",1.5,79,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,79,3)
K:$D(VPRPS) @VPRPS K ORIFN,PSTYPE,VPRATE,VPRPS,^TMP("VPRX",$J),VASITE
"KRN",1.5,79,4)
D PS1^VPRSDAP(DIEN)
"KRN",1.5,79,5)
ORDERS^VPRSDAQ("RX")
"KRN",1.5,79,19,0)
^^1^1^3181227^
"KRN",1.5,79,19,1,0)
This entity populates the Medication container in HealthShare.
"KRN",1.5,80,-1)
0^51
"KRN",1.5,80,0)
VPR DOSAGE STEP^100^^^^S
"KRN",1.5,80,.1)
DosageStep
"KRN",1.5,80,1,0)
^1.51^5^5
"KRN",1.5,80,1,1,0)
TextInstruction^5^F
"KRN",1.5,80,1,1,6)
S VALUE=$$VALUE^ORX8(ORIFN,"INSTR",IEN)
"KRN",1.5,80,1,2,0)
Frequency^6^E^100^^^^VPR CODE ONLY
"KRN",1.5,80,1,2,6)
S VALUE=$$VALUE^ORX8(ORIFN,"SCHEDULE",IEN)
"KRN",1.5,80,1,3,0)
DoseQuantity^7^F
"KRN",1.5,80,1,3,6)
S VALUE=$P($$VALUE^ORX8(ORIFN,"DOSE",IEN),"&")
"KRN",1.5,80,1,4,0)
DoseUoM^8^E^100^^^^VPR CODE ONLY
"KRN",1.5,80,1,4,6)
S VALUE=$P($$VALUE^ORX8(ORIFN,"DOSE",IEN),"&",2)
"KRN",1.5,80,1,5,0)
Duration^9^E^100^^^^VPR CODE ONLY
"KRN",1.5,80,1,5,6)
S VALUE=$$VALUE^ORX8(ORIFN,"DAYS",IEN)
"KRN",1.5,80,1,"B","DoseQuantity",3)

"KRN",1.5,80,1,"B","DoseUoM",4)

"KRN",1.5,80,1,"B","Duration",5)

"KRN",1.5,80,1,"B","Frequency",2)

"KRN",1.5,80,1,"B","TextInstruction",1)

"KRN",1.5,80,1,"SEQ",5,1)

"KRN",1.5,80,1,"SEQ",6,2)

"KRN",1.5,80,1,"SEQ",7,3)

"KRN",1.5,80,1,"SEQ",8,4)

"KRN",1.5,80,1,"SEQ",9,5)

"KRN",1.5,81,-1)
0^52
"KRN",1.5,81,0)
VPR DRUG PRODUCT^50.68^^^^S
"KRN",1.5,81,.1)
DrugProduct
"KRN",1.5,81,1,0)
^1.51^5^5
"KRN",1.5,81,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,81,1,1,2)
VA50.68
"KRN",1.5,81,1,1,6)
S VALUE=$P($G(DATA),U,3)
"KRN",1.5,81,1,2,0)
Code^6^I^50.68^
"KRN",1.5,81,1,2,6)
S VALUE=$P($G(DATA),U)
"KRN",1.5,81,1,3,0)
Description^7^S^50.68^.01
"KRN",1.5,81,1,3,6)
S VALUE=$P($G(@VPRVAP@(22)),U,2)
"KRN",1.5,81,1,4,0)
ATCCode^18^E^50.68^15^^1^VPR DRUG CLASS
"KRN",1.5,81,1,4,6)
S VALUE=$G(@VPRVAP@(25))
"KRN",1.5,81,1,5,0)
Generic^22^E^50.68^.05^^1^VPR DRUG GENERIC
"KRN",1.5,81,1,5,6)
S DATA=$G(@VPRVAP@(20)),VALUE=+DATA D CODE^VPRSDAP(.DATA,50.6)
"KRN",1.5,81,1,"B","ATCCode",4)

"KRN",1.5,81,1,"B","Code",2)

"KRN",1.5,81,1,"B","Description",3)

"KRN",1.5,81,1,"B","Generic",5)

"KRN",1.5,81,1,"B","SDACodingStandard",1)

"KRN",1.5,81,1,"SEQ",1,1)

"KRN",1.5,81,1,"SEQ",6,2)

"KRN",1.5,81,1,"SEQ",7,3)

"KRN",1.5,81,1,"SEQ",18,4)

"KRN",1.5,81,1,"SEQ",22,5)

"KRN",1.5,81,2)
D NDF^VPRSDAP(.ID) ;ID=#50ien
"KRN",1.5,81,3)
I $D(VPRVAP) K @VPRVAP,VPRVAP
"KRN",1.5,81,4)
S:'DIEN DDEOUT=1
"KRN",1.5,82,-1)
0^60
"KRN",1.5,82,0)
VPR VACCINATION^9000010.11^^^^S
"KRN",1.5,82,.1)
Vaccination
"KRN",1.5,82,1,0)
^1.51^14^14
"KRN",1.5,82,1,1,0)
FillerId^3^I^9000010.11
"KRN",1.5,82,1,2,0)
OrderedBy^8^E^9000010.11^1202^^1^VPR PROVIDER
"KRN",1.5,82,1,2,6)
S VALUE=$P($G(VPRM("ORDERING PROVIDER")),U)
"KRN",1.5,82,1,3,0)
Comments^21^S^9000010.11^81101
"KRN",1.5,82,1,3,6)
S VALUE=$G(VPRM("COMMENTS"))
"KRN",1.5,82,1,4,0)
EnteredBy^30^E^9000010.11^.03^.23^1^VPR USER
"KRN",1.5,82,1,4,6)

"KRN",1.5,82,1,5,0)
EnteredAt^31^E^9000010.11^.03^.06^1^VPR FACILITY
"KRN",1.5,82,1,5,6)
S VALUE=$P($G(VPRM("FACILITY")),U) S:VALUE<1 VALUE=$G(VASITE)
"KRN",1.5,82,1,6,0)
EnteredOn^32^S^9000010.11^1205^^1
"KRN",1.5,82,1,6,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,82,1,6,6)
S VALUE=$G(VPRM("DATE RECORDED"))
"KRN",1.5,82,1,7,0)
FromTime^33^S^9000010.11^.03^.01^1
"KRN",1.5,82,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,82,1,7,6)
S VALUE=$G(VPRM("VISIT DATE TIME"))
"KRN",1.5,82,1,8,0)
OrderItem^35^E^9000010.11^.01^^1^VPR IMMUNIZATION
"KRN",1.5,82,1,8,6)
S DATA=$G(VPRM("IMMUNIZATION")),VALUE=$P(DATA,U)
"KRN",1.5,82,1,9,0)
Route^46^E^9000010.11^1302^^1^VPR IMM ROUTE
"KRN",1.5,82,1,9,6)
S DATA=$G(VPRM("ADMIN ROUTE")),VALUE=$P(DATA,U)
"KRN",1.5,82,1,10,0)
Administrations^53^L^^^^^VPR IMM ADMINISTRATION
"KRN",1.5,82,1,10,1)
4^Administration
"KRN",1.5,82,1,10,6)
S DLIST(1)=DIEN
"KRN",1.5,82,1,11,0)
EncounterNumber^61^S^9000010.11^.03^^1
"KRN",1.5,82,1,11,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,82,1,12,0)
ToTime^34^S^9000010.11^.03^.01^1
"KRN",1.5,82,1,12,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,82,1,12,6)
S VALUE=$G(VPRM("VISIT DATE TIME"))
"KRN",1.5,82,1,13,0)
Extension^62^E^9000010.11^^^^VPR IMM EXTENSION
"KRN",1.5,82,1,13,6)
S VALUE=DIEN
"KRN",1.5,82,1,14,0)
ExternalId^60^I
"KRN",1.5,82,1,"B","Administrations",10)

"KRN",1.5,82,1,"B","Comments",3)

"KRN",1.5,82,1,"B","EncounterNumber",11)

"KRN",1.5,82,1,"B","EnteredAt",5)

"KRN",1.5,82,1,"B","EnteredBy",4)

"KRN",1.5,82,1,"B","EnteredOn",6)

"KRN",1.5,82,1,"B","Extension",13)

"KRN",1.5,82,1,"B","ExternalId",14)

"KRN",1.5,82,1,"B","FillerId",1)

"KRN",1.5,82,1,"B","FromTime",7)

"KRN",1.5,82,1,"B","OrderItem",8)

"KRN",1.5,82,1,"B","OrderedBy",2)

"KRN",1.5,82,1,"B","Route",9)

"KRN",1.5,82,1,"B","ToTime",12)

"KRN",1.5,82,1,"SEQ",3,1)

"KRN",1.5,82,1,"SEQ",8,2)

"KRN",1.5,82,1,"SEQ",21,3)

"KRN",1.5,82,1,"SEQ",30,4)

"KRN",1.5,82,1,"SEQ",31,5)

"KRN",1.5,82,1,"SEQ",32,6)

"KRN",1.5,82,1,"SEQ",33,7)

"KRN",1.5,82,1,"SEQ",34,12)

"KRN",1.5,82,1,"SEQ",35,8)

"KRN",1.5,82,1,"SEQ",46,9)

"KRN",1.5,82,1,"SEQ",53,10)

"KRN",1.5,82,1,"SEQ",60,14)

"KRN",1.5,82,1,"SEQ",61,11)

"KRN",1.5,82,1,"SEQ",62,13)

"KRN",1.5,82,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,82,3)
K ^TMP("VPRIMM",$J),VPRM,VASITE
"KRN",1.5,82,4)
D:$D(^AUPNVIMM(+DIEN)) VIMM^PXPXRM(+DIEN,.VPRM)
"KRN",1.5,82,5)
IMMS^VPRSDAQ
"KRN",1.5,82,19,0)
^^1^1^3181227^
"KRN",1.5,82,19,1,0)
This entity populates the Vaccination container in HealthShare.
"KRN",1.5,83,-1)
0^57
"KRN",1.5,83,0)
VPR MED ROUTE^51.2^^^^S
"KRN",1.5,83,.1)
Route
"KRN",1.5,83,1,0)
^1.51^3^3
"KRN",1.5,83,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,83,1,1,2)
VA51.2
"KRN",1.5,83,1,2,0)
Code^6^S^51.2^1
"KRN",1.5,83,1,2,6)
S VALUE=$G(^TMP("VPRX",$J,"RTE",DIEN,1))
"KRN",1.5,83,1,3,0)
Description^7^S^51.2^.01
"KRN",1.5,83,1,3,6)
S VALUE=$G(^TMP("VPRX",$J,"RTE",DIEN,.01))
"KRN",1.5,83,1,"B","Code",2)

"KRN",1.5,83,1,"B","Description",3)

"KRN",1.5,83,1,"B","SDACodingStandard",1)

"KRN",1.5,83,1,"SEQ",1,1)

"KRN",1.5,83,1,"SEQ",6,2)

"KRN",1.5,83,1,"SEQ",7,3)

"KRN",1.5,83,4)
I '$D(^TMP("VPRX",$J,"RTE",DIEN)) D ALL^PSS51P2(DIEN,,,,"RTE") M ^TMP("VPRX",$J,"RTE",DIEN)=^TMP($J,"RTE",DIEN) K ^TMP($J,"RTE",DIEN)
"KRN",1.5,83,19,0)
^^4^4^3180920^
"KRN",1.5,83,19,1,0)
This entity supports VPR MEDICATION and expects a #51.2 ien. Results of 
"KRN",1.5,83,19,2,0)
calls to ALL^PSS51P2 are kept in ^TMP("VPRX",$J,"RTE") for the session, 
"KRN",1.5,83,19,3,0)
which will be killed by the Get Post Processing of VPR MEDICATION when 
"KRN",1.5,83,19,4,0)
all requested med orders have been extracted.
"KRN",1.5,84,-1)
0^56
"KRN",1.5,84,0)
VPR IMMUNIZATION^9999999.14^^^^S
"KRN",1.5,84,.1)
OrderItem
"KRN",1.5,84,1,0)
^1.51^3^3
"KRN",1.5,84,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,84,1,1,2)
CVX
"KRN",1.5,84,1,2,0)
Code^6^S^9999999.14^.03
"KRN",1.5,84,1,2,6)
S VALUE=$G(VPRM("CVX"))
"KRN",1.5,84,1,3,0)
Description^7^S^9999999.14^.01
"KRN",1.5,84,1,3,6)
S:$G(DATA) VALUE=$P(DATA,U,2)
"KRN",1.5,84,1,"B","Code",2)

"KRN",1.5,84,1,"B","Description",3)

"KRN",1.5,84,1,"B","SDACodingStandard",1)

"KRN",1.5,84,1,"SEQ",1,1)

"KRN",1.5,84,1,"SEQ",6,2)

"KRN",1.5,84,1,"SEQ",7,3)

"KRN",1.5,85,-1)
0^54
"KRN",1.5,85,0)
VPR IMM ROUTE^920.2^^^^S
"KRN",1.5,85,.1)
Route
"KRN",1.5,85,1,0)
^1.51^4^4
"KRN",1.5,85,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,85,1,1,2)
VA920.2
"KRN",1.5,85,1,2,0)
Code^6^S^920.2^.03
"KRN",1.5,85,1,2,6)

"KRN",1.5,85,1,3,0)
Description^7^S^920.2^.01
"KRN",1.5,85,1,3,6)
S:$G(DATA) VALUE=$P(DATA,U,3)
"KRN",1.5,85,1,4,0)
OriginalText^3^S^920.2^.02
"KRN",1.5,85,1,4,6)
S:$G(DATA) VALUE=$P(DATA,U,2)
"KRN",1.5,85,1,"B","Code",2)

"KRN",1.5,85,1,"B","Description",3)

"KRN",1.5,85,1,"B","OriginalText",4)

"KRN",1.5,85,1,"B","SDACodingStandard",1)

"KRN",1.5,85,1,"SEQ",1,1)

"KRN",1.5,85,1,"SEQ",3,4)

"KRN",1.5,85,1,"SEQ",6,2)

"KRN",1.5,85,1,"SEQ",7,3)

"KRN",1.5,86,-1)
0^53
"KRN",1.5,86,0)
VPR IMM ADMINISTRATION^9000010.11^^^^S
"KRN",1.5,86,.1)
Administration
"KRN",1.5,86,1,0)
^1.51^11^10
"KRN",1.5,86,1,2,0)
AdministeringProvider^5^E^9000010.11^1204^^1^VPR PROVIDER
"KRN",1.5,86,1,2,6)
S VALUE=$P($G(VPRM("ENCOUNTER PROVIDER")),U)
"KRN",1.5,86,1,3,0)
AdministeredAtLocation^6^E^9000010.11^.03^.22^1^VPR LOCATION
"KRN",1.5,86,1,3,6)
S VALUE=$P($G(VPRM("LOCATION")),U)
"KRN",1.5,86,1,4,0)
AdministrationStatus^7^E^9000010.11^.04^^1^VPR CODE TABLE
"KRN",1.5,86,1,4,6)
S VALUE=$G(VPRM("SERIES"))
"KRN",1.5,86,1,5,0)
AdministeredAmount^8^S^9000010.11^1312
"KRN",1.5,86,1,5,6)
S VALUE=$G(VPRM("DOSE"))
"KRN",1.5,86,1,6,0)
AdministeredUnits^9^S^9000010.11^1313
"KRN",1.5,86,1,6,6)
S VALUE=$G(VPRM("DOSE UNITS"))
"KRN",1.5,86,1,7,0)
LotNumber^10^S^9000010.11^1207^.01
"KRN",1.5,86,1,7,6)
S VALUE=$G(VPRM("LOT NUMBER"))
"KRN",1.5,86,1,8,0)
ManufacturerName^12^S^9000010.11^1207^.02
"KRN",1.5,86,1,8,6)
S VALUE=$G(VPRM("MANUFACTURER"))
"KRN",1.5,86,1,9,0)
ExpiryDate^11^S^9000010.11^1207^.09^1
"KRN",1.5,86,1,9,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,86,1,9,6)
S VALUE=$G(VPRM("EXPIRATION DATE"))
"KRN",1.5,86,1,10,0)
AdministrationSite^14^E^9000010.11^1303^^1^VPR IMM SITE
"KRN",1.5,86,1,10,6)
S DATA=$G(VPRM("ADMIN SITE")),VALUE=$P(DATA,U)
"KRN",1.5,86,1,11,0)
EnteredBy^1^E^9000010.11^1206^^1^VPR USER
"KRN",1.5,86,1,11,6)
S VALUE=$P($G(VPRM("DOCUMENTER")),U)
"KRN",1.5,86,1,"B","AdministeredAmount",5)

"KRN",1.5,86,1,"B","AdministeredAtLocation",3)

"KRN",1.5,86,1,"B","AdministeredUnits",6)

"KRN",1.5,86,1,"B","AdministeringProvider",2)

"KRN",1.5,86,1,"B","AdministrationSite",10)

"KRN",1.5,86,1,"B","AdministrationStatus",4)

"KRN",1.5,86,1,"B","EnteredBy",11)

"KRN",1.5,86,1,"B","ExpiryDate",9)

"KRN",1.5,86,1,"B","LotNumber",7)

"KRN",1.5,86,1,"B","ManufacturerName",8)

"KRN",1.5,86,1,"SEQ",1,11)

"KRN",1.5,86,1,"SEQ",5,2)

"KRN",1.5,86,1,"SEQ",6,3)

"KRN",1.5,86,1,"SEQ",7,4)

"KRN",1.5,86,1,"SEQ",8,5)

"KRN",1.5,86,1,"SEQ",9,6)

"KRN",1.5,86,1,"SEQ",10,7)

"KRN",1.5,86,1,"SEQ",11,9)

"KRN",1.5,86,1,"SEQ",12,8)

"KRN",1.5,86,1,"SEQ",14,10)

"KRN",1.5,87,-1)
0^55
"KRN",1.5,87,0)
VPR IMM SITE^920.3^^^^S
"KRN",1.5,87,.1)
AdministrationSite
"KRN",1.5,87,1,0)
^1.51^3^3
"KRN",1.5,87,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,87,1,1,2)
VA920.3
"KRN",1.5,87,1,2,0)
Code^2^S^920.3^.02
"KRN",1.5,87,1,2,6)
S:$G(DATA) VALUE=$P(DATA,U,2)
"KRN",1.5,87,1,3,0)
Description^3^S^920.3^.01
"KRN",1.5,87,1,3,6)
S:$G(DATA) VALUE=$P(DATA,U,3)
"KRN",1.5,87,1,"B","Code",2)

"KRN",1.5,87,1,"B","Description",3)

"KRN",1.5,87,1,"B","SDACodingStandard",1)

"KRN",1.5,87,1,"SEQ",1,1)

"KRN",1.5,87,1,"SEQ",2,2)

"KRN",1.5,87,1,"SEQ",3,3)

"KRN",1.5,88,-1)
0^68
"KRN",1.5,88,0)
VPR INSURED ADDRESS^2.312^^^^S
"KRN",1.5,88,.1)
Address
"KRN",1.5,88,1,0)
^1.51^5^5
"KRN",1.5,88,1,1,0)
Street^4^S^2.312^3.06
"KRN",1.5,88,1,2,0)
City^5^E^2.312^3.08^^^VPR CODE ONLY
"KRN",1.5,88,1,3,0)
State^6^E^2.312^3.09^^1^VPR STATE
"KRN",1.5,88,1,4,0)
Zip^7^E^2.312^3.1^^^VPR CODE ONLY
"KRN",1.5,88,1,5,0)
Country^8^E^2.312^3.13^^^VPR COUNTRY
"KRN",1.5,88,1,5,4)
N Y S Y=$$FIND1^DIC(779.004,,,VALUE) S:Y VALUE=Y
"KRN",1.5,88,1,"B","City",2)

"KRN",1.5,88,1,"B","Country",5)

"KRN",1.5,88,1,"B","State",3)

"KRN",1.5,88,1,"B","Street",1)

"KRN",1.5,88,1,"B","Zip",4)

"KRN",1.5,88,1,"SEQ",4,1)

"KRN",1.5,88,1,"SEQ",5,2)

"KRN",1.5,88,1,"SEQ",6,3)

"KRN",1.5,88,1,"SEQ",7,4)

"KRN",1.5,88,1,"SEQ",8,5)

"KRN",1.5,89,-1)
0^64
"KRN",1.5,89,0)
VPR COUNTRY^779.004^^^^S
"KRN",1.5,89,.1)
Country
"KRN",1.5,89,1,0)
^1.51^3^3
"KRN",1.5,89,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,89,1,1,2)
VA779.004
"KRN",1.5,89,1,2,0)
Code^4^I^^
"KRN",1.5,89,1,3,0)
Description^5^S^779.004^2
"KRN",1.5,89,1,"B","Code",2)

"KRN",1.5,89,1,"B","Description",3)

"KRN",1.5,89,1,"B","SDACodingStandard",1)

"KRN",1.5,89,1,"SEQ",1,1)

"KRN",1.5,89,1,"SEQ",4,2)

"KRN",1.5,89,1,"SEQ",5,3)

"KRN",1.5,90,-1)
0^65
"KRN",1.5,90,0)
VPR INS COMPANY ADDRESS^36^^^^S
"KRN",1.5,90,.1)
Address
"KRN",1.5,90,1,0)
^1.51^4^4
"KRN",1.5,90,1,1,0)
Street^4^S^36^.111
"KRN",1.5,90,1,1,6)
S VALUE=$G(VPRINS(VPRP,2))
"KRN",1.5,90,1,2,0)
City^5^E^36^.114^^^VPR CODE ONLY
"KRN",1.5,90,1,2,6)
S VALUE=$G(VPRINS(VPRP,3))
"KRN",1.5,90,1,3,0)
State^6^E^36^.115^^1^VPR STATE
"KRN",1.5,90,1,3,6)
S VALUE=$P($G(VPRINS(VPRP,4)),U)
"KRN",1.5,90,1,4,0)
Zip^7^E^36^.116^^^VPR CODE ONLY
"KRN",1.5,90,1,4,6)
S VALUE=$G(VPRINS(VPRP,5))
"KRN",1.5,90,1,"B","City",2)

"KRN",1.5,90,1,"B","State",3)

"KRN",1.5,90,1,"B","Street",1)

"KRN",1.5,90,1,"B","Zip",4)

"KRN",1.5,90,1,"SEQ",4,1)

"KRN",1.5,90,1,"SEQ",5,2)

"KRN",1.5,90,1,"SEQ",6,3)

"KRN",1.5,90,1,"SEQ",7,4)

"KRN",1.5,91,-1)
0^70
"KRN",1.5,91,0)
VPR PERSON CLASS^8932.1^^^^S
"KRN",1.5,91,.1)
CareProviderType
"KRN",1.5,91,1,0)
^1.51^4^4
"KRN",1.5,91,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,91,1,1,2)
X12
"KRN",1.5,91,1,2,0)
Code^4^S^8932.1^6
"KRN",1.5,91,1,2,6)
S VALUE=$P($G(DATA),U)
"KRN",1.5,91,1,3,0)
Description^5^S^8932.1^.01
"KRN",1.5,91,1,4,0)
Extension^3^E^8932.1^^^^VPR PERSON CLASS EXTENSION
"KRN",1.5,91,1,4,6)
S VALUE=DIEN
"KRN",1.5,91,1,"B","Code",2)

"KRN",1.5,91,1,"B","Description",3)

"KRN",1.5,91,1,"B","Extension",4)

"KRN",1.5,91,1,"B","SDACodingStandard",1)

"KRN",1.5,91,1,"SEQ",1,1)

"KRN",1.5,91,1,"SEQ",3,4)

"KRN",1.5,91,1,"SEQ",4,2)

"KRN",1.5,91,1,"SEQ",5,3)

"KRN",1.5,92,-1)
0^71
"KRN",1.5,92,0)
VPR CODE TABLE^^^^^S
"KRN",1.5,92,.1)
CodeTable
"KRN",1.5,92,1,0)
^1.51^4^4
"KRN",1.5,92,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,92,1,1,6)
S VALUE=$P(VPRCODE,U,3)
"KRN",1.5,92,1,2,0)
Code^6^F
"KRN",1.5,92,1,2,6)
S VALUE=$P(VPRCODE,U)
"KRN",1.5,92,1,3,0)
Description^7^F
"KRN",1.5,92,1,3,6)
S VALUE=$P(VPRCODE,U,2)
"KRN",1.5,92,1,4,0)
OriginalText^3^F
"KRN",1.5,92,1,4,6)
S VALUE=$G(DATA)
"KRN",1.5,92,1,"B","Code",2)

"KRN",1.5,92,1,"B","Description",3)

"KRN",1.5,92,1,"B","OriginalText",4)

"KRN",1.5,92,1,"B","SDACodingStandard",1)

"KRN",1.5,92,1,"SEQ",1,1)

"KRN",1.5,92,1,"SEQ",3,4)

"KRN",1.5,92,1,"SEQ",6,2)

"KRN",1.5,92,1,"SEQ",7,3)

"KRN",1.5,92,2)
D CODED^VPRSDA
"KRN",1.5,92,3)
K VPRCODE
"KRN",1.5,92,4)
S VPRCODE=$G(DIEN) S:VPRCODE="" DDEOUT=1
"KRN",1.5,93,-1)
0^72
"KRN",1.5,93,0)
VPR PATIENT NUMBER^^^^^S
"KRN",1.5,93,.1)
PatientNumber
"KRN",1.5,93,1,0)
^1.51^4^4
"KRN",1.5,93,1,1,0)
Number^7^F
"KRN",1.5,93,1,1,6)
S VALUE=$P(VPRNMBR,U)
"KRN",1.5,93,1,2,0)
NumberType^9^F
"KRN",1.5,93,1,2,6)
S VALUE=$P(VPRNMBR,U,2)
"KRN",1.5,93,1,3,0)
Organization^8^E^^^^^VPR CODE ONLY
"KRN",1.5,93,1,3,6)
S VALUE=$P(VPRNMBR,U,3)
"KRN",1.5,93,1,4,0)
ISOAssigningAuthority^10^F
"KRN",1.5,93,1,4,6)
S VALUE=$P(VPRNMBR,U,4)
"KRN",1.5,93,1,"B","ISOAssigningAuthority",4)

"KRN",1.5,93,1,"B","Number",1)

"KRN",1.5,93,1,"B","NumberType",2)

"KRN",1.5,93,1,"B","Organization",3)

"KRN",1.5,93,1,"SEQ",7,1)

"KRN",1.5,93,1,"SEQ",8,3)

"KRN",1.5,93,1,"SEQ",9,2)

"KRN",1.5,93,1,"SEQ",10,4)

"KRN",1.5,93,3)
K VPRNMBR
"KRN",1.5,93,4)
S VPRNMBR=$G(DIEN) S:VPRNMBR="" DDEOUT=1
"KRN",1.5,93,19,0)
^^3^3^3180606^
"KRN",1.5,93,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,93,19,2,0)
as the ID. It expects a string as the ID in the form:
"KRN",1.5,93,19,3,0)
  number ^ type ^ organization ^ ISO assigning authority
"KRN",1.5,94,-1)
0^79
"KRN",1.5,94,0)
VPR PATIENT BIRTHPLACE^2^^^^S
"KRN",1.5,94,.1)
Address
"KRN",1.5,94,1,0)
^1.51^2^2
"KRN",1.5,94,1,1,0)
City^2^E^2^.092^^^VPR CODE ONLY
"KRN",1.5,94,1,1,6)
S VALUE=$G(VAPD(1))
"KRN",1.5,94,1,2,0)
State^3^E^2^.093^^1^VPR STATE
"KRN",1.5,94,1,2,6)
S VALUE=$P($G(VAPD(2)),U)
"KRN",1.5,94,1,"B","City",1)

"KRN",1.5,94,1,"B","State",2)

"KRN",1.5,94,1,"SEQ",2,1)

"KRN",1.5,94,1,"SEQ",3,2)

"KRN",1.5,94,19,0)
^^2^2^3180606^
"KRN",1.5,94,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,94,19,2,0)
as the ID.
"KRN",1.5,95,-1)
0^84
"KRN",1.5,95,0)
VPR PATIENT NOK^2^^^^S
"KRN",1.5,95,.1)
SupportContact
"KRN",1.5,95,1,0)
^1.51^9^9
"KRN",1.5,95,1,1,0)
Name^2^E^2^.211^^^VPR NAME
"KRN",1.5,95,1,1,6)
S VALUE=$G(VAOA(9))
"KRN",1.5,95,1,2,0)
Address^6^E^2^^^^VPR PATIENT NOK ADDRESS
"KRN",1.5,95,1,2,6)
S VALUE=DIEN
"KRN",1.5,95,1,3,0)
ContactInfo^7^C
"KRN",1.5,95,1,3,3,0)
^1.513I^2^2
"KRN",1.5,95,1,3,3,1,0)
2^HomePhoneNumber
"KRN",1.5,95,1,3,3,2,0)
3^WorkPhoneNumber
"KRN",1.5,95,1,3,3,"B",2,1)

"KRN",1.5,95,1,3,3,"B",3,2)

"KRN",1.5,95,1,4,0)
HomePhoneNumber^^S^2^.219
"KRN",1.5,95,1,4,6)
S VALUE=$G(VAOA(8))
"KRN",1.5,95,1,5,0)
WorkPhoneNumber^^S^2^.21011
"KRN",1.5,95,1,6,0)
Relationship^8^E^2^.212^^^VPR CODE ONLY
"KRN",1.5,95,1,6,6)
S VALUE=$G(VAOA(10))
"KRN",1.5,95,1,7,0)
ContactType^9^E^2^^^^VPR CODE TABLE
"KRN",1.5,95,1,7,6)
S VALUE="NOK^Next of Kin"
"KRN",1.5,95,1,8,0)
PrimaryContact^10^F
"KRN",1.5,95,1,8,2)
true
"KRN",1.5,95,1,9,0)
EnteredAt^13^E^2^^^^VPR FACILITY
"KRN",1.5,95,1,9,6)
S VALUE=$G(VASITE) ;default #4 ien
"KRN",1.5,95,1,"B","Address",2)

"KRN",1.5,95,1,"B","ContactInfo",3)

"KRN",1.5,95,1,"B","ContactType",7)

"KRN",1.5,95,1,"B","EnteredAt",9)

"KRN",1.5,95,1,"B","HomePhoneNumber",4)

"KRN",1.5,95,1,"B","Name",1)

"KRN",1.5,95,1,"B","PrimaryContact",8)

"KRN",1.5,95,1,"B","Relationship",6)

"KRN",1.5,95,1,"B","WorkPhoneNumber",5)

"KRN",1.5,95,1,"SEQ",2,1)

"KRN",1.5,95,1,"SEQ",6,2)

"KRN",1.5,95,1,"SEQ",7,3)

"KRN",1.5,95,1,"SEQ",8,6)

"KRN",1.5,95,1,"SEQ",9,7)

"KRN",1.5,95,1,"SEQ",10,8)

"KRN",1.5,95,1,"SEQ",13,9)

"KRN",1.5,95,2)
S VAOA("A")="",DFN=DIEN D OAD^VADPT
"KRN",1.5,95,3)
K VAOA
"KRN",1.5,95,4)
S:$G(VAOA(9))="" DDEOUT=1
"KRN",1.5,95,19,0)
^^2^2^3180606^
"KRN",1.5,95,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,95,19,2,0)
as the ID. It returns the patient's Next of Kin.
"KRN",1.5,96,-1)
0^85
"KRN",1.5,96,0)
VPR PATIENT NOK ADDRESS^2^^^^S
"KRN",1.5,96,.1)
Address
"KRN",1.5,96,1,0)
^1.51^4^4
"KRN",1.5,96,1,1,0)
Street^4^S^2^.213
"KRN",1.5,96,1,1,6)
S VALUE=$G(VAOA(1)) I $L(VALUE) N I F I=2,3 S:$L($G(VAOA(I))) VALUE=VALUE_";"_VAOA(I)
"KRN",1.5,96,1,2,0)
City^5^E^2^.216^^^VPR CODE ONLY
"KRN",1.5,96,1,2,6)
S VALUE=$G(VAOA(4))
"KRN",1.5,96,1,3,0)
State^6^E^2^.217^^1^VPR STATE
"KRN",1.5,96,1,3,6)
S VALUE=$P($G(VAOA(5)),U)
"KRN",1.5,96,1,4,0)
Zip^7^E^2^.218^^^VPR CODE ONLY
"KRN",1.5,96,1,4,6)
S VALUE=$G(VAOA(6))
"KRN",1.5,96,1,"B","City",2)

"KRN",1.5,96,1,"B","State",3)

"KRN",1.5,96,1,"B","Street",1)

"KRN",1.5,96,1,"B","Zip",4)

"KRN",1.5,96,1,"SEQ",4,1)

"KRN",1.5,96,1,"SEQ",5,2)

"KRN",1.5,96,1,"SEQ",6,3)

"KRN",1.5,96,1,"SEQ",7,4)

"KRN",1.5,96,19,0)
^^2^2^3180606^
"KRN",1.5,96,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,96,19,2,0)
as the ID. It returns the address of the patient's Next of Kin.
"KRN",1.5,97,-1)
0^80
"KRN",1.5,97,0)
VPR PATIENT ECON^2^^^^S
"KRN",1.5,97,.1)
SupportContact
"KRN",1.5,97,1,0)
^1.51^9^9
"KRN",1.5,97,1,1,0)
Name^2^E^2^.331^^^VPR NAME
"KRN",1.5,97,1,1,6)
S VALUE=$G(VAOA(9))
"KRN",1.5,97,1,2,0)
Address^6^E^2^^^^VPR PATIENT ECON ADDRESS
"KRN",1.5,97,1,2,6)
S VALUE=DIEN
"KRN",1.5,97,1,3,0)
ContactInfo^7^C
"KRN",1.5,97,1,3,3,0)
^1.513I^2^2
"KRN",1.5,97,1,3,3,1,0)
2^HomePhoneNumber
"KRN",1.5,97,1,3,3,2,0)
3^WorkPhoneNumber
"KRN",1.5,97,1,3,3,"B",2,1)

"KRN",1.5,97,1,3,3,"B",3,2)

"KRN",1.5,97,1,4,0)
HomePhoneNumber^^S^2^.339
"KRN",1.5,97,1,4,6)
S VALUE=$G(VAOA(8))
"KRN",1.5,97,1,5,0)
WorkPhoneNumber^^S^2^.33011
"KRN",1.5,97,1,6,0)
Relationship^8^E^2^.332^^^VPR CODE ONLY
"KRN",1.5,97,1,6,6)
S VALUE=$G(VAOA(10))
"KRN",1.5,97,1,7,0)
ContactType^9^E^2^^^^VPR CODE TABLE
"KRN",1.5,97,1,7,6)
S VALUE="ECON^Emergency Contact"
"KRN",1.5,97,1,8,0)
PrimaryContact^10^F
"KRN",1.5,97,1,8,2)

"KRN",1.5,97,1,8,6)
S VALUE=$S($L($G(^DPT(DIEN,.21))):"false",1:"true")
"KRN",1.5,97,1,9,0)
EnteredAt^13^E^2^^^^VPR FACILITY
"KRN",1.5,97,1,9,6)
S VALUE=$G(VASITE) ;default #4 ien
"KRN",1.5,97,1,"B","Address",2)

"KRN",1.5,97,1,"B","ContactInfo",3)

"KRN",1.5,97,1,"B","ContactType",7)

"KRN",1.5,97,1,"B","EnteredAt",9)

"KRN",1.5,97,1,"B","HomePhoneNumber",4)

"KRN",1.5,97,1,"B","Name",1)

"KRN",1.5,97,1,"B","PrimaryContact",8)

"KRN",1.5,97,1,"B","Relationship",6)

"KRN",1.5,97,1,"B","WorkPhoneNumber",5)

"KRN",1.5,97,1,"SEQ",2,1)

"KRN",1.5,97,1,"SEQ",6,2)

"KRN",1.5,97,1,"SEQ",7,3)

"KRN",1.5,97,1,"SEQ",8,6)

"KRN",1.5,97,1,"SEQ",9,7)

"KRN",1.5,97,1,"SEQ",10,8)

"KRN",1.5,97,1,"SEQ",13,9)

"KRN",1.5,97,2)
S VAOA("A")=1,DFN=DIEN D OAD^VADPT
"KRN",1.5,97,3)
K VAOA
"KRN",1.5,97,4)
S:$G(VAOA(9))="" DDEOUT=1
"KRN",1.5,97,19,0)
^1.519^2^2^3180606^^
"KRN",1.5,97,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,97,19,2,0)
as the ID. It returns the patient's Emergency Contact.
"KRN",1.5,98,-1)
0^81
"KRN",1.5,98,0)
VPR PATIENT ECON ADDRESS^2^^^^S
"KRN",1.5,98,.1)
Address
"KRN",1.5,98,1,0)
^1.51^4^4
"KRN",1.5,98,1,1,0)
Street^4^S^2^.333
"KRN",1.5,98,1,1,6)
S VALUE=$G(VAOA(1)) I $L(VALUE) N I F I=2,3 S:$L($G(VAOA(I))) VALUE=VALUE_";"_VAOA(I)
"KRN",1.5,98,1,2,0)
City^5^E^2^.336^^^VPR CODE ONLY
"KRN",1.5,98,1,2,6)
S VALUE=$G(VAOA(4))
"KRN",1.5,98,1,3,0)
State^6^E^2^.337^^1^VPR STATE
"KRN",1.5,98,1,3,6)
S VALUE=$P($G(VAOA(5)),U)
"KRN",1.5,98,1,4,0)
Zip^7^E^2^.338^^^VPR CODE ONLY
"KRN",1.5,98,1,4,6)
S VALUE=$G(VAOA(6))
"KRN",1.5,98,1,"B","City",2)

"KRN",1.5,98,1,"B","State",3)

"KRN",1.5,98,1,"B","Street",1)

"KRN",1.5,98,1,"B","Zip",4)

"KRN",1.5,98,1,"SEQ",4,1)

"KRN",1.5,98,1,"SEQ",5,2)

"KRN",1.5,98,1,"SEQ",6,3)

"KRN",1.5,98,1,"SEQ",7,4)

"KRN",1.5,98,19,0)
^^2^2^3180606^
"KRN",1.5,98,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,98,19,2,0)
as the ID. It returns the address of the patient's Emergency Contact.
"KRN",1.5,99,-1)
0^82
"KRN",1.5,99,0)
VPR PATIENT EMPLOYER^2^^^^S
"KRN",1.5,99,.1)
SupportContact
"KRN",1.5,99,1,0)
^1.51^9^8
"KRN",1.5,99,1,1,0)
Name^2^E^2^.3111^^^VPR NAME
"KRN",1.5,99,1,1,6)
S VALUE=$G(VAOA(9))
"KRN",1.5,99,1,2,0)
Address^6^E^2^^^^VPR PATIENT EMPLOYER ADDRESS
"KRN",1.5,99,1,2,6)
S VALUE=DIEN
"KRN",1.5,99,1,3,0)
ContactInfo^7^C
"KRN",1.5,99,1,3,3,0)
^1.513I^2^1
"KRN",1.5,99,1,3,3,2,0)
3^WorkPhoneNumber
"KRN",1.5,99,1,3,3,"B",3,2)

"KRN",1.5,99,1,5,0)
WorkPhoneNumber^^S^2^.3119
"KRN",1.5,99,1,5,6)
S VALUE=$G(VAOA(8))
"KRN",1.5,99,1,6,0)
Relationship^8^E^2^^^^VPR CODE ONLY
"KRN",1.5,99,1,6,6)
S VALUE="EMPLOYER"
"KRN",1.5,99,1,7,0)
ContactType^9^E^2^^^^VPR CODE TABLE
"KRN",1.5,99,1,7,6)
S VALUE="EMP^Employer"
"KRN",1.5,99,1,8,0)
PrimaryContact^10^F
"KRN",1.5,99,1,8,2)
false
"KRN",1.5,99,1,8,6)

"KRN",1.5,99,1,9,0)
EnteredAt^13^E^2^^^^VPR FACILITY
"KRN",1.5,99,1,9,6)
S VALUE=$G(VASITE) ;default #4 ien
"KRN",1.5,99,1,"B","Address",2)

"KRN",1.5,99,1,"B","ContactInfo",3)

"KRN",1.5,99,1,"B","ContactType",7)

"KRN",1.5,99,1,"B","EnteredAt",9)

"KRN",1.5,99,1,"B","Name",1)

"KRN",1.5,99,1,"B","PrimaryContact",8)

"KRN",1.5,99,1,"B","Relationship",6)

"KRN",1.5,99,1,"B","WorkPhoneNumber",5)

"KRN",1.5,99,1,"SEQ",2,1)

"KRN",1.5,99,1,"SEQ",6,2)

"KRN",1.5,99,1,"SEQ",7,3)

"KRN",1.5,99,1,"SEQ",8,6)

"KRN",1.5,99,1,"SEQ",9,7)

"KRN",1.5,99,1,"SEQ",10,8)

"KRN",1.5,99,1,"SEQ",13,9)

"KRN",1.5,99,2)
S VAOA("A")=5,DFN=DIEN D OAD^VADPT
"KRN",1.5,99,3)
K VAOA
"KRN",1.5,99,19,0)
^^2^2^3180606^
"KRN",1.5,99,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,99,19,2,0)
as the ID. It returns the patient's employer.
"KRN",1.5,100,-1)
0^83
"KRN",1.5,100,0)
VPR PATIENT EMPLOYER ADDRESS^2^^^^S
"KRN",1.5,100,.1)
Address
"KRN",1.5,100,1,0)
^1.51^4^4
"KRN",1.5,100,1,1,0)
Street^4^S^2^.3113
"KRN",1.5,100,1,1,6)
S VALUE=$G(VAOA(1)) I $L(VALUE) N I F I=2,3 S:$L($G(VAOA(I))) VALUE=VALUE_";"_VAOA(I)
"KRN",1.5,100,1,2,0)
City^5^E^2^.3116^^^VPR CODE ONLY
"KRN",1.5,100,1,2,6)
S VALUE=$G(VAOA(4))
"KRN",1.5,100,1,3,0)
State^6^E^2^.3117^^1^VPR STATE
"KRN",1.5,100,1,3,6)
S VALUE=$P($G(VAOA(5)),U)
"KRN",1.5,100,1,4,0)
Zip^7^E^2^.3118^^^VPR CODE ONLY
"KRN",1.5,100,1,4,6)
S VALUE=$G(VAOA(6))
"KRN",1.5,100,1,"B","City",2)

"KRN",1.5,100,1,"B","State",3)

"KRN",1.5,100,1,"B","Street",1)

"KRN",1.5,100,1,"B","Zip",4)

"KRN",1.5,100,1,"SEQ",4,1)

"KRN",1.5,100,1,"SEQ",5,2)

"KRN",1.5,100,1,"SEQ",6,3)

"KRN",1.5,100,1,"SEQ",7,4)

"KRN",1.5,100,19,0)
^^2^2^3180606^
"KRN",1.5,100,19,1,0)
This entity supports VPR PATIENT, and expects the Patient file #2 ien
"KRN",1.5,100,19,2,0)
as the ID. It returns the address of the patient's employer.
"KRN",1.5,101,-1)
0^87
"KRN",1.5,101,0)
VPR SPECIALTY^45.7^^^^S
"KRN",1.5,101,.1)
CareProviderType
"KRN",1.5,101,1,0)
^1.51^3^3
"KRN",1.5,101,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,101,1,1,2)
VA45.7
"KRN",1.5,101,1,2,0)
Code^4^I^
"KRN",1.5,101,1,3,0)
Description^5^S^45.7^.01
"KRN",1.5,101,1,"B","Code",2)

"KRN",1.5,101,1,"B","Description",3)

"KRN",1.5,101,1,"B","SDACodingStandard",1)

"KRN",1.5,101,1,"SEQ",1,1)

"KRN",1.5,101,1,"SEQ",4,2)

"KRN",1.5,101,1,"SEQ",5,3)

"KRN",1.5,102,-1)
0^73
"KRN",1.5,102,0)
VPR ADMISSION^405^^^^S
"KRN",1.5,102,.1)
Encounter
"KRN",1.5,102,1,0)
^1.51^23^20
"KRN",1.5,102,1,1,0)
EncounterNumber^3^S^405^.27
"KRN",1.5,102,1,1,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,102,1,1,6)
S VALUE=$G(VPRVST)
"KRN",1.5,102,1,2,0)
EncounterType^5^F^^^^
"KRN",1.5,102,1,2,4)

"KRN",1.5,102,1,2,6)
S VALUE="I"
"KRN",1.5,102,1,3,0)
EncounterCodedType^6^E^405^^^^VPR CODE TABLE
"KRN",1.5,102,1,3,6)
S VALUE="H^HOSPITALIZATION"
"KRN",1.5,102,1,4,0)
ConsultingClinicians^9^L^^^^^VPR PROVIDER
"KRN",1.5,102,1,4,1)
4^CareProvider^^
"KRN",1.5,102,1,4,6)
N X S X=$P($G(VAIP(13,5)),U) S:X DLIST(1)=X_"^PRIMARY"
"KRN",1.5,102,1,6,0)
HealthCareFacility^22^E^405^.06^44^1^VPR LOCATION
"KRN",1.5,102,1,6,4)

"KRN",1.5,102,1,6,6)
N X S X=$P($G(VAIP(5)),U) S:X VALUE=+$G(^DIC(42,+X,44))
"KRN",1.5,102,1,8,0)
EnteredBy^41^E^405^100^^1^VPR USER
"KRN",1.5,102,1,8,6)

"KRN",1.5,102,1,9,0)
EnteredAt^42^E^405^.06^^1^VPR FACILITY
"KRN",1.5,102,1,9,4)
S VALUE=$$WARDFAC^VPRSDA(VALUE) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,102,1,9,6)
S VALUE=$P($G(VAIP(13,4)),U)
"KRN",1.5,102,1,10,0)
EnteredOn^43^S^405^101^^1
"KRN",1.5,102,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,102,1,10,6)

"KRN",1.5,102,1,11,0)
FromTime^44^S^405^.01^^1
"KRN",1.5,102,1,11,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,102,1,11,6)
S VALUE=$P($G(VAIP(13,1)),U)
"KRN",1.5,102,1,12,0)
ToTime^45^S^405^.17^.01^1
"KRN",1.5,102,1,12,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,102,1,12,6)
S VALUE=$P($G(VAIP(17,1)),U)
"KRN",1.5,102,1,13,0)
AdmittingClinician^7^E^405^.08^^1^VPR PROVIDER
"KRN",1.5,102,1,13,6)
S VALUE=$P($G(VAIP(13,5)),U)
"KRN",1.5,102,1,14,0)
AttendingClinicians^8^L^405^^^^VPR PROVIDER
"KRN",1.5,102,1,14,1)
4^CareProvider
"KRN",1.5,102,1,14,6)
S DLIST(1)=$P($G(VAIP(18)),U)
"KRN",1.5,102,1,15,0)
AdmissionSource^14^E^405^.18^^1^VPR CODE TABLE
"KRN",1.5,102,1,15,6)
S VALUE=$G(VAIP(13,3)) S:$L(VALUE) VALUE=VALUE_"^VA405.2"
"KRN",1.5,102,1,16,0)
AssignedWard^15^S^405^.06
"KRN",1.5,102,1,16,6)
S VALUE=$P($G(VAIP(5)),U,2)
"KRN",1.5,102,1,17,0)
AssignedRoom^16^S^405^.07
"KRN",1.5,102,1,17,4)
S VALUE=$P(VALUE,"-")
"KRN",1.5,102,1,17,6)
S VALUE=$P($G(VAIP(6)),U,2)
"KRN",1.5,102,1,18,0)
AssignedBed^17^S^405^.07
"KRN",1.5,102,1,18,4)
S VALUE=$P(VALUE,"-",2)
"KRN",1.5,102,1,18,6)
S VALUE=$P($G(VAIP(6)),U,2)
"KRN",1.5,102,1,19,0)
AdmitReason^21^E^405^.1^^^VPR CODE ONLY
"KRN",1.5,102,1,19,6)
S VALUE=$G(VAIP(13,7))
"KRN",1.5,102,1,20,0)
Specialties^30^L^^^^^VPR SPECIALTY
"KRN",1.5,102,1,20,1)
4^CareProviderType
"KRN",1.5,102,1,20,6)
D SPEC^VPRSDA
"KRN",1.5,102,1,22,0)
Extension^2^E^405^^^^VPR ADMISSION EXTENSION
"KRN",1.5,102,1,22,6)
S VALUE=DIEN
"KRN",1.5,102,1,23,0)
Priority^35^E^^^^^VPR CODE TABLE
"KRN",1.5,102,1,23,6)
S VALUE="P^PRIMARY"
"KRN",1.5,102,1,"B","AdmissionSource",15)

"KRN",1.5,102,1,"B","AdmitReason",19)

"KRN",1.5,102,1,"B","AdmittingClinician",13)

"KRN",1.5,102,1,"B","AssignedBed",18)

"KRN",1.5,102,1,"B","AssignedRoom",17)

"KRN",1.5,102,1,"B","AssignedWard",16)

"KRN",1.5,102,1,"B","AttendingClinicians",14)

"KRN",1.5,102,1,"B","ConsultingClinicians",4)

"KRN",1.5,102,1,"B","EncounterCodedType",3)

"KRN",1.5,102,1,"B","EncounterNumber",1)

"KRN",1.5,102,1,"B","EncounterType",2)

"KRN",1.5,102,1,"B","EnteredAt",9)

"KRN",1.5,102,1,"B","EnteredBy",8)

"KRN",1.5,102,1,"B","EnteredOn",10)

"KRN",1.5,102,1,"B","Extension",22)

"KRN",1.5,102,1,"B","FromTime",11)

"KRN",1.5,102,1,"B","HealthCareFacility",6)

"KRN",1.5,102,1,"B","Priority",23)

"KRN",1.5,102,1,"B","Specialties",20)

"KRN",1.5,102,1,"B","ToTime",12)

"KRN",1.5,102,1,"SEQ",2,22)

"KRN",1.5,102,1,"SEQ",3,1)

"KRN",1.5,102,1,"SEQ",5,2)

"KRN",1.5,102,1,"SEQ",6,3)

"KRN",1.5,102,1,"SEQ",7,13)

"KRN",1.5,102,1,"SEQ",8,14)

"KRN",1.5,102,1,"SEQ",9,4)

"KRN",1.5,102,1,"SEQ",14,15)

"KRN",1.5,102,1,"SEQ",15,16)

"KRN",1.5,102,1,"SEQ",16,17)

"KRN",1.5,102,1,"SEQ",17,18)

"KRN",1.5,102,1,"SEQ",21,19)

"KRN",1.5,102,1,"SEQ",22,6)

"KRN",1.5,102,1,"SEQ",30,20)

"KRN",1.5,102,1,"SEQ",35,23)

"KRN",1.5,102,1,"SEQ",41,8)

"KRN",1.5,102,1,"SEQ",42,9)

"KRN",1.5,102,1,"SEQ",43,10)

"KRN",1.5,102,1,"SEQ",44,11)

"KRN",1.5,102,1,"SEQ",45,12)

"KRN",1.5,102,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,102,3)
K VAIP,VASITE
"KRN",1.5,102,4)
D VAIP^VPRSDA(.DIEN,$G(DFN))
"KRN",1.5,102,5)
ADM^VPRSDAQ
"KRN",1.5,102,19,0)
^^3^3^3181227^
"KRN",1.5,102,19,1,0)
This entity populates the Encounter container in HealthShare, for inpatient
"KRN",1.5,102,19,2,0)
admissions. An admission must have a corresponding entry in the Visit 
"KRN",1.5,102,19,3,0)
file #9000010 to be included.
"KRN",1.5,103,-1)
0^76
"KRN",1.5,103,0)
VPR DOCUMENT STATUS^8925.6^^^^S
"KRN",1.5,103,.1)
DocumentCompletionStatus
"KRN",1.5,103,1,0)
^1.51^3^3
"KRN",1.5,103,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,103,1,1,2)
VA8925.6
"KRN",1.5,103,1,2,0)
Code^6^I
"KRN",1.5,103,1,3,0)
Description^7^S^8925.6^.01
"KRN",1.5,103,1,"B","Code",2)

"KRN",1.5,103,1,"B","Description",3)

"KRN",1.5,103,1,"B","SDACodingStandard",1)

"KRN",1.5,103,1,"SEQ",1,1)

"KRN",1.5,103,1,"SEQ",6,2)

"KRN",1.5,103,1,"SEQ",7,3)

"KRN",1.5,104,-1)
0^74
"KRN",1.5,104,0)
VPR CODE ONLY^^^^^S
"KRN",1.5,104,.1)
CodeTable
"KRN",1.5,104,1,0)
^1.51^1^1
"KRN",1.5,104,1,1,0)
Code^1^I
"KRN",1.5,104,1,"B","Code",1)

"KRN",1.5,104,1,"SEQ",1,1)

"KRN",1.5,105,-1)
0^75
"KRN",1.5,105,0)
VPR CW NOTES^8925^^^^S
"KRN",1.5,105,.1)
Alert
"KRN",1.5,105,1,0)
^1.51^13^10
"KRN",1.5,105,1,2,0)
AlertType^4^E^8925^.04^^1^VPR CODE TABLE
"KRN",1.5,105,1,2,6)
S VALUE=$S(VPRTYP="C":"C^CRISIS NOTE",VPRTYP="W":"W^CLINICAL WARNING",1:$G(VPRTIU(DIEN,.04,"I")))
"KRN",1.5,105,1,3,0)
Alert^5^E^8925^.01^^1^VPR DOCUMENT TITLE
"KRN",1.5,105,1,3,6)
S VALUE=$G(VPRTIU(DIEN,.01,"I"))
"KRN",1.5,105,1,4,0)
Comments^6^W^8925^2
"KRN",1.5,105,1,4,6)
M WP=VPRTIU(DIEN,"TEXT")
"KRN",1.5,105,1,5,0)
Status^7^S^8925^.05^^1
"KRN",1.5,105,1,5,4)
S VALUE=$S(VALUE<7:"C",VALUE<9:"A",1:"I")
"KRN",1.5,105,1,5,6)
S VALUE=$G(VPRTIU(DIEN,.05,"I"))
"KRN",1.5,105,1,6,0)
EnteredBy^8^E^8925^1202^^1^VPR USER
"KRN",1.5,105,1,6,6)
S VALUE=$G(VPRTIU(DIEN,1202,"I"))
"KRN",1.5,105,1,7,0)
EnteredAt^9^E^8925^1212^^1^VPR FACILITY
"KRN",1.5,105,1,7,6)
S VALUE=$G(VPRTIU(DIEN,1212,"I")) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,105,1,8,0)
EnteredOn^10^S^8925^1201^^1
"KRN",1.5,105,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,105,1,8,6)
S VALUE=$G(VPRTIU(DIEN,1201,"I"))
"KRN",1.5,105,1,9,0)
FromTime^11^S^8925^1301^^1
"KRN",1.5,105,1,9,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,105,1,9,6)
S VALUE=$G(VPRTIU(DIEN,1301,"I"))
"KRN",1.5,105,1,12,0)
Extension^3^E^8925
"KRN",1.5,105,1,13,0)
ExternalId^13^I
"KRN",1.5,105,1,13,4)
S VALUE=VALUE_";TIU(8925,"
"KRN",1.5,105,1,13,6)

"KRN",1.5,105,1,"B","Alert",3)

"KRN",1.5,105,1,"B","AlertType",2)

"KRN",1.5,105,1,"B","Comments",4)

"KRN",1.5,105,1,"B","EnteredAt",7)

"KRN",1.5,105,1,"B","EnteredBy",6)

"KRN",1.5,105,1,"B","EnteredOn",8)

"KRN",1.5,105,1,"B","Extension",12)

"KRN",1.5,105,1,"B","ExternalId",13)

"KRN",1.5,105,1,"B","FromTime",9)

"KRN",1.5,105,1,"B","Status",5)

"KRN",1.5,105,1,"SEQ",3,12)

"KRN",1.5,105,1,"SEQ",4,2)

"KRN",1.5,105,1,"SEQ",5,3)

"KRN",1.5,105,1,"SEQ",6,4)

"KRN",1.5,105,1,"SEQ",7,5)

"KRN",1.5,105,1,"SEQ",8,6)

"KRN",1.5,105,1,"SEQ",9,7)

"KRN",1.5,105,1,"SEQ",10,8)

"KRN",1.5,105,1,"SEQ",11,9)

"KRN",1.5,105,1,"SEQ",13,13)

"KRN",1.5,105,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,105,3)
K VPRTIU,VPRTYP,VASITE
"KRN",1.5,105,4)
K VPRTIU S VPRTYP=$P(DIEN,U,2),DIEN=+DIEN D EXTRACT^TIULQ(DIEN,"VPRTIU",,".01:.05;1201;1202;1212;1301",,1,"I")
"KRN",1.5,105,5)
CW^VPRSDAQ
"KRN",1.5,105,19,0)
^^1^1^3181227^
"KRN",1.5,105,19,1,0)
This entity populates the Alert container in HealthShare.
"KRN",1.5,106,-1)
0^88
"KRN",1.5,106,0)
VPR MED ADMINISTRATION^53.79^AORDX^^^S
"KRN",1.5,106,.1)
Administration
"KRN",1.5,106,1,0)
^1.51^8^8
"KRN",1.5,106,1,1,0)
EnteredBy^1^E^53.79^.05^^1^VPR USER
"KRN",1.5,106,1,2,0)
EnteredAt^2^E^53.79^.03^^1^VPR FACILITY
"KRN",1.5,106,1,3,0)
AdministeringProvider^5^E^53.79^.07^^1^VPR PROVIDER
"KRN",1.5,106,1,4,0)
AdministeredAtLocation^6^E^53.79^.02^^1^VPR LOCATION
"KRN",1.5,106,1,5,0)
AdministrationStatus^7^E^53.79^.09^^1^VPR CODE TABLE
"KRN",1.5,106,1,6,0)
EnteredOn^15^S^53.79^.04^^1
"KRN",1.5,106,1,6,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,106,1,7,0)
FromTime^16^S^53.79^.06^^1
"KRN",1.5,106,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,106,1,8,0)
AdministrationSite^14^E^53.79^.16^^^VPR CODE ONLY
"KRN",1.5,106,1,"B","AdministeredAtLocation",4)

"KRN",1.5,106,1,"B","AdministeringProvider",3)

"KRN",1.5,106,1,"B","AdministrationSite",8)

"KRN",1.5,106,1,"B","AdministrationStatus",5)

"KRN",1.5,106,1,"B","EnteredAt",2)

"KRN",1.5,106,1,"B","EnteredBy",1)

"KRN",1.5,106,1,"B","EnteredOn",6)

"KRN",1.5,106,1,"B","FromTime",7)

"KRN",1.5,106,1,"SEQ",1,1)

"KRN",1.5,106,1,"SEQ",2,2)

"KRN",1.5,106,1,"SEQ",5,3)

"KRN",1.5,106,1,"SEQ",6,4)

"KRN",1.5,106,1,"SEQ",7,5)

"KRN",1.5,106,1,"SEQ",14,8)

"KRN",1.5,106,1,"SEQ",15,6)

"KRN",1.5,106,1,"SEQ",16,7)

"KRN",1.5,106,2)
S VPRORD=+$G(FILTER("order"))
"KRN",1.5,106,3)
K VPRORD
"KRN",1.5,106,5)
BCMA^VPRSDAP(VPRORD)
"KRN",1.5,107,-1)
0^91
"KRN",1.5,107,0)
VPR LRAP REPORT^63.08^^^^S
"KRN",1.5,107,.1)
Document
"KRN",1.5,107,1,0)
^1.51^16^15
"KRN",1.5,107,1,1,0)
FromTime^1^S^63.08^.01^^1
"KRN",1.5,107,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,107,1,1,6)
S VALUE=9999999-(+DIEN)
"KRN",1.5,107,1,2,0)
ToTime^2^S^63.08^.03^^1
"KRN",1.5,107,1,2,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,107,1,2,6)
S VALUE=$P($G(LR0),U,3)
"KRN",1.5,107,1,3,0)
DocumentTime^6^S^63.08^.03^^1
"KRN",1.5,107,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,107,1,3,6)
S VALUE=$P($G(LR0),U,3)
"KRN",1.5,107,1,4,0)
NoteText^7^W^63.08
"KRN",1.5,107,1,4,6)
D LRPT^VPRSDA(VPRSUB,+DIEN)
"KRN",1.5,107,1,5,0)
DocumentType^8^E^63.08^^^^VPR CODE TABLE
"KRN",1.5,107,1,5,6)
S VALUE="LR^LABORATORY REPORT"
"KRN",1.5,107,1,6,0)
Clinician^9^E^63.08^.02^^1^VPR PROVIDER
"KRN",1.5,107,1,6,6)
S VALUE=$P($G(LR0),U,2)
"KRN",1.5,107,1,7,0)
AuthorizationTime^11^S^63.08^.11^^1
"KRN",1.5,107,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,107,1,7,6)
S VALUE=$P($G(LR0),U,11)
"KRN",1.5,107,1,8,0)
DocumentName^12^F^
"KRN",1.5,107,1,8,6)
S VALUE="LR "_$$NAME^VPRDLRA(VPRSUB)_" REPORT"
"KRN",1.5,107,1,9,0)
FileType^13^F^63.08
"KRN",1.5,107,1,9,2)
TXT
"KRN",1.5,107,1,10,0)
DocumentNumber^16^I
"KRN",1.5,107,1,10,4)
S VALUE=+DIEN_";"_VPRSUB
"KRN",1.5,107,1,11,0)
DocumentCompletionStatus^19^E^63.08^.11^^1^VPR CODE TABLE
"KRN",1.5,107,1,11,4)
S VALUE=$S(VALUE:"C^COMPLETED",1:"R^RELEASED") ;final, if date exists
"KRN",1.5,107,1,11,6)
S VALUE=$P($G(LR0),U,11)
"KRN",1.5,107,1,13,0)
EnteredBy^22^E^63.08^.02^^1^VPR USER
"KRN",1.5,107,1,13,6)
S VALUE=$P($G(LR0),U,2)
"KRN",1.5,107,1,14,0)
EnteredAt^23^E^63.08^^^^VPR FACILITY
"KRN",1.5,107,1,14,6)
S VALUE=$G(VASITE)
"KRN",1.5,107,1,15,0)
EnteredOn^24^S^63.08^.1^^1
"KRN",1.5,107,1,15,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,107,1,15,6)
S VALUE=$P($G(LR0),U,10)
"KRN",1.5,107,1,16,0)
Extension^5^E^63.08^^^^VPR LRAP EXTENSION
"KRN",1.5,107,1,16,6)
S VALUE=DIEN
"KRN",1.5,107,1,"B","AuthorizationTime",7)

"KRN",1.5,107,1,"B","Clinician",6)

"KRN",1.5,107,1,"B","DocumentCompletionStatus",11)

"KRN",1.5,107,1,"B","DocumentName",8)

"KRN",1.5,107,1,"B","DocumentNumber",10)

"KRN",1.5,107,1,"B","DocumentTime",3)

"KRN",1.5,107,1,"B","DocumentType",5)

"KRN",1.5,107,1,"B","EnteredAt",14)

"KRN",1.5,107,1,"B","EnteredBy",13)

"KRN",1.5,107,1,"B","EnteredOn",15)

"KRN",1.5,107,1,"B","Extension",16)

"KRN",1.5,107,1,"B","FileType",9)

"KRN",1.5,107,1,"B","FromTime",1)

"KRN",1.5,107,1,"B","NoteText",4)

"KRN",1.5,107,1,"B","ToTime",2)

"KRN",1.5,107,1,"SEQ",1,1)

"KRN",1.5,107,1,"SEQ",2,2)

"KRN",1.5,107,1,"SEQ",5,16)

"KRN",1.5,107,1,"SEQ",6,3)

"KRN",1.5,107,1,"SEQ",7,4)

"KRN",1.5,107,1,"SEQ",8,5)

"KRN",1.5,107,1,"SEQ",9,6)

"KRN",1.5,107,1,"SEQ",11,7)

"KRN",1.5,107,1,"SEQ",12,8)

"KRN",1.5,107,1,"SEQ",13,9)

"KRN",1.5,107,1,"SEQ",16,10)

"KRN",1.5,107,1,"SEQ",19,11)

"KRN",1.5,107,1,"SEQ",22,13)

"KRN",1.5,107,1,"SEQ",23,14)

"KRN",1.5,107,1,"SEQ",24,15)

"KRN",1.5,107,2)
S LRDFN=+$G(^DPT(DFN,"LR")) S:'DFN&ID LRDFN=+$P(ID,",",2),DFN=$$DFN^LRPXAPIU(LRDFN) S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,107,3)
K LRDFN,LR0,VPRSUB,VASITE
"KRN",1.5,107,4)
D LRAP1^VPRSDA(.DIEN)
"KRN",1.5,107,5)
LRAP^VPRSDAQ
"KRN",1.5,107,19,0)
^^1^1^3181227^
"KRN",1.5,107,19,1,0)
This entity populates the Document container in HealthShare.
"KRN",1.5,109,-1)
0^92
"KRN",1.5,109,0)
VPR PREGNANCY^790.05^^^^S
"KRN",1.5,109,.1)
SocialHistory
"KRN",1.5,109,1,0)
^1.51^10^6
"KRN",1.5,109,1,3,0)
SocialHabit^4^E^790.05^^^^VPR CODE TABLE
"KRN",1.5,109,1,3,6)
S VALUE="PREGNANCY^^VHAT"
"KRN",1.5,109,1,4,0)
SocialHabitCategory^6^E^790.05^^^^VPR CODE ONLY
"KRN",1.5,109,1,4,6)
S VALUE="PREGNANCY"
"KRN",1.5,109,1,7,0)
EnteredAt^10^E^790.05^^^^VPR FACILITY
"KRN",1.5,109,1,7,6)
S VALUE=$G(VASITE)
"KRN",1.5,109,1,8,0)
EnteredOn^11^S^790.05^.01^^1
"KRN",1.5,109,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,109,1,8,6)

"KRN",1.5,109,1,9,0)
Status^8^S^790.05^.03^^1
"KRN",1.5,109,1,9,4)
S VALUE=$S(VALUE:"A",1:"I")
"KRN",1.5,109,1,10,0)
ToTime^13^S^790.05^.04^^1
"KRN",1.5,109,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,109,1,"B","EnteredAt",7)

"KRN",1.5,109,1,"B","EnteredOn",8)

"KRN",1.5,109,1,"B","SocialHabit",3)

"KRN",1.5,109,1,"B","SocialHabitCategory",4)

"KRN",1.5,109,1,"B","Status",9)

"KRN",1.5,109,1,"B","ToTime",10)

"KRN",1.5,109,1,"SEQ",4,3)

"KRN",1.5,109,1,"SEQ",6,4)

"KRN",1.5,109,1,"SEQ",8,9)

"KRN",1.5,109,1,"SEQ",10,7)

"KRN",1.5,109,1,"SEQ",11,8)

"KRN",1.5,109,1,"SEQ",13,10)

"KRN",1.5,109,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,109,3)
K VASITE
"KRN",1.5,109,5)
WVPL^VPRSDAQ
"KRN",1.5,109,19,0)
^^1^1^3181227^
"KRN",1.5,109,19,1,0)
This entity populates the Social History container in HealthShare.
"KRN",1.5,110,-1)
0^89
"KRN",1.5,110,0)
VPR CPT^81^^^^S
"KRN",1.5,110,.1)
ProcedureCode
"KRN",1.5,110,1,0)
^1.51^4^4
"KRN",1.5,110,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,110,1,1,2)
CPT-4
"KRN",1.5,110,1,2,0)
OriginalText^3^F
"KRN",1.5,110,1,2,6)
S VALUE=$G(DATA) ;free text name from parent
"KRN",1.5,110,1,3,0)
Code^6^F^81
"KRN",1.5,110,1,3,6)
S VALUE=$P(VPRCPT,U)
"KRN",1.5,110,1,4,0)
Description^7^F^81
"KRN",1.5,110,1,4,6)
S VALUE=$P(VPRCPT,U,2)
"KRN",1.5,110,1,"B","Code",3)

"KRN",1.5,110,1,"B","Description",4)

"KRN",1.5,110,1,"B","OriginalText",2)

"KRN",1.5,110,1,"B","SDACodingStandard",1)

"KRN",1.5,110,1,"SEQ",1,1)

"KRN",1.5,110,1,"SEQ",3,2)

"KRN",1.5,110,1,"SEQ",6,3)

"KRN",1.5,110,1,"SEQ",7,4)

"KRN",1.5,110,3)
K VPRCPT
"KRN",1.5,110,4)
S VPRCPT=$P($$CPT^ICPTCOD(DIEN),U,2,3) S:VPRCPT<0 DDEOUT=1
"KRN",1.5,111,-1)
0^94
"KRN",1.5,111,0)
VPR V CPT^9000010.18^^^^S
"KRN",1.5,111,.1)
VProcedure
"KRN",1.5,111,1,0)
^1.51^12^10
"KRN",1.5,111,1,3,0)
EncounterNumber^4^S^9000010.18^.03^^1
"KRN",1.5,111,1,3,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,111,1,3,6)
S VALUE=$G(VPRVST)
"KRN",1.5,111,1,4,0)
Extension^5^E^9000010.18
"KRN",1.5,111,1,5,0)
Procedure^6^E^9000010.18^.01^^1^VPR CPT
"KRN",1.5,111,1,5,6)
S VALUE=$P(VPRCPT,U,2)
"KRN",1.5,111,1,6,0)
Clinician^7^E^9000010.18^1204^^1^VPR PROVIDER
"KRN",1.5,111,1,6,6)
S VALUE=$G(VPRCPT("ENCOUNTER PROVIDER"))
"KRN",1.5,111,1,7,0)
ProcedureTime^9^S^9000010.18^1201^^1
"KRN",1.5,111,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,111,1,7,6)
S VALUE=$G(VPRCPT("EVENT DATE AND TIME"))
"KRN",1.5,111,1,8,0)
EnteredBy^10^E^9000010.18^.03^.23^1^VPR USER
"KRN",1.5,111,1,8,6)
S VALUE=$P(VPRVST0,U,23)
"KRN",1.5,111,1,9,0)
EnteredAt^11^E^9000010.18^.03^.06^1^VPR FACILITY
"KRN",1.5,111,1,9,6)
S VALUE=$P(VPRVST0,U,6)
"KRN",1.5,111,1,10,0)
EnteredOn^12^S^9000010.18^.03^.02
"KRN",1.5,111,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,111,1,10,6)
S VALUE=$P(VPRVST0,U,2)
"KRN",1.5,111,1,11,0)
ExternalId^13^I
"KRN",1.5,111,1,11,4)
S VALUE=VALUE_";VCPT"
"KRN",1.5,111,1,12,0)
FromTime^2^S^9000010.18^1201^^1
"KRN",1.5,111,1,12,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,111,1,12,6)
S VALUE=$G(VPRCPT("EVENT DATE AND TIME"))
"KRN",1.5,111,1,"B","Clinician",6)

"KRN",1.5,111,1,"B","EncounterNumber",3)

"KRN",1.5,111,1,"B","EnteredAt",9)

"KRN",1.5,111,1,"B","EnteredBy",8)

"KRN",1.5,111,1,"B","EnteredOn",10)

"KRN",1.5,111,1,"B","Extension",4)

"KRN",1.5,111,1,"B","ExternalId",11)

"KRN",1.5,111,1,"B","FromTime",12)

"KRN",1.5,111,1,"B","Procedure",5)

"KRN",1.5,111,1,"B","ProcedureTime",7)

"KRN",1.5,111,1,"SEQ",2,12)

"KRN",1.5,111,1,"SEQ",4,3)

"KRN",1.5,111,1,"SEQ",5,4)

"KRN",1.5,111,1,"SEQ",6,5)

"KRN",1.5,111,1,"SEQ",7,6)

"KRN",1.5,111,1,"SEQ",9,7)

"KRN",1.5,111,1,"SEQ",10,8)

"KRN",1.5,111,1,"SEQ",11,9)

"KRN",1.5,111,1,"SEQ",12,10)

"KRN",1.5,111,1,"SEQ",13,11)

"KRN",1.5,111,3)
K VPRCPT,VPRVST,VPRVST0
"KRN",1.5,111,4)
K VPRCPT D VCPT^PXPXRM(+DIEN,.VPRCPT) S VPRVST=$G(VPRCPT("VISIT")),VPRCPT=DIEN,DIEN=+DIEN,VPRVST0=$G(^AUPNVSIT(+VPRVST,0))
"KRN",1.5,111,5)
CPT^VPRSDAQ
"KRN",1.5,112,-1)
0^96
"KRN",1.5,112,0)
VPR V POV^9000010.07^^^^S
"KRN",1.5,112,.1)
Diagnosis
"KRN",1.5,112,1,0)
^1.51^11^11
"KRN",1.5,112,1,1,0)
FromTime^2^S^9000010.07^.03^.01^1
"KRN",1.5,112,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,112,1,1,6)
S VALUE=$P(VPRVST0,U)
"KRN",1.5,112,1,2,0)
ToTime^3^S^9000010.07^.03^.18^1
"KRN",1.5,112,1,2,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,112,1,2,6)
S VALUE=$P(VPRVST0,U,18) S:'VALUE VALUE=$$CKOUT^VPRSDA(+VPRVST)
"KRN",1.5,112,1,3,0)
EncounterNumber^4^S^9000010.07^.03^^1
"KRN",1.5,112,1,3,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,112,1,3,6)
S VALUE=$G(VPRVST)
"KRN",1.5,112,1,4,0)
DiagnosingClinician^6^E^9000010.07^1204^^1^VPR PROVIDER
"KRN",1.5,112,1,4,6)
S VALUE=$G(VPRPOV("ENCOUNTER PROVIDER"))
"KRN",1.5,112,1,5,0)
Diagnosis^7^E^9000010.07^.01^^1^VPR ICD
"KRN",1.5,112,1,5,6)
S DATA("DATE")=+$G(^AUPNVSIT(+VPRVST,0)),DATA("TEXT")=$$POVNARR^VPRSDA,VALUE=$P(VPRPOV,U,2),DATA("SYS")=$P(VPRPOV,U,4) I DATA("SYS")="10D" S VALUE=$$CODEBA^ICDEX(VALUE,80)
"KRN",1.5,112,1,6,0)
DiagnosisType^8^E^9000010.07^.12^^1^VPR CODE TABLE
"KRN",1.5,112,1,6,6)
S VALUE=$G(VPRPOV("PRIMARY/SECONDARY"))
"KRN",1.5,112,1,7,0)
OnsetTime^13^S^9000010.07^.13^^1
"KRN",1.5,112,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,112,1,7,6)
S VALUE=$G(VPRPOV("DATE OF INJURY"))
"KRN",1.5,112,1,8,0)
EnteredBy^16^E^9000010.07^.03^.23^1^VPR USER
"KRN",1.5,112,1,8,6)
S VALUE=$P(VPRVST0,U,23)
"KRN",1.5,112,1,9,0)
EnteredAt^17^E^9000010.07^.03^.06^1^VPR FACILITY
"KRN",1.5,112,1,9,6)
S VALUE=$P(VPRVST0,U,6) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,112,1,10,0)
EnteredOn^18^S^9000010.07^.03^.02^1
"KRN",1.5,112,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,112,1,10,6)
S VALUE=$P(VPRVST0,U,2)
"KRN",1.5,112,1,11,0)
ExternalId^19^I
"KRN",1.5,112,1,11,4)
S VALUE=VALUE_";POV"
"KRN",1.5,112,1,"B","DiagnosingClinician",4)

"KRN",1.5,112,1,"B","Diagnosis",5)

"KRN",1.5,112,1,"B","DiagnosisType",6)

"KRN",1.5,112,1,"B","EncounterNumber",3)

"KRN",1.5,112,1,"B","EnteredAt",9)

"KRN",1.5,112,1,"B","EnteredBy",8)

"KRN",1.5,112,1,"B","EnteredOn",10)

"KRN",1.5,112,1,"B","ExternalId",11)

"KRN",1.5,112,1,"B","FromTime",1)

"KRN",1.5,112,1,"B","OnsetTime",7)

"KRN",1.5,112,1,"B","ToTime",2)

"KRN",1.5,112,1,"SEQ",2,1)

"KRN",1.5,112,1,"SEQ",3,2)

"KRN",1.5,112,1,"SEQ",4,3)

"KRN",1.5,112,1,"SEQ",6,4)

"KRN",1.5,112,1,"SEQ",7,5)

"KRN",1.5,112,1,"SEQ",8,6)

"KRN",1.5,112,1,"SEQ",13,7)

"KRN",1.5,112,1,"SEQ",16,8)

"KRN",1.5,112,1,"SEQ",17,9)

"KRN",1.5,112,1,"SEQ",18,10)

"KRN",1.5,112,1,"SEQ",19,11)

"KRN",1.5,112,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,112,3)
K VPRPOV,VPRVST,VPRVST0,VASITE
"KRN",1.5,112,4)
D:$D(^AUPNVPOV(+DIEN)) VPOV^PXPXRM(+DIEN,.VPRPOV) S VPRVST=$G(VPRPOV("VISIT")),VPRPOV=DIEN,DIEN=+DIEN,VPRVST0=$G(^AUPNVSIT(+VPRVST,0))
"KRN",1.5,112,5)
POV^VPRSDAQ
"KRN",1.5,112,19,0)
^^1^1^3181227^
"KRN",1.5,112,19,1,0)
This entity populates the Diagnosis container in HealthShare.
"KRN",1.5,113,-1)
0^100
"KRN",1.5,113,0)
VPR RAD REPORT^74^^^^S
"KRN",1.5,113,.1)
Document
"KRN",1.5,113,1,0)
^1.51^17^17
"KRN",1.5,113,1,1,0)
FromTime^1^S^74^3^^1
"KRN",1.5,113,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,113,1,2,0)
ToTime^2^S^74^7^^1
"KRN",1.5,113,1,2,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,113,1,3,0)
EncounterNumber^3^S^74
"KRN",1.5,113,1,3,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,113,1,3,6)
S VALUE=$$VNUM^VPRSDAR(DFN,VPRXID)
"KRN",1.5,113,1,4,0)
DocumentTime^6^S^74^8^^1
"KRN",1.5,113,1,4,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,113,1,5,0)
NoteText^7^W^74
"KRN",1.5,113,1,5,6)
M WP=@VPRAE3
"KRN",1.5,113,1,6,0)
DocumentType^8^E^74^^^^VPR CODE TABLE
"KRN",1.5,113,1,6,6)
S VALUE="RA^RADIOLOGY REPORT"
"KRN",1.5,113,1,7,0)
Clinician^9^E^70.03^15^^1^VPR PROVIDER
"KRN",1.5,113,1,7,6)
S VALUE=$P($G(@VPRAE2@("P")),U) S:'VALUE VALUE=$P($G(@VPRAE2@("P")),U,2) I 'VALUE S DDEOUT=1
"KRN",1.5,113,1,8,0)
TranscriptionTime^10^S^74^6^^1
"KRN",1.5,113,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,113,1,8,6)
S VALUE=$P($G(@VPRAE2@("P")),U,3)
"KRN",1.5,113,1,9,0)
AuthorizationTime^11^S^74^7^^1
"KRN",1.5,113,1,9,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,113,1,10,0)
DocumentName^12^S^74
"KRN",1.5,113,1,10,6)
S VALUE=$G(RAPROC) S:VALUE="" VALUE="RADIOLOGY REPORT"
"KRN",1.5,113,1,11,0)
DocumentNumber^16^I
"KRN",1.5,113,1,11,4)
S VALUE=VALUE_";RA"
"KRN",1.5,113,1,11,5)
S:$P(VALUE,";",2)="RA" VALUE=+VALUE
"KRN",1.5,113,1,12,0)
DocumentCompletionStatus^19^E^74^5^^1^VPR CODE TABLE
"KRN",1.5,113,1,12,4)
I $D(VPRAE2),$D(@VPRAE2) S VALUE=VALUE_U_$P(@VPRAE2,U)
"KRN",1.5,113,1,13,0)
EnteredBy^22^E^74^11^^1^VPR USER
"KRN",1.5,113,1,14,0)
EnteredAt^23^E^74^^^^VPR FACILITY
"KRN",1.5,113,1,14,6)
S VALUE=$G(VASITE)
"KRN",1.5,113,1,15,0)
EnteredOn^24^S^74^6^^1
"KRN",1.5,113,1,15,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,113,1,15,6)
S VALUE=$P($G(@VPRAE2@("P")),U,3)
"KRN",1.5,113,1,16,0)
FileType^13^F
"KRN",1.5,113,1,16,2)
TXT
"KRN",1.5,113,1,17,0)
Extension^5^E^74^^^^VPR RAD RPT EXTENSION
"KRN",1.5,113,1,17,6)
S VALUE=DIEN
"KRN",1.5,113,1,"B","AuthorizationTime",9)

"KRN",1.5,113,1,"B","Clinician",7)

"KRN",1.5,113,1,"B","DocumentCompletionStatus",12)

"KRN",1.5,113,1,"B","DocumentName",10)

"KRN",1.5,113,1,"B","DocumentNumber",11)

"KRN",1.5,113,1,"B","DocumentTime",4)

"KRN",1.5,113,1,"B","DocumentType",6)

"KRN",1.5,113,1,"B","EncounterNumber",3)

"KRN",1.5,113,1,"B","EnteredAt",14)

"KRN",1.5,113,1,"B","EnteredBy",13)

"KRN",1.5,113,1,"B","EnteredOn",15)

"KRN",1.5,113,1,"B","Extension",17)

"KRN",1.5,113,1,"B","FileType",16)

"KRN",1.5,113,1,"B","FromTime",1)

"KRN",1.5,113,1,"B","NoteText",5)

"KRN",1.5,113,1,"B","ToTime",2)

"KRN",1.5,113,1,"B","TranscriptionTime",8)

"KRN",1.5,113,1,"SEQ",1,1)

"KRN",1.5,113,1,"SEQ",2,2)

"KRN",1.5,113,1,"SEQ",3,3)

"KRN",1.5,113,1,"SEQ",5,17)

"KRN",1.5,113,1,"SEQ",6,4)

"KRN",1.5,113,1,"SEQ",7,5)

"KRN",1.5,113,1,"SEQ",8,6)

"KRN",1.5,113,1,"SEQ",9,7)

"KRN",1.5,113,1,"SEQ",10,8)

"KRN",1.5,113,1,"SEQ",11,9)

"KRN",1.5,113,1,"SEQ",12,10)

"KRN",1.5,113,1,"SEQ",13,16)

"KRN",1.5,113,1,"SEQ",16,11)

"KRN",1.5,113,1,"SEQ",19,12)

"KRN",1.5,113,1,"SEQ",22,13)

"KRN",1.5,113,1,"SEQ",23,14)

"KRN",1.5,113,1,"SEQ",24,15)

"KRN",1.5,113,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,113,3)
K ^TMP($J,"RAE2"),^TMP($J,"RAE3"),VPRXID,VPRAE2,VPRAE3,RAPROC,VASITE
"KRN",1.5,113,4)
D RPT1^VPRSDAR
"KRN",1.5,113,5)
RPTS^VPRSDAR
"KRN",1.5,113,19,0)
^^1^1^3181227^
"KRN",1.5,113,19,1,0)
This entity populates the Document container in HealthShare.
"KRN",1.5,114,-1)
0^99
"KRN",1.5,114,0)
VPR LRMI REPORT^63.05^^^^S
"KRN",1.5,114,.1)
Document
"KRN",1.5,114,1,0)
^1.51^16^14
"KRN",1.5,114,1,1,0)
FromTime^1^S^63.05^.01^^1
"KRN",1.5,114,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,114,1,1,6)
S VALUE=9999999-(+DIEN)
"KRN",1.5,114,1,2,0)
ToTime^2^S^63.05^.03^^1
"KRN",1.5,114,1,2,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,114,1,2,6)
S VALUE=$P($G(LR0),U,3)
"KRN",1.5,114,1,3,0)
DocumentTime^6^S^63.05^.03^^1
"KRN",1.5,114,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,114,1,3,6)
S VALUE=$P($G(LR0),U,3)
"KRN",1.5,114,1,4,0)
NoteText^7^W^63.05
"KRN",1.5,114,1,4,6)
D LRPT^VPRSDA(VPRSUB,+DIEN)
"KRN",1.5,114,1,5,0)
DocumentType^8^E^63.05^^^^VPR CODE TABLE
"KRN",1.5,114,1,5,6)
S VALUE="LR^LABORATORY REPORT"
"KRN",1.5,114,1,6,0)
Clinician^9^E^63.05^.04^^1^VPR PROVIDER
"KRN",1.5,114,1,6,6)
S VALUE=$P($G(LR0),U,4)
"KRN",1.5,114,1,7,0)
AuthorizationTime^11^S^63.05^.03^^1
"KRN",1.5,114,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,114,1,7,6)
S VALUE=$P($G(LR0),U,3)
"KRN",1.5,114,1,8,0)
DocumentName^12^F^
"KRN",1.5,114,1,8,6)
S VALUE="LR MICROBIOLOGY REPORT"
"KRN",1.5,114,1,9,0)
FileType^13^F^
"KRN",1.5,114,1,9,2)
TXT
"KRN",1.5,114,1,10,0)
DocumentNumber^16^I
"KRN",1.5,114,1,10,4)
S VALUE=+DIEN_";MI"
"KRN",1.5,114,1,11,0)
DocumentCompletionStatus^19^E^63.05^.03^^1^VPR CODE TABLE
"KRN",1.5,114,1,11,4)
S VALUE=$S(VALUE:"C^COMPLETED",1:"") ;final, if date exists
"KRN",1.5,114,1,11,6)
S VALUE=$P($G(LR0),U,3)
"KRN",1.5,114,1,14,0)
EnteredAt^23^E^63.05^.112^^1^VPR FACILITY
"KRN",1.5,114,1,14,6)
S VALUE=$P($G(LR0),U,14) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,114,1,15,0)
EnteredOn^24^S^63.05^.1^^1
"KRN",1.5,114,1,15,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,114,1,15,6)
S VALUE=$P($G(LR0),U,10)
"KRN",1.5,114,1,16,0)
Extension^5^E^63.05^^^^VPR LRMI EXTENSION
"KRN",1.5,114,1,16,6)
S VALUE=DIEN
"KRN",1.5,114,1,"B","AuthorizationTime",7)

"KRN",1.5,114,1,"B","Clinician",6)

"KRN",1.5,114,1,"B","DocumentCompletionStatus",11)

"KRN",1.5,114,1,"B","DocumentName",8)

"KRN",1.5,114,1,"B","DocumentNumber",10)

"KRN",1.5,114,1,"B","DocumentTime",3)

"KRN",1.5,114,1,"B","DocumentType",5)

"KRN",1.5,114,1,"B","EnteredAt",14)

"KRN",1.5,114,1,"B","EnteredOn",15)

"KRN",1.5,114,1,"B","Extension",16)

"KRN",1.5,114,1,"B","FileType",9)

"KRN",1.5,114,1,"B","FromTime",1)

"KRN",1.5,114,1,"B","NoteText",4)

"KRN",1.5,114,1,"B","ToTime",2)

"KRN",1.5,114,1,"SEQ",1,1)

"KRN",1.5,114,1,"SEQ",2,2)

"KRN",1.5,114,1,"SEQ",5,16)

"KRN",1.5,114,1,"SEQ",6,3)

"KRN",1.5,114,1,"SEQ",7,4)

"KRN",1.5,114,1,"SEQ",8,5)

"KRN",1.5,114,1,"SEQ",9,6)

"KRN",1.5,114,1,"SEQ",11,7)

"KRN",1.5,114,1,"SEQ",12,8)

"KRN",1.5,114,1,"SEQ",13,9)

"KRN",1.5,114,1,"SEQ",16,10)

"KRN",1.5,114,1,"SEQ",19,11)

"KRN",1.5,114,1,"SEQ",23,14)

"KRN",1.5,114,1,"SEQ",24,15)

"KRN",1.5,114,2)
S LRDFN=+$G(^DPT(DFN,"LR")) S:'DFN&ID LRDFN=+$P(ID,",",2),DFN=$$DFN^LRPXAPIU(LRDFN) S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,114,3)
K LRDFN,LR0,VPRSUB,VASITE
"KRN",1.5,114,4)
D LRAP1^VPRSDA(.DIEN)
"KRN",1.5,114,5)
LRMI^VPRSDAQ
"KRN",1.5,114,19,0)
^^1^1^3181227^
"KRN",1.5,114,19,1,0)
This entity populates the Document container in HealthShare.
"KRN",1.5,115,-1)
0^101
"KRN",1.5,115,0)
VPR SCHEDULED ADMISSION^41.1^^^^S
"KRN",1.5,115,.1)
Appointment
"KRN",1.5,115,1,0)
^1.51^8^8
"KRN",1.5,115,1,1,0)
Status^4^S^41.1^13^^1
"KRN",1.5,115,1,1,4)
S VPRCANCL=VALUE,VALUE=$S(VALUE:"CANCELLED",1:"SCHEDULED/KEPT")
"KRN",1.5,115,1,2,0)
Type^6^E^41.1^^^^VPR CODE TABLE
"KRN",1.5,115,1,2,6)
S VALUE="I^INPATIENT"
"KRN",1.5,115,1,3,0)
FillerApptId^7^I
"KRN",1.5,115,1,4,0)
Location^12^E^41.1^8^44^1^VPR LOCATION
"KRN",1.5,115,1,5,0)
EnteredBy^14^E^41.1^11^^1^VPR USER
"KRN",1.5,115,1,6,0)
EnteredAt^15^E^41.1^12^.07^1^VPR FACILITY
"KRN",1.5,115,1,7,0)
FromTime^17^S^41.1^2^^1
"KRN",1.5,115,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,115,1,8,0)
ToTime^18^S^41.1^17^.01^1
"KRN",1.5,115,1,8,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,115,1,8,6)
S:$G(VPRCANCL) VALUE=VPRCANCL
"KRN",1.5,115,1,"B","EnteredAt",6)

"KRN",1.5,115,1,"B","EnteredBy",5)

"KRN",1.5,115,1,"B","FillerApptId",3)

"KRN",1.5,115,1,"B","FromTime",7)

"KRN",1.5,115,1,"B","Location",4)

"KRN",1.5,115,1,"B","Status",1)

"KRN",1.5,115,1,"B","ToTime",8)

"KRN",1.5,115,1,"B","Type",2)

"KRN",1.5,115,1,"SEQ",4,1)

"KRN",1.5,115,1,"SEQ",6,2)

"KRN",1.5,115,1,"SEQ",7,3)

"KRN",1.5,115,1,"SEQ",12,4)

"KRN",1.5,115,1,"SEQ",14,5)

"KRN",1.5,115,1,"SEQ",15,6)

"KRN",1.5,115,1,"SEQ",17,7)

"KRN",1.5,115,1,"SEQ",18,8)

"KRN",1.5,115,3)
K VPRCANCL
"KRN",1.5,115,5)
SCHADM^VPRSDAQ
"KRN",1.5,115,19,0)
^^1^1^3181227^
"KRN",1.5,115,19,1,0)
This entity populates the Appointment container in HealthShare.
"KRN",1.5,116,-1)
0^102
"KRN",1.5,116,0)
VPR DRUG CLASS^50.605^^^^S
"KRN",1.5,116,.1)
ATCCode
"KRN",1.5,116,1,0)
^1.51^3^3
"KRN",1.5,116,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,116,1,1,2)
VA50.605
"KRN",1.5,116,1,2,0)
Code^6^S^50.605^.01
"KRN",1.5,116,1,2,6)
S VALUE=$P(VPRDCLS,U,2)
"KRN",1.5,116,1,3,0)
Description^7^S^50.605^1
"KRN",1.5,116,1,3,6)
S VALUE=$P(VPRDCLS,U,3)
"KRN",1.5,116,1,"B","Code",2)

"KRN",1.5,116,1,"B","Description",3)

"KRN",1.5,116,1,"B","SDACodingStandard",1)

"KRN",1.5,116,1,"SEQ",1,1)

"KRN",1.5,116,1,"SEQ",6,2)

"KRN",1.5,116,1,"SEQ",7,3)

"KRN",1.5,116,3)
K VPRDCLS
"KRN",1.5,116,4)
S VPRDCLS=$G(DIEN),DIEN=$P(DIEN,U)
"KRN",1.5,117,-1)
0^103
"KRN",1.5,117,0)
VPR DRUG GENERIC^50.6^^^^S
"KRN",1.5,117,.1)
Generic
"KRN",1.5,117,1,0)
^1.51^3^3
"KRN",1.5,117,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,117,1,1,2)
VA50.6
"KRN",1.5,117,1,1,6)
S VALUE=$P($G(DATA),U,3)
"KRN",1.5,117,1,2,0)
Code^6^I^50.6^
"KRN",1.5,117,1,2,6)
S VALUE=$P($G(DATA),U)
"KRN",1.5,117,1,3,0)
Description^7^S^50.6^.01
"KRN",1.5,117,1,3,6)
S VALUE=$P($G(DATA),U,2)
"KRN",1.5,117,1,"B","Code",2)

"KRN",1.5,117,1,"B","Description",3)

"KRN",1.5,117,1,"B","SDACodingStandard",1)

"KRN",1.5,117,1,"SEQ",1,1)

"KRN",1.5,117,1,"SEQ",6,2)

"KRN",1.5,117,1,"SEQ",7,3)

"KRN",1.5,118,-1)
0^105
"KRN",1.5,118,0)
VPR IV PRODUCT^50.68^^^^S
"KRN",1.5,118,.1)
DrugProduct
"KRN",1.5,118,1,0)
^1.51^9^9
"KRN",1.5,118,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,118,1,1,2)
VA50.68
"KRN",1.5,118,1,1,6)
S VALUE=$P($G(DATA),U,3)
"KRN",1.5,118,1,2,0)
Code^6^I^50.68^
"KRN",1.5,118,1,2,6)
S VALUE=$P($G(DATA),U)
"KRN",1.5,118,1,3,0)
Description^7^S^50.68^.01
"KRN",1.5,118,1,3,6)
S VALUE=$P($G(DATA),U,2)
"KRN",1.5,118,1,4,0)
ATCCode^18^E^50.68^15^^1^VPR DRUG CLASS
"KRN",1.5,118,1,4,6)
S VALUE=$G(@VPRVAP@(25))
"KRN",1.5,118,1,5,0)
Generic^22^E^50.68^.05^^1^VPR DRUG GENERIC
"KRN",1.5,118,1,5,6)
S DATA=$G(@VPRVAP@(20)),VALUE=$P(DATA,U) D:DATA CODE^VPRSDAP(.DATA,50.6)
"KRN",1.5,118,1,6,0)
StrengthQty^19^S^50.68^2
"KRN",1.5,118,1,6,6)
S:$P(VPRPSIV,U,3)="A" VALUE=+$P($P(VPRPSIV,U,2)," ") I $P(VPRPSIV,U,3)'="A" S DDEOUT=1
"KRN",1.5,118,1,7,0)
StrengthUnits^20^E^50.68^3^^^VPR CODE ONLY
"KRN",1.5,118,1,7,6)
S:$P(VPRPSIV,U,3)="A" VALUE=$P($P(VPRPSIV,U,2)," ",2) I $P(VPRPSIV,U,3)'="A" S DDEOUT=1
"KRN",1.5,118,1,8,0)
BaseQty^8^F
"KRN",1.5,118,1,8,6)
S:$P(VPRPSIV,U,3)="B" VALUE=+$P($P(VPRPSIV,U,2)," ") I $P(VPRPSIV,U,3)'="B" S DDEOUT=1
"KRN",1.5,118,1,9,0)
BaseUnits^9^E^^^^^VPR CODE ONLY
"KRN",1.5,118,1,9,6)
S:$P(VPRPSIV,U,3)="B" VALUE=$P($P(VPRPSIV,U,2)," ",2) I $P(VPRPSIV,U,3)'="B" S DDEOUT=1
"KRN",1.5,118,1,"B","ATCCode",4)

"KRN",1.5,118,1,"B","BaseQty",8)

"KRN",1.5,118,1,"B","BaseUnits",9)

"KRN",1.5,118,1,"B","Code",2)

"KRN",1.5,118,1,"B","Description",3)

"KRN",1.5,118,1,"B","Generic",5)

"KRN",1.5,118,1,"B","SDACodingStandard",1)

"KRN",1.5,118,1,"B","StrengthQty",6)

"KRN",1.5,118,1,"B","StrengthUnits",7)

"KRN",1.5,118,1,"SEQ",1,1)

"KRN",1.5,118,1,"SEQ",6,2)

"KRN",1.5,118,1,"SEQ",7,3)

"KRN",1.5,118,1,"SEQ",8,8)

"KRN",1.5,118,1,"SEQ",9,9)

"KRN",1.5,118,1,"SEQ",18,4)

"KRN",1.5,118,1,"SEQ",19,6)

"KRN",1.5,118,1,"SEQ",20,7)

"KRN",1.5,118,1,"SEQ",22,5)

"KRN",1.5,118,3)
K VPRPSIV I $D(VPRVAP) K @VPRVAP,VPRVAP
"KRN",1.5,118,4)
D IV1^VPRSDAP(.DIEN)
"KRN",1.5,119,-1)
0^120
"KRN",1.5,119,0)
VPR PATIENT EXTENSION^2^^^^S
"KRN",1.5,119,.1)
PatientExtension
"KRN",1.5,119,1,0)
^1.51^19^19
"KRN",1.5,119,1,1,0)
Bid^1^F
"KRN",1.5,119,1,1,6)
S VALUE=$E($G(VADM(1)))_$G(VA("BID"))
"KRN",1.5,119,1,2,0)
Dob^2^S^2^.03^^1
"KRN",1.5,119,1,2,6)
S VALUE=$P($P($G(VADM(3)),U),".")
"KRN",1.5,119,1,3,0)
IsExposureAO^3^S^2^.32102^^1
"KRN",1.5,119,1,3,4)
S VALUE=$S(VALUE:"true",VALUE="Y":"true",1:"false")
"KRN",1.5,119,1,3,6)
S VALUE=+$G(VASV(2))
"KRN",1.5,119,1,4,0)
IsExposureIR^4^S^2^.32103^^1
"KRN",1.5,119,1,4,4)
S VALUE=$S(VALUE:"true","Yy"[$E(VALUE):"true",1:"false")
"KRN",1.5,119,1,4,6)
S VALUE=+$G(VASV(3))
"KRN",1.5,119,1,5,0)
IsExposurePG^5^F
"KRN",1.5,119,1,5,6)
S VALUE=$S(VASV(11)!VASV(12)!VASV(13):"true",1:"false") ;OIF/OEF
"KRN",1.5,119,1,6,0)
IsExposureCV^6^S^2^.5291^^1
"KRN",1.5,119,1,6,4)
S VALUE=$S(VALUE:"true",VALUE="Y":"true",1:"false")
"KRN",1.5,119,1,6,6)
S VALUE=+$G(VASV(5))
"KRN",1.5,119,1,7,0)
IsExposureHNC^7^F
"KRN",1.5,119,1,7,6)
N X,HNC S X=$$GETCUR^DGNTAPI(DFN,"HNC"),X=+($G(HNC("STAT"))),VALUE=$S(X=4:"true",X=5:"true",X=1:"false",X=6:"false",1:"")
"KRN",1.5,119,1,8,0)
VeteranLrdfn^9^S^2^63^^1
"KRN",1.5,119,1,8,6)
S VALUE=$G(^DPT(DFN,"LR"))
"KRN",1.5,119,1,9,0)
IsVeteran^10^S^2^1901^^1
"KRN",1.5,119,1,9,4)
S VALUE=$S(VALUE:"true","Yy"[$E(VALUE):"true",1:"false")
"KRN",1.5,119,1,9,6)
S VALUE=+$G(VAEL(4))
"KRN",1.5,119,1,10,0)
IsServiceConnected^11^S^2^.301^^1
"KRN",1.5,119,1,10,4)
S VALUE=$S(VALUE:"true","Yy"[$E(VALUE):"true",1:"false")
"KRN",1.5,119,1,10,6)
S VALUE=+$G(VAEL(3))
"KRN",1.5,119,1,11,0)
ScPercent^12^S^2^.302
"KRN",1.5,119,1,11,6)
S VALUE=$P(VAEL(3),U,2)
"KRN",1.5,119,1,12,0)
ServicePeriod^13^S^2^.323
"KRN",1.5,119,1,12,6)
S:$G(VAEL(2)) VALUE=$P(VAEL(2),U,2)
"KRN",1.5,119,1,13,0)
MeansTestStatus^14^S^2^.14
"KRN",1.5,119,1,13,6)
S:$L($G(VAEL(9))) VALUE=$P(VAEL(9),U,2)
"KRN",1.5,119,1,14,0)
EligibilityStatus^15^S^2^.3611
"KRN",1.5,119,1,14,6)
S:$L($G(VAEL(8))) VALUE=$P(VAEL(8),U,2)
"KRN",1.5,119,1,15,0)
Eligibilities^16^L^^^^^VPR PATIENT ELIGIBILITY
"KRN",1.5,119,1,15,1)
4^Eligibility
"KRN",1.5,119,1,15,6)
N X M DLIST=VAEL(1) S X=$G(VAEL(1)) S:X DLIST(.5)=X_"^1"
"KRN",1.5,119,1,16,0)
Disabilities^17^L^2.04^^^^VPR PATIENT DISABILITY
"KRN",1.5,119,1,16,1)
2^Disability
"KRN",1.5,119,1,17,0)
IsExposureMST^8^F^
"KRN",1.5,119,1,17,6)
N X S X=$P($$GETSTAT^DGMSTAPI(DFN),U,2),VALUE=$S(X="Y":"true",X="N":"false",1:"")
"KRN",1.5,119,1,18,0)
CareTeamName^18^F
"KRN",1.5,119,1,18,6)
S VPRTEAM=$$INSTPCTM^SCAPMC(DFN) S:VPRTEAM VALUE=$P(VPRTEAM,U,2)
"KRN",1.5,119,1,19,0)
CareTeamMembers^19^L^^^^^VPR TEAM MEMBER
"KRN",1.5,119,1,19,1)
4^CareProvider
"KRN",1.5,119,1,19,6)
D PCMM^VPRSDA
"KRN",1.5,119,1,"B","Bid",1)

"KRN",1.5,119,1,"B","CareTeamMembers",19)

"KRN",1.5,119,1,"B","CareTeamName",18)

"KRN",1.5,119,1,"B","Disabilities",16)

"KRN",1.5,119,1,"B","Dob",2)

"KRN",1.5,119,1,"B","Eligibilities",15)

"KRN",1.5,119,1,"B","EligibilityStatus",14)

"KRN",1.5,119,1,"B","IsExposureAO",3)

"KRN",1.5,119,1,"B","IsExposureCV",6)

"KRN",1.5,119,1,"B","IsExposureHNC",7)

"KRN",1.5,119,1,"B","IsExposureIR",4)

"KRN",1.5,119,1,"B","IsExposureMST",17)

"KRN",1.5,119,1,"B","IsExposurePG",5)

"KRN",1.5,119,1,"B","IsServiceConnected",10)

"KRN",1.5,119,1,"B","IsVeteran",9)

"KRN",1.5,119,1,"B","MeansTestStatus",13)

"KRN",1.5,119,1,"B","ScPercent",11)

"KRN",1.5,119,1,"B","ServicePeriod",12)

"KRN",1.5,119,1,"B","VeteranLrdfn",8)

"KRN",1.5,119,1,"SEQ",1,1)

"KRN",1.5,119,1,"SEQ",2,2)

"KRN",1.5,119,1,"SEQ",3,3)

"KRN",1.5,119,1,"SEQ",4,4)

"KRN",1.5,119,1,"SEQ",5,5)

"KRN",1.5,119,1,"SEQ",6,6)

"KRN",1.5,119,1,"SEQ",7,7)

"KRN",1.5,119,1,"SEQ",8,17)

"KRN",1.5,119,1,"SEQ",9,8)

"KRN",1.5,119,1,"SEQ",10,9)

"KRN",1.5,119,1,"SEQ",11,10)

"KRN",1.5,119,1,"SEQ",12,11)

"KRN",1.5,119,1,"SEQ",13,12)

"KRN",1.5,119,1,"SEQ",14,13)

"KRN",1.5,119,1,"SEQ",15,14)

"KRN",1.5,119,1,"SEQ",16,15)

"KRN",1.5,119,1,"SEQ",17,16)

"KRN",1.5,119,1,"SEQ",18,18)

"KRN",1.5,119,1,"SEQ",19,19)

"KRN",1.5,119,2)
D 7^VADPT
"KRN",1.5,119,3)
K VAEL,VASV,VAERR,VPRTEAM,^TMP("SC TMP LIST",$J)
"KRN",1.5,119,19,0)
^^2^2^3180611^^
"KRN",1.5,119,19,1,0)
This entity extends VPR PATIENT, using supported calls to VADPT to
"KRN",1.5,119,19,2,0)
retrieve the data.
"KRN",1.5,120,-1)
0^119
"KRN",1.5,120,0)
VPR PATIENT ELIGIBILITY^8^^^^S
"KRN",1.5,120,.1)
Eligibility
"KRN",1.5,120,1,0)
^1.51^2^2
"KRN",1.5,120,1,1,0)
Name^1^S^8^.01
"KRN",1.5,120,1,1,6)
S VALUE=$P($G(VPRELIG),U)
"KRN",1.5,120,1,2,0)
IsPrimary^2^F
"KRN",1.5,120,1,2,6)
S VALUE=$S($P($G(VPRELIG),U,2):"true",1:"false")
"KRN",1.5,120,1,"B","IsPrimary",2)

"KRN",1.5,120,1,"B","Name",1)

"KRN",1.5,120,1,"SEQ",1,1)

"KRN",1.5,120,1,"SEQ",2,2)

"KRN",1.5,120,3)
K VPRELIG
"KRN",1.5,120,4)
S VPRELIG=$P(DIEN,U,2,3),DIEN=+DIEN
"KRN",1.5,120,19,0)
^^4^4^3180607^
"KRN",1.5,120,19,1,0)
This entity supports VPR PATIENT, returning an eligibility for which the 
"KRN",1.5,120,19,2,0)
patient is entitled to care. Since this data is usually extracted via 
"KRN",1.5,120,19,3,0)
VADPT, the string ien^name^primary may be passed in as the ID and the 
"KRN",1.5,120,19,4,0)
properties will look for the existence of these pieces first.
"KRN",1.5,121,-1)
0^118
"KRN",1.5,121,0)
VPR PATIENT DISABILITY^2.04^^^^S
"KRN",1.5,121,.1)
Disability
"KRN",1.5,121,1,0)
^1.51^3^3
"KRN",1.5,121,1,1,0)
Name^1^S^2.04^.01
"KRN",1.5,121,1,2,0)
ScPercent^2^S^2.04^2
"KRN",1.5,121,1,3,0)
IsDisabilityscFlag^3^S^2.04^3^^1
"KRN",1.5,121,1,3,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,121,1,"B","IsDisabilityscFlag",3)

"KRN",1.5,121,1,"B","Name",1)

"KRN",1.5,121,1,"B","ScPercent",2)

"KRN",1.5,121,1,"SEQ",1,1)

"KRN",1.5,121,1,"SEQ",2,2)

"KRN",1.5,121,1,"SEQ",3,3)

"KRN",1.5,121,19,0)
^^2^2^3180607^
"KRN",1.5,121,19,1,0)
This entity supports VPR PATIENT, returning a disability the patient has 
"KRN",1.5,121,19,2,0)
sustained.
"KRN",1.5,122,-1)
0^121
"KRN",1.5,122,0)
VPR PERSON CLASS EXTENSION^8932.1^^^^S
"KRN",1.5,122,.1)
CareProviderTypeExtension
"KRN",1.5,122,1,0)
^1.51^2^2
"KRN",1.5,122,1,1,0)
Classification^1^S^8932.1^1
"KRN",1.5,122,1,2,0)
Specialization^2^S^8932.1^2
"KRN",1.5,122,1,"B","Classification",1)

"KRN",1.5,122,1,"B","Specialization",2)

"KRN",1.5,122,1,"SEQ",1,1)

"KRN",1.5,122,1,"SEQ",2,2)

"KRN",1.5,122,19,0)
^^1^1^3180607^
"KRN",1.5,122,19,1,0)
This entity extends VPR PERSON CLASS, to expose additional data elements.
"KRN",1.5,123,-1)
0^117
"KRN",1.5,123,0)
VPR LOCATION EXTENSION^44^^^^S
"KRN",1.5,123,.1)
HealthCareFacilityExtension
"KRN",1.5,123,1,0)
^1.51^3^3
"KRN",1.5,123,1,1,0)
StopCode^1^E^44^8^^1^VPR AMIS
"KRN",1.5,123,1,1,4)

"KRN",1.5,123,1,2,0)
CreditStopCode^2^E^44^2503^^1^VPR AMIS
"KRN",1.5,123,1,2,4)

"KRN",1.5,123,1,3,0)
Service^3^S^44^9
"KRN",1.5,123,1,"B","CreditStopCode",2)

"KRN",1.5,123,1,"B","Service",3)

"KRN",1.5,123,1,"B","StopCode",1)

"KRN",1.5,123,1,"SEQ",1,1)

"KRN",1.5,123,1,"SEQ",2,2)

"KRN",1.5,123,1,"SEQ",3,3)

"KRN",1.5,123,19,0)
^^1^1^3180607^
"KRN",1.5,123,19,1,0)
This entity extends VPR LOCATION, to expose additional data elements.
"KRN",1.5,124,-1)
0^109
"KRN",1.5,124,0)
VPR COMMENT^^^^^S
"KRN",1.5,124,.1)
Comment
"KRN",1.5,124,1,0)
^1.51^6^6
"KRN",1.5,124,1,1,0)
Id^1^I
"KRN",1.5,124,1,1,6)

"KRN",1.5,124,1,2,0)
EnteredAt^2^E^^^^^VPR FACILITY
"KRN",1.5,124,1,2,6)
S VALUE=$P(VPRCMT,U,5)
"KRN",1.5,124,1,3,0)
EnteredBy^3^E^^^^^VPR USER
"KRN",1.5,124,1,3,6)
S VALUE=$P(VPRCMT,U,3)
"KRN",1.5,124,1,4,0)
EnteredOn^4^S
"KRN",1.5,124,1,4,4)
S VALUE=$$DATE^VPRSDA(VALUE,1)
"KRN",1.5,124,1,4,6)
S VALUE=$P(VPRCMT,U,2)
"KRN",1.5,124,1,5,0)
CommentType^5^S
"KRN",1.5,124,1,5,6)
S VALUE=$P(VPRCMT,U,4)
"KRN",1.5,124,1,6,0)
CommentText^6^S
"KRN",1.5,124,1,6,6)
S VALUE=$P(VPRCMT,U,6)
"KRN",1.5,124,1,"B","CommentText",6)

"KRN",1.5,124,1,"B","CommentType",5)

"KRN",1.5,124,1,"B","EnteredAt",2)

"KRN",1.5,124,1,"B","EnteredBy",3)

"KRN",1.5,124,1,"B","EnteredOn",4)

"KRN",1.5,124,1,"B","Id",1)

"KRN",1.5,124,1,"SEQ",1,1)

"KRN",1.5,124,1,"SEQ",2,2)

"KRN",1.5,124,1,"SEQ",3,3)

"KRN",1.5,124,1,"SEQ",4,4)

"KRN",1.5,124,1,"SEQ",5,5)

"KRN",1.5,124,1,"SEQ",6,6)

"KRN",1.5,124,3)
K VPRCMT
"KRN",1.5,124,4)
S VPRCMT=$G(DIEN),DIEN=$P(DIEN,U)
"KRN",1.5,124,19,0)
^^5^5^3180612^^
"KRN",1.5,124,19,1,0)
This entity supports comments in multiple SDA containers, such as 
"KRN",1.5,124,19,2,0)
Allergies and Problems; it returns a single comment, and is intended to 
"KRN",1.5,124,19,3,0)
be used with a List property. A string in the following format is 
"KRN",1.5,124,19,4,0)
expected as the ID:
"KRN",1.5,124,19,5,0)
  id ^ date ^ user ^ type ^ facility ^ text
"KRN",1.5,125,-1)
0^107
"KRN",1.5,125,0)
VPR ALLERGY EXTENSION^120.8^^^^S
"KRN",1.5,125,.1)
AllergyExtension
"KRN",1.5,125,1,0)
^1.51^6^6
"KRN",1.5,125,1,1,0)
Mechanism^1^E^120.8^17^^^VPR CODE ONLY
"KRN",1.5,125,1,1,6)
S VALUE=$P($G(GMRAY),U,6)
"KRN",1.5,125,1,2,0)
Source^2^S^120.8^6
"KRN",1.5,125,1,2,6)
S VALUE=$P($G(GMRAY),U,5)
"KRN",1.5,125,1,3,0)
Comments^3^L^^^^^VPR COMMENT
"KRN",1.5,125,1,3,1)
4^Comment
"KRN",1.5,125,1,3,6)
D ALGCMT^VPRSDAL(DIEN)
"KRN",1.5,125,1,4,0)
Reactions^4^L^^^^^VPR ALLERGY SIGN/SYMPTOM
"KRN",1.5,125,1,4,1)
4^Reaction^^
"KRN",1.5,125,1,4,6)
N I S I=0 F  S I=$O(VPRALG("S",I)) Q:I<1  S DLIST(I)=+$P(VPRALG("S",I),";",2)_U_$P($G(VPRALG("S",I)),";")
"KRN",1.5,125,1,5,0)
DrugClasses^5^L^^^^^VPR DRUG CLASS
"KRN",1.5,125,1,5,1)
4
"KRN",1.5,125,1,5,6)
N I S I=0 F  S I=$O(GMRAY("V",I)) Q:I<1  S DLIST(I)=I_U_GMRAY("V",I)
"KRN",1.5,125,1,6,0)
DrugProducts^6^L^^^^^VPR DRUG INGREDIENT
"KRN",1.5,125,1,6,1)
4^DrugProduct
"KRN",1.5,125,1,6,6)
M DLIST=GMRAY("I")
"KRN",1.5,125,1,"B","Comments",3)

"KRN",1.5,125,1,"B","DrugClasses",5)

"KRN",1.5,125,1,"B","DrugProducts",6)

"KRN",1.5,125,1,"B","Mechanism",1)

"KRN",1.5,125,1,"B","Reactions",4)

"KRN",1.5,125,1,"B","Source",2)

"KRN",1.5,125,1,"SEQ",1,1)

"KRN",1.5,125,1,"SEQ",2,2)

"KRN",1.5,125,1,"SEQ",3,3)

"KRN",1.5,125,1,"SEQ",4,4)

"KRN",1.5,125,1,"SEQ",5,5)

"KRN",1.5,125,1,"SEQ",6,6)

"KRN",1.5,125,19,0)
^^2^2^3180611^^
"KRN",1.5,125,19,1,0)
This entity extends VPR ALLERGY. It expects the GMRAY variable and array
"KRN",1.5,125,19,2,0)
to be defined, from the GET ID PROCESSING call to GMRAOR2.
"KRN",1.5,127,-1)
0^116
"KRN",1.5,127,0)
VPR DRUG INGREDIENT^50.416^^^^S
"KRN",1.5,127,.1)
DrugProduct
"KRN",1.5,127,1,0)
^1.51^3^3
"KRN",1.5,127,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,127,1,1,2)
VA50.416
"KRN",1.5,127,1,1,6)
S VALUE=$P($G(VPRCODE),U,3)
"KRN",1.5,127,1,2,0)
Code^6^I^50.416^
"KRN",1.5,127,1,2,6)
S VALUE=$P($G(VPRCODE),U)
"KRN",1.5,127,1,3,0)
Description^7^S^50.416^.01
"KRN",1.5,127,1,3,6)
S VALUE=$P($G(VPRCODE),U,2)
"KRN",1.5,127,1,"B","Code",2)

"KRN",1.5,127,1,"B","Description",3)

"KRN",1.5,127,1,"B","SDACodingStandard",1)

"KRN",1.5,127,1,"SEQ",1,1)

"KRN",1.5,127,1,"SEQ",6,2)

"KRN",1.5,127,1,"SEQ",7,3)

"KRN",1.5,127,3)
K VPRCODE
"KRN",1.5,127,4)
D INGRD^VPRSDAP(.DIEN)
"KRN",1.5,128,-1)
0^125
"KRN",1.5,128,0)
VPR VISIT EXTENSION^9000010^^^^S
"KRN",1.5,128,.1)
EncounterExtension
"KRN",1.5,128,1,0)
^1.51^2^2
"KRN",1.5,128,1,1,0)
Cpt^1^E^9000010.18^^^^VPR CPT
"KRN",1.5,128,1,1,6)
S VALUE=$$CPT^VPRDVSIT(DIEN)
"KRN",1.5,128,1,2,0)
StopCode^2^E^9000010^.08^^1^VPR CODE TABLE
"KRN",1.5,128,1,2,4)
S VALUE=$$AMIS^VPRDVSIT(VALUE)_"^AMIS"
"KRN",1.5,128,1,2,6)
S VALUE=$P($G(@VPRVST@(0)),U,8)
"KRN",1.5,128,1,"B","Cpt",1)

"KRN",1.5,128,1,"B","StopCode",2)

"KRN",1.5,128,1,"SEQ",1,1)

"KRN",1.5,128,1,"SEQ",2,2)

"KRN",1.5,128,19,0)
^^2^2^3180611^
"KRN",1.5,128,19,1,0)
This entity extends VPR VISIT; it is intended to only be used within 
"KRN",1.5,128,19,2,0)
that Entity. It expects ^TMP("PXKENC",$J) to be defined.
"KRN",1.5,129,-1)
0^106
"KRN",1.5,129,0)
VPR ADMISSION EXTENSION^405^^^^S
"KRN",1.5,129,.1)
EncounterExtension
"KRN",1.5,129,1,0)
^1.51^3^3
"KRN",1.5,129,1,1,0)
Admitnumber^1^I
"KRN",1.5,129,1,2,0)
Ptf^2^S^405^.16^^1
"KRN",1.5,129,1,2,6)
S VALUE=$G(VAIP(12))
"KRN",1.5,129,1,3,0)
OriginalTime^3^S^405^.01^^1
"KRN",1.5,129,1,3,6)
S VALUE=$P($G(VAIP(13,1)),U)
"KRN",1.5,129,1,"B","Admitnumber",1)

"KRN",1.5,129,1,"B","OriginalTime",3)

"KRN",1.5,129,1,"B","Ptf",2)

"KRN",1.5,129,1,"SEQ",1,1)

"KRN",1.5,129,1,"SEQ",2,2)

"KRN",1.5,129,1,"SEQ",3,3)

"KRN",1.5,129,19,0)
^^2^2^3180611^
"KRN",1.5,129,19,1,0)
This entity extends VPR ADMISSION; it expects the VAIP array from VADPT
"KRN",1.5,129,19,2,0)
to be defined, and is intended to be called within VPR ADMISSION.
"KRN",1.5,130,-1)
0^108
"KRN",1.5,130,0)
VPR APPOINTMENT EXTENSION^2.98^^^^S
"KRN",1.5,130,.1)
AppointmentExtension
"KRN",1.5,130,1,0)
^1.51^2^2
"KRN",1.5,130,1,1,0)
PatientStatus^1^S^2.98^3^^1
"KRN",1.5,130,1,1,4)
S VALUE=$S($E(VALUE)="I":"INPATIENT",1:"AMBULATORY")
"KRN",1.5,130,1,1,6)
S VALUE=$P($G(VPRAPPT),U,3)
"KRN",1.5,130,1,2,0)
ServiceStatus^2^S^2.98^3^^1
"KRN",1.5,130,1,2,4)
S VALUE=$S($E(VALUE)="I":"INPATIENT VISIT",1:"AMBULATORY")
"KRN",1.5,130,1,2,6)
S VALUE=$P($G(VPRAPPT),U,3)
"KRN",1.5,130,1,"B","PatientStatus",1)

"KRN",1.5,130,1,"B","ServiceStatus",2)

"KRN",1.5,130,1,"SEQ",1,1)

"KRN",1.5,130,1,"SEQ",2,2)

"KRN",1.5,130,19,0)
^^2^2^3180611^
"KRN",1.5,130,19,1,0)
This entity extends VPR APPOINTMENT; it expects the local variable VPRAPPT
"KRN",1.5,130,19,2,0)
to be defined, as the ^TMP($J,"SDAMA301") node for this appointment.
"KRN",1.5,131,-1)
0^122
"KRN",1.5,131,0)
VPR PRF EXTENSION^26.13^^^^S
"KRN",1.5,131,.1)
AlertExtension
"KRN",1.5,131,1,0)
^1.51^1^1
"KRN",1.5,131,1,1,0)
OwnSite^1^E^26.13^.04^^1^VPR FACILITY
"KRN",1.5,131,1,1,6)
S VALUE=$P($G(VPRF1("OWNER")),U) S:'VALUE DDEOUT=1
"KRN",1.5,131,1,"B","OwnSite",1)

"KRN",1.5,131,1,"SEQ",1,1)

"KRN",1.5,131,19,0)
^^2^2^3180904^^^
"KRN",1.5,131,19,1,0)
This entity extends VPR PATIENT RECORD FLAG; it expects the VPRF1 array
"KRN",1.5,131,19,2,0)
to be defined.
"KRN",1.5,132,-1)
0^123
"KRN",1.5,132,0)
VPR PROBLEM EXTENSION^9000011^^^^S
"KRN",1.5,132,.1)
ProblemExtension
"KRN",1.5,132,1,0)
^1.51^13^13
"KRN",1.5,132,1,1,0)
Comments^13^L^^^^^VPR COMMENT
"KRN",1.5,132,1,1,1)
4^Comment
"KRN",1.5,132,1,1,6)
N I,X,FAC S I=0 F  S I=$O(GMPFLD(10,I)) Q:I<1  S X=GMPFLD(10,I),FAC=$P(X,U,2),DLIST(I)=$P(X,U)_","_FAC_","_DIEN_U_$P(X,U,5)_U_$P(X,U,6)_"^^"_$G(^AUPNPROB(DIEN,11,FAC,0))_U_$P(X,U,3)
"KRN",1.5,132,1,2,0)
IsExposureAO^1^S^9000011^1.11^^1
"KRN",1.5,132,1,2,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,132,1,2,6)
S VALUE=$P($G(GMPFLD(1.11)),U)
"KRN",1.5,132,1,3,0)
IsExposureIR^2^S^9000011^1.12^^1
"KRN",1.5,132,1,3,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,132,1,3,6)
S VALUE=$P($G(GMPFLD(1.12)),U)
"KRN",1.5,132,1,4,0)
IsExposurePG^3^S^9000011^1.13^^1
"KRN",1.5,132,1,4,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,132,1,4,6)
S VALUE=$P($G(GMPFLD(1.13)),U)
"KRN",1.5,132,1,5,0)
IsExposureHNC^4^S^9000011^1.15^^1
"KRN",1.5,132,1,5,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,132,1,5,6)
S VALUE=$P($G(GMPFLD(1.15)),U)
"KRN",1.5,132,1,6,0)
IsExposureMST^5^S^9000011^1.16^^1
"KRN",1.5,132,1,6,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,132,1,6,6)
S VALUE=$P($G(GMPFLD(1.16)),U)
"KRN",1.5,132,1,7,0)
IsExposureCV^6^S^9000011^1.17^^1
"KRN",1.5,132,1,7,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,132,1,7,6)
S VALUE=$P($G(GMPFLD(1.17)),U)
"KRN",1.5,132,1,8,0)
IsExposureSH^7^S^9000011^1.18^^1
"KRN",1.5,132,1,8,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,132,1,8,6)
S VALUE=$P($G(GMPFLD(1.18)),U)
"KRN",1.5,132,1,9,0)
Location^8^E^9000011^1.08^^1^VPR LOCATION
"KRN",1.5,132,1,9,6)
S VALUE=$P($G(GMPFLD(1.08)),U)
"KRN",1.5,132,1,10,0)
Removed^9^S^9000011^1.02^^1
"KRN",1.5,132,1,10,4)
S VALUE=$S(VALUE="H":"true",1:"false")
"KRN",1.5,132,1,10,6)
S VALUE=$P($G(GMPFLD(1.02)),U)
"KRN",1.5,132,1,11,0)
IsSc^10^S^9000011^1.1^^1
"KRN",1.5,132,1,11,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,132,1,11,6)
S VALUE=$P($G(GMPFLD(1.1)),U)
"KRN",1.5,132,1,12,0)
Service^11^S^9000011^1.06
"KRN",1.5,132,1,12,6)
S VALUE=$P($G(GMPFLD(1.06)),U,2)
"KRN",1.5,132,1,13,0)
OnsetDate^12^S^9000011^.13^^1
"KRN",1.5,132,1,13,4)
N D S D=$P(VALUE,"."),VALUE=(1700+$E(D,1,3))_"-"_$E(D,4,5)_"-"_$E(D,6,7)
"KRN",1.5,132,1,13,6)
S VALUE=$P($G(GMPFLD(.13)),U)
"KRN",1.5,132,1,"B","Comments",1)

"KRN",1.5,132,1,"B","IsExposureAO",2)

"KRN",1.5,132,1,"B","IsExposureCV",7)

"KRN",1.5,132,1,"B","IsExposureHNC",5)

"KRN",1.5,132,1,"B","IsExposureIR",3)

"KRN",1.5,132,1,"B","IsExposureMST",6)

"KRN",1.5,132,1,"B","IsExposurePG",4)

"KRN",1.5,132,1,"B","IsExposureSH",8)

"KRN",1.5,132,1,"B","IsSc",11)

"KRN",1.5,132,1,"B","Location",9)

"KRN",1.5,132,1,"B","OnsetDate",13)

"KRN",1.5,132,1,"B","Removed",10)

"KRN",1.5,132,1,"B","Service",12)

"KRN",1.5,132,1,"SEQ",1,2)

"KRN",1.5,132,1,"SEQ",2,3)

"KRN",1.5,132,1,"SEQ",3,4)

"KRN",1.5,132,1,"SEQ",4,5)

"KRN",1.5,132,1,"SEQ",5,6)

"KRN",1.5,132,1,"SEQ",6,7)

"KRN",1.5,132,1,"SEQ",7,8)

"KRN",1.5,132,1,"SEQ",8,9)

"KRN",1.5,132,1,"SEQ",9,10)

"KRN",1.5,132,1,"SEQ",10,11)

"KRN",1.5,132,1,"SEQ",11,12)

"KRN",1.5,132,1,"SEQ",12,13)

"KRN",1.5,132,1,"SEQ",13,1)

"KRN",1.5,132,19,0)
^^1^1^3180611^
"KRN",1.5,132,19,1,0)
This entity extends VPR PROBLEM.
"KRN",1.5,133,-1)
0^124
"KRN",1.5,133,0)
VPR PTF EXTENSION^45^^^^S
"KRN",1.5,133,.1)
DiagnosisExtension
"KRN",1.5,133,1,0)
^1.51^1^1
"KRN",1.5,133,1,1,0)
LocalId^1^I
"KRN",1.5,133,1,"B","LocalId",1)

"KRN",1.5,133,1,"SEQ",1,1)

"KRN",1.5,133,19,0)
^^1^1^3180611^
"KRN",1.5,133,19,1,0)
This entity extends VPR PTF.
"KRN",1.5,134,-1)
0^110
"KRN",1.5,134,0)
VPR DOCUMENT EXTENSION^8925^^^^S
"KRN",1.5,134,.1)
DocumentExtension
"KRN",1.5,134,1,0)
^1.51^9^9
"KRN",1.5,134,1,1,0)
CareProviders^1^L^^^^^VPR SIGNER
"KRN",1.5,134,1,1,1)
4^CareProvider
"KRN",1.5,134,1,1,6)
N I,N S N=0 F I=1502,1508 S:$G(VPRTIU(DIEN,I,"I")) N=N+1,DLIST(N)=VPRTIU(DIEN,I,"I")_U_$S(I=1502:"S",1:"C")
"KRN",1.5,134,1,2,0)
Parent^2^S^8925^2101^^1
"KRN",1.5,134,1,2,6)
N X S X=$G(VPRTIU(DIEN,2101,"I")) S:X VALUE=X_";TIU"
"KRN",1.5,134,1,3,0)
Subject^3^S^8925^1701
"KRN",1.5,134,1,3,6)
S VALUE=$G(VPRTIU(DIEN,1701,"I"))
"KRN",1.5,134,1,4,0)
NationalTitle^4^E^8925^.01^^1^VPR DOCUMENT TITLE
"KRN",1.5,134,1,4,6)
S VALUE=$G(VPRTIU(DIEN,.01,"I")),VPRNATL=+$G(^TIU(8925.1,+VALUE,15)) S:'VPRNATL DDEOUT=1
"KRN",1.5,134,1,5,0)
NationalTitleRole^5^E^8925^.01^1501^1^VPR DOCUMENT ROLE
"KRN",1.5,134,1,5,4)
S VALUE=$P($G(^TIU(8926.1,+VALUE,0)),U,5)
"KRN",1.5,134,1,5,6)
S:'$G(VPRNATL) DDEOUT=1 S:$G(VPRNATL) VALUE=VPRNATL
"KRN",1.5,134,1,6,0)
NationalTitleService^6^E^8925^.01^1501^1^VPR DOCUMENT SERVICE
"KRN",1.5,134,1,6,4)
S VALUE=$P($G(^TIU(8926.1,+VALUE,0)),U,7)
"KRN",1.5,134,1,6,6)
S:'$G(VPRNATL) DDEOUT=1 S:$G(VPRNATL) VALUE=VPRNATL
"KRN",1.5,134,1,7,0)
NationalTitleSetting^7^E^8925^.01^1501^1^VPR DOCUMENT SETTING
"KRN",1.5,134,1,7,4)
S VALUE=$P($G(^TIU(8926.1,+VALUE,0)),U,6)
"KRN",1.5,134,1,7,6)
S:'$G(VPRNATL) DDEOUT=1 S:$G(VPRNATL) VALUE=VPRNATL
"KRN",1.5,134,1,8,0)
NationalTitleSubject^8^E^8925^.01^1501^1^VPR DOCUMENT SUBJECT
"KRN",1.5,134,1,8,4)
S VALUE=$P($G(^TIU(8926.1,+VALUE,0)),U,4)
"KRN",1.5,134,1,8,6)
S:'$G(VPRNATL) DDEOUT=1 S:$G(VPRNATL) VALUE=VPRNATL
"KRN",1.5,134,1,9,0)
NationalTitleType^9^E^8925^.01^1501^1^VPR DOCUMENT TYPE
"KRN",1.5,134,1,9,4)
S VALUE=$P($G(^TIU(8926.1,+VALUE,0)),U,8)
"KRN",1.5,134,1,9,6)
S:'$G(VPRNATL) DDEOUT=1 S:$G(VPRNATL) VALUE=VPRNATL
"KRN",1.5,134,1,"B","CareProviders",1)

"KRN",1.5,134,1,"B","NationalTitle",4)

"KRN",1.5,134,1,"B","NationalTitleRole",5)

"KRN",1.5,134,1,"B","NationalTitleService",6)

"KRN",1.5,134,1,"B","NationalTitleSetting",7)

"KRN",1.5,134,1,"B","NationalTitleSubject",8)

"KRN",1.5,134,1,"B","NationalTitleType",9)

"KRN",1.5,134,1,"B","Parent",2)

"KRN",1.5,134,1,"B","Subject",3)

"KRN",1.5,134,1,"SEQ",1,1)

"KRN",1.5,134,1,"SEQ",2,2)

"KRN",1.5,134,1,"SEQ",3,3)

"KRN",1.5,134,1,"SEQ",4,4)

"KRN",1.5,134,1,"SEQ",5,5)

"KRN",1.5,134,1,"SEQ",6,6)

"KRN",1.5,134,1,"SEQ",7,7)

"KRN",1.5,134,1,"SEQ",8,8)

"KRN",1.5,134,1,"SEQ",9,9)

"KRN",1.5,134,3)
K VPRNATL
"KRN",1.5,134,19,0)
^^1^1^3180612^^
"KRN",1.5,134,19,1,0)
This entity extends VPR DOCUMENT; it expects the VPRTIU array to be defined.
"KRN",1.5,135,-1)
0^111
"KRN",1.5,135,0)
VPR DOCUMENT ROLE^8926.3^^^^S
"KRN",1.5,135,.1)
NationalTitleRole
"KRN",1.5,135,1,0)
^1.51^3^3
"KRN",1.5,135,1,1,0)
Code^6^S^8926.3^99.99
"KRN",1.5,135,1,2,0)
Description^7^S^8926.3^.01
"KRN",1.5,135,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,135,1,3,2)
VHAT
"KRN",1.5,135,1,"B","Code",1)

"KRN",1.5,135,1,"B","Description",2)

"KRN",1.5,135,1,"B","SDACodingStandard",3)

"KRN",1.5,135,1,"SEQ",1,3)

"KRN",1.5,135,1,"SEQ",6,1)

"KRN",1.5,135,1,"SEQ",7,2)

"KRN",1.5,135,19,0)
^^1^1^3180611^
"KRN",1.5,135,19,1,0)
This entity supports VPR DOCUMENT EXTENSION.
"KRN",1.5,136,-1)
0^112
"KRN",1.5,136,0)
VPR DOCUMENT SERVICE^8926.5^^^^S
"KRN",1.5,136,.1)
NationalTitleService
"KRN",1.5,136,1,0)
^1.51^3^3
"KRN",1.5,136,1,1,0)
Code^6^S^8926.5^99.99
"KRN",1.5,136,1,2,0)
Description^7^S^8926.5^.01
"KRN",1.5,136,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,136,1,3,2)
VHAT
"KRN",1.5,136,1,"B","Code",1)

"KRN",1.5,136,1,"B","Description",2)

"KRN",1.5,136,1,"B","SDACodingStandard",3)

"KRN",1.5,136,1,"SEQ",1,3)

"KRN",1.5,136,1,"SEQ",6,1)

"KRN",1.5,136,1,"SEQ",7,2)

"KRN",1.5,136,19,0)
^^1^1^3180611^
"KRN",1.5,136,19,1,0)
This entity support VPR DOCUMENT EXTENSION.
"KRN",1.5,137,-1)
0^113
"KRN",1.5,137,0)
VPR DOCUMENT SETTING^8926.4^^^^S
"KRN",1.5,137,.1)
NationalTitleSetting
"KRN",1.5,137,1,0)
^1.51^3^3
"KRN",1.5,137,1,1,0)
Code^6^S^8926.4^99.99
"KRN",1.5,137,1,2,0)
Description^7^S^8926.4^.01
"KRN",1.5,137,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,137,1,3,2)
VHAT
"KRN",1.5,137,1,"B","Code",1)

"KRN",1.5,137,1,"B","Description",2)

"KRN",1.5,137,1,"B","SDACodingStandard",3)

"KRN",1.5,137,1,"SEQ",1,3)

"KRN",1.5,137,1,"SEQ",6,1)

"KRN",1.5,137,1,"SEQ",7,2)

"KRN",1.5,137,19,0)
^^1^1^3180611^
"KRN",1.5,137,19,1,0)
This entity supports VPR DOCUMENT EXTENSION.
"KRN",1.5,138,-1)
0^114
"KRN",1.5,138,0)
VPR DOCUMENT SUBJECT^8926.2^^^^S
"KRN",1.5,138,.1)
NationalTitleSubject
"KRN",1.5,138,1,0)
^1.51^3^3
"KRN",1.5,138,1,1,0)
Code^6^S^8926.2^99.99
"KRN",1.5,138,1,2,0)
Description^7^S^8926.2^.01
"KRN",1.5,138,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,138,1,3,2)
VHAT
"KRN",1.5,138,1,"B","Code",1)

"KRN",1.5,138,1,"B","Description",2)

"KRN",1.5,138,1,"B","SDACodingStandard",3)

"KRN",1.5,138,1,"SEQ",1,3)

"KRN",1.5,138,1,"SEQ",6,1)

"KRN",1.5,138,1,"SEQ",7,2)

"KRN",1.5,138,19,0)
^^1^1^3180611^
"KRN",1.5,138,19,1,0)
This entity supports VPR DOCUMENT EXTENSION.
"KRN",1.5,139,-1)
0^8
"KRN",1.5,139,0)
VPR DOCUMENT TYPE^8926.6^^^^S
"KRN",1.5,139,.1)
NationalTitleType
"KRN",1.5,139,1,0)
^1.51^3^3
"KRN",1.5,139,1,1,0)
Code^6^S^8926.6^99.99
"KRN",1.5,139,1,2,0)
Description^7^S^8926.6^.01
"KRN",1.5,139,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,139,1,3,2)
VHAT
"KRN",1.5,139,1,"B","Code",1)

"KRN",1.5,139,1,"B","Description",2)

"KRN",1.5,139,1,"B","SDACodingStandard",3)

"KRN",1.5,139,1,"SEQ",1,3)

"KRN",1.5,139,1,"SEQ",6,1)

"KRN",1.5,139,1,"SEQ",7,2)

"KRN",1.5,139,19,0)
^^1^1^3180611^
"KRN",1.5,139,19,1,0)
This entity supports VPR DOCUMENT EXTENSION.
"KRN",1.5,140,-1)
0^132
"KRN",1.5,140,0)
VPR ORDER EXTENSION^100^^^^S
"KRN",1.5,140,.1)
OrderExtension
"KRN",1.5,140,1,0)
^1.51^7^7
"KRN",1.5,140,1,1,0)
Released^1^S^100.008^16^^1
"KRN",1.5,140,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,140,1,1,6)
S IEN="1,"_DIEN
"KRN",1.5,140,1,2,0)
SignatureStatus^2^S^100.008^4
"KRN",1.5,140,1,2,6)
S IEN="1,"_DIEN
"KRN",1.5,140,1,3,0)
DiscontinuedDateTime^4^S^100^63^^1
"KRN",1.5,140,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,140,1,4,0)
DiscontinuedBy^5^E^100^62^^1^VPR PROVIDER
"KRN",1.5,140,1,5,0)
DiscontinuedReason^6^S^100^65
"KRN",1.5,140,1,5,6)
S VALUE=$P($G(^OR(100,DIEN,6)),U,5)
"KRN",1.5,140,1,6,0)
Content^3^S^100.008^.1
"KRN",1.5,140,1,6,6)
N VPRTXT,ORIGVIEW S ORIGVIEW=2 D TEXT^ORQ12(.VPRTXT,+DIEN_";1") S VALUE=$$STRING^VPRD(.VPRTXT)
"KRN",1.5,140,1,7,0)
VAStatus^7^E^100^5^^1^VPR ORDER STATUS
"KRN",1.5,140,1,"B","Content",6)

"KRN",1.5,140,1,"B","DiscontinuedBy",4)

"KRN",1.5,140,1,"B","DiscontinuedDateTime",3)

"KRN",1.5,140,1,"B","DiscontinuedReason",5)

"KRN",1.5,140,1,"B","Released",1)

"KRN",1.5,140,1,"B","SignatureStatus",2)

"KRN",1.5,140,1,"B","VAStatus",7)

"KRN",1.5,140,1,"SEQ",1,1)

"KRN",1.5,140,1,"SEQ",2,2)

"KRN",1.5,140,1,"SEQ",3,6)

"KRN",1.5,140,1,"SEQ",4,3)

"KRN",1.5,140,1,"SEQ",5,4)

"KRN",1.5,140,1,"SEQ",6,5)

"KRN",1.5,140,1,"SEQ",7,7)

"KRN",1.5,140,19,0)
^^2^2^3181228^
"KRN",1.5,140,19,1,0)
This entity extends the VPR * ORDER entities: VPR LAB ORDER, VPR RAD ORDER,
"KRN",1.5,140,19,2,0)
and VPR OTHER ORDER. It expects the Orders file #100 pointer as the ID.
"KRN",1.5,141,-1)
0^129
"KRN",1.5,141,0)
VPR LRCH RESULT EXTENSION^63.04^^^^S
"KRN",1.5,141,.1)
ResultExtension
"KRN",1.5,141,1,0)
^1.51^1^1
"KRN",1.5,141,1,1,0)
GroupName^1^S^63.04^.06
"KRN",1.5,141,1,"B","GroupName",1)

"KRN",1.5,141,1,"SEQ",1,1)

"KRN",1.5,141,19,0)
^^1^1^3180612^
"KRN",1.5,141,19,1,0)
This entity extends VPR LRCH RESULT.
"KRN",1.5,142,-1)
0^134
"KRN",1.5,142,0)
VPR RAD RESULT EXTENSION^74^^^^S
"KRN",1.5,142,.1)
ResultExtension
"KRN",1.5,142,1,0)
^1.51^2^2
"KRN",1.5,142,1,1,0)
IsImagePresent^1^S^74^2005
"KRN",1.5,142,1,1,6)
S VALUE=$S($O(^RARPT(DIEN,2005,0)):"true",1:"false")
"KRN",1.5,142,1,2,0)
VAResultStatus^2^E^74^5^^^VPR CODE ONLY
"KRN",1.5,142,1,2,6)
S VALUE=$P(@VPRAE2,U)
"KRN",1.5,142,1,"B","IsImagePresent",1)

"KRN",1.5,142,1,"B","VAResultStatus",2)

"KRN",1.5,142,1,"SEQ",1,1)

"KRN",1.5,142,1,"SEQ",2,2)

"KRN",1.5,142,19,0)
^^1^1^3180612^
"KRN",1.5,142,19,1,0)
This entity extends VPR RAD RESULT; it expects the Radiology Report #74 ien.
"KRN",1.5,143,-1)
0^133
"KRN",1.5,143,0)
VPR PROCEDURE EXTENSION^702^^^^S
"KRN",1.5,143,.1)
ProcedureExtension
"KRN",1.5,143,1,0)
^1.51^8^8
"KRN",1.5,143,1,1,0)
Category^1^F
"KRN",1.5,143,1,1,2)
CP
"KRN",1.5,143,1,2,0)
Consult^2^S^702^.05^^1
"KRN",1.5,143,1,2,6)
S VALUE=$P($G(VPRCP),U,13)
"KRN",1.5,143,1,3,0)
IsImagePresent^3^S^702^.1
"KRN",1.5,143,1,3,6)
N I S VALUE="false",I=0 F  S I=$O(^MDD(702,DIEN,.1,I)) Q:I<1  I +$P($G(^(I,0)),U,9)=3 S VALUE="true" Q
"KRN",1.5,143,1,4,0)
Interpretation^4^S^702^.06^70201
"KRN",1.5,143,1,4,6)
S VALUE=$P($G(VPRCP),U,7)
"KRN",1.5,143,1,5,0)
Location^5^E^702^.06^1211^1^VPR LOCATION
"KRN",1.5,143,1,5,6)
S VALUE=$G(VPRTIU(1211,"I"))
"KRN",1.5,143,1,6,0)
OrderNumber^6^S^702^.05^.03^1
"KRN",1.5,143,1,6,6)
S VALUE=$P($G(VPRCN),U,3)
"KRN",1.5,143,1,7,0)
Status^7^S^702^.05^8^1
"KRN",1.5,143,1,7,4)
S VALUE=$$EXTERNAL^DILFD(123,8,,VALUE)
"KRN",1.5,143,1,7,6)
S VALUE=$P($G(VPRCN),U,12)
"KRN",1.5,143,1,8,0)
DocumentNumbers^8^L
"KRN",1.5,143,1,8,1)
4^DocumentNumbersItem
"KRN",1.5,143,1,8,6)
N I,X S I=0 F  S I=$O(VPRCN(I)) Q:I<1  S X=+$G(VPRCN(I)) S:(X'=81) DLIST(I)=X_";TIU" ;filter out addenda
"KRN",1.5,143,1,"B","Category",1)

"KRN",1.5,143,1,"B","Consult",2)

"KRN",1.5,143,1,"B","DocumentNumbers",8)

"KRN",1.5,143,1,"B","Interpretation",4)

"KRN",1.5,143,1,"B","IsImagePresent",3)

"KRN",1.5,143,1,"B","Location",5)

"KRN",1.5,143,1,"B","OrderNumber",6)

"KRN",1.5,143,1,"B","Status",7)

"KRN",1.5,143,1,"SEQ",1,1)

"KRN",1.5,143,1,"SEQ",2,2)

"KRN",1.5,143,1,"SEQ",3,3)

"KRN",1.5,143,1,"SEQ",4,4)

"KRN",1.5,143,1,"SEQ",5,5)

"KRN",1.5,143,1,"SEQ",6,6)

"KRN",1.5,143,1,"SEQ",7,7)

"KRN",1.5,143,1,"SEQ",8,8)

"KRN",1.5,143,19,0)
^^2^2^3180612^
"KRN",1.5,143,19,1,0)
This entity supports VPR PROCEDURE. It expects ^TMP("MDHSP",$J) to be
"KRN",1.5,143,19,2,0)
defined, from the main domain query.
"KRN",1.5,144,-1)
0^136
"KRN",1.5,144,0)
VPR SURGERY EXTENSION^130^^^^S
"KRN",1.5,144,.1)
ProcedureExtension
"KRN",1.5,144,1,0)
^1.51^4^4
"KRN",1.5,144,1,1,0)
Category^1^F
"KRN",1.5,144,1,1,2)
SR
"KRN",1.5,144,1,2,0)
Status^7^F^
"KRN",1.5,144,1,2,6)
S VALUE=$S($P(VPRSR(DIEN),U,2)["Aborted":"ABORTED",$P(VPRSR(DIEN),U,2)="":"",1:"COMPLETED")
"KRN",1.5,144,1,3,0)
DocumentNumbers^8^L
"KRN",1.5,144,1,3,1)
4^DocumentNumbersItem
"KRN",1.5,144,1,3,6)
D SRPTS^VPRSDA(DIEN)
"KRN",1.5,144,1,4,0)
CptModifiers^9^L^^^^^VPR CPT MODIFIER
"KRN",1.5,144,1,4,1)
4^CptModifier
"KRN",1.5,144,1,4,6)
N I S I=0 F  S I=$O(^SRO(136,DIEN,1,I)) Q:I<1  S DLIST(I)=+$G(^(I,0))
"KRN",1.5,144,1,"B","Category",1)

"KRN",1.5,144,1,"B","CptModifiers",4)

"KRN",1.5,144,1,"B","DocumentNumbers",3)

"KRN",1.5,144,1,"B","Status",2)

"KRN",1.5,144,1,"SEQ",1,1)

"KRN",1.5,144,1,"SEQ",7,2)

"KRN",1.5,144,1,"SEQ",8,3)

"KRN",1.5,144,1,"SEQ",9,4)

"KRN",1.5,144,19,0)
^1.519^1^1^3180612^
"KRN",1.5,144,19,1,0)
This entity extends VPR SURGERY; it expects the VPRSR array.
"KRN",1.5,145,-1)
0^135
"KRN",1.5,145,0)
VPR REFERRAL EXTENSION^123^^^^S
"KRN",1.5,145,.1)
ReferralExtension
"KRN",1.5,145,1,0)
^1.51^8^8
"KRN",1.5,145,1,1,0)
Name^1^F
"KRN",1.5,145,1,1,6)
S VALUE=$$CONSNAME^VPRSDA(DIEN) ;fields #1, 4, & 13
"KRN",1.5,145,1,2,0)
Procedure^2^S^123^4
"KRN",1.5,145,1,2,6)
S VALUE=$P($G(VPRCONS(0)),U,8)
"KRN",1.5,145,1,3,0)
ProvisionalDx^3^E^123^30.1^^^VPR CODE TABLE
"KRN",1.5,145,1,3,6)
S VALUE=$$PROVDX^VPRSDA(DIEN)
"KRN",1.5,145,1,4,0)
Findings^4^S^123^15^^1
"KRN",1.5,145,1,4,4)
S VALUE=$S(VALUE="Y":"SIGNIFICANT FINDINGS",1:"")
"KRN",1.5,145,1,4,6)
S VALUE=$P($G(VPRCONS(0)),U,19)
"KRN",1.5,145,1,5,0)
Status^5^S^123^8
"KRN",1.5,145,1,5,6)
S VALUE=$P($G(VPRCONS(0)),U,12)
"KRN",1.5,145,1,6,0)
Type^6^S^123^13
"KRN",1.5,145,1,6,4)
S VALUE=$S(VALUE="C":"Consult",1:"Procedure")
"KRN",1.5,145,1,6,6)
S VALUE=$P($G(VPRCONS(0)),U,17)
"KRN",1.5,145,1,7,0)
Urgency^7^S^123^5
"KRN",1.5,145,1,7,6)
S VALUE=$P($G(VPRCONS(0)),U,9)
"KRN",1.5,145,1,8,0)
DocumentNumbers^8^L
"KRN",1.5,145,1,8,1)
4^DocumentNumbersItem
"KRN",1.5,145,1,8,6)
N I S I=0 F  S I=$O(VPRCONS(50,I)) Q:I<1  S DLIST(I)=+$G(VPRCONS(50,I))_";TIU"
"KRN",1.5,145,1,"B","DocumentNumbers",8)

"KRN",1.5,145,1,"B","Findings",4)

"KRN",1.5,145,1,"B","Name",1)

"KRN",1.5,145,1,"B","Procedure",2)

"KRN",1.5,145,1,"B","ProvisionalDx",3)

"KRN",1.5,145,1,"B","Status",5)

"KRN",1.5,145,1,"B","Type",6)

"KRN",1.5,145,1,"B","Urgency",7)

"KRN",1.5,145,1,"SEQ",1,1)

"KRN",1.5,145,1,"SEQ",2,2)

"KRN",1.5,145,1,"SEQ",3,3)

"KRN",1.5,145,1,"SEQ",4,4)

"KRN",1.5,145,1,"SEQ",5,5)

"KRN",1.5,145,1,"SEQ",6,6)

"KRN",1.5,145,1,"SEQ",7,7)

"KRN",1.5,145,1,"SEQ",8,8)

"KRN",1.5,145,19,0)
^1.519^2^2^3180613^
"KRN",1.5,145,19,1,0)
This entity extends VPR REFERRAL; it expects the VPRCONS array as defined
"KRN",1.5,145,19,2,0)
by GET^GMRCAPI in the main entity GET ID PROCESSING.
"KRN",1.5,146,-1)
0^126
"KRN",1.5,146,0)
VPR HF EXTENSION^9000010.23^^^^S
"KRN",1.5,146,.1)
HealthConcernExtension
"KRN",1.5,146,1,0)
^1.51^2^2
"KRN",1.5,146,1,1,0)
Severity^1^S^9000010.23^.04
"KRN",1.5,146,1,2,0)
Category^2^S^9000010.23^.01^.03
"KRN",1.5,146,1,"B","Category",2)

"KRN",1.5,146,1,"B","Severity",1)

"KRN",1.5,146,1,"SEQ",1,1)

"KRN",1.5,146,1,"SEQ",2,2)

"KRN",1.5,146,19,0)
^^1^1^3180613^
"KRN",1.5,146,19,1,0)
This entity extends VPR FAMILY HISTORY and VPR SOCIAL HISTORY.
"KRN",1.5,147,-1)
0^130
"KRN",1.5,147,0)
VPR MED EXTENSION^100^^^^S
"KRN",1.5,147,.1)
MedicationExtension
"KRN",1.5,147,1,0)
^1.51^11^10
"KRN",1.5,147,1,1,0)
Sig^1^F
"KRN",1.5,147,1,1,6)
S VALUE=$$WP^VPRSDA(DIEN,"SIG")
"KRN",1.5,147,1,2,0)
IsIMO^2^S^100^6^^1
"KRN",1.5,147,1,2,4)
S VALUE=$$IMO^VPRSDAP(+VALUE,$G(PSTYPE))
"KRN",1.5,147,1,2,6)

"KRN",1.5,147,1,3,0)
IsSupply^3^F
"KRN",1.5,147,1,3,6)
I $G(PSTYPE)="O" S VALUE=$$SUPPLY^VPRSDAP(DIEN)
"KRN",1.5,147,1,4,0)
Routing^4^F
"KRN",1.5,147,1,4,6)
I $G(PSTYPE)="O" N X S X=$P($G(@VPRPS@("RXN")),U,3),VALUE=$S(X="M":"MAIL",X="W":"WINDOW",X="C":"ADMINISTERED IN CLINIC",1:"")
"KRN",1.5,147,1,5,0)
Expires^5^F^^^^
"KRN",1.5,147,1,5,6)
N X S X=$P($G(@VPRPS@(0)),U,3) S:X VALUE=$$DATE^VPRSDA(X)
"KRN",1.5,147,1,6,0)
DaysSupply^6^F
"KRN",1.5,147,1,6,6)
I $G(PSTYPE)="O" S VALUE=$P($G(@VPRPS@(0)),U,7)
"KRN",1.5,147,1,8,0)
LastFilled^8^F
"KRN",1.5,147,1,8,6)
I $G(PSTYPE)="O" N X S X=$P($G(@VPRPS@(0)),U,12) S:X VALUE=$$DATE^VPRSDA(X)
"KRN",1.5,147,1,9,0)
Fills^9^L^^^^^VPR MED FILL
"KRN",1.5,147,1,9,1)
4^Fill
"KRN",1.5,147,1,9,6)
D GETFILLS^VPRSDAP
"KRN",1.5,147,1,10,0)
IVRate^10^F
"KRN",1.5,147,1,10,6)
I $G(PSTYPE)="V" S VALUE=$P($G(@VPRPS@(0)),U,2)
"KRN",1.5,147,1,11,0)
VAStatus^11^E^^^^^VPR CODE TABLE
"KRN",1.5,147,1,11,6)
N X S X=$P($G(@VPRPS@(0)),U,6) S:$L(X) VALUE=X_U_X_"^VHAT"
"KRN",1.5,147,1,"B","DaysSupply",6)

"KRN",1.5,147,1,"B","Expires",5)

"KRN",1.5,147,1,"B","Fills",9)

"KRN",1.5,147,1,"B","IVRate",10)

"KRN",1.5,147,1,"B","IsIMO",2)

"KRN",1.5,147,1,"B","IsSupply",3)

"KRN",1.5,147,1,"B","LastFilled",8)

"KRN",1.5,147,1,"B","Routing",4)

"KRN",1.5,147,1,"B","Sig",1)

"KRN",1.5,147,1,"B","VAStatus",11)

"KRN",1.5,147,1,"SEQ",1,1)

"KRN",1.5,147,1,"SEQ",2,2)

"KRN",1.5,147,1,"SEQ",3,3)

"KRN",1.5,147,1,"SEQ",4,4)

"KRN",1.5,147,1,"SEQ",5,5)

"KRN",1.5,147,1,"SEQ",6,6)

"KRN",1.5,147,1,"SEQ",8,8)

"KRN",1.5,147,1,"SEQ",9,9)

"KRN",1.5,147,1,"SEQ",10,10)

"KRN",1.5,147,1,"SEQ",11,11)

"KRN",1.5,147,19,0)
^^2^2^3180613^
"KRN",1.5,147,19,1,0)
This entity extends VPR MEDICATION; it expects the VPRPS array defined by
"KRN",1.5,147,19,2,0)
the GET ID PROCESSING for each med order.
"KRN",1.5,148,-1)
0^131
"KRN",1.5,148,0)
VPR MED FILL^52^^^^S
"KRN",1.5,148,.1)
Fill
"KRN",1.5,148,1,0)
^1.51^6^6
"KRN",1.5,148,1,1,0)
FillDate^1^S^52
"KRN",1.5,148,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE,1)
"KRN",1.5,148,1,1,6)
S VALUE=$P(VPREF,U)
"KRN",1.5,148,1,2,0)
FillRouting^2^S^52
"KRN",1.5,148,1,2,4)
S VALUE=$S(VALUE="M":"MAIL",VALUE="W":"WINDOW",VALUE="C":"ADMINISTERED IN CLINIC",1:"")
"KRN",1.5,148,1,2,6)
S VALUE=$P(VPREF,U,5)
"KRN",1.5,148,1,3,0)
ReleaseDate^3^S^52
"KRN",1.5,148,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,148,1,3,6)
S VALUE=$P(VPREF,U,4)
"KRN",1.5,148,1,4,0)
FillQuantity^4^F
"KRN",1.5,148,1,4,6)
S VALUE=$P(VPREF,U,3)
"KRN",1.5,148,1,5,0)
FillDaysSupply^5^F
"KRN",1.5,148,1,5,6)
S VALUE=$P(VPREF,U,2)
"KRN",1.5,148,1,6,0)
IsPartial^6^F
"KRN",1.5,148,1,6,6)
S VALUE=$S(DIEN["P":"true",1:"false")
"KRN",1.5,148,1,"B","FillDate",1)

"KRN",1.5,148,1,"B","FillDaysSupply",5)

"KRN",1.5,148,1,"B","FillQuantity",4)

"KRN",1.5,148,1,"B","FillRouting",2)

"KRN",1.5,148,1,"B","IsPartial",6)

"KRN",1.5,148,1,"B","ReleaseDate",3)

"KRN",1.5,148,1,"SEQ",1,1)

"KRN",1.5,148,1,"SEQ",2,2)

"KRN",1.5,148,1,"SEQ",3,3)

"KRN",1.5,148,1,"SEQ",4,4)

"KRN",1.5,148,1,"SEQ",5,5)

"KRN",1.5,148,1,"SEQ",6,6)

"KRN",1.5,148,3)
K VPREF
"KRN",1.5,148,4)
S VPREF=$P(DIEN,U,2,99),DIEN=$P(DIEN,U)
"KRN",1.5,148,19,0)
^^4^4^3181221^
"KRN",1.5,148,19,1,0)
This entity returns a refill of a medication; it is intended to be used
"KRN",1.5,148,19,2,0)
with VPR MEDICATION, and the VPRPS array from OEL^PSOORRL. It expects:
"KRN",1.5,148,19,3,0)
  ID = fill date ^ days supply ^ qty ^ release date ^ routing
"KRN",1.5,148,19,4,0)
to support the original fill, refills, and partial fills.
"KRN",1.5,149,-1)
0^127
"KRN",1.5,149,0)
VPR IMM EXTENSION^9000010.11^^^^S
"KRN",1.5,149,.1)
VaccinationExtension
"KRN",1.5,149,1,0)
^1.51^5^5
"KRN",1.5,149,1,1,0)
IsContraindicated^1^S^9000010.11^.07^^1
"KRN",1.5,149,1,1,4)
S VALUE=$S(VALUE:"true",1:"false")
"KRN",1.5,149,1,1,6)
S VALUE=$G(VPRM("CONTRAINDICATED"))
"KRN",1.5,149,1,2,0)
Reaction^2^E^9000010.11^.06^^1^VPR CODE TABLE
"KRN",1.5,149,1,2,4)
S VALUE=VALUE_U_$$EXTERNAL^DILFD(9000010.11,.06,,VALUE)
"KRN",1.5,149,1,2,6)
S VALUE=$G(VPRM("REACTION"))
"KRN",1.5,149,1,3,0)
Source^3^E^9000010.11^1301^^^VPR CODE TABLE
"KRN",1.5,149,1,3,6)
S VALUE=$G(VPRM("INFO SOURCE")) ;HL7 code ^ name
"KRN",1.5,149,1,4,0)
VISOffers^5^L^^^^^VPR IMM VIS
"KRN",1.5,149,1,4,1)
4^VISOffer
"KRN",1.5,149,1,4,6)
N I S I=0 F  S I=$O(VPRM("VIS OFFERED",I)) Q:I<1  S DLIST(I)=$G(VPRM("VIS OFFERED",I,0))
"KRN",1.5,149,1,5,0)
CPT^4^E^9000010.11^^^^VPR CPT
"KRN",1.5,149,1,5,6)
S VALUE=$P($G(VPRM("CODES","CPT")),U)
"KRN",1.5,149,1,"B","CPT",5)

"KRN",1.5,149,1,"B","IsContraindicated",1)

"KRN",1.5,149,1,"B","Reaction",2)

"KRN",1.5,149,1,"B","Source",3)

"KRN",1.5,149,1,"B","VISOffers",4)

"KRN",1.5,149,1,"SEQ",1,1)

"KRN",1.5,149,1,"SEQ",2,2)

"KRN",1.5,149,1,"SEQ",3,3)

"KRN",1.5,149,1,"SEQ",4,5)

"KRN",1.5,149,1,"SEQ",5,4)

"KRN",1.5,149,19,0)
^^2^2^3180613^
"KRN",1.5,149,19,1,0)
This entity extends VPR VACCINATION; it expects the VPRM array defined by
"KRN",1.5,149,19,2,0)
VIMM^PXPXRM, called by the GET ID PROCESSING for each immunization.
"KRN",1.5,150,-1)
0^128
"KRN",1.5,150,0)
VPR IMM VIS^920^^^^S
"KRN",1.5,150,.1)
VIS
"KRN",1.5,150,1,0)
^1.51^4^4
"KRN",1.5,150,1,1,0)
Date^1^F^^^^
"KRN",1.5,150,1,1,6)
S VALUE=$P(VPRVIS,U,2)
"KRN",1.5,150,1,2,0)
Name^2^S^920^.01
"KRN",1.5,150,1,2,6)
S VALUE=$P(VPRVIS,U,3)
"KRN",1.5,150,1,3,0)
EditionDate^3^S^920^.02^^1
"KRN",1.5,150,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,150,1,3,6)
S VALUE=$P(VPRVIS,U,4)
"KRN",1.5,150,1,4,0)
Language^4^S^920^.04^
"KRN",1.5,150,1,4,6)
S VALUE=$P(VPRVIS,U,5)
"KRN",1.5,150,1,"B","Date",1)

"KRN",1.5,150,1,"B","EditionDate",3)

"KRN",1.5,150,1,"B","Language",4)

"KRN",1.5,150,1,"B","Name",2)

"KRN",1.5,150,1,"SEQ",1,1)

"KRN",1.5,150,1,"SEQ",2,2)

"KRN",1.5,150,1,"SEQ",3,3)

"KRN",1.5,150,1,"SEQ",4,4)

"KRN",1.5,150,3)
K VPRVIS
"KRN",1.5,150,4)
S VPRVIS=DIEN,DIEN=+DIEN
"KRN",1.5,150,19,0)
^^2^2^3181210^^
"KRN",1.5,150,19,1,0)
This entity returns a Vaccine Information Sheet (VIS) for an immunization,
"KRN",1.5,150,19,2,0)
within VPR IMM EXTENSION as part of the VPR VACCINATION entity.
"KRN",1.5,151,-1)
0^137
"KRN",1.5,151,0)
VPR VITAL EXTENSION^120.5^^^^S
"KRN",1.5,151,.1)
ObservationExtension
"KRN",1.5,151,1,0)
^1.51^5^5
"KRN",1.5,151,1,1,0)
Location^1^E^120.5^.05^^1^VPR LOCATION
"KRN",1.5,151,1,1,6)
S VALUE=$P($G(VPRGMV),U,5)
"KRN",1.5,151,1,2,0)
High^2^F^
"KRN",1.5,151,1,2,6)
S VALUE=$P($G(VPRANGE),U)
"KRN",1.5,151,1,3,0)
Low^3^F^
"KRN",1.5,151,1,3,6)
S VALUE=$P($G(VPRANGE),U,2)
"KRN",1.5,151,1,4,0)
BMI^4^F
"KRN",1.5,151,1,4,6)
N X S X=$P(VPRGMV,U,14) S:X VALUE=+X
"KRN",1.5,151,1,5,0)
Removed^5^S^120.5^
"KRN",1.5,151,1,5,6)
I $G(VPRV(2)) S VALUE=$$EXTERNAL^DILFD(120.506,.01,,+$P(VPRV(2),U,3))
"KRN",1.5,151,1,"B","BMI",4)

"KRN",1.5,151,1,"B","High",2)

"KRN",1.5,151,1,"B","Location",1)

"KRN",1.5,151,1,"B","Low",3)

"KRN",1.5,151,1,"B","Removed",5)

"KRN",1.5,151,1,"SEQ",1,1)

"KRN",1.5,151,1,"SEQ",2,2)

"KRN",1.5,151,1,"SEQ",3,3)

"KRN",1.5,151,1,"SEQ",4,4)

"KRN",1.5,151,1,"SEQ",5,5)

"KRN",1.5,151,19,0)
^^2^2^3180613^
"KRN",1.5,151,19,1,0)
This entity extends VPR VITAL MEASUREMENT; it expects VPRGMV and the VPRV
"KRN",1.5,151,19,2,0)
array, defined by the GET ID PROCESSING, and optionally ^TMP("VPRGMV",$J).
"KRN",1.5,152,-1)
0^138
"KRN",1.5,152,0)
VPR CPT MODIFIER^81.3^^^^S
"KRN",1.5,152,.1)
CPTModifier
"KRN",1.5,152,1,0)
^1.51^3^3
"KRN",1.5,152,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,152,1,1,6)
S VALUE=$S($P(VPRMOD,U,5)="C":"CPT-4",$P(VPRMOD,U,5)="H":"HCPCS",1:"VA81.3")
"KRN",1.5,152,1,2,0)
Code^6^F
"KRN",1.5,152,1,2,6)
S VALUE=$S($L($P(VPRMOD,U,4)):$P(VPRMOD,U,4),1:$P(VPRMOD,U,2))
"KRN",1.5,152,1,3,0)
Description^7^F
"KRN",1.5,152,1,3,6)
S VALUE=$P(VPRMOD,U,3)
"KRN",1.5,152,1,"B","Code",2)

"KRN",1.5,152,1,"B","Description",3)

"KRN",1.5,152,1,"B","SDACodingStandard",1)

"KRN",1.5,152,1,"SEQ",1,1)

"KRN",1.5,152,1,"SEQ",6,2)

"KRN",1.5,152,1,"SEQ",7,3)

"KRN",1.5,152,3)
K VPRMOD
"KRN",1.5,152,4)
S VPRMOD=$$MOD^ICPTMOD(DIEN,"I") S:VPRMOD<0 DDEOUT=1
"KRN",1.5,152,19,0)
^^2^2^3180615^
"KRN",1.5,152,19,1,0)
This entity returns a code^name^system for a modifier from file #81.3
"KRN",1.5,152,19,2,0)
using $$MOD^ICPTMOD.
"KRN",1.5,153,-1)
0^139
"KRN",1.5,153,0)
VPR ALLERGY ASSESSMENT^120.86^^^^S
"KRN",1.5,153,.1)
Allergy
"KRN",1.5,153,1,0)
^1.51^6^6
"KRN",1.5,153,1,1,0)
Allergy^3^E^120.86^1^^1^VPR CODE TABLE
"KRN",1.5,153,1,1,4)

"KRN",1.5,153,1,1,6)
S VALUE=$S($G(GMRAL)=0:"NKA^No Known Allergies",$G(GMRAL)=1:"ALG^Assessment",1:"NONE^No Assessment")
"KRN",1.5,153,1,2,0)
EnteredBy^22^E^120.86^2^^1^VPR USER
"KRN",1.5,153,1,3,0)
EnteredOn^24^S^120.86^3^^1
"KRN",1.5,153,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,153,1,4,0)
EnteredAt^23^E^120.86^^^^VPR FACILITY
"KRN",1.5,153,1,4,6)
S VALUE=$G(VASITE) ;default #4 ien
"KRN",1.5,153,1,5,0)
Clinician^5^E^120.86^2^^1^VPR PROVIDER
"KRN",1.5,153,1,6,0)
FromTime^25^S^120.86^3^^1
"KRN",1.5,153,1,6,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,153,1,"B","Allergy",1)

"KRN",1.5,153,1,"B","Clinician",5)

"KRN",1.5,153,1,"B","EnteredAt",4)

"KRN",1.5,153,1,"B","EnteredBy",2)

"KRN",1.5,153,1,"B","EnteredOn",3)

"KRN",1.5,153,1,"B","FromTime",6)

"KRN",1.5,153,1,"SEQ",3,1)

"KRN",1.5,153,1,"SEQ",5,5)

"KRN",1.5,153,1,"SEQ",22,2)

"KRN",1.5,153,1,"SEQ",23,4)

"KRN",1.5,153,1,"SEQ",24,3)

"KRN",1.5,153,1,"SEQ",25,6)

"KRN",1.5,153,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,153,3)
K GMRAL,VASITE
"KRN",1.5,153,5)
ASSESS^VPRSDAL
"KRN",1.5,153,19,0)
^^3^3^3181227^
"KRN",1.5,153,19,1,0)
This entity works with VPR ALLERGY to populate the Allergy container, if 
"KRN",1.5,153,19,2,0)
the patient has not been assessed or found to have No Known Allergies
"KRN",1.5,153,19,3,0)
(NKA).
"KRN",1.5,158,-1)
0^144
"KRN",1.5,158,0)
VPR RAD RPT EXTENSION^74^^^^S
"KRN",1.5,158,.1)
DocumentExtension
"KRN",1.5,158,1,0)
^1.51^3^3
"KRN",1.5,158,1,1,0)
CareProviders^1^L^^^^^VPR SIGNER
"KRN",1.5,158,1,1,1)
4^CareProvider
"KRN",1.5,158,1,1,6)
N X S X=$P($G(@VPRAE2@("V")),U) S:X DLIST(1)=X_"^V" ;verifier
"KRN",1.5,158,1,2,0)
NationalTitle^4^E^^^^^VPR CODE TABLE
"KRN",1.5,158,1,2,6)
S VALUE="18726-0^RADIOLOGY STUDIES^LOINC"
"KRN",1.5,158,1,3,0)
NationalTitleSubject^8^E^^^^^VPR CODE TABLE
"KRN",1.5,158,1,3,6)
S VALUE="4693357^RADIOLOGY^VHAT"
"KRN",1.5,158,1,"B","CareProviders",1)

"KRN",1.5,158,1,"B","NationalTitle",2)

"KRN",1.5,158,1,"B","NationalTitleSubject",3)

"KRN",1.5,158,1,"SEQ",1,1)

"KRN",1.5,158,1,"SEQ",4,2)

"KRN",1.5,158,1,"SEQ",8,3)

"KRN",1.5,158,19,0)
^^2^2^3180809^^
"KRN",1.5,158,19,1,0)
This entity extends VPR RAD REPORT; it expects the VPRAE2 variable
"KRN",1.5,158,19,2,0)
and ^TMP array to be defined.
"KRN",1.5,159,-1)
0^142
"KRN",1.5,159,0)
VPR LRAP EXTENSION^63.08^^^^S
"KRN",1.5,159,.1)
DocumentExtension
"KRN",1.5,159,1,0)
^1.51^3^3
"KRN",1.5,159,1,1,0)
CareProviders^1^L^^^^^VPR SIGNER
"KRN",1.5,159,1,1,1)
4^CareProvider
"KRN",1.5,159,1,1,6)
N X S X=$P($G(LR0),U,13) S:X DLIST(1)=X_"^V" ;verifier
"KRN",1.5,159,1,2,0)
NationalTitle^4^E^^^^^VPR CODE TABLE
"KRN",1.5,159,1,2,6)
S VALUE="27898-6^LABORATORY STUDIES^LOINC"
"KRN",1.5,159,1,3,0)
NationalTitleSubject^8^E^^^^^VPR CODE TABLE
"KRN",1.5,159,1,3,6)
S VALUE="4697104^LABORATORY^VHAT"
"KRN",1.5,159,1,"B","CareProviders",1)

"KRN",1.5,159,1,"B","NationalTitle",2)

"KRN",1.5,159,1,"B","NationalTitleSubject",3)

"KRN",1.5,159,1,"SEQ",1,1)

"KRN",1.5,159,1,"SEQ",4,2)

"KRN",1.5,159,1,"SEQ",8,3)

"KRN",1.5,159,19,0)
^^2^2^3180809^
"KRN",1.5,159,19,1,0)
This entity extends VPR LRAP REPORT; it expects the LR0 variable to be
"KRN",1.5,159,19,2,0)
defined.
"KRN",1.5,160,-1)
0^143
"KRN",1.5,160,0)
VPR LRMI EXTENSION^63.05^^^^S
"KRN",1.5,160,.1)
DocumentExtension
"KRN",1.5,160,1,0)
^1.51^3^3
"KRN",1.5,160,1,1,0)
CareProviders^1^L^^^^^VPR SIGNER
"KRN",1.5,160,1,1,1)
4^CareProvider
"KRN",1.5,160,1,1,6)
N X S X=$P($G(LR0),U,4) S:X DLIST(1)=X_"^V" ;verifier
"KRN",1.5,160,1,2,0)
NationalTitle^4^E^^^^^VPR CODE TABLE
"KRN",1.5,160,1,2,6)
S VALUE="18725-2^MICROBIOLOGY STUDIES^LOINC"
"KRN",1.5,160,1,3,0)
NationalTitleSubject^8^E^^^^^VPR CODE TABLE
"KRN",1.5,160,1,3,6)
S VALUE="4697104^LABORATORY^VHAT"
"KRN",1.5,160,1,"B","CareProviders",1)

"KRN",1.5,160,1,"B","NationalTitle",2)

"KRN",1.5,160,1,"B","NationalTitleSubject",3)

"KRN",1.5,160,1,"SEQ",1,1)

"KRN",1.5,160,1,"SEQ",4,2)

"KRN",1.5,160,1,"SEQ",8,3)

"KRN",1.5,160,19,0)
^^2^2^3180809^
"KRN",1.5,160,19,1,0)
This entity extends VPR LRMI REPORT; it expects the LR0 variable to be
"KRN",1.5,160,19,2,0)
defined.
"KRN",1.5,161,-1)
0^145
"KRN",1.5,161,0)
VPR SIGNER^200^^^^S
"KRN",1.5,161,.1)
CareProvider
"KRN",1.5,161,1,0)
^1.51^9^9
"KRN",1.5,161,1,1,0)
Code^4^I
"KRN",1.5,161,1,2,0)
Description^5^S^200^.01
"KRN",1.5,161,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,161,1,3,2)
VA200
"KRN",1.5,161,1,4,0)
Name^6^E^200^.01^^^VPR NAME
"KRN",1.5,161,1,5,0)
ContactInfo^8^C
"KRN",1.5,161,1,5,3,0)
^1.513I^3^3
"KRN",1.5,161,1,5,3,1,0)
3^WorkPhoneNumber
"KRN",1.5,161,1,5,3,2,0)
4^MobilePhoneNumber
"KRN",1.5,161,1,5,3,3,0)
5^EmailAddress
"KRN",1.5,161,1,5,3,"B",3,1)

"KRN",1.5,161,1,5,3,"B",4,2)

"KRN",1.5,161,1,5,3,"B",5,3)

"KRN",1.5,161,1,6,0)
WorkPhoneNumber^^S^200^.132
"KRN",1.5,161,1,7,0)
MobilePhoneNumber^^S^200^.137
"KRN",1.5,161,1,8,0)
EmailAddress^^S^200^.151
"KRN",1.5,161,1,9,0)
CareProviderType^9^E^200^^^^VPR CODE TABLE
"KRN",1.5,161,1,9,6)
N X S X=$G(VPROLE),VALUE=$S(X="S":"S^SIGNER",X="C":"C^COSIGNER",X="V":"V^VERIFIER",1:"")
"KRN",1.5,161,1,"B","CareProviderType",9)

"KRN",1.5,161,1,"B","Code",1)

"KRN",1.5,161,1,"B","ContactInfo",5)

"KRN",1.5,161,1,"B","Description",2)

"KRN",1.5,161,1,"B","EmailAddress",8)

"KRN",1.5,161,1,"B","MobilePhoneNumber",7)

"KRN",1.5,161,1,"B","Name",4)

"KRN",1.5,161,1,"B","SDACodingStandard",3)

"KRN",1.5,161,1,"B","WorkPhoneNumber",6)

"KRN",1.5,161,1,"SEQ",1,3)

"KRN",1.5,161,1,"SEQ",4,1)

"KRN",1.5,161,1,"SEQ",5,2)

"KRN",1.5,161,1,"SEQ",6,4)

"KRN",1.5,161,1,"SEQ",8,5)

"KRN",1.5,161,1,"SEQ",9,9)

"KRN",1.5,161,3)
K VPROLE
"KRN",1.5,161,4)
S VPROLE=$P(DIEN,U,2),DIEN=+DIEN S:'DIEN DDEOUT=1
"KRN",1.5,162,-1)
0^141
"KRN",1.5,162,0)
VPR FIM^783^^^^S
"KRN",1.5,162,.1)
Problem
"KRN",1.5,162,1,0)
^1.51^14^14
"KRN",1.5,162,1,1,0)
UpdatedOn^1^S^783^.12^^1
"KRN",1.5,162,1,1,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,162,1,2,0)
CustomPairs^3^L^^^^^VPR CUSTOM PAIR
"KRN",1.5,162,1,2,1)
4
"KRN",1.5,162,1,2,6)
D FIMS^VPRSDA ;sets VPRFIMS, DLIST array
"KRN",1.5,162,1,3,0)
ProblemDetails^5^F^
"KRN",1.5,162,1,3,6)
S VALUE=$G(VPRFIMS)
"KRN",1.5,162,1,4,0)
Problem^6^E^783^^^^VPR CODE TABLE
"KRN",1.5,162,1,4,6)
S VALUE="408907016^Functional independence measure^SNOMED CT"
"KRN",1.5,162,1,5,0)
Clinician^7^E^783^.16^1202^1^VPR PROVIDER
"KRN",1.5,162,1,5,6)
S VALUE=$G(VPRM("TIU",1202,"I"))
"KRN",1.5,162,1,6,0)
Category^10^E^783^^^^VPR CODE TABLE
"KRN",1.5,162,1,6,6)
S VALUE="248536006^Finding of functional performance and activity^SNOMED CT"
"KRN",1.5,162,1,7,0)
EnteredBy^14^E^783^.16^1302^1^VPR USER
"KRN",1.5,162,1,7,6)
S VALUE=$G(VPRM("TIU",1302,"I"))
"KRN",1.5,162,1,8,0)
EnteredAt^15^E^783^^^^VPR FACILITY
"KRN",1.5,162,1,8,6)
S VALUE=$$IEN^XUAF4($P(VPRSITE(1),U,2)) S:'VALUE VALUE=$G(VASITE)
"KRN",1.5,162,1,9,0)
EnteredOn^16^S^783^.16^1201^1
"KRN",1.5,162,1,9,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,162,1,9,6)
S VALUE=$G(VPRM("TIU",1201,"I"))
"KRN",1.5,162,1,10,0)
FromTime^17^S^783^.1^^1
"KRN",1.5,162,1,10,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,162,1,10,6)
N X S X=$P($G(VPRM(1)),U,10) S:$L(X) VALUE=$$INTDATE^VPRSDA(X)
"KRN",1.5,162,1,11,0)
ToTime^18^S^783^.11^^1
"KRN",1.5,162,1,11,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,162,1,11,6)
N X S X=$P($G(VPRM(1)),U,11) S:$L(X) VALUE=$$INTDATE^VPRSDA(X)
"KRN",1.5,162,1,12,0)
ExternalId^19^I
"KRN",1.5,162,1,13,0)
Extension^4^E^783^^^^VPR FIM EXTENSION
"KRN",1.5,162,1,13,6)
S VALUE=DIEN
"KRN",1.5,162,1,14,0)
Status^9^E^783^^^^VPR CODE TABLE
"KRN",1.5,162,1,14,6)
S VALUE="55561003^Active^SNOMED CT"
"KRN",1.5,162,1,"B","Category",6)

"KRN",1.5,162,1,"B","Clinician",5)

"KRN",1.5,162,1,"B","CustomPairs",2)

"KRN",1.5,162,1,"B","EnteredAt",8)

"KRN",1.5,162,1,"B","EnteredBy",7)

"KRN",1.5,162,1,"B","EnteredOn",9)

"KRN",1.5,162,1,"B","Extension",13)

"KRN",1.5,162,1,"B","ExternalId",12)

"KRN",1.5,162,1,"B","FromTime",10)

"KRN",1.5,162,1,"B","Problem",4)

"KRN",1.5,162,1,"B","ProblemDetails",3)

"KRN",1.5,162,1,"B","Status",14)

"KRN",1.5,162,1,"B","ToTime",11)

"KRN",1.5,162,1,"B","UpdatedOn",1)

"KRN",1.5,162,1,"SEQ",1,1)

"KRN",1.5,162,1,"SEQ",3,2)

"KRN",1.5,162,1,"SEQ",4,13)

"KRN",1.5,162,1,"SEQ",5,3)

"KRN",1.5,162,1,"SEQ",6,4)

"KRN",1.5,162,1,"SEQ",7,5)

"KRN",1.5,162,1,"SEQ",9,14)

"KRN",1.5,162,1,"SEQ",10,6)

"KRN",1.5,162,1,"SEQ",14,7)

"KRN",1.5,162,1,"SEQ",15,8)

"KRN",1.5,162,1,"SEQ",16,9)

"KRN",1.5,162,1,"SEQ",17,10)

"KRN",1.5,162,1,"SEQ",18,11)

"KRN",1.5,162,1,"SEQ",19,12)

"KRN",1.5,162,2)
S VASITE=+$$SITE^VASITE S:VASITE'>0 VASITE=$$KSP^XUPARAM("INST")
"KRN",1.5,162,3)
K VPRM,VPRSITE,VPRFIMS,VASITE
"KRN",1.5,162,4)
D FIM1^VPRSDA(DIEN)
"KRN",1.5,162,5)
FIM^VPRSDAQ
"KRN",1.5,162,19,0)
^1.519^2^2^3181227^^
"KRN",1.5,162,19,1,0)
This entity populates the Problem container with Functional Independence
"KRN",1.5,162,19,2,0)
Measurement data.
"KRN",1.5,163,-1)
0^140
"KRN",1.5,163,0)
VPR CUSTOM PAIR^^^^^S
"KRN",1.5,163,.1)
NVPair
"KRN",1.5,163,1,0)
^1.51^2^2
"KRN",1.5,163,1,1,0)
Name^1^F
"KRN",1.5,163,1,1,6)
S VALUE=$P(VPRITM,U)
"KRN",1.5,163,1,2,0)
Value^2^F
"KRN",1.5,163,1,2,6)
S VALUE=$P(VPRITM,U,2)
"KRN",1.5,163,1,"B","Name",1)

"KRN",1.5,163,1,"B","Value",2)

"KRN",1.5,163,1,"SEQ",1,1)

"KRN",1.5,163,1,"SEQ",2,2)

"KRN",1.5,163,3)
K VPRITM
"KRN",1.5,163,4)
S VPRITM=$G(DIEN)
"KRN",1.5,164,-1)
0^146
"KRN",1.5,164,0)
VPR HEALTH CONCERN^9000010.23^^^^S
"KRN",1.5,164,.1)
HealthConcern
"KRN",1.5,164,1,0)
^1.51^7^7
"KRN",1.5,164,1,1,0)
EnteredBy^1^E^9000010.23^.03^.23^1^VPR USER
"KRN",1.5,164,1,1,6)
S VALUE=$P(VPRVST0,U,23)
"KRN",1.5,164,1,2,0)
EnteredAt^2^E^9000010.23^.03^.06^1^VPR FACILITY
"KRN",1.5,164,1,2,6)
S VALUE=$P(VPRVST0,U,6)
"KRN",1.5,164,1,3,0)
EnteredOn^3^S^9000010.23^.03^.02^1
"KRN",1.5,164,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,164,1,3,6)
S VALUE=$P(VPRVST0,U,2)
"KRN",1.5,164,1,4,0)
EncounterNumber^8^S^9000010.23^.03^^1
"KRN",1.5,164,1,4,4)
S:'$D(^AUPNVSIT(VALUE,0)) VALUE=""
"KRN",1.5,164,1,4,6)
S VALUE=$G(VPRVST)
"KRN",1.5,164,1,5,0)
Description^10^S^9000010.23^.01
"KRN",1.5,164,1,5,6)
S:$P(VPRHF,U,2) VALUE=$P($G(^AUTTHF(+$P(VPRHF,U,2),0)),U)
"KRN",1.5,164,1,6,0)
Status^11^E^9000010.23^.04^^1^VPR CODE TABLE
"KRN",1.5,164,1,6,4)
S:$L(VALUE) VALUE=VALUE_U_$$EXTERNAL^DILFD(9000010.23,.04,,VALUE)
"KRN",1.5,164,1,6,6)
S VALUE=$G(VPRHF("LEVEL/SEVERITY"))
"KRN",1.5,164,1,7,0)
FromTime^5^S^9000010.23^.03^.02^1
"KRN",1.5,164,1,7,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,164,1,7,6)
S VALUE=$P(VPRVST0,U,2)
"KRN",1.5,164,1,"B","Description",5)

"KRN",1.5,164,1,"B","EncounterNumber",4)

"KRN",1.5,164,1,"B","EnteredAt",2)

"KRN",1.5,164,1,"B","EnteredBy",1)

"KRN",1.5,164,1,"B","EnteredOn",3)

"KRN",1.5,164,1,"B","FromTime",7)

"KRN",1.5,164,1,"B","Status",6)

"KRN",1.5,164,1,"SEQ",1,1)

"KRN",1.5,164,1,"SEQ",2,2)

"KRN",1.5,164,1,"SEQ",3,3)

"KRN",1.5,164,1,"SEQ",5,7)

"KRN",1.5,164,1,"SEQ",8,4)

"KRN",1.5,164,1,"SEQ",10,5)

"KRN",1.5,164,1,"SEQ",11,6)

"KRN",1.5,164,3)
K VPRHF,VPRVST,VPRVST0
"KRN",1.5,164,4)
K VPRHF D:$D(^AUPNVHF(+DIEN)) VHF^PXPXRM(+DIEN,.VPRHF) S VPRVST=$G(VPRHF("VISIT")),VPRHF=DIEN,DIEN=+DIEN,VPRVST0=$G(^AUPNVSIT(+VPRVST,0))
"KRN",1.5,164,5)
HFACTORS^VPRSDAQ
"KRN",1.5,165,-1)
0^147
"KRN",1.5,165,0)
VPR FIM EXTENSION^783^^^^S
"KRN",1.5,165,.1)
ProblemExtension
"KRN",1.5,165,1,0)
^1.51^1^1
"KRN",1.5,165,1,1,0)
OnsetDate^12^S^783^.09^^1
"KRN",1.5,165,1,1,6)
N X S X=$P($G(VPRM(1)),U,9) S:$L(X) VALUE=$$INTDATE^VPRSDA(X)
"KRN",1.5,165,1,"B","OnsetDate",1)

"KRN",1.5,165,1,"SEQ",12,1)

"KRN",1.5,165,19,0)
^^2^2^3180823^
"KRN",1.5,165,19,1,0)
This entity extends VPR FIM, matching the relevant properties in VPR
"KRN",1.5,165,19,2,0)
PROBLEM EXTENSION for the Problem container.
"KRN",1.5,166,-1)
0^148
"KRN",1.5,166,0)
VPR ORDER STATUS^100.01^^^^S
"KRN",1.5,166,.1)
OrderStatus
"KRN",1.5,166,1,0)
^1.51^3^3
"KRN",1.5,166,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,166,1,1,2)
VHAT
"KRN",1.5,166,1,2,0)
Code^6^S^100.01^99.99
"KRN",1.5,166,1,3,0)
Description^7^S^100.01^.01
"KRN",1.5,166,1,"B","Code",2)

"KRN",1.5,166,1,"B","Description",3)

"KRN",1.5,166,1,"B","SDACodingStandard",1)

"KRN",1.5,166,1,"SEQ",1,1)

"KRN",1.5,166,1,"SEQ",6,2)

"KRN",1.5,166,1,"SEQ",7,3)

"KRN",1.5,167,-1)
0^151
"KRN",1.5,167,0)
VPR AMIS^40.7^^^^S
"KRN",1.5,167,.1)
StopCode
"KRN",1.5,167,1,0)
^1.51^3^3
"KRN",1.5,167,1,1,0)
SDACodingStandard^1^F
"KRN",1.5,167,1,1,2)
AMIS
"KRN",1.5,167,1,2,0)
Code^6^S^40.7^1
"KRN",1.5,167,1,2,6)
S VALUE=$P(VPRCODE,U)
"KRN",1.5,167,1,3,0)
Description^7^S^40.7^.01
"KRN",1.5,167,1,3,6)
S VALUE=$P(VPRCODE,U,2)
"KRN",1.5,167,1,"B","Code",2)

"KRN",1.5,167,1,"B","Description",3)

"KRN",1.5,167,1,"B","SDACodingStandard",1)

"KRN",1.5,167,1,"SEQ",1,1)

"KRN",1.5,167,1,"SEQ",6,2)

"KRN",1.5,167,1,"SEQ",7,3)

"KRN",1.5,167,3)
K VPRCODE
"KRN",1.5,167,4)
S VPRCODE=$$AMIS^VPRDVSIT(DIEN) S:VPRCODE="" DDEOUT=1
"KRN",1.5,168,-1)
0^149
"KRN",1.5,168,0)
VPR TEAM MEMBER^200^^^^S
"KRN",1.5,168,.1)
CareProvider
"KRN",1.5,168,1,0)
^1.51^11^11
"KRN",1.5,168,1,1,0)
Code^4^I
"KRN",1.5,168,1,2,0)
Description^5^F^^
"KRN",1.5,168,1,2,6)
S VALUE=$G(VPROLE)
"KRN",1.5,168,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,168,1,3,2)
VA200
"KRN",1.5,168,1,4,0)
Name^6^E^200^.01^^^VPR NAME
"KRN",1.5,168,1,5,0)
ContactInfo^8^C
"KRN",1.5,168,1,5,3,0)
^1.513I^3^3
"KRN",1.5,168,1,5,3,1,0)
3^WorkPhoneNumber
"KRN",1.5,168,1,5,3,2,0)
4^MobilePhoneNumber
"KRN",1.5,168,1,5,3,3,0)
5^EmailAddress
"KRN",1.5,168,1,5,3,"B",3,1)

"KRN",1.5,168,1,5,3,"B",4,2)

"KRN",1.5,168,1,5,3,"B",5,3)

"KRN",1.5,168,1,6,0)
WorkPhoneNumber^^S^200^.132
"KRN",1.5,168,1,7,0)
MobilePhoneNumber^^S^200^.137
"KRN",1.5,168,1,8,0)
EmailAddress^^S^200^.151
"KRN",1.5,168,1,9,0)
CareProviderType^9^E^200^^^^VPR PERSON CLASS
"KRN",1.5,168,1,9,6)
S DATA=$$TAXIND^XUSTAX(DIEN) I DATA'="^",+DATA'=-1 S VALUE=$P(DATA,U,2)
"KRN",1.5,168,1,10,0)
AtOrganization^12^E^200^^^^VPR FACILITY
"KRN",1.5,168,1,10,6)
S VALUE=$G(VASITE)
"KRN",1.5,168,1,11,0)
Extension^3^E^200^^^^VPR PROVIDER EXTENSION
"KRN",1.5,168,1,11,6)
S VALUE=DIEN
"KRN",1.5,168,1,"B","AtOrganization",10)

"KRN",1.5,168,1,"B","CareProviderType",9)

"KRN",1.5,168,1,"B","Code",1)

"KRN",1.5,168,1,"B","ContactInfo",5)

"KRN",1.5,168,1,"B","Description",2)

"KRN",1.5,168,1,"B","EmailAddress",8)

"KRN",1.5,168,1,"B","Extension",11)

"KRN",1.5,168,1,"B","MobilePhoneNumber",7)

"KRN",1.5,168,1,"B","Name",4)

"KRN",1.5,168,1,"B","SDACodingStandard",3)

"KRN",1.5,168,1,"B","WorkPhoneNumber",6)

"KRN",1.5,168,1,"SEQ",1,3)

"KRN",1.5,168,1,"SEQ",3,11)

"KRN",1.5,168,1,"SEQ",4,1)

"KRN",1.5,168,1,"SEQ",5,2)

"KRN",1.5,168,1,"SEQ",6,4)

"KRN",1.5,168,1,"SEQ",8,5)

"KRN",1.5,168,1,"SEQ",9,9)

"KRN",1.5,168,1,"SEQ",12,10)

"KRN",1.5,168,3)
K VPROLE
"KRN",1.5,168,4)
S VPROLE=$P(DIEN,U,2),DIEN=+DIEN S:'DIEN DDEOUT=1
"KRN",1.5,169,-1)
0^152
"KRN",1.5,169,0)
VPR FACILITY ADDRESS^4^^^^S
"KRN",1.5,169,.1)
Address
"KRN",1.5,169,1,0)
^1.51^4^4
"KRN",1.5,169,1,1,0)
Street^4^S^4^1.01
"KRN",1.5,169,1,1,6)
S VALUE=$P($G(VAPA),U)
"KRN",1.5,169,1,2,0)
City^5^E^4^1.03^^^VPR CODE ONLY
"KRN",1.5,169,1,2,6)
S VALUE=$P($G(VAPA),U,2)
"KRN",1.5,169,1,3,0)
State^6^E^4^.02^^1^VPR STATE
"KRN",1.5,169,1,3,6)
Q  ;S VALUE=$P($G(VAPA),U,3)
"KRN",1.5,169,1,4,0)
Zip^7^E^4^1.04^^^VPR CODE ONLY
"KRN",1.5,169,1,4,6)
S VALUE=$P($G(VAPA),U,4)
"KRN",1.5,169,1,"B","City",2)

"KRN",1.5,169,1,"B","State",3)

"KRN",1.5,169,1,"B","Street",1)

"KRN",1.5,169,1,"B","Zip",4)

"KRN",1.5,169,1,"SEQ",4,1)

"KRN",1.5,169,1,"SEQ",5,2)

"KRN",1.5,169,1,"SEQ",6,3)

"KRN",1.5,169,1,"SEQ",7,4)

"KRN",1.5,169,3)
K VAPA
"KRN",1.5,169,4)
S VAPA=$$PADD^XUAF4(DIEN)
"KRN",1.5,169,19,0)
^1.519^2^2^3181130^^
"KRN",1.5,169,19,1,0)
This entity supports VPR FAMILY DOCTOR, and expects the Institution file #4
"KRN",1.5,169,19,2,0)
ien as the ID.
"KRN",1.5,170,-1)
0^153
"KRN",1.5,170,0)
VPR FAMILY DOCTOR^200^^^^S
"KRN",1.5,170,.1)
CareProvider
"KRN",1.5,170,1,0)
^1.51^9^9
"KRN",1.5,170,1,1,0)
Code^4^I
"KRN",1.5,170,1,2,0)
Description^5^S^200^.01
"KRN",1.5,170,1,3,0)
SDACodingStandard^1^F
"KRN",1.5,170,1,3,2)
VA200
"KRN",1.5,170,1,4,0)
Name^6^E^200^.01^^^VPR NAME
"KRN",1.5,170,1,5,0)
ContactInfo^8^C
"KRN",1.5,170,1,5,3,0)
^1.513I^3^3
"KRN",1.5,170,1,5,3,1,0)
3^WorkPhoneNumber
"KRN",1.5,170,1,5,3,2,0)
4^MobilePhoneNumber
"KRN",1.5,170,1,5,3,3,0)
5^EmailAddress
"KRN",1.5,170,1,5,3,"B",3,1)

"KRN",1.5,170,1,5,3,"B",4,2)

"KRN",1.5,170,1,5,3,"B",5,3)

"KRN",1.5,170,1,6,0)
WorkPhoneNumber^^S^200^.132
"KRN",1.5,170,1,7,0)
MobilePhoneNumber^^S^200^.137
"KRN",1.5,170,1,8,0)
EmailAddress^^S^200^.151
"KRN",1.5,170,1,9,0)
Address^7^E^^^^^VPR FACILITY ADDRESS
"KRN",1.5,170,1,9,6)
S VALUE=$G(VASITE)
"KRN",1.5,170,1,"B","Address",9)

"KRN",1.5,170,1,"B","Code",1)

"KRN",1.5,170,1,"B","ContactInfo",5)

"KRN",1.5,170,1,"B","Description",2)

"KRN",1.5,170,1,"B","EmailAddress",8)

"KRN",1.5,170,1,"B","MobilePhoneNumber",7)

"KRN",1.5,170,1,"B","Name",4)

"KRN",1.5,170,1,"B","SDACodingStandard",3)

"KRN",1.5,170,1,"B","WorkPhoneNumber",6)

"KRN",1.5,170,1,"SEQ",1,3)

"KRN",1.5,170,1,"SEQ",4,1)

"KRN",1.5,170,1,"SEQ",5,2)

"KRN",1.5,170,1,"SEQ",6,4)

"KRN",1.5,170,1,"SEQ",7,9)

"KRN",1.5,170,1,"SEQ",8,5)

"KRN",1.5,171,-1)
0^154
"KRN",1.5,171,0)
VPR PROVIDER EXTENSION^200^^^^S
"KRN",1.5,171,.1)
CareProviderExtension
"KRN",1.5,171,1,0)
^1.51^2^2
"KRN",1.5,171,1,1,0)
Role^1^F
"KRN",1.5,171,1,1,6)
S VALUE=$G(VPROLE)
"KRN",1.5,171,1,2,0)
Title^2^S^200^8
"KRN",1.5,171,1,"B","Role",1)

"KRN",1.5,171,1,"B","Title",2)

"KRN",1.5,171,1,"SEQ",1,1)

"KRN",1.5,171,1,"SEQ",2,2)

"KRN",1.5,171,19,0)
^^4^4^3181218^
"KRN",1.5,171,19,1,0)
This entity supports VPR PROVIDER, and expects the New Person file #200
"KRN",1.5,171,19,2,0)
ien as the ID. It will also optionally include the name of the Role the
"KRN",1.5,171,19,3,0)
provider is playing in the context used, if set into local variable
"KRN",1.5,171,19,4,0)
VPROLE.
"KRN",1.5,172,-1)
0^155
"KRN",1.5,172,0)
VPR PATIENT LANGUAGE^2.07^^^^S
"KRN",1.5,172,.1)
PatientLanguage
"KRN",1.5,172,1,0)
^1.51^3^3
"KRN",1.5,172,1,1,0)
PreferredLanguage^7^E^2.07^.02^^^VPR LANGUAGE
"KRN",1.5,172,1,1,4)
S DATA=VALUE,VALUE=$$FIND1^DIC(.85,,"X",VALUE)
"KRN",1.5,172,1,1,6)
S VALUE=$P($G(VADM(13,1)),U,2)
"KRN",1.5,172,1,2,0)
Use^8^F
"KRN",1.5,172,1,2,6)
S VALUE=$G(VASTN)
"KRN",1.5,172,1,3,0)
EnteredOn^9^S^2.07^.01^^1
"KRN",1.5,172,1,3,4)
S VALUE=$$DATE^VPRSDA(VALUE)
"KRN",1.5,172,1,3,6)
S VALUE=$P($G(VADM(13)),U)
"KRN",1.5,172,1,"B","EnteredOn",3)

"KRN",1.5,172,1,"B","PreferredLanguage",1)

"KRN",1.5,172,1,"B","Use",2)

"KRN",1.5,172,1,"SEQ",7,1)

"KRN",1.5,172,1,"SEQ",8,2)

"KRN",1.5,172,1,"SEQ",9,3)

"KRN",1.5,172,19,0)
^^3^3^3181221^
"KRN",1.5,172,19,1,0)
This entity supports VPR PATIENT, returning the patient's preferred
"KRN",1.5,172,19,2,0)
language from the Language Date/Time sub-file. It expects the VADM array
"KRN",1.5,172,19,3,0)
to be defined.
"KRN",19,14411,-1)
0^2
"KRN",19,14411,0)
VPR HS ENABLE^Enable Data Monitoring^^R^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14411,1,0)
^^2^2^3181017^
"KRN",19,14411,1,1,0)
This option enables or disables the tracking of patient data changes in
"KRN",19,14411,1,2,0)
the ^VPR("AVPR") index, for retrieval by the Regional Health Connect server.
"KRN",19,14411,25)
ON^VPRHSX
"KRN",19,14411,"U")
ENABLE DATA MONITORING
"KRN",19,14412,-1)
0^1
"KRN",19,14412,0)
VPR HS CLEAR LIST^Clear the Update List^^R^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14412,1,0)
^^3^3^3181017^
"KRN",19,14412,1,1,0)
This option allows a site to remove entries from the Health Connect update
"KRN",19,14412,1,2,0)
list, if needed. Use with caution, and only at the direction of Health
"KRN",19,14412,1,3,0)
Product Support or development staff!
"KRN",19,14412,25)
LAST^VPRHSX
"KRN",19,14412,"U")
CLEAR THE UPDATE LIST
"KRN",19,14413,-1)
0^4
"KRN",19,14413,0)
VPR HS PUSH^Add records to Update List^^R^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14413,1,0)
^^3^3^3181017^
"KRN",19,14413,1,1,0)
This option allows a site to add a patient and container to the update list,
"KRN",19,14413,1,2,0)
to force that container to rebuild if it is suspected that the data cache
"KRN",19,14413,1,3,0)
has gotten out of synch.
"KRN",19,14413,25)
GET^VPRHSX
"KRN",19,14413,"U")
ADD RECORDS TO UPDATE LIST
"KRN",19,14414,-1)
0^5
"KRN",19,14414,0)
VPR HS TEST^Test SDA Extracts^^R^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14414,1,0)
^^2^2^3181017^
"KRN",19,14414,1,1,0)
This option allows a site to run the data extracts for the Regional
"KRN",19,14414,1,2,0)
Health Connect server from programmer mode, to view the SDA objects.
"KRN",19,14414,25)
EN^VPRHST
"KRN",19,14414,"U")
TEST SDA EXTRACTS
"KRN",19,14415,-1)
0^3
"KRN",19,14415,0)
VPR HS MENU^VPR Health Share Utilities^^M^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",19,14415,1,0)
^^2^2^3181017^
"KRN",19,14415,1,1,0)
This menu contains utilities for managing the interface between the VistA
"KRN",19,14415,1,2,0)
Virtual Patient Record (VPR) and the Regional Health Connect servers.
"KRN",19,14415,10,0)
^19.01IP^4^4
"KRN",19,14415,10,1,0)
14411^^1
"KRN",19,14415,10,1,"^")
VPR HS ENABLE
"KRN",19,14415,10,2,0)
14412^^2
"KRN",19,14415,10,2,"^")
VPR HS CLEAR LIST
"KRN",19,14415,10,3,0)
14413^^3
"KRN",19,14415,10,3,"^")
VPR HS PUSH
"KRN",19,14415,10,4,0)
14414^^4
"KRN",19,14415,10,4,"^")
VPR HS TEST
"KRN",19,14415,99)
64938,30168
"KRN",19,14415,"U")
VPR HEALTH SHARE UTILITIES
"KRN",101,1240,-1)
2^3
"KRN",101,1240,0)
DGPM MOVEMENT EVENTS^MOVEMENT EVENTS v 5.0^^X^10000000407^^^^^^^114
"KRN",101,1240,10,0)
^101.01PA^38^38
"KRN",101,1240,10,38,0)
6189^^^
"KRN",101,1240,10,38,"^")
VPR INPT EVENTS
"KRN",101,1302,-1)
2^22
"KRN",101,1302,0)
SDAM APPOINTMENT EVENTS^Appointment Event Driver^^X^10000000407^^^^^^^16
"KRN",101,1302,10,0)
^101.01PA^20^20
"KRN",101,1302,10,20,0)
6190^^^
"KRN",101,1302,10,20,"^")
VPR APPT EVENTS
"KRN",101,2185,-1)
2^9
"KRN",101,2185,0)
IBCN NEW INSURANCE EVENTS^IB New Insurance Event Driver^^X^11247^^^^^^^192
"KRN",101,2185,10,0)
^101.01PA^3^3
"KRN",101,2185,10,3,0)
6208^^^
"KRN",101,2185,10,3,"^")
VPR IBCN EVENTS
"KRN",101,2690,-1)
2^20
"KRN",101,2690,0)
RA EVSEND OR^Radiology event sent to OE/RR^^X^10000000407^^^^^^^31
"KRN",101,2690,10,0)
^101.01PA^4^4
"KRN",101,2690,10,4,0)
6192^^^
"KRN",101,2690,10,4,"^")
VPR XQOR EVENTS
"KRN",101,2700,-1)
2^19
"KRN",101,2700,0)
PXK VISIT DATA EVENT^VISIT RELATED DATA^^X^10000000407^^^^^^^
"KRN",101,2700,10,0)
^101.01PA^6^6
"KRN",101,2700,10,6,0)
6191^^^
"KRN",101,2700,10,6,"^")
VPR PCE EVENTS
"KRN",101,2894,-1)
2^7
"KRN",101,2894,0)
GMRA SIGN-OFF ON DATA^Sign-off on Reaction Data^^X^10000000407^^^^^^^247
"KRN",101,2894,10,0)
^101.01PA^2^2
"KRN",101,2894,10,2,0)
6193^^^
"KRN",101,2894,10,2,"^")
VPR GMRA EVENTS
"KRN",101,2896,-1)
2^6
"KRN",101,2896,0)
GMRA ENTERED IN ERROR^Reaction Data Entered in Error^^X^10000000407^^^^^^^247
"KRN",101,2896,10,0)
^101.01PA^2^2
"KRN",101,2896,10,2,0)
6205^^^
"KRN",101,2896,10,2,"^")
VPR GMRA ERROR EVENTS
"KRN",101,2905,-1)
2^41
"KRN",101,2905,0)
SCMC PATIENT TEAM CHANGES^PCMM Patient Team Update Event Driver^^X^10000000407^^^^^^^16
"KRN",101,2905,10,0)
^101.01PA^2^2
"KRN",101,2905,10,2,0)
6200^^^
"KRN",101,2905,10,2,"^")
VPR PCMM TEAM
"KRN",101,2906,-1)
2^42
"KRN",101,2906,0)
SCMC PATIENT TEAM POSITION CHANGES^PCMM Patient Team Position Update Event Driver^^X^10000000407^^^^^^^
"KRN",101,2906,10,0)
^101.01PA^2^2
"KRN",101,2906,10,2,0)
6201^^^
"KRN",101,2906,10,2,"^")
VPR PCMM TEAM POSITION
"KRN",101,3336,-1)
2^10
"KRN",101,3336,0)
LR7O CH EVSEND OR^LAB => OE/RR ORDER MESSAGE EVENT^^X^10000000407^^^^^^^
"KRN",101,3336,10,0)
^101.01PA^4^4
"KRN",101,3336,10,4,0)
6192^^^
"KRN",101,3336,10,4,"^")
VPR XQOR EVENTS
"KRN",101,3339,-1)
2^45
"KRN",101,3339,0)
LR7O AP EVSEND OR^ANATOMIC PATH => OE/RR ORDER MESSAGE^^X^11712^^^^^^^
"KRN",101,3339,10,0)
^101.01PA^3^2
"KRN",101,3339,10,3,0)
6209^^^
"KRN",101,3339,10,3,"^")
VPR LRAP EVENTS
"KRN",101,3373,-1)
2^18
"KRN",101,3373,0)
PS EVSEND OR^Send Pharmacy orders to CPRS.^^X^1^^^^^^^18
"KRN",101,3373,10,0)
^101.01PA^6^6
"KRN",101,3373,10,6,0)
6192^^^
"KRN",101,3373,10,6,"^")
VPR XQOR EVENTS
"KRN",101,3392,-1)
2^8
"KRN",101,3392,0)
GMRC EVSEND OR^Consults event sent to OE/RR^^X^10000000407^^^^^^^294
"KRN",101,3392,10,0)
^101.01PA^6^6
"KRN",101,3392,10,6,0)
6192^^^
"KRN",101,3392,10,6,"^")
VPR XQOR EVENTS
"KRN",101,3411,-1)
2^4
"KRN",101,3411,0)
FH EVSEND OR^FH --> OR event messages^^X^10000000407^^^^^^^
"KRN",101,3411,10,0)
^101.01PA^4^4
"KRN",101,3411,10,4,0)
6192^^^
"KRN",101,3411,10,4,"^")
VPR XQOR EVENTS
"KRN",101,3418,-1)
2^24
"KRN",101,3418,0)
VAFC ADT-A08 SERVER^Registration's ADT-A08 Server Protocol^^E^10000000407^^^^^^^114
"KRN",101,3418,775,0)
^101.0775PA^6^6
"KRN",101,3418,775,6,0)
6199
"KRN",101,3418,775,6,"^")
VPR ADT-A08 CLIENT
"KRN",101,3529,-1)
2^16
"KRN",101,3529,0)
OR EVSEND RA^OE/RR => RAD/NM MESSAGE EVENT^^X^10000000407^^^^^^^
"KRN",101,3529,10,0)
^101.01PA^4^4
"KRN",101,3529,10,4,0)
6194^^^
"KRN",101,3529,10,4,"^")
VPR NA EVENTS
"KRN",101,3530,-1)
2^13
"KRN",101,3530,0)
OR EVSEND LRCH^OE/RR => LAB MESSAGE EVENT^^X^10000000407^^^^^^^
"KRN",101,3530,10,0)
^101.01PA^4^4
"KRN",101,3530,10,4,0)
6194^^^
"KRN",101,3530,10,4,"^")
VPR NA EVENTS
"KRN",101,3535,-1)
2^11
"KRN",101,3535,0)
OR EVSEND FH^OE/RR => DIET MESSAGE EVENT^^X^10000000407^^^^^^^
"KRN",101,3535,10,0)
^101.01PA^4^4
"KRN",101,3535,10,4,0)
6194^^^
"KRN",101,3535,10,4,"^")
VPR NA EVENTS
"KRN",101,3536,-1)
2^14
"KRN",101,3536,0)
OR EVSEND ORG^OE/RR => GENERIC MESSAGE EVENT^^X^10000000407^^^^^^^
"KRN",101,3536,10,0)
^101.01PA^4^4
"KRN",101,3536,10,4,0)
6192^^^
"KRN",101,3536,10,4,"^")
VPR XQOR EVENTS
"KRN",101,3537,-1)
2^15
"KRN",101,3537,0)
OR EVSEND PS^OE/RR => PHARMACY MESSAGE EVENT^^X^10000000407^^^^^^^
"KRN",101,3537,10,0)
^101.01PA^4^4
"KRN",101,3537,10,4,0)
6194^^^
"KRN",101,3537,10,4,"^")
VPR NA EVENTS
"KRN",101,3539,-1)
2^12
"KRN",101,3539,0)
OR EVSEND GMRC^OE/RR => CONSULTS MESSAGE EVENT^^X^10000000407^^^^^^^
"KRN",101,3539,10,0)
^101.01PA^6^6
"KRN",101,3539,10,6,0)
6194^^^
"KRN",101,3539,10,6,"^")
VPR NA EVENTS
"KRN",101,4717,-1)
2^1
"KRN",101,4717,0)
DG FIELD MONITOR^DG Field Monitor^^X^10000000407^^^^^^^114
"KRN",101,4717,10,0)
^101.01PA^5^5
"KRN",101,4717,10,5,0)
6188^^^
"KRN",101,4717,10,5,"^")
VPR DG UPDATES
"KRN",101,4931,-1)
2^2
"KRN",101,4931,0)
DGPF PRF ORU/R01 EVENT^^^E^10000000020^^^^^^^114
"KRN",101,4931,775,0)
^101.0775PA^2^2
"KRN",101,4931,775,2,0)
6206
"KRN",101,4931,775,2,"^")
VPR DGPF EVENTS
"KRN",101,5058,-1)
2^21
"KRN",101,5058,0)
RMIM DRIVER^FIM - FSOD EVENT DRIVER^^E^10000000033^^^^^^^
"KRN",101,5058,775,0)
^101.0775PA^2^2
"KRN",101,5058,775,2,0)
6207
"KRN",101,5058,775,2,"^")
VPR RMIM EVENTS
"KRN",101,5996,-1)
2^5
"KRN",101,5996,0)
GMPL EVENT^Problem List Update Event^^X^10000000407^^^^^^^402
"KRN",101,5996,10,0)
^101.01PA^1^1
"KRN",101,5996,10,1,0)
6195^^1^
"KRN",101,5996,10,1,"^")
VPR GMPL EVENT
"KRN",101,6188,-1)
0^28
"KRN",101,6188,0)
VPR DG UPDATES^DG updates for VPR^^A^^^^^^^^
"KRN",101,6188,1,0)
^101.06^1^1^3101129^^^^
"KRN",101,6188,1,1,0)
This protocol will track Patient file changes for VPR.
"KRN",101,6188,20)
D DG^VPREVNT
"KRN",101,6188,99)
64685,46921
"KRN",101,6189,-1)
0^34
"KRN",101,6189,0)
VPR INPT EVENTS^Inpatient Movement events for VPR^^A^^^^^^^^
"KRN",101,6189,1,0)
^101.06^1^1^3101202^^^^
"KRN",101,6189,1,1,0)
This protocol will track patient admissions and discharges for VPR.
"KRN",101,6189,20)
D DGPM^VPREVNT
"KRN",101,6189,99)
64685,46921
"KRN",101,6190,-1)
0^27
"KRN",101,6190,0)
VPR APPT EVENTS^Appointment events for VPR^^A^^^^^^^^
"KRN",101,6190,1,0)
^101.06^1^1^3101129^^^^
"KRN",101,6190,1,1,0)
This protocol will track appointments for VPR.
"KRN",101,6190,20)
D SDAM^VPREVNT
"KRN",101,6190,99)
64685,46921
"KRN",101,6191,-1)
0^36
"KRN",101,6191,0)
VPR PCE EVENTS^PCE events for VPR^^A^^^^^^^^
"KRN",101,6191,1,0)
^101.06^1^1^3101129^^^
"KRN",101,6191,1,1,0)
This protocol will track PCE visit data for VPR.
"KRN",101,6191,20)
D PCE^VPREVNT
"KRN",101,6191,99)
64685,46921
"KRN",101,6192,-1)
0^38
"KRN",101,6192,0)
VPR XQOR EVENTS^XQOR HL7 events for VPR^^A^^^^^^^^
"KRN",101,6192,1,0)
^101.06^3^3^3101129^^
"KRN",101,6192,1,1,0)
This protocol monitors order events for VPR.  It is placed on the 
"KRN",101,6192,1,2,0)
* EVSEND OR protocols to check for updates being sent from ancillary
"KRN",101,6192,1,3,0)
packages to Order Entry; it monitors when orders are completed.
"KRN",101,6192,20)
D XQOR^VPREVNT(.XQORMSG)
"KRN",101,6192,99)
64685,46921
"KRN",101,6193,-1)
0^32
"KRN",101,6193,0)
VPR GMRA EVENTS^Allergy Events for VPR^^A^^^^^^^^
"KRN",101,6193,1,0)
^101.06^1^1^3120822^^
"KRN",101,6193,1,1,0)
This protocol will track Allergy data updates for VPR.
"KRN",101,6193,20)
D GMRA^VPREVNT("")
"KRN",101,6193,99)
64685,46921
"KRN",101,6194,-1)
0^35
"KRN",101,6194,0)
VPR NA EVENTS^XQOR HL7 events for VPR^^A^^^^^^^^
"KRN",101,6194,1,0)
^101.06^3^3^3110818^^^
"KRN",101,6194,1,1,0)
This protocol monitors order events for VPR.  It is placed on the 
"KRN",101,6194,1,2,0)
OR EVSEND * protocols to check for order numbers assigned to new orders
"KRN",101,6194,1,3,0)
placed from the ancillary packages.
"KRN",101,6194,20)
D XQOR^VPREVNT(.XQORMSG,1)
"KRN",101,6194,99)
64685,46921
"KRN",101,6195,-1)
0^30
"KRN",101,6195,0)
VPR GMPL EVENT^Problem List events for VPR^^A^^^^^^^^
"KRN",101,6195,1,0)
^101.06^1^1^3110823^^^^
"KRN",101,6195,1,1,0)
This protocol will track new and updated problems for VPR.
"KRN",101,6195,20)
D GMPL^VPREVNT(DFN,GMPIFN)
"KRN",101,6195,99)
64685,46921
"KRN",101,6199,-1)
0^26
"KRN",101,6199,0)
VPR ADT-A08 CLIENT^VPR HL7 ADT-A08 Client^^S^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",101,6199,1,0)
^^8^8^3180928^
"KRN",101,6199,1,1,0)
This client protocol is used to process HL7 ADT/A08 messages published by 
"KRN",101,6199,1,2,0)
the VAFC ADT-A08 SERVER protocol.
"KRN",101,6199,1,3,0)
 
"KRN",101,6199,1,4,0)
The client causes a VPR 'freshness' event for each set of updates made to 
"KRN",101,6199,1,5,0)
the Patient file outside of the registration process, including the DG
"KRN",101,6199,1,6,0)
SECURITY EDIT/EDIT option.
"KRN",101,6199,1,7,0)
 
"KRN",101,6199,1,8,0)
Note: The ROUTING LOGIC does not send any HL7 messages.
"KRN",101,6199,4)
^^^
"KRN",101,6199,99)
64685,46921
"KRN",101,6199,770)
^VPR HL7^^^^^^^^^ADT
"KRN",101,6199,774)
D ADT^VPREHL7
"KRN",101,6200,-1)
0^39
"KRN",101,6200,0)
VPR PCMM TEAM^PCMM Team events for VPR^^A^^^^^^^^
"KRN",101,6200,20)
D PCMMT^VPREVNT
"KRN",101,6200,99)
64685,46921
"KRN",101,6201,-1)
0^40
"KRN",101,6201,0)
VPR PCMM TEAM POSITION^PCMM Team Position events for VPR^^A^^^^^^^^
"KRN",101,6201,20)
D PCMMTP^VPREVNT
"KRN",101,6201,99)
64685,46921
"KRN",101,6203,-1)
2^17
"KRN",101,6203,0)
OR EVSEND VPR^OE/RR => VPR MESSAGE^^X^10000000407
"KRN",101,6203,10,0)
^101.01PA^1^1
"KRN",101,6203,10,1,0)
6192^^^
"KRN",101,6203,10,1,"^")
VPR XQOR EVENTS
"KRN",101,6205,-1)
0^31
"KRN",101,6205,0)
VPR GMRA ERROR EVENTS^Allergy Error Events for VPR^^A^^^^^^^^
"KRN",101,6205,1,0)
^101.06^1^1^3120822^^
"KRN",101,6205,1,1,0)
This protocol will track Allergy data updates for VPR.
"KRN",101,6205,20)
D GMRA^VPREVNT("@")
"KRN",101,6205,99)
64890,55309
"KRN",101,6206,-1)
0^29
"KRN",101,6206,0)
VPR DGPF EVENTS^PRF Events for VPR^^S^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",101,6206,1,0)
^^7^7^3180906^
"KRN",101,6206,1,1,0)
This client protocol is used to process HL7 ORU/R01 messages published by 
"KRN",101,6206,1,2,0)
the DGPF PRF ORU/R01 EVENT protocol.
"KRN",101,6206,1,3,0)
 
"KRN",101,6206,1,4,0)
The client causes a VPR 'freshness' event when a patient record flag is 
"KRN",101,6206,1,5,0)
added or modified.
"KRN",101,6206,1,6,0)
 
"KRN",101,6206,1,7,0)
Note: The ROUTING LOGIC does not send any HL7 messages.
"KRN",101,6206,99)
64897,38474
"KRN",101,6206,770)
^^^^^^^^^^ORU
"KRN",101,6206,774)
D PRF^VPREHL7
"KRN",101,6207,-1)
0^37
"KRN",101,6207,0)
VPR RMIM EVENTS^FIM Events for VPR^^S^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",101,6207,1,0)
^^7^7^3180906^
"KRN",101,6207,1,1,0)
This client protocol is used to process HL7 ORU/R01 messages published by 
"KRN",101,6207,1,2,0)
the RMIM DRIVER protocol.
"KRN",101,6207,1,3,0)
 
"KRN",101,6207,1,4,0)
The client causes a VPR 'freshness' event when functional independence 
"KRN",101,6207,1,5,0)
measurements are posted.
"KRN",101,6207,1,6,0)
 
"KRN",101,6207,1,7,0)
Note: The ROUTING LOGIC does not send any HL7 messages.
"KRN",101,6207,99)
64897,38568
"KRN",101,6207,770)
^^^^^^^^^^ORU
"KRN",101,6207,774)
D FIM^VPREHL7
"KRN",101,6208,-1)
0^33
"KRN",101,6208,0)
VPR IBCN EVENTS^Insurance events for VPR^^A^^^^^^^^VIRTUAL PATIENT RECORD
"KRN",101,6208,1,0)
^^1^1^3180913^
"KRN",101,6208,1,1,0)
This protocol will track changes to the patient's insurance for VPR.
"KRN",101,6208,20)
D IBCN^VPREVNT
"KRN",101,6208,99)
64904,32141
"KRN",101,6209,-1)
0^44
"KRN",101,6209,0)
VPR LRAP EVENTS^LRAP HL7 events for VPR^^A^^^^^^^^
"KRN",101,6209,1,0)
^^3^3^3190118^
"KRN",101,6209,1,1,0)
This protocol monitors order events for VPR.  It is placed on the
"KRN",101,6209,1,2,0)
LR7O AP EVSEND OR protocol to check for updates being sent from Lab
"KRN",101,6209,1,3,0)
Anatomic Pathology to Order Entry; it monitors when orders are completed.
"KRN",101,6209,20)
D LRAP^VPREVNT(.XQORMSG)
"KRN",101,6209,99)
65031,68357
"KRN",771,243,-1)
0^1
"KRN",771,243,0)
VPR HL7^a^^^^^USA
"MBREQ")
0
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",28,1.5)
1.5;28;;;ENT^XPDTA2;ENTF1^XPDIA0;ENTE1^XPDIA0;ENTF2^XPDIA0;;ENTDEL^XPDIA0(%)
"ORD",28,1.5,0)
ENTITY
"PKG",571,-1)
1^1
"PKG",571,0)
VIRTUAL PATIENT RECORD^VPR^Utilities to manage a virtual copy of the patient record
"PKG",571,22,0)
^9.49I^1^1
"PKG",571,22,1,0)
1.0^3110804^3110901^1
"PKG",571,22,1,"PAH",1,0)
8^3190201^10000000407
"PKG",571,22,1,"PAH",1,1,0)
^^42^42^3190201
"PKG",571,22,1,"PAH",1,1,1,0)
This patch extends the Virtual Patient Record (VPR) application, to 
"PKG",571,22,1,"PAH",1,1,2,0)
provide a new method of retrieving patient health data from a Veterans
"PKG",571,22,1,"PAH",1,1,3,0)
Health Information Systems (VistA) database.
"PKG",571,22,1,"PAH",1,1,4,0)
 
"PKG",571,22,1,"PAH",1,1,5,0)
Patch DI*22.2*9 released a new VA FileManager utility that provides the 
"PKG",571,22,1,"PAH",1,1,6,0)
ability to map VistA files and fields to other data models, and extract 
"PKG",571,22,1,"PAH",1,1,7,0)
that data as XML or JSON objects. This VPR patch will populate the new 
"PKG",571,22,1,"PAH",1,1,8,0)
Entity file (#1.5) to map VistA data elements to InterSystems' Summary 
"PKG",571,22,1,"PAH",1,1,9,0)
Data Architecture (SDA) model, and use the new supported calls to 
"PKG",571,22,1,"PAH",1,1,10,0)
retrieve the requested data.
"PKG",571,22,1,"PAH",1,1,11,0)
 
"PKG",571,22,1,"PAH",1,1,12,0)
This patch also installs a mechanism to monitor clinical data events in 
"PKG",571,22,1,"PAH",1,1,13,0)
VistA, to enable retrieval of updated information as a patient's data
"PKG",571,22,1,"PAH",1,1,14,0)
changes. New Protocol file (#101) entries will be added, and linked to
"PKG",571,22,1,"PAH",1,1,15,0)
appropriate clinical application events; the file and record numbers
"PKG",571,22,1,"PAH",1,1,16,0)
modified will be collected in the new VPR Subscription file (#560) until
"PKG",571,22,1,"PAH",1,1,17,0)
retrieved and updated.
"PKG",571,22,1,"PAH",1,1,18,0)
  
"PKG",571,22,1,"PAH",1,1,19,0)
  
"PKG",571,22,1,"PAH",1,1,20,0)
Patch Installation:
"PKG",571,22,1,"PAH",1,1,21,0)
-------------------
"PKG",571,22,1,"PAH",1,1,22,0)
Software is being released as a host file, DI_222_9_VPR_1_8.KID.  The host
"PKG",571,22,1,"PAH",1,1,23,0)
file contains two patches; DI*22.2*9 and VPR*1*8. Refer to Patch 
"PKG",571,22,1,"PAH",1,1,24,0)
DI*22.2*9 for installation instructions.
"PKG",571,22,1,"PAH",1,1,25,0)
 
"PKG",571,22,1,"PAH",1,1,26,0)
Patches DI*22.2*9 and VPR*1*8 are scheduled to be released nationally as a
"PKG",571,22,1,"PAH",1,1,27,0)
bundle.  Installation of these patches into Production within the first 5
"PKG",571,22,1,"PAH",1,1,28,0)
days from the National Release date is requested. The VA leadership has 
"PKG",571,22,1,"PAH",1,1,29,0)
asked for an expedited release to comply with the schedule for the high
"PKG",571,22,1,"PAH",1,1,30,0)
profile Mission Act.  Certain functionality has to be loaded into
"PKG",571,22,1,"PAH",1,1,31,0)
production in 130 VA Medical Centers within a short timeframe.  We
"PKG",571,22,1,"PAH",1,1,32,0)
appreciate your cooperation.
"PKG",571,22,1,"PAH",1,1,33,0)
  
"PKG",571,22,1,"PAH",1,1,34,0)
  
"PKG",571,22,1,"PAH",1,1,35,0)
Backout Procedures:
"PKG",571,22,1,"PAH",1,1,36,0)
-------------------
"PKG",571,22,1,"PAH",1,1,37,0)
Back-out will be done only with the concurrence and participation of the 
"PKG",571,22,1,"PAH",1,1,38,0)
development team, health product support, and appropriate VA site/region 
"PKG",571,22,1,"PAH",1,1,39,0)
personnel. All components exported by the patch (excluding linked 
"PKG",571,22,1,"PAH",1,1,40,0)
Protocol menus) are new and could be removed from the system if needed.
"PKG",571,22,1,"PAH",1,1,41,0)
Please call the national help desk or enter a help desk ticket for
"PKG",571,22,1,"PAH",1,1,42,0)
assistance.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","VPREHL7")
0^9^B7760700
"RTN","VPREHL7",1,0)
VPREHL7 ;ALB/MJK,MKB - VPR HL7 Message Processor ;10/25/18  15:29
"RTN","VPREHL7",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPREHL7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPREHL7",4,0)
 ;
"RTN","VPREHL7",5,0)
 ; External References          DBIA#
"RTN","VPREHL7",6,0)
 ; -------------------          -----
"RTN","VPREHL7",7,0)
 ; DGPF PRF ORU/R01 EVENT
"RTN","VPREHL7",8,0)
 ; RMIM DRIVER                   6990
"RTN","VPREHL7",9,0)
 ; VAFC ADT-A08 SERVER           4418
"RTN","VPREHL7",10,0)
 ; MPIF001                       2701
"RTN","VPREHL7",11,0)
 ;
"RTN","VPREHL7",12,0)
 ; Note: These variables are provided by the VistA HL7 system when a
"RTN","VPREHL7",13,0)
 ;       subscriber protocol's ROUTING LOGIC is called:
"RTN","VPREHL7",14,0)
 ;            - HLNEXT
"RTN","VPREHL7",15,0)
 ;            - HLQUIT
"RTN","VPREHL7",16,0)
 ;            - HLNODE
"RTN","VPREHL7",17,0)
 ;            - HL("FS")
"RTN","VPREHL7",18,0)
 ;            - HL("ECH")
"RTN","VPREHL7",19,0)
 ;
"RTN","VPREHL7",20,0)
ADT ; -- main entry point for these VPR ADT client/router protocols:
"RTN","VPREHL7",21,0)
 ;          - VPR ADT-A08 CLIENT protocol
"RTN","VPREHL7",22,0)
 ;             o  subscribes to VAFC ADT-A08 SERVER 
"RTN","VPREHL7",23,0)
 ;
"RTN","VPREHL7",24,0)
 ; -- Filters A08 events for patient security level changes
"RTN","VPREHL7",25,0)
 ;    Scans for PID segment and uses embedded DFN
"RTN","VPREHL7",26,0)
 ;    Sets ^VPR("AVPR"... freshness queue
"RTN","VPREHL7",27,0)
 ;
"RTN","VPREHL7",28,0)
 N DONE,VPRSEG,VPREVT,DFN
"RTN","VPREHL7",29,0)
 S DONE=0
"RTN","VPREHL7",30,0)
 F  X HLNEXT Q:HLQUIT'>0  D  Q:DONE
"RTN","VPREHL7",31,0)
 . S VPRSEG=$E(HLNODE,1,3)
"RTN","VPREHL7",32,0)
 . ;
"RTN","VPREHL7",33,0)
 . I VPRSEG="EVN" D  Q
"RTN","VPREHL7",34,0)
 . . S VPREVT=$P(HLNODE,HLFS,2)
"RTN","VPREHL7",35,0)
 . . ;I VPREVT="A04" Q
"RTN","VPREHL7",36,0)
 . . ; -- 97 reason = sensitive patient change occurred
"RTN","VPREHL7",37,0)
 . . I VPREVT="A08",$P(HLNODE,HLFS,5)=97 Q
"RTN","VPREHL7",38,0)
 . . ; -- not an event VPR is interested in so done with message
"RTN","VPREHL7",39,0)
 . . S DONE=1
"RTN","VPREHL7",40,0)
 . ; -- PID segment always comes after EVN segment
"RTN","VPREHL7",41,0)
 . I VPRSEG'="PID" Q
"RTN","VPREHL7",42,0)
 . S DONE=1
"RTN","VPREHL7",43,0)
 . ; -- VPREVT should always be defined at this point
"RTN","VPREHL7",44,0)
 . I $G(VPREVT)="" Q
"RTN","VPREHL7",45,0)
 . S DFN=+$P($P(HLNODE,HL("FS"),4),$E(HL("ECH")))
"RTN","VPREHL7",46,0)
 . I 'DFN Q
"RTN","VPREHL7",47,0)
 . D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPREHL7",48,0)
 Q
"RTN","VPREHL7",49,0)
 ;
"RTN","VPREHL7",50,0)
FIM ; -- main entry point for these VPR RMIM client/router protocols:
"RTN","VPREHL7",51,0)
 ;          - VPR RMIM EVENTS protocol
"RTN","VPREHL7",52,0)
 ;             o  subscribes to RMIM DRIVER
"RTN","VPREHL7",53,0)
 ;
"RTN","VPREHL7",54,0)
 N DONE,VPRSEG,DFN,CASE
"RTN","VPREHL7",55,0)
 S DONE=0
"RTN","VPREHL7",56,0)
 F  X HLNEXT Q:HLQUIT'>0  D  Q:DONE
"RTN","VPREHL7",57,0)
 . S VPRSEG=$E(HLNODE,1,3)
"RTN","VPREHL7",58,0)
 . ;
"RTN","VPREHL7",59,0)
 . I VPRSEG'="PID" Q
"RTN","VPREHL7",60,0)
 . S DONE=1
"RTN","VPREHL7",61,0)
 . S DFN=+$P(HLNODE,HL("FS"),4) Q:DFN<1
"RTN","VPREHL7",62,0)
 . S CASE=+$P($P(HLNODE,HL("FS"),5),$E(HL("ECH")),2)
"RTN","VPREHL7",63,0)
 . D POST^VPRHS(DFN,"Problem",CASE_";783")
"RTN","VPREHL7",64,0)
 Q
"RTN","VPREHL7",65,0)
 ;
"RTN","VPREHL7",66,0)
PRF ; -- main entry point for these VPR PRF client/router protocols:
"RTN","VPREHL7",67,0)
 ;          - VPR DGPF EVENTS protocol
"RTN","VPREHL7",68,0)
 ;             o  subscribes to DGPF PRF ORU/R01 EVENT
"RTN","VPREHL7",69,0)
 ;
"RTN","VPREHL7",70,0)
 N DONE,VPRSEG,ICN,DFN,ID,STS
"RTN","VPREHL7",71,0)
 S DONE=0
"RTN","VPREHL7",72,0)
 F  X HLNEXT Q:HLQUIT'>0  D  Q:DONE
"RTN","VPREHL7",73,0)
 . S VPRSEG=$E(HLNODE,1,3)
"RTN","VPREHL7",74,0)
 . ;
"RTN","VPREHL7",75,0)
 . I VPRSEG="PID" D  Q
"RTN","VPREHL7",76,0)
 . . S ICN=$P($P(HLNODE,HL("FS"),4),$E(HL("ECH")))
"RTN","VPREHL7",77,0)
 . . S DFN=$$GETDFN^MPIF001(ICN)
"RTN","VPREHL7",78,0)
 . . I DFN<1 S DONE=1
"RTN","VPREHL7",79,0)
 . ;
"RTN","VPREHL7",80,0)
 . I VPRSEG="OBR" D  Q
"RTN","VPREHL7",81,0)
 . . S ID=+$P($P(HLNODE,HL("FS"),5),$E(HL("ECH")))
"RTN","VPREHL7",82,0)
 . . I ID<1 S DONE=1
"RTN","VPREHL7",83,0)
 . ;
"RTN","VPREHL7",84,0)
 . I VPRSEG'="OBX" Q
"RTN","VPREHL7",85,0)
 . I $P(HLNODE,HL("FS"),3)'="ST" Q
"RTN","VPREHL7",86,0)
 . S DONE=1 Q:$G(DFN)<1  Q:$G(ID)<1
"RTN","VPREHL7",87,0)
 . S STS=$P(HLNODE,HL("FS"),6),STS=$S(STS["INACT":"@",STS["ERROR":"@",1:"")
"RTN","VPREHL7",88,0)
 . I STS="@" D POST^VPRHS(DFN,"Alert") Q  ;rebuild container
"RTN","VPREHL7",89,0)
 . D POST^VPRHS(DFN,"Alert",ID_"~"_DFN_";26.13")
"RTN","VPREHL7",90,0)
 Q
"RTN","VPREVNT")
0^5^B123701454
"RTN","VPREVNT",1,0)
VPREVNT ;SLC/MKB -- VistA event listeners ;10/25/18  15:29
"RTN","VPREVNT",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPREVNT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPREVNT",4,0)
 ;
"RTN","VPREVNT",5,0)
 ; External References          DBIA#
"RTN","VPREVNT",6,0)
 ; -------------------          -----
"RTN","VPREVNT",7,0)
 ; DG FIELD MONITOR              3344
"RTN","VPREVNT",8,0)
 ; DGPM MOVEMENT EVENTS          1181
"RTN","VPREVNT",9,0)
 ; FH EVSEND OR                  6097
"RTN","VPREVNT",10,0)
 ; GMPL EVENT                    6065
"RTN","VPREVNT",11,0)
 ; GMRA ENTERED IN ERROR         1467
"RTN","VPREVNT",12,0)
 ; GMRA SIGN-OFF ON DATA         1469
"RTN","VPREVNT",13,0)
 ; GMRC EVSEND OR                3140
"RTN","VPREVNT",14,0)
 ; LR70 CH EVSEND OR             6087
"RTN","VPREVNT",15,0)
 ; MDC OBSERVATION UPDATE        6084
"RTN","VPREVNT",16,0)
 ; OR EVSEND FH                  6090
"RTN","VPREVNT",17,0)
 ; OR EVSEND GMRC                3135
"RTN","VPREVNT",18,0)
 ; OR EVSEND LRCH                6091
"RTN","VPREVNT",19,0)
 ; OR EVSEND ORG                 6092
"RTN","VPREVNT",20,0)
 ; OR EVSEND PS                  6093
"RTN","VPREVNT",21,0)
 ; OR EVSEND RA                  6094
"RTN","VPREVNT",22,0)
 ; OR EVSEND VPR                 6095
"RTN","VPREVNT",23,0)
 ; PS EVSEND OR                  2415
"RTN","VPREVNT",24,0)
 ; PSB EVSEND VPR                6085
"RTN","VPREVNT",25,0)
 ; PXK VISIT DATA EVENT          1298
"RTN","VPREVNT",26,0)
 ; RA EVSEND OR                  6086
"RTN","VPREVNT",27,0)
 ; SDAM APPOINTMENT EVENTS       1320
"RTN","VPREVNT",28,0)
 ; ^AUPNPROB                     5703
"RTN","VPREVNT",29,0)
 ; ^AUPNVSIT                     2028
"RTN","VPREVNT",30,0)
 ; ^AUTTHF                       4295
"RTN","VPREVNT",31,0)
 ; ^DGPM                         1865
"RTN","VPREVNT",32,0)
 ; ^DPT                         10035
"RTN","VPREVNT",33,0)
 ; ^LR                            525
"RTN","VPREVNT",34,0)
 ; ^OR(100                       5771
"RTN","VPREVNT",35,0)
 ; ^PS(55
"RTN","VPREVNT",36,0)
 ; ^PSB(53.79                    5909
"RTN","VPREVNT",37,0)
 ; ^RADPT                        2480
"RTN","VPREVNT",38,0)
 ; ^TIU(8925.1                   5677
"RTN","VPREVNT",39,0)
 ; DIQ                           2056
"RTN","VPREVNT",40,0)
 ; TIULX                         3058
"RTN","VPREVNT",41,0)
 ; VADPT2                         325
"RTN","VPREVNT",42,0)
 ; VASITE                       10112
"RTN","VPREVNT",43,0)
 ;
"RTN","VPREVNT",44,0)
DG ; -- DG FIELD MONITOR protocol listener
"RTN","VPREVNT",45,0)
 N VPRFN S VPRFN=$G(DGFILE)
"RTN","VPREVNT",46,0)
 I "^2^2.01^2.02^2.06^"'[(U_VPRFN_U) Q
"RTN","VPREVNT",47,0)
 N DFN S DFN=+$G(DGDA)
"RTN","VPREVNT",48,0)
 I VPRFN=2,$$FLD(+$G(DGFIELD)) D QUE^VPRHS(DFN)
"RTN","VPREVNT",49,0)
 ;D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPREVNT",50,0)
 Q
"RTN","VPREVNT",51,0)
 ;
"RTN","VPREVNT",52,0)
FLD(X) ; -- Return 1 or 0, if X is a field tracked by VPR
"RTN","VPREVNT",53,0)
 ;    via DG FIELD MONITOR
"RTN","VPREVNT",54,0)
 S X=U_+$G(X)_U
"RTN","VPREVNT",55,0)
 I "^.01^.02^.03^.05^.07^.08^.09^.092^.093^.351^"[X Q 1     ;demographic
"RTN","VPREVNT",56,0)
 I "^.111^.1112^.112^.113^.114^.115^.131^.132^.134^"[X Q 1  ;addr/phone
"RTN","VPREVNT",57,0)
 I "^.211^.212^.213^.214^.216^.217^.218^.219^.21011^"[X Q 1 ;NOK
"RTN","VPREVNT",58,0)
 I "^.331^.332^.333^.334^.335^.336^.337^.338^.339^"[X Q 1   ;ECON
"RTN","VPREVNT",59,0)
 I "^.301^.302^.32102^.32103^.3215^.32201^.5295^"[X Q 1     ;serv conn
"RTN","VPREVNT",60,0)
 I "^.14^.323^.361^1901^"[X Q 1
"RTN","VPREVNT",61,0)
 Q 0
"RTN","VPREVNT",62,0)
 ;
"RTN","VPREVNT",63,0)
DGPM ; -- DGPM MOVEMENT EVENTS protocol listener
"RTN","VPREVNT",64,0)
 ;    [expects DFN,DGPM* variables]
"RTN","VPREVNT",65,0)
 I $$NEWINPT,$$ON^VPRHS,'$$SUBS^VPRHS(DFN) D NEW^VPRHS(DFN) Q
"RTN","VPREVNT",66,0)
 N ADM S ADM=DGPMDA
"RTN","VPREVNT",67,0)
 I DGPMT'=1 S ADM=$S(DGPMA:$P(DGPMA,U,14),1:$P(DGPMP,U,14)) Q:ADM<1
"RTN","VPREVNT",68,0)
 ; loop to find all Visits (have seen >1 per admission)
"RTN","VPREVNT",69,0)
 ; if no visit# yet, will be updated when assigned in PCE section
"RTN","VPREVNT",70,0)
 N VAINDT,X,I,PTF
"RTN","VPREVNT",71,0)
 S X=+$G(^DGPM(+$G(ADM),0)),VAINDT=(9999999-$P(X,"."))_"."_$P(X,".",2)
"RTN","VPREVNT",72,0)
 S I=0 F  S I=$O(^AUPNVSIT("AAH",DFN,VAINDT,I)) Q:I<1  D
"RTN","VPREVNT",73,0)
 . ; If Admission is deleted, update as Visit; else update as Admission
"RTN","VPREVNT",74,0)
 . I DGPMT=1,'DGPMA D POST^VPRHS(DFN,"Encounter",I_";9000010") Q
"RTN","VPREVNT",75,0)
 . D POST^VPRHS(DFN,"Encounter",ADM_"~"_I_";405")
"RTN","VPREVNT",76,0)
 . S PTF=$P(DGPMA,U,16) D:PTF POST^VPRHS(DFN,"Diagnosis",PTF_";45")
"RTN","VPREVNT",77,0)
 Q
"RTN","VPREVNT",78,0)
 ;
"RTN","VPREVNT",79,0)
NEWINPT() ; -- is DFN newly admitted?
"RTN","VPREVNT",80,0)
 N Y S Y=0
"RTN","VPREVNT",81,0)
 I DGPMT=1,DGPMA,'DGPMP,+$G(^DPT(DFN,.105))=DGPMDA S Y=1 ;new admission
"RTN","VPREVNT",82,0)
 Q Y
"RTN","VPREVNT",83,0)
 ;
"RTN","VPREVNT",84,0)
SDAM ; -- SDAM APPOINTMENT EVENTS protocol listener
"RTN","VPREVNT",85,0)
 I $G(SDATA) D  Q  ;appointments
"RTN","VPREVNT",86,0)
 . N DFN,DATE,HLOC,ACT
"RTN","VPREVNT",87,0)
 . S DFN=+$P(SDATA,U,2) Q:DFN<1
"RTN","VPREVNT",88,0)
 . Q:$G(SDAMEVT)>5  ;only track make, cancel, no show, check in/out
"RTN","VPREVNT",89,0)
 . S DATE=+$P(SDATA,U,3),HLOC=+$P(SDATA,U,4)
"RTN","VPREVNT",90,0)
 . S ACT=$S($G(SDATA("AFTER","STATUS"))["CANCEL":"@",1:"")
"RTN","VPREVNT",91,0)
 . ;Q:$P($G(^DPT(DFN,"S",DATE,0)),U)'=HLOC
"RTN","VPREVNT",92,0)
 . D POST^VPRHS(DFN,"Appointment",(DATE_","_DFN_";2.98"),ACT)
"RTN","VPREVNT",93,0)
 Q
"RTN","VPREVNT",94,0)
 ;
"RTN","VPREVNT",95,0)
PCE ; -- PXK VISIT DATA EVENT protocol listener
"RTN","VPREVNT",96,0)
 N IEN,PX0A,PX0B,DFN,DA,ACT,X
"RTN","VPREVNT",97,0)
 S IEN=+$O(^TMP("PXKCO",$J,0)) Q:IEN<1
"RTN","VPREVNT",98,0)
 S PX0A=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,0,"AFTER")),PX0B=$G(^("BEFORE"))
"RTN","VPREVNT",99,0)
 S DFN=$S($L(PX0A):+$P(PX0A,U,5),1:+$P(PX0B,U,5)) Q:DFN<1
"RTN","VPREVNT",100,0)
 ; Visit file
"RTN","VPREVNT",101,0)
 S ACT=$S(PX0A="":"@",1:"")
"RTN","VPREVNT",102,0)
 I $P(PX0A,U,7)'="H",PX0A'=PX0B,ACT="" D POST^VPRHS(DFN,"Encounter",IEN_";9000010")
"RTN","VPREVNT",103,0)
 I $P(PX0A,U,7)="H",PX0B="" D  ;assign visit# (other edits via DGPM)
"RTN","VPREVNT",104,0)
 . N VAINDT S VAINDT=+PX0A D ADM^VADPT2
"RTN","VPREVNT",105,0)
 . D:$G(VADMVT) POST^VPRHS(DFN,"Encounter",VADMVT_"~"_IEN_";405")
"RTN","VPREVNT",106,0)
 ; check V-files
"RTN","VPREVNT",107,0)
 F SUB="IMM","XAM","POV","HF" D  ;"PED","SK","CPT"
"RTN","VPREVNT",108,0)
 . S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,SUB,DA)) Q:DA<1  D
"RTN","VPREVNT",109,0)
 .. N SUB0A,SUB0B
"RTN","VPREVNT",110,0)
 .. S SUB0A=$G(^TMP("PXKCO",$J,IEN,SUB,DA,0,"AFTER")),SUB0B=$G(^("BEFORE"))
"RTN","VPREVNT",111,0)
 .. S ACT=$S(SUB0A="":"@",1:"")
"RTN","VPREVNT",112,0)
 .. S X=$$NAME(SUB) Q:X=""
"RTN","VPREVNT",113,0)
 .. D POST^VPRHS(DFN,$P(X,U),(DA_";"_$P(X,U,2)),ACT,IEN)
"RTN","VPREVNT",114,0)
 ; delete visit itself last
"RTN","VPREVNT",115,0)
 I PX0B,PX0A="" D POST^VPRHS(DFN,"Encounter",IEN_";9000010","@")
"RTN","VPREVNT",116,0)
 Q
"RTN","VPREVNT",117,0)
 ;
"RTN","VPREVNT",118,0)
NAME(X) ; -- return container name for V-files
"RTN","VPREVNT",119,0)
 I X="HF",$$FHX Q "FamilyHistory^9000010.23"
"RTN","VPREVNT",120,0)
 I X="HF",$$SHX Q "SocialHistory^9000010.23"
"RTN","VPREVNT",121,0)
 ; X="HF"  Q "HealthConcern^9000010.23"
"RTN","VPREVNT",122,0)
 I X="IMM" Q "Vaccination^9000010.11"
"RTN","VPREVNT",123,0)
 I X="XAM" Q "PhysicalExam^9000010.13"
"RTN","VPREVNT",124,0)
 I X="POV" Q "Diagnosis^9000010.07"
"RTN","VPREVNT",125,0)
 ; X="CPT" Q "Procedure^9000010.18"
"RTN","VPREVNT",126,0)
 ; X="PED" Q "education^9000010.16"
"RTN","VPREVNT",127,0)
 ; X="SK"  Q "Procedure^9000010.12"
"RTN","VPREVNT",128,0)
 Q ""
"RTN","VPREVNT",129,0)
 ;
"RTN","VPREVNT",130,0)
FHX() ; -- return 1 or 0, if HF name is for FamilyHistory
"RTN","VPREVNT",131,0)
 N X S X=$S($G(SUB0A):+SUB0A,1:+$G(SUB0B)),X=$P($G(^AUTTHF(X,0)),U)
"RTN","VPREVNT",132,0)
 I X["FAMILY HISTORY" Q 1
"RTN","VPREVNT",133,0)
 I X["FAMILY HX" Q 1
"RTN","VPREVNT",134,0)
 Q 0
"RTN","VPREVNT",135,0)
 ;
"RTN","VPREVNT",136,0)
SHX() ; -- return 1 or 0, if HF name is for SocialHistory
"RTN","VPREVNT",137,0)
 N X S X=$S($G(SUB0A):+SUB0A,1:+$G(SUB0B)),X=$P($G(^AUTTHF(X,0)),U)
"RTN","VPREVNT",138,0)
 I (X["TOBACCO")!(X["SMOK") Q 1
"RTN","VPREVNT",139,0)
 ; (X["LIVES")!(X["LIVING") Q 1
"RTN","VPREVNT",140,0)
 ; (X["RELIGIO")!(X["SPIRIT") Q 1
"RTN","VPREVNT",141,0)
 Q 0
"RTN","VPREVNT",142,0)
 ;
"RTN","VPREVNT",143,0)
XQOR(MSG,FD) ; -- CPRS protocol event listener
"RTN","VPREVNT",144,0)
 ; FD   = frontdoor msg from CPRS (get ORIFN for new backdoor orders)
"RTN","VPREVNT",145,0)
 ; else = backdoor msg/ack from Pharmacy, Lab, Radiology, etc.
"RTN","VPREVNT",146,0)
 N VPRMSG,MSH,VPRPKG,VPRSDA,DFN,ORC,ACT
"RTN","VPREVNT",147,0)
 S VPRMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@VPRMSG@(0))
"RTN","VPREVNT",148,0)
 S MSH=0 F  S MSH=$O(@VPRMSG@(MSH)) Q:MSH'>0  Q:$E(@VPRMSG@(MSH),1,3)="MSH"
"RTN","VPREVNT",149,0)
 Q:'MSH  Q:'$L($G(@VPRMSG@(MSH)))
"RTN","VPREVNT",150,0)
 S VPRPKG=$S($G(FD):$P(@VPRMSG@(MSH),"|",5),1:$P(@VPRMSG@(MSH),"|",3))
"RTN","VPREVNT",151,0)
 S VPRSDA=$$ORDCONT(VPRPKG),DFN=$$PID Q:DFN<1
"RTN","VPREVNT",152,0)
 S ORC=MSH F  S ORC=$O(@VPRMSG@(+ORC)) Q:ORC'>0  I $E($G(@VPRMSG@(ORC)),1,3)="ORC" D
"RTN","VPREVNT",153,0)
 . N ORDCNTRL,PKGIFN,ORIFN
"RTN","VPREVNT",154,0)
 . S ORC=ORC_U_@VPRMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","VPREVNT",155,0)
 . ; QUIT if action failed, conversion, purge, or backdoor verify/new
"RTN","VPREVNT",156,0)
 . I ORDCNTRL["U"!("DE^ZC^ZP^ZR^ZV^SN"[ORDCNTRL) Q
"RTN","VPREVNT",157,0)
 . I $G(FD),ORDCNTRL'="NA" Q  ;only want NA msg, from CPRS
"RTN","VPREVNT",158,0)
 . I ORDCNTRL="NA",VPRPKG="LABORATORY" Q:$$AP
"RTN","VPREVNT",159,0)
 . S ACT=$S(ORDCNTRL="OC":"@",1:"")
"RTN","VPREVNT",160,0)
 . ; Update *Order containers
"RTN","VPREVNT",161,0)
 . S ORIFN=+$P($P(ORC,"|",3),U),PKGIFN=$P($P(ORC,"|",4),U)
"RTN","VPREVNT",162,0)
 . Q:$O(^OR(100,ORIFN,2,0))  ;should not be getting parent orders
"RTN","VPREVNT",163,0)
 . D POST^VPRHS(DFN,VPRSDA,ORIFN_";100",ACT)
"RTN","VPREVNT",164,0)
 . I ORIFN D  ;update replaced order
"RTN","VPREVNT",165,0)
 .. N ORIG S ORIG=+$P($G(^OR(100,ORIFN,3)),U,5)
"RTN","VPREVNT",166,0)
 .. I ORIG D POST^VPRHS(DFN,VPRSDA,ORIG_";100")
"RTN","VPREVNT",167,0)
 . ; Update Referral or Document containers
"RTN","VPREVNT",168,0)
 . I VPRPKG="CONSULTS"!(VPRPKG="PROCEDURES") D GMRC
"RTN","VPREVNT",169,0)
 . I VPRPKG="RADIOLOGY"!(VPRPKG="IMAGING") D RAD
"RTN","VPREVNT",170,0)
 . I VPRPKG="LABORATORY" D LRD
"RTN","VPREVNT",171,0)
 Q
"RTN","VPREVNT",172,0)
 ;
"RTN","VPREVNT",173,0)
ORDCONT(NAME) ; -- Returns SDA Order container name
"RTN","VPREVNT",174,0)
 I NAME="LABORATORY"  Q "LabOrder"
"RTN","VPREVNT",175,0)
 I NAME="PHARMACY"    Q "Medication"
"RTN","VPREVNT",176,0)
 I NAME="RADIOLOGY"   Q "RadOrder"
"RTN","VPREVNT",177,0)
 I NAME="IMAGING"     Q "RadOrder"
"RTN","VPREVNT",178,0)
 Q "OtherOrder"
"RTN","VPREVNT",179,0)
 ;
"RTN","VPREVNT",180,0)
 I NAME="CONSULTS"    Q "Referral"
"RTN","VPREVNT",181,0)
 I NAME="PROCEDURES"  Q "Referral"
"RTN","VPREVNT",182,0)
 I NAME="ORDER ENTRY" Q "OtherOrder"
"RTN","VPREVNT",183,0)
 I NAME="DIETETICS"   Q "OtherOrder"
"RTN","VPREVNT",184,0)
 ;
"RTN","VPREVNT",185,0)
GMRC ; -- Referrals
"RTN","VPREVNT",186,0)
 N VST S VST=$$GET1^DIQ(123,+PKGIFN,"16:.03","I")
"RTN","VPREVNT",187,0)
 D POST^VPRHS(DFN,"Referral",+PKGIFN_";123",,VST)
"RTN","VPREVNT",188,0)
 Q
"RTN","VPREVNT",189,0)
 ;
"RTN","VPREVNT",190,0)
RAD ; -- Radiology documents
"RTN","VPREVNT",191,0)
 N IDT,RPT,I,X,VST,STS,ACT
"RTN","VPREVNT",192,0)
 S IDT=+$O(^RADPT("AO",PKGIFN,DFN,0)),I=0
"RTN","VPREVNT",193,0)
 ; find report(s) for order
"RTN","VPREVNT",194,0)
 F  S I=$O(^RADPT("AO",PKGIFN,DFN,IDT,I)) Q:I<1  D
"RTN","VPREVNT",195,0)
 . S X=+$P($G(^RADPT(DFN,"DT",IDT,"P",I,0)),U,17),VST=$P($G(^(0)),U,27)
"RTN","VPREVNT",196,0)
 . Q:'X  S STS=$$GET1^DIQ(74,X_",",5,"I"),ACT=""
"RTN","VPREVNT",197,0)
 . Q:STS'="V"&(STS'="EF")  I STS="X" S ACT="@"
"RTN","VPREVNT",198,0)
 . S:VST VST(X)=VST S:'$D(RPT(X)) RPT(X)=IDT_"-"_I
"RTN","VPREVNT",199,0)
 ; update Document container
"RTN","VPREVNT",200,0)
 S X=0 F  S X=$O(RPT(X)) Q:X<1  D POST^VPRHS(DFN,"Document",X_"~"_RPT(X)_";74",ACT,$G(VST(X)))
"RTN","VPREVNT",201,0)
 Q
"RTN","VPREVNT",202,0)
 ;
"RTN","VPREVNT",203,0)
LRAP(MSG) ; -- LR7O AP EVSEND OR protocol listener
"RTN","VPREVNT",204,0)
 N VPRMSG,MSH,DFN,ORC
"RTN","VPREVNT",205,0)
 S VPRMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@VPRMSG@(0))
"RTN","VPREVNT",206,0)
 S MSH=0 F  S MSH=$O(@VPRMSG@(MSH)) Q:MSH'>0  Q:$E(@VPRMSG@(MSH),1,3)="MSH"
"RTN","VPREVNT",207,0)
 Q:'MSH  Q:'$L($G(@VPRMSG@(MSH)))
"RTN","VPREVNT",208,0)
 S DFN=$$PID Q:DFN<1
"RTN","VPREVNT",209,0)
 S ORC=MSH F  S ORC=$O(@VPRMSG@(+ORC)) Q:ORC'>0  I $E($G(@VPRMSG@(ORC)),1,3)="ORC" D
"RTN","VPREVNT",210,0)
 . N ORDCNTRL,PKGIFN
"RTN","VPREVNT",211,0)
 . S ORC=ORC_U_@VPRMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","VPREVNT",212,0)
 . Q:ORDCNTRL'="RE"  S PKGIFN=$P($P(ORC,"|",4),U)
"RTN","VPREVNT",213,0)
 . D LRD
"RTN","VPREVNT",214,0)
 Q
"RTN","VPREVNT",215,0)
 ;
"RTN","VPREVNT",216,0)
LRD ; -- AP/MI documents [from XQOR, LRAP: expects PKGIFN]
"RTN","VPREVNT",217,0)
 N SUB,IDT,LRDFN,X
"RTN","VPREVNT",218,0)
 S SUB=$P($G(PKGIFN),";",4),IDT=$P($G(PKGIFN),";",5)
"RTN","VPREVNT",219,0)
 Q:'IDT  Q:SUB=""  Q:SUB="CH"
"RTN","VPREVNT",220,0)
 S LRDFN=+$G(^DPT(DFN,"LR"))
"RTN","VPREVNT",221,0)
 I SUB'="MI" Q:$O(^LR(LRDFN,SUB,IDT,.05,0))  ;report in TIU
"RTN","VPREVNT",222,0)
 Q:'$P($G(^LR(LRDFN,SUB,IDT,0)),U,3)         ;report not complete
"RTN","VPREVNT",223,0)
 S X=IDT_","_LRDFN_"~"_SUB_";"_$S(SUB="MI":63.05,1:63.08)
"RTN","VPREVNT",224,0)
 D POST^VPRHS(DFN,"Document",X)
"RTN","VPREVNT",225,0)
 Q
"RTN","VPREVNT",226,0)
 ;
"RTN","VPREVNT",227,0)
AP() ; -- return 1 or 0, if test in message is Anat Pathology
"RTN","VPREVNT",228,0)
 N I,OBR,LRT,SS,Y S (OBR,Y)=0
"RTN","VPREVNT",229,0)
 S I=+$G(ORC) F  S I=$O(@VPRMSG@(I)) Q:I'>0  I $E($G(@VPRMSG@(I)),1,3)="OBR" S OBR=I Q
"RTN","VPREVNT",230,0)
 Q:'OBR  S LRT=+$P($P(@VPRMSG@(OBR),"|",5),U,4)
"RTN","VPREVNT",231,0)
 S SS=$P($G(^LAB(60,LRT,0)),U,4) I $L(SS),"EM^SP^CY"[SS S Y=1
"RTN","VPREVNT",232,0)
 Q Y
"RTN","VPREVNT",233,0)
 ;
"RTN","VPREVNT",234,0)
PID() ; -- Returns patient from PID segment in current msg
"RTN","VPREVNT",235,0)
 N I,SEG,Y S I=MSH
"RTN","VPREVNT",236,0)
 F  S I=$O(@VPRMSG@(I)) Q:I'>0  S SEG=$E($G(@VPRMSG@(I)),1,3) Q:SEG="ORC"  I SEG="PID" D  Q
"RTN","VPREVNT",237,0)
 . S Y=+$P(@VPRMSG@(I),"|",4)
"RTN","VPREVNT",238,0)
 .;I '$D(^DPT(Y,0)) S:$L($P(@VPRMSG@(I),"|",5)) Y=+$P(@VPRMSG@(I),"|",5) ;alt ID for Lab
"RTN","VPREVNT",239,0)
 Q Y
"RTN","VPREVNT",240,0)
 ;
"RTN","VPREVNT",241,0)
PSB ; -- VPR PSB EVENTS protocol listener (BCMA)
"RTN","VPREVNT",242,0)
 N IEN,DFN,ORPK,TYPE,ORIFN
"RTN","VPREVNT",243,0)
 S IEN=$S($P($G(PSBIEN),",",2)'="":+$P(PSBIEN,",",2),$G(PSBIEN)="+1":+$G(PSBIEN(1)),1:+$G(PSBIEN))
"RTN","VPREVNT",244,0)
 S DFN=+$G(^PSB(53.79,IEN,0)),ORPK=$P($G(^(.1)),U)
"RTN","VPREVNT",245,0)
 Q:DFN<1  Q:ORPK<1  S TYPE=$S(ORPK["V":"IV",ORPK["U":5,1:"") Q:TYPE=""
"RTN","VPREVNT",246,0)
 S ORIFN=+$P($G(^PS(55,DFN,TYPE,+ORPK,0)),U,21)
"RTN","VPREVNT",247,0)
 D:ORIFN POST^VPRHS(DFN,"Medication",ORIFN_";100")
"RTN","VPREVNT",248,0)
 Q
"RTN","VPREVNT",249,0)
 ;
"RTN","VPREVNT",250,0)
GMRA(ACT) ; -- GMRA SIGN-OFF ON DATA protocol listener
"RTN","VPREVNT",251,0)
 ;   also GMRA ENTERED IN ERROR [ACT=@]
"RTN","VPREVNT",252,0)
 N DFN,IEN
"RTN","VPREVNT",253,0)
 S DFN=+$G(GMRAPA(0)),IEN=+$G(GMRAPA)
"RTN","VPREVNT",254,0)
 D POST^VPRHS(DFN,"Allergy",IEN_";120.8") ;,$G(ACT))
"RTN","VPREVNT",255,0)
 Q
"RTN","VPREVNT",256,0)
 ;
"RTN","VPREVNT",257,0)
GMRASMT(DFN) ; -- GMRAHDR Allergy Assessment listener
"RTN","VPREVNT",258,0)
 D POST^VPRHS(DFN,"Allergy")
"RTN","VPREVNT",259,0)
 Q
"RTN","VPREVNT",260,0)
 ;
"RTN","VPREVNT",261,0)
GMPL(DFN,IEN) ; -- GMPL EVENT protocol listener
"RTN","VPREVNT",262,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","VPREVNT",263,0)
 N ACT S ACT=$S($P($G(^AUPNPROB(IEN,1)),U,2)="H":"@",1:"")
"RTN","VPREVNT",264,0)
 D POST^VPRHS(DFN,"Problem",IEN_";9000011",ACT)
"RTN","VPREVNT",265,0)
 Q
"RTN","VPREVNT",266,0)
 ;
"RTN","VPREVNT",267,0)
GMRV(DFN,IEN,ERR) ; -- Vital Measurement file #120.5 AVPR index
"RTN","VPREVNT",268,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","VPREVNT",269,0)
 N ACT S ACT=$S($G(ERR):"@",1:"")
"RTN","VPREVNT",270,0)
 D POST^VPRHS(DFN,"Observation",IEN_";120.5",ACT)
"RTN","VPREVNT",271,0)
 Q
"RTN","VPREVNT",272,0)
 ;
"RTN","VPREVNT",273,0)
MDC(OBS) ; -- MDC OBSERVATION UPDATE protocol listener
"RTN","VPREVNT",274,0)
 N DFN,ID,ACT
"RTN","VPREVNT",275,0)
 S DFN=+$G(OBS("PATIENT_ID","I")) Q:DFN<1
"RTN","VPREVNT",276,0)
 S ID=$G(OBS("OBS_ID","I")) Q:'$L(ID)
"RTN","VPREVNT",277,0)
 S ACT=$S('$G(OBS("STATUS","I")):"@",1:"")
"RTN","VPREVNT",278,0)
 D POST^VPRHS(DFN,"Observation",ID_";704.117",ACT)
"RTN","VPREVNT",279,0)
 ;I $G(OBS("DOMAIN","VITALS")) D POST^VPRHS(DFN,"Observation",ID,ACT)
"RTN","VPREVNT",280,0)
 Q
"RTN","VPREVNT",281,0)
 ;
"RTN","VPREVNT",282,0)
CP(DFN,ID,ACT) ; -- CP Transaction file #702 AVPR index (via VPRPROC)
"RTN","VPREVNT",283,0)
 S DFN=+$G(DFN),ID=+$G(ID)
"RTN","VPREVNT",284,0)
 N VST S VST=$$GET1^DIQ(702,ID,".06:.03","I")
"RTN","VPREVNT",285,0)
 D POST^VPRHS(DFN,"Procedure",ID_";702",$G(ACT),VST)
"RTN","VPREVNT",286,0)
 Q
"RTN","VPREVNT",287,0)
 ;
"RTN","VPREVNT",288,0)
SR(DFN,IEN,ACT) ; -- Surgery [SROERR] update (via VPRSR)
"RTN","VPREVNT",289,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","VPREVNT",290,0)
 N VST S VST=$$GET1^DIQ(130,IEN,.015,"I")
"RTN","VPREVNT",291,0)
 D POST^VPRHS(DFN,"Procedure",IEN_";130",$G(ACT),VST)
"RTN","VPREVNT",292,0)
 Q
"RTN","VPREVNT",293,0)
 ;
"RTN","VPREVNT",294,0)
TIU(DFN,IEN) ; -- TIU Document file #8925 AVPR index
"RTN","VPREVNT",295,0)
 N ACT,STS,DAD,VST,VPRTIU,PROC
"RTN","VPREVNT",296,0)
 S DFN=+$G(DFN),IEN=+$G(IEN),ACT=""
"RTN","VPREVNT",297,0)
 ; $$ISA^TIULX(IEN,$$LR) Q   ;update from order?
"RTN","VPREVNT",298,0)
 S STS=$G(X(2)),DAD=$G(X(3)) ;X = FM data array for index
"RTN","VPREVNT",299,0)
 I STS=9 Q                   ;archived, leave in cache
"RTN","VPREVNT",300,0)
 S:DAD IEN=DAD I 'DAD D      ;if addendum, repull entire note
"RTN","VPREVNT",301,0)
 . I STS>13 S ACT="@"        ;deleted or retracted
"RTN","VPREVNT",302,0)
 . I $G(X2(1))="" S ACT="@"  ;deleted (new title = null)
"RTN","VPREVNT",303,0)
 D EXTRACT^TIULQ(IEN,"VPRTIU",,".03;1405",,1,"I")
"RTN","VPREVNT",304,0)
 S VST=$G(VPRTIU(IEN,.03,"I"))
"RTN","VPREVNT",305,0)
 D POST^VPRHS(DFN,"Document",IEN_";8925",ACT,VST)
"RTN","VPREVNT",306,0)
 ; Update Procedure (CP, SR)?
"RTN","VPREVNT",307,0)
 S PROC=$G(VPRTIU(IEN,1405,"I")) I PROC D
"RTN","VPREVNT",308,0)
 . I PROC["SRF" D POST^VPRHS(DFN,"Procedure",+PROC_";130")
"RTN","VPREVNT",309,0)
 . I PROC["GMR" D POST^VPRHS(DFN,"Referral",+PROC_";123")
"RTN","VPREVNT",310,0)
 ; Also update alert containers if CWD
"RTN","VPREVNT",311,0)
 I $$ISA^TIULX(IEN,27) D POST^VPRHS(DFN,"AdvanceDirective") Q  ;rebuild
"RTN","VPREVNT",312,0)
 I $$ISA^TIULX(IEN,30) D POST^VPRHS(DFN,"Alert",IEN_";8925",ACT) Q
"RTN","VPREVNT",313,0)
 I $$ISA^TIULX(IEN,31) D POST^VPRHS(DFN,"Alert",IEN_";8925",ACT) Q
"RTN","VPREVNT",314,0)
 Q
"RTN","VPREVNT",315,0)
 ;
"RTN","VPREVNT",316,0)
LR() ; -- Return ien of Lab class
"RTN","VPREVNT",317,0)
 N Y S Y=+$O(^TIU(8925.1,"B","LR LABORATORY REPORTS",0))
"RTN","VPREVNT",318,0)
 I Y>0,$S($P($G(^TIU(8925.1,Y,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S Y=0
"RTN","VPREVNT",319,0)
 Q Y
"RTN","VPREVNT",320,0)
 ;
"RTN","VPREVNT",321,0)
IBCN ; -- IBCN NEW INSURANCE EVENTS listener
"RTN","VPREVNT",322,0)
 I $G(DFN) D POST^VPRHS(DFN,"MemberEnrollment") ;rebuild container
"RTN","VPREVNT",323,0)
 Q
"RTN","VPREVNT",324,0)
 ;
"RTN","VPREVNT",325,0)
PCMMT ; -- SCMC PATIENT TEAM CHANGES protocol listener
"RTN","VPREVNT",326,0)
 I '$G(SCPCTM) Q  ;not pc change
"RTN","VPREVNT",327,0)
 N DFN S DFN=$S($G(SCPTTMAF):+SCPTTMAF,1:+$G(SCPTTMB4)) Q:'DFN
"RTN","VPREVNT",328,0)
 D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPREVNT",329,0)
 Q
"RTN","VPREVNT",330,0)
 ;
"RTN","VPREVNT",331,0)
PCMMTP ; -- SCMC PATIENT TEAM POSITION CHANGES protocol listener
"RTN","VPREVNT",332,0)
 I '$G(SCPCTP) Q  ;not pc change
"RTN","VPREVNT",333,0)
 N TM,DFN
"RTN","VPREVNT",334,0)
 S TM=$S($G(SCPTTPAF):+SCPTTPAF,1:+$G(SCPTTPB4)) Q:'TM
"RTN","VPREVNT",335,0)
 S DFN=+$G(^SCPT(404.42,+TM,0)) ;$$GET1^DIQ(404.42,TM_",",.01,"I")
"RTN","VPREVNT",336,0)
 D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPREVNT",337,0)
 Q
"RTN","VPREVNT",338,0)
 ;
"RTN","VPREVNT",339,0)
 ; Deprecated calls:
"RTN","VPREVNT",340,0)
 ;
"RTN","VPREVNT",341,0)
DOCDEF(IEN) ; -- TIU Document Definition file #8925.1 AVPR index
"RTN","VPREVNT",342,0)
 Q
"RTN","VPREVNT",343,0)
 ;
"RTN","VPREVNT",344,0)
DOCITM(DAD) ; -- TIU Document Def'n Items subfile #8925.14 AVPR1 index
"RTN","VPREVNT",345,0)
 Q
"RTN","VPREVNT",346,0)
 ;
"RTN","VPREVNT",347,0)
USR(IEN) ; -- USR Authorization/Subscription file #8930.1 AVPR index
"RTN","VPREVNT",348,0)
 Q
"RTN","VPREVNT",349,0)
 ;
"RTN","VPREVNT",350,0)
XU(IEN,ACT) ; -- XU USER ADD/CHANGE/TERMINATE option listener
"RTN","VPREVNT",351,0)
 Q
"RTN","VPRHS")
0^3^B23926181
"RTN","VPRHS",1,0)
VPRHS ;SLC/MKB -- HealthShare utilities ;10/25/18  15:29
"RTN","VPRHS",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRHS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRHS",4,0)
 ;
"RTN","VPRHS",5,0)
 ; External References          DBIA#
"RTN","VPRHS",6,0)
 ; -------------------          -----
"RTN","VPRHS",7,0)
 ; DDE
"RTN","VPRHS",8,0)
 ; DICN                         10009
"RTN","VPRHS",9,0)
 ; DIK                          10013
"RTN","VPRHS",10,0)
 ; MPIF001                       2701
"RTN","VPRHS",11,0)
 ; SDAMA301                      4433
"RTN","VPRHS",12,0)
 ; XLFDT                        10103
"RTN","VPRHS",13,0)
 ;
"RTN","VPRHS",14,0)
 Q
"RTN","VPRHS",15,0)
 ;
"RTN","VPRHS",16,0)
ON() ; -- return 1 or 0, if monitoring is on
"RTN","VPRHS",17,0)
 Q $P($G(^VPR(1,0)),U,2)
"RTN","VPRHS",18,0)
 ;
"RTN","VPRHS",19,0)
EN(DFN) ; -- subscribe a patient for data event monitoring
"RTN","VPRHS",20,0)
 Q:'$G(DFN)  Q:$D(^VPR(1,2,+DFN,0))
"RTN","VPRHS",21,0)
 N X,Y,DA,DIC,DINUM
"RTN","VPRHS",22,0)
 S DIC="^VPR(1,2,",DIC(0)="UL",DA(1)=1,(DINUM,X)=+DFN
"RTN","VPRHS",23,0)
 D FILE^DICN
"RTN","VPRHS",24,0)
 Q
"RTN","VPRHS",25,0)
 ;
"RTN","VPRHS",26,0)
UN(DFN) ; -- unsubscribe
"RTN","VPRHS",27,0)
 Q:'$G(DFN)  Q:'$D(^VPR(1,2,+DFN,0))
"RTN","VPRHS",28,0)
 N DA,DIK
"RTN","VPRHS",29,0)
 S DA(1)=1,DA=+DFN,DIK="^VPR(1,2,"
"RTN","VPRHS",30,0)
 D ^DIK
"RTN","VPRHS",31,0)
 Q
"RTN","VPRHS",32,0)
 ;
"RTN","VPRHS",33,0)
SUBS(DFN) ; -- return 1 or 0, if patient is subscribed or not
"RTN","VPRHS",34,0)
 Q $D(^VPR(1,2,+$G(DFN),0))
"RTN","VPRHS",35,0)
 ;
"RTN","VPRHS",36,0)
QUE(DFN) ; -- create task to POST a Patient update
"RTN","VPRHS",37,0)
 Q:'$P($G(^VPR(1,0)),U,2)       ;monitoring disabled
"RTN","VPRHS",38,0)
 Q:DFN<1  Q:'$$SUBS(DFN)        ;not subscribed
"RTN","VPRHS",39,0)
 Q:$P($G(^VPR(1,2,DFN,0)),U,2)  ;task exists
"RTN","VPRHS",40,0)
 ; create task
"RTN","VPRHS",41,0)
 N ZTRTN,ZTDTH,ZTDESC,ZTIO,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC,ZTSK
"RTN","VPRHS",42,0)
 S ZTRTN="PAT^VPRHS",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,,,10)
"RTN","VPRHS",43,0)
 S ZTDESC="Task single VPR SDA Patient Container update"
"RTN","VPRHS",44,0)
 S ZTIO="",ZTSAVE("DFN")="" D ^%ZTLOAD
"RTN","VPRHS",45,0)
 S:$G(ZTSK)>0 $P(^VPR(1,2,DFN,0),U,2)=ZTSK
"RTN","VPRHS",46,0)
 Q
"RTN","VPRHS",47,0)
 ;
"RTN","VPRHS",48,0)
PAT ; -- post Patient update
"RTN","VPRHS",49,0)
 D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPRHS",50,0)
 S $P(^VPR(1,2,DFN,0),U,2)="",ZTREQ="@"
"RTN","VPRHS",51,0)
 Q
"RTN","VPRHS",52,0)
 ;
"RTN","VPRHS",53,0)
POST(DFN,TYPE,ID,ACT,VST) ; -- post an update to
"RTN","VPRHS",54,0)
 ;  ^VPR("AVPR",seq#,DFN) = ICN ^ TYPE ^ ID ^ U/D ^ VISIT#
"RTN","VPRHS",55,0)
 ;
"RTN","VPRHS",56,0)
 Q:'$P($G(^VPR(1,0)),U,2)                   ;monitoring disabled
"RTN","VPRHS",57,0)
 S DFN=+$G(DFN),TYPE=$G(TYPE),ID=$G(ID)
"RTN","VPRHS",58,0)
 Q:DFN<1  Q:TYPE=""                         ;incomplete request
"RTN","VPRHS",59,0)
 N ICN S ICN=$$GETICN^MPIF001(DFN) Q:ICN<0  ;ICN required
"RTN","VPRHS",60,0)
 ; add to ^VPR if not subscribed, not dead
"RTN","VPRHS",61,0)
 I '$$SUBS(DFN),'$G(^DPT(DFN,.35)) D NEW(DFN,ICN) Q
"RTN","VPRHS",62,0)
 S ACT=$S($G(ACT)="@":"D",1:"U")
"RTN","VPRHS",63,0)
P1 ;may enter here from VPRHSX manual update option
"RTN","VPRHS",64,0)
 N SEQ S SEQ=$I(^VPR(1,1))
"RTN","VPRHS",65,0)
 S ^VPR("AVPR",SEQ,DFN)=ICN_U_$G(TYPE)_U_$G(ID)_U_$G(ACT)_U_$G(VST)
"RTN","VPRHS",66,0)
 Q
"RTN","VPRHS",67,0)
 ;
"RTN","VPRHS",68,0)
NEW(DFN,ICN) ; -- post a new patient to ^VPR("ANEW",seq#,DFN) = ICN
"RTN","VPRHS",69,0)
 Q:$G(DFN)<1  I $G(ICN)<1 S ICN=$$GETICN^MPIF001(DFN) Q:ICN<0
"RTN","VPRHS",70,0)
 N SEQ S SEQ=$I(^VPR(1,1))
"RTN","VPRHS",71,0)
 S ^VPR("ANEW",SEQ,DFN)=ICN
"RTN","VPRHS",72,0)
 Q
"RTN","VPRHS",73,0)
 ;
"RTN","VPRHS",74,0)
GET(DFN,NAME,ID,VPRQ,MTYPE,VPRY,VPRR) ; -- return VistA data in @VPRY@(#)
"RTN","VPRHS",75,0)
 N ICN,VPRNM,VPRFN,VPRE,VPRI,VPRN,VPRX,VPRMAX
"RTN","VPRHS",76,0)
 S DFN=$G(DFN),ICN=$P(DFN,";",2),DFN=+DFN
"RTN","VPRHS",77,0)
 Q:DFN<1  Q:'$D(^DPT(DFN))  S VPRQ("patient")=DFN
"RTN","VPRHS",78,0)
 ;
"RTN","VPRHS",79,0)
 S VPRNM=$G(NAME)  Q:VPRNM=""
"RTN","VPRHS",80,0)
 S ID=$G(ID),MTYPE=$G(MTYPE,1) ;XML
"RTN","VPRHS",81,0)
 I $G(VPRQ("max")) S VPRMAX=VPRQ("max")
"RTN","VPRHS",82,0)
 ;
"RTN","VPRHS",83,0)
 S VPRY=$G(VPRY,$NA(^TMP("VPR GET",$J))),VPRI=0 K @VPRY
"RTN","VPRHS",84,0)
 S VPRR=$G(VPRR,$NA(^TMP("VPR ERR",$J))) K @VPRR
"RTN","VPRHS",85,0)
 I VPRNM="Patient",'ID&DFN S ID=DFN_";2"
"RTN","VPRHS",86,0)
 ;
"RTN","VPRHS",87,0)
 ; update one record for ECR
"RTN","VPRHS",88,0)
 I ID'="" D  Q
"RTN","VPRHS",89,0)
 . S VPRFN=$P(ID,";",2),ID=$P(ID,";")
"RTN","VPRHS",90,0)
 . S VPRE=$O(^DDE("SDA",VPRNM,VPRFN,0)) Q:'VPRE  ;ERROR?
"RTN","VPRHS",91,0)
 . S VPRI=VPRI+1,@VPRY@(VPRI)=$$GET1^DDE(VPRE,ID,.VPRQ,MTYPE,.VPRR)
"RTN","VPRHS",92,0)
 ;
"RTN","VPRHS",93,0)
 ; pre-load of whole container for patient
"RTN","VPRHS",94,0)
 S VPRX=$NA(^TMP("VPRHS",$J))
"RTN","VPRHS",95,0)
 S VPRFN=0 F  S VPRFN=$O(^DDE("SDA",VPRNM,VPRFN)) Q:VPRFN<1  D
"RTN","VPRHS",96,0)
 . S VPRE=$O(^DDE("SDA",VPRNM,VPRFN,0)) K @VPRX
"RTN","VPRHS",97,0)
 . D:VPRE GET^DDE(VPRE,,.VPRQ,MTYPE,.VPRMAX,.VPRX,.VPRR)
"RTN","VPRHS",98,0)
 . Q:'$D(VPRX)  Q:@VPRX@(0)'>0
"RTN","VPRHS",99,0)
 . S VPRN=0 F  S VPRN=$O(@VPRX@(VPRN)) Q:VPRN<1  S VPRI=VPRI+1,@VPRY@(VPRI)=@VPRX@(VPRN)
"RTN","VPRHS",100,0)
 K @VPRX
"RTN","VPRHS",101,0)
 Q
"RTN","VPRHS",102,0)
 ;
"RTN","VPRHS",103,0)
ACTIVE ; -- find currently non-deceased, active patients
"RTN","VPRHS",104,0)
 N DFN S DFN=0
"RTN","VPRHS",105,0)
 F  S DFN=$O(^DPT(DFN)) Q:DFN<1  I '$G(^DPT(DFN,.35)) D
"RTN","VPRHS",106,0)
 . I $G(^DPT(DFN,.105)) D POST(DFN,"*") Q
"RTN","VPRHS",107,0)
 . I $O(^DPT(DFN,"S",DT)) D POST(DFN,"*")
"RTN","VPRHS",108,0)
 Q
"RTN","VPRHS",109,0)
 ;
"RTN","VPRHS",110,0)
APPTS(BEG,END,VPRY) ; -- return patients w/appointments
"RTN","VPRHS",111,0)
 N VPRX,VPRN,DFN,VPRDT,VPRI,VPRA
"RTN","VPRHS",112,0)
 S VPRY=$G(VPRY,$NA(^TMP("VPR PATS",$J))) K @VPRY
"RTN","VPRHS",113,0)
 I '$G(BEG) D   ;default = tomorrow, if not passed in
"RTN","VPRHS",114,0)
 . S BEG=$$FMADD^XLFDT(DT,1),END=BEG
"RTN","VPRHS",115,0)
 ; find patients with appointments
"RTN","VPRHS",116,0)
 S END=$G(END,BEG),VPRX(1)=BEG_";"_END
"RTN","VPRHS",117,0)
 S VPRX("SORT")="P",VPRX("FLDS")=1,VPRX(3)="R;I;NT"
"RTN","VPRHS",118,0)
 S VPRI=$$SDAPI^SDAMA301(.VPRX),VPRN=0 K VPRX
"RTN","VPRHS",119,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN<1  S VPRX(DFN)=""
"RTN","VPRHS",120,0)
 ; find patients scheduled for admission
"RTN","VPRHS",121,0)
 S VPRDT=0 F  S VPRDT=$O(^DGS(41.1,"C",VPRDT)) Q:VPRDT<1!(VPRDT>END)  D
"RTN","VPRHS",122,0)
 . S VPRI=0 F  S VPRI=$O(^DGS(41.1,"C",VPRDT,VPRI)) Q:VPRI<1  D
"RTN","VPRHS",123,0)
 .. S VPRA=$G(^DGS(41.1,VPRI))
"RTN","VPRHS",124,0)
 .. Q:$P(VPRA,U,13)  Q:$P(VPRA,U,17)  ;cancelled or admitted
"RTN","VPRHS",125,0)
 .. S DFN=+VPRA S:DFN VPRX(DFN)=""
"RTN","VPRHS",126,0)
 ; build return array
"RTN","VPRHS",127,0)
 S (DFN,VPRN)=0
"RTN","VPRHS",128,0)
 F  S DFN=$O(VPRX(DFN)) Q:DFN<1  S VPRN=VPRN+1,@VPRY@(VPRN)=DFN
"RTN","VPRHS",129,0)
 S @VPRY@(0)=VPRN
"RTN","VPRHS",130,0)
 K ^TMP($J,"SDAMA301")
"RTN","VPRHS",131,0)
 Q
"RTN","VPRHS",132,0)
 ;
"RTN","VPRHS",133,0)
INPTS(VPRY) ; -- return current inpatients
"RTN","VPRHS",134,0)
 N DGPM,DFN,VPRN
"RTN","VPRHS",135,0)
 S VPRY=$G(VPRY,$NA(^TMP("VPR PATS",$J))),VPRN=0 K @VPRY
"RTN","VPRHS",136,0)
 S DGPM=0 F  S DGPM=$O(^DPT("ACA",DGPM)) Q:DGPM<1  D
"RTN","VPRHS",137,0)
 . S DFN=0 F  S DFN=$O(^DPT("ACA",DGPM,DFN)) Q:DFN<1  S VPRN=VPRN+1,@VPRY@(VPRN)=DFN
"RTN","VPRHS",138,0)
 S @VPRY@(0)=VPRN
"RTN","VPRHS",139,0)
 Q
"RTN","VPRHST")
0^12^B15285575
"RTN","VPRHST",1,0)
VPRHST ;SLC/MKB -- Test HS utilities ;09/18/18 4:36pm
"RTN","VPRHST",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRHST",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRHST",4,0)
 ;
"RTN","VPRHST",5,0)
 ; External References          DBIA#
"RTN","VPRHST",6,0)
 ; -------------------          -----
"RTN","VPRHST",7,0)
 ; DIC                           2051
"RTN","VPRHST",8,0)
 ; DIR                          10026
"RTN","VPRHST",9,0)
 ;
"RTN","VPRHST",10,0)
EN ; -- test VPRHS, write results to screen
"RTN","VPRHST",11,0)
 N DFN,TYPE,VPRZTEST S VPRZTEST=1
"RTN","VPRHST",12,0)
 F  S DFN=$$PATIENT Q:DFN<1  D 
"RTN","VPRHST",13,0)
 . F  S TYPE=$$CONTNR Q:"^"[TYPE  D RUN W !!
"RTN","VPRHST",14,0)
 Q
"RTN","VPRHST",15,0)
 ;
"RTN","VPRHST",16,0)
RUN ; -- get search parameters, run and display
"RTN","VPRHST",17,0)
 N START,STOP,MAX,ID,FMT,IN,OUT,TOTAL,I,X,RTN,DONE
"RTN","VPRHST",18,0)
 S START=$$START Q:START="^"
"RTN","VPRHST",19,0)
 I START S STOP=$$STOP(START) Q:STOP="^"
"RTN","VPRHST",20,0)
 S MAX=$$TOTAL Q:MAX="^"
"RTN","VPRHST",21,0)
 ; ID=$$ITEM Q:ID="^"
"RTN","VPRHST",22,0)
 S FMT=$$FORMAT Q:FMT="^"
"RTN","VPRHST",23,0)
 ;
"RTN","VPRHST",24,0)
 S:$G(START) IN("start")=START
"RTN","VPRHST",25,0)
 S:$G(STOP) IN("stop")=STOP
"RTN","VPRHST",26,0)
 S:$G(MAX) IN("max")=MAX
"RTN","VPRHST",27,0)
 S:$D(ID) IN("id")=ID
"RTN","VPRHST",28,0)
 D GET^VPRHS(DFN,TYPE,,.IN,FMT,.OUT)
"RTN","VPRHST",29,0)
 ;
"RTN","VPRHST",30,0)
 S TOTAL=$O(@OUT@("A"),-1),RTN=$S(FMT:"XML",1:"JSON")_"^VPRHST1(X)"
"RTN","VPRHST",31,0)
 W !!,"#Results: "_TOTAL Q:TOTAL<1
"RTN","VPRHST",32,0)
 S I=0 F  S I=$O(@OUT@(I)) Q:I<1  D READ Q:$G(DONE)  W !,"Result #"_I,! S X=@OUT@(I) D @RTN Q:$G(DONE)
"RTN","VPRHST",33,0)
 K @OUT
"RTN","VPRHST",34,0)
 Q
"RTN","VPRHST",35,0)
 ;
"RTN","VPRHST",36,0)
READ ; -- continue?
"RTN","VPRHST",37,0)
 N X
"RTN","VPRHST",38,0)
 W !!,"Press <return> to continue ..." R X:DTIME
"RTN","VPRHST",39,0)
 S:X["^" DONE=1
"RTN","VPRHST",40,0)
 Q
"RTN","VPRHST",41,0)
 ;
"RTN","VPRHST",42,0)
PATIENT() ; -- select patient
"RTN","VPRHST",43,0)
 N X,Y,DIC
"RTN","VPRHST",44,0)
 S DIC=2,DIC(0)="AEQM" D ^DIC
"RTN","VPRHST",45,0)
 Q Y
"RTN","VPRHST",46,0)
 ;
"RTN","VPRHST",47,0)
CONTNR() ; -- select SDA container
"RTN","VPRHST",48,0)
 N X,Y,I,DIR,VPR
"RTN","VPRHST",49,0)
 S DIR(0)="SAO^",DIR("A")="Select CONTAINER: "
"RTN","VPRHST",50,0)
 F I=1:1 S X=$P($T(TYPE+I),";",3) Q:X=99  S DIR(0)=DIR(0)_X_";",VPR(+X)=$P(X,":",2)
"RTN","VPRHST",51,0)
 D ^DIR S:Y Y=VPR(Y)
"RTN","VPRHST",52,0)
 Q Y
"RTN","VPRHST",53,0)
 ;
"RTN","VPRHST",54,0)
TYPE ;;CODE:NAME
"RTN","VPRHST",55,0)
 ;;1:Patient
"RTN","VPRHST",56,0)
 ;;2:Encounter
"RTN","VPRHST",57,0)
 ;;3:AdvanceDirective
"RTN","VPRHST",58,0)
 ;;4:Alert
"RTN","VPRHST",59,0)
 ;;5:Allergy
"RTN","VPRHST",60,0)
 ;;6:Appointment
"RTN","VPRHST",61,0)
 ;;7:Problem
"RTN","VPRHST",62,0)
 ;;8:Diagnosis
"RTN","VPRHST",63,0)
 ;;9:Document
"RTN","VPRHST",64,0)
 ;;10:LabOrder
"RTN","VPRHST",65,0)
 ;;11:RadOrder
"RTN","VPRHST",66,0)
 ;;12:OtherOrder
"RTN","VPRHST",67,0)
 ;;13:Medication
"RTN","VPRHST",68,0)
 ;;14:Vaccination
"RTN","VPRHST",69,0)
 ;;15:Observation
"RTN","VPRHST",70,0)
 ;;16:PhysicalExam
"RTN","VPRHST",71,0)
 ;;17:Procedure
"RTN","VPRHST",72,0)
 ;;18:FamilyHistory
"RTN","VPRHST",73,0)
 ;;19:SocialHistory
"RTN","VPRHST",74,0)
 ;;20:Referral
"RTN","VPRHST",75,0)
 ;;21:MemberEnrollment
"RTN","VPRHST",76,0)
 ;;22:HealthConcern
"RTN","VPRHST",77,0)
 ;;99
"RTN","VPRHST",78,0)
 ;
"RTN","VPRHST",79,0)
START() ; -- select a start date
"RTN","VPRHST",80,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHST",81,0)
 S DIR(0)="DAO^::AEPT",DIR("A")="Select START DATE: "
"RTN","VPRHST",82,0)
 S DIR("?")="Enter an optional date[.time] to begin searching for data"
"RTN","VPRHST",83,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","VPRHST",84,0)
 Q Y
"RTN","VPRHST",85,0)
 ;
"RTN","VPRHST",86,0)
STOP(START) ; -- select a stop date
"RTN","VPRHST",87,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHST",88,0)
 S DIR(0)="DA^"_START_"::AEPT",DIR("A")="Select STOP DATE: "
"RTN","VPRHST",89,0)
 S DIR("?")="Enter a date[.time] after the START to end searching for data"
"RTN","VPRHST",90,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","VPRHST",91,0)
 Q Y
"RTN","VPRHST",92,0)
 ;
"RTN","VPRHST",93,0)
TOTAL() ; -- select the max# to return
"RTN","VPRHST",94,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHST",95,0)
 S DIR(0)="NAO^1:99999",DIR("A")="Select TOTAL #items: "
"RTN","VPRHST",96,0)
 S DIR("?")="Enter an optional maximum number of items to return per VistA source for this container, up to 99999"
"RTN","VPRHST",97,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","VPRHST",98,0)
 Q Y
"RTN","VPRHST",99,0)
 ;
"RTN","VPRHST",100,0)
ITEM() ; -- select an item ID to return
"RTN","VPRHST",101,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHST",102,0)
 S DIR(0)="FAO^1:20",DIR("A")="ID: "
"RTN","VPRHST",103,0)
 S DIR("?")="Enter the id of a record to return, if known; press return to view all records in this container."
"RTN","VPRHST",104,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","VPRHST",105,0)
 Q Y
"RTN","VPRHST",106,0)
 ;
"RTN","VPRHST",107,0)
FORMAT() ; -- select output format
"RTN","VPRHST",108,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHST",109,0)
 S DIR(0)="SAO^0:JSON;1:XML;",DIR("A")="Select FORMAT: ",DIR("B")="XML"
"RTN","VPRHST",110,0)
 S DIR("?")="Choose your desired output format, XML or JSON"
"RTN","VPRHST",111,0)
 D ^DIR S:$D(DUOUT) Y="^"
"RTN","VPRHST",112,0)
 Q Y
"RTN","VPRHST1")
0^15^B5849231
"RTN","VPRHST1",1,0)
VPRHST1 ;SLC/KCM,MKB - Display XML object ;09/18/18 4:36pm
"RTN","VPRHST1",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRHST1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRHST1",4,0)
 ;
"RTN","VPRHST1",5,0)
XML(OBJ) ; -- display XML OBJect in hierarchy, returns DONE if ^
"RTN","VPRHST1",6,0)
 N XSTRING,ORSTK,ORNXT,ORCNT
"RTN","VPRHST1",7,0)
 S XSTRING=$G(OBJ) Q:'$L(XSTRING)
"RTN","VPRHST1",8,0)
 S ORSTK=-1,ORCNT=0 D OPEN
"RTN","VPRHST1",9,0)
 ;
"RTN","VPRHST1",10,0)
 F  S ORNXT=$E(XSTRING,1,2) D @$S(ORNXT="</":"CLOSE",ORNXT?1"<".E:"OPEN",1:"XDATA") Q:XSTRING=""  Q:$G(DONE)
"RTN","VPRHST1",11,0)
 Q
"RTN","VPRHST1",12,0)
 ;
"RTN","VPRHST1",13,0)
OPEN ; -- opening tag
"RTN","VPRHST1",14,0)
 N TAG S TAG=$P(XSTRING,">")_">",XSTRING=$E(XSTRING,$L(TAG)+1,999999999)
"RTN","VPRHST1",15,0)
 S ORCNT=ORCNT+1 I ORCNT>(IOSL-4) D READ Q:$G(DONE)  S ORCNT=1
"RTN","VPRHST1",16,0)
 S ORSTK=ORSTK+1 W !,?((ORSTK*2)),TAG
"RTN","VPRHST1",17,0)
 Q
"RTN","VPRHST1",18,0)
 ;
"RTN","VPRHST1",19,0)
XDATA ; -- data + closing tag
"RTN","VPRHST1",20,0)
 N DATA,TAG
"RTN","VPRHST1",21,0)
 S DATA=$P(XSTRING,"<") W DATA
"RTN","VPRHST1",22,0)
 S XSTRING=$E(XSTRING,$L(DATA)+1,999999999)
"RTN","VPRHST1",23,0)
 S TAG=$P(XSTRING,">")_">" W TAG
"RTN","VPRHST1",24,0)
 S XSTRING=$E(XSTRING,$L(TAG)+1,999999999),ORSTK=ORSTK-1
"RTN","VPRHST1",25,0)
 Q
"RTN","VPRHST1",26,0)
 ;
"RTN","VPRHST1",27,0)
CLOSE ; -- closing tag, pop stack
"RTN","VPRHST1",28,0)
 N TAG S TAG=$P(XSTRING,">")_">",XSTRING=$E(XSTRING,$L(TAG)+1,999999999)
"RTN","VPRHST1",29,0)
 S ORCNT=ORCNT+1 I ORCNT>(IOSL-4) D READ Q:$G(DONE)  S ORCNT=1
"RTN","VPRHST1",30,0)
 W !,?((ORSTK*2)),TAG S ORSTK=ORSTK-1
"RTN","VPRHST1",31,0)
 Q
"RTN","VPRHST1",32,0)
 ;
"RTN","VPRHST1",33,0)
READ ; -- continue?
"RTN","VPRHST1",34,0)
 N X
"RTN","VPRHST1",35,0)
 W !!,"Press <return> to continue ..." R X:DTIME
"RTN","VPRHST1",36,0)
 S:X["^" DONE=1
"RTN","VPRHST1",37,0)
 Q
"RTN","VPRHST1",38,0)
 ;
"RTN","VPRHST1",39,0)
JSON(OBJ) ; -- display JSON OBJect in hierarchy, returns DONE if ^
"RTN","VPRHST1",40,0)
 N XSTRING,ORSTK,ORNXT,ORCNT
"RTN","VPRHST1",41,0)
 S XSTRING=$G(OBJ) Q:'$L(XSTRING)
"RTN","VPRHST1",42,0)
 S ORSTK=-1,ORCNT=0
"RTN","VPRHST1",43,0)
 ;
"RTN","VPRHST1",44,0)
 F  D TAG S ORNXT=$E(XSTRING) D @$S(ORNXT="{":"BRACE",ORNXT="[":"LIST",1:"JDATA") Q:XSTRING=""  Q:$G(DONE)
"RTN","VPRHST1",45,0)
 Q
"RTN","VPRHST1",46,0)
 ;
"RTN","VPRHST1",47,0)
TAG ; -- display tag
"RTN","VPRHST1",48,0)
 N TAG S TAG=$P(XSTRING,":")_":",XSTRING=$E(XSTRING,$L(TAG)+1,999999999)
"RTN","VPRHST1",49,0)
 S ORCNT=ORCNT+1 I ORCNT>(IOSL-4) D READ Q:$G(DONE)  S ORCNT=1
"RTN","VPRHST1",50,0)
 S ORSTK=ORSTK+1 W !,?((ORSTK*2)),TAG
"RTN","VPRHST1",51,0)
 Q
"RTN","VPRHST1",52,0)
 ;
"RTN","VPRHST1",53,0)
BRACE ; -- braces
"RTN","VPRHST1",54,0)
 W "{"
"RTN","VPRHST1",55,0)
 S XSTRING=$E(XSTRING,2,999999999)
"RTN","VPRHST1",56,0)
 Q
"RTN","VPRHST1",57,0)
 ;
"RTN","VPRHST1",58,0)
LIST ; -- list
"RTN","VPRHST1",59,0)
 W "["
"RTN","VPRHST1",60,0)
 S XSTRING=$E(XSTRING,2,999999999)
"RTN","VPRHST1",61,0)
 ; ??
"RTN","VPRHST1",62,0)
 Q
"RTN","VPRHST1",63,0)
 ;
"RTN","VPRHST1",64,0)
JDATA ; -- display value, pop stack
"RTN","VPRHST1",65,0)
 N X,I S X=$P(XSTRING,", ")
"RTN","VPRHST1",66,0)
 S:$E(XSTRING,$L(X)+1,$L(X)+2)=", " X=X_", "
"RTN","VPRHST1",67,0)
 S XSTRING=$E(XSTRING,$L(X)+1,999999999)
"RTN","VPRHST1",68,0)
 W X S ORSTK=ORSTK-1
"RTN","VPRHST1",69,0)
 ; pop stack one more time for every closing brace
"RTN","VPRHST1",70,0)
 F I=1:1:$L(X) I $E(X,I)="}" S ORSTK=ORSTK-1
"RTN","VPRHST1",71,0)
 Q
"RTN","VPRHSX")
0^13^B13465259
"RTN","VPRHSX",1,0)
VPRHSX ;SLC/MKB -- HS Options ;09/18/18 4:36pm
"RTN","VPRHSX",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRHSX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRHSX",4,0)
 ;
"RTN","VPRHSX",5,0)
 ; External References          DBIA#
"RTN","VPRHSX",6,0)
 ; -------------------          -----
"RTN","VPRHSX",7,0)
 ; DIE                          10018
"RTN","VPRHSX",8,0)
 ; DIR                          10026
"RTN","VPRHSX",9,0)
 ; XUPROD                        4440
"RTN","VPRHSX",10,0)
 ;
"RTN","VPRHSX",11,0)
ON ; -- Turn monitoring on/off
"RTN","VPRHSX",12,0)
 N X0,DA,DR,DIE,X,Y
"RTN","VPRHSX",13,0)
 S X0=$G(^VPR(1,0)) I $P(X0,U,2),$$PROD^XUPROD D
"RTN","VPRHSX",14,0)
 . W !,$C(7) ;On in production
"RTN","VPRHSX",15,0)
 . W !,"WARNING: Turning off data monitoring will cause the Regional Health Connect"
"RTN","VPRHSX",16,0)
 . W !,"         server to become out of synch with VistA!!"
"RTN","VPRHSX",17,0)
 W ! S DA=1,DR=.02,DIE="^VPR(" D ^DIE
"RTN","VPRHSX",18,0)
 Q
"RTN","VPRHSX",19,0)
 ;
"RTN","VPRHSX",20,0)
LAST ; -- Reset Last# for AVPR update list
"RTN","VPRHSX",21,0)
 ; ^VPR("AVPR",seq#,DFN) = ICN ^ TYPE ^ ID ^ U/D ^ VISIT#
"RTN","VPRHSX",22,0)
 N LAST,TOTAL,X0
"RTN","VPRHSX",23,0)
 S LAST=+$G(^VPR(1,1)),TOTAL=LAST-(+$O(^VPR("AVPR",0)))+1
"RTN","VPRHSX",24,0)
 ;
"RTN","VPRHSX",25,0)
 I '$D(^VPR("AVPR")) D  Q
"RTN","VPRHSX",26,0)
 . W !!,"There are no records in the update list."
"RTN","VPRHSX",27,0)
 . I LAST,$$RESET S ^VPR(1,1)=0
"RTN","VPRHSX",28,0)
 ;
"RTN","VPRHSX",29,0)
 W !!,TOTAL_" records awaiting update, last sequence number is "_LAST
"RTN","VPRHSX",30,0)
 S X0=$G(^VPR(1,0)) I $P(X0,U,2),$$PROD^XUPROD D
"RTN","VPRHSX",31,0)
 . W !,$C(7) ;On in production
"RTN","VPRHSX",32,0)
 . W !,"WARNING: Resetting the update list will cause the Regional Health Connect"
"RTN","VPRHSX",33,0)
 . W !,"         server to become out of synch with VistA!!"
"RTN","VPRHSX",34,0)
 W ! I $$SURE D
"RTN","VPRHSX",35,0)
 . K ^VPR("AVPR") S ^VPR(1,1)=0
"RTN","VPRHSX",36,0)
 . W !," ... queue cleared, list counter reset to 0."
"RTN","VPRHSX",37,0)
 Q
"RTN","VPRHSX",38,0)
 ;
"RTN","VPRHSX",39,0)
SURE() ; -- delete update list?
"RTN","VPRHSX",40,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHSX",41,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","VPRHSX",42,0)
 S DIR("A")="Are you sure you want to clear the update list? "
"RTN","VPRHSX",43,0)
 S DIR("?")="Enter YES to empty the list of records to update and reset the counter, or NO to exit without making any changes."
"RTN","VPRHSX",44,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y="^"
"RTN","VPRHSX",45,0)
 Q Y
"RTN","VPRHSX",46,0)
 ;
"RTN","VPRHSX",47,0)
RESET() ; -- Reset sequence#?
"RTN","VPRHSX",48,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHSX",49,0)
 S DIR(0)="YA",DIR("A")="Reset the list counter? ",DIR("B")="NO"
"RTN","VPRHSX",50,0)
 S DIR("?")="Last sequence number used is "_LAST_"; select YES to reset the list counter to start over from 0."
"RTN","VPRHSX",51,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y="^"
"RTN","VPRHSX",52,0)
 Q Y
"RTN","VPRHSX",53,0)
 ;
"RTN","VPRHSX",54,0)
GET ; -- Add patient/container/record to GET list
"RTN","VPRHSX",55,0)
 N DFN,ICN,TYPE,ACT,VST,X
"RTN","VPRHSX",56,0)
 I '$P($G(^VPR(1,0)),U,2) W !,"WARNING: Data Monitoring is currently disabled!",!
"RTN","VPRHSX",57,0)
 ;
"RTN","VPRHSX",58,0)
 S DFN=+$$PATIENT^VPRHST Q:DFN<1
"RTN","VPRHSX",59,0)
 S ICN=$$GETICN^MPIF001(DFN) I ICN<0 W !,"ICN is required!",! Q
"RTN","VPRHSX",60,0)
 ;
"RTN","VPRHSX",61,0)
 I $$SUBS^VPRHS(DFN) D  Q
"RTN","VPRHSX",62,0)
 . S TYPE=$$CONTNR^VPRHST,ACT="U" Q:"^"[TYPE
"RTN","VPRHSX",63,0)
 . D P1^VPRHS W !," ... request added to update queue."
"RTN","VPRHSX",64,0)
 ;
"RTN","VPRHSX",65,0)
 W !,$C(7),"WARNING: This patient is not currently in the Edge Cache Repository (ECR)!",!
"RTN","VPRHSX",66,0)
 S X=+$G(^DPT(DFN,.35)) I X D  Q
"RTN","VPRHSX",67,0)
 . W !,"This patient has a Date of Death: "_$$FMTE^XLFDT(X)
"RTN","VPRHSX",68,0)
 . W !,"Cannot add to ECR",!
"RTN","VPRHSX",69,0)
 Q:'$$CONT  D NEW^VPRHS
"RTN","VPRHSX",70,0)
 W !," ... request added to update queue."
"RTN","VPRHSX",71,0)
 Q
"RTN","VPRHSX",72,0)
 ;
"RTN","VPRHSX",73,0)
CONT() ; -- continue?
"RTN","VPRHSX",74,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHSX",75,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","VPRHSX",76,0)
 S DIR("A")="Are you sure you want to continue with this patient? "
"RTN","VPRHSX",77,0)
 S DIR("?")="Enter YES to add this patient to the ECR and subscribe to VistA updates, or NO to exit."
"RTN","VPRHSX",78,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y="^"
"RTN","VPRHSX",79,0)
 Q Y
"RTN","VPRIDX")
0^8^B2708676
"RTN","VPRIDX",1,0)
VPRIDX ;SLC/MKB -- Create AVPR index ;10/25/18  15:29
"RTN","VPRIDX",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRIDX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRIDX",4,0)
 Q
"RTN","VPRIDX",5,0)
 ;
"RTN","VPRIDX",6,0)
EN ; -- create index
"RTN","VPRIDX",7,0)
 D GMRV
"RTN","VPRIDX",8,0)
 ;
"RTN","VPRIDX",9,0)
 Q
"RTN","VPRIDX",10,0)
 ;
"RTN","VPRIDX",11,0)
GMRV ; -- create AVPR index on GMRV Measurement file #120.5
"RTN","VPRIDX",12,0)
 N VPRX,VPRY
"RTN","VPRIDX",13,0)
 S VPRX("FILE")=120.5
"RTN","VPRIDX",14,0)
 S VPRX("NAME")="AVPR"
"RTN","VPRIDX",15,0)
 S VPRX("TYPE")="MU"
"RTN","VPRIDX",16,0)
 S VPRX("USE")="A"
"RTN","VPRIDX",17,0)
 S VPRX("EXECUTION")="R"
"RTN","VPRIDX",18,0)
 S VPRX("ACTIVITY")=""
"RTN","VPRIDX",19,0)
 S VPRX("SHORT DESCR")="Trigger updates to VPR"
"RTN","VPRIDX",20,0)
 S VPRX("DESCR",1)="This is an action index that updates the Virtual Patient Record (VPR)"
"RTN","VPRIDX",21,0)
 S VPRX("DESCR",2)="when any of the fields in this index are changed. No actual cross-"
"RTN","VPRIDX",22,0)
 S VPRX("DESCR",3)="reference nodes are set or killed."
"RTN","VPRIDX",23,0)
 S VPRX("SET")="D GMRV^VPREVNT(X(1),DA,$G(X(3)))"
"RTN","VPRIDX",24,0)
 S VPRX("KILL")="Q"
"RTN","VPRIDX",25,0)
 S VPRX("WHOLE KILL")="Q"
"RTN","VPRIDX",26,0)
 S VPRX("VAL",1)=.02              ;Patient
"RTN","VPRIDX",27,0)
 S VPRX("VAL",2)=1.2              ;Rate
"RTN","VPRIDX",28,0)
 S VPRX("VAL",3)=2                ;Entered in Error
"RTN","VPRIDX",29,0)
 D CREIXN^DDMOD(.VPRX,"kW",.VPRY) ;VPRY=ien^name of index
"RTN","VPRIDX",30,0)
 Q
"RTN","VPRP8I")
0^14^B775515
"RTN","VPRP8I",1,0)
VPRP8I ;SLC/MKB -- VPR patch 8 pre install ;10/14/18  11:22
"RTN","VPRP8I",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRP8I",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRP8I",4,0)
 ;
"RTN","VPRP8I",5,0)
 ; External References          DBIA#
"RTN","VPRP8I",6,0)
 ; -------------------          -----
"RTN","VPRP8I",7,0)
 ; VASITE                       10112
"RTN","VPRP8I",8,0)
 ;
"RTN","VPRP8I",9,0)
PRE ; -- pre init
"RTN","VPRP8I",10,0)
 Q
"RTN","VPRP8I",11,0)
 ;
"RTN","VPRP8I",12,0)
POST ; -- post init
"RTN","VPRP8I",13,0)
 D 560,SDA
"RTN","VPRP8I",14,0)
 D EN^VPRIDX
"RTN","VPRP8I",15,0)
 Q
"RTN","VPRP8I",16,0)
 ;
"RTN","VPRP8I",17,0)
560 ;set up Subscription file
"RTN","VPRP8I",18,0)
 I $P($G(^VPR(1,0)),U)="" D
"RTN","VPRP8I",19,0)
 . N SITE S SITE=$P($$SITE^VASITE,U,2)
"RTN","VPRP8I",20,0)
 . S:SITE="" SITE="VISTA"
"RTN","VPRP8I",21,0)
 . S $P(^VPR(1,0),U)=SITE,^VPR("B",SITE,1)=""
"RTN","VPRP8I",22,0)
 . S $P(^VPR(0),U,3,4)="1^1"
"RTN","VPRP8I",23,0)
 Q
"RTN","VPRP8I",24,0)
 ;
"RTN","VPRP8I",25,0)
SDA ;rebuild SDA index
"RTN","VPRP8I",26,0)
 N X,Y,DA,DIK
"RTN","VPRP8I",27,0)
 K ^DDE("SDA")
"RTN","VPRP8I",28,0)
 S DIK="^DDE(",DIK(1)=".06^SDA"
"RTN","VPRP8I",29,0)
 D ENALL^DIK
"RTN","VPRP8I",30,0)
 Q
"RTN","VPRPROC")
0^10^B449786
"RTN","VPRPROC",1,0)
VPRPROC ;SLC/MKB -- Clinical Procedures interface ;10/25/18  15:29
"RTN","VPRPROC",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRPROC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRPROC",4,0)
 ;
"RTN","VPRPROC",5,0)
 ; Supported by DBIA #4749
"RTN","VPRPROC",6,0)
 ;
"RTN","VPRPROC",7,0)
 ; ---------------- Update Triggers ----------------
"RTN","VPRPROC",8,0)
 ;
"RTN","VPRPROC",9,0)
UPD(DFN,IEN,STS) ; -- updated procedure request [from #702 AVPR index]
"RTN","VPRPROC",10,0)
 S DFN=+$G(DFN),IEN=+$G(IEN) Q:DFN<1
"RTN","VPRPROC",11,0)
 D CP^VPREVNT(DFN,IEN)
"RTN","VPRPROC",12,0)
 Q
"RTN","VPRPROC",13,0)
 ;
"RTN","VPRPROC",14,0)
DEL(DFN,IEN) ; -- delete procedure request [from #702 AVPR index]
"RTN","VPRPROC",15,0)
 S DFN=+$G(DFN),IEN=+$G(IEN) Q:DFN<1
"RTN","VPRPROC",16,0)
 D CP^VPREVNT(DFN,IEN,"@")
"RTN","VPRPROC",17,0)
 Q
"RTN","VPRSDA")
0^1^B175529612
"RTN","VPRSDA",1,0)
VPRSDA ;SLC/MKB -- SDA utilities ;10/25/18  15:29
"RTN","VPRSDA",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRSDA",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","VPRSDA",4,0)
 ;
"RTN","VPRSDA",5,0)
 ; External References          DBIA#
"RTN","VPRSDA",6,0)
 ; -------------------          -----
"RTN","VPRSDA",7,0)
 ; ^AUPNPROB                     5703
"RTN","VPRSDA",8,0)
 ; ^AUPNVSIT                     2028
"RTN","VPRSDA",9,0)
 ; ^DGPM                         1865
"RTN","VPRSDA",10,0)
 ; ^DIC(42                      10039
"RTN","VPRSDA",11,0)
 ; ^DPT                         10035
"RTN","VPRSDA",12,0)
 ; ^LR                            525
"RTN","VPRSDA",13,0)
 ; ^OR(100                       5771
"RTN","VPRSDA",14,0)
 ; ^ORD(100.98                    873
"RTN","VPRSDA",15,0)
 ; ^SC                          10040
"RTN","VPRSDA",16,0)
 ; ^SCE                          2045
"RTN","VPRSDA",17,0)
 ; ^SRF                     3615,5675
"RTN","VPRSDA",18,0)
 ; ^TIU(8925.1                   5677
"RTN","VPRSDA",19,0)
 ; %DT                          10003
"RTN","VPRSDA",20,0)
 ; DILFD                         2055
"RTN","VPRSDA",21,0)
 ; DIQ                           2056
"RTN","VPRSDA",22,0)
 ; ETSLNC                        6731
"RTN","VPRSDA",23,0)
 ; ETSRXN                        6758
"RTN","VPRSDA",24,0)
 ; GMRCGUIB                      2980
"RTN","VPRSDA",25,0)
 ; GMVGETVT                      5047
"RTN","VPRSDA",26,0)
 ; GMVUTL                        5046
"RTN","VPRSDA",27,0)
 ; ICDEX                         5747
"RTN","VPRSDA",28,0)
 ; LEXTRAN                       4912
"RTN","VPRSDA",29,0)
 ; LR7OSUM                       2766
"RTN","VPRSDA",30,0)
 ; LRPXAPIU                      4246
"RTN","VPRSDA",31,0)
 ; PXAPI                         1894
"RTN","VPRSDA",32,0)
 ; RMIMRP                        4745
"RTN","VPRSDA",33,0)
 ; SDAM301                       4433
"RTN","VPRSDA",34,0)
 ; SDOE                          2546
"RTN","VPRSDA",35,0)
 ; TIULQ                         2693
"RTN","VPRSDA",36,0)
 ; VADPT                        10061
"RTN","VPRSDA",37,0)
 ; XLFNAME                       3065
"RTN","VPRSDA",38,0)
 ;
"RTN","VPRSDA",39,0)
INTDATE(X) ; -- Return internal form of date X
"RTN","VPRSDA",40,0)
 N %DT,Y
"RTN","VPRSDA",41,0)
 S %DT="TSX" D ^%DT
"RTN","VPRSDA",42,0)
 Q Y
"RTN","VPRSDA",43,0)
 ;
"RTN","VPRSDA",44,0)
DATE(X,DTO) ; -- return FM date X as SDA date
"RTN","VPRSDA",45,0)
 N D,T,Y
"RTN","VPRSDA",46,0)
 S X=$G(X) I X'?7N.1".".7N Q ""
"RTN","VPRSDA",47,0)
 ; convert to SDA format
"RTN","VPRSDA",48,0)
 S X=$$IMPREC(X),D=$P(X,"."),T=$P(X,".",2)
"RTN","VPRSDA",49,0)
 S Y=(1700+$E(D,1,3))_"-"_$E(D,4,5)_"-"_$E(D,6,7)
"RTN","VPRSDA",50,0)
 I $G(DTO) Q Y  ;date only
"RTN","VPRSDA",51,0)
 ; validate T = time
"RTN","VPRSDA",52,0)
 I T=24 S T=235959 ;for SDA
"RTN","VPRSDA",53,0)
 S:$L(T)<6 T=$E((T_"000000"),1,6)
"RTN","VPRSDA",54,0)
 I $E(T,5,6)>59 S $E(T,5,6)="00" ;strip invalid seconds
"RTN","VPRSDA",55,0)
 S Y=Y_"T"_$E(T,1,2)_":"_$E(T,3,4)_":"_$E(T,5,6)
"RTN","VPRSDA",56,0)
 ; time zone?
"RTN","VPRSDA",57,0)
 Q Y
"RTN","VPRSDA",58,0)
 ;
"RTN","VPRSDA",59,0)
IMPREC(X) ; -- if X is imprecise, make actual date
"RTN","VPRSDA",60,0)
 N Y S Y=$E(X,1,3)
"RTN","VPRSDA",61,0)
 S Y=Y_$S($E(X,4,5)="00":"01",1:$E(X,4,5))
"RTN","VPRSDA",62,0)
 S Y=Y_$S($E(X,6,7)="00":"01",1:$E(X,6,7))
"RTN","VPRSDA",63,0)
 I X["." S Y=Y_"."_$P(X,".",2)
"RTN","VPRSDA",64,0)
 Q Y
"RTN","VPRSDA",65,0)
 ;
"RTN","VPRSDA",66,0)
NAMECOMP(NAME) ; -- return name as string of component pieces
"RTN","VPRSDA",67,0)
 ; NAME -> FAMILY^GIVEN^MIDDLE^SUFFIX
"RTN","VPRSDA",68,0)
 D NAMECOMP^XLFNAME(.NAME)
"RTN","VPRSDA",69,0)
 N I,Y S Y=$G(NAME("FAMILY"))
"RTN","VPRSDA",70,0)
 F I="GIVEN","MIDDLE","SUFFIX" S Y=Y_U_$G(NAME(I))
"RTN","VPRSDA",71,0)
 Q Y
"RTN","VPRSDA",72,0)
 ;
"RTN","VPRSDA",73,0)
WP(ORIFN,ID) ; -- return a WP value from an order response as a string
"RTN","VPRSDA",74,0)
 N DA,I,X,Y S Y=""
"RTN","VPRSDA",75,0)
 S DA=+$O(^OR(100,+$G(ORIFN),4.5,"ID",ID,0))
"RTN","VPRSDA",76,0)
 S I=0 F  S I=$O(^OR(100,+$G(ORIFN),4.5,DA,2,I)) Q:'I  S X=$G(^(I,0)) D
"RTN","VPRSDA",77,0)
 . I '$L(Y) Q:(X="")!(X?1." ")  S Y=X Q
"RTN","VPRSDA",78,0)
 . I $E(X)=" " S Y=Y_$C(13,10)_X Q
"RTN","VPRSDA",79,0)
 . S Y=Y_$S($E(Y,$L(Y))=" ":"",1:" ")_X
"RTN","VPRSDA",80,0)
 Q Y
"RTN","VPRSDA",81,0)
 ;
"RTN","VPRSDA",82,0)
CODED ; -- ck Code Table ID for internal^external format
"RTN","VPRSDA",83,0)
 Q:$G(ID)=""  Q:$L(ID,"^")>1  ;ok
"RTN","VPRSDA",84,0)
 N X,NM S NM=ID
"RTN","VPRSDA",85,0)
 I $G(FILE),$G(FIELD) D
"RTN","VPRSDA",86,0)
 . S X=$$EXTERNAL^DILFD(FILE,FIELD,,ID)
"RTN","VPRSDA",87,0)
 . S:X'="" NM=X
"RTN","VPRSDA",88,0)
 S ID=ID_U_NM
"RTN","VPRSDA",89,0)
 Q
"RTN","VPRSDA",90,0)
 ;
"RTN","VPRSDA",91,0)
CODE(IEN,FILE,CSYS) ; -- find CSYS code for IEN in FILE
"RTN","VPRSDA",92,0)
 ; CSYS can be string of abbreviations to look for, in order
"RTN","VPRSDA",93,0)
 N FLD,VPRC,SFN,S,SYS,NAMES,IENS,SFN1,I,X,Y S Y=""
"RTN","VPRSDA",94,0)
 S FLD=$$FLDNUM^DILFD(FILE,"CODING SYSTEM") Q:'FLD ""
"RTN","VPRSDA",95,0)
 D GETS^DIQ(FILE,IEN_",",FLD_"*","NR","VPRC")
"RTN","VPRSDA",96,0)
 S SFN=+$O(VPRC(0)) Q:'SFN ""  ;Sub-file# = Coding System multiple
"RTN","VPRSDA",97,0)
 F S=1:1 S SYS=$P(CSYS,U,S) Q:SYS=""  D  Q:$L(Y)
"RTN","VPRSDA",98,0)
 . S NAMES=$S(SYS="RXN":"RxNorm^RXNORM",SYS="NDF":"NDF-RT^NDFRT^NDF",SYS="SCT":"SNOMED CT^SNOMED-CT^SCT",SYS="LNC":"LOINC^LNC",SYS="UNI":"UNII^UNI",1:SYS)
"RTN","VPRSDA",99,0)
 . S IENS="" F  S IENS=$O(VPRC(SFN,IENS)) Q:IENS=""  D  Q:$L(Y)
"RTN","VPRSDA",100,0)
 .. S X=$G(VPRC(SFN,IENS,"CODING SYSTEM")) Q:X=""  Q:NAMES'[X
"RTN","VPRSDA",101,0)
 .. S SFN1=$O(VPRC(SFN)),I=$O(VPRC(SFN1,""))
"RTN","VPRSDA",102,0)
 .. S:I Y=$G(VPRC(SFN1,I,"CODE")) ;first code for system
"RTN","VPRSDA",103,0)
 . I $L(Y) S Y=Y_U_$$DESC(Y)_U_$P(NAMES,U)
"RTN","VPRSDA",104,0)
 Q Y
"RTN","VPRSDA",105,0)
 ;
"RTN","VPRSDA",106,0)
DESC(CODE) ; -- called from CODE, to return coding system text
"RTN","VPRSDA",107,0)
 ; Expects all the variables used in CODE()
"RTN","VPRSDA",108,0)
 N X,Y,LEX S Y=""
"RTN","VPRSDA",109,0)
 I SYS="SCT" D
"RTN","VPRSDA",110,0)
 . S X=$$CODE^LEXTRAN(CODE,"SCT",DT)
"RTN","VPRSDA",111,0)
 . S:X>0 Y=$G(LEX("P")) ;preferred term
"RTN","VPRSDA",112,0)
 I SYS="RXN",$L($T(CSDATA^ETSRXN)) D
"RTN","VPRSDA",113,0)
 . S X=$$CSDATA^ETSRXN(CODE,"RXN",DT,.LEX)
"RTN","VPRSDA",114,0)
 . S:X>0 Y=$P($G(LEX("LEX",1)),U,2)
"RTN","VPRSDA",115,0)
 I SYS="LNC",$L($T(GETNAME^ETSLNC)) D
"RTN","VPRSDA",116,0)
 . S X=$$GETNAME^ETSLNC(CODE,"C",.LEX)
"RTN","VPRSDA",117,0)
 . S:X>0 Y=$G(LEX("LONGNAME"))
"RTN","VPRSDA",118,0)
 I '$L($G(Y)) S Y=$$GET1^DIQ(FILE,IEN_",",.01)
"RTN","VPRSDA",119,0)
 Q Y
"RTN","VPRSDA",120,0)
 ;
"RTN","VPRSDA",121,0)
CONSNAME(IEN) ; -- return full display name using fields
"RTN","VPRSDA",122,0)
 ; To Service (#1) & Procedure/Request Type (#4)
"RTN","VPRSDA",123,0)
 N X,Y S X=$G(VPRCONS(0))
"RTN","VPRSDA",124,0)
 S Y=$P(X,U,5)
"RTN","VPRSDA",125,0)
 I $L($P(X,U,8)) S Y=Y_" "_$P(X,U,8)_" Proc"
"RTN","VPRSDA",126,0)
 E  S Y=Y_" Cons"
"RTN","VPRSDA",127,0)
 Q Y
"RTN","VPRSDA",128,0)
 ;
"RTN","VPRSDA",129,0)
PROVDX(IEN) ; -- return full Consult ProvDx string, or null
"RTN","VPRSDA",130,0)
 N X,Y,VPRDX S X=$G(VPRCONS(30.1)),Y=""
"RTN","VPRSDA",131,0)
 I $L(X,U)<3 S DDEOUT=1 Q ""
"RTN","VPRSDA",132,0)
 I $E(X)=U S DDEOUT=1 Q ""
"RTN","VPRSDA",133,0)
 S:$P(X,U,2)="" $P(X,U,2)=DT
"RTN","VPRSDA",134,0)
 S:$P(X,U,3)="" $P(X,U,3)="ICD"
"RTN","VPRSDA",135,0)
 I $$ICDD^ICDEX($P(X,U),.VPRDX,$P(X,U,2),$P(X,U,3))>0 D
"RTN","VPRSDA",136,0)
 . S Y=$P(X,U)_U_VPRDX(1)_U_$$SNAM^ICDEX($$SYS^ICDEX($P(X,U,3)))
"RTN","VPRSDA",137,0)
 Q Y
"RTN","VPRSDA",138,0)
 ;
"RTN","VPRSDA",139,0)
PROBCMT(IEN) ; -- return list of comments in
"RTN","VPRSDA",140,0)
 ; DLIST(#) = id ^ date ^ user ^ type ^ facility ^ text
"RTN","VPRSDA",141,0)
 N I,J,N,X,FAC S N=0
"RTN","VPRSDA",142,0)
 S I=0 F  S I=$O(^AUPNPROB(IEN,11,I)) Q:I<1  S FAC=$G(^(I,0)) D
"RTN","VPRSDA",143,0)
 . S J=0 F  S J=$O(^AUPNPROB(IEN,11,I,11,J)) Q:J<1  S X=$G(^(J,0)) D
"RTN","VPRSDA",144,0)
 .. Q:$P(X,U,4)'="A"
"RTN","VPRSDA",145,0)
 .. S Y=$P(X,U,5)_U_$P(X,U,6)_U_U_FAC_U_$P(X,U,3)
"RTN","VPRSDA",146,0)
 .. S N=N+1,DLIST(N)=J_","_I_","_IEN_U_Y
"RTN","VPRSDA",147,0)
 Q
"RTN","VPRSDA",148,0)
 ;
"RTN","VPRSDA",149,0)
SCTTEXT(CODE,IEN) ; -- get Preferred Text for SCT Code
"RTN","VPRSDA",150,0)
 N Y,GMPDT,LEX,LEXY S Y=""
"RTN","VPRSDA",151,0)
 S GMPDT=$P($G(^AUPNPROB(IEN,0)),U,8) S:'GMPDT GMPDT=DT
"RTN","VPRSDA",152,0)
 S LEXY=$$CODE^LEXTRAN(CODE,"SCT",GMPDT)
"RTN","VPRSDA",153,0)
 S:LEXY>0 Y=$G(LEX("P")) ;preferred term
"RTN","VPRSDA",154,0)
 Q Y
"RTN","VPRSDA",155,0)
 ;
"RTN","VPRSDA",156,0)
POVNARR() ; -- build Original Text for POV
"RTN","VPRSDA",157,0)
 N NARR,MOD,Y S Y=""
"RTN","VPRSDA",158,0)
 S NARR=$G(VPRPOV("PROVIDER NARRATIVE")),MOD=$G(VPRPOV("MODIFIER"))
"RTN","VPRSDA",159,0)
 S:NARR Y=$$GET1^DIQ(9999999.27,NARR_",",.01)
"RTN","VPRSDA",160,0)
 I $L(MOD),$L(Y) S Y=$$EXTERNAL^DILFD(9000010.07,.06,,MOD)_" "_Y
"RTN","VPRSDA",161,0)
 Q Y
"RTN","VPRSDA",162,0)
 ;
"RTN","VPRSDA",163,0)
AD(ID) ; -- get info for one Adv Directive
"RTN","VPRSDA",164,0)
 K VPRTIU S ID=$G(ID)
"RTN","VPRSDA",165,0)
 D EXTRACT^TIULQ(+ID,"VPRTIU",,".01:.05;1201;1212;1301;1302",,1,"I")
"RTN","VPRSDA",166,0)
 S:'DFN DFN=+$G(VPRTIU(+ID,.02,"I"))
"RTN","VPRSDA",167,0)
 I DFN,'$D(^TMP("TIUPPCV",$J)) D  ;one, do query
"RTN","VPRSDA",168,0)
 . N DLIST,I,X
"RTN","VPRSDA",169,0)
 . D ADVDIR^VPRSDAQ
"RTN","VPRSDA",170,0)
 . S I=0 F  S I=$O(DLIST(I)) Q:I<1  S X=$G(DLIST(I)) I +X=+ID S ID=X Q
"RTN","VPRSDA",171,0)
 S VPRADV=ID,ID=+ID
"RTN","VPRSDA",172,0)
 Q
"RTN","VPRSDA",173,0)
 ;
"RTN","VPRSDA",174,0)
TIULNC(IEN) ; -- convert 8925.1 IEN to 8926.1 IEN
"RTN","VPRSDA",175,0)
 ;  Returns   DATA = code ^ [description] ^ system
"RTN","VPRSDA",176,0)
 ; Optional TIUTTL = local title name
"RTN","VPRSDA",177,0)
 N TIUNATL S IEN=+$G(IEN),DATA=""
"RTN","VPRSDA",178,0)
 S TIUNATL=+$G(^TIU(8925.1,IEN,15))
"RTN","VPRSDA",179,0)
 ; if no national mapping, return local title
"RTN","VPRSDA",180,0)
 I 'TIUNATL S DATA=IEN_U_$P($G(^TIU(8925.1,IEN,0)),U)_"^VA8925.1" Q
"RTN","VPRSDA",181,0)
 ; get LOINC or VUID
"RTN","VPRSDA",182,0)
 S TIUTTL=$P($G(^TIU(8925.1,IEN,0)),U),IEN=TIUNATL
"RTN","VPRSDA",183,0)
 S DATA=$$CODE(IEN,8926.1,"LNC")
"RTN","VPRSDA",184,0)
 I DATA="" S DATA=$$VUID^VPRD(IEN,8926.1) S:DATA DATA=DATA_"^^VHAT"
"RTN","VPRSDA",185,0)
 ; else default = 8926.1 ien as per usual
"RTN","VPRSDA",186,0)
 Q
"RTN","VPRSDA",187,0)
 ;
"RTN","VPRSDA",188,0)
TIUTYPE(IEN) ; -- return code^name for document type/class
"RTN","VPRSDA",189,0)
 N X,Y S Y=""
"RTN","VPRSDA",190,0)
 S X=$$CATG^VPRDTIU(IEN) I X="PN" D
"RTN","VPRSDA",191,0)
 . N NATL,SVC
"RTN","VPRSDA",192,0)
 . S NATL=+$G(^TIU(8925.1,+$G(IEN),15)) Q:'NATL
"RTN","VPRSDA",193,0)
 . S SVC=$$GET1^DIQ(8926.1,NATL_",",.07) Q:SVC=""
"RTN","VPRSDA",194,0)
 . I SVC["HISTORY & PHYSICAL"!(SVC["HISTORY AND PHYSICAL") S Y="HP^History & Physical" Q
"RTN","VPRSDA",195,0)
 . I SVC["COMPENSATION & PENSION" S Y="CM^Compensation & Pension" Q
"RTN","VPRSDA",196,0)
 S:'$L(Y) Y=X_U_$$TYPE^VPRDJ08(X)
"RTN","VPRSDA",197,0)
 Q Y
"RTN","VPRSDA",198,0)
 ;
"RTN","VPRSDA",199,0)
TIUSIG() ; -- return date of authorization
"RTN","VPRSDA",200,0)
 N Y S Y=""
"RTN","VPRSDA",201,0)
 I $G(VPRTIU(DIEN,1501,"I")) S Y=VPRTIU(DIEN,1501,"I") ;Signed
"RTN","VPRSDA",202,0)
 I $G(VPRTIU(DIEN,1507,"I")) S Y=VPRTIU(DIEN,1507,"I") ;Co-signed
"RTN","VPRSDA",203,0)
 I $G(VPRTIU(DIEN,1606,"I")) S Y=VPRTIU(DIEN,1606,"I") ;Admin Closure
"RTN","VPRSDA",204,0)
 Q Y
"RTN","VPRSDA",205,0)
 ;
"RTN","VPRSDA",206,0)
LRAP1(ID) ; -- parse ID for AP,MI report
"RTN","VPRSDA",207,0)
 ; Returns DIFN, VPRSUB, updated ID, LR0=^LR(LRDFN,SUB,IDT,0)
"RTN","VPRSDA",208,0)
 S ID=$G(ID),VPRSUB=$P(ID,"~",2),ID=$P(ID,"~")
"RTN","VPRSDA",209,0)
 I VPRSUB D  ;sub-file#
"RTN","VPRSDA",210,0)
 . S DIFN=VPRSUB,VPRSUB=$S(DIFN=63.05:"MI",DIFN=63.09:"CY",DIFN=63.02:"EM",DIFN=63.08:"SP",1:"AP")
"RTN","VPRSDA",211,0)
 E  S DIFN=$S(VPRSUB="MI":63.05,VPRSUB="CY":63.09,VPRSUB="EM":63.02,VPRSUB="SP":63.08,1:0)
"RTN","VPRSDA",212,0)
 I DIFN<1 S DDEOUT=1 Q
"RTN","VPRSDA",213,0)
 S:'$G(LRDFN) LRDFN=+$P(ID,",",2)
"RTN","VPRSDA",214,0)
 S LR0=$G(^LR(LRDFN,VPRSUB,+ID,0))
"RTN","VPRSDA",215,0)
 Q
"RTN","VPRSDA",216,0)
 ;
"RTN","VPRSDA",217,0)
LRPT(SUB,IDT) ; -- return report text in WP(), expects DFN
"RTN","VPRSDA",218,0)
 N I,DATE,NAME,VPRS,VPRY,X,LRAU
"RTN","VPRSDA",219,0)
 K ^TMP("LRC",$J),^TMP("LRH",$J),^TMP("LRT",$J)
"RTN","VPRSDA",220,0)
 S DATE=9999999-+$G(IDT),NAME=$S(SUB="EM":"EM",1:$$NAME^VPRDLRA(SUB)),VPRS(NAME)=""
"RTN","VPRSDA",221,0)
 D EN^LR7OSUM(.VPRY,DFN,DATE,DATE,,,.VPRS)
"RTN","VPRSDA",222,0)
 S I=+$G(^TMP("LRH",$J,NAME)) ;LRH=header
"RTN","VPRSDA",223,0)
 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=$G(^(I,0)) Q:X?1."="  S WP(I)=X
"RTN","VPRSDA",224,0)
 K ^TMP("LRC",$J),^TMP("LRH",$J),^TMP("LRT",$J)
"RTN","VPRSDA",225,0)
 Q
"RTN","VPRSDA",226,0)
 ;
"RTN","VPRSDA",227,0)
LRDFN(ORIFN) ; -- set up LRDFN for Lab Order
"RTN","VPRSDA",228,0)
 I 'DFN,$G(ORIFN) S DFN=+$$GET1^DIQ(100,+ORIFN_",",.02,"I")
"RTN","VPRSDA",229,0)
 S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","VPRSDA",230,0)
 Q
"RTN","VPRSDA",231,0)
 ;
"RTN","VPRSDA",232,0)
ORDG(DG) ; -- return ien^name^VA100.98 for a DG abbreviation
"RTN","VPRSDA",233,0)
 N X,Y S X=$O(^ORD(100.98,"B",DG,0)),Y=""
"RTN","VPRSDA",234,0)
 S:X Y=X_U_$P(^ORD(100.98,X,0),U)_"^VA100.98"
"RTN","VPRSDA",235,0)
 Q Y
"RTN","VPRSDA",236,0)
 ;
"RTN","VPRSDA",237,0)
WARDFAC(IEN) ; -- return #4 ien for a Ward Location
"RTN","VPRSDA",238,0)
 N HLOC,Y
"RTN","VPRSDA",239,0)
 S HLOC=+$G(^DIC(42,+$G(IEN),44)),Y=""
"RTN","VPRSDA",240,0)
 S:HLOC Y=$P($G(^SC(HLOC,0)),U,4)
"RTN","VPRSDA",241,0)
 Q Y
"RTN","VPRSDA",242,0)
 ;
"RTN","VPRSDA",243,0)
VST(VISIT) ; -- get info for a VISIT in @VPRVST
"RTN","VPRSDA",244,0)
 S VISIT=+$G(VISIT) Q:VISIT<1
"RTN","VPRSDA",245,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","VPRSDA",246,0)
 S VPRVST=$NA(^TMP("PXKENC",$J,VISIT,"VST",VISIT))
"RTN","VPRSDA",247,0)
 Q
"RTN","VPRSDA",248,0)
 ;
"RTN","VPRSDA",249,0)
VAIP(MVT,DFN) ; -- get admission info & Visit#
"RTN","VPRSDA",250,0)
 ; Return VAIP(#)= array of movements
"RTN","VPRSDA",251,0)
 ;        VPRVST = Visit#
"RTN","VPRSDA",252,0)
 S MVT=$G(MVT),DFN=+$G(DFN)
"RTN","VPRSDA",253,0)
 S VPRVST=+$P(MVT,"~",2),MVT=+MVT
"RTN","VPRSDA",254,0)
 S:'DFN DFN=+$$GET1^DIQ(405,MVT_",",.03,"I")
"RTN","VPRSDA",255,0)
 I 'DFN!'MVT S DDEOUT=1 Q
"RTN","VPRSDA",256,0)
 N VAERR,VADMVT K VAIP
"RTN","VPRSDA",257,0)
 S:MVT'=+$G(^DPT(DFN,.105)) VAIP("E")=MVT
"RTN","VPRSDA",258,0)
 D IN5^VADPT
"RTN","VPRSDA",259,0)
 S:'VPRVST VPRVST=$$VNUM(+$G(VAIP(13)))
"RTN","VPRSDA",260,0)
 Q
"RTN","VPRSDA",261,0)
 ;
"RTN","VPRSDA",262,0)
VNUM(ADM) ; -- find Visit# for an admission
"RTN","VPRSDA",263,0)
 N VAINDT,X,Y
"RTN","VPRSDA",264,0)
 S X=+$G(^DGPM(+$G(ADM),0)),VAINDT=(9999999-$P(X,"."))_"."_$P(X,".",2)
"RTN","VPRSDA",265,0)
 S Y=$O(^AUPNVSIT("AAH",DFN,VAINDT,0))
"RTN","VPRSDA",266,0)
 Q Y
"RTN","VPRSDA",267,0)
 ;
"RTN","VPRSDA",268,0)
SPEC ; -- build DLIST(#)=45.7 iens using VAIP array
"RTN","VPRSDA",269,0)
 N I,X,SPEC
"RTN","VPRSDA",270,0)
 F I=13:1:17 S X=$G(VAIP(I,6)) S:X SPEC(+X)=""
"RTN","VPRSDA",271,0)
 S (I,X)=0 F  S X=$O(SPEC(X)) Q:X<1  S I=I+1,DLIST(I)=X
"RTN","VPRSDA",272,0)
 Q
"RTN","VPRSDA",273,0)
 ;
"RTN","VPRSDA",274,0)
VSTR() ; -- build Visit string of Type;date.time[;location]
"RTN","VPRSDA",275,0)
 N Y S Y=""
"RTN","VPRSDA",276,0)
 I $G(VAIP(13)) S Y="H;"_+VAIP(13)
"RTN","VPRSDA",277,0)
 E  S X=$G(@VPRVST@(0)),Y=$P(X,U,7)_";"_+X_";"_$P(X,U,22)
"RTN","VPRSDA",278,0)
 Q Y
"RTN","VPRSDA",279,0)
 ;
"RTN","VPRSDA",280,0)
VPRV(VISIT) ; -- build DLIST(n)=#200 ien for V Providers
"RTN","VPRSDA",281,0)
 N I,X,R S I=0
"RTN","VPRSDA",282,0)
 F  S I=$O(^TMP("PXKENC",$J,VISIT,"PRV",I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","VPRSDA",283,0)
 . S R=$P(X,U,4)
"RTN","VPRSDA",284,0)
 . S DLIST(I)=+X_U_$S(R="P":"PRIMARY",R="S":"SECONDARY",1:"")
"RTN","VPRSDA",285,0)
 Q
"RTN","VPRSDA",286,0)
 ;
"RTN","VPRSDA",287,0)
APPT1(VPRID) ; -- get ^TMP node for single appt, returns VPRAPPT
"RTN","VPRSDA",288,0)
 N DFN,VPRDT
"RTN","VPRSDA",289,0)
 S DFN=$P(VPRID,",",2),VPRDT=$P(VPRID,",")
"RTN","VPRSDA",290,0)
 I '$D(^TMP($J,"SDAMA301",DFN)) D
"RTN","VPRSDA",291,0)
 . N VPRX,VPRNUM
"RTN","VPRSDA",292,0)
 . S VPRX(1)=VPRDT_";"_VPRDT,VPRX(4)=DFN
"RTN","VPRSDA",293,0)
 . S VPRX("FLDS")="1;2;3;10;11",VPRX("SORT")="P"
"RTN","VPRSDA",294,0)
 . S VPRNUM=$$SDAPI^SDAMA301(.VPRX)
"RTN","VPRSDA",295,0)
 S VPRAPPT=$G(^TMP($J,"SDAMA301",DFN,VPRDT))
"RTN","VPRSDA",296,0)
 S:VPRAPPT="" VPRAPPT=VPRDT_U_$P($G(^DPT(DFN,"S",VPRDT,0)),U,1,2) ;DDEOUT=1
"RTN","VPRSDA",297,0)
 Q
"RTN","VPRSDA",298,0)
 ;
"RTN","VPRSDA",299,0)
VTO(VISIT) ; -- determine ToTime for a visit based on type
"RTN","VPRSDA",300,0)
 N TYPE,INPT,Y S Y=""
"RTN","VPRSDA",301,0)
 S TYPE=$P($G(@VPRVST@(0)),U,7),INPT=$P($G(@VPRVST@(150)),U,2)
"RTN","VPRSDA",302,0)
 ; should not have any inpatient episodes here, handled via DGPM
"RTN","VPRSDA",303,0)
 I "H^R"[TYPE,INPT Q Y
"RTN","VPRSDA",304,0)
 ; look for an appointment check-out time
"RTN","VPRSDA",305,0)
 I "A^I^O"[TYPE S Y=$$CKOUT(VISIT) I Y Q Y
"RTN","VPRSDA",306,0)
 ; check Surgery for Time Out of OR
"RTN","VPRSDA",307,0)
 I TYPE="S" D  I Y Q Y
"RTN","VPRSDA",308,0)
 . N I S I=$O(^SRF("AV",VISIT,0))
"RTN","VPRSDA",309,0)
 . S:I Y=$$GET1^DIQ(130,I_",",.232,"I")
"RTN","VPRSDA",310,0)
 ; otherwise use the Visit Time
"RTN","VPRSDA",311,0)
 I "H^R^A^I^O^S"'[TYPE!(+$G(@VPRVST@(0))<DT) S Y=+$G(@VPRVST@(0))
"RTN","VPRSDA",312,0)
 Q Y
"RTN","VPRSDA",313,0)
 ;
"RTN","VPRSDA",314,0)
CKOUT(VISIT) ; -- get Check-out date from Outpt Enc file
"RTN","VPRSDA",315,0)
 N X,Y,IEN
"RTN","VPRSDA",316,0)
 S IEN=$O(^SCE("AVSIT",VISIT,0)),(X,Y)=""
"RTN","VPRSDA",317,0)
 S:IEN X=$$GETOE^SDOE(IEN),Y=$P(X,U,7)
"RTN","VPRSDA",318,0)
 Q Y
"RTN","VPRSDA",319,0)
 ;
"RTN","VPRSDA",320,0)
CP1(IEN) ; -- get MD nodes for procedure
"RTN","VPRSDA",321,0)
 ; VPRCP = ^TMP("MDHSP",$J,I)
"RTN","VPRSDA",322,0)
 ; VPRCN = ^GMR(123,consult,0)
"RTN","VPRSDA",323,0)
 ; VPRTIU(field#,"I") = TIU data field
"RTN","VPRSDA",324,0)
 I '$D(^TMP("MDHSP",$J)) D
"RTN","VPRSDA",325,0)
 . S:'DFN DFN=+$$GET1^DIQ(702,IEN,.01,"I")
"RTN","VPRSDA",326,0)
 . N DLIST D CPROCS^VPRSDAQ
"RTN","VPRSDA",327,0)
 S I=+$G(^TMP("MDHSP",$J,"IEN",IEN)),VPRCP=$G(^TMP("MDHSP",$J,I))
"RTN","VPRSDA",328,0)
 I VPRCP="" Q  ;S DDEOUT=1 Q
"RTN","VPRSDA",329,0)
 ; undo date formatting
"RTN","VPRSDA",330,0)
 N X,Y,%DT,VPRD
"RTN","VPRSDA",331,0)
 S X=$P(VPRCP,U,6) I $L(X) S %DT="STX" D ^%DT S:Y>0 $P(VPRCP,U,6)=Y
"RTN","VPRSDA",332,0)
 ; get supporting data from Consult, TIU note
"RTN","VPRSDA",333,0)
 S X=+$P(VPRCP,U,13) I X D  K VPRD
"RTN","VPRSDA",334,0)
 . D DOCLIST^GMRCGUIB(.VPRD,X) S VPRCN=$G(VPRD(0)) M VPRCN=VPRD(50)
"RTN","VPRSDA",335,0)
 S X=+$P(VPRCP,U,14) I X D  K VPRD
"RTN","VPRSDA",336,0)
 . D EXTRACT^TIULQ(X,"VPRD",,".03;.05;1202;1211;1212",,,"I")
"RTN","VPRSDA",337,0)
 . M VPRTIU=VPRD(X)
"RTN","VPRSDA",338,0)
 Q
"RTN","VPRSDA",339,0)
 ;
"RTN","VPRSDA",340,0)
SRPTS(IEN) ; -- put Op Reports into DLIST(#) = TIU ien
"RTN","VPRSDA",341,0)
 S I=0 F  S I=$O(VPRSR(IEN,I)) Q:I<1  S X=$G(VPRSR(IEN,I)) I X D
"RTN","VPRSDA",342,0)
 . ;X = ien ^ $$RESOLVE^TIUSRVLO data string
"RTN","VPRSDA",343,0)
 . I $P(X,U,7)'="completed",$P(X,U,7)'="amended" Q
"RTN","VPRSDA",344,0)
 . I $P(X,U,2)["Addendum to " Q
"RTN","VPRSDA",345,0)
 . S DLIST(I)=+X_";TIU"
"RTN","VPRSDA",346,0)
 . ; X["OPERATION REPORT"!(X["PROCEDURE REPORT") S SURG("opReport")=X
"RTN","VPRSDA",347,0)
 Q
"RTN","VPRSDA",348,0)
 ;
"RTN","VPRSDA",349,0)
SRF(IEN) ; -- procedure
"RTN","VPRSDA",350,0)
 N SROP,X
"RTN","VPRSDA",351,0)
 S X=$P(VPRSR(IEN),U,2),SROP=$G(^SRF(IEN,"OP"))
"RTN","VPRSDA",352,0)
 ; Use CPT ien if defined
"RTN","VPRSDA",353,0)
 I $P(SROP,U,2) S VALUE=$$CPT^VPRDSR($P(SROP,U,2))_"^CPT-4",DATA=X Q
"RTN","VPRSDA",354,0)
 ; else use procedure name
"RTN","VPRSDA",355,0)
 S VALUE=X_U_X
"RTN","VPRSDA",356,0)
 Q
"RTN","VPRSDA",357,0)
 ;
"RTN","VPRSDA",358,0)
VIT1(IEN) ; -- get info for one Vital measurement, returns VPRGMV
"RTN","VPRSDA",359,0)
 S IEN=$G(IEN) I IEN="" S DDEOUT=1 Q
"RTN","VPRSDA",360,0)
 D GETREC^GMVUTL(.VPRV,IEN,1)
"RTN","VPRSDA",361,0)
 S VPRGMV=$G(^TMP("VPRGMV",$J,IEN)) I VPRGMV="" S VPRGMV=$G(VPRV(0))
"RTN","VPRSDA",362,0)
 S VPRTYPE=$$FIELD^GMVGETVT(+$P(VPRGMV,U,3),2)
"RTN","VPRSDA",363,0)
 S VPRANGE=$$RANGE^VPRDGMV(VPRTYPE)
"RTN","VPRSDA",364,0)
 Q
"RTN","VPRSDA",365,0)
 ;
"RTN","VPRSDA",366,0)
VITQUAL ; -- build DLIST(#)=Qualifiers [code^name]
"RTN","VPRSDA",367,0)
 N I,X,QUALS
"RTN","VPRSDA",368,0)
 S QUALS=$G(VPRV(5))
"RTN","VPRSDA",369,0)
 F I=1:1 S X=$P(QUALS,U,I) Q:X=""  S DLIST(I)=X
"RTN","VPRSDA",370,0)
 Q
"RTN","VPRSDA",371,0)
 ;
"RTN","VPRSDA",372,0)
VITCODE(IEN,SFN) ; -- return [first] code for vital type
"RTN","VPRSDA",373,0)
 ; SubFileNumber = 120.518 for Vital Type
"RTN","VPRSDA",374,0)
 ;                 120.522 for Vital Qualifier
"RTN","VPRSDA",375,0)
 N VPRC,IENS,Y
"RTN","VPRSDA",376,0)
 D GETS^DIQ(SFN,"1,"_IEN_",","**",,"VPRC")
"RTN","VPRSDA",377,0)
 S IENS=$O(VPRC(SFN_1,""))
"RTN","VPRSDA",378,0)
 S Y=$S($L(IENS):$G(VPRC(SFN_1,IENS,.01,"I")),1:"")
"RTN","VPRSDA",379,0)
 Q Y
"RTN","VPRSDA",380,0)
 ;
"RTN","VPRSDA",381,0)
FIM1(IEN) ; -- get info for one set of measurements
"RTN","VPRSDA",382,0)
 I '$D(VPRSITE) D PRM^RMIMRP(.VPRSITE) I '$O(VPRSITE(1)) S DDEOUT=1 Q
"RTN","VPRSDA",383,0)
 D GC^RMIMRP(.VPRM,IEN)
"RTN","VPRSDA",384,0)
 ; S:'$G(DFN) ??
"RTN","VPRSDA",385,0)
 N NOTE S NOTE=+$P($G(VPRM(1)),U,12) K VPRTIU
"RTN","VPRSDA",386,0)
 D EXTRACT^TIULQ(NOTE,"VPRTIU",,"1201;1202;1302",,,"I")
"RTN","VPRSDA",387,0)
 M VPRM("TIU")=VPRTIU(NOTE)
"RTN","VPRSDA",388,0)
 Q
"RTN","VPRSDA",389,0)
 ;
"RTN","VPRSDA",390,0)
FIMS ; -- get DLIST(#)=name^value of each score
"RTN","VPRSDA",391,0)
 ; Returns VPRFIMS = Assessment type(s) for ProblemDetail
"RTN","VPRSDA",392,0)
 N I,J,N,X,NAMES,SCORES,SUM,TYPE
"RTN","VPRSDA",393,0)
 S N=0,VPRFIMS=""
"RTN","VPRSDA",394,0)
 S NAMES="Eating^Grooming^Bathing^Dressing - Upper Body^Dressing - Lower Body^Toileting^Bladder Management^Bowel Management^Bed, Chair, Wheelchair^Toilet^Tub, Shower^Walk/Wheelchair^Stairs"
"RTN","VPRSDA",395,0)
 S NAMES=NAMES_"^Comprehension^Expression^Social Interaction^Problem Solving^Memory"
"RTN","VPRSDA",396,0)
 S NAMES=NAMES_"^walkMode^comprehendMode^expressMode^Z"
"RTN","VPRSDA",397,0)
 F I=5:1:9 I VPRM(I)'?1."^" D  ;has data
"RTN","VPRSDA",398,0)
 . S SCORES=VPRM(I),SUM=$$TOTAL(SCORES) Q:'SUM
"RTN","VPRSDA",399,0)
 . S TYPE=$S(I=5:"Admission",I=6:"Discharge",I=7:"Interim",I=8:"Follow up",1:"Goals")
"RTN","VPRSDA",400,0)
 . S VPRFIMS=VPRFIMS_$S(VPRFIMS'="":", ",1:"")_TYPE
"RTN","VPRSDA",401,0)
 . ; add score set to list
"RTN","VPRSDA",402,0)
 . S N=N+1,DLIST(N)="Assessment Type^"_TYPE
"RTN","VPRSDA",403,0)
 . F J=1:1:21 S X=$P(SCORES,U,J),N=N+1,DLIST(N)=$P(NAMES,U,J)_U_X
"RTN","VPRSDA",404,0)
 . S N=N+1,DLIST(N)="FIM Total^"_SUM
"RTN","VPRSDA",405,0)
 S:$L(VPRFIMS) VPRFIMS=VPRFIMS_" Assessment"_$S(VPRFIMS[",":"s",1:"")
"RTN","VPRSDA",406,0)
 Q
"RTN","VPRSDA",407,0)
 ;
"RTN","VPRSDA",408,0)
TOTAL(NODE) ; -- Return total of scores, or "" if incomplete
"RTN","VPRSDA",409,0)
 N SUM,I,X
"RTN","VPRSDA",410,0)
 S SUM=0 F I=1:1:18 S X=$P(NODE,U,I) S:X SUM=SUM+X I X<1 S SUM="" Q
"RTN","VPRSDA",411,0)
 Q SUM
"RTN","VPRSDA",412,0)
 ;
"RTN","VPRSDA",413,0)
PRF1(ID) ; -- set up one patient record flag assignment
"RTN","VPRSDA",414,0)
 ; Returns VPRF1("NAME")=VALUE
"RTN","VPRSDA",415,0)
 S:'$G(DFN) DFN=+$P(ID,"~",2)
"RTN","VPRSDA",416,0)
 I '$G(DFN)!'$G(ID) S DDEOUT=1 Q
"RTN","VPRSDA",417,0)
 D:'$D(VPRF)  K VPRF1
"RTN","VPRSDA",418,0)
 . N DLIST D PRF^VPRSDAQ
"RTN","VPRSDA",419,0)
 N I S I=+$G(VPRF("IDX",+ID))
"RTN","VPRSDA",420,0)
 I I M VPRF1=VPRF(I)
"RTN","VPRSDA",421,0)
 Q
"RTN","VPRSDA",422,0)
 ;
"RTN","VPRSDA",423,0)
PCMM ; -- get DLIST(#)=ien^role of PCP, PC Team members
"RTN","VPRSDA",424,0)
 ; Expects DFN, VPRTEAM = ien^name of PCTeam
"RTN","VPRSDA",425,0)
 N PCP,X,N,VPRT,IDX,ROLE
"RTN","VPRSDA",426,0)
 S PCP=$$OUTPTPR^SDUTL3(DFN),N=0 S:PCP>0 N=1,DLIST(1)=+PCP_"^PRIMARY CARE PROVIDER"
"RTN","VPRSDA",427,0)
 S X=$$PRTM^SCAPMC(+$G(VPRTEAM),,,,.VPRT) I X D
"RTN","VPRSDA",428,0)
 . S IDX=$NA(@VPRT@("SCPR")) Q:IDX=""
"RTN","VPRSDA",429,0)
 . F  S IDX=$Q(@IDX) Q:IDX=""  Q:$QS(IDX,3)'="SCPR"  I $QS(IDX,4)'=+PCP D
"RTN","VPRSDA",430,0)
 .. S ROLE=$$GET1^DIQ(404.57,+$QS(IDX,5),.01)
"RTN","VPRSDA",431,0)
 .. S N=N+1,DLIST(N)=$QS(IDX,4)_U_ROLE ;provider ien ^ position name
"RTN","VPRSDA",432,0)
 Q
"RTN","VPRSDAL")
0^7^B7855097
"RTN","VPRSDAL",1,0)
VPRSDAL ;SLC/MKB -- SDA Allergy utilities ;10/25/18  15:29
"RTN","VPRSDAL",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRSDAL",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","VPRSDAL",4,0)
 ;
"RTN","VPRSDAL",5,0)
 ; External References          DBIA#
"RTN","VPRSDAL",6,0)
 ; -------------------          -----
"RTN","VPRSDAL",7,0)
 ; ^GMR(120.8                    6973
"RTN","VPRSDAL",8,0)
 ; ^GMRD(120.82                  6974
"RTN","VPRSDAL",9,0)
 ; ^GMRD(120.83                  6975
"RTN","VPRSDAL",10,0)
 ; DILFD                         2055
"RTN","VPRSDAL",11,0)
 ; DIQ                           2056
"RTN","VPRSDAL",12,0)
 ; GMRADPT                      10099
"RTN","VPRSDAL",13,0)
 ; GMRAOR2                       2422
"RTN","VPRSDAL",14,0)
 ; XUPARAM                       2541
"RTN","VPRSDAL",15,0)
 ;
"RTN","VPRSDAL",16,0)
ALG1(IEN) ; -- get info for single allergy, returns VPRALG
"RTN","VPRSDAL",17,0)
 N GMRA K VPRALG
"RTN","VPRSDAL",18,0)
 I '$D(GMRAL) D
"RTN","VPRSDAL",19,0)
 . N DFN S DFN=$$GET1^DIQ(120.8,IEN_",",.01,"I")
"RTN","VPRSDAL",20,0)
 . I $L($T(EN2^GMRADPT)) D EN2^GMRADPT Q
"RTN","VPRSDAL",21,0)
 . D EN1^GMRADPT
"RTN","VPRSDAL",22,0)
 M VPRALG=GMRAL(IEN)
"RTN","VPRSDAL",23,0)
 I $G(VPRALG)="" S VPRALG="" ;S DDEOUT=1 Q
"RTN","VPRSDAL",24,0)
 I $L($T(EN2^GMRAOR2)) D EN2^GMRAOR2(IEN,"GMRAY") Q
"RTN","VPRSDAL",25,0)
 D EN1^GMRAOR2(IEN,"GMRAY")
"RTN","VPRSDAL",26,0)
 Q
"RTN","VPRSDAL",27,0)
 ;
"RTN","VPRSDAL",28,0)
ALLERGEN(VPTR) ; -- return code^name^system for Allergen
"RTN","VPRSDAL",29,0)
 N Y,FN,TYPE,CSYS
"RTN","VPRSDAL",30,0)
 S FN=$S(VPTR["PSDRUG":50,1:+$P(VPTR,"(",2)),TYPE=$P(VPRALG,U,7)
"RTN","VPRSDAL",31,0)
 S CSYS=$S(TYPE="D":"RXN^UNI^SCT",TYPE["D":"RXN^SCT^UNI",1:"SCT^UNI")
"RTN","VPRSDAL",32,0)
 S Y=$$CODE^VPRSDA(+VPTR,FN,CSYS) I Y="" D
"RTN","VPRSDAL",33,0)
 . S Y=$$VUID^VPRD(+VPTR,FN) I Y S Y=Y_U_$$EXTERNAL^DILFD(120.8,1,,VPTR)_"^VHAT" Q
"RTN","VPRSDAL",34,0)
 . S Y=+$G(VPTR)_U_$$EXTERNAL^DILFD(120.8,1,,VPTR)_"^VA"_FN
"RTN","VPRSDAL",35,0)
 Q Y
"RTN","VPRSDAL",36,0)
 ;
"RTN","VPRSDAL",37,0)
ALGCMT1(IEN,TYPE) ; -- return TYPE comment
"RTN","VPRSDAL",38,0)
 N I,TXT,Y
"RTN","VPRSDAL",39,0)
 S I=$O(^GMR(120.8,IEN,26,"AVER","E",0)),Y=""
"RTN","VPRSDAL",40,0)
 I I M TXT=^GMR(120.8,IEN,26,I,2) S Y=$$STRING^VPRD(.TXT)
"RTN","VPRSDAL",41,0)
 Q Y
"RTN","VPRSDAL",42,0)
 ;
"RTN","VPRSDAL",43,0)
ALGCMT(IEN) ; -- return list of comments in
"RTN","VPRSDAL",44,0)
 ; DLIST(#) = id ^ date ^ user ^ type ^ facility ^ text
"RTN","VPRSDAL",45,0)
 N I,X,Y,TXT
"RTN","VPRSDAL",46,0)
 S I=0 F  S I=$O(^GMR(120.8,IEN,26,I)) Q:I<1  S X=$G(^(I,0)) D
"RTN","VPRSDAL",47,0)
 . Q:$P(X,U,3)="E"
"RTN","VPRSDAL",48,0)
 . S $P(X,U,3)=$$EXTERNAL^DILFD(120.826,1.5,,$P(X,U,3))
"RTN","VPRSDAL",49,0)
 . M TXT=^GMR(120.8,IEN,26,I,2) S Y=$$STRING^VPRD(.TXT)
"RTN","VPRSDAL",50,0)
 . S DLIST(I)=I_","_IEN_U_X_U_+$G(VASITE)_U_Y
"RTN","VPRSDAL",51,0)
 Q
"RTN","VPRSDAL",52,0)
 ;
"RTN","VPRSDAL",53,0)
ALGSEV(IEN) ; -- return overall Allergy Severity
"RTN","VPRSDAL",54,0)
 N I,SEV,X,Y
"RTN","VPRSDAL",55,0)
 S (SEV,Y)="",I=0
"RTN","VPRSDAL",56,0)
 ; find highest severity among reactions
"RTN","VPRSDAL",57,0)
 F  S I=$O(GMRAL(IEN,"O",I)) Q:I<1  S X=$P(GMRAL(IEN,"O",I),U) I $L(X),X]SEV S SEV=X
"RTN","VPRSDAL",58,0)
 S:$L(SEV)>1 X=$P(SEV,";",2),Y=$S(X=1:255604002,X=2:6736007,X=3:24484000,1:X)_U_$P(SEV,";")_"^SNOMED CT"
"RTN","VPRSDAL",59,0)
 Q Y
"RTN","VPRSDAL",60,0)
 ;
"RTN","VPRSDAL",61,0)
ALGDT(IEN) ; -- return first D/T of Event
"RTN","VPRSDAL",62,0)
 N I,RDT,X,Y
"RTN","VPRSDAL",63,0)
 S I=0,RDT=9999999,Y=""
"RTN","VPRSDAL",64,0)
 ; find first date.time among reactions
"RTN","VPRSDAL",65,0)
 F  S I=$O(GMRAL(IEN,"O",I)) Q:I<1  S X=$P(GMRAL(IEN,"O",I),";",3) S:X<RDT RDT=X
"RTN","VPRSDAL",66,0)
 S:RDT<9999999 Y=RDT
"RTN","VPRSDAL",67,0)
 Q Y
"RTN","VPRSDAL",68,0)
 ;
"RTN","VPRSDAL",69,0)
ALGSIGN(IEN) ; -- convert ien^name to national code for Sign/Symptom
"RTN","VPRSDAL",70,0)
 ; Return +IEN, DATA=code^name^system for SNOMED or VUID
"RTN","VPRSDAL",71,0)
 N Y S DATA=$G(IEN),IEN=+$G(IEN),Y=""
"RTN","VPRSDAL",72,0)
 S Y=$$CODE^VPRSDA(IEN,120.83,"SCT")
"RTN","VPRSDAL",73,0)
 I Y="" S Y=$$VUID^VPRD(IEN,120.83) S:$L(Y) Y=Y_U_$P(DATA,U,2)_"^VHAT"
"RTN","VPRSDAL",74,0)
 S:$L(Y) DATA=Y ;return code string
"RTN","VPRSDAL",75,0)
 Q
"RTN","VPRSDAL",76,0)
 ;
"RTN","VPRSDAL",77,0)
ASSESS ; -- get Assessment #120.86 for patient
"RTN","VPRSDAL",78,0)
 I '$G(DFN),$G(ID) S DFN=ID
"RTN","VPRSDAL",79,0)
 Q:'$G(DFN)
"RTN","VPRSDAL",80,0)
 K GMRAL D EN1^GMRADPT
"RTN","VPRSDAL",81,0)
 I GMRAL<1 S DLIST(1)=DFN
"RTN","VPRSDAL",82,0)
 Q
"RTN","VPRSDAP")
0^6^B21076843
"RTN","VPRSDAP",1,0)
VPRSDAP ;SLC/MKB -- SDA Pharmacy utilities ;10/25/18  15:29
"RTN","VPRSDAP",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRSDAP",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","VPRSDAP",4,0)
 ;
"RTN","VPRSDAP",5,0)
 ; External References          DBIA#
"RTN","VPRSDAP",6,0)
 ; -------------------          -----
"RTN","VPRSDAP",7,0)
 ; ^OR(100                       5771
"RTN","VPRSDAP",8,0)
 ; ^ORD(100.98                    873
"RTN","VPRSDAP",9,0)
 ; ^PSB(53.79                    5909
"RTN","VPRSDAP",10,0)
 ; ^SC                          10040
"RTN","VPRSDAP",11,0)
 ; DIQ                           2056
"RTN","VPRSDAP",12,0)
 ; ORX8                          2467
"RTN","VPRSDAP",13,0)
 ; PSN50P41                      4531
"RTN","VPRSDAP",14,0)
 ; PSOORRL                       2400
"RTN","VPRSDAP",15,0)
 ; PSS50P7                       4662
"RTN","VPRSDAP",16,0)
 ; PSS52P6                       4549
"RTN","VPRSDAP",17,0)
 ;
"RTN","VPRSDAP",18,0)
PS1(IEN) ; -- set up single medication
"RTN","VPRSDAP",19,0)
 ; Returns ORIFN, PSTYPE & VPRPS=^TMP
"RTN","VPRSDAP",20,0)
 N ORPK,X,CLS S ORIFN=+$G(IEN)
"RTN","VPRSDAP",21,0)
 S ORPK=$G(^OR(100,ORIFN,4)) S:'DFN DFN=+$P($G(^(0)),U,2)
"RTN","VPRSDAP",22,0)
 S X=$S(ORPK:$E(ORPK,$L(ORPK)),1:"Z") S:X=+X X="R" ;last char = PS file
"RTN","VPRSDAP",23,0)
 S CLS=$S("RSN"[X:"O","UV"[X:"I",1:$$GET1^DIQ(100,IEN_",",10,"I"))
"RTN","VPRSDAP",24,0)
 S PSTYPE=$S(X="N":"N","RS"[X:"O",$$IV:"V",1:"I") K VPRATE
"RTN","VPRSDAP",25,0)
 D:ORPK OEL^PSOORRL(DFN,ORPK_";"_CLS)
"RTN","VPRSDAP",26,0)
 S VPRPS=$NA(^TMP("PS",$J))
"RTN","VPRSDAP",27,0)
 Q
"RTN","VPRSDAP",28,0)
 ;
"RTN","VPRSDAP",29,0)
CODE(MED,FILE) ; -- convert MED=ien^name to national code
"RTN","VPRSDAP",30,0)
 ; Reset MED = code^name^system for RxNorm or VUID
"RTN","VPRSDAP",31,0)
 N Y S MED=$G(MED),FILE=+$G(FILE)
"RTN","VPRSDAP",32,0)
 S Y=$$CODE^VPRSDA(+MED,FILE,"RXN")
"RTN","VPRSDAP",33,0)
 I Y="" S Y=$$VUID^VPRD(+MED,FILE) S:$L(Y) Y=Y_U_$P(MED,U,2)_"^VHAT"
"RTN","VPRSDAP",34,0)
 S:$L(Y) MED=Y ;reset to nat'l code string
"RTN","VPRSDAP",35,0)
 Q
"RTN","VPRSDAP",36,0)
 ;
"RTN","VPRSDAP",37,0)
IMO(X,PS) ; -- return 1, 0, or null if IMO location X
"RTN","VPRSDAP",38,0)
 N Y S Y=""
"RTN","VPRSDAP",39,0)
 I $G(PS)'="I",$G(PS)'="V" S DDEOUT=1 Q ""
"RTN","VPRSDAP",40,0)
 S Y=$S($P($G(^SC(+$G(X),0)),U,25):"true",1:"false")
"RTN","VPRSDAP",41,0)
 Q Y
"RTN","VPRSDAP",42,0)
 ;
"RTN","VPRSDAP",43,0)
GETFILLS ; -- build DLIST(#)=#^data of fills
"RTN","VPRSDAP",44,0)
 N I,N S N=0
"RTN","VPRSDAP",45,0)
 N RX0,RXN S RX0=$G(@VPRPS@(0)),RXN=$G(@VPRPS@("RXN",0))
"RTN","VPRSDAP",46,0)
 I $P(RXN,U,6) D  ;original fill
"RTN","VPRSDAP",47,0)
 . N X S X=$P(RXN,U,6)_U_$P(RX0,U,7,8)_U_$P(RXN,U,7)_U_$P(RXN,U,3)
"RTN","VPRSDAP",48,0)
 . S N=N+1,DLIST(N)="0^"_X
"RTN","VPRSDAP",49,0)
 S I=0 F  S I=$O(@VPRPS@("REF",I)) Q:I<1  S N=N+1,DLIST(N)=I_U_$G(@VPRPS@("REF",I,0))
"RTN","VPRSDAP",50,0)
 S I=0 F  S I=$O(@VPRPS@("PAR",I)) Q:I<1  S N=N+1,DLIST(N)="P"_I_U_$G(@VPRPS@("PAR",I,0))
"RTN","VPRSDAP",51,0)
 Q
"RTN","VPRSDAP",52,0)
 ;
"RTN","VPRSDAP",53,0)
SUPPLY(IEN) ; -- return 1 or 0, if supply item
"RTN","VPRSDAP",54,0)
 N Y,PSOI S PSOI=+$P($G(@VPRPS@("DD",1,0)),U,4)
"RTN","VPRSDAP",55,0)
 S Y=$S($G(^TMP("VPRX",$J,"PSOI",PSOI,.09)):"true",1:"false")
"RTN","VPRSDAP",56,0)
 Q Y
"RTN","VPRSDAP",57,0)
 ;
"RTN","VPRSDAP",58,0)
DOSEFORM(IEN) ; -- return dose form
"RTN","VPRSDAP",59,0)
 N OI,PSOI,Y S Y=""
"RTN","VPRSDAP",60,0)
 S OI=$$OI^ORX8(IEN),PSOI=+$P(OI,U,3)
"RTN","VPRSDAP",61,0)
 I PSOI,'$D(^TMP("VPRX",$J,"PSOI",PSOI)) D
"RTN","VPRSDAP",62,0)
 . D ZERO^PSS50P7(PSOI,,,"PSOI")
"RTN","VPRSDAP",63,0)
 . M ^TMP("VPRX",$J,"PSOI",PSOI)=^TMP($J,"PSOI",PSOI)
"RTN","VPRSDAP",64,0)
 . K ^TMP($J,"PSOI",PSOI)
"RTN","VPRSDAP",65,0)
 S Y=$G(^TMP("VPRX",$J,"PSOI",PSOI,.02)) S:Y Y=Y_"^VA50.606"
"RTN","VPRSDAP",66,0)
 Q Y
"RTN","VPRSDAP",67,0)
 ;
"RTN","VPRSDAP",68,0)
INGRD(NAME) ; -- reset NAME to ingredient IEN
"RTN","VPRSDAP",69,0)
 ; Also return VPRCODE=code^name^system
"RTN","VPRSDAP",70,0)
 N IEN S IEN=""
"RTN","VPRSDAP",71,0)
 S NAME=$G(NAME),VPRCODE=""
"RTN","VPRSDAP",72,0)
 I $L(NAME) D NAME^PSN50P41(NAME,"VPRDI") S IEN=+$O(^TMP($J,"VPRDI","P",NAME,0))
"RTN","VPRSDAP",73,0)
 I IEN<1 S DDEOUT=1 Q
"RTN","VPRSDAP",74,0)
 S VPRCODE=IEN_U_NAME,NAME=IEN ;reset, if passed by reference
"RTN","VPRSDAP",75,0)
 D CODE(.VPRCODE,50.416)
"RTN","VPRSDAP",76,0)
 Q
"RTN","VPRSDAP",77,0)
 ;
"RTN","VPRSDAP",78,0)
NDF(DRUG) ; -- return VA Drug Product info for DRUG (#50 ien)
"RTN","VPRSDAP",79,0)
 ; also returns DATA = code^name^system for 50.68
"RTN","VPRSDAP",80,0)
 I '$D(^TMP("VPRX",$J,"NDF",DRUG)) D
"RTN","VPRSDAP",81,0)
 . D NDF^PSS50(DRUG,,,,,"NDF")
"RTN","VPRSDAP",82,0)
 . M ^TMP("VPRX",$J,"NDF",DRUG)=^TMP($J,"NDF",DRUG)
"RTN","VPRSDAP",83,0)
 . K ^TMP($J,"NDF",DRUG)
"RTN","VPRSDAP",84,0)
 S VPRVAP=$NA(^TMP("VPRX",$J,"NDF",DRUG))
"RTN","VPRSDAP",85,0)
 S DATA=$G(^TMP("VPRX",$J,"NDF",DRUG,22)),DRUG=+DATA ;reset to #50.68 ien
"RTN","VPRSDAP",86,0)
 D CODE(.DATA,50.68)
"RTN","VPRSDAP",87,0)
 Q
"RTN","VPRSDAP",88,0)
 ;
"RTN","VPRSDAP",89,0)
DOSES(IEN) ; -- build DLIST(n)=instance of Dose Instructions
"RTN","VPRSDAP",90,0)
 N DA,I
"RTN","VPRSDAP",91,0)
 S DA=0 F  S DA=$O(^OR(100,IEN,4.5,"ID","INSTR",DA)) Q:DA<1  D
"RTN","VPRSDAP",92,0)
 . S I=+$P($G(^OR(100,IEN,4.5,DA,0)),U,3)
"RTN","VPRSDAP",93,0)
 . S:I DLIST(I)=I
"RTN","VPRSDAP",94,0)
 Q
"RTN","VPRSDAP",95,0)
 ;
"RTN","VPRSDAP",96,0)
BCMA(IEN) ; -- get list of administrations
"RTN","VPRSDAP",97,0)
 I $G(DFN)<1 S DFN=+$P($G(^OR(100,IEN,0)),U,2) Q:'DFN
"RTN","VPRSDAP",98,0)
 N ORPK,ADT,DA,CNT,STS S (ADT,CNT)=0
"RTN","VPRSDAP",99,0)
 S ORPK=$G(^OR(100,IEN,4)) Q:ORPK=""
"RTN","VPRSDAP",100,0)
 F  S ADT=$O(^PSB(53.79,"AORDX",DFN,ORPK,ADT)) Q:ADT<1  D
"RTN","VPRSDAP",101,0)
 . S DA=0 F  S DA=+$O(^PSB(53.79,"AORDX",DFN,ORPK,ADT,DA)) Q:DA<1  D
"RTN","VPRSDAP",102,0)
 .. I $P($G(^PSB(53.79,DA,0)),U,9)="RM" Q  ;REMOVED
"RTN","VPRSDAP",103,0)
 .. S CNT=CNT+1,DLIST(CNT)=DA
"RTN","VPRSDAP",104,0)
 Q
"RTN","VPRSDAP",105,0)
 ;
"RTN","VPRSDAP",106,0)
IV() ; -- Return 1 or 0, if order is for IV/infusion
"RTN","VPRSDAP",107,0)
 I ORPK["V" Q 1
"RTN","VPRSDAP",108,0)
 N X0 S X0=$G(^OR(100,ORIFN,0))
"RTN","VPRSDAP",109,0)
 I +$P(X0,U,5)=130 Q 1
"RTN","VPRSDAP",110,0)
 I $P($G(^ORD(100.98,+$P(X0,U,11),0)),U,3)?1"IV".E Q 1
"RTN","VPRSDAP",111,0)
 ;I $G(^TMP("PS",$J,"B",0)) Q 1
"RTN","VPRSDAP",112,0)
 Q 0
"RTN","VPRSDAP",113,0)
 ;
"RTN","VPRSDAP",114,0)
IVMEDS(IEN) ; -- build DLIST(#)=name^amount^type for components
"RTN","VPRSDAP",115,0)
 N I,TYPE,X,CNT S CNT=0
"RTN","VPRSDAP",116,0)
 F TYPE="B","A" D  ;bases, additives
"RTN","VPRSDAP",117,0)
 . S I=0 F  S I=$O(@VPRPS@(TYPE,I)) Q:I<1  D
"RTN","VPRSDAP",118,0)
 .. S X=$G(@VPRPS@(TYPE,I,0)),CNT=CNT+1,DLIST(CNT)=$P(X,U,1,2)_U_TYPE
"RTN","VPRSDAP",119,0)
 Q
"RTN","VPRSDAP",120,0)
 ;
"RTN","VPRSDAP",121,0)
IV1(X) ; -- get VA Drug Product info for IV component X (from DLIST)
"RTN","VPRSDAP",122,0)
 N NAME,TYPE,IEN,DRUG
"RTN","VPRSDAP",123,0)
 S VPRPSIV=$G(X),NAME=$P(VPRPSIV,U),TYPE=$P(VPRPSIV,U,3)
"RTN","VPRSDAP",124,0)
 D:TYPE="B" ZERO^PSS52P7("",NAME,"","VPRPSIV")
"RTN","VPRSDAP",125,0)
 D:TYPE="A" ZERO^PSS52P6("",NAME,"","VPRPSIV")
"RTN","VPRSDAP",126,0)
 S IEN=$O(^TMP($J,"VPRPSIV",0)),DRUG=+$G(^(IEN,1))
"RTN","VPRSDAP",127,0)
 I DRUG D NDF(.DRUG) S X=+$G(DRUG) ;#50.68 ien
"RTN","VPRSDAP",128,0)
 I 'DRUG S DATA=IEN_U_NAME_U_$S(TYPE="A":"VA52.6",TYPE="B":"VA52.7",1:"VA") ;return IV file
"RTN","VPRSDAP",129,0)
 K ^TMP($J,"VPRPSIV")
"RTN","VPRSDAP",130,0)
 Q
"RTN","VPRSDAP",131,0)
 ;
"RTN","VPRSDAP",132,0)
IVRATE(IEN) ; -- return IV Rate, or DDEOUT if invalid
"RTN","VPRSDAP",133,0)
 ; also VPRATE = numeric amount, if ## ml/hr
"RTN","VPRSDAP",134,0)
 I $G(PSTYPE)'="V" S DDEOUT=1 Q ""
"RTN","VPRSDAP",135,0)
 N X S IEN=+$G(IEN)
"RTN","VPRSDAP",136,0)
 S X=$$VALUE^ORX8(IEN,"RATE")
"RTN","VPRSDAP",137,0)
 I X?1.N1" ml/hr".E S VPRATE=+X Q +X
"RTN","VPRSDAP",138,0)
 S DDEOUT=1
"RTN","VPRSDAP",139,0)
 Q ""
"RTN","VPRSDAQ")
0^4^B144153181
"RTN","VPRSDAQ",1,0)
VPRSDAQ ;SLC/MKB -- SDA queries ;11/8/18  14:11
"RTN","VPRSDAQ",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRSDAQ",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","VPRSDAQ",4,0)
 ;
"RTN","VPRSDAQ",5,0)
 ; External References          DBIA#
"RTN","VPRSDAQ",6,0)
 ; -------------------          -----
"RTN","VPRSDAQ",7,0)
 ; ^AUPNVSIT                     2028
"RTN","VPRSDAQ",8,0)
 ; ^AUTTHF                       4295
"RTN","VPRSDAQ",9,0)
 ; ^DGS(41.1                     3796
"RTN","VPRSDAQ",10,0)
 ; ^DIC(9.4                     10048
"RTN","VPRSDAQ",11,0)
 ; ^LR                            525
"RTN","VPRSDAQ",12,0)
 ; ^OR(100                       5771
"RTN","VPRSDAQ",13,0)
 ; ^ORD(100.98                    873
"RTN","VPRSDAQ",14,0)
 ; ^PXRMINDX                     4290
"RTN","VPRSDAQ",15,0)
 ; ^SC                          10040
"RTN","VPRSDAQ",16,0)
 ; ^WV(790.05                    5772
"RTN","VPRSDAQ",17,0)
 ; %DT                          10003
"RTN","VPRSDAQ",18,0)
 ; DGPFAPI                       3860
"RTN","VPRSDAQ",19,0)
 ; DIC                           2051
"RTN","VPRSDAQ",20,0)
 ; DIQ                           2056
"RTN","VPRSDAQ",21,0)
 ; GMPLUTL2                      2741
"RTN","VPRSDAQ",22,0)
 ; GMRADPT                      10099
"RTN","VPRSDAQ",23,0)
 ; GMRCSLM1                      2740
"RTN","VPRSDAQ",24,0)
 ; GMRVUT0, ^UTILITY($J          1446
"RTN","VPRSDAQ",25,0)
 ; IBBAPI                        4419
"RTN","VPRSDAQ",26,0)
 ; LR7OR1                        2503
"RTN","VPRSDAQ",27,0)
 ; ORQ1                          3154
"RTN","VPRSDAQ",28,0)
 ; RMIMRP                        4745
"RTN","VPRSDAQ",29,0)
 ; SDAM301                       4433
"RTN","VPRSDAQ",30,0)
 ; SROESTV                       3533
"RTN","VPRSDAQ",31,0)
 ; TIUCP                         3568
"RTN","VPRSDAQ",32,0)
 ; TIUPP3                        2864
"RTN","VPRSDAQ",33,0)
 ; TIUSROI                       5676
"RTN","VPRSDAQ",34,0)
 ; TIUSRVLO                      2865
"RTN","VPRSDAQ",35,0)
 ; TIUVPR                        6077
"RTN","VPRSDAQ",36,0)
 ; VADPT2                         325
"RTN","VPRSDAQ",37,0)
 ; XLFDT                        10103
"RTN","VPRSDAQ",38,0)
 ;
"RTN","VPRSDAQ",39,0)
 ; VistA application queries, return DLIST(#) = record ID
"RTN","VPRSDAQ",40,0)
 ; Expects context variables from ^DDEGET [DFN, DSTRT, DSTOP, DMAX]
"RTN","VPRSDAQ",41,0)
 ;
"RTN","VPRSDAQ",42,0)
PROBLEMS ; -- Problem List
"RTN","VPRSDAQ",43,0)
 N ID,VPRSTS,VPRPROB,VPRN,X
"RTN","VPRSDAQ",44,0)
 S VPRSTS=$G(FILTER("status")) ;default = all problems
"RTN","VPRSDAQ",45,0)
 D LIST^GMPLUTL2(.VPRPROB,DFN,VPRSTS)
"RTN","VPRSDAQ",46,0)
 S VPRN=0 F  S VPRN=$O(VPRPROB(VPRN)) Q:(VPRN<1)!(VPRN>DMAX)  D
"RTN","VPRSDAQ",47,0)
 . S X=$P(VPRPROB(VPRN),U,6) I X,(X<DSTRT)!(X>DSTOP) Q  ;last updated
"RTN","VPRSDAQ",48,0)
 . S DLIST(VPRN)=+VPRPROB(VPRN)
"RTN","VPRSDAQ",49,0)
 Q
"RTN","VPRSDAQ",50,0)
 ;
"RTN","VPRSDAQ",51,0)
ALLERGYS ; -- Allergies/Adverse Reactions
"RTN","VPRSDAQ",52,0)
 N GMRA,VPRN,ID S VPRN=0
"RTN","VPRSDAQ",53,0)
 I $L($T(EN2^GMRADPT)) D EN2^GMRADPT I 1
"RTN","VPRSDAQ",54,0)
 E  D EN1^GMRADPT
"RTN","VPRSDAQ",55,0)
 I 'GMRAL Q  ;D NKA^VPRDJ02 Q
"RTN","VPRSDAQ",56,0)
 S ID=0 F  S ID=+$O(GMRAL(ID)) Q:ID<1  S VPRN=VPRN+1,DLIST(VPRN)=ID Q:VPRN'<DMAX
"RTN","VPRSDAQ",57,0)
 Q
"RTN","VPRSDAQ",58,0)
 ;
"RTN","VPRSDAQ",59,0)
VISITS ; -- Visits
"RTN","VPRSDAQ",60,0)
 N IDT,BEG,END,ID,VPRN,VAINDT,VADMVT,VAERR
"RTN","VPRSDAQ",61,0)
 S BEG=DSTRT,END=DSTOP D IDT^VPRDVSIT
"RTN","VPRSDAQ",62,0)
 S VPRN=0,IDT=BEG
"RTN","VPRSDAQ",63,0)
 F  S IDT=$O(^AUPNVSIT("AA",DFN,IDT)) Q:IDT<1!(IDT>END)  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",64,0)
 . S ID=0 F  S ID=$O(^AUPNVSIT("AA",DFN,IDT,ID)) Q:ID<1  D
"RTN","VPRSDAQ",65,0)
 .. I $P($G(^AUPNVSIT(ID,0)),U,7)="H" D  Q:$G(VADMVT)
"RTN","VPRSDAQ",66,0)
 ... S VAINDT=(9999999-$P(IDT,"."))_"."_$P(IDT,".",2)
"RTN","VPRSDAQ",67,0)
 ... D ADM^VADPT2
"RTN","VPRSDAQ",68,0)
 .. S VPRN=VPRN+1,DLIST(VPRN)=ID
"RTN","VPRSDAQ",69,0)
 Q
"RTN","VPRSDAQ",70,0)
 ;
"RTN","VPRSDAQ",71,0)
ADM ; -- Admissions (via Visits)
"RTN","VPRSDAQ",72,0)
 N IDT,BEG,END,ID,VPRN,VAINDT,VADMVT,VAERR S VPRN=0
"RTN","VPRSDAQ",73,0)
 S BEG=DSTRT,END=DSTOP D IDT^VPRDVSIT
"RTN","VPRSDAQ",74,0)
 S IDT=BEG F  S IDT=$O(^AUPNVSIT("AAH",DFN,IDT)) Q:IDT<1!(IDT>END)  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",75,0)
 . S ID=0 F  S ID=$O(^AUPNVSIT("AAH",DFN,IDT,ID)) Q:ID<1  D
"RTN","VPRSDAQ",76,0)
 .. S VAINDT=(9999999-$P(IDT,"."))_"."_$P(IDT,".",2)
"RTN","VPRSDAQ",77,0)
 .. D ADM^VADPT2 Q:'$G(VADMVT)
"RTN","VPRSDAQ",78,0)
 .. S VPRN=VPRN+1,DLIST(VPRN)=VADMVT_"~"_ID
"RTN","VPRSDAQ",79,0)
 Q
"RTN","VPRSDAQ",80,0)
 ;
"RTN","VPRSDAQ",81,0)
DOCUMENT ; -- Text Integration Utilities
"RTN","VPRSDAQ",82,0)
 N VPRY,VPRI,VPRN
"RTN","VPRSDAQ",83,0)
 D LIST^TIUVPR(.VPRY,DFN,38,DSTRT,DSTOP)
"RTN","VPRSDAQ",84,0)
 S VPRN=0,VPRI="COUNT"
"RTN","VPRSDAQ",85,0)
 F  S VPRI=$O(@VPRY@(VPRI),-1) Q:VPRI<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",86,0)
 . S VPRN=VPRN+1,DLIST(VPRN)=+VPRI
"RTN","VPRSDAQ",87,0)
 K @VPRY
"RTN","VPRSDAQ",88,0)
 Q
"RTN","VPRSDAQ",89,0)
 ;
"RTN","VPRSDAQ",90,0)
ADVDIR ; -- Adv Directive (alerts)
"RTN","VPRSDAQ",91,0)
 N I,AD,TIUD,CNT,STS,NXT
"RTN","VPRSDAQ",92,0)
 D:$G(DFN) ENCOVER^TIUPP3(DFN)
"RTN","VPRSDAQ",93,0)
 ; ^TMP = IEN^Acronym^Category Name^Optional Subject^Date/Time^Optional Addendum
"RTN","VPRSDAQ",94,0)
 ; put AD in Ref D/T order
"RTN","VPRSDAQ",95,0)
 S I=0 F  S I=$O(^TMP("TIUPPCV",$J,I)) Q:I<1  S AD=$G(^(I)) I $P(AD,U,2)="D" S TIUD($P(AD,U,5))=AD
"RTN","VPRSDAQ",96,0)
 Q:'$O(TIUD(0))  ;no AD's for patient
"RTN","VPRSDAQ",97,0)
 ; get latest AD, ck if in/active
"RTN","VPRSDAQ",98,0)
 S I=+$O(TIUD(""),-1),AD=$G(TIUD(I)),STS="A",NXT=""
"RTN","VPRSDAQ",99,0)
 I AD["RESCIND"!($L($P(AD,U,6))) D  ;inactive
"RTN","VPRSDAQ",100,0)
 . N ADD,%DT,X,Y S ADD=$P(AD,U,6),STS="I"
"RTN","VPRSDAQ",101,0)
 . S X=$P(AD,"addendum ",2),X=$P(X,")")
"RTN","VPRSDAQ",102,0)
 . I $L(X) S %DT="TX" D ^%DT S:Y>0 NXT=Y ;end=addendum d/t
"RTN","VPRSDAQ",103,0)
 S CNT=1,DLIST(CNT)=+AD_U_STS_U_NXT,NXT=$P(AD,U,5)
"RTN","VPRSDAQ",104,0)
 ; add remaining AD's as inactive, using next AD's Ref D/T as its end
"RTN","VPRSDAQ",105,0)
 S STS="I" F  S I=$O(TIUD(I),-1) Q:I<1  S AD=$G(TIUD(I)) D
"RTN","VPRSDAQ",106,0)
 . S CNT=CNT+1,DLIST(CNT)=+AD_U_STS_U_NXT
"RTN","VPRSDAQ",107,0)
 . S NXT=$P(AD,U,5)
"RTN","VPRSDAQ",108,0)
 Q
"RTN","VPRSDAQ",109,0)
 ;
"RTN","VPRSDAQ",110,0)
CW ; -- Crisis/Warning notes (alerts)
"RTN","VPRSDAQ",111,0)
 N I,X,CNT
"RTN","VPRSDAQ",112,0)
 D:$G(DFN) ENCOVER^TIUPP3(DFN)
"RTN","VPRSDAQ",113,0)
 S (I,CNT)=0
"RTN","VPRSDAQ",114,0)
 F  S I=$O(^TMP("TIUPPCV",$J,I)) Q:I<1  S X=$G(^(I)) I $P(X,U,2)="C"!($P(X,U,2)="W") S CNT=CNT+1,DLIST(CNT)=$P(X,U,1,2)
"RTN","VPRSDAQ",115,0)
 Q
"RTN","VPRSDAQ",116,0)
 ;
"RTN","VPRSDAQ",117,0)
LRAP ; -- LR Anatomic Pathology reports [expects LRDFN]
"RTN","VPRSDAQ",118,0)
 N SUB,IDT,VPRN,CTR S VPRN=0
"RTN","VPRSDAQ",119,0)
 D RR^LR7OR1(DFN,,DSTRT,DSTOP,"AP",,,DMAX)
"RTN","VPRSDAQ",120,0)
 S SUB="" F  S SUB=$O(^TMP("LRRR",$J,DFN,SUB)) Q:SUB=""  D
"RTN","VPRSDAQ",121,0)
 . S IDT=0 F  S IDT=$O(^TMP("LRRR",$J,DFN,SUB,IDT)) Q:IDT<1  I $O(^(IDT,0)) D
"RTN","VPRSDAQ",122,0)
 .. Q:$O(^LR(LRDFN,SUB,IDT,.05,0))        ;report in TIU
"RTN","VPRSDAQ",123,0)
 .. Q:'$P($G(^LR(LRDFN,SUB,IDT,0)),U,11)  ;not final results
"RTN","VPRSDAQ",124,0)
 .. S VPRN=VPRN+1,DLIST(VPRN)=IDT_","_LRDFN_"~"_SUB
"RTN","VPRSDAQ",125,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","VPRSDAQ",126,0)
 Q
"RTN","VPRSDAQ",127,0)
 ;
"RTN","VPRSDAQ",128,0)
LRMI ; -- LR Microbiology reports [expects LRDFN]
"RTN","VPRSDAQ",129,0)
 N IDT,VPRN,CTR S VPRN=0
"RTN","VPRSDAQ",130,0)
 D RR^LR7OR1(DFN,,DSTRT,DSTOP,"MI",,,DMAX)
"RTN","VPRSDAQ",131,0)
 S IDT=0 F  S IDT=$O(^TMP("LRRR",$J,DFN,"MI",IDT)) Q:IDT<1  I $O(^(IDT,0)) D
"RTN","VPRSDAQ",132,0)
 . Q:'$P($G(^LR(LRDFN,"MI",IDT,0)),U,3)  ;not final results
"RTN","VPRSDAQ",133,0)
 . S VPRN=VPRN+1,DLIST(VPRN)=IDT_","_LRDFN_"~MI"
"RTN","VPRSDAQ",134,0)
 K ^TMP("LRRR",$J,DFN)
"RTN","VPRSDAQ",135,0)
 Q
"RTN","VPRSDAQ",136,0)
 ;
"RTN","VPRSDAQ",137,0)
ORDERS(DG) ; -- Orders by Display Group
"RTN","VPRSDAQ",138,0)
 N ORDG,ORIGVIEW,ORKID,ORLIST,VPRI,VPRN,ORDER,X3,X4
"RTN","VPRSDAQ",139,0)
 S DG=$G(DG,"ALL"),ORDG=+$O(^ORD(100.98,"B",DG,0))
"RTN","VPRSDAQ",140,0)
 S ORIGVIEW=2,ORKID=$S(DG="CH":1,1:0) ;original view, lab child orders
"RTN","VPRSDAQ",141,0)
 D EN^ORQ1(DFN_";DPT(",ORDG,6,,DSTRT,DSTOP,,,,ORKID) S VPRN=0
"RTN","VPRSDAQ",142,0)
 S VPRI=0 F  S VPRI=$O(^TMP("ORR",$J,ORLIST,VPRI)) Q:VPRI<1  S ORDER=$G(^(VPRI)) D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",143,0)
 . I $P($P(ORDER,U),";",2)>1 Q  ;skip order actions
"RTN","VPRSDAQ",144,0)
 . I $O(^OR(100,+ORDER,2,0)) Q  ;skip parent orders
"RTN","VPRSDAQ",145,0)
 . S ORDER=+ORDER,X3=$G(^OR(100,ORDER,3)),X4=$G(^(4))
"RTN","VPRSDAQ",146,0)
 . Q:$P(X3,U,3)=13  I X4["P",$P(X3,U,3)=1!($P(X3,U,3)=12) Q  ;cancelled
"RTN","VPRSDAQ",147,0)
 . Q:$P(X3,U,3)=14              ;lapsed
"RTN","VPRSDAQ",148,0)
 . I DG="RX",'$$RX(ORDER) Q     ;skip non-PS in RX group
"RTN","VPRSDAQ",149,0)
 . S VPRN=VPRN+1,DLIST(VPRN)=ORDER
"RTN","VPRSDAQ",150,0)
 K ^TMP("ORR",$J)
"RTN","VPRSDAQ",151,0)
 Q
"RTN","VPRSDAQ",152,0)
 ;
"RTN","VPRSDAQ",153,0)
RX(ORIFN) ; -- is order really a med? (non-PS order in display group)
"RTN","VPRSDAQ",154,0)
 N X,Y,PKG S Y=0
"RTN","VPRSDAQ",155,0)
 S X=$P($G(^OR(100,+$G(ORIFN),0)),U,14),PKG=$$GET1^DIQ(9.4,+X_",",1)
"RTN","VPRSDAQ",156,0)
 I $E(PKG,1,2)="PS" S Y=1
"RTN","VPRSDAQ",157,0)
 Q Y
"RTN","VPRSDAQ",158,0)
 ;
"RTN","VPRSDAQ",159,0)
NONORD ; -- Other orders: not Lab, Rad, or Med
"RTN","VPRSDAQ",160,0)
 N ORDG,ORPKG,ORIGVIEW,ORLIST,VPRI,VPRN,ORDER,X
"RTN","VPRSDAQ",161,0)
 S ORDG=+$O(^ORD(100.98,"B","ALL",0)) D ORPKG ;get list of pkgs to exclude
"RTN","VPRSDAQ",162,0)
 S ORIGVIEW=2 ;get original view of order
"RTN","VPRSDAQ",163,0)
 D EN^ORQ1(DFN_";DPT(",ORDG,6,,DSTRT,DSTOP) S VPRN=0
"RTN","VPRSDAQ",164,0)
 S VPRI=0 F  S VPRI=$O(^TMP("ORR",$J,ORLIST,VPRI)) Q:VPRI<1  S ORDER=$G(^(VPRI)) D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",165,0)
 . I $P($P(ORDER,U),";",2)>1 Q         ;skip order actions
"RTN","VPRSDAQ",166,0)
 . Q:$P($G(^OR(100,+ORDER,3)),U,3)=14  ;skip lapsed orders
"RTN","VPRSDAQ",167,0)
 . S X=+$P($G(^OR(100,+ORDER,0)),U,14)
"RTN","VPRSDAQ",168,0)
 . I $D(ORPKG(X)) Q                    ;skip Lab,Rad,Med
"RTN","VPRSDAQ",169,0)
 . S VPRN=VPRN+1,DLIST(VPRN)=+ORDER
"RTN","VPRSDAQ",170,0)
 K ^TMP("ORR",$J)
"RTN","VPRSDAQ",171,0)
 Q
"RTN","VPRSDAQ",172,0)
 ;
"RTN","VPRSDAQ",173,0)
ORPKG ; -- get list of pkgs to exclude
"RTN","VPRSDAQ",174,0)
 N NMSP,X
"RTN","VPRSDAQ",175,0)
 F NMSP="LR","RA","PSG","PSIV","PSJ","PSO","PSH" D
"RTN","VPRSDAQ",176,0)
 . S X=+$$FIND1^DIC(9.4,,"QX",NMSP,"C")
"RTN","VPRSDAQ",177,0)
 . S:X>0 ORPKG(X)=""
"RTN","VPRSDAQ",178,0)
 Q
"RTN","VPRSDAQ",179,0)
 ;
"RTN","VPRSDAQ",180,0)
CONSULTS ; -- Consult/Request Tracking
"RTN","VPRSDAQ",181,0)
 N VPRN,VPRX,GMRCDA,GMRCGRP,GMRCSEX,TITLE
"RTN","VPRSDAQ",182,0)
 D OER^GMRCSLM1(DFN,"",DSTRT,DSTOP,"") S VPRN=0
"RTN","VPRSDAQ",183,0)
 F  S VPRN=$O(^TMP("GMRCR",$J,"CS",VPRN)) Q:VPRN<1!(VPRN>DMAX)  D
"RTN","VPRSDAQ",184,0)
 . S VPRX=$G(^TMP("GMRCR",$J,"CS",VPRN,0)) Q:+VPRX<1
"RTN","VPRSDAQ",185,0)
 . S DLIST(VPRN)=+VPRX
"RTN","VPRSDAQ",186,0)
 K ^TMP("GMRCR",$J,"CS")
"RTN","VPRSDAQ",187,0)
 Q
"RTN","VPRSDAQ",188,0)
 ;
"RTN","VPRSDAQ",189,0)
CPROCS ; -- Clinical Procedures
"RTN","VPRSDAQ",190,0)
 N VPRN,VPRX,I,ID S VPRN=0
"RTN","VPRSDAQ",191,0)
 D MDPS1^VPRDJ03(DFN,DSTRT,DSTOP,DMAX) ;gets ^TMP("MDHSP",$J)
"RTN","VPRSDAQ",192,0)
 S I=0 F  S I=$O(^TMP("MDHSP",$J,I)) Q:I<1  S VPRX=$G(^(I)) I $P(VPRX,U,3)="PR702" D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",193,0)
 . S ^TMP("MDHSP",$J,"IEN",+$P(VPRX,U,2))=I
"RTN","VPRSDAQ",194,0)
 . S VPRN=VPRN+1,DLIST(VPRN)=+$P(VPRX,U,2)
"RTN","VPRSDAQ",195,0)
 ;K ^TMP("MDHSP",$J)
"RTN","VPRSDAQ",196,0)
 Q
"RTN","VPRSDAQ",197,0)
 ;
"RTN","VPRSDAQ",198,0)
SURGERYS ; -- Surgeries
"RTN","VPRSDAQ",199,0)
 N VPRY,VPRN
"RTN","VPRSDAQ",200,0)
 D LIST^SROESTV(.VPRY,DFN,DSTRT,DSTOP,DMAX,1)
"RTN","VPRSDAQ",201,0)
 S VPRN=0 F  S VPRN=$O(@VPRY@(VPRN)) Q:VPRN<1  S DLIST(VPRN)=+$G(@VPRY@(VPRN))
"RTN","VPRSDAQ",202,0)
 K @VPRY
"RTN","VPRSDAQ",203,0)
 Q
"RTN","VPRSDAQ",204,0)
 ;
"RTN","VPRSDAQ",205,0)
EXAMS ; -- V Exams (Physical Exams)
"RTN","VPRSDAQ",206,0)
 N FNUM S FNUM=9000010.13 G PXRM
"RTN","VPRSDAQ",207,0)
 ;
"RTN","VPRSDAQ",208,0)
HFACTORS ; -- V Health Factors (Health Concerns)
"RTN","VPRSDAQ",209,0)
 N FNUM S FNUM=9000010.23 G PXRM
"RTN","VPRSDAQ",210,0)
 ;
"RTN","VPRSDAQ",211,0)
CPT ; -- V CPT (Procedures)
"RTN","VPRSDAQ",212,0)
 N FNUM S FNUM=9000010.18 G PXRM
"RTN","VPRSDAQ",213,0)
 ;
"RTN","VPRSDAQ",214,0)
POV ; -- V POV (Diagnosis)
"RTN","VPRSDAQ",215,0)
 N FNUM S FNUM=9000010.07 G PXRM
"RTN","VPRSDAQ",216,0)
 ;
"RTN","VPRSDAQ",217,0)
PXRM ; -- Search PXRM index
"RTN","VPRSDAQ",218,0)
 N VPRSTART,VPRSTOP,VPRIDT,VPRN,ID
"RTN","VPRSDAQ",219,0)
 S VPRSTART=DSTRT,VPRSTOP=DSTOP,VPRN=0
"RTN","VPRSDAQ",220,0)
 D SORT^VPRDJ09 ;sort ^PXRMINDX into ^TMP("VPRPX",$J,IDT)
"RTN","VPRSDAQ",221,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRPX",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",222,0)
 . S ID=0 F  S ID=$O(^TMP("VPRPX",$J,VPRIDT,ID)) Q:ID<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",223,0)
 .. S VPRN=VPRN+1,DLIST(VPRN)=ID_U_$G(^TMP("VPRPX",$J,VPRIDT,ID))
"RTN","VPRSDAQ",224,0)
 .. ; DLIST(#) = ien ^ .01 ^ date ^ [coding system]
"RTN","VPRSDAQ",225,0)
 K ^TMP("VPRPX",$J)
"RTN","VPRSDAQ",226,0)
 Q
"RTN","VPRSDAQ",227,0)
 ;
"RTN","VPRSDAQ",228,0)
HFM ; -- V Health Factors, for Family History
"RTN","VPRSDAQ",229,0)
 N ITEM,DATE,DA,X,VPRN S VPRN=0
"RTN","VPRSDAQ",230,0)
 S ITEM=0 F  S ITEM=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),ITEM)) Q:ITEM<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",231,0)
 . S X=$P($G(^AUTTHF(+ITEM,0)),U) I X'["FAMILY HISTORY",X'["FAMILY HX" Q
"RTN","VPRSDAQ",232,0)
 . S DATE=DSTRT F  S DATE=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),ITEM,DATE)) Q:DATE<1!(DATE>DSTOP)  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",233,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),ITEM,DATE,DA)) Q:DA<1  S VPRN=VPRN+1,DLIST(VPRN)=DA_U_ITEM Q:VPRN'<DMAX
"RTN","VPRSDAQ",234,0)
 Q
"RTN","VPRSDAQ",235,0)
 ;
"RTN","VPRSDAQ",236,0)
HFS ; -- V Health Factors, for Social History
"RTN","VPRSDAQ",237,0)
 N ITEM,DATE,DA,VPRN S VPRN=0
"RTN","VPRSDAQ",238,0)
 S ITEM=0 F  S ITEM=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),ITEM)) Q:ITEM<1  I $$SOCHIST(ITEM) D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",239,0)
 . S DATE=DSTRT F  S DATE=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),ITEM,DATE)) Q:DATE<1!(DATE>DSTOP)  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",240,0)
 .. S DA=0 F  S DA=$O(^PXRMINDX(9000010.23,"PI",+$G(DFN),ITEM,DATE,DA)) Q:DA<1  S VPRN=VPRN+1,DLIST(VPRN)=DA_U_ITEM Q:VPRN'<DMAX
"RTN","VPRSDAQ",241,0)
 Q
"RTN","VPRSDAQ",242,0)
 ;
"RTN","VPRSDAQ",243,0)
SOCHIST(IEN) ; -- find social history factors
"RTN","VPRSDAQ",244,0)
 N X S X=$P($G(^AUTTHF(+IEN,0)),U)
"RTN","VPRSDAQ",245,0)
 I (X["TOBACCO")!(X["SMOK") Q 1
"RTN","VPRSDAQ",246,0)
 ;I (X["LIVES")!(X["LIVING") Q 1
"RTN","VPRSDAQ",247,0)
 ;I (X["RELIGIO")!(X["SPIRIT") Q 1
"RTN","VPRSDAQ",248,0)
 Q 0
"RTN","VPRSDAQ",249,0)
 ;
"RTN","VPRSDAQ",250,0)
WVPL ; -- Women's Health Pregnancy Log, for Social History
"RTN","VPRSDAQ",251,0)
 N DA,X0
"RTN","VPRSDAQ",252,0)
 S DA=$O(^WV(790.05,"C",DFN,""),-1) Q:'DA  ;last entry
"RTN","VPRSDAQ",253,0)
 S X0=$G(^WV(790.05,DA,0))
"RTN","VPRSDAQ",254,0)
 ; status=YES, future due date (allow past 14 days)
"RTN","VPRSDAQ",255,0)
 I $P(X0,U,3),$P(X0,U,4)'<$$FMADD^XLFDT(DT,-14) S DLIST(1)=DA
"RTN","VPRSDAQ",256,0)
 Q
"RTN","VPRSDAQ",257,0)
 ;
"RTN","VPRSDAQ",258,0)
IMMS ; -- Immunizations
"RTN","VPRSDAQ",259,0)
 N FNUM,VPRSTART,VPRSTOP,VPRIDT,VPRN,ID
"RTN","VPRSDAQ",260,0)
 S FNUM=9000010.11,VPRSTART=DSTRT,VPRSTOP=DSTOP,VPRN=0
"RTN","VPRSDAQ",261,0)
 D SORT^VPRDJ09 ;sort ^PXRMINDX into ^TMP("VPRPX",$J,IDT)
"RTN","VPRSDAQ",262,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRPX",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",263,0)
 . S ID=0 F  S ID=$O(^TMP("VPRPX",$J,VPRIDT,ID)) Q:ID<1  D    Q:VPRN'<DMAX
"RTN","VPRSDAQ",264,0)
 .. S VPRN=VPRN+1,DLIST(VPRN)=ID
"RTN","VPRSDAQ",265,0)
 K ^TMP("VPRPX",$J)
"RTN","VPRSDAQ",266,0)
 Q
"RTN","VPRSDAQ",267,0)
 ;
"RTN","VPRSDAQ",268,0)
VITALS ; -- GMR Vital Measurements
"RTN","VPRSDAQ",269,0)
 N GMRVSTR,VPRIDT,VPRTYP,ID,VPRN
"RTN","VPRSDAQ",270,0)
 S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN"
"RTN","VPRSDAQ",271,0)
 S GMRVSTR(0)=DSTRT_U_DSTOP_U_DMAX_"^1"
"RTN","VPRSDAQ",272,0)
 D EN1^GMRVUT0 S VPRN=0
"RTN","VPRSDAQ",273,0)
 S VPRIDT=0 F  S VPRIDT=$O(^UTILITY($J,"GMRVD",VPRIDT)) Q:VPRIDT<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",274,0)
 . S VPRTYP="" F  S VPRTYP=$O(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP)) Q:VPRTYP=""  D
"RTN","VPRSDAQ",275,0)
 .. S ID=$O(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP,0)) D
"RTN","VPRSDAQ",276,0)
 ... S VPRN=VPRN+1,DLIST(VPRN)=ID
"RTN","VPRSDAQ",277,0)
 ... S ^TMP("VPRGMV",$J,ID)=$G(^UTILITY($J,"GMRVD",VPRIDT,VPRTYP,ID))
"RTN","VPRSDAQ",278,0)
 K ^UTILITY($J,"GMRVD")
"RTN","VPRSDAQ",279,0)
 Q
"RTN","VPRSDAQ",280,0)
 ;
"RTN","VPRSDAQ",281,0)
APPTS ; -- Appointments
"RTN","VPRSDAQ",282,0)
 N VPRX,VPRNUM,VPRDT,VPRN
"RTN","VPRSDAQ",283,0)
 S VPRX(1)=DSTRT_";"_DSTOP,VPRX(4)=DFN
"RTN","VPRSDAQ",284,0)
 S VPRX("FLDS")="1;2;3;10;11",VPRX("SORT")="P"
"RTN","VPRSDAQ",285,0)
 ; appointments
"RTN","VPRSDAQ",286,0)
 S VPRX(3)="R;I;NS;NSR;NT" ;no cancelled appt's
"RTN","VPRSDAQ",287,0)
 S VPRNUM=$$SDAPI^SDAMA301(.VPRX),(VPRDT,VPRN)=0
"RTN","VPRSDAQ",288,0)
 F  S VPRDT=$O(^TMP($J,"SDAMA301",DFN,VPRDT)) Q:VPRDT<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",289,0)
 . S VPRN=VPRN+1,DLIST(VPRN)=VPRDT_","_DFN ;^TMP($J,"SDAMA301",DFN,VPRDT)
"RTN","VPRSDAQ",290,0)
 ;K ^TMP($J,"SDAMA301",DFN)
"RTN","VPRSDAQ",291,0)
 Q
"RTN","VPRSDAQ",292,0)
 ;
"RTN","VPRSDAQ",293,0)
SCHADMS ; -- Scheduled Admissions
"RTN","VPRSDAQ",294,0)
 N VPRA,VPRN S VPRN=0
"RTN","VPRSDAQ",295,0)
 S VPRA=0 F  S VPRA=$O(^DGS(41.1,"B",DFN,VPRA)) Q:VPRA<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",296,0)
 . S VPRX=$G(^DGS(41.1,VPRA,0))
"RTN","VPRSDAQ",297,0)
 . S X=$P(VPRX,U,2) Q:X<DSTRT!(X>DSTOP)  ;out of date range
"RTN","VPRSDAQ",298,0)
 . Q:$P(VPRX,U,13)  ;Q:$P(VPRX,U,17)     ;cancelled or admitted
"RTN","VPRSDAQ",299,0)
 . S VPRN=VPRN+1,DLIST(VPRN)=VPRA
"RTN","VPRSDAQ",300,0)
 Q
"RTN","VPRSDAQ",301,0)
 ;
"RTN","VPRSDAQ",302,0)
CLNPRV(HLOC) ; -- get default provider for a clinic
"RTN","VPRSDAQ",303,0)
 N I,X,Y
"RTN","VPRSDAQ",304,0)
 S I=+$O(^SC("ADPR",+HLOC,0)),Y=""
"RTN","VPRSDAQ",305,0)
 S:I Y=+$G(^SC(+HLOC,"PR",I,0))
"RTN","VPRSDAQ",306,0)
 Q Y
"RTN","VPRSDAQ",307,0)
 ;
"RTN","VPRSDAQ",308,0)
INS ; -- Insurance
"RTN","VPRSDAQ",309,0)
 N NUM,I,VPRDT,VPRSTS,VPRX
"RTN","VPRSDAQ",310,0)
 S VPRSTS=$G(FILTER("status"),"RB"),VPRDT=DT
"RTN","VPRSDAQ",311,0)
 I VPRSTS["A" S VPRDT="" ;no date if requesting inactive policies
"RTN","VPRSDAQ",312,0)
 S:$G(DFN) NUM=$$INSUR^IBBAPI(DFN,VPRDT,VPRSTS,.VPRX,"*") Q:NUM<1
"RTN","VPRSDAQ",313,0)
 S I=0 F  S I=$O(VPRX("IBBAPI","INSUR",I)) Q:I<1  S DLIST(I)=I
"RTN","VPRSDAQ",314,0)
 M VPRINS=VPRX("IBBAPI","INSUR")
"RTN","VPRSDAQ",315,0)
 Q
"RTN","VPRSDAQ",316,0)
 ;
"RTN","VPRSDAQ",317,0)
PRF ; -- Patient Record Flags
"RTN","VPRSDAQ",318,0)
 N NUM,I,IEN
"RTN","VPRSDAQ",319,0)
 S:$G(DFN) NUM=$$GETACT^DGPFAPI(DFN,"VPRF")
"RTN","VPRSDAQ",320,0)
 S I=0 F  S I=$O(VPRF(I)) Q:I<1  I $G(VPRF(I,"CATEGORY"))["NATIONAL" D
"RTN","VPRSDAQ",321,0)
 . S IEN=+$G(VPRF(I,"FLAG")) Q:IEN<1
"RTN","VPRSDAQ",322,0)
 . S DLIST(I)=IEN_"~"_DFN,VPRF("IDX",IEN)=I
"RTN","VPRSDAQ",323,0)
 Q
"RTN","VPRSDAQ",324,0)
 ;
"RTN","VPRSDAQ",325,0)
PTF ; -- PTF DXLS via ^PXRMINDX(45,"ICD","PNI",DFN,"DXLS",ICD,DATE,DA)
"RTN","VPRSDAQ",326,0)
 N VPRSTART,VPRSTOP,VPRIDT,VPRN,ID,X,P80
"RTN","VPRSDAQ",327,0)
 S VPRSTART=DSTRT,VPRSTOP=DSTOP,VPRN=0
"RTN","VPRSDAQ",328,0)
 D PTF^VPRDJ09 ;sort ^PXRMINDX into ^TMP("VPRPX",$J,IDT)
"RTN","VPRSDAQ",329,0)
 S VPRIDT=0 F  S VPRIDT=$O(^TMP("VPRPX",$J,VPRIDT)) Q:VPRIDT<1  D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",330,0)
 . S ID=0 F  S ID=$O(^TMP("VPRPX",$J,VPRIDT,ID)) Q:ID<1  I ID["DXLS" D  Q:VPRN'<DMAX
"RTN","VPRSDAQ",331,0)
 .. S X=$G(^TMP("VPRPX",$J,VPRIDT,ID)),P80=$$CODEBA^ICDEX($P(X,U),80)
"RTN","VPRSDAQ",332,0)
 .. S:P80>0 VPRN=VPRN+1,DLIST(VPRN)=+ID_U_P80_U_$P(X,U,2,3)
"RTN","VPRSDAQ",333,0)
 .. ; DLIST(#) = ien ^ ICD ptr ^ date ^ [coding system]
"RTN","VPRSDAQ",334,0)
 K ^TMP("VPRPX",$J)
"RTN","VPRSDAQ",335,0)
 Q
"RTN","VPRSDAQ",336,0)
 ;
"RTN","VPRSDAQ",337,0)
FIM ; -- Functional Independence Measurements
"RTN","VPRSDAQ",338,0)
 N VPRS,VPRN,VPRY,ADM,VPRCNT,RMIMTIME
"RTN","VPRSDAQ",339,0)
 D PRM^RMIMRP(.VPRSITE) Q:'$O(VPRSITE(1))
"RTN","VPRSDAQ",340,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSDAQ",341,0)
 S VPRCNT=0
"RTN","VPRSDAQ",342,0)
 S VPRS=1 F  S VPRS=$O(VPRSITE(VPRS)) Q:VPRS<1  D
"RTN","VPRSDAQ",343,0)
 . S VPRN=DFN_U_VPRSITE(VPRS)
"RTN","VPRSDAQ",344,0)
 . D LC^RMIMRP(.VPRY,VPRN) Q:VPRY(1)<1
"RTN","VPRSDAQ",345,0)
 . S VPRN=1 F  S VPRN=$O(VPRY(VPRN)) Q:VPRN<1  D  Q:VPRCNT'<DMAX
"RTN","VPRSDAQ",346,0)
 .. S ADM=$$DATE($P(VPRY(VPRN),U,4)) Q:ADM<DSTRT  Q:ADM>DSTOP
"RTN","VPRSDAQ",347,0)
 .. S VPRCNT=VPRCNT+1,DLIST(VPRCNT)=+VPRY(VPRN)
"RTN","VPRSDAQ",348,0)
 Q
"RTN","VPRSDAQ",349,0)
 ;
"RTN","VPRSDAQ",350,0)
DATE(X) ; -- Return internal form of date X
"RTN","VPRSDAQ",351,0)
 N %DT,Y
"RTN","VPRSDAQ",352,0)
 S %DT="" D ^%DT S:Y<1 Y=X
"RTN","VPRSDAQ",353,0)
 Q Y
"RTN","VPRSDAR")
0^2^B9382651
"RTN","VPRSDAR",1,0)
VPRSDAR ;SLC/MKB -- SDA Radiology utilities ;8/6/18  12:21
"RTN","VPRSDAR",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRSDAR",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","VPRSDAR",4,0)
 ;
"RTN","VPRSDAR",5,0)
 ; External References          DBIA#
"RTN","VPRSDAR",6,0)
 ; -------------------          -----
"RTN","VPRSDAR",7,0)
 ; ^OR(100                       5771
"RTN","VPRSDAR",8,0)
 ; ^RADPT                   2480,2588
"RTN","VPRSDAR",9,0)
 ; ^RARPT                        5605
"RTN","VPRSDAR",10,0)
 ; DIQ                           2056
"RTN","VPRSDAR",11,0)
 ; RAO7PC1                  2043,2265
"RTN","VPRSDAR",12,0)
 ; RAO7PC3                       2877
"RTN","VPRSDAR",13,0)
 ;
"RTN","VPRSDAR",14,0)
PRE ; -- PreProcessing for VPR RAD ORDER
"RTN","VPRSDAR",15,0)
 ;  Expects DFN, DSTRT, DSTOP, DMAX from EN^DDEGET
"RTN","VPRSDAR",16,0)
 N BEG,END,MAX,RAORD
"RTN","VPRSDAR",17,0)
 S BEG=$G(DSTRT),END=$G(DSTOP),MAX=$G(DMAX)_"P"
"RTN","VPRSDAR",18,0)
 I $G(ID) D  ;reset for one order
"RTN","VPRSDAR",19,0)
 . S RAORD=+$G(^OR(100,+ID,4)) S:'DFN DFN=+$P($G(^(0)),U,2)
"RTN","VPRSDAR",20,0)
 . S IDT=$O(^RADPT("AO",RAORD,DFN,0))
"RTN","VPRSDAR",21,0)
 . S:IDT (BEG,END)=9999999.9999-IDT
"RTN","VPRSDAR",22,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEG,END,MAX)
"RTN","VPRSDAR",23,0)
 Q
"RTN","VPRSDAR",24,0)
 ;
"RTN","VPRSDAR",25,0)
POST ; PostProcessing for VPR RAD ORDER
"RTN","VPRSDAR",26,0)
 K ^TMP($J,"RAE1",DFN),^TMP($J,"RAE2",DFN)
"RTN","VPRSDAR",27,0)
 K VPRAE1,VPRAE2,RARPT
"RTN","VPRSDAR",28,0)
 Q
"RTN","VPRSDAR",29,0)
 ;
"RTN","VPRSDAR",30,0)
ONE ; -- ID Processing for each VPR RAD RESULT
"RTN","VPRSDAR",31,0)
 ;  Returns VPRAE1 = ^TMP($J,"RAE1",DFN,Exam ID)
"RTN","VPRSDAR",32,0)
 ;          VPRAE2 = $NA(^TMP($J,"RAE2",DFN,caseIEN,procedureName))
"RTN","VPRSDAR",33,0)
 ;          RARPT  = Report #74 IEN
"RTN","VPRSDAR",34,0)
 ;
"RTN","VPRSDAR",35,0)
 N RAID,PROC
"RTN","VPRSDAR",36,0)
 S RAID=$P(DIEN,",",2)_"-"_$P(DIEN,",")
"RTN","VPRSDAR",37,0)
 ; save exam node
"RTN","VPRSDAR",38,0)
 S VPRAE1=$G(^TMP($J,"RAE1",DFN,RAID)),RARPT=+$P(VPRAE1,U,5)
"RTN","VPRSDAR",39,0)
 ; get report details for exam/case, save array name for reference
"RTN","VPRSDAR",40,0)
 S RAID=DFN_U_$TR(RAID,"-","^")
"RTN","VPRSDAR",41,0)
 D EN3^RAO7PC1(RAID) I '$D(^TMP($J,"RAE2",DFN,+DIEN)) S DDEOUT=1 Q
"RTN","VPRSDAR",42,0)
 S PROC=$O(^TMP($J,"RAE2",DFN,+DIEN,"")),VPRAE2=$NA(^(PROC))
"RTN","VPRSDAR",43,0)
 Q
"RTN","VPRSDAR",44,0)
 ;
"RTN","VPRSDAR",45,0)
 ; -- for Documents container:
"RTN","VPRSDAR",46,0)
 ;
"RTN","VPRSDAR",47,0)
RPTS ; -- find patient's radiology reports
"RTN","VPRSDAR",48,0)
 N VPRN,VPRXID,STS,RARPT
"RTN","VPRSDAR",49,0)
 S DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSDAR",50,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,DSTRT,DSTOP,DMAX_"P")
"RTN","VPRSDAR",51,0)
 S VPRN=0 ; VPRXID = invdate.time-caseIEN
"RTN","VPRSDAR",52,0)
 S VPRXID="" F  S VPRXID=$O(^TMP($J,"RAE1",DFN,VPRXID)) Q:VPRXID=""  D
"RTN","VPRSDAR",53,0)
 . S STS=$P($G(^TMP($J,"RAE1",DFN,VPRXID)),U,3),RARPT=+$P($G(^(VPRXID)),U,5)
"RTN","VPRSDAR",54,0)
 . Q:STS="No Report"!(STS="Deleted")!(STS["Draft")!(STS["Released/Not")
"RTN","VPRSDAR",55,0)
 . Q:RARPT<1  Q:$D(RARPT(RARPT))  ;already have report, for sets
"RTN","VPRSDAR",56,0)
 . S VPRN=+$G(VPRN)+1,DLIST(VPRN)=RARPT_"~"_VPRXID
"RTN","VPRSDAR",57,0)
 . S RARPT(+RARPT)=""
"RTN","VPRSDAR",58,0)
 K ^TMP($J,"RAE1")
"RTN","VPRSDAR",59,0)
 Q
"RTN","VPRSDAR",60,0)
 ;
"RTN","VPRSDAR",61,0)
RPT1 ; -- ID Processing for each VPR RAD REPORT
"RTN","VPRSDAR",62,0)
 N RA0,X
"RTN","VPRSDAR",63,0)
 S VPRXID=$P(DIEN,"~",2),DIEN=+$P(DIEN,"~")
"RTN","VPRSDAR",64,0)
 S RA0=$G(^RARPT(DIEN,0)) S:DFN<1 DFN=+$P(RA0,U,2)
"RTN","VPRSDAR",65,0)
 I 'VPRXID D
"RTN","VPRSDAR",66,0)
 . N I S VPRXID=9999999.9999-$P(RA0,U,3),I=0
"RTN","VPRSDAR",67,0)
 . F  S I=$O(^RADPT(DFN,"DT",VPRXID,"P",I)) Q:I<1  I $P($G(^(I,0)),U,17)=DIEN S VPRXID=VPRXID_"-"_I Q
"RTN","VPRSDAR",68,0)
 I $L(VPRXID,"-")<2 S DDEOUT=1 Q
"RTN","VPRSDAR",69,0)
 S X=DFN_U_$TR(VPRXID,"-","^") D
"RTN","VPRSDAR",70,0)
 . N DFN,RACNT,RAMDIV,RAWHOVER,RAPRTSET
"RTN","VPRSDAR",71,0)
 . D EN3^RAO7PC1(X),EN3^RAO7PC3(X)
"RTN","VPRSDAR",72,0)
 S VPRAE2=$Q(^TMP($J,"RAE2",DFN)),VPRAE3=$Q(^TMP($J,"RAE3",DFN))
"RTN","VPRSDAR",73,0)
 ; get ordered procedure for document name
"RTN","VPRSDAR",74,0)
 S RAPROC=$G(^TMP($J,"RAE3",DFN,"ORD"))
"RTN","VPRSDAR",75,0)
 I RAPROC="" S RAPROC=$G(^TMP($J,"RAE3",DFN,"ORD",$P(VPRXID,"-",2)))
"RTN","VPRSDAR",76,0)
 Q
"RTN","VPRSDAR",77,0)
 ;
"RTN","VPRSDAR",78,0)
VNUM(DFN,EXAMID) ; -- return Visit# for patient, examID
"RTN","VPRSDAR",79,0)
 N I,IDT,IENS,Y
"RTN","VPRSDAR",80,0)
 S I=+$P(EXAMID,"-",2),IDT=$P(EXAMID,"-"),IENS=I_","_IDT_","_DFN_","
"RTN","VPRSDAR",81,0)
 S Y=$$GET1^DIQ(70.03,IENS,27,"I")
"RTN","VPRSDAR",82,0)
 Q Y
"RTN","VPRSR")
0^11^B1400443
"RTN","VPRSR",1,0)
VPRSR ;SLC/MKB -- Surgery interface ;10/25/18  15:29
"RTN","VPRSR",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8**;Sep 01, 2011;Build 87
"RTN","VPRSR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRSR",4,0)
 ;
"RTN","VPRSR",5,0)
 ; Supported by DBIA #4750
"RTN","VPRSR",6,0)
 ;
"RTN","VPRSR",7,0)
 ; ---------------- Update Triggers ----------------
"RTN","VPRSR",8,0)
 ;
"RTN","VPRSR",9,0)
NEW(IEN,DFN,STS) ; -- new surgery request [from SROERR]
"RTN","VPRSR",10,0)
 Q  ;don't want until completed
"RTN","VPRSR",11,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSR",12,0)
 D SR^VPREVNT(DFN,IEN)
"RTN","VPRSR",13,0)
 Q
"RTN","VPRSR",14,0)
 ;
"RTN","VPRSR",15,0)
UPD(IEN,DFN,STS) ; -- updated surgery request [from SROERR0]
"RTN","VPRSR",16,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1  Q:$G(STS)'["COMPLETED"
"RTN","VPRSR",17,0)
 N VPRSR,I,SRDOC
"RTN","VPRSR",18,0)
 D ONE^SROESTV("VPRSR",IEN) S SRDOC=0
"RTN","VPRSR",19,0)
 S I=0 F  S I=$O(VPRSR(IEN,I)) Q:I<1  I $P($G(VPRSR(IEN,I)),U,7)'?1"un".E S SRDOC=1 Q
"RTN","VPRSR",20,0)
 I SRDOC D SR^VPREVNT(DFN,IEN) ;has report(s),visit#
"RTN","VPRSR",21,0)
 Q
"RTN","VPRSR",22,0)
 ;
"RTN","VPRSR",23,0)
DEL(IEN,DFN) ; -- delete surgery request [from SROERR]
"RTN","VPRSR",24,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSR",25,0)
 D SR^VPREVNT(DFN,IEN,"@")
"RTN","VPRSR",26,0)
 Q
"SEC","^DIC",560,560,0,"AUDIT")
@
"SEC","^DIC",560,560,0,"DD")
@
"SEC","^DIC",560,560,0,"DEL")
@
"SEC","^DIC",560,560,0,"LAYGO")
@
"SEC","^DIC",560,560,0,"RD")
@
"SEC","^DIC",560,560,0,"WR")
@
"VER")
8.0^22.2
"^DD",560,560,0)
FIELD^^.01^4
"^DD",560,560,0,"DT")
3190103
"^DD",560,560,0,"IX","B",560,.01)

"^DD",560,560,0,"NM","VPR SUBSCRIPTION")

"^DD",560,560,.01,0)
SITE NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X S DINUM=1
"^DD",560,560,.01,1,0)
^.1
"^DD",560,560,.01,1,1,0)
560^B
"^DD",560,560,.01,1,1,1)
S ^VPR("B",$E(X,1,30),DA)=""
"^DD",560,560,.01,1,1,2)
K ^VPR("B",$E(X,1,30),DA)
"^DD",560,560,.01,3)
Answer must be 3-30 characters in length.
"^DD",560,560,.01,21,0)
^^1^1^3181016^^
"^DD",560,560,.01,21,1,0)
Enter a name for this system.
"^DD",560,560,.01,23,0)
^^1^1^3181016^
"^DD",560,560,.01,23,1,0)
There can be only one entry in this file.
"^DD",560,560,.01,"DEL",1,0)
I 1
"^DD",560,560,.01,"DT")
3181016
"^DD",560,560,.02,0)
ENABLE MONITORING^St11^^0;2^
"^DD",560,560,.02,3)
Select YES to begin tracking patient data changes for the Regional Health Connect server.
"^DD",560,560,.02,21,0)
^.001^2^2^3181016^^^
"^DD",560,560,.02,21,1,0)
Select YES to track the record numbers of patient data that is modified
"^DD",560,560,.02,21,2,0)
in the AVPR index.
"^DD",560,560,.02,23,0)
^^3^3^3181016^
"^DD",560,560,.02,23,1,0)
Do NOT change this value from YES to NO unless directed to do so by
"^DD",560,560,.02,23,2,0)
Health Product Support or development staff, as the data cache on the
"^DD",560,560,.02,23,3,0)
Regional Health Connect server will become out of synch with VistA.
"^DD",560,560,.02,"DT")
3181016
"^DD",560,560,1,0)
LAST NUMBER^NJ9,0^^1;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",560,560,1,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",560,560,1,21,0)
^.001^1^1^3181016^^
"^DD",560,560,1,21,1,0)
This is the last sequence number used in the AVPR index.
"^DD",560,560,1,23,0)
^^2^2^3181016^
"^DD",560,560,1,23,1,0)
This value is managed by routine VPRHS, and should NOT be edited via
"^DD",560,560,1,23,2,0)
FileMan options.
"^DD",560,560,1,"DT")
3181016
"^DD",560,560,2,0)
PATIENTS^560.02PA^^2;0
"^DD",560,560,2,21,0)
^.001^2^2^3190103^^
"^DD",560,560,2,21,1,0)
This is the list of patients on this system who are being monitored for
"^DD",560,560,2,21,2,0)
changes, which will be retrieved by the Regional Health Connect.
"^DD",560,560.02,0)
PATIENTS SUB-FIELD^^.02^2
"^DD",560,560.02,0,"DT")
3190103
"^DD",560,560.02,0,"IX","B",560.02,.01)

"^DD",560,560.02,0,"NM","PATIENTS")

"^DD",560,560.02,0,"UP")
560
"^DD",560,560.02,.01,0)
PATIENT NAME^MP2'X^DPT(^0;1^S DINUM=+X
"^DD",560,560.02,.01,1,0)
^.1
"^DD",560,560.02,.01,1,1,0)
560.02^B
"^DD",560,560.02,.01,1,1,1)
S ^VPR(DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",560,560.02,.01,1,1,2)
K ^VPR(DA(1),2,"B",$E(X,1,30),DA)
"^DD",560,560.02,.01,3)
Enter the name of a patient for whom data updates are to be tracked.
"^DD",560,560.02,.01,21,0)
^^2^2^3181016^
"^DD",560,560.02,.01,21,1,0)
This is a patient whose data is being tracked for the Regional Health
"^DD",560,560.02,.01,21,2,0)
Connect server.
"^DD",560,560.02,.01,"DT")
3181116
"^DD",560,560.02,.02,0)
TASK^FJ20^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",560,560.02,.02,3)
Answer must be 1-20 characters in length.
"^DD",560,560.02,.02,21,0)
^.001^3^3^3190103^^^
"^DD",560,560.02,.02,21,1,0)
This is the task number for the background job that is queued to update
"^DD",560,560.02,.02,21,2,0)
the HealthShare Patient container; it will be deleted when the task 
"^DD",560,560.02,.02,21,3,0)
completes.
"^DD",560,560.02,.02,"DT")
3190103
"^DIC",560,560,0)
VPR SUBSCRIPTION^560
"^DIC",560,560,0,"GL")
^VPR(
"^DIC",560,560,"%D",0)
^^5^5^3181017^
"^DIC",560,560,"%D",1,0)
The VPR SUBSCRIPTION (#560) file contains parameters needed for tracking
"^DIC",560,560,"%D",2,0)
patient data changes on this VistA system, for updating the Regional
"^DIC",560,560,"%D",3,0)
Health Connect servers. A dynamic index informs the RHC of records that
"^DIC",560,560,"%D",4,0)
have been updated for a patient. Monitoring can also be turned off here
"^DIC",560,560,"%D",5,0)
if necessary.
"^DIC",560,"B","VPR SUBSCRIPTION",560)

**END**
**END**
