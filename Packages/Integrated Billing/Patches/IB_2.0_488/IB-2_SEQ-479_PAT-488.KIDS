Released IB*2*488 SEQ #479
Extracted from mail message
**KIDS**:IB*2.0*488^

**INSTALL NAME**
IB*2.0*488
"BLD",8891,0)
IB*2.0*488^INTEGRATED BILLING^0^3140807^y
"BLD",8891,1,0)
^^74^74^3140205^^^^
"BLD",8891,1,1,0)
The HIPAA 5010 D.0 Level II Phase 2 project includes the following
"BLD",8891,1,2,0)
modifications to the Electronic Billing V. 2.0 application:
"BLD",8891,1,3,0)
 
"BLD",8891,1,4,0)
1. Remove Ability to Print Claim at Clearinghouse
"BLD",8891,1,5,0)
   ----------------------------------------------
"BLD",8891,1,6,0)
   Modified VistA IB to remove the user's ability to force the claim to
"BLD",8891,1,7,0)
   print at the clearinghouse.  The capability to force a claim to print
"BLD",8891,1,8,0)
   at the clearinghouse was REMOVED.  Screen 10, Section 6 was modified
"BLD",8891,1,9,0)
   by removing the ability to view and select 2 'FORCE CLEARINGHOUSE
"BLD",8891,1,10,0)
   PRINT'. Selections 0 'NO FORCED PRINT' and 1 'FORCE LOCAL PRINT' still
"BLD",8891,1,11,0)
   remain and function as they always have: if this field
"BLD",8891,1,12,0)
   [Force to Print?] is set to 0, the claim will be transmitted
"BLD",8891,1,13,0)
   electronically to the payer; otherwise, if this field is set to 1, the
"BLD",8891,1,14,0)
   claim will be printed locally.
"BLD",8891,1,15,0)
 
"BLD",8891,1,16,0)
2. Prevent Creation of Claims with PAYER ID of HPRNT/SPRNT
"BLD",8891,1,17,0)
   -------------------------------------------------------
"BLD",8891,1,18,0)
   Modified VistA IB so that claims with Payer ID HPRNT/SPRNT display
"BLD",8891,1,19,0)
   a fatal error message and force the removal of the HPRNT/SPRNT
"BLD",8891,1,20,0)
   Payer ID from the Insurance Company file (#36).
"BLD",8891,1,21,0)
 
"BLD",8891,1,22,0)
3. Prevent Creation of Claims with Zero Procedures
"BLD",8891,1,23,0)
   -----------------------------------------------
"BLD",8891,1,24,0)
   Modified VistA IB to prevent the creation of claims with no procedures.
"BLD",8891,1,25,0)
   IB validation logic has been incorporated to ensure a claim that is
"BLD",8891,1,26,0)
   being created or edited cannot be submitted unless it contains at least
"BLD",8891,1,27,0)
   one procedure.  If there are no procedures on the created or edited
"BLD",8891,1,28,0)
   claim, a fatal error message will display to the user notifying them of
"BLD",8891,1,29,0)
   this condition and will not allow the claim to be submitted.  Claims
"BLD",8891,1,30,0)
   will continue to allow $0 line item(s) but these will also be required
"BLD",8891,1,31,0)
   to have at least one procedure.  The only exception to this is that
"BLD",8891,1,32,0)
   UB-04 Inpatient claims with no procedures may still be created.
"BLD",8891,1,33,0)
 
"BLD",8891,1,34,0)
4. Modify the Provider Contact Field Names for Property & Casualty Claims
"BLD",8891,1,35,0)
   ----------------------------------------------------------------------
"BLD",8891,1,36,0)
   Modified the Contact Name, Phone and Extension field names in the
"BLD",8891,1,37,0)
   IB NON/OTHER VA BILLING PROVIDER(#355.93) file so that users will see
"BLD",8891,1,38,0)
   the following prompts/labels while in the PROVIDER ID MAINTENANCE
"BLD",8891,1,39,0)
   [IBCE PROVIDER MAINT] option: P&C Contact Name, P&C Contact Phone
"BLD",8891,1,40,0)
   Number and P&C Contact Phone Extension.  The P&C Contact Phone Number
"BLD",8891,1,41,0)
   field was also updated to require a minimum of 10 digits.
"BLD",8891,1,42,0)
 
"BLD",8891,1,43,0)
5. Modify the Non-VA Facility Street Address & Zip Code Fields
"BLD",8891,1,44,0)
   -----------------------------------------------------------
"BLD",8891,1,45,0)
   Modified VistA so that the STREET ADDRESS field (#355.93,#.05) will no
"BLD",8891,1,46,0)
   longer accept PO Box and other variations of post office box as a
"BLD",8891,1,47,0)
   valid street address.  This validation does not apply to the STREET
"BLD",8891,1,48,0)
   ADDRESS LINE 2 field (#355.93,#.1).  The ZIP CODE field (#355.93,#.08)
"BLD",8891,1,49,0)
   has been modified so that only 9 digit ZIP codes are valid.  Entering
"BLD",8891,1,50,0)
   "0000" as the last four digits of a ZIP code is not acceptable.
"BLD",8891,1,51,0)
 
"BLD",8891,1,52,0)
6.  Modify Third Party Joint Inquiry [IBJ THIRD PARTY JOINT INQUIRY]
"BLD",8891,1,53,0)
    ----------------------------------------------------------------
"BLD",8891,1,54,0)
 
"BLD",8891,1,55,0)
    Modified VistA to improve the readability of ERA data in the Third 
"BLD",8891,1,56,0)
    Party Joint Inquiry [IBJ THIRD PARTY JOINT INQUIRY] option that 
"BLD",8891,1,57,0)
    display when the BC "Billing Charges" action is selected.  The
"BLD",8891,1,58,0)
    display was modified to remove the RAW DATA display for those EOBs
"BLD",8891,1,59,0)
    that contained "Message Storage Errors" and make the reported
"BLD",8891,1,60,0)
    error(s) more readable.  The formerly known "MESSAGE STORAGE ERRORS"
"BLD",8891,1,61,0)
    are now known as "DATA MISMATCH ERRORS".
"BLD",8891,1,62,0)
 
"BLD",8891,1,63,0)
7.  Include ERAs with errors on the Medicare Remittance Advice Worklist 
"BLD",8891,1,64,0)
    -------------------------------------------------------------------
"BLD",8891,1,65,0)
    Modified VistA so that claims containing an error condition from
"BLD",8891,1,66,0)
    processing the 835 will now display on the Medicare Remittance
"BLD",8891,1,67,0)
    Advice Worklist (MRW), which is accessed via the option MRA
"BLD",8891,1,68,0)
    Management WorkList [IBCE MRA MANAGEMENT].  These specific claims
"BLD",8891,1,69,0)
    will be identified on the MRW with an "!" exclamation point
"BLD",8891,1,70,0)
    displayed immediately in front of the claim number.
"BLD",8891,1,71,0)
 
"BLD",8891,1,72,0)
The routine IBCEP8 was added to this patch to reintroduce the changes
"BLD",8891,1,73,0)
that were previouly introduced by patch IB*2.0*447 which were subsequently
"BLD",8891,1,74,0)
inadvertently omitted by the patch IB*2.0*476.
"BLD",8891,4,0)
^9.64PA^36^6
"BLD",8891,4,36,0)
36
"BLD",8891,4,36,2,0)
^9.641^36^1
"BLD",8891,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",8891,4,36,2,36,1,0)
^9.6411^3.04^2
"BLD",8891,4,36,2,36,1,3.02,0)
EDI ID NUMBER - PROF
"BLD",8891,4,36,2,36,1,3.04,0)
EDI ID NUMBER - INST
"BLD",8891,4,36,222)
y^y^p^^^^n^^n
"BLD",8891,4,36,224)

"BLD",8891,4,355.93,0)
355.93
"BLD",8891,4,355.93,2,0)
^9.641^355.93^1
"BLD",8891,4,355.93,2,355.93,0)
IB NON/OTHER VA BILLING PROVIDER  (File-top level)
"BLD",8891,4,355.93,2,355.93,1,0)
^9.6411^.08^5
"BLD",8891,4,355.93,2,355.93,1,.05,0)
STREET ADDRESS
"BLD",8891,4,355.93,2,355.93,1,.08,0)
ZIP CODE
"BLD",8891,4,355.93,2,355.93,1,1.01,0)
CONTACT NAME
"BLD",8891,4,355.93,2,355.93,1,1.02,0)
CONTACT PHONE NUMBER
"BLD",8891,4,355.93,2,355.93,1,1.03,0)
CONTACT PHONE EXTENSION
"BLD",8891,4,355.93,222)
y^y^p^^^^n^^n
"BLD",8891,4,355.93,224)

"BLD",8891,4,364.5,0)
364.5
"BLD",8891,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",8891,4,364.5,224)
I $$INCLUDE^IB488PRE(5,Y)
"BLD",8891,4,364.6,0)
364.6
"BLD",8891,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",8891,4,364.6,224)
I $$INCLUDE^IB488PRE(6,Y)
"BLD",8891,4,364.7,0)
364.7
"BLD",8891,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",8891,4,364.7,224)
I $$INCLUDE^IB488PRE(7,Y)
"BLD",8891,4,399,0)
399
"BLD",8891,4,399,2,0)
^9.641^399.042^3
"BLD",8891,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",8891,4,399,2,399,1,0)
^9.6411^261^6
"BLD",8891,4,399,2,399,1,27,0)
FORCE CLAIM TO PRINT
"BLD",8891,4,399,2,399,1,236,0)
HOMEBOUND
"BLD",8891,4,399,2,399,1,237,0)
DATE LAST SEEN
"BLD",8891,4,399,2,399,1,238,0)
SPECIAL PROGRAM INDICATOR
"BLD",8891,4,399,2,399,1,261,0)
PROPERTY/CASUALTY CLAIM NUMBER
"BLD",8891,4,399,2,399,1,459,0)
FORM LOC 19-UNSPECIFIED DATA
"BLD",8891,4,399,2,399.0304,0)
PROCEDURES  (sub-file)
"BLD",8891,4,399,2,399.0304,1,0)
^9.6411^50.09^5
"BLD",8891,4,399,2,399.0304,1,19,0)
PURCHASED COST
"BLD",8891,4,399,2,399.0304,1,50.03,0)
ATTENDING NOT HOSPICE EMPLOYEE
"BLD",8891,4,399,2,399.0304,1,50.07,0)
EPSDT FLAG
"BLD",8891,4,399,2,399.0304,1,50.08,0)
SERVICE LINE COMMENT
"BLD",8891,4,399,2,399.0304,1,50.09,0)
SERVICE LINE COMMENT QUALIFIER
"BLD",8891,4,399,2,399.042,0)
REVENUE CODE  (sub-file)
"BLD",8891,4,399,2,399.042,1,0)
^9.6411^.03^1
"BLD",8891,4,399,2,399.042,1,.03,0)
UNITS OF SERVICE
"BLD",8891,4,399,222)
y^y^p^^^^n^^n
"BLD",8891,4,399,224)

"BLD",8891,4,"APDD",36,36)

"BLD",8891,4,"APDD",36,36,3.02)

"BLD",8891,4,"APDD",36,36,3.04)

"BLD",8891,4,"APDD",355.93,355.93)

"BLD",8891,4,"APDD",355.93,355.93,.05)

"BLD",8891,4,"APDD",355.93,355.93,.08)

"BLD",8891,4,"APDD",355.93,355.93,1.01)

"BLD",8891,4,"APDD",355.93,355.93,1.02)

"BLD",8891,4,"APDD",355.93,355.93,1.03)

"BLD",8891,4,"APDD",399,399)

"BLD",8891,4,"APDD",399,399,27)

"BLD",8891,4,"APDD",399,399,236)

"BLD",8891,4,"APDD",399,399,237)

"BLD",8891,4,"APDD",399,399,238)

"BLD",8891,4,"APDD",399,399,261)

"BLD",8891,4,"APDD",399,399,459)

"BLD",8891,4,"APDD",399,399.0304)

"BLD",8891,4,"APDD",399,399.0304,19)

"BLD",8891,4,"APDD",399,399.0304,50.03)

"BLD",8891,4,"APDD",399,399.0304,50.07)

"BLD",8891,4,"APDD",399,399.0304,50.08)

"BLD",8891,4,"APDD",399,399.0304,50.09)

"BLD",8891,4,"APDD",399,399.042)

"BLD",8891,4,"APDD",399,399.042,.03)

"BLD",8891,4,"B",36,36)

"BLD",8891,4,"B",355.93,355.93)

"BLD",8891,4,"B",364.5,364.5)

"BLD",8891,4,"B",364.6,364.6)

"BLD",8891,4,"B",364.7,364.7)

"BLD",8891,4,"B",399,399)

"BLD",8891,6)
1^
"BLD",8891,6.3)
184
"BLD",8891,"ABNS",0)
^9.66A^^
"BLD",8891,"ABPKG")
n^n
"BLD",8891,"INI")
IB488PRE
"BLD",8891,"INID")
^n^n
"BLD",8891,"INIT")
IBY488PO
"BLD",8891,"KRN",0)
^9.67PA^779.2^20
"BLD",8891,"KRN",.4,0)
.4
"BLD",8891,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8891,"KRN",.401,0)
.401
"BLD",8891,"KRN",.402,0)
.402
"BLD",8891,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",8891,"KRN",.402,"NM",1,0)
IB SCREEN102    FILE #399^399^0
"BLD",8891,"KRN",.402,"NM",2,0)
IB SCREEN10H    FILE #399^399^0
"BLD",8891,"KRN",.402,"NM",3,0)
IB SCREEN8    FILE #399^399^0
"BLD",8891,"KRN",.402,"NM","B","IB SCREEN102    FILE #399",1)

"BLD",8891,"KRN",.402,"NM","B","IB SCREEN10H    FILE #399",2)

"BLD",8891,"KRN",.402,"NM","B","IB SCREEN8    FILE #399",3)

"BLD",8891,"KRN",.403,0)
.403
"BLD",8891,"KRN",.5,0)
.5
"BLD",8891,"KRN",.5,"NM",0)
^9.68A^^
"BLD",8891,"KRN",.84,0)
.84
"BLD",8891,"KRN",3.6,0)
3.6
"BLD",8891,"KRN",3.8,0)
3.8
"BLD",8891,"KRN",9.2,0)
9.2
"BLD",8891,"KRN",9.8,0)
9.8
"BLD",8891,"KRN",9.8,"NM",0)
^9.68A^44^33
"BLD",8891,"KRN",9.8,"NM",6,0)
IBCECOB1^^0^B112283735
"BLD",8891,"KRN",9.8,"NM",8,0)
IBCEOB0^^0^B90917821
"BLD",8891,"KRN",9.8,"NM",9,0)
IBCBB1^^0^B116504133
"BLD",8891,"KRN",9.8,"NM",10,0)
IBCEP8B^^0^B34200270
"BLD",8891,"KRN",9.8,"NM",11,0)
IBCECOB^^0^B17969465
"BLD",8891,"KRN",9.8,"NM",12,0)
IBCECOB2^^0^B183092638
"BLD",8891,"KRN",9.8,"NM",13,0)
IBCEOB^^0^B100427168
"BLD",8891,"KRN",9.8,"NM",14,0)
IBCEOB00^^0^B89820593
"BLD",8891,"KRN",9.8,"NM",16,0)
IBCEOB1^^0^B103312053
"BLD",8891,"KRN",9.8,"NM",17,0)
IBJTBA1^^0^B55203137
"BLD",8891,"KRN",9.8,"NM",19,0)
IBCSC8^^0^B9775351
"BLD",8891,"KRN",9.8,"NM",20,0)
IBCSC10H^^0^B44927826
"BLD",8891,"KRN",9.8,"NM",21,0)
IBCNSC^^0^B26150929
"BLD",8891,"KRN",9.8,"NM",22,0)
IBCEU3^^0^B105297417
"BLD",8891,"KRN",9.8,"NM",23,0)
IBCF2^^0^B20654334
"BLD",8891,"KRN",9.8,"NM",24,0)
IBCF21^^0^B15664460
"BLD",8891,"KRN",9.8,"NM",25,0)
IBCF22^^0^B23925078
"BLD",8891,"KRN",9.8,"NM",26,0)
IBCF2P^^0^B12251451
"BLD",8891,"KRN",9.8,"NM",27,0)
IBCEF83^^0^B64584926
"BLD",8891,"KRN",9.8,"NM",28,0)
IBCF2TP^^0^B8889377
"BLD",8891,"KRN",9.8,"NM",29,0)
IBCECOB5^^0^B17731543
"BLD",8891,"KRN",9.8,"NM",30,0)
IBCECSA5^^0^B69687266
"BLD",8891,"KRN",9.8,"NM",32,0)
IBCBB2^^0^B54197066
"BLD",8891,"KRN",9.8,"NM",33,0)
IBCEF2^^0^B64374819
"BLD",8891,"KRN",9.8,"NM",34,0)
IBCSCH^^0^B50914116
"BLD",8891,"KRN",9.8,"NM",36,0)
IBCU7^^0^B76838380
"BLD",8891,"KRN",9.8,"NM",37,0)
IBCNS2^^0^B24154529
"BLD",8891,"KRN",9.8,"NM",38,0)
IBCECSA6^^0^B168448681
"BLD",8891,"KRN",9.8,"NM",39,0)
IBCF23^^0^B46459420
"BLD",8891,"KRN",9.8,"NM",41,0)
IBCEF22^^0^B79219296
"BLD",8891,"KRN",9.8,"NM",42,0)
IBCBB7^^0^B28157499
"BLD",8891,"KRN",9.8,"NM",43,0)
IBCEF3^^0^B47162871
"BLD",8891,"KRN",9.8,"NM",44,0)
IBCEF31^^0^B11345418
"BLD",8891,"KRN",9.8,"NM","B","IBCBB1",9)

"BLD",8891,"KRN",9.8,"NM","B","IBCBB2",32)

"BLD",8891,"KRN",9.8,"NM","B","IBCBB7",42)

"BLD",8891,"KRN",9.8,"NM","B","IBCECOB",11)

"BLD",8891,"KRN",9.8,"NM","B","IBCECOB1",6)

"BLD",8891,"KRN",9.8,"NM","B","IBCECOB2",12)

"BLD",8891,"KRN",9.8,"NM","B","IBCECOB5",29)

"BLD",8891,"KRN",9.8,"NM","B","IBCECSA5",30)

"BLD",8891,"KRN",9.8,"NM","B","IBCECSA6",38)

"BLD",8891,"KRN",9.8,"NM","B","IBCEF2",33)

"BLD",8891,"KRN",9.8,"NM","B","IBCEF22",41)

"BLD",8891,"KRN",9.8,"NM","B","IBCEF3",43)

"BLD",8891,"KRN",9.8,"NM","B","IBCEF31",44)

"BLD",8891,"KRN",9.8,"NM","B","IBCEF83",27)

"BLD",8891,"KRN",9.8,"NM","B","IBCEOB",13)

"BLD",8891,"KRN",9.8,"NM","B","IBCEOB0",8)

"BLD",8891,"KRN",9.8,"NM","B","IBCEOB00",14)

"BLD",8891,"KRN",9.8,"NM","B","IBCEOB1",16)

"BLD",8891,"KRN",9.8,"NM","B","IBCEP8B",10)

"BLD",8891,"KRN",9.8,"NM","B","IBCEU3",22)

"BLD",8891,"KRN",9.8,"NM","B","IBCF2",23)

"BLD",8891,"KRN",9.8,"NM","B","IBCF21",24)

"BLD",8891,"KRN",9.8,"NM","B","IBCF22",25)

"BLD",8891,"KRN",9.8,"NM","B","IBCF23",39)

"BLD",8891,"KRN",9.8,"NM","B","IBCF2P",26)

"BLD",8891,"KRN",9.8,"NM","B","IBCF2TP",28)

"BLD",8891,"KRN",9.8,"NM","B","IBCNS2",37)

"BLD",8891,"KRN",9.8,"NM","B","IBCNSC",21)

"BLD",8891,"KRN",9.8,"NM","B","IBCSC10H",20)

"BLD",8891,"KRN",9.8,"NM","B","IBCSC8",19)

"BLD",8891,"KRN",9.8,"NM","B","IBCSCH",34)

"BLD",8891,"KRN",9.8,"NM","B","IBCU7",36)

"BLD",8891,"KRN",9.8,"NM","B","IBJTBA1",17)

"BLD",8891,"KRN",19,0)
19
"BLD",8891,"KRN",19,"NM",0)
^9.68A^^
"BLD",8891,"KRN",19.1,0)
19.1
"BLD",8891,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",8891,"KRN",101,0)
101
"BLD",8891,"KRN",101,"NM",0)
^9.68A^^
"BLD",8891,"KRN",409.61,0)
409.61
"BLD",8891,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",8891,"KRN",771,0)
771
"BLD",8891,"KRN",779.2,0)
779.2
"BLD",8891,"KRN",870,0)
870
"BLD",8891,"KRN",8989.51,0)
8989.51
"BLD",8891,"KRN",8989.52,0)
8989.52
"BLD",8891,"KRN",8994,0)
8994
"BLD",8891,"KRN","B",.4,.4)

"BLD",8891,"KRN","B",.401,.401)

"BLD",8891,"KRN","B",.402,.402)

"BLD",8891,"KRN","B",.403,.403)

"BLD",8891,"KRN","B",.5,.5)

"BLD",8891,"KRN","B",.84,.84)

"BLD",8891,"KRN","B",3.6,3.6)

"BLD",8891,"KRN","B",3.8,3.8)

"BLD",8891,"KRN","B",9.2,9.2)

"BLD",8891,"KRN","B",9.8,9.8)

"BLD",8891,"KRN","B",19,19)

"BLD",8891,"KRN","B",19.1,19.1)

"BLD",8891,"KRN","B",101,101)

"BLD",8891,"KRN","B",409.61,409.61)

"BLD",8891,"KRN","B",771,771)

"BLD",8891,"KRN","B",779.2,779.2)

"BLD",8891,"KRN","B",870,870)

"BLD",8891,"KRN","B",8989.51,8989.51)

"BLD",8891,"KRN","B",8989.52,8989.52)

"BLD",8891,"KRN","B",8994,8994)

"BLD",8891,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",8891,"QUES",0)
^9.62^^
"BLD",8891,"REQB",0)
^9.611^10^6
"BLD",8891,"REQB",5,0)
IB*2.0*451^1
"BLD",8891,"REQB",6,0)
IB*2.0*476^1
"BLD",8891,"REQB",7,0)
IB*2.0*133^1
"BLD",8891,"REQB",8,0)
IB*2.0*458^1
"BLD",8891,"REQB",9,0)
IB*2.0*473^1
"BLD",8891,"REQB",10,0)
IB*2.0*489^1
"BLD",8891,"REQB","B","IB*2.0*133",7)

"BLD",8891,"REQB","B","IB*2.0*451",5)

"BLD",8891,"REQB","B","IB*2.0*458",8)

"BLD",8891,"REQB","B","IB*2.0*473",9)

"BLD",8891,"REQB","B","IB*2.0*476",6)

"BLD",8891,"REQB","B","IB*2.0*489",10)

"DATA",364.5,91,0)
N-OTH CLAIM QUAL (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,91,1)
S IBXDATA=$P($G(^DGCR(399,IBXIEN,"U4")),U,2) S IBXDATA=$S(IBXDATA]"":"Y4",1:"")
"DATA",364.5,91,3,0)
^364.53^2^2^3140409^^^^
"DATA",364.5,91,3,1,0)
This is the Qualifier for the Other Claim ID. It will always be "Y4" if 
"DATA",364.5,91,3,2,0)
there is a Property Casualty claim number.
"DATA",364.5,110,0)
N-OTHER CLAIM ID (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,110,1)
S IBXDATA=$P($G(^DGCR(399,IBXIEN,"U4")),U,2)
"DATA",364.5,110,3,0)
^364.53^2^2^3140116^^
"DATA",364.5,110,3,1,0)
This Claim ID is designated by NUCC. It is the Property and Casualty 
"DATA",364.5,110,3,2,0)
Number.
"DATA",364.5,122,0)
N-CLAIM CODES (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,122,1)
S IBXDATA=$$CLMCDS^IBCF21(IBXIEN)
"DATA",364.5,122,3,0)
^364.53^1^1^3140116^^^
"DATA",364.5,122,3,1,0)
These are the claim codes associated with the claim.
"DATA",364.5,130,0)
N-REFER PROV QUAL (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,130,1)
S IBXDATA=$$PRQUAL^IBCEF83(IBXIEN)
"DATA",364.5,130,3,0)
^364.53^3^3^3140220^^^
"DATA",364.5,130,3,1,0)
Check for a Referring Doctor.  If there is one, set the Qualifier to 
"DATA",364.5,130,3,2,0)
"DN". If there is not a Referring Doctor, check for a Supervising Doctor. 
"DATA",364.5,130,3,3,0)
If there is a supervising doctor set the Qualifier to "DQ".
"DATA",364.5,132,0)
N-CUR ILL QUAL (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,132,1)
N IBZ S IBXDATA=$P($$QUAL^IBCF22(IBXIEN,14,.IBXSAVE,.IBZ),U,2)
"DATA",364.5,132,3,0)
^^1^1^3140114^
"DATA",364.5,132,3,1,0)
Qualifier for box 14.
"DATA",364.5,139,0)
N-OTHER DATE QUAL (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,139,1)
N IBZ S IBXDATA=$P($$QUAL^IBCF22(IBXIEN,15,.IBXSAVE,.IBZ),U,2)
"DATA",364.5,139,2)
IBXDATA
"DATA",364.5,139,3,0)
^364.53^1^1^3140213^^^^
"DATA",364.5,139,3,1,0)
Qualifier for box 15.
"DATA",364.5,140,0)
N-CUR ILL DATE (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,140,1)
N IBZ S IBXDATA=$P($$QUAL^IBCF22(IBXIEN,14,.IBXSAVE,.IBZ),U,1) I $D(IBZ) M IBXSAVE("DATE")=IBZ
"DATA",364.5,140,3,0)
^364.53^1^1^3140115^^
"DATA",364.5,140,3,1,0)
This is either LMP or Onset of Illness date.
"DATA",364.5,141,0)
N-OTHER DATE (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,141,1)
N IBZ S IBXDATA=$P($$QUAL^IBCF22(IBXIEN,15,.IBXSAVE,.IBZ),U,1) I $D(IBZ) M IBXSAVE("DATE")=IBZ
"DATA",364.5,141,3,0)
^^3^3^3140115^
"DATA",364.5,141,3,1,0)
This is accident date or Last x-ray date or Acute Manifestation of 
"DATA",364.5,141,3,2,0)
Chronic Condition date or Prescription date or Initial Treatment Date or 
"DATA",364.5,141,3,3,0)
Latest Visit/Consultation date.
"DATA",364.5,149,0)
N-DIAGNOSIS IND^N^E^I^399^^^
"DATA",364.5,149,1)
S IBXDATA=$$DXIND^IBCF2(IBXIEN)
"DATA",364.5,149,3,0)
^364.53^2^2^3140129^^^
"DATA",364.5,149,3,1,0)
Determine if diagnosis codes are ICD9 or ICD10. The value will be a 9 for 
"DATA",364.5,149,3,2,0)
ICD9 codes and a 0 for ICD10 codes,
"DATA",364.5,161,0)
N-DIAGNOSIS CODE 5 (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,161,1)
D:'$D(IBXSAVE("DX")) F^IBCEF("N-DIAGNOSES") S IBXDATA=$G(IBXSAVE("DX",5))
"DATA",364.5,161,3,0)
^364.53^4^4^3140407^^^^
"DATA",364.5,161,3,1,0)
Data element relies on previously extracted data in array IBXSAVE("DX") 
"DATA",364.5,161,3,2,0)
from the HCFA DIAGNOSES.  If IBXSAVE(""DX"") does not exist, extract the 
"DATA",364.5,161,3,3,0)
field that sets it.  The second in the sequence of diagnoses for bill 
"DATA",364.5,161,3,4,0)
IBXIEN for the HCFA 1500. This is the internal diagnosis code (ICD9).
"DATA",364.5,182,0)
N-DIAGNOSIS CODE 6 (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,182,1)
D:'$D(IBXSAVE("DX")) F^IBCEF("N-DIAGNOSES") S IBXDATA=$G(IBXSAVE("DX",6))
"DATA",364.5,182,3,0)
^^4^4^3140115^
"DATA",364.5,182,3,1,0)
Data element relies on previously extracted data in array IBXSAVE("DX") 
"DATA",364.5,182,3,2,0)
from the HCFA DIAGNOSES.  If IBXSAVE(""DX"") does not exist, extract the 
"DATA",364.5,182,3,3,0)
field that sets it.  The second in the sequence of diagnoses for bill 
"DATA",364.5,182,3,4,0)
IBXIEN for the HCFA 1500. This is the internal diagnosis code (ICD9).
"DATA",364.5,213,0)
N-DIAGNOSIS CODE 7 (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,213,1)
D:'$D(IBXSAVE("DX")) F^IBCEF("N-DIAGNOSES") S IBXDATA=$G(IBXSAVE("DX",7))
"DATA",364.5,213,3,0)
^^4^4^3140115^
"DATA",364.5,213,3,1,0)
Data element relies on previously extracted data in array IBXSAVE("DX") 
"DATA",364.5,213,3,2,0)
from the HCFA DIAGNOSES.  If IBXSAVE(""DX"") does not exist, extract the 
"DATA",364.5,213,3,3,0)
field that sets it.  The second in the sequence of diagnoses for bill 
"DATA",364.5,213,3,4,0)
IBXIEN for the HCFA 1500. This is the internal diagnosis code (ICD9).
"DATA",364.5,219,0)
N-DIAGNOSIS CODE 8 (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,219,1)
D:'$D(IBXSAVE("DX")) F^IBCEF("N-DIAGNOSES") S IBXDATA=$G(IBXSAVE("DX",8))
"DATA",364.5,219,3,0)
^^4^4^3140115^
"DATA",364.5,219,3,1,0)
Data element relies on previously extracted data in array IBXSAVE("DX") 
"DATA",364.5,219,3,2,0)
from the HCFA DIAGNOSES.  If IBXSAVE(""DX"") does not exist, extract the 
"DATA",364.5,219,3,3,0)
field that sets it.  The second in the sequence of diagnoses for bill 
"DATA",364.5,219,3,4,0)
IBXIEN for the HCFA 1500. This is the internal diagnosis code (ICD9).
"DATA",364.5,237,0)
N-DIAGNOSIS CODE 9 (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,237,1)
D:'$D(IBXSAVE("DX")) F^IBCEF("N-DIAGNOSES") S IBXDATA=$G(IBXSAVE("DX",9))
"DATA",364.5,237,3,0)
^^4^4^3140115^
"DATA",364.5,237,3,1,0)
Data element relies on previously extracted data in array IBXSAVE("DX") 
"DATA",364.5,237,3,2,0)
from the HCFA DIAGNOSES.  If IBXSAVE(""DX"") does not exist, extract the 
"DATA",364.5,237,3,3,0)
field that sets it.  The second in the sequence of diagnoses for bill 
"DATA",364.5,237,3,4,0)
IBXIEN for the HCFA 1500. This is the internal diagnosis code (ICD9).
"DATA",364.5,355,0)
N-DIAGNOSIS CODE 10(HCFA 1500)^N^E^I^399^^^
"DATA",364.5,355,1)
D:'$D(IBXSAVE("DX")) F^IBCEF("N-DIAGNOSES") S IBXDATA=$G(IBXSAVE("DX",10))
"DATA",364.5,355,3,0)
^^4^4^3140115^
"DATA",364.5,355,3,1,0)
Data element relies on previously extracted data in array IBXSAVE("DX") 
"DATA",364.5,355,3,2,0)
from the HCFA DIAGNOSES.  If IBXSAVE(""DX"") does not exist, extract the 
"DATA",364.5,355,3,3,0)
field that sets it.  The second in the sequence of diagnoses for bill 
"DATA",364.5,355,3,4,0)
IBXIEN for the HCFA 1500. This is the internal diagnosis code (ICD9).
"DATA",364.5,356,0)
N-DIAGNOSIS CODE 11(HCFA 1500)^N^E^I^399^^^
"DATA",364.5,356,1)
D:'$D(IBXSAVE("DX")) F^IBCEF("N-DIAGNOSES") S IBXDATA=$G(IBXSAVE("DX",11))
"DATA",364.5,356,3,0)
^^4^4^3140115^
"DATA",364.5,356,3,1,0)
Data element relies on previously extracted data in array IBXSAVE("DX") 
"DATA",364.5,356,3,2,0)
from the HCFA DIAGNOSES.  If IBXSAVE(""DX"") does not exist, extract the 
"DATA",364.5,356,3,3,0)
field that sets it.  The second in the sequence of diagnoses for bill 
"DATA",364.5,356,3,4,0)
IBXIEN for the HCFA 1500. This is the internal diagnosis code (ICD9).
"DATA",364.5,376,0)
N-DIAGNOSIS CODE 12(HCFA 1500)^N^E^I^399^^^
"DATA",364.5,376,1)
D:'$D(IBXSAVE("DX")) F^IBCEF("N-DIAGNOSES") S IBXDATA=$G(IBXSAVE("DX",12))
"DATA",364.5,376,3,0)
^^4^4^3140115^
"DATA",364.5,376,3,1,0)
Data element relies on previously extracted data in array IBXSAVE("DX") 
"DATA",364.5,376,3,2,0)
from the HCFA DIAGNOSES.  If IBXSAVE(""DX"") does not exist, extract the 
"DATA",364.5,376,3,3,0)
field that sets it.  The second in the sequence of diagnoses for bill 
"DATA",364.5,376,3,4,0)
IBXIEN for the HCFA 1500. This is the internal diagnosis code (ICD9).
"DATA",364.5,377,0)
N-PROVIDER NAME (HCFA 1500)^N^E^I^399^^^
"DATA",364.5,377,1)
S IBXDATA=$$PROVNM^IBCEF83(IBXIEN)
"DATA",364.5,377,3,0)
^364.53^1^1^3140129^^
"DATA",364.5,377,3,1,0)
This is either the referring provider or the supervising provider.
"DATA",364.6,14,0)
8^N^^35^1^^0^7^2^BLANK^^1
"DATA",364.6,15,0)
8^N^^35^1^^0^6^30^BLANK^^1
"DATA",364.6,29,0)
8^N^^40^1^^0^3^2^BLANK^^1
"DATA",364.6,40,0)
8^N^^40^1^^0^14^1^BLANK^^1
"DATA",364.6,43,0)
8^N^^45^1^^0^2^30^BLANK^^1
"DATA",364.6,52,0)
8^N^^50^1^^0^12^18^Estimated Claim Due Amount^^1^0
"DATA",364.6,53,0)
8^N^^50^1^^0^13^18^Total Claim Charge Amount^^1^0
"DATA",364.6,59,0)
8^N^^50^1^^0^19^8^BLANK^^1
"DATA",364.6,66,0)
8^N^^50^1^^0^26^3^BLANK^^1
"DATA",364.6,67,0)
8^N^^50^1^^0^27^3^BLANK^^1
"DATA",364.6,104,0)
8^N^^105^1^^0^6^8^BLANK^^1
"DATA",364.6,105,0)
8^N^^105^1^^0^7^1^BLANK^^1
"DATA",364.6,109,0)
8^N^^110^1^^0^8^30^BLANK^^1
"DATA",364.6,110,0)
8^N^^110^1^^0^9^2^BLANK^^1
"DATA",364.6,117,0)
8^N^^180^1^^0^8^2^BLANK^^1^0
"DATA",364.6,119,0)
8^N^^180^1^^0^11^2^Diagnosis Code Pointer(1)^^1
"DATA",364.6,120,0)
8^N^^180^1^^0^12^2^Diagnosis Code Pointer(2)^^1
"DATA",364.6,121,0)
8^N^^180^1^^0^13^2^Diagnosis Code Pointer(3)^^1
"DATA",364.6,122,0)
8^N^^180^1^^0^14^2^Diagnosis Code Pointer(4)^^1
"DATA",364.6,127,0)
8^N^^185^1^^0^6^18^Service Line Rate Amt^^1
"DATA",364.6,130,0)
8^N^^185^1^^0^9^18^Service Line Charge Amt^^1
"DATA",364.6,136,0)
8^N^^190^1^^0^5^3^BLANK^^1
"DATA",364.6,579,0)
8^N^^185^1^^0^12^18^Service Line Non-covered Charge Amt^^1
"DATA",364.6,784,0)
8^N^^50^1^^0^34^3^BLANK^^1
"DATA",364.6,814,0)
8^N^^115^1^^0^8^15^BLANK^^1
"DATA",364.6,815,0)
8^N^^115^1^^0^9^15^BLANK^^1
"DATA",364.6,960,0)
8^N^^50^1^^0^37^1^BLANK^0^1
"DATA",364.6,961,0)
8^N^^115^1^^0^11^15^BLANK^0^1
"DATA",364.6,964,0)
8^N^^115^1^^0^13^3^BLANK^0^1
"DATA",364.6,971,0)
8^N^^55^1^^0^9^10^BLANK^0^1
"DATA",364.6,987,0)
8^N^^35^1^^0^12^20^BLANK^0^1
"DATA",364.6,988,0)
8^N^^110^1^^0^10^20^BLANK^0^1
"DATA",364.6,1097,0)
8^N^^28^1^^0^10^2^BLANK^0^1
"DATA",364.6,1098,0)
8^N^^28^1^^0^11^20^BLANK^0^1
"DATA",364.6,1099,0)
8^N^^28^1^^0^12^2^BLANK^0^1
"DATA",364.6,1100,0)
8^N^^28^1^^0^13^20^BLANK^0^1
"DATA",364.6,1101,0)
8^N^^28^1^^0^14^2^BLANK^0^1
"DATA",364.6,1102,0)
8^N^^28^1^^0^15^20^BLANK^^1
"DATA",364.6,1103,0)
8^N^^28^1^^0^16^2^BLANK^0^1
"DATA",364.6,1104,0)
8^N^^28^1^^0^17^20^BLANK^0^1
"DATA",364.6,1194,0)
8^N^^55^1^^0^11^3^BLANK^0^1
"DATA",364.6,1195,0)
8^N^^55^1^^0^13^2^BLANK^0^1
"DATA",364.6,1196,0)
8^N^^55^1^^0^14^1^BLANK^0^1
"DATA",364.6,1214,0)
8^N^^57^1^^0^13^2^BLANK^0^1
"DATA",364.6,1215,0)
8^N^^57^1^^0^14^20^BLANK^0^1
"DATA",364.6,1216,0)
8^N^^57^1^^0^15^2^BLANK^0^1
"DATA",364.6,1217,0)
8^N^^57^1^^0^16^20^BLANK^0^1
"DATA",364.6,1232,0)
8^N^^98^1^^0^10^2^BLANK^0^1
"DATA",364.6,1233,0)
8^N^^98^1^^0^11^30^BLANK^0^1
"DATA",364.6,1242,0)
8^N^^99^1^^0^10^2^BLANK^0^1
"DATA",364.6,1243,0)
8^N^^99^1^^0^11^30^BLANK^0^1
"DATA",364.6,1252,0)
8^N^^100^1^^0^10^2^BLANK^^1
"DATA",364.6,1253,0)
8^N^^100^1^^0^11^30^BLANK^^1
"DATA",364.6,1260,0)
8^N^^101^1^^0^8^2^BLANK^0^1
"DATA",364.6,1261,0)
8^N^^101^1^^0^9^30^BLANK^0^1
"DATA",364.6,1262,0)
8^N^^101^1^^0^10^2^BLANK^0^1
"DATA",364.6,1263,0)
8^N^^101^1^^0^11^30^BLANK^0^1
"DATA",364.6,1285,0)
8^N^^104^1^^0^10^2^BLANK^0^1
"DATA",364.6,1286,0)
8^N^^104^1^^0^11^30^BLANK^0^1
"DATA",364.6,1296,0)
8^N^^113^1^^0^11^2^BLANK^0^1
"DATA",364.6,1297,0)
8^N^^113^1^^0^12^30^BLANK^0^1
"DATA",364.6,1298,0)
8^N^^113^1^^0^13^2^BLANK^0^1
"DATA",364.6,1299,0)
8^N^^113^1^^0^14^30^BLANK^0^1
"DATA",364.6,1321,0)
8^N^^20^1^1^0^14^1^BLANK^0^1^0
"DATA",364.6,1474,0)
2^N^^1^39^^1^29^8^DIAGNOSIS CODE 3 (BX-21.3)
"DATA",364.6,1477,0)
2^N^^1^39^^1^16^8^DIAGNOSIS CODE 2 (BX-21.2)
"DATA",364.6,1478,0)
2^N^^1^39^^1^42^8^DIAGNOSIS CODE 4 (BX-21.4)
"DATA",364.6,1487,0)
2^N^^1^44^^1^50^9^CHARGES (BX-24F)
"DATA",364.6,1805,0)
8^N^^38^1^^0^6^3^BLANK^0^1
"DATA",364.6,1806,0)
8^N^^38^1^^0^7^30^BLANK^0^1
"DATA",364.6,1807,0)
8^N^^38^1^^0^8^3^BLANK^0^1
"DATA",364.6,1808,0)
8^N^^38^1^^0^9^30^BLANK^0^1
"DATA",364.6,1839,0)
8^N^^114^1^^0^9^3^BLANK^0^1
"DATA",364.6,1840,0)
8^N^^114^1^^0^10^30^BLANK^0^1
"DATA",364.6,1927,0)
8^N^^16^1^^0^4^35^BLANK^^1
"DATA",364.6,1928,0)
8^N^^16^1^^0^5^2^BLANK^^1
"DATA",364.6,1929,0)
8^N^^16^1^^0^6^17^BLANK^^1
"DATA",364.6,2029,0)
8^N^^57^1^^0^17^2^BLANK^0^1
"DATA",364.6,2030,0)
8^N^^57^1^^0^18^35^BLANK^0^1
"DATA",364.6,2031,0)
8^N^^57^1^^0^19^2^BLANK^0^1
"DATA",364.6,2032,0)
8^N^^57^1^^0^20^10^BLANK^0^1
"DATA",364.6,2033,0)
8^N^^57^1^^0^21^2^BLANK^0^1
"DATA",364.6,2034,0)
8^N^^57^1^^0^22^10^BLANK^0^1
"DATA",364.6,2208,0)
8^^^16^1^^0^12^9^BLANK^0^1
"DATA",364.6,2227,0)
8^N^^115^1^^0^7^50^Other Payer Claim Control number^^1
"DATA",364.6,2230,0)
2^N^^1^23^^^53^25^CLAIM ID (BX 11b)
"DATA",364.6,2234,0)
2^N^^1^23^^^50^2^CLAIM QUAL (BX 11b)
"DATA",364.6,2238,0)
2^N^^1^35^^^4^26^REFERRING PROV NAME (BX 17)
"DATA",364.6,2239,0)
2^N^^1^35^^^1^2^REFERRING PROV QUAL (BX 17)
"DATA",364.6,2240,0)
2^N^^1^33^^^16^3^CURRENT DATE QUAL (BX 14)
"DATA",364.6,2241,0)
2^N^^1^33^^^31^3^OTHER DATE QUAL (BX 15)
"DATA",364.6,2242,0)
2^N^^1^38^^^42^1^DIAGNOSIS IND (BOX 21A)
"DATA",364.6,2243,0)
2^N^^1^40^^^3^8^DIAGNOSIS CODE 5 (BX-21.5)
"DATA",364.6,2244,0)
2^N^^1^40^^^16^8^DIAGNOSIS CODE 6 (BX-21.6)
"DATA",364.6,2245,0)
2^N^^1^40^^^29^8^DIAGNOSIS CODE 7 (BX-21.7)
"DATA",364.6,2246,0)
2^N^^1^40^^^42^8^DIAGNOSIS CODE 8 (BX-21.8)
"DATA",364.6,2247,0)
2^N^^1^41^^^3^8^DIAGNOSIS CODE 9 (BX-21.9)
"DATA",364.6,2248,0)
2^N^^1^41^^^16^8^DIAGNOSIS CODE 10 (BX-21.10)
"DATA",364.6,2249,0)
2^N^^1^41^^^29^8^DIAGNOSIS CODE 11 (BX-21.11)
"DATA",364.6,2250,0)
2^N^^1^41^^^42^8^DIAGNOSIS CODE 12 (BX-21.12)
"DATA",364.7,22,0)
15^N^5^^^^N
"DATA",364.7,22,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,22,3,0)
^364.73^2^2^3140425^^^^
"DATA",364.7,22,3,1,0)
Retrieves insured employment info from IBXSAVE array previously extracted.
"DATA",364.7,22,3,2,0)
If data element's value is null, do not output.
"DATA",364.7,23,0)
14^N^5^^^^N
"DATA",364.7,23,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,23,3,0)
^364.73^2^2^3140425^^^^
"DATA",364.7,23,3,1,0)
Retrieves insured employment info from IBXSAVE array previously extracted.
"DATA",364.7,23,3,2,0)
If data element's value is null, do not output.
"DATA",364.7,29,0)
59^N^90^^^^N
"DATA",364.7,29,1)
K IBXDATA
"DATA",364.7,29,3,0)
^364.73^2^2^3140425^^^^
"DATA",364.7,29,3,1,0)
Format data element in CCYYMMDD date format.  If data element's value is
"DATA",364.7,29,3,2,0)
null, do not output.
"DATA",364.7,42,0)
29^N^5^^^^N
"DATA",364.7,42,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,42,3,0)
^364.73^2^2^3140425^^^^
"DATA",364.7,42,3,1,0)
Calculates the X12 code for employment status from the DHCP code extracted.
"DATA",364.7,42,3,2,0)
If data element's value is null, do not output.
"DATA",364.7,61,0)
40^N^5^^^^N
"DATA",364.7,61,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,61,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,61,3,1,0)
Calculates the X12 code for marital status from the DHCP code extracted.
"DATA",364.7,63,0)
43^N^5^^^^N
"DATA",364.7,63,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,63,3,1,0)
If data element's value is null, do not output.
"DATA",364.7,122,0)
104^N^5^^^^N
"DATA",364.7,122,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,122,3,0)
^364.73^4^4^3140425^^^^
"DATA",364.7,122,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,122,3,2,0)
possible for the data element in the previously extract IBXSAVE array.  If
"DATA",364.7,122,3,3,0)
any other insurance demographics data is found, the data is formatted as a
"DATA",364.7,122,3,4,0)
date in CCYYMMDD format.
"DATA",364.7,124,0)
105^N^5^^^^N
"DATA",364.7,124,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,124,3,0)
^364.73^4^4^3140425^^^^
"DATA",364.7,124,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,124,3,2,0)
possible for the data element in the previously extract IBXSAVE array.  If
"DATA",364.7,124,3,3,0)
any other insurance demographics data is found, the data is formatted as a
"DATA",364.7,124,3,4,0)
'U' if not M or F to indicate the sex of the other insured.
"DATA",364.7,128,0)
109^N^5^^^^N
"DATA",364.7,128,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,128,3,0)
^364.73^3^3^3140425^^^^
"DATA",364.7,128,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,128,3,2,0)
possible for the data element in the previously extract IBXSAVE array.  If
"DATA",364.7,128,3,3,0)
any other insurance employer data is found, the data is output.
"DATA",364.7,129,0)
110^N^5^^^^N
"DATA",364.7,129,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,129,3,0)
^364.73^4^4^3140425^^^^
"DATA",364.7,129,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,129,3,2,0)
possible for the data element in the previously extract IBXSAVE array.  If
"DATA",364.7,129,3,3,0)
any other insurance employer data is found, the data is formatted as the 2
"DATA",364.7,129,3,4,0)
character state abbreviation.
"DATA",364.7,142,0)
136^N^5^^^^N
"DATA",364.7,142,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,142,3,0)
^364.73^3^3^3140425^^^
"DATA",364.7,142,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,142,3,2,0)
possible for the data element in the previously extract IBXSAVE array.  If
"DATA",364.7,142,3,3,0)
any service line data is found, the data is output.
"DATA",364.7,167,0)
114^N^5^^^^N
"DATA",364.7,167,1)
K IBXDATA S IBXNOREQ=$$NFT^IBCEF1(2,IBXIEN) N Z S Z=0 F  S Z=$O(IBXSAVE("OUTPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("OUTPT",Z),U,8)="":$$DOLLAR^IBCEFG1("0.00"),1:$$DOLLAR^IBCEFG1($P(IBXSAVE("OUTPT",Z),U,8)*$P(IBXSAVE("OUTPT",Z),U,9)))
"DATA",364.7,167,3,0)
^364.73^5^5^3140211^^^^
"DATA",364.7,167,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,167,3,2,0)
possible for the data element in the previously extract IBXSAVE array. The
"DATA",364.7,167,3,3,0)
data is calculated by unit charge * # of units.  If any service line data is
"DATA",364.7,167,3,4,0)
found, the data is formatted as a numeric including cents, without the
"DATA",364.7,167,3,5,0)
decimal.
"DATA",364.7,170,0)
117^N^5^^^^N
"DATA",364.7,170,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,170,3,0)
^364.73^3^3^3140425^^^^
"DATA",364.7,170,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,170,3,2,0)
possible for the data element in the previously extract IBXSAVE array.  If
"DATA",364.7,170,3,3,0)
any service line data is found, the data is output.
"DATA",364.7,180,0)
130^N^5^^^^N
"DATA",364.7,180,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("INPT",Z),U,5)="":$$DOLLAR^IBCEFG1("0.00"),1:$$DOLLAR^IBCEFG1($P(IBXSAVE("INPT",Z),U,5)))
"DATA",364.7,180,3,0)
^364.73^4^4^3140211^^^^
"DATA",364.7,180,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,180,3,2,0)
possible for the data element in the previously extract IBXSAVE array.  If
"DATA",364.7,180,3,3,0)
any service line data is found, the data is formatted as a numeric including
"DATA",364.7,180,3,4,0)
cents, without the decimal.
"DATA",364.7,193,0)
1035^N^5^^^^N^0
"DATA",364.7,193,1)
K IBXDATA S IBIFN=IBXIEN S IBXDATA="A"
"DATA",364.7,193,3,0)
^364.73^2^2^3140324^^^
"DATA",364.7,193,3,1,0)
ALWAYS SET TO "A".
"DATA",364.7,193,3,2,0)
MEDICARE ASSIGNMENT CODE: A = ASSIGNED and C = Not Assigned.
"DATA",364.7,378,0)
1097^N^5^^^^N
"DATA",364.7,378,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,379,0)
1098^N^5^^^^N
"DATA",364.7,379,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,380,0)
1099^N^5^^^^N
"DATA",364.7,380,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,381,0)
1100^N^5^^^^N
"DATA",364.7,381,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,382,0)
1101^N^5^^^^N
"DATA",364.7,382,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,383,0)
1102^N^5^^^^N
"DATA",364.7,383,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,384,0)
1103^N^5^^^^N
"DATA",364.7,384,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,385,0)
1104^N^5^^^^N
"DATA",364.7,385,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,385,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,385,3,1,0)
If header data has already been extracted, array ^TMP("IBHDR1",$J) will already exist.  Don't want to extract this field again, so kill data element so there is no output.
"DATA",364.7,391,0)
1194^N^5^^^^N
"DATA",364.7,391,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,391,3,0)
^364.73^5^5^3140425^^^
"DATA",364.7,391,3,1,0)
SUB-11
"DATA",364.7,391,3,2,0)
(P) 2300/AMT(2)/01
"DATA",364.7,391,3,3,0)
Qualifier for the total purchased services charge amount field.  Output 
"DATA",364.7,391,3,4,0)
the qualifier if IBXSAVE("PS$") is true because this indicates a dollar 
"DATA",364.7,391,3,5,0)
amount exists in SUB-7.
"DATA",364.7,392,0)
1195^N^5^^^^N
"DATA",364.7,392,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,392,3,0)
^364.73^5^5^3140425^^
"DATA",364.7,392,3,1,0)
For purchased services, must pass checks in $$SUB1OK.  If true, then 
"DATA",364.7,392,3,2,0)
always 24 qualifer.
"DATA",364.7,392,3,3,0)
 
"DATA",364.7,392,3,4,0)
esg - 6/25/09 - IB*2*400 - Tie SUB-9 and SUB-13 together as an
"DATA",364.7,392,3,5,0)
ID/qualifier pair for purchased services.
"DATA",364.7,393,0)
1196^N^5^^^^N
"DATA",364.7,393,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,393,3,0)
^364.73^2^2^3140425^^
"DATA",364.7,393,3,1,0)
For purchased services must pass checks in $$SUB1OK.  If true, this is 
"DATA",364.7,393,3,2,0)
always a "2" for non-person.
"DATA",364.7,410,0)
1214^N^5^^^^N
"DATA",364.7,410,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,410,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,410,3,1,0)
Output the fourth 'other' id qualifier.
"DATA",364.7,411,0)
1215^N^5^^^^N
"DATA",364.7,411,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,411,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,411,3,1,0)
Output the fourth 'other' id.
"DATA",364.7,412,0)
1216^N^5^^^^N
"DATA",364.7,412,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,412,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,412,3,1,0)
Output the fifth 'other' id qualifier.
"DATA",364.7,413,0)
1217^N^5^^^^N
"DATA",364.7,413,1)
K IDXDATA
"DATA",364.7,413,3,0)
^364.73^2^2^3140425^^^^
"DATA",364.7,413,3,1,0)
Output the fifth 'other' id.
"DATA",364.7,413,3,2,0)
Delete the 'filtered' id array IBXSAVE("PROVINF_FAC",IBXIEN).
"DATA",364.7,428,0)
1232^N^5^^^^N
"DATA",364.7,428,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,429,0)
1233^N^5^^^^N
"DATA",364.7,429,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,438,0)
1242^N^5^^^^N
"DATA",364.7,438,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,439,0)
1243^N^5^^^^N
"DATA",364.7,439,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,451,0)
1285^N^5^^^^N
"DATA",364.7,451,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,452,0)
1286^N^5^^^^N
"DATA",364.7,452,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,462,0)
1296^N^5^^^^N
"DATA",364.7,462,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,462,3,0)
^364.73^3^3^3140425^^
"DATA",364.7,462,3,1,0)
OI5-11
"DATA",364.7,462,3,2,0)
2330A/REF(2)/01
"DATA",364.7,462,3,3,0)
Other payer subscriber secondary ID qualifier #2
"DATA",364.7,463,0)
1297^N^5^^^^N
"DATA",364.7,463,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,463,3,0)
^364.73^3^3^3140425^^
"DATA",364.7,463,3,1,0)
OI5-12
"DATA",364.7,463,3,2,0)
2330A/REF(2)/02
"DATA",364.7,463,3,3,0)
Other payer subscriber secondary ID #2
"DATA",364.7,464,0)
1298^N^5^^^^N
"DATA",364.7,464,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,464,3,0)
^364.73^3^3^3140425^^
"DATA",364.7,464,3,1,0)
OI5-13
"DATA",364.7,464,3,2,0)
2330A/REF(3)/01
"DATA",364.7,464,3,3,0)
Other payer subscriber secondary ID qualifier #3
"DATA",364.7,465,0)
1299^N^5^^^^N
"DATA",364.7,465,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,465,3,0)
^364.73^3^3^3140425^^
"DATA",364.7,465,3,1,0)
OI5-14
"DATA",364.7,465,3,2,0)
2330A/REF(3)/02
"DATA",364.7,465,3,3,0)
Other payer subscriber secondary ID #3
"DATA",364.7,650,0)
1260^N^5^^^^N
"DATA",364.7,650,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,650,3,0)
^364.73^5^5^3140425^^^^
"DATA",364.7,650,3,1,0)
Refering Provider Secondary ID Qualifier.
"DATA",364.7,650,3,2,0)
EI=EMPLOYER, SY=SSN, 0B=STATE LICENSE NUMBER, 1A=BLUE CROSS, 1B=BLUE SHIELD,
"DATA",364.7,650,3,3,0)
1C=MEDICARE PARTA aqnd PARTB, 1D=MEDICAID, 1G=UPIN Number, 1H=TRICARE
"DATA",364.7,650,3,4,0)
G2=COMMERCAIL NUMBER, X5=STATE INDUSTRIAL ACCIDENT PROVIDER NUMBER
"DATA",364.7,650,3,5,0)
N5=PROVIDER PLAN NETWORK ID
"DATA",364.7,651,0)
1261^N^5^^^^N
"DATA",364.7,651,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,651,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,651,3,1,0)
Refering Provider Secondary ID
"DATA",364.7,652,0)
1262^N^5^^^^N
"DATA",364.7,652,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,652,3,0)
^364.73^5^5^3140425^^^
"DATA",364.7,652,3,1,0)
Refering Provider Secondary ID Qualifier.
"DATA",364.7,652,3,2,0)
EI=EMPLOYER, SY=SSN, 0B=STATE LICENSE NUMBER, 1A=BLUE CROSS, 1B=BLUE SHIELD,
"DATA",364.7,652,3,3,0)
1C=MEDICARE PARTA aqnd PARTB, 1D=MEDICAID, 1G=UPIN Number, 1H=TRICARE
"DATA",364.7,652,3,4,0)
G2=COMMERCAIL NUMBER, X5=STATE INDUSTRIAL ACCIDENT PROVIDER NUMBER
"DATA",364.7,652,3,5,0)
N5=PROVIDER PLAN NETWORK ID
"DATA",364.7,653,0)
1263^N^5^^^^N
"DATA",364.7,653,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,653,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,653,3,1,0)
Refering Provider Secondary ID
"DATA",364.7,657,0)
1253^N^5^^^^N^0
"DATA",364.7,657,1)
S IBXDATA=$$NOPUNCT^IBCEF($P($G(IBXSAVE("PROVINF",IBXIEN,"C",1,9,5)),"^",4),1)
"DATA",364.7,657,3,0)
^364.73^1^1^3101105^^^^
"DATA",364.7,657,3,1,0)
FROM FORMAT IN PROVINF^IBCEF7
"DATA",364.7,662,0)
1252^N^5^^^^N^0
"DATA",364.7,662,1)
S IBXDATA=$P($G(IBXSAVE("PROVINF",IBXIEN,"C",1,9,5)),"^",3)
"DATA",364.7,662,3,0)
^364.73^1^1^3101105^^^^
"DATA",364.7,662,3,1,0)
FROM FORMAT IN PROVINF^IBCEF7
"DATA",364.7,796,0)
784^N^5^^^^N
"DATA",364.7,796,1)
K IBXDATA
"DATA",364.7,844,0)
814^N^5^^^^N
"DATA",364.7,844,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,844,3,0)
^364.73^3^3^3140425^^^^
"DATA",364.7,844,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,844,3,2,0)
insurance into the IBXSAVE("CCOB",COB,n,1) array.  Extract the eighth piece
"DATA",364.7,844,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,845,0)
815^N^5^^^^N
"DATA",364.7,845,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,845,3,0)
^364.73^3^3^3140425^^^^
"DATA",364.7,845,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,845,3,2,0)
insurance into the IBXSAVE("CCOB",COB,n,1) array.  Extract the ninth piece
"DATA",364.7,845,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,934,0)
960^N^5^^^^N
"DATA",364.7,934,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,934,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,934,3,1,0)
Explanation of benefits indicator should always be set to "y"
"DATA",364.7,948,0)
971^N^5^^^^N
"DATA",364.7,948,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,948,3,0)
^364.73^5^5^3140425^^
"DATA",364.7,948,3,1,0)
SUB-9  lab/facility primary ID#
"DATA",364.7,948,3,2,0)
Remove punctuation from the returned tax ID number.
"DATA",364.7,948,3,3,0)
 
"DATA",364.7,948,3,4,0)
esg - 6/25/09 - IB*2*400 - Tie SUB-9 and SUB-13 together as an 
"DATA",364.7,948,3,5,0)
ID/qualifier pair for purchased services.
"DATA",364.7,955,0)
961^N^5^^^^N
"DATA",364.7,955,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,955,3,0)
^364.73^3^3^3140425^^^^
"DATA",364.7,955,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,955,3,2,0)
insurance into the IBXSAVE("CCOB",COB,n,2) array.  Extract the third piece
"DATA",364.7,955,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,956,0)
964^N^5^^^^N
"DATA",364.7,956,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,956,3,0)
^364.73^3^3^3140425^^^^
"DATA",364.7,956,3,1,0)
This data element relies on the previous extract of COB data for
"DATA",364.7,956,3,2,0)
other insurance into the IBXSAVE("CCOB",COB,n,4) array.  Extract the first
"DATA",364.7,956,3,3,0)
piece for this data.  Output each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,989,0)
988^N^5^^^^N
"DATA",364.7,989,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,989,3,0)
^364.73^1^1^3140425^^^^
"DATA",364.7,989,3,1,0)
If there is no street address, don't use the rest of the address either.
"DATA",364.7,990,0)
987^N^5^^^^N
"DATA",364.7,990,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,990,3,0)
^364.73^1^1^3140425^^
"DATA",364.7,990,3,1,0)
Retrieves insured employment info from IBXSAVE array previously extracted.
"DATA",364.7,1015,0)
1014^N^5^^^^N
"DATA",364.7,1015,1)
S IBXDATA="488.0" I '$$PROD^XUPROD(1) S $E(IBXDATA,11)="D"
"DATA",364.7,1015,3,0)
^364.73^7^7^3140410^^^^
"DATA",364.7,1015,3,1,0)
This field contains the VistA IB patch# that pertains to the
"DATA",364.7,1015,3,2,0)
applicable changes in the claim map.  Austin uses this field to determine
"DATA",364.7,1015,3,3,0)
which set of EDI claim maps to use when processing the EDI claims.
"DATA",364.7,1015,3,4,0)

"DATA",364.7,1015,3,5,0)
If the EDI claims are being transmitted from a non-production account,
"DATA",364.7,1015,3,6,0)
then the "D" in the 11th position indicates to Austin that it is test
"DATA",364.7,1015,3,7,0)
data.
"DATA",364.7,1039,0)
1321^N^101^^^^N^0
"DATA",364.7,1039,1)
K IBXDATA
"DATA",364.7,1039,3,0)
^364.73^5^5^3101019^^^^
"DATA",364.7,1039,3,1,0)
Get the current payer sequence from the claim. 
"DATA",364.7,1039,3,2,0)
Output "P" if primary, "S" if secondary or tertiary. 
"DATA",364.7,1039,3,3,0)
 
"DATA",364.7,1039,3,4,0)
This field is a duplicate of CI2.2. It was decided to blank this field 
"DATA",364.7,1039,3,5,0)
out so as not to confuse the user.  8/24/10
"DATA",364.7,1120,0)
1420^N^5^^^^N
"DATA",364.7,1120,1)
S IBXDATA=""
"DATA",364.7,1120,3,0)
^364.73^4^4^3140709^^^^
"DATA",364.7,1120,3,1,0)
This is no longer used.
"DATA",364.7,1120,3,2,0)
 
"DATA",364.7,1120,3,3,0)
Save the value of marital status in IBXSAVE variable for later use.  If
"DATA",364.7,1120,3,4,0)
the value is 'I' (NEVER MARRIED), this field's value is 'X'.
"DATA",364.7,1121,0)
1421^N^5^^^^N
"DATA",364.7,1121,1)
S IBXDATA=""
"DATA",364.7,1121,3,0)
^364.73^5^5^3140709^^^
"DATA",364.7,1121,3,1,0)
This field is no longer used.
"DATA",364.7,1121,3,2,0)
 
"DATA",364.7,1121,3,3,0)
This field relies on the existence of variable IBXSAVE("MSTAT")
"DATA",364.7,1121,3,4,0)
previously extracted. If its value is 'M' (MARRIED), this field's value
"DATA",364.7,1121,3,5,0)
will be 'X'.
"DATA",364.7,1122,0)
1422^N^5^^^^N
"DATA",364.7,1122,1)
S IBXDATA=""
"DATA",364.7,1122,3,0)
^364.73^5^5^3140709^^^^
"DATA",364.7,1122,3,1,0)
This field is no longer used.
"DATA",364.7,1122,3,2,0)
 
"DATA",364.7,1122,3,3,0)
This field relies on the existence of variable IBXSAVE("MSTAT") previously
"DATA",364.7,1122,3,4,0)
extracted.  If its value is not a 'M', or 'I', assume it must be other and
"DATA",364.7,1122,3,5,0)
this field's value will be 'X'.
"DATA",364.7,1127,0)
1427^N^5^^^^N
"DATA",364.7,1127,1)
S IBXDATA=""
"DATA",364.7,1127,3,0)
^364.73^5^5^3140709^^^
"DATA",364.7,1127,3,1,0)
This field is no longer used.
"DATA",364.7,1127,3,2,0)
 
"DATA",364.7,1127,3,3,0)
If the value of this field is '1' (EMPLOYED FULL TIME), '2' (EMPLOYED
"DATA",364.7,1127,3,4,0)
PART TIME), '4' (SELF EMPLOYED), or '6' (FULL TIME MILITARY), assume
"DATA",364.7,1127,3,5,0)
employed and output this field as 'X'.
"DATA",364.7,1138,0)
1438^N^5^^^^N
"DATA",364.7,1138,1)
S IBXDATA=""
"DATA",364.7,1138,3,0)
^^4^4^3140115^
"DATA",364.7,1138,3,1,0)
This is no longer used.
"DATA",364.7,1138,3,2,0)
 
"DATA",364.7,1138,3,3,0)
Save the other insured's demographic data in IBXSAVE for later use. Format
"DATA",364.7,1138,3,4,0)
the birthdate as MM DD YYYY.
"DATA",364.7,1139,0)
1439^N^5^^^^N
"DATA",364.7,1139,1)
S IBXDATA=""
"DATA",364.7,1139,3,0)
^^6^6^3140115^
"DATA",364.7,1139,3,1,0)
This is no longer used.
"DATA",364.7,1139,3,2,0)
 
"DATA",364.7,1139,3,3,0)
 
"DATA",364.7,1139,3,4,0)
This field relies on the existence of the IBXSAVE("OIDEM") variable
"DATA",364.7,1139,3,5,0)
previously extracted.  The second '^' piece contains the sex and if this
"DATA",364.7,1139,3,6,0)
is an 'M', this field's value is 'X'.
"DATA",364.7,1140,0)
1440^N^5^^^^N
"DATA",364.7,1140,1)
S IBXDATA=""
"DATA",364.7,1140,3,0)
^364.73^5^5^3140115^^
"DATA",364.7,1140,3,1,0)
This field is no longer used.
"DATA",364.7,1140,3,2,0)
 
"DATA",364.7,1140,3,3,0)
This field relies on the existence of the IBXSAVE("OIDEM") variable
"DATA",364.7,1140,3,4,0)
previously extracted.  The second '^' piece contains the sex and if this
"DATA",364.7,1140,3,5,0)
is not a null and is not an 'M', this field's value is 'X'.
"DATA",364.7,1144,0)
1444^N^110^^^^N
"DATA",364.7,1144,1)
S IBXDATA=$P(IBXDATA,U)
"DATA",364.7,1144,3,0)
^364.73^1^1^3140115^^
"DATA",364.7,1144,3,1,0)
This is the Property/Casualty number.
"DATA",364.7,1145,0)
1445^N^5^^^^N
"DATA",364.7,1145,1)
S IBXDATA=""
"DATA",364.7,1145,3,0)
^^1^1^3140711^
"DATA",364.7,1145,3,1,0)
9C is now a reserved empty box.  
"DATA",364.7,1150,0)
1450^N^122^^^^N
"DATA",364.7,1158,0)
1458^N^140^^^^N
"DATA",364.7,1158,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,1158,3,0)
^364.73^1^1^3140407^^^^
"DATA",364.7,1158,3,1,0)
Format date as MM DD YYYY.
"DATA",364.7,1159,0)
1459^N^141^^^^N
"DATA",364.7,1159,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,1)
"DATA",364.7,1159,3,0)
^364.73^1^1^3140407^^^^
"DATA",364.7,1159,3,1,0)
Format date as MM DD YYYY.
"DATA",364.7,1162,0)
1462^N^5^^^^N
"DATA",364.7,1162,1)
S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,1,"B1") I IBXDATA="" S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,5,"B1")
"DATA",364.7,1162,3,0)
^364.73^2^2^3140213^^
"DATA",364.7,1162,3,1,0)
cms-1500, box 17a/1, 2 character qualifier for the Referring provider 
"DATA",364.7,1162,3,2,0)
other ID (non-NPI ID).
"DATA",364.7,1163,0)
1463^N^5^^^^N
"DATA",364.7,1163,1)
S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,1,"B2") I IBXDATA="" S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,5,"B2")
"DATA",364.7,1163,3,0)
^364.73^2^2^3140213^^
"DATA",364.7,1163,3,1,0)
CMS-1500, Box 17a/2, Referring Provider other ID number (non NPI ID 
"DATA",364.7,1163,3,2,0)
number).
"DATA",364.7,1164,0)
1464^N^364^^^^N
"DATA",364.7,1165,0)
1465^N^5^^^^N
"DATA",364.7,1165,1)
S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,1,"B3") I IBXDATA="" S IBXDATA=$$GETPRV^IBCEF83(IBXIEN,,5,"B3")
"DATA",364.7,1165,3,0)
^364.73^1^1^3140213^^^
"DATA",364.7,1165,3,1,0)
NPI# of Referring Physician
"DATA",364.7,1168,0)
1468^N^148
"DATA",364.7,1168,1)
S IBXSAVE("BOX19")=$S($L(IBXDATA)<49:$J("",48),$L(IBXDATA)<84:$J("",25),1:"")_IBXDATA,IBXDATA=$E(IBXSAVE("BOX19"),1,48)
"DATA",364.7,1168,3,0)
^364.73^1^1^3140213^^^^
"DATA",364.7,1168,3,1,0)
This field holds the 1st through 48th characters of the box's data.
"DATA",364.7,1169,0)
1469^N^5^^^^N
"DATA",364.7,1169,1)
D:'$D(IBXSAVE("BOX19")) F^IBCEF("N-HCFA 1500 BOX 19",,,IBXIEN) S IBXDATA=$E($G(IBXSAVE("BOX19")),49,96) K IBXSAVE("BOX19")
"DATA",364.7,1169,3,0)
^364.73^2^2^3140217^^^^
"DATA",364.7,1169,3,1,0)
If the array that holds the entire box 19 data is not defined, extract it.
"DATA",364.7,1169,3,2,0)
This field will hold the 49th through 96th characters of the box's data.
"DATA",364.7,1174,0)
1474^N^163^^^^N
"DATA",364.7,1174,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(3,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1174,3,0)
^364.73^3^3^3140213^^^^
"DATA",364.7,1174,3,1,0)
Output the third diagnosis code. Check for any diagnosis codes that should
"DATA",364.7,1174,3,2,0)
display in the third position on pages subsequent to page 1 and output
"DATA",364.7,1174,3,3,0)
them.
"DATA",364.7,1175,0)
1475^N^5^^^^N
"DATA",364.7,1177,0)
1477^N^162^^^^N
"DATA",364.7,1177,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(2,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1177,3,0)
^364.73^3^3^3060717^^^^
"DATA",364.7,1177,3,1,0)
Output the second diagnosis code.  Check for any diagnosis codes that should
"DATA",364.7,1177,3,2,0)
display in the second position on pages subsequent to page 1 and output
"DATA",364.7,1177,3,3,0)
them.
"DATA",364.7,1178,0)
1478^N^164^^^^N
"DATA",364.7,1178,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(4,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1178,3,0)
^364.73^3^3^3140213^^^^
"DATA",364.7,1178,3,1,0)
Output the forth diagnosis code. Check for any diagnosis codes that should
"DATA",364.7,1178,3,2,0)
display in the forth position on pages subsequent to page 1 and output
"DATA",364.7,1178,3,3,0)
them.
"DATA",364.7,1199,0)
1499^N^5^^^^N
"DATA",364.7,1199,1)
S IBXDATA=""
"DATA",364.7,1199,3,0)
^^4^4^3140115^
"DATA",364.7,1199,3,1,0)
this field is no longer used.
"DATA",364.7,1199,3,2,0)
 
"DATA",364.7,1199,3,3,0)
If not 0, output as numeric with 2 decimals.
"DATA",364.7,1199,3,4,0)
Only output total on last page of form.
"DATA",364.7,1297,0)
1597^N^5
"DATA",364.7,1297,1)
S IBXDATA=$$DXIND^IBCF2(IBXIEN)
"DATA",364.7,1297,3,0)
^^1^1^3140317^
"DATA",364.7,1297,3,1,0)
A 9 indicates ICD 9 codes. A 0 indicates ICD 10 Codes.
"DATA",364.7,1505,0)
1805^N^5^^^^N
"DATA",364.7,1505,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1505,3,0)
^364.73^2^2^3140425^^^
"DATA",364.7,1505,3,1,0)
Subscriber secondary ID qualifier #2
"DATA",364.7,1505,3,2,0)
2010BA/REF(2)/01
"DATA",364.7,1506,0)
1806^N^5^^^^N
"DATA",364.7,1506,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1506,3,0)
^364.73^2^2^3140425^^^
"DATA",364.7,1506,3,1,0)
Subscriber secondary ID#2
"DATA",364.7,1506,3,2,0)
2010BA/REF(2)/02
"DATA",364.7,1507,0)
1807^N^5^^^^N
"DATA",364.7,1507,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1507,3,0)
^364.73^2^2^3140425^^^
"DATA",364.7,1507,3,1,0)
Subscriber secondary ID qualifier#3
"DATA",364.7,1507,3,2,0)
2010BA/REF(3)/01
"DATA",364.7,1508,0)
1808^N^5^^^^N
"DATA",364.7,1508,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1508,3,0)
^364.73^2^2^3140425^^^^
"DATA",364.7,1508,3,1,0)
Subscriber secondary ID#3
"DATA",364.7,1508,3,2,0)
2010BA/REF(3)/02
"DATA",364.7,1539,0)
1839^N^5^^^^N
"DATA",364.7,1539,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1540,0)
1840^N^5^^^^N
"DATA",364.7,1540,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1627,0)
1927^N^56^^^^N
"DATA",364.7,1627,1)
N Z,Z1,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,"I"_(Z+1))),$G(IBZ(Z))'="" S IBXDATA(Z)=IBZ(Z)
"DATA",364.7,1627,3,0)
^^10^10^3140428^
"DATA",364.7,1627,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,1627,3,2,0)
possible for the data element in the IBXDATA array. If any other insurance
"DATA",364.7,1627,3,3,0)
form locator 64 data is found, the data is output.
"DATA",364.7,1627,3,4,0)
   
"DATA",364.7,1627,3,5,0)
  This is OI1A-03 also known as the ICN/DCN for the MRA secondary claims. 
"DATA",364.7,1627,3,6,0)
If there is data here in OI1A-03, then we cannot transmit the Other Payer
"DATA",364.7,1627,3,7,0)
secondary ID and qualifier #2.  This is in the OI6 segment, pieces 7 and 
"DATA",364.7,1627,3,8,0)
8. For this calculation, OI6-6.9 is set-up very similar to this OI1A-03
"DATA",364.7,1627,3,9,0)
piece to see if there is an ICN/DCN present.   So any changes here should
"DATA",364.7,1627,3,10,0)
also be made to OI6-6.9 as a calculate only field.
"DATA",364.7,1628,0)
1928^N^5^^^^N
"DATA",364.7,1628,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1628,3,0)
^364.73^2^2^3140425^^^^
"DATA",364.7,1628,3,1,0)
PRV1-5  ID code qualifier
"DATA",364.7,1628,3,2,0)
This is set by PRV1-1.5
"DATA",364.7,1629,0)
1929^N^5^^^^N
"DATA",364.7,1629,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1629,3,0)
^364.73^6^6^3140425^^^
"DATA",364.7,1629,3,1,0)
PRV1-6
"DATA",364.7,1629,3,2,0)
pay-to provider primary ID (tax ID here).  Strip out the punctuation.
"DATA",364.7,1629,3,3,0)
 
"DATA",364.7,1629,3,4,0)
 
"DATA",364.7,1629,3,5,0)
please note:  The pay-to provider NPI# which is really the primary ID is
"DATA",364.7,1629,3,6,0)
being sent with NPI-18.
"DATA",364.7,1675,0)
1975^N^345^^^^N
"DATA",364.7,1675,1)
S IBXSAVE("PCCLAIM")=0 I IBXDATA]"" S IBXSAVE("PCCLAIM")=1
"DATA",364.7,1675,3,0)
^^5^5^3121116^
"DATA",364.7,1675,3,1,0)
SUbsequeNt fields Prop/Cas COntact Name, Prop/Cas Contact Phone and
"DATA",364.7,1675,3,2,0)
Prop/Cas COntact Extension should ONLY be sent if this field has a value,
"DATA",364.7,1675,3,3,0)
indicating that this IS a Property & Casualty claim.
"DATA",364.7,1675,3,4,0)
Setting IBXSAVE("PCCLAIM") here to 0 (Not a P&C Claim) or 1 (IS a P&C 
"DATA",364.7,1675,3,5,0)
Claim) for reference in these later fields.
"DATA",364.7,1676,0)
1976^N^346^^^^N
"DATA",364.7,1676,1)
S IBXDATA=$S(IBXDATA]"":"IC",1:"") I $G(IBXSAVE("PCCLAIM"))=0 S IBXDATA=""
"DATA",364.7,1676,3,0)
^^2^2^3121116^
"DATA",364.7,1676,3,1,0)
Don't populate this field if this is not a Property and Casualty Claim.  
"DATA",364.7,1676,3,2,0)
See Format Description for Prop/Cas Claim NUmber for more info.
"DATA",364.7,1677,0)
1977^N^346^^^^N
"DATA",364.7,1677,1)
I $G(IBXSAVE("PCCLAIM"))=0 S IBXDATA=""
"DATA",364.7,1677,3,0)
^364.73^2^2^3121116^^^
"DATA",364.7,1677,3,1,0)
Don't populate this field if this is not a Property and Casualty Claim.  
"DATA",364.7,1677,3,2,0)
See Format Description for Prop/Cas Claim NUmber for more info.
"DATA",364.7,1678,0)
1978^N^347^^^^N
"DATA",364.7,1678,1)
S IBXDATA=$S(IBXDATA]"":"TE",1:"") I $G(IBXSAVE("PCCLAIM"))=0 S IBXDATA=""
"DATA",364.7,1678,3,0)
^^2^2^3121116^
"DATA",364.7,1678,3,1,0)
Don't populate this field if this is not a Property and Casualty Claim.  
"DATA",364.7,1678,3,2,0)
See Format Description for Prop/Cas Claim NUmber for more info.
"DATA",364.7,1679,0)
1979^N^347^^^^N
"DATA",364.7,1679,1)
I $G(IBXSAVE("PCCLAIM"))=0 S IBXDATA=""
"DATA",364.7,1679,3,0)
^364.73^2^2^3121116^^
"DATA",364.7,1679,3,1,0)
Don't populate this field if this is not a Property and Casualty Claim.  
"DATA",364.7,1679,3,2,0)
See Format Description for Prop/Cas Claim NUmber for more info.
"DATA",364.7,1680,0)
1980^N^348^^^^N
"DATA",364.7,1680,1)
S IBXDATA=$S(IBXDATA]"":"EX",1:"") I $G(IBXSAVE("PCCLAIM"))=0 S IBXDATA=""
"DATA",364.7,1680,3,0)
^^2^2^3121116^
"DATA",364.7,1680,3,1,0)
Don't populate this field if this is not a Property and Casualty Claim.  
"DATA",364.7,1680,3,2,0)
See Format Description for Prop/Cas Claim NUmber for more info.
"DATA",364.7,1681,0)
1981^N^348^^^^N
"DATA",364.7,1681,1)
S:$G(IBXSAVE("PCCLAIM"))=0 IBXDATA="" K IBXSAVE("PCCLAIM")
"DATA",364.7,1681,3,0)
^^3^3^3121116^
"DATA",364.7,1681,3,1,0)
Don't populate this field if this is not a Property and Casualty Claim.  
"DATA",364.7,1681,3,2,0)
See Format Description for Prop/Cas Claim Number for more info.
"DATA",364.7,1681,3,3,0)
Saved value IBXSAVE("PCCLAIM") is not needed after this, so it's killed.
"DATA",364.7,1728,0)
2029^N^5^^^^N
"DATA",364.7,1728,1)
S IBXDATA=""
"DATA",364.7,1729,0)
2030^N^5^^^^N
"DATA",364.7,1729,1)
S IBXDATA=""
"DATA",364.7,1730,0)
2031^N^5^^^^N
"DATA",364.7,1730,1)
S IBXDATA=""
"DATA",364.7,1731,0)
2032^N^5^^^^N
"DATA",364.7,1731,1)
S IBXDATA=""
"DATA",364.7,1732,0)
2033^N^5^^^^N
"DATA",364.7,1732,1)
S IBXDATA=""
"DATA",364.7,1733,0)
2034^N^5^^^^N
"DATA",364.7,1733,1)
S IBXDATA=""
"DATA",364.7,1908,0)
2208^N^5^^^^N
"DATA",364.7,1908,1)
K IBXDATA,IBXSAVE("PRV1")
"DATA",364.7,1908,3,0)
^364.73^3^3^3140425^^^
"DATA",364.7,1908,3,1,0)
PRV1-12 pay-to provider Tax ID
"DATA",364.7,1908,3,2,0)
 
"DATA",364.7,1908,3,3,0)
Clean up IBXSAVE("PRV1")
"DATA",364.7,1927,0)
2227^N^56^^^^N
"DATA",364.7,1927,1)
N Z,Z1,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,"I"_(Z+1))),$G(IBZ(Z))'="" S IBXDATA(Z)=IBZ(Z)
"DATA",364.7,1927,3,0)
^364.73^10^10^3140428^^
"DATA",364.7,1927,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,1927,3,2,0)
possible for the data element in the IBXDATA array. If any other insurance
"DATA",364.7,1927,3,3,0)
form locator 64 data is found, the data is output.
"DATA",364.7,1927,3,4,0)
  
"DATA",364.7,1927,3,5,0)
 This is OI1A-03 also known as the ICN/DCN for the MRA secondary claims. 
"DATA",364.7,1927,3,6,0)
If there is data here in OI1A-03, then we cannot transmit the Other Payer
"DATA",364.7,1927,3,7,0)
secondary ID and qualifier #2.  This is in the OI6 segment, pieces 7 and 
"DATA",364.7,1927,3,8,0)
8. For this calculation, OI6-6.9 is set-up very similar to this OI1A-03
"DATA",364.7,1927,3,9,0)
piece to see if there is an ICN/DCN present.   So any changes here should
"DATA",364.7,1927,3,10,0)
also be made to OI6-6.9 as a calculate only field.
"DATA",364.7,1930,0)
2234^N^91
"DATA",364.7,1930,1)

"DATA",364.7,1931,0)
2240^N^132^^^^N
"DATA",364.7,1931,1)

"DATA",364.7,1931,3,0)
^364.73^1^1^3140407^^
"DATA",364.7,1931,3,1,0)
Qualifier for the date
"DATA",364.7,1932,0)
2241^N^139^^^^N
"DATA",364.7,1932,1)

"DATA",364.7,1932,3,0)
^364.73^1^1^3140407^^
"DATA",364.7,1932,3,1,0)
Other Date Qualifier
"DATA",364.7,1933,0)
2239^N^130
"DATA",364.7,1934,0)
2243^N^161^^^^N
"DATA",364.7,1934,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(5,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1935,0)
2244^N^182^^^^N
"DATA",364.7,1935,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(6,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1936,0)
2245^N^213^^^^N
"DATA",364.7,1936,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(7,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1937,0)
2246^N^219^^^^N
"DATA",364.7,1937,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(8,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1938,0)
2247^N^237^^^^N
"DATA",364.7,1938,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(9,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1939,0)
2248^N^355
"DATA",364.7,1939,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(10,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1940,0)
2249^N^356^^^^N
"DATA",364.7,1940,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(11,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1941,0)
2250^N^376^^^^N
"DATA",364.7,1941,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(12,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1942,0)
2242^N^149^^^^N
"DATA",364.7,1942,3,0)
^^2^2^3140116^
"DATA",364.7,1942,3,1,0)
This indicates if diagnosis codes are ICD9 or ICD10. A "9" indicates ICD9 
"DATA",364.7,1942,3,2,0)
and a "0" indicates ICD10.
"DATA",364.7,1943,0)
2238^N^377^^^^N
"DATA",364.7,1944,0)
2230^N^110^^^^N
"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^y^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,3.02)

"FIA",36,36,3.04)

"FIA",355.93)
IB NON/OTHER VA BILLING PROVIDER
"FIA",355.93,0)
^IBA(355.93,
"FIA",355.93,0,0)
355.93I
"FIA",355.93,0,1)
y^y^p^^^^n^^n
"FIA",355.93,0,10)

"FIA",355.93,0,11)

"FIA",355.93,0,"RLRO")

"FIA",355.93,0,"VR")
2.0^IB
"FIA",355.93,355.93)
1
"FIA",355.93,355.93,.05)

"FIA",355.93,355.93,.08)

"FIA",355.93,355.93,1.01)

"FIA",355.93,355.93,1.02)

"FIA",355.93,355.93,1.03)

"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I $$INCLUDE^IB488PRE(5,Y)
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IB488PRE(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IB488PRE(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^y^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,27)

"FIA",399,399,236)

"FIA",399,399,237)

"FIA",399,399,238)

"FIA",399,399,261)

"FIA",399,399,459)

"FIA",399,399.0304)
1
"FIA",399,399.0304,19)

"FIA",399,399.0304,50.03)

"FIA",399,399.0304,50.07)

"FIA",399,399.0304,50.08)

"FIA",399,399.0304,50.09)

"FIA",399,399.042)
1
"FIA",399,399.042,.03)

"INI")
IB488PRE
"INIT")
IBY488PO
"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"C",0)
364.6^C^Field name lookup^R^^F^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"C",1)
S ^IBA(364.6,"C",$E(X,1,40),DA)=""
"IX",364.6,364.6,"C",2)
K ^IBA(364.6,"C",$E(X,1,40),DA)
"IX",364.6,364.6,"C",2.5)
K ^IBA(364.6,"C")
"IX",364.6,364.6,"C",11.1,0)
^.114IA^1^1
"IX",364.6,364.6,"C",11.1,1,0)
1^F^364.6^.1^40^1^F
"IX",364.6,364.6,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"KRN",.402,514,-1)
0^3
"KRN",.402,514,0)
IB SCREEN8^3140313.0953^@^399^^@^3140319
"KRN",.402,514,"DIAB",2,0,399,1)
PRIMARY SURGICAL PROC CODE;"Primary Code"
"KRN",.402,514,"DIAB",2,0,399,3)
SPECIAL PROGRAM INDICATOR;"Special Program"
"KRN",.402,514,"DIAB",3,0,399,0)
COB TOTAL NON-COVERED AMOUNT;"COB Non-Covered Charge Amt"
"KRN",.402,514,"DIAB",3,0,399,1)
SECONDARY SURGICAL PROC CODE;"Secondary Code"
"KRN",.402,514,"DIAB",4,0,399,2)
ASSUMED CARE DATE;"Assumed Care Date"
"KRN",.402,514,"DIAB",5,0,399,2)
RELINQUISHED CARE DATE;"Relinquished Care Date"
"KRN",.402,514,"DIAB",5,0,399,3)
HOMEBOUND;"Homebound"
"KRN",.402,514,"DIAB",6,0,399,0)
PROPERTY/CASUALTY CLAIM NUMBER;"Claim Number"
"KRN",.402,514,"DIAB",6,0,399,1)
ATTACHMENT REPORT TYPE;"Report Type"
"KRN",.402,514,"DIAB",7,0,399,1)
ATTACHMENT REPORT TRANS CODE;"Transmission Method"
"KRN",.402,514,"DIAB",8,0,399,0)
PROP/CAS DATE OF 1ST CONTACT;"Date of 1st Contact"
"KRN",.402,514,"DIAB",8,0,399,1)
ATTACHMENT CONTROL NUMBER;"Attachment Control #"
"KRN",.402,514,"DIAB",8,0,399,3)
DATE LAST SEEN;"Date Last Seen"
"KRN",.402,514,"DIAB",9,0,399,0)
PROPERTY/CASUALTY CONTACT NAME;"Contact Name"
"KRN",.402,514,"DIAB",10,0,399,0)
PROP/CAS COMMUNICATION NUMBER;"Contact Phone"
"KRN",.402,514,"DIAB",11,0,399,0)
PROP/CAS EXTENSION NUMBER;"Contact Phone Extension"
"KRN",.402,514,"DIAB",11,0,399,1)
DISABILITY START DATE;"Disability Start Date"
"KRN",.402,514,"DIAB",12,0,399,1)
DISABILITY END DATE;"Disability End Date"
"KRN",.402,514,"DR",1,399)
@81;S:IBDR20'["81" Y="@82";260COB Non-Covered Charge Amt~;@82;S:IBDR20'["82" Y="@83";261Claim Number~;S:IBT=3 Y="@84";262Date of 1st Contact~;268Contact Name~;269Contact Phone~;269.1Contact Phone Extension~;@83;
"KRN",.402,514,"DR",1,399,1)
S:IBDR20'["83" Y="@84";266Primary Code~;267Secondary Code~;@84;S:IBDR20'["84" Y="@85";285Report Type~;286Transmission Method~;284Attachment Control #~;@85;S:IBDR20'["85" Y="@86";263Disability Start Date~;264Disability End Date~;
"KRN",.402,514,"DR",1,399,2)
@86;S:IBDR20'["86" Y="@87";S:$P($G(^DGCR(IBIFN,0)),U,19)=3 Y="@87";282Assumed Care Date~;283Relinquished Care Date~;@87;S:IBDR20'["87" Y="@88";
"KRN",.402,514,"DR",1,399,3)
238////^S X=$S($P($G(^DGCR(399,DA,"U2")),U,16)'="":$P($G(^DGCR(399,DA,"U2")),U,16),$$WNRBILL^IBEFUNC(DA):"31",1:"");238Special Program~;@88;S:IBDR20'["88" Y="@89";236Homebound~;@89;S:IBDR20'["89" Y="@899";237Date Last Seen~;@899;
"KRN",.402,514,"ROU")
^IBXS8
"KRN",.402,514,"ROUOLD")
IBXS8
"KRN",.402,1790,-1)
0^1
"KRN",.402,1790,0)
IB SCREEN102^3121107.1555^@^399^^@^3140213
"KRN",.402,1790,"AR",399,806)
1^IBXSA211
"KRN",.402,1790,"DIAB",1,1,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1790,"DIAB",1,1,399.0222,2)
PERFORMED BY:355.93:
"KRN",.402,1790,"DIAB",1,2,355.9342,0)
ALL
"KRN",.402,1790,"DIAB",1,3,355.9342,0)
ALL
"KRN",.402,1790,"DIAB",4,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,1790,"DIAB",4,0,399,2)
NON-VA FACILITY:
"KRN",.402,1790,"DIAB",4,1,399.0222,8)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1790,"DIAB",5,1,399.0222,8)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1790,"DIAB",6,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,1790,"DIAB",8,0,399,0)
FORM LOCATOR 64C;T
"KRN",.402,1790,"DIAB",8,1,399.0222,8)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1790,"DIAB",9,1,399.0222,8)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1790,"DIAB",9,2,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1790,"DIAB",10,0,399,0)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1790,"DIAB",11,0,399,1)
PPS;T
"KRN",.402,1790,"DIAB",12,1,399.0222,8)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1790,"DIAB",13,1,399.0222,8)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1790,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["101" Y="@102";402;453T~;S:'DIPA("I2") Y="@10111";454T~;S:'DIPA("I3") Y="@10111";455T~;@10111;163PRIMARY AUTHORIZATION CODE~;253;
"KRN",.402,1790,"DR",1,399,1)
S:'DIPA("I2") Y="@1011";230;254;S:'DIPA("I3") Y="@1011";231;255;@1011;I '$$INPAT^IBCEF(DA) S Y="@1012";215;S ICDVDT=$$BDATE^IBACSV(DA);170T~;@1012;159;@102;S:IBDR20'["102" Y="@103";@103;S:IBDR20'["103" Y="@104";222;@104;
"KRN",.402,1790,"DR",1,399,2)
S:IBDR20'["104" Y="@105";232;S DIPA("NVA_FC")=X S:DIPA("NVA_FC")="" Y="@1046";^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");
"KRN",.402,1790,"DR",1,399,3)
S DIK="^DGCR(399,",DIK(1)="232" D EN1^DIK;K DIK;244;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@1046;@105;S:IBDR20'["105" Y="@106";252;
"KRN",.402,1790,"DR",1,399,4)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,11),"Billing Provider");I $P($G(^DGCR(399,DA,"U3")),U,11) N X,Y,DIR S DIR(0)="EA",DIR("A")="Press Return to continue" D ^DIR K DIR;@106;S:IBDR20'["106" Y="@107";
"KRN",.402,1790,"DR",1,399,5)
I $$TEST^IBCEF84(DA) S Y="@1060";I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@1061";I $$REQMRA^IBEFUNC(DA) S Y="@10611";27//NO FORCED PRINT;S Y="@1069";@1060;D MESSAGE^IBCEF84;S Y="@1069";@10611;28//NO FORCED PRINT;
"KRN",.402,1790,"DR",1,399,6)
S Y="@1069";@1061;N X,Y,DIR S DIR(0)="EA",DIR("A",1)="NO FIELDS AVAILABLE TO EDIT",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR;@1069;@107;S:IBDR20'["107" Y="@109";@109;
"KRN",.402,1790,"DR",2,355.93)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@1041";.05;.1;.06;.07;.08;@1041;S:$P(DIPA("NVA_FC-0"),U,9)'="" Y="@1042";
"KRN",.402,1790,"DR",2,355.93,1)
.09LAB OR FACILITY PRIMARY ID~;@1042;S:$P(DIPA("NVA_FC-0"),U,11)'="" Y="@1043";.11;@1043;S:$P(DIPA("NVA_FC-0"),U,14)'="" Y="@1044";D EN2^IBCEP82(+DIPA("NVA_FC"),2);@1044;S:$D(^IBA(355.93,+DIPA("NVA_FC"),"TAXONOMY"))>0 Y="@1045";42;
"KRN",.402,1790,"DR",2,355.93,2)
@1045;
"KRN",.402,1790,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:DIPA("PRF")="" Y="@10399";N Z1 S Z1=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2) S DIPA("NVA_PRV")=$S(Z1["IBA(355.93":+Z1,1:0);
"KRN",.402,1790,"DR",2,399.0222,1)
S:DIPA("NVA_PRV")=0 Y="@1038";
"KRN",.402,1790,"DR",2,399.0222,2)
^355.93^IBA(355.93,^^N DIERR X DR(99,1,9.2) K DIC S DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0) S X=$S(D(0)>0:D(0),1:"");@1038;
"KRN",.402,1790,"DR",2,399.0222,3)
S DIK="^DGCR(399,"_DA(1)_",""PRV"",",DIK(1)=".02" D EN1^DIK K DIK;.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,1790,"DR",2,399.0222,4)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,1790,"DR",2,399.0222,5)
S DIPA("CRD")=$$CRED^IBCEU($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC10H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,1790,"DR",2,399.0222,6)
I '$G(DIPA("I1")) S Y="@10305";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10382",DIPA("EDIT")=1:"@10391",DIPA("EDIT")=2:"@10371",1:"");@10382;I '$G(DIPA("I2")) S Y="@10305";
"KRN",.402,1790,"DR",2,399.0222,7)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10383",DIPA("EDIT")=1:"@10392",DIPA("EDIT")=2:"@10372",1:"");@10383;I '$G(DIPA("I3")) S Y="@10305";
"KRN",.402,1790,"DR",2,399.0222,8)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10305",DIPA("EDIT")=1:"@10393",DIPA("EDIT")=2:"@10373",1:"");S Y="@10305";@10391;.12R~T~;.05T~;S Y="@10382";@10392;.13R~T~;.06T~;S Y="@10383";@10393;.14R~T~;.07T~;
"KRN",.402,1790,"DR",2,399.0222,9)
S Y="@10305";@10371;.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@10382";@10372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@10383";@10373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@10305";
"KRN",.402,1790,"DR",2,399.0222,10)
@10305;@10399;W @IOF;
"KRN",.402,1790,"DR",3,355.93)
S DIPA("NVA_PRV-0")=$G(^IBA(355.93,DIPA("NVA_PRV"),0));S:$P(DIPA("NVA_PRV-0"),U,2)=1 Y="@1032";S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1031";.03;@1031;S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1035";.04;S Y="@1035";@1032;
"KRN",.402,1790,"DR",3,355.93,1)
S:$P(DIPA("NVA_PRV-0"),U,5)'=""&($P(DIPA("NVA_PRV-0"),U,6)'="")&($P(DIPA("NVA_PRV-0"),U,7)'="") Y="@1033";.05;.1;.06;.07;.08;@1033;S:$P(DIPA("NVA_PRV-0"),U,9)'="" Y="@1034";.09LAB OR FACILITY PRIMARY ID~;@1034;
"KRN",.402,1790,"DR",3,355.93,2)
S:$P(DIPA("NVA_PRV-0"),U,11)'="" Y="@1035";.11;@1035;S:$P(DIPA("NVA_PRV-0"),U,14)'="" Y="@1036";D EN2^IBCEP82(DIPA("NVA_PRV"),4);@1036;S:$D(^IBA(355.93,DIPA("NVA_PRV"),"TAXONOMY"))>0 Y="@1037";42;@1037;
"KRN",.402,1790,"DR",3,355.9342)
.01:.03
"KRN",.402,1790,"DR",4,355.9342)
.01:.03
"KRN",.402,1790,"DR",99,1)
N DIERR X DR(99,1,9.2) K DIC S DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"KRN",.402,1790,"DR",99,1,9.2)
S I(1,0)=$G(D1),I(0,0)=$G(D0),Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(399.0222,.02,"",$P(Y(1),U,2))
"KRN",.402,1790,"ROU")
^IBXSA2
"KRN",.402,1790,"ROUOLD")
IBXSA2
"KRN",.402,1791,-1)
0^2
"KRN",.402,1791,0)
IB SCREEN10H^3140313.0957^@^399^^@^3140804
"KRN",.402,1791,"AR",399,806)
1^IBXSAH12
"KRN",.402,1791,"DIAB",1,1,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1791,"DIAB",1,1,399.0222,2)
PERFORMED BY:355.93:
"KRN",.402,1791,"DIAB",1,2,355.9342,0)
ALL
"KRN",.402,1791,"DIAB",1,3,355.9342,0)
ALL
"KRN",.402,1791,"DIAB",2,0,399,2)
NON-VA FACILITY:
"KRN",.402,1791,"DIAB",4,0,399,1)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1791,"DIAB",4,1,399.0222,8)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1791,"DIAB",5,1,399.0222,8)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1791,"DIAB",6,0,399,4)
FORM LOC 19-UNSPECIFIED DATA;T
"KRN",.402,1791,"DIAB",8,1,399.0222,8)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1791,"DIAB",9,1,399.0222,8)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1791,"DIAB",9,2,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1791,"DIAB",10,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,1791,"DIAB",12,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,1791,"DIAB",12,1,399.0222,8)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1791,"DIAB",13,1,399.0222,8)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1791,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["101" Y="@102";166;167;@102;S:IBDR20'["102" Y="@103";S:'$$INPAT^IBCEF(DA) Y="@1021";215;@1021;453T~;S:'DIPA("I2") Y="@1025";454T~;
"KRN",.402,1791,"DR",1,399,1)
S:'DIPA("I3") Y="@1025";455;@1025;163PRIMARY AUTHORIZATION CODE~;253;S:'DIPA("I2") Y="@1029";230;254;S:'DIPA("I3") Y="@1029";231;255;@1029;@103;S:IBDR20'["103" Y="@104";222;@104;S:IBDR20'["104" Y="@106";232;
"KRN",.402,1791,"DR",1,399,2)
S DIPA("NVA_FC")=X S:X="" Y="@1046";^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");S DIK="^DGCR(399,",DIK(1)="232" D EN1^DIK;K DIK;244;
"KRN",.402,1791,"DR",1,399,3)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@1046;S DIPA("OLDCLIA")=$P($G(^DGCR(399,DA,"U2")),U,13);235;I X="",$G(DIPA("OLDCLIA"))'="" S IBMDOTCN=1;@1047;I '$$XRAY^IBCEP8A(DA) S Y="@1048";
"KRN",.402,1791,"DR",1,399,4)
D MAMMODP^IBCEP8A(DA);242;@1048;@106;S:IBDR20'["106" Y="@107";459T~;D ASK19^IBCEU3(DA);@107;S:IBDR20'["107" Y="@108";252;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,11),"Billing Provider");
"KRN",.402,1791,"DR",1,399,5)
I $P($G(^DGCR(399,DA,"U3")),U,11) N X,Y,DIR S DIR(0)="EA",DIR("A")="Press Return to continue" D ^DIR K DIR;@108;S:IBDR20'["108" Y="@109";I $$TEST^IBCEF84(DA) S Y="@1080";
"KRN",.402,1791,"DR",1,399,6)
I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@1082";I $$REQMRA^IBEFUNC(DA) S Y="@10811";27//NO FORCED PRINT;S Y="@1082";@1080;D MESSAGE^IBCEF84;S Y="@1082";@10811;28//NO FORCED PRINT;@1082;@109;
"KRN",.402,1791,"DR",2,355.93)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@1041";.05;.1;.06;.07;.08;@1041;S:$P(DIPA("NVA_FC-0"),U,9)'="" Y="@1042";
"KRN",.402,1791,"DR",2,355.93,1)
.09LAB OR FACILITY PRIMARY ID~;@1042;S:$P(DIPA("NVA_FC-0"),U,11)'="" Y="@1043";.11;@1043;S:$P(DIPA("NVA_FC-0"),U,14)'="" Y="@1044";D EN2^IBCEP82(+DIPA("NVA_FC"),2);@1044;S:$D(^IBA(355.93,+DIPA("NVA_FC"),"TAXONOMY"))>0 Y="@1045";42;
"KRN",.402,1791,"DR",2,355.93,2)
@1045;
"KRN",.402,1791,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:X="" Y="@10399";N Z1 S Z1=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2) S DIPA("NVA_PRV")=$S(Z1["IBA(355.93":+Z1,1:0);
"KRN",.402,1791,"DR",2,399.0222,1)
S:DIPA("NVA_PRV")=0 Y="@1038";
"KRN",.402,1791,"DR",2,399.0222,2)
^355.93^IBA(355.93,^^N DIERR X DR(99,1,9.2) K DIC S DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0) S X=$S(D(0)>0:D(0),1:"");@1038;
"KRN",.402,1791,"DR",2,399.0222,3)
S DIK="^DGCR(399,"_DA(1)_",""PRV"",",DIK(1)=".02" D EN1^DIK K DIK;.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,1791,"DR",2,399.0222,4)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");S DIPA("CRD")=$$CRED^IBCEU($P(^DGCR(399,DA(1),"PRV",DA,0),U,2));
"KRN",.402,1791,"DR",2,399.0222,5)
.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P(^DGCR(399,DA(1),"PRV",DA,0),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC10H($G(DIPA("CRD")));K DIPA("W1");I '$G(DIPA("I1")) S Y="@10305";
"KRN",.402,1791,"DR",2,399.0222,6)
D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10382",DIPA("EDIT")=1:"@10391",DIPA("EDIT")=2:"@10371",1:"");@10382;I '$G(DIPA("I2")) S Y="@10305";
"KRN",.402,1791,"DR",2,399.0222,7)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10383",DIPA("EDIT")=1:"@10392",DIPA("EDIT")=2:"@10372",1:"");@10383;I '$G(DIPA("I3")) S Y="@10305";
"KRN",.402,1791,"DR",2,399.0222,8)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10305",DIPA("EDIT")=1:"@10393",DIPA("EDIT")=2:"@10373",1:"");S Y="@10305";@10391;.12R~T~;.05T~;S Y="@10382";@10392;.13R~T~;.06T~;S Y="@10383";@10393;.14R~T~;.07T~;
"KRN",.402,1791,"DR",2,399.0222,9)
S Y="@10305";@10371;.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@10382";@10372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@10383";@10373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@10305";
"KRN",.402,1791,"DR",2,399.0222,10)
@10305;@10399;W @IOF;
"KRN",.402,1791,"DR",3,355.93)
S DIPA("NVA_PRV-0")=$G(^IBA(355.93,DIPA("NVA_PRV"),0));S:$P(DIPA("NVA_PRV-0"),U,2)=1 Y="@1032";S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1031";.03;@1031;S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1035";.04;S Y="@1035";@1032;
"KRN",.402,1791,"DR",3,355.93,1)
S:$P(DIPA("NVA_PRV-0"),U,5)'=""&($P(DIPA("NVA_PRV-0"),U,6)'="")&($P(DIPA("NVA_PRV-0"),U,7)'="") Y="@1033";.05;.1;.06;.07;.08;@1033;S:$P(DIPA("NVA_PRV-0"),U,9)'="" Y="@1034";.09LAB OR FACILITY PRIMARY ID~;@1034;
"KRN",.402,1791,"DR",3,355.93,2)
S:$P(DIPA("NVA_PRV-0"),U,11)'="" Y="@1035";.11;@1035;S:$P(DIPA("NVA_PRV-0"),U,14)'="" Y="@1036";D EN2^IBCEP82(DIPA("NVA_PRV"),4);@1036;S:$D(^IBA(355.93,DIPA("NVA_PRV"),"TAXONOMY"))>0 Y="@1037";42;@1037;
"KRN",.402,1791,"DR",3,355.9342)
.01:.03
"KRN",.402,1791,"DR",4,355.9342)
.01:.03
"KRN",.402,1791,"DR",99,1)
N DIERR X DR(99,1,9.2) K DIC S DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"KRN",.402,1791,"DR",99,1,9.2)
S I(1,0)=$G(D1),I(0,0)=$G(D0),Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(399.0222,.02,"",$P(Y(1),U,2))
"KRN",.402,1791,"ROU")
^IBXSAH
"KRN",.402,1791,"ROUOLD")
IBXSAH
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",49,-1)
1^1
"PKG",49,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",49,20,0)
^9.402P^1^1
"PKG",49,20,1,0)
2^^IBAXDR
"PKG",49,20,1,1)

"PKG",49,20,"B",2,1)

"PKG",49,22,0)
^9.49I^1^1
"PKG",49,22,1,0)
2.0^2940321^2960627
"PKG",49,22,1,"PAH",1,0)
488^3140807
"PKG",49,22,1,"PAH",1,1,0)
^^74^74^3140807
"PKG",49,22,1,"PAH",1,1,1,0)
The HIPAA 5010 D.0 Level II Phase 2 project includes the following
"PKG",49,22,1,"PAH",1,1,2,0)
modifications to the Electronic Billing V. 2.0 application:
"PKG",49,22,1,"PAH",1,1,3,0)
 
"PKG",49,22,1,"PAH",1,1,4,0)
1. Remove Ability to Print Claim at Clearinghouse
"PKG",49,22,1,"PAH",1,1,5,0)
   ----------------------------------------------
"PKG",49,22,1,"PAH",1,1,6,0)
   Modified VistA IB to remove the user's ability to force the claim to
"PKG",49,22,1,"PAH",1,1,7,0)
   print at the clearinghouse.  The capability to force a claim to print
"PKG",49,22,1,"PAH",1,1,8,0)
   at the clearinghouse was REMOVED.  Screen 10, Section 6 was modified
"PKG",49,22,1,"PAH",1,1,9,0)
   by removing the ability to view and select 2 'FORCE CLEARINGHOUSE
"PKG",49,22,1,"PAH",1,1,10,0)
   PRINT'. Selections 0 'NO FORCED PRINT' and 1 'FORCE LOCAL PRINT' still
"PKG",49,22,1,"PAH",1,1,11,0)
   remain and function as they always have: if this field
"PKG",49,22,1,"PAH",1,1,12,0)
   [Force to Print?] is set to 0, the claim will be transmitted
"PKG",49,22,1,"PAH",1,1,13,0)
   electronically to the payer; otherwise, if this field is set to 1, the
"PKG",49,22,1,"PAH",1,1,14,0)
   claim will be printed locally.
"PKG",49,22,1,"PAH",1,1,15,0)
 
"PKG",49,22,1,"PAH",1,1,16,0)
2. Prevent Creation of Claims with PAYER ID of HPRNT/SPRNT
"PKG",49,22,1,"PAH",1,1,17,0)
   -------------------------------------------------------
"PKG",49,22,1,"PAH",1,1,18,0)
   Modified VistA IB so that claims with Payer ID HPRNT/SPRNT display
"PKG",49,22,1,"PAH",1,1,19,0)
   a fatal error message and force the removal of the HPRNT/SPRNT
"PKG",49,22,1,"PAH",1,1,20,0)
   Payer ID from the Insurance Company file (#36).
"PKG",49,22,1,"PAH",1,1,21,0)
 
"PKG",49,22,1,"PAH",1,1,22,0)
3. Prevent Creation of Claims with Zero Procedures
"PKG",49,22,1,"PAH",1,1,23,0)
   -----------------------------------------------
"PKG",49,22,1,"PAH",1,1,24,0)
   Modified VistA IB to prevent the creation of claims with no procedures.
"PKG",49,22,1,"PAH",1,1,25,0)
   IB validation logic has been incorporated to ensure a claim that is
"PKG",49,22,1,"PAH",1,1,26,0)
   being created or edited cannot be submitted unless it contains at least
"PKG",49,22,1,"PAH",1,1,27,0)
   one procedure.  If there are no procedures on the created or edited
"PKG",49,22,1,"PAH",1,1,28,0)
   claim, a fatal error message will display to the user notifying them of
"PKG",49,22,1,"PAH",1,1,29,0)
   this condition and will not allow the claim to be submitted.  Claims
"PKG",49,22,1,"PAH",1,1,30,0)
   will continue to allow $0 line item(s) but these will also be required
"PKG",49,22,1,"PAH",1,1,31,0)
   to have at least one procedure.  The only exception to this is that
"PKG",49,22,1,"PAH",1,1,32,0)
   UB-04 Inpatient claims with no procedures may still be created.
"PKG",49,22,1,"PAH",1,1,33,0)
 
"PKG",49,22,1,"PAH",1,1,34,0)
4. Modify the Provider Contact Field Names for Property & Casualty Claims
"PKG",49,22,1,"PAH",1,1,35,0)
   ----------------------------------------------------------------------
"PKG",49,22,1,"PAH",1,1,36,0)
   Modified the Contact Name, Phone and Extension field names in the
"PKG",49,22,1,"PAH",1,1,37,0)
   IB NON/OTHER VA BILLING PROVIDER(#355.93) file so that users will see
"PKG",49,22,1,"PAH",1,1,38,0)
   the following prompts/labels while in the PROVIDER ID MAINTENANCE
"PKG",49,22,1,"PAH",1,1,39,0)
   [IBCE PROVIDER MAINT] option: P&C Contact Name, P&C Contact Phone
"PKG",49,22,1,"PAH",1,1,40,0)
   Number and P&C Contact Phone Extension.  The P&C Contact Phone Number
"PKG",49,22,1,"PAH",1,1,41,0)
   field was also updated to require a minimum of 10 digits.
"PKG",49,22,1,"PAH",1,1,42,0)
 
"PKG",49,22,1,"PAH",1,1,43,0)
5. Modify the Non-VA Facility Street Address & Zip Code Fields
"PKG",49,22,1,"PAH",1,1,44,0)
   -----------------------------------------------------------
"PKG",49,22,1,"PAH",1,1,45,0)
   Modified VistA so that the STREET ADDRESS field (#355.93,#.05) will no
"PKG",49,22,1,"PAH",1,1,46,0)
   longer accept PO Box and other variations of post office box as a
"PKG",49,22,1,"PAH",1,1,47,0)
   valid street address.  This validation does not apply to the STREET
"PKG",49,22,1,"PAH",1,1,48,0)
   ADDRESS LINE 2 field (#355.93,#.1).  The ZIP CODE field (#355.93,#.08)
"PKG",49,22,1,"PAH",1,1,49,0)
   has been modified so that only 9 digit ZIP codes are valid.  Entering
"PKG",49,22,1,"PAH",1,1,50,0)
   "0000" as the last four digits of a ZIP code is not acceptable.
"PKG",49,22,1,"PAH",1,1,51,0)
 
"PKG",49,22,1,"PAH",1,1,52,0)
6.  Modify Third Party Joint Inquiry [IBJ THIRD PARTY JOINT INQUIRY]
"PKG",49,22,1,"PAH",1,1,53,0)
    ----------------------------------------------------------------
"PKG",49,22,1,"PAH",1,1,54,0)
 
"PKG",49,22,1,"PAH",1,1,55,0)
    Modified VistA to improve the readability of ERA data in the Third 
"PKG",49,22,1,"PAH",1,1,56,0)
    Party Joint Inquiry [IBJ THIRD PARTY JOINT INQUIRY] option that 
"PKG",49,22,1,"PAH",1,1,57,0)
    display when the BC "Billing Charges" action is selected.  The
"PKG",49,22,1,"PAH",1,1,58,0)
    display was modified to remove the RAW DATA display for those EOBs
"PKG",49,22,1,"PAH",1,1,59,0)
    that contained "Message Storage Errors" and make the reported
"PKG",49,22,1,"PAH",1,1,60,0)
    error(s) more readable.  The formerly known "MESSAGE STORAGE ERRORS"
"PKG",49,22,1,"PAH",1,1,61,0)
    are now known as "DATA MISMATCH ERRORS".
"PKG",49,22,1,"PAH",1,1,62,0)
 
"PKG",49,22,1,"PAH",1,1,63,0)
7.  Include ERAs with errors on the Medicare Remittance Advice Worklist 
"PKG",49,22,1,"PAH",1,1,64,0)
    -------------------------------------------------------------------
"PKG",49,22,1,"PAH",1,1,65,0)
    Modified VistA so that claims containing an error condition from
"PKG",49,22,1,"PAH",1,1,66,0)
    processing the 835 will now display on the Medicare Remittance
"PKG",49,22,1,"PAH",1,1,67,0)
    Advice Worklist (MRW), which is accessed via the option MRA
"PKG",49,22,1,"PAH",1,1,68,0)
    Management WorkList [IBCE MRA MANAGEMENT].  These specific claims
"PKG",49,22,1,"PAH",1,1,69,0)
    will be identified on the MRW with an "!" exclamation point
"PKG",49,22,1,"PAH",1,1,70,0)
    displayed immediately in front of the claim number.
"PKG",49,22,1,"PAH",1,1,71,0)
 
"PKG",49,22,1,"PAH",1,1,72,0)
The routine IBCEP8 was added to this patch to reintroduce the changes
"PKG",49,22,1,"PAH",1,1,73,0)
that were previouly introduced by patch IB*2.0*447 which were subsequently
"PKG",49,22,1,"PAH",1,1,74,0)
inadvertently omitted by the patch IB*2.0*476.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
35
"RTN","IB488PRE")
0^^B27990371^n/a
"RTN","IB488PRE",1,0)
IB488PRE ;ALB/JMM - SET UP NEW BILLING ERROR IN DD FOR NO PROCEDURES IN A CLAIM ; 4/9/14 9:33am
"RTN","IB488PRE",2,0)
 ;;2.0;INTEGRATED BILLING;**488**;21-MAR-94;Build 184
"RTN","IB488PRE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IB488PRE",4,0)
 ;
"RTN","IB488PRE",5,0)
 ; Add new IB ERROR
"RTN","IB488PRE",6,0)
 N DIC,X,DLAYGO,DIK,DA
"RTN","IB488PRE",7,0)
 S DA=$O(^IBE(350.8,"B","IB352",""))
"RTN","IB488PRE",8,0)
 S DIK="^IBE(350.8,"
"RTN","IB488PRE",9,0)
 I DA'="" D ^DIK
"RTN","IB488PRE",10,0)
 S DIC="^IBE(350.8,"
"RTN","IB488PRE",11,0)
 S DLAYGO=350.8
"RTN","IB488PRE",12,0)
 S DIC(0)="BL"
"RTN","IB488PRE",13,0)
 S X="IB352"
"RTN","IB488PRE",14,0)
 S DIC("DR")=".02///An outpt. inst. claim must contain at least one Procedure Code.;.03///IB352;.04///1;.05///1"
"RTN","IB488PRE",15,0)
 D ^DIC
"RTN","IB488PRE",16,0)
 K DIC,X,DLAYGO
"RTN","IB488PRE",17,0)
 ;
"RTN","IB488PRE",18,0)
 ; Add new IB ERROR
"RTN","IB488PRE",19,0)
 ;N DIC,X ; WCJ
"RTN","IB488PRE",20,0)
 S DA=$O(^IBE(350.8,"B","IB353",""))
"RTN","IB488PRE",21,0)
 S DIK="^IBE(350.8,"
"RTN","IB488PRE",22,0)
 I DA'="" D ^DIK
"RTN","IB488PRE",23,0)
 S DIC="^IBE(350.8,"
"RTN","IB488PRE",24,0)
 S DLAYGO=350.8
"RTN","IB488PRE",25,0)
 S DIC(0)="BL"
"RTN","IB488PRE",26,0)
 S X="IB353"
"RTN","IB488PRE",27,0)
 S DIC("DR")=".02///A professional claim must contain at least one Procedure Code.;.03///IB353;.04///1;.05///1"
"RTN","IB488PRE",28,0)
 D ^DIC
"RTN","IB488PRE",29,0)
 K DIC,X,DLAYGO
"RTN","IB488PRE",30,0)
 ;
"RTN","IB488PRE",31,0)
 ; Add new IB ERROR
"RTN","IB488PRE",32,0)
 ;N DIC,X ; WCJ
"RTN","IB488PRE",33,0)
 S DA=$O(^IBE(350.8,"B","IB488",""))
"RTN","IB488PRE",34,0)
 S DIK="^IBE(350.8,"
"RTN","IB488PRE",35,0)
 I DA'="" D ^DIK
"RTN","IB488PRE",36,0)
 S DIC="^IBE(350.8,"
"RTN","IB488PRE",37,0)
 S DLAYGO=350.8
"RTN","IB488PRE",38,0)
 S DIC(0)="BL"
"RTN","IB488PRE",39,0)
 S X="IB488"
"RTN","IB488PRE",40,0)
 S DIC("DR")=".02///A claim cannot have a Primary Payer ID of HPRNT/SPRNT.;.03///IB488;.04///1;.05///1"
"RTN","IB488PRE",41,0)
 D ^DIC
"RTN","IB488PRE",42,0)
 K DIC,X,DLAYGO
"RTN","IB488PRE",43,0)
 ;
"RTN","IB488PRE",44,0)
 ; Add new IB ERROR
"RTN","IB488PRE",45,0)
 ;N DIC,X ; WCJ
"RTN","IB488PRE",46,0)
 S DA=$O(^IBE(350.8,"B","IB489",""))
"RTN","IB488PRE",47,0)
 S DIK="^IBE(350.8,"
"RTN","IB488PRE",48,0)
 I DA'="" D ^DIK
"RTN","IB488PRE",49,0)
 S DIC="^IBE(350.8,"
"RTN","IB488PRE",50,0)
 S DLAYGO=350.8
"RTN","IB488PRE",51,0)
 S DIC(0)="BL"
"RTN","IB488PRE",52,0)
 S X="IB489"
"RTN","IB488PRE",53,0)
 S DIC("DR")=".02///Printing to a Clearinghouse is no longer an available option.;.03///IB489;.04///1;.05///1"
"RTN","IB488PRE",54,0)
 D ^DIC
"RTN","IB488PRE",55,0)
 K DIC,X,DLAYGO
"RTN","IB488PRE",56,0)
 ;
"RTN","IB488PRE",57,0)
 ; Update Workers' Comp. 
"RTN","IB488PRE",58,0)
 N Z,DA,DIE,X,Y,DR
"RTN","IB488PRE",59,0)
 D BMES^XPDUTL("Updating RATE TYPE file with electronic billable flag")
"RTN","IB488PRE",60,0)
 F Z="WORKERS' COMP." S DA=$O(^DGCR(399.3,"B",Z,"")) I DA,'$P(^DGCR(399.3,DA,0),U,10) S DIE="^DGCR(399.3,",DR=".1///1" D ^DIE
"RTN","IB488PRE",61,0)
 ;
"RTN","IB488PRE",62,0)
 ; delete all output formatter (O.F.) data elements included in build
"RTN","IB488PRE",63,0)
 D DELOF
"RTN","IB488PRE",64,0)
 Q
"RTN","IB488PRE",65,0)
 ;
"RTN","IB488PRE",66,0)
DELOF   ; Delete included OF entries
"RTN","IB488PRE",67,0)
 NEW FILE,DIK,LN,TAG,DATA,PCE,DA,Y
"RTN","IB488PRE",68,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IB488PRE",69,0)
 .F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IB488PRE",70,0)
 .Q
"RTN","IB488PRE",71,0)
  ; Also delete entries which are not going to be re-added later.  These are non-functioning entries in file 364.6.
"RTN","IB488PRE",72,0)
 S DIK="^IBA(364.6,"
"RTN","IB488PRE",73,0)
 F LN=2:1 S TAG="DEL6"_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IB488PRE",74,0)
 .F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364.6",DA,0)) D ^DIK
"RTN","IB488PRE",75,0)
 ;
"RTN","IB488PRE",76,0)
 S DIK="^IBA(364.7,"
"RTN","IB488PRE",77,0)
 F LN=2:1 S TAG="DEL7"_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IB488PRE",78,0)
 .F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364.7",DA,0)) D ^DIK
"RTN","IB488PRE",79,0)
 Q
"RTN","IB488PRE",80,0)
 ; 
"RTN","IB488PRE",81,0)
DEL6    ; remove O.F. entries in file 364.6 (not re-added)
"RTN","IB488PRE",82,0)
 ;
"RTN","IB488PRE",83,0)
 ;;^59^
"RTN","IB488PRE",84,0)
 ;;^1017^1018^1019^1020^
"RTN","IB488PRE",85,0)
 ;;^1082^1311^1314^1083^1833^1084^1085^1086^1087^1088^1089^1090^1091^1852^
"RTN","IB488PRE",86,0)
 ;;^1444^1464^
"RTN","IB488PRE",87,0)
 ;;^1809^1810^1811^1812^1813^1814^1815^1816^1817^1828^
"RTN","IB488PRE",88,0)
 ;;^1853^1854^1855^1856^1857^1858^1859^1860^
"RTN","IB488PRE",89,0)
 ;;^2224^2225^2226^2227
"RTN","IB488PRE",90,0)
 Q
"RTN","IB488PRE",91,0)
 ;
"RTN","IB488PRE",92,0)
DEL7    ; remove O.F. entries in file 364.7 (not re-added)
"RTN","IB488PRE",93,0)
 ;
"RTN","IB488PRE",94,0)
 ;;^17^18^79^80^29^413^
"RTN","IB488PRE",95,0)
 ;;^1509^1510^1511^1512^1513^1514^1515^1516^1517^1528^
"RTN","IB488PRE",96,0)
 ;;^1552^1553^1554^1555^1556^1557^1558^1559^1560^
"RTN","IB488PRE",97,0)
 ;;^1908^1924^1925^1926^
"RTN","IB488PRE",98,0)
 ;;
"RTN","IB488PRE",99,0)
 Q
"RTN","IB488PRE",100,0)
 ;
"RTN","IB488PRE",101,0)
INCLUDE(FILE,Y) ;CODE TO DECIDE WHICH FILE ENTRIES CAN BE INCLUDED IN BUILD
"RTN","IB488PRE",102,0)
 ;FILE = FILE LIST WE SHOULD USE 5=364.5,6=364.6,7=364.7, Y = GLOBAL IEN
"RTN","IB488PRE",103,0)
 ;
"RTN","IB488PRE",104,0)
 N IBOUT,Z,Z0,LINE,TAG
"RTN","IB488PRE",105,0)
 I Y>9999 S IBOUT=0 G INCQ1
"RTN","IB488PRE",106,0)
 F LINE=2:1  S TAG="ENT"_FILE_"+"_LINE Q:$P($T(@TAG),";;",2)=""  I $P($T(@TAG),";;",2)[(U_+Y_U) S IBOUT=1 Q
"RTN","IB488PRE",107,0)
INCQ1 Q +$G(IBOUT)
"RTN","IB488PRE",108,0)
 ;
"RTN","IB488PRE",109,0)
ENT5 ;ENTRIES IN 364.5 WE NEED
"RTN","IB488PRE",110,0)
 ;
"RTN","IB488PRE",111,0)
 ;;^91^110^122^130^132^139^140^141^149^161^182^
"RTN","IB488PRE",112,0)
 ;;^213^219^237^355^356^376^377^
"RTN","IB488PRE",113,0)
 ;;
"RTN","IB488PRE",114,0)
 ;
"RTN","IB488PRE",115,0)
ENT6 ;ENTRIES IN 364.6 WE NEED
"RTN","IB488PRE",116,0)
 ;
"RTN","IB488PRE",117,0)
 ;;^14^15^29^40^43^52^53^59^66^67^
"RTN","IB488PRE",118,0)
 ;;^104^105^109^110^117^119^120^121^122^127^130^136^
"RTN","IB488PRE",119,0)
 ;;^579^784^814^815^960^961^964^971^987^988^
"RTN","IB488PRE",120,0)
 ;;^1097^1098^1099^
"RTN","IB488PRE",121,0)
 ;;^1100^1101^1102^1103^1104^1194^1195^1196^
"RTN","IB488PRE",122,0)
 ;;^1214^1215^1216^1217^1232^1233^1242^1243^1252^1253^1260^1261^1262^1263^1285^1286^1296^1297^1298^1299^
"RTN","IB488PRE",123,0)
 ;;^1321^
"RTN","IB488PRE",124,0)
 ;;^1474^1477^1478^1487^
"RTN","IB488PRE",125,0)
 ;;^1805^1806^1807^1808^1839^1840^
"RTN","IB488PRE",126,0)
 ;;^1927^1928^1929^
"RTN","IB488PRE",127,0)
 ;;^2029^2030^2031^2032^2033^2034^
"RTN","IB488PRE",128,0)
 ;;^2208^2227^2230^2234^2238^2239^2240^2241^2242^2243^2244^2245^2246^2247^2248^2249^2250^
"RTN","IB488PRE",129,0)
 ;;
"RTN","IB488PRE",130,0)
 ;
"RTN","IB488PRE",131,0)
ENT7 ;ENTRIES IN 364.7 WE NEED
"RTN","IB488PRE",132,0)
 ;`
"RTN","IB488PRE",133,0)
 ;;^22^23^29^42^61^63^
"RTN","IB488PRE",134,0)
 ;;^122^124^128^129^142^167^170^180^193^
"RTN","IB488PRE",135,0)
 ;;^378^379^380^381^382^383^384^385^391^392^393^
"RTN","IB488PRE",136,0)
 ;;^410^411^412^413^428^429^438^439^451^452^462^463^464^465^
"RTN","IB488PRE",137,0)
 ;;^650^651^652^653^657^662^
"RTN","IB488PRE",138,0)
 ;;^796^844^845^
"RTN","IB488PRE",139,0)
 ;;^934^948^955^956^989^990^
"RTN","IB488PRE",140,0)
 ;;^1015^1039^
"RTN","IB488PRE",141,0)
 ;;^1120^1121^1122^1127^1138^1139^1140^1144^1145^1150^1158^1159^
"RTN","IB488PRE",142,0)
 ;;^1162^1163^1164^1165^1168^1169^1174^1175^1177^1178^1199^1297^
"RTN","IB488PRE",143,0)
 ;;^1505^1506^1507^1508^1539^1540^
"RTN","IB488PRE",144,0)
 ;;^1627^1628^1629^1675^1676^1677^1678^1679^1680^1681^
"RTN","IB488PRE",145,0)
 ;;^1728^1729^1730^^1731^1732^1733^
"RTN","IB488PRE",146,0)
 ;;^1908^1927^1930^1931^1932^1933^1934^1935^1936^1937^1938^1939^1940^1941^1942^1943^1944^
"RTN","IB488PRE",147,0)
 ;;^2227^
"RTN","IB488PRE",148,0)
 ;;
"RTN","IB488PRE",149,0)
 ;
"RTN","IB488PRE",150,0)
 Q
"RTN","IBCBB1")
0^9^B116504133^B98716914
"RTN","IBCBB1",1,0)
IBCBB1 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ;2-NOV-89
"RTN","IBCBB1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,80,93,106,51,151,148,153,137,232,280,155,320,343,349,363,371,395,384,432,447,488**;21-MAR-94;Build 184
"RTN","IBCBB1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB1",4,0)
 ;
"RTN","IBCBB1",5,0)
 ; *** Begin IB*2.0*488 VD  (Issue 46 RBN)
"RTN","IBCBB1",6,0)
 N I
"RTN","IBCBB1",7,0)
 S I=""
"RTN","IBCBB1",8,0)
 S X=+$G(^DGCR(399,IBIFN,"MP"))
"RTN","IBCBB1",9,0)
 I 'X,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) S X=+$$CURR^IBCEF2(IBIFN)
"RTN","IBCBB1",10,0)
 I X,+$G(^DIC(36,X,3)) S I=$P(^(3),U,$S($$FT^IBCEF(IBIFN)=2:2,1:4))
"RTN","IBCBB1",11,0)
 S I=$$UP^XLFSTR(I)
"RTN","IBCBB1",12,0)
 I (I'=""&(I["PRNT")&($G(IBER)'["IB488")) D 
"RTN","IBCBB1",13,0)
 . S IBER=$G(IBER)_"IB488;"
"RTN","IBCBB1",14,0)
 ;
"RTN","IBCBB1",15,0)
 ; Cause an error if FORCED TO PRINT TO CLEARINGHOUSE
"RTN","IBCBB1",16,0)
 I $P($G(^DGCR(399,IBIFN,"TX")),U,8)=2 D
"RTN","IBCBB1",17,0)
 . S IBER=$G(IBER)_"IB489;"
"RTN","IBCBB1",18,0)
 ;
"RTN","IBCBB1",19,0)
 ; Cause a fatal error if the claim has no procedures & is NOT a UB-04 Inpatient claim.
"RTN","IBCBB1",20,0)
 I +$O(^DGCR(399,IBIFN,"CP",0))=0 D
"RTN","IBCBB1",21,0)
 .I $$INPAT^IBCEF(IBIFN,1),$$INSPRF^IBCEF(IBIFN) Q   ; inpatient UB-04 check
"RTN","IBCBB1",22,0)
 .I '$$INPAT^IBCEF(IBIFN,1),$$INSPRF^IBCEF(IBIFN) D  Q      ; Outpatient Institutional Claim.
"RTN","IBCBB1",23,0)
 ..I IBER["IB352" Q
"RTN","IBCBB1",24,0)
 ..S IBER=IBER_"IB352;"
"RTN","IBCBB1",25,0)
 .;
"RTN","IBCBB1",26,0)
 .; Professional claim
"RTN","IBCBB1",27,0)
 .I IBER["IB353" Q
"RTN","IBCBB1",28,0)
 .S IBER=IBER_"IB353;"
"RTN","IBCBB1",29,0)
 .Q
"RTN","IBCBB1",30,0)
 ; *** End IB*2.0*488 -- VD
"RTN","IBCBB1",31,0)
 ;
"RTN","IBCBB1",32,0)
 ;MAP TO DGCRBB1
"RTN","IBCBB1",33,0)
 ;
"RTN","IBCBB1",34,0)
% ;Bill Status
"RTN","IBCBB1",35,0)
 N Z,Z0,Z1,IBFT
"RTN","IBCBB1",36,0)
 I $S(+IBST=0:1,1:"^1^2^3^4^7^"'[(U_IBST_U)) S IBER=IBER_"IB045;"
"RTN","IBCBB1",37,0)
 ;
"RTN","IBCBB1",38,0)
 ;Statement Covers From
"RTN","IBCBB1",39,0)
 I IBFDT="" S IBER=IBER_"IB061;"
"RTN","IBCBB1",40,0)
 I IBFDT]"",IBFDT'?7N&(IBFDT'?7N1".".N) S IBER=IBER_"IB061;"
"RTN","IBCBB1",41,0)
 I IBFDT>IBTDT S IBER=IBER_"IB061;" ; from must be on or before the to date 
"RTN","IBCBB1",42,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",43,0)
 ; if inpat - from date must not be prior to admit date.
"RTN","IBCBB1",44,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBFDT<($P($G(^DGPT(+$P(IBND0,U,8),0)),U,2)\1))  S IBER=IBER_"IB061;"
"RTN","IBCBB1",45,0)
 ;
"RTN","IBCBB1",46,0)
 ;Statement Covers To
"RTN","IBCBB1",47,0)
 I IBTDT="" S IBER=IBER_"IB062;"
"RTN","IBCBB1",48,0)
 I IBTDT]"",IBTDT'?7N&(IBTDT'?7N1".".N) S IBER=IBER_"IB062;"
"RTN","IBCBB1",49,0)
 I IBTDT>DT!(IBTDT<IBFDT) S IBER=IBER_"IB062;"  ; to date must not be >than today's date
"RTN","IBCBB1",50,0)
 S IBTFY=$$FY^IBOUTL(IBTDT)
"RTN","IBCBB1",51,0)
 ;
"RTN","IBCBB1",52,0)
 ;Total Charges
"RTN","IBCBB1",53,0)
 ; IB*2.0*447/TAZ Removed this error so that zero dollar revenue codes can process on the 837
"RTN","IBCBB1",54,0)
 ;I +IBTC'>0!(+IBTC'=IBTC) S IBER=IBER_"IB064;"
"RTN","IBCBB1",55,0)
 ;
"RTN","IBCBB1",56,0)
 ;Billable charges for secondary claim
"RTN","IBCBB1",57,0)
 I $$MCRONBIL^IBEFUNC(IBIFN)&(($P(IBNDU1,U,1)-$P(IBNDU1,U,2))'>0) S IBER=IBER_"IB094;"
"RTN","IBCBB1",58,0)
 ;Fiscal Year 1
"RTN","IBCBB1",59,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",60,0)
 ;
"RTN","IBCBB1",61,0)
 ;Check provider link for current user, enterer, reviewer and Authorizor
"RTN","IBCBB1",62,0)
 I '$D(^VA(200,DUZ,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",63,0)
 I IBEU]"",'$D(^VA(200,IBEU,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",64,0)
 I IBRU]"",'$D(^VA(200,IBRU,0)) S IBER=IBER_"IB060;"
"RTN","IBCBB1",65,0)
 I IBAU]"",'$D(^VA(200,IBAU,0)) S IBER=IBER_"IB041;"
"RTN","IBCBB1",66,0)
 ;
"RTN","IBCBB1",67,0)
 I IBER="",+$$STA^PRCAFN(IBIFN)=104 S IBER=IBER_"IB040;"
"RTN","IBCBB1",68,0)
 ; If ins bill, must have valid COB sequence
"RTN","IBCBB1",69,0)
 I $P(IBND0,U,11)="i",$S($P(IBND0,U,21)="":1,1:"PST"'[$P(IBND0,U,21)) S IBER=IBER_"IB324;"
"RTN","IBCBB1",70,0)
 ;
"RTN","IBCBB1",71,0)
 ; Check for valid sec provider id for current ins
"RTN","IBCBB1",72,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)),Z1=+$$COBN^IBCEF(IBIFN) I $P(Z0,U,4+Z1)'="",$P(Z0,U,11+Z1)'="" D
"RTN","IBCBB1",73,0)
 . I '$$SECIDCK^IBCEF74(IBIFN,Z1,$P(Z0,U,11+Z1),Z) D WARN^IBCBB11("Prov secondary id type for the "_$P("PRIMARY^SECONDARY^TERTIARY",U,Z1)_" "_$$EXTERNAL^DILFD(399.0222,.01,,+Z0)_" is invalid/won't transmit")
"RTN","IBCBB1",74,0)
 ; Check NPIs
"RTN","IBCBB1",75,0)
 D NPICHK^IBCBB11
"RTN","IBCBB1",76,0)
 ;
"RTN","IBCBB1",77,0)
 ; Check multiple rx NPIs
"RTN","IBCBB1",78,0)
 D RXNPI^IBCBB11(IBIFN)
"RTN","IBCBB1",79,0)
 ;
"RTN","IBCBB1",80,0)
 ; Check taxonomies
"RTN","IBCBB1",81,0)
 D TAXCHK^IBCBB11
"RTN","IBCBB1",82,0)
 ;
"RTN","IBCBB1",83,0)
 ; Check for Physician Name
"RTN","IBCBB1",84,0)
 K IBXDATA D F^IBCEF("N-ATT/REND PHYSICIAN NAME",,,IBIFN)
"RTN","IBCBB1",85,0)
 ; IB*2.0*432 - CMS1500 no longer needs a claim level rendering
"RTN","IBCBB1",86,0)
 S IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCBB1",87,0)
 I IBFT'=2,$P($G(IBXDATA),U)="" S IBER=IBER_"IB303;"
"RTN","IBCBB1",88,0)
 ;
"RTN","IBCBB1",89,0)
 N FUNCTION,IBINS
"RTN","IBCBB1",90,0)
 ; IB*2.0*432 - CMS1500 no longer needs a claim level rendering
"RTN","IBCBB1",91,0)
 ;S FUNCTION=$S($$FT^IBCEF(IBIFN)=3:4,1:3)
"RTN","IBCBB1",92,0)
 S FUNCTION=$S(IBFT=3:4,1:3)
"RTN","IBCBB1",93,0)
 I IBFT'=2,IBER'["IB303;" D
"RTN","IBCBB1",94,0)
 . F IBINS=1:1:3 D
"RTN","IBCBB1",95,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS)
"RTN","IBCBB1",96,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB1",97,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB1",98,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB1",99,0)
 ... S IBOK=0
"RTN","IBCBB1",100,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB1",101,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB236;",IBINS=2:"IB237;",IBINS=3:"IB238;",1:"")
"RTN","IBCBB1",102,0)
 ;
"RTN","IBCBB1",103,0)
 ; Patch 432 enh5:The IB system shall no longer prevent users from authorizing(fatal error message)a claim because the system cannot find the providersSSNorEIN
"RTN","IBCBB1",104,0)
 ; D PRIIDCHK^IBCBB11
"RTN","IBCBB1",105,0)
 ;
"RTN","IBCBB1",106,0)
 N IBM,IBM1
"RTN","IBCBB1",107,0)
 S IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCBB1",108,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCBB1",109,0)
 I $P(IBM,U),$P($G(^DIC(36,$P(IBM,U),4)),U,6),$P(IBM1,U,2)="" S IBER=IBER_"IB244;"
"RTN","IBCBB1",110,0)
 I $P(IBM,U,2),$P($G(^DIC(36,$P(IBM,U,2),4)),U,6),$P(IBM1,U,3)="" S IBER=IBER_"IB245;"
"RTN","IBCBB1",111,0)
 I $P(IBM,U,3),$P($G(^DIC(36,$P(IBM,U,3),4)),U,6),$P(IBM1,U,4)="" S IBER=IBER_"IB246;"
"RTN","IBCBB1",112,0)
 ;
"RTN","IBCBB1",113,0)
 ; If outside facility, check for ID and qualifier in 355.93
"RTN","IBCBB1",114,0)
 ; 5/15/06 - esg - hard error IB243 turned into warning message instead
"RTN","IBCBB1",115,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCBB1",116,0)
 I Z D
"RTN","IBCBB1",117,0)
 . I $P($G(^IBA(355.93,Z,0)),U,9)=""!($P($G(^IBA(355.93,Z,0)),U,13)="") D
"RTN","IBCBB1",118,0)
 .. N Z1,Z2
"RTN","IBCBB1",119,0)
 .. S Z1="Missing Lab or Facility Primary ID for non-VA facility, "
"RTN","IBCBB1",120,0)
 .. S Z2=$$EXTERNAL^DILFD(399,232,,Z)
"RTN","IBCBB1",121,0)
 .. I $L(Z2)'>19 D WARN^IBCBB11(Z1_Z2) Q
"RTN","IBCBB1",122,0)
 .. D WARN^IBCBB11(Z1),WARN^IBCBB11("     "_Z2)
"RTN","IBCBB1",123,0)
 .. Q
"RTN","IBCBB1",124,0)
 . Q
"RTN","IBCBB1",125,0)
 ;
"RTN","IBCBB1",126,0)
 ; Must be one and only one division on bill
"RTN","IBCBB1",127,0)
 S IBZ=$$MULTDIV^IBCBB11(IBIFN,IBND0)
"RTN","IBCBB1",128,0)
 ; I IBZ S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",129,0)
 ; Allow multi-divisional for OP instutional claims
"RTN","IBCBB1",130,0)
 I IBZ,$$INPAT^IBCEF(IBIFN)!'($$INSPRF^IBCEF(IBIFN)) S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",131,0)
 ; Still need error msg on OP Institutional if No Default division
"RTN","IBCBB1",132,0)
 I IBZ=3,'$$INPAT^IBCEF(IBIFN),$$INSPRF^IBCEF(IBIFN) S IBER=IBER_"IB105;"
"RTN","IBCBB1",133,0)
 ; Division address must be defined in institution file
"RTN","IBCBB1",134,0)
 I $P(IBND0,U,22) D
"RTN","IBCBB1",135,0)
 . N Z,Z0,Z1
"RTN","IBCBB1",136,0)
 . S Z0=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),0))
"RTN","IBCBB1",137,0)
 . S Z1=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),1))
"RTN","IBCBB1",138,0)
 . I $P(Z0,U,2)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",139,0)
 . F Z=1,3,4 I $P(Z1,U,Z)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",140,0)
 ;
"RTN","IBCBB1",141,0)
 ; IB*2.0*432 Check ambulance addresses, COB Non-covered amt. & Attachment Control
"RTN","IBCBB1",142,0)
 I $$AMBCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB329;"
"RTN","IBCBB1",143,0)
 I $$COBAMT^IBCBB11(IBIFN)=1 S IBER=IBER_"IB330;"
"RTN","IBCBB1",144,0)
 I $$TMCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB331;"
"RTN","IBCBB1",145,0)
 I $$ACCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB332;"
"RTN","IBCBB1",146,0)
 I $$COBMRA^IBCBB11(IBIFN)=1 S IBER=IBER_"IB342;"
"RTN","IBCBB1",147,0)
 I $$COBSEC^IBCBB11(IBIFN)=1 S IBER=IBER_"IB343;"
"RTN","IBCBB1",148,0)
 ;
"RTN","IBCBB1",149,0)
 ;CHAMPVA Rate Type and Primary Insurance Carriers Type of Coverage must match
"RTN","IBCBB1",150,0)
 S (IBRTCHV,IBPICHV)=0
"RTN","IBCBB1",151,0)
 I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="CHAMPVA" S IBRTCHV=1
"RTN","IBCBB1",152,0)
 I $P($G(^IBE(355.2,+$P($G(^DIC(36,+IBNDMP,0)),U,13),0)),U,1)="CHAMPVA" S IBPICHV=1
"RTN","IBCBB1",153,0)
 I (+IBRTCHV!+IBPICHV)&('IBRTCHV!'IBPICHV) S IBER=IBER_"IB085;"
"RTN","IBCBB1",154,0)
 ;
"RTN","IBCBB1",155,0)
 N IBZPRC,IBZPRCUB
"RTN","IBCBB1",156,0)
 D F^IBCEF("N-ALL PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBCBB1",157,0)
 ; Procedure Clinic is required for Surgical Procedures Outpt Facility Charges
"RTN","IBCBB1",158,0)
 I +$P(IBND0,U,27)'=2,$$BILLRATE^IBCRU3(IBAT,IBCL,IBEVDT,"RC OUTPATIENT") D
"RTN","IBCBB1",159,0)
 . N Z,Z0,Z1,ZE S (ZE,Z)=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  D  I +ZE S IBER=IBER_"IB320;" Q
"RTN","IBCBB1",160,0)
 .. S Z0=$G(^DGCR(399,IBIFN,"CP",Z,0)),Z1=+Z0 I Z0'[";ICPT(" Q
"RTN","IBCBB1",161,0)
 .. I '((Z1'<10000)&(Z1'>69999))&'((Z1'<93501)&(Z1'>93533)) Q
"RTN","IBCBB1",162,0)
 .. I '$P(Z0,U,7) S ZE=1
"RTN","IBCBB1",163,0)
 ;
"RTN","IBCBB1",164,0)
 ; Extract procedures for UB-04
"RTN","IBCBB1",165,0)
 D F^IBCEF("N-UB-04 PROCEDURES","IBZPRCUB",,IBIFN)
"RTN","IBCBB1",166,0)
 ; Does this bill have ANY prescriptions associated with it?
"RTN","IBCBB1",167,0)
 ; Must bill prescriptions separately from other charges
"RTN","IBCBB1",168,0)
 ;
"RTN","IBCBB1",169,0)
 ; DEM;432 - Call line level provider edit checks.
"RTN","IBCBB1",170,0)
 D LNPROV^IBCBB12(IBIFN)  ; DEM;432 - If there are line provider edits, then routine LNPROV^IBCBB12(IBIFN) updates IBER string.
"RTN","IBCBB1",171,0)
 ; DEM;432 - Call to Other Operating/Operating Provider edit checks.
"RTN","IBCBB1",172,0)
 I $$OPPROVCK^IBCBB12(IBIFN)=1 S IBER=IBER_"IB337;"  ; DEM;432
"RTN","IBCBB1",173,0)
 ; DEM;432 - Line level Attachment Control edits.
"RTN","IBCBB1",174,0)
 I $$LNTMCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB331;"  ; DEM;432
"RTN","IBCBB1",175,0)
 I $$LNACCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB332;"  ; DEM;432
"RTN","IBCBB1",176,0)
 ;
"RTN","IBCBB1",177,0)
 I $$ISRX^IBCEF1(IBIFN) D
"RTN","IBCBB1",178,0)
 . N IBZ,IBRXDEF
"RTN","IBCBB1",179,0)
 . S IBRXDEF=$P($G(^IBE(350.9,1,1)),U,30),IBZ=0
"RTN","IBCBB1",180,0)
 . F  S IBZ=$O(IBZPRCUB(IBZ)) Q:'IBZ  I IBZPRCUB(IBZ),+$P(IBZPRCUB(IBZ),U)'=IBRXDEF S IBER=IBER_"IB102;" Q
"RTN","IBCBB1",181,0)
 . K IBZ
"RTN","IBCBB1",182,0)
 ;
"RTN","IBCBB1",183,0)
 ; Check that COB sequences are not skipped
"RTN","IBCBB1",184,0)
 K Z
"RTN","IBCBB1",185,0)
 F Z=1:1:3 S:+$G(^DGCR(399,IBIFN,"I"_Z)) Z(Z)=""
"RTN","IBCBB1",186,0)
 F Z=0:1:2 S Z0=$O(Z(Z)) Q:'Z0  I Z0'=(Z+1) S IBER=IBER_"IB322;" Q
"RTN","IBCBB1",187,0)
 K Z
"RTN","IBCBB1",188,0)
 ; HD64676  IB*2*371 - OK for payer sequence to be blank when the Rate
"RTN","IBCBB1",189,0)
 ;    Type is either Interagency or Sharing Agreement
"RTN","IBCBB1",190,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,21)="",$P($G(^DGCR(399,IBIFN,0)),U,7)'=4,$P($G(^DGCR(399,IBIFN,0)),U,7)'=9 S IBER=IBER_"IB323;"
"RTN","IBCBB1",191,0)
 K IBXDATA D F^IBCEF("N-PROCEDURE CODING METHD",,,IBIFN)
"RTN","IBCBB1",192,0)
 ; Coding method should agree with types of procedure codes
"RTN","IBCBB1",193,0)
 S IBOK=$S('$O(IBZPRC(0))!(IBXDATA=""):1,1:0)
"RTN","IBCBB1",194,0)
 I 'IBOK S IBOK=1,IBZ=0 F  S IBZ=$O(IBZPRC(IBZ)) Q:'IBZ  I IBZPRC(IBZ),$P(IBZPRC(IBZ),U)'[$S(IBXDATA=9:"ICD",1:"ICP") S IBOK=0 Q
"RTN","IBCBB1",195,0)
 I 'IBOK D WARN^IBCBB11("Coding Method does not agree with all procedure codes found on bill")
"RTN","IBCBB1",196,0)
 D EDITMRA^IBCBB3(.IBQUIT,.IBER,IBIFN,IBFT)
"RTN","IBCBB1",197,0)
 Q:$G(IBQUIT)
"RTN","IBCBB1",198,0)
 ;
"RTN","IBCBB1",199,0)
 ;Other things that could be added:  Rev Code - calculating charges
"RTN","IBCBB1",200,0)
 ;        Diagnosis Coding, if MT copay - check for other co-payments
"RTN","IBCBB1",201,0)
 ;
"RTN","IBCBB1",202,0)
 I $P(IBNDTX,U,8),$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB121;"   ; can't force MRAs to print
"RTN","IBCBB1",203,0)
 I $P(IBNDTX,U,8)!$P(IBNDTX,U,9) D
"RTN","IBCBB1",204,0)
 . Q:$P(IBNDTX,U,8)=2    ; Don't want to do this for option 2 any more.
"RTN","IBCBB1",205,0)
 . D WARN^IBCBB11($S($$REQMRA^IBEFUNC(IBIFN)&($P(IBNDTX,U,9)):"MRA Secondary ",1:"")_"Bill has been forced to print "_$S($P(IBNDTX,U,8)=1!($P(IBNDTX,U,9)=1):"locally",1:"at clearinghouse"))
"RTN","IBCBB1",206,0)
 N IBXZ,IBIZ F IBIZ=12,13,14 S IBXZ=$P(IBNDM,U,IBIZ) I +IBXZ S IBXZ=$P($G(^DPT(DFN,.312,IBXZ,0)),U,18) I +IBXZ S IBXZ=$G(^IBA(355.3,+IBXZ,0)) I +$P(IBXZ,U,12) D
"RTN","IBCBB1",207,0)
 . D WARN^IBCBB11($P($G(^DIC(36,+IBXZ,0)),U,1)_" requires Amb Care Certification")
"RTN","IBCBB1",208,0)
 ;
"RTN","IBCBB1",209,0)
 D VALNDC^IBCBB11(IBIFN,DFN)  ;validate NDC#
"RTN","IBCBB1",210,0)
 ;
"RTN","IBCBB1",211,0)
 ;Build AR array if no errors and MRA not needed or already rec'd
"RTN","IBCBB1",212,0)
 I IBER="",$S($$NEEDMRA^IBEFUNC(IBIFN)!($$REQMRA^IBEFUNC(IBIFN)):0,1:1) D ARRAY
"RTN","IBCBB1",213,0)
 ;
"RTN","IBCBB1",214,0)
 ;Check ROI
"RTN","IBCBB1",215,0)
 N ROIERR
"RTN","IBCBB1",216,0)
 S ROIERR=0 I $P($G(^DGCR(399,IBIFN,"U")),U,5)=1,+$P($G(^DGCR(399,IBIFN,"U")),U,7)=0 S ROIERR=1 ; screen 7 sensitive record and no ROI
"RTN","IBCBB1",217,0)
 I $$ROICHK^IBCBB11(IBIFN,DFN,+IBNDMP) S ROIERR=1 ; check file for sensitive Rx and missing ROI
"RTN","IBCBB1",218,0)
 I ROIERR S IBER=IBER_"IB328;"
"RTN","IBCBB1",219,0)
 ;
"RTN","IBCBB1",220,0)
 ;Verify Line Charges Match Claim Total Charge. IB*2.0*447 BI
"RTN","IBCBB1",221,0)
 I +$$GET1^DIQ(399,IBIFN_",",201)'=+$$IBLNTOT^IBCBB13(IBIFN) S IBER=IBER_"IB344;"
"RTN","IBCBB1",222,0)
 ;
"RTN","IBCBB1",223,0)
 ;Test for valid EIN/SY ID Values. IB*2.0*447 BI
"RTN","IBCBB1",224,0)
 I $$IBSYEI^IBCBB13(IBIFN) S IBER=IBER_"IB345;"
"RTN","IBCBB1",225,0)
 ;
"RTN","IBCBB1",226,0)
 ;Test for a missing ICN. IB*2.0*447 BI
"RTN","IBCBB1",227,0)
 I $$IBMICN^IBCBB13(IBIFN) S IBER=IBER_"IB346;"
"RTN","IBCBB1",228,0)
 ;
"RTN","IBCBB1",229,0)
 ;Test for a ZERO charge amounts. IB*2.0*447 BI
"RTN","IBCBB1",230,0)
 I $$IBRCCHK^IBCBB13(IBIFN) D WARN^IBCBB11("Claim contains revenue codes with no associated charges.")
"RTN","IBCBB1",231,0)
 ;
"RTN","IBCBB1",232,0)
 ;Test for missing "Patient reason for visit". IB*2.0*447 BI
"RTN","IBCBB1",233,0)
 I $$FT^IBCEF(IBIFN)=3,'$$INPAT^IBCEF(IBIFN),$$IBPRV3^IBCBB13(IBIFN) S IBER=IBER_"IB347;"
"RTN","IBCBB1",234,0)
 ;
"RTN","IBCBB1",235,0)
 ;Test for missing Payer ID. IB*2.0*447 BI
"RTN","IBCBB1",236,0)
 ;I $$IBMPID^IBCBB13(IBIFN) S IBER=IBER_"IB348;"
"RTN","IBCBB1",237,0)
 ;Changed Error to Warning. IB*2.0*447 TAZ
"RTN","IBCBB1",238,0)
 I $$IBMPID^IBCBB13(IBIFN) D WARN^IBCBB11("Not all payers have Payer IDs.")
"RTN","IBCBB1",239,0)
 ;
"RTN","IBCBB1",240,0)
 ;Test for missing "Priority (Type) of Admission" for UB-04. IB*2.0*447 BI
"RTN","IBCBB1",241,0)
 I $$FT^IBCEF(IBIFN)=3,$$GET1^DIQ(399,IBIFN_",",158)="" S IBER=IBER_"IB349;"
"RTN","IBCBB1",242,0)
 ;
"RTN","IBCBB1",243,0)
END ;Don't kill IBIFN, IBER, DFN
"RTN","IBCBB1",244,0)
 I $O(^TMP($J,"BILL-WARN",0)),$G(IBER)="" S IBER="WARN" ;Warnings only
"RTN","IBCBB1",245,0)
 K IBBNO,IBEVDT,IBLOC,IBCL,IBTF,IBAT,IBWHO,IBST,IBFDT,IBTDT,IBTC,IBFY,IBFY1,IBAU,IBRU,IBEU,IBARTP,IBFYC,IBMRA,IBTOB,IBTOB12,IBNDU2,IBNDUF3,IBNDUF31,IBNDTX
"RTN","IBCBB1",246,0)
 K IBNDS,IBND0,IBNDU,IBNDM,IBNDMP,IBNDU1,IBFFY,IBTFY,IBFT,IBRTCHV,IBPICHV,IBXDATA,IBOK
"RTN","IBCBB1",247,0)
 I $D(IBER),IBER="" W !,"No Errors found for National edits"
"RTN","IBCBB1",248,0)
 Q
"RTN","IBCBB1",249,0)
 ;
"RTN","IBCBB1",250,0)
ARRAY ;Build PRCASV(array)
"RTN","IBCBB1",251,0)
 N IBCOBN,X
"RTN","IBCBB1",252,0)
 K PRCASV
"RTN","IBCBB1",253,0)
 Q:$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))
"RTN","IBCBB1",254,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCBB1",255,0)
 S X=IBIFN
"RTN","IBCBB1",256,0)
 S PRCASV("BDT")=DT,PRCASV("ARREC")=IBIFN
"RTN","IBCBB1",257,0)
 S PRCASV("APR")=DUZ
"RTN","IBCBB1",258,0)
 S PRCASV("PAT")=DFN,PRCASV("CAT")=$P(^DGCR(399.3,IBAT,0),"^",6)
"RTN","IBCBB1",259,0)
 I IBWHO="i" S PRCASV("DEBTOR")=+IBNDMP_";DIC(36,"
"RTN","IBCBB1",260,0)
 S PRCASV("DEBTOR")=$S(IBWHO="p":DFN_";DPT(",IBWHO="o":$P(IBNDM,"^",11)_";DIC(4,",IBWHO="i":PRCASV("DEBTOR"),1:"")
"RTN","IBCBB1",261,0)
 S PRCASV("CARE")=$E($$TOB^IBCEF1(IBIFN),1,2)
"RTN","IBCBB1",262,0)
 S PRCASV("FY")=$$FY^IBOUTL(DT)_U_($P(IBNDU1,U)-$P(IBNDU1,U,2))
"RTN","IBCBB1",263,0)
 ;S PRCASV("FY")=$P(IBNDU1,U,9)_U_$S($P(IBNDU1,U,2)]"":($P(IBNDU1,U,10)-$P(IBNDU1,U,2)),1:$P(IBNDU1,U,10))_$S($P(IBNDU1,U,11)]"":U_$P(IBNDU1,U,11)_U_$P(IBNDU1,U,12),1:"")
"RTN","IBCBB1",264,0)
PLUS I IBWHO="i",$P(IBNDM,"^",2),$D(^DIC(36,$P(IBNDM,"^",2),0)) S PRCASV("2NDINS")=$P(IBNDM,"^",2)
"RTN","IBCBB1",265,0)
 I IBWHO="i",$P(IBNDM,"^",3),$D(^DIC(36,$P(IBNDM,"^",3),0)) S PRCASV("3RDINS")=$P(IBNDM,"^",3)
"RTN","IBCBB1",266,0)
 ;
"RTN","IBCBB1",267,0)
 N IBX S IBX=$P(IBND0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:"") Q:IBX=""
"RTN","IBCBB1",268,0)
 N IBNDI1
"RTN","IBCBB1",269,0)
 Q:'$D(^DGCR(399,IBIFN,IBX))  S IBNDI1=^(IBX)
"RTN","IBCBB1",270,0)
 S:$P(IBNDI1,"^",3)]"" PRCASV("GPNO")=$P(IBNDI1,"^",3)
"RTN","IBCBB1",271,0)
 S:$P(IBNDI1,"^",15)]"" PRCASV("GPNM")=$P(IBNDI1,"^",15)
"RTN","IBCBB1",272,0)
 S:$P(IBNDI1,"^",17)]"" PRCASV("INPA")=$P(IBNDI1,"^",17)
"RTN","IBCBB1",273,0)
 S:$P(IBNDI1,"^",2)]"" PRCASV("IDNO")=$P(IBNDI1,"^",2),PRCASV("INID")=PRCASV("IDNO")
"RTN","IBCBB1",274,0)
 ; Check that this is a secondary or tertiary bill and insurance for previous
"RTN","IBCBB1",275,0)
 ; COB sequence is Medicare WNR and MRA is active --> send data elements to AR
"RTN","IBCBB1",276,0)
 I IBCOBN>1,$$WNRBILL^IBEFUNC(IBIFN,IBCOBN-1),$$EDIACTV^IBCEF4(2) D MRA
"RTN","IBCBB1",277,0)
 Q
"RTN","IBCBB1",278,0)
 ;
"RTN","IBCBB1",279,0)
MRA N IBEOB S IBEOB=0
"RTN","IBCBB1",280,0)
 ;
"RTN","IBCBB1",281,0)
 K PRCASV("MEDURE"),PRCASV("MEDCA")
"RTN","IBCBB1",282,0)
 ; Get EOB data
"RTN","IBCBB1",283,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCBB1",284,0)
 . D MRACALC^IBCEMU2(IBEOB,IBIFN,1,.PRCASV)
"RTN","IBCBB1",285,0)
 Q  ;MRA
"RTN","IBCBB1",286,0)
 ;
"RTN","IBCBB1",287,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB1",288,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB2")
0^32^B54197066^B51205466
"RTN","IBCBB2",1,0)
IBCBB2 ;ALB/ARH - CONTINUATION OF EDIT CHECKS ROUTINE (CMS-1500) ;04/14/92
"RTN","IBCBB2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,245,232,296,320,349,371,403,432,447,473,488**;21-MAR-94;Build 184
"RTN","IBCBB2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB2",4,0)
 ;
"RTN","IBCBB2",5,0)
 ;MAP TO DGCRBB2
"RTN","IBCBB2",6,0)
 ;
"RTN","IBCBB2",7,0)
EN ;
"RTN","IBCBB2",8,0)
 N IBI,IBJ,IBN,IBY,IBDX,IBDXO,IBDXL,IBDXTYP,IBCPT,IBCPTL,IBOLAB,Z,IBXSAVE,IBLOC,IBTX,IBPS,IBSP,IBLCT,IBNVFLG,IBU3
"RTN","IBCBB2",9,0)
 I '$D(IBER) S IBER=""
"RTN","IBCBB2",10,0)
 S IBTX=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB2",11,0)
 ;
"RTN","IBCBB2",12,0)
 ; Max 4 modifiers per CPT code allowed before warning
"RTN","IBCBB2",13,0)
 K IBXDATA
"RTN","IBCBB2",14,0)
 D F^IBCEF("N-HCFA 1500 MODIFIERS",,,IBIFN) ;Get modifiers
"RTN","IBCBB2",15,0)
 ;
"RTN","IBCBB2",16,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>4 S IBI="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 4 modifiers - only first 4 will be used" D WARN^IBCBB11(IBI)
"RTN","IBCBB2",17,0)
 ; ICD-9 diagnosis, at least 1 required
"RTN","IBCBB2",18,0)
 D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBER=IBER_"IB071;"
"RTN","IBCBB2",19,0)
 S IBI=$O(IBDXO(0))
"RTN","IBCBB2",20,0)
 I IBI D
"RTN","IBCBB2",21,0)
 .S IBDXTYP=$E($$ICD9^IBACSV(+$P(IBDXO(IBI),U)))
"RTN","IBCBB2",22,0)
 .S:IBDXTYP="E" IBER=IBER_"IB117;"
"RTN","IBCBB2",23,0)
 .I $$INPAT^IBCEF(IBIFN,1),IBDXTYP="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",24,0)
 .Q
"RTN","IBCBB2",25,0)
 ;
"RTN","IBCBB2",26,0)
 ; CPT procs must be associated with a dx, must have a defined provider
"RTN","IBCBB2",27,0)
 S (IBLOC,IBN,IBI,IBY)=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:IBI'?1N.N  S IBCPT=^(IBI,0) D  I +IBY S IBN=1
"RTN","IBCBB2",28,0)
 . I 'IBLOC,$P(IBCPT,U,15)'="",IBTX S Z="At least 1 charge has local box 24K data that will not be transmitted - " S IBLOC=1 D WARN^IBCBB11(Z) S Z="  This data will only print locally" D WARN^IBCBB11(Z)
"RTN","IBCBB2",29,0)
 . I $P(IBCPT,U)'["ICPT(" S:IBER'["IB092" IBER=IBER_"IB092;" Q
"RTN","IBCBB2",30,0)
 . S IBY=1 F IBJ=11:1:14 I +$P(IBCPT,"^",IBJ) S IBCPTL(+$P(IBCPT,"^",IBJ))="",IBY=0
"RTN","IBCBB2",31,0)
 I +IBN S IBER=IBER_"IB072;"
"RTN","IBCBB2",32,0)
 ;
"RTN","IBCBB2",33,0)
 I '$$OCC10(IBIFN,.IBDX,2) S IBER=IBER_"IB093;"
"RTN","IBCBB2",34,0)
 ; CMS-1500: dxs associated with procs must be defined dxs for the bill
"RTN","IBCBB2",35,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI))  Q:'IBI  S IBDXL(IBDX(IBI))=""
"RTN","IBCBB2",36,0)
 S (IBN,IBI)=0 F  S IBI=$O(IBCPTL(IBI)) Q:'IBI  I '$D(IBDXL(IBI)) S IBN=1 Q
"RTN","IBCBB2",37,0)
 I +IBN S IBER=IBER_"IB073;"
"RTN","IBCBB2",38,0)
 ; ejk *296* Change # of diagnoses codes from 4 to 8 on CMS-1500 Claims. 
"RTN","IBCBB2",39,0)
 ; baa *488* Change # of diagnoses codes from 8 to 12.
"RTN","IBCBB2",40,0)
 I IBTX S IBI=12 F  S IBI=$O(IBDXO(IBI)) Q:'IBI  S Z=+$G(IBDX(+$G(IBDXO(IBI)))) I Z,$D(IBCPTL(Z)) D WARN^IBCBB11("Too many diagnoses for claim & will be rejected - consider printing locally")
"RTN","IBCBB2",41,0)
 ;
"RTN","IBCBB2",42,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="B" S IBER=IBER_"IB087;"
"RTN","IBCBB2",43,0)
 ;
"RTN","IBCBB2",44,0)
 ; IB*320 - CLIA# error/warning - error msg for MRA claims, else warning
"RTN","IBCBB2",45,0)
 I $P(IBNDU2,U,13)="",$$CLIAREQ^IBCEP8A(IBIFN) D
"RTN","IBCBB2",46,0)
 . I $$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB235;" Q
"RTN","IBCBB2",47,0)
 . D WARN^IBCBB11("Claim contains laboratory services. The payer may require a CLIA #.")
"RTN","IBCBB2",48,0)
 . Q
"RTN","IBCBB2",49,0)
 ;
"RTN","IBCBB2",50,0)
 ; Only one occurrence code can be present for event date for box 14
"RTN","IBCBB2",51,0)
 S Z=$$EVENT^IBCF22(IBIFN,.IBXSAVE,.IBI)
"RTN","IBCBB2",52,0)
 I IBI S IBER=IBER_"IB099;"
"RTN","IBCBB2",53,0)
 ;
"RTN","IBCBB2",54,0)
 ; esg - 6/6/07 - warning if missing non-VA care type for outside facility
"RTN","IBCBB2",55,0)
 S IBNVFLG=0
"RTN","IBCBB2",56,0)
 I $P(IBNDU2,U,10),'$P(IBNDU2,U,11) D WARN^IBCBB11("Non-VA facility indicated, but the Non-VA Care Type field is not defined") S IBNVFLG=1
"RTN","IBCBB2",57,0)
 ;
"RTN","IBCBB2",58,0)
 ; unit/charge limits
"RTN","IBCBB2",59,0)
 K IBXDATA
"RTN","IBCBB2",60,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN) ;Get charge lines
"RTN","IBCBB2",61,0)
 S (IBLCT,IBOLAB)=0,IBPS="",IBSP=$$BILLSPEC^IBCEU3(IBIFN)
"RTN","IBCBB2",62,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBER["IB310"!(IBER["IB311")
"RTN","IBCBB2",63,0)
 . S IBLCT=IBLCT+1
"RTN","IBCBB2",64,0)
 . I $P(IBNDU2,U,11) D
"RTN","IBCBB2",65,0)
 .. I '$P(IBXDATA(IBI),U,11) S IBPS=IBPS_$S(IBPS'="":",",1:"")_IBI Q
"RTN","IBCBB2",66,0)
 .. I $P(IBXDATA(IBI),U,14),"24"'[$P(IBNDU2,U,11) D WARN^IBCBB11("Outside lab charges exist on a non-lab NON-VA bill")
"RTN","IBCBB2",67,0)
 . ; Start IB*2.0*473 Changed the following two warnings to errors.
"RTN","IBCBB2",68,0)
 . ;I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Purchased service amounts are invalid unless this is a NON-VA bill")
"RTN","IBCBB2",69,0)
 . ;I IBNVFLG,'$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Non-VA facility indicated, but no purchased service charge on line# "_IBI)
"RTN","IBCBB2",70,0)
 . I $G(IBER)'["IB350" I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) S IBER=IBER_"IB350;"
"RTN","IBCBB2",71,0)
 . I $G(IBER)'["IB351" I IBNVFLG,'$P(IBXDATA(IBI),U,11) S IBER=IBER_"IB351;"
"RTN","IBCBB2",72,0)
 . ; End IB*2.0*473
"RTN","IBCBB2",73,0)
 . I $G(IBER)'["IB310" I $D(IBXDATA(IBI,"A")) S IBER=IBER_"IB310;" Q
"RTN","IBCBB2",74,0)
 . I $D(IBXDATA(IBI,"ARX")),IBER'["311;" S IBER=IBER_"IB311;" Q
"RTN","IBCBB2",75,0)
 . I $P(IBXDATA(IBI),U,14) S IBOLAB=IBOLAB+1
"RTN","IBCBB2",76,0)
 . ; Place of service required => remove edit below for IB*2.0*488 ; baa
"RTN","IBCBB2",77,0)
 . ;I $G(IBER)'["IB314;",$P(IBXDATA(IBI),U,3)="" S IBER=IBER_"IB314;"
"RTN","IBCBB2",78,0)
 . ; Type of service required => remove edit below for IB*2.0*488 ; baa
"RTN","IBCBB2",79,0)
 . ;I $G(IBER)'["IB313;",$P(IBXDATA(IBI),U,4)="" S IBER=IBER_"IB313;"
"RTN","IBCBB2",80,0)
 . ; 43 and 53 are invalid types of service
"RTN","IBCBB2",81,0)
 . I $G(IBER)'["IB110;",($P(IBXDATA(IBI),U,4)=43!($P(IBXDATA(IBI),U,4)=53)) S IBER=IBER_"IB110;"
"RTN","IBCBB2",82,0)
 . ; Units for the line item must be less than 100/1000 => Remove edit baa *488
"RTN","IBCBB2",83,0)
 . ;I IBER'["IB088",$P(IBXDATA(IBI),U,9)'<100 D
"RTN","IBCBB2",84,0)
 . ;. I $P(IBXDATA(IBI),U,4)'=7 S IBER=IBER_"IB088;" Q
"RTN","IBCBB2",85,0)
 . ;. I $P(IBXDATA(IBI),U,9)'<1000 S IBER=IBER_"IB088;"
"RTN","IBCBB2",86,0)
 . ; Line item total charge must be less than $10,000.00, greater than 0
"RTN","IBCBB2",87,0)
 . ; IB*2.0*432 - The IB system shall provide the ability for users to enter maximum line item dollar amounts of 9999999.99.
"RTN","IBCBB2",88,0)
 . ; I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",89,0)
 . I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",90,0)
 . ; IB*2.0*447 BI Removed individual warning replaced by a claim level warning.
"RTN","IBCBB2",91,0)
 . ; I '($P(IBXDATA(IBI),U,9)*$P(IBXDATA(IBI),U,8)),$$COBN^IBCEF(IBIFN)'>1 S Z="Procedure "_$P(IBXDATA(IBI),U,5)_" has a 0-charge and will not be transmitted" D WARN^IBCBB11(Z)
"RTN","IBCBB2",92,0)
 I IBTX,IBLCT>50 D
"RTN","IBCBB2",93,0)
 . I $G(IBER)'["IB308" I '$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB308;" Q
"RTN","IBCBB2",94,0)
 . I $G(IBER)'["IB325" I '$P(IBNDTX,U,9) S IBER=IBER_"IB325;"
"RTN","IBCBB2",95,0)
 S IBU3=$P($G(^DGCR(399,IBIFN,"U3")),U,4,7) I $TR(IBU3,U)'="" D
"RTN","IBCBB2",96,0)
 .; ib*2.0*432 add line-level check
"RTN","IBCBB2",97,0)
 .;I +IBSP'=35 D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",98,0)
 .I $$LINSPEC^IBCEU3(IBIFN)'[35 D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",99,0)
 .I $G(IBER)'["IB137" I $P(IBU3,U,2)="" S IBER=IBER_"IB137;"
"RTN","IBCBB2",100,0)
 .I $G(IBER)'["IB338" I $P(IBU3,U,4)="" S IBER=IBER_"IB138;" Q
"RTN","IBCBB2",101,0)
 .I $G(IBER)'["IB139" I $P(IBU3,U,3)="","AM"[$P(IBU3,U,4) S IBER=IBER_"IB139;"
"RTN","IBCBB2",102,0)
 .Q
"RTN","IBCBB2",103,0)
 ; IB*2.0*473 BI Changed the following warning to an error.
"RTN","IBCBB2",104,0)
 ;I IBPS'="" D WARN^IBCBB11("NON-VA facility indicated, but no purchased service charge on line item"_$S(IBPS[",":"s",1:"")_" #"_IBPS)
"RTN","IBCBB2",105,0)
 I $G(IBER)'["IB351" I IBPS'="" S IBER=IBER_"IB351;"
"RTN","IBCBB2",106,0)
 I $P(IBNDU2,U,11),$P(IBNDU2,U,11)=4,IBOLAB>1 D WARN^IBCBB11("For proper payment, you must bill each outside lab on a separate claim form")
"RTN","IBCBB2",107,0)
 K IBXDATA
"RTN","IBCBB2",108,0)
 ;
"RTN","IBCBB2",109,0)
 ;       ; Check for Physician Name
"RTN","IBCBB2",110,0)
 D F^IBCEF("N-REFERRING PROVIDER NAME",,,IBIFN)
"RTN","IBCBB2",111,0)
 I $P($G(IBXDATA),U)]"" D
"RTN","IBCBB2",112,0)
 .N IBZ,FUNCTION,IBINS
"RTN","IBCBB2",113,0)
 .S FUNCTION=1
"RTN","IBCBB2",114,0)
 .F IBINS=1:1:3 D
"RTN","IBCBB2",115,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS,FUNCTION)
"RTN","IBCBB2",116,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB2",117,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB2",118,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB2",119,0)
 ... S IBOK=0
"RTN","IBCBB2",120,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB2",121,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB239;",IBINS=2:"IB240;",IBINS=3:"IB241;",1:"")
"RTN","IBCBB2",122,0)
 ;
"RTN","IBCBB2",123,0)
 Q
"RTN","IBCBB2",124,0)
 ;
"RTN","IBCBB2",125,0)
OCC10(IBIFN,IBARR,IBFT) ; Determine if occurrence code 10 exists for pregnancy dx
"RTN","IBCBB2",126,0)
 ; IBARR=array subscripted by ien of DX code if IBFT=2 (CMS-1500 form)
"RTN","IBCBB2",127,0)
 ;                         by seq # and = ien of DX code if IBFT'=2
"RTN","IBCBB2",128,0)
 ;
"RTN","IBCBB2",129,0)
 N IBN,IBI,IBXDATA,IBXSAVE,IBDX,Z
"RTN","IBCBB2",130,0)
 S IBN=1
"RTN","IBCBB2",131,0)
 ;
"RTN","IBCBB2",132,0)
 I '$D(^TMP($J,"LMD")) D
"RTN","IBCBB2",133,0)
 . D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCBB2",134,0)
 . S ^TMP($J,"LMD")=""
"RTN","IBCBB2",135,0)
 . S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  I +IBXSAVE("OCC",Z)=10 S ^TMP($J,"LMD")=1 Q
"RTN","IBCBB2",136,0)
 ;
"RTN","IBCBB2",137,0)
 I '^TMP($J,"LMD") S IBI=0 F  S IBI=$O(IBARR(IBI))  Q:'IBI  D  Q:'IBN
"RTN","IBCBB2",138,0)
 . N Z,Z1
"RTN","IBCBB2",139,0)
 . ; If a pregnancy DX exists, must be an occurrence code 10 for LMP date
"RTN","IBCBB2",140,0)
 . ; dx ranges are: V22*-V24*, V27*-V28*, 630*-677*
"RTN","IBCBB2",141,0)
 . S IBDX=$S($G(IBFT)'=2:+IBARR(IBI),1:IBI)
"RTN","IBCBB2",142,0)
 . S Z=$E($P($$ICD9^IBACSV(IBDX),U),1,3),Z1=$E(Z,2,3)
"RTN","IBCBB2",143,0)
 . I $S(Z'<630&(Z<678):1,$E(Z)="V":$S(Z1'<22&(Z1<25):1,1:Z1'<27&(Z1<28)),1:0) S IBN=0 ;Pregnancy Dx exists
"RTN","IBCBB2",144,0)
 ;
"RTN","IBCBB2",145,0)
OCC10Q K ^TMP($J,"LMD")
"RTN","IBCBB2",146,0)
 Q IBN
"RTN","IBCBB2",147,0)
 ;
"RTN","IBCBB7")
0^42^B28157499^B27582918
"RTN","IBCBB7",1,0)
IBCBB7 ;ALB/BGA - CONT. OF MEDICARE EDIT CHECKS ;09/10/98
"RTN","IBCBB7",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,240,447,488**;21-MAR-94;Build 184
"RTN","IBCBB7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB7",4,0)
 ;
"RTN","IBCBB7",5,0)
 ; Revenue Codes
"RTN","IBCBB7",6,0)
 ;
"RTN","IBCBB7",7,0)
 ; rev codes must be between 100 AND 999
"RTN","IBCBB7",8,0)
 I $O(IBREV1(100),-1)>0!($O(IBREV1(999))>0) S IBQUIT=$$IBER^IBCBB3(.IBER,184) Q:IBQUIT
"RTN","IBCBB7",9,0)
 N IBRATYP
"RTN","IBCBB7",10,0)
 ;
"RTN","IBCBB7",11,0)
 ; ibrev1(rev cd,seq #)=Rev code^ptr cpt^unit chg^units^total^tot unc^^^mod ptrs
"RTN","IBCBB7",12,0)
 ; 3 subsection edits
"RTN","IBCBB7",13,0)
 ;
"RTN","IBCBB7",14,0)
 D F^IBCEF("N-BILL RATE TYPE","IBZ",,IBIFN)
"RTN","IBCBB7",15,0)
 ; Don't apply some edits unless specific rate types
"RTN","IBCBB7",16,0)
 S IBZ=$P($G(^DGCR(399.3,+IBZ,0)),U)
"RTN","IBCBB7",17,0)
 S IBRATYP=$S(IBZ="":1,IBZ["TRICARE"!(IBZ["CHAMPVA")!(IBZ["SHARING")!(IBZ["REIMBURS"):1,1:0)
"RTN","IBCBB7",18,0)
 S IBREVC=0 F  S IBREVC=$O(IBREV1(IBREVC)) Q:IBREVC=""  D  Q:IBQUIT
"RTN","IBCBB7",19,0)
 . S IBI=0
"RTN","IBCBB7",20,0)
 . F  S IBI=$O(IBREV1(IBREVC,IBI)) Q:'IBI  D  Q:IBQUIT
"RTN","IBCBB7",21,0)
 . . ;
"RTN","IBCBB7",22,0)
 . . S IBREVD=IBREV1(IBREVC,IBI),IBREVC12=$E(IBREVC,1,2),IBBCPT=$P(IBREVD,U,2)
"RTN","IBCBB7",23,0)
 . . ;
"RTN","IBCBB7",24,0)
 . . ; IB*2.0*447/TAZ Removed this error so that zero dollar revenue codes can process on the 837
"RTN","IBCBB7",25,0)
 . . ; No charge associated with rev code
"RTN","IBCBB7",26,0)
 . . ;I '$P(IBREVD,U,3),IBREVC12'=18 S IBQUIT=$$IBER^IBCBB3(.IBER,185) Q:IBQUIT
"RTN","IBCBB7",27,0)
 . . ;
"RTN","IBCBB7",28,0)
 . . ; Charges cannot be negative dollar amounts
"RTN","IBCBB7",29,0)
 . . I $P(IBREVD,U,5)<0 S IBQUIT=$$IBER^IBCBB3(.IBER,213) Q:IBQUIT
"RTN","IBCBB7",30,0)
 . . ;
"RTN","IBCBB7",31,0)
 . . ; Non Covered charges cannot be a negative amount
"RTN","IBCBB7",32,0)
 . . ;     and must not be > total charge
"RTN","IBCBB7",33,0)
 . . I $P(IBREVD,U,6)>$P(IBREVD,U,5)!($P(IBREVD,U,6)<0) S IBQUIT=$$IBER^IBCBB3(.IBER,214) Q:IBQUIT
"RTN","IBCBB7",34,0)
 . . ;
"RTN","IBCBB7",35,0)
 . . ; =====
"RTN","IBCBB7",36,0)
 . . ; Accommodation revenue code edits
"RTN","IBCBB7",37,0)
 . . I IBREV1(IBREVC)="AC" D  Q
"RTN","IBCBB7",38,0)
 . . . N IBBSEC
"RTN","IBCBB7",39,0)
 . . . ; dup Rev accom cds must have diff rates and bedsections
"RTN","IBCBB7",40,0)
 . . . S IBBSEC=$P($G(^DGCR(399,IBIFN,"RC",+$P(IBREVD,U,8),0)),U,5)
"RTN","IBCBB7",41,0)
 . . . I $O(IBREV1(IBREVC,1)) D  Q:IBQUIT
"RTN","IBCBB7",42,0)
 . . . . I IBI=1 K IBREVDUP S IBREVDUP(+$P(IBREVD,U,3)_" "_IBBSEC)=""
"RTN","IBCBB7",43,0)
 . . . . I IBI>1,$D(IBREVDUP(+$P(IBREVD,U,3)_" "_IBBSEC)) S IBQUIT=$$IBER^IBCBB3(.IBER,186)
"RTN","IBCBB7",44,0)
 . . . ; Total Line charges for accom rev codes can not be < 0
"RTN","IBCBB7",45,0)
 . . . I IBREVC>99,IBREVC<220,IBREVTOT("AC")<0 S IBQUIT=$$IBER^IBCBB3(.IBER,211)
"RTN","IBCBB7",46,0)
 . . . ; For accom rev codes, detail charge for revc=18x must be 0
"RTN","IBCBB7",47,0)
 . . . I IBREVC12=18,$P(IBREV1(IBREVC,IBI),U,3) S IBQUIT=$$IBER^IBCBB3(.IBER,212)
"RTN","IBCBB7",48,0)
 . . ;
"RTN","IBCBB7",49,0)
 . . ; =====
"RTN","IBCBB7",50,0)
 . . ; Inpatient Ancillary only Rev Codes edit 60-4
"RTN","IBCBB7",51,0)
 . . I IBREV1(IBREVC)="AI" D  Q
"RTN","IBCBB7",52,0)
 . . . ; Cannot have dup anc REV codes except 24X
"RTN","IBCBB7",53,0)
 . . . N IBMOD
"RTN","IBCBB7",54,0)
 . . . S IBMOD=$P(IBREVD,U,9)
"RTN","IBCBB7",55,0)
 . . . ;I IBRATYP,IBI>1,IBREVC12'=24 S IBQUIT=$$IBER^IBCBB3(.IBER,188)
"RTN","IBCBB7",56,0)
 . . . ;
"RTN","IBCBB7",57,0)
 . . . ;HCPCS code is required for rev code 636 and TOB 13X, 14X, 83X
"RTN","IBCBB7",58,0)
 . . . I IBREVC=636,IBBCPT="",(IBTOB12=13!(IBTOB12=14)!(IBTOB12=83)) S IBQUIT=$$IBER^IBCBB3(.IBER,191)
"RTN","IBCBB7",59,0)
 . . . ;
"RTN","IBCBB7",60,0)
 . . ; =====
"RTN","IBCBB7",61,0)
 . . ; OUTPATIENT ANCILLARY only Rev Codes edit rec 61-04
"RTN","IBCBB7",62,0)
 . . I IBREV1(IBREVC)="AO" D  Q
"RTN","IBCBB7",63,0)
 . . . ;
"RTN","IBCBB7",64,0)
 . . . ; Rev codes with different HCPCS codes can be duplicated => baa ; 488 ; removed to allow splitting.
"RTN","IBCBB7",65,0)
 . . . ;I $$FT^IBCEF(IBIFN)=3,$O(IBREV1(IBREVC,1))  D  Q:IBQUIT
"RTN","IBCBB7",66,0)
 . . . ;. N IBMOD
"RTN","IBCBB7",67,0)
 . . . ;. S IBMOD=$P(IBREVD,U,9)
"RTN","IBCBB7",68,0)
 . . . ;. I IBI=1 K IBREVDUP S IBREVDUP(IBBCPT_" "_IBMOD)=""
"RTN","IBCBB7",69,0)
 . . . ;. I '$$ISRX^IBCEF1(IBIFN),IBI>1,$D(IBREVDUP(IBBCPT_" "_IBMOD)),IBER'["IB192;" S IBQUIT=$$IBER^IBCBB3(.IBER,192)
"RTN","IBCBB7",70,0)
 . . . ;
"RTN","IBCBB7",71,0)
 . . . ; Rev Code 49x can not be entered with 36x and 37x
"RTN","IBCBB7",72,0)
 . . . I IBREVC12=49,$O(IBREV1(380),-1)'<360 S IBQUIT=$$IBER^IBCBB3(.IBER,195) Q:IBQUIT
"RTN","IBCBB7",73,0)
 . . . ;
"RTN","IBCBB7",74,0)
 . . . ; If Rev=42x & billtype=83x!13x req occ cds 11&35 and val code 50
"RTN","IBCBB7",75,0)
 . . . ;I IBREVC12=42,(IBTOB12=83!(IBTOB12=13)) D  Q:IBQUIT
"RTN","IBCBB7",76,0)
 . . . ;. I '$D(IBVALCD(50))!'$D(IBOCCD(11))!'$D(IBOCCD(35)) S IBQUIT=$$IBER^IBCBB3(.IBER,196)
"RTN","IBCBB7",77,0)
 . . . ;
"RTN","IBCBB7",78,0)
 . . . ; If Rev=43x & billtype=83x!13x req occ cds 11&44 and val code 51
"RTN","IBCBB7",79,0)
 . . . ;I IBREVC12=43,(IBTOB12=83!(IBTOB12=13)) D
"RTN","IBCBB7",80,0)
 . . . ;. I '$D(IBVALCD(51))!'$D(IBOCCD(11))!'$D(IBOCCD(44)) S IBQUIT=$$IBER^IBCBB3(.IBER,197)
"RTN","IBCBB7",81,0)
 . . . ;
"RTN","IBCBB7",82,0)
 . . . ; If Rev=44x & billtype=83x!13x req occ cds 11&45 and val code 52
"RTN","IBCBB7",83,0)
 . . . ;I IBREVC12=44,(IBTOB12=83!(IBTOB12=13)) D
"RTN","IBCBB7",84,0)
 . . . ;. I '$D(IBVALCD(52))!'$D(IBOCCD(11))!'$D(IBOCCD(45)) S IBQUIT=$$IBER^IBCBB3(.IBER,198)
"RTN","IBCBB7",85,0)
 . . . ;
"RTN","IBCBB7",86,0)
 . . . ; If Rev=943 & billtype=83x!13x req occ cds 11&46 and val code 53
"RTN","IBCBB7",87,0)
 . . . ;I IBREVC=943,(IBTOB12=83!IBTOB12=13) D
"RTN","IBCBB7",88,0)
 . . . ;. I '$D(IBVALCD(53))!('$D(IBOCCD(11)))!('$D(IBOCCD(46))) S IBQUIT=$$IBER^IBCBB3(.IBER,199)
"RTN","IBCBB7",89,0)
 . . . ;
"RTN","IBCBB7",90,0)
 . . . ; If Rev=403 & bill type=14x!23x and service date >= 01-01-91
"RTN","IBCBB7",91,0)
 . . . ;   require only HCPCS codes 76092 and no other rev codes
"RTN","IBCBB7",92,0)
 . . . I IBREVC=403,IBFDT'<2910101,(IBTOB12=14!(IBTOB12=23)) D
"RTN","IBCBB7",93,0)
 . . . . I $O(IBREV1(403))!$O(IBREV1(403),-1)!(IBBCPT'=76092) S IBQUIT=$$IBER^IBCBB3(.IBER,194) Q
"RTN","IBCBB7",94,0)
 . . . ;
"RTN","IBCBB7",95,0)
 . . . ; If Rev=401 & bill type=13x!14x!23x!71x allow only HCPSCS codes
"RTN","IBCBB7",96,0)
 . . . ;   76090 or 78091
"RTN","IBCBB7",97,0)
 . . . ;I IBREVC=401,(IBTOB12=13!(IBTOB12=14)!(IBTOB12=23)!(IBTOB12=71)),IBBCPT'="",IBBCPT'=76090,IBBCPT'=78091 S IBQUIT=$$IBER^IBCBB3(.IBER,201)
"RTN","IBCBB7",98,0)
 . . . ;
"RTN","IBCBB7",99,0)
 . . . ; Rev code cannot equal 227 or 29x
"RTN","IBCBB7",100,0)
 . . . ;I IBREVC=227!(IBREVC12=29) S IBQUIT=$$IBER^IBCBB3(.IBER,202)
"RTN","IBCBB7",101,0)
 . . . D REVC^IBCBB7A(IBREVD,IBREVC,IBBCPT,IBREVC12,.IBER)
"RTN","IBCBB7",102,0)
 Q:IBQUIT
"RTN","IBCBB7",103,0)
 ;
"RTN","IBCBB7",104,0)
 D ^IBCBB8
"RTN","IBCBB7",105,0)
 Q
"RTN","IBCECOB")
0^11^B17969465^B17473873
"RTN","IBCECOB",1,0)
IBCECOB ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,288,432,488**;21-MAR-1994;Build 184
"RTN","IBCECOB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECOB",4,0)
 ;
"RTN","IBCECOB",5,0)
EN ; -- main entry point for COB management
"RTN","IBCECOB",6,0)
 K IBSRT,IBMRADUP
"RTN","IBCECOB",7,0)
 I $G(IBMRANOT) D EN^VALM("IBCEM COB MANAGEMENT") ;WCJ;IB*2.0*432
"RTN","IBCECOB",8,0)
 I '$G(IBMRANOT) D EN^VALM("IBCEM MRA MANAGEMENT") ;WCJ;IB*2.0*432
"RTN","IBCECOB",9,0)
 Q
"RTN","IBCECOB",10,0)
 ;
"RTN","IBCECOB",11,0)
HDR ; -- header code
"RTN","IBCECOB",12,0)
 I '$G(IBMRANOT) S VALMSG="!=Data Mismatch/MSE      Enter ?? for more actions"
"RTN","IBCECOB",13,0)
 Q
"RTN","IBCECOB",14,0)
 ;
"RTN","IBCECOB",15,0)
INIT ; -- init variables and list array
"RTN","IBCECOB",16,0)
 N DIC,DIRUT,DIROUT,DTOUT,DUOUT,X,Y,DIR,IB1
"RTN","IBCECOB",17,0)
 K ^TMP("IBBIL",$J)
"RTN","IBCECOB",18,0)
 S IBSRT=""
"RTN","IBCECOB",19,0)
 S IB1=1
"RTN","IBCECOB",20,0)
 W !
"RTN","IBCECOB",21,0)
 F  S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select "_$S('IB1:"Another ",1:"")_"BILLER: "_$S('IB1:"",1:"ALL//") D ^DIC K DIC D  Q:Y<0
"RTN","IBCECOB",22,0)
 . Q:Y<0
"RTN","IBCECOB",23,0)
 . I $D(^TMP("IBBIL",$J,+Y)) W !,"This biller has already been selected" Q
"RTN","IBCECOB",24,0)
 . S ^TMP("IBBIL",$J,+Y)=""
"RTN","IBCECOB",25,0)
 . S IB1=0
"RTN","IBCECOB",26,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",27,0)
 ;
"RTN","IBCECOB",28,0)
 S DIR("A")="Sort By: ",DIR("B")="BILLER"
"RTN","IBCECOB",29,0)
 S DIR(0)="SBA^B:BILLER;D:DAYS SINCE TRANSMISSION OF LATEST BILL;L:DATE LAST "_$S($G(IBMRANOT):"EOB",1:"MRA")_" RECEIVED;"
"RTN","IBCECOB",30,0)
 S DIR(0)=DIR(0)_"I:SECONDARY INSURANCE COMPANY;M:"_$S($G(IBMRANOT):"EOB",1:"MRA")_" STATUS;P:PATIENT NAME;R:PATIENT RESPONSIBILITY;S:SERVICE DATE"
"RTN","IBCECOB",31,0)
 S DIR("?")="Enter the code to indicate how the list should be sorted." D ^DIR K DIR
"RTN","IBCECOB",32,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",33,0)
 S IBSRT=Y
"RTN","IBCECOB",34,0)
 ;
"RTN","IBCECOB",35,0)
 W !
"RTN","IBCECOB",36,0)
 S IBMRADUP=0
"RTN","IBCECOB",37,0)
 S DIR("A")="Do you want to include Denied "_$S($G(IBMRANOT):"EOB",1:"MRA")_"s for Duplicate Claim/Service",DIR("B")="No",DIR(0)="YO"
"RTN","IBCECOB",38,0)
 D ^DIR K DIR
"RTN","IBCECOB",39,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",40,0)
 I Y S IBMRADUP=1
"RTN","IBCECOB",41,0)
 ;
"RTN","IBCECOB",42,0)
 D BLD^IBCECOB1
"RTN","IBCECOB",43,0)
INITQ Q
"RTN","IBCECOB",44,0)
 ;
"RTN","IBCECOB",45,0)
HELP ; -- help code
"RTN","IBCECOB",46,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECOB",47,0)
 Q
"RTN","IBCECOB",48,0)
 ;
"RTN","IBCECOB",49,0)
EXIT ; -- exit code
"RTN","IBCECOB",50,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCOBST",$J),^TMP("IBBIL",$J)
"RTN","IBCECOB",51,0)
 K ^TMP("IBCECOB1",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB",52,0)
 D CLEAN^VALM10
"RTN","IBCECOB",53,0)
 Q
"RTN","IBCECOB",54,0)
 ;
"RTN","IBCECOB",55,0)
EXP ; -- expand code to show additional details of the EOB record
"RTN","IBCECOB",56,0)
 NEW IBDA,IBIFN,LSTENTRY
"RTN","IBCECOB",57,0)
 D SEL^IBCECOB2(.IBDA,1)                       ; selects a bill
"RTN","IBCECOB",58,0)
 S LSTENTRY=+$O(IBDA(0)) I 'LSTENTRY G EXPQ    ; list entry number
"RTN","IBCECOB",59,0)
 S IBIFN=+$G(IBDA(LSTENTRY)) I 'IBIFN G EXPQ   ; bill#
"RTN","IBCECOB",60,0)
 ;
"RTN","IBCECOB",61,0)
 ; If only one MRA on file, call the listman screen and quit
"RTN","IBCECOB",62,0)
 I $$MRACNT^IBCEMU1(IBIFN)=1 D EN^VALM("IBCEM MRA DETAIL") G EXPQ
"RTN","IBCECOB",63,0)
 ;
"RTN","IBCECOB",64,0)
EXPLOOP ; At this point, we know there are multiple MRA's on file
"RTN","IBCECOB",65,0)
 ;
"RTN","IBCECOB",66,0)
 D FULL^VALM1
"RTN","IBCECOB",67,0)
 I $$SEL^IBCEMU1(IBIFN,1,LSTENTRY) D  G EXPLOOP  ; MRA lister/selection
"RTN","IBCECOB",68,0)
 . NEW IBIFN,LSTENTRY,IBDASAVE                   ; protect variables
"RTN","IBCECOB",69,0)
 . M IBDASAVE=IBDA                               ; save off IBDA array
"RTN","IBCECOB",70,0)
 . D EN^VALM("IBCEM MRA DETAIL")                 ; call the listman
"RTN","IBCECOB",71,0)
 . M IBDA=IBDASAVE                               ; restore IBDA array
"RTN","IBCECOB",72,0)
 . Q
"RTN","IBCECOB",73,0)
EXPQ ;
"RTN","IBCECOB",74,0)
 S VALMBCK="R"
"RTN","IBCECOB",75,0)
 Q
"RTN","IBCECOB",76,0)
 ;
"RTN","IBCECOB",77,0)
COBPOSS(IB364) ; Returns 1 if transmit bill ien in IB364 is currently
"RTN","IBCECOB",78,0)
 ; in a status where COB may be performed on the bill
"RTN","IBCECOB",79,0)
 ; Used by index "ACOB", file 364
"RTN","IBCECOB",80,0)
 N IBWNR,IBNSEQ,IB01,IBM1,IBU1,IB0,IBOK,IBMRA
"RTN","IBCECOB",81,0)
 S IBOK=1
"RTN","IBCECOB",82,0)
 S IB0=$G(^IBA(364,IB364,0))
"RTN","IBCECOB",83,0)
 S IBWNR=$$WNRBILL^IBEFUNC(+IB0),IBMRA=$P($G(^DGCR(399,+IB0,"TX")),U,5)
"RTN","IBCECOB",84,0)
 S IB01=$G(^DGCR(399,+IB0,0)),IBM1=$G(^("M1")),IBU1=$G(^("U1"))
"RTN","IBCECOB",85,0)
 I 'IBWNR,IBU1-$P(IBU1,U,2)'>0 S IBOK=0 G COBQ ; Bill has a 0 balance
"RTN","IBCECOB",86,0)
 I $S('IBWNR:$E($P(IB0,U,3))'="A",1:IBMRA'="1N"&(IBMRA'="A")) S IBOK=0 G COBQ ; Not in correct transmit status
"RTN","IBCECOB",87,0)
 S IBNSEQ=+$TR($P(IB0,U,8),"PST","230")
"RTN","IBCECOB",88,0)
 I 'IBNSEQ!'$D(^DGCR(399,+IB0,"I"_IBNSEQ)) S IBOK=0 G COBQ ; No next ins
"RTN","IBCECOB",89,0)
 I "234"'[$P(IB01,U,13) S IBOK=0 G COBQ ; Bill invalid status for COB
"RTN","IBCECOB",90,0)
 I IBNSEQ D
"RTN","IBCECOB",91,0)
 . N Z,IBSTOP
"RTN","IBCECOB",92,0)
 . S IBSTOP=0
"RTN","IBCECOB",93,0)
 . F Z=IBNSEQ:1:3 D  Q:IBSTOP
"RTN","IBCECOB",94,0)
 .. I $D(^DGCR(399,+IB0,"I"_Z)) D
"RTN","IBCECOB",95,0)
 ... ;Insurance must reimburse
"RTN","IBCECOB",96,0)
 ... I $P($G(^DIC(36,+^DGCR(399,+IB0,"I"_Z),0)),U,2)="N" S IBOK=0 Q
"RTN","IBCECOB",97,0)
 ... I $P(IBM1,U,4+Z) S IBOK=0,IBSTOP=1 Q  ; Already has a next seq bill
"RTN","IBCECOB",98,0)
 ... S (IBOK,IBSTOP)=1
"RTN","IBCECOB",99,0)
 ;
"RTN","IBCECOB",100,0)
COBQ Q IBOK
"RTN","IBCECOB",101,0)
 ;
"RTN","IBCECOB1")
0^6^B112283735^B102535687
"RTN","IBCECOB1",1,0)
IBCECOB1 ;ALB/CXW - IB COB MANAGEMENT SCREEN/REPORT ;14-JUN-99
"RTN","IBCECOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,288,348,377,417,432,447,488**;21-MAR-94;Build 184
"RTN","IBCECOB1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECOB1",4,0)
 ;
"RTN","IBCECOB1",5,0)
 ; IBMRANOT = 1 when dealing with the COB Management Worklist.   
"RTN","IBCECOB1",6,0)
 ;            It is set by the entry action in the option file. 
"RTN","IBCECOB1",7,0)
 ;
"RTN","IBCECOB1",8,0)
BLD ; Build list entrypoint
"RTN","IBCECOB1",9,0)
 N I,IBFND,IBB,IBIFN,IB364,IBDA1,IBDTN,IBDA,IBDAY,IBHIS,IBNDS,IBEUT,IBAPY,IBOAM,IBDT,IBMUT,IBBPY,IBINS,IBNDM,IBQ,IBNDI1,IBNDI2,IBNDI3,Z,Z0,IBSEQ,IB3611,IBINS1,IBINS2,IBEXPY,IBNBAL,IBPTRSP,IBAMT,IBMRACNT,IBPTNM,IBSRVC,IBPY,IBB364
"RTN","IBCECOB1",10,0)
 N IBEOBREV,IBDENDUP,EOBTYPE,MSEFLG
"RTN","IBCECOB1",11,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCECOB1",$J),^TMP("IBCOBST",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB1",12,0)
 D CLEAN^VALM10      ; kill data and video control arrays
"RTN","IBCECOB1",13,0)
 S (VALMCNT,MSEFLG)=0,IBHIS=""
"RTN","IBCECOB1",14,0)
 ; IB*2.0*432 IF not MRA, use new CAP index on 399 file
"RTN","IBCECOB1",15,0)
 D:$G(IBMRANOT)=1 CAP^IBCAPP2
"RTN","IBCECOB1",16,0)
 ; since 0 is a valid Review Status, init w/null
"RTN","IBCECOB1",17,0)
 S IBEOBREV=""
"RTN","IBCECOB1",18,0)
 ; get EOB's w/Review Status of 0, 1, 1.5 or 2; If 3 or higher, not needed
"RTN","IBCECOB1",19,0)
 I $G(IBMRANOT)'=1 F  S IBEOBREV=$O(^IBM(361.1,"AMRA",1,IBEOBREV)) Q:IBEOBREV=""  Q:IBEOBREV>2  D
"RTN","IBCECOB1",20,0)
 . S IBDA="A" F  S IBDA=$O(^IBM(361.1,"AMRA",1,IBEOBREV,IBDA),-1) Q:'IBDA  D BLD1
"RTN","IBCECOB1",21,0)
 ; no data accumulated
"RTN","IBCECOB1",22,0)
 I $O(^TMP("IBCOBST",$J,""))="" D NMAT Q
"RTN","IBCECOB1",23,0)
 ; display accumulated data
"RTN","IBCECOB1",24,0)
 D SCRN
"RTN","IBCECOB1",25,0)
 Q
"RTN","IBCECOB1",26,0)
BLD1 ;
"RTN","IBCECOB1",27,0)
 ;;;I '$$ELIG(IBDA) Q
"RTN","IBCECOB1",28,0)
 S MSEFLG=$$ELIG(IBDA) Q:'MSEFLG
"RTN","IBCECOB1",29,0)
 S IBDENDUP=$$DENDUP^IBCEMU4(IBDA,$G(IBMRANOT))
"RTN","IBCECOB1",30,0)
 I '$G(IBMRADUP),IBDENDUP Q     ; don't include denied MRAs/EOBs for Duplicate Claim/Service
"RTN","IBCECOB1",31,0)
 S IB3611=$G(^IBM(361.1,IBDA,0))
"RTN","IBCECOB1",32,0)
 S IBIFN=+IB3611,IB364=$P(IB3611,U,19),IBDT=+$P(IB3611,U,6)
"RTN","IBCECOB1",33,0)
 I $D(^TMP("IBCOBSTX",$J,IBIFN)) Q  ;show each bill once on the worklist
"RTN","IBCECOB1",34,0)
 S IBB=$G(^DGCR(399,IBIFN,0))
"RTN","IBCECOB1",35,0)
 S IBNDS=$G(^DGCR(399,IBIFN,"S")),IBNDI1=$G(^("I1")),IBNDI2=$G(^("I2")),IBNDI3=$G(^("I3")),IBNDM=$G(^("M"))
"RTN","IBCECOB1",36,0)
 S IBMUT=+$P(IBNDS,U,8),IBEUT=+$P(IBNDS,U,2)
"RTN","IBCECOB1",37,0)
 S IBINS="",IBSEQ=$P(IB3611,U,15)
"RTN","IBCECOB1",38,0)
 F I=1:1:3 S Z="IBNDI"_I I @Z D
"RTN","IBCECOB1",39,0)
 . N Q
"RTN","IBCECOB1",40,0)
 . S Q=(IBSEQ=I)
"RTN","IBCECOB1",41,0)
 . I Q S IBINS1=+@Z_U_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",42,0)
 . S IBINS=IBINS_$S(IBINS="":"",1:", ")_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",43,0)
 ; Get the payer/insurance company that comes after Medicare WNR
"RTN","IBCECOB1",44,0)
 ; If WNR is Primary, get the secondary ins. co.
"RTN","IBCECOB1",45,0)
 ; If WNR is secondary, get the tertiary ins. co.
"RTN","IBCECOB1",46,0)
 D  I $P($G(IBINS2),U,2)="" S $P(IBINS2,U,2)="UNKNOWN"
"RTN","IBCECOB1",47,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,1) S IBINS2=+IBNDI2_U_$P($G(^DIC(36,+IBNDI2,0)),U) Q
"RTN","IBCECOB1",48,0)
 . S IBINS2=+IBNDI3_U_$P($G(^DIC(36,+IBNDI3,0)),U)
"RTN","IBCECOB1",49,0)
 S IBFND=0
"RTN","IBCECOB1",50,0)
 ; biller entry not ALL and no biller, then get entered/edited by user
"RTN","IBCECOB1",51,0)
 I $D(^TMP("IBBIL",$J)) D  Q:'IBFND
"RTN","IBCECOB1",52,0)
 . S IBFND=$S($D(^TMP("IBBIL",$J,IBMUT)):IBMUT,$D(^TMP("IBBIL",$J,IBEUT)):IBEUT,1:0)
"RTN","IBCECOB1",53,0)
 S Z=$S(IBFND:IBFND,IBMUT:IBMUT,1:IBEUT)
"RTN","IBCECOB1",54,0)
 S IBMUT=$P($G(^VA(200,+Z,0)),U)_"~"_Z
"RTN","IBCECOB1",55,0)
 S:'$P(IBMUT,"~",2) IBMUT="UNKNOWN~0"
"RTN","IBCECOB1",56,0)
 S IBBPY=+$$COBN^IBCEF(IBIFN),IBQ=1
"RTN","IBCECOB1",57,0)
 ;IBQ;1=EOB without subsequent insurer,0=COB,2=0 balance
"RTN","IBCECOB1",58,0)
 D  ;I IBQ Q
"RTN","IBCECOB1",59,0)
 . ;Check for no reimbursable subsequent insurance
"RTN","IBCECOB1",60,0)
 .  F I=IBBPY+1:1:3 D  Q:'IBQ
"RTN","IBCECOB1",61,0)
 .. S Z="IBNDI"_I,Z=$G(@Z)
"RTN","IBCECOB1",62,0)
 .. I $P($G(^DIC(36,+Z,0)),U,2)="N" S IBQ=0 Q
"RTN","IBCECOB1",63,0)
 . ;Check if next ins doesn't exist or next bill# already created
"RTN","IBCECOB1",64,0)
 . S Z="IBNDI"_(IBBPY+1),Z=$G(@Z)
"RTN","IBCECOB1",65,0)
 . I Z,'$P($G(^DGCR(399,IBIFN,"M1")),U,5+IBBPY) S IBQ=0
"RTN","IBCECOB1",66,0)
 ;
"RTN","IBCECOB1",67,0)
 ; Days since transmission of latest bill in COB - IBDAY
"RTN","IBCECOB1",68,0)
 S IBDAY=+$P($G(^DGCR(399,IBIFN,"TX")),U,2) I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1)
"RTN","IBCECOB1",69,0)
 ; if no Last Electronic Extract Date on file 399, get it from file 364
"RTN","IBCECOB1",70,0)
 I 'IBDAY D  I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1) ;calc. the difference
"RTN","IBCECOB1",71,0)
 . S IBB364=$$LAST364^IBCEF4(IBIFN) I IBB364'="" S IBDAY=+$P($P($G(^IBA(364,IBB364,0)),U,4),".",1)
"RTN","IBCECOB1",72,0)
 ;
"RTN","IBCECOB1",73,0)
 S IBAPY=$$TPR^PRCAFN(IBIFN) ; payment on this bill from A/R
"RTN","IBCECOB1",74,0)
 S IBEXPY=+$G(^IBM(361.1,IBDA,1))       ; payer paid amount
"RTN","IBCECOB1",75,0)
 ; IB*2.0*447 add excess indicator to MRW screen and adjust calcs to include percentages
"RTN","IBCECOB1",76,0)
 S IBPTRSP=$S($$MSEDT^IBCEMU4(IBIFN)'="":$$MSPRE^IBCEMU4(IBIFN,1),1:$$PREOBTOT^IBCEU0(IBIFN)) ; patient resp. function
"RTN","IBCECOB1",77,0)
 S IBPY=$S(IBAPY:IBAPY,1:IBEXPY)
"RTN","IBCECOB1",78,0)
 S IBOAM=+$G(^DGCR(399,IBIFN,"U1"))     ; total charges for bill
"RTN","IBCECOB1",79,0)
 S IBNBAL=IBOAM-IBPY
"RTN","IBCECOB1",80,0)
 I IBNBAL'>0 S IBQ=2
"RTN","IBCECOB1",81,0)
 S IBPTNM=$P($G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0)),U) I IBPTNM="" S IBPTNM="UNKNOWN"
"RTN","IBCECOB1",82,0)
 S IBSRVC=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCECOB1",83,0)
 S Z0=$S(IBSRT="B":IBMUT,IBSRT="D":-IBDAY,IBSRT="I":$P(IBINS2,U,2)_"~"_$P(IBINS2,U),IBSRT="M":$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13)),IBSRT="R":-IBPTRSP,IBSRT="P":IBPTNM,IBSRT="S":+IBSRVC,1:+IBDT)
"RTN","IBCECOB1",84,0)
 S:((IBSRT="M")&(Z0="")) Z0="UNKNOWN"   ;USE UNKNOWN IF NOT SET - BI;IB*2.0*432
"RTN","IBCECOB1",85,0)
 I $D(^TMP("IBCOBST",$J,Z0,IBIFN)),$P(^TMP("IBCOBST",$J,Z0,IBIFN),U,19)=-1 S MSEFLG=-1   ; If a MSE was previously found for IBIFN, we want to insure that we don't ignore that by resetting the 19th piece to something else.
"RTN","IBCECOB1",86,0)
 ;
"RTN","IBCECOB1",87,0)
 S ^TMP("IBCOBST",$J,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_IBDA_U_$$HIS(IBIFN)_U_IBDAY_U_IBDT_U_IBQ_U_IB364_U_IBSEQ_U_IBEXPY_U_IBPTRSP_U_MSEFLG
"RTN","IBCECOB1",88,0)
 S ^TMP("IBCOBST",$J,Z0,IBIFN,1)=$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16)
"RTN","IBCECOB1",89,0)
 S ^TMP("IBCOBSTX",$J,IBIFN)=IBDA  ;keep track of compiled IBIFN's
"RTN","IBCECOB1",90,0)
 ;
"RTN","IBCECOB1",91,0)
 ; Save some data when there are multiple MRA's on file for this bill
"RTN","IBCECOB1",92,0)
 S IBMRACNT=$$MRACNT^IBCEMU1(IBIFN,$G(IBMRANOT))   ;WCJ IB*2.0*432
"RTN","IBCECOB1",93,0)
 I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCECOB1",94,0)
 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCECOB1",95,0)
 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,4)=IBDENDUP
"RTN","IBCECOB1",96,0)
 Q
"RTN","IBCECOB1",97,0)
 ;
"RTN","IBCECOB1",98,0)
HIS(IBIFN) ; COB history
"RTN","IBCECOB1",99,0)
 N A,B,IBST,IBBIL,IBHIS
"RTN","IBCECOB1",100,0)
 S IBHIS="",A=0 F  S A=$O(^IBM(361.1,"ABS",IBIFN,A)) Q:'A  S B=0 F  S B=$O(^IBM(361.1,"ABS",IBIFN,A,B)) Q:'B  D
"RTN","IBCECOB1",101,0)
 . S IBST=$P($G(^IBM(361.1,B,0)),U,4),IBBIL=$P($G(^DGCR(399,IBIFN,"M1")),U,4+A)   ;WCJ IB*2.0*432 added $G
"RTN","IBCECOB1",102,0)
 . Q:IBBIL=""
"RTN","IBCECOB1",103,0)
 . S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",1:"TERTIARY")_" "_$S(IBST:"MRA",1:"EOB")_" RECEIVED - "_IBBIL
"RTN","IBCECOB1",104,0)
 Q IBHIS
"RTN","IBCECOB1",105,0)
 ;
"RTN","IBCECOB1",106,0)
NMAT ;No COB list
"RTN","IBCECOB1",107,0)
 S VALMCNT=2,IBCNT=2
"RTN","IBCECOB1",108,0)
 S ^TMP("IBCECOB",$J,1,0)=" "
"RTN","IBCECOB1",109,0)
 S ^TMP("IBCECOB",$J,2,0)="    No "_$S($G(IBMRANOT)=1:"EOB's",1:"MRA's")_" Matching Selection Criteria Were Found"
"RTN","IBCECOB1",110,0)
 Q
"RTN","IBCECOB1",111,0)
 ;
"RTN","IBCECOB1",112,0)
SCRN ;
"RTN","IBCECOB1",113,0)
 N IBX,IBCNT,IBIFN,IBDA,IB,X,IBS1,IBPAT,Z,IBK,IBFORM,MSEFLG
"RTN","IBCECOB1",114,0)
 S IBCNT=0
"RTN","IBCECOB1",115,0)
 S IBS1=$S(IBSRT="B":"BILLER",IBSRT="D":"Days Since Last Transmission",IBSRT="L":"Date Last "_$S($G(IBMRANOT):"EOB",1:"MRA")_" Received",IBSRT="I":"SECONDARY INSURANCE COMPANY",IBSRT="M":$S($G(IBMRANOT):"EOB",1:"MRA")_" Status",1:"")
"RTN","IBCECOB1",116,0)
 S IBX="" F  S IBX=$O(^TMP("IBCOBST",$J,IBX)) Q:IBX=""  D
"RTN","IBCECOB1",117,0)
 . I IBSRT="B"!(IBSRT="I")!(IBSRT="M") D
"RTN","IBCECOB1",118,0)
 .. D:IBCNT SET("",IBCNT+1)
"RTN","IBCECOB1",119,0)
 .. D SET(IBS1_": "_$P(IBX,"~"),IBCNT+1)
"RTN","IBCECOB1",120,0)
 . S IBIFN=0 F  S IBIFN=$O(^TMP("IBCOBST",$J,IBX,IBIFN)) Q:'IBIFN  D
"RTN","IBCECOB1",121,0)
 .. S IB=$G(^TMP("IBCOBST",$J,IBX,IBIFN))
"RTN","IBCECOB1",122,0)
 .. S Z=$G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0))
"RTN","IBCECOB1",123,0)
 .. S IBPAT=$$LJ^XLFSTR($E($P(Z,U),1,18),18," ")_" "_$E($P(Z,U,9),6,9)
"RTN","IBCECOB1",124,0)
 .. S IBDA=$P(IB,U,10) ;361.1-ien
"RTN","IBCECOB1",125,0)
 .. S IBQ=$P(IB,U,14),IB364=$P(IB,U,15)
"RTN","IBCECOB1",126,0)
 .. ; IB*2.0*447 shorten form column to I for Instutional and P for Professional
"RTN","IBCECOB1",127,0)
 .. ;S IBFORM=$$EXTERNAL^DILFD(399,.19,,+$P(IB,U,6))
"RTN","IBCECOB1",128,0)
 .. ;I +$P(IB,U,6)=2 S IBFORM=1500   ; for space reasons
"RTN","IBCECOB1",129,0)
 .. S IBFORM=$S(+$P(IB,U,6)=2:"P",1:"I")
"RTN","IBCECOB1",130,0)
 .. S IBPTRSP=$P(IB,U,18)
"RTN","IBCECOB1",131,0)
 .. S MSEFLG=$P(IB,U,19)
"RTN","IBCECOB1",132,0)
 .. S IBAMT=$P(IB,U,2)
"RTN","IBCECOB1",133,0)
 .. S IBCNT=IBCNT+1
"RTN","IBCECOB1",134,0)
 .. S X=""
"RTN","IBCECOB1",135,0)
 .. S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBCECOB1",136,0)
 .. ;;;S X=$$SETFLD^VALM1($$BN1^PRCAFN(IBIFN)_$S($P($G(^DGCR(399,IBIFN,"TX")),U,10)=1:"*",1:""),X,"BILL")
"RTN","IBCECOB1",137,0)
 .. S X=$$SETFLD^VALM1($S(MSEFLG=-1:"!",1:" ")_$$BN1^PRCAFN(IBIFN)_$S($P($G(^DGCR(399,IBIFN,"TX")),U,10)=1:"*",1:""),X,"BILL")  ; per IB*2.0*488
"RTN","IBCECOB1",138,0)
 .. S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IB,U)),X,"SERVICE")
"RTN","IBCECOB1",139,0)
 .. S X=$$SETFLD^VALM1(IBPAT,X,"PATNM")
"RTN","IBCECOB1",140,0)
 .. S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBPTRSP,"",2),9," "),X,"PTRESP")
"RTN","IBCECOB1",141,0)
 .. S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBAMT,"",2),9," "),X,"IBAMT")
"RTN","IBCECOB1",142,0)
 .. S X=$$SETFLD^VALM1($E($$TYPE^IBJTLA1($P(IB,U,5)))_"/"_IBFORM,X,"BTYPE")
"RTN","IBCECOB1",143,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",144,0)
 .. ;For R (Pt Resp), P (Pt Name) and S (Service Date) don't display sub-headers
"RTN","IBCECOB1",145,0)
 .. I "BIMRPS"'[IBSRT D
"RTN","IBCECOB1",146,0)
 ... S Z=$S(IBSRT="L":$$DAT1^IBOUTL(IBX),IBSRT="D":-IBX,1:IBX)
"RTN","IBCECOB1",147,0)
 ... D SET("   "_IBS1_": "_Z,IBCNT)
"RTN","IBCECOB1",148,0)
 .. S X=$$SETSTR^VALM1("Insurers:  "_$P(IB,U,9),"",7,74)
"RTN","IBCECOB1",149,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",150,0)
 .. ;
"RTN","IBCECOB1",151,0)
 .. ; line 3 of display:  MRA status/date/split claim indicator
"RTN","IBCECOB1",152,0)
 .. S X=$$SETSTR^VALM1($S($G(IBMRANOT):"EOB",1:"MRA")_" Status:  ","",5,13)
"RTN","IBCECOB1",153,0)
 .. S IBK=$G(^TMP("IBCOBST",$J,IBX,IBIFN,1))
"RTN","IBCECOB1",154,0)
 .. S X=$$SETSTR^VALM1($P(IBK,U,1),X,18,63)
"RTN","IBCECOB1",155,0)
 .. I $P(IBK,U,2)=2 S X=$$SETSTR^VALM1("** SPLIT CLAIM **",X,63,18)
"RTN","IBCECOB1",156,0)
 .. I $P(IBK,U,4),$P(IBK,U,2)'=2,$P(IBK,U,3)=1 S X=$$SETSTR^VALM1("** Denied for Duplicate **",X,54,27)
"RTN","IBCECOB1",157,0)
 .. D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",158,0)
 .. ;
"RTN","IBCECOB1",159,0)
 .. ; conditionally update video attributes of line 3
"RTN","IBCECOB1",160,0)
 .. I '$D(IOINHI) D ENS^%ZISS
"RTN","IBCECOB1",161,0)
 .. ; split claim
"RTN","IBCECOB1",162,0)
 .. I $P(IBK,U,2)=2 D CNTRL^VALM10(VALMCNT,63,17,IOINHI,IOINORM)
"RTN","IBCECOB1",163,0)
 .. ; multiple mra's on file
"RTN","IBCECOB1",164,0)
 .. I $P(IBK,U,3)>1 D CNTRL^VALM10(VALMCNT,18,22,IOINHI,IOINORM)
"RTN","IBCECOB1",165,0)
 .. ; Denied for Duplicate - no split claim and single MRA only
"RTN","IBCECOB1",166,0)
 .. I $P(IBK,U,4),$P(IBK,U,2)'=2,$P(IBK,U,3)=1 D CNTRL^VALM10(VALMCNT,54,26,IOINHI,IOINORM)
"RTN","IBCECOB1",167,0)
 .. Q
"RTN","IBCECOB1",168,0)
 Q
"RTN","IBCECOB1",169,0)
 ;
"RTN","IBCECOB1",170,0)
SET(X,CNT,IBIFN,IBDA,IBQ,IB364,IBX,IB) ;set up list manager screen array
"RTN","IBCECOB1",171,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB1",172,0)
 S ^TMP("IBCECOB",$J,VALMCNT,0)=X
"RTN","IBCECOB1",173,0)
 S ^TMP("IBCECOB",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECOB1",174,0)
 I $G(IBIFN),$G(^TMP("IBCECOB",$J,CNT))="" S ^TMP("IBCECOB",$J,CNT)=VALMCNT_U_IBIFN_U_IB364_U_IBDA_U_IBQ_U_IBX,^TMP("IBCECOB1",$J,CNT)=IB
"RTN","IBCECOB1",175,0)
 Q
"RTN","IBCECOB1",176,0)
 ;
"RTN","IBCECOB1",177,0)
FTYPE(Y) ;type classification
"RTN","IBCECOB1",178,0)
 Q $E($P($G(^IBE(353,Y,0)),U),1,8)
"RTN","IBCECOB1",179,0)
 ;
"RTN","IBCECOB1",180,0)
PTRESPI(IBEOB) ; Function - Computes the Patient's Responsibility based on IBEOB
"RTN","IBCECOB1",181,0)
 ; of 361.1 for Claims/Bills with form type 3=UB
"RTN","IBCECOB1",182,0)
 ; Input IBEOB - a single EOB ien; Required
"RTN","IBCECOB1",183,0)
 ; Output      - Function Returns IBPTRES - Patient Responsibility Amount for the EOB
"RTN","IBCECOB1",184,0)
 ;
"RTN","IBCECOB1",185,0)
 N IBPTRES,IBC,EOBADJ
"RTN","IBCECOB1",186,0)
 S IBPTRES=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",187,0)
 I 'IBEOB Q IBPTRES   ;PTRESPI
"RTN","IBCECOB1",188,0)
 ; filing error
"RTN","IBCECOB1",189,0)
 Q:$D(^IBM(361.1,IBEOB,"ERR")) IBPTRES
"RTN","IBCECOB1",190,0)
 ;
"RTN","IBCECOB1",191,0)
 ; get claim level adjustments
"RTN","IBCECOB1",192,0)
 K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCECOB1",193,0)
 S IBPTRES=$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",194,0)
 ;
"RTN","IBCECOB1",195,0)
 ; get line level adjustments
"RTN","IBCECOB1",196,0)
 S IBC=0 F  S IBC=$O(^IBM(361.1,IBEOB,15,IBC)) Q:'IBC  D
"RTN","IBCECOB1",197,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,15,IBC,1)
"RTN","IBCECOB1",198,0)
 . S IBPTRES=IBPTRES+$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",199,0)
 Q IBPTRES
"RTN","IBCECOB1",200,0)
 ;
"RTN","IBCECOB1",201,0)
ELIG(IBEOB) ; Function to determine if an EOB entry is eligible for
"RTN","IBCECOB1",202,0)
 ; inclusion on the MRA or COB management worklist or not.
"RTN","IBCECOB1",203,0)
 ; IBEOB - ien into file 361.1 (required)
"RTN","IBCECOB1",204,0)
 ; Returns 1 if EOB should appear on the worklist
"RTN","IBCECOB1",205,0)
 ; Returns 0 if EOB should not appear on the worklist
"RTN","IBCECOB1",206,0)
 ; Returns -1 if EOB contains Message Storage Errors
"RTN","IBCECOB1",207,0)
 ;
"RTN","IBCECOB1",208,0)
 NEW ELIG,IB3611,IBIFN
"RTN","IBCECOB1",209,0)
 S ELIG=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",210,0)
 S IB3611=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCECOB1",211,0)
 I $P(IB3611,U,4)'=1 G ELIGX    ; eob type must be correct for this worklist
"RTN","IBCECOB1",212,0)
 I $P(IB3611,U,16)>2 G ELIGX    ; review status must be <= 2
"RTN","IBCECOB1",213,0)
 S IBIFN=+IB3611
"RTN","IBCECOB1",214,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=2 G ELIGX  ; Request MRA bill status
"RTN","IBCECOB1",215,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) S ELIG=$S('$G(IBMRANOT):-1,1:ELIG) G ELIGX         ; filing errors - contains Message Storage Errors
"RTN","IBCECOB1",216,0)
 ;
"RTN","IBCECOB1",217,0)
 S ELIG=1    ; this EOB is eligible for the worklist
"RTN","IBCECOB1",218,0)
 ;
"RTN","IBCECOB1",219,0)
ELIGX ;
"RTN","IBCECOB1",220,0)
 Q ELIG
"RTN","IBCECOB1",221,0)
 ;
"RTN","IBCECOB1",222,0)
WLRMV ; REMOVE FROM EOB WORK LIST
"RTN","IBCECOB1",223,0)
 ; IBDA(IBDA)=IBIFN^IB364^ien of 361.1^user selection seq^user name~duz#
"RTN","IBCECOB1",224,0)
 N IBIFN,IBDA,DIR,DTOUT,DUOUT,DA,DIE,DR,X
"RTN","IBCECOB1",225,0)
 D SEL^IBCECOB2(.IBDA,1)
"RTN","IBCECOB1",226,0)
 S VALMBCK="R"
"RTN","IBCECOB1",227,0)
 S IBDA=$O(IBDA(0)) I 'IBDA Q
"RTN","IBCECOB1",228,0)
 S IBIFN=$P(IBDA(IBDA),U,1) I 'IBIFN Q
"RTN","IBCECOB1",229,0)
 S DIR("A",1)=""
"RTN","IBCECOB1",230,0)
 S DIR("A",2)="    Bill #: "_$$GET1^DIQ(399,IBIFN_", ",.01,"E")
"RTN","IBCECOB1",231,0)
 S DIR("A",3)="   Patient: "_$$GET1^DIQ(399,IBIFN_", ",.02,"E")
"RTN","IBCECOB1",232,0)
 S DIR("A",4)=" Bill Type: "_$$GET1^DIQ(399,IBIFN_", ",.05,"E")
"RTN","IBCECOB1",233,0)
 S DIR("A",5)="Bill Dates: "_$$GET1^DIQ(399,IBIFN_", ",151,"E")_" - "_$$GET1^DIQ(399,IBIFN_", ",152,"E")
"RTN","IBCECOB1",234,0)
 S DIR("A",6)=" "
"RTN","IBCECOB1",235,0)
 S DIR("A")="Are you sure remove this claim from the worklist? "
"RTN","IBCECOB1",236,0)
 S DIR("B")="NO"
"RTN","IBCECOB1",237,0)
 S DIR(0)="YA" D ^DIR K DIR
"RTN","IBCECOB1",238,0)
 I $D(DTOUT)!$D(DUOUT)!'Y Q
"RTN","IBCECOB1",239,0)
 ;FLAG IF USER ANSWERS YES
"RTN","IBCECOB1",240,0)
 S X=$$WLRMVF^IBCECOB1(IBIFN,"RM")
"RTN","IBCECOB1",241,0)
 D BLD^IBCECOB1
"RTN","IBCECOB1",242,0)
 Q
"RTN","IBCECOB1",243,0)
 ;
"RTN","IBCECOB1",244,0)
WLRMVF(IBIFN,METHOD,BKFL) ;
"RTN","IBCECOB1",245,0)
 ; BFKL = 1 means background process, remove NOT initiated by a user
"RTN","IBCECOB1",246,0)
 N SOC,SOCCNT,SOCLIST,STATUS,IBDUZ
"RTN","IBCECOB1",247,0)
 S STATUS=0
"RTN","IBCECOB1",248,0)
 Q:'$G(DUZ) STATUS_"^MISSING DUZ"
"RTN","IBCECOB1",249,0)
 Q:'$G(IBIFN) STATUS_"^MISSING IBIFN"
"RTN","IBCECOB1",250,0)
 Q:'$D(^DGCR(399,IBIFN)) STATUS_"^INVALID IBIFN"
"RTN","IBCECOB1",251,0)
 ; if this is a background process, set user who removed to AUTHORIZER,IB REG
"RTN","IBCECOB1",252,0)
 S IBDUZ=$S($G(BKFL)=1:$$IBREG^IBCAPP(),1:$G(DUZ))
"RTN","IBCECOB1",253,0)
 ; GET DICTIONARY SET OF CODES.
"RTN","IBCECOB1",254,0)
 ; SOC("POINTER")="RM:REMOVE ACTION;PC:PROCESS COB ACTION;CL:CLONE ACTION;"
"RTN","IBCECOB1",255,0)
 D FIELD^DID(399,38,"","POINTER","SOC")
"RTN","IBCECOB1",256,0)
 S SOC=$G(SOC("POINTER"))
"RTN","IBCECOB1",257,0)
 F SOCCNT=1:1:$L(SOC,";")-1 S SOCLIST($P($P(SOC,";",SOCCNT),":",1))=""
"RTN","IBCECOB1",258,0)
 Q:$D(SOCLIST(METHOD))=0 STATUS_"^INVALID METHOD"
"RTN","IBCECOB1",259,0)
 S DA=IBIFN
"RTN","IBCECOB1",260,0)
 S DIE="^DGCR(399,"
"RTN","IBCECOB1",261,0)
 S DR="35////4"                ; AUTO PROCESS, NO LONGER ON WORKLIST
"RTN","IBCECOB1",262,0)
 S:IBDUZ'=-1 DR=DR_";"_"37////"_IBDUZ    ; WHO REMOVED FROM WORKLIST
"RTN","IBCECOB1",263,0)
 S DR=DR_";"_"38////"_METHOD   ; METHOD USED TO REMOVE FROM WORKLIST
"RTN","IBCECOB1",264,0)
 S DR=DR_";"_"39///NOW"        ; DATE STAMP WHEN REMOVED FOR WORKLIST
"RTN","IBCECOB1",265,0)
 D ^DIE
"RTN","IBCECOB1",266,0)
 S STATUS=1
"RTN","IBCECOB1",267,0)
 Q STATUS
"RTN","IBCECOB2")
0^12^B183092638^B167373990
"RTN","IBCECOB2",1,0)
IBCECOB2 ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,433,432,447,488**;21-MAR-1994;Build 184
"RTN","IBCECOB2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECOB2",4,0)
 ;
"RTN","IBCECOB2",5,0)
EDI ;history detail display
"RTN","IBCECOB2",6,0)
 N IBIFN,IBDA
"RTN","IBCECOB2",7,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",8,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(IBDA))
"RTN","IBCECOB2",9,0)
 D EDI1(IBIFN)
"RTN","IBCECOB2",10,0)
 S VALMBCK="R"
"RTN","IBCECOB2",11,0)
 Q
"RTN","IBCECOB2",12,0)
 ;
"RTN","IBCECOB2",13,0)
EDI1(IBIFN) ;
"RTN","IBCECOB2",14,0)
 N DFN
"RTN","IBCECOB2",15,0)
 Q:'IBIFN
"RTN","IBCECOB2",16,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",17,0)
 D EN^VALM("IBJT EDI STATUS")
"RTN","IBCECOB2",18,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",19,0)
 Q
"RTN","IBCECOB2",20,0)
 ;
"RTN","IBCECOB2",21,0)
EDI2(IBIFN) ;
"RTN","IBCECOB2",22,0)
 N DFN
"RTN","IBCECOB2",23,0)
 Q:'IBIFN
"RTN","IBCECOB2",24,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",25,0)
 D EN^VALM("IBJT EDI STATUS ALONE")
"RTN","IBCECOB2",26,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",27,0)
 Q
"RTN","IBCECOB2",28,0)
 ;
"RTN","IBCECOB2",29,0)
CSA ;claims status awaiting resolution
"RTN","IBCECOB2",30,0)
 N IBDAX
"RTN","IBCECOB2",31,0)
 D EN^IBCECSA
"RTN","IBCECOB2",32,0)
 I $D(IBFASTXT) K IBFASTXT
"RTN","IBCECOB2",33,0)
 S VALMBCK="R"
"RTN","IBCECOB2",34,0)
 Q
"RTN","IBCECOB2",35,0)
 ;
"RTN","IBCECOB2",36,0)
RVEOB ;Review EOB
"RTN","IBCECOB2",37,0)
 D FULL^VALM1 W !
"RTN","IBCECOB2",38,0)
 N IBDA,IBIFN,IBCMT,IBSEL
"RTN","IBCECOB2",39,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",40,0)
 S IBSEL=+$O(IBDA(0))
"RTN","IBCECOB2",41,0)
 S IBDA=$G(IBDA(IBSEL))
"RTN","IBCECOB2",42,0)
 S IBIFN=$P(IBDA,U),IBDA=$P(IBDA,U,3)
"RTN","IBCECOB2",43,0)
 I 'IBIFN G VEOBQ
"RTN","IBCECOB2",44,0)
 S IBCMT=$G(^TMP("IBCECOB1",$J,IBSEL))
"RTN","IBCECOB2",45,0)
 I IBCMT'="" D EN^VALM("IBCEM MRA REVIEW")
"RTN","IBCECOB2",46,0)
VEOBQ K ^TMP("IBCECOC",$J)
"RTN","IBCECOB2",47,0)
 S VALMBCK="R"
"RTN","IBCECOB2",48,0)
 Q
"RTN","IBCECOB2",49,0)
 ;
"RTN","IBCECOB2",50,0)
TPJI ;Third Party joint Inquiry
"RTN","IBCECOB2",51,0)
 N IBDA,IBIFN
"RTN","IBCECOB2",52,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",53,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(IBDA))
"RTN","IBCECOB2",54,0)
 I IBDA="" G TPJIQ
"RTN","IBCECOB2",55,0)
 D TPJI1(IBIFN)
"RTN","IBCECOB2",56,0)
TPJIQ S VALMBCK="R"
"RTN","IBCECOB2",57,0)
 Q
"RTN","IBCECOB2",58,0)
 ;
"RTN","IBCECOB2",59,0)
TPJI1(IBIFN) ;
"RTN","IBCECOB2",60,0)
 N DFN,IBNOTPJI
"RTN","IBCECOB2",61,0)
 Q:'IBIFN
"RTN","IBCECOB2",62,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2),IBNOTPJI=1
"RTN","IBCECOB2",63,0)
 D EN^VALM("IBJT CLAIM INFO")
"RTN","IBCECOB2",64,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",65,0)
 Q
"RTN","IBCECOB2",66,0)
 ;
"RTN","IBCECOB2",67,0)
PBILL ;Print bill
"RTN","IBCECOB2",68,0)
 N IBIFN,IBDA,IBRESUB
"RTN","IBCECOB2",69,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",70,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA))
"RTN","IBCECOB2",71,0)
 I IBDA="" G PBOUT
"RTN","IBCECOB2",72,0)
 S IBRESUB=$$RESUB^IBCECSA4(IBIFN,1,"P")
"RTN","IBCECOB2",73,0)
 I IBRESUB'>0 W !,*7,"This is not a transmittable bill or review not needed" D PAUSE^VALM1 G PBOUT
"RTN","IBCECOB2",74,0)
 I IBRESUB=2 D  G PBOUT
"RTN","IBCECOB2",75,0)
 . N IB364
"RTN","IBCECOB2",76,0)
 . S IB364=+$P($G(IBDA(IBDA)),U,2)
"RTN","IBCECOB2",77,0)
 . D PRINT1^IBCEM03(IBIFN,.IBDA,IB364)
"RTN","IBCECOB2",78,0)
 D PBILL1(IBIFN)
"RTN","IBCECOB2",79,0)
PBOUT S VALMBCK="R"
"RTN","IBCECOB2",80,0)
 Q
"RTN","IBCECOB2",81,0)
 ;
"RTN","IBCECOB2",82,0)
PMRA ;Print MRA
"RTN","IBCECOB2",83,0)
 N IBIFN,IBDA,IBDAX
"RTN","IBCECOB2",84,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",85,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IBDAX=$P(IBDA(+IBDA),U,3)
"RTN","IBCECOB2",86,0)
 G:'IBIFN PRMQ
"RTN","IBCECOB2",87,0)
 I '$G(IBMRANOT),$D(^IBM(361.1,IBDAX,"ERR")),'$$WARNMSE G PRMQ        ; Claim contains Message Storage Errors
"RTN","IBCECOB2",88,0)
 D MRA^IBCEMRAA(.IBIFN)
"RTN","IBCECOB2",89,0)
PRMQ S VALMBCK="R"
"RTN","IBCECOB2",90,0)
 Q
"RTN","IBCECOB2",91,0)
PBILL1(IBIFN) ;
"RTN","IBCECOB2",92,0)
 N IBAC1,IBAC,DFN
"RTN","IBCECOB2",93,0)
 Q:'IBIFN
"RTN","IBCECOB2",94,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",95,0)
 S IBAC=4,IBAC1=1
"RTN","IBCECOB2",96,0)
 D 4^IBCB1
"RTN","IBCECOB2",97,0)
 D FULL^VALM1,PAUSE^VALM1
"RTN","IBCECOB2",98,0)
 Q
"RTN","IBCECOB2",99,0)
 ;
"RTN","IBCECOB2",100,0)
CANCEL ;Cancel bill
"RTN","IBCECOB2",101,0)
 ; IBDA(IBDA)=IBIFN^IB364^ien of 361.1^user selection seq^user name~duz#
"RTN","IBCECOB2",102,0)
 ;
"RTN","IBCECOB2",103,0)
 N IBIFN,IBDA,IB364,IBEOBIFN,X,IBDENCT
"RTN","IBCECOB2",104,0)
 ;
"RTN","IBCECOB2",105,0)
 ; Check for security key
"RTN","IBCECOB2",106,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCECOB2",107,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",108,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECOB2",109,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECOB2",110,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",111,0)
 . Q
"RTN","IBCECOB2",112,0)
 ;
"RTN","IBCECOB2",113,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",114,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=$P($G(IBDA(+IBDA)),U,2)
"RTN","IBCECOB2",115,0)
 S IBEOBIFN=$P($G(IBDA(+IBDA)),U,3)
"RTN","IBCECOB2",116,0)
 ;
"RTN","IBCECOB2",117,0)
 ; IB*2.0*432 - if not mra, only allow cancel of denied claims.  If no EOB, check AR status instead
"RTN","IBCECOB2",118,0)
 I 'IBEOBIFN,$G(IBMRANOT)=1,$P($$ARSTATA^IBJTU4(IBIFN),U)="COLLECTED/CLOSED" D  G CANCELQ
"RTN","IBCECOB2",119,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",120,0)
 . W !!,*7,"You can only cancel denied claims.  This claim is in a COLLECTED/CLOSED status"
"RTN","IBCECOB2",121,0)
 . W !,"Use Remove Action to remove claim from this worklist."
"RTN","IBCECOB2",122,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",123,0)
 . Q
"RTN","IBCECOB2",124,0)
 ;
"RTN","IBCECOB2",125,0)
 ; IB*2.0*432 - if not mra, only allow cancel of claims with multiple EOBS if none have processed.
"RTN","IBCECOB2",126,0)
 I $G(IBMRANOT)=1,'$$DENCHK(IBIFN,.IBDENCT),$G(IBDENCT)>1 D  G CANCELQ
"RTN","IBCECOB2",127,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",128,0)
 . W !!,*7,"Multiple EOBs exist for this claim and at least one has EOB status of PROCESSED."
"RTN","IBCECOB2",129,0)
 . W !,"Use Remove Action to remove claim from this worklist."
"RTN","IBCECOB2",130,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",131,0)
 . Q
"RTN","IBCECOB2",132,0)
 ;
"RTN","IBCECOB2",133,0)
 ; IB*2.0*432 - if not mra, only allow cancel of denied claims
"RTN","IBCECOB2",134,0)
 I IBEOBIFN,$G(IBMRANOT)=1,$P($G(^IBM(361.1,IBEOBIFN,0)),U,13)'=2 D  G CANCELQ
"RTN","IBCECOB2",135,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",136,0)
 . W !!?5,*7,"You can only cancel denied claims."
"RTN","IBCECOB2",137,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",138,0)
 . Q
"RTN","IBCECOB2",139,0)
 ;
"RTN","IBCECOB2",140,0)
 I IBDA D
"RTN","IBCECOB2",141,0)
 . I '$$LOCK^IBCEU0(361.1,IBEOBIFN) Q
"RTN","IBCECOB2",142,0)
 . D CANCEL^IBCEM3(.IBDA,IBIFN,IB364)
"RTN","IBCECOB2",143,0)
 . D UNLOCK^IBCEU0(361.1,IBEOBIFN)
"RTN","IBCECOB2",144,0)
 S VALMBCK="R"
"RTN","IBCECOB2",145,0)
 ;
"RTN","IBCECOB2",146,0)
 ; for non-MRA claims cancelled from worklist, set field 38
"RTN","IBCECOB2",147,0)
 I $G(IBMRANOT)=1,$P($G(^DGCR(399,IBIFN,0)),U,13)=7 S X=$$WLRMVF^IBCECOB1($S($G(IBIFN)'="":IBIFN,1:+$G(IBDA(IBDA))),"CA")
"RTN","IBCECOB2",148,0)
 I $G(IBDA)'="" D BLD^IBCECOB1
"RTN","IBCECOB2",149,0)
CANCELQ Q
"RTN","IBCECOB2",150,0)
 ;
"RTN","IBCECOB2",151,0)
CRD ; Correct Rejected/Denied claim protocol action
"RTN","IBCECOB2",152,0)
 N IBCNCRD
"RTN","IBCECOB2",153,0)
 S IBCNCRD=1
"RTN","IBCECOB2",154,0)
CLONE ; 'Copy/cancel bill' protocol action
"RTN","IBCECOB2",155,0)
 N IBDA,IBQ,IBEOBIFN,IBKEY,X,IBDENCT
"RTN","IBCECOB2",156,0)
 ;
"RTN","IBCECOB2",157,0)
 ; Check for security key
"RTN","IBCECOB2",158,0)
 ;I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CLONEQ
"RTN","IBCECOB2",159,0)
 S IBKEY=$S($G(IBCNCRD)=1:"IB AUTHORIZE",1:"IB CLON")
"RTN","IBCECOB2",160,0)
 I '$$KCHK^XUSRB(IBKEY) D  G CLONEQ
"RTN","IBCECOB2",161,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",162,0)
 . ;W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECOB2",163,0)
 . ;W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECOB2",164,0)
 . W !!?5,"You must hold the "_IBKEY_" security key to access this function."
"RTN","IBCECOB2",165,0)
 . W !?5,"Please see your manager."
"RTN","IBCECOB2",166,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",167,0)
 . Q
"RTN","IBCECOB2",168,0)
 ;
"RTN","IBCECOB2",169,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",170,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCECOB2",171,0)
 I IBDA="" G CLONEQ
"RTN","IBCECOB2",172,0)
 ;
"RTN","IBCECOB2",173,0)
 ; IB*2.0*432 - if not mra, only allow cancel of claims with multiple EOBS if none have processed.
"RTN","IBCECOB2",174,0)
 I $G(IBMRANOT)=1,'$$DENCHK(+IBDA(IBDA),.IBDENCT),$G(IBDENCT)>1 D  G CANCELQ
"RTN","IBCECOB2",175,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",176,0)
 . W !!,*7,"Multiple EOBs exist for this claim and at least one has EOB status of PROCESSED."
"RTN","IBCECOB2",177,0)
 . W !,"Use Remove Action to remove claim from this worklist."
"RTN","IBCECOB2",178,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",179,0)
 . Q
"RTN","IBCECOB2",180,0)
 ;
"RTN","IBCECOB2",181,0)
 S IBEOBIFN=$P($G(IBDA(+IBDA)),U,3)
"RTN","IBCECOB2",182,0)
 I '$$LOCK^IBCEU0(361.1,IBEOBIFN) G CLONEQ
"RTN","IBCECOB2",183,0)
 D COPYCLON(+$G(IBDA(IBDA)),$P($G(IBDA(+IBDA)),U,2),.IBQ)
"RTN","IBCECOB2",184,0)
 D UNLOCK^IBCEU0(361.1,IBEOBIFN)
"RTN","IBCECOB2",185,0)
 ;
"RTN","IBCECOB2",186,0)
 ; for non-MRA claims cloned or corrected from worklist, set field 38
"RTN","IBCECOB2",187,0)
 I $G(IBMRANOT)=1,$G(IBQ)'="" S X=$$WLRMVF^IBCECOB1(+$G(IBDA(IBDA)),$S($G(IBCNCRD)=1:"CR",1:"CL"))
"RTN","IBCECOB2",188,0)
 ;
"RTN","IBCECOB2",189,0)
CLONEQ ;
"RTN","IBCECOB2",190,0)
 S VALMBCK="R"
"RTN","IBCECOB2",191,0)
 D:$G(IBQ)'="" BLD^IBCECOB1
"RTN","IBCECOB2",192,0)
 Q
"RTN","IBCECOB2",193,0)
 ;
"RTN","IBCECOB2",194,0)
COPYCLON(IBIFN,IB364,IBQ) ; Generic entry point for clone a bill from EDI processing
"RTN","IBCECOB2",195,0)
 ; IBIFN = original bill ien
"RTN","IBCECOB2",196,0)
 ; IB364 = the ien of the transmission bill entry in file 364
"RTN","IBCECOB2",197,0)
 ; IBQ = If bill is not cancelled, this is returned as null
"RTN","IBCECOB2",198,0)
 ;        - pass by reference -
"RTN","IBCECOB2",199,0)
 ;
"RTN","IBCECOB2",200,0)
 N IBQUIT,IBCCCC,IBHV,Y,IBCAN,IBCE,IBDA,IBCNCOPY
"RTN","IBCECOB2",201,0)
 ;I '$$CANCKS^IBCEM3("CC",IBIFN) S IBQ="" G CCQ
"RTN","IBCECOB2",202,0)
 I $G(IBCNCRD)'=1,'$$CANCKS^IBCEM3("CC",IBIFN) S IBQ="" G CCQ
"RTN","IBCECOB2",203,0)
 ;
"RTN","IBCECOB2",204,0)
 ;S IBCAN=2,IBCE("EDI")=1,Y=IBIFN,IBCCCC=0,IBHV("IBIFN")=IBIFN,IBHV("IBIFN1")="",IBCNCOPY=1
"RTN","IBCECOB2",205,0)
 S IBCAN=2,IBCE("EDI")=1,Y=IBIFN,IBCCCC=0,IBHV("IBIFN")=IBIFN,IBHV("IBIFN1")=""
"RTN","IBCECOB2",206,0)
 I $G(IBCNCRD)'=1 S IBCNCOPY=1 D ^IBCCC
"RTN","IBCECOB2",207,0)
 I $G(IBCNCRD)=1 D CRD^IBCCC
"RTN","IBCECOB2",208,0)
 ;D ^IBCCC
"RTN","IBCECOB2",209,0)
 S IBIFN=IBHV("IBIFN")
"RTN","IBCECOB2",210,0)
 K IBCE("EDI") S IBQ=1
"RTN","IBCECOB2",211,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=7 S IBQ=""
"RTN","IBCECOB2",212,0)
 I IBHV("IBIFN1") D
"RTN","IBCECOB2",213,0)
 . N IBU
"RTN","IBCECOB2",214,0)
 . S IBU="R"
"RTN","IBCECOB2",215,0)
 . S IBNIEN=+IBHV("IBIFN1")
"RTN","IBCECOB2",216,0)
 . I "23"'[$P($G(^DGCR(399,+IBHV("IBIFN1"),0)),U,13) D
"RTN","IBCECOB2",217,0)
 .. W:'$G(IBCEAUTO) !,*7,"Please note: the new bill was not AUTHORIZED.",!,"It can only be accessed now via the normal, non-EDI functions.",!,"Status of new bill is ",$$EXPAND^IBTRE(399,.13,$P(^DGCR(399,IBHV("IBIFN1"),0),U,13)) S IBU="C"
"RTN","IBCECOB2",218,0)
 . D UPDEDI^IBCEM(IB364,IBU)
"RTN","IBCECOB2",219,0)
 ;
"RTN","IBCECOB2",220,0)
 I '$G(IBCEAUTO) D PAUSE^VALM1
"RTN","IBCECOB2",221,0)
CCQ Q
"RTN","IBCECOB2",222,0)
 ;
"RTN","IBCECOB2",223,0)
PRO ; Copy for secondary/tertiary bill
"RTN","IBCECOB2",224,0)
 N VALMY,IBDA,Z,IBIFN,IBIFNH,IB364,IBCE,IBNCN
"RTN","IBCECOB2",225,0)
 ;I '$P($G(^IBE(350.9,1,8)),U,12) D  G PROQ
"RTN","IBCECOB2",226,0)
 I '$P($G(^IBE(350.9,1,8)),U,12),$G(IBMRANOT)'=1 D  G PROQ
"RTN","IBCECOB2",227,0)
 . D FULL^VALM1
"RTN","IBCECOB2",228,0)
 . W !!?5,"MRA's may not be processed at this time."
"RTN","IBCECOB2",229,0)
 . W !?5,"The IB site parameter ""Allow MRA Processing?"" is set to NO."
"RTN","IBCECOB2",230,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",231,0)
 . Q
"RTN","IBCECOB2",232,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",233,0)
 S Z=$O(IBDA(0)),Z=$G(IBDA(+Z)) G:'Z PROQ
"RTN","IBCECOB2",234,0)
 S IBIFN=$P(Z,U),IB364=$P(Z,U,2),IBDA=$P(Z,U,3),IBIFNH=IBIFN
"RTN","IBCECOB2",235,0)
 I 'IBIFN G PROQ
"RTN","IBCECOB2",236,0)
 I '$G(IBMRANOT),$D(^IBM(361.1,IBDA,"ERR")),'$$WARNMSE G PROQ        ; Claim contains Message Storage Errors
"RTN","IBCECOB2",237,0)
 I '$$LOCK^IBCEU0(361.1,IBDA) G PROQ
"RTN","IBCECOB2",238,0)
 D COBCOPY(IBIFN,IB364,2,IBDA,"BLD^IBCECOB1",.IBNCN)
"RTN","IBCECOB2",239,0)
 D UNLOCK^IBCEU0(361.1,IBDA)
"RTN","IBCECOB2",240,0)
 ;
"RTN","IBCECOB2",241,0)
 ; for non-MRA claims copied from work list, set field 38
"RTN","IBCECOB2",242,0)
 I $G(IBMRANOT)=1,$G(IBNCN)'="",($G(IBNCN)'=$G(IBIFN)) D
"RTN","IBCECOB2",243,0)
 .S X=$$WLRMVF^IBCECOB1($G(IBIFN),"PC")
"RTN","IBCECOB2",244,0)
 .;I $P($G(^DGCR(399,+IBNCN,"S")),U,9)'=1 D
"RTN","IBCECOB2",245,0)
 .;.W:'$G(IBCEAUTO) !,*7,"Please note: the new bill was not AUTHORIZED.",!,"It can only be accessed now via the normal, non-EDI functions.",!,"Status of new bill is ",$$EXPAND^IBTRE(399,.13,$P(^DGCR(399,IBNCN,0),U,13))
"RTN","IBCECOB2",246,0)
 .;.D PAUSE^VALM1
"RTN","IBCECOB2",247,0)
 .D:$G(IBMRANOT)=1 BLD^IBCECOB1
"RTN","IBCECOB2",248,0)
 .Q
"RTN","IBCECOB2",249,0)
 ;
"RTN","IBCECOB2",250,0)
PROQ S VALMBCK="R"
"RTN","IBCECOB2",251,0)
 Q
"RTN","IBCECOB2",252,0)
 ;
"RTN","IBCECOB2",253,0)
COBCOPY(IBIFN,IB364,IBFROM,IBIEN,IBBLD,IBNCN) ; Generic entry point for EDI COB copy
"RTN","IBCECOB2",254,0)
 ; IBIFN = original bill ien
"RTN","IBCECOB2",255,0)
 ; IB364 = the ien of the transmission bill entry in file 364
"RTN","IBCECOB2",256,0)
 ; IBFROM = 1 if called from CSA, 2 if called from COB/EOB processing
"RTN","IBCECOB2",257,0)
 ; IBIEN = entry in 361 (IBFROM=1) or 361.1 (IBFROM=2) being processed
"RTN","IBCECOB2",258,0)
 ; IBBLD = the name of the entrypoint that will rebuild the display
"RTN","IBCECOB2",259,0)
 ; IBNCN = by reference, returns the new claim ien if user completed the Copy process
"RTN","IBCECOB2",260,0)
 ;
"RTN","IBCECOB2",261,0)
 N IBCBASK,IBCBCOPY,IBCAN,IBIFNH,IBNSTAT,IBOSTAT,IBPRCOB,IBSECHK,IBLMVAR,IBAC,IBMRAIEN,IBDA,IBAUTO
"RTN","IBCECOB2",262,0)
 N IBCOB,IBCOBIL,IBCOBN,IBINS,IBINSN,IBINSOLD,IBMRAIO,IBMRAO,IBNMOLD,IBQUIT
"RTN","IBCECOB2",263,0)
 S (IBCBASK,IBCBCOPY,IBCAN,IBAUTO)=1,(IBPRCOB,IBSECHK)=0,(IBMRAIEN,IBDA)=IBIEN
"RTN","IBCECOB2",264,0)
 I $G(IBMRANOT)'=1,'IB364!'IBIFN W !,"Transmission record is missing for this bill" D PAUSE^VALM1 G COBCOPX
"RTN","IBCECOB2",265,0)
 ;
"RTN","IBCECOB2",266,0)
 S IBIFNH=IBIFN
"RTN","IBCECOB2",267,0)
 I IBFROM=2 S IBPRCOB=1
"RTN","IBCECOB2",268,0)
 ; IB*2.0*447 Check PR to include excess and percentages where applicable
"RTN","IBCECOB2",269,0)
 ;I $S($G(IBMRANOT)=1:$$TOT(IBIFN)'>0,1:$$PREOBTOT^IBCEU0(IBIFN,$G(IBMRANOT))'>0) D  G COBCOPX
"RTN","IBCECOB2",270,0)
 I $$TOT(IBIFN,$G(IBMRANOT))'>0 D  G COBCOPX
"RTN","IBCECOB2",271,0)
 . D FULL^VALM1
"RTN","IBCECOB2",272,0)
 . W !!?5,"There is no "_$S($G(IBMRANOT)=1:"balance remaining",1:"patient responsibility and/or excess charges")_" for this claim."
"RTN","IBCECOB2",273,0)
 . W !?5,"This claim may not be processed."
"RTN","IBCECOB2",274,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",275,0)
 . Q
"RTN","IBCECOB2",276,0)
 ;
"RTN","IBCECOB2",277,0)
 I $G(IBDA)'="",$P($G(^IBM(361.1,IBDA,0)),U,16)="1.5" D  G COBCOPX
"RTN","IBCECOB2",278,0)
 . W !!,"This claim has already been processed as a sec/tert claim."
"RTN","IBCECOB2",279,0)
 . W !,"You will need to complete the authorization process for this claim."
"RTN","IBCECOB2",280,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",281,0)
 . D AUTH
"RTN","IBCECOB2",282,0)
 . Q
"RTN","IBCECOB2",283,0)
 ;
"RTN","IBCECOB2",284,0)
 ; If multiple EOBs and one is processed, make sure collected closed.
"RTN","IBCECOB2",285,0)
 I $G(IBMRANOT),$$CCCHK(IBIFN)<0 D  G COBCOPX
"RTN","IBCECOB2",286,0)
 . W !,"Multiple EOBs exist for this claim and at least one has EOB status of PROCESSED."
"RTN","IBCECOB2",287,0)
 . W !,"Claim cannot be sent to next payer until AR status is Collected/Closed."
"RTN","IBCECOB2",288,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",289,0)
 . Q
"RTN","IBCECOB2",290,0)
 ;
"RTN","IBCECOB2",291,0)
 ; Get out if no next payer
"RTN","IBCECOB2",292,0)
 I '$P($G(^DGCR(399,IBIFN,"I"_($$COBN^IBCEF(IBIFN)+1))),U,1) D  G COBCOPX
"RTN","IBCECOB2",293,0)
 . W !,"There is no next payer for this bill"
"RTN","IBCECOB2",294,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",295,0)
 . Q
"RTN","IBCECOB2",296,0)
 ;
"RTN","IBCECOB2",297,0)
 D DSPRB^IBCCCB0(IBIFN)        ; display related bills
"RTN","IBCECOB2",298,0)
 S IBCE("EDI")=1
"RTN","IBCECOB2",299,0)
 D CHKB^IBCCCB                 ; process COB, create secondary bill
"RTN","IBCECOB2",300,0)
 S IBNCN=$G(IBCE("EDI","NEW")) ; get new claim ien
"RTN","IBCECOB2",301,0)
 S IBIFN=IBIFNH
"RTN","IBCECOB2",302,0)
 I IBSECHK G COBCOPX
"RTN","IBCECOB2",303,0)
 ;
"RTN","IBCECOB2",304,0)
 ; if user came from CBW, no need to view and authorize a 2nd time (already happens in IBCCCB)
"RTN","IBCECOB2",305,0)
 Q:$G(IBMRANOT)=1
"RTN","IBCECOB2",306,0)
 S IBV=1 D VIEW^IBCB2          ; display billing screens
"RTN","IBCECOB2",307,0)
 D AUTH                        ; authorize bill
"RTN","IBCECOB2",308,0)
COBCOPX ;
"RTN","IBCECOB2",309,0)
 Q
"RTN","IBCECOB2",310,0)
 ;
"RTN","IBCECOB2",311,0)
AUTH ; procedure to authorize the claim and refresh the screen
"RTN","IBCECOB2",312,0)
 K ^UTILITY($J) S IBAC=1,IBQUIT=0 D 3^IBCB1
"RTN","IBCECOB2",313,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCECOB2",314,0)
 I $P($G(^IBM(361.1,IBMRAIEN,0)),U,16)=3 D UPDEDI^IBCEM(IB364,"Z")
"RTN","IBCECOB2",315,0)
 I $G(IBBLD)'="" D @IBBLD
"RTN","IBCECOB2",316,0)
 D PAUSE^VALM1
"RTN","IBCECOB2",317,0)
AUTHX ;
"RTN","IBCECOB2",318,0)
 Q
"RTN","IBCECOB2",319,0)
 ;
"RTN","IBCECOB2",320,0)
RES ;Resubmit bill by print
"RTN","IBCECOB2",321,0)
 N IBDA,IBIFN,IB364
"RTN","IBCECOB2",322,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",323,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=+$P($G(IBDA(IBDA)),U,2)
"RTN","IBCECOB2",324,0)
 I 'IBIFN G RESQ
"RTN","IBCECOB2",325,0)
 D PRINT1^IBCEM03(IBIFN,.IBDA,IB364)
"RTN","IBCECOB2",326,0)
 D PAUSE^VALM1
"RTN","IBCECOB2",327,0)
 I $G(IBDA)'="" D BLD^IBCECOB1
"RTN","IBCECOB2",328,0)
RESQ S VALMBCK="R"
"RTN","IBCECOB2",329,0)
 Q
"RTN","IBCECOB2",330,0)
 ;
"RTN","IBCECOB2",331,0)
EBI ;View an unauthorized transmitted bill
"RTN","IBCECOB2",332,0)
 N IBFLG,IBDA,IBIFN,IB364,DFN
"RTN","IBCECOB2",333,0)
 K ^TMP($J,"IBBILL")
"RTN","IBCECOB2",334,0)
 D FULL^VALM1
"RTN","IBCECOB2",335,0)
 ;
"RTN","IBCECOB2",336,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",337,0)
 S IBDA=+$O(IBDA(""))
"RTN","IBCECOB2",338,0)
 S IBIFN=+$G(IBDA(IBDA)),IB364=+$P($G(IBDA(IBDA)),U,2),DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",339,0)
 G:'IBIFN EDITQ
"RTN","IBCECOB2",340,0)
 S IBV=1 D VIEW^IBCB2
"RTN","IBCECOB2",341,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCECOB2",342,0)
 D BLD^IBCECOB1
"RTN","IBCECOB2",343,0)
EDITQ S VALMBCK="R"
"RTN","IBCECOB2",344,0)
 Q
"RTN","IBCECOB2",345,0)
 ;
"RTN","IBCECOB2",346,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCECOB2",347,0)
 ; IBDA = array returned if selections made
"RTN","IBCECOB2",348,0)
 ;    IBDA(n)=ien of bill selected (file 399)
"RTN","IBCECOB2",349,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCECOB2",350,0)
 N IB
"RTN","IBCECOB2",351,0)
 K IBDA
"RTN","IBCECOB2",352,0)
 D FULL^VALM1
"RTN","IBCECOB2",353,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECOB2",354,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  S IBDA(IBDA)=$P($G(^TMP("IBCECOB",$J,+IBDA)),U,2,6)
"RTN","IBCECOB2",355,0)
 Q
"RTN","IBCECOB2",356,0)
 ;
"RTN","IBCECOB2",357,0)
EXIT ; Exit out of COB
"RTN","IBCECOB2",358,0)
 D FASTEXIT^IBCEFG4
"RTN","IBCECOB2",359,0)
 I $G(IBFASTXT)=1 S IBFASTXT=5
"RTN","IBCECOB2",360,0)
 Q
"RTN","IBCECOB2",361,0)
 ;
"RTN","IBCECOB2",362,0)
TOT(IBIFN,IBMRANOT) ; calculate if any balance remaining on non-MRA claim
"RTN","IBCECOB2",363,0)
 ; IBIFN = claim ien
"RTN","IBCECOB2",364,0)
 ; IBMRANOT = MRW/CBW flag (1=user came from CBW)  added with IB*2.0*447
"RTN","IBCECOB2",365,0)
 N IBPRTOT,IBBLD,IBCBN,IBU2
"RTN","IBCECOB2",366,0)
 I $G(IBMRANOT)'=1 Q $S($$MSEDT^IBCEMU4(IBIFN)'="":$$MSPRE^IBCEMU4(IBIFN),1:$$PREOBTOT^IBCEU0(IBIFN))
"RTN","IBCECOB2",367,0)
 ; total up the payer paid amounts, if this is a 2ndary claim, be sure to account for what the primary paid also
"RTN","IBCECOB2",368,0)
 S IBU2=$G(^DGCR(399,IBIFN,"U2")),IBCBN=$$COBN^IBCEF(IBIFN),IBPRTOT=$$EOBTOT^IBCEU1(IBIFN,IBCBN)
"RTN","IBCECOB2",369,0)
 S:IBPRTOT<0 IBPRTOT=0      ; don't allow negative prior payment or offset
"RTN","IBCECOB2",370,0)
 S:IBCBN=2 IBPRTOT=IBPRTOT+$P(IBU2,U,4)
"RTN","IBCECOB2",371,0)
 S:IBCBN=3 IBPRTOT=IBPRTOT+$P(IBU2,U,4)+$P(IBU2,U,5)
"RTN","IBCECOB2",372,0)
 S:IBPRTOT<0 IBPRTOT=0      ; don't allow negative prior payment or offset
"RTN","IBCECOB2",373,0)
 ; Subtract payer paid amount from Total Charges from BILLS/CLAIMS (#399) file, don't allow neg
"RTN","IBCECOB2",374,0)
 S IBBLD=$P($G(^DGCR(399,IBIFN,"U1")),U,1)-IBPRTOT
"RTN","IBCECOB2",375,0)
 S:IBBLD<0 IBBLD=0
"RTN","IBCECOB2",376,0)
 Q IBBLD
"RTN","IBCECOB2",377,0)
 ;
"RTN","IBCECOB2",378,0)
CCCHK(IBIFN) ; If there are multiple EOBS on file for this claim, then one of them must be processed and AR status must be collected closed to process.
"RTN","IBCECOB2",379,0)
 ; returns 1 if true
"RTN","IBCECOB2",380,0)
 ;         0 if there are not multiple EOBs or mulitple EOBs and none are processed (all denials)
"RTN","IBCECOB2",381,0)
 ;        -1 if false
"RTN","IBCECOB2",382,0)
 N IBDA,IBCT,IBPROC,IBARSTAT,IBEOBNDX,IBEOB
"RTN","IBCECOB2",383,0)
 S IBCT=0,IBPROC=0
"RTN","IBCECOB2",384,0)
 F IBEOBNDX="B","C" D
"RTN","IBCECOB2",385,0)
 .S IBDA=0 F  S IBDA=$O(^IBM(361.1,IBEOBNDX,IBIFN,IBDA)) Q:'+IBDA  D
"RTN","IBCECOB2",386,0)
 ..Q:$D(IBEOB(IBDA))
"RTN","IBCECOB2",387,0)
 ..Q:$P($G(^IBM(361.1,IBDA,0)),U,4)=1    ; only count EOBs
"RTN","IBCECOB2",388,0)
 ..S IBEOB(IBDA)="",IBCT=IBCT+1
"RTN","IBCECOB2",389,0)
 ..I $P($G(^IBM(361.1,IBDA,0)),U,13)=1 S IBPROC=1
"RTN","IBCECOB2",390,0)
 I IBCT<2 Q 0  ; less than 2 EOBs
"RTN","IBCECOB2",391,0)
 I 'IBPROC Q 0  ; no EOBs with status processed 
"RTN","IBCECOB2",392,0)
 S IBARSTAT=$$ARSTATA^IBJTU4(IBIFN)  ; get status of AR
"RTN","IBCECOB2",393,0)
 I $P(IBARSTAT,U)="COLLECTED/CLOSED" Q 1
"RTN","IBCECOB2",394,0)
 Q -1
"RTN","IBCECOB2",395,0)
 ;
"RTN","IBCECOB2",396,0)
DENCHK(IBIFN,IBCT) ; Make sure all EOBs from this claim are denied.
"RTN","IBCECOB2",397,0)
 ; Input: IBIFN - IEN to 399
"RTN","IBCECOB2",398,0)
 ;        IBCT - by reference. Return count of EOBs.
"RTN","IBCECOB2",399,0)
 ; Output: returns 1 if there is at least one EOB and that none of the EOBS are processed.
"RTN","IBCECOB2",400,0)
 ; otherwise 0
"RTN","IBCECOB2",401,0)
 ;
"RTN","IBCECOB2",402,0)
 N IBDA,IBPROC,IBEOBNDX,IBEOB
"RTN","IBCECOB2",403,0)
 S IBCT=0,IBPROC=0
"RTN","IBCECOB2",404,0)
 F IBEOBNDX="B","C" D
"RTN","IBCECOB2",405,0)
 .S IBDA=0 F  S IBDA=$O(^IBM(361.1,IBEOBNDX,IBIFN,IBDA)) Q:'+IBDA  D
"RTN","IBCECOB2",406,0)
 ..Q:$D(IBEOB(IBDA))
"RTN","IBCECOB2",407,0)
 ..Q:$P($G(^IBM(361.1,IBDA,0)),U,4)=1    ; only count EOBs
"RTN","IBCECOB2",408,0)
 ..S IBEOB(IBDA)="",IBCT=IBCT+1
"RTN","IBCECOB2",409,0)
 ..I $P($G(^IBM(361.1,IBDA,0)),U,13)=1 S IBPROC=1
"RTN","IBCECOB2",410,0)
 I IBCT,'IBPROC Q 1  ; there is at least one EOB and none of the EOBS are processed.
"RTN","IBCECOB2",411,0)
 Q 0  ;
"RTN","IBCECOB2",412,0)
 ;
"RTN","IBCECOB2",413,0)
WARNMSE() ; Display MSE Warning and check if we should continue.
"RTN","IBCECOB2",414,0)
 D FULL^VALM1
"RTN","IBCECOB2",415,0)
 N DIR,X,Y
"RTN","IBCECOB2",416,0)
 S DIR("A",1)="WARNING : The MRA for this claim caused a Data Mismatch/Message Storage Error."
"RTN","IBCECOB2",417,0)
 S DIR("A",2)="If you continue, the secondary claim may not contain the correct data."
"RTN","IBCECOB2",418,0)
 S DIR("A")="Do you wish to continue? ",DIR("B")="NO",DIR(0)="YA" D ^DIR
"RTN","IBCECOB2",419,0)
 I Y>0 Q 1   ; Okay to continue.
"RTN","IBCECOB2",420,0)
 Q 0  ;
"RTN","IBCECOB5")
0^29^B17731543^B13879653
"RTN","IBCECOB5",1,0)
IBCECOB5 ;ALB/TMP - IB COB MANAGEMENT SCREEN ;31-JAN-01
"RTN","IBCECOB5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,349,417,488**;21-MAR-94;Build 184
"RTN","IBCECOB5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECOB5",4,0)
 ;
"RTN","IBCECOB5",5,0)
INIT ;
"RTN","IBCECOB5",6,0)
 S IBDA=+$O(IBDA(0))
"RTN","IBCECOB5",7,0)
 Q:'IBDA
"RTN","IBCECOB5",8,0)
 D BLD(IBDA)
"RTN","IBCECOB5",9,0)
 S VALMBG=1
"RTN","IBCECOB5",10,0)
 Q
"RTN","IBCECOB5",11,0)
 ;
"RTN","IBCECOB5",12,0)
BLD(IBDA) ; Build list entrypoint
"RTN","IBCECOB5",13,0)
 N IB,IBIFN,IBVCNT,X,Z,IBCNT,CNT,IBREC,IBIFN1,IBPTRESP
"RTN","IBCECOB5",14,0)
 K ^TMP("IBCECOB-X",$J)
"RTN","IBCECOB5",15,0)
 S VALMCNT=0
"RTN","IBCECOB5",16,0)
 S IB=$G(^TMP("IBCECOB1",$J,IBDA)),IBCNT=$P(IB,"^",10)
"RTN","IBCECOB5",17,0)
 S IBVCNT=$G(^TMP("IBCECOB",$J,IBDA)),IBIFN=$P(IBVCNT,U,2),IBVCNT=+IBVCNT
"RTN","IBCECOB5",18,0)
 Q:'IBVCNT
"RTN","IBCECOB5",19,0)
 S Z=IBVCNT-1
"RTN","IBCECOB5",20,0)
 F  S Z=$O(^TMP("IBCECOB",$J,"IDX",Z)) Q:'Z!('$D(^TMP("IBCECOB",$J,"IDX",+Z,IBDA)))  D SET($G(^TMP("IBCECOB",$J,Z,0)))
"RTN","IBCECOB5",21,0)
 D SET("")
"RTN","IBCECOB5",22,0)
 S X=$E(" Original Billed Amt: $"_$$A10^IBCECSA5(+$P(IB,U,2))_$J("",40),1,40)
"RTN","IBCECOB5",23,0)
 S X=X_$S($G(IBSRC):"   Total A/R Payments: $"_$$A10^IBCECSA5($P(IB,U,3)),1:"Unreimburse Medicare Exp: $"_$$A10^IBCECSA5(+$G(^IBM(361.1,IBCNT,1))))
"RTN","IBCECOB5",24,0)
 D SET(X)
"RTN","IBCECOB5",25,0)
 ;
"RTN","IBCECOB5",26,0)
 S IBIFN1=$P($G(^IBM(361.1,IBCNT,0)),U,1)      ; bill#
"RTN","IBCECOB5",27,0)
 ; filing error
"RTN","IBCECOB5",28,0)
 S IBPTRESP=$P($G(^IBM(361.1,IBCNT,1)),U,2)    ; Pt Resp Amt 1.02 field
"RTN","IBCECOB5",29,0)
 S:$D(^IBM(361.1,IBCNT,"ERR")) IBPTRESP=0      ; filing error
"RTN","IBCECOB5",30,0)
 ; Override Pt Resp Amt for bills with Form Type UB-04
"RTN","IBCECOB5",31,0)
 I $$FT^IBCEF(IBIFN1)=3 S IBPTRESP=$$PTRESPI^IBCECOB1(IBCNT)
"RTN","IBCECOB5",32,0)
 ;
"RTN","IBCECOB5",33,0)
 S X=$E($S($G(IBSRC):"        Bill Balance: $"_$$A10^IBCECSA5(+$P(IB,U,4)),1:" Pt Resp Amt:         $"_$$A10^IBCECSA5(IBPTRESP))_$J("",40),1,40)
"RTN","IBCECOB5",34,0)
 I '$G(IBSRC) N IBCALC,IBIFN S IBIFN=+$G(^IBM(361.1,IBCNT,0)) D MRACALC^IBCEMU2(IBCNT,IBIFN,0,.IBCALC)
"RTN","IBCECOB5",35,0)
 S X=X_$S($G(IBSRC):"       Total Amt This EOB: $"_$$A10^IBCECSA5($P(IB,U,17)),1:"   Medicare Contract Adj: $"_$$A10^IBCECSA5($G(IBCALC("MEDCA"))))
"RTN","IBCECOB5",36,0)
 D SET(X)
"RTN","IBCECOB5",37,0)
 D SET("")
"RTN","IBCECOB5",38,0)
 I $G(IBSRC) D
"RTN","IBCECOB5",39,0)
 . S X=" Days Since Last Transmit: "_+$P(IB,U,12)
"RTN","IBCECOB5",40,0)
 . D SET(X)
"RTN","IBCECOB5",41,0)
 . S X="       Authorizing Biller: "_$P(IB,U,8)
"RTN","IBCECOB5",42,0)
 . D SET(X)
"RTN","IBCECOB5",43,0)
 . S X="              COB History: "
"RTN","IBCECOB5",44,0)
 . I $P(IB,U,11)'="" D
"RTN","IBCECOB5",45,0)
 .. F Z=1:1:$L($P(IB,U,11),";") S X=X_$P($P(IB,U,11),";",Z) D SET(X) S X=$J("",27)
"RTN","IBCECOB5",46,0)
 . E  D
"RTN","IBCECOB5",47,0)
 .. S X=X_"NONE FOUND" D SET(X)
"RTN","IBCECOB5",48,0)
 I '$G(IBSRC) S CNT=20,IBREC=$G(^IBM(361.1,IBCNT,0)) K ^TMP("IBCECSD",$J) D MRALLA^IBCECSA5 M ^TMP("IBCECOB-X",$J)=^TMP("IBCECSD",$J) K ^TMP("IBCECSD",$J)
"RTN","IBCECOB5",49,0)
 ;
"RTN","IBCECOB5",50,0)
 ;/Beginning IB*2.0*488 (vd)
"RTN","IBCECOB5",51,0)
 I '$D(^IBM(361.1,IBCNT,"ERR")) Q
"RTN","IBCECOB5",52,0)
 D EOBERR
"RTN","IBCECOB5",53,0)
 Q
"RTN","IBCECOB5",54,0)
 ;
"RTN","IBCECOB5",55,0)
EOBERR ; Display information about any 361.1 message storage or filing errors
"RTN","IBCECOB5",56,0)
 N ERRTXT,DASHES,X,Z
"RTN","IBCECOB5",57,0)
 S DASHES="---------------------------------------------------------------------"
"RTN","IBCECOB5",58,0)
 I '$O(^IBM(361.1,IBCNT,"ERR",0)) Q
"RTN","IBCECOB5",59,0)
 S X="VistA could not match all of the Line Level data received in the EEOB" D SET(X)
"RTN","IBCECOB5",60,0)
 S X="(835 Record 40) to the claim in VistA." D SET(X)
"RTN","IBCECOB5",61,0)
 S X=" " D SET(X)
"RTN","IBCECOB5",62,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,"ERR",Z)) Q:'Z  D
"RTN","IBCECOB5",63,0)
 .S ERRTXT=$G(^IBM(361.1,IBCNT,"ERR",Z,0))
"RTN","IBCECOB5",64,0)
 .I ERRTXT["##RAW DATA" S ERRTXT=DASHES
"RTN","IBCECOB5",65,0)
 .S X=$$SETLN^IBJTBA(ERRTXT,"",1,79) D SET(X)
"RTN","IBCECOB5",66,0)
 ;/End of IB*2.0*488 (vd)
"RTN","IBCECOB5",67,0)
 ;
"RTN","IBCECOB5",68,0)
 Q
"RTN","IBCECOB5",69,0)
 ;
"RTN","IBCECOB5",70,0)
EXIT ; -- exit code --
"RTN","IBCECOB5",71,0)
 K ^TMP("IBCECOB-X",$J),IBDA
"RTN","IBCECOB5",72,0)
 D CLEAN^VALM10
"RTN","IBCECOB5",73,0)
 Q
"RTN","IBCECOB5",74,0)
 ;
"RTN","IBCECOB5",75,0)
HDR1 ; -- header code
"RTN","IBCECOB5",76,0)
 ; Assume IBIFN and IBZIEN are defined
"RTN","IBCECOB5",77,0)
 N IBCOB,IBINS
"RTN","IBCECOB5",78,0)
 K VALMHDR
"RTN","IBCECOB5",79,0)
 S IBINS=$$FINDINS^IBCEF1(IBIFN)
"RTN","IBCECOB5",80,0)
 S VALMHDR(1)=IORVON_" BILL #:"_$$BN^PRCAFN(IBIFN)_IORVOFF
"RTN","IBCECOB5",81,0)
 S VALMHDR(1)=$J("",80-$L(VALMHDR(1))\2)_VALMHDR(1)
"RTN","IBCECOB5",82,0)
 S VALMHDR(2)="  INSURANCE COMPANY: "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCECOB5",83,0)
 S VALMHDR(3)="  "_IOUON_"Svc Date  Patient Name/Last 4           Care Type/Form  COB/SEQ"_IOUOFF
"RTN","IBCECOB5",84,0)
 S Z=$G(^TMP("IBCECOB",$J,IBZIEN,0))
"RTN","IBCECOB5",85,0)
 S VALMHDR(4)="  "_$E(Z,17,$L(Z))
"RTN","IBCECOB5",86,0)
 Q
"RTN","IBCECOB5",87,0)
 ;
"RTN","IBCECOB5",88,0)
EXIT1 ; -- exit code --
"RTN","IBCECOB5",89,0)
 K ^TMP("IBCECSD",$J)
"RTN","IBCECOB5",90,0)
 D CLEAN^VALM10
"RTN","IBCECOB5",91,0)
 Q
"RTN","IBCECOB5",92,0)
 ;
"RTN","IBCECOB5",93,0)
VEOB ;View an EOB from EOB Management
"RTN","IBCECOB5",94,0)
 N IBDA,IBCNT,IBIFN,Z,VALMCNT,IBZIEN,IBONE
"RTN","IBCECOB5",95,0)
 ;
"RTN","IBCECOB5",96,0)
 D FULL^VALM1
"RTN","IBCECOB5",97,0)
 D SEL^IBCECOB2(.IBDA,1)
"RTN","IBCECOB5",98,0)
 S IBDA=+$O(IBDA(0))
"RTN","IBCECOB5",99,0)
 I IBDA D EN^VALM("IBCEM EOB VIEW EOB")
"RTN","IBCECOB5",100,0)
 S VALMBCK="R"
"RTN","IBCECOB5",101,0)
 Q
"RTN","IBCECOB5",102,0)
 ;
"RTN","IBCECOB5",103,0)
INIT1 ;
"RTN","IBCECOB5",104,0)
 S IBCNT=+$P($G(IBDA(IBDA)),U,3)
"RTN","IBCECOB5",105,0)
 S IBIFN=+$G(IBDA(IBDA)),IBZIEN=+$G(^TMP("IBCECOB",$J,IBDA)),IBONE=1
"RTN","IBCECOB5",106,0)
 Q:'IBCNT!'IBIFN!'IBZIEN
"RTN","IBCECOB5",107,0)
 D HDR1
"RTN","IBCECOB5",108,0)
 D BLD^IBCECSA6
"RTN","IBCECOB5",109,0)
 Q
"RTN","IBCECOB5",110,0)
 ;
"RTN","IBCECOB5",111,0)
SET(X) ;set up list manager screen array
"RTN","IBCECOB5",112,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB5",113,0)
 S ^TMP("IBCECOB-X",$J,VALMCNT,0)=X
"RTN","IBCECOB5",114,0)
 Q
"RTN","IBCECOB5",115,0)
 ;
"RTN","IBCECSA5")
0^30^B69687266^B62841003
"RTN","IBCECSA5",1,0)
IBCECSA5 ;ALB/CXW - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,263,280,155,349,489,488**;21-MAR-1994;Build 184
"RTN","IBCECSA5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECSA5",4,0)
 ;
"RTN","IBCECSA5",5,0)
EN ; -- main entry point for VIEW EOB
"RTN","IBCECSA5",6,0)
 N VALMCNT,VALMBG,VALMHDR
"RTN","IBCECSA5",7,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCECSA5",8,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA5",9,0)
 Q
"RTN","IBCECSA5",10,0)
 ;
"RTN","IBCECSA5",11,0)
INIT ; -- init variables and list array
"RTN","IBCECSA5",12,0)
 I '$G(IBIFN) S VALMQUIT="" G INITQ    ; bill# is required
"RTN","IBCECSA5",13,0)
 D HDR^IBCEOB2                         ; build the VALMHDR array
"RTN","IBCECSA5",14,0)
 K IBCNT,IBONE,^TMP("IBCECSD",$J)      ; kill vars and scratch global
"RTN","IBCECSA5",15,0)
 ;
"RTN","IBCECSA5",16,0)
 ; 8/13/03 - If variable IBEOBIFN is set, then this is the 361.1 ien
"RTN","IBCECSA5",17,0)
 ;           that the user selected from a list.  Build the detail.
"RTN","IBCECSA5",18,0)
 I $G(IBEOBIFN) S IBCNT=IBEOBIFN,IBONE=1 D BLD^IBCECSA6,EOBERR G INITQ
"RTN","IBCECSA5",19,0)
 ;
"RTN","IBCECSA5",20,0)
 D BLD^IBCEOB2   ; build ^TMP("IBCEOB",$J) containing MRA/EOB lister
"RTN","IBCECSA5",21,0)
 S IBONE=0
"RTN","IBCECSA5",22,0)
 M ^TMP("IBCECSD",$J)=^TMP("IBCEOB",$J)
"RTN","IBCECSA5",23,0)
 ;
"RTN","IBCECSA5",24,0)
 ; 4/7/03 - If only 1 EOB record found for this bill, then set the
"RTN","IBCECSA5",25,0)
 ;          IBCNT variable, the IBONE one-time flag, and build the
"RTN","IBCECSA5",26,0)
 ;          detail sections of this list.
"RTN","IBCECSA5",27,0)
 I $G(VALMCNT)=1 S IBCNT=$P($G(^TMP("IBCECSD",$J,1)),U,2),IBONE=1 I IBCNT D BLD^IBCECSA6
"RTN","IBCECSA5",28,0)
 D EOBERR   ; IB*2.0*488  (vd)
"RTN","IBCECSA5",29,0)
 ;
"RTN","IBCECSA5",30,0)
INITQ Q
"RTN","IBCECSA5",31,0)
 ;
"RTN","IBCECSA5",32,0)
HELP ; -- help code
"RTN","IBCECSA5",33,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECSA5",34,0)
 Q
"RTN","IBCECSA5",35,0)
 ;
"RTN","IBCECSA5",36,0)
EXIT ; -- exit code
"RTN","IBCECSA5",37,0)
 K ^TMP("IBCECSD",$J)
"RTN","IBCECSA5",38,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBCECSA5",39,0)
 Q
"RTN","IBCECSA5",40,0)
MIN ;
"RTN","IBCECSA5",41,0)
 N IBREC1,IBRM1,IBRM2,IBRM3,IBRM4,IBRM5,IBRL,IBTYPE,IBT,IBTX,IBD
"RTN","IBCECSA5",42,0)
 ; flag for inpatient mra
"RTN","IBCECSA5",43,0)
 S IBTYPE=$S($G(IBSRC):1,$$INPAT^IBCEF(+IBREC):1,1:0)
"RTN","IBCECSA5",44,0)
 ;
"RTN","IBCECSA5",45,0)
 S IB=$$SETSTR^VALM1("MEDICARE INFORMATION:","",1,50)
"RTN","IBCECSA5",46,0)
 D SET(IB)
"RTN","IBCECSA5",47,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",48,0)
 . D CNTRL^VALM10(VALMCNT,1,21,IORVON,IORVOFF)
"RTN","IBCECSA5",49,0)
 . S ^TMP("IBCECSD",$J,"X",5)=VALMCNT
"RTN","IBCECSA5",50,0)
 I $G(IBSRC),'$D(^IBM(361.1,IBCNT,4)) Q
"RTN","IBCECSA5",51,0)
 I '$G(IBSRC),'$$INPAT^IBCEF(+IBREC) Q
"RTN","IBCECSA5",52,0)
 D SET(" INPATIENT:")
"RTN","IBCECSA5",53,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,4)),(IB,IBRL)=""
"RTN","IBCECSA5",54,0)
 ;
"RTN","IBCECSA5",55,0)
 F IBT=2:1 S IBTX=$P($T(MINDAT+IBT),";",3) Q:IBTX=""  D
"RTN","IBCECSA5",56,0)
 . S IBD=$P(IBREC1,"^",+IBTX)
"RTN","IBCECSA5",57,0)
 . I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) E  N IBFULL S IBFULL=1
"RTN","IBCECSA5",58,0)
 . I $S(IBFULL:1,1:IBD) D
"RTN","IBCECSA5",59,0)
 .. I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) I  Q
"RTN","IBCECSA5",60,0)
 .. X "S IBD="_$S($L($P(IBTX,"^",3)):$P(IBTX,"^",3),1:"$$A10(IBD)")
"RTN","IBCECSA5",61,0)
 .. S IB=$$SETSTR^VALM1($P(IBTX,"^",2)_IBD,IB,$S('IBRL:4,1:37),$S('IBRL:41,1:38))
"RTN","IBCECSA5",62,0)
 .. S IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA5",63,0)
 .. I 'IBRL D SET(IB,IBRL) S IB=""
"RTN","IBCECSA5",64,0)
 ;
"RTN","IBCECSA5",65,0)
 D:IBRL'="" SET(IB)
"RTN","IBCECSA5",66,0)
 D REMARK
"RTN","IBCECSA5",67,0)
 Q
"RTN","IBCECSA5",68,0)
 ;
"RTN","IBCECSA5",69,0)
MINDAT ; data for MIN tag
"RTN","IBCECSA5",70,0)
 ; format:  piece^label^special format code^special decision for disp
"RTN","IBCECSA5",71,0)
 ;;1^Cov Days/Visit Ct  : ^$$RJ(+IBD)^I $G(IBSRC)
"RTN","IBCECSA5",72,0)
 ;;3^Claim DRG Amt      : 
"RTN","IBCECSA5",73,0)
 ;;2^Lifetm Psych Dy Ct : ^$$RJ(IBD)
"RTN","IBCECSA5",74,0)
 ;;5^Disprop Share Amt  : ^^I IBTYPE
"RTN","IBCECSA5",75,0)
 ;;4^Cap Exception Amt  : 
"RTN","IBCECSA5",76,0)
 ;;7^PPS Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",77,0)
 ;;6^MSP Pass Thru Amt  : 
"RTN","IBCECSA5",78,0)
 ;;9^PPS Cap HSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",79,0)
 ;;8^PPS Cap FSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",80,0)
 ;;11^Old Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",81,0)
 ;;10^PPS Cap DSH-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",82,0)
 ;;13^PPS Op Hos DRG Amt : 
"RTN","IBCECSA5",83,0)
 ;;12^PPS Capital IME Amt: ^^I IBTYPE
"RTN","IBCECSA5",84,0)
 ;;15^PPS Op Fed DRG Amt : ^^I IBTYPE
"RTN","IBCECSA5",85,0)
 ;;14^Cost Report Day Ct : ^$$RJ(IBD)^I IBTYPE
"RTN","IBCECSA5",86,0)
 ;;17^Indirect Teach Amt : ^^I IBTYPE
"RTN","IBCECSA5",87,0)
 ;;16^PPS Cap Outlier Amt: ^^I IBTYPE
"RTN","IBCECSA5",88,0)
 ;;18^Non-Pay Prof Comp  : ^$$RJ(IBD)
"RTN","IBCECSA5",89,0)
 ;;19^Non-Covered Days Ct: ^$$RJ(+IBD)^I IBTYPE
"RTN","IBCECSA5",90,0)
 ;;
"RTN","IBCECSA5",91,0)
 ;
"RTN","IBCECSA5",92,0)
REMARK ; set up remarks and line level details
"RTN","IBCECSA5",93,0)
 N IBREC1,IBP,IBT,IBX,RCODE,RDESC,REXIST
"RTN","IBCECSA5",94,0)
 Q:$G(IBREM)  S IBREM=1
"RTN","IBCECSA5",95,0)
 D SET(" ")
"RTN","IBCECSA5",96,0)
 D SET(" Claim Level Remark Information")
"RTN","IBCECSA5",97,0)
 D SET("   Code     Description")
"RTN","IBCECSA5",98,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",99,0)
 . D CNTRL^VALM10(VALMCNT,4,4,IOUON,IOUOFF)
"RTN","IBCECSA5",100,0)
 . D CNTRL^VALM10(VALMCNT,13,11,IOUON,IOUOFF)
"RTN","IBCECSA5",101,0)
 . Q
"RTN","IBCECSA5",102,0)
 ;
"RTN","IBCECSA5",103,0)
 S IBREC1=$P($G(^IBM(361.1,IBCNT,3)),U,3,7)
"RTN","IBCECSA5",104,0)
 I $P(IBREC1,U,1)="" S IBREC1=$P($G(^IBM(361.1,IBCNT,5)),U,1,5)
"RTN","IBCECSA5",105,0)
 S REXIST=0
"RTN","IBCECSA5",106,0)
 ;
"RTN","IBCECSA5",107,0)
 F IBP=1:1:5 D
"RTN","IBCECSA5",108,0)
 . S RCODE=$P(IBREC1,U,IBP)
"RTN","IBCECSA5",109,0)
 . S RDESC=$G(^IBM(361.1,IBCNT,"RM"_IBP))
"RTN","IBCECSA5",110,0)
 . I RCODE="",RDESC="" Q
"RTN","IBCECSA5",111,0)
 . S REXIST=1
"RTN","IBCECSA5",112,0)
 . K IBT
"RTN","IBCECSA5",113,0)
 . S IBT(IBP)=RDESC
"RTN","IBCECSA5",114,0)
 . D TXT1(.IBT,0,60)
"RTN","IBCECSA5",115,0)
 . D SET("   "_$$LJ^XLFSTR(RCODE,6)_"-  "_$G(IBT(1)))
"RTN","IBCECSA5",116,0)
 . S IBX=1
"RTN","IBCECSA5",117,0)
 . F  S IBX=$O(IBT(IBX)) Q:'IBX  D SET($J("",12)_IBT(IBX))
"RTN","IBCECSA5",118,0)
 . Q
"RTN","IBCECSA5",119,0)
 ;
"RTN","IBCECSA5",120,0)
 I 'REXIST D SET("   No claim level remarks on file")
"RTN","IBCECSA5",121,0)
 D SET(" ")
"RTN","IBCECSA5",122,0)
 Q:$G(IBSRC)  ; MRA Only
"RTN","IBCECSA5",123,0)
 ;
"RTN","IBCECSA5",124,0)
MRALLA S IB=$$SETSTR^VALM1("LINE LEVEL ADJUSTMENTS:","",1,50)
"RTN","IBCECSA5",125,0)
 D SET(IB)
"RTN","IBCECSA5",126,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",127,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA5",128,0)
 . S ^TMP("IBCECSD",$J,"X",7)=VALMCNT
"RTN","IBCECSA5",129,0)
 I '$D(^IBM(361.1,IBCNT,15,0)) D SET(" NONE") Q  ; only if there is info
"RTN","IBCECSA5",130,0)
 ;
"RTN","IBCECSA5",131,0)
 ; look up all billed data
"RTN","IBCECSA5",132,0)
 N IBZDATA,IBFORM,IBX2,IBX3,IBREC2,IBREC3,IBTX,IBT,IBRC,IBZ,IBTXL
"RTN","IBCECSA5",133,0)
 S IBFORM=0                             ; cms-1500
"RTN","IBCECSA5",134,0)
 I $$FT^IBCEF(+IBREC)=3 S IBFORM=1      ; UB-04
"RTN","IBCECSA5",135,0)
 D F^IBCEF("N-"_$S(IBFORM:"UB-04",1:"HCFA 1500")_" SERVICE LINE (EDI)","IBZDATA",,+IBREC)
"RTN","IBCECSA5",136,0)
 ;
"RTN","IBCECSA5",137,0)
 S IBX=0 F  S IBX=$O(^IBM(361.1,IBCNT,15,IBX)) Q:IBX<1  S IBREC1=^IBM(361.1,IBCNT,15,IBX,0) D
"RTN","IBCECSA5",138,0)
 . NEW RVL
"RTN","IBCECSA5",139,0)
 . D SET("  #   SV DT   REVCD  PROC  MOD  UNITS  BILLED  DEDUCT  COINS    ALLOW     PYMT")
"RTN","IBCECSA5",140,0)
 . S RVL=+$P(IBREC1,U,12)       ; referenced Vista line#
"RTN","IBCECSA5",141,0)
 . I 'RVL S RVL=IBX             ; use the EOB line# if not there
"RTN","IBCECSA5",142,0)
 . S IBT=$$RJ($P(IBREC1,"^"),3) ;             line number
"RTN","IBCECSA5",143,0)
 . S IBT=IBT_" "_$$RJ($$DAT1^IBOUTL($P($P(IBREC1,"^",16),".")),8) ; service date
"RTN","IBCECSA5",144,0)
 . S IBT=IBT_" "_$$RJ($$EXTERNAL^DILFD(361.115,.1,"",$P(IBREC1,"^",10)),6) ;                                                revcd
"RTN","IBCECSA5",145,0)
 . S IBT=IBT_" "_$$RJ($P(IBREC1,"^",4),5) ;   procedure
"RTN","IBCECSA5",146,0)
 . S IBT=IBT_" "_$$RJ($P($G(^IBM(361.1,IBCNT,15,IBX,2,1,0)),"^"),3)_$S($D(^IBM(361.1,IBCNT,15,IBX,2,2,0)):"+",1:" ") ;      modifiers
"RTN","IBCECSA5",147,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",11),"",0),5) ; units
"RTN","IBCECSA5",148,0)
 . S IBT=IBT_" "_$$RJ($FN($S(IBFORM:$P($G(IBZDATA(RVL)),"^",5),1:$P($G(IBZDATA(RVL)),"^",8)*$P($G(IBZDATA(RVL)),"^",9)),"",2),8) ;    billed
"RTN","IBCECSA5",149,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",1,0)),0)),"^",2),"",2),7) ;  deduct
"RTN","IBCECSA5",150,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",2,0)),0)),"^",2),"",2),6) ;   coins
"RTN","IBCECSA5",151,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",13),"",2),8) ; allow
"RTN","IBCECSA5",152,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",3),"",2),8) ;  payment
"RTN","IBCECSA5",153,0)
 . D SET(IBT)
"RTN","IBCECSA5",154,0)
 . S IBX2=0 F  S IBX2=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2)) Q:IBX2<1  D
"RTN","IBCECSA5",155,0)
 .. S IBREC2=^IBM(361.1,IBCNT,15,IBX,1,IBX2,0),IBX3=0
"RTN","IBCECSA5",156,0)
 .. F  S IBX3=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3)) Q:IBX3<1  D
"RTN","IBCECSA5",157,0)
 ... S IBREC3=^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3,0)
"RTN","IBCECSA5",158,0)
 ... ; line level adjustments; don't display kludges (esg 10/23/03)
"RTN","IBCECSA5",159,0)
 ... I $P(IBREC2,U,1)="PR",$P(IBREC3,U,1)="AAA" Q
"RTN","IBCECSA5",160,0)
 ... I $P(IBREC2,U,1)="OA",$P(IBREC3,U,1)="AB3" Q
"RTN","IBCECSA5",161,0)
 ... I $P(IBREC2,U,1)="LQ" Q
"RTN","IBCECSA5",162,0)
 ... S IBTX(1)="ADJ: "_$P(IBREC2,"^")_"  "_$P(IBREC3,"^")_"  "_$P(IBREC3,"^",4) D TXT1(.IBTX,0,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",163,0)
 ... K IBTX
"RTN","IBCECSA5",164,0)
 ... D SET("ADJ AMT: "_$FN($P(IBREC3,"^",2),"",2))
"RTN","IBCECSA5",165,0)
 . S IBRC=0
"RTN","IBCECSA5",166,0)
 . F  S IBRC=$O(^IBM(361.1,IBCNT,15,IBX,4,IBRC)) Q:'IBRC  S IBREC2=$G(^(IBRC,0)) I IBREC2 K IBTX,IBZ S IBTX(1)="  -REMARK CODE("_+IBREC2_"): ",IBTXL=$L(IBTX(1)) D
"RTN","IBCECSA5",167,0)
 .. S IBTX(1)=IBTX(1)_$P(IBREC2,U,2)_"  "_$P(IBREC2,U,3)
"RTN","IBCECSA5",168,0)
 .. I $L(IBTX(1))>79 D
"RTN","IBCECSA5",169,0)
 ... D TXT1(.IBTX,0,79) D SET(IBTX(1)) M IBZ=IBTX K IBTX S IBTX(1)="",IBT=1 F  S IBT=$O(IBZ(IBT)) Q:'IBT  S IBTX(1)=IBTX(1)_IBZ(IBT)_" "
"RTN","IBCECSA5",170,0)
 .. E  D
"RTN","IBCECSA5",171,0)
 ... S IBTXL=0
"RTN","IBCECSA5",172,0)
 .. D TXT1(.IBTX,IBTXL,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",173,0)
 . D SET(" ")
"RTN","IBCECSA5",174,0)
 D SET(" ")
"RTN","IBCECSA5",175,0)
 Q
"RTN","IBCECSA5",176,0)
 ;
"RTN","IBCECSA5",177,0)
 ;/Beginning IB*2.0*488 (vd)
"RTN","IBCECSA5",178,0)
EOBERR ; Display information about any 361.1 message storage or filing errors
"RTN","IBCECSA5",179,0)
 N ERRTXT,DASHES,Z
"RTN","IBCECSA5",180,0)
 S DASHES="---------------------------------------------------------------------"
"RTN","IBCECSA5",181,0)
 I '$O(^IBM(361.1,IBCNT,"ERR",0)) Q
"RTN","IBCECSA5",182,0)
 D SET("VistA could not match all of the Line Level data received in the EEOB")
"RTN","IBCECSA5",183,0)
 D SET("(835 Record 40) to the claim in VistA.")
"RTN","IBCECSA5",184,0)
 D SET(" ")
"RTN","IBCECSA5",185,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,"ERR",Z)) Q:'Z  D
"RTN","IBCECSA5",186,0)
 .S ERRTXT=$G(^IBM(361.1,IBCNT,"ERR",Z,0))
"RTN","IBCECSA5",187,0)
 .I ERRTXT["##RAW DATA" S ERRTXT=DASHES
"RTN","IBCECSA5",188,0)
 .D SET(ERRTXT)
"RTN","IBCECSA5",189,0)
 Q
"RTN","IBCECSA5",190,0)
 ;/End of IB*2.0*488 (vd)
"RTN","IBCECSA5",191,0)
 ;
"RTN","IBCECSA5",192,0)
TXT(IBRM,IBLN,IBXY) ;display text over 79 chars
"RTN","IBCECSA5",193,0)
 ;IBRM - text, IBLN - length, IBXY - position
"RTN","IBCECSA5",194,0)
 S IBRM=$E(IBRM,IBLN+1,999)
"RTN","IBCECSA5",195,0)
REP I $E(IBRM,1,IBLN)'="" S IB=$$SETSTR^VALM1($E(IBRM,1,IBLN),"",IBXY,IBLN) D SET(IB) S IBRM=$E(IBRM,IBLN+1,999) G REP
"RTN","IBCECSA5",196,0)
 Q
"RTN","IBCECSA5",197,0)
 ;
"RTN","IBCECSA5",198,0)
SET(IB,IBSAV) ;
"RTN","IBCECSA5",199,0)
 I '$G(IBSAV) D SET^IBCECSA6($G(IBSRC),IB,+$G(CNT),IBCNT)
"RTN","IBCECSA5",200,0)
 Q
"RTN","IBCECSA5",201,0)
 ;
"RTN","IBCECSA5",202,0)
A10(X) ;
"RTN","IBCECSA5",203,0)
 Q $$A10^IBCECSA6(X)
"RTN","IBCECSA5",204,0)
 ;
"RTN","IBCECSA5",205,0)
A7(X) ; returns a dollar amount right justified to 7 characters
"RTN","IBCECSA5",206,0)
 Q $$RJ($FN(X,"",2),7)
"RTN","IBCECSA5",207,0)
 ;
"RTN","IBCECSA5",208,0)
TXT1(IBT,DIWL,DIWR) ; sets up text for over 79 chars
"RTN","IBCECSA5",209,0)
 ; IBT - pass by ref, array of text to be formatted back in array
"RTN","IBCECSA5",210,0)
 ; DIWL - left margin, DIWR = right margin
"RTN","IBCECSA5",211,0)
 N IBX,X,DIWF,IBS K ^UTILITY($J,"W")
"RTN","IBCECSA5",212,0)
 S DIWF="|I"_DIWL
"RTN","IBCECSA5",213,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  S X=IBT(IBX) D ^DIWP
"RTN","IBCECSA5",214,0)
 K IBT F  S IBX=$O(^UTILITY($J,"W",DIWL,IBX)) Q:IBX<1  S IBT(IBX)=^UTILITY($J,"W",DIWL,IBX,0)
"RTN","IBCECSA5",215,0)
 K ^UTILITY($J,"W")
"RTN","IBCECSA5",216,0)
 Q
"RTN","IBCECSA5",217,0)
 ;
"RTN","IBCECSA5",218,0)
RJ(X,Y) ; right just, default is 10
"RTN","IBCECSA5",219,0)
 Q $$RJ^XLFSTR(X,$G(Y,10)," ")
"RTN","IBCECSA5",220,0)
 ;
"RTN","IBCECSA6")
0^38^B168448681^B167601727
"RTN","IBCECSA6",1,0)
IBCECSA6 ;ALB/CXW/PJH - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA6",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,155,417,431,451,488**;21-MAR-1994;Build 184
"RTN","IBCECSA6",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECSA6",4,0)
 ;
"RTN","IBCECSA6",5,0)
BLD ;build EOB data display
"RTN","IBCECSA6",6,0)
 D GETEOB(IBCNT,0)
"RTN","IBCECSA6",7,0)
 Q
"RTN","IBCECSA6",8,0)
 ;
"RTN","IBCECSA6",9,0)
GETEOB(IBCNT,IBSRC,IBFULL,IBJTIBLN) ; Get EOB data in display format
"RTN","IBCECSA6",10,0)
 ; IBCNT = the ien of the entry in file 361.1
"RTN","IBCECSA6",11,0)
 ; IBSRC = 1 if called from AR, 0 if List Manager format needed
"RTN","IBCECSA6",12,0)
 ;       = 2 if called from AR and header data is desired
"RTN","IBCECSA6",13,0)
 ;   If IBSRC > 0  ^TMP("PRCA_EOB",$J,IBCNT,n)=line n's text is ret'd
"RTN","IBCECSA6",14,0)
 ; IBFULL = 1 if no check should be made to eliminate a fld whose value=0
"RTN","IBCECSA6",15,0)
 ; IBJTIBLN = line number to start VALMCNT with (optional)
"RTN","IBCECSA6",16,0)
 ;            used by IBJTBA1
"RTN","IBCECSA6",17,0)
 ;
"RTN","IBCECSA6",18,0)
 N IBREC,IBTYP,CNT,IBREM
"RTN","IBCECSA6",19,0)
 S IBFULL=$G(IBFULL),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",20,0)
 I IBSRC N VALMBG,VALMCNT
"RTN","IBCECSA6",21,0)
 S VALMCNT=0,VALMBG=1,CNT=0
"RTN","IBCECSA6",22,0)
 I $G(IBJTIBLN)>0 S VALMCNT=IBJTIBLN
"RTN","IBCECSA6",23,0)
 S IBREC=$G(^IBM(361.1,IBCNT,0)),IBTYP=$P(IBREC,U,4)
"RTN","IBCECSA6",24,0)
 I IBSRC K ^TMP("PRCA_EOB",$J,IBCNT)
"RTN","IBCECSA6",25,0)
 ; Once we're displaying a single EOB, remove the multiple EOB header of 
"RTN","IBCECSA6",26,0)
 ; the View EOB screen that was set in HDR^IBCEOB2 - VALMHDR(4).
"RTN","IBCECSA6",27,0)
 I 'IBSRC,$G(VALMHDR(4))'="" S VALMHDR(4)=""
"RTN","IBCECSA6",28,0)
 D GEN,PAY,ARCP^IBCECSA7,CLVL,CLVLA,MIN^IBCECSA5,MOUT,LLVLA^IBCECSA7,RDATA^IBCECSA7
"RTN","IBCECSA6",29,0)
 Q
"RTN","IBCECSA6",30,0)
 ;
"RTN","IBCECSA6",31,0)
SEL(IB,ONE) ;
"RTN","IBCECSA6",32,0)
 N IBDA
"RTN","IBCECSA6",33,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECSA6",34,0)
 S IBDA=0 S IBDA=$O(VALMY(IBDA)) Q:'IBDA  D
"RTN","IBCECSA6",35,0)
 . S IB=$P($G(^TMP("IBCECSD",$J,IBDA)),U,2)
"RTN","IBCECSA6",36,0)
 . S IBONE=1
"RTN","IBCECSA6",37,0)
 Q
"RTN","IBCECSA6",38,0)
 ;
"RTN","IBCECSA6",39,0)
ACT ; Reposition display using actions
"RTN","IBCECSA6",40,0)
 I '$G(IBONE) D SEL(.IBCNT,1) D BLD:$G(IBCNT)
"RTN","IBCECSA6",41,0)
 S VALMBG=$G(^TMP("IBCECSD",$J,"X",+$G(IBACT))) S:'VALMBG VALMBG=1
"RTN","IBCECSA6",42,0)
 S VALMBCK="R"
"RTN","IBCECSA6",43,0)
 Q
"RTN","IBCECSA6",44,0)
 ;
"RTN","IBCECSA6",45,0)
SET(IBSRC,X,CNT,IBCNT) ;set list manager arrays
"RTN","IBCECSA6",46,0)
 S VALMCNT=VALMCNT+1,IBSRC=$G(IBSRC)
"RTN","IBCECSA6",47,0)
 ;
"RTN","IBCECSA6",48,0)
 I IBSRC D  Q
"RTN","IBCECSA6",49,0)
 . S ^TMP("PRCA_EOB",$J,IBCNT,VALMCNT)=X
"RTN","IBCECSA6",50,0)
 ;
"RTN","IBCECSA6",51,0)
 S ^TMP("IBCECSD",$J,VALMCNT,0)=X
"RTN","IBCECSA6",52,0)
 S ^TMP("IBCECSD",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECSA6",53,0)
 S ^TMP("IBCECSD",$J,CNT)=VALMCNT_U_IBCNT
"RTN","IBCECSA6",54,0)
 Q
"RTN","IBCECSA6",55,0)
 ;
"RTN","IBCECSA6",56,0)
GEN ;
"RTN","IBCECSA6",57,0)
 S IBSRC=$G(IBSRC) Q:IBSRC=1
"RTN","IBCECSA6",58,0)
 N IBREC1,IBTMP,IBSPL
"RTN","IBCECSA6",59,0)
 S IBSPL=+$O(^IBM(361.1,IBCNT,8,0)),IBSPL=(+$O(^(IBSPL))'=IBSPL)
"RTN","IBCECSA6",60,0)
 S IB=$$SETSTR^VALM1("EOB GENERAL INFORMATION:","",1,50)
"RTN","IBCECSA6",61,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",62,0)
 I 'IBSRC D
"RTN","IBCECSA6",63,0)
 . D CNTRL^VALM10(VALMCNT,1,24,IORVON,IORVOFF)
"RTN","IBCECSA6",64,0)
 . S ^TMP("IBCECSD",$J,"X",1)=VALMCNT
"RTN","IBCECSA6",65,0)
 S IB=$$SETSTR^VALM1("Type        : "_$S(IBTYP:"MEDICARE MRA",1:"NORMAL EOB")_$S(IBSPL:" (SPLIT IN A/R)",1:""),"",2,39)
"RTN","IBCECSA6",66,0)
 S IB=$$SETSTR^VALM1("EOB Paid DT  : "_$$DAT1^IBOUTL($P(IBREC,U,6),1),IB,41,38)
"RTN","IBCECSA6",67,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",68,0)
 I IBSRC D
"RTN","IBCECSA6",69,0)
 . S IB=$$SETSTR^VALM1($S(IBSRC:"Entry Dt/Tm :"_$$DAT1^IBOUTL($P(IBREC,U,5),1),1:""),"",2,39)
"RTN","IBCECSA6",70,0)
 . S IBTMP=$P(IBREC,U,13)
"RTN","IBCECSA6",71,0)
 . S IB=$$SETSTR^VALM1("Claim Status : "_$$EXTERNAL^DILFD(361.1,.13,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",72,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",73,0)
 . S IBTMP=$P(IBREC,U,16)
"RTN","IBCECSA6",74,0)
 . S IB=$$SETSTR^VALM1("Review Status: "_$$EXTERNAL^DILFD(361.1,.16,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",75,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",76,0)
 . S IB=$$SETSTR^VALM1("Entered By  : "_$P($G(^VA(200,+$P(IBREC,U,18),0)),U),"",2,39)
"RTN","IBCECSA6",77,0)
 . S IBTMP=$P(IBREC,U,15)
"RTN","IBCECSA6",78,0)
 . S IB=$$SETSTR^VALM1("Insurance Seq: "_$$EXTERNAL^DILFD(361.1,.15,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",79,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",80,0)
 I 'IBSRC D
"RTN","IBCECSA6",81,0)
 . S IB=$$SETSTR^VALM1($S($P(IBREC,U,17):"Manual Entry: YES",1:""),"",2,39)
"RTN","IBCECSA6",82,0)
 . S IBTMP=$P(IBREC,U,13)
"RTN","IBCECSA6",83,0)
 . S IB=$$SETSTR^VALM1("Claim Status : "_$$EXTERNAL^DILFD(361.1,.13,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",84,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",85,0)
 . S IBTMP=$P(IBREC,U,15)
"RTN","IBCECSA6",86,0)
 . S IB=$$SETSTR^VALM1("Insurance Seq: "_$$EXTERNAL^DILFD(361.1,.15,"",IBTMP),"",41,38)
"RTN","IBCECSA6",87,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",88,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,100))
"RTN","IBCECSA6",89,0)
 I $S($G(IBFULL):1,1:$P(IBREC1,U,4)'=""!($P(IBREC1,U,3)'="")) D
"RTN","IBCECSA6",90,0)
 . S IB=$$SETSTR^VALM1("Last Edited : "_$$DAT1^IBOUTL($P(IBREC1,U,4),1),"",2,39)
"RTN","IBCECSA6",91,0)
 . S IB=$$SETSTR^VALM1("Last Edit By : "_$P($G(^VA(200,+$P(IBREC1,U,3),0)),U),IB,41,38)
"RTN","IBCECSA6",92,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",93,0)
 ;
"RTN","IBCECSA6",94,0)
 D INSINF^IBCECSA7(+IBREC,CNT,IBCNT)
"RTN","IBCECSA6",95,0)
 ;
"RTN","IBCECSA6",96,0)
 ;Additional fields for HIPAA 5010
"RTN","IBCECSA6",97,0)
 I IBSRC D
"RTN","IBCECSA6",98,0)
 .N IBOSN,IBOSN1,IBREC50,IBREC51
"RTN","IBCECSA6",99,0)
 .S IBREC50=$G(^IBM(361.1,IBCNT,50)),IBREC51=$G(^IBM(361.1,IBCNT,51))
"RTN","IBCECSA6",100,0)
 .S IB=$$SETSTR^VALM1("Claim Rec'd Date     : "_$$DAT1^IBOUTL($P(IBREC50,U),1),"",2,39)
"RTN","IBCECSA6",101,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",102,0)
 .S IBOSN=$E($P(IBREC51,U),1,56),IBOSN1=$E($P(IBREC51,U),57,112)
"RTN","IBCECSA6",103,0)
 .S IB=$$SETSTR^VALM1("Other Subscriber Name: "_IBOSN,"",2,79)
"RTN","IBCECSA6",104,0)
 .D SET(IBSRC,IB,CNT,IBCNT) Q:IBOSN1=""
"RTN","IBCECSA6",105,0)
 .S IB=$$SETSTR^VALM1("                       "_IBOSN1,"",2,79)
"RTN","IBCECSA6",106,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",107,0)
 ;
"RTN","IBCECSA6",108,0)
 I $S($G(IBFULL):1,1:$P($G(^IBM(361.1,IBCNT,6)),U)'=""!($P($G(^IBM(361.1,IBCNT,6)),U,2)'="")) D
"RTN","IBCECSA6",109,0)
 . S IB=$$SETSTR^VALM1("New Pat. Nm.: "_$P($G(^IBM(361.1,IBCNT,6)),U),"",2,39)
"RTN","IBCECSA6",110,0)
 . S IB=$$SETSTR^VALM1("New Pat. Id  : "_$P($G(^IBM(361.1,IBCNT,6)),U,2),IB,41,38)
"RTN","IBCECSA6",111,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",112,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",113,0)
 Q
"RTN","IBCECSA6",114,0)
 ;
"RTN","IBCECSA6",115,0)
PAY ;
"RTN","IBCECSA6",116,0)
 S IBSRC=$G(IBSRC) Q:IBSRC=1
"RTN","IBCECSA6",117,0)
 N IBREC1,IBTMP
"RTN","IBCECSA6",118,0)
 S IB=$$SETSTR^VALM1("PAYER INFORMATION:","",1,50)
"RTN","IBCECSA6",119,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",120,0)
 I 'IBSRC D
"RTN","IBCECSA6",121,0)
 . D CNTRL^VALM10(VALMCNT,1,18,IORVON,IORVOFF)
"RTN","IBCECSA6",122,0)
 . S ^TMP("IBCECSD",$J,"X",2)=VALMCNT
"RTN","IBCECSA6",123,0)
 ; KL - HIPAA 5010 - moved the write of the Payer ID on the next line down from the payer name to accommodate
"RTN","IBCECSA6",124,0)
 ; the increased length of the PAYER NAME from 35 to 60 characters.  modified length parameter to $$SETSTR function for
"RTN","IBCECSA6",125,0)
 ; Payer ID and ICN to accommodate increased length of additional 20 characters. 
"RTN","IBCECSA6",126,0)
 S IB=$$SETSTR^VALM1("Payer Name   : "_$P($G(^DIC(36,+$P(IBREC,U,2),0)),U),"",2,60)
"RTN","IBCECSA6",127,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",128,0)
 S IB=$$SETSTR^VALM1("Payer Id     : "_$P(IBREC,U,3),IB,2,38)
"RTN","IBCECSA6",129,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",130,0)
 S IB=$$SETSTR^VALM1("ICN          : "_$P(IBREC,U,14),"",2,60)
"RTN","IBCECSA6",131,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",132,0)
 ;Additional fields for HIPA 5010
"RTN","IBCECSA6",133,0)
 N I,IBREC25,IBCON,IBCONTXT,IBCTYP,IBPAYNAM,IBWEB3,IBWEB
"RTN","IBCECSA6",134,0)
 ; Display PAYER CONTACT NAME, file #361.1, or CONTACT NAME, file #344; .4, (whichever is available)
"RTN","IBCECSA6",135,0)
 S IBREC25=$G(^IBM(361.1,IBCNT,25))
"RTN","IBCECSA6",136,0)
 S IBPAYNAM=$P(IBREC25,U)
"RTN","IBCECSA6",137,0)
 I IBPAYNAM="",+$G(RCSCR)>0 S IBPAYNAM=$P($G(^RCY(344.4,RCSCR,3)),U)
"RTN","IBCECSA6",138,0)
 I IBPAYNAM'="" D
"RTN","IBCECSA6",139,0)
 .S IB=$$SETSTR^VALM1("Payer Contact: "_IBPAYNAM,IB,2,60)
"RTN","IBCECSA6",140,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",141,0)
 I $TR($P(IBREC25,U,2,7),U,"")'="" D
"RTN","IBCECSA6",142,0)
 .F I=2,4,6 D
"RTN","IBCECSA6",143,0)
 ..S IBCON=$P(IBREC25,U,I),IBCTYP=$P(IBREC25,U,I+1) Q:IBCON=""
"RTN","IBCECSA6",144,0)
 ..S IBCONTXT=$S(IBCTYP="TE":"Contact Phone  : ",IBCTYP="FX":"Contact Fax    : ",IBCTYP="EM":"Contact e-Mail : ",1:"Invalid type :")
"RTN","IBCECSA6",145,0)
 ..S IB=$$SETSTR^VALM1(IBCONTXT_IBCON,"",2,50)
"RTN","IBCECSA6",146,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",147,0)
 I $G(RCSCR)'="" D
"RTN","IBCECSA6",148,0)
 .S IBWEB=$P($G(^RCY(344.4,RCSCR,5)),U) Q:IBWEB=""
"RTN","IBCECSA6",149,0)
 .S IB=$$SETSTR^VALM1("Payer Web Site : "_$E(IBWEB,1,60),"",2,78)
"RTN","IBCECSA6",150,0)
 .D SET(IBSRC,IB,CNT,IBCNT) Q:$L(IBWEB)<61
"RTN","IBCECSA6",151,0)
 .S IB=$$SETSTR^VALM1($E(IBWEB,61,115),"",19,78)
"RTN","IBCECSA6",152,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",153,0)
 ;Payer Policy References
"RTN","IBCECSA6",154,0)
 D PPR
"RTN","IBCECSA6",155,0)
 N IBREC51
"RTN","IBCECSA6",156,0)
 S IBREC51=$G(^IBM(361.1,IBCNT,51))
"RTN","IBCECSA6",157,0)
 I $P(IBREC,U,9)'=""!($P(IBREC51,U,2)'="") D
"RTN","IBCECSA6",158,0)
 . S IB=$$SETSTR^VALM1("Cross Ovr ID : "_$P(IBREC,U,9),"",2,39)
"RTN","IBCECSA6",159,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",160,0)
 . S IB=$$SETSTR^VALM1("Cross Ovr Nm: "_$P(IBREC51,U,2),"",2,76)
"RTN","IBCECSA6",161,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",162,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",163,0)
 ;Audit Details
"RTN","IBCECSA6",164,0)
 D AUDIT
"RTN","IBCECSA6",165,0)
 Q
"RTN","IBCECSA6",166,0)
 ;
"RTN","IBCECSA6",167,0)
CLVL ;
"RTN","IBCECSA6",168,0)
 N IBREC1,IBTMP,IBRL
"RTN","IBCECSA6",169,0)
 S IB=$$SETSTR^VALM1("CLAIM LEVEL PAY STATUS:","",1,50),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",170,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",171,0)
 I 'IBSRC D
"RTN","IBCECSA6",172,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA6",173,0)
 . S ^TMP("IBCECSD",$J,"X",3)=VALMCNT
"RTN","IBCECSA6",174,0)
 I '$D(^IBM(361.1,IBCNT,2)),'$D(^IBM(361.1,IBCNT,1)) D SET(IBSRC," NONE",CNT,IBCNT) Q
"RTN","IBCECSA6",175,0)
 S IB=$$SETSTR^VALM1("Tot Submitted Chrg: "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,4)),"",2,39)
"RTN","IBCECSA6",176,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,1))
"RTN","IBCECSA6",177,0)
 S IB=$$SETSTR^VALM1("Covered Amt       : "_$$A10($P(IBREC1,U,3)),IB,41,38)
"RTN","IBCECSA6",178,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",179,0)
 S IB=$$SETSTR^VALM1("Payer Paid Amt    : "_$$A10($P(IBREC1,U)),"",2,39)
"RTN","IBCECSA6",180,0)
 S IB=$$SETSTR^VALM1("Patient Resp. Amt : "_$$A10($S($D(^IBM(361.1,IBCNT,"ERR")):0,IBSRC:$P(IBREC1,U,2),$$FT^IBCEF(+IBREC)=3:$$PTRESPI^IBCECOB1(IBCNT),1:$P($G(^IBM(361.1,IBCNT,1)),"^",2))),IB,41,38)
"RTN","IBCECSA6",181,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",182,0)
 S (IB,IBRL)=""
"RTN","IBCECSA6",183,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,4)) S IB=$$SETSTR^VALM1("Discount Amt      : "_$$A10($P(IBREC1,U,4)),"",2,39),IBRL=1
"RTN","IBCECSA6",184,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,5)) S IB=$$SETSTR^VALM1("Per Day Limit Amt : "_$$A10($P(IBREC1,U,5)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",185,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,8)) S IB=$$SETSTR^VALM1("Tax Amt           : "_$$A10($P(IBREC1,U,8)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",186,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,9)) S IB=$$SETSTR^VALM1("Tot Before Tax Amt: "_$$A10($P(IBREC1,U,9)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",187,0)
 I $S(IBFULL:1,1:$P($G(^IBM(361.1,IBCNT,2)),U,3)) S IB=$$SETSTR^VALM1("Total Allowed Amt : "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,3)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",188,0)
 I $S(IBFULL:1,1:$P($G(^IBM(361.1,IBCNT,2)),U,5)) S IB=$$SETSTR^VALM1("Negative Reimb Amt: "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,5)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",189,0)
 I $G(IBSRC) I $S(IBFULL:1,1:$P(IBREC,U,12)) S IB=$$SETSTR^VALM1("Discharge Fraction: "_$$A10($P(IBREC,U,12)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",190,0)
 I $S(IBFULL:1,1:$P(IBREC,U,10)) S IB=$$SETSTR^VALM1("DRG Code Used     :"_$$RJ^XLFSTR($P(IBREC,U,10),11," "),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",191,0)
 I $S(IBFULL:1,1:$P(IBREC,U,11)) S IB=$$SETSTR^VALM1("DRG Weight Used   :"_$$RJ^XLFSTR($P(IBREC,U,11),11," "),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",192,0)
 D:IBRL'="" SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",193,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",194,0)
 Q
"RTN","IBCECSA6",195,0)
 ;
"RTN","IBCECSA6",196,0)
MOUT ;
"RTN","IBCECSA6",197,0)
 N IBREC1,IBRL
"RTN","IBCECSA6",198,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,3)),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",199,0)
 I 'IBSRC,$$INPAT^IBCEF(+IBREC),$TR(IBREC1,"0^")="" Q
"RTN","IBCECSA6",200,0)
 I IBREC1="" D:'$D(^IBM(361.1,IBCNT,4)) SET(IBSRC," NONE",CNT,IBCNT) D:'IBSRC SET(IBSRC,"",CNT,IBCNT),REMARK^IBCECSA5 Q
"RTN","IBCECSA6",201,0)
 D SET(IBSRC," OUTPATIENT:",CNT,IBCNT)
"RTN","IBCECSA6",202,0)
 S IBRL=""
"RTN","IBCECSA6",203,0)
 I $S(IBFULL:1,1:$P(IBREC1,U)) S IB=$$SETSTR^VALM1("Reimburse Rate    : "_$$P10($P(IBREC1,U)),"",$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",204,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,2)) S IB=$$SETSTR^VALM1("HCPCS Pay Amt     : "_$$A10($P(IBREC1,U,2)),IB,$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",205,0)
 D:IBRL=0 SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",206,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,8)) S IB=$$SETSTR^VALM1("Esrd Paid Amt     : "_$$A10($P(IBREC1,U,8)),"",$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",207,0)
 D:IBRL=0 SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",208,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,9)) S IB=$$SETSTR^VALM1("Non-Pay Prof Comp : "_$$A10($P(IBREC1,U,9)),IB,$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",209,0)
 D:IBRL'="" SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",210,0)
 D REMARK^IBCECSA5
"RTN","IBCECSA6",211,0)
 D SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",212,0)
 Q
"RTN","IBCECSA6",213,0)
 ;
"RTN","IBCECSA6",214,0)
CLVLA ;
"RTN","IBCECSA6",215,0)
 N IBREC,IBFLG,GR,RSN,Z,I
"RTN","IBCECSA6",216,0)
 S IB=$$SETSTR^VALM1("CLAIM LEVEL ADJUSTMENTS:","",1,50),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",217,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",218,0)
 I 'IBSRC D
"RTN","IBCECSA6",219,0)
 . D CNTRL^VALM10(VALMCNT,1,24,IORVON,IORVOFF)
"RTN","IBCECSA6",220,0)
 . S ^TMP("IBCECSD",$J,"X",4)=VALMCNT
"RTN","IBCECSA6",221,0)
 S (Y,IBFLG)=0 F  S Y=$O(^IBM(361.1,IBCNT,10,Y)) Q:'Y  D
"RTN","IBCECSA6",222,0)
 . S IBREC=$G(^IBM(361.1,IBCNT,10,Y,0)),GR=$P(IBREC,U,1)
"RTN","IBCECSA6",223,0)
 . I GR="OA",$P($G(^IBM(361.1,IBCNT,10,Y,1,0)),U,4)=1,$D(^IBM(361.1,IBCNT,10,Y,1,"B","AB3")) Q   ; kludge
"RTN","IBCECSA6",224,0)
 . S IBREC=$$EXTERNAL^DILFD(361.11,.01,"",GR),IBFLG=1
"RTN","IBCECSA6",225,0)
 . D SET(IBSRC," GROUP CODE: "_IBREC,CNT,IBCNT)
"RTN","IBCECSA6",226,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,10,Y,1,Z)) Q:'Z  D
"RTN","IBCECSA6",227,0)
 .. S IBREC=$G(^IBM(361.1,IBCNT,10,Y,1,Z,0)),RSN=$P(IBREC,U,1)
"RTN","IBCECSA6",228,0)
 .. I GR="OA",RSN="AB3" Q   ; kludge
"RTN","IBCECSA6",229,0)
 .. S IB=$$SETSTR^VALM1("REASON CODE: "_RSN_"  "_$P(IBREC,U,4),"",3,77)
"RTN","IBCECSA6",230,0)
 .. D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",231,0)
 .. S IB=$$SETSTR^VALM1("Amount: "_$$A10($P(IBREC,U,2)),"",3,40)
"RTN","IBCECSA6",232,0)
 .. S IB=$$SETSTR^VALM1("Quantity: "_$P(IBREC,U,3),IB,41,38)
"RTN","IBCECSA6",233,0)
 .. D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",234,0)
 ;;;D:IBSRC SET(IBSRC,"",CNT,IBCNT)   ;IB*2.0*488 (vd) REMOVED EXTRA BLANK LINE.
"RTN","IBCECSA6",235,0)
 I 'IBFLG D SET(IBSRC," NONE",CNT,IBCNT)
"RTN","IBCECSA6",236,0)
 Q
"RTN","IBCECSA6",237,0)
 ;
"RTN","IBCECSA6",238,0)
A10(X) ; returns a dollar amount right justified to 10 characters
"RTN","IBCECSA6",239,0)
 Q $$RJ^XLFSTR($FN(X,"",2),10," ")
"RTN","IBCECSA6",240,0)
 ;
"RTN","IBCECSA6",241,0)
P10(X) ; returns a % right just 10
"RTN","IBCECSA6",242,0)
 ; X is a decimal between 0-1
"RTN","IBCECSA6",243,0)
 Q $$RJ^XLFSTR((X*100)_"%",10," ")
"RTN","IBCECSA6",244,0)
 ;
"RTN","IBCECSA6",245,0)
PPR ;Display Payer Policy References
"RTN","IBCECSA6",246,0)
 ;
"RTN","IBCECSA6",247,0)
 N I,IBARR,IBX,IBX2,IBX3,IBPY,IBPCNT,IBDISP,IBTXT
"RTN","IBCECSA6",248,0)
 S IBX=0
"RTN","IBCECSA6",249,0)
 ;Get next Adjustment
"RTN","IBCECSA6",250,0)
 F  S IBX=$O(^IBM(361.1,IBCNT,15,IBX)) Q:'IBX  D
"RTN","IBCECSA6",251,0)
 .;Get next Line Level
"RTN","IBCECSA6",252,0)
 .S IBX2=0
"RTN","IBCECSA6",253,0)
 .F  S IBX2=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2)) Q:'IBX2  D
"RTN","IBCECSA6",254,0)
 ..;Get Adjustment line references (up to 5)
"RTN","IBCECSA6",255,0)
 ..S IBX3=0
"RTN","IBCECSA6",256,0)
 ..F  S IBX3=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2,2,IBX3)) Q:'IBX3  D
"RTN","IBCECSA6",257,0)
 ...S IBPY=$P($G(^IBM(361.1,IBCNT,15,IBX,1,IBX2,2,IBX3,0)),U) Q:IBPY=""
"RTN","IBCECSA6",258,0)
 ...S IBARR(IBPY)=""
"RTN","IBCECSA6",259,0)
 ;Concatenate Adjustment references
"RTN","IBCECSA6",260,0)
 S IBPY="",IBPCNT=0
"RTN","IBCECSA6",261,0)
 F  S IBPY=$O(IBARR(IBPY)) Q:IBPY=""  D  Q:IBPCNT=5
"RTN","IBCECSA6",262,0)
 .S IBPCNT=IBPCNT+1,$P(IBDISP,";",IBPCNT)=IBPY
"RTN","IBCECSA6",263,0)
 ;Format display
"RTN","IBCECSA6",264,0)
 Q:'IBPCNT
"RTN","IBCECSA6",265,0)
 S IB=$$SETSTR^VALM1("Policy Reference: Check Payer policies referenced on Payer website","",2,78)
"RTN","IBCECSA6",266,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",267,0)
 S IB=$$SETSTR^VALM1("for the following: "_$E(IBDISP,1,50),"",2,78)
"RTN","IBCECSA6",268,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",269,0)
 F I=50:50:250 S IBTXT=$E(IBDISP,I+1,I+50) Q:IBTXT=""  D
"RTN","IBCECSA6",270,0)
 .S IB=$$SETSTR^VALM1($J("",19)_IBTXT,"",2,78)
"RTN","IBCECSA6",271,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",272,0)
 Q
"RTN","IBCECSA6",273,0)
 ;
"RTN","IBCECSA6",274,0)
AUDIT ;Display details of any EEOB MOVE/COPY
"RTN","IBCECSA6",275,0)
 ;
"RTN","IBCECSA6",276,0)
 N IEN101,FIRST101
"RTN","IBCECSA6",277,0)
 S IEN101=0,FIRST101=1
"RTN","IBCECSA6",278,0)
 F  S IEN101=$O(^IBM(361.1,IBCNT,101,IEN101)) Q:'IEN101  D
"RTN","IBCECSA6",279,0)
 .N IB101,IBDATE,IBUSER,IBJUST,IBJUST1,IBORIG,IBDIR
"RTN","IBCECSA6",280,0)
 .S IB101=$G(^IBM(361.1,IBCNT,101,IEN101,0)) Q:IB101=""
"RTN","IBCECSA6",281,0)
 .S IBDATE=$$EXTERNAL^DILFD(361.1101,.01,,$P(IB101,U,1))
"RTN","IBCECSA6",282,0)
 .S IBUSER=$$EXTERNAL^DILFD(361.1101,.02,,$P(IB101,U,2))
"RTN","IBCECSA6",283,0)
 .S IBJUST=$E($P(IB101,U,3),1,78),IBJUST1=$E($P(IB101,U,3),79,100)
"RTN","IBCECSA6",284,0)
 .S IBORIG=$$EXTERNAL^DILFD(361.1101,.04,,$P(IB101,U,4))
"RTN","IBCECSA6",285,0)
 .S IBDIR=$$EXTERNAL^DILFD(361.1101,.05,,$P(IB101,U,5)) ; kl - added MOVE/COPY field
"RTN","IBCECSA6",286,0)
 .S:IBDIR']"" IBDIR="Move"
"RTN","IBCECSA6",287,0)
 .I FIRST101 D
"RTN","IBCECSA6",288,0)
 ..S IB=$$SETSTR^VALM1("MOVE/COPY HISTORY","",1,78),FIRST101=0
"RTN","IBCECSA6",289,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",290,0)
 .D SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",291,0)
 .S IB=$$SETSTR^VALM1("Date/Time of EEOB "_IBDIR_": "_IBDATE,"",1,78)  ;kl  8/23/11
"RTN","IBCECSA6",292,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",293,0)
 .S IB=$$SETSTR^VALM1(IBDIR_" of EEOB performed by: "_IBUSER,"",1,78)  ;kl 8/23/11
"RTN","IBCECSA6",294,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",295,0)
 .S IB=$$SETSTR^VALM1(IBDIR_" Justification Comments: ","",1,78)
"RTN","IBCECSA6",296,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",297,0)
 .S IB=$$SETSTR^VALM1(IBJUST,"",1,78)
"RTN","IBCECSA6",298,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",299,0)
 .I IBJUST1]"" D
"RTN","IBCECSA6",300,0)
 ..S IB=$$SETSTR^VALM1(IBJUST1,"",1,78)
"RTN","IBCECSA6",301,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",302,0)
 .I IBORIG]"" D
"RTN","IBCECSA6",303,0)
 ..S IB=$$SETSTR^VALM1("Original Claim Number: "_IBORIG,"",1,78)
"RTN","IBCECSA6",304,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",305,0)
 .;Other claim numbers
"RTN","IBCECSA6",306,0)
 .N SUB,IBOTH,OTEXT
"RTN","IBCECSA6",307,0)
 .S SUB=0,OTEXT=""
"RTN","IBCECSA6",308,0)
 .F  S SUB=$O(^IBM(361.1,IBCNT,101,IEN101,1,SUB)) Q:'SUB  D
"RTN","IBCECSA6",309,0)
 ..S IBOTH=$P($G(^IBM(361.1,IBCNT,101,IEN101,1,SUB,0)),U) Q:'IBOTH
"RTN","IBCECSA6",310,0)
 ..S IBOTH=$$EXTERNAL^DILFD(361.11016,.01,,IBOTH) Q:IBOTH=""
"RTN","IBCECSA6",311,0)
 ..S OTEXT=OTEXT_","_IBOTH
"RTN","IBCECSA6",312,0)
 .S OTEXT=$P(OTEXT,",",2,99)
"RTN","IBCECSA6",313,0)
 .I OTEXT]"" D
"RTN","IBCECSA6",314,0)
 ..S IB=$$SETSTR^VALM1("Other Claims: "_OTEXT,"",1,78)
"RTN","IBCECSA6",315,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",316,0)
 .D SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",317,0)
 Q
"RTN","IBCEF2")
0^33^B64374819^B64226101
"RTN","IBCEF2",1,0)
IBCEF2 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;8/6/03 10:54am
"RTN","IBCEF2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,85,51,137,232,155,296,349,403,400,432,488**;21-MAR-94;Build 184
"RTN","IBCEF2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF2",4,0)
 ;
"RTN","IBCEF2",5,0)
HOS(IBIFN) ; Extract rev codes for inst. episode into IBXDATA
"RTN","IBCEF2",6,0)
 ; Moved for space
"RTN","IBCEF2",7,0)
 D HOS^IBCEF22(IBIFN)
"RTN","IBCEF2",8,0)
 Q
"RTN","IBCEF2",9,0)
 ;
"RTN","IBCEF2",10,0)
OTHINS(IBIFN) ;Determine 'other insurance' node (I1,I2)
"RTN","IBCEF2",11,0)
 ; If primary bill, other ins is secondary
"RTN","IBCEF2",12,0)
 ; If sec or tert bill, other ins is primary
"RTN","IBCEF2",13,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",14,0)
 N Z
"RTN","IBCEF2",15,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",16,0)
 Q "I"_$S(Z=1:2,1:1)
"RTN","IBCEF2",17,0)
 ;
"RTN","IBCEF2",18,0)
OTHINS1(IBIFN) ; Returns the COB #'s of all 'other insurance' as a string
"RTN","IBCEF2",19,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",20,0)
 N IBC,Z
"RTN","IBCEF2",21,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",22,0)
 I Z=1 S IBC=$S($D(^DGCR(399,IBIFN,"I2")):$S($D(^DGCR(399,IBIFN,"I3")):23,1:2),1:"") ;Primary=>2 or 23
"RTN","IBCEF2",23,0)
 I Z=2 S IBC="1"_$S($D(^DGCR(399,IBIFN,"I3")):3,1:"") ;Secondary=>1 or 13
"RTN","IBCEF2",24,0)
 I Z=3 S IBC="12" ;Tertiary =>12
"RTN","IBCEF2",25,0)
OTHQ Q IBC
"RTN","IBCEF2",26,0)
 ;
"RTN","IBCEF2",27,0)
RECVR(IBIFN) ; Returns the V.A. internal routing id of the current ins
"RTN","IBCEF2",28,0)
 ; co for 837
"RTN","IBCEF2",29,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",30,0)
 N MCR,NUM,IBPH
"RTN","IBCEF2",31,0)
 S IBPH=$P("P^H",U,$$FT^IBCEF(IBIFN)-1)
"RTN","IBCEF2",32,0)
 S NUM="ENVOY"_IBPH
"RTN","IBCEF2",33,0)
 ; If rate type is CHAMPVA, send 'CHAMVA'
"RTN","IBCEF2",34,0)
 I $P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U)="CHAMPVA" S NUM="CHAMV"_IBPH
"RTN","IBCEF2",35,0)
 I NUM["ENVOY",$$MCRWNR^IBEFUNC(+$$CURR(IBIFN)) D
"RTN","IBCEF2",36,0)
 . S MCR=$P("B^A",U,$$FT^IBCEF(IBIFN)-1)    ; PART A/B for MEDICARE
"RTN","IBCEF2",37,0)
 . S NUM="PART"_MCR
"RTN","IBCEF2",38,0)
 Q NUM
"RTN","IBCEF2",39,0)
 ;
"RTN","IBCEF2",40,0)
ALLPAYID(IBIFN,IBXDATA,SEQ) ; Returns clearinghouse id for all (SEQ="")
"RTN","IBCEF2",41,0)
 ;  or a specific (SEQ=1,2,3) ins co's for 837 in IBXDATA(n) for bill ien
"RTN","IBCEF2",42,0)
 ;  IBIFN
"RTN","IBCEF2",43,0)
 ; EJK *296* Add IBMRA - MRA Claim type. 
"RTN","IBCEF2",44,0)
 ; EJK *296* Add IBEBI - Electronic Billing ID
"RTN","IBCEF2",45,0)
 N Z,Z0,Z1,A,IBM,IBINST,IBMCR,IBX,IBMRA,IBEBI
"RTN","IBCEF2",46,0)
 S IBXDATA="",IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCEF2",47,0)
 F Z=1:1:3 I $S('$G(SEQ):1,1:Z=SEQ) S Z0=$P(IBM,U,Z) I Z0 D  S:A'="" IBXDATA(Z)=A
"RTN","IBCEF2",48,0)
 . S A=""
"RTN","IBCEF2",49,0)
 . S IBINST=($$FT^IBCEF(IBIFN)=3) ;Is bill UB-04?
"RTN","IBCEF2",50,0)
 . ; EJK *296* Get IBEBI based on Prof. or Inst. claim
"RTN","IBCEF2",51,0)
 . I IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,4)
"RTN","IBCEF2",52,0)
 . I 'IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,2)
"RTN","IBCEF2",53,0)
 . S IBEBI=$$UP^XLFSTR(IBEBI)
"RTN","IBCEF2",54,0)
 . ; EJK *296* If this is a Medicare claim, it may be printed or transmitted. 
"RTN","IBCEF2",55,0)
 . S IBMRA=$$MRASEC^IBCEF4(IBIFN)   ;Is claim 2ndary to an MRA? 
"RTN","IBCEF2",56,0)
 . S IBMCR=$$MCRONBIL^IBEFUNC(IBIFN),Z1=$G(^DGCR(399,IBIFN,"TX"))
"RTN","IBCEF2",57,0)
 . Q:$P(Z1,U,8)=1!$S('$P(Z1,U,9):0,1:$$MRASEC^IBCEF4(IBIFN))  ;Force local prnt
"RTN","IBCEF2",58,0)
 . S A=$S($P(Z1,U,8)'=2:$P($G(^DIC(36,Z0,3)),U,$S(IBINST:4,1:2)),1:"")
"RTN","IBCEF2",59,0)
 . S A=$$UP^XLFSTR(A)
"RTN","IBCEF2",60,0)
 . ;
"RTN","IBCEF2",61,0)
 . ; RPRNT = CMS-1500 Rx bills
"RTN","IBCEF2",62,0)
 . ; IPRNT = Inst MRA secondary claims
"RTN","IBCEF2",63,0)
 . ; PPRNT = Prof MRA secondary claims
"RTN","IBCEF2",64,0)
 . ; HPRNT = inst printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",65,0)
 . ; SPRNT = prof printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",66,0)
 . ;
"RTN","IBCEF2",67,0)
 . ; Default to appropriate 'xPRNT' if Rx bill or COB bill or forced to
"RTN","IBCEF2",68,0)
 . ;    print - claims must print at clearinghouse
"RTN","IBCEF2",69,0)
 . ;
"RTN","IBCEF2",70,0)
 . ; Rx bills on CMS-1500
"RTN","IBCEF2",71,0)
 . ;IB*2.0*432/TAZ Claims no longer print at clearinghouse
"RTN","IBCEF2",72,0)
 . ;I 'IBINST,$$ISRX^IBCEF1(IBIFN) S A="RPRNT" Q
"RTN","IBCEF2",73,0)
 . ;
"RTN","IBCEF2",74,0)
 . ; Claim forced to print at clearinghouse (Field #27)
"RTN","IBCEF2",75,0)
 . I $P(Z1,U,8)=2 S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",76,0)
 . ;
"RTN","IBCEF2",77,0)
 . ; EJK *296* Send IBEBI for MRA secondary claims if it exists
"RTN","IBCEF2",78,0)
 . I Z>1,IBMRA,IBEBI'="" S A=IBEBI Q
"RTN","IBCEF2",79,0)
 . ;
"RTN","IBCEF2",80,0)
 . ; MRA secondary claim
"RTN","IBCEF2",81,0)
 . I Z>1,IBMCR=1,$P(Z1,U,5)="C" S A=$S(IBINST:"I",1:"P")_"PRNT" Q
"RTN","IBCEF2",82,0)
 . ;
"RTN","IBCEF2",83,0)
 . ; Medicare is current payer (MRA request claim)
"RTN","IBCEF2",84,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,Z) S A=$S(IBINST:"12M61",1:"SMTX1") Q
"RTN","IBCEF2",85,0)
 . ;
"RTN","IBCEF2",86,0)
 . ; IB*296 - Do not modify the payer ID for CHAMPVA (HAC)
"RTN","IBCEF2",87,0)
 . I A=84146 Q
"RTN","IBCEF2",88,0)
 . I A=84147 Q
"RTN","IBCEF2",89,0)
 . ;
"RTN","IBCEF2",90,0)
 . ; If not a primary bill force to print
"RTN","IBCEF2",91,0)
 . ;IB*2.0*432/TAZ secondary bills will now be processed
"RTN","IBCEF2",92,0)
 . ;I Z>1,Z=$$COBN^IBCEF(IBIFN) S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",93,0)
 . Q
"RTN","IBCEF2",94,0)
 ;
"RTN","IBCEF2",95,0)
 Q
"RTN","IBCEF2",96,0)
 ;
"RTN","IBCEF2",97,0)
PAYERID(IBIFN) ; Returns clearinghouse id for current ins co
"RTN","IBCEF2",98,0)
 ; IBIFN = bill ien
"RTN","IBCEF2",99,0)
 N NUM,IBSEQ
"RTN","IBCEF2",100,0)
 ; Determine the current ins co's # to identify at WEBMD
"RTN","IBCEF2",101,0)
 ; Envoy changed to WEBMD in patch 232
"RTN","IBCEF2",102,0)
 S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",103,0)
 D ALLPAYID(IBIFN,.NUM,IBSEQ) S NUM=$G(NUM(IBSEQ))
"RTN","IBCEF2",104,0)
 Q $G(NUM)
"RTN","IBCEF2",105,0)
 ;
"RTN","IBCEF2",106,0)
CURR(IBIFN) ; Returns ien of the current insurance
"RTN","IBCEF2",107,0)
 ; company for bill ien IBIFN
"RTN","IBCEF2",108,0)
 Q $$FINDINS^IBCEF1(IBIFN)
"RTN","IBCEF2",109,0)
 ;
"RTN","IBCEF2",110,0)
ADMDT(IBIFN,NOOUTCK) ; Calculate admission/start of care date/time
"RTN","IBCEF2",111,0)
 D ADMDT^IBCEF21(IBIFN,$G(NOOUTCK))      ; Moved for space
"RTN","IBCEF2",112,0)
 Q
"RTN","IBCEF2",113,0)
 ;
"RTN","IBCEF2",114,0)
DISDT(IBIFN) ; Calculate discharge date
"RTN","IBCEF2",115,0)
 D DISDT^IBCEF21(IBIFN)                  ; Moved for space
"RTN","IBCEF2",116,0)
 Q
"RTN","IBCEF2",117,0)
 ;
"RTN","IBCEF2",118,0)
INDTS(IBIFN) ; Function returns the admit ^ discharge date/time of admission if patient is an inpatient on bill's event date
"RTN","IBCEF2",119,0)
 N Z,Z0,DFN,VAINDT,VAIN S Z0=""
"RTN","IBCEF2",120,0)
 S Z=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(Z,U,2),VAINDT=$P(Z,U,3)
"RTN","IBCEF2",121,0)
 I +DFN,+VAINDT D INP^VADPT I +VAIN(1) S Z0=+VAIN(7)_U_+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF2",122,0)
 Q Z0
"RTN","IBCEF2",123,0)
 ;
"RTN","IBCEF2",124,0)
TXMT(IBIFN) ; Function moved - use new call in IBCEF4
"RTN","IBCEF2",125,0)
 Q $$TXMT^IBCEF4(IBIFN)
"RTN","IBCEF2",126,0)
 ;
"RTN","IBCEF2",127,0)
 ;
"RTN","IBCEF2",128,0)
ID(LN,VAL) ; Set EXTRACT GLOBAL for multi-valued record
"RTN","IBCEF2",129,0)
 ; ids for Austin
"RTN","IBCEF2",130,0)
 ; LN = the line # being extracted
"RTN","IBCEF2",131,0)
 ; VAL = the value of the element being extracted
"RTN","IBCEF2",132,0)
 ;
"RTN","IBCEF2",133,0)
 ; Assumes IBXPG exists
"RTN","IBCEF2",134,0)
 ;
"RTN","IBCEF2",135,0)
 Q:LN<2
"RTN","IBCEF2",136,0)
 D SETGBL^IBCEFG(IBXPG,LN,1,VAL,.IBXSIZE)
"RTN","IBCEF2",137,0)
 Q
"RTN","IBCEF2",138,0)
 ;
"RTN","IBCEF2",139,0)
ID1(LN,DX,CT) ;Special entrypoint for diagnoses to 'save' the fact
"RTN","IBCEF2",140,0)
 ;   a dx code is an e-code.
"RTN","IBCEF2",141,0)
 ; LN is last entry # output, returned as the entry # (IBXLINE) to assign to this entry
"RTN","IBCEF2",142,0)
 ; DX = the actual Dx code array(RECORD ID). Pass by reference, DX returned null if
"RTN","IBCEF2",143,0)
 ;      dx was not output
"RTN","IBCEF2",144,0)
 ; CT = the ct on the 'DC' entry.  pass by reference, returned null if
"RTN","IBCEF2",145,0)
 ;      the end of the valid dx codes has been reached
"RTN","IBCEF2",146,0)
 N IBINS,VAL,CNT,DXIEN,DXQ,EDX,I,POA
"RTN","IBCEF2",147,0)
 S IBINS=($$FT^IBCEF(IBXIEN)=3)
"RTN","IBCEF2",148,0)
 S VAL="DC"_CT
"RTN","IBCEF2",149,0)
 S VAL=$E(VAL_" ",1,4)
"RTN","IBCEF2",150,0)
 S EDX=($E($G(DX))="E") ; TRUE if e-code DX
"RTN","IBCEF2",151,0)
 S I=$S(EDX:3,1:2)
"RTN","IBCEF2",152,0)
 S:'EDX DXQ=$S(+$G(^TMP("DCX",$J,2))>0:"BF",1:"BK") ; first non e-code DX is principal (qulifier "BK"), the rest have qualifier "BF"
"RTN","IBCEF2",153,0)
 I IBINS D
"RTN","IBCEF2",154,0)
 .I CT>28 S CT="" Q     ; Max of 28 codes for institutional/UB
"RTN","IBCEF2",155,0)
 .S DXIEN=$P(DX(CT),U,2) Q:DXIEN=""
"RTN","IBCEF2",156,0)
 .S POA=$P($G(^IBA(362.3,DXIEN,0)),U,4) I POA="",$$INPAT^IBCEF(IBXIEN) S POA=1 ; POA indicator defaults to "1", if not present on inpatient claim
"RTN","IBCEF2",157,0)
 .S:EDX DXQ="BN" ; e-code DX qualifier
"RTN","IBCEF2",158,0)
 .Q
"RTN","IBCEF2",159,0)
 I 'IBINS S:EDX DXQ="BF" S POA="" ; on CMS-1500 e-code DX qualifiers are "BF" and there's no POA
"RTN","IBCEF2",160,0)
 ;Changed 8 to 12 so we can transmit 12 codes. BAA *488*
"RTN","IBCEF2",161,0)
 I 'IBINS,CT>12 S ^TMP("IBXSAVE",$J,"DX",IBXIEN)=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN))+1,^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(+^TMP("IBXSAVE",$J,"DX",IBXIEN)),U,2))=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN)) S DX="" Q
"RTN","IBCEF2",162,0)
 I CT'="",DX'="" D
"RTN","IBCEF2",163,0)
 .; populate ^TMP("DCX") scratch global
"RTN","IBCEF2",164,0)
 .S ^TMP("DCX",$J,1)=CT,CNT=$G(^TMP("DCX",$J,I))+1,^TMP("DCX",$J,I)=CNT
"RTN","IBCEF2",165,0)
 .S (^TMP("DCX",$J,I,CNT),^TMP("DCX",$J,1,CT))=DX_U_DXQ_U_POA
"RTN","IBCEF2",166,0)
 .S LN=LN+1 D ID(LN,VAL) S ^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(LN),U,2))=LN,^TMP("IBXSAVE",$J,"DX",IBXIEN)=CT,CT=CT+1
"RTN","IBCEF2",167,0)
 .Q
"RTN","IBCEF2",168,0)
 Q
"RTN","IBCEF2",169,0)
 ;
"RTN","IBCEF2",170,0)
M(CT) ; Calculate multi-valued field for 837 extract
"RTN","IBCEF2",171,0)
 ; CT = passed by reference/the record ID counter
"RTN","IBCEF2",172,0)
 S CT=CT+1
"RTN","IBCEF2",173,0)
 Q $E(CT#12+$S(CT#12:0,1:12)_" ",1,2)
"RTN","IBCEF2",174,0)
 ;
"RTN","IBCEF2",175,0)
SVITM(IBA,LINE) ; Saves the linked items from the bill data extract into
"RTN","IBCEF2",176,0)
 ; an array the formatter will use to link Rxs and prosthetics
"RTN","IBCEF2",177,0)
 ; to an SV1 or SV2 line item, if possible.  Kills off IBA array entries
"RTN","IBCEF2",178,0)
 ; after they are 'moved'
"RTN","IBCEF2",179,0)
 ; IBA = array that contains the data to be saved
"RTN","IBCEF2",180,0)
 ;   subscripts are (line #,item type,item pointer)=ct
"RTN","IBCEF2",181,0)
 N Z0,Z1
"RTN","IBCEF2",182,0)
 S Z0="" F  S Z0=$O(IBA("OUTPT",LINE,Z0)) Q:Z0=""  I Z0?1N.N  S Z1="" F  S Z1=$O(IBA("OUTPT",LINE,Z0,Z1)) Q:Z1=""  S ^TMP($J,"IBITEM",Z0,Z1,LINE)=IBA("OUTPT",LINE,Z0,Z1) K IBA("OUTPT",LINE,Z0,Z1)
"RTN","IBCEF2",183,0)
 Q
"RTN","IBCEF2",184,0)
 ;
"RTN","IBCEF2",185,0)
LINK(IBTYP,IBDATA) ; Link the item with a service line, if possible
"RTN","IBCEF2",186,0)
 ; IBTYP = the code for the type of item
"RTN","IBCEF2",187,0)
 ;         returned incremented if no link is made
"RTN","IBCEF2",188,0)
 ; IBDATA = the extracted data string that identifies the item. 
"RTN","IBCEF2",189,0)
 ; Returns the line to link to or null if no link
"RTN","IBCEF2",190,0)
 N IBLN,IBKEY,Z
"RTN","IBCEF2",191,0)
 S IBLN=""
"RTN","IBCEF2",192,0)
 S IBKEY=$S(IBTYP=3:$P(IBDATA,U,9),IBTYP=5:$P(IBDATA,U,4),1:"") Q:IBKEY=""
"RTN","IBCEF2",193,0)
 I $D(^TMP($J,"IBITEM",IBTYP,IBKEY)) D  G:IBLN LINKQ
"RTN","IBCEF2",194,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",195,0)
 I $D(^TMP($J,"IBITEM",IBTYP,0)) S IBKEY=0 D
"RTN","IBCEF2",196,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",197,0)
LINKQ Q IBLN
"RTN","IBCEF2",198,0)
 ;
"RTN","IBCEF2",199,0)
COID(IBIFN) ; Claim office ID - moved for space
"RTN","IBCEF2",200,0)
 Q $$COID^IBCEF21(IBIFN)
"RTN","IBCEF2",201,0)
 ;
"RTN","IBCEF2",202,0)
PPOL(IBIFN,COB) ; return IFN of patient policy on a bill defined by COB (fields 399,112-114)
"RTN","IBCEF2",203,0)
 N X,Y,PPOL S PPOL=""
"RTN","IBCEF2",204,0)
 I +$G(IBIFN) S X=$G(^DGCR(399,+IBIFN,"M")) I +$G(COB),COB<4 S Y=COB+11,PPOL=$P(X,U,Y)
"RTN","IBCEF2",205,0)
 Q PPOL
"RTN","IBCEF2",206,0)
 ;
"RTN","IBCEF2",207,0)
LADJ(SUB,LINE,SEQ1,GRP,IBXSAVE,PIECE) ; Extract line level adjustments
"RTN","IBCEF2",208,0)
 ; SUB     = 1st subscript in IBXSAVE array to use
"RTN","IBCEF2",209,0)
 ; LINE    = 2nd subscript
"RTN","IBCEF2",210,0)
 ; SEQ1    = 4th subscript
"RTN","IBCEF2",211,0)
 ; GRP     = 5th subscript
"RTN","IBCEF2",212,0)
 ; IBXSAVE = array that has the data for COB line level adjustments
"RTN","IBCEF2",213,0)
 ; PIECE   = # of the piece on the 0-node of the line level
"RTN","IBCEF2",214,0)
 ;           adjustment reason to be extracted
"RTN","IBCEF2",215,0)
 ;
"RTN","IBCEF2",216,0)
 N A,B
"RTN","IBCEF2",217,0)
 S (A,B)=0
"RTN","IBCEF2",218,0)
 F  S A=$O(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A)) Q:'A  D
"RTN","IBCEF2",219,0)
 . S B=B+1,IBXDATA(B)=$P(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A),U,PIECE)
"RTN","IBCEF2",220,0)
 Q
"RTN","IBCEF2",221,0)
 ;
"RTN","IBCEF2",222,0)
ESGHPST(IBIFN,COB) ; return insureds employ status if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",223,0)
 Q $$ESGHPST^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",224,0)
 ;
"RTN","IBCEF2",225,0)
ESGHPNL(IBIFN,COB) ; return employer name and location if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",226,0)
 Q $$ESGHPNL^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",227,0)
 ;
"RTN","IBCEF2",228,0)
AMTOUT(A,B,C,IBXSAVE) ; format output amount
"RTN","IBCEF2",229,0)
 ;
"RTN","IBCEF2",230,0)
 N Z,K,IBZ,IBARR K IBXDATA S (IBZ,K)=0,IBARR="IBXSAVE("""_A_""")" F  S IBZ=$O(@IBARR@(IBZ)) Q:'IBZ  S K=K+1,Z=0 F  S Z=$O(@IBARR@(IBZ,Z)) Q:'Z  I $P($G(@IBARR@(IBZ,Z,B)),U,C) S IBXDATA(K)=$$DOLLAR^IBCEFG1($G(IBXDATA(K))+$P(@IBARR@(IBZ,Z,B),U,C))
"RTN","IBCEF2",231,0)
 Q
"RTN","IBCEF22")
0^41^B79219296^B61306963
"RTN","IBCEF22",1,0)
IBCEF22 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;06-FEB-96
"RTN","IBCEF22",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,135,155,309,349,389,432,488**;21-MAR-94;Build 184
"RTN","IBCEF22",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF22",4,0)
 ;
"RTN","IBCEF22",5,0)
 ;  OVERFLOW FROM ROUTINE IBCEF2
"RTN","IBCEF22",6,0)
HOS(IBIFN) ; Extract rev codes for episode billed on a UB-04 into IBXDATA
"RTN","IBCEF22",7,0)
 ; IBIFN = bill ien
"RTN","IBCEF22",8,0)
 ; Format: IBXDATA(n) =
"RTN","IBCEF22",9,0)
 ;  rev cd ptr ^ CPT CODE ptr ^ unit chg ^ units ^ tot charge
"RTN","IBCEF22",10,0)
 ;    ^ tot uncov^ FL49 value ^ ien of rev code multiple entry(s)
"RTN","IBCEF22",11,0)
 ;      (separated by ";")
"RTN","IBCEF22",12,0)
 ;    ^ modifiers specific to rev code/proc (separated by ",")
"RTN","IBCEF22",13,0)
 ;    ^ rev code date, if it can be determined by a corresponding proc
"RTN","IBCEF22",14,0)
 ;
"RTN","IBCEF22",15,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF22",16,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF22",17,0)
 ;      line in the first '^' piece followed by the '0' node of file
"RTN","IBCEF22",18,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF22",19,0)
 ;       COB = COB seq # of adjustment's ins co, m = seq #
"RTN","IBCEF22",20,0)
 ;         -- AND --
"RTN","IBCEF22",21,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF22",22,0)
 ;           the '0' node for each subordinate entry of file
"RTN","IBCEF22",23,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837)
"RTN","IBCEF22",24,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF22",25,0)
 ;
"RTN","IBCEF22",26,0)
 ;         -- AND --
"RTN","IBCEF22",27,0)
 ;    IBXDATA(n,"CPLNK") = soft link to corresponding entry in PROCEDURES multiple of file 399
"RTN","IBCEF22",28,0)
 ;
"RTN","IBCEF22",29,0)
 N IBDA,IBCOMB,IBINPAT,IBLN,IBX,IBY,IBZ,IBS,IBSS,IBXTRA,IBX1,IBXS,IBP,IBPO,IBP1,IBDEF,Z,Z0,Z1,ZX,QQ,IBMOD
"RTN","IBCEF22",30,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF22",31,0)
 I 'IBINPAT D F^IBCEF("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF22",32,0)
 S IBDEF=$G(IBZ)
"RTN","IBCEF22",33,0)
 ; loop through all proc codes - sort by procedure, modifiers and print order
"RTN","IBCEF22",34,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"CP",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ D
"RTN","IBCEF22",35,0)
 . S IBP(+$P(IBZ,U)_U_$$GETMOD^IBEFUNC(IBIFN,IBDA,1),$S($P(IBZ,U,4):$P(IBZ,U,4),1:999),IBDA)=$P(IBZ,U,2)
"RTN","IBCEF22",36,0)
 ; loop through all rev codes - sort by rev code
"RTN","IBCEF22",37,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ S IBMOD="" D
"RTN","IBCEF22",38,0)
 . S IBX=$G(^DGCR(399.2,+IBZ,0)),IBX1="",IBPO=0
"RTN","IBCEF22",39,0)
 . ; Auto-added procedure charge
"RTN","IBCEF22",40,0)
 . I $P(IBZ,U,10)=4,$P(IBZ,U,11) D  ; Soft link to proc
"RTN","IBCEF22",41,0)
 .. S Z=$G(^DGCR(399,IBIFN,"CP",$P(IBZ,U,11),0))
"RTN","IBCEF22",42,0)
 .. Q:Z=""
"RTN","IBCEF22",43,0)
 .. S ZX=+Z_U_$$GETMOD^IBEFUNC(IBIFN,$P(IBZ,U,11),1)
"RTN","IBCEF22",44,0)
 .. Q:'$O(IBP(ZX,0))&'$O(IBP1(ZX,0))
"RTN","IBCEF22",45,0)
 .. I $P(IBZ,U,6) Q:$S($P(Z,U)'["ICPT":1,1:+$P(Z,U)'=$P(IBZ,U,6))
"RTN","IBCEF22",46,0)
 .. S Z0=$S($D(IBP(ZX)):$O(IBP(ZX,0)),1:$O(IBP1(ZX,0)))
"RTN","IBCEF22",47,0)
 .. S:'Z0 Z0=999
"RTN","IBCEF22",48,0)
 .. Q:'$D(IBP(ZX,+Z0,$P(IBZ,U,11)))&'$D(IBP1(ZX,+Z0,$P(IBZ,U,11)))
"RTN","IBCEF22",49,0)
 .. I '$D(IBP1(ZX,+Z0,$P(IBZ,U,11))) S IBP1(ZX,+Z0,$P(IBZ,U,11))=IBP(ZX,+Z0,$P(IBZ,U,11)) K IBP(ZX,+Z0,$P(IBZ,U,11))
"RTN","IBCEF22",50,0)
 .. S IBX1=$P(Z,U,2),IBPO=+Z0,IBMOD=$P(ZX,U,2)
"RTN","IBCEF22",51,0)
 . ; Manually added charge with a procedure
"RTN","IBCEF22",52,0)
 . I $P(IBZ,U,6),$S($P(IBZ,U,10)=4:'$P(IBZ,U,11),1:1),+$O(IBP($P(IBZ,U,6)))=$P(IBZ,U,6) D
"RTN","IBCEF22",53,0)
 .. ; No direct link, but a proc exists on rev code and in procedure mult without and then with modifiers
"RTN","IBCEF22",54,0)
 .. S ZX=$O(IBP($P(IBZ,U,6)))
"RTN","IBCEF22",55,0)
 .. F QQ=1,2 Q:IBPO  S Z="" F  S Z=$O(IBP(ZX,Z),-1) Q:'Z!(IBPO)  S Z0=0 F  S Z0=$O(IBP(ZX,Z,Z0)) Q:'Z0  S Z1=$G(^DGCR(399,IBIFN,"CP",Z0,0)) D  Q:IBPO
"RTN","IBCEF22",56,0)
 ... ; Ignore if not a CPT or a modifier exists and this is first pass
"RTN","IBCEF22",57,0)
 ... S IBMOD=$$GETMOD^IBEFUNC(IBIFN,Z0,1)
"RTN","IBCEF22",58,0)
 ... Q:$S($P(Z1,U)'["ICPT":1,QQ=1:IBMOD'="",1:0)
"RTN","IBCEF22",59,0)
 ... S IBPO=+$P(Z1,U,4),IBX1=$P(Z1,U,2)
"RTN","IBCEF22",60,0)
 ... K IBP(+Z1_U_IBMOD,Z,Z0)
"RTN","IBCEF22",61,0)
 . ;
"RTN","IBCEF22",62,0)
 . I IBX'="" D  ; revenue code is valid
"RTN","IBCEF22",63,0)
 .. F Z=900:1 S Z0=$S(IBPO:IBPO,$D(IBX(" "_$P(IBX,U),Z)):0,1:Z) I Z0 S IBPO=Z0 Q
"RTN","IBCEF22",64,0)
 .. S IBX(" "_$P(IBX,U),IBPO,IBDA)=IBX,IBX(" "_$P(IBX,U),IBPO,IBDA,"DT")=$S(IBX1:IBX1,1:IBDEF),IBX(" "_$P(IBX,U),IBPO,IBDA,"MOD")=IBMOD
"RTN","IBCEF22",65,0)
 ;
"RTN","IBCEF22",66,0)
 S IBS="" F  S IBS=$O(IBX(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX(IBS,IBPO)) Q:'IBPO  D
"RTN","IBCEF22",67,0)
 . S IBDA=0 F  S IBDA=$O(IBX(IBS,IBPO,IBDA)) Q:'IBDA  S IBX=$G(IBX(IBS,IBPO,IBDA)),IBZ=$G(^DGCR(399,IBIFN,"RC",IBDA,0)) I IBX'="" D
"RTN","IBCEF22",68,0)
 .. ;S IBXS=$P(IBZ,U,2)_U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD"))
"RTN","IBCEF22",69,0)
 .. S IBXS=U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD")) ;combine same proc and modifiers regardless of rate
"RTN","IBCEF22",70,0)
 .. S:IBPO'<900&'$$ACCRV($P(IBS," ",2))&$S(IBINPAT:$P(IBZ,U,6),1:1) IBCOMB(IBS,IBXS,IBPO)=IBDA
"RTN","IBCEF22",71,0)
 .. S:'$D(IBX1(IBS,IBPO,IBXS,1)) IBX1(IBS,IBPO,IBXS,1)=IBX,IBX1(IBS,IBPO,IBXS,2)=IBZ
"RTN","IBCEF22",72,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U)=$P($G(IBX1(IBS,IBPO,IBXS)),U)+$P(IBZ,U,3)
"RTN","IBCEF22",73,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U,2)=$P($G(IBX1(IBS,IBPO,IBXS)),U,2)+$P(IBZ,U,4)
"RTN","IBCEF22",74,0)
 .. S IBX1(IBS,IBPO,IBXS,"DT")=$G(IBX(IBS,IBPO,IBDA,"DT")),IBX1(IBS,IBPO,IBXS,"IEN")=$G(IBX1(IBS,IBPO,IBXS,"IEN"))_$S($G(IBX1(IBS,IBPO,IBXS,"IEN")):";",1:"")_IBDA
"RTN","IBCEF22",75,0)
 ;
"RTN","IBCEF22",76,0)
 S IBS="" F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=899 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  D  ; Check to combine like rev codes without print order
"RTN","IBCEF22",77,0)
 . N Q,Q0,Q1,Z,Z0,Z1,Z2,IBZ1,IBZ2
"RTN","IBCEF22",78,0)
 . S Z=""
"RTN","IBCEF22",79,0)
 . N IBACC
"RTN","IBCEF22",80,0)
 . F  S Z=$O(IBX1(IBS,IBPO,Z)) Q:Z=""  S Q=IBPO F  S Q=$O(IBCOMB(IBS,Z,Q)) Q:'Q  I Q'=IBPO S IBZ1=$G(IBX1(IBS,IBPO,Z,1)),IBZ2=$G(IBX1(IBS,IBPO,Z,2)) D
"RTN","IBCEF22",81,0)
 .. Q:$G(IBX1(IBS,IBPO,Z,1))'=$G(IBX1(IBS,Q,Z,1))
"RTN","IBCEF22",82,0)
 .. S Q1=1,IBACC=$$ACCRV(+$P(IBS," ",2))
"RTN","IBCEF22",83,0)
 .. F Q0=1,5:1:7,10:1:13,15 D  Q:'Q1
"RTN","IBCEF22",84,0)
 ... I IBACC Q:Q0=5!(Q0>6)
"RTN","IBCEF22",85,0)
 ... I (Q0=11!(Q0=15))&($P($G(IBX1(IBS,Q,Z,2)),U,10)=3) Q
"RTN","IBCEF22",86,0)
 ... I Q0=5,'IBINPAT Q
"RTN","IBCEF22",87,0)
 ... I $P($G(IBX1(IBS,IBPO,Z,2)),U,Q0)'=$P($G(IBX1(IBS,Q,Z,2)),U,Q0) S Q1=0
"RTN","IBCEF22",88,0)
 .. Q:'Q1
"RTN","IBCEF22",89,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,3)=$P(IBX1(IBS,IBPO,Z,2),U,3)+$P(IBX1(IBS,Q,Z,2),U,3)
"RTN","IBCEF22",90,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,4)=$P(IBX1(IBS,IBPO,Z,2),U,4)+$P(IBX1(IBS,Q,Z,2),U,4)
"RTN","IBCEF22",91,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,9)=$P(IBX1(IBS,IBPO,Z,2),U,9)+$P(IBX1(IBS,Q,Z,2),U,9)
"RTN","IBCEF22",92,0)
 .. S IBX1(IBS,IBPO,Z)=$P(IBX1(IBS,IBPO,Z,2),U,3)_U_$P(IBX1(IBS,IBPO,Z,2),U,4)
"RTN","IBCEF22",93,0)
 .. S IBX1(IBS,IBPO,Z,"IEN")=IBX1(IBS,IBPO,Z,"IEN")_";"_IBX1(IBS,Q,Z,"IEN")
"RTN","IBCEF22",94,0)
 .. K IBX1(IBS,Q,Z)
"RTN","IBCEF22",95,0)
 ;
"RTN","IBCEF22",96,0)
 D SPLIT  ; 488 ; baa
"RTN","IBCEF22",97,0)
 ;
"RTN","IBCEF22",98,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",99,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  S IBSS="" F  S IBSS=$O(IBX1(IBS,IBPO,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",100,0)
 . S IBX=$G(IBX1(IBS,IBPO,IBSS,1)),IBZ=$G(IBX1(IBS,IBPO,IBSS,2))
"RTN","IBCEF22",101,0)
 . S IBLN=$G(IBLN)+1,IBXDATA(IBLN)=$P(IBX,U)_U_$P(IBZ,U,6)_U_$P(IBZ,U,2)_U_+IBX1(IBS,IBPO,IBSS)_U_+$P(IBX1(IBS,IBPO,IBSS),U,2),$P(IBXDATA(IBLN),U,10)=$G(IBX1(IBS,IBPO,IBSS,"DT"))
"RTN","IBCEF22",102,0)
 . S $P(IBXDATA(IBLN),U,6)=$P(IBZ,U,9),$P(IBXDATA(IBLN),U,7)=$P(IBZ,U,13),$P(IBXDATA(IBLN),U,8)=$G(IBX1(IBS,IBPO,IBSS,"IEN")),$P(IBXDATA(IBLN),U,9)=$P($P(IBSS,U,3),",",1,2)
"RTN","IBCEF22",103,0)
 . S IBXDATA(IBLN,"CPLNK")=$$RC2CP(IBIFN,$P($P(IBXDATA(IBLN),U,8),";"))
"RTN","IBCEF22",104,0)
 . ; Extract line lev COB data for sec or tert bill
"RTN","IBCEF22",105,0)
 . I $$COBN^IBCEF(IBIFN)>1 D COBLINE^IBCEU6(IBIFN,IBLN,.IBXDATA,,.IBXTRA) I $D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,1) ;Handle bundled/unbundled
"RTN","IBCEF22",106,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN))!$D(^IBA(362.5,"AIFN"_IBIFN)) D
"RTN","IBCEF22",107,0)
 . N IBARRAY,IBX,IBZ,IBRX,IBLCNT
"RTN","IBCEF22",108,0)
 . S IBLCNT=0
"RTN","IBCEF22",109,0)
 . ; Print prescriptions, prosthetics on front of UB-04
"RTN","IBCEF22",110,0)
 . D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBCEF22",111,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",112,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",113,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=""
"RTN","IBCEF22",114,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)="PRESCRIPTION REFILLS:",IBLCNT=2
"RTN","IBCEF22",115,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBRX=IBARRAY(IBX,IBY) D
"RTN","IBCEF22",116,0)
 ... D ZERO^IBRXUTL(+$P(IBRX,U,2))
"RTN","IBCEF22",117,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBRX,U,6):"$"_$FN($P(IBRX,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$G(^TMP($J,"IBDRUG",+$P(IBRX,U,2),.01))
"RTN","IBCEF22",118,0)
 ... S IBZ=$S(+$P(IBRX,U,4):"QTY: "_$P(IBRX,U,4)_" ",1:"")_$S(+$P(IBRX,U,3):"for "_$P(IBRX,U,3)_" days supply ",1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",119,0)
 ... S IBZ=$S($P(IBRX,U,5)'="":"NDC #: "_$P(IBRX,U,5),1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",120,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCEF22",121,0)
 ... Q
"RTN","IBCEF22",122,0)
 . ;
"RTN","IBCEF22",123,0)
 . D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF22",124,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",125,0)
 .. S IBLCNT=0
"RTN","IBCEF22",126,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",127,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=""
"RTN","IBCEF22",128,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)="PROSTHETIC REFILLS:",IBLCNT=2
"RTN","IBCEF22",129,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCEF22",130,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($$PINB^IBCSC5B(+IBARRAY(IBX,IBY)),1,54)
"RTN","IBCEF22",131,0)
 Q
"RTN","IBCEF22",132,0)
 ;
"RTN","IBCEF22",133,0)
ACCRV(X) ; Returns 1 if X is an accomodation RC, 0 if not
"RTN","IBCEF22",134,0)
 Q ((X'<100&(X'>219))!(X=224))
"RTN","IBCEF22",135,0)
 ;
"RTN","IBCEF22",136,0)
RC2CP(IBIFN,IBRCIEN) ; returns "CP" multiple pointer that corresponds to a given "RC" multiple pointer in file 399
"RTN","IBCEF22",137,0)
 ; IBIFN - ien in file 399, top level
"RTN","IBCEF22",138,0)
 ; IBRCIEN, ien in sub-file 399.042 (REVENUE CODE)
"RTN","IBCEF22",139,0)
 ;
"RTN","IBCEF22",140,0)
 ; returns pointer to sub-file 399.0304 (PROCEDURES) or 0 if no valid pointer can be found.
"RTN","IBCEF22",141,0)
 ;
"RTN","IBCEF22",142,0)
 N IBRC0,IBCPIEN
"RTN","IBCEF22",143,0)
 I +IBIFN'>0 Q 0
"RTN","IBCEF22",144,0)
 I +IBRCIEN'>0 Q 0
"RTN","IBCEF22",145,0)
 S IBRC0=$G(^DGCR(399,IBIFN,"RC",IBRCIEN,0)),IBCPIEN=0
"RTN","IBCEF22",146,0)
 I $P(IBRC0,U,10)=4 S IBCPIEN=+$P(IBRC0,U,11) ; type = CPT
"RTN","IBCEF22",147,0)
 I $P(IBRC0,U,10)=3 S IBCPIEN=+$P(IBRC0,U,15) ; type = RX
"RTN","IBCEF22",148,0)
 I 'IBCPIEN D
"RTN","IBCEF22",149,0)
 . S IBRC=$P(IBRC0,U,6)
"RTN","IBCEF22",150,0)
 . N IBCPTIEN S IBCPTIEN=IBRC
"RTN","IBCEF22",151,0)
 . F  S IBCPTIEN=$O(^DGCR(399,IBIFN,"CP","B",IBCPTIEN)) Q:(+IBCPTIEN'=IBRC)!IBCPIEN  D
"RTN","IBCEF22",152,0)
 .. N OK,Z S OK="",Z=""
"RTN","IBCEF22",153,0)
 .. S Z=$O(^DGCR(399,IBIFN,"CP","B",IBCPTIEN,Z)) Q:'Z!OK  D
"RTN","IBCEF22",154,0)
 ... N CNTR S CNTR=0
"RTN","IBCEF22",155,0)
 ... F  S CNTR=$O(IBXDATA(CNTR)) Q:'CNTR!'OK  D
"RTN","IBCEF22",156,0)
 .... I $G(IBXDATA(CNTR,"CPLNK"))=Z S OK=0 Q
"RTN","IBCEF22",157,0)
 ... I OK="" S OK=1,IBCPIEN=Z
"RTN","IBCEF22",158,0)
 I IBCPIEN,'$D(^DGCR(399,IBIFN,"CP",IBCPIEN)) S IBCPIEN=0
"RTN","IBCEF22",159,0)
 Q IBCPIEN
"RTN","IBCEF22",160,0)
 ;
"RTN","IBCEF22",161,0)
SPLIT    ; Split codes into multiple lines as needed => baa ; 488
"RTN","IBCEF22",162,0)
 ; The max line $ amount for a printed claim is less than the max line $ amount for an electronically transmitted claim.
"RTN","IBCEF22",163,0)
 ; However, since the clearinghouse can drop to print for a myriad of reasons at any time, the lines may need to be split
"RTN","IBCEF22",164,0)
 ; so they can all fit on a printed claim line just in case. In addition, since some claims are sent to primary payers as 
"RTN","IBCEF22",165,0)
 ; electronic claims but printed for secondary claims, the lines numbers need to be the same going out to ensure the 
"RTN","IBCEF22",166,0)
 ; COB data is correct applied (previous payments adj, etc are applied to the correct line.)
"RTN","IBCEF22",167,0)
 N IBS,IBSS,DATA,CHRG,UNTS,TOT,LNS,MOD,CPT,LNK,RLNK,IBSS1,LTOT,LUNT,REC,LST,FST
"RTN","IBCEF22",168,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",169,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  D
"RTN","IBCEF22",170,0)
 . S LST=$O(IBX1(IBS,""),-1)  ;we have to go through each level so must reset for each
"RTN","IBCEF22",171,0)
 . S LNK=0
"RTN","IBCEF22",172,0)
 . F  S LNK=$O(IBX1(IBS,LNK)) Q:('LNK!(LNK>LST))  S IBSS="" F  S IBSS=$O(IBX1(IBS,LNK,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",173,0)
 .. S DATA=IBX1(IBS,LNK,IBSS,2)
"RTN","IBCEF22",174,0)
 .. S CHRG=$P(DATA,U,2)
"RTN","IBCEF22",175,0)
 .. S UNTS=$P(DATA,U,3)
"RTN","IBCEF22",176,0)
 .. I UNTS=1 Q  ; if only one unit can't split
"RTN","IBCEF22",177,0)
 .. S TOT=UNTS*CHRG
"RTN","IBCEF22",178,0)
 .. I TOT<=9999999.99 Q  ; if the total is less tham max we don't need to split
"RTN","IBCEF22",179,0)
 .. S LNS=TOT\9999999.99
"RTN","IBCEF22",180,0)
 .. S MOD=TOT#9999999.99
"RTN","IBCEF22",181,0)
 .. I MOD S LNS=LNS+1
"RTN","IBCEF22",182,0)
 .. I CHRG>4999999.995 S LNS=UNTS  ; if the charge is greater than half the mas can't put more than one on a line.
"RTN","IBCEF22",183,0)
 .. S LUNT=UNTS\LNS
"RTN","IBCEF22",184,0)
 .. S MOD=UNTS#LNS
"RTN","IBCEF22",185,0)
 .. I MOD S LUNT=LUNT+1
"RTN","IBCEF22",186,0)
 .. F L=1:1:LNS D
"RTN","IBCEF22",187,0)
 ... N Q
"RTN","IBCEF22",188,0)
 ... S Q=$O(IBX1(IBS,""),-1)+1
"RTN","IBCEF22",189,0)
 ... I L=1 S Q=LNK
"RTN","IBCEF22",190,0)
 ... M IBX1(IBS,Q,IBSS)=IBX1(IBS,LNK,IBSS)
"RTN","IBCEF22",191,0)
 ... S $P(IBX1(IBS,Q,IBSS,2),U,3)=LUNT,$P(IBX1(IBS,Q,IBSS,2),U,4)=LUNT*CHRG
"RTN","IBCEF22",192,0)
 ... S $P(IBX1(IBS,Q,IBSS),U,1)=LUNT,$P(IBX1(IBS,Q,IBSS),U,2)=LUNT*CHRG
"RTN","IBCEF22",193,0)
 ... I L>1 S $P(IBX1(IBS,Q,IBSS,2),U,9)=""
"RTN","IBCEF22",194,0)
 ... S UNTS=UNTS-LUNT,LUNT=$S(UNTS>LUNT:LUNT,1:UNTS)
"RTN","IBCEF22",195,0)
 Q
"RTN","IBCEF3")
0^43^B47162871^B45972715
"RTN","IBCEF3",1,0)
IBCEF3 ;ALB/TMP - FORMATTER SPECIFIC BILL FLD FUNCTIONS ;17-JUNE-96
"RTN","IBCEF3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,84,121,51,152,210,155,348,349,389,488**;21-MAR-94;Build 184
"RTN","IBCEF3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF3",4,0)
 ;
"RTN","IBCEF3",5,0)
MPG(PG,FLDS,FORM) ; Set static flds on pages after page 1
"RTN","IBCEF3",6,0)
 ;        for either 1500 or UB
"RTN","IBCEF3",7,0)
 ;  PG = page #
"RTN","IBCEF3",8,0)
 ; FORM= 1 for UB, otherwise for 1500
"RTN","IBCEF3",9,0)
 ;  FLDS: array passed by reference and containing lines OR
"RTN","IBCEF3",10,0)
 ;        line/column from pg 1 to repeat on subsequent pages
"RTN","IBCEF3",11,0)
 ;        Format: FLDS(LINE,COL)  or  FLDS(LINE) for whole line
"RTN","IBCEF3",12,0)
 ;   CMS-1500:        LINES 1-5,7-43,57 from col 1 to 50, 58-63
"RTN","IBCEF3",13,0)
 ;         UB:        see CKPGUB for lines and columns
"RTN","IBCEF3",14,0)
 ;
"RTN","IBCEF3",15,0)
 N Z,Z0,Z1,LPG
"RTN","IBCEF3",16,0)
 S FORM=$S($G(FORM)=1:3,1:2)
"RTN","IBCEF3",17,0)
 I FORM=2 D  ; print page # on each pg, totals on last page of 1500
"RTN","IBCEF3",18,0)
 . S LPG=+$O(^TMP("IBXDATA",$J,IBXREC,""),-1)
"RTN","IBCEF3",19,0)
 . S Z="[Page "_PG_" of "_LPG_"]"
"RTN","IBCEF3",20,0)
 . S Z=$$FO^IBCNEUT1(Z,17,"R")
"RTN","IBCEF3",21,0)
 . D SETGBL^IBCEFG(PG,6,61,Z,.IBXSIZE)
"RTN","IBCEF3",22,0)
 . I PG=2 S Z=$P(Z,"[",1)_"[Page 1 of "_LPG_"]" D SETGBL^IBCEFG(1,6,61,Z,.IBXSIZE)
"RTN","IBCEF3",23,0)
 . I LPG=PG D
"RTN","IBCEF3",24,0)
 .. ;
"RTN","IBCEF3",25,0)
 .. ; esg - IB*2*348 - update dollar format for last page of 1500
"RTN","IBCEF3",26,0)
 .. ;
"RTN","IBCEF3",27,0)
 .. D SETGBL^IBCEFG(PG,57,51,$$DOL^IBCEF77($G(IBXSAVE("TOT")),9),.IBXSIZE)
"RTN","IBCEF3",28,0)
 .. D SETGBL^IBCEFG(PG,57,62,$$DOL^IBCEF77($G(IBXSAVE("PAID")),8),.IBXSIZE)
"RTN","IBCEF3",29,0)
 .. D SETGBL^IBCEFG(PG,57,71,$$DOL^IBCEF77($G(IBXSAVE("BDUE")),8),.IBXSIZE)
"RTN","IBCEF3",30,0)
 .. K IBXSAVE("PTOT"),IBXSAVE("TOT"),IBXSAVE("BDUE"),IBXSAVE("PAID")
"RTN","IBCEF3",31,0)
 ;
"RTN","IBCEF3",32,0)
 S Z=0 F  S Z=$O(FLDS(Z)) Q:'Z  D
"RTN","IBCEF3",33,0)
 . I $O(FLDS(Z,""))="" D  Q  ;repeats line
"RTN","IBCEF3",34,0)
 .. S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) Q:'Z0  S Z1=$G(^(Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",35,0)
 . S Z0=0 F  S Z0=$O(FLDS(Z,Z0)) Q:'Z0  S Z1=$G(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",36,0)
 . I FORM=2,LPG'=PG D
"RTN","IBCEF3",37,0)
 .. D SETGBL^IBCEFG(PG,57,51,"",.IBXSIZE)
"RTN","IBCEF3",38,0)
 .. D SETGBL^IBCEFG(PG,57,71,"",.IBXSIZE)
"RTN","IBCEF3",39,0)
 Q
"RTN","IBCEF3",40,0)
 ;
"RTN","IBCEF3",41,0)
NONSERV(Z,Z0) ; Set variable if non-service/non-text data is present for box
"RTN","IBCEF3",42,0)
 ;  24 of CMS-1500
"RTN","IBCEF3",43,0)
 ; Z = sequence of IBXSAVE being processed
"RTN","IBCEF3",44,0)
 ; Z0 = sequnce within IBXDATA to indicate actual line #
"RTN","IBCEF3",45,0)
 I $P(IBXSAVE("BOX24",Z),U)="" S IBXSAVE("NON-SERV",Z0)=""
"RTN","IBCEF3",46,0)
 Q
"RTN","IBCEF3",47,0)
 ;
"RTN","IBCEF3",48,0)
PG(VAL,LNCT) ;Set next pg for CMS-1500 lines
"RTN","IBCEF3",49,0)
 ;VAL = value of fld
"RTN","IBCEF3",50,0)
 ;LNCT = line # from IBXSAVE("BOX24") array
"RTN","IBCEF3",51,0)
 N IBP,IBL
"RTN","IBCEF3",52,0)
 S IBP=LNCT\12+(LNCT#12>0),IBL=LNCT-(12*(IBP-1))-1
"RTN","IBCEF3",53,0)
 I IBL'<0 S VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA)) D SETGBL^IBCEFG(IBP,IBXLN+IBL,IBXCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",54,0)
 K IBXDATA(LNCT)
"RTN","IBCEF3",55,0)
 Q
"RTN","IBCEF3",56,0)
 ;
"RTN","IBCEF3",57,0)
MPGUB(PG,OFFSET,VAL,IBLN,IBCOL,NOFORM) ; Set up pages > 1 for UB overflows
"RTN","IBCEF3",58,0)
 ; PG = Page # to set (REQUIRED)
"RTN","IBCEF3",59,0)
 ; OFFSET = offset from first line this should be extracted into
"RTN","IBCEF3",60,0)
 ;          0 = first line (REQUIRED)
"RTN","IBCEF3",61,0)
 ; VAL = value to set (REQUIRED)
"RTN","IBCEF3",62,0)
 ; IBLN = line to set data at (if null, uses IBXLN)
"RTN","IBCEF3",63,0)
 ; IBCOL = column to set data at (if null, uses IBXCOL)
"RTN","IBCEF3",64,0)
 ; NOFORM = don't format, just output data as passed
"RTN","IBCEF3",65,0)
 ; Assumes formatter IBXLN,IBXCOL variables exist
"RTN","IBCEF3",66,0)
 ;
"RTN","IBCEF3",67,0)
 I $G(IBLN)="" S IBLN=IBXLN
"RTN","IBCEF3",68,0)
 I $G(IBCOL)="" S IBCOL=IBXCOL
"RTN","IBCEF3",69,0)
 S:'$G(NOFORM) VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA))
"RTN","IBCEF3",70,0)
 D SETGBL^IBCEFG(PG,IBLN+OFFSET,IBCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",71,0)
 Q
"RTN","IBCEF3",72,0)
 ;
"RTN","IBCEF3",73,0)
CKREV(CT,VAL) ; Check too many rev code lines to fit on page
"RTN","IBCEF3",74,0)
 ; This procedure is only called when CT>22 (i.e. 23 or more)
"RTN","IBCEF3",75,0)
 ;
"RTN","IBCEF3",76,0)
 D MPGUB((CT-1)\22+1,CT-1#22,VAL) ; 22 codes on a single page
"RTN","IBCEF3",77,0)
 Q
"RTN","IBCEF3",78,0)
 ;
"RTN","IBCEF3",79,0)
CKPGUB ; Check to see if multiple UB pages are needed then populate
"RTN","IBCEF3",80,0)
 ; static flds from page 1, add page numbers
"RTN","IBCEF3",81,0)
 ;
"RTN","IBCEF3",82,0)
 N FLDS,LPG,IBPG,IBP,Z,Z0,TOT1,TOT2
"RTN","IBCEF3",83,0)
 ;
"RTN","IBCEF3",84,0)
 S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1),IBP=0
"RTN","IBCEF3",85,0)
 S Z="" F  S Z=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z,Z0)) Q:'Z0  I $G(^(Z0))'="" S IBP=1 Q
"RTN","IBCEF3",86,0)
 I 'IBP K ^TMP("IBXDATA",$J,IBXREC,LPG) S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1) Q:LPG=1
"RTN","IBCEF3",87,0)
 ;
"RTN","IBCEF3",88,0)
 ; Static flds
"RTN","IBCEF3",89,0)
 F Z=2:1:7 S FLDS(Z)=""    ; FL-1 thru FL-9
"RTN","IBCEF3",90,0)
 F Z=1,10,13,19,22,25,28,31 S FLDS(9,Z)=""    ; FL-10 thru FL-17
"RTN","IBCEF3",91,0)
 F Z=13:1:17 S FLDS(Z,1)=""   ; payer address in FL-38
"RTN","IBCEF3",92,0)
 S FLDS(41,46)=""     ; creation date
"RTN","IBCEF3",93,0)
 F Z=42,43,44,45,47,48,49,51,52,53 S FLDS(Z)=""   ; FL-50 thru FL-65
"RTN","IBCEF3",94,0)
 F Z=57,59,61,63 S (FLDS(Z,59),FLDS(Z,72),FLDS(Z,74))=""   ; FL-76-79 ID's
"RTN","IBCEF3",95,0)
 F Z=58,60,62,64 S (FLDS(Z,53),FLDS(Z,71))=""    ; FL-76-79 Names
"RTN","IBCEF3",96,0)
 ;
"RTN","IBCEF3",97,0)
 F IBPG=1:1:LPG D
"RTN","IBCEF3",98,0)
 . ; Add pg # to last line of rev codes if multiple pages
"RTN","IBCEF3",99,0)
 . N IB,IBP
"RTN","IBCEF3",100,0)
 . S IB=$G(^TMP("IBXDATA",$J,IBXREC,IBPG,41,6))
"RTN","IBCEF3",101,0)
 . D MPGUB(IBPG,0,IBPG,41,10,1)
"RTN","IBCEF3",102,0)
 . D MPGUB(IBPG,0,LPG,41,16,1)
"RTN","IBCEF3",103,0)
 . D:IBPG>1 MPG(IBPG,.FLDS,1)
"RTN","IBCEF3",104,0)
 . Q
"RTN","IBCEF3",105,0)
 ; print totals on line 41 of the last page
"RTN","IBCEF3",106,0)
 S (TOT1,TOT2)=0
"RTN","IBCEF3",107,0)
 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z0=^(Z) I +Z0=1 S TOT1=TOT1+$P(Z0,U,7),TOT2=TOT2+$P(Z0,U,8)
"RTN","IBCEF3",108,0)
 ; Make sure totals are only 9 digits => baa IB*2.0*488
"RTN","IBCEF3",109,0)
 S TOT1=$$DOL^IBCEF77(TOT1,9)
"RTN","IBCEF3",110,0)
 S TOT1=$E(TOT1,1,9)
"RTN","IBCEF3",111,0)
 S TOT2=$$DOL^IBCEF77(TOT2,9)
"RTN","IBCEF3",112,0)
 S TOT2=$E(TOT2,1,9)
"RTN","IBCEF3",113,0)
 D MPGUB(IBPG,0,"0001",41,1,1)
"RTN","IBCEF3",114,0)
 D MPGUB(IBPG,0,TOT1,41,61,1)
"RTN","IBCEF3",115,0)
 D MPGUB(IBPG,0,TOT2,41,71,1)
"RTN","IBCEF3",116,0)
 ;End changes => baa IB*2.0*488
"RTN","IBCEF3",117,0)
 Q
"RTN","IBCEF3",118,0)
 ;
"RTN","IBCEF3",119,0)
HCPC(R) ;FORMAT HCPC fld FOR UB (returns formatted value)
"RTN","IBCEF3",120,0)
 ; R = flag for type of fld (1/2/3) being printed in rev code block
"RTN","IBCEF3",121,0)
 Q R  ;No longer used as of patch IB*2.0*51
"RTN","IBCEF3",122,0)
 ;
"RTN","IBCEF3",123,0)
PROS(IBIFN) ; Extract billable prosthetics for 837
"RTN","IBCEF3",124,0)
 N IBARRAY,Z,Z0,CT,PROS
"RTN","IBCEF3",125,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF3",126,0)
 I '$P(IBARRAY,U,2) S CT="" G PROSQ
"RTN","IBCEF3",127,0)
 S Z="",CT=0
"RTN","IBCEF3",128,0)
 F  S Z=$O(IBARRAY(Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBARRAY(Z,Z0)) Q:Z0=""  S CT=CT+1 D
"RTN","IBCEF3",129,0)
 .S PROS=$$PINB^IBCSC5B(+IBARRAY(Z,Z0)) ; P389 removed p2 - item ptr file 661
"RTN","IBCEF3",130,0)
 .;date^^short descr^entry # in file 362.5
"RTN","IBCEF3",131,0)
 .S IBXDATA(CT)=Z_U_U_PROS_U_+IBARRAY(Z,Z0)
"RTN","IBCEF3",132,0)
PROSQ Q CT
"RTN","IBCEF3",133,0)
 ;
"RTN","IBCEF3",134,0)
B24(IBXSV,IBIFN,IBNOSHOW) ; Code to execute to set up IBXSV("BOX24") for
"RTN","IBCEF3",135,0)
 ;   print or IBXSAVE("OUTPT") for transmit - called by output formatter
"RTN","IBCEF3",136,0)
 ; IBNOSHOW = 1 if not to show error/warning text lines
"RTN","IBCEF3",137,0)
 ; Pass IBXSV by reference
"RTN","IBCEF3",138,0)
 N IBSUB
"RTN","IBCEF3",139,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEF3",140,0)
 K IBXSV(IBSUB)
"RTN","IBCEF3",141,0)
 I '$D(IBIFN) S IBIFN=$G(IBXIEN)
"RTN","IBCEF3",142,0)
 I IBIFN D F^IBCEF("N-HCFA 1500 SERVICE"_$S(IBSUB["24":"S (PRINT",1:" LINE (EDI")_")",,,IBIFN)
"RTN","IBCEF3",143,0)
 I $S(IBSUB'["24":1,1:'$G(IBNOSHOW)) D
"RTN","IBCEF3",144,0)
 . M IBXSV(IBSUB)=IBXDATA
"RTN","IBCEF3",145,0)
 E  D
"RTN","IBCEF3",146,0)
 . N Z,CT
"RTN","IBCEF3",147,0)
 . S (Z,CT)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  I '$D(IBXDATA(Z,"ARX")) S CT=CT+1 M IBXSV(IBSUB,CT)=IBXDATA(Z)
"RTN","IBCEF3",148,0)
 Q
"RTN","IBCEF3",149,0)
 ;
"RTN","IBCEF3",150,0)
 ; esg - 11/14/03 - Moved the below functions due to space constraints
"RTN","IBCEF3",151,0)
 ;
"RTN","IBCEF3",152,0)
ALLTYP(IBIFN) Q $$ALLTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",153,0)
INSTYP(IBIFN,SEQ) Q $$INSTYP^IBCEF31(IBIFN,$G(SEQ))
"RTN","IBCEF3",154,0)
POLTYP(IBIFN,IBSEQ) Q $$POLTYP^IBCEF31(IBIFN,$G(IBSEQ))
"RTN","IBCEF3",155,0)
ALLPTYP(IBIFN) Q $$ALLPTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",156,0)
 ;
"RTN","IBCEF3",157,0)
FILL(Z) ;
"RTN","IBCEF3",158,0)
 Q
"RTN","IBCEF3",159,0)
 ;
"RTN","IBCEF3",160,0)
 ;  ***** 
"RTN","IBCEF3",161,0)
 ;  The following code performs the multi-page set up for
"RTN","IBCEF3",162,0)
 ;  printing overflow data on the UB
"RTN","IBCEF3",163,0)
 ;  *****
"RTN","IBCEF3",164,0)
 ;
"RTN","IBCEF3",165,0)
XPROC(DATA,CT) ; Output any UB procedures after 6 on new page(s)
"RTN","IBCEF3",166,0)
 ; DATA = output data from IBXSAVE("PROC",CT)
"RTN","IBCEF3",167,0)
 ; CT = array sequence # of the procedure being output
"RTN","IBCEF3",168,0)
 ; Only used for local prints
"RTN","IBCEF3",169,0)
 N OFFSET,PG,COL,PRCODE,Q
"RTN","IBCEF3",170,0)
 S Q=(CT-1)\3#2,OFFSET=$S('Q:0,1:2)
"RTN","IBCEF3",171,0)
 S PG=(CT-1)\6+1,COL=1+(CT-1#3*15)
"RTN","IBCEF3",172,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),58,COL)
"RTN","IBCEF3",173,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),58,COL+9)
"RTN","IBCEF3",174,0)
 Q
"RTN","IBCEF3",175,0)
 ;
"RTN","IBCEF3",176,0)
XDIAG(DATA,CT) ; Output any UB other diagnoses after 8 on new page(s)
"RTN","IBCEF3",177,0)
 ; DATA = output data from IBXSAVE("DX",CT)
"RTN","IBCEF3",178,0)
 ; CT = array sequence # of the diagnosis being output
"RTN","IBCEF3",179,0)
 ; Only used for local prints
"RTN","IBCEF3",180,0)
 N COL,PG
"RTN","IBCEF3",181,0)
 S PG=(CT-1)\8+1,COL=8+(CT-1#9*7)
"RTN","IBCEF3",182,0)
 S DATA=$P($$ICD9^IBACSV(+DATA),U,1)
"RTN","IBCEF3",183,0)
 D MPGUB(PG,0,DATA,56,COL)
"RTN","IBCEF3",184,0)
 Q
"RTN","IBCEF3",185,0)
 ;
"RTN","IBCEF3",186,0)
XVAL(DATA,CT) ; Output any UB value codes after 12 on new page(s)
"RTN","IBCEF3",187,0)
 ; DATA = output data from IBXSAVE("VC",CT)
"RTN","IBCEF3",188,0)
 ; CT = array sequence # of the value code being output
"RTN","IBCEF3",189,0)
 ;
"RTN","IBCEF3",190,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",191,0)
 S PG=(CT-1)\12+1,COL=44+(CT-1#3*13),OFFSET=(CT-(12*(PG-1))-1)\3
"RTN","IBCEF3",192,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),14,COL)
"RTN","IBCEF3",193,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),14,COL+3)
"RTN","IBCEF3",194,0)
 Q
"RTN","IBCEF3",195,0)
 ;
"RTN","IBCEF3",196,0)
XCC(DATA,CT) ; Output any UB condition codes after 11 on new page(s)
"RTN","IBCEF3",197,0)
 ; 11 condition codes per page, starting columns 34 thru 64
"RTN","IBCEF3",198,0)
 ; DATA = output data from IBXSAVE("CC",CT)
"RTN","IBCEF3",199,0)
 ; CT = array sequence # of the condition code being output
"RTN","IBCEF3",200,0)
 ;
"RTN","IBCEF3",201,0)
 N COL,PG
"RTN","IBCEF3",202,0)
 S PG=(CT-1)\11+1,COL=34+(CT-1#11*3)
"RTN","IBCEF3",203,0)
 D MPGUB(PG,0,DATA,9,COL)
"RTN","IBCEF3",204,0)
 Q
"RTN","IBCEF3",205,0)
 ;
"RTN","IBCEF3",206,0)
XOCC(DATA,CT,FL) ; Output any UB occurrence codes after 8 (2 per form
"RTN","IBCEF3",207,0)
 ;  locators 31-34) on new page(s)
"RTN","IBCEF3",208,0)
 ; DATA = data from IBXSAVE("OCC",z) to be output
"RTN","IBCEF3",209,0)
 ; CT = array sequence # of occurrence code being output
"RTN","IBCEF3",210,0)
 ; FL = # of form locator being populated with the occ code
"RTN","IBCEF3",211,0)
 ;
"RTN","IBCEF3",212,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",213,0)
 S PG=(CT-1)\2+1,COL=1+((FL-31)*10),OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",214,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),11,COL)
"RTN","IBCEF3",215,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),11,COL+4)
"RTN","IBCEF3",216,0)
 Q
"RTN","IBCEF3",217,0)
 ;
"RTN","IBCEF3",218,0)
XOCCS(DATA,CT,FL) ; Output any UB occurrence span codes after 4 on new page(s)
"RTN","IBCEF3",219,0)
 ; DATA = data from IBXSAVE("OCCS",z) to be output
"RTN","IBCEF3",220,0)
 ; CT = array sequence # of occurrence span code being output
"RTN","IBCEF3",221,0)
 ; FL = # of form locator being populated (either FL 35 or 36)
"RTN","IBCEF3",222,0)
 ;
"RTN","IBCEF3",223,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",224,0)
 S PG=(CT-1)\2+1,OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",225,0)
 S COL=41+((FL-35)*17)
"RTN","IBCEF3",226,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),11,COL)
"RTN","IBCEF3",227,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),11,COL+4)
"RTN","IBCEF3",228,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,3),11,COL+11)
"RTN","IBCEF3",229,0)
 Q
"RTN","IBCEF3",230,0)
 ;
"RTN","IBCEF3",231,0)
FORMAT(VAL,IBX0,IBXDA) ;
"RTN","IBCEF3",232,0)
 I IBX0'="",IBXDA S VAL=$$FORMAT^IBCEFG(VAL,$P($G(^IBA(364.6,+IBXDA,0)),U,9),$P(IBX0,U,7),IBX0)
"RTN","IBCEF3",233,0)
 Q VAL
"RTN","IBCEF3",234,0)
 ;
"RTN","IBCEF3",235,0)
OUTPDT(IBIFN,IBXSAVE,IBXDATA) ; Returns outpatient service to date
"RTN","IBCEF3",236,0)
 ;  formatted CCYYMMDD for UB 837
"RTN","IBCEF3",237,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEF3",238,0)
 ; IBXSAVE = pass by reference for IBXSAVE("INPT") and IBXSAVE("DATE")
"RTN","IBCEF3",239,0)
 ; IBXDATA = array with formatted date or each line item - CCYYMMDD
"RTN","IBCEF3",240,0)
 N Z
"RTN","IBCEF3",241,0)
 S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("INPT",Z),U,10):$$DT^IBCEFG1($P(IBXSAVE("INPT",Z),U,10),,"D8"),1:IBXSAVE("DATE"))
"RTN","IBCEF3",242,0)
 K IBXSAVE("DATE")
"RTN","IBCEF3",243,0)
 Q
"RTN","IBCEF3",244,0)
 ;
"RTN","IBCEF31")
0^44^B11345418^B12054415
"RTN","IBCEF31",1,0)
IBCEF31 ;ALB/ESG - FORMATTER SPECIFIC BILL FLD FUNCTIONS - CONT ;14-NOV-03
"RTN","IBCEF31",2,0)
 ;;2.0;INTEGRATED BILLING;**155,296,349,400,432,488**;21-MAR-94;Build 184
"RTN","IBCEF31",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF31",4,0)
 ;
"RTN","IBCEF31",5,0)
 Q
"RTN","IBCEF31",6,0)
 ;
"RTN","IBCEF31",7,0)
ALLTYP(IBIFN) ; returns codes to translate to ALL ins types on a bill
"RTN","IBCEF31",8,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",9,0)
 N IBX,Z
"RTN","IBCEF31",10,0)
 F Z=1:1:3 S $P(IBX,U,Z)=$$INSTYP(IBIFN,Z)
"RTN","IBCEF31",11,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",12,0)
 Q IBX
"RTN","IBCEF31",13,0)
 ;
"RTN","IBCEF31",14,0)
INSTYP(IBIFN,SEQ) ; Returns insurance type code for an ins on a bill
"RTN","IBCEF31",15,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",16,0)
 ; SEQ = sequence (1,2,3) of insurance wanted - prim, second, tert
"RTN","IBCEF31",17,0)
 ;       Default is current insurance co
"RTN","IBCEF31",18,0)
 ;
"RTN","IBCEF31",19,0)
 N IBA,Z
"RTN","IBCEF31",20,0)
 ;
"RTN","IBCEF31",21,0)
 I '$G(SEQ) S SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",22,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ))
"RTN","IBCEF31",23,0)
 ;Codes 1:HMO;2:COMMERCIAL;3:MEDICARE;4:MEDICAID;5:GROUP POLICY;9:OTHER
"RTN","IBCEF31",24,0)
 I Z D
"RTN","IBCEF31",25,0)
 . S IBA=$P($G(^DIC(36,Z,3)),U,9)
"RTN","IBCEF31",26,0)
 . I $$MCRWNR^IBEFUNC(Z) S IBA=3   ; force Medicare (WNR) definition to be correct
"RTN","IBCEF31",27,0)
 . I IBA="" S IBA=5 ;Default is group policy - 5 if blank
"RTN","IBCEF31",28,0)
 ;
"RTN","IBCEF31",29,0)
 Q $G(IBA)
"RTN","IBCEF31",30,0)
 ;
"RTN","IBCEF31",31,0)
POLTYP(IBIFN,IBSEQ) ; Returns ins electronic policy type code for one
"RTN","IBCEF31",32,0)
 ;   ins policy on a bill
"RTN","IBCEF31",33,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",34,0)
 ; IBSEQ = sequence (1,2,3) of ins policy wanted - prim, second, tert
"RTN","IBCEF31",35,0)
 ;       Default is current insurance co
"RTN","IBCEF31",36,0)
 ;
"RTN","IBCEF31",37,0)
 N IBPLAN,IBPLTYP
"RTN","IBCEF31",38,0)
 ;
"RTN","IBCEF31",39,0)
 I '$G(IBSEQ) S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",40,0)
 S IBPLAN=$G(^IBA(355.3,+$P($G(^DGCR(399,IBIFN,"I"_IBSEQ)),U,18),0))
"RTN","IBCEF31",41,0)
 S IBPLTYP=$P(IBPLAN,U,15)
"RTN","IBCEF31",42,0)
 ;
"RTN","IBCEF31",43,0)
 ; esg - 06/30/05 - IB*2.0*296 - Force Medicare (WNR) to be correct
"RTN","IBCEF31",44,0)
 I $$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=2 S IBPLTYP="MB"   ; CMS-1500 ----> Medicare Part B
"RTN","IBCEF31",45,0)
 I $$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=3 S IBPLTYP="MA"   ; UB-04 -------> Medicare Part A
"RTN","IBCEF31",46,0)
 ;
"RTN","IBCEF31",47,0)
 I IBPLTYP="" S IBPLTYP="CI" ;Default is commercial - 'CI'
"RTN","IBCEF31",48,0)
 I IBPLTYP="MX" D
"RTN","IBCEF31",49,0)
 . I $P(IBPLAN,U,14)'="","AB"[$P(IBPLAN,U,14) S IBPLTYP="M"_$P(IBPLAN,U,14) Q
"RTN","IBCEF31",50,0)
 . S IBPLTYP="CI"
"RTN","IBCEF31",51,0)
 Q $G(IBPLTYP)
"RTN","IBCEF31",52,0)
 ;
"RTN","IBCEF31",53,0)
ALLPTYP(IBIFN) ; returns insurance policy type codes for ALL ins on a bill
"RTN","IBCEF31",54,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",55,0)
 N IBX,Z S IBX=""
"RTN","IBCEF31",56,0)
 F Z=1:1:3 I $D(^DGCR(399,IBIFN,"I"_Z)) S $P(IBX,U,Z)=$$POLTYP(IBIFN,Z)
"RTN","IBCEF31",57,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",58,0)
 Q IBX
"RTN","IBCEF31",59,0)
 ;
"RTN","IBCEF31",60,0)
PGDX(DXCNT,IBX0,IBXDA,IBXLN,IBXCOL,IBXSIZE,IBXSAVE) ; Subroutine - Checks for Diagnosis Codes (Dx) beyond 
"RTN","IBCEF31",61,0)
 ; the first four, that relate to the current Dx position passed in DXCNT.
"RTN","IBCEF31",62,0)
 ; This subroutine stores the Diagnosis Codes in output global using display parameters (IBXLN,IBXCOL)
"RTN","IBCEF31",63,0)
 ;  THE PAGE IS ALWAYS 1 NOW SO WE DON'T NEED 4 LINES BELOW  BAA *488*
"RTN","IBCEF31",64,0)
 ; If DXCNT is 1, check for Dx's 5,9,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",65,0)
 ; If DXCNT is 2, check for Dx's 6,10,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",66,0)
 ; If DXCNT is 3, check for Dx's 7,11,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",67,0)
 ; If DXCNT is 4, check for Dx's 8,12,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",68,0)
 ;
"RTN","IBCEF31",69,0)
 ; Input: DXCNT= position of current Dx (from 1 to 4)
"RTN","IBCEF31",70,0)
 ;        IBX0= zero-level of file 364.7 of current Dx
"RTN","IBCEF31",71,0)
 ;        IBXDA= ien# of file 364.6 of current Dx
"RTN","IBCEF31",72,0)
 ;        IBXLN IBXCOL= line# & Column# of current Dx
"RTN","IBCEF31",73,0)
 ;        IBXSIZE= size counter
"RTN","IBCEF31",74,0)
 ;        IBXSAVE("DX")= local array with all Dx's on current bill
"RTN","IBCEF31",75,0)
 ;
"RTN","IBCEF31",76,0)
 ;  For patch *488* 
"RTN","IBCEF31",77,0)
 ;  S DXNM = 12  This is the number of diagnosis on a 1500 form  
"RTN","IBCEF31",78,0)
 ;  S IBPG=1  This is the page number.  All 12 print on page 1
"RTN","IBCEF31",79,0)
 N IBPG,VAL
"RTN","IBCEF31",80,0)
 S IBPG=1
"RTN","IBCEF31",81,0)
 I '$D(IBXSAVE("DX",DXCNT)) Q
"RTN","IBCEF31",82,0)
 S VAL=$P($$ICD9^IBACSV(+IBXSAVE("DX",DXCNT)),U)   ; resolve Dx pointer
"RTN","IBCEF31",83,0)
 S VAL=$$FORMAT^IBCEF3(VAL,$G(IBX0),$G(IBXDA))  ;format Dx value
"RTN","IBCEF31",84,0)
 D SETGBL^IBCEFG(IBPG,IBXLN,IBXCOL,VAL,.IBXSIZE) ;store in output global
"RTN","IBCEF31",85,0)
 Q  ;PGDX
"RTN","IBCEF31",86,0)
 ;
"RTN","IBCEF31",87,0)
DXSV(IB,IBXSAVE) ; output formatter subroutine
"RTN","IBCEF31",88,0)
 ; save off DX codes in IBXSAVE("DX")
"RTN","IBCEF31",89,0)
 N Z,IBCT
"RTN","IBCEF31",90,0)
 S (Z,IBCT)=0
"RTN","IBCEF31",91,0)
 F  S Z=$O(IB(Z)) Q:'Z  I $G(IB(Z)) S IBCT=IBCT+1 M IBXSAVE("DX",IBCT)=IB(Z)
"RTN","IBCEF31",92,0)
 Q
"RTN","IBCEF31",93,0)
 ;
"RTN","IBCEF31",94,0)
AUTRF(IBXIEN,IBL,Z) ; returns auth # and referral# if room for both, separated by a space - IB*2.0*432
"RTN","IBCEF31",95,0)
 ; IBXIEN=  claim ien
"RTN","IBCEF31",96,0)
 ; IBL   =  field length-1 to allow for 1 blank space between numbers (28 for CMS 1500, 30 for UB-04)
"RTN","IBCEF31",97,0)
 ; Z     =  1 for PRIMARY, 2 for SECONDARY, 3 for TERTIARY
"RTN","IBCEF31",98,0)
 ; 
"RTN","IBCEF31",99,0)
 N IBXDATA,IBZ
"RTN","IBCEF31",100,0)
 Q:$G(IBXIEN)="" ""
"RTN","IBCEF31",101,0)
 ; if CMS 1500, find current codes
"RTN","IBCEF31",102,0)
 I $G(Z)="",$G(IBL)=28 S Z=$$COBN^IBCEF(IBXIEN)
"RTN","IBCEF31",103,0)
 Q:$G(Z)="" ""
"RTN","IBCEF31",104,0)
 ; if length not defined, default to shortest
"RTN","IBCEF31",105,0)
 S:IBL="" IBL=28
"RTN","IBCEF31",106,0)
 D F^IBCEF("N-"_$P("PRIMARY^SECONDARY^TERTIARY",U,Z)_" AUTH CODE",,,IBXIEN)
"RTN","IBCEF31",107,0)
 D F^IBCEF("N-"_$P("PRIMARY^SECONDARY^TERTIARY",U,Z)_" REFERRAL NUMBER","IBZ",,IBXIEN)
"RTN","IBCEF31",108,0)
 ; if length of auth and referral combined is too long, only return auth code
"RTN","IBCEF31",109,0)
 Q $S(IBZ="":IBXDATA,IBXDATA="":IBZ,$L(IBXDATA)+$L(IBZ)>IBL:IBXDATA,1:IBXDATA_" "_IBZ)
"RTN","IBCEF83")
0^27^B64584926^B56319703
"RTN","IBCEF83",1,0)
IBCEF83 ;ALB/BI - GET PROVIDER FUNCTIONS ;26-OCT-2010
"RTN","IBCEF83",2,0)
 ;;2.0;INTEGRATED BILLING;**432,488**;21-MAR-94;Build 184
"RTN","IBCEF83",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF83",4,0)
 Q
"RTN","IBCEF83",5,0)
 ;
"RTN","IBCEF83",6,0)
GETPRV(IBIEN,CPST,IBPRTYP,IBITEM)    ; MAIN ENTRY POINT.
"RTN","IBCEF83",7,0)
 ; INPUTS:  IBIEN    - INTERNAL BILLING/CLAIM NUMBER.
"RTN","IBCEF83",8,0)
 ;
"RTN","IBCEF83",9,0)
 ;          CPST     - INSURANCE LEVEL: C = CURRENT(DEFAULT),
"RTN","IBCEF83",10,0)
 ;                                      P = PRIMARY,
"RTN","IBCEF83",11,0)
 ;                                      S = SECONDARY,
"RTN","IBCEF83",12,0)
 ;                                      T = TERTIARY.
"RTN","IBCEF83",13,0)
 ;
"RTN","IBCEF83",14,0)
 ;          IBPRTYPE - PROVIDER TYPE:   1 = REFERRING,
"RTN","IBCEF83",15,0)
 ;                                      2 = OPERATING,
"RTN","IBCEF83",16,0)
 ;                                      3 = RENDERING,
"RTN","IBCEF83",17,0)
 ;                                      4 = ATTENDING,
"RTN","IBCEF83",18,0)
 ;                                      5 = SUPERVISING,
"RTN","IBCEF83",19,0)
 ;                                      9 = OTHER OPERATING.
"RTN","IBCEF83",20,0)
 ;
"RTN","IBCEF83",21,0)
 ;          IBITEM   - ITEM REQUESTED: A0 = PROVIDER VARIABLE POINTER
"RTN","IBCEF83",22,0)
 ;                                     A1 = PROVIDER FULL NAME
"RTN","IBCEF83",23,0)
 ;                                     A2 = PROVIDER LAST NAME
"RTN","IBCEF83",24,0)
 ;                                     A3 = PROVIDER FIRST NAME
"RTN","IBCEF83",25,0)
 ;                                     A4 = PROVIDER MIDDLE NAME
"RTN","IBCEF83",26,0)
 ;                                     A5 = PROVIDER SUFFIX
"RTN","IBCEF83",27,0)
 ;                                     A6 = PROVIDER CREDENTIALS
"RTN","IBCEF83",28,0)
 ;                                     A7 = PROVIDER CURRENT COB ID
"RTN","IBCEF83",29,0)
 ;                                     A8 = 
"RTN","IBCEF83",30,0)
 ;                                     A9 = 
"RTN","IBCEF83",31,0)
 ;
"RTN","IBCEF83",32,0)
 ;                                     B1 = PROVIDER QUALIFIER
"RTN","IBCEF83",33,0)
 ;                                     B2 = PROVIDER ID
"RTN","IBCEF83",34,0)
 ;                                     B3 = PROVIDER NPI
"RTN","IBCEF83",35,0)
 ;
"RTN","IBCEF83",36,0)
 ;                                     C1 = REVENUE CODE LINE COUNT (SLC)
"RTN","IBCEF83",37,0)
 ;
"RTN","IBCEF83",38,0)
 ; RETURN:  SPECIFIC REQUESTED DATA ELEMENT.
"RTN","IBCEF83",39,0)
 ;
"RTN","IBCEF83",40,0)
 N CPSTDATA,IBDATA,ACTION
"RTN","IBCEF83",41,0)
 I $D(IBIEN)=0 Q ""
"RTN","IBCEF83",42,0)
 I '$G(IBXFORM) N IBXPROV
"RTN","IBCEF83",43,0)
 I $D(IBXPROV("CPST",IBIEN))=0 D
"RTN","IBCEF83",44,0)
 . K IBXPROV
"RTN","IBCEF83",45,0)
 . D ALLIDS^IBCEFP(IBIEN,.IBXPROV)
"RTN","IBCEF83",46,0)
 . D CPSTINDX
"RTN","IBCEF83",47,0)
 I (($G(IBPRTYP)="")!($G(IBITEM)="")) Q ""
"RTN","IBCEF83",48,0)
 I $G(CPST)="" S CPST="C"
"RTN","IBCEF83",49,0)
 S CPSTDATA=$G(IBXPROV("CPST",IBIEN,CPST))
"RTN","IBCEF83",50,0)
 I CPSTDATA="" Q ""
"RTN","IBCEF83",51,0)
 M IBDATA=IBXPROV("PROVINF",IBIEN,$P(CPSTDATA,U,1),$P(CPSTDATA,U,2),IBPRTYP)
"RTN","IBCEF83",52,0)
 ;I ((IBPRTYP=3)!(IBPRTYP=4)),$$MCRONBIL^IBEFUNC(IBIEN) D MCRONBIL
"RTN","IBCEF83",53,0)
 I $D(IBDATA)=0 Q ""
"RTN","IBCEF83",54,0)
 S ACTION="IBX"_IBITEM
"RTN","IBCEF83",55,0)
 I $T(@ACTION)="" Q ""
"RTN","IBCEF83",56,0)
 Q $$@ACTION
"RTN","IBCEF83",57,0)
 ;
"RTN","IBCEF83",58,0)
CPSTINDX    ; CREATE THE CPST INDEX FOR PROCESSING
"RTN","IBCEF83",59,0)
 N IBMODE,IBN
"RTN","IBCEF83",60,0)
 I $D(IBXPROV("PROVINF","C",1)) S IBXPROV("CPST",IBIEN,"C")="C"_U_"1"
"RTN","IBCEF83",61,0)
 S IBMODE="" F  S IBMODE=$O(IBXPROV("PROVINF",IBIEN,IBMODE)) Q:IBMODE=""  D
"RTN","IBCEF83",62,0)
 . S IBN="" F  S IBN=$O(IBXPROV("PROVINF",IBIEN,IBMODE,IBN)) Q:IBN=""  D
"RTN","IBCEF83",63,0)
 .. I $G(IBXPROV("PROVINF",IBIEN,IBMODE,IBN))="" Q
"RTN","IBCEF83",64,0)
 .. I IBXPROV("PROVINF",IBIEN,IBMODE,IBN)="P" D
"RTN","IBCEF83",65,0)
 ... S IBXPROV("CPST",IBIEN,"P")=IBMODE_U_IBN
"RTN","IBCEF83",66,0)
 ... I $D(IBXPROV("CPST",IBIEN,"C"))=0  S IBXPROV("CPST",IBIEN,"C")=IBMODE_U_IBN
"RTN","IBCEF83",67,0)
 .. I IBXPROV("PROVINF",IBIEN,IBMODE,IBN)="S" D
"RTN","IBCEF83",68,0)
 ... S IBXPROV("CPST",IBIEN,"S")=IBMODE_U_IBN
"RTN","IBCEF83",69,0)
 ... I $D(IBXPROV("CPST",IBIEN,"C"))=0  S IBXPROV("CPST",IBIEN,"C")=IBMODE_U_IBN
"RTN","IBCEF83",70,0)
 .. I IBXPROV("PROVINF",IBIEN,IBMODE,IBN)="T" D
"RTN","IBCEF83",71,0)
 ... S IBXPROV("CPST",IBIEN,"T")=IBMODE_U_IBN
"RTN","IBCEF83",72,0)
 ... I $D(IBXPROV("CPST",IBIEN,"C"))=0  S IBXPROV("CPST",IBIEN,"C")=IBMODE_U_IBN
"RTN","IBCEF83",73,0)
 Q
"RTN","IBCEF83",74,0)
 ;
"RTN","IBCEF83",75,0)
IBXA0()    ; PROVIDER VARIABLE POINTER
"RTN","IBCEF83",76,0)
 Q $P(IBDATA,U,1)
"RTN","IBCEF83",77,0)
 ;
"RTN","IBCEF83",78,0)
IBXA1()    ; PROVIDER FULL NAME
"RTN","IBCEF83",79,0)
 N X S X=""
"RTN","IBCEF83",80,0)
 I X="",$$IBXA2'="" D
"RTN","IBCEF83",81,0)
 . S X=$$IBXA2
"RTN","IBCEF83",82,0)
 . S:$$IBXA3'="" X=X_","_$$IBXA3
"RTN","IBCEF83",83,0)
 . S:$$IBXA4'="" X=X_" "_$$IBXA4
"RTN","IBCEF83",84,0)
 . S:$$IBXA5'="" X=X_" "_$$IBXA5
"RTN","IBCEF83",85,0)
 I X="" S X=$$EXPAND^IBTRE(399.0222,.02,$$IBXA0)
"RTN","IBCEF83",86,0)
 Q X
"RTN","IBCEF83",87,0)
 ;
"RTN","IBCEF83",88,0)
IBXA2()    ; PROVIDER LAST NAME
"RTN","IBCEF83",89,0)
 N X S X=""
"RTN","IBCEF83",90,0)
 S X=$P($G(IBDATA("NAME")),U,1)
"RTN","IBCEF83",91,0)
 Q X
"RTN","IBCEF83",92,0)
 ;
"RTN","IBCEF83",93,0)
IBXA3()    ; PROVIDER FIRST NAME
"RTN","IBCEF83",94,0)
 N X S X=""
"RTN","IBCEF83",95,0)
 S X=$P($G(IBDATA("NAME")),U,2)
"RTN","IBCEF83",96,0)
 Q X
"RTN","IBCEF83",97,0)
 ;
"RTN","IBCEF83",98,0)
IBXA4()    ; PROVIDER MIDDLE NAME
"RTN","IBCEF83",99,0)
 N X S X=""
"RTN","IBCEF83",100,0)
 S X=$P($G(IBDATA("NAME")),U,3)
"RTN","IBCEF83",101,0)
 Q X
"RTN","IBCEF83",102,0)
 ;
"RTN","IBCEF83",103,0)
IBXA5()    ; PROVIDER SUFFIX
"RTN","IBCEF83",104,0)
 N X S X=""
"RTN","IBCEF83",105,0)
 S X=$P($G(IBDATA("NAME")),U,5)
"RTN","IBCEF83",106,0)
 Q X
"RTN","IBCEF83",107,0)
 ;
"RTN","IBCEF83",108,0)
IBXA6()    ; PROVIDER CREDENTIALS
"RTN","IBCEF83",109,0)
 N X S X=""
"RTN","IBCEF83",110,0)
 S X=$P($G(IBDATA("NAME")),U,4)
"RTN","IBCEF83",111,0)
 I X="" S X=$$CRED^IBCEU($$IBXA0)
"RTN","IBCEF83",112,0)
 Q X
"RTN","IBCEF83",113,0)
 ;
"RTN","IBCEF83",114,0)
IBXA7()    ; PROVIDER CURRENT COB ID
"RTN","IBCEF83",115,0)
 N X S X=""
"RTN","IBCEF83",116,0)
 I X="" S X=$P($G(IBDATA("COBID")),U,1)
"RTN","IBCEF83",117,0)
 Q X
"RTN","IBCEF83",118,0)
 ;
"RTN","IBCEF83",119,0)
IBXB1()    ; PROVIDER QUALIFIER
"RTN","IBCEF83",120,0)
 N X S X=""
"RTN","IBCEF83",121,0)
 S X=$P($G(IBDATA(1)),U,3)
"RTN","IBCEF83",122,0)
 Q X
"RTN","IBCEF83",123,0)
 ;
"RTN","IBCEF83",124,0)
IBXB2()    ; PROVIDER ID
"RTN","IBCEF83",125,0)
 N X S X=""
"RTN","IBCEF83",126,0)
 S X=$P($G(IBDATA(1)),U,4)
"RTN","IBCEF83",127,0)
 Q X
"RTN","IBCEF83",128,0)
 ;
"RTN","IBCEF83",129,0)
IBXB3()    ; PROVIDER NPI
"RTN","IBCEF83",130,0)
 N X S X=""
"RTN","IBCEF83",131,0)
 S X=$P($G(IBDATA(0)),U,4)
"RTN","IBCEF83",132,0)
 Q X
"RTN","IBCEF83",133,0)
 ;
"RTN","IBCEF83",134,0)
IBXC1()    ; CLAIM LINE COUNT
"RTN","IBCEF83",135,0)
 N X S X=""
"RTN","IBCEF83",136,0)
 S X=$P($G(IBXPROV("SLC")),U,1)
"RTN","IBCEF83",137,0)
 Q X
"RTN","IBCEF83",138,0)
 ;
"RTN","IBCEF83",139,0)
CMSBOX24(IBIEN,IBXIJ,IBXDATA)    ; PROVIDER QUALIFIER or PROVIDER ID and PROVIDER NPI FOR CMS-1500 BOX J
"RTN","IBCEF83",140,0)
 ;
"RTN","IBCEF83",141,0)
 ; IBIEN = CLAIM/BILL INTERNAL NUMBER
"RTN","IBCEF83",142,0)
 ; IBXIJ = "I" for COLUMN I or "J" for COLUMN J
"RTN","IBCEF83",143,0)
 ; IBXDATA = RETURN DATA ARRAY
"RTN","IBCEF83",144,0)
 ;
"RTN","IBCEF83",145,0)
 K IBXDATA
"RTN","IBCEF83",146,0)
 I $G(IBIEN)="" Q
"RTN","IBCEF83",147,0)
 I $G(IBXIJ)="" Q
"RTN","IBCEF83",148,0)
 I '$G(IBXFORM) N IBXFORM S IBXFORM=99
"RTN","IBCEF83",149,0)
 N CLINE,X,IBREND,CPLNK,IBXDCNT
"RTN","IBCEF83",150,0)
 S X=$$GETPRV(IBIEN)
"RTN","IBCEF83",151,0)
 I $D(IBXPROV("CMBX24IX"))=0 D CMBX24IX
"RTN","IBCEF83",152,0)
 S IBXDCNT=0
"RTN","IBCEF83",153,0)
 S CLINE=0 F  S CLINE=$O(IBXSAVE("BOX24",CLINE)) Q:+CLINE=0  D
"RTN","IBCEF83",154,0)
 . ;S CPLNK=$G(IBXSAVE("BOX24",CLINE,"CPLNK")) Q:CPLNK=""   ;WCJ;IB*488;this is just plain wrong.  It does not need to grab CPLNK.
"RTN","IBCEF83",155,0)
 . ;S IBREND=$P($G(IBXPROV("L-PROV",IBIEN,CPLNK,"C",1,3)),U,1) ;WCJ;IB*488;IBXPROV array is subscipted by the SLC (Service Line Counter)
"RTN","IBCEF83",156,0)
 . S IBREND=$P($G(IBXPROV("L-PROV",IBIEN,CLINE,"C",1,3)),U,1) ; WCJ;IB*488;used CLINE instead of CPLNK
"RTN","IBCEF83",157,0)
 . I IBREND'="" S IBREND=$G(IBXPROV("CMBX24IX",IBREND))
"RTN","IBCEF83",158,0)
 . I IBREND="" S IBREND=$G(IBXPROV("CMBX24IX","CLAIM"))
"RTN","IBCEF83",159,0)
 . S:IBXIJ="I" IBXDCNT=IBXDCNT+1,IBXDATA(IBXDCNT)=$P(IBREND,U,2)
"RTN","IBCEF83",160,0)
 . S:IBXIJ="I" IBXDCNT=IBXDCNT+1,IBXDATA(IBXDCNT)=""
"RTN","IBCEF83",161,0)
 . S:IBXIJ="J" IBXDCNT=IBXDCNT+1,IBXDATA(IBXDCNT)=$P(IBREND,U,3)
"RTN","IBCEF83",162,0)
 . S:IBXIJ="J" IBXDCNT=IBXDCNT+1,IBXDATA(IBXDCNT)=$P(IBREND,U,1)
"RTN","IBCEF83",163,0)
 I IBXFORM=99 K IBXPROV
"RTN","IBCEF83",164,0)
 Q
"RTN","IBCEF83",165,0)
 ;
"RTN","IBCEF83",166,0)
CMBX24IX    ; PROVIDER INDEX FOR CMS-1500 BOX I and J.
"RTN","IBCEF83",167,0)
 N SLC,IBXPTR
"RTN","IBCEF83",168,0)
 S SLC=0 F  S SLC=$O(IBXPROV("L-PROV",IBIEN,SLC)) Q:+SLC=0  D
"RTN","IBCEF83",169,0)
 . S IBXPTR=$P($G(IBXPROV("L-PROV",IBIEN,SLC,"C",1,3)),U,1)
"RTN","IBCEF83",170,0)
 . Q:IBXPTR=""
"RTN","IBCEF83",171,0)
 . S IBXPROV("CMBX24IX",IBXPTR)=""
"RTN","IBCEF83",172,0)
 . S IBXPROV("CMBX24IX",IBXPTR)=IBXPROV("CMBX24IX",IBXPTR)_$P($G(IBXPROV("L-PROV",IBIEN,SLC,"C",1,3,0)),U,4)_U  ; PROVIDER NPI
"RTN","IBCEF83",173,0)
 . S IBXPROV("CMBX24IX",IBXPTR)=IBXPROV("CMBX24IX",IBXPTR)_$P($G(IBXPROV("L-PROV",IBIEN,SLC,"C",1,3,1)),U,3)_U  ; PROVIDER QUALIFIER
"RTN","IBCEF83",174,0)
 . S IBXPROV("CMBX24IX",IBXPTR)=IBXPROV("CMBX24IX",IBXPTR)_$P($G(IBXPROV("L-PROV",IBIEN,SLC,"C",1,3,1)),U,4)    ; PROVIDER ID
"RTN","IBCEF83",175,0)
 S IBXPTR=$P($G(IBXPROV("PROVINF",IBIEN,"C",1,3)),U,1)
"RTN","IBCEF83",176,0)
 Q:IBXPTR=""
"RTN","IBCEF83",177,0)
 S IBXPROV("CMBX24IX",IBXPTR)=""
"RTN","IBCEF83",178,0)
 S IBXPROV("CMBX24IX",IBXPTR)=IBXPROV("CMBX24IX",IBXPTR)_$P($G(IBXPROV("PROVINF",IBIEN,"C",1,3,0)),U,4)_U       ; PROVIDER NPI
"RTN","IBCEF83",179,0)
 S IBXPROV("CMBX24IX",IBXPTR)=IBXPROV("CMBX24IX",IBXPTR)_$P($G(IBXPROV("PROVINF",IBIEN,"C",1,3,1)),U,3)_U       ; PROVIDER QUALIFIER
"RTN","IBCEF83",180,0)
 S IBXPROV("CMBX24IX",IBXPTR)=IBXPROV("CMBX24IX",IBXPTR)_$P($G(IBXPROV("PROVINF",IBIEN,"C",1,3,1)),U,4)         ; PROVIDER ID
"RTN","IBCEF83",181,0)
 S IBXPROV("CMBX24IX","CLAIM")=""
"RTN","IBCEF83",182,0)
 S IBXPROV("CMBX24IX","CLAIM")=IBXPROV("CMBX24IX","CLAIM")_$P($G(IBXPROV("PROVINF",IBIEN,"C",1,3,0)),U,4)_U     ; PROVIDER NPI
"RTN","IBCEF83",183,0)
 S IBXPROV("CMBX24IX","CLAIM")=IBXPROV("CMBX24IX","CLAIM")_$P($G(IBXPROV("PROVINF",IBIEN,"C",1,3,1)),U,3)_U     ; PROVIDER QUALIFIER
"RTN","IBCEF83",184,0)
 S IBXPROV("CMBX24IX","CLAIM")=IBXPROV("CMBX24IX","CLAIM")_$P($G(IBXPROV("PROVINF",IBIEN,"C",1,3,1)),U,4)       ; PROVIDER ID
"RTN","IBCEF83",185,0)
 Q
"RTN","IBCEF83",186,0)
 ;
"RTN","IBCEF83",187,0)
MCRONBIL    ; DEFAULT NAME and COB ID.
"RTN","IBCEF83",188,0)
 S $P(IBDATA,U,1)=""
"RTN","IBCEF83",189,0)
 S $P(IBDATA("NAME"),U,1)="DEPT VETERANS AFFAIRS"
"RTN","IBCEF83",190,0)
 S $P(IBDATA("NAME"),U,2)=""
"RTN","IBCEF83",191,0)
 S $P(IBDATA("NAME"),U,3)=""
"RTN","IBCEF83",192,0)
 S $P(IBDATA("NAME"),U,4)=""
"RTN","IBCEF83",193,0)
 S $P(IBDATA("NAME"),U,5)=""
"RTN","IBCEF83",194,0)
 S $P(IBDATA("COBID"),U,1)="VAD000"
"RTN","IBCEF83",195,0)
 Q
"RTN","IBCEF83",196,0)
 ;
"RTN","IBCEF83",197,0)
UB047879(IBXIEN,X)     ; LOAD X ARRAY WITH THE DATA FOR UB FIELD 78 AND 79.
"RTN","IBCEF83",198,0)
 N Y
"RTN","IBCEF83",199,0)
 K X S X(1)="",X(2)=""
"RTN","IBCEF83",200,0)
 F Y=9,1,3 Q:X(2)'=""  D
"RTN","IBCEF83",201,0)
 . I X(1)'="" S X(2)=$$GETPRV(IBXIEN,,Y,"A1") Q:X(2)=""  D
"RTN","IBCEF83",202,0)
 .. I X(1)'="" S X(2)=X(2)_"^"_$$GETPRV(IBXIEN,,Y,"B1")
"RTN","IBCEF83",203,0)
 .. I X(1)'="" S X(2)=X(2)_"^"_$$GETPRV(IBXIEN,,Y,"B2")
"RTN","IBCEF83",204,0)
 .. I X(1)'="" S X(2)=X(2)_"^"_$$GETPRV(IBXIEN,,Y,"B3")
"RTN","IBCEF83",205,0)
 . Q:X(1)'=""
"RTN","IBCEF83",206,0)
 . S X(1)=$$GETPRV(IBXIEN,,Y,"A1") Q:X(1)=""
"RTN","IBCEF83",207,0)
 . S X(1)=X(1)_"^"_$$GETPRV(IBXIEN,,Y,"B1")
"RTN","IBCEF83",208,0)
 . S X(1)=X(1)_"^"_$$GETPRV(IBXIEN,,Y,"B2")
"RTN","IBCEF83",209,0)
 . S X(1)=X(1)_"^"_$$GETPRV(IBXIEN,,Y,"B3")
"RTN","IBCEF83",210,0)
 Q
"RTN","IBCEF83",211,0)
 ;
"RTN","IBCEF83",212,0)
PRQUAL(IBXIEN) ;Get provider qualifier. Add with *488*
"RTN","IBCEF83",213,0)
 N IBPQ
"RTN","IBCEF83",214,0)
 S IBPQ=$$GETPRV(IBXIEN,,1,"A1")
"RTN","IBCEF83",215,0)
 I IBPQ'="" S IBPQ="DN"
"RTN","IBCEF83",216,0)
 I IBPQ="" D
"RTN","IBCEF83",217,0)
 .S IBPQ=$$GETPRV(IBXIEN,,5,"A1")
"RTN","IBCEF83",218,0)
 .I IBPQ'="" S IBPQ="DQ"
"RTN","IBCEF83",219,0)
 Q IBPQ
"RTN","IBCEF83",220,0)
 ;
"RTN","IBCEF83",221,0)
PROVNM(IBXIEN) ;Get Ref provider if not avail check for Sup provider. Add with *488*
"RTN","IBCEF83",222,0)
 N IBPR
"RTN","IBCEF83",223,0)
 S IBPR=$$GETPRV(IBXIEN,,1,"A1")
"RTN","IBCEF83",224,0)
 I IBPR="" S IBPR=$$GETPRV(IBXIEN,,5,"A1")
"RTN","IBCEF83",225,0)
 Q IBPR
"RTN","IBCEOB")
0^13^B100427168^B95746536
"RTN","IBCEOB",1,0)
IBCEOB ;ALB/TMP/PJH - 835 EDI EOB MESSAGE PROCESSING ; 8/19/10 6:33pm
"RTN","IBCEOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,265,155,377,407,431,432,488**;21-MAR-94;Build 184
"RTN","IBCEOB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEOB",4,0)
 ;
"RTN","IBCEOB",5,0)
 Q
"RTN","IBCEOB",6,0)
 ;
"RTN","IBCEOB",7,0)
UPDEOB(IBTDA) ; Update EXPLANATION OF BENEFITS file (#361.1) from return msg
"RTN","IBCEOB",8,0)
 ; IBTDA = ien of return message
"RTN","IBCEOB",9,0)
 ; Function returns ien of EOB file entry or "" if errors found
"RTN","IBCEOB",10,0)
 ;          the data.  Any errors found are
"RTN","IBCEOB",11,0)
 ;          stored in array ^TMP("IBCERR-EOB",$J,n) in text format
"RTN","IBCEOB",12,0)
 ;          n = seq # and are stored with the EOB in a wp field
"RTN","IBCEOB",13,0)
 ;
"RTN","IBCEOB",14,0)
 N IB0,IB100,IBBTCH,IBE,IBMNUM,IBT,DLAYGO,DIC,DD,DO,X,Y,Z,Z0,Z1,IBEOB,IBBAD,IBOK,IB,IBA1,IBIFN,IBFILE
"RTN","IBCEOB",15,0)
 K ^TMP($J),^TMP("IBCERR-EOB",$J)
"RTN","IBCEOB",16,0)
 ;
"RTN","IBCEOB",17,0)
 S (IBBAD,IBEOB)=""
"RTN","IBCEOB",18,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEOB",19,0)
 S IBMNUM=+$P(IB0,U)
"RTN","IBCEOB",20,0)
 S X=+$G(^IBA(364,+$P(IB0,U,5),0))
"RTN","IBCEOB",21,0)
 ;
"RTN","IBCEOB",22,0)
 I IBMNUM=""!(X="") G UPDQ
"RTN","IBCEOB",23,0)
 ;
"RTN","IBCEOB",24,0)
 ; Duplicate EOB Check
"RTN","IBCEOB",25,0)
 S IBFILE="^IBA(364.2,"_IBTDA_",2)"
"RTN","IBCEOB",26,0)
 I $$DUP(IBFILE,X) D DELMSG^IBCESRV2(IBTDA) G UPDQ
"RTN","IBCEOB",27,0)
 ;
"RTN","IBCEOB",28,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock msg file 364.2
"RTN","IBCEOB",29,0)
 S IBEOB=+$$ADD3611(IBMNUM,$P(IB0,U,5),$P(IB0,U,4),X,0,IBFILE)
"RTN","IBCEOB",30,0)
 L -^IBA(364.2,IBTDA,0)
"RTN","IBCEOB",31,0)
 ;
"RTN","IBCEOB",32,0)
 I IBEOB<0 S IBEOB="" G UPDQ
"RTN","IBCEOB",33,0)
 D UPD3611(IBEOB,IBTDA,0)
"RTN","IBCEOB",34,0)
 ;
"RTN","IBCEOB",35,0)
UPDQ I IBEOB,$O(^TMP("IBCERR-EOB",$J,0)) D ERRUPD(IBEOB,"IBCERR-EOB")
"RTN","IBCEOB",36,0)
 ;
"RTN","IBCEOB",37,0)
 K ^TMP($J),^TMP("IBCERR-EOB",$J)
"RTN","IBCEOB",38,0)
 D CLEAN^DILF
"RTN","IBCEOB",39,0)
 Q +IBEOB
"RTN","IBCEOB",40,0)
 ;
"RTN","IBCEOB",41,0)
 ;
"RTN","IBCEOB",42,0)
 ; NOTE: **** For all variables IB0,IBEGBL,IBEOB below:
"RTN","IBCEOB",43,0)
 ; IB0 = raw data received for this record type on the 835 flat file
"RTN","IBCEOB",44,0)
 ; IBEGBL = subscript to use in error global
"RTN","IBCEOB",45,0)
 ; IBEOB = ien in file 361.1 for this EOB
"RTN","IBCEOB",46,0)
 ;
"RTN","IBCEOB",47,0)
835(IB0,IBEGBL,IBEOB) ; Store header
"RTN","IBCEOB",48,0)
 ;
"RTN","IBCEOB",49,0)
 Q $$HDR^IBCEOB1(IB0,IBEGBL,IBEOB,.HIPAA)
"RTN","IBCEOB",50,0)
 ;
"RTN","IBCEOB",51,0)
5(IB0,IBEGBL,IBEOB) ; Record '05'
"RTN","IBCEOB",52,0)
 ;
"RTN","IBCEOB",53,0)
 N IBOK,DA,DR,DIE,X,Y
"RTN","IBCEOB",54,0)
 K IBZDATA
"RTN","IBCEOB",55,0)
 S DR=";",IBOK=1
"RTN","IBCEOB",56,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",57,0)
 ;
"RTN","IBCEOB",58,0)
 I $P(IB0,U,9) S DR=DR_"1.1///"_$$DATE^IBCEU($P(IB0,U,9))_";"         ; statement start date
"RTN","IBCEOB",59,0)
 I $P(IB0,U,10) S DR=DR_"1.11///"_$$DATE^IBCEU($P(IB0,U,10))_";"      ; statement end date
"RTN","IBCEOB",60,0)
 I $P(IB0,U,11) S DR=DR_"1.12///"_$$DATE^IBCEU($P(IB0,U,11))_";"      ; claim received date
"RTN","IBCEOB",61,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB",62,0)
 I DR'="" D ^DIE S IBOK=$D(Y)=0
"RTN","IBCEOB",63,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 5 data"
"RTN","IBCEOB",64,0)
 Q IBOK
"RTN","IBCEOB",65,0)
 ;
"RTN","IBCEOB",66,0)
6(IB0,IBEGBL,IBEOB) ; Record '06' - corrected patient name and/or ID#
"RTN","IBCEOB",67,0)
 ; This data is not going to be filed into file 361.1 so the value of this function will always be a 1 so as to
"RTN","IBCEOB",68,0)
 ; not interrupt the filing process of the EOB/MRA data into file 361.1.
"RTN","IBCEOB",69,0)
 ;
"RTN","IBCEOB",70,0)
 ; perform overall integrity checks on the incoming 06 record.  If anything is out of place, don't update anything
"RTN","IBCEOB",71,0)
 ; and report the problem and get out.
"RTN","IBCEOB",72,0)
 NEW CLM,SITE,IBM,IBIFN,IBIFN1,DFN,SEQ,DIE,DA,DR
"RTN","IBCEOB",73,0)
 S DIE=361.1,DA=IBEOB,DR="61.01////^S X=IB0" D ^DIE    ; archive the raw 06 record data
"RTN","IBCEOB",74,0)
 S CLM=$P(IB0,U,2),SITE=+CLM,CLM=$P(CLM,"-",2) I CLM="" D MSG(IBEOB,"The claim# in piece 2 is invalid.") G Q6
"RTN","IBCEOB",75,0)
 S IBM=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB",76,0)
 I $P(IBM,U,4)'=1 D MSG(IBEOB,"This is a non-Medicare EOB.") G Q6
"RTN","IBCEOB",77,0)
 S IBIFN=+$P(IBM,U,1)                    ; claim# from MRA
"RTN","IBCEOB",78,0)
 S IBIFN1=+$O(^DGCR(399,"B",CLM,""))     ; claim# from 06 record
"RTN","IBCEOB",79,0)
 I IBIFN'=IBIFN1 D MSG(IBEOB,"Claim mismatch error."_IBIFN_","_IBIFN1_","_CLM_".") G Q6
"RTN","IBCEOB",80,0)
 I $P($$SITE^VASITE,U,3)'=SITE D MSG(IBEOB,"Invalid station# mismatch."_$P($$SITE^VASITE,U,3)_","_SITE_".") G Q6
"RTN","IBCEOB",81,0)
 S SEQ=$$COBN^IBCEF(IBIFN)               ; current payer sequence# on claim
"RTN","IBCEOB",82,0)
 I '$$WNRBILL^IBEFUNC(IBIFN,SEQ) D MSG(IBEOB,"The current payer on this claim is not MEDICARE (WNR).") G Q6
"RTN","IBCEOB",83,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)   ; patient ien
"RTN","IBCEOB",84,0)
 I 'DFN D MSG(IBEOB,"The patient DFN cannot be determined.") G Q6
"RTN","IBCEOB",85,0)
 ;
"RTN","IBCEOB",86,0)
 D UPD^IBCEOB01(IB0,IBEOB,IBIFN,DFN,SEQ)     ; update patient insurance policy data
"RTN","IBCEOB",87,0)
 ;
"RTN","IBCEOB",88,0)
Q6 ; exit point for $$6 function
"RTN","IBCEOB",89,0)
 Q 1
"RTN","IBCEOB",90,0)
 ;
"RTN","IBCEOB",91,0)
10(IB0,IBEGBL,IBEOB) ; Record '10'
"RTN","IBCEOB",92,0)
 ;
"RTN","IBCEOB",93,0)
 N DA,DR,DIE,X,Y,VAL,IBOK,IB361
"RTN","IBCEOB",94,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",95,0)
 ; put denied non-MRA claims on the worklist IB*2.0*432
"RTN","IBCEOB",96,0)
 ;S IB361=$G(^IBM(361.1,DA,0))
"RTN","IBCEOB",97,0)
 ;I $P(IB361,U,4)=0,$P(IB0,U,4)="Y" D PUTONWL^IBCAPP($P(IB361,U),"IB804:EOB Claim Status must be PROCESSED")
"RTN","IBCEOB",98,0)
 S DR=".13////"_$S($P(IB0,U,3)="Y":1,$P(IB0,U,4)="Y":2,$P(IB0,U,5)="Y":3,$P(IB0,U,6)="Y":4,1:5)_";.21////"_$P(IB0,U,7)
"RTN","IBCEOB",99,0)
 S DR=DR_";2.04////"_$$DOLLAR($P(IB0,U,10))_";1.01////"_$$DOLLAR($P(IB0,U,11))_$S($P(IB0,U,12)'="":";.14///"_$P(IB0,U,12),1:"")
"RTN","IBCEOB",100,0)
 S DR=DR_$S($P(IB0,U,13)'="":";.1///"_$P(IB0,U,13),1:"")_";.11///"_($P(IB0,U,14)/10000)_";.12///"_($P(IB0,U,15)/100)
"RTN","IBCEOB",101,0)
 I $P(IB0,U,8)'="" S DR=DR_";.08////"_$P(IB0,U,8)_$S($P(IB0,U,9)'="":";.09///"_$P(IB0,U,9),1:"")
"RTN","IBCEOB",102,0)
 I HIPAA,$P(IB0,U,16) S DR=DR_";1.13///"_$$DATE^IBCEU($P(IB0,U,16))_";"      ; coverage exp. date
"RTN","IBCEOB",103,0)
 ;
"RTN","IBCEOB",104,0)
 D ^DIE
"RTN","IBCEOB",105,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB",106,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 10 data" G Q10
"RTN","IBCEOB",107,0)
 ;
"RTN","IBCEOB",108,0)
 ; File ICN in Bill
"RTN","IBCEOB",109,0)
 D ICN^IBCEOB00(IBEOB,$P(IB0,U,12),$P($G(^IBM(361.1,IBEOB,0)),U,15),.IBOK)
"RTN","IBCEOB",110,0)
 ;
"RTN","IBCEOB",111,0)
Q10 Q IBOK
"RTN","IBCEOB",112,0)
 ;
"RTN","IBCEOB",113,0)
12(IB0,IBEGL,IBEOB) ; Record '12'
"RTN","IBCEOB",114,0)
 ;
"RTN","IBCEOB",115,0)
 N DA,DR,DIE,X,Y,VAL,IBOK
"RTN","IBCEOB",116,0)
 I HIPAA'=5010 S IBOK=1 G Q12
"RTN","IBCEOB",117,0)
 S DIE="^IBM(361.1,",DA=IBEOB,DR=";"
"RTN","IBCEOB",118,0)
 I $P(IB0,U,3)'="" S DR=DR_"1.14////"_$P(IB0,U,3)_";"
"RTN","IBCEOB",119,0)
 I $P(IB0,U,4)'="" S DR=DR_"1.15////"_$P(IB0,U,4)_";"
"RTN","IBCEOB",120,0)
 I $P(IB0,U,5)'="" S DR=DR_"1.16////"_$P(IB0,U,5)_";"
"RTN","IBCEOB",121,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB",122,0)
 ;
"RTN","IBCEOB",123,0)
 D ^DIE
"RTN","IBCEOB",124,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB",125,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 12 data"
"RTN","IBCEOB",126,0)
 ;
"RTN","IBCEOB",127,0)
Q12 Q IBOK
"RTN","IBCEOB",128,0)
 ;
"RTN","IBCEOB",129,0)
13(IB0,IBEGL,IBEOB) ; Record '13'
"RTN","IBCEOB",130,0)
 ;
"RTN","IBCEOB",131,0)
 N DA,DR,DIE,X,Y,VAL,IBOK,NAME
"RTN","IBCEOB",132,0)
 I HIPAA'=5010 S IBOK=1 G Q13
"RTN","IBCEOB",133,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",134,0)
 S NAME=$P(IB0,U,3) I NAME="" S IBOK=1 G Q13
"RTN","IBCEOB",135,0)
 I $P(IB0,U,4)'="" S NAME=NAME_","_$P(IB0,U,4)
"RTN","IBCEOB",136,0)
 I $P(IB0,U,5)'="" S NAME=NAME_","_$P(IB0,U,5)
"RTN","IBCEOB",137,0)
 S DR="1.17////"_NAME ; Other Subscriber Name
"RTN","IBCEOB",138,0)
 ;
"RTN","IBCEOB",139,0)
 D ^DIE
"RTN","IBCEOB",140,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB",141,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 13 data"
"RTN","IBCEOB",142,0)
 ;
"RTN","IBCEOB",143,0)
Q13 Q IBOK
"RTN","IBCEOB",144,0)
 ;
"RTN","IBCEOB",145,0)
15(IB0,IBEGBL,IBEOB) ; Record '15'
"RTN","IBCEOB",146,0)
 ; Moved due to space constraints
"RTN","IBCEOB",147,0)
Q15 Q $$15^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",148,0)
 ;
"RTN","IBCEOB",149,0)
17(IB0,IBEGBL,IBEOB) ; Record '17'
"RTN","IBCEOB",150,0)
 N A,DATA,IBOK
"RTN","IBCEOB",151,0)
 ;Old Format
"RTN","IBCEOB",152,0)
 S DATA=IB0
"RTN","IBCEOB",153,0)
 ;New Format - store incoming data in first available field
"RTN","IBCEOB",154,0)
 I HIPAA>0 D
"RTN","IBCEOB",155,0)
 .N CNT
"RTN","IBCEOB",156,0)
 .S CNT=4,DATA=$P(DATA,U,1,3) ;Claim Contact Name
"RTN","IBCEOB",157,0)
 .I $P(IB0,U,4)'="" S $P(DATA,U,CNT)=$P(IB0,U,4),$P(DATA,U,CNT+1)="TE",CNT=CNT+2 ;Tel
"RTN","IBCEOB",158,0)
 .I $P(IB0,U,5)'="" S $P(DATA,U,CNT)=$P(IB0,U,5),$P(DATA,U,CNT+1)="FX",CNT=CNT+2 ;Fax
"RTN","IBCEOB",159,0)
 .I $P(IB0,U,6)'="" S $P(DATA,U,CNT)=$P(IB0,U,6),$P(DATA,U,CNT+1)="EM" ;email
"RTN","IBCEOB",160,0)
 ;
"RTN","IBCEOB",161,0)
 S A="3;25.01;0;1;0^4;25.02;0;1;0^5;25.03;0;1;0^6;25.04;0;1;0^7;25.05;0;1;0^8;25.06;0;1;0^9;25.07;0;1;0"
"RTN","IBCEOB",162,0)
 S IBOK=$$STORE^IBCEOB1(A,DATA,IBEOB)
"RTN","IBCEOB",163,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 17 data"
"RTN","IBCEOB",164,0)
Q17 Q IBOK
"RTN","IBCEOB",165,0)
 ;
"RTN","IBCEOB",166,0)
20(IB0,IBEGBL,IBEOB) ; Record '20'
"RTN","IBCEOB",167,0)
 ; Moved due to space constraints
"RTN","IBCEOB",168,0)
Q20 Q $$20^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",169,0)
 ;
"RTN","IBCEOB",170,0)
30(IB0,IBEGBL,IBEOB) ; Record '30'
"RTN","IBCEOB",171,0)
 ;
"RTN","IBCEOB",172,0)
 N IBOK
"RTN","IBCEOB",173,0)
 D 30^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",174,0)
Q30 Q $G(IBOK)
"RTN","IBCEOB",175,0)
 ;
"RTN","IBCEOB",176,0)
35(IB0,IBEGBL,IBEOB) ; Record '35'
"RTN","IBCEOB",177,0)
 ; Moved due to space constraints
"RTN","IBCEOB",178,0)
Q35 Q $$35^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",179,0)
 ;
"RTN","IBCEOB",180,0)
37(IB0,IBEGBL,IBEOB) ; Record '37'
"RTN","IBCEOB",181,0)
 ; Moved due to space constraints
"RTN","IBCEOB",182,0)
Q37 Q $$37^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",183,0)
 ;
"RTN","IBCEOB",184,0)
40(IB0,IBEGBL,IBEOB) ; Record '40'
"RTN","IBCEOB",185,0)
 ;
"RTN","IBCEOB",186,0)
 N IBOK
"RTN","IBCEOB",187,0)
 D 40^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",188,0)
Q40 Q $G(IBOK)
"RTN","IBCEOB",189,0)
 ;
"RTN","IBCEOB",190,0)
41(IB0,IBEGBL,IBEOB) ; Record '41'
"RTN","IBCEOB",191,0)
 ;
"RTN","IBCEOB",192,0)
 N IBOK
"RTN","IBCEOB",193,0)
 D 41^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",194,0)
Q41 Q $G(IBOK)
"RTN","IBCEOB",195,0)
 ;
"RTN","IBCEOB",196,0)
42(IB0,IBEGBL,IBEOB) ; Record '42'
"RTN","IBCEOB",197,0)
 ;
"RTN","IBCEOB",198,0)
 N IBOK
"RTN","IBCEOB",199,0)
 D 42^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",200,0)
Q42 Q $G(IBOK)
"RTN","IBCEOB",201,0)
 ;
"RTN","IBCEOB",202,0)
45(IB0,IBEGBL,IBEOB) ; Record '45'
"RTN","IBCEOB",203,0)
 ;
"RTN","IBCEOB",204,0)
 N IBOK
"RTN","IBCEOB",205,0)
 D 45^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",206,0)
 Q $G(IBOK)
"RTN","IBCEOB",207,0)
 ;
"RTN","IBCEOB",208,0)
 ;
"RTN","IBCEOB",209,0)
46(IB0,IBEGBL,IBEOB) ; Record '46'
"RTN","IBCEOB",210,0)
 ;
"RTN","IBCEOB",211,0)
 N IBOK
"RTN","IBCEOB",212,0)
 I HIPAA'=5010 S IBOK=1 G Q46
"RTN","IBCEOB",213,0)
 D 46^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",214,0)
Q46 Q $G(IBOK)
"RTN","IBCEOB",215,0)
 ;
"RTN","IBCEOB",216,0)
MSG(IBEOB,MSG) ; procedure to file message into field 6.03
"RTN","IBCEOB",217,0)
 ; Results of processing of the "06" record type
"RTN","IBCEOB",218,0)
 N DIE,DA,DR,Z
"RTN","IBCEOB",219,0)
 S DIE=361.1,DA=+$G(IBEOB)
"RTN","IBCEOB",220,0)
 I $G(MSG)="" G MSGX
"RTN","IBCEOB",221,0)
 S Z=$P($G(^IBM(361.1,DA,6)),U,3)    ; already existing message
"RTN","IBCEOB",222,0)
 I Z'="" S MSG=Z_"  "_MSG            ; append new message to existing message
"RTN","IBCEOB",223,0)
 S MSG=$E(MSG,1,190)
"RTN","IBCEOB",224,0)
 S DR="6.03///^S X=MSG"
"RTN","IBCEOB",225,0)
 D ^DIE
"RTN","IBCEOB",226,0)
MSGX ;
"RTN","IBCEOB",227,0)
 Q
"RTN","IBCEOB",228,0)
 ;
"RTN","IBCEOB",229,0)
DOLLAR(X) ; Convert value in X to dollar format XXX.XX
"RTN","IBCEOB",230,0)
 Q $S(+X:$J(X/100,$L(+X),2),1:0)
"RTN","IBCEOB",231,0)
 ;
"RTN","IBCEOB",232,0)
ADD3611(IBMNUM,IBTBILL,IBBATCH,X,IBAR,IBFILE) ; Add stub record to file 361.1
"RTN","IBCEOB",233,0)
 ; X = the ien of the referenced bill in file 399
"RTN","IBCEOB",234,0)
 ; IBTBILL = ien of transmitted bill (optional)
"RTN","IBCEOB",235,0)
 ; IBBATCH = ien of batch # the transmitted bill was in (optional)
"RTN","IBCEOB",236,0)
 ; IBMNUM = the message # from which this record originally came
"RTN","IBCEOB",237,0)
 ; IBAR = 1 only if called from AR
"RTN","IBCEOB",238,0)
 ; IBFILE = array reference of raw EOB data
"RTN","IBCEOB",239,0)
 ;
"RTN","IBCEOB",240,0)
 N DIC,DA,DR,DO,DD,DLAYGO,Y,REVSTAT,BS,MMI
"RTN","IBCEOB",241,0)
 F  L +^IBM(361.1,0):10 Q:$T
"RTN","IBCEOB",242,0)
 ;
"RTN","IBCEOB",243,0)
 ; default proper review status
"RTN","IBCEOB",244,0)
 S BS=$P($G(^DGCR(399,X,0)),U,13)   ; bill status
"RTN","IBCEOB",245,0)
 S REVSTAT=$S(BS=7:9,BS=3:3,BS=4:3,1:0)
"RTN","IBCEOB",246,0)
 S MMI=$$NET^XMRENT(IBMNUM)         ; MailMan header info
"RTN","IBCEOB",247,0)
 S DIC(0)="L",DIC="^IBM(361.1,",DLAYGO=361.1
"RTN","IBCEOB",248,0)
 S DIC("DR")=".16////"_REVSTAT_";.17////0"_";100.02////"_IBMNUM_$S('$G(IBAR):";.19////"_+IBTBILL_";100.01////"_IBBATCH,1:"")
"RTN","IBCEOB",249,0)
 S DIC("DR")=DIC("DR")_";100.05////"_$$CHKSUM^IBCEMU1(IBFILE)_";62.01////^S X=MMI"
"RTN","IBCEOB",250,0)
 D FILE^DICN
"RTN","IBCEOB",251,0)
 L -^IBM(361.1,0)
"RTN","IBCEOB",252,0)
 Q +Y
"RTN","IBCEOB",253,0)
 ;
"RTN","IBCEOB",254,0)
UPD3611(IBEOB,IBTDA,IBAR) ; From flat file 835 format, add EOB record
"RTN","IBCEOB",255,0)
 ; IBEOB = the ien of the entry in file 361.1 being updated
"RTN","IBCEOB",256,0)
 ; IBTDA = the ien in the source file
"RTN","IBCEOB",257,0)
 ; IBAR = 1 if being called from AR
"RTN","IBCEOB",258,0)
 N HIPAA,IBA1,IBFILE,IBEGBL,Z,IBREC,Q,DASHES
"RTN","IBCEOB",259,0)
 S IBFILE=$S('$G(IBAR):"^IBA(364.2,"_IBTDA_",2)",1:"^TMP("_$J_",""RCDP-EOB"","_IBTDA_")")
"RTN","IBCEOB",260,0)
 S IBEGBL=$S('$G(IBAR):"IBCERR-EOB",1:"RCDPERR-EOB")
"RTN","IBCEOB",261,0)
 S DASHES="---------------------------------------------------------------------"
"RTN","IBCEOB",262,0)
 S HIPAA=0
"RTN","IBCEOB",263,0)
 I $G(IBAR),'$$HDR^IBCEOB1($G(^TMP($J,"RCDPEOB","HDR")),IBEGBL,IBEOB,.HIPAA) Q
"RTN","IBCEOB",264,0)
 S IBA1=0
"RTN","IBCEOB",265,0)
 F  S IBA1=$O(@IBFILE@(IBA1)) Q:'IBA1  S IB0=$S('$G(IBAR):$P($G(^(IBA1,0)),"##RAW DATA: ",2),1:$G(@IBFILE@(IBA1,0))) I IB0'="" D
"RTN","IBCEOB",266,0)
 . S IBREC=+IB0
"RTN","IBCEOB",267,0)
 . I IBREC'=37 K ^TMP($J,37)
"RTN","IBCEOB",268,0)
 . ;;;I IBREC S IB="S IBOK=$$"_IBREC_"(IB0,IBEGBL,IBEOB)",Q=IBREC_"^IBCEOB" I $T(@Q)'="" X IB S:'IBOK ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=$S('$G(IBAR):"  ##RAW DATA: ",1:"")_IB0
"RTN","IBCEOB",269,0)
 . I IBREC S IB="S IBOK=$$"_IBREC_"(IB0,IBEGBL,IBEOB)",Q=IBREC_"^IBCEOB" I $T(@Q)'="" X IB S:'IBOK ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=DASHES
"RTN","IBCEOB",270,0)
 ; If a DENIED non MRA EOB with no filing errors is updated, put on the CBW worklist if the 
"RTN","IBCEOB",271,0)
 ; claim isn't already COLLECTED/CLOSED and there is a subsequent payer (incl. Tricare & ChampVA)
"RTN","IBCEOB",272,0)
 I IBEOB,'$O(^TMP(IBEGBL,$J,0)) D
"RTN","IBCEOB",273,0)
 .N IB361,IBIFN,IBX,IBTXT,IBPYMT
"RTN","IBCEOB",274,0)
 .; must be non-MRA EOB and DENIED
"RTN","IBCEOB",275,0)
 .S IB361=$G(^IBM(361.1,IBEOB,0)),IBIFN=$P(IB361,U) Q:$P(IB361,U,4)'=0
"RTN","IBCEOB",276,0)
 .Q:$P(IB361,U,13)'=2
"RTN","IBCEOB",277,0)
 .Q:$P($$ARSTATA^IBJTU4(IBIFN),U)="COLLECTED/CLOSED"
"RTN","IBCEOB",278,0)
 .; payment on this bill from A/R IA#380 OR payer paid amount from EOB
"RTN","IBCEOB",279,0)
 .S IBPYMT=$$TPR^PRCAFN(IBIFN) S:IBPYMT="" IBPYMT=+$G(^IBM(361.1,IBEOB,1))
"RTN","IBCEOB",280,0)
 .; check for subsequent payer
"RTN","IBCEOB",281,0)
 .S IBX=$$EOB^IBCNSBL2($G(IBIFN),+$G(^DGCR(399,IBIFN,"U1")),$G(IBPYMT),.IBTXT) Q:'$D(IBTXT)
"RTN","IBCEOB",282,0)
 .D PUTONWL^IBCAPP($P(IB361,U),"IB804:EOB Claim Status must be PROCESSED")
"RTN","IBCEOB",283,0)
 ;
"RTN","IBCEOB",284,0)
 Q
"RTN","IBCEOB",285,0)
 ;
"RTN","IBCEOB",286,0)
ERRUPD(IBEOB,IBEGBL) ; Update error text in entry, if needed
"RTN","IBCEOB",287,0)
 D WP^DIE(361.1,IBEOB_",",20,"","^TMP(IBEGBL,$J)","")
"RTN","IBCEOB",288,0)
 Q
"RTN","IBCEOB",289,0)
 ;
"RTN","IBCEOB",290,0)
 ;
"RTN","IBCEOB",291,0)
DUP(IBARRAY,IBIFN) ; Duplicate Check
"RTN","IBCEOB",292,0)
 ; This function determines if the EOB data already exists in file
"RTN","IBCEOB",293,0)
 ; 361.1 by comparing the checksums of the raw 835 data.
"RTN","IBCEOB",294,0)
 ;
"RTN","IBCEOB",295,0)
 ; IBARRAY = Literal array reference where the raw 835 data exists.
"RTN","IBCEOB",296,0)
 ;           The data exists at @IBARRAY@(n,0), where n is the seq#.
"RTN","IBCEOB",297,0)
 ;           For example, IBARRAY = "^IBA(364.2,IBIEN,2)"
"RTN","IBCEOB",298,0)
 ;
"RTN","IBCEOB",299,0)
 ; IBIFN = the bill # (ptr to 399).  The checksums of the EOB's on 
"RTN","IBCEOB",300,0)
 ;         file for this bill will be compared to the checksum of the
"RTN","IBCEOB",301,0)
 ;         835 raw data in the IBARRAY reference.
"RTN","IBCEOB",302,0)
 ;
"RTN","IBCEOB",303,0)
 ; This function returns 0 if the entry is not found (no duplicate),
"RTN","IBCEOB",304,0)
 ; Otherwise, the IEN of the entry in file 361.1 is returned if this
"RTN","IBCEOB",305,0)
 ; is a duplicate EOB.
"RTN","IBCEOB",306,0)
 ;
"RTN","IBCEOB",307,0)
 NEW DUP,IBEOB,CHKSUM1,CHKSUM2
"RTN","IBCEOB",308,0)
 S DUP=0,IBIFN=+$G(IBIFN)
"RTN","IBCEOB",309,0)
 I $G(IBARRAY)=""!'IBIFN G DUPX
"RTN","IBCEOB",310,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G DUPX     ; no EOB's on file yet
"RTN","IBCEOB",311,0)
 S CHKSUM1=$$CHKSUM^IBCEMU1(IBARRAY)     ; checksum of current EOB
"RTN","IBCEOB",312,0)
 I 'CHKSUM1 G DUPX                       ; must be able to be calculated
"RTN","IBCEOB",313,0)
 S IBEOB=0
"RTN","IBCEOB",314,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  Q:DUP
"RTN","IBCEOB",315,0)
 . S CHKSUM2=+$P($G(^IBM(361.1,IBEOB,100)),U,5)   ; checksum of old EOB
"RTN","IBCEOB",316,0)
 . I 'CHKSUM2 Q
"RTN","IBCEOB",317,0)
 . I CHKSUM1=CHKSUM2 S DUP=IBEOB Q                    ; comparison
"RTN","IBCEOB",318,0)
 . Q
"RTN","IBCEOB",319,0)
DUPX ;
"RTN","IBCEOB",320,0)
 Q DUP
"RTN","IBCEOB",321,0)
 ;
"RTN","IBCEOB0")
0^8^B90917821^B83008311
"RTN","IBCEOB0",1,0)
IBCEOB0 ;ALB/TMP/PJH - 835 EDI EOB MSG PROCESSING ; 8/24/10 7:23pm
"RTN","IBCEOB0",2,0)
 ;;2.0;INTEGRATED BILLING;**135,280,155,431,488**;21-MAR-94;Build 184
"RTN","IBCEOB0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEOB0",4,0)
 Q
"RTN","IBCEOB0",5,0)
 ;
"RTN","IBCEOB0",6,0)
LINE() ;Extract Provider Line Reference from 42 record
"RTN","IBCEOB0",7,0)
 N SUB,NODE,VAL
"RTN","IBCEOB0",8,0)
 S VAL="",SUB=IBA1 ; from loop in UPD3611^IBCEOB
"RTN","IBCEOB0",9,0)
 F  S SUB=$O(@IBFILE@(SUB)) Q:SUB=""  D  Q:+NODE>42
"RTN","IBCEOB0",10,0)
 .S NODE=$G(@IBFILE@(SUB,0))
"RTN","IBCEOB0",11,0)
 .S:NODE["RAW DATA" NODE=$P(NODE," ",3,99)
"RTN","IBCEOB0",12,0)
 .Q:+NODE'=42  S VAL=$P(NODE,U,5)
"RTN","IBCEOB0",13,0)
 Q VAL
"RTN","IBCEOB0",14,0)
 ;
"RTN","IBCEOB0",15,0)
30(IB0,IBEOB,IBOK) ; Process record type 30 for EOB
"RTN","IBCEOB0",16,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",17,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",18,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",19,0)
 ;
"RTN","IBCEOB0",20,0)
 N A
"RTN","IBCEOB0",21,0)
 S A="3;4.01;0;1;1^5;4.02;0;1;1^6;4.03;1;0;0^7;4.05;1;0;0^8;4.06;1;0;0^9;4.07;1;0;0^10;4.08;1;0;0^11;4.09;1;0;0^12;4.1;1;0;0^13;4.11;1;0;0^14;4.19;0;1;1"
"RTN","IBCEOB0",22,0)
 ;
"RTN","IBCEOB0",23,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB0",24,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad MEDICARE Inpt Adjudication data"
"RTN","IBCEOB0",25,0)
Q30 Q
"RTN","IBCEOB0",26,0)
 ;
"RTN","IBCEOB0",27,0)
40(IB0,IBEOB,IBOK) ; Process record type 40 for EOB
"RTN","IBCEOB0",28,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",29,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",30,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",31,0)
 ;
"RTN","IBCEOB0",32,0)
 ; IBZDATA is also assumed to exist or if not, it is created in FINDLN
"RTN","IBCEOB0",33,0)
 ;
"RTN","IBCEOB0",34,0)
 N A,LEVEL,IBSEQ,IBDA,IBPC,IBLREF,IBIFN,Q,X,Y,DA,DD,DO,DIC,DLAYGO,PLREF,ERRCOD
"RTN","IBCEOB0",35,0)
 K ^TMP($J,40) ; the entry # for corresponding 41, 42, and 45 records
"RTN","IBCEOB0",36,0)
 ;
"RTN","IBCEOB0",37,0)
 S IBIFN=+$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB0",38,0)
 L +^IBM(361.1,IBEOB,15):0 I $T S IBSEQ=+$O(^IBM(361.1,IBEOB,15," "),-1)+1
"RTN","IBCEOB0",39,0)
 I '$G(IBSEQ) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Record lock failure - could not acquire next service line number" G Q40
"RTN","IBCEOB0",40,0)
 ;
"RTN","IBCEOB0",41,0)
 ; Update the 40 record data a little bit (pieces 3/4/16)
"RTN","IBCEOB0",42,0)
 I $P(IB0,U,21)="NU" S $P(IB0,U,4)=$P(IB0,U,3),$P(IB0,U,3)=""
"RTN","IBCEOB0",43,0)
 S $P(IB0,U,16)=$S(+$P(IB0,U,16):$P(IB0,U,16)/100,1:+$P(IB0,U,18)/100)
"RTN","IBCEOB0",44,0)
 I $P(IB0,U,4)?1.N S $P(IB0,U,4)=+$P(IB0,U,4)
"RTN","IBCEOB0",45,0)
 ;
"RTN","IBCEOB0",46,0)
 ; Find the line item from original bill for this adjustment
"RTN","IBCEOB0",47,0)
 S PLREF=$S('HIPAA:$P(IB0,U,22),1:$$LINE()) ; old format from 40 record, new format from 42
"RTN","IBCEOB0",48,0)
 S ERRCOD=0
"RTN","IBCEOB0",49,0)
 S IBLREF=+$$FINDLN^IBCEOB1(IB0,IBEOB,.IBZDATA,+PLREF,.ERRCOD)
"RTN","IBCEOB0",50,0)
 I 'IBLREF D  G Q40
"RTN","IBCEOB0",51,0)
 . N Z,Z0,CT,ETEXT
"RTN","IBCEOB0",52,0)
 . S EFLAG=0,ETEXT=""
"RTN","IBCEOB0",53,0)
 . ;;S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line detail could not be matched to a billed item"
"RTN","IBCEOB0",54,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=" "
"RTN","IBCEOB0",55,0)
 . S ETEXT=$P("Revenue Code^Procedure Code^Amount of Units^Charge Amount^Procedure Code Modifier",U,+ERRCOD)
"RTN","IBCEOB0",56,0)
 . I ETEXT="" S ETEXT="Data"
"RTN","IBCEOB0",57,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Mismatched "_ETEXT_":"
"RTN","IBCEOB0",58,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=" "
"RTN","IBCEOB0",59,0)
 . D DET40^IBCEOB00(IB0,.Z0,ERRCOD)
"RTN","IBCEOB0",60,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",61,0)
 ;
"RTN","IBCEOB0",62,0)
 S DIC="^IBM(361.1,"_IBEOB_",15,",DIC(0)="L",DLAYGO=361.115,DA(1)=IBEOB
"RTN","IBCEOB0",63,0)
 S X=IBSEQ
"RTN","IBCEOB0",64,0)
 S DIC("DR")=".12////"_+IBLREF_$S($P(IBLREF,U,2)="":"",1:";.15////"_$P(IBLREF,U,2))_";.16////"_$$DATE^IBCEU($P(IB0,U,19))_$S($P(IB0,U,20):";.17////"_$$DATE^IBCEU($P(IB0,U,20)),1:"")
"RTN","IBCEOB0",65,0)
 D FILE^DICN K DIC,DO,DD,DLAYGO ;Add a new LINE LEVEL ADJUSTMENT ('SVC')
"RTN","IBCEOB0",66,0)
 I Y<0 S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add a LINE LEVEL ADJUSTMENT ("_IBSEQ_")" G Q40
"RTN","IBCEOB0",67,0)
 ;
"RTN","IBCEOB0",68,0)
 L -^IBM(361.1,IBEOB,15)
"RTN","IBCEOB0",69,0)
 ;
"RTN","IBCEOB0",70,0)
 S LEVEL=15.1,LEVEL(0)=+Y,LEVEL(1)=IBEOB,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",15,"
"RTN","IBCEOB0",71,0)
 S A="3;.04;0;0;0^4;.1;0;0;0^9;.09;0;0;0^17;.03;1;0;0^18;.11;0;1;D2^21;.18;0;0;0"
"RTN","IBCEOB0",72,0)
 I '$P(IB0,U,18),$P(IB0,U,16) S $P(A,U,5)="16;.11;0;1;1"
"RTN","IBCEOB0",73,0)
 I $$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL) S ^TMP($J,40)=LEVEL(0),IBOK=1
"RTN","IBCEOB0",74,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for line level adjustment "_IBSEQ G Q40
"RTN","IBCEOB0",75,0)
 ;
"RTN","IBCEOB0",76,0)
 ; Store modifiers in multiple
"RTN","IBCEOB0",77,0)
 S DIC="^IBM(361.1,"_IBEOB_",15,"_LEVEL(0)_",2,",DIC(0)="L",DLAYGO=361.1152,DA(2)=IBEOB,DA(1)=LEVEL(0)
"RTN","IBCEOB0",78,0)
 F Q=5:1:8 S X=$P(IB0,U,Q) I X'="" D FILE^DICN K DO,DD I Y<0 S IBOK=0 Q
"RTN","IBCEOB0",79,0)
 K DLAYGO,DIC,DR,DA
"RTN","IBCEOB0",80,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file modifier data for line level adjustment "_IBSEQ G Q40
"RTN","IBCEOB0",81,0)
Q40 Q
"RTN","IBCEOB0",82,0)
 ;
"RTN","IBCEOB0",83,0)
41(IB0,IBEOB,IBOK) ; Process record type 41 for EOB
"RTN","IBCEOB0",84,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",85,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",86,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",87,0)
 ;
"RTN","IBCEOB0",88,0)
 N DA,DR,DIE,X,Y,Z,Z0,CT
"RTN","IBCEOB0",89,0)
 I '$G(^TMP($J,40)) D  G Q41
"RTN","IBCEOB0",90,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 41) has no matching service line"
"RTN","IBCEOB0",91,0)
 . D DET4X^IBCEOB00(41,IB0,.Z0)
"RTN","IBCEOB0",92,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",93,0)
 ;
"RTN","IBCEOB0",94,0)
 S DR="",IBOK=1
"RTN","IBCEOB0",95,0)
 S DA=+^TMP($J,40),DA(1)=IBEOB
"RTN","IBCEOB0",96,0)
 S DIE="^IBM(361.1,"_DA(1)_",15,"
"RTN","IBCEOB0",97,0)
 I +$P(IB0,U,3) S DR=".13///"_$$DOLLAR^IBCEOB($P(IB0,U,3))
"RTN","IBCEOB0",98,0)
 I +$P(IB0,U,4) S DR=DR_$S(DR="":"",1:";")_".14///"_$$DOLLAR^IBCEOB($P(IB0,U,4))
"RTN","IBCEOB0",99,0)
 I DR'="" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB0",100,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Mismatched data for service line adjustment-2 (EEOB Record 41)"
"RTN","IBCEOB0",101,0)
 ;
"RTN","IBCEOB0",102,0)
 ; For Medicare MRA's only:
"RTN","IBCEOB0",103,0)
 ; If the Allowed Amount field is present, then we need to file an
"RTN","IBCEOB0",104,0)
 ; adjustment:  Group code PR, Reason code AAA, Amount, Quantity, and
"RTN","IBCEOB0",105,0)
 ; Reason Text.  This is data normally found on the 45 record, so we're
"RTN","IBCEOB0",106,0)
 ; going to create our own "45" record and file it.
"RTN","IBCEOB0",107,0)
 ;
"RTN","IBCEOB0",108,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,+$P(IB0,U,3) D
"RTN","IBCEOB0",109,0)
 . N IB45,IBSAV40
"RTN","IBCEOB0",110,0)
 . S IB45=45_U_$P(IB0,U,2)_U_"PR"_U_"AAA"_U_$P(IB0,U,3)_U_"0000000001"
"RTN","IBCEOB0",111,0)
 . S IB45=IB45_U_"Allowed Amount"
"RTN","IBCEOB0",112,0)
 . S IBSAV40=$G(^TMP($J,40))
"RTN","IBCEOB0",113,0)
 . D 45(IB45,IBEOB,.IBOK)
"RTN","IBCEOB0",114,0)
 . S ^TMP($J,40)=IBSAV40
"RTN","IBCEOB0",115,0)
 . I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file the PR-AAA adjustment for the Allowed Amount at line "_+^TMP($J,40)
"RTN","IBCEOB0",116,0)
 . Q
"RTN","IBCEOB0",117,0)
 ;
"RTN","IBCEOB0",118,0)
Q41 Q
"RTN","IBCEOB0",119,0)
 ;
"RTN","IBCEOB0",120,0)
42(IB0,IBEOB,IBOK) ; Process record type 42 for EOB 
"RTN","IBCEOB0",121,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",122,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",123,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",124,0)
 ;
"RTN","IBCEOB0",125,0)
 N DO,DD,DLAYGO,DIC,DA,X,Y,Z,Z0,CT
"RTN","IBCEOB0",126,0)
 S IBOK=0
"RTN","IBCEOB0",127,0)
 I '$G(^TMP($J,40)) D  G Q42
"RTN","IBCEOB0",128,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 42) has no matching service line"
"RTN","IBCEOB0",129,0)
 . D DET4X^IBCEOB00(42,IB0,.Z0)
"RTN","IBCEOB0",130,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",131,0)
 ;
"RTN","IBCEOB0",132,0)
 K DO,DD,DLAYGO
"RTN","IBCEOB0",133,0)
 S IBOK=1
"RTN","IBCEOB0",134,0)
 S DA(1)=+^TMP($J,40),DA(2)=IBEOB
"RTN","IBCEOB0",135,0)
 S X=+$O(^IBM(361.1,DA(2),15,DA(1),4," "),-1)+1,DIC="^IBM(361.1,"_DA(2)_",15,"_DA(1)_",4,",DIC(0)="L",DLAYGO=361.1154
"RTN","IBCEOB0",136,0)
 S DIC("DR")=$S($P(IB0,U,3)'="":".02////"_$P(IB0,U,3),1:"")
"RTN","IBCEOB0",137,0)
 I $P(IB0,U,4)'="" S:$L(DIC("DR")) DIC("DR")=DIC("DR")_";" S DIC("DR")=DIC("DR")_".03////"_$TR($P(IB0,U,4),";"," ")
"RTN","IBCEOB0",138,0)
 D FILE^DICN K DO,DD,DLAYGO
"RTN","IBCEOB0",139,0)
 I Y'>0 S IBOK=0
"RTN","IBCEOB0",140,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Mismatched data for service line adjustment-3 (EEOB Record 42)"
"RTN","IBCEOB0",141,0)
 ;
"RTN","IBCEOB0",142,0)
 ; For Medicare MRA's only:
"RTN","IBCEOB0",143,0)
 ; Process and store the line level remark code as an LQ kludge line
"RTN","IBCEOB0",144,0)
 ; level adjustment.
"RTN","IBCEOB0",145,0)
 ;
"RTN","IBCEOB0",146,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$P(IB0,U,3)'="" D
"RTN","IBCEOB0",147,0)
 . N IB45,IBSAV40
"RTN","IBCEOB0",148,0)
 . S IB45=45_U_$P(IB0,U,2)_U_"LQ"_U_$P(IB0,U,3)_U_0_U_0_U_$P(IB0,U,4)
"RTN","IBCEOB0",149,0)
 . S IBSAV40=$G(^TMP($J,40))
"RTN","IBCEOB0",150,0)
 . D 45(IB45,IBEOB,.IBOK)
"RTN","IBCEOB0",151,0)
 . S ^TMP($J,40)=IBSAV40
"RTN","IBCEOB0",152,0)
 . I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file the LQ-remark code adjustment at line "_+^TMP($J,40)
"RTN","IBCEOB0",153,0)
 . Q
"RTN","IBCEOB0",154,0)
Q42 Q
"RTN","IBCEOB0",155,0)
 ;
"RTN","IBCEOB0",156,0)
45(IB0,IBEOB,IBOK) ; Process record type 45 for EOB 
"RTN","IBCEOB0",157,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",158,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",159,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",160,0)
 ;
"RTN","IBCEOB0",161,0)
 N IBDA,LEVEL,A,Z0,CT,Z
"RTN","IBCEOB0",162,0)
 I '$G(^TMP($J,40)) D  G Q45
"RTN","IBCEOB0",163,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 45) has no matching service line"
"RTN","IBCEOB0",164,0)
 . D DET4X^IBCEOB00(45,IB0,.Z0)
"RTN","IBCEOB0",165,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",166,0)
 ;
"RTN","IBCEOB0",167,0)
 I $P(IB0,U,3)'="" S $P(^TMP($J,40),U,2)=$P(IB0,U,3)
"RTN","IBCEOB0",168,0)
 I $P(IB0,U,3)="" S $P(IB0,U,3)=$P(^TMP($J,40),U,2)
"RTN","IBCEOB0",169,0)
 I $P(IB0,U,3)="" S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 45) is missing its group code" G Q45
"RTN","IBCEOB0",170,0)
 ;
"RTN","IBCEOB0",171,0)
 S IBDA(2)=+^TMP($J,40)
"RTN","IBCEOB0",172,0)
 S IBDA(1)=+$O(^IBM(361.1,IBEOB,15,IBDA(2),1,"B",$P(IB0,U,3),0))
"RTN","IBCEOB0",173,0)
 ;
"RTN","IBCEOB0",174,0)
 I 'IBDA(1) D  ;Needs a new entry at group level
"RTN","IBCEOB0",175,0)
 . N X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB0",176,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,",DIC(0)="L",DLAYGO=361.1151,DA(2)=IBEOB,DA(1)=IBDA(2)
"RTN","IBCEOB0",177,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.115,1)
"RTN","IBCEOB0",178,0)
 . S X=$P(IB0,U,3)
"RTN","IBCEOB0",179,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",180,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",181,0)
 . S IBDA(1)=+Y
"RTN","IBCEOB0",182,0)
 ;
"RTN","IBCEOB0",183,0)
 ;Add a new entry at the reason code level
"RTN","IBCEOB0",184,0)
 I $G(IBDA(1)) D
"RTN","IBCEOB0",185,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",1,",DIC(0)="L",DLAYGO=361.11511,DA(1)=IBDA(1),DA(2)=IBDA(2),DA(3)=IBEOB
"RTN","IBCEOB0",186,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1151,1)
"RTN","IBCEOB0",187,0)
 . S X=$P(IB0,U,4)
"RTN","IBCEOB0",188,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",189,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add reason code ("_$P(IB0,U,4)_") for adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",190,0)
 . S IBDA=+Y
"RTN","IBCEOB0",191,0)
 ;
"RTN","IBCEOB0",192,0)
 I $G(IBDA) D
"RTN","IBCEOB0",193,0)
 . S LEVEL=15,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",1,"
"RTN","IBCEOB0",194,0)
 . S LEVEL(0)=IBDA,LEVEL(1)=IBDA(1),LEVEL(2)=IBDA(2),LEVEL(3)=IBEOB
"RTN","IBCEOB0",195,0)
 . S A="5;.02;1;0;0^6;.03;0;1;1^7;.04;0;1;0"
"RTN","IBCEOB0",196,0)
 . S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL)
"RTN","IBCEOB0",197,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Mismatched data for reason code ("_$P(IB0,U,4)_"), adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",198,0)
 ;
"RTN","IBCEOB0",199,0)
Q45 Q
"RTN","IBCEOB0",200,0)
 ;
"RTN","IBCEOB0",201,0)
46(IB0,IBEOB,IBOK) ; Process record type 46 for EOB 
"RTN","IBCEOB0",202,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",203,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",204,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",205,0)
 ;
"RTN","IBCEOB0",206,0)
 S IBOK=0
"RTN","IBCEOB0",207,0)
 N AGC,IBDA,LEVEL,A,Z0,CT,Z
"RTN","IBCEOB0",208,0)
 I '$G(^TMP($J,40)) D  G Q46
"RTN","IBCEOB0",209,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 46) has no matching service line"
"RTN","IBCEOB0",210,0)
 . D DET4X^IBCEOB00(46,IB0,.Z0)
"RTN","IBCEOB0",211,0)
 . ;S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",212,0)
 ;
"RTN","IBCEOB0",213,0)
 S AGC=$P(^TMP($J,40),U,2)
"RTN","IBCEOB0",214,0)
 I AGC="" S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 46) is missing its group code" G Q46
"RTN","IBCEOB0",215,0)
 ;
"RTN","IBCEOB0",216,0)
 S IBDA(2)=+^TMP($J,40)
"RTN","IBCEOB0",217,0)
 S IBDA(1)=+$O(^IBM(361.1,IBEOB,15,IBDA(2),1,"B",AGC,0))
"RTN","IBCEOB0",218,0)
 ;
"RTN","IBCEOB0",219,0)
 ;
"RTN","IBCEOB0",220,0)
 ;Add a new entry at the Payer Policy level
"RTN","IBCEOB0",221,0)
 I $G(IBDA(1)) D
"RTN","IBCEOB0",222,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",2,",DIC(0)="L",DLAYGO=361.11511,DA(1)=IBDA(1),DA(2)=IBDA(2),DA(3)=IBEOB
"RTN","IBCEOB0",223,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1151,1)
"RTN","IBCEOB0",224,0)
 . S X=$P(IB0,U,3)
"RTN","IBCEOB0",225,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",226,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add payer policy ("_$P(IB0,U,4)_") for adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",227,0)
 . S IBDA=+Y,IBOK=1
"RTN","IBCEOB0",228,0)
 ;
"RTN","IBCEOB0",229,0)
Q46 Q
"RTN","IBCEOB0",230,0)
 ;
"RTN","IBCEOB00")
0^14^B89820593^B76540225
"RTN","IBCEOB00",1,0)
IBCEOB00 ;ALB/ESG/PJH - 835 EDI EOB MSG PROCESSING CONT ;30-JUN-2003
"RTN","IBCEOB00",2,0)
 ;;2.0;INTEGRATED BILLING;**155,349,377,431,488**;21-MAR-94;Build 184
"RTN","IBCEOB00",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEOB00",4,0)
 Q
"RTN","IBCEOB00",5,0)
 ;
"RTN","IBCEOB00",6,0)
RCRU(IBZDATA,IB0,IBLN) ; Revenue Code Roll-up procedure check -
"RTN","IBCEOB00",7,0)
 ; Total up outbound line items by revenue code and compare with
"RTN","IBCEOB00",8,0)
 ; incoming EOB 40 record to see if it has been rolled up
"RTN","IBCEOB00",9,0)
 ;
"RTN","IBCEOB00",10,0)
 ; IBZDATA - UB output formatter array, passed by reference
"RTN","IBCEOB00",11,0)
 ; IB0     - 40 record data
"RTN","IBCEOB00",12,0)
 ; IBLN    - output parameter, passed by reference
"RTN","IBCEOB00",13,0)
 ;
"RTN","IBCEOB00",14,0)
 NEW Z,LN,REV,UN,CH,RUD,RUD2,UCH,MRAUCH
"RTN","IBCEOB00",15,0)
 I $P(IB0,U,4)="" G RCRUX
"RTN","IBCEOB00",16,0)
 S IBLN="",Z=0
"RTN","IBCEOB00",17,0)
 F  S Z=$O(IBZDATA(Z)) Q:'Z  S LN=IBZDATA(Z) D
"RTN","IBCEOB00",18,0)
 . S REV=$P(LN,U,1),UN=$P(LN,U,4),CH=$P(LN,U,5),UCH=+$P(LN,U,3)
"RTN","IBCEOB00",19,0)
 . I REV="" Q
"RTN","IBCEOB00",20,0)
 . ;
"RTN","IBCEOB00",21,0)
 . S RUD=$G(RUD(REV))                 ; roll up data array for rev code
"RTN","IBCEOB00",22,0)
 . S $P(RUD,U,1)=$P(RUD,U,1)+CH       ; total charges
"RTN","IBCEOB00",23,0)
 . S $P(RUD,U,2)=$P(RUD,U,2)+UN       ; total units
"RTN","IBCEOB00",24,0)
 . S $P(RUD,U,3)=$P(RUD,U,3)+1        ; total line items
"RTN","IBCEOB00",25,0)
 . S RUD(REV)=RUD
"RTN","IBCEOB00",26,0)
 . S RUD(REV,Z)=""
"RTN","IBCEOB00",27,0)
 . ;
"RTN","IBCEOB00",28,0)
 . S RUD2=$G(RUD2(REV,UCH))           ; roll up data array for rev code
"RTN","IBCEOB00",29,0)
 . S $P(RUD2,U,1)=$P(RUD2,U,1)+CH     ; total charges
"RTN","IBCEOB00",30,0)
 . S $P(RUD2,U,2)=$P(RUD2,U,2)+UN     ; total units
"RTN","IBCEOB00",31,0)
 . S $P(RUD2,U,3)=$P(RUD2,U,3)+1      ; total line items
"RTN","IBCEOB00",32,0)
 . S RUD2(REV,UCH)=RUD2
"RTN","IBCEOB00",33,0)
 . S RUD2(REV,UCH,Z)=""
"RTN","IBCEOB00",34,0)
 . ;
"RTN","IBCEOB00",35,0)
 . Q
"RTN","IBCEOB00",36,0)
 ;
"RTN","IBCEOB00",37,0)
 I '$D(RUD),'$D(RUD2) G RCRUX
"RTN","IBCEOB00",38,0)
 ;
"RTN","IBCEOB00",39,0)
 ; delete the revenue code roll-up, if only 1 line item.
"RTN","IBCEOB00",40,0)
 S REV=""     ; this is not a roll up situation
"RTN","IBCEOB00",41,0)
 F  S REV=$O(RUD(REV)) Q:REV=""  I $P(RUD(REV),U,3)=1 KILL RUD(REV)
"RTN","IBCEOB00",42,0)
 ;
"RTN","IBCEOB00",43,0)
 S (REV,UCH)=""
"RTN","IBCEOB00",44,0)
 F  S REV=$O(RUD2(REV)) Q:REV=""  F  S UCH=$O(RUD2(REV,UCH)) Q:UCH=""  I $P(RUD2(REV,UCH),U,3)=1 KILL RUD2(REV,UCH)
"RTN","IBCEOB00",45,0)
 ;
"RTN","IBCEOB00",46,0)
 I '$D(RUD),'$D(RUD2) G RCRUX
"RTN","IBCEOB00",47,0)
 ;
"RTN","IBCEOB00",48,0)
 S RUD=$G(RUD($P(IB0,U,4)))      ; compare with 40 record data
"RTN","IBCEOB00",49,0)
 I RUD="" G RCRU2                ; make sure it exists
"RTN","IBCEOB00",50,0)
 I $P(RUD,U,1)'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) G RCRU2    ; charges
"RTN","IBCEOB00",51,0)
 I $P(RUD,U,2)'=$P(IB0,U,16) G RCRU2                      ; units
"RTN","IBCEOB00",52,0)
 S IBLN=$O(RUD($P(IB0,U,4),""))  ; use the first line# found
"RTN","IBCEOB00",53,0)
 G RCRUX
"RTN","IBCEOB00",54,0)
 ;
"RTN","IBCEOB00",55,0)
RCRU2 ; check roll-up data by rev code and unit charge
"RTN","IBCEOB00",56,0)
 S MRAUCH=0
"RTN","IBCEOB00",57,0)
 I $P(IB0,U,16) S MRAUCH=+$$DOLLAR^IBCEOB($P(IB0,U,15))/$P(IB0,U,16)
"RTN","IBCEOB00",58,0)
 S RUD2=$G(RUD2($P(IB0,U,4),MRAUCH))     ; compare with 40 record data
"RTN","IBCEOB00",59,0)
 I RUD2="" G RCRUX                       ; make sure it exists
"RTN","IBCEOB00",60,0)
 I $P(RUD2,U,1)'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) G RCRUX   ; charges
"RTN","IBCEOB00",61,0)
 I $P(RUD2,U,2)'=$P(IB0,U,16) G RCRUX                     ; units
"RTN","IBCEOB00",62,0)
 S IBLN=$O(RUD2($P(IB0,U,4),MRAUCH,""))  ; use the first line# found
"RTN","IBCEOB00",63,0)
 ;
"RTN","IBCEOB00",64,0)
RCRUX ;
"RTN","IBCEOB00",65,0)
 Q
"RTN","IBCEOB00",66,0)
 ;
"RTN","IBCEOB00",67,0)
ICN(IBEOB,ICN,COBN,IBOK) ; File the 835 ICN into the Bill
"RTN","IBCEOB00",68,0)
 ;
"RTN","IBCEOB00",69,0)
 ; Input parameters
"RTN","IBCEOB00",70,0)
 ;   IBEOB - ien to file 361.1
"RTN","IBCEOB00",71,0)
 ;   ICN   - the ICN# from the 835 transmission
"RTN","IBCEOB00",72,0)
 ;   COBN  - the insurance sequence#
"RTN","IBCEOB00",73,0)
 ;
"RTN","IBCEOB00",74,0)
 ; Output parameter
"RTN","IBCEOB00",75,0)
 ;   IBOK  - returns as 0 if we get a filing error here
"RTN","IBCEOB00",76,0)
 ;
"RTN","IBCEOB00",77,0)
 ; The field in file 399 depends on the current payer sequence
"RTN","IBCEOB00",78,0)
 ;     399,453 - primary ICN
"RTN","IBCEOB00",79,0)
 ;     399,454 - secondary ICN
"RTN","IBCEOB00",80,0)
 ;     399,455 - tertiary ICN
"RTN","IBCEOB00",81,0)
 ;
"RTN","IBCEOB00",82,0)
 NEW IBIFN,FIELD,D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","IBCEOB00",83,0)
 S IBEOB=+$G(IBEOB),COBN=+$G(COBN)
"RTN","IBCEOB00",84,0)
 I 'IBEOB!'COBN G ICNX
"RTN","IBCEOB00",85,0)
 S IBIFN=+$P($G(^IBM(361.1,IBEOB,0)),U,1)
"RTN","IBCEOB00",86,0)
 I '$D(^DGCR(399,IBIFN)) G ICNX
"RTN","IBCEOB00",87,0)
 I $G(ICN)="" G ICNX
"RTN","IBCEOB00",88,0)
 I '$F(".1.2.3.","."_COBN_".") G ICNX
"RTN","IBCEOB00",89,0)
 ;
"RTN","IBCEOB00",90,0)
 S FIELD=452+COBN
"RTN","IBCEOB00",91,0)
 S DIE=399,DA=IBIFN,DR=FIELD_"////"_ICN D ^DIE
"RTN","IBCEOB00",92,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB00",93,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Error in filing the ICN into the Bill/Claims file"
"RTN","IBCEOB00",94,0)
ICNX ;
"RTN","IBCEOB00",95,0)
 Q
"RTN","IBCEOB00",96,0)
 ;
"RTN","IBCEOB00",97,0)
15(IB0,IBEGBL,IBEOB) ; Record '15'
"RTN","IBCEOB00",98,0)
 ;
"RTN","IBCEOB00",99,0)
 N A,IBOK
"RTN","IBCEOB00",100,0)
 ;
"RTN","IBCEOB00",101,0)
 S A="3;1.03;1;0;0^4;1.04;1;0;0^5;1.05;1;0;0^6;1.07;1;0;0^7;1.08;1;0;0^8;1.09;1;0;0^9;1.02;1;0;0^10;2.05;1;0;0"
"RTN","IBCEOB00",102,0)
 ;
"RTN","IBCEOB00",103,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB00",104,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 15 data" G Q15
"RTN","IBCEOB00",105,0)
 ;
"RTN","IBCEOB00",106,0)
 ; For Medicare MRA's only:
"RTN","IBCEOB00",107,0)
 ; If the Covered Amount is present (15 record, piece 3), then file
"RTN","IBCEOB00",108,0)
 ; a claim level adjustment with Group code=OA, Reason code=AB3.
"RTN","IBCEOB00",109,0)
 ;
"RTN","IBCEOB00",110,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,+$P(IB0,U,3) D
"RTN","IBCEOB00",111,0)
 . N IB20
"RTN","IBCEOB00",112,0)
 . S IB20=20_U_$P(IB0,U,2)_U_"OA"_U_"AB3"_U_$P(IB0,U,3)_U_"0000000000"
"RTN","IBCEOB00",113,0)
 . S IB20=IB20_U_"Covered Amount"
"RTN","IBCEOB00",114,0)
 . S IBOK=$$20(IB20,IBEGBL,IBEOB)
"RTN","IBCEOB00",115,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file the OA-AB3 claim level adjustment for the Covered Amount"
"RTN","IBCEOB00",116,0)
 . K ^TMP($J,20)
"RTN","IBCEOB00",117,0)
 . Q
"RTN","IBCEOB00",118,0)
 ;
"RTN","IBCEOB00",119,0)
Q15 Q IBOK
"RTN","IBCEOB00",120,0)
 ;
"RTN","IBCEOB00",121,0)
20(IB0,IBEGBL,IBEOB) ; Record '20'
"RTN","IBCEOB00",122,0)
 ;
"RTN","IBCEOB00",123,0)
 N A,LEVEL,IBGRP,IBDA,IBOK
"RTN","IBCEOB00",124,0)
 ;
"RTN","IBCEOB00",125,0)
 S IBGRP=$P(IB0,U,3)
"RTN","IBCEOB00",126,0)
 I IBGRP'="" S ^TMP($J,20)=IBGRP
"RTN","IBCEOB00",127,0)
 I IBGRP="" S IBGRP=$G(^TMP($J,20))
"RTN","IBCEOB00",128,0)
 I IBGRP="" S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Missing claim level adjustment group code" G Q20
"RTN","IBCEOB00",129,0)
 ;
"RTN","IBCEOB00",130,0)
 S IBDA(1)=$O(^IBM(361.1,IBEOB,10,"B",IBGRP,0))
"RTN","IBCEOB00",131,0)
 ;
"RTN","IBCEOB00",132,0)
 I 'IBDA(1) D  ;Needs a new entry at group level
"RTN","IBCEOB00",133,0)
 . N X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB00",134,0)
 . S DIC="^IBM(361.1,"_IBEOB_",10,",DIC(0)="L",DLAYGO=361.11,DA(1)=IBEOB
"RTN","IBCEOB00",135,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1,10)
"RTN","IBCEOB00",136,0)
 . S X=IBGRP
"RTN","IBCEOB00",137,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB00",138,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Adjustment group code could not be added" Q
"RTN","IBCEOB00",139,0)
 . S IBDA(1)=+Y
"RTN","IBCEOB00",140,0)
 ;
"RTN","IBCEOB00",141,0)
 I $G(IBDA(1)) D  ;Add a new entry at the reason code level
"RTN","IBCEOB00",142,0)
 . S DIC="^IBM(361.1,"_IBEOB_",10,"_IBDA(1)_",1,",DIC(0)="L",DLAYGO=361.111,DA(2)=IBEOB,DA(1)=IBDA(1)
"RTN","IBCEOB00",143,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.11,1)
"RTN","IBCEOB00",144,0)
 . S X=$P(IB0,U,4)
"RTN","IBCEOB00",145,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB00",146,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Adjustment reason code could not be added" Q
"RTN","IBCEOB00",147,0)
 . S IBDA=+Y
"RTN","IBCEOB00",148,0)
 ;
"RTN","IBCEOB00",149,0)
 I $G(IBDA) D
"RTN","IBCEOB00",150,0)
 . S LEVEL=10,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",10,"_IBDA(1)_",1,"
"RTN","IBCEOB00",151,0)
 . S LEVEL(0)=IBDA,LEVEL(1)=IBDA(1),LEVEL(2)=IBEOB
"RTN","IBCEOB00",152,0)
 . S A="5;.02;1;0;0^6;.03;0;1;1^7;.04;0;1;0"
"RTN","IBCEOB00",153,0)
 . S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL)
"RTN","IBCEOB00",154,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad adjustment reason code ("_$P(IB0,U,4)_") data" Q
"RTN","IBCEOB00",155,0)
Q20 Q $G(IBOK)
"RTN","IBCEOB00",156,0)
 ;
"RTN","IBCEOB00",157,0)
35(IB0,IBEGBL,IBEOB) ; Record '35'
"RTN","IBCEOB00",158,0)
 ;
"RTN","IBCEOB00",159,0)
 N A,IBOK
"RTN","IBCEOB00",160,0)
 ;
"RTN","IBCEOB00",161,0)
 S A="3;4.12;1;0;0^4;4.13;1;0;0^5;4.14;0;1;1^6;4.15;1;0;0^7;4.16;1;0;0^8;4.17;1;0;0^9;4.18;1;0;0^10;4.04;1;0;0^11;3.01;0;1;1^12;3.02;1;0;0^13;3.08;1;0;0^14;3.09;1;0;0"
"RTN","IBCEOB00",162,0)
 ;
"RTN","IBCEOB00",163,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB00",164,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad MEDICARE Inpt Adjudication data"
"RTN","IBCEOB00",165,0)
Q35 Q $G(IBOK)
"RTN","IBCEOB00",166,0)
 ;
"RTN","IBCEOB00",167,0)
37(IB0,IBEGBL,IBEOB) ; Record '37'
"RTN","IBCEOB00",168,0)
 ;
"RTN","IBCEOB00",169,0)
 N IBOK,IBCT
"RTN","IBCEOB00",170,0)
 S IBCT=$G(^TMP($J,37))+1
"RTN","IBCEOB00",171,0)
 I IBCT>5 S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Too many Medicare Claim Level Adjudication Remarks" G Q37    ; Max 5 allowed
"RTN","IBCEOB00",172,0)
 S A="4;"_$S($P(IB0,U,3)="O":"3.0"_(IBCT+2),1:"5.0"_IBCT)_";0;0;0^5;5.0"_IBCT_"1;0;0;0"
"RTN","IBCEOB00",173,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB00",174,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad Medicare Claim Level Adjudication Remarks data"
"RTN","IBCEOB00",175,0)
 ;
"RTN","IBCEOB00",176,0)
 ; 4/22/03 - esg - If claim level remark code MA15 is reported, then
"RTN","IBCEOB00",177,0)
 ;         this is a split EOB and we need to change the REVIEW STATUS
"RTN","IBCEOB00",178,0)
 ;         of this EOB to be ACCEPTED-INTERIM EOB.
"RTN","IBCEOB00",179,0)
 ;
"RTN","IBCEOB00",180,0)
 I $P(IB0,U,4)["MA15" D
"RTN","IBCEOB00",181,0)
 . N DA,DIE,DR,DIC
"RTN","IBCEOB00",182,0)
 . S DA=IBEOB,DIE=361.1,DR=".16////2" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB00",183,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Split EOB, but review status was not updated correctly"
"RTN","IBCEOB00",184,0)
 . Q
"RTN","IBCEOB00",185,0)
 ;
"RTN","IBCEOB00",186,0)
Q37 S ^TMP($J,37)=$G(^TMP($J,37))+1 ; Saves the # of entries for 37 records
"RTN","IBCEOB00",187,0)
 Q $G(IBOK)
"RTN","IBCEOB00",188,0)
 ;
"RTN","IBCEOB00",189,0)
 ;
"RTN","IBCEOB00",190,0)
DET40(IB0,ARRAY,ERRCOD) ; Format important details of record 40 for error
"RTN","IBCEOB00",191,0)
 ; IB0 = data on 40 record (some pieces pre-formatted)
"RTN","IBCEOB00",192,0)
 ;  ARRAY(n)=formatted line is returned if passed by ref
"RTN","IBCEOB00",193,0)
 N Q,IBBNDL
"RTN","IBCEOB00",194,0)
 S IBBNDL=$S($P(IB0,U,10)'="":1,1:0)   ; Determine if Bundled or Not Bundled.
"RTN","IBCEOB00",195,0)
 ;
"RTN","IBCEOB00",196,0)
 S ARRAY(1)="Payer reported the following was billed to them via the Claim (837):"
"RTN","IBCEOB00",197,0)
 S ARRAY(2)="Proc/Rev CD: "
"RTN","IBCEOB00",198,0)
 ; If this is a Procedure Code mismatch and there is nothing in piece 10 show "UNK" otherwise show the mismatched Procedure Code.
"RTN","IBCEOB00",199,0)
 S ARRAY(2)=ARRAY(2)_$S(+ERRCOD=2:$S($P(IB0,U,10)'="":$P(IB0,U,10),1:"UNK  "),1:$S($P(IB0,U,10)'="":$P(IB0,U,10),1:$P(IB0,U,3)))
"RTN","IBCEOB00",200,0)
 S ARRAY(2)=ARRAY(2)_" Mods:"
"RTN","IBCEOB00",201,0)
 I $P(IB0,U,11)="" D
"RTN","IBCEOB00",202,0)
 . ; If there is nothing in piece 11 and this is a modified mismatch, show the value from the comparison checking that occurred.
"RTN","IBCEOB00",203,0)
 . I +ERRCOD=5 S ARRAY(2)=ARRAY(2)_$P(ERRCOD,U,2) Q
"RTN","IBCEOB00",204,0)
 . ; If there is nothing in piece 11 and this is not a modifier mismatch, show what is in piece 5-8 
"RTN","IBCEOB00",205,0)
 . F Q=5:1:8 I $P(IB0,U,Q)'="" S ARRAY(2)=ARRAY(2)_$P(IB0,U,Q)_$S(Q=8:"",$P(IB0,U,Q+1)'="":",",1:"")
"RTN","IBCEOB00",206,0)
 I $P(IB0,U,11)'="" D
"RTN","IBCEOB00",207,0)
 . F Q=11:1:14 I $P(IB0,U,Q)'="" S ARRAY(2)=ARRAY(2)_$P(IB0,U,Q)_$S(Q=14:"",$P(IB0,U,Q+1)'="":",",1:"")
"RTN","IBCEOB00",208,0)
 S $E(ARRAY(2),37)="Chg: "_$J($P(IB0,U,15)/100,"",2)
"RTN","IBCEOB00",209,0)
 S $E(ARRAY(2),64)="Units:"_$S($P(IB0,U,16):$P(IB0,U,16),1:"")
"RTN","IBCEOB00",210,0)
 S ARRAY(3)="Payer reported the following was used for adjudication via the EEOB (835):"
"RTN","IBCEOB00",211,0)
 S ARRAY(4)="Proc/Rev CD: "_$P(IB0,U,3)_" Mods:"
"RTN","IBCEOB00",212,0)
 I 'IBBNDL D     ; If not bundled.
"RTN","IBCEOB00",213,0)
 . I $P(IB0,U,5)="" S ARRAY(4)=ARRAY(4)_"UNK" Q   ; If no modifiers found, show "UNK" for Unknown.
"RTN","IBCEOB00",214,0)
 . F Q=5:1:8 I $P(IB0,U,Q)'="" S ARRAY(4)=ARRAY(4)_$P(IB0,U,Q)_$S(Q=8:"",$P(IB0,U,Q+1)'="":",",1:"")
"RTN","IBCEOB00",215,0)
 I IBBNDL D      ; If bundled.
"RTN","IBCEOB00",216,0)
 . I $P(IB0,U,11)="" S ARRAY(4)=ARRAY(4)_"UNK" Q   ; If no modifiers found, show "UNK" for Unknown.
"RTN","IBCEOB00",217,0)
 . F Q=11:1:14 I $P(IB0,U,Q)'="" S ARRAY(4)=ARRAY(4)_$P(IB0,U,Q)_$S(Q=14:"",$P(IB0,U,Q+1)'="":",",1:"")
"RTN","IBCEOB00",218,0)
 S $E(ARRAY(4),37)="Amt Pd: "_$J($P(IB0,U,17)/100,"",2)
"RTN","IBCEOB00",219,0)
 S $E(ARRAY(4),64)="Cov Units:"_$S($P(IB0,U,18):$P(IB0,U,18)/100,1:1)
"RTN","IBCEOB00",220,0)
 S ARRAY(5)="  "
"RTN","IBCEOB00",221,0)
 Q
"RTN","IBCEOB00",222,0)
 ;
"RTN","IBCEOB00",223,0)
DET4X(RECID,IB0,ARRAY) ; Format important details of record 41-46 for error
"RTN","IBCEOB00",224,0)
 ; RECID = 41,42,45,46
"RTN","IBCEOB00",225,0)
 ; IB0 = data on RECID record
"RTN","IBCEOB00",226,0)
 ;  ARRAY(n)=formatted line is returned if passed by ref
"RTN","IBCEOB00",227,0)
 N CT,Q
"RTN","IBCEOB00",228,0)
 I RECID=41 D  Q
"RTN","IBCEOB00",229,0)
 . S ARRAY(1)="    Allowed Amt: "_$J($P(IB0,U,3)/100,"",2)_"  Per Diem Amt: "_$J($P(IB0,U,4)/100,"",2)
"RTN","IBCEOB00",230,0)
 ;
"RTN","IBCEOB00",231,0)
 I RECID=42 D  Q
"RTN","IBCEOB00",232,0)
 . S ARRAY(1)="    Line Item Remark Code: "_$P(IB0,U,3)
"RTN","IBCEOB00",233,0)
 . I $P(IB0,U,4)'="" S CT=1 F Q=0:80:190 I $E($P(IB0,U,4),Q+1,Q+80)'="" S CT=CT+1,ARRAY(CT)=$E($P(IB0,U,4),Q+1,Q+80)
"RTN","IBCEOB00",234,0)
 ;
"RTN","IBCEOB00",235,0)
 I RECID=45 D
"RTN","IBCEOB00",236,0)
 . S ARRAY(1)="    Adj Group Cd: "_$P(IB0,U,3)_"  Reason Cd: "_$P(IB0,U,4)_"  Amt: "_$J($P(IB0,U,5)/100,"",2)_"  Quantity: "_+$P(IB0,U,6)
"RTN","IBCEOB00",237,0)
 . I $P(IB0,U,7)'="" S CT=1 F Q=0:80:190 I $E($P(IB0,U,7),Q+1,Q+80)'="" S CT=CT+1,ARRAY(CT)=$E($P(IB0,U,7),Q+1,Q+80)
"RTN","IBCEOB00",238,0)
 ;
"RTN","IBCEOB00",239,0)
 I RECID=46 D
"RTN","IBCEOB00",240,0)
 . S ARRAY(1)="    Payer Policy Reference: "_$P(IB0,U,3)
"RTN","IBCEOB00",241,0)
 Q
"RTN","IBCEOB00",242,0)
 ; 
"RTN","IBCEOB00",243,0)
FDT(X) ; Format date in X (YYYYMMDD) to MM/DD/YYYY
"RTN","IBCEOB00",244,0)
 S:X'="" X=$E(X,5,6)_"/"_$E(X,7,8)_"/"_$E(X,1,4)
"RTN","IBCEOB00",245,0)
 Q X
"RTN","IBCEOB00",246,0)
 ;
"RTN","IBCEOB1")
0^16^B103312053^B69809131
"RTN","IBCEOB1",1,0)
IBCEOB1 ;ALB/TMP/PJH - 835 EDI EOB MSG PROCESSING ; 7/13/10 5:32pm
"RTN","IBCEOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,155,296,356,349,431,488**;21-MAR-94;Build 184
"RTN","IBCEOB1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEOB1",4,0)
 Q
"RTN","IBCEOB1",5,0)
 ;
"RTN","IBCEOB1",6,0)
STORE(A,IB0,IBEOB,LEVEL) ;
"RTN","IBCEOB1",7,0)
 ; A = the string of data to extract and try to store
"RTN","IBCEOB1",8,0)
 ;       each ^ piece is a field to store
"RTN","IBCEOB1",9,0)
 ;         within each ^ piece, there are 5 ';' pieces:
"RTN","IBCEOB1",10,0)
 ;            1 = piece to extract from the data string;
"RTN","IBCEOB1",11,0)
 ;            2 = field to update;
"RTN","IBCEOB1",12,0)
 ;            3 = flag for dollar amt (1=YES);
"RTN","IBCEOB1",13,0)
 ;            4 = flag for 4-slash stuff without transform (1=YES);
"RTN","IBCEOB1",14,0)
 ;            5 = flag for numeric/non-dollar amt (1=Yes, 0=No,
"RTN","IBCEOB1",15,0)
 ;                 Dn = the field is numeric with 'n' decimal places
"RTN","IBCEOB1",16,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",17,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",18,0)
 ; LEVEL = the array that contains the DIE and DA values if stuffing at a
"RTN","IBCEOB1",19,0)
 ;         level other than the top level
"RTN","IBCEOB1",20,0)
 ;
"RTN","IBCEOB1",21,0)
 N B,IBPC,IBFLD,DA,DR,DIE,X,Y
"RTN","IBCEOB1",22,0)
 S DR=";"
"RTN","IBCEOB1",23,0)
 ;
"RTN","IBCEOB1",24,0)
 I '$G(LEVEL) S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",25,0)
 ;
"RTN","IBCEOB1",26,0)
 I $G(LEVEL) D
"RTN","IBCEOB1",27,0)
 . N Q
"RTN","IBCEOB1",28,0)
 . S DIE=$G(LEVEL("DIE"))
"RTN","IBCEOB1",29,0)
 . S Q=0 F  S Q=$O(LEVEL(Q)) Q:'Q  S DA(Q)=LEVEL(Q)
"RTN","IBCEOB1",30,0)
 . S DA=LEVEL(0)
"RTN","IBCEOB1",31,0)
 ;
"RTN","IBCEOB1",32,0)
 I $G(DA) F B=1:1:$L(A,U) D
"RTN","IBCEOB1",33,0)
 . S IBPC=$P(A,U,B),IBFLD=$P(IBPC,";",2)
"RTN","IBCEOB1",34,0)
 . I $P(IB0,U,+IBPC)'="",IBFLD D
"RTN","IBCEOB1",35,0)
 .. N VAL
"RTN","IBCEOB1",36,0)
 .. ; For dollar amts, add full cents; For numerics, strip leading
"RTN","IBCEOB1",37,0)
 .. ;   0's; For non-numeric/non-dollar amts, make any ; in data into |
"RTN","IBCEOB1",38,0)
 .. S VAL=$S($P(IBPC,";",3):$$DOLLAR^IBCEOB($P(IB0,U,+IBPC)),$P(IBPC,";",5):+$P(IB0,U,+IBPC),$P($P(IBPC,";",5),"D",2):$P(IB0,U,+IBPC)/(10**$P($P(IBPC,";",5),"D",2)),1:$TR($P(IB0,U,+IBPC),";","|"))
"RTN","IBCEOB1",39,0)
 .. I $P(IBPC,";",3),VAL S VAL=$P(VAL,".")_"."_$E($P(VAL,".",2)_"00",1,2)
"RTN","IBCEOB1",40,0)
 .. S DR=DR_IBFLD_"///"_$S($P(IBPC,";",4):"/",1:"")_VAL_";"
"RTN","IBCEOB1",41,0)
 ;
"RTN","IBCEOB1",42,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB1",43,0)
 I DR'="" D ^DIE
"RTN","IBCEOB1",44,0)
 Q ($D(Y)=0) ;Successfully stored all the data it was sent if $D(Y)=0
"RTN","IBCEOB1",45,0)
 ;
"RTN","IBCEOB1",46,0)
HDR(IB0,IBEGBL,IBEOB,HIPAA) ; Store header data for EOB
"RTN","IBCEOB1",47,0)
 ; IB0 = the record being processed from the msg
"RTN","IBCEOB1",48,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",49,0)
 ;
"RTN","IBCEOB1",50,0)
 N IBDT,IBDTP,DA,DR,DIE,X,Y
"RTN","IBCEOB1",51,0)
 K IBXSAVE("XTRA"),IBZSAVE
"RTN","IBCEOB1",52,0)
 ;
"RTN","IBCEOB1",53,0)
 S HIPAA=+$P(IB0,U,16) ;HIPAA Version code
"RTN","IBCEOB1",54,0)
 S IBDT=$P(IB0,U,3),IBDT=$E(IBDT,1,4)-1700_$E(IBDT,5,8)_"."_$P(IB0,U,4)
"RTN","IBCEOB1",55,0)
 S IBDTP=$P(IB0,U,9)
"RTN","IBCEOB1",56,0)
 I IBDTP S IBDTP=$E(IBDTP,1,4)-1700_$E(IBDTP,5,8)
"RTN","IBCEOB1",57,0)
 S DR=$S($P(IB0,U,7)'="":".03////"_$P(IB0,U,7)_";",1:"")_".05////"_IBDT_";.04////"_($P(IB0,U,5)="Y")_";.15///"_$$COBN^IBCEF(+$G(^IBM(361.1,IBEOB,0)))_";.07///"_$P(IB0,U,8)_$S(IBDTP:";.06////"_IBDTP,1:"")
"RTN","IBCEOB1",58,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",59,0)
 D ^DIE
"RTN","IBCEOB1",60,0)
 I $D(Y)'=0 D
"RTN","IBCEOB1",61,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad header data"
"RTN","IBCEOB1",62,0)
 Q ($D(Y)=0)
"RTN","IBCEOB1",63,0)
 ;
"RTN","IBCEOB1",64,0)
FINDLN(IB0,IBEOB,IBZDATA,PLREF,ERRCOD) ; Find corresponding billed line for the adj
"RTN","IBCEOB1",65,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",66,0)
 ;       NOTE: pieces 3,4,16 are already reformatted
"RTN","IBCEOB1",67,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",68,0)
 ; IBZDATA = the array from the output formatter containing line
"RTN","IBCEOB1",69,0)
 ;           items for the bill.  This is passed in so this data only has
"RTN","IBCEOB1",70,0)
 ;           to be extracted once for each bill (the first time in, it
"RTN","IBCEOB1",71,0)
 ;           will be undefined)
"RTN","IBCEOB1",72,0)
 ; PLREF = Provider Line Reference
"RTN","IBCEOB1",73,0)
 ; OUTPUT = Line # in the original bill that this adjustment relates to
"RTN","IBCEOB1",74,0)
 ;          ^ paid procedure code if different from original procedure OR
"RTN","IBCEOB1",75,0)
 ;            paid rev code if different from original and no proc code
"RTN","IBCEOB1",76,0)
 ; ERRCOD = Contains any error condition that may have been encountered
"RTN","IBCEOB1",77,0)
 ;            while conducting the field matching tests.
"RTN","IBCEOB1",78,0)
 ;
"RTN","IBCEOB1",79,0)
 N IBLN,IBLN1,IBBNDL,OCHG,OCHG2,OPROC,OREVCD,IBIFN,IBXARRAY,IBXARRY
"RTN","IBCEOB1",80,0)
 N IBXERR,UNITS,UNITS2,UNITS3,IBMOD,Z,Z0,EOBCHG,IBZVLA,IBAMIN,MATCHED,MOD837S
"RTN","IBCEOB1",81,0)
 ;
"RTN","IBCEOB1",82,0)
 S (IBLN,IBLN1)="",IBIFN=+$G(^IBM(361.1,IBEOB,0)),(ERRCOD,MATCHED)=0
"RTN","IBCEOB1",83,0)
 S EOBCHG=+$$DOLLAR^IBCEOB($P(IB0,U,15))   ; charges on EOB 40 record
"RTN","IBCEOB1",84,0)
 ;
"RTN","IBCEOB1",85,0)
 ; if original procedure exists and is different than the 835 procedure,
"RTN","IBCEOB1",86,0)
 ; the procedure or revenue code originally billed will be in piece 10
"RTN","IBCEOB1",87,0)
 ; of the '40' record of the 835 flat file.  Otherwise, pc 10 is null.
"RTN","IBCEOB1",88,0)
 S IBBNDL=$S($P(IB0,U,10)'="":1,1:0)
"RTN","IBCEOB1",89,0)
 ;
"RTN","IBCEOB1",90,0)
 ; If this is a split MRA, build array of Vista line#'s from other split MRA's
"RTN","IBCEOB1",91,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$$SPLIT^IBCEMU1(IBEOB) D
"RTN","IBCEOB1",92,0)
 . N IEN S IEN=0
"RTN","IBCEOB1",93,0)
 . F  S IEN=$O(^IBM(361.1,"B",IBIFN,IEN)) Q:'IEN  I IEN'=IBEOB D
"RTN","IBCEOB1",94,0)
 .. I $P($G(^IBM(361.1,IEN,0)),U,4)'=1 Q    ; not an MRA
"RTN","IBCEOB1",95,0)
 .. I '$$SPLIT^IBCEMU1(IEN) Q               ; not a split EOB
"RTN","IBCEOB1",96,0)
 .. M IBZVLA=^IBM(361.1,IEN,15,"AC")
"RTN","IBCEOB1",97,0)
 .. Q
"RTN","IBCEOB1",98,0)
 . Q
"RTN","IBCEOB1",99,0)
 ;
"RTN","IBCEOB1",100,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,19)=3 D  G FINDLNX     ; UB-04 format
"RTN","IBCEOB1",101,0)
 . I '$D(IBZDATA) D F^IBCEF("N-UB-04 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",102,0)
 . ; Quit if a Line Item CTRL # exist, skip mismatching process.
"RTN","IBCEOB1",103,0)
 . I +PLREF,$D(IBZDATA(+PLREF)) S IBLN=+PLREF_U_$P(IB0,U,10) Q
"RTN","IBCEOB1",104,0)
 . ;
"RTN","IBCEOB1",105,0)
 . S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:+MATCHED
"RTN","IBCEOB1",106,0)
 .. ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",107,0)
 .. I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) Q
"RTN","IBCEOB1",108,0)
 .. ; Quit if split MRA and this VistA line# has already been filed
"RTN","IBCEOB1",109,0)
 .. I $D(IBZVLA(Z)) Q
"RTN","IBCEOB1",110,0)
 .. I $G(IBZDATA(Z))="" Q
"RTN","IBCEOB1",111,0)
 .. ;
"RTN","IBCEOB1",112,0)
 .. ; CHECKING FOR A MATCHING RECORD ON FIRST PASS.
"RTN","IBCEOB1",113,0)
 .. D GTPRCD(IBBNDL,.OPROC,.OREVCD,IBZDATA(Z))      ; Get the Procedure Code values.
"RTN","IBCEOB1",114,0)
 .. ; if not bundled/unbundled
"RTN","IBCEOB1",115,0)
 .. I 'IBBNDL D  Q
"RTN","IBCEOB1",116,0)
 ... I OPROC="",OREVCD,OREVCD'=$P(IB0,U,4) Q      ; revenue code
"RTN","IBCEOB1",117,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,3) Q             ; procedure code
"RTN","IBCEOB1",118,0)
 ... S MATCHED=Z
"RTN","IBCEOB1",119,0)
 .. ;
"RTN","IBCEOB1",120,0)
 .. ; if bundled/unbundled
"RTN","IBCEOB1",121,0)
 .. I IBBNDL D  Q
"RTN","IBCEOB1",122,0)
 ... I OPROC="",OREVCD,OREVCD'=+$P(IB0,U,10) Q    ; revenue code
"RTN","IBCEOB1",123,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,10) Q            ; procedure code
"RTN","IBCEOB1",124,0)
 ... S MATCHED=Z
"RTN","IBCEOB1",125,0)
 .. Q
"RTN","IBCEOB1",126,0)
 . ;
"RTN","IBCEOB1",127,0)
 . I 'MATCHED D  Q
"RTN","IBCEOB1",128,0)
 .. D GTPRCD(IBBNDL,.OPROC,.OREVCD,IBZDATA(1))  ; Due to no matches, get the info from the 1st line item.
"RTN","IBCEOB1",129,0)
 .. I 'IBBNDL D  Q
"RTN","IBCEOB1",130,0)
 ... I OPROC="",OREVCD,OREVCD'=$P(IB0,U,4) S ERRCOD=1 Q      ; revenue code
"RTN","IBCEOB1",131,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,3) S ERRCOD=2 Q             ; procedure code
"RTN","IBCEOB1",132,0)
 .. I IBBNDL D  Q
"RTN","IBCEOB1",133,0)
 ... I OPROC="",OREVCD,OREVCD'=+$P(IB0,U,10) S ERRCOD=1 Q    ; revenue code
"RTN","IBCEOB1",134,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,10) S ERRCOD=2 Q            ; procedure code
"RTN","IBCEOB1",135,0)
 .. Q
"RTN","IBCEOB1",136,0)
 . ;
"RTN","IBCEOB1",137,0)
 . ; FOUND A MATCHING PROCEDURE CODE...SO LET'S SEE IF EVERYTHING ELSE MATCHES.
"RTN","IBCEOB1",138,0)
 . S Z=MATCHED
"RTN","IBCEOB1",139,0)
 . D GTPRCD(IBBNDL,.OPROC,.OREVCD,IBZDATA(Z))      ; Get the Procedure Code values.
"RTN","IBCEOB1",140,0)
 . S OCHG=$P(IBZDATA(Z),U,3)*$P(IBZDATA(Z),U,4) ; Total charge from bill
"RTN","IBCEOB1",141,0)
 . S OCHG2=+$P(IBZDATA(Z),U,5)
"RTN","IBCEOB1",142,0)
 . I OCHG'=EOBCHG,OCHG2=EOBCHG S OCHG=OCHG2     ; update OCHG
"RTN","IBCEOB1",143,0)
 . ;
"RTN","IBCEOB1",144,0)
 . ; if not bundled/unbundled
"RTN","IBCEOB1",145,0)
 . I 'IBBNDL D  Q
"RTN","IBCEOB1",146,0)
 .. I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) S ERRCOD=3 Q        ; original units
"RTN","IBCEOB1",147,0)
 .. I +OCHG'=EOBCHG S ERRCOD=4 Q                            ; original charges
"RTN","IBCEOB1",148,0)
 .. I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,5,8),.MOD837S),'$$MODMATCH($P($P(IBZDATA(Z),U,9),",",1),$P(IB0,U,5),.MOD837S) S ERRCOD=5_U_MOD837S Q    ; modifiers
"RTN","IBCEOB1",149,0)
 .. S IBLN=Z
"RTN","IBCEOB1",150,0)
 .. Q
"RTN","IBCEOB1",151,0)
 . ;
"RTN","IBCEOB1",152,0)
 . ; if bundled/unbundled
"RTN","IBCEOB1",153,0)
 . I IBBNDL D  Q
"RTN","IBCEOB1",154,0)
 .. I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) S ERRCOD=3 Q        ; original units
"RTN","IBCEOB1",155,0)
 .. I +OCHG'=EOBCHG S ERRCOD=4 Q                            ; original charges
"RTN","IBCEOB1",156,0)
 .. I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,11,14),.MOD837S),'$$MODMATCH($P($P(IBZDATA(Z),U,9),",",1),$P(IB0,U,11),.MOD837S) S ERRCOD=5_U_MOD837S Q    ; modifiers
"RTN","IBCEOB1",157,0)
 .. S IBLN=Z_U_$S(OPROC'="":OPROC,1:OREVCD)
"RTN","IBCEOB1",158,0)
 .. Q
"RTN","IBCEOB1",159,0)
 . ; When dealing with Inpatient UB-04's, check for revenue code roll-ups
"RTN","IBCEOB1",160,0)
 . I 'IBLN,$$INPAT^IBCEF(IBIFN,1) D RCRU^IBCEOB00(.IBZDATA,IB0,.IBLN)
"RTN","IBCEOB1",161,0)
 . ; If only 1 rev code and charges are the same, assume a match
"RTN","IBCEOB1",162,0)
 . I 'IBLN,'$P($G(^IBM(361.1,IBEOB,0)),U,4),$O(IBZDATA(""),-1)=$O(IBZDATA("")),+OCHG=EOBCHG S IBLN=+$O(IBZDATA(""))_U_OREVCD
"RTN","IBCEOB1",163,0)
 ;
"RTN","IBCEOB1",164,0)
 ; At this point, we can assume the claim is CMS-1500 format
"RTN","IBCEOB1",165,0)
 I '$D(IBZDATA) D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",166,0)
 I +PLREF,$D(IBZDATA(+PLREF)) S IBLN=PLREF_U_$P(IB0,U,10) G FINDLNX   ; If a Line Item CTRL # exist, skip mismatching process.
"RTN","IBCEOB1",167,0)
 ;
"RTN","IBCEOB1",168,0)
 S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:+MATCHED
"RTN","IBCEOB1",169,0)
 . ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",170,0)
 . I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) Q
"RTN","IBCEOB1",171,0)
 . ; Quit if split MRA and this VistA line# has already been filed
"RTN","IBCEOB1",172,0)
 . I $D(IBZVLA(Z)) Q
"RTN","IBCEOB1",173,0)
 . I $G(IBZDATA(Z))="" Q
"RTN","IBCEOB1",174,0)
 . ;
"RTN","IBCEOB1",175,0)
 . ; CHECKING FOR A MATCHING RECORD ON FIRST PASS.
"RTN","IBCEOB1",176,0)
 . D GTPRCD(IBBNDL,.OPROC,.OREVCD,IBZDATA(Z))      ; Get the Procedure Code values.
"RTN","IBCEOB1",177,0)
 . I OPROC'=$S('IBBNDL:$P(IB0,U,3),1:$P(IB0,U,10)) Q   ;procedure code.
"RTN","IBCEOB1",178,0)
 . S MATCHED=Z
"RTN","IBCEOB1",179,0)
 . Q
"RTN","IBCEOB1",180,0)
 ;
"RTN","IBCEOB1",181,0)
 I 'MATCHED D  G FINDLNX
"RTN","IBCEOB1",182,0)
 . D GTPRCD(IBBNDL,.OPROC,.OREVCD,IBZDATA(1))  ; Because no matches, get the information from the 1st line item.
"RTN","IBCEOB1",183,0)
 . I OPROC'=$S('IBBNDL:$P(IB0,U,3),1:$P(IB0,U,10)) S ERRCOD=2   ; Mis-matched Proc Code.
"RTN","IBCEOB1",184,0)
 ;
"RTN","IBCEOB1",185,0)
 ; FOUND A MATCHING PROCEDURE CODE...SO LET'S SEE IF EVERYTHING ELSE MATCHES.
"RTN","IBCEOB1",186,0)
 S Z=MATCHED
"RTN","IBCEOB1",187,0)
 ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",188,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) G FINDLNX
"RTN","IBCEOB1",189,0)
 ; Quit if split MRA and this VistA line# has already been filed
"RTN","IBCEOB1",190,0)
 I $D(IBZVLA(Z)) G FINDLNX
"RTN","IBCEOB1",191,0)
 I $G(IBZDATA(Z))="" G FINDLNX
"RTN","IBCEOB1",192,0)
 ;
"RTN","IBCEOB1",193,0)
 S OCHG=$P(IBZDATA(Z),U,8)*$P(IBZDATA(Z),U,9) ; charge from bill
"RTN","IBCEOB1",194,0)
 S IBAMIN=""
"RTN","IBCEOB1",195,0)
 I $P(IBZDATA(Z),U,12)'="" S IBAMIN=$P(IBZDATA(Z),U,12)  ;anesthesia minutes
"RTN","IBCEOB1",196,0)
 S UNITS=$S('IBAMIN:$P(IBZDATA(Z),U,9),1:IBAMIN/15)
"RTN","IBCEOB1",197,0)
 ; original units from bill or anesthesia minutes calculation
"RTN","IBCEOB1",198,0)
 I $P(UNITS,".",2) S UNITS=$FN(UNITS,"",1)    ; round to a single decimal place for fractional units
"RTN","IBCEOB1",199,0)
 I $P($P(IB0,U,16),".",2) S $P(IB0,U,16)=$FN($P(IB0,U,16),"",1)
"RTN","IBCEOB1",200,0)
 S UNITS2=$P(IBZDATA(Z),U,9)     ; just the units
"RTN","IBCEOB1",201,0)
 ; UNITS3 is the number of anesthesia minutes divided by 10, or nil.
"RTN","IBCEOB1",202,0)
 ; Solution to get around the Trailblazers bug for MRAs
"RTN","IBCEOB1",203,0)
 S UNITS3=""
"RTN","IBCEOB1",204,0)
 I IBAMIN'=0 S UNITS3=IBAMIN/10
"RTN","IBCEOB1",205,0)
 ;
"RTN","IBCEOB1",206,0)
 I UNITS'=$P(IB0,U,16),UNITS2'=$P(IB0,U,16),UNITS3'=$P(IB0,U,16),IBAMIN'=$P(IB0,U,16) S ERRCOD=3 G FINDLNX  ; Original units
"RTN","IBCEOB1",207,0)
 I $$DOLLAR^IBCEFG1(OCHG)'=+$P(IB0,U,15) S ERRCOD=4 G FINDLNX  ; original charges.
"RTN","IBCEOB1",208,0)
 I $S($P(IB0,U,19):$P(IB0,U,19)=$P(IBZDATA(Z),U),1:1) D  G:+ERRCOD FINDLNX
"RTN","IBCEOB1",209,0)
 . ;Original procedure/chg/units/date have matched in order to get here
"RTN","IBCEOB1",210,0)
 . ;Check matching original modifiers
"RTN","IBCEOB1",211,0)
 . I '$$MODMATCH($$MODLST^IBEFUNC2($P(IBZDATA(Z),U,10)),$S('IBBNDL:$P(IB0,U,5,8),1:$P(IB0,U,11,14)),.MOD837S) S ERRCOD=5_U_MOD837S Q   ; modifiers.
"RTN","IBCEOB1",212,0)
 . S IBLN=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",213,0)
 I 'IBLN,IBLN1 S IBLN=IBLN1
"RTN","IBCEOB1",214,0)
 ;
"RTN","IBCEOB1",215,0)
FINDLNX ;
"RTN","IBCEOB1",216,0)
 Q IBLN
"RTN","IBCEOB1",217,0)
 ;
"RTN","IBCEOB1",218,0)
GTPRCD(IBBNDL,OPROC,OREVCD,IBZREC) ; Set up the Procedure Code/Revenue Code fields.
"RTN","IBCEOB1",219,0)
 N CPT
"RTN","IBCEOB1",220,0)
 ;
"RTN","IBCEOB1",221,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,19)=3 D  Q   ; For UB-04s
"RTN","IBCEOB1",222,0)
 . S CPT=$P(IBZREC,U,2)                        ; proc from bill
"RTN","IBCEOB1",223,0)
 . I CPT'?.N,CPT'="" S CPT=$O(^ICPT("B",CPT,""))   ; non-numeric proc
"RTN","IBCEOB1",224,0)
 . S OPROC=$$PRCD^IBCEF1(+CPT_";ICPT(")            ; ext proc code
"RTN","IBCEOB1",225,0)
 . S OREVCD=+$P($G(^DGCR(399.2,+IBZREC,0)),U)  ; Rev cd from bill
"RTN","IBCEOB1",226,0)
 ;
"RTN","IBCEOB1",227,0)
 ; For CMS-1500s
"RTN","IBCEOB1",228,0)
 S CPT=$P(IBZREC,U,5)        ; proc from bill
"RTN","IBCEOB1",229,0)
 I CPT'?.N,CPT'="" S CPT=$O(^ICPT("B",CPT,""))   ; non-numeric proc
"RTN","IBCEOB1",230,0)
 S OPROC=$$PRCD^IBCEF1(+CPT_";ICPT(")            ; ext proc code
"RTN","IBCEOB1",231,0)
 Q
"RTN","IBCEOB1",232,0)
 ;
"RTN","IBCEOB1",233,0)
MODMATCH(IB,MODLST,MOD837S) ; Match modifiers
"RTN","IBCEOB1",234,0)
 ; IB = the list of modifiers iens from the bill, comma delimited
"RTN","IBCEOB1",235,0)
 ; MODLST = the 4 '^' pieces of the reported modifiers
"RTN","IBCEOB1",236,0)
 ;
"RTN","IBCEOB1",237,0)
 N MODOK,Q,Z0,IBMOD,MMOD
"RTN","IBCEOB1",238,0)
 S MODOK=1,MOD837S=""
"RTN","IBCEOB1",239,0)
 I $TR(IB,",")'="" F Q=1:1:$L(IB,",") S Z0=$P(IB,",",Q) I Z0'="" D
"RTN","IBCEOB1",240,0)
 . S IBMOD(Z0)=$G(IBMOD(Z0))+1
"RTN","IBCEOB1",241,0)
 . I '$L(MOD837S) S MOD837S=Z0 Q
"RTN","IBCEOB1",242,0)
 . S MOD837S=MOD837S_","_Z0
"RTN","IBCEOB1",243,0)
 I $TR(MODLST,U)="",$O(IBMOD(""))="" G MODQ ; No modifiers used
"RTN","IBCEOB1",244,0)
 ;
"RTN","IBCEOB1",245,0)
 ; No match if no VistA modifiers, but there are MRA modifiers
"RTN","IBCEOB1",246,0)
 I $TR(MODLST,U)'="",$O(IBMOD(""))="" S MODOK=0 G MODQ
"RTN","IBCEOB1",247,0)
 ;
"RTN","IBCEOB1",248,0)
 ; Evaluate each MRA modifier
"RTN","IBCEOB1",249,0)
 F Z0=1:1:4 D
"RTN","IBCEOB1",250,0)
 . S MMOD=$P(MODLST,U,Z0) Q:MMOD=""     ; individual MRA modifier
"RTN","IBCEOB1",251,0)
 . I '$D(IBMOD(MMOD)) Q                 ; not in array so just quit
"RTN","IBCEOB1",252,0)
 . S IBMOD(MMOD)=IBMOD(MMOD)-1          ; decrement array counter
"RTN","IBCEOB1",253,0)
 . I 'IBMOD(MMOD) KILL IBMOD(MMOD)      ; if 0, then kill array entry
"RTN","IBCEOB1",254,0)
 . Q
"RTN","IBCEOB1",255,0)
 ;
"RTN","IBCEOB1",256,0)
 I $O(IBMOD(""))'="" S MODOK=0 ; All submitted mods not matched
"RTN","IBCEOB1",257,0)
MODQ Q MODOK
"RTN","IBCEOB1",258,0)
 ;
"RTN","IBCEP8B")
0^10^B34200270^B20063767
"RTN","IBCEP8B",1,0)
IBCEP8B ;ALB/CJS - Functions for NON-VA PROVIDER cont'd ;06-06-08
"RTN","IBCEP8B",2,0)
 ;;2.0;INTEGRATED BILLING;**391,432,476,488**;21-MAR-94;Build 184
"RTN","IBCEP8B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP8B",4,0)
 ;
"RTN","IBCEP8B",5,0)
BLD(IBNPRV) ; Build/Rebuild display
"RTN","IBCEP8B",6,0)
 N IBLCT,IBCT,IBLST,IBPRI,IBIEN,Z,Z1,Z2,IB1
"RTN","IBCEP8B",7,0)
 N IBFBTGL,IBFBOK ;IB*2.0*476
"RTN","IBCEP8B",8,0)
 K @VALMAR
"RTN","IBCEP8B",9,0)
 ;S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0))
"RTN","IBCEP8B",10,0)
 S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0)),IB1=$G(^IBA(355.93,IBNPRV,1))
"RTN","IBCEP8B",11,0)
 ;
"RTN","IBCEP8B",12,0)
 ;  Moved IBCT & NAME into each section as the tabbing is different for each type  IB*2*488
"RTN","IBCEP8B",13,0)
 ;S IBCT=IBCT+1
"RTN","IBCEP8B",14,0)
 ;S Z1=$J("Name: ",15)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",15,0)
 ;
"RTN","IBCEP8B",16,0)
 I $P(Z,U,2)=2 D                 ; Individual provider (not a facility)
"RTN","IBCEP8B",17,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",18,0)
 . S Z1=$J("Name: ",15)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",19,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",20,0)
 . S Z1=$J("Type: ",15)_$S($P(Z,U,2)=2:"INDIVIDUAL PROVIDER",1:"OUTSIDE OR OTHER VA FACILITY") D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",21,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",22,0)
 . S Z1=$J("Credentials: ",15)_$P(Z,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",23,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",24,0)
 . S Z1=$J("Specialty: ",15)_$P(Z,U,4) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",25,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",26,0)
 . S Z1=$J("NPI: ",15)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",27,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",28,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8B",29,0)
 . S Z1=$J("Taxonomy Code: ",15)_$P(IBPRI,U)
"RTN","IBCEP8B",30,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",31,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",32,0)
 . S IBIEN=""
"RTN","IBCEP8B",33,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8B",34,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8B",35,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",36,0)
 .. S Z1=$J("",15)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",37,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",38,0)
 . ;IB*2.0*476 - BEGIN added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",39,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",40,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",41,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",42,0)
 . S IBFBTGL=$$FBTGLGET^IBCEP8C1(IBNPRV)  ;RETURNS 0,1 OR ""
"RTN","IBCEP8B",43,0)
 . S IBFBOK="YES"
"RTN","IBCEP8B",44,0)
 . S:IBFBTGL=0 IBFBOK="NO"
"RTN","IBCEP8B",45,0)
 . S Z1=$J("Allow future updates by FEE BASIS automatic interface? : ",50)_IBFBOK
"RTN","IBCEP8B",46,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",47,0)
 ;E  D
"RTN","IBCEP8B",48,0)
 I $P(Z,U,2)'=2 D
"RTN","IBCEP8B",49,0)
 .;IB*2.0*476 - END added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",50,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",51,0)
 . S Z1=$J("Name: ",19)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",52,0)
 . ;;
"RTN","IBCEP8B",53,0)
 . ;; Begin IB*2.0*488 -RBN
"RTN","IBCEP8B",54,0)
 . ;;
"RTN","IBCEP8B",55,0)
 . N XX,BADADD,BADZIP,MSG
"RTN","IBCEP8B",56,0)
 . S MSG="     "
"RTN","IBCEP8B",57,0)
 . S (BADADD,BADZIP)=0
"RTN","IBCEP8B",58,0)
 . S XX=$P(Z,U,5)
"RTN","IBCEP8B",59,0)
 . I $L(XX)>30!($L(XX)<1) S BADADD=1
"RTN","IBCEP8B",60,0)
 . S BADADD=$$BADADD(XX)
"RTN","IBCEP8B",61,0)
 . S XX=$P(Z,U,8)
"RTN","IBCEP8B",62,0)
 . I $L(XX)>10!($L(XX)<9)!'((XX?9N)!(XX?5N1"-"4N))!($E(XX,$L(XX)-3,$L(XX))="0000") S BADZIP=1
"RTN","IBCEP8B",63,0)
 . ;;
"RTN","IBCEP8B",64,0)
 . ;; End IB*2.0*488
"RTN","IBCEP8B",65,0)
 . ;;
"RTN","IBCEP8B",66,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",67,0)
 . S Z1=$J("Address: ",19)_$P(Z,U,5) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",68,0)
 . I $P(Z,U,10) D
"RTN","IBCEP8B",69,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",70,0)
 .. S Z1=$J("",19)_$P(Z,U,10)  ; This is the street2 of the address - NOT displayed
"RTN","IBCEP8B",71,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",72,0)
 . S Z1=$J("",19)_$P(Z,U,6)_$S($P(Z,U,6)'="":", ",1:"")_$S($P(Z,U,7):$$EXTERNAL^DILFD(355.93,.07,"",$P(Z,U,7))_"  ",1:"")_$P(Z,U,8)
"RTN","IBCEP8B",73,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",74,0)
 . ;;
"RTN","IBCEP8B",75,0)
 . ;; Begin IB*2.0*488 - RBN
"RTN","IBCEP8B",76,0)
 . ;;
"RTN","IBCEP8B",77,0)
 . I BADADD S MSG=MSG_"Address cannot be a PO BOX"
"RTN","IBCEP8B",78,0)
 . I BADZIP S MSG=$S(MSG'="     ":MSG_" & ",1:MSG) S MSG=MSG_"ZIP must be 9-10 digits not ending in 0000"
"RTN","IBCEP8B",79,0)
 . I BADADD!BADZIP D
"RTN","IBCEP8B",80,0)
 . . S IBCT=IBCT+1
"RTN","IBCEP8B",81,0)
 . . S Z1=" "
"RTN","IBCEP8B",82,0)
 . . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",83,0)
 . . S IBCT=IBCT+1
"RTN","IBCEP8B",84,0)
 . . D SET1(.IBLCT,MSG,IBCT)
"RTN","IBCEP8B",85,0)
 . . S IBCT=IBCT+1
"RTN","IBCEP8B",86,0)
 . . S Z1=" "
"RTN","IBCEP8B",87,0)
 . . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",88,0)
 . ;;
"RTN","IBCEP8B",89,0)
 . ;; End IB*2.0*488
"RTN","IBCEP8B",90,0)
 . ;;
"RTN","IBCEP8B",91,0)
 . ; start contact changes here
"RTN","IBCEP8B",92,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",93,0)
 . S Z1=$J("P&C Contact Name: ",19)_$P(IB1,U,1) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",94,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",95,0)
 . S Z1=$J("P&C Contact Phone: ",19)_$P(IB1,U,2)_"  "_$P(IB1,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",96,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",97,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",98,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",99,0)
 . S Z1=$J("Type of Facility: ",30)_$$EXTERNAL^DILFD(355.93,.11,,$P(Z,U,11))
"RTN","IBCEP8B",100,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",101,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",102,0)
 . S Z1=$J("Primary ID: ",30)_$P(Z,U,9)
"RTN","IBCEP8B",103,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",104,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",105,0)
 . S Z1=$J("ID Qualifier: ",30)_$$GET1^DIQ(355.97,$P(Z,U,13),.03) I $P(Z,U,13)]"" S Z1=Z1_" - "_$$GET1^DIQ(355.97,$P(Z,U,13),.01)
"RTN","IBCEP8B",106,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",107,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",108,0)
 . S Z1=$J("Mammography Certification #: ",30)_$P(Z,U,15)
"RTN","IBCEP8B",109,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",110,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",111,0)
 . S Z1=$J("NPI: ",30)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",112,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",113,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8B",114,0)
 . S Z1=$J("Taxonomy Code: ",30)_$P(IBPRI,U)
"RTN","IBCEP8B",115,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",116,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",117,0)
 . S IBIEN=""
"RTN","IBCEP8B",118,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8B",119,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8B",120,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",121,0)
 .. S Z1=$J("",30)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",122,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",123,0)
 . ;IB*2.0*476 - BEGIN added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",124,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",125,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",126,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",127,0)
 . S IBFBTGL=$$FBTGLGET^IBCEP8C1(IBNPRV)  ;RETURNS 1,0 OR ""
"RTN","IBCEP8B",128,0)
 . S IBFBOK="YES"
"RTN","IBCEP8B",129,0)
 . S:IBFBTGL=0 IBFBOK="NO"
"RTN","IBCEP8B",130,0)
 . S Z1=$J("Allow future updates by FEE BASIS automatic interface? : ",60)_IBFBOK
"RTN","IBCEP8B",131,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",132,0)
 . ;IB*2.0*476 - END added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",133,0)
 K VALMBG,VALMCNT
"RTN","IBCEP8B",134,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP8B",135,0)
 Q
"RTN","IBCEP8B",136,0)
 ;
"RTN","IBCEP8B",137,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP8B",138,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP8B",139,0)
 Q
"RTN","IBCEP8B",140,0)
 ;
"RTN","IBCEP8B",141,0)
 ; This checks for a post office box.  baa *488*
"RTN","IBCEP8B",142,0)
 ; Called by the input transform for file 355.93 field .05 Street Address.
"RTN","IBCEP8B",143,0)
 ;
"RTN","IBCEP8B",144,0)
BADADD(XX) ;
"RTN","IBCEP8B",145,0)
 N NOK,BADADD
"RTN","IBCEP8B",146,0)
 S NOK=0
"RTN","IBCEP8B",147,0)
 S XX=$$UP^XLFSTR(XX) ;make lower case upper
"RTN","IBCEP8B",148,0)
 I XX[" BOX #" S NOK=1
"RTN","IBCEP8B",149,0)
 I XX?.E1"BOX"." "."#"." "1N.E S NOK=1
"RTN","IBCEP8B",150,0)
 S XX=$$STRIP^XLFSTR(XX,". ") ; strip out punctuation
"RTN","IBCEP8B",151,0)
 I XX="BOX" S NOK=1
"RTN","IBCEP8B",152,0)
 I XX="BOX#" S NOK=1
"RTN","IBCEP8B",153,0)
 I XX="PO" S NOK=1
"RTN","IBCEP8B",154,0)
 I XX="POB" S NOK=1
"RTN","IBCEP8B",155,0)
 I XX="POBOX" S NOK=1
"RTN","IBCEP8B",156,0)
 I XX="POSTALBOX" S NOK=1
"RTN","IBCEP8B",157,0)
 Q NOK
"RTN","IBCEU3")
0^22^B105297417^B75406373
"RTN","IBCEU3",1,0)
IBCEU3 ;ALB/TMP - EDI UTILITIES FOR 1500 CLAIM FORM ;12/29/05 9:58am
"RTN","IBCEU3",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,323,348,371,400,432,488**;21-MAR-94;Build 184
"RTN","IBCEU3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEU3",4,0)
 ;
"RTN","IBCEU3",5,0)
BOX19(IBIFN) ; New Box 19 added for patch 488.  This is for workman's comp?
"RTN","IBCEU3",6,0)
 ; This returns the Paperwork Attachment 
"RTN","IBCEU3",7,0)
 ;     Information in the following format:
"RTN","IBCEU3",8,0)
 ;   PWKNNFX12348907CHEY<3 Spaces>Next set if more than one on claim
"RTN","IBCEU3",9,0)
 ; PWK is the qualifier for data, followed by the appropriate Report Type 
"RTN","IBCEU3",10,0)
 ;Code, the appropriate Transmission Type Code, then the Attachment Control 
"RTN","IBCEU3",11,0)
 ;Number.  Do not enter spaces between qualifiers and data.
"RTN","IBCEU3",12,0)
 ;
"RTN","IBCEU3",13,0)
 ; This information can be at either the Line Level or the Claim Level.
"RTN","IBCEU3",14,0)
 ; Check all Lines first and print as many as possible - 71 characters 
"RTN","IBCEU3",15,0)
 ; maximum.  Then check the Claim Level
"RTN","IBCEU3",16,0)
 N IBRTP,LN,U8,IBBX19,IB19,DATA,I,DEL
"RTN","IBCEU3",17,0)
 S IB19="",DEL="   ",LN=0
"RTN","IBCEU3",18,0)
 ; Get rate type
"RTN","IBCEU3",19,0)
 S IBRTP=$P($G(^DGCR(399,IBIFN,0)),U,7)
"RTN","IBCEU3",20,0)
 ; Get data entered for box 19
"RTN","IBCEU3",21,0)
 S IBBX19=$P($G(^DGCR(399,IBIFN,"UF31")),U,3)
"RTN","IBCEU3",22,0)
 ; check the line Level first
"RTN","IBCEU3",23,0)
 I IBRTP=11 D
"RTN","IBCEU3",24,0)
 .F  S LN=$O(^DGCR(399,IBIFN,"CP",LN)) Q:LN=""  Q:LN'?.N  D
"RTN","IBCEU3",25,0)
 ..S DATA=$G(^DGCR(399,IBIFN,"CP",LN,1))
"RTN","IBCEU3",26,0)
 ..I $P(DATA,U,2)'="" S IB19=IB19_$S(IB19="":"",1:DEL)_$$FORMAT(DATA)
"RTN","IBCEU3",27,0)
 .; check the Claim Level next
"RTN","IBCEU3",28,0)
 .S DATA=""
"RTN","IBCEU3",29,0)
 .S DATA=$G(^DGCR(399,IBIFN,"U8"))
"RTN","IBCEU3",30,0)
 .I DATA'="" S IB19=IB19_$S(IB19="":"",1:DEL)_$$FORMAT(DATA)
"RTN","IBCEU3",31,0)
 ; If any room left add user entered box 19 info
"RTN","IBCEU3",32,0)
 I IBBX19'="",IB19'="",$L(IB19)<84 D
"RTN","IBCEU3",33,0)
 .F I=1:1:$L(IBBX19,DEL) S DATA=$P(IBBX19,DEL,I) I DATA'="" D
"RTN","IBCEU3",34,0)
 ..I $L(IB19_DEL_DATA)<84 S IB19=IB19_$S(IB19="":"",1:DEL)_DATA
"RTN","IBCEU3",35,0)
 I IB19="",IBBX19'="" S IB19=IBBX19
"RTN","IBCEU3",36,0)
 ;
"RTN","IBCEU3",37,0)
 Q IB19
"RTN","IBCEU3",38,0)
 ;
"RTN","IBCEU3",39,0)
FORMAT(DATA) ; format data for ouput
"RTN","IBCEU3",40,0)
 N ART,OUT
"RTN","IBCEU3",41,0)
 S ART=$P(DATA,U,2)
"RTN","IBCEU3",42,0)
 S ART=$P(^IBE(353.3,ART,0),U,1)
"RTN","IBCEU3",43,0)
 S OUT="PWK"_ART_$P(DATA,U,3)_$P(DATA,U,1)
"RTN","IBCEU3",44,0)
 Q OUT
"RTN","IBCEU3",45,0)
 ;
"RTN","IBCEU3",46,0)
 ; BELOW NO LONGER USED -> BAA *488*
"RTN","IBCEU3",47,0)
OBOX19(IBIFN) ; THIS IS NOLONGER USED.  IT WAS REPLACE WITH ABOVE.
"RTN","IBCEU3",48,0)
 ; Returns the text that should print in box 19 of the CMS-1500
"RTN","IBCEU3",49,0)
 ;   for bill ien IBIFN
"RTN","IBCEU3",50,0)
 ; Data is derived from a combo of data throughout
"RTN","IBCEU3",51,0)
 ; the system and is limited to 80 characters.  The hierarchy for
"RTN","IBCEU3",52,0)
 ; including data is as follows (until 80 characters have been used):
"RTN","IBCEU3",53,0)
 ;   DATE LAST SEEN and REFERRING PHYSICIAN ID# (physical therapy)
"RTN","IBCEU3",54,0)
 ;                      specialty codes = 025,065,073,067,048
"RTN","IBCEU3",55,0)
 ;   LAST X-RAY DATE (chiropractic) specialty code = 35
"RTN","IBCEU3",56,0)
 ;   HOMEBOUND INDICATOR (independent lab renders an EKG or obtains
"RTN","IBCEU3",57,0)
 ;                        a specimen from a homebound patient)
"RTN","IBCEU3",58,0)
 ;   NO ASSIGNMENT OF BENEFITS (if no assignment of benefits indicated)
"RTN","IBCEU3",59,0)
 ;   Hearing aid testing (if applicable)
"RTN","IBCEU3",60,0)
 ;   ATTENDING PHYSICIAN NOT HOSPICE EMPLOYEE (if applicable)
"RTN","IBCEU3",61,0)
 ;   SPECIAL PROGRAM indicator if Medicare demonstration project for
"RTN","IBCEU3",62,0)
 ;                   lung volume reduction surgery study is set
"RTN","IBCEU3",63,0)
 ;   COMMENTS FOUND IN BOX 19 DATA FIELD FOR THE CLAIM
"RTN","IBCEU3",64,0)
 ;   REMARKS FOUND IN BILL COMMENT FOR THE CLAIM, INCLUDING PROSTHETICS
"RTN","IBCEU3",65,0)
 ;     DETAIL
"RTN","IBCEU3",66,0)
 ;
"RTN","IBCEU3",67,0)
 N IBGO,IBHOSP,IBID,IBLSDT,IBXDATA,IB19,IBHAID,IBXRAY,IBSPEC,Z,Z0,IBSUB,IBPRT,IBREM,IBSPI
"RTN","IBCEU3",68,0)
 S IB19="",IBGO=1
"RTN","IBCEU3",69,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEU3",70,0)
 I $D(IBXSAVE(IBSUB)) N IBXSAVE
"RTN","IBCEU3",71,0)
 S IBPRT=(IBSUB["24")
"RTN","IBCEU3",72,0)
 ;
"RTN","IBCEU3",73,0)
 S IBSPEC=$$BILLSPEC(IBIFN)
"RTN","IBCEU3",74,0)
 G:'IBPRT NPRT
"RTN","IBCEU3",75,0)
 ; Check for chiropractic services
"RTN","IBCEU3",76,0)
 I $P($G(^DGCR(399,IBIFN,"U3")),U,5)'="" S:$P($G(^DGCR(399,IBIFN,"U3")),U,4)'="" IBGO=$$LENOK("Last X-ray: "_$TR($$DATE^IBCF2($P(^DGCR(399,IBIFN,"U3"),U,4))," ","/"),.IB19)
"RTN","IBCEU3",77,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",78,0)
 ;
"RTN","IBCEU3",79,0)
 I "^25^65^73^67^48^"[(U_IBSPEC_U) D
"RTN","IBCEU3",80,0)
 . K IBXDATA D F^IBCEF("N-DATE LAST SEEN",,,IBIFN)
"RTN","IBCEU3",81,0)
 . I IBXDATA'="" S IBID="",IBLSDT=$$DATE^IBCF2(IBXDATA,0,1) D  I IBLSDT'="" S IBGO=$$LENOK("Date Last Seen:"_IBLSDT_IBID,.IB19)
"RTN","IBCEU3",82,0)
 .. ; Only print if specialty is OT or PT or proc for routine foot care
"RTN","IBCEU3",83,0)
 .. D F^IBCEF("N-REFERRING PROVIDER ID",,,IBIFN) I IBXDATA'="" S IBID=" By:"_IBXDATA
"RTN","IBCEU3",84,0)
 ;
"RTN","IBCEU3",85,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",86,0)
 K IBXDATA D F^IBCEF("N-HOMEBOUND",,,IBIFN)
"RTN","IBCEU3",87,0)
 I IBXDATA G:'$$LENOK("Homebound",.IB19) BOX19Q
"RTN","IBCEU3",88,0)
 ;
"RTN","IBCEU3",89,0)
 K IBXDATA D F^IBCEF("N-ASSIGN OF BENEFITS INDICATOR",,,IBIFN)
"RTN","IBCEU3",90,0)
 I "Nn0"[IBXDATA&(IBXDATA'="") G:'$$LENOK("Patient refuses to assign benefits",.IB19) BOX19Q
"RTN","IBCEU3",91,0)
 ;
"RTN","IBCEU3",92,0)
 I '$D(IBXSAVE(IBSUB)) D B24^IBCEF3(.IBXSAVE,IBIFN,$S($G(IBNOSHOW)=0:0,1:1))
"RTN","IBCEU3",93,0)
 ;
"RTN","IBCEU3",94,0)
 S (IBHAID,IBHOSP,IBXRAY)=0
"RTN","IBCEU3",95,0)
 ;
"RTN","IBCEU3",96,0)
 S Z=0 F  S Z=$O(IBXSAVE(IBSUB,Z)) Q:'Z  D  G:'IBGO BOX19Q
"RTN","IBCEU3",97,0)
 . I $D(IBXSAVE(IBSUB,Z,"RX")),$P(IBXSAVE(IBSUB,Z,"RX"),U,3)="" S IBGO=$$LENOK("NOC Drug:"_$P(IBXSAVE(IBSUB,Z,"RX"),U,2)_" Units:"_+$P(IBXSAVE(IBSUB,Z,"RX"),U,6),.IB19)
"RTN","IBCEU3",98,0)
 . ;
"RTN","IBCEU3",99,0)
 . Q:'IBGO
"RTN","IBCEU3",100,0)
 . I 'IBHAID,$P(IBXSAVE(IBSUB,Z),U,5)="V5010",$$COBCT^IBCEF(IBIFN)>1 D  Q
"RTN","IBCEU3",101,0)
 .. S IBHAID=1,IBGO=$$LENOK("Testing for hearing aid",.IB19) Q
"RTN","IBCEU3",102,0)
 . ;
"RTN","IBCEU3",103,0)
 . Q:'IBGO
"RTN","IBCEU3",104,0)
 . I 'IBHOSP,$P($G(IBXSAVE(IBSUB,Z,"AUX")),U,3) S IBHOSP=1,IBGO=$$LENOK("Attending physician,not hospice employee",.IB19) Q
"RTN","IBCEU3",105,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",106,0)
 K IBXDATA D F^IBCEF("N-SPECIAL PROGRAM",,,IBIFN)
"RTN","IBCEU3",107,0)
 I IBXDATA=30 G:'$$LENOK("Medicare demonstration project for lung volume reduction surgery study",.IB19) BOX19Q
"RTN","IBCEU3",108,0)
 ;
"RTN","IBCEU3",109,0)
 ; SPECIAL PROGRAM INDICATOR field code.
"RTN","IBCEU3",110,0)
 S IBSPI=$$GET1^DIQ(399,IBIFN_",",238,"E")
"RTN","IBCEU3",111,0)
 I IBSPI'="" S IBGO=$$LENOK(IBSPI,.IB19)
"RTN","IBCEU3",112,0)
 ;
"RTN","IBCEU3",113,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",114,0)
NPRT K IBXDATA D F^IBCEF("N-HCFA 1500 BOX 19 RAW DATA",,,IBIFN)
"RTN","IBCEU3",115,0)
 S IBREM=0
"RTN","IBCEU3",116,0)
 I IBXDATA'="" G:'$$LENOK("Remarks:"_IBXDATA,.IB19) BOX19Q S IBREM=1
"RTN","IBCEU3",117,0)
 K IBXDATA D F^IBCEF("N-BILL REMARKS",,,IBIFN)
"RTN","IBCEU3",118,0)
 I IBXDATA'="" G:'$$LENOK($S('IBREM:"Remarks:",1:"")_IBXDATA,.IB19) BOX19Q
"RTN","IBCEU3",119,0)
 ;
"RTN","IBCEU3",120,0)
BOX19Q Q IB19
"RTN","IBCEU3",121,0)
 ; ALL OF THE ABOVE TO OBOX19 IS NO LONGER USED *488*
"RTN","IBCEU3",122,0)
 ;
"RTN","IBCEU3",123,0)
LENOK(IBDATA,IB19) ; Add text IBDATA to box 19 string (IB19 passed by ref)
"RTN","IBCEU3",124,0)
 ; Check length of box 19 data - truncate at 71 (max length)
"RTN","IBCEU3",125,0)
 ; Returns 0 if max length reached or exceeded, otherwise, 1
"RTN","IBCEU3",126,0)
 ; Changed 96 to 71 for new 1500 form
"RTN","IBCEU3",127,0)
 N OK
"RTN","IBCEU3",128,0)
 S OK=1
"RTN","IBCEU3",129,0)
 S IB19=IB19_$S(IB19'="":" ",1:"")_$G(IBDATA)
"RTN","IBCEU3",130,0)
 I $L(IB19)'<83 S OK=0,IB19=$E(IB19,1,71) G LENOKQ
"RTN","IBCEU3",131,0)
LENOKQ Q OK
"RTN","IBCEU3",132,0)
 ;
"RTN","IBCEU3",133,0)
ASK19(IBIFN) ; Ask to display CMS-1500 box 19 data for current IBIFN
"RTN","IBCEU3",134,0)
 ;  changed to 71 length.
"RTN","IBCEU3",135,0)
 N DIR,DIC,X,Y,DIE,DR,Z
"RTN","IBCEU3",136,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A")="DISPLAY THE FULL CMS-1500 BOX 19?: "
"RTN","IBCEU3",137,0)
 D ^DIR
"RTN","IBCEU3",138,0)
 K DIR("B")
"RTN","IBCEU3",139,0)
 I Y=1 D
"RTN","IBCEU3",140,0)
 .S Z=$$BOX19(IBIFN) W !!,?4,"19",?45,$E(Z,1,23) W:$L(Z)>23 !,?4,$E(Z,24,71),!
"RTN","IBCEU3",141,0)
 .S DIR(0)="E",DIR("A")="Enter <RET> to Continue " W ! D ^DIR K DIR
"RTN","IBCEU3",142,0)
 Q
"RTN","IBCEU3",143,0)
 ;
"RTN","IBCEU3",144,0)
ONLAB(IBIFN) ; Functions returns 1 if the bill IBIFN is outside non-lab
"RTN","IBCEU3",145,0)
 N IBP,IBPUR
"RTN","IBCEU3",146,0)
 S IBP=0
"RTN","IBCEU3",147,0)
 S IBPUR=$P($G(^DGCR(399,IBIFN,"U2")),U,11)
"RTN","IBCEU3",148,0)
 I IBPUR,"13"[IBPUR S IBP=1
"RTN","IBCEU3",149,0)
 Q IBP
"RTN","IBCEU3",150,0)
 ;
"RTN","IBCEU3",151,0)
TEXT24(FLD,IBXSAVE,IBXDATA,IBSUB) ; Format the text line of box 24 by fld
"RTN","IBCEU3",152,0)
 ; INPUT:
"RTN","IBCEU3",153,0)
 ;   FLD = the letter of the field in box 24 (A-J)
"RTN","IBCEU3",154,0)
 ;   IBXSAVE = passed by reference = extracted data for the box 24 lines
"RTN","IBCEU3",155,0)
 ;   IBSUB = the subscript of the IBXSAVE array to use.
"RTN","IBCEU3",156,0)
 ;           If null, use "BOX24"
"RTN","IBCEU3",157,0)
 ; OUTPUT:
"RTN","IBCEU3",158,0)
 ;   IBXDATA = passed by reference, set to the correct part of the
"RTN","IBCEU3",159,0)
 ;             text that will print in the field's positions
"RTN","IBCEU3",160,0)
 ;
"RTN","IBCEU3",161,0)
 ; esg - 8/14/06 - modified for the new cms-1500 form - IB*2*348
"RTN","IBCEU3",162,0)
 ;
"RTN","IBCEU3",163,0)
 N Z,IBLINE,IBVAL,IBS,IBE,IBTEXT,IBAUX,IBDAT,IBZ,IBREN,IBRENQ,IBRENNPI,IBRENSID
"RTN","IBCEU3",164,0)
 K IBXDATA
"RTN","IBCEU3",165,0)
 S (IBLINE,Z)=0 S:$G(IBSUB)="" IBSUB="BOX24"
"RTN","IBCEU3",166,0)
 ;
"RTN","IBCEU3",167,0)
 I FLD="I"!(FLD="J") D   ; extract the Rendering provider data
"RTN","IBCEU3",168,0)
 . I '$G(IBXIEN) Q       ; assume that the claim# exists
"RTN","IBCEU3",169,0)
 . S IBREN=$$CFIDS^IBCEF77(IBXIEN)
"RTN","IBCEU3",170,0)
 . S IBRENQ=$P(IBREN,U,1)    ; qual
"RTN","IBCEU3",171,0)
 . S IBRENSID=$P(IBREN,U,2)  ; id
"RTN","IBCEU3",172,0)
 . S IBRENNPI=$P(IBREN,U,3)  ; npi
"RTN","IBCEU3",173,0)
 . Q
"RTN","IBCEU3",174,0)
 ;
"RTN","IBCEU3",175,0)
 F  S Z=$O(IBXSAVE(IBSUB,Z)) Q:'Z  D
"RTN","IBCEU3",176,0)
 . S IBDAT=$G(IBXSAVE(IBSUB,Z))
"RTN","IBCEU3",177,0)
 . S IBAUX=$G(IBXSAVE(IBSUB,Z,"AUX"))
"RTN","IBCEU3",178,0)
 . S IBTEXT=$G(IBXSAVE(IBSUB,Z,"TEXT"))
"RTN","IBCEU3",179,0)
 . S IBZ=$P(IBAUX,U,9)
"RTN","IBCEU3",180,0)
 . I IBZ="" S IBZ="  "
"RTN","IBCEU3",181,0)
 . S IBTEXT=IBZ_IBTEXT
"RTN","IBCEU3",182,0)
 . ;
"RTN","IBCEU3",183,0)
 . I $S($G(IBAC)=4:$S($D(IBXSAVE(IBSUB,Z,"ARX")):1,1:$D(IBXSAVE(IBSUB,Z,"A"))),$D(IBXSAVE(IBSUB,Z,"RX")):0,1:$G(IBNOSHOW)) S IBTEXT=""
"RTN","IBCEU3",184,0)
 . ;
"RTN","IBCEU3",185,0)
 . I FLD="AF" S IBVAL=$P(IBDAT,U),IBS=1,IBE=9 D   ; From date of service
"RTN","IBCEU3",186,0)
 .. S IBVAL=$E(IBVAL,1,2)_" "_$E(IBVAL,3,4)_" "_$E(IBVAL,7,8)
"RTN","IBCEU3",187,0)
 .. Q
"RTN","IBCEU3",188,0)
 . ;
"RTN","IBCEU3",189,0)
 . I FLD="AT" S IBVAL=$S($P(IBDAT,U,2):$P(IBDAT,U,2),1:$P(IBDAT,U)),IBS=10,IBE=18 D    ; To date of service
"RTN","IBCEU3",190,0)
 .. S IBVAL=$E(IBVAL,1,2)_" "_$E(IBVAL,3,4)_" "_$E(IBVAL,7,8)
"RTN","IBCEU3",191,0)
 .. Q
"RTN","IBCEU3",192,0)
 . ;
"RTN","IBCEU3",193,0)
 . I FLD="B" S IBVAL=$P(IBDAT,U,3),IBS=19,IBE=21   ; place of service
"RTN","IBCEU3",194,0)
 . I FLD="C" S IBVAL=$S($P(IBDAT,U,13)=1:"Y",1:""),IBS=22,IBE=24   ; emergency indicator
"RTN","IBCEU3",195,0)
 . I FLD="D" S IBVAL=$P(IBDAT,U,5),IBS=25,IBE=44 D   ; procedures and modifiers
"RTN","IBCEU3",196,0)
 .. N M S M=$$MODLST^IBEFUNC($P(IBDAT,U,10))       ; modifier list
"RTN","IBCEU3",197,0)
 .. S IBVAL=$$FO^IBCNEUT1(IBVAL,6)_"  "            ; procedure code
"RTN","IBCEU3",198,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",1),3)     ; mod#1
"RTN","IBCEU3",199,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",2),3)     ; mod#2
"RTN","IBCEU3",200,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",3),3)     ; mod#3
"RTN","IBCEU3",201,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",4),3)     ; mod#4
"RTN","IBCEU3",202,0)
 .. Q
"RTN","IBCEU3",203,0)
 . ;
"RTN","IBCEU3",204,0)
 . I FLD="E" D
"RTN","IBCEU3",205,0)
 .. N NUM,IN,OUT,LET
"RTN","IBCEU3",206,0)
 .. S IN="1,2,3,4,5,6,7,8,9"
"RTN","IBCEU3",207,0)
 .. S OUT="A,B,C,D,E,F,G,H,I"
"RTN","IBCEU3",208,0)
 .. S IBVAL=$P(IBDAT,U,7)
"RTN","IBCEU3",209,0)
 .. F I=1:1:4 S NUM=$P(IBVAL,",",I) D
"RTN","IBCEU3",210,0)
 ... I NUM<10 S $P(LET,",",I)=$TR(NUM,IN,OUT)
"RTN","IBCEU3",211,0)
 ... I NUM=10 S $P(LET,",",I)="J"
"RTN","IBCEU3",212,0)
 ... I NUM=11 S $P(LET,",",I)="K"
"RTN","IBCEU3",213,0)
 ... I NUM=12 S $P(LET,",",I)="L"
"RTN","IBCEU3",214,0)
 .. S IBVAL=$TR(LET,","),IBS=45,IBE=48  ; diagnosis pointer
"RTN","IBCEU3",215,0)
 . I FLD="F" S IBVAL=$P(IBDAT,U,8)*$P(IBDAT,U,9),IBS=49,IBE=57 D
"RTN","IBCEU3",216,0)
 .. ; total charges
"RTN","IBCEU3",217,0)
 .. S IBVAL=$$DOL^IBCEF77(IBVAL,9)
"RTN","IBCEU3",218,0)
 .. I $L(IBVAL)>9 S IBVAL=$E(IBVAL,$L(IBVAL)-8,$L(IBVAL))
"RTN","IBCEU3",219,0)
 .. Q
"RTN","IBCEU3",220,0)
 . ;
"RTN","IBCEU3",221,0)
 . I FLD="G" S IBVAL=$S($P(IBDAT,U,12):$P(IBDAT,U,12),1:$P(IBDAT,U,9)),IBS=58,IBE=61 D
"RTN","IBCEU3",222,0)
 .. ; days or units or anesthesia minutes
"RTN","IBCEU3",223,0)
 .. S IBVAL=$J(+IBVAL,4)
"RTN","IBCEU3",224,0)
 .. Q
"RTN","IBCEU3",225,0)
 . ;
"RTN","IBCEU3",226,0)
 . ; columns H,I,J don't have any free text supplemental information
"RTN","IBCEU3",227,0)
 . ;
"RTN","IBCEU3",228,0)
 . I FLD="H" D     ; epsdt family plan
"RTN","IBCEU3",229,0)
 .. S IBVAL=$P(IBAUX,U,7),IBS=0,IBE=0,IBTEXT=""   ; line 1 blank
"RTN","IBCEU3",230,0)
 .. I IBVAL S IBVAL="Y"
"RTN","IBCEU3",231,0)
 .. Q
"RTN","IBCEU3",232,0)
 . I FLD="I" D     ; ID qualifier for rendering provider
"RTN","IBCEU3",233,0)
 .. S IBVAL="",IBS=1,IBE=2   ; line 2 blank
"RTN","IBCEU3",234,0)
 .. S IBTEXT=$G(IBRENQ)      ; qualifier on line 1
"RTN","IBCEU3",235,0)
 .. Q
"RTN","IBCEU3",236,0)
 . I FLD="J" D     ; rendering provider ID and NPI
"RTN","IBCEU3",237,0)
 .. S IBTEXT=$G(IBRENSID),IBS=1,IBE=11   ; secondary ID line 1
"RTN","IBCEU3",238,0)
 .. S IBVAL=$G(IBRENNPI)                 ; NPI# line 2
"RTN","IBCEU3",239,0)
 .. Q
"RTN","IBCEU3",240,0)
 . ;
"RTN","IBCEU3",241,0)
 . S IBLINE=IBLINE+1                      ; top line
"RTN","IBCEU3",242,0)
 . S IBXDATA(IBLINE)=$E(IBTEXT,IBS,IBE)   ; text in shaded area (top)
"RTN","IBCEU3",243,0)
 . S IBLINE=IBLINE+1             ; bottom line
"RTN","IBCEU3",244,0)
 . S IBXDATA(IBLINE)=IBVAL       ; field value in unshaded area (bottom)
"RTN","IBCEU3",245,0)
 . Q
"RTN","IBCEU3",246,0)
 ;
"RTN","IBCEU3",247,0)
 Q
"RTN","IBCEU3",248,0)
 ;
"RTN","IBCEU3",249,0)
LINSPEC(IBIFN) ; Checks the specialities of line and claim level providers
"RTN","IBCEU3",250,0)
 ; called from IBCBB2 to check for Chiro codes & IBCBB9 to check for 99's on Medicare
"RTN","IBCEU3",251,0)
 ; Default = 99 if no valid SPEC code found for line and claim level provider
"RTN","IBCEU3",252,0)
 ; Get rendering for professional, attending for institutional
"RTN","IBCEU3",253,0)
 ; If multiple lines w/ rendering or attending, returns a string of spec codes
"RTN","IBCEU3",254,0)
 N Z,IBSPEC,IBINS,IBDT,IBCP,IBSPC
"RTN","IBCEU3",255,0)
 S IBSPC=""
"RTN","IBCEU3",256,0)
 S IBDT=$P($G(^DGCR(399,+IBIFN,"U")),U,1)  ; use statement from date
"RTN","IBCEU3",257,0)
 S IBINS=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEU3",258,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCEU3",259,0)
 S Z=$S('IBINS:3,1:4)
"RTN","IBCEU3",260,0)
 ; check claim level
"RTN","IBCEU3",261,0)
 I $G(IBPRV(Z,1))'="" D
"RTN","IBCEU3",262,0)
 . I $P(IBPRV(Z,1),U,3) S IBSPEC=$$SPEC^IBCEU($P($G(IBPRV(Z,1)),U,3),IBDT) I IBSPEC'="" S IBSPC=IBSPC_U_IBSPEC Q
"RTN","IBCEU3",263,0)
 . S Z0=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEU3",264,0)
 . I Z0 S IBSPEC=$P($G(^DGCR(399,IBIFN,"PRV",Z0,0)),U,8) S:IBSPEC="" IBSPEC=99 S IBSPC=IBSPC_U_IBSPEC
"RTN","IBCEU3",265,0)
 ; Check line level
"RTN","IBCEU3",266,0)
 S IBCP=0 F  S IBCP=$O(^DGCR(399,IBIFN,"CP",IBCP)) Q:'IBCP  D
"RTN","IBCEU3",267,0)
 .S Z0=+$O(^DGCR(399,IBIFN,"CP",IBCP,"LNPRV","B",Z,0))
"RTN","IBCEU3",268,0)
 .I Z0 S IBSPEC=$P($G(^DGCR(399,IBIFN,"CP",IBCP,"LNPRV",Z0,0)),U,8) S:IBSPEC="" IBSPEC="99" S IBSPC=IBSPC_U_IBSPEC
"RTN","IBCEU3",269,0)
 S:IBSPC="" IBSPC=99
"RTN","IBCEU3",270,0)
 Q IBSPC
"RTN","IBCEU3",271,0)
 ;
"RTN","IBCEU3",272,0)
BILLSPEC(IBIFN,IBPRV) ;  Returns the specialty of the provider on bill IBIFN
"RTN","IBCEU3",273,0)
 ; If IBPRV is supplied, returns the data for that provider, otherwise,
"RTN","IBCEU3",274,0)
 ;  returns the specialty of the 'main/required' provider on the bill.
"RTN","IBCEU3",275,0)
 ;  Default = 99 if no valid code found
"RTN","IBCEU3",276,0)
 ; IBPRV = vp of provider (file 200 or 355.93)
"RTN","IBCEU3",277,0)
 N Z,IBSPEC,IBINS,IBDT
"RTN","IBCEU3",278,0)
 S IBSPEC="",IBPRV=$G(IBPRV)
"RTN","IBCEU3",279,0)
 S IBDT=$P($G(^DGCR(399,+IBIFN,"U")),U,1)  ; use statement from date
"RTN","IBCEU3",280,0)
 ;
"RTN","IBCEU3",281,0)
 I $G(IBPRV) D  G SPECQ
"RTN","IBCEU3",282,0)
 . S IBSPEC=$$SPEC^IBCEU(IBPRV,IBDT)
"RTN","IBCEU3",283,0)
 ;
"RTN","IBCEU3",284,0)
 ;Get rendering for professional, attending for institutional,
"RTN","IBCEU3",285,0)
 S IBINS=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEU3",286,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCEU3",287,0)
 S Z=$S('IBINS:3,1:4)
"RTN","IBCEU3",288,0)
 I $G(IBPRV(Z,1))'="" D
"RTN","IBCEU3",289,0)
 . I $P(IBPRV(Z,1),U,3) S IBSPEC=$$SPEC^IBCEU($P($G(IBPRV(Z,1)),U,3),IBDT) Q:IBSPEC'=""
"RTN","IBCEU3",290,0)
 . S Z0=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEU3",291,0)
 . I Z0,$P($G(^DGCR(399,IBIFN,"PRV",Z0,0)),U,8)'="" S IBSPEC=$P(^(0),U,8)
"RTN","IBCEU3",292,0)
 ;
"RTN","IBCEU3",293,0)
SPECQ I IBSPEC="" S IBSPEC="99"
"RTN","IBCEU3",294,0)
 Q IBSPEC
"RTN","IBCEU3",295,0)
 ;
"RTN","IBCEU3",296,0)
CHAMPVA(IBIFN) ; Returns 1 if the bill IBIFN has a CHAMPVA rate type
"RTN","IBCEU3",297,0)
 Q $E($P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U),1,7)="CHAMPVA"
"RTN","IBCEU3",298,0)
 ;
"RTN","IBCEU3",299,0)
FAC(IBIFN) ; Obsolete function.  Used by old output formatter field and data element N-RENDERING INSTITUTION
"RTN","IBCEU3",300,0)
 Q ""
"RTN","IBCEU3",301,0)
 ;
"RTN","IBCEU3",302,0)
MCR24K(IBIFN,IBPRV) ;Function returns MEDICARE id# for professional (CMS-1500) box 24k for bill IBIFN if appropriate
"RTN","IBCEU3",303,0)
 ;*432/TAZ - Added IBPRV to allow circumvent the call to F^IBCEF("N-SPECIALTY CODE","IBZ",,IBIFN) in MCRSPEC^IBCEU4
"RTN","IBCEU3",304,0)
 Q $S($$FT^IBCEF(IBIFN)=2&$$MCRONBIL^IBEFUNC(IBIFN):"V"_$$MCRSPEC^IBCEU4(IBIFN,1,$G(IBPRV))_$P($$SITE^VASITE,U,3),1:"")
"RTN","IBCF2")
0^23^B20654334^B18859512
"RTN","IBCF2",1,0)
IBCF2 ;ALB/ARH - HCFA 1500 19-90 DATA (gather demographics) ;12-JUN-93
"RTN","IBCF2",2,0)
 ;;2.0;INTEGRATED BILLING;**17,52,88,122,51,137,488**;21-MAR-94;Build 184
"RTN","IBCF2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF2",4,0)
 ;
"RTN","IBCF2",5,0)
DEV ; IBIFN required
"RTN","IBCF2",6,0)
 N IBF
"RTN","IBCF2",7,0)
 S IBFT=$$FTN^IBCU3(2),IBF=$P($G(^IBE(353,+IB,2)),U,8)
"RTN","IBCF2",8,0)
 S:IBF="" IBF=2 ;Forces the use of the output formatter to print bills
"RTN","IBCF2",9,0)
 D ENFMT^IBCF(IBIFN,2,IBF)
"RTN","IBCF2",10,0)
 K IBFT
"RTN","IBCF2",11,0)
 Q
"RTN","IBCF2",12,0)
 ; Obsolete calls to print bill routines follows
"RTN","IBCF2",13,0)
 S %ZIS="Q",%ZIS("A")="Output Device: "
"RTN","IBCF2",14,0)
 S %ZIS("B")=$P($G(^IBE(353,+$P($G(^DGCR(399,IBIFN,0)),"^",19),0)),"^",2)
"RTN","IBCF2",15,0)
 D ^%ZIS G:POP Q
"RTN","IBCF2",16,0)
 I $D(IO("Q")) S ZTRTN="EN^IBCF2",ZTDESC="PRINT HCFA1500",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G Q
"RTN","IBCF2",17,0)
 U IO D EN
"RTN","IBCF2",18,0)
Q I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBCF2",19,0)
 Q
"RTN","IBCF2",20,0)
 ;
"RTN","IBCF2",21,0)
EN ;begin gathering data for printing of HCFA 1500
"RTN","IBCF2",22,0)
 ;IBIFN must be defined
"RTN","IBCF2",23,0)
 K IBFLD,IBZ
"RTN","IBCF2",24,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)) Q:IB(0)=""
"RTN","IBCF2",25,0)
 S DFN=+$P(IB(0),U,2) Q:'$D(^DPT(DFN,0))  D ARRAY
"RTN","IBCF2",26,0)
 S IBJ=1 S:'$D(IBPNT) IBPNT=0 S IBXIEN=IBIFN D F^IBCEF("N-PRINT BILL SUBMIT STATUS","IBZ") S IBFLD(0,1)=IBZ,IBJ=IBJ+1
"RTN","IBCF2",27,0)
MAIL F IBI="M","M1" S IB(IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBCF2",28,0)
 S IBFLD(0,IBJ)=$P(IB("M"),U,4),IBJ=IBJ+1
"RTN","IBCF2",29,0)
 F IBI=$P(IB("M"),U,5),$P(IB("M"),U,6),$P(IB("M1"),U,1) I IBI'="" S IBFLD(0,IBJ)=IBI S IBJ=IBJ+1
"RTN","IBCF2",30,0)
 K Y S Y=$P(IB("M"),U,9) D ZIPOUT^VAFADDR
"RTN","IBCF2",31,0)
 S IBFLD(0,IBJ)=$P(IB("M"),U,7)_", "_$$STATE(+$P(IB("M"),U,8))_" "_Y
"RTN","IBCF2",32,0)
 K Y
"RTN","IBCF2",33,0)
 ;
"RTN","IBCF2",34,0)
PAT D DEM^VADPT
"RTN","IBCF2",35,0)
 S IBFLD("1A")=$P(VADM(2),U,2) ; ssn
"RTN","IBCF2",36,0)
 S IBFLD(2)=VADM(1) ; patient name
"RTN","IBCF2",37,0)
 S IBFLD("3D")=$$DATE(+VADM(3),1) ; date of birth
"RTN","IBCF2",38,0)
 S IBFLD("3X")=$P(VADM(5),U,1) ; sex (m/f)
"RTN","IBCF2",39,0)
 S IBFLD("8M")=$S("146"[+VADM(10):"S","25"[+VADM(10):"M",1:"O") ;marital status
"RTN","IBCF2",40,0)
 K VADM,VA
"RTN","IBCF2",41,0)
 S X=+$P($G(^DPT(DFN,.311)),U,15),IBFLD("8E")=$S(",1,2,4,6,"[X:"E",1:"") ;employed?
"RTN","IBCF2",42,0)
 S IBSPE=+$P($G(^DPT(DFN,.25)),U,15),IBSPE=$S(",1,2,4,6,"[IBSPE:"E",1:"") ; spouse employed?
"RTN","IBCF2",43,0)
 ;
"RTN","IBCF2",44,0)
PATADD D ADD^VADPT
"RTN","IBCF2",45,0)
 S IBFLD(5,1)=VAPA(1)_" "_VAPA(2)_" "_VAPA(3) ;patient's street address
"RTN","IBCF2",46,0)
 S IBFLD(5,2)=VAPA(4),IBFLD(5,3)=$P(VAPA(11),U,2) ;patient's city, zip
"RTN","IBCF2",47,0)
 S IBFLD("5S")=$$STATE(+VAPA(5)) ; patient's state
"RTN","IBCF2",48,0)
 S IBFLD("5T")=VAPA(8) ; patients phone number
"RTN","IBCF2",49,0)
 K VAPA
"RTN","IBCF2",50,0)
 ;
"RTN","IBCF2",51,0)
NEXT D ^IBCF21 ; gather remaining data
"RTN","IBCF2",52,0)
 ;
"RTN","IBCF2",53,0)
PRINT D ^IBCF2P ; print
"RTN","IBCF2",54,0)
 ;
"RTN","IBCF2",55,0)
END ;set print status
"RTN","IBCF2",56,0)
 I $G(IBXERR)="",'$G(IBXPARM("TEST")),'$$NEEDMRA^IBEFUNC(IBIFN) D
"RTN","IBCF2",57,0)
 .S (DIC,DIE)=399,DA=IBIFN,DR="[IB STATUS]",IBYY=$S($P($G(^DGCR(399,IBIFN,"S")),U,12)="":"@92",1:"@94") D ^DIE K DIC,DIE,IBYY,DA,DR
"RTN","IBCF2",58,0)
 .D BSTAT^IBCDC(IBIFN) ; remove from AB list
"RTN","IBCF2",59,0)
 ;
"RTN","IBCF2",60,0)
 K DFN,IB,IBI,IBJ,IBK,IBX,IBY,IBSPE,IBFLD,IBFL,IBDXI,X,Y,VAERR
"RTN","IBCF2",61,0)
 Q
"RTN","IBCF2",62,0)
 ;
"RTN","IBCF2",63,0)
ARRAY ; Added "10D" for patch 488
"RTN","IBCF2",64,0)
 F IBI=1:1:6 S IBFLD(0,IBI)=""
"RTN","IBCF2",65,0)
 F IBI=1:1:21,23:1:26,28:1:33 S IBFLD(IBI)=""
"RTN","IBCF2",66,0)
 F IBI=10,16,18 F IBJ="A","B" S IBFLD(IBI_IBJ)=""
"RTN","IBCF2",67,0)
 F IBI="10BS","10C","10D","11AX","11B","11C","11D","1A","3D","3X","5S","5T","8E","8M","9A","9BD","9BX","9C","9D","17A" S IBFLD(IBI)=""
"RTN","IBCF2",68,0)
 Q
"RTN","IBCF2",69,0)
 ;
"RTN","IBCF2",70,0)
DATE(X,Y2K,NULL) ; returns date in form format
"RTN","IBCF2",71,0)
 ; X = date in FM format,  Y2K = 1 if 4 digit year required
"RTN","IBCF2",72,0)
 ; If NULL = 1, then the delimiter should be null, not space
"RTN","IBCF2",73,0)
 ; Format is MM DD YY or MMDDYY or MM DD YYYY or MMDDYYYY
"RTN","IBCF2",74,0)
 N IBDELIM
"RTN","IBCF2",75,0)
 S Y2K=+$G(Y2K) S:Y2K>1 Y2K=1
"RTN","IBCF2",76,0)
 S IBDELIM=$S('$G(NULL):" ",1:"")
"RTN","IBCF2",77,0)
 Q $S(X:$E(X,4,5)_IBDELIM_$E(X,6,7)_IBDELIM_$S($G(Y2K):$E(X,1,3)+(Y2K*1700),1:$E(X,2,3)),1:X)
"RTN","IBCF2",78,0)
 ;
"RTN","IBCF2",79,0)
STATE(X) ; returns 2 letter abbreviation for state pointer
"RTN","IBCF2",80,0)
 Q $P($G(^DIC(5,+X,0)),U,2)
"RTN","IBCF2",81,0)
 ;
"RTN","IBCF2",82,0)
ENF ;Output the bill via formatter
"RTN","IBCF2",83,0)
 N Z
"RTN","IBCF2",84,0)
 S Z=$$EXTRACT^IBCEFG(2,IBIFN)
"RTN","IBCF2",85,0)
 Q
"RTN","IBCF2",86,0)
 ;
"RTN","IBCF2",87,0)
NAME31(IBIFN,IBZNM) ; Returns the name of the provider
"RTN","IBCF2",88,0)
 ;   formatted to print in Box 31 on the HCFA 1500.  Max length is 21
"RTN","IBCF2",89,0)
 ; IBZNM = PROVIDER NAME in last,first<space>middle^file 200 ien^cred
"RTN","IBCF2",90,0)
 N IBXDATA,IBZ,IBNM,IBMID,IBMIDI,IB1,IB2
"RTN","IBCF2",91,0)
 I '$D(^DGCR(399,IBIFN,"PRV",0)) S IBNM=$E($P($G(IBZNM),U),1,21) G NAMEQ
"RTN","IBCF2",92,0)
 I $G(IBZNM)="" D  ;
"RTN","IBCF2",93,0)
 . D F^IBCEF("N-ATT/REND PHYSICIAN NAME","IBZNM",,IBIFN)
"RTN","IBCF2",94,0)
 S IBNM=$$NAME^IBCEFG1($P(IBZNM,U,1,2)) ;returns last^first^middle
"RTN","IBCF2",95,0)
 S IB1=$P(IBNM,U,2),IB2=$P(IBNM,U),IBMID=$S($P(IBNM,U,3)'="":" "_$P(IBNM,U,3)_" ",1:" "),IBMIDI=$E($P(IBNM,U,3))_" "
"RTN","IBCF2",96,0)
 ;
"RTN","IBCF2",97,0)
 I $L(IB2)>21 S IBNM=$E(IB2,1,21) G NAMEQ ; Last name truncated
"RTN","IBCF2",98,0)
 S IBNM=IB1_IBMID_IB2 ; First-name middle-name last-name
"RTN","IBCF2",99,0)
 ; Trim it to 21 characters according to formula
"RTN","IBCF2",100,0)
 I $L(IBNM)'>21 G NAMEQ ; First-init middle-init last-name
"RTN","IBCF2",101,0)
 S IBNM=$E(IB1)_IBMIDI_IB2
"RTN","IBCF2",102,0)
 I $L(IBNM)'>21 G NAMEQ ; Last-name only
"RTN","IBCF2",103,0)
 S IBNM=IB2
"RTN","IBCF2",104,0)
 ;
"RTN","IBCF2",105,0)
NAMEQ Q IBNM
"RTN","IBCF2",106,0)
 ;
"RTN","IBCF2",107,0)
DATE31(IBDT,IBIFN) ; Returns date to print in box 31 of HCFA 1500
"RTN","IBCF2",108,0)
 ;  Either first print date (IBDT) or today's date if never printed
"RTN","IBCF2",109,0)
 I $G(IBIFN),'$D(^DGCR(399,IBIFN,"PRV",0)) Q ""
"RTN","IBCF2",110,0)
 I IBDT="" S IBDT=DT
"RTN","IBCF2",111,0)
 Q $$FMTE^XLFDT(IBDT,"5D")
"RTN","IBCF2",112,0)
 ;
"RTN","IBCF2",113,0)
 ; 
"RTN","IBCF2",114,0)
 ; Start ->BAA *488*
"RTN","IBCF2",115,0)
DXIND(IBIFN) ; Returns 0 for ICD10 codes and 9 for ICD9 codes.
"RTN","IBCF2",116,0)
 ; This sets the diagnosis ind to a 9. If the diagnosis is ICD10
"RTN","IBCF2",117,0)
 ; it is set to zero
"RTN","IBCF2",118,0)
 N IBDXX,IBPOX,IBDXI,ICD,DATA
"RTN","IBCF2",119,0)
 D SET^IBCSC4D(IBIFN,.IBDXX,.IBPOX)
"RTN","IBCF2",120,0)
 S IBDXI=""
"RTN","IBCF2",121,0)
 I $G(IBPOX(1)) D
"RTN","IBCF2",122,0)
 .S ICD=$P(IBPOX(1),U,1)
"RTN","IBCF2",123,0)
 .S IBDXI=9
"RTN","IBCF2",124,0)
 .S DATA=$$ICD9^IBACSV(ICD) I $P(DATA,U,19)=30 S IBDXI=0
"RTN","IBCF2",125,0)
 Q IBDXI
"RTN","IBCF2",126,0)
 ; End ->BAA *488*
"RTN","IBCF21")
0^24^B15664460^B13370698
"RTN","IBCF21",1,0)
IBCF21 ;ALB/ARH - HCFA 1500 19-90 DATA (gather insurance, cc) ;12-JUN-93
"RTN","IBCF21",2,0)
 ;;2.0;INTEGRATED BILLING;**8,80,51,488**;21-MAR-94;Build 184
"RTN","IBCF21",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF21",4,0)
 ;
"RTN","IBCF21",5,0)
 ; requires IBIFN
"RTN","IBCF21",6,0)
INS S IBFLD("11AD")=""
"RTN","IBCF21",7,0)
 F IBI=1,2,3 S IB("I"_IBI)=$G(^DGCR(399,IBIFN,("I"_IBI)))
"RTN","IBCF21",8,0)
 F IBI="I1","I2","I3" I IB(IBI)'="" S IBX=+$P(IB(IBI),U,16),IBY="IBR"_IBI,@IBY=IBX I IBX'=1,IBX'=2 D  S @IBY=IBX ;pt's rel to insured
"RTN","IBCF21",9,0)
 . I $P(IB(IBI),U,6)="v" D:'$D(VAEL) ELIG^VADPT I +VAEL(4) S IBX=1 Q  ;vet is the patient
"RTN","IBCF21",10,0)
 . I $P(IB(IBI),U,6)="s" D:'$D(VAEL) ELIG^VADPT I +VAEL(4) S IBX=2 Q  ;vet is pt, so vets spouse is pt's spouse
"RTN","IBCF21",11,0)
 . I 'IBX S IBX=9 ; else relationship of insured to patient unknown
"RTN","IBCF21",12,0)
 K VAEL
"RTN","IBCF21",13,0)
 ;
"RTN","IBCF21",14,0)
 S IBCOB=$P($G(^DGCR(399,IBIFN,0)),U,21),IBPRIM="I1",IBRIP=$G(IBRI1),IBSECD="I2",IBRIS=$G(IBRI2)
"RTN","IBCF21",15,0)
 I IBCOB="S" S IBPRIM="I2",IBRIP=$G(IBRI2),IBSECD="I1",IBRIS=$G(IBRI1)
"RTN","IBCF21",16,0)
 I IBCOB="T" S IBPRIM="I3",IBRIP=$G(IBRI3),IBSECD="I1",IBRIS=$G(IBRI1)
"RTN","IBCF21",17,0)
 ;
"RTN","IBCF21",18,0)
INS1 G INS2:IB(IBPRIM)=""!('$D(^DIC(36,+IB(IBPRIM),0)))
"RTN","IBCF21",19,0)
 F IBI=$P(IB(IBPRIM),U,2),$P(IB(IBPRIM),U,3) I IBI'="" S IBFLD("1A")=IBI Q  ;policy number
"RTN","IBCF21",20,0)
 S IBFLD(4)=$S(IBRIP=1:"SAME",1:$P(IB(IBPRIM),U,17)) ; insureds name
"RTN","IBCF21",21,0)
 S IBFLD(6)=$S('$P(IB(IBPRIM),U,16):IBRIP,1:+$P(IB(IBPRIM),U,16)) ; patient relationship to insured
"RTN","IBCF21",22,0)
 I IBRIP=1!(IBRIP=2) S IBFLD(7)="SAME" ; insured's address
"RTN","IBCF21",23,0)
 ;
"RTN","IBCF21",24,0)
 I $P(IB(IBPRIM),U,2)'="" S IBFLD(11)=$P(IB(IBPRIM),U,3) ; group number
"RTN","IBCF21",25,0)
 I IBRIP=1 S IBFLD("11AD")=IBFLD("3D"),IBFLD("11AX")=IBFLD("3X")
"RTN","IBCF21",26,0)
 ;I +IBRIP=1,IBFLD("8E")="E" S VAOA("A")=5 D OAD^VADPT S IBFLD("11B")=VAOA(9) K VAOA ;employer *488*
"RTN","IBCF21",27,0)
 I +IBRIP=2 D
"RTN","IBCF21",28,0)
 . I IBFLD("3X")'="" S X="MFM",IBFLD("11AX")=$E(X,$F(X,IBFLD("3X")))
"RTN","IBCF21",29,0)
 . ;I IBSPE="E" S VAOA("A")=6 D OAD^VADPT S IBFLD("11B")=VAOA(9) K VAOA ;spouses employer *488*
"RTN","IBCF21",30,0)
 S IBFLD("11C")=$P(IB(IBPRIM),U,15)
"RTN","IBCF21",31,0)
 ;
"RTN","IBCF21",32,0)
INS2 G COND:IB(IBSECD)=""!('$D(^DIC(36,+IB(IBSECD),0))) ; secondary insurance
"RTN","IBCF21",33,0)
 S IBFLD("11D")=1
"RTN","IBCF21",34,0)
 S IBFLD(9)=$P(IB(IBSECD),U,17) I IBFLD(9)'="",IBFLD(9)=$P(IB(IBPRIM),U,17) S IBFLD(9)="SAME" ;secondary insureds nam
"RTN","IBCF21",35,0)
 F IBI=$P(IB(IBSECD),U,2),$P(IB(IBSECD),U,3) I IBI'="" S IBFLD("9A")=IBI Q  ;policy number
"RTN","IBCF21",36,0)
 I +IBRIS=1 D  ;box 9b & 9c no longer used *488*
"RTN","IBCF21",37,0)
 . ;S IBFLD("9BD")=IBFLD("3D"),IBFLD("9BX")=IBFLD("3X")
"RTN","IBCF21",38,0)
 . ;I IBFLD("8E")="E" S VAOA("A")=5 D OAD^VADPT S IBFLD("9C")=VAOA(9) K VAOA ;employer
"RTN","IBCF21",39,0)
 I +IBRIS=2 D  ;box 9b & 9c no longer used *488*
"RTN","IBCF21",40,0)
 . ;I IBFLD("3X")'="" S X="MFM",IBFLD("9BX")=$E(X,$F(X,IBFLD("3X")))
"RTN","IBCF21",41,0)
 . ;I IBSPE="E" S VAOA("A")=6 D OAD^VADPT S IBFLD("9C")=VAOA(9) K VAOA ;spouses employer
"RTN","IBCF21",42,0)
 I IBFLD("9A")=$P(IB(IBSECD),U,3) S IBFLD("9D")=$P(IB(IBSECD),U,15) ;group name
"RTN","IBCF21",43,0)
 I IBFLD("9D")="" S IBFLD("9D")=$P($G(^DIC(36,+IB(IBSECD),0)),U) ;company name
"RTN","IBCF21",44,0)
 ;
"RTN","IBCF21",45,0)
COND ;condition related to employment, auto accident (place), other accident
"RTN","IBCF21",46,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CC",IBI)) Q:'IBI  S X=$G(^(IBI,0)) I +X D
"RTN","IBCF21",47,0)
 . S Y=$G(^DGCR(399.1,+X,0)) Q:Y=""  I $P(Y,U,2)="02" S IBFLD("10A")=1
"RTN","IBCF21",48,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S X=$G(^(IBI,0)) I +X D
"RTN","IBCF21",49,0)
 . S Y=$G(^DGCR(399.1,+X,0)) Q:Y=""
"RTN","IBCF21",50,0)
 . I $P(Y,U,9)=1 S IBFLD("10A")=1
"RTN","IBCF21",51,0)
 . I $P(Y,U,9)=2 S IBFLD("10B")=1 S X=$$STATE^IBCF2($P(X,U,3)) I X'="" S IBFLD("10BS")=X
"RTN","IBCF21",52,0)
 . I $P(Y,U,9)=3 S IBFLD("10C")=1
"RTN","IBCF21",53,0)
 . ;I $P(Y,U,1)="ONSET OF SYMPTOMS/ILLNESS" S IBFLD(15)=$$DATE^IBCF2($P(X,U,2),1) ; see DATES+1^IBCF22
"RTN","IBCF21",54,0)
 ;
"RTN","IBCF21",55,0)
BX10D ; box 10D now condition codes *488*
"RTN","IBCF21",56,0)
 S IBFLD("10D")=$$CLMCDS(IBIFN)
"RTN","IBCF21",57,0)
 ;
"RTN","IBCF21",58,0)
BX11B ; box 11b now property/casualty claim number  *488*
"RTN","IBCF21",59,0)
 N BX11B
"RTN","IBCF21",60,0)
 S BX11B=$P($G(^DGCR(399,IBIFN,"U4")),U,2) S IBFLD("11B")=$S(BX11B'="":"Y4 "_BX11B,1:"")
"RTN","IBCF21",61,0)
 ;
"RTN","IBCF21",62,0)
 K IBRI1,IBRI2,IBRI3,IBCOB,IBPRIM,IBSECD,IBRIP,IBRIS,BX11B
"RTN","IBCF21",63,0)
 D ^IBCF22
"RTN","IBCF21",64,0)
 Q
"RTN","IBCF21",65,0)
 ;
"RTN","IBCF21",66,0)
CLMCDS(IBIFN) ; Claim codes for box 10D. Add with *488*
"RTN","IBCF21",67,0)
 N IBI,DEL,IBXDATA,CLMCDS,CLCD
"RTN","IBCF21",68,0)
 S IBI=0,DEL=" ",CLMCDS=""
"RTN","IBCF21",69,0)
 K IBXDATA D F^IBCEF("N-CONDITION CODES",,,IBIFN)
"RTN","IBCF21",70,0)
 ; Build data
"RTN","IBCF21",71,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D
"RTN","IBCF21",72,0)
 .S CLCD=IBXDATA(IBI)
"RTN","IBCF21",73,0)
 .I $L(CLMCDS_DEL_CLCD)<20 S CLMCDS=CLMCDS_$S(CLMCDS="":"",1:DEL)_CLCD
"RTN","IBCF21",74,0)
 Q CLMCDS
"RTN","IBCF22")
0^25^B23925078^B10161856
"RTN","IBCF22",1,0)
IBCF22 ;ALB/ARH - HCFA 1500 19-90 DATA (gather other data) ;12-JUN-93
"RTN","IBCF22",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,122,51,210,488**;21-MAR-94;Build 184
"RTN","IBCF22",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF22",4,0)
 ;
"RTN","IBCF22",5,0)
 ; requires DFN, IBIFN, IB(0)
"RTN","IBCF22",6,0)
 F IBI="C","U","U1","U2","UF2" S IB(IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBCF22",7,0)
 S IBFLD(12)="PUBLIC LAW 99-272/SECTION 1729 TITLE 38"
"RTN","IBCF22",8,0)
 S IBFLD(13)="PUBLIC LAW 99-272"
"RTN","IBCF22",9,0)
DATES ;S IBFLD(14)=$$DATE($$EVENT(IBIFN))
"RTN","IBCF22",10,0)
 ;I $G(IBFLD(15))="",IBIFN'=$P(IB(0),U,17) S IBFLD(15)=$$DATE($P($G(^DGCR(399,+$P(IB(0),U,17),0)),U,3))
"RTN","IBCF22",11,0)
 ;The following sets up the dates and qualifiers for the dates in boxes 14 & 15 *488*
"RTN","IBCF22",12,0)
 S IBFLD(14)=$$QUAL(IBIFN,14),IBFLD(14.1)=$P(IBFLD(14),U,2)
"RTN","IBCF22",13,0)
 S IBFLD(14)=$$DATE($P(IBFLD(14),U,1))
"RTN","IBCF22",14,0)
 S IBFLD(15)=$$QUAL(IBIFN,15),IBFLD(15.1)=$P(IBFLD(15),U,2)
"RTN","IBCF22",15,0)
 S IBFLD(15)=$$DATE($P(IBFLD(15),U,1))
"RTN","IBCF22",16,0)
 S IBFLD("16A")=$$DATE($P(IB("U"),U,16)),IBFLD("16B")=$$DATE($P(IB("U"),U,17))
"RTN","IBCF22",17,0)
 S:$$NEEDMRA^IBEFUNC(IBIFN) IBFLD(17)="Dept. Of Veterans Affairs"
"RTN","IBCF22",18,0)
 I $P(IB(0),U,5)<3 S IBFLD("18A")=$$DATE($P(IB("U"),U,1)),IBFLD("18B")=$$DATE($P(IB("U"),U,2))
"RTN","IBCF22",19,0)
 I $P(IB(0),U,5)>2 S VAINDT=$P(IB(0),U,3) D INP^VADPT I +VAIN(1) D
"RTN","IBCF22",20,0)
 . S IBFLD("18A")=$$DATE(VAIN(7)),IBFLD("18B")=$$DATE(+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0)))
"RTN","IBCF22",21,0)
 K VAINDT,VAIN
"RTN","IBCF22",22,0)
 ;S IBFLD(19)="THE UNDERSIGNED CERTIFIES TREATMENT IS NOT FOR A SERVICE-CONNECTED CONDITION"  *488*
"RTN","IBCF22",23,0)
 S IBFLD(20)=0
"RTN","IBCF22",24,0)
 ;
"RTN","IBCF22",25,0)
DX ;S X=14 F IBI="21A","21B","21C","21D" S IBFLD(IBI)=$P($G(^ICD9(+$P(IB("C"),U,X),0)),U,1),X=X+1
"RTN","IBCF22",26,0)
 ;F IBI="21A","21B","21C","21D" S IBFLD(IBI)=""
"RTN","IBCF22",27,0)
 ;N IBINDXX D SET^IBCSC4D(IBIFN,"",.IBINDXX) S X=0,Y="21@" D
"RTN","IBCF22",28,0)
 ;. F  S X=$O(IBINDXX(X)) Q:'X  S Y=$O(IBFLD(Y)) Q:+Y'=21  S IBFLD(Y)=$P($G(^ICD9(+IBINDXX(X),0)),U,1)
"RTN","IBCF22",29,0)
 ; *488* changes 4 to 12 for the number of ICD codes
"RTN","IBCF22",30,0)
 N IBDXX,IBPOX
"RTN","IBCF22",31,0)
 D SET^IBCSC4D(IBIFN,.IBDXX,.IBPOX)
"RTN","IBCF22",32,0)
 S X=0 F IBI=1:1:12 S IBFLD(21,IBI)="" I IBI'>$P(IBPOX,U,2) D
"RTN","IBCF22",33,0)
 . S X=$O(IBPOX(X)) Q:X=""
"RTN","IBCF22",34,0)
 . S IBFLD(21,IBI)=$P($$ICD9^IBACSV(+IBPOX(X)),U)
"RTN","IBCF22",35,0)
 . S IBDXI(+$G(IBDXX(+IBPOX(X))))=IBI
"RTN","IBCF22",36,0)
 S IBFLD("21A")=9 ; NEED TO ADD CODE TO DETERMIN IF ICD10 CODES USED WHEN 
"RTN","IBCF22",37,0)
 ;  ICD10 PROJECT GOES LIVE ->BAA *488*
"RTN","IBCF22",38,0)
 S IBFLD(23)=$P(IB("U"),U,13)
"RTN","IBCF22",39,0)
 ;
"RTN","IBCF22",40,0)
 D ^IBCF23 ; block 24
"RTN","IBCF22",41,0)
 ;
"RTN","IBCF22",42,0)
 S IBFLD(25)=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBCF22",43,0)
 S IBFLD(26)=$$BN1^PRCAFN(IBIFN)
"RTN","IBCF22",44,0)
 S IBFLD(28)=+IB("U1")
"RTN","IBCF22",45,0)
 S IBFLD(29)=+$P(IB("U1"),U,2)
"RTN","IBCF22",46,0)
 S IBFLD(30)=IBFLD(28)-IBFLD(29)
"RTN","IBCF22",47,0)
LAST3 S IBFLD(31)=$G(^DGCR(399,IBIFN,"UF2")) ;assuming there are 3 available lines
"RTN","IBCF22",48,0)
 S X=+$P($G(^IBE(350.9,1,0)),U,2),Y=$G(^DIC(4,X,0)),IBI=1 I Y'="" D
"RTN","IBCF22",49,0)
 . S IBFLD(32,1)=$P(Y,U,1),IBX=+$P(Y,U,2),Y=$G(^DIC(4,X,1))
"RTN","IBCF22",50,0)
 . S IBFLD(32,2)=$P(Y,U,1) I $P(Y,U,2)'="" S IBFLD(32,2)=IBFLD(32,2)_", "_$P(Y,U,2)
"RTN","IBCF22",51,0)
 . S IBFLD(32,3)=$P(Y,U,3),IBFLD(32,"X")=$$STATE^IBCF2(IBX)_" "_$P(Y,U,4)
"RTN","IBCF22",52,0)
 S X=$G(^IBE(350.9,1,2))
"RTN","IBCF22",53,0)
 S IBFLD(33,1)=$P(X,U,1),IBFLD(33,2)=$P(X,U,2)
"RTN","IBCF22",54,0)
 S IBFLD(33,3)=$P(X,U,3),IBFLD(33,"X")=$$STATE^IBCF2($P(X,U,4))_" "_$P(X,U,5)
"RTN","IBCF22",55,0)
 S IBFLD(33,4)=$P(X,U,6)
"RTN","IBCF22",56,0)
 ;
"RTN","IBCF22",57,0)
END Q
"RTN","IBCF22",58,0)
 ;
"RTN","IBCF22",59,0)
EVENT(IBIFN,IBXSAVE,IBERR,IBD) ; The event date for box 14 on the
"RTN","IBCF22",60,0)
 ;   HCFA 1500
"RTN","IBCF22",61,0)
 ; IBIFN = bill ien
"RTN","IBCF22",62,0)
 ; IBXSAVE = the array returned by the output formatter for data element
"RTN","IBCF22",63,0)
 ;          N-OCCURRENCE CODES
"RTN","IBCF22",64,0)
 ; Returns IBERR=1 if passed by reference meaning more than one condition
"RTN","IBCF22",65,0)
 ;         has been found
"RTN","IBCF22",66,0)
 ; IBD("LMP"), IBD("ACC"), IBD("ONS"), IBD("EVT") returned with
"RTN","IBCF22",67,0)
 ;           Last menstrual period date, accident date, date of onset,
"RTN","IBCF22",68,0)
 ;           event date if IBD passed by reference
"RTN","IBCF22",69,0)
 ; Function returns the appropriate date
"RTN","IBCF22",70,0)
 ;
"RTN","IBCF22",71,0)
 N Z,Z0,IBX,IBF,A
"RTN","IBCF22",72,0)
 ;
"RTN","IBCF22",73,0)
 ; Default if no applicable occurrence codes found is event date on bill
"RTN","IBCF22",74,0)
 S IBX=$P($G(^DGCR(399,IBIFN,0)),U,3),IBF=0 S IBD("EVT")=IBX
"RTN","IBCF22",75,0)
 ;
"RTN","IBCF22",76,0)
 I '$D(IBXSAVE("OCC")) D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCF22",77,0)
 S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  S Z0(+IBXSAVE("OCC",Z))=$P(IBXSAVE("OCC",Z),U,2)
"RTN","IBCF22",78,0)
 I $O(Z0(5.99),-1) D
"RTN","IBCF22",79,0)
 . S A=$O(Z0(5.99),-1),IBF=IBF+1 ;Accident codes 1-5
"RTN","IBCF22",80,0)
 . S IBD("ACC")=Z0(A) S:IBF'>1 IBX=Z0(A)
"RTN","IBCF22",81,0)
 I $D(Z0(10)) S IBF=IBF+1,IBD("LMP")=IBX S:IBF'>1 IBX=Z0(10) ;Last Menstrual period
"RTN","IBCF22",82,0)
 I $D(Z0(11)) S (IBD("ONS"),IBX)=Z0(11),IBF=IBF+1 ;Onset of Illness
"RTN","IBCF22",83,0)
 ;
"RTN","IBCF22",84,0)
 S IBERR=(IBF>1)
"RTN","IBCF22",85,0)
 Q IBX
"RTN","IBCF22",86,0)
 ;
"RTN","IBCF22",87,0)
DATE(X) ; format date(X) as MM DD YYYY
"RTN","IBCF22",88,0)
 Q $$DATE^IBCF2(X,1)
"RTN","IBCF22",89,0)
 ;
"RTN","IBCF22",90,0)
 ; below are changes for *488*
"RTN","IBCF22",91,0)
QUAL(IBIFN,IBXBOX,IBXSAVE,IBD) ; The event date for box 14 & box 15 on the
"RTN","IBCF22",92,0)
 ; HCFA 1500
"RTN","IBCF22",93,0)
 ; IBIFN = bill ien
"RTN","IBCF22",94,0)
 ; IBXBOX = BOX 14 OR BOX 15 of CMS-1500 form
"RTN","IBCF22",95,0)
 ; IBXSAVE = the array returned by the output formatter for data element
"RTN","IBCF22",96,0)
 ; N-OCCURRENCE CODES
"RTN","IBCF22",97,0)
 ; 
"RTN","IBCF22",98,0)
 ; IBD("LMP"), IBD("ACC"), IBD("ONS"), IBD("EVT") returned with
"RTN","IBCF22",99,0)
 ; Last menstrual period date, accident date, date of onset,
"RTN","IBCF22",100,0)
 ; event date if IBD passed by reference
"RTN","IBCF22",101,0)
 ; Function returns the appropriate date
"RTN","IBCF22",102,0)
 ;
"RTN","IBCF22",103,0)
 N Z,Z0,IBX,IBF,A
"RTN","IBCF22",104,0)
 ;
"RTN","IBCF22",105,0)
 I '$D(IBXSAVE("OCC")) D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCF22",106,0)
 S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  S Z0(+IBXSAVE("OCC",Z))=$P(IBXSAVE("OCC",Z),U,2)
"RTN","IBCF22",107,0)
 ;
"RTN","IBCF22",108,0)
 S IBX=""
"RTN","IBCF22",109,0)
 I IBXBOX=14 D
"RTN","IBCF22",110,0)
 .; Default if no applicable occurrence codes found is event date on bill
"RTN","IBCF22",111,0)
 . S IBX=$P($G(^DGCR(399,IBIFN,0)),U,3)_U_431,IBF=0 S IBD("EVT")=IBX
"RTN","IBCF22",112,0)
 . I $D(Z0(11)) S (IBD("ONS"),IBX)=Z0(11),IBF=IBF+1,IBX=IBX_U_431 ;Onset of Illness
"RTN","IBCF22",113,0)
 . I $D(Z0(10)) S IBF=IBF+1,IBD("LMP")=IBX S:IBF'>1 IBX=Z0(10)_U_484 ;Last Menstrual period
"RTN","IBCF22",114,0)
 ;
"RTN","IBCF22",115,0)
 I IBXBOX=15 D
"RTN","IBCF22",116,0)
 .S IBX=""
"RTN","IBCF22",117,0)
 .D ACC I IBX'="" Q
"RTN","IBCF22",118,0)
 .D LXRY I IBX'="" Q
"RTN","IBCF22",119,0)
 .D AMCC I IBX'="" Q
"RTN","IBCF22",120,0)
 .D SCPT I IBX'="" Q
"RTN","IBCF22",121,0)
 .D INTTRT I IBX'="" Q
"RTN","IBCF22",122,0)
 .D LVC
"RTN","IBCF22",123,0)
 ;
"RTN","IBCF22",124,0)
 Q IBX
"RTN","IBCF22",125,0)
 ;
"RTN","IBCF22",126,0)
ACC ;Accident - 439
"RTN","IBCF22",127,0)
 N IBF
"RTN","IBCF22",128,0)
 S IBF=0
"RTN","IBCF22",129,0)
 I $O(Z0(5.99),-1) D
"RTN","IBCF22",130,0)
 . S A=$O(Z0(5.99),-1),IBF=IBF+1 ;Accident codes 1-5
"RTN","IBCF22",131,0)
 . S IBD("ACC")=Z0(A) S:IBF'>1 IBX=Z0(A)
"RTN","IBCF22",132,0)
 . I IBX'="" S IBX=IBX_U_"439"
"RTN","IBCF22",133,0)
 Q
"RTN","IBCF22",134,0)
 ;
"RTN","IBCF22",135,0)
LXRY ; Last X-Ray - 455
"RTN","IBCF22",136,0)
 S IBX=$P($G(^DGCR(399,IBIFN,"U3")),U,4)
"RTN","IBCF22",137,0)
 I IBX'="" S IBX=IBX_U_"455",IBD("AMC")=IBX
"RTN","IBCF22",138,0)
 ;
"RTN","IBCF22",139,0)
SCPT ; Prescription - 471
"RTN","IBCF22",140,0)
 N IBRX,RXNM,RXDT
"RTN","IBCF22",141,0)
 D SET^IBCSC5A(IBIFN,.IBRX)
"RTN","IBCF22",142,0)
 I 'IBRX Q
"RTN","IBCF22",143,0)
 S RXNM=$O(IBRX(""))
"RTN","IBCF22",144,0)
 I RXNM="" Q
"RTN","IBCF22",145,0)
 S RXDT=$O(IBRX(RXNM,""))
"RTN","IBCF22",146,0)
 I RXDT="" Q
"RTN","IBCF22",147,0)
 S IBX=RXDT_U_"471"
"RTN","IBCF22",148,0)
 Q
"RTN","IBCF22",149,0)
 ;
"RTN","IBCF22",150,0)
LVC ;Latest Visit or Consultation - 304
"RTN","IBCF22",151,0)
 S IBXDATA=""
"RTN","IBCF22",152,0)
 D F^IBCEF("N-DATE LAST SEEN",,,IBIFN)
"RTN","IBCF22",153,0)
 I IBXDATA'="" S IBD("LVC")=IBXDATA,IBX=IBXDATA_U_"304"
"RTN","IBCF22",154,0)
 Q
"RTN","IBCF22",155,0)
 ;
"RTN","IBCF22",156,0)
INTTRT ;Initial Treatment - 454
"RTN","IBCF22",157,0)
 S IBX=$P($G(^DGCR(399,IBIFN,"U3")),U,5)
"RTN","IBCF22",158,0)
 I IBX'="" S IBX=IBX_U_"454",IBD("INT")=IBX
"RTN","IBCF22",159,0)
 Q
"RTN","IBCF22",160,0)
 ;
"RTN","IBCF22",161,0)
AMCC ;Acute Manifestation of Chronic Condition - 453
"RTN","IBCF22",162,0)
 S IBX=$P($G(^DGCR(399,IBIFN,"U3")),U,6)
"RTN","IBCF22",163,0)
 I IBX'="" S IBX=IBX_U_"453",IBD("AMC")=IBX
"RTN","IBCF22",164,0)
 Q
"RTN","IBCF22",165,0)
 ;
"RTN","IBCF23")
0^39^B46459420^B40963193
"RTN","IBCF23",1,0)
IBCF23 ;ALB/ARH - HCFA 1500 19-90 DATA (block 24, procs and charges) ;12-JUN-93
"RTN","IBCF23",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,122,51,152,137,402,432,488**;21-MAR-94;Build 184
"RTN","IBCF23",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCF23",4,0)
 ;
"RTN","IBCF23",5,0)
 ;requires IBIFN,IB(0),IB("U"),IB("U1"), returns # of line items in IBFLD(24)
"RTN","IBCF23",6,0)
 ;rev code array: IBRC("proc^division^basc flag^bedsection^rev code^unit chrg^Rx seq #")=units
"RTN","IBCF23",7,0)
 ;proc array:    IBCP(initial print ord)=proc date^proc^division^basc flag^dx^pos^tos^modifier^unit chrg^purch chrg amt^anesthesia mins^emerg indicator
"RTN","IBCF23",8,0)
 ;                    IBCP(initial print order,seq #)=auxillary data
"RTN","IBCF23",9,0)
 ;proc array:    IBSS("proc^division^basc flag^dx^pos^tos^modifier^unit chrg^Rx seq #")=lowest inital print order
"RTN","IBCF23",10,0)
 ;print order array:  IBPO(final print ord,emerg indicator,initial print order)=""
"RTN","IBCF23",11,0)
 ;print array:        IBFLD(24,I)=begin dt^end dt^pos^tos^proc^dx^unit chrg^units^modifier pointer ien(s) separated by commas^purch chrg amt^anesthesia mins^emerg indicator
"RTN","IBCF23",12,0)
 ;                    IBFLD(24,I,"AUX")=[auxillary data]
"RTN","IBCF23",13,0)
 ;                                 = "AUX" node of proc entry
"RTN","IBCF23",14,0)
 ;                    IBFLD(24,I,"RX")= soft link to file 362.4 or null
"RTN","IBCF23",15,0)
 ;                         if service is Rx, but no soft link
"RTN","IBCF23",16,0)
 ;                                   
"RTN","IBCF23",17,0)
 ;charge item link:   IBLINK(CPT IFN in multiple,RCIFN) = proc^division^basc flag^bedsection^rev code^unit chrg^rx seq #
"RTN","IBCF23",18,0)
 ;
"RTN","IBCF23",19,0)
 ; dx's used in arrays are ref #s
"RTN","IBCF23",20,0)
 ;
"RTN","IBCF23",21,0)
RVC ; charges array
"RTN","IBCF23",22,0)
 D RVCE(,IBIFN)
"RTN","IBCF23",23,0)
 Q
"RTN","IBCF23",24,0)
 ;
"RTN","IBCF23",25,0)
RVCE(IBXIEN,IBIFN) ;Entry for EDI formatter call (IBXIEN will be defined)
"RTN","IBCF23",26,0)
 ; IBIFN required
"RTN","IBCF23",27,0)
 N IBRC,IBCP,IBSS,IBSSO,IBSS1,IBPO,IBLINK,IBLINK1,IBLINKRX,IBK,IBAUXLN
"RTN","IBCF23",28,0)
 N IBI,IBJ,IB11,IBLN,IBPDT,IBCHARG,IBMOD,IBPC,IBRX,IBRXF,IBPO2A,IBAUX
"RTN","IBCF23",29,0)
 ;
"RTN","IBCF23",30,0)
 S IBRX=0
"RTN","IBCF23",31,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"RC",IBI)) Q:'IBI  S IBLN=^(IBI,0) D
"RTN","IBCF23",32,0)
 . S IBSS="",IBPC=0 F IBJ=6,7,0,5,1,2,14 S IBPC=IBPC+1 S:IBJ $P(IBSS,U,IBPC,IBPC+1)=($P(IBLN,U,IBJ)_U)
"RTN","IBCF23",33,0)
 . I $P(IBSS,U,2)="" S $P(IBSS,U,2)=$P(^DGCR(399,IBIFN,0),U,22)
"RTN","IBCF23",34,0)
 . I +IBSS S $P(IBSS,U)=$P(IBSS,U)_";ICPT("
"RTN","IBCF23",35,0)
 . S $P(IBSS,U,3)=$S($D(^DGCR(399,"ASC1",+$P(IBLN,U,6),IBIFN,IBI)):1,1:"")
"RTN","IBCF23",36,0)
 . I +$P(IBLN,U,10)=3 D  Q  ; Rx
"RTN","IBCF23",37,0)
 .. I '$P(IBLN,U,15) S IBRX=IBRX+1,$P(IBSS,U,8)=(100+IBRX)
"RTN","IBCF23",38,0)
 .. I $P(IBLN,U,15) S $P(IBSS,U,8)=$P(IBLN,U,15)
"RTN","IBCF23",39,0)
 .. S IBRC(IBSS,"RX")=$P(IBLN,U,11)_U_IBI_U_$P(IBLN,U,15)
"RTN","IBCF23",40,0)
 .. S IBRC(IBSS)=$G(IBRC(IBSS))+1
"RTN","IBCF23",41,0)
 . ;
"RTN","IBCF23",42,0)
 . S IBRC(IBSS)=$G(IBRC(IBSS))+$P(IBLN,U,3) ; total units for similar RC
"RTN","IBCF23",43,0)
 . I "4"[+$P(IBLN,U,10),$P(IBLN,U,11) D  ; Soft-link proc with the rev cd
"RTN","IBCF23",44,0)
 .. S IBLINK(+$P(IBLN,U,11),IBI)=IBSS
"RTN","IBCF23",45,0)
 .. S $P(IBLINK(+$P(IBLN,U,11),IBI),U,7)=$P(IBLN,U,14)
"RTN","IBCF23",46,0)
 . I $P(IBLN,U,10) D
"RTN","IBCF23",47,0)
 .. S IBLINK1(IBSS,IBI)=$P(IBLN,U,10)_U_+$P(IBLN,U,11)
"RTN","IBCF23",48,0)
 . S IBRC(IBSS,"LNK")=IBI
"RTN","IBCF23",49,0)
 ;
"RTN","IBCF23",50,0)
 S IBSSO="" F  S IBSSO=$O(IBRC(IBSSO)) Q:IBSSO=""  I $D(IBRC(IBSSO,"RX")) D
"RTN","IBCF23",51,0)
 . S IBSS=IBSSO,IBI=$P(IBRC(IBSSO,"RX"),U,2),IB11=$P(IBRC(IBSSO,"RX"),U,3)
"RTN","IBCF23",52,0)
 . S IBRC(IBSSO)=1,IBLINKRX($S($P(IBSSO,U)>0:$P(IBSSO,U),$P($G(^DGCR(399,IBIFN,"CP",+IB11,0)),U)'="":$P(^(0),U),1:0),+IB11,+IBRC(IBSSO,"RX"))=IBSSO K IBRC(IBSSO,"RX")
"RTN","IBCF23",53,0)
 ;
"RTN","IBCF23",54,0)
 D PRC^IBCF23A ; Extract procedures
"RTN","IBCF23",55,0)
PO ; print order array w/chrgs
"RTN","IBCF23",56,0)
 ; combine multiple entries of same proc onto one line item via print order
"RTN","IBCF23",57,0)
 ;if both have print orders defined then they should not be combined onto one line item
"RTN","IBCF23",58,0)
 ;"proc^division^basc^dx^pos^tos^modifier(s)^unit chrg^purchased chg" must all be the same as well as the emergency indicator and all 'aux flds'
"RTN","IBCF23",59,0)
 N IBP,Z,IBPO11
"RTN","IBCF23",60,0)
 S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  S IBCP=IBCP(IBPO),IBSS=$P(IBCP,U,2,9),IBSS1="*"_$G(IBCP(IBPO,"AUX")),IBAUX=0 D
"RTN","IBCF23",61,0)
 . I $D(IBSS(IBSS)),'$D(IBCP(IBPO,"RX")),IBPO>1000 D  Q  ; combine lines
"RTN","IBCF23",62,0)
 .. I 'IBAUX S IBAUX=$$AUXOK^IBCF23A(.IBSS,IBSS1)
"RTN","IBCF23",63,0)
 .. S IBPO1=$S(IBAUX:IBSS(IBSS,IBAUX),1:IBPO)
"RTN","IBCF23",64,0)
 .. I 'IBAUX S Z=+$O(IBSS(IBSS,"A"),-1)+1,IBSS(IBSS,Z)=IBPO
"RTN","IBCF23",65,0)
 .. I IBPO>1000!(IBPO1>1000) S IBPO(IBPO1,+$P(IBCP,U,12),IBPO)="" D
"RTN","IBCF23",66,0)
 ... I $O(IBCP(IBPO,"L",0)) S Z=$O(IBCP(IBPO,"L",0)),IBPO(IBPO1,+$P(IBCP,U,12),IBPO,"L",Z)=IBCP(IBPO,"L",Z) K IBCP(IBPO,"L",Z)
"RTN","IBCF23",67,0)
 . S IBAUX=+$O(IBSS(IBSS,"A"),-1)+1,IBSS(IBSS,"AUX-X",IBAUX)=IBSS1
"RTN","IBCF23",68,0)
 . S IBSS(IBSS,IBAUX)=+IBPO,IBPO(+IBPO,+$P(IBCP,U,12),IBPO)=""
"RTN","IBCF23",69,0)
 . S Z=0 F  S Z=$O(IBCP(IBPO,Z)) Q:'Z  S IBPO(+IBPO,+$P(IBCP,U,12),IBPO,Z)=""
"RTN","IBCF23",70,0)
 . I $O(IBCP(IBPO,"L",0)) S Z=$O(IBCP(IBPO,"L",0)),IBPO(+IBPO,+$P(IBCP,U,12),IBPO,"L",Z)=IBCP(IBPO,"L",Z) K IBCP(IBPO,"L",Z)
"RTN","IBCF23",71,0)
 . S IBSS(IBSS,IBAUX,"AUX")=IBSS1,IBPO(+IBPO,+$P(IBCP,U,12),IBPO,"AUX")=$E(IBSS1,2,$L(IBSS1))
"RTN","IBCF23",72,0)
 . I $D(IBCP(IBPO,"RX")) S IBPO(+IBPO,+$P(IBCP,U,12),IBPO,"RX")=IBCP(IBPO,"RX"),IBSS(IBSS,IBAUX,"RX")=IBCP(IBPO)
"RTN","IBCF23",73,0)
 ;
"RTN","IBCF23",74,0)
 ; Find any remaining rev codes w/units that ref existing procedures
"RTN","IBCF23",75,0)
 S IBP(0)=0
"RTN","IBCF23",76,0)
 F IBP=3,2 Q:$G(IBP(0))  S IBRV="" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""  I IBRV,IBRC(IBRV) D
"RTN","IBCF23",77,0)
 . S IBSS1=$O(IBSS($P(IBRV,U,1,IBP))) Q:$P(IBRV,U,1,IBP)'=$P(IBSS1,U,1,IBP)
"RTN","IBCF23",78,0)
 . S IBP(0)=1,Z=0
"RTN","IBCF23",79,0)
 . F  S Z=$O(IBSS(IBSS1,Z)) Q:'Z  I $G(IBSS(IBSS1,Z)) D  Q
"RTN","IBCF23",80,0)
 .. I $D(IBCP(IBSS(IBSS1,Z))),$P(IBCP(IBSS(IBSS1,Z)),U,9)=$P(IBSS1,U,8) D
"RTN","IBCF23",81,0)
 ... N Q,Q0
"RTN","IBCF23",82,0)
 ... ; S Q=$O(IBCP(""),-1)+1,Q0=$P(IBCP(IBSS(IBSS1,Z)),U,12) ; WCJ;IB*488
"RTN","IBCF23",83,0)
 ... S Q=IBSS(IBSS1,Z),Q0=$P(IBCP(IBSS(IBSS1,Z)),U,12) ; WCJ;IB*488
"RTN","IBCF23",84,0)
 ... ;M IBPO(Q,$P(IBCP(IBSS(IBSS1,Z)),U,12),Q)=IBPO(IBSS(IBSS1,Z),$P(IBCP(IBSS(IBSS1,Z)),U,12),IBSS(IBSS1,Z)),IBCP(Q)=IBCP(IBSS(IBSS1,Z))  ; WCJ;IB*488
"RTN","IBCF23",85,0)
 ... ;S $P(IBCP(Q),U,9)=$P(IBRV,U,6) ; WCJ;IB*488
"RTN","IBCF23",86,0)
 ... ;F Z0=1:1:(IBRC(IBRV)-1) S IBPO(Q,Q0,Q+(Z0*.01))=IBPO(Q,Q0,Q)  I Z0=99,(IBRC(IBRV)'=100) S IBPO(Q,Q0,Q_".991")=(IBRC(IBRV)-1)_"^99" Q  ; Only put first 99 in array
"RTN","IBCF23",87,0)
 ... F Z0=1:1:(IBRC(IBRV)) S IBPO(Q,Q0,Q+(Z0*.001))=IBPO(Q,Q0,Q)  ; changing to .001 allows us up to 999 and the units field only allows 800. ; WCJ;IB*488
"RTN","IBCF23",88,0)
 ... S IBRC(IBRV)=0
"RTN","IBCF23",89,0)
 ;
"RTN","IBCF23",90,0)
PRTARR ;print proc array
"RTN","IBCF23",91,0)
 S IBREV="",IBPO1="",IBI=0 F  S IBPO1=$O(IBPO(IBPO1)) Q:IBPO1=""  D
"RTN","IBCF23",92,0)
 . K IBRXF
"RTN","IBCF23",93,0)
 . S IBEMG="" F  S IBEMG=$O(IBPO(IBPO1,IBEMG)) Q:IBEMG=""!("01"'[IBEMG)  S IBPO2="" D
"RTN","IBCF23",94,0)
 .. S IBDT1=99999999,IBDT2="",(IBMIN,IBUNIT)=0,(IBCHARG,IBAUX)=""
"RTN","IBCF23",95,0)
 .. F  S IBPO2=$O(IBPO(IBPO1,IBEMG,IBPO2)) Q:IBPO2=""  D
"RTN","IBCF23",96,0)
 ... I IBPO2#1=.991 D  Q:IBPO2#1=.991
"RTN","IBCF23",97,0)
 .... N Z
"RTN","IBCF23",98,0)
 .... S Z=$G(IBPO(IBPO1,IBEMG,IBPO2)) Q:'Z
"RTN","IBCF23",99,0)
 .... I ($P(Z,U,2)+1)>Z Q
"RTN","IBCF23",100,0)
 .... S $P(IBPO(IBPO1,IBEMG,IBPO2),U,2)=($P(Z,U,2)+1),IBPO2=(IBPO2\1)_".99"
"RTN","IBCF23",101,0)
 ... S Z=0 F  S Z=$O(IBPO(IBPO1,IBEMG,IBPO2,Z)) Q:'Z  S IBUNIT=IBUNIT+1
"RTN","IBCF23",102,0)
 ... I $D(IBCP(IBPO1)) S IBPO11=IBPO1
"RTN","IBCF23",103,0)
 ... S IBPO2A=$S($D(IBCP(IBPO2\1)):IBPO2\1,'$D(IBCP(IBPO2)):IBPO11,1:IBPO2)
"RTN","IBCF23",104,0)
 ... S IBCHARG=$P(IBCP(IBPO2A),U,9),IBPCHG=$P(IBCP(IBPO2A),U,10)
"RTN","IBCF23",105,0)
 ... ; I IBCHARG<10000,IBCHARG*(IBUNIT+1)'<10000 D  Q  ;$9,999 limit per line ;WCJ IB*488
"RTN","IBCF23",106,0)
 ... I IBCHARG<10000000,IBCHARG*(IBUNIT+1)'<10000000 D  Q  ; increased to $9,999,999 charge limit per line since that is printed form space limit ;WCJ IB*488
"RTN","IBCF23",107,0)
 .... N Z S Z=$O(IBPO(IBPO1\1+1),-1),Z=Z+$S(IBPO1+.001'=Z:.001,1:0) M IBPO(Z,IBEMG,IBPO2)=IBPO(IBPO1,IBEMG,IBPO2) K IBPO(IBPO1,IBEMG,IBPO2)
"RTN","IBCF23",108,0)
 ... S IBUNIT=IBUNIT+1,IBSS=IBCP(IBPO2A),IBMIN=IBMIN+$P(IBSS,U,11)
"RTN","IBCF23",109,0)
 ... S IBSS=$G(IBSS)_U_$G(IBCP(IBPO2A,"LNK"))
"RTN","IBCF23",110,0)
 ... S Z=$O(IBPO(IBPO1,IBEMG,IBPO2,"L",0)) I Z D
"RTN","IBCF23",111,0)
 .... S Z0=0
"RTN","IBCF23",112,0)
 .... F Z=Z:1 Q:'$O(IBPO(IBPO1,IBEMG,IBPO2,"L",0))!(Z0=IBUNIT)  I $D(IBPO(IBPO1,IBEMG,IBPO2,"L",Z))  S IBSS("L",Z)=IBPO(IBPO1,IBEMG,IBPO2,"L",Z),Z0=Z0+1 K IBPO(IBPO1,IBEMG,IBPO2,"L",Z)
"RTN","IBCF23",113,0)
 ... S:IBDT1>+IBSS IBDT1=+IBSS S:IBDT2<+IBSS IBDT2=+IBSS
"RTN","IBCF23",114,0)
 .. S IBAUX=$G(IBCP(IBPO1,"AUX")) S:$D(IBCP(IBPO1,"RX")) IBRXF=IBCP(IBPO1,"RX")
"RTN","IBCF23",115,0)
 .. I IBUNIT D B24^IBCF23A
"RTN","IBCF23",116,0)
 .. K IBRXF
"RTN","IBCF23",117,0)
 ;
"RTN","IBCF23",118,0)
 ;print any chrgs not associated with a proc (ie. not enough procs or proc not in "CP" level)
"RTN","IBCF23",119,0)
 S IBRV="" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""  I +IBRC(IBRV) D  D B24^IBCF23A K IBRXF
"RTN","IBCF23",120,0)
 . S IBUNIT=+IBRC(IBRV),IBCHARG=$P(IBRV,U,6),IBDT1=+IB("U"),IBDT2=$P(IB("U"),U,2),IBREV=$P(IBRV,U,5),IBEMG=0,IBAUX=""
"RTN","IBCF23",121,0)
 . S IBSS="^"_$S(+IBRV:$P(IBRV,U),1:$P($G(^DGCR(399.1,+$P(IBRV,U,4),0)),U))
"RTN","IBCF23",122,0)
 . S IBSS=$G(IBSS)_U_$$RC2CP^IBCEF22(IBIFN,+$G(IBRC(IBRV,"LNK")))
"RTN","IBCF23",123,0)
 . S Z=$O(IBLINK1(IBRV,0)) I Z D
"RTN","IBCF23",124,0)
 .. S Z0=0
"RTN","IBCF23",125,0)
 .. F Z=Z:1 Q:'$O(IBLINK1(IBRV,0))!(Z0=IBUNIT)  I $D(IBLINK1(IBRV,Z)) S IBSS("L",Z)=IBLINK1(IBRV,Z),Z0=Z0+1 K IBLINK1(IBRV,Z)
"RTN","IBCF23",126,0)
 ;
"RTN","IBCF23",127,0)
OFFSET ;
"RTN","IBCF23",128,0)
 S IBFLD(24)=IBI ;line item count
"RTN","IBCF23",129,0)
 K IBRC,IBCP,IBSS,IBPO,IBPO1,IBPO2,IBLN,IBRV,IBRV1,IBPDT,IBDT1,IBDT2,IBCHARG,IBMIN,IBUNIT,IBREV,IBLINK,IBLINK1,IBEMG,IBPCHG,Z
"RTN","IBCF23",130,0)
 Q
"RTN","IBCF23",131,0)
 ;
"RTN","IBCF23",132,0)
DATE(X) ; Fm dt in X ==> YYYYMMDD
"RTN","IBCF23",133,0)
 Q $$DT^IBCEFG1(X,,"D8")
"RTN","IBCF23",134,0)
 ;
"RTN","IBCF23",135,0)
B24 ; Moved to IBCF23A for space
"RTN","IBCF23",136,0)
 D B24^IBCF23A
"RTN","IBCF23",137,0)
 Q
"RTN","IBCF23",138,0)
 ;
"RTN","IBCF2P")
0^26^B12251451^B10880923
"RTN","IBCF2P",1,0)
IBCF2P ;ALB/ARH - PRINT HCFA 1500 12-90 FORM ; 17-JUL-93
"RTN","IBCF2P",2,0)
 ;;2.0;INTEGRATED BILLING;**8,52,133,488**;21-MAR-94;Build 184
"RTN","IBCF2P",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF2P",4,0)
 ;
"RTN","IBCF2P",5,0)
PRINT ; print the form, IBFLD required
"RTN","IBCF2P",6,0)
 S IBADDM=+$P($G(^IBE(350.9,1,1)),U,27),IBPAGE=1
"RTN","IBCF2P",7,0)
 F IBI=1:1:6 W !,?IBADDM,$G(IBFLD(0,IBI)) ;mailing address
"RTN","IBCF2P",8,0)
LINE8 ; insured's ID number
"RTN","IBCF2P",9,0)
 W !!,?49,$E(IBFLD("1A"),1,28)
"RTN","IBCF2P",10,0)
LINE10 ; patient name, DOB, sex; insured's name ("SAME" if patient)
"RTN","IBCF2P",11,0)
 W !!,$E(IBFLD(2),1,28),?30,IBFLD("3D"),?($S(IBFLD("3X")="M":41,1:46)),"X",?49,$E(IBFLD(4),1,28)
"RTN","IBCF2P",12,0)
LINE12 ; patient's address (street); pt. rel to ins.; insured's address
"RTN","IBCF2P",13,0)
 W !!,$E(IBFLD(5,1),1,28),?($S(+IBFLD(6)=1:32,+IBFLD(6)=2:37,+IBFLD(6)=3:41,1:46)),"X",?49,$E(IBFLD(7),1,28)
"RTN","IBCF2P",14,0)
LINE14 ; patient addr city, state code, marital status; insured's city, state
"RTN","IBCF2P",15,0)
 W !!,$E(IBFLD(5,2),1,24),?25,IBFLD("5S"),?($S(IBFLD("8M")="S":34,IBFLD("8M")="M":40,1:46)),"X",?49
"RTN","IBCF2P",16,0)
LINE16 ; patient zip code, phone; patient employment status; insured's zip code, phone
"RTN","IBCF2P",17,0)
 W !!,$E(IBFLD(5,3),1,12),?14,IBFLD("5T"),?34,$S(IBFLD("8E")="E":"X",1:""),?49
"RTN","IBCF2P",18,0)
LINE18 ; other insured's name; insured's policy group
"RTN","IBCF2P",19,0)
 W !!,$E(IBFLD(9),1,28),?49,$E(IBFLD(11),1,28)
"RTN","IBCF2P",20,0)
LINE20 ; other insured's policy number; condition related to employment?; insured's date of birth and sex
"RTN","IBCF2P",21,0)
 W !!,$E(IBFLD("9A"),1,28),?($S(+IBFLD("10A"):34,1:40)),"X"
"RTN","IBCF2P",22,0)
 W ?53,IBFLD("11AD") I IBFLD("11AX")'="" W ?($S(IBFLD("11AX")="M":67,1:74)),"X"
"RTN","IBCF2P",23,0)
LINE22 ; other insured's DOB, sex; patient auto accident & place; insured's employer
"RTN","IBCF2P",24,0)
 W !!  ;,?1,IBFLD("9BD") I IBFLD("9BX")'="" W ?($S(IBFLD("9BX")="M":17,1:23)),"X"  *488*
"RTN","IBCF2P",25,0)
 W ?($S(+IBFLD("10B"):34,1:40)),"X",?44,IBFLD("10BS"),?49,$E(IBFLD("11B"),1,28)
"RTN","IBCF2P",26,0)
LINE24 ; other insured's employer; patient other accident; insured's insurance plan name
"RTN","IBCF2P",27,0)
 ;remove box 9c *488*
"RTN","IBCF2P",28,0)
 ;W !!,$E(IBFLD("9C"),1,28),?($S(+IBFLD("10C"):34,1:40)),"X",?49,$E(IBFLD("11C"),1,28)
"RTN","IBCF2P",29,0)
 W !!,?($S(+IBFLD("10C"):34,1:40)),"X",?49,$E(IBFLD("11C"),1,28)
"RTN","IBCF2P",30,0)
LINE26 ; other insured's plan name; is there another benefit plan  *488* add box 10d
"RTN","IBCF2P",31,0)
 W !!,$E(IBFLD("9D"),1,28),?30,IBFLD("10D"),?($S(+IBFLD("11D"):51,1:56)),"X"
"RTN","IBCF2P",32,0)
LINE29 ; patient's signature; insured's signature (use PL 99-272, SECTION 1729 TITLE 38)
"RTN","IBCF2P",33,0)
 W !!!,?3,IBFLD(12),?56,IBFLD(13)
"RTN","IBCF2P",34,0)
LINE32 ; date of current illness; date of similar illness; dates unable to work  *488*
"RTN","IBCF2P",35,0)
 W !!!,?1,IBFLD(14),?14,IBFLD(14.1),?26,IBFLD(15.1),?36,IBFLD(15),?53,IBFLD("16A"),?67,IBFLD("16B")
"RTN","IBCF2P",36,0)
LINE34 ; name of referring physician; ID# referring physician; hospitalization dates related to services
"RTN","IBCF2P",37,0)
 W !!,?53,IBFLD("18A"),?67,IBFLD("18B")
"RTN","IBCF2P",38,0)
LINE35 ; "not for SC" note line 1
"RTN","IBCF2P",39,0)
 W !,?14,$E(IBFLD(19),1,31)_"-"
"RTN","IBCF2P",40,0)
LINE36 ; "not for SC" note line 2; outside lab (now defaults to "no" in IBEHCFA)
"RTN","IBCF2P",41,0)
 W !,$E(IBFLD(19),32,83),?56,"X"
"RTN","IBCF2P",42,0)
LINE37 ; diagnosis code indicator  *488*
"RTN","IBCF2P",43,0)
 W !,?40,IBFLD("21A")
"RTN","IBCF2P",44,0)
LINE38 ; diagnosis codes 1-4 ; field 22 (MEDICAID) left blank  *488*
"RTN","IBCF2P",45,0)
 W !,?2,IBFLD(21,1),?15,IBFLD(21,2),?28,IBFLD(21,3),?40,IBFLD(21,4)
"RTN","IBCF2P",46,0)
LINE39 ;  diagnosis codes 5-8 *488*
"RTN","IBCF2P",47,0)
 W !,?2,IBFLD(21,5),?15,IBFLD(21,6),?28,IBFLD(21,7),?40,IBFLD(21,7)
"RTN","IBCF2P",48,0)
LINE40 ; diagnosis codes 9-12; field 23 (prior authorization #)  *488*
"RTN","IBCF2P",49,0)
 W !,?2,IBFLD(21,9),?15,IBFLD(21,10),?28,IBFLD(21,11),?40,IBFLD(21,12),?49,IBFLD(23)
"RTN","IBCF2P",50,0)
LINE44 ;lines 44,46,48,50,52,54 all the same
"RTN","IBCF2P",51,0)
 W !! S IBI=+$P(IBFLD(24),U,2) F IBJ=1:1:6 S IBI=IBI+1 D
"RTN","IBCF2P",52,0)
 . W ! I $D(IBFLD(24,IBI_"A")) W ?25,$E(IBFLD(24,IBI_"A"),1,15)
"RTN","IBCF2P",53,0)
 . W ! I $D(IBFLD(24,IBI)) D  S IBFLD(24)=IBFLD(24)-1
"RTN","IBCF2P",54,0)
 .. W $P(IBFLD(24,IBI),U,1),?9,$P(IBFLD(24,IBI),U,2),?18,$P(IBFLD(24,IBI),U,3),?21,$P(IBFLD(24,IBI),U,4),?25,$E($P(IBFLD(24,IBI),U,5),1,15)
"RTN","IBCF2P",55,0)
 .. I $P(IBFLD(24,IBI),U,9) W ?32,$P($$MOD^ICPTMOD(+$P(IBFLD(24,IBI),U,9),"I",DT),U,2)
"RTN","IBCF2P",56,0)
 .. W ?41,$P(IBFLD(24,IBI),U,6),?48,$S(+$P(IBFLD(24,IBI),U,7):$J($P(IBFLD(24,IBI),U,7),9,2),1:""),?57,$J($P(IBFLD(24,IBI),U,8),3)
"RTN","IBCF2P",57,0)
 S $P(IBFLD(24),U,2)=IBI
"RTN","IBCF2P",58,0)
 ;
"RTN","IBCF2P",59,0)
LINE56 W !!,IBFLD(25),?18,"X",?22,IBFLD(26),?49,$J(IBFLD(28),10,2)
"RTN","IBCF2P",60,0)
 W:IBFLD(29) ?62,$J(IBFLD(29),7,2)
"RTN","IBCF2P",61,0)
LINE58 W !!,?22,$E(IBFLD(32,1),1,26),?49,$E(IBFLD(33,1),1,26)
"RTN","IBCF2P",62,0)
LINE69 W !,$E(IBFLD(31),1,21),?22,$E(IBFLD(32,2),1,26),?49,$E(IBFLD(33,2),1,26)
"RTN","IBCF2P",63,0)
LINE60 W !,$E(IBFLD(31),22,42)
"RTN","IBCF2P",64,0)
 W ?22,$E(IBFLD(32,3),1,(26-2-$L(IBFLD(32,"X")))) I IBFLD(32,"X")'="" W ", "_IBFLD(32,"X")
"RTN","IBCF2P",65,0)
 W ?49,$E(IBFLD(33,3),1,(26-2-$L(IBFLD(33,"X")))) I IBFLD(33,"X")'="" W ", "_IBFLD(33,"X")
"RTN","IBCF2P",66,0)
LINE61 W !,$E(IBFLD(31),43,63),?49,IBFLD(33,4)
"RTN","IBCF2P",67,0)
 ;
"RTN","IBCF2P",68,0)
 I +IBFLD(24)>0 D  G LINE38 ;multiple pages
"RTN","IBCF2P",69,0)
 . S IBPAGE=IBPAGE+1
"RTN","IBCF2P",70,0)
 . W @IOF,!,?IBADDM,"PAGE ",IBPAGE,!!!!!!!,?49,IBFLD("1A"),!!,IBFLD(2)
"RTN","IBCF2P",71,0)
 . F IBI=1:1:26 W !
"RTN","IBCF2P",72,0)
 ;
"RTN","IBCF2P",73,0)
END K IBADDM,IBPAGE
"RTN","IBCF2P",74,0)
 Q
"RTN","IBCF2TP")
0^28^B8889377^B9069243
"RTN","IBCF2TP",1,0)
IBCF2TP ;ALB/RLW - HCFA 1500 12-90 TEST PATTERN ; 1-JAN-92
"RTN","IBCF2TP",2,0)
 ;;2.0;INTEGRATED BILLING;**488**;21-MAR-94;Build 184
"RTN","IBCF2TP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF2TP",4,0)
ZIS ;
"RTN","IBCF2TP",5,0)
 ;***
"RTN","IBCF2TP",6,0)
 ;S XRTL=$ZU(0),XRTN="IBCF2TP-1" D T0^%ZOSV ;start rt clock
"RTN","IBCF2TP",7,0)
 ;S DGPGM="PRINT^IBCF2TP",DGVAR="^" D ZIS^DGUTQ I POP G Q
"RTN","IBCF2TP",8,0)
 S %ZIS="QM" D ^%ZIS G:POP Q
"RTN","IBCF2TP",9,0)
 I $D(IO("Q")) K IO("Q") S ZTRTN="PRINT^IBCF2TP",ZTDESC="IB - TEST HCFA 1500 PRINT" D ^%ZTLOAD K ZTSK D HOME^%ZIS G Q
"RTN","IBCF2TP",10,0)
 U IO
"RTN","IBCF2TP",11,0)
 D PRINT
"RTN","IBCF2TP",12,0)
Q K DGPGM,DGVAR,POP,IBADDM
"RTN","IBCF2TP",13,0)
 ;***
"RTN","IBCF2TP",14,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF2TP" D T1^%ZOSV ;stop rt clock
"RTN","IBCF2TP",15,0)
 Q
"RTN","IBCF2TP",16,0)
PRINT ; print test pattern
"RTN","IBCF2TP",17,0)
 ;***
"RTN","IBCF2TP",18,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF2TP" D T1^%ZOSV ;stop rt clock
"RTN","IBCF2TP",19,0)
 ;S XRTL=$ZU(0),XRTN="IBCF2TP-2" D T0^%ZOSV ;start rt clock
"RTN","IBCF2TP",20,0)
 N X S X=""
"RTN","IBCF2TP",21,0)
CARRIER ;
"RTN","IBCF2TP",22,0)
 S IBADDM=+$P($G(^IBE(350.9,1,1)),U,27)
"RTN","IBCF2TP",23,0)
 W:$E(IOST,1,2)["C-" @IOF W !,?IBADDM,"INSURANCE CARRIER NAME",!?IBADDM,"CARRIER ADDRESS LINE 1",!?IBADDM,"CARRIER ADDRESS LINE 2",!?IBADDM,"CARRIER ADDRESS LINE 3",!?IBADDM,"CARRIER CITY, STATE ZIP"
"RTN","IBCF2TP",24,0)
LINE2 W !!!,X,?7,X,?14,X,?23,X,?30,X,?38,X,?44,X,?49,"SUBSCRIBER ID#"
"RTN","IBCF2TP",25,0)
LINE4 W !!,"PATIENT NAME",?30,"MM DD YY",?41,X,?46,X,?49,"INSURED'S NAME"
"RTN","IBCF2TP",26,0)
LINE6 W !!,"PATIENT ADDRESS STREET",?32,X,?37,X,?41,X,?46,X,?49,"INSURED'S ADDRESS STREET"
"RTN","IBCF2TP",27,0)
LINE8 W !!,"PATIENT ADDRESS CITY",?25,"ST",?49,"INSURED'S ADDRESS CITY",?73,"ST"
"RTN","IBCF2TP",28,0)
LINE10 W !!,"PT ZIP CODE",?14,"999",?18,"999-9999",?49,"INS ZIP CODE",?64,"999",?68,"999-9999"
"RTN","IBCF2TP",29,0)
LINE12 W !!,"OTHER INSURED'S NAME",?49,"INSURED'S POLICY GROUP"
"RTN","IBCF2TP",30,0)
LINE14 W !!,?34,X,?40,X,?53,"MM DD YY",?67,X,?74,X
"RTN","IBCF2TP",31,0)
LINE16 W !!,?1,"MM DD YY",?17,X,?23,X,?34,X,?40,X,?44,"ST",?49,"INSURED'S EMPLOYER"
"RTN","IBCF2TP",32,0)
LINE18 W !!,?34,X,?40,X,?49,"Y4  PROP/CASUALTY #"
"RTN","IBCF2TP",33,0)
LINE20 W !!,"OTHER'S INSURANCE PLAN",?51,X,?56,X
"RTN","IBCF2TP",34,0)
LINE26 W !!!!!!,?1,"MM DD YY",?36,"MM DD YY",?53,"MM DD YY",?67,"MM DD YY"
"RTN","IBCF2TP",35,0)
LINE28 W !!,"XX",?4,"REFERRING PHYSICIAN",?27,"PHYSICIAN ID",?53,"MM DD YY",?67,"MM DD YY"
"RTN","IBCF2TP",36,0)
LINE31 W !,?40,9
"RTN","IBCF2TP",37,0)
LINE32 W !,?2,"X99999",?15,"X99999",?28,"X99999",?40,"X99999"
"RTN","IBCF2TP",38,0)
LINE34 W !,?2,"X99999",?15,"X99999",?28,"X99999",?40,"X99999"
"RTN","IBCF2TP",39,0)
LINE35 W !,?2,"X99999",?15,"X99999",?28,"X99999",?40,"X99999"
"RTN","IBCF2TP",40,0)
LINE38 ;lines 38,40,42,44,46,48 all the same
"RTN","IBCF2TP",41,0)
 W !!
"RTN","IBCF2TP",42,0)
 F I=1:1:6 W !!,"MM DD YY",?9,"MM DD YY",?18,X,?21,X,?25,"CPT",?32,"MODIF",?41,"DIAG",?50,"9999.99",?58,X,?61,X,?64,X,?67,X,?70,"BC/BS#"
"RTN","IBCF2TP",43,0)
LINE50 W !!,"FEDERAL TAX ID",?18,X,?22,"PAT ACCT#",?37,X,?42,X,?52,"9999.99",?62,"9999.99"
"RTN","IBCF2TP",44,0)
LINE52 W !!,?22,"VAMC",?49,"AGENT CASHIER  (999) 999-9999"
"RTN","IBCF2TP",45,0)
LINE53 W !,?22,"STREET ADDRESS",?49,"STREET ADDRESS"
"RTN","IBCF2TP",46,0)
LINE54 W !,?22,"CITY, STATE ZIP",?49,"CITY, STATE ZIP"
"RTN","IBCF2TP",47,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCF2TP",48,0)
 D ^%ZISC
"RTN","IBCF2TP",49,0)
 ;***
"RTN","IBCF2TP",50,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF2TP" D T1^%ZOSV ;stop rt clock
"RTN","IBCF2TP",51,0)
 Q
"RTN","IBCNS2")
0^37^B24154529^B14096238
"RTN","IBCNS2",1,0)
IBCNS2 ;ALB/AAS - INSURANCE POLICY CALLS FROM FILE 399 DD ;22-JULY-91
"RTN","IBCNS2",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,80,51,137,155,488**;21-MAR-94;Build 184
"RTN","IBCNS2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNS2",4,0)
 ;
"RTN","IBCNS2",5,0)
 Q
"RTN","IBCNS2",6,0)
DD(IBX,IBDA,LEVEL) ;  - called from input transform for field 111,112,113
"RTN","IBCNS2",7,0)
 ; -- input   ibx = x from input transform
"RTN","IBCNS2",8,0)
 ;           ibda = internal entry in 399
"RTN","IBCNS2",9,0)
 ;          level = 1=primary, 2=secondary, 3=tertiary
"RTN","IBCNS2",10,0)
 ; -- output  returns x=internal entry in 2.3121 (ins. Mult.) if valid
"RTN","IBCNS2",11,0)
 ;   
"RTN","IBCNS2",12,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",13,0)
 D VAR
"RTN","IBCNS2",14,0)
 S X=$$SEL(IBX,DFN,INSDT,ACTIVE)
"RTN","IBCNS2",15,0)
 I +X<1 K X
"RTN","IBCNS2",16,0)
DDQ Q
"RTN","IBCNS2",17,0)
 ;
"RTN","IBCNS2",18,0)
VAR S DFN=$P(^DGCR(399,IBDA,0),"^",2),ACTIVE=1,INSDT=$S(+$G(^DGCR(399,IBDA,"U")):+$G(^("U")),1:DT)
"RTN","IBCNS2",19,0)
 Q
"RTN","IBCNS2",20,0)
 ;
"RTN","IBCNS2",21,0)
SEL(IBX,DFN,INSDT,ACTIVE) ; -- Select insurance policy
"RTN","IBCNS2",22,0)
 ; -- Input    IBX  = x from input transform
"RTN","IBCNS2",23,0)
 ;             DFN  = patient
"RTN","IBCNS2",24,0)
 ;           INSDT  = (optional) Active date of ins. (default = dt)
"RTN","IBCNS2",25,0)
 ;          ACTIVE  = (optional) 1 if want active (default)
"RTN","IBCNS2",26,0)
 ;                  = 2 if want all ins returned
"RTN","IBCNS2",27,0)
 ;
"RTN","IBCNS2",28,0)
 ; -- Output      =  pointer to 36 ^ pointer to 2.3121 ^ pointer to 355.3
"RTN","IBCNS2",29,0)
 ;
"RTN","IBCNS2",30,0)
 N I,J,Y,DA,DE,DQ,DR,DIC,DIE,DIR,DIV,IBSEL,IBDD,IBD
"RTN","IBCNS2",31,0)
 S IBSEL=1,Y=""
"RTN","IBCNS2",32,0)
 I '$G(ACTIVE) S ACTIVE=1
"RTN","IBCNS2",33,0)
 S:'$G(INSDT) INSDT=DT
"RTN","IBCNS2",34,0)
 I '$G(DFN) G SELQ
"RTN","IBCNS2",35,0)
 D BLD
"RTN","IBCNS2",36,0)
 ;
"RTN","IBCNS2",37,0)
 ; -- call DIC to choose from list
"RTN","IBCNS2",38,0)
 ;WCJ*IB*2.0*488;Display COB on picklist when partial match on more than one entry
"RTN","IBCNS2",39,0)
 ;everything else should continue to work as before
"RTN","IBCNS2",40,0)
 N IBOUT,IBSEL2
"RTN","IBCNS2",41,0)
 S IBX=$$UP^XLFSTR(IBX)
"RTN","IBCNS2",42,0)
 I IBX?1A.E D  S IBX=$S($G(IBOUT):"^",$G(IBSEL2):IBSEL2,1:IBX)
"RTN","IBCNS2",43,0)
 . N X,Y,ERROR,TARGET
"RTN","IBCNS2",44,0)
 . D LIST^DIC(2.312,","_DFN_",",".01;.2;3;8;1;16;.18;21",,9999,,IBX,,"I $D(IBDD(+Y))",,"TARGET","ERROR")
"RTN","IBCNS2",45,0)
 . I $D(ERROR) S IBOUT=1 Q   ; should not hit this.  used more during test 
"RTN","IBCNS2",46,0)
 . I '$D(TARGET) S IBOUT=1 Q  ; no partial matches
"RTN","IBCNS2",47,0)
 . I +$G(TARGET("DILIST",0))<2 Q  ; only one match so work as before
"RTN","IBCNS2",48,0)
 . D DSPTHM   ; display them
"RTN","IBCNS2",49,0)
 . S DIR(0)="N^1:"_+$G(TARGET("DILIST",0))   ;allow select of 1 to as many matches
"RTN","IBCNS2",50,0)
 . D ^DIR
"RTN","IBCNS2",51,0)
 . I $G(DIRUT) S IBOUT=1 Q   ; user ^, timed out, or entered null
"RTN","IBCNS2",52,0)
 . S IBX="`"_$G(TARGET("DILIST",2,+Y))
"RTN","IBCNS2",53,0)
 . W !
"RTN","IBCNS2",54,0)
 . Q
"RTN","IBCNS2",55,0)
 ;WCJ*IB*2.0*488
"RTN","IBCNS2",56,0)
 ;
"RTN","IBCNS2",57,0)
 S X=IBX
"RTN","IBCNS2",58,0)
 S DIC="^DPT("_DFN_",.312,",DIC(0)="EQMN"
"RTN","IBCNS2",59,0)
 S DIC("S")="I $D(IBDD(+Y))" ; add not other selection
"RTN","IBCNS2",60,0)
 S DIC("W")="W $P(^DIC(36,+^(0),0),U)_""  Group: ""_$$GRP^IBCNS($P(^DPT(DFN,.312,+Y,0),U,18))"
"RTN","IBCNS2",61,0)
 D ^DIC
"RTN","IBCNS2",62,0)
SELQ Q +Y
"RTN","IBCNS2",63,0)
 ;
"RTN","IBCNS2",64,0)
 ;WCJ*IB*2.0*488;
"RTN","IBCNS2",65,0)
DSPTHM ; display the insurance companies and useful information
"RTN","IBCNS2",66,0)
 W !,?4,"Insurance",?18,"COB",?23,"Subscriber ID",?37,"Group #",?49,"Eff Date",?62,"Exp Date"
"RTN","IBCNS2",67,0)
 N I
"RTN","IBCNS2",68,0)
 F I=1:1 Q:'$D(TARGET("DILIST","ID",I))  D
"RTN","IBCNS2",69,0)
 . W !,I,?4,$E($G(TARGET("DILIST","ID",I,.01)),1,12)
"RTN","IBCNS2",70,0)
 . W ?18,"(",$$LOW^XLFSTR($E($G(TARGET("DILIST","ID",I,.2)),1)),")"
"RTN","IBCNS2",71,0)
 . W ?23,$E($G(TARGET("DILIST","ID",I,1)),1,12)
"RTN","IBCNS2",72,0)
 . W ?37,$E($G(TARGET("DILIST","ID",I,21)),1,10)
"RTN","IBCNS2",73,0)
 . W ?49,$G(TARGET("DILIST","ID",I,8))
"RTN","IBCNS2",74,0)
 . W ?62,$G(TARGET("DILIST","ID",I,3))
"RTN","IBCNS2",75,0)
 Q
"RTN","IBCNS2",76,0)
 ;WCJ*IB*2.0*488;
"RTN","IBCNS2",77,0)
 ;
"RTN","IBCNS2",78,0)
BLD K IBD,IBDD
"RTN","IBCNS2",79,0)
 S (IBDD,IBCDFN)=0 F  S IBCDFN=$O(^DPT(DFN,.312,IBCDFN)) Q:'IBCDFN  I $D(^DPT(DFN,.312,IBCDFN,0)) D CHK(IBCDFN,ACTIVE,INSDT)
"RTN","IBCNS2",80,0)
 Q
"RTN","IBCNS2",81,0)
 ;
"RTN","IBCNS2",82,0)
CHK(IBCDFN,ACTIVE,INSDT) ; -- see if active
"RTN","IBCNS2",83,0)
 N X,X1
"RTN","IBCNS2",84,0)
 S X=$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBCNS2",85,0)
 S IBDD(IBCDFN)=+X_"^"_IBCDFN_"^"_$P(X,"^",18)
"RTN","IBCNS2",86,0)
 I ACTIVE=2 G CHKQ
"RTN","IBCNS2",87,0)
 S X1=$G(^DIC(36,+X,0)) I X1="" G CQ ;ins co entry doesn't exist
"RTN","IBCNS2",88,0)
 I $P(X,"^",8) G:INSDT<$P(X,"^",8) CQ ;effective date later than care
"RTN","IBCNS2",89,0)
 I $P(X,"^",4) G:INSDT>$P(X,"^",4) CQ ;care after expiration date
"RTN","IBCNS2",90,0)
 I $P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",11) G CQ ;plan is inactive
"RTN","IBCNS2",91,0)
 G:$P(X1,"^",5) CQ ;                  ;ins company inactive
"RTN","IBCNS2",92,0)
 ;G:$P(X1,"^",2)="N" CQ ;              ;ins company will not reimburse
"RTN","IBCNS2",93,0)
 G CHKQ
"RTN","IBCNS2",94,0)
CQ K IBDD(IBCDFN)
"RTN","IBCNS2",95,0)
CHKQ S:$D(IBDD(IBCDFN)) IBDD=IBDD+1,IBD(IBDD)=IBCDFN
"RTN","IBCNS2",96,0)
 Q
"RTN","IBCNS2",97,0)
 ;
"RTN","IBCNS2",98,0)
 ;
"RTN","IBCNS2",99,0)
DDHELP(IBDA,LEVEL) ; -- Executable help
"RTN","IBCNS2",100,0)
 ; -- write out list to choose from
"RTN","IBCNS2",101,0)
 N DFN,ACTIVE,INSDT,I,IBINS
"RTN","IBCNS2",102,0)
 D VAR,BLD
"RTN","IBCNS2",103,0)
 ;
"RTN","IBCNS2",104,0)
 I $G(IBDD)=0 W !,"No Insurance Policies to Select From" G DDHQ
"RTN","IBCNS2",105,0)
 ;
"RTN","IBCNS2",106,0)
 I '$D(IOM) D HOME^%ZIS
"RTN","IBCNS2",107,0)
 N IBDTIN
"RTN","IBCNS2",108,0)
 S IBDTIN=$G(INSDT)
"RTN","IBCNS2",109,0)
 W ! D HDR^IBCNS
"RTN","IBCNS2",110,0)
 S I=0 F  S I=$O(IBD(I)) Q:'I  D
"RTN","IBCNS2",111,0)
 .S IBINS=$G(^DPT(DFN,.312,$G(IBD(I)),0))
"RTN","IBCNS2",112,0)
 .D D1^IBCNS
"RTN","IBCNS2",113,0)
DDHQ Q
"RTN","IBCNS2",114,0)
 ;
"RTN","IBCNS2",115,0)
TRANS(IBDA,Y) ; -- output transform
"RTN","IBCNS2",116,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",117,0)
 D VAR
"RTN","IBCNS2",118,0)
 S Y=$P($G(^DIC(36,+$P($G(^DPT(DFN,.312,+$G(Y),0)),U),0)),U)
"RTN","IBCNS2",119,0)
 Q Y
"RTN","IBCNS2",120,0)
 ;
"RTN","IBCNS2",121,0)
INSCO(IBDA,IBCDFN) ; -- return pointer value of 36 from pt. file
"RTN","IBCNS2",122,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",123,0)
 D VAR
"RTN","IBCNS2",124,0)
 S Y=+$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBCNS2",125,0)
 Q Y_$S(Y>0:"^"_$P($G(^DIC(36,+Y,0)),"^"),1:"")
"RTN","IBCNS2",126,0)
 ;
"RTN","IBCNS2",127,0)
IX(DA,XREF) ; -- create i1, aic xrefs for fields 112, 113, 114
"RTN","IBCNS2",128,0)
 ;
"RTN","IBCNS2",129,0)
 S ^DGCR(399,DA,XREF)=$$ZND^IBCNS1($P($G(^DGCR(399,DA,0)),"^",2),X)
"RTN","IBCNS2",130,0)
 S ^DGCR(399,DA,"AIC",+$G(^DPT($P($G(^DGCR(399,DA,0)),"^",2),.312,+X,0)))=""
"RTN","IBCNS2",131,0)
 Q
"RTN","IBCNS2",132,0)
 ;
"RTN","IBCNS2",133,0)
KIX(DA,XREF) ; -- kill logic for above xref
"RTN","IBCNS2",134,0)
 K ^DGCR(399,DA,XREF)
"RTN","IBCNS2",135,0)
 K ^DGCR(399,DA,"AIC",+$G(^DPT($P($G(^DGCR(399,DA,0)),"^",2),.312,+X,0)))
"RTN","IBCNS2",136,0)
 Q
"RTN","IBCNS2",137,0)
 ;
"RTN","IBCNS2",138,0)
BPP(IBDA,IBMCR) ; Find Bill Payer Policy based on Payer Sequence and the P/S/T payers assigned to the bill,Ins Co must reimburse
"RTN","IBCNS2",139,0)
 ; IBMCR = flag that says include MEDICARE WNR
"RTN","IBCNS2",140,0)
 ; returns - Bill Payer Policy (ifn of policy entry in patient file)
"RTN","IBCNS2",141,0)
 ;         - null if either no Payer Sequence or there is no policy defined for the payer sequence
"RTN","IBCNS2",142,0)
 ;           or the policy defined by the payer sequence Will Not Reimburse and is not MEDICARE
"RTN","IBCNS2",143,0)
 ;
"RTN","IBCNS2",144,0)
 N IBI,IBX,IBY,IBP,IBC,IBM0 S IBX="",(IBP,IBC)=0
"RTN","IBCNS2",145,0)
 S IBMCR=+$G(IBMCR)
"RTN","IBCNS2",146,0)
 S IBY=$$COBN^IBCEF(+IBDA) I IBY S IBY=IBY+11
"RTN","IBCNS2",147,0)
 I IBY S IBM0=$G(^DGCR(399,+IBDA,"M")),IBP=$P(IBM0,U,IBY)
"RTN","IBCNS2",148,0)
 I IBP S IBY=IBY-11,(IBI,IBY)=$P(IBM0,U,IBY) I +IBY S IBC=$P($G(^DIC(36,+IBY,0)),U,2)
"RTN","IBCNS2",149,0)
 I IBP,IBI,$S(IBC'="N":1,'IBMCR:0,1:$$MCRWNR^IBEFUNC(+IBY)) S IBX=IBP
"RTN","IBCNS2",150,0)
 Q IBX
"RTN","IBCNSC")
0^21^B26150929^B24159861
"RTN","IBCNSC",1,0)
IBCNSC ;ALB/NLR - INSURANCE COMPANY EDIT ;6/1/05 9:42am
"RTN","IBCNSC",2,0)
 ;;2.0;INTEGRATED BILLING;**46,137,184,276,320,371,400,488**;21-MAR-94;Build 184
"RTN","IBCNSC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSC",4,0)
 ;
"RTN","IBCNSC",5,0)
 ;also used for IA #4694
"RTN","IBCNSC",6,0)
 ;
"RTN","IBCNSC",7,0)
EN ; -- main entry point for IBCNS INSURANCE COMPANY, IBCNS VIEW INS CO
"RTN","IBCNSC",8,0)
 NEW IB1ST
"RTN","IBCNSC",9,0)
 K IBFASTXT,VALMQUIT,VALMEVL,XQORS,^TMP("XQORS",$J),IBCNS
"RTN","IBCNSC",10,0)
 S IBCHANGE="OKAY"
"RTN","IBCNSC",11,0)
 I '$G(IBVIEW) D EN^VALM("IBCNS INSURANCE COMPANY") G ENQ
"RTN","IBCNSC",12,0)
 D EN^VALM("IBCNS VIEW INS CO")
"RTN","IBCNSC",13,0)
ENQ Q
"RTN","IBCNSC",14,0)
 ;
"RTN","IBCNSC",15,0)
HDR ; -- header code
"RTN","IBCNSC",16,0)
 S VALMHDR(1)="Insurance Company Information for: "_$E($P(^DIC(36,IBCNS,0),"^"),1,30)
"RTN","IBCNSC",17,0)
 S VALMHDR(2)="Type of Company: "_$E($P($G(^IBE(355.2,+$P($G(^DIC(36,+IBCNS,0)),"^",13),0)),"^"),1,20)_"                     Currently "_$S(+($P($G(^DIC(36,+IBCNS,0)),"^",5)):"Inactive",1:"Active")
"RTN","IBCNSC",18,0)
 Q
"RTN","IBCNSC",19,0)
 ;
"RTN","IBCNSC",20,0)
INIT ; -- init variables and list array
"RTN","IBCNSC",21,0)
 K VALMQUIT
"RTN","IBCNSC",22,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCNSC",23,0)
 I '$D(IBCNS) D INSCO Q:$D(VALMQUIT)
"RTN","IBCNSC",24,0)
 D BLD,HDR
"RTN","IBCNSC",25,0)
 Q
"RTN","IBCNSC",26,0)
BLD ; -- list builder
"RTN","IBCNSC",27,0)
 NEW BLNKI
"RTN","IBCNSC",28,0)
 K ^TMP("IBCNSC",$J)
"RTN","IBCNSC",29,0)
 D KILL^VALM10()    ; delete all video attributes
"RTN","IBCNSC",30,0)
 F BLNKI=1:1:62 D BLANK(.BLNKI)     ; 62 blank lines to start with
"RTN","IBCNSC",31,0)
 D PARAM^IBCNSC01      ; billing parameters
"RTN","IBCNSC",32,0)
 D MAIN^IBCNSC01       ; main mailing address
"RTN","IBCNSC",33,0)
 D CLAIMS1^IBCNSC0     ; inpatient claims office
"RTN","IBCNSC",34,0)
 D CLAIMS2^IBCNSC0     ; outpatient claims office
"RTN","IBCNSC",35,0)
 D PRESCR^IBCNSC1      ; prescription claims office
"RTN","IBCNSC",36,0)
 D APPEALS             ; appeals office
"RTN","IBCNSC",37,0)
 D INQUIRY             ; inquiry office
"RTN","IBCNSC",38,0)
 D DISP^IBCNSC02       ; parent/child associations (ESG 11/3/05)
"RTN","IBCNSC",39,0)
 D PROVID^IBCNSC1      ; provider IDs
"RTN","IBCNSC",40,0)
 D PAYER^IBCNSC01      ; payer/payer apps (ESG 7/29/02 IIV project)
"RTN","IBCNSC",41,0)
 D REMARKS^IBCNSC01    ; remarks
"RTN","IBCNSC",42,0)
 D SYN^IBCNSC01        ; synonyms
"RTN","IBCNSC",43,0)
 S VALMCNT=+$O(^TMP("IBCNSC",$J,""),-1)
"RTN","IBCNSC",44,0)
 Q
"RTN","IBCNSC",45,0)
 ;
"RTN","IBCNSC",46,0)
APPEALS ;
"RTN","IBCNSC",47,0)
 N OFFSET,START,IBCNS14,IBADD
"RTN","IBCNSC",48,0)
 S IBCNS14=$$ADDRESS^IBCNSC0(IBCNS,.14,7)
"RTN","IBCNSC",49,0)
 S START=48,OFFSET=2
"RTN","IBCNSC",50,0)
 D SET^IBCNSP(START,OFFSET+25," Appeals Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC",51,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS14,"^",7),0)),"^",1))
"RTN","IBCNSC",52,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS14,"^",1))
"RTN","IBCNSC",53,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS14,"^",2))
"RTN","IBCNSC",54,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC",55,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS14,"^",3)) S IBADD=1
"RTN","IBCNSC",56,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS14,"^",4),1,15)_$S($P(IBCNS14,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS14,"^",5),0)),"^",2)_" "_$E($P(IBCNS14,"^",6),1,5))
"RTN","IBCNSC",57,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS14,"^",8))
"RTN","IBCNSC",58,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS14,"^",9))
"RTN","IBCNSC",59,0)
 Q
"RTN","IBCNSC",60,0)
 ;
"RTN","IBCNSC",61,0)
INQUIRY ;
"RTN","IBCNSC",62,0)
 ;
"RTN","IBCNSC",63,0)
 N OFFSET,START,IBCNS15,IBADD
"RTN","IBCNSC",64,0)
 S IBCNS15=$$ADDRESS^IBCNSC0(IBCNS,.15,8)
"RTN","IBCNSC",65,0)
 S START=55,OFFSET=2
"RTN","IBCNSC",66,0)
 D SET^IBCNSP(START,OFFSET+25," Inquiry Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC",67,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS15,"^",7),0)),"^",1))
"RTN","IBCNSC",68,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS15,"^"))
"RTN","IBCNSC",69,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS15,"^",2))
"RTN","IBCNSC",70,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC",71,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS15,"^",3)) S IBADD=1
"RTN","IBCNSC",72,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS15,"^",4),1,15)_$S($P(IBCNS15,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS15,"^",5),0)),"^",2)_" "_$E($P(IBCNS15,"^",6),1,5))
"RTN","IBCNSC",73,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS15,"^",8))
"RTN","IBCNSC",74,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS15,"^",9))
"RTN","IBCNSC",75,0)
 Q
"RTN","IBCNSC",76,0)
 ;
"RTN","IBCNSC",77,0)
HELP ; -- help code
"RTN","IBCNSC",78,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNSC",79,0)
 Q
"RTN","IBCNSC",80,0)
 ;
"RTN","IBCNSC",81,0)
EXIT ; -- exit code
"RTN","IBCNSC",82,0)
 K VALMQUIT,IBCNS,IBCHANGE,IBFASTXT
"RTN","IBCNSC",83,0)
 D CLEAN^VALM10
"RTN","IBCNSC",84,0)
 Q
"RTN","IBCNSC",85,0)
 ;
"RTN","IBCNSC",86,0)
INSCO ; -- select insurance company
"RTN","IBCNSC",87,0)
 NEW DLAYGO,DIC,X,Y,DTOUT,DUOUT,IBCNS3
"RTN","IBCNSC",88,0)
 I '$D(IBCNS) D  G:$D(VALMQUIT) INSCOQ
"RTN","IBCNSC",89,0)
 .S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","IBCNSC",90,0)
 .I '$G(IBVIEW) S DLAYGO=36,DIC(0)=DIC(0)_"L"
"RTN","IBCNSC",91,0)
 .D ^DIC K DIC
"RTN","IBCNSC",92,0)
 .S IBCNS=+Y
"RTN","IBCNSC",93,0)
 .;/Beginning of IB*2.0*488 (vd)
"RTN","IBCNSC",94,0)
 .I +IBCNS I $P($G(^DIC(36,+IBCNS,3)),"^",1)="" D     ; Set default for EDI=Transmit? to YES-LIVE
"RTN","IBCNSC",95,0)
 ..S DR="3.01////1",DIE="^DIC(36,",DA=IBCNS D ^DIE K DIE
"RTN","IBCNSC",96,0)
 ..;/End of IB*2.0*488 (vd)
"RTN","IBCNSC",97,0)
 I $G(IBCNS)<1 K IBCNS S VALMQUIT="" G INSCOQ
"RTN","IBCNSC",98,0)
INSCOQ ;
"RTN","IBCNSC",99,0)
 K DIC
"RTN","IBCNSC",100,0)
 Q
"RTN","IBCNSC",101,0)
 ;
"RTN","IBCNSC",102,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSC",103,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSC",104,0)
 Q
"RTN","IBCNSC",105,0)
 ;
"RTN","IBCNSC",106,0)
EDIKEY() ; input transform code to determine if user is allowed to edit
"RTN","IBCNSC",107,0)
 ; certain fields in the insurance company file
"RTN","IBCNSC",108,0)
 NEW OK S OK=0
"RTN","IBCNSC",109,0)
 I $$KCHK^XUSRB("IB EDI INSURANCE EDIT") S OK=1 G EDIKEYX
"RTN","IBCNSC",110,0)
 D EN^DDIOL("You must hold the IB EDI INSURANCE EDIT security key to edit this field.",,"!!")
"RTN","IBCNSC",111,0)
 D EN^DDIOL("",,"!!?5")
"RTN","IBCNSC",112,0)
EDIKEYX ;
"RTN","IBCNSC",113,0)
 Q OK
"RTN","IBCNSC",114,0)
 ;
"RTN","IBCNSC",115,0)
DUPQUAL(IBCNS,QUAL,FIELD) ; input transform to make sure that the sam qualifier is not used twice for
"RTN","IBCNSC",116,0)
 ; payer secondary IDs.  There are two sets of fields in file 36 that can not be duplicated.
"RTN","IBCNSC",117,0)
 ; 6.01 EDI INST SECONDARY ID QUAL(1) can not be the same as 6.03 EDI INST SECONDARY ID QUAL(2)
"RTN","IBCNSC",118,0)
 ; 6.05 EDI PROF SECONDARY ID QUAL(1) can not be the same as 6.07 EDI PROF SECONDARY ID QUAL(2)
"RTN","IBCNSC",119,0)
 ; 
"RTN","IBCNSC",120,0)
 ; Input:
"RTN","IBCNSC",121,0)
 ; IBCNS is the insurance company internal number
"RTN","IBCNSC",122,0)
 ; QUAL  is the internal code of the value being input.
"RTN","IBCNSC",123,0)
 ; FIELD is the field it is being compare with.
"RTN","IBCNSC",124,0)
 ;
"RTN","IBCNSC",125,0)
 ; Returns:
"RTN","IBCNSC",126,0)
 ; TRUE/1 if they are the same (duplicate)
"RTN","IBCNSC",127,0)
 ; FALSE/0 if they are not
"RTN","IBCNSC",128,0)
 ;
"RTN","IBCNSC",129,0)
 Q:$G(QUAL)="" 0  ; should not happen because this is invoked as an input transform
"RTN","IBCNSC",130,0)
 Q:'+$G(IBCNS) 1  ; stop from editing through fileman
"RTN","IBCNSC",131,0)
 N DUP
"RTN","IBCNSC",132,0)
 S DUP=$$GET1^DIQ(36,+$G(IBCNS)_",",+$G(FIELD),"I")
"RTN","IBCNSC",133,0)
 D CLEAN^DILF
"RTN","IBCNSC",134,0)
 Q QUAL=DUP
"RTN","IBCSC10H")
0^20^B44927826^B48673264
"RTN","IBCSC10H",1,0)
IBCSC10H ;ALB/ARH - MCCR SCREEN 10 (BILL SPECIFIC INFO) CMS-1500 ;4/21/92
"RTN","IBCSC10H",2,0)
 ;;2.0;INTEGRATED BILLING;**432,488**;21-MAR-94;Build 184
"RTN","IBCSC10H",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC10H",4,0)
 ; CMS-1500 screen 10
"RTN","IBCSC10H",5,0)
 ;
"RTN","IBCSC10H",6,0)
 ; MAP TO DGCRSC8H
"RTN","IBCSC10H",7,0)
 ;
"RTN","IBCSC10H",8,0)
 ; DEM;432 - Moved IBCSC8* billing screen routines to IBCSC10* billing screen
"RTN","IBCSC10H",9,0)
 ;           routines and created a new billing screen 8 routine IBCSC8.
"RTN","IBCSC10H",10,0)
 ;
"RTN","IBCSC10H",11,0)
EN ;
"RTN","IBCSC10H",12,0)
 N I,IB,Y,Z
"RTN","IBCSC10H",13,0)
 D ^IBCSCU
"RTN","IBCSC10H",14,0)
 S IBSR=10,IBSR1="H",IBV1="000000000" S:IBV IBV1="111111111"
"RTN","IBCSC10H",15,0)
 F I="U","U1","UF2","UF3","UF32","U2","M","TX",0,"U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC10H",16,0)
 N IBZ,IBPRV,IBDATE,IBREQ,IBMRASEC,IBZ1,IBZCNT
"RTN","IBCSC10H",17,0)
 ;
"RTN","IBCSC10H",18,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Date of service for the bill
"RTN","IBCSC10H",19,0)
 S IBPRV=""
"RTN","IBCSC10H",20,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC10H",21,0)
 K IB("PRV")
"RTN","IBCSC10H",22,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC10H",23,0)
 ;
"RTN","IBCSC10H",24,0)
 D H^IBCSCU
"RTN","IBCSC10H",25,0)
 ;
"RTN","IBCSC10H",26,0)
 ; Section 1
"RTN","IBCSC10H",27,0)
 S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC10H",28,0)
 W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC10H",29,0)
 ;
"RTN","IBCSC10H",30,0)
 ; Section 2
"RTN","IBCSC10H",31,0)
 S Z=2,IBW=1 X IBWW I $$INPAT^IBCEF(IBIFN) W " Admitting Dx       : " S IBZ=$$ICD9^IBACSV(+IB("U2"),IBDATE) W $S(IBZ'="":$P(IBZ,U)_" - "_$P(IBZ,U,3),1:IBUN),!
"RTN","IBCSC10H",32,0)
 S IBZCNT=0,IBZ(IBZCNT)=""
"RTN","IBCSC10H",33,0)
 I $P(IB("UF3"),U,4)]"" S IBZ(IBZCNT)="P: "_$P(IB("UF3"),U,4),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",34,0)
 I $P(IB("UF3"),U,5)]"" S IBZ(IBZCNT)="S: "_$P(IB("UF3"),U,5),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",35,0)
 I $P(IB("UF3"),U,6)]"" S IBZ(IBZCNT)="T: "_$P(IB("UF3"),U,6)
"RTN","IBCSC10H",36,0)
 S:IBZ(0)="" IBZ(0)=IBUN
"RTN","IBCSC10H",37,0)
 W ?4,"ICN/DCN(s)         : ",IBZ(0)
"RTN","IBCSC10H",38,0)
 F IBZCNT=1:1 Q:'$D(IBZ(IBZCNT))  W !?25,IBZ(IBZCNT)
"RTN","IBCSC10H",39,0)
 K IBZ
"RTN","IBCSC10H",40,0)
 S IBZ=$$CKPROV^IBCEU(IBIFN,3)
"RTN","IBCSC10H",41,0)
 S IBZCNT=0,IBZ(IBZCNT)=""
"RTN","IBCSC10H",42,0)
 I $P(IB("U"),U,13)]"" S IBZ(IBZCNT)="P: "_$P(IB("U"),U,13),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",43,0)
 I $P(IB("U2"),U,8)'="" S IBZ(IBZCNT)="S: "_$P(IB("U2"),U,8),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",44,0)
 I $P(IB("U2"),U,9)'="" S IBZ(IBZCNT)="T: "_$P(IB("U2"),U,9),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",45,0)
 I $P(IB("UF32"),U,1)'="" S IBZ(IBZCNT)="P: "_$P(IB("UF32"),U,1),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",46,0)
 I $P(IB("UF32"),U,2)'="" S IBZ(IBZCNT)="S: "_$P(IB("UF32"),U,2),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",47,0)
 I $P(IB("UF32"),U,3)'="" S IBZ(IBZCNT)="T: "_$P(IB("UF32"),U,3)
"RTN","IBCSC10H",48,0)
 S:IBZ(0)="" IBZ(0)=IBUN
"RTN","IBCSC10H",49,0)
 W !,?3," Auth/Referral      : ",IBZ(0)
"RTN","IBCSC10H",50,0)
 F IBZCNT=1:1 Q:'$D(IBZ(IBZCNT))  W !?25,IBZ(IBZCNT)
"RTN","IBCSC10H",51,0)
 K IBZ S IBZ=""
"RTN","IBCSC10H",52,0)
 ;
"RTN","IBCSC10H",53,0)
 ; Section 3
"RTN","IBCSC10H",54,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC10H",55,0)
 W " Providers          : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC10H",56,0)
 I $D(IB("PRV")) D  ; at least 1 provider found
"RTN","IBCSC10H",57,0)
 . N IBQ,A,A1,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC10H",58,0)
 . S IBZ=0
"RTN","IBCSC10H",59,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC10H",60,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC10H",61,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC10H",62,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC10H",63,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC10H",64,0)
 .. S IBQ=""
"RTN","IBCSC10H",65,0)
 .. W !,?5,"- "
"RTN","IBCSC10H",66,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC10H",67,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,16-$L(A1))_A1
"RTN","IBCSC10H",68,0)
 .. W $E(A_$J("",16),1,16),": "
"RTN","IBCSC10H",69,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC10H",70,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",16),1,16) W:$G(IB("PRV",IBZ)) "(OLD BOX 31 DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC10H",71,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",16),1,16)
"RTN","IBCSC10H",72,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC10H",73,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC10H",74,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC10H",75,0)
 ;
"RTN","IBCSC10H",76,0)
 K IB("PRV")
"RTN","IBCSC10H",77,0)
 ;
"RTN","IBCSC10H",78,0)
 ; Section 4
"RTN","IBCSC10H",79,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC10H",80,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC10H",81,0)
 W $S(IBZ'="":$E(IBZ,1,23),$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC10H",82,0)
 I IBZ'="" D
"RTN","IBCSC10H",83,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC10H",84,0)
 . W ?53,"Taxonomy: "
"RTN","IBCSC10H",85,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC10H",86,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC10H",87,0)
 . Q
"RTN","IBCSC10H",88,0)
 ;
"RTN","IBCSC10H",89,0)
 ; clia# display - IB patch 320
"RTN","IBCSC10H",90,0)
 S (IBZ,IBZ1)=$P(IB("U2"),U,13)     ; retrieve CLIA# from database
"RTN","IBCSC10H",91,0)
 ;
"RTN","IBCSC10H",92,0)
 I IBZ="" D
"RTN","IBCSC10H",93,0)
 . NEW CLIAREQ,DEFCLIA,DIE,DA,DR
"RTN","IBCSC10H",94,0)
 . S CLIAREQ=$$CLIAREQ^IBCEP8A(IBIFN)
"RTN","IBCSC10H",95,0)
 . I 'CLIAREQ S IBZ1=IBUN Q          ; clia# not needed
"RTN","IBCSC10H",96,0)
 . S DEFCLIA=$$CLIA^IBCEP8A(IBIFN)   ; default clia# for claim
"RTN","IBCSC10H",97,0)
 . I DEFCLIA="" S IBZ1=IBU Q         ; no default found
"RTN","IBCSC10H",98,0)
 . I $G(IBMDOTCN) K IBMDOTCN S IBZ1=IBU Q     ; user @-deleted clia#
"RTN","IBCSC10H",99,0)
 . S IBZ1=DEFCLIA                    ; display and stuff default clia#
"RTN","IBCSC10H",100,0)
 . S DIE=399,DA=IBIFN,DR="235///"_DEFCLIA D ^DIE    ; stuff in default
"RTN","IBCSC10H",101,0)
 . Q
"RTN","IBCSC10H",102,0)
 ;
"RTN","IBCSC10H",103,0)
 W !,?4,"Lab CLIA #         : ",IBZ1
"RTN","IBCSC10H",104,0)
 ;
"RTN","IBCSC10H",105,0)
 ; Mammo# display IB patch 320
"RTN","IBCSC10H",106,0)
 S (IBZ,IBZ1)=$P(IB("U3"),U,1)    ; retrieve mammo# from database
"RTN","IBCSC10H",107,0)
 ;
"RTN","IBCSC10H",108,0)
 ; If mammo# is there, but should not be, then blank it out
"RTN","IBCSC10H",109,0)
 I IBZ'="",'$$XRAY^IBCEP8A(IBIFN) D
"RTN","IBCSC10H",110,0)
 . NEW DIE,DA,DR
"RTN","IBCSC10H",111,0)
 . S IBZ1=IBUN        ; mammo# not needed
"RTN","IBCSC10H",112,0)
 . S DIE=399,DA=IBIFN,DR="242////@" D ^DIE
"RTN","IBCSC10H",113,0)
 . Q
"RTN","IBCSC10H",114,0)
 ;
"RTN","IBCSC10H",115,0)
 I IBZ="" S IBZ1=IBUN
"RTN","IBCSC10H",116,0)
 W !?4,"Mammography Cert # : ",IBZ1
"RTN","IBCSC10H",117,0)
 ;
"RTN","IBCSC10H",118,0)
 ; Section 5
"RTN","IBCSC10H",119,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC10H",120,0)
 W " Chiropractic Data  : " S Y=$P(IB("U3"),U,5) X ^DD("DD") W $S(Y'="":"INITIAL TREATMENT ON "_Y,1:IBUN)
"RTN","IBCSC10H",121,0)
 ;
"RTN","IBCSC10H",122,0)
 ; Section 6  -> changed prompt for *488* : baa
"RTN","IBCSC10H",123,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC10H",124,0)
 W " CMS-1500 Box 19    : " S IBZ=$P($G(^DGCR(399,IBIFN,"UF31")),U,3) W $S(IBZ'="":IBZ,1:IBUN)
"RTN","IBCSC10H",125,0)
 ;/ Beginning of IB*2.0*488 - Moved the following lines of code to IBCSC8 (vd)
"RTN","IBCSC10H",126,0)
 ;I $P(IB("U2"),U,14)'="" W !,?4,"Homebound          : ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC10H",127,0)
 ;I $P(IB("U2"),U,15)'="" W !,?4,"Date Last Seen     : ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC10H",128,0)
 ;I $P(IB("U2"),U,16)'="" W !,?4,"Spec Prog Indicator: " S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC10H",129,0)
 ;/ End of IB*2.0*488 (vd)
"RTN","IBCSC10H",130,0)
 ;
"RTN","IBCSC10H",131,0)
 ; Section 7
"RTN","IBCSC10H",132,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC10H",133,0)
 W " Billing Provider   : "
"RTN","IBCSC10H",134,0)
 K IBZ
"RTN","IBCSC10H",135,0)
 D GETBP^IBCEF79(IBIFN,"",+$$B^IBCEF79(IBIFN),"CMS-1500 SCREEN 8",.IBZ)
"RTN","IBCSC10H",136,0)
 S IBZ=$G(IBZ("CMS-1500 SCREEN 8","NAME"))
"RTN","IBCSC10H",137,0)
 W $S(IBZ'="":IBZ,1:IBU)    ; billing provider name
"RTN","IBCSC10H",138,0)
 W !?3," Taxonomy Code      : "
"RTN","IBCSC10H",139,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC10H",140,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC10H",141,0)
 ;
"RTN","IBCSC10H",142,0)
 ; Section 8
"RTN","IBCSC10H",143,0)
 S Z=8,IBW=1 X IBWW
"RTN","IBCSC10H",144,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC10H",145,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC10H",146,0)
 W " ",$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt? : ")
"RTN","IBCSC10H",147,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC10H",148,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC10H",149,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC10H",150,0)
 ;
"RTN","IBCSC10H",151,0)
 ; Section 9
"RTN","IBCSC10H",152,0)
 S Z=9,IBW=1 X IBWW
"RTN","IBCSC10H",153,0)
 W " Provider ID Maint  : (Edit Provider ID information)",!
"RTN","IBCSC10H",154,0)
 G ^IBCSCP
"RTN","IBCSC10H",155,0)
Q Q
"RTN","IBCSC10H",156,0)
 ;
"RTN","IBCSC10H",157,0)
WRT1(IBCRED) ; Write credentials mismatch
"RTN","IBCSC10H",158,0)
 W !,*7,"  **Warning** Credentials differ from those found in NEW PERSON or IB NON VA",!,$J("",14),"BILLING PROVIDER file (",$S(IBCRED="":"none",1:IBCRED),")"
"RTN","IBCSC10H",159,0)
 W !,$J("",14),"Changes will print local, but only credentials on file transmit"
"RTN","IBCSC10H",160,0)
 Q
"RTN","IBCSC10H",161,0)
 ;
"RTN","IBCSC10H",162,0)
NSAME(DA) ; Returns 1 if div on bill is not the default billing facility
"RTN","IBCSC10H",163,0)
 Q ($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(^DGCR(399,DA,0),U,22),0)),U,7))
"RTN","IBCSC10H",164,0)
 ;
"RTN","IBCSC10H",165,0)
 ;IBCSC10H
"RTN","IBCSC8")
0^19^B9775351^B7203948
"RTN","IBCSC8",1,0)
IBCSC8 ;ALB/MJB/AAS - MCCR SCREEN 8 (BILLING - CLAIM INFORMATION SCREEN) ;27 MAY 88 10:15
"RTN","IBCSC8",2,0)
 ;;2.0;INTEGRATED BILLING;**432,447,488**;21-MAR-94;Build 184
"RTN","IBCSC8",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC8",4,0)
 ;
"RTN","IBCSC8",5,0)
 ;
"RTN","IBCSC8",6,0)
EN D ^IBCSCU S IBSR=8,IBSR1="" S IB("U2")=$G(^DGCR(399,IBIFN,"U2")),IB("U4")=$G(^DGCR(399,IBIFN,"U4")),IB("U5")=$G(^DGCR(399,IBIFN,"U5")),IB("U6")=$G(^DGCR(399,IBIFN,"U6")),IB("U8")=$G(^DGCR(399,IBIFN,"U8"))
"RTN","IBCSC8",7,0)
 D H^IBCSCU
"RTN","IBCSC8",8,0)
 ; DEM - IBV is set in EDI^IBCB => S IBAC=1,IBV=0 D EN G Q:'IBAC1,EDI
"RTN","IBCSC8",9,0)
 ;       IBV=0, or IBV=1 as a flag if field on screen is required
"RTN","IBCSC8",10,0)
 ;       or not. <Field #> indicates field is not required.
"RTN","IBCSC8",11,0)
 ;       [Field #]
"RTN","IBCSC8",12,0)
 ; Make some sections NOT available for UB04 form
"RTN","IBCSC8",13,0)
 S IBT=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCSC8",14,0)
 ;S IBV1=$S(IBT=3:"001011",IBV:"111111",1:"000000")
"RTN","IBCSC8",15,0)
 S IBV1=$S(IBT=3:"001011111",IBV:"111111111",1:"000000000")   ; IB*2.0*488 (vd)
"RTN","IBCSC8",16,0)
 ;
"RTN","IBCSC8",17,0)
 S Z=1,IBW=1 X IBWW W " COB Non-Covered Charge Amt: " S X=$P(IB("U4"),U),X2="2$" I X'="" D COMMA^%DTC W X
"RTN","IBCSC8",18,0)
 S Z=2 X IBWW W " Property Casualty Information"
"RTN","IBCSC8",19,0)
 W !,?4,"Claim Number:  ",$P(IB("U4"),U,2),?41,"Contact Name:  ",$P(IB("U4"),U,9)
"RTN","IBCSC8",20,0)
 W !,?4,"Date of 1st Contact:  ",$$FMTE^XLFDT($P(IB("U4"),U,3)),?41,"Contact Phone:  ",$P(IB("U4"),U,10),"  ",$P(IB("U4"),U,11)
"RTN","IBCSC8",21,0)
 ; Start IB*2.0*447 BI
"RTN","IBCSC8",22,0)
 ;S Z=3 X IBWW W " Ambulance Information"
"RTN","IBCSC8",23,0)
 ;W !,?41,"D/O Location: ",$P(IB("U6"),U)
"RTN","IBCSC8",24,0)
 ;W !,?4,"P/U Address1:  ",$P(IB("U5"),U,2),?41,"D/O Address1:  ",$P(IB("U6"),U,2)
"RTN","IBCSC8",25,0)
 ;W !,?4,"P/U Address2:  ",$P(IB("U5"),U,3),?41,"D/O Address2:  ",$P(IB("U6"),U,3)
"RTN","IBCSC8",26,0)
 ;W !,?4,"P/U City:  ",$P(IB("U5"),U,4),?41,"D/O City:  ",$P(IB("U6"),U,4)
"RTN","IBCSC8",27,0)
 ;W !,?4,"P/U State/Zip:  " W:$P(IB("U5"),U,5)'="" $P($G(^DIC(5,$P(IB("U5"),U,5),0)),U,2)
"RTN","IBCSC8",28,0)
 ;W:$P(IB("U5"),U,6)]"" "/"_$P(IB("U5"),U,6)
"RTN","IBCSC8",29,0)
 ;W ?41,"D/O State/Zip:  " W:$P(IB("U6"),U,5)'="" $P($G(^DIC(5,$P(IB("U6"),U,5),0)),U,2)
"RTN","IBCSC8",30,0)
 ;W:$P(IB("U6"),U,6)]"" "/"_$P(IB("U6"),U,6)
"RTN","IBCSC8",31,0)
 ;;W !,?4,"P/U Country/SubDiv:  ",$P(IB("U5"),U),?41,"D/O Country/SubDiv:  "
"RTN","IBCSC8",32,0)
 S Z=3 X IBWW W " Surgical Codes for Anesthesia Claims"
"RTN","IBCSC8",33,0)
 W !,?4,"Primary Code:  " W:$P(IB("U4"),U,7)'="" $P($G(^ICPT($P(IB("U4"),U,7),0)),U)
"RTN","IBCSC8",34,0)
 W ?41,"Secondary Code:  " W:$P(IB("U4"),U,8)'="" $P($G(^ICPT($P(IB("U4"),U,8),0)),U)
"RTN","IBCSC8",35,0)
 S Z=4 X IBWW W " Paperwork Attachment Information"
"RTN","IBCSC8",36,0)
 W !,?4,"Report Type:  " W:$P(IB("U8"),U,2)'="" $P($G(^IBE(353.3,$P(IB("U8"),U,2),0)),U)
"RTN","IBCSC8",37,0)
 W ?41,"Transmission Method:  ",$P(IB("U8"),U,3)
"RTN","IBCSC8",38,0)
 W !,?4,"Attachment Control #:  ",$P(IB("U8"),U)
"RTN","IBCSC8",39,0)
 S Z=5 X IBWW W " Disability Start Date:  ",$$FMTE^XLFDT($P(IB("U4"),U,4)),?41,"Disability End Date:  ",$$FMTE^XLFDT($P(IB("U4"),U,5))
"RTN","IBCSC8",40,0)
 S Z=6 X IBWW W " Assumed Care Date:  ",$$FMTE^XLFDT($P(IB("U4"),U,13)),?41,"Relinquished Care Date:  ",$$FMTE^XLFDT($P(IB("U4"),U,14))
"RTN","IBCSC8",41,0)
 ; End IB*2.0*447 BI
"RTN","IBCSC8",42,0)
 ;
"RTN","IBCSC8",43,0)
 ;/ Beginning of IB*2.0*488 - code moved from IBCSC10H (vd)
"RTN","IBCSC8",44,0)
 S Z=7 X IBWW W " Special Program:  " I $P(IB("U2"),U,16)'="" S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC8",45,0)
 S Z=8 X IBWW W " Homebound:  ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC8",46,0)
 S Z=9 X IBWW W " Date Last Seen:  ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC8",47,0)
 ;/ End of IB*2.0*488 (vd)
"RTN","IBCSC8",48,0)
REV G ^IBCSCP
"RTN","IBCSC8",49,0)
 ;IBCSC8
"RTN","IBCSCH")
0^34^B50914116^B49539365
"RTN","IBCSCH",1,0)
IBCSCH ;ALB/MJB - MCCR HELP ROUTINE ;03 JUN 88 15:25
"RTN","IBCSCH",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,124,138,51,148,137,161,245,232,287,348,349,374,371,395,400,432,447,458,488**;21-MAR-94;Build 184
"RTN","IBCSCH",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCH",4,0)
 ;
"RTN","IBCSCH",5,0)
 ;MAP TO DGCRSCH
"RTN","IBCSCH",6,0)
 ;
"RTN","IBCSCH",7,0)
 N I,C,IBSCNNZ,IBQ,IBPRNT,Z S IBSCNNZ=$$UP^XLFSTR($G(IBSCNN)),IBQ=0
"RTN","IBCSCH",8,0)
 I '$D(IBPAR) D  Q:IBQ
"RTN","IBCSCH",9,0)
 . I $F(".?1500.?HCFA.","."_$G(IBSCNNZ)_"."),$$FT^IBCEF(IBIFN)=2 S IBQ=1,IBPRNT=2 D BL24(IBIFN,0) Q
"RTN","IBCSCH",10,0)
 . I $G(IBSCNNZ)="?SC" S IBQ=1 D DISPSC(IBIFN) Q
"RTN","IBCSCH",11,0)
 . I $G(IBSCNNZ)="?INS" S IBQ=1 D INSDSPL(IBIFN) Q
"RTN","IBCSCH",12,0)
 . I $G(IBSCNNZ)="?INX" S IBQ=1 D INSDSPLX(IBIFN) Q
"RTN","IBCSCH",13,0)
 . I $G(IBSCNNZ)="?PRV" S IBQ=1 D DISPROPT(IBIFN) Q
"RTN","IBCSCH",14,0)
 . I $G(IBSCNNZ)="?CHG" S IBQ=1 D DISPCHG^IBCRBH1(IBIFN) Q
"RTN","IBCSCH",15,0)
 . I $G(IBSCNNZ)="?PRC" S IBQ=1 D DISPPRC^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",16,0)
 . I $G(IBSCNNZ)="?CPT" S IBQ=1 D BCPTCHG^IBCRBH2(IBIFN) Q
"RTN","IBCSCH",17,0)
 . I $G(IBSCNNZ)="?INC" S IBQ=1 D EDIT^IBCBB(IBIFN) Q
"RTN","IBCSCH",18,0)
 . I $G(IBSCNNZ)="?CLA",$$CK0^IBCIUT1() S IBQ=1 D CLA^IBCISC(IBIFN) Q
"RTN","IBCSCH",19,0)
 . I $G(IBSCNNZ)="?MRA",$$MCRONBIL^IBEFUNC(IBIFN),$T(SCR^IBCEMVU)'="" S IBQ=1 D SCR^IBCEMVU(IBIFN) Q
"RTN","IBCSCH",20,0)
 . I $G(IBSCNNZ)="?ID" S IBQ=1 D DISPID^IBCEF74(IBIFN) Q
"RTN","IBCSCH",21,0)
 . I $G(IBSCNNZ)="?RX" S IBQ=1 D DISPRX^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",22,0)
 . I $G(IBSCNNZ)="?RNB" S IBQ=1 D EDITRNB^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",23,0)
 . Q
"RTN","IBCSCH",24,0)
 ;
"RTN","IBCSCH",25,0)
 S IBH("HELP")="" D ^IBCSCU,H^IBCSCU K IBH("HELP") W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
"RTN","IBCSCH",26,0)
 W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
"RTN","IBCSCH",27,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those"
"RTN","IBCSCH",28,0)
 W !,"enclosed in arrows ""<>"" are not."
"RTN","IBCSCH",29,0)
 G:$D(IBPAR) M1
"RTN","IBCSCH",30,0)
M W "  Special help screens:"
"RTN","IBCSCH",31,0)
 W !,?5,"Enter '?SC' to view SC Status and Rated Disabilities."
"RTN","IBCSCH",32,0)
 W !,?5,"Enter '?INS' to view the patients insurance policies."
"RTN","IBCSCH",33,0)
 W !,?5,"Enter '?INX' to view the patients insurance policies with comments."
"RTN","IBCSCH",34,0)
 W !,?5,"Enter '?PRV' to view provider specific information."
"RTN","IBCSCH",35,0)
 W !,?5,"Enter '?PRC' to view all procedures on the bill and related data."
"RTN","IBCSCH",36,0)
 W !,?5,"Enter '?CHG' to view all items on the bill with potential charges."
"RTN","IBCSCH",37,0)
 W !,?5,"Enter '?CPT' to view all charges for selected CPT codes and bill type."
"RTN","IBCSCH",38,0)
 I $$FT^IBCEF(IBIFN)=2 W !,?5,"Enter '?1500' to view how block 24 will print on a CMS-1500."
"RTN","IBCSCH",39,0)
 W !,?5,"Enter '?INC' to execute the edits & view the bill inconsistencies."
"RTN","IBCSCH",40,0)
 I $$CK0^IBCIUT1() W !?5,"Enter '?CLA' to view the ClaimsManager options."
"RTN","IBCSCH",41,0)
 I $$MCRONBIL^IBEFUNC(IBIFN) W !?5,"Enter '?MRA' to view Medicare Remittance Advice EOB's on file."
"RTN","IBCSCH",42,0)
 W !,?5,"Enter '?ID' to view all IDs to be electronically transmitted on this claim."
"RTN","IBCSCH",43,0)
 W !,?5,"Enter '?RX' to view all prescriptions on this claim."
"RTN","IBCSCH",44,0)
 W !,?5,"Enter '?RNB' to enter an RNB for bill associated Claims Tracking entries."
"RTN","IBCSCH",45,0)
 ;
"RTN","IBCSCH",46,0)
 D S W ! F I=$Y:1:20 W !
"RTN","IBCSCH",47,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR
"RTN","IBCSCH",48,0)
 R X:DTIME
"RTN","IBCSCH",49,0)
 Q
"RTN","IBCSCH",50,0)
 ;
"RTN","IBCSCH",51,0)
M1 N I,Z S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
"RTN","IBCSCH",52,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN"
"RTN","IBCSCH",53,0)
 R X:DTIME
"RTN","IBCSCH",54,0)
 Q
"RTN","IBCSCH",55,0)
 ;
"RTN","IBCSCH",56,0)
 ;
"RTN","IBCSCH",57,0)
PAR S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
"RTN","IBCSCH",58,0)
 ;
"RTN","IBCSCH",59,0)
S ; display the available screen data
"RTN","IBCSCH",60,0)
 N C,I,Z,J W ! S Z="AVAILABLE SCREENS" X IBWW
"RTN","IBCSCH",61,0)
 ; Start IB*2.0*447 BI
"RTN","IBCSCH",62,0)
 ;S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Claim Information^Locally Defined^Billing - Specific"
"RTN","IBCSCH",63,0)
 S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Claim Information^Ambulance^Billing - Specific^Locally Defined"
"RTN","IBCSCH",64,0)
 ; End IB*2.0*447 BI
"RTN","IBCSCH",65,0)
 S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
"RTN","IBCSCH",66,0)
 Q
"RTN","IBCSCH",67,0)
 ;
"RTN","IBCSCH",68,0)
W ;
"RTN","IBCSCH",69,0)
 N I,J,Z
"RTN","IBCSCH",70,0)
 F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
"RTN","IBCSCH",71,0)
 W:'(I-1)#2 ! Q
"RTN","IBCSCH",72,0)
 Q
"RTN","IBCSCH",73,0)
 ;IBCSCH
"RTN","IBCSCH",74,0)
 ;
"RTN","IBCSCH",75,0)
 ;
"RTN","IBCSCH",76,0)
BL24(IBIFN,IBNOSHOW) ; display block 24 of CMS-1500
"RTN","IBCSCH",77,0)
 ; IBNOSHOW = 1 for not to show error/warning text line
"RTN","IBCSCH",78,0)
 N X,Y,DIR,IBPG,IBLN,IBCOL,IBX,IBQ,IBLC,IBLIN,IBPFORM,IBD,IBC1,Z,Z0,IBXDATA,IBXSAVE,IBNXPG,L,T,NUM
"RTN","IBCSCH",79,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBCSCH",80,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBCSCH",81,0)
 ;
"RTN","IBCSCH",82,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH",83,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2)
"RTN","IBCSCH",84,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBCSCH",85,0)
 ;
"RTN","IBCSCH",86,0)
 W @IOF,!,"Example of diagnoses, procedures and charges printing on the CMS-1500"
"RTN","IBCSCH",87,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",88,0)
 ;
"RTN","IBCSCH",89,0)
 ; box 19 - lines 36-37
"RTN","IBCSCH",90,0)
 F Z=+IBLIN,IBLIN+1 I $D(^TMP("IBXDISP",$J,1,Z)) S Z0=$G(^TMP("IBXDISP",$J,1,Z,+$O(^TMP("IBXDISP",$J,1,Z,20),-1))) I Z0'="" S:Z=+IBLIN Z0="BOX 19 DATA: "_Z0 W !,Z0
"RTN","IBCSCH",91,0)
 ;
"RTN","IBCSCH",92,0)
 ; box 21 - lines 39-41
"RTN","IBCSCH",93,0)
 W !,"21. Diagnosis"
"RTN","IBCSCH",94,0)
 ;I $D(^TMP("IBXDISP",$J,2,IBLIN+3)) W ?16,"(1st 4 only)"   ; -> baa *488*
"RTN","IBCSCH",95,0)
 ; Print all 12 diagnosis codes  -> baa *488*
"RTN","IBCSCH",96,0)
 F L=3,4,5 D
"RTN","IBCSCH",97,0)
 .W !
"RTN","IBCSCH",98,0)
 .F T=3,16,29,42 D
"RTN","IBCSCH",99,0)
 ..S NUM=""
"RTN","IBCSCH",100,0)
 ..I L=3 S NUM=$S(T=3:1,T=16:2,T=29:3,T=42:4,1:"")
"RTN","IBCSCH",101,0)
 ..I L=4 S NUM=$S(T=3:5,T=16:6,T=29:7,T=42:8,1:"")
"RTN","IBCSCH",102,0)
 ..I L=5 S NUM=$S(T=3:9,T=16:10,T=29:11,T=42:12,1:"")
"RTN","IBCSCH",103,0)
 ..S T2=T+2,T1=T I NUM>9 S T1=T-1
"RTN","IBCSCH",104,0)
 ..W ?T1,NUM,".",?T2,$G(^TMP("IBXDISP",$J,1,IBLIN+L,T))
"RTN","IBCSCH",105,0)
 ;W !,?5,"1. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,3)),?25,"3. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,30))
"RTN","IBCSCH",106,0)
 ;W !,?5,"2. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,3)),?25,"4. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,30))
"RTN","IBCSCH",107,0)
 ;
"RTN","IBCSCH",108,0)
 ; box 24 - lines 44-55
"RTN","IBCSCH",109,0)
 D PG
"RTN","IBCSCH",110,0)
 S IBPG=0 F  S IBPG=$O(^TMP("IBXDISP",$J,IBPG)) Q:'IBPG  D  Q:IBQ
"RTN","IBCSCH",111,0)
 . I '$D(^TMP("IBXDISP",$J,IBPG,IBLIN+9)) Q   ; no line's on this page
"RTN","IBCSCH",112,0)
 . F IBLN=IBLIN+8:1:+$P(IBLIN,U,2) S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,0)) Q:'IBCOL&'$O(^TMP("IBXDISP",$J,IBPG,IBLN))  S IBLC=IBLC+1 I IBCOL D  Q:IBQ
"RTN","IBCSCH",113,0)
 .. S IBCOL=0,IBC1=1 F  S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL)) Q:'IBCOL  I $TR($G(^(IBCOL))," ")'="" D
"RTN","IBCSCH",114,0)
 ... W:IBC1 ! S IBC1=0 W ?(IBCOL-1),$G(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL))
"RTN","IBCSCH",115,0)
 . S IBNXPG=$O(^TMP("IBXDISP",$J,IBPG))   ; next page
"RTN","IBCSCH",116,0)
 . I 'IBQ,IBNXPG,$D(^TMP("IBXDISP",$J,IBNXPG,IBLIN+9)) S IBLIN=$$BOX24D^IBCEF11(),IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  S IBLC=9 W @IOF D PG
"RTN","IBCSCH",117,0)
 . Q
"RTN","IBCSCH",118,0)
 ;
"RTN","IBCSCH",119,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",120,0)
 I 'IBPG,'IBQ S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH",121,0)
 K ^TMP("IBXDISP",$J),^TMP("IBXSAVE",$J)
"RTN","IBCSCH",122,0)
 Q
"RTN","IBCSCH",123,0)
 ;
"RTN","IBCSCH",124,0)
PG ; Display box 24 letters at top of charge list
"RTN","IBCSCH",125,0)
 W !,"24. A             B  C    D                 E         F     G H I    J"
"RTN","IBCSCH",126,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",127,0)
 Q
"RTN","IBCSCH",128,0)
 ;
"RTN","IBCSCH",129,0)
INSDSPL(IBIFN) ; Display patient's policies
"RTN","IBCSCH",130,0)
 N DIR,X,Y,IBX,DFN,IBDTIN,IBCOVEXT W @IOF
"RTN","IBCSCH",131,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDTIN=$P(IBX,U,3),IBCOVEXT=1
"RTN","IBCSCH",132,0)
 I +DFN D DISPDT^IBCNS W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCSCH",133,0)
 Q
"RTN","IBCSCH",134,0)
 ;
"RTN","IBCSCH",135,0)
INSDSPLX(IBIFN) ; Display patient's policies extended (?INX)
"RTN","IBCSCH",136,0)
 N IBX,DFN,IBDATE S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDATE=$P(IBX,U,3) D DISP^IBCNS3(DFN,IBDATE,123)
"RTN","IBCSCH",137,0)
 Q
"RTN","IBCSCH",138,0)
 ;
"RTN","IBCSCH",139,0)
DISPSC(IBIFN) ; display patients SC Status and Rated Disabilities
"RTN","IBCSCH",140,0)
 N IB0,DFN,IBSC,IBX,VAEL,VAERR
"RTN","IBCSCH",141,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2),IBSC=$P(IB0,U,18)
"RTN","IBCSCH",142,0)
 W !,@IOF,!,"SC Status and Rated Disabilities for ",$P($G(^DPT(+$G(DFN),0)),U,1)
"RTN","IBCSCH",143,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCSCH",144,0)
 I +$G(IBIFN) W !," SC At Time Of Care: ",$S(IBSC=1:"Yes",IBSC=0:"No",1:"")
"RTN","IBCSCH",145,0)
 I +$G(DFN) D ELIG^VADPT D DIS^DGRPDB
"RTN","IBCSCH",146,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",147,0)
 S IBX=$$PAUSE^IBCSCH1(19)
"RTN","IBCSCH",148,0)
 Q
"RTN","IBCSCH",149,0)
 ;
"RTN","IBCSCH",150,0)
DISPROPT(IBIFN) ; prompt for VA or Non-VA provider.
"RTN","IBCSCH",151,0)
 N X,Y,DIR
"RTN","IBCSCH",152,0)
 S DIR(0)="SAO^V:VA PROVIDER;N:NON-VA PROVIDER",DIR("A")="(V)A or (N)on-VA Provider: ",DIR("B")="V"
"RTN","IBCSCH",153,0)
 D ^DIR
"RTN","IBCSCH",154,0)
 I Y="V" D DISPPRV^IBCSCH2(IBIFN) Q
"RTN","IBCSCH",155,0)
 I Y="N" D DISPNVA^IBCSCH2(IBIFN)
"RTN","IBCSCH",156,0)
 Q
"RTN","IBCSCH",157,0)
 ;
"RTN","IBCU7")
0^36^B76838380^B81426431
"RTN","IBCU7",1,0)
IBCU7 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ;29-OCT-91
"RTN","IBCU7",2,0)
 ;;2.0;INTEGRATED BILLING;**62,52,106,125,51,137,210,245,228,260,348,371,432,447,488**;21-MAR-94;Build 184
"RTN","IBCU7",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU7",4,0)
 ;
"RTN","IBCU7",5,0)
 ;MAP TO DGCRU7
"RTN","IBCU7",6,0)
 ;
"RTN","IBCU7",7,0)
CHKX ;  -interception of input x from Additional Procedure input
"RTN","IBCU7",8,0)
 G:X=" " CHKXQ
"RTN","IBCU7",9,0)
 I $$INPAT^IBCEF(DA(1)),'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1N D  G CHKXQ
"RTN","IBCU7",10,0)
 . K X
"RTN","IBCU7",11,0)
 . D EN^DDIOL("Site param does not allow entry of non-PTF procedures") ;Fileman error here will be: The previous error occurred when performing an action specified in a Pre-lookup transform (7.5 node).
"RTN","IBCU7",12,0)
 G:'$D(^UTILITY($J,"IB")) CHKXQ
"RTN","IBCU7",13,0)
 S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
"RTN","IBCU7",14,0)
 I $D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
"RTN","IBCU7",15,0)
CHKXQ Q
"RTN","IBCU7",16,0)
 ;
"RTN","IBCU7",17,0)
CODMUL ;Date oriented entry of procedure
"RTN","IBCU7",18,0)
DELASK I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
"RTN","IBCU7",19,0)
 I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
"RTN","IBCU7",20,0)
 K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
"RTN","IBCU7",21,0)
 ;
"RTN","IBCU7",22,0)
CODDT I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",23,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
"RTN","IBCU7",24,0)
 S X=$$PRCDIV^IBCU71(IBIFN) I +X W !!,$P(X,U,2),!
"RTN","IBCU7",25,0)
 N Z,Z0 S Z=$G(^DGCR(399,IBIFN,"U")),Z0=$$FMTE^XLFDT($P(Z,U),"2D")_"-"_$$FMTE^XLFDT($P(Z,U,2),"2D")
"RTN","IBCU7",26,0)
 W !,"Select PROCEDURE DATE"_$S($TR(Z0,"-")'="":" ("_Z0_")",1:"")_": " R X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
"RTN","IBCU7",27,0)
 S IBEX=0 D  ; Get procedure date
"RTN","IBCU7",28,0)
 . I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",29,0)
 . I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",30,0)
 . S %DT="EXP",%DT(0)=-DT D ^%DT K %DT I Y<1 S IBEX=1 Q
"RTN","IBCU7",31,0)
 . I '$$OPV2^IBCU41(Y,IBIFN,1) S IBEX=1 Q
"RTN","IBCU7",32,0)
 . S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y
"RTN","IBCU7",33,0)
 I 'IBEX D ASKCOD,ADDCPT^IBCU71:$D(DGCPT)
"RTN","IBCU7",34,0)
 K IBEX
"RTN","IBCU7",35,0)
 G CODDT
"RTN","IBCU7",36,0)
 ;
"RTN","IBCU7",37,0)
ASKCOD N Z,Z0,DA,IBACT,IBQUIT,IBLNPRV  ;WCJ;2.0*432
"RTN","IBCU7",38,0)
 N IBPOPOUT  S IBPOPOUT=0  ; IB*2.0*447 BI
"RTN","IBCU7",39,0)
 K DGCPT
"RTN","IBCU7",40,0)
 S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
"RTN","IBCU7",41,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S ^DGCR(399,IBIFN,"CP",0)=U_$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7",42,0)
 ;
"RTN","IBCU7",43,0)
 F  S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCU7",44,0)
 . S IBPOPOUT=0
"RTN","IBCU7",45,0)
 . S DIC("A")="   Select PROCEDURE: "
"RTN","IBCU7",46,0)
 . S DIC="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",47,0)
 . S DIC(0)="AEQMNL"
"RTN","IBCU7",48,0)
 . S DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)"
"RTN","IBCU7",49,0)
 . S DIC("DR")="1///^S X=DGPROCDT"
"RTN","IBCU7",50,0)
 . S DA(1)=IBIFN,DLAYGO=399
"RTN","IBCU7",51,0)
 . W ! D ^DIC I Y<1 S IBQUIT=1 Q
"RTN","IBCU7",52,0)
 . S IBPROCP=+Y
"RTN","IBCU7",53,0)
 . ; If we just added inactive code - it must be deleted.
"RTN","IBCU7",54,0)
 . S IBACT=0 ; Active flag
"RTN","IBCU7",55,0)
 . I Y["ICD0" S IBACT=$$ICD0ACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",56,0)
 . I Y["ICPT" S IBACT=$$CPTACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",57,0)
 . S DGCPTNEW=$P(Y,"^",3) ;Was the procedure just added?
"RTN","IBCU7",58,0)
 . I DGCPTNEW,'IBACT D DELPROC Q
"RTN","IBCU7",59,0)
 . I 'IBACT W !,*7,"Warning:  Procedure code is inactive on this date",!
"RTN","IBCU7",60,0)
 . I DGCPTNEW,$D(^UTILITY($J,"IB")),$$INPAT^IBCEF(IBIFN),Y["ICPT(" D DATA^IBCU74(Y,.IBLNPRV)
"RTN","IBCU7",61,0)
 . S DGADDVST=$S(DGCPTNEW:1,$D(DGADDVST):DGADDVST,1:0)
"RTN","IBCU7",62,0)
 . N IBPRV,IBPRVO,IBPRVN
"RTN","IBCU7",63,0)
 . ;
"RTN","IBCU7",64,0)
 . ; Line level provider function by form type.
"RTN","IBCU7",65,0)
 . ;     CMS-1500 (FORM TYPE=2)
"RTN","IBCU7",66,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",67,0)
 . ;              and SUPERVISING PROVIDER.
"RTN","IBCU7",68,0)
 . ;     UB-04 (FORM TYPE=3)
"RTN","IBCU7",69,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",70,0)
 . ;              OPERATING PROVIDER, and OTHER OPERATING
"RTN","IBCU7",71,0)
 . ;              PROVIDER.
"RTN","IBCU7",72,0)
 . ;
"RTN","IBCU7",73,0)
 . ; Removed: Call to $$MAINPRV^IBCEU(IBIFN) is for claim
"RTN","IBCU7",74,0)
 . ;          level provider defaults.
"RTN","IBCU7",75,0)
 . ;     1. For new line level providers we don't need
"RTN","IBCU7",76,0)
 . ;        or want default claim level provider
"RTN","IBCU7",77,0)
 . ;        (requirement).
"RTN","IBCU7",78,0)
 . ;     2. We don't want to default claim level to
"RTN","IBCU7",79,0)
 . ;        line level provider (requirement).
"RTN","IBCU7",80,0)
 . ;
"RTN","IBCU7",81,0)
 . K DIC("V")  ; DEM;432 - KILL DIC("V") because this was for previous variable pointer use.
"RTN","IBCU7",82,0)
 . ;
"RTN","IBCU7",83,0)
 . N IBPROCSV  ; DEM;432 - Variable IBPROCSV is variable to preserve value of 'Y', which is procedure code info returned by call to ^DIC.
"RTN","IBCU7",84,0)
 . S IBPROCSV=Y  ; DEM;432 - Preserve value of Y for after calls to FileMan (Y = procedure code info returned by call to ^DIC).
"RTN","IBCU7",85,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",86,0)
 . ; START IB*2.0*447 BI
"RTN","IBCU7",87,0)
 . ;I Y["ICPT" S DR=".01;16",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)  K DR ;
"RTN","IBCU7",88,0)
 . I Y["ICPT" S DR=".01;16",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ;
"RTN","IBCU7",89,0)
 . ; END IB*2.0*447 BI
"RTN","IBCU7",90,0)
 . S DR=""
"RTN","IBCU7",91,0)
 . D EN^IBCU7B ; DEM;432 - Call to line level provider user input.
"RTN","IBCU7",92,0)
 . S Y=IBPROCSV  ; DEM;432 - Restore value of Y after calls to FileMan
"RTN","IBCU7",93,0)
 . K IBPROCSV
"RTN","IBCU7",94,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",95,0)
 . I IBPOPOUT Q   ; IB*2.0*447 BI
"RTN","IBCU7",96,0)
 . S DR="" I Y["ICPT" S DR="6;5//"_$$DEFDIV(IBIFN)_";"
"RTN","IBCU7",97,0)
 . S DR=DR_$S(IBFT=2:"8;9;17//NO;",1:"")_3,DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)
"RTN","IBCU7",98,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",99,0)
 . I IBFT=3 D:'$$INPAT^IBCEF(IBIFN) ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",100,0)
 . ; DEM;432 - Add Additional OB Minutes to DR string for call to DIE.
"RTN","IBCU7",101,0)
 . S DR=$$SPCUNIT(IBIFN,IBPROCP) S:DR["15;" DR=DR_"74Additional OB Minutes" D ^DIE ; miles/minutes/hours
"RTN","IBCU7",102,0)
 . ;
"RTN","IBCU7",103,0)
 . I IBFT=2 D
"RTN","IBCU7",104,0)
 .. D DX^IBCU72(IBIFN,IBPROCP)
"RTN","IBCU7",105,0)
 .. S X=$$ADDTNL(IBIFN,.DA)
"RTN","IBCU7",106,0)
 . Q:$$INPAT^IBCEF(IBIFN)  ;only outpatient bills
"RTN","IBCU7",107,0)
 . ;add procedures to array for download to PCE: dgcpt(assoc clinic,cpt,'provider^first dx^modifiers',cnt)=""
"RTN","IBCU7",108,0)
 . S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0))
"RTN","IBCU7",109,0)
 . S X=$P(DGPROC,U,18)_U_+$G(^IBA(362.3,+$P(DGPROC,U,11),0))_U_$P(DGPROC,U,15)
"RTN","IBCU7",110,0)
 . I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
"RTN","IBCU7",111,0)
 . I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1 I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,X,DGCPT)=""
"RTN","IBCU7",112,0)
 . ; add visit date to bill
"RTN","IBCU7",113,0)
 . I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
"RTN","IBCU7",114,0)
 ; Delete modifers with only a sequence #, no code
"RTN","IBCU7",115,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CP",Z,"MOD",Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,2)="" S DA(2)=IBIFN,DA(1)=Z,DA=Z0,DIK="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD""," D ^DIK
"RTN","IBCU7",116,0)
 Q
"RTN","IBCU7",117,0)
CODQ K %DT,DGPROC,DIC,DIE,DR,DGPROCDT,IBPROCP,DLAYGO
"RTN","IBCU7",118,0)
 K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW
"RTN","IBCU7",119,0)
 Q
"RTN","IBCU7",120,0)
 ;
"RTN","IBCU7",121,0)
DELPROC ; Remove the selected procedure, because of inactive status (cancel selection)
"RTN","IBCU7",122,0)
 W !!,*7,"The Procedure code is inactive on ",$$DAT1^IBOUTL(DGPROCDT),"."
"RTN","IBCU7",123,0)
 W !,"Please select another Procedure."
"RTN","IBCU7",124,0)
 S DA(1)=IBIFN,DA=+Y,DIK="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",125,0)
 D ^DIK
"RTN","IBCU7",126,0)
 Q
"RTN","IBCU7",127,0)
 ;
"RTN","IBCU7",128,0)
DELADD N Z,Z0,DA,DIK,X,Y
"RTN","IBCU7",129,0)
 S DA(1)=IBIFN
"RTN","IBCU7",130,0)
 ;Delete references to proc on rev codes
"RTN","IBCU7",131,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",$P(Z0,U,15)!$S($P(Z0,U,10)=3:$P(Z0,U,11),1:0) S DIE="^DGCR(399,"_DA(1)_",""RC"",",DA=Z,DR=".11///@;.15///@"_$S($P(Z0,U,8):"",1:";.08////1") D ^DIE
"RTN","IBCU7",132,0)
 S DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
"RTN","IBCU7",133,0)
 S DGRVRCAL=1
"RTN","IBCU7",134,0)
 Q
"RTN","IBCU7",135,0)
 ;
"RTN","IBCU7",136,0)
DTMES ;Message if procedure date not in date range
"RTN","IBCU7",137,0)
 Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
"RTN","IBCU7",138,0)
 G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
"RTN","IBCU7",139,0)
 W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
"RTN","IBCU7",140,0)
 S Y=$P(DGNODUU,"^") X ^DD("DD")
"RTN","IBCU7",141,0)
 W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
"RTN","IBCU7",142,0)
 K X,Y
"RTN","IBCU7",143,0)
DTMESQ K DGNODUU Q
"RTN","IBCU7",144,0)
 ;
"RTN","IBCU7",145,0)
CODHLP ;Display Additional Procedure codes
"RTN","IBCU7",146,0)
 N I,J,Y,IBMOD
"RTN","IBCU7",147,0)
 I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
"RTN","IBCU7",148,0)
 F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$$PRCNM^IBCSCH1($P(Y,"^",1),$P(Y,"^",2)) W !?5,$E($P(Z,"^",2),1,28),?35,"- ",$P(Z,"^") D
"RTN","IBCU7",149,0)
 . N IBY
"RTN","IBCU7",150,0)
 . S IBY=$P(Y,U,2)
"RTN","IBCU7",151,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,I,1)
"RTN","IBCU7",152,0)
 . I IBMOD'="" S IBMOD="/"_IBMOD W IBMOD
"RTN","IBCU7",153,0)
 . W ?60,"Date: " S Y=IBY D DT^DIQ
"RTN","IBCU7",154,0)
 ;
"RTN","IBCU7",155,0)
 K Z Q
"RTN","IBCU7",156,0)
 ;
"RTN","IBCU7",157,0)
DICV I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",158,0)
 Q
"RTN","IBCU7",159,0)
 ;
"RTN","IBCU7",160,0)
DEFDIV(IBIFN) ; Find default division for bill IBIFN
"RTN","IBCU7",161,0)
 Q $P($G(^DG(40.8,+$P($G(^DGCR(399,IBIFN,0)),U,22),0)),U)
"RTN","IBCU7",162,0)
 ;
"RTN","IBCU7",163,0)
ADDTNL(IBIFN,DA) ;
"RTN","IBCU7",164,0)
 N DR,IBOK,X,Y,DIR
"RTN","IBCU7",165,0)
 S IBOK=1
"RTN","IBCU7",166,0)
 S DR="19T;50.09T;50.08T" D ^DIE  ; WCJ;IB*2.0*488 Added Ts
"RTN","IBCU7",167,0)
 ;I '($$FT^IBCEF(IBIFN)'=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",168,0)
 I '($$FT^IBCEF(IBIFN)=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",169,0)
 I $D(Y) S IBOK=0 G ADDTNLQ
"RTN","IBCU7",170,0)
 ;/Beginning of IB*2.0*488 (vd)
"RTN","IBCU7",171,0)
 ;S DIR("B")="NO",DIR("A")="EDIT CMS-1500 SPECIAL PROGRAM FIELDS and BOX 19?: ",DIR("A",1)=" ",DIR(0)="YA"
"RTN","IBCU7",172,0)
 ;S DIR("?",1)="Respond YES only if you need to add/edit data for chiropractic visits,"
"RTN","IBCU7",173,0)
 ;S DIR("?")="EPSDT care, or if billing for HOSPICE and attending is not a hospice employee."
"RTN","IBCU7",174,0)
 ;D ^DIR K DIR
"RTN","IBCU7",175,0)
 ;I Y'=1 S IBOK=0 G ADDTNLQ
"RTN","IBCU7",176,0)
 ;S DR="W !,""  <<EPSDT>>"";50.07;W !!,""  <<HOSPICE>>"";50.03"
"RTN","IBCU7",177,0)
 S DR="50.07T;50.03T"   ;WCJ;IB*2.0*488 added Ts
"RTN","IBCU7",178,0)
 ;/End of IB*2.0*488 (vd)
"RTN","IBCU7",179,0)
 D ^DIE
"RTN","IBCU7",180,0)
 W !
"RTN","IBCU7",181,0)
ADDTNLQ Q IBOK
"RTN","IBCU7",182,0)
 ;
"RTN","IBCU7",183,0)
XTRA1(Y) ;
"RTN","IBCU7",184,0)
 K Y
"RTN","IBCU7",185,0)
 Q
"RTN","IBCU7",186,0)
 ;
"RTN","IBCU7",187,0)
SPCUNIT(IBIFN,DA) ; return fields for special units if applicable, in DR form
"RTN","IBCU7",188,0)
 N IB0,IBCPT,IBDR,IBCT,IBFT,DFN S IBDR=""
"RTN","IBCU7",189,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCT=$P(IB0,U,27),IBFT=$P(IB0,U,19),DFN=$P(IB0,U,2)
"RTN","IBCU7",190,0)
 S IBCPT=$G(^DGCR(399,+$G(IBIFN),"CP",+$G(DA),0)) I IBCPT'["ICPT" G SPCUNTQ
"RTN","IBCU7",191,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,5,IBCT) S IBDR="15;" D SROMIN^IBCU74(IBIFN,DA) G SPCUNTQ ; minutes
"RTN","IBCU7",192,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,4,IBCT) S IBDR="21;" G SPCUNTQ ; miles
"RTN","IBCU7",193,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,6,IBCT) S IBDR="22//"_$$OBSHOUR^IBCU74(DFN,$P(IBCPT,U,2))_";" G SPCUNTQ ; hours
"RTN","IBCU7",194,0)
 I +IBFT=2,$P($G(^IBE(353.2,+$P(IBCPT,U,10),0)),U,2)="ANESTHESIA" S IBDR="15;" ; minutes
"RTN","IBCU7",195,0)
SPCUNTQ Q IBDR
"RTN","IBCU7",196,0)
 ;
"RTN","IBCU7",197,0)
ATTACH ; DEM;432 - Attachment control number.
"RTN","IBCU7",198,0)
 ; Ask if user wants to enter Attachment Control Number.
"RTN","IBCU7",199,0)
 N DIR,X,Y,DA,DIE,DR
"RTN","IBCU7",200,0)
 S DIR("A")="Enter Attachment Control Number"
"RTN","IBCU7",201,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBCU7",202,0)
 D ^DIR
"RTN","IBCU7",203,0)
 Q:'Y
"RTN","IBCU7",204,0)
 ; User chose to enter Attachment Control Number.
"RTN","IBCU7",205,0)
 ; User enters Attachment Control fields.
"RTN","IBCU7",206,0)
 S DA(1)=IBIFN,DA=IBPROCP
"RTN","IBCU7",207,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"","
"RTN","IBCU7",208,0)
 S DR="71Report Type;72Report Transmission Method;70Attachment Control Number"
"RTN","IBCU7",209,0)
 D ^DIE Q
"RTN","IBJTBA1")
0^17^B55203137^B50433175
"RTN","IBJTBA1",1,0)
IBJTBA1 ;ALB/TMK/PJH - TPJI BILL CHARGE INFO SCREEN ;01-MAR-1995
"RTN","IBJTBA1",2,0)
 ;;2.0;INTEGRATED BILLING;**135,265,155,349,417,451,488**;21-MAR-94;Build 184
"RTN","IBJTBA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTBA1",4,0)
 ;
"RTN","IBJTBA1",5,0)
SHEOB(IBI,IBSPL,IBEOBCT,IBCTOF) ; Format EOB called from IBJTBA
"RTN","IBJTBA1",6,0)
 ; IBSPL = 0 if EOB represents one bill's payment
"RTN","IBJTBA1",7,0)
 ;       =  1 if AR had to split the EOB between multiple bills
"RTN","IBJTBA1",8,0)
 ; Assumes IBLN is defined and returns it with line count
"RTN","IBJTBA1",9,0)
 ; Assumes IBEOBDET may be defined as a flag to control detail level of print
"RTN","IBJTBA1",10,0)
 N X,IBPT,IBCN,IBM,IBM1,IBM2,IBTY,IBPY,IBPR,IBST,IBSTR,IBCA,IBTS,IBTA,Z,Z0
"RTN","IBJTBA1",11,0)
 S X="0.00"
"RTN","IBJTBA1",12,0)
 S IBM=$G(^IBM(361.1,IBI,0))
"RTN","IBJTBA1",13,0)
 S IBTY=$P(IBM,U,4),IBTY=$S(IBTY:"MEDICARE MRA",1:"NORMAL EOB")
"RTN","IBJTBA1",14,0)
 I IBTY'["MRA",IBSPL S IBTY="A/R SPLIT/COVERS MORE THAN 1 BILL"
"RTN","IBJTBA1",15,0)
 I $P(IBM,U,13)>1,$P(IBM,U,13)<5 S IBTY=IBTY_" ("_$$EXTERNAL^DILFD(361.1,.13,,$P(IBM,U,13))_")"
"RTN","IBJTBA1",16,0)
 S IBCN=$P(IBM,U,14),IBPY=$P(IBM,U,2)
"RTN","IBJTBA1",17,0)
 S:IBPY IBPY=$P($G(^DIC(36,IBPY,0)),U)
"RTN","IBJTBA1",18,0)
 S IBPR=$$FMTE^XLFDT($P(IBM,U,6)),IBST=$P(IBM,U,16)
"RTN","IBJTBA1",19,0)
 S IBST=$$EXPAND^IBTRE(361.1,.16,+IBST)
"RTN","IBJTBA1",20,0)
 S IBM1=$G(^IBM(361.1,IBI,1))
"RTN","IBJTBA1",21,0)
 ;
"RTN","IBJTBA1",22,0)
 S IBPT=$P(IBM1,U,2)   ; patient responsibility 1.02 fiel
"RTN","IBJTBA1",23,0)
 I $P(IBM,U,4),$D(^IBM(361.1,IBI,"ERR")) S IBPT=0  ; filing error
"RTN","IBJTBA1",24,0)
 ; If MRA & UB, then calculate patient responsiblity value
"RTN","IBJTBA1",25,0)
 I $P(IBM,U,4),$$FT^IBCEF(+$P(IBM,U,1))=3 S IBPT=$$PTRESPI^IBCECOB1(IBI)
"RTN","IBJTBA1",26,0)
 ;
"RTN","IBJTBA1",27,0)
 S IBCA=$P(IBM1,U)
"RTN","IBJTBA1",28,0)
 S IBM2=$G(^IBM(361.1,IBI,2)),IBTA=$P(IBM2,U,3)
"RTN","IBJTBA1",29,0)
 ; if no Total Allowed Amount, sum up amounts on Line Level Adjustment
"RTN","IBJTBA1",30,0)
 I IBTA="" S IBTA=$$ALLOWED^IBCEMU2(IBI)
"RTN","IBJTBA1",31,0)
 S IBTS=$P(IBM2,U,4)
"RTN","IBJTBA1",32,0)
 D MRA2
"RTN","IBJTBA1",33,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",34,0)
 I '$G(IBEOBDET),IBSPL D
"RTN","IBJTBA1",35,0)
 . S IBSTR=$$SETLN^IBJTBA("    **A/R CORRECTED PAYMENT DATA:","",1,50),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",36,0)
 . S IBSTR=$$SETLN^IBJTBA("     TOTAL AMT PD: "_$J(+$P($G(^IBM(361.1,IBI,1)),U,1),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",37,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBI,8,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBJTBA1",38,0)
 .. S IBSTR=$$SETLN^IBJTBA($E($J("",8)_$S($P(Z0,U,3):$$BN1^PRCAFN(+$P(Z0,U,3)),1:"[suspense]"_$P(Z0,U))_$J("",25),1,25)_"  "_$J(+$P(Z0,U,2),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",39,0)
 ;
"RTN","IBJTBA1",40,0)
 I $G(IBEOBDET) D
"RTN","IBJTBA1",41,0)
 . I $P($G(^IBM(361.1,IBI,0)),U,4) D  Q     ; Medicare MRA processing
"RTN","IBJTBA1",42,0)
 .. N VALMCNT
"RTN","IBJTBA1",43,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",44,0)
 .. D GETEOB^IBCECSA6(IBI,0,,+$G(IBLN)-1)
"RTN","IBJTBA1",45,0)
 .. S Z=0 F  S Z=$O(^TMP("IBCECSD",$J,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("IBCECSD",$J,Z,0)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",46,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",47,0)
 .. D EOBERR
"RTN","IBJTBA1",48,0)
 .. Q
"RTN","IBJTBA1",49,0)
 . ;
"RTN","IBJTBA1",50,0)
 . ; Normal EOB processing
"RTN","IBJTBA1",51,0)
 . N VALMCNT
"RTN","IBJTBA1",52,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",53,0)
 . D GETEOB^IBCECSA6(IBI,1)
"RTN","IBJTBA1",54,0)
 . S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,IBI,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("PRCA_EOB",$J,IBI,Z)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",55,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",56,0)
 . D EOBERR
"RTN","IBJTBA1",57,0)
 . Q
"RTN","IBJTBA1",58,0)
 ;
"RTN","IBJTBA1",59,0)
 Q
"RTN","IBJTBA1",60,0)
 ;
"RTN","IBJTBA1",61,0)
MRA2 ;
"RTN","IBJTBA1",62,0)
 N IBD
"RTN","IBJTBA1",63,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",64,0)
 S IBD="EOB/MRA Information"_$S($D(IBCTOF):" ("_$G(IBEOBCT)_" OF "_IBCTOF_")",1:"")
"RTN","IBJTBA1",65,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",30,45),$E(IBSTR,1,2)=">>",IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",66,0)
 S IBD="EOB Type: "_IBTY,IBSTR=$$SETLN^IBJTBA(IBD,"",5,59)
"RTN","IBJTBA1",67,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",68,0)
 S IBD="ICN: "_IBCN,IBSTR=$$SETLN^IBJTBA(IBD,"",10,30)
"RTN","IBJTBA1",69,0)
 S IBD="Patient Resp Amount: "_$S('IBPT:X,1:IBPT)
"RTN","IBJTBA1",70,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,44,35)
"RTN","IBJTBA1",71,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",72,0)
 S IBD="Payer Name: "_IBPY,IBSTR=$$SETLN^IBJTBA(IBD,"",3,40)
"RTN","IBJTBA1",73,0)
 S IBD="Total Allowed Amount: "_$S('IBTA:X,1:IBTA)
"RTN","IBJTBA1",74,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,43,36)
"RTN","IBJTBA1",75,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",76,0)
 S IBD="EOB Date: "_IBPR,IBSTR=$$SETLN^IBJTBA(IBD,"",5,35)
"RTN","IBJTBA1",77,0)
 S IBD="Total Submitted Charges: "_$S('IBTS:X,1:IBTS)
"RTN","IBJTBA1",78,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",79,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",80,0)
 S IBD="Svc From Dt: "_$$DAT1^IBOUTL($P(IBM1,U,10))
"RTN","IBJTBA1",81,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",82,0)
 S IBD="Svc To Dt: "_$$DAT1^IBOUTL($P(IBM1,U,11))
"RTN","IBJTBA1",83,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,54,25)
"RTN","IBJTBA1",84,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",85,0)
 S IBSTR=""
"RTN","IBJTBA1",86,0)
 I IBTY["MRA" S IBD="MRA Review Status: "_IBST,IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",87,0)
 S IBD=$S('$G(IBSPL):"  ",1:"**")_"Reported Payment Amt: "_$S('IBCA:$J(X,"",2),1:$J(+IBCA,"",2))
"RTN","IBJTBA1",88,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,41,37)
"RTN","IBJTBA1",89,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",90,0)
 ;
"RTN","IBJTBA1",91,0)
 ; begin IB*2.0*451
"RTN","IBJTBA1",92,0)
 ; display Trace # and ERA # for every EOB record found. MRAs will not have an ERA #, only a Trace #
"RTN","IBJTBA1",93,0)
 I IBTY]"" D
"RTN","IBJTBA1",94,0)
 . S IBTRACE=$P($G(^IBM(361.1,IBI,0)),U,7)
"RTN","IBJTBA1",95,0)
 . I IBTRACE]"" S IBERAE=$O(^RCY(344.4,"D",IBTRACE,""))
"RTN","IBJTBA1",96,0)
 . S IBD="       ERA #: "_$G(IBERAE),IBSTR=$$SETLN^IBJTBA(IBD,"",1,25)
"RTN","IBJTBA1",97,0)
 . S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",98,0)
 . S IBD="     Trace #: "_$G(IBTRACE),IBSTR=$$SETLN^IBJTBA(IBD,"",1,80) ; Trace # can be up to 50 characters long
"RTN","IBJTBA1",99,0)
 . S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",100,0)
 . S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",101,0)
 ; end IB*2.0*451
"RTN","IBJTBA1",102,0)
 ; 
"RTN","IBJTBA1",103,0)
 I IBTY["MRA",$D(^IBM(361.1,IBI,21)) D
"RTN","IBJTBA1",104,0)
 . S IBD=$TR($J("",35)," ","-")_"Review"_$TR($J("",38)," ","-")
"RTN","IBJTBA1",105,0)
 . S IBSTR=$$SETLN^IBJTBA(IBD,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",106,0)
 . S (IBST,IBCN)=0 F  S IBCN=$O(^IBM(361.1,IBI,21,IBCN)) Q:'IBCN  S X=$G(^(IBCN,0)) D
"RTN","IBJTBA1",107,0)
 .. S IBST=0
"RTN","IBJTBA1",108,0)
 .. S IBD="Review Date: "_$$DAT1^IBOUTL($P(X,U))
"RTN","IBJTBA1",109,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,"",1,30)
"RTN","IBJTBA1",110,0)
 .. S IBD="Reviewed By: "_$P($G(^VA(200,+$P(X,U,2),0)),U)
"RTN","IBJTBA1",111,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",112,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",113,0)
 .. S IBD=0 F  S IBD=$O(^IBM(361.1,IBI,21,IBCN,1,IBD)) Q:'IBD  S IBSTR=$$SETLN^IBJTBA($S('IBST:"Comments: ",1:"")_$G(^(IBD,0)),"",1,$S('IBST:69,1:79)),IBST=1,IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",114,0)
 . I 'IBST D
"RTN","IBJTBA1",115,0)
 .. S IBSTR=$$SETLN^IBJTBA("None","",1,10)
"RTN","IBJTBA1",116,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",117,0)
 ;
"RTN","IBJTBA1",118,0)
MOVE    ;
"RTN","IBJTBA1",119,0)
 ;Display details of any EEOB MOVE/COPY
"RTN","IBJTBA1",120,0)
 I IBTY'["MRA",$D(^IBM(361.1,IBI,101)) D
"RTN","IBJTBA1",121,0)
 .N IEN101,FIRST101 S IEN101=0,FIRST101=1
"RTN","IBJTBA1",122,0)
 .F  S IEN101=$O(^IBM(361.1,IBI,101,IEN101)) Q:'IEN101  D
"RTN","IBJTBA1",123,0)
 ..N IB101,IB102,IBDATE,IBUSER,IBJS,IBJS1,IBJS2,IBORIG,IBDIR
"RTN","IBJTBA1",124,0)
 ..S IB101=$G(^IBM(361.1,IBI,101,IEN101,0)) Q:IB101=""
"RTN","IBJTBA1",125,0)
 ..S IBDATE=$$EXTERNAL^DILFD(361.1101,.01,,$P(IB101,U,1))
"RTN","IBJTBA1",126,0)
 ..S IBUSER=$$EXTERNAL^DILFD(361.1101,.02,,$P(IB101,U,2))
"RTN","IBJTBA1",127,0)
 ..S IBJS=$E($P(IB101,U,3),1,78),IBJS1=$E($P(IB101,U,3),79,100)
"RTN","IBJTBA1",128,0)
 ..S IBDIR=$$EXTERNAL^DILFD(361.1101,.05,,$P(IB101,U,5)) ; kl - added MOVE/COPY field
"RTN","IBJTBA1",129,0)
 ..S IBORIG=$$EXTERNAL^DILFD(361.1101,.04,,$P(IB101,U,4))
"RTN","IBJTBA1",130,0)
 ..I FIRST101 D
"RTN","IBJTBA1",131,0)
 ...S IBSTR=$$SETLN^IBJTBA("MOVE/COPY HISTORY","",1,78),FIRST101=0
"RTN","IBJTBA1",132,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",133,0)
 ..S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",134,0)
 ..S:IBDIR']"" IBDIR="Move"
"RTN","IBJTBA1",135,0)
 ..S IBSTR=$$SETLN^IBJTBA("Date/Time of EEOB "_IBDIR_": "_IBDATE,"",1,78) ; kl
"RTN","IBJTBA1",136,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",137,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBDIR_" of EEOB performed by: "_IBUSER,"",1,78) ; kl
"RTN","IBJTBA1",138,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",139,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBDIR_" Justification Comments: ","",1,78)
"RTN","IBJTBA1",140,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",141,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBJS,"",1,78)
"RTN","IBJTBA1",142,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",143,0)
 ..I IBJS1]"" D
"RTN","IBJTBA1",144,0)
 ...S IBSTR=$$SETLN^IBJTBA(IBJS1,"",1,78)
"RTN","IBJTBA1",145,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",146,0)
 ..I IBORIG]"" D
"RTN","IBJTBA1",147,0)
 ...S IBSTR=$$SETLN^IBJTBA("Original Claim Number: "_IBORIG,"",1,78)
"RTN","IBJTBA1",148,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",149,0)
 ..;Other claim numbers
"RTN","IBJTBA1",150,0)
 ..N SUB,IBOTH,OTEXT
"RTN","IBJTBA1",151,0)
 ..S SUB=0,OTEXT=""
"RTN","IBJTBA1",152,0)
 ..F  S SUB=$O(^IBM(361.1,IBI,101,IEN101,1,SUB)) Q:'SUB  D
"RTN","IBJTBA1",153,0)
 ...S IBOTH=$P($G(^IBM(361.1,IBI,101,IEN101,1,SUB,0)),U) Q:'IBOTH
"RTN","IBJTBA1",154,0)
 ...S IBOTH=$$EXTERNAL^DILFD(361.11016,.01,,IBOTH) Q:IBOTH=""
"RTN","IBJTBA1",155,0)
 ...S OTEXT=OTEXT_","_IBOTH
"RTN","IBJTBA1",156,0)
 ..S OTEXT=$P(OTEXT,",",2,99)
"RTN","IBJTBA1",157,0)
 ..I OTEXT]"" D
"RTN","IBJTBA1",158,0)
 ...S IBSTR=$$SETLN^IBJTBA("Other Claims: "_OTEXT,"",1,78)
"RTN","IBJTBA1",159,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",160,0)
 Q
"RTN","IBJTBA1",161,0)
 ;
"RTN","IBJTBA1",162,0)
EOBERR ; Display information about any 361.1 message storage or filing errors
"RTN","IBJTBA1",163,0)
 N ERRTXT,DASHES,Z
"RTN","IBJTBA1",164,0)
 S DASHES="---------------------------------------------------------------------"
"RTN","IBJTBA1",165,0)
 I '$O(^IBM(361.1,IBI,"ERR",0)) Q
"RTN","IBJTBA1",166,0)
 S IBSTR=$$SETLN^IBJTBA("VistA could not match all of the Line Level data received in the EEOB","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",167,0)
 S IBSTR=$$SETLN^IBJTBA("(835 Record 40) to the claim in VistA.","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",168,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",169,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBI,"ERR",Z)) Q:'Z  D
"RTN","IBJTBA1",170,0)
 .S ERRTXT=$G(^IBM(361.1,IBI,"ERR",Z,0))
"RTN","IBJTBA1",171,0)
 .I ERRTXT["##RAW DATA" S ERRTXT=DASHES
"RTN","IBJTBA1",172,0)
 .S IBSTR=$$SETLN^IBJTBA(ERRTXT,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",173,0)
 Q
"RTN","IBY488PO")
0^^B892589^n/a
"RTN","IBY488PO",1,0)
IBY488PO ;BAA/GEF - Post-Installation for IB patch 488 ;19-APR-2011
"RTN","IBY488PO",2,0)
 ;;2.0;INTEGRATED BILLING;**488**;15-APR-14;Build 184
"RTN","IBY488PO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY488PO",4,0)
 D RIT
"RTN","IBY488PO",5,0)
 Q
"RTN","IBY488PO",6,0)
 ;
"RTN","IBY488PO",7,0)
RIT ; recompile billing screen templates
"RTN","IBY488PO",8,0)
 N X,Y,DMAX,IBN
"RTN","IBY488PO",9,0)
 D MES^XPDUTL("Recompiling Input Templates for Billing Screens ...")
"RTN","IBY488PO",10,0)
 F IBN=1:1:9,"10","102","10H" D
"RTN","IBY488PO",11,0)
 .S X="IBXS"_$S(IBN=10:"A",IBN="102":"A2",IBN="10H":"AH",1:IBN)
"RTN","IBY488PO",12,0)
 .S Y=$$FIND1^DIC(.402,,"X","IB SCREEN"_IBN,"B")
"RTN","IBY488PO",13,0)
 .S DMAX=$$ROUSIZE^DILF
"RTN","IBY488PO",14,0)
 .I Y D EN^DIEZ
"RTN","IBY488PO",15,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY488PO",16,0)
 Q
"SEC","^DD",355.93,355.93,.05,9)

"UP",399,399.0304,-1)
399^CP
"UP",399,399.0304,0)
399.0304
"UP",399,399.042,-1)
399^RC
"UP",399,399.042,0)
399.042
"VER")
8.0^22.0
"^DD",36,36,3.02,0)
EDI ID NUMBER - PROF^FX^^3;2^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X I $D(X) K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.02,3)
Answer must be 1-30 characters. PRNT values are not allowed.
"^DD",36,36,3.02,21,0)
^^2^2^3140204^
"^DD",36,36,3.02,21,1,0)
This is the ID number used to identify the Payer on professional
"^DD",36,36,3.02,21,2,0)
claim transmissions. PRNT values are not valid Payer IDs.
"^DD",36,36,3.02,"DT")
3140318
"^DD",36,36,3.04,0)
EDI ID NUMBER - INST^FX^^3;4^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X I $D(X) K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.04,3)
Answer must be 1-30 characters. PRNT values are not allowed.
"^DD",36,36,3.04,21,0)
^^2^2^3140210^
"^DD",36,36,3.04,21,1,0)
This is the ID number used to identify the Payer on institutional
"^DD",36,36,3.04,21,2,0)
claim transmissions. PRNT values are not valid Payer IDs.
"^DD",36,36,3.04,"DT")
3140318
"^DD",355.93,355.93,.05,0)
STREET ADDRESS^RFX^^0;5^S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<1)!$$BADADD^IBCEP8B(X) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.05,3)
Answer must be 1-30 characters in length. Cannot be a post office box.
"^DD",355.93,355.93,.05,5,1,0)
355.93^.02^3
"^DD",355.93,355.93,.05,21,0)
^.001^3^3^3130128^^^
"^DD",355.93,355.93,.05,21,1,0)
This is the street address of the non-VA facility that rendered
"^DD",355.93,355.93,.05,21,2,0)
the care that is being billed by the VA.  It is only valid for FACILITY
"^DD",355.93,355.93,.05,21,3,0)
providers. It cannot be a post office box.
"^DD",355.93,355.93,.05,"DT")
3140311
"^DD",355.93,355.93,.08,0)
ZIP CODE^RFX^^0;8^K:$L(X)>10!($L(X)<9)!'((X?9N)!(X?5N1"-"4N))!($E(X,$L(X)-3,$L(X))="0000") X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.08,3)
Answer must be nine (999999999) or ten digits (99999-9999) in length. The last 4 digits cannot be "0000".
"^DD",355.93,355.93,.08,5,1,0)
355.93^.02^6
"^DD",355.93,355.93,.08,21,0)
^.001^4^4^3140312^^^^
"^DD",355.93,355.93,.08,21,1,0)
This is the zip code of the non-VA facility that rendered the care that
"^DD",355.93,355.93,.08,21,2,0)
is being billed by the VA.  It is only valid for FACILITY providers. The
"^DD",355.93,355.93,.08,21,3,0)
ZIP code must be a nine digit ZIP code number and not ending in "0000"
"^DD",355.93,355.93,.08,21,4,0)
(four consecutive zeros).
"^DD",355.93,355.93,.08,"DT")
3140312
"^DD",355.93,355.93,1.01,0)
P&C CONTACT NAME^F^^1;1^K:$L(X)>30!($L(X)<3) X
"^DD",355.93,355.93,1.01,.1)
P&C Contact Name
"^DD",355.93,355.93,1.01,3)
Enter the Contact Person (3-30 characters) at this Lab/Facility (Last Name,First Name).
"^DD",355.93,355.93,1.01,21,0)
^^2^2^3130125^
"^DD",355.93,355.93,1.01,21,1,0)
For use with property and casualty claims, this is the name of the contact
"^DD",355.93,355.93,1.01,21,2,0)
person at this Lab/Facility (Last Name, First Name).
"^DD",355.93,355.93,1.01,"DT")
3130125
"^DD",355.93,355.93,1.02,0)
P&C CONTACT PHONE NUMBER^F^^1;2^K:$L(X)>15!($L(X)<10) X
"^DD",355.93,355.93,1.02,.1)
P&C Contact Phone Number
"^DD",355.93,355.93,1.02,1,0)
^.1
"^DD",355.93,355.93,1.02,1,1,0)
^^TRIGGER^355.93^1.03
"^DD",355.93,355.93,1.02,1,1,1)
Q
"^DD",355.93,355.93,1.02,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.93,D0,1)):^(1),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),1)),DIV=X S $P(^(1),U,3)=DIV,DIH=355.93,DIG=1.03 D ^DICR
"^DD",355.93,355.93,1.02,1,1,"%D",0)
^.101^1^1^3100915^^^^
"^DD",355.93,355.93,1.02,1,1,"%D",1,0)
If Contact Phone is deleted, extension will be deleted also.
"^DD",355.93,355.93,1.02,1,1,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,1.02,1,1,"DELETE VALUE")
S X=""
"^DD",355.93,355.93,1.02,1,1,"DT")
3100810
"^DD",355.93,355.93,1.02,1,1,"FIELD")
CONTACT PHONE EXTENSION
"^DD",355.93,355.93,1.02,3)
Answer must be 10-15 characters in length.
"^DD",355.93,355.93,1.02,21,0)
^^2^2^3130125^
"^DD",355.93,355.93,1.02,21,1,0)
For use with property and casualty claims, this is the area code and phone
"^DD",355.93,355.93,1.02,21,2,0)
number of the contact person at this facility.
"^DD",355.93,355.93,1.02,"AUDIT")
n
"^DD",355.93,355.93,1.02,"DT")
3130125
"^DD",355.93,355.93,1.03,0)
P&C CONTACT PHONE EXTENSION^NJ10,0^^1;3^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",355.93,355.93,1.03,.1)
P&C Contact Phone Extension
"^DD",355.93,355.93,1.03,3)
Type a number between 0 and 9999999999, 0 decimal digits.
"^DD",355.93,355.93,1.03,5,1,0)
355.93^1.02^1
"^DD",355.93,355.93,1.03,21,0)
^^2^2^3130125^
"^DD",355.93,355.93,1.03,21,1,0)
For use with property and casualty claims, this is the phone extension of
"^DD",355.93,355.93,1.03,21,2,0)
the contact person at this facility, if known.
"^DD",355.93,355.93,1.03,"AUDIT")
n
"^DD",355.93,355.93,1.03,"DT")
3130125
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.03^2
"^DD",364.5,364.5,.06,5,2,0)
364.5^.04^1
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3071126
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>40!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1^^0
"^DD",364.6,364.6,.1,3)
Answer must be 1-40 characters in length
"^DD",364.6,364.6,.1,21,0)
^^2^2^3071126^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
3080310
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,27,0)
FORCE CLAIM TO PRINT^*S^0:NO FORCED PRINT;1:FORCE LOCAL PRINT;2:*FORCE CLEARINGHOUSE PRINT;^TX;8^Q
"^DD",399,399,27,3)
Enter 0 to transmit the claim electronically to the payer.  Enter 1 to print the claim locally.
"^DD",399,399,27,5,1,0)
399^.21^3
"^DD",399,399,27,5,2,0)
399^101^3
"^DD",399,399,27,5,3,0)
399^102^4
"^DD",399,399,27,5,4,0)
399^.21^4
"^DD",399,399,27,5,5,0)
399^101^5
"^DD",399,399,27,12)
Print to Clearinghouse is no longer an available option.
"^DD",399,399,27,12.1)
S DIC("S")="I Y'=2"
"^DD",399,399,27,21,0)
^^2^2^3140314^^
"^DD",399,399,27,21,1,0)
This field determines whether a claim is transmitted electronically
"^DD",399,399,27,21,2,0)
(0) or printed locally (1).
"^DD",399,399,27,"DT")
3140314
"^DD",399,399,236,0)
HOMEBOUND^S^0:NO;1:YES;^U2;14^Q
"^DD",399,399,236,3)
Enter yes if patient was homebound for purchased labs.
"^DD",399,399,236,21,0)
^^3^3^3140129^^
"^DD",399,399,236,21,1,0)
This is to indicate that the patient is homebound or
"^DD",399,399,236,21,2,0)
institutionalized. Refer to MEDICARE regulations on when to
"^DD",399,399,236,21,3,0)
use this field.
"^DD",399,399,236,"DT")
3140129
"^DD",399,399,237,0)
DATE LAST SEEN^D^^U2;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,237,3)
Enter the last date the patient was seen if care was provided by an outside provider of PT/OT or routine foot care.
"^DD",399,399,237,21,0)
^^2^2^3140129^
"^DD",399,399,237,21,1,0)
This is the date a patient was last seen. Refer to MEDICARE
"^DD",399,399,237,21,2,0)
regulations on when to use this field.
"^DD",399,399,237,"DT")
3140129
"^DD",399,399,238,0)
SPECIAL PROGRAM INDICATOR^S^01:EPSDT/CHAP;02:Phys Handicapped Children Program;03:Special Fed Funding;05:Disability;07:Induced Abortion - Danger to Life;08:Induced Abortion - Rape or Incest;09:2nd Opinion/Surgery;^U2;16^Q
"^DD",399,399,238,3)
Enter the code indicating the Special Program under which the patient services were rendered.
"^DD",399,399,238,21,0)
^^2^2^3140129^
"^DD",399,399,238,21,1,0)
This is the Special Program with which a claim is associated. Refer to
"^DD",399,399,238,21,2,0)
MEDICARE regulations to decide when to use this field.
"^DD",399,399,238,"DT")
3140129
"^DD",399,399,261,0)
PROPERTY/CASUALTY CLAIM NUMBER^FX^^U4;2^K:$L(X)>30!($L(X)<1)!($TR(X," ")="") X
"^DD",399,399,261,3)
Answer must be 1-30 characters in length and not all spaces.
"^DD",399,399,261,21,0)
^.001^1^1^3101019^^
"^DD",399,399,261,21,1,0)
This is a payer-assigned claim number for a property and casualty claim. 
"^DD",399,399,261,"DT")
3140427
"^DD",399,399,459,0)
FORM LOC 19-UNSPECIFIED DATA^F^^UF31;3^K:$L(X)>80!($L(X)<1) X
"^DD",399,399,459,.1)
CMS-1500 Box 19
"^DD",399,399,459,3)
Answer must be 1-80 characters in length. Only 71 Characters will print.
"^DD",399,399,459,21,0)
^^4^4^3140225^
"^DD",399,399,459,21,1,0)
This is an 71 character free text field that will print in Box 19 
"^DD",399,399,459,21,2,0)
of the CMS-1500.  Use this field to enter additional Payer required 
"^DD",399,399,459,21,3,0)
IDs in the format of:
"^DD",399,399,459,21,4,0)
Qualifier<no space>ID number<3 spaces>Qualifier<no space>ID number.
"^DD",399,399,459,23,0)
^^6^6^3140225^^
"^DD",399,399,459,23,1,0)
This returns the Paperwork Attachment
"^DD",399,399,459,23,2,0)
    Information in the following format:
"^DD",399,399,459,23,3,0)
   PWKNNFX12348907CHEY<3 Spaces>Next set if more than one on claim
"^DD",399,399,459,23,4,0)
PWK is the qualifier for data, followed by the appropriate Report Type 
"^DD",399,399,459,23,5,0)
Code, the appropriate Transmission Type Code, then the Attachment Control 
"^DD",399,399,459,23,6,0)
Number.  Do not enter spaces between qualifiers and data.
"^DD",399,399,459,"DT")
3140225
"^DD",399,399.0304,19,0)
PURCHASED COST^NJ10,2^^0;19^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999.99)!(X<0) X
"^DD",399,399.0304,19,.1)
Purchased Cost
"^DD",399,399.0304,19,3)
Type a dollar amount between 0 and 9999999.99, 2 decimal digits.
"^DD",399,399.0304,19,21,0)
^.001^2^2^3100924^^
"^DD",399,399.0304,19,21,1,0)
This is the actual amount the VA paid for a service provided
"^DD",399,399.0304,19,21,2,0)
to a VA patient at a NON-VA facility or provider.
"^DD",399,399.0304,19,"DT")
3140319
"^DD",399,399.0304,50.03,0)
ATTENDING NOT HOSPICE EMPLOYEE^S^1: ATTENDING PHYSICIAN IS NOT A HOSPICE EMPLOYEE;^AUX;3^Q
"^DD",399,399.0304,50.03,.1)
Attending not Hospice Employee
"^DD",399,399.0304,50.03,3)
Enter a 1 if billing for hospice care and the attending physician is not employed by the hospice.
"^DD",399,399.0304,50.03,21,0)
^^2^2^3140325^
"^DD",399,399.0304,50.03,21,1,0)
This is the flag that indicates that an attending physician for hospice
"^DD",399,399.0304,50.03,21,2,0)
care charges was not employed by the hospice.
"^DD",399,399.0304,50.03,"DT")
3140325
"^DD",399,399.0304,50.07,0)
EPSDT FLAG^S^1:YES;^AUX;7^Q
"^DD",399,399.0304,50.07,.1)
EPSDT Flag
"^DD",399,399.0304,50.07,3)
Enter a 1 if the item being billed is EPSDT related
"^DD",399,399.0304,50.07,21,0)
^^3^3^3060908^
"^DD",399,399.0304,50.07,21,1,0)
This is the field to indicate a service is EPSDT related (Early and
"^DD",399,399.0304,50.07,21,2,0)
Periodic Screen for Diagnosis and Treatment of children).
"^DD",399,399.0304,50.07,21,3,0)
For printed claims, this data will print in CMS-1500 box 24H.
"^DD",399,399.0304,50.07,"DT")
3140319
"^DD",399,399.0304,50.08,0)
SERVICE LINE COMMENT^F^^AUX;8^K:$L(X)>59!($L(X)<1) X
"^DD",399,399.0304,50.08,.1)
Service Line Comment
"^DD",399,399.0304,50.08,3)
Answer must be 1-59 characters in length
"^DD",399,399.0304,50.08,21,0)
^^12^12^3060829^
"^DD",399,399.0304,50.08,21,1,0)
Enter a free text comment as supplemental information associated
"^DD",399,399.0304,50.08,21,2,0)
with this procedure.  This text will print up to 59 characters
"^DD",399,399.0304,50.08,21,3,0)
across the shaded line of Box 24 of the CMS-1500 form.
"^DD",399,399.0304,50.08,21,4,0)
 
"^DD",399,399.0304,50.08,21,5,0)
The following qualifiers can be entered after the text when 
"^DD",399,399.0304,50.08,21,6,0)
reporting NDC units when the NDC Units are required in addition 
"^DD",399,399.0304,50.08,21,7,0)
to the HCPCS units:
"^DD",399,399.0304,50.08,21,8,0)
 
"^DD",399,399.0304,50.08,21,9,0)
F2   International Unit
"^DD",399,399.0304,50.08,21,10,0)
GR   Gram
"^DD",399,399.0304,50.08,21,11,0)
ML   Milliliter
"^DD",399,399.0304,50.08,21,12,0)
UN   Unit
"^DD",399,399.0304,50.08,"DT")
3140319
"^DD",399,399.0304,50.09,0)
SERVICE LINE COMMENT QUALIFIER^F^^AUX;9^K:$L(X)>7!($L(X)<1) X
"^DD",399,399.0304,50.09,.1)
Service Line Comment Qualifier
"^DD",399,399.0304,50.09,3)
Answer must be 1-7 characters in length
"^DD",399,399.0304,50.09,21,0)
^^20^20^3060829^
"^DD",399,399.0304,50.09,21,1,0)
Enter an optional free text Qualifier.
"^DD",399,399.0304,50.09,21,2,0)
 
"^DD",399,399.0304,50.09,21,3,0)
The following qualifiers should be used when reporting the following
"^DD",399,399.0304,50.09,21,4,0)
services.
"^DD",399,399.0304,50.09,21,5,0)
 
"^DD",399,399.0304,50.09,21,6,0)
  7    Anesthesia information
"^DD",399,399.0304,50.09,21,7,0)
  ZZ   Narrative description of unspecified code
"^DD",399,399.0304,50.09,21,8,0)
  N4   National Drug Codes (NDC)
"^DD",399,399.0304,50.09,21,9,0)
  VP   Vendor Product Number Health Industry Business Communications 
"^DD",399,399.0304,50.09,21,10,0)
       Council (HIBCC) Labeling Standard
"^DD",399,399.0304,50.09,21,11,0)
  OZ   Product Number Health Care Uniform Code Council - Global Trade
"^DD",399,399.0304,50.09,21,12,0)
       Item Number (GTIN)
"^DD",399,399.0304,50.09,21,13,0)
  CTR  Contract rate
"^DD",399,399.0304,50.09,21,14,0)
 
"^DD",399,399.0304,50.09,21,15,0)
If required to report other supplemental information not listed above, 
"^DD",399,399.0304,50.09,21,16,0)
follow payer instructions for the use of a qualifier for the
"^DD",399,399.0304,50.09,21,17,0)
information being reported.  When reporting a service that does not
"^DD",399,399.0304,50.09,21,18,0)
have a qualifier, then leave this field blank.  In this case, two
"^DD",399,399.0304,50.09,21,19,0)
blank spaces will be inserted on the printed 1500 form before the
"^DD",399,399.0304,50.09,21,20,0)
service line supplemental information is displayed.
"^DD",399,399.0304,50.09,"DT")
3140319
"^DD",399,399.042,.03,0)
UNITS OF SERVICE^RNJ6,0X^^0;3^K:X'?1.3N X I $D(X) S:X=0 X=1 I X>800 K X
"^DD",399,399.042,.03,1,0)
^.1
"^DD",399,399.042,.03,1,1,0)
399.042^TC^MUMPS
"^DD",399,399.042,.03,1,1,1)
D 31^IBCU2
"^DD",399,399.042,.03,1,1,2)
D 32^IBCU2
"^DD",399,399.042,.03,1,1,"%D",0)
^^1^1^2940214^^^
"^DD",399,399.042,.03,1,1,"%D",1,0)
Adds/deletes total charges.
"^DD",399,399.042,.03,1,1,"DT")
2920921
"^DD",399,399.042,.03,3)
Enter the number of units of service (accommodation days, miles, treatments, etc.) rendered to or for this patient for this revenue code. Cannot be greater than 800.
"^DD",399,399.042,.03,21,0)
^.001^3^3^3140414^^^^
"^DD",399,399.042,.03,21,1,0)
This is the number of day of inpatient care or the number of outpatient
"^DD",399,399.042,.03,21,2,0)
visits for this revenue code.  It will be multiplied by the
"^DD",399,399.042,.03,21,3,0)
CHARGES field to determine the TOTAL charges for this revenue code.
"^DD",399,399.042,.03,"DT")
3140505
"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%",0)
^1.005^^
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",8891,6)
^479
**END**
**END**

